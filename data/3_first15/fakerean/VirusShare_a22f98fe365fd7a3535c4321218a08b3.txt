push
mov
push
push
andl
andl
lea
push
call
sub
neg
sbb
inc
leave
ret
push
mov
push
push
mov
xor
sub
mov
and
cmp
mov
jne
sub
jmp
xor
roll
inc
mov
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
push
lea
call
test
je
call
jmp
xor
pop
pop
ret
push
mov
sub
push
movl
mov
xor
push
pop
div
push
pop
mov
sar
mov
xor
push
pop
div
push
pop
sub
push
pop
shl
or
mov
mov
mov
pushl
call
mov
pop
leave
ret
push
mov
sub
push
push
push
push
call
mov
push
push
push
push
call
add
cmp
jne
mov
mov
movl
jmp
mov
xor
mov
mov
xor
push
pop
div
mov
mov
shr
mov
mov
xor
push
pop
div
mov
mov
sar
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
mov
push
mov
mov
call
pop
cmp
je
mov
mov
xor
mov
div
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
cmpl
je
mov
mov
jmp
movl
mov
xor
divl
mov
mov
add
mov
cmpl
jne
mov
mov
mov
add
mov
call
push
push
call
pop
pop
xor
jmp
push
push
call
xor
inc
pop
pop
leave
ret
int3
int3
int3
in
push
push
jge
adc
and
push
mov
clc
mov
sbb
xor
test
enter
mov
loopne,pt
je
sub
aaa
arpl
dec
stc
sub
or
js
mov
jns
shlb
jg
mov
xor
add
push
push
mov
scas
push
xchg
adc
mov
pop
mov
rcrl
in
leave
je
mov
mov
pop
pusha
and
lds
int
xchg
js
xchg
dec
sbb
pop
inc
js
mov
scas
adc
sbb
loopne
add
push
imul
push
adc
into
scas
int3
sub
mov
aam
push
sti
pop
sti
aam
dec
xchg
out
pop
fisttpll
arpl
roll
mov
test
sub
and
jl
adc
ja
cmpl
cmp
nop
and
call
inc
test
adc
pop
sahf
inc
xchg
in
andb
je
rcl
dec
std
push
pop
xchg
xchg
arpl
sti
pop
pop
mov
adc
popa
mov
stos
in
ds
hlt
add
enter
sbb
mov
push
add
jae
mov
xor
pop
or
enter
mov
sbb
test
out
dec
xor
mov
or
inc
lea
xchg
push
xchg
xchg
fs
jbe
xor
pushf
pop
ffree
cltd
aaa
das
jp
test
lret
stc
fcoms
neg
cmp
ds
mov
into
sahf
dec
mov
test
or
shll
dec
pop
dec
xor
xchg
push
xchg
pusha
mov
out
xlat
in
pushf
int
cmp
add
and
fisubrl
lods
loop
test
sub
xchg
jg
and
and
mov
ja
dec
scas
push
or
xchg
xor
movl
sub
sub
sarl
leave
xchg
inc
xor
push
xchg
dec
dec
mov
loop
fcmovnb
push
fsubrl
or
jp
add
cltd
inc
mov
shl
or
gs
stos
fstl
push
sbb
jmp
or
test
sbb
in
cbtw
and
andl
or
imul
xor
dec
xor
add
sbb
cmp
ret
test
pop
dec
or
sub
mov
jo
cmp
inc
cmpsb
push
or
inc
stc
movsb
orl
fwait
popf
pop
clc
clc
or
movsb
rol
pushf
fisttpl
mov
and
insl
sbbb
shll
rcrb
sbb
cmp
popa
jb
int3
mov
xchg
or
mov
les
push
testb
or
test
arpl
ja
push
inc
mov
jp
outsb
jp
cltd
pop
sub
fwait
jae
aad
hlt
or
das
mov
pop
ja
xor
pop
negb
mov
rcll
jo
rcll
lods
test
jno
ret
mov
sbb
enter
stos
icebp
fisttpll
adc
rolb
jle
icebp
mov
sbb
sub
cmp
or
sbb
dec
aad
push
sbb
add
and
or
inc
sub
xchg
jp
rol
iret
add
and
and
sbb
mov
arpl
gs
sub
out
inc
xchg
cmc
add
push
xchg
inc
fisubrs
mov
adc
dec
adc
aam
xor
pop
lods
lock
stos
mov
movups
jecxz
mov
sbb
adc
cmp
out
jns
or
or
xor
push
push
push
xor
pop
pushw
call
cmp
xchg
cld
lea
outsb
ljmp
cli
cmc
adc
add
inc
push
decl
idivl
and
ljmp
push
xchg
jne
scas
mov
pop
mov
std
mov
jae
xor
pop
stc
cmp
inc
sti
adc
cmp
adc
test
ret
icebp
mov
loope
jb
lds
test
ret
or
add
pop
hlt
pop
and
mov
int3
fsts
lret
int
jmp
fdivl
jns
adc
sbb
jb
ss
cmp
cmp
adc
push
xchg
movsb
push
jecxz
das
sub
fcomip
clc
stc
pop
mov
dec
push
sarl
dec
jnp
inc
push
insl
ret
jo
jecxz
cmc
adcb
lret
cmc
adc
mov
xlat
fwait
out
ss
daa
fcompl
ficoms
subl
test
add
and
out
and
cmp
mov
gs
cs
xchg
push
sbb
xchg
and
adc
sahf
hlt
xor
outsl
sbb
jecxz
jecxz
je
xor
into
xor
adc
mov
xor
xor
mov
mov
lret
and
hlt
pop
stos
stc
pop
rcrl
add
mov
nop
sub
mov
mov
xchg
pushf
or
lcall
inc
pop
pop
dec
shlb
sub
loopne
sti
in
pop
pop
adc
add
cltd
test
sti
jae
jno
sub
and
jbe
mov
stc
mov
clc
pop
xor
popa
xchg
test
inc
cmp
sbb
mov
adc
xor
fiaddl
aam
xor
rcrb
push
dec
out
test
sub
push
sbb
push
or
add
sahf
daa
test
cltd
sub
icebp
dec
flds
loopne
push
mov
jge
ljmp
mov
lds
push
es
xor
lret
int3
mov
add
xchg
pop
loop
clc
cli
lods
pop
cli
lds
xor
sub
mov
cwtl
insb
xchg
jae
outsb
ret
into
decl
cld
or
repz
icebp
ret
xchg
and
negb
imul
rcrl
call
cmp
adc
push
or
int3
xchg
into
dec
scas
mull
lcall
add
adc
in
push
cmp
xchg
adc
les
pop
in
mov
push
and
lahf
sarl
and
popa
mov
push
dec
sub
sbb
jg
fiaddl
popa
cmc
mov
je
hlt
adc
scas
inc
jbe
arpl
bound
outsb
ja
cmp
pop
loop
cmp
inc
scas
dec
hlt
rcrl
out
fstenv
jge
fildll
sti
push
inc
mov
or
pop
pop
call
and
cmp
adc
xlat
xchg
add
pop
roll
dec
mov
or
inc
push
push
xchg
add
gs
dec
or
gs
push
mov
sub
mov
jbe
xor
fnstsw
sbb
in
mov
jno
cmp
adc
pop
loop
loope
repz
in
xchg
jo
in
cli
imul
fildll
mov
or
dec
mov
dec
std
push
push
jle
insb
sbb
pop
fwait
andb
shrl
xchg
aaa
je
loopne
jns
xor
cmpb
push
popl
inc
js
xor
pop
mov
jg
xor
addr16
jbe
jmp
lret
dec
dec
fsubl
dec
out
out
aam
out
fmuls
rep
mov
cmpsl
mov
rorb
cmp
jbe
add
shll
sbb
pop
aam
mov
adc
inc
ja
clc
imul
pop
in
cmpsl
add
pop
ljmp
subl
lock
sbb
shr
pop
sahf
pushf
in
push
pop
aaa
in
and
mov
sbb
pop
xor
ds
or
push
in
mov
pop
dec
repz
jnp
ficoms
fldt
jg
rclb
adc
xchg
sar
outsb
pushf
out
cmp
pop
push
cs
clc
jecxz
hlt
mov
inc
or
popa
fsts
pop
xchg
push
adc
or
test
jge
push
xchg
sub
pop
cmc
cmp
dec
call
rclb
into
shrl
jae
lea
xor
in
jno
pop
test
mov
xchg
pop
lds
filds
add
or
jnp
movsb
jo
lock
push
leave
adc
pop
cmc
pop
mov
or
xor
jmp
pop
bound
lea
sbb
cmp
cmp
cmp
sbb
les
arpl
and
fwait
dec
ficoms
test
and
mov
mov
xor
leave
movb
pushf
test
adc
lods
aam
sbb
sbb
jecxz
mov
inc
cmp
cltd
ret
daa
nop
in
sbb
jae
outsb
or
int3
out
jo
rcr
subl
fsubrl
outsl
or
js
sub
test
and
imul
dec
popa
ret
cmpb
test
add
sahf
lds
mov
inc
lods
cmp
inc
fwait
sbb
idiv
cmp
sub
leave
imulb
jecxz
xor
mov
lea
scas
or
or
icebp
mov
fdivl
and
adc
mov
push
adc
hlt
mov
imulb
lcall
xchg
imul
jbe
loope
std
xor
pushf
mov
cmp
lret
push
mov
ds
jnp
cmp
fwait
xor
sub
scas
mov
and
fidivrs
sbb
lret
jo
int3
or
jns
daa
adc
fwait
aas
cmp
cltd
xchg
pop
sub
cmp
in
add
jmp
pop
int
push
out
and
imul
xor
das
lea
ret
popl
dec
ljmp
loope
cs
dec
push
pusha
test
frstor
out
mov
add
mov
mov
push
and
fcomp
sbbl
repnz
dec
adc
jbe
xchg
jo
fstpl
subl
call
or
rcll
outsb
stos
jbe
iret
xchg
add
push
fmull
adc
push
lock
rcr
cmp
mov
in
lcall
pusha
imul
sti
sbb
and
arpl
outsb
stc
dec
pop
cltd
lock
lret
popa
push
pop
xlat
dec
fcmovne
test
jg
packssdw
sub
adc
inc
mov
mov
popa
xchg
movsl
mov
xlat
xchg
sbb
inc
sub
cmpsb
jae
jo
or
lods
aas
sbb
push
cmpsl
cmpsb
sbb
scas
inc
sub
push
jecxz
aaa
jmp
hlt
jb
push
mov
daa
xchg
or
adc
pop
mov
sub
jae
in
scas
pop
leave
pop
push
dec
lahf
stos
pusha
aaa
mov
js
dec
adc
sbb
mov
dec
fnstenv
gs
lret
add
loop
sbb
jb
addl
mov
push
mov
test
les
in
lods
addr16
hlt
xor
repz
sbb
fimuls
aas
inc
leave
scas
rol
push
pop
mov
jae
das
dec
sbb
jle
in
xchg
adc
cmp
mov
cmp
shrb
into
dec
imul
stos
leave
in
call
jbe
data16
outsb
sub
add
clc
pop
jbe
pop
movsb
outsl
sbb
xorb
inc
fcomi
dec
stc
and
mov
pop
mov
insl
sub
mov
ljmp
mov
mov
mov
test
push
fstpt
mov
and
mov
in
jno
sti
sbb
dec
xchg
popa
dec
cmp
pushf
pop
ret
jle
cmp
or
mov
mov
mov
scas
ficoms
js
jp
mov
jo
cli
sbb
pop
sbb
insl
sar
and
out
push
inc
gs
pop
call
addr16
mov
leave
dec
mov
cmp
and
mov
fwait
pop
call
dec
ficoms
sbb
cmp
xchg
sbb
sbb
xor
popa
rol
sbb
ret
mov
add
testl
call
neg
call
shlb
xor
mov
push
sub
adc
sub
jp
push
sub
add
mov
mov
iret
jno
pushf
in
sbb
add
add
mov
cwtl
mov
cmp
outsl
cwtl
xor
pop
sub
mov
pop
fcmove
imul
pop
cmp
mov
insb
add
xchg
maskmovq
notl
cs
mov
insb
ds
mov
mov
pop
fldenv
fwait
adc
adc
cmc
inc
jge
jp
inc
out
pop
clc
icebp
mov
push
add
jo
arpl
or
mov
rdmsr
pop
sub
add
out
cwtl
dec
push
in
adc
dec
dec
sub
xchg
stos
jnp
into
mov
call
stc
mov
ljmp
out
xor
fmulp
push
sub
imul
and
and
lock
aam
sub
lds
inc
call
pop
pop
and
sub
xchg
xor
insl
xchg
ja
pop
pusha
stc
sub
pop
xor
adc
xor
mov
mov
jno
lret
push
nop
adc
push
scas
mov
jns
test
icebp
cmc
xor
imul
jl
or
out
jne
mov
pop
push
xchg
or
sub
or
ds
xchg
mov
xor
sub
aaa
dec
rcrl
xor
out
icebp
jbe
pop
xor
jno
cli
sarl
gs
scas
push
dec
push
push
ret
sub
enter
shrl
and
jns
jp
pushf
ljmp
sbbl
movsb
mov
andb
inc
icebp
mov
cmp
out
faddl
lcall
add
sbb
xor
sub
addr16
in
fmull
dec
rcll
jp
rcrl
adc
inc
add
jnp
sbb
dec
mov
sub
sub
mov
filds
shlb
lret
jne
shlb
mov
mov
mov
sub
dec
test
mov
add
adc
push
add
popf
mov
inc
lret
in
fdiv
pop
jne
sbb
cmpsl
xor
sbb
adc
ljmp
adc
aad
cld
jl
add
stos
ljmp
pop
mov
push
inc
jge
cmp
mov
adc
pushf
popa
adc
and
ds
dec
cli
ljmp
dec
ss
sbb
mov
sarl
lcall
loop
orl
cmp
jae
and
icebp
lret
addr16
sbb
cld
dec
popf
or
cmp
push
mov
scas
inc
notb
inc
fnstcw
sub
push
or
pusha
inc
adc
push
cmp
lahf
test
pop
dec
adc
cld
mov
mov
inc
jecxz
ret
sub
mov
shrl
push
addr16
mov
iret
push
jne
adc
mov
cmp
mov
sbbb
out
std
bound
add
inc
insl
sbb
call
stos
xchg
hlt
imul
idivl
jle
pop
mov
jle
bound
inc
ja
pop
repnz
ret
ljmp
int3
add
add
cli
mov
push
outsl
sub
xor
jnp
pop
pop
fwait
mov
addr16
cmp
cmp
sub
movsb
cltd
icebp
xor
xor
icebp
movsl
mov
add
ret
es
je
and
pop
jnp
sub
fistpl
cld
push
lcall
sarb
mov
repz
hlt
push
mov
ficompl
les
mov
inc
aam
inc
jg
inc
dec
outsb
jno
jecxz
cmp
mov
pop
lret
out
mov
xor
push
xor
imul
inc
jae
cltd
sbb
mov
xchg
jge
adc
or
nop
testl
pop
jg
inc
ret
cmp
jne
jg
decb
pusha
xchg
mov
jnp
push
dec
dec
sbb
cmpb
mov
loope
mov
loop
imul
int3
dec
rclb
add
icebp
xchg
lahf
imul
subb
insb
out
dec
dec
inc
jae
cltd
mov
dec
xchg
aam
fiaddl
or
push
std
or
xchg
add
ss
movsb
add
cmp
xchg
fadds
jbe
sub
inc
pop
test
sbb
inc
aad
fninit
lret
int
sbb
and
loop
mov
mov
idiv
lcall
pop
fldenv
or
imul
ret
jle
add
jb
rcrb
mov
sub
jge
adcl
xor
adc
repnz
or
cmpsb
orb
leave
scas
jmp
or
dec
test
xchg
fdivrs
mov
xchg
jle
xor
xchg
mov
mov
loop
shll
loop
add
jne
xchg
aad
dec
repnz
in
pop
and
add
out
in
adc
mov
push
sub
arpl
fcomp
loop
mov
cmp
mov
int
sbb
and
sub
xchg
rol
jne
jl
scas
outsl
dec
test
dec
iret
dec
jns
pop
loopne
aaa
and
xchg
mov
jo
mov
fbstp
lret
xchg
push
lock
jle
fnsave
enter
mov
int
fidivrs
jecxz
jle
and
ljmp
jnp
xor
xor
int
cs
loop,pt
jp
inc
sub
test
xchg
les
jecxz
icebp
cs
jecxz
cmpsl
es
xchg
inc
push
inc
dec
loop
mov
and
int3
xchg
stos
mov
push
cmp
sub
fdiv
push
stc
push
or
push
push
jge
xchg
mov
das
dec
jl
pop
mov
xlat
inc
sub
jmp
pop
in
in
filds
mov
xchg
popa
ljmp
jg
xchg
cs
sti
add
imul
mov
xchg
cwtl
dec
popf
dec
push
daa
mov
push
popa
fnstsw
pop
je
mov
add
aaa
sbb
ds
lods
jl
mov
sub
and
les
pusha
das
inc
push
loopne
stos
lea
repz
popl
les
sub
and
xor
imul
mov
mov
push
idivl
stos
jecxz
test
aad
shlb
ret
sbb
test
inc
mov
aas
xchg
scas
jns
cs
ds
and
sub
xchg
xchg
jl
xor
cmpsb
push
and
xchg
or
xchg
dec
and
cmc
dec
cmc
lea
jge
push
and
pop
xor
cmp
test
and
adc
rcrl
test
jecxz
cmp
mov
push
sub
xchg
fsubs
in
jne
and
inc
adc
push
in
cwtl
jp
repz
mov
jmp
jg
mov
dec
das
push
pop
leave
cmp
out
xchg
pop
sub
out
push
inc
int
lcall
cmc
xor
jb
dec
dec
subb
xchg
lds
dec
push
mov
ljmp
cmp
pop
dec
rolb
stc
xor
jmp
fimuls
mov
add
pop
xlat
insl
mov
call
ja
aad
repnz
mov
fildll
ficoml
ret
push
xor
jbe
cmpsb
ret
sub
daa
mov
pop
into
fwait
int
push
insb
icebp
pop
int
and
inc
cs
jo
int
iret
xor
movsl
mov
ss
cmp
inc
mov
adc
xor
icebp
xlat
les
in
jle
out
push
push
mov
mov
and
shrb
mov
cmp
popf
add
dec
aam
sti
lret
inc
mov
stc
popl
shr
shl
mov
test
add
and
sbb
inc
imulb
add
outsb
mov
mov
cwtl
bound
aas
aaa
and
xchg
mov
aas
push
je
out
inc
xchg
mov
sbb
aas
jecxz
jne
not
fstpl
sub
dec
xchg
inc
xor
cs
xchg
and
adc
adc
outsb
mov
into
iretw
sbb
leave
push
js
pop
mov
sub
out
or
cmc
jbe
and
das
xchg
jle
or
mov
and
xor
push
sub
gs
inc
inc
out
test
or
in
inc
xchg
or
mov
lcall
mov
adc
push
imul
testb
or
jne
pushf
jo,pt
add
push
pop
sub
add
test
fldl
dec
dec
pop
icebp
lods
pop
daa
cli
add
inc
in
in
cld
fcompp
shlb
ds
xchg
sub
loopne,pt
popf
pop
fmul
lds
lret
and
push
popa
push
mov
js
stos
shll
push
repnz
push
cwtl
cmp
call
addr16
adc
out
bound
movl
insb
jnp
mov
fistpl
sub
sub
addb
ret
out
fnstcw
inc
repz
mov
sbb
divl
ljmp
jb
test
sub
lret
fdivl
sbb
rolb
sarl
sub
hlt
dec
cs
out
jl
dec
aaa
insb
loopne
in
sub
adc
cmp
pusha
fists
leave
sbb
mov
ficomps
mov
and
call
fimull
fildll
mov
jb
mov
insb
loopne
fnstcw
ficoms
add
nop
xchg
div
add
movsb
loopne
sub
popa
out
jbe
ljmp
pop
inc
popa
std
push
sub
add
loopne
sahf
addr16
inc
cs
xor
xor
iret
leave
notb
test
push
stos
andb
das
pop
pop
mov
bound
int
sbb
aaa
cmp
push
add
xor
jbe
mov
cltd
adc
pop
pop
rorl
pop
xor
push
enter
add
jle
mov
fucomi
out
xor
dec
add
pop
outsl
xlat
add
cwtl
mov
lahf
mov
inc
jl
setnp
fidivl
pushf
mov
and
lahf
movsb
mov
popa
das
pop
sub
test
xor
mov
xchg
push
cmp
int3
bnd
jns
addb
sbb
cmp
inc
or
push
cmp
scas
mov
add
dec
sbb
testl
jp
arpl
and
loope
adc
xor
xchg
iret
push
fstp
dec
pop
imul
cwtl
add
test
icebp
aaa
aam
inc
jno
mov
in
insb
pop
or
inc
and
shlb
pusha
cmp
bound
pop
sub
add
or
popa
pop
in
ud1
out
cltd
jge
shll
test
push
repz
inc
call
jb
mov
dec
loope
lods
inc
insl
jl
das
test
minps
push
in
dec
shlb
mov
outsb
js,pt
pop
icebp
iret
mov
dec
mov
lds
ret
imul
mov
or
fisttpl
stc
xchg
and
mov
cmc
push
js
iret
cwtl
fs
mov
and
aad
mov
ljmp
movsb
sahf
cli
or
adc
push
adcb
xchg
jae
in
adc
test
mov
mov
xor
repz
test
cltd
mov
jp
jecxz
jne
sbb
cmpsl
jecxz
mov
or
push
pop
push
call
sub
enter
cmpl
repz
enter
jb
out
push
cmp
adc
inc
xor
adc
and
inc
mov
and
into
xchg
jle
and
fsts
push
movsl
inc
shl
movl
movsl
test
ss
clc
mov
mov
shrd
dec
bound
scas
jle
shlb
fsincos
sbb
jge
fstps
sub
aad
mov
and
test
lods
test
and
push
movsb
out
inc
out
pop
dec
or
mov
push
jge
test
adc
xchg
push
add
sbb
pop
fdivrl
pop
aam
mov
pop
jle
in
pop
popf
mov
mov
sub
jecxz
xchg
jp
neg
sub
shll
sub
cli
xchg
pushl
cmpsl
decl
jnp
xchg
bound
fwait
dec
pop
addr16
lret
add
stc
sub
out
fsts
sahf
dec
fisubs
pop
jbe
fxrstor
xchg
stc
jbe
fucomp
out
or
push
inc
aad
clc
push
sbb
push
add
jne
mov
sti
mov
and
xchg
and
dec
fcmovnu
bound
cli
scas
pop
or
xchg
sub
lea
dec
shrl
dec
rcll
sbb
or
pop
pop
dec
cmp
pop
mov
daa
mov
jne
add
pop
add
movsb
xchg
ss
lods
inc
xchg
js
pop
test
mov
dec
outsb
add
les
sbb
dec
popf
insl
call
sbb
movsb
jne
push
int
xchg
dec
mov
call
cli
in
dec
pop
adc
cmp
xchg
sbb
and
add
shlb
mov
cld
jne,pt
adc
mov
das
sub
lahf
mov
adc
gs
rcrb
scas
scas
cmpsl
push
icebp
imul
adc
adc
or
cmp
imul
bound
ljmp
loope
inc
cmp
ds
dec
cltd
out
inc
cs
xor
xchg
fldcw
lret
cmpsb
pop
repz
loopne
call
je
loop
push
dec
je
and
jns
xchg
shll
jg
cli
out
sub
in
add
jnp
and
pushf
fistl
enter
out
fildl
sti
pop
or
pushf
push
sbb
xor
lahf
gs
sbb
es
imul
pushf
test
cmpsb
sub
fldt
ret
jge
outsb
adc
or
jnp
out
mov
inc
push
test
mov
jo
int
inc
mov
xchg
mov
push
ljmp
ficoms
pushf
rcr
gs
add
or
add
or
dec
sub
mov
outsl
xchg
pop
fnsave
inc
ss
test
push
pop
cmp
repz
adc
mov
test
pop
fcmove
jbe
lock
in
andl
test
pop
jle
inc
or
inc
jno
push
inc
xchg
fldl
outsl
sbb
sub
mov
icebp
icebp
push
dec
es
mov
jmp
sub
jp
or
jl
jge
and
icebp
add
out
lock
push
fidivrs
ret
sbb
sbbl
popf
cmc
stos
scas
mov
mov
adc
cmpsl
sbb
push
mov
mov
repnz
jbe
xor
adcb
and
fwait
inc
ret
aam
mov
ljmp
xor
xor
xchg
pushf
cli
mov
dec
addr16
out
xchg
pop
sbb
pushf
dec
mov
cs
int
pop
out
mov
jne
repz
adc
pop
push
fimuls
mov
dec
test
popf
sub
mov
mov
inc
pushf
out
jo
fdiv
fxch
xchg
pop
cli
mov
lcall
xor
outsl
sbb
adc
lds
dec
mov
icebp
jne
out
mov
xlat
xchg
mov
xor
jecxz
fiaddl
inc
push
sahf
mov
add
ret
or
pop
sub
cs
inc
mov
pop
sub
xchg
pop
out
mov
sbb
add
sbb
add
mov
sbb
jg
pop
adc
cmpsb
andl
dec
cs
dec
xor
rep
mov
inc
int3
cmp
jmp
ficomps
fiadds
inc
xchg
dec
leave
pop
xor
insl
movsb
or
sbb
cmpsl
cwtl
scas
sbb
inc
add
repz
xor
jp
iret
jecxz
push
fld
das
hlt
cmp
xor
iret
out
cmc
jae
xor
pushf
outsb
cmpsb
iret
mov
lret
cmpl
adc
adc
push
or
cwtl
lds
out
xchg
inc
leave
gs
addr16
inc
mov
adc
fs
xor
pop
mov
cli
stos
inc
inc
lods
dec
cmp
xchg
hlt
cwtl
jle
pop
jb
imul
aas
sub
lock
lds
and
sar
xlat
ret
inc
hlt
in
or
cmpsb
mov
or
out
jmp
cltd
lods
movsl
or
repz
mov
fmulp
mov
xor
cmp
dec
push
fwait
es
push
int3
pop
fs
loopne
outsl
movups
ljmp
add
icebp
fidivl
into
pop
leave
push
mov
mov
xor
xorb
pop
arpl
xor
pop
sbb
dec
in
cmp
insb
dec
fldlg2
shrl
nop
add
adc
mov
xlat
sub
rcl
adc
stos
inc
cmp
push
push
or
stos
xlat
loope
cmp
ret
insl
in
add
mov
add
cmpl
ret
jno
repnz
inc
xorl
mov
std
fcomps
xchg
mov
test
addr16
jle
xchg
sub
pop
enter
mov
mov
xlat
outsb
jge
stos
loop
frstor
inc
pop
sti
mov
mov
les
add
adc
pop
jp
jle
mov
pushl
push
xchg
pop
notb
shlb
mov
push
adc
jmp
push
xor
push
cltd
fimuls
add
imulb
icebp
xchg
loop
jmp
mov
or
mov
jns
pop
rcl
fcmovbe
pop
push
inc
pop
sbb
leave
xchg
mov
pop
pop
andb
lods
xchg
test
and
cmp
pushf
dec
mov
push
stos
mov
lcall
mov
xor
adc
fstps
enter
mov
js
fwait
xchg
test
dec
lods
pop
pop
cli
pop
mov
push
inc
push
cmp
mov
mov
insb
pushf
das
ret
add
ja
mov
out
pop
mov
mov
cmp
fsubr
push
cmc
test
out
pop
pop
popa
add
in
dec
push
cs
xlat
pop
mov
and
mov
in
cmp
pop
push
jmp
stos
push
bound
outsl
ret
in
out
out
icebp
movsl
or
jno
icebp
cmp
sbb
mov
cmp
cld
cmpsl
xchg
js
mov
data16
cs
pop
jmp
lods
pop
jle
and
mov
orl
cmp
add
inc
xchg
sbb
or
mov
rcll
cmp
outsb
pop
jbe
pop
fwait
inc
or
pop
aam
into
push
lock
jno
dec
jge
jl
ljmp
sbb
aad
es
lea
aad
call
sub
imul
gs
sbb
outsb
vunpcklps
push
adcb
jl
pop
rcll
inc
mov
pop
cmp
ret
lahf
push
outsb
cwtl
sarb
mov
fnstenv
adc
test
jo
inc
imul
enter
pop
dec
in
sahf
sub
inc
xchg
int
sbb
xchg
push
push
pop
inc
adc
jo
mov
push
cmp
add
mov
rcll
adc
xor
gs
pop
jne
int3
lock
mov
fucom
mov
out
and
sub
or
and
sub
adc
and
push
adc
fmuls
xor
cmp
test
or
in
dec
mov
bound
outsb
dec
cmp
jb
outsb
cmpl
xor
or
jp
fstl
push
pop
and
in
adc
leave
xchg
jmp
xor
pop
mov
cmpsl
lcall
sbb
jnp
inc
stos
loopne
ja
test
jle
jecxz
mov
xor
pop
push
dec
cs
push
mov
mov
les
mov
fnstcw
push
cmp
xor
movsl
mov
sub
ret
xchg
pop
mov
xchg
cld
out
int
xlat
adc
iret
and
out
fxch
jecxz
adc
addl
mull
fucompp
add
call
mov
loope
mov
add
jnp
std
xchg
dec
insl
das
daa
jecxz
arpl
pop
inc
mov
xchg
mov
inc
push
in
neg
icebp
jo
dec
in
xchg
loope
jge
dec
icebp
clc
outsl
arpl
test
xor
jle
pop
cli
push
cmp
mov
mov
add
adc
orl
lahf
mov
jecxz
ss
insl
jb
push
mov
mov
call
arpl
out
call
data16
sub
lods
lcall
adc
pop
std
iret
mov
dec
xchg
stos
sub
xor
fldl
inc
push
push
xchg
imul
dec
roll
pop
lcall
lea
mov
out
mov
push
dec
fcoml
cltd
bnd
cmp
pop
push
pushw
sub
fistps
pushf
mov
int
ljmp
cmp
cli
hlt
sub
xchg
adc
mov
lcall
cmp
cli
xchg
stos
xor
pop
sbb
sbb
jecxz
push
addr16
mov
jp
add
js
les
addb
mov
hlt
jno
add
jg
cmp
adc
repz
jl
pop
mov
ljmp
in
inc
mov
out
sub
pop
das
and
inc
push
fs
inc
addr16
xchg
sti
and
iret
sub
loopne
xchg
add
repnz
pop
icebp
add
les
xor
dec
mov
popa
fs
lods
pop
das
cmp
scas
les
mov
sarl
insb
test
jo
nop
mov
cmpsb
inc
stc
leave
imul
sub
sbb
popa
inc
jnp
push
test
lods
subl
lods
jmp
stos
scas
roll
push
adc
adc
sbb
imul
pusha
add
sub
fldcw
push
popa
dec
sbb
mov
fstl
rcrl
pusha
and
jne
lea
or
xor
decl
je
xor
mov
subl
loop
popf
dec
popf
lcall
inc
xchg
jge
push
and
xchg
add
mov
fdivrs
repz
adcb
jle
rcr
data16
jnp
pop
sub
shr
ret
sbb
mov
mov
out
orb
ret
xchg
inc
mov
and
pop
xchg
int
lret
or
push
fcoms
ficomps
arpl
mov
into
push
add
cmpsb
es
outsb
dec
cmp
push
or
mov
clc
or
mov
or
dec
xchg
ljmp
jecxz
movsb
pop
or
sarb
pop
cwtl
cmp
or
icebp
mov
movsb
jge
xchg
and
mov
mov
repz
test
aam
ja
movsb
mov
insl
out
add
pop
pop
dec
jmp
hlt
xchg
test
add
clc
mov
lret
movsl
xchg
inc
test
lret
ret
and
adc
out
aas
imul
and
jo
dec
and
sub
push
mov
scas
leave
sbb
push
and
pusha
mov
mov
jl
rol
mov
js
push
xlat
stos
cmp
fidivs
cmp
mov
mov
mov
jb
push
out
mov
or
jecxz
fiaddl
mov
lcall
cmpsl
out
mov
sub
js
push
lahf
push
xor
push
mov
cmp
inc
outsl
sti
jo
xchg
push
cwtl
movups
mov
mov
mov
push
mov
adc
sbb
adc
out
sub
mov
push
fwait
lret
div
xor
jl
repz
loop
pop
mov
out
push
push
ja
add
ret
in
ja
sub
push
push
sbb
adc
add
iret
dec
icebp
inc
mov
pop
cmp
cltd
mov
out
ja
ror
das
imul
shrb
pop
add
ds
cmc
xchg
cmp
mov
mov
aam
clc
xchg
cmp
ffree
dec
xlat
or
nop
in
xchg
enter
dec
lret
push
push
mov
mov
setp
daa
lds
xor
mov
jns
mov
xor
cmp
in
fidivl
and
pop
jge
bound
fldcw
scas
enter
into
scas
pop
inc
xchg
inc
cmp
ds
loope
cmp
jl
mov
sbb
sub
outsl
mov
jl
or
leave
pusha
push
fnstsw
cwtl
fldl
cmp
rclb
shlb
jl
ljmp
movsb
les
repnz
pop
enter
in
insb
push
repz
cmp
out
movsl
mov
sub
mov
pusha
cld
or
fidivl
cwtl
bound
and
add
sbb
mov
push
fwait
pop
adc
mov
test
in
ret
mov
lret
and
jno
adc
test
jl
pop
push
data16
int3
jp
mov
call
fiadds
ja
xlat
jl
fucomi
stc
push
addr16
jge
jns
repnz
lods
mov
stos
xchg
or
dec
int
call
cmp
icebp
and
push
sub
mov
call
ja
lds
jnp
test
js
lds
loop
dec
jb
adc
pop
push
sahf
arpl
out
mov
inc
push
adc
jmp
pop
pop
push
loopne
sub
or
pop
sbb
in
jle
ret
bound
imul
cwtl
add
imul
aam
and
scas
loope
addr16
jg
dec
jb
sub
xor
mov
sub
and
andb
lahf
dec
aam
push
movsb
mov
aaa
mov
fisubrl
and
ss
sahf
add
add
xor
adc
stos
nop
subb
cmp
repz
mov
or
jg
fdivr
jle
xor
push
dec
add
repz
pop
lahf
clc
inc
sbb
rolb
push
fnstcw
ss
imul
pop
mov
cmpl
testb
fldcw
xlat
dec
and
repz
sbb
sar
adc
test
xchg
test
cmpsb
sbb
or
mov
and
stos
nop
push
jge
ds
xchg
fcompl
das
jns
stos
test
mov
pop
cmp
or
sbb
inc
jge
xor
jl
xchg
jp
adc
pushf
fisubrs
mov
inc
aaa
push
push
mov
jle
fs
shlb
mov
xchg
imul
loopne
mov
jmp
jae
pusha
ret
mov
sub
and
dec
jmp
out
add
xchg
mov
sbb
push
mov
ljmp
inc
fst
xchg
jecxz
sahf
mov
clc
pop
test
push
lcall
cltd
pop
in
lock
call
mov
cmc
fld
rcrb
sub
outsl
aad
fldenv
sbbl
sbb
test
cmpsb
cmp
push
daa
dec
mov
or
lret
mov
jno
mov
push
sub
out
mov
pushf
add
sub
hlt
pop
gs
and
call
sbb
cmp
mov
sbb
or
subb
imul
mov
jle
xor
push
popf
fcmovnbe
mov
xchg
and
jno
icebp
xorb
ja
scas
or
in
jnp
test
cmpsl
xor
pop
inc
andl
aad
xchg
pop
mov
dec
mov
ja
mov
jo
orl
xchg
in
flds
xlat
arpl
mov
icebp
roll
nop
test
mov
bound
faddl
out
sub
push
mov
push
addb
stos
test
mov
jno
push
addr16
adc
adc
inc
es
leave
mov
out
idiv
movsl
jnp
ret
mov
fs
bound
addr16
jge
jecxz
jb
mov
add
daa
lea
das
xchg
enter
cmc
mov
push
push
add
je
into
int
fcoms
xchg
int
sbb
dec
aad
sbb
std
ds
and
mov
dec
ja
xchg
mov
adc
cmp
clc
pop
hlt
inc
mov
into
ret
jb
add
dec
push
push
push
fidivl
jne
push
scas
mov
push
xor
cmp
mov
and
xor
jp
mov
dec
popa
insb
dec
push
lcall
fsubrl
xor
sahf
xchg
cli
mov
or
popf
adc
add
ljmp
push
ret
cmp
and
cmp
shll
dec
push
xor
popf
and
mov
sub
jns
idiv
ja
mov
sub
mov
add
mov
mov
enter
mov
inc
fs
jb
mov
dec
rcrb
test
sub
mov
add
lret
push
sbb
and
pop
inc
jp
popf
jno
icebp
test
xchg
add
fidivrs
sti
add
add
scas
fcmovbe
rclb
jne
inc
scas
jb
and
addr16
inc
je
orl
inc
imul
push
jb
dec
sbb
pop
or
dec
ficoms
or
cs
in
mov
xor
std
mov
in
inc
add
push
mov
mov
aam
lea
gs
adc
mov
iret
fwait
push
push
leave
jnp
dec
mov
dec
pop
repz
jp
cs
push
gs
mov
pop
int3
fimuls
ja
mov
and
stos
aam
push
inc
daa
inc
adc
loopne
xchg
mov
push
loop
mov
loop
andb
and
repz
aas
sbb
inc
fsubl
lock
cli
sbb
fisttpl
insl
mov
test
pop
pop
int
loop
fs
push
rcll
inc
mov
outsl
push
aas
movsl
and
leave
mov
push
or
nop
xchg
adc
sbb
in
addr16
xchg
xchg
mov
divl
adc
xorl
cs
xchg
imull
flds
hlt
push
scas
mov
rorb
xor
loopne
xor
xchg
or
cwtl
cmpsl
lods
jecxz
mov
cltd
or
cmp
je
sub
rcrb
jnp
int
dec
subl
sub
add
clc
cmp
dec
movsb
das
xor
and
jl
pop
outsl
aad
xchg
repz
add
test
add
shll
xor
xchg
nop
push
xor
cld
jb
mov
cs
pop
inc
mov
push
push
inc
mov
dec
aaa
leave
or
mov
push
pop
xchg
xchg
mov
mov
insb
sbbl
inc
xchg
imul
xchg
iret
or
xchg
push
ljmp
push
jmp
jl
outsl
nop
scas
and
pop
in
lods
test
mov
and
xor
cmc
pop
aad
xor
xchg
inc
push
sbb
mov
or
cmpsl
daa
cmpsl
fbstp
adc
data16
jmp
mov
dec
and
mov
mov
or
lret
je
mov
push
mov
fisubrs
xchg
xchg
pop
and
ja
push
test
je
lods
dec
mov
pop
adc
lea
mov
loopne
insl
dec
rolb
frstor
arpl
cwtl
add
mov
dec
nopl
outsb
jns
sub
dec
jnp
rcr
out
repnz
ja
arpl
gs
ret
xor
jmp
jle
je
adc
pop
dec
pop
iret
xchg
xchg
jne
sub
xor
shlb
repz
and
imul
pop
rcrl
push
cmp
ss
add
add
sub
add
xor
push
dec
iret
stc
in
stc
pusha
add
scas
push
int
xchg
orl
pop
das
ja
adc
push
mov
cmpsb
xchg
aaa
push
and
mov
xchg
fistl
push
add
inc
cmp
xchg
fsubr
ficomps
jnp
pop
nop
test
icebp
jne
mov
sti
jecxz
sbb
pop
or
jae
mov
lcall
xchg
lahf
adc
adc
insl
sub
and
sub
fsubs
and
clc
pop
sbb
jb
cmp
aam
xchg
xchg
test
jmp
fidivrl
dec
xor
lock
fcmovnu
scas
sahf
adc
mov
sub
pop
mov
sub
push
aaa
xor
or
push
mov
jge
shll
cld
lret
fbld
jae,pn
outsb
xchg
mov
or
push
movsl
cmp
and
adc
jo
add
xorl
aam
sbb
lock
movl
les
push
dec
add
mov
jbe
std
add
shrb
das
int3
inc
and
mov
std
mov
push
inc
bound
dec
jmp
pop
cld
push
insl
xlat
add
sti
xor
pop
incl
aas
test
push
add
mov
or
es
int3
loop
stc
sti
sbb
insl
pop
shll
xor
mov
movsl
mov
iret
rolb
pop
jnp
push
shll
icebp
jno
inc
cs
or
inc
hlt
fbstp
and
jo
imul
inc
sub
mov
mov
jmp
pop
mov
and
dec
lods
push
push
jae
sti
ficomps
and
cli
sti
jne
xchg
ja
out
pushf
jbe
dec
sbb
add
dec
pop
mov
mov
fcompl
or
xor
dec
scas
push
jecxz
lret
dec
cwtl
adc
jo
dec
pusha
adc
loope
jns
scas
outsl
mov
or
xchg
outsl
push
shll
xchg
in
jo
or
fnstsw
pop
xor
mov
mov
pop
sbb
and
jle
sub
mov
mov
mov
pop
jp
mov
test
cmp
inc
xor
jmp
cmpsl
les
popf
mov
insb
enter
ja
cli
aam
ret
fisubl
xchg
xchg
sub
lahf
int3
out
add
roll
insl
add
mov
pop
fmuls
sub
mov
sbb
sbb
scas
mov
mov
ror
or
fistpll
hlt
into
fwait
mov
add
xor
mov
push
adc
sbb
sub
xchg
enter
add
cmp
popf
gs
mov
sbb
ja
nop
inc
les
adcb
fadds
cmpsb
clc
sbb
dec
hlt
adc
jmp
cwtl
stc
pop
cmpsl
pushf
movb
or
or
sahf
or
jae
pop
xor
int3
dec
xchg
mov
jmp
arpl
fistpl
add
add
xor
imul
cli
ds
es
mov
lret
out
push
jmp
dec
inc
add
mov
dec
mov
push
adc
jo
jl
xchg
mov
imul
and
gs
inc
add
jns
sbb
pop
ret
add
add
stos
enclu
push
test
ja
mov
xchg
push
adc
add
mov
push
dec
mov
or
rclb
daa
lds
cmp
pop
inc
jnp
add
pop
and
sarb
lcall
and
sti
test
jle
stc
pop
inc
xchg
in
cmp
lock
ss
stos
cld
inc
lods
xchg
stos
out
xor
std
repnz
sub
mov
popa
lods
mov
out
arpl
repnz
cs
les
daa
cmp
mov
xor
cmp
fwait
pop
cmp
je
ret
shll
pop
rorb
and
xchg
add
push
sbb
mov
test
incl
dec
scas
inc
sbb
xchg
jge
fistpll
in
pop
jae
adc
mov
std
cs
cmp
ficoms
adc
and
and
movsb
push
jge
ss
inc
add
cmp
in
in
mov
xchg
ljmp
aad
fs
aad
pop
out
jge
addr16
dec
shrb
sti
ret
lea
jae
mov
cmpsb
mov
testl
pop
adc
xor
add
popf
push
and
negb
adc
mov
sub
repz
aam
cld
jne
rcrl
mov
lahf
sub
sbb
fmulp
bound
pop
sbb
sub
dec
mov
sbb
mov
mov
adc
les
pop
push
push
sub
das
xchg
adc
lcall
add
cmp
jl
movsl
aam
push
lahf
idivb
cmp
sbb
in
add
pop
jl
push
inc
mov
mov
dec
push
push
addr16
inc
cmp
mov
xor
mov
add
cmp
add
popa
xor
pusha
in
ret
out
jns
insl
dec
loop
mov
in
or
xor
imul
les
sbb
scas
test
and
cmp
push
lock
repnz
cmpsl
int
or
jmp
gs
je
cmp
cld
cs
ss
jbe
cltd
leave
std
adc
movsl
test
sti
pop
jl
adc
aam
test
hlt
lods
cmc
insl
or
adc
sub
push
pop
insb
push
pushf
test
jnp
mov
bound
daa
cmove
sub
add
xor
xchg
xlat
jo
or
ficoms
les
shrb
jmp
inc
add
xchg
dec
je
xor
inc
sbb
mov
scas
mov
sti
mov
push
outsb
push
lock
in
enter
xchg
insb
pop
xor
arpl
rcl
jmp
sbbb
cmp
or
push
inc
jno
lock
sub
fstp
lret
mov
mov
push
rorb
jno
sti
rcrl
cld
xor
jmp
jmp
nop
and
or
dec
insl
push
jae
stos
pop
pop
xor
pushf
faddl
pop
ret
xor
add
in
jne
fidivrs
insl
pop
mov
jmp
cmp
add
sub
lea
cmpsb
sbb
ss
rolb
stos
add
cltd
sbb
out
xor
xchg
dec
aam
idivb
xchg
pop
xlat
jmp
adc
sub
pop
rcl
adc
imul
sbb
das
cmc
pusha
in
cmp
ss
adc
dec
cs
jbe
in
mov
clc
push
jae
and
lods
adc
adc
dec
roll
mov
sti
sub
push
sbb
xchg
sub
test
lock
mov
pop
dec
outsb
jae
and
inc
std
adcb
cmp
push
gs
pop
call
jbe
popa
out
out
jecxz
add
out
or
fisttps
out
pusha
cmp
pop
xor
scas
std
aas
xor
dec
mov
mov
cwtl
cmp
cmp
lar
fstps
out
int
cmpsb
pushf
xor
adc
stos
mov
je
incb
out
std
or
jp
dec
adc
cmp
jae
jb
adcl
xchg
jb
sub
mov
hlt
mov
lcall
push
sub
and
jle
pop
je
int
call
loope
and
jge
sbb
in
outsl
mov
dec
pop
repnz
jnp
mov
inc
into
and
fnstsw
add
aam
adc
iret
mov
pop
call
in
mov
jo
int3
fstpl
mov
xor
imul
inc
bound
icebp
mov
sbb
mov
adc
xor
jb
inc
xchg
xchg
xchg
pop
sub
rcl
mov
cmpb
lcall
mov
jmp
sbb
lret
in
xchg
cwtl
pop
push
icebp
test
out
add
in
mov
test
xor
jns
dec
fnstcw
fs
and
xchg
ss
push
adc
das
je
mov
test
jp
push
xor
push
cmp
xlat
ret
mov
ss
adc
or
std
pop
xor
outsb
fwait
sbb
dec
push
jmp
mov
push
outsb
cmpsl
dec
movsb
or
scas
leave
fmull
iret
int
jae
cli
xor
or
fsubrs
lock
aaa
and
sahf
and
nop
xchg
cmpsb
aas
icebp
rclb
int3
lret
pop
sub
push
cmp
or
mov
hlt
dec
mov
lods
popf
add
xor
adc
xlat
xor
out
jp
xor
jno
fcom
add
pop
push
out
dec
jae
inc
push
pop
ss
test
stos
sbb
aaa
or
test
inc
push
adc
xchg
jmp
inc
pop
add
dec
in
inc
jp
push
push
roll
xor
xor
in
sbb
jbe
dec
push
push
and
xchg
xchg
outsb
and
mov
pop
adc
outsl
push
loope
inc
dec
push
add
loop
andl
call
sub
push
loop
scas
mov
ja
xor
xor
mov
flds
xchg
addl
mov
fmull
push
sub
push
jb
jp
cld
test
xor
loop
sar
mov
mov
hlt
push
in
push
cmp
pop
sbb
pop
popf
pop
pop
aas
outsb
pop
icebp
leave
pop
es
arpl
pusha
stc
stc
div
adcb
sti
adc
cmp
lahf
lcall
daa
jb
inc
mov
add
lret
dec
out
mov
sti
pop
dec
outsl
add
lret
add
jg
or
rcr
adc
xchg
fildll
mov
sbb
jne
movsl
ficomps
hlt
loope
fistpll
data16
mov
push
jecxz
les
pop
loope
add
dec
jo
dec
les
insb
mov
btsl
pushl
ret
jnp
lret
cmp
int
imulb
sub
cmpsb
sbb
cli
stc
pop
add
xor
movsl
jno
out
mov
and
push
stc
lea
and
add
xor
imul
mov
mov
pop
mov
lahf
jmp
and
popa
mov
and
fwait
mov
into
push
push
and
mov
jnp
lahf
adc
cmp
and
mov
dec
adc
rol
jns
push
in
mov
jbe
in
mov
xor
icebp
aad
xchg
dec
xor
cwtl
xchg
sbb
sbb
mov
pop
outsb
ficomps
out
and
into
repz
gs
cwtl
roll
mov
imul
push
out
push
pushf
jb
inc
push
or
insl
popa
mov
and
adc
mov
xchg
in
adc
ljmp
movsl
sub
adc
xor
or
stos
int
cmp
hlt
rorl
addl
sbb
cmp
add
or
mov
lods
mov
dec
adc
dec
adc
test
adc
mov
fldcw
lcall
call
push
ret
pusha
xchg
aad
out
and
into
sbb
or
dec
pop
mov
imul
xchg
inc
mov
addr16
jae
incb
mov
push
mov
ja
pop
mov
repnz
adc
inc
mov
xor
mov
cmp
pop
xchg
cmp
sub
rcl
jno
js
aas
and
fstl
xlat
sahf
mov
dec
js
add
test
inc
mov
repz
mov
or
fadds
test
stos
ljmp
cmp
gs
mov
cmp
int3
shr
jb
fidivs
xchg
cli
movsb
adc
mov
jno
lods
xchg
xchg
sti
sbb
popa
xchg
or
push
addb
xchg
or
lock
sbb
imul
test
or
inc
dec
rclb
pop
pop
inc
dec
out
rclb
mov
sbb
sub
and
repnz
add
ds
rcrl
lret
mov
push
mov
pop
and
mov
jno
movsb
xor
je
or
lret
mov
jae
sarb
test
negl
test
push
xchg
std
cld
repz
cmp
addr16
mov
jp
cli
cmp
icebp
mov
or
in
mov
and
sub
adc
or
in
and
sub
jns
cmc
dec
adc
adc
ljmp
mov
lret
test
cmp
cld
jg
and
jnp
lods
xor
cwtl
aad
hlt
add
sahf
xorb
pop
add
inc
call
xchg
mov
mov
clc
cwtl
test
inc
mov
pushf
bnd
mov
add
in
sub
ror
dec
mov
mov
rorb
add
cmpsb
lcall
xchg
lods
inc
push
mov
mov
fbld
cmp
and
xchg
xchg
in
xchg
xchg
jne
addr16
or
cmp
push
movb
push
rolb
pop
sub
jg
dec
xor
addr16
sub
stc
cmp
inc
pop
sbb
inc
cmp
or
inc
cmp
sahf
mov
cltd
pop
insl
lret
inc
test
pop
sbb
cmpsl
ret
mov
jmp
pop
out
mov
or
sbb
lahf
hlt
sub
aad
cmp
cltd
push
repz
out
push
sub
aam
xor
loope
fistps
cld
mov
cmp
icebp
pop
xlat
rcrl
out
and
loope
cmpsb
xchg
fwait
inc
fucomip
jge
cwtl
std
jecxz
jne
mov
lret
lret
outsl
cmp
xlat
mov
xchg
in
sarb
aas
sbbl
mov
aaa
dec
xchg
mov
adc
incl
inc
mov
loopne
in
push
test
mov
pop
int
xlat
dec
xor
iret
fisttpll
loopne
mov
icebp
jp
xor
test
insl
sub
pusha
in
insl
pop
mull
xor
or
shl
inc
sub
data16
cwtl
in
jmp
fsubs
ja
inc
dec
ret
outsl
or
and
or
bound
lods
jle
mov
stc
mov
sbb
scas
clc
cmp
jl
jo
push
lahf
insl
add
pushf
flds
loop
fwait
cmp
push
popa
repz
and
outsb
pusha
jmp
or
insb
push
andl
and
or
outsb
jmp
or
hlt
or
dec
xchg
and
push
xor
mov
and
popa
jb
out
lret
push
jb
mov
inc
pop
adc
int3
or
mov
loop
xchg
sahf
xor
lcall
imul
les
fdivr
movsb
pop
cltd
sbb
pop
xchg
adc
and
test
pushfw
dec
push
leave
push
inc
pop
loope
mov
ja
aas
fs
add
popa
mov
cmc
sub
xchg
jb
stc
stos
repz
test
sbb
test
jo
jp
inc
mov
xor
dec
inc
movsb
stos
mov
mov
lret
in
cs
lret
push
mov
mov
loopne
pusha
cmc
xor
sti
ss
jae
jo
into
sbb
cwtl
cmp
jle
out
add
fdivrl
jae
dec
pushf
pop
fstl
mov
repz
dec
lret
imul
xchg
adc
cltd
mov
sbb
lret
push
or
in
cs
push
repnz
sbb
mov
xor
inc
jae
and
inc
scas
jo
jns
mov
mulb
sub
fdivp
and
mov
gs
div
jne
js
ret
lret
pop
cmp
mov
sub
pop
aam
mov
jo
fldl
cmp
aas
out
fcomps
addb
out
xchg
mov
aaa
push
call
pop
frstor
int3
loop
adc
sets
jb
jmp
sub
mov
cmpsb
rclb
push
inc
xor
xor
lcall
divb
pop
sbb
arpl
iret
test
inc
aad
addr16
xchg
mov
dec
sarb
lret
sub
cmp
cld
jbe
pop
mov
cmp
in
popf
add
cmp
fstpl
leave
inc
dec
or
and
ja
mov
jb
aam
mov
push
hlt
mov
out
sub
aad
adc
mov
stos
mov
mov
stc
test
ret
ja
movsl
sahf
int
mov
push
ja
mov
gs
stos
testl
andb
out
data16
movsb
adc
rol
and
pushf
dec
add
and
neg
mov
push
dec
out
rcr
div
mov
stc
div
add
or
stc
inc
in
das
push
test
cmp
cmpsb
shl
mov
shrb
jecxz
push
jl
jno
nop
leave
lods
sar
xor
sub
mov
enter
dec
or
mov
outsb
inc
repz
aam
sub
push
dec
lret
jbe
fidivs
sti
xchg
adc
sbb
mov
or
pop
xor
sbb
sbb
pop
outsl
or
test
rcrl
cld
ret
test
pop
sub
mov
das
push
push
lret
pop
mov
in
mov
shlb
pop
sub
and
mov
xchg
ss
data16
inc
mov
sub
push
lock
fiadds
ja
loopne
jge
cmp
out
sbb
mov
cli
das
insl
push
and
roll
sbbl
push
iret
pop
jns
mov
shl
add
into
push
mov
push
xor
pop
pop
rorl
jns
and
les
xchg
popa
and
lahf
mov
xchg
cwtl
pop
inc
fwait
push
xor
and
movb
jb
dec
fdiv
adc
pop
aas
jb
stc
xorl
jecxz
test
push
push
scas
imul
and
add
in
dec
mov
xor
jno
stos
cld
jo
xchg
jnp
sbb
pop
mov
lret
inc
cwtl
inc
imul
push
imul
inc
xor
fildll
or
pop
pop
ficoms
scas
jno
ja
rorb
iret
movsl
mov
out
test
mov
addl
jp
lods
mov
mov
mov
aam
mov
jo
mov
cld
xchg
mov
xor
inc
pop
ds
enter
jmp
cmp
nop
and
lcallw
push
cld
dec
jecxz
hlt
out
stc
repz
jno
outsl
test
repnz
pop
xor
fbstp
out
jbe
inc
lahf
enter
mov
cmc
sub
mov
lods
jno
hlt
xor
cmpsb
leave
pop
mov
in
sub
mov
mov
fisttpll
rol
xor
cmp
mov
xor
out
rclb
cld
repz
into
push
sbb
dec
popf
pop
in
inc
mov
stos
cmpsl
aam
shr
xor
sbb
push
push
mov
pop
jne
jnp
dec
dec
mov
sbb
xor
out
xlat
cmp
in
repz
xor
xchg
incb
push
inc
les
add
adc
xor
aad
mov
mov
jle
add
jmp
pop
jle
leave
mov
stos
push
mov
jb
add
pop
sub
scas
xor
pcmpeqb
adc
cld
shrb
sub
mov
xor
inc
pop
ret
cmp
inc
adc
xor
jp
jns
es
add
jp
or
mov
stos
dec
out
or
pop
mov
jmp
adc
test
xor
xchg
push
stc
stos
outsl
popl
cmp
xor
int3
mov
rclb
sbb
xchg
jb
andl
mov
push
pop
mov
xor
or
clc
call
jb
mov
adc
js
mov
jb
lea
xchg
adc
mov
loopne
pop
daa
mov
and
test
jle
frstor
rcr
xchg
pop
cli
ret
xor
data16
xchg
in
xor
sahf
pop
push
or
cmc
shlb
cmp
int3
pop
mov
dec
push
mov
cmpsl
add
iret
sub
sahf
jnp
sub
notb
lahf
aaa
xchg
mov
adcl
dec
xchg
and
test
xchg
cmp
mov
lahf
xorb
mov
add
cmp
or
inc
test
fldl
xchg
push
xchg
dec
cmp
hlt
into
scas
xlat
aad
movzbl
and
ja
ss
sbb
xor
loopne
mov
xor
jb
shlb
fistpll
ret
xlat
icebp
push
push
mov
int
repz
sti
jecxz
aad
adc
movsl
loope
and
je
scas
mov
in
sub
out
add
mov
xchg
pop
jnp
pop
mov
fdiv
adc
push
lea
loopne
aas
push
out
rolb
adc
out
mov
mov
fldt
xlat
out
pop
test
fldl
mov
mov
fisubs
fcmovnbe
fimuls
arpl
stc
leave
push
scas
sub
sbb
or
loope
daa
mov
mov
imul
jae
adc
je
jae
mov
jp
dec
pop
pop
push
jo
push
sub
outsb
inc
mov
rcrl
jae
mov
icebp
movsl
pushf
dec
pusha
jb
ret
out
leave
das
aad
daa
inc
cmc
pop
sti
pop
cmp
sbb
xchg
jmp
push
out
negl
fdivs
mov
insl
sahf
sbb
call
pop
jmp
push
push
ss
in
mov
jg
andl
test
xchg
ret
stos
outsb
jp
add
into
dec
adc
mov
movsb
push
lahf
ret
outsb
mov
ficomps
loope,pn
and
sub
sbb
push
pop
lods
popf
fcmove
cmp
stos
aaa
cltd
mov
pop
jge
divb
push
and
scas
or
mov
pop
sbb
pop
inc
shll
xchg
adc
add
stc
cmc
or
test
dec
cmc
push
mov
add
aaa
pop
inc
pop
in
pop
in
push
out
inc
shufps
mov
mov
ss
pop
jg
pop
fs
push
or
into
andb
fcoms
mov
inc
inc
fiadds
xor
popf
mov
add
lret
scas
scas
inc
cmc
jnp
sub
cli
xor
stos
xchg
lds
jb
lock
adc
mov
mov
adc
test
fidivrs
daa
shll
push
loopne
dec
sbb
adc
aas
push
xor
vmovhps
sti
in
imul
lret
or
mov
test
addb
lock
jle
dec
push
outsb
jb
fcoml
mov
add
in
or
ret
or
sahf
mov
loope
xchg
bound
out
mov
pop
into
jno
fisubrl
jae
mov
and
stc
dec
shl
inc
clc
outsl
pusha
lcall
dec
push
lea
js
popa
or
jg
bound
mov
mov
jnp
fisubs
test
jnp
je
sub
testl
inc
cmpsl
mov
add
rolb
in
call
rol
mov
invd
leave
sub
mov
sbb
mov
and
xchg
imul
aam
lret
push
jne
int3
add
add
lock
enter
mov
jg
imul
mov
addr16
lret
sbb
rcll
pop
or
mov
or
subb
dec
lcall
sbb
test
dec
fldt
fmull
mov
ret
push
ret
push
fs
inc
fwait
hlt
push
scas
xchg
inc
mov
and
rcll
mov
int3
mov
pop
rcl
and
push
pop
mov
pop
cmc
push
push
dec
arpl
lods
cwtl
std
mov
adc
or
push
sbb
push
dec
jno
movsb
es
xor
lret
mov
jnp
cmp
xchg
jg
sub
sub
shlb
jle
jg
jle
push
mov
in
popa
fwait
loopne
fadds
lods
jnp
mov
outsb
xor
cwtl
outsl
sub
pop
out
push
jmp
xchg
js
pop
mov
cmp
shll
mov
jnp
in
ja
sahf
repnz
dec
cltd
das
std
jp
fcom
sbb
ret
adc
xor
or
sub
mov
xchg
cmp
mov
push
push
std
iret
dec
fs
push
adcl
mov
xchg
repnz
adc
lock
xchg
scas
push
stos
pop
movsl
or
or
or
push
call
lods
insb
in
loop
mov
and
add
cs
bound
pop
test
adc
cwtl
push
icebp
scas
and
sub
negb
aam
push
ret
ljmp
sub
in
cld
jae
push
clc
sub
subl
push
push
push
or
sbb
add
or
xor
popa
std
dec
fucom
mov
ret
fwait
cmp
push
fstp
stc
inc
jo
jo
cli
adc
pop
jmp
mov
jo
mov
mov
loop
mov
es
adc
int3
sub
push
popa
dec
rol
mov
jle
lcall
sbb
mov
jge
shr
mov
ret
jno
sbb
xchg
popa
pop
mov
mov
imul
stos
xchg
cmpsb
cmp
xchg
stc
ficoml
dec
stc
stos
mov
push
pop
dec
sbb
xchg
sub
lea
xchg
in
cmc
stos
mov
cmpsb
paddb
insb
std
pop
loope
leave
xchg
cwtl
inc
mov
adc
imul
jnp
push
daa
mov
jae
movsl
mov
out
pusha
xor
pop
nop
cld
and
test
icebp
popa
and
jo
or
adc
push
dec
mov
into
hlt
mov
leave
mov
cmpb
jmp
hlt
mov
mov
xor
leave
mov
dec
cmpl
jmp
or
leave
xchg
stos
and
and
mov
icebp
or
repnz
mov
daa
dec
jge
jle
rorb
adc
push
jae
test
fsub
fucomi
xor
daa
in
jno
ljmp
add
andl
xchg
ss
cltd
loop
call
push
adc
test
lret
or
pop
imul
pop
adc
mov
pcmpeqw
cmc
pop
dec
test
cmp
rorl
add
xor
in
lods
adc
jle
xorl
movsl
es
pop
jle
sbb
mov
lods
dec
out
ljmp
aad
xchg
pop
sar
inc
fisttpll
lret
jnp
je
ss
sbb
ret
fcom
pop
in
nop
sub
nop
and
and
fcmovnbe
xor
dec
incl
xor
int3
in
push
cmp
add
and
or
stos
mov
mov
clc
loope
mov
add
mov
dec
fnsave
inc
iret
dec
inc
xchg
mov
push
rolb
outsb
sbb
inc
es
aaa
fisubrs
test
cld
and
adc
fisubrs
mov
fisttps
dec
pop
jg
aam
loope
popf
sarl
repnz
inc
adc
popf
out
popf
and
outsb
add
cmpsb
pop
or
fsubl
lahf
inc
mov
adcb
fnstsw
xor
push
cmp
fdiv
and
add
pop
push
mov
push
adc
sbb
xchg
lds
xchg
repnz
push
xchg
dec
in
xchg
loope
sbb
leave
push
xchg
mov
mov
cs
repnz
aaa
into
pop
xor
outsb
cli
inc
add
jmp
push
cmp
dec
ret
add
stos
pop
mov
notl
das
jae
dec
push
ja
fists
int3
cmp
mov
loopne
sub
into
loop
inc
imul
rcll
mov
adc
add
into
shl
icebp
pusha
push
cmp
sarl
add
aaa
dec
mov
insl
stos
movsl
es
popa
pop
aas
add
je
cmpsb
jecxz
and
sub
jge
repz
je
insb
and
in
mov
movsl
ss
out
and
popa
scas
mov
lret
gs
movsb
xor
ljmp
push
cmpsb
mov
pop
inc
inc
push
jmp
shl
in
pop
push
xchg
neg
lods
test
lock
mov
sub
push
dec
mov
xor
mov
and
sub
mov
push
fldenv
out
adc
subb
insl
push
loop
nop
sub
in
cmc
lock
adcb
push
daa
fmuls
lds
xchg
stos
dec
add
mov
jbe
mov
fisttpll
enter
lea
pop
clc
rcrb
pusha
push
jae
or
dec
loop
lds
neg
iret
push
xor
mov
push
das
pop
imul
add
xchg
mov
enter
inc
ficomps
dec
pop
jbe
sbb
pop
adc
mov
lret
mov
sbb
clc
sub
cmp
add
jmp
or
sti
jo
rorl
insl
xchg
out
fiadds
pmaxub
mov
mov
insl
mov
mov
insb
clc
fdivs
mov
shrl
mov
xlat
mov
add
movsb
pop
dec
out
out
lcall
mov
xor
sbb
xor
lock
int
add
sbb
mov
fisttpll
in
xchg
movsb
add
fs
mov
jle
inc
push
das
movb
mov
xcrypt-cbc
cmpsl
push
and
test
and
push
push
andb
sarl
jle
dec
mov
jno
push
ja
pushf
mov
dec
rcll
sbb
pop
imul
mov
sbb
pop
fnstcw
dec
stos
scas
inc
xlat
inc
xchg
sub
mov
out
lea
insb
cmpsl
sahf
ljmp
mov
jmp
jb
les
dec
outsl
fistpll
fisubrl
inc
loope
leave
or
adc
test
out
mov
mov
ds
movsl
in
adc
andnps
je
push
iret
xchg
out
imul
mov
adc
movsb
pop
in
mov
and
xchg
popf
add
aas
inc
lods
cbtw
push
scas
push
fsubp
pop
jmp
test
jecxz
mov
sub
jne
pop
ret
fisubl
and
xchg
ja
adc
dec
test
outsl
sub
mov
in
int
mov
and
dec
fnsave
out
leave
cli
cmp
movsb
jle
add
aaa
ret
bound
sbb
ret
mov
xchg
jo
fdivrl
inc
clc
rcl
sbbb
cs
mov
nop
xlat
xchg
sbb
mov
rcrl
and
push
push
mov
lea
mov
push
adcb
ss
mov
mov
add
jp
cltd
dec
sub
imul
ret
cltd
jno
xchg
adc
or
in
xorl
out
sbb
xchg
gs
js
mov
movsl
or
int
pop
test
movsb
jne
sbb
push
aad
sub
push
and
push
add
out
push
jo
repnz
inc
mov
enter
das
in
add
mov
jbe
sub
jmp
fstps
or
pop
xchg
mov
mov
or
insl
bound
jmp
ja
adc
mov
cli
fisubrl
out
and
push
insl
shlb
jl
lock
cwtl
sahf
ret
mov
nop
jge
fisubrs
aaa
xor
dec
pop
inc
lret
dec
sub
std
sub
mov
jb
shll
arpl
mov
int
inc
xchg
push
xchg
stc
ss
xor
add
fidivs
imul
idivb
inc
sub
push
sbb
mov
inc
andl
addr16
jb
loope
pop
inc
push
sub
out
aam
sub
or
push
or
gs
pop
cmc
pop
mov
mov
int
stc
stos
inc
or
out
cmpsl
rclb
adc
aaa
or
lock
int
mov
sbb
add
insb
push
cli
cmc
mov
nop
sti
shrb
addr16
mov
dec
aam
lods
pop
loop
ret
adc
xchg
shll
push
xor
insl
fildl
add
lea
cmp
subl
xor
mov
icebp
sbb
xor
ds
dec
inc
out
lcall
imul
arpl
fdivrl
mov
pop
xorb
push
mov
push
push
mov
adc
mov
push
push
mov
jl
shlb
adc
xchg
sbb
cmp
imul
aad
inc
add
cmp
jle
cmp
lds
outsl
sub
cmp
mov
bound
push
cmp
cmp
scas
or
push
pushf
ret
jnp
dec
into
sbb
push
popa
out
pop
mov
outsb
and
out
inc
mov
lea
mov
jmp
pop
out
inc
sbb
fwait
insb
adc
xor
je
cmp
stos
add
jb
push
inc
xor
subb
xor
adc
xchg
inc
cld
aam
jae
in
adc
dec
js
and
adc
inc
stos
repnz
jp
and
inc
or
cmp
insl
jae
leave
mov
dec
or
in
jb
ficomps
scas
fldenv
xor
fidivrs
push
inc
xor
sub
pop
orps
sub
fldl
out
pop
or
mov
testl
jg
push
inc
into
jbe
jp
cmp
cwtl
pop
ja
push
pop
cli
add
repz
mov
fs
shl
out
lea
xchg
or
je
sub
push
xor
cmpsl
jle
test
cs
add
outsl
sti
insl
jle
mov
hlt
pop
enter
xchg
cmpsl
xchg
cltd
pop
cmpsb
push
ret
dec
pop
xchg
call
sbb
push
sub
mov
call
and
lds
fbstp
into
ss
enter
xchg
ja
outsl
sbb
inc
aas
in
mov
aam
xchg
push
xchg
jl
mov
mov
jmp
push
scas
je
xchg
clc
sbb
lret
inc
scas
clc
add
test
std
jmp
push
sub
sti
xchg
insl
scas
xor
loop
fs
jl
sbb
sar
pop
push
and
mov
xchg
addb
jge
inc
add
mov
dec
or
addr16
iret
dec
lret
jbe
fidivrs
aaa
lahf
and
jno
es
popa
pop
or
mov
push
out
and
test
xchg
aaa
stos
push
xorl
pop
rcl
dec
enter
aaa
push
cmp
sbb
add
adc
sti
sti
into
lods
pop
sbbl
or
pushf
mov
push
scas
mov
push
inc
jge
xlat
fiaddl
data16
or
or
test
std
xchg
sub
mov
clc
sbbb
lods
jg
test
xchg
js
pop
aad
xor
mov
fwait
loope
lods
cmp
pop
xchg
jl
negb
pop
cli
mov
loopne
sahf
adc
lret
mov
push
lods
std
pushf
push
test
xor
std
insb
dec
push
dec
adc
pop
mov
test
pop
stos
mov
cltd
xlat
adc
cmp
sub
cmp
sbbb
xor
cltd
mov
push
cld
iret
inc
cmc
repnz
sahf
mov
mov
loop
int
pop
sbb
scas
add
into
mov
dec
loop
cmc
inc
dec
das
cmp
cld
inc
test
aam
jle
js
repz
jo
or
or
mov
pushf
sub
ja
mov
xchg
jg
bound
cmpsl
scas
es
mov
and
inc
lods
sbb
mov
loop
insb
cmpsl
repnz
inc
aam
push
add
sarb
lret
insb
push
and
mov
adc
sbb
out
or
clc
flds
out
mov
pop
mov
stc
pop
mov
mov
aad
fstpl
rcll
pop
inc
iret
enter
in
js
call
in
das
mov
js
jge
mov
xor
mov
shrb
cmp
fbld
pop
mov
sub
popa
adc
call
in
loope
or
adc
insl
inc
mov
push
repnz
inc
jl
mov
mov
pop
ljmp
test
js
cwtl
xchg
mov
lahf
daa
outsb
loop
cld
test
mov
and
xchg
movsb
pop
pushf
outsb
sahf
and
imul
popl
shlb
stos
jnp
insb
jp
int3
data16
shl
test
adc
shll
scas
jno
mov
les
push
pop
fildl
test
jmp
arpl
repz
cmpsb
out
es
into
lds
sub
xor
pop
push
push
insl
fimull
cmpsl
lahf
jl
int
adc
adc
cmp
add
add
aaa
aaa
andl
jno
mov
arpl
fisttpll
jo
lock
ja
xor
repnz
fmul
data16
xchg
cmp
cmc
jns
mov
pusha
out
loope
xor
pop
jo
nop
and
stc
inc
mov
mov
fnstenv
jl
stos
fmuls
clc
dec
mov
loope
mov
adc
push
cmp
scas
xchg
xchg
cli
pop
scas
out
mov
icebp
pop
int3
out
andb
cmp
pushf
push
int3
gs
or
popf
push
aaa
mov
lcall
sub
push
test
sbb
out
push
push
mov
push
push
xlat
xchg
int
sahf
mov
cmp
movsl
enter
ret
jge
ljmp
inc
xchg
and
push
in
dec
pushf
addr16
stos
dec
repnz
inc
or
inc
inc
jne
cmp
inc
addr16
add
mov
imul
jno
in
push
das
imul
mov
in
movsb
inc
mov
pop
js
lahf
out
dec
cmp
cmpsl
mul
aas
bound
add
daa
shrl
pop
in
and
in
hlt
out
xor
shlb
test
mov
hlt
scas
outsb
in
rorl
inc
dec
dec
rcl
mov
pop
roll
pop
mov
popf
shrb
lock
sbb
xor
push
aaa
cmc
lea
ds
lds
movsb
popf
imul
sbb
movsb
fwait
mov
lds
push
dec
push
mov
int
mov
dec
mov
std
int3
in
cmp
lock
ret
sbb
outsl
ret
les
xchg
movsl
int
scas
nop
and
mov
out
jno
xor
add
out
rclb
mov
cli
sub
xchg
mov
inc
bound
sbb
cmpsb
sub
inc
xchg
pop
cltd
shr
add
add
cmp
daa
aas
sar
shrb
dec
push
insl
inc
jnp
inc
rcr
popa
mov
mov
mov
xlat
cmp
sub
or
xlat
mov
or
xor
push
cmp
mov
jmp
jbe
rcrl
fsubl
aam
into
xor
repnz
mov
leave
je
mov
rcrl
xlat
pop
or
jb
adc
int
jo
mov
loope
adc
fwait
cmp
lahf
js
push
jmp
sub
pop
mov
cmp
mov
ljmp
dec
fcmovne
xorl
fdivrl
test
xchg
pusha
pop
push
es
pop
aaa
lds
pop
arpl
jge
xchg
adc
mov
imul
pop
or
jae
xchg
inc
jns
and
ret
fistps
fdivs
inc
dec
shll
mov
repnz
sbb
movsl
mov
dec
push
divb
xchg
out
xor
xchg
mov
xor
popl
loope
or
pop
jp
cmp
inc
jnp
test
fistps
xlat
pop
scas
xor
mov
pop
inc
clc
xor
or
sub
loop
mov
mov
push
imul
ljmp
add
and
inc
orb
fstpl
rcll
dec
addr16
in
adc
pop
arpl
xchg
and
and
aas
ljmp
jns
dec
add
pop
les
lahf
add
or
icebp
mov
push
and
or
stos
loop
call
mov
sbb
mov
cmp
pop
stos
pop
jl
mov
add
push
in
jge
xchg
clc
inc
gs
adc
push
add
mov
pop
jo
into
inc
push
dec
pop
cmp
push
push
icebp
dec
or
mov
and
jg
movsb
sub
imul
jle
imul
mov
cld
shrb
cmp
push
mov
ja
sbb
adc
jno
adc
idivl
push
xlat
xchg
lret
leave
test
cmpsb
imul
mov
bound
jne
pushf
xchg
shrb
adc
push
mov
mov
ja
inc
jp
adc
adc
push
fisubl
dec
cld
sahf
dec
add
scas
mov
mov
push
cmp
push
inc
test
adc
xchg
or
hlt
jp
or
inc
sbb
lcall
xor
mov
pop
imul
cmc
sti
cmp
fs
inc
lret
out
xor
insl
es
out
cmc
aas
inc
pop
lock
enter
push
sbb
jns
xor
ja
rolb
or
lods
addr16
xor
mov
mov
jmp
lahf
pop
mov
pop
dec
addb
sbb
filds
jno
imul
jle
and
stc
xor
mov
mov
fiadds
pop
cld
jmp
xchg
xchg
sub
add
shlb
mov
cmc
adc
repnz
scas
push
add
mov
cmp
outsb
aam
or
pusha
in
lds
sub
out
shlb
mov
or
aaa
pop
lcall
jbe
push
lods
dec
mov
pop
dec
xchg
fsubl
or
xor
jp
jbe
negl
or
xor
sub
or
fildll
movsb
push
mov
sahf
sub
mov
xchg
pop
xor
jmp
mov
or
testb
or
sbb
std
mov
dec
lds
sbb
mov
cmc
add
pop
aam
add
inc
sub
in
xor
pop
mov
repnz
sbbl
icebp
and
js
decb
iret
xlat
fldl
push
mov
mov
xchg
arpl
lds
sti
outsl
jcxz
xchg
hlt
push
sbb
std
das
into
xlat
push
adc
jp
stos
push
sub
inc
and
lahf
push
dec
push
test
repnz
divb
push
jmp
push
xchg
ljmp
or
inc
jmp
mov
fadd
push
inc
sbb
xchg
dec
mov
xchg
es
add
bound
inc
lea
in
mov
das
repz
into
ficoms
and
sbb
push
jl
js
test
iret
push
or
push
clc
xorl
inc
mov
pop
pop
sbb
pop
xchg
orb
mov
negb
jo
es
or
mov
inc
adc
pop
or
and
loopne
mov
aas
adc
and
pop
inc
xor
pop
stos
mov
ja
into
enter
sbb
ret
xor
or
int3
testl
ret
xchg
jge
rorb
mov
and
add
cmp
push
adc
xor
mov
pop
mov
shlb
xchg
xchg
stos
mov
bound
push
inc
jno
jae
adc
dec
mov
popa
cltd
mov
iret
add
push
pop
dec
push
push
and
stc
and
mov
ja
push
mov
sub
or
lea
je
sbb
mov
mov
push
and
inc
addr16
repnz
adc
mov
mov
add
jbe
sub
test
adc
and
add
out
outsl
add
and
jb
push
inc
rcrl
lock
cwtl
sarb
pop
ret
push
and
mov
jne
sbb
hlt
repnz
dec
add
fsubrs
jecxz
fs
mov
in
inc
lea
mov
imul
int
dec
or
gs
insb
jb
cwtl
loop
mov
vmovntpd
aad
lds
push
mov
icebp
into
sbb
mov
bound
inc
call
sub
mov
nop
call
cmp
xchg
mulb
lahf
stos
lcall
scas
mov
add
mov
jge
mov
sti
mov
imul
cmp
mov
lahf
inc
sbb
xor
shrl
sub
lahf
repz
inc
xor
pop
dec
fisttps
mov
and
xchg
add
inc
xor
out
repnz
xchg
stc
mov
pop
ficomps
movsb
out
pushf
pop
leave
and
sbb
test
or
adcb
stos
es
popa
int3
add
or
mov
sub
lock
push
xlat
shr
rol
xchg
cmp
sub
insb
rclb
fwait
adc
dec
aad
bound
push
movsl
cwtl
std
je
jns
dec
mov
jns
repnz
bndldx
xchg
addb
pop
mov
lahf
pop
and
scas
add
mov
daa
aam
dec
in
insl
mov
dec
xor
pop
sahf
out
pop
test
jmp
scas
in
out
xchg
out
test
iret
push
test
cmc
push
pusha
mov
icebp
rolb
fdivl
pop
and
jno
sbb
xchg
mov
add
sti
sbb
adc
into
test
and
push
xchg
jle
das
adc
jnp
sbb
sub
test
les
pop
aaa
mov
and
inc
inc
xor
cmpsl
xor
ret
jge
andb
mov
cmpsb
sub
test
pop
dec
xor
ss
push
inc
xchg
adc
cmpsl
cmpsb
mov
out
mov
leave
push
jno
aas
ss
push
adc
repz
daa
cmp
ds
cli
add
push
add
pop
int3
xchg
push
mov
xor
insl
xchg
and
sarb
ss
insl
loope
xor
call
mov
mov
aam
xor
cld
cmpsb
add
jb
pcmpeqw
pop
xor
xchg
es
add
dec
lock
fldl
jo
mov
xchg
std
je
rorb
xor
in
sbb
int
xchg
pop
mov
frstor
mov
pop
cmp
mov
inc
jbe
mov
or
xor
leave
ljmp
inc
and
test
push
lea
pop
push
mov
inc
and
pop
and
xchg
jo
xor
or
push
aam
pusha
push
dec
push
inc
sub
cmc
xchg
ret
fmull
into
pop
pop
add
popa
mov
cld
mov
in
mov
or
jmp
mov
inc
mov
push
pushl
mov
inc
bound
inc
ret
sbb
fsts
fldcw
sahf
adcl
sub
in
out
sbb
repz
arpl
jae
cmc
cmp
xchg
je
pop
dec
les
push
xchg
xor
xchg
popa
sub
pusha
xchg
lret
das
rorl
in
rcr
mov
sub
push
cmp
lcall
mov
loopne
lods
inc
sarl
or
jecxz
test
rclb
icebp
jge
ss
pop
mov
sub
test
jg
scas
icebp
gs
sbb
cmp
movsl
es
xlat
pop
and
mov
and
lahf
pushf
cmp
or
pusha
icebp
fnsave
jge
dec
shl
mov
mov
jae
cmp
xchg
mov
pop
arpl
pop
lock
and
mov
mov
mov
push
push
sbb
push
cmpsb
fisubrl
and
jnp
xchg
dec
push
outsl
mov
lret
aaa
aad
ret
ljmp
sarl
pop
push
cmpsb
fwait
inc
pop
adc
pop
mov
mov
cmp
jg
xor
add
or
loopne
sbb
out
pop
or
je
subb
aam
fcoml
arpl
mov
cmp
shl
lock
and
rolb
scas
mov
adc
add
jl
arpl
mov
pop
mov
mov
cmp
insl
jl
push
cmpsl
push
lahf
testl
cmpsl
lods
into
mov
aas
pushf
mov
test
xchg
inc
cmpsl
push
fstpl
ret
xor
cs
pop
push
sub
ljmp
xorb
adc
ret
lea
test
xchg
ret
stos
jg,pt
push
addr16
fadd
dec
icebp
divl
push
sarl
stc
mov
push
test
mov
and
fmull
lret
xchg
insb
pop
daa
test
sub
sub
ljmp
cmp
jne
bound
xchg
add
mov
rcl
fmuls
mov
mov
xchg
add
std
fisttpl
or
cmp
pop
pop
std
sbb
xchg
jae
cmp
jecxz
in
and
cwtl
lds
xchg
cltd
mov
ror
int
xchg
and
ret
mov
and
aam
cmp
mov
outsl
imul
lea
xchg
inc
sbb
insb
into
sub
leave
inc
clc
int3
cmp
jle,pt
jl
push
pop
insb
sbb
int
sbb
movsl
lret
add
or
adc
aad
add
and
xchg
pusha
push
push
test
sbb
das
pop
aam
sub
idivb
loopne
cmp
push
and
jle
lcall
addr16
aas
add
pop
aad
mov
sbb
clc
ds
cmp
mov
mov
jne
adc
jp
int3
in
dec
es
jl
stos
add
xchg
addr16
push
test
mov
dec
add
mov
rol
ret
loop
mov
jbe
add
subb
out
jmp
xchg
rclb
mov
mov
rcrb
xchg
test
xchg
dec
in
add
int3
sti
xchg
xor
in
mov
mov
mov
cmp
jl
dec
repz
loope
dec
push
inc
sbb
cmpxchg
imul
inc
cltd
frstor
int3
mov
push
imul
scas
adc
aad
ja
push
cltd
aam
sbb
sub
jb
adc
fimuls
mov
pushf
jno
hlt
push
sahf
mov
out
cmpl
cli
xchg
pop
sub
mov
out
and
std
xchg
or
dec
div
jge
test
mov
subb
insb
lods
push
out
push
push
xchg
daa
inc
sar
or
sbb
in
data16
clc
je
shll
or
imul
mov
push
add
add
mov
pushf
adc
cld
movsb
mov
movsb
lds
in
xchg
mov
mov
or
fs
xchg
dec
lods
test
xlat
test
movsl
call
add
xor
adc
mov
je
loope
pop
xor
cmovl
pop
dec
sub
repz
ds
fmuls
std
xchg
outsl
lret
and
incl
ljmp
push
or
pop
mov
les
or
mov
ljmp
addr16
lcall
jns
arpl
push
push
shll
call
jbe
cld
jns
add
cmpsl
or
rcll
pop
mov
and
mov
mov
pop
imul
lahf
xor
lahf
scas
push
sbb
hlt
div
arpl
add
pop
push
int
push
pop
inc
mov
and
adc
pop
xchg
mov
popf
mov
xor
std
addr16
repnz
adc
or
ret
push
jecxz
packuswb
xlat
add
inc
out
ret
sbb
jecxz
jbe
pop
push
mov
mov
and
aam
add
mov
add
roll
jp
mov
subb
dec
lods
aas
and
and
dec
aad
shr
pop
mov
clc
je
iret
push
sub
in
movb
jno
subl
mov
je
add
inc
in
inc
sbb
pop
cs
cmc
add
test
mov
or
sub
lds
inc
popa
sti
dec
aad
mov
or
mov
sub
rclb
inc
es
sti
aas
rol
fsubrs
andb
fiadds
ret
int3
push
xor
mov
hlt
xchg
es
scas
ficomps
aam
sub
sbb
push
mov
pop
es
mov
xchg
mov
fsubrl
mov
sbb
imul
jl
jns
ret
mov
int
mov
loopne
je
jbe
imul
aas
inc
mov
and
pop
lea
dec
sbb
lock
fxch
xor
mov
bound
imul
out
push
shrl
lods
dec
push
cmp
aas
mov
add
cmp
andb
sahf
cmp
fbstp
idivl
out
data16
sub
in
pop
lahf
in
dec
shrb
int3
jl
ja
call
dec
mov
fwait
subl
cmp
icebp
out
dec
push
inc
cmp
aad
pop
in
add
movsb
push
ss
out
clc
rorl
pop
leave
xlat
popf
sbb
mov
xchg
lret
jo
sbb
dec
cmc
push
addr16
in
inc
cmp
push
mov
inc
inc
or
or
into
dec
aam
adc
mov
mov
je
movsl
lds
or
add
mov
mov
jb
cmp
cs
rcl
mov
xor
out
subb
pusha
mov
jns
popf
xor
shrb
enter
pop
test
fistpl
and
imul
sbb
cmp
roll
lea
dec
jne
lahf
jmp
mov
mov
sub
cmp
or
adc
lret
ret
fucomi
iret
outsb
lock
aas
test
dec
cs
out
std
inc
popf
fstpl
in
adc
and
pop
push
push
inc
cmp
and
dec
shll
mov
mov
pop
out
mov
sti
push
wrmsr
xchg
pop
jne
xor
mov
xor
scas
xchg
popa
fs
jns
into
sub
ljmp
leave
fbstp
fisttpl
dec
fdivs
xorb
test
sub
xchg
pop
mov
xchg
adc
pusha
into
pop
jo
dec
jmp
lret
fidivrl
fsub
ljmp
cltd
imul
mov
jnp
cmp
loope
sub
push
mov
leave
sbb
mov
xchg
cli
and
mov
sub
out
and
mov
jmp
mov
push
cmp
xlat
hlt
xchg
mov
dec
in
push
xchg
incl
adc
cmc
rcll
cmp
popa
mov
out
mov
mov
inc
mov
daa
lock
sbb
push
add
lcall
test
dec
ud0
lods
xor
and
mov
gs
loope
xchg
lds
jmp
stc
test
add
pushf
leave
imul
cmpsl
add
out
inc
mov
in
jg
sbb
mov
fiadds
std
mov
mov
aas
add
adc
add
les
ret
pop
cmpsl
sub
fdivl
dec
stos
aaa
cli
lahf
add
xor
xchg
cmp
jns
xor
jge
adc
dec
xchg
xchg
fwait
mov
and
fwait
dec
dec
adc
shrb
jle
aas
cmpb
sub
pop
int3
decl
mov
push
dec
pop
jg
cmpsb
mov
inc
jne
add
sbb
and
mov
testb
push
lock
mov
je
test
jae
add
mov
and
rorb
push
fwait
lock
push
pop
cmp
cmp
loope
daa
je
adc
mov
or
add
sub
mov
inc
push
mov
cltd
loop
scas
mov
add
inc
mov
fadds
push
aas
add
xor
cmp
fstpt
sbb
pushf
lds
loop
es
loopne
adc
jne
out
fsin
sbb
lods
daa
fsubrl
xchg
int
sub
adc
push
fcoml
or
imul
imul
icebp
fisttpll
dec
pop
or
cmpsl
imul
loopne
jge
outsl
sbb
sbb
pop
xlat
add
hlt
sub
pop
loop
push
sub
mov
xchg
xchg
sbb
lcall
xchg
fs
or
bound
xchg
pusha
shll
lret
push
and
outsb
dec
mov
fs
sbb
and
jmp
and
inc
adc
xor
pop
sarl
cwtl
pop
in
xor
scas
js
sti
int
mov
addr16
pop
jp
imul
inc
adc
pop
ljmp
fcmovb
idivb
outsb
js
je
push
jle
xorl
ret
into
adc
paddusw
xchg
push
out
aaa
arpl
xchg
xor
xchg
mov
xchg
push
mull
sbb
cmpl
bound
or
enter
mov
js
test
popf
cmpsl
xor
lahf
xchg
push
sbbl
pop
fiaddl
fstps
pop
enter
and
cmp
out
and
cld
sti
movsl
in
pushl
fwait
outsb
fsts
mov
fmull
shrl
icebp
aad
fucomip
lahf
push
int
or
cmp
out
lahf
in
nop
dec
jbe
enter
adc
lea
enter
push
xchg
jmp
fimuls
cmpsl
and
or
ret
ljmp
or
inc
sbb
shlb
and
dec
cmp
in
xor
fisubl
loopne
lahf
fdivrs
jg
adc
mov
dec
mov
shl
fcmove
pop
outsb
pop
adc
shrl
mov
sbb
xor
lret
xorb
jecxz
add
iret
cmp
negb
je
loope
je
insl
iret
pop
aad
mov
mull
scas
mov
adc
fcoms
cli
mov
dec
pushl
xor
jmp
dec
iret
test
sahf
xor
int
lcall
sub
sub
out
xchg
mov
fsubrl
call
mov
push
inc
cmp
sub
dec
mov
cmpsl
xchg
rol
mov
inc
xchg
add
push
into
mov
pop
adc
imul
call
dec
xchg
pop
mov
arpl
mov
into
sbb
repz
mov
xor
sub
out
fnstenv
jb
sarl
dec
cmpsb
jg
jmp
or
sub
inc
pop
push
jbe
pop
jmp
cmp
popf
in
push
outsb
add
call
mov
sbbl
push
mov
add
inc
cltd
mov
cmc
imul
or
or
xchg
cld
out
loope
out
es
stc
cli
xchg
pushf
arpl
mov
jmp
and
sub
mov
mov
rcll
cmp
cmp
out
or
das
dec
jecxz
mov
adc
mov
pop
test
adc
jbe
inc
mov
push
dec
or
cmpsl
outsb
adc
pop
mov
loope
call
hlt
ss
mov
pop
cmc
add
and
scas
loope
je
nop
push
shrb
ffreep
shl
xchg
push
andl
cmp
xor
pop
xchg
sbb
jb
andl
xchg
cmc
lods
mov
pop
nop
sbb
test
mov
pop
lcall
inc
out
lret
jge
das
insb
aas
out
xor
xor
leave
call
cmp
pop
enter
sub
xor
mov
adc
push
imul
rorl
aam
jmp
jb
out
insl
xor
adc
jbe
mov
call
or
jns
aas
jbe
addr16
sub
imul
adc
add
ret
pop
out
mov
rol
adc
stos
sti
pop
cmp
stos
cli
adc
test
shrb
jge
popf
mov
ljmp
sti
out
sbb
mov
aad
cmp
mov
repz
movsl
and
out
sub
mov
adc
and
cmp
jno
popf
mov
sbb
es
pop
xchg
dec
cmp
mov
cmpl
stc
das
mov
xor
pop
aas
sub
rorl
call
add
cltd
into
in
dec
shll
jb
inc
xor
add
int
cmp
and
push
int3
adc
sub
out
imul
inc
fsubl
cli
pop
aaa
pusha
rorl
sbb
fldcw
pop
incl
xchg
inc
pushf
add
mov
in
xchg
in
cmp
gs
dec
stc
shll
sbb
mov
fdivs
push
jno
clc
stos
jno
and
lods
ss
or
mov
and
inc
jp
icebp
mov
cmc
arpl
pop
jle
loope
lcall
sub
orl
bnd
cmp
leave
aaa
out
out
adc
mov
dec
mov
sbb
mov
adc
bound
insl
cmpsl
or
pop
repnz
enter
cmp
dec
cmp
sbbb
jecxz
ja
xchg
leave
inc
push
cltd
pop
and
fmuls
mov
aam
jae
mov
mov
std
and
and
out
push
fs
inc
and
insb
push
lods
push
mov
and
sbb
int3
xorb
pop
and
mov
dec
mov
jae
dec
popa
dec
repz
je
jle
ljmp
dec
jl
and
or
and
mov
jnp
dec
xchg
cmp
sub
cmp
xchg
xchg
leave
aam
inc
adc
push
mov
mull
pop
add
sub
xor
xchg
jns
sti
pop
sbb
ret
push
in
mov
cmc
popa
out
lock
sub
out
cwtl
shll
sub
mov
adc
loop
mov
mov
mov
stos
add
fidivl
dec
cmp
in
push
sbb
pop
adc
jo
clc
sub
sub
jp
lods
popf
orl
cwtl
pop
and
pop
test
cmpsl
dec
rcr
out
dec
call
jo
cmp
mov
lcall
xchg
pop
stc
das
or
push
fdivrs
xor
inc
pusha
dec
rcl
pop
cli
inc
jge
stc
mov
in
xchg
and
outsb
and
cmpb
pop
aaa
push
push
divl
cmp
out
pushf
push
mov
loopne
mov
pop
andb
xchg
stc
outsb
add
jg
out
push
cltd
cmpsb
mov
xchg
lahf
test
enter
sbb
adc
sti
mov
in
arpl
aam
pop
insl
cmp
mov
subb
push
sahf
cltd
pop
xor
add
jbe
xchg
aam
xchg
hlt
hlt
xor
cmp
dec
jmp
inc
pop
cmp
and
push
test
addb
inc
cli
icebp
mov
push
xor
sbb
sbb
inc
push
adc
lea
mov
dec
inc
rcrb
pop
sarl
mov
scas
fdivl
in
ret
fdivrs
sub
xor
mov
int
sbb
lret
loop
adc
imul
insl
mov
add
fs
mov
lods
rol
dec
test
fisubl
and
inc
mov
or
arpl
cmpl
scas
pop
mov
daa
stc
pop
testb
or
jmp
or
lods
sub
sbb
xor
andb
ds
in
addr16
rorb
push
cld
and
xchg
add
test
movsl
fnstsw
pop
dec
adc
mov
mov
mov
adc
xchg
jecxz
call
push
jb
scas
int
fcomi
sub
cmp
jle
out
data16
out
test
stc
dec
mov
call
jg
inc
mov
rcll
cs
or
xor
push
fucomip
nop
dec
jecxz
aam
or
adcl
inc
sbb
insb
pop
daa
sbb
sti
stos
stos
xor
or
mov
addr16
jnp
jno
aad
mov
mov
sahf
push
inc
or
in
aam
sbb
fisubs
push
mov
in
icebp
je
or
cwtl
sub
push
sbb
jmp
fsubrs
mov
or
cmp
pop
mov
lock
mov
aas
bound
pop
negl
jbe
or
cmp
xor
inc
out
loope
rdpmc
mov
std
dec
jnp
mulb
cwtl
jmp
pop
jl
cwtl
int
inc
sbb
dec
xchg
push
add
jns
sub
lahf
addb
xchg
push
mov
mov
test
adc
inc
imul
pop
jmp
popa
frstor
cmp
dec
test
sub
stos
ja
in
jl
xor
outsb
xchg
loop
daa
mov
dec
dec
je
mov
sub
movsb
jns
addr16
hlt
cwtl
nop
sub
mov
pusha
pop
leave
pop
pop
mov
lahf
sbb
mov
scas
jne
sbb
lcall
add
adc
les
lahf
rcr
add
pop
inc
xlat
or
mov
sub
push
adc
neg
jne
cmp
fstl
cmpsl
repz
pop
push
pop
xchg
mov
sarb
mov
xchg
rolb
into
sti
sahf
roll
jecxz
test
jmp
dec
xchg
mov
ss
test
addps
adc
sarb
jge
sahf
imul
push
gs
aaa
pop
mov
mov
fstpt
lahf
mov
xchg
or
int3
insl
int3
or
or
pop
inc
lret
aas
mov
pop
daa
fs
or
inc
vunpckhps
popf
stos
movsl
sbb
or
test
adc
jnp
ret
sbbb
orl
push
xchg
push
inc
jge
cltd
call
xchg
int3
mov
movzwl
out
inc
test
sbb
mov
add
and
imul
and
mov
xor
movsl
int
mov
lods
or
sub
xchg
std
mov
out
xchg
pushf
xchg
mov
pushf
jo
dec
dec
push
sti
mov
imull
add
ret
xchg
push
into
pop
xor
xlat
das
push
push
fnstenv
sbb
mov
dec
stc
xor
lret
mov
cmp
imul
dec
inc
dec
pop
test
adcb
repz
rorl
add
outsb
test
rcr
xlat
xor
iret
mov
aad
pop
cmp
or
test
hlt
sbb
sbb
fbstp
push
mov
pop
sbb
decb
push
lret
pop
add
into
pop
pop
inc
gs
clts
lds
mov
lret
ja
and
sbb
jae
js
xchg
nop
jno
lock
ss
xchg
cs
xchg
int
call
aam
lds
or
in
pop
cmp
jns
enter
dec
aam
lods
jecxz
pop
mov
add
jnp
adc
pop
pop
adc
daa
jo
mov
enter
adc
in
and
mov
in
cmc
mov
jne
scas
pop
mov
gs
dec
test
loope
sahf
inc
fimull
aas
mov
nop
lods
or
inc
mov
adc
lcall
xor
sbb
or
pop
xchg
int
cmpsb
lea
test
adc
and
or
into
das
imulb
sub
inc
lret
loope
or
cmp
cwtl
mov
aaa
jne
adcb
movsb
aas
jecxz
js
sar
mov
lahf
mov
mov
jmp
sub
lods
jge
mov
pop
lret
dec
mov
insb
lret
mov
cmp
sub
mov
cltd
or
ret
pop
std
xor
or
pushf
jg
rcl
outsb
sbb
mov
leave
shrl
test
xchg
push
inc
lods
mov
xchg
fsubs
jno
inc
lcall
mull
gs
xor
jecxz
je
cmp
jl
mov
daa
cld
push
iret
movsl
mov
push
aad
adc
mov
and
out
jb
push
rcll
cld
sbb
scas
js
leave
mov
jo
cmpsb
ljmp
sbbl
sbb
popf
inc
aad
jb
mov
fcoml
cmp
mov
jns
mov
fs
in
test
jns,pt
stc
fwait
scas
fnsave
xchg
gs
sbbb
insl
std
xor
adc
dec
outsb
orl
lret
xchg
testl
lds
mov
movsl
cmp
insl
fdivl
add
mov
lock
sti
loopne
or
stos
rclb
aad
or
jne
cwtl
pop
mov
and
outsb
sub
and
add
pop
inc
or
out
int
aam
mov
sti
shrl
cli
scas
test
in
sub
jo
stc
sbb
add
ja
and
and
mov
jne
mov
lret
inc
push
push
les
xchg
je
inc
or
icebp
jmp
ret
lret
adc
dec
lret
add
xchg
cmp
pushl
xchg
insb
xchg
in
mov
mov
sbb
push
je
sub
mov
test
fnstcw
push
aad
fistpll
cmpsl
adc
jb
pop
divps
dec
pop
stos
adc
aam
in
negb
or
mov
cmp
loopne
jae
dec
repnz
sbb
outsb
cmp
iret
stos
xor
and
xor
jne
add
xchg
fisttpll
sub
stos
sub
stc
insl
mov
and
adc
cmp
cmp
and
popa
add
lea
push
mov
mov
mov
sti
inc
xor
inc
repnz
mov
sbb
sub
sub
cwtl
movsb
inc
push
xchg
nop
inc
and
push
shll
scas
dec
add
jb
mov
inc
movsb
mov
push
ljmp
pop
lods
test
xchg
sbb
inc
jns
int3
gs
ljmp
push
rcll
fsub
leave
add
cmc
jae
sub
add
cmpsl
jmp
icebp
test
and
jns
pushf
daa
sub
mov
insb
lcall
out
lods
hlt
push
push
jb
inc
mov
mov
sub
cld
repz
cmp
jno
pop
inc
mov
jmp
shl
fmuls
stos
lock
dec
mov
dec
xor
mov
inc
pop
or
ret
and
ret
mov
xlat
and
dec
pusha
loopne
cmp
out
arpl
pop
repnz
out
jne
or
mov
inc
pop
test
loope
push
jp
lods
mov
and
cmp
sbb
xor
out
sbb
mov
xchg
add
stos
adc
mulb
add
sub
inc
xchg
addr16
dec
sarb
xorl
push
push
fistpl
xchg
pop
int3
fwait
out
jbe
xchg
testl
inc
pop
sbb
jmp
mov
out
xchg
cwtl
int3
jge
shl
xchg
repz
add
stc
xchg
lds
stos
add
add
pop
cwtl
in
test
inc
lods
adc
jns
sub
ljmp
jg
movsl
mov
int3
cmpxchg
js
aam
mov
jp
dec
jns
fsubrs
lret
inc
in
adc
xor
imul
test
aas
add
fwait
xchg
or
ror
jno
stos
jecxz
iret
lock
cmpsl
out
cmpsb
js
lahf
pop
cld
cmp
inc
fmulp
inc
loopne
js
sub
dec
add
cmc
divb
orl
lret
in
sbb
into
cmp
jp
out
bound
push
push
pop
icebp
sarl
xor
adc
scas
mov
mov
ret
clc
mov
adc
movsl
add
cmp
ror
in
push
fsubp
lods
fmul
sub
daa
out
repnz
ret
arpl
sbb
enter
push
movsb
ja
cli
imul
aad
addr16
jecxz
lret
jle
sahf
test
push
push
aaa
cltd
in
and
std
neg
cmpsl
cs
sarb
mov
or
cmc
pop
mov
push
ret
shr
call
inc
sub
and
sub
das
stos
jecxz
mov
enter
popf
gs
pop
sub
aas
and
roll
sub
lds
pop
js
outsl
test
sub
mov
mov
adc
rorl
push
inc
or
ss
pop
mov
or
sbb
pushf
stos
stc
dec
cmp
sbb
jl
dec
pop
xor
and
std
pop
stos
in
sbb
mov
and
or
sub
addr16
push
pop
sub
inc
sbb
push
ljmp
in
cwtl
test
pop
cli
repz
xor
loope
jne
lods
inc
mov
pop
addr16
rolb
xor
jle
mov
and
xorl
add
pop
pop
movsl
lcall
sub
stos
push
jecxz
cmp
inc
pop
sahf
mov
int
jo
mov
jb
jnp,pn
pop
mov
lret
imul
out
les
out
popa
insl
test
enter
sbb
xor
push
adc
cld
dec
addr16
dec
jl
xchg
pop
sub
cs
ljmp
sub
mov
inc
jbe
add
xor
inc
inc
adc
fwait
or
gs
test
mov
sti
loopne
and
arpl
adc
fsqrt
mov
dec
fidivrs
add
arpl
inc
jbe
dec
push
scas
push
cmp
push
lret
scas
fisttpl
lds
jno
sahf
inc
fdivr
rcrb
jno
divl
pop
mov
inc
and
cmp
lods
xchg
sti
test
mov
sbb
clc
mov
cmp
and
pop
push
shlb
adc
sti
std
inc
and
leave
jecxz
adc
and
idiv
and
adc
push
jle
repnz
addr16
sbb
xchg
push
sahf
bnd
push
bound
sbb
lods
and
xchg
mov
mov
add
cs
xchg
add
lea
xor
or
out
fldl
shl
and
call
pop
sahf
pop
fsubs
aaa
fisubrl
sub
ds
dec
or
xchg
cmp
bnd
xor
sbb
out
cmp
jne
jne
push
inc
mov
stos
jno
mov
inc
ljmp
fcmovnb
rcr
jge
loope
mov
fisubs
and
pop
fsubs
pushf
cli
and
pop
test
fdivrp
decb
or
sbb
nop
fidivrs
enter
pop
fisttps
aad
mov
sub
xlat
adc
xor
xchg
mov
or
and
pop
das
in
jb
sub
and
fdivs
imul
popf
call
jae
mov
enter
data16
lea
push
or
loop
test
push
push
adcb
mov
pop
or
fnstcw
loope
mov
mov
gs
lods
je
test
mov
sbb
aad
dec
push
cmp
xor
lods
sub
pop
cmpsl
mov
scas
iret
push
cmp
dec
rcl
push
lods
push
mov
mov
pop
adc
pop
mov
lea
xchg
out
fs
inc
xor
stos
mov
jle
mov
test
aas
movsb
mov
dec
out
lds
lds
sbb
inc
lods
inc
pop
mov
std
mov
add
or
mov
inc
mov
pop
out
rorl
mov
js
pop
jne
ret
push
cltd
add
leave
arpl
adc
sub
xlat
mov
xor
scas
mov
dec
mov
imul
enter
sti
xchg
mov
sbb
es
inc
clc
test
cli
xor
lods
add
fs
adc
push
jmp
stos
cld
adc
mov
imul
out
outsb
test
dec
mov
jecxz
push
and
pop
ss
jle
inc
push
lods
inc
sti
incb
andb
sbb
cmp
dec
cmp
and
mov
mov
shrl
xchg
imul
dec
sub
clc
shl
cmp
aam
aad
sbb
imul
stos
or
lret
xchg
or
push
jg,pn
jne
rcll
jo
mov
inc
lods
lret
sbb
mov
movsb
mov
inc
add
dec
fidivl
jb
jge
sbb
jg
into
out
and
jl
dec
mov
xor
and
ret
inc
movsb
andb
dec
jno
dec
repz
or
xor
call
cltd
push
xchg
and
test
inc
enter
ljmp
sbb
arpl
xor
cwtl
xchg
lods
dec
push
xchg
imul
sti
inc
or
cmc
jnp
stos
bswap
cmp
cld
repnz
or
fimull
sbb
sub
and
cld
pop
mov
js
adc
add
ds
andb
fstp
out
test
or
sbb
nop
call
cs
insb
into
and
pop
mov
clc
lods
sub
jno
inc
dec
jb
faddl
inc
jl
cmc
adc
xchg
jo
jecxz
shrb
fisttpll
insl
jle
shr
dec
sti
jne
fisttpll
inc
push
mov
loop
dec
hlt
sbb
mov
adc
jno
or
out
cmp
mov
push
xchg
cmpsl
cld
or
sbb
bnd
fs
xorl
repnz
push
lea
addr16
push
cmp
aas
add
fwait
jmp
dec
sti
adc
mov
jbe
imul
rolb
sbb
and
xchg
xlat
fdivrs
je
sahf
out
icebp
in
mov
mov
push
ret
imul
lods
or
aad
inc
adc
mov
fs
stos
xorb
dec
adc
pop
jno
dec
sub
sbb
mov
adc
imul
inc
pop
popf
push
or
xchg
aas
rorb
xor
inc
out
or
mov
std
dec
rcl
mov
addr16
xchg
test
dec
movsb
orl
stos
or
add
fistpl
pop
pop
inc
dec
fsubp
nop
add
xor
cmp
jg
imul
in
loop
cmpb
fwait
adc
lds
pop
mov
or
inc
or
sub
or
or
sbb
mov
mov
les
das
mov
sub
pushf
mov
test
and
mov
rcrb
cmp
arpl
inc
cmp
jo
cmp
xor
lret
push
push
mov
fisttpll
xlat
xorl
int
xchg
sub
pop
mov
ja
adc
adc
sub
mov
ja
mov
sbb
pop
pop
push
movsl
idivb
jns
ret
sbb
call
push
inc
aas
dec
into
adc
or
mov
jno
leave
fs
test
cmpsl
aam
mov
fldt
lea
movsl
pop
icebp
mov
pop
daa
sti
inc
mov
xchg
push
sti
mov
lds
mov
sbb
outsl
push
push
mov
popa
gs
or
add
xchg
or
inc
out
mov
aad
cmp
adc
or
adc
js
popf
outsb
nop
sbb
scas
clc
ds
lea
inc
xchg
add
pop
add
mov
push
dec
sbb
mov
gs
daa
fwait
add
cmpsb
lcall
inc
les
sti
rcrb
outsl
iret
pop
ja
in
cmp
jg
and
inc
adc
mov
push
cld
shrb
sub
out
out
insl
inc
mov
xor
ret
sbb
push
push
mov
in
jmp
shrl
sub
sbb
and
in
sub
movsb
and
inc
xchg
nop
mov
push
repz
or
and
inc
adc
inc
fnstenv
popa
test
sub
test
mov
inc
mov
push
pop
cmc
jecxz
std
notl
push
xchg
mov
jmp
cmpsl
or
jecxz
xchg
sbb
jge
setg
movsl
mov
cmpb
xchg
cltd
lret
mov
sub
xor
add
mov
ss
lods
dec
test
aaa
inc
cmp
xor
mov
iret
data16
pop
js
mov
and
add
cmpsl
fdivrs
and
ret
xchg
in
cli
add
ljmp
nop
repz
xor
xor
call
pop
ljmp
int
pop
stos
cs
pop
fs
ss
aas
xor
decl
std
fs
ja
roll
or
add
dec
mov
cmp
mov
jle
and
out
mov
into
mov
adc
repz
push
movsb
add
mov
ds
sub
jl
call
jl
xchg
sub
push
iret
aam
add
mov
sub
push
dec
dec
pop
inc
cmp
dec
xor
and
aad
jno
inc
xchg
mov
lahf
jmp
adc
stos
addl
addb
or
in
enter
test
push
fs
pop
aam
jle
mov
jne
or
mov
movsl
xor
fdivrl
xchg
dec
mov
inc
ja
xor
xchg
mov
jae
sbb
popf
lds
shrl
pop
add
lods
add
sub
fstpt
in
adc
sbb
lea
insb
out
ret
mov
mov
shlb
fsubrl
mov
push
sub
lahf
lds
loope
in
jmp
shr
sub
jnp
mov
mulb
cmpsl
popa
xor
adc
add
iret
pop
cmpsl
and
shlb
adc
shlb
out
inc
cmp
pop
call
mov
jb
cmp
push
xor
fwait
mov
aam
mov
andb
sbb
push
js
mov
or
sti
push
sub
jecxz
cmp
stos
test
or
ret
xor
aam
cmpsl
mov
sub
ja
loopne
daa
mov
sahf
int
dec
xor
arpl
dec
lcall
in
fadd
push
outsb
jb
mov
lods
subb
push
dec
lahf
sbb
or
push
xchg
aam
jl
sbb
jl
ja
jp
cmc
insl
aas
pop
sbb
pop
dec
fidivrl
aam
sbb
add
adc
inc
jge
mov
jle
mov
mov
fucomip
push
addr16
xchg
stc
movsl
push
daa
test
fldenv
add
xor
mov
inc
iret
ret
and
xor
or
fcmovnu
out
cwtl
sahf
fadds
dec
loop
sub
adc
lret
sbb
lret
adc
jns
lds
jbe
push
cmpsb
mov
mov
and
jae
lock
sub
je
adc
xorb
sub
sub
jbe
loope,pn
stos
fwait
stos
mov
les
add
mov
pop
stc
or
gs
scas
jmp
inc
in
test
outsb
jno
mov
cli
cmpb
add
cmp
push
cmp
mov
outsl
jnp
adc
mov
add
xor
add
sbb
insl
xchg
rcll
repnz
pop
jne
stos
es
mov
xchg
jg
mov
mov
imul
int3
inc
mov
mov
out
inc
jge
mov
inc
mov
mov
xor
and
or
lock
sahf
enter
xchg
jno
jb
add
out
push
push
jnp
push
push
xchg
fldt
mov
subl
fs
mov
inc
lds
mov
jmp
inc
xlat
push
loopne
sti
aad
lds
nop
jle
into
sbb
popa
sbb
call
das
rolb
testb
and
sbb
cwtl
js
rcl
sbb
sbb
or
movsb
js
cmpsb
xchg
or
sub
shr
les
sub
lea
mov
out
dec
xor
or
jb
jmp
sbb
int
rcll
xchg
jg
mov
fdivrs
inc
pusha
jge
rorl
std
pushf
xorb
mov
out
push
stos
scas
in
pop
xor
lods
notb
cli
cli
push
sbb
xor
xor
xor
scas
mov
cmc
pop
push
movsl
fnstsw
scas
xor
push
xor
mov
loopne
shlb
mov
xchg
mov
or
lcall
movsb
lcall
push
out
jns
out
movhps
push
pop
xchg
mov
fwait
jge
iret
inc
xchg
xor
cltd
and
jp
mov
ja
fcoml
jp
mov
hlt
push
and
add
pop
adc
loop
cmc
aaa
mov
cwtl
mov
enter
push
int
call
add
sub
inc
ss
fistl
scas
inc
mov
inc
mov
cli
sub
inc
xor
xchg
inc
and
mov
pop
notl
adc
mov
xchg
loopne
sub
or
sti
fs
insl
add
cs
xchg
jns
addr16
stos
cltd
cmp
pushf
std
outsl
add
jg
mov
movsl
push
imul
arpl
lds
mov
dec
in
rclb
cltd
inc
dec
jg
add
xor
xchg
jb
rcr
shlb
and
sub
jae
call
adc
repz
mov
addb
test
enter
int3
xor
xor
mov
push
sub
dec
mov
push
cmp
pushf
movsb
or
hlt
int
sub
icebp
mov
inc
pop
gs
insb
cwtl
push
dec
inc
inc
xor
stos
rclb
cmp
outsb
fwait
dec
push
movsb
jbe
mov
lcall
cmc
pop
fstl
ss
iret
hlt
or
adc
jg
push
add
pop
loope
mov
pushf
dec
test
aad
stc
sub
sub
pop
inc
aaa
inc
mov
stc
or
mov
push
xor
in
pop
popa
pop
jbe
mov
jg
cld
nop
mov
mov
stc
mov
leave
shlb
mov
mov
addl
insb
ljmp
movsb
icebp
xchg
jl
aad
es
idiv
inc
mov
popf
sub
arpl
xchg
cmp
cmpsb
fwait
and
inc
pop
jb
insb
sbb
and
loope
aam
shll
daa
repnz
fs
outsb
leave
shl
adc
jp
mull
and
out
and
xchg
popa
xlat
and
mov
xor
adc
lods
xchg
mov
outsb
sub
movsb
sbb
mov
jno
mov
scas
outsl
mov
jae
or
mov
test
lock
test
dec
into
ret
add
add
or
push
jb
ljmp
dec
and
push
pop
and
add
and
mov
nop
nop
mov
hlt
add
bound
sub
mov
ret
int
loope
rclb
mov
push
xor
loope
mov
adcl
mov
sbb
add
es
cmpb
or
cmpsl
in
cmp
popf
mov
mov
inc
push
xchg
repnz
sub
and
mov
outsb
mov
std
mov
test
and
inc
mov
or
push
xor
lock
lea
gs
pusha
xlat
pop
rcll
in
fistps
outsl
not
out
flds
inc
mov
cmp
push
aaa
lods
xchg
cmp
push
test
push
ret
xor
xlat
xchg
mov
es
insl
dec
jae
mov
push
shl
inc
mov
fwait
jns
in
iret
shr
dec
nop
dec
push
sbb
ja
into
mov
add
xor
in
ljmp
test
popa
xor
aam
in
in
leave
fsubrs
add
push
ss
mov
xlat
sarl
je
divl
shll
xchg
mov
movsl
dec
pop
inc
mov
mov
cli
jle
cmpsl
jmp
jge
dec
orb
out
jg
xchg
inc
pop
out
push
jl
ret
xor
test
adc
sbb
pop
divl
std
mov
and
xchg
sbb
pop
mov
and
test
lods
adc
gs
imul
iret
cmc
emms
sbb
fstps
cltd
cmp
test
mov
mov
jno
cmpsb
popf
sahf
aad
daa
mov
jnp
bound
int3
or
int
xor
dec
and
xlat
pop
jl
pop
push
popa
sub
push
dec
pop
adc
push
push
insb
lock
dec
or
lret
test
jae
frstor
jp
and
push
xchg
add
xchg
xchg
into
mov
xchg
ret
jle
xor
loopne
fistpl
mov
lahf
sub
dec
fsubr
mov
lret
lock
insb
push
ja
xor
xor
shr
xor
mov
jmp
sbb
idivb
ficompl
jno
in
add
test
mov
dec
cwtl
jnp
adc
int
push
insb
fisttps
in
cmp
pop
dec
mov
rcrb
mov
leave
dec
jb
leave
jge
pop
jno
nop
mov
sbb
and
push
pop
in
outsb
pop
lahf
push
xchg
out
jo
in
clc
mov
mov
add
mov
jnp
jns
push
push
mov
cmpsb
mov
inc
dec
loopne
add
jmp
xor
popf
mov
es
lahf
pop
fs
movsl
mov
repz
daa
imull
pop
fst
sub
and
sub
jnp
add
adc
push
outsl
jl
rcrb
fisubrs
cmp
sbb
sub
pushf
out
cmp
sarl
fldcw
ret
in
mov
les
mov
int
imul
rolb
xchg
in
xchg
xor
sbb
push
push
xor
mov
pop
shl
inc
aaa
sbb
inc
mov
out
mov
mov
test
and
dec
leave
jge
loope
jecxz
sbb
fldt
cmc
xchg
xor
fs
push
in
jl
imul
push
cmp
mov
stc
and
pop
inc
icebp
enter
pop
lahf
cwtl
aaa
lock
pop
push
jo
cmpsl
xor
mov
push
adc
out
popa
movsl
pop
xchg
ds
or
xchg
jae
xlat
cmp
pop
xor
fcoms
mov
fsubrs
arpl
stc
xchg
push
sbb
cmp
sub
je
clc
pop
fisubrs
imul
fs
push
adc
icebp
les
xor
iret
iret
inc
popa
fcmovne
sbb
cmp
scas
loopne
jl
jo
repz
mov
jae
test
mov
sbb
sbbl
and
ss
shl
in
xor
add
sbb
in
push
pusha
cmc
and
aas
imul
cltd
and
jmp
or
jbe
aad
xchg
push
xchg
sub
imul
mov
shl
push
ja
cli
pop
push
cli
pop
iret
call
movsb
sbb
dec
lods
outsb
sbb
adc
or
xlat
mov
test
xchg
ret
mov
xchg
adc
rep
jp
dec
pop
inc
daa
mov
fsubrs
movl
pop
pop
aam
and
inc
aad
test
pop
iret
dec
in
cmpsb
iret
push
cbtw
call
xor
inc
dec
cmp
pushf
ja
fmull
test
mov
push
sbb
lret
mov
inc
jne
lock
add
pusha
dec
popf
shrb
inc
xchg
outsl
dec
or
enter
dec
dec
xchg
std
sahf
pop
int
aad
sub
enter
jg
sub
mov
cld
jno
jbe
outsb
xchg
jle
jno
inc
push
dec
cltd
fistl
pop
xor
fsubrs
sbb
mov
dec
mov
or
repnz
insb
jle
cmp
cwtl
cmp
dec
ja
xchg
mov
iret
xchg
xchg
pusha
mov
sti
jp
adc
pusha
jno,pt
inc
arpl
and
xchg
sbb
sub
mov
adc
inc
lret
out
daa
dec
inc
outsl
mov
rcrb
rorb
movsb
pop
sub
mov
cmp
shll
fisttps
cmpsb
lcall
nop
dec
sbb
pop
loope
sbb
xchg
jns
or
lods
cmp
fdivrs
or
and
add
lock
and
ss
lods
test
fs
xchg
cmp
movsb
jns
lods
je
aam
scas
cmp
mov
and
testb
sub
and
jb
clc
fsubrs
pop
outsb
dec
cmp
xchg
cmp
rcll
cmp
int3
movsb
hlt
jnp
stc
mov
lahf
arpl
jns
ljmp
inc
xchg
rcrb
les
rcl
mov
popf
cmp
call
ret
popa
sub
stc
mul
xchg
jnp,pn
lods
ljmpw
inc
add
or
shlb
inc
test
sbb
cltd
repz
cli
ljmp
pop
push
and
cmp
repz
popa
fs
pushf
xchg
leave
scas
ret
mov
push
dec
or
fnstsw
mov
jmp
adc
dec
insb
cmp
test
out
cmp
mov
into
lcall
icebp
sarb
cmp
push
jmp
inc
insl
sarl
stos
ja
inc
inc
mov
js
mov
lret
subl
sub
or
lret
sub
sti
rolb
into
jnp
xchg
dec
addl
mov
ja
pop
leave
dec
stos
sbb
cltd
jle
pop
lret
idiv
stos
cmpsb
jb
mov
jecxz
and
mov
dec
movsl
sarl
xchg
push
mulb
xchg
roll
or
adc
sbb
pop
test
inc
leave
cwtl
es
stos
divb
jae
divb
xchg
movsb
mov
sub
fmuls
scas
mov
into
jg
imul
pop
in
je
dec
mov
pushf
push
or
or
add
data16
cwtl
lea
cmpsl
add
gs
sbbl
fucomp
and
bound
pusha
inc
rcrl
ja
dec
add
sbb
mov
stos
sbb
scas
movsl
adcl
or
pop
inc
push
dec
scas
pushf
mov
fwait
dec
cmp
xchg
outsb
gs
pop
in
jp
cld
mov
lret
xor
mov
into
push
nop
mov
xchg
sti
call
pop
adc
xchg
mov
lods
ret
xchg
cli
enter
arpl
dec
adc
adc
push
sbb
ss
addr16
test
cmp
orb
lret
adc
jbe
pop
fistl
add
sub
push
fisttpll
dec
inc
fdivrl
xchg
cmp
es
sbb
fsubrl
ja
aam
cmp
leave
test
jb
sbb
sbb
fstpl
or
pushf
and
cmc
ss
sbb
xlat
inc
sbb
pop
add
sub
xor
ficompl
adc
jg
or
pop
pushf
inc
jns
push
cmp
cmp
test
insl
sbb
dec
iret
idiv
lock
xchg
lds
or
xchg
xor
out
sub
cmp
jns
push
outsl
popa
lods
int3
and
sub
xor
sbb
leave
dec
clc
jno
into
arpl
pop
repnz
andb
ret
inc
lret
and
jo
jb
ret
stos
int
and
dec
xor
pop
xor
es
ja
in
loop
hlt
aad
xlat
dec
lods
mov
loopne
pop
sbb
mov
arpl
fistpl
arpl
lods
dec
ret
fwait
nop
stos
popf
jecxz
aaa
cltd
mov
call
push
fbstp
cmp
int3
aam
les
xchg
adc
out
imull
dec
cmp
and
in
dec
ret
sub
inc
mov
lret
or
push
sbb
push
sahf
ds
insl
fwait
lret
sbb
insl
idivl
inc
add
sub
rclb
pop
setae
rcrl
fdivl
push
test
inc
and
cmp
cmpsl
repnz
inc
add
orl
stos
iret
or
lds
add
int3
add
cmp
bnd
push
repnz
out
sub
mov
cmp
sbb
fwait
out
cwtl
inc
ret
js
sub
mov
mov
or
jp
pop
jge
push
test
rorb
pop
movsb
mov
and
sar
xchg
push
inc
dec
and
pop
xchg
adc
testl
xchg
ja
imulb
inc
jns
push
cmp
mov
xchg
cmp
adc
in
in
lock
dec
cmp
and
movsl
popf
fidivrs
repnz
pop
adc
pop
jecxz
mov
xlat
jnp
xorb
sub
push
mov
add
aaa
popf
cmp
int
loop
mov
scas
mov
jo
je
fcmovnbe
loopne
jmp
push
xchg
jbe
mov
mov
das
icebp
lds
mov
js
xchg
mov
jecxz
inc
push
dec
push
mov
pop
or
push
push
aas
inc
aas
cmpsb
cmp
cmp
shrl
testl
xchg
add
or
xor
and
push
cld
cmpsb
sbb
xor
imul
dec
pushf
adc
xchg
fdivl
lcall
inc
into
cmp
ret
mov
xlat
or
insl
add
shrb
subb
mov
lcall
pop
test
jno
jp
or
cmp
cmpsl
pop
cmpsl
mov
fidivl
std
fs
inc
dec
push
stc
pusha
addb
in
mov
jle
imul
arpl
ds
jno
pop
xchg
lock
repnz
aaa
mov
adc
cld
bound
jne
mov
xor
inc
sbb
inc
jmp
jo
outsl
daa
cli
adc
pop
rcr
and
add
adc
push
mov
jmp
lcall
popa
ds
lret
les
xchg
movsb
movsl
jnp
movb
outsl
adc
sti
mov
decb
or
cmp
sbb
faddl
sti
rcrb
jmp
xor
push
int3
mov
das
and
in
rcrl
sub
mov
or
mov
ljmp
jg
xor
jg
mov
add
or
lods
push
xor
cmpsl
xchg
sbb
leave
repnz
jl
push
into
in
dec
ljmp
add
stos
cmpsb
out
add
dec
stos
and
mov
movsb
and
scas
pop
dec
mov
pop
mov
dec
lret
stos
incl
je
mov
out
testb
sahf
lret
mov
nop
push
cmp
push
loop
mov
or
push
xchg
pop
push
dec
int3
mov
out
mov
aaa
cmp
jge
or
sub
loop
std
test
or
pushf
xor
mov
xchg
inc
es
mov
ret
mov
xchg
pop
inc
test
je,pn
filds
shrb
jo
dec
rcll
inc
aam
loop
repz
fwait
ds
push
andb
movb
or
xchg
inc
pop
ds
sbb
xchg
and
push
mov
movsl
ja
int3
push
jns
popa
test
sub
jmp
insb
add
clc
stos
in
mov
fs
jb
adc
int
push
fldt
jl
fdivrs
push
fiaddl
push
add
inc
and
xor
insl
ljmp
cmp
adc
pop
cli
mov
imul
xchg
into
xchg
hlt
mov
xor
cld
cmp
mov
rolb
inc
pop
xor
cld
adc
sets
cmp
sub
pop
inc
test
xor
adc
rolb
cs
dec
icebp
cmp
movl
and
push
xchg
lods
inc
out
add
lock
inc
mov
stos
mov
xor
mov
cmp
cmp
xchg
inc
sub
mov
aas
sub
popf
adc
mov
icebp
adc
ja
loop
ljmp
repz
outsb
into
outsb
push
fwait
add
jo
mov
xchg
jns
and
test
das
stos
push
loope
stos
dec
mov
push
push
loop
out
mov
aad
mov
dec
and
jl
xchg
xchg
sahf
jg
test
dec
fmul
les
loopne
jno
arpl
pop
dec
sbb
mov
fs
fdivr
imul
xlat
or
outsb
ja
enter
ss
in
mov
fwait
ss
imulb
fs
gs
and
dec
xchg
arpl
or
sub
fidivrs
mov
std
xchg
pop
push
inc
les
out
pop
mov
add
loopne
xor
mov
adc
sub
push
xchg
or
pushf
inc
mov
aas
pusha
pop
leave
imul
cmp
into
push
cmp
mov
push
inc
lret
outsb
push
push
adc
rcr
pop
cmp
xchg
pop
bnd
cmp
mov
dec
cmp
sub
xchg
sub
pop
pop
lods
daa
lods
nop
insb
adc
inc
dec
leave
inc
xchg
push
xchg
push
jmp
jno
imul
xchg
cmp
int3
jo
or
pop
push
iret
fisubrl
dec
pop
mov
fwait
in
lret
fldenv
sbb
mov
push
enter
loope
xchg
jp
add
ja
sbb
or
xchg
movsl
stos
add
loope
je
pop
rorb
in
lret
sub
jecxz
pop
xchg
mov
mov
mov
inc
std
fstpl
mov
into
mov
dec
shrl
fnstcw
ret
mov
add
js
mov
mov
fcomps
testb
pushf
mov
mov
sti
cltd
push
mov
ds
mov
xchg
cmp
xchg
pop
adc
loop
lock
xchg
daa
mov
lock
imul
and
lods
clc
push
push
mov
mov
sbb
incl
push
loope
les
ficoml
or
sub
pop
cmc
lcall
mov
push
push
arpl
sub
outsb
nop
mulb
mov
pop
ret
subl
adc
scas
out
pushl
cmp
fildll
movsl
pop
dec
jnp
test
aam
out
push
stos
mov
js
and
pop
jl
scas
fs
xchg
mov
out
iret
inc
cwtl
pop
push
mov
sbb
xchg
test
or
or
out
pop
addb
int3
and
mov
int3
les
xlat
addr16
sbb
xchg
pop
ljmp
out
xchg
push
hlt
data16
push
push
shlb
sub
xchg
xlat
pusha
xor
xor
sahf
jne
dec
jecxz
xchg
fiadds
cmpl
fstps
xor
xor
pop
cmp
add
adc
call
dec
xor
loope
imul
pushf
es
cs
je
pop
nopl
xchg
mov
jb
jne
mov
cmp
mov
dec
pusha
fistps
pop
xchg
in
dec
mov
cltd
scas
fsub
lret
outsl
pop
jg
cmpsb
mov
xchg
movsb
out
lret
insb
loop
cmp
int3
das
icebp
mull
mov
int
sar
out
or
cld
jmp
insl
adc
es
aam
xchg
mov
or
jne
fisubl
repnz
icebp
sbb
dec
sahf
pushf
lret
loop
das
push
fiadds
mov
jne
push
inc
fs
pop
stos
notb
ja
psrlq
out
mov
in
xchg
out
jmp
andl
mov
gs
jp
sahf
leave
fisubl
ret
js
add
enter
scas
es
or
mull
rorl
cmpsb
fstl
cmp
repnz
dec
add
jmp
add
mov
xor
sbb
sti
fadd
mov
das
js
movsb
xor
sub
shlb
mov
iret
lahf
jecxz
rolb
out
sub
add
std
sub
fsubs
cmpl
andb
lock
add
lahf
adc
xchg
jle
lods
repnz
ficompl
xchg
fadds
sbb
adc
dec
popa
ss
xor
leave
stos
or
xchg
mov
nop
sub
add
ret
jb
xor
hlt
fistl
xchg
dec
mov
ljmp
loope
xchg
stc
jo
mov
into
add
xor
xchg
jno
xor
sub
inc
out
add
push
fdivs
jl
and
add
scas
adc
dec
mov
cld
sub
popa
les
xlat
pop
jns
in
inc
aam
push
aam
enter
fstps
xor
jge
lods
out
pop
daa
lds
inc
push
mov
addr16
fildll
daa
lcall
movsl
enter
pop
fdivs
pop
frstor
lcall
cld
addl
fs
stos
mov
push
fwait
push
xchg
mov
or
adc
push
xor
jae
ror
sub
jecxz
xchg
pop
lds
adc
insb
or
inc
mov
cld
lock
stos
mov
and
or
lret
test
ss
andb
aad
push
movsb
pushf
sahf
mov
xchg
sub
ja,pn
inc
push
mov
imul
insb
bnd
sub
mov
push
rorb
data16
mov
cmp
mov
lcall
test
shlb
orl
mov
lock
mov
leave
pop
arpl
pop
pop
pop
push
cmp
lret
dec
in
das
lahf
xchg
fldcw
xchg
mov
cmp
jle
fidivrl
sub
in
in
out
popf
fbld
in
loope
ds
xor
cli
xor
mov
data16
imul
sbb
je
fisubl
fists
lea
inc
data16
stos
or
jecxz
push
or
or
je
sub
push
xor
call
fcompl
stos
sub
sub
and
push
lock
push
int3
rcll
shll
mov
jp
in
pop
jns
mov
pop
or
notb
repnz
xchg
push
sbb
into
test
stc
rorb
inc
sbb
cmp
and
cmp
xchg
ret
xchg
les
dec
mov
or
sub
adc
notb
rcrb
inc
and
mov
je
dec
rorb
adc
icebp
mov
pusha
outsl
xor
ficoms
pop
jb
mov
inc
call
fmuls
js
jge
mov
fcomps
add
inc
lods
repz
pop
movsl
int
popf
cmp
mov
mov
out
xchg
cmpsl
push
mov
outsl
or
cmp
add
cmp
movsb
imul
stc
out
and
cld
push
popa
xor
int3
fnstsw
push
sbb
mov
lods
dec
cmp
mov
dec
fcmovne
negl
lret
and
jno
cmp
or
push
stos
je
cmpsl
mov
jp
cmp
sbb
mov
lods
jne
popf
push
jge
sar
pop
call
cmpsl
fidivrl
mov
mov
add
xchg
jno
aas
ficoml
xor
out
sub
lcall
arpl
and
pusha
ds
or
mov
cs
pushf
and
sarb
adc
pop
inc
mov
repnz
xchg
outsb
cltd
sti
ljmp
fimuls
iret
in
pusha
mov
aaa
out
rol
lret
movsb
aaa
loopne
arpl
fildl
cmp
sbb
in
pop
in
call
cmp
jg
sub
outsb
repnz
xchg
ret
inc
sub
stos
cmovnp
dec
sub
popf
inc
lock
mov
adc
lret
sti
or
movsb
sarb
and
aas
into
mov
insl
jle
push
nop
and
cli
mov
pop
je
push
adc
movl
lret
lret
pop
clc
hlt
out
outsl
daa
scas
pop
or
notb
sbb
lock
scas
adcb
add
test
in
xlat
stos
push
inc
and
xor
imul
inc
push
inc
movsl
jnp
scas
popl
inc
push
faddl
sbb
popa
repnz
aad
cmp
cli
pop
push
cmp
jo
rcll
cwtl
xchg
fstpt
mov
xchg
pop
mov
es
fs
and
out
je
fistpll
inc
xlat
lock
sbb
add
cwtl
xchg
jo
jb
imul
stos
jns
pop
movb
cmp
mov
or
mov
xor
in
push
inc
lock
xor
lret
lea
mov
cld
mov
pop
add
adcb
fmulp
xor
inc
fisttpll
xchg
scas
jb
pop
popf
or
jle
cltd
adc
pop
stos
mov
inc
ljmp
jge
inc
dec
push
enter
xchg
out
scas
xchg
mov
sub
in
inc
push
add
fildll
out
jns
xor
xor
mov
loop
add
xchg
repz
sbb
or
jbe
mov
daa
test
push
fstl
add
loope
cmp
and
jns
mov
mov
add
pop
sarb
xor
push
inc
and
das
and
jbe
orl
xchg
mov
jle
xchg
push
or
stos
inc
pop
repz
inc
sub
aas
sahf
mov
out
stos
pop
and
stos
add
std
add
mov
or
hlt
insl
bound
mov
jo
mov
std
addr16
cmpsl
add
mov
cmpsl
jns
xchg
mov
lock
jp
adc
icebp
cmp
into
arpl
and
inc
and
test
sub
push
clc
jecxz
ja
mov
sbb
shrb
sbb
pop
call
test
jnp
xchg
adc
lock
xchg
pop
xchg
ret
cmp
or
or
cmp
jg
insb
cltd
insl
pop
test
test
je
pop
adc
push
int
pop
in
packssdw
jnp
jbe
sbb
sbb
aas
rcl
push
sub
add
popf
ss
sbb
loopne
sarl
arpl
out
cwtl
or
adc
shl
jp
lea
xchg
sub
jle
cmp
pop
mov
stos
push
ret
stos
aad
inc
add
cmpb
je
dec
loop
mov
adc
sahf
add
rcrl
xor
fnstsw
scas
into
rcrl
ja
adc
inc
aad
ljmp
mov
not
push
popf
rcr
inc
mov
pop
andl
nop
lret
pop
movsl
jo
outsl
sbb
fcmovu
dec
jae
mov
ja
loop
call
or
jns
jb
fdivrs
cmp
shld
push
rorl
xchg
ret
movsb
xorl
lods
mov
cmp
xchg
push
push
fiaddl
inc
mov
test
xchg
pop
out
dec
inc
dec
ficomps
and
roll
shlb
or
shrb
nop
pusha
outsl
adc
add
sub
mov
ret
iret
ja
xchg
or
cmp
repz
fbstp
cmp
imul
push
fldenv
les
xor
scas
xchg
jbe
push
add
in
in
fldenv
inc
pop
and
mov
pop
test
scas
pop
pusha
shlb
pop
insb
aad
push
push
mov
sbb
outsb
jle
xor
push
lods
xor
or
cmp
repnz
inc
inc
add
lfs
dec
mov
xchg
push
jbe
pop
pop
jecxz
and
movsl
es
pop
lahf
or
clc
inc
daa
cwtl
xchg
pop
push
xchg
or
lahf
int3
pop
mov
add
and
add
imul
in
lds
adc
lcall
rolb
addr16
test
pop
rorl
cs
jmp
pop
lock
test
ret
pop
add
adc
sub
pop
inc
push
ja
dec
dec
mov
popaw
mov
jae
popa
fcmovu
in
inc
mov
push
mov
out
xchg
mov
jge
or
xchg
ret
fistpll
fldenv
pop
jge
repz
in
ret
xchg
push
mov
sbb
sub
mov
es
jmp
mov
fcoms
outsb
fs
xor
movsb
inc
xchg
ret
jmp
and
jl
movsb
mov
pop
outsl
pop
lods
call
lock
insl
push
loop
out
cmp
mov
pusha
xchg
loopne
push
dec
out
add
cltd
aas
mov
lcall
sbb
push
inc
loopne
add
or
jb,pn
xchg
in
shl
push
pop
xchg
ss
and
insb
and
mov
sbbb
xorb
addb
cs
lahf
popa
jp
fs
loopne
pop
mov
adc
push
cli
int3
or
jmp
iret
int
dec
hlt
jle
insl
dec
frstor
xor
leave
fnstsw
xchg
popf
mov
sbb
add
jle
popa
loope
aam
stc
enter
xchg
insb
xor
dec
fmull
or
mov
dec
outsl
in
fidivs
and
loop
sbb
lock
xor
inc
lods
in
sub
sbb
lcall
sysenter
push
or
clc
enter
outsb
ffreep
xor
dec
sbb
popf
dec
sub
aas
add
push
xor
fcmovnbe
add
dec
sub
sbb
lret
push
cltd
push
push
test
orl
jb
xor
push
stc
sub
insl
cmp
xor
jmp
mov
xor
jno
sbb
add
test
mov
fnstcw
fisttps
paddw
ret
fiadds
imul
icebp
and
movsb
dec
mov
fwait
adc
inc
icebp
pop
pop
cmp
shl
mov
jg
add
int3
add
xlat
outsb
cmp
leavew
dec
je
push
pop
negb
add
add
cmp
shlb
in
push
scas
mov
repz
addr16
ljmp
mov
adc
inc
inc
js
mov
imul
dec
sbb
mov
or
sub
leave
push
cmpb
fxch
sub
inc
outsb
pop
bound
add
jae
pop
test
sub
and
mov
push
in
xorl
xchg
les
add
out
lret
jbe
or
shrd
jno
xor
pusha
sarl
and
mov
mov
out
lahf
dec
fdivs
mov
rcrb
mov
movsb
mov
icebp
leave
test
mov
xor
mov
mov
pop
faddl
mov
outsb
add
mov
mov
xchg
jae
jbe
dec
xor
adc
or
push
and
mov
and
mov
loop
add
das
insl
cltd
add
cmpsb
aam
fnsave
xchg
mov
pushf
xchg
out
in
pop
fidivl
dec
test
mov
xor
adc
gs
inc
sbb
icebp
or
int3
xchg
out
xchg
add
loopne
lcall
dec
lods
loope
dec
dec
outsl
adc
incb
add
in
cmp
adc
xchg
repnz
aaa
lods
and
adc
stos
lret
add
mov
xchg
ret
out
out
mov
dec
test
insl
mov
in
rcrl
jmp
ret
fcomi
in
inc
call
inc
shl
int
das
xor
add
rorl
mov
pop
sbb
aam
pop
mov
sbb
mov
xchg
push
popa
cmp
insl
mov
shll
pop
pop
or
inc
jl
pop
jg
shrl
dec
rorb
and
dec
mov
orl
mov
jns
mov
cmpsl
and
xchg
push
clc
sar
sahf
or
pop
mov
aad
mov
nop
scas
ficoms
test
cmp
ucomiss
and
out
push
jb
adc
js
cli
mov
mov
jl
jns
mov
push
xor
std
dec
push
jb
jg
push
dec
daa
notl
aad
es
fcmovb
sbbb
mov
dec
sahf
insb
outsb
fadds
add
xchg
dec
jb
int3
mov
inc
adc
dec
nop
test
mov
and
adc
adc
add
jg
sub
mov
in
rcll
rcrl
add
insb
imul
push
push
mov
and
push
cwtl
pop
insl
jle
mov
popa
ds
into
push
mov
pmaddwd
sar
jae
mov
test
pop
repz
ss
push
ret
cmp
shrb
nop
cld
hlt
pop
lea
push
add
fstl
ds
in
dec
add
push
sub
aaa
push
xor
push
stos
fistpl
lea
push
fisubrl
stos
adc
adc
leave
push
loope
push
rol
out
adc
xor
jb
mov
mov
lods
lock
and
jl
add
jge
pop
mov
inc
ja
push
add
jl
pusha
std
shl
cmp
mov
add
push
xor
lods
subb
fiaddl
out
xchg
sbb
cmp
insb
xchg
and
movsb
subl
ljmp
push
sub
add
pop
push
daa
mov
or
ret
daa
pop
pop
mov
insb
ljmp
out
movsl
fistpll
btl
sbb
cmpsb
cmp
lcall
sar
or
push
push
lcall
ror
gs
mov
jno
cmpb
fnstcw
push
mov
xor
out
aam
mov
dec
scas
push
dec
mov
call
pop
dec
and
push
fisttps
pop
mov
mov
xor
push
scas
xchg
psubd
lods
and
sbb
or
lock
add
aad
jbe,pt
xchg
bound
jb
out
mov
inc
ja
lock
inc
movl
lahf
cli
sub
das
das
mov
mov
mov
sbb
ljmp
jecxz
push
jns
jb
pop
xchg
dec
clc
aas
lcall
pop
sub
xor
insl
dec
mov
mov
inc
sub
leave
inc
mov
xor
pop
sbb
xchg
pushf
push
cltd
mov
mov
sub
subb
pusha
xchg
hlt
clc
rcrb
out
in
jbe
sbb
pop
mov
push
movsl
adc
sbb
or
filds
lahf
fstp
jo
xchg
dec
aad
fistpll
fmul
push
and
jge
cmc
insb
cmp
xchg
or
loope
lods
fstp
cmp
or
scas
loop
xor
in
and
lds
jmp
ds
mov
ret
stos
mov
movsl
mov
in
addr16
subl
negb
mov
sahf
xchg
fwait
inc
out
sarb
xchg
or
jno
and
mov
mov
xor
pop
pop
lds
aaa
hlt
push
aad
fnstenv
int
movntq
or
push
dec
xchg
fildl
xlat
lret
jo
push
je
sbb
xchg
cwtl
xlat
mov
push
mov
bound
movsb
stos
sub
outsb
ds
inc
pop
mov
mov
fstp
inc
into
scas
addb
test
adc
cmp
and
add
pop
addr16
cltd
mov
addr16
dec
pop
lcall
add
aam
xlat
notb
and
or
lock
adc
xchg
jp
cmp
dec
out
xor
push
psubb
outsl
push
daa
dec
paddb
jge
and
leave
mov
out
lods
dec
daa
pop
and
xor
outsb
leave
add
mov
cmpsl
pop
gs
mov
es
mov
fists
fs
adc
lods
pop
ds
mov
dec
mov
jge
shll
and
or
add
dec
in
shlb
xor
jae
out
jecxz
jnp
xlat
sub
mov
ret
lods
rorl
dec
sub
mov
xchg
mov
in
dec
sbb
cmp
repz
sub
push
mov
or
pop
pop
das
leave
scas
pop
mov
cmp
sub
roll
sahf
push
ss
dec
rclb
jbe
lock
mov
xor
test
js
lds
dec
fidivs
dec
sti
mov
pop
or
sbbb
add
jnp
cmc
pop
push
mov
xor
xor
mov
test
pop
in
les
jns
ret
xor
mov
jae
or
pop
pcmpgtw
cmp
movb
adc
loop
inc
push
jno
mov
out
aad
mov
movsl
jecxz
std
xchg
sbb
stos
sbb
add
mov
pop
fstpt
fs
das
jnp
pop
jmp
xor
xchg
mov
out
ret
sbb
call
out
lods
sbbl
fldcw
add
dec
jg
fnclex
jnp
mov
xchg
dec
lcall
cmp
jae
or
fbstp
pop
orl
call
clc
pop
push
pop
dec
jne
push
mov
xor
adc
pop
sub
inc
dec
lret
inc
jo
mov
push
out
or
fdivl
xor
mov
mov
add
shrb
xchg
cmp
jae
mov
xchg
cmp
dec
push
negl
sub
mov
and
icebp
cs
hlt
lahf
lods
mov
mov
mov
cmp
xlat
or
std
je
shrl
mov
push
dec
lret
je
mov
lods
call
sahf
imul
jp
inc
push
xchg
dec
mov
shlb
adc
cmpsl
mov
xchg
in
cmp
xor
push
push
daa
stc
cwtl
in
adc
push
das
cs
aas
out
aam
pop
in
xor
scas
mov
mov
sbb
stc
decl
leave
mov
jmp
or
push
adc
xchg
insw
and
jge
adc
pop
aam
out
leave
or
jge
iret
sti
fdiv
and
dec
mov
pusha
inc
and
int
mov
sub
pop
les
pop
outsl
int3
aas
lea
insl
sub
out
mov
ja
pop
filds
out
cli
adc
or
ljmp
push
stos
lods
jg
mov
movsb
xor
clc
mov
dec
sub
jae
into
mov
mov
je
jbe
cmp
jg
xor
add
iret
mov
outsl
out
scas
ljmp
add
out
jg
pop
pop
sub
shl
add
addr16
or
xchg
mov
inc
jo
jp
jg
outsb
mov
jle
lcall
lods
imull
sbb
nopl
add
movl
inc
fldcw
sti
ror
int
out
inc
gs
je
js
int
mov
pop
je
cmp
shlb
aaa
jle
mov
popa
lods
push
xchg
mov
enter
lods
and
imulb
push
das
aad
add
stos
scas
test
repnz
xorb
fistpll
nop
mov
repnz
sub
push
repnz
push
mov
sbb
pop
decb
daa
xlat
fsubrp
bound
in
in
gs
data16
aam
sbb
jg
popf
push
addr16
mov
lahf
or
xchg
cli
cmpsb
rcll
int
in
xchg
cmp
std
xor
loope
cmp
xchg
sbb
sti
mov
push
cmp
sbb
out
mov
mov
jmp
sbb
rcrb
sub
andb
mov
pusha
sub
or
sti
add
outsb
inc
call
or
cli
stc
loope
ja
or
arpl
arpl
mov
inc
dec
pop
lods
dec
dec
mov
movl
inc
sbb
out
dec
insl
pop
jnp
lds
xchg
aas
into
fs
sub
push
adc
insb
imull
call
cmp
jle
fs
testl
adc
pop
dec
cltd
or
sbbl
cmc
lret
scas
test
fists
dec
lret
fisttps
sub
dec
jns
jae
mov
fs
pop
mov
lock
adc
gs
bound
jge
daa
mov
pop
daa
leave
outsb
ljmp
cmp
cmp
mov
mov
jg
pop
test
pcmpgtw
stos
clc
lahf
inc
ret
adc
or
addl
and
xor
xchg
inc
ss
mov
fsubrl
push
jmp
jecxz
push
je
push
jl
adc
mov
ja
mov
xchg
sub
or
mov
scas
mov
add
cmp
jecxz
fbstp
pop
paddsb
jo
scas
repz
lahf
cld
aas
adc
sbb
stos
jg
cs
fucomp
jnp
sbb
jl
dec
popa
cmp
jge
dec
aad
bound
xor
mov
shlb
xchg
xor
push
mov
movsb
sub
adc
mov
xchg
out
push
pop
xor
fcoms
aaa
dec
mov
mov
movsl
scas
pop
std
iret
adc
cli
cmp
lock
lods
shl
xchg
icebp
clc
ret
inc
mov
jmp
jno
repnz
das
adc
pushf
gs
jl
xchg
cs
mov
push
fcompl
data16
lret
iret
add
addb
mov
pop
out
ficompl
outsb
cld
pop
stos
mov
rorb
dec
mov
xorb
push
jecxz
sbb
pop
xor
xchg
jo
scas
sbb
in
inc
ret
mov
sub
pop
mov
mov
shll
rcl
pop
xlat
add
lock
fcmovbe
jmp
cmp
fwait
xchg
test
jmp
mov
pop
add
sub
test
push
jle
cmp
fsubl
and
clc
ficoml
push
sbbb
aas
repz
or
in
cmp
or
divl
int
sbb
pushf
xor
pop
jns
enter
std
scas
push
add
cmc
and
adc
shlb
in
arpl
cmp
cmp
fbstp
xchg
xchg
test
pushf
push
jbe
rcrl
addr16
adc
loop
sub
xchg
xor
xchg
outsb
sahf
mov
sbb
imul
lcall
bound
cmp
int3
jecxz
ret
testl
pop
mov
insl
sarl
or
scas
dec
je
loopne
cmp
pusha
sbb
push
stos
mov
mov
mov
arpl
ret
scas
jecxz
mov
into
movzbl
push
jnp
or
test
fisubrl
fdivs
das
subb
xchg
jb
test
cmp
idivb
jge
lea
push
sub
mov
xor
mov
sbb
mov
mov
mov
jmp
testb
insl
bound
mov
push
cmp
fisubrs
not
insl
xlat
shl
push
mov
or
jne
xchg
jae
icebp
ss
test
xchg
notb
pop
ja
icebp
xor
stos
push
sbb
imul
imul
pop
scas
jne
pop
in
out
aad
hlt
jo
fisubrs
fistps
stos
sti
test
dec
push
adc
fadds
mov
push
or
xchg
mov
lock
jns
fsubl
or
cmp
call
jl
shlb
jge
dec
dec
pop
push
daa
mov
inc
int3
das
cmp
push
rcll
insl
les
sbb
xchg
rorl
xchg
fstpt
adc
rcrb
xchg
fstl
mov
cmp
inc
mov
jbe
fcmovbe
in
pop
bound
int3
pop
inc
add
arpl
pop
stc
lret
cs
pop
outsb
ret
sub
iret
loop
sbb
xchg
push
lahf
and
ss
sbb
mov
push
shlb
sbb
push
aaa
adc
ljmp
lds
bound
idiv
add
xor
les
fcmovu
sti
out
enter
jmp
add
pusha
sti
popf
test
xor
adc
inc
xor
lcall
mov
xchg
mov
pop
cld
pop
repz
das
xor
mov
scas
xor
es
test
test
icebp
dec
adc
jge
xchg
xor
popf
xchg
imul
popa
and
js
sub
push
jle
jmp
std
inc
xor
xchg
adc
fcmovbe
and
add
insb
out
popf
xchg
xchg
jmp
sub
dec
jecxz
std
movsl
dec
repnz
dec
stos
or
lahf
sub
and
jmp
shlb
sub
xor
jns
sbb
cmp
jp
movsl
test
or
mov
cmc
pop
cmp
lahf
xor
mov
push
sub
sbb
pusha
and
xchg
std
clc
xor
nop
mov
fs
jg
sbb
movsl
sbb
fucomp
mov
cmpsb
sbb
and
and
add
inc
jg
inc
ljmp
mov
out
dec
mov
push
dec
push
ljmp
mov
dec
mov
push
out
cmp
xlat
std
jo
mov
test
pop
push
adc
call
dec
loope
dec
add
lds
sub
mov
jae
loope
dec
sbb
cmpsb
in
lahf
inc
cmpsb
add
pop
test
mov
mov
xchg
into
es
jg
sbb
scas
pop
add
pusha
leave
das
pop
sub
ficompl
outsl
flds
fisubs
je
lcall
test
arpl
inc
add
and
imul
xlat
dec
sti
or
add
adc
pop
pop
cmp
mov
mov
push
cmpsb
mov
add
jo
and
add
adc
sub
stc
push
and
shl
dec
movl
andb
popa
dec
mov
adc
les
scas
add
mov
in
je
int3
ret
jae
lods
sahf
push
std
or
inc
fcomip
in
xlat
arpl
inc
dec
jns
fcoms
cmp
xchg
push
push
mov
mov
pop
inc
shrl
in
jmp
cmp
add
popa
push
ds
cmc
mov
jnp
je
xor
cmpsb
daa
mov
jmp
dec
ss
mov
sub
enter
mov
cmpl
xchg
xor
mov
push
cwtl
jl
test
stos
loopne
in
pop
push
repz
jns
adc
mov
lds
adc
idivl
jecxz
push
pop
sub
ljmp
fldt
je
xor
and
rcl
push
jne
cmp
ss
mov
push
push
adc
call
jp
fidivrs
mov
mov
adc
repnz
and
pop
andb
mov
xor
push
aam
das
stc
jo
jg
adc
in
mov
jge
movsl
loopne
adc
pop
sbb
fistps
aam
mov
push
cltd
pop
sub
xor
mov
mov
mov
stc
jns
in
test
mov
repz
push
adc
ret
mov
rclb
mov
inc
dec
scas
rcll
out
cli
lds
sub
sahf
movsb
adc
bnd
lods
mov
cmp
cld
cmc
add
fimull
xchg
sub
push
pop
imul
add
out
inc
mov
dec
pop
pusha
mov
frstor
add
mov
and
xor
lods
mov
and
fimuls
fnstcw
xor
xchg
arpl
fsubrs
jno
fnstenv
adc
lahf
rcrb
popa
pop
mov
adc
sub
lret
int3
movb
insl
sbb
jo
pop
add
adcb
fidivl
cmp
dec
stos
mov
dec
fidivrs
jno
pop
xchg
mov
in
andl
add
xchg
xchg
je
xor
sbb
inc
cmp
daa
dec
mov
jne
xchg
insl
scas
cmp
cld
push
stos
lds
mov
movsl
lods
push
ds
stos
inc
out
mov
mov
and
ds
adc
and
dec
add
mov
or
int
inc
cs
pop
shrl
pop
sub
in
cmp
adc
xor
sahf
shll
data16
out
dec
int
push
xchg
fnstsw
xchg
fidivrl
idivl
cmc
xchg
xor
add
aas
daa
sub
arpl
cld
xchg
pushf
out
test
or
and
lahf
sub
pop
fstpt
and
mov
add
mov
push
push
popf
hlt
cs
xor
xor
mov
out
adc
or
cmpsb
negl
loope
data16
pop
mov
cltd
mov
insl
pusha
and
mov
ficoml
test
inc
mov
push
call
pop
inc
mov
xchg
xchg
out
pusha
ret
cld
cmp
clc
sub
cltd
mov
lahf
int3
add
hlt
cmpsb
stc
push
fldl
ljmp
pusha
neg
pusha
lcall
sub
jg
jp
or
cmpsl
jle
iret
xor
loopne
shll
dec
aam
push
daa
hlt
pop
or
cmc
push
fsubrl
test
or
mov
push
inc
jnp
mov
mov
dec
insb
cmp
repz
pop
sbb
cmp
jne
xchg
cmp
inc
pop
or
cli
adc
jmp
mov
xlat
sbb
es
repz
sub
cmc
mov
sbb
and
push
in
dec
adc
out
xchg
xchg
cmpsl
in
xor
stc
cmp
adc
fisttpll
xor
push
xor
dec
or
push
int3
call
test
fwait
cmp
pushf
sarb
jge
outsb
lret
fstl
cltd
xchg
cwtl
jno
adc
fimull
loop
in
inc
loop
inc
pushf
icebp
mov
cmp
aam
jle
inc
add
push
out
cmp
pusha
xchg
xor
and
fwait
neg
icebp
and
lock
add
push
idiv
mov
adc
mov
sub
ficoml
int
loope
stos
adcl
inc
dec
imul
xchg
xchg
add
add
lcall
cmp
popl
cmp
jp
int3
int3
pop
xlat
push
push
cli
fcomip
push
xor
fsubrl
pop
loope
cmp
addr16
and
les
jecxz
ljmp
xor
sub
dec
mov
cmp
gs
push
sub
jp
mov
fidivrl
sahf
dec
lds
lcall
in
sub
orb
cltd
adc
fsin
and
xor
xchg
push
fisttpll
push
js
aam
leave
insl
push
xor
pop
leave
fcoml
pop
adc
pop
jmp
call
shrb
leave
ds
test
sub
sarb
int3
aaa
out
cli
jecxz
lds
and
dec
inc
gs
mov
negb
shll
cmc
mov
mov
cmp
xlat
cmp
std
ret
cld
sbb
pop
jle
sbb
mov
push
ret
pop
push
inc
adc
mov
mov
mov
sti
in
cltd
cmpsl
xor
mov
repz
adc
cmp
outsl
aad
jl
and
mov
ficoms
scas
jbe
push
adc
mov
xchg
insl
pop
mov
cmpsb
arpl
in
ja
mov
lahf
sub
and
pop
cmc
orb
add
mov
pop
mov
shll
add
add
out
bound
stos
outsb
jmp
mov
test
idivl
add
loop
xlat
clc
fisubl
push
lcall
les
sarl
mov
xchg
sub
or
es
and
inc
mov
lcall
xor
xor
add
mov
int
adc
out
cmp
sub
ss
xchg
and
jle
mov
and
int
push
add
mov
scas
aad
stos
jmp
stos
adc
pop
sbb
mov
nop
or
xchg
xchg
or
enter
mov
mov
out
mov
in
fnstenv
sub
je
and
pop
mov
pushf
push
push
xor
pop
push
sbb
mov
xor
inc
mov
fbstp
mov
rorl
dec
pop
cmp
lret
fadds
shlb
and
insb
fsubrs
inc
mov
insb
pop
mov
orb
jae
mov
cmpsw
push
xor
lock
aam
imul
loope
inc
sub
push
mov
inc
fwait
pop
add
xlat
js
mov
sub
data16
dec
dec
jo
aaa
mov
scas
es
popa
pop
mov
cli
adc
jo
enter
or
je
push
mov
add
psubsw
mov
rcll
dec
sbb
inc
inc
xchg
inc
xchg
inc
adc
pop
subb
jno
addr16
stos
ret
cld
xchg
stos
leave
mov
and
xchg
arpl
fmulp
xor
mov
sub
test
int3
mov
sarb
lods
imul
push
dec
or
pop
mov
mov
ja
loopne
mov
pop
into
ret
out
mov
lcall
pop
and
add
push
sbb
cmp
test
xchg
jno
es
pop
adc
jle
jp
jmp
dec
jne
lock
aas
neg
subl
and
push
mov
bound
rcr
movsl
sbb
mov
fists
sub
lods
sbb
mov
fsub
outsb
js
adc
outsl
xchg
aas
or
in
subl
jae
bnd
out
arpl
mov
stos
sahf
jae
popa
aam
push
imul
outsl
jbe
aaa
mov
cmp
sti
ljmp
xchg
push
push
adcl
jne
jne
push
pushf
cld
notl
nop
inc
push
dec
or
testl
mov
xchg
adcl
sub
mov
movsb
cmp
dec
dec
jnp
xchg
jns
jecxz
pop
lds
test
mov
add
aad
push
pop
add
mov
mov
xlat
push
or
pop
inc
in
xchg
mov
lock
add
int
pop
fldt
mov
sbb
rcll
mov
ds
cs
popf
repz
insl
jbe
pop
fcmove
cmpsb
lds
mov
mov
scas
leave
mov
test
inc
popa
ljmp
rcrb
bound
movsb
sub
sahf
jae
fidivrs
imul
clc
jp
or
mov
aaa
popf
xor
mov
push
sti
adc
shlb
push
pop
popf
hlt
inc
xor
ja
push
sub
es
mov
fstl
mov
lret
pop
mov
movsb
xor
pop
add
cmpsl
dec
pop
mov
aam
in
xor
leave
out
or
jg
or
add
mov
jbe
or
fdivrs
imul
mov
fistpl
adc
xchg
add
adc
sbb
icebp
stc
lock
jbe
xchg
fbstp
popa
xchg
add
cmp
cltd
xchg
sub
fstpl
leave
or
pusha
xor
push
outsl
sub
mov
pop
in
ljmp
stc
cmp
add
lods
lcall
enter
inc
and
adc
outsb
lret
cltd
mov
cld
insl
rcrl
dec
out
mov
aas
pop
and
lock
lret
call
enter
xor
or
push
leave
mov
mov
fisubrs
fs
sahf
leave
lret
jne
push
arpl
xchg
dec
in
mov
faddp
imul
iret
sbb
cli
shll
dec
aam
je
xor
mov
das
pop
mov
mov
dec
xchg
inc
jmp
jle
xchg
pop
pop
adc
jne
icebp
jne
fistpll
addr16
loop
add
in
and
xchg
std
sbb
fsubrl
xchg
imul
push
loope
andl
mov
mov
push
jge
aaa
cmp
dec
mov
lret
pop
jns
fxch
in
std
or
int
sbb
aam
cmp
sbb
cli
enter
mov
in
adc
xchg
stos
les
push
sarl
lock
divb
enter
add
xchg
pop
test
add
jno
notb
inc
mov
mov
lahf
and
adc
sub
push
push
mov
cmp
jbe
shrl
mov
mov
xorb
mov
sti
shrb
xor
sbb
ljmp
sub
lods
popf
inc
sbb
mov
ljmp
and
or
jae
hlt
inc
test
repz
xor
xor
les
lods
pushl
mov
clts
or
pop
pop
mov
lock
insl
jne
add
and
mov
adc
or
mov
or
daa
or
mov
adc
rcrb
xor
sahf
xor
popl
mov
mov
push
xor
dec
xchg
leave
mov
inc
mov
xlat
clc
lea
push
rcr
adc
movsb
stos
jl
rorl
inc
and
push
lock
or
pop
jle
decl
pop
and
and
pop
cmp
test
out
xor
pop
lods
xor
cld
xchg
ja
pop
fs
and
mov
in
shlb
in
push
add
lahf
pop
inc
into
add
jns
scas
cmp
add
xor
mov
xchg
dec
dec
xchg
mov
sahf
pop
mov
sbb
or
mov
popa
ds
pop
mov
sbb
lea
addr16
xorb
jge
sahf
aam
xchg
inc
stos
adc
pop
sub
lea
insb
push
dec
push
in
jnp
enter
cmp
xor
shr
jbe
mov
pusha
dec
and
in
aaa
rol
add
pushf
push
sub
out
mov
or
addb
and
shll
outsl
enter
ja
push
inc
fisubrl
insb
mov
sub
dec
gs
pop
imul
xor
fdivl
ljmp
push
dec
jb
lods
push
leave
mov
popa
jecxz
push
add
jl
ret
add
popf
push
add
das
test
fwait
sbb
pop
mov
xchg
mov
add
divl
stos
int3
scas
push
xchg
clc
jbe
adcb
push
js
xchg
add
loop
dec
daa
mov
cmpsb
xchg
adc
mov
stc
jno
repz
dec
pop
insl
loop
sbb
imul
inc
out
into
jno
jae
rorl
inc
aaa
mov
and
loop
mov
or
and
ficomps
xor
adc
dec
mov
mov
sbb
cmp
pop
movsl
add
movsb
lods
cmpsb
stc
mov
out
pop
pop
ds
sub
ret
fisttpl
jns
jne
stc
mov
int3
adc
imul
sbb
mov
out
mov
sbb
lcall
out
addr16
sub
repz
and
ljmp
dec
js
bound
push
sub
sbb
out
inc
jae
xchg
fnstsw
pop
push
sbb
es
add
std
dec
xor
movsb
inc
cmc
mov
lret
push
ret
adc
mov
xchg
xor
dec
jno
outsl
std
mov
icebp
je
add
fdiv
mov
popa
aaa
inc
stos
pusha
jp
mov
scas
and
hlt
mov
inc
popf
div
jnp
mov
imul
push
push
mov
cwtl
mov
sub
cvtps2pi
andb
pusha
movsb
sti
pop
iret
adc
cwtl
pusha
test
int3
test
ret
inc
enter
cmp
xor
into
lods
int3
imul
or
ret
addr16
mov
mov
pop
push
lds
int3
ret
shl
or
mov
lahf
jl
in
test
mov
imul
negl
push
sub
or
lock
test
das
sbb
xlat
jmp
dec
cmp
sarl
loopne
cmpl
rolb
iret
inc
stos
xchg
xor
push
xchg
push
aam
sub
push
divb
jge
sbb
loopne
pushl
jns
sub
rorb
pop
pop
shrb
xor
mov
push
pop
mov
jbe
push
les
lea
in
sub
push
popf
lods
jmp
xchg
in
and
add
jmp
lock
popf
adc
movsb
insb
xchg
in
dec
inc
add
out
add
cld
mov
or
inc
adcb
or
cmpsl
aad
pop
divl
out
jge
dec
pop
test
mov
stc
out
xor
nop
hlt
jns
cmp
cmp
scas
dec
add
std
inc
or
mov
add
xchg
mov
xchg
outsl
cltd
push
mov
sar
sbbl
test
push
jge
cmpsb
ss
in
mov
dec
lods
sbb
lahf
aas
mov
xchg
iret
jo
pop
cmp
sarl
fldenv
push
cwtl
sub
stc
push
das
insb
xor
inc
mov
inc
inc
or
inc
mov
sub
xchg
insl
popa
and
les
dec
imul
bound
pop
dec
aaa
aad
jne
mov
into
shll
ret
xchg
inc
mov
lret
lret
jae
mov
or
stos
in
test
lock
sbb
les
sti
ljmp
jb
sub
cmpsl
leave
or
data16
jno
push
dec
mov
ret
jmp
and
mov
mov
mov
push
jle
arpl
cs
fistps
popf
aad
adc
filds
out
add
testl
inc
movsl
cmp
push
dec
fldt
bound
paddq
pop
add
out
inc
fs
roll
scas
mov
push
xlat
pop
iret
js
imul
xchg
adc
bound
mov
orb
inc
push
andl
fwait
loope
inc
ds
shrb
mov
lods
lds
es
imul
xchg
pop
xchg
lcall
mov
scas
or
sbb
sub
mov
ficomps
sub
mov
pop
adc
mov
add
inc
sbb
roll
insb
pop
cmp
rolb
and
mov
scas
mov
xchg
popa
cmp
xlat
mov
ja
adc
jbe
inc
dec
les
adc
jne,pn
lea
xor
test
pop
sbb
test
add
outsl
mov
clc
ss
dec
jbe
mov
mov
and
ljmp
pop
les
mov
call
add
outsb
and
insb
cwtl
shrl
movsl
in
push
popf
sub
adc
stos
inc
cltd
cmp
sbb
sbb
mov
dec
lods
mov
pop
test
jmp
stos
mov
data16
bound
jns
mov
fs
xchg
push
add
or
jecxz
lahf
sbb
mov
lcall
jb
pop
pusha
pop
cmp
push
in
cmp
jmp
in
movsl
std
movsb
sbb
call
pop
stos
xlat
out
sbb
add
data16
dec
test
ljmp
pop
out
lea
dec
jl
or
add
jmp
lods
add
outsl
jb
lahf
xchg
mov
into
or
jmp
mov
push
addl
jmp
repnz
mov
cmpsb
imul
xor
add
aaa
sar
inc
sbb
stc
stc
addr16
bound
or
jg
fimuls
mov
and
stos
xlat
sti
jge
lods
out
dec
mov
test
in
push
adc
or
or
xchg
jbe
pop
mov
ret
sbb
mov
out
into
repnz
inc
dec
loopne
push
pop
mov
xor
push
adc
dec
es
xchg
ret
loope
fidivrl
ljmp
cmpsl
addr16
adc
stc
xchg
adc
sti
fstl
daa
mov
xor
xchg
out
mov
cmpsb
adc
mov
bound
xchg
mov
insb
mov
rcll
xchg
push
notl
popfw
inc
int3
cmp
movsb
mov
xchg
jge
scas
movsb
xchg
dec
push
cmp
int3
int3
cmpsl
mov
push
pop
mov
mov
mov
mov
movsl
mov
cltd
xchg
stos
inc
loop
movsl
mov
out
addr16
lcall
pop
jle
stos
xor
fnstsw
jbe
xor
pushf
test
lret
lock
sbb
int
or
repz
imul
mov
dec
imul
pop
jmp
shrl
push
lcall
adc
out
jb
es
push
pushf
xchg
inc
outsb
mov
dec
das
jo
mov
sbb
jge
dec
inc
int
pop
mov
fstpl
sbbl
dec
scas
stc
les
clc
movsb
mov
adc
mov
clc
das
cltd
add
lods
jp
add
fwait
sahf
mov
and
dec
leave
lock
movsb
aas
jo
jae
scas
lods
jg
xchg
push
add
lea
in
sti
xor
and
jge
sarb
add
push
ror
int
mov
jle
add
loope
mov
pushf
sbbl
cltd
pop
xchg
fs
or
mov
or
out
dec
mov
jae
sbb
lret
jb
or
sub
fisubrl
out
jle
and
pushf
scas
je
cltd
mov
jmp
sbb
push
std
adc
mov
rcrb
rcrb
ja
jno
scas
mov
mov
xorl
bnd
aas
jle
inc
adc
ss
outsb
mov
stos
cmp
mov
shll
cwtl
daa
xchg
push
cmp
xchg
loop
or
aad
hlt
out
xchg
mov
test
pop
cmp
jnp
roll
lds
ja
sub
jmp
mov
push
push
mov
adc
ljmp
inc
pop
xchg
or
icebp
lock
push
push
xor
clc
xchg
scas
cmpsb
es
stc
cli
add
mov
add
pushf
leave
std
or
xor
sub
add
fcom
push
mov
arpl
ja
dec
lret
push
add
lret
jb
out
adc
loopne
sbb
scas
imul
and
dec
mov
lods
popf
xchg
mov
sub
sub
xchg
mov
sti
xchg
adc
jg
out
mov
mov
pop
lods
out
popa
loop
dec
rcr
stos
fs
sub
adc
mov
and
movsl
pinsrw
pop
pushf
add
mov
sbb
cwtl
sbb
jge
xor
inc
mov
jns
gs
xchg
adc
mov
cmp
pop
mov
add
mov
imul
out
and
cmp
and
in
cmp
call
adc
gs
cltd
insl
fbstp
fxam
mov
je
call
xchg
insl
push
fcomip
into
jl
lcall
mov
jae
xchg
pop
mov
cmpsb
std
and
xchg
mov
sbb
cmpsb
iret
inc
sub
mov
inc
out
lods
mov
int3
sub
popa
or
jns
out
adc
mov
mov
jecxz
sti
lods
mov
xor
cmp
mov
insl
or
loope
xor
xchg
cmpsb
inc
pop
sbb
ss
jg
mov
mov
scas
jae
pop
adc
movsb
push
daa
stos
push
push
insb
xchg
push
mov
inc
sahf
cs
cwtl
addr16
add
lock
sub
xor
cmpsl
mov
ds
dec
sbb
clc
cwtl
or
and
jne
fisubl
stos
xchg
sbb
into
es
mov
xor
pop
dec
int3
sahf
lcall
cli
inc
push
mov
shrl
lcall
sbb
data16
mov
cmp
fimuls
adc
loope
mov
xor
das
into
push
mov
es
and
xorl
or
adc
leave
ds
sub
sbb
mov
sbb
sbb
pop
dec
pop
push
icebp
push
push
xor
sbb
pop
scas
xor
lds
sbb
movsb
adc
jbe
jle
sbb
test
notb
and
sysret
or
and
insl
sbb
mov
xchg
imul
leave
sbb
fistpll
mov
arpl
adc
aaa
in
jp
int3
stc
xor
jl
xchg
leave
test
adc
add
test
mov
sub
sub
aad
cwtl
cmp
push
sbb
ret
pop
addb
xor
lea
int
xlat
push
pop
cmp
or
dec
lds
int3
out
sub
mov
add
stos
jo
mov
mov
jmp
mov
insb
cmp
gs
sub
mov
jb
sbb
mov
shlb
xor
fstpt
cmp
sub
pop
adc
int
adc
pop
xor
cwtl
adc
insb
repnz
mov
adc
pop
mov
ficoms
popa
jmp
inc
sub
mov
mov
icebp
fstpt
and
andl
stos
mov
mov
jbe
xchg
mov
ja
jnp
cs
adc
call
push
imul
aam
or
add
sti
std
in
rcr
push
inc
out
fisubrl
scas
xchg
jo
xchg
inc
shll
clc
xchg
ja
outsb
loopne
sti
in
xchg
iret
outsl
dec
and
mov
sub
ds
push
in
sbb
outsb
jmp
mov
sbb
dec
jae
pop
test
lret
mov
adc
out
and
lods
push
inc
pop
or
and
rclb
cmp
cmpsl
fcmove
push
xchg
xlat
jle
xchg
sbb
push
ljmp
adc
sti
jnp
add
paddb
lret
scas
outsb
fisubs
arpl
inc
dec
pushf
cmp
ret
inc
add
dec
pop
shll
jge
pushf
pop
ljmp
idivb
cs
sbb
sbb
packuswb
mov
or
stc
mov
leave
shll
movl
lahf
int3
xchg
fwait
pop
repz
sbb
sbb
lret
lcall
mov
leave
adc
int
xor
ficompl
and
push
push
in
pop
arpl
cmp
and
inc
xor
xor
les
xor
add
ja
sub
and
xor
shlb
out
daa
movsl
jno
xor
ljmp
xchg
sbb
popa
or
test
cwtl
push
and
mov
dec
push
mov
mov
fdivr
inc
dec
inc
call
cmpsl
bound
jb
fidivs
jbe
int
jge
xor
add
push
in
popf
scas
mov
dec
out
sbb
xchg
lds
adc
ret
dec
mov
mov
or
in
add
not
iret
stos
icebp
sbb
test
jecxz
push
pop
out
pop
repnz
iret
scas
les
jbe
ret
jg
push
push
aaa
test
in
and
xchg
fsubrs
lcall
adc
fstpl
mov
xchg
ror
push
shrl
jg
or
jp
stos
idivb
mov
xor
ret
mov
jmp
pop
lret
shrb
push
xchg
add
jl
addb
scas
icebp
sbb
mov
mov
mov
fstl
je
ss
mov
rcrl
out
bound
or
bound
mov
xor
popf
nop
leave
xchg
mov
or
sub
out
scas
rcrl
pushf
push
push
and
inc
cmpsb
lcall
stos
and
insl
stos
call
jbe
mov
jecxz
out
or
jecxz
mov
push
xor
jb
outsb
out
xchg
shll
ret
adc
mov
sub
negl
and
xchg
add
or
pushf
sub
jmp
rcrl
dec
cwtl
aad
jns
adc
fistps
insl
xchg
js
stos
lods
jle
outsb
mov
aas
mov
and
cmp
xlat
shll
hlt
or
adc
daa
sub
stos
add
shr
inc
lock
leave
bound
jnp
push
or
pop
and
cmp
mov
add
shrl
ret
mov
test
sub
sub
mov
inc
insb
aam
cwtl
sbb
les
sbb
iret
and
jbe
jmp
test
jmp
cmpsl
sbb
shll
je
out
adc
xor
cmp
xchg
call
push
pushf
push
xchg
mov
mov
add
mov
pop
in
popa
das
iret
and
js
lea
and
ret
cmpsb
jae
imul
repz
mov
jae
cmp
sahf
lock
mov
out
jge
mov
lahf
adc
cld
fsub
mov
popa
call
push
add
push
xor
xor
test
stos
dec
xor
push
inc
bound
lods
xchg
pushf
hlt
mov
dec
lock
push
pop
scas
push
hlt
add
aam
mov
test
add
pop
imul
cli
call
filds
xor
xchg
xor
mov
arpl
into
cmc
mov
jecxz
frstor
pop
nop
mov
insb
jae
movsb
mov
lea
adc
or
stc
xchg
mov
add
lcall
iret
or
pop
xor
add
push
ret
sbb
xchg
fs
dec
and
test
or
cbtw
in
aas
cltd
rcrb
fmuls
xchg
push
and
add
in
dec
imul
loope
xchg
movsb
pop
sahf
add
sub
je
mov
mov
mov
loopne
cwtl
dec
sub
cmp
ret
cmc
mov
sub
lock
mov
icebp
clc
push
cltd
and
cld
jge
pop
loope
mov
jnp
xchg
in
add
sbb
aaa
daa
movsl
pop
push
cmpsl
push
jl
jmp
push
in
shlb
scas
stos
inc
mov
xchg
jp
add
xchg
and
mov
sbb
ja
sub
jae
push
stc
and
add
sub
clc
mov
cli
mov
adc
ret
xchg
xlat
into
in
mov
outsl
call
icebp
mov
cwtl
fdiv
jmp
jne
iret
sub
dec
sti
sbb
icebp
sbb
aad
push
loop
sub
je
mov
mov
bound
adc
and
aas
pop
pushf
xchg
adc
jp
sbb
inc
xor
pop
jmp
out
jmp
or
inc
add
icebp
dec
and
out
fimuls
insl
mov
mov
lahf
jbe
leave
jo
xor
pushf
pop
dec
mov
xchg
sub
jae
ljmp
or
std
pop
in
adcl
ja
into
jecxz
lods
push
mov
cmpsl
push
xchg
push
int3
cmp
xchg
stc
dec
orb
mov
fs
push
mov
xchg
jns
test
mov
lods
mov
sbb
nop
or
insl
push
stc
mov
insl
and
cwtl
mov
adc
fcmovbe
xchg
loopne
mov
jp
adc
pop
cmp
cwtl
jns
dec
push
stc
or
push
mov
hlt
pop
jo
stc
add
dec
fisttpll
ja
lret
sub
mov
push
jns
inc
jge
mov
or
ss
bswap
sbb
add
sbb
inc
cmpsb
add
inc
lds
scas
add
mov
orb
lea
aam
movsl
mov
shrl
inc
mov
outsl
inc
cmpsb
mov
push
jnp
push
xor
fs
mov
push
mov
xlat
mov
mov
or
aaa
sbb
cmp
daa
add
mov
sbb
mov
xchg
lcall
pop
mov
pop
cwtl
mov
cmpsl
xorl
insl
mov
sub
pop
in
xlat
js
ja
sbbl
jge
ss
dec
push
sub
push
jno
fidivs
and
push
add
bound
cmpsl
dec
push
mov
ret
mov
call
xchg
outsl
pop
mov
jmp
dec
ficompl
or
push
or
in
cmp
dec
add
popa
out
sub
dec
cmpsb
pop
clc
or
push
push
loope
inc
imul
xor
je
xchg
fdivs
sahf
mov
xor
leave
rcrb
dec
inc
adc
push
out
insl
pop
call
cmp
sbb
lods
cli
insl
pop
ret
add
pusha
rolb
or
add
jp
sub
sahf
adc
and
lods
ja
add
cmpsl
lcall
pop
cmpl
pop
dec
mov
pop
addr16
dec
mov
in
fs
rol
push
push
inc
push
shll
push
bound
mov
add
xchg
mov
push
rorb
icebp
mov
xchg
dec
sar
jp
and
push
jne
movsb
ljmp
pminub
int
dec
cmp
cwtl
int3
fsubp
jl
sub
xchg
cld
sbb
inc
jae
stc
imul
movsb
loopne
imul
inc
lods
adc
inc
xchg
jle
cs
xchg
aam
call
push
pusha
stc
or
out
les
mov
ja
and
and
xchg
out
xor
jge
imul
sbb
mov
mov
and
cld
xchg
xor
pop
inc
test
movsb
and
out
loopne
sarb
ficompl
sbbl
xor
sbbl
out
pop
mov
adc
loopne
cmp
add
sub
xchg
mov
pop
gs
add
sub
mov
push
mov
in
jmp
aas
fsubrs
scas
push
clc
das
jle
mov
movntq
imul
jp
xchg
jnp
jecxz
mov
cmp
insl
clc
mov
push
mul
in
jle
movl
ret
sub
xchg
sbb
int
jne
adc
sub
ret
adc
inc
hlt
dec
out
scas
loope
jmp
add
repnz
adc
sbb
inc
loop
cli
mov
outsb
outsb
stc
ret
arpl
rcl
aad
imul
shrb
inc
pusha
nop
jg
insl
sti
iret
subl
jg
xor
mov
iret
int3
ja
xchg
dec
loope
mov
gs
icebp
pusha
mov
stc
int3
mov
aas
jbe
add
or
dec
xor
jb
enter
xchg
xchg
sbbl
lods
jp
cmp
jns
mov
pop
xchg
pusha
cli
incb
jo
push
dec
sub
js
and
stos
mov
pop
scas
mov
add
and
dec
dec
aas
lds
insl
push
lcall
adc
push
mov
adc
roll
add
sarb
ficoms
sbb
mov
push
dec
mov
pusha
push
pop
fwait
sar
mov
and
adc
roll
lock
lahf
mov
int
dec
jnp
sub
jbe
int3
mov
push
cwtl
dec
std
sbb
xchg
sahf
into
ret
test
stos
add
std
out
movsb
mov
adc
loope
cwtl
fwait
mov
divl
dec
cmp
push
mov
fbld
mov
mov
cmp
psubw
enter
int
add
xchg
pushf
movd
sub
shll
and
sub
mov
sub
bound
pop
mov
sub
aam
repz
fsubrl
xor
je
xor
fcompl
sti
jmp
addr16
int
cmpb
std
xchg
sti
mov
mov
xor
cmp
mov
mov
push
adc
rorb
cltd
or
pop
mov
mov
jle
inc
stc
test
ja
cs
and
in
cs
stos
in
jnp
addr16
jno
call
or
int
aam
pop
cmp
subl
aad
add
leave
fdivp
fisubs
std
lret
sarl
dec
xor
xchg
inc
and
out
sarb
fadds
out
or
add
adc
cmc
mov
push
mov
pop
movsl
shrl
inc
xchg
xchg
push
les
scas
jg
out
lret
push
lock
sbb
repnz
or
push
sub
mov
mov
inc
inc
lret
xchg
hlt
lea
or
xchg
xchg
mov
or
fildl
movsl
push
jae
shld
jg
pop
push
pop
add
out
cli
daa
dec
push
mov
out
ds
mov
xor
sbb
pop
adc
unpcklps
sub
dec
jne
test
mov
mov
lods
mov
cmc
insb
insl
iret
xchg
mov
std
in
es
xchg
cmp
cmpsb
test
mov
repnz
aas
and
fstpl
mov
dec
adc
mov
imul
inc
sbb
orl
mov
gs
add
push
lds
jbe
fisubs
ret
cmp
cmp
xor
aad
mov
ja
mov
pushf
sbb
cmpsl
cmc
mov
xchg
xchg
loop
jmp
pop
pop
sbb
dec
push
cmp
sti
cmpb
mov
pop
mov
xorl
jl
ret
lahf
pop
sbb
cltd
and
lods
arpl
rorb
inc
daa
aam
call
adcl
sahf
cbtw
or
sub
dec
xor
aaa
in
sub
pop
lcall
sbb
imulb
pop
pop
jge
icebp
sarl
lcall
cmp
push
test
sbb
sbb
repnz
jl
aad
lock
fsubl
jne
xor
dec
xorl
inc
sarl
stos
scas
and
addr16
and
sub
mov
push
xchg
lods
outsl
xor
xchg
shr
push
or
nop
sub
lcall
ret
fistl
mov
inc
cld
mov
hlt
dec
inc
mov
repnz
mov
icebp
pop
xchg
das
mov
push
fsubrl
adc
ljmp
mov
pusha
loopne
sbb
in
sbb
jae
push
xchg
fldenv
negl
xchg
cs
add
test
sbb
xchg
adc
pop
call
mov
jl
mov
and
aam
out
fwait
jnp
and
in
mov
fnstenv
sbb
mov
rcl
sub
int
inc
test
mov
lahf
out
dec
sbb
popl
in
cwtl
cmpsb
sbb
shlb
arpl
inc
xor
in
jo
jbe
jne
pusha
or
jmp
xor
push
jo
or
push
arpl
cltd
xor
jmp
cmp
dec
nop
jmp
test
leave
adc
pop
sbb
shrb
and
inc
into
pop
sub
ljmp
lret
dec
xorl
insl
push
adc
aad
cmp
mov
sub
loop
cmp
les
or
push
mov
xchg
push
push
fildll
sbb
push
pop
sahf
arpl
ja
jne
push
mov
push
out
adc
test
mov
les
xchg
cs
mov
mov
push
roll
push
sub
pusha
xchg
pushf
push
dec
push
push
and
rcll
pop
insl
cwtl
cwtl
xchg
prefetch
test
xchg
sbb
pop
aad
scas
xorl
out
sbb
jbe
sub
ret
fsubr
in
add
xchg
sti
ret
mov
or
cs
es
sbb
adc
insb
inc
call
pop
fwait
and
js
xchg
shrl
mov
and
and
andl
ja
adc
ja
push
aaa
or
les
cmp
inc
xlat
push
xchg
adc
in
ficomps
leave
mov
xor
adc
jle
repz
aaa
xor
and
ret
orl
stos
xor
ds
pop
bound
mov
and
and
sarb
jne
push
movsb
ds
jg
cld
sbb
mov
ljmp
mov
xchg
push
fstp
fcmove
insb
inc
stos
push
and
cld
dec
xchg
std
mov
inc
adc
mov
call
mov
in
and
loopne
or
lds
mov
or
int3
push
push
add
outsb
add
mov
adc
jne
mov
test
sarl
dec
xor
lds
pop
jns
insl
test
xlat
sbb
jmp
push
mov
popa
clc
in
in
xchg
push
fists
sub
icebp
cmp
sti
sub
aas
into
jbe
inc
jnp
push
inc
lcall
int3
mov
mov
jl
sbb
xchg
lods
xchg
aam
mov
pop
aam
adc
xchg
mov
pop
mov
push
aaa
pop
out
cmpsl
gs
mov
out
cwtl
mov
in
cltd
ja
mov
sub
leave
vpunpckhdq
dec
jg
and
hlt
sub
mov
out
xor
inc
mov
sarb
cmc
or
lods
inc
dec
and
and
sbb
sbb
and
int
xchg
loope
pop
dec
daa
cmpsb
sahf
push
xor
andb
add
xchg
and
lret
pop
je
xor
adc
aad
ret
push
xor
jne
jbe
ss
fisubs
xor
outsb
lock
adc
or
cmp
pop
mov
cmp
gs
fadds
rorb
into
or
ret
push
stc
insb
out
mov
pop
in
rorl
add
icebp
inc
and
ljmp
rcl
jnp
xorl
clc
insb
inc
xchg
icebp
pop
adc
ret
pop
cmp
out
push
mov
aad
cmpl
fsubrs
ficompl
arpl
lahf
ror
xchg
fistl
fbstp
inc
dec
or
sub
pop
cmp
push
loopne
mov
lea
scas
stc
cmp
lods
mov
pop
pop
xor
xor
subb
inc
add
jmp
xor
dec
shlb
mov
fmuls
add
mov
add
insl
pop
cmp
cmp
inc
stos
addr16
dec
sub
xchg
pop
scas
lret
xchg
xor
lock
push
dec
adc
cli
aad
loopne
pusha
outsb
or
div
push
sub
mov
out
push
rolb
test
std
sbb
sahf
sub
js
push
push
dec
sbb
insl
stc
or
fsubr
and
xlat
cmpsl
scas
sbb
repz
push
sbb
clc
xor
in
sub
push
incl
mov
inc
insb
jl
dec
outsl
fucompp
mov
xor
and
ja
sbbb
push
aam
insb
cmp
pusha
dec
andb
imull
fcmovnbe
test
pop
add
cwtl
idiv
aaa
xchg
test
int
mov
pop
pop
lds
mov
mov
adc
jne
hlt
lock
mov
stos
mov
sarl
dec
xchg
int
dec
inc
pop
xchg
psubusb
popf
mov
lcall
jns
or
sti
xchg
adc
mov
in
pusha
pushf
or
into
mov
or
fidivs
jnp
dec
daa
ret
std
adc
leave
clc
sbb
xchg
sub
pop
into
jl
neg
lds
jecxz
pop
inc
sub
sbb
cli
fadd
jns
pop
ficoml
hlt
cltd
inc
and
adc
test
xchg
dec
ficoml
mov
lea
sbb
pop
add
das
out
pop
jmp
inc
add
test
push
aam
push
ffree
and
xor
xorl
jg
or
jl
inc
cmpsb
ret
push
repz
nop
cmc
mov
xor
jb
and
addb
and
jns
inc
cmpsb
push
push
pushf
loopne
popa
or
sbb
xchg
test
mov
dec
ret
aad
cs
push
shrb
mov
or
mov
rcrl
rorl
int
out
mov
add
movsl
jle
push
jnp
js
outsb
lea
pop
jg
add
lahf
dec
aam
cmpsl
sbb
enter
sbb
sbbl
and
pop
data16
dec
pcmpeqw
sub
add
fst
clc
pop
xchg
xchg
aas
lahf
jge
stos
pushf
scas
dec
mov
mov
xchg
pop
hlt
mov
xchg
adc
sbb
cmpb
mov
ret
xor
test
adc
outsl
xor
in
aad
lret
and
mov
inc
imul
hlt
aaa
cmpxchg
pop
push
ss
sbb
outsl
nop
nop
and
inc
cli
adc
xor
imull
xchg
cwtl
addr16
jecxz
clc
inc
insl
jmp
sub
mov
pop
adc
lock
jmp
call
int3
sub
adc
mov
ret
mov
xor
aam
leave
out
rcrl
fldt
push
add
scas
rclb
cltd
cmp
jbe
orb
scas
dec
mov
dec
or
and
out
cmc
push
and
sub
sti
out
mov
insb
push
repz
or
push
adc
pushf
sub
jnp
mov
mov
sbb
repnz
pop
cmp
adc
idivw
mov
movsl
inc
int
jne
arpl
lock
call
test
dec
mov
or
xor
xor
jl
dec
popf
adc
clc
push
mov
push
pause
outsl
or
call
std
lahf
sbb
aas
xor
popa
jmp
mov
adc
sbb
add
and
jg
sub
mov
lret
pop
out
cld
popf
nop
sbb
arpl
setnp
jle
ret
lea
scas
and
xor
dec
sbb
xor
call
xchg
jnp
fucom
push
rorl
inc
xor
or
daa
dec
mov
sub
sbb
push
pop
inc
pop
sbb
cmc
inc
pop
jmp
arpl
cs
into
ss
rcr
sti
mov
mov
push
jmp
sbb
inc
dec
sbb
enter
pop
or
lret
call
push
sbb
bound
add
sbb
xchg
mov
ljmp
mov
push
insl
scas
xchg
jne
pop
add
cmpsl
mull
jo
and
jo
in
jmp
add
call
arpl
jb
and
pop
cltd
or
into
aad
or
fldcw
adc
xor
or
inc
pushf
insb
cmp
adc
fstl
jg
int3
out
and
mov
mov
mov
loop
jmp
loop
imul
dec
idivb
adc
stos
das
jne
je
jae,pt
mov
sub
or
loop
cmp
add
das
dec
aas
outsl
ret
cmc
int3
bound
or
std
and
mov
mov
or
pop
jp
push
or
add
xchg
mov
cmc
dec
filds
push
dec
jp
fsubrl
or
cltd
je
pusha
aam
lds
dec
cmp
xchg
cli
popa
mov
cli
mov
lds
icebp
cmp
push
scas
cmp
sbb
mov
lods
pop
xorl
daa
pop
mov
xor
hlt
movsb
aaa
jne
jp
xor
xor
lea
aas
rcrb
and
xchg
test
cltd
divl
xchg
cmp
lock
pop
mov
adc
aad
sbb
jno
ds
sbb
push
push
movsl
pop
icebp
xchg
jo
xlat
lods
lcall
or
add
cmp
out
outsl
xchg
jb
stos
mov
int
and
lea
adc
cmp
lahf
gs
aas
mov
arpl
repnz
push
arpl
xchg
sbb
adc
jo
mov
ljmp
lods
and
xchg
mov
ss
lret
push
xchg
cmp
movsb
dec
inc
pop
idivb
cmpsl
imul
icebp
ret
jb
sub
lock
movsl
lock
add
fmuls
shrb
scas
inc
fs
xlat
mov
push
inc
jb
jbe
icebp
aad
mov
scas
insl
shll
test
je,pn
push
mov
inc
pop
jne
sti
xor
les
aaa
cltd
xchg
lret
jg
cmp
out
mov
ror
cltd
add
jge
adc
jb
enter
fisubrs
or
pop
ljmp
loope
lret
and
test
aas
stos
fwait
imulb
adc
ret
scas
nop
leave
cmp
xchg
stos
sub
jecxz
cmpsl
push
pop
mov
sub
ja
rcll
pop
stos
sub
test
jmp
jg
jo
cltd
xchg
add
xchg
dec
lods
push
ds
les
orb
test
sbb
cmp
dec
adc
iret
push
and
mov
cmp
mov
xchg
inc
cltd
cmp
cli
lcall
insb
fadd
and
mov
lods
or
dec
xchg
repnz
das
sbb
inc
sti
jmp
inc
xor
les
jg
jno
add
aaa
inc
add
dec
push
scas
mov
loope
jbe
test
shlb
lods
cli
sti
inc
lret
mov
testl
je
add
push
loope
ret
out
int
dec
cmpsl
add
or
or
mov
lcall
daa
mov
mov
scas
sbb
out
xchg
xchg
inc
push
mov
mov
das
in
and
xchg
mov
cmp
stc
push
xor
divb
movsl
movsl
or
ja
clc
aam
imul
add
adc
or
lcall
jge
hlt
push
imull
xchg
sbb
mov
subl
cli
clc
ret
mov
shr
mov
adc
sbb
sbb
stc
shlb
xchg
pop
stos
inc
jle
push
repz
mov
and
lods
ljmp
insl
pop
aas
roll
in
aad
xchg
test
xchg
add
rcl
daa
push
ljmp
jae
hlt
xchg
mov
fsubl
fcomps
or
jp
push
mov
aam
push
aaa
ficompl
add
pop
mov
and
dec
ss
adc
add
xchg
xor
adc
xor
incb
ss
in
imul
mov
jne
test
int3
cmp
leave
or
push
pop
xchg
cmp
adcl
mov
dec
sti
repz
inc
cmpsl
jl
pop
push
rol
cmp
and
dec
rcrb
std
dec
adc
jbe
out
or
xchg
ret
add
xlat
lahf
nop
leave
xor
dec
pop
mov
ljmp
mov
pop
int
mov
add
inc
xchg
sub
fwait
ja
iret
push
push
pop
sbb
add
jg
cli
test
test
cs
push
outsl
pop
or
shlb
mov
adc
addb
fcoms
int
xchg
data16
pushf
into
pop
pusha
push
into
pop
das
mov
andb
jle
lcall
int
int
inc
sbb
and
addl
pop
jecxz
adc
out
push
sub
fimuls
adc
inc
repnz
lcall
fdivs
hlt
pop
sub
shl
and
aaa
push
sbb
test
mov
xlat
xor
fidivl
test
mov
jno
nop
aaa
aas
test
loope
call
xlat
jge
xlat
adc
popa
cli
xchg
jae
repnz
outsl
jle
ds
add
pop
mov
test
pop
mov
test
mov
mov
out
push
sbbb
or
jmp
sbb
lahf
decb
add
xlat
mov
nop
clc
jp
sbb
insb
frstor
xor
cmpsl
add
mov
aad
jno
push
stos
filds
into
sti
cs
sbb
cltd
dec
pop
and
loopne
fnstenv
and
pop
setle
out
or
jo
xchg
mov
xchg
in
lcall
jo
ror
mov
mov
in
pop
inc
addr16
lret
loope
dec
imul
imull
mov
jl
not
and
nop
in
mov
mov
jnp
sub
sub
imul
dec
inc
add
xchg
cmovns
repz
iret
fildl
dec
cmp
mov
andb
add
or
aam
adc
fst
jmp
push
mov
jg
dec
lahf
and
xor
xor
mov
icebp
int
push
movsb
mov
je
pop
test
push
mov
popf
dec
mov
jo
loope
add
icebp
subb
xor
xor
and
popf
adc
mov
mulb
mov
add
or
sub
push
push
je
mov
stos
cmc
andl
sbb
push
out
into
in
jnp
cmpsl
outsb
out
lret
push
mov
sub
in
jo
add
push
in
add
sahf
mov
js
cmp
cmpsl
jg
popf
xor
pushf
ja
aas
insl
jno
adc
sub
bound
ret
je
cmp
outsb
jnp
inc
jecxz
std
scas
call
les
push
push
stc
mov
fwait
int
xchg
cs
ret
xor
fldenv
dec
add
cmp
or
cwtl
sub
xor
icebp
jp
cmc
dec
popf
cmp
cmpl
iret
adc
pushl
inc
cmp
into
movsl
out
cltd
les
push
mov
loope
xor
jns
inc
addr16
jg
cmp
mov
loop
pmuludq
aad
sub
out
jp
inc
cli
lds
sbb
arpl
xchg
pusha
movsl
lds
and
xchg
imul
sub
xchg
pop
cmp
xchg
cmp
jmp
out
xchg
mov
lods
inc
xor
adc
inc
mov
aad
inc
loop
adcl
out
iret
or
pushf
iret
int
lods
pusha
loope
xchg
js
push
mov
or
push
cmp
test
popa
xor
sub
sbb
mov
rol
cmpsb
out
in
or
mov
jne
dec
inc
sbb
lock
mov
jl
mov
mov
xor
stos
addr16
xor
fptan
jl
fs
dec
dec
mov
add
rcll
mov
dec
popa
xchg
xchg
mov
lds
adc
mov
cli
in
mov
dec
xor
pop
jne
imul
scas
pop
enter
dec
iret
sub
stos
push
xorl
ljmp
cmpsl
adc
sub
push
add
jp
adc
sahf
xchg
cli
stos
or
mov
pop
inc
push
arpl
inc
xchg
inc
inc
xorl
sub
cmc
ret
sub
xchg
ret
movsl
test
idiv
nop
and
ret
push
addr16
xor
addb
lcall
sbb
xchg
mov
dec
pop
mov
cmc
mov
pop
sbb
ds
add
shll
or
test
sub
mov
sbb
packssdw
fdivl
cmp
dec
inc
sbb
sub
pop
sbb
outsb
lret
in
jg
sbb
adc
mov
into
pop
add
pusha
aam
scas
mov
pop
sbb
in
ret
sbb
dec
sbb
xchg
inc
adc
mov
inc
pop
push
mov
cli
cmp
scas
loope,pn
mov
lea
mov
push
xchg
sub
scas
pop
jo
mov
push
lcall
add
rcrb
shrl
ret
aam
cmc
lods
not
ret
out
faddl
adc
mov
sub
push
test
pop
data16
int3
int
or
sub
rol
insb
jo
stos
and
notl
mov
aam
xchg
loopne
mov
std
xchg
push
pop
pop
scas
sub
jbe
and
in
mov
push
aad
adc
dec
pop
jmp
std
sti
es
inc
into
mov
jns
popa
jmp
jmp
cli
xor
mov
dec
jbe
scas
out
aad
dec
stos
aas
test
out
adc
mov
push
mov
daa
shll
out
pop
mov
xchg
dec
xchg
gs
inc
sbb
mov
nop
jecxz
push
bound
cmp
jg
sub
out
pop
data16
push
mov
scas
pop
pop
pop
pusha
bound
push
cmp
or
ds
out
into
dec
gs
inc
das
repz
shll
pop
inc
shll
pop
enter
xchg
xor
lret
jecxz
rcr
add
sub
and
imul
pop
inc
dec
xor
adc
and
mov
adc
test
out
inc
or
xchg
imul
dec
adc
jmp
jbe
inc
pop
inc
ficoml
inc
sbb
push
sti
pop
jmp
addr16
into
cmp
fnstsw
jb
shl
mov
pop
xorl
out
adc
xchg
cmp
aas
push
outsb
and
mov
test
cmc
push
or
icebp
sub
push
or
rcl
jbe
push
popa
lret
bound
cmp
clc
jge
mov
repnz
jl
push
cmp
rolb
rorl
dec
adc
popf
push
aam
add
push
inc
mov
loopne
outsl
dec
outsl
ror
lods
rcll
mov
xchg
mov
inc
push
aas
ds
in
fldenv
sbb
lret
loop
push
xor
movntps
es
arpl
adc
mov
movsb
shlb
sub
push
mov
out
jl
call
jl
push
stos
cltd
push
jg
xchg
lock
fwait
add
push
xor
push
pusha
sbb
jmp
xor
gs
orl
pop
scas
cmc
mov
xchg
mov
jno
shr
sbb
in
in
aam
fdiv
into
add
js
jns
inc
addr16
sub
lock
call
xor
xchg
into
lea
andps
cmp
inc
and
dec
repz
push
mov
outsl
sbb
imul
pop
xchg
adc
dec
adc
movsl
cli
add
xchg
es
mov
popa
jns
jmp
sub
in
jae
push
enter
imul
mov
imul
mov
xor
mov
jno
mov
repnz
pop
insl
ror
sub
jae
lret
pop
and
and
cmp
jo
lock
out
sbb
add
test
lret
adc
leave
dec
nop
cmp
enter
cmp
inc
xchg
dec
icebp
outsb
sbbl
sub
ret
adc
je
leave
mov
cmpsb
test
push
les
fbld
mov
cmpb
pushf
out
jne
inc
ljmp
ss
fistps
nop
loope
jle
and
xchg
sub
add
test
push
xor
jno
sbb
test
mov
jl
test
fs
out
dec
pop
cwtl
lea
push
mov
inc
add
cmc
inc
stc
mov
push
cmp
push
outsl
and
push
out
lea
shll
xor
inc
jecxz
dec
dec
fst
cmp
lahf
in
clc
pop
xor
lock
idiv
dec
ret
fwait
daa
xchg
push
dec
fistps
loope
in
and
lods
clc
dec
addr16
roll
leave
pop
imull
xor
and
insl
cwtl
xchg
cli
mov
sbb
push
mov
or
mov
inc
stc
mov
dec
pop
xlat
stos
flds
dec
orl
mov
mov
inc
in
popl
inc
mov
int
ljmp
scas
pop
stc
mov
or
mov
lret
adc
cmp
daa
pop
xor
cli
jb
sbb
cmp
add
aad
xchg
sti
les
add
lret
cmp
out
pop
adc
outsl
test
push
mov
les
mov
mov
pop
loope
cmp
sbb
rolb
arpl
iret
stos
test
setle
push
xor
sub
xchg
outsl
xor
inc
sbb
iret
outsb
mov
cmp
mov
pop
dec
fwait
cmc
repz
dec
cli
xor
hlt
xor
lret
pop
pop
xor
and
fwait
pop
jb
ss
sub
mov
or
sbb
pop
fdivl
jne
xchg
imul
sub
sbb
insb
int
les
push
lds
jp
mov
nop
test
fidivs
stc
clc
addl
fwait
mov
xor
push
cmp
push
loop
call
push
xchg
pop
clc
loop
bound
inc
mov
popa
lcall
mov
scas
rclb
imul
xchg
ds
sbb
or
xor
inc
jmp
lahf
cmp
jl
inc
pusha
stc
xchg
stc
sti
imul
pop
stos
inc
pop
mov
add
bound
arpl
lahf
or
add
mov
xchg
sub
flds
mov
mov
push
flds
mov
jmp
or
add
insb
and
push
pusha
fs
mov
dec
lret
call
icebp
push
outsb
in
and
daa
sbb
cltd
pop
pop
cmp
jbe
mov
sbb
dec
popf
sub
in
icebp
in
xchg
in
cmp
pop
int
sub
or
loope
imul
mov
cmp
push
inc
or
push
xor
repnz
sub
sub
incb
add
sub
sub
movsl
cmp
mov
mov
lcall
jne
jp
push
fstpt
mov
movsl
loope
popf
xor
mov
out
push
cmp
outsb
sti
loope
repz
repnz
sbb
jle
jae
icebp
dec
pushf
jb
xchg
xchg
scas
repnz
das
push
mov
dec
jno
xor
imul
lea
outsb
test
jge
sub
fisubrs
in
sbb
lds
aas
test
xchg
aam
bound
fnstenv
mov
xor
repnz
push
add
lret
add
inc
sbb
xchg
or
fwait
and
or
or
mov
pop
adc
scas
mov
xchg
call
jnp
subb
test
mov
cmpsb
adc
popf
loope
call
enter
fwait
sbbl
mov
je
xchg
adcb
negb
iret
loopne
add
scas
nop
dec
aaa
dec
popa
mov
int
pusha
and
stos
xchg
scas
out
movsl
jo
lock
add
adc
dec
mov
pop
mov
mulps
lds
shlb
clc
addb
iret
mov
or
push
or
jb
or
xor
adc
outsl
stos
sub
push
push
xchg
push
or
dec
and
pop
adc
rcl
sub
or
sbb
std
aam
mov
sub
sbb
jl
push
pop
jbe
and
gs
jno
xor
nop
aad
lods
ret
paddusw
pop
outsl
mov
inc
adc
push
inc
pop
sbb
jne
pushf
push
adc
mov
es
ljmp
sbb
and
pusha
xchg
adc
lock
cli
mov
das
ficompl
xor
sbb
adc
je
popf
cld
sbb
sbb
and
popf
push
iret
lret
addr16
inc
into
and
jg
inc
sbb
add
sub
or
rcl
lds
les
out
jge
ret
push
addl
lret
iret
inc
pop
pop
mov
imul
imul
xorb
pop
sbb
sbb
arpl
sbb
push
mov
dec
xlat
mov
popf
mov
inc
jle
out
dec
fsubr
int3
dec
xor
inc
pushf
out
push
jl
cmp
repnz
lock
or
in
pop
mov
das
out
and
mov
cmpsl
xchg
push
xor
push
xor
xchg
stos
imul
pop
lcall
mov
mull
movsb
insb
mov
pop
jg
jae
or
ds
lret
lock
clc
les
xchg
cmp
cmp
out
addr16
out
sub
sahf
ss
gs
ja
xor
fdiv
xchg
cmp
cmp
adc
insl
sarb
sahf
in
mov
and
in
mov
test
addr16
sbb
cmp
pop
mov
dec
mov
outsb
ss
movsl
int
push
dec
aam
shlb
sub
cmpsl
inc
das
jbe
mov
dec
mov
mov
movsl
gs
xor
into
sub
pop
orl
in
ljmp
vmovhps
mov
dec
int
in
pop
in
imul
mov
mov
xor
cmp
xor
mov
popl
bound
sub
dec
xlat
mov
or
daa
sbbb
into
fidivs
lahf
arpl
push
xchg
fdivr
and
add
in
sbb
scas
test
clc
test
test
clc
ljmp
mov
cmp
movsb
inc
pop
ljmp
cmc
or
jl
mov
or
xchg
mov
inc
scas
dec
add
push
or
outsb
in
xchg
mov
dec
lahf
xor
sbb
decb
inc
push
jnp
rcrl
fisttps
cli
jl
stos
pop
adc
popf
mov
dec
inc
mov
add
mov
sahf
add
jmp
aam
scas
ret
cmp
cli
xor
std
sbbl
add
xchg
pusha
mov
je
cmp
pop
pop
jnp
iret
inc
xchg
inc
xor
rorl
es
jae
xor
mov
ficoms
in
mov
push
ret
mov
jg
dec
jle
dec
std
aam
lret
das
push
lahf
xchg
lahf
test
in
mov
cmp
mov
cmp
imul
add
push
leave
mov
pop
and
push
sub
xchg
mov
test
or
cmp
pop
mov
mov
sub
sbb
add
in
sbb
sub
hlt
out
fsub
and
aad
fistpl
jae
dec
pop
shll
cs
or
and
inc
shrl
push
mov
mov
adcb
fidivl
cmc
sbb
aad
andb
imul
pushf
imul
lock
mov
pusha
sahf
rcll
xchg
xchg
mov
xchg
popf
jb
add
mov
add
insb
ja
mov
out
mov
xchg
or
push
and
hlt
lahf
ljmp
inc
inc
insb
movl
das
ljmp
insb
and
pop
ja
pop
pop
pop
mov
dec
js
mov
pop
ljmp
sti
loopne
xchg
xchg
push
mov
out
jnp
add
or
scas
aaa
mov
pop
outsb
cmp
push
push
mov
push
jnp
push
sarb
push
mull
out
mov
mov
lret
pop
push
sbb
mov
roll
out
cmovo
pop
adc
ror
and
pop
adc
xchg
fiadds
sub
loopne
xchg
mov
rcl
mov
sbb
stos
dec
in
es
imul
mov
sbb
pop
push
add
sbb
inc
ret
xchg
dec
add
pop
subb
or
push
dec
rcrl
aaa
mov
dec
aad
push
sbb
inc
enter
add
push
es
loopne
and
outsb
icebp
dec
in
fdivs
stc
test
lock
inc
mov
pop
scas
cmp
lods
out
inc
inc
insb
dec
int
pusha
je
xor
int3
add
lret
mov
and
push
and
push
ret
dec
jno
mov
les
jl
xor
iret
xor
jns
and
fwait
xchg
ljmp
adc
pop
cmc
fsubrs
das
into
movsl
mov
sti
or
xchg
pop
xor
mov
sbbb
jecxz
inc
cmp
insb
aas
popa
jae
out
jmp
mov
aas
ret
dec
dec
cwtl
and
adc
adc
inc
mov
subl
mov
sbb
lods
jbe
insb
ds
lds
jmp
mov
sbb
xchg
and
ret
mov
jae
mov
cmp
or
loopne
es
add
in
divb
in
or
sbb
nop
jns
sti
std
sbb
cld
dec
testb
sahf
inc
cwtl
cld
push
subb
pusha
mov
xor
xchg
nop
pop
lret
push
add
lock
lret
sbb
push
out
in
gs
push
sub
addr16
adc
cltd
mov
imul
test
adc
push
out
bound
cmp
stos
popf
jno
enter
sub
or
insb
inc
cmp
mov
jbe
mov
dec
aam
call
repnz
push
shll
mov
sub
out
pop
flds
es
insl
repnz
add
rolb
sub
mov
int
cmp
pop
fistl
in
sub
stc
mov
jmp
adc
addb
and
icebp
jne
inc
clc
pusha
rcl
int
mov
xchg
ljmp
daa
mov
fs
lfs
adc
mov
dec
and
xchg
mov
and
hlt
add
pusha
repnz
shlb
loop
out
xor
add
mov
add
jne
xor
cmp
daa
xor
inc
fldt
mov
mov
outsb
je
sub
aad
mov
mov
pusha
je
and
push
mov
aas
cmpsl
jmp
cld
mov
dec
mov
sahf
loope
movsb
push
jnp
sbb
and
out
pop
push
sbb
cmp
cs
sbb
ja
inc
loope
fndisi(8087
lods
fstpl
mov
add
cmp
icebp
ret
dec
xchg
inc
mov
dec
jmp
inc
and
inc
fisubrs
xchg
push
pop
mov
and
jecxz
dec
fdiv
aas
fnclex
lock
lret
ljmp
jmp
iret
sbb
scas
int
popa
pop
cmpsb
or
push
mov
cli
fstpl
jl
mov
push
mov
mov
popl
aas
imul
fstpl
adc
mov
pop
fisubrs
cmpsl
or
cmp
std
scas
xor
cwtl
sbb
pushl
addr16
mulb
xlat
sbb
jns
mov
xorb
jb
js
ficoms
push
rorb
mov
xchg
xchg
ss
out
jo
dec
cmpsb
cld
dec
mov
shr
decb
je
add
pop
cwtl
or
nop
leave
mov
mov
test
adc
insl
stos
pop
cwtl
lods
jnp
jg
jno
fs
addb
xlat
mov
sbb
pop
jnp
fsqrt
inc
and
inc
xchg
pop
dec
mov
pop
mov
mov
inc
imul
xchg
imul
xchg
add
mov
or
shl
push
sbb
mov
les
dec
mov
jae
sub
xchg
lcall
lret
pop
sbb
jae
cwtl
cltd
lcall
mov
add
push
mov
std
and
aas
or
int3
outsl
leave
sbb
cmp
cmpsl
cmp
inc
sbb
and
pop
sbb
loop
mov
in
mov
test
js
daa
sbb
or
add
add
inc
jg
inc
or
lret
sub
and
jb,pn
jp
addr16
jp
cmc
xchg
insl
jg
or
inc
mov
mulb
adc
mov
adc
or
shl
pop
clc
loopne
int
fidivrs
roll
mov
out
inc
lcall
clc
xchg
push
loopne
test
add
in
pop
loop
push
cmp
ficomps
jge
insl
pop
daa
add
popa
insl
adc
xchg
aaa
fwait
repnz
pushf
in
enter
jmp
rorb
xor
adc
ret
inc
adc
lahf
ss
mov
xchg
movsl
outsl
push
in
cmpl
or
adc
outsb
jmp
in
ret
test
lods
xchg
stos
andb
mov
push
sub
int3
sbb
cmp
cmp
out
xor
arpl
sahf
daa
enter
mov
xor
or
stos
sbb
test
fsub
xchg
jns
pop
test
stos
lcall
aaa
pop
push
ror
push
leave
xchg
idivb
pmulhuw
stc
jo
imul
iret
push
jne
sti
inc
insb
push
sahf
pushf
cli
mov
jbe
in
addr16
fs
xchg
jl
loopne
add
add
hlt
cmp
jl
in
mov
lret
sub
les
test
idivb
inc
sub
jecxz
jg
pop
mov
jle
or
loopne
mov
aaa
inc
inc
pop
jmp
adc
cmp
hlt
icebp
push
cwtl
pop
pop
add
ret
mov
shrl
nop
push
sbb
cmp
pop
jno
scas
int
ljmp
enter
das
jns
mov
test
popf
hlt
out
inc
loopne
sbb
mov
loope
lret
pop
shl
xor
or
jae
or
push
add
imul
dec
adc
xchg
mov
and
arpl
divl
xlat
outsb
xchg
adc
cmp
sbb
sbb
js
adc
popa
pop
loope
xchg
inc
jecxz
xchg
cli
pop
jp
lcall
into
mov
push
pop
dec
in
int
or
loope
jle
out
repz
pop
popf
mov
mov
dec
int
cmc
inc
loop
std
stc
ficomps
push
ficomps
cmpl
lahf
jp
cmpsl
add
test
pop
dec
pop
arpl
mov
dec
adc
int
mov
xor
inc
xor
fsubrl
lods
rcr
aas
lea
xchg
xchg
xchg
cwtl
mov
pop
testb
adc
pop
ret
mov
test
inc
lds
mov
jmp
or
mov
xor
rol
sub
xorl
push
loop
adc
lock
ret
test
push
ret
or
fwait
out
mov
insl
inc
mov
mov
lea
xchg
cmpl
mov
test
out
pop
dec
cmp
enter
lods
dec
cmp
mov
int3
mov
mov
mov
or
xchg
or
into
or
repz
lds
fwait
jge
mov
or
inc
push
dec
mov
fmul
les
mov
push
shrl
pop
pusha
sub
add
call
pop
lock
jl
xchg
adc
dec
push
and
test
xlat
pop
push
shlb
ret
adc
addr16
popl
pop
mov
and
sbb
and
xchg
jbe
enter
and
ljmp
push
adc
adc
test
and
fistps
mov
cmp
test
mov
test
pop
add
jmp
pop
xchg
mov
xchg
jno
push
push
divl
mov
sbb
push
pushf
popa
xor
add
mov
sbb
xchg
mov
in
xchg
aam
mov
or
jle
test
jge
popa
data16
mov
repnz
out
fs
sbb
mov
jmp
or
clc
xor
xor
aad
stc
dec
sbb
push
xchg
cmp
push
mov
jmp
out
mov
loop
fnstcw
fwait
aad
lods
jmp
pop
sub
js
inc
push
pusha
imul
mov
mov
mov
push
dec
mov
xor
mov
adc
cmc
mov
sub
movsb
pop
popa
imulb
in
xor
xchg
insl
test
js
inc
mov
daa
enter
pop
clc
xchg
lods
int
xchg
rol
ss
or
xor
xchg
add
sbb
push
or
mov
gs
pop
arpl
lret
rcr
jmp
addl
clc
jge
inc
pop
xor
packssdw
xchg
shl
mov
cmp
out
add
in
inc
jae
insl
in
insl
lea
jp
cmp
or
aas
sub
adc
adc
lds
push
sbb
fdivs
arpl
dec
fcomps
movsl
repnz
fdivl
lods
mov
jmp
pop
jl
mov
dec
adc
fldcw
imul
lock
push
int3
loop
xlat
xor
bnd
sub
icebp
sub
xchg
mov
xchg
xchg
clc
sahf
arpl
movsl
movsl
lods
andl
imul
in
mov
cmpsl
arpl
sbb
sub
jge
xor
dec
inc
jge
push
cmp
call
push
lcall
addl
xchg
pop
or
xor
dec
in
icebp
movsl
pop
loope
test
ficomps
push
test
test
jp
push
out
add
jns
or
push
pop
fsub
inc
arpl
xor
js
push
lahf
rcrl
mov
stc
jo
sub
mov
outsl
push
mov
inc
hlt
cmp
outsb
add
enter
repz
jb
mov
mov
push
mov
dec
cmpsl
cld
dec
mov
ds
mov
fimuls
rcrl
pop
push
cmp
popf
dec
out
call
shrb
add
inc
imul
iret
xchg
cwtl
in
mov
inc
mov
into
adc
lret
repnz
add
add
or
sub
mov
les
lcall
in
sbb
jnp
xor
add
inc
push
cmpsb
nop
sub
inc
dec
jne
fstl
icebp
dec
xor
push
mov
gs
xchg
xlat
add
js
std
icebp
xchg
jmp
inc
mov
rcl
adc
fisubrs
jbe
and
add
ret
fldt
push
mov
mov
xor
xor
adc
mov
ss
lods
out
jnp
test
xor
cmp
add
inc
or
js
fildl
mov
or
les
in
aaa
leave
data16
test
lock
xor
xchg
mov
xchg
fistpl
xor
pop
jle
addr16
call
mov
and
bound
xor
jno
mov
push
mov
leave
fucom
push
and
jecxz
add
adc
sub
daa
jmp
cld
and
in
and
dec
xchg
pop
jo
cmp
lods
mov
cmp
arpl
mov
xchg
fldl
push
cmpsl
out
jo
ret
repz
push
inc
inc
add
sub
js
push
xchg
push
sub
jo
push
push
adcl
pop
xorb
std
es
shlb
add
inc
in
push
push
daa
mov
sub
fidivrs
into
dec
arpl
xorl
cmpsb
or
add
popf
out
xlat
hlt
ret
and
xor
icebp
popa
and
repz
xor
sahf
aas
inc
or
test
aaa
xchg
xchg
popl
inc
jne
jb
xchg
nop
rclb
jmp
sahf
push
lahf
sub
add
lock
cmp
mov
cli
mov
scas
fmuls
movsl
pop
les
cmp
int
xchg
lods
fcmovbe
icebp
rcrl
adc
pop
sub
addb
cmp
imul
ljmp
or
and
mov
adc
and
xchg
cmpsl
sub
mov
mulb
test
add
jno
xor
fidivrl
mov
sbbl
xor
jne
lods
pop
or
xor
aam
mov
jg
fstps
icebp
jmp
in
xchg
mov
cld
mov
es
shr
and
sub
mov
jne
jns
jge
xor
xor
mov
mov
movsb
mov
sbb
mov
inc
out
ss
sbb
in
jg
cmpsl
ror
inc
pop
in
rep
cmp
xlat
cmp
cmp
push
loopne
fs
dec
mov
dec
notb
xor
mov
xor
insb
mov
fisubrl
shlb
test
inc
das
imul
jbe
sub
lods
out
xchg
sub
pop
mov
pop
gs
ljmp
mov
jns
fmul
adc
inc
mov
faddl
ljmp
into
xor
xchg
inc
xor
fcoml
cld
cltd
ret
sbb
faddl
mov
ret
subl
inc
add
push
aaa
lea
sub
rcll
int
cmp
xor
mov
push
jbe
out
es
xchg
mov
lods
les
sahf
fmull
xchg
cld
outsl
arpl
aaa
push
jmp
bound
je
insl
rorl
and
sbb
jb
loope
dec
repnz
std
jmp
push
loope
jle
mov
mov
cltd
xchg
mov
push
jmp
lret
sub
xchg
push
inc
push
and
push
lahf
xchg
mov
sbb
cltd
mov
adc
cltd
pop
push
fsub
or
mov
pop
stos
stc
sahf
inc
xor
imul
add
jbe
roll
xchg
pop
push
pop
orb
inc
jecxz
test
fsubrs
pusha
daa
push
movsb
jmp
enterw
out
rcrb
xchg
xor
sbb
cmc
data16
sub
lods
out
adc
les
and
jb
insl
jl
les
mov
bound
xchg
sub
fisubrs
xor
inc
das
adcl
movsl
mov
dec
mov
inc
pop
and
cmpsb
stos
xchg
rcrl
sbb
jge
inc
push
aad
inc
cmp
std
push
ret
cs
push
imul
xor
fld
jnp
jecxz
out
push
xabort
rclb
and
add
push
cwtl
add
dec
ljmp
add
and
test
cmp
adc
sbb
lock
cld
cli
mov
ja
jne
push
jmp
inc
mov
fdivl
mov
xchg
repnz
loop
or
ljmp
pop
mov
xor
jp
inc
arpl
pop
jae
cmpsl
dec
jmp
cmc
ss
mov
cmp
pop
add
inc
sahf
enter
xchg
loop
jp
ljmp
enter
sub
jl
ss
lret
call
xlat
popa
shlw
inc
push
scas
lds
cmp
sub
sub
xchg
fidivrs
call
fcmovnb
sbb
mov
jno
jns
sbbb
pusha
jle
and
std
daa
gs
jbe
mov
xor
mov
inc
sbb
push
cli
push
adc
sub
ljmp
gs
inc
stc
mov
mov
enter
xor
enter
push
xchg
inc
fimull
addr16
xchg
cmpsl
jecxz
mov
mov
rcl
int3
scas
push
sbb
loop
mov
mov
or
into
addr16
fldl
js
push
push
loop
mov
pop
adc
in
dec
call
pop
enter
mov
mov
fisttpl
lock
xlat
cmpsl
mov
dec
jl
xor
insl
xchg
sbb
mov
clc
or
inc
addb
sub
pushf
pop
pop
jae
shrl
mov
sub
cmc
cmp
jne
aaa
insb
xor
push
mov
push
in
xchg
dec
insl
mov
pop
xchg
gs
add
insb
ja
fdivl
js
jg
rcr
jmp
adc
das
xchg
stos
lock
push
cmp
stos
sbb
push
out
in
pop
pusha
xchg
mov
ljmp
out
lcall
out
xor
xor
in
inc
lret
ficompl
push
jecxz
sub
das
pop
repz
lods
iret
jae
mov
mov
dec
xor
push
repnz
mov
movsb
mov
or
push
ret
sbb
ss
fsts
xchg
scas
adc
and
sbb
mov
mov
pop
pop
in
pop
dec
and
xchg
and
xchg
sub
clc
pop
inc
mov
jae
imul
sbb
cmc
cmpsb
and
test
sub
xchg
in
xchg
cmp
pop
imulb
stos
cmp
mov
or
cmp
cli
lahf
fdivp
xchg
jle
mov
pop
inc
mov
lcall
repz
mov
or
sbb
push
jmp
popa
lcall
in
mov
movsl
xor
xor
les
cmp
movsl
inc
xchg
fstps
shrd
inc
push
imul
mov
sub
pusha
hlt
inc
pusha
aam
mov
repz
mov
push
sub
or
adc
sub
mov
and
inc
jmp
clc
pop
in
ret
adc
mov
stc
xor
nop
outsl
jl
dec
hlt
mov
push
aam
in
lock
push
rorl
xor
in
mov
stc
xchg
push
inc
inc
sub
cltd
jbe
fmull
arpl
xor
int3
ret
sbb
sub
je
mov
icebp
adc
add
add
pop
dec
jecxz
mov
xor
mov
dec
fdivs
mov
inc
sbb
out
test
inc
test
fisttpll
sub
mov
and
out
or
call
pop
and
mov
sti
push
movsl
aad
cmpsw
call
mov
fcoml
fs
out
cltd
cmc
sar
sbb
out
adc
cmp
adc
push
xchg
mov
jae
scas
cmp
sbb
fucomp
dec
insb
and
fisttps
jo
mov
rcpps
loop
or
insl
leave
mov
xor
pop
setge
scas
imul
dec
inc
adc
xorl
fidivrs
sbb
pop
add
ds
mov
lds
mov
mov
pusha
pop
and
pop
adc
sbb
inc
pop
mov
mov
push
insl
popf
mov
add
cmp
lock
ljmp
pop
mov
cmc
add
mov
push
or
sbb
push
jge
jmp
stos
pop
dec
inc
sbb
in
inc
ljmp
jp
jnp
xchg
shlb
add
stc
xchg
fwait
cmp
mov
push
stc
lcall
in
aaa
jnp
lcall
xchg
sbb
icebp
pushf
std
push
std
adc
add
add
test
jmp
js
test
inc
ficoml
bound
out
jb
or
xor
pop
test
add
mov
ficoms
push
ds
jo
jo
lds
cmp
cs
shr
pop
pop
xor
lret
jmp
adc
xchg
fadd
push
mov
xchg
call
or
push
stc
gs
jbe
xchg
cmpsb
lods
mov
jl
repz
adc
mov
add
push
psrld
xor
aam
xchg
cld
push
push
jecxz
das
sub
dec
fimuls
mov
push
loopne
xchg
adc
ficomps
nop
frstor
in
sbb
jb
jbe
movsb
cmp
test
push
push
pop
adc
or
push
and
xchg
lret
out
and
in
js
clc
daa
hlt
xchg
push
daa
cmp
adc
push
std
adc
repz
daa
roll
xor
shl
fisubrl
stc
fsubrs
cmp
out
sbb
mov
insl
mov
adc
cs
lahf
int
call
sub
shrl
xor
lods
push
lods
mov
arpl
add
mov
and
in
mov
fs
sbb
loope
outsb
sti
into
cmpsb
mov
sbb
fwait
or
aaa
imull
and
push
inc
sahf
mov
or
in
push
xchg
jno
aas
add
fists
mov
out
lahf
jns
lea
sub
inc
hlt
in
out
jle
inc
insb
in
mov
cmc
shlb
sbb
push
pop
pop
sub
roll
scas
in
sub
add
mov
inc
lcall
xchg
cs
frstor
mov
lret
sahf
push
lock
fdivr
popl
je
lock
iret
add
pusha
inc
mov
pop
mov
test
adc
outsb
std
mov
inc
fbstp
jle
rcll
jge
inc
pop
lcall
js
std
inc
ret
fldl
subb
lock
sbb
add
mov
sub
jmp
cmp
test
jecxz
jo
push
mov
dec
xor
and
jne
fs
sub
or
sbb
jbe
xchg
adc
push
push
pop
dec
das
add
sub
xor
lds
sub
pop
pop
jno
stos
pop
mov
pusha
ret
sub
stc
lods
cmp
lock
sub
stos
lea
mov
xchg
nop
cmc
mov
push
mov
mov
adc
mov
jmp
fsubs
movsl
addr16
mov
push
mov
push
inc
jmp
push
adc
mov
ljmp
add
dec
push
jge
mov
sbb
push
jno
subl
adc
out
mov
cli
xchg
imul
loope
xchg
les
js
ficoml
inc
push
test
push
sarl
xchg
sub
sbb
adc
dec
sarb
push
push
sti
dec
sub
call
xor
pop
jl
sub
or
cmp
test
pop
rorl
push
imulb
mov
pop
clc
or
stos
into
pop
jae
pusha
outsb
nop
xor
jo
das
test
mov
dec
loop
stc
add
mov
mov
ss
movsl
pop
adc
sub
and
icebp
out
mov
sub
mov
xchg
testl
fidivrl
mov
addb
mov
inc
fwait
push
int
cmp
cmovne
jns
cwtl
jae
push
add
sub
dec
aaa
xchg
xor
ja
cmpsb
pop
js
xor
mov
mov
mov
mov
push
or
test
bound
stos
jnp
xor
lock
popf
daa
popa
jo
pop
mov
add
movsl
mov
inc
jo
repz
mov
push
and
xchg
movsl
sub
in
and
inc
mov
xor
insb
fyl2xp1
push
xor
ss
add
shll
inc
cmpsb
xchg
imul
aam
add
mov
pop
push
lods
cmp
inc
mov
test
xchg
fs
test
jbe
push
push
cmpsl
xchg
jmp
push
fwait
in
in
les
enter
mov
or
cmp
shl
push
add
fstp
inc
in
jae
mov
ja
mov
pop
and
or
ret
aaa
and
sbb
mov
faddl
pusha
std
lock
pusha
xchg
rorl
out
incl
stos
pusha
orb
push
or
je
xlat
lds
jb
jmp
inc
outsl
outsb
xlat
les
xor
cs
stos
jp
nop
mov
test
je
pop
mov
out
cmp
in
dec
mov
dec
xor
sti
pop
movsb
inc
cmp
adc
inc
push
fbstp
xchg
mov
lock
push
mov
and
loope
movl
xlat
lds
push
fmuls
lods
aam
xchg
sub
test
cmp
daa
hlt
sti
jp
jl
jle
icebp
addr16
dec
cmp
mov
frstor
add
sbb
insl
enter
push
lods
mov
into
push
into
lahf
fstpl
das
or
mov
movsb
sbb
mov
lds
push
sbb
pusha
adc
ja
xchg
add
test
lds
jecxz
fildll
adc
pop
ret
fistpl
call
inc
cli
adc
pop
xor
testb
lods
ljmp
lods
sbb
out
mov
jl
push
sbb
iret
add
pop
loop
iret
inc
lock
add
out
aaa
push
sbb
dec
neg
daa
sbb
gs
sahf
push
cs
adc
pop
rcr
loopne
fdivp
inc
and
ficoms
or
sbb
ljmp
jne
dec
cwtl
push
push
in
and
and
out
sbb
loopne
dec
inc
jbe
adc
inc
cwtl
lock
pop
dec
dec
shlb
jbe
sbbl
cld
pushl
mov
enter
scas
pushf
xor
mov
ds
shrb
insl
dec
mov
dec
outsl
fnstsw
loopne
push
xorb
lret
jecxz
pop
inc
sar
push
or
pop
shll
xor
mov
es
out
or
push
and
push
add
jb
xchg
inc
movsl
push
fcom
imul
sbb
je
stc
pop
iret
xor
bound
sub
push
mov
xchg
sub
andl
push
or
push
push
adc
loop
ror
mov
addr16
inc
xor
into
cmp
mov
fsubs
jb
arpl
inc
out
test
mov
cwtl
imul
pop
or
jnp
jo
addb
jmp
inc
arpl
pop
inc
cltd
xor
push
lock
imul
and
add
add
imul
jg
xchg
mov
insl
xchg
mov
push
lret
xor
push
addl
jb
jecxz
aaa
loop
fwait
or
sbb
lds
shrb
xchg
out
sub
dec
inc
ljmp
jmp
or
test
push
psubsb
pop
push
inc
adc
mov
stos
leave
leave
lcall
and
rolb
push
fwait
test
test
push
cld
add
inc
imul
fwait
dec
mov
push
or
xor
adc
xchg
in
cmp
fsubs
aas
and
push
stos
ffree
fcompl
scas
xchg
xchg
lret
ss
imulb
mov
pop
xor
outsl
sti
and
sub
xchg
cs
daa
aas
push
lcall
outsl
add
push
inc
lcall
clc
inc
sub
je
jp
ljmp
aas
mov
push
adc
xor
cmp
dec
jo
into
pop
pushf
mov
push
or
mov
pop
push
aas
jmp
fdivrl
jl
or
aas
stos
xor
jmp
mov
xchg
add
scas
pop
inc
hlt
cwtl
adc
fwait
inc
add
adc
fisubrs
lret
dec
push
xchg
xchg
shl
lds
ret
pop
test
fldl
jns
hlt
mov
das
or
mov
addr16
ljmp
mov
das
mov
out
rcll
mov
repz
pop
jmp
xlat
fisttpl
jmp
jl
inc
fcmovnbe
sbbb
and
dec
es
mov
lcall
mov
xchg
fnstenv
mov
pushf
sbb
push
jbe
sbb
inc
mov
inc
mov
int3
jl
cli
mov
daa
les
add
aad
test
into
add
xchg
cmpsl
adc
jbe
sub
iret
arpl
lea
xchg
imul
test
cmp
daa
cs
adc
data16
mov
daa
pop
mov
outsl
mov
mov
dec
in
imul
cmp
aaa
mov
lahf
cld
cli
dec
cwtl
popa
xchg
sbb
addr16
adc
enter
mov
outsb
xchg
imull
js
sub
int3
adc
and
bound
test
or
rorl
xchg
inc
lcall
mov
mov
dec
inc
push
jmp
mov
lahf
pop
mov
or
pushf
jno
insl
pushf
in
mov
cmp
jae
mov
cmp
jl
roll
popf
in
pushf
hlt
hlt
in
and
pop
push
sbb
mov
ss
push
pop
push
and
scas
mov
loope
cld
mov
orl
cli
call
outsb
ljmp
addr16
push
add
cmp
inc
mov
mov
dec
xor
pusha
in
and
lcall
dec
rorl
subl
jecxz
sub
inc
insb
sbb
movsb
movsb
and
sub
imul
loopne
ss
mov
data16
scas
and
ret
mov
dec
daa
xor
movsl
notb
push
hlt
shlb
mov
dec
imulb
xor
sbb
sub
fs
scas
mov
shlb
out
adc
xor
nop
and
call
outsl
sub
fwait
je
out
sahf
scas
add
xor
aad
imul
inc
pop
cmp
scas
adc
bound
mov
cmp
testb
push
stc
sti
scas
cmpsb
lods
xor
xor
out
fidivl
mov
sbb
rol
add
push
pop
les
mov
xchg
ljmp
in
lret
outsl
xor
insl
cmpsb
stos
inc
ss
in
das
inc
or
shl
push
inc
inc
sbb
inc
push
dec
pop
fidivs
fwait
mov
jae
test
pop
xchg
mov
data16
std
xchg
jnp
test
add
ffree
mov
test
pop
xor
aaa
dec
or
out
or
movsl
popf
sbb
cmp
pop
ja
mov
sbb
mov
ja
cmp
xchg
mov
insl
xor
mov
fwait
pop
movsl
pop
mov
xchg
xchg
test
jbe
inc
test
in
stc
leave
xor
in
clc
orb
aas
add
dec
mov
loope
jne
xchg
scas
in
clc
jle
mov
mov
in
mov
fmull
or
cwtl
loopne
push
and
mov
iret
popa
xor
test
or
arpl
dec
ss
xor
pop
mov
rol
movsb
cmp
int
out
sbb
inc
repz
ret
and
mov
xor
jne
ja
imul
adc
sub
dec
add
bound
cmp
idiv
push
ja
sub
xor
push
pusha
movl
sbbl
fdivl
jp
adc
leave
ja
push
dec
push
test
inc
pusha
in
inc
push
sub
aam
int
sti
lods
imul
inc
mov
ret
pcmpgtw
shl
icebp
fs
pop
pop
cwtl
add
dec
ret
out
sub
mov
call
je
icebp
sub
add
in
adc
aam
sbb
ret
xlat
add
daa
add
adc
shlb
jnp
add
outsl
ja
sbb
das
inc
inc
and
inc
iret
les
adc
aad
sbb
mov
jbe
mov
pop
in
xor
test
das
mov
dec
mov
sbb
pusha
test
test
fldt
cmp
movsb
mov
enter
xlat
loopne
sbb
cmp
scas
mov
mov
and
adc
xchg
mov
mov
hlt
mov
cli
xor
ret
or
dec
lds
lcall
push
lds
ret
pusha
hlt
test
xchg
cmp
dec
into
jo
sbb
mov
clc
pop
out
xor
icebp
loop
push
ret
xchg
push
out
and
hlt
popa
arpl
in
or
cmovb
leave
or
fdivs
loop
cmc
and
add
adc
out
inc
pop
sub
fimull
and
cmp
sbb
dec
mov
cli
sub
pop
dec
ja
test
push
stc
popa
fucom
aaa
jle
pop
out
addl
fucomip
movsb
sbb
jg
xchg
add
repz
lock
cmpsb
inc
imulb
pop
in
xchg
dec
mov
test
dec
sub
mov
push
fbstp
jno
ja
lea
das
sti
mov
das
add
loopne
sbb
mov
orl
jge
lret
iret
pop
xchg
js
popa
push
pop
xor
jle
mov
ja
xor
mov
out
scas
jno
add
std
pop
data16
mov
lret
or
jnp
in
sbb
insl
mov
cmp
mov
or
jae
les
add
out
sbb
xchg
jecxz
jno
shr
push
aaa
add
push
clc
sbb
inc
ds
and
fdivr
insb
lret
pop
pop
outsb
pop
loope
pop
pop
imul
inc
or
mov
xor
ret
mov
mull
shll
adc
enter
cwtl
lea
sbb
loope
iret
in
je
sub
sbb
cwtl
adc
jo
das
and
aad
cmp
jne
push
dec
lcall
aaa
stc
popa
stos
jle
fwait
lahf
mov
jbe
pop
arpl
push
iret
mov
test
sub
pop
or
xor
sbb
or
lret
mov
nop
aas
jge
xchg
andl
xchg
fsubrs
ds
adc
xor
and
sub
idiv
or
add
push
hlt
inc
xchg
xor
adc
les
sub
outsl
and
sbb
mov
xor
popfw
push
in
loope
andb
bound
xlat
pop
sbb
mov
xchg
mov
xchg
push
mul
mov
movsb
jne
xchg
shlb
pop
or
enter
mulb
ja
xchg
iret
mov
ret
lods
xchg
test
adc
out
cmp
or
pop
fisubrs
jle
mov
inc
mov
jle
sbb
mov
stc
arpl
and
push
cmp
mov
mov
in
jp
cmp
leave
xor
out
jge
add
iret
fsub
stos
mov
sbb
jb
dec
fimuls
mov
push
popa
inc
call
loopne
pop
inc
xchg
incb
inc
push
and
cmp
int3
sub
sti
xchg
lods
sub
es
mov
push
lcall
xor
insl
add
xrelease
es
add
scas
lcall
mov
lds
cmp
rorl
ljmp
dec
jae
dec
inc
inc
lods
cmp
mov
call
or
sbb
ret
xadd
enter
cmp
sub
dec
call
pop
idivl
sub
add
push
out
shll
push
mov
out
shlb
xchg
cli
subb
or
notl
pop
in
decl
pop
add
sbb
inc
xor
push
dec
pop
mov
pop
pop
pusha
inc
pop
sti
xlat
jbe
ret
adcb
jb
jge
cwtl
ds
xor
enter
rclb
add
popa
pop
fcom
push
fdiv
es
cmpsl
push
lret
xchg
mov
fcompl
gs
cmc
dec
lret
in
les
or
mov
or
mov
or
and
and
sbb
adc
imull
mov
cmpsb
pop
xchg
in
ret
pop
or
std
push
lret
add
xor
cwtl
nop
add
es
ljmp
xor
es
or
scas
xchg
in
adc
pop
jno
pop
add
xor
mov
test
jnp
sub
jge
lret
sub
push
pusha
mov
push
jne
icebp
add
imul
jge
dec
je
testb
loopne
inc
pop
out
jbe
div
in
repz
outsl
sub
inc
jns
and
ja
adcl
mov
add
add
movsl
dec
rorb
lahf
popa
pop
aad
sub
xchg
pushf
mov
insl
mov
popa
xchg
xor
dec
push
ljmp
lds
cmp
push
lret
imul
mov
out
out
dec
gs
imul
jp
loopne
inc
dec
jno
loop
lds
push
mov
push
sub
mov
inc
adc
xchg
push
jbe
pusha
pop
les
push
imul
mov
test
cmp
and
ss
fisttpl
call
pop
cld
leave
dec
imul
int3
aad
dec
dec
fldcw
and
push
xor
loopne
xchg
adc
test
inc
js
fwait
push
addr16
cmpsb
arpl
out
or
or
lds
inc
jmp
cwtl
ja
dec
out
lret
js
inc
mov
and
mov
mov
xchg
es
sub
cmp
imul
adc
gs
aaa
in
mov
mov
aad
cmp
pushf
js
cmp
into
or
mov
push
popa
pushf
adc
xchg
out
add
inc
int
js
in
xor
mov
or
jmp
dec
cs
lods
cmp
lret
or
fdivrs
jmp
shrl
in
je
push
mov
test
les
test
or
loop
je
mov
push
and
or
push
fistps
int3
out
popf
fisubrs
inc
ud2
lahf
push
xor
js
rorb
sbb
shl
dec
push
iret
adc
mov
fdivrs
mov
or
lret
xor
sbb
add
cmpl
negb
jns
xchg
and
lock
aas
test
mov
inc
aam
push
imul
stos
test
or
fnstcw
add
pop
xor
stos
rcrb
popf
jl
dec
js
mov
int3
fadd
or
inc
push
stc
nop
pop
jo
xor
ds
xor
lds
es
lds
push
sti
push
xchg
jge
test
outsl
push
insl
stc
test
das
rcll
lods
dec
adc
push
rcll
adc
push
xchg
jae
pop
push
fcmovnbe
out
movsb
lock
xchg
adc
xlat
shrl
mov
inc
and
pop
mov
pop
mov
or
xor
test
gs
stos
mov
sbb
mov
or
mov
out
clc
ret
shl
lds
add
js
int3
sbb
xchg
sub
sub
insb
cwtl
dec
mov
fs
push
adc
xchg
mov
inc
push
push
fbstp
lcall
add
adc
add
jae
xchg
imul
push
jl
sbb
mov
leave
orb
sbb
add
lods
mov
int
pop
clc
out
fiaddl
lds
mov
imul
sahf
ficompl
inc
mov
icebp
mov
mov
jecxz
xchg
mov
and
dec
mov
xor
cli
or
mov
adc
jo
mov
gs
ror
cld
imul
arpl
enter
icebp
mov
cmp
inc
in
jb
cmpsl
jmp
or
repnz
in
adcb
dec
add
cli
in
push
mov
or
lea
dec
cltd
or
das
push
add
or
daa
repnz
jecxz
mov
mov
outsl
pushf
data16
pushf
add
test
dec
cwtl
mov
in
in
ds
out
test
xchg
cmpsb
push
jp
das
add
dec
mov
adc
negb
fldcw
call
ja
or
xor
push
jno
mov
ficompl
ljmp
dec
jne
imul
push
fsts
push
aad
pop
popa
lahf
cs
movsb
pop
inc
arpl
mov
test
mov
ret
cmpsl
mov
imul
shrl
xchg
insb
test
dec
icebp
lret
data16
add
xor
jo
inc
xchg
or
cmp
mov
imul
lods
sbbb
sarb
add
and
in
incl
cwtl
or
xchg
nop
cmp
insl
stc
call
jmp
repnz
xchg
adc
xchg
rcll
in
bnd
mov
sbb
or
pop
ja
mov
pop
lock
ja
sbb
or
aam
fistps
lahf
add
pop
sbb
pop
mov
shl
bound
pop
jbe
add
adc
lods
add
mov
adc
mov
movsb
pop
icebp
jae
cmc
xchg
mov
xlat
mov
aas
daa
mov
mov
mov
mov
gs
int
jno
cmp
jns
aas
mov
dec
push
jp
push
ljmp
or
sub
addr16
addr16
inc
sbb
dec
pop
xchg
sbbb
cmp
jae
pop
mov
pop
inc
pop
jae
pushf
int
lahf
sub
incb
dec
out
jmp
mov
pop
dec
dec
mov
dec
push
repnz
dec
pusha
xor
mov
aas
movsb
jne
jge
mov
pop
subb
gs
xchg
push
pop
mov
adc
push
rorl
pop
shll
pusha
xor
popa
lahf
not
lods
insl
icebp
fisubl
push
out
push
add
out
push
inc
arpl
jl
mov
mov
add
dec
lahf
add
lock
pop
cmp
mov
out
pusha
imul
fsubrs
push
fnsave
cmp
inc
pop
js
dec
sbb
loope
dec
rorb
mov
mov
cs
lcall
add
je
push
dec
popl
lods
aaa
cmp
jmp
pop
gs
gs
xor
xchg
cmpps
or
out
jecxz
ljmp
push
lret
or
add
push
mov
push
int3
test
mov
pop
or
mov
imul
xor
or
loope
pop
stos
imul
mov
cmp
popf
repz
sti
pop
pop
scas
or
pushf
sub
xchg
je
das
xchg
fdivl
mov
pop
sbb
pop
mov
repnz
test
inc
xchg
popf
outsl
addl
ror
mov
cmc
mov
icebp
pop
scas
ljmp
cmp
sub
pusha
ret
xchg
sub
or
rorl
faddl
in
pop
push
fcmovnbe
lret
sub
stos
push
fdivl
inc
cs
jb
jb
or
in
or
xchg
push
nop
call
add
arpl
orb
insl
pop
pusha
push
mov
pop
lahf
pop
std
xchg
js
stos
fdivp
push
push
or
mov
ds
mov
xor
or
lret
mov
jecxz
popa
xchg
cld
lahf
mov
sbb
mov
fwait
lods
movsb
sarb
cmp
rcrb
add
fimuls
dec
arpl
scas
push
faddl
jg
jg
jae
leave
sub
sub
push
ja
sub
push
roll
push
fcompl
add
sbb
test
sub
ljmp
mov
in
nop
push
mov
lock
dec
movb
test
xchg
or
jo
jp
mov
sub
jl
daa
inc
mov
jge
in
and
or
in
inc
mov
cwtl
movsb
stos
xor
push
push
fs
fiaddl
test
push
iretw
dec
sbb
cmp
cmp
xchg
xlat
push
add
jle
or
xchg
push
mov
jb
xor
dec
movsb
push
add
icebp
sbb
imul
stos
test
push
xor
xchg
jns
cli
push
push
add
jnp
pop
clc
das
cmpsl
scas
xor
pop
push
fdivl
mov
fnstsw
mov
or
jno
fisubl
xor
jle
icebp
jo
clc
sbb
xchg
jp
xchg
cld
ja
pop
pop
aad
xor
mov
aaa
out
popl
insl
cwtl
xor
push
jle
jnp
addl
pop
mov
xor
sub
pop
into
call
lret
in
mov
xchg
hlt
ljmp
nop
mov
mov
lahf
push
lahf
ljmp
mov
push
sub
je
ret
lea
aas
xor
scas
mov
popf
inc
or
testl
xchg
adc
or
push
push
pop
clc
in
scas
shl
ljmp
pushf
mov
sbb
pop
mov
scas
jb
icebp
ret
rcll
sbbl
jns
xor
ret
outsb
cmp
mov
pusha
lods
leave
out
addr16
mov
ficoml
jno
mov
lock
andl
cmc
cmp
movsl
xchg
stos
lahf
push
sub
xchg
mov
cmp
ret
jmp
es
or
ret
mov
stc
add
xorl
lods
test
cmpsb
daa
and
in
mov
dec
push
dec
verr
sbb
clc
mov
adc
loopne
jge
mov
pop
dec
loopne
fcomps
mov
mov
icebp
les
pop
fcompl
lahf
ljmp
add
sub
mov
sbb
mov
fmul
rolb
ret
insl
std
lods
jne
imulb
jge
adc
xchg
jbe
hlt
js
push
or
inc
xchg
cmp
dec
shrb
mov
lods
out
mov
jecxz
sub
sbb
mov
idivl
fisttps
sbb
mov
aam
mov
in
dec
cmp
xchg
fmull
pop
std
jmp
outsl
mov
sbb
mov
loopne
inc
fwait
mov
xchg
mov
and
dec
sahf
das
sub
mov
dec
xchg
adc
mov
sbb
pop
jno
mov
sub
enter
in
add
push
aas
sbb
int
clc
add
xchg
or
fs
repnz
add
push
test
pop
sub
dec
or
subl
loope
js
outsb
jmp
xchg
inc
insb
mov
lret
inc
add
movsb
test
pmulhw
and
inc
xor
lock
push
pop
and
xchg
cs
stos
adc
xchg
lods
cmpl
dec
decl
lods
rol
push
mov
je
xchg
test
and
sbb
xor
popf
aam
mov
inc
push
dec
rorb
loopne
fwait
in
arpl
ds
sbb
xchg
ficoml
sahf
scas
xorb
push
test
adc
test
stos
lds
bnd
or
fwait
xor
sbb
jl
xor
dec
repz
push
mov
lds
push
mov
mul
mov
test
dec
inc
xor
inc
aaa
mov
fld
or
and
addl
sahf
or
or
push
lock
sbb
les
movsb
mov
int
xchg
cmp
das
pop
aaa
sbb
xor
pop
fisubl
sbb
jg
jno
pop
cmc
mov
pop
add
mov
cmp
cmpsb
push
aaa
lock
mov
dec
mov
jae
inc
dec
pop
adc
or
add
stc
mov
mov
xor
hlt
sbb
add
test
xchg
enter
in
out
nop
and
xchg
push
aas
and
cmpsb
adc
add
orb
test
faddp
push
lds
jle
popf
jge
mov
xor
je
out
lock
mov
pushf
cs
movsl
lret
pop
stos
ficompl
loope
jae
xor
or
xor
mov
mov
insl
dec
sbb
sbb
inc
xor
or
jge
nop
dec
aam
inc
pop
adc
xchg
popa
jne
push
in
daa
cmpsl
ret
push
sub
fs
sbb
push
fiadds
ffreep
stc
in
addr16
fucompp
in
movsl
push
ss
cmp
xor
aas
out
roll
cmc
xchg
pop
xchg
pop
jg
push
fcmovb
jno
std
mov
mov
adc
test
stos
movsl
jg
or
cld
mov
in
jmp
sarl
je
repz
testb
rcl
sbb
fcomps
mov
scas
add
adc
push
or
addr16
ss
push
lahf
add
and
or
adc
mov
cmp
movsb
pusha
negb
out
cmp
jl
insb
mov
testl
xor
adc
lret
inc
xor
iret
int3
inc
xor
dec
inc
and
inc
loop
es
pop
bound
push
flds
inc
rorl
sar
sub
popa
ss
pop
cli
adc
cmpsb
push
cmp
mov
cwtl
cwtl
repz
mov
loopne
xlat
lds
pop
subl
jecxz
mov
xor
test
inc
pop
inc
cltd
jle
xchg
imul
inc
xchg
icebp
stos
adc
and
adc
sbb
lods
sub
es
jl
nop
pop
sub
ja
rcll
xchg
ds
mov
repz
sbb
daa
sbb
jg
xlat
xchg
mov
std
and
inc
push
add
sbb
push
bound
aad
dec
fcmovne
jge
outsb
stos
shrb
add
stc
jnp
pop
popa
xlat
jae
icebp
ljmp
sub
cmpsb
dec
pop
xchg
aaa
movsl
sbb
loope
push
jae
pop
js
nop
mov
int3
xor
jge
pop
push
jmp
cli
cwtl
mov
push
adc
dec
mov
shrl
jnp
fs
or
cmp
leave
or
lahf
sbb
dec
ret
mov
test
dec
pop
mov
out
mov
dec
and
xor
add
inc
lods
cmp
sub
das
cmpsl
pushf
lods
dec
movsl
xchg
popf
lcall
pop
dec
lds
scas
addr16
sar
jmp
mov
cmp
mov
test
test
push
repz
xchg
js
arpl
pop
cwtl
out
jb
sbb
pop
cmpsb
imul
jb
movsl
in
cwtl
shll
push
aaa
pop
mov
leave
xchg
lcall
sti
push
dec
pop
in
es
mov
mov
push
cmpsb
inc
idivl
dec
daa
test
pop
sub
sbb
popa
or
adc
sbb
imul
testl
adc
push
xchg
fcompl
cmp
adc
xchg
scas
xor
inc
add
testb
outsb
pop
mov
dec
jecxz
and
es
je
xchg
xor
and
call
mov
sub
push
mov
call
mov
fists
sahf
stos
mov
andl
stc
lods
movsb
cwtl
out
fnstsw
das
adcb
stos
loop
adc
idivl
bound
mov
jmp
fmul
jo
sti
outsb
push
pop
mov
sub
lcall
flds
lock
cmc
inc
mov
pop
loopne
xchg
sub
loop
or
outsl
and
mov
sbbb
lods
dec
adc
cmp
out
cmp
ja
mov
fstpl
pop
or
mov
loop
hlt
xchg
push
dec
fs
js
mov
sbb
enter
fsubr
sub
xchg
nop
jp
push
fnstcw
test
movsb
mov
mov
imul
shr
cli
pop
add
sbb
outsb
jmp
xchg
ja
es
inc
xchg
fnsave
xchg
mov
std
aas
jbe
into
inc
cmp
push
dec
std
push
mov
testl
test
rorl
fs
mov
movsl
enter
outsb
cmp
add
pop
mov
cmp
sbb
mov
inc
faddl
jae
push
es
call
dec
outsb
insb
inc
je
sbb
ljmp
hlt
inc
mov
stos
ja
aas
mov
fisubrl
ja
dec
lods
call
sarl
sti
iret
aad
test
out
and
sbb
bound
jecxz
mov
adc
xchg
xchg
sbb
arpl
xor
dec
stc
jl
or
gs
xchg
shlb
into
sub
sbb
andl
fists
xchg
lock
es
cmpsl
jp
or
iret
or
xor
je
pop
add
add
or
imull
ss
movsl
push
filds
ret
mov
loopne
cmpsb
xchg
xchg
inc
pop
arpl
faddl
and
adc
pop
std
bswap
leave
daa
jl
push
sbb
aaa
inc
ljmp
xchg
mov
or
sub
arpl
adc
xchg
imul
and
insb
jno
ss
int3
pusha
das
enter
sub
sbb
mull
and
fidivs
shl
adc
push
sub
push
adc
cli
inc
imul
stc
fildl
adc
push
xor
popf
test
jecxz
jl
shrb
push
push
testl
iret
bound
xchg
mov
mov
mov
mov
push
jecxz
push
push
mov
ja
sbb
lahf
loop
mov
jne
and
ja
mov
pop
in
or
sbb
outsl
pop
ja
roll
movsl
scas
es
dec
push
sbb
comiss
daa
fs
jns
mov
jle
fcomp
sbb
adc
push
push
push
icebp
xlat
xor
inc
and
and
adc
dec
push
rolb
mov
adc
mov
jns
rcll
mov
ret
jo
push
or
xchg
fdivrs
sub
mov
jge
or
jge
pop
test
jbe
rorb
adc
aaa
nop
push
in
cmp
add
addr16
sbb
mov
movsl
pop
xorl
push
jecxz
mov
and
pop
jmp
sbb
movsb
sbb
aas
divb
mov
cld
int
mov
jp
ficompl
xor
xchg
inc
mov
cmp
movsb
stc
enter
dec
test
push
rcrb
mov
mov
pop
pop
push
mov
push
mov
js
inc
add
mov
mov
test
xchg
jle
sbb
sub
dec
sub
cmp
push
dec
sub
mov
jmp
pusha
dec
cli
inc
pop
in
mov
mov
test
lock
xlat
push
inc
xchg
cmpsl
pop
aas
pop
in
stos
sub
fcoml
and
je
pushf
cld
sbb
jno
dec
loope
inc
sbb
inc
adc
adc
aas
xlat
es
arpl
push
sub
xchg
fistps
in
mov
sbb
push
xor
stos
adc
mov
add
stos
cmp
pop
xchg
daa
mov
cmp
inc
or
push
add
fldl
xchg
fsubl
or
mov
je
pop
ljmp
int3
aad
pop
gs
dec
mov
or
fsubrl
adc
aaa
add
lret
fldln2
and
jl
ja
mov
scas
sar
aad
or
jmp
int
gs
dec
mov
lds
rclb
les
push
lcall
add
push
bound
mov
shrb
loopne
push
test
hlt
jo
nop
dec
loop
mov
dec
into
and
jno
adc
into
xchg
sub
adcb
or
fnstenv
mov
movsb
pop
xchg
rcrb
jne
sub
mov
mov
sub
push
push
sbb
rcrb
lods
jne
jno
mov
jne
cwtl
and
leave
ja
mov
mov
mov
fsts
stc
incl
out
rorb
loop
in
jns
test
push
shll
loop
xchg
jmp
mov
xor
lods
pop
mov
push
cs
pop
mov
and
adcl
out
test
insb
xchg
cmp
mov
outsb
lcall
cmp
pop
inc
fldt
ret
bound
mov
xor
jne
mov
dec
popf
ljmp
daa
cwtl
jl
clc
icebp
jbe
aas
cmpsl
add
push
mov
or
sbb
inc
flds
icebp
es
fidivs
add
jno
in
xchg
xchg
pushf
xor
pop
cmpsb
int
lea
and
mov
hlt
and
scas
dec
xor
mov
jns
sbb
xchg
push
ss
fwait
shl
sbb
std
repz
adc
jns
test
add
stc
mov
pop
adc
xchg
mov
push
inc
add
xchg
js
mov
into
mov
stos
or
jns
bound
inc
out
icebp
mov
adc
xlat
scas
addr16
gs
jbe
aam
int
test
xor
add
int
jne
xchg
iret
out
cmpsl
out
jecxz
xchg
or
fimuls
push
das
pop
fcoms
cmc
popa
gs
push
jno
jno
xchg
xchg
fildl
or
jle
outsl
mov
std
mov
lock
sarb
pop
lods
popa
or
in
out
push
popf
cwtl
dec
mov
aaa
mov
leave
xlat
faddl
adc
inc
insl
cs
xor
mov
rclb
push
and
into
lea
push
sub
xor
mov
or
xorb
test
push
in
jge
stos
mov
xchg
xchg
push
cmp
data16
jp
pop
loopne
cmpsb
inc
mov
fmuls
lock
xchg
lret
lret
inc
mov
mov
xchg
rorl
repnz
aam
xlat
int3
je
test
pusha
push
add
notb
lahf
ret
mov
mov
dec
xchg
dec
add
dec
jle
cmp
or
sahf
out
sub
xorb
or
jae
incb
in
mov
fildll
mov
add
push
sahf
xchg
xchg
xchg
dec
xlat
icebp
int3
xchg
addl
out
mov
xchg
dec
inc
pop
aad
cmp
jp
shl
add
shlb
pop
repz
pop
ret
xchg
jg
lahf
rcll
cmp
nop
and
ffree
outsl
lcall
mov
std
lds
out
bound
and
jno
mov
ret
sahf
push
mov
xchg
scas
int3
in
mov
fs
nop
mov
add
mov
data16
subb
sbb
cmp
push
sarl
jmp
test
inc
les
sub
sarb
idivl
push
add
adc
adc
es
fnsave
cmp
or
adc
mov
or
sub
shlb
inc
insl
mov
jl
xchg
addr16
mov
clc
ss
sbb
aas
add
pop
adc
dec
jae
cmp
enter
call
push
adc
xor
adc
lock
out
or
lea
jle
daa
in
arpl
iret
sbb
shlb
jo
push
fisubrl
sti
sahf
push
push
lods
xorb
roll
mov
loope
sbb
jl
ret
inc
cmp
jmp
sbb
cmp
loope
pop
clc
xor
iret
shl
dec
out
fcoms
loope
out
jmp
enter
add
arpl
lea
mov
inc
push
pop
movsl
jecxz
push
cli
enter
add
pop
data16
scas
inc
push
pop
add
add
xor
and
mov
jmp
pop
pop
fldl
mov
cmc
adc
sbb
xor
pop
nop
ret
push
cmpsl
mov
cmp
cwtl
jb
insl
push
inc
pusha
test
adc
and
mov
fsub
xorb
clc
jae
or
inc
push
cltd
mov
fwait
ret
mov
hlt
inc
mov
push
insb
and
add
jae
sbb
and
mov
hlt
push
xchg
and
mov
pop
ss
rcll
out
mov
xor
out
push
lahf
sbb
inc
add
add
or
pop
xchg
mov
mov
ja
or
cwtl
aad
pop
dec
inc
sbb
xchg
inc
ja
jp
shll
jecxz
negl
out
dec
out
and
sub
jge
aas
ja
and
adc
inc
adc
clc
mov
in
xchg
mov
daa
xchg
sahf
and
mov
jo
xor
push
mov
sbb
addr16
std
orb
sar
add
mov
es
iret
pop
cwtl
jge
mov
scas
xor
sbb
or
bound
negl
loopne
sub
sbb
std
jb
adc
add
mov
pusha
inc
lcall
movsb
ja
int3
mov
leave
pop
xchg
jge
mov
ja
clc
mov
and
adc
jo
lcall
iret
pop
push
lea
sahf
jle
push
jmp
jp
xor
repnz
inc
jbe
out
ret
push
dec
div
cmp
iret
incl
push
sub
arpl
jle
dec
adc
pusha
fstpt
test
inc
cmp
andl
loopne
xlat
dec
xor
fcmovnb
push
lahf
jne
dec
push
and
je
sbb
cs
sbb
and
popf
ficomps
fwait
les
shr
lahf
lods
nop
jno
divb
jle
and
ss
fcmovbe
data16
aam
pop
xchg
in
in
push
xor
add
ret
push
jo
fisubrl
adc
pop
ss
push
cmc
subb
cwtl
and
adc
dec
js
mov
rcl
aam
xor
test
mov
repz
pop
jb
js
sbb
push
jecxz
fcoml
ds
push
jb
xchg
lock
push
mov
scas
inc
or
cmpl
loop
and
add
pop
push
mov
cmp
pop
in
inc
cmp
jg
les
negl
inc
lds
lods
jmp
cmp
fistpll
cmpb
mov
leave
sbb
xchg
mov
xchg
pop
push
scas
adc
push
cltd
push
xchg
mov
adc
int
lods
xchg
inc
xor
ja
add
jae
fidivs
and
cmp
add
or
pop
mov
mov
xchg
and
imul
lods
fists
sub
or
xor
fstpt
sbb
add
loop
movsb
mov
mov
xor
inc
out
shlb
daa
outsl
leave
out
cmp
adc
movsb
add
mov
scas
pop
ret
xor
pushf
jl
xor
jecxz
pop
lea
add
fdivl
shrl
jns
jp
jg
adc
adc
out
pop
addb
mov
adc
mov
mov
add
xor
adc
data16
or
or
cmp
push
push
pushf
aam
pushf
mov
dec
sub
ret
cmp
out
xchg
xchg
insb
mov
or
add
inc
pop
mov
andl
push
insl
iret
sub
mov
mov
mov
sbb
repz
mov
sbb
push
iret
movsl
cltd
cwtl
xor
into
cld
mov
insb
subb
push
mov
psubsw
sbb
addb
mov
adc
fwait
popa
adc
int
pop
cmp
lret
cmp
xor
in
add
popf
xchg
pop
sbb
dec
and
shll
mov
mov
cmpsb
icebp
mov
mov
roll
sub
and
adc
cs
in
lea
cmpsl
push
popf
lcall
test
adc
cmpsl
cmc
je
sub
jle
nop
into
lahf
dec
add
mov
dec
in
pop
bound
hlt
ret
mov
add
jno
jle
cmp
ret
inc
fs
push
in
xor
adc
or
call
popa
ljmp
pop
in
pop
negl
push
push
pop
cmp
cmp
pop
aaa
pushf
mov
out
mov
pop
imul
mov
pop
lcall
jnp
fcmovnbe
cmpsb
dec
sub
inc
add
xor
ret
xchg
fisttps
mov
dec
mov
aas
jecxz
aas
mov
pop
scas
xlat
stos
popa
movsb
das
add
lcall
fisttpll
stos
adc
orb
pop
dec
cmp
add
cmp
dec
xlat
hlt
add
dec
add
les
cmp
or
lcall
pusha
pop
inc
aam
daa
inc
mov
mov
add
sbb
arpl
jae,pn
sarl
jne
xor
out
mov
in
inc
mov
dec
cmp
cmp
or
sub
sub
or
loop
push
cs
dec
cmp
dec
mov
mov
out
repnz
icebp
xchg
push
ret
inc
mov
xlat
sbb
outsl
push
add
jb
mov
mulps
pusha
inc
incb
bound
lock
cmp
xor
aad
pop
jp
lea
gs
sbb
xor
or
jg
test
arpl
sbb
int
jg
out
jbe
add
add
mov
jl
sbb
lahf
and
and
mov
or
push
lret
es
pop
mov
mov
jno
cmpl
and
mov
lret
mov
scas
std
mov
fst
mov
mov
inc
and
sahf
mov
mov
loopne
xlat
jecxz
test
addr16
movsb
mov
test
jp
aas
lahf
inc
adc
testl
pop
test
shrl
dec
adc
bound
jmp
shlb
jne
sub
arpl
seto
sbb
in
sbb
cmc
loop
xchg
xchg
xor
xor
scas
push
push
push
loop
ret
js
clc
jae
jbe
cmpsb
xor
push
leave
test
lods
xchg
push
ds
mov
sbb
test
ss
jno
fbld
addl
and
test
sahf
add
jo
or
inc
xor
or
inc
in
test
dec
pop
sbb
fidivrs
nop
sub
gs
int
push
test
sub
push
jnp
push
bound
sub
mov
stos
sti
addb
call
rol
icebp
mov
jnp
rcrl
imul
mov
aad
stos
movsl
dec
xor
push
sarb
cmp
aam
rcr
out
push
xchg
jno
or
pushf
inc
push
in
and
xorb
std
dec
out
mov
xor
pop
mov
xchg
cld
xchg
sub
pop
jbe
ljmp
mov
sbb
insl
mul
jmp
sub
ret
push
out
repz
stos
or
jne
mov
adc
xchg
mov
nop
pop
stc
pop
add
sub
movsl
stos
fbld
outsb
cli
xor
sub
mov
sbb
pop
add
mov
ret
mov
mov
push
popf
and
dec
push
sahf
sub
mov
aad
loopne
dec
out
test
dec
xor
repz
jbe
je
mov
jbe
loop
cmc
xchg
mov
dec
mov
inc
pop
jg
pop
mov
sub
ja
adc
or
xchg
iret
xchg
shrb
jl
and
inc
xchg
inc
div
mov
mov
mov
in
lcall
jmp
xchg
xchg
ficoms
popf
movsb
jmp
and
sbb
add
mov
push
adc
imulb
adc
lods
out
in
dec
push
adc
mov
or
cmc
test
mov
lahf
aam
movl
mov
and
sbb
fs
mov
call
jno
or
repnz
inc
inc
add
mov
lret
cmp
xor
stos
xchg
inc
fadds
mov
mov
pop
jge
mov
sub
dec
enter
shrl
add
mov
mov
rorl
cmpb
std
insl
pusha
popf
mov
xchg
and
ljmp
pop
out
out
pop
pop
aam
sbb
pop
movsl
daa
inc
add
pop
add
pushw
rcrl
push
inc
imul
add
insl
cmpsb
das
js
sbbl
inc
popa
lret
adcl
jo
jbe
jb
ljmp
xor
addl
sub
vpcomb
clc
cmpsl
ss
push
xlat
fildll
dec
into
roll
out
xchg
mov
testb
pop
and
jns
insl
mov
jnp
pop
pop
cli
push
in
ljmp
scas
mov
mov
stc
adc
int3
xor
es
adc
or
dec
jnp
cmp
mov
pop
outsl
rcll
and
leave
and
and
add
and
inc
int3
loop
lods
int3
jmp
in
mov
leave
mov
ret
sub
div
rcll
mov
sbb
xlat
mov
dec
shlb
pop
call
add
lods
sub
sbb
dec
inc
cltd
stc
ljmp
jbe
cmpsb
out
fsubp
fnsave
jl
dec
negl
and
loopne
mov
andb
mov
loop
test
adcb
fs
testl
mov
adc
mov
test
outsl
inc
js
test
sbb
nop
ja
inc
je
mov
sbbb
lea
enter
cmpb
xlat
push
or
ret
sbb
push
loopne
lcall
jno
cmp
cld
adc
mov
xchg
outsb
sbb
into
int
dec
in
cmpsb
aad
stos
int3
push
nop
mov
in
cmpsb
pop
dec
xchg
xchg
pop
xor
fwait
cmp
ja
aad
arpl
adc
outsl
mov
pop
push
psrad
and
in
adc
dec
push
ljmp
in
mov
pop
sbb
imul
mov
test
std
aad
and
loop
cwtl
aaa
scas
movsb
adc
pop
inc
push
lahf
insl
dec
push
xor
sub
jae
jge
add
in
pusha
dec
cmpsl
jae
dec
pusha
mov
outsl
xchg
or
pop
mov
out
mov
mov
push
rclb
pop
aas
pop
pop
bnd
mov
jne
mov
mov
fstps
or
test
mov
out
mov
adc
xchg
push
add
mov
ljmp
jno
pop
test
aas
jge
shlb
cmp
add
xor
fiaddl
xchg
das
sbb
add
inc
adc
cmpsb
mov
enter
adc
outsb
loope
push
push
repnz
idivb
inc
jmp
cmpsb
inc
dec
mov
adc
mov
icebp
hlt
inc
dec
sbb
pop
fistpll
sub
jle,pt
popl
push
clc
or
xor
outsb
je
xchg
lock
lret
pop
xchg
mov
bound
inc
movlps
popf
orl
aam
lea
daa
cmova
shrb
adc
loope
jae
mov
sub
dec
dec
dec
ljmp
jecxz
mov
xchg
mov
cmpsb
mov
mov
dec
add
push
addb
inc
or
sbbb
iret
adc
mul
push
mov
or
push
in
push
addr16
lret
pop
jo
ja
sti
push
popf
sahf
add
dec
ja
push
mov
and
sub
xor
xor
dec
popa
mov
adc
scas
dec
es
test
nop
xchg
inc
dec
nop
icebp
xor
push
test
aam
jns
ret
mov
repnz
mov
push
pop
dec
xchg
psllw
fmuls
adc
outsb
mov
cwtl
aad
xor
pop
push
in
fcomi
in
push
ret
cmp
cli
shl
andl
out
or
push
ret
cmc
fisubl
imul
loopne
shl
arpl
adc
sbb
pusha
fs
push
data16
xlat
or
aam
movsl
and
pop
add
stos
fdiv
loope
mov
test
jne
call
mov
or
adc
dec
add
mov
fnsave
enter
pop
push
fs
cmpl
aaa
jno
aaa
rolb
fidivrs
outsl
pop
jbe
xor
jnp
add
fildll
xchg
pop
and
inc
and
jge
xchg
mov
fmul
mov
mov
mov
mov
pop
xor
fcomps
lcall
insl
xor
sbb
sub
sub
jg
iret
sbb
daa
push
or
jns
push
icebp
jmp
fistpll
mov
jp
js
add
and
adc
push
cmpsb
mov
outsb
pop
xchg
insb
out
xchg
xchg
cltd
out
fwait
hlt
mov
repnz
cwtl
push
gs
pop
mov
and
movsl
enter
test
out
jo
inc
fucomp
mov
shll
mov
addr16
push
pop
fldenv
imul
mov
and
inc
dec
xchg
cmp
and
in
scas
xchg
je
push
stc
add
pop
lods
in
push
adc
and
or
or
mov
pop
sbbb
jne
jg
inc
test
lret
out
roll
pop
sbb
sub
addl
sub
mov
in
add
mov
fcmovu
ss
mov
jmp
movsb
js
dec
lahf
push
scas
std
adc
imul
cmp
int3
fs
arpl
repz
mov
lcall
fdivs
xor
rcrl
pop
cmpsb
cmp
fiaddl
cwtl
xor
adc
xchg
lret
dec
inc
xchg
mov
pop
xchg
gs
add
pop
inc
addl
push
hlt
cmp
mov
mov
sar
and
and
stos
push
or
dec
mov
mov
insb
pop
mov
jnp
cmc
out
idivb
pop
pop
mov
adc
cmpsb
pop
mov
gs
push
dec
jp
rorb
cmp
sbb
jge
movsl
ljmp
ror
lea
pop
jge
lock
test
or
ret
cmp
cmc
xor
ja
mov
test
iret
cmc
sub
outsl
mov
inc
jne
inc
and
sti
mov
sub
xor
cmp
push
jno
imul
or
lahf
imul
pushf
sub
enter
cmc
sti
mov
iret
sarl
xor
rcr
js
push
ret
aas
fiadds
sub
pop
je
addr16
ficoml
cmpsl
movsb
icebp
dec
xchg
or
idiv
add
jb
jo
je
ret
jb
push
ficoml
sbbb
inc
xlat
in
lods
stos
mov
pop
es
ljmp
dec
insb
adc
dec
sahf
ds
pop
and
fdivl
mov
lea
negb
fbld
clc
shrb
insb
mov
sub
rorb
call
imul
imul
inc
and
sbb
pop
mov
jmp
outsl
stos
stc
out
mov
xor
dec
and
addl
inc
cmp
loop
je
xlat
ljmp
or
cmp
xchg
push
loop
shll
or
dec
loope
sub
fiadds
lods
jb
cmp
inc
adc
addb
mov
fsubs
xorb
popf
dec
dec
and
add
add
push
inc
fbstp
mov
pop
dec
loope
jo
roll
js
ds
sbb
shrl
mov
cmp
imul
lds
pop
jns
dec
insl
rol
add
and
cmpsb
dec
icebp
loope
mov
shll
and
rorl
jle
inc
and
cmpsb
push
mov
sub
loop
outsl
push
loop
add
or
cmp
add
add
cmp
into
mov
loope
pop
es
push
in
icebp
out
stos
mov
mov
and
xlat
jmp
ficompl
sub
notl
aad
jns
jle
popa
test
je
sti
shl
in
push
cld
ds
ficoms
mov
jmp
mov
mov
mov
repz
and
pop
jae
je
cmp
xchg
ret
pop
sti
or
push
lea
cmpsl
leave
cmp
std
cmpsl
or
jb
cmp
sti
into
lret
cli
cmp
hlt
mov
or
push
int3
cmp
sbb
push
es
push
int
sti
sarb
and
pop
sbb
sub
inc
pop
mov
imul
cmp
in
arpl
mov
leave
and
mov
addr16
les
jmp
stc
jmp
sbb
push
add
sbb
mov
les
pop
dec
gs
xor
or
sahf
or
mov
sub
adc
out
rcrl
aas
xchg
cli
pop
xlat
rcll
inc
call
pusha
scas
movsb
in
ja
imul
loop
lret
out
loop
jae
xchg
cmp
stc
sub
push
ret
gs
mov
and
pop
nop
sub
pop
mov
shld
and
mov
imul
add
loope
arpl
and
sub
stc
mov
pop
movsb
dec
jno
pop
adc
cld
daa
loopne
jp
leave
cmp
ljmp
enter
pop
and
mov
imulb
mov
cld
clc
jmp
fwait
and
xor
ret
imul
test
jecxz
sbb
scas
mov
iret
push
shrb
jecxz
cmp
je
mov
aas
dec
sub
dec
sub
je
xor
sub
pop
push
xor
or
popl
adc
or
pop
xor
mov
fnsave
cmpb
xchg
roll
ss
lea
dec
add
mov
in
and
in
push
mov
adc
sub
push
cmp
pushf
push
in
pop
fcmovnb
mov
ret
add
adc
in
mov
adc
or
lds
int3
neg
cmpsb
cmp
mov
into
pop
aam
shll
push
cmp
push
jge
sbb
loope
das
cmp
sbb
mov
hlt
adc
sbb
mov
add
xchg
cld
mov
or
mov
call
cmc
jbe
fldz
movsl
mov
rorb
icebp
and
inc
jg
imul
sub
test
imul
jg
ficomps
scas
lds
mov
aas
sub
mov
add
pop
add
outsl
sub
pop
out
push
or
inc
pop
or
adc
mov
lahf
inc
scas
nop
fcmovnu
dec
dec
jnp
xor
fildll
push
xchg
aas
divl
fdivl
gs
insb
pop
scas
cmpsl
leave
push
xchg
and
pop
add
mov
ficoms
xor
sub
push
loop
loop
xchg
jno
imul
rorb
dec
xor
push
cltd
push
stc
jecxz
push
push
lea
sbb
adc
xchg
stos
vshufpd
stos
pusha
xchg
mov
add
shrb
fs
pop
das
stc
mov
rep
jge
test
lret
sbb
push
decb
push
lahf
mov
jne
bound
mov
ds
in
dec
dec
ret
cs
jg
faddl
cltd
rclb
xor
sbb
lods
dec
roll
mov
push
fbstp
pop
add
mov
movsl
or
inc
stos
in
add
pop
xchg
push
push
cld
int
jle
xor
cli
dec
arpl
imul
pop
pushf
ficomps
add
and
pushf
insb
scas
call
sbb
bound
pusha
test
hlt
jle
mov
and
mov
push
push
lret
cmp
pop
jge
xor
jl
or
mov
inc
bound
sbb
bound
ret
lcall
cmpsl
push
pop
aad
dec
push
loop
xorb
sbb
ja
lret
loope
pop
stos
dec
mov
mov
add
dec
shlb
lods
mov
sbb
movl
jno
fwait
sbb
gs
repnz
sbb
je
cmp
pop
cmpsl
bound
add
jb
int
seto
movsb
cltd
sti
fists
jae
into
push
test
cs
data16
or
sub
dec
loop
xchg
in
aam
sbbl
bound
ljmp
mov
mov
cltd
mov
jno
push
testb
in
nop
inc
jmp
sub
fsts
out
inc
dec
jp
dec
cwtl
jp
movl
mov
push
js
fldt
fadd
fucompp
nop
or
jae
test
mov
pop
clc
in
and
jle
rcrb
xchg
or
dec
daa
aaa
mov
push
mov
testb
lds
stos
mov
xchg
xchg
cmc
adc
test
and
dec
inc
sub
cmp
cmp
out
mov
fistl
pop
nop
int
dec
rorb
fldenv
pushf
lcall
push
sbb
mov
ret
fimull
or
sub
leave
pop
mov
mov
fidivs
xor
pop
pop
xor
push
pop
cmp
dec
jae
aad
jne
lret
les
cmp
sub
and
xor
adc
mov
sub
mov
xchg
enter
push
jo
xchg
insl
int
inc
fdivrl
scas
cmpsb
out
pop
mov
push
and
xchg
sbbl
jae
addr16
insb
stc
mov
scas
iret
dec
push
mov
rol
bound
push
add
dec
or
inc
jns
add
loopne
jmp
lret
dec
pop
lea
xchg
leave
lds
sub
into
cmp
js
rep
dec
fidivrs
dec
inc
add
test
inc
sub
push
mov
sub
sahf
pop
pop
dec
add
fs
fisubrl
mov
adc
movsl
and
push
addb
pusha
xchg
add
sti
add
push
int3
add
out
rorb
mov
int3
lcall
das
jp
lock
mov
sbb
dec
rcr
dec
inc
insl
fnstcw
mov
fdivrs
cltd
fidivrl
subl
es
sub
adc
xor
cwtl
das
xchg
mov
fwait
mov
inc
push
cmp
rolb
add
fs
pop
pop
sub
push
xchg
cmpsl
addl
data16
fs
xor
dec
jb
cmp
sbb
movsl
outsb
pusha
hlt
inc
cltd
push
mov
xor
jl
xchg
push
jmp
push
into
mov
testb
mov
pushf
inc
jle
jge
imul
pop
iret
std
in
jp
jns
or
cli
pop
icebp
sbb
iret
aaa
mov
mov
inc
insl
or
push
xor
jbe
jle
fsubrs
stos
movsl
out
mov
mov
or
sbb
inc
push
ja
jo
add
lgs
sti
inc
in
decl
negb
xchg
sub
add
xchg
loope
icebp
fdiv
out
pop
jo
fbld
or
adc
ret
lret
jo
loop
fisttps
mov
ljmp
sub
test
push
or
mov
mov
dec
jmp
mov
inc
mov
sbb
scas
xchg
mov
popf
cwtl
mov
adc
outsb
xor
sbb
jo
fcoms
cmp
mov
push
je
inc
andb
mov
xor
xor
imul
popf
insl
loop
jle
jl
ss
adc
mov
ds
cs
and
test
xor
shrb
adc
or
jge
int
pop
rolb
mov
jecxz
xchg
xchg
mov
jo
mov
mov
mov
jno
add
aas
dec
mov
jbe,pn
xor
pushf
shll
mov
loope
adc
xchg
push
lcall
lock
mov
mov
stc
or
cli
fs
addb
test
ja
cmp
xor
cmp
push
mov
mov
stos
push
int
fmul
mov
and
pop
mov
lds
out
inc
lea
sbb
cmp
addr16
addr16
fidivs
les
pop
sub
pop
inc
jno
in
push
mov
pop
mov
mov
and
mov
mov
cmp
adc
jns
repnz
adc
xlat
mov
icebp
dec
pop
dec
icebp
mov
das
fmul
push
cmc
popa
xchg
xchg
sbb
xorl
lods
jae
in
push
repz
rcrl
fwait
pop
pop
sbb
xchg
or
jge
loopne
and
fnsave
dec
mov
daa
jb
subb
int3
into
dec
pop
mov
cld
xor
icebp
test
es
mov
lcall
xchg
rorb
jno
inc
mov
dec
scas
mov
rcrb
cmc
mov
fnstcw
stos
stc
push
das
sti
shr
mov
cltd
imul
cmp
test
test
dec
test
sub
insb
dec
out
mov
xchg
std
outsb
out
sbb
mov
xchg
lcall
test
fdiv
out
sbb
lret
or
mov
mov
push
or
lcall
call
out
iret
orl
lret
push
fdivrs
and
mov
mov
les
sub
jno
lret
lods
das
push
cld
jp
aad
incb
repnz
popf
pop
mov
jmp
rorb
lods
push
daa
aaa
popf
jmp
cltd
dec
mov
orb
sub
xor
les
cwtl
cmpsl
sbb
cmp
jp
xor
gs
jp
and
pop
movsb
scas
ficoms
inc
popf
sahf
int
int3
js
adcl
inc
cld
cwtl
sbb
adc
into
in
hlt
popa
fstpt
inc
mov
mov
mov
sbb
mov
pop
sbb
insl
pop
flds
sbb
xchg
dec
daa
cli
lods
stos
dec
test
jo
pop
pusha
push
dec
push
cmp
inc
aas
mov
repz
std
mov
lods
jae
adc
pop
jle
or
xor
mul
in
sbb
jno
shll
sub
scas
ficoml
out
shrb
and
movsl
in
divl
sbb
orb
add
pop
jae
mov
mov
adc
mov
and
add
into
dec
inc
mov
jecxz
xchg
pop
mov
and
adc
xor
outsl
loopne
outsl
cwtl
xchg
shrb
add
fucomip
jmp
cmp
shrl
add
or
outsl
add
dec
xor
xor
ret
dec
enter
jge
push
push
fwait
xchg
dec
popa
xchg
jle
mov
push
into
jne
aas
popa
dec
mov
mov
rcl
xchg
and
inc
sub
lcall
cmp
lsl
jg
popf
push
pop
fs
mov
lea
sbb
or
das
xchg
or
add
ret
push
mov
cmp
mov
xlat
in
fldl
push
nopl
stos
or
ljmp
jo
test
shrl
in
movsl
inc
and
or
jns
lds
xlat
xchg
fdivrs
push
imul
fstl
add
jo
mov
loope
lds
inc
mov
fldl
data16
out
inc
dec
sub
dec
cmp
mov
aaa
sbb
sti
push
xchg
xchg
mov
filds
pop
dec
and
sub
xor
fstpl
sarb
iret
ljmp
icebp
jl
mov
icebp
fsubp
ja
enter
loope
lcall
push
cmp
xchg
stos
pop
out
inc
inc
andl
cmp
xchg
add
aaa
or
push
jp
in
pop
xorb
jl
pop
mov
jbe
pop
clc
mov
pusha
cmc
out
jae
jno
sub
push
movsb
mov
pop
pop
or
std
pusha
push
movsl
inc
dec
test
inc
ja
jns
js
pop
nop
push
inc
cmp
jmp
scas
addr16
scas
jge
adc
fmulp
hlt
mov
sbb
data16
mov
dec
inc
xor
in
aam
and
mov
iret
das
call
aad
test
dec
dec
xlat
add
fsubrp
arpl
mov
mov
cmc
cmp
or
in
jae
int3
sbb
push
es
jno
pusha
xchg
stc
push
xlat
add
outsl
je
jb
inc
jmp
enter
daa
dec
jno
push
mov
addr16
rcrb
ret
scas
mov
inc
pop
jne
sbb
loope
lret
gs
sub
fcompl
arpl
cwtl
bound
mov
scas
popf
shll
lret
stos
push
nop
sub
mov
pushf
jae
mov
jnp
cltd
or
fs
cld
cmp
adc
scas
mov
sub
jg
mov
jb
and
popa
and
adc
lock
xor
popa
in
imul
mov
std
cmp
push
mov
gs
out
or
and
rcrl
sbb
nop
ss
sbb
xchg
jle
in
xor
mov
jo
cld
mov
push
test
and
int3
out
xchg
fwait
sub
out
cwtl
cmp
mov
lds
ss
mov
jb
test
data16
mov
inc
sbb
neg
flds
mov
adc
mov
cmp
int3
add
dec
arpl
cmp
andl
sbb
pop
int3
sub
fsubrp
cwtl
icebp
je
push
push
popf
gs
jg
inc
xchg
dec
xchg
push
push
xchg
dec
loopne
ud1
add
dec
xchg
lods
adc
xor
cmp
fisttps
out
jp
pop
lds
xchg
or
cltd
pushl
xor
insb
nop
push
mov
and
imul
xor
adc
movsl
dec
or
push
or
sub
sbb
mulb
loope
lcall
mov
out
adc
std
sub
jge
in
mov
test
jl
xchg
or
insl
fisubrs
jl
xor
jl
sub
lods
or
call
and
loop
xchg
xchg
aas
dec
test
out
push
in
movsl
lret
cmp
insb
loope
fiadds
xor
aad
xchg
xor
sbb
movsb
fcompl
xchg
xchg
and
or
xor
fcoml
adc
dec
jg
jle
push
mov
sbb
add
fistl
xchg
movsl
push
add
xchg
int3
pop
jl
mov
mov
lret
cltd
fcmovne
stos
cld
mov
cmpsb
dec
push
jecxz
fcmove
lea
test
cli
movb
test
out
jle
and
mov
arpl
lods
lahf
repnz
mov
and
ficoms
out
or
sbb
add
shrb
loopne
das
mov
jo
cli
push
aaa
xchg
lahf
mov
sub
jbe
push
stos
lahf
mov
mov
fdivr
and
pusha
sub
test
fdivr
pusha
repnz
push
in
in
int
xchg
inc
cs
int3
sub
test
hlt
add
test
daa
dec
das
mov
cmp
cld
xchg
scas
repz
xchg
jnp
push
sub
or
mov
xchg
push
into
push
push
sub
push
loope
lcall
outsb
mov
push
and
mov
out
xor
les
mov
jno
add
mov
insb
ficomps
pop
cmpsb
inc
fwait
xor
in
in
mov
pop
jl
aad
mov
cltd
xor
lret
dec
ss
jns
ret
inc
mov
cwtl
pusha
inc
fimuls
push
in
and
stos
iret
pslld
out
jmp
push
stos
push
fcoml
inc
pop
ljmp
cmpsb
push
je
xchg
gs
addb
mov
mov
ret
add
jle
xlat
inc
or
cmp
jl
sbb
jo
inc
dec
mull
jnp
xor
data16
mov
xchg
ds
dec
or
pop
ficoms
aaa
shrb
or
fisttpll
sub
pop
adc
mov
iret
xor
mov
pop
sbb
mov
jno
pop
add
rcrb
mov
aad
rcrb
out
mov
out
push
inc
sub
jge
test
js
enter
mov
add
lcall
shrb
lret
rolb
mov
cmp
dec
sbb
jp
jb
jae
xor
stos
jl
inc
rolb
cmp
add
insb
adcb
mov
lods
ret
fwait
mov
sub
pop
test
scas
sbb
mov
loope
in
cmp
or
push
ja
std
push
mov
and
jns
mov
sub
dec
mov
jp
insl
lret
jbe
out
add
pop
mov
movsb
loopne
mov
sub
repnz
xchg
push
adc
stos
insb
test
dec
mov
mov
push
mov
inc
test
push
dec
lret
testl
inc
xchg
loope
dec
psubusw
pop
fwait
cmp
mov
ds
int3
mov
or
dec
sbbl
mov
cli
jg
imul
scas
outsl
mov
pop
push
dec
cmpsb
mov
pop
inc
fmuls
mov
cmp
jbe
iret
mov
fld
test
xor
adc
and
add
out
jge
mov
fdivrl
pop
in
pop
rcr
jnp
icebp
test
xor
and
sti
cltd
je
inc
repz
jo
popa
push
outsl
sbb
cmpl
xchg
dec
scas
dec
out
outsl
xchg
mov
lcall
cmp
test
pop
jp
pushf
mov
mov
jl
cmp
dec
popf
out
scas
test
ror
data16
dec
mov
mov
loop
xchg
xchg
out
addr16
push
nop
sub
roll
sub
ss
push
stc
push
inc
sbb
sub
aas
xchg
xchg
dec
or
aaa
scas
cmpsb
cmp
pushl
add
add
mov
xchg
outsb
cmpsl
cld
daa
and
daa
push
adcb
jne
aam
cmp
inc
addr16
sahf
xchg
add
mov
inc
stos
shll
inc
xor
jmp
mov
xchg
imul
push
sbb
dec
scas
scas
ret
shll
cmp
imul
bound
cmc
xchg
cmp
dec
or
push
cld
iret
ss
xlat
mov
pushf
ret
andl
pusha
lea
lcall
push
int
pop
idivl
push
repz
push
push
mov
pop
sbb
xchg
aam
pushf
mov
xor
rcll
and
stos
push
mov
mov
xchg
pop
stos
push
enter
je
mov
adc
and
mov
sub
or
loop
jge
pop
es
ficompl
push
aas
pusha
xor
fildll
scas
xchg
lea
xchg
dec
lret
data16
mov
sbbb
jne
aaa
push
aam
or
add
scas
jae
sub
cmp
sub
orb
clc
shl
je
pop
in
cld
int3
test
mov
test
adc
ret
arpl
mov
out
add
sub
mov
in
sub
pop
xor
stos
inc
ds
or
fs
loope
push
cli
push
js
jge
testb
sub
add
cmp
jnp
jmp
xchg
shll
popa
cmp
cwtl
push
in
sub
repz
sub
sub
shrb
call
push
inc
test
stos
out
jns
mov
imul
mov
daa
sub
popf
and
adc
add
sbb
mov
adc
cmpsb
adc
xor
pop
add
in
enter
cwtl
push
jae
or
or
fs
pop
mov
pop
cmp
stc
pop
lret
mov
ljmp
cmp
popf
nop
and
iret
cmp
pop
lods
xchg
stc
mov
sbb
outsl
clc
test
xchg
fdivr
shlb
xchg
xchg
clc
arpl
lods
arpl
leave
dec
addr16
cmc
pop
inc
fdivrs
jmp
xor
and
mov
aad
pop
shll
ss
and
andb
dec
ss
into
shrb
pop
inc
rolb
cmp
inc
or
call
cli
cwtl
jnp
cmpsb
call
adc
movsb
sub
ficompl
jmp
enter
into
fsubrs
cmc
mov
fidivs
dec
mov
int3
mov
mov
pop
pop
ror
inc
inc
imul
jmp
sbb
call
call
sahf
clc
pop
pop
add
data16
dec
imul
and
xchg
add
pop
les
rorb
mov
xchg
stos
mov
cmp
mov
jl
fnstenv
and
leave
jbe
jmp
outsb
dec
jg
enter
in
dec
sahf
jg,pn
fistl
cmpsb
sub
dec
scas
lret
inc
ljmp
fwait
clc
adc
inc
mov
adc
push
fistl
and
xchg
fcoms
sub
fdivl
sbb
sbb
or
outsl
into
dec
adc
fidivs
dec
xlat
xchg
pop
jge
repnz
cmp
push
subb
mov
dec
popa
lret
jb
xchg
into
ss
pop
cmp
outsb
jnp
scas
sti
lds
fbld
xor
pop
pusha
ret
scas
pop
loope
mov
fisttpll
pop
adc
lods
aam
mov
out
inc
fistps
pop
pop
in
adc
pop
ss
add
dec
pusha
pop
adc
mov
sub
iret
push
mov
aam
mov
xchg
dec
xor
stos
push
xor
loop
lods
pop
sub
dec
out
popa
sub
test
mov
das
stos
jne
test
pop
mov
adc
and
xor
push
sti
sub
int3
cmpsl
in
xor
outsb
push
pop
and
push
repnz
sbb
adc
add
pop
sub
iret
mov
and
xor
sbb
enter
popl
inc
jne
pop
outsl
movsb
daa
test
fcoms
imul
adc
mov
out
pop
lcall
and
cmp
rcl
cmp
divb
int3
shll
aad
out
or
fsubrl
mov
mov
nop
push
and
sub
adc
sbb
mov
fwait
mov
pop
xor
xor
sahf
xor
sti
lcall
test
lret
stos
enter
adc
loope
pop
push
adc
mov
jnp
push
jnp
pop
lods
cmp
gs
push
and
adc
pusha
sbb
sbb
inc
jmp
mov
orl
lret
inc
adc
lret
cmp
xlat
add
add
cmp
dec
inc
jl
rcl
sbb
test
mov
pop
jge
movsb
lock
iret
push
adc
xchg
mov
push
pop
fistpll
mov
movsb
ret
dec
mov
xor
test
sti
rcrb
sar
pop
inc
or
mov
mov
inc
test
lods
jmp
mov
test
add
inc
pop
ja
mov
mov
fidivl
lret
jecxz
mov
xor
jno
xchg
ss
dec
jns
inc
rclb
aam
inc
nop
stos
popa
cli
aaa
xchg
divb
rcrl
ret
decb
loop
cltd
loop
push
into
add
out
jmp
pop
xor
or
int3
adc
les
jmp
sub
jnp
pop
sarb
shlb
dec
mov
psubsb
cmp
std
dec
sbb
mov
mov
xchg
mov
push
mov
in
fwait
sub
mov
outsb
mov
pop
jne
icebp
aam
xchg
popa
cmpl
enter
aas
movsl
mov
or
lock
mov
lret
xor
pop
adc
or
cwtl
mov
adc
fidivrs
daa
jo
int
imul
rcl
adc
les
ljmp
test
pop
sbb
lods
rorb
outsl
into
mov
stos
push
xbegin
addr16
les
shlb
mov
jns
nop
out
cltd
dec
in
adc
push
int
push
dec
jmp
out
pop
ds
hlt
loope
push
std
push
pusha
lds
stos
mov
test
hlt
mov
jge
in
ljmp
pop
jg
pushf
push
pushf
std
lahf
push
jne
push
dec
in
xor
xchg
mov
pop
xchg
hlt
jnp
sbb
push
inc
test
lea
in
out
int3
loop
pop
fwait
add
outsl
in
fists
xor
arpl
and
loope
dec
and
outsl
adc
clc
daa
cld
fadd
pusha
clc
mov
inc
xchg
add
leave
nop
ret
mov
out
jle
pop
les
or
roll
ja
in
pop
xchg
xchg
xor
mov
lret
sbbl
fadd
push
addr16
aas
mov
ret
mov
icebp
inc
in
pushf
hlt
cs
fdiv
xorb
push
mov
popf
aam
dec
movsl
sbb
jns
add
sarb
and
hlt
lcall
push
add
std
mov
clc
xchg
shr
std
addr16
xchg
or
imul
sbb
imul
sbb
pushf
repnz
rcll
jge
mov
xor
or
and
int
testl
jp
sahf
dec
ja
out
cmp
adc
movsb
popf
in
imul
lods
jp
inc
cmp
cltd
fisubrl
and
adc
xchg
fldenv
jno
jno
popf
add
mov
adc
and
jg
in
cmp
fcmovu
aas
jg
xor
pop
imul
mov
push
mov
mov
loope
or
lds
shl
fcmovnu
int3
pop
xchg
jge
xchg
dec
mov
mov
scas
pop
sub
sbb
add
cmc
daa
test
ds
add
loope
or
pop
in
xchg
decb
imul
mov
loope
mov
repnz
mov
add
push
mov
test
ret
call
sti
jle
sub
xchg
inc
add
xchg
push
dec
addr16
into
repz
adc
mov
cmpsb
fisubrl
fldcw
test
push
in
jae
pusha
out
mov
ds
and
and
enter
outsb
movsb
mov
pop
inc
out
test
and
push
iret
ljmp
mov
add
mov
stos
xor
arpl
sbb
inc
xchg
push
lods
outsl
jecxz
push
gs
pop
int
or
sti
daa
jno
in
jne
pop
or
cmpsl
sub
popf
mov
cmpsb
push
mulb
or
dec
pop
and
jle
mov
xor
sbb
inc
adc
jg
std
push
jmp
mov
mov
add
mov
ss
lcall
ljmp
out
out
adc
insb
test
fisttpl
fadds
cmp
imul
scas
cmpsl
mov
and
mov
or
int3
pop
fwait
gs
adc
xor
andb
daa
in
cmp
adc
push
fsub
test
loopne
push
push
mov
push
rclb
sub
fwait
mov
sbb
pop
out
push
sbb
insb
pop
aas
sub
mulb
xlat
fistps
lahf
adc
dec
jb
jg
adc
nop
out
sbb
iret
jecxz
jns
stos
and
fiaddl
pop
sub
cmp
add
jmp
aaa
jb
dec
mov
movl
xchg
mov
and
cmpb
jae
xchg
cmp
jg
pop
enter
in
loop
mov
push
ss
lods
imul
popa
xor
ss
jl
js
xchg
adc
xor
jl
cli
cli
pushf
push
add
mov
je
sarl
xchg
adcb
pop
inc
sub
cmp
push
push
loope
xchg
scas
test
inc
call
add
popf
in
sbb
adc
mov
lds
sbb
popa
es
cmp
dec
adc
jl
pop
cli
orb
out
fs
popa
dec
aas
test
hlt
pop
mov
xor
fisttpll
ret
test
xor
call
out
or
pop
fisttpl
pop
mov
in
je
jo
sub
lods
int3
test
jno
add
movsl
jecxz
fwait
arpl
sbb
add
ret
and
pop
mov
das
out
and
and
push
dec
inc
xchg
aaa
ret
jbe
mov
push
xchg
and
inc
fcoms
dec
jb
dec
lea
les
xor
mov
xor
or
or
enter
or
mov
pop
cmp
xchg
in
pop
dec
sub
dec
xchg
add
scas
lcall
jnp
hlt
jl
decl
mov
inc
insb
dec
mov
xor
mov
mov
push
stc
push
lock
adc
sbbb
push
xor
pop
in
sti
in
nop
xchg
and
loopne
sub
push
hlt
sbb
inc
xlat
push
scas
lcall
xchg
xor
sub
in
cmp
sarl
mov
sub
dec
mov
lcall
rolb
or
jb
int
fsubl
mov
and
or
sbb
subl
inc
xor
mov
or
and
jnp
cmpb
xchg
icebp
outsl
repz
addr16
inc
notb
sub
cwtl
stc
call
cmp
jne
test
aas
pop
mov
mov
xchg
out
ds
out
test
adc
jnp
pop
repz
mov
sbb
and
iret
test
sbb
cmp
jnp
lock
push
dec
push
push
jmp
es
pop
push
test
les
adc
movsl
into
sub
ss
sub
jns
adc
sub
shrb
aas
pop
dec
add
stc
ret
lea
jae
mov
push
shrb
ljmp
sub
aas
rorb
aam
add
dec
in
es
sbb
pop
push
int3
dec
mov
dec
pushf
imul
cli
leave
mov
or
loop
out
dec
mov
jno
mov
ret
loope
add
ja
cmp
cmpsb
sub
inc
mov
add
pop
imul
call
clc
data16
fcmovb
or
jp
jmp
icebp
stos
inc
and
sub
pop
movsl
xchg
aaa
cmp
cmp
xchg
adc
push
dec
xor
adc
sub
mov
adcl
js
repz
jbe
fucomip
in
scas
pop
cmp
jp
add
mov
popa
icebp
in
test
insb
fstpl
mov
adc
in
jmp
out
repnz
movsb
dec
push
int3
add
sub
inc
jbe
stos
push
mov
mov
pop
jmp
add
pop
mov
cli
jle
in
shll
ret
mov
dec
mov
repnz
or
add
je
sub
fdivrl
call
add
sub
int3
das
adc
mov
iret
push
inc
rcr
xorb
in
daa
sub
aaa
test
push
idivl
test
andb
push
inc
push
ret
cli
cmp
sbb
sbb
adc
sub
pop
pdep
imul
adc
mov
out
jae
insb
push
adc
dec
xchg
lods
jo
icebp
lods
mov
cmpl
shlb
add
inc
rclb
sub
add
repnz
dec
lods
adc
repnz
cmp
shlb
cltd
int
pop
pop
scas
cmp
iret
test
add
loop
stos
and
mov
pop
and
xchg
mov
imul
and
push
sub
xor
btc
in
xor
sub
inc
in
fisttps
clc
rcrb
in
adc
lods
shlb
sbb
inc
lea
push
repnz
test
ret
aam
pop
cmp
sarl
imul
mov
fwait
jl
jl
xor
mov
int
xor
cmp
push
lcall
lahf
cmpsb
ds
push
stc
popf
mov
out
xor
fbld
cli
dec
xor
insl
ja
inc
popa
out
cltd
xchg
cmp
dec
sbb
adc
mov
pop
push
mov
inc
enter
adc
mov
cmp
dec
xlat
movsl
int3
rol
pandn
and
ret
inc
adc
xchg
push
fistpll
clc
orb
xchg
adc
adc
adc
xor
fistpll
xchg
mov
fcoms
sbb
cmc
ficoml
mov
enter
sbb
popf
test
pushf
movsb
mov
insl
mov
fimuls
lea
sub
cld
dec
add
sbb
outsl
sub
cwtl
pushf
imul
lcall
imul
faddl
jae
repnz
and
scas
inc
sub
xchg
adc
jmp
aam
cmp
xchg
mulb
inc
mov
jecxz
push
call
push
mov
iret
lods
pop
enter
and
inc
mov
add
sub
mov
jg
cmp
xchg
or
andl
jo
xchg
dec
test
mov
xchg
out
cs
shlb
push
inc
sub
imul
inc
test
mov
push
inc
mov
mov
cmp
psllw
int
inc
or
push
mov
dec
hlt
mov
mov
cmp
mov
in
add
or
ret
adc
fiadds
adc
ret
in
or
or
sbbb
scas
sub
xor
filds
lret
shrl
mov
mov
and
and
jnp
cmp
cmpsb
jmp
add
sbb
pusha
in
das
adc
int
rolb
pop
fistl
jns
mov
xchg
jecxz
xlat
dec
lret
push
jne
jne
cld
repz
sub
mov
push
mov
cmp
gs
fisubl
ja
xchg
ja
sub
inc
aad
cli
das
clc
push
movsl
mov
cmp
push
xor
nop
fldenv
jge
sub
sbb
adc
nop
cmp
das
adc
mov
daa
stc
adc
insl
in
sub
mov
mov
xlat
lds
push
cwtl
xor
jge
push
sahf
mov
pop
inc
push
mov
loop
cli
sub
xor
pop
push
pop
lret
inc
stc
add
jne
sbb
dec
mov
int
add
rcll
pop
dec
push
cmp
adc
jcxz
dec
cld
dec
test
lret
adcl
aaa
push
mov
inc
andl
test
into
scas
jns
lahf
mov
inc
sahf
mov
inc
push
xchg
xor
cli
stc
add
add
out
mov
arpl
addr16
mov
pop
push
mov
mov
pop
loopne
and
sub
dec
xor
push
add
mov
faddl
jl
mov
cmc
and
inc
mov
push
dec
les
xor
out
clc
or
shrb
mov
mov
js
std
mov
outsb
mov
dec
xor
mov
push
shl
add
adc
sbb
cli
iret
pushf
mov
or
scas
mov
incb
imul
repz
outsl
movsl
lods
inc
mov
jmp
xor
repnz
and
mov
pusha
gs
adc
xchg
sbb
dec
clc
fwait
rcrl
mov
pop
das
pop
push
nop
xchg
jmp
pop
hlt
inc
jmp
sbb
aas
icebp
xchg
and
mov
xchg
xchg
mov
cmc
mov
mov
sbb
int
ret
cmpsl
xor
jo
dec
data16
outsb
adc
mov
repnz
jmp
xlat
jmp
mov
add
or
push
xor
or
lock
enter
pop
mov
cmpsl
adc
and
and
bound
jmp
sbb
xchg
add
cmpsl
js
jmp
and
int
ss
add
mov
and
jbe
push
lahf
test
pop
jb
popa
sub
pop
into
push
cld
out
sbb
jbe
ffree
push
setns
push
mov
out
pop
pop
sub
mov
adc
dec
pop
xor
or
sub
scas
mov
lock
adc
lds
imul
inc
cwtl
push
shll
sub
mov
fidivs
cmp
loopne
roll
test
jbe
xchg
lock
dec
mov
jae
paddq
add
adc
push
sarb
xorb
outsb
cmpsl
jnp
pop
mov
negb
push
mov
push
sahf
in
xor
imul
pop
rorb
push
xchg
mov
in
in
sbbl
es
jge
pop
mov
clc
or
or
jnp
add
lahf
mov
add
pop
pop
movsb
nop
out
inc
or
push
sub
adc
lods
addr16
pop
pop
add
rcrl
outsb
xlat
scas
aaa
insl
jne
cmp
pop
daa
inc
pop
mov
and
test
packsswb
adc
shl
stos
movsb
in
rolb
adc
push
add
int3
insb
or
push
rol
lahf
cmp
cmc
push
lea
xchg
fdivrp
mov
mov
sub
mov
cmp
mov
js
bound
bound
mov
sahf
lods
xchg
scas
fcmovu
push
in
stos
shl
notl
inc
ja
add
mov
xchg
xchg
sub
cmp
out
pop
stos
jnp
cwtl
cmp
rolb
lret
pop
jae
mov
mulb
add
sbb
pushf
in
lret
adc
mov
in
out
ljmp
cmp
jo
mov
add
mov
repnz
pusha
xchg
sub
gs
mov
inc
popf
and
mov
xchg
fidivrl
jnp
shr
stos
jae
fsts
in
pop
push
mov
add
cmc
sub
and
dec
adc
test
shrb
and
into
icebp
sub
xor
testb
mov
xchg
hlt
xor
jg
dec
lods
cmc
daa
mov
mov
sbb
icebp
data16
movq
dec
cmp
negb
mov
mov
outsl
inc
fldt
pop
mov
mov
inc
loope
add
gs
add
imul
jmp
ret
push
push
repnz
mov
fdivs
loopne
data16
pop
outsb
pusha
in
stos
xor
in
xchg
addr16
mov
and
push
jmp
adc
call
adc
cmpsl
sub
jns
or
fs
repz
mov
xor
jmp
aaa
lods
int3
loope
inc
aam
in
sbb
xchg
pminsw
push
fstps
out
dec
je
adc
cmc
mov
and
mov
cmpsb
dec
orl
shlb
call
mov
xor
inc
cwtl
xchg
gs
into
lahf
test
jo
jmp
ret
cmp
insl
mul
mov
cwtl
pusha
xor
pop
jge
inc
xchg
mov
pusha
push
lahf
scas
mov
cmpsb
sub
out
add
xchg
push
div
in
mov
ror
cli
adc
scas
sub
in
sub
inc
mov
xlat
jae
xchg
fwait
andl
cli
jmp
sbb
and
xchg
mov
jbe
push
test
stos
mov
ret
cld
push
addr16
nop
pop
fldl
popa
push
fcmovnu
ljmp
jl
cmp
add
sub
lods
pushf
adc
push
sub
jo
add
mov
mov
push
insb
mov
cmpsb
andl
aas
lret
sbb
sbb
mov
sbb
outsb
xchg
sbb
repz
repnz
mov
stos
mov
incb
frstor
mov
cmp
ficomps
clc
andl
fnstenv
subl
xchg
dec
xchg
lcall
pop
or
icebp
cmp
mov
cmc
test
inc
lcall
push
jecxz
int3
push
push
pop
or
mov
xchg
idivb
stc
xchg
cmp
ret
in
pop
cmpsb
lcall
mov
mov
in
adc
popf
dec
dec
jns
mov
mov
sbb
push
out
and
roll
and
and
pop
push
add
xor
shr
sarb
std
cwtl
sub
outsl
fdiv
fs
movsl
mov
or
adc
jae
pop
subl
dec
lret
in
in
aad
movsl
leave
es
out
ror
pop
jecxz
adc
jl
mulb
add
dec
jns
repnz
in
sub
scas
aas
inc
jle
jle
mov
aas
adc
xchg
cmp
inc
mov
addr16
mov
mov
loope
add
mov
xor
lea
dec
bound
insl
pusha
and
cltd
sahf
mov
testl
fwait
mov
pop
push
jmp
out
xor
stc
push
dec
pop
mov
pusha
out
pop
xchg
mov
and
jl
and
dec
bound
pusha
jmp
mov
outsb
pushf
push
leave
js
fld
jle
sbb
push
arpl
xor
xchg
outsb
lcall
dec
test
mov
push
mov
jnp
cmp
inc
ret
btc
sarb
cmp
popa
cmp
adc
add
and
cmc
arpl
incl
std
adc
test
aas
push
cmp
xchg
lods
and
les
inc
mov
test
mov
add
gs
into
mov
scas
push
mov
adc
xchg
rolb
popf
outsl
ret
cmp
mov
into
fwait
lahf
mov
insl
lea
dec
jmp
add
jl
dec
rorl
push
cli
adc
js
lret
stos
mov
enter
imul
push
out
bnd
arpl
lret
adc
xchg
leave
dec
fistl
call
sub
aas
mov
addr16
sti
pop
jae
push
daa
or
div
sahf
push
push
outsl
ljmp
and
shlb
aas
les
xchg
cmpb
loope
jle
loope
cwtl
mov
out
out
scas
xor
arpl
mov
bound
neg
shrl
cmp
sbb
sbb
cmp
dec
cmpsl
in
xchg
imul
rorl
outsl
iret
mov
and
aas
fsubrl
jae
mov
jne
pusha
jmp
xchg
xor
sub
cmp
push
xor
mov
cmp
jp
ss
sbb
dec
mov
sub
pop
mov
cmp
mov
dec
xor
pushf
bound
push
jno
loop
sti
loope
test
loop
out
push
ja
mov
jg
testb
cs
mov
pusha
dec
and
arpl
test
pop
ds
fldenv
jb
sub
and
sub
jg
mov
and
out
rcl
mov
inc
fldenv
sub
xchg
mov
jge
mov
mov
in
pushf
sbb
mov
lcall
into
rcrl
adc
xor
mov
dec
push
jge
dec
add
xchg
jg
mov
lcall
clc
pop
push
fisubs
and
mov
jmp
or
int
xchg
inc
out
shlb
popf
sbb
test
or
aad
or
push
scas
ja
in
sbb
dec
jg
inc
xchg
xchg
call
movsb
aam
inc
jl
subb
jg
inc
test
adc
cli
gs
in
inc
insb
outsb
daa
in
mov
dec
cmp
neg
dec
mov
jecxz
mov
jns
xchg
mov
jae
mov
mov
ljmp
xchg
pop
and
adc
xor
jle
push
or
push
mov
mov
mov
cld
xor
into
sub
mov
bound
aas
rcrb
push
mov
in
inc
adc
inc
xchg
gs
mov
fidivl
push
cmp
adc
mov
add
and
xchg
das
loopne
sub
popf
movsb
rcrl
jge
xor
jge
pop
clc
jnp
jbe
gs
jo
test
pushf
adc
shlb
repz
mov
jmp
jno
repz
jae
xchg
nop
xchg
testb
adc
push
xor
fcompl
adc
dec
nop
sub
cmc
fucomip
dec
pop
mov
cs
add
adc
jo
push
xor
fists
daa
je,pn
comiss
pusha
push
mov
pop
aas
pop
push
cmp
sub
pop
mov
pop
cmpsl
xchg
dec
fucom
repz
dec
inc
xchg
add
in
inc
lock
xchg
sbb
divb
mov
imul
adc
jecxz
pop
mov
ljmp
js
inc
cmc
je
or
mov
dec
push
dec
xor
fiadds
cli
adc
push
imul
jbe
mov
or
pop
mov
movsl
or
es
xchg
popa
push
xor
and
and
dec
jb
dec
pop
vpor
adc
mov
xor
jl
mov
or
aad
or
movsb
mov
cmp
pop
jns
or
mov
je
and
mov
push
cmpsb
cmpsb
shl
mov
and
cmc
fwait
test
xchg
ja
pop
les
sbb
ljmp
xor
inc
adcl
dec
inc
incl
dec
sub
jno
jmp
sub
pop
scas
cs
add
test
sbb
push
mov
or
adc
add
dec
les
jmp
lods
adc
call
xor
mov
aad
icebp
cmpsl
adc
mov
rcl
lds
sub
cli
aas
out
and
cltd
add
mov
loope
int3
js
out
cmp
mov
pushf
addb
pusha
mov
scas
or
adc
mov
sti
fs
dec
std
fs
mov
popf
xor
aaa
pop
int
in
das
decl
mov
out
xor
imul
or
push
dec
adc
fisubs
mov
mov
icebp
push
repnz
add
and
inc
xchg
inc
shl
xchg
and
pop
lea
xchg
adc
loopne
add
sti
decl
sub
enter
aas
insl
mov
sub
sub
pop
cli
cmp
jl
fcoml
dec
lds
rorb
ss
mov
popf
mov
mov
pusha
jnp
lods
ret
and
fidivrs
int
xchg
mov
loopne
das
sarl
mov
pop
add
xchg
iret
repz
adc
repz
aas
dec
aad
test
ljmp
jno
inc
jecxz
push
adcb
push
inc
daa
out
test
push
mov
lods
shl
sbb
sub
xor
shrl
xchg
xor
leave
push
and
and
add
jge
fstpl
xorl
je
in
jp
inc
jae
xor
dec
push
aas
lret
pushf
xchg
out
into
test
verr
in
inc
icebp
stos
xlat
shrl
xor
aad
xor
sarb
fsubl
sbbl
jns
cmpb
inc
or
lock
jmp
out
movsl
cli
in
test
dec
pop
cwtl
pop
and
icebp
xchg
lcall
ljmp
fcompl
mov
rcrb
cs
adc
pusha
data16
mov
repz
je
rcrl
je
pop
pop
ror
clc
aas
push
test
test
mov
fwait
stc
or
jne
push
std
in
scas
in
add
dec
xlat
or
inc
fwait
sbb
outsb
cmp
jne
call
ret
push
push
sbb
lock
lock
mov
jno
mov
cmp
mov
cld
mov
sub
adc
push
adc
cltd
mov
fmull
pop
lcall
outsb
sub
stos
rorb
test
or
pop
mov
and
je
mov
or
mov
mov
and
aad
clc
inc
sbb
cs
fs
dec
das
sarb
sbb
fiaddl
mov
in
pusha
jae
mov
xor
sbb
fs
pop
mov
jo
adc
mov
in
push
loop
mov
jo
mov
hlt
dec
mov
mov
imulb
test
les
cmp
push
mov
sbb
cmpsl
dec
out
mov
in
nop
xchg
movsb
in
add
adc
enter
popf
cmpsl
popa
in
mov
or
repz
mov
dec
cmc
mov
inc
mov
push
orl
push
divb
out
mov
adc
aad
cwtl
mov
mov
pop
or
cmpsl
iret
lahf
sbb
xchg
pop
jecxz
test
xchg
movsl
mov
mov
xchg
mov
xchg
mov
pushf
pop
scas
ja
cs
jo
xchg
xor
cmp
or
xchg
fistpl
cmpl
iret
xor
popa
movsl
xlat
jl
jge
pop
aas
add
loop
bound
cmp
es
sbb
jns
clc
outsl
lods
mov
mov
adc
push
jecxz
outsb
das
adc
lahf
adc
sub
stos
cmp
add
addl
push
push
add
mov
xor
dec
imul
enter
adc
ljmp
scas
push
mov
stos
pop
pop
movb
insl
out
and
mov
jns
sti
mov
pop
xorb
mov
and
sub
jge
das
pop
dec
xor
pop
xor
jns
out
jg
xchg
sub
push
xchg
iret
jmp
adc
pop
mov
dec
dec
mov
add
mov
in
xor
sbb
dec
inc
fcoml
jmp
dec
repnz
loope
pusha
lea
fs
xor
sbb
xchg
pop
repnz
dec
cmpsl
pop
ret
insb
jecxz
cmp
mov
add
cmp
sahf
sbb
jno
andb
jno
leave
mov
mull
gs
test
jbe
or
mov
inc
and
mov
pop
lret
dec
in
outsl
pop
xor
mov
sub
leave
xchg
push
adc
sarb
push
pop
mov
cmp
xchg
aaa
jmp
pop
pop
int
insl
std
pop
push
or
stc
mov
nop
in
dec
mov
dec
mov
dec
mov
loope
xor
push
mov
sub
add
pushf
mov
jecxz
xchg
dec
dec
add
ss
lods
mov
stos
mov
jnp
out
xchg
mov
xor
pop
push
mov
mov
adc
rcrl
and
lds
mov
test
cltd
popf
orl
mov
lret
ja
xor
add
push
pop
xchg
fldl
xchg
es
stc
or
lds
sbb
and
int3
pop
ret
stos
pusha
or
outsl
sbb
ds
popf
jle
cmpsb
add
sbb
fwait
cmpsb
testl
mov
repnz
dec
or
or
orb
mov
js
push
inc
mov
mov
lods
das
repnz
cmpsl
in
sub
push
test
hlt
inc
pop
cmp
sbb
mov
ds
pop
jns
jle
xchg
inc
sub
stos
lods
pop
into
adc
loop
mov
pop
push
leave
imul
fsubl
jb
fwait
add
mov
lcall
mov
sub
pop
cmp
daa
mov
pop
imul
cmp
repnz
adc
cmpsb
test
sub
call
ror
fucomip
add
outsl
jnp
neg
add
inc
add
ret
mov
in
mov
out
aam
call
test
ret
sub
push
push
pop
jns
rorl
inc
mov
jmp
nop
push
pop
mov
xor
mov
pop
fstl
jb
mov
mov
faddl
imul
xchg
test
xchg
ljmp
fiaddl
xchg
lds
add
mov
pop
js
dec
mov
cmp
jns
addr16
sub
pop
dec
popf
stc
inc
xor
mov
push
mov
je
fimull
jge
jl
cs
sub
mov
mov
mov
mov
out
clc
push
imul
int3
xchg
bound
aam
out
push
imul
daa
mov
pusha
or
repnz
int3
lea
cmpsb
out
dec
dec
mov
mov
sti
mov
xchg
inc
test
repnz
push
out
push
mov
shll
in
ret
inc
sahf
pop
push
or
mov
jle
jp
cli
ja
sub
add
add
ds
lcall
les
mov
loope
testb
jmp
js
mov
cmpsb
cli
int
clc
stc
andb
sub
jmp
ja
sub
mov
jl
aam
repz
push
inc
pop
push
pop
repnz
shrl
scas
mov
cmpsb
and
fs
push
push
test
and
int3
xchg
sbb
jmp
lea
jge
pop
daa
adc
cmp
cmp
pushf
xchg
sti
inc
imul
jno
jp
clc
subb
mov
mov
mov
testl
dec
mov
mov
sbb
stos
mov
mov
aaa
jnp
mov
aas
movsl
inc
xchg
xchg
sub
xlat
fildll
sub
rorl
mov
int
cs
loop
mov
mov
xor
dec
out
pop
sarb
dec
imul
mov
rclb
jmp
push
inc
in
std
mov
jo
je
inc
out
jo
in
rol
mov
fdivr
ljmp
ror
dec
sub
push
jmp
xor
and
cmpsl
iret
sar
pop
sub
xchg
movsb
ja
movsl
fwait
sub
pushf
xor
insb
sub
daa
add
jne
lods
pop
mov
cmp
clc
jne
andl
mov
insb
mov
xor
loopnew
mov
xor
pop
adc
xor
out
repz
stos
and
mov
lock
mov
cmpsl
rcl
sar
mov
jno
test
cs
push
mov
xor
dec
shl
or
fiaddl
bound
leave
xchg
je
arpl
fisttpll
jno
mov
in
pop
inc
dec
out
insb
insl
cmpsb
sub
or
xor
mov
pushf
sbb
movsl
movsl
jle
aad
lret
dec
mov
dec
jge
mov
mov
je
dec
pop
shrb
pop
xorl
mov
icebp
sub
mov
in
scas
movb
pop
movsl
mov
ja
jge
adc
sub
dec
cmp
mov
sub
stos
mov
lahf
stos
xchg
or
jnp
stc
psrlq
or
push
divb
inc
popf
push
and
push
mov
jns
cmp
add
inc
cmp
sbb
xchg
sub
fsts
or
mov
lock
dec
inc
push
mov
sub
lds
cld
mov
adc
adc
outsb
dec
fildl
test
aaa
pushl
ss
ds
and
sbb
int
and
mov
sbb
jmp
loop
pop
mov
test
dec
push
cmp
sbb
pop
pop
push
pusha
lea
fcmovne
repz
jl
inc
pop
mov
data16
aas
adc
ja
xchg
push
xor
shll
scas
mov
sub
mov
push
jae
xor
idivb
cld
mov
sbbl
inc
lea
xor
or
movsl
jle
aas
or
jle
rorl
fldt
add
push
dec
lds
mov
mov
test
fs
xor
pop
sbbl
xor
decb
xchg
bound
xchg
int
mov
test
aaa
push
mov
aas
in
cs
in
stos
lahf
in
mov
jae
pop
sahf
inc
or
popf
inc
add
pushf
adc
push
stos
test
adc
es
gs
sbb
mov
cmp
les
ret
xor
push
adc
subl
lcall
xor
loopne
cmp
xor
leave
mov
add
sbb
in
push
std
pop
adc
adc
cmp
dec
mov
jge
and
stc
addb
das
jne
imul
sub
out
cs
scas
sub
or
mov
mov
adc
dec
sub
mov
cmpsl
cmc
mov
gs
push
xor
iret
dec
stc
dec
enter
xor
push
sbb
add
out
and
movsl
xchg
and
lods
popf
rol
testb
ret
xchg
xchg
test
mov
sbb
cltd
movsl
popa
fisttpll
scas
jg
adc
dec
mov
pop
cld
dec
and
pop
sbb
mov
or
idiv
stos
pop
icebp
inc
je
push
or
add
inc
lret
dec
xchg
stos
sub
pop
stos
push
push
outsb
inc
lea
les
out
push
mov
in
or
mov
cmp
aam
mov
add
sbb
push
xchg
in
fmuls
lea
and
add
pop
push
dec
inc
or
adc
popf
add
pop
adc
add
cmp
mov
aam
xor
xor
sub
outsl
jno
dec
jmp
push
xchg
adc
loope
pop
adc
jae
and
dec
dec
stc
mov
arpl
mov
stos
dec
jns
js
cld
cmp
wbinvd
sub
mov
push
mov
les
jg
or
icebp
push
sbb
adc
pop
fwait
xchg
dec
aad
shll
leave
inc
adc
cmc
sub
push
add
sbb
or
ffree
pop
int3
fldenv
js
push
push
jp
movb
pop
fstpt
push
imul
popa
shrl
sub
mov
push
pop
adc
mov
dec
mov
rol
push
jmp
xor
inc
cmp
xor
stos
adc
dec
leave
push
cmpsl
mov
ja
ss
jmp
xchg
lea
lcall
sub
int3
push
mov
imul
popf
repnz
xorb
out
fistpll
in
fisttpl
xor
addr16
xchg
jae
cmpsl
lahf
jb
jb
int
mov
cmp
pop
lods
aad
push
enter
hlt
stos
pop
jmp
sub
inc
sti
or
pop
sbb
sbbl
cmpsl
xchg
int
fidivs
inc
js
mov
cmp
adc
pop
fistps
cmc
addr16
mov
negb
out
bound
scas
test
xchg
mov
fsubrl
aad
cmc
repnz
les
lds
stos
push
add
cmc
movsl
aad
ret
xor
push
jae
clc
xchg
ret
inc
mov
inc
cmpsl
cmpb
scas
fs
lret
ss
mov
cmpsl
fldcw
lret
enter
xor
clc
xlat
call
or
and
loope
add
movsl
cmp
lret
mov
lret
xlat
mov
xor
sbb
add
sbb
sub
mov
test
bound
mov
gs
sub
movsb
enter
cld
dec
das
mov
leave
or
push
jnp
jne
ja
pop
repz
addr16
xchg
mov
or
aas
lds
pop
imul
or
jb
mov
in
and
arpl
ja
rol
jo
sarl
xchg
rcll
pop
fld
cli
or
mov
push
mov
inc
nop
mov
or
dec
pop
adc
adc
fsubrl
mov
lcall
adc
sub
adc
sub
lea
add
xchg
repz
andl
pop
daa
lds
jne
adcb
cmc
adc
stos
scas
jg
mov
dec
sbb
cltd
push
ljmp
ret
enter
int3
pusha
adc
push
scas
mov
cmpsb
shrb
inc
test
in
imulb
std
push
ljmp
pop
adc
push
inc
mov
int3
jmp
cmp
lock
add
xor
jae
jb
scas
xor
xor
stos
cltd
or
pop
clc
repnz
scas
xchg
xchg
jno
xor
pop
notl
push
inc
mov
dec
sub
inc
lret
hlt
jmp
es
mov
jp
into
mov
mov
add
jne
mov
cmp
movsb
or
mov
add
mov
add
push
or
les
xchg
mov
xchg
aam
inc
mov
sbb
jp
push
out
push
adc
cmp
fcomps
inc
fucomi
into
lods
inc
mov
dec
sub
xor
cwtl
mov
roll
loopne
adc
test
icebp
adc
adc
rcll
cmc
repnz
and
inc
and
add
fbld
lcall
aas
push
gs
jo
pop
test
mov
dec
lods
add
mov
or
testl
jbe
pusha
mov
xchg
clc
mov
pop
mov
aad
ret
iret
xor
imul
repnz
stc
mov
xor
xor
jg
cmp
out
xchg
and
ret
aad
pop
jg
xchg
loop
sub
stc
and
adc
or
and
int3
sbb
push
xchg
outsb
sub
mov
int3
je
iret
pop
xchg
test
and
or
mov
gs
sahf
inc
repz
into
dec
adc
mov
loopne
add
xchg
arpl
lret
or
xor
cmp
sti
dec
xchg
popf
hlt
push
mov
subl
pop
push
mov
pop
ja
mov
push
movsl
sub
xor
sbb
push
roll
jne
mov
out
ret
cmp
imul
push
sahf
jnp
sti
test
fstpt
sbb
out
mov
orb
push
and
fisttps
test
add
movb
and
push
and
mov
ja
add
in
mov
je
psllw
push
rcl
xlat
iret
xor
inc
mov
adc
lods
mov
xchg
or
or
subl
ss
and
in
popa
loopne
push
and
faddp
mov
mov
mov
and
clc
mov
insl
pusha
and
dec
push
loope
sbb
inc
lods
cmp
icebp
cmc
bound
fbstp
imul
xlat
and
mov
cmp
bnd
clc
cwtl
or
push
sbb
cmp
pop
popf
and
jno
in
daa
in
les
pop
cmc
aad
pusha
mov
movsl
movsl
mov
clc
push
lock
test
andb
or
addr16
mov
cld
popf
outsl
xchg
lds
inc
icebp
cmp
js
pop
loop
dec
pop
call
in
scas
aad
sbb
pusha
cmpsb
aad
pop
popa
push
cmpsl
jmp
mov
mov
ds
into
loopw
lods
aam
and
mov
sti
fwait
mov
cld
add
xchg
sbb
jmp
icebp
mov
loop
jmp
mov
xchg
daa
adc
sbb
mov
lock
pusha
imul
aad
xor
stos
loopw
or
int
inc
push
jge
mov
xor
pop
xor
ja
sahf
mov
je
pop
data16
lods
or
jmp
adc
xchg
xchg
je
mov
mov
mov
flds
mov
inc
adc
decb
add
aad
mov
ds
into
and
scas
std
ror
or
lods
pop
outsb
sub
cmp
dec
mov
sarb
sub
fsubrl
sbb
loop
and
adcl
lock
xchg
jmp
sub
movsl
inc
mov
out
pop
add
icebp
cmp
mov
or
loopne
adc
add
jle
push
cli
sti
in
sti
push
jecxz
leave
xchg
scas
mov
orb
ja
movsl
mov
out
xchg
xchg
rcrb
mov
bnd
add
pop
in
dec
jecxz
scas
adc
scas
sbb
pop
mov
fdivs
mov
jg
xorl
push
out
sub
mov
cmp
cmp
dec
stos
or
sub
or
sti
mov
fwait
sbb
adc
out
mov
aas
mov
in
or
inc
scas
sub
in
shrb
pop
cmp
shld
leave
adc
hlt
test
out
pusha
scas
mov
xorl
or
addl
sbb
fdivs
sti
cmpb
sbb
outsl
lret
cmpsb
popf
cmp
out
push
out
mov
je
push
leave
xacquire
push
popa
aam
mov
sarl
js
cmp
sbb
mov
push
jl
les
test
inc
hlt
in
std
mov
xchg
cltd
mulb
fmulp
sti
xor
push
sahf
jo
lds
cmpsb
jae
dec
push
add
ret
sbb
xor
fcmovnbe
nop
jmp
pop
xchg
xchg
sahf
and
jle
in
shlb
jg
out
je
and
mov
rorb
push
cmc
pop
scas
xor
mov
test
test
dec
divl
cmp
mov
xor
pop
jge
fidivrs
test
pushf
dec
jge
xchg
jle
dec
addr16
jl
pop
test
aam
sbb
aam
cmp
push
fidivl
leave
jecxz
pop
cmpsb
inc
test
jno,pt
cmpb
repnz
lret
repnz
dec
inc
cmc
add
stc
jae
lods
sub
mov
add
push
shl
jae
push
sub
add
fisubs
shlb
mov
xchg
xor
negb
clc
xchg
mov
lcall
cmpb
outsl
and
or
test
cmpsl
mov
add
push
push
and
push
rorl
push
sub
jle
mov
jno
sar
rorb
jno
sub
test
sbbb
mov
mov
pop
pop
jecxz,pn
and
ficompl
fdivrl
fistpll
imul
fistps
dec
fiaddl
outsb
and
les
xchg
repnz
test
int3
outsb
adc
int3
xchg
jp
or
loopew
sti
je
sar
mov
pop
push
test
sub
fnsave
data16
sub
leave
bound
addl
adc
enter
gs
stos
xchg
mov
inc
cmp
inc
rcll
mov
jne
sub
or
mov
inc
jle
pop
add
pop
jl
je
push
stos
add
in
outsb
mov
in
pop
adc
mov
cmp
in
inc
mov
cmpsb
mov
cmp
in
pusha
imul
in
jle
ljmp
add
dec
adc
push
or
and
fcmovnbe
adc
sbb
popa
js
push
loope
mov
xlat
or
jle
mov
mov
lods
sarb
movsb
movsl
sub
les
inc
push
sub
lods
subb
ret
add
out
repnz
add
cmpsl
dec
sahf
lahf
mov
xor
or
popf
cli
cmp
and
ljmp
mov
mov
xchg
adc
mov
mov
loope
push
xor
lods
in
loopne
pop
data16
mov
mov
xchg
jecxz
sub
sbbb
sbb
bound
mov
cmpsl
jmp
sbb
mov
mov
negl
push
scas
shl
cmc
mov
push
push
xchg
pop
push
cmp
sahf
pop
into
imul
hlt
enter
and
jmp
je
adc
mov
pop
mov
dec
ss
test
mov
arpl
cltd
cmp
ficoms
addr16
in
test
imulb
push
and
add
je
insb
arpl
pop
cmp
jmp
add
decb
sbb
call
xchg
movsb
push
pop
and
sub
nop
outsb
cmp
rclb
in
icebp
mov
xchg
shrb
sub
leave
adc
xchg
push
jl
push
sub
mov
fistpl
ret
mov
push
push
mov
dec
or
jmp
jge
test
imul
dec
arpl
mov
jecxz
fdivl
test
push
add
lcall
mov
add
add
repz
repnz
sbb
xor
test
and
xchg
dec
xor
andb
mov
pop
mov
pop
fsubp
jno
mov
enter
negl
push
mov
jbe
shrb
adc
cmp
lret
mov
adc
pop
addl
pop
add
inc
jmp
xchg
clc
or
sub
mov
outsl
cli
cmc
out
lods
repnz
dec
mov
cmpsb
mov
pusha
cltd
jnp
adc
dec
icebp
and
data16
fwait
dec
je
pushw
dec
fmulp
insb
inc
lret
xlat
jg
jge
cmp
loop
xor
popl
icebp
jbe
push
jae
pop
push
jo
cwtl
es
jb
addb
loop
lods
mov
mov
sub
into
or
pop
ja
imul
push
inc
pushf
or
test
vandnps
jg
mov
adc
mov
jns
loope
xchg
lret
sbb
sub
cmpb
fbld
and
je
lret
shl
mov
gs
xchg
mov
stc
cs
sbb
cmp
dec
pop
ret
jg
cmpsl
adc
cmp
adc
sbb
lret
adc
pop
stc
jg
popf
add
leave
fwait
xchg
cmc
xchg
xchg
inc
jl
push
mov
push
in
fimull
sub
push
and
adc
int3
ret
std
cmpl
icebp
sub
and
sbb
daa
xor
inc
aad
push
movl
inc
cld
hlt
push
push
pop
fs
mov
mov
dec
add
xchg
lret
in
or
jns
pop
cmp
es
pop
rcl
or
into
adc
xchg
mov
mov
dec
jns
pop
cmp
inc
push
inc
mov
clc
insb
enter
movsb
push
cs
andb
arpl
jge
jg
ret
hlt
pop
and
rcrl
imul
cmovp
in
movsb
mov
push
add
loope
or
xchg
aad
push
sbb
je
loope
shll
pop
sbb
dec
pop
xchg
add
icebp
pushw
push
in
loopne
es
xor
fs
popa
add
ds
xchg
repnz
out
sub
mov
out
adc
negl
aaa
adc
lret
data16
jl
lret
sbb
pop
cmp
lods
mov
out
pop
mov
dec
mov
cmpl
jne
sub
out
stc
loopne
das
aas
pop
loope
pop
dec
popa
sbb
imul
inc
rclb
push
dec
jp
pop
call
rclb
ficompl
jbe
adc
add
inc
fsubl
add
shr
icebp
jmp
jne
inc
jns
ficoms
stos
cmpsl
int3
mov
sbb
cmp
xor
xchg
inc
sub
inc
not
and
loopne
bound
gs
push
pop
pusha
cmp
pop
insb
cmp
inc
push
insb
add
cmp
and
mov
xlat
aad
sbb
mov
gs
push
cmp
push
xchg
rcrb
jae
xor
xchg
sbb
mov
mov
mov
dec
jg
addl
mov
xchg
movsl
pop
xor
in
int
or
adc
test
push
sarl
pop
test
rolb
negl
sti
bound
movsb
out
outsl
loopne
test
dec
out
mov
inc
and
cmpsb
xor
stos
xchg
and
lds
mov
ret
loope
out
mov
addr16
sbb
push
jl
insb
cmp
mov
int3
cmp
xchg
test
mov
stc
cmp
mov
insl
inc
mov
es
rcrl
pop
push
test
mov
insb
xor
cmp
aam
je
fsubrs
adc
xor
ret
sti
das
add
fdivs
cli
xchg
push
mov
xor
push
ret
xchg
and
insl
popa
bound
xchg
shlb
jmp
mov
sahf
fstps
fwait
xchg
and
jl
insb
lds
iret
inc
jl
push
mov
testb
xor
sbb
push
mov
insl
ss
rorb
xor
sbbb
bound
push
mov
int3
push
inc
cmp
mov
or
and
and
lea
outsl
jg
pop
jns
cmp
lahf
inc
dec
push
daa
call
inc
filds
fbstp
fisubs
mov
jbe
add
js
and
nop
or
bound
test
xor
mov
imul
ja
aam
pop
out
dec
shll
fstpl
add
shrb
pop
mov
xor
jbe
cmpsb
add
mov
inc
add
cmp
test
xchg
and
mov
int
and
cmpsl
icebp
das
xchg
adc
call
mov
js
push
incb
enter
push
push
loopne
sbb
push
dec
jge
gs
pop
das
ja
scas
mov
sub
dec
jne
sub
loopne
mov
je
push
jl
das
test
xor
lock
pop
mov
pop
jb
ljmp
pop
or
add
mov
mov
pop
add
jle
out
adc
sub
leave
jbe
loope
mov
or
in
xor
mov
aad
xchg
repz
dec
push
popa
arpl
dec
dec
mov
in
sbb
lahf
sbb
sbb
icebp
mov
fidivl
inc
sub
jmp
cmp
adc
mov
jno
adc
jns
jb
vmaxpd
incl
sbb
call
leave
imul
add
push
js
iret
inc
mulb
aam
jp
mov
push
sbb
fisubl
mov
imul
xchg
jnp
jb
dec
sbb
add
ja
shlb
adc
jbe
xchg
xlat
add
mov
gs
cli
popa
fidivrl
push
shrb
outsb
cmp
cld
pop
imul
pusha
lahf
test
or
xlat
sbb
mov
sbb
ds
push
andnps
aam
push
fnstenv
cmc
cmp
dec
cmpl
mov
sbb
dec
cmp
cmpsl
dec
or
inc
and
push
repnz
xlat
arpl
insl
and
aam
cmp
ficomps
dec
rcll
sti
jle
xchg
sbb
or
movsb
cs
iret
mov
gs
jne
and
sub
add
lds
xchg
repnz
pop
into
sub
scas
jmp
leave
dec
sbb
xchg
into
repnz
mov
push
test
movb
push
pop
xchg
cmpl
mov
dec
pusha
push
push
pop
notl
dec
rcrl
rcl
sub
out
push
inc
or
add
nop
push
mov
pop
stos
cwtl
aad
jmp
call
leave
push
xchg
mov
test
or
data16
mov
shll
adc
and
inc
dec
cmp
mov
mov
lock
scas
xchg
test
imul
out
mov
push
or
push
mov
roll
push
jg
push
insb
jmp
xor
icebp
adc
je
pop
mov
or
add
jb
mov
lea
add
jbe
sbb
push
in
cmpsb
notb
ja
ret
inc
mov
lods
xor
test
stos
inc
or
and
fldenv
inc
jbe
push
fimull
xchg
jp
or
mov
or
inc
lret
jnp
popa
or
jmp
ss
mov
pop
cli
xchg
mov
jl
adc
jne
std
jns
mov
push
jge
pushf
imul
or
mov
mov
mov
cltd
or
ret
mov
jmp
cli
pop
lret
dec
out
aam
mov
mov
iret
sbb
mov
sbb
das
divl
mov
dec
xchg
cmp
jl
rcrl
jecxz
js
inc
dec
inc
mov
in
int3
inc
enter
sub
popf
lods
dec
pop
mov
mov
add
pop
fnstenv
lahf
ret
push
xchg
scas
cld
jns
mov
xchg
push
mov
or
movl
mov
aam
sti
mull
cli
int3
or
cmp
fistpll
aas
xlat
fwait
push
lret
icebp
testl
xchg
movsl
inc
sbb
pop
das
sti
pop
sub
enter
aaa
outsb
fld
xor
int
mov
shlb
repz
test
xor
test
fisttps
push
rorb
loopne
inc
aaa
ffree
lret
in
push
sub
dec
nop
icebp
inc
fnstcw
dec
decb
rcrl
out
das
jnp
cmp
daa
mov
mov
mov
inc
sbb
mov
inc
jbe
rorb
inc
mov
dec
mov
cld
cld
addb
pushf
ja
jg
push
js
out
pop
lret
pop
lret
imul
cmp
repnz
into
pop
testl
sbb
xchg
adc
fimull
in
pop
insb
xchg
push
pop
loopne
and
jecxz
mov
add
sbb
sarl
push
dec
and
add
inc
jne
jecxz
xchg
mov
adcb
in
xchg
pop
cwtl
dec
adc
pop
test
mov
sbb
dec
es
es
cmp
int
int3
hlt
fildll
sbbl
sub
fsubrl
xor
popa
push
sbb
mov
in
sub
sub
fcomps
jle
enter
pop
push
mov
cltd
mov
inc
pop
sub
mov
rorl
mov
ss
jb
sbb
ljmp
ljmp
shlb
xor
jbe
and
mov
dec
jge
xchg
pusha
pop
fisttpl
mov
mov
pop
mov
ds
sbb
pop
cmp
adc
jne
mov
inc
sbb
sarl
sbb
pop
fstl
aaa
xor
dec
xor
inc
jge
aad
popf
testb
xor
pop
ret
inc
in
adc
cld
or
mov
stos
inc
sub
pop
dec
fidivrs
adc
icebp
mov
mov
sti
in
dec
pushf
in
mov
pop
in
dec
push
lahf
inc
and
xchg
mov
out
jnp
xchg
out
aad
jge
jmp
iret
push
scas
out
mov
cmp
popf
fcom
xor
in
or
sub
jno
js
imull
or
dec
orl
jnp
xor
adc
lret
xchg
out
add
or
call
push
jmp
mov
mulb
cmp
mov
ss
xchg
sahf
mov
dec
inc
outsl
ljmp
fidivl
cmp
dec
cmpl
xchg
ret
mov
test
pop
fstpt
adc
ja
mov
lds
out
add
bound
or
xchg
sub
loopne
or
mov
int3
shl
push
mov
mov
mov
sub
xor
shlb
test
adc
loope
lds
mov
xchg
in
stos
movsl
xchg
scas
mov
mov
int
hlt
mov
and
push
or
fcoml
mov
int3
xor
push
cld
mov
jnp
inc
cmp
das
mov
test
test
and
xchg
push
bound
outsl
cld
cmp
cmpsl
jb
aaa
sub
xchg
in
jle
sub
shll
test
lret
mov
hlt
add
rcl
mov
sbb
ret
xor
data16
lea
dec
fmull
pusha
filds
sbb
add
movsb
and
mov
dec
scas
jl
cwtl
not
fs
call
dec
into
dec
add
add
stos
in
stos
mov
test
add
fldcw
aas
xor
cmp
jne
sub
lods
lahf
lret
jp
pop
hlt
lahf
pop
mov
repz
ffreep
sub
hlt
sbb
std
inc
fsub
mov
loop
add
divl
lret
lods
sub
in
stc
or
cmpsl
adc
jns
xor
xor
mov
das
push
inc
insb
or
test
cmpsl
jp
jae
sarb
adc
lea
sub
add
push
add
xchg
inc
add
mov
cmpsl
push
inc
adc
ret
inc
rcll
mov
xchg
sbb
pop
sbb
cld
sub
mov
cmpsb
xchg
or
mov
loopne
push
int3
sahf
icebp
fwait
movsb
or
rorb
push
adc
add
loopne
shl
pop
or
movsb
cs
xor
negb
repz
popa
and
idiv
bound
xchg
scas
xor
iret
push
push
jg
xchg
aaa
or
dec
sbb
mov
jmp
mov
cmp
xlat
xchg
sub
dec
mov
jbe
mov
arpl
out
in
jp
adcl
test
cmp
add
lret
nop
adc
mov
adc
test
pop
jl
out
in
or
adc
jmp
int3
dec
xor
lea
sahf
leave
and
lods
cwtl
pop
adc
push
pop
test
popf
incl
std
pop
fdivrs
dec
jg
xor
cmp
adc
push
push
mov
add
shll
xchg
push
mov
repnz
xor
out
stos
and
lods
mov
outsb
int
enter
aas
inc
mov
scas
mov
ret
jge
xchg
out
mov
add
notb
fdivrs
jmp
jne
fwait
mov
ret
jecxz
pop
pop
icebp
mov
scas
cmc
aaa
pop
dec
dec
fmull
cwtl
enter
lods
inc
ret
adc
mov
mov
mov
push
stc
mov
adc
stos
cmp
mov
inc
les
xor
mov
inc
cli
or
das
cwtl
push
mov
jle
sti
xchg
sbb
out
fiaddl
pop
dec
xor
cli
jg
push
movsb
xchg
jae
adc
scas
test
loop
inc
sub
or
loope
icebp
adc
inc
cmp
jb
pop
sbb
lds
ss
in
xlat
ds
pop
aam
sub
aaa
add
xor
hlt
loope
inc
test
adc
stc
das
jl
lea
lods
inc
dec
addr16
cs
fsubr
mov
mov
jmp
xor
pmulhw
mov
xchg
clc
outsb
push
ss
add
inc
aas
inc
testl
hlt
jno
in
add
ret
sbb
test
les
mov
add
adc
and
in
shll
lret
out
sub
mov
cli
cmp
lock
hlt
aas
inc
xor
inc
lcall
mov
mov
movsl
dec
aad
arpl
jl
inc
dec
pop
sub
adc
out
dec
mov
outsl
sbbl
inc
sub
sub
popf
inc
outsl
pop
mov
stos
sub
inc
psubsb
test
and
sbb
aad
sbb
cmp
fucom
pop
inc
cmp
enter
xchg
test
xor
stos
adc
cld
je
imull
fs
adc
inc
or
xor
test
push
pop
or
dec
fnstenv
rcrl
mov
stc
pusha
ficompl
outsl
or
or
mov
loopne
aad
fdivrl
cmc
jl
sahf
cmpsb
lods
xchg
imul
imul
nop
js
fistpl
insb
cltd
mov
lods
loopne
mov
leave
or
movsl
jae
stos
cwtl
adc
mov
insl
or
and
cmpsb
lcall
repnz
cli
scas
fnsave
lahf
fmuls
inc
adc
and
notl
add
or
push
in
loopne
outsl
imul
mov
and
shrl
jae
dec
pop
call
out
pop
loopne
and
lea
jle
or
jmp
stos
popa
and
cmp
add
imul
push
test
into
xchg
inc
jb
mov
pusha
add
mov
pushf
push
jnp
cltd
mov
rcrb
sbb
in
gs
or
mov
sbb
adc
rorl
mov
scas
xchg
lock
mov
sbb
arpl
mov
sbb
push
jl
inc
mov
push
test
dec
mov
xchg
ror
sbb
sub
pop
jnp
fildll
arpl
jns
xchg
lcall
push
and
dec
cmp
fmuls
frstor
cld
and
sbb
inc
xchg
icebp
cltd
shll
jae
inc
movsl
and
fdivrs
xchg
mov
loope
sub
mov
jp,pt
or
dec
shrb
sbb
es
adc
pop
jno
xchg
mov
bound
mov
flds
std
fsubp
lret
shll
jmp
pop
sub
xchg
loop
adc
lock
ja
mov
push
nop
scas
dec
bound
arpl
sbb
jmp
outsb
in
dec
shll
js
loop
stos
jb
mov
add
jmp
jb
mov
adc
faddl
jmp
shl
sti
sub
repnz
and
pop
mov
ss
dec
fnstenv
lret
pusha
ss
ljmp
xor
sbb
addr16
popf
inc
faddl
mov
pop
push
filds
ficoml
and
xor
dec
js
dec
loop
xor
imul
out
pop
sbb
test
sbb
das
xorb
mov
xor
scas
push
jecxz
cmp
mov
pop
or
cmp
add
bound
pop
mov
dec
sbb
fidivs
mov
jo
cmp
je
mov
iret
add
pop
cmp
nop
aad
in
addb
mov
push
push
outsl
stos
add
in
aam
cltd
ret
add
mov
push
enter
insb
lcall
lret
mov
and
arpl
imull
das
sub
insb
mov
xchg
push
cld
ljmp
sub
fcoml
mov
stos
call
popf
pop
add
and
popf
add
sbb
jb
adc
aas
fst
xchg
loope,pt
adc
outsl
add
mov
repz
repnz
sbb
adc
mov
test
adc
fcoml
sbb
clc
leave
pop
dec
jle
adc
push
jnp
mov
mov
inc
aas
aas
aas
dec
std
push
outsl
xchg
faddl
jnp
pop
jo
fs
popf
ret
pop
inc
in
or
xchg
pushf
sahf
lock
jg
les
jnp
mov
xchg
mov
rcl
push
lods
mov
push
punpcklwd
dec
cld
jnp
or
nop
inc
adc
mov
fwait
mov
iret
push
icebp
push
pop
leave
fistpl
imul
inc
or
fldenv
ret
shl
xor
ret
push
add
sbb
sub
adc
fs
fs
xchg
or
jno
in
cld
jp
push
rcr
or
adc
imul
int3
daa
mov
sub
clc
push
or
cmp
pop
je
iret
xor
lret
je
cli
cwtl
ds
mov
outsb
xor
mov
fs
test
cld
arpl
aad
repz
enter
xchg
std
mov
xor
hlt
daa
inc
or
push
shll
std
mov
ret
out
rcrb
or
or
sahf
aad
cmp
inc
out
adc
push
fld
jb
call
mov
mov
je
cmp
jle
arpl
mov
lea
jmp
mov
pop
js
data16
push
sti
xor
mov
cmc
pop
push
xor
sub
lods
hlt
push
pusha
and
add
cmp
sbb
mov
pop
cmp
sbb
cmp
mov
xor
jg
dec
stc
xchg
cmpb
cltd
js
jno
enter
aad
into
insb
mov
mov
clc
lock
jp
scas
jno
lahf
push
push
inc
stc
aam
lret
lret
fcomps
mov
xchg
and
adc
imul
lods
mov
pop
inc
js
add
aas
xchg
out
lea
and
xchg
mov
cmp
decb
icebp
sahf
mov
in
or
dec
rclb
gs
xor
loopne
sbb
push
jnp
mov
mov
push
es
test
add
pusha
rcrb
mov
mov
add
sbb
fcomps
inc
mov
int
adc
jnp
aas
pop
daa
jne
andb
cmpsl
loope
aas
int3
add
sbb
adc
enter
pushl
sti
inc
xor
lods
xchg
lock
xor
iret
fwait
xchg
cwtl
shr
fs
pop
jne
xor
dec
lock
pop
cmpsl
inc
into
fwait
sbb
lds
inc
mov
dec
inc
push
dec
pusha
or
xor
clc
xor
loopne
pop
cmpl
pop
popl
or
sarl
lea
add
sub
mov
sbb
enter
xchg
or
stos
adc
aad
xor
pop
mov
clc
sbb
add
ret
scas
xor
mov
mov
xor
aam
xchg
lcall
maskmovq
notl
and
pop
rolb
add
push
dec
adc
lds
jl
iret
jno
outsl
push
movsl
aas
cmpsb
sub
push
sbb
mov
add
or
addr16
jns
cmp
mov
jle
push
mov
ja
fistpll
hlt
sub
cmpsl
in
add
stos
pop
outsb
push
cmp
loopne
or
insb
hlt
js
in
push
push
retw
stos
sbb
daa
in
divl
xchg
add
stos
out
jbe
aam
adc
jnp
popf
fisttpl
jecxz
sub
fstpl
mov
das
not
cmc
inc
xor
add
jne
insl
or
enter
ja
add
cmp
jp
addl
cmp
pop
test
jecxz
fwait
in
mov
jno
or
addr16
das
pop
pop
mov
in
pusha
lcall
or
push
jmp
cmp
std
into
push
leave
enter
in
aad
cmp
ja
mov
dec
movsb
xchg
pop
inc
and
jns
dec
ret
xor
in
sub
scas
xor
add
ljmp
repnz
cltd
jmp
inc
push
xchg
cmp
sbb
and
cs
cmp
lret
dec
sbb
mov
ds
fstps
mov
stc
pop
fwait
xor
and
bound
add
sti
pop
outsl
insl
lret
call
pop
sarl
cwtl
je
pop
xorl
enter
idivb
add
pop
add
sub
in
in
inc
and
push
int
xchg
sub
pop
add
lahf
adc
and
notl
dec
aam
sub
in
lock
mov
or
adc
les
dec
outsl
or
add
lret
out
imul
add
in
mov
and
sub
loopne
scas
test
pop
push
notb
inc
leave
push
mov
adc
insl
push
cmpsl
jg
das
cmp
lods
pop
test
in
mov
sahf
jb
loop
mov
or
aad
stc
jo
adc
lcall
shll
repz
scas
mov
and
push
leave
xor
pushf
lock
test
mov
fwait
movsb
pusha
push
lcall
nop
mov
jnp
fwait
inc
mov
cmc
ss
and
jl
sub
push
mov
bound
mov
sub
push
int
mov
bound
dec
loop
icebp
add
imulb
ret
movsl
js
mov
push
fildl
push
in
aad
scas
pop
xchg
rorb
ja
xor
xchg
mov
lea
add
ss
leave
ds
hlt
hlt
xor
mov
pop
lds
rcrb
pop
cmp
iret
xor
sbb
pop
roll
push
arpl
ficompl
inc
dec
bswap
insl
pop
es
xchg
stc
sbb
jb
jo
sub
sbb
das
inc
in
fisubl
das
outsb
lods
stos
sti
push
mov
loopne
cmp
pop
lret
ret
mov
ret
incb
jne
call
xchg
sub
call
push
xchg
nop
pusha
subb
movsl
dec
push
pop
xchg
xlat
push
pop
jae
stos
mov
ljmp
std
lahf
xchg
jo
push
dec
sbb
stos
mov
adc
push
rcll
push
push
mov
dec
mov
or
js
jns
loope
lea
lea
jecxz
cmp
dec
and
loopne
lock
jle
test
ret
jno
loop
data16
jo
add
push
pop
mov
out
dec
gs
push
test
push
popf
gs
insb
arpl
ljmp
lea
cmp
push
push
pop
incl
xchg
or
mov
sbb
enter
mov
ss
sbb
push
lret
in
adc
sub
sbb
dec
in
movsl
sub
aaa
push
shlb
shl
mov
add
ds
pop
fidivrs
or
cmpsb
nop
out
insl
int
adc
stos
das
adc
outsb
inc
arpl
mov
scas
rcrl
fisttpll
jo
jbe
cld
pushf
adcl
mov
cmpsl
sbb
xchg
lods
dec
mov
fnsave
xor
hlt
test
lahf
test
or
stc
divb
repnz
pop
rclb
cmpsb
icebp
and
xchg
outsl
lea
or
jbe
fdivrs
jo
inc
movsb
xor
xlat
mov
popf
xor
mov
stc
jae
xor
ror
mov
inc
push
fwait
popa
mov
mov
iret
mov
adcl
sub
jne
mov
mov
ss
jmp
ficompl
sub
jbe
mov
push
mov
pop
mov
and
mov
and
lret
stos
hlt
stc
insb
or
aas
mov
jno
test
lea
pop
stos
add
sub
jecxz
jecxz
cwtl
and
dec
lds
or
ds
dec
scas
and
mov
loopne
cmp
pop
fs
test
js
mov
add
mov
gs
xchg
cmpsb
or
sbb
cmp
addl
mov
xchg
lret
int3
lahf
add
dec
pusha
dec
xor
rclb
inc
cmp
jl
jns
sub
shl
pop
popl
out
xor
mov
xor
outsb
cmp
dec
popf
push
jns
or
aaa
stc
rclb
popa
sbb
dec
jl
sbbl
pop
into
pop
cmpb
or
movsl
repnz
xchg
aad
push
inc
xor
in
pop
mov
mov
das
addr16
fstl
int3
ds
daa
add
ret
test
inc
ret
and
enter
xchg
cltd
pop
test
push
repz
ret
xchg
pop
pop
cmc
adc
or
cmpb
jp
fisubs
pop
dec
push
push
cmp
out
shll
in
inc
ljmp
fildll
fsubrl
sub
cs
pop
or
mov
in
pop
neg
and
jnp
les
jl
repz
in
cmc
out
fiadds
cltd
pop
lcall
jno
call
dec
cmp
sbb
dec
pop
jne
pop
jbe
lret
leave
xor
cwtl
cmp
inc
add
scas
jge
mov
je
lock
into
stos
xor
repnz
cmp
pop
in
aad
test
pop
call
pushf
cmp
bound
dec
xor
mov
pop
repz
bound
popf
fwait
and
nop
push
loop
test
cmc
das
sub
out
push
lods
push
add
movl
add
push
cmpsl
jl
ret
iret
lret
mov
push
xchg
mov
dec
jmp
mov
lret
xchg
jo
pushf
jl
xchg
cmp
rcll
jp
xlat
out
movsl
and
lds
sub
xlat
stos
push
cmp
aaa
mov
loopne
cmp
mov
or
cwtl
and
sti
mov
inc
cli
loopne
mov
aad
imul
clc
adc
int
loope
xchg
es
out
shlb
sbb
inc
lds
outsb
add
mov
insl
call
leave
loope
cmp
popa
sbb
cmp
xlat
popa
dec
push
and
mov
scas
inc
push
shrb
icebp
cmp
mov
xchg
ret
stc
mov
xor
enter
cmpb
xor
fcomps
gs
sub
sub
fsubl
push
jp
out
fstl
mov
pop
daa
push
add
inc
int3
push
lock
popf
mov
xor
rclb
xlat
pusha
imul
adc
xlat
xchg
adc
mov
leave
cmp
sti
lea
and
fnstenv
int
push
cmpl
and
mov
imul
push
adc
mov
jnp
and
adc
xchg
into
mov
pusha
imul
fs
pop
dec
pop
cmp
into
lcall
aad
idivb
xor
es
cli
dec
enter
dec
adc
sbb
test
pop
jp
xor
push
pushf
test
ljmp
pop
out
pop
les
push
arpl
ss
rol
sub
ds
cs
mov
loopne
dec
mov
mov
shrb
out
adc
dec
push
das
push
and
inc
push
cmp
pop
insb
out
ret
iret
pop
sbb
repz
movsl
std
xor
xchg
or
fwait
jae
or
jne
mov
imul
or
cmp
inc
pop
xchg
hlt
jb
push
mov
jns
out
cli
pop
jmp
cmpsl
xchg
ret
test
mov
mov
adc
popl
rsqrtps
nop
push
or
sbb
or
mov
roll
mov
dec
test
fwait
sahf
lods
push
sbb
cmpsl
mov
cmpsl
push
and
fwait
idivl
or
and
mov
mov
call
jl
js
dec
lret
ret
add
dec
cmp
and
stc
in
adc
ds
pop
adc
arpl
clc
sub
or
popa
test
addr16
inc
dec
push
call
xor
sbb
jecxz
popa
push
inc
sub
das
xchg
dec
mov
inc
sub
js
jbe
lret
adc
mov
das
jmp
jl
push
add
outsl
int
push
repz
or
repnz
mov
mov
int
std
jp
add
xchg
mov
in
mov
cmpsb
fwait
test
xlat
std
sbb
jae
mov
and
mov
pop
pop
ret
fildl
jp
push
jb
and
adc
pop
pop
pusha
subl
inc
mov
cmpsl
inc
cld
dec
lds
fxch
inc
invd
cmp
lea
jns
jne
mov
sub
aam
xchg
imul
add
dec
xchg
jno
dec
cmp
jge
or
push
cmp
sub
xor
insl
mov
sahf
repnz
adc
mov
mov
bound
movsb
js
add
or
icebp
push
loope
push
and
pop
out
xchg
sub
xlat
enter
stos
push
lcall
xchg
loopne
xor
jnp
xor
out
cwtl
fimull
and
sbb
mov
sub
push
fwait
mov
adc
stc
mov
cmp
xchg
cmp
xchg
cwtl
out
scas
das
lods
leave
loopne
mov
addb
sub
idivl
fidivrl
lods
repnz
fstps
inc
cmp
push
inc
in
xor
xor
scas
testl
fldt
lret
mov
or
mov
inc
ds
cmp
jae
xchg
scas
sub
push
jns
mov
dec
mov
popf
jnp
sub
sub
idiv
insl
loop
sbb
pop
or
test
test
push
dec
push
in
cli
mov
inc
mov
add
popf
mul
push
andl
and
pop
scas
cltd
in
hlt
test
lea
add
bound
push
lods
popa
sbb
push
add
xchg
adc
xchg
push
stos
repz
push
jecxz
mov
in
sbb
push
push
loop
stos
shl
roll
fs
out
negb
jmp
fnstcw
decl
and
adc
shrb
lea
lods
or
aad
cmp
or
lcall
mov
xlat
cmp
mov
sbb
push
sbb
jbe
jl
lods
orb
cmpsl
sub
sbb
sbb
lods
sarl
lods
add
dec
mov
push
lods
lret
push
clc
je
lret
adc
addr16
lock
lcall
and
std
imul
jge
mov
stos
mov
cmp
push
movsb
cmp
and
sub
jle
hlt
mov
mov
push
fmuls
sub
adc
pop
push
adc
shl
or
lock
xor
and
dec
mov
sbb
adc
mov
or
push
push
jle
jle
test
mov
dec
shrb
mov
shl
push
dec
dec
out
test
xchg
jns
popl
lods
xchg
cmpsl
or
jecxz
lret
xchg
xchg
jns
mov
sbb
xor
cld
jo
scas
sbb
xlat
inc
and
dec
sub
lahf
push
xlat
stos
ds
shlb
mov
ljmp
inc
loop
cmp
mov
cmp
sub
call
repnz
or
inc
stos
cmp
inc
int
mov
mov
sahf
and
sbb
add
aam
out
mov
mov
and
xchg
repz
xor
push
xor
sub
shlb
sub
xchg
mov
push
aad
xor
jg
sti
int
arpl
adc
push
xor
cmp
mov
mov
add
xchg
or
into
cltd
sbb
pushf
and
inc
fadds
dec
mov
sbb
jl
jecxz
xor
sub
iret
inc
mov
nop
pop
loop
mov
fistpll
jmp
adc
push
mov
je
push
jnp
out
cmp
pop
xchg
in
das
mov
mov
gs
ficoms
sti
cmp
xchg
mov
es
pop
loope
shrb
out
mov
jge
cmpb
shr
pusha
mov
mov
testl
inc
cs
inc
lods
adc
jp
xor
sub
shll
sbb
pop
stc
mov
push
jo
mov
jge
mov
out
addr16
stos
int
sbb
pop
and
jp
dec
add
push
jno
les
adcl
sub
jno
push
sbb
pop
mov
mov
cmpsl
xlat
adc
jp
cmp
sub
mov
loopne
cmp
pop
pushf
call
mov
adc
push
pop
or
mov
sbb
cmp
mov
push
popf
lods
adc
fwait
xor
out
hlt
xor
lds
jne
pop
aad
xchg
idivb
or
rcrb
scas
cmp
sbb
insl
mov
xor
stos
sub
mov
add
or
js
out
aad
cmpsb
loopne
fsubr
cmp
ficompl
stos
dec
mov
push
outsl
push
jae
or
mov
mov
sbbl
and
jmp
adc
shlb
cmp
jbe
repz
testl
nop
bound
mov
cmp
lods
fisubrs
xchg
jb
adc
scas
adc
or
lahf
loop
rcr
clc
pop
les
mov
sysexit
adc
jge
mov
inc
xchg
outsb
mov
scas
or
push
inc
rorl
aas
hlt
jl
addr16
ss
dec
aaa
cli
out
or
push
jne
lcall
stos
sbb
iret
mov
mov
mov
or
adc
adcb
xchg
test
add
sti
sti
and
push
mov
xchg
cmp
lock
fcomi
add
or
shlb
fwait
outsl
dec
add
push
mov
sub
and
lds
push
pop
mov
arpl
negb
aam
add
out
shll
push
and
xchg
mov
jmp
divl
jl
sbb
jbe
jns
mov
inc
out
push
cmp
jno
dec
repnz
pop
jbe
push
cmp
xchg
rcll
dec
das
das
adc
iret
into
cmp
xchg
pop
jo
xchg
pusha
add
stos
aaa
in
lods
pop
decl
inc
mov
add
dec
mov
and
jno
shll
jecxz
sub
xchg
fsts
xor
mull
mov
mov
sbb
pusha
jae
icebp
icebp
dec
rcrl
enter
mov
sti
mov
mov
cltd
or
xor
mov
mov
or
orb
insl
xchg
inc
mov
lock
cmp
mov
mov
ds
cli
sahf
pop
das
int
fisttpll
mov
call
and
xchg
xchg
scas
pop
loope
pop
lods
loopne
pop
fwait
aam
jg
imul
and
cmc
ret
jno
or
aas
iret
pop
mov
out
in
sub
push
jecxz
mov
add
or
jg
sub
fnstenv
mov
inc
xchg
xor
ss
push
mov
lea
inc
mov
fidivl
mov
in
push
mov
mov
push
subb
scas
adc
cmpsl
inc
add
or
test
mov
dec
mov
fsubrl
shrd
push
das
sub
daa
outsb
ret
jl
lret
icebp
jo
gs
clc
push
or
xchg
push
aas
jns
daa
pop
test
pusha
mov
adc
pop
xchg
cmp
notb
dec
or
fimuls
outsb
add
push
ss
mov
bound
aas
mov
pmuludq
mov
jbe
ret
scas
inc
mov
push
inc
bound
mov
jmp
icebp
push
cmp
pop
add
out
sub
stos
nop
pop
pop
aas
out
faddp
jns
sbb
and
add
jl
push
cld
out
lcall
dec
gs
push
mov
xchg
pushf
xchg
leave
and
push
hlt
dec
xchg
mov
push
js
clc
scas
outsb
mov
or
push
icebp
add
es
add
add
andl
mov
or
clts
shl
sbbl
inc
lret
adc
xchg
inc
pop
sub
jo
out
mov
or
int3
pop
arpl
inc
aaa
sub
les
imul
lods
push
lods
or
fdivs
jb
add
std
xor
sub
xor
add
pop
xor
loope
push
sub
hlt
aas
adc
les
in
mov
sbb
hlt
repnz
xor
mov
lds
incl
cmpsb
std
mov
mov
repz
aas
inc
jmp
pop
xchg
rolb
mov
mov
or
or
test
lds
xchg
test
andl
and
std
jbe
push
out
fs
aad
mov
fbstp
or
incl
mov
sub
out
repz
call
push
std
push
inc
lahf
jb
aad
loopne
ret
xchg
push
rolb
ds
cmp
xchg
or
pusha
icebp
out
rcrl
add
pop
outsl
jp
xchg
sbb
and
cmp
lds
sub
pop
mov
sub
pop
push
pop
outsl
or
stos
sub
addr16
sbb
xor
sub
push
pop
jne
sbb
shll
xor
xchg
sti
xchg
cmp
popf
push
lret
and
ret
jo
orl
dec
loope
iret
jp
enter
jne
loop
movsl
mov
sub
fmulp
xor
js
mov
fcomps
shl
int
notb
jl
push
orl
and
cmp
xchg
inc
xchg
jle
test
nop
and
hlt
push
xchg
jmp
dec
pop
fwait
mov
jno
jo
inc
mov
jl
inc
popa
add
daa
dec
test
or
adc
out
mov
hlt
and
roll
shl
rclb
bound
je
cmpsl
ja
push
test
or
push
les
ret
imul
pop
sti
jbe
mov
sub
pusha
pop
fnstsw
mov
jb
mov
pop
decl
lods
jmp
stc
xchg
fstpt
aad
cmp
test
lds
cmpsb
clc
sbb
hlt
push
sub
stos
orb
fdivs
xor
mov
xchg
lret
in
mov
cmp
jmp
dec
or
pop
mov
pop
sar
lahf
psllw
fimuls
je
lret
cs
adc
movsb
mov
loopne
mov
test
pop
insb
inc
adc
mov
lock
aad
pop
fistps
lret
iret
mov
and
mov
adc
or
mov
or
jg
outsl
data16
loope
pop
inc
sahf
mov
nop
jl
bsf
jge
dec
xchg
imul
sbb
xchg
mov
popf
adc
movsb
jge
bound
enter
shrl
inc
jne
pop
sub
xchg
fwait
mov
or
loope
sub
sbb
sahf
pop
shl
loope
ja
ss
push
enter
and
jnp
bound
mov
push
arpl
or
push
cmp
les
jae
shlb
sub
mov
iret
int
imul
aaa
inc
mov
and
loopne
jmp
mov
aam
es
outsl
bound
jb
adc
lahf
xchg
push
xchg
add
sub
jo
mov
mov
inc
faddl
lahf
nop
push
mov
mov
cli
mov
insb
dec
xchg
aad
andl
int
aad
cwtl
inc
cmc
out
hlt
sub
cltd
int
out
mov
jp
in
pop
ret
scas
add
mov
cmp
repz
mov
pop
push
ja
jbe
push
popf
sub
mov
and
jnp
lea
pop
aaa
pop
pop
xchg
mov
push
or
pusha
push
lcall
mov
call
in
cmpsb
clc
decl
pop
inc
mov
insb
repnz
xchg
loope
and
dec
mov
jmp
xor
inc
inc
or
jp
inc
inc
pop
xor
lea
icebp
out
or
andb
dec
push
stos
cltd
imul
mov
fmul
dec
insb
add
leave
pushf
mov
lea
dec
xchg
push
mov
jp
gs
dec
out
clc
shrl
mov
add
jmp
inc
insl
pop
xlat
out
out
aad
outsl
sbb
mov
rcll
sbb
xlat
inc
push
mov
xchg
sbb
ds
mov
dec
andb
mov
outsb
sbb
push
sbb
in
sti
and
sbb
mov
shrb
push
jbe
adc
clc
jmp
scas
inc
movsl
inc
bound
icebp
mov
jnp
xor
sub
cmp
or
pop
xchg
jnp
int3
xchg
es
mov
in
fwait
lock
test
mov
xor
cmpl
xlat
cli
sub
clc
xor
insb
xchg
les
movsb
mov
sbb
fmul
das
data16
lcall
inc
cmp
fsubr
xor
sahf
test
add
push
outsl
leave
add
xor
or
or
nop
daa
sub
mov
clc
jbe
or
push
cmp
rcrb
call
bound
dec
jl
and
xor
cmp
dec
mov
adc
lods
iret
repnz
gs
sbb
std
dec
jecxz
lret
xchg
mov
dec
cmp
mov
icebp
popf
std
gs
push
jge
dec
xor
add
gs
sbb
outsl
enter
daa
jg
inc
jne
fimull
test
jl
stos
cmp
shrb
sub
aas
adc
call
jo
jle
jo
inc
mov
lret
and
cmpsl
jge
js
ret
outsb
jecxz
imul
mov
and
or
into
cs
sbb
sahf
cmp
cltd
push
pop
pop
jle
ss
push
aad
push
adc
push
mov
push
jb
mov
jle
data16
mov
pop
pop
mov
xor
int3
mov
pop
xchg
xchg
lods
hlt
out
mov
aas
jo
pop
leave
out
mov
imul
cmp
in
sub
and
in
sub
stos
push
xor
cs
jmp
aaa
pop
stos
cli
rcr
ficoms
rcrl
inc
into
xor
jg
arpl
pop
sbb
inc
xchg
test
and
jge
xchg
xor
xor
mov
ljmp
mov
mov
dec
mov
jg
xchg
push
rolb
ret
jmp
jecxz
add
aas
rcrb
cmp
xchg
xor
loopne
or
sarb
pop
mov
mov
push
mov
repnz
lea
in
sar
inc
mov
xchg
mov
loop
inc
test
divl
lea
fisubrs
push
xchg
mov
xor
ds
int3
cmpsb
sbb
jl
test
sub
push
inc
sbbl
fidivrs
stos
pop
fdivs
add
in
mov
dec
fs
cmp
xorl
mov
mov
lahf
dec
les
shlb
push
std
cmp
in
inc
pop
and
xorb
aam
lret
add
out
addr16
sbb
stos
out
sahf
pusha
pop
inc
call
mov
lds
js
sbb
clc
insl
cmp
in
push
jae
sub
ret
daa
fnsave
enter
movsb
cwtl
sub
stos
adc
es
xor
test
push
test
jbe
les
ret
sub
or
ljmp
sbb
and
push
scas
pop
movsl
cmpsl
rorb
out
dec
test
push
inc
xchg
mov
shll
push
lds
and
lahf
xchg
xchg
push
int
popf
mov
inc
sbb
inc
out
lea
cmp
or
mov
push
xchg
push
pop
add
mov
mov
adc
iret
adc
cmpsl
je
lcall
rolb
arpl
xchg
movsb
pop
das
mov
test
mov
adc
xchg
mov
lock
arpl
add
push
sarb
cmpsb
push
inc
shlb
pusha
jae
push
xor
sahf
sub
sbbb
xchg
inc
push
jno
jnp
or
loope
inc
iret
dec
fistps
out
fwait
adc
test
imulb
xchg
xor
adc
faddl
mov
subb
mov
pop
cltd
lds
sub
or
fsubp
xorb
loop
sar
imul
sub
jo
arpl
iret
shrl
or
mov
xor
mov
stc
test
cmpsl
cli
js
popa
and
adc
pop
mov
push
xor
cmp
mov
jle
jno
jbe
rcrb
add
xchg
or
sbb
aas
lock
sub
inc
push
inc
inc
cld
xor
mov
adc
jg
sub
mov
icebp
out
xchg
dec
fs
or
cmp
testb
loope
inc
aam
fists
mov
sti
and
fcmove
shlb
cld
and
pop
pop
arpl
enter
pop
sub
pop
aam
sbb
jg
test
inc
fs
cld
lret
dec
sub
fisttpll
xlat
dec
cs
add
sarb
xor
movsb
cmp
xchg
movsl
mov
int3
mov
es
xchg
and
fisubrl
stc
leave
adc
pop
and
inc
or
repnz
cltd
idivl
sub
adc
dec
shl
mov
cmp
sub
push
xor
or
push
or
jp
out
fs
daa
push
adc
ret
xchg
cwtl
mov
fisttps
sbb
les
lods
or
int3
int3
xor
sarl
mov
add
push
sub
dec
lret
sbb
jp
mov
int
mov
test
scas
jmp
scas
subl
out
mov
daa
mov
loope
mov
mov
aaa
sbb
sub
and
fisttpl
movsb
pop
lods
pop
sub
out
and
add
mov
sbb
negb
sahf
jecxz
in
mov
ret
push
inc
out
mov
or
jae
test
imul
int
dec
mov
pop
andb
std
cmp
jno
and
jmp
mov
inc
stos
aaa
xchg
dec
movsb
clc
arpl
jne
jg
cwtl
punpckldq
loopne
jg
push
ret
cmp
jge
cltd
icebp
insl
das
cli
xchg
sub
xor
mov
aas
sbb
jns
fldenv
xchg
sahf
jae
add
add
fldl
sbbl
shr
mov
iret
push
lods
sahf
lock
push
jmp
mov
pop
scas
sbb
adc
lock
or
lret
ljmp
xor
fbstp
loopne
shl
movsb
shlb
mov
or
and
enter
lret
rcll
mov
enter
jb
mov
sbb
fidivrs
pop
pop
repnz
mov
or
jge
push
mov
stos
stc
insl
pop
xor
push
sarb
out
cmp
lahf
cmpsb
adc
in
and
add
leave
fwait
data16
mov
cmpsl
fisubs
inc
xchg
insl
inc
jns
pop
mov
sub
scas
push
lock
rcrl
fwait
cmp
imul
addl
pop
mov
mulb
outsb
mov
pop
dec
subl
fidivrl
dec
imul
addr16
int3
adc
cmp
pop
push
pusha
push
mov
and
inc
popa
call
sub
pop
popa
jbe
daa
fiaddl
lods
push
and
add
into
dec
lea
cmp
fxch
mov
mov
fimull
and
cmpsl
in
stos
lods
stc
mov
dec
xchg
adc
les
std
addb
add
add
mov
xor
scas
pop
dec
mov
xchg
or
arpl
cs
pop
shlb
push
or
pop
lret
lea
mov
scas
add
pop
test
xchg
pop
icebp
jbe
lret
int3
out
cmpsl
cmpsb
insl
inc
adc
pop
js
pop
outsl
fcomi
movsb
stc
adc
jnp
sub
stos
scas
and
fsubl
dec
sarb
sbb
and
hlt
jo
inc
sub
hlt
shr
xor
es
sbb
pop
cmpsl
jbe
call
add
pop
pusha
ret
cmpsl
mov
push
jmp
sub
push
jmp
aaa
adc
jb
xchg
scas
or
arpl
fwait
pop
push
in
ret
enter
xchg
xchg
lock
in
out
pop
jae
int3
jne
inc
mov
das
sbb
sbbb
hlt
stos
mov
push
jmp
icebp
popa
dec
xor
mov
int3
xchg
and
sbb
add
das
in
mov
cmp
pop
scas
das
in
mov
lds
movl
outsl
cmp
inc
scas
and
in
ds
sbb
jae
arpl
lods
hlt
je
mov
rcrl
jmp
mov
fwait
jl
mov
add
sub
cli
jno
test
and
dec
sub
inc
adc
adc
mov
jmp
sub
cld
xor
inc
je
mov
mov
outsl
add
adc
data16
mov
stc
cwtl
insl
int
mov
fs
aas
dec
aad
jnp
lea
mov
jecxz
movsb
jmp
popa
xor
shlb
lds
pusha
fcmovnbe
into
leave
fistpl
out
pushl
xchg
pop
jnp
sbb
push
outsl
xchg
repz
cmc
in
or
out
in
js
addb
add
mul
push
das
mov
push
mov
add
notb
adc
cmp
mov
adc
mov
test
jg
jmp
pop
ret
mov
ret
pop
idivb
movl
lea
mov
mov
jecxz
js
icebp
xchg
das
leave
ffree
loop
sahf
add
or
cmpsl
shrb
imul
pop
adc
out
pop
loop
xchg
cmpsl
cmp
insb
mov
adc
xorl
or
test
dec
ss
out
and
pop
xor
or
repnz
pop
xchg
add
cld
sbb
imul
repnz
jl
lcall
mov
data16
sub
sti
loope
or
arpl
sub
dec
pop
fwait
rcrb
imul
lea
inc
arpl
ja
movsb
lds
testb
jo
push
pop
cmc
jl
jecxz
loope
jne
out
popf
aaa
into
shr
inc
sar
fists
pop
adc
sahf
mov
dec
push
mov
cwtl
out
inc
mov
les
shrl
pop
mov
xor
int3
push
aad
adc
test
and
inc
jnp
sbb
xor
inc
cltd
outsb
cmp
jno
mov
dec
les
mov
add
fcmovb
or
push
sbb
popa
sbb
arpl
add
mov
mov
dec
mov
adc
sbb
cmp
pop
out
cltd
push
stos
aad
sub
ret
dec
cmp
push
out
adc
arpl
mov
mov
xor
add
idivb
adc
push
jae
popl
xchg
mov
mov
mov
jp
push
outsl
mov
dec
lds
sub
movl
es
jmp
pop
push
push
or
sbb
push
cwtl
jle
or
sub
and
mov
sahf
pop
mov
sub
jecxz
aas
repnz
inc
xchg
loope
cmp
testl
pusha
push
ds
jae
imul
mov
std
or
addl
xor
cmpsb
cmp
jbe
and
sbb
adc
add
ljmp
pop
jnp
add
jecxz,pn
test
pusha
aas
ficompl
ja
push
push
sti
fcompl
loopne
or
loopne
fs
sti
push
ret
and
jp
sbb
xchg
or
popa
scas
sbb
stc
stc
leave
imul
xorb
scas
or
cmp
nop
imul
jno
push
cld
dec
pushf
addl
dec
arpl
add
in
jbe
mov
cltd
pop
sbb
sub
test
push
xchg
repz
cmc
lods
inc
enter
xchg
xchg
repz
cmc
xor
inc
mov
dec
xor
sub
aad
in
xchg
pop
lret
mov
negl
stc
sbb
push
pop
imul
jo
push
dec
sbb
inc
dec
jb
push
and
jle
sarl
cmp
mov
and
pushf
mov
xchg
xlat
ljmp
iret
popa
ljmp
std
rorl
fdivr
xor
fdivrl
add
test
cmpl
mov
outsb
mov
push
shll
imul
imul
nop
xchg
adc
jbe
out
jg
pop
int
clc
mov
stc
mov
cltd
sahf
jno
inc
int3
jo
aaa
mov
xlat
test
fnstsw
jg
add
fsubs
mov
out
mov
sbb
xor
popf
dec
iret
and
lea
ret
fwait
pop
int
jg
divl
mov
jbe
aam
cmpsl
push
inc
cli
leave
std
cs
or
in
stc
add
test
pushf
add
mov
popf
dec
pushf
cmp
mov
xchg
mov
nop
cmp
aad
mov
lock
push
add
icebp
mov
sbb
or
out
repz
xchg
cmp
rcrl
pop
rep
loope
cmp
ja
mov
mov
loope
dec
jecxz
jle
xor
xor
sti
rclb
jo
cmp
sti
sub
leave
jns
push
stos
push
mov
scas
sbb
ror
rolb
xchg
lret
mov
sbb
rol
shl
sbb
mov
dec
and
outsl
pop
repnz
imul
repz
mov
inc
frstor
pop
mov
xchg
mov
lret
out
dec
mov
cmp
cmpsb
ret
sub
clc
add
loop
dec
xor
push
emms
sbb
xor
cmp
push
cli
inc
mov
and
int
test
daa
sub
push
insl
mov
sbb
loopne
pop
cmpb
jne
repz
mov
dec
inc
add
daa
sub
or
loop
add
cmpsl
jns
mov
ss
popf
push
lahf
jg
sub
fdivl
das
push
sub
ret
adc
or
lret
inc
lcall
push
ljmp
insb
sahf
rcll
inc
aad
gs
insl
rcrl
mov
dec
mov
cltd
test
sbb
ficompl
ds
lret
mov
cmp
in
xor
cmp
push
sbb
jg
mov
xchg
pop
push
pusha
sti
sarl
mov
iret
adc
mov
and
ds
mov
aad
push
pop
pop
xchg
push
in
xchg
dec
js
add
sub
shrb
cmp
mov
jne
insl
int
enter
rcr
lret
xor
aas
push
or
fs
mov
mov
push
xchg
jge
jae
call
int
push
mov
dec
push
addl
les
rcl
or
popa
mov
pop
inc
loopne
sbb
shlb
xchg
or
add
loope
xor
sub
jno
ljmp
mov
inc
inc
push
and
xor
and
pop
xchg
pushl
repz
fxch
dec
xchg
or
test
dec
popa
add
xor
add
push
push
fs
mov
pop
lods
sub
lods
inc
add
mov
lret
mov
adc
mov
sub
sub
cmp
or
test
rolb
push
sbb
inc
outsb
test
subl
pushf
fwait
sub
cmp
call
dec
sbb
out
mov
lret
fdivp
and
push
stos
gs
loope
gs
call
gs
lret
mov
iret
loopne
or
add
and
movsb
xchg
std
addl
les
sbb
addr16
sub
sub
inc
popf
cmp
mov
inc
faddp
int
and
pushf
push
mov
mov
sub
adc
shll
pop
in
jae
pop
jo
jmp
nop
ret
les
dec
xchg
aam
adc
loopne
out
cltd
popa
sti
inc
add
jl
andl
outsb
add
movsl
aas
iret
jo
out
sub
jl
sahf
cmp
enter
lock
inc
mov
ret
inc
cmpsl
push
cmp
push
adc
sub
scas
xchg
scas
test
scas
imull
inc
insl
pop
stos
js
clc
push
dec
xlat
in
mov
mov
xor
add
adc
stos
push
mov
pop
pop
mov
lret
incb
xchg
cmp
into
dec
jns
in
fdivrl
jmp
fidivrs
push
inc
pop
addr16
std
add
andl
xchg
lcall
add
insb
iret
xchg
lahf
xchg
pop
in
sbb
inc
in
sbb
sahf
ret
sub
stos
mov
cwtl
xorl
sbb
insb
sbb
fistps
imul
cmp
outsl
imul
clc
adc
cmpsl
jo
xchg
cmp
fisubrs
xchg
in
sbb
lret
and
mov
mov
jp
push
push
adc
shll
jle
jmp
push
jecxz
inc
and
adc
sbb
jmp
cmp
xor
inc
std
loopne
outsb
fs
jnp
cmp
jmp
pop
pop
xor
and
dec
shr
push
sub
out
clc
imul
xchg
shll
push
pushf
decl
sti
dec
push
sbbl
fs
xchg
add
int
sar
insb
dec
xor
dec
mov
lds
adc
add
arpl
lods
aas
push
inc
inc
rcl
push
mov
test
mov
mov
pop
xchg
das
inc
xor
mov
pop
inc
mov
lods
adc
loope
ss
fldcw
push
mov
mov
inc
pop
and
push
fbstp
xchg
push
dec
add
mov
shrb
nop
out
cmp
xchg
or
push
rol
mov
push
mov
sub
scas
int
push
and
pop
xchg
enter
mov
int3
or
notl
or
pop
pop
sbb
push
nop
enter
xchg
call
mov
cmp
push
cmc
sbbb
lcall
jg
adc
std
rorb
jmp
sbb
sbb
mov
fimull
iret
cmp
std
xor
mov
sarb
push
push
lea
cmc
push
sub
push
sub
test
and
cmp
out
jo
xor
in
push
and
call
mov
gs
dec
enter
dec
out
add
mov
lret
fs
std
lcall
lret
adc
test
cmp
je
mov
xor
pop
out
sub
xchg
out
rcrl
push
out
int
and
in
fadd
stc
mov
lret
movsl
int3
mov
xchg
xor
imul
push
scas
inc
adc
push
mov
mov
scas
mov
jg
add
inc
rcrb
cmpsb
fdivr
clc
mov
movsw
push
mov
mov
dec
and
xor
cmp
xchg
pop
out
mov
loopne
mov
into
push
lea
mov
fnstenv
push
jmp
pop
jl
lods
movsl
jno
mov
adc
call
test
loopne
mov
and
pop
add
stos
mov
das
scas
fiadds
or
mov
out
subl
addl
and
push
mov
pop
xchg
in
shrl
mov
cld
pusha
mov
xor
mov
fsts
mov
xor
sti
std
inc
hlt
xchg
std
inc
and
cs
arpl
fsub
rclb
xchg
mov
aam
jle
mov
add
repnz
pop
add
adc
xor
pop
in
into
inc
in
xchg
pop
aam
ret
les
sbb
ret
dec
mov
cs
jbe
adc
outsb
or
xor
xchg
lds
loope
lcall
xchg
je
inc
test
pop
inc
imul
pop
or
pop
rorb
and
ror
mov
add
jno
push
xchg
cmc
cmc
movsb
mov
jb
aaa
ljmp
push
rorl
lods
jl
pop
and
mov
dec
scas
in
mov
mov
add
inc
pop
fdivs
mov
mov
ljmp
movb
pop
xorb
cmp
std
or
cs
imul
and
sbbb
ljmp
sahf
sbb
dec
mov
unpcklps
inc
out
mov
test
dec
notl
push
mov
stos
repnz
or
cmp
jae
cmpb
pusha
pushl
jo
or
mov
pusha
push
rcl
sbb
stc
fisubrl
insl
test
fwait
out
push
dec
mov
mov
scas
mov
dec
mov
loope
mov
out
mov
test
les
fs
insl
inc
ds
mov
xchg
pop
push
adc
out
mov
jg
addl
imul
jo
push
sbb
adc
decl
jb
jb
jecxz
pop
rcl
sub
mov
dec
dec
or
in
push
push
lcall
mov
imul
mov
push
in
imul
dec
pop
mov
subb
or
add
xchg
adc
test
mov
pop
xor
add
jb
jb
adc
ja
inc
sbb
shrl
cmp
test
mov
movsl
and
ljmp
in
data16
call
out
mov
dec
imul
inc
or
pop
pop
pop
push
or
je
push
out
mov
bound
pop
push
ljmp
jo
xor
mov
mull
xchg
mov
dec
das
jne
pop
xchg
and
xchg
stos
jbe
aad
aaa
jne
daa
cmp
scas
loope
and
iret
rorb
or
ds
xchg
jecxz
mov
inc
push
xor
dec
scas
cmpsl
sbb
cmp
lcall
xchg
or
bound
ficoml
stos
stc
test
jge
into
lret
sub
sbb
cltd
clc
pop
dec
mov
loope
cltd
push
jecxz
push
jl
push
jo
fisttpl
cmp
push
orb
cwtl
sbb
loop
les
or
out
mov
cwtl
xchg
cmc
lds
repz
sbb
inc
mov
int
sbb
sub
or
in
clc
jle
adc
and
push
inc
mov
xchg
bound
sub
scas
jecxz
dec
mov
cld
xor
loope
dec
inc
adc
imul
icebp
mov
add
test
cltd
mov
clc
movsl
sbb
fwait
les
lods
cmp
lahf
pop
mov
fstl
call
dec
fistpll
cmp
and
hlt
ljmp
mov
push
loopne
cltd
cmp
pop
xchg
std
jg
add
insb
pop
lds
out
iret
daa
push
jmp
nop
ja
inc
inc
push
push
mov
notl
into
sbb
movsb
and
incb
enter
jmp
lods
adc
xchg
pop
cltd
inc
mov
xor
or
add
xor
ljmp
pop
lea
dec
pusha
test
mov
insl
sub
scas
cmp
out
enter
pop
movsl
mov
jne
movsb
jb
jbe
repnz
push
rcl
xchg
jae
mov
xor
adc
xlat
aas
sbb
xorl
mov
mov
xor
fdivp
add
lods
fcomi
mov
fidivrs
push
pop
mov
aaa
lds
dec
dec
repnz
fwait
jmp
fmuls
push
ljmp
sbb
jmp
dec
push
dec
lock
ja
adc
jle
cmp
scas
dec
fdivl
roll
movsl
test
push
add
clc
or
jb
shl
push
push
jg
mov
mov
cmp
test
cs
fsub
adc
rorb
adc
push
push
scas
das
repz
mov
add
mov
jne
int3
mov
push
sbb
call
adc
clc
fimuls
cltd
popa
xchg
fcmovnb
dec
push
jae
mov
mov
lret
or
jo
pop
push
jl
push
add
and
push
and
test
push
cmp
mov
daa
repnz
loopne
or
push
nop
cmp
imul
int
fsubs
mov
or
pusha
ja
cs
mov
rcl
jg
dec
xchg
push
aam
xchg
fwait
insb
pop
jns
int
aaa
fistl
lcall
scas
jae
stos
jns
in
lods
movsl
in
add
nop
ret
inc
bound
push
jns
lret
imul
cmp
adcb
mov
sub
pop
xchg
stos
out
xor
jmp
outsl
jge
aam
mov
outsb
not
dec
jge
xchg
push
jae
cmpsl
pop
adc
outsb
pop
inc
sbb
test
sbb
mov
dec
push
xor
outsl
sahf
dec
cmpsb
mov
cwtl
mov
push
add
lahf
mov
jno
sbb
icebp
mov
push
cltd
dec
loopne
lds
ficoml
int3
xchg
pushf
add
fdivrs
cwtl
lret
or
dec
idivl
in
fidivrs
fmul
mov
dec
inc
or
mov
and
or
mov
xchg
mov
sar
cmp
out
in
sbb
xor
cmp
fs
jp
fidivs
sbb
mov
js
hlt
imul
out
sub
sbb
mov
outsb
cs
je
out
mov
scas
mov
add
mov
sar
push
pop
xchg
push
insb
das
mov
js
and
and
add
jae
pop
push
loopne
cmpb
dec
insl
jg
dec
mov
clc
test
push
aas
inc
cli
mov
iret
or
gs
loope
ret
mov
dec
ds
add
dec
fisttps
notb
daa
mov
bound
or
adc
mov
or
xorl
scas
hlt
jo
jl
andb
sub
cmpsl
fcomi
pusha
dec
div
sbb
mov
mov
aam
and
cmpsb
stos
lock
fbld
sub
adc
lea
mov
mov
mov
insl
jp
xor
pop
dec
xor
pusha
sbb
sbb
mov
adc
clc
test
inc
movsl
scas
outsl
aad
pop
popf
outsb
mov
pop
int3
xchg
jp
lods
pop
adc
sbb
cmp
jmp
jg
imull
cmp
fcompl
mov
xor
xchg
enter
ja
cmc
add
push
adc
push
lahf
clc
mov
popf
mov
xor
fnstsw
jae
mov
dec
int3
mov
lods
sbb
and
adcb
cmpsb
fcmovb
cmp
push
pusha
out
xchg
iret
lret
push
or
mov
repnz
out
mov
out
add
jle
dec
daa
inc
adc
out
sahf
hlt
ss
sti
insl
fldl
in
add
movsl
in
movlps
xchg
jp
xchg
test
cltd
sbb
sti
stos
jbe
mov
sbb
fs
mov
sub
lea
stos
or
js
lods
lret
dec
add
xor
add
out
jo
les
jmp
dec
add
addl
cmp
cmpsb
ffreep
pusha
pushf
ret
outsb
push
xchg
fiadds
out
cmp
mov
mov
ja
jmp
lgdtl
mov
dec
mov
mov
push
push
cmp
iret
ss
mov
lock
inc
loope
rorl
add
push
daa
enter
jg
ret
pop
sbb
popf
call
idivb
in
loop
push
out
icebp
ja
add
sbb
gs
fbstp
sub
loop
push
cltd
sbbb
xchg
sbbb
lods
out
mov
fwait
out
repz
lret
data16
or
sbb
jge
add
pop
lods
sbb
xor
psrld
or
mov
or
pop
or
and
push
jle
inc
imul
movsl
sub
into
pushl
int3
xchg
aaa
imul
scas
int
loope
stos
push
or
jp
std
lds
sbb
xchg
aam
xor
mov
jecxz
sub
lret
xchg
cwtl
pop
mov
mov
jecxz
outsb
mov
or
scas
inc
push
adc
mov
mov
test
sti
sbb
fistpl
mov
pop
popa
or
mov
in
pop
mov
inc
cmp
inc
xor
lret
dec
ficompl
cmp
xchg
push
xchg
sti
xor
leave
ja
aaa
hlt
mov
sarl
sbb
je
andb
pushl
jbe
fwait
andl
xchg
ficoms
adc
pusha
adc
pushf
add
cmp
jns
shll
mov
push
or
or
push
push
jne
adc
aaa
mov
scas
mov
cli
ds
into
inc
add
sub
inc
xchg
addl
jmp
rclb
push
inc
push
inc
push
push
and
inc
push
push
or
scas
mov
push
es
jp
cld
add
insb
mov
dec
adc
sbb
lahf
movsl
aam
int
push
jnp
ljmp
xor
adc
dec
push
cwtl
cmp
and
pushf
cwtl
and
add
aam
pop
add
inc
add
pop
loop
push
scas
lds
inc
and
sti
outsl
and
les
outsl
jmp
test
cmpl
xor
out
loopne,pn
lahf
cmpsb
leave
mov
dec
push
lock
inc
xor
mov
pop
fcom
sbb
aaa
add
inc
mov
call
arpl
push
and
ja
pop
aam
in
outsl
cmp
pop
push
and
lret
push
out
pop
repz
subb
test
jo
ja
jg
pop
jecxz
mov
push
jecxz
or
jl
pop
jns
xlat
jbe
sub
jmp
xor
jl
jmp
xor
jns
xchg
mov
jno
loop
sbb
in
mov
add
add
mov
cmp
jg
push
inc
cmpsb
gs
cmp
shrl
mov
sub
mov
pop
adc
in
xchg
fdivrs
outsl
jge
jo
add
testb
cwtl
xchg
adcl
jne
fidivrl
addr16
inc
mov
jb
test
push
aam
push
xor
and
and
lahf
sbb
mov
cmp
aad
push
iret
iret
test
dec
test
or
mov
add
adc
lea
cmp
jno
push
shr
xchg
sti
hlt
inc
pop
bnd
pop
outsl
fnstcw
mov
mov
stos
push
mov
and
pop
jne
ljmp
addl
imul
dec
sub
outsl
test
jg
nop
or
ss
shll
fnstsw
cmc
sub
pusha
push
pop
jae
outsb
inc
add
sub
loop
xchg
mov
ret
inc
pop
xchg
repnz
add
push
xlat
fildll
stos
ret
push
pop
dec
mov
cmpl
sub
dec
mov
cli
subb
mov
out
sti
lret
adc
sarb
ljmp
pusha
mov
adc
push
pop
xchg
add
xor
mov
popw
jae
push
mov
dec
cwtl
add
mov
mov
cltd
sbb
out
sub
lea
mov
adc
mov
test
xorl
out
xchg
inc
adc
cs
push
and
daa
aam
sub
mov
xchg
iret
push
sti
les
fidivs
in
xor
sbb
pop
inc
push
jno
dec
dec
sub
sbb
sub
cmp
pop
es
fwait
push
push
mov
xchg
adc
inc
mov
ror
add
adc
shl
xor
jg
aas
and
xor
out
pop
ljmp
dec
fwait
cmp
pop
or
mov
xor
pushf
movsb
fstpt
into
fsubrs
and
loop
into
add
jae
ret
or
cmpsb
out
pusha
loope
lahf
pusha
loopne
aas
push
mov
push
inc
sbb
fisttpll
mov
lcall
jnp
movsl
lret
jle
lret
pop
sbb
aaa
jb
add
add
lea
ficoml
int3
pop
xor
push
push
pop
xchg
mov
pop
inc
adc
sub
xor
xchg
ret
js
flds
pop
xor
mov
sbb
or
cmp
fistpll
dec
into
dec
xor
repnz
or
xchg
mov
or
jge
adc
insb
jl
pusha
dec
cli
shll
mov
stc
pop
leave
mov
add
cs
popa
rcll
or
and
pusha
sarb
mov
sahf
jmp
pusha
dec
in
ja
fldt
jle
sub
leave
xorl
push
push
addr16
mov
pop
xchg
xlat
rolb
pop
jne
pop
and
mov
xchg
fucom
xor
mov
dec
push
xor
scas
sub
enter
pop
lret
jno
jge
jne
jns
and
aad
dec
pmaxub
pop
ljmp
cwtl
pop
rclb
jne
adc
sbbl
outsl
add
mov
fmull
pop
mov
jnp
dec
mov
aaa
out
fistpll
aad
cmp
out
jnp
or
fs
push
dec
mov
retw
cmpps
in
cmpsl
sti
xchg
not
mov
and
inc
or
pop
pop
cmpsb
inc
mov
outsb
dec
cmp
mov
push
dec
shlb
cmp
xchg
fsubl
mov
int
dec
sub
pop
and
test
std
or
mov
dec
inc
lret
add
negb
lahf
mov
adc
xchg
and
pop
inc
lret
push
xchg
push
popa
fs
dec
and
push
lret
push
mov
popf
les
cmpsb
nop
out
hlt
push
pusha
adc
or
jns
fwait
lds
cmp
push
negl
shlb
popf
mov
mov
jmp
jnp
jp
sbb
add
inc
ficoml
scas
pop
dec
pop
in
repz
sub
adc
mov
fadds
dec
scas
inc
andl
add
and
pop
pop
insl
or
jae
out
jo
jl
iret
movsb
jb
and
ss
mov
adc
mov
add
enter
cs
add
mov
push
fldz
cmp
rcrb
jmp
es
mov
aad
pop
mov
leave
mov
adcb
out
dec
das
je
je
and
repnz
sub
ds
ficoml
push
push
roll
scas
aad
movsb
mov
rcl
pop
lret
lahf
mov
inc
insl
mov
pop
sbbb
and
or
dec
dec
sbb
out
dec
iret
add
je
xchg
out
test
xchg
testb
dec
int
or
mov
test
pop
cmp
mov
fs
and
sbb
xchg
push
sbb
daa
es
mov
das
rcll
push
mov
pop
pusha
rcl
movsl
out
sahf
dec
xor
es
iret
xor
iret
jecxz
sub
push
xchg
xchg
lock
lods
mov
mov
dec
add
xchg
lret
pop
mov
sbb
hlt
out
icebp
popf
je
xchg
in
dec
mov
cwtl
fdivl
movsb
lcall
mov
mov
and
inc
mov
jp
mov
jg
out
fmuls
setbe
and
imul
or
cli
sub
add
and
loop
loope
sub
jg
aaa
xor
sub
stc
xchg
mov
shll
push
loope
mov
mov
ficoms
xor
call
test
daa
aad
test
sahf
sub
scas
in
setp
pop
daa
in
negl
jge
std
pop
inc
or
aaa
test
adc
adc
sbb
pop
cltd
xchg
in
idivb
inc
in
push
cmp
mov
lds
inc
sbb
jb
out
imul
add
xchg
push
push
pushf
pop
or
jnp
rcll
pop
xchg
push
push
add
stos
xor
sbb
test
or
or
dec
sbb
inc
add
jb
loopne,pn
xchg
fnstsw
jecxz
testl
fcoml
jmp
loope
adc
fs
sub
lret
jbe
ds
and
ficompl
mov
mov
shll
shl
mov
lods
cli
jge
aam
or
rcl
sbb
sub
sbb
icebp
call
jne
in
mov
fisttps
jne
add
adc
test
push
out
mov
xchg
mov
mov
loop
or
dec
icebp
in
add
xor
xchg
icebp
jmp
je
bound
sti
push
sbb
cmp
gs
aam
es
imull
sub
dec
call
imul
mov
insb
pop
ja
mov
lea
movsb
inc
jae
jge
jg
outsb
dec
sbb
shlb
repz
cmpsl
loop
lret
lock
or
cmc
test
fmul
jg
scas
dec
movsb
mov
pop
add
mov
xchg
mov
xchg
aad
loop
pop
bound
lcall
test
out
loop
xchg
loopne
pop
push
jge
cmp
int3
lahf
mov
sti
cmp
sbb
loop
dec
aam
dec
shlb
xchg
adc
insl
test
xchg
inc
push
fcom
fnstenv
lcall
dec
scas
pushf
flds
ljmp
imul
in
out
fisubs
sbb
mov
dec
add
lock
add
fwait
sahf
loope
outsl
mov
add
mov
xchg
and
mov
ret
pushf
push
scas
ret
mov
lahf
andl
jmp
mov
sub
lahf
std
pop
push
xchg
dec
or
mov
sahf
scas
fs
jle
or
pop
scas
shrl
enter
sub
sbb
and
mov
jnp
pop
xchg
test
ds
into
push
loope
pop
jle
popf
xchg
inc
push
js
and
sub
cmp
sub
xchg
dec
ret
sbb
fcmovb
lahf
xchg
je
stos
cmc
fisttpll
pop
jl
mov
mov
shl
xchg
clc
jecxz
dec
imul
adc
cld
lcall
loop
movsl
dec
jge
push
lock
loop
cltd
pop
std
xchg
filds
add
mov
sbb
mov
lret
arpl
outsl
rcl
lcall
push
jge
push
mov
sub
push
fwait
out
hlt
out
call
ds
or
addl
pop
pop
out
shll
mov
out
jle
jo
jnp
pop
cli
cld
push
pop
or
mov
ret
test
and
xor
pop
cmp
in
adc
pop
mov
aas
dec
and
gs
xor
sub
xorb
jecxz
faddl
push
cmp
jb
repnz
in
daa
hlt
mov
dec
es
mov
push
pushf
jnp
leave
dec
jl
ficoml
int3
arpl
cmp
mov
or
out
aas
in
sub
add
scas
xor
sub
adc
lods
pop
rcrl
cmp
ret
jns
mov
je
sub
and
dec
lcall
mov
cmpsl
data16
pop
dec
out
repnz
push
push
cli
test
mov
lods
pop
xor
adc
pop
sbb
push
or
stos
data16
inc
cmp
jge
aas
sbb
loopne
mov
into
lcall
ja
ret
and
scas
jecxz
loop
insl
pop
push
xor
jbe
jne
and
jns
jns
inc
cmp
lods
push
shll
jne
jb
in
mov
inc
cltd
add
sbb
sub
in
mov
xor
ret
or
xor
outsl
mov
dec
popa
scas
lods
pop
push
mov
lret
fsubl
jmp
sbb
pop
pop
stos
bound
cmp
in
pop
adc
pop
repz
jecxz
addl
pop
inc
imul
mov
xor
push
push
lea
fildll
or
insl
fwait
push
mov
mov
aaa
clc
xor
cmp
stos
dec
pop
aad
dec
xchg
test
push
xchg
cld
fistl
roll
xlat
xchg
and
push
sbb
adc
shlb
test
leave
xchg
sbb
lock
imul
mov
out
popa
pop
and
enter
jge
imul
add
mov
dec
cmp
inc
daa
lret
iret
dec
ds
xchg
ljmp
dec
inc
pop
xor
push
mov
enter
int3
add
mov
ljmp
sarl
out
push
sahf
sbb
lcall
sbb
cmc
dec
popa
popf
hlt
andl
mov
mov
aaa
rclb
bound
jae
push
mov
push
jne
xchg
xor
roll
or
inc
mov
xchg
in
pop
mov
ljmp
aaa
xor
jg
mov
push
les
mov
mov
rorb
fchs
mov
add
lcall
int3
fildll
sub
mov
and
and
cmp
push
lods
out
mov
jp
sub
inc
or
outsl
mov
or
stc
outsl
mov
js
fistpl
ljmp
dec
cs
loope
add
roll
mov
test
push
push
ss
cmp
xchg
push
insl
aaa
or
repnz
popf
cmpsb
nop
and
push
cmpsb
sti
std
cli
rcl
mov
dec
push
jne
outsb
aas
dec
mov
iret
inc
jecxz
jge
fstl
popf
sar
sub
mov
shlb
test
adc
inc
aas
mov
push
pop
inc
out
push
loop
insb
mov
xchg
out
sub
rolb
jmp
mov
mov
pusha
ret
pop
adc
mov
and
cmp
push
push
fstpl
cwtl
mov
mov
sbb
mov
icebp
cmpsl
cltd
lret
aas
negb
mov
lahf
ficoml
sahf
cmc
jne
dec
test
sahf
inc
fimull
shrb
xchg
inc
les
jb
mov
imul
mov
lods
cmp
loopne
inc
adc
insl
mov
ljmp
jmp
shrb
nop
popf
leave
in
xchg
std
add
mov
insb
mov
out
mov
notl
push
adc
mov
dec
aas
stos
pop
daa
sub
movsb
sub
mov
sub
outsb
add
and
pop
in
pop
sub
insb
test
sbb
jae
in
subb
stos
movsl
popf
aaa
adc
add
mov
pusha
arpl
push
cmpb
outsl
arpl
testb
cmp
inc
mov
jl
cmp
push
dec
xor
mov
fs
or
cli
jno
ss
and
inc
adc
cmc
rclb
data16
lea
or
or
push
xorb
push
rclb
xorl
hlt
stc
shrl
cwtl
adc
xor
sbb
in
push
mulb
mov
mov
push
fistpll
mov
fwait
nop
les
adc
mov
mul
xchg
lret
clc
out
cmc
mov
jns
ljmp
pusha
or
std
inc
inc
fcmovnb
add
dec
mov
les
dec
jmp
imul
and
sbb
sub
push
push
inc
push
insl
cmc
add
add
and
bnd
and
mov
mov
push
lret
lcall
aas
xchg
adc
cmpb
cltd
jge
leave
mov
jp
shr
or
lret
fnsave
dec
cltd
ds
add
cmp
add
xor
test
add
pusha
xchg
in
sbb
or
push
mov
mov
gs
push
inc
cld
xchg
push
out
adc
pop
xlat
out
out
inc
das
js
rclb
insl
mov
ljmp
loop
push
pop
loopne
scas
aam
sub
out
add
sahf
xorl
adc
fwait
in
ja
ficoml
xchg
adc
in
sarb
nop
nop
or
out
into
sbb
loopne
lret
sub
push
nop
add
lret
fwait
sbb
sar
scas
pop
loope,pn
pop
sub
add
lret
jl
movsb
mov
or
hlt
repnz
and
adc
leave
and
fcomps
xchg
inc
sbb
mov
ljmp
frstor
sub
push
les
ret
pop
in
mov
dec
xchg
into
ret
test
rol
mov
xchg
inc
jmp
or
sti
aam
in
fsubr
daa
stos
push
jns
rolb
sub
inc
mov
pop
sbb
mov
adc
mov
loope
sbb
xor
pop
add
test
cli
popf
push
mov
and
mov
inc
mov
mov
jge
out
jne
mov
adc
cmp
jmp
je
mov
inc
pop
insl
ret
lock
pop
xchg
xchg
add
xchg
roll
pushf
test
push
xchg
jbe
mov
fmul
hlt
leave
outsb
sbb
aam
ffreep
and
das
push
aam
mov
pop
pop
cmp
adc
stos
mov
call
outsb
mov
or
ss
repz
or
mov
jecxz
lods
insl
jo
mov
pop
insl
dec
cs
rcl
mov
and
dec
xchg
xor
push
xchg
out
mov
jp
outsl
loopne
cmpsb
cmp
fiadds
lret
push
xchg
mov
mov
and
nop
adc
rcll
test
fisubrs
add
faddl
and
add
ret
xlat
dec
mov
mov
addb
js
xor
pop
mov
jne
jle
xor
inc
mov
sub
xor
sub
xlat
frstor
inc
push
sub
push
cld
sub
icebp
sub
xor
ret
xor
test
xor
gs
int
lret
outsb
xor
shrl
inc
jnp
cmp
sub
push
out
mov
inc
dec
cmp
sub
shr
out
jnp
adc
ss
popf
inc
xor
and
outsl
dec
mov
lret
xchg
mov
mov
xor
mov
push
les
sbb
lods
fimuls
xchg
jno
sbb
mov
std
pop
sarl
pop
js
inc
inc
pusha
out
xor
bound
cmp
cmpsl
and
push
test
sti
xor
xchg
jl
mov
insb
jbe
jo
pop
lods
push
in
pop
ret
sti
cmp
pop
push
gs
jbe
xor
cmpsl
jnp
sti
mov
mov
sub
dec
sub
jae
or
xor
enter
in
push
mov
add
subb
pop
adc
pop
jb
cwtl
cwtl
dec
sarb
pop
and
adc
mov
stos
xchg
push
into
pop
dec
add
shlb
clc
xor
aas
xor
stc
inc
out
push
dec
adc
in
cmpsl
sbb
ret
pop
mov
add
jno
jno
push
mov
call
xor
xchg
dec
adc
cltd
jb
sub
mov
sbb
push
shl
xchg
sub
push
mov
ss
jb
insb
xor
dec
or
fdivl
mov
outsb
das
cmc
pop
jmp
xchg
addr16
push
pop
xchg
pusha
arpl
aad
into
jb
aam
sti
fistpl
movsb
jmp
leave
inc
aas
and
lret
mov
aad
mov
js
push
push
jle
push
cmpsl
pop
or
insl
icebp
fistpll
mov
push
repnz
push
loope
xor
daa
testb
mov
notb
push
sbb
insl
add
mov
fisubs
pop
sub
push
mov
or
icebp
aam
pop
mov
cmp
mov
push
xlat
loop
cs
pop
jp
add
cmpb
shrb
xor
repz
int
imul
sti
adc
sub
adc
xor
imul
out
sbb
imul
mov
out
cli
or
dec
outsb
les
adc
das
mov
or
test
push
jae
jmp
mull
outsb
pushl
mov
in
stc
les
insl
mov
xchg
daa
mov
call
cli
loopne
add
mov
and
cmp
and
outsb
jl
into
mov
pop
and
movsb
cmpsb
mov
lahf
xchg
push
stos
call
push
fstpt
cld
mov
cmp
mov
insl
jecxz
pusha
jl
jns
cmp
lret
pop
jg
inc
and
sbb
add
push
inc
dec
jo
shrb
mov
inc
rcr
movsl
das
sbb
push
xor
dec
mov
sbb
adc
inc
mov
in
dec
sbb
mov
iret
mov
int
or
add
jno
or
lahf
insb
scas
mov
add
ljmp
and
xor
pop
enter
lret
cmp
imul
subl
cmpsl
mov
fnsave
mov
xor
sahf
sub
mov
lock
out
cwtl
aad
add
mov
test
add
arpl
cmpsl
std
cmp
ret
je
mov
jle
mul
cwtl
push
and
adc
jmp
jb
leave
bound
jmp
cmp
in
or
rolb
notb
mov
cmp
mov
aad
test
push
xchg
inc
mov
leave
pop
pop
stc
adc
pushf
int3
xlat
add
cmp
sub
jnp
sbb
pop
jne
mov
loop
subb
nop
std
mov
imul
jmp
enter
in
or
pop
and
add
add
push
cs
les
xchg
dec
push
or
sbb
mov
aaa
stc
inc
pop
int
cmp
sbb
jmp
mov
and
cltd
lods
je
pusha
jae
shll
push
sub
addr16
xchg
add
decb
out
call
xor
popf
xorl
ljmp
inc
mov
out
pop
std
lcall
inc
daa
js
fiadds
test
fidivs
test
cmc
pop
mov
and
lock
adc
shrl
mov
movsb
lods
add
insb
adc
adc
imul
repnz
lahf
fs
jecxz
mov
test
aas
popl
subb
dec
sub
pop
stos
sub
lea
hlt
std
jle
nop
dec
in
adcl
stc
push
ljmp
or
xchg
dec
push
mov
insb
push
dec
dec
push
mov
dec
push
inc
mov
stos
and
cmp
xor
mov
mov
adc
sub
loope
sub
mov
adc
adc
stc
xchg
stos
test
jnp
das
cli
ret
pop
or
sub
mov
mov
xchg
mov
or
or
and
fwait
add
sbb
adc
xchg
es
call
inc
stos
jge
inc
js
push
insb
mov
jmp
aaa
je
cmp
xchg
push
fcoml
out
daa
or
div
xchg
pop
sbb
and
stos
ret
xor
fadds
rcll
dec
mov
je
adc
enter
mov
push
insb
dec
dec
push
inc
in
sub
pop
pushf
fisubrl
shll
in
je
mov
cli
jnp
ret
aaa
sbb
pop
int3
mov
lcall
repnz
jo
stos
mov
xchg
xchg
ret
xor
out
cmp
and
pop
sub
mov
sub
mull
add
out
sarb
gs
cwtl
loope
add
and
mov
in
dec
fcmovbe
fisttps
add
mov
dec
cmc
call
lods
jmp
xorb
fwait
ret
lahf
outsl
ficoml
js
repz
mov
dec
and
jg
cs
jae
or
stos
shll
sbb
jae
pop
sub
in
mov
mov
imul
sarb
xor
inc
addr16
pusha
bound
sbb
popa
clc
fldl
xor
call
sbb
push
mov
mov
lock
sbb
rcr
inc
sub
pop
imul
add
or
cmpsl
ret
xchg
add
loopne
jg
hlt
lret
repz
adc
ror
dec
test
sbb
lock
clc
jo
out
shl
or
cmp
xchg
jnp
pusha
and
cmpb
sbbb
hlt
mov
sahf
sahf
imul
loope
sti
mov
pop
rcl
test
shll
push
movsb
sbb
push
mov
in
jl
xchg
out
jb
sbb
push
out
mov
mov
sub
jno
adc
inc
daa
sub
insb
addr16
aad
es
pop
jge
in
int3
or
mov
decb
scas
lret
cmpb
fimuls
add
sub
mov
push
popa
loopne
iret
fwait
ljmp
sbb
dec
push
rcl
lods
repz
outsb
fwait
stos
xchg
pop
cmp
jae
clc
cmc
push
jecxz
ds
loop
divl
lds
sub
sbb
loop
sbb
ret
add
faddl
jl
xor
sub
rorb
into
push
dec
or
add
movsl
push
addl
pop
scas
ja
test
cld
fidivs
dec
inc
xlat
js
mov
fists
daa
and
or
sub
cmp
dec
sub
clc
pop
aam
call
mov
push
xchg
dec
leave
or
jns
icebp
in
xchg
mov
int3
mov
cmp
bound
aad
sbb
cmp
and
push
xor
out
std
mov
mov
test
cmp
xor
fwait
jg
into
nop
mov
dec
add
imul
daa
inc
repz
and
cmp
xor
mov
xchg
mov
aaa
and
nop
lahf
mov
and
pop
fbld
sbb
imul
std
xor
mov
add
dec
stos
inc
scas
mov
push
out
push
or
pop
stc
das
or
xor
and
hlt
js
aam
pop
shlb
dec
pop
stc
notb
mov
stos
xor
rep
jmp
aam
adc
sbb
mov
sub
pop
sub
jge
xlat
lahf
xor
cmpsl
sbb
out
adc
dec
test
mov
push
daa
sbb
stc
xchg
es
es
call
jb
xchg
pop
add
or
lods
inc
fbld
into
xchg
mov
sbb
outsb
adc
je
pop
sub
dec
xor
test
enter
fnstsw
lea
adc
dec
cmp
mov
gs
jp
es
dec
in
xchg
and
ljmp
mov
jne
andb
pop
shrb
and
test
adc
imul
daa
subb
sub
add
sahf
mov
jnp
mov
inc
jmp
scas
or
sub
je
jmp
ja
inc
xorl
mov
mov
inc
pop
lods
jns
gs
jae
sub
xor
sub
push
adc
adc
icebp
adc
xor
xorl
ror
mov
addr16
clc
pop
ja
cli
add
jb
jo
xchg
jae
xchg
inc
pop
out
mov
lret
add
pop
scas
insb
add
loope
xchg
iret
jnp
sbb
mov
mov
iret
push
insl
decb
roll
arpl
jmp
ljmp
sbb
cs
adc
push
hlt
pop
cmp
pop
sbb
pop
sbb
out
sbb
pop
scas
cli
mov
jecxz
push
push
adc
cmp
pop
add
in
fcomi
dec
fisubs
xchg
push
lods
lock
adc
inc
push
jmp
repz
xor
cli
mov
scas
loopne
xchg
jb
in
ffreep
stos
jno
out
ss
clc
xchg
dec
outsb
mov
push
pop
inc
fs
lret
outsb
je
fidivrl
push
jge
xchg
imul
sub
not
inc
dec
js
xchg
cmp
mov
adc
cwtl
cld
push
icebp
daa
sahf
lock
and
test
movsl
lea
mov
xor
punpckhwd
adc
int3
xor
popf
pop
add
dec
cs
or
repz
movsb
pushf
sar
inc
fdiv
cli
xlat
xor
out
pop
xchg
lret
mov
inc
pop
lods
mov
jo
add
fimull
out
int3
inc
inc
sbb
cli
push
clc
cmp
push
aam
outsl
fsubr
fwait
push
pop
add
pushf
and
clc
mov
pop
ret
cmp
imul
int3
push
daa
inc
scas
fucom
xchg
or
or
hlt
add
dec
fadd
mov
xor
add
cmp
xor
jnp
stos
stc
lods
cmc
cmp
mov
and
repnz
mov
adc
lods
pop
clc
dec
sti
arpl
xor
arpl
adcb
pop
cmpb
cmpl
popfw
cld
or
mov
shlb
lahf
orl
loope
sub
aas
sbb
or
mov
loop
in
xor
push
popf
ret
int3
cmpsl
sti
jl
negb
montmul
cmpsb
lds
dec
push
mov
icebp
jnp
xor
sbb
inc
outsb
cmp
lea
daa
cmovge
out
shl
jle
mov
mov
sub
sbb
test
mov
xchg
fs
xchg
or
push
and
lret
mov
ret
sahf
push
lcall
stos
sub
imul
xchg
xor
in
ds
insb
adc
pop
sarl
aas
dec
inc
xor
mov
imul
pop
in
jle
loop
push
call
push
fcomps
lds
mov
mov
shl
push
jns
cmc
jnp
mov
dec
aam
aam
les
xor
or
adc
push
sbb
mov
loopne
ss
pop
mov
out
adc
ds
cmp
cmp
inc
push
cwtl
lods
outsl
pop
add
scas
jmp
adc
push
lds
cwtl
cli
sbb
dec
and
mov
add
jg
sub
jno
push
xchg
testb
dec
inc
sbb
mov
cmc
adc
std
pop
push
ja
outsl
xchg
push
ds
inc
jp
push
dec
in
cmp
scas
loope
sti
cmp
mov
lods
lods
jp
xchg
mov
push
dec
inc
jno
out
adc
ljmpw
push
dec
cmpsl
push
inc
decl
lcall
leave
call
lcall
adc
std
dec
rcrb
cltd
in
cmp
dec
dec
xor
negb
daa
push
popaw
mov
arpl
pop
jmp
dec
js
jecxz
sbb
inc
movsb
test
add
pop
mov
sub
shrb
push
fcoml
cmc
fdivl
and
leave
shlb
in
mov
ljmp
inc
pop
test
cmp
jo
xchg
mov
mov
ja
xor
dec
and
adc
sub
adc
jne
adc
lcall
rolb
xchg
shl
push
dec
mov
pop
push
lods
xchg
lock
popa
mov
mov
dec
sbb
or
mov
mov
scas
sbb
test
mov
push
cmc
push
cmp
xchg
test
sahf
orb
sbb
xchg
hlt
and
mov
aas
mov
jb
sub
mov
jge
xchg
pop
xor
mov
movsb
pusha
inc
and
or
mov
cmp
mov
pop
lea
push
dec
hlt
or
sub
or
and
rol
andl
or
xlat
stos
fdiv
pop
xchg
adc
dec
inc
pop
inc
cmpsl
outsb
xor
mov
incb
fsts
daa
dec
jl
out
xchg
daa
aad
mov
cmp
inc
push
or
add
enter
push
faddl
jecxz
xor
je
xor
and
fs
pushf
mov
icebp
jb
jle
jg
mov
jne
mov
repnz
mov
lret
cmp
idivl
adc
pop
mov
push
push
sbb
rcrb
into
cltd
dec
mov
add
rol
jbe
imul
mov
mov
js
in
cltd
stc
jmp
lock
sub
sub
test
lods
sbb
repnz
hlt
dec
popa
xchg
in
push
or
mov
inc
jmp
jbe
inc
pop
int3
xlat
mov
scas
lods
movsl
loopne
out
aaa
xchg
or
mov
xor
mov
xor
hlt
pop
xchg
fildll
lods
or
testl
insb
add
iret
mov
push
popa
addb
push
ds
sarb
mov
out
lcall
out
xchg
shl
jge
int3
mov
notl
cwtl
rolb
lret
ret
loope
cmpsb
stos
lret
loop
ror
ror
data16
lahf
repz
pop
or
push
and
add
cmpsb
mov
cmpsl
imull
and
xor
xchg
es
int3
sbb
lahf
mov
mov
pop
fildll
push
sbb
mov
xchg
call
xor
or
cmp
sbb
mov
insb
fimull
add
lods
jnp
mov
adcb
xlat
std
dec
stc
mov
add
out
lret
and
lods
pop
cs
loopne
push
and
mov
jnp
out
or
adc
cmpsb
scas
into
rep
loop
push
testb
jp
sbb
es
je
mov
mov
and
and
rorl
loope
add
mov
xor
mov
xchg
outsb
sbb
pop
jnp
push
xchg
mov
loope
filds
ja
pop
mov
pop
aas
adc
push
xor
decb
adcb
pop
dec
mov
repnz
or
lcall
cmp
movb
sbb
cli
mov
mov
into
mov
push
dec
imul
outsb
popf
inc
mov
cmp
outsb
std
xchg
movsl
push
negb
jbe
push
jmp
mov
jns
pop
dec
sarl
push
adc
xor
aaa
inc
dec
or
lock
orl
sub
sub
loop
hlt
and
mov
push
outsl
jno
inc
lahf
stos
push
inc
mov
mov
pushf
jmp
add
fidivrs
push
test
ret
mov
movsl
fisubrl
xorl
pop
xchg
mov
push
fsub
aaa
dec
and
pusha
ja
cmpsb
adc
stos
imul
and
hlt
lea
aas
outsl
ret
cmp
clc
out
xor
shrl
push
bound
mov
xor
imul
cmp
inc
aad
xor
lar
les
xchg
mov
adc
idiv
lahf
stos
popa
pop
inc
inc
adc
fchs
cli
mov
movsb
mov
mov
cmp
add
xor
les
or
icebp
mov
cwtl
push
xlat
cmc
jns
sbb
mov
add
jae
loope
decb
jp
mov
and
push
mov
xchg
lods
mov
mov
xchg
ja
mov
jl
mov
pop
sub
mov
subb
xlat
loop
sbb
or
popf
ret
push
cmp
test
std
jmp
dec
jmp
and
and
push
addr16
pop
rcl
aad
mov
fs
ret
mov
out
les
or
sti
cli
into
xchg
mov
dec
pusha
imul
jae
loop
movb
cmp
adc
test
pop
pop
adc
sub
inc
or
bnd
mov
not
fnstenv
cmc
stos
mov
nop
cmp
les
mov
xor
push
dec
push
jmp
es
push
jne
sbb
pop
movsl
pop
std
adc
dec
sub
negl
mov
add
pop
rol
push
dec
and
arpl
add
sti
push
lret
gs
fidivrs
add
lret
xor
popa
mov
mov
mov
cmp
sbb
xlat
mov
js
sub
imul
inc
rcr
pop
jecxz
add
outsb
test
inc
sbb
mov
nop
or
aas
popf
ljmp
outsl
mov
jae
pop
std
aad
dec
adc
sub
rol
inc
add
xchg
adc
test
cmp
ret
fdivs
sbb
lahf
fisubs
icebp
push
arpl
jb
cwtl
pop
sbb
mov
stc
xchg
pop
sbb
dec
push
mov
sub
rolb
movsl
je
dec
out
cmc
int3
mov
mov
test
fcompl
out
cld
bound
in
jb
arpl
les
addl
aas
lods
int
and
cmpsl
pop
xor
or
outsl
or
rclb
dec
addr16
or
xor
inc
gs
adc
loope
ljmp
dec
ljmp
dec
rclb
into
mov
repz
add
js
pop
fxch
push
mov
scas
ljmp
sub
call
sub
xchg
mov
leave
add
int
and
repz
jmp
aas
inc
call
add
dec
shll
cmp
or
xor
mov
push
lods
inc
or
jnp
adc
pop
pusha
lret
mov
out
icebp
clc
ret
jecxz
test
sahf
jae
ljmp
jmp
push
cmpsb
push
push
sbb
inc
ret
and
mov
push
loopne
add
push
inc
sub
into
jl
push
int3
fwait
cwtl
loopne
dec
mov
lock
mov
jbe
leave
push
lock
cmp
mov
mov
rcr
cwtl
inc
repz
jne
jge
test
pop
into
dec
in
sbb
rol
movsb
adc
clc
push
sbb
addl
xor
jbe
inc
lods
out
out
xchg
popa
push
dec
cltd
xlat
mov
xor
fsub
iret
cltd
inc
mov
int3
test
jae
xchg
mov
jg
movsl
ds
shlb
bound
xor
jo
mov
popa
sbb
mov
jae
idivb
loop
jbe
push
int3
dec
std
xchg
push
clc
cs
sub
xor
jnp
subl
aaa
mov
push
inc
cmp
popa
inc
dec
fmuls
cmpsb
jmp
inc
jo
mov
mov
xorb
dec
or
std
mov
cmpl
icebp
loope
leave
or
mov
mov
dec
mov
cmp
or
loop
jecxz
insb
femms
cwtl
imul
adcl
out
in
mov
inc
inc
inc
add
adc
pop
dec
sub
or
xchg
cs
jne
insl
pop
adc
scas
xchg
ret
xor
pop
lea
dec
adc
stos
or
test
sar
cmp
jmp
aam
imul
push
sub
mov
and
cmp
mov
mov
pushf
inc
cli
xor
inc
dec
in
pop
adc
add
jge
es
xchg
sub
mov
ret
adc
pop
mov
rcrb
sub
and
cwtl
out
mov
cmp
and
in
nop
dec
hlt
adc
ret
mov
adc
mov
jnp
jns
addb
xchg
data16
nop
inc
cs
push
pop
jge
mov
or
test
push
xchg
dec
dec
das
and
outsl
jnp
scas
mov
lods
iret
clc
jle
iret
mov
test
jecxz
adc
repnz
push
sbb
ret
popf
sar
inc
mov
and
loope
xchg
stc
in
add
xchg
fistps
jb
or
pop
xchg
and
xlat
sub
sbb
shll
test
in
cmp
inc
cltd
mov
jmp
mov
mov
push
pop
stc
xchg
mov
pusha
test
xor
jae
sarb
xor
cmp
xchg
in
or
xor
mov
dec
cmc
aad
aam
sbb
or
nop
lret
addr16
push
push
nop
cmp
out
bound
mov
mov
stos
shlb
mov
ffreep
pop
clc
add
aam
xchg
ss
add
push
cld
and
jp
insl
icebp
inc
ja
in
hlt
mov
pop
mov
inc
stc
cld
xchg
mov
or
rclb
in
jmp
jge
sub
mov
insb
inc
fstps
arpl
ss
mov
mulb
in
cwtl
push
mov
cwtl
add
and
mov
mov
cmp
pop
mov
pop
insb
in
mov
dec
cwtl
popf
inc
ljmp
mov
mov
adcb
push
rcl
test
repnz
ljmp
data16
repz
sub
jp
cmp
imul
rorl
jl
call
jno
int3
dec
mov
adc
ss
xchg
or
movd
jle
sbb
imul
inc
pop
mov
sub
test
ret
pop
out
mov
pop
push
cs
push
dec
mov
in
cmc
add
adc
in
push
call
pop
adc
jp
in
sbb
jmp
add
shl
cmp
push
push
loopne
sahf
push
lock
dec
lods
mov
leave
mov
pop
fsubp
loopne
shll
enter
dec
sahf
xchg
mov
mov
xor
add
fstpl
scas
and
js
outsb
cwtl
mov
hlt
xorl
ret
mov
mov
and
dec
data16
xor
cld
cld
jp
test
or
pop
es
shlb
adc
cwtl
out
cld
cmp
test
add
aas
cwtl
in
clc
inc
pusha
mov
push
int
mov
add
lods
pusha
xchg
ret
mov
xor
ds
mov
dec
aad
mov
pop
leave
stos
xchg
loop
sbb
dec
cmp
xor
add
sbb
out
movsl
mov
jmp
fdivl
xchg
or
sub
stos
jle
icebp
add
mov
in
dec
xor
push
xor
addr16
pop
enter
rdpmc
sti
dec
fwait
jecxz
adc
mov
mov
das
mov
xor
fwait
or
pop
lcall
in
dec
and
les
arpl
mov
adc
bound
ja
dec
fdivrl
adc
cmc
jb
popf
mov
das
lret
mov
fwait
sub
cmp
or
sbb
and
cltd
fwait
mov
pop
pop
stc
rcrl
add
rcrb
insl
mov
pop
push
jg
inc
ret
push
arpl
int3
test
mov
shll
aad
pop
fmul
nop
lock
cmp
sbb
enter
iret
fstl
stos
inc
inc
push
jns
jle
xlat
cmpsl
inc
std
in
dec
sub
cmp
pop
fdivrl
inc
ret
mov
test
xor
lds
cmp
out
inc
test
fdivs
and
insb
subb
push
xor
cltd
push
pop
pusha
jle
stc
jecxz
jle
sbb
sub
rol
or
popa
rorl
hlt
ret
ds
cmpsl
dec
xchg
add
mov
pushf
and
fcomi
pop
out
cltd
mov
and
cld
hlt
jnp
dec
xor
sbb
and
add
lods
adc
shll
test
sti
dec
inc
or
out
mov
or
jnp
inc
jns
push
fdivrp
daa
pop
andl
out
in
mov
test
and
inc
adc
xor
testl
fildl
in
add
cld
or
data16
pop
add
and
or
dec
aaa
pop
xlat
arpl
sub
in
lods
cmp
in
lcall
clc
sbb
push
xor
push
jb
sti
add
pushf
sub
xchg
pop
movsl
dec
mov
and
adc
pop
aas
inc
xor
imul
std
lock
mov
adc
nop
push
das
out
sub
mov
jg
mov
lds
imul
lods
setnp
xchg
xor
mov
repnz
fidivrl
xlat
pop
int3
xchg
jmp
pusha
pop
or
out
add
xor
nop
ss
add
pop
int
nop
rorb
push
jb
sti
pushf
in
fsub
aam
pop
add
icebp
push
jnp
faddl
filds
jae
xchg
aaa
push
stos
and
xor
inc
lahf
mov
add
mov
xor
xor
fldl
pop
sahf
test
add
cmp
pushf
test
adc
sbb
xorl
test
mov
lea
adc
mov
popa
cltd
push
cmc
lods
mov
divb
pop
pop
jl
and
fcomip
push
xchg
pop
mov
sbb
cltd
xlat
test
lods
aas
cmpsb
mov
jno
insl
mov
cmp
out
xor
push
pop
push
pop
or
aas
push
push
fnsave
outsl
insl
mov
mov
inc
stos
scas
push
or
jae
and
xchg
cmp
cmp
sbb
cmc
xchg
adc
int3
sub
cli
push
push
jno
clc
into
fisubl
shll
fwait
mov
outsb
pop
rcrb
scas
ja
clc
pushf
jae
lock
pusha
int3
push
call
mov
or
jns
push
mov
inc
jb
pop
mov
adc
sbb
or
xchg
test
xchg
jbe
sub
jnp
movsl
add
imul
cmp
mov
pop
insl
xor
xor
jns
jp
mov
mov
clc
mov
mov
cmp
sbb
roll
packuswb
sbb
xchg
pop
gs
add
cmp
mov
into
mov
sub
out
push
mov
mov
stos
test
pop
pand
xor
popa
add
outsl
sbb
pop
aaa
pop
jns
popa
mov
mov
jp
sbb
cmc
mov
jecxz
leave
stc
pop
xchg
inc
sub
sub
lahf
cmpsb
pop
insl
aad
push
sbb
outsb
or
sub
sbb
lds
icebp
add
cmc
hlt
out
mov
test
test
pop
ror
cmp
aam
pop
hlt
mov
and
mov
adc
dec
sbb
jecxz
ret
push
inc
mov
inc
bound
push
out
sub
subb
cmp
cli
in
stos
jns
loop
mov
adc
inc
mov
imul
mov
aam
mov
shrb
mov
mov
mov
mov
xlat
or
insl
test
mov
xchg
dec
xchg
enter
int
adc
les
pushf
mov
rep
mov
and
out
pop
push
dec
shll
stc
pop
adc
push
out
pusha
scas
call
test
mov
cmp
iret
push
and
sbb
jnp
imul
and
jmp
je
pop
iret
push
mov
mov
fcmovu
xor
jecxz
push
shll
xchg
add
sarb
dec
pop
out
xor
cmc
out
arpl
movsb
sbb
xchg
mov
cmp
add
pop
clc
lods
add
jmp
push
push
test
daa
stos
pop
or
pcmpgtd
shl
dec
add
addb
mov
das
mov
imul
xchg
mov
xor
cmpsb
xchg
fidivl
sbb
sahf
scas
cld
lcall
xchg
dec
push
hlt
dec
dec
ret
movsb
mov
test
sbb
xor
jge
scas
jge
outsb
sub
mov
cli
and
lahf
lock
push
push
push
rolb
aad
mov
cmp
push
out
xlat
scas
mov
cmpsb
sbb
inc
mov
imul
mov
mov
inc
fxch
jge
cmp
stc
mov
daa
inc
push
sti
mov
jae
gs
dec
aas
insb
das
insl
sub
cmp
inc
mov
in
mov
dec
jecxz
push
nop
xorb
adc
lret
sbbb
xchg
hlt
in
sbb
pop
fucom
stos
and
mov
xor
dec
push
sbb
xchg
imul
loop
lods
or
std
dec
pop
fdivrl
loopne
cmpl
xchg
add
scas
mov
test
inc
dec
dec
mov
popf
xor
inc
aad
clc
testl
xor
jo
mov
out
mov
sub
xchg
movsl
loopne
into
adc
mov
mov
sbb
sti
in
lcall
push
adc
repnz
movl
mov
or
push
push
out
lds
mov
push
or
lcall
sahf
push
ja
popf
jmp
sbb
mov
gs
or
cwtl
push
inc
jp
mulb
push
pop
mov
ja
scas
push
pop
push
stos
stos
push
into
pop
add
jno
rcr
shlb
push
jo
je
push
fwait
dec
fcoml
or
add
mov
shl
imul
jge
test
xor
aam
shrl
in
addr16
jge
pop
mov
dec
aaa
jp
add
loopne
cmp
sti
test
fwait
adcl
stos
rolb
out
jns
sarl
add
cmpsl
fisttpl
clc
movsl
xchg
inc
xor
jmp
jnp,pt
pop
lcall
sbb
mov
add
push
out
cmpsl
jmp
bsr
cld
inc
sub
int
inc
out
sub
mov
cwtl
push
mul
mov
pop
negl
push
add
iret
mov
pop
lods
out
push
popf
sbb
data16
dec
aaa
mov
pop
pusha
mov
mov
outsl
adc
push
jne
mov
xchg
mov
jbe
xchg
rcl
xchg
aas
lods
pop
adc
je
push
lret
popa
sti
lret
mov
push
mov
sahf
or
out
or
lods
roll
nop
sub
adc
test
mov
fsubr
in
fsubs
in
mov
stos
jne
xor
adc
in
mov
and
push
xchg
push
jbe
sbb
or
sub
ja
add
in
roll
je
mov
in
mov
push
mov
ret
pusha
fnstenv
lods
or
mov
mov
dec
push
inc
fcmovu
xor
cltd
idivb
dec
fwait
and
jno
outsb
inc
fists
mov
xchg
xor
xor
or
cmpb
pop
in
sbb
xor
push
arpl
out
imul
cmpb
lock
movsb
mov
cmp
pushf
movl
push
pop
pop
aaa
fcomi
stos
fwait
in
mull
sti
mov
lods
ret
or
fs
ds
pop
gs
push
jp
inc
adc
push
jl
or
xor
push
in
test
outsb
add
inc
inc
push
mov
pop
insb
mov
orl
mov
inc
jecxz
ret
mov
jns
add
mov
sub
xchg
vdivss
cmp
add
adc
push
je
movsb
cmp
sub
mov
cmpsb
stos
fsubr
mov
pop
push
jnp
mov
or
loope
aad
sbb
aas
sbb
sub
jnp
rdmsr
mov
lahf
mov
fs
or
mov
fiaddl
int
mov
test
loopne
dec
jmp
jb
cwtl
int3
or
scas
int
dec
push
xchg
sub
mov
add
cmp
movsb
scas
mov
mov
cli
inc
cs
fwait
or
pop
mov
or
popf
mov
cmp
or
lods
aas
dec
shr
ficompl
sahf
cmc
mov
xchg
scas
loopne
add
out
lods
idivb
or
inc
cs
std
dec
mov
stos
mov
mov
xor
aam
ds
pop
sarb
pop
push
inc
xchg
je
xor
in
jl
push
mov
cmp
stos
inc
pop
ja
and
xor
js
fisubl
jmp
out
ljmp
mov
mov
or
out
xor
pop
sbbb
sar
xchg
pop
mov
es
fcmovnu
sub
jge
stos
or
mov
push
pop
jle
cmp
je
out
cmp
xchg
pop
leave
sbb
shlb
mov
lcall
out
jge
je
xchg
jp
jp
xchg
mov
je
pop
mov
xchg
mov
enter
pop
push
pop
mov
bound
pop
jmp
mov
add
cmp
inc
pop
xchg
stc
in
fcom
cmp
in
mov
add
cmpsb
push
or
cld
addr16
dec
add
hlt
inc
nop
jmp
mov
xchg
cltd
mov
mov
push
add
sub
push
jg
sbb
cmp
mulb
test
cmp
cmp
inc
and
enter
loopne
jo
mov
xor
add
stos
cmp
rcrb
ss
cwtl
mov
iret
jne
test
mov
je
ljmp
adc
out
leave
outsb
cli
aaa
xchg
and
aas
out
add
out
out
mov
push
out
cltd
push
int3
cli
lods
lods
iret
cmpsl
loop
in
sbb
ret
aad
sbb
push
lret
lods
mov
ret
dec
clc
clc
mov
decb
jno
xchg
ficomps
push
cmp
mov
incl
mov
adc
stos
shrb
test
outsb
pop
inc
and
mov
out
cmpb
enter
out
push
fistl
les
mov
inc
pop
mov
data16
jecxz
sub
ss
xor
adc
mov
std
addl
dec
xor
xchg
dec
in
mov
in
push
mov
fsubrs
ret
mov
lods
mov
and
rorl
inc
jle
adc
mov
push
pop
mov
dec
add
lret
cmp
jns
inc
push
inc
pop
mov
test
clc
dec
stc
cmp
add
push
mov
mov
js
ss
and
popf
sbbb
and
sbb
pop
fiadds
jne
cmp
test
inc
psadbw
andl
adc
int3
icebp
xor
jnp
jb
ja
divl
cltd
and
pop
loopne
loop
sbb
cmp
int3
insb
push
push
mov
test
cmc
mov
fcoms
push
jl
icebp
call
fs
lock
sahf
lock
es
and
sub
roll
test
or
xor
imul
mov
scas
sub
scas
and
mov
enter
xor
icebp
movb
xchg
out
testb
shr
out
pop
pop
test
dec
lock
insl
adc
mov
cltd
sbb
jge
stc
ret
cmpxchg
adc
insb
sbb
icebp
xchg
sub
or
jb
cmpsb
jecxz
adc
fdivrp
jg
test
fsubr
shl
or
dec
cmp
test
imul
mov
push
les
mov
dec
out
xor
ror
push
sbb
jb
mov
icebp
inc
in
jle
cmp
xchg
cmp
pop
lods
pop
rolb
and
mov
lret
push
adc
push
lahf
test
cltd
jae,pn
out
xchg
mov
je
add
sti
aad
dec
and
sbb
pop
cmp
add
jle
inc
add
mov
imul
imul
ss
sub
cmp
fdivrp
fcoms
into
sbb
and
aas
scas
pop
xor
or
sub
xchg
je
xchg
and
or
out
or
lods
jmp
inc
lret
bound
test
jbe
sahf
cmp
and
dec
xchg
pop
loop
cmp
ljmp
or
arpl
mov
addr16
pop
imul
and
pop
pop
out
xor
sub
clc
in
or
dec
icebp
adc
inc
test
cwtl
xlat
jbe
push
sub
push
mov
imul
add
jmp
les
in
daa
xchg
xchg
pusha
mov
fs
cli
xchg
cmpsb
pop
and
data16
jae
jle
daa
aad
dec
mov
mov
adc
cmp
mov
and
stos
sbb
loopne
push
scas
scas
dec
sahf
or
outsb
jo
inc
xor
out
mov
or
popf
dec
ret
xor
xor
push
imul
inc
pop
adc
lret
mov
jg
mov
jmp
stos
mov
mov
xor
cmp
mov
mov
lret
mov
dec
shlb
cmp
jmp
in
fucomi
jp
ror
mov
push
add
mov
lahf
lcall
jle
mov
mov
mov
mov
mov
and
jecxz
decl
out
test
aas
invd
scas
add
adc
enter
cmp
pop
mov
lahf
and
inc
mov
push
or
sub
adc
or
fldt
push
xchg
push
cmpb
or
xchg
scas
cmp
dec
mov
jb
dec
mov
cmp
inc
popa
in
mov
sub
pusha
clc
pushf
xchg
scas
out
mov
mov
fstpl
orl
mov
repnz
mov
enter
stos
jns
mov
fldenv
push
push
adc
pop
lock
pusha
inc
vprotd
test
and
pop
sub
mov
jge
clc
push
adc
add
rorl
movsl
int3
imul
pop
xchg
sbb
enter
mov
test
xor
imul
stos
ret
cmp
lea
inc
cmp
pop
sbb
out
fsubr
shrb
andb
cmpsb
mov
push
aaa
mov
mov
or
push
and
push
sbb
daa
mov
adc
dec
adc
add
inc
push
test
add
popa
in
jbe
inc
push
mov
jne
push
adc
adc
xor
mov
movsb
and
inc
ljmp
lods
ja
pop
dec
mov
pop
fidivl
jg
imul
lret
fidivl
scas
jle
add
xchg
push
sbb
jmp
mov
lds
rcrl
cmp
mov
push
fildl
sbbl
xchg
and
cmp
push
push
mov
ds
adc
fwait
pop
inc
int3
les
xlat
aaa
mov
push
mov
frstpm(287
js
bound
ss
inc
stos
fnsave
inc
aam
fisubrs
jp
jns
and
mov
cmp
push
mov
push
rorl
pop
fs
dec
enter
cmpsb
push
cmp
mov
cld
in
inc
daa
jae
rep
js
in
mov
lea
ret
adc
sahf
clc
push
in
inc
imul
ret
mov
cmp
mov
push
mov
js
icebp
xchg
or
pop
mov
cli
arpl
in
sub
adc
lea
fcoms
enter
mov
and
mov
or
add
dec
call
push
imul
mov
adc
aam
sbb
jp
add
mov
test
xchg
mov
pop
aad
inc
ljmp
mov
xchg
dec
xchg
xor
les
mov
pusha
mov
xor
mov
xlat
push
lods
andb
mov
mov
in
movsb
or
adc
mov
and
cli
and
and
mov
pop
rorb
pusha
insb
adc
push
ret
enter
pop
insl
cwtl
mov
stc
addr16
ret
pop
push
pop
les
xchg
je
cltd
adc
js
mov
fcmove
stc
jb
sbb
xchg
loop
fiadds
insl
sarb
mov
popa
sbb
push
jns
pop
push
repnz
aaa
adc
sbb
sbb
daa
fisttps
push
add
jbe
sbb
and
arpl
xlat
cmp
mov
gs
inc
fildll
xorl
fisubrl
repnz
push
insl
lahf
pusha
adc
cwtl
gs
arpl
popa
cmp
imul
into
jle
push
aaa
cmc
sbb
aad
mov
mov
sbb
decb
pop
pop
jae
jb
rdmsr
or
sub
es
ret
lds
inc
cmpsb
notl
je
adc
fnsave
sbb
je
add
adc
int
mov
xchg
cmc
int
orb
in
sbb
std
enter
das
sbb
and
dec
mov
xchg
xchg
or
inc
jp
inc
iret
mov
and
dec
xchg
je
sbb
fs
mov
push
sbb
dec
aam
repnz
mov
mov
mov
jo
andl
add
rcrb
addl
sti
jge
xor
or
dec
add
jo
mov
addr16
inc
jp
mov
add
das
test
ja
jmp
mov
xchg
lock
cmpsw
inc
and
push
loopne
fbld
mov
jmp
je
fcom
pop
out
mov
xor
sbbl
adc
dec
sub
aaa
je
daa
outsb
das
sbb
add
adc
sbb
aam
pop
pop
ja
push
sar
pop
daa
lahf
adc
push
fs
icebp
loop
mov
push
cmp
dec
daa
pop
cmc
insl
cwtl
into
in
daa
fstpl
das
mov
push
mov
pop
mov
ds
and
arpl
fs
xchg
lock
xorb
or
adcl
js
or
stos
test
cwtl
xchg
aad
imull
mov
push
adcl
out
and
jnp
push
insb
imul
lds
clc
jp
jbe
divb
jb
jl,pt
or
jp
lea
jmp
cs
mov
mov
xchg
dec
gs
movsl
inc
dec
cs
jae
xchg
mov
sti
add
repz
mov
test
mov
and
push
pop
sbb
add
sub
mov
jmp
or
sub
jno
sub
in
jmp
rcr
repnz
int
orl
jg
in
jg
les
fldenv
xor
outsl
inc
movsl
rorb
pop
mov
push
fdiv
cmpsl
loop
sahf
leave
xor
xor
mov
push
lret
inc
cmpsb
outsl
mov
and
ja
dec
add
mov
mull
push
add
outsl
inc
std
mov
and
inc
mov
and
lods
jmp
sahf
andl
mov
or
fcoml
rorl
and
sbb
jp
mov
mov
or
push
lahf
dec
push
pushf
js
rcll
jp
cld
pop
inc
push
xlat
and
sbb
cmpsl
mull
rolb
insb
aas
mov
sbbb
jns
and
mull
repz
sub
leave
int
jg
in
ficoml
mov
sub
sub
add
add
mov
dec
jb
js
rorb
rclb
pop
nop
adc
in
inc
pop
cmovge
or
push
js
xchg
pop
or
mov
fwait
clc
push
scas
sbbl
push
test
pop
imul
cmp
aam
jg
in
and
mov
stc
push
cmc
sub
mov
cmc
xchg
push
add
inc
fstl
scas
cs
out
lcall
cmc
adc
pop
push
and
into
pop
ret
xor
cmpsl
jo
lahf
mov
cs
jae
scas
sbb
stos
dec
adc
xchg
popa
xchg
dec
sbbl
scas
clc
cmpl
gs
sub
int
jb
mov
inc
hlt
push
repz
jle
jmp
sbb
mov
fucomp
mov
inc
inc
xchg
and
and
cld
push
test
jp
test
and
add
cmp
icebp
push
fxam
std
xor
mov
sub
aas
out
mov
sub
scas
stos
and
add
pop
inc
xlat
mov
daa
cmp
dec
push
mov
lods
pop
aam
jns
jl
dec
lea
mov
push
pop
shld
icebp
inc
add
out
add
and
stc
pop
dec
test
test
pop
fiaddl
int
push
xchg
add
adc
xchg
cmpsb
fisubs
data16
fwait
sahf
pop
xchg
int3
cmpsb
hlt
int
insl
pusha
mov
cmp
clc
dec
sahf
loopne
push
push
sti
pop
mov
std
int3
cmpsb
rcll
inc
sbb
out
inc
sub
imull
add
insl
mov
lea
pop
lods
xchg
repnz
lcall
sub
dec
push
jnp
xor
ja
and
pop
gs
out
je
mov
popf
jle
dec
adc
pusha
and
int
int3
lea
pop
lods
mov
mov
push
shl
lahf
pop
and
sahf
lret
ja
rol
lea
pop
push
cmp
mov
dec
gs
das
roll
xlat
ret
dec
jbe
mov
xor
xchg
int3
jae
dec
push
cmc
shr
cmp
push
inc
mov
pusha
insl
idivl
lds
lds
nop
push
into
jmp
mov
fcomps
xlat
scas
add
dec
adc
in
popf
loop
out
cmpsb
push
pop
mov
insl
jbe
pusha
sub
add
rcl
xor
cmp
mov
in
xor
lods
mov
je
std
rclb
mov
addb
xchg
mov
sar
mov
inc
hlt
leave
int
cli
shl
in
pop
jmp
xchg
outsl
cmp
mov
and
ja
push
shrl
xor
sub
xlat
scas
mov
test
into
xor
push
and
dec
cmp
jb
addr16
test
dec
and
inc
sbb
xchg
roll
mov
adc
mov
fcomip
inc
jns
xchg
xchg
pusha
repz
dec
push
jl
orl
push
inc
lea
mov
pop
hlt
es
fisttps
scas
xor
movsb
outsl
aad
nop
scas
jl
out
scas
enter
sub
and
push
sbb
push
xor
xor
jge
pop
popa
push
sbb
mov
in
sub
mov
adc
inc
mov
out
fidivrs
jo
out
cmpsl
jno
mov
mov
mov
pop
loop
add
add
aaa
data16
or
imul
lods
enter
dec
jae
test
lods
jne
pop
lds
pop
cmpsb
test
popf
out
lcall
aaa
addr16
xchg
cld
sub
adc
mov
js
call
xor
jle
mov
jbe
push
jl
fwait
test
mov
mov
ror
hlt
jns
sbb
lods
mov
imul
push
xor
and
out
jle
mov
pop
sbb
mov
loop
loopne
mov
inc
and
mov
outsb
aam
clc
scas
pushf
sbb
xchg
rclb
mov
mov
or
insb
inc
adc
inc
hlt
pop
outsl
mov
mov
int3
mov
sub
mov
leave
mov
and
or
and
push
ljmp
xchg
int3
imul
lret
lds
sub
test
rorb
loope
mov
clc
out
js
push
cmpsb
addb
jnp
mov
shr
in
aas
pop
call
add
push
fwait
adc
mov
jns
pop
ds
aas
xchg
mov
dec
fwait
adc
out
fwait
xor
and
jecxz
xor
mov
push
and
jecxz
xor
dec
xchg
daa
push
mov
shlb
cmp
jne
mov
dec
mulb
or
xchg
cwtl
pop
sub
enter
push
fyl2x
test
sub
cmp
jnp
dec
sub
push
pop
pop
push
pop
mov
cmp
test
mov
jp
sahf
movaps
mov
xor
sar
sub
sti
push
and
cld
dec
xor
pusha
lcall
push
imul
xchg
mov
std
adc
mov
movsb
ja
out
outsl
jecxz
push
das
bound
push
mov
outsb
ljmp
shrl
add
shlb
and
cwtl
jb
xlat
jbe
rclb
mov
fdivrl
mov
mov
xchg
jns
lret
xlat
mov
mov
or
mov
daa
out
popa
sub
clc
push
adc
jno
in
jne
mov
xchg
push
andl
push
sbb
mov
stos
xor
das
sub
xor
sub
xchg
xchg
sbb
mov
add
pop
cld
movsb
loope
jo
aaa
jb
mov
aas
testl
out
out
push
nop
into
mov
and
sub
xchg
push
cmp
mov
sarb
jl
sbb
inc
push
jns
insb
cld
or
subb
dec
jmp
je
popf
adc
into
insb
xchg
dec
mov
xchg
push
jbe
cmp
pop
xchg
test
cld
lock
jb
outsb
cmc
xchg
popa
inc
xor
mov
fldcw
mov
jae
pop
out
lret
lds
dec
lock
or
in
push
xchg
data16
stos
inc
outsl
add
or
jbe
inc
xor
sub
cld
pop
les
push
fidivl
mov
xor
pop
outsb
js
outsl
fcomi
nop
push
std
push
pop
int
in
hlt
fstl
ljmp
ret
cld
xchg
nop
add
gs
and
gs
ret
inc
mov
or
or
mov
jmp
movsl
mov
mov
adc
outsl
divb
addr16
cmpsl
pushl
and
adc
scas
mov
es
loopne
or
cmp
fcompl
out
mov
stc
lods
or
mov
jl
cmp
mov
inc
stos
mov
clc
and
and
loope
and
mov
or
lret
xor
sub
imul
sahf
addr16
xchg
jbe
or
bound
in
xor
or
xchg
cmp
push
jg
js,pt
pop
mov
xor
dec
outsb
mov
cli
loopne
push
fisttps
dec
arpl
push
mov
stc
cli
jp
mov
and
outsb
inc
jnp
movsl
clc
shll
or
sbbb
sbb
add
cmp
call
jl
fwait
dec
adc
movsl
push
insl
add
test
pop
jg
lea
cwtl
daa
cmp
cwtl
mov
push
cltd
outsb
push
add
mov
push
ret
pop
or
fimuls
dec
jmp
in
cmp
jnp
and
cmp
cs
xchg
aas
in
aas
mov
mov
add
mov
pop
xchg
mov
jae
and
sti
mov
cmp
lock
cmp
test
mov
push
push
in
cmp
mov
jg
push
test
add
call
adc
cld
mov
or
inc
and
outsl
sbb
in
sub
mov
ljmp
aad
testb
push
push
mov
je
in
adc
call
andl
push
cld
jbe
jnp
lret
pop
mov
mov
jo
adc
jae
test
xchg
adc
ja
jmp
movsb
inc
jmp
xor
and
push
mov
loopne
aad
dec
or
leave
stc
sbb
arpl
fimuls
dec
incb
push
sbb
and
nop
ds
sub
jo
jb
and
popa
inc
fcoml
loopne
dec
arpl
pop
jmp
lret
scas
aam
cmp
gs
pop
mov
shr
shl
adc
sbb
add
xor
mov
xor
in
imul
jb
loop
cli
pusha
leave
cmp
mov
fcmovnu
cli
jno
cmp
imul
or
cld
outsl
jmp
lods
ret
andl
push
inc
sahf
inc
call
ret
or
mov
jle
mov
stos
rorb
out
xlat
pop
je
xchg
jbe
xor
cmp
lods
mov
push
lcall
loope
fcoms
pop
repnz
shll
cmp
xchg
pop
dec
sti
mov
xlat
or
xlat
fmuls
mov
mov
cmp
imul
stos
jl
mov
hlt
insl
in
cmp
rorl
imul
pop
cltd
test
scas
push
or
adc
xchg
sbb
cmp
movsb
imul
sbbb
and
cltd
pop
push
lods
mov
xlat
imul
outsl
filds
mov
lcall
inc
sub
lods
test
pop
mov
cmp
or
js
popa
mov
aas
fs
jecxz
or
pop
xor
sar
xor
shrl
cmpsb
fsts
add
aam
daa
pop
out
dec
in
incl
mov
lret
xchg
mov
jno
add
or
pop
jno
mov
add
imul
lcall
and
ja
cmc
adc
or
outsb
and
negl
call
mov
mov
mov
scas
stos
inc
fwait
sub
inc
mov
mov
lret
inc
mov
adc
jge
daa
add
enter
aaa
add
js
and
mov
shrb
cmp
push
pusha
mov
push
mov
sarb
ljmp
xchg
mov
idivl
dec
fs
mov
xor
rcrb
mov
jge
lea
mov
mov
jle
jle
addl
pop
insb
xchg
mov
incb
sbb
fimull
jne
sub
cmc
loopne
cmp
cmp
imul
adc
xchg
ficomps
mov
lods
push
aas
pop
jne
sbb
jecxz
cwtl
dec
daa
mov
mov
jle
lret
inc
pop
stos
pop
in
xchg
sub
jns
fisttpl
jb
adc
pop
rcrl
sub
jmp
dec
cld
and
rolb
in
and
push
pusha
inc
cmp
jp
fimuls
scas
sub
xor
out
dec
jns,pn
add
test
scas
clc
jno
cwtl
ja
aad
sub
cmpsb
jle
add
fnsave
mov
mov
repz
pop
loop
daa
mov
imul
push
add
imul
xor
cli
loopne
cmp
jecxz
adc
adc
dec
leave
mov
int
adc
pusha
cmc
out
adcl
inc
inc
fstps
icebp
lahf
lret
arpl
shlb
add
std
xor
int3
inc
and
cli
mov
sti
pop
sahf
enter
mov
jb
xchg
inc
mov
sub
scas
sarl
gs
jmp
into
add
inc
jno
into
xchg
neg
mov
lsl
xchg
dec
cs
lcall
sbb
pop
das
enter
les
or
jle
pop
pop
hlt
dec
jecxz
cmp
lret
push
mov
nop
pop
sub
sub
add
adc
lds
jmp
fsubrl
cmpb
pop
inc
push
in
movsl
adc
jo
scas
pop
mov
outsl
orl
test
nop
leave
andl
jbe
jo
sub
inc
in
cs
loop
pop
cli
add
outsl
fdivr
mov
mov
jmp
lds
inc
scas
and
les
cltd
aad
mov
cmp
ret
xchg
hlt
test
sbb
xlat
xchg
mov
sbb
cld
vcmpsd
subb
dec
das
scas
sahf
divl
fisubrs
jne
movsb
add
push
jle
mov
inc
dec
jp
in
pop
mov
loope
lods
enter
xor
repnz
fcmovnbe
push
xor
jmp
lret
or
arpl
out
cli
cltd
jg
cmp
lea
xor
xchg
xor
outsl
inc
or
lea
mov
lret
ret
fdivs
mov
xor
insl
xchg
lods
and
loop
mov
adc
gs
out
out
rclb
js
pushf
je
and
ret
outsb
sub
adc
imul
sbbb
lds
rcll
add
lahf
sub
xchg
push
dec
mov
call
sub
lret
aam
cwtl
orl
lret
loope
pop
cmp
les
xor
mov
and
push
push
mov
jle
lods
mov
xchg
cmp
or
loop
xchg
jne
pop
inc
inc
mov
fidivl
push
jle
mov
in
and
and
push
dec
and
rcll
scas
sub
pop
mov
pop
cwtl
dec
rcll
es
pop
mov
add
cwtl
call
insb
nop
sub
out
rorb
daa
movsb
ja
pusha
push
jnp
jge
or
repnz
icebp
mov
jge
pop
sti
jecxz
mov
pop
xor
push
stc
enter
loop
loopne
fidivrs
pop
int
icebp
xchg
sub
fidivl
xchg
cli
push
jbe
gs
xor
std
xor
lahf
leave
add
jecxz
sub
jg
and
inc
idivb
add
js
out
cli
fs
xchg
shr
inc
inc
repnz
adc
outsb
add
ds
sub
push
sbb
mov
fisubrs
inc
shll
jge
repz
jnp,pt
gs
mov
insb
inc
mov
cmovle
into
or
add
mov
inc
arpl
xor
cmp
or
and
lods
das
subb
ret
push
jb
lods
pop
mov
nop
sbb
push
mov
popf
jge
sub
ficoml
movsb
mov
sti
add
sub
push
mov
jg
test
fistps
xor
popa
ret
decb
js
inc
inc
mov
xor
cmpsb
pushf
into
lahf
jne
insl
mov
add
mov
lcall
fmul
mov
xor
jmp
call
pushf
into
test
rcrb
rcrb
cmp
clc
jbe
mov
rolb
xorb
sbb
mov
popa
xor
mov
and
loopne
pusha
sub
fmull
outsb
aam
pushf
xchg
insb
push
imul
js
dec
jno
test
sbb
pop
mov
or
adc
sti
dec
dec
and
stos
lods
ficompl
mov
clc
fwait
push
movsb
inc
mov
xchg
es
mov
pop
jne
mov
push
pushf
jle
sbb
inc
mov
pop
adc
pop
fidivrl
aam
inc
cwtl
dec
dec
jnp
shlb
shll
jmp
jnp
sti
push
and
rolb
pop
mov
jne
xchg
pusha
loop
mov
dec
and
mul
js
iret
subl
lds
loop
push
xchg
cmp
adc
and
cmp
out
aaa
fnstcw
push
sarl
inc
adc
fisubl
pop
pop
or
std
fldcw
push
pop
pop
push
fimuls
mov
idivb
pop
cli
adc
mov
xchg
cmpsl
dec
mov
push
add
xchg
dec
aad
sbb
js
fxtract
ror
mul
xor
dec
dec
iret
fadds
mov
stc
jb
inc
pushl
test
enter
insl
pop
pop
fldt
test
test
insb
call
jge
mov
in
push
scas
xlat
push
dec
sbb
adc
aas
daa
mov
inc
aad
loop
fldl
cmp
inc
jmp
sub
outsb
stos
jge
push
fistpll
dec
xorb
das
inc
int3
mov
jg
enter
pop
and
popl
popf
jne
sbbl
fs
ja
insb
push
dec
adc
out
js
pop
dec
pushf
adc
aaa
sub
mov
pop
sbb
movsb
adc
stos
aaa
adc
xchg
lea
jge
into
scas
inc
xor
test
aad
test
mov
add
jecxz
pushf
mov
ret
out
xchg
fisubrs
inc
nop
jp
sbb
cmc
inc
arpl
fwait
mov
cmp
dec
push
pop
mov
mov
fcomp
shl
insl
shr
or
cwtl
adc
inc
cmp
fnsave
sbb
ljmp
xchg
pop
loop
mov
push
push
fwait
mov
aad
and
fdivs
cmp
jno
sbb
clc
jbe
adc
xorl
cltd
or
xchg
fs
rcl
inc
push
mov
adc
pop
push
xchg
push
jae
push
cmp
in
dec
cmp
jo
mov
and
mov
je
mov
or
repz
outsb
mov
mov
adc
out
or
mov
cli
sbb
test
loope
ljmp
fcoms
push
pop
cltd
aaa
sbb
int3
or
or
xchg
push
jl
movsl
iret
iret
pop
sbb
inc
inc
nop
fcomps
mov
xchg
ret
or
rolb
inc
repnz
jge
test
bound
jno
sbb
and
ret
jb
rcrl
dec
inc
xlat
rcrl
xor
mov
push
mov
or
js
xlat
lret
inc
out
sbb
mov
lods
hlt
xor
dec
je
insl
dec
cltd
cmp
jecxz
mov
fcoms
sub
adc
in
sbb
enter
add
cmp
sbb
test
or
insl
and
in
pusha
cmp
cmp
pop
jnp
pop
mov
int3
push
stc
leave
stos
cmp
out
arpl
aam
lds
and
ret
mov
sub
ret
icebp
pushf
mov
jo
xor
int3
add
movsb
and
inc
sub
rol
push
lcall
mov
cltd
pop
jno
xor
add
push
jnp
call
mov
adc
cmp
xchg
pop
insb
fisubrl
int3
call
jo
or
int
inc
cmc
xor
pushf
mov
sub
mov
xchg
pop
sti
vminsd
mov
cmp
inc
dec
dec
loopne
mov
sbb
mov
pop
sbb
icebp
das
popa
sahf
jle
xchg
and
ss
ss
addr16
ffreep
mov
inc
or
into
xchg
mov
mov
hlt
push
jne
and
stc
adc
xchg
out
jae
push
sbb
push
sub
or
push
and
cmp
gs
std
mov
test
lock
fstps
xchg
xor
dec
jl
sbb
jge
sub
sbb
sbb
insb
add
sbb
outsl
stc
ja
mov
mov
cmp
repnz
and
pop
cltd
push
loopne
insl
push
or
in
xor
jns
push
jecxz
cmpsl
fdivl
push
xchg
ja
add
cmp
mov
xor
or
ss
dec
dec
test
adc
jne
sub
fcoml
mov
sbb
cltd
int
push
cwtl
xchg
push
out
aaa
cli
xorl
movsl
cmpsl
mov
mov
int3
leave
add
dec
iret
cmp
or
lods
sub
xchg
push
mov
test
mov
ja
add
adc
scas
out
pop
or
repnz
pop
xor
imul
btc
fnstsw
mov
or
out
or
mov
mov
popf
xor
jp
loopne
sub
adc
aaa
push
or
mov
notb
sbb
aas
icebp
mov
and
adc
call
in
fistps
mov
clc
inc
aad
lret
jp
aas
adc
mov
add
xor
xchg
scas
lretw
int
xchg
rorb
pop
mov
cmpb
push
cmc
fbstp
jnp
jbe
lret
std
fs
sub
enter
ret
add
jbe
xchg
lcall
push
cs
lock
lcall
push
ret
into
movsb
jg
push
adc
mov
sbb
adc
xchg
jb
mov
push
add
enter
jns
mov
dec
jae
ljmp
push
pop
pop
push
fcoml
jno
mov
cmp
push
jnp
test
decl
xor
or
inc
sbb
push
push
in
pusha
out
divl
xor
fld
add
lahf
inc
scas
mov
add
push
xchg
add
mov
mov
add
pop
mov
das
inc
aaa
mov
adc
xchg
add
ljmp
xor
push
push
adc
inc
je
pusha
mov
mov
or
adc
pop
dec
enter
popa
xorb
in
and
aaa
xchg
scas
repz
push
cltd
xchg
lahf
sub
pop
int3
push
fistpl
cmp
mov
out
pushf
add
fbld
test
fsubs
int3
dec
frstor
inc
push
inc
jmp
dec
in
pop
mov
xor
inc
and
ds
sub
int3
jbe
cli
and
xchg
adc
sti
cmp
in
je
stos
mov
sbb
aaa
fistpl
adc
popf
jge
push
mov
add
mov
in
and
pop
fstpt
jmp
xor
int3
or
neg
dec
lret
inc
mov
push
push
jbe
into
out
push
sbb
cli
or
push
pop
mov
movl
fildl
push
cmp
sbb
adc
mov
loope
sub
cwtl
ds
or
cmpsb
add
inc
sbb
add
mov
iret
dec
pusha
dec
adc
cltd
lcall
add
push
pop
xchg
outsb
push
mov
cltd
inc
push
shll
or
pop
andb
add
jle
sbb
add
sbb
add
sub
xor
and
lret
fldt
push
fbstp
pop
std
adc
inc
sub
adc
cmp
into
xor
cmp
inc
lea
mov
cs
xchg
jno
adc
and
mov
lea
jle
lcall
out
cmc
enter
xchg
inc
lea
xchg
fistpl
test
cmp
jmp
aas
push
push
das
sti
cmp
in
aam
stc
sub
add
jbe
iret
jp
jl
ss
jbe
adc
mov
aaa
add
mov
ds
or
jecxz
js
pop
pop
mov
and
xor
aad
add
xor
test
dec
stos
insb
add
add
aam
pop
mov
fisttpll
sbb
or
sbb
xor
loope
sub
inc
mull
jo
fcomp
int3
mov
call
out
dec
dec
icebp
or
lahf
cwtl
jb
push
insl
loopne
in
xchg
and
xchg
inc
les
push
in
dec
es
incb
scas
push
icebp
and
sbb
adc
mov
leave
and
sbb
xchg
cmp
xor
xlat
sbb
popa
loope
push
outsb
jne
daa
cld
jae
int3
push
popa
outsb
push
jl
cmp
pop
nop
ljmp
push
rcr
jbe
inc
aaa
push
pop
pop
not
xorb
lea
mov
push
add
add
mov
mov
push
ja
add
mov
cmp
xlat
loopne
push
and
cmpsb
orb
lahf
cmpsl
lret
push
mov
push
or
std
mov
push
lcall
push
dec
pop
cmp
sbb
pop
xlat
out
jae
faddl
enter
inc
adc
xchg
js
loope
adc
shr
std
mov
cli
movsl
mov
inc
and
xchg
push
jno
scas
stc
cli
fldenv
clc
and
jmp
jno
enter
and
xchg
cltd
xor
dec
push
ds
dec
in
xchg
push
inc
inc
xchg
xor
lods
into
or
stc
dec
inc
ret
or
jmp
xchg
pusha
mov
test
pop
dec
mov
sahf
inc
sub
mov
push
pop
mov
out
sub
cmp
inc
pop
repnz
insb
jp
push
mov
cmp
std
dec
mov
fwait
jae
dec
xor
gs
mov
dec
test
pushf
pop
icebp
fidivl
inc
in
pslld
and
in
push
cmp
movsl
stos
cli
pop
xchg
scas
xchg
inc
mov
bound
cmp
sbb
fsub
popf
pop
add
ds
daa
push
xchg
pop
dec
jle
out
cmp
ljmp
cmp
mov
rcl
push
scas
cli
int3
push
or
push
test
mov
ljmp
cmpsb
ds
jo
pop
or
cmp
pop
divl
jmp
sbb
and
fwait
lcall
xchg
mov
pop
inc
js
jo
or
jp
sbb
jmp
add
lret
lods
mov
cmpsl
mov
lods
lock
lock
addr16
pop
lea
mov
test
jbe
jbe
das
or
jb
lret
cmp
push
fabs
and
mov
jmp
lret
rcl
adc
dec
and
push
jle
inc
inc
mov
dec
xorl
mov
inc
jne
or
sbb
jb
ror
pop
popa
pop
sbb
and
cmpsl
mov
out
fs
sahf
jp
test
xchg
push
jmp
inc
insb
sub
xor
aaa
outsb
cmp
lods
rorl
or
aam
cmp
jl
lods
cmp
icebp
lcall
or
scas
fildll
sub
jae
popf
xchg
xchg
fsubrs
shll
sub
ljmp
fimuls
notb
pop
and
inc
xchg
outsb
js
cs
sahf
cmp
xor
sub
sub
xchg
inc
pop
lcall
loope
out
push
outsb
jl
inc
ss
push
rcrb
push
dec
icebp
fwait
jno
rorl
arpl
nop
mov
mov
cwtl
adc
dec
mov
call
cld
xchg
les
push
test
sub
lods
mov
jnp
outsl
push
xchg
hlt
mov
ljmp
jo
popf
xor
scas
mov
push
bound
pop
int3
rclb
xchg
in
fsubrs
push
mov
cmp
mov
add
pop
push
xchg
movsl
ljmp
cmpsl
jmp
pop
inc
cmp
in
xor
or
jne
inc
push
cmp
pop
sbb
adc
push
mov
inc
inc
stc
rcl
fcompl
cmp
imul
je
scas
mov
aas
mov
scas
jo
lock
insl
mov
mov
test
adc
jnp
fistps
xor
sub
sbb
and
movsl
push
hlt
jg
inc
pop
test
add
or
in
push
inc
aad
cmp
mov
sbb
dec
jno
inc
lcall
sbb
and
dec
cmc
sbb
test
jge
mov
jnp
jl
scas
add
dec
lock
sub
int3
clc
popf
push
cmp
mov
iret
outsl
out
mov
outsl
sub
sub
dec
sbb
ss
xchg
imul
iret
sbb
inc
stc
jns
inc
push
push
push
dec
rep
push
pusha
add
popa
mov
cld
jp
ljmp
lret
ja
cmp
inc
adc
push
adc
inc
and
sub
push
daa
cs
xor
sub
sbb
shll
leave
or
incb
or
fiaddl
insb
popf
jae
push
mov
dec
push
sub
mov
jp
push
or
pop
mov
dec
loopne
rorb
and
int3
test
sbb
jns
jg
roll
push
imul
mov
ss
stos
shlb
ret
nop
sarl
xchg
mov
in
loope
mov
stos
adc
movsb
stc
and
and
jnp
stos
rorb
movsl
pushw
mulb
push
inc
stc
shrl
stc
adc
lcall
jae
fidivrl
mov
out
scas
arpl
mov
lahf
mov
sbb
pushf
shlb
fnstenv
sub
in
ret
scas
repnz
das
pop
mov
rorb
and
xor
or
adc
hlt
lods
fdivrs
jne
pop
aas
dec
ret
pushf
and
test
int
das
flds
ljmp
mov
push
pop
xor
outsl
add
ss
dec
rcr
mov
cwtl
cmp
mov
in
cmc
pop
shl
mov
add
cmp
mov
mull
dec
adc
or
adcb
cmp
mov
jns
push
jne
clc
test
adc
out
inc
je
imul
inc
hlt
cmp
cmp
mov
ja
ss
shlb
sbb
gs
sbbl
add
mov
insb
movsb
mov
idivl
sub
lods
cmp
int3
dec
adc
outsl
pop
ret
sub
sarb
cwtl
stc
inc
es
add
repnz
push
test
fs
add
pop
mov
pop
mov
mov
add
mov
cmp
jg
icebp
mov
mov
mov
fldt
in
push
mov
or
xor
mov
ljmp
pusha
mov
cmpsl
sub
mov
jmp
add
hlt
mov
add
mov
add
rcrl
push
xlat
adc
test
fs
sbb
fcmovnb
mov
ficoml
incb
in
scas
dec
push
dec
test
mov
xor
inc
cli
inc
pushf
test
stc
cs
shl
adc
je
gs
mov
mov
adc
fisubl
push
ret
pop
stc
out
mov
sti
cwtl
cmpsb
or
test
cmpsl
cli
stos
dec
add
ss
hlt
aam
cli
jb
imul
pop
int
outsb
pop
fs
cmpsb
fnsave
gs
cltd
jne
sbb
add
mov
dec
jp
xorb
in
xlat
push
aas
jmp
lret
mov
add
mov
mov
icebp
imul
sub
pop
out
cmp
hlt
jns
cmovbe
nop
or
xorl
leave
push
cmp
fdivs
add
inc
clc
pop
pop
les
mov
in
and
dec
cmp
insb
in
xor
add
out
cwtl
ret
pop
cli
xchg
push
je
fisubrs
insb
mov
or
lret
pusha
sti
cld
pop
add
or
fmuls
and
add
mov
push
jbe
dec
inc
std
mov
aam
push
cmp
add
hlt
mov
add
cmp
pop
lret
dec
jne
test
add
jl
in
push
cltd
jno
dec
xchg
push
jno
cmpsb
mov
or
push
adc
dec
lods
and
lods
lret
pusha
pop
add
add
add
lret
popf
sub
mov
cmp
in
pop
jbe
movsl
loop
lcall
or
ficompl
push
push
fcoml
repz
and
push
leave
rcrl
out
mov
shr
inc
xor
sbb
fcom
bound
jbe
cmp
gs
aas
xchg
inc
scas
rol
xlat
imull
push
js
xchg
test
es
or
jg
mov
cmp
rcl
sbb
sub
push
icebp
dec
fdivrs
shlb
movsl
lds
outsl
es
push
idiv
add
push
add
inc
sbb
mov
mov
movsl
dec
xor
pushf
flds
cmpsl
mov
cmc
inc
sub
adc
mov
fstpt
sbb
inc
sbb
repz
xor
xchg
adc
xchg
xchg
inc
popf
dec
mov
popa
cmpsl
cltd
adc
iret
or
jg
xor
push
rcrl
add
sti
push
xchg
adc
das
pusha
enter
ss
dec
cltd
insb
aad
mov
jae
mov
leave
xchg
or
sti
call
fs
sub
push
rorb
leave
stos
mov
xchg
add
fwait
icebp
cmp
cmp
loopne
inc
pop
cmp
les
and
sarl
add
mov
dec
shl
adc
cmp
dec
mov
arpl
dec
jb
stc
mov
cmpsb
sub
rcr
or
xor
pop
test
rclb
imul
lods
es
ficoml
inc
out
xor
or
add
xchg
dec
and
dec
or
lret
pop
adc
pop
pushf
push
nop
imull
rorl
movsb
push
je
push
sub
movb
dec
ffree
dec
pcmpeqb
imul
push
sub
scas
add
pop
pop
dec
mov
testl
adc
xlat
pop
push
cmpsb
mov
ja
pop
and
jmp
enter
cmc
mov
xor
in
pusha
push
push
imul
das
daa
inc
imul
dec
fwait
push
mov
shr
out
lods
or
adc
in
sbb
adc
lcall
inc
fisttps
jne
loope
cmp
cld
leave
or
dec
xor
bnd
pop
mov
sub
inc
xor
movsb
incl
fstpt
or
jecxz
stos
mov
cmp
xor
pop
jg
lea
in
lea
dec
sahf
es
pop
aad
ror
dec
shlb
inc
jne
inc
loope
xor
sbb
insb
cmpb
faddp
jb
mov
fwait
sub
mov
lcall
xchg
push
stc
mov
jg
fidivrl
jmp
cmp
addb
xor
adc
mov
jno
loop
outsl
sahf
iret
xor
ss
xor
clc
jge
leave
add
jl
cld
mov
jbe
add
dec
stos
mov
pop
jp
int
nop
inc
jbe
loop
jb
mov
outsl
mov
sbb
testb
cmp
aaa
dec
cld
loope
stc
rorb
jb
add
daa
jl
xchg
xchg
cmc
pop
into
ret
cld
xchg
fbstp
fnstcw
jle
cmp
jecxz
xor
out
imul
fs
aam
mov
xchg
sbb
jno
fcomi
xchg
mov
scas
lea
inc
jg
ss
movups
mov
es
pop
fidivl
xor
or
cmp
cmc
push
mov
es
xor
test
mov
loopne
add
sub
push
jae
lcall
xor
cmpsb
push
ljmp
push
out
xchg
mov
rcrb
push
sbb
sub
mov
lret
jg
adc
loope
jle
aas
jg
and
or
fs
icebp
mov
pusha
pop
aaa
mov
int3
outsl
movb
dec
in
das
mov
fwait
inc
xlat
repz
mov
dec
je
sbb
divl
daa
dec
cli
cli
or
jl
shll
int
aas
in
pop
push
lds
stos
daa
cmc
cmp
cmp
or
outsl
or
mov
xchg
fs
cli
aam
and
dec
jb
outsl
adc
lahf
and
lcall
fdivr
fdivrs
aam
or
push
mov
mov
and
jbe
xchg
pop
in
cmp
cmp
jns
lcall
cmp
jecxz
je
dec
push
pop
outsl
cmpsl
push
fildl
mov
ret
gs
lods
out
xor
lods
scas
or
push
cmp
sbb
rorb
mov
and
add
push
mov
mov
je
lret
mov
imul
mov
rol
jle
call
int3
fimuls
xorb
and
jno
fs
mull
test
sti
xor
mov
push
cmp
out
ja
cmp
js
outsl
add
sbb
adc
pop
xor
in
dec
cmp
cmp
movsb
out
push
cli
mov
ljmp
push
rclb
in
cmc
sub
inc
inc
or
and
movsl
cld
imul
lds
in
in
mov
xor
aaa
xchg
movsb
mov
daa
pop
rcl
pushf
sbb
dec
int
pavgb
xor
cmp
xor
int
daa
fpatan
inc
push
mov
jmp
clc
sbb
stos
add
xchg
inc
aad
and
cs
mov
popl
dec
test
outsl
loope
ljmp
jp
cmp
rol
mov
rcrb
bnd
popf
in
xor
subl
xorl
xchg
adc
sub
out
imul
fistpll
push
fsubrs
bound
lea
fcompl
sbb
dec
sarl
js
sub
out
int
fwait
enter
jmp
gs
and
in
leave
and
fcomps
mov
sarl
decl
inc
jne
mov
aam
inc
shll
jno
cwtl
pop
lock
bound
sub
aad
pop
sub
and
test
filds
ss
sar
sbb
mov
int
push
fsubl
stos
mov
xchg
sar
fdivs
lret
scas
gs
outsl
or
xor
inc
ret
imulb
sbb
cmp
iret
sbb
lret
and
insb
jl
push
cmp
jns
push
test
lcall
mov
mov
fsubrs
insb
inc
add
sbb
test
icebp
je
xchg
aas
xchg
mov
add
call
pop
jg
ret
or
or
shrb
loop
xor
inc
pusha
lods
stos
adc
cs
pop
dec
xchg
xchg
dec
pop
sbb
lcall
pushf
sub
xor
into
es
mov
pop
adc
adc
dec
pop
or
cmp
adc
mov
push
stos
cs
mov
subb
push
jnp
and
pop
sub
pop
nop
push
mov
inc
mov
add
int
push
dec
outsb
scas
push
outsb
hlt
aas
insb
aaa
outsb
js
and
cmc
jge
mov
adc
xchg
insb
cltd
sub
mov
ss
jge
rcl
sub
jl
shll
jno
dec
sbb
shufps
jne
inc
shld
and
flds
pop
add
insl
out
flds
jno
push
aad
aas
pop
std
adcl
cmpsb
lods
movsb
out
das
aad
xchg
gs
mov
mov
popa
cmp
cltd
and
inc
add
out
test
ret
xor
out
repz
sbb
dec
mov
or
arpl
dec
mov
sbb
lock
push
ret
imul
fnsave
sub
je
fbstp
adc
mov
test
fbld
add
hlt
movl
mov
cmp
mov
mov
jp
mov
pop
out
out
mov
cltd
pop
and
jl
pop
and
fst
mov
gs
mov
jle
shll
xor
movsb
popa
shll
sbb
push
in
sbb
sub
and
lods
lods
adc
jo
cmp
pop
movsl
xchg
mov
fcmovnu
insl
sti
addb
xor
out
popa
popf
inc
leave
daa
jae
daa
and
rcr
xor
ret
sbb
dec
shl
cmpl
daa
push
ds
add
push
sbb
and
pop
mov
loop
lret
pop
push
icebp
mov
pushf
fdivrs
insb
mov
stos
or
inc
iret
ret
pop
mov
mov
mov
loopne
scas
xchg
lods
and
enter
inc
xor
out
mov
jp
mov
inc
popf
add
mov
daa
sbb
xor
stc
adc
sub
or
cmp
dec
mov
subb
or
cmp
daa
cmp
cmpsb
pop
inc
add
psllq
mov
sub
add
mov
lock
lcall
sahf
in
adc
pop
cmp
xor
add
dec
sub
jp
ds
or
mov
cli
ss
cmc
or
jo
bound
or
xor
cmp
xchg
and
mov
mov
adc
sbb
popf
mov
jmp
cs
pop
mov
cmp
sahf
aad
shr
fdivl
filds
std
sbb
pop
je
pushf
popf
jae
aas
je
pushf
or
sti
sbb
add
push
in
mov
sahf
mov
icebp
xchg
movsb
insb
add
jmp
aas
cmp
ret
and
mov
sub
fsubrs
cmp
and
stc
lea
aad
imul
or
mov
cld
mov
out
ret
inc
fstps
cli
or
movb
icebp
pop
mov
ja
inc
xchg
addr16
fs
aas
push
sub
or
repz
insl
dec
sbb
popf
mov
mov
int
mov
in
dec
cs
cmc
popf
aad
push
test
pop
mov
mov
dec
mov
xlat
and
subps
cli
lahf
insb
in
adc
jae
es
test
test
das
cmp
std
mov
fnstcw
ficomps
or
adc
pop
ss
or
and
cmp
mov
arpl
adc
clc
xor
adcb
sbb
pop
push
in
jle
jp
out
fidivrl
call
shll
dec
repz
cltd
dec
sub
pop
pop
outsl
repnz
dec
mov
or
in
sbb
jle
faddl
in
pop
popf
rep
loopne
mov
call
push
outsl
or
dec
and
test
lahf
xor
arpl
pop
add
sarl
adc
mov
vpunpckhdq
gs
jle
cld
pusha
mov
lcall
adc
xchg
stos
ljmp
jb
sub
sub
pop
ret
and
xor
push
mov
cmp
movsl
lds
sahf
rcll
dec
loope
add
pushf
enter
jne
or
dec
jmp
arpl
xchg
xor
int
xchg
faddp
jb
add
rorb
and
xchg
add
lahf
cmp
ret
scas
cmp
loopne
inc
pusha
cmp
dec
cmp
inc
lods
or
mov
pop
outsb
das
push
stc
pop
pop
or
nop
inc
mov
cmp
pop
lcall
cmp
mov
dec
inc
jb
ficoms
xor
fisttpl
bound
test
fimuls
xchg
push
cmpsb
test
mov
cmp
dec
push
bound
std
xor
or
leave
or
test
popa
or
mov
imul
and
shll
outsb
push
inc
ret
cmc
adcl
jecxz
jp
aas
imul
mov
inc
xor
fisttps
xor
ljmp
mov
mov
stos
or
inc
pop
mov
or
sub
js
mov
pop
push
mov
cld
mov
push
mov
scas
out
scas
outsb
mov
mov
add
dec
rcrl
add
rclb
repnz
lret
adc
xchg
push
push
cs
inc
enter
push
xor
fs
cmp
fstl
dec
mov
ret
sub
adc
pushf
sbb
nop
jl
mov
push
jae
jno
int
lret
rorl
jecxz
or
jle
sub
xchg
jmp
test
mov
out
mov
jo
jbe
shlb
sbb
jno
mov
fcomip
mov
ljmp
dec
outsb
in
ret
std
int3
orb
adc
inc
int
xor
xor
or
or
popa
cmp
xor
adcb
mov
mov
pop
xlat
and
adcb
pop
adc
mov
lock
daa
mov
aas
movsl
and
xchg
jae
lcall
loopne
lcall
sbb
mov
add
push
jmp
push
ja
in
push
sarl
mov
push
sarl
and
clc
dec
push
ret
jne
outsl
mov
leave
aam
mov
and
repnz
ficoml
mov
inc
into
repz
pop
frstor
out
jmp
inc
ret
iret
or
cwtl
cmp
daa
cmp
push
jecxz
jg
cmpl
mov
cmp
and
data16
pop
add
mov
clc
jne
aad
push
sti
gs
dec
cwtl
cmp
mov
push
and
and
push
test
cmp
xchg
int
add
ss
fsubs
popf
push
cmpsl
xchg
shll
jnp
and
jbe
sbb
mov
mov
loope
js
fidivrs
mov
pop
jl
xor
jecxz
repz
sbb
fldt
mov
out
inc
add
jnp
xor
and
cmpsl
jl
in
arpl
pop
outsl
sub
pop
es
lret
mov
shll
scas
cli
scas
dec
lds
enter
dec
fistpll
cld
jno
xchg
fildll
push
push
fwait
mov
jl
adc
mov
mov
xor
clc
popa
repz
mov
lret
xchg
mov
pop
sbb
insb
cwtl
pushf
sbb
dec
xor
movsl
pop
lcall
fnstcw
lds
cmp
xor
jp
leave
movsb
iret
inc
mov
adc
push
sbb
push
pop
rcll
push
movsb
push
es
popl
fsubs
mov
imul
mov
lock
cmp
in
mov
test
mov
cmpsb
test
xchg
cmp
lods
push
dec
ss
or
divb
cmpsl
adc
sub
pop
iret
adc
arpl
scas
xchg
sub
and
fnstenv
and
fbstp
xchg
pop
xchg
sub
xor
jns
xchg
repz
imul
mov
xlat
mov
test
pop
cli
in
push
rorb
ds
jl
xchg
rcl
or
loopne
push
andl
jmp
dec
xor
pop
xorb
jp
jbe
hlt
daa
add
add
shrl
rorb
fs
outsl
push
jl
inc
sahf
out
popl
inc
in
lds
mov
lahf
pop
jle
aam
inc
incl
inc
xor
sbb
cmp
push
lcall
sahf
mov
jmp
pop
cmpsb
pop
cltd
xchg
ljmp
add
mov
xchg
jnp
daa
fistps
xor
xchg
lods
adc
rorl
lahf
jne
mov
and
faddp
jp
mov
int
sub
mov
stos
ja
jae
es
lods
iret
mov
sbb
hlt
mov
out
std
mov
mov
sub
ja
fldcw
lds
and
loop
cwtl
sbb
mov
cmp
pop
fidivs
sub
pop
xor
sti
nop
clc
stos
sahf
sbb
movsl
cmpsl
mov
out
adc
aas
jae
pop
xchg
push
iret
inc
or
clc
movd
movsb
xor
out
inc
push
dec
push
lock
adc
outsb
push
and
jb
mov
fstl
or
jns
add
jae
mov
pop
imul
xchg
mov
mov
lcall
fstps
sarl
inc
out
les
mov
fcompl
inc
in
mov
ror
out
jae
xchg
jmp
cld
lret
xlat
sbb
imulb
imul
fwait
lahf
call
imul
lahf
es
fcmovnbe
and
jle
inc
test
xchg
scas
inc
or
movsl
and
comiss
push
dec
mov
sti
cmpsl
mov
and
fbld
sbb
out
test
xchg
cmpb
lcall
add
mov
push
mov
push
test
shll
push
pop
jns
inc
out
xor
sti
mov
jg
lret
jne
stos
mov
js
int3
jno
jmp
pop
jg
outsb
int
lahf
shll
or
mov
mov
jnp
loopne
mov
rcr
shlb
jns
push
stc
dec
adc
xchg
xchg
mov
flds
dec
mov
and
add
mov
js
imul
sbb
daa
mov
or
icebp
add
enter
mov
fimull
inc
jecxz
jo
mov
ss
loope
mov
sahf
jle
xor
addb
scas
icebp
cmpsl
mov
jle
aas
xor
jl
mov
fwait
jle
xor
in
inc
pusha
jb
sbb
repz
insl
push
test
outsb
cmp
call
movsb
and
lock
imul
insl
cmp
add
divb
jbe
aam
cmp
xor
das
negb
fistps
cmpb
mov
imul
aad
lret
roll
outsb
stc
sub
scas
sarb
push
inc
cld
add
test
mov
inc
lahf
sahf
out
pop
pushf
dec
enter
repz
cmp
fdivrl
adc
lret
fldz
xchg
notl
clc
pushf
and
push
jns
push
mov
out
daa
mull
xorb
lret
jb
jge
arpl
mov
out
lret
and
scas
jb
enter
push
inc
out
addps
mov
xor
lcall
stc
cwtl
mov
sbb
popa
sub
xchg
sbbl
xlat
adc
sub
pop
sub
add
lds
in
mov
mov
jnp
mov
je
dec
adc
xchg
rcll
cmpsl
mov
rcrl
inc
mov
ret
inc
xor
pusha
movsb
sbb
sbb
dec
lods
jle
inc
lods
inc
movsl
lea
mov
neg
out
sbb
inc
mov
pop
dec
int3
cmpsb
add
jmp
cmpsb
in
mov
lea
in
cmp
xor
out
in
testb
pusha
sub
mov
mov
mov
cmc
push
push
stos
js
dec
cli
add
leave
jnp
add
mov
push
sarb
cmp
loop
cmpl
fwait
mov
sbb
loop
or
mov
and
sti
and
jo
or
jmp
inc
clc
xor
fildll
mov
insl
push
ret
orb
in
aaa
xchg
jno
dec
add
lods
adc
xabort
in
add
pop
shl
sbb
jne
dec
add
pop
roll
jle
and
pop
test
mov
push
out
or
es
mov
dec
neg
mov
pop
pop
push
push
jle
push
scas
xchg
lahf
leave
inc
pop
dec
inc
filds
sub
mov
aam
or
mov
and
xchg
je
xchg
xchg
stc
pmulhw
lcall
dec
push
jne
mull
sbb
add
shll
std
cmp
sub
movsl
roll
mov
sbb
int3
pop
int3
sti
push
inc
or
mov
jnp
inc
add
mov
fists
sbb
xor
imul
mov
push
cwtl
popl
fidivs
fsubp
into
imul
push
sarl
sahf
lods
mov
lods
rcl
outsb
test
cmp
xchg
xor
sbb
xchg
pop
jmp
and
dec
dec
das
mov
mov
sbb
mov
dec
or
shrb
in
mov
in
or
inc
lock
xor
cmp
stos
lea
stos
cltd
fldt
mov
push
pusha
lock
imul
dec
jnp
cmp
or
ljmp
mov
add
xchg
sahf
fwait
mov
jnp
mov
sbb
jg
adc
fidivrl
sahf
inc
xchg
mov
jne
cmp
lret
test
sub
and
cmpsl
subb
mov
in
fwait
mov
inc
mov
jae
mov
mov
xchg
mov
add
xchg
lret
jg
cli
push
mov
push
xchg
pop
mov
loopne
fidivs
inc
loop
mov
xor
dec
fimuls
jge
pop
icebp
lods
nop
push
mov
aad
pop
loop
cmpl
loop
sarl
mov
jne
and
rorb
std
add
xchg
mov
in
xchg
jp
std
mov
pop
adc
ds
addl
in
sub
sti
cltd
idiv
push
add
pop
rclb
clc
sbb
jb
int3
test
pop
xchg
pop
mov
repz
adc
or
push
dec
push
add
pop
popf
adc
enter
adc
call
add
out
mov
jl
hlt
ja
pushf
clc
mov
pop
divb
movsl
jge
inc
pop
mov
test
cmp
sbb
xchg
sub
adc
sub
inc
cs
dec
xor
jne
in
fistpll
in
add
mov
pop
fnsave
fiadds
add
scas
or
insb
add
pushf
inc
mov
out
and
rcrl
dec
cli
adcb
cs
push
cmc
inc
insb
lret
cmp
xor
call
mov
popa
sarb
sub
repz
inc
cmp
adc
pop
xchg
shr
mov
xchg
int
jg
lds
mov
dec
imul
and
cmpsl
loopne
cmpsb
shrl
adc
mov
mov
pop
lcall
int3
lret
sarl
iret
sub
dec
das
daa
fisubrl
mov
jp
add
in
data16
sbb
sbb
sahf
fcomps
mov
in
andl
mov
fs
pop
cwtl
arpl
adc
dec
pop
mov
loop
xchg
sbb
inc
pop
add
rcrb
xchg
mov
cmp
stos
cmp
test
pop
movsb
cmp
xchg
inc
sbb
cmp
mov
daa
out
rclb
xchg
mov
pop
mov
mov
insb
jne
add
outsl
mov
xchg
imul
ja
xchg
mov
gs
bound
inc
repnz
jle
loope
mov
jecxz
jo
ljmp
push
pop
jg
push
mov
popf
mov
sbb
les
sbb
arpl
or
adc
mov
and
lret
mov
in
dec
rcr
jbe
cmp
hlt
or
mov
add
adc
inc
fldpi
loopne
xor
mov
pusha
adc
xchg
cmovne
daa
pop
cmp
push
pop
jle
aam
dec
andb
outsb
push
ret
adc
and
data16
xchg
icebp
cld
into
sbb
andb
in
inc
mov
jp
inc
xlat
std
sub
fdivrs
push
pop
fbstp
fwait
test
add
cmpsl
test
dec
push
in
sbbb
into
add
cwtl
jl
mov
and
data16
lds
fdivrs
sahf
movlps
jmp
cmp
sub
mov
aas
imul
mov
cmp
jecxz
dec
push
xlat
xor
sub
push
icebp
lock
in
scas
cmp
or
pushf
fcoml
jmp
in
add
int
pop
ja
inc
adc
rcrl
mov
into
xlat
lock
sarb
jge
daa
popf
rol
pop
jb
sbb
cli
nop
test
cld
js
sbb
sbb
adc
adc
hlt
inc
cltd
sbb
ret
data16
cli
inc
mov
or
cltd
mov
pop
or
insb
imul
icebp
out
cmp
ficomps
and
push
jmp
cmp
mov
mov
scas
pop
sti
test
in
test
sahf
mov
pushf
xchg
mov
idivl
jecxz
sub
loop
sub
add
sti
jnp
jo
nop
dec
push
dec
cmp
sarb
popf
xchg
xor
sbb
and
mov
out
inc
mov
daa
cmp
mov
push
xor
adc
imul
mov
and
and
aaa
jp
dec
pop
add
adc
std
imul
add
in
jb
stos
shrb
icebp
xor
jl
adc
popf
in
es
and
aas
cmc
imul
in
out
jb
dec
test
lds
in
ret
cmp
jge
sub
dec
addr16
and
cwtl
rcrl
mov
adc
xor
outsl
jo
xchg
inc
fstl
mov
outsb
out
lock
stos
rol
add
out
roll
dec
cltd
cs
mov
imul
mov
mov
and
xlat
or
aas
jnp
lahf
hlt
push
pop
popa
call
test
fistl
xchg
and
jmp
fstps
std
mov
push
dec
mov
add
call
dec
js
es
or
inc
xchg
loop
bound
imul
xchg
shll
loopne
mov
xor
aas
cmpsl
pop
pop
pop
and
mov
loope
pushf
les
mov
pop
pop
iret
sbb
inc
sub
stos
add
cwtl
pusha
xchg
sub
cmpsb
shlb
xor
call
stos
add
pop
rclb
xchg
sbb
loopne
pop
shl
cmpsl
testl
int3
lret
and
add
cmp
mov
les
pop
into
sbb
int3
inc
adc
in
adc
adc
in
lea
and
test
cmp
test
loope
mov
movsb
sub
sub
push
pushf
les
mov
test
lahf
sub
ds
repz
mov
push
call
es
or
adc
jbe
sbb
outsl
inc
adc
arpl
mov
enter
sti
lock
sbb
xlat
push
pop
je,pt
repz
jle
imull
push
xor
pop
ja
jae,pt
pop
push
roll
into
pop
sbb
sbb
test
sub
popa
dec
imul
jns
lock
sub
mov
and
xchg
enter
add
mov
cmp
rcrl
fidivl
outsl
jp
jecxz
fwait
dec
insb
add
cmp
sahf
ffree
bound
pop
dec
push
jne
test
pop
repz
daa
mov
outsl
divl
and
jmp
lcall
xchg
outsl
cli
test
pop
jmp
or
insl
push
int
test
divl
push
pop
mov
out
aam
xchg
fucomp
stc
shll
or
xchg
out
cmp
push
xchg
adc
mov
daa
xor
into
and
outsb
sub
or
push
daa
xchg
jle
cmpsl
in
fidivl
push
fimull
push
mov
cli
incb
cmp
jo
mov
mov
loope
jo
inc
pop
jg
mov
add
xchg
lret
loopne
shrl
pop
fwait
add
mov
xchg
push
ficoms
add
adc
fmuls
fdivs
push
cmpb
mov
insb
out
dec
push
bound
inc
xor
enter
dec
cld
sbb
insb
pop
and
xor
mov
mov
and
inc
inc
mov
or
mov
pop
fnsetpm(287
sub
mov
xor
jg
ror
insb
leave
push
imul
dec
push
js
xor
jge
movsl
push
push
sbb
in
or
jnp
pop
push
xor
push
and
scas
pop
out
xor
lret
jecxz
rcl
or
cmpb
or
ss
jns
movsl
mov
xchg
iret
pushf
sub
inc
das
iret
gs
cmp
decb
fcoml
or
xchg
cmpsb
push
mov
xorl
xor
stos
dec
or
cmp
mov
ljmp
adc
push
nop
or
aaa
es
lret
mov
fcoms
imul
imul
popa
sub
lods
lcall
insb
mov
pop
add
ret
iret
adc
jle
addr16
repnz
test
pop
mov
fcompl
xchg
lcall
sub
and
xor
scas
sbb
jg
mov
ret
pop
add
mov
aad
mov
cwtl
mov
mov
sbb
scas
ret
pop
jb
cmpsb
test
fldt
imul
push
stos
adc
ffree
add
add
pop
add
paddsb
pop
and
pop
dec
arpl
je
jmp
dec
jne
jp
outsb
xchg
ficompl
mov
jbe
sbb
push
fsub
ds
dec
xchg
ret
xchg
jmp
jbe
xchg
sub
repz
insb
add
and
nop
repz
mov
mov
dec
xor
xlat
inc
repz
or
mov
xchg
adc
dec
movsb
testb
ror
push
data16
test
adc
dec
pusha
repnz
push
ja
jl
cmpsl
dec
inc
mov
lcall
and
out
fdivrl
mov
xor
inc
or
in
sub
cmpsb
mov
mov
loop
push
push
andl
leave
jb
dec
imul
mov
inc
lods
js
xchg
lret
lcall
fcmovnb
and
into
or
cs
push
std
in
xchg
aaa
test
jg
mov
mov
or
and
pop
pop
imul
add
jne
cmp
in
mov
fistl
sbb
dec
je
cs
push
mov
sub
sub
loop
popa
andl
int
mov
dec
xchg
cld
pop
shll
sub
rcrb
xor
dec
fwait
je
mov
sub
xor
and
pop
add
mov
mov
push
out
and
inc
stos
xchg
into
xor
cwtl
sti
test
aas
push
pop
dec
popf
in
cmpsb
mov
inc
cli
or
or
push
hlt
sbb
inc
push
mov
loope
rcll
testl
xchg
cld
mov
mov
mov
lahf
out
ret
pop
adc
mov
jnp
mov
repz
dec
ss
mov
mov
icebp
inc
pusha
fdivr
add
lret
dec
mov
rorl
test
and
jl
dec
adc
adc
mov
xchg
repz
dec
sbb
mov
pop
xchg
js
xor
inc
adc
inc
push
jmp
call
mov
xchg
lcall
jo
pop
out
ds
or
or
mov
imul
mov
push
cmp
push
clc
mov
test
push
fcomps
dec
sahf
adc
inc
scas
sub
and
push
lcall
xchg
inc
in
xor
cltd
shrl
push
adcb
pop
negb
mov
ljmp
mov
xchg
add
jne
jnp
lret
mov
dec
mov
jb
dec
cmc
fnstenv
jge
push
cs
pop
addl
jns
add
mov
cmp
out
push
fldln2
fwait
popf
repz
jnp
xchg
hlt
lret
and
lods
lret
sub
daa
outsb
dec
pop
aad
ljmp
and
dec
out
arpl
frstor
xor
xchg
jecxz
push
mov
ret
in
in
adc
or
mov
mov
mov
pop
fistl
inc
pop
jmp
dec
and
push
inc
sbbl
shr
inc
mov
sahf
cmpsl
xor
push
ficoml
adc
mov
sub
xchg
pop
sub
dec
pop
fwait
jl
pop
movsl
loopne
sahf
pop
mov
es
aas
or
rcr
cwtl
add
mov
sub
test
cmp
test
fsubrs
pop
aam
sub
lret
push
jmp
leave
loopne
pop
push
rcr
aaa
cmp
sub
out
pop
pop
or
jp
push
imul
cmc
mov
push
mov
push
mov
cwtl
pop
pop
popf
in
and
inc
lods
cmp
insb
xor
popa
and
jmp
pop
adc
adc
enter
mov
xchg
into
shlb
ret
inc
sub
inc
sub
daa
stos
xchg
movsb
and
lea
mov
add
sbb
popa
add
pop
pushf
push
daa
push
and
int
inc
mov
push
add
mov
inc
sbb
dec
call
pop
mov
mov
add
cli
lcall
outsb
enter
and
rcll
xor
les
loopne
cmp
jbe
cmp
push
sbb
std
cmp
and
sarl
cmp
dec
jge
popa
lret
sbb
enter
cmovg
sarb
sbb
cmp
insb
in
push
gs
es
mov
cs
jb
inc
push
shl
xchg
mov
mov
add
mov
mov
sub
or
inc
inc
mov
daa
and
jbe
push
sbb
jmp
add
ret
mov
mov
lods
push
test
xchg
addr16
out
jecxz
cltd
mov
cli
test
ds
dec
and
cwtl
or
jnp
ljmp
mov
adc
sbb
stc
stos
sub
lods
das
or
rolb
adc
add
ficoms
or
xchg
loop
adc
dec
mov
xor
cld
lock
inc
lret
push
jge
cld
mov
loop
jmp
pop
and
into
mov
stos
mov
fmuls
sbb
add
repnz
addr16
push
ffree
and
pusha
jne
movsl
sub
or
and
enter
int3
insl
add
sub
cmp
pop
lods
loop
lret
push
mov
xlat
dec
cmp
add
push
pop
mov
leave
bound
adc
push
call
imul
inc
mov
adc
push
xor
xor
cmp
inc
lret
in
pop
inc
push
cmp
cmp
xor
or
imul
inc
jg
xchg
les
sarb
cmp
pop
jg
daa
lcall
cmp
inc
dec
test
pushf
and
xchg
push
add
sbb
ret
jecxz
pop
sub
adc
int
das
sub
add
aad
fmul
rorb
pop
sbb
mov
sbb
pop
icebp
sti
mov
mov
movsb
xor
mov
or
and
mov
imul
andb
sub
or
lret
imul
cmp
or
cld
out
leave
aam
jo
out
or
sahf
mov
and
mov
mov
pusha
fstps
imul
push
pop
or
push
inc
ret
int3
ror
xchg
sbb
enter
push
loope
rcrb
clc
and
pop
fisubs
aaa
je
dec
sbb
test
pusha
sub
pushf
lahf
push
das
jmp
test
les
push
jecxz
and
pop
jae
stos
int
sbb
add
sub
nop
sbb
ja
mov
dec
jmp
js
jb
ja
sbbb
inc
lock
mov
fstl
jns
cmp
mov
jns
mov
roll
rclb
mov
adc
pop
jb
adc
adc
loop
mov
sbb
pop
popa
jle
add
ret
xchg
in
xchg
mov
imul
mov
adc
xchg
scas
add
sbb
cmpsl
jge
push
mov
add
sahf
sbb
cltd
movsl
lret
xor
sti
inc
lcall
adc
enter
fimull
add
in
daa
dec
dec
mov
cmp
pop
insb
adc
sub
xchg
scas
fisttpl
push
aam
jp
xor
iret
pop
adc
jl
dec
lea
sbb
mov
xor
cmp
push
sub
outsb
dec
cmc
ds
fsubrs
movsl
xchg
sbb
sarl
push
nop
icebp
adcl
mov
inc
mov
push
rcll
mov
mov
xchg
aad
mov
leave
push
mov
inc
imul
pop
arpl
mov
push
pop
jmp
add
lds
pop
cli
inc
mov
mov
mov
loope
test
sbbl
clc
jmp
jl
jne
gs
and
lods
xor
cwtl
or
sbb
or
xchg
nop
dec
jmp
neg
movsl
dec
testb
call
fldenv
pusha
fnstcw
mov
inc
fistpl
test
std
das
nop
or
adcb
fwait
loop
add
inc
ret
adc
jae
push
push
aaa
into
and
cmp
lret
ljmp
dec
ja
xchg
xlat
fsubl
icebp
addl
cmp
je
add
int
clc
fidivs
ja
jmp
adc
sbb
sbb
lcall
sbb
mov
ss
out
mov
adc
hlt
movsb
bound
and
pop
fbld
push
and
xchg
mov
mov
mov
sbb
xor
xlat
imul
lock
mov
mov
pop
cld
jb
lods
test
mov
xchg
sub
cld
xor
pop
insl
jbe
mov
stos
push
cwtl
dec
out
cli
sbbb
push
pop
inc
bound
xor
popa
push
mov
push
or
es
lea
lock
xchg
fucom
mov
out
pop
xor
jp
jmp
iret
addr16
mov
scas
dec
jae
xor
cltd
sbb
push
xlat
pop
inc
hlt
push
adc
pop
test
push
movsl
cmpsl
ret
mov
or
or
dec
addl
lock
gs
xor
add
and
add
xor
aaa
aas
jp
out
movsl
ja
int3
mov
pop
sbb
stos
inc
rcl
or
mov
es
adc
int
fisttpll
cld
js
xchg
loope
sbb
sub
test
adcb
push
pop
sub
sbb
pop
shlb
fistpl
xchg
cmc
push
imulb
lods
in
add
cmp
add
inc
mov
pop
std
pop
sub
ret
std
in
cld
jg
xor
or
dec
sahf
mov
cld
and
sbb
arpl
sub
enter
cmpb
js
adc
rolb
push
jecxz
sub
push
inc
insb
fdivrs
sti
jl
out
mov
js
ja
cmp
mov
fnstsw
int
jmp
fistpll
sbb
adc
popf
movsb
lret
test
aas
dec
adc
cmp
ds
jne
mov
xchg
mov
nop
rclb
add
lods
cmp
repz
mov
test
mov
jecxz
daa
stos
dec
lcall
roll
sbb
pop
movsb
or
aad
push
into
subl
cmp
js
orb
rcrb
fisubrs
jne
bound
push
in
add
jg
rcrl
adc
in
stos
xchg
xor
push
pop
sbb
dec
jecxz
lds
mov
aam
mov
es
cmp
stos
or
fsubrs
outsl
push
sbb
push
lock
pop
inc
and
mov
push
cmp
insl
js
icebp
les
bound
stos
rolb
push
jbe
pop
mov
dec
es
cmp
movsb
xor
or
push
mov
push
mov
or
ret
rorb
scas
iret
mov
push
aaa
pop
sarl
in
push
repnz
iret
popf
or
pusha
daa
inc
or
ja
aas
adc
mov
into
add
or
ljmp
cmp
negb
dec
int
call
daa
lret
or
cmpsl
enter
cmpsb
mov
xchg
xchg
roll
movsb
cli
jae
pop
data16
xchg
push
cmp
negb
out
sbb
mov
dec
lret
lahf
aas
sub
dec
lds
leave
ja
lret
aas
sbb
xor
jle
sub
insl
jp
xchg
xchg
push
out
and
repnz
inc
es
and
sbb
sub
fisubl
scas
jmp
and
lahf
nop
imul
and
popa
xor
push
into
mov
xor
and
or
push
out
nop
mov
pop
jns
loopne
cmpl
adc
xchg
pop
movsb
out
and
outsb
mov
or
cwtl
mov
fiadds
rorb
dec
outsl
les
and
dec
lea
std
or
mov
sbb
add
cmp
cli
and
push
bound
mov
in
int3
pop
push
out
xchg
dec
adc
inc
adc
iret
and
test
ret
add
leave
hlt
stc
imul
mov
cld
jo
repnz
and
test
cmpsb
xchg
add
push
or
outsb
mov
jl
sub
fsubs
inc
out
or
int
pop
cmp
enter
push
mov
xchg
aad
xor
ss
or
lret
outsb
mov
cmp
and
push
outsl
imul
out
jg
movsl
shlb
inc
inc
or
lret
outsl
test
stos
xchg
dec
xlat
push
push
pushf
mov
pushf
aaa
js
jnp
dec
lods
fwait
fwait
and
jnp
insl
sbb
sahf
repnz
icebp
fdivp
jge
and
sahf
lcall
sbb
shlw
ss
lret
pop
mov
inc
scas
fistpl
inc
mov
lock
roll
dec
test
xchg
mov
dec
add
pop
add
iret
add
repnz
out
fidivrl
xor
ficoml
adc
in
rcrl
clc
test
pusha
ja
pop
sahf
stos
fistl
aaa
cwtl
in
clc
push
leave
aad
push
dec
loopne
das
mov
mov
jno
push
shll
stos
lods
out
cmp
xchg
xor
pop
xchg
xor
fnstenv
push
jmp
neg
xchg
xchg
aas
mov
adc
or
and
inc
lret
xchg
bound
cmpsl
ffree
sbb
inc
mov
push
or
push
dec
mov
or
push
jbe
adc
aam
in
inc
inc
push
sahf
stc
adc
lret
shll
loope
lret
mov
add
xor
push
shl
xor
dec
out
sbb
nop
xor
icebp
jge
outsb
xor
mov
jbe
mov
mov
and
xor
sbb
cmc
fisubs
dec
jbe
call
ret
jns
pushf
lods
mov
mov
stos
in
imul
add
pop
lods
aad
test
popa
pop
xchg
adc
cmp
pop
inc
sub
sbb
aam
fs
ss
cmp
xchg
cwtl
inc
push
cwtl
pop
test
movl
outsb
dec
add
lock
inc
jecxz
jge
rcl
test
cmp
cmpb
insb
xchg
pop
aam
icebp
addr16
sbb
xchg
scas
cmpb
add
stos
sahf
loopne
cmp
add
jne
into
test
loop
or
mov
movsl
inc
mov
jg
jl
or
repz
out
xchg
das
push
and
dec
jmp
lcall
inc
std
lret
pop
in
sbb
ljmp
fbld
dec
jns
mov
lods
popa
idivb
cltd
filds
mov
mov
push
mov
and
jne
sub
cmp
xchg
out
push
mov
shrb
in
pop
push
add
sbb
scas
mov
inc
mov
mov
xor
ret
or
out
xchg
xchg
clc
ljmp
mov
sub
adc
inc
jmp
loope
stos
and
mov
int3
test
aaa
cmp
sub
mov
sahf
nop
xor
orb
xor
sti
pushf
sub
push
xchg
popf
je
inc
arpl
pop
cli
test
jo
add
jae
mov
cmp
mov
push
in
sbb
push
faddl
lds
outsl
cmp
shrb
mov
jnp
imul
lcall
jo
addr16
test
popf
call
cli
imul
xchg
fwait
imul
adc
pop
jo
add
xchg
push
mov
pop
mov
mov
call
cli
outsl
mov
shlb
stos
xor
mull
mov
push
ja
cmp
adc
add
push
inc
fcmovnbe
sbb
mov
inc
adc
mov
enter
iret
mov
add
xor
out
mov
jb
addb
arpl
and
lret
icebp
ds
cs
lahf
loopne
addr16
addr16
or
outsl
hlt
daa
mov
mov
dec
fsubr
mov
push
jae
lock
xor
xchg
sub
pusha
fadd
jnp
dec
sar
fwait
pop
lock
mov
test
rorb
adc
cmp
repnz
out
xchg
jge
test
jge
dec
cmp
cmpsl
ret
sbb
inc
fs
cmp
mov
lea
push
mov
ja
movl
enter
mov
jbe
push
stc
lock
jbe
inc
add
mov
fimuls
dec
add
sti
mov
mov
test
aaa
mov
pop
mov
jnp
xchg
xor
lock
in
adc
in
xor
or
dec
push
mov
mov
or
push
int
cmpsl
lock
ficomps
stc
push
cmpsl
push
inc
arpl
xchg
add
add
inc
inc
xor
ds
in
sahf
xor
xor
sahf
in
sbb
add
cmp
repz
aas
pop
mov
imul
idivb
mov
and
mov
xchg
xchg
dec
pop
mov
push
mov
in
add
push
push
sub
std
aas
jns
or
inc
fwait
mov
js
iret
in
scas
pop
sub
jmp
sub
pop
iret
xlat
movl
mov
inc
push
inc
ja
jge
adc
stos
cmp
adc
mov
push
mov
into
and
jle
lods
pop
push
sub
je
sub
loop
push
idiv
bound
inc
bound
or
mov
mov
cs
cmp
cld
test
lret
push
outsl
ljmp
dec
xchg
fs
inc
mov
stos
jge
push
and
pop
jns
pop
pop
mov
clc
and
push
int3
imul
in
cld
dec
outsl
cmp
add
inc
mov
jg
lods
movsl
cmc
outsl
test
pop
cli
cld
es
sub
push
fldenv
pop
cltd
xchg
jnp
hlt
imul
xchg
mov
js
add
add
pop
dec
popf
xor
scas
mov
sbb
fstpl
cltd
ljmp
aas
jb
sbb
cwtl
sti
dec
shrl
ds
lods
lret
scas
xor
push
inc
ja
jle
es
and
pop
into
push
add
mov
aad
addr16
mov
ret
xchg
fbstp
jmp
add
push
sti
sub
lods
dec
sahf
mov
pop
pop
jl
call
sbb
int3
data16
xor
scas
push
and
lahf
sbb
and
dec
xlat
cmc
out
jp
cltd
xor
mov
into
repnz
in
sub
bound
sub
jmp
xor
in
fldcw
mov
insl
mov
dec
es
and
negl
and
sbbb
jne
mov
xchg
cwtl
mov
aaa
shlb
int3
aam
sarl
std
xor
xchg
adc
dec
jo
add
mov
aas
mov
adc
lcall
bound
push
jno
out
xor
loop
test
mov
jnp
add
dec
jnp
xchg
pop
subl
scas
pop
mov
ss
cmpsl
push
test
mov
jne
mov
addl
sub
std
mov
fwait
add
xor
loopne
xchg
mov
fidivrs
pop
cltd
cmp
mul
shl
dec
aas
stos
cmp
dec
fwait
leave
fs
popa
loope
fs
dec
dec
mov
dec
mov
daa
outsb
mov
mov
mov
popf
mov
mov
push
cmp
scas
enter
sbb
loop
nop
fistpl
mov
sub
cmovge
xor
outsb
jecxz
sub
inc
stos
sti
repz
and
mov
pop
or
mov
xchg
dec
fcompl
jnp
imul
les
out
cli
sti
icebp
das
iret
dec
and
mov
jb
xor
jns
mov
imul
mov
and
mov
scas
sbb
push
pop
sub
mov
cmp
xlat
mov
aaa
sub
sbb
rclb
xor
stos
dec
add
loopne
mov
push
addr16
pop
insb
ret
xor
and
add
inc
out
popf
jne
add
clc
mov
js
inc
sar
addl
mov
mov
jns
in
aas
out
mov
movsl
iret
les
dec
lea
and
shrl
cmp
clc
cli
cmp
jns
rcll
sub
pusha
inc
dec
sub
popf
jg
dec
jbe
dec
push
jg
cmpsb
lret
ds
sbb
pop
dec
das
xchg
jno
jecxz
loop
mov
or
daa
popa
in
mov
cmp
jg
sub
mov
xchg
pop
int3
ds
pop
addr16
and
pop
jecxz
int3
jo
adc
or
xlat
cmpsl
and
fwait
mov
cwtl
or
and
mov
sbb
pop
xor
pusha
mov
add
xlat
jns
jg
ret
popa
mov
cld
add
cld
lret
mov
push
test
xchg
and
push
and
ds
sub
add
jne
imul
pop
add
call
test
or
sub
dec
xorb
and
mov
xor
add
test
scas
enter
xor
cmpsl
or
mov
xor
arpl
push
jge
xor
pop
dec
fs
sub
into
arpl
lcall
fiaddl
dec
sub
imul
adc
xor
or
sub
add
lcall
xlat
test
loopne
inc
lretw
fsts
push
int
mov
xchg
lods
pop
das
push
jmp
mov
mov
or
xlat
das
nop
cmpl
hlt
pop
mov
ret
xor
jg
pop
cmp
popa
pop
cmp
push
inc
stos
lret
popa
push
cmp
cmp
cmpsl
pushf
js
xchg
loopne
mov
mov
fadd
add
popf
call
jp
inc
adc
outsl
add
mov
fs
sub
sbb
cli
clc
fisubrl
sbb
add
into
rolb
ret
push
insb
sub
ss
push
popa
mov
out
lea
shrl
xchg
mov
xchg
and
or
cltd
fwait
rclb
mov
mov
xchg
sahf
stc
mov
sahf
clc
movsl
pushf
in
xor
pop
lret
pop
mov
orl
jmp
in
xchg
pop
hlt
push
jns
ss
and
dec
adc
add
lret
insb
push
xchg
pop
pop
or
pop
arpl
adc
loopne
adc
jnp
ja
clc
imul
or
dec
insb
rcrb
xchg
shl
dec
les
sub
call
out
ret
es
loop
sub
imul
stos
ds
pop
jmp
cmpsl
pusha
dec
inc
into
xlat
jge
inc
or
call
shrl
jl
lock
mov
inc
add
aad
dec
pop
fmull
cwtl
movsb
or
jg
jbe
jno
scas
pop
jle
mov
lock
xchg
add
rcll
dec
or
adc
popf
std
rclb
xchg
pop
ljmp
mov
out
add
fstps
xchg
mov
in
sub
xchg
ljmp
mov
es
insb
mov
xchg
shrl
mov
lods
nop
sub
dec
aaa
sbb
test
sub
fsin
hlt
and
push
jge
test
call
in
adc
shrb
mov
les
cmp
add
push
aas
jle
or
lods
push
xor
jo
rol
jmp
sub
or
lcall
inc
test
xchg
xchg
rol
lods
incl
push
push
push
test
arpl
xor
sbb
adc
xchg
lret
pop
adc
inc
jmp
push
aad
add
gs
cmp
cs
pop
pop
into
fbstp
addr16
pop
adc
cld
jmp
inc
and
std
xchg
outsl
mov
dec
sbb
mulb
sbb
inc
shl
or
pop
mov
and
pop
lea
lock
adc
xor
outsl
mov
movl
xchg
ja
inc
test
push
inc
xor
dec
lea
jnp
mov
mov
popl
or
mov
icebp
jno
fnstcw
decl
xor
sub
mov
cmpsb
jmp
aam
insb
cltd
mov
jo
mov
cwtl
and
xchg
gs
or
popf
popf
fwait
dec
aas
dec
stc
rclb
outsb
movsl
das
cmp
sti
jnp
xchg
fdivrs
aaa
xchg
inc
sub
daa
mov
pop
jmp
jbe
inc
jge
imul
and
into
lods
and
sub
test
cmp
lret
push
adcl
mov
out
mov
ja
adc
mov
sahf
sub
dec
jmp
xchg
add
hlt
leave
cmp
pop
mulb
ret
ds
jbe
daa
lcall
push
lret
sbb
fwait
stos
mov
sbb
fisttpll
orb
outsl
adc
test
shll
sub
xor
pop
xchg
jb
ja
add
jmp
popa
mov
out
ret
push
jle
movsl
sub
jge
xchg
jb
push
inc
lock
pop
out
mov
pop
ret
ljmp
aaa
jmp
add
cmp
xor
mov
lcall
mov
ja
or
push
fnstsw
lds
daa
fdivrs
pop
dec
jl
scas
ljmp
ret
int3
shll
add
lock
dec
inc
ja
or
push
ds
nop
cld
scas
pop
pop
cli
push
test
cmp
mov
les
mov
dec
pusha
subb
xor
sub
gs
push
xchg
lret
inc
lahf
xor
sbb
lahf
push
jne
push
mov
jae
lock
mov
sub
pushf
xchg
jmp
shlb
dec
jmp
and
push
aad
and
pop
pop
out
outsb
mov
push
mov
and
in
jl
sbb
in
push
cld
xchg
add
sbb
es
movsb
inc
push
pop
repz
nop
andl
into
inc
and
or
stos
jl
call
push
into
insb
cmp
addr16
ss
push
cwtl
in
mov
icebp
pop
movsb
lock
xchg
xchg
addr16
je
lret
sub
and
inc
xor
insl
sub
das
notb
fadd
les
sbb
rcr
lods
mov
cld
dec
xchg
rolb
xchg
mov
cmp
add
cltd
gs
push
or
int3
dec
or
adc
sub
fnsave
fdivs
js
daa
dec
aad
mov
lods
pop
repz
pop
push
lods
pop
mov
pop
nop
inc
push
fcompl
cs
or
xchg
testl
mov
shlb
push
mov
pop
mov
mov
rcrb
inc
inc
in
popf
sti
or
mov
pop
fildl
or
mov
xor
std
cmc
fwait
inc
fldcw
ret
and
jo
pushf
adc
xor
mov
std
ficoms
adc
into
hlt
jb
sarl
in
imul
test
ss
xchg
lea
mov
dec
dec
ljmp
push
push
sbb
mov
mov
push
inc
cmp
add
out
fxtract
sahf
pushf
inc
int
jecxz
adc
xor
test
nop
mov
and
ljmp
adcl
out
sub
xor
mov
hlt
lahf
or
mov
loope
push
xor
test
repz
lock
and
mov
cwtl
cmpsb
popl
add
push
sahf
negb
shrl
sub
dec
adc
add
repz
cmp
cmp
call
test
xor
jl
adc
or
sbb
sahf
lahf
cmp
fs
add
aaa
sbb
dec
scas
xchg
mov
push
push
test
inc
xchg
rclb
mov
test
xlat
push
lods
cld
xchg
mov
cmpsl
mov
adc
mov
aas
xor
adc
or
mov
adc
nop
enter
vphaddwd
mov
dec
push
jl
or
cmp
mov
cmpsl
pop
aas
inc
aam
inc
cmp
arpl
sub
or
mov
pop
xor
cwtl
out
inc
iret
lcall
inc
incb
push
sub
jmp
movl
pop
into
stc
xchg
pop
cs
fs
add
push
xor
jno
mov
out
loopne
mov
stc
pop
scas
adc
loope
nop
dec
out
les
pushf
xchg
xor
mov
lods
out
sahf
int3
mov
cs
xor
out
xor
leave
mov
ja
pop
mov
mov
cmp
sahf
in
lret
mov
or
sbb
cmc
js
adc
shlb
lret
xchg
movsl
mov
lret
rclb
pop
sbbb
iret
ljmp
std
xchg
lret
jo
sbb
mov
loopne
mov
out
xchg
mov
iret
pop
pop
mov
out
push
xlat
adc
xchg
xor
push
ljmp
out
test
jle
mov
test
cwtl
fcompl
and
sbb
add
arpl
jne
jns
cmpsb
jbe
lds
and
jae
sti
fidivl
dec
cmp
inc
adc
jbe
insb
cmp
xor
push
pop
repz
add
ds
daa
jo
in
dec
jns
xor
push
inc
xor
and
xchg
dec
jno
daa
imulb
inc
push
and
mov
cmpsb
push
shll
shl
lret
lock
add
es
dec
icebp
lods
jne
mov
rol
inc
ficomps
test
or
and
push
pop
outsl
jmp
mov
shlb
jge
push
and
mov
add
adc
mov
inc
jl
mov
cli
push
fisubrl
mov
ficomps
sti
mov
negb
mull
scas
xchg
xchg
stos
aam
mov
mov
aas
mov
mov
lcall
mov
pop
mov
mov
pop
or
mov
xor
test
aas
xchg
xchg
movsl
xor
add
sub
daa
sti
mov
stos
sbbl
pop
inc
test
mov
out
adc
cs
test
sbb
mov
out
pushf
mov
bound
or
incl
mov
sbb
cltd
jbe
mov
and
es
jnp
ja
sbb
arpl
enter
xchg
mov
fbld
call
push
xchg
lods
push
push
pop
adcb
cmpsl
push
popl
push
mov
icebp
xchg
dec
xchg
bound
add
into
sti
push
mov
push
and
rcl
es
aad
outsb
cld
fisubrs
loop
push
xchg
jnp
daa
fildll
shlb
xor
push
and
aas
adc
dec
fcmovu
stc
cmp
xchg
ja
cmpsb
mov
and
or
mov
mov
ror
xchg
repz
mov
lret
mov
shld
sub
jecxz
mov
divb
mov
addl
cmp
xor
ret
pop
xchg
push
and
mov
mov
je
scas
mov
xchg
mov
mov
fprem
pop
out
es
cmp
and
lds
clc
adc
jbe
insb
mov
and
loop
add
ljmp
push
repz
push
add
out
inc
jmp
inc
push
call
xchg
inc
mov
out
ja
pop
lods
jns
insb
push
stos
mov
test
cmp
mov
les
dec
lods
cmp
pop
test
add
std
sbb
xchg
xor
aaa
dec
cmp
sub
push
movsl
repnz
lea
mov
fsqrt
push
or
out
ret
mov
inc
cmc
pop
stos
leave
inc
lock
xor
mov
icebp
sub
repz
ljmp
inc
inc
testl
fstpl
dec
out
pop
outsl
int
xchg
sub
xchg
enter
jns
xchg
les
inc
mov
cltd
fnstcw
enter
or
pushf
sub
outsl
pop
cmpsb
dec
test
adc
fisubrs
out
push
cmp
pusha
incb
add
mov
xor
sbbl
sbb
popa
push
mov
int3
cltd
cmp
mov
aam
nop
mov
pushf
sarb
mov
xor
cli
movsb
add
je
movsb
push
mov
push
xchg
jo
add
mov
ret
cwtl
cmpsb
mov
mov
lcall
pop
jae,pt
pusha
jl
icebp
dec
shr
xchg
fildl
fiaddl
cli
in
sub
mov
fwait
repz
jmp
pop
mov
or
cmp
xchg
movsl
repnz
mov
js
test
ret
gs
lods
lret
lea
repnz
cmp
orb
fdivrl
ja
out
jno
cli
mov
sub
fwait
sbb
cmp
mov
icebp
mov
icebp
adc
mov
popf
or
test
test
jnp
cmp
jecxz
mov
dec
clc
iret
sbb
iret
xchg
xor
jb
jnp,pt
push
push
cmp
movsb
cmp
adc
int
mov
sub
filds
call
movsb
shrl
mov
std
pushf
and
ss
clc
hlt
js
es
dec
stc
inc
jecxz
inc
cmpsl
pop
out
and
hlt
xchg
out
push
sub
jae
popa
sub
mov
push
inc
or
cmp
adc
pop
adc
xchg
mov
iret
subb
lret
sbb
movsb
xchg
inc
dec
std
jb
mov
rorl
xor
es
jl
sbb
stos
imul
inc
mov
std
or
push
jecxz
addr16
ss
fnstsw
mov
fs
inc
fsubl
arpl
inc
das
leave
pushl
push
jge
outsb
jne
in
mov
enter
adc
fdivl
jl
xor
aam
sub
rorb
mov
inc
add
inc
gs
in
out
sub
mov
inc
push
xor
sub
push
jecxz
xlat
xor
in
sahf
pop
hlt
mov
jo
lea
mov
aaa
rorl
out
test
cmp
xor
sub
jae
test
aas
rep
ljmp
test
dec
dec
test
sbb
pop
je
leave
xchg
notl
int
pop
or
lods
das
xor
imul
hlt
cmpsl
leave
and
jle
push
les
pushf
fs
rol
mov
sub
test
pop
cmpl
mov
pop
icebp
mov
mov
inc
xor
repz
enter
outsb
push
fcompl
mov
cli
into
gs
sbb
int3
test
cld
mov
adc
test
hlt
mov
loopne
mov
add
add
stc
pushw
les
mov
sbb
and
fdivs
sub
xchg
mov
dec
fcoml
push
mov
iret
pop
test
add
repz
push
pop
inc
add
sbb
add
das
cmp
mov
mov
loope
and
call
aaa
xor
lea
sub
sub
or
xor
or
xor
mov
popf
ljmp
adc
and
cwtl
fisttpll
xor
jnp
mov
pop
aas
test
or
adc
andl
jnp
cwtl
dec
clts
pop
pop
sub
ljmp
dec
and
pop
xchg
and
and
or
fmul
mov
out
in
sahf
pop
std
bound
or
inc
hlt
mov
adc
add
fwait
aad
mov
mov
inc
cmc
popf
fdivr
jge
sbbl
stos
inc
jb
mov
test
mov
push
and
cmp
inc
sahf
pop
dec
and
mov
inc
negl
cmp
mov
cld
daa
bound
ljmp
sub
out
pop
sahf
rorb
jmp
xor
test
jecxz
sub
das
add
xchg
repnz
sub
mov
sbb
testl
jp
pop
mov
movsb
test
inc
inc
or
cli
cltd
adc
push
sbb
dec
xchg
add
daa
or
rclb
mov
sub
into
or
lret
imul
in
cmpb
scas
fdivp
or
push
xchg
dec
xchg
push
inc
scas
lods
lods
sahf
pop
xor
fisubrs
mov
ja
sbb
outsb
push
cld
out
inc
hlt
adc
adc
push
lods
call
sti
add
lods
mov
adc
mov
pop
in
movsl
cmp
push
outsl
arpl
outsb
dec
pop
std
popf
push
sbb
mov
sbb
out
push
fcmovnbe
push
push
mov
sti
out
jle
adc
mov
arpl
pop
and
into
add
out
outsb
mov
mov
shl
clc
movb
loope
mov
dec
aad
stos
or
jl
pop
xor
shl
xor
lods
in
dec
mov
not
and
negl
pop
sub
std
xchg
push
mov
inc
push
pop
jle
sarl
or
dec
loop
push
adc
in
jb
or
jbe
jl
ficompl
aas
cmc
insb
dec
jmp
stos
movsb
fadds
mov
jo
imul
ret
lods
add
jmp
jnp
ljmp
cmp
mull
mov
dec
arpl
mov
or
sbb
dec
sbb
adc
cwtl
test
test
xchg
xchg
push
pop
cmpsl
pop
mov
sbb
push
sub
imul
sbb
jnp
test
jo
clc
cmp
or
jecxz
add
lds
mull
outsb
fisttpll
mov
lcall
push
xor
scas
pusha
jno
sahf
movsl
in
adc
ja
lret
push
hlt
negl
and
add
in
inc
adc
mov
mov
sub
div
inc
rcrb
fldt
ljmp
sub
sbb
or
mov
jns
roll
pop
loopne
or
lret
and
or
xchg
pop
jae
pop
ljmp
loope
sbb
and
scas
jo
pop
cmp
leave
xor
pop
inc
add
es
mov
cld
repz
dec
add
sti
fstpl
sub
add
cmp
adc
in
stos
sbb
jns
push
scas
addb
adc
bound
lret
adc
lret
and
sahf
data16
dec
mov
ret
sahf
imul
leave
mov
mov
push
sub
clc
adc
sbb
ret
stc
int3
out
mov
mov
aam
cld
sub
jb
call
rcrl
lret
mov
mov
arpl
outsb
popf
or
mov
dec
add
orb
icebp
cmp
jno
push
shl
shlb
xchg
lcall
jnp
sub
adc
addr16
jl
and
push
pusha
jge
sub
aad
sub
cmpsb
mov
fisttps
xorl
and
mov
imul
int
mov
xchg
mov
xor
xor
jge
in
or
sahf
jnp
adc
adc
mov
mov
push
ja
xor
in
loope
or
push
aad
mov
jmp
sahf
adc
lds
dec
jmp
ret
dec
mov
pusha
cmovae
xor
jnp
jns
sbb
sub
pop
out
test
push
out
push
rcrb
daa
sbb
mov
xchg
xchg
and
inc
mov
pop
jmp
sbb
cmp
in
loope
addr16
lret
daa
sub
mov
mov
dec
lret
testl
ljmp
outsl
pop
xchg
es
push
fsubs
popa
dec
outsl
xor
ret
daa
aad
jne
push
push
shll
adc
jae
bound
sub
call
enter
out
adc
sahf
mov
inc
shl
or
aaa
hlt
imul
cmp
dec
stc
jbe
pop
or
mov
addr16
hlt
scas
idiv
insl
cmc
dec
xor
adc
xchg
jnp
and
sub
cwtl
inc
or
stc
pop
push
jl
xchg
int3
sub
mov
lcall
js
mov
jo
xlat
fs
ret
jo
or
dec
mov
mov
in
push
push
popa
or
popf
lahf
adc
mov
push
jnp
clc
xchg
test
out
insb
fs
ljmp
mov
push
hlt
push
cld
xor
push
inc
cmp
aas
fcomps
cmp
out
notl
xor
js
push
gs
arpl
repz
xchg
inc
cmp
dec
fsubl
xlat
sub
inc
xor
cli
xchg
mov
xchg
aaa
or
mov
aas
add
push
mov
xchg
and
sti
mov
ret
and
jnp
icebp
fidivrl
inc
jne
addl
lret
notb
add
and
in
dec
shrb
aaa
imul
and
inc
aam
jae
fs
jmp
pop
out
mov
sbb
pusha
sbb
mov
shrb
cmp
leave
fnsave
in
cwtl
jecxz
stos
fdivrp
push
mov
das
jmp
xchg
jmp
add
rcl
mov
xor
js
and
shll
lret
lret
lea
jno
pop
push
rcll
fidivl
sbb
stos
or
cltd
fwait
mov
rolb
sar
push
mov
push
dec
mov
insb
adc
pop
xchg
or
sbb
mov
xchg
lret
das
pop
mov
aam
sbb
ret
movsb
int
push
cmp
test
fistl
outsl
or
mov
ss
rorl
out
xchg
std
fdivp
xchg
inc
push
addr16
popf
mov
xor
push
ds
inc
xor
fldt
push
or
aad
dec
mov
pop
push
fimull
ret
sub
movsl
fsubrs
jge
outsl
dec
or
mov
mov
push
push
int
je
insl
nop
mov
in
sbb
sub
mov
stos
xchg
inc
lods
mov
shll
pop
dec
cwtl
pop
jns
jecxz
sub
dec
push
and
mov
leave
and
or
cmp
dec
insl
mov
dec
popf
ss
xchg
jg
xor
rclb
and
insl
les
jg
fwait
jp
gs
stc
push
cmpb
fistpl
inc
and
add
pop
test
cwtl
mov
adc
fidivrs
adc
call
outsb
jg
push
add
mov
push
push
insl
sub
push
test
sub
jg
rorl
xchg
std
out
inc
mov
sbb
shlb
js
push
add
cwtl
loopne
test
repz
mov
jbe
inc
daa
mov
sbb
cs
outsb
test
jp
lock
lret
dec
add
adc
jns
in
movsl
push
and
pop
insl
cld
inc
adc
xor
clc
or
jle
mov
mov
popf
mov
pop
lahf
jp
test
push
aas
jle
inc
test
dec
fisttpll
cmpsb
pop
jge
cmpsb
cmp
dec
jb
pop
sub
jp
inc
pop
cmp
xchg
xor
cmc
cmc
test
popf
stc
std
mov
lahf
pop
in
je
cltd
mov
or
push
xor
cmpsl
mov
cmpsl
std
aad
add
fldt
pop
movsl
or
fdivrs
orb
subl
mov
cmc
push
mov
mov
xchg
insl
movsb
inc
mov
sub
inc
fwait
rcrl
fwait
xchg
and
sti
xchg
sahf
outsw
adc
mov
aaa
cmp
mov
mov
push
cmp
adc
lret
fildl
mov
loope
sub
adc
std
jnp
mov
lods
testl
xor
into
mov
aam
call
clc
xor
fxam
test
inc
xchg
jl
pushf
xchg
fdiv
xchg
xchg
lock
xor
xor
scas
cmp
mov
inc
stos
mov
jl
xor
daa
fbld
loope
movsb
mov
inc
push
cli
fidivl
das
mov
push
dec
push
push
lds
push
into
rcrl
hlt
popf
dec
cmc
xchg
adc
push
sub
push
out
test
aaa
addr16
ja
in
cwtl
cld
mov
rorl
fisttpll
xor
aam
in
or
mov
cmp
inc
imul
mov
in
dec
fisttpl
xchg
mov
fnsetpm(287
sbb
mov
xlat
push
and
sub
mov
fidivl
mov
jnp
pop
sub
mov
lret
push
mov
push
leave
or
cmp
xchg
sahf
jnp
dec
in
aas
stc
or
inc
in
add
mov
or
movsl
fisttps
paddusw
add
repnz
dec
sub
mov
or
clc
in
and
add
adc
pop
jle
push
push
xchg
incl
mov
aad
bound
xchg
cmpsb
leave
adc
hlt
fmull
out
int
iret
fdivrs
xor
add
aaa
cmp
xor
imul
cs
inc
movsl
cmp
pop
scas
pusha
or
jns
or
call
jno
bound
or
mov
ljmp
sub
hlt
pop
test
jmp
add
inc
loopne
inc
dec
shrb
pop
dec
inc
dec
in
xchg
aas
jge
xchg
add
xchg
mov
jp
out
cwtl
xorl
or
add
sub
mov
shlb
mov
addr16
mov
dec
mov
adc
in
es
sub
mov
nop
addl
or
push
btc
inc
jae
xlat
adcb
xchg
jbe
bound
mov
dec
jns
mov
aas
js
jns
andl
pop
cltd
mov
stos
ret
loop
sbb
xor
lea
lds
addb
sbb
in
ljmp
xor
gs
mov
inc
roll
pop
inc
adc
lret
stos
ja
adc
mov
ret
clc
stos
jns
add
adc
mov
daa
xor
push
pop
dec
mov
out
push
loopne
lea
jecxz
test
popa
add
lret
mov
pop
fisttpll
sbb
mov
mov
push
adc
sbb
mov
inc
mov
mov
andb
decb
cli
iret
test
andb
mov
jp
loope
in
aaa
or
sbb
in
xlat
mov
cwtl
adc
mov
aas
ret
sub
and
push
and
mov
mov
pop
scas
inc
or
mov
xor
insl
mov
fidivrl
sbbl
adc
sub
imul
repz
shrl
xor
inc
mov
or
push
xchg
inc
dec
data16
push
subl
orl
xor
push
jnp
jmp
insl
jnp
stos
add
ficompl
cmp
stos
aaa
fmul
shll
loop
aas
jge
aas
ss
lret
pop
emms
je
sub
cmc
ljmp
sub
xchg
lea
jecxz
in
xor
out
sbb
nop
or
sarb
sbb
mov
in
popf
je
insb
lret
push
rclb
pushf
cmovo
dec
lods
lock
sub
jns
jg
mov
stos
js
xchg
jge
arpl
js
cltd
fsubrl
data16
mov
jnp
fwait
test
adc
repnz
adc
pop
push
imul
and
lods
sub
arpl
cs
pop
inc
push
rcll
sbb
lds
xor
out
icebp
iret
inc
xor
mov
ja
pop
push
fcoml
jl
and
cmp
les
jns
xor
mov
in
pushf
dec
jmp
inc
add
lret
loop
sbb
pop
inc
repnz
popa
test
pop
mov
stos
sub
cmp
scas
cli
mov
or
mov
sub
sub
jp
inc
repnz
inc
xor
cltd
fcmovu
jnp
test
stc
cmpsl
mov
cmp
push
fmuls
sarl
push
jge
shrb
mov
repz
rclb
mov
pop
cmp
lcall
in
dec
arpl
roll
in
or
xorl
and
jo
and
cmp
or
pop
sub
mov
out
and
rorb
and
jae
or
rcll
out
fisubrl
mov
inc
imul
dec
xor
fiadds
pop
mov
rorl
sub
push
jp
cmp
cmp
cmp
cmp
jne
jns
in
xor
inc
sub
jg
adc
jae
addl
and
xchg
xor
pop
shrl
je
sbb
loope
jp
xchg
cs
aas
jmp
rcr
and
pop
jnp
mov
sbb
filds
mov
dec
mov
test
sub
cmpsl
scas
mov
jle
insb
dec
lds
pop
pop
pop
push
rorb
sbb
int3
loop
xor
sbb
inc
outsb
xchg
sbb
push
xchg
enter
mul
rcrl
mov
movsb
std
mov
cmovs
cli
cs
inc
fists
ret
mov
mov
adc
cmpsb
mov
sbb
out
mov
test
pop
mov
sub
push
call
cmp
mov
scas
add
stos
cltd
test
pop
push
into
dec
or
ljmp
and
lahf
cmp
inc
sub
pop
xchg
jmp
mov
test
inc
jbe
mulb
stos
xchg
mov
test
dec
sub
mov
jecxz
jge
xchg
push
cmp
dec
or
mov
lahf
stos
jae
sbb
inc
push
loop
and
xchg
cmp
gs
mov
pop
jge
or
add
inc
adc
ds
sub
int3
test
and
mov
xor
jns
gs
sub
imul
cld
insb
add
sub
mov
stc
xchg
add
aaa
sub
pop
mov
mov
call
pop
adc
lret
fwait
in
pop
dec
xor
adc
arpl
add
imul
movsl
push
fcmove
test
std
sbbl
dec
mov
into
out
das
test
pop
fucomip
or
loopne
aam
fwait
hlt
mul
jb
fcomps
movsb
adc
mov
loope
movsb
lcall
ret
iret
sub
mov
hlt
sahf
jne
jne
and
inc
pop
lds
incb
cmp
or
aaa
xchg
jns
sti
cmp
sbb
add
nop
dec
jns
test
push
out
mov
cwtl
dec
xchg
test
dec
fstpt
push
inc
lret
cmp
pop
adc
lret
pop
push
pop
mov
in
push
pop
into
xor
fs
mov
jecxz
adc
and
clc
aas
push
test
jb
xchg
xchg
push
and
jecxz
xchg
mov
stos
in
bound
pop
add
or
add
lods
sub
std
orl
xchg
jge
out
jbe
subb
int
lods
pushf
movsl
test
jns
mov
push
add
cmp
fiadds
scas
jns
popf
xor
pop
cmpsl
mov
jle
lret
js
mov
imul
jbe
lea
jbe
adc
xchg
divl
sub
mov
popl
les
push
mov
and
dec
sub
and
xchg
mov
fsubrp
xchg
inc
stos
push
mov
add
mov
add
out
push
push
push
adc
ret
jmp
jns
jo
fsubs
into
add
es
pop
fdivrs
mov
add
daa
inc
aaa
sub
jne
ret
ss
jns
sahf
nop
sbb
or
das
jp
aas
cmp
bound
lods
xchg
ss
mov
sbb
loope
lea
xor
pop
sub
in
or
shrb
pop
sub
push
mov
jecxz
dec
fldt
scas
out
mov
or
stc
hlt
inc
mov
push
push
jnp
inc
stos
ja
mov
push
mov
cmpb
jmp
lcallw
aaa
xchg
cli
fcmovne
and
pop
ret
lock
mov
xor
cmp
mov
dec
or
xlat
adc
imul
notl
mov
sub
andl
mov
sub
push
out
imul
pop
dec
filds
lds
scas
sub
add
dec
stos
pushf
in
push
out
or
fistl
xchg
arpl
sbb
inc
fdivs
inc
mov
xchg
xchg
push
outsb
push
and
cmp
movsl
data16
repnz
mull
icebp
and
xchg
loopne
sub
loop
jmp
and
daa
sarl
insb
int3
dec
jb
push
sbb
hlt
and
add
sub
mov
fidivl
sbb
pop
add
xchg
push
jns
inc
loopne
lahf
repz
mov
cs
push
aas
outsb
sub
in
cmp
fisttpll
imul
cmpsb
dec
and
or
jae
into
adc
and
cmpsl
push
inc
scas
inc
lods
sahf
std
dec
pop
mov
mov
cmpsb
cmp
xchg
add
xchg
jge
out
and
pop
pop
scas
inc
and
out
stc
dec
pop
sar
adc
test
test
clc
xchg
dec
sahf
xchg
in
push
rcrl
dec
dec
pop
adc
mov
inc
mov
inc
sahf
jp
push
sbb
jo
xor
sub
xchg
lods
jmp
xchg
lea
mov
rcrb
les
add
out
jnp
enter
inc
addr16
mov
push
aas
pop
in
pop
or
icebp
fisttpl
mov
push
rclb
mov
mov
sti
push
sarb
sub
repz
rolb
mov
and
inc
xchg
stc
sbb
add
cmp
mov
lods
outsb
or
xchg
inc
outsb
ret
sbb
pop
aam
inc
inc
pop
mov
fdivs
cmp
fyl2x
jmp
dec
add
push
pop
sbb
aas
mov
mov
sarl
xchg
lods
ficomps
sub
mov
jmp
sub
bound
add
std
mov
xchg
ret
icebp
rorb
mov
and
mov
data16
add
cwtl
std
mov
sub
sbb
inc
cmp
mov
add
xchg
enter
pushf
fcomip
lock
or
cs
mov
inc
pop
int3
pop
add
js
add
mov
nop
mov
repnz
dec
fdivs
xor
nop
xchg
fs
jno
test
aaa
jge
sub
aas
out
les
dec
int3
into
icebp
mov
xlat
push
pop
jbe
lcall
in
jno
and
add
or
sti
add
inc
mov
mov
mov
add
clc
push
mov
fwait
mov
addr16
xchg
jmp
scas
add
stos
dec
jae
pop
or
sub
lcall
scas
mull
inc
popf
inc
sub
enter
lret
cmp
fcmovnb
push
mov
sub
fsubr
jp
out
out
outsb
pop
sub
pop
lock
jns
pushf
xor
cli
pop
adc
lret
fisttps
out
bound
pop
test
xchg
push
xor
stc
rep
and
jg
mov
test
cmp
shlb
lds
mov
aad
pop
subb
das
jbe
adc
int
dec
aas
das
mov
popf
inc
lahf
scas
dec
inc
inc
cmp
not
dec
mov
jle
in
add
loopne
sbb
pop
out
xor
mov
sub
stc
inc
jp
or
sub
adc
daa
adc
dec
xchg
dec
icebp
xchg
mov
jmp
mov
mov
in
inc
cmc
stc
fidivrl
test
inc
shll
push
mov
add
sub
jp
repnz
inc
inc
js
add
inc
faddl
push
bound
or
mov
and
push
cmp
adc
add
imul
mov
jns
lea
pop
shlb
cli
mov
icebp
adc
jmp
in
jo
lcall
rorb
mov
movsb
filds
fldl
mov
pop
aad
push
sub
xor
stos
pop
out
rolb
fcoml
adc
push
sar
push
inc
arpl
mov
jl
or
cltd
dec
pop
or
mov
xchg
mov
pop
cmp
sbb
inc
loop
adc
imul
lret
cmp
mov
mov
inc
inc
and
jb
xchg
xchg
pushf
jg
popf
imul
and
sub
sti
mov
mov
leave
xchg
jle
repnz
adc
lds
mov
add
in
std
movsb
lea
mov
and
sti
imul
mov
mov
and
pop
stos
in
or
fidivrl
sti
fisubrl
mov
sbb
sub
movsl
dec
and
pusha
int
adc
mov
inc
and
jecxz
cmp
ss
out
push
cmp
mov
xchg
mov
negb
push
insb
loope
repz
adc
adc
out
inc
adc
mov
add
lods
movsl
loope
cmpsl
psrld
xchg
pop
daa
in
and
pop
imul
fdivs
pop
popa
xor
ds
push
jmp
test
ret
in
sti
popa
outsb
icebp
shr
cmp
mov
loopne
xchg
inc
and
ljmp
adc
inc
or
popf
sbb
push
and
xor
add
jg
popf
xor
adc
cmp
repz
inc
inc
push
xor
and
inc
popa
aas
scas
sub
sub
stos
pop
pop
sbbb
fistpl
ds
shlb
mov
mov
push
jne
loop
pop
movsb
stos
lahf
cmpsb
sti
ret
pop
into
or
pop
push
add
sub
add
adc
orl
add
pop
inc
insb
or
fcoml
lcall
sub
fcmovnbe
stc
sbb
push
push
lret
mov
mov
or
arpl
pop
les
int
add
in
adc
lods
test
pop
dec
sub
jno
into
les
jecxz
rcl
movsl
shlb
mov
adc
adc
mov
cs
cmpsl
or
imul
outsb
sarl
mov
jp
add
mov
sbb
xchg
cmp
outsl
das
sub
xchg
cmp
pop
xlat
orb
adcb
adc
or
pushf
jge
rorl
pusha
push
pop
insb
aad
pop
sbb
ret
mov
lea
jnp
add
inc
pusha
mov
mov
dec
outsl
sub
cmpsb
dec
inc
push
push
clc
js
xor
pop
xlat
cmp
cli
ret
cld
mov
int
pop
fwait
xor
cmpsl
and
sub
mov
adc
out
sub
pusha
lcall
mov
insl
fsub
daa
xor
stc
push
add
or
sarl
sarb
fldenv
dec
je
pop
sbb
pop
rcr
rclb
or
xorb
jmp
mov
arpl
sub
push
or
sbb
mov
push
mov
fldl
das
iret
add
push
xor
jecxz
jge
ja
clc
neg
mov
lods
sbb
pop
rcll
jne
sub
aad
dec
ja
stos
mov
bound
iret
lods
and
mov
mov
inc
push
std
sub
int3
or
lcall
xlat
adc
bound
xor
xchg
bound
add
or
or
cltd
bound
or
fisttps
test
pop
adc
adc
inc
push
inc
fbstp
insb
mov
dec
lret
jne
into
shll
pop
push
and
jae
cwtl
inc
leave
push
daa
fidivs
mov
push
fsubs
out
adc
xchg
fwait
pop
jl
ret
xor
aaa
or
lods
or
pop
or
rclb
sub
add
mov
mov
push
lods
or
or
pop
ss
aam
test
cwtl
imul
cmp
iret
jae
mov
and
fidivs
jno
inc
pop
ds
push
add
out
or
and
std
dec
sub
dec
ljmp
dec
fdivrl
mov
cli
mov
pop
addb
xchg
and
loopne
xchg
mov
test
push
mov
subb
in
mov
and
jecxz
sbb
loope
xchg
rcl
clc
inc
xchg
mov
out
jmp
popa
sub
test
pop
push
aaa
out
call
or
bound
push
jmp
pop
ret
loop
in
loope
aam
popf
push
shrl
pusha
push
dec
mov
push
cwtl
fwait
ja
test
and
mov
iret
subb
sub
pop
push
fidivrs
push
dec
push
outsb
mov
mov
dec
rorb
xor
fdivl
addr16
add
or
outsl
sub
sysenter
lret
sti
stos
orb
jecxz
and
pop
fsub
cwtl
loope
xchg
mov
or
loopne
cltd
pushf
sahf
cmp
mov
pop
pop
fs
push
shrb
sub
mov
fisttps
mov
dec
push
and
call
pop
dec
push
loop
mov
add
xchg
fdivrs
mov
lret
aam
scas
adc
dec
xor
test
push
lret
or
fisubrs
push
xchg
mov
xchg
pop
movsb
movsb
mov
mov
xorb
add
ficoms
bound
fidivs
and
je
rcr
movsl
stc
ret
xchg
pop
enter
loop
cli
repz
push
sbb
adc
push
or
pop
sbb
das
bound
mov
out
sub
mov
aas
cmpsl
push
jbe
bound
xchg
pushf
xchg
xor
adc
adc
loope
mov
jns
je
mov
test
jne
mov
lcall
clc
jl
adc
and
push
or
mov
es
cs
push
push
fs
pop
jb
adc
lcall
fbld
fiadds
ficompl
imul
test
imul
inc
in
push
xchg
cmp
idivb
push
xchg
sbbb
es
jmp
sub
es
and
je
mov
hlt
add
cmpsb
int
nop
add
cmp
std
je
inc
cmc
adc
cltd
push
mov
pop
xchg
pop
dec
and
std
push
int
pop
clc
jg
cmp
and
loop
out
das
jge
or
xchg
repnz
faddl
movsl
add
jl
pushf
movsb
mov
mov
pop
xchg
test
mov
and
into
sbb
lea
sbb
testb
rcrb
inc
jnp
shrl
xchg
add
pop
lds
movsb
push
in
pusha
sub
mov
lock
inc
sbb
inc
add
sti
push
stos
xchg
into
jmp
stos
mov
loop
mov
outsl
dec
cmp
rol
pop
adc
inc
jp
jnp
mov
push
shrb
jge
inc
popa
sti
sub
mov
mov
sti
mov
inc
xor
xchg
fisubl
add
push
je
xchg
gs
fistps
mov
pop
repnz
push
popf
je
adc
in
inc
mov
fidivl
mov
mov
mov
fiadds
adc
xor
in
ja
mov
add
stos
push
loop
leave
add
mov
pop
mov
xchg
fcoms
fsubr
popf
das
mov
das
call
or
sbb
shrb
lods
mov
imul
cwtl
dec
cwtl
pop
nop
push
pop
dec
fwait
xor
add
jecxz
dec
mov
in
subl
inc
fwait
mov
dec
in
xchg
push
in
mov
daa
xor
and
iret
loop
imul
push
stos
popf
jge
imul
into
stos
adc
pop
icebp
sub
jmp
pop
cmp
push
std
cmpsb
xchg
jb
jle
fcoms
out
mov
enter
leave
cltd
out
pop
xor
rep
ss
bound
xchg
xor
cmp
and
mov
repz
lahf
dec
pop
ud2
xchg
jne
adc
pop
add
and
push
xor
cmp
mov
cmp
movsl
mov
call
std
es
xchg
cmpb
out
fadds
imul
pop
add
add
or
call
insl
sub
mov
lds
int
test
add
cltd
cltd
cmp
push
push
cltd
enter
outsb
push
test
mov
fsts
movsb
pop
xor
dec
sbb
mov
aaa
int3
mov
cmp
push
adc
xor
lret
addl
dec
cmp
push
test
insl
pop
fiadds
adc
nop
das
mov
or
xor
jnp
mov
push
jl
enter
fdivs
mov
adc
ljmp
fildll
xor
adc
or
pop
add
mov
mov
mov
psllq
or
mov
nop
out
jmp
notl
mov
and
add
xchg
and
pop
sub
icebp
pop
jb
mov
mov
cmp
incb
mov
scas
jmp
pop
xchg
data16
cmp
dec
pop
mov
jae
iret
inc
dec
jne
cmp
inc
cltd
mov
pusha
fbld
stc
or
push
cmp
dec
popf
sub
cmp
ds
pop
out
jne
sbb
lret
imull
add
out
call
pop
xchg
test
cwtl
es
adc
iret
jge
mov
add
mov
push
sbb
or
mov
adc
xor
push
repz
in
push
iret
scas
imul
dec
push
lods
jae
outsl
test
stos
roll
mov
sub
sbb
hlt
in
mov
push
xchg
push
lock
push
mov
sbb
xchg
pop
mov
push
out
pop
call
pop
sbb
adc
subb
fwait
jge
or
dec
leave
mov
mov
push
aam
jmp
jmp
fildl
add
ja
in
mov
lea
pop
jecxz
pop
jg
add
xchg
pop
jmp
inc
nop
cmp
push
sub
aas
bound
pop
sub
mov
xchg
add
dec
andb
repz
xchg
lods
test
sub
sbb
or
incb
mov
sarb
imul
in
rcrb
jle
mov
leave
push
cmp
pop
push
outsl
dec
popf
int
pop
mov
mov
or
mov
push
or
push
xor
or
pop
cli
sbb
popf
mov
insb
std
rdmsr
fldcw
outsl
lods
pop
cmp
mov
mov
lret
mov
aad
mov
roll
lahf
pop
xor
popf
mov
orb
push
leave
pop
jb
or
call
cmp
cmp
dec
sub
ret
aad
clc
stos
outsl
cmp
xchg
sti
mov
inc
xlat
idivl
out
sbb
ja
xchg
std
inc
and
push
test
lea
stos
and
xchg
adc
popf
and
push
dec
outsl
hlt
movsl
jns
lahf
movsb
cmp
or
add
mov
cmp
sbb
idivl
aam
test
and
data16
ss
inc
mov
insl
inc
in
cmp
sub
dec
inc
inc
ret
push
push
xor
sarb
inc
rcrl
sbb
ss
ds
clc
scas
popf
cwtl
test
sub
jae
fsubrl
rorb
ret
sbb
mov
in
clc
jge
cs
add
inc
push
pop
push
das
fsubs
mov
insl
sub
daa
add
gs
sbbb
loope
scas
push
cmp
aad
lds
int
cli
arpl
mov
dec
andl
pop
add
sbb
or
negb
jle
mov
cli
jne
negl
xor
loop
lods
jg
push
sub
popf
scas
shl
das
repz
fldenv
add
cmp
or
or
mov
fs
fists
cs
fldcw
cmp
inc
gs
mov
fisttps
cmpsl
cltd
ds
fists
pop
ret
push
dec
sub
insb
mov
sub
in
push
inc
jl
dec
jl
add
in
sarb
lea
lret
add
nop
jle
add
sbb
es
jbe
sbb
mov
cmc
xchg
scas
add
cld
cmpsb
iret
sbb
mov
fwait
inc
push
hlt
in
gs
mov
mov
jne
andl
push
les
inc
hlt
cmpsl
xor
fdivs
pop
es
sub
push
fs
int3
insb
lea
sbb
dec
sub
repz
inc
lret
in
jns
dec
jns
pop
in
int
or
subb
or
loope
negb
and
out
mov
mov
mov
push
jns
jns
in
cmpsl
jns
test
dec
loopne
xlat
ss
movb
cmpsb
cmp
arpl
push
push
sub
pop
jle
push
push
push
leave
dec
cmp
cmp
lcall
push
mov
call
dec
push
pop
or
xchg
add
and
push
int3
addr16
or
cld
stos
jl
daa
mov
sbb
inc
sub
and
aad
fwait
daa
adc
test
push
out
pop
cltd
fldln2
dec
lret
and
shll
test
mov
sbb
leave
sbb
xor
dec
and
push
add
sub
addr16
pushf
aas
fnstcw
lods
lock
xchg
mov
xor
in
mov
adc
cmp
imul
mov
ds
divb
adc
jg
add
jbe
sbb
sub
mov
cmp
add
cmc
add
bswap
or
inc
sbb
aam
push
sub
shlb
cli
mov
or
mov
add
add
jae
cld
mov
into
out
mov
in
xor
push
movsb
shl
pop
mov
incb
or
jg
add
xor
sbb
pushf
jb
das
loop
pop
fstpl
jae
inc
sbb
mov
mov
in
leave
jb
pop
cwtl
cmpb
out
cld
jecxz
mov
xchg
pop
push
and
and
push
mov
inc
je
push
mov
bound
sarl
sub
das
add
push
pop
mov
xchg
cmpsb
mov
xlat
push
inc
mov
loope
in
add
in
or
pop
in
call
dec
cs
sbb
call
inc
xchg
inc
jb
mov
mov
sbb
js
sub
sahf
jno
cmp
xchg
inc
fsubr
cmpsb
push
fcoml
sbb
adc
lahf
stos
mov
frndint
lea
das
mov
outsl
fmulp
pop
xchg
jp
xchg
icebp
xchg
cmp
xchg
cmpsl
adc
arpl
int
lret
lcall
ljmp
jo
inc
fisttpll
mov
mov
popa
or
sbb
jne
add
gs
movsl
mov
pop
leave
scas
inc
insl
rolb
in
bound
insl
cmpsl
cmp
push
outsb
dec
leave
inc
fsubr
loope
and
xchg
mov
dec
fisttpll
outsb
test
and
std
in
sar
dec
out
sbb
xchg
sub
std
loope
jp
xor
sarb
mov
jmp
pusha
and
loope
dec
mov
xchg
cltd
mov
iret
xchg
jnp
cmpsl
cmp
leave
sbb
sub
stc
dec
lcall
inc
enter
and
stos
jae
push
aad
iret
das
adc
lret
jg
inc
fisubrl
pop
mov
jbe
sbb
mov
cs
mov
insb
cltd
jl
xor
in
imul
in
mov
mov
xor
stos
add
dec
push
dec
leave
fmuls
jo
xchg
test
loopne
sub
cmp
pop
or
inc
jg
adc
pusha
push
sub
cmpsb
aaa
out
mov
mov
insb
dec
push
push
mov
jle
aad
or
push
dec
cwtl
pop
mov
inc
dec
test
les
into
add
icebp
xrelease
fwait
lret
jecxz
push
imull
fcompl
cmpsb
dec
dec
outsl
cltd
cli
jnp
mov
xor
addr16
cmpsl
xor
cmp
cmpsb
mov
xor
cmpb
repnz
jecxz
outsl
xchg
cmpsb
xor
jnp
out
out
shll
add
cli
inc
lret
pop
cltd
mov
xchg
pop
pop
lret
jno
mov
cld
outsb
pusha
push
cld
mov
insb
sbb
xor
mov
dec
adc
pop
fisubs
test
cld
rclb
mov
into
test
jns
mov
xorl
or
fs
push
push
cli
and
das
mov
imul
fs
pushf
inc
xor
push
cli
cltd
dec
subb
outsb
out
sbb
xor
sbb
fistps
pop
aad
mov
rcrl
mov
mov
pusha
jae
in
sti
cs
hlt
cmpb
xchg
das
montmul
cmpsb
add
int3
stc
loopne
mov
mov
pop
mov
jne
jnp
adc
lds
xor
and
cmc
cmpsl
and
jge
jcxz
test
cmpsb
sbb
popa
pop
or
cmp
jmp
lods
push
fsubs
pop
lahf
lock
inc
add
imull
pop
cld
in
aad
inc
loope
adc
sbb
or
cmp
pop
mov
movl
mov
dec
pop
fwait
pop
jo
mov
lods
inc
dec
add
mov
enter
ss
mov
push
sub
rorl
bound
xchg
mov
fsubrl
jbe
cmp
mov
pop
mov
dec
pop
popf
add
inc
stos
lock
jae
out
loopne
jmp
divb
cmpsb
int
shll
sar
mov
loop
int3
mov
sbb
je
mov
add
es
fidivs
or
mov
gs
scas
das
movb
lcall
pop
clc
addr16
popf
jmp
sbb
pop
jge
lret
adc
fnstsw
jbe
ljmp
in
pop
test
ja
mov
mov
sbb
into
js
sub
add
sbb
mov
xchg
jl,pt
inc
mov
je
jmp
mov
stc
xchg
mov
rcrb
mov
std
mov
pop
pushl
test
xchg
mov
add
cmpsl
mov
xchg
xchg
dec
cltd
fsubs
out
loop
xor
fnstenv
inc
imul
add
rol
popf
repz
and
jp
arpl
int3
loope
outsb
adc
in
pusha
jg
pop
rorb
push
mov
lcall
sub
mov
pop
pop
ljmp
push
sub
cmc
enter
imul
and
bound
jl
loope
xchg
jp
adcl
aam
jmp
das
xchg
outsl
data16
xchg
sti
aas
lock
subl
cmpb
pop
pop
and
mov
fidivrs
lock
fwait
xchg
xchg
inc
scas
in
sub
cmp
aam
cmpsb
inc
and
adc
arpl
movsl
mov
mov
cmp
rclb
xor
jno
jbe
jnp
push
sbb
out
daa
pop
imul
pop
sbb
testl
decb
xlat
mov
cmp
push
push
cmp
or
ret
fcoml
pop
cmp
ficomps
push
mov
pusha
lahf
xor
insb
sbb
push
lods
adc
loopne
sub
dec
jp
inc
mov
mov
sti
movsl
mov
movsb
mov
lods
push
add
enter
movsl
data16
cld
push
imul
cmp
lcall
ja
leave
cmp
pop
mov
dec
mov
das
fs
inc
cmp
mov
test
daa
xor
mov
inc
sbb
movsb
sub
cmp
je
dec
bound
pop
loop
push
insb
add
push
movsl
leave
sbb
test
sub
jg
dec
cmp
sub
and
pop
xchg
jae
xchg
cmp
das
cmp
and
xchg
out
les
fisttpll
mov
xor
loope
sub
lods
pop
out
jmp
sahf
xchg
mov
push
ror
cmp
repz
scas
or
jnp
in
inc
jecxz
push
mov
sub
xchg
sub
leave
es
xchg
les
repnz
addl
sub
cs
pop
sbb
daa
lcall
jo
and
js
lds
xchg
jnp
out
adcb
xchg
inc
dec
dec
or
test
in
jge
fisubs
sub
ficomps
xchg
or
addr16
jbe
call
mov
dec
xchg
gs
ja
push
dec
stos
movsl
das
out
xor
jbe
add
insb
outsb
pop
addr16
adc
jp
enter
cmp
jnp
icebp
push
lret
push
out
sub
dec
mov
aam
in
je
dec
inc
fidivs
fsubrl
mov
cmp
jae
xor
dec
add
xor
jns
nop
into
xchg
test
call
or
mov
pop
testl
jne
ficomps
mov
inc
cmpsl
add
fidivrl
js
jbe
in
movsl
xchg
shrl
je
aas
push
out
shl
adc
lea
data16
out
in
test
lds
and
mov
cmp
into
jmp
nop
out
test
mov
and
incb
mov
int3
std
or
int
pop
ljmp
jg
adc
cmpsb
inc
dec
std
sarl
or
mov
pop
dec
push
ficompl
lds
jmp
mov
mov
iret
faddl
test
iret
rol
inc
mov
sub
mov
sarb
and
mov
out
fsubs
cltd
pop
adc
std
dec
mov
in
sbbb
imul
pushf
je
pop
jp
fstl
sbb
scas
mov
pop
add
sub
btc
gs
push
repz
mov
std
aaa
pop
push
xchg
ficomps
xor
jno
or
mov
mov
psllq
add
sbb
push
and
mov
xor
xchg
scas
and
push
adc
pop
out
stos
xchg
mov
push
lret
rorb
lahf
adc
repnz
inc
sar
testl
pusha
lret
xchg
inc
adc
push
into
xor
add
and
pop
aaa
sub
push
push
jnp
inc
movsl
fs
hlt
int
dec
jmp
jecxz
sarb
imul
sub
jne
or
test
mov
in
jnp
mov
adc
ljmp
das
mov
push
mov
imul
inc
pop
int
and
adc
xor
dec
pop
adc
sbb
gs
mov
lret
shlb
push
xchg
sub
test
or
cmp
or
push
xchg
mov
fcmovbe
sub
adc
adc
outsl
add
sbb
push
xor
mov
cmp
xchg
or
adc
sub
sub
xor
cmpsb
mov
mov
sbb
fisubrl
mov
xchg
add
lahf
daa
mov
sti
push
sbb
insb
test
das
jp
ret
jge
adc
sub
xchg
cltd
sub
pushf
mov
ds
adcb
jne
fwait
jle
adc
cmp
inc
ret
mov
shrl
lock
push
pop
xor
lret
mov
pop
and
mulb
aas
adc
or
or
adc
cld
xchg
and
sub
inc
inc
adc
mov
jmp
out
jns
or
int
mov
cmc
xor
xchg
inc
scas
push
push
ljmp
fistl
sbb
lock
xor
mov
push
ja
sbb
cmpsl
lea
xor
mov
adc
test
cmc
cmp
mov
pushf
sub
or
add
loop
and
sub
pusha
arpl
lea
jmp
enter
inc
push
cmp
shrb
push
out
xor
clc
cmp
fsubs
gs
pop
insl
or
outsl
nop
jp
shrb
rcr
mov
xchg
mov
mov
call
movsl
mov
bound
ret
enter
adc
notb
ja
outsb
mov
out
sub
inc
outsb
shll
and
xor
rcrb
pop
inc
jl
icebp
mov
aaa
jg
inc
mov
lea
ret
cmp
imul
mov
stc
mov
iret
imul
rclb
sub
jns
xchg
mov
aas
shll
jae
nop
aam
mov
decl
jg
mov
push
cmp
test
out
lahf
inc
daa
lods
lret
loop
pop
testl
lock
adc
enter
mov
out
stos
in
xorb
jbe
sbb
rcll
enter
pop
or
or
jno
test
inc
adc
pop
cmc
and
test
adc
add
xor
and
add
mov
data16
mov
ror
inc
out
or
xlat
fwait
popa
ret
mov
dec
and
jmp
lock
xor
loope
in
js
out
xchg
xor
jno
pop
or
rcr
xchg
fcoms
inc
dec
out
or
hlt
lods
call
jbe
test
sbb
mov
mov
mov
push
and
int
inc
les
divb
cmp
addb
lret
inc
out
and
pop
int3
dec
dec
jl
dec
stos
inc
sub
gs
adc
push
push
testl
insl
stos
test
cmc
fs
pop
push
mov
jns
xchg
xor
daa
sbbl
mov
push
cmp
jg
test
xchg
pop
push
xor
sti
jne
inc
mov
aaa
or
fwait
push
push
cs
int
iret
jb
out
pop
mov
cs
push
jg
addb
and
mov
andl
movsb
subl
adc
cs
push
adc
xor
out
push
xor
mov
xchg
mov
or
pop
cld
adc
je
bound
lock
ss
push
arpl
outsb
fisttpll
xor
test
push
adc
bound
cmp
xchg
dec
test
into
lret
stc
lods
je
mov
dec
in
or
mov
inc
mov
movsb
dec
add
lods
in
dec
push
pop
and
xorb
pop
adc
inc
or
xchg
ss
dec
arpl
jp
mov
adc
pop
and
mov
push
sub
test
jmp
ret
sub
push
cmp
xchg
mov
xor
mov
xlat
inc
mov
dec
pop
lcall
repz
icebp
rolb
sub
nop
pop
adc
and
push
sti
mov
cmp
ja
rolb
cmovno
sub
inc
cwtl
dec
outsb
sub
shr
jne
mov
into
outsl
dec
xchg
jnp
inc
mov
testb
adc
jne
ds
xchg
inc
or
cltd
mov
nop
sub
mov
cmp
lcall
mov
mov
jecxz
mov
scas
xchg
aam
push
fidivl
aas
and
jne
test
or
pushf
std
pop
push
xlat
insb
imul
imul
daa
and
and
jae
into
push
jo
mov
mov
add
mov
mov
pop
fs
or
sarl
sub
cs
cmp
pop
and
sub
mov
jp
stos
sub
shrb
add
imul
test
jbe
icebp
jmp
into
or
mov
jge
lock
bndldx
imul
xchg
fistpl
adc
mov
pushf
lret
adc
xchg
sbb
cwtl
lret
es
cld
and
icebp
add
mov
in
inc
inc
dec
dec
add
roll
or
fwait
repnz
xchg
push
out
xor
sbbl
or
mov
jl
dec
xor
pop
pop
add
lods
int3
jbe
fldl
scas
sbbl
pop
push
jmp
mov
xor
test
inc
xor
jg
rcrl
icebp
xor
xchg
push
mov
add
mov
movsl
push
sub
push
stos
jg
sbb
push
lcall
sbb
pop
adc
cmp
adc
push
jmp
pop
addr16
mov
loop
pop
and
aaa
pop
add
cmp
mov
popf
inc
mov
out
sti
add
pop
pop
ja
dec
sti
xor
push
push
push
pop
push
test
sub
out
sbb
jge
push
cmp
xor
movsl
sarl
cwtl
sbb
cmc
mov
fs
dec
in
sbb
pop
mov
add
imul
imul
lea
jmp
cld
push
mov
dec
pop
fs
sti
jmp
stos
xchg
dec
test
stos
loop
or
aad
cmpl
pop
and
jo
jl
es
jnp
data16
sub
sbb
or
xchg
push
inc
lods
mov
sub
add
jmp
pop
lcall
insb
cmp
aad
or
or
gs
jbe
fstps
mov
pusha
or
aas
fs
stc
xor
loopne
into
inc
popa
xchg
mov
stos
fcomps
fmulp
sbb
jp
cli
or
js
andb
repz
xchg
fs
stos
dec
pop
frstor
outsb
adc
aaa
lods
xchg
add
aas
pop
cs
test
mov
jnp
inc
pop
adc
dec
lods
lods
jle
adc
pop
ss
push
and
sbb
inc
mov
int3
inc
fstl
das
and
ljmp
cs
or
fisubs
sub
add
enter
mulb
out
jg
call
ljmp
dec
cmpsb
testb
mull
sbb
xor
push
clc
cmp
mov
dec
push
andb
inc
sub
cmpsb
cmp
push
aam
ret
pop
inc
divb
xor
push
sbb
scas
xlat
movsb
sbb
mov
xchg
loop
sub
mov
cld
cmpsl
sub
movq
inc
xor
or
mov
rcll
push
rorl
test
jo
mov
out
fstps
daa
into
sub
cmp
pop
dec
mov
xchg
adc
or
cltd
pop
xor
lcall
push
jecxz
lods
ds
ljmp
and
aad
push
nop
in
test
sbb
pop
cmp
push
xchg
cmp
scas
sbb
test
mov
cld
mov
sbb
in
dec
and
and
mov
dec
mov
jns
pop
mov
mov
popf
pop
mov
fmull
imul
outsl
xchg
jne
dec
inc
test
ljmp
adc
in
es
test
repnz
repnz
mov
and
in
cmpsl
cmp
mov
pop
imul
sbb
loopne
sbb
sub
out
cli
jmp
sub
popl
aas
add
inc
jno
rcll
sti
lea
fistps
popa
xchg
jbe
loop
mov
sub
pushf
adc
daa
pop
cltd
or
mov
fxam
sub
mov
lock
sti
xchg
sub
js
notb
xchg
sbbl
jb
out
rclb
and
int
inc
pop
lods
cmp
mov
popa
dec
pop
pop
sbb
cmpsb
add
imul
jge
mov
jmp
jge
mov
mov
ret
mov
add
and
imull
fbld
cli
gs
faddp
dec
ret
mov
or
mov
lahf
pop
mov
nop
ficoml
aas
sti
pop
imul
cmp
inc
outsb
adc
inc
icebp
and
out
add
mov
pop
mov
ds
and
mov
cmpsb
xor
stos
mov
xchg
push
and
and
sti
mov
and
in
sti
aaa
lret
ds
pop
movl
adc
jecxz
into
pop
mov
shrb
and
push
xchg
jo
sahf
scas
fistl
mov
fdivrp
pop
mov
mov
push
stos
or
mov
dec
fwait
inc
outsl
mov
mov
sub
scas
xchg
jl
mov
and
cltd
aas
les
mov
std
aaa
sub
jp
add
push
daa
add
inc
pop
div
jns
xchg
adc
push
sbb
mov
nop
das
es
jmp
mov
adc
movsb
enter
push
cmp
and
jno
cmp
sub
aas
in
sbb
or
mov
aad
fisttpll
addr16
add
bound
jp
dec
and
dec
sbb
dec
cltd
xchg
dec
je
popa
mov
inc
sub
mov
pop
mov
push
int3
fsts
and
xor
in
pop
sub
mov
arpl
iret
call
icebp
popf
cwtl
sar
ret
xlat
dec
sub
xchg
inc
inc
dec
mov
or
jmp
dec
adc
lods
icebp
outsb
jbe
sbb
psubd
aas
sbb
xchg
and
adc
ror
shrl
ja
mov
enter
arpl
shrl
add
fnstenv
je
pop
xchg
stos
mov
es
leave
out
add
xchg
pop
or
push
xor
cs
cmp
push
lock
cmp
xor
sahf
sub
xchg
aad
mov
jge
scas
mov
adc
cmpb
sbb
shlb
adc
dec
icebp
cmp
sub
out
jle
repnz
sub
in
imul
cltd
add
jmp
push
push
outsb
icebp
xlat
daa
pop
mov
cmp
sub
mov
rcrl
shrl
ss
or
xlat
dec
or
in
int3
fmull
dec
mov
jb
mov
cmp
xchg
mov
add
cmpsb
ds
and
jle
imul
es
mov
icebp
push
sarl
in
nop
ja
insb
icebp
leave
jg
gs
call
aaa
dec
movsb
insb
sub
add
mov
mov
dec
mov
ret
lcall
mov
icebp
push
sbb
or
pop
xor
sahf
jmp
mov
mov
pop
fstps
or
dec
pop
xor
scas
jno
cli
pop
push
inc
fldcw
jno
jmp
popa
shr
jbe
dec
push
jg
push
fsts
xor
pop
sti
lcall
jo
mov
mov
loope
xchg
lret
clc
flds
lods
notb
test
je
insl
pop
lret
pop
sbb
push
imul
sbb
call
imul
aas
push
mov
lret
stc
dec
jae
arpl
flds
adc
mov
mov
or
in
or
mov
fistl
imul
xor
mov
stos
in
jne
fists
imul
or
pop
cltd
sbb
sub
or
push
jp
mov
arpl
imul
and
mov
lea
les
dec
jmp
outsb
cld
mov
rolb
dec
rcl
pop
stos
clc
add
or
push
fistpll
mov
ss
mov
and
jle
leave
inc
lock
push
dec
nop
adcl
adc
cmp
mov
fldt
or
mov
jmp
sub
lcall
out
add
insl
pop
movsb
lods
pop
mov
add
push
bound
aad
cwtl
pop
inc
push
pusha
les
sarb
enter
sub
sti
jne
loopne
jns
inc
mov
movsb
into
sub
fisttpll
rolb
das
arpl
push
stos
pop
pop
cld
repnz
jg
mov
fsubl
dec
enter
cltd
cmp
mov
es
pop
mov
jb
sahf
lock
ret
lret
test
push
insl
imulb
addr16
push
ds
out
std
pop
out
cmc
lret
into
jge
and
sbb
mov
int
scas
addr16
sub
fwait
popa
xor
or
pop
jne
aam
mov
mov
push
rol
lret
add
fs
jno
mov
imul
ljmp
dec
pusha
push
test
in
inc
mov
fwait
push
cmp
fistps
ret
faddl
cmpsb
inc
push
and
push
out
cli
sahf
dec
stc
icebp
testb
or
xor
or
push
addl
jbe
sahf
sbb
push
push
inc
and
cmovbe
adc
call
stos
sbb
adc
xor
push
inc
pop
mov
jnp
ror
sarl
jb
mov
nop
inc
orl
push
sti
in
jo
jmp
xor
pop
or
or
fmul
jno
or
pop
sbb
in
fists
xor
mov
fdiv
push
fxsave
test
adc
int
or
dec
mov
ds
dec
mov
mov
pop
lock
push
stc
mov
jo
inc
bound
jge
and
aam
and
icebp
sahf
xor
pushf
ret
xchg
scas
jmp
adcl
sub
sbb
ficompl
aaa
jl
sbb
insb
scas
shlb
cli
cmp
jns
and
ja
cltd
pushf
testl
pop
jge
jge
inc
imul
cltd
sub
push
mov
ret
jns
dec
out
and
mov
sbb
fxch
sti
daa
mov
jne
or
mov
cmp
push
int3
push
pop
push
lods
add
roll
push
stc
movsb
mov
lods
inc
push
jecxz
lods
jge
jne
xchg
jne
loop
paddb
filds
cmp
or
jle
adcb
sbb
jmp
mov
push
add
cli
and
push
mov
aam
outsl
stos
xchg
cli
fmuls
test
test
insb
adc
scas
and
xchg
subb
sub
xchg
iret
insb
std
mov
pop
and
jle
adc
dec
mov
icebp
test
sub
mov
shr
mov
cmp
in
orl
xchg
ret
inc
adc
mov
xchg
adc
mov
je
jmp
nop
mov
loopne
daa
pop
out
pushf
dec
cs
push
pop
jns
call
js
lds
js
sbb
mov
out
pop
popf
and
imull
data16
add
fwait
js
ficoml
and
daa
pop
leave
andb
aas
orb
popa
out
xor
aas
ss
mov
outsl
dec
or
jecxz
mov
int3
mov
adc
lret
mov
pop
dec
xor
fsubr
push
sbb
lea
mov
cs
jp
jg
and
adc
jb
es
je
xchg
faddl
sub
popf
or
pushf
pushf
xchg
add
fs
xor
lods
dec
dec
es
pop
lret
movsl
scas
xchg
gs
push
in
loop
ljmp
push
addl
pop
cmp
push
cld
inc
push
push
aaa
outsl
das
xchg
outsb
sahf
pusha
ficoml
test
bswap
push
xchg
scas
cwtl
hlt
ret
mov
ret
dec
xor
and
jb
mov
fisttpl
push
sub
or
imul
iret
xor
or
in
and
arpl
fnstenv
jmp
sbb
add
fistpll
pop
inc
mov
sub
int
jo
jne
mov
or
je
lods
dec
mov
ret
das
add
mov
xchg
shr
enter
pop
push
lds
pop
adc
xor
or
sarb
sbb
shl
push
mov
pushf
jmp
pusha
lcall
inc
loop
add
popa
push
lret
or
fs
inc
mov
test
dec
mov
mov
pusha
dec
and
dec
or
sub
repz
mov
shll
int
sbbb
iret
xorb
fidivl
lahf
xor
lcall
sbbb
jno
in
push
or
pop
ljmp
movb
sub
hlt
mov
mov
and
mov
sub
xor
cmpsb
jbe
stc
mov
imul
dec
iret
iret
push
xor
fidivl
pop
add
cmpsb
mov
fadds
push
ljmp
loope
cmpb
test
push
pushl
xor
cmpsl
andb
jo
int
mov
pop
addr16
popf
push
push
das
pop
pushf
xchg
add
aas
inc
inc
loope
inc
test
lret
icebp
mov
push
jl
test
sbb
mov
je
jg
or
mov
xchg
fdiv
fsubrl
mov
out
sbb
or
pusha
fidivrs
loopne
mov
cmp
ja
shl
data16
scas
in
pop
xlat
bound
cwtl
outsl
mov
xchg
cmp
mov
pusha
xor
outsb
inc
leave
adc
mov
push
and
imul
aas
and
loope
jnp
in
imul
lds
adc
push
cmc
decb
add
call
out
ljmp
push
xchg
fsubrl
lods
rcrl
jl
sbb
mov
shrl
ret
insl
sub
pop
bound
sbb
sub
ret
stos
push
push
cmpsl
xchg
add
or
sub
loope
push
push
call
jno
js
insl
mov
and
fisubrs
xchg
test
adc
xchg
movsb
ds
xchg
sbb
ljmp
aaa
outsl
or
xorb
push
aam
push
in
outsl
jo
fildl
ja
out
movsl
fldcw
xchg
mov
outsl
movsl
push
xchg
mov
inc
inc
lods
pop
mov
mov
pop
mov
mov
mov
loop
xorb
les
fmulp
inc
xchg
push
imul
icebp
xor
aas
pop
add
push
mov
mov
adcb
cwtl
add
mov
mov
repz
push
bound
xor
xor
inc
cmpsb
lds
pop
jae
out
fs
and
pop
jb
cmpsl
adc
aaa
loopne
dec
sbbb
aas
dec
push
pushf
loop
and
out
ss
test
push
adc
fwait
pop
imul
loope
or
push
cmpsl
dec
psubusb
push
add
mov
data16
fsts
outsb
inc
mov
xchg
xchg
sar
push
xor
repnz
outsl
jmp
mov
or
test
push
aas
insb
mov
cmp
sub
mov
add
inc
xchg
or
mov
add
int
sbb
out
stc
add
inc
or
je
cmc
pop
jl
int3
mov
and
or
into
sbb
call
xor
jmp
mov
sbb
cmp
jle
push
cmc
adc
jge
sbb
loopne
out
shll
pop
popf
cs
jno
cmp
push
jnp
mov
push
push
sub
or
push
jle
cmp
sbb
adc
mov
in
popa
sub
push
les
xchg
sbb
fwait
sarb
sub
inc
out
bound
repz
adc
mov
xchg
lock
mov
sub
inc
movb
cmc
scas
cli
loopne
push
inc
or
mov
out
lret
pop
jno
pop
add
fwait
mov
add
mov
cltd
in
lock
and
push
aas
clc
rorb
jmp
jmp
mov
mov
mov
xchg
hlt
popf
cmp
popf
dec
sbb
lods
push
ss
ss
popa
jbe
pop
popa
test
or
shlb
in
repnz
stc
pusha
inc
xchg
scas
ret
mov
xchg
test
pop
pop
popf
shll
xchg
dec
cld
or
daa
dec
mov
insl
jge
pop
xor
mov
mov
cmpsl
pushf
and
or
fnstcw
cwtl
and
cmp
adc
ss
notl
mov
cwtl
push
ja
sahf
je
dec
adc
icebp
jae
jnp
outsl
cmp
mov
adc
dec
in
cmpsb
pop
rolb
and
pop
ss
cmpsl
cmp
inc
stos
es
repnz
jle
sarb
cmp
jne
push
add
mov
xchg
inc
fisttps
xor
mov
test
sub
popa
or
xor
jbe
mov
jge
mov
or
push
movsl
stos
jp
repz
push
mov
daa
in
or
fucomip
int3
adc
jbe
xchg
push
and
jbe
call
cmp
test
jecxz
lods
push
xchg
or
shlb
divl
inc
scas
bound
hlt
inc
arpl
popf
fxch
mov
sub
pop
lret
scas
lods
clc
sbb
inc
aaa
add
pop
adc
inc
push
adc
pop
out
lock
xchg
ja
sub
sbb
leave
sahf
mov
test
sbb
mov
inc
js
stos
jecxz
cmp
incl
mov
mov
ljmp
iret
push
xchg
cmpsl
fs
dec
mov
scas
ret
pop
sub
push
je
xor
push
addr16
imul
imul
push
shll
daa
fwait
inc
mov
dec
jg
cmp
and
cmp
add
add
and
xor
in
xor
pop
fcmovnb
xchg
shl
leave
dec
cwtl
pop
movl
pop
call
mov
mov
imul
push
jae
mov
fdivl
jns
mov
flds
cmpl
cmpsl
push
sub
es
repnz
or
jno
nop
and
clc
out
dec
movsl
adc
fsubrl
mov
clc
jp
lcall
sbb
xchg
push
xor
add
lret
sub
xchg
adc
dec
xor
std
pop
mov
pusha
std
xor
mov
dec
add
mov
mov
jl
and
push
cmp
fwait
popf
push
test
xchg
movsb
mov
in
xlat
sub
subb
mov
rclb
xor
xchg
fimull
call
clc
sbb
int3
icebp
mov
cmp
lret
or
in
mov
stc
mulb
outsb
adc
in
or
dec
loope
shlb
pop
ret
cmpsl
gs
js
mov
mov
jle
or
pop
imul
sub
out
adc
lcall
mov
rorl
or
cmp
shrb
ja
adc
xor
sbb
dec
pop
jmp
xchg
sub
out
pop
xchg
xchg
insb
sub
sub
cmp
cld
in
mov
ds
shlb
fidivl
out
movsb
push
mov
int3
sahf
mov
dec
xchg
test
inc
out
push
cmp
mov
aas
hlt
jne
in
inc
push
jge
out
in
into
mov
into
push
inc
stos
pop
aad
mov
rol
or
cmpsl
sub
push
leave
mov
fnsave
nop
adc
sbb
pop
in
dec
dec
cli
cmp
clc
mov
les
jecxz
cmp
cmpsl
mov
leave
out
shl
in
les
add
jb
sahf
outsl
bnd
adc
xchg
mov
iret
cmc
stos
test
jge
shr
add
xchg
mov
push
data16
dec
lds
sub
orl
sub
mov
cmp
or
or
pop
pop
xchg
jnp
sahf
sbb
mov
stc
incl
ret
pop
incl
cmp
or
es
xor
mov
scas
xor
icebp
or
enter
jp
push
xor
dec
inc
cmp
or
xlat
adc
push
in
fs
lret
fmul
jb
push
mov
jo
lock
hlt
shl
sub
mov
push
pop
adc
cmpsl
add
out
test
mov
xor
movsb
mov
cld
jle
push
mov
and
hlt
out
jb
jns
add
push
and
js
inc
lret
adc
inc
divl
push
and
negl
fs
lcall
bound
test
mov
sub
aas
aas
dec
lds
cmp
xor
inc
lahf
iret
imul
jae
xor
mov
and
sbb
or
cmc
std
xchg
mov
pop
ss
xor
jl
add
mov
add
push
push
jno
inc
xchg
shr
stos
ret
outsb
mov
lock
mov
xchg
sub
mov
pop
mov
jmp
xor
lds
shr
adc
pop
cs
dec
sub
dec
loopne
hlt
popf
lods
mov
fdivrl
test
xchg
bound
inc
ret
push
rcl
lock
popa
pop
lret
pop
movsb
xchg
cmp
out
repz
call
mov
je
lcall
icebp
xchg
lahf
das
sarb
lods
mov
xchg
xchg
int
xor
adc
mov
inc
jns
cli
in
sub
int
jo
mov
cmp
sbbb
shlb
and
hlt
or
xchg
pop
jecxz
jg
xor
sbb
pop
mov
mov
adc
out
popa
ja
cmp
aad
nop
repz
push
bound
cwtl
jg
mov
jne
or
dec
ja
and
and
sarb
loope
cmp
xor
and
in
cmpsl
fsubl
push
sbb
lahf
daa
xchg
xor
sti
adc
push
lods
out
push
outsl
mov
mov
adcl
jp
push
mov
mov
jmp
les
scas
fldl
mov
xchg
into
loop
rcll
xchg
outsb
inc
dec
ss
punpckldq
outsb
clc
repz
enter
dec
jecxz
repz
je
in
xchg
mov
xchg
inc
scas
pop
sub
js
or
mov
fs
repnz
pop
adc
mov
xor
pop
aam
jle
idivl
jle
jbe
outsb
fsubl
add
push
cmp
sub
xor
mov
mov
aam
adc
sbb
cmpb
into
in
in
in
jmp
inc
mulb
adc
jle
push
shrl
sbb
or
cmp
mov
xchg
lcall
ljmp
add
or
sub
lods
dec
mov
imul
imul
nop
dec
mov
fadds
popa
and
pop
std
pop
push
mov
shll
inc
shlb
push
data16
and
xlat
lret
jne
das
fnstcw
jae
insb
sbb
ss
decb
pop
sub
outsb
dec
bound
xchg
cli
ficoml
inc
dec
dec
rorl
popf
movsb
lds
es
xchg
pop
mov
bound
ret
shll
lock
inc
or
gs
jl
xor
aad
movsb
dec
mov
outsl
xchg
pop
inc
rolb
ret
pusha
xor
test
imull
dec
push
les
sbb
mov
loopne
ja
add
cld
movsb
pusha
test
dec
adc
dec
pop
loop
es
pop
mov
cmp
test
mov
test
loopne
mov
mov
popa
insl
inc
imul
cmpsl
xor
pop
loope
inc
fiadds
lret
ret
push
lods
jae
and
cltd
pop
jg
adc
mov
out
movl
stos
add
and
add
insl
cmp
scas
xchg
cld
in
pushf
fbld
outsl
and
xor
test
mov
outsb
jp
das
jmp
mov
and
scas
xor
in
mov
pop
and
out
loope
mov
mov
das
jp
xor
sbb
xchg
loope
jecxz
out
cmp
mov
cs
push
xchg
cmp
jbe
pushf
ljmp
sahf
inc
push
aaa
inc
ja
sub
out
jae
or
sbb
xchg
stos
lds
lret
movl
out
cmp
cmp
inc
sbb
pop
popa
or
jmp
jnp
popa
mov
and
sahf
push
xor
xor
leave
push
sub
aad
and
mov
cmpsb
mov
sbb
decl
ss
push
jo
jl
cld
nop
adc
jno
sbb
imul
mov
cmp
push
or
insl
cmp
push
jb
inc
shlb
jbe
dec
push
pop
les
dec
inc
jo
push
sarb
ja
xor
dec
xorb
jns
dec
pop
and
call
shlb
inc
rcr
mov
xchg
xor
add
jno
and
mov
cld
jae
repz
pop
adc
add
cmc
jno
sub
icebp
fcoml
shl
mov
xchg
ffree
test
cmpps
or
pop
push
mov
mov
pop
fdivrl
mov
stos
push
imul
leave
test
aaa
mulb
jo
mov
cs
test
inc
inc
sbb
pop
jp
loopne
jbe
dec
popl
cmpsl
push
and
insb
jo
cmpsl
cmp
jno
jno
insl
fcomi
mov
les
and
jne
movl
dec
xor
mov
gs
imulb
mov
adc
aad
bswap
lret
xor
sti
ja
add
repz
rclb
sti
push
cmp
push
jno
insb
sarb
xchg
aad
add
pop
dec
cmp
rcrl
arpl
cmp
cmpsb
add
mov
fmul
dec
ret
sbb
stos
stc
and
adc
scas
sbb
fidivs
sub
pop
push
pop
jecxz
jmp
mov
xlat
and
jge
inc
in
push
dec
jnp
fwait
mov
ficomps
cs
push
orl
icebp
insb
out
pop
inc
and
in
cmp
pop
cld
fisubs
aaa
cmpsl
bound
pop
lods
dec
into
push
xchg
xchg
sbb
xor
xor
jno
xor
std
popa
jo
and
js
mov
adc
push
xchg
xchg
shl
je
jp
leave
xchg
mov
sahf
jl
and
lcall
xor
cwtl
lods
fcmove
pop
testl
jmp
xchg
loop
mov
std
movsb
push
lods
mov
sbbb
add
in
add
push
or
fcoml
push
sbb
cs
add
or
fcmovnbe
dec
inc
cwtl
push
js
xor
sbb
mov
mov
cltd
iret
hlt
je
arpl
popa
mov
xor
push
xor
ljmp
add
fisubl
pop
cmp
mov
pop
jmp
aas
in
sub
iret
xchg
or
fmuls
inc
pop
cmp
dec
cli
pushf
add
pop
sbb
mov
lds
in
seta
dec
aad
jmp
loop
loopne
stos
mov
xchg
movsb
jb
add
mov
out
lret
push
mov
das
lods
cmp
rorb
pop
mov
push
inc
cwtl
cmc
adc
shll
dec
pop
repz
jge
xchg
xor
lods
aas
mov
fdivs
jl
push
inc
popf
rorb
cmp
xchg
aam
or
adc
insb
stc
xchg
in
cmc
aad
dec
jecxz
jae
das
jno
in
lret
lret
sarl
jbe
lock
test
sub
push
lea
push
subl
cld
mov
add
xchg
out
add
hlt
cmp
add
pop
repnz
fdivl
pavgb
xor
rep
or
push
pop
cli
sub
jg
fdivrl
sbb
int
ljmp
push
adc
push
push
xor
aaa
pop
fwait
cmp
add
adc
cmp
nop
jmp
les
sub
scas
and
lea
fidivrs
jl
ljmp
adcl
inc
add
ljmp
out
rcll
shll
fstl
sub
xchg
and
push
mov
clc
stos
cld
loopne
jno
mov
shrb
xchg
or
test
or
es
mov
xchg
clc
dec
add
xlat
pop
and
jo
out
push
sbb
je
pop
and
sahf
xor
cld
jmp
clc
pop
add
add
adc
stc
jnp
int3
inc
aad
out
repnz
in
lods
inc
mov
mov
jo
test
mov
cmpsb
subps
cmp
pop
inc
xchg
lock
jmp
fisubrs
push
mov
fdivl
push
mov
imul
and
xor
cmp
mov
or
movsl
js
push
add
int
lcall
loope
lea
inc
mov
flds
pop
pop
cmp
sbb
test
adc
lret
push
insl
mov
add
push
or
jl
ja
jo
les
xchg
aam
mov
jmp
add
js
stos
call
ds
mov
fidivrl
aad
cmp
stos
cmp
pop
aam
nop
pop
push
movsb
loop
dec
sub
push
lock
les
mov
out
popa
sub
dec
pushf
loop
sti
jne
adc
sub
mov
inc
sub
mov
inc
sub
jo
cwtl
mov
inc
push
pop
push
mov
adc
xor
xor
in
movsb
push
xor
jl
add
jg
push
fwait
inc
mov
jge
in
negl
xlat
jg
out
in
pop
movsl
add
imul
aad
mov
add
mov
lcall
imull
movsl
cmpsb
pop
int
pushl
xchg
add
pushf
decb
cmc
push
pop
push
adc
xor
pop
arpl
inc
or
pop
rorl
stc
cltd
and
and
outsb
inc
mov
sbb
mov
in
mov
cmpsb
mov
mov
mov
mov
fstp
in
xchg
les
xchg
or
push
cmp
or
ja
xchg
test
dec
popa
pop
jno
sbb
test
xchg
jo
repz
mov
push
jb
sbb
dec
in
arpl
pop
aas
insb
adc
or
cmp
daa
and
pop
mov
notl
aad
dec
leave
pop
divps
filds
mov
test
stos
push
adc
xchg
shl
jae
call
scas
sub
and
push
sbb
popf
inc
adc
cmc
cli
movsl
pop
cmp
push
sbb
sbb
jae
repnz
mov
cmp
and
push
andl
ja
popa
in
js
jne
ds
xor
imul
out
or
loope
inc
adc
or
inc
ljmp
in
movsl
and
das
int
mov
fcomi
add
xor
aam
inc
gs
into
pop
push
or
lret
insb
inc
lret
movsl
inc
cmp
int3
mov
out
and
aas
xchg
stc
mov
push
cli
xchg
add
sub
and
sbb
push
inc
or
add
dec
aam
xchg
les
cmp
fisttpll
mov
mov
jmp
lcall
shrb
dec
dec
push
mov
jno
xchg
push
mov
aam
test
mov
or
inc
mov
pop
aas
repz
test
sbb
jmp
pop
jecxz
cmp
sbb
push
sub
loope
dec
movsb
pop
push
test
imul
les
dec
wbinvd
adc
fstpl
scas
insb
imul
in
add
lods
out
pushf
adc
push
mov
fcomi
jle
adc
popa
xor
mov
push
sbb
je
push
shll
pop
mov
push
dec
adc
hlt
enter
mov
xor
repnz
inc
push
and
xchg
fwait
mov
aaa
fcom
test
cmc
gs
mov
gs
xor
lds
jmp
xchg
cli
bound
xchg
icebp
stc
sahf
push
or
divl
negl
sbbb
lods
stos
shll
push
dec
hlt
fldt
rorl
std
cmpsb
jns
fsubrs
xor
lret
pop
mov
jecxz
dec
dec
bnd
in
mov
push
mov
sub
push
popa
cwtl
inc
test
push
jl
add
outsb
insl
push
cmp
or
in
pop
add
fmul
or
or
or
jmp
into
xchg
jl
stc
xchg
out
clc
xlat
test
or
fwait
popa
fdivrs
mov
xchg
rcrb
dec
aas
pop
jl
mov
lret
stos
and
and
dec
jl
dec
jno
int
cld
jno
leave
mov
pusha
orl
ja
mull
jle
pop
jle
out
lret
pop
fstpt
into
hlt
adc
movsb
mov
mov
imul
cmpsl
mov
aaa
or
mov
pop
icebp
test
dec
mov
outsb
and
mov
in
push
repnz
dec
mov
cmp
sbb
sbb
ror
and
scas
test
test
lcall
pop
lods
aaa
negl
into
jl
cltd
mov
out
jge
cmp
push
shlb
mov
int3
nop
adc
jg
insb
xchg
aad
pop
adc
pop
bound
les
inc
xchg
adc
nop
jmp
mov
popf
subl
sbb
cmp
push
jle
jmp
sub
mov
pop
jecxz
cmp
rclb
jle
test
cmpb
lret
in
orb
loope
sub
cmpsb
arpl
scas
cmp
mov
mov
push
sarb
mov
cs
xchg
jg
push
jle
call
mov
push
adc
aas
scas
jecxz
mov
dec
push
xorl
bound
mov
pop
mov
inc
ret
bound
roll
or
into
cs
sub
pop
fcoml
fwait
arpl
xchg
pop
mov
fdivl
dec
in
out
out
mov
cmp
push
test
ret
les
mov
lock
adc
dec
pop
bound
mov
inc
js
xchg
mov
insl
outsl
jno
sarl
mov
xchg
leave
mov
jnp
shr
fiadds
cwtl
and
mov
dec
fucom
sub
inc
jo
sub
popf
test
sub
stos
xorb
shlb
int3
mov
cmp
lcall
and
fistps
jne,pt
sbb
cmp
arpl
push
roll
cwtl
movsb
lcall
cmpsb
orb
sar
xlat
fadds
jne
mov
int
int3
leave
dec
mov
mov
mov
xchg
jmp
jp
out
xlat
rcl
pusha
pop
pop
sbb
sbb
mov
xor
dec
fistps
enter
add
dec
add
push
sti
adc
mov
test
mov
sbb
mov
jbe
xor
or
and
add
dec
hlt
aas
test
cmp
mov
insb
push
in
inc
fdivrl
outsb
sbb
jp
xor
dec
movsl
loop
xchg
cmp
dec
ds
daa
setle
adc
jge
xchg
xor
roll
ljmp
in
mov
sahf
adc
fidivl
jecxz
andl
call
cmp
jnp
xchg
jns
mov
fidivs
cmp
or
push
test
scas
ds
cmp
push
lods
jbe
ret
in
out
push
push
xor
push
xchg
cmp
je
mov
repz
xchg
adc
clc
ds
cld
push
and
rolb
ret
dec
pop
xchg
cmp
shll
mov
xor
add
push
jns
pop
clc
bound
sub
fstps
mov
jo
pusha
dec
add
aad
pop
pusha
stos
cwtl
push
xchg
sub
clc
fistl
aad
inc
lret
xchg
and
sub
pop
imul
mov
pop
hlt
dec
iret
mov
dec
push
andl
stos
sti
sub
mov
and
popa
jl
xchg
sbb
push
loopne
les
cmc
adcl
stc
mov
pusha
jne
jb
pushl
add
outsb
xor
pushf
cmc
sub
insl
lods
dec
mov
out
mov
mov
daa
and
dec
call
cmc
enter
ds
popf
lahf
pop
movsl
scas
ret
mov
mov
jne
dec
rcrl
and
mov
sti
popa
and
aas
movsl
pop
clc
xchg
mov
mov
mov
fs
mov
xchg
mov
pusha
arpl
cld
mov
inc
decl
insl
xor
int
por
mov
inc
jbe
sahf
sub
sti
push
icebp
clc
xor
es
sbb
ret
and
lock
es
stos
ret
or
xor
mov
cli
push
xchg
push
jae
in
push
jp
mov
sub
inc
xor
mull
shl
sub
add
mov
jae
lret
pusha
popa
scas
fidivl
jno
xchg
incl
outsl
movsb
push
xchg
js
xchg
insl
lret
ja
push
dec
adc
mov
pop
add
mov
jg
dec
pop
dec
outsl
mov
jns
test
in
sub
loopne
aaa
in
lcall
lock
mov
or
xor
jl
ljmp
insl
or
mov
mov
inc
shl
call
out
jae
arpl
es
dec
mov
sbb
jge
ret
in
clc
ja
pushf
jb
or
mov
je
pop
mov
push
stc
fdivrp
sbb
pop
cmc
lret
aam
or
inc
jecxz
lret
fsubrs
or
push
jns
stc
aam
adc
jecxz
or
xlat
xchg
mov
fs
dec
mov
addr16
mov
mov
stos
mov
push
xsave
pop
mov
cwtl
test
daa
daa
ljmp
sti
call
cmc
cli
jle
mov
and
add
stos
mov
movsb
clc
in
call
aam
fwait
pop
jmp
lcall
xor
out
push
dec
jae
sbb
or
xor
fidivs
int3
clc
or
imul
scas
out
mulb
and
xor
repz
add
adc
ret
jle
stc
das
cld
je
insb
xchg
xchg
aas
imul
scas
mov
ret
out
sub
fidivrl
mov
sbb
out
pusha
bound
les
cmp
adc
push
mov
hlt
loopne,pt
cwtl
adc
sbb
pusha
lods
jp
cmp
add
aad
decb
sarl
syscall
adc
push
int3
push
dec
je
add
pop
dec
repz
notb
mov
push
sbb
pop
dec
mov
dec
mov
ja
add
bound
inc
fmull
add
push
nop
arpl
sub
inc
adc
pop
stc
sbb
gs
aas
mov
xchg
negb
bound
adcb
int3
pop
cmpsl
out
in
mov
in
xchg
add
gs
xchg
push
icebp
add
cmp
rcrl
es
fwait
repz
into
cmp
in
fucomi
fbld
xchg
std
pushf
pushf
mov
fldt
adc
jb
mov
repz
bound
pusha
mov
mov
push
dec
or
stos
pop
xchg
add
into
rorl
pop
jns
xchg
test
ja
dec
pop
pop
test
adc
lock
mul
jb
jmp
sbb
fdivrs
out
push
lret
pop
inc
push
or
outsl
and
adc
mov
jnp
push
stc
mov
out
fstp
and
jns
jno
jno
pop
adc
orb
cmpsb
xchg
loopne
jle
jp
dec
sahf
xor
int3
int
jp
pop
push
push
adcb
outsb
rcll
test
mov
fdivrl
cmp
push
pushf
jno
ss
in
and
out
pop
add
or
xor
out
out
xor
popl
ret
test
push
jp
icebp
add
in
jmp
int
cltd
lcall
cmp
jp
mov
cmp
mov
out
add
scas
cmpsb
pop
lahf
cmp
mov
cmp
adc
add
ja
push
mov
lds
out
inc
xor
cli
cmp
mov
inc
dec
push
leave
and
dec
pop
fsubr
dec
cmp
out
jns
fcomps
xor
add
ficoms
sub
sarb
jp
mov
adc
pop
clc
decl
ret
xchg
aas
fisubs
cmp
lea
cmp
cmpsb
inc
jle
jmp
daa
cli
xchg
test
lret
pop
rcll
lds
sub
push
ja
mov
and
sub
xchg
inc
cld
stc
inc
adc
fcoms
into
dec
mov
nop
pop
adc
dec
icebp
loop
bound
shrb
fwait
jle
sbb
xchg
and
fldenv
clc
repnz
subl
test
fsubl
imulb
sub
mov
adc
xor
xor
or
xchg
xchg
sbb
adc
pop
jge
loope
mov
jl
test
jle
rolb
xor
push
mov
cmpsl
adc
dec
pop
mov
or
popa
arpl
ret
testl
lea
xchg
inc
jbe
or
cmp
sub
sub
xchg
mov
xchg
lea
fdiv
gs
mov
mov
clc
in
jae
inc
shll
xchg
stos
test
jecxz
pushf
les
icebp
cld
icebp
out
test
fwait
adc
push
jnp
into
xlat
cmp
flds
cmpsb
out
add
xchg
lods
mov
jg
mov
mov
xchg
cld
mov
mov
out
mov
dec
mov
mov
jae
jo
lea
push
mov
xchg
add
or
dec
sbb
loope
inc
roll
cmpsl
mov
inc
xchg
aad
pusha
fisttpl
mov
lds
outsb
arpl
mov
mov
test
jge
leave
das
add
hlt
ss
outsb
stc
jae
and
loope
inc
fiadds
jmp
mov
mov
enter
fists
adc
mov
lahf
repz
ss
ja
mov
imul
mov
das
aam
mov
sub
inc
push
mov
mov
test
call
hlt
lret
jge
pop
fnstenv
pusha
enter
dec
mov
leave
dec
or
and
cmp
loop
call
sub
roll
ss
xor
push
add
add
bound
or
cmpsb
sub
jb
jbe
and
cltd
int3
xlat
jmp
es
loopne
cmp
pop
dec
xor
mov
pushf
rol
fadds
xlat
mov
js
mov
cmc
cmp
jl
mov
fwait
mov
push
xor
ljmp
in
fldt
cltd
sbb
adc
lcall
or
xchg
jge
aam
ljmp
cs
or
push
test
dec
movsl
mov
push
jp
mov
add
mov
sarb
into
stos
rorb
out
je
jp
lods
dec
aas
lret
fimull
dec
je
mov
ret
shrb
mov
aad
test
add
in
imul
xchg
pop
jbe
mov
aaa
cmp
adc
out
prefetch
or
dec
and
pop
aaa
push
or
xchg
aam
iret
push
inc
cwtl
push
nop
popl
sbb
pop
mov
aad
subb
cmp
test
sarl
push
ja
jmp
mov
xchg
jb
sti
stos
or
xor
daa
movsb
xor
sbb
and
push
push
lcallw
add
fisttpl
shll
nop
movsb
mov
xor
jne
arpl
mov
sub
loopne
lock
aam
ljmp
xchg
jb
push
pop
sbb
xchg
lcall
mov
xchg
cmpsb
in
mov
jle
mov
cli
mov
xorl
out
fistps
fiaddl
cli
pop
or
push
jecxz
hlt
pop
ss
and
xchg
mov
adcl
shrb
push
mov
fldenv
ds
in
data16
mov
fdivrl
sub
mov
pop
push
mov
mov
out
jo
push
push
push
imul
negb
mov
or
outsl
push
in
stc
jbe
jp
cld
aaa
popa
adc
mov
jecxz
xchg
or
in
into
jg
mov
es
sbb
push
fwait
dec
push
jno
pop
rcrl
pop
sub
icebp
stos
jle
lods
push
mov
movsl
addr16
fists
pop
daa
in
mov
divb
lods
or
pop
imul
pop
cli
pop
jecxz
bound
scas
and
xchg
aad
adc
arpl
jg
iret
pop
out
fldln2
inc
rorl
mov
movb
out
mov
xor
xor
or
aad
test
stos
iret
cli
pop
dec
sbb
xor
push
movsb
adc
scas
push
lock
leave
mov
ficomps
dec
mov
inc
int3
push
loope
add
adc
or
rcr
adc
fidivrs
xchg
sbb
xchg
xchg
cwtl
mov
aas
xlat
dec
xchg
je
cmp
lcall
rorl
mov
xor
jnp
ljmp
je
jns
test
aas
mov
adc
add
mov
ret
xor
sub
pop
add
jl
iret
inc
test
aas
rol
shrb
insb
push
dec
imulb
inc
jg
test
mov
xchg
pop
fsubs
sub
je
mov
cltd
pusha
divl
arpl
hlt
mov
add
pop
sub
test
fwait
call
and
cmp
outsb
lret
or
pushf
add
adc
ljmp
jl
or
cmp
aas
rcrl
add
fmulp
mov
jl
loope
jle
divl
into
jnp
mov
loop
lea
ljmp
and
andl
lods
sbb
jg
cltd
sbb
inc
addl
roll
enter
rcr
shrb
aas
daa
sti
ljmp
shlb
ficompl
jecxz
dec
mov
mov
iret
fidivrs
int3
in
mov
push
aas
adc
into
jae
movsl
pop
lods
sbb
pop
pop
and
clc
mov
rorl
mov
movsl
movsb
fwait
insl
scas
and
lds
icebp
jmp
and
xchg
jl
loope
stc
push
or
icebp
mov
push
lret
call
adc
sub
loope
sbb
pop
out
mov
shrl
and
in
popf
or
repz
or
dec
jbe
fdivl
rcrl
dec
push
jl
iret
lds
pop
cwtl
pop
or
fstpt
call
in
lea
clc
bound
and
and
cmp
adc
inc
inc
and
mov
add
pop
popa
and
jg
mov
je
test
outsl
arpl
mulb
das
and
inc
pusha
add
push
sahf
daa
pop
xlat
xchg
pop
adc
push
dec
fldln2
xchg
in
jmp
scas
loop
mov
aas
mov
mov
push
pop
xchg
sbb
pushf
cs
mov
rcrb
icebp
jle
pop
outsb
mov
xchg
xor
lods
fs
flds
std
fs
add
icebp
and
cmpsl
push
adc
mov
roll
mov
vmaxsd
inc
shr
pushf
lea
mov
add
cmpl
add
fstl
xchg
pop
xor
pop
pop
call
adc
inc
mov
bound
cld
push
inc
aaa
cmp
mov
arpl
xor
pusha
add
dec
imul
add
pop
or
mov
mov
lcall
or
mov
popf
fdivrl
cli
fwait
rorl
scas
or
call
inc
push
lods
addr16
pushf
out
rclb
jns
into
repz
add
pop
mov
sbb
sub
lock
xchg
xchg
cwtl
fcoms
repnz
jbe
in
stos
sbb
mov
mov
inc
and
rcr
pop
adc
loop
xchg
xlat
out
int
jp
pop
dec
and
mov
ss
sbb
push
push
mov
hlt
sti
dec
mov
insl
push
loop
ljmp
pop
scas
and
cs
adc
push
pop
pop
fsubs
lret
mov
xlat
fistpll
xor
pop
icebp
mov
popa
or
xor
test
in
out
rolb
lea
ja
lock
inc
mov
stc
jnp
pop
stos
loope
pop
pop
inc
and
imulb
mov
bound
mov
aas
or
xchg
imul
lret
push
adc
repnz
je
xlat
push
adcb
loop
mov
fistps
pop
daa
xor
adc
mov
jne
ss
jae
mov
add
adc
lods
test
test
cmpl
rol
out
or
jae
int
inc
das
mov
jge
cmc
or
cmp
fwait
xchg
imul
add
scas
ljmp
pop
movsb
cli
mov
dec
mov
add
pop
or
int
mov
sub
fcmove
stc
xchg
mov
dec
inc
pop
jnp
push
das
add
lret
pop
cmpsl
pop
in
jmp
xrstor
add
mov
xchg
xor
iret
dec
mov
arpl
mov
mov
push
pushf
mov
push
push
fwait
gs
fsubrs
cmpsl
cmp
in
icebp
sub
aas
dec
bound
sub
sbb
std
cmp
in
sarb
lret
les
test
jae
sbb
movsb
lea
xor
loop
adc
cmp
out
movsl
arpl
mov
adc
sub
mov
mov
ror
sahf
mov
andl
mov
aas
in
popf
add
pop
test
or
pop
lods
or
pushl
or
imul
cwtl
push
or
sub
arpl
mov
ja
or
outsl
add
das
jns
pop
pop
cmp
jae
push
mov
popf
test
push
ficoml
pusha
inc
fdivp
daa
insb
addr16
ss
outsb
stos
jp
sbb
fst
int3
js
push
push
add
jg
test
cli
dec
mov
divw
and
xor
jnp
pop
or
pop
jg
cmp
push
out
rclb
add
add
arpl
xor
test
cmpsl
pop
xchg
mov
negb
push
inc
stc
push
stos
xor
rolb
aad
push
enter
decl
pop
dec
xlat
sbb
icebp
push
mov
cmp
push
xchg
mov
xchg
pusha
xor
dec
mov
inc
sbb
sbb
jo
scas
pop
hlt
sub
dec
mov
cmp
mov
iret
jmp
test
mov
cli
mov
es
test
push
mov
leave
xor
pop
nop
fisttps
xchg
lret
fcoms
stos
push
push
movsl
xor
mov
pop
sbb
popf
push
frstor
jae
jge
and
and
in
dec
inc
mov
push
adc
imul
std
add
fdivs
or
pop
mov
mov
loopne
stos
jns
aas
daa
jns
mov
js
xlat
dec
xorb
cmp
repz
lods
mov
lods
push
dec
imul
push
jbe
jbe
mov
jne
in
cmp
ljmp
xchg
in
mov
aaa
mov
sahf
sbb
mov
push
or
jo
xchg
insl
fisubl
pop
jo
insb
lea
ds
push
into
inc
rcll
loope
mov
sbb
movsl
into
cld
dec
inc
aad
imul
mov
or
jp
lea
sti
in
push
test
inc
in
xor
pop
sbb
es
leave
leave
roll
roll
mov
lret
pop
push
or
scas
pop
push
stc
inc
bound
or
mov
xor
push
jmp
fdivrl
push
sub
lcall
cmp
mov
je
fists
add
mov
mov
pop
fmull
cmpsl
mov
mov
scas
pop
jne
icebp
push
sbb
or
in
sub
lods
xor
jo
dec
pop
out
idivl
fwait
mov
adc
gs
test
enter
and
mov
das
pop
mov
xchg
sub
pop
cltd
adc
or
jbe
jo
inc
into
xor
push
mov
les
push
inc
push
xchg
inc
cmp
and
stos
and
pop
dec
add
jl
orl
push
jl
push
jg
inc
popf
dec
or
mov
or
je
xor
add
mov
mov
jg
mov
pop
shll
ficomps
fcmovbe
jmp
mov
mov
sbb
mov
test
daa
mov
call
aad
xchg
dec
or
repz
hlt
movsb
and
aas
test
push
mov
outsl
adc
inc
test
cs
xor
sbb
jl
push
or
mov
sub
inc
jb
mov
jg
cmpsb
xor
mov
vmovdqu
jp
rorl
push
ja
cli
lods
out
lods
xchg
fisubs
test
lea
mov
push
push
pop
add
pushf
mov
loope
push
adc
lcall
ret
mov
push
mov
push
pop
xchg
jno
mov
xchg
jmp
stc
out
mov
fdivrp
repnz
sbb
fmuls
jo
iret
addr16
imul
push
shlb
mov
pop
jo
push
or
mov
jo
lds
arpl
stos
xchg
ret
sbb
adc
mov
fldt
ret
addr16
jae
popf
jp
jl
test
lods
adc
aam
push
les
imul
push
sbb
fcomip
mov
icebp
dec
jbe
mov
mov
mov
push
arpl
jg
in
jmp
xor
jp
out
inc
sbb
ret
pop
mov
cs
imul
push
sbb
call
lods
mov
mov
push
hlt
jle
cmpsb
mov
enter
ja
clc
inc
ret
ja
xor
xchg
cmpsl
pop
lds
fildll
jle
sub
aad
push
add
cwtl
cld
ret
enter
push
cli
iret
lock
pushf
and
adc
dec
idivl
or
cmpsl
dec
outsb
cmpsb
int3
in
movsb
cmp
cltd
sbbb
lahf
sub
cmp
sbb
push
imul
pop
and
jbe
loop
stos
out
dec
dec
push
pop
shll
xor
out
jno
cmpsl
jne
xchg
mov
jg
in
cmc
sub
xor
sbb
mov
pop
pop
add
push
outsl
push
sahf
cmp
aam
fsts
ret
xor
lahf
mov
pop
das
adc
mov
xchg
sbb
adc
testb
xchg
push
jle
lret
mov
pop
sar
cltd
incl
sti
hlt
adc
mov
adc
jae
lahf
jno
aad
out
inc
or
insb
cmovnp
cltd
divl
mov
cs
repnz
xchg
jae
fistps
inc
stc
mov
mov
sub
insl
js
push
notb
push
stos
lods
ja
cs
mov
adc
jl
out
shrl
sub
int3
orb
xchg
in
push
cltd
sbb
dec
scas
sbb
sahf
and
inc
lcall
adc
inc
es
imul
outsb
cmp
xchg
ret
push
mov
insl
xor
dec
inc
lret
cmp
lahf
popa
sti
pop
lahf
cmpl
fstpl
or
cmc
or
sub
rcrl
inc
xchg
cltd
movsl
shl
jb
xor
pop
test
pop
and
cmp
mov
cmp
out
xchg
and
inc
outsb
shlb
jne
cld
maxps
push
inc
subl
stos
les
shll
in
lret
fsubl
jbe
sub
pop
jg
push
and
mov
imul
push
in
icebp
pop
jno
or
cmp
out
adc
call
or
int
cmp
cs
inc
enter
jl
pop
inc
inc
sbb
xchg
test
cmc
imull
sti
pop
popf
mov
hlt
sbb
lock
dec
fcoml
mov
adc
mov
fisttps
fsubr
pop
xor
in
and
cmp
ss
testb
xchg
cli
pop
cmp
push
outsb
loopne
jne
fwait
push
mov
sub
or
repz
outsl
dec
and
jb
addl
cmp
or
jl
arpl
fdivrs
and
test
sahf
xchg
addr16
call
cmp
xor
jb
lcall
in
xchg
out
dec
hlt
ret
into
leave
xchg
dec
sub
rorl
mov
pop
and
jne
repnz
adc
pop
push
in
je
pushf
mov
inc
push
and
filds
movsl
push
mov
pop
push
mov
lret
push
sub
lock
pop
andb
imul
cmpsl
fbstp
mov
fisttpll
mov
fwait
mov
iret
call
test
loope
cmp
ret
lods
in
aad
aam
xchg
push
andl
test
out
fiaddl
sti
mov
push
outsb
sub
jp
xchg
fucom
xchg
fidivs
xor
mov
jns
clc
leave
stos
mov
xor
xlat
ficomps
rcrl
pop
pop
or
fs
xlat
popf
stos
lret
pop
aam
movsb
dec
out
je
stos
lret
add
sub
fstpt
cmc
jnp
es
mov
cmp
popf
inc
add
lret
leave
push
xor
sub
cld
jno
adc
jne
push
adc
mov
or
sub
in
xor
xchg
push
and
inc
mov
xchg
call
push
pusha
shr
sub
int3
lahf
cmpsb
rcrb
jmp
lahf
fs
adc
fidivs
cmp
dec
in
pop
or
mov
mov
sbb
jge
mov
mov
mov
fistpll
or
fiadds
outsb
scas
lret
push
xchg
cmc
es
jmp
jmp
je
and
cmpsl
pop
sbb
cs
sub
ljmp
out
add
dec
loop
or
fistpl
lods
adcl
ljmp
mov
cwtl
fnsave
jmp
sahf
mov
sub
and
jo
sahf
outsb
addr16
int3
cmp
mov
shll
imul
jmp
pop
movsl
inc
and
ss
in
cmpl
leave
aam
sbb
or
out
cmp
jmp
cmp
mov
sarl
sub
xchg
mov
mov
loop
xor
cmc
xor
cltd
jp
inc
dec
jo
cli
out
adc
enter
outsb
movsb
psubb
les
repz
push
lds
cmp
and
mov
jnp
pusha
pushf
out
lea
push
add
and
imul
rol
iret
les
mov
shlb
movsl
push
xchg
ret
loop
dec
dec
xchg
bound
push
out
mov
xor
and
es
cmpl
or
xor
adc
push
jecxz
xor
inc
movl
sbb
jmp
mov
inc
icebp
jo
hlt
mov
or
ds
dec
inc
pop
or
and
movsb
mov
ret
loopne
lahf
inc
ret
add
es
ficompl
movsb
or
xor
and
push
aas
xor
pop
cltd
test
push
xor
cmp
mov
dec
lahf
xor
mov
mov
cmp
sbb
test
enter
enter
mov
dec
loop
insl
ljmp
icebp
dec
mov
xchg
pop
ja
push
movsl
cmc
adc
movsl
sarb
fs
outsb
bound
mov
dec
jge
dec
outsb
ja
mov
mov
push
ja
add
insl
xor
ret
sub
push
xchg
lret
scas
xchg
adc
add
scas
push
hlt
push
xor
mov
mov
aam
dec
xor
dec
dec
shll
push
mov
ret
mov
mov
mov
mov
adc
mov
daa
leave
test
adc
pop
inc
cwtl
jge
add
jae
call
inc
xlat
inc
jmp
popf
sahf
pop
ret
push
sarb
lock
incl
test
dec
mov
mov
dec
mov
int3
imul
pop
dec
mov
adc
ss
leave
enter
xchg
rcrb
xchg
fdivs
and
jo
in
pop
push
jno
pop
pushf
movsb
ret
mov
js
jg
sahf
call
addr16
sahf
adc
sub
push
xor
mov
inc
sub
fcompl
clc
and
movsb
xchg
lock
and
cmp
pushf
pusha
arpl
adc
or
xchg
fists
xchg
push
push
repz
mov
mov
cmp
or
imul
cmpsl
xchg
xchg
mov
sbb
icebp
xchg
jns
sub
popa
insb
aad
mov
cmp
das
xor
inc
or
cmp
push
shr
inc
mov
mov
call
adc
xor
xor
fsub
ret
cltd
in
emms
loope
mov
push
popf
mov
fidivrl
scas
sahf
bound
fbstp
pop
roll
dec
cmpl
stos
leave
mov
les
push
out
scas
push
or
adc
pop
dec
cs
insl
cmpl
push
aaa
movsb
mov
out
adc
mov
int
mov
sub
notb
data16
out
clc
cmp
add
hlt
mov
xorb
mov
sbb
sub
mov
pusha
shll
stc
adc
mov
lahf
icebp
push
xlat
stos
test
cmpsb
out
hlt
ds
in
in
jp
je
cmc
jae
mov
xchg
sub
xor
xor
sub
xlat
cmp
and
xchg
inc
and
out
and
mov
lret
add
fisttps
out
and
jl
mov
or
cltd
hlt
test
add
cmc
jnp
notb
sbb
or
inc
test
or
dec
mov
ud0
pop
jle
sbb
ss
lahf
xchg
sub
aam
stos
dec
pop
stos
lcall
cli
dec
push
lcall
lods
push
pop
aas
dec
dec
jbe
inc
xor
rcr
neg
xor
or
out
xchg
mov
sbb
mov
dec
xchg
sbb
shrb
arpl
pop
daa
mov
jbe
pop
inc
sbb
js
lods
popf
lret
loope
or
xchg
popf
cmp
rcll
les
bound
mov
inc
imul
jo
or
jle
aam
mov
sub
adc
sbb
sub
stc
popa
mov
inc
ja
iret
js
pop
and
lods
pushf
xchg
pop
pop
sbb
lods
or
push
add
jns
lods
loopne
movl
test
popa
adc
jecxz
int
imul
push
stc
int
insl
movl
mov
or
rolb
jecxz
fdivrl
mov
jg
inc
in
es
sub
ds
aad
mov
test
pop
outsb
sub
jno
pop
add
jle
and
mov
xchg
lds
or
movsl
add
in
xchg
roll
add
rcrb
mov
rol
cmpsl
lods
popf
dec
xor
dec
ret
push
cli
dec
xor
push
xchg
imull
push
pop
push
cmp
adc
push
or
fcompl
fistl
sbbl
pcmpgtw
std
adc
cs
dec
sbb
data16
jmp
mov
aas
cmp
popf
pushf
pop
push
mov
fsts
dec
jbe
xchg
lods
or
xchg
lcall
adc
scas
out
and
mov
mov
js
push
dec
test
and
insl
aad
add
cmp
or
xchg
push
mov
mov
mov
cs
sarb
xchg
and
mov
clc
cwtl
pop
shrl
mov
inc
fstps
lds
pop
and
loopne
and
push
pop
ficomps
xchg
cmp
or
rclb
int3
mov
adc
dec
mov
xchg
test
or
jmp
std
mov
clc
dec
fwait
stos
pop
xchg
outsl
cmpsl
adc
cltd
jns
fdivrl
inc
sub
jp
mov
push
fstl
and
dec
xchg
xor
adc
push
jmp
jmp
daa
mov
fidivl
and
adc
jmp
mov
ret
pop
mov
outsl
add
lret
mov
xlat
add
outsl
jns
fbld
sarl
mov
jae
sahf
jge
cltd
imul
lds
cld
loope
inc
outsl
clc
xchg
lock
insl
test
insl
inc
ds
jns
dec
test
jno
call
jb
mov
shll
pusha
pop
out
les
xor
movsb
jae
fwait
lahf
shll
adc
push
lret
jp
and
shlb
push
insl
mov
xor
arpl
xchg
aas
inc
mov
in
lods
mov
mov
dec
scas
lea
arpl
enter
mov
out
jne
out
xchg
jne
xchg
mov
jp
mov
mov
xlat
push
ret
mov
mov
mov
cs
mov
jle
div
xchg
outsb
fwait
add
add
sarb
nop
in
xchg
cltd
arpl
or
out
out
test
mov
push
mov
jb
mov
shlb
xor
jl
aad
sar
je
pop
cmp
jge
mov
icebp
sub
pop
rcl
xlat
jne
sbb
out
xchg
test
fsubs
xchg
shlb
fldl
inc
sbb
inc
mov
cmp
clc
xchg
fdivs
lock
fcomps
push
push
push
in
lea
jo
dec
xchg
push
cltd
sbb
or
xchg
cs
loope
stos
in
cs
jno
imul
jno
pusha
fcmovbe
and
sbb
hlt
or
xor
daa
dec
sti
xchg
scas
or
outsl
mov
ljmp
fs
cmc
mov
scas
add
mov
add
lcall
jmp
mov
lcall
adc
lret
call
stos
clc
imul
mov
fstpl
pop
pop
sbb
jne
test
sahf
pop
shl
jnp
push
mov
ror
mov
and
dec
adcb
js
push
inc
lods
mov
push
out
cmp
movsb
fstpt
jl
gs
fldcw
xchg
push
inc
enter
cwtl
test
sbb
in
mov
cmp
js
daa
xorl
jge
std
std
mov
push
cmpsb
out
rclb
ret
mov
jge
notb
pop
xchg
push
js
icebp
dec
cmp
lahf
or
dec
add
sarl
jecxz
inc
fsubrs
push
lret
ja
dec
sbb
sub
fwait
mov
aad
loope
jnp
dec
mov
lods
std
inc
cmp
pop
aas
mov
mov
xchg
orb
mov
clc
enter
sub
leave
xlat
lds
in
pushf
and
stos
fists
add
out
xor
nop
jge
sbb
jl
out
cwtl
out
sub
push
pop
jno
jl
lret
mov
xchg
mov
xchg
dec
or
fsin
aam
dec
dec
fidivrs
ljmp
mov
pop
jg
mov
lahf
mov
dec
jp
and
sbb
cs
mov
fidivs
pop
or
xlat
ja
movsl
and
ret
pop
sub
fmull
jecxz
sbb
sahf
push
and
push
cmp
insb
aaa
mov
push
fisubs
rorb
outsl
int3
stos
dec
sub
push
push
mov
std
adcb
ret
adc
cltd
cld
repnz
xchg
jae,pt
outsl
or
dec
adc
js
mov
test
mov
data16
xor
jne
scas
and
mov
mov
xor
xchg
add
pop
insl
test
jecxz
sbb
clc
int3
leave
shrl
sbb
lret
popa
test
ja
outsl
mov
cwtl
jl
add
mov
jbe
jne
mov
xor
sbb
xor
mov
push
lods
lock
mov
dec
xchg
inc
outsl
add
cltd
xor
insb
mov
ret
xchg
roll
lods
fisubs
fwait
push
xchg
mov
in
add
mov
loopne
fldl
ds
mov
and
popl
mov
pop
mov
pop
xor
in
shlb
rorl
stc
leave
ds
cmp
inc
loopne
les
cmp
jge
insb
test
or
sbb
push
test
mov
std
sbb
cli
jmp
fisubrs
movsl
bound
cmp
pop
jne
inc
push
add
lahf
xlat
aas
sahf
jmp
sub
pusha
pop
inc
nop
repz
pop
sbb
call
jge
mov
lcall
hlt
int
shlb
rorl
sbb
cld
mov
xlat
push
cli
jae
cmpsb
adc
imul
int
cmp
dec
cmp
push
push
xor
mov
ds
sbb
cmp
or
jnp
mov
psrlw
jg
je
repnz
pop
pop
jl
aad
test
movsb
or
lea
test
mov
insb
mov
outsb
sub
out
sbb
sbb
je
cmp
sub
push
pop
dec
insl
fldt
pushf
sbb
out
popa
mov
inc
popa
sub
add
test
lods
add
xchg
cmp
pop
xor
inc
loop
test
jne
out
xor
xlat
mov
stos
cwtl
xor
mov
mov
in
in
repz
fwait
dec
sti
add
jb
inc
pushf
daa
mov
xor
pop
add
inc
popa
mov
in
adc
int
out
and
pop
cmp
push
aaa
xor
jmp
loope
repnz
loop
ror
push
dec
cld
xchg
out
aas
pop
sbb
js
xchg
sub
jb
pop
dec
push
push
call
movsl
jl
xchg
push
data16
mov
stc
popa
mov
push
pushf
cwtl
sbb
hlt
inc
cmp
adc
mov
std
pushf
arpl
jne
mov
pop
repz
cmp
aas
mov
inc
sti
pop
sbb
sub
jnp
dec
add
imul
pusha
jno
mov
sbb
movsl
sbb
push
stc
cmp
out
les
aaa
add
imul
aad
dec
mov
pop
mov
fiaddl
incb
mov
push
mov
xor
add
mov
mov
or
mov
xor
jle
pop
add
pusha
call
and
arpl
cmp
enter
xor
aaa
adc
mov
insl
aaa
rolb
sub
sub
hlt
pop
cmp
inc
mov
pusha
cmc
push
fcmovu
adc
cltd
inc
push
mov
test
xor
sub
cmp
int
lret
jecxz
leave
push
mov
lock
push
repnz
and
sub
mov
mov
dec
dec
sbb
pop
pop
sbb
loope
repnz
repz
adc
sub
pop
dec
das
std
scas
arpl
cmpsl
inc
sbb
lahf
or
ds
lods
sub
rcll
add
push
call
jg
test
add
or
xor
xchg
adc
mov
mov
jae
sbb
xchg
and
jnp
push
jg
jg
shll
xor
shr
mov
adc
mov
pop
jb
fnstcw
push
mov
xchg
mov
gs
inc
shrl
sub
xor
xor
jg
inc
cmp
add
ljmp
loop
sti
leave
adc
stc
in
mov
jg
shl
cwtl
fwait
inc
pop
inc
mov
lea
mov
cmc
cltd
rcrl
addr16
dec
or
mov
xlat
enter
stc
add
movsl
cmpsl
push
cmp
inc
dec
outsl
push
loope
nop
aam
in
lahf
jmp
test
mov
add
push
jns
leave
xor
pop
lcall
lea
pop
and
push
cli
pop
mov
lret
sbb
cmp
mov
or
jo
fcoms
je
decb
addr16
pop
jae
jge
int3
int3
and
mov
imul
mov
icebp
mov
mov
fmuls
enter
mov
or
aam
xchg
mov
test
in
out
dec
cmp
add
mov
cmc
or
das
xor
arpl
pop
jbe
lahf
pop
xor
fdivs
adc
sbb
push
outsl
pop
js
cmpl
jb
jns
imulb
mov
mov
cwtl
bound
arpl
mov
pop
push
adc
lock
cmc
notb
ljmp
mov
imul
mov
fisubs
das
les
cmp
push
in
adcb
jb
pandn
pop
sbb
test
jp
jae
mov
outsb
fisttps
je
mov
nop
test
sub
in
xor
lock
xchg
mov
sti
vmaxss
lret
lcall
or
jg
in
adc
jle
mov
sub
data16
lcall
leave
fsubl
xor
jg
fnstsw
insl
lds
std
push
inc
ss
mov
testb
lahf
and
sarb
mov
or
pop
mov
mov
pusha
stos
std
pop
ret
adc
mov
repz
out
and
pop
pusha
punpckhbw
sub
jb
sub
mov
lods
in
aad
std
mov
das
pop
adc
push
mov
mov
cmp
cmp
aaa
inc
cli
jge
out
or
fcmovb
push
mov
fwait
inc
push
enter
cmpsb
sarb
push
repnz
fiaddl
sbb
push
add
stos
and
stos
fsts
test
or
shll
arpl
std
in
push
pop
and
inc
dec
jle
add
xchg
xchg
push
pop
mov
addr16
inc
out
flds
loope
mov
aad
xchg
jl
lcall
loop
cmpsl
popa
or
xor
insb
aas
test
call
jnp
aad
mov
or
sbbb
mov
or
in
hlt
leave
pop
and
cmp
cld
adc
dec
dec
lea
adc
es
cmpsl
out
mov
mov
out
scas
cmp
inc
and
lcall
sub
repnz
in
leave
cltd
es
pop
call
gs
aas
sub
imul
stos
mov
ficoms
call
xchg
push
sbb
ss
shlb
adc
adc
pop
mov
clc
xor
and
pop
push
jp
rorl
mov
arpl
shrb
jnp
or
mov
icebp
cmp
cli
in
xchg
jb
stos
jns
dec
popa
sbb
mov
fldenv
call
test
cmp
mov
fcmovne
inc
xor
push
orl
iret
pushl
pusha
jns
movl
std
pop
dec
xchg
ds
sub
mov
andb
movlps
inc
mov
das
jl
pop
mov
fwait
dec
mov
and
inc
lock
mov
imul
and
fs
int3
notl
divb
mov
jbe
or
test
mov
icebp
jle
or
cmp
sub
scas
sub
in
into
jle
or
hlt
cmp
xor
xor
fucomi
aaa
mov
mov
repz
jp
les
push
scas
pop
dec
test
pop
cmp
sub
addl
cmc
mov
mov
mov
iret
cmpl
loopne
and
lcall
lahf
sub
iret
push
cmp
je
cld
mov
or
xchg
adc
sbb
leave
daa
push
jp
ficomps
test
jp
adc
pop
scas
adc
and
sbb
jno
es
icebp
iret
loop
xchg
xchg
add
inc
jle
ret
inc
inc
nop
mov
jmp
jb
cmpsb
sti
pop
fsubl
movsl
fwait
pop
mov
add
repz
fwait
push
pop
pop
lret
xor
push
xchg
mov
call
ss
scas
fstp
xor
in
icebp
sbb
das
das
push
fwait
inc
test
inc
cmpsb
mov
lahf
mov
leave
mov
das
mov
xor
enter
fldln2
inc
repnz
xor
fwait
into
fwait
add
pop
dec
mov
ja
addb
es
and
add
loope,pt
push
adc
pop
test
out
inc
ret
dec
sbb
lret
mov
mov
arpl
mov
ja
scas
imul
in
leave
iret
leave
lcall
clc
jp
sub
ja
fbld
lret
pop
inc
sbb
ljmp
gs
sub
sahf
push
sti
sbb
insb
fwait
jge
mov
fsts
push
mov
push
pop
push
push
lea
inc
mov
mov
pop
fs
nop
popa
fadd
jnp
mov
jb
scas
pop
aas
pop
fldl
mov
xchg
push
adc
sti
pop
mov
jne
xchg
cltd
xchg
sbb
repz
mov
add
icebp
dec
testl
xchg
cmp
xchg
pop
pop
xchg
mov
iret
out
inc
rcll
dec
xor
leave
xchg
adc
mov
pop
mov
sbb
push
jns
push
test
push
xor
cmc
testl
repnz
dec
push
mov
xchg
sbb
and
aam
jp
push
or
sub
jno
icebp
lcall
stc
out
sbbl
or
out
bound
mov
imul
out
inc
mov
daa
pop
or
movsb
jecxz
xor
lcall
jbe
sbb
lea
aaa
cmc
xchg
and
mov
dec
mov
jno
fidivrs
aam
cmc
pop
xchg
clts
popf
cmpsl
shlb
sahf
xchg
pop
or
mov
sub
addr16
daa
repnz
mov
or
pop
xor
mov
push
mov
lods
sbb
push
push
js
xor
cmp
and
jle
sbbl
push
arpl
out
inc
push
push
lea
fstpl
std
sub
and
ds
inc
cmpsb
pusha
bound
mov
mov
sub
pop
pushf
push
adc
imul
mov
popa
scas
int
xor
sahf
xor
insl
bound
pop
push
dec
sbb
scas
out
ret
jge
inc
mov
popa
and
mov
cmpsl
or
popa
mov
pop
adc
jmp
js
push
adc
test
jbe
enter
and
sahf
cmpsl
out
mov
es
insl
dec
or
jecxz
cmp
and
jns
addr16
rcr
jns
inc
stos
push
lds
loop
dec
pop
ficoml
ficomps
xchg
pop
ret
fildl
push
xor
idiv
sub
add
sbb
in
leave
jb
or
xor
push
mov
or
xor
dec
and
adc
push
cmpl
sbb
mov
xchg
dec
cltd
push
lods
adc
enter
cmpsl
sub
aas
bound
adc
xor
mov
mov
ljmp
xchg
add
dec
mov
add
insl
or
add
xor
push
xor
jp
outsb
add
sbb
cmp
push
bound
mov
jbe
ffree
imull
and
aam
sub
xor
dec
cmp
mov
or
mov
jg
xor
push
jnp
imul
mov
leave
or
mov
mov
adc
imul
pop
cwtl
push
popf
mov
repnz
xchg
rcl
or
adc
aad
xchg
lds
pop
lret
insb
clc
ljmp
lds
lret
mov
dec
push
ljmp
cld
inc
add
ss
mov
call
insl
daa
arpl
or
out
test
push
or
rorl
dec
mov
sub
inc
js
cmpsb
das
idiv
jae
fistl
pop
or
pop
inc
push
clc
mov
lea
ficoml
aad
je
jg
imul
idivb
xchg
cmp
aad
cmp
ud0
pop
sti
and
cmc
cmp
dec
jle
sbb
test
xchg
shrb
mov
fisubrl
jmp
push
fwait
push
mov
sbb
push
inc
dec
sbb
rolb
gs
add
gs
cmp
push
test
shlb
add
dec
fists
in
out
fstpl
and
push
iret
ret
ljmp
jle
xchg
push
sub
and
lcall
lea
cwtl
fstpl
push
push
jp
jo
fildl
mov
or
in
push
pop
loop
mov
fdivrl
dec
xor
xor
popa
outsl
dec
sbb
aaa
sub
mov
pop
and
sahf
hlt
sbb
mov
dec
xor
gs
dec
outsl
movsl
push
add
insb
lahf
sub
mov
aad
jp
or
cmp
mov
lret
cli
pop
fisubrl
and
pop
jae
and
or
push
not
inc
mov
cmp
test
xchg
std
insb
inc
mov
data16
mov
push
cli
push
cmc
aaa
ljmp
in
jne
sbb
jle
push
imul
es
fcompl
add
cltd
sbb
test
cmpsl
adc
and
push
push
pop
rcrb
sub
push
sti
les
lcall
sar
dec
or
cwtl
in
cmpsl
add
xchg
pop
cld
stc
dec
std
pushf
fwait
mov
add
add
add
push
adc
aad
add
xchg
in
ret
aad
shll
push
pop
scas
je
aad
mov
jecxz
cs
jg
cmc
xchg
pop
dec
loop
sbb
out
ds
sub
in
add
in
fistps
daa
int
mov
mov
add
mov
rcrb
or
lahf
mov
fistpl
js
xor
mov
jmp
test
cmp
push
js
xchg
imul
divl
jno
dec
mov
jecxz
cmp
xlat
fwait
mov
pop
mov
outsb
inc
movsb
hlt
fiadds
mov
cwtl
stc
and
lock
adc
jecxz
jle
add
mov
fcomip
incl
stc
mov
test
arpl
cld
mov
dec
and
loop
mov
movsl
lods
arpl
sbb
xor
data16
jp
out
dec
add
shrl
shrb
cmp
fimull
xchg
mov
xchg
cmpsb
enter
loopne
daa
lret
mov
std
xchg
sub
jge
mov
sub
and
fmull
cmp
nop
das
popf
das
jmp
lret
cld
jo
cmp
mov
mov
sbb
jns
jo
mov
add
scas
ret
fcmove
and
jnp
sub
test
test
arpl
pop
fnstcw
outsl
ja
mov
adc
sub
notl
lret
jo
loope
dec
xor
sbb
lods
xor
dec
aaa
or
add
scas
add
fcmovnb
dec
in
add
mov
push
dec
movsb
or
imul
cmpsl
pop
jg
xor
iret
pop
adc
cld
jge
cmpb
int3
lcall
test
lods
xlat
in
cld
stos
std
aaa
mov
jne
xor
ret
repz
pop
mov
js
add
xor
xorl
outsb
int
dec
fbstp
or
pop
repz
mov
clc
ficoms
sub
movb
cmp
popf
pop
xor
shlb
iret
push
inc
add
rolb
pop
pop
cmp
out
fbld
ret
arpl
adc
cltd
in
dec
clc
fisttpll
jge
and
out
punpckldq
out
pop
sub
and
out
jb
fadd
popf
addb
cmc
adc
js
aaa
scas
fnstenv
mov
add
loope
test
xchg
sti
int
push
inc
jp
push
imul
dec
lods
test
push
repz
add
in
rolb
aam
nop
sbb
fwait
cmc
decl
inc
dec
mov
scas
mov
add
out
test
je
fwait
xchg
pushf
inc
pop
fisttps
stos
rclb
push
dec
or
stos
popa
xor
sub
jo
test
jmp
adc
cs
fisubs
insl
add
pop
push
je
mov
dec
adc
or
data16
std
std
pop
lds
push
jbe
cmpsl
xlat
movb
lcall
jne
cmpl
cmp
inc
leave
inc
in
pushf
xor
xchg
stos
push
sbb
in
pop
and
mov
xchg
pop
xchg
call
aaa
pusha
icebp
jns
pop
daa
data16
inc
push
jns
stos
dec
push
dec
mov
mov
lcall
and
test
and
stc
cwtl
dec
mov
adc
mov
xor
push
fnsave
sub
or
mov
jns
inc
adc
in
mov
push
cmpsl
cmp
mov
mov
aas
adc
cmp
dec
sub
rorb
pop
mov
test
lods
mov
xchg
pop
outsb
aam
pop
push
mov
pop
xor
ss
cld
ds
and
lret
mov
mov
cs
inc
cs
sub
lcall
sub
xlat
sahf
cltd
mov
xchg
testb
cmpsl
pop
and
adc
cmc
int3
mov
adc
movsb
pop
push
aas
push
clc
xchg
nop
push
call
mov
sti
stos
pop
pop
cmpsb
loope
cmp
aaa
fs
or
add
mov
xchg
fsubrs
inc
push
dec
dec
pop
pop
or
sub
int
les
into
jbe
shrl
in
jo
push
pop
adc
sbb
jle
dec
mov
lea
inc
popf
sbb
sbb
lahf
sbb
sarb
insb
lret
xor
mov
lret
loop
ja
pop
icebp
xchg
out
cmp
mov
or
pop
push
pop
test
cmp
dec
cmovbe
or
mov
fildl
movsb
mov
imul
mov
pop
push
ss
sbb
add
xchg
lds
outsl
jecxz
or
dec
jns
ja
std
dec
and
mov
pop
cmp
out
xchg
std
xchg
sti
je
push
jmp
pop
mov
cmp
and
jo
xchg
mov
out
icebp
aam
sbb
adc
repnz
pop
lods
outsl
jmp
pop
jmp
sub
jmp
inc
jae
ja
out
jnp
scas
cwtl
or
int
cmp
sub
outsb
cmp
pop
scas
mov
cltd
pop
or
xor
in
add
rcr
sti
loop
mov
xchg
icebp
push
mov
lahf
out
mov
push
mov
cld
jb
adc
ss
mov
sub
inc
adc
call
mov
lock
pop
out
xor
jne
repz
out
push
int3
push
sub
inc
rorl
hlt
ret
ds
insl
shlb
pushf
out
cmpsb
out
sbb
jno
ja
sub
sarl
xlat
sbb
pop
mov
or
dec
sub
rol
push
mov
mov
lcall
mov
pop
out
addl
cmpsb
int3
cwtl
ds
mov
leave
or
pop
jg
push
and
mov
xor
lods
mov
mov
mov
push
mov
jns
imul
xor
mov
imul
mov
push
in
fmulp
mov
xor
ss
cli
push
inc
in
addb
test
movsb
dec
sbb
ret
lret
enter
lcall
out
out
inc
push
cmpsl
sahf
and
add
push
mov
push
mov
jp
or
insb
fs
ja
xor
test
or
into
jo
pushf
or
xchg
sub
sub
shlb
sub
adc
push
mov
ret
das
jno
or
dec
push
decb
ja
xchg
repnz
roll
pop
pop
cld
in
in
in
xchg
xchg
jge
adc
push
fildl
adcl
es
out
sub
cmpsb
add
sbb
add
add
test
fisubs
out
movsb
daa
mov
addb
or
sbbb
data16
scas
ret
mov
pop
push
sbb
or
movsb
and
jb
xchg
ret
mov
push
dec
ljmp
mov
sarb
mov
dec
pop
fisubrs
in
dec
mov
xchg
jge
sub
or
and
jb
aam
aam
cmp
addr16
jecxz
adc
xor
jo
jg
xchg
fisttpl
mov
arpl
xor
lods
mov
xchg
js
scas
movsb
cmp
dec
test
and
jl
add
adc
rorl
aam
shlb
ss
sarl
je
fnstenv
add
fs
sahf
push
add
out
pop
jecxz
jnp
xchg
xchg
push
mov
adc
out
mov
test
push
pop
rolb
aaa
mov
fs
aad
negl
jle
ret
jl
xchg
mov
mov
cmp
hlt
mov
jmp
jae
xchg
lahf
mov
addr16
fldenv
fidivrs
addl
lods
dec
aas
mov
fmull
mov
in
add
lret
xlat
dec
addr16
inc
out
loopne
lahf
roll
icebp
andl
mov
loopne
push
pop
mov
adc
loope
fmuls
inc
dec
rolb
xlat
mov
incl
jecxz
in
mov
in
testb
sbb
fldl
mov
push
das
pop
decl
lds
in
incb
dec
lret
lods
push
dec
xor
inc
dec
xor
hlt
xchg
stos
aaa
jns
cltd
push
xrelease
fistpl
lock
fisubl
jl
ret
adc
pusha
enter
mov
mov
dec
mov
daa
hlt
dec
fabs
mov
sbb
push
or
and
mov
pusha
fcoms
in
addl
mov
ds
cmp
shl
clc
leave
popf
movsl
push
xchg
in
movups
and
pop
scas
ds
push
push
ja
addr16
mov
idiv
sarl
fistps
inc
mov
adc
sbb
xchg
imul
mov
adc
mov
aaa
outsb
mov
sbb
sub
dec
push
dec
pop
inc
pusha
js
inc
mov
movb
nop
ret
test
sbb
aaa
jno
jl
test
fstps
ds
xor
fs
inc
cmp
jo
fisubrs
mov
mov
mov
jg
xor
jnp
lods
and
mov
dec
adc
clc
scas
inc
iret
pop
mov
movsl
add
jno
xor
cmpsl
jle
push
aad
addl
add
add
addr16
sahf
out
xchg
test
jae
mov
mov
movsb
or
cli
movsl
sbb
dec
fcmovu
js
inc
jnp
xor
pushf
mov
sub
pushf
cmp
sub
jl
mov
das
xor
clc
xchg
push
and
xchg
push
dec
add
sbb
sub
imul
leave
mov
cld
jbe,pn
nop
xchg
loopne
stc
push
jnp
test
dec
stc
subb
xor
outsl
dec
cmp
push
pop
unpcklps
dec
les
push
test
dec
cwtl
lea
fisubrl
mov
popa
aas
adc
xchg
outsl
pusha
fstl
in
int3
hlt
aas
cmc
addr16
add
cmp
ja
lea
scas
mov
outsl
lret
std
sti
xchg
scas
movsb
rcl
sbb
mov
xchg
lods
or
int
jns
sub
clc
mov
mov
jmp
adc
fdivrl
jmp
imul
or
xor
mov
idiv
pop
jne
data16
lds
loopne
faddp
test
xlat
sub
push
jb
imul
push
sub
js
stos
in
or
int
lods
sbbb
sub
icebp
sti
cmc
jecxz
inc
jl
lock
int
and
iret
adcl
cmp
aas
sbb
mov
cs
subl
pushf
sub
add
inc
pop
daa
fistps
mov
jle
ss
inc
sbb
xchg
sbb
repz
jo
jp
arpl
dec
out
sbb
xchg
cltd
xlat
sub
scas
pop
mov
test
pop
push
mov
pushf
pop
ret
addl
dec
or
jp
mov
add
mov
jns
jp
mov
and
clc
test
ss
sbb
cmc
gs
fsubl
jo
inc
shrl
ljmp
and
push
stos
test
jae
pop
movsb
in
in
fnstcw
cwtl
inc
mul
mov
add
xchg
gs
push
jle
adc
jb
push
xchg
ret
mov
stos
loop
adc
shlb
sub
fcmovb
repz
and
bound
dec
jl
pop
inc
out
movsl
mov
sarb
lahf
xor
jo
stc
add
fisttpll
sub
inc
aad
push
add
adc
add
pushl
adc
fiadds
hlt
fwait
out
jle
fidivrl
inc
pop
ret
mov
call
test
or
xchg
lods
mov
xchg
jne
scas
jnp
inc
cmp
cmp
inc
jns
sub
sbb
in
sub
ret
mov
push
xor
xchg
movsl
test
inc
push
xchg
gs
lods
repz
loopne
and
enter
push
push
lahf
jp
and
pop
rcll
mov
dec
call
sub
fistps
and
mov
cmpsb
or
icebp
xchg
lcall
outsb
jl
aas
and
aam
and
mov
inc
dec
jecxz
xchg
inc
scas
lea
mov
mov
xlat
addr16
mov
add
int3
inc
cmp
test
ss
sub
add
add
xchg
lcall
orl
mov
lret
or
enter
test
out
stos
std
rcll
xor
jnp
mov
push
adc
call
xlat
test
lods
or
andl
mov
xor
xlat
cld
xchg
pop
dec
je
xchg
iret
mov
cs
stos
scas
dec
ret
adc
mov
jbe
cli
call
ljmp
add
pushf
addr16
call
cmp
ja
popf
lods
push
lahf
stos
mov
lea
stos
sbb
cmp
dec
jne
hlt
mov
sub
push
lods
push
sub
scas
adc
or
fdivs
cmp
popf
outsb
cmp
testb
sub
fdivrl
aas
mov
dec
lahf
jbe
jnp
inc
inc
stc
popa
inc
les
add
adc
jl
stos
adc
cli
lods
std
push
cmp
je
cltd
dec
aam
test
pop
test
addr16
push
idiv
push
ja
movsb
rorl
js
fldt
cmp
jns
test
jge
mov
push
aaa
add
out
and
sub
hlt
fs
cmpb
pop
int
jg
bswap
pop
fildl
repz
push
cmp
adc
sub
mov
sub
ljmp
pop
xor
negb
in
mov
mov
divl
inc
dec
pop
fsubrl
xor
mov
aam
fisubs
jge
rorb
adc
jmp
inc
jbe
aaa
pop
pop
jge
pushf
repz
mov
push
sub
pop
pop
sahf
lret
jo
sub
add
jns
push
sbb
xchg
inc
inc
fisubrs
js
push
mov
mov
mov
adc
dec
popf
push
addb
sahf
xor
mov
jae
mov
enter
adcl
dec
sbb
sub
sbb
lock
jb
inc
fcmovnbe
aas
popa
rclb
lock
xor
rol
cli
in
je
in
fadds
pop
fwait
andl
hlt
loope
lcall
pop
ficompl
or
and
mov
pusha
loop
push
iret
adc
call
push
callw
stc
xchg
daa
push
bound
ja
aad
mov
mov
movb
out
icebp
clc
in
subl
adcb
xor
ds
test
test
pavgb
xor
mov
int3
je
add
fcompl
mov
movsb
sub
aad
sahf
mov
out
addr16
mov
sbbl
ror
inc
jle
push
insl
rorb
imul
jge
sbb
movl
repz
cmp
add
out
mov
js
out
das
xor
pop
mov
inc
fs
cltd
out
mov
xchg
aam
mov
dec
or
xchg
js
dec
fisubrs
add
je
sahf
jno
cwtl
leave
mov
add
add
call
popa
adc
sbb
mov
and
jg
addr16
push
jb
pop
icebp
outsb
fisttps
xchg
scas
mov
mov
imul
addr16
mov
test
ret
sarb
cmp
nop
cmp
xchg
fcomps
out
dec
inc
dec
and
shlb
popa
es
pop
dec
pop
in
sbb
mov
nop
xchg
dec
adc
push
out
fldenv
mov
sbb
sahf
and
int
mov
cmp
pop
bnd
andb
popf
fs
cmpsl
bound
add
jns
add
daa
insl
enter
mov
sub
xchg
imul
xlat
ficoml
stos
mov
xchg
mov
sbb
dec
push
test
fldenv
pop
pop
push
pop
jo
mov
inc
mov
mov
push
inc
imul
mov
dec
dec
dec
sub
inc
insl
imulb
mov
adc
int3
mov
xchg
pop
es
dec
mov
popa
mov
ds
pop
cmp
add
gs
loop
ss
and
pop
scas
sbb
xor
mov
movsb
cmp
mov
rcr
add
push
in
sahf
rclb
pop
xchg
sarl
scas
mov
sti
out
fnsave
xchg
or
loop
mov
xchg
ljmp
test
add
add
jb
sub
daa
daa
outsl
fwait
dec
stc
fimuls
sbbl
loop
andl
adc
ret
xor
popa
jmp
outsl
add
popf
aam
fistpl
sub
mov
jle
int
cmpb
mov
inc
pop
sbb
pop
mov
insl
mov
and
pop
test
dec
pusha
loope
push
sub
repnz
repnz
fistl
in
hlt
xchg
rcr
cs
outsl
scas
xor
pop
out
adc
jb
cmp
pop
stos
dec
test
rolb
mov
pop
lds
clc
mov
out
jle
notb
push
lea
sub
push
hlt
or
shr
push
sbb
sbb
dec
stos
dec
incb
mov
mov
mov
and
and
jg
push
push
xchg
push
lock
and
jne
jle,pn
sbb
enter
movsl
push
les
cmp
jecxz
cmpsl
repz
mov
jne
mov
pop
icebp
add
and
test
jnp
jae
test
mov
xchg
fcmovbe
cmp
rol
call
hlt
js
fiaddl
and
dec
aaa
jae
sbb
fsubs
scas
out
mov
mov
mov
cs
cli
or
cmc
cmp
ret
test
inc
jecxz
jbe
sub
cmpsb
inc
scas
ja
leave
jne
out
add
lahf
push
push
movsb
into
sbb
sbb
dec
push
pop
jbe
add
ret
sbb
outsb
cmc
icebp
ret
rcrb
ficompl
pusha
push
sti
movsb
clc
out
lret
in
icebp
xor
addb
cli
mov
inc
add
pushf
arpl
sub
inc
cmp
into
arpl
lret
push
xchg
inc
dec
shll
ljmp
cmpsl
outsb
out
mov
cmpsl
je
xor
fisubl
testl
jg
push
xor
mov
shlb
pushf
loopne
push
das
jle
mov
orl
es
rorb
adc
pop
out
subl
and
inc
mov
fcoms
and
mov
add
mov
cmp
fcomps
mov
ret
xchg
sarl
fimuls
rorl
outsl
or
cmp
sahf
sub
push
mov
xor
mov
mov
js
and
mov
mov
inc
mov
pop
mov
xchg
bound
cmp
dec
enter
jmp
movsl
leave
or
push
dec
loopne
adcb
push
cmpsb
in
je
adc
adc
or
sub
fsqrt
xlat
rorb
incl
sbb
xchg
xchg
xor
insb
jnp
xchg
or
and
dec
jns
lods
xchg
mov
das
cmp
jg
xchg
cs
pop
push
add
jns
mov
popf
call
inc
aad
push
fmull
mov
cs
pop
mov
in
popa
jb
jg
hlt
mov
imul
sub
movsl
js
rolb
mov
cmpsb
xchg
adc
adc
xchg
xchg
cmc
daa
pop
lret
into
sub
jns
arpl
roll
sub
or
mov
test
mov
bnd
inc
inc
cmp
xchg
repz
mov
je
adc
and
stos
cmp
call
daa
mov
iret
push
pusha
inc
insb
pop
ljmp
jb
mov
ret
xchg
sub
imul
inc
ds
popf
sti
dec
filds
pusha
add
lahf
mov
jmp
imul
sub
les
pop
or
jbe
adc
movsb
negb
nop
mov
xchg
popf
cs
and
cmpsb
xor
inc
pop
adc
and
jns
sahf
sbb
fdivrs
popa
pop
or
arpl
mov
jge
fbld
ljmp
dec
sti
mov
xor
xchg
out
loope
lea
add
lods
ljmp
out
or
incb
or
cmp
mov
cmc
fs
outsb
loop
in
pusha
sarl
push
and
enter
aas
jl
pop
mov
mov
cmp
data16
pop
mov
into
ljmp
cmovb
jecxz
adc
jge
xor
adc
iret
lahf
push
mov
sub
push
fcompl
je
out
aam
inc
lea
mov
dec
into
in
mov
jo
lods
lock
pop
sbb
jnp
fistps
jg
movsb
shll
fistps
cli
test
ja
add
popa
add
stos
iret
mov
popa
mov
mov
or
adc
mov
xchg
je
lock
cmp
adc
je
mov
push
xchg
pop
popa
sub
mov
popa
jae
dec
inc
cli
iret
cmp
data16
daa
hlt
shl
xchg
shlb
pop
daa
subb
popa
or
jmp
cmp
push
js
test
and
jb
mov
mov
inc
pop
cwtl
in
pop
in
cmp
jmp
mov
enter
test
das
jge
flds
mov
xchg
popf
repz
dec
inc
scas
cmp
jecxz
sbb
ret
xlat
dec
lea
mov
sbb
dec
push
and
mov
in
jge,pn
outsb
pop
jb
add
add
xor
lcall
inc
fcmovb
mov
mov
jl
arpl
push
and
ds
mov
mov
out
sbb
pop
cmpsl
push
mov
pop
jns
test
xchg
aas
or
daa
xchg
sbb
or
mov
cmpsl
sti
stos
inc
mov
push
ficomps
leave
cmp
insb
xchg
in
mov
dec
sub
mov
and
pop
xchg
add
xor
inc
mov
mov
or
daa
outsl
cmp
cwtl
and
fwait
xor
sbb
out
xchg
scas
jl,pt
insb
out
test
mov
loopne
lret
inc
xchg
gs
repnz
push
es
xor
leave
lcall
mov
mov
dec
jno
xchg
aaa
mov
adc
push
push
pushf
adc
clc
sarl
cmp
test
stc
lahf
nop
sbb
mov
das
push
subl
mov
jae
xchg
ss
mov
scas
and
out
mov
mov
loop
xlat
ja
lea
insb
addr16
add
pop
shlb
jnp
sbb
cmpb
push
mov
ljmp
push
in
mov
outsb
fstpl
iret
aas
sub
popf
lods
or
and
jecxz
mov
out
lcall
mov
add
in
in
arpl
sbb
sbb
jg
add
cli
or
movsl
pushf
push
pushf
bound
xor
shrb
sub
add
aaa
pop
mov
fdivs
push
mov
data16
unpcklps
mov
xor
push
xchg
insl
enter
cltd
lea
dec
dec
shrl
pop
aad
rcr
mov
jge
cmp
sbb
rorl
adc
outsl
cld
mov
push
dec
rclb
sti
movsb
fldl
ret
jns
push
adc
loop
inc
mov
and
push
fcoml
gs
dec
xorl
push
jecxz
xor
jne
shll
sbb
rorl
dec
cli
add
mov
mov
pusha
mov
pop
negb
nop
inc
jge
mov
jne
ja
testl
negb
shrb
add
cmpsl
out
sbb
push
sub
push
mov
je
pop
dec
adc
scas
sbb
xchg
sahf
sbb
ja
xlat
jae
icebp
stc
or
in
adcb
mov
add
out
push
add
xchg
add
out
mov
jg
bound
xlat
jmp
enter
leave
pop
arpl
pop
sti
jns
aad
insl
int
lcall
out
xchg
je
in
mov
xor
pop
int
mov
xchg
in
sbb
ljmp
iret
outsb
loopne
sub
cld
dec
idiv
ja
mov
xchg
pop
mov
pusha
faddl
mov
rorb
lock
insb
xchg
lret
pop
insl
rcrb
movsl
dec
and
mov
fadds
inc
lret
push
mov
add
adc
jg
jp
push
push
rcrb
cwtl
and
stos
xchg
xor
rclb
iret
loope
loope
xchg
dec
sahf
push
sub
pop
or
adc
mov
fucom
lea
insb
repz
les
xchg
outsl
out
mov
jns
cmpl
cwtl
daa
xchg
lods
xchg
and
sub
mov
std
jecxz
fisubrl
aam
js
jle
adc
cld
ret
daa
shlb
jno
push
cmp
adc
jmp
lcall
ja
lret
jne
xor
dec
and
sbb
cmpsl
fmuls
lds
push
fs
jmp
sub
jne
gs
xor
add
cli
enter
repnz
inc
adc
jmp
movsb
pop
or
sbb
in
xor
aas
sub
mov
mov
cmpsb
outsb
imul
xorb
sub
lods
stos
add
in
xchg
jns
lock
loope
out
cs
lcall
sahf
mov
aas
jae
jge
incb
inc
mov
pop
ja
mov
std
add
scas
outsb
ret
sbb
mov
outsl
push
inc
mov
or
stos
jecxz
mov
push
add
outsl
loope
sbb
jl
mov
push
aaa
add
xchg
adc
mov
jmp
dec
jns
and
mov
mov
mov
push
or
jnp
in
mov
sahf
lahf
cld
mov
jbe
jle
das
and
dec
jp
rolb
mov
and
and
jns
cmp
jae
iret
out
adc
pop
mov
dec
int
sbb
mov
nop
sub
dec
sbb
xchg
sub
push
js
ja
jp
cld
pop
test
cld
lret
cmpl
add
arpl
cli
imul
dec
loop
gs
xor
xor
fisttpll
aaa
fsubrl
mov
fcmovbe
outsb
jno
repnz
jmp
shr
rcll
fsubl
cltd
xor
jnp
lret
xor
push
inc
enter
or
xor
xor
xor
and
inc
pop
jmp
and
jne
and
imul
xchg
mov
scas
sub
lahf
fisubrl
pop
xchg
jl
int
sub
add
rorl
mov
xchg
out
imul
flds
adc
insb
andb
push
mov
jmp
ret
adc
inc
xchg
sbb
jbe
popf
popa
pop
in
mov
in
mov
jmp
pop
push
sub
push
xor
scas
call
push
stc
call
hlt
aam
ljmp
xor
cmp
push
push
ja
loopne
in
cmp
shrl
test
jp
jbe
test
push
dec
add
movsl
lret
push
mov
clc
lods
ret
push
or
decl
or
std
cld
pop
jp
inc
imul
iret
push
cmp
mov
bound
fiadds
loop
ds
aad
pop
jnp
int3
imul
xchg
xchg
jecxz
inc
jle
mov
adc
pop
loopne
jmp
movsl
adc
jmp
jge
mov
sub
pop
lret
mov
je
pop
mov
cli
add
inc
fsub
int3
popa
fs
push
fdivrs
push
jae
xchg
out
pop
bound
inc
test
fiadds
popa
jb
jo
outsb
mov
lahf
call
data16
adc
xor
jl
test
pop
rorb
leave
imul
pop
ret
xor
xor
mov
das
fstps
xor
jno
fmuls
jge
imul
pop
jmp
xchg
sbb
fcom
xchg
xchg
mov
and
mov
or
or
mov
in
punpckldq
gs
and
mull
repnz
aad
xor
out
mov
daa
dec
stos
pushf
sub
bound
stos
mov
or
inc
cmc
add
pop
movsb
leave
sub
push
or
int3
cltd
insl
pop
repnz
fs
dec
and
push
mov
ds
adc
add
jle
and
imul
leavew
repnz
shl
cmp
xor
shr
lret
sti
loop
loopne
xchg
or
inc
daa
ret
push
iret
cld
std
push
sub
repnz
pop
mov
adc
xchg
xchg
andb
lock
mov
mov
push
loop
cltd
push
xorl
push
pop
mov
sub
mov
jl
mov
jle
fcmovb
cltd
cmp
xchg
stc
loope
sahf
fwait
push
jno
sbb
and
jle
out
jnp
leave
xlat
stc
aam
xchg
aad
lcall
push
cmc
pop
ja
mov
sar
mov
sahf
add
mov
xchg
xor
rcrb
aam
movsl
jno
pop
cmp
aas
outsb
pop
cmp
rcr
adc
push
mov
xchg
xchg
daa
push
mov
push
fidivrl
int
rcrb
in
jecxz
pushf
inc
add
leave
es
popf
or
push
inc
sub
into
or
movsl
js
jp
imull
out
adc
call
ds
addr16
popf
mov
sbb
cltd
mov
loopne
rcrb
fs
and
mov
adc
mov
outsb
xchg
arpl
cmp
mov
nop
mov
mov
pop
add
or
dec
xor
out
and
rolb
cmp
lea
out
sarl
mov
push
out
mov
add
insb
cmp
std
ds
or
out
lahf
pop
pop
xor
dec
decb
sti
add
push
mov
inc
setb
andl
xor
push
mov
fcoml
dec
jb
sbb
pop
and
stc
push
cmc
sarb
pop
out
jnp
and
loope
mov
in
pop
xor
xor
repnz
stos
ds
xorb
into
lock
push
cmp
lods
icebp
notl
push
inc
sarl
dec
mov
sbb
mov
mov
sar
imul
dec
lods
ret
dec
jl
repz
sbb
push
lds
jns
movsb
rcrl
mov
loop
fdivr
lock
sub
bnd
ljmp
mov
rol
shl
push
sub
lods
insb
std
push
inc
out
je
repz
mov
outsb
inc
lcall
icebp
jo
sbb
jno
jge
scas
sub
mov
pop
push
add
sbb
rcl
aam
jb
inc
push
jge
dec
fsubl
stos
test
stc
push
sub
jb
fisttps
ud2
jle
jbe
js
mov
rcrb
dec
outsl
sub
push
out
dec
dec
pusha
pop
mov
cmp
mov
pushf
dec
or
or
cld
cmc
daa
mov
mov
icebp
shl
pop
sbb
add
jns
dec
or
lret
jmp
int
add
sbb
cwtl
aam
push
ljmp
push
sbb
cwtl
cltd
mov
push
add
in
ret
aas
mov
mov
adc
movsb
jne
cmp
jecxz
lods
xor
push
subl
cmp
faddl
lret
cmc
cmpsl
aaa
ljmp
or
sbb
sub
dec
jbe
outsl
sbb
cvtdq2ps
mov
xor
jnp
repnz
filds
xlat
inc
bound
mov
ficoml
into
insl
cmp
shr
ret
rol
add
cmp
adc
dec
xchg
sub
or
std
mov
mov
movsl
mov
in
popf
lea
std
nop
movsb
or
inc
pop
inc
push
int3
jp
aaa
test
xchg
sub
pop
leave
pop
fwait
sub
or
cmpsl
cmpsb
dec
stos
dec
test
add
pop
mov
stos
roll
push
lea
in
int3
lret
out
inc
cmp
add
gs
repz
push
mov
es
and
sub
and
jbe
xchg
int3
push
inc
adc
mov
xor
adc
push
xor
pop
xor
mov
pop
les
pop
jmp
in
mov
ror
or
cld
in
out
jg
sbb
cmpsb
sbb
pop
inc
cld
sub
je
aaa
jae
sub
dec
sub
xchg
xor
push
sub
push
dec
leave
inc
filds
mov
jnp
push
es
push
loope
sbb
cwtl
pop
mov
add
add
imul
cmp
dec
jo
ret
fsubrl
adc
enter
and
mov
xchg
test
push
mov
mov
sbb
insl
xchg
push
mov
inc
negb
mov
dec
arpl
stos
mov
loop
sub
cmc
dec
pop
mov
lock
pop
cwtl
lds
aam
cmpsb
pop
rcrl
outsb
jo
xchg
mov
or
test
inc
jp
ret
icebp
lret
sarb
push
and
jne
and
scas
push
sbb
notl
xchg
outsl
pop
clc
adc
sti
add
jecxz
push
xchg
sbb
dec
scas
adc
sub
in
sbb
mov
inc
mov
mov
jge
and
and
cmp
mov
insb
mov
add
addr16
outsl
mov
mov
dec
adc
jb
jg
adcl
into
enter
leave
add
mov
pop
div
adc
xor
inc
push
or
sbb
pop
out
test
mov
add
mov
push
jo
and
mov
repnz
pop
mov
aad
or
mov
xchg
icebp
mov
ss
dec
xchg
mov
cmpsl
dec
jmp
xchg
inc
push
sbb
mov
sbb
outsl
or
cmpsb
and
int3
add
lods
cltd
cld
cwtl
pushf
imul
and
lods
lock
inc
cmp
jecxz
outsl
mov
negb
and
fdivrs
sub
push
popf
repnz
enter
mov
popa
into
ret
push
inc
jbe
jbe
arpl
push
push
jp
insl
push
mov
ljmp
es
outsl
inc
jmp
mov
cltd
or
movsl
add
andl
int3
iret
fs
dec
insl
cmpsl
pop
dec
test
outsb
xor
sarb
leave
mov
mov
pop
lods
mov
insb
cmp
loop
clc
sbb
insb
pop
cmovp
bound
outsb
jg
je
lcall
outsl
inc
inc
mov
addr16
mov
xor
addr16
jnp
push
dec
loop
mov
ljmp
stos
adc
mov
lahf
xor
push
dec
mov
jae
xchg
add
push
loop,pn
and
add
ds
push
out
fbld
test
jg
icebp
pop
xor
mov
fs
cwtl
pop
loop
xor
aaa
cmp
cld
push
data16
out
jo
or
sar
test
popa
jl
dec
cs
dec
loope
imul
xchg
loopne
arpl
jmp
lds
mov
jne
movsb
push
aaa
scas
sub
jne
dec
mulb
or
aaa
cmp
fiaddl
and
gs
inc
inc
and
std
xlat
sub
ljmp
jno
push
insb
cltd
sbb
lods
pushf
pop
lea
push
dec
movsb
mov
movsl
cld
push
fisttpll
out
das
popa
loopne
jbe
ret
jnp
inc
push
popf
subl
repz
iret
jge
fs
add
dec
xor
jp
imul
mov
test
das
and
pop
sbb
jge
mov
xchg
mov
stos
gs
lahf
xchg
imul
incl
fcoml
or
jb,pn
xchg
sub
movsl
push
imul
mov
outsl
sub
push
call
jmp
dec
ja
ror
sbb
pusha
add
cmp
xor
ret
mov
jns
inc
mov
cmpsb
enter
fmull
shll
mov
movsl
mov
cmpsl
dec
in
pop
push
adc
lds
cmp
pushf
add
inc
push
roll
push
or
add
repnz
xlat
dec
aam
mov
ficompl
test
nop
jae
lahf
mov
lret
sbb
push
test
push
les
bound
inc
aam
subl
push
addb
fistpl
xchg
dec
ja
sbb
int3
sbb
enter
dec
stos
sub
push
jp
sbbl
pop
stos
or
jmp
cmp
dec
out
mov
ret
xchg
iret
sub
dec
fldt
nop
jg
pop
ja
hlt
xchg
gs
movsb
dec
jg
add
cmpsl
mov
xor
aam
xor
sub
jp
mov
inc
sub
cs
inc
cmc
xchg
add
inc
fwait
mov
dec
xchg
adc
out
add
inc
and
jle
push
xor
ds
mov
sub
arpl
inc
das
fwait
pop
popa
inc
and
out
add
and
jge
addr16
push
in
mov
pop
cmpsl
inc
jmp
cmpsb
adc
add
xor
sbb
clc
pop
cmp
ficoml
sbb
jns
les
lock
sub
sbb
ret
cmp
sub
loop
ds
ds
or
jns
adc
rorb
add
test
add
jle
subb
fwait
call
fidivs
ret
iret
cli
mov
mov
adc
xor
or
jl
and
mov
lret
jb
push
and
fnstcw
sbb
adc
sub
in
test
and
jle
pop
pop
mov
sbb
in
cmp
cmp
cmp
imul
and
inc
xor
push
call
lcall
jbe
push
push
mov
pop
push
sarl
mov
cmc
stos
pop
outsb
outsl
sbb
xor
or
jbe
cmpl
push
xchg
fmull
adc
inc
mov
shlb
or
nop
lret
mov
imul
pop
fidivrl
sbb
fwait
loop
in
dec
outsl
sbb
fbld
lahf
dec
insl
dec
cmp
xor
add
or
mov
or
jb
loop
lret
xchg
jmp
icebp
adcl
dec
add
add
sbb
jb
xor
test
jne
jnp
aad
pop
bnd
mov
gs
ss
sahf
pop
dec
lock
mov
cmpsl
xchg
bound
rolb
jge
sarb
mov
mov
xor
scas
adc
mov
test
mov
mov
mov
xchg
or
ror
ss
lods
xchg
aaa
add
in
jmp
cmpsl
add
inc
pop
fcmovne
aam
xor
adc
out
or
fstpt
push
sub
out
mov
add
insb
lcall
push
cld
inc
aam
ljmp
mov
jnp
xor
jle
repnz
add
shl
mov
mov
popf
repz
dec
pop
sub
sub
push
inc
insb
push
test
movsl
repz
ss
sbb
adc
popf
int
xchg
popf
out
jecxz
ja
sub
sbb
xor
push
xchg
rcrl
fistpl
imul
push
or
inc
inc
inc
repz
cmp
mov
sub
adc
jb
inc
inc
push
insb
sbb
inc
icebp
insb
flds
or
insb
lret
movsb
sti
cmp
pop
adc
pop
adc
jae
bound
fldcw
clc
mov
cltd
sub
mov
les
cmpsl
cli
push
popf
fidivs
xchg
mov
sbb
mov
adc
je
nop
push
adc
iret
movsb
pop
jne
push
scas
sahf
jmp
ss
imul
jmp
sbb
fnstsw
inc
leave
or
fs
dec
lds
xor
push
lods
sbb
jns
pop
testl
add
test
sub
sbb
test
and
jp
sbb
cli
aam
push
out
mov
imul
jb
or
or
fwait
xlat
fsub
fsub
pop
mov
fs
cmp
xchg
and
into
iret
cmpsb
pop
xor
lock
lock
and
aad
aaa
sbb
cmp
jecxz
leave
cmpsl
dec
jg
mov
mov
fcmovbe
pop
inc
xor
mov
rol
sub
fsts
xchg
xor
pop
mulps
cwtl
and
aad
jge
mov
popa
xlat
pusha
call
in
jae
add
test
lds
ss
push
hlt
xchg
adc
jmp
xchg
dec
mov
sub
or
dec
add
cltd
push
or
ret
les
lods
push
push
bound
inc
xlat
mov
pop
pop
imul
lcall
push
and
outsb
ja
mov
enter
sarb
and
xchg
mov
psubw
js
inc
push
jne
cmp
cmc
shlb
adc
insb
cld
adc
or
imulb
sub
sub
test
inc
xchg
in
imul
inc
add
pop
fstl
cmp
xor
and
inc
clc
bts
loopne
and
lds
movsl
cltd
jne
in
sti
aas
sbb
rorb
imul
push
rcrb
lret
les
ror
adc
adc
cmpsb
sti
clc
call
xchg
repnz
and
rorl
scas
in
enter
cmpb
mov
xchg
sub
movsb
inc
mov
xlat
cmc
dec
sub
movsl
dec
mov
call
shrb
inc
sub
push
lahf
inc
mov
ja
pop
ss
push
outsl
and
call
idivb
jo
dec
loope
mov
mov
xor
stos
jge
mull
push
popf
adc
repz
mov
mov
dec
mov
pop
imul
in
adc
loop
loop
sbb
jns
push
outsb
ficomps
push
loop
outsb
inc
lods
ljmp
mov
arpl
add
dec
jge
jle
in
adc
addr16
cmpsl
loopne
call
xor
mov
adc
cmp
adc
add
add
inc
out
cmp
jecxz
push
mov
sub
aaa
enter
repnz
sti
rcl
outsl
test
sarb
jl
fnstsw
in
into
xchg
repz
cwtl
cmp
test
cmp
outsb
jg
and
push
cmp
mov
push
bound
adc
mov
fnstcw
xor
std
or
sbb
fidivl
xchg
in
jo
movsb
mov
push
mov
xchg
jmp
insl
mov
leave
popf
inc
adc
lcall
lcall
dec
or
or
inc
add
fisubrl
xlat
jmp
dec
imul
pop
or
cld
jbe
jne
and
in
pop
jle
adc
setb
scas
cmp
popa
mov
mov
loopne
pop
mov
lret
cmp
xlat
dec
jmp
fadd
addr16
mov
sbb
dec
sub
lahf
and
pusha
andb
push
add
sbb
add
fwait
jae
mov
push
scas
cli
test
push
loop
pop
add
jae
adc
jae
pop
cmc
adc
jo
popa
lods
dec
dec
adc
add
push
xor
ja
repnz
rcr
pop
jp
jae
movsb
jno
add
xor
push
push
push
push
addr16
popa
xchg
or
mov
int
adc
enter
loopne
xchg
lea
shll
sbb
jbe
dec
enter
jmp
outsl
addb
xlat
jle
lock
inc
sub
mov
popf
mov
fistps
dec
mov
in
dec
pop
loope
sub
fsubl
lret
add
pop
xchg
inc
idiv
fcomi
fstpl
cwtl
lods
pop
xor
repz
mov
jge
shrl
enter
into
push
or
fisubs
or
sub
mov
movsl
arpl
out
int3
xor
push
das
js
shll
test
imul
xor
ds
dec
mov
ss
cmp
pop
scas
xor
cltd
sarl
inc
andb
test
mov
stos
sub
call
insl
lods
mov
in
mov
inc
jo
int3
pushf
out
dec
ror
inc
fwait
push
mov
ja
mov
xor
cmp
inc
xor
push
xor
cmp
xlat
sbb
cmp
jae
mov
sub
pop
inc
imul
or
lcall
pop
dec
jecxz
andb
int3
push
sahf
and
loopne
sbb
jno
xchg
movsb
cmp
pop
adc
dec
push
mov
inc
xchg
shrl
outsl
xchg
sbb
and
mov
adc
bound
mov
stc
je
lods
sub
mov
sbb
cltd
inc
sbb
push
inc
jg
jmp
sahf
pop
add
cld
push
fucomip
sub
mov
sbb
nop
inc
push
pop
idiv
test
dec
loop
xlat
pop
mov
shlb
add
mov
push
stc
repnz
rcrl
jb
rol
mov
orl
jne
pop
subps
addr16
xchg
int3
mov
mov
jle
loopne
xchg
jle
dec
mov
mov
into
jg
mov
xchg
insl
mov
outsl
fdivrl
mov
jmp
mull
incl
and
cmpsb
or
sub
test
and
or
imul
addr16
inc
sub
mov
popa
adc
aas
push
repz
sub
les
aaa
sbb
mov
mov
mov
incl
dec
mov
or
dec
gs
cmpsb
or
jbe
mov
insb
inc
cld
sbb
sub
sbb
inc
jne
and
jns
fdivrl
sub
xor
mov
loopne
rol
movsb
add
lods
push
aaa
cwtl
mov
data16
mov
push
add
sbb
mov
or
scas
shlb
fst
lods
pop
pop
mov
cmp
xor
xor
jns
aaa
out
mov
imul
insb
jno
xchg
cli
mov
outsb
popl
mov
lods
repnz
adc
enter
fs
xor
ljmp
dec
xor
mov
inc
shlb
call
addl
mov
pop
iret
fdiv
stos
dec
xor
or
mov
rcl
sub
push
pop
sub
mov
adc
out
ret
bound
jmp
xlat
and
adc
shlb
adc
fbld
icebp
cld
inc
insb
cltd
xor
pusha
fidivrl
fimull
pushf
loope
loop
out
pop
je
push
push
shll
inc
out
mov
fstpl
jl
call
adc
cmp
ret
andb
idiv
lods
jle
mov
pop
sbb
in
test
jbe
stc
push
fimuls
pusha
mov
out
rorb
dec
xchg
fmull
jg
pushl
xchg
xchg
mov
push
dec
add
outsl
dec
and
mov
xchg
xchg
ret
scas
push
test
mov
mov
push
xor
xchg
inc
fistl
shlb
pop
pop
xchg
lods
in
xchg
add
sub
shlb
xchg
jnp
mov
mov
mov
test
push
ret
pop
mov
repnz
xchg
sahf
out
iret
scas
ret
mov
aad
cli
roll
fs
shrl
ds
cmp
mov
push
mov
jle
inc
cs
mov
icebp
addl
fcom
adc
jb
mov
or
mov
movsl
inc
mov
test
je
sbb
cmp
test
stos
pop
adc
add
in
inc
sbb
xchg
int
lea
or
clc
pop
sub
xlat
jnp
arpl
push
addb
es
sbb
ljmp
sbb
lea
add
clc
xor
mov
xor
insl
jb
fiadds
or
gs
ss
sub
fidivl
ja
call
jge
jae
test
lcall
cmc
sbb
ds
mov
out
jnp
adc
call
or
leave
lods
push
data16
push
adc
lcall
or
cmpsl
stc
test
or
fwait
pop
fwait
inc
and
mov
jle
in
mov
stc
test
jbe
jmp
mov
lds
dec
jge
cld
movsl
jnp
aad
push
lods
cmp
ss
sub
mov
add
aad
testl
push
je
gs
scas
lock
mov
cmp
call
je
inc
push
std
je
jbe
shlb
cmpl
aad
or
jmp
int
xchg
sub
test
jnp
dec
jnp
xchg
cld
cmpl
xor
loope
push
push
lods
or
push
jp
hlt
sub
or
push
pushw
xchg
xlat
lret
adc
in
popa
call
enter
xchg
pop
aam
xchg
ret
addr16
daa
push
sahf
ja
ss
int
cmpsb
pop
rcl
cmp
pop
add
in
pop
cmp
mov
xchg
xchg
sbb
add
add
hlt
mov
sbb
mov
push
xchg
dec
and
fstpt
sbb
add
jl
mov
dec
insb
inc
xchg
add
push
and
and
mov
icebp
dec
pop
rcll
lock
jbe
in
jecxz
sub
ret
cs
cmp
cmp
sub
cmp
or
mov
shll
mov
into
cmpsl
imul
xor
pop
jb
sbb
test
or
jno
sub
aam
mov
pop
hlt
dec
fdivrs
inc
enter
les
mov
es
and
xchg
das
cmp
out
push
sahf
xchg
cmpb
imul
and
mov
fisubrs
mov
push
adc
mov
lahf
push
and
ret
sub
mov
cmpsl
cmc
mov
xchg
sti
sub
xchg
lret
cmp
icebp
mov
nop
in
ret
addr16
push
xchg
jae
xor
aad
movsb
lcall
nop
pop
jle
pushl
inc
out
xlat
sbb
lock
and
mov
and
jne
jns
dec
xchg
ret
fmulp
rorl
xor
mov
je
fcoml
jmp
jnp
aad
pop
data16
ljmp
mov
popa
inc
push
loop
mov
mov
sahf
stc
ret
decb
xlat
mov
pusha
test
pop
mov
pop
mov
add
pop
inc
sub
sub
push
popf
dec
sub
lock
out
and
arpl
outsl
sbb
movsl
push
jle
push
add
mov
jp
cmp
xor
xchg
sbb
fstpl
inc
out
jg
int3
cmp
into
or
sbb
outsl
call
aam
fwait
pop
repnz
dec
push
xor
dec
xchg
pop
insb
jmp
xchg
xchg
enter
fdiv
push
dec
or
js
mov
inc
and
xchg
lret
mov
push
lods
mov
loopne
scas
dec
lahf
add
outsl
xchg
je
xchg
loop
sbb
pop
add
out
adc
cmp
movsb
fcoms
dec
mov
inc
jg
rorl
mov
xlat
push
jne
mov
pusha
enter
add
jecxz
insl
mov
jne
adc
shr
jmp
pop
dec
lds
pop
sbb
pop
push
testl
xchg
fistl
ror
sbb
mov
orl
ficomps
clc
pop
push
bound
das
inc
dec
stos
aas
add
jp
iret
jp
and
repnz
fwait
out
mov
lcall
xchg
sub
and
jo
sbb
subl
dec
lahf
xorl
sbb
out
mov
push
pop
push
fnsave
fstps
fucom
sub
jno
xor
jb
adc
insb
mov
or
daa
adc
fstl
ljmp
fst
test
cmpsl
in
les
ret
bound
test
xchg
aas
dec
xchg
repz
rolb
enter
sub
xchg
and
rorb
std
stos
xchg
pop
cmc
icebp
fdivl
shr
sbb
or
int
push
andl
jno
loop
xor
sti
jno
iret
adc
sbb
cmc
out
mov
xchg
int
fiadds
jecxz
push
sarb
mov
pop
mov
xchg
out
cwtl
bound
jb
sarl
add
dec
out
pop
mov
repnz
push
cld
pop
pusha
data16
shll
cli
adc
mov
in
xchg
adc
adc
jnp
adc
gs
fxam
in
mov
test
in
push
xor
dec
inc
in
dec
sub
inc
jbe
rcrb
fsubr
sbbb
or
or
fisubrl
add
out
cmp
adc
mov
jo
aaa
call
push
inc
add
in
aad
push
je
imul
and
xor
rclb
fwait
loope
fcompl
jp
mov
jmp
mov
rcrb
adc
sbb
jle
idiv
stc
push
mov
mov
inc
xor
jb
jge
ss
dec
aam
jnp
sbb
mov
push
xchg
add
push
add
fcom
xlat
testl
movsl
aad
dec
js
cmc
test
fidivs
adc
mov
mov
nop
mov
inc
mov
or
and
mov
xchg
loopne
in
mov
adc
gs
mov
add
mov
inc
aad
testb
mov
jbe
inc
pop
mov
mov
sbb
or
shlb
adc
in
movsl
or
repnz
repnz
push
pop
nop
ret
add
cli
sub
push
jbe
test
fcomps
mov
push
dec
xchg
shll
adc
negb
fists
sahf
dec
add
fs
xchg
sub
arpl
adc
loop
stos
stc
ja
xlat
imul
in
ljmp
and
dec
sub
lahf
in
inc
je
das
pop
adc
mov
mov
pop
lret
sbb
push
sub
xchg
cmp
insb
test
pop
stos
push
cmp
divb
xchg
adc
push
loope
cltd
sarb
mov
daa
mov
inc
inc
inc
adc
cs
outsl
iret
rorb
dec
fmull
pop
fwait
pop
xor
cmp
push
imul
lret
icebp
cld
jecxz
test
mov
dec
xchg
push
jne
xor
pop
mov
mov
pop
iret
jbe
mov
movsb
fisttpll
ror
rcrl
inc
mov
mov
xlat
xorl
shll
pop
jbe
test
sub
sahf
mov
mov
xor
sbb
test
xchg
pop
pop
or
fsts
fnstcw
imul
pop
outsb
rol
imulb
fdivrl
pop
cmp
mov
adc
cmpsl
mov
clts
arpl
xchg
add
daa
adc
dec
xchg
and
mov
rcrb
lock
mov
cli
insl
cmp
mov
pop
xchg
xor
mov
cltd
cmpsl
jns
inc
mov
jnp
pop
outsb
aaa
mov
sbb
or
fiadds
test
jbe
add
or
xorl
inc
sub
mov
xchg
push
xor
xor
mov
loop
lods
pop
shr
mov
dec
dec
sbb
in
push
push
mov
lods
push
mov
scas
fwait
repz
lret
jnp
fsubr
pshufw
pop
push
cmp
mov
inc
lret
enter
jl
mov
pop
cmp
push
add
add
imul
hlt
inc
and
cwtl
add
sarb
push
inc
pop
add
fcompl
imul
jle
rcl
aas
popa
sub
xchg
cmp
pop
jle
xchg
fidivs
cli
repz
jo
cld
mov
and
pushf
mov
pop
addl
dec
lods
or
pop
mov
lock
mov
add
setb
les
loopne
and
test
stc
dec
aam
xchg
mov
add
jmp
lahf
xor
cmp
iret
sub
and
xchg
imul
rolb
mov
mov
jg
xor
and
xor
or
or
xchg
js
pop
sbb
outsb
mov
cmp
add
test
cs
cmp
inc
fisttpll
pop
pop
enter
mov
imul
sbb
mov
mov
xor
popf
xor
sarb
xchg
pop
stos
xchg
adc
insb
mov
jo
fdivl
xchg
and
jmp
add
jmp
mov
pop
cmp
rolb
clc
jecxz
movb
insl
aaa
push
fsubl
test
push
pop
roll
sbb
push
pushf
fs
mov
jp
dec
cwtl
adc
icebp
cmp
push
lret
call
or
cmp
pop
mov
dec
adc
cli
sub
sbb
lods
shrl
jno
pop
fs
cmpsl
jo
mov
lds
push
dec
jle
xor
mov
mov
imul
sbb
cmpsl
scas
cld
push
movl
push
mov
or
test
insb
sti
arpl
ret
mov
ljmp
xor
fisttpl
dec
cmpsb
pop
divl
mov
and
mov
inc
daa
jmp
aas
je
dec
dec
aad
push
cmpsb
mov
sub
filds
mov
shrb
push
adc
adc
test
movsl
sarl
sbb
jb
adc
in
inc
les
mov
mov
inc
sbb
das
std
inc
lahf
fnstcw
sbb
scas
dec
pop
pushf
mov
test
sub
je
dec
in
and
xchg
dec
sub
inc
xor
out
aam
cmpsl
mov
push
lcall
push
pop
fdivrs
mov
loope
dec
mov
in
xor
ret
lds
icebp
out
ret
testl
and
push
mov
or
pop
or
ss
nop
popl
pushf
inc
iret
jae
inc
notl
arpl
jb
imul
scas
dec
mov
clc
push
dec
fcomps
push
pop
jecxz
cmp
in
iret
xchg
ja
repnz
cmp
das
mov
dec
frstor
or
xchg
xchg
push
xor
adc
jo
leave
imul
icebp
mov
jmp
cld
push
mov
adc
cmp
cli
and
shll
mov
push
mov
adc
lea
cmc
or
adc
clc
sbb
mov
out
sub
push
aaa
inc
popa
mov
imul
inc
fsubrl
repnz
xor
fsubrl
ljmp
xchg
enter
sub
inc
or
mov
cmp
movsl
add
mov
incl
int3
addb
popa
jmp
insb
mov
test
fmul
std
or
sbb
add
xchg
aad
add
dec
jl
dec
xchg
mov
add
andl
push
xchg
stos
cwtl
es
addr16
dec
add
adc
and
lret
ret
pop
dec
pushf
inc
cltd
cmpsl
cmpsl
sub
rcrl
cmp
mov
scas
jmp
cmpsb
jecxz
es
lret
in
insl
adc
pop
ja
scas
out
or
dec
es
lahf
stos
sub
lret
enter
xchg
enter
daa
add
adc
in
push
sub
sbb
fidivrs
out
inc
xchg
cmp
lret
xchg
pushl
loopne
mov
xchg
xchg
int
mov
addl
jnp
adc
shl
inc
xor
in
xor
fcoms
mov
fcomps
enter
xor
in
cmp
dec
jmp
pusha
mov
sub
shll
hlt
sub
out
fildl
or
xor
dec
xchg
cwtl
setnp
xchg
sub
fsubs
movl
stc
sbb
cmpb
jne
mov
inc
int
xchg
sub
add
push
and
clc
fmuls
inc
lds
orl
sub
inc
pop
sti
popa
fsubrp
bound
fistpl
dec
lods
jb
les
sbb
bound
inc
jecxz
add
scas
xor
pushf
mov
sub
jno
jne
or
cmp
sbb
stos
lahf
scas
insl
scas
adc
and
mov
push
jo
fistpl
lret
dec
mov
add
subb
jl
popa
add
nop
pop
ds
aas
inc
lock
mov
pop
lds
and
pop
sahf
pop
movsl
and
fwait
cltd
fstl
add
mov
push
pop
xor
int
dec
sub
int
mul
adc
movsb
je
push
lret
out
xchg
cld
and
lock
inc
pusha
scas
mov
divl
ss
loop
lea
cwtl
pop
fidivrl
pop
mov
pop
and
int3
dec
outsb
cmp
xchg
mov
cld
aaa
sbb
fsqrt
mov
cmpsb
inc
and
leave
sahf
sub
dec
in
clc
shrb
push
fwait
jno
loope
enter
mov
ss
enter
xchg
les
inc
sbb
repz
push
adc
push
jno
fidivrs
enter
and
pop
test
push
xor
ds
lcall
ds
xor
jl
shlb
or
test
lcall
inc
popf
out
les
push
sti
cmpsb
loopne
or
pop
rol
scas
test
lret
and
sub
out
aad
pop
lahf
dec
add
cmpsb
shl
xchg
repnz
test
jno
pop
mov
sti
shlb
stos
bound
sbb
fdiv
into
cmc
jp
add
add
scas
and
xchg
mov
ret
add
mov
std
stos
rorl
ss
inc
dec
iret
bound
adc
movsl
pop
inc
stc
mov
andl
test
xchg
mov
and
mov
rcrl
stos
push
xchg
jae
fwait
add
hlt
sbb
jne
sbb
inc
sub
cmc
das
outsb
jl
insb
dec
bound
inc
dec
cmp
pop
addl
mov
movsb
jl
movsl
in
inc
cltd
mov
jbe
push
cmp
vpcmpeqw
dec
test
sbbl
dec
xchg
mov
xlat
pop
pop
cli
clc
pop
sbb
lea
sbb
cs
xor
ret
dec
jmp
outsl
pop
and
jecxz
clc
add
add
push
and
in
xor
leave
xchg
dec
mov
mov
mov
ficomps
pop
sbb
sbb
imul
jae
cmc
mov
mov
pop
adc
add
dec
add
addr16
call
pop
or
ss
pop
add
mov
je
test
mov
mov
aaa
fs
notb
adc
or
stos
nop
inc
mov
and
cmp
cmp
pop
mov
jge
leave
cltd
lret
movsb
jl
pop
sbb
sub
sbb
jb
xchg
pop
pop
sub
int
enter
mov
mov
dec
dec
pop
push
ja
lods
idivb
or
inc
icebp
lret
mov
push
and
jbe
scas
add
movsl
dec
arpl
sub
das
std
pop
and
cli
jb
adc
sbb
iret
cmp
stos
cwtl
sub
adc
add
or
mov
gs
mov
xchg
mov
mov
push
clc
fsts
addb
movsl
arpl
and
int3
in
inc
mov
pop
or
aas
cltd
aaa
xchg
leave
pushf
cmpsb
orb
int3
scas
popa
xlat
stos
cmpsb
adc
jne
jmp
fsubrs
outsl
or
mov
push
xchg
inc
pop
cld
das
cmpsl
fs
xor
into
pop
in
stc
mov
int
stos
xchg
nop
lock
lahf
cmp
jo
cs
push
je
cmp
mov
or
adc
cmp
repnz
mov
ret
mov
lods
repnz
adc
push
xor
sbb
div
cmp
adc
cmpl
jmp
cmp
ror
push
cmp
cmpsb
std
aas
sbb
fwait
repz
mov
fs
popa
loopne
ret
pop
xor
int
outsl
rcrl
sub
lods
insl
cmp
sub
nop
mov
arpl
mov
cmpsl
and
ficoml
and
adc
lods
shrb
pop
add
lcall
push
sbb
dec
dec
push
mov
sbb
push
jne
inc
shlb
cs
push
cmp
imul
orl
cmc
popf
adc
xchg
aam
push
inc
pop
pop
mov
xchg
enter
lahf
xchg
jl
inc
inc
arpl
or
cmp
insl
cmc
and
dec
out
xchg
add
test
lods
aaa
mov
push
lret
dec
and
out
data16
aam
xchg
jns
int
inc
dec
out
sbb
testb
es
jl
idivl
fnsave
hlt
rcll
adc
cmc
dec
xchg
outsl
sbb
loop
sub
sbb
enter
fildl
js
loope
pop
jo
mov
sub
imul
bound
sub
push
pop
sbbl
xchg
sarl
mov
mov
das
or
push
arpl
sub
repnz
shl
fsubrs
in
sub
xor
xor
adc
push
cwtl
jp
roll
push
add
mov
in
ret
test
mov
pop
mov
cmc
cs
cltd
or
sbb
popf
mov
adc
je
lock
imul
lods
shlb
call
clc
rolb
mov
xchg
imul
in
sub
xchg
lock
cmpl
jp
imul
dec
mov
push
jne
out
insl
sub
fs
pushl
not
rorb
push
test
stos
fidivl
out
lods
lods
lea
call
cld
mov
mov
in
in
in
sbb
adc
cli
fcoms
push
clc
and
add
clc
and
push
mov
push
ret
scas
sbb
adc
cs
mov
adc
inc
test
xor
jb
into
clc
mov
and
int3
inc
ja
je
jae
push
ret
scas
loopne
loop
ss
les
popa
outsb
fidivl
adc
repz
xchg
adc
movsl
sbb
adc
or
outsl
pop
mov
in
or
stos
adc
stos
ret
dec
enter
jecxz
inc
cmp
mov
imul
insb
jae
ds
popa
jl
insb
fidivrl
or
jno
sbb
xlat
xor
fwait
dec
fmull
push
outsl
pusha
subl
xor
pop
jae
cmp
or
cltd
popf
fidivrs
adc
push
sbb
sub
mov
mov
ret
xor
sub
jg
and
push
inc
jecxz
dec
inc
pop
aam
pop
pop
jmp
xor
and
imul
push
xchg
push
sub
popa
stos
loopne
or
mov
data16
out
iret
scas
cmp
xor
out
negl
mov
add
sbbl
imul
insb
xchg
cmp
jns
ss
ficoml
dec
ss
dec
arpl
das
mov
scas
and
xlat
dec
addr16
push
lock
adc
or
pop
scas
popf
lds
fwait
icebp
or
sahf
mov
ss
ljmp
in
sbb
out
mov
lahf
or
add
into
xchg
out
fimuls
das
out
jo
std
addr16
jo
arpl
sarb
jno
lods
sub
lods
outsl
add
sbb
inc
fadds
inc
movsb
inc
sub
mov
add
iret
push
adc
daa
mov
lods
or
jmp
repz
mov
loope
push
data16
fistps
sub
pushf
or
pop
push
rcrl
mov
adc
pop
popf
in
mov
pop
dec
mov
jp
hlt
xchg
rol
lret
aas
call
add
or
mov
sub
inc
call
jmp
pusha
adc
stc
arpl
loope
mov
lret
out
add
and
mov
lds
dec
mov
jne
incl
call
bound
scas
jno
pop
push
testb
inc
mov
shlb
mov
adc
or
fisubrs
icebp
sbb
jle
pop
add
add
mov
cmpb
or
test
fcmovne
shl
loop
dec
and
fbld
loop
or
jns,pn
pusha
fdecstp
lea
push
push
lret
aad
jo
mov
lock
push
test
mov
test
add
add
sbb
pop
mov
lods
mov
std
xchg
xor
push
xor
cmp
jecxz
sahf
push
out
aas
pop
out
shlb
sbbb
adc
sbb
jg
insb
les
fiadds
pop
add
call
cli
mov
dec
imul
cmpsb
sub
aaa
sbb
cld
fstl
cmp
imul
es
push
or
jp
aas
add
out
imul
jecxz
fs
insb
setle
inc
xchg
andb
aam
roll
xchg
adc
push
mov
loope
adc
push
push
movsb
xlat
lret
pop
add
cli
insl
fyl2xp1
outsb
or
xor
aas
mov
dec
stc
pop
push
xlat
mov
xor
xor
mov
push
xchg
xor
insl
jns
mov
sub
jl
daa
repnz
popf
daa
loope
jmp
push
test
push
pop
and
fsubr
rorb
dec
mov
inc
test
fstpt
dec
mov
and
jge
push
push
add
xor
or
mov
rcl
ficompl
loop
mov
js
adc
and
jle
lock
cmp
xchg
es
ja
mov
icebp
shlb
rcll
stos
lcall
xor
and
je
jbe
roll
adc
out
js
add
cmpsl
scas
repnz
sbb
int3
daa
mov
lcall
cmp
test
loopne
ljmp
sub
mov
fs
lods
or
lea
inc
in
sbb
add
push
jle
fnstenv
fisubs
fxch
xor
adc
stos
xchg
or
mov
mov
adc
inc
xor
mov
subl
adc
in
shrl
push
fldt
in
inc
dec
xchg
sub
push
or
sbb
mov
pop
xlat
mov
jmp
jl
push
ds
mov
orb
lea
dec
aaa
and
mov
incl
shlb
arpl
mov
aad
push
and
in
lock
dec
mov
testl
call
iret
xchg
and
pop
add
add
sahf
ja
or
cmp
jmp
pop
enter
imul
aaa
lret
js
pop
or
lods
fdivs
lock
stos
dec
lret
xchg
mov
or
cmp
aas
icebp
jg
nop
pop
sub
adc
jecxz
push
mov
out
xor
in
mov
pop
adc
push
aad
dec
mov
sbb
sub
or
mov
add
cmp
xor
orl
out
sahf
fxch
es
push
xor
jmp
inc
sub
jbe
mov
xchg
fcmovnb
int
hlt
daa
in
xlat
subb
fcompl
ds
mov
ret
and
sbb
jle
sarl
insb
push
movsb
sub
and
in
mov
test
inc
cmp
ss
adc
mov
dec
mov
jb
xchg
stos
stos
push
pop
mov
push
clc
mov
fcompl
sub
add
sbb
mov
scas
or
ret
out
shl
and
adc
cmp
or
mov
adc
fwait
jne
ret
test
push
sbb
pop
mov
ljmp
shr
dec
sbb
in
cmp
jo
jns
inc
lcall
sub
or
inc
mov
and
divl
sbb
addr16
adc
out
jb
inc
test
clc
xchg
mov
call
add
xchg
xor
data16
popf
outsb
lea
in
enter
mov
inc
or
loopne
mov
pusha
insb
out
or
das
jge
cmp
in
cmp
outsl
aaa
out
jno
movsl
jmp
imul
jp
sti
pop
and
aaa
push
adc
ljmp
and
loope
jo
stos
mov
enter
mov
xor
mov
dec
lcall
jmp
jae
je
cmp
fwait
repz
shlb
mov
push
pusha
sbb
faddl
cmp
push
mov
sbb
mov
adc
xchg
jb
mov
and
loop
outsl
aas
cltd
dec
add
int
add
push
in
or
or
fwait
jle
lahf
and
test
mov
mov
out
andb
pop
aad
addr16
adc
ficoms
mov
icebp
je
mov
aad
mov
add
pop
in
sbb
or
mov
mov
imul
or
push
or
mov
mov
xchg
sbbl
cmp
lods
std
mov
mov
add
or
int3
mov
outsl
fmulp
xlat
and
inc
test
or
int3
outsl
and
adc
sub
in
and
push
xor
addr16
test
dec
jl
inc
test
add
mov
addr16
je
mov
adc
adc
sti
adc
adc
xor
test
jle
sbb
jo
jno
jp
inc
lahf
xchg
mov
movsb
sub
in
inc
push
and
aam
fistl
mov
stos
les
sbb
popf
mov
and
or
mov
in
scas
mov
xor
push
hlt
mov
mov
dec
pop
aaa
adc
stos
xorb
inc
testb
stos
add
cmpsl
mov
and
cmc
sbb
imull
daa
add
pushf
push
xchg
hlt
add
push
or
jne
mov
ds
mov
mov
stos
arpl
insb
dec
push
sti
mov
dec
mov
jbe
in
mov
pop
addr16
or
cmp
jecxz
pop
jge
shlb
outsl
push
cmp
mov
enter
push
jg
je
pop
pop
sbb
stc
enter
mov
imul
inc
sbb
or
pop
lock
cmp
mov
pop
leave
out
xchg
inc
out
cmp
daa
pop
stos
stc
mov
pop
pop
inc
fwait
adc
into
fisttps
fwait
inc
mov
xchg
mov
xor
sub
pop
and
fisttpll
add
lahf
mov
insb
jp
loop
push
cmpsl
push
mov
fstps
mov
addr16
or
call
mov
or
cmpsl
orb
xlat
add
ss
aam
imul
cmpsl
dec
add
pop
in
jne
fwait
inc
popa
mov
jo
enter
sub
icebp
call
xchg
sbb
jl
repz
nop
and
add
loop
pusha
add
jge
pop
and
cmp
jl
push
and
ds
sarb
pop
rep
jmp
xchg
pusha
mov
jle
add
mov
xchg
sub
cli
jo
mov
pop
sbb
jno
xchg
adc
imul
mov
inc
lret
inc
jl
movsb
movsl
mov
aam
or
jnp
ror
push
test
std
cmp
lret
and
dec
mov
fisttpll
pusha
or
push
pop
in
dec
cli
xchg
lcall
pop
mov
jle
inc
pop
sub
jns
and
lret
divb
mov
pop
repnz
xchg
mov
out
mov
dec
adc
sub
pop
cmovnp
fbld
xor
movsl
test
inc
jne
xchg
and
mov
pop
sbbl
leave
cmpsl
jb
or
imul
sbb
adc
mov
and
adc
or
sbb
and
int
jecxz
pop
fsubrp
inc
test
push
ret
xlat
mull
ds
push
lcall
fnstsw
aaa
push
mov
mov
jnp
ja
push
sub
fiaddl
inc
dec
mov
fstpl
rcll
mov
mov
test
mov
movsb
mov
aam
mov
add
and
mov
or
mov
mov
ficompl
pop
push
mov
push
or
insl
jno
inc
xchg
fsubr
push
pop
aaa
pusha
dec
ret
mov
cmp
clc
adc
shll
mov
adc
jns
pop
xchg
fwait
dec
out
mov
mov
and
dec
aas
testb
imulb
jge
imul
gs
std
dec
ficompl
js
push
cmc
repz
addr16
sbb
aam
mov
lock
scas
sbb
mov
pop
inc
pushf
jbe
mov
dec
rolb
out
leave
je
jmp
je
stos
outsb
insb
in
nop
dec
and
aad
in
push
cmp
or
call
and
fwait
mov
push
add
mov
push
repz
mov
lock
cmp
cwtl
sub
pop
push
mov
jns
sahf
add
and
pop
jl
cmp
addr16
insb
insl
dec
nop
jecxz
adc
roll
shl
pop
stos
push
cs
fcoms
test
pop
ljmp
test
repnz
mov
jge
pop
aas
cmp
add
mov
pop
mov
mov
ljmp
or
cli
jno
lods
inc
shl
test
pop
lds
push
aas
out
ficomps
es
out
push
dec
dec
fcmovnbe
sub
add
movsb
hlt
pop
or
mov
jp
call
push
lcall
icebp
pop
arpl
fs
cmp
repnz
sbbl
sar
outsb
repz
aam
ss
movsb
jne
outsb
test
inc
aad
add
nop
adc
or
push
cli
insb
out
push
icebp
push
test
adc
lock
sub
fildll
xchg
and
in
sahf
mov
in
pop
ret
sub
sbb
call
lcall
sub
jecxz
add
or
push
repnz
daa
push
sub
js
in
in
cmpsb
mov
stos
pop
idivl
pop
push
mov
int
mov
push
adc
mov
sbb
cli
fcmovb
imul
lock
sti
mov
jge
pusha
pop
jae
bswap
xchg
mov
mov
xchg
add
or
out
pop
or
xor
scas
mov
fcmove
lcall
stos
sbb
movl
jg
adc
div
mov
cli
cmp
prefetchwt1
push
adc
pusha
rorl
call
and
or
mov
add
rcl
out
and
mov
inc
adc
sbbl
push
cli
dec
push
cltd
lods
sbb
cmp
or
push
sub
test
inc
inc
cmp
fldl
sub
mov
ret
inc
inc
out
jmp
lds
xchg
mov
xchg
cmpsl
gs
pop
adc
in
lret
mov
jge
push
pop
sbb
mov
xor
test
addr16
notb
xor
push
mov
or
pop
sbb
enter
lods
loop
aad
fwait
int3
cltd
pushf
push
arpl
int3
pop
psllw
fcmovnbe
stos
pmullw
push
jno
cmc
mov
lahf
inc
mov
sti
bound
or
pusha
shll
orl
notl
and
leave
xor
imul
repz
icebp
jg
lods
and
xchg
jl
insl
xchg
int3
jo
pushf
mov
push
dec
xchg
xor
jp
and
jbe
fildll
inc
ret
mov
fidivrs
cmc
and
scas
xchg
ss
mov
dec
cmp
test
jmp
dec
xor
ljmp
xchg
fidivl
mov
test
mov
popf
ret
mov
mov
sbb
cld
mov
xorl
popa
fisubrl
adc
fistl
jne
imul
lock
or
mov
fnstenv
movl
out
cmp
xor
mov
xor
into
gs
lret
gs
in
enter
add
cmp
inc
sbb
xor
pushl
push
and
fstpl
sbb
or
icebp
pop
sti
push
adc
mov
mov
outsl
push
gs
cltd
lea
sub
in
loope
and
mov
jno
sub
push
test
data16
pop
dec
inc
push
sbb
popa
ja
push
addr16
fucomip
xor
xor
inc
faddl
sahf
mov
loopne
pushf
mov
lea
add
ss
or
rorb
pop
pop
mov
push
mov
inc
int
mov
mov
dec
sti
notl
loopne
call
popa
lds
lahf
adc
sub
jecxz
dec
into
fstps
xor
mov
mov
inc
fnstcw
int
ficoml
dec
out
xchg
ret
mov
fstps
das
push
lods
jb
negl
sub
fs
lret
in
jg
out
jnp
xchg
insb
adc
adc
aas
mov
jae
push
dec
inc
stos
pusha
pop
jne
cmp
arpl
and
mov
negb
gs
test
out
adc
aam
xor
test
adc
pop
adc
lods
adc
sahf
and
and
dec
mov
xchg
or
mov
loope
mov
repz
pop
insb
mov
lret
outsl
mov
or
insb
lret
out
in
adc
sti
push
pop
jg
jno
and
cmp
xchg
jp
shlb
mov
xchg
mov
pop
cmp
inc
aaa
repnz
adc
leave
or
sub
iret
pop
das
inc
cmpsb
push
jge
xchg
xchg
and
fcmovnb
sbb
jnp
fdivl
push
add
pop
cld
test
fnstcw
lds
lahf
dec
leave
test
pusha
scas
dec
ds
xor
add
xor
popl
sahf
out
test
fmuls
mov
adc
insl
out
ret
rorl
push
sub
jecxz
repz
int3
xchg
int
das
insl
xor
lods
aas
cmpsb
ret
addps
add
pop
lcall
sbb
xor
unpcklps
xor
xchg
pop
mov
sub
into
jle
jecxz
hlt
leave
into
leave
push
xlat
inc
mov
jae
test
imul
scas
int
sbb
out
xor
xchg
dec
insl
adc
daa
lret
add
jne
call
lcall
outsb
fmulp
mov
clc
rdtsc
pop
cmpsb
lcall
cs
xor
inc
mov
test
shll
ja
dec
mov
push
fdivl
cmc
add
pop
outsb
pop
pushf
movl
sbb
jns
cmc
jne
and
push
outsb
push
fstp
jb
cmc
es
mull
and
fcmovnbe
xor
les
push
mov
xor
out
xor
es
adc
mov
hlt
xor
jns
lret
ret
orl
lea
inc
repz
jg
jnp
out
add
daa
stos
clc
inc
cld
push
jno
mov
xchg
adc
mov
dec
frstor
xor
loope
sbb
xchg
jmp
dec
cltd
outsl
loopne
dec
lods
in
dec
lahf
cltd
je
xchg
movsb
xchg
sub
loope
insl
adc
test
mov
pop
cwtl
sbb
push
rcl
sub
out
cmp
pusha
jg
adc
ljmp
and
inc
pop
mov
mov
leave
jg
notb
ret
inc
sbb
sbb
out
pop
pop
cld
jl
dec
xlat
fisubrl
lret
and
dec
mov
xchg
sbb
adc
xor
jo
xchg
call
in
int
cmp
jmp
push
loopne
leave
scas
aad
push
sub
push
bound
mov
lock
jle
pusha
lcall
cmp
insb
mov
xchg
pop
in
jno
inc
sti
int
int3
fsubrs
cmpsl
pop
fadds
xchg
xchg
xor
fs
shlb
fwait
xchg
pop
fsubrl
stos
addl
jp
sub
xchg
mov
mov
adc
adc
lock
push
in
lret
jne
fstps
inc
mov
fbstp
inc
test
sbb
es
lcall
lea
jns
mov
inc
dec
call
iret
scas
or
std
mov
nop
fisttps
or
int3
imulb
dec
icebp
dec
fldcw
hlt
leave
sbb
push
jp
stc
lods
pavgw
adc
scas
cmp
cmp
das
mov
dec
push
push
xchg
scas
ss
and
mov
out
lahf
push
mov
xor
pop
sub
icebp
cmp
sbb
mov
fisubrl
jge
insb
xchg
mov
mov
xchg
arpl
hlt
mov
ljmp
outsl
call
jmp
inc
mov
sti
jns
cmp
das
daa
jb
sbb
dec
sbb
loop
mov
lock
scas
out
fnstcw
cwtl
cmp
loop
rolb
shrb
inc
repnz
repz
fcomps
imull
enter
inc
mov
push
hlt
lea
xchg
pop
std
cld
xor
ljmp
cmpsl
in
outsb
mov
add
pop
cmpsb
loope
adc
fwait
inc
sbb
shl
adcb
popf
loop
pop
pusha
dec
xor
dec
leave
shlb
xchg
xlat
jnp
insl
cmp
sub
aaa
in
or
aam
idivl
in
inc
xor
push
es
aaa
jae
mov
bound
setae
or
rcll
mov
and
pop
ja
inc
push
sbb
sub
out
jb
rcll
add
lods
mov
daa
test
pop
insl
imul
xor
push
iret
mov
push
or
push
sbb
aas
mov
mov
push
mov
pop
aaa
mov
gs
pop
mov
jo
int
sub
enter
xchg
cli
cli
push
add
inc
and
mov
icebp
pop
pop
xchg
into
mov
mov
stos
xor
lcall
xchg
out
pop
adc
call
cmp
xchg
xchg
xchg
lea
mov
aad
sub
sbb
pop
mov
daa
cwtl
sub
pop
jle
test
pop
and
mov
int3
jp
out
sub
and
mov
jb
aaa
popf
mov
inc
sbbl
outsl
xchg
outsb
into
dec
mov
or
in
pop
cmp
pop
outsl
dec
xlat
dec
jb
test
push
daa
bound
iret
and
inc
pop
mov
pusha
xorl
inc
fdivrs
outsb
test
stos
sbb
mov
cmp
cmc
in
cltd
js
cmp
out
ss
jnp
jecxz
movsl
arpl
cli
popf
int3
cmp
idivl
out
and
push
ja
push
call
push
addr16
adc
sti
inc
sahf
inc
scas
dec
and
jns
mov
cltd
pop
jp
loop
jg
mov
rcrb
adc
xchg
sysexit
xor
sbb
cmc
cmp
xlat
out
insl
mov
imul
add
jno
daa
sarl
aam
idivl
lods
popf
mov
pop
dec
ret
fiaddl
add
dec
data16
dec
call
pop
shl
inc
pop
jnp
mulb
aad
xchg
or
jo
lea
fwait
mov
lret
mov
ja
sti
lahf
out
cmp
dec
mov
pop
adc
cmp
adc
sbb
aam
cltd
mov
movsl
andl
dec
jg
xchg
jnp
sbb
out
ret
add
mov
shrb
mov
dec
out
push
adc
pushf
mov
test
pushf
test
xchg
pop
js
pop
add
mov
fwait
adc
arpl
adc
mov
sub
push
out
inc
add
dec
ret
xchg
cmp
mull
add
cmc
test
cmp
shlb
or
pusha
xchg
nop
xchg
and
or
push
ljmp
lock
test
gs
jle
xor
test
loopne
sbb
push
nop
fildll
xor
shll
and
push
ss
ret
xorl
or
jb
cmp
mov
xchg
or
add
push
xchg
test
lds
fcmove
aam
inc
stos
inc
cltd
xor
ret
push
jmp
bound
jae
adc
mov
fnstsw
mov
cmpsb
mov
push
sbb
fwait
daa
push
sub
and
dec
out
outsb
jns
xor
les
mov
imul
cli
mov
inc
mov
insb
mov
mov
cmovae
inc
xchg
sub
test
stos
mov
xchg
push
dec
js
ret
dec
mov
xor
in
xchg
in
and
icebp
and
fsubrs
add
clc
push
xchg
mov
std
or
jle
inc
cli
inc
hlt
add
xchg
ljmp
jle
cs
adc
cwtl
dec
or
mov
inc
and
lea
adc
push
xchg
sbb
adc
add
jmp
push
daa
pop
mov
dec
das
jno
xchg
cmpsb
mov
mov
mov
add
mov
out
div
or
xrelease
or
mov
out
call
mov
xchg
sbb
shlw
cwtl
ljmp
cmp
adc
aam
mov
cmp
daa
out
xor
mov
dec
or
xlat
test
lahf
idiv
iret
imul
hlt
sarl
mov
cmpsl
scas
aam
add
mov
aaa
ds
sbb
fisubrs
sbb
incl
push
xchg
ja
repnz
xchg
pop
dec
ljmp
ret
adc
push
mov
jge
xchg
sub
lods
outsl
or
cmp
push
pop
mov
popa
mov
add
pop
mov
xor
mov
sti
mov
and
fisttps
out
dec
in
sub
test
leave
pop
fisubs
fisubrl
adc
test
stos
inc
jmp
cld
hlt
fsub
pop
and
mov
ret
mov
les
in
imul
jle
pushf
inc
sahf
sub
addr16
sub
mov
and
mov
jge
xchg
mov
dec
stos
adcb
arpl
mov
int
fmul
pushl
mov
mulb
test
loopne
cmpxchg
insb
mov
lock
jmp
fwait
data16
pushf
pop
cmp
push
inc
imul
pop
lret
outsl
jnp
int
movsl
pop
mov
jae
push
add
fisubrl
inc
add
mov
inc
xor
add
incb
aaa
lret
out
and
dec
mov
mov
and
mov
aaa
xchg
fs
out
ss
lock
sbb
ret
mov
inc
movsb
dec
lea
ja
cmp
insl
out
xor
aam
adc
mov
es
jl
ficomps
or
icebp
mov
in
mov
push
push
lcall
add
jns
mov
jecxz
orl
add
test
imulb
pop
jecxz
test
sbb
shrl
out
sub
mov
push
and
mov
jmp
popa
xor
mov
jno
ret
sbb
sti
inc
pop
movsb
scas
push
movsb
push
xor
inc
int3
mov
mov
cmp
and
push
adc
inc
sbb
and
jb
xor
and
push
pop
movsb
pop
and
push
lret
and
mov
sarb
cmp
enter
mov
xor
mov
pop
nop
mov
push
mov
mov
xchg
pop
lcall
stc
fs
cmp
mov
shl
push
push
jecxz
xor
pop
imul
cltd
or
xchg
sbb
jmp
dec
xchg
adc
adcl
adc
and
out
cmp
cmp
jge
hlt
and
ret
push
or
movsb
sub
ficoms
cs
out
jge
fiadds
add
jnp
in
push
test
out
and
shl
push
and
mov
ret
popa
mov
xchg
pop
xor
mov
sbb
mov
pop
inc
hlt
sbb
jne
mov
movb
inc
mov
nop
mov
jno
or
add
out
xchg
cwtl
or
jne
bound
cli
pop
push
mov
in
aam
inc
out
lcall
pop
hlt
fs
jmp
xor
mov
mov
pop
jp
jg
fsubs
mov
mov
xchg
lcall
fcompl
adc
rcpps
pop
sahf
mov
test
shrl
cltd
and
and
and
movsb
and
dec
testb
push
push
and
xchg
leave
pop
push
enter
stc
xchg
adc
je
or
aaa
sub
jae
xor
std
iret
xchg
or
xor
add
lock
or
sbb
fs
andl
or
int
sbb
pop
jnp
insb
and
in
xchg
add
jbe
out
push
sub
mov
out
insl
not
cltd
imul
mov
mov
fidivrs
xchg
scas
aaa
mov
jno
dec
push
jecxz
or
lods
adc
out
stos
cwtl
jbe
sbb
rorb
sti
dec
pop
or
out
pushf
jae
orb
add
push
xchg
sbbb
pop
sub
xchg
mov
scas
arpl
aas
pop
jl
xor
test
ljmp
pop
loop
jmp
inc
mov
inc
inc
mov
pop
loope
int
jne
mov
jne
xor
aas
data16
or
and
fyl2x
dec
mov
pop
jae
bound
mov
xor
mov
ljmp
mov
sub
inc
jp
insl
mov
push
addr16
xchg
mov
aaa
or
inc
cmc
xchg
cmpsl
pop
aam
test
push
repz
or
sub
in
add
loopne
sbb
sbbb
leave
test
bound
aaa
not
daa
aaa
in
xchg
xchg
mov
add
push
ret
leave
sub
flds
mov
push
pop
repz
mov
inc
dec
ret
lods
sbb
jo
cmp
fisttpll
lock
mov
jl
mov
push
nop
negb
enter
sub
icebp
push
jne
or
das
jge
cli
push
xchg
popf
push
jmp
test
push
adc
out
jbe
jnp
clc
xchg
cli
inc
popa
addr16
les
int
sub
insl
add
adc
sbb
pop
cwtl
jmp
cmpsb
xor
dec
push
mov
push
daa
nopl
mov
lods
mov
inc
in
fwait
lods
push
mov
jb
mov
imul
in
xchg
dec
jb
xlat
and
shll
popa
gs
mov
out
ja
mov
adc
sbb
fstl
jae
mov
lods
gs
push
dec
or
cmpsl
lcall
mov
out
dec
dec
lcall
jg
jp
mov
jae
dec
push
mov
arpl
mov
inc
mov
mov
insl
jmp
sub
daa
mov
sub
test
ret
ficompl
adc
mov
mov
add
mov
push
fsubs
aaa
loope
or
lcall
mov
stos
mov
jge
mov
push
jl
scas
lret
nop
lahf
dec
lcall
leave
ret
test
sub
testl
mov
mov
fsubrl
int
adc
adc
int3
xor
pop
das
bound
cmp
scas
inc
xchg
or
push
jg
add
xchg
mov
daa
out
cwtl
movsb
dec
jae
xchg
cmp
cmp
adc
or
sub
test
repz
ret
push
sti
sbb
jl
inc
enter
add
repnz
xchg
fdivrp
aaa
push
aaa
in
pop
ja
fs
mov
xor
sub
pop
sbb
cli
jnp
pop
popa
mov
xor
loopne
pushf
jl
test
mov
push
lret
int
sbb
dec
inc
add
setp
jecxz
fs
jp
add
sbb
rorl
ds
imul
sub
dec
ds
int3
xchg
jmp
movsb
sub
sti
jg
cs
ja
xchg
shll
fwait
or
cmpsl
adc
add
cmc
in
js
inc
insl
xchg
jmp
jae
add
dec
imul
sahf
jo
fsubs
pop
call
movsl
and
cmp
mov
outsb
or
iret
enter
or
mov
shr
shll
mov
mov
fistl
and
add
xor
sbb
push
add
jg
fisubrl
out
imul
push
aad
ss
sarl
mov
cmpsb
dec
mov
pop
inc
push
inc
xor
test
out
mov
add
mov
pushf
push
mov
add
lods
xchg
enter
pusha
adc
dec
fidivl
test
hlt
daa
or
inc
stc
mov
dec
or
lret
lock
pop
arpl
cmp
hlt
mov
inc
cmp
fldcw
sbb
cmp
loopne
ror
sub
jb
mov
dec
int
lea
and
push
push
sub
mov
aad
fcoml
cli
add
push
into
ja
dec
and
mov
and
jb
jnp
pop
jecxz
scas
mov
add
and
pop
iret
ja
inc
cmp
push
mov
ss
in
pop
ret
ss
xchg
sub
push
flds
insb
into
xchg
sub
jle
jae
repnz
push
push
and
ficompl
sahf
fwait
mov
push
ret
clc
mov
mov
xchg
mov
xchg
nop
sbbl
xor
sbb
stc
adc
adc
scas
cmpb
fsubs
mov
rcll
push
fucomi
pop
jecxz
jl
adc
out
sub
iret
in
sub
cs
pavgw
mov
mov
xchg
sub
mov
sbb
xchg
aad
out
hlt
cmpsl
mov
lock
lods
sahf
mov
add
ja
popa
loop
andl
dec
add
fldcw
sbb
adc
cmpsl
sbb
inc
sbb
negl
dec
cltd
add
inc
xchg
stos
pop
add
mov
inc
ds
xor
mov
stos
std
mov
repz
jmp
xchg
sbb
mov
push
mov
and
test
hlt
cmpsb
ss
sub
movq
icebp
cwtl
mov
jne
dec
mov
jo
test
stos
mov
cli
lret
sub
mov
cmpl
jle
cmc
aam
cmpsb
mov
movsb
xlat
mov
mov
mov
stos
xor
mov
adc
mov
mov
je
and
std
mov
js
sahf
decl
or
popa
je
push
xor
adc
push
inc
sub
dec
cs
aam
fdivl
pop
mov
adc
dec
outsb
cmp
mov
jge
jnp
les
jae
push
jp
cmp
jb
jge
mov
ret
test
dec
pop
cmp
or
push
fdivs
mov
scas
jo
daa
popa
mov
pusha
adc
sbb
xchg
adc
divl
cmc
lods
aas
sti
divl
ret
and
inc
int
imul
ret
fstps
cmp
xor
push
icebp
sbbb
pop
hlt
imul
imul
mov
aaa
push
callw
xor
cmp
cmc
xor
dec
fimuls
push
lods
test
mov
je
or
lcall
repz
push
lret
dec
pop
popf
aad
sbb
clc
incb
lret
sbb
dec
ljmp
insb
inc
sahf
call
test
mov
leave
jns
cmp
add
mov
je
clc
jle
popf
out
xor
cmp
addl
push
add
mov
mov
sub
xchg
mov
pop
pop
scas
mov
test
repz
add
jo
sbb
cwtl
popf
mov
adc
ficompl
dec
loopne
jmp
inc
mov
cmp
mov
xor
and
mov
mov
popa
les
add
jo
pop
sahf
loope
loopne
mov
adc
mov
push
mov
mov
mov
bound
or
jmp
outsl
ret
leave
jno
or
cmp
adc
icebp
mov
enter
fcmovnu
add
xchg
aad
dec
loop
test
shll
pop
loop
lds
in
popa
xorl
jns
push
xchg
call
call
jg
mov
loopne
fildll
xor
cmp
add
lcall
ret
int3
fucom
and
out
std
int3
cmc
dec
jl
jp
adc
mov
sbb
xchg
mov
rolb
mov
mov
in
rcrb
pusha
cmovnp
pop
push
mov
xor
and
cltd
adc
loopne
xorl
rcrb
out
fcompl
inc
inc
mov
addr16
mov
dec
dec
gs
add
popa
enter
cld
adc
push
mov
clc
out
aad
xchg
shll
outsl
pop
arpl
sbb
fsts
sbb
cld
adc
add
mov
int
xchg
inc
je
mov
scas
adc
sbb
mov
jmp
insl
loope
dec
add
push
test
adc
xchg
hlt
leave
in
mov
fisttpl
daa
pop
stos
into
mov
cmp
or
lea
mov
int3
dec
out
and
loop
ljmp
adc
jl
adc
mov
cltd
and
cmpsl
stc
cmpsl
clc
cmp
dec
das
stos
adc
mov
sbb
pop
pop
jl
dec
jno
mov
mov
pop
jnp
sbb
pop
ret
jnp
push
add
vpsllw
dec
mov
fsts
pusha
jl
imul
push
mov
loope
sub
dec
sbb
adc
shrl
jg
lret
mov
or
inc
push
xchg
lea
stc
outsb
sbb
aam
call
lret
outsl
js
mov
jp
dec
push
je
dec
sbb
outsb
xor
subb
imul
jge
cmp
gs
cmpsl
xchg
sbb
xor
ret
cmp
mov
xor
cli
stos
stos
inc
aad
xchg
mov
jae
inc
xchg
ret
xchg
lea
es
xor
clc
dec
sbb
pop
scas
mov
pusha
cli
stos
jnp
xchg
pop
mov
jg
sbb
adc
pop
adc
das
mov
cmp
lret
xor
xchg
mov
adc
jb
lea
mov
sub
mov
mov
inc
clc
loop
inc
shlb
lds
pop
shr
mov
xchg
in
pop
add
push
sarl
xor
xchg
pusha
lods
cmp
ds
push
xor
inc
push
or
jle
mov
mov
push
push
mov
sar
add
cmpsb
test
mov
xchg
jo
xchg
ret
adc
xlat
sbb
scas
mov
mov
push
xorb
arpl
cli
aad
push
orb
jb
sbb
out
repnz
inc
std
or
pop
rcr
mov
cmp
cmp
addb
jmp
cmp
int
sub
sub
pop
aaa
sub
ret
mov
fidivrs
inc
rcrb
setb
and
xor
fisubl
dec
sub
iret
cmc
add
push
out
sub
pushf
lret
je
ret
in
je
imul
in
push
lahf
mov
and
dec
jp
fidivrs
jecxz
pop
jbe
add
push
mov
mov
lcall
movsb
cmpsl
lds
ljmp
lcall
iret
xchg
stc
push
int
test
lock
mov
dec
add
pop
cmpsl
xchg
push
dec
insl
hlt
xchg
jbe
or
hlt
xor
shlb
adc
dec
sbb
pop
lcall
xchg
mov
mov
dec
xchg
adc
mov
adc
loope
sbb
cmp
inc
sti
daa
inc
ss
and
inc
xor
mov
je
iret
push
mov
shll
and
divb
jae
push
insb
push
mov
adc
ret
sub
roll
pushf
mov
cmpl
shlb
push
or
and
pushf
out
mov
inc
and
gs
rclb
xchg
ss
pop
out
movsl
into
adc
sub
jnp
fisubrs
jg
data16
push
jae
cmc
pop
xchg
cmp
and
ficoml
add
jnp
icebp
hlt
scas
or
push
les
sahf
sbb
sbb
out
call
repz
outsl
lods
dec
jmp
insl
or
ja
mov
mov
aam
mov
xchg
mov
adc
out
xorb
xorb
out
mov
clc
popf
inc
push
xor
adc
add
incl
mov
gs
insb
adc
and
popf
add
imul
xlat
sbb
xchg
stos
inc
in
push
push
loop
gs
cmc
js,pt
ja
inc
dec
adc
push
pop
nop
enter
fisubrl
int
lret
popf
clc
dec
popf
sbb
mov
in
scas
inc
adc
sbb
aas
dec
iret
mov
sbb
int
test
xchg
cltd
icebp
sbb
lods
mov
adc
xchg
push
jnp
or
fstps
rcll
jmp
cmpsb
jno
sbb
cmp
loop
out
movzbl
add
cmp
inc
mov
fdiv
adc
jne
adc
cmpsl
mov
xorl
out
sub
add
mov
jne
fidivl
cmp
mov
add
insb
sub
in
push
pusha
or
inc
fnstcw
dec
mov
add
cld
adc
pop
pop
pop
pop
aad
jne
sub
std
leave
mov
xor
mov
ljmp
cmc
jae
cmp
dec
cli
xor
dec
push
fwait
enter
jp
xor
sarl
repz
aas
cmp
mov
mov
scas
test
push
mov
and
jp
testb
imul
outsl
jg
pop
negl
mov
or
mov
jmp
push
adc
push
sub
filds
in
sbb
sbb
lahf
xor
or
xor
stos
mov
inc
subl
mov
cwtl
or
xchg
pop
pop
xchg
xor
ss
pop
daa
rcrl
add
popa
fldl
xor
aam
lahf
sti
mov
dec
xor
xor
fcompl
in
cli
xor
dec
jge
inc
pop
lds
or
xchg
lods
scas
xor
divl
xorl
cltd
push
push
cltd
ret
cmp
fs
lcall
push
popa
in
aas
mov
mov
in
in
in
jg
popl
fcompl
push
mov
add
in
icebp
or
adc
int
xchg
adc
sub
xor
sub
jp
sub
divl
add
ss
movsl
mov
das
out
scas
rorb
cli
int
push
shll
insb
pmulhw
mov
loope
push
out
fs
aas
xchg
aaa
int3
jmp
sarl
mov
loopne
and
lea
add
cmc
xchg
xlat
popf
cmp
loope
pop
out
jae
mov
ss
jo
xor
div
pop
ljmp
push
xchg
es
pop
push
sub
lret
mov
rcrb
inc
outsb
es
stos
and
lcall
loop
add
ss
scas
push
mov
sbb
jp
sbb
sbb
push
jle
insb
jbe
popa
cwtl
rcrl
dec
cmp
cmpsb
and
pop
and
loop
call
in
sub
test
out
jbe
xor
mov
mov
pushf
cmp
mov
cmp
ss
sub
fdivl
aaa
aaa
inc
loopne
xlat
lea
stc
fisubrs
and
test
lret
ss
dec
mov
and
mov
mov
cmp
std
clc
mov
jl
sbb
adcl
jecxz
out
in
xor
loope
xchg
fisttps
pop
jge
cli
sbb
or
popf
xor
and
sbb
cmp
mov
imul
icebp
xor
add
inc
pop
push
fldenv
add
or
mov
inc
mov
add
mov
imull
imul
mov
inc
and
cs
cmp
loopne
insl
dec
addr16
push
out
or
cwtl
push
sub
icebp
and
nop
out
add
shlb
je
fs
inc
enter
lds
cmp
mov
push
add
mov
inc
mov
rcrl
stos
outsb
ljmp
hlt
imul
dec
mov
in
xor
mov
rclb
jnp
push
fildl
sub
push
add
in
and
cmp
jecxz
jo
sub
mov
pop
fwait
and
arpl
test
add
fisubl
sub
fsubrl
mov
adc
cmpsb
and
mov
push
test
xor
iret
and
clc
add
cmp
inc
mov
pop
pop
sbb
out
cmp
xchg
push
ret
aam
adc
sub
push
mov
sbb
pop
lea
mov
jge
mov
inc
xor
jge
push
pop
int3
lret
pop
xor
aam
push
rclb
add
xor
jb
add
ja
inc
dec
clc
ret
mov
mov
and
mov
mov
mov
mov
xor
in
jo
pop
cmp
jnp
push
lret
xor
lcall
repnz
fdivrl
insl
sbb
adc
mov
outsb
out
dec
cmp
jo
jns
dec
push
jo
pop
fsubrl
lret
mov
pop
add
aaa
dec
pop
loope
fwait
and
ds
cmc
push
mov
loop
add
popf
ljmp
fs
popa
dec
dec
outsb
movsl
daa
loopne
clc
rcrb
js
dec
sbb
insb
stos
mov
sbb
movsb
add
push
adc
lds
cmp
cmp
adc
filds
push
lods
and
bound
lahf
pop
sub
dec
jle
xchg
inc
xor
sub
xlat
sbb
push
int
sahf
pop
push
cmp
outsb
pop
scas
test
out
mov
cmpsl
fisubrl
enter
imul
adc
cld
ja
ss
jl
stos
repz
scas
xchg
mov
mov
add
loop
sbb
dec
sub
cmp
je
mov
sub
add
hlt
lret
push
sbb
pop
imulb
fcoml
nop
fcmove
iret
or
scas
adc
icebp
xchg
fildll
jp
rolb
aaa
lcall
leave
cmpb
daa
adc
push
or
xor
sbb
add
pop
inc
pop
pop
iret
sbb
mov
pop
mov
in
test
imul
xchg
lahf
push
sub
imull
clc
xchg
pop
cmpsl
adc
and
and
lcall
sti
icebp
adc
inc
dec
cs
dec
push
cmp
int
push
in
pop
adc
pusha
sahf
lods
and
div
mov
add
fistl
fdivrl
push
ds
popf
nop
cli
loopne
repz
mov
aad
cmp
inc
out
aaa
leave
push
rorb
mov
pop
mov
push
outsb
mov
mov
push
aad
movsb
mov
stos
jmp
shl
sub
roll
inc
xchg
adc
shll
inc
sbb
xchg
insb
mov
inc
push
lcall
jo
inc
je
jo
stc
shrl
std
or
aas
les
or
jno
mov
or
push
ret
cmp
inc
xor
xchg
into
lret
ds
dec
cmpsb
gs
movsl
mov
push
mov
das
pop
ljmp
or
inc
fldcw
mov
inc
jecxz
test
xchg
add
sti
pusha
xchg
adc
pop
pop
mov
jmp
jp
in
xchg
es
leave
pop
scas
dec
aas
test
or
inc
aaa
mov
loopne
pop
scas
mov
mov
popa
cli
mov
and
jbe
lods
and
int3
in
dec
sub
dec
pop
aaa
leave
aad
xor
pop
int3
add
arpl
mov
xchg
push
adc
push
outsl
add
ret
clc
pop
and
push
mov
shlb
sbb
repnz
xchg
fistps
scas
jbe
ret
jbe
pop
hlt
add
scas
add
lea
inc
lock
adc
jns
stos
mov
repnz
scas
and
mov
mov
jg
cmp
push
pop
outsl
in
mov
jae
out
sub
loope
inc
shll
or
xor
mov
lret
cltd
dec
and
sbbb
gs
xor
push
pushf
imulb
insl
bound
adc
sbb
cld
and
lahf
pop
cmp
dec
push
sbb
add
fidivrs
mov
pusha
lret
add
mov
cmp
mov
xchg
outsl
daa
and
ret
in
jns
add
lock
ret
sbb
push
pop
mov
lcall
pop
pop
divb
inc
adc
nop
mov
loop
in
or
faddl
int3
fwait
pop
incl
push
jbe
push
cmp
cmp
sbb
add
mov
push
rclb
mov
mov
pop
mov
cwtl
and
inc
or
mov
mov
ja
lret
fdivr
and
mov
nop
or
leave
addl
cmp
jge
daa
mov
out
xchg
jle
mov
xlat
mov
fs
icebp
pop
test
cmc
dec
or
filds
dec
jo
cmpsb
in
push
test
lcall
jnp
fidivrs
clc
jnp
dec
mov
cmp
pop
and
fwait
adc
jae
add
orl
clc
and
mov
pop
sub
in
inc
cmpsb
vmwrite
into
fs
nop
cwtl
arpl
sti
mov
das
cmp
pop
test
sbb
lret
xchg
pushf
push
mov
jno
orl
mov
xchg
icebp
jle
lock
sub
adc
push
in
sbb
or
int3
or
je
push
xor
sbb
popf
ret
mov
inc
stos
mov
daa
and
fwait
jne
xchg
sub
ret
pop
scas
cmp
dec
jle
mov
mov
sbb
out
xor
aas
adc
sbb
lock
add
push
push
dec
and
fsubrs
sbb
jge
jnp
mov
and
dec
inc
jae
xchg
inc
cmpl
mov
out
sbb
push
rep
pop
gs
jg
add
sbb
enter
das
mov
orl
sahf
jns
iret
mov
xor
jmp
negb
jl
cltd
popa
outsb
dec
add
mov
outsb
hlt
push
or
in
push
jb
fisubl
sbb
and
test
repz
aad
xlat
test
push
adc
cmp
cmpsb
out
ljmp
shrb
lret
adc
movsb
lds
mov
push
adc
cmp
ljmp
sub
mov
mov
or
sahf
mov
cmp
rclb
pop
sub
faddl
push
aas
push
in
xor
push
lret
pop
out
pop
or
pop
imul
loop
push
or
cmp
mov
push
rol
aad
lods
sbb
sarb
jb
inc
sub
mov
sahf
pop
shr
xchg
inc
dec
cwtl
sub
push
pop
sarl
mov
jne
xlat
mov
daa
sbb
jmp
mov
sbb
in
call
pusha
xchg
mov
inc
push
sub
cmp
or
fsub
push
add
push
xchg
call
and
out
pop
out
adc
enter
fcompl
lret
repnz
push
popa
dec
cmp
popf
test
jg
lret
pop
mov
cmp
mov
imul
lock
pop
mov
push
pop
movsb
inc
push
add
mov
jbe
lret
cwtl
push
jp
push
jns
pop
pop
test
in
pop
or
push
mov
mov
stos
mov
push
mov
fisttpll
shll
in
sbb
push
outsb
add
pusha
inc
loop
cmpsb
scas
adc
cli
outsb
les
push
add
mov
inc
jno
mov
xor
or
repz
mov
loop
das
adc
jp
fadd
mov
iret
add
repnz
cmp
cmp
shl
mov
addr16
mov
in
mov
jle
idivl
jb
inc
adc
push
pop
pop
stos
pop
xlat
cli
das
cmp
js
push
ss
lds
lret
add
ror
ret
or
xor
push
rcrb
mov
ret
into
dec
ror
stc
outsl
repz
test
fisubrl
mov
fs
sbb
in
adc
xor
fnsave
lahf
xchg
mov
daa
insl
leave
mov
jo
add
movsl
ja
xor
sub
enter
or
xchg
cmpsb
nop
sbb
outsl
es
jbe
or
dec
inc
pop
shl
lock
push
xor
push
outsl
loopne
add
stc
fnstcw
adc
dec
push
sbbb
mov
push
rcrb
es
test
and
pop
jmp
fcmovne
imul
hlt
sbb
cwtl
mov
std
and
xchg
je
pop
and
mov
jge
stos
pop
xchg
loope
xlat
imul
and
and
popf
outsb
shll
push
sbb
cmp
xchg
cs
inc
call
icebp
adc
pop
add
jg
daa
fwait
jmp
cltd
popf
sub
arpl
jecxz
xchg
push
aad
jne
jbe
loopne
in
jge
sar
mov
mov
dec
nop
xchg
jns
outsb
daa
lods
sahf
push
ss
sub
aaa
jp
xor
mov
and
cmp
outsb
pushf
fisttps
or
arpl
jp
test
mov
jo
pop
mov
pmaddwd
and
dec
call
ficoms
ficoms
gs
dec
sarl
movsb
sbbb
push
js
rcrb
xlat
int
daa
inc
int3
sub
lock
je
lret
mov
push
push
test
addl
cmp
inc
add
stos
mov
scas
lds
icebp
add
loope
mov
mov
xlat
fs
sbb
cmpsb
int3
and
lcall
jecxz
loop
pop
pop
jbe
repz
gs
cmc
repnz
repnz
mov
les
in
xor
mov
pop
sbb
cltd
and
je
adc
xor
and
int
loop
adc
or
inc
sbb
or
popa
and
adc
mov
aas
fs
scas
popa
ljmp
imul
inc
aad
lret
push
mov
pop
lcall
sbb
mov
push
sub
and
mov
adc
mov
ja
jmp
xchg
jp
js
fcmovb
enter
fidivrs
imul
xor
pop
add
mov
cs
jno
sahf
fnsave
jmp
test
pusha
lret
ss
js
lea
jge
idivb
inc
lock
cmovg
outsl
movsb
and
inc
test
sub
pop
js
sub
or
jno
add
mov
pop
dec
jae
fwait
pop
out
mov
cs
and
jle
jne
and
or
ljmp
cmpsb
insl
cmp
aad
push
add
add
add
inc
inc
cmpl
in
out
mov
dec
sub
pushf
jge
fidivs
or
sbb
add
and
decl
jbe
test
mov
dec
cmpsl
or
xchg
jno
mov
jbe
xor
add
cmp
sarl
loop
jnp
sub
insl
lods
sbb
jo
dec
pop
iret
add
adc
rol
mov
jp
jnp
aam
inc
sbb
ja
or
jp
test
cmpsb
jnp
dec
rcr
inc
sub
add
pop
into
pop
loope
xor
rcll
xor
pop
mov
test
icebp
pop
into
pop
or
cmpsb
lahf
popf
adc
xor
xchg
mov
cwtl
aad
xor
sar
decb
sub
js
out
mov
mov
mov
dec
mov
pop
mov
jecxz
mov
mov
repnz
mov
mov
sarl
cmp
cmp
in
jle
nop
mov
xor
push
and
movsb
mov
aas
in
push
push
jecxz
hlt
mov
xor
adc
add
call
lahf
adc
and
repnz
popf
mov
es
jp
inc
xorl
mov
sub
xor
fcom
dec
nop
pop
aaa
push
add
sti
js
cmp
stc
idivb
jp
dec
test
negb
xor
ja
or
jp
mov
xchg
pushf
subl
sub
mov
notb
fcomps
add
dec
lods
pop
imul
imul
add
clc
push
in
sbb
into
fwait
jne
out
inc
repz
jne
pop
mov
out
popa
stc
sub
in
sti
push
int3
sbb
push
jbe
xor
mov
xchg
pop
stos
iret
repz
out
out
mov
adc
insl
sbb
pushf
rcrl
add
inc
pop
popf
sbb
iret
pop
movsb
jno
adc
ja
and
inc
jno
add
xchg
clc
mov
or
shlb
jnp
mov
and
xchg
mov
aas
cs
jg
push
adc
adc
icebp
and
xchg
cmpsb
pop
push
jp
cpuid
xor
dec
cwtl
imul
sub
sbb
jmp
push
in
or
sbb
and
popf
push
mov
es
out
stc
cwtl
ret
cmpsl
fnstsw
out
sarl
sbb
test
loope
cs
inc
push
call
dec
add
cli
das
or
sub
and
addr16
xchg
mov
imul
insb
sbb
aam
stos
in
dec
popf
rorb
test
push
fistl
jnp
inc
pop
or
mov
cmp
das
outsb
movsl
mov
or
or
dec
stos
mov
dec
push
aas
ror
sub
pop
int
loopne
cmc
inc
jl
and
jns
and
pop
add
push
dec
dec
pushf
in
loopne
jae
push
je
jb
stc
mov
add
sub
cs
hlt
xlat
inc
mov
je
add
push
cli
sbb
out
lds
enter
sbb
test
add
movsl
cmpsb
push
lret
pop
lods
insb
test
inc
cmp
add
inc
and
je
xchg
push
out
imul
dec
das
dec
xchg
mov
pop
xchg
adc
lds
jmp
nop
call
cmp
cltd
and
enter
cli
jg
in
dec
xchg
mov
sahf
xchg
add
cmc
mov
sub
xchg
and
jg
test
mov
mov
fwait
xlat
or
shrl
adc
xchg
push
cmpsl
popa
addb
repnz
loop
and
and
adc
lods
lods
stos
ja
adc
cmp
into
dec
popf
fsub
sub
std
aas
cli
int3
push
mov
mov
leave
pop
test
ljmp
call
push
and
dec
sbb
lods
fdiv
mov
jl
cmp
jbe
xor
out
add
cltd
cmp
pmulhuw
and
bound
xchg
out
in
or
jmp
cmp
add
movl
and
clc
cs
cmpb
adcb
and
add
dec
xchg
imul
adc
movsl
inc
xor
filds
testb
lret
mov
sub
movsl
mov
inc
sub
xor
adc
jle
push
adc
mov
into
jmp
inc
lahf
call
jl
cmpsl
pushf
scas
mov
xchg
aas
jmp
jno
je
lods
or
pop
mov
cmp
push
cltd
lret
push
xor
xor
out
std
pop
mov
iret
sbb
mov
std
jp
add
mov
pusha
inc
adc
ds
dec
aad
addr16
in
std
inc
mov
xor
orb
test
cmp
mov
fucom
fnstcw
aas
cmpsb
mov
fwait
in
sub
aam
dec
adc
rorl
fidivrl
add
xchg
imul
insb
lahf
xchg
cli
push
pop
mov
xor
jns
xchg
add
iret
or
enter
cli
addr16
fadds
cli
jmp
add
ds
mov
mov
scas
pop
cli
adc
aaa
mov
test
push
and
mov
adc
adc
push
movsb
and
jb
sahf
xchg
jnp
and
scas
xchg
cmpsb
sbb
xor
mov
pop
inc
or
mov
cmp
jmp
out
pop
dec
rcll
std
xlat
flds
ret
scas
push
xchg
jb
and
testl
jp
cmp
int3
cmpsb
cmpsl
cmp
mov
cmp
xchg
out
fnsave
jb
insl
lcall
cwtl
push
loop
sub
pop
and
cmc
sbb
cmc
jl
sbb
repnz
nop
jo
js
or
test
jb
je
inc
xchg
scas
adc
push
fidivl
ljmp
jge
int
xor
push
mov
xchg
ljmp
lea
cmpsl
inc
or
mov
das
inc
cmp
loop
lods
decb
in
or
mov
add
cmp
cwtl
je
daa
test
push
and
sub
aas
push
popa
aam
push
cmp
mov
movsb
icebp
cmp
gs
addl
adc
sbb
es
pop
outsb
repz
dec
mov
loop
xlat
pop
arpl
sub
movsl
into
jae
cmc
leave
sti
push
faddl
cs
cmpsb
inc
sti
jb
shll
pop
or
fistpll
push
xor
mov
ficompl
lret
mov
imul
jo
shll
and
cli
xor
mov
push
jb
in
int3
adc
xchg
mov
mov
jbe
idivb
xor
adc
mov
in
and
jne
jno
int3
adcl
popa
call
jnp
mov
mov
xor
mov
fstps
xchg
jno
jns
mov
addr16
das
xchg
es
subl
scas
mov
psubusb
inc
fs
xchg
outsl
je
pop
jno
shrl
pop
out
inc
push
or
and
aaa
shl
ret
and
mov
mov
mov
hlt
call
xor
xor
jmp
pop
shlb
cltd
mov
repz
in
pop
fisttps
pop
jecxz
dec
mov
mov
test
jns
cmp
gs
repz
and
pop
adc
outsb
cmp
pop
xlat
xor
jmp
sub
mov
mov
jo
jnp
pcmpgtd
xorb
andl
xor
push
cmp
cmc
hlt
add
loop
jnp
add
subl
inc
sti
mov
cli
lea
pop
bound
bound
leave
dec
mov
iret
les
andb
pop
jne,pn
push
fcomip
push
xor
sbb
cmp
mov
dec
jb
out
xor
inc
aam
loope
out
push
adc
sub
mov
test
mov
stc
clc
cmc
sub
inc
push
fadd
pushf
shl
call
mov
pop
out
aaa
mov
lds
popf
mov
inc
lcall
out
mov
nop
mov
sub
mov
inc
aas
mov
xchg
jl
fstpl
xor
jmp
inc
and
in
loop
sti
ja
cmpsl
inc
sub
mov
pop
xchg
inc
mov
or
lock
int3
or
jae
stc
adc
mov
inc
jle
xlat
ret
les
das
in
popa
outsl
sub
adc
bound
and
xchg
adc
ljmp
pop
jnp
mov
into
popa
push
jl
out
test
movsl
ret
test
lods
jmp
push
jmp
add
lock
stc
and
lahf
inc
pusha
and
movsb
pop
push
mov
pop
jle
xchg
xor
cmpb
sarb
jecxz,pt
in
pop
inc
arpl
sub
lock
cmpsl
mov
push
in
cmp
mov
pop
mov
je
loope
out
cltd
ja
imul
or
imul
xchg
or
outsl
jecxz
inc
xchg
inc
divb
xchg
hlt
mov
push
mov
jae
pop
jge
jg
xchg
shlb
cwtl
ds
cmp
inc
not
scas
std
push
push
mov
xchg
into
testb
clc
pop
dec
psrlw
daa
insl
or
pop
lods
dec
mov
add
cmp
rorb
cli
cli
mov
stc
scas
test
icebp
add
push
mov
sub
sub
cmp
lds
mov
iret
fbld
ja
test
or
cli
sti
addr16
and
or
les
cmp
scas
popa
pop
jae
out
test
push
inc
adc
pop
stos
ss
xorl
mov
sbb
add
or
xor
xchg
fbstp
sbb
jne
je
xchg
gs
stos
inc
in
push
subb
sbb
push
pop
push
out
pop
push
clc
mov
ret
scas
xchg
add
out
hlt
xor
or
jnp
xor
daa
inc
js
and
in
ljmp
int
cld
mov
push
jne
and
xor
mov
dec
inc
mov
movsb
fisttps
sbb
xor
xor
imul
push
pop
outsl
fdivrl
mov
outsb
cld
and
outsl
ret
jle
imul
aam
mov
mov
pop
push
mov
incb
lret
hlt
mov
jmp
stos
push
mov
xchg
mov
jns
adc
xor
mov
lds
adcb
into
repz
and
leave
mov
inc
cmp
repnz
jnp
js
test
pop
cmpsl
adc
and
imul
jle
dec
jb
in
or
pushl
pop
iret
mov
pop
insl
lods
sbb
es
test
movsl
push
adc
fisubs
orl
aas
pushf
inc
int
aad
fistl
xchg
xor
dec
dec
std
jbe
push
inc
mov
mov
mov
sbbl
arpl
inc
sub
sti
push
jp
adc
fidivrl
repz
sbb
xchg
push
jo
add
mov
cmp
mov
mov
fstp
jg
in
ljmp
movsl
pop
rcr
stc
sbbl
sub
xor
leave
mov
data16
xor
xchg
nop
lock
lret
xchg
cli
add
loope
dec
add
cmpsl
cmp
insl
push
sbb
pop
das
mov
fldt
adc
jg
popf
mov
adc
sbb
sbb
in
push
rol
daa
or
cmp
pop
add
and
aaa
or
adcl
sub
jecxz
lods
pop
gs
pop
mov
jo
and
ret
mov
jne
icebp
out
adc
subb
loope
jns
cmp
push
daa
leave
ds
repz
jmp
fstpt
add
mov
mov
fwait
inc
scas
lahf
push
inc
mov
dec
cmp
dec
jp
xchg
je
sahf
mov
sub
add
inc
cmp
push
mov
mov
out
sbb
pop
test
and
or
or
in
dec
out
test
fsubrl
lcall
inc
sub
add
lock
rcr
out
test
inc
pop
add
cmpsb
scas
int3
sub
jb
jnp
sub
test
scas
xchg
or
test
adcl
pop
sbb
jl
pop
add
aaa
cmp
pop
out
ja
repnz
gs
adcl
test
mov
jecxz
test
mov
test
iret
mov
adc
aam
xchg
dec
mov
sub
fistl
ret
cmc
xor
dec
test
repz
insb
repnz
add
in
in
into
test
mov
inc
jno
scas
xor
js
in
dec
clc
push
sbb
divl
xchg
xor
jmp
ds
and
jmp
pop
pusha
add
dec
jne
sbb
fdivs
pop
mov
push
push
dec
sub
ljmp
push
lret
daa
enter
mov
dec
jns
aam
daa
mov
fs
dec
xor
addr16
sub
xchg
sub
clc
in
cwtl
fisubs
repz
mov
adc
les
ds
pop
jnp
lods
sub
popa
push
repnz
mov
lret
push
push
pop
lods
push
addr16
cmpl
ds
adc
sub
cmp
testb
sub
gs
add
sti
xchg
lret
add
pop
test
mov
adc
js
testl
repnz
jae
and
sub
dec
leave
push
adc
and
scas
call
aaa
leave
sbb
or
pop
mov
cmp
fucomi
push
inc
cmp
inc
cmpsl
lret
xor
push
call
add
roll
cmp
pop
or
pop
mov
cmp
adc
inc
and
jae
and
leave
and
lock
add
ret
dec
mov
gs
pop
aaa
dec
es
js
push
nop
cmp
cmp
into
into
or
push
and
repnz
repz
jae
cmc
aaa
test
xchg
sub
gs
test
adc
neg
dec
mov
ret
cmp
leave
pop
add
jns
jb
inc
int3
jle
mov
ljmp
fcoms
pop
fsts
fbld
sbb
imul
mov
inc
or
jecxz
xor
call
pop
cmp
fwait
ja
jns
lret
idivb
das
mov
test
jmp
jns
and
imul
popa
popf
jnp
repz
xchg
enter
sahf
icebp
mov
sub
pusha
mov
sub
nop
xlat
lret
xor
jp
addb
adc
roll
xchg
es
xor
popa
or
hlt
jns
sub
aad
lock
mov
aaa
cltd
inc
push
pop
and
cmp
xor
pop
xchg
push
jmp
stc
pop
outsl
cmp
mov
cld
pop
or
and
mov
mov
scas
roll
into
mov
test
imul
cwtl
xor
jmp
es
dec
pop
pushf
or
push
add
into
lods
xor
divb
ret
fs
je
dec
das
data16
inc
popa
mov
sbb
in
xchg
scas
pop
inc
xor
xor
pop
insb
ljmp
cmp
fdivl
pop
inc
ss
cmpsb
or
pop
clc
icebp
xchg
jbe
sub
xchg
or
je
push
dec
xchg
shll
sub
push
enter
imul
mov
jle
dec
dec
or
popa
mov
pop
push
jle
pop
mul
loop
in
cmpsl
in
xor
add
iret
adc
rcrb
pslld
inc
cmp
push
push
mov
adc
add
pop
pop
xlat
xchg
popa
std
sbb
ja
push
pusha
fimuls
test
xor
test
outsl
sbb
cli
inc
gs
dec
jnp
dec
push
loopne
xor
mov
inc
pop
mov
hlt
jb
out
popa
ds
sahf
pop
iret
sub
or
outsl
andb
orl
sub
gs
test
push
xor
mov
scas
or
mov
lcall
push
fwait
jle
push
xchg
sbb
push
pushf
push
jle
nop
scas
leave
push
sahf
adc
jae
jl
mov
rcll
mov
negl
into
nop
aam
into
stc
js
cmpsb
cwtl
out
in
mov
mov
cltd
daa
neg
sub
in
sub
xor
int
mov
ret
stc
dec
sbb
sub
aas
aas
cmp
mov
jae
dec
dec
cmp
dec
pop
scas
addr16
dec
or
inc
adc
mov
fidivl
fisttpl
sub
test
lcall
lods
sbb
add
sbb
adc
in
or
aas
jb
pop
cltd
push
stos
inc
jo
pop
mov
pop
pop
dec
lret
lret
out
imull
movsl
sarl
inc
es
inc
dec
inc
lcall
jne
int
dec
add
fsubr
inc
in
inc
mov
test
mov
or
dec
add
cmpsl
sub
push
cmp
jns
and
lcall
rolb
out
sbb
inc
jmp
xlat
xchg
stos
dec
ljmp
fidivrl
sbb
insb
mov
add
pop
inc
sub
nop
js
push
mov
pop
xor
out
imul
xor
or
or
adc
sbb
fdivl
test
cld
stos
loopne
ret
jge
loop
pshufw
adc
es
mov
adc
pop
insb
dec
cltd
jae
mov
sbb
mov
jle
fisttpll
jp
lea
push
add
adc
mov
push
or
shl
dec
in
jne
scas
adc
or
inc
clc
pop
sbb
mov
lahf
aam
push
jp
icebp
jno
lahf
add
sub
pop
out
subb
sbb
repnz
sub
cmp
xor
das
ret
jae
mov
adc
test
repnz
dec
repnz
inc
or
fisubrs
ds
pop
arpl
arpl
push
dec
mov
dec
test
xor
push
dec
test
arpl
ret
adc
repnz
shr
jbe
jb
dec
sbb
nop
lods
dec
sahf
sbb
outsb
stos
ja
stos
add
inc
jo
push
xor
enter
insl
outsb
insb
add
xlat
dec
aad
inc
in
std
in
mov
loope
ljmp
arpl
dec
ffree
or
xchg
int
push
pop
pop
sbb
cli
add
ljmp
jmp
push
hlt
ret
stos
pushf
nop
sbb
sbb
ret
push
dec
adc
or
jbe
dec
pop
imul
adc
inc
enter
cmp
das
or
adc
xlat
pop
fwait
sbb
mov
inc
mov
push
or
dec
mov
pop
fsubp
pop
inc
mov
mov
clc
inc
stos
jg
fisttpl
mov
fisubs
jbe
pop
pop
xchg
dec
bswap
sub
push
ret
enter
pop
out
dec
in
jae
push
in
or
mov
cmp
mov
icebp
and
inc
xor
pop
sub
pop
pop
push
cmpsb
iret
outsl
pop
repz
inc
inc
adc
dec
or
pop
rorb
cmpb
lahf
push
push
xchg
mov
pop
ss
jmp
jb
ljmp
popa
orb
mov
lret
dec
roll
pusha
push
sub
add
add
arpl
dec
cmp
fucomp
jb
lods
dec
hlt
in
mov
movsb
mov
cmp
lea
sbb
out
flds
test
pop
xor
mov
std
out
arpl
inc
out
movsb
mov
pushw
repnz
addl
or
push
ret
add
js
fs
sbb
and
push
pop
dec
lea
mov
mov
sub
loopne
cli
inc
xchg
mov
fxch
and
jnp
iret
cmp
int
xor
leave
scas
and
jne
xlat
and
xchg
push
lds
and
mov
cmp
xlat
lret
or
data16
mov
push
sarl
mov
jmp
xchg
bnd
mov
and
cltd
inc
pop
mov
out
push
xchg
jge
push
mov
xor
xor
dec
mov
sbb
push
sbb
subl
push
xchg
or
arpl
xor
mov
jns
cmp
or
push
cmpsb
and
add
fisubs
mov
movsb
arpl
out
cld
testb
mov
ret
loop
bound
loope
adc
mov
sbb
push
and
sub
imul
xor
lock
sbb
push
cmc
andb
pusha
mov
cwtl
inc
jne
xor
into
jns
sbb
add
loopne
jae
pop
es
sahf
sbb
in
data16
cmove
adc
data16
mov
iret
push
subb
fdivrl
scas
cmp
push
enter
stos
bound
ret
cmp
ds
test
sub
sbb
data16
fimull
xchg
in
xor
rorb
xor
pop
mov
xchg
out
bound
fs
outsl
adc
dec
rcrl
ret
adc
push
rorb
dec
jbe
xor
pop
jne
cmpsl
scas
ficomps
ss
fistl
or
pushf
xor
sarb
jle
inc
ljmp
pop
popf
decb
test
xchg
mov
sub
cmp
frstor
mov
cmpsb
adc
test
test
shll
icebp
js
adcl
inc
lock
addr16
rcrb
add
jae
and
lock
or
adc
dec
add
cmpsb
xchg
and
and
jmp
in
cmp
xor
mov
enter
inc
popf
sub
ret
lahf
inc
cmp
jmp
dec
cmpsb
cmp
xorl
movb
out
vmread
popf
ffree
push
cmpb
add
pop
xor
int3
lods
test
jg
in
pusha
jp
add
adc
inc
lea
insb
in
mov
xor
out
push
xorb
insl
fisttps
dec
fwait
ljmp
roll
adc
inc
push
mov
sbb
dec
sbb
movsl
out
cs
mov
xchg
and
xor
mov
jg
out
call
mov
mov
adc
xor
imul
jecxz
shll
pop
outsb
rorl
inc
in
es
loop
xchg
push
cli
jl
mov
jno
test
scas
xchg
test
dec
push
dec
out
inc
sahf
stos
ss
clc
or
adc
ds
ret
sbb
mov
fnstenv
mov
popf
sbb
imul
mov
jmp
sub
mov
xor
jae
push
fucom
cmc
andl
or
int
mov
xchg
dec
mov
rcrl
and
pop
sub
cmpsb
fisubs
test
ss
xchg
rcrl
sub
add
jge
testb
loop
pop
mov
mov
push
nop
cltd
pop
sbb
test
mov
test
shlb
rcll
adc
ss
mov
push
mov
dec
ljmp
inc
mov
inc
les
mov
std
rcl
insb
xchg
jne
mov
lods
jp
cli
cmovae
xorl
sbb
int
leave
cwtl
inc
mov
mov
repnz
in
cmc
in
lcall
lea
pop
sbb
sbb
loopne
dec
xchg
and
stc
or
jo
lret
movsl
mov
lsl
lret
or
adc
imul
scas
paddb
out
mov
or
lea
adc
andb
cmp
mov
adc
daa
xchg
xor
and
add
aaa
loopne
jo
aad
es
mov
inc
roll
xor
pusha
mov
adc
sbb
push
inc
lds
mov
lret
mov
scas
mov
int3
repz
mov
pop
and
or
cmpb
stos
xor
call
leave
pop
lods
pop
xchg
cmp
push
pop
mov
sbb
sbb
cs
shlb
and
shrl
and
pop
or
shlb
sbb
das
in
sbb
bound
and
sub
aas
xor
sahf
fsubs
jge
insb
fldz
dec
sbb
idiv
cld
fidivrl
int3
cs
movsb
out
ljmp
fcomi
adc
mov
clc
sti
add
imul
dec
das
stos
fsub
dec
pop
sub
insl
daa
mov
stos
jnp
lds
test
push
or
xor
fisubrs
stos
mov
into
inc
jae
adc
cld
jns
cwtl
repnz
mov
push
sti
int3
mov
sub
mov
stos
xchg
aas
add
jl
ret
push
sub
lock
jo
aaa
cmp
jp
jbe
xchg
dec
or
sub
pop
lret
lods
push
arpl
aas
out
or
pushf
dec
fs
loop
enter
cmp
clc
push
mov
shrl
and
aaa
pusha
iret
scas
dec
push
sar
lret
andl
iret
jne
lea
hlt
ja
mov
push
popa
push
and
adc
add
and
xchg
xor
movsb
fstpt
inc
lods
adc
cmp
and
dec
pusha
test
xlat
rol
out
int3
in
imul
push
in
daa
cltd
xor
cmpsl
test
iret
mov
push
stos
lahf
addl
aaa
cs
loop
insl
imul
mov
jns
aam
js
inc
fdivl
lahf
ja
sahf
and
testb
fstl
and
jecxz
int3
push
sub
movsb
shll
adc
addb
sbb
psubsb
jecxz
jle
push
cmp
iret
push
pop
ret
push
adc
in
mov
mov
mov
dec
or
pop
sbb
or
sbb
fisttps
jge
lods
inc
rorb
cmp
mov
or
bound
and
sbb
lock
xor
jp
cmp
mov
fnstsw
mov
mov
divb
pop
add
jge
push
adc
jl
xchg
push
mov
xlat
sbb
sub
lods
loopne
aas
cmc
mov
pop
jno
in
fdecstp
and
out
push
inc
in
mov
pop
jle
arpl
shlb
dec
aas
outsl
test
in
and
and
arpl
testl
sar
ret
mov
imul
clc
fadd
push
fldenv
clc
fists
push
adc
or
and
pop
stc
out
outsb
aas
rorb
adc
xchg
shl
cltd
add
lock
adc
or
xor
aad
adc
lods
jecxz
sti
jle
pop
stc
ss
sub
std
sbb
insl
or
pop
push
fstps
add
out
ja
out
adc
add
jmp
sub
div
mov
call
or
mov
pop
jae
notb
cwtl
adc
imul
jnp
lock
data16
inc
inc
lea
mov
mov
and
xchg
lock
adc
jmp
cmp
fiaddl
sub
xor
in
pop
cmp
jecxz,pn
add
jp
ss
mov
cmpsb
adc
mov
shlb
imul
cmpsb
fldcw
inc
out
and
mov
mov
push
not
sub
sti
psllw
push
or
add
cmp
stos
jle
sbb
mov
jle
test
add
pop
movb
imul
adc
hlt
cmp
sub
hlt
mov
push
xlat
xchg
ds
xor
int
enter
xor
push
test
dec
xchg
ljmp
shrb
add
sbb
adc
lds
mov
movsl
out
cli
and
add
jp
jnp
dec
push
cmpsb
dec
out
jb
into
xchg
push
mov
out
fwait
js
test
push
popf
cli
rcrb
or
pop
dec
into
add
mov
rcr
pushf
loop
sub
je
and
inc
jmp
mov
jmp
push
lahf
mov
ja
xchg
xchg
push
jle
push
out
ljmp
or
inc
dec
call
sub
into
dec
popa
mov
iret
xchg
out
fiaddl
jnp
sbb
popa
mov
sarb
inc
idivb
pop
orb
pop
adc
and
xchg
or
adc
inc
mov
pop
pop
fildl
repz
cmp
movsl
mov
mov
xchg
aaa
lahf
ss
adc
in
mov
lods
lret
popa
popa
and
and
gs
sub
add
or
pop
inc
into
pop
lock
popf
adc
in
push
add
pushf
shlb
cvttps2pi
mov
xlat
inc
inc
xchg
cld
icebp
xor
aam
and
or
push
sbb
fildl
push
jne
dec
jae
pop
adc
or
and
loope
pop
or
add
sbb
xor
jo
xchg
or
outsb
add
inc
dec
sti
movsl
jb
sub
movb
push
push
pop
lea
outsl
adc
mov
aam
jno
push
out
sub
cmp
aas
push
jns
ss
adc
mov
daa
mov
mov
test
jg
xor
xchg
testl
stc
add
sub
shlb
movsb
popa
add
das
fwait
add
cltd
imul
fs
repz
jmp
fwait
or
stc
inc
out
es
or
push
ja
ljmp
data16
mov
mov
mov
xlat
xchg
sbb
loopne
mov
addl
fwait
sbb
mov
pop
das
insl
shlb
mov
test
pop
add
jnp
lret
shrb
loope
rorb
ss
inc
dec
addr16
sub
push
icebp
jb
mov
lahf
sub
test
lcall
bound
mov
mov
nop
loope
mov
adc
inc
in
outsl
popf
cmpsb
fsubrs
es
xchg
cmp
add
mov
dec
mov
mov
ds
pop
jge
inc
mov
xor
xor
out
cmpsb
jns
rol
sahf
push
xchg
in
int3
xchg
push
xor
mov
adc
stc
xchg
sahf
fcmovbe
inc
aad
insl
sub
out
mov
push
in
int
mov
fdivs
cmp
rolb
mov
iret
hlt
imul
and
or
push
lret
jbe
sub
lea
jmp
movl
add
dec
xor
movsl
sar
sbb
popl
sbbb
dec
jle
pop
dec
testb
sti
mov
push
hlt
icebp
jo
push
aam
in
lods
in
imul
stos
movsb
test
and
push
jecxz
stos
out
sti
data16
jns
sbb
xor
pop
lahf
xchg
cmp
int
mov
fistl
mov
add
push
jecxz
bound
dec
push
in
xchg
loope
fcomi
flds
push
push
xor
iret
xchg
mov
push
call
loope
push
xor
mov
push
test
pop
fbld
xchg
out
sub
jno
add
in
xchg
je
push
adc
stos
mov
outsb
or
sub
movsl
sub
adc
mov
inc
out
and
mov
xchg
divl
int
push
movsl
adc
iret
mov
and
mov
mov
sti
jg
xor
xchg
cmp
aad
in
aaa
or
or
mov
and
mov
xchg
pop
xor
lcall
xor
adc
out
test
or
sub
pop
xchg
push
aas
sub
out
cmp
icebp
sub
mov
fcmovb
popl
pusha
sub
cmp
and
bound
aad
mov
sbb
aam
jmp
test
adc
mov
cwtl
insb
mov
cmp
ret
lods
insl
jno
int
fwait
jle
gs
std
das
adc
push
cltd
lods
push
mov
push
inc
mov
dec
aas
jl
push
imul
fidivrl
inc
in
mov
add
int
sub
jne
mov
mov
cmp
xlat
fistl
sub
and
and
rclb
std
push
sarb
pusha
je
mov
pop
sub
sbb
scas
insb
lret
rcr
iret
arpl
dec
pop
pop
xor
popa
pop
mov
fdivl
inc
push
jp
push
movsb
in
incb
in
out
cltd
mov
negb
test
daa
sahf
mov
dec
imul
sbb
add
add
mov
mov
aad
test
cmp
and
idivb
mov
jp
mov
xor
jns
cmpsl
and
adc
lock
dec
mov
loope
jmp
sub
add
xchg
push
dec
nop
inc
fidivrs
jmp
test
lcall
jbe
sub
adc
pop
out
pop
rep
mov
cmc
cli
or
jo
jne
xor
aaa
mov
imul
test
movsb
lods
lea
and
jle
call
jle
stos
jbe
mov
loope
std
ss
divb
aas
imul
and
push
stos
or
xchg
neg
cmp
or
mov
jae
dec
add
lds
sub
push
into
mov
andl
fwait
or
jo,pn
pop
xchg
add
pop
in
jge
or
in
dec
std
push
mov
push
xchg
lds
loop
inc
jg
adc
movsl
jno
jne
sbb
adc
push
push
inc
mov
inc
mov
cmp
mov
sti
push
cmp
imul
mov
cmp
clc
inc
or
lahf
addr16
shlb
mov
cmc
push
aaa
sub
rorb
sbb
dec
jbe
or
or
push
mov
xchg
out
xchg
iret
pop
lahf
xor
mov
shrb
jmp
mov
jne
pop
or
pop
popf
shrb
js
add
leave
jmp
jle
test
add
mov
inc
inc
jne
enter
push
mov
fldl
inc
in
shlb
andb
aaa
xchg
aas
cmpsb
sahf
fstpt
mov
dec
int
xchg
out
jbe
fmuls
jnp
sbb
divb
cmc
xchg
xchg
dec
cmpb
pop
add
inc
fwait
cs
loopne
loope
rolb
nop
cmp
dec
imul
add
js
cli
or
dec
cmc
and
pushl
repz
popa
mov
xor
loopne
adc
sti
mov
dec
sbb
imul
sub
lock
xchg
adc
nop
rolb
mov
aad
mov
dec
dec
or
jp
call
ds
xchg
pop
stc
cltd
mov
pop
shll
jp
popf
cmp
inc
pop
sub
shrb
hlt
out
or
sahf
push
rclb
or
outsb
sub
aas
insb
mov
hlt
lods
movl
or
aaa
xor
cmp
fnstenv
int
lret
pop
scas
mov
xchg
jae
sbb
dec
popf
daa
mov
sub
jae
dec
imul
ret
frstor
add
jg
icebp
scas
aas
adc
js
push
out
test
stc
pop
loop
jnp
test
xchg
lock
inc
outsl
std
pop
lea
mov
int
iret
push
jecxz
icebp
aaa
fdivrl
sbb
popf
outsb
popf
sar
adc
cmc
idivb
loope
cmp
andl
stos
shll
jne
jecxz
pop
loopne
lock
adc
dec
dec
jb
fimuls
jl
dec
hlt
dec
xor
pop
test
sub
cwtl
int3
cld
outsl
roll
ljmp
adc
inc
test
inc
clc
call
sub
mov
sbb
xchg
push
adc
xchg
mov
mov
repz
fnsave
dec
cmpsb
pop
shl
pop
cmp
nop
leave
mov
outsb
popf
in
scas
in
test
movsb
out
pop
clc
popa
xchg
movsb
fwait
shrl
dec
sahf
lods
inc
jl
and
xchg
or
daa
lea
adc
fimull
faddl
addb
cmpsb
je
mov
push
clc
pop
adc
pop
cmpsl
xchg
inc
sub
loope
jae
add
sub
jae
xor
mov
imul
sbb
jmp
out
jmp
push
mov
ja
adc
mov
mov
mov
and
mov
out
mov
pop
test
or
lods
test
jle
push
mov
push
insl
adc
rcrl
mov
adc
mov
xchg
inc
mov
aaa
xchg
dec
sub
into
aas
xor
aad
cmpsb
cmp
cmc
push
pop
cmp
sbb
addb
daa
xchg
mov
loope
scas
leave
aad
pop
pop
mov
inc
mov
shrb
in
shll
inc
rcl
test
js
popa
ljmp
dec
push
out
mov
sbb
in
jb
push
inc
inc
cmpl
adc
hlt
inc
sub
scas
fildll
das
jnp
mov
sbb
js
jmp
cld
scas
andl
outsl
or
xchg
and
movsb
xor
hlt
lret
and
inc
add
jnp
insl
call
adc
fildll
int3
push
cmp
jp
or
sub
or
movsl
loop
inc
mov
inc
enter
ljmp
in
data16
cmp
mov
in
enter
fsubrs
shlb
orl
jp
push
or
std
pop
mov
and
clc
jmp
fs
mov
loope
adc
in
fcoml
cld
mov
cli
xchg
dec
pop
ljmp
adc
leave
or
xchg
fnstcw
add
jnp
rolb
not
into
push
fists
cmpsl
xor
pop
test
nop
jae
xchg
mov
pushf
in
mov
repnz
bound
jae
cmp
inc
jg
mov
pop
fwait
stc
popf
adc
pop
sahf
jbe
mov
xor
lods
in
mov
xor
dec
mov
dec
es
popa
mov
push
sbb
mov
cmp
jne
repnz
inc
adc
sbb
push
fwait
push
dec
rorb
das
cmp
inc
push
mov
aaa
orb
lret
sysret
icebp
jmp
pop
mov
pop
outsl
and
sub
fiadds
ficoms
into
and
stos
leave
or
xlat
mov
xchg
test
mov
loope
sub
mov
push
add
xchg
popf
dec
in
ljmp
xor
xchg
sbb
imul
push
cld
adc
icebp
scas
test
xchg
es
sub
xor
lods
mov
mov
int
sub
or
sub
outsl
jb
test
pusha
test
sbb
inc
mov
roll
dec
enter
mov
jmp
test
or
loopne
sbb
mov
push
mov
adc
cmpsb
jg
and
in
or
clc
push
dec
bnd
inc
xor
add
mov
mov
inc
inc
jbe
in
mov
push
movsl
rclb
pop
lahf
inc
dec
and
mov
jno
xchg
add
dec
ss
sub
xor
popf
add
add
xor
sub
jmp
addr16
mov
pushf
pop
popa
ja
enter
jo
or
lods
sub
mov
fmul
lea
cs
add
jo
cmp
cmp
xchg
imul
gs
rolb
sub
dec
test
jmp
dec
inc
xchg
aas
orb
push
movsl
notl
scas
sarb
daa
lods
aad
ret
add
gs
mov
push
lret
js
enter
push
mov
jo
je
and
aaa
xchg
and
jo
xor
dec
js
je
fdivrs
dec
cmpsb
adc
lret
pop
adcl
cltd
adc
inc
repnz
das
daa
push
xor
push
mov
or
push
icebp
xor
and
jno
mov
inc
fwait
enter
mov
das
sub
notb
pop
mov
aaa
push
sbb
jg
mov
and
jbe
or
pop
jb
outsl
arpl
mov
dec
js
ret
cs
ja
lods
or
cmpsb
repnz
adc
push
rcr
sahf
or
sub
shl
sahf
xor
mov
push
cmpl
aam
int
imul
cmp
pushf
sub
das
inc
sti
imul
mov
inc
cmp
xlat
aad
js
sbb
bound
enter
xchg
cmp
mov
outsb
addr16
jmp
mov
xor
insb
subb
in
aas
push
sbb
jo
in
add
sub
sub
adc
orb
bound
jno
in
push
dec
jnp
inc
inc
push
mov
mov
xchg
jp
or
arpl
cmp
jl
mov
adc
inc
xor
add
xor
mov
inc
cmp
sub
ja
or
cmp
and
xchg
push
cs
sbb
test
sub
ss
add
add
cmp
add
or
fisubrl
test
mov
scas
sub
pop
jl
cltd
lea
lock
lods
cmpl
mov
int3
outsl
lret
sub
cmp
insb
loope
sti
jno
push
xchg
push
cs
xor
pop
push
or
pop
shlb
lods
add
nop
xor
or
xchg
mov
xchg
xor
add
popf
cltd
data16
test
dec
pusha
dec
lods
hlt
cmc
sub
adc
or
fadd
es
icebp
and
mov
in
popa
ljmp
test
mov
push
pop
and
cld
inc
insl
mov
test
add
aad
xchg
lods
and
notb
call
stos
and
dec
movb
rcrb
popf
es
cs
dec
addb
inc
aam
mov
mov
lds
out
mov
or
cltd
add
inc
cmp
push
jg
addr16
inc
xor
pop
jp
aaa
mov
ljmp
xchg
adc
or
sbb
test
dec
dec
push
stos
lret
imul
pop
aas
call
sub
push
imul
inc
std
iret
sbb
mov
mov
push
lock
sahf
pop
les
sub
ss
add
sbb
pop
or
push
mov
add
in
icebp
stos
push
jle
movsl
lret
xchg
pop
fidivl
out
in
dec
xor
lods
pushf
adc
push
loope
nop
push
cmp
pop
adc
and
pop
xchg
rolb
mov
repnz
bound
jns
mov
nop
xor
push
xor
lcall
cwtl
jno
sti
mov
adc
jecxz
cmp
adc
shl
cmp
repz
fdivrs
and
or
clc
aad
pop
push
inc
orb
scas
mov
in
pop
cld
or
popf
sub
pop
pop
add
mov
cltd
sub
lds
imul
xchg
dec
fstp
mov
lods
jp
insl
cld
cmpsb
push
aaa
add
sbb
aad
mov
jns
arpl
adc
adc
pop
jecxz
cmc
sub
pop
pop
cmc
add
insb
ret
repz
das
ss
jnp
cmpsl
dec
movsl
xchg
dec
sbb
insl
repnz
aad
bound
jmp
mov
popf
and
xchg
pusha
xchg
inc
sub
les
mov
mov
jl
lock
mov
gs
and
jp
out
sbb
cs
outsl
cmp
push
push
mov
add
pop
imul
into
and
cmp
cltd
mov
in
cltd
mov
push
ret
inc
sub
mov
roll
stos
mov
push
jmp
lods
incb
cli
icebp
cmpsb
mov
iret
mov
mov
adc
movsb
mov
pop
aam
test
mov
or
sub
and
jo
pop
mov
lret
cmp
adc
sbb
fistl
sbb
jmp
inc
xor
ss
pop
mov
popa
mov
jg
das
repz
out
adc
pushf
es
sub
sti
lods
ljmp
jle
dec
imul
cmp
popa
mov
adc
jecxz
xchg
out
fcmovbe
push
test
insb
fisttpl
ret
xchg
pop
fs
pop
imul
dec
outsb
mov
pop
xchg
or
leave
add
jl
movsb
lret
mov
test
pop
or
mov
rcr
mov
stos
cmpsl
popa
cmpsb
mov
ds
ljmp
loope
fwait
repz
sub
adcl
mov
xchg
shlb
test
std
ja,pn
push
pusha
ret
push
cmp
fidivrs
push
pop
jb,pt
dec
cmp
cmpb
sbb
popf
pop
call
mov
push
shrd
dec
push
mov
xchg
insl
scas
cmp
dec
fildll
cmpsb
mov
mov
or
xchg
sub
scas
fdivrl
jp
in
pop
sbb
xor
pushf
and
push
lret
lret
insb
fsub
in
fisubrl
mov
fimuls
fninit
or
stos
cmpsl
jns
push
sub
repnz
sub
xchg
clc
out
sub
jg
aad
testb
mov
rcll
std
insl
fcompl
nop
inc
cmp
jl
cmc
or
lret
test
sbb
aam
shrb
xor
cmp
cmpsl
xchg
pop
movsl
xchg
adc
stos
outsb
jnp
cli
xchg
pop
test
jns
mov
add
out
cs
scas
dec
test
dec
ffree
mov
idivb
scas
pop
sub
and
push
sar
pushf
sbb
shll
rcl
dec
leave
xchg
je
scas
out
rorl
push
push
cld
mov
fldl
mov
xor
or
les
out
mov
push
lods
or
push
int
mov
test
adc
push
mov
xchg
mov
ficoms
out
cmp
add
pop
xchg
fldcw
into
inc
jp
add
mov
stos
push
ffree
stos
sub
cltd
jl
daa
aad
pop
mov
sahf
out
les
ds
adc
ljmp
adcb
arpl
or
ljmp
sti
xor
lret
imul
pop
xorb
pop
pop
push
mov
loop
aas
orl
cmpsb
mov
icebp
jne
aam
rcl
add
sti
ljmp
mov
pusha
lret
inc
ds
fcompl
ret
jno
ror
outsb
sub
ret
jo
cltd
js
stos
xor
into
or
icebp
xchg
add
mov
outsl
pop
scas
mov
jb
ljmp
mov
fiadds
pop
fisttpll
ret
xchg
jno
xchg
cwtl
lret
lods
add
dec
shlb
sbbb
lds
or
mov
mov
mov
clc
loope
mov
jae
xchg
or
adc
insb
xor
xchg
mov
out
fcoms
inc
pop
xor
inc
aam
movsb
push
pop
pop
xor
cmp
fs
cmpb
int
adc
mov
lret
pop
test
pop
daa
stos
sti
cs
out
movsl
imul
push
cmc
js
imul
sub
pop
adc
repnz
xlat
push
aaa
dec
aad
popf
and
cmp
adc
mov
lods
cmp
in
jle
mov
int3
scas
jp
xlat
mov
mov
lea
pop
scas
mov
pop
xor
pop
push
dec
lods
jmp
mov
cs
bound
lods
xor
nop
sbb
or
aas
mov
repz
iret
push
bound
and
mov
mov
add
sbb
nop
or
ficompl
inc
mov
repz
pop
dec
iret
push
shlb
cmpsl
xlat
and
movsl
jo
xchg
cmpsb
add
pop
jo
cwtl
add
cmp
sbb
sbb
inc
xor
cwtl
testl
jecxz
scas
mov
fdivl
xchg
dec
adc
xor
scas
jmp
lds
jbe
sbb
js
xchg
pop
call
jle
stc
sarl
pop
subb
and
shlb
test
adc
test
mov
arpl
pop
dec
lods
hlt
testl
inc
je
inc
mov
mov
pop
and
mul
add
les
loop
movsb
sbb
jmp
imul
jbe
jg
push
sub
rorb
pop
clc
mov
fistpll
jle
sarl
cmpsb
cli
and
clc
aad
and
push
std
dec
dec
popa
sub
xlat
pusha
icebp
outsb
in
mov
sbb
xor
out
loop
xchg
jno
mov
jge
mov
sbb
xor
pop
je
or
js
pop
repz
jne
lea
mov
sbb
mov
xchg
out
or
fwait
push
stos
or
orl
xchg
jmp
and
sbb
ret
ja
flds
dec
add
jno
pop
clc
mov
mov
scas
jl
mov
decb
fs
mov
sub
rcrb
pop
pop
mov
cmp
aas
jne
in
incl
mov
xchg
stc
mov
clc
comiss
or
movaps
xor
pop
and
or
inc
fwait
mov
dec
and
out
xchg
add
ror
std
sub
push
lods
or
fstpt
add
in
mov
leave
popa
ljmp
jg
addb
hlt
xchg
movb
mov
adc
pop
jp
sbbb
mov
xor
jns
push
mov
add
inc
sub
shrl
fs
aad
imul
push
mov
mov
ret
fxch
addr16
pop
imulb
dec
shrl
jbe
imulb
jns
lret
sub
mov
insb
pop
inc
cs
xchg
adc
js
leave
cltd
sub
push
mov
incl
cmp
dec
push
jg
inc
pop
fidivrl
jp
notl
rolb
and
cmp
cmpsb
mov
mov
add
test
or
in
clc
cwtl
jae
jb
jbe
jno
push
inc
cli
mov
or
sarl
add
lcall
add
add
push
imul
adc
popa
adc
sahf
shll
jp
or
repnz
jmp
jecxz
add
lret
mov
push
aam
or
movsl
xchg
push
popa
pusha
fcompl
pop
aad
adc
push
and
mov
cmpsl
pop
into
int
imul
les
cmpsl
push
movb
jge
sbb
ret
loope
clc
xlat
push
xchg
inc
inc
lret
aas
xchg
xor
adc
push
int3
add
dec
movsb
shll
ret
pop
jo
popf
les
pop
cld
lods
outsl
in
testl
push
call
out
push
cs
fdivrl
lcall
inc
pop
aam
clc
fwait
mov
int
xor
adc
ja
mov
cwtl
test
lods
pop
in
sub
push
sub
xchg
inc
push
fimull
out
push
sub
xchg
cltd
cmc
loope
adc
mov
jne
push
ss
fwait
and
das
lea
shufps
test
pop
push
out
shlb
or
xor
enter
cli
test
mov
test
sub
xor
fistps
dec
add
stc
fidivl
out
push
sub
inc
leave
mov
inc
fldenv
xor
xchg
mov
lcall
mov
sbb
lahf
int3
aam
test
lds
imulb
mov
and
loopne
testb
ret
push
inc
enter
lret
insb
sbb
push
pop
pop
mov
and
js
fidivl
lock
adc
jnp
push
out
sbb
add
je
clc
xlat
push
imul
imul
mov
das
dec
fsubrp
jmp
add
les
arpl
daa
ja
dec
cmpsl
fidivrl
test
scas
sahf
mov
mov
mov
pop
out
dec
dec
xor
pop
pop
jl
in
sub
mov
push
dec
popa
mov
sarb
enter
stc
bound
mov
pusha
and
inc
xchg
mov
add
lea
mov
push
fistl
jno
aas
mov
cmpsl
jnp
popf
cmp
lahf
push
mov
pop
sub
lahf
outsb
ss
outsl
bound
in
repz
mov
scas
mov
incb
mov
ret
fcmovnb
fldenv
mov
stos
subl
jno
inc
and
xchg
jno
lods
out
mov
in
cmc
outsb
or
pusha
enter
fnstcw
aam
in
hlt
fists
pop
jge
mov
push
fidivrl
sbb
imul
xchg
pop
divb
inc
int
add
outsl
and
aam
fdiv
insb
fidivrl
sub
adc
xlat
stc
mov
gs
sahf
int3
into
xor
out
adc
mov
ret
push
xor
fnsave
cmp
movsl
imul
pop
aas
les
hlt
lahf
or
or
mov
ds
int
inc
mov
rcr
cmpsl
mov
mov
call
and
and
xor
test
bound
insl
data16
jmp
mov
in
cmp
inc
jp
sub
aad
sbb
or
xchg
and
cmpsb
xchg
jo
gs
popf
cli
mov
loopne
and
insb
jno
dec
movsl
cmp
insb
jp
imul
ret
mov
out
pop
test
xchg
dec
test
mov
mov
add
int
cmc
mov
sahf
dec
pop
pop
pop
ja
enter
clc
iret
dec
push
rolb
xchg
inc
mov
push
and
sbb
ss
mov
mov
add
inc
xchg
outsl
jbe
inc
dec
pushl
push
mov
lock
int3
xchg
xchg
and
das
outsl
mov
and
pop
xchg
out
pop
data16
std
test
jns
ret
mov
leave
jecxz
push
lahf
sbb
add
lahf
cli
jbe
jmp
fwait
rol
pop
imull
ljmp
xchg
adc
add
daa
xor
or
les
cmp
inc
push
subb
pop
xor
cmp
dec
xchg
or
pushf
stc
add
popa
and
gs
cmp
sbbl
pop
popa
push
in
daa
shlb
xor
cld
sar
dec
insl
inc
int
mov
lret
mov
add
pop
in
leave
pop
cmpsl
or
sahf
data16
or
sub
mov
sahf
adc
lea
cmp
bswap
jae
add
fmull
nop
pop
xchg
in
lock
adc
mov
mov
orb
cmp
pop
stc
sahf
push
lods
add
cmp
mov
jle
add
ja
sti
jb
sbb
push
sub
inc
lcall
mov
xchg
sarl
les
jp
or
cld
cltd
fidivrl
shl
or
stc
insb
notl
lods
add
mov
xchg
xchg
mov
jnp
adc
vmovlps
int3
xchg
and
ljmp
mov
xchg
and
adc
iret
shl
pop
add
retw
mov
push
subl
neg
inc
or
xchg
xor
into
rclb
adc
xchg
adc
push
fbstp
fildl
and
les
jo
aam
icebp
pop
push
icebp
fiaddl
mov
dec
dec
in
push
adc
jmp
aas
mov
sub
jo
dec
cmp
jb
cmpsl
js
sbb
push
aas
xchg
repz
stc
movsl
andl
jns
xor
xor
push
nop
faddl
lea
push
jecxz
scas
arpl
or
test
aaa
repnz
dec
aas
out
pop
call
js
lods
mov
sbb
sub
inc
sbb
jbe
lret
repnz
or
imul
hlt
xchg
or
lcall
dec
lahf
scas
movsb
mov
xor
loop
sbb
mov
ljmp
andb
push
mov
push
cmp
cmpsl
push
hlt
aam
sbb
mov
inc
sub
xchg
jge
nop
sub
adc
loopew
lea
pop
cltd
mov
aas
repz
pop
fdivrs
pusha
inc
adcb
sahf
adc
pop
shll
dec
or
ss
les
jmp
jns
arpl
daa
jmp
lea
and
dec
inc
out
dec
jae
repz
add
int3
push
adc
push
jno
mov
insl
cltd
enter
and
adc
loope
mov
xor
in
js
nop
mov
or
push
xor
or
xor
loopne
enter
loope
jmp
clc
pop
ljmp
insb
push
mov
sbb
dec
mov
or
cwtl
aaa
les
sbbb
cltd
mov
loopne
inc
jl
pusha
cmp
jecxz
cmp
pop
and
je
xchg
sub
in
rcl
into
jl
and
pop
fisttpl
bound
ja
and
inc
mov
outsl
and
imul
jecxz
mov
dec
stc
fidivrl
insb
and
xor
ss
mov
sahf
sbb
and
inc
pop
cmp
dec
aad
das
ss
outsl
mov
mov
and
sahf
jno
mov
faddp
dec
dec
aad
mov
pop
cmp
fsubr
mov
mov
adc
addr16
jmp
sub
out
cmpsb
rcrb
pop
ljmp
jbe
je
mov
jo
jno
sub
jne
addr16
scas
and
sahf
lea
adc
push
pop
fistpll
into
jp
lcall
jno
pop
arpl
jmp
jno
xor
out
stc
mov
jmp
sbb
cld
jnp
loop
dec
dec
jae,pn
add
mov
mov
sbbl
cmpsl
add
test
pushf
ret
stos
movsb
or
cmp
nop
ja
cmp
ret
cld
jns
mov
xlat
adc
pushf
arpl
sti
and
pop
test
sahf
xor
inc
sbb
inc
sbb
andb
pop
cwtl
mov
xchg
xchg
and
jnp
cld
outsb
push
mov
adc
mov
stos
cli
push
add
jnp
jle
push
data16
xchg
mov
mov
ss
ljmp
loop
sub
adc
xchg
jecxz
pop
and
loope
cmc
xor
sahf
call
add
bound
and
pop
outsl
arpl
mov
rcrl
sbb
imul
arpl
stos
jne
call
cli
dec
imul
loop
push
mov
jns
es
lcall
pop
push
pop
pop
outsl
fistpll
jnp
add
lods
pop
iret
pop
inc
adc
jne
in
and
mov
clc
in
in
pop
call
adc
pop
pushf
imul
adc
fstpl
pop
push
sub
mov
mov
pop
and
cmp
out
add
dec
nop
pop
cmp
movsl
jns
inc
divl
jecxz
shr
stc
lret
sbb
inc
mov
push
lds
sti
shl
movsl
sahf
pop
cmp
inc
pop
jbe
arpl
cmc
mov
in
jle
adc
cmp
pop
jae
xor
ja
flds
mov
jle
jae
jae
jge
pop
add
mov
push
rol
loopne
shl
ss
test
pop
popa
mov
ficompl
sbb
nop
and
sbb
shl
nop
cmp
bound
cli
lods
sub
mov
jecxz
push
add
adc
mov
leave
mov
mov
adc
andb
and
push
or
cld
sbb
ds
cld
mov
ljmp
leave
out
and
aas
stc
dec
inc
mov
cli
inc
shlb
in
icebp
nop
or
clc
imul
lods
xchg
dec
xchg
mov
and
and
fldt
ficompl
ds
inc
cmc
sahf
jno
adc
xchg
mov
fmuls
sbb
jp
pop
lods
push
sub
jecxz
pop
mov
neg
call
mov
mov
adc
clc
jmp
xchg
push
leave
call
icebp
mov
pop
scas
pop
aad
scas
in
push
push
lods
add
cmp
imul
inc
add
jmp
sbb
stos
pop
sbb
xchg
jp
inc
mov
roll
dec
dec
xorb
mov
pusha
stc
insb
std
loope
push
mov
xchg
mov
jbe
mov
add
lock
vaddsubps
daa
and
xchg
sarl
mov
call
into
sub
loopne
sti
lods
lcall
mov
pop
inc
xlat
pop
push
xor
pop
popf
sbb
int
jb
fdivrl
cmc
or
jno
roll
mov
pop
cmpsb
mov
mov
scas
cmp
out
int
popa
mov
test
sarb
mov
rolb
mov
out
sub
ds
mov
out
jae
xor
repz
lret
pop
imul
sub
jnp
jb
adc
jae
push
xor
xchg
fs
inc
or
lods
add
adc
pop
push
push
aas
jns
fnstsw
xor
or
pop
xchg
push
mov
mov
inc
sbb
add
jno
push
movsb
test
xchg
mov
cmpsl
cmp
cmp
sbb
xchg
dec
adc
mov
hlt
mov
sbb
cmp
mov
add
pop
xor
test
xchg
ja
call
dec
xchg
cmp
xchg
lds
lcall
push
dec
add
ss
rol
sub
fcoml
add
sbb
mov
fndisi(8087
sarl
jl
mov
cmp
mov
add
push
jecxz
popf
mov
les
pop
xchg
xchg
cmp
adc
sub
jmp
dec
jbe
movsl
out
fwait
sahf
lret
xchg
sub
dec
sbb
bound
push
daa
jge
mov
pop
xchg
nop
fistpl
pusha
mov
mov
add
mov
div
cmpsl
lods
adc
stos
add
sbb
enter
lret
das
ljmp
sbb
jb
push
mov
ficoms
in
push
out
int
roll
repnz
sub
imul
jnp
in
les
arpl
fucomp
out
push
or
or
xor
cmp
les
add
test
xor
pop
js
mov
cmp
add
cmpsb
mov
cmp
adc
add
lcall
cmpb
pop
cmc
pop
jb
pop
das
xchg
fsubrl
xchg
movsb
mov
jns
cmc
cwtl
mov
enter
lods
aam
mov
movsl
aaa
paddd
loope
xor
jg
je
push
inc
lock
lcall
fcomps
pop
and
int
idivl
divl
dec
imul
push
repz
xchg
fwait
sbb
pop
push
jbe
sbb
clc
out
xor
jbe
push
insb
cmp
pop
frstor
push
leave
mov
jnp
xlat
ret
pop
aam
xor
arpl
sub
mov
pusha
mov
imul
add
cmpsl
xor
cmpl
inc
mov
out
movsb
in
push
aad
sbb
sub
jmp
dec
jnp
lahf
mov
adcl
lahf
ficomps
and
dec
out
inc
sub
mov
lea
outsb
cltd
popa
aas
adc
mov
pop
les
test
jmp
pop
mov
sbb
ficompl
in
adc
xor
xchg
lock
cwtl
jp
nop
jae
les
jmp
movsl
adc
outsl
sub
jle
arpl
addr16
push
aad
addr16
into
dec
je
cmp
rolb
les
push
push
clc
lds
mov
xorl
loopne
lds
and
mov
add
test
mov
add
xor
sub
icebp
pop
in
dec
mov
popf
ret
cmp
sarl
adc
mov
or
lahf
and
daa
xchg
sub
enter
or
jbe
mov
pusha
out
iret
cs
cmp
or
vpaddusb
or
ja
call
std
jge
pop
ficomps
push
dec
imul
and
inc
cmp
or
pop
lock
lock
mov
movsl
add
lcall
cmp
fnstenv
xlat
mov
cmpsb
inc
call
xchg
pushf
fucomip
jge
cmpsl
xor
dec
bsr
mov
xor
mov
push
jo
sub
mov
jno
lods
lea
loop
jns
es
jb
mov
push
popa
sahf
into
sbb
adc
fisttpl
clc
sub
add
out
jge
adc
push
ja
mov
roll
fistl
jae
xchg
in
vcvttss2si
jbe
pop
in
cmpsb
or
shl
jmp
rolb
lret
adc
xchg
outsl
insl
shrl
pop
mov
jmp
or
popl
fnstsw
fidivrl
push
dec
sbb
mov
je
setno
mov
sti
add
lock
decl
and
push
movsb
shlb
pop
movsb
ret
push
rolb
lret
lret
push
dec
jmp
adc
cmc
dec
mov
jge
pop
and
imul
outsb
lahf
sub
mov
pop
movsb
cwtl
data16
fidivl
lock
lret
sbb
mov
int3
iret
fcoml
xchg
jnp
inc
push
or
lea
mov
mov
cmc
pusha
mov
mov
in
jne
push
and
lcall
push
and
dec
movsl
std
rclb
fsubl
mov
icebp
xchg
xor
out
cmp
push
fs
xor
testb
add
sbb
div
adc
shlb
ret
cs
mov
jecxz
inc
add
aam
addr16
pop
aam
mov
mov
cwtl
push
js
inc
inc
clc
popf
cmp
lret
pop
es
scas
sub
cmp
testl
sub
mov
in
mov
mov
mov
ret
sub
ffree
push
mov
add
push
jne
mov
xchg
pop
ret
mov
xchg
stc
mov
mov
dec
xchg
gs
sbb
lretw
adc
or
xor
jge
mov
faddp
sub
cltd
or
js
mov
mov
pop
xor
les
add
cmp
aaa
scas
in
and
in
popa
imul
inc
test
adc
in
mov
gs
iret
dec
ljmp
lock
cltd
jnp
or
sarl
pop
sbb
shll
call
aaa
insl
xchg
inc
dec
pop
test
aaa
mov
xor
cmova
add
sbb
and
push
mov
xchg
jge
or
leave
lock
mov
push
insl
push
xor
jecxz
push
mov
sub
outsl
mov
jo
shll
iret
sub
out
outsl
sbb
pop
xor
repnz
xor
jno
adc
loope
lret
xor
fdivs
push
pop
aaa
or
xchg
cmpb
mov
add
sub
and
into
test
mov
xor
hlt
mov
pop
and
ret
push
and
ljmp
fimuls
sub
std
xchg
out
sbb
call
pop
int3
sahf
sar
bnd
or
les
xor
cmpsl
inc
popf
fcmovnbe
sarb
aam
fsub
sbb
push
or
std
shll
sub
xor
insl
ret
lahf
mov
repz
jg
adc
or
mov
push
mov
into
pop
mov
fxch
cmp
aas
les
das
jnp
sub
test
outsl
in
or
push
hlt
jbe
pop
out
sub
and
out
pop
stc
cwtl
add
dec
mov
adc
or
loop
call
or
repz
data16
push
outsb
mov
mov
pop
sub
lds
jge
repnz
xor
es
xchg
daa
out
dec
adc
mov
and
mov
repz
jne
in
fistps
inc
pop
int3
dec
xor
mov
and
aas
jp
cmp
xor
inc
xchg
cli
clc
and
adc
das
mov
mov
sub
adc
fnsave
cmp
jle
iret
mov
mov
mov
mov
test
movsb
aad
cmc
js
in
test
les
pop
sbb
sub
test
loopne
and
xlat
imull
mov
outsb
lea
dec
pop
mov
rorl
push
psllw
mov
leave
rcll
hlt
cmpsl
std
adc
push
mov
inc
mov
cltd
cmpsb
add
fnsave
pop
in
or
in
inc
enter
sbb
mov
mov
lds
xchg
dec
mov
lret
cmpl
mov
cmp
mov
jo,pt
adc
pop
repz
jge
cmpsb
inc
loop
cmp
inc
or
mov
jae
fucomip
inc
mov
stos
addl
js
xchg
pop
xor
fdivrl
cs
hlt
xlat
dec
adc
repnz
mov
test
loop
mov
lret
and
daa
popa
sbb
cmp
std
cmp
push
test
test
xchg
pusha
data16
testb
fwait
sbb
cs
adc
or
pop
and
add
mov
adc
adc
cmp
dec
sub
aam
enter
mov
adc
mov
and
inc
int3
test
pop
pushf
aad
jnp
je
dec
sbbl
sahf
xchg
and
fs
sub
mov
mov
mov
lret
push
out
cmpsl
push
lds
outsl
push
into
imul
punpckhwd
xor
pop
aad
stos
push
sahf
sbb
cmp
inc
xchg
pop
rorb
testl
push
lea
push
cld
lods
adc
xor
mov
lcall
lret
cltd
xor
push
dec
jno
inc
fdivr
js
jb
adc
mov
leave
test
push
cmp
sub
sti
in
mov
mov
sub
mov
in
jo
cmpl
test
into
ror
inc
lcall
inc
int3
mov
cmp
hlt
dec
xor
call
cmpsl
or
scas
mov
mov
aas
movsl
mov
cltd
jg
adc
lods
mov
shll
rclb
jbe
aad
push
sbbl
out
out
jno
movsl
arpl
pusha
and
fmull
scas
fimuls
jo
push
and
mov
out
sbb
and
inc
adc
lods
repnz
cltd
or
pop
push
stos
jge
int
hlt
imul
dec
fcmove
rol
jbe
stos
pop
sub
aam
mov
mov
int
fstl
push
and
in
jne
imul
and
lea
test
push
and
cli
icebp
aaa
or
jns
std
add
cmp
jge
hlt
adc
sbb
es
pop
je
xor
sarl
xchg
add
jg
js
in
scas
call
ja
inc
xlat
sub
sbb
adc
pushf
aad
cmpsb
xchg
mov
cmpsl
pop
sub
push
jle
xor
mov
xor
gs
jne
aas
cmp
xorl
cmp
dec
cmpsl
xchg
xlat
imul
xor
sbbl
add
adc
lcall
pop
mov
loop
bound
sub
pop
adc
das
push
je
jp
add
pop
or
hlt
ja
and
int3
addr16
ja
push
mov
dec
inc
add
sub
sbb
gs
shrl
cmp
adc
clc
or
jo
movsb
xchg
xchg
pop
jl
sbb
inc
arpl
cmp
shrb
icebp
shlb
scas
xchg
arpl
sub
stos
sti
cmp
out
mov
enter
repz
sbb
aad
cwtl
and
shl
jg
push
cmp
loopne
divl
adc
or
cmp
push
adc
lahf
cmp
testb
cld
xor
add
sub
xlat
xor
push
mov
addb
scas
add
inc
or
xlat
lcall
iret
arpl
shll
js
fdivr
mov
pop
daa
add
out
inc
dec
in
adc
lea
mov
push
hlt
jg
addr16
ja
pop
mov
inc
lods
pop
xor
sbb
push
jl
dec
loopne
cli
inc
dec
rcrl
mov
iret
or
mov
jmp
inc
lock
mov
pop
sub
dec
test
fcoms
imul
cmp
out
aad
and
and
xor
shrb
daa
pop
fisubl
sbb
insb
fldl
rorb
sub
cwtl
xchg
out
fistl
xor
fmuls
mov
daa
push
jg
movsb
inc
cmp
xor
jp
daa
or
daa
jne
imul
push
mov
data16
jno
movsb
and
shrl
inc
js
mov
xlat
adc
fisttpll
sub
mov
ret
adc
and
push
mov
sub
faddl
mov
aam
xor
pusha
xchg
and
divb
mov
lods
enter
cld
add
pushl
cmp
fisttpll
add
push
je
inc
cmpsb
push
push
or
and
push
aas
jbe
push
xchg
movsl
dec
outsl
mov
pop
pop
daa
sub
xor
fdivrs
adcl
jge
xor
outsl
push
adc
jl
sbb
sahf
push
cmp
mov
cmp
pop
sbb
out
imul
aaa
dec
enter
push
xchg
dec
cmpsl
pop
jp
jmp
and
push
mov
popa
mov
push
loopne
mov
sbbl
mov
out
cmp
sub
dec
mov
pushf
mov
shrl
xchg
in
jge
lcall
lods
cmpsb
push
adc
mov
fadd
ficoms
jge
not
sbbb
fbld
lods
mov
adc
scas
adc
outsl
jno
orb
dec
addb
lret
mov
cmp
fs
sub
adc
sbb
mov
mov
xor
xor
rorl
inc
fdiv
sub
loopne
and
mov
adc
test
and
push
shll
adc
mov
andl
aam
scas
mov
xor
cmp
jp
in
pop
pusha
sti
dec
dec
cmpsl
pop
out
add
imul
lock
xchg
dec
push
js
inc
scas
cmp
dec
push
mov
movsb
gs
pop
ret
imul
ljmp
clc
or
xor
in
pop
add
dec
and
rcl
stos
xor
ret
ret
decl
inc
loop
xor
mov
mov
mov
pop
push
jle
pop
scas
pop
mov
jns
es
mov
outsl
cmp
jae
pop
sbb
into
mov
cmp
repnz
out
mov
mov
pop
sahf
adc
mov
jmp
adc
inc
pop
sbb
scas
cmp
mov
fcos
mov
jns
std
mov
or
arpl
cmp
or
mov
xor
pop
and
push
mov
pop
cmp
lcall
bound
or
loop
lea
xor
mov
xor
pop
xchg
mov
mov
sub
jle
clc
jne
sub
in
cmp
inc
mov
push
divl
cld
cltd
test
push
sbb
ja
les
into
std
ret
sub
ret
and
mov
subl
ds
clc
fnsave
int
loope
mov
shl
loopne
jbe
aaa
pop
cmpsb
stc
xor
xchg
cmc
jmp
int
into
jns
jb
mov
mov
repz
cs
sub
nop
and
in
jmp
data16
and
pop
add
aas
or
jecxz
int3
ds
mov
scas
jmp
or
sbb
adc
xchg
test
hlt
mov
sbb
testb
cmp
test
icebp
shl
popa
fadd
in
sub
sarl
jns
and
addl
pop
leave
pop
push
pop
pop
mov
lea
std
inc
int
mov
andl
hlt
outsb
mov
ljmp
lret
dec
inc
stc
loopne
movsb
jecxz
bound
jns
mov
ja
adc
test
lret
jbe
xchg
add
sbb
fnstcw
sub
lret
cmp
and
mov
out
and
mov
out
rorb
imull
mov
add
jecxz
sahf
adc
mov
and
push
adc
in
loopne
lcall
jp
inc
call
xchg
icebp
mov
cmp
xlat
xchg
jg
adc
dec
cld
push
mov
xor
jp
and
pop
add
xor
and
pop
ret
in
loop
jmp
rcll
xchg
ror
jns
jg
testb
push
mov
out
sbb
dec
inc
or
sbb
gs
jno
sub
imul
pop
cmp
xchg
jno
pop
adcb
mov
xor
inc
cmpl
sub
cld
mov
jns
or
out
lret
inc
ds
mov
add
mov
jae
cmpsl
jmp
lret
add
lret
js
mov
jle
mov
pop
adc
xchg
inc
pop
imul
mov
das
or
imul
or
pop
test
sbb
in
push
add
test
out
je
mov
pop
and
psrld
popa
push
jecxz
cmc
outsl
aas
fcomp
push
je
popa
pop
adc
aaa
in
mov
cli
leave
or
pushf
xchg
sbb
je
dec
pop
stos
push
mov
mov
add
add
xchg
fs
sub
jo
add
xchg
in
call
mov
in
sbb
jge
cli
cltd
int3
pop
dec
mov
das
roll
jb
or
sbb
arpl
push
dec
cmpsb
and
sbb
nop
int
push
movsb
outsb
cmp
jnp
and
pop
lret
add
cmp
mov
mov
or
rorb
lret
xchg
inc
sub
xor
test
adc
frstor
pop
push
sbb
iret
dec
data16
int
das
movsb
jp
notb
inc
andl
mov
das
cmp
xchg
mov
push
adcl
mov
scas
adc
sbb
push
fcomi
int3
insl
nop
or
sub
insl
add
or
cmp
bound
hlt
xchg
adc
lods
js
das
push
xchg
mov
xor
adc
test
iret
std
pop
inc
jg
in
dec
add
dec
sub
ret
sahf
xor
int3
push
pusha
outsl
sbb
mov
bound
mov
mov
xor
scas
adc
jae
insl
fdivrs
push
push
inc
cmp
cld
xchg
test
addr16
pusha
aaa
mov
in
lahf
push
inc
and
cmpsb
add
shl
int
add
icebp
cs
mov
clc
aam
xchg
mov
mov
mov
in
movsb
jnp
in
adcb
aad
mov
fnstsw
icebp
jbe
shlb
daa
call
add
enter
jb
jge
int
adc
sahf
xchg
xchg
pop
negb
mov
add
xchg
and
rcrl
cmp
xchg
addr16
dec
cmc
adc
push
pop
mov
add
lock
mov
outsb
es
push
inc
dec
sub
in
sbb
fstl
xor
filds
sbbb
and
sub
movsl
mov
sti
jp
rcrl
jo
pop
data16
aaa
mov
or
fstps
adc
stos
repz
ja
add
imul
fcomi
cmpb
fwait
cs
in
lock
add
mov
aas
adc
sbb
xchg
sub
or
shrl
orl
movsb
mov
mov
mov
pop
jl
xor
ja
sub
mov
popa
and
das
mov
jl
add
xchg
xchg
fbld
outsb
jne
outsl
shlb
fsub
sub
lods
dec
add
dec
push
adc
scas
dec
push
movsb
dec
fdivrs
mov
sub
inc
addps
mov
aam
roll
loop
repnz
nop
iret
lahf
scas
js
lret
test
dec
ljmp
pop
xor
mov
sbbb
jno
pop
cmp
add
xchg
mov
and
cmp
js
fdivrl
lods
es
jg
push
and
pop
rorb
jge
addr16
adc
sub
sbb
dec
ret
cltd
loop
push
jl
mov
arpl
shlb
fs
fnsave
push
push
xor
into
dec
movsl
or
fcoml
loopne
sub
insl
mov
and
in
jl
sub
push
jbe
sub
push
das
test
test
inc
xlat
js
les
cmp
mov
adc
mov
dec
mov
call
push
fildl
cmp
out
cmp
pop
out
inc
push
std
sub
mov
popa
enter
or
dec
dec
sti
adc
push
test
addr16
pop
jbe
test
xchg
scas
add
cmp
add
adcb
mov
mov
mov
xchg
nop
out
inc
in
dec
ja
mov
add
fcompl
jge
or
inc
push
jl
aaa
stos
loope
aad
iret
icebp
xchg
xchg
push
or
fimuls
leave
mov
int
mov
jecxz
or
xlat
rorl
insl
dec
mov
fwait
sbb
popf
xor
and
jb
popa
cmp
mov
outsl
fimull
lret
push
outsl
cmp
jo
rcrb
mov
adc
mov
mov
jne
sbbl
and
iret
enter
ret
add
iret
rcrl
ja
xor
in
mov
push
push
mov
repnz
test
xor
mov
mov
icebp
std
add
leave
xor
pushf
jae
jbe
add
jnp
cmp
sbb
aam
mov
jo
mov
pop
mull
sub
push
and
aaa
aam
insl
lods
adc
push
lds
mov
mov
cmp
aad
mov
cwtl
cmp
inc
inc
pop
out
add
push
mov
pop
push
cmp
movsl
xor
gs
fdivl
adc
adc
add
adc
dec
dec
stc
cmp
sbb
sarb
lds
cmpsl
je
in
mov
xchg
mov
out
mov
adc
xchg
or
int3
xchg
xlat
jae,pn
dec
xchg
mov
pop
dec
xor
push
ss
fisubs
xchg
fsubrs
jmp
imul
rol
push
xor
xor
xlat
mov
cltd
fdivrs
ret
inc
adc
rclb
mov
int3
push
mov
sub
jmp
jno
hlt
push
pop
arpl
or
inc
jb
or
gs
cld
fcompl
xchg
or
scas
push
xor
inc
loope
int
pop
adc
sbb
aaa
inc
je
mov
adc
test
push
test
or
dec
andl
fs
and
pop
aam
enter
fimull
xchg
jg
pop
adc
lret
inc
xor
inc
sub
mov
sub
insl
mov
sbb
jae
lock
das
xor
popa
push
mov
dec
clc
icebp
lds
imul
push
push
xchg
xor
mov
inc
jmp
sub
mov
inc
xor
pusha
fs
in
push
push
xchg
xchg
sbb
icebp
idivb
lods
movsb
pop
adc
repz
cs
bound
test
or
or
or
pop
cltd
push
jbe
lods
jb
push
lahf
mov
inc
sbb
dec
sbb
jmp
add
adc
or
mov
mov
addr16
jg
mov
pop
fwait
inc
push
test
inc
xchg
xchg
ds
das
cmc
xor
xor
loope
data16
stc
popf
stos
test
inc
gs
xchg
mov
decl
arpl
cmp
pop
stos
int
jp
rorb
rcll
jg
inc
xchg
jmp
test
jl
cmc
adc
icebp
pop
outsl
or
aaa
sub
xor
cmc
test
pushf
and
sahf
inc
dec
pop
jmp
repz
fnsave
add
sbb
enter
shrl
mov
mov
xchg
lods
shll
sti
loop
call
or
outsl
fcomp
and
cmc
add
xor
and
popf
xchg
and
push
sbb
push
sbb
fwait
mov
cmp
add
divl
xor
call
inc
pop
jbe
xor
shll
shrb
push
fcompl
repz
mov
jmp
mov
and
mov
push
lret
xchg
lret
imul
std
arpl
and
call
cmp
out
loop
sbb
addr16
push
mov
push
mov
mov
add
fcomps
insb
js
mov
shlb
shl
jnp
fildl
sbbb
pop
push
mov
testl
push
and
jae
push
movsl
repz
add
mov
fs
pop
mov
insb
repz
and
hlt
divb
fildl
daa
ljmp
or
mov
movsb
fdivr
in
add
adcl
js
xchg
adc
testb
or
icebp
mov
daa
pop
out
xlat
add
xor
jmp
fdivl
imul
jnp
sbb
xchg
xchg
arpl
loopne
and
pushf
cmp
mov
push
in
add
or
xor
and
jl
hlt
mov
jae
push
push
mov
jae
sbb
mov
lods
insb
lret
cld
aas
ds
test
testb
aaa
sub
dec
data16
outsl
test
sbb
mov
in
fnsave
pop
sahf
mov
fildll
insl
cs
cmc
and
movsl
pop
add
ret
rcll
and
or
dec
push
mov
sbb
push
stc
pop
scas
cmp
stc
fists
xor
jb
or
pop
cmp
test
cmp
add
loope
popl
aam
ja
push
popf
mov
xlat
loope
lcall
lock
int
ds
inc
adc
inc
movsb
sbb
loop
ljmp
and
dec
sbb
cld
cmp
or
xchg
inc
repnz
test
ret
cld
rolb
mov
inc
stc
or
aam
mov
xor
mov
aaa
xchg
lds
pop
lcall
lret
out
xchg
lds
inc
stc
sbb
add
ret
mov
lret
push
jae
inc
insb
jne
sub
out
inc
das
sbb
inc
sub
mov
add
push
ret
fstpl
add
pop
jmp
test
add
push
emms
lahf
adc
or
push
jne
lea
or
subb
hlt
test
cmp
rcr
in
mov
outsl
and
mov
nop
fs
arpl
xlat
mov
pop
jl
xor
dec
test
pop
fnsave
dec
addr16
ret
xchg
cmp
push
popa
test
in
lahf
mull
inc
xchg
dec
das
push
mov
xchg
aaa
xchg
pop
sbb
fnstsw
stos
mov
out
dec
mov
int
stc
in
ljmp
sbb
int
pop
scas
fidivs
movsl
and
push
rolb
lods
mov
and
xchg
jg
fdivrs
push
inc
call
push
add
cmp
addb
cmp
addr16
daa
push
dec
pop
cltd
int
dec
movsb
call
dec
push
call
inc
inc
pop
mov
fstpl
or
je
repnz
testl
cld
cmpsb
dec
outsl
cli
dec
push
pop
jecxz
xchg
pusha
popa
or
xor
cmpsb
sbb
std
mov
das
sub
sbb
imul
adc
repz
jae
mov
aam
lock
hlt
mov
daa
leave
pop
das
mov
out
dec
scas
in
adc
jle
xchg
hlt
adc
xor
in
mov
push
sub
loope
adc
inc
out
xchg
xchg
dec
pop
push
inc
add
push
push
and
jg
pop
lods
loopne
mov
nop
pop
aam
loop
cmp
xchg
aas
xorl
mov
sbb
ret
add
in
mov
inc
sub
push
adc
les
xor
mov
fwait
lock
jns
test
mov
xorl
fimuls
aaa
xchg
data16
jb
push
push
sub
mov
lcall
mov
js
fists
iret
mov
loopne
pop
cs
or
ljmp
and
and
pop
jge
or
jp
mov
leave
xchg
push
int3
inc
daa
xchg
jno
adc
aad
or
inc
cmp
or
lret
js
pop
pop
lahf
sbb
in
add
mov
mov
pop
arpl
lret
xor
cmp
mov
cmp
sahf
popf
insb
xor
mov
push
std
rolb
scas
rcll
pop
xor
aaa
inc
in
cs
cmp
das
mov
cmp
in
fistps
xchg
andb
and
jnp
cmpsl
sahf
sub
outsb
pop
dec
into
sbb
mov
test
pop
call
or
cs
fs
adc
push
into
add
mov
popa
dec
mov
or
dec
push
daa
repnz
aaa
test
mov
pop
and
mov
mov
adc
xchg
int
pop
cmc
int
cwtl
adc
psubb
sub
fnstenv
leave
add
cwtl
je
xchg
jle
xchg
cli
aas
wbinvd
pushf
adc
sub
push
stos
push
aam
xorl
jl
sub
aas
hlt
jbe
repz
sarb
and
xor
shll
pop
stc
mov
shl
dec
sub
push
add
aaa
sbb
dec
movsb
sub
adc
xchg
sbb
shlb
jnp
bound
and
mov
out
lret
sbb
xchg
jnp
ret
xchg
inc
mov
out
and
lods
lods
ret
mov
repnz
js
jbe
bound
jns
ljmp
inc
xchg
fwait
test
or
inc
pusha
mov
test
mov
pop
jg
add
lret
pop
jecxz
adc
jg
and
mov
mov
and
sbb
scas
sti
xchg
shl
ljmp
xor
mov
sahf
iret
push
mov
clc
shrb
rorl
adc
rorl
add
mov
mov
and
mov
mov
push
inc
cmp
mov
jp
test
mov
jbe
and
xor
fldt
mov
jmp
mov
push
dec
add
fdivs
add
pshufw
add
shr
xor
dec
nop
nop
fnsave
cmp
sbb
xor
lds
cmpsl
in
repz
fsub
int3
pop
jmp
xchg
dec
cmpsb
push
sbb
dec
mov
mov
mov
fisttpll
adc
mov
in
je
sub
push
lods
xchg
ds
push
xor
push
outsb
enter
mov
nop
das
push
rorb
es
cmc
or
repnz
sub
aad
cmpsb
cwtl
jo
sbb
push
add
aad
push
fidivrl
sbb
loope
and
mov
out
into
mov
and
inc
jg
dec
mov
loop
dec
xchg
mov
sub
sub
inc
sub
or
cmp
shlb
push
sbb
dec
imulb
jle
imul
sub
cmp
in
adc
orb
mov
loope
xor
adc
loope
jo
inc
mov
rcr
cmp
mov
xor
js
sbb
insl
xchg
mov
inc
jnp
mov
jbe
dec
ffree
push
outsl
sub
cwtl
fwait
mov
iret
pop
unpcklps
loopne
stos
movsb
sub
mov
popa
ja
cli
sbb
xor
adc
dec
nop
fdivs
sub
pop
lods
xchg
sti
jp
mov
mov
js
outsb
leave
sbb
adc
repz
and
str
or
jno
cmp
or
fidivrs
xchg
push
or
imul
jle
jmp
out
stos
pop
sbb
int3
ret
dec
loop
cmpl
jbe
jns
imul
lahf
stos
jl
jo
push
mov
repz
movsl
int
orl
out
add
adc
xor
leave
flds
movsl
pop
adc
int3
and
addb
cmp
mov
mov
mov
xor
adc
pop
cld
lret
sti
aas
xor
nop
and
nop
add
lds
icebp
sub
adc
fsubs
sar
in
cmovbe
bound
dec
lcall
mov
dec
out
jg
xlat
mov
mov
sbb
dec
hlt
fwait
cmp
sahf
repnz
sbb
imul
mov
cld
xchg
mov
fstpl
add
cmc
xor
jl
daa
pop
call
sbb
mov
add
sahf
in
push
inc
add
adc
xor
jns
xlat
enter
mov
adc
pop
dec
push
shrb
mov
or
and
sub
lcall
ror
mov
call
clc
sti
ja
mov
addr16
sbb
into
cltd
int
mov
or
pop
test
sbb
jne
jle
mov
and
test
add
arpl
xchg
out
or
dec
fisubrl
pop
mov
insb
cld
idivb
sub
jg
push
fisttpll
mov
imul
xchg
icebp
push
xchg
sbb
mov
sub
mov
cltd
add
jnp
loope
xor
sub
add
xor
push
pop
ja
popf
test
mov
fs
pop
mov
pop
movsl
cltd
adc
sbb
es
or
lret
add
and
into
push
jne
xor
or
lret
jae
push
cld
mov
mov
mov
loopne
cmp
jns
sbb
push
mov
jg
cld
popa
mov
sub
insb
xchg
pop
push
les
movsl
and
mov
negb
sbb
lds
scas
aas
jp
aas
mov
aam
aad
cmp
xor
and
movsb
push
xchg
jae
xor
mov
lahf
mov
inc
cmp
add
fdivs
hlt
sub
xchg
xchg
lock
mov
mov
jns
sbb
daa
add
mov
pushw
jo
cmpsl
sbb
aas
pushf
add
mov
je
insl
test
aam
pop
mov
pop
sub
fisttps
hlt
xor
sub
fsubs
cmpsb
adc
sarb
scas
sub
inc
mov
sbb
loopne
cwtl
cmp
jo
scas
cmpsb
xorl
out
mov
push
and
adc
in
add
dec
lods
inc
push
ljmp
dec
pop
imul
pop
fcmovbe
push
dec
sbbb
inc
cmp
cmp
shl
mov
inc
xorl
lcall
in
aaa
neg
pop
or
cltd
sub
push
or
call
sub
jmp
add
jmp
hlt
aam
shr
loopne
iret
int
pop
scas
sub
push
and
cmpl
add
mov
jge
push
or
xchg
repz
fdivr
and
adc
push
in
push
outsl
stos
xchg
dec
movsb
xchg
sbb
cwtl
negl
pop
std
jle
mov
imul
mov
aaa
clc
sarb
mov
push
push
mov
sub
outsl
add
sti
out
insb
rcr
hlt
movsl
push
pop
xor
mov
cmp
out
push
jp
int
add
xchg
xor
ret
cld
cmp
ret
cmp
enter
jbe
or
out
pop
fstpl
fidivrl
mov
jae
sbb
lock
dec
cli
js
mov
add
or
hlt
out
adc
jae
inc
jno
push
ret
sbb
insb
jbe
or
in
xchg
cmc
fdivrl
xor
sub
cs
pop
sub
daa
shll
enter
icebp
test
cwtl
shlb
inc
lcall
orb
rorb
inc
inc
std
mov
rcrb
add
faddl
in
sbb
push
repnz
out
aas
icebp
shrl
dec
cmp
cmp
mov
jne
fwait
out
add
cmp
push
outsb
int
push
mov
cltd
jp
pop
cmpsl
pushf
int
je
daa
jge
sub
pop
add
xorl
and
dec
jmp
outsl
jne
xlat
pop
inc
lcall
xchg
push
insb
lea
sbb
push
lds
xor
or
fldcw
mov
jno
mov
leave
jns
lods
cmc
jno
adc
bound
in
add
movsb
mov
std
andl
push
xchg
cmp
cmp
out
xlat
jo
push
jl
xchg
mov
inc
in
sbb
push
push
divl
xchg
jo
fdivs
mov
sub
in
jae
lea
lahf
repnz
jae
xchg
inc
inc
add
cmpl
cmp
pop
sbb
es
jae
out
cld
xor
into
ret
inc
push
mov
mov
mov
test
pop
cmpsb
sahf
cld
xchg
notb
dec
lea
push
lds
xchg
nop
lods
mov
sub
out
push
pop
jno
jb
lahf
pop
mov
or
pushf
adc
cmpsl
push
jmp
sub
jmp
xchg
addr16
ja
mov
inc
decl
mul
lret
push
push
cwtl
cmp
add
push
add
dec
xlat
shl
pop
filds
sub
push
add
outsl
gs
in
aaa
cltd
pop
lods
sbb
std
scas
mov
arpl
ret
gs
or
xorl
test
mov
rol
imulb
push
mov
or
in
add
pop
add
mov
fidivl
mov
and
sbbb
popf
xchg
pushf
lds
nop
push
lds
inc
rcl
bnd
add
push
lret
clc
mov
out
add
adc
neg
jno
insb
stos
add
pusha
out
icebp
mov
add
add
mov
test
sbb
lea
pop
cwtl
push
sbb
in
fidivs
lea
adc
or
icebp
pop
and
fimull
in
dec
lcall
shrb
adc
movsl
sub
rolb
jg
dec
cli
add
lret
call
xchg
shr
faddp
inc
fmuls
clc
jae
rclb
add
dec
push
repz
fists
pop
xchg
xchg
lsl
pcmpgtw
mov
cltd
inc
pop
addr16
push
ss
dec
adcl
sub
mov
jge
lret
inc
stc
lds
repnz
fs
in
cli
in
ja
imul
gs
stc
xchg
and
fimull
hlt
mov
sti
ror
cmp
rcrl
add
outsb
in
out
jmp
xor
rcl
sub
mov
les
push
rorl
jle
sbb
lods
and
insl
int3
jl
jae
push
dec
push
mov
push
aas
cmp
sbb
and
dec
nop
mov
dec
and
inc
sub
mov
mov
pop
repz
das
pop
sub
iret
imull
in
or
loopne
je
pop
outsl
test
mov
jle
pop
mov
negl
xchg
fwait
shrb
sbb
repz
adc
pop
orl
lds
inc
movsb
jne
xchg
cs
ja
xor
add
cs
inc
push
fcmove
jae
aad
daa
js
rolb
das
int3
sbb
push
sub
jmp
cmp
mov
arpl
sub
shll
fwait
sub
iret
xchg
sahf
iret
test
cmp
inc
sbb
out
arpl
and
loope
mov
adc
cmp
inc
pop
mov
in
mov
and
sub
dec
dec
ret
push
hlt
jb
mov
mov
jmp
and
push
jge
fsubl
in
arpl
adc
cmp
add
add
ljmp
subps
movsl
push
xchg
or
fidivs
loop
fdivr
mov
jle
xor
outsl
cli
mov
lea
cltd
cmpsb
push
fistpl
mov
or
outsb
pop
and
loope
xor
inc
mov
inc
imul
sbb
xchg
lods
jecxz
xchg
inc
bound
ret
sub
adc
jo
or
das
sti
dec
mov
and
push
lahf
push
pop
jle
cltd
pop
or
xchg
fiadds
in
sbb
lock
jnp
fisubs
jne
sub
rcr
shlb
ds
sbb
adc
or
mov
pop
add
push
addr16
dec
gs
add
cmpsl
test
jo
mov
xchg
in
jge
dec
rorb
add
ss
lret
mov
sub
sub
ljmp
sub
jb
in
jecxz
cmp
xor
aad
loop
les
inc
mov
fcmovnbe
inc
push
inc
fstl
call
mov
sbb
and
mov
add
sub
imul
mov
scas
mov
lea
dec
push
mov
sub
or
cmp
test
out
cmp
adcl
addl
lret
leave
daa
imul
push
iret
lret
hlt
popa
pusha
arpl
mov
out
out
jb
pushf
add
stos
ficomps
cli
enter
or
leave
std
std
mov
lods
push
int3
jo
adc
sbb
mov
jecxz
jae
and
mov
and
or
mov
xchg
and
lods
arpl
daa
lods
sbbb
push
inc
incl
or
daa
jne
mov
mov
imul
clc
fldcw
mov
ret
pop
xchg
lahf
cmp
adc
push
sbb
and
fs
int3
ret
imul
jl
aas
jge
jne
fmull
and
dec
loope
cmp
mov
test
mov
leave
ljmp
cmpl
jge
mov
push
into
fcmovne
mov
bound
popa
dec
mov
out
test
mov
gs
loope
int3
aas
lret
dec
dec
xchg
cltd
push
mov
and
sbb
push
imul
inc
sub
cmp
hlt
arpl
push
lods
inc
test
cld
fsubs
aad
stc
aad
sbb
jbe
js
xor
xchg
mov
jmp
sbb
nop
imul
cli
jp
xor
fidivl
out
inc
jmp
jp
insl
inc
or
mov
pop
in
out
push
mov
icebp
push
mov
jo
hlt
and
pop
fstpl
sti
push
mov
fwait
mov
cmp
mov
popf
xchg
outsl
fwait
and
dec
stos
sub
not
shlb
xor
dec
add
lcall
jnp
add
jae
insb
add
lods
dec
repz
mov
or
push
in
and
inc
outsb
daa
and
stos
ja
jbe
sub
push
shl
sbb
fs
je
lods
jnp
and
sub
mov
out
test
aam
dec
cmpsl
push
out
jg
lods
or
xor
ja
sub
add
lret
pop
fildll
setns
inc
lea
jge
nop
movsb
jno
pop
push
or
js
dec
sti
and
adc
xchg
adc
jg
insb
ret
sbb
jge
sub
cmp
out
adc
inc
xchg
repnz
pop
mov
cld
inc
clc
scas
and
scas
inc
insb
imul
fdivrl
cwtl
xchg
mov
jge
stos
push
or
adc
ret
out
loop
test
push
shlb
dec
push
les
lcall
mov
inc
icebp
mov
data16
mov
sahf
lods
aam
adc
jno
push
and
jg
sbb
add
adc
ret
rcrl
sbb
xor
fiaddl
push
loope
xor
xchg
xchg
test
inc
cltd
xchg
jg
incb
loope,pn
mov
outsb
mov
les
sub
push
sub
lahf
int
pop
xchg
sti
or
sbb
leave
cmp
iret
or
cmp
mov
dec
add
lcall
xor
pop
pop
jo
or
mov
addl
addl
jo
repz
repz
xor
ficoml
xor
mov
add
xor
pop
sti
ds
mov
rolb
xchg
push
bswap
cli
fsubrp
in
push
mulb
stos
stos
push
ret
icebp
jmp
in
push
std
les
cmp
dec
push
and
pop
jp
pop
mov
jne
pushf
jecxz
cmp
addr16
fldln2
sbb
cli
rorb
jae
ja
push
shrl
call
fs
test
test
ljmp
jne
lock
mov
mov
push
mov
jno
ss
and
rorl
int
pop
dec
cld
add
add
sbb
mov
add
push
fimuls
pop
mov
jecxz
mov
add
cmp
inc
xchg
into
push
addb
or
mov
fsubr
gs
icebp
out
lahf
mov
cli
jge
ret
xchg
xchg
mov
cmp
stc
cmp
andb
push
repz
mov
dec
xchg
ficoms
adc
push
daa
sbb
xor
jp
arpl
add
movsl
imul
std
dec
or
insl
pushf
mov
mov
stc
and
xor
add
mov
out
adc
cwtl
pop
pop
jb
sbb
mov
fdivrl
lods
es
cmp
sbb
jle
inc
fs
sub
frstor
mov
cmpsb
leave
mov
mov
xchg
cmp
mov
sub
mov
sbb
testl
jecxz
sub
push
daa
inc
mov
mov
cltd
push
pop
fdivr
sub
cmp
std
es
sub
fbld
imul
cmpl
sbb
dec
sub
sti
pop
mov
mov
das
mov
pushl
insb
pop
aaa
push
mov
rclb
xor
inc
rclb
cmp
adc
pop
adc
sahf
bound
lahf
mov
js
pusha
in
sub
in
dec
int
lcall
add
pop
les
fdivl
pop
dec
shl
aas
and
and
pop
mov
add
pop
pop
sub
pop
or
inc
ret
std
pop
in
pusha
std
xchg
nop
mov
pushf
repnz
mov
sub
into
into
inc
outsb
inc
enter
popf
push
sub
jle
out
adc
test
icebp
xor
das
mov
dec
mov
xor
es
or
call
repnz
and
les
popa
xchg
mov
dec
clc
pusha
lds
mov
verw
add
and
and
es
xor
pop
mov
jae
mov
out
xlat
mov
pop
add
cwtl
sbb
aad
ljmp
jae
jmp
pop
add
lds
pop
fisubrl
cmpsl
push
push
das
outsl
iret
aas
add
sbb
fwait
aam
fisttpl
push
pop
fisubl
and
cmp
cld
xchg
clc
das
or
lods
adcb
sbb
scas
lods
data16
pop
insl
out
iret
dec
mov
pop
bnd
jmp
es
orb
pop
aas
mov
jns
in
pop
cmp
test
inc
cmpsl
stos
das
xchg
adc
xchg
fsubp
push
gs
push
adc
orl
sahf
fbstp
sub
test
das
xlat
stos
fimull
sub
ja
or
push
dec
or
clc
xchg
cmpsb
sbb
test
into
push
out
leave
sub
fs
pushf
adc
test
push
lahf
std
add
jg
das
adc
add
pop
inc
xchg
inc
addr16
ja
xchg
daa
fistpl
xor
lcall
enter
enter
and
xor
addr16
scas
and
mov
jge
mov
mov
std
sub
mov
sbb
xchg
sub
popf
inc
data16
jb
xor
jl
icebp
xor
or
insb
mov
push
and
repz
and
pop
jg
ret
xor
insb
lock
icebp
sbb
insb
mov
or
call
add
add
xchg
xorb
in
call
emms
aam
xchg
or
cmp
inc
push
sub
fistl
imul
jbe
fs
push
cmp
stc
add
mov
dec
push
mov
test
sbb
fcoms
dec
icebp
xchg
roll
adc
fwait
inc
fistl
mov
dec
stos
mov
sub
pop
sub
ljmp
inc
xchg
and
aaa
jmp
fiaddl
add
nop
mov
pop
jnp
lods
inc
fcmovnu
push
mov
jb
mov
nop
lahf
je
adc
les
dec
sarb
pop
lea
mov
call
int3
adc
shlb
jmp
loopne
fst
or
push
int
jne
in
in
mul
sarl
push
out
cmp
mov
sbb
or
xchg
lret
jmp
jmp
jnp
sbb
sti
mov
int
sti
pop
cmpsb
aaa
icebp
jl
sarb
push
xchg
or
dec
es
cmp
dec
mov
call
les
jne
jmp
lock
loope
xor
push
hlt
lahf
loopne
add
mov
idivb
hlt
jp
pop
movsb
loope
stc
bound
pop
inc
mov
daa
ss
mov
xchg
mov
test
inc
xchg
mov
les
bound
add
pop
jmp
lea
mov
or
test
ss
pop
test
imul
sbbl
adc
into
leave
inc
ljmp
dec
mov
xor
filds
in
mov
jg
stos
inc
mov
sbb
lds
push
cmc
sub
pushf
mov
jmp
mov
in
test
outsl
adc
add
outsb
inc
cmp
mov
test
jns
ret
cmpsb
ja
mov
xchg
mull
or
loop
dec
dec
xor
sbbb
push
xchg
mov
pop
push
shll
jg
mov
imul
xlat
les
in
jbe
pop
push
cli
scas
cmp
ja
test
pop
in
xchg
clc
lods
bound
add
mov
and
imul
adcb
mov
mov
call
cli
mov
test
repz
mov
mov
inc
push
int
iret
dec
sahf
dec
mov
sbb
push
mov
cmpsl
ficomps
je
aaa
popf
fistl
jbe
js
xor
jp
mov
pop
std
xchg
cmp
jbe
add
cmp
sbb
and
or
adc
adc
dec
push
arpl
stos
add
mov
and
das
mov
dec
inc
rorb
loopne
pop
dec
and
dec
repnz
sahf
in
xchg
sbb
push
push
lods
push
lret
stos
push
mov
gs
pop
loopne
push
and
mov
lods
scas
fadds
cld
jl
add
movsl
jb
sub
pusha
mov
cld
push
inc
push
scas
jmp
fistl
pop
xor
fistl
and
insb
cmp
pop
cmpsb
pop
pop
outsl
inc
ja
mov
dec
add
aam
push
fldt
mov
and
std
mov
or
cbtw
mov
jmp
lahf
xor
je
inc
js
imulb
pop
xchg
sbb
repz
clc
aam
mov
push
outsl
rorb
push
data16
and
imul
decl
orb
sbb
jmp
mov
out
aam
mov
sahf
cs
stos
lods
pop
scas
add
je
mov
int
mov
ljmp
subb
lahf
mov
adc
fldlg2
jecxz
sub
dec
cmpsb
sarl
add
adc
enter
adc
mov
mov
fwait
std
add
sar
mov
lea
cltd
cmp
push
push
mov
push
data16
rorb
lods
stos
movsb
add
mov
xor
xlat
jb
mov
pop
push
jb
adc
aad
push
popf
pop
pusha
icebp
or
or
lret
jno
hlt
aam
loopne
cmp
mov
jl
mov
jecxz
dec
inc
jecxz
insl
mov
loop
push
stos
cmp
aam
lock
loop
cltd
xor
int3
or
mov
cltd
mov
ss
pusha
mov
mov
mov
or
dec
mov
fwait
mov
cmpsl
dec
xchg
lods
and
jnp
mov
arpl
mov
inc
ja
inc
es
jecxz
mov
xor
xchg
jge
fstpl
leave
aas
pop
int
inc
sub
idivl
jle
push
mov
fnstenv
out
or
in
sub
sbb
pushf
cld
lock
or
vcvtps2udq
enter
jmp
sbb
adc
mov
dec
aaa
int3
mov
leave
xchg
sbb
mov
repnz
popa
mov
push
pop
push
cmp
pop
out
sub
incb
mov
pop
imul
fwait
dec
mov
fidivrs
es
fists
int3
push
jae
sbb
sub
push
sub
lahf
in
lret
adc
inc
dec
xchg
ftst
js
dec
xor
jge
fstl
in
dec
or
push
fldl
jnp
push
mov
ja
movsl
push
fmuls
fadds
in
push
frstor
xor
insb
or
ds
nop
push
jp
mov
lret
int
sbb
cld
lahf
or
movsb
xchg
ljmp
in
add
test
rorl
aas
lea
stos
push
fxch
mov
stc
lods
jmp
mov
imul
cld
jbe
sbb
sub
loope
xchg
mov
adc
clc
sub
repz
jmp
xchg
or
mov
xor
push
xor
repz
mull
inc
mov
sbb
dec
sub
or
int
pop
movsl
inc
dec
gs
imul
inc
jbe
stc
movsl
mov
lcall
test
pop
popa
mov
lods
int
insl
mov
call
push
lds
xchg
cmpsl
stos
aam
cmp
mov
shlb
jb
lret
mov
je
aam
mov
std
aad
lret
mov
mov
out
ss
mov
inc
cld
aam
or
jg
or
mov
cli
add
pop
nop
out
push
mov
sub
int
scas
xorl
imul
sbb
mov
pop
push
dec
int3
jae
cmp
inc
sub
daa
sbb
call
outsb
mov
push
mov
and
data16
imul
mov
pop
dec
cmp
sti
scas
cmp
test
hlt
sub
divl
jnp
cmp
mov
jmp
pop
adc
shlb
jge
dec
out
adc
stc
lock
or
jbe
gs
notl
dec
fdivrl
add
notl
mov
in
xor
mov
adc
into
out
push
push
jo
std
cmp
fdivrl
sbb
bound
insb
aam
loope
sbb
mov
add
cmp
in
out
movsl
test
ja
and
jb
and
push
dec
push
adc
inc
dec
ja
in
jns
xor
xchg
aam
idivl
cld
jl
add
xchg
inc
mov
jae
and
fidivs
clc
lock
insb
jb
jp
icebp
shl
and
xchg
xchg
pop
sarb
push
in
push
cmp
mov
or
out
mov
ds
fnstenv
adc
mov
je
lock
sahf
sub
testl
movsb
pop
mov
or
xchg
push
sub
test
jge
pop
jne
cltd
add
into
push
data16
pushf
clc
pop
call
sbb
test
das
dec
or
cmpsl
fldl
adc
xchg
lock
jl
in
int3
jmp
lods
pop
push
sub
pop
xchg
mov
cld
call
shrb
sarb
sti
imul
sub
push
mov
pop
cmpsl
pop
add
jmp
sbbb
fistpll
cmp
mov
push
shl
out
test
fs
mov
dec
inc
adc
shll
shll
aaa
push
add
push
popf
sub
pop
jg
cld
cmp
mov
pushf
sbb
push
movsl
push
incl
jne
pusha
imul
into
push
mov
sub
in
mov
cmp
sub
and
adcl
jmp
scas
xchg
inc
out
or
cmp
popf
arpl
je
loope
add
adc
xor
scas
es
pop
lret
test
outsb
mov
aaa
mov
arpl
mov
inc
pushf
jmp
mov
movsl
jbe
stc
and
sub
fidivrl
xchg
fwait
adc
bound
push
and
iret
jbe
movsl
movsl
pop
pop
xor
pop
rorb
and
ret
fxch
push
shll
push
and
insb
mulb
repz
jno
orl
dec
xchg
push
in
test
jle
popf
pop
mov
cs
or
jl,pt
pop
xchg
pushf
insb
gs
push
test
jle
es
jg
out
pusha
shlb
cmc
adc
shl
ror
cmc
pop
cmpl
add
add
push
sbbl
lods
xor
pop
mov
das
push
hlt
mov
push
adc
xor
add
mov
jae
pop
ljmp
adc
ret
orl
cwtl
loop
lock
jl
ret
jmp
addr16
scas
jp
add
fidivs
addb
daa
out
sub
into
bound
das
sbb
mov
xchg
es
dec
jmp
sbb
fmull
orl
repz
xchg
dec
sti
insl
in
fistl
sbbb
cmp
scas
inc
ss
gs
cli
add
add
bound
cs
repz
hlt
sbb
aaa
adc
icebp
lret
loop
out
ficoms
fdivrl
lcall
pop
cmp
aad
ja
sahf
pop
sub
inc
mov
dec
and
inc
inc
sbb
dec
fadd
popa
cmp
sbb
fwait
sbb
ficompl
xchg
sbb
mov
loopne
or
pop
sbb
rclb
adc
cmp
shrl
pop
fmuls
cs
pop
jae
sub
xchg
mov
dec
cmp
sbb
leave
jbe
jne
jns
mov
or
mov
xchg
jle
inc
add
lods
ud2
xor
push
dec
cmp
mov
outsb
cli
xchg
push
adc
cli
xchg
jecxz
hlt
cmpsl
cmpsl
dec
xchg
icebp
fwait
clc
jo
iret
xor
or
jle
jne
inc
fcomps
xchg
lea
add
jge
cmp
cs
sbb
mov
mov
scas
adc
mov
xchg
pop
jl
jne
ss
shr
test
test
lret
ss
pop
add
clc
outsl
cmp
sub
les
push
movsl
xor
pusha
jmp
mov
hlt
call
jnp
addr16
icebp
push
sarb
popa
pushf
repz
insl
dec
sahf
push
mov
js
push
fldl
push
pop
push
arpl
cmp
mov
mul
popf
pop
dec
push
lret
mov
in
add
nop
jge
push
sub
mov
mov
inc
cmp
ja
add
pop
sbb
movsl
pusha
xorb
xor
jmp
pop
mov
outsl
loop
stc
inc
std
dec
dec
andl
pop
out
add
or
pop
nop
sbb
jae
or
cltd
cmpsl
enter
les
div
scas
cltd
sub
fmull
inc
or
lods
scas
mov
out
xor
bound
sbb
mov
test
mov
or
ja
repnz
int
pop
cmp
or
mov
pop
mov
add
jae
test
scas
fistpl
xor
push
cmpsl
add
add
int3
or
stc
push
loop
sbb
add
dec
sbb
insl
push
popf
sahf
jbe
adcb
inc
cmp
leave
je
call
ss
add
mov
mov
jno
mov
jmp
out
sub
sbb
mov
add
sub
lods
imull
jae
scas
jnp
out
cwtl
out
cltd
sub
mov
mov
inc
loopne
inc
in
add
pop
pop
lea
in
cltd
nop
mov
inc
xor
fiadds
dec
bnd
sub
mov
bound
add
mov
ret
push
std
cmp
mov
mov
push
mov
or
loopne
mov
dec
push
ja
scas
lret
fistpll
sbb
insb
lret
mov
out
xor
sub
std
fdivs
bound
pop
xchg
mov
cli
adc
push
out
fisttps
jp
sub
aad
inc
notb
mov
jae
xchg
daa
fdivl
outsb
xor
pushf
push
add
popa
fs
std
icebp
cmp
inc
inc
aas
dec
mov
adc
cmp
pushf
pop
leave
popf
mov
testb
icebp
adc
cmp
mov
cmp
and
cmp
lar
pop
xor
cld
sahf
sub
push
push
xchg
int
adc
dec
mov
ds
cmp
scas
or
mov
jne
mov
stos
cmp
and
lods
js
and
fnstenv
pop
mov
cmp
aas
sub
jmp
or
xor
mov
negb
lcall
lcall
cmp
and
xchg
pop
and
xor
mov
pop
bound
dec
flds
pop
xchg
fstpl
push
jo
mov
dec
inc
sbb
jno
jmp
aas
xchg
sub
iret
cmp
gs
mov
xor
adc
cld
aaa
and
frstor
pop
lret
push
add
leave
add
xor
dec
aam
aad
jp
lret
jle
rcll
jnp
or
xorl
aaa
sbb
bnd
xchg
addr16
add
lret
mov
aad
lock
notl
in
test
inc
sub
ret
loop
pushf
dec
mov
xlat
int3
lcall
les
std
add
movsb
push
das
movsb
or
in
and
jns
add
adc
aam
xor
sub
imul
fcmovnbe
pop
jmp
ret
ss
aaa
stos
cmp
dec
test
cmpsb
outsb
xchg
xor
dec
mov
ret
inc
mov
int3
and
or
mov
sbb
aam
push
hlt
iret
xor
push
addl
sub
inc
or
xlat
outsl
lods
in
lods
sub
in
gs
xchg
cmpsl
inc
mov
sbb
fs
sub
jbe
cmp
dec
and
mov
popa
sub
xchg
pusha
test
sub
cmp
xchg
movsb
mov
outsl
mov
divl
inc
scas
pop
clc
pusha
mov
xchg
xchg
je
lea
add
into
fldl
jo
cmpsl
gs
lret
lcall
and
cmp
dec
lcallw
add
arpl
rcll
ficoml
sub
or
dec
lahf
call
pop
lcall
add
push
sbb
cmpb
enter
gs
ljmp
ss
push
movsl
jne
push
repz
lret
cmp
inc
inc
inc
enter
pop
add
inc
in
xchg
sub
test
and
cmpsb
lret
push
mov
dec
push
arpl
sub
into
mov
shlb
push
repz
and
sti
cmp
fld
jae
fs
xchg
dec
sahf
xlat
or
mov
dec
lods
or
mov
jl
jns
push
aas
pop
es
in
popa
add
lea
ret
ret
and
or
sbb
mov
mov
pop
dec
std
je
xlat
xchg
jg
loope
testb
jmp
xchg
gs
arpl
lss
mov
jl
sub
adcl
sahf
in
mov
int3
xchg
mov
sti
xor
pop
dec
sahf
jle
jo
xchg
push
divl
mulb
std
dec
adc
dec
les
add
pop
push
and
dec
rcrb
addr16
movsl
lock
adc
addr16
xchg
jb
sub
and
sbb
mov
xchg
mov
push
xor
pusha
outsb
scas
dec
lret
xchg
mov
pop
sub
fsubr
mov
sar
es
sbb
enter
sub
fcomi
repz
ja
cld
fdiv
dec
and
ljmp
jp
and
mov
dec
mov
mov
jg
cmp
jbe
sahf
clc
movsl
mov
jmp
shll
inc
pop
adc
idiv
mov
sbb
popa
or
cmpsl
ds
rolb
push
adc
sbb
push
mov
cmp
mov
mov
test
jle
xchg
addr16
xchg
mov
push
jp
cmp
pusha
push
sub
jle
ja
push
xor
xor
scas
cmp
mov
inc
fwait
xor
rcrl
inc
and
mov
jae
stos
lea
ret
es
fnsave
cltd
xlat
enter
mov
iret
scas
cld
rcr
test
cwtl
fdivl
scas
pop
movsl
xor
out
daa
dec
roll
fbld
or
dec
mov
arpl
ja
lods
mov
jnp
dec
add
jnp
mov
or
adc
pop
jle
scas
push
and
jb
push
mov
xchg
loopne
mov
andps
mov
fbstp
insb
scas
lret
adc
fistps
loope
sub
add
dec
lods
lret
jbe
subb
xor
fbld
push
mov
or
mov
test
cmp
ffree
cmp
fxch
dec
lret
das
movsl
es
jae
cmp
mov
push
cmp
adc
mov
pop
sarl
test
fcompl
mov
or
sarl
mov
xchg
cmc
cmpl
mov
ret
je
or
xor
xchg
inc
inc
mov
mov
in
das
mov
or
xchg
dec
imulb
jno
lahf
or
jo
sbb
xchg
push
inc
js
push
push
pop
lea
repnz
mov
inc
sub
setno
push
sub
mov
push
adc
add
testl
lods
xchg
sub
mov
inc
mov
fucom
cwtl
dec
xor
imul
dec
data16
cmc
xor
and
dec
add
mov
repnz
push
enter
inc
hlt
outsb
sbb
repz
push
mov
cmpsb
push
rcrl
scas
and
push
inc
add
fildl
ret
cmp
gs
or
addb
ja
xor
xor
mov
jne
mov
dec
loope
cmp
xorl
ljmp
pop
repz
cltd
daa
sbb
add
addl
fwait
pop
ss
xchg
pop
cmpsb
inc
fcomp
xchg
gs
adc
daa
or
or
lods
sbb
cli
or
hlt
sbb
push
sahf
cs
into
call
dec
jbe
cwtl
xchg
xchg
inc
mov
mov
cmpsl
push
mov
pop
mov
lret
mov
pusha
mov
jge
xor
dec
add
push
lods
add
insl
inc
mov
jecxz
lret
mov
add
call
leave
test
xor
test
popf
xchg
mov
sbb
push
push
leave
cmp
xor
out
cwtl
jae
mov
mov
inc
daa
or
jae
lods
inc
in
imul
out
pop
xchg
scas
addb
jno
lods
push
out
pop
cmp
xchg
popf
mov
jbe
mov
sbb
push
jnp
cmovge
inc
xor
icebp
sub
xchg
gs
jno
ss
in
in
mov
sahf
ret
push
pop
dec
xchg
mov
ds
add
pop
popa
pop
and
pop
or
out
inc
inc
insl
mov
mov
stc
xchg
sbb
jno
adc
out
ds
pop
mov
js
mov
pusha
dec
mov
push
push
mov
sarl
sub
fdivr
mov
repz
out
shrl
mov
in
cwtl
stc
rorb
sub
sbb
xorb
jno
add
xlat
mov
xchg
and
sbb
outsb
jae
int3
mov
pop
adc
in
fs
push
jl
out
incl
fwait
mov
cmc
lahf
mov
pop
frstor
out
lahf
es
cmp
pop
push
imul
push
dec
xchg
lods
sub
sahf
sub
aas
addb
pop
push
xor
mov
fbstp
shl
adc
rcrl
jb
es
jl
or
pop
jmp
xchg
hlt
sub
jnp
add
mov
fdivs
lds
les
jp
jnp
cwtl
je
fisttpll
jmp
cwtl
dec
js
sbbl
aam
fisubl
xchg
cld
or
fdivrs
mov
in
pop
sahf
jbe
pop
pop
scas
lret
shlb
sub
fildl
jno
and
and
push
test
andb
daa
scas
filds
lret
mov
out
in
xor
mov
popa
mov
fwait
icebp
lret
dec
sbbl
mov
sub
adc
mov
xor
jns
cmp
mov
out
arpl
xchg
add
rcrb
icebp
mov
fisttps
in
imul
inc
pop
stc
lds
push
int
adc
or
adc
out
fists
ja
stos
iret
popa
ss
shr
push
mov
fucomip
push
pop
and
mov
dec
cmpsb
jne
fdivl
cmp
or
push
loop
shrl
inc
xchg
and
cwtl
dec
pop
jmp
int3
cmpsb
push
outsb
in
mov
mov
es
adc
mov
fsin
insb
stos
aaa
lea
push
js
sub
bound
pop
push
fsubs
cmp
das
cwtl
hlt
jecxz
pop
mov
int3
movsl
jo
push
aam
sub
pop
out
add
mov
jp
add
out
popf
out
mov
or
movsl
fmull
stos
xlat
in
inc
mov
push
shrb
xchg
xchg
cmp
cmp
movsb
jp
std
testl
int
iret
mov
inc
and
mov
lds
sbb
stos
test
lret
movsl
mov
shlb
inc
jmp
imul
sti
mov
push
and
frstor
imul
mov
movsb
pop
jbe
jp
in
pop
cmp
adc
push
pop
repz
lahf
subl
pop
mov
cli
popa
mov
std
xchg
es
ja
out
push
mov
xchg
mov
test
mov
or
es
xchg
mov
stc
add
in
add
cmpsb
xchg
adc
dec
adc
shll
and
jl
arpl
pop
and
mov
and
push
inc
iret
xor
jbe
mov
push
ret
dec
cmpsl
lods
sbb
les
loope
xchg
cmp
adc
push
repnz
aas
add
sub
cmc
es
ret
mov
push
lock
leave
sbbl
std
xor
jl
xchg
rol
pop
mov
daa
mov
scas
lret
or
mov
add
add
stos
push
push
imul
adc
scas
insl
sbb
sub
add
scas
cmp
mov
cmp
les
xorl
push
sub
pop
popl
lea
sarl
add
lret
and
js
mov
sub
push
out
xchg
adc
cmp
xor
jmp
in
decl
imul
and
xor
mov
push
add
loopne
nopl
fimuls
scas
fnstsw
iret
add
movsb
lods
pop
or
fldl
shlb
loopne
pop
movsl
xchg
scas
sub
xor
jp
jge
or
aam
lea
or
inc
sahf
into
mov
dec
jmp
testl
lds
leave
loopne
addb
mov
xor
xchg
ftst
outsl
mov
sub
mov
iret
xor
nop
out
icebp
adc
enter
repnz
lret
sub
out
cmpsb
inc
stos
std
sbb
jle
lock
orl
add
dec
daa
cli
inc
jns
loopne
clc
sub
test
into
les
inc
and
sub
bound
inc
icebp
mov
mov
cmp
fildll
or
das
mov
add
out
lcall
xor
addr16
pusha
movsb
jl
inc
lods
push
sbb
cs
mov
pop
xchg
daa
orb
stc
data16
adc
sti
lds
loope
fildl
dec
adc
push
xchg
mov
clc
outsb
push
and
push
ja
popa
cmpsb
sarl
push
leave
and
add
repnz
push
pusha
and
sbb
shlb
and
pop
sarl
imulb
fimuls
decl
cmp
jno
mov
cmp
inc
push
jne
iret
xchg
mov
mov
dec
dec
and
xor
out
shrl
popa
jns
add
mov
mov
jg
rorl
lds
mov
push
add
cmpsb
bound
dec
enter
cmp
loop
pop
push
data16
mov
dec
mov
pop
in
mov
jg
mov
push
movsl
inc
mov
xchg
sbb
lahf
inc
neg
or
push
mov
jp
cmc
shrb
lods
push
insl
cmp
push
fwait
daa
xchg
stos
inc
je
sub
popa
out
mov
xchg
add
shl
pop
mov
cmp
in
aad
mov
xor
pusha
xchg
mov
cmpl
pop
push
fldcw
mov
loop
xor
movsb
data16
dec
stc
daa
cmpsb
pop
sub
insb
stc
pop
sub
scas
mov
sub
testl
dec
loopne
out
insl
out
lock
mov
cmc
shlb
sub
mov
pop
loope
cwtl
push
dec
fildl
hlt
jecxz
jo
jg
ret
jge
or
in
inc
fs
stos
add
pop
lock
pop
xchg
inc
sarb
xor
fisubrs
jbe
inc
and
inc
mov
mov
pop
jl
cmp
inc
lret
jns
lcall
jbe
sbb
out
std
aam
testb
mov
idiv
sti
push
int3
and
and
pop
cmp
mov
or
and
add
jb
call
std
mov
out
in
sbb
mov
cmp
xchg
xchg
inc
push
roll
fiadds
jne
push
inc
pop
ss
lahf
xchg
loop
scas
ss
cmp
stos
mov
repz
adc
sub
stos
in
jbe
cli
ret
in
lret
jo
or
add
sbb
outsl
roll
fcmovb
test
pop
outsb
push
jle
jb
mov
jne
xchg
test
imul
cmp
icebp
inc
stc
xchg
jp
imul
fldt
stos
add
mov
sub
fs
mov
or
insb
jb
xchg
pop
iret
sub
push
jno
mov
sarb
pop
dec
inc
or
mov
push
mov
in
dec
pop
xchg
mull
cmp
adc
jbe,pn
adc
insb
lods
mov
mov
pop
mov
add
fmul
loop
jmp
aas
sbb
ret
xchg
fistps
mov
mov
cltd
in
mov
inc
xor
ret
sbb
cmp
push
jne
mov
and
sbb
pushf
mov
mov
pop
and
mov
mov
in
xor
nop
sbb
xchg
fs
fprem1
dec
ja
sub
inc
mov
fsubl
daa
mov
mov
aaa
call
pop
jae
lcall
cmp
es
stos
jl
add
add
les
cltd
fisttpll
call
fnsave
pop
fcmovnb
fs
dec
shrb
sub
cmp
imull
arpl
cli
popf
cmp
into
or
cmp
adc
sbb
outsb
movsb
inc
cltd
xchg
out
inc
push
fimull
ret
enter
test
aaa
das
cs
psrld
mov
dec
outsb
outsl
arpl
jbe
mull
push
dec
mov
mov
mov
adc
jne
mov
adc
adc
test
in
inc
addr16
adc
cmpl
add
mov
adc
mov
and
lods
cli
mov
mov
mov
push
sbb
push
mov
add
or
xor
inc
push
leave
cli
add
inc
push
popf
sbb
ds
sbb
in
add
xchg
inc
test
dec
mov
popf
xor
out
sub
insl
jge
repnz
in
dec
ds
sbb
div
imul
cld
rolb
cmp
mov
jne
or
mov
fnsave
shll
cli
jno
out
daa
and
fldt
jp
push
sub
int
test
xor
ljmp
popf
imul
sbb
cmc
sub
and
insl
jo
pop
lahf
movsl
adc
aaa
cs
les
jl
repz
mov
pop
xor
jg
lods
or
jl
pop
xchg
jge
insl
shl
je
fsubs
rolb
and
out
push
add
outsl
loopne
arpl
pop
inc
sbb
push
pushf
test
insb
loope
xchg
ficompl
idiv
adc
push
mov
enter
push
cs
mov
jmp
out
xchg
dec
lret
xor
mov
push
or
lods
push
aam
xor
pop
shl
mov
rolb
lods
cltd
shll
push
cmp
xchg
loopne
rcll
imul
sub
pop
lea
pop
cmp
dec
clc
icebp
subps
in
sahf
mov
ret
xor
mov
idivl
ret
test
test
in
adc
push
sahf
xchg
xlat
mov
mov
xchg
dec
repnz
and
mov
aaa
push
cmpsl
sbb
pop
movsl
leave
lret
out
adc
push
movl
mov
stos
rorl
xorb
stc
addl
shll
jne
push
dec
pop
mov
mov
mov
xor
xchg
aad
loop
notb
dec
data16
xchg
mov
xchg
dec
mov
pop
cmp
pop
and
pop
mov
rorl
mov
dec
lock
fisttpl
xchg
sbb
into
and
fs
roll
test
mov
sub
test
popf
mov
sar
test
mov
in
jnp
movsl
clc
mov
lods
in
fsubrl
mov
cmp
loopne
push
inc
xor
jp
push
mov
and
jno
les
push
lods
push
out
or
mov
mov
repnz
or
pop
xchg
xchg
add
mov
jb
inc
in
sbb
icebp
pop
addr16
outsb
sbb
mov
js
jne
movsl
xor
pusha
mov
in
orl
es
adc
jle
jecxz
in
into
mov
inc
xchg
mov
cltd
dec
mov
faddp
mov
and
sub
push
add
pop
loope
int3
xchg
lahf
ficompl
dec
pop
dec
push
pop
cld
adc
adc
mov
clc
decb
ret
inc
mov
fists
adc
test
mov
sbbl
xchg
popa
and
xchg
push
mov
shrl
or
cmp
mov
je
ljmp
mov
aaa
outsb
popa
lret
shrl
mov
cmc
in
inc
les
jmp
popf
pop
adc
jo
aad
push
sbbl
cmc
jae
int3
adc
jge
dec
fs
rcr
stos
adc
adc
xchg
sar
test
outsl
sahf
mov
lahf
mov
jl
fucom
mov
fwait
pop
imul
ret
ja
jns
call
in
adc
dec
sub
push
push
mov
mov
add
out
cmpsl
call
jb
je
sbb
lods
or
fucomi
pop
xchg
pusha
push
stc
insb
xor
stc
sub
pop
sbb
adc
mov
mov
mov
into
adc
cmp
add
jno
dec
stc
xor
orl
test
leave
mov
cwtl
mov
fldcw
test
and
mov
into
mov
mov
adc
xchg
fimuls
mov
stos
fcoms
mov
frstor
shrl
repnz
lock
rol
cltd
pushl
ficompl
mov
sbb
lds
inc
jae
aaa
mov
cmp
clc
repnz
or
in
mov
or
jmp
pop
mov
pushf
lcall
sub
in
mov
les
dec
shl
jns
pop
int
cmpsb
imul
dec
inc
or
pop
and
dec
and
xchg
sbb
mov
movsl
pop
mov
ds
jbe
stc
adc
cmp
jle
lcall
fcmovnu
popf
sub
test
xor
push
inc
adc
stc
shll
stc
out
lahf
adc
adc
ja
lds
addl
pop
push
xchg
sbb
sbb
scas
loope
xor
xchg
mov
pop
aas
adc
aad
iret
jle
lock
inc
adc
sub
push
lahf
mov
inc
call
add
push
lea
add
ficomps
mov
and
cs
imul
mov
or
sub
lahf
ljmp
into
xchg
mov
ret
cmc
dec
push
push
dec
mov
korb
xchg
in
mov
testl
inc
rcrl
in
fisubs
mov
sub
mull
inc
jp
lcall
mov
iret
sbb
ss
and
jmp
add
adc
mov
in
push
and
sarl
repz
cld
jb
adc
in
add
sahf
add
lods
data16
mov
add
loop
call
lds
jne
xor
adc
xchg
addb
ficompl
stc
cmp
push
inc
and
adc
ja
hlt
cmpsl
lret
jmp
push
inc
stos
jecxz
xor
ret
mov
int
inc
dec
jl
shll
sbb
jnp
dec
je
push
mov
pop
push
add
fs
push
inc
fstps
cmp
loope
loop
clc
xchg
sbb
enter
fnstcw
push
add
stos
xchg
sbb
mov
in
add
repnz
lods
test
fs
in
mov
and
daa
int
xchg
push
jno
je
lds
sub
dec
mov
cmp
pop
xchg
mov
aad
std
orb
mov
ljmp
and
scas
xlat
pop
jmp
lahf
aas
mov
shrl
rclb
das
jmp
decb
xchg
or
jno
dec
fcomip
sub
sub
lock
out
es
jns
push
sbb
imul
stc
cs
jl
mov
fsubs
mov
arpl
mov
inc
sub
pop
add
lahf
add
adc
ds
xchg
xchg
stos
sub
gs
adc
fidivs
leave
dec
inc
aad
jecxz
fbld
push
fucomi
inc
cmpb
aaa
jp
mov
arpl
xchg
sub
imul
sub
inc
pop
aam
andl
inc
push
or
cmpsl
aas
push
mov
sahf
or
mov
add
sub
sti
fwait
push
fmul
aaa
call
int
add
stc
pop
mov
mov
sub
mov
popa
add
popa
aam
sbb
cs
insl
push
mov
xor
xchg
hlt
adc
or
mov
ret
cmc
and
jge
pusha
sahf
inc
mov
cwtl
rorb
js
xor
loopne
sub
popf
sub
sub
push
xor
test
out
es
stc
mov
out
pop
lea
push
popf
inc
mov
inc
iret
outsl
sbb
rep
mov
rclb
in
jecxz
mov
pop
mov
popa
movsl
rcrl
push
xchg
xchg
mov
out
rcl
or
sbb
mov
clc
imul
pop
mov
insl
xor
ja
push
sbb
pop
xchg
scas
add
out
push
pop
test
test
xchg
dec
fwait
test
outsl
xor
push
lret
push
fs
cmp
adc
test
dec
push
fs
mov
push
setno
push
enter
xchg
jae
js
push
or
mov
and
je
std
insl
clc
jecxz
lock
shrl
jecxz
and
mov
lods
aad
add
cmp
jno
or
adc
mov
repz
xchg
add
lock
sarb
into
pop
loop
dec
aaa
pusha
push
jo
in
stos
enter
sbb
adc
xor
rcll
add
inc
or
aam
xchg
js
jno
pop
out
mov
jbe
dec
pop
in
scas
jmp
rorl
repz
add
pop
pop
lahf
addr16
add
pop
popa
stos
jmp
pop
inc
mov
lds
jns
xchg
mov
sub
sub
dec
repz
addb
lea
aaa
pop
out
in
fwait
jo
and
jge
fwait
popl
xor
jb
notl
popf
ds
xor
mov
xchg
sub
push
in
aas
out
or
int3
xchg
roll
push
shlb
ljmp
das
pop
add
test
sbb
movsb
sbb
xchg
sbb
push
sbb
pushf
addr16
out
add
cmp
fs
insb
jb
out
cmc
insl
aas
insb
icebp
push
lock
movsl
xlat
repnz
movsl
aaa
in
cltd
push
xor
push
mov
imul
lods
fsts
insb
cmc
hlt
sub
repnz
aad
xchg
sub
sbb
clc
dec
out
ret
outsb
fs
jl
out
xchg
inc
adc
inc
es
xchg
xor
subb
pop
wrmsr
pop
je
hlt
repz
repnz
lods
cmpsb
push
cwtl
adc
pinsrw
fildl
and
pop
xchg
jmp
data16
adc
xchg
mov
jge
call
sub
jo
pop
xchg
sbb
xlat
push
push
repnz
jne
mov
and
mov
adc
std
adc
mov
add
mov
sbb
icebp
add
xchg
mov
adc
and
lods
jns
test
adc
push
cmp
lods
jg
or
pop
leave
add
lock
or
shll
adc
mov
stos
jg
cld
dec
or
jmp
xlat
jecxz
dec
inc
and
mov
xchg
mov
fs
stos
fnstenv
fstl
push
mov
lret
adc
stos
pop
pop
pop
dec
xor
cmpsl
jge
cwtl
stos
mov
fldt
sbb
lds
mov
repz
lods
pop
into
stc
cld
pop
movsl
fcom
clc
leave
fimull
out
inc
mov
pop
jbe
xchg
add
cmp
cmp
scas
shll
push
and
add
sub
or
in
and
cmpsl
push
inc
out
scas
adc
adc
xchg
imul
iret
xor
sbb
mov
add
adc
imul
inc
dec
fs
rorl
fcoml
je
add
mov
insb
out
jne
cwtl
cld
mov
jae
push
cmp
sub
and
vcvtsd2ss
shl
push
sbb
jg
loope
movsl
or
mov
addr16
nop
addr16
push
xchg
jl
dec
imul
or
arpl
mov
lods
mov
jg
repz
mov
cmp
adc
and
jno
or
inc
add
jno
roll
ds
jmp
mov
adc
fwait
stos
std
sbb
popf
dec
mov
and
pop
fsub
fwait
cltd
xor
jecxz
adc
or
gs
xlat
xchg
adc
ja
pop
cmp
cmp
or
in
repz
aam
pop
cmp
data16
sbb
outsl
or
or
mov
push
ret
sbb
sbb
mov
xlat
cmpsb
push
les
xor
lcall
out
in
push
out
ret
inc
adc
in
sbbb
and
pop
stos
clc
pop
std
xchg
loop
lahf
pop
lret
xor
mov
dec
add
jle
and
jl
ds
mov
xor
xor
xchg
repnz
cmpsb
and
fsubs
push
dec
push
push
dec
imul
cmpsl
and
icebp
cld
adc
std
or
or
xchg
test
mov
jo
pop
and
pop
mov
add
bound
and
pushf
push
xor
inc
dec
in
pusha
es
pop
sub
jl
out
jns
int
add
xor
clc
sbb
in
daa
jecxz
mov
dec
cmpsl
dec
ss
xor
pop
pop
mov
dec
pop
xchg
xor
mov
call
cmc
test
push
stos
int3
mov
jecxz
lods
xchg
test
aas
push
andb
xor
sti
cmpsl
cli
repz
lock
dec
lea
jnp
dec
jnp
xor
inc
sub
les
sub
imul
stos
xchg
mov
cmp
adc
cmpsb
ret
stos
fst
xor
or
in
push
sbb
jle
icebp
and
push
loopne
sti
lret
add
fldenv
ret
mov
ret
jmp
lods
cmpsb
lock
leave
outsl
adc
push
add
idiv
es
dec
lcall
stos
xchg
cmpsb
or
clc
push
mov
push
test
and
rcrl
push
pop
or
into
ds
dec
outsl
test
enter
xchg
popf
mov
sete
push
ljmp
mov
cmpsl
iret
arpl
dec
dec
shrb
inc
mov
outsb
push
or
push
les
cmpsl
scas
push
pop
imul
sub
lret
cmp
xchg
pop
sbb
ljmp
call
pop
in
xor
mov
fadds
adc
loopne
mov
aas
adc
push
es
clc
inc
sahf
pop
inc
dec
int
mov
lret
jge
repz
push
in
cmpsb
jle
mov
popf
out
pop
into
adc
xchg
lret
and
mov
mov
pop
mov
jmp
add
movsb
xchg
pop
dec
push
imul
sub
pop
jb
push
xchg
jno
adc
jnp
mov
xchg
push
pushf
into
mulb
sub
jno
ja
adc
or
fnstcw
in
adc
lcall
mov
jle
std
pop
repz
mov
mov
outsb
fldenv
les
icebp
addr16
xchg
lock
mov
scas
mov
cld
cwtl
cmp
or
xchg
daa
fbld
aas
sbb
lahf
outsb
in
fdivr
in
dec
cmp
push
ret
mov
add
xorl
sub
cmpsb
aaa
shl
lahf
add
mov
lods
mov
sahf
sti
pop
outsb
and
into
dec
or
scas
jge
orb
cmpsb
xchg
pop
or
popa
clc
fucomi
push
fistpll
cmp
clc
jns
cmp
and
or
call
movl
and
movsb
xchg
sbb
imull
or
lods
stc
dec
push
mov
or
loop
mov
insb
fdivs
shrl
mov
stc
stc
int3
imul
inc
pop
push
cld
xchg
fnsave
lods
les
xor
jbe
mov
adc
mov
and
pop
sahf
data16
pop
subb
inc
push
lcall
xchg
or
xlat
test
pop
leave
push
push
push
lea
push
pop
or
movsb
out
sbb
imul
rolb
adc
add
mov
and
pop
lods
movsb
pop
sbb
int3
popa
or
xlat
jl
nop
test
dec
ds
arpl
clc
dec
adc
mov
fmuls
sbb
mov
jno
push
dec
lock
xchg
dec
ret
cmpb
jae
pop
fstpl
xor
out
push
dec
shll
iret
dec
movsl
pop
push
inc
scas
sbb
fldenv
sti
push
mov
and
in
sub
xor
jb
push
jbe
pop
or
subb
push
icebp
mov
test
pop
fs
lret
xchg
mov
je
adc
mov
mov
push
rcr
jg
sub
cwtl
decl
jae
mov
movsl
jmp
scas
sub
add
adc
int3
movsl
and
jmp
dec
std
insb
xchg
ljmp
out
sbb
push
out
inc
push
inc
cmp
mov
inc
pop
fnstsw
mov
xor
jl
shrl
adc
fiaddl
sbb
ret
lahf
mov
sub
mov
ret
imul
push
cs
push
rcrl
ljmp
mov
fldl
mov
mov
mov
xor
cmp
pushf
out
std
lcall
jg
loopne
or
shrb
je
inc
cmpsb
cmp
enter
jl
dec
shr
push
cltd
ljmp
and
lea
fwait
jb
mov
mov
push
or
jl
cs
mulb
dec
or
cmp
mov
mov
mov
movsb
loope
dec
outsl
mov
xor
fists
dec
cmp
xchg
inc
pop
ficompl
ret
inc
and
adc
aad
ret
ret
and
out
inc
repnz
pop
cmpsb
test
les
mov
repnz
fsubrl
das
inc
sub
pop
mov
jg
pop
mov
sbb
das
jo
dec
in
gs
xchg
xor
xchg
inc
int3
jle
stos
push
add
dec
pop
mov
mov
adc
xchg
sbb
cmp
sub
mov
dec
lds
adcb
cwtl
or
lock
ss
cld
push
leave
add
sarl
scas
xchg
sbb
sub
pop
ret
jb
push
xchg
mov
jae
cltd
push
xchg
jg
jmp
jg
ja
xor
imul
jne
lahf
enter
ljmp
out
push
rcl
scas
jl
jl
hlt
and
aam
ret
call
rcr
inc
xor
mov
inc
cmpsl
xchg
xor
aaa
pop
add
add
mov
shll
mov
out
adc
add
mov
inc
lcall
daa
push
ja
out
sub
sub
loop
push
cmp
into
shrb
cmp
leave
into
or
icebp
or
mov
iret
pop
or
xor
jns
push
mov
outsb
push
pop
inc
pushf
dec
daa
leave
mov
subl
lss
inc
mov
movsb
pusha
mov
shrl
mov
dec
bound
bound
imul
mov
xchg
inc
fwait
add
push
cmpsl
leave
enter
dec
add
dec
dec
imul
or
out
pop
adc
popa
mov
fmuls
add
inc
addr16
lcall
repnz
push
pushf
out
or
pop
push
imul
add
in
and
xchg
int
iret
sub
mov
popf
mov
addr16
xchg
ficomps
fldt
in
push
stc
ljmp
je
outsb
addr16
jg
add
jbe
jmp
sbb
jge
lahf
insb
lret
push
sub
and
add
and
je
sbb
xchg
pop
mov
nop
loope
icebp
dec
arpl
push
insl
xor
push
push
inc
cmp
cmp
mov
sub
pop
nop
jl
loop
fisubrl
movsl
mov
cmpsl
mov
jmp
pop
movsb
aam
bound
in
stos
inc
ficoms
mov
and
fsub
jae
add
cmc
xchg
jle
pop
sub
add
cwtl
fsubl
inc
push
call
or
into
lret
pop
mov
fidivrs
inc
xor
into
lahf
cs
push
outsb
jle
iret
aaa
and
sbb
mov
in
sbb
movsl
adc
adc
jo
and
add
adc
mov
repnz
cmp
adc
push
pop
inc
push
outsl
mov
mov
jg
sbb
xchg
outsb
xorb
dec
arpl
push
dec
std
xor
jns
repz
cmpsl
jl
xchg
and
and
clc
pop
xor
add
out
lock
jb
push
in
scas
inc
pop
jl
in
pop
adc
cmpsl
int
mov
lret
xlat
dec
pop
inc
push
ds
add
cwtl
pushf
mov
jmp
mov
outsl
mov
clc
jae
or
mov
mov
cmp
pop
int
sbb
lahf
loope
dec
inc
mov
lcall
lock
sub
jnp
cmp
std
dec
sbb
fstpl
mov
or
pop
jmp
jge
mov
push
sahf
jo
cmp
lea
stos
ss
push
gs
and
outsb
rcrb
insb
jge
rcrl
xchg
add
stos
bound
xchg
mov
or
fcomp
jae
cli
push
adc
push
mov
inc
test
dec
mov
mov
dec
and
pop
gs
cmpsb
push
push
inc
imul
aad
adc
mov
jns
test
out
push
loop
lods
fwait
push
pop
in
mov
xor
add
loope
mov
loope
into
test
shll
icebp
cmpsb
jb
lahf
adc
ret
dec
and
popa
push
xchg
jmp
andb
jne
jl
jl
push
cmp
int3
jns
cwtl
xor
cmp
mov
and
jle
xchg
sti
std
popf
dec
pusha
sub
lods
sbb
rcrl
sub
enter
mov
inc
div
sub
jle
rcrl
adc
push
inc
je
cld
mov
cli
sahf
lods
test
imul
popl
xor
cmpl
mov
add
aam
fnstsw
pop
enter
movsl
cmpsl
rcrb
add
xchg
bound
xor
daa
mov
ret
leave
xchg
inc
lret
fcompl
cmp
scas
dec
xor
push
lock
jg
test
add
notb
xlat
loop
mov
and
mov
lret
push
jecxz
lock
xor
aam
xor
cmpsb
test
outsb
stc
cmp
mov
sbb
fistpll
dec
ja
fdivl
jmp
jne
mov
xchg
pop
aam
jmp
popf
inc
mov
cmc
movsl
mov
and
push
scas
jbe
push
in
sbb
shlb
adc
push
mov
outsb
cmp
jns
mov
mov
inc
adc
icebp
addb
sub
ja
jge
cmp
flds
xchg
sbb
imull
fimull
popa
shlb
inc
pop
cmpsl
dec
pop
fildll
push
inc
jl
call
xor
inc
inc
adc
pushf
or
addb
or
data16
das
xor
pop
mov
mov
sbb
insl
adc
xor
movsl
icebp
sbb
movsl
fldcw
and
xor
cmp
enter
adc
jge
les
dec
pop
fwait
inc
stos
dec
dec
clc
dec
pop
jge
jne
push
mov
sbb
cmp
pop
sub
adc
jne
sub
sub
mov
xchg
out
lret
inc
imul
test
jns
cmp
stos
cmp
repnz
int3
add
out
icebp
xor
les
push
jg
div
loop
scas
sbb
xchg
std
cmp
mov
je
jecxz
inc
call
aaa
rclb
mov
aad
jbe
or
std
inc
into
xchg
push
mov
xchg
dec
in
std
jbe
mov
dec
xchg
cmpsb
mov
sbbl
ja
dec
pop
ret
nop
mov
repz
aaa
test
ja
inc
mov
lods
xchg
outsl
adc
push
aad
test
mov
and
sbb
dec
aas
sbb
stos
xorb
push
mov
mov
xchg
in
push
test
xorb
sbb
and
and
iret
mov
add
push
imul
call
push
add
ja
imul
dec
and
stos
ret
and
stos
jmp
add
scas
stos
xchg
cmpsb
es
jl
and
pop
sub
pop
add
scas
jge
jno
or
js
fiadds
int
dec
mov
mov
aaa
add
xor
and
in
cli
loope
jae
cmp
or
jns
js
push
mov
popf
push
lret
mov
pop
jge
cmc
cmpb
shlb
ljmp
add
into
xor
jg
repz
pop
sbb
pop
subl
outsb
or
pop
in
pop
jno
shll
push
lock
test
cmp
jmp
or
inc
addr16
test
or
inc
inc
ljmp
xchg
mov
shlb
rcr
push
mov
fcoml
dec
aad
in
xchg
dec
scas
xchg
or
jge
or
pop
cmc
xor
shrb
cmpsl
jnp
sbb
adcl
jbe
in
xchg
mov
sbb
jp
sbb
sar
sar
jp
mov
inc
cmp
stos
lahf
rolb
cmpsb
jno
shr
push
pusha
aad
addr16
adc
jl
adc
mov
xchg
pop
xchg
add
scas
mov
xor
test
inc
pop
data16
inc
mov
mov
dec
in
sbb
les
gs
gs
int
shl
loope
call
push
push
push
adc
adc
xor
ljmp
js
sub
testb
cmp
or
mov
ficomps
sub
fwait
imull
add
add
fidivrs
mov
fdiv
insl
lods
mov
loope
cmp
fs
mov
js
push
les
ljmp
mov
imul
jp
das
shrl
xor
dec
arpl
adc
cmp
add
jg
mov
fdivl
xchg
repz
pushf
cmp
and
loope
movsb
loop
xchg
aad
mov
ljmp
sarl
cs
mov
jge
mov
sub
in
dec
sbb
jb
out
mov
bsf
fcoms
mov
daa
jnp
mov
outsl
popf
inc
in
out
jbe
xorb
das
hlt
das
sbb
push
fs
popa
test
xor
fisubrs
inc
ret
xchg
mov
fistpl
lret
std
mov
test
cltd
mov
in
sub
sub
xchg
push
aam
push
sbb
int
jmp
sbb
sbb
xor
cmp
stos
mov
cmp
sbb
aaa
mov
cmp
stc
and
or
add
sbb
push
js
xor
ret
jns
fs
dec
imul
in
sti
inc
push
push
in
pop
cmp
loop
leave
loope
xchg
pop
sbb
out
mov
jecxz
cltd
jg
jbe
cmp
mov
sbb
cmpsb
or
fnstcw
pushf
adcb
sbb
mov
out
es
aam
movb
test
andb
xor
pusha
mov
or
mov
and
xor
dec
and
sub
xchg
je
ret
shlb
adc
dec
leave
push
jb
rorb
jg
test
jecxz
loop
dec
pop
push
idivl
and
mov
adc
loop
sbb
mov
stos
ja
dec
inc
fidivs
ljmp
mov
add
cmp
int
sbb
popa
inc
xchg
lcall
sbb
popa
inc
js
cmp
loope
push
pop
push
daa
jle
fsubrs
in
sti
leave
xchg
xor
ds
bnd
call
inc
jo
xor
jmp
orb
cltd
inc
push
and
or
outsb
sbb
dec
and
mov
pop
cmp
mov
jbe
fmul
push
cmp
leave
pusha
add
icebp
decl
pop
in
mov
jmpw
repz
sbb
scas
cs
imul
xchg
add
push
into
xor
sbb
mov
mov
incb
call
subw
pushf
adc
xchg
out
pop
xor
test
mov
push
sbb
and
mov
enter
lret
mov
sbb
sub
pop
pop
dec
ffreep
lea
cmp
lahf
sbb
call
pop
adc
sbb
ljmp
lods
insl
xchg
mov
mov
or
cmp
filds
shll
mov
out
insl
sub
dec
pop
aas
out
lcall
cmpsb
movsb
aam
mov
int3
daa
mov
lds
and
pop
dec
stc
es
mov
push
in
aas
pop
cmp
xlat
loop
mov
add
xchg
cltd
and
sbb
inc
repnz
lret
xor
dec
loope
cli
fwait
std
push
pop
into
xchg
enter
pop
and
adc
shl
test
popf
addb
aaa
pop
push
add
popa
ss
and
fwait
pop
insl
stos
daa
jb
fcomps
leave
and
or
xchg
sti
int3
popf
mov
dec
movsl
aad
aam
adc
inc
mov
out
mov
mov
pop
call
aas
cwtl
xor
xor
icebp
loopne
cmp
adc
scas
jle
mov
dec
mov
pop
dec
mov
sub
in
xlat
sbb
pop
rorl
loopne
repnz
pop
and
add
sbb
push
jae
add
or
ljmp
orl
push
pop
jns
scas
adcl
pop
and
loopne
sbb
out
inc
movsb
dec
or
mov
pusha
lret
xchg
add
loop
xor
pop
pop
mov
xchg
xorb
jle
fadd
add
fnstcw
inc
xchg
inc
and
adc
loope
stc
inc
add
inc
sbbb
insl
dec
cmp
adc
cmp
or
in
or
mov
outsb
insl
test
pop
mov
pop
notl
mov
dec
pop
pop
stos
xorl
or
sub
das
lret
cmpsb
or
pop
adc
scas
jns
shrl
mov
test
test
movl
cs
ss
mov
das
dec
hlt
mov
xchg
push
je
sub
test
mov
cmp
je
enter
or
scas
push
push
in
inc
jae
sub
roll
orl
xor
mov
setg
mov
fsubl
cli
or
pop
lcall
cmp
aaa
test
fldt
mov
lock
or
cmp
mov
cli
jp
imul
pop
add
jae
lcall
repnz
mov
out
sbb
cmpsb
cld
xor
xchg
test
xchg
sub
sub
xor
jmp
dec
xchg
pop
lds
push
in
jle
lret
adc
cmpsl
ljmp
mov
mulb
mov
inc
testl
mov
fistps
pop
sub
enter
push
ljmp
jno
dec
or
in
push
add
outsb
jns
out
pop
out
jl
fdivl
cmpsl
cmp
fcoms
mov
pop
add
jns
and
sub
cmp
icebp
addl
shl
das
stos
shr
pop
ss
and
mov
dec
rcrb
call
add
sub
lret
dec
std
insb
lret
stos
pop
lcall
loopne
cmp
push
lea
pop
lcall
dec
imul
in
mov
addb
stos
inc
dec
loop
insb
pusha
je
fldl
std
dec
outsl
fdiv
iret
pop
and
adc
out
push
lods
in
pop
mov
mov
shlb
inc
xchg
popa
add
addb
dec
and
call
in
add
xchg
dec
out
stc
pop
lds
sahf
popf
mov
or
push
xlat
ret
test
js
inc
xchg
lcall
and
sar
in
inc
jle
rorb
dec
pop
lods
std
inc
je
js
loop
cmpb
jmp
mov
xchg
aaa
cmp
lods
mov
subl
push
push
fcmovnb
fwait
out
aas
faddl
inc
xchg
hlt
imul
mov
mov
loope
sub
les
mov
out
das
push
inc
push
loop
add
xchg
addb
adc
and
cmc
stos
pop
rcrl
jl
das
js
into
or
js
loopne
icebp
int
xlat
roll
bound
cmp
fucomp
push
incl
adc
daa
lahf
ss
mov
pop
cmc
dec
rclb
ret
mov
dec
int3
sahf
stc
jae
bnd
add
mov
aas
cld
outsb
xor
push
iret
sahf
ljmp
ja
leave
sti
fdivrs
scas
sub
xchg
mov
xlat
hlt
and
aas
xchg
cwtl
sub
push
xor
mov
sbb
push
pop
pop
test
push
and
xchg
and
dec
ret
imul
je
push
out
fisttpl
sbb
pop
xchg
adc
fdivrl
aaa
insb
sub
cmc
inc
test
mov
ret
shrl
cmpsl
lods
les
jnp
add
xchg
loopne
out
out
push
add
pop
mov
insb
lret
sub
mov
ljmp
lods
push
mov
movsl
daa
aam
mov
jne
and
mov
into
lods
fisubrs
pop
stos
add
mov
aas
pop
inc
cpuid
push
cwtl
lahf
testl
dec
sahf
loop
cmp
mov
movsl
aas
jg
pop
stc
addr16
fwait
inc
mov
cmp
dec
and
das
repnz
add
loope
iret
rolb
mov
inc
faddl
fcomps
out
roll
inc
je
mov
leave
outsl
add
add
push
fidivrs
cmpsl
shll
cmc
outsb
inc
int3
jl
addr16
lcall
sub
adc
das
mov
inc
daa
and
arpl
add
jle
push
cmc
cmpsb
dec
jp
inc
cs
jae
pushf
test
out
or
int3
mov
or
fwait
fwait
sbb
cmp
mov
mov
cmpsb
divb
lock
clc
xchg
mov
and
imul
cli
sarb
loope
and
jbe
out
mov
add
ret
leave
pop
lods
xor
stos
in
fstpl
lods
test
aam
sbb
das
inc
mov
add
nop
sub
aam
rcr
js
inc
cs
cld
int3
jmp
lods
jno
or
movb
xchg
dec
mov
scas
sbb
inc
repnz
ficompl
xchg
out
jb
adc
dec
xor
pushf
sub
les
test
popa
inc
addr16
divl
inc
loope
movsl
adc
test
or
pop
les
mov
iret
push
call
mov
cmpsl
sbb
jmp
out
cltd
push
jo
test
push
jecxz
push
push
ja
lahf
sti
sbb
sub
push
pushf
daa
and
sub
xchg
add
add
xchg
lahf
outsl
xor
vphaddwq
sbb
imul
outsb
push
test
sub
jl
jmp
cmc
out
cmpsl
pop
inc
mov
xchg
out
fdivl
sub
imul
cmp
mov
in
cmpsl
and
shl
xchg
or
rorb
cmp
ss
mov
jecxz
fstpt
xor
leave
mov
xchg
pop
dec
rclb
loopne
jns
xor
push
loop
pusha
xchg
cmp
adc
imul
dec
icebp
out
iret
and
rcrb
xchg
cmc
dec
push
mov
dec
js
pop
push
mov
pusha
adc
repz
and
mov
jge
dec
push
dec
arpl
jg
addl
pop
add
xor
movsb
test
inc
and
leave
imul
push
imul
flds
xor
in
cmp
cmp
or
repnz
test
mov
mov
popa
jge
xchg
jmp
jb
sbb
dec
popf
movsl
mov
icebp
mov
inc
lret
notl
int3
mov
lds
lds
inc
jb
xchg
add
or
mov
xor
and
xor
int
addr16
inc
sti
shl
or
fwait
push
add
fwait
outsl
jne
sub
add
push
inc
data16
jnp
inc
fsts
test
shrb
lds
roll
in
int
arpl
xadd
push
add
inc
jge
insl
call
jns
js
pop
cmp
adc
scas
xor
mov
subl
mov
mov
add
repnz
int3
push
rol
push
lretw
not
dec
andb
dec
and
das
ja
cmp
test
sbb
mov
pop
jmp
pop
add
and
rclb
nop
inc
bound
ret
lea
inc
or
ja
data16
push
js
dec
dec
stos
and
ljmp
outsl
cmp
sbb
andb
scas
add
add
lds
cwtl
sbb
hlt
xchg
cld
mov
aaa
repz
lea
jge
cli
test
pop
inc
ja
sub
inc
insb
popf
cmc
mov
ret
aam
int
inc
imul
jnp
fstps
outsl
push
push
xchg
enter
or
lea
xor
or
sub
pop
aam
leave
movsb
fcmovnu
and
mov
add
sti
pop
mul
cltd
adc
insb
sbb
jns
leave
or
mov
out
push
enter
xchg
mov
scas
not
or
inc
fwait
movsb
pop
mov
mov
dec
iret
cwtl
test
sbb
ljmp
push
les
xchg
xchg
test
arpl
mov
xor
mov
push
mov
ret
fldl
sub
and
lods
ljmp
lahf
movsl
mov
ret
pop
enter
or
sbb
dec
add
test
ja
mov
loop
testb
cmp
jg
push
hlt
cmp
cli
pop
push
imul
push
test
or
dec
cmp
xor
xor
lret
lcall
mov
add
mov
ja
icebp
adc
dec
test
ret
sub
nop
das
inc
shrb
cli
mov
xchg
mov
enter
pop
out
loop
dec
dec
adcb
mov
stc
popf
mov
test
jbe
outsw
sbb
loop
jp
fstps
repnz
xchg
popf
mov
mov
iret
push
mov
mov
mov
adc
leave
mov
or
aaa
jne
xchg
mov
mov
icebp
gs
loope
fwait
jl
aaa
insb
mov
mov
push
test
in
cmpsb
rolb
in
mov
mov
fstps
orl
xchg
adc
sti
xchg
icebp
or
cmp
mov
testl
aas
add
pop
lcall
inc
add
aad
mov
and
es
les
mov
mov
xchg
repnz
jbe
cld
add
cs
jl
sub
data16
mov
xchg
inc
mov
jecxz,pt
sub
lock
inc
fdivrl
repnz
xchg
aas
fwait
mov
hlt
fnsave
xchg
jg
in
xchg
mov
xchg
jg
cmpb
js
rcrl
aaa
push
int3
fildl
and
es
sbb
inc
idivl
nop
jmp
fcmovnu
pushw
xor
mov
test
ljmp
jno
test
les
pushf
dec
or
xchg
dec
jnp
int
jl
ficoms
xor
sub
dec
push
xor
js
ret
and
rcr
xchg
xor
jmp
jns
mov
and
loop
jbe
fisttpll
dec
insl
pop
inc
pop
adc
lods
aaa
dec
mov
xlat
aam
icebp
mov
jecxz
js
pop
mov
jp
ret
jge
lds
mov
jle
insl
lcall
ljmp
mov
aad
add
mov
sti
inc
jnp
add
out
mov
sbb
lret
and
imul
int3
ret
inc
icebp
mov
std
or
jge
inc
in
add
dec
fsub
imul
das
mov
lahf
xorl
or
mov
cwtl
cmp
add
and
es
sub
push
ja
imul
lcall
outsl
clc
mov
adc
aaa
mov
xorb
lea
fisubrl
mov
ljmp
adc
push
jge
ss
scas
mov
into
negl
mov
les
scas
dec
shl
movl
aas
sbb
arpl
cmp
cmp
mov
pop
pop
cs
sub
xchg
stos
stc
stos
pusha
gs
xor
jmp
popf
jbe
fildl
ss
mov
popf
xchg
pop
adc
adc
out
mov
sbb
jnp
jne
imul
push
cmp
dec
sarl
mov
ret
mov
subb
in
fwait
pop
inc
push
idiv
jmp
pop
in
sub
scas
incb
mov
mov
cmp
in
cs
movsb
dec
jnp
fadds
icebp
mov
dec
mov
addr16
daa
in
pop
cmp
dec
jno
push
pop
jnp
movsl
mov
mov
fdivr
pusha
scas
bound
data16
dec
add
ljmp
incl
out
push
adc
in
cmp
mov
add
adc
jg
push
xchg
int
mov
negl
jmp
fcoms
mov
xchg
fldenv
push
cmp
xor
inc
std
add
clc
dec
adc
mov
fstps
in
sub
mov
lea
inc
fldcw
mov
push
subb
cmp
insb
out
imul
push
inc
jecxz
add
adc
cmpsl
xchg
jp
mov
xchg
mov
movsl
roll
sub
push
loop
mov
gs
lea
push
mov
mov
std
lea
nop
sarl
inc
jmp
jb
xchg
enter
repz
rcl
inc
adc
mov
xor
out
cwtl
out
enter
fldl2e
inc
jp
ds
cmp
jg
into
pop
scas
outsb
cmpsb
aad
cld
cmc
shll
popf
xchg
sub
gs
repz
int
loopne
lods
mov
xchg
mov
rorb
stc
xchg
sbb
in
sub
dec
fwait
push
push
jbe
xor
cli
out
push
insb
mov
sub
out
jno
or
popf
push
or
adc
lds
fcmovnbe
sbb
out
or
movsl
mov
cmp
mov
pop
stos
clc
mov
and
fiaddl
pop
jp
loop
push
into
pop
and
mov
mov
mov
or
incl
aad
fcoms
xchg
sub
mov
loope
scas
mov
add
dec
arpl
lahf
mov
xchg
add
push
xlat
ss
xchg
sti
repz
popf
and
inc
decb
jmp
sarb
and
fcmove
bound
loop
std
or
jno
dec
movsl
andl
fsubrs
inc
es
out
fwait
pop
data16
out
pushf
push
mov
mov
imul
xor
add
inc
push
inc
pminsw
imul
inc
test
add
push
lret
fwait
test
idivl
daa
into
and
and
mov
and
pushf
or
sarl
inc
add
fs
mov
lret
jo
pusha
fsubs
into
dec
cmpps
out
sahf
fnstsw
repz
out
aaa
cli
push
xlat
mov
icebp
xor
sub
aaa
dec
loop
int3
cltd
push
mov
mull
out
cmpsb
push
fcoml
and
or
add
xchg
xchg
js
repz
fcmovnu
inc
mov
mov
shrb
nop
out
ret
testb
mov
sub
ja
loopne
enter
sub
cmc
clc
test
adc
adc
fldenv
sti
mov
pop
cltd
ficomps
pushf
sbb
sbb
popf
add
inc
push
mov
mov
add
xor
add
jo
lret
mov
mov
push
mov
stos
outsb
dec
xor
inc
aam
std
pusha
cmp
out
cmp
sbb
aad
dec
push
dec
inc
ljmp
lock
mov
push
ja
xor
jg
int
push
subb
pop
sbb
out
sbb
or
mov
and
test
mov
dec
icebp
and
pushf
jecxz
ret
push
push
fbld
dec
dec
adc
gs
xor
sub
les
add
repz
push
sbb
pop
icebp
jns
cmpsb
fnsave
pop
repnz
mov
or
jne
push
and
and
pop
adcl
fisubrs
mov
dec
xlat
cmp
dec
arpl
cmp
aam
pop
test
ret
jmp
sbb
push
push
imul
outsl
push
gs
push
das
scas
jp
rorb
mov
cmpsb
or
outsl
out
shlb
in
das
cmc
out
cmpsb
mov
push
iret
mov
or
push
flds
pop
push
sub
inc
xorl
pop
mov
fnstcw
xchg
in
idivb
leave
push
xor
jmp
popf
std
mov
fnsave
loop
mov
sub
xor
mov
mov
xchg
adc
xchg
dec
pop
scas
repz
push
lods
out
pop
adc
mov
cltd
xchg
mov
push
jnp
aam
xchg
int3
or
lods
xchg
xchg
imul
out
fucomip
es
push
inc
nop
or
js
ss
leave
lret
mov
and
inc
out
push
sbb
inc
ret
adc
and
mov
lea
sub
loop
dec
and
mov
lods
mov
daa
faddp
shlb
int
fcompl
xchg
fsts
shlb
gs
jg
push
push
lds
mov
mov
cmpsb
dec
inc
pop
xor
dec
jge
repz
and
pop
fisubrl
xchg
lcall
dec
fnstenv
cmpl
movsl
or
and
jge
xchg
test
int3
mov
add
or
sub
xor
sti
fwait
and
dec
pop
lahf
or
jne
icebp
ja
and
gs
into
call
std
sti
sbb
or
fisttpll
cmp
dec
cmp
mov
sub
inc
cmpsl
mov
repz
jne
push
xchg
jnp
rolb
push
lret
inc
lea
jecxz
jmp
hlt
das
inc
sbb
and
pushf
push
dec
inc
orl
inc
push
cwtl
or
stos
mov
mov
ds
add
icebp
sbb
xor
sysexit
xor
push
sub
sti
cld
pop
shrb
jl
int3
jg
fucom
scas
inc
inc
lahf
adc
repnz
stos
add
shll
dec
or
xchg
cwtl
ficoms
fwait
inc
sub
mov
mov
adc
lret
sahf
mov
mov
and
sub
lock
mov
pop
enter
jge
or
adc
add
or
mov
add
out
sbbl
fwait
test
ds
dec
aas
pop
mov
leave
sub
push
add
in
lods
iret
aad
outsb
inc
adc
int
ficoml
mov
aam
jge
mov
insb
xor
jbe
ss
xchg
ja
sub
mov
pop
bnd
jl
jecxz
jns
sbb
loope
add
sti
push
inc
sbb
js
cs
insl
cli
sar
add
fcomps
in
call
aam
dec
stc
mov
aad
lods
aam
das
mov
push
cltd
and
cmp
loope
xchg
rcl
push
add
dec
adc
adc
pop
jb
xor
add
mov
scas
mov
je
push
mov
das
adc
mov
add
mov
pusha
out
sbb
push
cmp
sbb
out
xchg
push
pop
out
push
pcmpgtd
ds
pop
sbb
frstor
out
pop
adc
mov
test
or
adc
sti
push
xor
lret
mov
nop
and
mov
test
lret
xchg
call
mov
inc
fwait
xor
push
dec
insb
push
ret
popf
dec
cltd
lods
xor
push
std
and
jmp
into
jns
fsubrs
mov
loope
mov
pop
pop
or
xchg
ds
or
mov
pop
cld
adc
jmp
inc
adc
jp
push
aad
mov
and
pop
lds
push
loopne
movsb
fdivrs
mov
or
loop
sub
xchg
mov
or
sbb
pop
add
mov
jo
jmp
ljmp
lds
pminub
leave
pop
mov
push
mov
lds
adc
sahf
fcmove
sbb
decl
mov
adc
movsl
das
ficoms
pushf
and
sar
cmpsl
mov
push
xchg
mov
push
push
outsb
aaa
dec
jo
sahf
pop
into
idivb
mov
imul
sahf
xchg
mov
pop
dec
aad
setae
popa
imul
scas
pop
push
adc
cmc
aad
mov
lret
sbb
insl
sub
sub
push
daa
test
push
and
inc
mov
les
lahf
aam
loope
add
movsb
add
loop
int3
jg
mov
int3
movl
lret
cmp
ret
pop
inc
sbb
lds
fwait
cmp
mov
mov
push
and
ds
mov
out
int3
push
push
jnp
xor
jno
sub
fs
and
jp
fildll
and
and
jo
jae
mov
push
out
mov
sub
rol
fsubrl
test
xor
incl
xor
loope
fstps
cmp
dec
mov
pusha
pop
aas
dec
jno
cli
jle,pn
out
lods
std
cs
imul
add
push
xchg
xlat
aad
out
dec
jle
int3
fs
rol
movsb
je
jae
cmp
bound
mov
mov
add
xor
add
dec
push
stos
mov
mov
push
aam
push
fdivs
sti
fisubs
out
adc
xor
insl
rolb
or
mov
jns
fsubrs
xchg
dec
adc
outsb
cmp
cmc
or
int
inc
fnclex
dec
sbbl
jp
aad
push
decb
sbb
cmpsb
fcomps
mov
dec
pusha
fptan
push
pop
lock
test
xchg
ret
mov
jle
add
jbe
mov
sahf
aam
mov
cmc
mov
dec
shld
mov
mov
inc
repz
in
out
testl
push
xor
jecxz
cmp
xorps
into
mov
js
stos
mov
std
push
enter
roll
jb
mov
test
pop
cmp
clc
lahf
xchg
fmull
or
xchg
push
stos
jno
pop
popf
out
add
leave
dec
iret
pop
adc
and
pop
inc
lods
adc
jge
out
xor
pop
push
xchg
vmovmskps
xorb
pop
aas
lock
push
movsl
jle,pt
pop
dec
jg,pn
xor
xchg
lret
lcall
push
dec
das
rorl
lds
mov
cmp
out
cwtl
adc
fsubs
ret
in
in
mov
push
punpckhdq
add
fwait
cli
mov
xchg
add
push
or
jle
xchg
in
mov
add
cs
mov
enter
inc
sub
jle,pn
jge
xchg
outsb
sub
rorb
pop
sub
mov
pop
xchg
mov
mov
test
mov
stc
out
sbb
out
xchg
mov
dec
mov
mov
mov
jge
jl
lret
adc
or
sub
add
jne
dec
je
negb
std
push
sub
mov
sbb
popa
or
pop
rcr
sti
xor
jns
inc
pop
test
jp
jne
bound
movsl
stc
bound
cld
xchg
xchg
jmp
add
adc
xchg
pop
mulb
dec
jnp
adc
outsl
adcl
and
or
sahf
mov
and
push
jb
lods
int
arpl
js
mov
xchg
push
cmp
mov
movb
xchg
mov
imul
hlt
inc
outsl
mov
lock
sbb
cmp
les
push
push
xchg
pop
scas
add
add
ret
push
hlt
lds
sub
movsl
cltd
sub
or
and
jae
lds
inc
icebp
adc
lds
stos
rcll
cmpsl
adc
hlt
shrb
inc
es
es
sub
ja
jp
clc
pop
jae
das
xchg
das
push
fstl
or
pop
cmp
bound
cmp
lock
mov
hlt
insb
adc
push
cs
mov
ja
jge
mov
aas
fidivrs
dec
jb
xor
mov
roll
push
sbb
jmp
fildll
mov
jbe
cltd
adc
cmp
jge
testb
out
shlb
nop
scas
pop
mov
lret
push
jnp
jb
clc
sbb
pushf
add
sub
pop
outsb
inc
mov
and
ds
fldl
jmp
loope
sub
mov
dec
popa
repnz
push
jno
fldenv
and
rol
fstl
sub
test
inc
mov
iret
int3
push
jp
xadd
idivb
pop
popa
adc
insl
xchg
pop
scas
enter
out
pop
pusha
mov
push
sub
mov
jnp
aaa
push
xor
mov
sbb
out
iret
repz
gs
xor
mov
adc
rorl
aam
xchg
xchg
int
int3
out
lret
test
dec
andl
push
and
ret
dec
push
pushl
ss
insb
cmpl
jno
cmpsl
pusha
or
xor
push
mov
clc
xchg
push
ds
sub
pop
jecxz
mov
xchg
pop
scas
or
loope
pop
ss
sub
and
scas
in
sbb
imul
leave
fmul
bound
test
sbb
jmp
adc
pop
mov
fdivs
inc
add
aam
inc
sahf
pop
je
sub
test
mov
sub
mov
mov
js
or
sahf
mov
xorb
fbstp
shr
sbb
rcrb
push
int3
popf
cmp
inc
mov
ret
ja
arpl
gs
into
iret
dec
ljmp
rcrb
push
lahf
cmc
movsb
les
and
pop
add
jecxz
jle
outsb
push
mov
ficoms
in
jmp
push
dec
jnp
mov
arpl
xor
out
in
mov
cmp
lea
xor
xchg
int
inc
adc
out
psadbw
add
xchg
call
imul
xchg
add
and
jg
ficoms
and
lret
mov
adc
xchg
xor
btr
mov
pushf
testb
ja
sub
aam
insl
cmp
mov
add
rcll
add
xchg
mov
sar
and
lods
test
add
hlt
idivb
add
adc
sbb
adc
nop
pop
repz
sub
push
rclb
add
flds
add
add
push
mov
xlat
dec
xorb
mov
lds
adc
lods
xor
add
xchg
push
lret
pop
scas
lret
popl
fadds
lret
test
int3
pop
sbb
fwait
jmp
add
repz
repz
ds
xchg
pop
jnp
dec
out
loopne
shll
push
popa
jae
xchg
leave
test
out
adc
fs
add
cwtl
cmp
mov
jo
pop
addb
push
ds
lcall
mov
mov
cmp
mov
jbe
pop
xchg
inc
fidivs
push
inc
dec
inc
xchg
adc
xchg
cmp
xor
pop
xor
push
adc
push
xchg
cmpsl
fildll
add
es
cmpsl
pop
push
push
movsb
imul
cmp
mov
and
int3
add
sahf
insl
mov
lock
iret
sbbl
fdivr
imul
and
ret
leave
into
daa
or
mov
stos
add
cmp
lahf
sbb
ss
add
or
stc
int3
pop
icebp
in
jg
test
or
and
vxorps
xchg
lock
loop
push
cltd
shrb
fucom
fdivp
pushf
sub
bound
push
add
add
shlb
or
popa
cmp
pop
inc
shr
xchg
dec
mov
xchg
mov
xlat
mov
ret
inc
xor
mov
addr16
add
rcrb
lret
jg
or
push
mov
std
xchg
mov
cmp
jno
ljmp
setl
pop
add
int3
rorl
jnp
pop
xor
xlat
add
mov
mov
pop
mov
shlb
movb
jle
sti
in
lea
push
cld
mov
and
adc
lods
jmp
sub
fs
push
lcall
mov
ja
repz
or
adc
adc
insl
and
cmpsb
pushw
xchg
pop
lret
rorl
xor
sub
popa
adc
mov
or
xchg
fucomip
mov
mov
jnp
das
out
xor
mov
repnz
push
xchg
xor
int
cmp
mov
popf
into
mov
cmpsb
mov
jge
sub
dec
popf
xchg
fnstsw
or
push
inc
push
add
xchg
gs
or
pop
mov
push
rcrb
inc
test
jo
xor
fcmovb
push
jae
jae
and
add
inc
jge
aam
ss
mov
xlat
xor
ret
push
icebp
push
leave
push
or
ss
cmp
push
pop
push
or
ja
fdivr
jp
cltd
js
sbb
dec
jns
pop
aam
fidivrl
vcmppd
push
push
in
in
fsubrl
and
mov
push
cmp
sbb
pop
std
adc
into
out
call
xchg
sub
and
cmp
xor
sub
push
shr
test
cld
add
je
sub
dec
mov
pop
out
je
bound
mov
movsl
ficoml
mov
lahf
dec
in
sub
mov
push
fbstp
loope
adc
stos
outsb
adc
dec
and
jecxz
push
or
int3
pop
fldt
sbb
jae
push
mov
dec
ds
xor
jno
icebp
lods
dec
hlt
xchg
add
or
sahf
sub
pop
sub
mov
shll
cs
dec
mov
or
out
xchg
mov
mov
fldt
rcll
push
mov
xor
and
je
aas
fadd
cmpsb
add
outsb
mov
sbb
stos
and
imul
in
jae
pop
push
imul
adc
sub
push
xor
cmp
in
xor
js
in
push
subb
test
mov
mov
in
repz
loopne
shlb
outsb
stos
lea
sbb
fcompl
cmp
insl
adc
xor
cli
fnstenv
dec
aam
and
out
js
movsb
xor
add
dec
lods
xchg
in
cmpsl
jmp
movsl
cld
xlat
sbb
aad
andl
popa
xchg
hlt
mov
gs
push
sahf
push
iret
push
mov
cmp
add
mov
or
jbe
push
testl
jl
cmp
stc
inc
push
out
xor
fcomps
xchg
insl
leave
int
iret
sbb
cwtl
pop
lods
jb
negb
test
dec
cld
test
dec
dec
and
js
sub
rcll
xchg
push
mov
add
fdivs
scas
xchg
sbb
push
repz
scas
jl
jne
add
scas
sub
test
insl
fwait
add
je
mov
xor
and
push
js
mov
ffreep
push
dec
sbbl
mov
loop
pop
andb
push
es
push
jnp
dec
test
loop
gs
pop
js
inc
mov
and
add
push
cmp
or
pusha
push
jecxz
inc
cli
nop
add
les
in
mov
sbb
shr
or
adc
daa
js
clc
pop
xor
cmp
xchg
ds
push
in
jns
cs
mov
xchg
add
out
jbe
movsb
pushf
and
int3
xchg
int3
loope
ret
inc
repz
addr16
dec
rclb
add
pop
add
jne
mov
insl
add
fimull
push
dec
sub
mov
xchg
in
imul
dec
and
test
and
sub
daa
xchg
jb
inc
mov
mov
mov
xchg
add
dec
jp
mov
xor
cmp
sub
sarb
into
push
ljmp
outsb
shlb
imul
movsb
popa
lahf
push
mov
arpl
push
insb
bswap
mov
or
push
dec
mov
dec
ret
js
or
or
ret
hlt
mov
scas
pusha
lock
shrl
shll
xchg
or
inc
push
dec
adc
mov
mov
jo
cmp
cld
stc
mov
xor
mov
cli
cltd
ss
mov
fidivl
fwait
pop
cld
inc
mov
imul
aam
test
cmp
out
xchg
add
fisubrl
mov
cli
imul
push
clc
sbb
inc
orl
mov
mov
dec
mov
add
arpl
hlt
inc
sarb
pop
movsl
cmp
xchg
loope
bound
xor
jb
notl
out
mov
sbb
dec
cld
adc
push
pushf
jne
inc
movsb
call
dec
sbb
enter
repnz
loopne
fists
pop
jnp
mov
mov
xor
cmc
pushf
psraw
leave
arpl
test
inc
mulb
fimuls
lea
test
mov
add
popa
mulb
inc
xor
gs
shr
es
fwait
adc
cmp
in
pop
stos
movsb
adcl
cwtl
leave
sub
mov
insb
mov
add
shll
ljmp
lret
sub
xchg
ffreep
xor
xor
fiadds
push
loopne
scas
adc
aad
lahf
dec
lods
js
leave
xchg
sbb
add
dec
dec
add
dec
xor
sti
jecxz
scas
jb
cmpsl
loop
decl
dec
sarb
sbb
mov
sub
mov
xchg
adc
mov
dec
add
shll
mov
lods
sbb
fbstp
shll
sarl
stos
imul
inc
dec
sbb
clc
pop
in
cwtl
into
jg
fsubrl
xor
fnstenv
enter
pop
dec
jp
popl
out
sub
jp
jmp
sub
mov
pop
icebp
icebp
add
cli
lea
adc
cltd
jbe
or
inc
lret
iret
loopne
ja
sti
ffreep
add
scas
insl
xor
scas
out
cmpl
dec
xchg
int3
cmc
mov
cli
dec
test
cmp
mov
dec
xor
add
icebp
in
outsb
sub
insb
cmp
cmp
cmp
sbb
or
adc
aad
repnz
mov
iret
mov
outsl
in
lea
inc
jo
pushf
cmp
lret
add
insl
pop
jecxz
or
in
mov
jecxz
mov
imul
imul
std
or
mov
cmp
cltd
mov
cmc
imul
pusha
sub
xchg
mov
jle
jnp
mov
addr16
or
mov
jbe
fildl
mov
enter
push
adc
dec
jg
sub
int3
inc
xchg
adc
pop
pop
mov
mov
jecxz
adc
sbb
xchg
arpl
popa
inc
sbb
insl
cmp
test
test
out
cmpsl
and
adc
xor
sbb
cs
mov
adc
shl
test
cwtl
xor
push
xchg
ss
and
divb
push
mov
adc
dec
mov
adc
xor
jae
xchg
add
lods
lods
or
jnp
aam
xor
jmp
imul
xchg
cmp
test
mov
std
jge
sub
or
gs
add
repz
sbb
mov
pop
and
rcrl
inc
push
xlat
jmp
mov
subl
mov
int3
xchg
outsl
sbb
cmpsl
cmpsl
mov
cli
in
jecxz
cmp
ljmp
fs
out
dec
jno
aas
fs
mov
pop
aaa
push
outsl
mov
sub
mov
inc
fs
js
aaa
nop
flds
xchg
add
aas
or
and
push
out
add
jmp
add
lret
inc
clc
lods
mov
int3
cli
cmp
andb
rcl
int
or
bound
xorb
xchg
adc
adc
push
sbb
mov
pop
xchg
lahf
idivb
rcll
addr16
sbb
or
jbe
cmp
xchg
dec
mov
sbb
shrb
add
test
xchg
xor
ljmp
adc
pop
jp
add
mov
cltd
push
xor
lock
fcomps
pop
xchg
or
les
dec
sahf
nop
dec
lret
mov
pop
outsb
out
aam
repz
mov
test
and
mov
mov
lcall
ret
or
sub
push
lock
and
js
mov
outsl
mov
cmp
loopne
pop
lock
int3
and
add
outsl
aam
incb
ja
and
jl
jo
pop
mov
sbb
sti
jo
push
xchg
xchg
jle
sti
test
pop
out
sti
cmp
popa
adc
adc
cwtl
fisttpll
cmp
xchg
adc
cmp
inc
aad
or
mov
mov
inc
inc
jbe
jecxz
push
test
cmpl
sub
sbb
in
jnp
cs
xor
daa
dec
sbb
ss
mov
pop
or
es
insb
loopne
mov
fwait
xchg
std
adcb
fmuls
push
orb
insl
ss
je
lcall
clc
or
outsl
out
notl
adc
xor
lds
push
adc
out
clc
jae
xorl
adc
mov
fidivs
xlat
adc
xor
outsl
mov
jg
pop
dec
psrad
sbb
cs
jne
out
lea
pop
add
inc
in
sub
cld
ss
loop
subl
mov
cmpsl
loopne
fstps
popa
sbbl
hlt
cltd
fs
push
sbb
out
sub
cmpsl
and
loope
in
pop
push
push
pop
ljmp
hlt
int
push
sbb
add
jne
push
popa
cmp
push
and
pop
test
rorl
push
add
outsl
rorb
cmp
push
iret
shrl
inc
shl
jae
xchg
jo
sub
mov
xor
test
and
jmp
cmpsl
lods
cmp
insb
sti
xor
lret
rclb
test
lds
cli
xor
jg
push
mov
clc
test
push
xchg
mov
mov
push
aad
cmp
cmp
and
mov
push
repz
call
test
imull
adc
and
mov
xlat
pop
jae
and
push
adc
cmp
in
test
frstor
mov
incl
add
loopne
insb
mov
mov
xor
repz
pushf
sub
inc
and
add
stos
lock
or
inc
icebp
repz
add
rorb
push
addr16
add
loopne
add
jmp
sub
inc
test
test
push
imul
imul
stc
loop
mov
inc
mov
jmp
ret
inc
subl
jp
push
and
xor
xorb
dec
sbb
mov
jg
xchg
dec
mov
sub
pop
int
xchg
push
cmp
ss
shrl
or
or
test
xlat
dec
std
aaa
jno
rorb
nop
jbe
adc
pop
push
fisttpl
test
cltd
subl
das
jno
fiadds
in
sarl
mov
mov
push
addr16
jnp
mov
scas
dec
mov
xorl
sti
filds
or
mov
add
into
lock
pop
adc
mov
lods
push
jb
arpl
dec
pop
mov
pusha
rcrl
push
sub
pop
mov
shll
popa
clc
xchg
xorb
dec
jg
mov
mov
pop
jecxz
jmp
adcb
outsb
jns
jo
aam
xchg
push
jmp
fstpl
adc
dec
leave
cmp
dec
in
mov
inc
pop
aaa
adcl
add
std
sub
jb
lock
xor
cltd
sub
push
hlt
adc
jno
xchg
mov
jae
mov
or
jb
push
inc
fstl
xchg
inc
imul
adc
stos
pop
adc
sbb
mov
cmpsb
jg
out
pextrw
adc
lods
mov
mov
xor
popf
xlat
test
icebp
aas
inc
xchg
call
lret
adc
xchg
cwtl
pop
mov
sub
rorb
pushf
pop
fdivrs
hlt
inc
or
ficomps
es
sbb
ss
pop
lds
pop
sub
adc
daa
and
xchg
sbb
aad
mov
push
adc
ficoms
adc
iret
std
mov
lds
loopew
hlt
aad
lret
jb
mov
mov
dec
jle
es
clc
in
in
scas
idiv
mov
enter
add
loopne
std
into
dec
push
jg
and
es
cltd
arpl
setb
dec
push
cmp
mov
ficompl
jp
fmuls
mov
ljmp
lcall
mov
and
xor
inc
daa
push
jl
stos
xchg
cli
pop
inc
cmp
push
mov
sub
imul
js
mov
jg
ret
mov
bound
xchg
mov
or
xor
cmp
fisubrs
jecxz
test
rorl
cs
or
or
add
lcall
add
out
mov
nop
mov
xchg
dec
xlat
in
enter
jecxz
cmp
cmc
lea
xchg
dec
pusha
mov
push
negl
mov
addb
add
lock
popf
add
sub
xchg
mov
aad
call
push
add
daa
movsl
fstpl
and
aam
loope
movsl
fwait
imul
xor
add
mov
jp
in
push
cmpsb
mov
stc
test
int3
sbb
xchg
jecxz
dec
scas
out
push
pushf
jg
sub
test
shll
addr16
fcmovne
mov
rcrl
lcall
jecxz
pop
or
loope
jl
mov
jns
loope
cli
fdivp
movsb
mov
outsl
mov
clc
and
pop
sbb
mov
adcl
lret
xorb
fmul
in
add
ds
sub
and
fld
push
aas
shrb
movsb
cmc
jae
fcoms
jle
add
adc
pushf
jns
cmp
mov
adc
lcall
jae
mov
popf
inc
rcrl
in
mov
fmul
or
leave
imul
dec
cmp
test
cmc
dec
xor
loop
xor
fs
adc
cwtl
jle
sahf
je
je
push
into
add
sarb
adc
jo
cmpsb
dec
sbb
cwtl
outsb
pop
out
jl
outsb
repz
pop
test
ss
mov
push
adc
pop
or
inc
push
je
pop
push
and
sub
mov
sub
sbb
pop
mov
push
stos
clc
sbb
cs
jmp
sbb
sub
iret
rcrb
out
lods
add
add
or
cmpb
inc
fimull
cmp
sub
lcall
imul
test
add
or
bound
cmc
inc
inc
jle
out
dec
mov
ljmp
int
cmc
cmp
sti
dec
jecxz
lcall
pushf
cmp
lret
push
out
xor
mov
and
inc
pop
xchg
sbb
and
negb
cwtl
and
mov
mov
js
shl
xor
push
cmp
jp
sub
sub
out
fs
xchg
lcall
das
aad
xrelease
cmp
stos
pop
jne
cmp
add
bswap
sbb
jno
fistpll
push
rcrl
mov
pop
movsb
rsqrtps
aas
or
sub
daa
dec
add
mov
aaa
xchg
mov
shlb
xor
add
loope
lods
push
pop
sub
movsb
push
pop
mov
loop
mov
lds
dec
in
pop
add
loop
mov
mov
sar
cmpsb
xchg
lods
in
mov
mov
sub
mov
js
and
mov
dec
int
jge
sti
pop
inc
cmp
cmp
nop
jl
js
fcmove
test
pop
shll
fists
mov
push
mov
xchg
insb
aas
scas
cmc
or
push
cwtl
push
pushfw
cmp
fs
push
xchg
loop
ds
xchg
cmp
mov
rcll
int3
imul
xchg
addr16
jo
push
out
xchg
inc
jl
scas
cwtl
pop
mov
fisubrs
lcall
sbb
mov
jno
jb
pop
mov
mov
pop
xor
mov
shrb
daa
shll
push
lds
mov
cmc
sahf
adc
loope
xchg
lret
popa
call
mov
cltd
lcall
fwait
push
test
mov
repnz
add
fsubr
outsb
stos
pop
sub
clc
and
mov
mov
cmc
scas
push
mov
movsb
pushf
xchg
ds
fwait
lret
shr
push
or
inc
lcall
add
lods
adc
fiaddl
je
test
sbb
and
or
xor
or
xor
fmuls
xchg
cmp
and
adc
dec
ss
jmp
mov
rorb
adc
sub
int3
shrb
push
mov
sbb
xchg
pop
or
inc
cmpsb
inc
xchg
ja
cli
inc
pop
push
aad
sbb
jbe
mov
leave
inc
imul
lret
push
cltd
test
test
in
out
inc
or
imul
ljmp
dec
mov
aas
gs
jne
movsb
cmc
test
dec
sbb
xchg
aaa
int
fstps
jo
out
pop
mov
das
xchg
mov
insb
iret
or
or
popf
fidivl
mov
das
add
pop
shl
ljmp
add
into
call
jb
inc
jbe
fistpl
in
jp
add
cmp
adc
aam
outsl
jno
jmp
dec
mov
pop
call
pop
cmp
dec
fadd
xchg
xor
sub
mov
mov
test
cmp
dec
lods
iret
mov
fimull
loop
jbe,pt
inc
fwait
or
dec
lods
inc
xchg
inc
push
fcmovnbe
pop
in
cmpsl
pop
jo
lret
fdivr
movsl
push
mov
inc
dec
ss
stc
rcrl
mov
xor
add
xor
adc
or
xlat
xor
sub
xor
ret
mov
bound
inc
test
push
jbe
mov
mov
rol
pop
icebp
jbe
cmp
nop
ds
cltd
jnp
sub
loope
aas
stos
mov
repnz
xchg
leave
jbe
js
jl
lods
jg
xchg
inc
mov
aad
sub
xchg
repnz
mov
xchg
add
lods
shll
mov
mov
rcl
cltd
sub
inc
dec
inc
int3
cmp
sbb
ret
or
sahf
inc
pop
mov
mov
sbb
nop
pushf
outsl
lahf
push
testb
push
outsl
cmp
lods
xchg
ret
jmp
xchg
lahf
lcall
jmp
popl
fisubrl
push
push
xor
test
movsb
add
and
cld
or
pop
push
test
fnstsw
fisttpl
popf
mov
jo
imul
loope
jb
sbb
movsb
lcall
jb
inc
push
in
shll
ljmp
loopne
lahf
jg
loop
or
mov
inc
data16
xor
test
fs
xchg
jl
cld
push
mov
in
xchg
fcoms
in
fistpll
punpckhdq
fisubl
sahf
shll
fucom
push
sub
incl
inc
mov
test
adc
push
cmp
call
mov
add
pop
mov
mov
sar
int
xorl
push
cmpsl
cmpsb
lahf
mov
mov
out
adc
sub
adc
mov
push
adc
push
mulb
loopne
imul
bound
lods
repnz
mov
pop
add
mov
test
xor
adc
pop
test
or
mov
and
push
adc
inc
loopne
sub
imul
cmp
inc
cmp
notb
dec
movsl
and
mov
mov
gs
mov
jns
pop
movsb
mov
fstpl
lcall
add
inc
sbb
shl
cld
sarl
and
bound
loope
enter
mov
cmp
pop
sti
fwait
ja
cld
je
cli
lret
sbb
stos
jl
push
mov
dec
popa
bound
pushf
das
add
dec
adc
xor
or
shll
lods
cmp
mov
mov
fsubrl
pop
sbb
scas
pushf
fisttpl
sub
and
insb
sub
dec
aas
fs
cmp
mov
addr16
jp
pop
rcl
mov
lret
or
mov
out
push
js
jl
pop
cltd
pop
xchg
sub
cmp
loope
xchg
xchg
js
adcb
call
loopne
lret
or
ret
mov
arpl
inc
adc
inc
sub
pop
adc
js
adc
addr16
sub
ret
fmull
add
add
mov
adc
out
aad
rcll
adc
inc
repnz
sub
int3
outsl
xlat
sub
es
add
dec
cmp
ja
mov
int
push
aam
mov
fiaddl
mov
ljmp
daa
ficompl
lods
movsb
mov
mov
jb
std
xchg
hlt
test
cmp
xchg
cmp
add
pusha
cwtl
push
scas
mov
add
mov
loopne
mov
lods
int3
and
sahf
pusha
and
rcrb
ffreep
lock
push
test
adc
push
xorl
out
inc
insb
sti
and
cwtl
fdiv
jmp
pop
jle
mov
cli
cmp
aaa
sub
in
outsb
and
iret
notb
dec
or
stc
push
cmp
dec
push
or
push
mov
cmp
pop
popa
xor
call
cli
je
int3
dec
cmp
mov
je
mov
jp
xchg
gs
xor
test
sbb
fbstp
scas
das
sub
sbb
das
insl
xor
mov
sub
mov
adc
jl
jbe
mov
jmp
daa
mov
pop
iret
sub
add
mov
xchg
lods
cmpsl
pop
leave
xchg
push
xor
in
push
pushl
fisubrs
je
shll
shr
hlt
jge
aas
adc
xor
dec
popf
fs
cmp
incb
stos
xor
pusha
jae
jae
jns
es
and
roll
sub
imul
sub
mov
and
lret
pop
movsl
adc
and
pop
imul
sahf
inc
dec
jecxz
pop
jo
cmp
loope
rorb
in
sub
sub
cli
adc
mov
out
pop
pop
out
sub
clc
sbb
sub
leave
imull
push
sahf
lods
enter
adc
pop
cltd
decb
pusha
jecxz
mov
sbb
pop
test
cwtl
pushf
lods
cmp
lcall
sbb
int
es
jmp
push
push
push
add
xchg
cmp
push
cmp
imul
jno
mov
out
and
lds
xchg
xchg
aaa
gs
fildll
lds
cltd
sub
fidivrl
xor
inc
stc
mov
or
xchg
dec
in
mov
mov
mov
push
cmpsb
fsubs
and
xor
inc
pop
adc
push
imul
dec
push
aas
sub
outsb
test
outsl
lahf
mov
inc
cmp
mov
and
cmp
out
js
aam
mov
sub
sti
cmpsb
in
sti
cltd
in
inc
movsb
inc
iret
test
or
jmp
xchg
ljmp
into
ret
push
fwait
clc
test
call
repz
mov
xor
subb
mov
push
test
and
add
fmuls
jb
mov
test
call
fs
mov
xchg
mov
icebp
test
fistpll
sbb
cmp
stc
inc
sub
xchg
xchg
dec
pop
inc
push
or
sub
and
mov
xor
aam
ja
add
loope
and
jne
es
pushf
cmp
sub
mov
mov
jmp
in
pop
cli
movsl
pop
cmp
sbb
add
inc
cld
xchg
dec
jl
mov
mov
jmp
sub
xor
jge
lcall
lahf
ss
mov
inc
lods
xor
aas
roll
pop
jge
icebp
in
lcall
lds
popf
in
lods
addr16
pop
jne
fsubp
nop
lods
sbbb
pop
ljmp
mov
cmp
mov
daa
jo
xchg
fsubrl
ret
mov
or
push
mov
pop
or
insb
cld
rorl
clc
mov
ds
test
lds
add
and
dec
inc
pop
mov
sub
adc
pop
pop
lcall
push
in
xchg
sbb
push
js
imul
adc
lds
in
fistps
jb
inc
add
aad
aas
mov
adc
shlb
push
and
lcall
dec
test
mov
jbe
clc
dec
lret
cmpsb
lock
mov
inc
aas
icebp
jecxz
movsl
inc
addl
arpl
cmpsb
or
pop
mov
push
xchg
xor
xor
addr16
out
jne
xorb
stos
dec
mov
push
imul
dec
mov
add
jb
lea
push
dec
push
xchg
out
pop
cltd
std
inc
xchg
or
cmp
or
mov
xchg
fisubs
int3
cmp
fxch
push
mov
sub
and
pop
aam
mov
push
jb
leave
dec
dec
imul
clc
cmp
mov
les
mov
divb
mov
lds
sbb
xor
sub
aas
mov
cmp
daa
xchg
fnsave
cmp
lcall
mov
pop
inc
adc
adc
pop
cs
jno
push
cmp
jmp
mov
mov
aam
jmp
ljmp
aaa
sbb
popf
out
xor
mov
test
bound
sub
add
dec
test
mov
sahf
jb
jecxz
ss
xchg
cmp
fcmovb
add
or
sub
mov
lods
ret
xchg
int3
xchg
stc
cmc
fiaddl
ljmp
fistpll
push
or
mov
mov
aas
lcall
sub
mov
adc
inc
push
cld
push
daa
sbb
xor
pop
loopne
push
pop
dec
push
and
mov
jecxz
enter
aaa
and
aas
mov
mov
inc
mov
mov
pop
push
xchg
add
sbb
sbb
push
xchg
ss
loop
sub
ljmp
fld
jbe
jge
mov
lret
ret
int3
push
in
in
mov
mov
cmp
lods
movsb
and
jle
adc
pop
push
dec
daa
cmp
inc
iret
ss
popf
mov
pusha
push
rcrb
add
js
popf
aad
xor
test
ffreep
lret
inc
leave
mov
mov
xor
iret
add
inc
fmuls
mov
push
je
xchg
jbe
push
sahf
sarb
dec
sahf
sub
or
idivl
and
inc
sub
push
pop
xchg
aaa
sahf
movntps
add
int
mov
inc
movb
aad
leave
cmp
fwait
push
popf
ljmp
adc
bound
cli
pop
fwait
inc
leave
and
andl
aas
in
stos
insl
mov
movsb
mov
iret
jge
insl
pop
fs
mov
addl
popa
lock
aad
xchg
addr16
jge
test
mov
push
push
mov
frstor
or
das
cld
mov
outsl
movsl
inc
cmpsb
arpl
lcall
mov
shlb
xchg
mov
jle
mov
push
sarb
xchg
mov
sahf
pop
out
icebp
dec
cmp
aad
inc
lds
mov
iret
rcr
repz
jb
daa
cltd
sbb
sbbl
sti
push
and
test
lods
jae
push
popf
sbbl
insl
aam
sbb
jno
cld
jl
jg
xor
pop
push
roll
xchg
aaa
jmp
movb
adc
push
push
and
cmc
lock
mov
mov
fwait
or
add
repnz
push
mov
in
add
out
inc
fwait
and
add
fists
sub
push
out
test
daa
xchg
icebp
ljmp
mov
adc
mov
rcrb
mov
pop
pop
or
sbb
pop
js
mov
shlb
pop
xor
mov
sub
rcrb
and
and
dec
add
cmc
movsl
xchg
xor
cmp
ret
pusha
adc
testb
dec
jg
outsl
jle
das
daa
and
or
shl
data16
sub
mov
add
inc
sti
jno
xor
adc
jnp
dec
dec
or
mov
inc
xlat
test
pop
test
cmp
and
out
fs
inc
mov
pop
ror
lods
xchg
cmp
aas
in
adc
mov
sub
imul
mov
pop
cmp
mov
imul
pshufw
pop
test
jle
in
inc
iret
fwait
bound
sub
lds
ljmp
mov
push
xchg
and
shll
lods
dec
inc
mov
sub
cmp
push
xor
add
or
sub
imul
cmp
roll
stos
jo
sub
jns
sbbl
push
xchg
fld
xlat
mov
cli
mov
fstpt
sub
lahf
xor
dec
cmp
mov
in
inc
mov
stos
add
das
sahf
cmpsl
xor
shll
int3
cmp
jo
arpl
lahf
jae
xchg
mov
in
jne
or
fs
adc
pop
xchg
fwait
es
adc
cmp
rcll
push
bswap
hlt
jp
enter
lahf
movsb
mov
mov
pop
rol
xor
jmp
mov
ja
cmp
pop
sub
test
mov
mov
xor
fsubs
cmp
test
inc
ret
fs
lods
adc
or
xchg
stos
test
dec
xor
fs
movsl
cltd
sti
scas
sbb
call
or
pop
add
add
xor
icebp
inc
ljmp
xchg
data16
and
cmc
pop
sarb
sub
negl
in
pop
fwait
repz
mov
es
jbe
lods
pop
leave
xchg
push
outsb
push
sub
addr16
jle
or
xchg
pop
jne
fisttps
cmpsl
adc
fwait
push
mov
mov
or
sub
jne
out
add
adc
pop
jmp
scas
xor
push
or
int3
adc
mov
mov
int
cld
xchg
push
inc
mov
xor
sub
cltd
cwtl
push
out
ret
dec
shl
mov
leave
add
jge
add
xchg
mov
xlat
mov
jp
mov
sub
sbb
test
sub
pop
mov
xor
pushf
xchg
push
std
jecxz
mov
fmuls
jo
dec
push
or
mov
xlat
and
jge
and
int3
leave
cmp
stos
rcr
lds
or
pop
jnp
mov
iret
sub
in
bnd
mov
rcrb
movsl
pop
add
imul
sahf
xchg
aad
mov
or
das
cmp
and
pop
pop
rorb
pop
lods
popf
decl
dec
mov
adc
pop
fcoml
scas
loopne
and
inc
fincstp
icebp
push
or
stos
sub
dec
int
in
popl
imul
inc
flds
add
jecxz
jo
mov
sbb
xchg
inc
sub
std
cwtl
pop
loop
dec
lret
out
adc
out
fwait
out
lea
dec
mov
loop
insl
sub
xchg
cmc
inc
jns
sti
dec
ficompl
xor
jbe
and
stos
jo
jae
addr16
add
ss
dec
ja,pt
cmp
je
sub
and
sti
sbb
inc
aas
dec
fisttpl
mov
sbb
bound
xor
pop
pop
js
ds
mov
cmp
jno
mov
push
scas
mov
push
pushf
out
cmpb
cmc
fstpl
sbb
js
jo
ret
int3
jb
xchg
mov
bound
cmp
adc
cmp
pop
stos
shll
jecxz
cli
adc
xchg
xor
cli
inc
sub
rolb
mov
repnz
push
insb
add
xchg
sahf
aas
or
js
orb
mov
mov
xchg
lahf
mov
sbb
mov
add
test
adc
xor
mov
insb
mov
mov
cmp
out
pop
and
pop
cmp
fucom
cld
ljmp
aam
push
add
mov
sub
jmp
sbb
xchg
outsl
dec
sbb
aad
inc
push
repnz
out
mov
into
test
push
movsb
and
ja
jmp
push
cmp
cmp
fiaddl
mov
sbb
mov
push
adc
pop
cmp
popf
jbe
out
fadds
test
mov
addb
scas
cmpsl
out
xor
fcompl
roll
xchg
addb
int
or
mov
cmp
negb
ficomps
lret
add
les
stos
int
rolb
sub
test
fistpll
jbe
push
mov
lcall
pop
mov
icebp
pushf
inc
xchg
into
sahf
push
out
imul
add
enter
jp
push
dec
out
iret
repnz
lcall
std
mov
xchg
mov
pop
bound
mov
ds
movsb
cmp
call
or
cmp
inc
daa
pop
lret
imull
cmpsb
fnstenv
js
lock
sub
mov
xlat
xchg
mov
dec
jle
or
into
adc
stos
xchg
mov
push
push
movb
add
push
adc
ja
aas
jae
fisttpl
fucomp
aas
outsb
xchg
cld
rorl
mov
test
mov
imul
mov
jmp
andl
adc
adc
xor
mov
jae
dec
gs
fdivrl
jne
mov
add
mov
and
enter
out
hlt
out
movsl
lea
aas
mov
ret
lret
lods
push
push
add
add
mov
daa
mov
test
adc
sbb
jo
xchg
mov
mov
hlt
jb
jb
adc
inc
xchg
sar
jl
mov
dec
fistpll
sbb
dec
outsb
and
inc
sub
push
xchg
test
das
fs
adc
mov
loopne
cmp
imul
shrl
dec
mov
dec
jb
popf
jmp
or
sbb
push
xchg
testl
push
nop
xchg
iret
fidivs
sbb
sbb
xchg
lods
xchg
xlat
shrb
xchg
mov
data16
ret
shlb
pop
loop
xor
xor
mov
js
out
mov
jbe
sar
testl
push
xchg
push
add
jle
sub
jno
in
mov
sbb
sub
cmp
shlb
fsubl
or
ret
mov
daa
arpl
mov
mov
ror
mov
movb
mov
mov
push
or
or
add
inc
in
push
test
mov
call
test
fs
or
out
in
mov
mov
jmp
loop
jae
inc
push
fisubs
mov
pop
lahf
lock
adc
jmp
loopne
push
inc
xor
jg
add
sub
pop
sbb
xchg
das
sub
mov
scas
mov
in
xchg
out
mov
xor
mov
pop
push
fisubl
sbb
dec
inc
and
stos
sahf
add
pushf
cmp
cmc
movsl
sub
test
repz
dec
mov
and
fdivl
mov
movsb
jo
or
test
cmpsb
stos
ret
out
xor
push
cmpsl
and
scas
out
clc
cli
xchg
call
jg
ds
inc
and
jecxz
or
jl
cmp
das
mov
insb
rorl
xor
adc
dec
add
test
out
ret
pop
imul
lods
xor
add
cmp
stos
inc
sbb
mov
stos
fcos
out
pop
mov
pop
xchg
push
pusha
cmp
pop
in
push
enter
sbb
or
insb
xor
add
mov
pop
push
ljmp
jg
push
sar
in
inc
xchg
sub
nop
loope
icebp
xchg
sub
mov
pop
jo
stc
stos
dec
negl
sub
mov
mov
out
sub
dec
ss
decl
gs
mov
mov
jg
pop
inc
maskmovq
testl
mov
ss
daa
xor
mov
insl
pop
adc
scas
int
add
push
imul
xor
insb
jecxz
and
outsl
mov
jmp
shlb
in
pop
pop
ret
and
xchg
xchg
lods
addb
test
fmuls
ja
or
push
adcb
dec
xchg
out
pushf
lods
cmp
stos
sub
jnp
inc
in
imul
cmpsb
or
pusha
mov
repz
jge
rcll
push
adc
test
mov
repz
clc
xchg
cld
cmp
ret
lods
and
pop
xlat
test
outsb
outsb
aam
xchg
int
cwtl
push
cmp
add
movsl
mov
cmp
add
lods
mov
jge
dec
and
jp
pusha
mov
jbe
enter
mov
pop
mov
mov
mov
bound
jbe
fisttpll
pop
sub
js
add
xor
lret
repnz
icebp
push
jns
add
sub
jne
mov
push
pushl
jmp
and
jl
aaa
daa
mov
or
jns
ret
shll
fstpt
pop
pop
jo
jmp
mov
cmp
and
add
jnp
add
add
sarb
add
fdivrl
sti
xchg
mov
dec
xchg
jb
add
out
mov
js
std
sbb
nop
es
scas
push
push
aad
int
jp
sbb
stc
cs
xchg
mov
stos
lock
fwait
movb
aaa
push
sub
loopne
xchg
gs
xchg
shr
mov
mov
popa
mov
test
inc
mov
enter
xchg
movsb
jecxz
xor
or
or
loopne
inc
bound
dec
adc
xchg
push
fbstp
int
imul
dec
add
stos
cmp
int3
xchg
fdivrl
scas
or
outsb
outsl
cmp
out
inc
sbb
loope
sbb
insb
mov
das
sbb
mov
roll
lock
sub
mov
ss
mov
or
inc
fists
icebp
or
mov
xor
mov
cmc
adc
in
jmp
dec
fwait
int
sahf
lret
stc
fidivl
bound
mov
xorb
mulb
mov
nop
push
xchg
mov
loopew
cmp
es
or
push
cltd
test
in
push
insb
mov
cs
cmp
rcll
ds
stc
xchg
push
into
fnstenv
mov
push
test
popa
push
mov
fimuls
cli
push
adcl
ret
negb
add
push
pushf
lods
jns
ss
clc
outsb
rol
lods
xlat
pusha
inc
stc
pop
cmpsl
fsubl
push
xchg
in
sahf
imul
pop
xchg
pop
xlat
cwtl
pop
push
mov
daa
outsl
and
popf
pop
xor
int
arpl
xor
scas
mov
test
dec
mov
xor
movsb
in
rcrl
lret
decb
cmc
jmp
jnp
cwtl
lods
adc
jl,pn
cmp
call
ffree
inc
outsl
mov
sbb
xor
ss
subb
lea
fidivrl
popf
mov
into
lods
adc
pop
jo
xor
add
in
out
rcrl
inc
xor
fbld
nop
cmp
les
andl
or
aad
xchg
dec
repnz
sarl
arpl
or
shl
pusha
pop
lods
je
push
or
push
lcall
insl
rorb
inc
enter
inc
and
arpl
sub
int3
jnp
lds
push
ljmp
xchg
fwait
mov
scas
jo
lcall
ljmp
loop
into
pusha
movsl
ja
fcmove
add
sub
out
mov
fwait
jb
mov
cmp
in
xlat
xor
inc
and
mov
sbb
lcall
out
inc
lret
shrb
lahf
aam
or
xchg
adc
out
fistl
ljmp
mov
mov
dec
inc
sub
popa
fimull
cs
repnz
rolb
scas
mov
or
out
push
lcall
mov
mov
jno
push
lcall
orl
mov
sub
mov
dec
mov
inc
cli
daa
ret
fdivrl
test
pop
clc
or
xchg
xor
pop
mov
dec
shl
insb
inc
repnz
xlat
ret
std
push
in
test
testl
xchg
and
mov
sbb
fisttpl
iret
pop
movsl
in
test
lock
or
loope
push
cmc
loope
xor
inc
mov
loop
push
adc
mov
or
cwtl
jl
jp
xchg
pop
decl
adc
pop
dec
xor
xchg
adc
push
mov
adc
pop
faddp
lds
push
fwait
cmpsl
sbb
ret
popf
and
aaa
inc
outsb
fsts
imul
and
xchg
int3
test
jg
cmp
and
jg
inc
xor
mov
sub
or
or
jne
popf
in
jo
or
aas
sub
mov
out
ss
sub
sbb
add
jge
mov
addl
js
lret
aam
jbe
inc
mov
xor
fsubrs
inc
dec
mov
in
inc
xchg
std
adc
js
loope
mov
xchg
sahf
insb
xorl
gs
and
and
aad
inc
enter
cli
push
shlb
leave
mov
mov
out
pop
jge
add
hlt
push
pushw
test
or
comiss
cld
in
outsl
cmp
std
jbe
das
sub
sarl
stos
insl
push
dec
xchg
mov
jb
xchg
out
and
jmp
jp
jge
lea
loope
xchg
jp
push
lret
test
mov
lahf
adc
push
jbe
sarl
mov
cmc
mov
movsb
xchg
arpl
cmp
jp
ja
inc
rorb
and
sti
cltd
mov
mov
push
insl
cmp
es
repnz
mov
jg
xchg
std
sub
mov
lcall
push
xchg
insl
cmp
lods
xlat
mov
stos
push
xor
aad
loop
sbb
pop
add
ljmp
cmp
push
dec
aad
inc
out
aad
rorb
std
xchg
pop
fdivs
je
aaa
and
cmp
cmp
add
jbe
movsl
cs
es
jg
jecxz
icebp
push
adc
dec
rorb
test
add
jmp
out
mov
pop
jg
les
int3
pop
ja
adc
loopne
shrb
mov
outsl
icebp
cmp
dec
mov
push
mov
out
test
testl
les
mov
inc
jbe
fwait
mov
hlt
fidivrs
pop
push
jns
addb
pop
adc
jge
ret
insb
jecxz
jno
sub
jmp
rcr
push
fists
mov
inc
repz
xchg
add
mov
cltd
rcll
mov
mov
movsb
ja
lods
inc
cli
inc
imul
sbb
mov
iret
imul
cmp
mov
sub
aaa
mov
and
sbbb
xor
into
lock
insb
rcrb
mov
insb
lret
mov
pop
es
call
push
out
and
pop
dec
cmpsl
je
mov
inc
shl
or
pop
xor
aas
fadd
imul
pop
sti
xor
xchg
dec
lahf
out
jbe
in
lcall
sti
loop
or
mov
jl
hlt
xchg
popf
nop
lret
pop
pop
mov
xacquire
pop
jge
in
movl
stos
mov
dec
and
pop
inc
jae
mov
in
pop
fildll
jg
add
mov
mov
popf
aam
imul
cmp
int3
cmpsl
jae
sbb
lds
ljmp
inc
outsl
insl
and
fildll
scas
mov
aas
jns
out
je
pushf
dec
pushf
xchg
stos
push
popl
outsb
jne
inc
test
pop
mov
std
subl
in
xchg
push
mov
les
jns
jl
cli
pop
repnz
cltd
in
fs
test
call
adc
lret
popf
mov
loope
in
mov
pop
pop
mov
mov
pop
lret
mov
idivl
loope
cmpsl
jbe
dec
xor
or
in
inc
cmp
sahf
add
lock
push
dec
add
cmp
inc
loop
push
adc
jle
dec
cmpsb
xor
ret
mov
nop
adc
ss
mov
push
clc
xor
sbbb
push
pop
or
sbbl
jecxz
mov
mov
popf
in
inc
jg
jp
pop
cmp
sbb
jge
mov
int3
and
push
or
and
and
xor
lea
xchg
pop
xchg
adc
cmpl
mov
cwtl
jge
jb
cmc
push
ja
and
int
rclb
adc
mov
xchg
mov
mov
xchg
das
pop
mov
push
jg
sahf
mov
fsubrl
out
xchg
jb
mov
addr16
xchg
xchg
gs
xchg
fimuls
shll
sbbl
into
jg
popa
lret
mov
mov
out
inc
jle
sub
jnp
shrl
dec
cltd
sub
push
xor
jg
fsubs
movsb
sti
push
sahf
cmp
mov
inc
push
or
mov
cmpsl
fsubrl
xchg
nop
sbb
sub
mov
push
push
cld
inc
cs
lds
mov
popf
test
xor
ret
lock
test
cmpb
test
idivl
pop
dec
jmp
add
jns
push
sbb
int
gs
push
lret
pop
mov
fisubrs
in
sbb
into
push
pop
or
mov
mov
pop
mov
cmpsl
xchg
imul
cmp
push
pop
inc
pop
stc
and
iretw
cmpsl
pop
loop
mov
das
sbb
sub
cmc
sub
das
inc
and
or
xor
bound
inc
jp
cmp
pop
loopne
sbb
dec
mov
out
in
push
push
pop
jo
es
sub
imul
lds
or
nop
jge
sub
cmpl
xchg
dec
lahf
ss
adcb
mov
int3
jae
xor
push
mov
roll
or
mov
xchg
les
and
gs
or
lcall
sbb
sahf
or
sbb
adc
jbe
mov
stos
sub
jp
xor
or
xor
cmc
ret
pop
btl
xor
mov
xchg
mov
cmpsl
xchg
out
pusha
mov
mov
pop
cmp
insl
ljmp
mov
out
pusha
adc
dec
mov
mov
push
inc
inc
jecxz
in
add
psubsb
cmp
push
push
xorb
in
mov
ja
movl
inc
enter
repnz
mov
jmp
lds
leave
bound
pusha
fucomp
stc
cmp
movsb
sbb
stos
es
jno
adc
jg
out
mov
lods
dec
inc
cs
cli
call
sarl
or
jno
sahf
dec
mov
add
in
xor
or
fadds
push
aas
shlb
adc
std
xchg
lret
loope
xchg
cwtl
sub
and
cltd
imul
sarb
cmp
mov
push
test
mov
popa
into
sbb
es
addl
jg
dec
add
mov
push
out
mov
mov
testb
dec
lea
jp
adc
popf
das
in
std
push
push
pop
mov
sbb
push
pop
pop
xchg
ficomps
add
fs
ljmp
pop
adc
push
lcall
mov
ret
adc
in
ror
mov
push
xor
enter
and
xor
pop
dec
addb
fs
movsb
xor
xor
int3
pop
stos
pop
xor
fsin
jl
nop
mov
dec
mov
lcall
movsl
insb
out
cmp
rcrl
cmpsb
roll
push
in
fnstenv
adc
shufps
lods
out
imul
mov
pop
cmp
inc
xor
test
dec
cmc
jne
mov
hlt
lahf
int3
movsl
lods
mov
push
adc
fbld
gs
push
push
ds
sub
ret
xor
jp
or
into
cmp
and
or
xchg
in
aas
xchg
jmp
mov
dec
orl
imul
mov
sub
dec
xchg
fdivl
jne
mov
test
stc
addr16
xor
das
fsubrs
push
mov
push
rol
negl
aas
ficoml
mov
xchg
into
dec
push
mov
repz
add
gs
test
xor
dec
inc
pop
adc
xlat
lea
push
ret
insl
mov
inc
jns
bound
sbb
shrb
add
add
lods
test
sar
pop
lret
cmpsb
jae
sbb
testb
mov
fbld
xchg
in
faddl
or
push
xlat
scas
adc
mov
test
or
repz
lods
sub
mov
adc
adc
sub
inc
cs
fldenv
jle
jnp
xor
push
cs
mov
jle
mov
std
aas
mov
push
push
cmpsl
sub
jns
inc
and
lea
mulb
je
fdivl
movl
testl
leave
jmp
imul
leave
das
cmp
call
decl
pusha
mov
cmp
inc
fdivl
and
imul
adc
hlt
jle
dec
fs
mov
stc
push
sahf
mov
pop
xchg
repnz
and
and
lret
push
sti
dec
sbb
mov
push
xor
sub
or
push
lret
dec
mov
sub
je
sbb
jo
pushf
dec
test
popa
std
jle
cli
add
cwtl
xor
pop
loop
in
ficomps
or
mov
xchg
xor
pop
pop
push
jmp
les
jns
mov
mov
jno
lcall
shrb
lret
lods
inc
push
sbb
jmp
xor
into
out
dec
dec
jae
mov
lock
mov
mov
out
mov
cmp
lea
xorl
jge
aas
add
jbe
into
ss
fmull
or
sbb
pop
ljmp
rolb
mov
pop
insb
jl
xor
cmpsl
int3
mov
jge
into
cmpsl
add
mov
jl
aam
pop
mov
stos
dec
mov
xor
sub
mov
cmp
cmp
pop
add
daa
xchg
xor
cmp
adc
jecxz
sbb
dec
and
sub
pop
in
lea
add
jmp
xchg
loop
mov
dec
pop
jns
daa
into
and
push
jp
inc
xor
sbb
pop
lahf
pop
xchg
decl
lods
cs
movsb
jge
test
jns
mov
pop
lret
xor
xchg
pop
pop
xchg
and
in
jmp
jge
jb
in
imul
cmp
std
adc
daa
xor
sbb
sub
bound
cmc
out
inc
out
imul
sti
lds
pushf
lahf
fmulp
push
repnz
or
mov
andb
insb
adcb
mov
jo
fimull
xor
and
jb
and
xchg
jbe
sub
inc
jb
das
pop
or
sbb
lret
loope
out
add
fwait
push
sar
jo
fwait
jg
or
scas
cmp
adc
stos
adc
test
dec
lods
mov
or
sahf
call
inc
mov
repnz
std
mov
pop
mov
jge
jo
mov
imul
mov
pop
aam
outsl
mov
bnd
xor
xor
jle
inc
mov
xlat
jmp
inc
add
jne
push
mov
add
xchg
mov
pop
insb
xor
xchg
mov
adc
mov
push
push
cmp
mov
lret
add
mov
push
pop
lcall
xor
push
outsl
or
cs
push
call
in
leave
cwtl
mov
push
jp
xchg
jae
jmp
lret
sti
fwait
xor
daa
out
mov
aas
nop
xchg
lock
sbb
es
pop
nop
xchg
push
out
pop
mov
mov
push
es
pop
push
jb
cmpsb
pop
cmp
add
imulb
mov
xchg
popf
and
test
enter
je
jl
cld
xor
cmp
shr
es
mov
rcrb
mov
xchg
inc
scas
stc
inc
dec
push
icebp
fstl
push
inc
xchg
imul
pop
out
cmp
pop
test
lahf
and
call
ret
cmp
inc
push
jmp
adc
and
popa
sbb
or
sbb
jl
push
shr
push
ret
xor
ds
insl
add
inc
adc
jge
into
push
push
hlt
cwtl
rcr
js
shrb
sub
js
and
dec
adc
test
xor
jmp
inc
mov
inc
and
testl
pop
lahf
arpl
imul
pop
pop
popf
mov
aas
mov
shlb
cmc
pop
int
insb
xlat
jl
cmp
jg
test
xchg
pop
sbb
loopne
les
lret
mov
cmc
lahf
xchg
xchg
pushf
nop
xor
and
fimuls
andl
mov
pop
mov
cmpsl
inc
jb
jb
add
inc
sub
loopne
cmc
loop
icebp
in
cmc
sub
fcoml
je
push
push
shrb
cmpsl
scas
add
ret
sbb
test
mov
aaa
cmp
and
cmp
xchg
shlb
aas
push
mov
dec
jle
push
jecxz
ja
pushf
xor
loope
sahf
jae
test
int
lret
pop
fcoms
aad
loopne
xchg
xor
stc
rclb
lahf
lret
cmp
mov
sub
pop
push
push
adc
sbb
dec
lcall
loope
jno
or
pop
mov
stc
cmp
nop
bound
pusha
rorl
mov
push
cmp
xchg
xchg
cld
and
xor
aaa
adc
je
inc
bnd
mov
lea
insl
and
mov
jno
movsb
sbb
into
xchg
dec
push
rorl
loop
sarb
lcall
lods
test
nop
lods
idivl
push
xchg
in
cli
stos
sahf
jns
mov
xchg
or
ds
lahf
or
push
pushf
xchg
test
jp
movsl
fwait
inc
pop
mov
loope
fistl
lcall
stos
ljmp
js
enter
in
mov
xor
xor
notl
sub
pop
pop
cmp
mov
sbb
push
sbb
push
pushf
add
std
and
xchg
pop
mov
stos
mov
mov
pop
jle
dec
outsl
aam
mov
dec
jecxz
or
fmull
imul
cmp
leave
addr16
sub
jnp
insl
dec
aaa
push
push
fidivrl
cli
cwtl
icebp
loop
jns
std
mov
cs
mov
dec
stos
clc
push
inc
sub
stos
mov
inc
push
ja
adc
lret
out
stc
sub
cmc
idivb
sbb
je
ss
rol
test
cmpsl
movsl
fxch
insl
cmp
push
push
mov
mov
sub
or
cld
dec
xchg
add
xchg
cmp
cld
jnp
cmp
dec
add
addl
les
dec
rclb
icebp
pop
insl
pop
mov
gs
sbb
jo
es
cmp
dec
xor
ljmp
xor
xlat
insb
popf
fadds
sub
add
movsl
cltd
xchg
je
mov
int3
xor
and
mov
dec
icebp
stc
pop
push
cld
repz
cmc
mov
cwtl
mov
out
mov
adc
inc
and
shrb
inc
pop
sbb
xchg
sub
sub
dec
arpl
xlat
xlat
out
insl
xor
jmp
mov
roll
cwtl
pop
rorl
adc
imul
push
sub
fisubrl
xchg
mov
inc
xchg
mov
mov
mov
aad
enter
ljmp
or
jl
outsl
jne
int
xchg
jg
pop
inc
sbb
lcall
shlb
sarl
aam
mov
sbb
loope
push
in
xchg
sub
insl
lea
les
push
inc
out
shlb
add
adc
inc
arpl
call
or
mov
or
push
out
inc
jle
loop
stc
and
andl
push
out
mov
and
inc
out
mov
cmpsl
mov
mov
bound
int
push
dec
cmp
outsl
mov
xor
popl
fdecstp
add
push
adc
mov
adc
or
cmp
les
fiadds
data16
add
cmp
loop
mov
sub
hlt
scas
jmp
sahf
out
test
mov
addl
jg
test
negb
inc
push
movsl
movsl
lret
dec
xchg
je
and
rcrb
xor
int3
xor
lods
movsb
pop
mov
sti
and
and
es
clc
xchg
in
xchg
js
xlat
sbb
and
xchg
lret
push
repz
iret
push
xchg
fs
pop
jmp
adc
xchg
rcrb
and
sahf
dec
data16
cmpsl
in
fildll
adc
adc
aas
or
jbe
stc
or
sbb
js
cmpsl
sbb
cld
dec
inc
lret
xchg
cmp
sub
in
jbe,pt
pop
mov
fmull
in
arpl
pop
cli
pop
mov
fxch
jecxz,pt
in
jmp
aaa
inc
fwait
mov
pop
cs
int3
push
mov
dec
outsb
mov
outsl
mov
xchg
mov
xchg
push
test
mov
in
lock
push
jne
jl
ja
jle
fwait
lret
cltd
outsl
pop
jne
fwait
int
sar
pop
hlt
int
inc
mov
or
cmc
dec
fwait
dec
cmc
lock
enter
jno
xchg
and
jno
aas
int3
add
fldenv
repnz
scas
hlt
scas
jbe
jg
inc
mov
dec
mov
or
out
cmp
dec
cmp
sbb
cmpsb
jne
cmp
jl
lcall
inc
inc
xor
pop
mov
inc
sahf
jecxz
xor
jl
add
fdivs
mov
adc
jnp
in
aaa
addr16
ret
lcall
mov
ret
mov
sarb
loop
mov
cmp
daa
lcall
jo
out
jg
vmovntps
in
daa
cmp
mov
leave
jmp
testl
sbb
or
call
pop
push
mov
dec
repnz
out
add
pop
xor
test
adc
mov
xchg
xor
jne
inc
stc
jbe
pop
mov
pop
loopne
push
xchg
insb
cmp
movsl
lods
repz
or
jecxz
rcll
orl
dec
ret
dec
mov
adc
std
stos
ret
cmp
js
psrad
jg
stc
xchg
add
stos
jp
push
jmp
sbb
mov
sbb
loop
clc
testb
not
loop
push
xchg
pop
cmp
shlb
push
xlat
shlb
pcmpgtb
cmp
sbb
inc
dec
repz
hlt
rorb
lods
push
ljmp
rclb
popa
stos
push
jp
out
adc
loopne
mov
mov
loop
sbb
or
ljmp
fwait
in
leave
out
lret
sti
dec
add
shrb
xchg
shlb
in
and
xchg
push
xchg
out
incb
loop
push
ret
push
inc
push
pop
imul
inc
xor
inc
and
addr16
or
push
mov
inc
clc
mov
leave
cmc
aaa
leave
pop
sub
push
mov
pop
xchg
fcoml
in
mov
add
cmp
fcoml
sbb
adc
mov
add
pushf
cmp
enter
lods
dec
or
jbe
cmp
or
lret
push
inc
mov
and
jb
fstps
sub
push
add
jbe
ljmp
xchg
popa
add
das
and
fcmovnb
cmp
cltd
push
and
les
and
xchg
mov
and
dec
pop
nop
filds
sbb
jmp
inc
jp
or
es
or
test
adc
hlt
cmp
shlb
adc
loopne
mov
cmpsl
push
push
outsb
mov
or
popa
pusha
mov
fs
xchg
pop
sar
sbb
lods
push
movb
outsb
cmc
push
xor
dec
jmp
jmp
jmp
inc
icebp
pop
shrb
out
push
sbb
jo
int
outsb
pop
movsb
or
mull
leave
pop
jnp
pop
and
adc
sbb
dec
insl
ja
popf
aaa
mov
pushf
imul
out
scas
fstl
ja
jg
fwait
sbb
and
push
push
orl
adc
pop
js
jbe
xor
push
jns,pn
out
ds
clc
xor
add
fs
xchg
dec
int3
outsl
call
adc
daa
cmpsl
adc
fwait
cwtl
dec
mov
lods
ss
or
inc
stc
into
mov
js
out
aad
movsl
stos
cwtl
jns
cmp
mov
or
stos
cmp
js
push
loop
jae
jo
clc
and
add
shll
mov
and
adc
rcr
in
jle
lahf
cwtl
and
movsb
and
mov
sbb
pop
sahf
test
ss
jp
add
adc
clc
sub
daa
enter
push
sub
insl
sbb
call
insl
push
out
mov
xor
jl
xchg
std
or
jl
mov
sub
mov
stc
fistpl
shl
lods
lds
push
mov
fsubl
aam
jmp
jnp
int3
push
cmc
fadds
sbb
xchg
sub
iret
mov
mov
insl
push
mov
into
mov
push
xor
cld
hlt
mov
cmp
ja
or
stos
xlat
push
dec
scas
push
mov
cltd
mov
rcl
in
shll
lahf
mov
dec
or
cmpsb
jle
stos
jmp
mov
xchg
les
orl
popa
inc
daa
ret
clc
pop
iret
sbbl
pop
cmp
mov
xchg
mov
sbb
vcvtsd2ss
mov
mov
enter
adc
jb
shll
mov
mov
rol
xchg
stos
ljmp
cmp
cwtl
xor
sbb
sub
dec
xchg
hlt
jns
adc
lock
pop
dec
push
jo
jb
adc
cmpsl
ret
scas
and
jge
bound
rolb
pusha
xor
rorb
movsl
ret
outsb
lods
mov
insb
sub
sub
aaa
and
mov
jo
cld
out
pop
jl
or
ficoml
rcrl
xchg
dec
jae
fisttpl
ret
ficompl
fbstp
mov
cld
rcr
es
jg
dec
insb
xlat
inc
xchg
insb
xor
xlat
jnp
and
inc
jecxz
pop
xor
xchg
sub
sti
pop
addr16
mov
sbb
cmp
mov
adc
adc
jne
mov
mov
and
ljmp
mov
cmp
aas
adcb
sbb
jg
scas
jecxz
inc
jnp
or
mov
sbb
and
or
clc
pop
aam
pop
adc
insl
ret
mov
xor
cmp
mov
leave
mov
mov
repnz
and
fs
arpl
dec
jecxz
movb
cmp
cmpsl
cmp
add
xchg
icebp
mov
pusha
das
inc
rsqrtps
popf
repz
sbb
pop
in
sbb
or
testb
add
subb
fisubrs
or
icebp
add
out
outsl
cltd
jb
pop
negl
minps
sbb
mov
aaa
dec
adc
mov
dec
or
mov
and
jp
xchg
push
je
sub
mov
jne
hlt
cmpsb
mov
sbbl
mov
cmp
push
mov
aad
adc
out
out
mov
adc
push
pop
dec
xchg
out
jle
lea
aam
popa
das
push
jg
add
test
xor
jmp
pusha
sub
js
jbe
pop
lea
mov
icebp
push
cs
stc
out
stos
jge
loope
adc
pop
iret
mov
xchg
pop
stos
cli
jne
sbb
adc
pop
pop
loope
or
add
push
xchg
or
ficomps
xchg
mov
jg
ja
cmp
jne
push
cmp
stos
push
insl
jb
inc
fstps
xor
ss
movsl
mov
inc
push
movsb
pop
mov
dec
and
sahf
lea
div
cmp
sub
push
ja
mov
in
inc
mov
mov
movsl
sub
lret
sbb
lret
loop
and
mov
push
mov
test
insb
cmp
jp
pop
pop
and
loopne
inc
int3
ja
xchg
movb
mov
out
add
lock
rcll
xchg
mov
cmp
dec
cmpsl
mov
dec
mov
cmp
ljmp
aaa
in
cmp
inc
sbb
pop
call
loop
hlt
cmp
div
stc
pop
mov
enter
in
inc
jnp
enter
mov
pop
imul
push
sbb
mov
sbb
xor
repnz
imul
outsb
push
jge
xchg
inc
mov
xor
xchg
shrl
xchg
fs
xchg
mov
aam
fmull
adc
dec
into
add
outsl
in
roll
xor
xchg
xlat
mov
stc
pop
dec
jb
ds
and
adc
add
pop
insl
push
and
push
js
lods
fwait
add
push
mov
and
pop
jne,pt
shrb
push
adc
jl
mov
nop
jl
dec
fisubrs
jl
and
add
mov
sbb
subb
sub
inc
cmp
arpl
push
bound
dec
mov
cmpsl
add
in
mov
jb
popf
in
mov
jmp
stos
iret
hlt
stos
movsb
add
add
ret
inc
daa
popa
je
dec
pusha
bound
sbb
in
std
push
lcall
arpl
and
popf
jmp
jge
dec
add
add
movsl
fistpll
dec
call
xchg
jle
pushf
insb
out
sbb
mov
mov
adc
rorl
inc
mov
and
orl
fisttpll
filds
je
lahf
pop
jge
fisubl
cmpsb
mull
outsl
jecxz
xor
jne
shl
sbb
stc
and
scas
imul
cmp
out
cmc
adc
fildll
je
pop
xor
push
mov
incl
hlt
lds
jle
mov
ja
mov
xor
cmp
pop
xor
jle
aaa
outsb
jns
mov
sbbl
mov
jle
jns
mov
fcmovne
xchg
out
aam
mov
jns
lcall
xor
das
popf
or
aaa
cld
pop
out
test
jbe
movsl
xor
xor
adc
mov
push
ret
fisttpll
in
bound
push
mov
cmpsl
cld
gs
sub
jnp
mov
xor
push
test
loope
pop
inc
mov
push
es
or
xor
jo
mov
sbb
stc
xor
jno
mov
jne
sbb
inc
dec
dec
loope
negb
xchg
scas
push
push
repz
imul
stos
mov
adc
cmp
or
dec
les
mov
les
mov
pushf
movsb
adc
and
cmp
int
loope
lret
push
pop
test
mov
inc
lahf
adc
cmpsl
jg
cli
lret
mov
adc
insl
xor
aas
repz
mov
bound
cmpsb
fdivrs
and
mov
ficoml
outsl
sub
and
jae
test
cmc
cmp
sbb
push
sub
hlt
xor
mov
test
push
mov
adc
mov
push
aaa
lahf
jno
mov
inc
popf
fildl
and
dec
lds
cmp
es
mov
in
and
mov
push
jle
mov
mov
jecxz
xlat
add
inc
xchg
mov
jae
jae
xchg
mov
jge
xor
sbb
and
stos
jb
jb
dec
xor
adc
mov
jo
pop
pop
xchg
xchg
jae
lea
pop
inc
ja
push
push
imul
xchg
mov
imul
mov
je
loopne
rcrl
pop
ror
push
popf
imul
scas
inc
enter
popa
inc
das
out
sbb
bound
lret
movl
fstl
or
ss
ret
sbb
jae,pn
push
mov
ret
mov
ror
sub
and
pop
cmp
xchg
popa
test
ljmp
mov
lcall
jae
lret
lods
xor
mov
sbbb
mulb
insl
or
mov
add
jp
fmull
inc
out
or
and
cmp
mov
mull
insb
fwait
outsl
iret
or
lcall
sbb
fwait
dec
sbb
mov
int3
gs
sub
daa
jg
movsl
das
cmp
jl
iret
cmp
add
mov
sahf
test
push
mov
mov
out
push
jae
inc
repz
cmp
push
andb
pop
inc
dec
xor
mov
inc
add
add
or
mov
sub
das
push
push
sub
loop
shlb
das
mov
adc
scas
stc
push
cmp
xor
add
lea
jne
xor
test
test
push
jp
xchg
aad
fldl
push
outsl
mov
out
jne
clc
je
pop
cwtl
cmpsl
jg
aad
jle
push
pop
cmpsb
cld
and
adc
mov
and
repnz
in
cmp
mov
mov
shlb
push
js
aas
mov
mov
adc
mov
or
cli
ret
stos
jge
in
shlb
fdivl
fwait
je
imul
js
or
or
adc
imul
hlt
push
cmc
gs
inc
push
sbb
outsb
frndint
sbb
and
arpl
xor
fs
xor
sahf
pushf
add
mov
js
or
nop
lahf
lods
lods
cmpl
xor
cmp
in
push
popf
shlb
ja
cmp
add
and
rclb
jo
sub
cli
sub
js
add
ss
repnz
lea
sahf
jo
adc
push
or
jno
push
mov
scas
arpl
xchg
aam
xor
mov
aaa
test
or
dec
sarb
inc
insl
sar
adc
ret
and
lahf
adcl
push
repz
pop
mov
pop
push
cmc
das
ret
jns
xchg
jbe
or
push
dec
and
inc
pop
mov
mov
mov
lahf
inc
push
outsb
cld
inc
push
mov
sbb
cmp
dec
mov
sbb
dec
mov
xor
in
fsub
pop
push
in
add
lock
rorb
or
les
sub
push
out
psrlw
lods
mov
leave
sbb
cmp
movsb
mov
test
mov
xor
aam
sub
add
mov
pop
push
lcall
and
into
dec
add
adc
cmp
dec
sbb
push
bound
mov
jg
sti
pop
add
xchg
inc
xchg
cmp
inc
pop
sub
mov
cmp
data16
mov
icebp
dec
dec
jge
or
test
ss
pusha
sbb
lret
sub
lea
pop
sbbl
subb
movsb
lret
lcall
movb
fwait
leave
fwait
aas
lods
cmpsl
jge
xor
dec
insb
cmc
mov
or
shrb
adc
mov
sub
ror
add
or
shlb
loop
jae
jmp
icebp
xchg
inc
xor
in
out
pushf
icebp
add
cli
inc
cmp
fimull
imul
stos
add
cmp
loop
jno
inc
rorl
pop
pusha
jbe
cmpsl
jnp
push
bound
xorl
and
cltd
ret
roll
cli
adc
decb
push
cwtl
aas
mov
outsb
inc
rorl
jb
outsl
pop
adc
enter
xchg
int3
into
sub
inc
repz
std
ds
aam
xor
std
mov
mov
subl
dec
mov
mov
fwait
lea
inc
adc
ret
popf
movsb
divl
jae
test
jmp
mov
jo
inc
xchg
or
pusha
sub
mov
add
int
lds
and
fsub
out
cmp
std
mull
xor
les
sub
mov
lahf
push
ljmp
inc
es
outsl
imul
pop
icebp
inc
mov
pushf
popa
repnz
notb
hlt
adc
hlt
push
sub
mov
daa
mov
xchg
mov
push
test
fistps
repz
mov
out
and
mov
jbe
add
inc
push
mov
outsb
inc
mov
pop
cmpb
faddl
cmp
mov
pop
les
jg
sbb
adc
scas
push
repz
je
scas
xor
dec
xchg
fists
xchg
adc
mov
imul
lcall
xchg
adc
mov
inc
rorl
add
jl
call
cwtl
inc
pop
fistl
cmp
lret
dec
mov
cli
jo
bound
pop
fisubrs
ret
dec
jg
aaa
mov
dec
jo
pop
test
repz
lods
sahf
loopne
inc
push
pusha
pusha
cli
xchg
arpl
or
mov
movsb
ja
mov
movsl
fadds
je
movsb
cmpsl
and
adc
andl
fwait
ss
pop
xchg
inc
jmp
inc
push
jmp
cmp
and
lock
loope
mov
pusha
xchg
movnti
jle
mov
ss
xor
inc
add
sbb
lds
loopne
pop
hlt
leave
into
jl
sub
std
push
cmp
cmpsb
pop
mov
jb
fists
cltd
das
das
fsubs
mov
and
inc
cmp
pop
ja
outsl
push
mov
jle
and
dec
fisttpll
and
dec
jp
lret
testb
orb
lret
push
xchg
loopne
test
imul
jl
dec
push
outsl
add
movsb
xor
jle
push
rol
ret
mov
xchg
xchg
imul
loop
scas
jno
loopne
jecxz
xchg
jns
mov
pop
aas
adc
movl
xchg
mov
adc
fwait
popa
and
imul
inc
mov
dec
mov
fildll
ds
lahf
vmulsd
dec
shl
adc
jbe
xor
sbb
push
push
scas
mov
bound
cs
mov
pushf
xchg
xor
xlat
inc
sbb
mov
jnp
lods
pushf
fdivl
jns
mov
jae
xor
std
leave
leave
mov
jae
fsubrp
mov
pusha
xchg
push
mov
xlat
movsl
pop
in
xor
dec
jecxz
inc
ret
mov
or
ja
aas
sub
dec
jmp
cmpb
stos
mov
in
test
mov
sub
ljmp
push
rorl
pop
hlt
xor
stc
movl
sub
pop
inc
push
nop
add
mov
lahf
mov
push
dec
jb
pop
das
ret
xor
iret
adcl
test
push
mov
jmp
add
test
adc
pushf
popa
or
jns
cmp
adc
sbb
roll
popa
adc
bswap
mov
test
xor
mov
or
cmp
or
adc
xchg
sbb
xor
mov
push
in
data16
lcall
dec
sbb
push
mov
dec
add
cmpsl
in
hlt
jbe
mov
adc
ljmp
mov
jge
pop
xor
aaa
outsb
xchg
repz
inc
loopne
dec
repnz
cmp
xchg
adc
aas
mov
pusha
push
sub
scas
icebp
arpl
in
lods
pusha
mov
daa
mov
test
sbb
imul
leave
out
mov
pop
cmpb
inc
sbb
lret
leave
push
mov
sti
mov
inc
shrb
adc
adc
mov
in
xchg
xchg
add
gs
or
popa
out
mov
loope
add
roll
addr16
mov
leave
imul
mov
in
xchg
mov
outsl
pop
or
rcrl
fcompp
movsb
test
out
aaa
dec
pop
loope
in
test
clc
popf
jne
and
dec
push
insl
sti
xchg
out
push
mov
lret
jb
jge
sub
pop
into
pop
cmc
test
cmp
aaa
sbb
decl
xchg
mov
xor
xor
jg
dec
sub
mov
adc
pop
test
push
push
cmp
movsb
icebp
pop
or
dec
jmp
nop
scas
dec
dec
shrb
ljmp
lds
adc
jb
xor
daa
repz
dec
inc
dec
insb
js
jns
and
addr16
mov
scas
cmp
out
push
adc
jg
adc
aaa
jecxz
xor
or
mov
pop
jmp
jbe
and
cmp
adc
dec
sub
gs
dec
sti
out
insl
pop
decb
sbb
pushl
divl
lahf
cwtl
push
ficoml
pushf
das
push
pushf
adc
neg
std
pushf
les
rol
scas
xor
cmc
or
add
rcl
fwait
add
inc
in
and
mov
cltd
pop
add
push
or
dec
or
adcb
jmp
nop
sub
or
sbb
or
sbb
sbbb
in
dec
add
ja
cmc
repz
out
loopne
fcmovnbe
pushf
dec
xchg
insb
hlt
xlat
mov
cwtl
cmp
cwtl
jnp
insb
jecxz
data16
pop
lcall
mov
ds
mov
ljmp
frstor
aaa
pop
lods
ljmp
call
sub
mov
clc
and
cmp
insl
daa
enter
xchg
and
nop
jmp
push
lods
sub
fldenv
jl
fwait
test
pop
mov
mov
pop
lock
add
mov
push
ror
cmc
rorb
inc
out
sbb
cmpsb
mov
stos
xchg
and
sbb
pop
cmc
push
inc
add
lcall
pop
in
lcall
dec
jns
ret
or
cld
jo
lods
mov
fcompl
mov
js
loope
mov
mov
int
sbb
sub
movsb
aam
push
jbe
lret
sub
pop
pop
xchg
scas
movsb
es
lahf
movsl
stos
jbe
das
jo
enter
xor
out
std
lea
xchg
sahf
inc
xlat
jecxz
lock
and
call
push
push
push
ss
mov
xor
jbe
mov
jl
inc
push
pop
inc
pop
sbbb
xor
out
mov
adc
xchg
repz
icebp
sbb
mov
jmp
mov
jg
and
es
sahf
mov
cmc
andb
stc
add
jo
fistps
cmp
ret
sbb
scas
sub
xor
sbb
push
push
in
jl
out
pushl
push
and
test
fisubrl
add
dec
pop
cmc
sbb
dec
sti
mov
pop
mov
inc
adc
ret
cmpsl
ret
inc
lock
jo
dec
mov
lods
insb
or
daa
xchg
cli
pop
dec
add
pop
inc
icebp
add
out
rorl
push
aaa
push
mov
andb
pop
push
in
push
jecxz
pop
inc
cmp
push
lret
pop
xchg
out
jo
lods
cli
loop
rorl
sub
clc
je
jne
inc
fists
adc
lcall
insw
push
push
imul
inc
pop
in
jbe
mov
icebp
xor
dec
xor
jl
or
cmp
sub
enter
and
orb
in
lods
cmp
sub
xor
je
inc
push
popa
jle
jno
cmp
pop
mov
daa
decb
iret
xor
sub
ja
xchg
pushf
jnp
add
and
sbb
mov
andl
xchg
xchg
shl
mov
push
lahf
testl
ds
mov
mov
and
or
rcl
mov
jne
inc
fidivrl
push
das
shrl
cmp
inc
movsb
mov
push
ret
add
std
inc
lret
leave
mov
mov
mov
or
mov
pop
push
cmp
xchg
or
or
out
idivl
aas
sarl
sahf
ss
movsl
inc
ret
jnp
outsl
js
sub
and
dec
aas
into
cmpsl
sbb
mov
clc
mov
mov
inc
iret
push
insl
add
sbb
xchg
dec
es
mov
jmp
mov
sahf
add
icebp
mov
jns
sahf
mov
jmp
mov
scas
hlt
outsb
cmpb
or
xchg
xor
mov
int
cmc
adc
movsb
xchg
xlat
mov
push
sbb
mov
divb
in
addl
push
adc
into
xor
mov
movsb
sbbl
jo
or
aam
xchg
mov
mov
mov
push
push
punpckldq
std
fwait
cmpsl
dec
add
push
add
imul
add
gs
enter
cmp
xchg
mov
and
mov
mov
mov
ret
mov
add
fisttps
sbb
mov
jecxz
out
jecxz
cmp
and
fucompp
mov
inc
aad
aas
push
push
pop
inc
pop
sbb
mov
pop
sbb
xor
xor
inc
sub
outsb
orl
ss
xor
faddl
jge,pn
dec
lods
mov
mov
push
outsb
insl
enter
lods
mov
pushf
imull
psubsw
in
mov
mov
incl
pop
sub
dec
pop
leave
clc
vandpd
jae
pushf
inc
xlat
test
add
test
add
movb
add
movsl
cmc
das
iret
push
add
fwait
mov
insl
dec
mov
in
dec
neg
mov
lret
sub
adc
adc
jns
mov
adc
lret
or
test
jp
jmp
out
scas
outsl
das
add
pushf
insl
mov
push
or
leave
cmpsb
or
xor
add
mov
cld
and
or
test
ljmp
cmp
lods
xor
shlb
addr16
pop
insb
add
pop
xchg
outsb
popf
jp
daa
icebp
or
mov
mov
cwtl
inc
fucomip
pop
xlat
out
jmp
pop
jbe
inc
test
nop
lds
jb
xchg
and
adc
inc
sub
mov
mov
hlt
dec
jb
push
lahf
xchg
jecxz
mov
sbb
push
add
cltd
in
in
cmp
push
clc
aam
push
sub
cmp
insl
lods
mov
xchg
push
xor
push
jge
mov
loop
inc
jb
inc
test
ret
mov
lret
jmp
aaa
mov
fs
jo
loopne
dec
mov
and
cmc
add
cmp
call
lahf
popa
mov
pop
je
lods
negb
jo
fldenv
jo
pop
sahf
xor
jl
or
mov
decl
test
test
cmp
stc
lods
jae
inc
xor
sub
adc
pushf
jl
mov
and
mov
insl
jmp
xchg
mov
cmpsl
push
outsl
mov
sbb
mov
rcll
xor
jecxz
inc
push
mov
addr16
or
sahf
push
pop
jp
push
pusha
in
or
icebp
add
das
xor
push
mov
jp
aaa
cmp
lret
stos
push
adc
fildl
stc
aam
adc
xchg
je
push
mull
roll
sub
or
fmul
xchg
js
ja
fabs
mov
or
mov
arpl
pop
mov
sub
insb
mov
jmp
scas
sbb
add
xor
popf
fisubl
cmpsb
shl
mov
adc
dec
mov
lea
push
roll
push
rcll
aad
xor
push
sbb
clc
in
xor
mov
fwait
sub
cmp
fistpl
je
xorb
push
outsb
and
imul
sahf
movsb
add
mov
mov
jmp
sti
mov
mov
out
dec
cmp
cs
mov
addr16
and
dec
inc
cmp
jb
jp
in
cmp
lret
mov
test
scas
ret
or
mov
gs
sti
std
jg
hlt
push
std
loopne
pop
outsl
xlat
hlt
clc
idiv
inc
jl
into
adcl
mov
pop
shrl
aam
out
push
pushl
imul
test
cmpsb
in
mov
pop
test
push
mov
in
in
inc
pop
sub
mov
sbb
mov
ja
pop
sbb
jo
push
sub
nop
pop
pop
inc
hlt
add
js
repz
aas
or
and
sub
test
cs
dec
mov
dec
mov
and
aam
loopne
mov
mov
xchg
mov
pop
das
std
cmp
jno
push
dec
xchg
pop
das
into
fnsave
aas
adc
xor
scas
cmpsb
addl
sbbb
cmp
stc
or
outsb
iret
jg
cltd
jl
mov
std
add
pop
daa
push
sarb
xchg
sbb
addr16
rol
shlb
and
aaa
rolb
je
scas
push
imul
arpl
int3
sbb
pop
iret
adc
inc
pop
sub
fists
les
inc
pop
lods
and
mov
add
loope
ljmp
fwait
xchg
adc
inc
xchg
push
add
loop
fimuls
cmp
sbb
test
nop
sbb
mov
lcall
leave
push
sti
xor
mov
leave
aam
mov
inc
imul
das
mov
int
arpl
rorl
test
jge
pusha
add
push
pop
dec
ja
dec
outsb
dec
mov
mov
icebp
subb
repz
sti
jae
jg
mov
insb
dec
xchg
iret
decl
cmp
cmp
das
mov
sarl
mov
das
cmpsb
xchg
lret
adc
dec
pusha
and
outsl
adc
ljmp
xor
call
outsl
push
xchg
sbb
dec
jmp
jl
inc
sub
mov
push
movsb
xor
xlat
push
or
shll
lds
jle
pop
push
cmc
loopne
push
xor
mov
or
test
cld
in
push
lea
lea
mov
repnz
xor
pop
stos
push
inc
les
add
xor
mov
cmp
pop
and
dec
push
fs
movsb
sub
jl
push
dec
push
movsb
ror
clc
xchg
stos
cmp
xchg
roll
cwtl
rcrl
cmpb
aaa
inc
xchg
or
fwait
movsb
lahf
cmp
mov
jl
test
mov
imul
imul
xchg
int
mov
es
xchg
in
xlat
sbb
sub
pop
loope
pop
jns
cmp
mov
and
inc
or
xlat
cmp
int
adc
stos
lods
insl
push
jecxz
pop
fcomi
pop
aas
xor
ret
andl
sub
arpl
scas
daa
lods
cmp
jae
mov
fnsave
fistpll
sub
imul
out
lret
ds
add
or
push
mov
xchg
lahf
mov
push
das
popa
out
pop
daa
lret
cmc
bound
fistpl
sub
into
loope
fnsave
call
dec
sub
jne
inc
add
and
int
loop
fwait
inc
sbb
mov
ret
or
add
lcall
xor
addb
sub
pop
loope
into
sub
subb
xor
mov
lcall
inc
and
push
push
xchg
mov
xchg
dec
sbb
cmp
int
mov
add
push
int3
test
clc
mov
fwait
imul
jg
cmp
sub
cwtl
in
xlat
xchg
push
fs
inc
xchg
pop
jns
sub
sub
pushf
iret
xchg
scas
push
test
adc
lret
lea
mov
imul
push
jp
inc
sbb
fistl
push
imul
cli
mov
or
or
fcmovb
adc
repnz
xchg
and
add
jl
sub
pop
sub
sub
cmp
mov
jl
jns
imulb
or
enter
sub
sbb
sub
jb
cmp
push
xor
pop
push
mov
sbb
dec
mov
sarl
shlb
push
jl
shlb
sbb
ficomps
xchg
ret
xor
shrb
pop
adc
movsl
int
inc
mov
pusha
in
mov
jmp
sub
cmp
mov
cmp
test
xor
sub
mov
call
cmp
clc
push
dec
mov
pop
test
dec
sbb
or
fisttps
or
mov
lock
jnp
and
stc
push
mov
dec
je
fwait
loopne
jg
inc
lret
push
ret
add
stos
cld
nop
outsb
push
enter
out
or
sbb
or
lods
fistpll
push
push
iret
cmpsl
add
xchg
hlt
pop
push
lock
icebp
in
add
jbe
lcall
push
dec
and
iret
call
and
punpckhdq
aaa
mov
xchg
not
orl
out
sbbl
dec
fidivrs
xlat
inc
mov
pop
call
mov
mov
inc
arpl
cmp
out
mov
icebp
xchg
cld
das
pop
add
mov
arpl
push
mov
sbb
push
into
jmp
loop
sarb
addl
sbb
jmp
cwtl
ljmp
cli
jmp
dec
and
enter
xor
inc
int3
cmpsb
fldt
and
mov
lods
or
add
pop
pop
sub
lcall
lea
mov
lds
pop
movb
dec
fcomps
ja
cli
sub
outsl
mov
jp
add
int3
mov
int
or
add
into
into
inc
xor
fiaddl
fwait
jle
pop
sbbl
mov
cmc
mov
jp
and
fstps
push
int3
into
jge
adc
sahf
ret
cld
iret
cmp
clc
outsl
cmp
lods
imul
clc
aaa
js
test
shl
jb
lahf
lods
pop
and
movsl
mov
fidivs
pop
cmpsl
and
test
repz
icebp
push
add
addr16
insb
pop
out
xchg
sar
push
inc
xlat
sahf
inc
fdivs
or
ds
icebp
shlb
pop
out
fdivl
rcrb
int
jmp
mov
sbb
lds
jo
sub
mov
call
std
lods
pop
cmp
sbb
add
rcl
pop
jge
jo
or
cld
jle
push
xchg
neg
loope
dec
cmp
stos
sbb
jno
clc
xchg
das
gs
ds
push
out
fs
fs
inc
cmc
xor
jno
in
inc
mov
fs
shlb
int3
imul
insl
das
cltd
rorl
sbb
fdivl
js
nop
mov
outsl
adc
rclb
movsl
mov
pusha
punpckhwd
xor
fs
clc
jl
rcl
bound
repnz
out
lahf
mov
testl
es
pusha
sbb
cwtl
mov
das
or
dec
fscale
inc
std
fidivs
cmpsl
cmp
mov
push
inc
pop
lret
mov
insb
sbb
pusha
pusha
xchg
ds
fs
xchg
mov
xchg
pop
or
pop
xchg
sbbb
test
jne
mov
mov
ret
cmp
fstl
mov
sbb
mov
mov
daa
mov
xchg
int3
orl
adc
movsl
inc
loopne
xor
jecxz
push
popf
jg
mull
stos
sub
xchg
je
adc
add
mov
mov
loop
sub
dec
add
pop
mov
mov
lahf
add
movsb
mov
test
push
push
push
sbb
cmp
loope
loopne
mov
lds
lea
push
ret
jns
imul
hlt
pop
push
repnz
divb
gs
lods
pop
mov
test
cwtl
jmp
in
mov
punpcklbw
cs
cs
inc
pusha
xlat
ffreep
pushf
pop
jmp
or
mov
adcb
mov
or
inc
cmp
cwtl
push
aaa
rol
jne
ret
xor
int
test
dec
inc
xor
adcl
shlb
clc
nop
cmpsl
and
clc
insb
mov
sbb
or
xor
fldl
jo
cmp
inc
adc
or
push
fwait
pop
mov
push
mov
jmp
jno
sbb
xlat
mov
adc
jmpw
addr16
add
or
in
push
pop
cmp
mov
jne
jnp
mov
test
adc
cwtl
cmp
stc
ja
pop
lea
fisttpl
outsl
aaa
test
lret
shrl
dec
std
test
push
jmp
xorb
dec
mov
loopne
and
lods
dec
dec
outsl
popf
cmpsb
cmpsb
xlat
shlb
cmpsl
push
xchg
pusha
mov
mov
mov
mov
imul
sub
inc
mov
out
into
loop
pop
inc
andb
cmp
arpl
adc
fs
aam
and
mov
inc
sub
xchg
and
stos
fs
rorb
jo
sarb
cli
xchg
mov
add
sub
and
aaa
adc
icebp
push
dec
aaa
jae
cwtl
jle
cmpsl
mov
xchg
jae
push
out
cmpsb
push
jbe
das
ja
outsb
cld
xchg
mov
ds
cmp
push
in
mov
sbb
cmpsl
shll
jne
sub
mov
jns
popa
and
stc
dec
pop
addr16
mov
rep
jae
pop
lods
mov
xor
xchg
and
inc
mov
jo
mov
mov
lea
sbb
leave
cmp
pop
fisubrs
xor
dec
mov
dec
mov
movsb
push
aas
test
rcrl
es
mov
xchg
mov
jb
cmp
call
pop
mov
std
addr16
sub
fmul
mov
popf
lds
sbb
ret
addr16
stos
add
pop
add
notl
test
xchg
push
pop
mov
rcll
pop
inc
and
test
aaa
mov
test
mov
jp
es
or
test
ljmp
data16
push
inc
or
cmp
addb
cmpsb
sub
push
test
stc
aas
push
jmp
pop
sti
popf
xor
lcall
iret
sarl
push
nop
dec
xchg
stc
xchg
stos
push
mov
mov
loope
lahf
jbe
scas
test
dec
mov
shr
pop
mov
or
fs
cmpsl
ds
sahf
jae
mov
jl
daa
xor
or
mov
sub
cmp
loope
xor
sub
test
shll
mov
cmc
cmp
rcrb
aad
adc
mov
in
xor
push
and
sbb
adc
ljmp
dec
xor
rolb
popa
mov
sti
insl
mov
fwait
imul
dec
fwait
lock
mov
inc
pop
cld
das
les
sub
xchg
jp
outsb
incb
jecxz
pop
sub
push
movsl
mov
mov
sub
pop
inc
imul
pop
test
mov
rcr
jecxz
cmp
stos
adc
xchg
mov
cmp
pop
daa
push
inc
popa
les
decb
out
stos
xchg
mov
lds
jge
fcmovnu
test
mov
popf
mov
inc
push
sbb
pusha
out
jge
loopne
adc
jp
clc
inc
sub
push
stos
bound
cwtl
sub
fdivrl
inc
dec
data16
std
sub
push
push
fdivl
psubq
inc
push
pop
das
pop
jecxz
fmuls
lret
std
jnp
xchg
push
push
jb
lret
icebp
dec
inc
fdivp
xlat
aad
dec
inc
test
dec
xchg
sbb
adc
in
push
xchg
cmp
jbe
imul
mov
adc
fisubs
movsl
imul
cmp
cli
enter
lret
lods
push
pop
lods
or
iret
shrb
sub
mov
aam
call
xlat
mov
into
and
sub
sub
jl
fisttps
ror
jae
fisttps
sbb
jns
xchg
mov
pusha
jnp
inc
and
xchg
xchg
xor
pop
fbld
inc
push
sti
mov
sub
dec
xor
lods
outsb
xor
hlt
mov
dec
and
mov
push
jl
out
fwait
ljmp
mov
mov
push
lea
sub
aaa
std
outsl
mov
dec
in
dec
outsl
clc
jne
sahf
push
dec
xchg
cmpsb
fildll
jmp
das
stos
es
pop
dec
cmp
cmc
ds
mov
xchg
lahf
xor
cmp
xor
dec
xor
or
push
sbb
xorl
lds
inc
lea
outsb
addr16
cmpsl
lods
and
jo
push
ja
mov
xchg
add
pop
cli
rorl
and
xchg
ss
pusha
insb
movsb
push
ljmp
lret
jne
into
sub
dec
sbb
add
fiaddl
mov
ret
jae
imul
xchg
push
xchg
mov
add
les
mov
sub
push
mov
xor
push
dec
and
pop
and
cmp
cmp
mov
adc
pusha
push
in
loope
cmpsb
and
loop
fcoml
jg
sbb
stos
xorl
xor
ss
popa
jb
sbb
add
dec
enter
xor
test
inc
cmp
push
add
fistpll
cli
cmpsb
jne
lea
sbb
fs
and
fwait
lret
fwait
mov
fdivrs
mov
and
jl
pushf
mov
lcall
dec
adc
leave
sub
aas
cli
subb
lock
dec
xchg
mov
mov
mov
adc
in
rcr
test
test
movsl
lret
push
adc
push
lret
nop
cli
jno
push
inc
lds
push
xor
cld
push
push
or
and
mov
sub
or
dec
push
aaa
inc
xor
in
push
sbb
je
aad
mov
cmc
daa
inc
out
sbb
jle
dec
loope
mov
pop
fidivrl
fisubs
cmp
cmc
fadds
int
push
js
sbb
jle
test
jbe
jno
sub
jnp
call
push
stos
je
int3
rorb
xlat
out
xchg
pop
xchg
dec
xor
adc
or
xchg
inc
sub
outsl
and
jmp
enter
and
das
xchg
pop
mov
pop
mov
rclb
and
sub
adc
xchg
cmp
adc
lret
ret
in
push
push
inc
and
stos
and
stc
adc
inc
mov
adc
and
cmp
xlat
fldcw
cmpsb
dec
shrl
outsb
lock
inc
mov
mov
in
insb
lock
pusha
pop
push
cmp
jne
divb
sbb
cmc
out
jb
or
cmpsl
mov
mov
loop
xlat
movsb
lahf
nop
repnz
cmp
mov
mov
mov
ror
fsubrp
push
xor
les
mov
push
push
or
inc
flds
mov
push
sbb
adc
sub
test
addb
jg
inc
and
jge
sbbl
jne
adc
xchg
push
sysenter
mov
or
bound
ficompl
push
xor
adc
dec
out
ffree
cld
push
popa
sub
lret
jl
test
mov
shlb
fsubrs
jle
ja
sbb
les
adc
dec
js
pop
mov
subb
leave
push
pop
dec
pushf
pop
adc
out
mov
xchg
pop
mov
and
mov
push
orb
inc
add
sahf
or
inc
pop
outsb
xor
mov
test
xor
sbb
pop
test
xchg
push
fiadds
jmp
mov
mov
jne
fisubrs
cmp
push
pop
fcmovbe
sbb
jp
addb
sbb
sub
imull
aas
mov
cmpsb
cli
xchg
imul
push
pop
xorl
mov
in
out
and
dec
lahf
xor
cmp
sbb
fnsave
jp
shrl
movsl
ljmp
push
and
loop
add
jge
fistl
lods
fdivrs
aaa
test
mov
mov
xor
pop
inc
std
mov
xchg
popa
cmp
push
dec
mov
lea
lahf
add
leave
and
or
or
lds
mov
pop
and
cld
cmpsb
mov
lods
popa
out
pop
arpl
dec
cmp
or
dec
ljmp
jecxz
dec
sbb
jp
inc
cltd
or
xor
push
mov
adc
ss
jecxz
add
cli
out
xlat
mov
lcall
rolb
imull
mov
cwtl
movsl
mov
cli
jb
dec
out
clc
cmp
or
jnp
xor
jo
and
icebp
dec
int
mov
movsb
int
or
xor
mov
pop
push
jns
xor
mov
mov
loop
arpl
ljmp
in
pop
mov
outsl
pop
xor
imul
push
mov
popa
enter
adc
fdivrl
mov
cwtl
and
xchg
add
std
xorl
xchg
xchg
imul
sub
repz
inc
and
js
std
pop
leave
pop
hlt
xchg
mov
mov
mov
cmp
test
push
stc
movsl
fbstp
outsb
and
push
pusha
jae
fdivl
xor
scas
data16
fmull
inc
push
lret
cmp
sub
inc
faddp
in
push
cmp
xchg
mov
adc
and
imul
push
outsl
jl
sbb
pusha
sar
jno
int
sub
insl
hlt
sub
and
jae
dec
sbb
cmp
dec
jb
mov
out
in
xchg
fnstsw
jle
mov
add
fsubs
out
adc
cmp
es
sbb
xchg
or
ds
mov
cmp
insb
mul
hlt
fcmovb
inc
mov
in
loopne
mov
aaa
out
push
shl
stos
pminub
test
movl
int3
fcmove
out
xchg
push
je
icebp
lods
add
out
out
rcrb
pop
fs
xor
or
cmp
add
mov
cli
push
out
push
pop
and
add
lcall
testb
add
inc
xor
add
push
jmp
lods
je
xchg
mov
xlat
insl
loope
inc
mov
add
sbb
std
repz
jmp
pop
lcall
xchg
gs
movsb
cmp
nop
adc
mov
adc
sbb
out
inc
ss
xor
in
dec
ss
xor
das
mov
mov
jne
dec
xorb
dec
jbe
jnp
and
add
or
or
ss
outsb
imul
ss
xor
and
xor
adc
mov
sbb
inc
mov
add
out
push
cs
lret
push
cmp
inc
cmpsl
cmp
aas
pavgb
data16
lods
dec
cmp
sbb
fidivl
xchg
cli
xchg
clc
adcb
or
sar
xor
pushf
and
sub
mov
push
lcall
cld
repz
cmp
std
inc
popf
adc
dec
adc
cltd
mov
sub
loope
pushf
cmp
fstpl
ds
das
jnp
nop
push
xor
push
popa
add
cmp
and
orb
xchg
imul
sahf
fmuls
mov
push
push
adc
xor
jge
jno
lahf
push
insb
xor
daa
ds
push
push
lcall
mov
sub
adc
mov
push
jae
imul
mov
cmp
add
lea
inc
push
jbe
pop
cmp
xchg
adc
adc
fs
test
mov
cmp
push
fs
roll
sub
inc
jo
mov
sub
mov
nop
bound
loopne
push
aam
xchg
cwtl
and
mov
xor
jmp
into
in
fadds
xchg
pop
jb
jmp
out
adc
aaa
mov
sbb
ja
xor
lods
ljmp
pop
adc
or
mov
sbb
mov
out
pop
jmp
divb
sbb
test
push
dec
les
mov
inc
xor
push
aaa
xor
test
mov
xor
pop
int3
enter
add
lcall
jno
mov
dec
mov
xlat
mov
in
jae
imul
outsl
push
xchg
movl
lods
cs
jb
or
or
sub
jo
inc
inc
rcll
cltd
nop
mov
pop
dec
jle
std
push
gs
and
in
lahf
sub
mov
stos
adc
xor
sbb
push
mov
bnd
ficoml
scas
ds
js
inc
jecxz
rclb
insb
dec
js
dec
mov
jp
inc
fwait
rcl
fldl
in
push
aas
jnp
int3
dec
mov
das
and
xchg
add
push
nop
enter
mov
notl
adc
mul
xchg
push
sub
xor
movsb
insb
mov
xchg
aas
xchg
add
lcall
jmp
out
pop
bound
jno
out
js
or
hlt
and
popa
scas
leave
push
stos
xchg
sub
les
cmpsb
lock
leave
inc
inc
fists
lret
dec
insl
mov
push
sarl
push
jmp
loop
fldt
cmp
mov
jecxz
shl
inc
push
loope
xor
arpl
sub
adc
adc
mov
scas
int3
pop
and
jge
daa
stos
out
clc
pop
ss
in
dec
ret
xchg
cmp
jle
push
fisubrs
int
fwait
pop
popa
ficompl
sub
sub
xadd
js
sub
xchg
mov
in
xor
ljmp
mov
ljmp
jge
inc
cwtl
inc
out
inc
mov
add
insl
hlt
cwtl
cmp
stos
nop
xor
dec
push
outsb
sub
jmp
mov
testl
mov
cmp
add
mov
out
inc
mov
scas
aad
ret
and
xchg
iret
add
lods
jnp
movsb
sahf
pop
fnstsw
mov
add
push
pop
pop
mov
sbb
mov
or
dec
aas
add
mov
jmp
iret
or
in
in
pop
cmpsl
repnz
inc
cmp
daa
ss
jp
out
clc
ljmp
sti
mov
orl
imul
push
nop
test
jl
loop
mov
scas
repz
jne
sahf
sbb
sbb
push
rolb
test
xchg
jle
adc
jnp
adc
lea
adc
inc
xor
dec
data16
ljmp
dec
loopne
dec
arpl
mov
arpl
lret
aaa
movsl
sub
push
cmp
sti
xor
inc
jmp
mov
cmpsb
aam
pop
rclb
adc
js
mov
sbbl
inc
pop
cmp
ja
inc
xor
or
adc
fld
ss
pop
repnz
adc
xchg
add
imul
sbb
sub
sbb
inc
pop
ja
loop
jge
cwtl
jae
fsubrs
mov
insl
stos
jbe
aad
sub
jg
pop
aas
cs
push
xchg
add
dec
stc
insb
daa
sahf
pop
testl
pop
rclb
xlat
mov
mov
bound
mov
cmpsb
dec
jbe
dec
data16
ffreep
push
push
lret
cmpsb
jo
adc
js
outsl
iret
sti
adc
sub
sub
dec
fwait
adc
xchg
sub
mov
jmp
sbb
adc
fiadds
mov
xchg
mov
xor
popf
push
in
out
sti
cmp
push
push
adc
ret
sbb
xchg
rcrb
mov
mov
icebp
mov
add
push
outsl
lea
int3
push
js
in
and
jb
jmp
sbb
xor
movsl
fidivs
sbb
mov
jae
ja
cmp
movsl
cmp
xchg
lods
repz
mov
adc
mov
mov
jle
testb
mov
and
test
sbb
rcrb
fidivl
movsl
cmpb
in
xchg
fcmovne
ljmpw
xchg
sahf
cs
push
testl
mov
xchg
mov
xor
or
adc
cmpsl
push
inc
les
loopne
icebp
xlat
mov
fiadds
int
sub
cmp
lahf
movsb
jbe
into
jo
mov
xchg
mov
pop
sbb
sar
out
arpl
push
in
lods
add
push
jge
iret
sub
in
add
cmpsb
rcll
sbb
fisubl
bound
dec
lahf
dec
cld
add
sahf
lds
in
mov
popa
roll
pop
mov
push
mov
fimull
and
pop
cmp
in
mov
ja
mov
lods
insb
test
loope
das
bnd
mov
nop
inc
je
lcall
push
rcr
jmp
inc
mov
dec
ljmp
fisttpl
jae
mov
cmp
outsb
cmp
push
push
and
sarb
xchg
clc
pushf
push
mov
inc
sahf
push
cli
mov
mull
int
fsubrs
into
sbb
addr16
mov
adc
mov
jo
shll
loop
jo
push
push
movsl
push
mov
je
lds
repz
mov
bswap
fstl
jo
add
or
mov
imul
push
xchg
and
mov
sub
xlat
cmp
push
pusha
xchg
adc
adc
aas
jae
pop
sbb
xor
cmpsb
cmpsl
iret
pusha
je
test
mov
xchg
shll
cld
mov
push
in
xor
and
fdivrs
push
xchg
pop
in
adcb
xchg
push
daa
and
pop
or
sub
int3
daa
and
aam
movsb
iret
mov
jne
dec
insl
hlt
aad
pop
lds
iret
jbe
ret
rcrl
sub
adc
in
xor
les
in
or
sbb
push
adc
sbb
xor
sbb
sarl
xlat
sbb
es
faddp
ret
push
mov
xchg
clc
in
imul
outsb
push
loope
adc
scas
aad
mov
jmp
std
fdivl
push
cmp
jb,pt
cmp
dec
push
movsl
imul
mov
ret
imul
jbe,pt
fwait
dec
sbb
cmp
insb
lds
testl
sbb
jo
jae
hlt
mov
or
inc
cmpb
bound
pop
mov
mov
sub
xchg
jns
jno
add
inc
mov
stos
xlat
arpl
int
sub
out
push
sub
cmpb
or
ficompl
in
mov
test
ss
insb
test
out
pop
cltd
jmp
cld
cmc
bound
pop
push
sub
dec
out
inc
adc
mov
xor
clc
push
ss
lock
sub
pop
push
fbstp
xor
xor
dec
jp
pop
push
fistps
pop
pop
jbe
lea
xchg
push
pop
push
add
inc
adc
cli
cmp
jae
loope
inc
das
cld
push
inc
or
in
pop
jge
out
insb
dec
cmpsl
rcrl
jmp
sub
imul
fwait
jp
jne
pop
jbe
dec
sbb
push
out
and
jo
adc
dec
mov
sub
sbb
rorl
pushf
shlb
dec
cs
mov
push
in
out
mov
add
or
flds
mov
push
pop
mov
jae
dec
sub
adc
sbb
jb
shll
ljmp
jmp
jle
gs
cmp
mov
lea
rclb
cli
cltd
insl
and
jnp
int
pop
pop
mov
dec
shr
lods
test
sbb
add
add
jmp
loope
mov
sub
stc
pop
fstl
or
addr16
shll
fucomp
pop
jno
ljmp
pop
arpl
in
fisubs
mov
sbb
add
mov
roll
mov
mov
outsl
mov
pop
and
dec
ss
mov
cli
mov
jae
or
dec
push
push
push
mov
sbb
in
jp
fwait
inc
add
sub
mov
ljmp
push
mov
xor
push
jbe
imul
add
jmp
jl
movsb
cltd
mov
add
inc
mov
cwtl
sbb
int3
mov
mov
cmp
lea
std
bound
mov
jne
mov
jp
lds
gs
in
popf
jne
stc
pop
mov
movsb
add
int3
pop
mov
xor
scas
sahf
icebp
pop
repz
xchg
add
adcl
xchg
scas
add
dec
mov
or
neg
mov
pop
pushf
shrl
adc
arpl
xchg
bound
sbb
mov
or
stos
daa
aaa
fistpl
mov
pop
mov
mov
mov
cmp
jmp
jp
sbb
sbb
pop
fimull
mov
outsb
in
movsl
jbe
arpl
cld
add
pusha
jbe
bound
stos
das
das
sbbb
mov
dec
scas
outsl
cwtl
lds
and
cwtl
pop
subl
imul
push
sub
inc
flds
fistpl
jle
inc
imul
insb
jne
and
shrb
cs
adc
lods
cmp
push
std
adc
mov
xor
outsl
inc
aaa
aas
mov
pop
cmp
faddl
or
insl
lods
jg
out
shrb
push
mov
lcall
jg
test
sub
fisubrl
pop
loop
push
cmpl
lret
adc
cmp
lahf
add
out
cltd
mov
adc
or
pop
invd
or
sbb
dec
adc
adc
add
mov
push
push
es
add
mov
pop
call
or
jmp
mov
aad
jecxz
mov
xlat
add
clc
push
push
in
push
fidivl
cmp
pop
std
test
das
lods
out
mov
mov
mov
shrl
in
pushf
push
ret
jmp
ret
out
insl
rcrl
stos
ret
push
mov
popf
scas
pop
aaa
shr
addr16
xchg
je
xchg
lods
xor
lahf
rorb
jo
mov
sub
push
movsl
testb
push
push
push
repnz
push
mov
mov
std
cld
push
adc
nop
mov
popf
and
xchg
out
lds
or
testl
jle
lods
outsb
outsb
adc
sub
inc
jns
fldpi
sub
iret
ja
fsubl
out
sub
mov
or
sbb
sbb
adc
sub
cld
add
pop
or
mov
mov
xor
fs
ss
aas
push
cmpsl
pop
mov
push
cmp
sbb
lock
popf
xchg
mov
insb
test
cli
std
ja
enter
insl
rorb
sar
push
push
les
mov
std
sti
mov
jp
xor
sub
mov
cmc
fsubrl
aaa
fst
repz
sub
sti
sbb
unpckhps
push
je
rcrb
movsl
inc
je
jecxz
mov
jle
adc
mov
scas
cmp
scas
xor
sbbb
fdivrl
or
test
ret
movsl
push
cld
jge
int
jle
call
dec
dec
sub
and
fdivr
setae
out
fs
dec
pop
pushl
test
sbb
popf
test
mov
orl
into
xchg
and
sbb
inc
pop
jno
rcrl
dec
xchg
loop
insl
imul
leave
jecxz
and
dec
mov
inc
pop
jae
or
ret
outsl
ds
ret
enter
pop
xchg
jns
mov
xchg
mov
movsb
pop
xor
movsb
mov
lods
mov
lock
popf
cmp
xlat
movsl
call
cmp
repz
sbb
mov
push
mov
bound
mov
cmp
fnstenv
inc
push
ret
mov
push
push
push
scas
and
push
mov
sbb
mov
sbb
sbb
std
jl
imul
addr16
stos
jge,pt
sub
lock
nop
test
jne
push
jns
into
das
mov
sarl
sub
outsb
mov
ret
in
cmpsb
sbb
xchg
sbb
jge
push
mov
pop
mov
pop
push
inc
ret
and
sbb
pop
xchg
adc
popf
mov
and
sub
mov
stos
jmp
adc
push
jns
push
xor
and
mov
daa
xor
sahf
jo
iret
movsb
mov
pop
roll
jmp
dec
cmp
sbb
je
push
cmp
xor
test
testb
je
jmp
data16
xchg
mov
adcl
jb
inc
and
sub
sbb
cs
aas
fisubs
xor
addr16
fstl
mov
jns
lods
mov
jne
hlt
out
push
mov
inc
lcall
push
sub
pusha
xor
add
and
xchg
adc
lock
iret
cmpsb
hlt
ljmp
adc
jnp
icebp
mov
cmp
jnp
xchg
inc
add
push
mov
gs
ds
hlt
sub
mov
shll
sub
or
aas
gs
push
jmp
mov
cmpsl
mov
jne
mov
ss
push
dec
push
push
aad
jo
addr16
mov
lea
push
out
cld
add
shlb
fsub
into
in
daa
js
xchg
jl
leave
pop
and
imul
push
sbb
push
cmp
lds
sub
and
aad
stc
mov
dec
cld
dec
movsl
mov
fnsave
inc
sub
movb
cmp
aad
dec
pusha
inc
dec
sbbl
lcall
push
sti
push
pop
mov
cmp
dec
decb
dec
dec
push
nop
repz
icebp
mov
aas
jmp
mov
lcall
leave
inc
pop
sub
mov
pop
dec
inc
pop
movsb
out
dec
bound
push
aad
call
loope
pop
std
inc
inc
or
add
adc
shl
jecxz
call
dec
pop
and
call
rcrb
mov
mov
push
mov
int3
and
out
cmpsl
movsb
sub
cmp
pop
test
xor
and
leave
mov
test
add
xchg
mov
popf
mov
cmp
xchg
sbb
or
es
dec
fimuls
sti
daa
sbbb
test
or
inc
jnp
sbb
pop
pushf
inc
push
mov
sub
ss
call
jb
push
mov
jno
fldcw
hlt
pusha
push
mov
and
cwtl
add
in
ja
test
and
mov
enter
pop
jge
inc
lds
sub
loop
dec
jno
lds
cmp
mov
cmp
xlat
stos
push
movsb
sarl
and
cltd
inc
je
cmpl
adc
jb
fisubs
push
push
cld
sub
jae
roll
xlat
je
mov
in
dec
xchg
xchg
sbb
out
sbb
mov
test
xor
shlb
jmp
pop
pop
lea
xor
sbb
add
mov
das
movl
push
sti
repnz
imul
rclb
mov
xor
arpl
sub
fbstp
mov
mov
scas
dec
iret
std
jmp
aas
sbb
inc
cmp
ja
adc
out
sbb
inc
jnp
adc
mov
int3
inc
mov
mov
psubusw
mov
aaa
xchg
cmpb
jmp
stos
or
sub
lea
cmpsb
popf
lahf
xor
mov
pop
mov
fldpi
scas
popf
add
mov
movb
scas
sbb
out
hlt
dec
mov
jnp
imul
xor
and
inc
insl
xchg
call
adc
adc
dec
cmp
jmp
imul
je
repnz
pop
xchg
cmp
jo
fwait
call
ljmp
inc
adc
stos
sbb
popa
fisubrl
dec
or
jg
cmp
loope
unpcklps
dec
loope
cli
inc
push
xor
push
hlt
dec
xchg
std
jp
or
mov
push
pop
cmp
lock
jb
cld
mov
cmpsb
cld
loopne
push
xor
aad
out
imul
add
dec
lahf
ret
daa
scas
lcall
xor
arpl
add
std
ret
and
mov
pop
pop
push
iret
inc
sbb
xchg
rorb
out
out
or
in
and
jmp
fs
jns
xlat
out
add
and
mov
loop
rcrb
ss
sbb
stc
xor
cmp
jae
xchg
repz
inc
lods
dec
or
shl
xchg
xor
mov
das
dec
mov
ljmp
test
mov
dec
test
inc
pop
adc
das
jl
in
out
mov
mov
out
cltd
or
ds
mov
mov
fcmovb
pop
jge
sbb
adc
dec
test
dec
daa
mov
out
movsl
aam
mov
mov
push
mov
fcmove
xchg
aad
into
ret
or
jle
cmp
push
pop
cmpsb
sub
negl
or
add
daa
push
push
mov
ljmp
rorb
fdivl
push
repz
cmp
cmp
loop
pop
fldenv
frstor
inc
sub
pop
test
push
fcmovne
push
mov
inc
lret
pop
das
mov
and
imul
or
inc
push
inc
les
xchg
push
jecxz
adc
lods
lahf
xorl
cmc
fsubs
ret
push
gs
testl
or
in
mov
cwtl
or
aas
pmuludq
mov
inc
mov
divb
inc
dec
or
mov
out
aaa
aam
in
in
negb
scas
adc
jl
in
mov
or
push
sub
add
jnp
arpl
out
outsl
jbe
and
lock
test
movsb
push
lret
mov
mov
test
inc
incb
mov
mov
push
pusha
xchg
sbb
fisttpl
inc
bound
push
lcall
add
stos
sbb
cltd
mov
aam
mov
out
rclb
mov
jo
out
loop
pop
jns
ljmp
jns
rorb
cmp
cld
in
fwait
lds
xchg
enter
and
push
push
test
ja
dec
xor
ljmp
mov
dec
cli
les
jb
orb
ds
cmp
push
imul
popf
sub
lods
sub
jno
nop
incl
xchg
lret
jp
add
cmpb
dec
inc
mov
nop
enter
push
dec
push
cmpsl
fstl
pop
jo
xchg
outsl
mov
gs
std
and
push
adc
xlat
popa
call
xchg
cmp
aam
mov
cmp
scas
mov
add
insl
mov
nop
stc
push
lock
lods
xchg
push
push
mov
jno
insl
test
mov
pop
sub
lcall
call
mov
sub
pop
fstpt
or
sarb
xchg
out
inc
sub
adc
fists
xor
push
dec
mov
test
sub
pusha
fistpl
dec
xorb
pushf
dec
pop
push
push
leave
jbe
cs
cltd
icebp
pop
arpl
cmp
mov
jg
mov
fdivs
test
xchg
jae
movsl
out
cmp
cmp
out
loope
imul
shlb
jae
imul
insb
or
incb
push
xchg
repz
sbb
arpl
nop
cmp
and
loopne
hlt
int3
xlat
out
rcll
test
adc
stos
mov
std
movsl
jb
jmp
fsincos
dec
sbb
cwtl
cmp
and
push
mov
add
movsb
pusha
sub
xor
cld
fmuls
dec
push
imul
inc
fidivl
in
add
iret
cmp
jge
sbb
push
push
mov
push
inc
inc
ljmp
shl
fwait
gs
mov
dec
data16
int
aam
jo
dec
ds
cs
test
movsb
insb
mov
outsb
es
scas
aad
cmp
push
arpl
out
adc
xchg
jl
in
std
inc
xchg
push
aas
dec
cld
mov
out
orl
loop
pushf
mov
mov
xor
fs
sub
jp
inc
popf
jns
xor
sbb
adc
in
pop
jp
ret
mov
mov
xchg
dec
ja
add
aad
std
mov
xlat
fstl
das
add
sbb
out
mov
mov
add
test
adc
das
or
jge
dec
jne
imul
les
push
push
xchg
lods
mov
mov
cmc
push
ss
clc
pop
sbb
jp
pop
pop
cmp
push
xchg
fld
cld
sub
push
sub
test
mov
dec
mov
jae
lret
push
pop
push
jno
mov
or
sub
jmp
add
mov
js
cmp
mov
or
ds
ret
xchg
pusha
in
lea
stos
fmul
sub
test
xor
xchg
sub
pop
loopne
imul
imul
rcl
stc
fadds
out
pop
rcr
adcl
lcall
call
out
je
dec
dec
dec
lock
cmp
xchg
in
stc
push
leave
dec
loopne
inc
push
push
scas
sub
gs
xor
paddd
clc
adc
fstpt
push
jmp
and
ljmp
test
and
mov
pop
xor
aad
pop
rol
std
inc
add
mov
out
mov
fistpl
push
xor
adc
xchg
sbb
dec
sbb
cmp
and
nop
into
ljmp
addr16
mov
and
aad
fstpt
push
addr16
jl
sub
cmp
cwtl
push
ret
clc
mov
imul
push
jae
mov
pop
xor
jmp
outsb
sub
jp
scas
scas
fdiv
insl
dec
int
gs
mov
mov
data16
test
roll
lret
xchg
in
mov
sub
fildll
ss
rcrb
push
inc
outsb
inc
sbb
xchg
shll
dec
xor
push
cmpsb
cld
cmp
movsb
mov
xchg
sub
cmp
fwait
jmp
and
into
lret
pop
filds
cmpb
call
mov
subb
jle
pushf
hlt
pop
mov
scas
dec
addb
hlt
lret
and
dec
enter
inc
fisubs
andl
mov
and
and
cmpsb
movsb
sub
inc
test
lock
out
insl
outsl
stos
mov
or
test
pop
loopne
sub
lods
mov
test
out
jns
add
xchg
jo
ja
aaa
sub
xchg
sub
jp
ret
add
mov
loopne
les
fmuls
cltd
dec
inc
rolb
mov
aas
scas
iret
mov
jnp
pop
sub
in
and
mov
aaa
es
mov
cmp
add
push
or
push
jnp
adc
shll
inc
cld
rcll
pushf
dec
les
movsb
cmp
jge
test
xlat
sub
jl
mov
sbb
cmp
iret
pop
cmp
xor
push
cmp
popa
sti
cvtps2pd
ficoml
lcall
mov
cmp
ret
jns
cmp
inc
xchg
add
inc
imul
jns
push
xor
or
jge
push
mov
aam
repnz
hlt
push
jg
ficoml
push
cmp
xchg
mov
nop
popf
orl
stc
aad
xchg
icebp
pop
ret
jecxz
mov
stos
cmpsl
cmp
inc
mov
pop
jl,pt
fisubs
sbb
imul
xor
push
mov
clc
icebp
and
mov
sbb
cmpsb
pop
movsl
dec
mov
fsubrp
mov
pop
jne
ja
nop
scas
pop
xlat
out
inc
xchg
xchg
and
test
sbb
movl
lret
xchg
push
icebp
add
xchg
imul
mov
call
pop
inc
cwtl
pop
add
xchg
stos
cmpsb
inc
or
fs
repnz
rcll
cmp
test
mov
mov
jecxz
xchg
dec
imull
jge
cmp
mov
and
test
int3
jge
adc
out
movsb
hlt
mov
mov
add
cmp
dec
fisttpl
mov
add
hlt
lahf
mov
adc
rcll
xor
mov
into
scas
in
clc
repz
mov
pop
xchg
sahf
jp
inc
push
sub
in
and
pop
cwtl
xor
jmp
loopne
sbb
jp
jns
and
js
cmpsd
xor
popa
fmull
mov
insb
xlat
cld
imul
mov
bound
mov
adc
add
add
aad
add
out
rcrl
into
push
jae
sahf
xor
adc
in
data16
test
add
pop
sahf
int
mov
dec
arpl
push
sahf
sarl
into
jns
fwait
aas
fwait
sahf
test
fcom
les
jg
pop
rcrb
dec
inc
cmovnp
data16
out
mov
notl
gs
jae
xchg
adc
inc
sbb
jb
lods
jnp
pop
jo
mov
shlb
test
jecxz
xchg
loop
in
mov
and
xchg
mov
push
sarb
xchg
xor
icebp
scas
imul
fwait
in
movsl
mov
lods
jg
or
in
pop
aaa
adc
push
sub
aaa
pop
mov
daa
inc
mov
lea
lret
fcomip
aas
jns
std
or
mov
pop
xchg
arpl
sbb
cmp
outsb
jl
fwait
call
and
int
fldenv
or
pop
aad
cmpsl
call
or
fdivs
call
jmp
inc
cwtl
mov
jo
adc
or
mov
xor
mov
pop
xchg
jecxz
loope,pn
push
aaa
jne
repz
add
pop
push
mov
in
hlt
popf
sub
enter
mov
lret
jb
in
dec
mov
sahf
jnp
js
cmp
mov
mov
andb
jl
add
pop
mov
inc
movsb
loop
xchg
add
imul
notb
in
xchg
mov
outsb
aas
jb
shr
adc
and
inc
sbb
dec
xor
js
loopne
mov
sub
pop
mov
push
popa
sbb
add
or
arpl
cs
fnsave
push
push
pop
popf
pop
mov
add
jecxz
cli
in
and
into
mov
cmpl
sbb
fimull
or
xchg
pop
sahf
mov
pusha
js
sub
repz
test
mov
fmuls
dec
jg
movsl
jno
mov
in
sbb
in
adc
xchg
jae
sbb
push
imul
sbb
push
xor
add
jecxz
rcll
in
stos
inc
sbbl
jbe
lcall
or
sbb
pop
in
lock
mov
jb
xchg
cmpsb
test
push
pop
or
xchg
mov
clc
sbb
inc
ljmp
xchg
das
clc
or
sub
jae
adc
sti
and
shlb
push
xor
mov
int
cs
fnstcw
cmp
cltd
pusha
push
or
jbe
cmp
leave
cmp
stc
cltd
addl
push
outsl
dec
xor
fstpt
leave
jge
add
push
add
aam
orb
dec
pop
pop
inc
mov
jmp
dec
inc
adc
fdivr
mov
or
adcb
and
repz
ds
jecxz
rcrl
popf
repz
int3
fs
in
sub
inc
mov
hlt
add
ja
stos
jmp
js
cmpsb
bound
xchg
or
jnp
lock
cmpsl
pop
jmp
xchg
or
cmc
push
mov
test
sub
mov
sbb
jl
rcrl
out
add
pop
mov
ds
add
mov
ja
jne
add
out
dec
pop
xchg
jmp
call
enter
bswap
dec
fiaddl
and
lods
sbb
mov
pop
pop
jmp
repnz
jae
arpl
sbb
test
enter
loope
sub
sbb
data16
lahf
xchg
cmpsb
decb
mov
daa
cmc
subb
pop
stc
mov
add
cs
mov
loope
pop
xor
dec
jne
in
mov
add
call
xor
sub
iret
jne
or
fwait
bound
test
enter
xchg
adc
sti
push
push
frstor
test
std
jl
push
imul
insl
add
ja
inc
scas
xor
or
fildl
inc
sub
pushf
aad
adc
xor
sub
cwtl
xchg
int
in
inc
pop
mov
es
jp
mov
sub
dec
icebp
pop
adc
fs
pop
cld
inc
add
lret
xlat
loop
ficomps
cmp
jb
jbe
push
jle
mov
rcll
ja
jo
push
int
adc
cmpsl
fmuls
fisttpl
and
out
lds
jmp
rcrl
popa
ds
dec
fnstenv
pop
dec
xor
leave
adc
ljmp
pop
sarl
test
lods
xor
pop
repnz
mov
jge
arpl
mov
ss
dec
pop
or
sbb
ret
test
lcall
bound
xor
mov
fdivp
sub
cmp
mov
pushf
pusha
insl
negl
inc
pop
xchg
imulb
mov
test
xchg
mov
decl
fnsave
sarb
cmpsl
ficomps
fimull
mov
pop
dec
xchg
jge
dec
aaa
dec
cmp
imul
dec
int3
stos
push
add
icebp
sub
xchg
inc
or
fdivp
stc
xchg
mov
out
dec
das
dec
inc
int3
sbb
mov
add
orl
repz
push
popa
xor
xchg
jecxz
mull
cmp
mov
leave
mov
mov
xchg
jp
outsb
xor
aas
cmc
and
pop
mov
cs
xchg
jmp
sahf
mulb
add
push
sbb
mov
dec
adc
pushf
dec
add
fwait
dec
jp
ror
cmp
pop
fldt
xor
push
inc
pop
sub
sarb
daa
sbb
movsl
test
les
in
movsb
push
out
pop
xor
push
mov
insb
cmpsl
xor
test
rorl
jmp
xchg
xorl
sahf
in
add
sub
mov
cmp
std
jbe
cs
jp
inc
out
cmp
cs
loop
ret
int3
mov
int3
sbb
and
cmp
sub
mov
mov
out
aas
adc
lcall
fsubr
sub
test
mov
adc
aaa
addb
mov
in
dec
leave
divl
addb
icebp
out
xor
outsb
push
test
sub
push
sbb
or
out
push
out
jecxz
ss
sub
pop
sbb
cmp
jnp
adc
xor
or
dec
mov
js
xchg
sahf
mov
sarl
aad
and
bnd
lahf
push
stos
pop
push
pop
add
loopne
fldenv
movsl
cmp
sub
cmp
pop
push
sbb
xor
pop
add
aad
cmp
xor
pop
cmp
inc
xor
and
mov
sbb
inc
inc
outsl
lahf
out
xor
lret
cs
fisubrl
loope
adc
xor
xor
lods
fwait
lods
jae
data16
jo
cmp
mov
dec
cltd
shlb
nop
jns
cmpsl
inc
addr16
ja
jle
dec
lds
ljmp
sub
xchg
movsl
add
sub
dec
cmc
mov
popa
sarb
pop
call
sub
cmpb
cmpl
sub
pop
jecxz
pop
inc
test
test
sub
aad
dec
adc
push
pop
ret
pop
repz
push
test
jnp
ret
test
je
pop
fcoms
and
mov
subl
push
daa
push
xlat
into
icebp
lcall
pop
inc
jns
cld
push
and
mov
push
out
add
pop
inc
pop
fisubrs
mov
push
inc
fcomps
cltd
fs
sub
and
cli
jmp
arpl
pop
mov
dec
ret
pushf
push
in
mov
inc
fwait
mov
jl
cmp
lcall
add
repz
sbbl
test
inc
cwtl
xchg
cld
mov
test
shrb
faddl
movsl
push
xchg
outsl
adc
mov
add
mov
mov
mov
sub
lods
bound
pop
jg
fwait
por
nop
and
popf
jmp
cmp
sub
ds
jns
sbb
dec
push
nop
push
jge
pop
jmp
sub
push
mov
mov
in
aam
inc
fwait
mov
mov
jg
jae
inc
adc
push
lea
int3
adc
dec
rorb
jne
fisubl
popa
movsl
adc
cwtl
bound
je
mov
jo
sbb
dec
addl
clc
push
mov
xchg
mov
cltd
adc
add
xor
outsl
lock
sub
test
fnstenv
pushf
jle
adc
shll
rcrl
sub
lahf
mov
mov
pop
out
in
lcall
pusha
pushf
mov
mov
dec
mov
jge
enter
jb
call
and
insl
test
jbe
push
push
ficompl
pop
dec
push
loopne
adcl
addl
or
mov
adc
mov
add
pushf
std
and
in
or
mov
push
push
dec
xor
adc
push
loope
and
add
rorb
mov
push
and
sub
and
sub
adc
pop
push
jb
test
cmp
xchg
or
cmp
mov
shll
xor
adc
mov
xchg
repz
cmp
outsb
and
and
adc
mov
dec
lock
xor
dec
fists
push
lret
jae
adc
inc
push
jnp
xor
pop
mov
in
pop
lods
inc
addb
pavgb
stc
xlat
test
mov
lods
sub
or
inc
or
rcl
dec
jae
rorb
cmp
push
cmpsl
lods
cmpsb
es
sub
mov
cld
sbb
andb
mov
mov
cwtl
movsb
and
jb
jl
mov
jge
sbb
push
push
movsl
daa
iret
lret
xor
xchg
or
xor
mov
in
jne
pop
jmp
fisttpll
mov
mov
xor
aas
lock
das
mov
add
sub
inc
jmp
inc
inc
add
mov
push
jno
sbb
mov
in
or
insb
lods
xlat
adc
push
inc
mov
imul
push
push
or
inc
test
push
sti
loopne
lret
inc
iret
call
cmp
lods
into
push
or
lods
lock
adc
xor
fistpll
movsl
cmpsl
mov
mov
mov
jae
push
inc
jne
pusha
int
xchg
push
pop
mov
in
xor
stos
lods
outsb
data16
leave
cmc
pop
xor
cmp
mov
xchg
inc
inc
xchg
out
jmp
rcrb
iret
xchg
daa
iret
stos
push
clc
rclb
aas
idivb
arpl
jne
add
cwtl
inc
cli
rclb
cmp
aad
push
shlb
gs
into
lods
test
and
movsl
jp
dec
jbe
into
test
add
pushf
shll
aas
cmp
subb
and
dec
cmpsl
dec
xchg
mov
lods
aam
jns
scas
das
outsb
insl
jb
sub
out
movsl
daa
mov
outsb
repz
and
mov
mov
rclb
or
es
cli
pop
xchg
xor
aaa
idivb
sbb
test
clc
jb
test
loope
and
int
inc
pusha
dec
xor
lds
ret
add
fucomp
sub
test
cmpsb
xchg
or
jge
sbb
mov
mov
stos
push
fstpt
fcmovnbe
dec
mov
lods
mov
es
lahf
push
add
adc
loopne
sbb
pop
in
pop
pop
pop
sub
push
enter
sbb
xchg
roll
xor
inc
push
adc
jle
mov
fnstcw
sub
sahf
mul
push
dec
shll
fwait
sub
loop
stos
fisttpl
xor
mov
icebp
lahf
movsb
mov
out
jne
into
call
or
aam
and
dec
sub
hlt
sbb
mov
cmpsb
sub
sub
sub
and
mov
or
jl
lds
and
inc
or
movsl
lds
dec
stc
frndint
xchg
sub
sbb
sti
xchg
mov
xchg
into
xchg
mov
ret
or
inc
jnp
or
es
lea
pop
rcr
mov
xor
inc
pusha
dec
movsl
dec
pop
xchg
hlt
pop
or
cmp
out
push
cmp
std
test
dec
cwtl
jns
xor
mov
lods
je
xchg
push
jnp
test
xchg
loop
stc
jno
shl
outsl
ror
push
iret
pop
js
or
or
xchg
cmp
push
jge
shl
or
mov
cmp
gs
pop
sub
arpl
adc
ret
or
inc
dec
int3
loop
lea
mov
mov
fs
mov
aaa
lret
fiaddl
xor
add
mov
imul
xor
mov
enter
and
cmp
mov
addr16
pop
adc
out
shlb
stos
mov
push
or
fs
ljmp
cmc
xchg
ret
pusha
add
fistl
pushf
xchg
or
jbe
push
push
adc
and
adc
adc
fmull
loop
pop
pop
mov
out
cmc
fcoml
addr16
jo
push
and
sbb
lahf
popf
mov
sub
xchg
mov
jb
inc
sub
and
xchg
xchg
push
pop
fs
sar
pop
adc
xchg
jns
mov
aam
enter
sbb
lret
xor
push
sbb
sub
int3
jmp
mov
jmp
cli
ljmp
scas
push
lods
xchg
jmp
mull
dec
xor
jecxz
icebp
jecxz
js
adc
pop
leave
mov
jecxz
ror
pop
call
movsl
fsubrs
xor
jmp
leave
fildl
test
andl
push
das
in
mov
lret
jle
clc
in
jg
push
loopne
bound
test
cltd
ljmp
add
sbb
notl
fs
sbb
or
inc
test
mov
xchg
add
daa
hlt
mov
xchg
dec
adc
or
imul
movsb
jne
pushf
sub
std
imull
in
jae
cmc
repz
scas
lea
push
mov
dec
imul
mov
xchg
call
pushf
cmp
xor
mov
enter
hlt
lahf
xor
mov
and
dec
aaa
int3
mov
mov
push
cmp
sbb
shrl
mov
dec
adc
add
mov
mov
shl
mov
shll
xchg
fcomip
mul
push
or
mov
sbb
cld
clc
ss
xor
and
xor
inc
fwait
insl
data16
xchg
or
cmp
scas
pop
fisubrs
or
and
je
lea
daa
mov
into
nop
flds
xor
loopne
sarl
and
stos
in
out
hlt
stos
jae
mov
shl
jns
and
fdivr
cmp
dec
add
jno
or
inc
and
int3
cmp
call
xchg
dec
out
mov
nop
dec
addb
adc
ret
test
jo
arpl
inc
xchg
int
dec
cmc
inc
xchg
pop
xor
lahf
push
rcrb
xchg
mov
fs
out
adc
inc
or
dec
clc
xchg
repz
int
xchg
icebp
js
jns
inc
push
mov
adc
outsl
addr16
sbb
lahf
ja
adc
push
sbb
std
mov
mov
loopne
cmp
sbb
mov
sbb
fadds
cmp
jae
je
sub
xchg
icebp
shl
add
or
pop
cmp
data16
nop
inc
jge
shll
mov
inc
rol
pop
pop
mov
test
pusha
xchg
ret
aas
cmp
xlat
test
sub
xor
sub
jle
jg
stos
mov
repnz
pop
pop
push
rdmsr
pop
mov
ljmp
xchg
adc
frndint
sub
stos
imul
pop
cmp
mov
aas
mov
push
and
or
out
inc
fwait
test
movsb
pusha
adc
mov
cmp
xor
jb
mov
adc
push
xorl
iret
cmpsb
xchg
sub
hlt
cmp
and
push
data16
cmc
inc
not
inc
adc
int3
rorl
fldl
xor
mov
loop
stos
xor
hlt
jecxz
int3
pop
jae
mov
sub
imul
xorb
adcl
push
ja
sub
fadds
test
mov
xor
imul
sbb
or
cmp
std
sub
sbb
pop
pop
cmpsl
loop
and
stos
std
pop
push
inc
frstor
pop
repnz
push
clc
xchg
lret
push
inc
in
aas
mov
pop
inc
push
lods
jle
sti
and
insl
lds
add
aaa
or
inc
cmp
push
adc
mov
sahf
pop
xor
dec
js
je
and
imul
mov
jb
iret
lock
mov
add
sbb
aam
fisubrs
ror
int3
and
roll
shll
int
mov
and
sub
adc
jb
adc
stos
mov
aam
jnp
dec
xchg
lcall
movsb
int3
mov
sti
xor
push
or
sub
ja
mov
mov
cmp
imul
or
dec
bound
insl
xchg
jp
dec
fcmovnb
lahf
or
loopne
sbb
inc
or
pusha
lods
push
into
and
cli
in
mov
mov
hlt
jmp
jae
mov
jg
or
sub
lahf
sub
cmc
adc
sbb
cmp
adc
xor
push
andb
movsl
xlat
test
mov
insb
in
lock
or
and
shr
pop
jno
push
xchg
cs
movsb
scas
mov
pop
fmuls
sbb
imul
popa
sbb
pop
je
jge
rorb
rcrb
cmpb
sub
lret
ljmp
in
xor
mov
jp
mov
aad
stos
mov
dec
sbb
push
scas
movsl
shr
push
mov
adc
gs
push
daa
cmpsl
jge
dec
sub
movsl
out
jp
fisttpl
push
inc
pop
jae
push
jo,pt
nop
in
jp
aaa
aas
push
insl
mov
lds
arpl
adc
std
int3
lret
ljmp
pop
imul
jo
mov
dec
shll
xchg
enter
outsl
inc
mov
roll
cwtl
rclb
cltd
lds
sub
into
fstpl
xchg
out
js
and
lods
mov
fmul
repz
xchg
mul
lods
jp
cmp
inc
xlat
mov
lret
add
int
lods
por
les
notl
jg
daa
in
mov
outsb
jns
xchg
sbb
scas
or
pushf
loop
cmpsb
push
mov
push
std
mov
mov
sbb
cmp
add
inc
and
xchg
xchg
lds
in
jg
xchg
xor
xchg
and
pop
js
fsts
mov
push
jne
bound
jo
xor
push
or
cmp
mov
mov
in
aad
mov
inc
xchg
lea
jmp
add
sub
in
jno
inc
pop
mov
add
inc
imulb
cld
repnz
xor
pop
cmpsb
push
push
sbb
sub
mov
aam
xorl
jle
scas
cltd
popf
push
or
adc
jp
mov
mov
cwtl
std
daa
aam
adc
xor
xchg
dec
xor
push
mov
pop
xchg
ljmp
ja
mov
int
cmp
bound
les
cltd
mov
stc
lret
repnz
pop
outsl
sbb
pusha
push
nop
jle
xor
mov
lcall
loop
add
pop
jnp
fs
push
stos
mov
mov
movsl
lret
stc
fstpt
jns
orb
pop
jl
sub
jae
or
push
lds
lods
out
jns
xor
mov
stc
add
adc
pop
fwait
sti
stc
adc
outsb
cmp
lods
sbb
jmp
cltd
jno
sbb
jns
stos
sarb
in
adc
orl
div
pop
insb
jb
mov
movsl
daa
pop
sarl
and
xor
add
cwtl
in
pop
mov
cmp
shll
cmp
push
imull
iret
mov
mov
fldcw
sbb
test
xor
jle
testl
cld
jae
in
rclb
sbb
xor
test
aas
popa
dec
add
das
or
add
repz
fisttpll
inc
lahf
inc
in
cwtl
movsb
or
jg
mov
js
push
ja
mov
dec
pop
jp
movsb
jl
repnz
rolb
push
insl
adc
xchg
mov
add
int3
mov
fsubl
xor
shl
cmp
pusha
fwait
jne
arpl
mov
sub
in
mov
xchg
pop
imul
push
push
lcall
lcall
pop
push
decb
adc
jle
fadd
repnz
mov
mov
imul
cli
pop
mov
ret
cmpsl
std
sbbb
inc
fisubrs
inc
pop
mov
sbb
inc
leave
inc
xor
or
ss
dec
cmpsl
mov
lret
sub
cs
sbb
sbb
in
ljmp
aad
aaa
ficoms
pop
das
pop
adc
fmull
mov
or
mov
sbb
ret
pop
das
movsb
mov
push
jnp
stc
lods
in
inc
fs
xchg
or
insl
lock
or
xor
cmc
lahf
sub
nop
jge
mov
sti
pop
mov
sub
sbb
cmp
xor
sbb
mov
mov
out
push
loope
push
or
sbb
push
popa
cmp
fldl
in
lahf
sub
call
fs
push
das
lret
jns
mov
arpl
xchg
pop
adc
push
dec
les
cltd
shll
les
xorl
mov
cmp
iret
pop
ret
pushf
sub
push
in
inc
out
scas
stos
lea
xchg
sub
pop
mov
fmuls
xchg
ja
or
and
out
jp
pop
cmp
dec
fnstcw
imul
inc
sub
xchg
pop
popa
mov
loop
fcomps
fistl
loopne
pop
movsb
mov
mov
push
loope
xor
dec
daa
rolb
adc
hlt
mov
nop
sub
mov
inc
push
sbb
jp
decl
addr16
dec
cltd
test
and
mov
enter
dec
inc
xor
lods
and
test
lret
test
inc
sahf
add
dec
mov
cmpsl
pop
push
mov
outsl
cmp
repnz
xlat
xor
cmc
arpl
jge
pop
inc
out
test
mov
pushf
mov
sar
cmpsl
jb
cmp
adc
sbb
gs
push
dec
fs
decb
add
fdivrl
jb
xchg
icebp
inc
jns
scas
push
test
adc
add
sub
jne
jo
sbb
inc
xor
mov
mov
hlt
jo
pop
test
mov
loopne
push
adc
mov
ret
xchg
add
push
pop
divb
jne
mov
push
sub
in
sub
sub
cmp
icebp
cmp
fmulp
je
xor
pop
lods
cmpsb
movl
cmp
outsb
mov
sbb
push
lret
into
add
cltd
mov
mov
jg
in
test
fistpl
cmp
sbb
jle
xchg
or
cs
stos
xchg
adc
jae
or
lret
sub
jmpw
cmp
sub
add
pop
ljmp
and
sbb
out
mul
jo
or
sbb
push
into
repz
lds
iret
xor
loope
andb
jno
sbb
mov
icebp
insb
adc
fdivp
fstl
sarb
leave
or
adc
filds
je
sub
sub
popf
in
and
outsb
std
pop
inc
aaa
push
loop
mov
out
bound
dec
sub
cmc
shrl
xor
insl
jnp
arpl
sbb
jge
mov
rclb
insb
mov
lcall
jo
clc
scas
popf
or
loop
pusha
js
mov
add
pop
cmp
lods
mov
sbb
mov
xor
mov
popa
mov
mov
and
vpavgw
sub
repnz
out
shl
cmc
cmpsb
cmc
idivl
jns
aam
shl
cmc
ss
or
sbb
add
sbb
sahf
xchg
push
jae
cli
or
out
xor
addb
daa
inc
xchg
enter
jns
bound
push
or
inc
cwtl
and
stos
add
xchg
movsl
jg
outsb
add
cmp
xchg
test
pop
lret
fcoml
inc
mov
fisttpl
pop
pop
mov
cmp
mov
mov
imul
mov
rorb
popa
inc
adc
insl
jge
nop
insl
fdivrl
ljmp
inc
add
jl
cmp
test
jl
mov
xor
pop
cltd
add
xor
pusha
add
push
test
mov
push
pop
jl
push
fmul
and
sub
inc
cmpsb
mov
hlt
lea
mov
pop
adc
insb
in
push
xchg
repnz
pop
out
jmp
mov
or
outsb
aad
adc
ret
pop
pop
sbb
mov
stos
inc
jb
mov
push
fcoml
fwait
add
push
or
fbld
icebp
ljmp
lret
fdivrs
inc
pop
jb
cmpsb
mov
xchg
jmp
cmp
das
or
outsl
ret
push
jmp
jle
jmp
loop
mov
xchg
mov
mov
mov
add
or
ret
jmp
pop
repnz
ret
xchg
jge
mov
push
test
stc
jno
cmp
adc
push
mov
mov
cmp
and
jg
fwait
xchg
pop
xchg
sbb
push
testl
sbb
test
or
or
mov
jmp
pop
dec
lods
cmp
dec
fucomip
leave
or
test
ja
ss
pop
or
shr
push
xchg
mov
test
shlb
enter
mov
mov
add
jb
jmp
add
lahf
rclb
sbb
sub
jp
push
addr16
push
inc
out
xchg
xchg
into
mov
sahf
add
iret
iret
dec
repnz
jmp
mov
insb
dec
and
dec
lcall
movsl
mov
xlat
fildll
jecxz
sbb
or
xor
mov
in
lret
mov
imul
pusha
and
int3
pushf
movsl
dec
lcall
out
push
mov
jb
xor
ret
push
jne
adc
push
xor
pop
xor
dec
mov
mov
mov
xor
mov
popl
sbb
lods
fnstcw
jne
ljmp
cmp
and
pop
adc
dec
nop
lock
das
inc
subb
jb
fdivs
push
repz
call
pop
jmp
or
clc
pop
jg
mov
hlt
enter
xor
inc
cmp
cmp
cs
in
inc
aaa
pop
leave
inc
neg
repz
sbb
sub
cmpsb
mov
cmp
insl
cmp
loop
in
cmp
add
pop
jns
sbb
imulb
xor
lods
ror
pop
mov
sbb
rcrl
popf
dec
and
cmpsb
mov
xlat
cmp
push
sbb
lahf
int
push
mov
ds
filds
inc
sbb
dec
rcl
lods
push
daa
sbb
fcoms
out
adc
ljmp
cmp
test
mov
sub
sub
add
adc
sbb
pop
cmp
js
pop
mov
mov
mov
adc
imul
cmp
mov
shrl
cltd
dec
pop
in
add
test
out
sub
cmpl
jle
lock
loope
in
ss
mov
and
mov
cs
idivl
pusha
rclb
lods
cmp
int
negl
mov
mov
lods
imul
ds
pop
push
int3
mov
pop
pusha
shl
and
add
mov
mov
xchg
lods
or
mov
call
inc
adc
das
add
sub
dec
mov
sub
xchg
flds
and
aam
lret
das
push
and
jecxz
aas
cs
lock
outsb
in
lods
notb
mov
pop
jg
pop
jp
repnz
cmp
push
mov
jb
iret
fwait
jge
data16
fstpt
inc
cmp
xor
out
jg
test
xor
mov
loopne
aad
pop
mov
push
sub
add
in
mov
xor
rolb
mov
pop
icebp
push
gs
sub
mov
xchg
or
call
jnp
mov
jbe
xchg
ja
ss
std
pop
orb
int3
push
clc
mov
lcall
enter
call
sahf
xchg
popa
or
mov
addl
sti
add
cld
and
cmpsl
inc
pop
cmc
push
push
xchg
cmp
stos
stos
dec
js
repnz
mov
clc
jmp
in
mov
es
cmp
lcall
mov
arpl
or
push
aad
ret
in
in
lods
xchg
inc
fmul
xchg
inc
ljmp
and
mov
inc
leave
mov
push
jge
mov
outsl
int
lahf
mov
cmpl
es
adcl
cmp
mov
mov
cmp
mov
mov
add
or
mov
mov
mov
test
cmp
mov
fcom
sbb
fadds
jno
cmpsb
sub
xchg
js
rorl
stc
rclb
arpl
mov
hlt
mov
je
jns
loope
daa
or
pop
testl
test
xchg
movsb
push
xchg
jno
test
push
push
xchg
cmp
cmpsb
inc
xor
mov
xor
loopne
vshufps
xorl
roll
jle
xorl
adc
and
pop
adc
pushf
pop
in
xchg
scas
lea
outsl
and
inc
inc
push
pushf
add
mov
push
dec
js
and
sbb
sbb
mov
lea
pop
adc
pop
das
xor
iret
push
shll
insb
inc
xor
sub
dec
pop
fmul
cmc
jae
adcb
pop
xchg
sbb
cli
out
xchg
fwait
dec
pop
adc
in
mov
imul
xor
cmc
cmpsl
out
mov
sbb
je
fadds
sub
test
lret
mov
dec
out
push
push
pop
xchg
movsb
dec
hlt
cmp
lahf
ljmp
popa
fists
or
incl
nop
and
push
inc
sub
jmp
adc
add
adc
out
or
push
shlb
aas
pop
dec
jge
notb
dec
and
jp
ja
adcl
lock
sbb
mov
adc
cmp
mov
xor
lock
push
mov
cli
mov
pop
push
mov
add
push
aam
leave
das
sbb
rcr
insl
jle
sbb
nop
pop
dec
xor
lcall
xchg
mov
dec
push
out
cmpsl
dec
nop
adc
test
xchg
inc
ficomps
push
sarb
push
sbb
sbb
pop
mov
mov
in
lods
pop
sub
sub
dec
fcomps
std
cmpsl
sub
sub
push
ja
xchg
adc
jle
cmp
pop
push
jle
scas
scas
stc
sub
popf
das
cmpsl
and
jne
out
arpl
fstps
push
and
gs
iret
pop
push
imul
daa
popa
pop
aaa
xlat
xor
inc
jle
pop
push
test
mov
shl
and
test
sub
push
lods
mov
cmp
mov
jb
daa
adc
in
pop
pop
cmpsb
inc
scas
cmpsl
or
jno
and
imul
ljmp
push
mov
or
es
dec
and
push
push
aad
or
cmp
pusha
push
leave
inc
xor
dec
jnp
fwait
add
dec
std
jb
scas
addr16
mov
jb
add
inc
cmpsb
jmp
hlt
es
xor
lahf
fcom
adc
les
xchg
repz
sub
mov
mov
out
data16
sub
fs
mov
sbb
add
add
jp
test
dec
test
xchg
jg
fmulp
add
jno
in
jae
ljmp
mov
sahf
outsl
test
out
xchg
mov
stos
in
sbb
dec
cltd
xchg
dec
incl
arpl
pop
arpl
cmp
mov
cmp
lock
sbb
mov
pop
loope
sahf
dec
cmp
je
lods
addr16
cmp
and
fbld
mov
mov
jnp
xchg
imul
je
repz
sbb
mov
test
inc
inc
ja
fistpl
pop
mov
mov
push
fidivrl
cmp
outsb
sbb
cld
inc
scas
pop
sub
or
pop
or
sub
popf
adc
pushf
mov
dec
or
lods
mov
std
dec
fisubrl
ss
arpl
mov
mov
pop
jne
outsl
incb
or
rorb
mov
adc
popa
lods
shl
mov
orl
xor
unpckhps
mov
mov
jmp
fnstsw
repnz
in
lret
mov
dec
pop
xchg
cmp
fcmovnb
out
divb
mov
add
popf
pop
add
inc
mov
xchg
mov
ss
jno
push
sbb
movsb
xchg
and
jl
xchg
cmp
jo
jo
clc
jg,pn
push
xor
xchg
out
mov
shr
and
icebp
inc
aas
bound
pushf
and
js
int
push
pop
adc
mov
pusha
add
inc
cmpsl
ret
mov
sbb
add
and
dec
inc
fstps
cltd
push
test
jo
popf
or
dec
push
inc
int3
pop
mov
dec
test
pop
mov
icebp
sub
mov
insb
mov
or
mov
daa
cwtl
sbb
gs
or
cld
aam
push
mov
fs
shl
stos
rcrb
mov
pushf
adc
popa
pop
adc
mulb
jge
jmp
mov
sarb
prefetchnta
fcompl
push
xchg
inc
jmp
push
add
or
adc
dec
ret
cli
pop
pop
stos
push
sbb
leave
ja
push
jmp
les
or
testb
das
push
cmp
lods
push
mov
xlat
cmp
cmpsb
sub
fwait
icebp
inc
mov
dec
rcr
int
data16
mov
aaa
push
add
mov
into
mov
sub
in
dec
inc
pushf
xchg
ja
pop
out
pop
or
fsts
cmpsb
stos
ret
mov
lods
mov
push
and
fsubr
mov
push
rcrl
lock
and
test
inc
std
scas
cld
or
test
and
imull
sbb
ret
mov
lock
fs
inc
std
cmp
inc
fcomps
mov
aaa
testb
mov
enter
cmp
and
dec
pop
push
dec
fs
xor
xchg
fnsave
addr16
pop
xor
cmpsb
jne
pop
or
iret
sub
xor
adc
pop
sub
mov
iret
dec
test
outsb
cli
call
jge
xchg
xchg
shrl
in
and
adc
popf
cltd
cmp
mov
cwtl
addr16
and
aad
ficomps
cwtl
cltd
adc
pop
inc
loope
xor
xchg
jns
out
shl
inc
mov
je
mov
lods
mov
push
jmp
mov
jg
fdivrl
imul
jmp
repz
sbb
sbb
jae
mov
cld
int3
leave
dec
pop
out
sbb
call
test
in
rol
fdivs
sbb
xchg
or
fucomi
cmc
jne
test
int3
push
mov
imul
pusha
js
sub
je
xor
or
xchg
push
push
in
or
mov
push
mov
and
je
adc
fisubrs
sub
xor
sub
movsb
sub
push
xchg
jb
fisubl
lcall
jp
inc
pop
out
lds
push
xlat
aam
xlat
fmuls
or
xor
jp
or
es
mov
mov
mulb
imul
xor
ret
pop
sti
ljmp
in
fiaddl
sbb
xor
in
shll
inc
sub
mov
repz
push
mov
dec
jnp
add
test
shrl
outsb
sbb
push
push
sbb
cmp
or
dec
gs
movsb
and
testb
mov
imul
dec
std
fwait
lret
movd
inc
cmp
in
sub
lahf
pusha
jle
aaa
ret
pop
out
stos
ret
cltd
shl
dec
outsl
clc
jl
lahf
shll
inc
inc
sti
push
inc
loop
rclb
xor
stc
outsb
dec
bound
jb
push
jle
mov
push
pop
inc
int3
lods
or
mov
jo
jae
push
push
imul
jle
inc
lds
scas
rclb
push
loopne
and
inc
leave
pop
enter
shr
nop
xchg
aaa
sbb
fsubrs
fstpt
aad
sub
std
sub
xchg
fwait
and
and
sbb
dec
mov
cmp
out
push
and
das
jl
int3
out
inc
lcall
dec
xchg
mov
popf
or
ret
mov
outsl
pop
mov
and
cmp
jae
push
push
mov
movsl
cli
sahf
add
cmp
mov
aad
jbe
push
xchg
cmp
mov
loope
sbb
enter
jecxz
iret
jecxz
jbe
icebp
fbstp
dec
xchg
pop
fdivl
jmp
or
mov
ficomps
stc
call
pop
sub
inc
xchg
jle
iret
mov
lea
fldcw
lods
pop
sbb
pop
lods
sbb
xor
pop
jge
pop
in
lret
cvtpi2ps
cmp
pop
push
enter
jmp
push
or
out
sub
fnstsw
repnz
jl
pop
rorb
xor
into
dec
xchg
outsb
ret
push
outsb
iret
daa
jp
out
out
aaa
mov
repz
fistps
jl
and
test
sub
sub
pusha
mov
ror
add
pop
mov
jecxz
mov
sarb
inc
hlt
rcll
cmp
outsb
cwtl
mov
pop
aas
into
xor
cmpsl
leave
test
dec
scas
jmp
mov
mov
or
lret
xor
pop
mov
into
lock
push
push
pop
sub
mov
mov
push
cmp
sbb
pop
ja
xchg
lods
sub
js
icebp
sbb
xchg
or
pop
sbb
scas
sahf
jmp
jmp
cmp
es
mov
adc
insl
daa
push
jns
sti
pop
addl
inc
push
xlat
adc
jno
xchg
sub
movsl
decb
int3
clc
jmp
int
pop
xchg
std
add
loopne
aam
pop
in
imul
cmpsb
scas
scas
test
subb
push
sub
mov
scas
adc
cmpb
push
gs
inc
add
adc
loope
xchg
sub
xor
mov
adc
jecxz
dec
int
pop
and
jae
ljmp
cmp
mov
loope
lahf
lock
psllq
jle
cmp
shlb
lds
add
out
aaa
pop
lahf
ds
xchg
sbb
lods
fdiv
pop
inc
xor
cmp
loopne
push
xor
cmp
ud2
jbe
xor
adc
sbb
outsl
sub
call
push
stc
call
insl
imul
adc
aad
xchg
mov
jne
inc
dec
add
sti
leave
xcrypt-cbc
cmpsl
push
dec
push
mov
mov
sti
inc
xchg
insl
cmp
and
xchg
push
sub
xchg
cmp
movsb
cld
mov
push
outsl
scas
lret
mov
mov
push
test
mov
and
jb
jge
cmpsb
sbb
out
decl
fldl
push
daa
lock
jne
cld
push
int
popf
push
xlat
lea
outsb
fdivl
aas
mov
xchg
jp
dec
push
xor
cmp
lret
pop
shll
sub
lea
popf
dec
push
sbb
sbb
and
mov
arpl
inc
ja
jb
ljmp
dec
cltd
dec
pop
out
jbe
int
dec
adc
xchg
icebp
adc
dec
dec
mov
negl
aad
shll
cvtps2pi
sbb
test
rorl
icebp
into
mov
inc
and
or
ljmp
fdivr
lcall
mov
add
mov
std
add
inc
add
xchg
aaa
lret
leave
pop
test
xchg
hlt
out
mov
movl
push
stos
mov
mov
push
xor
push
jne
scas
sub
test
push
je
cli
int3
es
and
sub
xorb
push
stos
ret
pop
adc
pop
xchg
loope
mov
inc
repz
jp
imul
mov
fwait
cli
add
das
adc
imul
mov
daa
shrb
push
cmpsb
dec
test
std
mov
sub
xchg
mov
sbb
pop
mov
mov
clc
out
xchg
out
in
mov
lea
int3
clc
add
push
ja
xchg
ljmp
pop
cwtl
adc
or
outsl
inc
sbb
push
addr16
lods
popf
lret
mov
fldcw
xor
pop
shl
cmp
push
mov
or
xor
lea
repnz
jnp
or
outsl
xlat
leave
mov
scas
inc
fldt
sbb
pop
push
and
repz
push
repz
stos
in
cmpsl
js
inc
sahf
sbb
cmpsl
adc
or
ret
in
or
add
lahf
mov
mov
stos
in
mov
push
pushf
push
outsl
dec
mov
std
jp
adc
cli
test
call
push
xchg
mov
cli
pop
leave
aam
mov
inc
cmp
out
jl
sti
das
cltd
sbb
leave
leave
sahf
incl
dec
sub
fidivrs
add
dec
sbb
dec
ja
sti
sub
mov
or
and
stos
icebp
jmp
push
sub
pushf
loopne
mov
inc
jle
std
mov
mov
pop
jmp
jmp
pop
sti
jno
mov
dec
jne
outsl
out
ds
or
stc
in
xor
movsl
mov
cmpsb
es
es
push
daa
jmp
push
mov
mov
xchg
jo
adc
mov
mov
cmc
aas
sarl
addb
sub
push
jmp
jb
mov
mov
add
dec
shlb
fistpll
sub
dec
imul
or
xchg
aas
add
test
mov
jge
ds
dec
jae
mov
lcall
lcall
dec
jne
xor
jbe
fldl
fiaddl
out
test
adc
mov
cmpsl
movsl
pop
jno
xchg
cmc
push
mov
pop
fimull
out
xchg
fwait
scas
into
in
or
inc
sahf
push
and
pop
cmpsl
add
pop
in
or
pop
fildll
hlt
incb
dec
lds
and
fisubrs
push
pop
pusha
mov
sti
ss
dec
in
sahf
js
popf
inc
bound
je
mov
add
clc
das
inc
pop
adc
jp
ljmp
aaa
mov
jno
popa
mov
pop
int
call
pop
dec
xor
mov
out
adc
hlt
imul
setb
inc
inc
dec
je
cmpb
mov
mov
lea
sbb
xchg
je
add
out
dec
pop
pop
movsb
mov
push
imul
or
xchg
jne
inc
add
testl
jmp
popf
out
xor
inc
and
sub
fdivl
stc
xor
hlt
push
mov
lods
imul
cmp
nop
jmp
insb
lret
or
sahf
xor
mov
xchg
push
lret
addr16
push
icebp
and
pop
push
pop
rolb
mov
popf
int
and
lcall
fwait
adc
sub
bound
fdivl
add
sbb
mov
hlt
pop
or
jge
mov
mov
pop
mov
out
and
sbb
mov
fwait
xchg
sub
xor
into
loop
xchg
xor
stc
imul
cmp
xor
call
jne
add
out
mov
sbb
mov
lahf
push
out
lret
pusha
sbb
mov
adcl
idiv
insb
js
dec
xlat
pop
cltd
lret
fisttps
fadd
add
int
gs
out
sbb
pop
sub
mov
xchg
xchg
das
pop
push
mov
inc
sbb
jecxz
mov
pop
adc
sahf
push
sub
aam
or
idiv
jo
fistl
test
sar
jmp
jge
lea
out
mov
fbld
in
jmp
pop
jo
cli
and
add
or
test
dec
adc
mov
push
cmp
cmp
movsb
xchg
decl
and
fists
or
cli
leave
incl
jecxz
jb
jo
into
adc
divb
in
adc
outsb
mov
xchg
repnz
pop
sbb
mov
pop
dec
frstor
lcall
push
das
push
and
xchg
mov
mov
addr16
aas
mov
cwtl
sub
mov
dec
xor
test
push
push
ror
jge
push
xchg
or
inc
shll
mov
fbld
cmc
in
sbb
daa
outsb
movsl
or
xor
test
or
cmpsb
insl
mov
mov
jno
add
orb
shlb
pop
xchg
sti
mov
icebp
insl
movsb
mov
or
cmc
mov
mov
adc
loop
enter
ss
mov
add
icebp
imul
std
xor
cli
mov
jp
lods
rcr
aam
out
mov
inc
fsubr
ret
leave
cld
mov
in
lahf
sbbl
data16
mov
adc
dec
int
or
adc
inc
inc
int
add
pop
or
shll
in
and
je
add
sbb
mov
dec
inc
ret
clc
sub
fucom
xor
loop
ljmp
inc
movsl
ret
add
adc
in
inc
mov
pop
mov
aam
jb
dec
testb
int3
pop
jae
xlat
pop
mov
mov
dec
dec
pop
jecxz
out
gs
add
rolb
aad
sarb
sbb
jne
nop
movsb
sbb
mov
js
push
leave
sbb
mov
int3
jg
mov
push
lret
adc
in
xor
out
cmp
mov
mov
xchg
push
in
dec
sbbl
jne
pushf
or
sahf
xor
jns
mov
ljmp
pushf
fadd
jge
pop
mov
fwait
in
clc
and
repz
movsl
cmc
jb
sub
cmc
jmp
jne
sbb
or
fld
sbb
pop
add
adc
inc
inc
push
dec
xchg
mov
push
mov
aad
in
cmpsb
aas
imul
pop
or
lods
and
sbb
or
jae
jg
aaa
cwtl
nop
lds
lds
add
push
in
adc
enter
jl
es
dec
stos
add
repnz
outsl
out
std
sub
add
mov
pop
fcmovb
sahf
xor
cmpl
imul
in
call
stos
cmp
mov
xchg
out
inc
adc
mov
test
jg
in
icebp
cmp
movsl
hlt
sub
fistpll
and
sbb
sub
sub
jle
sbb
ret
lods
add
mov
rclb
in
lahf
xor
sbb
xchg
xchg
pop
or
xor
ds
xor
ret
xor
mov
inc
xchg
fldcw
ja
pop
push
xor
out
out
pop
sti
jnp
mul
cli
dec
out
jo
shl
cmp
cmp
mov
xchg
pop
movsb
cmp
jb
cld
sub
sub
jnp
sub
push
clc
cltd
test
lahf
hlt
out
pop
imul
mov
cmp
mov
sbb
js
pop
nop
ja
out
cmpsl
int
and
sub
mov
fisubrl
sbb
test
add
ret
popf
jbe
jmp
sbb
push
in
cmc
mov
xor
cs
repz
or
sbb
push
cwtl
in
fdivrl
push
push
data16
sub
call
dec
repz
in
test
and
dec
dec
cld
mov
shl
jmp
inc
add
xchg
sbb
xchg
mov
cmp
int
or
les
pop
orb
cld
test
fidivrl
sbb
push
lcall
pop
adc
or
push
jmp
int3
hlt
les
jmp
cs
add
fs
jne
and
subl
inc
movsl
jne
push
shrb
rorb
ret
out
into
into
outsb
lret
or
mov
mov
jo
mov
stc
filds
fwait
nop
fldt
jbe
sub
mov
mov
loopne
leave
xchg
ror
cmp
inc
fcoms
movsb
addb
dec
decb
xor
sbb
sub
clc
pop
and
push
and
or
mov
sub
aam
adcb
xchg
inc
aam
test
pop
mov
dec
lods
mov
xchg
pop
cli
cwtl
icebp
cmp
sbb
imul
sbb
xchg
dec
sbb
testl
push
xchg
rol
xor
fsubrl
inc
mov
push
pop
mov
mov
rorl
or
fwait
jecxz
jp
sar
scas
and
roll
add
sub
lock
out
outsl
lahf
xor
mov
out
fwait
popa
rcrl
jmp
cmp
mov
addr16
mov
mov
mov
cltd
test
clc
pop
jp
sbb
stos
or
sbb
in
in
scas
jmp
mov
add
repz
push
outsl
dec
dec
mov
adc
leave
pop
mov
inc
add
pushf
push
dec
mov
sti
pop
lahf
dec
cmpb
cmpsl
mov
add
mov
shrb
and
test
add
iret
push
xchg
gs
mov
pop
iret
mov
in
shll
fdivrp
dec
shlb
test
ds
jl
bound
imulb
lahf
jo
xchg
jae
mov
lock
or
out
adc
sbb
xchg
lahf
mov
push
inc
adc
jmp
jg
inc
mov
xchg
mov
inc
sbb
bound
aaa
adc
clc
int3
sub
push
dec
in
sti
mov
mov
sub
sarb
out
xchg
add
push
inc
adc
bound
sub
jp
xchg
cmpsb
mov
or
adc
mov
push
add
and
fmulp
js
imul
or
popa
sahf
inc
mov
xor
rorl
jb
cmp
dec
aam
loope
fisubl
es
dec
sbb
dec
bound
scas
out
jo
sub
pop
mov
les
das
jl
mov
xchg
dec
add
decb
inc
out
mov
stc
jnp
xor
cmpsl
insl
fistpl
outsb
dec
ret
pop
daa
dec
xchg
rep
inc
movb
dec
test
sub
cmp
mov
rclb
xor
pop
pop
fwait
enter
loopne
or
cltd
mov
rolb
cmc
scas
data16
jl
jmp
daa
sbb
out
xor
movd
sub
test
in
mov
cwtl
out
jne
roll
data16
fld
pushf
xor
aad
add
data16
sbb
es
ss
jbe
into
jb
das
xchg
push
repz
mov
fdiv
imul
pop
arpl
pop
dec
cmpsb
jge
cli
sbb
mov
jne
shrl
js
add
enter
mov
push
mov
adc
mov
sbb
jnp
das
mov
jmp
stos
jnp
mov
mull
popf
daa
ss
mov
xchg
mov
cltd
dec
adc
clc
or
xchg
lahf
cmpl
call
es
leave
add
mov
lcall
je
lret
inc
xchg
dec
sahf
jg
inc
hlt
mov
pop
cs
push
cmp
mov
aam
add
jge
fisubl
push
scas
add
mulb
lret
add
mov
out
es
xor
in
imul
test
adc
adc
jnp
mov
cmp
add
hlt
enter
xor
cmp
dec
xchg
lret
cmp
out
aas
jl
divb
iret
xlat
shlb
add
lods
jecxz
and
mov
in
or
test
shll
add
xchg
pop
inc
inc
out
arpl
and
divb
add
arpl
dec
test
inc
sbb
mov
cltd
mov
push
mov
pop
repnz
add
in
add
and
test
test
rclb
enter
dec
sub
mov
inc
jb
or
aas
out
cmp
or
outsl
nop
les
sub
jbe
mov
cmp
loop
andl
dec
and
jnp
xor
dec
hlt
push
ss
mov
sar
lret
pop
mov
or
fwait
or
pop
cli
push
pop
sub
and
and
pop
movsl
xchg
mov
popf
jnp
add
add
dec
and
cltd
mov
and
push
fdivs
mov
sbb
inc
js
jecxz
insb
mov
push
mov
pop
jbe
pop
test
mov
jmp
cmp
out
sbb
shld
lret
inc
setbe
or
and
mov
push
cmp
inc
pop
mov
aas
cmpsl
mov
cmp
push
loope
cmp
stos
repz
bound
std
mov
pop
into
mov
and
movsb
mov
push
subl
sub
cmp
mov
sub
icebp
sub
adc
pavgb
movsl
ss
out
mulb
mov
sahf
inc
loope
or
cmp
mov
test
and
add
lds
mov
xorps
aad
push
out
adc
xor
fistpl
out
cli
addr16
or
or
loop
lret
iret
mov
sub
mov
dec
lahf
xor
dec
pop
mov
lods
cmpl
mov
stc
fwait
or
xor
push
jno
sbb
sahf
aad
sub
sbb
mov
push
sub
outsb
cli
fnstcw
insl
subl
mov
jbe
jp
sarb
pop
jl
sub
ror
mov
lods
iret
add
pop
fdivrs
xchg
adc
imul
and
inc
scas
sbb
sahf
push
or
jae
sub
sub
inc
rcrl
pop
push
fwait
mov
sub
ds
in
add
iret
jle
push
loopne
sbb
repz
xchg
out
add
add
icebp
fisubl
add
xor
aaa
push
xor
dec
es
ljmp
sar
inc
mov
les
aas
mov
pop
cltd
js
popf
jns
in
sbb
shlb
cmp
loope
add
jne
jp
add
roll
mov
pusha
jbe
cmp
fldl
sbb
cmc
stc
call
sahf
cmp
popa
mov
mov
push
sub
adc
xchg
add
or
mov
xor
int
inc
lock
pop
xchg
push
xchg
pusha
add
fcomps
push
pop
inc
lods
cmpsl
dec
sub
jnp
mov
pop
in
shrb
stos
xor
add
mov
xor
push
add
nop
cmp
push
sub
sub
je
add
jle
ret
popa
mov
stos
mov
jle
mov
mov
repz
pop
lods
notb
mov
jae
fnstcw
repz
arpl
mov
pushf
mov
bound
js
xchg
inc
add
cmp
add
mov
push
jge
dec
pop
xchg
add
imul
ret
jecxz
dec
scas
cmp
fucomi
dec
arpl
xor
push
rclb
shr
in
movl
in
fists
fstpt
jp
cmp
jne
adc
xor
cmpsb
insb
and
mov
sub
add
out
mov
test
xchg
fs
mov
cltd
imul
mov
jns
sti
xor
mov
cmpsb
push
enter
mov
sbb
sub
ljmp
push
mov
mull
sbb
scas
in
jge
lods
repz
xchg
dec
add
sub
fidivrs
sub
ds
repnz
xchg
pop
pop
movsl
cwtl
dec
jle
ljmp
fxtract
clc
or
mov
inc
out
xor
adc
push
mov
int
mov
cmc
mov
int3
sbb
push
inc
es
sub
inc
jp
cmc
test
sbb
dec
adc
scas
fcoms
fisubrs
xlat
es
fimull
adc
mov
push
mov
bound
dec
pop
frstor
loope,pn
cli
aam
es
out
pop
test
jg
rorl
jecxz
rolb
jp
add
or
inc
decb
jnp
or
out
xlat
fsubs
fs
fwait
loope
daa
mov
lods
xchg
rorl
cmp
imull
sahf
in
inc
jl
js
mov
ret
sbb
adc
aad
or
jne
mov
sbbb
mov
push
aaa
jb
les
mov
stos
xchg
mov
mov
jb
iret
ss
jge
pop
loop
clc
mov
aam
lahf
imul
orl
xchg
jo
mov
cltd
call
and
fbld
mov
jbe
cld
jl,pn
imul
pushf
aad
das
notb
jp
adc
cli
ret
arpl
or
lret
inc
xor
xchg
push
mov
xor
mov
dec
cli
aaa
lahf
jmp
inc
adc
inc
jle
mov
gs
push
jecxz
call
outsb
pop
fsubrl
pop
out
jnp
shll
mov
out
or
mov
pop
lea
aas
push
negl
mov
imul
gs
push
pop
ss
outsl
addr16
daa
fwait
lea
mov
push
and
mov
fiaddl
mov
fisttpll
arpl
rorb
sbb
fldl
fwait
testl
jbe
adc
jmp
sbb
subb
movsl
lods
mov
fadd
sub
jge
pop
push
lods
dec
xor
mov
test
or
xchg
cli
mov
call
add
insl
pop
inc
insl
test
pop
and
int
in
scas
inc
inc
addl
mov
mov
adc
imul
xor
adc
popf
call
sbb
push
icebp
dec
xchg
or
adc
jge
sub
testb
sub
ss
aam
jl
outsl
test
call
jns
cltd
data16
pop
aad
inc
cmpsb
andb
movsl
and
or
push
cmpsb
mov
leave
hlt
ds
pusha
cmpsl
or
scas
dec
sub
xor
insb
lret
adc
sub
jnp
push
inc
mov
arpl
push
pop
sub
shlb
popf
fs
lcall
or
push
xor
out
pop
and
inc
xchg
and
jecxz
add
in
dec
dec
sbb
add
dec
inc
mov
jns
icebp
lret
ss
or
rcrl
sbb
imul
adc
push
xchg
push
nop
jge
and
sub
movq
ljmp
and
mov
sti
inc
sbb
repnz
in
cmc
aaa
jne
idivb
pop
sub
dec
lock
pop
mov
inc
dec
out
sbb
popa
jo
out
cmp
adc
adc
xchg
cmp
dec
jmp
jp
mov
jae
fs
jnp
pusha
jnp
add
lds
pop
push
xchg
cmc
fcmove
mov
clc
sbb
lret
push
pop
cmp
jle
mov
push
fstpl
add
insl
pop
repnz
adc
call
repnz
jge
and
add
mov
adc
cli
dec
cmpsl
cld
xor
pop
sub
cmp
aas
adc
ss
mov
mov
imul
pop
arpl
ret
sub
dec
insb
xor
adc
and
into
sbb
clc
mov
mov
cmp
test
mov
jnp
popa
into
and
push
insb
lret
in
js
ret
xchg
fcoms
push
pop
pusha
cmp
adc
ficoml
sub
test
fisubl
jecxz
out
scas
popa
inc
sti
push
xor
mov
shll
sti
inc
fucom
je
and
ret
jl
jmp
es
dec
mov
xchg
ds
sahf
jg
mov
cmp
or
scas
fnsave
hlt
lods
mov
mov
rolb
pop
mov
sbb
cld
sub
sub
in
call
push
pop
mov
lock
lods
dec
jmp
xchg
int3
adc
jecxz
and
or
pop
call
leave
xchg
jbe
inc
test
mov
sub
jnp
lock
pusha
or
mov
ds
mov
pop
jo
dec
sti
inc
jge
lea
cmp
lods
cmp
incl
addr16
push
push
xchg
mov
push
xchg
jo
sub
shlb
mov
mov
push
aam
cmp
xchg
push
test
fistps
imul
dec
test
jle
sti
add
jne
pushl
jp
cmpsl
mov
leave
adc
andl
lcall
xor
out
lock
mov
daa
int3
and
jl
mov
pop
mov
dec
push
mov
mov
push
cmp
insl
or
int3
pop
xchg
repnz
jl
je
ficomps
xchg
mov
stc
sub
jecxz
decb
xchg
inc
mov
add
imul
mov
jp
add
pop
jae
repnz
dec
sub
out
popf
movsl
and
xor
mov
lret
cmp
or
sub
das
xor
js
xchg
add
aam
mov
mov
loop
cld
movsb
pop
mov
imul
movsl
push
and
fiadds
sbb
inc
das
jbe
call
fldl
push
outsl
fiadds
ljmp
imul
fmull
sub
xlat
fdivrs
iret
ds
push
subl
test
std
xchg
cmp
xor
loopne
std
and
adc
jmp
xchg
push
mov
pop
rcl
or
pushf
stos
sbb
push
jmp
or
std
daa
sbb
xchg
push
aas
enter
cmp
jae
lods
aam
push
pushf
iret
sub
out
sar
sahf
mov
and
add
pop
lock
or
stc
lods
or
jle
cmp
std
jge
mov
push
sub
ljmp
mov
inc
das
mov
fwait
outsl
or
lea
and
xor
das
mov
inc
shrl
sarl
cmp
xor
lods
xchg
mov
jae
mov
sbb
and
daa
inc
sub
dec
push
adc
adc
lock
dec
leave
aam
loop
xchg
fists
or
call
add
sbbb
adc
or
or
push
lods
cmp
mov
adc
pop
mov
inc
into
sbb
into
inc
and
adc
stos
ja
or
ja
push
stos
jns
inc
jmp
pop
lock
cmpsb
jns
pop
fildl
hlt
mov
ds
in
cmp
aas
xchg
inc
clc
stos
xchg
mov
pusha
mov
into
notrack
imul
rorb
pop
add
xlat
add
xor
lds
cmp
or
popl
out
data16
aaa
in
push
push
aas
fs
movsb
or
mov
and
das
cmp
pop
mov
lods
aaa
push
addr16
neg
xchg
lret
xchg
test
or
in
movsb
xchg
push
inc
aas
sahf
in
adc
jmp
dec
je
and
xor
adc
xlat
stos
hlt
mov
iret
pop
cwtd
inc
iret
cmp
lret
mov
pop
pusha
push
cmp
mov
pop
outsb
jmp
add
into
js
xchg
gs
inc
xchg
pop
inc
mov
inc
push
rorl
add
lret
add
pop
pop
push
pushf
lretw
xchg
lret
enter
bound
jp
mov
nop
jl
and
mov
lods
jno
sbbb
mov
sbb
inc
movsb
or
lret
mov
repz
adc
test
xchg
add
dec
loop
int3
mov
xchg
stos
cmp
mov
lea
cmp
cmpsb
insl
sbb
arpl
ret
orb
jns
movsl
dec
dec
out
outsb
es
mulb
xor
inc
data16
shr
push
aad
dec
sbb
mov
stos
or
loope
cli
jg
dec
push
cmpsl
mov
sub
cld
je
dec
push
pop
sbb
fwait
jb
jns
inc
cmpsb
sbb
or
xor
sub
xchg
int
mov
push
cmp
fs
push
idivb
imul
push
xchg
inc
mov
in
imul
mov
movsl
repnz
sub
sub
stos
or
mov
bound
lea
sbb
inc
loopne
push
push
or
sbb
shrl
adc
push
adc
rclb
or
pop
jns
pop
mov
xchg
fwait
push
loop
jb
je
cmp
inc
jo
adcl
jae
push
dec
icebp
ret
mov
sbb
jbe
test
cmc
jb
int3
mov
push
push
add
cmp
mov
adc
push
and
ret
jl
dec
add
push
pop
sahf
push
jp
xor
hlt
mov
mov
movsl
xchg
xor
enter
ret
dec
xor
sbb
fwait
mov
mov
mov
sti
sub
loopne
adc
xor
cli
cli
push
sub
js
pop
dec
orb
std
cmc
lret
sbb
or
mov
arpl
aas
fisttpll
aad
xlat
push
xchg
fstps
adcl
imul
iret
adc
push
push
incl
movsl
pop
cmp
mov
les
mov
mov
aaa
xor
jae
dec
sbb
sahf
adc
in
xor
sub
xchg
dec
jg
and
outsb
adc
arpl
shlb
sahf
cmp
sti
pop
sbb
or
addr16
cmp
repnz
fstl
pop
dec
aaa
pop
repnz
sbb
jae
rorb
mov
imul
fs
test
jnp
adc
xor
mull
decl
mov
sub
jnp
inc
cmp
add
push
out
sub
fmull
scas
xchg
push
insl
jbe
push
pop
mov
imul
adc
mov
sbb
inc
lods
dec
mov
cs
and
push
ljmp
ret
xor
neg
fisubl
mov
fwait
icebp
sbb
inc
pop
xchg
data16
data16
lock
scas
pop
pop
sub
arpl
loope
sub
jecxz
lahf
outsl
pop
bound
and
mov
adc
adcl
sub
sub
and
and
mov
ja
rorb
popa
and
pop
stc
dec
imul
hlt
or
in
xchg
pop
inc
mov
xchg
aas
add
test
enter
test
cmpl
xchg
dec
cltd
sub
fstpt
shrl
xchg
push
xor
mov
xor
mov
mov
ror
pop
mov
mov
push
repz
inc
jp
push
jmp
mov
and
test
jne
adc
jne
cmpsb
outsl
mov
adc
xchg
les
mov
jge
icebp
adc
adc
lods
xor
imul
dec
dec
cltd
stc
aas
push
add
cmpsl
repz
sahf
jnp
lahf
mov
pop
std
adc
outsb
mov
push
add
movsb
xchg
sub
sbb
mov
mov
mov
stos
mov
pop
add
aaa
mov
adc
cwtl
pop
aam
sub
add
xor
outsb
add
add
ds
shl
cmp
pop
and
js
in
les
test
test
jne
popf
sbb
bnd
and
out
popf
xor
test
sbb
sub
mov
std
cmp
or
pop
fdivs
in
adc
cmp
in
pop
and
add
scas
mov
das
frstor
ret
fcmovbe
mov
adcl
jl
mov
icebp
dec
stc
xor
insl
xchg
bound
test
ljmp
cmp
testb
pop
mov
and
mov
mov
pop
testb
daa
push
add
jnp
rcll
mov
mov
cmp
dec
mov
cmp
push
test
jl
xor
add
inc
std
cli
mov
inc
lcall
jge
sahf
add
imul
cwtl
dec
in
jg
sahf
or
nop
adc
cwtl
jmp
and
stos
scas
popa
mov
cmpl
orb
dec
or
test
jno
sub
hlt
cli
int3
inc
xor
pop
sbb
xchg
xchg
dec
mov
xchg
pop
pop
iret
pop
xor
mov
jae
dec
clc
mov
adc
addr16
xlat
fsts
call
pushf
clc
mov
repz
cmp
pop
ljmp
daa
cmc
mov
pop
shrb
cmp
in
sub
sarl
xor
sahf
hlt
xor
lock
pop
decb
xchg
pop
push
push
add
iret
arpl
sahf
push
pushf
incb
lret
dec
fdivs
lods
into
cwtl
bound
testb
push
sub
push
es
cs
dec
jns
mov
fistpl
or
imul
outsb
adc
lea
aas
enter
mov
pop
lods
push
adc
jl
xchg
out
aam
das
dec
mov
rcrb
lret
jmp
add
mov
ja
jp
pop
cltd
sbb
mov
adc
fld
repz
enter
xor
int
jg
inc
jge
and
mov
push
jb
xor
pop
jge
xor
shrb
pop
sbb
js
mov
mov
out
inc
repnz
push
sub
lahf
mov
enter
mov
cmpb
sbb
jmp
push
sub
sbb
push
xlat
lcall
add
sarb
xor
cmpb
mov
inc
sbb
jecxz
stc
out
cmp
mov
arpl
add
daa
cmc
push
repz
mov
pop
xor
cs
mov
sarl
mov
add
out
rorl
dec
xor
enter
cmp
popa
and
fisubrs
in
in
dec
dec
fstps
loopne
cmp
neg
dec
cmp
enter
mov
and
cmp
xlat
jb
inc
orb
outsb
dec
ret
imulb
cli
mov
mov
inc
insb
cmc
dec
cltd
call
push
push
sub
aam
jns
mull
arpl
push
sahf
mov
or
cmp
movsb
inc
jbe
sub
pop
jne
repnz
xchg
mov
push
and
out
sahf
les
bound
xchg
sbbb
mov
mov
sbb
pop
fstp
or
jb
mov
mov
mov
mov
cmp
imul
fs
dec
mov
mov
lock
das
icebp
fs
clc
cmpl
bound
add
out
jmp
in
je
or
aas
ja
mov
sti
mov
and
mov
notl
xor
notl
sub
pop
bound
aam
arpl
sbb
xchg
sbb
js
inc
dec
mov
insb
sti
cmp
je
notl
cmp
enter
xor
shll
adc
in
inc
fnstsw
out
fidivs
xor
notl
rorb
clc
pop
and
and
test
mov
repnz
push
sub
negb
xor
xchg
cmp
xchg
cmp
mov
add
push
js
inc
push
addr16
push
leave
push
aas
mov
and
mov
or
call
jmp
jle
stc
lea
call
test
pop
lret
sub
lds
mulb
sub
mov
mov
mov
dec
loopne
pop
test
aad
adc
aam
mov
jle
jns
mov
aam
xchg
mov
push
dec
push
xchg
mov
test
and
adc
and
push
pop
cmpsb
ja
xchg
lret
sub
rorb
rorb
cmp
dec
or
pop
add
arpl
in
int3
cmpl
mov
aas
fmull
or
andl
adc
mov
cmp
add
push
adc
fstps
test
shll
sub
jo
sahf
enter
into
fmull
fs
hlt
cmp
mov
mov
mov
aad
pop
mov
ficomps
push
les
ret
push
pop
pop
test
scas
bound
lret
pop
or
push
xchg
inc
outsb
movsl
lahf
in
aad
jno
loopne
jns
xchg
push
sub
cmp
bound
fwait
gs
mov
push
lahf
pop
icebp
pop
pop
ljmp
popf
mov
call
fiadds
scas
sub
insb
or
and
pop
pop
mov
inc
addr16
mov
cmp
add
push
ret
jmp
stos
add
loopne
push
push
daa
mov
bound
mov
rolb
in
aad
pop
outsb
mov
push
pop
lcall
ret
lcall
cmp
loop
sti
jmp
push
in
or
pop
pop
aas
sbb
pop
ret
pop
push
lods
hlt
imul
insb
mov
inc
mov
nop
mov
sub
mov
push
xor
ja
pop
loopne
in
xor
sarb
xchg
xor
push
testb
xchg
js
es
jle
and
pop
js
cmpb
mov
xchg
dec
xlat
xorl
enter
mov
pop
shrl
lret
das
std
popf
movsl
out
push
js
arpl
in
pop
push
mov
test
jne
sbb
xchg
push
gs
push
add
test
cmpsl
scas
lods
cmpsl
out
sarb
sub
movntq
out
mov
pushf
std
jne
xchg
int3
test
lret
jne
or
lods
xchg
inc
xchg
mov
push
pand
imul
mov
dec
or
stos
adc
sbb
and
sbb
or
xchg
pop
hlt
add
inc
mov
xor
ss
jb
leave
push
pop
and
shlb
aad
jae
out
lock
inc
pusha
xchg
inc
add
adc
out
push
pop
repz
out
cmp
pop
popa
push
clc
mov
push
dec
loopne
imul
vdivss
jl
cmp
dec
inc
test
jbe
cmc
je
mov
pop
push
mov
jecxz
jns
fldcw
flds
push
popf
lahf
inc
xchg
sub
insb
insb
jno,pt
mov
ja
fdivs
adc
mov
lea
push
mov
push
popa
shll
adc
jp
push
sbb
xchg
int3
sti
jg
cld
cmp
jmp
add
cwtl
mov
push
arpl
std
adc
push
pop
sbb
call
cltd
iret
mov
xchg
fisttpl
into
fildl
popa
pop
jno
int
mov
push
inc
loopne
cmpsl
push
mov
push
add
call
cmp
inc
in
scas
flds
and
lcall
faddp
sub
adc
lahf
push
jle,pn
cmp
jne
scas
cmpsb
loop
scas
inc
dec
icebp
dec
test
mov
cmp
ja
subl
and
inc
mov
shrb
lret
ljmp
mov
fnstsw
sub
mov
jle
out
xchg
insl
aad
mov
adc
push
leave
dec
mov
imul
xor
ret
add
sbb
mov
jge
or
or
dec
mov
repz
jp
in
pop
dec
sbb
pop
loope
adc
popf
jg
mov
add
cmp
jle
lcall
cmp
push
dec
jno
lock
xor
and
dec
and
ret
cmp
icebp
pop
les
addr16
mov
shrl
sbb
cmp
mov
cld
test
or
testb
or
ret
adc
mov
in
fnsave
aaa
mov
test
mov
cmp
jge
pop
and
xchg
loop
cmpsl
xchg
in
js
loope
xchg
lret
std
xchg
loop
xor
cmp
loope
test
lods
xor
rolb
pop
sbb
adc
loope
and
mov
sbb
sbb
mul
adc
mov
int3
pop
jl
into
push
jmp
jecxz
sub
and
test
jecxz
ret
inc
inc
push
mov
push
std
stos
cli
mov
cmp
mov
pminub
in
lcall
dec
sbbl
push
add
inc
lahf
mov
out
dec
inc
lea
stc
bnd
mov
add
inc
jbe
mov
clc
sahf
popa
mov
pop
add
imul
out
sub
sbb
es
loopne
jl
test
jge
cmp
adc
pop
xchg
cmp
pop
cmpsb
mov
jae
pop
mov
movsl
pushf
jae
enter
lods
mov
and
jg
xchg
movsl
sahf
sbb
push
xor
sbbb
movsb
lcall
addr16
xor
mov
inc
push
cli
rolb
gs
bound
popf
adc
rclb
add
and
push
bound
jno
xchg
call
out
int
push
adc
dec
and
or
mov
jnp
jmp
loope
pop
in
movsb
xor
sbb
add
mov
cs
mov
aam
outsl
xchg
mov
adc
imul
sbb
xchg
stc
cmpl
dec
mov
push
sub
xchg
std
adc
or
ds
xor
mov
pop
pop
mov
jl
stc
ljmp
mov
and
lcall
cld
xor
lahf
stos
sbb
add
in
daa
xor
jo
mov
or
sbb
dec
inc
stos
and
addl
stos
stos
adc
inc
fwait
lahf
push
xor
mov
sti
iret
push
mov
adc
pop
mov
inc
pop
test
xor
dec
test
inc
call
outsl
mov
mov
jmp
gs
sbb
movsl
mov
xchg
fcmovne
ds
add
sub
popf
stos
loop
pop
or
xchg
js
or
dec
je
cmp
jecxz
and
sbb
aas
femms
adc
cmp
and
outsl
sub
pop
in
jge
rolb
xchg
or
and
push
pop
mov
repnz
sbb
and
test
sbb
sub
enter
cmpl
aaa
or
pop
jbe
push
mov
in
xlat
sub
push
sti
cmc
or
fwait
mov
cmpsl
test
dec
in
std
push
out
xor
sub
push
mov
sbb
cli
sbb
dec
orb
fcmovnbe
pushf
mov
sbb
mov
pop
fsubp
sub
faddp
lcall
inc
mov
mov
inc
test
stos
fmul
nop
push
testb
xor
idivl
and
ret
and
mov
mov
push
icebp
sarl
call
les
adc
push
aam
push
repz
push
mov
mov
or
call
mov
cli
inc
daa
mov
fcoms
sub
enter
mov
jg
cs
sbbb
leave
jbe
lahf
mov
push
mov
lods
inc
dec
inc
mov
sub
xor
inc
and
add
aas
shll
cmpl
mov
xorb
iret
and
icebp
push
sahf
xlat
jmp
dec
fmulp
xor
xchg
add
nop
cld
outsl
jmp
xchg
movb
cmpsl
test
and
sub
lcall
shrb
jmp
pop
push
cld
std
inc
push
lds
std
mov
js
cmc
sub
imul
jo
cmp
arpl
push
jmp
lea
test
mov
out
addb
into
and
xor
fiadds
add
cmp
testl
add
inc
cmp
adc
jle
repnz
test
cmpsb
aam
sub
gs
or
xor
cmp
inc
sahf
lods
scas
push
filds
les
hlt
loope
ja
lds
lea
push
lcall
std
xor
cwtl
mov
js
mov
dec
jle
idiv
out
lret
dec
lea
xor
inc
or
or
sbb
add
xchg
mov
insb
push
ds
add
cli
mov
lahf
imul
sub
dec
push
mov
es
push
pop
lret
pop
push
stc
sbb
pusha
cmp
sbb
dec
loope
cmp
sub
add
jo
fwait
in
add
idiv
mov
inc
idivl
cli
adc
call
out
out
push
dec
lea
push
pop
push
push
pushf
lahf
test
adc
std
jecxz
inc
mov
dec
in
add
jp
das
and
xchg
in
pop
jno
jp
js
xor
xchg
sar
mov
cmp
add
xchg
cmpb
jno
or
mov
push
into
movsl
aad
call
pop
mov
push
pop
jo
js
mov
imul
hlt
pop
addb
in
adc
rcll
aas
jg
outsb
popf
push
or
inc
fldcw
into
inc
xchg
mov
ss
loop
fidivs
cmpsl
add
jae
shlb
and
sti
arpl
movsl
add
leave
movsl
outsl
je
jp
fmuls
sub
cmpb
jae
lods
push
pusha
inc
xor
inc
imul
fildl
dec
sub
fmulp
mov
or
sarb
movsl
sbbl
test
lods
lods
and
xor
mov
xlat
xor
stos
cmpsl
pop
jmp
mov
and
xor
fstpl
bnd
sub
inc
repnz
pushf
movsb
mov
mov
pusha
dec
mov
lret
outsb
aaa
and
icebp
cmp
adc
add
push
jnp
loopne
xor
outsl
add
lcall
repnz
inc
sbb
dec
orl
in
outsb
sub
jns
jmp
sarb
aas
push
sub
pop
les
pushf
out
jae
inc
adcw
lock
push
and
xchg
bswap
shl
negb
mov
loope
xor
sub
shlb
push
xchg
mov
xor
stos
loop
int3
dec
rcr
xchg
xor
mov
pop
jecxz
mov
vmread
test
push
insl
xor
outsb
xchg
pop
jnp
push
stos
or
mulb
adc
call
sbb
mov
dec
jmp
mov
jbe
rorb
push
test
mov
out
xor
scas
xor
mov
inc
jne
add
dec
cmp
pop
mov
cmpsb
aaa
repz
test
xor
scas
pushf
cmc
jno
cwtl
cmp
pushf
enter
push
les
ja
decl
add
push
sahf
je
stc
xor
dec
insl
out
mov
test
out
pop
mov
push
or
pop
mov
scas
stc
aas
mov
ss
sbb
jp
inc
mov
add
pop
xchg
loope
cmpsb
cmp
lret
inc
loope
push
das
mov
test
fldl
sbb
lcall
fisubrl
mov
push
xchg
cmpsl
rolb
cmp
pushf
push
mov
ret
imul
pop
sti
xchg
pop
lcall
pop
ss
jbe
cli
enter
jl
pop
jno
mov
lock
push
mul
pop
loope
inc
xor
fimull
or
xlat
add
cli
adc
jns
ljmp
inc
loopne
xchg
adc
outsl
out
mov
mov
sti
push
sbb
add
sub
imul
cmp
mov
mov
arpl
inc
push
and
in
fistl
pop
addl
out
inc
seta
hlt
push
sbb
push
imul
mov
pop
jnp
rolb
rolb
int
adc
mov
outsb
andb
mov
popf
stos
xchg
push
test
jnp
mov
push
jge
jnp
in
sub
scas
jecxz
js
movsb
mov
mov
rorb
push
add
add
repnz
and
inc
adc
sub
fsts
out
pop
addl
jns
adc
nop
xchg
dec
dec
mov
insb
std
xchg
jbe
data16
inc
xor
sub
inc
dec
mov
or
inc
scas
adc
add
push
notb
scas
xor
leave
test
inc
scas
xchg
fidivl
add
mov
scas
sbb
sbb
gs
out
pop
lret
cmp
inc
jmp
rolb
bound
daa
jno
arpl
adc
mov
ljmp
pop
jne
or
mov
adc
lods
mov
jge
pop
mov
inc
jb
pushf
sbbl
xchg
jbe
xchg
mov
sbb
scas
mov
movsb
mov
cli
jge
jecxz
nop
push
inc
fs
inc
push
fdivrl
rcrl
cmp
xchg
sub
jae
in
lret
lcall
push
pushf
sti
je
xor
dec
nop
mov
ret
test
mov
std
xchg
clc
pop
stos
jnp
je
test
scas
push
mov
jnp
fs
push
and
lcall
xchg
out
lcall
mov
xorb
dec
xchg
pusha
pop
cmpsl
loopne
cmc
gs
mov
lret
fcmovu
xor
insl
jnp
push
xor
das
mov
lods
inc
cmp
cld
leave
nop
add
pop
pop
add
mov
jb
xchg
icebp
je
push
das
dec
adc
test
fldenv
lcall
pusha
cmp
sbbb
int3
es
push
inc
xor
push
pop
into
test
leave
sub
ret
xchg
pusha
inc
mov
inc
popa
inc
aam
dec
in
outsb
movsl
imul
fsub
popa
or
jns
mov
and
pop
xlat
xchg
repnz
repz
pop
imul
jl
add
mov
fnstcw
insb
or
push
fwait
loope
push
cmp
or
out
push
cmpsl
test
jmp
pop
movsb
sahf
pop
lcall
dec
scas
ljmp
pop
sbb
les
addr16
inc
and
and
xchg
divb
cmp
rorl
push
dec
dec
push
loop
repz
loop
fadd
stc
jge
inc
mov
std
mov
push
rcr
mov
or
inc
iret
lret
scas
rcrb
push
insl
xchg
mov
sub
repnz
push
flds
out
pop
call
lds
jbe
adc
pushf
out
push
xchg
mov
adc
clc
xor
push
iret
rcl
or
mov
mov
fstpt
jo
sbb
addr16
push
pop
std
mov
loopne
jl
cmp
push
in
ja
test
scas
mov
and
mov
mov
pop
int3
dec
sbb
movsb
imul
dec
loop
in
imul
xchg
pop
arpl
mov
inc
out
push
fnstsw
ljmp
popa
gs
and
push
loope
and
cmp
lcall
test
jmp
xor
sub
push
jo
add
icebp
fpatan
xchg
dec
sti
dec
fs
pop
mov
test
adc
aaa
aad
xor
inc
testl
icebp
cltd
add
xor
pop
rorl
fs
sti
imul
bound
cmp
sbb
mov
xor
in
arpl
dec
adc
push
rorb
insb
jne
leave
adc
mov
cmpsb
shrb
cmp
pop
mov
popf
cwtl
ljmp
and
into
pusha
cmc
icebp
stc
hlt
movsl
and
loopne
in
xchg
fidivrs
jns
jmp
fsubrl
addr16
ret
aas
and
fdivs
push
inc
mov
cmp
push
jo
jae
bnd
out
out
cwtl
pop
loop
cmpsb
ror
add
sub
insb
push
pop
jo
in
add
imul
and
mov
out
clc
pop
shll
cltd
or
rcrl
in
ja
arpl
mov
insl
cmpsl
fldt
mov
sub
into
inc
ja
cmpsb
and
cwtl
leave
les
pushf
fnsave
and
lcall
les
daa
adc
sub
std
js
add
mov
push
inc
fwait
and
add
mov
add
addr16
pop
aas
jmp
sti
push
scas
add
push
dec
icebp
mov
cwtl
iret
mov
pop
xchg
add
mov
jl
pushf
stos
jl
mov
cltd
add
push
mov
pop
adc
rolb
push
pusha
pusha
mov
mov
stos
jp
sbb
adc
xchg
fsubrs
lcall
loopne
cmp
jne
in
jmp
and
shr
pop
jns
mov
popf
cmpsb
popf
in
adc
sub
addr16
lds
repz
popf
pop
aaa
adc
les
inc
inc
xchg
clc
push
das
in
xchg
insl
pushw
es
adc
lods
jp
cmp
jnp
or
mov
mov
shlb
mov
lock
sub
lret
movmskps
ret
sub
inc
sub
sahf
in
or
push
jae
dec
fs
xor
inc
inc
cmp
movsb
push
ja
pop
push
dec
or
dec
stos
mov
sub
xor
mov
mov
cmp
icebp
fistpl
dec
xchg
jl
ret
xchg
push
pop
inc
pop
flds
or
lds
push
cmp
shll
adc
sub
scas
shrl
sti
sti
daa
mov
or
leave
ret
or
lds
add
cmp
fcom
into
in
fwait
shr
jne
cmp
mov
sahf
adc
cmp
sti
pop
stc
mov
push
jge
int3
mov
dec
pop
mov
or
xor
mov
std
jp
ss
and
je
les
add
or
inc
pop
pop
repz
ret
sti
movzwl
and
fadds
push
aad
dec
js
adc
inc
fistpl
jns
lea
ret
or
xlat
movsl
stos
adc
insl
dec
stc
push
jo
les
adc
jae
out
dec
ja
gs
arpl
js
xor
push
add
sar
iret
loop
jo
in
iret
or
stos
jl
add
mov
adc
adc
shlb
aam
mov
mov
cmpsb
stc
jne
inc
out
decb
rolb
mov
push
lret
lods
sbb
add
pop
mov
popa
dec
cs
ss
jp
push
mov
mov
xor
aaa
test
iret
and
imul
adc
mov
inc
mov
aas
mov
jns
mov
inc
ja
nop
dec
loope
mov
insl
shll
lret
idivl
pop
sub
je
cmp
mov
xlat
fcmovnb
das
add
outsl
shl
mov
insl
lret
mov
mov
jbe
loope
arpl
cmp
sub
ds
insl
cmp
lock
xchg
ficomps
mov
xor
jmp
or
mov
fldl
test
bound
pop
in
push
iret
sub
cmp
add
sbb
stos
addl
and
sub
cmp
imul
out
sbb
in
insb
mov
inc
outsb
gs
push
das
push
loope
rolb
xchg
popa
xor
mov
mov
leave
out
inc
sbb
in
dec
fcoml
mul
push
cmp
repnz
out
inc
dec
mov
into
lahf
pushl
add
cmpsb
ret
imul
push
xchg
jnp
jmp
mov
inc
iret
fldl
clc
add
xor
mov
pop
bound
fistpll
aam
mov
add
mov
fldcw
scas
inc
cmp
inc
fbstp
test
cmp
mov
jae
fsubrp
cmp
pop
lods
std
add
xlat
inc
imul
add
push
loope
dec
stos
mov
mov
gs
cli
jmp
add
mov
xchg
kandw
cli
pop
sahf
in
call
sbb
mov
scas
and
shll
out
cmp
sbb
fiadds
nop
push
cmp
xchg
fnstcw
lahf
sub
push
xchg
fs
in
jecxz
inc
xchg
es
jmp
dec
in
adcb
and
mov
cmc
in
ds
pop
rclb
jmp
cmc
cltd
dec
add
push
and
mov
inc
movsl
mov
mov
mull
shlb
jb
loopne
clc
cli
js
lock
in
adc
imul
test
cli
into
jnp
inc
jecxz,pt
mov
push
sbb
mov
and
in
cmp
mov
pop
jnp
mov
fxch
jne
cmp
jno
adc
les
add
mov
mov
mov
xchg
push
cmpsl
jle
inc
rorl
cmp
cld
push
int
ds
sbb
cmp
stos
mov
sub
loopne
aaa
and
lods
xor
lea
mov
out
push
add
icebp
inc
sbb
xor
xor
or
sahf
scas
imul
and
or
cmp
test
pop
loopne
push
sub
fistl
xchg
test
test
inc
pop
inc
or
dec
mov
and
rorl
bound
or
jg
mov
jle
mov
xchg
test
imul
push
inc
loop
xchg
movsl
sub
outsl
sub
sahf
dec
aam
daa
mov
outsl
adc
add
stos
outsl
sbb
and
xor
popa
xor
push
and
movd
mov
xchg
jle
jecxz
cmp
lcall
ljmp
mov
ret
jns
test
mov
mov
cmp
mov
and
shl
ret
fldenv
scas
fnstenv
outsb
sub
lret
sub
bound
adc
xchg
xchg
jecxz
xor
loope
mov
inc
js
dec
call
push
xor
fcmovnb
rorb
add
test
cltd
push
lcall
pop
das
into
sub
mov
arpl
mov
movsb
mov
push
jno
fistl
inc
pop
add
fildl
jbe
add
fsts
jge
add
movsb
xor
mov
shll
jmp
pusha
test
icebp
stos
repz
scas
mov
jnp
ss
pop
fstpt
mov
fstl
push
xor
ja
mov
jnp
out
push
jg
or
inc
lret
xor
mov
fs
xchg
pushf
nop
lcall
fidivs
xchg
mov
or
mov
stc
lock
jo
jmp
jae
testl
push
jae
in
outsb
mov
push
pop
and
int
and
dec
cmpsl
daa
mov
mov
cld
sbb
sbb
sbb
ja
sbb
out
lret
jle
rolb
fsts
cmpsb
nop
stos
sti
dec
sub
push
xchg
test
xlat
cld
mov
pop
xchg
sbb
mov
mov
mov
push
fmul
dec
in
xor
inc
mov
imul
pop
lea
fbstp
xchg
insl
or
cmp
popf
outsl
cmpb
dec
test
pop
mov
add
out
pop
push
cs
add
xor
dec
faddl
shll
mov
mov
sarb
shl
jae
aam
rcrb
insb
pop
or
mov
mov
imul
add
mov
xor
jno
pop
in
mov
dec
cli
ror
enter
sub
or
daa
adc
cltd
and
mov
test
lods
jmp
push
xchg
mov
ficoml
pushf
mov
into
inc
mov
fwait
sub
cmpb
or
dec
inc
mov
xlat
xor
lods
scas
test
xor
cli
pop
mov
pop
outsl
sbb
pop
push
add
es
push
pop
push
push
sub
dec
inc
push
andl
ret
inc
test
pop
loope
aad
stos
or
leave
and
add
push
mov
shlb
imul
mov
cmc
inc
inc
pop
mov
mov
gs
mov
shlb
test
and
jmp
mov
movsl
inc
cmp
fcomp
gs
out
pop
inc
movsl
jecxz
call
adc
gs
mov
lock
jae
sbb
mov
in
sbb
cmp
inc
xchg
testb
jb
shr
or
sbb
bswap
into
mov
add
jp
cwtl
test
call
mov
adc
mov
mov
xor
xor
jp
jl
xchg
cmpsl
or
cli
cltd
push
lea
filds
addl
mov
sbb
pop
ljmp
scas
mov
pushf
lods
pop
aam
test
mov
push
ja
insl
cmp
mov
aaa
push
hlt
add
inc
push
icebp
fwait
shll
jl
repnz
ret
cmp
fldcw
add
loopne
mov
cltd
movsl
adc
xor
jnp
imul
imul
jl
int3
and
push
mov
inc
imul
cs
rorb
xor
xlat
inc
mov
xor
repz
cmp
mull
push
test
mov
es
xchg
out
std
add
imull
mov
adcb
mov
les
add
mov
xchg
test
mov
inc
ja
je
loopne
dec
jmp
movsb
cmc
ss
stos
mov
inc
mov
xchg
dec
jno
orb
push
shrl
pop
mov
sub
fdivs
sub
rol
mov
js
jle
mov
sbb
icebp
fstl
icebp
je
pop
outsb
push
push
lahf
pop
add
adc
leave
sahf
xor
sub
xor
lret
pop
fsubp
dec
jae
sbb
inc
xchg
jbe
jbe
cli
sub
add
xchg
inc
add
add
cwtl
adc
xchg
lahf
sub
iret
notl
xchg
push
jle
or
add
call
ss
pop
sub
inc
sub
mov
or
pop
push
pop
cmp
ret
sub
mov
mov
xchg
dec
xchg
int
lock
lret
jmp
rcl
dec
mov
pop
idivb
mov
cs
ficompl
outsb
pop
and
outsb
popa
fmull
popa
mov
cmp
jmp
inc
adcb
ds
or
stos
mov
mov
or
cmp
pop
xor
pop
ja
xchg
sbb
add
mov
leave
rclb
daa
rolb
and
cltd
adc
adc
jge
dec
sbb
or
stos
pushf
push
lss
pop
loope
pop
jecxz
sahf
inc
orb
jmp
pop
stos
xchg
add
inc
cld
pushf
loopne
ret
leave
or
out
inc
aas
lods
pop
push
ss
xor
fisubrl
and
int
sbb
ds
out
jne
adc
into
enter
enter
lea
jmp
int3
mov
movsl
adc
int3
or
xchg
ss
aas
xor
add
mov
daa
jbe
pop
sub
rcrb
cmp
shr
xchg
adc
stos
adc
or
sub
enter
lea
fdivr
add
out
in
test
loopne
xchg
sub
ret
inc
mov
mulb
clc
mov
cmc
inc
jp
mov
cmp
in
push
lahf
nop
push
xchg
inc
aad
cs
icebp
adc
mov
pop
int3
leave
stos
in
shll
mov
enter
xor
inc
shlb
not
push
rcrl
inc
fidivrs
xchg
pusha
ret
sub
sbb
clc
jbe
push
cmp
mov
sbb
and
and
dec
cs
pop
scas
bound
stos
sbb
stos
andnps
fnsave
add
push
jl
xchg
mov
popf
add
xlat
cmova
stos
jns
xor
repnz
mov
push
adc
jo
orb
add
add
lret
negb
mov
lods
pop
aas
xor
mov
into
insb
pop
pop
mov
or
mov
ret
pop
in
push
divl
add
popf
mov
mov
outsb
aam
inc
aaa
lods
bswap
inc
test
negl
cmpsb
out
xchg
hlt
sub
mov
sarb
stc
fists
movsl
jo
clc
mov
cmpsl
pop
inc
sahf
or
add
mov
cmpsb
mov
xor
cmp
mov
jo
push
arpl
push
jmp
or
or
xchg
fs
adc
loopne
push
rolb
add
jle
jne
jp
adc
dec
mov
inc
sbbb
stos
movsb
push
push
insb
dec
push
xchg
cmpsl
cmp
xchg
mov
jl
push
leave
adcl
lock
in
push
das
mov
cmc
push
scas
push
rep
sub
mov
xor
les
push
ficomps
adc
and
fsts
adc
xor
cmpsl
or
nop
sub
andb
push
repz
sbb
pop
cmp
pop
jae
push
pop
dec
fisubl
adc
lods
mov
daa
imul
jne
movl
lock
pop
push
and
mov
push
inc
xor
mov
and
mov
inc
popf
inc
test
insb
das
hlt
test
sbb
jns
insb
mov
ds
insb
mov
mov
cld
lcall
je
inc
sbb
jecxz
dec
aaa
int
pop
jo
rcrb
xor
xor
loop
mov
mov
mov
mov
icebp
into
mov
movsl
and
and
nop
xchg
xchg
in
rclb
fimull
fildll
outsl
jno
js
and
pusha
mov
fnstsw
inc
fcmovnb
pop
aam
cwtl
push
mov
notb
pop
rcll
push
popa
sahf
inc
adc
jge
sbb
xlat
jo
pop
fwait
mov
mov
mov
mov
shr
fistl
jmp
mov
stos
sarl
push
xor
pop
je
movsl
popa
loope
addr16
psrlq
aas
lea
imul
lock
enter
inc
xor
insl
pushf
adc
rolb
aaa
fdivs
or
cli
add
fistpl
jbe
mov
mov
outsl
nop
pop
push
ret
jmp
push
and
and
lock
jae
out
cs
enter
jge
jge
dec
ret
fs
dec
sbb
iret
shrl
in
add
inc
pop
lcall
pusha
push
adc
fst
mov
push
xor
and
nop
xor
fcomps
jb
daa
sbb
jno
adc
push
in
int
xchg
cmp
xor
arpl
stos
imul
or
cmpl
popf
int
push
push
jno
or
scas
push
mov
loopne
pop
pop
push
insl
insb
fwait
lods
outsb
dec
mov
mov
and
adc
add
and
cltd
and
mov
int
cmc
xchg
xchg
cmpb
aad
pop
jo
test
or
sbb
jne
mov
cld
xchg
icebp
mov
mov
mov
or
dec
ss
or
xlat
push
jle
sbb
in
pushf
sbb
jb
fcmove
jbe
pushf
sub
jo
mov
xchg
jle
mov
scas
sbb
adc
xchg
pushf
cli
addb
out
roll
mov
inc
and
jbe
xor
ss
fdivrl
pop
arpl
xchg
jg
mov
fcmovnu
aam
jns
das
orl
into
push
dec
les
mov
mov
or
jno
out
js
add
sbb
mov
xchg
movntps
jecxz
das
in
mov
mull
rcrl
es
aad
mov
ja
popf
sub
adc
cmp
cld
add
add
sahf
aas
and
cld
push
mov
or
jp
aas
inc
cmpsb
or
mov
push
push
pop
int
lds
inc
scas
insl
repnz
and
imul
xchg
inc
cld
scas
nop
mov
mov
add
inc
adc
cmpsb
sub
pop
push
dec
mov
gs
lock
pushf
je
xchg
jmp
xor
iret
shl
out
mov
lods
adc
jg
insb
mov
pop
or
idivl
ret
adc
lock
cltd
out
enter
jb
inc
cmp
jns
fs
push
loopne
or
mov
sti
lock
adc
mov
out
add
sbb
fidivs
jmp
jo
add
daa
aam
mov
dec
mov
loop
add
mov
xlat
add
outsb
pop
cmpsb
push
ss
lock
dec
subl
aam
test
cmp
dec
hlt
or
sub
adc
je
inc
xchg
sub
outsb
fmul
add
scas
jno
sbb
xchg
loop
rdpmc
push
es
out
arpl
push
jae
popa
outsb
aaa
cwtl
insl
mov
pushf
push
js
lret
iret
jnp
icebp
push
xchg
jge
je
dec
or
jno
push
push
mov
or
sbb
xchg
fwait
notl
pop
add
jno
es
aam
loope
dec
loope
xchg
stos
xchg
mov
add
adc
cmp
out
sti
push
sub
cmc
inc
call
inc
sbb
pushf
dec
jns
mov
out
jge
mov
cmp
cmp
mov
lods
gs
dec
lahf
loop
in
out
mov
sub
fidivrs
push
das
cmp
cmp
mov
mov
mov
xchg
in
sarb
xor
leave
lds
lods
lods
push
cmp
repnz
mov
cmc
mov
push
filds
xor
add
xchg
in
pop
test
outsl
lock
jmp
aad
xor
ret
je
out
add
nop
or
mov
sub
addb
xchg
sub
sub
test
or
out
lds
test
sbb
divb
lea
inc
sub
push
adc
imul
cmp
sub
fs
cli
add
lds
mov
cmpsl
sbb
sub
pop
jne
xchg
cmpsl
iret
mov
fwait
mov
arpl
aam
jne
imul
pop
inc
mov
mov
out
movsl
loop
sub
cmp
inc
adc
imul
loopne,pt
pop
or
in
dec
jl
int3
iret
dec
cmpsb
stc
or
push
mov
and
jl
mov
xor
movsb
mov
jmp
push
adc
in
je
inc
jp
into
cmp
mov
mov
and
pop
mov
inc
lods
popf
mov
xor
scas
outsb
jmp
dec
dec
mov
fidivrs
mov
mov
lahf
andb
xchg
shl
mov
call
mov
mov
pop
out
in
repnz
and
cld
fists
pop
stos
addr16
xchg
mov
mov
xchg
push
sbb
push
loopne
lret
dec
sbb
cld
push
sub
dec
js
bound
hlt
sbb
incb
pop
leave
mov
sub
cmp
push
out
mov
ret
fmul
mov
std
rclb
stos
mov
sub
dec
je
or
cli
movl
loop
out
pop
or
xor
ret
mov
fistpll
outsb
icebp
xor
les
dec
sbb
xchg
xlat
mov
cmp
movsb
xchg
adc
cmp
jno
or
mov
rorb
fwait
cmp
out
clc
mov
hlt
les
xchg
inc
jno
adc
inc
or
fincstp
dec
insl
insb
arpl
pop
loopne
hlt
cltd
mov
xchg
scas
push
cmpsl
andb
notb
xor
out
adc
push
sbb
pop
movsb
pushf
popf
jnp
inc
fcompl
clc
out
xchg
adc
inc
loop
and
adc
bound
xlat
pop
adc
cmpsb
xorl
mov
adc
pop
into
imull
nop
inc
dec
pop
pop
fldcw
inc
lret
mov
xchg
negb
mov
cmp
dec
pop
cwtl
xchg
rcrl
fistpl
jne
shr
test
jo
push
cmp
sub
xchg
push
or
or
add
add
or
gs
pop
sub
jmp
inc
add
push
sub
inc
push
adc
mov
and
stos
test
out
mov
inc
pop
add
sahf
mov
xchg
mov
negb
scas
mov
std
loopne
jne
add
dec
cwtl
int3
mov
inc
hlt
fidivrs
cmp
jge
xchg
popl
dec
cmp
push
jl
mov
mov
xchg
stos
jns
int
sbb
mov
fbstp
mov
xchg
subl
shll
jb
insb
int
ja
dec
mov
outsb
or
jno
test
or
jmp
shlb
sbb
jb
mov
pop
data16
cltd
cmp
scas
cld
dec
cwtl
dec
stos
dec
shll
jmp
imul
mov
jne
or
mov
in
sub
mov
or
xor
imul
inc
popf
mov
inc
ja
sbb
inc
fdiv
shlb
mov
jno
test
pushf
mov
pop
pop
sub
lods
cmp
loop
sub
fwait
stos
ja
mov
movsl
shl
out
nopl
imul
icebp
push
rorl
sub
adc
add
dec
mov
add
push
xchg
jmp
pop
stc
cmp
sbb
sbb
addr16
pop
out
or
dec
sbb
mov
mov
outsb
inc
rolb
lret
or
dec
imul
xchg
add
sahf
ja
cmp
mov
add
bound
mov
ss
lea
sub
cmp
mov
push
or
jno
dec
push
bound
jg
pop
mov
mov
outsb
mov
mov
push
cs
mov
outsl
push
scas
addr16
sbb
mov
lret
mov
or
jmp
add
cmp
in
in
out
test
xlat
mov
mov
aas
cmp
cs
pop
add
lock
scas
fists
arpl
dec
mov
push
out
xchg
shlb
lods
frstor
push
and
inc
aad
cwtl
dec
int3
or
mov
aam
sar
jbe
mov
hlt
cmp
aam
sub
imul
inc
xchg
cmpsl
mov
jns
insl
ret
mov
movsb
pop
in
jb
sub
inc
mov
adc
loop
cmp
add
cltd
push
dec
xor
mov
nop
xchg
mov
stc
stos
pop
sub
test
inc
add
js
mov
inc
mov
and
mov
mov
adc
sbb
pop
out
adc
js
xlat
dec
movsb
xor
cwtl
inc
push
fbstp
lea
icebp
jno
sahf
cmp
cs
test
sub
int
push
movl
notb
xor
iret
aas
pushf
mov
mov
push
or
xchg
in
or
jne
jl
ds
icebp
fwait
push
cld
inc
sub
stos
push
addr16
push
pusha
jae
fdivr
movsb
xchg
push
inc
lea
mull
stc
dec
popa
lcall
and
sbbb
push
sbb
sbb
out
xchg
pop
sbb
pop
pop
mov
xchg
cmp
test
xor
jb
xor
push
cltd
mov
popf
push
mov
cli
enter
sub
adc
pop
adc
pop
cmp
adc
adc
and
daa
push
push
pop
cmp
pusha
sub
xchg
pop
jp
pop
and
mov
pushf
es
gs
inc
xchg
jle
xor
imul
mov
aam
and
xchg
pushf
daa
lods
xchg
push
imul
std
xor
sub
add
xchg
push
dec
rcrl
mov
insl
push
cli
stos
lret
adc
ja
mov
sub
mov
cmp
dec
dec
dec
pop
xor
jo
pop
test
sbb
mov
arpl
clc
pop
push
shl
jns
in
mov
in
aas
aad
hlt
add
adc
sbb
mov
in
cmp
ja
pop
icebp
jl
jo
fsubrs
push
sbb
adc
mov
movsb
sub
sub
push
shl
cmpsb
bswap
cmc
pop
ljmp
add
jmp
out
xor
jg
test
adc
rorb
daa
mov
movsl
pop
nop
clc
out
je
add
lods
dec
rcrb
mov
cmp
loopne
dec
aam
movsl
imul
ljmp
cs
mov
ret
test
fidivrs
sub
lahf
mov
pop
xchg
fimuls
sahf
ss
lods
pop
out
mov
jp
jno
fisubrl
flds
fwait
mov
mov
repnz
call
ret
cltd
cmpsb
xor
enter
stos
push
sbb
push
adc
and
push
imul
add
call
rorl
insb
lds
lea
ljmp
repnz
out
dec
and
add
and
enter
adc
add
dec
popa
mov
mov
adc
push
cltd
mov
mov
and
sarb
pop
pop
int
xchg
jns
into
xor
pop
xchg
mov
jbe
in
jne
cmp
in
push
aas
xchg
and
jge
mov
fimuls
xor
push
cmpl
loopne
fsubrp
xor
pushf
push
icebp
xchg
add
and
aas
mov
lods
in
dec
sbb
popa
mov
jecxz
pop
push
add
in
sbb
imul
pop
adc
xor
lods
and
pop
mov
lds
setae
andb
imul
sub
ja
xorb
out
repz
movsl
aam
pop
jb
pop
or
jbe
or
inc
es
rolb
xor
push
dec
arpl
push
addr16
mov
sub
outsl
mov
sbb
stos
pop
cld
sbb
lea
scas
jns
add
repnz
jmp
add
arpl
aad
mov
fiadds
outsb
loopne
out
xchg
mov
xor
pop
pushf
mov
adc
add
daa
fisubl
movsb
mov
xchg
iret
inc
sbbl
mov
pop
gs
sbb
lods
outsb
mov
pop
jp
dec
cld
les
pushf
fisttpll
inc
int3
jnp
aam
dec
fdivp
xor
adc
jbe
divl
and
mov
mov
mov
loop
ljmp
imul
push
sub
notb
or
sub
filds
add
out
xchg
pop
dec
dec
and
mov
cmp
pop
xor
mov
xchg
data16
lret
sbbl
push
pop
or
cmp
test
lods
mov
into
push
jge
or
rorb
aad
push
mov
imul
lods
loope
rclb
pushf
push
or
xchg
xchg
pop
or
popl
nop
leave
cmp
jg
cmovne
xchg
shrb
test
test
jns
dec
pop
movl
sub
imul
mov
mov
test
push
andb
adc
popa
mov
mov
or
scas
xor
test
push
lcall
cmp
push
mov
les
lret
jecxz
jnp
mov
xchg
jmp
mov
xchg
sub
xor
jo
in
sub
sub
loope
jno
sub
fisubl
cli
enter
mov
outsl
insl
fcmovu
in
test
test
bound
mov
add
dec
cmpb
adc
popf
jbe
nop
inc
movsb
mov
outsl
or
cmp
imulb
into
ljmp
cmpsb
adc
mov
mov
addr16
shlb
xchg
xchg
pop
sbb
mov
in
mov
push
mov
ja
lret
mov
push
popf
fisttps
sti
sub
shl
cmp
popa
push
arpl
xchg
cmp
and
pop
cli
loopne
cmp
jle
fcmovnu
mov
xlat
mov
lret
add
xor
addr16
pop
std
shl
cmpsl
addr16
inc
std
add
mov
cmpsb
daa
aad
mov
xchg
sub
aad
mov
in
xchg
dec
mov
fbld
jmp
and
rcr
mov
pop
sub
fcoml
mov
cmp
mov
ret
xchg
ljmp
inc
xchg
sbb
test
mov
lock
ja
adc
xchg
push
mov
stos
inc
jmp
arpl
dec
test
es
mov
insl
pop
test
popf
arpl
jb
outsl
dec
inc
xor
sbb
adc
lahf
sub
lock
adc
add
les
ror
shl
shrb
jnp
cld
xchg
xchg
mov
mov
clc
push
test
pop
bound
sub
loopne
stos
and
icebp
cmpsl
or
inc
in
subl
test
pop
ljmp
cmp
ret
addr16
sbbb
aaa
push
mov
pop
jns
popf
movsb
cmp
mov
rcl
movsb
stos
mov
cmp
test
pushf
call
insl
repnz
mov
sub
clc
inc
mov
dec
ret
cmpsl
pusha
mov
aas
outsb
shrb
mov
cmp
or
and
jmp
sahf
xor
out
cmp
jmp
pop
and
dec
out
jp
pop
xor
nop
clc
movb
adc
pop
mov
mov
mov
push
test
cwtl
cmc
jg
adc
jae
ja
std
jno
push
mov
dec
outsb
dec
push
repz
out
sar
fcompl
dec
cmc
lock
mov
lods
xor
imul
es
inc
repz
outsl
sub
mov
repz
push
sub
ljmp
stos
or
pop
mov
push
mov
push
dec
filds
xor
std
jmp
stc
pop
call
push
add
mov
ret
sbb
in
movntps
pop
ss
popa
mov
fstpl
pop
push
outsl
or
scas
scas
sahf
mov
scas
or
sbb
inc
je
push
stc
adc
jno
xchg
pop
mov
imul
jns
pop
mov
in
dec
jns
mov
repnz
movsl
test
mov
adc
loopne
push
cmp
lret
repnz
imul
cmc
sub
stos
xchg
fidivs
sub
mov
xchg
add
jns
sbb
sbb
cmova
inc
insb
cmp
add
push
adc
push
inc
mov
dec
xor
cltd
dec
and
test
jnp
clc
roll
cmp
int
loop
mov
mov
mov
cmpsb
popf
cwtl
fists
inc
push
xchg
inc
push
dec
sub
jl
xchg
add
inc
dec
dec
mov
data16
add
xor
xchg
out
andl
xor
sbb
push
stos
stc
nop
push
aaa
iret
sbb
pop
xor
insl
jge
stos
xchg
out
pop
cmp
arpl
push
ficoms
add
aas
imul
mov
or
ljmp
sarb
jae
stos
adc
mov
mov
or
jge
out
sub
cmpsl
adc
mov
in
jb
pop
cmc
jp
mov
mov
jno
fwait
xor
adc
mov
dec
jle
call
stos
aas
pop
xor
call
sbb
add
mov
push
pop
mov
adc
xor
testl
or
lds
sbb
inc
idivb
push
jbe
jle
test
xchg
mov
or
mov
enter
adc
xchg
jb
jbe
dec
jb
adc
cmp
xor
enter
adc
insb
insl
mov
add
dec
gs
xchg
and
repz
js
jnp
xor
or
test
pop
lahf
shl
mov
push
adc
jb
mulb
xchg
pusha
mov
cmp
pop
jecxz
cmpsl
cmp
ja
roll
aam
stos
mov
in
outsl
addl
insb
mov
inc
fcomp
fmuls
inc
pop
xchg
sub
out
stos
repz
push
jae
ja
jns
out
push
sbb
or
mov
fwait
and
push
test
adc
sahf
push
mov
mov
out
pusha
mov
out
xor
into
mov
sahf
xor
push
xchg
loopne
ss
insl
mov
int3
shl
shl
push
jmp
fdivrl
push
int
arpl
mov
shrl
rorb
leave
cmp
sub
jmp
xchg
push
out
iret
xchg
fcmovnbe
mov
jecxz
mov
push
mov
sub
out
lds
andl
sbb
add
jno
inc
lret
pop
pop
mov
je
test
xchg
adc
fidivrs
fstl
insb
sbb
repz
jae
sti
shll
test
jle
mov
mov
insl
mov
add
dec
mov
xor
jecxz
add
xchg
xor
mov
push
pop
sbb
xorb
cmp
int3
mov
aas
cmp
adc
and
nop
lds
mull
inc
sub
notb
dec
mov
jne,pn
mov
cs
pop
test
aam
loope
or
stc
and
lahf
fstp
xchg
fnstenv
and
pop
mov
dec
jmp
pop
sahf
sub
lods
std
add
dec
push
call
scas
flds
xor
mov
xchg
rcl
or
mov
aaa
jne
jmp
jns
push
pop
test
jp
test
iret
stc
jmp
cmpsl
xchg
lods
sub
xlat
sbb
cmp
xor
jge
sbb
sahf
nop
pop
push
jmp
imul
xor
out
pop
mov
rcll
insl
push
out
dec
fbstp
ds
fs
shlb
sub
mov
rorl
add
jo
in
push
pop
jmp
xlat
enter
adc
sti
jne
imul
jbe
jbe
inc
movsb
fwait
nop
aad
dec
jp
fldl
cmp
inc
xor
int3
xor
shrl
rcll
fsub
lea
outsb
jne
insl
out
mov
cmp
pusha
cwtl
lds
sub
out
add
fidivrs
jae
xchg
mov
pusha
xchg
mov
sbb
test
mov
mov
and
mov
cwtl
lods
mov
dec
loopne
das
orb
mov
mov
mov
push
scas
pop
loope
ficoms
adc
jo
lcall
jae
push
sbb
out
inc
add
jb
mov
stos
int3
test
outsb
outsl
sti
imul
gs
in
or
xchg
xor
les
fucomp
cld
xchg
dec
movsl
and
std
or
xchg
jbe
and
add
stos
pusha
pop
mov
pop
in
pop
js
ja
int3
xlat
orb
push
mov
jl
insl
mov
inc
outsl
cmpsl
dec
or
lahf
jbe
xchg
xor
sbb
mov
sub
test
pop
xlat
enter
mov
daa
and
jae
xor
mov
and
dec
cld
mov
cs
pop
and
xchg
and
pop
jae
hlt
xchg
cmp
inc
sub
inc
arpl
mov
aam
xor
add
inc
in
leave
pusha
iret
mov
ss
nop
mov
out
and
loope
push
mov
shrl
ljmp
push
nopl
or
dec
mov
out
and
lock
xchg
sti
into
push
dec
dec
dec
lahf
cs
popf
push
mov
sbb
cmp
cltd
cli
sbbb
cmp
out
sub
ds
jmp
es
cli
add
loope
pop
scas
pusha
clc
test
and
into
orl
push
xlat
mov
stos
dec
inc
out
xchg
mov
lret
dec
dec
sbb
nop
jmp
cmp
outsl
addr16
cmp
mov
cltd
in
jb
lret
std
xor
ss
imul
sub
cmp
outsb
inc
loope
cld
popf
in
or
jle
xchg
xchg
sahf
mov
rclb
mov
in
negb
dec
mov
jge
mov
cltd
xchg
in
addr16
in
push
js
cmp
jge
add
jmp
cli
jns
cmp
jge
nop
pop
repnz
jnp
push
add
fcoml
movsl
scas
add
mov
xor
mov
mov
out
adc
fwait
mov
inc
jp
and
push
add
adc
cmpsl
icebp
jno
loope
push
popa
scas
mov
sbb
nop
test
pop
out
sbb
push
and
aas
add
es
outsl
test
sub
test
or
xchg
jmp
push
xor
xchg
jge
dec
sub
cltd
sbb
mov
push
xlat
mov
sbb
loope
lods
stos
fisubl
or
or
test
sub
fnstcw
or
pop
push
lock
add
rorl
mov
pop
insb
bound
push
subl
add
dec
xlat
push
fldenv
ret
or
pop
dec
outsb
mov
push
adc
xor
iret
lahf
int3
mov
mov
xchg
inc
dec
ds
mov
dec
push
jo
cmpl
sahf
or
stos
mov
sar
ljmp
sti
in
cmp
movsl
jno
nop
les
mov
cmp
std
add
into
adc
mov
dec
test
cmc
ljmp
push
in
push
aaa
mov
sub
adc
lret
sbb
gs
pop
daa
testl
cmp
out
sub
mov
pop
or
mov
or
push
pop
lods
push
test
out
xor
and
enter
cmp
idivl
sbb
sti
mov
and
add
jbe
xchg
or
xchg
sarb
sbb
add
pop
repz
push
mov
lea
es
pop
jp
ds
shll
pop
popf
mov
aaa
sbb
xor
into
aaa
test
data16
cmpsl
jl
mov
cltd
nop
lods
outsb
push
cmp
mov
outsb
fidivrs
shll
mov
fwait
or
mov
pop
lret
or
mov
nop
adc
cmpb
xor
sbb
lret
pop
mov
andl
push
xor
bound
lock
jno
mov
adc
or
nop
push
mov
fistps
adc
dec
add
sbb
pop
mov
xchg
clc
sub
mov
jge
call
inc
push
outsl
inc
jecxz
xchg
lret
es
mov
lds
push
pop
popa
sahf
mov
or
sub
orb
ret
jb
and
xchg
repnz
in
repz
pop
adcl
sub
add
cltd
aaa
push
mov
xchg
mov
lcall
fdivs
add
add
sbb
mov
pop
aaa
jmp
mov
dec
adc
subl
lock
add
pop
jnp
jle
mov
pushf
out
cs
mov
frstor
xchg
pop
lods
pop
mov
push
dec
int3
add
shrb
dec
jo
mov
push
ljmp
jno
cmpsb
jmp
ja
push
cmp
xor
pop
das
push
cmp
ret
loop
jns
or
sub
lods
add
xor
dec
sub
out
fcompl
jmp
daa
movl
repz
dec
fbstp
out
loopne
add
pop
push
or
xor
or
jne,pn
sub
bound
mov
sbb
sub
inc
movsb
iret
adc
mov
cmpsb
in
mov
in
arpl
and
popa
fsub
pop
scas
pop
movsl
addl
fdivp
test
push
xchg
jl
pop
sbb
out
jbe
sahf
sub
push
loopew
add
aam
cltd
movsb
out
sub
mov
cld
sbb
testl
xchg
xor
js
mov
push
aaa
out
out
mov
jns
out
push
xchg
jo
sub
out
xchg
xchg
push
jno
in
jecxz
adc
aas
mov
roll
mov
scas
sub
jno
mov
sub
jae
pop
out
inc
jmp
add
xchg
cmp
jg
xchg
cmc
hlt
add
pop
jno
mov
mov
cmp
out
std
ljmp
and
pop
dec
jne
scas
cmovg
ljmp
adc
sbb
stos
inc
inc
pop
lcall
leavew
mov
mov
loop
sub
imul
mov
mov
push
push
sbb
mov
out
fdivl
roll
fwait
cmp
aaa
push
ljmp
movsb
jo
add
push
xchg
push
scas
enter
hlt
jno
sub
xchg
cmp
xchg
push
loope
pusha
lret
lea
inc
arpl
adc
xor
ja
and
mov
push
add
xor
popa
scas
stc
jnp
sub
nop
dec
cmp
cwtl
dec
pop
lods
into
add
sbb
jge
add
outsl
rorl
push
cmp
les
adc
jecxz
add
xchg
fcmovnbe
dec
fcmovb
pop
pop
ret
aas
cmp
dec
inc
xor
xor
popa
lcall
mov
fs
sbb
push
nop
sahf
add
fnstenvs
mov
dec
stc
test
xchg
pop
shrl
inc
fstl
fidivs
in
or
cmp
mov
lret
mov
fldt
dec
xor
rclb
lock
xlat
mov
stos
es
and
sub
cmp
out
add
add
or
fidivrs
das
cltd
mov
es
fimull
lds
or
popa
faddl
push
mov
ret
test
fwait
divl
ja
adc
jns
pslld
ret
clc
cltd
push
or
and
lret
cmp
inc
rcrb
xor
clc
xor
push
sub
mov
lcall
push
scas
adc
call
loopne
cmp
out
ljmp
adc
je
sti
add
fs
pop
and
lret
inc
add
xchg
xchg
call
call
add
dec
hlt
xor
jp
and
jb,pn
and
cmp
rol
mov
or
mov
jl
scas
dec
sbb
ret
stos
gs
hlt
xor
scas
pop
cmp
stc
outsl
jg
xchg
sub
je
cs
jg
sbbl
mov
xchg
cltd
or
jno
decl
cs
lcall
addr16
in
punpckhbw
add
jae
popf
adc
imulb
mov
cmp
sbb
xchg
movsb
push
sbb
jbe
inc
xor
jl
lret
add
aad
jbe
xlat
in
and
daa
sbb
cmpsb
adc
test
int3
inc
leave
mov
xor
negl
pop
or
xchg
adc
jo
adcl
repz
push
adc
mov
divb
insl
pop
cli
imul
xor
and
add
cmp
sar
in
das
xchg
inc
aas
inc
jb
xor
fwait
pop
outsb
fwait
dec
les
les
cltd
xor
lret
ret
ja
icebp
xlat
mov
cs
adc
cmp
js
dec
out
in
stos
dec
movsl
jbe
inc
call
std
adc
jne
js,pt
out
fnstcw
adc
mov
or
ja
or
mov
add
sbb
mov
dec
and
jno
push
add
or
push
movsl
mov
mov
rcll
add
jne
mov
mov
push
dec
imul
and
pop
aaa
jge
ror
ss
push
mov
jmp
movsb
jno,pn
sub
lahf
lods
push
push
dec
stos
xor
loopne
xchg
je
pop
add
and
cmpsb
cmpsl
and
les
xor
inc
cmpsl
rolb
ret
and
cmp
lret
in
mov
push
jne
xchg
cmp
out
sub
cmp
testl
shlb
stos
iret
fsub
jae
leave
adc
int
pop
push
das
jbe
sahf
jl
xchg
sbb
arpl
pop
xchg
jns
cmp
adc
mov
jb
shrl
xchg
add
cmp
pop
repz
enter
loope
adc
or
lock
icebp
cwtl
rsqrtps
iret
lret
adc
jne
mov
mov
push
mov
xchg
mov
xlat
aas
lea
pop
and
pop
ss
jg
scas
iret
scas
repz
pop
lods
jecxz
mov
inc
iret
xor
xor
jb
shrd
pop
dec
xchg
ljmp
aas
lods
lahf
pop
cmp
push
in
cmp
fmull
adc
sub
jge
pop
int
sbb
pop
xor
fstl
in
mov
outsl
sub
push
stc
push
shll
rol
cmp
movl
or
xor
rolb
push
or
jecxz
inc
lahf
jb
out
aad
pop
popa
sahf
dec
lea
sbb
fidivl
call
dec
mov
or
jno
push
fistps
xor
enter
and
test
xchg
and
ret
mov
mov
scas
adc
adc
xchg
push
mov
mov
cmp
jno
int
insl
xchg
gs
testl
and
stos
xor
movl
push
cmovns
leave
and
adc
lock
push
int
mov
dec
xor
inc
xchg
or
lret
clc
call
xchg
daa
js
test
inc
cld
cmp
sbb
repz
test
insb
add
data16
push
or
mov
enter
xorl
fbstp
leave
jecxz,pt
cmpsb
xor
push
jecxz
push
icebp
xchg
mov
inc
lock
fcmovnbe
inc
sbb
jmp
dec
mov
sub
inc
jmp
sti
lcall
pop
imull
dec
sub
fwait
aaa
aam
inc
sbb
xlat
sub
push
pop
sbb
mov
xchg
adc
fidivs
xor
data16
xor
addl
out
mov
lret
inc
ret
mov
sub
jo
adc
jo
insl
adc
out
insl
inc
or
mov
cmp
out
popf
ret
sti
popa
xchg
mov
subl
pop
sub
and
xchg
and
sarb
jmp
lahf
jge
dec
outsl
push
std
sbb
add
mov
push
shl
scas
jecxz
rclb
push
mov
xor
sbb
clc
bound
sbb
mov
xchg
jmp
dec
mov
dec
das
bound
scas
subb
mov
jno
imul
cmpsb
lahf
xor
pop
sbb
shl
mov
add
bound
sub
inc
mov
mov
mov
scas
adc
jnp
movd
lds
daa
pop
dec
outsl
shll
mov
xchg
mov
mov
dec
mov
popa
add
aad
or
or
out
mov
cwtl
jb
push
jecxz
aaa
divl
jb
cli
push
mov
out
adc
popf
lods
nop
icebp
cltd
inc
cld
add
sub
movsb
cmp
and
loopne
mov
jmp
mov
in
in
sbbb
inc
add
fisttps
mov
and
adc
push
mov
hlt
lret
in
cwtl
pop
test
clc
push
cmpsl
sub
movsb
adc
mov
outsl
push
dec
jecxz
xor
adc
push
pop
push
pusha
add
sub
lret
and
add
fcomip
jne
stc
or
mov
or
mov
out
imull
mov
movsl
fiaddl
enter
mov
jo
sti
pop
jecxz
cwtl
xchg
in
mov
in
add
enter
add
inc
mov
adc
pop
sbb
dec
or
fs
push
lea
or
push
in
jg
int
dec
jnp
lahf
notl
jle
movsl
call
xchg
mov
jmp
lock
pcmpeqw
add
xor
out
mov
aaa
mov
xlat
cmp
cmp
xchg
lret
sahf
xor
cmp
sbb
cmp
cmpsb
fidivrs
fcom
and
inc
pop
loop
frstor
fsubr
negb
inc
pushf
popf
inc
in
cmp
cmp
aad
enter
ja
or
shlb
xchg
mov
lahf
mov
lret
popf
lcall
mov
rorl
ud0
sub
inc
mov
sub
xlat
mov
mov
das
push
dec
mov
call
push
icebp
sarb
scas
and
insb
xabort
or
add
jne
jb
jl
mull
jp
jle
sub
aad
xor
sub
push
xchg
mov
xor
mov
sub
mov
cmp
add
out
jecxz
mov
dec
out
cmpb
mov
mov
inc
xor
mulb
adc
or
xor
xchg
inc
out
xchg
push
xor
mov
sub
xchg
je
inc
inc
sub
les
jnp
xchg
mov
popf
out
ret
test
mov
inc
pushf
xchg
push
xor
popa
std
xor
lcall
pop
out
sbb
dec
int
mov
div
lods
mov
addr16
jns
stos
aad
xor
push
mov
lods
or
jl
dec
in
xor
sti
add
cmp
aaa
lret
sbb
inc
lret
mov
loope
inc
out
xchg
jle
movsl
inc
sbb
popa
adcb
xor
in
mov
lret
or
lret
stos
imul
fcmovu
and
fimull
in
dec
push
sbb
sub
sbb
in
test
mov
push
inc
and
push
jle
push
jmp
fdivrl
jmp
lods
jae
inc
cltd
jecxz
into
mov
xchg
call
dec
sbb
imul
push
cwtl
xchg
mov
mov
jmp
xchg
addr16
sub
jecxz
inc
adc
leave
sarb
cmc
or
xchg
cmp
andl
jl
mov
cmp
enter
xor
stos
sti
aam
mov
gs
jmp
lea
sub
xor
movsl
add
cs
aas
xlat
jae
pop
in
cwtl
outsl
sub
jge
adc
iret
lods
addr16
push
xor
in
fs
testb
mov
loopne
sbb
movsl
addl
inc
incb
cld
mov
xchg
fstps
lds
dec
loop
jp
xchg
and
outsb
jae
dec
out
adc
popf
addr16
mov
sbb
add
sahf
sti
negb
xlat
cmp
add
nop
mov
aam
ss
push
enter
lret
stos
cmpsl
jo
lods
nop
inc
mov
mov
and
mov
hlt
mov
fptan
out
stos
xchg
lds
jg
imul
in
out
cld
bound
and
xor
sub
jmp
popa
int3
idiv
push
mov
outsb
xor
dec
mov
pop
out
mov
imul
outsl
outsb
cmpsl
xchg
out
jle
int
ret
ficoms
mov
mov
push
add
xchg
sub
push
pop
or
test
xlat
add
sub
pop
jbe
xchg
mov
xchg
mov
xchg
jb
sub
mov
or
imul
outsl
insb
int
push
stos
sub
pop
xchg
xchg
sbb
mov
inc
sub
lcall
xchg
and
out
rcrb
in
sub
push
mov
mov
mov
bound
adc
dec
and
xchg
xchg
subl
jne
jo
cmc
test
push
xorb
aam
xchg
pop
push
imul
pushf
ja
inc
inc
inc
fistpll
cmpsl
and
sti
or
xchg
popa
and
pushl
push
dec
pop
add
mov
aas
xchg
vcvtpd2dqy
outsl
and
aas
int
out
fxch
mov
inc
or
cmp
xchg
fwait
push
push
shll
daa
mov
xor
fldcw
adc
xlat
xchg
in
mov
stc
iret
gs
push
lea
mov
cmp
xor
dec
mov
jno
xor
mov
push
mov
push
mov
rolb
inc
sbb
insl
or
push
daa
insl
jo
lods
mov
mov
aas
inc
mov
push
sbb
dec
jo
mov
in
xor
daa
in
or
dec
mov
outsb
pop
iret
sub
sbb
pop
nop
xor
stos
adc
mov
xor
pop
int
mov
pop
or
cli
dec
gs
outsb
mov
sahf
into
pusha
push
dec
rolb
jns
jmp
sbb
mov
daa
stos
pop
jl
pop
loope
push
cs
mov
jne
pop
jl
cmp
xor
or
pop
push
push
repnz
in
cli
adc
ljmp
flds
pop
lods
jmp
repz
scas
mov
cs
gs
mov
fadds
in
jb
cmp
mov
sbb
mov
mov
fs
cmp
and
xchg
push
dec
cmc
fwait
test
pop
mov
out
pop
pop
jb
subb
aas
jmp
xor
cmpsl
inc
cli
mov
je
xor
imul
movsl
push
fbstp
adc
dec
cmp
xor
cld
outsb
xchg
sbb
jo
mov
cmp
data16
or
dec
dec
mov
int
push
cmp
adc
mov
in
ja
dec
nop
mov
ret
pop
test
pop
xor
stos
cmp
sub
mov
pop
loop
dec
pop
sar
ss
xorl
adc
inc
dec
cwtl
inc
in
outsl
jb
aaa
leave
in
xor
bnd
add
dec
or
in
adc
pop
push
cmpsl
cmpsl
or
push
cs
add
daa
nop
xchg
stc
and
add
dec
mov
dec
lahf
negl
jge
mov
stos
mov
dec
xor
inc
sbb
jp
xor
mov
mov
push
xor
inc
mov
add
lret
inc
mov
imul
mov
and
sub
mov
aaa
adc
xchg
mov
sbb
cmc
sbb
insl
cltd
bound
fsubs
aaa
pushf
insl
inc
popa
scas
xchg
mov
cmp
lret
fs
cmpsb
lods
and
cmp
imul
jge
pminub
lock
loope
sub
cltd
inc
out
sbb
pop
fimuls
rclb
cmp
aad
mov
push
sahf
sbb
ds
int3
in
cmp
outsl
or
out
mov
mov
stos
out
cwtl
cli
xor
jb
lahf
aam
outsb
jne
cs
cmpsb
pop
inc
ret
rcll
cmp
push
sbb
xchg
sbb
push
mov
xor
mov
stos
in
test
sbb
dec
or
add
jl
hlt
or
sbb
out
clc
and
sbbl
fcos
xlat
aam
ds
sub
ss
dec
cmp
stos
rclb
add
fdivs
dec
leave
inc
add
lods
fwait
dec
pop
into
mov
jnp
mov
test
loop
dec
lret
popa
pop
mov
ljmp
jnp
jle
leave
pop
outsl
icebp
mulb
pop
clc
push
scas
cmpsb
das
mov
xor
decl
mov
popa
arpl
xchg
arpl
sbb
aaa
shrb
fcmovnu
stos
mov
xchg
push
in
les
shrb
jne
leave
pushl
aam
cmp
dec
bound
arpl
xchg
sbbb
mov
fmuls
push
sub
dec
and
aad
inc
pop
push
and
cmc
shll
int
pop
stos
sub
add
dec
lret
jge
and
mov
cmp
insb
fdivl
lret
xorl
sti
or
addr16
mov
dec
jle
pop
pusha
lret
ret
xorl
push
jl
inc
mov
add
andb
xor
xchg
push
adc
dec
daa
sub
sahf
lds
xor
test
xchg
jg
in
mov
mov
jne
test
imul
loop
push
sysret
je
std
push
test
cld
adc
int3
dec
ret
inc
mov
xchg
lcall
xchg
mov
push
or
out
js
xchg
in
mov
pop
pop
mov
in
xlat
cmpsl
aas
adc
orb
pop
cs
lret
and
lods
mov
dec
clc
popa
in
fiadds
aad
scas
loopne
push
push
outsl
push
jae
jp
jge
ljmp
movsl
mov
cmp
movsl
inc
cltd
mov
pop
sub
movsb
mov
lahf
push
rcrl
xchg
sarl
lods
xchg
fistpll
ret
gs
adc
loopne
idivl
or
mov
jmp
pop
es
aad
loopne
addr16
lock
fsubs
shrb
sti
xchg
int3
std
repz
cmp
push
pop
inc
dec
add
inc
xor
pop
stos
mov
sub
xor
mov
and
pusha
imul
add
imul
sti
rclb
stos
pop
push
shl
pusha
ljmp
xchg
jo
ret
mov
out
xor
mov
mov
pop
stos
dec
mov
mov
insl
push
mov
fisubs
jge
dec
lods
data16
div
aad
inc
sub
xor
inc
lock
cmc
shr
mov
fwait
jno
push
fidivrl
inc
jl
fs
inc
add
in
dec
imul
add
jne
fwait
adc
aam
adc
inc
test
mov
aas
sub
push
adc
ja
cmp
movsl
mov
pop
add
dec
lock
inc
das
jbe
mov
and
cmp
or
and
cmp
lret
cmp
daa
mov
push
mov
mov
mov
mov
stc
jo
lret
xchg
mov
jmp
cmp
pop
and
mov
xchg
and
mov
es
lea
fidivs
mov
lret
sub
divl
xchg
push
daa
leave
cmpsb
add
cs
mov
fisubrs
push
ss
shlb
loopne
addr16
orl
jp
shl
sahf
cmp
push
enter
fdivrl
cwtl
adc
xor
out
rcr
movsb
and
mov
mov
sahf
fninit
pop
mov
xchg
ds
fmul
push
mov
cwtl
push
mov
pop
cmc
sub
addr16
adcb
frstor
xchg
mov
mov
cmc
fildl
or
pop
xchg
lcall
test
mov
in
roll
loope
adc
ret
inc
jno
lret
mov
dec
jecxz
mov
push
or
adcb
pop
mov
add
sahf
jo
pop
mov
loope
push
cmp
int3
xchg
sbb
pmovmskb
nop
xor
inc
mov
icebp
push
jp
stc
repnz
lea
sahf
aam
pusha
or
shr
andb
dec
cmpsb
bound
mov
pop
and
jecxz
and
lods
xlat
int3
test
outsb
out
test
xlat
jns
lds
cmp
jb
int
jecxz
add
xchg
or
adc
cld
or
push
mov
movsb
fdivr
pushf
ret
enter
mov
loop
xchg
xchg
dec
inc
cmp
daa
ret
repz
lds
ds
sahf
lret
mov
xchg
or
inc
mov
xchg
push
inc
rorl
inc
mov
loopne
aas
mov
bswap
mov
dec
aas
repz
stc
icebp
add
adc
popf
ljmp
aaa
mov
xchg
setb
push
mov
pop
mov
je
jp
arpl
repz
cmp
rorl
hlt
gs
ljmp
mov
mov
subb
jge
lahf
outsl
sub
das
or
add
into
mov
test
cld
mov
xor
imul
aas
jcxz
pop
pop
into
lods
rcrl
sarl
mov
les
gs
and
push
jns
jo
inc
sbb
pusha
sub
test
and
xor
movsb
ficomps
shl
xchg
dec
pop
sub
sar
add
cmp
pop
js
pop
add
mulb
xchg
imul
fidivrl
test
or
loop
fwait
bound
fnstenv
adcl
mov
inc
dec
mov
cs
rolb
lea
adc
sbb
sub
cmpsb
push
std
cmp
sub
add
mov
jnp
pop
dec
in
testl
sbb
dec
loop
das
mov
imul
dec
sbb
icebp
inc
jecxz
int3
inc
mov
mov
aam
mov
or
pop
outsb
jmp
gs
loopne
sbb
push
daa
daa
cmpsl
sub
cmp
cwtl
fldl
jnp
fcompl
call
xchg
add
and
adc
lret
jmp
dec
cmp
sbb
inc
dec
adc
adc
aad
mov
repz
pop
inc
cmc
sub
jmp
mov
pop
xchg
test
mov
mov
fs
add
lds
mov
xchg
or
cmp
xchg
dec
mov
std
jbe
in
pop
pop
pop
lods
push
jge
test
lods
sub
sbb
pop
pop
mov
cli
hlt
pop
mov
testl
mov
in
daa
loopne
sub
jbe
mov
push
inc
lret
and
or
jge
movsl
adc
aad
push
or
icebp
jge
fcmovnb
pop
daa
pushf
sbb
loope
imul
fwait
pop
jp
adc
jne
ja
cmpsb
enter
in
push
sub
cs
or
sbb
and
sbbl
mov
mov
dec
add
clc
in
aam
lods
out
mov
pop
jl
push
push
ret
adc
xchg
sbb
mov
xchg
lea
aas
push
sub
push
mov
xor
sti
pushf
dec
es
inc
xchg
iret
cltd
mov
aam
push
mov
stos
fs
jnp
enter
xor
jmp
shll
dec
mov
add
clc
inc
pop
mov
mov
adc
add
call
add
fwait
push
imul
mov
sbbb
add
sub
cmp
jno
outsl
aam
iret
cmpsl
xchg
sub
cmp
adc
push
sbb
jae
nop
cmp
or
sbb
aam
fcomps
out
cld
mov
out
or
ja
mov
pop
fnstcw
movb
repnz
jne
fstpt
push
cmp
xchg
sub
xchg
ja
or
aam
xchg
sbb
jbe
mov
inc
sahf
int3
jle
mov
push
dec
pop
outsl
dec
pop
cltd
lret
jnp
mov
and
mov
mov
dec
mov
xchg
fistps
mov
gs
test
repz
lds
test
pusha
sbb
jae
or
fidivrs
sub
mov
cmpsb
push
pop
mov
rclb
and
in
or
lock
mov
xchg
outsb
xor
xor
sbb
pop
jle
out
and
pushl
pushf
enter
jp
xchg
mov
or
lods
inc
cmp
call
loope
push
cmp
daa
xchg
add
lahf
push
jg
sub
test
sarb
lock
out
push
icebp
inc
mov
or
add
pop
lea
push
int
push
repnz
into
xchg
popa
mov
repnz
ljmp
fwait
sbb
sub
or
fs
jl
adcb
pop
inc
xchg
jno
push
cltd
imulb
aad
lcall
jle
mov
or
push
test
sub
adc
dec
in
xchg
sub
je
and
fsubl
push
mov
movsl
pop
mov
movsb
imul
or
sbb
in
jae
mov
iret
dec
adc
jg
mov
lret
or
pop
jbe
enter
push
shlb
pusha
sub
or
cli
cmp
leave
and
push
test
xor
jle
hlt
aas
fidivrl
mov
jmp
mov
out
test
jnp
adc
dec
add
and
mov
aas
repz
sbb
mov
insb
aad
pop
pushf
mov
lahf
je
outsb
fiaddl
jmp
push
xchg
mov
decl
dec
imul
pop
stos
lret
sti
or
sbb
sbb
notb
outsb
fildl
jp
lods
cmp
pop
fisubl
stos
rcrb
cmp
ror
inc
std
je
fisubs
popa
daa
stos
lret
cmc
xor
add
pop
inc
fnsave
fidivrl
jne
push
ficoml
mov
aaa
test
pop
lcall
les
mov
dec
cmpsl
cli
sbb
sbb
fnstsw
jmp
xor
cmc
sub
pop
dec
mov
je
inc
ret
scas
fs
and
mov
insb
inc
andb
cmp
sub
test
push
jno
movsb
fidivl
xchg
bound
add
adc
push
jmp
daa
inc
push
push
ss
inc
jo
sub
add
push
stos
repz
sub
sbb
xchg
adc
into
mov
cld
inc
dec
xor
fcmove
mov
movsb
add
out
and
mov
add
mov
shlb
stc
sub
jnp
test
in
adc
aas
sbb
or
add
adc
loope
je
jb
xchg
lods
stc
jne
mov
sarl
xchg
xchg
loopne
int3
sub
test
cmp
shrb
loop
xor
gs
dec
fdivrl
loop
test
mov
jg
js
sbb
jns
in
add
jae
decb
xorb
mov
inc
mov
cs
arpl
or
push
adc
gs
cld
jae
push
lock
add
popa
mov
mov
cmp
scas
hlt
test
ret
pop
pop
push
push
mov
insb
in
jbe
mov
loop
cli
pop
and
xor
inc
inc
mov
cmp
out
std
vmread
or
mov
cs
pop
push
pusha
sub
sti
test
and
push
sub
or
xlat
dec
dec
fistpll
xchg
mov
jns
inc
nop
dec
sti
jl
lahf
or
xor
cmp
test
adc
rolb
movsb
mov
mov
or
nop
fnstenv
orl
dec
shll
add
pop
roll
cwtl
dec
pop
sti
xchg
repz
push
lds
jge
fisttpll
loop
adc
repz
iret
std
sbb
enter
push
add
imul
movsb
out
sub
lds
push
sbb
xchg
stc
ret
mov
shl
sub
cmc
fwait
xchg
xchg
push
aam
pop
insl
and
outsl
xor
or
mov
int
dec
test
jne
adc
pop
sub
inc
movsb
popf
inc
je
sbb
push
xchg
shlb
sti
andl
push
lods
mov
or
inc
les
xor
mov
and
out
or
lock
cli
aas
pop
jl
pop
mov
push
lock
pop
pop
cmp
lahf
and
dec
xor
scas
or
add
or
into
xchg
pop
cmp
aad
pop
leave
jmp
out
dec
mov
inc
in
inc
ficoml
nop
and
mov
std
hlt
cmp
scas
aaa
mov
adc
addb
divb
loop
outsb
int3
pop
pop
outsb
pop
mov
or
lahf
cmc
mov
jne
rolb
sbb
sbb
pop
arpl
repnz
xchg
sbb
jnp
dec
pushf
cmp
xchg
fcomip
rcrl
push
or
ret
xchg
jl
cmp
add
stos
push
and
push
pop
push
push
sbb
add
lds
dec
jl
push
push
sbb
subl
cltd
scas
lods
mov
rol
fwait
call
or
jp
jl
aad
mov
mov
xchg
clc
bound
mov
mov
xchg
das
jmp
js
pusha
mov
mov
in
and
lahf
sub
inc
mov
jp
dec
fldenv
daa
das
sub
xor
fsubs
fwait
inc
add
fsubl
hlt
and
cli
push
fidivrs
xchg
adc
sahf
or
mov
mov
xor
sub
push
xlat
loope
sbb
insb
xchg
cmp
adc
ljmp
loope
lahf
mov
divb
jg
add
jmp
push
inc
xchg
add
mov
loopne
push
out
cli
mov
xchg
mov
jne
add
pop
lds
push
mov
test
movsl
repz
call
cmc
fldcw
dec
sub
ja
or
repz
xchg
add
sub
jae
stos
cwtl
mov
adc
pop
jmp
push
jae
sbb
xor
test
mov
cs
push
pop
cmp
push
es
cltd
lret
cwtd
xchg
cmp
cli
in
pop
insl
xor
dec
shlb
inc
pop
and
paddb
mov
shll
loope
into
mov
jne
int
sti
aaa
movsl
subb
mov
mov
mov
sub
call
jmp
lods
mov
nopl
or
jp
jno
hlt
jbe
jecxz
pop
cmp
sbb
push
loope
movsl
xchg
cs
cmp
jns
rcrl
xor
sbb
pushaw
icebp
and
add
popa
in
push
popf
or
es
bnd
sub
mov
sbb
and
push
arpl
inc
add
inc
rcrb
mov
das
out
xor
stc
cld
ljmp
mov
int
xorl
push
xor
lds
nop
sub
sub
insb
adc
push
and
repnz
mov
add
push
mov
lahf
icebp
sahf
inc
mov
and
addb
adc
sbb
push
aad
or
sarb
dec
xor
ficoml
sbb
out
cmpb
sub
subl
inc
and
test
xchg
fwait
cmpsl
or
psubb
rol
insl
ret
cmp
mov
add
daa
adc
jmp
fwait
inc
addr16
insb
int
sbb
stos
push
or
inc
int
test
and
mov
or
stos
inc
hlt
sarb
xor
mov
xor
push
jb
mov
rorl
dec
jg
inc
test
dec
xor
inc
push
push
test
and
pusha
stos
xchg
xchg
aas
sbb
push
arpl
xor
stos
pop
adc
rcrb
ret
jp
cmpsb
repz
adcl
lret
jns
dec
loopne
ds
js
rcrb
fs
gs
sub
cmc
fisubs
sub
popa
jnp
adcb
test
rol
test
loop
ret
mov
gs
jae
sbb
mov
addr16
pop
fdivs
sbb
xchg
clc
jg
jecxz
int
mov
jb
pop
pop
test
mov
out
jae
icebp
outsl
dec
cs
mov
cmp
jns
push
xchg
sub
shr
push
mov
notb
das
loop
cmp
loope
pop
sahf
xchg
mov
adc
shl
daa
pop
fnstsw
scas
xor
mov
clc
dec
mov
push
inc
and
in
jbe
into
pop
add
and
adc
or
jmp
add
outsb
mov
cmp
sbb
push
push
adc
pop
jns
push
int3
das
out
or
mov
mov
fwait
pushf
clc
xchg
xor
mov
std
movsb
adc
mov
shlb
dec
int3
mov
and
cmp
push
push
pop
push
dec
inc
rcl
mov
je
lret
push
sahf
jl
inc
dec
xor
jl
mov
das
mov
add
or
mov
mov
fcompl
shlb
xor
scas
rorb
pusha
xchg
fimuls
out
addr16
jmp
mov
jo
xchg
mov
outsl
sbb
test
jl
push
and
int3
dec
hlt
mov
in
ja
in
bound
pop
xlat
mov
push
mov
idivb
sbb
pop
xchg
inc
int3
add
insb
into
jge
push
imul
and
pop
mov
cmp
fisubrs
xchg
into
inc
cli
test
dec
dec
mov
pop
call
inc
sbb
ljmp
fsubr
jl
xchg
mov
insl
mov
cmp
int3
js
mov
jl
in
lds
or
sahf
fs
pop
mov
data16
or
jnp
pushf
dec
fnstsw
and
push
xorl
fwait
adc
mov
pop
push
addr16
dec
aad
dec
bound
insb
cmpsl
or
insb
jge
sahf
arpl
or
adcb
cmp
dec
xor
mov
mov
fsts
out
loope
cmc
cmp
daa
sub
mov
sti
int
out
outsb
jo
clc
ljmp
je
gs
cmp
aaa
inc
dec
aad
faddl
sti
jo
call
mov
in
push
arpl
test
pop
push
jge
mov
xor
insb
and
jnp
lret
mov
lds
mov
xor
in
pop
into
xchg
inc
and
jns
xchg
lds
std
es
mov
inc
or
dec
sbb
cmpsb
lcall
imulb
mov
xor
fidivrs
xchg
cmp
pop
pop
inc
adc
inc
add
xchg
cmp
xchg
shll
mov
xor
push
mov
jbe
inc
xchg
sti
pop
mov
jbe
or
and
lret
or
roll
rclb
shll
mov
roll
inc
das
shlb
ficomps
cmp
pop
xor
jecxz
jo
jp
fcomp
sub
jmp
fst
mov
in
aaa
orb
inc
aas
xor
xchg
xchg
mov
test
inc
test
dec
jno
int3
adc
mov
cli
mov
sub
pand
xor
jg
cmc
add
test
rorl
cmp
jmp
out
sbb
mov
xchg
mov
add
inc
adcl
lahf
idiv
sbb
inc
test
adc
pop
jl
xor
mov
dec
sbb
pop
fadds
cwtl
cmp
or
lahf
pop
pop
pop
or
lcall
sbb
sub
mov
data16
rcrb
mov
pop
push
lods
mov
cltd
push
loopne
dec
mov
rol
mov
sahf
out
sub
fists
jecxz
ljmp
adc
lods
or
xchg
mov
push
lds
jle
jo
cmp
push
mov
jns
xchg
jl
adc
mov
pop
outsl
pop
incl
pop
adc
fbld
mov
cs
adc
fistpll
mov
lret
push
xchg
dec
jbe
dec
out
cld
dec
adc
popa
sbb
push
enter
vpsubusb
hlt
cmp
push
fimuls
in
adc
std
and
adcb
sbb
xor
pop
dec
sahf
dec
inc
sbb
dec
and
stos
repz
lods
jle
subl
aad
or
ret
xor
mov
stos
cld
cli
hlt
int3
sbb
xor
movsb
mov
addl
dec
cld
xchg
int
movsl
cs
sbb
mov
cmp
mov
fstps
cmpsl
jl
sbb
mov
test
xchg
enter
xchg
jae
adc
popa
out
jb
jb
cmc
cmp
xchg
into
or
iret
mov
sub
aaa
xchg
pop
idivb
negl
pop
or
stos
cld
je
jno
mov
cmpl
and
notl
xchg
movsl
push
test
jne
fisubrs
cwtl
push
scas
pop
incl
push
jo
push
dec
sub
xor
cmc
stos
in
inc
mov
std
push
mov
fbld
push
jecxz
inc
lds
xlat
fisubrs
mov
ljmp
movsb
shrb
lds
jmp
sbb
stos
lea
cmp
sbb
push
adc
iret
sub
pushf
xchg
xor
inc
cwtl
mov
fcoms
cmpsb
jge
lods
ficoml
outsb
inc
mov
les
fists
cmc
repz
leave
inc
cmp
mov
inc
mov
test
scas
xor
scas
dec
lods
or
frstor
add
fdiv
stc
push
shl
mov
in
xchg
xlat
mov
mov
cwtl
leave
bound
inc
test
pop
sub
ja
sahf
jns
jnp
mov
dec
jecxz
cmpl
mov
or
jmp
lahf
imul
xchg
dec
push
bound
jb
fisttpll
int
fwait
daa
lret
fimuls
dec
mov
scas
mov
scas
xor
call
repz
scas
mov
cmpsl
adc
mov
mov
mov
imul
lret
fimull
or
shrl
pop
aaa
add
sti
orps
fidivrl
int
cmp
adc
pop
test
xchg
and
stc
popa
shlb
out
out
add
or
jl
xor
hlt
or
push
rcll
icebp
dec
mov
in
in
or
std
ss
in
std
cmp
ds
and
mov
jge
xor
paddd
mov
push
jo
and
lods
jmp
shlb
cmpsl
lods
mov
gs
xlat
inc
lret
shr
fwait
mov
add
jg
mov
mov
dec
fs
adc
loopne
int3
xchg
lea
test
out
sub
and
mov
test
pop
mov
or
pop
insb
mov
les
imul
xor
lahf
in
xor
push
mov
fisubrl
pop
xchg
outsl
or
sub
aaa
xchg
mov
scas
ds
clc
mov
cwtl
fbld
test
insb
mov
inc
fwait
test
lret
push
pop
iret
test
push
push
xor
out
sbb
mov
nop
adc
pop
adc
xor
mov
out
adc
jno
es
out
xchg
sti
lret
dec
call
xchg
test
xor
jl
xor
xchg
jmp
js
pop
mov
pushf
sti
mov
stc
std
repz
jne
into
sub
push
add
lret
xchg
sbb
sahf
sti
leave
push
out
enter
inc
inc
sbb
jecxz
mov
jle
and
cmp
sub
xor
pop
and
test
xor
andl
and
or
mov
lock
cmc
sbb
sbb
pop
and
not
testl
test
push
aam
sbb
popa
adc
push
rorl
xor
adc
xchg
lret
movsl
mov
inc
ret
or
adc
cmp
cs
pop
cmp
test
mov
inc
jno
leave
pushfw
orl
out
fimuls
enter
out
pop
dec
in
sub
int3
inc
gs
dec
adc
mov
push
dec
outsl
clc
xchg
inc
cmp
cmc
push
sbb
xchg
test
jle
sahf
int
icebp
add
push
aas
sbb
cmpsl
adc
es
jae
add
add
xor
ficomps
inc
pop
dec
mov
sub
xor
push
pop
pop
pushl
push
push
test
push
push
iret
inc
bound
sub
cltd
push
cmp
vcvtpd2dqx
xchg
sbb
push
and
add
jp
jno
xchg
data16
fs
add
push
loopne
insl
inc
xchg
fwait
inc
or
ljmp
push
ret
add
ficoml
gs
fwait
mov
test
test
loope,pt
dec
cld
sub
dec
outsb
xor
adc
mov
adc
inc
and
test
sbb
pop
mov
jp
inc
push
sub
sbb
gs
scas
enter
jecxz
push
add
repnz
arpl
and
cmp
pop
aaa
jecxz
jge
add
mov
push
ds
imul
mov
enter
mov
cmp
mov
xchg
and
xchg
pop
sbb
sub
imul
int3
add
pop
push
jno
sbb
loopne
loop
jno,pt
jecxz
je
aas
and
imul
cmpsl
jae
xchg
pop
or
addr16
testl
stos
cwtl
and
push
push
test
sbb
ret
test
mov
das
xchg
push
push
xor
nop
xchg
or
jecxz
lcall
cmp
shlb
repnz
sbb
jecxz
jne
jnp
push
in
push
incb
outsl
cld
int3
cmpsb
jns
sti
pop
mov
cmpsl
inc
fadds
enter
in
popa
add
stos
push
xchg
int
mov
aam
cli
adc
cmp
fadds
xchg
lock
xchg
mov
xorl
push
mov
imul
adc
ret
sbb
aas
mov
bound
cmp
mov
jle
mov
dec
ret
cltd
push
in
add
mov
sbb
insl
and
jle
sub
orl
pop
lea
fwait
les
std
test
xor
add
inc
rcll
mov
cmp
dec
mov
push
ljmp
or
mov
dec
lret
xor
fdivrl
adc
jecxz
bound
inc
mov
daa
and
cmpsl
lods
dec
idivb
stos
call
xchg
aas
mov
or
rolb
ja
or
outsl
sub
pop
sti
add
mov
jnp
xchg
loop
xlat
add
pop
lock
sahf
ljmp
lret
mov
dec
add
cmp
adc
jb
mov
cmp
cmp
pop
ss
dec
ret
jne
push
dec
pop
cmp
cmp
loopne
pop
jge
sub
sub
mov
sarb
sub
imul
xor
pop
sbb
add
jo
jmp
cmp
jmp
popf
pop
outsb
mov
push
push
repnz
xor
imul
inc
aam
bound
cmp
clc
push
cltd
cmp
cmp
mov
rclb
sbb
add
xlat
mov
mov
repnz
xchg
xlat
adc
test
cmp
xchg
push
data16
mov
cmc
stos
outsl
push
call
sbb
lock
in
push
aad
outsl
inc
mov
pop
cmc
orb
insb
dec
xor
sub
orl
adc
fsubrs
outsl
movsl
inc
jecxz
sbb
mov
pusha
fmull
or
jmp
dec
push
and
cld
mov
mov
shl
sbb
xchg
daa
pop
xorb
jp
pop
sarl
in
pusha
or
xlat
add
sbb
negl
cmp
cs
lahf
es
pop
call
sbb
je
cmp
push
jo
jb
push
mov
cs
pop
aaa
out
fists
pushf
dec
and
sbb
adc
lret
das
xlat
scas
lods
pop
aam
test
bnd
dec
xchg
push
sti
jmp
sub
addr16
mov
mov
test
fidivl
jl
push
ret
movb
mov
push
jp
mov
push
push
fimuls
fisttpll
int3
cltd
jle
pusha
leave
add
iret
subl
repz
insb
push
sbb
outsl
mov
add
push
add
adc
push
fsubs
les
aaa
idivl
push
popa
mov
ds
jl
ds
ss
dec
rcr
insb
mov
sti
movsl
dec
xchg
loope
ret
lcall
fldl
lahf
cmp
stos
faddl
int3
push
in
push
out
and
xor
dec
cmpsl
icebp
or
stos
ja
lcall
xchg
dec
adc
popa
leave
push
call
pop
jb
loope
int3
pop
pop
fs
sbb
movsb
add
sbb
pop
lods
inc
insl
inc
mov
fstpl
pop
jno
dec
sahf
into
jae
inc
add
xchg
sarb
mov
gs
sub
xchg
lahf
les
jo
daa
sub
jle
ret
add
sbb
add
jb
xchg
push
inc
fistps
scas
roll
and
jbe
jnp
aam
xchg
push
xor
inc
popf
stc
xor
lea
add
scas
sbb
icebp
cli
es
mov
lret
pop
fsubl
and
jnp
fwait
cmpsb
pop
push
pop
push
push
push
push
xchg
or
out
nop
fwait
push
pop
add
imul
stc
frstor
and
jne
adc
repnz
xchg
xchg
jge
xlat
and
das
cmpsl
nop
das
inc
mov
mov
pushf
daa
lds
and
fcoms
push
sti
neg
fisttpl
lods
push
mov
dec
rclb
xchg
in
int3
mov
mov
xor
ljmp
add
in
jb
jne
cmp
push
lock
mov
imull
push
loope
repnz
xor
add
lods
sbb
mov
or
adc
cmp
pushf
push
jecxz
inc
sub
inc
popf
add
mov
push
mov
pop
pusha
adc
xchg
les
push
inc
clc
mov
sub
bound
call
push
sub
negl
push
xor
fstl
jb
mov
xor
into
shl
test
iret
cltd
cmp
sbb
insb
repnz
test
push
sarl
outsb
or
cmpsb
dec
addl
pop
fadds
mov
test
lea
gs
into
sbb
mov
lahf
packssdw
pushf
pusha
cmp
or
fisttpll
sbb
fsincos
jnp
lahf
mov
mov
jl
pop
dec
dec
jo
sbb
jmp
pop
or
sti
xchg
dec
shll
hlt
jge
or
scas
mov
xor
lret
pop
xchg
mov
mov
push
out
xor
fs
xchg
nop
andb
dec
imul
mov
pop
push
lods
pop
xchg
and
dec
xrelease
or
popa
add
xor
pusha
ljmp
mov
cmpsl
aas
inc
dec
cmp
cwtl
adc
push
aam
jmp
ja
cmp
push
leave
int3
adc
mov
je
sbb
jp
cmp
loop
jne
pop
mov
xchg
mov
mov
push
sahf
jmp
mov
inc
xor
mov
jp
in
js
push
cs
adc
lea
xchg
push
mov
arpl
stos
mov
lock
sub
pop
add
and
mov
daa
cmp
scas
lods
and
enter
in
pusha
subb
mov
mov
rcl
pop
leave
xchg
imul
and
pushf
jp
mov
lock
xchg
cli
sbb
je
outsl
sub
cltd
dec
cwtl
fnstenv
mov
pop
call
loope
test
add
in
xlat
lds
data16
pop
pop
pop
out
adc
scas
xchg
push
lret
inc
lock
lock
add
push
xlat
movl
lahf
andb
push
arpl
push
movsl
xor
out
je
mov
or
popf
mov
inc
loope
mov
xchg
inc
roll
shll
mov
jge
jo
pop
or
pushf
xchg
fisubs
fstpt
sbb
sbb
mov
adc
into
sar
adc
mov
jns
repnz
jle
lret
pop
je
repz
fsts
dec
xchg
js
adc
cli
lahf
push
clc
jecxz
sti
mov
cmpl
xchg
xor
and
lods
cmp
dec
ja
dec
and
in
mov
dec
nop
xlat
push
xor
into
push
cmp
dec
lret
dec
out
lods
add
fwait
test
push
popf
ret
add
xor
fcomps
cwtl
jg
insl
mov
lea
sub
or
and
mov
jns
or
cltd
xchg
lahf
push
cmpb
pop
cwtl
sub
push
lea
gs
lahf
insl
sbbb
xchg
pop
cltd
loope
out
push
xor
test
ret
mov
gs
cmp
sub
shll
pop
ja
movl
xchg
loopne
lock
add
pop
or
je
lcall
push
adc
fbld
dec
scas
out
push
push
movsl
inc
mov
xor
xor
and
jmp
daa
jg
inc
inc
rcr
in
flds
push
cmpsl
nop
scas
out
add
push
pop
xchg
push
or
pop
adc
fistps
outsl
mov
lret
jne
push
loope
lock
xchg
ja
inc
js
cmp
cwtl
adc
arpl
testb
sbb
xchg
aas
cmc
pop
pop
fucomip
push
mov
add
push
lret
cltd
enter
addr16
shrl
and
mov
pop
or
inc
mov
mov
push
or
mov
gs
pop
push
dec
inc
daa
xor
push
lods
in
movsb
xor
cmp
test
loop
les
mov
fcomi
out
arpl
push
dec
movsl
lcall
and
dec
inc
push
subl
sub
and
icebp
out
mov
pushf
dec
dec
pushf
fisttps
lret
xchg
shl
mov
pop
inc
push
repnz
sahf
rcll
mov
lcall
es
sub
rol
int3
std
jbe
push
dec
fcmove
stos
mov
pop
cmpsb
outsl
scas
cld
daa
dec
xchg
jle
and
loope
mov
in
jle
lcall
test
out
je
out
mov
sbb
mov
lds
and
and
mov
orl
and
dec
lods
scas
mov
cmc
popa
xor
and
fisttps
sub
mov
aam
add
xchg
xchg
xor
pop
hlt
xor
loopne
out
cltd
insb
jbe
jne
mov
xchg
push
shll
shll
dec
push
cmpsb
and
bound
pushf
mov
insl
mov
and
pop
jl
loop
xchg
mov
mov
xlat
jecxz
int
clc
cmp
jecxz
in
scas
stos
outsb
out
mov
jae
into
mov
push
jp
xchg
lods
pop
lea
rcr
roll
popf
jno
jno
pop
cmp
and
std
outsb
sub
mov
dec
hlt
xor
ds
out
popf
loop
mov
stc
test
movsl
jae
call
sub
addr16
or
mov
fidivrs
cmpsb
andl
pop
mov
sub
adc
jae
mov
inc
jle
xor
inc
mov
xchg
testb
enter
mov
shrl
mov
int
mov
sub
mov
push
mov
inc
gs
out
mov
push
push
mov
sbb
loope
sub
pop
xlat
pop
fcompl
negb
fdivs
inc
rcrb
mov
mov
xchg
push
add
inc
ret
rcll
xor
pusha
outsl
push
fcos
fs
mov
ja
sarl
int3
mov
out
inc
mov
push
mov
test
sub
add
daa
jg
hlt
js
jg
loope
shll
adc
ffree
push
push
add
sbb
mov
movsl
js
cmc
jg
xchg
insb
cmp
scas
sub
cmpsl
ljmp
insl
push
loop
lea
jne
adc
dec
andl
sarl
xchg
test
ficomps
lock
mov
pop
cmp
push
pop
add
fldenv
jmp
mov
call
out
xchg
fnsave
jae
inc
mov
xchg
dec
mov
push
es
push
sub
sub
popl
jae
hlt
jle
dec
or
fistpll
pop
jmp
cmp
and
pop
xchg
das
ficomps
arpl
clc
insb
mov
je
pop
push
cmpsb
pop
jo
ja
popf
fbld
xchg
pop
adc
mov
pop
pop
pushf
out
loop
lahf
imul
or
jp
in
pusha
pop
xorb
push
fsubrs
and
xor
push
pop
adc
mov
push
fildll
or
test
push
xor
aad
xor
lock
rclb
xchg
rcrb
pop
cmp
je
push
sbb
jbe
mov
daa
pop
ret
imul
push
pop
inc
xor
leave
in
fcmovne
nop
sub
stos
stc
push
imul
mov
inc
fstpl
inc
push
mov
sbb
ret
push
dec
les
sti
jecxz
xor
sahf
movsb
loope
aaa
sub
sbb
mov
fnstenv
xor
sahf
out
jo
jg
sbb
daa
mov
lock
hlt
push
inc
xchg
rorb
mov
xor
lret
jp
and
cmpsl
rorb
call
incl
pop
mov
inc
repz
jmp
not
nop
jnp
mov
or
xchg
or
xlat
rcrl
sub
mov
fs
imul
sbb
push
sub
or
inc
mov
test
and
mov
sti
cli
inc
xchg
shl
mov
mov
cmpsb
ret
call
adc
popa
add
jbe
ss
out
ret
jns
pop
loope
pop
dec
push
pusha
in
and
mov
int3
and
pop
add
lcall
dec
mov
jo
xchg
insb
je
popl
call
add
jns
icebp
sub
dec
cmovnp
imul
push
ljmp
sub
or
cltd
pop
push
or
cltd
push
je
aaa
jnp
outsb
add
mov
shll
test
stos
fildl
adc
cmp
push
in
cmc
and
sbb
jnp
jmp
fadds
cwtl
jg
cmc
divb
mov
push
sbb
cli
mov
sub
jge
xchg
lods
fwait
sti
arpl
repnz
add
stos
sbb
jo
mov
fdiv
inc
mov
aad
dec
in
dec
xchg
xor
inc
sub
fcomps
in
in
sbb
push
int
push
inc
dec
pop
xor
dec
stos
mov
movsl
sbb
imul
jns
xchg
pop
sub
fmulp
imulb
and
pop
movsb
mov
lods
lods
push
xchg
mov
xor
or
movsl
cmp
push
rclb
add
push
cmpsb
pop
lret
adc
ds
int3
cmp
shrl
sbb
inc
clc
push
pop
dec
stos
mov
out
icebp
mov
mov
dec
jno
fadds
pusha
aas
test
int3
jmp
div
pop
je
sbb
in
push
sub
incl
outsl
mov
mov
mov
dec
cmc
data16
insl
xchg
data16
jnp
sbb
jnp
fsubl
nop
pop
cmp
test
fisubs
insb
int
scas
movsb
xor
mov
push
mov
jnp
je
scas
shll
xchg
mov
sub
test
push
xor
aad
lret
add
pop
mov
cwtl
popa
adc
xor
sub
mov
cmpsl
jecxz
add
cmp
xor
es
and
stos
lahf
in
imul
pusha
negl
repz
int
fidivrl
cmp
in
sub
inc
cmp
jns
fdivr
test
pop
lods
mov
test
sbb
out
cmp
dec
arpl
cmc
xchg
divl
push
clc
dec
xchg
cmpsl
mov
mov
cltd
pop
sti
or
sbb
repnz
notb
jbe
push
hlt
adc
outsl
loope
fs
pushf
mov
dec
jns
data16
sti
push
mov
mov
inc
jecxz
mov
lret
stos
int
and
or
jnp
push
xor
iret
aas
sub
push
jno
loopne
and
adc
push
pop
fbld
arpl
xor
mov
push
nop
push
data16
jmp
push
xorl
jle
insb
pop
jbe
in
sahf
mov
les
out
jg
mov
dec
imul
mov
mov
test
in
jle
add
icebp
or
cmp
and
cwtl
ds
test
and
sahf
mov
into
cmp
lods
inc
add
daa
dec
daa
outsl
test
mov
xor
fildll
xchg
xor
pop
mov
xchg
inc
or
adc
mov
xor
pop
mov
cmp
xchg
mov
mov
jnp
in
push
mulb
cmpl
xchg
and
xchg
pop
lcall
lods
add
mov
test
mov
test
jnp
test
call
les
rorb
pop
pop
push
aam
js,pn
out
xlat
xor
xor
in
adc
cli
cli
out
pop
test
scas
push
mov
test
mov
pop
mov
adc
mov
xchg
test
push
add
sarb
les
std
and
mov
and
insb
adc
push
flds
xlat
mov
out
and
mov
cmp
jb
mov
adc
lret
fbld
sbb
xor
inc
pop
jbe
out
sbbb
cmp
imul
shlb
iret
imul
sbb
pop
xor
iret
xchg
lret
stos
stc
sub
sbb
fidivs
or
and
sbb
lock
mov
ret
aam
pop
sub
fwait
in
imul
shlb
lock
mov
cmp
jecxz
xor
mov
push
cmp
mov
add
shlb
daa
outsl
loop
inc
mov
mov
lods
popf
stc
sti
cmp
test
adc
dec
jnp
scas
adc
inc
lock
mov
enter
sub
int
inc
fwait
leave
or
or
mov
adc
movsl
sub
scas
mov
jmp
jp
test
add
and
pop
xchg
adcl
jp
loop
in
repnz
stc
fcos
out
jo
push
movsb
mov
xchg
sbb
mov
xor
int3
cltd
test
jle
fldenv
jmp
roll
pop
pop
sbbb
shrl
shrb
testl
xchg
mov
xor
mov
enter
mov
or
mov
lods
shrb
int
pop
out
lods
inc
push
in
les
or
test
push
xorl
enter
les
lds
push
std
mov
jbe
cmpsb
push
adc
in
push
dec
nop
pop
sbb
add
lret
pop
rcrb
out
jnp
sub
into
or
mov
cwtl
int3
adc
test
lods
and
fmuls
xor
dec
cmc
aaa
lcall
movsb
xchg
movsb
arpl
hlt
data16
fsubrp
pop
adc
adc
scas
clc
and
stc
jl
call
or
nop
int
dec
bound
loope
enter
fmull
int3
adc
scas
pop
popf
xchg
inc
xchg
dec
mov
mov
jno
or
xchg
aas
sbb
stc
sub
repz
mov
shl
into
movsb
inc
fstps
inc
aaa
add
das
addr16
popf
push
sub
mov
fbstp
mov
adc
adc
cmp
fisubrs
sub
stos
es
loope
sub
ljmp
roll
pop
xor
mov
adc
clc
push
pop
adc
stc
mov
push
loop
mov
xor
jno
leave
jg
inc
xor
shlb
pop
xor
leave
sub
push
fwait
or
mov
dec
add
stos
or
xor
outsb
xchg
aas
mov
les
inc
lods
mov
cmpsl
mov
js
mov
rorl
push
and
rorb
fildl
in
stc
fsubrl
push
jle
or
and
fisttpl
and
movsl
sbb
fisubl
pop
fcoml
jl
pop
mov
mov
jae
ss
pop
adc
dec
test
xor
dec
pop
in
jp
push
insl
dec
int3
cmp
les
ficomps
adc
cmp
pop
jecxz
xor
jmp
jns
push
imul
or
xchg
and
cli
cmp
jecxz
je
sahf
or
lea
mov
pop
dec
fisttpl
mov
repz
add
add
adc
or
sub
xchg
loopne
dec
pop
mov
mov
test
call
and
in
cmp
imul
dec
loope
inc
xor
scas
addr16
ret
jmp
jmp
int
imul
test
inc
ss
dec
add
aam
mov
jmp
pop
push
inc
pmuludq
arpl
nop
loopne
lret
cld
setbe
mov
in
ja
test
or
mov
test
cs
mov
xchg
roll
push
js
scas
sti
pop
shl
jo
jl
cmp
sbb
andb
jp
fdivl
dec
pop
lods
adc
test
sbb
adc
aas
aas
out
subl
inc
jo
cmp
jp
inc
mov
dec
xchg
push
sbb
lea
cmp
xor
sub
jecxz
in
or
add
xor
pop
loopne
cld
ror
mov
jae
or
fidivrl
pop
jmp
fldt
inc
jnp
lea
ljmp
xor
lahf
hlt
adc
and
jp
add
adc
mov
je
add
mov
add
sarb
testb
push
fs
gs
push
mov
shll
and
std
add
mov
mov
adc
insl
add
and
or
lock
xor
pop
inc
jno
das
add
std
and
push
jnp
xchg
ja
mov
or
push
inc
outsl
sti
pop
ljmp
stos
sbb
jmp
sbb
sbb
fcmovne
in
pop
pop
add
and
push
sub
push
mov
xchg
outsl
shl
andb
sbb
scas
push
sub
xor
mul
inc
xchg
xchg
mov
hlt
stos
sub
repz
push
das
decl
test
mov
jmp
sub
lock
outsl
mov
jecxz
iret
test
sar
xlat
jg
xchg
test
jecxz
cmp
dec
fimuls
xor
adc
daa
fldcw
mov
mov
add
dec
aas
pop
in
push
fcmove
push
cld
fwait
pop
mov
mov
addl
enter
and
push
mov
daa
mov
ret
jmp
mov
xchg
jge
cmp
push
iret
in
or
add
jmp
iret
adc
jmp
mov
imul
xor
out
daa
mulb
or
adc
add
ret
add
loopne
and
or
into
ss
jns
ret
aas
or
jns
cltd
fsubrs
pop
jbe
push
test
repnz
sbb
lcall
ljmp
sbb
ret
pop
push
dec
mov
or
xor
sub
andl
mov
or
sti
pop
outsb
sub
jns
xor
fstps
hlt
and
add
rcll
or
fcomps
icebp
xchg
xchg
jae
fcmovu
pop
repz
ficomps
cmp
adc
and
push
xor
pop
sbb
fwait
pcmpgtw
dec
ret
mov
mov
stc
sub
aam
lcall
movsl
adcl
test
sub
push
jmp
aas
adc
dec
and
mov
movsb
jl
mov
sbb
repnz
outsl
fnstcw
sub
xchg
mov
cs
sahf
ret
jne
sub
push
mov
test
rol
popa
and
push
cltd
ja
cmp
ret
sbb
sub
mov
xchg
mov
out
cwtl
adc
cmp
xchg
cli
arpl
jno
mov
je
mov
xor
js
in
push
cmp
push
sub
nop
scas
call
pusha
ret
xor
pop
jl,pt
das
jbe
push
js
bound
mov
test
pop
lods
into
imul
inc
xor
fsubl
test
inc
pop
test
int
enter
mov
jo
ret
xor
jns
hlt
sbb
repnz
push
decb
popf
shll
mov
scas
push
rcll
mov
cmp
test
mov
cwtl
sti
stc
cmp
dec
jnp
add
fidivrl
push
pop
jmp
rclb
bound
and
cwtl
aam
push
dec
popa
dec
je
popf
in
and
shll
into
fidivl
cmpsl
sbb
aas
lcall
pushf
xchg
lods
call
mov
aad
cmp
push
pop
dec
mov
notl
cmp
cmpsl
or
adc
jnp
jg
out
mov
ljmp
push
dec
gs
cmp
inc
push
hlt
cltd
rorb
xor
rcr
add
inc
jns
dec
lods
jo
inc
aas
rorb
lahf
jmp
rol
and
push
xor
cmp
iret
add
mov
jo
mov
jmp
and
xchg
orl
aas
mov
push
add
jb
shll
mov
loope
xchg
mov
dec
outsb
cmpsl
inc
movsl
sti
mov
pop
fsts
jle
adc
jo
mov
xchg
xor
push
movsb
lock
les
sub
cli
mov
test
bound
pop
test
push
lods
lret
jmp
push
shrb
out
repz
in
into
pop
ret
add
adc
fsts
sti
stos
test
push
nop
xchg
aam
dec
dec
movsl
jae
stos
lahf
or
imul
push
mov
lret
dec
push
hlt
or
adc
push
mov
pop
mov
ret
loope
js
repnz
sub
add
lret
shll
in
xchg
pushf
adc
mov
jbe
sub
mov
mov
loopne
int3
loop
repz
ja
popf
pop
nop
shrl
jge
ret
lahf
insl
aam
and
mov
aad
mov
cmpsl
rcrl
push
mov
mov
and
and
ds
pop
jp
movsb
mov
push
ljmp
arpl
mov
or
and
jecxz
adc
nop
mov
mov
insl
xchg
adc
test
jo
cmp
xor
mov
adc
insl
popa
pop
repnz
maskmovq
jb
and
push
pusha
sbb
and
shlb
cmp
xor
int
int
sub
adc
jl
gs
out
jle
stos
daa
lods
sbbb
xchg
xchg
stos
lahf
adc
fsts
pop
mov
mov
clc
and
mov
adc
sbb
and
addr16
dec
sub
imul
movsb
xchg
mov
sub
sbb
bound
sbbl
push
cmpsb
jnp
enter
mov
cwtl
leave
jo
jp
cmpsl
insl
mov
ret
popf
add
cmc
dec
jbe
xchg
inc
push
mov
dec
sub
test
mov
xchg
sbb
shll
push
pop
adc
pop
movsb
inc
inc
fwait
shlb
add
mov
mov
aas
dec
xor
adc
fsub
xor
testl
xor
icebp
sbb
je
pop
inc
rcl
mov
mov
and
shl
pusha
test
jge
add
add
fisttpll
imulb
mov
add
in
and
jmp
mov
bound
loope
mov
sbb
xor
pushf
mov
pop
pop
jg
xor
mov
cmp
inc
cmpsb
jae
push
les
rcr
mov
or
pop
mov
imul
mov
pop
jg
push
inc
mov
add
cbtw
xor
fsubs
pop
adc
xlat
lock
movsb
mov
insb
dec
cmp
fisubrs
mov
push
add
jecxz
loopne
ds
add
out
in
mov
cs
notl
aaa
push
cld
sti
inc
mov
aaa
fisubl
test
adc
xor
subb
stos
mov
dec
mov
mov
outsb
pop
and
xchg
inc
mov
jecxz
xlat
adc
jmp
jle
leave
xor
negb
jmp
pop
js
dec
adc
cmp
push
fdivrl
sbb
mov
push
arpl
add
clc
jno
std
or
ja
cmp
aas
sub
push
sbb
pop
cmp
aas
xchg
arpl
divb
orb
sbb
divl
lret
ficomps
jns
mov
mov
push
imul
pop
psubd
shlb
add
sbb
inc
mov
les
cmpl
mov
test
add
popf
pop
in
add
pusha
ds
jl
ds
or
and
pop
pop
test
lea
out
inc
push
cmc
into
out
fwait
lods
cli
cmpsl
and
fwait
xorl
push
push
dec
adc
lcall
inc
push
pop
test
leave
jne
dec
sbb
orb
add
sahf
test
les
mov
add
cmp
mov
fldt
icebp
out
ja
aas
imul
out
jecxz
cmp
fs
mov
fwait
inc
cmp
mov
js
add
aaa
aad
or
push
jl
adc
test
fnstsw
mov
xchg
jg
mov
cmp
xor
cmpsb
mov
insb
dec
xor
adc
push
add
stc
sbb
cmpb
lods
cmovbe
sbb
jns
in
dec
fistps
lea
sub
push
test
addr16
xchg
or
pusha
xor
inc
pop
sarb
jmp
adc
jno
push
lock
mull
pop
push
out
imul
int3
aaa
mov
psubd
mov
pop
hlt
inc
xchg
mov
adc
inc
and
lret
mov
pop
mov
sbbb
cmpsb
and
mov
cmc
cld
add
popa
mov
fmuls
inc
int
shll
ficoml
add
mov
xchg
out
cmp
out
pop
mov
xchg
ret
sub
jl
add
imul
jno
xchg
sbb
shrb
xor
in
leave
aad
mov
pop
sti
inc
mov
aam
add
pop
jo
push
inc
fisubrs
xor
or
mov
mov
mov
decl
adc
mov
out
pop
btc
mov
lcall
sub
jle
push
inc
imul
mov
pop
inc
clc
xorl
in
ret
adc
sbb
cmpsl
addl
repz
rol
pop
xor
sarb
dec
and
jns
aad
cs
popa
xor
das
sub
add
aam
dec
lret
sub
xchg
lret
xor
rcrb
dec
sbb
rolb
pop
int3
or
cmpsl
sbb
pop
fimull
xchg
aaa
test
iret
je
lods
cmc
int3
xchg
aas
sbb
dec
imul
xchg
loopne
push
pop
das
or
jmp
popa
xchg
xchg
or
stos
into
adc
sbb
and
mov
push
push
xor
test
pop
sub
mov
js
push
cs
jnp
xor
aaa
jo
ds
and
pop
outsb
add
mov
mov
lds
lret
or
dec
pop
dec
pop
data16
inc
popf
jg
aam
cmpsl
into
jmp
adc
orb
repz
mov
mov
ficompl
movsb
pop
mov
sub
xor
mov
scas
int3
lcall
cmp
shlb
or
popa
sub
aam
or
sbb
loope
shr
add
mov
in
lcall
adcb
pop
sbb
icebp
xchg
rorl
push
ret
fwait
xchg
push
mov
mov
filds
insl
ljmp
imul
jecxz
pop
or
or
inc
aas
pop
dec
outsb
nop
popa
adc
fnstsw
inc
inc
sbb
add
lcall
dec
fdivrl
lods
stc
dec
jge
mov
lods
add
xchg
fistpll
adc
mov
jmp
push
je
fadd
cmp
xchg
or
cmpsb
inc
mov
mov
pushf
or
or
incb
shrl
jne
dec
xchg
pop
jmp
jge
cmp
enter
jg
fdiv
sub
dec
das
scas
sbb
inc
xchg
pusha
adc
or
ret
mov
clc
cmpsl
pop
outsl
arpl
adc
push
and
and
adc
cmpb
mov
insl
jne
aad
mov
nop
sti
cld
scas
and
lret
outsl
add
sbb
leave
int
lret
popf
in
cmp
adc
ret
xor
out
outsb
and
mov
das
pop
loopne
je
rcrb
and
subl
jg
daa
and
or
or
lret
cmp
mov
mov
pop
cld
shll
or
jge
divps
mov
test
mov
les
sub
push
std
cmp
xchg
xchg
shlb
sub
cwtl
dec
ret
repnz
test
shll
ss
add
incl
data16
cli
xchg
iret
invd
inc
push
fnstsw
pop
aaa
iret
lcall
fs
push
popa
out
mov
add
xchg
cmp
out
outsl
mov
bound
loope
mov
jle
sub
je
mov
pop
xor
and
popa
inc
pop
and
ja
push
sbb
mov
jp
push
or
sahf
sub
stos
fisubrl
lahf
ja
pop
mov
stos
xor
std
push
in
movsb
dec
aas
adc
cmp
jo
ret
adc
cmc
add
insb
movsl
aad
popa
inc
inc
xlat
bsf
mov
jo
and
push
pushf
pop
gs
addr16
and
add
sti
xchg
lret
dec
popf
add
maxps
popa
mov
xor
sbb
add
xchg
or
cmp
flds
insl
ss
lock
xchg
test
aas
cltd
mov
xor
and
mov
push
shlb
sahf
mov
mov
dec
adc
jl
jp
test
pop
xlat
daa
imul
test
cmp
cmp
push
repz
fistpll
stos
daa
out
aam
xchg
out
pop
jp
add
xchg
rclb
test
hlt
cli
mov
outsl
popf
sbbl
mov
sbb
or
popf
jge
leave
fstps
or
clc
aam
bound
test
jmp
aad
movsl
mov
mov
out
adc
pop
repz
and
lret
jmp
loop
lock
mov
daa
jns
or
push
pop
stos
add
lock
jno
push
push
cmp
adc
sub
adc
push
jge
pop
push
shll
and
push
cltd
xchg
jno
pop
fdivrs
aaa
popa
testb
repnz
ljmp
test
or
sub
imul
push
insb
nop
movsb
imul
ficoms
loop
shll
sub
inc
pop
xor
jl
cli
push
fwait
in
int3
add
xorb
xchg
insb
push
scas
cmp
xchg
ja
stos
jle
rcrb
test
mov
fildl
jg
inc
push
imul
jbe
out
aas
dec
mov
mov
pop
fidivrl
imul
aaa
mov
out
jg
int
jb
das
fs
inc
pushf
cmp
es
sub
int
push
xchg
mov
push
sbb
mov
in
inc
push
jbe
lahf
lock
mov
or
clc
mov
out
and
daa
xchg
cmp
mov
rclb
or
cltd
scas
xchg
sbb
push
in
mov
and
push
inc
xor
popa
xchg
jbe
out
out
jnp
ret
add
lods
movsl
in
adc
inc
xchg
jae
dec
out
fldln2
cmp
mov
pop
jbe,pt
clc
loopne
xchg
sub
in
mov
aam
mov
jb
loope
xor
jbe
enter
or
xchg
enter
cwtl
stc
push
std
clc
pop
int3
dec
mov
sub
pushl
mov
jb
push
and
dec
dec
mov
adc
fsubl
ds
aam
sbb
or
insl
mul
scas
in
test
mov
inc
sub
jp
in
mov
and
xor
sub
pop
out
aad
js
pop
ficompl
and
push
adcb
push
cmp
movsb
mov
pop
push
imul
dec
into
test
adc
push
test
nop
xor
inc
roll
sbb
and
rol
inc
jecxz
cmp
or
xchg
push
icebp
pop
add
int3
mov
or
and
jecxz
popa
imul
mov
mov
sbb
das
mov
rorl
mov
es
push
xor
pop
mov
pusha
push
mov
stc
incb
loopne
in
insb
arpl
bound
pop
lea
ret
jno
std
xor
aad
aam
into
jne
test
sbb
repz
gs
in
enter
adc
fisttps
dec
xchg
mov
addr16
lods
or
arpl
insb
jp
dec
int
scas
push
popa
scas
adc
and
inc
gs
out
lahf
push
data16
sbb
push
inc
in
mov
mov
outsl
or
dec
lods
shll
call
cmp
mov
lea
add
cwtl
das
push
cmp
fucomp
cli
jecxz
das
or
xchg
sbb
mov
mov
sub
jo
arpl
movsb
mov
ljmp
push
mov
fildl
out
out
sub
lret
adc
sub
cltd
dec
leave
scas
shlb
data16
mov
fiadds
shll
ljmp
xchg
mov
mov
cltd
dec
ljmp
fists
scas
in
push
mov
jnp
mov
push
jne
dec
sub
mov
sarl
push
mov
cmp
or
inc
and
xor
adc
stos
push
mov
rclb
mov
and
and
sbb
sub
push
cmp
push
stos
out
stos
into
jae
into
dec
add
sbbl
inc
hlt
inc
outsl
xor
mov
or
and
push
mov
imul
inc
pushf
loopne
xchg
je
cwtl
sub
push
dec
sbb
insl
dec
int
xchg
out
push
aam
add
out
outsb
or
push
jns
andl
push
and
movsl
dec
cwtl
push
fs
stc
sti
inc
mov
ja
sbb
sub
enter
imul
mov
shll
add
les
outsl
enter
dec
jl
enter
outsb
and
in
xor
ss
xor
dec
in
mov
jl
xchg
lods
mov
hlt
ja
inc
fsubl
mov
xchg
in
popa
xchg
insl
ja
cmp
imul
sbb
or
lahf
scas
mov
or
ds
loop
mov
outsl
lahf
ret
push
outsb
fstps
xorb
imul
adc
mov
mov
jmp
mov
out
aaa
sbb
pop
ds
cli
mov
fisubl
push
jmp
fisubrl
xchg
push
add
sbb
inc
xchg
sbb
sub
adc
or
jl
ss
inc
mov
cmp
mov
lods
jmp
jo
sub
push
xchg
sbb
and
test
es
imul
mov
rorb
xor
push
int
push
mov
movsb
cmc
sbb
jbe
dec
aas
fists
gs
pushf
das
jb
stos
data16
arpl
lahf
test
pop
sbb
mov
lods
cmpb
mov
ss
pop
out
jae
inc
xchg
mov
test
xchg
or
xor
in
cwtl
push
xchg
fldt
cmp
test
in
pop
les
sbb
sbb
int3
movsl
nop
push
xor
pop
and
mov
mov
xchg
lock
sbb
testl
ds
jno
inc
and
nop
xlat
inc
jle
jg
loopne
and
sbb
into
jmp
lods
fwait
ds
sbb
pop
add
pop
lds
mov
mov
call
pop
inc
fistpl
pusha
lret
enter
ss
shrb
sbb
test
notb
jne
xchg
push
mov
mov
cmpsl
sbb
dec
mov
imul
fucomi
sbb
mov
push
test
dec
xchg
push
xor
adc
mov
fs
in
in
push
test
push
aas
jb
xor
adcl
stos
push
aad
je
inc
cmpsb
mov
and
fisubl
or
stos
dec
mov
into
xchg
loopne
and
jle
imulb
dec
icebp
mov
cmc
adc
ljmp
fcomi
mov
inc
in
lret
int3
xchg
mov
mov
popf
movsl
jmp
test
aas
shl
iret
dec
xor
scas
sbb
pushl
jbe
pop
stos
fcomi
stos
cltd
and
or
out
scas
lcall
fs
sub
je
mov
in
out
add
cmp
push
push
fcmovnbe
movsb
fidivrs
cmpsb
fwait
rcrl
and
ds
rolb
imul
adc
adc
in
sbb
enter
cmpsl
out
sbb
sub
push
push
mov
fs
out
stc
jns
pop
adc
xchg
pop
xchg
ljmp
scas
popf
sub
ljmp
adc
lods
sub
out
mov
pop
rorb
mov
jb
push
jne
adc
dec
loopne
dec
mov
pop
inc
test
dec
into
mov
and
xchg
or
rclb
push
icebp
test
aam
xchg
xchg
jns
inc
flds
jne
add
cmp
les
jl
das
mov
in
lods
inc
mov
adc
js
push
dec
inc
sbb
movsb
sbb
push
lret
dec
in
or
add
rcrb
inc
adc
fwait
js
sub
mov
xchg
orb
pop
xor
mov
dec
cwtl
dec
mov
and
mov
mov
mov
or
enter
push
cwtl
cmpsl
stc
mov
rcl
add
stos
add
jne
fs
xor
imul
push
call
dec
pop
ror
mov
dec
iret
pop
mov
and
lea
mov
and
and
iret
fs
leave
inc
pop
xchg
les
pushf
data16
xor
ret
mov
mov
hlt
call
aas
pop
sbb
sub
orl
sub
rcr
test
cwtl
push
mov
fs
add
movsb
fcoms
pop
push
cli
int
icebp
sub
sarl
and
add
inc
or
jb
mov
fildll
bound
inc
mov
test
mov
setge
push
aas
lea
rcrb
mov
pop
movsl
push
xor
rcr
ret
movsb
lods
imul
jae,pn
mov
popa
mov
pop
push
out
sub
jg
xchg
pop
lock
sbb
or
push
cld
jl
out
xor
js
jbe
lret
add
adc
push
pop
scas
jmp
xchg
push
fs
lcall
add
push
sbb
lods
mov
stos
xor
ds
nop
or
or
cld
push
pop
or
sub
fildll
ret
dec
inc
pop
idivl
xchg
mov
mov
daa
push
and
aaa
pop
test
jns
ljmp
pop
lcall
sbb
or
out
jp
add
or
or
push
add
sbb
adc
movsl
jno
xor
push
jno
lret
pushf
das
jl
dec
xor
cwtl
nop
push
in
lcall
inc
test
jae
hlt
or
in
jmp
movsb
and
popf
leave
lock
add
jbe
push
adc
out
fs
push
incl
hlt
call
mov
sub
inc
fcompl
orb
fldl
out
popa
cmc
fisttps
cs
cmp
mov
out
movsl
popf
stc
repnz
sub
push
sbb
inc
mov
lret
shrl
pop
fcmovb
jno
push
insl
mov
or
cs
inc
sbb
dec
pop
divl
mov
push
lret
xchg
xchg
int3
xlat
push
pushf
pcmpgtb
jns
dec
pop
ret
mov
clc
cs
shll
cmp
jnp
push
cmp
lods
aam
jno
js
mov
pop
mov
and
ljmp
mov
mov
mov
enter
mov
jnp
ds
pop
sbb
push
fimuls
dec
test
sbb
ja
out
jae
dec
lahf
xor
subl
or
sub
mov
xchg
push
mov
mov
jecxz
sbb
push
or
mov
test
repz
xchg
cmc
in
or
xchg
mov
lea
jp
or
sbb
out
sti
pushf
rclb
daa
lds
jo
or
out
jnp
dec
mov
cmp
xchg
pushf
push
pop
push
jmp
mov
dec
add
addr16
xchg
ljmp
aad
jno
mov
sbb
xor
xchg
data16
xor
xchg
loopne
pop
mov
push
sbb
in
mov
add
std
xchg
dec
xlat
push
aaa
test
les
rclb
leave
sbb
jno
xlat
pop
push
out
jecxz
stos
dec
jl
pushl
or
lock
xchg
sub
mov
inc
pop
fimull
adc
push
leave
cld
sahf
adc
mov
lret
cwtl
sbb
fcoms
inc
stos
lret
jmp
inc
xor
imull
add
dec
int3
mov
cmpl
dec
lret
adc
push
popf
mov
movsb
dec
or
xchg
arpl
cli
andb
in
fsubp
cli
add
hlt
ljmp
bound
dec
sbb
je
cmp
loopne
fs
ljmp
cmp
cli
cmc
pop
call
pop
xchg
add
in
cwtl
out
iret
jmp
jle
mov
add
jnp
or
inc
xor
jne
cmp
jo
dec
stc
inc
or
repnz
lcall
fcoms
and
cmp
dec
jle
mov
or
add
or
mov
adc
inc
rcr
hlt
add
cmp
iret
cli
inc
rolb
pop
aam
mov
sub
loopne
mov
ret
xor
jae
push
test
lods
in
jge
mov
js
inc
call
xchg
push
fimuls
aas
and
roll
mov
cli
loope
lods
out
arpl
dec
and
lods
pop
sbb
add
cmp
ret
or
insl
xchg
movsl
je
movsb
adc
fildl
pop
pop
test
add
mov
cmp
push
mov
cmp
repnz
push
cmc
out
pushf
inc
xchg
bnd
insb
test
ret
repz
lcall
into
adc
sub
ds
push
jbe
push
adc
push
int
movsb
cwtl
dec
cmp
xchg
testb
pop
mov
loopne
pop
frstpm(287
sahf
subb
pop
roll
pop
lahf
mov
leave
push
jge
rcrl
lahf
in
cmc
aam
mov
imul
andl
pop
movsb
sub
pop
mov
scas
push
sbb
jp
mov
add
lea
jge
push
shrl
dec
mov
aad
mov
mov
sarl
mov
fcoms
pop
repnz
inc
and
out
je
pop
and
push
inc
pop
pop
xor
mov
sub
outsl
or
mov
test
add
jns
fwait
push
mov
pop
sbb
mov
bound
lahf
out
stos
fsubl
ret
push
dec
mov
jmp
or
sbb
fnstsw
mov
arpl
add
xor
bound
inc
jp
mov
rolb
stos
xchg
insb
pusha
push
cmpsl
mov
add
inc
xchg
add
fadds
in
mov
lea
inc
fcom
pop
rcll
sbb
loop
loop
and
xor
xlat
cmpsb
lea
or
cli
sub
jp
dec
inc
mov
jecxz
es
pushf
repz
adc
das
add
popf
pop
cmp
dec
sbb
dec
mov
aad
test
and
repnz
mov
or
sbb
mov
pop
mov
mov
inc
adc
stos
mov
mov
push
movsl
divl
xchg
daa
add
je
push
dec
insl
pop
mov
inc
lock
mov
int3
inc
jecxz
sub
mov
or
ja
push
xor
lods
push
adc
ret
push
jnp
imul
and
in
rclb
into
dec
mov
mov
std
push
and
sub
call
push
sub
xchg
sub
fwait
xor
sub
inc
insb
sti
out
out
test
nop
jns
bound
mov
cmpsl
cmc
pop
pop
rolb
xor
xor
mov
dec
mov
jns
cmp
adc
push
sti
fidivl
shrb
push
inc
push
in
mov
mov
dec
push
and
mov
pop
sub
loope
or
and
add
das
or
sub
mov
dec
mov
jmp
cmpsb
aaa
xor
pusha
fsubs
dec
aam
dec
in
jne
icebp
imul
xlat
adc
inc
mov
adcl
mov
fdiv
push
inc
cli
inc
mov
out
rcrb
or
sahf
movsb
fs
add
xor
lret
xor
adc
imul
cmc
test
or
inc
dec
inc
into
fmuls
cmpsl
shll
shl
int3
mov
mov
push
push
lahf
mov
clc
jge
cmovne
and
addr16
dec
adc
pop
aaa
mov
push
mov
cs
mov
test
cs
sub
mov
mov
sub
adc
popf
enter
and
mov
pop
inc
add
add
repz
push
and
dec
pop
xor
mov
insb
popf
mov
fcmovu
jecxz
or
fnstcw
jns
jmp
dec
out
xor
and
fs
pop
movsb
std
test
dec
push
outsl
and
pop
jmp
gs
jle
enter
fstpt
sti
roll
mov
scas
or
test
add
movsb
dec
sub
scas
push
mov
dec
es
lahf
mull
xor
dec
adc
sbb
mov
inc
sub
pop
xchg
ja
mov
ret
bound
daa
dec
pop
out
mov
add
xchg
clc
mov
int
mov
sbb
lock
subl
xchg
div
pop
repz
imul
test
pop
mov
jle
pop
lds
inc
adc
xchg
jmp
daa
cmp
push
popf
ljmp
test
out
clc
andb
jmp
mov
rcrl
sbbl
push
xor
mov
sahf
mov
adc
rcll
clc
arpl
in
cmpsl
rorb
mov
jmp
out
xlat
inc
cmpl
sahf
push
sub
adc
sarl
jecxz
jno
cmp
push
lock
es
sbb
lods
pushf
adc
mov
lds
adc
imul
insb
push
in
mov
pop
add
and
pop
jno
and
in
inc
dec
sub
mov
xor
xor
inc
movsl
lea
mov
inc
jb
adc
pop
test
pop
push
fwait
xchg
clc
je
push
inc
stos
cmpxchg
cmp
scas
cltd
mov
dec
jne
ja
push
in
inc
mov
into
aad
mov
xchg
mov
cmp
stc
push
mov
and
inc
xor
fsubrl
pop
lods
push
jb
scas
push
mov
shrb
popa
mov
lahf
mov
xchg
mov
inc
mov
dec
cmpl
inc
jp
mov
cmpsl
je
pop
dec
test
orl
inc
mov
lea
div
cmpsb
xor
lcall
js
adcb
push
mov
push
inc
fnstenv
xchg
mov
pushf
adc
ds
dec
jp
out
sbb
jb
push
lret
push
mov
pop
mov
out
sub
inc
in
aad
into
pop
cmp
cmc
fcmovu
xor
dec
push
pop
test
sti
and
cli
rorl
lret
repz
lods
sub
into
repnz
out
int3
inc
or
mov
sbb
outsl
pop
sarl
out
cmp
jne
jo
mov
jge
add
mov
jb
pop
pushf
rcr
cmp
scas
lods
sub
mov
rorb
sub
ljmp
adc
jle
jno
mov
incl
inc
jmp
sar
inc
add
psllw
leave
lret
add
das
test
push
dec
aad
loopne
mov
or
call
test
cltd
test
inc
pop
lret
inc
fistl
xor
decb
mov
push
rol
xchg
sbb
or
loop
and
or
mov
daa
out
add
sbb
shlb
adc
vpmuludq
xchg
cmp
int3
fwait
push
lds
mov
out
pop
in
cmp
stos
dec
cmp
idivl
pop
pop
add
pop
push
jl
and
cmp
push
repz
push
adcb
xchg
cwtl
push
jle
fsubl
mov
add
rcrb
lcall
imul
sub
stos
cmp
push
rorl
add
aaa
push
stos
and
cld
call
ljmp
aas
push
xor
pop
cwtl
clc
mov
int3
hlt
sub
icebp
mov
aad
sub
into
dec
pop
and
xor
in
pop
mov
fists
dec
outsb
mov
mov
sahf
call
aas
mov
fistl
fmulp
push
jge
imul
out
aad
nop
stos
lea
xchg
fmuls
sbb
xchg
sarl
int
lcall
sbb
adc
xchg
xor
fiadds
jae
adc
add
jmp
test
jl
cmp
insl
and
dec
and
jb
pushf
mov
aad
iret
mov
push
call
mov
popa
sub
bound
push
out
pop
dec
add
and
aaa
dec
inc
xchg
adc
arpl
dec
mov
rolb
adcl
sbb
xchg
daa
bound
call
mov
dec
cmp
movsl
mov
sub
mov
sbb
rcrb
or
or
dec
and
cmc
test
roll
bound
dec
loope
cli
addr16
ljmp
adc
adc
pop
mov
push
dec
jecxz
jmp
cmc
add
xlat
add
mov
xor
insb
je
dec
mov
mov
push
mov
xor
inc
xchg
aam
fldt
sahf
ja
enter
or
push
mov
repz
inc
aam
lcall
sub
outsl
and
lock
ret
and
sbb
jg
in
cmp
fdivrs
push
pop
add
mov
or
adc
addb
add
sarl
sti
dec
jg
add
clc
js
outsb
jle
push
frstor
lds
loop
icebp
fimuls
ds
add
xor
lea
pop
xchg
fisubl
push
jle
push
int
jge
addr16
mov
dec
inc
and
lret
loopne
aaa
mov
lahf
mov
mov
out
int
je
pop
dec
mov
inc
bound
or
aaa
adc
ljmpw
push
mov
mov
into
scas
mov
jae
xor
inc
mov
push
sahf
movsb
xchg
in
jb
or
ss
mov
loop
pop
stos
add
dec
add
sub
fs
dec
jb
xchg
mov
sub
sub
ja
add
dec
xor
and
pop
mov
into
sub
add
out
js
aaa
movsb
dec
mov
rorl
les
bswap
pop
sub
pop
sti
jp
das
and
dec
jl
clc
hlt
mov
aaa
jae
idivb
scas
inc
jl
aad
jmp
mov
pop
subl
jg
leave
loopne
sub
cld
lahf
pusha
shrl
xchg
lret
mov
xorl
xchg
mov
xor
cs
mov
cmp
pop
inc
pop
dec
inc
cmpsb
cltd
mov
lock
or
fs
addb
and
xlat
test
rclb
jl
or
dec
fisubl
push
fsub
lret
push
xchg
in
mov
or
cmp
jnp
sub
cld
pop
or
mov
xchg
loop
mov
hlt
hlt
push
call
jno
pop
ret
xor
imul
ds
xor
lock
fildl
pop
sub
mov
dec
xor
bound
scas
shlb
xorb
adc
repnz
cmpsl
outsl
dec
icebp
push
xchg
inc
jge
rolb
out
push
xor
lock
push
outsl
xchg
cmp
jg
xchg
pop
leave
jmp
adc
add
xchg
aaa
ljmp
cld
sbb
mov
add
mov
out
sbb
jle
cmp
or
mov
pop
sbb
cltd
std
lea
add
xor
sub
cld
stc
ss
test
xor
in
cmp
push
inc
xchg
into
movsl
inc
scas
fldcw
loope
arpl
popa
sbb
add
movsl
lea
subb
ds
adc
push
or
jp
pop
fdivl
mov
sbb
lcall
and
cmpsb
jge
push
out
cmp
inc
inc
lea
inc
lods
rol
jmp
adc
ja
jns
cli
xor
xchg
fwait
jbe
cmpsl
les
or
daa
jae
inc
test
push
adc
shlb
aas
movsl
lock
adc
stc
add
into
out
bound
dec
fs
aaa
ucomiss
lcall
mov
fs
in
cmp
popl
adc
jo
mov
dec
es
jp
push
movsl
mov
mov
popf
movsb
sbb
aam
push
addr16
mov
xchg
ret
xlat
mov
push
loop
inc
cmp
ja
pop
shll
or
pop
test
std
fmul
cltd
lds
into
jle
cld
insl
das
call
inc
sti
dec
push
xor
lcall
sbb
xchg
pushf
pop
fdivrs
daa
movb
insl
sub
call
sub
pushf
lods
inc
push
out
xor
xchg
ljmp
xchg
push
mov
push
push
out
ljmp
ljmp
and
enter
xchg
xchg
mov
aad
add
inc
lods
add
fildll
pop
aam
jne
loop
stos
fstpt
dec
and
adc
iret
icebp
mov
fldenv
and
mov
inc
out
pop
add
xor
add
ss
mov
sbbl
xchg
xchg
cmpb
out
mov
aas
std
hlt
daa
out
xlat
pop
ss
xchg
ret
das
test
dec
lret
jp
xchg
cli
sub
push
scas
aad
sbb
gs
jmp
xchg
xlat
sarb
out
jecxz
das
pusha
add
fisttpll
leave
out
jg
mov
iret
inc
daa
mov
and
or
subb
jle
scas
js
cwtl
pop
cli
inc
xlat
mov
and
insb
ss
inc
leave
insl
and
pop
mov
sub
scas
fisubrl
fcoml
cmpsw
sbb
add
jbe
stc
sub
and
xor
cli
jecxz
jns
dec
ss
call
cs
ljmp
lea
jae
mov
jmp
out
inc
sahf
ljmp
out
ret
jb
push
imul
dec
loope
daa
imul
pop
or
mov
sahf
or
and
ljmp
aad
fwait
ljmp
jno
in
jne
fnstenv
repz
hlt
push
push
mov
jb
icebp
pop
out
mov
or
out
jb
inc
lret
ja
or
aad
imul
push
loop
mov
popa
adc
mov
mov
mov
pop
push
add
divl
push
pop
scas
and
and
inc
jmp
dec
out
test
mov
dec
jnp
jb
pop
xor
iret
inc
scas
mov
sub
pop
mov
add
cmp
ret
xor
mov
sbb
push
xor
mov
sub
dec
push
loopne
lds
fucomip
jns
mov
fdivrl
jno
arpl
pusha
pop
fs
sbb
mov
outsl
sbb
setae
lods
popa
jo
fstpt
add
sub
mov
cmpsl
bound
jns
lret
jecxz
pop
cltd
outsl
jecxz
fs
iret
adc
mov
mov
sub
in
pop
je
sti
push
xchg
scas
sub
adc
and
pop
je
fwait
or
testl
lods
cmp
dec
push
scas
push
ror
pop
pop
xchg
stos
hlt
test
std
pusha
dec
push
pop
push
pop
push
dec
adc
aaa
aas
lds
cmpl
sti
je
xchg
sub
out
cmpsb
sbb
cmp
pop
pop
mov
stos
in
cmp
aam
xor
clc
movsb
mov
cmp
push
inc
mov
clc
push
push
xchg
jl
adc
out
lock
fsts
iret
jne
cmp
cltd
and
iret
out
ret
push
insb
or
jo
fldl
sub
dec
xchg
jmp
fstpl
push
dec
in
movsl
mov
dec
push
mov
pop
enter
push
jmp
shrl
sahf
stc
mov
es
cmp
add
loopne
int3
sub
mov
mov
sub
mov
push
addr16
push
mov
mov
mov
insb
jmp
fxch
inc
rolb
lret
call
aas
adc
mov
push
into
dec
lret
roll
or
int
mov
cmpl
mov
adc
add
arpl
xor
leave
icebp
cmpsl
in
aas
lods
add
adc
lods
aad
out
xlat
push
into
fmul
aam
jmp
mov
icebp
fadds
repz
nop
ret
cmp
sti
adc
data16
xor
xchg
mov
jno
jnp
aam
jne
out
or
into
adc
jo
jle
inc
cmp
jl
outsb
pop
call
in
add
xor
push
inc
iret
push
or
imul
xor
enter
pop
lods
push
mov
xor
xchg
push
ja
or
int
stos
sbb
xor
outsb
sub
fwait
jns
xchg
pop
aas
fcomps
rorb
arpl
add
mov
and
aaa
es
pop
add
sub
js
sarl
push
pop
mov
xor
insb
imul
xorb
xchg
pop
test
int
xor
pusha
fcmovb
stos
popa
jle
jle
or
test
cmp
and
mov
pushf
stos
rol
cmp
mov
rorb
test
imul
jge
out
movsb
and
sbbb
mov
out
jecxz
sub
in
das
mov
fs
or
adc
andl
mov
or
push
icebp
in
mov
out
inc
stos
cli
xchg
in
jg
addr16
inc
push
xchg
sub
mov
add
mov
movsb
jecxz
adc
andl
std
mov
iret
das
lcall
pop
push
pop
xchg
ss
or
fsubl
pop
aaa
mov
aad
mov
pop
lret
xchg
in
cmc
leave
lods
cmpsl
fwait
jne
sbb
xchg
push
and
sahf
mov
or
push
lods
inc
sbb
xor
mov
xor
mov
jb
ficompl
mov
xchg
jae
fucomi
push
xchg
popa
push
xchg
adc
les
mov
ret
cmp
jae
in
or
cltd
xor
mov
dec
push
into
jo
sbb
push
or
jo
test
mov
pop
xor
dec
dec
fs
mov
mov
mov
scas
inc
sbbl
outsb
fimull
xlat
pop
push
or
ss
xlat
popf
xor
inc
ljmp
cs
adc
jg
or
pusha
cmp
xor
inc
aas
scas
fwait
sbb
dec
pusha
dec
pop
jecxz
jnp
fwait
add
mov
sub
cmc
xchg
inc
imul
sbb
jl
jne
into
lods
xchg
cld
sbb
lret
dec
aaa
jnp
sbb
add
mov
push
pushf
scas
or
sub
clc
rcl
pop
enter
jns
cmc
pop
sbb
push
mov
xor
inc
fisttpll
sarl
pop
pop
pop
fwait
mov
ja
or
dec
dec
sbb
gs
in
add
or
push
ja
mov
test
into
std
xchg
mov
jecxz
insl
loope
push
sbb
add
gs
lods
test
mov
in
call
dec
cltd
jge
fisttps
mov
push
mov
dec
out
mov
int
xchg
mov
fstps
das
mov
or
add
dec
dec
jbe
mov
lock
popa
pop
cmp
xchg
stc
lds
shr
out
xchg
negl
fildl
out
mov
fs
adc
pop
cmp
es
movsb
xchg
andl
pop
push
fistps
lret
add
repnz
sub
sbb
xchg
cltd
cmp
out
daa
mov
jb
clc
inc
cmp
stos
mov
repnz
loopne
sbb
push
sub
cmpsl
xchg
jge
addb
into
mov
ds
popw
repnz
shll
mov
jno
data16
leave
ret
mov
sub
sarl
add
sub
pop
iret
xor
addr16
sti
inc
mov
sbb
gs
adc
data16
shll
pop
je
sbb
fcmovnb
jl
lock
stos
aas
jecxz
rcr
inc
out
int3
cmp
mov
dec
ljmp
stc
inc
fisttpll
sbb
jecxz
int3
push
out
mov
fdivl
sbb
sbb
xchg
xor
cltd
jns
cld
fisubrs
loopne
mov
mov
jae
pop
daa
adc
jae
dec
movsl
les
inc
outsb
shlb
dec
sti
rcl
xchg
loop,pn
pop
neg
fnstsw
lods
into
lods
dec
mov
add
push
clc
sarb
and
sbb
in
idivb
jnp
xchg
ds
adc
pop
loope
dec
adc
lods
mov
mov
adc
mov
xor
sub
xor
negl
mov
test
mov
mov
clc
jg
mov
mov
mov
cld
push
xlat
push
sbb
mov
dec
out
outsb
mov
dec
inc
push
jl
sub
cltd
xchg
das
aas
and
subb
dec
dec
daa
mov
ret
hlt
jecxz
js
mov
mov
subl
pop
fcmovu
loopne
outsb
xor
add
mov
stos
repz
dec
or
dec
mul
stos
insb
das
es
aam
mov
or
xchg
dec
repz
test
or
dec
push
cmp
inc
adc
pop
and
dec
push
mov
cmp
pop
add
leave
scas
xchg
leave
ror
mov
dec
flds
push
jge
dec
dec
dec
pop
aam
sub
jecxz
mov
jo
adc
mov
xor
cmc
push
mov
pop
xchg
cmp
mov
mov
and
and
jge
lcall
add
add
add
xchg
jmp
pop
push
lret
ficomps
cmp
out
add
jno
aam
in
adcb
in
in
lahf
out
ds
dec
les
pop
mov
mov
aas
in
cmp
pushf
pop
mov
pop
sub
push
test
dec
adc
stos
testb
inc
out
inc
push
inc
ret
pop
hlt
scas
ds
jp
push
xchg
ds
gs
jge
out
or
and
xchg
rcrl
cmp
leave
jg
clc
and
aas
shrl
xor
xchg
dec
psllw
inc
outsl
mov
inc
push
push
aad
lahf
fwait
pop
adc
dec
cltd
inc
outsl
data16
add
je
sub
dec
inc
inc
dec
adc
enter
fidivrs
jns
adc
jmp
mov
or
pop
jbe
xor
sbb
popa
aas
mov
aas
out
bound
cmp
lock
mov
inc
add
out
scas
adc
inc
add
pop
in
cwtl
in
sub
dec
inc
in
add
fwait
mov
sub
shl
mov
mov
jp
ss
mov
lds
loopne
dec
das
nop
jnp
mov
inc
pop
mov
pop
fldpi
mov
sub
cmpsl
xchg
mov
adc
adc
mov
je
jp
in
jo
jo
pop
jecxz
shlb
sbbl
int3
movsb
mov
add
arpl
and
jno
or
sub
or
aam
add
mov
imul
ja
je
mov
loop
pop
mov
mov
outsb
mov
outsl
int3
fisubrl
sti
int3
or
ds
lock
nop
fisubrs
ret
ret
test
in
pop
mov
leave
jecxz
mov
cltd
mov
lods
sbb
xor
adc
lock
pop
dec
pop
lahf
icebp
sub
cmp
dec
and
aam
push
sti
mov
sbb
mov
std
icebp
jnp
xor
cmp
test
mov
xor
mov
inc
mov
mov
roll
insl
jne
mov
adc
push
dec
jl
pop
mov
das
int
or
roll
sbbl
repz
or
je
rolb
test
xchg
pop
dec
aas
add
enter
aam
insb
lret
or
xchg
rcl
jns
jne
xor
enter
jmp
mov
mov
jecxz
jg
jnp
loope
lcall
xlat
mov
repnz
add
js
shlb
aam
jge
jp
xor
mov
movb
loope
push
cwtl
adc
lods
stc
arpl
lret
xlat
xlat
mov
pop
pushf
dec
or
jae
or
adc
call
adc
sti
mov
jmp
jo
mov
outsl
or
orl
push
mov
mov
clc
dec
leave
lods
cmp
rcrl
jo
int3
cmp
pop
mov
push
ret
add
inc
add
cmpsb
les
stos
mov
cmp
jbe
inc
gs
inc
loopne
jg
imul
and
fucomp
inc
push
cmp
cmp
adc
in
dec
lahf
xchg
mov
cwtl
dec
addr16
xor
mov
cmpl
push
shrl
cli
add
lds
xchg
pop
jne
test
mov
sbb
divb
mov
cmp
cmpsl
or
outsl
divl
dec
xchg
fbld
dec
push
and
sub
sahf
stos
sbb
repnz
fstps
adc
jg
and
inc
int3
jmp
pop
shlb
adc
cmp
cmp
or
repz
int
jo
jge
inc
add
sub
lcall
paddsw
inc
rclb
negb
test
ss
imul
outsl
dec
outsl
inc
push
xchg
sbb
roll
sub
cld
mov
jp
ljmp
sub
jo
loopne
hlt
mov
sub
in
mov
int
sbb
dec
cmp
pop
xor
imull
lea
mov
jbe
inc
data16
mov
or
dec
sub
add
sbb
inc
bound
call
cltd
add
icebp
loop
inc
test
xchg
jbe
or
fmuls
pop
xor
outsl
push
jb
pop
push
sub
jns
mov
je
or
dec
sbb
jnp
shl
lds
cmp
mov
inc
dec
sbb
paddw
scas
aad
cmc
sbb
pop
jle
enter
clc
jle
aas
in
pop
jg
shrl
loop
aas
mov
and
sub
mov
lcall
incl
cmp
repnz
idiv
ja
loopne
faddl
mov
scas
sbb
xchg
fcomps
cmp
mov
inc
ljmp
jmp
icebp
insl
test
mov
inc
or
leave
mov
mov
js
popa
stc
lods
pusha
push
rorl
jnp
and
jne
mov
cmpsl
adc
add
data16
lret
sbbb
add
adc
clc
add
push
ss
into
insl
setb
insb
mov
fimuls
push
ret
push
cwtl
mov
adc
xchg
cmp
push
test
push
cld
ss
mov
pop
mulb
sbb
push
das
rdmsr
pop
movsl
mov
dec
sub
imul
mov
arpl
in
jo
jne
and
xchg
pop
sbb
test
mov
mov
lds
cmc
mov
lret
adc
out
sbb
inc
add
add
lods
or
pop
lea
mov
push
les
push
js
sbb
pusha
sub
testl
sbb
icebp
jbe
arpl
xchg
stc
rolb
and
xchg
insl
pop
out
xchg
mov
and
xor
enter
dec
and
xorl
push
mov
lcall
xor
into
movsl
lret
lret
push
cmp
push
movsb
fsubrp
pop
shr
pop
or
mov
add
stc
mov
int
push
sub
adc
fcmovb
pop
call
xchg
into
mov
fcomps
stos
fadds
loope
push
test
out
xor
fnsave
add
mov
xchg
add
cmc
ret
in
inc
push
sbbb
lahf
adc
mov
repnz
push
les
mov
stc
jge
out
pop
aam
xor
mov
enter
xchg
jns
or
test
sbb
jp
xor
das
fcmovnu
push
add
mov
aaa
mov
mov
mov
sti
jmp
cmp
or
bound
mov
mov
lahf
push
int3
mov
inc
leave
xchg
fs
xor
das
push
inc
xchg
xchg
xchg
add
int
lahf
push
in
les
cmp
in
cmp
and
push
divl
sbb
int
lods
sbb
mov
xorl
sti
cs
cmp
jns
jbe
mov
jle
cmp
nop
test
mov
add
dec
test
les
sub
xor
div
sub
shlb
repnz
ficoms
or
xchg
mov
addr16
jmp
mov
xchg
loope
inc
add
xor
lea
pop
pop
or
mov
adc
stc
imul
fsubr
loopne
bound
repz
jbe,pn
or
push
pop
shll
push
sbb
dec
incl
xchg
out
test
pusha
sahf
insl
dec
xor
dec
stos
add
push
dec
lods
outsb
xchg
test
ds
push
dec
mov
xchg
dec
and
cwtl
ss
pop
std
xor
pop
xor
in
cli
add
negl
out
or
sub
lret
in
cmp
sbb
mov
jo
and
fsubrs
mov
mov
les
test
ljmp
test
lcall
cmp
xchg
icebp
mov
in
mov
xor
xchg
iret
pushf
mov
aas
jno
lds
lcall
xor
fcoml
or
sti
cli
inc
xchg
mov
ljmp
inc
das
addr16
movsb
test
es
negl
sub
dec
jns
and
dec
jno
std
movsl
push
cmpsl
popf
insb
lret
mov
mov
clc
xchg
pop
movsl
fwait
outsl
fisttpl
sbb
rorb
pushf
sub
lods
pop
sbb
xchg
dec
jecxz
fs
xchg
orl
pop
pop
sbb
jecxz
inc
inc
ret
add
mov
mov
dec
sub
push
cltd
testb
xor
fcmovne
mov
sbb
imul
push
cmpsl
fsts
pusha
or
adc
sarb
ja
jae
push
in
sbb
inc
add
call
bound
inc
loope
pop
pop
cmc
xchg
loopne
into
sbb
mov
push
dec
push
xor
pop
mov
cltd
pop
cmp
test
data16
loopne
rorl
popa
aam
loope
jo
jae
mov
xor
and
mov
jg
cmpsb
test
mov
and
ss
cmp
xor
sbb
cmp
hlt
in
insb
mov
clc
cmp
iret
inc
pop
nop
lret
sub
and
into
lea
inc
test
clc
std
inc
cld
gs
addr16
movsl
and
loope
lcall
clc
rclb
daa
dec
pop
sbb
lods
test
fistpll
rorl
xor
adc
sub
mov
les
cmp
sub
push
clc
popa
push
dec
inc
ret
mov
xchg
shlb
scas
mov
sbb
js
mov
cwtl
jb
jp
mov
pop
cmc
pop
jp
pop
pop
fsubrl
ficoml
gs
imul
pop
imul
push
push
or
jne
jecxz
push
in
je,pt
sbb
fsubl
or
mov
iret
xchg
lock
cmp
mov
enter
xchg
pop
ds
pop
mov
fbstp
or
adc
daa
fcoml
jno
out
sbb
adc
ja
mov
icebp
xor
lods
sbb
dec
adc
scas
sbb
add
xchg
cmp
negl
int3
push
cmpsl
add
cmp
jp
fstpt
shl
adc
sub
ficompl
leave
jp
test
arpl
mov
xchg
fldt
stos
mov
nop
push
jg
imul
mov
jp
add
int
in
cmpsl
call
mov
inc
ds
sub
and
push
mov
adc
mov
lret
rcl
scas
shll
xchg
ja
inc
test
add
cwtl
shll
sbb
pop
mov
mov
iret
out
add
loope
lods
mov
mov
sbb
inc
dec
jo
into
mov
js
cmpsb
xchg
inc
adc
imul
ror
xor
insb
xor
push
ljmp
dec
cmp
out
aam
das
imull
cmpsb
push
pop
lret
aas
call
jmp
mov
inc
push
lahf
jmp
xchg
cmp
mov
lock
or
repz
int3
sub
xor
cmpsb
inc
xor
leave
testb
xchg
mov
loop
pop
mov
int3
pushf
loop
sbb
sub
pop
rclb
or
fsub
ffree
popf
cld
ret
jge
rorl
xchg
das
mov
sahf
sbb
cmp
jns
imull
cli
push
out
pop
filds
mov
les
ljmp
dec
and
xchg
je
lea
test
cmovns
push
push
cmp
pop
add
loope
pop
dec
loop
sub
movsb
subb
jb
jmp
adc
insl
push
xchg
cmp
add
mov
repnz
push
lret
out
jo
andb
xor
fbld
xor
lods
adc
sub
or
push
dec
sysret
inc
mov
adc
xor
pop
test
xchg
ljmp
bound
scas
dec
mov
sbb
xchg
pop
xcrypt-cfb
cmpsl
loop
lods
sti
and
pop
repnz
cs
sbb
std
add
push
repnz
lds
mov
sbb
cmp
outsl
inc
inc
addr16
push
inc
int3
cld
ds
mov
ret
dec
inc
or
pop
inc
xchg
mov
cli
inc
std
ljmp
jg
jae
jne
dec
insl
outsl
aad
jns
fbstp
sbb
pop
cmp
mov
push
ljmp
daa
pop
adc
fs
xchg
mov
push
dec
cmp
lea
dec
pop
fcomps
pop
aaa
pop
je
inc
lods
xchg
mov
inc
push
pop
int
jno
loope
xor
cmp
sub
loopne
pusha
dec
in
aas
pop
call
mov
push
notl
and
pop
mov
jbe
mov
and
addb
xor
mov
pop
aas
ja
ud1
xchg
inc
fldt
test
imul
sbb
pop
sahf
jo
shlb
and
test
icebp
es
dec
mov
jecxz
dec
cmc
cmp
daa
add
dec
stc
pop
lcall
mov
add
mov
mov
add
and
je
sub
adc
dec
scas
adc
mov
shll
xlat
test
or
popa
fimull
sbb
aaa
enter
lock
dec
mov
cli
loop
sbb
clc
fadds
inc
add
sub
iret
xor
push
stos
imul
fisttpl
ja
mov
sti
mov
sbb
cmp
xchg
test
les
inc
and
push
pop
movsb
xor
mov
sbbl
jp
dec
mov
mov
imul
stc
and
add
xchg
movsl
dec
jmp
loopne
xchg
push
stos
add
sbb
sub
jp
mov
push
adcb
cmp
fiadds
push
adc
jp
pusha
mov
and
push
push
push
stos
testl
adc
fistps
mov
lods
stos
pop
sbb
sub
iret
aad
xor
cli
jg
adc
rolb
out
and
inc
jns
jle
outsb
ljmp
into
lret
cs
mov
xchg
jg
shr
add
jle
pop
out
mov
mov
mov
ljmp
push
test
pusha
push
lods
clc
pop
popf
int3
jns
addb
jp
sti
and
or
mov
pushf
mov
jp
fdiv
dec
loope,pt
mov
cmc
jno
push
adc
xchg
pop
aas
push
sahf
or
fs
dec
ss
push
inc
inc
mov
sbb
lcall
test
push
xor
and
mov
fisubrs
fistl
mov
inc
dec
and
out
mov
and
push
out
icebp
pop
inc
jg,pn
xchg
sbb
sub
xchg
gs
add
les
pop
mov
xchg
in
push
fistpl
inc
push
aam
ret
sarb
add
pop
test
mov
paddq
xchg
push
sti
movl
dec
inc
mov
mov
mov
jo
sbb
add
push
and
data16
jb
sub
and
int
mov
add
cmc
mov
add
push
subl
lock
sub
icebp
jge
fnclex
mov
or
in
or
jne
jg
inc
mov
aas
pushf
inc
popa
inc
js
xor
and
mov
mov
cmp
repz
out
and
mov
cmpsb
pop
add
mov
popa
test
cmpsl
test
pop
mov
test
fsubs
inc
sub
sbb
mov
push
sub
or
jmp
or
xor
sub
enter
out
je
or
lahf
jns
fiadds
jo
add
testl
movsl
movsb
rdmsr
xchg
dec
adc
fstl
mov
sbbb
aaa
dec
fnstsw
aad
shl
mov
cli
bound
mov
xchg
sbb
xchg
add
push
sbb
minps
movsb
loop
push
push
jmp
cmpsl
mov
int
cwtl
jno
mov
leave
test
into
cltd
pause
pushf
shrl
hlt
rcll
das
insb
mov
and
sarb
lods
dec
nop
clc
xor
rcll
inc
xchg
dec
inc
int3
lret
jne
jmp
hlt
outsl
pop
sbb
or
icebp
lods
cli
test
pusha
push
and
in
mov
or
inc
fisubs
imul
movsl
adc
xchg
push
jne
mov
test
adcb
inc
pop
loope
cs
push
hlt
mov
adc
dec
lcall
scas
sbb
stos
adc
jle
stc
jo
xchg
out
cmp
cmpsl
and
sub
setne
insb
add
movsl
stos
test
shll
jg
jnp
js
sbb
xlat
inc
jg
insl
push
add
rcll
enter
xchg
push
fs
ret
push
pop
xor
sbbl
or
sub
xor
sub
jo
fldcw
mov
leave
mov
xchg
cmp
add
adc
ja
enter
imul
scas
lods
jns
sub
sbb
push
jecxz
add
clc
das
or
or
and
mov
cmp
sub
jmp
stos
test
dec
testl
or
notb
dec
sub
bound
arpl
pop
ss
and
inc
pushl
stc
add
mov
inc
jp
ffree
xor
cmp
adc
aam
or
xchg
outsl
stc
je
and
xchg
pop
dec
sub
imul
pop
cs
jb
cmp
bndldx
into
xor
jl
roll
xchg
lahf
cmc
pushf
pop
into
mov
xor
xor
mov
pop
jo
xchg
lcall
push
int
ljmp
sbbb
jnp
push
cmp
inc
js
dec
adc
inc
jno
mov
jg
jmp
jmp
dec
lret
pop
test
sbb
push
add
dec
add
les
cmp
cmpb
sbb
push
jmp
dec
or
test
fists
stos
or
in
mov
jge
mov
xlat
insl
test
das
cld
cwtl
dec
jecxz
mov
lock
gs
stc
es
mov
fbstp
xchg
sbb
xchg
out
scas
in
adc
mov
sbb
pop
mov
jg
scas
dec
jg
or
adc
jbe
aas
ds
add
data16
lcall
rolb
pusha
inc
imul
jl
sub
adc
movsl
sti
std
fs
stos
imul
sti
xchg
cmp
xlat
pop
jle
ficoml
aad
mov
jo
jne
test
pop
push
fwait
mov
mov
fs
mov
cmp
cmp
scas
clc
loopne
lahf
cmp
cmp
mov
mov
out
cld
push
push
cmpsl
xchg
pushf
movsb
pop
fwait
mov
mov
adc
xchg
cmp
pop
mov
cltd
fs
mov
push
or
dec
jle
xchg
pop
jno
jne
push
out
adc
and
daa
xchg
ljmp
roll
push
xor
xchg
push
mov
rcl
pop
sbb
mull
sahf
lea
pop
shll
lods
bound
sar
mov
push
test
int3
cltd
pop
push
rorb
jp
jbe
jecxz
popa
out
or
mulb
es
enter
stc
fisttpl
mov
imul
sbb
mov
jb
subb
add
push
mov
jno
xor
mov
and
dec
pushf
movsb
icebp
stos
nop
fiadds
js
es
mov
movsb
jle
adc
push
pop
out
or
xor
xor
stc
push
adc
repnz
into
lds
dec
cmp
push
lds
mov
mov
jmp
jnp
and
loopne
dec
in
fsubrl
popf
fsubrl
jmp
out
aad
leave
loope
shll
push
out
dec
mov
inc
push
fs
xchg
or
mov
inc
loope
es
pop
mov
xchg
data16
pop
xchg
outsl
inc
cmp
scas
xlat
or
aas
outsl
dec
push
test
xor
ds
mov
insl
add
add
xor
lret
or
mov
lret
jae
insl
sbb
push
inc
into
mov
mov
add
push
fmull
sbb
mov
jg
push
inc
iret
mov
xchg
in
push
shrb
cmp
loope
cld
push
in
arpl
addr16
push
add
loopne
adc
and
lret
pop
fsubrs
js
jl
shll
lret
cmp
fwait
jns
scas
inc
lock
xchg
fmul
shl
xchg
es
movsl
lods
xchg
movsb
pop
test
sub
int3
lret
jecxz
call
repz
mov
int
mov
add
pop
ficoms
iret
sbb
aam
syscall
scas
sub
mov
loopne
sbb
adc
mov
out
xchg
out
mov
cmpsl
adcl
insb
push
sahf
sub
and
fld
aam
adc
shlb
fnstsw
mov
xor
shlb
jg
xchg
xorl
fsubrp
cld
xor
cmp
insb
sub
fmul
mov
pop
repz
pop
add
aaa
js
movsl
mov
les
mov
out
stos
xor
pop
push
fadds
mov
repz
mov
inc
cwtl
jmp
push
cmpsb
mov
pop
mov
dec
push
imul
and
xrelease
nop
loope
jae
sub
inc
sbbb
jns
jl
ret
inc
push
mov
cs
cwtl
bound
clc
scas
and
cli
push
aam
sbb
test
dec
repz
adc
int3
xchg
mov
pop
test
push
rcrl
imul
cmp
lock
decl
movsb
xor
cltd
shlb
fcmovu
inc
mov
insb
iret
lods
jecxz
lret
jb
repnz
int3
mov
std
scas
das
add
out
cmc
imul
insb
mov
mov
fdivl
cwtl
pop
xor
lods
idivb
call
fs
dec
and
or
sub
fwait
push
cmpsb
mov
popl
push
divb
fwait
dec
sahf
inc
and
sbb
inc
test
push
scas
push
xor
mov
mov
ljmp
in
xchg
push
inc
out
lods
push
sbb
push
repnz
cmp
movsl
cmp
loope
hlt
sbb
lods
and
sbb
pop
enter
jns
pop
aaa
or
mov
aas
pop
or
jmp
xor
int
dec
scas
ficompl
add
or
sub
mov
inc
mov
mov
insb
addb
lcall
rdtsc
out
jmp
inc
dec
cmp
rcrl
iret
into
pop
xchg
pop
mov
and
leave
and
mov
aam
adc
sti
icebp
mov
les
push
jp
jp
xor
cmp
or
aam
cmp
in
popf
mov
lret
or
call
orl
sbb
ja
pusha
adc
sbbl
movsl
iret
adc
cmp
pop
insl
scas
pop
sbb
add
ficoms
aaa
lea
outsb
pop
js
adc
bound
out
cld
rep
rcll
jns
in
leave
inc
sbb
xchg
cli
push
ss
xchg
lret
cs
arpl
movsl
daa
stc
mov
divb
enter
sub
and
insb
sub
ret
xchg
inc
ja
mov
or
dec
shrb
lcall
mov
loop
inc
movsb
mov
stc
pop
movsl
ja
fldcw
jno
sub
ja
xlat
insb
clc
lock
iret
dec
jle
mov
cmp
pop
call
int3
out
enter
xor
out
ret
stos
dec
pop
and
push
andb
jge
je
enter
mov
mov
fldl
test
and
les
pop
aaa
pop
add
push
int3
sarl
ja
jp
sub
mov
ds
lret
fisubrs
aad
and
jns
pop
popa
push
loopne
fcoms
cmp
aad
adc
fs
pop
add
cli
pop
lret
dec
mov
add
fbstp
push
jb
cmpsb
adc
mov
mov
xor
mov
ja
int3
add
call
fistpl
outsl
xchg
ret
cwtl
aad
mov
bswap
pop
jle,pt
lret
push
stos
rcr
fildll
inc
xchg
xor
mov
jae
sub
ss
pop
sub
and
fsubrp
hlt
shl
jl
cwtl
repz
arpl
jecxz
jnp
inc
and
mov
pushf
mov
nop
jno
pop
mov
pop
jno
shrl
std
je
mov
pop
aas
inc
and
jnp
add
pop
jns
lea
dec
xor
cmpsb
lret
inc
out
push
push
xchg
stos
dec
add
inc
shrb
cmp
push
int3
and
aaa
int3
or
fwait
outsb
dec
mov
incl
push
add
dec
xchg
xor
stos
ljmp
push
fildl
loopne
ljmp
cltd
pop
outsb
jl
cmp
inc
pop
mov
jbe
xchg
adc
push
mov
stos
pop
or
pusha
and
std
aas
mov
sbb
mov
xor
push
in
adc
cmp
cli
std
jo
cmpsb
je
mov
std
push
adc
mov
push
and
cmp
push
cwtl
sbb
je
fidivrl
stc
dec
pop
xchg
add
idiv
jnp
out
or
js
outsl
or
pop
push
pop
test
adc
rclb
insl
data16
pop
in
js
cs
cmp
add
mov
mov
xor
sub
cmp
jp
mov
xchg
outsl
sbb
jmp
lods
and
sub
cmp
pop
jnp
mov
mov
mov
dec
fstps
ja
aas
mov
xor
sbb
and
cmp
push
sub
shl
xor
adc
mov
adc
mov
mov
aad
sbb
jmp
mov
mov
movsl
cmp
mov
dec
sub
mov
xchg
mov
fsubrl
loop
movsl
fldcw
sbbl
pop
mov
test
rcrb
dec
add
gs
push
popa
pop
dec
fwait
daa
cmpsl
and
int3
pop
jmp
out
js
sahf
stc
add
mov
insb
lahf
ret
xor
pop
loope
push
push
sbb
xor
mov
push
or
or
lret
insl
sbb
jb
add
hlt
incb
cmc
jl
cmc
sbb
xor
repnz
inc
nop
cmp
iret
sub
pop
fwait
repz
mov
ss
loopne
stos
test
adc
pushf
and
lds
das
movsl
cltd
pop
mov
movsl
nop
popf
inc
leave
mov
jb
test
cmc
aaa
mov
loope
add
xchg
cmp
movsl
test
out
daa
xor
mov
xchg
rcr
push
pop
jecxz
in
test
mov
push
mov
in
aaa
into
dec
rclb
dec
cmp
ficoms
or
mov
xchg
jo
insl
dec
testl
pushaw
outsb
test
sbb
hlt
out
pop
mov
ss
enter
cmp
xor
test
mov
add
sub
aaa
dec
lock
mov
daa
dec
dec
cmp
mov
jbe
imul
imul
adc
cmp
cs
imulb
gs
daa
cmc
ret
adc
xor
sub
lods
cltd
push
loopne
popa
mov
jge
jecxz
les
mov
out
cmpsb
push
push
sub
sbb
xchg
jb
loope
fsubl
mov
data16
adc
dec
xorb
or
mov
jns
or
sub
xor
gs
pop
mulb
js
adc
and
inc
mov
inc
insb
add
mov
cmp
or
mov
jo
cbtw
jns
icebp
leave
mov
cmp
shll
inc
xchg
push
jle
jecxz
icebp
es
inc
les
je
or
xchg
bswap
lea
js
test
loop
and
lea
jmp
shlb
lret
stos
das
cmpl
lods
lock
movsl
inc
lock
popa
sti
rorb
jg
lods
add
add
mov
push
xor
inc
aas
inc
mov
adc
lcall
in
push
movsl
ffree
push
push
sbb
xchg
popf
flds
pop
dec
sub
cmp
out
mov
loop
xrelease
stos
mov
lahf
int
xorb
ljmp
xchg
rcr
rorb
lock
add
mov
movsb
in
cwtl
lahf
out
faddp
mov
bound
dec
mov
dec
pop
xor
inc
xchg
jae
add
into
mov
mov
sub
lcall
ds
or
lods
jne
push
out
push
pop
test
outsl
adc
adcl
pop
lcall
xorb
nop
lock
ds
push
sbb
lcall
sbb
test
negb
sub
test
sub
cmpsb
mov
pop
adc
inc
and
xchg
dec
dec
jp
cmp
fisttpll
sub
ds
cmp
jb
arpl
shrl
out
pushf
rcrl
mov
and
aam
push
jno
xor
shr
jae
jne
or
jp
jmp
push
sbb
jecxz
jge
pop
xchg
aas
jns
test
mov
rcl
jge
ret
xlat
xchg
cmc
push
pusha
test
cmp
fsubs
jge
adc
cs
add
scas
pop
loopne
in
sbb
jp
lret
mov
test
mov
xchg
divl
and
mov
popa
push
cmpsb
scas
and
adcb
adc
nop
xchg
call
cmp
push
sti
xor
in
cmp
push
sbb
sbb
fsts
xlat
pop
lods
int
sbb
pop
or
fs
icebp
sub
roll
ljmp
or
or
mov
jl
js
or
mov
or
in
sbbb
stos
in
mov
shlb
popf
add
dec
xor
mov
inc
xor
cmp
or
sub
add
call
cli
or
adc
imul
xchg
push
mov
xor
or
inc
adc
xor
insb
add
push
add
push
clc
aad
pop
int
cmpsl
repnz
lahf
int
mov
dec
ffree
out
pop
into
insb
nop
mov
mov
sub
in
xor
mov
and
pop
mov
sbb
push
jo
outsb
lcall
mov
arpl
mov
push
or
mov
test
jg
xchg
addr16
in
cmp
or
jg
push
stc
inc
negb
adc
mov
dec
idivl
and
int3
mov
ds
cmp
andb
enter
pushf
mov
std
outsl
loopne
add
pop
inc
ljmp
lods
outsb
ret
inc
pop
cmpsb
int
outsb
push
push
jecxz
inc
dec
lds
xor
jg
add
mov
hlt
dec
icebp
push
cmc
mov
push
push
rclb
ja
ret
mov
pop
pop
xchg
add
leave
ret
cmpsb
mov
inc
xchg
test
mov
and
dec
mov
cmpsl
mov
adc
cmpsl
pushf
xchg
lods
pusha
in
jecxz
mov
cmpsb
pop
pop
jb
ds
stos
inc
insl
cmp
or
xchg
leave
jno
cld
inc
aad
in
cmpb
cmp
push
mov
pushf
ret
imull
mov
popa
pop
jl
cmc
cmc
or
test
insb
push
outsb
fbstp
or
jge
loopne
scas
dec
sub
stos
dec
push
std
cli
jle
push
sarb
pusha
jae
pop
mov
insl
or
flds
adc
cmp
push
movsl
pusha
lcall
and
popa
mov
es
mov
pushf
cld
pop
out
fnstenv
dec
in
lds
notl
shl
fcomi
nop
xchg
gs
js
insl
cmp
and
loop
rolb
sub
das
push
cmp
inc
pop
cmp
mov
pop
pusha
jno
fidivrl
lods
push
xchg
sahf
shlb
loop
notl
inc
shlb
out
repz
aaa
ficomps
dec
inc
mov
add
jle
loope
and
imul
bound
sub
es
mov
movsb
jge
xchg
push
mov
dec
popf
push
neg
or
rcrw
mov
adc
xor
jb
jo
adcl
nop
cmp
ds
push
xor
jae
push
lock
mov
mov
or
aam
cmp
stc
test
pop
sub
and
sub
xchg
test
sahf
insl
xor
xchg
push
data16
jmp
lcall
and
cld
loop
push
pop
loope
lret
push
out
iret
pop
out
pop
in
aam
pop
insb
xlat
push
jle
inc
or
subl
and
fisttps
push
sub
xor
mov
in
test
add
icebp
push
push
mov
enter
mov
mov
sbbb
mov
push
imul
cmpsl
pushf
fdivrl
sub
jle
out
and
mov
orb
mov
xchg
push
push
adc
xlat
xchg
jp
jo
lock
stos
inc
xorl
mov
pop
xlat
ret
daa
mov
sbb
rol
or
mov
add
mov
hlt
dec
or
cmpsb
or
popl
in
jne
cwtl
mov
pop
imul
mov
cwtl
xor
pop
cmp
icebp
fimuls
lahf
pop
inc
mov
rorb
test
sar
fcomi
paddsb
arpl
adc
out
or
dec
mov
or
data16
test
mov
add
icebp
aad
add
lcall
out
les
jmp
dec
add
dec
ficoml
sti
add
push
xchg
push
loope
lods
iret
sub
inc
fildll
lcall
shl
cmpl
mov
lods
hlt
imul
jns
jmp
inc
insl
imul
adc
xchg
mov
sub
xorl
fistl
cmp
fstpl
loopne
xor
daa
cmpsb
sub
cmp
adc
mov
adc
mov
lods
aam
jne
cwtl
xor
xchg
pop
pop
or
jo
push
cltd
mov
leave
cmpsl
fadd
ljmp
rcll
lahf
loope
test
pop
mov
dec
fwait
jae
int3
iret
mov
fs
icebp
xchg
adc
and
ljmp
xchg
ret
test
inc
jne
shrb
not
adc
out
fdivrl
in
loop
bound
lea
xchg
adc
arpl
cmp
imul
mov
fistps
sbb
fwait
sub
cltd
fnstsw
mov
push
jmp
xor
push
inc
jmp
pop
sbbl
enter
adc
pop
outsl
sahf
fs
fcomp
jno
jle
adc
enter
pop
push
push
mov
std
xchg
dec
ret
pop
cmpsb
cmp
test
cmc
adc
sub
jb
fdivs
inc
filds
or
jecxz
sub
and
mov
push
inc
cli
adc
test
push
ja
and
dec
xchg
push
subb
lret
and
out
orb
cmp
sbb
cli
inc
roll
jo
or
nop
rol
add
call
stc
in
lret
ret
imul
pop
push
jle
mov
jne
out
inc
popf
mov
mov
out
and
xchg
sbb
jbe
push
pop
xor
jmp
inc
mov
stos
pushf
mov
push
dec
sbb
stos
add
aaa
stos
jecxz
xchg
xor
enter
mov
push
mov
scas
xor
pop
adc
stos
mov
test
push
inc
test
fs
add
sub
stos
push
fisubs
xchg
mov
inc
and
fs
push
pop
popf
cmpsb
jbe
mov
mov
inc
jge
mov
test
and
flds
popa
or
jge
mov
shll
cmpsl
in
xchg
cmp
add
xor
daa
xchg
movsb
enter
imul
sbb
mov
in
or
out
push
jl
fbld
inc
inc
jle
xor
dec
jb
cmp
cmp
adc
jbe
mov
lock
sub
addl
jo
stc
or
dec
arpl
into
jecxz
adc
call
pop
sbb
loop
and
adc
mov
mov
cltd
mov
pop
dec
or
jae
lods
adc
push
adc
jnp
pushf
jne
xchg
fs
jne
push
inc
add
insl
imul
xchg
in
pop
inc
jg
cli
sbb
bound
loop
push
push
pop
push
jns
cmp
in
icebp
aam
push
push
dec
or
push
scas
popf
subb
cmp
inc
mov
movsl
push
fistl
xor
daa
sub
xchg
mov
cwtl
stc
add
pop
mov
pusha
ret
mov
cmp
cmp
cli
jne
andl
mov
scas
test
roll
adc
xchg
pop
lds
pop
add
push
cltd
mov
jnp
popf
aas
int3
std
or
pop
push
fucomip
sbb
jb
jnp
or
fiadds
insl
dec
add
mov
inc
cltd
das
repz
dec
aam
and
das
push
in
sub
pop
in
popa
cld
xlat
lahf
dec
test
pop
push
sub
outsl
je
mov
rclb
push
xor
add
inc
cmp
mov
or
jbe
rcr
or
mov
ret
jb
fistps
rclb
xor
ret
jbe
js
and
mov
fdivrp
jbe
std
imul
xchg
mov
cmp
inc
dec
lds
loope
out
in
jb
repz
lock
out
insl
cmp
mov
cmp
das
inc
adc
icebp
mov
cltd
and
sub
adc
pop
gs
cmp
pop
or
in
adc
push
scas
mov
mov
lret
add
cltd
jnp
pop
fwait
out
add
jno
pop
divb
fcmovnu
hlt
aaa
pop
pop
xor
loope
loopne
insl
inc
ds
je
mov
in
ret
pushf
xor
and
sbb
cli
bound
jle
dec
inc
inc
test
mov
daa
clc
mov
cmp
mov
add
pop
test
adcb
dec
inc
push
inc
sbb
add
cmpsb
imul
outsb
in
adc
xchg
lret
and
testb
adc
shlb
push
cmpsb
out
lea
clc
pushf
adc
lcall
cmp
jns
push
fwait
mov
fcmovbe
in
jg
mov
adc
movb
xchg
dec
es
xchg
pop
ljmp
jo
jge
aaa
insl
mov
outsl
pop
jle
mov
xor
jecxz
sub
lret
dec
pop
shr
jmp
fmuls
out
test
push
cmp
mov
cld
sbb
bsf
notl
sbb
ret
mov
xchg
shrl
movsl
add
mov
or
mov
push
mov
or
aad
pop
mov
dec
lahf
xor
cmp
into
sbbl
xchg
test
push
push
add
int3
inc
jmp
outsl
loopne
pop
mov
je
hlt
sahf
hlt
xor
lea
cmpsb
sub
cwtl
adcl
sbb
mov
loop
ret
das
int
int3
mov
mov
popf
lahf
jmp
inc
iret
cltd
dec
data16
data16
call
jg
jno
push
out
gs
into
xchg
jae
pop
push
sbbb
rorb
test
das
pop
xchg
test
sbb
dec
sub
int3
cmp
loop
hlt
ret
repnz
data16
ret
pop
imul
roll
inc
or
adc
test
push
jmp
imul
pop
scas
push
scas
push
pushf
mov
aaa
in
push
mov
and
stos
pusha
and
cmp
fnstsw
loopne
shlb
cmp
jge
mov
incl
add
or
outsl
stos
mov
fistpll
push
and
jecxz
icebp
add
int3
jle
ds
in
faddl
shlb
jp
rorl
repz
inc
xchg
insb
sbb
testl
stc
mov
repnz
push
xchg
pop
jb
jge
stos
js
mov
push
sbb
loop
add
lret
mov
fistl
jo
sahf
add
xchg
jp
xchg
sub
ljmp
mov
mov
jns
ss
or
movsl
inc
out
push
outsb
sub
out
imul
jae
add
fs
mov
fidivs
cmp
jg
repnz
fcom
cwtl
movsb
and
sub
shl
pop
test
or
das
mov
fldt
sub
add
or
adc
aad
ljmp
fimuls
and
call
sbb
cmpsb
in
push
inc
cs
add
xlat
insl
mov
js
cld
xchg
aam
leave
mov
sub
mov
loopne
mov
jecxz
mov
cmp
fidivrs
popf
pusha
rcll
mov
sarl
in
jp
xor
std
js
sbb
cld
jbe
adc
es
nop
ret
add
popf
out
add
in
fs
pcmpeqb
fstpt
and
or
mov
sti
xchg
sbb
push
insl
cmp
add
mov
xchg
lods
mov
mov
int
ja
add
or
adc
add
sbb
test
sbb
push
adc
sti
fsubrs
adc
cmpsb
ja
push
cmp
inc
inc
xchg
push
aaa
dec
mov
jl
iret
cmp
test
sbb
jle
or
inc
push
sbbb
int3
test
lret
loope
sbb
push
mov
aam
xchg
adc
pusha
ja
mov
sbbb
icebp
xchg
xchg
mov
xor
shl
add
mov
mov
cmp
rolb
add
cmp
into
jb
mov
or
cmc
or
or
sahf
inc
daa
or
lahf
inc
aas
mov
jb
xor
adc
out
and
lret
fnstcw
or
or
pop
push
repz
dec
adc
pop
in
pop
imul
mov
stos
and
fdivrs
fwait
pop
or
inc
pop
xchg
xchg
adc
outsl
add
imul
ds
inc
mov
cmp
imull
adc
loope
mov
and
push
sub
addr16
enter
cwtl
daa
jae
xorl
loopne
gs
test
in
jecxz
adc
imul
mov
ds
sub
daa
inc
pop
push
stos
fistl
mov
out
ret
push
psrad
pop
cmpsl
lcall
lock
mov
mov
jge
andb
sub
push
js
movsl
push
pop
jbe
imulb
sbb
or
or
rcrb
push
jb
mov
or
mov
test
sbb
stc
fisubl
cmp
loop
sbb
jecxz
dec
dec
jl
cmpsb
or
movsb
iret
jl
hlt
out
dec
movd
xchg
notb
in
incl
je
flds
repnz
inc
lock
sub
inc
pop
push
das
push
adc
clc
shlb
loop
push
mov
jnp
cltd
xchg
xor
ja
mov
sar
push
mov
add
pop
rcr
inc
enter
aaa
mov
js
daa
je
inc
das
add
clc
mul
push
mov
in
fidivl
mov
add
sbb
cs
push
in
nop
ja
rclb
xor
sahf
or
repnz
mov
add
push
iret
inc
movsl
or
pop
inc
pop
and
push
mov
add
ret
fists
or
aas
sub
mov
cmpsb
jb
sbb
int3
xlat
pop
push
cmp
cmp
dec
sub
movsl
mov
insl
stc
movsb
lods
insb
xor
jmp
cltd
imul
xchg
loope
xchg
xchg
sahf
jmp
xor
idivl
arpl
push
aad
loop
imul
stc
into
xchg
test
and
sti
fidivs
sbb
mov
jns
cs
fsubrp
call
jns
or
clc
imul
mov
sbb
mov
mov
imul
jbe
jmp
dec
dec
lds
mov
sahf
in
pop
jle
jg
cmpsl
cmp
scas
xchg
das
sahf
in
jecxz
cmpsb
in
jge
inc
add
mov
mov
dec
stos
push
cmp
ljmp
cli
addb
cwtl
mov
push
int3
add
mov
rorb
pop
dec
je
leave
sbb
in
pop
fldl2e
aad
fucomp
pop
ds
pop
imul
mov
pushf
jecxz
dec
nop
xchg
and
ret
pusha
scas
dec
popa
mov
push
and
sbb
sti
mov
fnstsw
dec
xchg
lcall
lds
roll
cli
scas
push
lcall
sbb
psadbw
sub
push
push
xchg
imul
cwtl
ret
addb
add
cmp
test
stos
push
adc
jb
adc
fnsave
cmp
mov
rcl
adc
fstpl
fldt
orl
mov
jg
mulb
and
fcom
dec
sbb
jecxz
xchg
imul
rcr
lea
ret
outsb
xor
js
xchg
sub
add
cltd
ja
out
ret
cmpsb
sbb
negb
add
sahf
mov
dec
sbb
dec
and
insb
cmp
ds
inc
data16
dec
hlt
fcmovnb
cmp
jo
and
ror
cmp
mov
jmp
int3
xchg
push
popa
pushf
cmp
repz
sbb
dec
jl
mov
mov
lock
xchg
data16
or
fdivrl
mov
push
movsl
in
rcr
es
loop
in
jl
push
xor
push
push
and
pop
hlt
pop
out
push
int
or
mov
sub
test
dec
push
cmpsb
xor
pop
adcl
dec
sub
icebp
imul
mov
ljmp
inc
jne
aam
rorb
xchg
adc
inc
jg
xor
cmp
push
pusha
enter
pop
push
sahf
xchg
pop
call
or
ret
movsl
push
insb
lea
int
sbb
xchg
fiaddl
ret
ret
pop
inc
out
out
leave
push
leave
jno
outsl
push
xchg
aas
insb
lahf
push
mov
mov
aad
ljmp
pop
cmp
jmp
and
ss
or
sbb
fst
cmp
orl
notl
xchg
inc
jg
jns
push
dec
enterw
add
inc
lret
orb
ja
imul
or
jne
sbb
jae
mov
pop
mov
jge
push
cmpsb
sarb
mov
mov
xchg
push
ret
push
pop
rcll
outsl
dec
cmp
sti
sbb
stos
or
and
fiaddl
jp
data16
out
push
inc
dec
jns
adc
arpl
iret
mov
popf
dec
gs
xor
mov
dec
xchg
fidivl
sbbb
mov
stc
mov
or
mov
mov
insb
nop
dec
mov
cltd
dec
push
mov
push
addl
and
cmc
jl
idiv
arpl
imul
lds
lods
mov
or
aad
pop
xlat
mov
inc
out
outsl
sub
test
adc
lods
mov
pop
xlat
jne
movsl
mov
dec
popf
mov
jge
outsl
add
add
std
push
mov
cmp
sub
adc
ljmp
mov
add
fld
push
ljmp
sbb
fwait
test
in
push
pop
jnp
out
into
push
jle
hlt
jle
outsl
or
sub
or
push
int3
mov
lds
imul
iret
outsb
lds
addr16
int
lds
std
and
outsb
inc
das
lahf
dec
lcall
mov
mov
aas
push
sub
mov
outsb
test
or
inc
xor
jne
mov
not
fdivrs
or
ret
flds
iret
imul
jl
js
das
inc
fcmovnb
and
inc
mov
aam
ljmp
dec
icebp
call
push
imul
adc
adc
bound
gs
outsb
mov
mov
push
add
mov
pusha
icebp
test
mov
sub
aaa
and
fisubrl
adcb
nop
das
mov
sbb
sti
and
nop
and
jp
or
pop
aam
xchg
js
clc
movsl
fisubs
pusha
mov
imul
in
fisubs
iret
cmp
dec
xchg
adc
pop
shrl
cmp
ret
int
int3
repz
das
out
icebp
dec
aad
sahf
and
sbb
pop
decl
mov
arpl
inc
movsb
je
imul
pusha
cmpb
scas
jne
mov
aad
ja
hlt
jg
int3
mov
mov
xchg
sbb
hlt
data16
inc
ja
dec
popa
lcall
test
jo
bound
inc
lds
push
jmp
imul
fnstsw
inc
mov
out
and
pop
lahf
dec
faddl
dec
jae
and
outsl
pop
mov
push
test
pusha
imul
pop
push
mov
or
jns
jge
add
mov
out
sbb
mov
jmp
and
popf
imul
movsb
xor
out
jg
add
jae
inc
pop
out
imul
out
pushf
inc
jg
sbb
push
xor
xchg
jno
mov
in
popf
add
mov
xor
pop
scas
push
sub
jo
xor
sarl
cli
shll
fldt
or
add
jno
fmull
cwtl
jecxz
pop
jbe
xchg
das
mov
cmp
stos
rcrb
mov
loop
out
cmc
enter
pop
lahf
and
cmp
xchg
xchg
in
mov
pop
mov
lahf
jle
and
je
inc
xchg
sbb
rcll
pop
inc
rcr
aam
dec
daa
mov
popf
xchg
cmp
jmp
insl
out
outsl
pushf
ss
scas
cmpsb
cmp
push
mov
sti
adc
sbb
lret
repz
or
mov
fldl
mov
inc
pop
dec
sub
iret
inc
jne
inc
or
cmp
jae
jle
mov
sbb
pop
loopne
repnz
push
push
popf
lods
jnp
in
push
xor
jmp
decb
call
jg
add
call
rorl
jge
pushf
popa
or
mov
mov
js
jbe
push
fmuls
cmp
cs
addr16
pop
jp
and
jns
cmpsb
loope
fwait
jo
test
ret
ret
into
insb
test
or
lock
loope
ja
fwait
clc
inc
lcall
mov
in
mov
idivl
mov
imul
mov
inc
loopne
push
and
mov
mov
lahf
inc
cli
cmp
jo
jns
out
psubw
in
mov
orl
cmp
xor
stc
push
repz
push
les
in
loop
xor
daa
outsb
cmp
ljmp
pop
pop
jbe
loop
fdivs
pop
repnz
push
cmp
adc
subl
xchg
xor
dec
push
sub
pop
pop
in
lods
fmuls
jnp
and
xchg
rol
mov
cmpsl
faddp
lods
nop
sti
movsl
shrb
fwait
arpl
cmp
xor
sub
cmp
int
pushf
lods
mulb
jns
xchg
mov
jns
test
je
xor
jecxz
pushf
dec
icebp
cmp
mov
sahf
cmpsl
xchg
outsl
test
ja
mov
jecxz
pop
dec
jcxz
cmp
addb
pop
sbb
and
test
pop
jp
jbe
int
dec
aad
scas
add
lea
fimuls
jae
push
dec
pop
sub
lahf
mov
xor
adcl
mov
jl
inc
mov
xchg
mov
das
push
sub
nop
push
sbb
jle
inc
pop
aam
outsl
mov
aas
push
xchg
xchg
and
xchg
inc
dec
mov
adc
icebp
les
xchg
cmp
push
cwtl
jbe
ret
clc
lcall
inc
xor
dec
das
int
imul
pusha
test
xchg
imul
cmp
div
fldenv
push
aas
xchg
popa
ja
icebp
adc
ja
ljmp
rolb
mov
out
lcall
dec
enterw
pop
jg,pt
sbbb
movsl
sbb
mov
and
int3
in
dec
ljmp
push
add
nop
sbb
and
sbb
add
aad
or
push
mov
fisttps
mov
and
sub
cli
les
in
ja
call
fcoms
scas
imul
bound
inc
inc
dec
lcall
fsubrs
pop
arpl
or
adc
cmpsl
xchg
dec
sahf
push
pop
call
cs
xor
shrb
xlat
lcall
sub
pusha
int
add
mov
mov
lds
adc
movsb
loop
scas
mov
mov
pop
xchg
lds
in
fmul
test
jbe
sbb
ret
std
pop
push
sbb
addr16
cmp
imul
jb
and
and
rorb
vprotq
mov
mov
push
push
jbe
je
mov
xchg
and
fwait
xor
daa
js
xchg
repz
decb
imul
sub
push
xchg
rclb
data16
dec
into
mov
mov
call
sub
in
pusha
mov
push
add
fldcw
xchg
add
aad
mov
lock
mov
addr16
lods
test
jp
mov
lahf
in
jne
in
and
pop
shlb
cmp
rclb
xchg
cwtl
orb
aas
xchg
jns
dec
int
jno
or
loopne
inc
repnz
fs
mov
and
int3
lcall
adc
push
mov
push
jecxz
imul
pop
dec
iret
inc
inc
mov
pop
mov
std
sub
imulb
pop
adc
fs
es
xor
aam
adc
ds
ret
stc
pusha
mov
mov
push
or
stos
and
xchg
sub
or
rorl
sub
pop
mov
pop
pop
adc
addr16
popa
dec
mov
add
fistpll
sub
adcb
xchg
add
dec
adc
push
push
xor
mov
or
add
cs
mov
cmp
cmp
pop
push
fcoms
call
adc
lds
jb
sbb
lcall
mov
std
mov
push
add
cld
in
daa
stc
adc
push
loop
rol
ficoml
push
rorl
cld
mov
test
push
lock
adc
pop
lock
add
sbb
shrl
pushf
shr
lds
mov
dec
push
sbb
rcrl
mov
scas
add
xor
mov
scas
lock
dec
out
mov
lret
jno
out
inc
js
pushf
cmp
cmp
es
lods
addr16
xchg
pop
pop
xchg
loope
adc
rcl
bound
sub
sarb
jmp
pop
fistpll
pushf
pop
or
ljmp
std
cmp
mov
cmpsb
popa
add
hlt
and
cmp
hlt
push
sbb
xor
cmc
inc
fsubs
cmp
jmp
in
test
adc
push
imul
dec
aas
xchg
pop
movsb
sub
inc
fdivrp
xor
rcr
cmp
dec
lods
lret
fsubrp
lahf
add
bound
or
xor
jge
push
data16
jnp
mov
aas
out
jns
sti
js
setne
lods
fimuls
and
dec
lret
inc
ss
cmp
xchg
adc
mov
inc
lret
push
jp
fidivl
int
movsl
mov
xor
lods
mov
sbb
mov
jp
icebp
xchg
mov
mov
jge
jge
mov
inc
inc
pop
lock
shl
scas
lcall
clc
in
mov
loope
sub
test
xor
es
add
rcrb
mov
ds
inc
jb
mov
pop
push
push
sbb
pop
mov
rcl
xchg
mov
ret
mov
dec
mov
xchg
mov
in
pushf
ret
imul
insb
loope
pop
sti
test
dec
nop
jo
xlat
shll
addl
test
out
mov
dec
jecxz
aas
aam
sti
push
sub
andb
adc
or
lahf
mov
clc
insl
xor
xor
ss
mov
andl
add
mov
push
pushf
mov
test
clc
sbb
adc
jle
pusha
cltd
test
inc
sub
inc
roll
stos
call
fidivrl
sbb
dec
adc
leave
dec
xchg
add
pop
fisubrs
mov
repz
add
aad
xor
add
mov
push
addr16
xchg
jle
jp
mov
iret
sbb
pop
xchg
xor
jmp
rcrl
dec
dec
add
or
loopne
das
push
les
aas
out
dec
push
gs
jg
test
int
mov
xor
lahf
fbld
xchg
fsubr
into
sarb
out
and
lods
sbb
fdivs
jo
push
call
or
cmpsb
iret
lods
test
xor
inc
fstpl
je
bound
mov
pop
cmp
hlt
pop
shlb
mov
or
mov
xchg
adc
xchg
push
adc
fisubrs
dec
sbb
iret
mov
lds
inc
mov
add
repz
or
cmc
pop
cld
mov
lcall
loop
cmc
enter
std
sbb
cmp
mov
mov
push
or
loop
ja
sbb
es
mov
or
lea
imul
fs
xchg
jbe
cmp
roll
loope
lret
xchg
sbb
push
jp
push
dec
cmp
mov
push
jns
mov
in
inc
sub
cwtl
gs
fisttps
jbe
lret
dec
sub
in
xor
out
mov
fwait
dec
add
mov
cmp
andb
push
sahf
pop
enter
lods
add
cmc
dec
and
pop
loopne
shrb
and
add
outsb
jns
xor
enter
xchg
mov
ss
test
mov
inc
xchg
mul
idivl
popf
inc
xchg
mov
jecxz
push
gs
pop
loopew
add
and
lods
adc
push
mov
cwtl
nop
lcall
xchg
mov
fldl
clc
les
lret
jno
jle
xchg
pop
jns
sub
pop
mov
rolb
inc
movsl
daa
fnstenv
add
xor
push
ljmp
adc
dec
outsb
cld
jo
or
je
test
sub
test
int3
adc
sub
add
div
xchg
add
add
out
jge
mov
push
jno
ds
jge
lret
mov
or
xor
push
jno
xchg
cli
xor
sbb
push
cmp
dec
cmpsb
push
jle
jno
shll
xchg
repnz
mov
stos
ja
or
sbb
mov
enter
sbb
push
or
and
jo
cwtl
dec
cmp
lock
aam
stos
dec
jbe
faddl
pop
pop
xchg
sub
mov
pusha
in
test
fstpt
call
sub
xor
inc
jnp
test
jp
pop
xchg
jne
mov
sub
xor
lret
mov
cmp
adc
sti
and
dec
adc
sub
cmp
mov
and
mov
scas
xchg
jmp
stos
sti
lret
adc
mov
mov
dec
testl
xchg
pushf
loop
pop
ror
mov
repnz
sub
fwait
push
fisubs
aam
sub
lea
mov
sbb
add
ret
jecxz
sbb
lea
jo
jbe
push
movl
in
movsl
cmp
or
pop
mov
in
or
adc
and
mov
sub
mov
sahf
pop
lret
jae
repz
add
outsb
inc
xor
mov
push
jmp
sahf
cwtl
jnp
out
jmp
sub
mov
int3
xchg
idivl
adc
outsl
push
cmpsb
jge
push
jmp
addl
stc
xor
dec
pop
xchg
push
daa
hlt
xlat
jecxz
mov
sbb
sbb
and
jne
pop
pop
inc
bound
mov
push
inc
pop
pop
xchg
mov
invd
jg
insl
ret
in
shlb
pop
mov
imull
in
rcll
mov
xor
in
aad
adc
ss
imul
sub
lret
xchg
push
mov
faddp
imul
mov
push
sbb
jp
push
pop
pop
mov
jmp
cmp
inc
loop
ljmp
adc
xchg
mov
or
sub
push
jmp
pop
jmp
inc
fildl
fiaddl
mov
push
push
dec
gs
lahf
scas
scas
jae
sub
addr16
mov
scas
lds
mov
rcrl
sbb
xchg
pop
addr16
es
mov
xlat
pop
not
xchg
push
rcll
out
into
imul
je
mov
cmp
mov
popf
and
movl
inc
popf
pop
push
and
rclb
inc
sbb
push
fcmovnbe
int
fisttpl
push
mov
sub
xchg
sub
cmp
ss
mov
pop
mov
mov
leave
ljmp
mov
or
dec
jb
pop
das
ffreep
sub
lds
fisttpll
lcall
loope
imul
and
sub
adc
in
xchg
xchg
sub
shlb
aad
xchg
movsl
rol
sub
or
cmpl
push
push
add
lds
or
jne
out
mov
cmp
incl
cmpsb
xchg
cmp
cmp
sub
sbb
out
ret
push
cmpsb
mov
test
and
adc
repz
xchg
aam
shlb
xor
pop
jg
sbb
jg
arpl
loop
mov
shll
loop
jo
xchg
or
icebp
outsb
ficoms
pop
fucomi
sahf
push
mov
leave
pop
ret
lods
ja
xchg
dec
pop
mov
inc
movl
push
mov
sub
bound
pop
sub
dec
outsl
adcl
mov
movsb
fmull
mov
lret
jns
push
test
inc
addl
rorb
inc
or
daa
jo
out
out
fimuls
shrb
in
mov
lea
mov
jb
into
mov
xchg
negl
das
or
and
cwtl
push
loopne
jg
insb
inc
jge
lods
jecxz
mov
fisttpll
push
shrb
push
fimuls
int
cwtl
orps
in
lock
test
hlt
les
test
sbb
les
cmp
shrb
mov
out
fsub
popa
xor
lods
test
inc
scas
lds
rol
jbe
in
pop
int3
pop
push
jbe
dec
jl
lret
aaa
into
in
push
popf
pop
mov
jmp
insb
add
push
push
mov
shll
mov
lcall
jle
std
loop
ret
inc
mov
dec
orb
rcr
scas
movsb
in
cli
mov
pop
xchg
sbb
dec
incb
movzbl
shrl
mov
push
shlb
inc
inc
aad
cli
xor
pop
cmp
sbb
push
lret
xchg
ja
mov
test
je
xor
ds
sub
fisttpl
sub
in
bound
ret
cmp
xor
and
fisubrl
inc
les
sub
add
push
jle
fists
shl
leave
jbe
and
clc
mov
loop
aad
adc
dec
jnp
std
int3
test
fldlg2
mov
stos
jle
push
cwtl
push
cs
add
lret
xlat
ret
stos
lods
jmp
ret
test
sub
inc
adc
xor
pop
push
sub
ret
in
inc
and
pop
xor
cli
xchg
xor
dec
or
xchg
sbb
test
fs
aas
mov
std
inc
mov
test
push
lcall
mov
pop
xchg
nop
adc
mov
jo
push
movsb
jbe
insl
sub
mov
push
jbe
dec
aas
push
mov
xchg
pop
jo
enter
mov
push
cli
mov
enter
adc
adc
imul
fs
imul
mov
je
repnz
dec
jno
cmpsl
xchg
jns
je
xor
mov
outsb
lds
jmp
sbb
das
iret
mov
jl
fwait
pop
xor
insb
movsl
mov
cmpsl
sub
mov
shlb
dec
mov
pop
aaa
pop
and
sbb
add
add
xchg
mov
ss
mov
ret
add
push
sbb
mov
jne
jge
div
mov
insb
lcall
sbb
aad
sahf
mov
jl
sub
leave
in
xlat
pusha
mov
push
ret
adc
out
daa
test
imul
dec
or
sti
mov
xchg
adcb
addb
or
inc
cmp
dec
data16
cmpsb
pop
pop
sub
pop
out
sbb
add
jge
lahf
pushf
sbb
inc
sbb
fimuls
stc
in
dec
cmp
mul
push
les
jno
cwtl
inc
sub
sarb
ret
loopne
adc
cs
sub
adc
es
aam
jb
adc
pop
mov
inc
add
outsl
jnp
popa
movsb
push
or
test
daa
hlt
jne
lds
xchg
mov
in
jnp
fsubrp
and
xchg
add
pop
pop
mov
sti
fimuls
dec
inc
std
sahf
mov
push
lds
in
jbe
add
mov
cli
xchg
adc
out
pop
cmpsl
cmpb
aaa
adc
in
mov
or
xchg
cld
adc
sub
xor
js
lds
gs
dec
pusha
pop
pop
jg
sub
ja,pn
jne
scas
pop
or
or
pop
mov
dec
jb
jmp
xor
lcall
lret
dec
ss
mov
xor
push
dec
andb
xor
mov
mov
repnz
test
loope
enter
jl
js
aaa
loopne
fnstsw
jmp
or
int
inc
repnz
push
andb
sbb
repnz
xchg
arpl
xchg
push
flds
jns
imul
jo
and
aaa
jo
mov
scas
add
cmpl
add
out
adc
iret
mov
or
jbe
sbb
inc
fsubs
and
sub
jns
mov
loop
stos
mov
mov
inc
test
xchg
pop
adc
cmp
dec
push
fcompl
mov
addb
aas
sbb
loope
es
cmpsl
adcl
sbb
lret
cltd
fidivrl
es
sbb
mov
icebp
add
inc
sbb
loope
insl
push
mov
pop
push
add
jecxz
pushf
mov
ds
mov
lea
in
pop
insl
xchg
inc
or
jmp
or
js
and
jl
mov
movsl
jl
cmp
jmp
mov
lcall
rcrb
cs
mov
dec
push
aad
cld
dec
and
mov
mov
lea
push
cmp
pop
sbb
jg
pop
jae
mov
adc
push
sti
in
pop
iret
mov
inc
mull
mov
cld
pushf
stc
outsl
in
inc
ja
pop
insb
jnp
jecxz
cmc
outsl
jecxz
pop
icebp
and
xor
add
loop
mov
push
int
fdiv
xlat
jmp
ds
lahf
rorb
jno
sub
xchg
daa
xor
push
cmp
sub
sub
popf
stos
data16
pop
pop
fwait
insb
lds
mov
cwtl
push
push
mov
call
sbb
shll
je
daa
outsb
inc
jns
aad
stc
pop
xlat
and
dec
testb
and
dec
test
sub
dec
pop
xor
in
aas
sub
mov
outsb
stos
and
jbe
imul
ljmp
add
xchg
and
add
xlat
xchg
inc
in
test
jb
jo
jecxz
mov
std
fyl2xp1
pop
pop
mov
mov
repz
jb
int3
jb
jle
sub
push
dec
pop
mov
in
mov
daa
jo
jge
movsl
test
cmp
sub
imul
arpl
movsb
pop
jecxz
mov
lahf
enter
sti
fnstcw
sub
pop
pop
xchg
push
bound
mov
fildl
mov
push
dec
scas
aaa
frstor
fmul
int
ss
adc
aam
xchg
cmp
aas
stos
push
popw
cmp
fucom
cmp
mov
sub
sub
fists
jecxz
dec
mov
adc
mov
arpl
lcall
stos
xorb
xor
dec
daa
stos
arpl
and
popa
pop
fsts
stos
sbb
ja
std
aaa
and
aaa
mov
xchg
pop
jge
inc
add
or
push
stc
sti
leave
jl
or
adc
and
mov
jl
adc
push
pop
jp
pop
repnz
iret
jno
dec
push
aam
sub
xor
scas
mov
aam
mull
mov
les
cmp
xchg
mov
daa
mov
push
pop
nop
mov
pushf
movsl
ret
mov
sahf
sbb
mov
mov
imul
lahf
and
cmp
mov
or
jp
add
mov
fists
mov
dec
jno
mov
je
jo
pop
jg
stos
or
loopne
pop
shrl
sbb
mov
pop
movsb
mov
pop
mov
outsl
adc
pushf
or
mov
pop
mov
decl
mov
add
daa
daa
jne
dec
jns
stos
out
ret
imul
mov
pop
push
mov
hlt
cmpsb
data16
lahf
inc
lcall
xchg
mov
add
push
mov
stos
sub
pop
push
mov
stos
je
and
mov
int
fwait
cmp
in
lds
mov
stos
sub
xchg
inc
add
mov
call
insb
int
sti
jle
xchg
jbe
fsts
sbb
fistpll
jbe
in
ror
mov
mov
js
cmp
dec
bound
popa
jp
xchg
movsb
inc
daa
fs
mov
data16
int3
xchg
insl
in
pop
imull
mov
xlat
jb
pop
out
scas
out
lods
faddp
ret
cmp
mov
jb
enter
xor
adc
sbb
imul
xchg
shrl
push
in
push
dec
push
insl
lret
jp
jcxz
cmpsl
mov
in
sbb
cmp
add
mov
xchg
pop
icebp
sub
mov
sarb
iret
negl
arpl
stos
xchg
and
pop
scas
and
mov
add
xchg
jle
and
sbb
test
mov
aad
push
popf
movsb
push
and
sbb
dec
inc
and
pop
int3
je
insb
aas
add
stc
adc
daa
cwtl
inc
pop
icebp
inc
mov
inc
bound
push
in
in
call
xchg
out
or
rcrl
jno
int3
push
mov
test
imul
lahf
arpl
sbb
call
dec
pop
mov
stc
xlat
mov
sbb
dec
jecxz
and
mov
loope
mov
ret
jmp
sbb
adc
cmc
stc
inc
jb
jae
dec
push
and
and
jo
in
push
jae
xor
cmpsb
xchg
push
fsubp
fwait
int
inc
cmc
mov
lea
pop
pop
pop
les
adc
iret
push
xor
add
sub
add
pop
fnstcw
xchg
inc
xchg
lret
loop
in
in
push
fnsave
in
add
mov
push
sti
adc
rorb
cli
xorl
pop
xlat
push
jne
jb
arpl
fidivl
sar
mov
mov
xchg
mov
leave
push
mov
mov
xchg
pop
push
cmp
loope
xor
mov
gs
out
add
adc
cltd
cld
add
das
xchg
imull
mov
out
gs
mov
sbb
nop
mov
sbb
sti
addr16
pop
adc
cmc
jl
xchg
addr16
ja
das
inc
jo
push
pop
lahf
frstor
push
adc
xor
inc
and
insb
push
aas
sarb
sub
mov
pop
call
sahf
or
mov
gs
xchg
dec
push
js
and
push
fimull
pop
mov
and
ret
gs
stos
lock
inc
jnp
fldt
cs
push
repz
mov
daa
inc
bound
fistps
jo
jg
loope
sbb
mov
mul
test
mov
and
lcall
mov
push
fisubrl
jp
jmp
xchg
cmp
add
ljmp
jecxz
add
sbb
dec
and
shl
sbb
xor
addr16
leave
inc
or
jl
arpl
movsb
mov
jmp
out
jmp
cmp
filds
stos
hlt
lret
addr16
sbb
pop
inc
lock
into
ret
push
shlb
xchg
xlat
cltd
inc
leave
xor
lock
hlt
push
das
and
cmp
xchg
mov
sbb
mov
mov
in
push
push
dec
imul
outsb
fs
call
mov
push
fldenv
lods
ds
std
out
cs
or
ficoms
pop
sbb
sub
roll
cmp
lret
nop
pop
mov
push
xchg
ret
mov
and
sbb
cmpsb
call
aaa
pop
push
in
and
loopne
data16
test
sub
stos
aad
ret
mov
sbb
jns
push
xor
mov
fsqrt
jne
je
push
decb
outsb
mov
jne
push
push
scas
clc
subl
or
ret
cmp
icebp
pop
inc
xor
xor
divb
mov
push
cmpsl
mov
negb
cmc
sbb
dec
xchg
adc
popa
clc
jge
inc
pop
pop
leave
movsb
dec
pop
loopne,pt
sub
cmp
push
mov
andb
adc
in
jg
pushf
xchg
rcll
roll
je
mov
imul
dec
stos
std
push
cmc
and
push
in
dec
stos
repnz
insb
xchg
std
jo
mov
not
pop
and
or
xor
pop
ss
pop
in
lret
or
aas
shll
insl
fxch
or
or
jmp
mov
dec
imul
and
mov
adc
jno
mov
and
dec
out
hlt
fcompl
enter
in
repnz
and
loope
pop
out
and
cmpsb
fdivl
add
ss
aam
out
stc
mov
sbb
stc
enter
xchg
and
cmpl
cmc
test
stc
mov
pop
xchg
pop
adc
hlt
stos
test
test
test
out
dec
push
hlt
call
imul
out
inc
addl
push
jne
sbb
pop
and
jns
pop
scas
push
adc
mov
xchg
aas
leave
outsl
cs
adc
sbb
mov
out
stc
mov
aas
add
fwait
js
ret
clc
fisttpl
sub
cmp
sbb
movsb
out
cld
sbb
pop
repnz
jg
and
xchg
push
hlt
insl
filds
xchg
cld
repnz
pop
aaa
clc
sub
shlb
ds
aaa
sbb
inc
mov
mov
fldt
jnp
add
push
inc
push
addr16
inc
movb
lods
sub
jl
sub
daa
adc
jp
rcr
mov
mov
mov
pop
call
adc
bound
cmp
outsl
repz
and
bound
xorl
sub
xor
cmpsb
jg
loopne
add
inc
in
mov
jns
and
dec
or
movsl
xchg
adc
mov
imul
call
adc
iret
inc
arpl
push
int
in
pop
clc
arpl
dec
sub
dec
push
movsb
dec
lock
xchg
cmp
mov
jp
ja
aad
sti
je
push
std
pop
ljmp
inc
test
mov
push
int3
aad
int
clc
arpl
cmpsb
out
mov
in
rcrb
insb
imul
add
hlt
or
mov
jnp
jg
movb
mov
jg
add
jb
or
add
inc
mov
sbb
push
scas
xchg
cmp
or
inc
mov
dec
push
add
je
and
dec
mov
jo
ss
xor
sub
shlb
or
sbb
push
or
xor
xchg
ds
sbb
jmp
mov
xor
lret
out
lret
aas
nop
mov
add
mov
adc
pusha
addr16
gs
loop
add
sbb
jg
inc
fstpt
in
mov
mov
mov
fcoml
xlat
loope
stc
mov
fs
mov
xchg
in
mov
lret
add
lcall
mov
or
sti
shrl
out
movsb
addr16
aas
adcb
lods
add
dec
iret
fsts
adc
ljmp
xchg
lret
mov
inc
xchg
dec
scas
mov
jmp
mov
mov
or
or
out
push
push
repnz
xor
mov
xchg
pop
negb
insl
cmp
and
out
out
fistpll
cmp
xor
pusha
jg
or
mov
out
push
idivl
or
movsb
add
jle
jne
cmp
xchg
inc
icebp
pusha
rcrb
adc
mov
cli
cmpl
notb
loope
mov
mov
sbb
push
mov
xchg
jp
push
dec
cli
adc
push
sub
test
loopne
bound
orb
xchg
inc
cmp
fistpll
pop
push
je
push
pop
adc
pop
sub
shlb
mov
and
and
in
mov
std
or
push
imul
sbb
mov
xor
insl
adc
fistps
imul
adc
pop
lcall
notl
fildll
adc
shrl
jp
sbb
xlat
int3
int3
scas
loopne
inc
and
cmp
lahf
testb
sbb
ds
sbb
mov
test
lahf
and
cmp
lods
dec
cmp
pop
fsubl
gs
xchg
mov
mov
push
shrb
xor
imul
loop
movsl
hlt
sbb
ds
enter
dec
lret
loop
arpl
xchg
and
xor
ds
mov
movsl
add
sbb
jnp,pn
pop
inc
fdivs
push
sub
push
sbbl
push
es
mov
das
mov
push
inc
dec
and
mov
lret
mov
mov
filds
push
addr16
jle
xchg
call
xchg
sti
sbb
xor
add
mov
sbb
jne
mov
pop
andb
pop
sbb
xchg
bound
mov
fadds
push
pop
adc
dec
enter
jo
enter
dec
cwtl
dec
mov
pop
pop
shl
outsb
push
pop
or
cmp
push
sbb
rclb
loop
inc
pop
hlt
dec
mov
cmp
rcrb
clc
or
pop
lds
sub
adc
aaa
sub
loopne
jl
push
push
shll
test
sub
xchg
in
aas
aaa
pop
jo
jno
push
push
cs
jge
lock
bnd
inc
xchg
fwait
sbb
dec
ss
jle
mov
cwtl
xchg
jmp
std
daa
mov
push
xchg
cmp
add
jecxz
xchg
adc
shrl
in
imul
mov
ret
jmp
imul
mov
mov
pop
jne
cltd
repz
add
rcrb
fs
mov
jnp
xor
adc
aaa
aas
pop
jbe
and
ror
xlat
int3
outsl
pop
pop
in
je
popf
pop
mov
xchg
sbbl
ret
mov
add
popf
into
cmpxchg
rorb
mov
dec
adc
sub
push
ljmp
mov
imul
ss
push
jns
mov
adc
fwait
adc
inc
pop
jle
lret
jo
dec
adc
mov
ficoml
jno
inc
pop
ret
push
jbe
jecxz
mov
mov
in
addr16
jo
push
fucomp
popf
add
mov
jecxz
into
adc
mov
loope
mov
cmp
or
pushf
dec
adc
xorb
push
push
and
adc
repz
cmp
xchg
das
cwtl
fwait
and
inc
int
daa
test
xchg
in
jae
aaa
mov
ds
outsl
fstpt
jg
jmp
or
addb
xor
xor
dec
push
mov
push
jge
stos
jp
sti
inc
out
enter
enter
fdivs
outsl
push
lds
cmp
clc
dec
jecxz
mov
mov
dec
xchg
es
cmpsl
aaa
les
sub
sbb
test
test
ss
fidivrl
mov
mov
pusha
test
aaa
and
adc
inc
jo
and
in
rcl
jae
or
jb
dec
dec
scas
cld
sbb
out
daa
imul
mov
pusha
add
xchg
shll
adcl
mov
insl
rclb
sub
sbb
popa
adc
add
int
icebp
fwait
daa
sbb
mov
lock
push
subb
neg
insl
adc
lock
and
and
ljmp
sbbl
ficoml
enter
mov
mov
pop
push
jno
pusha
or
pop
xor
inc
inc
pop
add
jl
mov
push
xor
movsb
iret
and
lahf
push
pop
and
or
xor
sbb
fdivl
mov
xchg
in
out
data16
mov
aam
sahf
inc
ljmp
sub
and
jne
addb
inc
sbb
aad
cmp
shrb
push
mov
imul
sbb
xor
cmpb
xchg
out
int3
subb
sti
mov
clc
loopne
mov
adc
pop
sbb
and
les
xor
and
jmp
jae
xor
out
pop
pop
mov
add
pop
jbe
push
aam
lods
dec
mov
loope
mov
scas
pusha
push
pushf
sub
int
mov
push
and
test
out
sbb
xchg
notl
push
dec
lret
cltd
sbb
jmp
jmp
dec
in
dec
stc
clc
xchg
cwtl
in
sub
pusha
add
jg
mov
mov
cmpb
pop
cmp
test
push
mov
mov
xor
jmp
push
test
jle
lret
pop
lret
add
sbb
lahf
push
loopne
adc
lods
ret
inc
clc
jnp
and
push
lods
sbb
dec
cmc
incb
enter
jb
push
sti
mov
mov
sub
inc
mov
dec
adc
ds
xorb
sub
lock
les
in
xor
jle
rcll
mov
clc
add
cmc
lcall
out
and
and
fs
xchg
shrl
popa
movsb
inc
mov
xor
cld
lock
loope
stos
dec
clc
adc
ficomps
mov
jno
lods
sub
mov
movsl
push
inc
test
push
fisubl
mov
je
jo
mov
add
adc
scas
pop
ds
jne
pop
cmp
outsb
test
daa
stc
and
lods
xlat
ljmp
ss
add
bnd
dec
xlat
movsl
pop
sbb
into
inc
fstps
and
push
and
rolb
sbb
dec
pop
xor
lods
jb
fbstp
pop
in
adc
sbb
mov
xor
lret
es
imul
cmp
lea
lahf
cmc
clc
or
ret
xchg
nop
movsb
adc
rclb
xlat
xchg
lock
mov
ds
inc
adc
ret
pop
xchg
or
data16
mov
sub
call
bound
insl
sbb
push
pop
test
test
popa
test
mov
fs
int3
add
push
jmp
mov
psrad
pushf
push
call
mov
jbe
aad
jg
xchg
call
jl
repnz
decl
mov
add
and
push
mov
outsb
dec
into
mov
test
arpl
jp
xlat
or
xchg
and
push
dec
pop
jns
add
imul
xlat
fstpl
lods
in
xchg
lgdtl
cmp
fstpt
pop
mov
cmp
sarl
mov
xor
outsb
push
popf
fwait
movsb
leave
aas
mov
cmp
and
cs
push
xor
or
das
xor
or
push
aaa
test
push
pushf
xlat
pusha
lahf
popf
xlat
pop
mov
xorb
mov
fs
fisttpl
out
leave
inc
stc
insl
orl
popf
sbb
add
or
add
test
leave
adc
sbb
cmpsb
jecxz
mov
and
jnp
out
inc
xor
inc
test
xor
sbb
ljmp
add
sti
pop
in
cmp
pop
jbe
loopne
dec
add
jns
push
push
mov
jo
in
mov
cltd
adc
dec
push
push
cmp
mov
call
cwtl
imul
push
xor
add
or
das
dec
leave
dec
mov
lret
lret
jbe
scas
pop
add
loopne
cmp
popf
jle
and
jb
out
push
and
test
mov
pop
push
outsl
or
aad
mulb
das
cmp
sub
add
sub
movsl
fcompl
das
lret
clc
in
arpl
out
aaa
cmp
cmovns
pop
adc
dec
cmp
xor
mov
or
pop
jns
scas
cmp
mov
dec
ss
scas
mov
push
nop
push
pop
pop
mov
test
gs
std
fstl
sahf
xchg
stos
arpl
lods
mov
gs
mov
cs
fsubl
in
mov
push
add
adc
mov
loop
shll
imul
cmp
push
test
sbb
xchg
jns
pop
je
add
aad
push
xchg
dec
xchg
pusha
addr16
insb
call
cmp
xchg
pop
std
mov
push
add
mov
mov
fadds
jecxz
and
cmpsl
rcl
pop
mov
push
dec
add
lds
je
aas
out
gs
and
dec
adc
push
adc
sub
fwait
cltd
push
cli
cmp
leave
out
iret
cmp
jmp
mov
pop
add
mov
and
inc
in
outsb
jno
shrb
jno
and
sub
ret
cmp
mov
xchg
popa
lea
filds
jnp
cs
fsubrl
lahf
sub
mov
ss
dec
push
and
shlb
fwait
mov
and
std
add
adc
cmp
mov
outsb
addr16
test
jl
cmp
sub
mov
loop
xor
lock
addr16
xchg
cmc
add
sbb
pop
adc
dec
dec
cmp
xchg
mov
xchg
into
sub
lods
xlat
jno
or
mov
or
sub
pop
or
mov
push
cmpsl
push
inc
movsb
popa
ljmp
test
jmp
add
push
adc
scas
int3
xchg
aad
mov
mov
sub
inc
scas
add
or
cltd
mov
sbbb
and
push
sti
std
rorl
cltd
mov
mov
pusha
xor
pop
sarb
dec
addr16
xchg
inc
sub
inc
push
aam
inc
cltd
adc
fcomps
lahf
fistps
sbb
inc
mov
ss
ss
dec
leave
pop
call
lods
insl
rorl
test
pop
pop
aas
pop
push
fildl
mov
sbb
stc
mov
pusha
cmp
mov
out
sbbb
mov
xchg
hlt
ret
jo
dec
stc
out
fcoms
xchg
in
pop
mov
decb
push
jg
and
xchg
out
push
popf
mov
iret
pop
xchg
mov
inc
mov
dec
add
dec
std
daa
int3
push
mov
xor
cmp
cmp
shll
adc
lret
sbb
mov
jne
jo,pt
hlt
mov
xchg
and
test
xchg
ficompl
sbb
xchg
and
js
fimuls
test
test
pop
mov
adc
jle
add
sub
mov
insl
les
negb
pop
xchg
popa
flds
push
and
jno
decl
ljmp
xchg
xor
scas
std
ss
pop
mov
popf
mov
call
clc
adc
dec
in
sub
dec
popf
out
rcl
inc
repz
flds
adc
out
xor
daa
jae
mov
sarb
add
cmp
adc
pusha
inc
sub
and
dec
in
gs
pusha
addl
dec
loopne
in
cmp
cmpsb
inc
sbb
xchg
test
fsts
adc
sarl
sbb
lods
push
mov
push
jo
mov
fcoms
sub
push
pop
daa
loop
adcb
pop
push
push
test
cmp
pop
aas
sbb
divl
insl
and
mov
push
cmp
add
mov
daa
xchg
rcll
cwtl
idivl
dec
push
std
and
push
pop
into
mov
xor
aaa
cmp
sbb
add
mov
cltd
adc
dec
dec
mov
xor
mov
sbb
dec
aam
pop
das
push
add
test
cwtl
ret
das
cld
sti
repnz
cmc
stc
shlb
aaa
push
andl
xchg
adc
inc
mov
inc
cmp
daa
xchg
adc
call
shl
jnp
xor
mov
ret
xor
fwait
int3
sub
imul
ja
push
mov
jae
add
push
sub
dec
jne
movsb
hlt
adc
add
div
xor
fisttpl
cmp
popa
or
xor
push
test
add
and
sbb
lods
mov
add
fldl
pop
xor
push
lcall
mov
pop
fcmovb
mov
in
icebp
mov
repnz
adc
lret
add
movsb
ds
clc
cmp
and
into
inc
test
scas
pop
aam
cmp
push
cmp
xor
push
xorb
push
mov
pop
leave
mov
xor
add
mov
lret
jo
pop
into
dec
xor
mov
inc
mov
inc
jne
test
cmp
sub
or
push
loopne
sub
bound
add
vpsllw
add
sub
xor
pop
int3
and
inc
add
or
xor
imul
jo
mov
lea
lahf
pop
sbb
dec
dec
sti
pushf
in
inc
ds
mov
mov
divl
push
lods
push
je
pop
and
push
mov
jmp
adc
rcll
incl
dec
push
je
call
sbb
dec
cmp
movsl
lods
mov
dec
add
andl
lret
mov
fcmovne
dec
cld
mov
mov
clc
and
mov
div
in
xor
scas
push
outsl
jnp
pop
mov
inc
inc
data16
adc
sbb
imul
xor
jne
lahf
ja
ja
icebp
popf
bound
pop
xor
int
inc
mov
popf
clc
in
fcomip
pop
imul
mov
mov
pop
xor
cltd
add
out
in
movb
xchg
mov
dec
scas
xchg
out
imul
push
fiadds
pop
push
in
xor
inc
mov
jnp
insb
pop
sbb
leave
mov
mov
lock
adc
jl
decl
inc
out
pop
lods
mov
sbb
icebp
clc
dec
sbb
into
jecxz
mov
out
stos
jo
jle
addl
insl
sbb
push
ljmp
adc
lods
fcoms
sub
mov
fldl
mov
pop
adc
cmp
rcl
push
inc
pop
rcrl
xchg
out
pop
cmp
femms
adc
mov
inc
je
repz
jle
notb
shr
sub
cmp
mov
inc
or
ds
mov
fnstenv
mov
adc
enter
xor
xchg
lcall
mov
aas
push
notb
pop
pop
xchg
cmp
mov
pop
repz
mov
data16
jecxz
loope
pushf
and
lcall
movsb
mov
data16
xchg
push
add
icebp
sbb
push
icebp
push
pop
dec
outsb
sti
mov
fistpll
dec
stc
ljmp
mov
fimuls
in
clc
and
sbbb
sbb
mov
jo
mov
xor
adc
xchg
addr16
xchg
add
mov
ds
test
mov
mov
pop
in
mov
lret
lahf
mov
leave
mov
inc
arpl
outsl
ljmp
push
or
dec
daa
push
sbb
mov
fs
mov
sbb
je
and
add
mov
bound
xlat
mov
cmovae
dec
push
movd
movsb
or
push
sub
jmp
shrb
mov
ret
into
jb
push
jp
pushf
push
xchg
test
or
jne
js
ret
jmp
in
stos
insl
cli
ljmp
popf
jmp
push
lock
mull
adc
daa
lcall
into
shll
je
lock
ljmp
add
adc
sbb
ja
add
stos
mov
mov
mov
jmp
mov
mov
sbb
out
add
dec
mov
mov
xchg
rcl
lcall
pop
movsb
outsl
out
mov
hlt
cmp
bound
lock
dec
push
lods
stc
ljmp
sbb
or
xor
out
es
bound
test
mov
pusha
mov
fstps
jge
repz
cld
mov
fxtract
fs
fsts
fiaddl
add
insb
out
mov
push
pop
sbb
inc
es
and
fcmovnbe
push
repz
push
add
xchg
push
cmpl
insb
mov
out
sbb
xchg
out
cmp
and
lods
and
sbbl
loope
mov
mov
or
pop
repnz
mov
adc
cmpsb
xor
cmc
dec
and
je
pushf
push
inc
xlat
fidivs
push
popa
xadd
ficoms
call
ja
jp
sub
dec
mov
and
jmp
mov
mov
adc
inc
pop
popa
mov
gs
inc
movsl
cmpsb
jb
dec
push
fnstsw
stc
pop
das
mov
imul
xchg
cmp
jne
popf
gs
add
adc
popa
xor
and
fs
outsl
aas
pop
mov
imul
iret
or
loop
inc
out
add
xor
iret
or
lahf
es
andb
test
dec
mov
adc
jg
movsl
in
pushf
loop
lods
fwait
mov
fidivl
xchg
or
xchg
cmp
mov
push
testl
cmpb
xlat
popf
push
stos
movsb
push
idivb
cld
mov
leave
pop
pop
ret
addr16
arpl
mov
fnstenv
push
out
jl
sti
pop
cmp
int3
jle
clc
inc
call
jp
mov
sub
cwtl
push
cld
out
mov
mov
or
and
daa
sub
xor
and
loope
jne
fidivrs
outsb
sbb
stos
inc
cmp
insb
inc
jb
mov
fnstcw
mov
xchg
mov
push
mov
negl
push
mov
les
cli
sarb
mov
stos
loope
insl
mov
test
aas
sub
dec
adc
mov
add
xchg
mov
scas
jne
mov
mov
xor
imul
pop
inc
pop
movsb
test
outsb
cs
popf
sbb
and
ja
sbb
push
lret
pop
scas
cmc
sub
xchg
arpl
int
out
sbb
inc
andb
nop
bound
popf
dec
in
pop
cli
mov
shll
push
iret
add
or
mov
jp
enter
ss
add
push
rolb
inc
int3
xchg
push
fstpt
and
repnz
dec
mov
push
sub
jmp
insb
into
dec
mov
xor
mov
sub
popf
das
sarb
out
mov
or
mov
stos
dec
clc
lcall
xchg
fcompl
pushf
sbb
cs
push
loop
dec
inc
mov
addr16
adc
push
popf
pusha
mov
leave
lcall
addr16
pop
rcll
int
mov
cmc
add
fiadds
push
jecxz
adc
xchg
hlt
testl
and
ret
push
test
jge
inc
rcll
hlt
mov
stc
inc
loope
push
in
push
pop
mov
sbb
adc
dec
add
outsl
mov
dec
cmpsb
add
out
aam
rcrb
sti
or
lret
xchg
subb
cmp
add
lcall
test
push
daa
fadds
xchg
xchg
daa
sub
or
xlat
cmp
jo
mov
add
jecxz
sti
fists
add
ss
loop
sbb
call
fcmovne
test
pop
xchg
movhps
inc
js
xchg
or
ds
sub
mov
push
xchg
xchg
mov
ret
jae
and
mul
xor
jo
adc
adc
and
lahf
pop
popa
iret
adc
movsb
cmp
jecxz
cmpsl
imul
nop
add
xchg
frstpm(287
out
rcll
pop
mov
push
in
cwtl
or
lock
imul
push
sub
cmp
test
sub
or
adc
jb
roll
lret
bound
xor
mov
daa
adc
and
flds
pop
and
jbe
in
adc
ja
rol
pushf
shlb
jmp
jb
into
rorl
jecxz
push
cwtl
xchg
adc
pop
and
andb
ret
push
aaa
addr16
out
movsl
push
push
repz
sub
sbb
hlt
and
dec
seta
and
xchg
push
jl
loope
lret
mov
mov
or
cmpsl
fdiv
in
mov
data16
daa
lcall
lcall
jmp
clc
lods
in
loop
inc
into
insb
stos
mov
fs
int3
mov
scas
add
cmp
jne
push
adc
pushf
add
daa
pop
jb
sub
movsb
push
loopne
mov
imull
cmc
out
out
mov
mov
lods
cmp
sbb
aaa
dec
jecxz
leave
inc
ret
cli
dec
addr16
pop
xchg
outsb
fnstcw
daa
aad
sub
sub
fwait
and
sub
into
jno
or
xchg
aaa
pusha
xor
out
push
xchg
pushf
dec
ret
sahf
mov
repnz
cmp
aaa
dec
ret
or
jae
jge
leave
jmp
lahf
loope
pushf
and
mov
scas
cmp
mul
mov
and
icebp
popa
leave
inc
jnp
loope
xchg
cwtl
xor
cmp
repz
adc
les
push
out
mov
insl
outsb
push
mov
jne
gs
sti
lcall
and
pop
inc
xchg
stos
adc
lea
adc
jmp
or
cmc
add
cmp
into
fs
sbb
lea
sti
mull
inc
adc
js
mov
or
dec
addl
pusha
pop
dec
mov
repnz
add
xor
cmpsb
ret
pop
movsb
mov
and
aam
rcll
fnstsw
jns
sbb
lcall
insb
inc
inc
sbb
fsubr
ret
ret
hlt
mov
cmp
sub
mov
and
xor
addb
or
lea
cmp
dec
out
ja
sbb
es
movsb
adc
inc
sbb
sbb
sar
or
movsb
sub
inc
xchg
stc
dec
sbb
mov
cmp
dec
dec
mov
mov
inc
mov
jbe
in
pop
jle
fiaddl
inc
scas
push
ret
aam
rclb
inc
test
ljmp
or
mov
in
xor
loope
pop
cmp
xchg
mov
ss
gs
or
gs
cmp
mov
and
cmp
cmp
pop
pop
out
push
xchg
add
imul
leave
cmpb
push
icebp
fwait
inc
cmp
lock
xor
or
loop
imul
clc
mov
sub
jne
adc
enter
mov
jae
xor
jl
cmp
dec
stc
mov
ret
notl
mov
jne
in
mov
xchg
pop
rorb
or
test
out
jbe
add
push
dec
add
insl
dec
xlat
loope
lods
out
pop
xchg
aaa
outsb
dec
test
inc
out
push
adc
fisttpll
and
pop
sub
jae
and
jp
inc
out
iret
and
push
lcall
dec
dec
pop
add
add
and
mov
inc
jmp
insw
inc
xchg
sbb
cmc
jo
test
lea
mov
fsts
movsl
loopne
jmp
sub
xchg
popa
in
pop
stos
and
dec
push
or
aad
faddl
jne
pop
fucomp
lret
jge
in
jg
sub
dec
push
jge
outsb
or
xchg
in
xor
inc
popa
dec
sarb
test
or
stc
mov
pop
cmp
popa
or
js
jae
mov
pusha
ja
mov
add
pop
sti
shlb
inc
push
mov
movsb
ds
daa
cs
enter
push
popf
mov
mov
xchg
ljmp
dec
dec
cld
test
lahf
jae
push
xchg
xchg
xchg
jp
das
xchg
xchg
iret
pop
mov
dec
ss
aas
out
inc
cmp
stos
fsub
fsubrp
mov
mov
fwait
inc
test
mov
data16
and
in
sbb
xchg
repz
xor
test
inc
addl
cs
jb
cmpsl
js
sbb
js
shrw
movsb
enter
lret
pop
mov
mov
push
xor
repnz
loope
adc
scas
mov
push
jo
in
jne
leave
add
int
adc
outsb
xor
adc
push
push
push
test
es
dec
and
and
fidivrs
fistl
nop
jne
mov
pusha
pop
bound
mov
ret
cs
call
and
push
inc
pop
aam
cli
clc
or
test
in
ss
adc
mov
repz
or
scas
push
popf
mov
push
cmp
push
icebp
lock
daa
popa
xchg
sbb
fdivl
xchg
enter
xor
jns
andb
xor
push
loope
add
jb
inc
push
fsubrp
jae
sub
in
loope
push
iret
pop
and
mov
or
mov
mov
enter
aad
add
mov
rclb
or
cwtl
mov
and
test
aad
sbb
mov
mov
adc
adc
or
cltd
add
fsts
repnz
xchg
scas
repnz
xor
rcr
in
mov
add
shrb
repnz
or
cmp
push
hlt
inc
dec
and
dec
int3
pop
shrl
mov
jmp
insb
cmp
aas
inc
xchg
pop
movsl
lods
dec
mov
rol
outsb
or
dec
divb
mov
call
in
jp
gs
xor
xor
test
xchg
imul
add
sub
test
adc
lcall
add
popa
test
push
mul
aaa
lds
out
scas
adc
incl
sbb
push
pop
sub
insb
xor
ret
push
inc
pop
fdivs
cld
xchg
add
inc
iret
mov
sbbl
push
push
test
inc
and
addr16
lret
jb
jbe
loopne
adc
fisttpl
push
mov
stc
ret
mov
insl
lods
cmp
sbb
mov
push
mov
mov
out
mov
jbe
cmp
sbb
movsl
arpl
mov
scas
fiadds
dec
mov
aad
cmp
dec
in
aas
fldcw
cmp
loope
or
lds
push
fwait
lods
sub
mov
sbb
call
int
ja
iret
adc
into
jae
push
mov
jb
jmp
push
push
and
push
pop
xchg
sbb
lods
cmp
rolb
int3
popf
sub
ja
stos
fnstenv
loope
xor
adcb
xorl
dec
jge
xchg
pushf
lcall
jmp
lcall
lea
fmul
sub
lahf
mov
pop
or
jnp
cmc
aad
clc
pop
ljmp
push
push
sbb
mov
mov
mov
sub
fstl
pop
lock
xchg
bound
imul
in
mov
push
fld
mov
cmp
out
xrelease
jae
jae
shrl
pop
pop
mov
sub
pop
pop
sbb
imulb
das
fildll
jle
fsubrl
addr16
cmpsb
ret
add
inc
mov
mov
push
mov
add
cs
inc
jecxz
add
push
mov
cmp
testl
test
lock
and
test
push
xchg
xlat
in
mov
pop
in
shll
xchg
imul
sbb
cmc
push
sbb
push
mov
es
mov
mov
addr16
inc
inc
orb
xchg
add
repnz
dec
les
fwait
add
bound
jle
sbb
pop
adc
fcoms
mov
xchg
mov
adc
cmc
pop
cmp
mov
scas
aaa
std
and
add
pop
roll
insl
mov
ffree
jns
sahf
fstpt
test
adc
cld
mov
addr16
inc
mov
int
xor
mov
jne
in
cmpsb
dec
xor
aam
cmp
add
xor
mov
adc
sub
or
xchg
push
into
adc
push
mov
xchg
xchg
cltd
ret
lods
scas
xlat
rolb
or
and
lcall
fs
sbb
outsb
inc
fstpl
and
cld
ss
lcall
mov
pusha
and
leave
jo
sar
jne
and
fs
mov
mov
outsb
dec
mov
lahf
jmp
fdivrl
insb
jb
xor
mov
xlat
sub
ja
inc
nop
push
sbbb
sbb
and
fsubl
shl
mov
and
add
adc
xlat
push
in
xchg
add
jnp
jo
clc
or
sub
sub
mov
xlat
sbb
inc
mov
scas
call
stos
int
xchg
mov
inc
popa
add
inc
mov
xor
xlat
ficomps
lods
cwtl
fcmovbe
or
adc
cmp
mov
in
ret
mov
xchg
incl
loop
jae
xor
lods
jns
jae
movsl
xor
cmp
push
inc
add
out
sahf
pop
rorb
loopne
dec
add
fistpl
cs
fdivr
shr
scas
pop
pushf
adc
pop
jle
pop
jb
ret
jecxz,pn
shlb
ret
mov
or
inc
sbb
mov
sbb
cmp
outsb
xor
inc
loopne
xlat
iret
inc
mov
jl
mov
inc
mov
mov
sbb
lret
out
int3
dec
incl
das
dec
fidivrs
fnstenv
or
jae
popf
and
or
push
negb
push
sub
jge
ja
jo
xchg
mov
clc
cmc
add
or
ss
lods
in
jno
mov
jg
mov
and
xchg
jbe
adc
push
mov
lods
fsub
adc
ret
add
push
rcl
lcall
xchg
jg
sub
das
sub
scas
sbb
fimull
in
xor
ds
add
mov
push
movsl
out
xchg
testb
cmpsl
addr16
in
inc
hlt
daa
rcrb
mov
loope
les
push
insl
push
dec
xorl
movsl
ret
mov
xchg
or
cmc
pop
imul
out
xchg
enter
xor
mov
cmpb
aaa
fdiv
jle
jge
mov
dec
bound
testb
clc
jb
and
cs
sbbl
insb
ret
lret
adcl
stc
jecxz
xor
and
ljmp
or
jmp
sahf
mov
fcompl
dec
jns
or
sbb
pop
out
jmp
out
xchg
ret
or
or
jne
lea
daa
lret
mov
and
jg
fdiv
adc
sub
std
vmread
xor
sbb
xor
stos
cmp
shll
gs
mov
pusha
or
mov
mov
add
mov
and
mov
loope
mov
ss
cs
repz
dec
fstpt
and
add
xchg
ss
ja
popl
jecxz
iret
xchg
aas
mov
or
push
or
popf
mov
in
addb
jp
push
fsubs
push
jne
mov
das
and
push
sub
dec
cmpsb
stos
inc
shlb
iret
aaa
fdiv
mov
mov
ret
sub
sahf
imul
outsb
addr16
cli
add
xor
sahf
add
mov
out
jo
sub
push
rcrl
lret
inc
push
in
int
mov
pop
aaa
jl
xchg
and
imulb
xchg
sub
dec
movsb
adc
xchg
in
lret
aas
jnp
jo
inc
dec
aam
and
insl
lea
fstps
and
xor
xchg
cmpsb
mov
and
stos
mov
rcrb
daa
scas
sub
cmp
pop
inc
and
lret
xor
push
cmc
mov
inc
andb
dec
out
dec
fisubl
sub
pushf
icebp
test
leave
xlat
mov
add
sbb
int
shl
repnz
imul
sahf
mov
jns
sbb
add
into
cld
mov
insl
fs
mov
mov
pusha
jbe
jmp
jp
lea
pusha
cmp
pop
fadds
inc
mov
adc
insl
stos
sbb
inc
outsl
call
push
ja
sar
stos
ror
sti
mov
stos
in
mov
xor
outsl
js
jmp
xchg
je
aam
jae
subl
lock
dec
in
mov
pusha
int3
mov
out
fldt
lods
incl
push
fs
pushf
add
dec
imul
or
xchg
dec
int
movsb
mov
add
call
notl
mov
jmp
loop
loope
dec
popf
mov
inc
incl
lret
js
daa
mov
popa
pushf
or
inc
out
imulb
lods
pop
adc
adc
jle
aam
test
adc
sub
sarb
lret
push
xor
addr16
mov
daa
mov
pushf
pop
xchg
adc
out
loop
repz
call
and
sbb
sub
or
jne
iret
cmp
jmp
cwtl
dec
fstp
xor
gs
pop
rolb
adc
cmc
sti
sub
ficoms
test
movb
fxch
adc
push
outsl
xchg
cld
or
lods
or
pop
enter
adc
xor
mov
ret
sbb
push
xchg
rolb
loope
call
inc
rcrl
dec
mov
pop
scas
xlat
popf
jp
mov
test
add
sbb
xchg
rcrl
inc
idivl
fcoms
cmp
push
pop
sub
testb
xor
mov
and
sbb
mov
in
add
jl
push
lea
jle
sbb
aas
jo
fcomi
loop
lahf
scas
dec
enter
push
cmc
jle
lret
repz
dec
out
enter
add
pop
aaa
or
scas
xchg
and
mov
xchg
es
mov
aas
scas
xlat
arpl
jno
push
xchg
stos
sbb
and
push
aaa
or
sti
cmc
xchg
arpl
aam
aas
add
jecxz
fldt
jbe
lahf
add
push
xchg
fldl
xor
and
insl
cmp
mov
cmc
jae
movsb
mov
ja
mov
pusha
sbb
jmp
iret
outsb
mov
dec
subb
mov
fisttpl
inc
adc
lea
mov
add
add
pop
dec
sub
loope
mov
cmp
cmpsl
fcoms
push
adc
shlb
std
mov
xchg
xchg
fildl
mov
in
pop
std
xchg
scas
xchg
xchg
stos
add
push
shl
cmp
out
inc
outsb
cmp
adc
dec
test
cmp
dec
mov
dec
push
dec
lods
sbb
popa
repz
jl
and
stos
xchg
in
mov
pop
lods
ss
and
sahf
shrb
popa
xor
inc
rcll
adc
xorb
xor
cmc
hlt
and
sub
xchg
rol
inc
pop
dec
fistps
add
das
jle
or
xchg
mov
adc
imul
bound
xor
sbb
imul
enter
lods
or
bound
aam
fwait
inc
push
sbb
or
cmpsb
mov
add
movsl
je
aas
adc
or
movsb
cmpsl
xchg
xor
rolb
sub
pop
add
sub
out
insl
rcrb
dec
dec
ret
fwait
shrb
outsl
push
xor
sbb
in
lea
jo
inc
pop
ja
stc
loope
mov
scas
and
bound
and
mov
xchg
adc
mov
and
nop
lahf
mov
push
and
push
loopne
inc
aad
outsl
sbbl
xchg
adc
aad
and
bswap
fs
and
enter
mov
cld
push
ja
sbb
ror
mov
fwait
mov
scas
lcall
mov
push
jl
sar
sub
lods
dec
cld
jle
das
xor
xor
mov
mov
dec
shrb
js
gs
mov
push
xorl
push
cmp
cmp
stc
cmp
pand
lret
in
push
scas
stos
mov
outsb
sbbb
or
sbb
out
in
pop
add
inc
mov
ror
jg
pop
mov
sbb
adc
xchg
shlb
roll
inc
pop
or
out
out
mov
sbb
fwait
jae
fmuls
int3
xlat
xchg
add
pop
and
aas
pop
cmp
stc
cmp
and
push
cmp
mov
leave
mov
mov
add
cld
iret
lret
lock
cltd
sbb
xor
sub
movsb
mov
mov
lret
add
pushf
pop
inc
jmp
sub
mov
cltd
mov
mov
ljmp
loop
in
ret
ljmp
push
ljmp
stc
imul
and
push
jo
addb
scas
ja
repz
loopne
imul
addl
xorb
cmp
fwait
mov
inc
aad
leave
xor
or
xor
add
loop
pop
cmpsl
xor
sti
rcrl
cli
inc
test
mov
dec
xchg
std
add
andb
jmp
add
cmp
sbb
sbb
pop
jno
jle
adc
imul
sub
jne
inc
or
jmp
out
inc
ljmp
daa
xor
loop
push
xor
shl
adc
sbb
hlt
lock
fldl
hlt
test
icebp
gs
sbb
inc
icebp
mov
mov
ds
adc
test
iret
fbstp
subb
xor
mov
into
xchg
aas
and
lret
jmp
in
push
int
fstpt
sbb
loopne
pop
ja
mov
scas
push
jnp
mov
adc
pop
repnz
loope
add
dec
inc
subl
xlat
jo
mov
jge
out
cmp
repz
cmpl
jae
divb
jle
ja
lea
push
sub
fsubrs
in
jo
push
stos
and
push
xor
push
jl
lret
lret
std
leave
arpl
xchg
mov
pop
xchg
push
jns
clc
les
mov
cmp
mov
lret
dec
into
pop
sbb
arpl
fsubrp
adc
icebp
cmc
lds
or
stos
mov
ret
add
inc
lea
popl
pop
stos
cmp
and
pop
sahf
iret
adc
mov
movsl
iret
dec
imul
jnp
movb
sahf
dec
xlat
data16
stos
pop
arpl
mov
je
mov
or
mov
push
jne
xor
cmp
pusha
arpl
xchg
invd
outsb
cwtd
iret
mov
mov
dec
inc
and
loop
in
pop
mov
lret
dec
dec
jnp
nop
mov
jb
dec
test
jo
in
mov
and
in
xchg
and
jmp
lods
cmp
mov
inc
add
sbb
icebp
pop
sbb
nop
scas
pop
loop
push
out
jle
jnp
sti
xchg
popa
enter
lcallw
stos
mov
nop
jns
fimuls
sub
test
fs
iret
mov
mov
sbb
stc
xchg
pop
cmpsl
fisubrs
out
std
pop
or
jmp
sbb
fistl
aad
add
pop
cld
popa
enter
fwait
or
faddl
sub
mov
sub
lea
ss
std
imul
lods
cmp
test
xchg
push
add
cli
dec
imul
sub
push
push
js
pop
or
dec
fnsave
fidivl
jg
int
addps
out
icebp
push
adc
xor
mov
rorb
add
es
xor
push
inc
mov
aas
sbb
mov
dec
adc
insl
jle
jne
fmull
aaa
fbstp
jo
roll
movsl
pushf
xor
adc
fsin
adc
cwtl
dec
xor
sub
cld
divl
inc
sbb
and
sti
mov
mov
cld
add
pop
mov
fiaddl
cmpsl
push
and
out
mov
cmc
sub
and
mov
add
shll
fcomps
dec
aas
repz
mov
jmp
cmpsl
lods
ja
adc
or
stc
or
scas
mov
xchg
loopne
aad
xchg
inc
mov
enter
lahf
add
stos
scas
lahf
dec
pop
mov
repz
xorl
cwtl
clc
out
cmp
pushf
xor
inc
adc
and
stc
and
loope
ficompl
mov
pop
dec
add
dec
inc
add
les
cmp
iret
enter
dec
xor
jns
ds
jmp
xchg
inc
and
sahf
xchg
mov
sub
sub
adc
mov
add
pop
jnp
mov
testl
aaa
xor
popa
xchg
xor
sbb
vpsubq
rorb
movsl
movsb
andl
adc
mov
je
mov
mov
inc
dec
xor
gs
sahf
pop
repnz
jmp
fistpl
ffreep
ret
sub
gs
test
or
stos
gs
test
mov
mov
pop
and
inc
inc
mov
ljmp
test
jmp
imul
addl
and
mov
or
add
sbb
pushf
icebp
inc
cs
stc
xor
push
cmovp
aas
inc
scas
xchg
movsl
add
scas
test
jle
push
cli
dec
mov
cmp
ret
imul
inc
sub
push
lods
out
lock
jb
int3
adc
and
or
sarb
aas
jg
mov
ret
mov
outsb
scas
aad
scas
jg
add
or
sbb
pop
lret
fcomps
inc
fwait
cmc
adc
cs
scas
jns
dec
pop
cmp
negl
xchg
shl
int
stc
mov
cmp
or
in
and
jmp
dec
ret
cmpb
lock
pop
lret
inc
aaa
pop
repnz
dec
lcall
hlt
jmp
jo
lods
pushf
xlat
mov
pop
push
lods
vmread
adc
jmp
xor
jne
xor
movsl
cmpb
inc
mov
dec
scas
int3
stos
repz
fwait
mov
fs
mov
jbe
push
test
fsqrt
shlb
xchg
mov
pop
sub
mov
test
xchg
scas
fcoml
test
cmp
push
fcompl
je
xor
and
mov
cwtl
cld
fdivs
mov
aas
adc
mov
movsb
pushf
iret
ds
mov
mov
push
pushf
cmpsb
fmull
mov
pushf
inc
test
and
pop
dec
push
mov
adc
xchg
adc
in
mov
sbb
dec
hlt
sbb
sbb
mov
addr16
iret
clc
aas
jno
mov
sub
hlt
rorb
rol
pop
fs
add
test
clc
xlat
dec
xor
adc
decl
fidivs
stos
adc
add
out
jnp
arpl
outsl
fsincos
mov
stos
mov
es
cmpsl
inc
push
sbb
push
jae
and
ret
jns
js
sti
adc
mov
sbb
sub
add
mov
jno
push
scas
inc
out
ret
in
sub
push
add
add
into
in
inc
test
aad
xchg
fcmovu
ja
sbb
xor
push
adc
mov
pop
lock
imul
xchg
mov
add
test
jle
cwtl
adc
pop
stos
std
lcall
cmp
mov
cmp
mov
pushl
lods
push
std
push
sbb
ret
jge
xchg
xor
and
andl
sub
mov
dec
jmp
in
jnp
dec
ja
jecxz
push
or
ret
rcr
xchg
std
pop
xor
icebp
inc
test
rolb
out
and
jge
pop
aaa
filds
lret
mov
adc
or
ficoms
mov
sub
jl
adc
call
sahf
pusha
dec
fidivl
icebp
dec
mov
xlat
jmp
cmp
jno
push
inc
cmc
out
mov
rol
sub
dec
outsl
mov
loope
shrb
or
sbb
imul
push
out
ror
cld
arpl
mov
negb
xor
leave
push
outsb
addr16
ret
or
data16
mov
cmpsl
arpl
xchg
into
stos
cmp
adc
out
rclb
xor
data16
mov
and
add
clc
leave
insl
imul
mov
call
sub
sub
lea
fwait
and
mov
loope
arpl
fstpl
adc
add
adc
shrb
and
and
loopne
jle
inc
inc
movsb
or
cwtl
out
add
arpl
dec
add
jae
into
lea
jecxz
mov
and
fisubrs
cmpl
stos
adc
cmp
mov
xchg
and
adc
mov
jb
jno
lods
outsl
ss
mov
into
mov
sbb
insl
fcompl
adc
dec
nop
sub
sbb
jae
outsb
in
jae
nop
mov
fidivl
cmpsl
xchg
sub
inc
cwtl
pop
bound
lahf
jae
fbld
adc
or
ss
leave
mov
sub
scas
pop
or
shrb
in
iret
mov
aaa
pop
dec
stos
and
mov
or
rorb
test
xor
pop
lret
cmpsl
divl
lds
loope
xchg
nop
inc
je
jo
fstpl
ret
xor
nop
pusha
lock
imul
sbb
es
ss
call
cmp
xchg
fsubrs
adc
pop
add
pop
xor
dec
fwait
xchg
sub
roll
jmp
add
bound
fisttpl
push
mov
stos
shlb
sub
dec
push
fiaddl
and
and
pop
fstps
shlb
scas
inc
into
cmp
pop
test
pop
push
xchg
sbb
inc
pop
je
mov
gs
jmp
lret
pop
fcomi
cmpsb
lret
lods
xchg
into
js
dec
loop
test
test
ret
andl
sti
imul
sub
shr
fsts
xchg
push
adc
mov
inc
lods
mov
in
mov
xchg
sub
lock
or
cmpsb
xchg
leave
xchg
shlb
sbb
jl
out
push
scas
cmpl
pop
cmp
bound
jbe
clc
sub
pop
mov
jnp
lahf
out
add
les
xor
push
inc
mov
rorb
cmc
dec
jo
lcall
adc
inc
push
out
das
sahf
shr
inc
ds
fisttpl
sbb
xchg
jnp
mov
hlt
push
cmp
adc
dec
sub
sub
push
loop
out
add
mov
mov
out
or
mov
dec
repz
subb
push
and
mov
sti
ret
movaps
and
test
xor
hlt
xchg
pop
pop
add
mov
and
dec
int3
mov
sbb
inc
sbb
cmp
xor
cmp
xchg
popf
leave
lods
or
and
sti
lods
sbb
fnsave
fsts
jmp
repz
or
ds
loope
sub
jge
inc
adc
xor
test
add
lds
gs
mov
shll
hlt
in
sub
cld
inc
pop
pop
jmp
add
mov
sbb
out
imul
pop
mov
lahf
lret
in
or
notb
add
cmp
cmp
inc
or
frstor
dec
push
xchg
jmp
outsb
mov
jmp
jl
aas
pop
std
cmpsl
cmp
xor
cltd
push
mov
jns
fcmovne
inc
or
jmp
cld
push
xor
xchg
lock
out
jae
xor
icebp
loope
inc
mov
or
sarl
fs
adc
das
dec
cwtl
add
imul
mov
jmp
pusha
imul
jb
int
adc
incb
insb
pushf
push
stos
and
push
repnz
jno
cltd
adc
push
loop
xlat
or
in
mov
iret
int
jb
in
testb
and
mov
lods
cmp
into
mov
shr
jno
rclb
fwait
iret
push
cmc
sbb
mov
add
xor
popf
dec
insb
xchg
mov
mov
daa
das
subb
andl
mov
outsb
out
je
test
stc
xchg
leave
in
dec
mov
int3
push
addr16
movsb
mov
pop
aas
insl
mov
ret
add
push
iret
pop
mov
je
xchg
sarb
add
aaa
jo
inc
dec
mov
ret
inc
xchg
cli
pop
test
into
cmp
repnz
nop
and
in
adc
ror
jnp
out
mov
sbb
pop
fldt
sub
cli
int3
mov
mov
xchg
mov
cmp
mov
pop
xchg
add
repnz
xlat
shl
add
cmp
lcall
cmp
incl
sahf
sbb
push
bound
jle
arpl
lods
pop
jnp
cld
push
test
rolb
loopne
mov
jb
sub
mov
cmp
arpl
into
shlb
rcr
negb
mov
aaa
sbb
push
adc
jmp
add
push
orl
mov
fisttps
inc
mov
inc
jne
fcomps
icebp
jne
and
and
popa
scas
arpl
outsb
imul
pushf
xchg
adc
xchg
sub
sub
je
xor
mov
fwait
inc
outsb
sub
mov
dec
inc
dec
call
adc
mov
push
mov
jle
and
jne
add
ss
and
cltd
pop
push
aam
sahf
scas
loop
test
jge
mov
outsl
repnz
into
and
daa
cmp
jnp
js
add
pop
mov
adc
cmp
iret
jl
xor
sub
or
js
ss
andl
or
sub
jg
push
scas
fwait
lock
mov
jmp
cmp
mov
aad
dec
movsb
push
or
jge
mov
xor
jge
pop
daa
fwait
dec
pop
les
xchg
sbb
cmp
addl
jp
stc
aas
out
add
xchg
inc
cmp
data16
in
jb
les
and
add
ja
add
jne
outsl
xchg
mov
jmp
test
jb
push
hlt
and
jo
pop
cmp
mov
and
loop
xor
sub
scas
sarl
and
push
xchg
lods
push
add
lock
push
push
js
jle
lret
mov
cwtl
pop
pop
adc
call
mov
mov
pop
and
cmp
mov
shlb
sbb
dec
jmp
add
xor
jbe
sahf
cmc
mov
jno
jo
popa
ja
cmpsb
lcall
mov
je
daa
and
imul
mov
xchg
sti
xchg
pop
xor
jno
pop
pop
aam
mov
aas
mov
inc
sbb
mov
in
xlat
call
inc
and
aas
or
push
xor
ret
arpl
jmp
dec
mov
jae
and
mov
bound
xor
repnz
ret
insl
aaa
cmc
insb
inc
ljmp
jg
outsb
pop
adc
shrl
sti
fs
push
in
pop
inc
push
iret
adc
jnp
ret
imulb
inc
jg
inc
add
push
insb
aad
insl
push
or
cwtl
mov
int
lret
mov
inc
pop
scas
pop
cmp
pop
push
adc
testb
jo
dec
sub
sub
sub
cmp
push
mov
jno
jge
jne
vmovhps
int3
outsl
sub
jnp
std
push
mov
adc
add
pop
adc
fcompl
int3
or
jl
lea
sbb
pop
imul
push
pushl
xchg
les
xchg
xchg
call
into
cmp
arpl
push
ljmp
cwtl
lods
enter
jne
sub
addr16
push
mov
inc
stos
loope
push
sub
out
dec
mov
outsb
and
jne
clc
ret
jo
repz
xchg
mov
lods
out
es
test
mov
jne
jbe
mov
cmp
dec
dec
cmp
pop
push
outsb
xchg
push
mov
xor
jae
sub
push
push
divps
fbld
dec
in
stos
movsl
push
outsl
or
mov
xchg
add
or
gs
sbb
js
testl
popf
mov
stos
push
xor
enter
xor
bound
sti
xor
xor
sub
add
leave
mov
ljmp
or
and
jnp
iret
add
pop
xor
rep
cmpl
mov
sbb
xor
and
jno
push
insl
jg
pcmpgtb
push
loop
inc
scas
repz
aas
adc
enter
lahf
dec
or
cmp
repz
clc
or
and
loope
out
orl
testl
dec
jns
fildll
outsw
jl
add
inc
jg
pop
pop
ret
in
popa
adc
push
sbb
popf
add
add
loop
je
mov
pop
aaa
cmp
mov
push
out
and
mov
fsubs
sbbb
mov
sarl
cs
repnz
in
push
in
aam
and
sahf
jmp
pop
daa
int3
jecxz
inc
push
int
pop
adc
mov
lods
in
mov
inc
adc
or
inc
sub
cld
sbb
sarb
cmc
dec
inc
shl
out
fildl
mov
es
pop
pushf
ror
jnp
imul
es
adc
lds
es
adc
xchg
jbe
jne
sbb
dec
cmp
fiadds
scas
popa
or
aas
dec
adc
jbe
pop
xchg
add
xor
pop
popa
xorb
jbe
cmpl
pop
push
push
jb
pop
insl
mov
sub
popf
dec
xchg
xlat
mov
movl
pop
negb
loop
lret
push
dec
stc
mov
xor
mov
add
loopne
push
xchg
jne
lahf
pop
mov
movsl
addr16
push
xchg
fnstsw
in
jp
lods
inc
daa
pusha
mov
out
xchg
xchg
insb
scas
test
loopne
arpl
test
scas
inc
popa
xchg
cmp
push
frstor
call
mov
pushf
jb
iret
jbe
pop
insb
mov
flds
faddp
pop
out
imul
mov
repnz
aam
mov
bound
mov
je
xor
jnp
ja
sbb
push
push
gs
and
rclb
mov
mov
mov
leave
or
xor
jmp
sbb
dec
mov
sbb
mov
bound
stc
xor
mov
andb
and
add
jno
jg
in
add
subl
clc
add
lods
sub
mov
cli
dec
mov
lods
jnp
inc
aas
ja
daa
jb
popa
in
adc
stos
aaa
mov
mov
add
mov
out
daa
cltd
jg
lods
xchg
ds
fstpt
mov
addr16
pop
jmp
pop
stos
clc
mov
scas
sub
jo
inc
pop
ss
js
cmpsb
ret
jns
fwait
and
and
mov
mov
add
jp
mov
das
es
add
jo
sub
in
push
shll
rcr
outsl
xchg
jne
out
sbb
and
push
dec
fsubrp
sti
adc
jns
and
or
lods
mov
add
das
call
jb
or
cmp
shrb
sub
outsb
jne
jp
mov
bound
mov
pop
call
or
sbb
and
mov
mov
add
es
cwtl
pop
ss
cld
das
or
aas
or
test
negl
into
pop
mov
andl
das
pop
addl
aaa
mov
xchg
fiadds
mov
dec
std
adcl
inc
sub
inc
mov
sbb
daa
fisttpll
ljmp
mov
lea
sub
das
data16
repz
cmp
movsb
aad
sahf
cmpl
iret
in
dec
add
loope
dec
sub
sub
pop
subl
rorb
lcall
pop
outsl
les
inc
sahf
pop
mov
jno
shlb
push
add
cmp
jmp
insl
scas
out
or
movsl
or
into
jge
out
incb
pop
loopne
sbb
and
fst
cmp
mov
fwait
ret
fiaddl
sbb
xchg
sub
cmp
mov
scas
lock
in
push
lret
pop
mov
sti
aas
xorb
lret
adc
dec
pop
xchg
pushl
jg
push
inc
sub
das
popf
loop
or
popf
adc
imulb
jb
insl
mov
outsb
cmp
insb
cli
cmp
repz
insb
lock
or
sbb
add
pop
clc
dec
xchg
fdivrl
fwait
push
xchg
jmp
je
stos
mov
es
fs
hlt
dec
pop
inc
push
ljmp
data16
or
push
xor
lcall
stos
sti
fnstsw
lcall
loop
pop
jno
dec
ljmp
dec
jg
push
das
mov
loopne
xchg
cmpsl
jl
jge
xchg
inc
fcoms
dec
or
popf
imul
mov
ljmp
sbb
push
xor
pop
push
in
aaa
lcall
sbb
cltd
sbb
fildl
mov
lret
and
je
jmp
jmp
rol
add
arpl
fwait
jbe
push
or
sti
sbb
mov
dec
pop
aam
inc
addr16
or
add
nop
outsb
cmc
push
mov
jg
xlat
sbb
mov
test
inc
add
int3
xchg
xor
test
and
sbb
js
pop
imul
cmp
jo
push
jmp
clc
mov
nop
add
cltd
inc
push
cli
mov
dec
into
xor
sbb
pop
xchg
lret
ret
and
test
clc
orl
inc
mov
lret
sub
inc
jbe
pop
ds
sbb
fmull
inc
mov
and
inc
adc
out
cmp
mov
sub
insl
nop
or
xor
sti
pop
mov
jg
popf
popa
pop
cmp
stc
in
ljmp
or
mov
inc
fsub
inc
jae
out
repz
mov
mov
inc
mov
cmp
scas
sub
and
mov
cmp
test
xchg
cltd
xchg
cmp
xorb
out
inc
xchg
adc
mov
jg
sub
and
dec
nop
stos
jbe
cmc
sub
push
push
dec
adc
jg
mov
jmp
imul
mov
icebp
jle
sub
in
jne
mov
add
in
fsubr
cmp
or
push
mov
mov
cmpb
scas
scas
sahf
mov
mov
fucom
cmpsb
loopne
jo
mov
inc
dec
fcmovnb
ret
add
gs
rcrl
dec
jle
test
idivl
icebp
mov
lods
insb
or
pop
pop
rorl
add
ss
pop
lcall
cmpsl
adc
jg
divb
add
andb
push
sti
sbb
daa
mov
loopne
adc
sar
push
cltd
xchg
mov
pop
and
pop
ja
aas
mov
push
insl
pop
jo
stos
mov
push
add
xchg
sbb
xor
stos
andb
aas
add
xor
mov
jno
aam
out
cmp
aas
push
clc
clc
aaa
stos
xchg
scas
jmp
sub
pop
cmp
pop
mov
jecxz
in
push
lcall
pop
mov
cwtl
subl
lret
inc
notb
jb
fwait
mov
scas
inc
dec
aas
scas
test
and
and
and
or
scas
fildl
xchg
sbb
mov
sbb
push
nop
dec
sar
imul
cmpsl
fmuls
incb
fdivrl
jecxz
pop
push
or
push
lret
or
data16
jne
out
dec
pop
pop
fstp
jnp
pop
insl
adc
pop
in
fmul
insb
jo
fldl
pop
inc
ja
sbb
addr16
insb
test
inc
push
inc
mov
jns
fsubrs
sbb
pop
pop
insl
cmpsb
shld
andl
fcomip
pop
cwtl
pop
outsb
cwtl
sbb
lods
fisubs
nop
mov
jb
add
inc
popa
fs
rol
and
mov
mov
mov
rclb
fwait
push
cli
jae
into
addr16
add
or
aaa
or
pop
cs
das
pop
xchg
sbb
insl
mov
xlat
test
mov
pop
mov
sbb
pusha
mov
cvtps2pd
dec
jge
fwait
mov
lods
lret
iret
jg
stos
inc
lret
dec
cli
test
aam
adc
xchg
loop
pop
jmp
pop
pusha
dec
push
or
pop
adc
mov
jl
dec
pop
jecxz
faddl
cwtl
and
jo
mov
pop
xor
mov
push
sub
dec
adc
ja
aam
in
xchg
cwtl
fimull
cmp
xchg
lea
rclb
or
or
test
arpl
inc
pushf
add
pop
fmul
gs
mov
sub
sbb
mov
mov
ja
pusha
or
rcr
rcl
test
jl
dec
cld
shr
loope
or
fxch
int3
push
adc
jnp
pop
sbb
testl
and
xor
mov
sbb
xchg
imul
xchg
cmp
mov
cmpsb
cwtl
dec
mov
push
xchg
mov
add
out
cmp
in
xor
les
mov
or
pushf
lock
xchg
enter
xor
insl
sub
pop
or
mov
aaa
mov
pop
pop
push
adc
loope
ljmp
roll
roll
xor
and
jp
call
or
mov
jb
repz
mov
jno
sbb
nop
cmp
gs
cmpl
dec
ds
cmpsl
and
sbbl
push
mov
int
xchg
aas
test
sbb
ja
mov
rclb
fwait
sbb
bound
and
cmp
outsl
fisubs
mov
test
cwtl
psubq
sbb
add
add
fiadds
fcomp
std
mov
add
mov
int
scas
pop
adc
mov
inc
cmpsl
sarl
repnz
sbb
push
shlw
or
lret
cmp
jle
ds
arpl
sub
push
ss
fimull
fstpt
pop
mov
xchg
pop
inc
sub
in
lods
inc
fildll
xchg
and
add
xchg
sub
pushf
imul
inc
inc
movsb
inc
lcall
lods
inc
or
neg
int
or
sahf
xchg
xchg
mov
mov
push
enter
pop
mov
mov
or
hlt
push
jbe
fs
lods
xor
dec
cmp
push
imul
cmpsl
lahf
mov
in
or
sub
cmp
call
loope
cmp
icebp
mov
movsb
lds
mov
mov
ss
cmpsl
stos
mov
rcr
push
mul
cld
call
pop
popa
or
fwait
jge
lods
pushf
cwtl
jp
vpabsq
stc
pushf
iret
cmpsb
lods
xor
mov
lret
mov
shr
and
repnz
pop
arpl
push
or
jg
sub
mov
mov
and
fdivs
sbb
add
jmp
cmpsl
add
sbb
sub
icebp
out
mov
fbld
out
call
sbbl
loopne
enter
lock
dec
insl
push
push
adc
subl
bound
arpl
adc
push
mov
adc
cmc
sbb
push
movsl
or
inc
dec
dec
pop
pop
jg
mov
bound
adc
fistpll
test
addr16
lcall
mov
cltd
mov
imul
repnz
sahf
stos
sahf
call
inc
xor
sti
push
sub
daa
and
jae
pop
aaa
mov
cli
js
push
jne
popf
gs
std
xor
xchg
call
or
xlat
rol
mov
mov
add
fisubl
dec
pop
pop
jo
popa
aas
enter
loopne
cmp
int
shlb
mov
mov
sbb
jge
lods
xchg
int
insl
roll
cmpsb
push
jecxz
cmp
mov
cld
mov
xchg
sbb
mov
cmp
icebp
mov
lahf
mov
icebp
mov
insl
inc
mov
loop
push
ss
in
xchg
js
test
mov
daa
cwtl
mov
sbb
fisubl
push
faddl
cmc
inc
out
and
xchg
mov
push
out
lret
mov
pop
jecxz
iret
loopne
and
jbe
mov
adc
cmp
xor
mov
add
pop
adc
mov
shrb
fs
xor
mov
cmp
test
popf
pop
mov
push
shlb
jmp
xchg
ja
sti
js
mov
into
jp
pop
and
lds
push
mov
dec
xchg
out
cmp
pop
pop
in
scas
pop
lret
push
mov
std
pop
test
push
ss
sbbb
aaa
fcoms
sbb
push
lods
jg
inc
jnp
and
mov
push
pop
xor
mov
fists
rolb
ljmp
xor
das
les
xor
push
jmp
pop
dec
rcll
out
outsl
jae
adc
mov
idivl
ficompl
push
mov
sar
data16
cmc
mov
dec
xchg
insb
scas
sub
pop
mov
mov
jl
aam
jmp
sub
and
cs
push
mov
or
dec
push
imul
mov
xchg
xor
adc
add
adc
dec
jno
adc
sub
leave
cmp
repnz
and
out
call
test
sub
ljmp
sti
orb
cli
mov
imul
pop
add
jle
lcall
pusha
mov
sub
icebp
sbb
pop
mov
ret
in
shll
das
pop
nop
and
sub
mov
jmp
cmpsl
jl
scas
sahf
lret
mov
out
xchg
roll
aam
shll
repz
rcrl
mov
pop
fstpt
leave
fsubl
sbb
popf
xchg
jns
andb
mov
fdivl
enter
adc
popa
movsb
lds
arpl
aad
mov
jno
xchg
or
or
sbb
sar
negl
sahf
fmuls
aas
cli
push
loop
jae
xor
push
push
sub
in
loopne
xchg
add
sbb
imul
call
push
or
arpl
and
and
cs
cmpsb
call
xor
sbb
ja
xor
push
cmp
mov
and
mov
adc
jmp
xchg
hlt
xchg
ja
dec
std
sbb
sti
insb
add
popa
xor
cmpsb
scas
stos
hlt
xchg
dec
cmpsl
fisttpll
daa
int3
adc
sub
enter
mov
mov
test
rcrb
fists
jno
mov
pop
xchg
cmp
xchg
mov
jp
imulb
mov
fsubl
jp
mov
and
mov
das
pop
cmp
pusha
xchg
ss
add
push
loop
dec
mov
adc
push
sbb
mov
and
dec
mov
inc
hlt
insl
dec
lds
or
fcmovnu
or
test
mov
pop
lods
shlb
pop
mov
push
movsl
fs
cmpsb
testl
push
mov
cltd
sub
mov
push
sbb
push
add
push
pusha
insl
add
fcmovnu
inc
lods
xchg
jne
and
cmp
sbb
dec
in
xor
out
repnz
fidivrs
mov
je
pop
pop
adc
sbb
aad
ret
daa
out
xchg
jo
loope
cmpsb
ljmp
loope
or
je
add
sub
insl
mov
push
addr16
and
fsts
arpl
shll
je
add
mov
loop
pop
fadd
inc
call
movsl
scas
push
sub
mov
xchg
push
repnz
gs
pop
adc
push
pop
repz
push
out
sub
jecxz
xorl
jl
mov
test
imul
stc
sub
ljmp
setb
dec
call
out
and
push
pop
jmp
xchg
out
ret
or
push
push
add
test
adc
out
jnp
divl
sub
pop
push
hlt
nop
dec
insl
mov
in
orb
sub
stos
push
mov
xchg
jle
sbb
stos
popa
ficoms
xchg
std
aaa
mov
mov
inc
and
jp
rorb
cwtl
cmc
xor
cmp
dec
in
sub
sbb
adc
xlat
aad
popf
mov
mov
outsl
mov
xor
scas
mov
xchg
outsb
repnz
int
outsl
mov
decb
xchg
hlt
scas
jg
mov
lods
or
outsb
inc
and
mov
cmp
or
cmpsb
mov
jp
mov
mov
fists
xchg
fcoml
pop
push
cmp
das
repz
jl
lahf
out
dec
roll
inc
inc
mov
ret
xchg
iret
adc
int3
or
cmpsl
or
ja
sbb
mov
push
fnstenv
in
lcall
sahf
daa
inc
cmp
jl
sub
push
scas
test
sub
and
pop
push
xor
movb
xor
ret
mov
jns
inc
sub
jbe
push
mov
dec
popf
cmpsl
fcmovu
aad
adc
dec
andb
xor
mov
imul
imul
lock
icebp
repnz
pop
xchg
outsb
pop
mov
mov
aam
aaa
adc
adc
jns
popa
mov
test
subb
in
out
scas
sbb
loope
cmp
push
mov
inc
test
cltd
xor
mov
cmpsb
fs
pusha
movsb
mov
test
insl
sub
or
je
aaa
popa
xor
mov
xchg
xchg
loopne
dec
insl
and
fucomip
ret
sub
stc
mov
lret
popa
imul
xor
ds
xor
in
push
dec
hlt
inc
jle
inc
sbb
jns
or
js
mov
clc
je
adc
xor
iret
mov
scas
jnp
fisttps
add
jg
pop
enter
mov
dec
push
int
cmc
insl
mov
adc
or
add
mov
lahf
jmp
aaa
sete
sub
mov
xchg
addb
int
mov
xor
lea
loopne
movsl
mov
xchg
add
lds
xor
xor
cwtl
hlt
jb
push
popf
dec
orb
push
inc
jnp
cli
add
lcall
pop
pop
sarl
shl
outsl
test
prefetch
sbbl
mov
jg
fdivrl
shlb
mov
out
cs
mov
jae
gs
mov
jmp
jmp
xchg
push
mov
jmp
inc
ja
jae
push
ret
pop
sub
ja
sbb
mov
bound
imul
add
and
jb
mov
mov
test
inc
incb
xchg
std
out
ja
push
cmc
enter
mov
pop
test
jb
sarb
dec
rcrl
addr16
sbb
sbb
in
mov
or
mov
clc
xor
lret
imul
and
fcmovb
std
mov
or
sar
add
scas
push
popl
repz
es
sub
cwtl
pop
out
mov
test
or
xchg
addl
js
pop
negb
mov
push
sub
jae
xlat
fstpl
loope
xchg
insb
lock
fs
aam
push
fwait
popf
sub
leave
frstor
pop
mov
dec
mov
int3
add
dec
mov
ss
outsl
cwtl
and
pop
fs
pop
sub
insl
push
fmul
movsl
imul
test
shll
lods
fadds
mov
test
std
dec
push
lret
out
in
out
ss
push
lcall
sub
sbb
cld
addr16
ja
addb
out
sbb
test
into
sbb
leave
or
in
fisttpll
scas
aam
fsts
test
pop
sbb
imul
inc
cltd
jmp
in
decl
cmpl
mov
int
and
test
test
or
adc
call
push
mov
je
inc
mov
jecxz
ja
cs
fcmove
jecxz
fiaddl
mov
jbe
jge
cmp
pop
pop
push
fidivrl
xlat
test
fadd
dec
xor
pop
out
iret
pushf
cmpsl
add
out
push
xor
ret
jle
outsb
xor
adc
mov
xchg
insl
and
mov
mov
mov
dec
mov
aaa
mov
jecxz
pop
and
out
fdivl
xchg
add
cmp
je
adc
les
or
in
stos
mov
sub
in
aaa
mov
pop
push
and
xor
dec
adc
push
popa
jns
in
cmc
sub
notl
mov
fildll
repz
out
jne
push
mov
out
iret
adc
dec
sub
hlt
pop
mov
xchg
enter
mov
adc
sub
inc
mov
or
sub
test
or
dec
xor
sub
sub
pop
rclb
aad
aas
test
push
fisubs
aaa
call
or
mov
jl
cmp
leave
pop
add
xchg
xor
mov
nop
icebp
cmp
mov
jmp
pop
cmp
insb
and
out
jmp
pop
subl
dec
ljmp
mov
jmp
dec
sub
mov
hlt
es
and
jge
push
insl
cwtl
xchg
je
jge
sbb
enter
and
aam
mov
or
xchg
dec
or
cmp
jne
xor
imul
mov
cmp
aaa
push
sbb
inc
dec
sbb
cmp
shlb
inc
insl
dec
mov
push
imul
or
insb
xchg
clc
push
icebp
xor
and
mov
dec
pop
rcrl
mov
pop
scas
shrl
cmpb
and
mov
fidivs
ss
bound
xor
icebp
mov
cwtl
jl
imul
es
adc
lods
sahf
mov
dec
jb
dec
nop
iret
inc
leave
push
or
je
rcr
dec
ret
ja
fsubr
add
aad
jne
out
in
push
rorl
mov
xchg
or
das
fcoml
xor
xchg
clc
int3
and
bound
xchg
push
mov
jp
adc
lea
or
mov
cmpsl
add
insl
cli
jnp
lea
shrl
sbb
lods
and
cmp
jne
mov
pop
testb
jg
sub
jo
mov
xchg
outsl
or
stos
mov
xrelease
dec
jns
dec
pop
adc
leave
jg
loop
aaa
push
movaps
pop
mov
or
sub
xor
faddp
or
mov
mov
andl
lahf
pop
xlat
pop
xor
add
xlat
movsb
adc
mov
sbb
test
fwait
jmp
jo
and
jo
mov
pop
xchg
popa
xor
add
movsl
mov
push
mov
xor
outsb
arpl
in
js
cs
pop
fcom
mov
add
scas
roll
cmc
jmp
sarl
cmp
stc
xor
dec
pop
sub
inc
jae
scas
test
data16
in
pusha
rol
or
jne
push
fnstcw
inc
addr16
rcr
or
imull
out
pushf
fnstcw
sbb
inc
jno
dec
pusha
imul
dec
jb
nop
pop
dec
inc
lea
adc
popa
mov
add
sub
dec
or
div
xchg
insl
fdivrl
ljmp
test
cld
inc
inc
xor
addr16
mov
adc
rorb
xor
jg
pop
inc
or
and
idivb
or
xchg
loopne
xchg
mulb
cmp
ret
push
mov
inc
std
test
int
sub
lea
sti
and
dec
aaa
xor
or
cmpsl
outsl
cmc
and
scas
in
cmpsb
icebp
fiaddl
loop
mov
dec
stos
cli
adc
mov
scas
and
push
xor
xchg
cmp
sbb
test
xlat
mov
lret
lcall
scas
fldenv
mov
ret
scas
or
push
adc
add
sub
jecxz
popf
xchg
sub
xor
in
ds
insl
fimuls
cld
ss
lahf
mov
mov
lds
daa
mov
int3
mov
push
or
adc
xchg
mov
adcl
xchg
jg
sub
pop
jb
ja
stc
lds
mov
test
out
clc
jl
cmp
in
xor
ja
sahf
lret
out
mov
sbb
insb
ja
mov
fsubs
jmp
sub
sub
mov
shrl
loopne
xchg
rolb
adc
aad
clc
test
adc
lds
popa
mov
sbb
bnd
imul
movsb
popl
ljmp
stos
and
outsl
movsl
daa
fnstenv
shlb
dec
xor
lcall
cmp
cli
mov
xchg
outsb
jecxz
dec
jnp
and
xor
mov
dec
xor
stos
and
lahf
cmp
cld
sar
push
push
sub
cmp
and
xchg
push
ja
movsl
push
xchg
jmp
pop
jmp
loopne
das
mov
stos
xchg
adc
adc
mov
xor
xor
sub
lods
scas
dec
in
arpl
sahf
push
lods
pop
and
adcl
ret
fistps
mov
inc
pushf
cmp
mov
flds
mov
xor
repz
cs
fucomip
push
add
sbb
dec
bound
outsl
mov
outsb
in
mov
push
xchg
mov
int
adc
stc
ret
sbb
arpl
push
pushf
fbstp
data16
loop
repz
in
das
xchg
dec
arpl
jno
jp
movsb
dec
movsb
mov
push
into
gs
mov
enter
push
push
out
adc
ret
and
jge
jecxz
test
mov
test
cmc
xchg
pop
xor
and
mov
cmp
scas
inc
add
std
scas
mov
shrl
mov
out
fwait
test
jecxz
xor
cwtl
xor
xchg
shrl
arpl
push
fdivs
or
mov
cmp
lcall
adc
or
lea
sub
mov
push
xor
mov
ds
push
sub
ja
out
jl
push
call
cmp
popf
int3
sub
mov
ljmp
mov
fdivl
xchg
hlt
imul
addr16
mov
imul
and
sti
arpl
ret
cli
daa
push
mov
outsl
jp
add
outsl
into
dec
pop
test
mov
xchg
jo
outsl
ret
sub
cmpsl
movsl
hlt
sbb
out
enter
push
leave
add
imul
hlt
fnstsw
jmp
test
jo
mov
cltd
mov
xor
daa
xchg
fwait
pusha
mov
movsb
popf
scas
dec
insl
mov
xchg
push
add
inc
loopne
add
int
adc
pop
test
mov
in
mov
adc
sub
pop
mov
cmp
aaa
hlt
sub
gs
bnd
lock
pop
outsl
mov
inc
and
inc
dec
dec
xchg
mov
and
dec
pop
out
andb
movsl
sbb
sti
pop
push
or
dec
icebp
adc
das
aas
popf
adc
fcmovnb
das
outsb
pushl
adc
test
push
pop
rclb
orb
and
je
mov
data16
pusha
and
or
test
adc
sbb
pop
pop
jno
mov
cmc
or
adc
fldcw
cmp
cmpsl
mov
fcmovne
in
push
inc
or
call
outsl
jae
test
inc
add
fcmovb
cmp
cmpsl
mov
mov
xor
ljmp
xchg
sbb
sar
jae
ret
les
lock
inc
stos
add
ret
jmp
test
and
push
mov
or
jecxz
cmp
jg
int
or
lods
das
and
dec
jb
mov
outsl
or
dec
outsb
call
pop
push
push
data16
sbb
rorb
stos
inc
adc
sahf
aas
ret
inc
push
or
jp
cmpsb
andb
shr
mov
daa
lea
out
lods
test
das
fiadds
mov
push
push
test
scas
in
jge
stos
scas
adcb
xor
inc
cltd
mov
inc
in
mov
shrb
cs
and
inc
rorb
addr16
fisttps
scas
lds
int
sbb
std
test
push
and
stos
in
sbb
jmp
mov
fcoml
andl
shlb
popa
adc
jge
mov
pop
adc
xor
data16
sbb
mov
sub
fnstsw
jge
push
out
rolb
shlb
std
cmpl
jmp
pushf
stos
pop
cmpsl
pop
rol
xchg
test
fucomi
push
mov
sub
mov
dec
out
es
movsb
mov
aas
pop
js
jle
dec
cmpsb
dec
jmp
stos
pushf
outsb
mov
lret
inc
mov
lret
mov
in
cmp
sbb
shrb
movsl
and
les
ret
loopne
in
pop
and
aas
in
iret
call
adc
scas
fsts
adc
push
imul
add
int
add
and
popa
xor
pop
lea
fstpt
bound
adc
test
and
sub
inc
xor
minps
adc
mov
cmpb
test
push
lret
mov
xchg
lahf
rcl
push
or
mov
les
xchg
dec
jp
test
in
outsb
hlt
test
jno
js
outsb
adcb
lds
cmp
sti
inc
xchg
in
loope
push
sbb
dec
cmp
pop
test
aas
shrl
pushf
xchg
add
lock
mov
dec
xchg
cmp
mov
mov
adcl
adc
aas
imul
ret
sbb
andl
push
cs
fwait
jno
stos
iret
lcall
pop
addr16
dec
daa
out
dec
jl,pt
xor
ret
repz
xchg
ljmp
call
repnz
test
pop
sbb
ljmp
sub
cmp
test
xor
inc
cmp
cwtl
test
jmp
lods
jne
jbe
adc
xor
pop
and
rcrb
mov
icebp
xor
lea
xor
sbb
hlt
push
push
popa
xchg
inc
sub
add
dec
imulb
cmc
adc
adc
cmc
fwait
push
nop
xor
rolb
movlps
or
popf
mov
mov
mov
dec
jge
xchg
insl
in
mov
aaa
mov
repz
mov
xchg
divb
xchg
push
movsb
loope
adc
div
inc
jb
push
mov
push
adc
arpl
ficoml
lcall
dec
jo
repnz
mov
arpl
lods
shl
adc
inc
lock
stos
in
push
xchg
les
cmp
push
sub
jmp
cmp
xor
shr
push
cwtl
fwait
mov
out
loop
push
repz
out
aam
out
mov
pop
mov
stos
or
lods
adc
inc
mov
adc
jge
das
pop
add
lcall
cmpsl
pop
repnz
push
mov
lea
aad
int
aas
lock
in
mov
aas
dec
adc
dec
inc
dec
fisubrs
gs
mov
loop
xlat
adc
stos
loope
fstps
jns,pn
fdivl
xor
outsl
lods
push
aad
pop
mov
aaa
outsb
mov
pop
das
add
sahf
jno
push
nop
add
lret
or
int
mov
sub
scas
subl
xlat
jl
xor
out
test
jo
inc
xchg
cmp
aas
loopne
sub
or
cmp
add
or
dec
loopne
into
sahf
imul
cwtl
dec
test
lods
out
adc
imulb
xchg
or
mov
xor
ucomiss
fcoml
and
pop
sbb
and
dec
stos
movsb
shll
std
into
mov
je
or
cmpsl
cmp
or
add
mov
int
xchg
jle
push
call
mov
fwait
bound
repz
inc
and
pop
xor
testl
sti
mov
dec
push
and
push
loope
cmpb
insl
xchg
rorl
jl
cmp
inc
add
mov
sbb
sub
adc
loopne
jno
sbb
dec
shll
int3
push
out
mov
pop
inc
push
mov
mov
inc
add
es
cmc
in
repz
aas
test
pop
dec
mov
mov
cli
ja,pn
dec
xor
sbb
out
mov
repz
test
push
divb
ljmp
mov
sub
cmp
neg
push
fldcw
fbstp
xchg
ja
fs
and
jmp
adc
pop
test
cli
mov
mul
cmp
imul
std
cltd
inc
addb
add
mov
pop
cld
movsb
xor
pop
adcb
cmc
or
push
test
sbb
fadds
inc
push
sub
xchg
pop
push
mov
cs
mov
xchg
mov
test
or
mov
loopne
mov
cmp
movsb
call
push
mov
sbb
xor
data16
pop
mov
and
je
sbb
xor
push
or
lods
ret
lods
stos
jge
and
lods
shll
test
jp
mov
push
ja
adc
addr16
outsl
xchg
and
insl
shll
popa
ret
mov
mov
sub
lds
adc
jb
jg
push
and
cmp
jbe
in
cmp
ret
mov
mov
fninit
es
adc
dec
clc
xchg
adc
add
inc
mov
js
out
cmpb
jg
sbb
push
and
pop
stos
add
add
lret
data16
xchg
xchg
add
lock
dec
sbb
jmp
jae
jecxz
mov
adc
in
adc
xor
mov
fisubs
mov
je
and
fistpl
fcomp
je
and
sub
and
loopne
cld
sub
xor
cmc
pushl
loop
icebp
mov
push
or
bound
xchg
cld
pop
or
push
shl
cmp
xchg
leave
and
sti
add
dec
fistl
jne
ljmp
gs
jp
mov
or
mov
adc
daa
and
pop
mov
cmp
xchg
jne
mov
sbb
inc
inc
ror
jg
rcrl
push
test
mov
loope
mov
es
cli
fwait
add
fistl
rolb
lods
ret
xlat
push
mov
aam
pusha
fnstenv
dec
out
inc
nop
mov
test
fisubl
sahf
imul
lea
in
outsl
out
cli
pop
sub
add
dec
and
mov
mov
lock
fdivrl
rcrb
repz
andl
aaa
xchg
lods
fcmovnu
pop
push
popf
and
jae
xor
arpl
sub
add
lcall
lock
sbb
mov
push
lret
mov
xor
mov
dec
add
in
mov
push
sub
popa
sbb
sub
cmc
and
es
fnstcw
jl
hlt
imul
cmpsl
sbb
inc
push
clc
jg
testl
and
shrb
jecxz
cmp
or
enter
mov
shll
shr
stc
adc
sbb
gs
dec
cmp
cmp
xor
imul
imul
or
push
inc
es
jne
jno
inc
mov
xor
inc
ljmp
adc
inc
cmc
js
xor
or
out
cmp
cmpsl
cmp
jle
cmp
das
fldenv
test
lcall
lret
ret
dec
jl
stc
mov
stc
imul
fstl
push
mov
push
push
movsl
paddsw
sub
mulb
mov
stos
ss
lret
les
movsl
rorl
jo
gs
push
dec
inc
sbb
cmp
add
insl
pop
mov
mov
leave
jb
std
out
cmpsb
scas
xchg
xadd
cli
leave
xor
cwtl
sarb
cmp
mov
inc
mov
hlt
fidivrs
roll
xchg
mov
jle
cs
hlt
sub
shlb
xchg
in
scas
add
outsb
xor
jge
stc
or
xor
push
pop
pop
and
mov
mov
dec
data16
dec
imul
test
sub
orl
mov
push
cs
and
rcll
cmp
adc
xchg
and
cmp
aam
or
mov
fcompl
jmp
stc
lret
mov
cltd
pusha
imul
xor
out
inc
xchg
testb
lret
jmp
cmc
dec
sbb
and
ljmp
xor
test
mov
frstor
push
inc
or
lea
xor
cs
push
mov
xor
in
dec
repz
pop
or
notl
xor
sar
add
sbb
push
sahf
stos
inc
lock
add
int3
pop
fsubr
cmp
ja
jl
and
mov
lret
pop
xchg
shlb
popa
mov
roll
dec
std
ret
cwtl
adc
ljmp
bound
mov
xchg
push
sbb
mov
daa
mov
lds
xchg
push
xor
push
dec
in
adc
roll
mov
scas
rcll
and
mov
lods
add
cwtl
das
lret
pop
pop
gs
mov
ds
adc
push
xchg
pop
cmp
dec
fdiv
cmp
pop
cwtl
sarb
jg
scas
notl
pop
insl
dec
jl
dec
and
gs
adc
add
lods
gs
repnz
xor
in
mov
push
and
clc
pop
daa
in
shl
add
xlat
fidivs
aaa
rorl
gs
int
pop
insb
movl
mov
cwtl
js
lcall
movsb
ja
loop
or
shrb
pop
push
inc
push
test
data16
sub
mov
aaa
iret
daa
or
jmp
or
sbb
ljmp
das
pop
sti
or
cs
mov
inc
psrlq
cltd
movsb
loopne
sbb
xor
in
mov
cmpsl
outsb
xor
test
daa
dec
in
mov
repnz
xor
adc
cltd
cmp
and
adc
adc
jne
push
push
mov
xchg
cmp
in
mov
pusha
mov
jge
lods
rcrl
icebp
mov
out
push
std
test
shrl
cmp
xchg
pop
inc
mov
lret
jmp
jo
dec
test
sub
mov
adc
mov
cltd
push
dec
sub
fstpt
out
jae
xchg
lahf
mov
lret
in
mov
push
inc
pusha
lret
daa
sbb
jp
pop
push
dec
fsubrp
xchg
out
or
xor
aam
xchg
adc
arpl
sarb
sub
inc
lret
and
cwtl
xor
lret
jns
add
mov
ja
lahf
loop
outsb
outsl
xchg
cwtl
adc
ret
out
test
cltd
push
js
test
insb
sbb
fnstsw
ja
ss
into
mov
out
adc
bound
pop
mov
mov
incl
push
into
fisttpll
loope
in
mov
mov
stos
rcrl
hlt
mov
xlat
sbb
cwtl
out
pop
sbb
aam
cwtl
movb
and
cmc
lcall
xchg
aaa
fnstenv
lea
hlt
iret
xchg
mov
xchg
sub
mov
xlat
lock
std
sarb
mov
arpl
std
xchg
enter
iret
xchg
jmp
dec
push
outsl
in
jae
adc
ljmp
jb
iret
scas
pop
roll
int3
push
fisttpll
add
lods
rcr
and
or
cmc
cmpsb
loopne
cltd
in
add
scas
mov
das
or
test
std
xor
enter
push
jae
jg
jg
out
repz
leave
lahf
fwait
pop
jb
pop
pop
push
ljmp
insl
shlb
stos
sbb
push
mov
sti
mov
pop
mov
jl
fmul
leave
sbb
fs
or
add
jge
stos
cs
mov
test
adc
iret
xchg
ja
sbb
cmpl
popa
add
sbb
or
int3
push
or
add
std
adc
jno
popa
push
aas
inc
ret
fcoms
fdivs
sbb
js
std
cltd
xor
xchg
dec
xchg
cmp
daa
ljmp
adc
cs
iret
jmp
call
js
and
sarl
pop
fcomp
dec
pop
dec
cmp
jne
cmpsb
lcall
pop
je
lea
aad
mov
jae
pop
inc
sbb
sub
in
pop
mov
mov
cwtl
sbb
cld
cmpsl
jae
sub
sbb
ret
add
stc
in
out
jno
sub
aas
or
out
cwtl
shlb
je
imul
inc
mov
movsb
stc
pop
ja
rclb
add
dec
jns
push
or
and
shr
or
daa
insl
insb
fwait
sbbl
cmpsl
shrb
sub
mov
inc
push
adc
or
inc
cmp
andb
push
adc
xchg
fimull
inc
and
dec
xchg
dec
and
pop
in
adc
lods
shll
cltd
sbb
mov
lods
xchg
cli
inc
pop
and
aam
pop
int3
cwtl
ds
loopne
adc
cmc
and
push
or
or
xor
out
pushl
and
xor
mov
pop
bound
xor
adc
addr16
jg
cwtl
shr
daa
stos
stos
popa
int3
pusha
enter
xchg
xor
add
push
cmp
aad
pop
lea
enter
inc
fidivs
and
lds
andb
test
add
xchg
xor
ljmp
out
in
out
add
mov
aas
xor
pop
mov
outsl
mov
cmpsl
dec
mov
shll
aas
repz
in
or
jbe
fbstp
push
jns
cmpsl
sahf
mov
add
adc
push
aam
jl
stos
popf
push
xchg
sub
add
cmp
sub
stos
lds
in
mov
jns
lahf
stc
dec
push
jecxz
cmp
mov
push
das
aas
in
push
jecxz
xchg
in
push
xchg
insl
push
push
sub
mov
add
into
inc
adc
or
lods
pop
lahf
push
rorb
xor
lods
lds
mov
push
xor
jo
les
enter
aas
pop
mov
jns
jbe
pop
mov
shr
mov
pop
sbb
sbb
xor
cmp
push
mov
jo
add
dec
pop
dec
fwait
inc
out
inc
and
or
cwtl
in
aas
pop
add
sub
pop
lret
adc
sub
repnz
inc
mov
ret
ja
movsl
cmp
data16
push
mov
lods
mov
outsb
std
push
xor
adc
jns
out
adc
xchg
pop
loope
mov
loopne
jge
or
test
add
loopne
xrelease
jmp
mov
add
adcb
out
mov
sub
jnp
mov
mov
push
mov
inc
jbe
jno
adc
out
jne
loope
fucomip
sub
pop
in
sbb
and
or
dec
sub
sbb
ficoms
test
push
and
aaa
adc
pop
and
add
ret
and
cmpsb
repnz
pop
scas
mov
dec
shl
sub
bound
xor
pop
test
cmp
mov
pop
or
insb
loop
mov
rcll
sub
ffree
stos
push
xor
lret
dec
scas
mov
insl
and
inc
shl
xchg
cmp
rcll
hlt
push
push
fsubrs
in
lock
sahf
add
jmp
cmc
test
cmp
hlt
cmp
mov
jecxz
push
inc
sbb
xchg
into
or
push
out
mov
adc
sbb
cmpb
mov
test
fistpll
sbb
pop
repz
push
orb
pop
rclb
notb
xchg
fadds
ret
xorl
test
push
loop
and
mov
lcall
rcrb
fstpl
es
enter
and
arpl
idivl
loop
xor
ret
mov
sub
sub
xlat
aaa
out
jnp
das
jns
add
mov
jnp
jns
jae
jno
xchg
jnp
aam
loope
outsl
add
dec
test
push
mov
je
iret
inc
dec
rolb
adc
pop
int3
push
xor
es
rcr
push
stc
mov
aad
add
in
cmp
sbb
fcoms
hlt
movsl
sbb
push
shll
test
pop
cwtl
pop
or
pop
out
push
jnp
xor
xchg
fimull
int3
mov
inc
jnp
push
mov
jo
add
pop
jmp
ljmp
sbb
or
daa
addr16
in
inc
xchg
mov
into
xchg
xor
sahf
push
xchg
call
sub
jecxz
jns
push
sbb
jne
inc
add
jle
rclb
xchg
je
pushl
insb
and
imul
mov
push
xchg
aam
in
xor
movsb
and
xchg
fmuls
lods
shl
cmp
jo
jg
xchg
xor
adc
pushf
cmp
or
int
stos
cmp
mov
xchg
insb
aaa
xchg
jo
jl
cmp
out
sub
insl
push
outsl
add
dec
aaa
fcomps
cmp
int3
pop
mov
xchg
out
fldt
shll
popa
outsl
mov
sti
add
pushf
out
addr16
xor
pop
aas
jmp
ss
cmpl
not
int3
popa
nop
sbb
jno
cmpsl
inc
sbb
outsl
aas
pop
cmp
sub
xor
shl
cmp
sub
in
cmp
xchg
leave
test
sbb
add
shlb
add
sbb
into
sbb
fucom
fs
jl
addb
xor
sbb
stos
pop
push
rclb
inc
mov
shlb
mov
lahf
into
xor
mov
jae
mov
push
add
sbb
nop
inc
fs
sub
cmp
add
mov
fisubl
mov
out
push
mov
rcll
mov
mov
or
mov
popa
frstor
adc
mov
std
and
call
sub
push
jno
shll
test
orb
popf
test
push
divb
mov
mov
inc
push
xor
push
inc
loopne
mov
pop
pop
push
mov
push
shl
insb
mov
mov
push
push
ja
test
mov
pop
xchg
fnstsw
aaa
xor
mov
ret
ds
faddl
jmp
negb
aad
mov
sub
add
test
in
repnz
test
pushf
xchg
inc
mov
mov
push
rcr
scas
xchg
cltd
jp
fcoml
xor
ds
js
scas
push
sbb
inc
mov
or
lea
sub
cmp
xchg
aas
inc
popf
std
testl
std
jmp
or
ret
inc
fstpl
arpl
inc
dec
push
jb
mov
repnz
out
jecxz
sbb
push
jmp
dec
cmpsl
push
test
dec
mov
dec
xchg
cmp
adc
jg
cmp
or
je
xchg
gs
in
and
mov
lds
adc
cs
imulb
push
lods
hlt
dec
ds
cld
dec
lods
or
jle
fistl
inc
or
cmp
jp
ror
pop
fstl
jmp
pop
mov
inc
jp
and
jmp
sbb
add
pusha
push
xor
pushf
in
cmp
or
ja
decb
jecxz
roll
or
lahf
jae
mov
sbb
inc
ss
clc
push
lods
xchg
jg
fisttpll
pushl
filds
inc
mov
and
push
sbb
cmp
lods
jno
imul
inc
psrld
xchg
push
js
cmp
stos
fmul
mov
mov
lcall
adc
push
loope
leave
ret
out
pusha
imul
and
insb
push
sbb
sub
pop
lods
dec
pop
dec
mov
movsl
add
add
and
push
jnp
stos
dec
outsl
adc
lea
mov
call
sub
mov
imul
cmp
jae
lahf
rolb
mov
mov
mov
sahf
shll
inc
sbb
mov
ja
call
sub
mov
std
jmp
insb
xchg
subl
imul
ja
or
sbb
or
mov
lods
in
ret
addps
test
lret
lds
inc
add
imul
sub
jo
in
inc
psrlq
inc
or
xorl
int3
shrb
mov
jp
sub
xchg
sub
jo
into
scas
cmp
xchg
mov
or
popa
and
loopne
and
fcom
sbb
cmpsl
call
adc
std
test
addr16
subl
lods
loop
cmp
or
call
cs
add
aad
jne
lock
ret
or
mov
repz
jp
cli
out
xor
add
xchg
lret
xchg
inc
jge
cmpsb
push
dec
mov
lea
scas
popf
je
mov
jbe
xchg
dec
xchg
mov
push
mov
cmpsb
adc
dec
adc
xchg
shl
arpl
mov
cmpsl
sti
mov
jl
call
in
pusha
jbe
psraw
sbb
pop
mov
js
mov
sbb
pop
and
cli
or
mov
and
popf
jmp
lods
fwait
aam
add
inc
sbb
inc
or
jnp
xchg
mov
dec
subb
sti
push
dec
pop
mov
mov
divl
pop
pop
in
or
das
xor
mov
fstps
and
popa
ret
xchg
daa
jecxz
aad
xchg
xchg
xor
repnz
addr16
je
es
aad
adc
rclb
test
fdivrs
or
xchg
fmull
cmp
jmp
ret
xor
mov
shlb
push
cmp
xchg
pop
nop
enter
cmp
pop
lret
jg
and
cmp
push
movsl
adc
cmp
push
lret
pusha
push
test
fdivp
shrb
pop
mov
push
sbb
pop
jle
nop
dec
enter
rcll
popa
js
jmp
sbb
push
mov
dec
or
bound
dec
xchg
ret
fs
fistl
sub
xchg
sti
setne
cwtl
or
or
and
sbb
mov
pop
stc
ljmp
pop
fst
jmp
push
or
fimuls
in
mov
mov
shufps
cmp
xlat
xor
in
pop
adc
jbe
push
and
push
jo
xchg
sub
int
pop
push
imul
cmc
mov
icebp
out
fidivrs
add
fwait
sarb
mov
cli
mov
adc
add
loop
adc
test
js
mov
mov
je
or
aad
jo
mov
cmc
lock
inc
fcmovnbe
notb
xchg
jnp
inc
adc
inc
sub
loop
pop
iret
lcall
pop
mov
mov
inc
insb
cmp
mov
push
push
mov
jbe
add
mov
stos
lods
rcr
sahf
xorl
inc
notb
mov
dec
insb
xchg
cli
cli
push
sbb
xor
sbb
repnz
push
cmp
mov
adc
lods
cmp
xchg
repz
movsl
lock
nop
imul
inc
call
fbstp
mov
subl
test
ss
fidivrl
mov
orb
xchg
or
test
jecxz
push
xchg
out
mov
les
push
iret
mov
mov
cmpl
sub
sbb
test
adc
ret
mov
push
movsb
sub
movsb
sbb
popa
repnz
scas
jle
lret
xchg
add
test
lcall
jae
mov
cmovo
push
dec
pop
pop
xchg
xchg
or
lret
jge
xlat
es
and
out
xchg
adcl
icebp
data16
sub
dec
lahf
les
aas
mov
scas
loopne
sub
fsub
or
bound
push
repz
call
test
cmp
adc
popf
enter
xor
jecxz
pop
pop
add
inc
xor
xor
jo
xchg
dec
jnp
mov
dec
add
push
sub
pop
pop
fmuls
pop
mov
rorb
sbbl
jge
pop
jae
out
test
fwait
call
insl
jae
or
xor
in
jo
out
adc
xor
xlat
jne
mov
sbb
enter
sbb
fsubl
and
jl
test
jle
sub
sub
sub
cmp
repnz
int3
xchg
push
jge
jl
fstps
push
xor
pusha
in
or
fs
scas
mov
jge
sbb
stos
pop
clc
in
sbb
pop
mov
mov
or
scas
sbb
movsl
test
int3
sarl
or
lret
out
jo
pmaxsw
xchg
pop
out
jb
sbb
dec
es
or
adc
inc
inc
outsb
sahf
mov
mov
int3
push
js
stos
push
loope
addr16
bound
inc
jle
fidivrl
inc
jno
push
mov
push
mov
repz
dec
cmp
lahf
xor
inc
and
outsl
arpl
sub
aam
sub
push
lds
in
movsl
jle
movsl
mov
into
mov
pop
adc
fmul
mov
fs
imul
movsl
mov
jno
mov
dec
repnz
sbb
and
mov
imul
or
lods
enter
ja
out
lcall
lods
jae
pop
sub
mov
cs
mov
cmpsl
arpl
push
es
pop
pusha
mov
fidivl
cmp
push
jg
movsb
and
push
iret
mov
les
decb
mov
clc
in
adc
insb
fwait
xchg
das
popf
cmp
clc
aam
movsl
lock
mov
jmp
sub
cmp
mov
addr16
pop
and
test
jl
jp
stos
jg
inc
les
cltd
dec
or
xchg
jnp
xchg
jecxz
xor
jne
scas
lret
mov
lods
sbb
ja
jne
cmp
xor
cltd
push
lods
cmp
sbb
je
cld
leave
mov
shll
jge
out
xor
adc
clc
jb
or
jg
xchg
insl
xor
jne
inc
addr16
jo
push
in
cwtl
sbb
sub
mov
dec
jae
out
ret
rorb
push
ficoml
sbb
pop
pop
cli
sarb
lret
sub
xor
mov
movsb
in
inc
sbbb
sub
leave
mov
add
xchg
lahf
adc
cltd
or
test
out
inc
push
lret
jns
imulb
cmpsb
ret
cmpsb
push
int
jp
mov
cmpsb
mov
cltd
and
imul
sti
xchg
jb
out
popf
and
sub
mov
shll
nop
repz
sarb
arpl
push
stos
shlb
mov
mov
sbb
or
inc
ficomps
in
cmc
adc
jge
dec
sbbb
inc
inc
enter
pushf
rolb
inc
movsb
xchg
inc
sbb
sbb
or
fs
fwait
ljmp
cmp
cli
icebp
dec
scas
mov
mov
aad
in
mov
pushl
mov
push
lahf
xchg
mov
dec
pop
xor
xchg
gs
in
lds
pop
jl
add
je
xchg
lea
scas
or
lret
add
jnp
lret
jl
lock
mov
add
adcl
call
fadds
out
movsb
or
sbb
mov
out
jo
clc
adc
cwtl
inc
sti
cltd
arpl
ret
aaa
insb
pop
shl
dec
std
test
pop
pop
xchg
leave
loope
cmp
and
add
loope
mov
mov
jl
sub
iret
jmp
dec
lods
xlat
mov
int3
push
out
push
and
cwtl
repz
cmpb
cmpsl
cltd
xchg
pop
mov
sbb
xchg
outsb
mov
cmp
pop
sarb
dec
push
mulb
rcrl
xchg
xchg
popf
nop
loopne
test
jle
pop
sbbb
inc
out
push
pusha
in
add
test
xchg
fcomps
fwait
lret
sbb
pushf
movsl
pop
cld
dec
mov
movsl
add
xchg
dec
mov
outsb
jg
shrb
pop
jl
fs
jns
sahf
sbb
pop
mov
imul
shrb
adcl
fs
neg
dec
push
repnz
inc
out
lahf
mov
fdivrs
inc
xabort
daa
cmpsb
push
cmp
clc
gs
cltd
js
hlt
nop
jae
cmpl
adc
call
ret
shrb
mov
mov
mov
inc
into
xor
lea
pop
aam
es
push
ret
out
mov
and
les
daa
lcall
mov
fidivs
adc
daa
mov
gs
mov
scas
adc
fs
stos
mov
daa
xchg
testb
jae
nop
cli
roll
clc
js
bound
in
fwait
or
sbb
loopne
mov
mov
test
dec
in
and
adc
subb
je
aaa
push
pop
dec
in
lds
repnz
or
push
loope
xor
jmp
shl
adc
data16
add
gs
pop
call
mov
or
test
jae
jnp,pn
call
std
std
pop
orl
or
mov
sti
push
je
aas
push
jle
inc
lock
negb
fwait
pop
jle
aaa
sbb
outsl
imul
push
jne
lcall
mov
sbb
xlat
push
lret
pushf
test
and
push
xchg
inc
mov
lcall
mov
cwtl
imul
push
loopne
stc
mov
imul
das
out
jb
shlb
incl
cmp
pushf
das
cli
shlb
jb
aas
mov
mov
rolb
scas
popa
and
sar
test
orb
movsl
in
mov
mov
jge
jp
cmc
and
icebp
xchg
cmp
popf
jecxz
cmp
pop
sbb
pop
jecxz
enter
jge
std
pop
cmp
pop
pop
cltd
pushf
cmp
mov
std
inc
and
jo
dec
sub
inc
mov
les
sti
cwtl
dec
mov
inc
js
mov
adc
jnp
push
daa
mov
mov
push
push
sub
out
xchg
inc
dec
mov
push
sahf
and
or
push
inc
mov
cmp
test
gs
adc
pop
pop
rol
dec
adc
fldl
gs
jns
sbb
notb
mov
adc
adcb
push
pop
call
lds
add
dec
mov
xchg
cmpsl
mov
mov
mov
add
lret
cmp
sub
inc
jne
mov
stc
mov
xchg
lea
inc
adc
aas
out
mov
sub
inc
mov
push
inc
icebp
fwait
mov
je
xchg
xlat
fs
sub
mov
pop
insb
fwait
ss
es
pop
push
mov
jge
mov
dec
add
and
xor
icebp
jo
mov
sbbl
addl
addr16
or
cwtl
mov
sub
push
push
repz
mov
xor
fucomi
mov
push
gs
mov
mov
xor
outsb
sbb
pop
ljmp
repnz
mov
rclb
shll
cmpl
cmp
add
pop
dec
call
in
adc
or
insl
call
pop
push
popa
fmul
xor
cmp
sub
imul
add
mov
sbb
aas
mov
mov
mov
jns
insl
enter
push
mov
xchg
fsubl
push
ja
data16
inc
gs
lcall
ljmp
das
out
stos
test
jmp
pop
das
mov
addl
mov
inc
xchg
insb
push
int
stos
stc
xor
int
fstp
cmc
fldenv
cmp
xchg
scas
ja
adc
bound
mov
xchg
sub
mov
cmp
add
rcll
test
lret
icebp
mov
call
and
test
jecxz
es
mov
scas
mov
and
dec
pop
sbb
mov
or
push
xchg
push
push
push
xchg
bound
lcall
cmp
mov
push
push
sbb
out
fs
ja
fisubs
das
or
fs
push
cmp
aas
jl
sub
xchg
inc
std
popa
push
ds
out
mov
or
mov
fsubrs
cmp
sbb
loop
xor
mov
in
push
ds
push
cmp
addr16
jo
xchg
add
or
jle
mov
out
fidivrs
cmp
nop
pop
cmp
mov
ljmp
jmp
imul
lcall
loopne
jp
or
fidivrs
in
push
fnsave
sahf
pop
pop
xor
insb
jg
test
push
and
pop
cmp
loop
push
sbb
outsl
pop
jno
cmp
fmul
fcoml
loop
jno
xor
and
jl
cmc
mov
xor
icebp
xchg
testl
and
mov
pushf
shlb
mov
lcall
mov
pop
aam
jno
sahf
outsl
popf
add
dec
mov
pushf
lahf
fistl
test
jge
movsl
inc
sub
jno
std
pop
rorb
mov
pusha
movsb
adc
xchg
jp
sbb
iret
adc
mov
mov
icebp
sti
rcr
sub
mov
sbb
faddl
mov
aas
scas
jl
mov
clc
jnp
inc
fisubl
out
lret
inc
xchg
xchg
pslld
sbbl
inc
dec
lcall
popf
cmp
add
jnp
push
jnp
adc
cmp
sbb
cmpb
leave
notl
out
mov
std
jecxz
jl
pop
push
mov
jge
xor
outsb
mov
jmp
add
jge
xchg
adc
addr16
push
mov
xor
mov
lods
and
imul
lcall
call
mov
test
les
push
xor
adc
mov
jne
xor
mov
cmpb
cmp
mov
sbb
sub
pop
or
int3
fistpll
jbe
imul
into
fstl
xchg
inc
push
lret
nop
pop
lahf
pushf
rorb
jnp
xchg
movsb
pop
int
xchg
enter
mov
jns
movsb
push
loop
xor
lock
jns
ds
shlb
cmc
sub
inc
ds
ja
jl
sti
ja
lods
aaa
repz
mov
inc
shr
cmp
fisttpll
push
xchg
roll
jns
push
jno
shll
xchg
mov
xchg
push
sub
xor
mov
lcall
push
lea
dec
or
mov
or
addr16
test
sbb
cmpsl
mov
mov
les
insl
fistpll
adc
sub
popf
push
push
test
fldenv
mov
jl
cld
cld
and
mov
xlat
adc
jecxz
mov
pop
pop
rorl
jns
mov
fs
lret
in
loope
xchg
push
mov
lods
jno
clc
inc
sti
mov
fisubrs
adc
xlat
imul
sub
fcmovu
outsl
pop
aaa
fistl
inc
xor
xchg
xchg
cwtl
fldcw
mov
je
sub
dec
cmpb
std
insl
nop
xchg
lock
mov
add
stos
in
xor
push
pop
std
mov
imul
and
mov
sub
sub
dec
sub
scas
imul
daa
daa
sbb
lds
rcr
jg
jmp
negb
cltd
test
mov
je
outsl
ror
push
pop
cmpsl
test
ds
jns
loope
add
jno
aaa
cwtl
bound
push
ds
add
test
in
dec
dec
or
loop
add
cli
shrb
div
pop
jne
inc
jne
adc
aam
push
jne
test
mov
outsb
imul
jge
add
pop
sbb
cmc
dec
mov
add
push
clc
dec
cld
jl
sub
jae
jns
xor
lods
sarb
outsb
into
pop
loop,pn
add
inc
or
dec
out
push
push
nop
fldt
jnp,pt
cmpsb
rcrb
jne
test
aaa
or
inc
cwtl
adc
out
pop
mov
sbbl
push
mov
push
hlt
imulb
pop
movsl
fnsave
scas
push
fisubrs
push
std
inc
mov
xlat
sub
push
dec
adc
mov
xor
cmc
cwtl
xlat
aaa
cmc
xchg
aas
xchg
add
jno
mull
xchg
xor
fiaddl
mov
and
in
stc
push
aad
fcoms
lret
cmp
push
out
push
sbbl
call
cmp
aaa
cli
das
insb
movsb
cmp
outsl
cli
jae
ret
and
movsl
mov
dec
pop
inc
or
mov
or
into
lcall
cmp
pop
jne
or
pop
pop
nop
loopne
stos
mov
fidivs
add
inc
loope
repnz
jp
xchg
jle
add
mov
mov
daa
sbb
fwait
sbb
mov
call
leave
xlat
xor
ljmp
mov
push
push
imul
je
sti
clc
push
or
test
inc
stos
lcall
imul
adc
popa
popa
ret
fwait
repz
adc
daa
in
ss
xchg
ss
lret
xchg
inc
clc
jne
jne
sub
lods
int3
sub
inc
inc
fdivs
pop
cld
mov
mov
iret
mov
xor
stos
dec
jmp
lcall
shlb
mov
mov
das
lds
mov
add
in
mov
es
sub
ja
ss
cli
in
cmpsb
fucomip
xchg
hlt
mov
jge
jns
mov
test
adc
lret
fsts
mov
pop
jg
cmp
sarb
dec
push
fiaddl
mov
push
aam
shlb
test
loop
cmp
push
cmovle
inc
fsubrs
push
xchg
fs
icebp
push
sbb
decl
add
pop
or
and
cli
xor
dec
pop
out
and
mov
jg,pt
call
cmpsb
and
movsb
insb
std
push
sbb
push
movsb
jecxz
testb
push
xchg
xchg
sarl
jg
inc
inc
sbb
xchg
imul
fsubr
fwait
mov
xor
push
jmp
loop
std
dec
scas
filds
adc
sbb
adc
popf
ret
stos
lret
mov
mov
jmp
rolb
inc
mov
test
and
sbb
add
jge
add
add
dec
mov
push
jg
push
cmp
scas
aad
cmpb
mov
push
jo
or
shrb
stos
and
push
xor
in
aam
stos
mov
int3
gs
mov
xchg
in
lock
jae
sbb
xorl
das
cmc
roll
addr16
sbb
icebp
cmp
sub
arpl
xchg
aas
sub
jno
pushf
das
mov
popf
dec
pop
arpl
cltd
inc
dec
movsl
outsb
test
and
scas
xor
movsb
add
adc
sbb
cmp
lods
pop
dec
mov
call
ss
jp
mov
add
outsl
mov
cmp
arpl
std
dec
out
jno
in
jne
adc
pop
sub
sarb
cmp
aas
in
mov
mov
mov
arpl
rol
jnp
push
rcrb
jnp
enter
dec
and
mov
sub
pop
mov
jmp
or
aas
jle
pop
adc
test
add
lahf
in
sub
pusha
pop
or
fdivs
pop
popf
rcll
pop
icebp
mov
jbe
dec
jle
sub
pop
lods
sub
dec
jnp
mov
xorl
push
stos
roll
popf
and
xor
xchg
int
add
mov
mov
dec
and
or
in
sub
test
test
xor
mov
fldt
aas
add
inc
inc
ds
jae
cmc
xchg
add
pop
jmp
cmc
ror
leave
mov
jl
flds
fistl
movsb
xchg
shrb
inc
push
ucomiss
adc
mov
xchg
xlat
sub
cmpsl
out
sbb
clc
loop
lds
xchg
fcmovb
scas
inc
dec
xchg
mov
cs
stos
popa
jb
mov
mov
rcrb
push
mov
pop
rcll
fcomip
or
shlb
scas
gs
pop
inc
jg
mov
adc
jo
inc
sbb
es
imul
add
dec
push
mov
sub
nop
mov
jnp
xor
sub
test
out
fcompl
mov
loopne
rep
cmp
mov
pop
mov
das
add
mov
inc
pop
popa
mov
mov
rclb
cmp
cmp
adc
push
nop
cmpsb
or
stc
cmpsb
xchg
sti
pop
cltd
ja
loopne
data16
dec
jns
push
add
sbb
jbe
cmpsb
ss
push
mov
adc
push
inc
std
xor
adc
dec
cmp
xchg
leave
mov
imul
or
ret
sahf
sti
aad
push
addb
mov
aaa
xchg
lea
fimuls
insl
push
jbe
xchg
jle
adc
dec
push
test
sti
cmc
gs
pop
movsl
ficoml
insb
xor
imul
xor
mov
push
dec
stos
sub
cmp
mulb
push
jae
inc
lock
sbb
int3
cwtl
mov
jl
or
lods
cmp
mov
movsl
add
adc
sub
mov
enter
adcl
stc
mov
inc
pushl
enter
dec
add
sar
mov
gs
es
mov
push
sub
lods
cmc
dec
fcomp
insl
push
cltd
enter
stos
pop
mov
mov
pmaxsw
into
test
int
inc
inc
mov
push
xor
xor
lret
outsb
jo
in
push
movsb
fisubs
xor
movsl
jp
popf
lret
icebp
xor
daa
mov
or
aam
pop
adcb
inc
sub
imul
adc
insb
mov
out
push
insl
in
inc
dec
rcll
jno
scas
aam
add
lret
xchg
int3
or
stos
xor
cltd
adc
testb
or
jae
ljmp
xchg
add
jb
lods
xor
jnp
sub
cmp
inc
rcl
std
sbb
and
cmp
jns
and
push
jge
pop
shl
adc
fisttps
mov
push
inc
inc
add
mov
jge
push
sti
cmp
aaa
mov
sbb
in
or
xorl
pop
adc
out
xchg
scas
cmpl
shll
shll
aaa
adc
dec
mov
lea
xor
jp
cmpsl
cmp
loope
das
in
ror
inc
iret
add
shll
inc
push
add
sbb
dec
push
pushf
shll
movsb
hlt
aam
xor
mov
inc
leave
push
lock
cs
jl
fs
scas
ds
jmp
mov
rcrb
imul
adc
sub
repnz
loope
adc
xchg
pop
mov
mov
lahf
jp
movsl
add
mov
lret
cs
lret
lds
pop
ss
xor
fnsave
bound
popa
out
pop
shll
mov
call
and
mov
fimull
jmp
ds
and
pop
pop
cs
in
cmc
int3
xchg
mov
out
xlat
inc
add
push
add
pop
mov
mov
mov
xor
lret
add
pop
jl
outsb
test
imul
pop
mov
xchg
hlt
jmp
adc
ficoml
cmp
add
mov
sahf
push
mov
loope
sbb
loop
and
lret
into
fstpt
inc
mov
mov
mov
or
and
shll
hlt
xchg
mov
test
lcall
mov
adc
fwait
test
out
push
cwtl
inc
dec
jns
dec
pop
adc
dec
sub
leave
ds
mov
inc
xchg
notl
add
push
and
loope
add
or
in
stos
or
inc
add
jg
cmpl
inc
iret
out
dec
pushf
mov
jb
adc
and
sbb
xor
mov
and
mov
cmc
jne
daa
inc
add
stos
subl
bound
inc
sbb
decb
add
aam
lret
inc
lret
into
imul
cwtl
and
dec
inc
arpl
push
xor
dec
pop
jnp
imul
xchg
sub
inc
sbb
fs
jne
imul
mov
add
andb
call
icebp
outsl
jno
rcll
cmpsb
add
outsl
cwtl
cld
mov
mov
int3
or
out
pop
add
pop
decb
mov
xchg
jle
aad
in
add
arpl
rcrl
pop
fistpl
divl
jmp
xor
ja
test
mov
popa
ret
aas
jb
in
inc
loopne
loop
push
sarb
int3
ja
clc
ret
ja
dec
add
or
xor
inc
xchg
rcll
mov
jecxz
orl
lret
push
mov
adc
dec
mov
mov
and
dec
int3
xchg
cld
mov
leave
add
inc
test
int3
mov
fdivs
mov
out
sahf
adcb
call
popa
dec
xor
test
and
stos
inc
pusha
adcl
fstpt
jp
js
dec
jo
and
imul
mul
outsb
pushl
aas
loope
jb
xchg
pusha
rclb
rcrb
jp
pushf
imul
xchg
push
push
mov
stc
scas
cmpb
in
gs
sbb
dec
loope
sbb
add
iret
mov
mov
or
lock
pop
lret
pop
jecxz
rolb
push
push
sbb
mov
jbe
adc
popf
iret
or
cmp
sbb
fcomp
lds
fbld
ja
pop
pushf
inc
nop
aaa
ja
enter
sub
ret
aam
mov
pop
push
inc
inc
ja
rcr
cmp
repnz
dec
push
repz
dec
inc
in
adc
imul
js
add
lahf
jle
aad
xchg
hlt
sbb
mov
mov
enter
sbb
push
or
stc
pop
jne
mov
dec
test
sti
add
pop
incl
and
jle
fcompl
push
add
outsb
push
add
adc
sti
mov
mov
xor
imul
outsb
daa
cld
ljmp
arpl
pop
data16
mov
repz
pop
sbb
inc
les
call
lret
lcall
ja
mov
pop
movsb
ret
jl
lret
cmp
mov
movsl
cmpsl
xchg
jnp
rcrl
jb
mov
xchg
lods
sbb
cmp
jno
je
ret
pushf
xchg
pop
pop
adc
outsl
ljmp
repz
and
mov
dec
cmp
xchg
push
dec
aas
nop
in
insb
jnp
sub
cmp
movsb
dec
dec
cmp
cmova
and
lds
insb
mov
add
insl
mov
int3
mov
jmp
adc
xor
fcomps
pop
sbb
gs
jns
mov
test
repnz
pop
inc
mov
insl
jecxz
add
into
sub
in
push
mov
jae
sub
mov
test
pshufw
mov
loope
push
xchg
test
xchg
xor
in
xor
mov
jmp
aas
pop
add
push
lds
cmp
fdivp
cmp
ja
ds
push
fcoml
cmp
sbb
subl
jmp
jp
addb
outsb
cmp
mov
mov
enter
pop
pusha
movsb
roll
pmaxsw
xchg
test
sub
shlb
push
imul
and
fsubrl
int
movsb
stos
fstps
mov
in
mov
scas
mov
fdivr
lock
outsl
jb
xor
popa
jmp
xor
pop
adc
xchg
notl
pop
ljmp
shll
daa
add
push
addr16
mov
sub
les
pop
fisttps
js
movsb
and
sti
stos
lret
push
fists
out
cltd
daa
xorl
lock
jmp
add
rcl
sub
stos
cmpsl
popa
pop
pop
mov
mov
mov
and
jns
subl
enter
mov
xchg
mov
jle
dec
insb
mov
add
in
jle
fmuls
mov
lcall
jecxz
push
jnp
lea
jnp
pop
mov
fsts
pop
xor
push
enter
rolb
inc
in
sub
dec
adc
ret
mov
xor
pop
testb
sbb
out
rorb
xlat
or
imulb
cmpsl
mov
loop
push
cs
push
mov
popf
push
mov
rcll
cmpsl
mov
jb
jl
loopne
cmp
mov
sub
xchg
gs
test
sub
jnp
xchg
pusha
das
and
leave
scas
mov
mov
ret
lea
xchg
cmp
imul
dec
and
fnstsw
mov
pop
xchg
xor
xchg
mov
or
out
sbb
cmp
std
sub
xor
rorl
add
or
mov
inc
adc
and
inc
adc
insb
mov
adc
cmp
ficoms
push
add
xchg
adc
pop
cmp
cltd
cmp
negb
iret
cmp
lret
dec
push
es
or
cmp
mov
cltd
mov
std
bound
pusha
into
xchg
jne
xlat
inc
aas
xchg
int3
or
shrl
jno
aam
cmpl
inc
fwait
ljmp
mov
call
pop
push
clc
data16
add
adc
int
inc
dec
adc
shrb
pusha
out
xor
fsubr
popa
jne
fsub
xor
and
inc
js
call
jge
movq
into
lcall
jmp
loopne
add
mov
mov
fldpi
fiaddl
out
lods
dec
shrl
sbb
fidivrs
and
xor
mov
cmpsl
arpl
xchg
pop
xor
push
inc
mov
cli
push
fcomip
loope
icebp
int
cli
sbb
mov
xor
movsb
push
dec
or
cli
icebp
movsl
pusha
pop
inc
cmp
pushl
mov
push
mov
lcall
xor
xor
cwtl
aaa
or
sub
lods
mov
xor
iret
push
push
xchg
lret
pop
cmp
cmpl
fcmovu
aas
out
dec
pop
cmp
andl
mov
dec
roll
add
add
xor
mov
roll
xchg
sbb
cmp
xchg
in
test
cmp
xchg
jns
cmp
xlat
xchg
sahf
mov
xor
xor
dec
jp
jmp
repnz
and
arpl
cwtl
lret
pop
adc
push
adc
xlat
lcall
add
cmp
mov
adc
daa
sbb
into
add
sbb
jl
xchg
and
dec
sbb
sbb
sub
xorl
loopne
mov
je
jnp
jae
cmp
pop
cltd
adc
in
push
lds
movsb
and
mov
dec
pop
arpl
mov
mov
mov
nop
scas
sbb
jle
shlb
pop
pop
xor
xlat
outsb
movb
movsb
dec
les
push
pop
scas
add
push
cmpsl
xchg
test
mov
enter
lahf
jo
in
test
jg
adc
adcb
xor
ljmp
xor
mov
pusha
adc
jl
add
ja
insb
xchg
pop
add
std
sbb
adc
mov
jns
push
sbb
test
sub
popa
ds
insb
cmp
or
pop
or
sub
icebp
mov
aas
insl
and
jnp
or
popf
pop
sub
fwait
dec
add
push
mov
add
pushf
sub
fisubrs
repnz
mov
lods
stos
adc
mov
xchg
inc
add
rcll
jl
cmp
clc
jo
ret
pop
mov
cli
mov
cmp
and
arpl
repnz
add
and
inc
jle
jns
adc
std
lods
fdivr
cmpsl
fdivp
sub
leave
in
cmp
and
push
pushf
jp
xor
ret
mov
stos
add
xchg
mov
sub
mov
cmp
cmpsl
jb
xchg
and
scas
adc
pmulhuw
dec
cmp
sbb
in
xor
pop
push
aas
push
add
shll
jmp
icebp
mov
sub
ds
in
sub
mov
xchg
pop
negl
mov
push
fcmovb
jge
les
mov
lea
push
jne
dec
ss
mov
ljmp
push
daa
ljmp
sub
sub
fs
pop
pop
arpl
jb,pt
dec
mov
ret
repnz
xchg
aas
mov
cmp
sub
addr16
inc
xchg
stos
inc
outsb
sti
mov
xor
mov
sarb
xchg
imul
cwtl
xor
imul
inc
jl
dec
xchg
fldl
in
in
xorl
pop
pop
add
pop
pop
sub
push
xchg
xor
xor
sub
test
mov
push
add
mov
mov
sub
cltd
jge
cmp
test
rorb
inc
ds
je
das
dec
jecxz
adc
sbb
mov
jmp
sub
in
outsb
out
jb
xorb
mov
arpl
shrb
enter
cmpl
xlat
and
add
inc
xor
pop
fistpl
repnz
stc
and
aad
inc
dec
lret
adc
wrmsr
pop
scas
shl
scas
roll
mov
fsubrp
fucomip
fildl
cmpsb
scas
sahf
dec
rcrb
cmp
repnz
cmpsb
shrb
pop
mov
cltd
out
add
xlat
xchg
mov
cmp
pop
gs
sti
addl
add
push
cli
push
adc
int
lret
into
jne
pop
test
jp
push
ja
leave
es
lcall
xchg
sbb
pop
mov
mov
and
repnz
jnp
stos
hlt
and
or
add
sbb
mov
xchg
or
pop
jbe
dec
or
pop
aad
inc
das
push
insb
fs
fs
loopne
xchg
push
mov
mov
out
insl
arpl
call
cltd
pop
mov
or
cltd
imul
das
movsl
into
dec
inc
mov
scas
aaa
mov
xor
loopne
xchg
iret
aaa
fs
xor
sub
adc
out
idivb
aas
xchg
fdivs
jl
and
adc
stc
int
and
push
pusha
nop
imulb
shlb
iret
or
popl
and
or
inc
and
inc
hlt
dec
cli
ficoms
mov
testl
ds
adc
sub
inc
add
insl
push
scas
pushf
dec
jge
or
add
das
lds
insb
cmpsl
or
mov
mov
mov
movsb
ljmp
mov
ljmp
cltd
cmc
add
rcrl
mov
call
mov
es
and
stc
pop
inc
or
xor
push
jnp
push
sbb
das
ret
fldt
mov
cmpl
xchg
dec
jb
sub
push
iret
push
imul
popf
ljmp
aaa
setae
pop
sbb
cli
pusha
fisubrl
add
in
push
insb
out
push
js
or
sub
test
bound
shrb
dec
xor
or
or
xchg
pop
mov
mov
nop
inc
mov
mov
aad
add
call
inc
cltd
jae
insb
mov
push
mov
sahf
mov
pop
sti
test
dec
in
scas
into
imulb
sbb
push
roll
or
lods
cmpsb
jb
xchg
xor
mov
into
sub
inc
jmp
outsl
push
xlat
push
adc
loop
enter
add
adc
ret
mov
and
mov
add
sub
bound
adc
dec
ret
data16
out
fisttpll
add
push
aas
jge
leave
dec
cmp
dec
loop
mov
das
push
movsl
data16
jne
incl
int
js
pop
loopne
jl
pop
cli
cli
aaa
mov
and
xchg
xchg
push
mov
lahf
arpl
and
test
test
stos
fistps
ret
xchg
ss
push
add
psrad
mov
imul
add
mov
fidivl
dec
pop
out
call
fidivs
enter
sbb
pop
movsb
hlt
pusha
pop
sub
xor
or
loopne
and
shl
das
xchg
icebp
jno
jmp
sub
sar
xor
scas
or
popl
mov
sbbl
int
xchg
movl
popf
pop
xchg
ret
shrl
notb
push
mov
cmp
lret
or
and
clc
call
sub
mov
out
ljmp
and
sbb
push
in
mov
jge
push
gs
push
sub
lret
mov
mov
cmp
dec
pop
inc
xchg
xchg
adc
mov
inc
lcall
filds
xchg
and
pop
inc
addr16
xchg
mov
loopne
cmp
lods
mov
dec
push
fcmove
test
popf
sub
push
xchg
inc
adc
mov
loope
and
add
jl
lret
push
stos
aas
shrb
js
cld
pop
add
cmc
test
fisubs
mov
mov
mov
and
cli
rcrl
lahf
xrelease
jp
das
dec
mov
in
lock
cmp
pusha
fs
add
mov
adcl
mov
mov
sub
maskmovq
divl
pop
and
int
cmp
pop
cs
testl
inc
push
dec
mov
fisttpl
sub
out
movsb
xchg
jb
push
shrb
xchg
adc
dec
pop
lret
dec
xor
mov
test
xchg
sbb
fdiv
rcrb
inc
cmp
rolb
sahf
popf
mov
mov
cmpxchg
pop
and
fadds
into
es
push
fidivl
inc
roll
test
mov
scas
pop
mov
fmull
mov
test
sub
dec
orl
in
adc
mov
jp
or
sub
lds
mov
sbb
dec
jb
insb
gs
mov
in
lods
sbb
dec
iret
sbb
rolb
jnp
jecxz
in
pop
idiv
push
and
or
push
inc
cld
dec
cli
mov
int3
movsb
and
lea
test
xlat
ja
cmp
mov
fwait
adc
inc
sbb
push
popa
dec
dec
dec
lds
and
mov
dec
insb
ds
dec
cmp
push
inc
sub
insb
add
clc
repnz
scas
out
movsl
mov
rclb
lret
or
outsb
pop
repz
and
aam
out
mov
stos
scas
aas
imul
jle
adcl
jne
adc
jmp
mov
mov
jp
pushf
inc
mov
sub
adc
pusha
fs
push
sbb
jg
cmp
jecxz
insb
sub
push
jmp
mov
push
mov
filds
sbb
shll
stos
dec
push
fimull
cld
mov
add
repnz
xchg
sbb
cs
add
mul
fsubrs
push
cli
mov
inc
or
pushf
mov
pop
xor
cwtl
adcb
cli
adc
push
loope
xchg
xchg
fcoms
add
outsb
cmp
fsubp
cs
repnz
xor
test
in
or
or
xchg
fdivs
dec
push
push
xchg
mov
xor
subb
xor
pop
mov
sub
idivl
sbb
xchg
addr16
ja
fbld
mov
fstp
xchg
clc
inc
xor
jno
jbe
repnz
addr16
and
ret
les
push
add
push
jp
xchg
pop
mov
mov
ficoml
or
and
sti
sub
jns
mov
jecxz
push
push
inc
dec
bound
sub
fwait
pop
pop
and
aam
mov
jl
vpermilpd
and
jb
subl
mov
jae
cmp
pop
add
cmp
js
pushf
popf
aam
jp
sbb
add
aas
fwait
ret
test
add
dec
sub
out
cmp
mov
fisttps
jae
sub
mov
out
xchg
sub
in
push
aas
add
and
jb
mov
inc
cli
push
movsb
push
mov
stos
jae
aaa
scas
xor
xchg
lds
push
outsb
rorl
xchg
and
jp
pop
inc
add
or
das
add
mov
inc
xchg
add
cmp
inc
xchg
fbstp
push
or
icebp
test
jne
mov
arpl
jge
jmp
lods
gs
pop
adc
loope
add
mov
pop
xor
fidivrs
movl
shr
adc
in
push
mov
xchg
fdivrl
pushf
negb
ljmp
push
insw
sbb
ja
fs
mov
lods
cltd
xchg
mov
insb
lahf
es
xchg
iret
pop
in
pop
mov
icebp
aaa
cmp
shl
and
fstps
inc
shr
jg
xor
push
and
addl
rclb
dec
out
loopne
ret
inc
arpl
stos
sbb
sub
rclb
cmp
notb
sbb
sbb
int3
in
out
dec
ja
sahf
sub
icebp
add
shr
dec
leave
imul
jae
mov
insl
adc
rorl
js
adc
incl
xchg
les
popl
lret
pushf
jl
push
pop
fdivr
loopne
fadds
setb
jl
sbb
rorl
push
fdivr
scas
jno
xchg
dec
adcb
fucomip
mov
cmp
in
jl
and
pop
lret
sub
lea
adc
sub
ljmp
loop
inc
scas
sbb
sti
jbe
loop
push
sarb
addr16
ljmp
negl
pop
sar
jmp
aas
pop
into
and
xor
inc
xchg
shll
cwtl
or
in
ljmp
xchg
hlt
rorb
dec
stos
ljmp
jp
rorb
jle
dec
push
inc
dec
dec
scas
inc
into
xchg
ss
sti
out
fisttpl
jb
loop
and
enter
mov
adc
xchg
jns
lahf
adc
repz
in
pop
jl
or
cmp
push
in
sbb
jbe
dec
sbb
xor
sti
addb
stos
lea
cmp
cli
cmp
sbb
cli
xchg
or
call
push
dec
xor
push
adc
roll
inc
xchg
jne
mov
fcoml
mov
arpl
push
or
and
jl
fcoms
add
stc
cmp
xor
sbb
insb
je
pop
jb
xor
mov
int
jg
aam
xchg
lcall
mov
mov
mov
jbe
lret
ss
xor
jnp
lcall
pop
dec
dec
jl
mov
daa
jns
mov
mov
test
push
cs
add
or
repz
dec
inc
mov
pop
mov
jne
push
push
mov
ljmp
xchg
cmp
movsl
mov
cmp
mov
add
jne
xchg
les
mov
cmpsl
sbb
mov
in
js
jae
mov
jl
push
pop
sub
std
or
mov
push
push
inc
clc
xchg
mov
inc
mov
and
cli
pusha
clc
lret
in
inc
js
add
adc
push
mov
repnz
lahf
sahf
pop
jnp
scas
mov
dec
rolb
xchg
dec
push
push
shlb
ret
incl
in
jno
mov
mov
stos
xchg
xchg
push
adcb
pop
cmc
repnz
iret
daa
inc
jne
xchg
or
pop
stos
orb
into
push
pop
shll
push
xor
or
negl
aad
xchg
push
adc
inc
repz
andl
jle
lds
pop
nop
push
pop
jnp
mov
mov
in
daa
mov
or
xor
sub
ljmp
and
mov
leave
xchg
adcl
mov
mov
xlat
shrb
jne
push
push
insb
leave
push
lds
pop
fistps
cmp
sbb
xchg
lock
mov
fsubr
jb
jne
jecxz
dec
repz
pop
loop
ficoms
or
test
add
and
js
sub
add
pop
add
sti
fistpll
jge
jo
mov
mov
gs
xchg
add
cli
loop
inc
mov
inc
dec
lds
fmuls
test
insb
jl
xchg
adc
mov
movsl
lock
dec
test
inc
rcrb
imul
pop
insb
pop
insb
jecxz
add
mov
icebp
sbb
mov
ljmp
cmp
movsb
std
pop
icebp
cmpsl
das
test
rcrl
adc
xor
mov
dec
int3
xchg
bound
lods
orl
xor
sbb
lcall
jno
clc
call
mov
inc
push
mov
int3
aad
or
lods
and
sub
cli
pop
push
fsubrp
cs
insb
sub
sbb
cli
push
iret
pusha
leave
push
in
push
pop
adc
js
je
aam
shlb
jno
sbb
sub
cli
cmp
popa
pop
stc
mov
push
push
fsubs
loop
loop
cmpsl
adc
cltd
in
je
dec
test
repz
data16
mov
push
pop
jns
dec
lods
stc
into
iret
iret
insb
out
scas
xor
push
stos
jae
fcomps
mov
sahf
jns
add
xchg
movsb
out
mov
sbb
sub
xchg
push
sub
xor
fcoml
pop
xchg
push
xchg
sbb
ds
mov
or
sub
and
cmpsb
mov
pop
gs
jmp
mov
push
cmp
push
test
mov
jae
popl
push
jno
jns
inc
and
popa
insb
jmp
mov
out
outsl
mov
aad
leave
test
push
inc
pop
cmp
sbb
xchg
rcl
sbb
mov
aaa
xchg
adc
xor
cli
imul
adc
cmp
jmp
pop
aas
add
movsl
pop
mov
inc
or
xlat
push
icebp
inc
lret
mov
mov
in
std
fs
fildl
mov
ljmp
pop
mov
cwtl
ds
lahf
das
fwait
iret
lds
std
push
js
je
jg
dec
popf
pop
sbb
push
outsl
loope
xor
xchg
popa
ret
sub
in
in
add
mov
cmpsl
je
jb
jo
fidivl
mov
mov
pop
jo
push
cmp
fnstenv
mov
adc
mov
mov
imul
fs
or
sti
mov
jb
or
ret
sarl
jecxz
and
xchg
cmp
pop
mov
cmpsb
sbb
out
ret
ljmp
jl
mov
cmp
mov
push
jo
in
lods
xchg
cmp
addb
dec
pop
pusha
mov
sahf
rcr
je
test
aam
aad
lods
push
ds
or
mov
xchg
or
and
pop
pop
mov
cli
scas
inc
add
arpl
les
pop
adc
mulb
lods
dec
test
push
sbb
roll
inc
enter
sub
js
sub
inc
out
imul
inc
cs
push
cwtl
jecxz
sub
in
rorl
sbb
clc
pop
neg
sub
out
and
xor
movsl
lcall
movsl
inc
mov
sar
mov
rol
out
or
jo
push
fdivs
fsts
scas
mov
adc
fs
ja
mov
mov
loopne
mov
sub
jle
adc
add
pop
xor
mov
xor
mov
movsl
incb
fs
mov
ja
popa
mov
xchg
dec
enter
std
pop
sub
in
imul
loope
inc
rcrl
lea
jg
adc
je
jmp
icebp
xchg
pop
pop
cmpl
lods
sbbb
loopne
mov
xor
pop
xchg
ret
inc
cli
mov
pusha
outsl
xor
mov
sbb
and
mov
push
out
push
bound
xor
sub
inc
es
xor
test
jg
push
adcl
out
jmp
add
imul
jmp
xor
bound
xor
jecxz,pt
adc
xchg
dec
mov
lcall
into
mov
xor
test
imul
dec
shr
cmpb
fninit
jne
ret
in
inc
sahf
ds
sbb
adc
jae
sbb
cmp
push
ljmp
jp
mov
in
xor
cmp
roll
mov
adcl
icebp
fstpt
lret
or
or
js
mov
xchg
je
daa
mov
bound
mov
dec
xchg
repz
and
out
inc
lods
adc
mov
sbb
sbb
inc
fidivrs
popa
mov
xor
push
bnd
ljmp
sub
movsl
insl
js
les
mov
mov
dec
mov
sub
jae
or
sbb
mov
cmpsl
xchg
shll
loop
jo
ss
cli
cmp
insl
out
loope
movsl
div
push
mov
filds
adc
fmul
aaa
pushf
adc
mov
jle
mov
in
and
icebp
imul
pop
test
fwait
or
xchg
sub
in
xrelease
cwtl
cwtl
les
insl
cmpsb
test
or
mov
nop
sti
iret
jp
movsb
mov
mov
adc
call
popf
jns
and
pop
lods
and
scas
mov
hlt
into
cmc
cmpsb
mov
mov
and
fucom
je
and
inc
sti
in
lock
adc
mov
inc
in
xor
xor
loope
adc
in
ds
add
xchg
movsl
fnstenv
icebp
test
gs
xchg
mov
push
jp
xchg
cmp
vmulps
jb
add
dec
cmc
lds
nop
jge
or
dec
cld
jle
aas
inc
mov
adc
pushf
mov
inc
sbb
out
push
lds
xchg
rorb
add
dec
mov
mov
push
or
sar
jge
adc
repnz
fisttpll
clc
add
jp
stc
inc
inc
mov
bound
push
dec
add
dec
or
sbb
mov
shr
ds
loope
dec
sub
lahf
jno
mov
jecxz
mov
loopne
fs
push
in
cwtl
das
lahf
lcall
subl
and
div
nop
pop
mov
hlt
and
cmp
or
jmp
add
rolb
mov
out
inc
jg
imul
cltd
pop
mov
push
lods
jg
sub
xor
bound
fs
hlt
push
cmp
xchg
test
or
gs
push
and
fidivrs
loop
and
mov
in
mov
add
movsl
mov
lret
js
dec
shrb
mov
stc
stc
xchg
mov
add
loopne
adc
rorb
cs
sub
adc
jmp
in
jg
stos
sub
jecxz
push
lahf
mov
push
adc
movsl
xchg
cmp
mov
movsl
pusha
hlt
or
add
push
cmp
xor
mov
addr16
push
mov
dec
loopne
push
push
stos
mov
je
cwtl
daa
movsl
adc
and
mov
dec
nop
mov
cwtl
shrl
dec
arpl
mov
inc
movsl
fisubrl
xchg
lcall
mov
mov
jns
in
movsl
mov
in
out
clc
sbb
aaa
icebp
add
jmp
mov
test
lahf
cld
push
icebp
outsl
sub
cmp
ljmp
lods
test
jmp
sub
push
mov
xchg
lock
ljmp
ret
arpl
sub
lret
mov
add
cmp
inc
pop
jmp
dec
xor
jne
mov
add
mov
xchg
data16
xchg
jecxz
out
pop
sub
popf
push
mov
aaa
fs
dec
xorl
test
je
stc
das
cmpsl
mov
sub
cmpsb
jne
or
xor
pusha
repnz
pop
jb
fildl
icebp
sbbl
add
lcall
filds
and
out
lret
or
shll
mov
jp
jmp
push
or
jnp
bound
in
lahf
int3
and
pop
ftst
and
mov
mov
inc
stos
outsb
dec
sub
nop
pop
mov
cltd
push
jnp
push
mov
sti
nop
jl
fwait
jg
lea
dec
push
loopne
add
mov
dec
data16
push
cmp
shl
outsb
sbb
xchg
insl
ljmp
dec
sub
rcrb
jl
es
jl
cmpsb
add
aad
mov
fcmovnu
cli
dec
scas
dec
inc
je
sbb
and
scas
pushf
push
stos
pop
dec
xor
cwtl
mov
cltd
mov
insl
mov
call
jge
xor
out
aad
cld
adcl
cmp
outsl
into
test
addl
iret
cmp
sub
dec
fstps
les
fidivrs
cmpsl
xor
cld
fwait
insl
adc
div
fs
pop
add
and
dec
test
fsubrp
inc
cmp
das
mov
pushf
and
sbb
jmp
clc
add
mov
cltd
sbb
dec
mov
jle
mov
imulb
dec
fisubl
push
jns
dec
insb
pushf
incl
sub
iret
mov
jno
jp
sbb
fs
lcall
dec
push
pop
call
sbb
add
sarl
fsubl
loop
rolb
xor
xchg
dec
adc
cmp
out
dec
in
ljmp
xor
mov
lcall
cmp
cmc
sbb
inc
cmp
mov
loopne
and
scas
adc
jnp
pop
dec
or
add
push
sub
cmp
je
int3
sbb
jg
movsl
cmp
sti
and
ljmp
adc
imull
gs
push
xor
sarl
movsl
sub
popa
stos
imul
imul
cmpl
cmp
mov
stos
jle
dec
push
cmp
insl
mov
ret
out
and
clc
mov
mov
jb
pushf
xchg
mov
call
push
test
sbb
mov
test
andb
aas
mov
inc
and
fimuls
pop
out
mov
and
cld
pop
lods
mov
in
mov
cmp
sbbb
jbe
outsl
and
xor
push
adc
push
int
jne
imul
pushf
pop
inc
push
repz
gs
ljmp
cmp
loope
daa
and
xchg
adc
jnp
sbb
repnz
or
cmc
sub
repz
dec
insb
je
pop
push
mov
inc
mov
fucomi
and
hlt
adc
insl
mov
push
xor
fcmovne
mov
xchg
cmpl
and
sar
mov
hlt
xor
addb
fdivrl
push
dec
jmp
shrb
mov
push
inc
xor
and
jnp
mov
and
xlat
stc
repz
add
sbb
pop
adc
andb
test
mov
adc
scas
popa
adc
adc
fcomip
jae
sub
jb
cmpb
loope
sbbb
dec
fwait
inc
enter
ficompl
cmpsl
fdivr
fldt
sbb
jnp
aaa
add
imulb
ret
and
mov
push
clc
lea
jne
lret
sbb
push
inc
sbb
outsl
out
mov
cmpsb
rolb
or
or
out
lret
and
sbb
repz
sub
stos
mov
je
mov
or
cmp
pop
jle
int3
or
jge
push
rcrl
cmp
aas
out
je
icebp
lcall
mov
inc
jle
loopne
test
xchg
pop
sub
leave
shll
aad
jo
sbb
aad
inc
push
mov
xor
icebp
dec
push
call
lcall
and
clc
ret
inc
and
mov
jg
test
test
mov
shld
popf
std
adc
cs
loopne
int
push
jmp
xor
adc
stos
test
fimull
dec
aad
popa
cmpsl
sbb
ja
mov
fdivrs
mov
pop
adcb
cmp
orb
adc
lcall
jmp
repnz
int
scas
lea
enter
add
aad
inc
jp
gs
jns
fisttpl
jl
fdivp
nop
inc
xor
loop
adc
imul
xor
sub
inc
push
inc
sbb
je
add
shll
fimuls
or
inc
stc
xor
xchg
shl
adc
and
jp
js
repz
dec
ss
mov
inc
loope
pop
test
mov
aas
fwait
int
movsb
sbb
inc
bound
add
in
pop
arpl
push
ljmp
mov
pop
mov
mov
pop
pop
nop
xchg
xor
mov
repz
add
jae
push
data16
sbb
dec
dec
add
in
push
push
loopne
ret
bound
inc
or
sub
addr16
add
sbb
xchg
jmp
dec
ss
ja
nop
xchg
cmp
movsb
rcl
cmp
clc
ljmp
mov
test
in
cmpsl
mov
push
jae
mov
fs
jae
daa
test
aaa
push
or
in
xchg
mov
lea
mov
mov
and
sbb
mov
adc
je
add
dec
lret
int
jmp
fadd
int
fisubs
pop
imul
incb
add
in
stos
mov
xchg
and
xor
lahf
fcomip
pop
dec
aaa
lods
jnp
dec
xchg
stos
jmp
sbb
or
clc
stc
aaa
mov
add
pop
sbb
jge
imul
ret
mov
xor
xor
add
pusha
and
jecxz
adcl
pop
push
lods
adc
pop
pop
mov
jmp
hlt
roll
iret
jne
aas
jne
dec
cmpsl
xchg
inc
outsb
pop
adc
lahf
imull
pop
sbbl
lcall
jge
pop
jge
ret
sbb
fsubrl
cmp
adc
add
stos
cmp
jno
outsl
or
mov
or
cmp
aam
adc
push
push
ja
xchg
popw
cmp
inc
or
andb
stos
and
inc
mov
ds
jl
jnp
sub
jae
nop
adc
insl
pop
jle
jns
mov
pop
faddl
xchg
out
cmp
out
inc
push
gs
pop
ds
ja
push
jnp
pushl
pop
aas
rorl
shrb
or
dec
push
mov
add
outsb
dec
mov
sub
sbb
pop
fldpi
inc
cmpsb
mov
clc
ret
mov
mov
jp
cmpsl
and
inc
ljmp
add
fildll
hlt
xor
pusha
push
xor
mov
roll
push
sbb
sub
xchg
cmp
mov
movb
popa
sbb
dec
lahf
dec
xor
pop
fidivrl
sub
xor
and
mov
std
jmp
push
adc
inc
cmpsb
jns
xor
ret
subb
imul
xchg
push
call
inc
fnstcw
mov
mov
add
dec
push
gs
jb
aaa
lea
fisubs
xor
push
jle
xorb
inc
into
aaa
adc
mov
cli
dec
dec
mov
scas
stos
xor
jl
mov
mov
lret
into
insl
xor
mov
xor
inc
int3
mov
pushl
es
mov
push
ss
std
cmp
lcall
lcall
arpl
daa
xchg
push
sub
jge
mov
cltd
enter
xor
pop
loope
mov
out
push
push
arpl
test
inc
adc
mov
mov
ss
xlat
repz
dec
pop
insl
xor
daa
jno
adc
es
dec
ret
aaa
popa
mov
push
pusha
cmp
mov
jecxz
clc
insl
in
xchg
js
div
in
push
pop
xchg
out
dec
mov
aam
lret
out
jo
mov
pop
xor
jle
cmp
push
xor
cmp
sbb
std
repz
mov
lock
dec
and
mov
inc
test
cmpsb
cmp
fmull
sub
mov
shrl
add
push
xor
and
cs
arpl
sbb
dec
test
test
push
icebp
cwtl
icebp
add
xchg
hlt
inc
xchg
mov
je
movsl
dec
fistl
mov
loop
insl
or
mov
xor
sti
mov
in
jo
push
push
movsb
or
cwtl
lahf
ja
mov
inc
iret
call
pop
pusha
scas
stos
imul
xchg
sub
mov
sub
xlat
xor
xchg
mov
and
stos
sbb
rcll
fists
pop
sarb
mov
pop
jnp
push
sti
xchg
pop
sbb
rcrb
mov
cs
xchg
ljmp
fwait
cmp
jnp
int
iret
push
xchg
mov
jns
mov
ja
fwait
insb
pop
xor
jne
lods
jle
or
arpl
sub
inc
add
inc
pop
or
mov
add
add
adc
push
aaa
test
and
mov
push
adc
jge
and
addr16
add
sub
mov
sub
test
pusha
mov
pop
repz
icebp
mov
cmc
lock
mov
or
mov
int
push
lret
add
mov
mov
into
xchg
mov
pop
push
addb
xchg
inc
lcall
das
mov
ret
pusha
shrb
ret
cli
lahf
dec
xor
shlb
nop
out
inc
cld
lds
rorb
jmp
lock
sub
xchg
aas
push
push
mov
icebp
mov
xchg
sub
add
dec
push
mov
sbb
je
in
mov
and
pop
mov
roll
jb
cmpsb
lods
mov
mov
xor
movsb
inc
out
popa
fbstp
shl
sbb
xlat
push
pop
xor
mov
pop
imul
adc
cltd
xor
and
int3
rolb
cmp
push
mov
stc
push
shr
addl
sbb
fst
int
jns
mov
shrl
pop
fwait
pop
scas
mov
sahf
into
or
aas
push
inc
mov
and
loopne
mov
out
lret
add
inc
xor
or
jp
jge
fidivl
std
insl
pop
out
stos
xchg
lds
mov
mov
jo
fsts
jle
pop
sti
lods
dec
aaa
lahf
sub
lods
test
call
outsl
jp
roll
fisttpl
into
dec
fldl
in
xor
xlat
pop
mov
or
mov
or
cmc
xor
mov
xchg
fidivs
rcl
sbb
lea
fwait
mov
jmp
shl
popf
fcompl
pusha
fdivrs
pop
add
or
lods
dec
movsl
cmp
xor
pop
sbb
push
dec
mov
or
mov
das
mov
hlt
scas
std
jno
lahf
and
dec
xchg
lock
xchg
xchg
clc
loop
adc
loop
lret
bound
imul
mov
stos
in
sub
aad
xorl
in
shlb
mov
cmc
inc
mov
cmp
inc
add
sti
scas
mov
mov
xor
mov
add
outsl
pop
xchg
xor
xchg
inc
pop
repz
lds
iret
cmp
ret
mov
xchg
push
or
and
fisttpl
and
test
lock
sti
mov
data16
and
add
jmp
ss
mov
cmpsb
and
mov
sbb
pop
jle
call
sbbb
xchg
rolb
inc
and
jecxz
mov
mov
xchg
stos
out
aaa
test
shlb
sbb
neg
sub
mov
pop
test
int3
aaa
dec
fistps
test
inc
adc
inc
mov
xchg
test
lret
lods
repnz
mov
outsl
fidivrl
push
scas
add
push
scas
loope
popf
icebp
mov
dec
mov
lcall
mov
xchg
stos
mov
pop
fdivrs
or
clc
cmc
aam
jl
insb
lahf
je
cld
pop
xor
divb
call
js
and
cmc
je
call
xchg
jg
in
cli
xchg
cli
jne
out
les
cmp
sub
push
es
leave
js
test
enter
mov
lods
push
sti
imul
fiaddl
stos
mov
xchg
pushl
mov
xchg
fcomps
ja
gs
adc
cli
xchg
mov
cmc
xlat
in
ret
pusha
adc
push
out
aad
lret
mov
mov
inc
cld
mov
sahf
and
sahf
mov
ja
add
popf
and
sarl
dec
mov
pop
add
xor
ljmp
mov
pop
ljmp
pop
loop
js
sbb
mov
loope
mov
mov
sahf
imul
jbe
mov
sahf
lods
inc
cmp
in
in
repz
cmpb
xchg
js
sub
cltd
stos
js
clc
push
push
pop
fs
lea
fisubl
mov
shll
fdivs
mov
mov
push
ficoml
std
out
push
sub
leave
adc
addr16
js
jecxz
pop
mov
cmp
pop
xor
push
push
stc
roll
rcll
fdivs
dec
sub
je
neg
jnp
dec
icebp
outsb
lods
or
popf
jno
mov
mov
insb
movb
ror
int3
fwait
in
add
iret
sbb
enter
shll
aas
aam
cli
sub
repnz
xchg
xor
orl
cmpsb
rcll
loop
mov
cmc
call
mov
mov
jae
and
jmp
mov
sbb
movsl
xor
push
outsl
xor
idivl
sub
jbe
jnp
shll
lods
fisttps
repnz
cmp
in
adc
lahf
add
fsub
out
mov
outsl
cmp
repnz
pop
or
push
out
dec
add
mov
inc
imul
mov
lods
dec
xor
jnp
pop
fldl
adc
cs
in
xchg
mov
js
out
mov
scas
aam
adc
mov
mov
sahf
cltd
xchg
cmp
inc
mov
or
dec
iret
movsl
sbb
filds
daa
leave
dec
pop
cwtl
cwtl
out
mov
sbb
pushl
jne
sahf
fs
ljmp
daa
or
loopne
imul
sbb
cwtl
stc
jns
shlb
mov
push
ret
mov
pop
test
mov
dec
and
or
int3
jmp
cltd
mov
pop
clc
out
sbb
lcall
mov
mov
mov
cld
xchg
mov
int3
mov
int
add
ficomps
xchg
xor
adc
cmp
pushf
sbb
aas
jbe
dec
mov
wrmsr
mov
and
mov
or
xor
stos
jne
lods
ds
inc
adc
mov
fidivrl
je
xchg
mov
xor
hlt
pop
addr16
nop
les
pop
in
loopne
push
lcall
push
inc
add
sub
loopne
mov
cmp
repnz
push
in
pop
pop
outsl
xor
imul
cmpsl
addr16
xor
movsl
pop
adcb
loopne
je
leave
jg
test
xchg
jle
movsb
xchg
fistps
push
in
movsb
addb
cmc
cmpsb
and
sub
mov
xlat
icebp
sbb
stos
jbe
adc
out
repz
or
popf
mov
fdivs
shl
mov
cs
pop
and
ja
and
jmp
fbld
pop
call
jae
fisubrl
adc
pop
popf
dec
xor
ja
loope
mov
mov
mov
sti
dec
push
push
cmc
add
ret
dec
sbb
inc
push
mov
dec
in
jno
cmp
dec
fcomps
sub
mov
and
jge
push
mov
jno
loop
fcoms
add
mov
pop
push
cmp
adc
mov
jnp
or
leave
xchg
addr16
andl
in
pop
lods
sbb
cmp
je
arpl
sbb
sbb
push
stc
push
fs
loop
fstp
fs
nop
loope
insb
xchg
mov
pop
push
mov
inc
jp
insb
lods
xor
mov
cmc
mov
cmpxchg
ret
dec
rorb
clc
jb
lods
cwtl
dec
xchg
fistpll
pop
sahf
subl
shrl
sti
test
pop
imul
xchg
addl
jge
fucomip
dec
push
lock
inc
fdivrp
jns
dec
add
cmp
ss
and
rcll
xchg
sub
xchg
mov
shrb
mov
in
mov
stos
int
aas
mov
stos
jecxz
or
xor
mov
mov
dec
ljmp
dec
and
xchg
imul
clc
xchg
ljmp
sub
cmpsb
mov
xchg
cmp
sub
data16
jecxz
push
xchg
cmp
or
testl
ficoml
mov
sarl
mov
sub
xor
arpl
add
jnp
push
lods
push
addr16
dec
data16
fcmovnu
dec
cmpsb
js
loopne
mov
jb
adc
fstp
mov
cmpsb
mov
test
xchg
sbb
nop
sbb
mov
cltd
imul
ret
adc
icebp
or
mov
lea
mov
ljmp
in
stc
fistpll
mov
test
dec
sar
cs
sub
pop
cmp
inc
popa
leave
repnz
jecxz
and
mov
movl
lock
lea
push
rol
mov
lret
pop
mov
shlb
pop
mov
popf
pusha
cwtl
cmp
mov
cmp
pop
jns
nop
int3
mov
stos
arpl
int3
cmp
adc
mov
adc
sarb
or
in
mov
or
mov
mov
xor
cmp
cmc
cmp
test
subb
sti
xchg
outsb
ret
push
mov
insb
popw
scas
rorb
imul
add
ss
aaa
dec
jo
xchg
pmulhw
repnz
fs
aam
sti
jle
or
dec
inc
stc
sub
sti
divl
cmpb
cwtl
repz
test
stos
cwtl
out
cs
repz
hlt
je
xor
das
xchg
clc
fsubs
pop
iret
push
int3
and
dec
push
pand
pop
push
lret
jg
lods
jge
sbbb
lret
push
out
arpl
mov
test
pop
xchg
imul
xlat
adc
rclb
xchg
lcall
xor
jne
or
inc
adc
stos
fdivl
imulb
jle
jbe
outsb
cwtl
movsb
push
mov
pop
test
mov
add
cld
add
pop
jne
les
in
push
sub
mov
xor
sbb
mov
mov
stc
mov
mov
sbb
shlb
out
loope
hlt
inc
fisubl
mov
xorl
and
mov
mov
aas
enter
push
push
mov
inc
inc
xchg
or
insb
push
push
mov
sti
in
sbb
mov
movsb
adc
outsb
rcrb
xor
push
and
jg
scas
popf
pushf
dec
lea
sbb
mov
popf
out
shrl
dec
fwait
sahf
pusha
xor
mov
int
ja
ret
ss
xchg
pushf
fsub
and
out
mov
dec
sahf
std
loopne
fildll
movsl
add
pop
pop
mov
push
insb
xor
loopne
mov
push
out
cwtl
jecxz
jl
xor
inc
cmp
adc
pushf
inc
xor
out
mov
sahf
xor
mov
jae
jae
jp
xchg
push
mov
lahf
and
mov
lcall
ljmp
add
mov
pmaxsw
in
mov
lods
pop
inc
mov
std
jl
mov
mov
lods
dec
jmp
cmpsb
and
in
lahf
jae
or
pop
fdiv
popf
or
jno
clc
and
je
aam
adc
or
add
xchg
aaa
push
xor
mov
jb
cs
jle
xchg
mov
or
cltd
and
outsb
jb
xchg
cmp
sbb
rorl
les
js
xchg
hlt
loopne
js
dec
incb
arpl
repnz
pop
mov
rcl
int
rorb
sahf
mov
ja
clc
push
push
je
dec
loope
scas
ret
push
mov
inc
mov
cwtl
pop
sbb
aaa
out
sbb
and
cmp
push
xchg
pop
loope
push
pop
or
push
xchg
ljmp
push
or
cld
ljmp
xchg
pop
and
xor
cmp
daa
lea
je
lret
imul
inc
repnz
mov
aas
jbe
inc
sbb
mov
clc
inc
pop
sub
mov
mov
xor
add
pop
bound
fisubs
mov
push
fcoms
or
xor
xchg
push
hlt
mov
jno
lahf
bnd
xchg
xchg
pop
xchg
inc
jmp
and
and
je
push
hlt
out
mov
and
mov
push
in
int
push
not
aas
add
scas
inc
fisubrl
test
cli
mov
ja
cmp
scas
shr
inc
adc
adc
into
out
add
fs
push
jp
or
inc
or
cli
ja
sbb
fdiv
adc
push
popf
inc
lcall
mov
sbb
cmp
cmp
clc
pop
addr16
and
jl
pushf
adc
popf
mov
bnd
sub
fsub
push
lret
out
gs
in
mov
cltd
int
scas
sbb
mov
in
pusha
add
inc
mov
shrl
adc
sbb
movsl
loop
cld
out
sahf
fsub
add
add
lret
pop
adc
mov
loope
push
mov
lret
test
pop
jmp
xchg
ja,pt
int3
jle
sub
ret
sbb
js
pop
iret
jns
mov
fnstcw
jl
in
add
lods
mov
lock
and
les
lods
push
jb
dec
jae
jp
fcomps
dec
stos
pusha
outsb
fildll
pop
mov
dec
into
push
sub
cmp
pop
push
stc
out
pop
stos
shl
sub
xchg
inc
rcrl
shll
repnz
mov
out
lahf
mov
ljmp
cs
jnp
das
pop
scas
sbb
aaa
jle
cmc
mov
testb
fnstcw
jne
std
sbb
and
cmc
lods
sbb
dec
xchg
rorb
mov
dec
iret
aam
cltd
ficompl
sbb
jmp
mov
div
dec
xchg
mov
lods
adc
mov
outsl
adc
jecxz
fdivrp
lcall
jnp
cli
sbb
sub
mov
xlat
cwtl
cmp
mov
jle
shll
inc
cltd
xchg
cmp
fisubrl
dec
test
outsb
jg
adc
lea
pusha
mov
fwait
jmp
loop
loop
add
sbb
mov
cmpsl
addb
and
sbb
push
loop
and
nop
xchg
lahf
in
mov
inc
jnp
js
inc
outsb
frstor
repnz
inc
jmp
adc
stos
imul
jp
inc
ds
pop
data16
mov
dec
cs
adc
cld
dec
xchg
pop
ret
ss
mov
int
jmp
aad
fsubl
int3
in
pusha
and
fidivrs
cwtl
inc
dec
adc
sub
add
push
dec
jge
ret
leave
or
test
out
xlat
mov
loopne
aas
push
xchg
mov
jp
outsl
fisubl
decl
hlt
xor
mov
sbb
fisttps
jnp
adc
int
pop
xchg
adc
lcall
mov
mov
dec
and
arpl
and
adc
xchg
add
jnp
pushf
shlb
aam
inc
and
daa
stos
mov
push
inc
daa
test
mov
pop
sbb
inc
mov
sarb
push
cld
std
mov
in
mov
test
adc
jnp
sub
jo
dec
mov
hlt
test
mov
mov
xor
lock
js
xor
xchg
pop
xor
hlt
loope
dec
mov
in
pop
dec
fnstsw
dec
pop
push
xor
sbb
or
cli
xor
jae
aad
jecxz
ja
imul
imul
stos
jnp
sbb
and
jle
out
mov
add
add
lods
ds
ret
pop
fisubs
push
jge
divl
jbe
push
mov
lret
jo
fldl
xor
addb
pop
mov
xlat
test
jmp
jne
push
ja
mov
xlat
movsb
iret
jmp
mov
adc
fstps
adc
fwait
aaa
les
sbbl
jg
imul
scas
shr
out
aam
push
mov
sbb
mov
push
sarl
in
call
sbb
repnz
mov
ss
xorb
cwtl
adc
aas
jp
mov
dec
daa
mov
iret
shrl
es
shr
rolb
addb
testl
or
outsb
xchg
fidivrs
jecxz
sahf
cmpl
pop
ss
cmpsb
shlb
test
jmp
jmp
add
movb
cs
lods
and
loopne
pop
stos
mov
aad
outsb
inc
inc
stos
aaa
paddusb
or
nop
test
adc
push
or
out
push
push
std
fcompl
arpl
pop
cmp
inc
pop
push
cmp
es
fwait
cmc
das
aam
mov
subb
cltd
mov
std
aam
cs
dec
fs
xchg
ljmp
jle
jbe
loope
cltd
lcall
jl
mov
pop
jne
mov
xlat
jge
std
mov
mov
lahf
xchg
xor
or
or
outsl
and
sbb
in
mov
scas
mov
sbb
push
mov
hlt
into
and
sbb
cmpsl
dec
jmp
addr16
sub
loop
sbb
sbb
idiv
sub
or
mov
ja
fidivl
jnp
jne
dec
rorl
inc
push
fcom
or
jae
inc
out
ljmp
arpl
lds
push
cmp
sub
out
dec
mov
clc
and
inc
xor
daa
jne
adc
andl
xchg
cmpl
cld
cmp
pop
mov
loope
data16
mov
stc
xor
xor
jbe
cmpsl
jecxz
arpl
fsub
or
test
cmp
mov
sbb
lret
sarb
cmp
adc
jo
jmp
sbb
push
stos
or
push
shll
pop
fisubrl
rcr
test
lds
xchg
filds
lret
imul
enter
sub
adc
lods
mov
dec
arpl
lcall
insl
add
jb
xchg
mov
add
lods
push
xor
in
lret
inc
test
mov
and
xor
jbe
fisubl
push
dec
out
jg
shlb
fdiv
dec
dec
inc
shr
fstl
add
ror
adc
ret
push
rorl
mov
out
fwait
sub
xchg
push
pop
mov
orb
das
scas
int3
std
mov
in
ljmp
mov
jnp
mov
push
shlb
pop
jo
cltd
push
stc
dec
push
cwtl
std
scas
inc
cmp
addr16
decb
jae
sbb
add
clc
push
in
gs
loopne
pop
and
cli
ljmp
mov
or
mov
jo
mov
pop
nop
fcoms
push
cmp
xchg
data16
inc
cmp
popa
cli
and
rorb
mov
shrb
adc
cltd
rclb
xor
faddl
jo
lea
cwtl
stc
sbb
pop
mov
mov
cmp
inc
aad
push
xchg
add
lret
push
push
pop
fisubrl
js
lods
jge
in
cltd
movsl
push
sbb
adc
insb
sub
xor
jo
lcall
stc
cmc
pop
inc
cmp
xor
xor
pushf
xor
xor
rclw
adc
stos
sbb
cmp
aad
xchg
movsb
mov
jle
mov
dec
insl
sub
sar
dec
adc
mov
mov
test
xchg
shll
icebp
cmp
xchg
fstpl
in
addr16
mov
in
mov
mov
lods
in
dec
fidivrs
inc
dec
int
jle
push
xchg
lods
aaa
pop
stos
or
rcr
mov
cmp
sbb
mov
adc
das
arpl
shlb
aas
mov
and
xor
mov
inc
je
adc
jbe
aas
repz
repnz
pop
into
jae
adc
sti
mov
push
outsl
pop
pop
jne,pn
fldcw
inc
mov
call
int3
lret
dec
push
in
dec
dec
jne
iret
sbb
movsb
fdivrl
cmp
mov
das
test
shr
dec
sbb
cmp
mov
lret
call
fiadds
shll
mov
inc
sti
fimuls
xchg
jbe
adc
xchg
pop
in
les
push
aas
push
mov
aas
or
pop
mov
mov
and
lahf
jmp
push
cltd
mov
data16
lret
into
test
ret
jb
cmp
ret
in
sbb
add
push
adc
rorb
push
enter
je
jno
xchg
sbb
orps
lea
mov
out
arpl
stos
mov
push
sti
outsb
fidivrs
lods
pop
mov
add
sub
add
and
pop
mov
sti
imul
test
into
jg
pop
insl
mov
stos
pop
push
imulb
fidivrs
adc
test
stc
fsubr
cmpsb
xchg
mov
cmpsl
jge
xor
rcl
scas
or
push
outsl
sub
push
push
jo
leave
dec
scas
sbb
shrb
jg
pop
mov
pop
mov
jne
addb
out
lock
repnz
jo
inc
push
sbb
mov
in
push
pop
ja
repz
pop
aam
and
inc
jle
ja
fsubs
int
in
pop
jp
sbb
out
inc
sahf
insl
push
push
jo
lcall
add
stos
mov
adc
push
mov
mov
push
cwtl
into
filds
mov
sbb
push
mov
cs
pushl
outsl
dec
clc
add
xor
pop
push
dec
adc
pop
xchg
pop
iret
cmp
cmp
out
dec
dec
mov
movsb
push
sub
push
xchg
dec
stc
jne
stos
pop
mov
negl
in
adc
xor
jg
xchg
popa
sbb
mov
mov
aam
push
xor
mov
lea
sub
or
mov
pop
dec
movsl
xor
mov
and
rcll
mov
rep
sti
mov
add
repnz
fnstenv
lea
bound
inc
add
xchg
rcr
pop
inc
pop
pop
lcall
push
adc
and
inc
adc
inc
dec
cmc
sbb
shlb
test
into
push
test
in
jb
xchg
inc
loopne,pt
mov
push
and
dec
xor
je
mov
pop
sti
sub
dec
or
push
push
cmp
dec
mov
xchg
lcall
mov
mov
pop
pop
out
push
pusha
pop
lds
push
sbb
pop
push
jb
xchg
mov
lods
loopne
push
lock
mov
mov
push
jp
aaa
xchg
inc
fsts
mov
fdivrs
jmp
fimuls
xchg
mov
push
daa
dec
popa
iret
sub
out
in
out
mov
xchg
cmc
mov
push
sbb
out
sub
jno
pop
lahf
dec
imul
hlt
adc
pop
insb
xchg
ret
dec
ja
push
movsb
jbe
cmp
mov
dec
jge
dec
fisttps
stc
xchg
mov
ljmp
xchg
push
and
aaa
add
lahf
mov
fbstp
jbe
fwait
mov
outsl
mov
shlb
adc
or
scas
inc
std
cmc
cmpsb
mov
jnp
cmpsb
test
xor
out
lahf
jae
dec
incl
dec
in
int
add
add
push
cs
int
xlat
cli
xchg
push
inc
sbb
ja
loop
mov
xchg
push
push
movsb
adc
jb
cltd
aad
pop
jno
ret
sub
inc
adc
mov
mov
push
in
in
inc
test
mov
ljmp
xor
fistpll
xor
imul
jbe
adc
push
das
loopne
stc
add
setb
mov
mov
fadds
loope
cmp
clc
pop
clc
ljmp
sbb
adc
repnz
mov
fwait
dec
add
std
sub
out
int3
pop
push
and
jle
add
mov
xor
fcoml
mov
sbb
xchg
imul
dec
daa
aaa
aas
add
push
jl
xchg
dec
movsb
int3
jg
js
jg
push
mov
mov
outsb
cs
xchg
stos
fldenv
test
fisttps
xor
pop
addl
or
dec
dec
dec
cmpb
push
lret
xor
mov
int
ss
enter
daa
pop
mov
cld
lock
addr16
imul
sub
fisubrs
adc
push
fldenv
inc
les
stos
inc
out
jno
cmpsl
imul
das
into
mov
cltd
jbe
stos
js
push
shll
mov
out
out
pop
outsl
stc
push
adc
jmp
cltd
xchg
pop
mov
pop
sub
sbbl
into
xchg
sahf
lcall
inc
fcmove
inc
daa
xchg
xchg
fcmovnu
xor
sub
in
add
fs
pushw
mov
jmp
mov
in
jl
out
sub
aas
fdivs
popf
insb
imul
gs
fisttps
cltd
xchg
jae
sub
push
or
rorb
outsb
cmp
sahf
test
sub
push
stos
cmp
ret
lcall
mov
add
mov
sbb
fsub
add
adc
movsb
pop
int3
test
jl
pop
fdivs
cli
mov
adc
jnp
sub
enter
pop
mov
cmp
push
adc
and
adc
mov
loopne
add
stc
cmpsb
sbb
mov
mov
popl
push
fnstcw
mov
pop
mov
clc
mov
je
fidivrl
lock
shll
add
fcompl
push
addl
ljmp
sub
in
cmp
out
and
pop
pop
je
push
inc
xor
xchg
jbe
push
mov
push
mov
dec
fcomi
fildl
aam
repnz
out
pop
xchg
or
mov
xchg
cmp
xchg
adcb
jmp
in
and
pop
mov
xchg
js
ljmp
sub
lahf
cltd
movsb
pop
mov
out
lock
push
push
adc
sbbb
frstor
sub
adc
outsl
inc
es
popl
inc
scas
out
das
gs
and
push
lods
divb
or
jmp
sbbl
dec
cwtl
in
inc
test
pop
repz
cld
fnstenv
or
inc
mov
out
aaa
fcoms
mov
xchg
mov
leave
inc
leave
imul
sbb
jecxz
lret
push
pop
adc
xor
xchg
mov
out
arpl
jp
into
adc
or
cli
cmp
imul
cmpsb
dec
arpl
xor
dec
mov
mov
shll
stos
movsl
dec
test
int3
mov
fxch
adc
mov
adc
lods
and
int3
sbb
xchg
pop
adcb
push
out
sbb
sub
pop
fwait
mov
or
jns
xor
lahf
xor
ja
scas
add
fisttps
shll
out
aaa
int
cmpsb
xchg
mov
mov
pop
mov
cmp
sti
imul
xlat
sub
add
test
push
loopne
rcl
nop
and
xchg
add
add
and
bound
jns
pop
xor
imul
push
inc
outsl
imul
pop
dec
pop
fnsave
push
jp
pop
mov
inc
dec
daa
push
mov
push
jbe
lret
mov
mov
pop
out
pop
clc
dec
and
xor
addl
cmp
clc
clc
mov
xchg
lods
iret
jns
xor
sbb
dec
fcompl
mov
rorb
shrb
pop
mov
mov
loopne
pop
cmpb
in
jbe
mov
pop
sahf
popf
bound
jne
dec
popa
jae
pop
test
xor
dec
icebp
jp
pop
sbb
inc
add
mov
adc
or
imul
add
mov
cmp
dec
orl
jle
loop
push
in
mov
int3
or
sbb
inc
jg
jg,pt
jae
pop
insb
or
inc
xor
dec
ficompl
aaa
dec
repnz
movsl
mov
mov
in
scas
mov
enter
mov
das
test
rorl
gs
push
push
das
push
jae
xchg
ljmp
cmp
adc
mov
jne
push
lret
test
jae
icebp
sub
dec
adc
shlb
mov
jp
push
roll
and
pop
mov
cs
push
add
repz
mov
mov
out
rcll
cmpsl
imul
es
in
add
xchg
adc
ja
inc
pop
inc
mov
sahf
hlt
xchg
clc
pop
cmpsl
ret
cmpsb
cmp
jb
adc
nop
pop
push
mov
lods
insb
in
mov
push
test
fcomi
das
fimull
std
mov
push
lret
orb
cwtl
insl
sar
sub
test
cltd
sahf
je
in
sub
jge
jl
mov
in
std
cs
stc
mov
scas
dec
inc
pop
jns
stos
sub
test
adc
add
jnp
inc
stos
mov
jp
sub
add
gs
inc
cmc
sub
push
dec
sbb
int
lcall
es
mov
lret
arpl
dec
outsl
shld
jmp
stos
shrl
out
je
jmp
je
stc
mov
and
xchg
mov
pushf
mov
cmc
mov
adc
cmc
shl
and
and
inc
rcrb
push
mov
ret
subl
jp
cli
cmpsb
and
jge
dec
push
mov
fs
or
xchg
mov
pop
lock
in
pop
jne
in
sub
or
fidivs
lock
stos
mov
push
xchg
xor
jne
sbb
mov
sub
ret
jno
xor
jl
pop
inc
inc
add
push
push
aas
fmul
std
in
push
xchg
jl
ss
xchg
stos
xor
repnz
xchg
lds
outsb
sti
mov
push
mov
dec
push
sti
jg
xlat
pop
addr16
mov
fdivrl
mov
mov
jecxz
aam
test
jns
pop
bound
pop
imul
aad
cmc
cmpl
call
xchg
cmpsb
je
mov
mov
call
adc
std
inc
or
jg
loope
movsb
push
sub
ds
adc
sbb
jae
movsl
dec
imul
sub
inc
adc
inc
loopne
xchg
pop
ffree
jmp
nop
neg
shll
sbb
push
sub
sti
and
xchg
sarb
adc
pusha
insb
imul
mov
in
and
xor
test
loop
out
inc
dec
xchg
xchg
out
fidivl
xorb
shll
add
enter
ljmp
lret
add
int
daa
mov
mov
or
and
mov
fdivrs
mov
stos
aad
and
aas
or
jmp
adc
in
daa
stc
divl
sti
mov
mov
jge
cmpl
clc
mov
insb
xchg
in
jns
xor
sbb
mov
pop
subl
push
pop
mov
xlat
mov
jmp
aas
hlt
mov
test
jmp
loopne
enter
pop
fsubrs
pop
pop
lret
jle
out
iret
sub
fs
push
movb
cmpsb
or
jnp
pop
lret
imul
sbb
mov
jle
jno
cmp
dec
es
int3
mov
dec
mov
adc
xchg
loopne
mov
fstpt
and
add
imul
add
xchg
es
loopne
push
ja
adc
xor
pop
or
movups
inc
ljmp
adcb
dec
sub
loopne
scas
sahf
jle
pop
pop
jne
and
ja
xchg
mov
add
or
aas
sbb
repnz
mov
add
pop
es
fstps
cmp
mov
push
les
das
ja
aad
outsb
mov
lods
or
popf
mov
push
mov
xchg
dec
xchg
mov
mov
fs
cmpl
and
and
mov
sbb
andl
mov
movsb
stos
jo
or
mov
ss
pmulhuw
mov
clc
mov
fisttpll
test
dec
pop
daa
jns
aad
pop
bound
lahf
mov
jnp
mov
shl
mov
push
xchg
xchg
adc
push
ljmp
xchg
fnstenv
imul
loopne
ljmp
mov
sti
loopne
jle
outsb
outsb
mull
mov
ret
out
inc
aad
mov
dec
and
pop
cli
add
sub
mov
xorb
jb
cmp
outsb
out
int
sbb
aam
mov
or
or
cmp
cmpl
imul
sbb
sarl
adc
sbb
pop
repz
pop
jns
or
or
push
mov
pop
daa
pusha
sub
les
cmpsl
js
ja
jg
cmpsb
push
jo
jge
add
xchg
addr16
pushf
scas
stc
dec
jmp
sbb
and
sub
and
leave
xor
mov
test
mov
push
inc
sarl
adc
adc
call
outsb
sub
aas
mov
dec
mov
aaa
or
lret
or
push
pop
test
aas
js
loop
sti
mov
and
sub
out
sahf
js
sub
scas
leave
mov
mov
fisubrs
push
inc
mov
sbb
xchg
fmuls
pop
mov
inc
jg
mov
movb
or
xchg
inc
mov
int3
xchg
cli
cmpb
push
adc
frstor
ret
sub
es
mov
and
mov
sub
fdivrs
adc
cli
dec
in
fsubl
pop
mov
repz
cmpl
cltd
js
int3
inc
insl
ss
jne
inc
cmp
outsl
fmuls
in
xchg
pop
mov
mov
sahf
ljmp
imul
mov
daa
andl
inc
aad
ljmp
sub
test
xor
xlat
je
dec
int
inc
push
cmp
je
push
mov
popf
imul
mov
in
xchg
loopne
inc
test
out
mov
xlat
push
mov
ror
xor
add
sub
inc
outsb
rorl
aam
sub
inc
dec
stc
pushf
mov
test
fwait
mov
jl
sub
rorl
pop
mov
pop
hlt
mov
sbb
movsb
sarb
xor
xchg
jbe
pusha
ss
lods
or
or
sarb
std
dec
shlb
adc
pushf
call
outsl
jp
add
mov
cli
mov
out
add
cmp
movsl
sbb
jo
add
fldcw
js
jnp
jns
xor
test
inc
jmp
mov
popl
lcall
cld
insl
mov
sarb
jbe
push
test
in
add
cmp
mov
push
push
xor
mov
and
adc
cmpl
push
rcll
in
mov
jp
in
mov
movsb
enter
xor
scas
sub
fidivrl
sub
xor
xor
mov
add
addr16
cs
cmp
aam
pop
fisubl
adc
sbb
and
fdiv
mov
scas
icebp
jb
fadd
orl
push
dec
cltd
cltd
push
dec
sahf
mov
xor
push
push
sbb
mov
mov
add
inc
pop
mov
dec
jp
and
es
mov
sub
aad
cmp
cmpb
sub
push
fisubrl
test
fs
hlt
aam
roll
scas
adc
xchg
popf
cltd
xor
insb
or
pop
out
mov
dec
loopne
add
int3
sbb
flds
icebp
fwait
aad
add
mov
addr16
rcll
test
mov
dec
fwait
inc
fsubrl
and
cmp
dec
mov
push
push
test
mov
mov
sti
orl
outsb
xlat
repnz
insl
lahf
or
xchg
mov
push
mov
cmp
and
bound
mov
xchg
fs
ja
xor
xchg
mov
jge
addr16
and
mov
inc
or
or
xchg
mov
push
cmpsl
cmpsl
pop
and
idivb
push
adc
arpl
xchg
mov
push
pop
pop
push
jecxz
jne
cltd
pop
push
addr16
fidivs
rclb
cmpb
sbb
dec
mov
jb
and
pushf
divl
fmuls
push
std
pop
rcrl
test
fisubrs
mov
dec
xchg
push
cs
sub
dec
xchg
jle
mov
mov
sub
cmp
push
dec
jns
adc
fildl
lea
xchg
jl
pop
pop
xchg
es
push
xchg
adc
fucomp
mov
sti
roll
mov
cmp
das
sub
testl
or
cmp
cmp
mov
sbb
xchg
mov
adc
test
in
or
imul
and
fldt
pop
push
push
mov
sti
mov
push
or
ret
and
icebp
push
and
mov
jge
mov
cmpsb
pop
xorl
test
push
mov
cmp
inc
cmc
test
add
cmp
sbb
jbe
sub
dec
test
mov
xlat
sub
pop
inc
cmp
rcrb
mov
push
lds
hlt
jne
and
inc
dec
pushf
mov
imul
push
aam
xchg
shlb
scas
cmpsl
and
nop
pop
jne
xchg
icebp
and
push
in
push
rol
fnstenv
addr16
sahf
out
cmp
ret
les
insb
sar
push
dec
mov
loop
push
test
test
iret
push
ss
xchg
push
insb
mov
nop
sbb
fucom
aam
movsl
andb
push
rclb
hlt
notb
push
scas
ss
xchg
or
jge
in
clc
push
pop
dec
cmp
std
pop
pop
mov
shlb
dec
and
dec
ret
mov
ret
fcomps
jecxz
fldenv
mov
add
sbb
inc
pop
jnp
pop
inc
and
imul
lret
sbb
mov
adc
shl
sub
outsb
stos
pop
test
fdivrl
hlt
ja
mov
in
dec
popfw
setg
xor
sub
ljmp
das
in
sbb
clc
mov
add
add
jnp
lcall
mov
shll
mov
jl
hlt
stos
jl
inc
lods
mov
iret
repz
push
fidivl
aad
sub
sub
xchg
add
fnstenv
pop
test
cwtl
iret
movsb
lret
and
es
pop
inc
jmp
xor
push
cwtl
dec
add
enter
cld
stc
or
pusha
mov
sub
jns
pushf
mov
pop
sti
xor
dec
inc
out
shrl
pop
mov
pop
call
cmp
inc
hlt
xchg
mov
repnz
fmull
aas
les
cmpsl
fs
ss
jo
xchg
add
jp
pop
and
sbb
mov
or
lcall
and
daa
imul
dec
ljmp
xor
adc
lods
push
ljmp
dec
scas
ja
lods
pop
mov
stc
xchg
push
push
mov
xchg
push
addb
sbb
mov
cmpsl
xor
in
mov
fnstenv
movsb
cmp
and
xchg
cmp
ret
jb
int
out
lods
shlb
pop
andb
and
gs
pop
call
pop
adc
ja
pop
outsl
loopne
insb
out
fcmovu
jne
pop
data16
adc
dec
jbe
jae
pop
add
sbb
sub
idivl
pop
mov
addl
xor
mov
scas
ror
hlt
pop
leave
arpl
mov
pop
enter
push
repz
xor
fldt
movsl
inc
popa
mov
jecxz
xchg
mov
dec
lea
xor
lret
dec
mov
and
push
mov
sub
mov
pop
fs
test
stc
mov
lahf
enter
lods
sbbb
aad
lea
lcall
lea
popa
fs
cmpl
sbb
inc
subl
push
xlat
das
inc
cltd
dec
sbb
mov
jge
dec
test
call
fldcw
inc
insl
pop
movsl
xor
scas
inc
cmp
mov
or
stc
sbb
cmp
rcrb
dec
xor
dec
xchg
sub
ja
imul
inc
pop
mov
inc
lods
mov
mov
cmp
inc
repnz
mov
rclb
mov
pop
iret
mov
lods
stc
imul
shrl
cld
mov
xchg
sahf
lret
out
and
mov
push
xchg
adc
or
push
mov
and
mov
loop
cltd
insl
fcoml
int
cs
inc
ljmp
dec
dec
and
stos
mov
sub
arpl
fisubl
cmpb
out
addr16
pushf
arpl
mov
xchg
dec
movsb
std
out
cld
xor
subb
mov
imul
mov
int3
and
enter
bound
mov
mov
pop
pop
dec
pop
loope
and
outsb
mov
cmp
jmp
xchg
inc
and
and
out
outsl
div
jne
add
cmp
dec
dec
sub
adc
cmp
int
add
add
cmp
rorb
jae
dec
pusha
hlt
pop
mov
ss
sbb
inc
shlb
pop
sti
test
out
cmp
leave
repnz
add
mov
mov
mov
pop
or
cld
and
sub
test
mov
add
bound
aam
mov
or
lods
das
lods
out
fldt
call
mov
pop
cltd
or
dec
adc
dec
push
dec
fildl
adc
pop
shll
sbb
xchg
mov
mov
test
dec
scas
mov
cmp
add
enter
aam
dec
push
jnp
mov
pop
pop
mov
ja
inc
dec
mov
jecxz
dec
fpatan
insb
mov
enter
pop
addl
into
loopne
pop
sbb
mov
lret
cli
std
jl
sbb
sarl
and
mov
dec
xchg
jno
fdivr
mov
sbb
xchg
ja
mov
or
adcl
test
and
sub
cmp
loope
repz
fmull
sbb
test
hlt
hlt
push
ret
out
leave
stos
mov
stos
pop
adcl
into
or
pop
enter
pop
mov
xor
nop
push
int3
addb
imul
aam
aas
je
in
jne
out
dec
jae
or
rol
add
mov
je
xchg
fmull
test
mov
test
push
sbb
gs
dec
cmpsl
fwait
jl
cltd
test
pusha
fnstsw
loop
cmp
mov
stc
leave
pop
pop
sbb
cmpsl
adc
divl
sbb
adc
inc
mul
std
mov
lahf
cmp
dec
mov
insl
leave
outsl
fsub
xchg
das
int3
les
idivl
lcall
adc
arpl
addr16
bound
jmp
inc
jns
adc
jb
mov
and
sub
adc
inc
stc
add
xor
mov
mov
fmul
das
inc
ret
shlb
mov
add
repnz
jnp
cmp
in
and
mov
ficompl
and
imul
fldl
jb
xor
orl
cmc
inc
test
sbb
mov
xchg
dec
rorb
daa
daa
adc
inc
scas
lods
adc
je
movsl
mov
fdivrs
test
daa
imulb
dec
fsubs
jge
jl
mov
fisubrs
pop
jo
and
pop
stos
add
mov
testb
test
inc
and
ss
jo
repz
add
enter
dec
mov
inc
cmpsb
into
jno
pop
push
in
xchg
repz
sbb
les
pop
pop
mov
mov
jmp
subb
mov
daa
loope
mov
cmp
hlt
fnstcw
cmpsl
rolb
icebp
mov
cmp
outsl
mov
dec
or
jb
stc
sahf
pusha
sbb
hlt
jl
rorb
scas
add
loopne
cld
inc
push
add
push
xor
and
and
movsb
mov
loope
adc
fisttpll
jbe
daa
xor
outsb
xor
repz
insb
jl
fnsave
enter
mov
test
mov
jmp
and
loopne
sbb
outsb
xchg
add
xor
cli
andl
push
inc
pop
mov
ja
inc
inc
inc
lret
stos
popf
pushl
dec
shll
lds
add
pop
in
mov
mov
push
cmp
fdivl
and
xchg
jbe
mov
enter
jo
cmp
mov
sahf
or
sub
push
ss
scas
lret
int3
sub
loopne
or
pop
mov
mov
stos
lret
imul
inc
adc
cmp
cmpsb
andl
insl
cmp
fcom
lea
sahf
testl
xchg
pop
xor
sub
mov
xor
or
jg
sahf
inc
stc
test
mov
lock
rcll
das
push
rcr
cmp
out
push
movsb
push
mov
mov
clc
jle
scas
inc
mov
mov
imul
push
std
and
les
ljmp
mov
test
addr16
or
cmp
pextrw
out
jecxz
aad
mov
cmc
js
bound
test
inc
in
mov
lea
sbb
pop
jb
loopne
push
xor
es
dec
and
add
jbe
and
pop
lea
lds
xchg
xchg
sub
mov
dec
outsb
dec
pop
jle
sub
xchg
outsl
hlt
mov
dec
in
or
sarb
ja
inc
or
push
sub
test
adc
inc
iret
lock
pop
jl
mov
add
inc
mov
arpl
in
sub
push
xor
add
pop
mov
shlb
jnp
adc
insb
outsb
xor
jae
loop
iret
xor
dec
rolb
outsb
dec
lret
jge
pop
jno
push
leave
sub
dec
mov
stos
mov
xchg
xchg
repz
push
mov
fwait
les
xchg
mov
shlb
or
and
pusha
inc
es
aas
out
into
adc
cmp
mov
jmp
orb
xchg
inc
push
loop
push
pop
mov
dec
ret
mov
jae
dec
adc
push
aam
dec
test
push
xor
xchg
dec
push
pop
mov
mov
xchg
xor
sti
cmpl
inc
push
push
mov
jno
and
aaa
or
adc
adc
gs
cmp
adc
scas
js
test
or
adcl
test
out
push
add
ja,pn
sub
mov
xlat
fwait
pop
lds
adc
push
hlt
filds
std
ja
dec
inc
stos
faddl
ja
xor
mov
popf
std
and
adcb
adc
sub
mov
pop
insl
lds
lea
dec
icebp
call
mov
mov
pop
xchg
enter
and
push
pop
daa
orl
pop
ja
jb
jae
or
das
loop
pop
cmp
test
cmp
fs
push
leave
int3
fmull
call
mov
pop
je
xchg
xchg
push
fnsave
jecxz
shlb
dec
mov
xchg
fsts
lods
push
or
mov
cmp
mov
dec
orl
ds
xor
jo
and
loop
ds
add
aam
clc
cmp
ret
aas
xlat
jbe
add
inc
hlt
imul
push
insb
outsl
test
outsb
xchg
imul
stos
je
mov
dec
xor
mov
imul
in
and
repnz
shlb
and
pop
lea
js
xor
mov
adc
enter
sub
add
aam
mov
mov
mull
sti
add
pushf
mov
dec
into
ljmp
push
sbb
xchg
mov
or
insl
inc
adc
pop
cld
lods
addr16
dec
adc
or
hlt
jg
nop
and
adcb
jne
fisttpll
cld
xchg
xor
mov
pop
leave
fs
in
fisubrs
dec
cmp
repz
daa
decl
cmp
or
enter
out
ja
pop
jb
movb
in
and
loope
push
pop
pop
aas
xlat
jbe
cmp
cwtl
mov
or
cld
in
movsl
push
loop
sbb
les
jno
das
ljmp
aam
addr16
and
jae
or
fstp
cmc
add
xchg
cmp
mov
lds
pop
rorb
pusha
add
faddl
in
xorl
hlt
aam
sub
xchg
outsb
outsb
pop
mov
pop
inc
and
mov
dec
std
pop
int
lret
jp
popa
inc
cmpl
lods
xor
inc
push
inc
imul
sbb
jmp
jno
add
mov
loop
jbe
push
ret
jo
das
cmp
mov
push
jbe
jns
jge
dec
dec
jl
cmpsb
adc
shlb
add
push
dec
mov
push
push
sub
xchg
loopne
jbe
push
push
mov
bnd
popa
cmp
es
adc
ret
ljmp
and
out
add
dec
jns
gs
jmp
sbb
cmp
add
push
add
insl
adc
sbb
ret
imul
push
xchg
mov
loopne
fstpl
shll
jno
sbbl
xchg
int3
push
cltd
es
cmp
outsb
lret
popf
xchg
xor
in
mov
test
push
cmp
push
or
scas
xchg
dec
inc
dec
rcrl
mov
lahf
scas
mov
jb
andb
fdivl
outsl
mov
push
or
out
push
or
aaa
sub
loope
jbe
cmp
mov
jecxz
out
mov
ja
sbb
pop
mov
pop
jmp
sahf
mov
jae
mov
into
repnz
shlb
and
clc
or
pop
add
push
jbe
popa
insb
cltd
xor
mov
jb
les
loop
or
rcrb
push
pop
xor
scas
ds
loope
push
mov
jno
push
enter
sub
aad
lcall
lods
sub
out
jno
pop
lods
push
mov
in
dec
fildll
and
cmp
dec
adc
dec
xchg
hlt
scas
fs
pop
and
mov
cmp
test
cmp
pusha
jne
icebp
pop
jae
push
cmpsl
jecxz
pop
dec
push
inc
jmp
popf
je
push
mov
adc
test
jle
sti
inc
lods
inc
jns
pushf
adc
mov
inc
ret
in
out
fstps
fs
xchg
xchg
xlat
out
loop
sbb
aad
adc
pop
pop
jle
or
xchg
repnz
xor
pusha
cmpsl
jmp
pop
outsb
inc
add
ds
xchg
mov
adc
jmp
and
jge
jg
push
mov
xchg
dec
cli
and
push
loop
xor
mov
jg
arpl
cmpl
lods
add
cmp
cmp
movsb
xchg
mov
into
xlat
push
iret
xor
mov
jg
cltd
in
imul
subb
pop
in
push
cmp
daa
adc
mov
and
insl
mov
into
pop
in
inc
jns
int3
pop
mov
inc
jle
fcmove
loope
repnz
pop
xor
push
cmpsl
cli
adc
sub
shlb
jno
lahf
inc
lahf
fs
pop
or
xor
cmp
aam
jmp
lcall
pop
jl
pop
adc
mov
mov
sbb
adc
out
sub
xor
jae
pop
jecxz
dec
fwait
and
aad
push
ss
inc
lcall
cltd
mov
shr
add
aad
mov
shll
mov
mov
push
push
sub
loop
add
test
dec
and
xchg
lods
cmp
mov
rol
out
testb
xor
cld
fwait
repz
dec
js
adc
cltd
sarl
add
add
inc
andb
xchg
paddw
adc
daa
and
adc
add
lret
daa
add
clc
.byte
inc
lgs
hlt
mov
insl
imul
jbe
out
popl
dec
or
jbe
dec
lret
sub
jecxz
cmpsb
and
movsl
adc
xchg
dec
leave
xchg
test
mov
in
pop
mov
xchg
cmp
mov
sbb
gs
hlt
loopne
scas
push
fidivl
mov
fimull
loop
xor
sahf
sub
and
cmpsl
fisubrl
lds
fsts
sub
fisubl
icebp
xor
or
xchg
mov
ds
aad
mov
jne
int
jl
dec
fscale
stc
dec
test
rcrb
ret
je
jmp
dec
aam
out
cltd
add
ret
dec
lahf
int3
test
imul
jecxz
dec
iret
jbe
push
pop
cmp
jl
stos
call
les
bound
and
jle
lcall
mov
mov
or
test
ret
pop
aas
out
pop
enter
mov
mov
rcr
or
dec
dec
sub
dec
ljmp
test
xchg
in
fwait
rolb
mov
das
sub
icebp
push
fsubrl
ds
mov
lret
inc
cli
lock
cld
mov
jae
mov
add
cmpsb
cmp
incb
in
add
jmp
out
mov
cmpsl
mul
push
cli
xchg
scas
jo
je
mov
xchg
fnsave
cmp
or
je
aaa
mov
xchg
xlat
sub
test
out
or
in
movsb
mov
push
addb
mov
jge
testl
add
dec
sub
clc
xor
cmp
stc
icebp
and
and
fs
add
into
daa
imul
dec
mov
inc
sbb
or
mov
out
pusha
mov
push
lret
jge
ljmp
rorl
xlat
fidivl
fs
sbb
xor
fwait
push
aas
jb
test
mov
loopne
cmpsb
adc
or
aad
pop
outsl
adc
mov
lea
addr16
add
push
sbb
add
pusha
lock
mov
cwtl
jae
push
or
nop
lock
in
pusha
fs
xchg
in
mov
stos
imul
into
mov
push
pop
adc
adc
in
movsl
cmp
push
push
and
add
bound
jne
fcoml
jnp
pop
push
mov
call
mov
mov
aad
cmpsl
jp
mov
jnp
and
jg
cmp
cs
pop
enter
rorb
cmp
into
ljmp
cmp
popf
and
in
loop
or
sbb
or
mov
fidivrs
loopne
push
push
out
nop
and
push
adc
les
cwtl
inc
pushf
dec
iret
das
jne
arpl
jmp
outsb
rorl
push
adc
ljmp
fmuls
mov
in
push
sbb
sbb
jecxz
xchg
dec
inc
in
adc
sbbl
aad
mov
xlat
cmp
scas
divl
jo
test
stos
push
fnstenv
sbb
cmc
xor
dec
xchg
and
pop
mull
pop
cltd
adc
inc
movsl
and
jnp
dec
mov
and
mov
dec
shr
dec
jecxz
in
fidivrl
scas
stos
xorb
inc
pushl
cmpl
push
xchg
jecxz
jns
add
jge
jbe
aas
repnz
dec
and
dec
testb
xor
flds
in
subl
xor
lret
push
lret
ficoml
push
pop
adc
xor
insb
xchg
leave
inc
insb
jp
in
adc
leave
pop
push
imul
pop
repnz
jns
loope
dec
movsl
pop
cmp
jnp
cld
or
sbb
andl
mov
jle
xchg
lcall
inc
xchg
mov
lea
cmp
add
mov
mov
xor
rclb
and
cmpsb
stos
pop
test
orb
cmp
mov
pusha
jnp
mov
sub
xchg
xor
and
push
sbb
cmp
xor
xchg
lods
daa
cltd
mov
lcall
out
xor
mov
cmp
test
push
xchg
or
movsl
es
mov
test
adc
rcll
notb
jae
cmp
mov
jl
push
cmp
pusha
inc
pcmpgtw
popa
adc
imul
lcall
mov
fwait
pop
and
add
jge
lret
jge
push
cmp
xor
sarl
pop
ret
mov
leave
pop
jg
not
addr16
sub
dec
xchg
xor
dec
je
shr
cmp
lahf
mov
mov
pop
mov
inc
mov
repnz
cld
mov
cmpsl
popa
xor
clc
and
insb
mov
ja
lret
cmp
push
dec
mov
adc
and
pop
jg
mov
xchg
jne
add
xchg
out
dec
pop
mov
subl
aas
push
mov
push
push
pop
pusha
mov
xorb
adc
pop
inc
sub
inc
add
mov
jns
inc
call
push
call
arpl
mov
out
shlb
xchg
jo
dec
adc
and
jo
roll
xchg
pop
xor
fstp
mov
fwait
mov
inc
je
les
xor
mov
sbb
jo
outsl
xor
aas
mov
jnp
fisubrs
mov
pop
orl
mov
sub
mov
cmpsb
pop
rcll
shrb
jge
pop
je
push
cmp
stos
adc
imul
push
lock
aam
xor
bound
lods
push
imul
sub
test
mov
stos
and
test
xorb
cmpsl
mov
scas
idivb
or
adcl
jno,pn
and
psubusw
int3
xchg
push
lods
hlt
dec
push
movsb
cli
pop
push
sub
fucomp
push
test
jge
mov
inc
push
xor
jno
push
jnp
xchg
repz
mov
and
add
adc
fildll
fsubl
mov
push
inc
shrl
in
push
loop
std
ja
xchg
xchg
sbb
inc
fs
outsl
iret
clc
dec
sub
js
jle
out
adc
add
clc
xorb
xchg
jp
and
xor
or
pop
jg
stc
mov
mov
sub
gs
jg
sub
add
js
add
mov
or
mov
in
xor
mov
scas
lods
mov
les
sub
and
aad
nop
jmp
rcrb
loop
xor
mov
daa
stc
movsb
jb
scas
mov
adc
mov
xor
mov
lret
pop
les
lock
push
mov
lret
push
scas
gs
std
and
inc
add
xor
scas
les
jbe
mov
inc
insb
dec
fisubs
sahf
dec
inc
xchg
pop
cmp
data16
ficompl
mov
lea
pop
dec
pusha
out
adc
in
xor
sub
in
out
repnz
and
add
addl
jle
test
xor
cwtl
pushf
jecxz
mov
or
lahf
scas
mov
sbb
jmp
dec
mov
jnp
push
scas
popf
scas
movsl
pop
loope
or
mov
scas
pop
pop
sub
andl
outsb
inc
jl
aad
adcl
push
pop
repz
push
popa
test
sti
mov
jnp
lret
pop
test
repnz
sbb
movd
xor
lods
jmp
fisttpl
mov
nop
ret
cmc
cmp
cmp
xor
xchg
test
inc
sti
and
pop
je
inc
and
lea
out
xchg
sbb
sub
mov
adc
fwait
mov
ret
int3
xor
fwait
sarl
cmpsb
push
xchg
add
sbbl
xor
insl
dec
cltd
mov
jne
je
cmc
and
into
insb
xor
ret
int
inc
mov
adc
sbbb
out
cmp
xchg
cmc
push
cmp
pop
adc
xchg
inc
popa
sub
mov
sub
xchg
icebp
and
nop
adc
mov
sbb
test
enter
std
je
popa
lahf
push
cld
iret
cmc
or
movsb
hlt
or
xchg
notl
test
fcmovbe
jnp
mov
test
dec
cmpsl
pop
dec
jns
dec
incb
or
nop
inc
fsubrl
mov
cmpsb
adc
or
sarl
dec
js
push
dec
fsubl
enter
jl
push
pop
dec
test
sbb
movsl
lahf
loope
pop
jb
sbb
les
adc
les
push
and
aad
inc
scas
jno
icebp
mov
aam
sbb
or
ja
iret
bound
arpl
call
cmp
insb
leave
inc
pop
dec
adc
aaa
test
sbb
mov
xchg
mov
stos
divb
aad
call
fsubrl
pop
jg
divb
push
jg
xchg
add
rclb
sub
popf
aas
xor
test
pop
sbb
mov
shll
add
gs
xchg
xchg
daa
xchg
sbbb
iret
in
addr16
loope
aas
push
mov
pop
mov
scas
push
aad
sbb
inc
lock
jp
pop
jecxz
xorl
out
ficoml
mov
repz
pop
jle
or
inc
or
pop
ljmp
sahf
push
push
ja
es
test
or
add
mov
andps
out
mov
jge
push
mov
sbb
or
cld
cmpl
mov
loop
mov
jg
orl
mov
pop
jnp
mov
mov
push
inc
inc
cli
pop
xchg
or
dec
movsb
push
iret
stos
hlt
daa
outsl
out
hlt
adc
in
ja
pop
aad
sar
stos
insb
pop
jo
rorb
into
adcb
aad
sbb
lock
icebp
pop
jo
sub
cmpsb
inc
mov
pop
and
mov
jmp
hlt
les
jo
cmc
xchg
and
fmull
xchg
fidivrs
push
pop
icebp
mov
les
inc
sbb
sti
jg
mov
mov
js
pop
mov
rcll
xor
leave
add
movsb
add
lods
scas
js
or
enter
lret
sbb
push
sub
or
add
push
mov
and
xchg
cld
push
inc
das
loop
addr16
mov
push
pop
jne
jmp
mov
loop
push
ficoml
inc
sbb
push
stc
mov
pop
lods
inc
fsubrs
in
lret
ret
ficoms
subl
mov
mov
dec
push
sub
outsb
dec
aad
mov
lcall
pop
das
out
int
inc
into
lcall
inc
stos
xor
ja
pop
out
pop
xchg
or
add
xchg
in
xor
adc
das
mov
mov
add
jg
mov
mov
jbe
aam
sahf
dec
shlb
jg
pop
insb
jo
cmp
and
fildl
and
sbb
or
sahf
or
aaa
add
popa
jno
pop
punpcklbw
dec
or
cmp
cmp
out
add
xor
ljmp
stos
data16
ffree
in
nop
xor
call
aad
loopne
rol
call
or
cltd
mov
addb
in
aad
cmc
push
cld
jl
pop
xchg
mov
push
push
pop
add
fisttps
outsl
arpl
pop
sbb
mov
push
push
cwtl
jne
aad
push
decb
mov
aaa
xchg
aad
mov
das
pop
or
jp
jmp
sub
shrl
jg
dec
sbb
add
inc
push
add
aad
adc
cs
mov
sbb
loopne
add
push
lret
test
xor
or
and
sub
inc
loope
adc
push
call
popa
xchg
add
and
lods
sti
fnstenv
arpl
aam
popa
xchg
imul
jbe
jae
call
adc
sub
jp
jl
xor
andb
and
and
sbb
cmpsl
das
enter
fdivr
in
inc
xchg
sub
and
add
dec
and
int3
loope
inc
or
sub
invd
insb
adc
xchg
mov
pop
cli
test
mov
pop
push
xor
mov
mov
stos
outsb
imul
cwtl
aam
push
insb
arpl
repz
mov
inc
iret
insb
lret
pushf
pusha
or
xchg
hlt
repnz
pop
inc
je
adc
inc
inc
dec
push
jbe
pushf
inc
add
jmp
leave
xchg
sub
fsubs
jle
mov
lods
adc
clc
add
sbb
daa
pop
push
mov
rorl
mov
jno
add
iret
pop
cltd
test
xchg
shlb
lods
mov
xchg
inc
out
or
mov
mul
mov
cmp
mov
push
push
mov
arpl
in
test
aad
inc
decl
aaa
orb
cmp
jmp
rcrb
sbb
mov
push
out
loope
fidivl
outsl
test
inc
bnd
shlb
adc
mov
jae
les
lahf
mov
or
inc
push
push
sbb
push
mov
add
data16
js
mov
pop
and
in
push
iret
mulb
loopne
mov
ds
negb
jp
push
ss
dec
in
clc
jg
mov
lods
jo
inc
clc
addl
adc
fwait
aad
pop
dec
leave
sub
mov
int3
std
push
xor
jbe
mov
xchg
sub
mov
xchg
dec
jbe
mov
xchg
mov
cmp
out
stos
pop
sub
xchg
fwait
movsl
lcall
loope
lds
out
arpl
inc
cwtl
push
inc
enter
inc
cmp
lea
jb
mov
push
call
loope
cmpsb
ror
cmp
sbb
pusha
jae
dec
cmp
call
push
je
push
jne
icebp
inc
push
mov
xor
stc
mov
fidivl
mov
push
dec
pushf
adc
roll
rorb
cld
nop
std
in
mov
xlat
pop
repz
push
push
es
xchg
lret
enter
aad
fdivrl
clc
ss
dec
in
xchg
jl
lcall
int3
dec
arpl
sti
jp
fwait
jae
sub
xor
push
frstor
cmp
or
lcall
fidivrl
xor
paddsw
mov
out
cmp
jae
fbld
mov
les
fwait
out
mov
or
inc
push
in
mov
mov
gs
mov
cmc
test
xor
push
shl
test
xchg
inc
dec
or
nop
int3
cltd
fdivs
arpl
fsubs
in
popa
sub
cmp
sbb
adc
jne
mov
push
inc
jnp
loop
jmp
loopne
dec
pop
mov
loop
jp
out
les
popa
cli
loopne
lea
jle
jb
dec
jnp
adc
mov
adc
loope
xchg
jp
jp
inc
ds
push
dec
lds
pop
jae
add
imull
test
push
jle
out
scas
jmp
movsb
mov
sbb
ret
ja
andb
push
les
jp
cld
loope
mov
in
cs
xor
add
add
jmp
pop
pop
add
push
push
adc
mov
stc
jge
mov
xchg
push
add
scas
cmp
clc
sahf
mov
ja
mov
sarb
dec
mov
push
in
sarb
mov
div
cmp
popa
bound
pop
sub
fldcw
dec
mov
fimuls
shrl
and
pop
std
dec
nop
add
jne
rcl
sbb
test
inc
push
push
or
adc
push
subb
push
push
mov
add
add
push
lahf
cwtl
lods
mov
leave
in
jl
mov
mov
and
repz
push
clc
stos
mul
hlt
and
push
pop
out
lock
xchg
inc
push
pushf
push
dec
shl
inc
and
dec
or
fisttps
mov
inc
mov
sbb
stc
test
ds
sub
push
std
icebp
pop
out
in
jb
adc
inc
cmc
adc
cmpsl
icebp
jl
push
mov
pop
repnz
cmc
push
adc
lcall
or
or
inc
fcmovnu
loope
psadbw
repnz
repz
mov
or
ss
adc
nop
sti
inc
xchg
mov
add
xor
dec
sbb
xor
insl
mov
mov
mov
sahf
insl
push
stc
jecxz
cmp
loopne
xor
fwait
loope
jno
sti
pop
xor
jl
pusha
data16
sbb
pushf
pusha
mov
in
jne
adc
xchg
mov
pushf
push
lock
dec
push
clc
cli
xor
dec
cmp
sub
out
adc
push
outsl
fcomps
enter
dec
and
cli
es
nop
mov
mov
lahf
sarl
pop
push
mov
fisttpll
or
rolb
xor
jge
mov
daa
daa
adc
ds
inc
xchg
addr16
push
mov
pop
mov
lea
ljmp
dec
and
dec
adc
andl
or
add
mov
frstor
test
mov
cmp
mov
xchg
mov
sbb
ret
repnz
movsb
cmp
mov
dec
clc
cmp
mov
aas
fwait
and
mov
jb
aam
fldenv
shl
push
icebp
cmpsw
dec
popa
insl
iret
push
add
mov
sti
jp
test
fmuls
and
pop
rorl
or
xchg
iret
pop
scas
pop
pop
fcomps
pop
lods
cmpl
cmp
int
sti
outsl
pop
das
stos
add
dec
push
out
lret
loope
aas
insb
orl
call
and
mov
dec
int
imul
add
and
rorb
cs
roll
dec
scas
rorl
test
add
sub
lahf
popfw
fistpl
dec
fsubs
test
lcall
cmc
repz
pop
push
ljmp
popf
pop
lea
test
xlat
mov
mov
sbb
jecxz
movsl
scas
inc
imul
sub
leave
push
cmp
lock
fadd
push
inc
sub
dec
jp
xchg
shl
aas
adc
mov
adc
jo
and
mov
les
jp
jbe
push
xlat
jbe
in
mov
dec
xlat
jo
add
leave
push
add
inc
test
test
inc
fisttps
test
movsb
add
test
or
stos
cltd
push
cwtl
pop
aaa
pop
cli
es
or
adc
cmpsl
mov
les
and
and
sahf
sbb
mov
insl
mov
jle
sbb
push
iret
ljmp
cmp
pop
repz
pop
adc
mov
inc
xchg
repnz
out
sub
int
scas
add
push
xlat
fs
lcall
repz
loop
add
mov
int
les
mov
add
cmp
xor
fstpt
inc
sub
mov
mov
les
dec
xchg
and
mov
leave
mov
shlb
mov
aas
xchg
dec
mov
movsl
es
nop
jno
mov
and
push
sub
gs
add
xchg
push
adc
xor
aad
cmp
pop
xchg
std
lret
pop
in
jge
pop
pop
lret
lods
je
and
insl
rclb
call
stc
sar
push
popa
iret
jecxz
fnstenv
sbb
or
mov
add
sub
pop
inc
sub
pop
call
lods
dec
hlt
xor
out
mov
cmp
sbb
push
pop
int
enter
xor
outsl
jecxz
ffreep
popf
xchg
mov
mov
pop
lock
add
or
mov
dec
push
movb
jnp
and
jno
outsb
lods
incb
jl
xchg
pop
and
stos
rcrl
aas
and
mov
mov
sub
xor
cmpsb
out
in
inc
mov
sbb
jno
add
push
enter
or
cmp
pusha
popf
ljmp
cmp
cmp
pop
ficoms
push
push
lret
or
bound
inc
xor
jnp
mov
sarb
or
mov
pushf
cmp
jle
into
mov
xor
pop
sbb
jmp
loope
cld
jmp
aas
mov
sub
int3
inc
pushf
out
jp
lret
je
pop
sub
call
imul
in
dec
inc
sahf
inc
xchg
mov
test
aam
mov
mov
cltd
call
rcr
and
std
fsubrl
adc
or
das
test
mov
adc
dec
icebp
nop
xchg
jae
int3
sub
and
ds
jnp
shlb
dec
mov
out
jecxz
cs
inc
bound
mov
xchg
xchg
sub
sbb
push
cmpsl
enter
adc
or
frstor
aad
int3
ss
cli
rolb
or
xchg
clc
pop
xor
in
repz
lods
orl
push
cs
adc
push
add
push
pusha
add
mov
cwtl
xchg
ds
dec
fwait
mov
lock
xchg
fwait
push
leave
push
cmp
lea
mov
pop
loop
inc
push
push
pop
decl
loope
pop
mov
outsb
loopne
aam
ds
lcall
ja
jle
dec
mov
dec
mov
rorl
xchg
xchg
mov
in
movl
pop
add
pop
push
fcomps
leave
insl
mov
int
xor
fistpl
mov
pop
and
aad
dec
popl
mov
test
inc
cmp
daa
mov
iret
out
or
or
mov
mul
mov
cmc
jl
cmp
and
adc
jecxz
test
cmp
mov
cwtl
pop
into
inc
jbe
gs
out
jp
ficomps
fnstsw
xor
enter
push
xor
out
adc
xchg
mov
mov
pop
sbb
aam
mov
scas
lock
repnz
movsb
fistpll
loope
lret
jno
ret
lret
insb
add
mov
xchg
jb
push
jae
or
mov
test
inc
fs
jo
cmp
mov
or
dec
fsubr
add
sarb
rcrb
cld
lods
fistl
push
mov
test
and
js
dec
repnz
fwait
ljmp
and
ret
test
push
addr16
mov
inc
or
es
add
es
dec
sub
pop
call
push
fs
inc
jno
lock
cs
sbb
inc
xchg
pop
or
out
adc
stos
add
adc
bound
dec
sbb
cmp
cmpsl
jg
movsb
call
adc
outsl
fidivs
arpl
rcl
mov
mov
or
test
mov
sub
bound
mov
ja
cmp
test
push
sbb
outsl
and
cld
push
cmp
imul
in
out
inc
push
sahf
int
frstor
pop
adc
jle
mov
mov
cli
stc
ss
fadd
xchg
mov
add
jns
lods
repnz
cmp
in
sub
popa
sub
adc
add
and
dec
shl
out
mov
xchg
aas
or
es
js
outsb
call
jmp
mov
pusha
ja
jo
ficompl
jae
xchg
movsl
jge
cmpsl
or
paddsb
cmp
mov
cmp
or
outsl
mov
xchg
push
divl
shrb
pop
push
mov
scas
mov
push
scas
push
cmc
push
ljmp
dec
adc
scas
cmpsb
call
outsl
lahf
pop
pushf
pushf
jle
scas
sbb
xor
adc
iret
add
sub
test
xchg
pop
out
js
mov
clc
pop
mov
cwtl
cmp
mov
imul
sahf
cmp
mov
hlt
mov
popf
xchg
or
dec
aaa
jbe
mov
in
add
int
jecxz
mov
mov
test
xchg
mov
enter
aaa
pop
insb
mov
stos
jns
les
and
xchg
mov
or
popa
adc
cmp
xchg
pop
adc
int
and
sbbl
dec
cmp
outsl
add
xchg
inc
js
mov
test
pop
fstpt
hlt
adcl
inc
or
lret
daa
cmpsl
icebp
movsb
jnp
xchg
add
rcl
cmp
in
in
sbb
cmp
lds
aas
or
dec
sub
adc
lahf
dec
insl
cmp
cmp
mov
xchg
jp
push
add
ss
insl
mov
adc
push
iret
xor
outsb
jecxz
jnp
xchg
orb
dec
push
or
jo
fidivl
in
mov
sub
clc
in
xor
lea
fmul
loop
int
jmp
int3
mov
enter
mov
jnp
jnp
syscall
dec
mov
mov
and
jae
mov
mov
ss
cmp
sub
xchg
addr16
mov
cmc
xor
dec
fstpl
shl
arpl
jmp
and
bound
mov
push
xchg
std
or
je
adc
stos
dec
pop
inc
cmp
push
clc
adcl
xor
add
pop
iret
jb
imul
add
das
or
cmpb
cli
pop
ds
inc
mov
xor
mov
jecxz
rorb
sbbb
std
and
jb
jecxz
jnp
stos
mov
jge
shll
roll
mov
adc
jge
inc
lods
dec
test
out
in
push
sub
sbb
lea
push
mov
push
aam
cwtl
inc
pop
pop
jo
and
int
test
lods
jl
cli
aam
xchg
add
sarb
fsubr
dec
fbld
rolb
push
xor
sbb
jns
mov
sub
cmp
mov
div
ds
jl
pop
xchg
pop
push
mov
sbb
in
in
jg
mov
add
out
es
lds
or
lea
xor
sbb
and
jmp
sbb
mov
inc
fldenv
mov
movsb
sub
mov
and
popf
dec
and
jo
in
cmpsb
mov
push
cmc
sbb
mov
fs
sahf
jecxz
push
mov
mov
lret
outsb
jg
shr
sub
adc
or
rcr
push
mov
in
cmovbe
and
fwait
xchg
jb
pusha
mov
lds
sub
xchg
sbb
data16
and
pop
loopne
inc
mov
repnz
sub
or
cltd
call
cmp
enter
cwtl
movsl
mov
add
or
mov
ret
loop
shlb
xor
scas
retw
mov
sbb
mov
clc
test
lret
sbb
mov
iret
sets
xor
push
int3
xchg
add
int3
pop
mov
fistl
aad
push
cmpsb
mov
or
xchg
mov
adc
sahf
sub
testb
ss
fsubl
mov
test
dec
fs
cmp
aad
jg
mov
or
push
insb
lods
imul
outsl
dec
xchg
testb
enter
lahf
mov
push
icebp
lods
xchg
adc
cmc
xor
lea
sarb
push
xor
xchg
push
adc
insl
fistpll
xchg
push
lods
add
xchg
arpl
in
gs
test
cmp
stos
mov
push
cmp
lret
out
bound
mov
ja
and
and
mov
cmp
pusha
insl
call
aad
rolb
cwtl
in
jp
inc
into
enter
mov
das
jne
mov
in
add
cmp
jo
std
push
push
int
and
rclb
scas
sub
insb
clc
outsl
inc
nop
add
mov
jmp
cmpsb
pusha
and
cmp
roll
inc
jno
sub
jg
jno
mov
arpl
lods
shll
loopne
jmp
xchg
movsl
xchg
pop
dec
xor
jne
mov
cmc
aad
loope
addr16
es
mov
test
or
mov
cs
pusha
pushf
add
stos
push
loopne
xchg
outsl
mov
ja
adcl
enter
mov
dec
pop
sbb
mov
push
dec
sbb
mov
xor
out
loope
fimull
std
lahf
jo
xor
dec
aad
test
jmp
sti
aaa
sahf
jb
add
or
push
mov
push
and
shll
xlat
add
or
hlt
xchg
gs
insl
cld
xchg
mov
fs
jmp
xor
cmp
cmp
pop
cmp
pop
aaa
sub
and
jmp
xchg
xchg
ficomps
rorb
les
nop
sub
sarl
sahf
lock
adc
bound
clc
xlat
pop
add
inc
push
mov
fidivs
pop
adc
cmp
out
addr16
mov
call
xchg
mov
sbb
fsub
test
adc
or
shld
fdivrs
mov
adc
jae
jb
mov
sbb
cmc
int3
movsb
leave
push
adc
push
add
sti
push
add
sbb
repnz
ret
imul
mov
cmpsb
loope
jmp
sahf
xor
sbb
cli
pop
mov
aas
sahf
cmp
push
and
lret
fwait
das
xor
ss
addl
adc
mov
mov
js
jl
scas
pop
xchg
imul
lcall
mov
pop
inc
idivl
xor
enter
inc
mov
lods
inc
adc
sub
loop
jo
xchg
int
into
iret
dec
pop
sub
dec
jno
xor
xchg
ss
jb
lock
cmp
fiadds
sub
aas
xchg
loopne
jl
jno
mov
jp
dec
and
negb
dec
enter
cld
adc
cmp
lods
fwait
push
in
mov
jl
test
outsl
js
in
insb
je
or
stos
jg
jecxz
outsb
movsb
or
push
jg
xor
and
xlat
testb
shrb
je
add
push
add
mov
aaa
stos
mov
push
das
mov
push
pushf
mov
inc
cwtl
adc
daa
inc
das
mov
mov
xchg
movsl
jge
test
bound
sub
mov
imul
dec
ficoms
and
shrl
and
lret
adc
lods
loope
jecxz
jae
pop
aad
hlt
jp
iret
lret
leave
loopne
sbb
fsts
mov
call
fdivs
jl
push
jnp
sti
adc
or
or
shlb
repnz
and
aad
sarb
add
or
mov
jg
mov
les
cmp
jb
lret
repz
dec
mov
mov
sub
jecxz
xchg
add
out
dec
mov
xchg
jne
in
jle
out
clc
and
test
jne
leave
out
adc
push
push
imul
out
push
mov
mov
fdivrp
cmp
jnp
repnz
cmp
rcrb
add
dec
mov
out
sbbl
cmp
bound
push
push
mov
in
pop
shll
test
or
cmp
aas
ds
mov
cltd
fs
inc
in
push
mov
shlb
movsb
fcomp
cli
xor
shrl
data16
popa
mov
mov
loope
fidivs
stos
push
out
cmp
daa
dec
mov
dec
pop
cmc
mov
std
cltd
mov
daa
xor
negb
push
call
and
sbb
pop
pop
jl
xlat
and
xor
and
test
jb
arpl
aas
ret
sub
imul
or
aas
xlat
repz
pusha
sbbl
and
or
fdivrl
cli
jnp
sub
jno
bound
dec
xor
scas
cmpxchg
ljmp
sti
xchg
pop
out
hlt
loope
cmpsl
jns
mov
push
fchs
pusha
sarl
add
repz
jns
xchg
popa
das
cli
xor
lret
in
mov
xor
xor
es
jnp
inc
std
pop
xchg
cld
rcll
fdivrp
movsb
sub
ds
sub
les
lods
inc
stos
lret
inc
jbe
jmp
inc
repnz
xor
fnstsw
cli
add
mov
cmp
sub
fcoml
imul
inc
mov
jne
es
mov
cwtl
fcmovne
pushf
mov
xlat
mov
jno
dec
cmpsl
jnp
pushf
cmp
clc
adc
testb
pop
dec
xlat
jae
repnz
daa
das
mov
cmp
adc
pop
and
add
xor
or
dec
mov
lret
int3
sub
xchg
push
aad
mov
xchg
push
cmpsb
mov
hlt
jmp
pop
ret
mov
fnstsw
cwtl
in
pop
xchg
pop
adc
lds
xor
das
add
loopne
inc
jecxz
push
lret
add
or
hlt
pop
jae
push
adc
scas
jp
jns
sub
mov
and
pop
fadds
js
adc
mov
rol
lock
mov
inc
pop
insb
lahf
cmc
roll
xchg
ja
pop
push
xor
sub
pop
lret
loop
adcb
das
push
cmpsl
test
roll
mov
and
ret
insl
adc
loop
mov
jne
test
cmp
adc
mov
or
push
gs
ret
sub
fmull
push
or
cmp
rcll
addr16
sub
stos
fadds
fisubrl
aas
sub
mov
dec
fs
imull
int
inc
mov
xchg
adc
loop
cmp
ds
adc
push
stos
mov
insb
sub
pushf
and
stos
push
sbb
pushf
mov
mov
adc
nop
outsl
sbb
pop
icebp
xor
add
ljmp
fwait
call
add
pusha
clc
mov
add
bound
fsubrp
lret
scas
push
leave
loopne
pusha
imul
mov
adc
push
mov
jno
pop
add
sti
ret
jecxz
call
jge
adc
push
jo
mov
test
mov
mov
popa
mov
and
jge
aaa
rcrb
and
jbe
jae
adc
adc
pop
shll
xor
dec
lcall
popl
scas
pop
in
pop
cmp
mov
bound
setae
jo
repz
lahf
addb
jae
pop
outsl
test
popf
adc
aaa
pop
lock
mov
xlat
dec
fdivrl
and
enter
leave
imul
mov
cmp
stos
out
cld
pushf
fwait
in
cmpl
xchg
sub
aas
mov
sahf
inc
int
das
scas
ficoms
lret
lds
inc
or
aas
xchg
loopne
arpl
les
xchg
je
add
inc
bound
arpl
lock
xchg
insb
mov
ficompl
cmpsb
lds
lret
shll
mov
aaa
sbb
repz
xor
jmp
ljmp
cli
jns
xchg
sub
dec
mov
mov
inc
outsb
or
sub
jg
dec
lret
cwtl
xlat
xor
lods
xor
ja
sub
push
xchg
adc
loop
dec
imul
test
loopne
test
dec
mov
repz
push
lret
pop
push
icebp
xchg
adc
test
adc
imul
stos
ds
mov
outsb
or
mov
jb
adc
jl
lds
mov
mov
aaa
push
shl
loope
pusha
lcall
cmp
sub
cmpsl
arpl
mov
fdivp
js
and
loopne
or
cmp
mov
data16
arpl
and
add
mov
or
and
cld
pusha
out
cmpsb
lahf
call
push
clc
mov
mov
cmp
mov
sahf
and
out
and
xchg
fmull
add
fidivl
idivb
ljmp
mov
cmp
lret
or
inc
stos
xchg
mov
adc
out
sbb
jno
and
xlat
notl
or
or
scas
jmp
leave
dec
stos
pop
adc
sub
mov
div
cld
add
lret
punpckhwd
sbb
lods
arpl
add
adc
scas
inc
xchg
mov
cmp
push
lods
fistpl
cwtl
adc
xorb
stos
mov
push
jle
rcll
dec
inc
and
sbb
out
scas
ret
rolb
push
loopne
cwtl
jo,pn
sub
ficomps
into
sbb
dec
pop
lods
or
mov
xchg
inc
mov
fwait
shl
pop
inc
mov
int
and
out
add
iret
scas
shll
ljmp
movsl
jae
repz
movsl
and
pop
dec
pop
push
adc
in
jno
cmp
dec
mov
sub
jg
pop
mov
pop
sti
sbb
cmpsl
dec
aam
xor
inc
xchg
add
xor
in
and
in
jge
jl
lea
sub
xor
stos
lret
mov
fidivrs
frstpm(287
mov
sub
xchg
pop
lahf
int3
dec
dec
fcompl
and
push
in
lods
mov
hlt
pop
mov
jp
mov
clc
les
push
dec
cmp
insl
ret
incb
test
lods
and
ljmp
sbb
inc
jne
lcall
dec
lods
icebp
outsb
aad
fcomip
or
xchg
imul
setge
cld
fldln2
jp
test
aaa
insb
adc
scas
mov
mov
jle
imul
in
dec
xor
push
fs
xor
adc
or
pop
push
cmp
daa
xchg
sbb
in
fdivrs
lea
cmp
push
xlat
sub
sub
and
test
push
xor
mov
xchg
push
not
sbb
ret
fildll
mov
inc
xchg
popl
push
sub
xchg
insl
lea
out
push
shrb
scas
orl
pop
out
pop
mov
xchg
dec
dec
mov
push
enter
add
daa
loop
sbb
lods
pushf
add
cmp
gs
insb
dec
jbe
fmul
arpl
sub
cli
fiadds
mov
dec
addr16
int3
xchg
jb
push
loop
push
pusha
ret
test
mov
adc
add
jo
ja
aas
xchg
test
inc
jecxz
sti
gs
call
or
int
out
out
mov
pop
cmp
sub
xchg
fidivrs
jmp
pusha
mov
xor
add
ret
insb
in
rcll
in
mul
push
add
clc
lea
dec
pop
addr16
pop
das
sarl
mov
mov
push
scas
lods
sbb
mov
cmp
xor
xchg
aam
xchg
and
arpl
out
and
jb
out
in
andb
cmp
movsl
cmc
iret
outsb
in
sub
adc
inc
mov
pop
outsb
xor
sbb
test
subl
repz
es
adc
in
repz
cmpsb
xor
lds
jmp
mov
xchg
fwait
mov
jmp
outsb
push
orl
outsb
mov
add
lcall
add
cmpsb
mov
fstps
cmc
add
insb
aas
cmp
call
inc
mov
or
in
mov
outsl
imul
sub
sbb
push
xorl
stos
inc
mov
sbb
or
xchg
or
scas
cltd
test
insb
dec
xchg
mov
mov
aas
pop
clc
test
mov
ficoms
jns
xchg
das
xor
lods
aas
loope
xchg
scas
ret
sub
out
stos
daa
mov
outsb
in
je
shlb
aad
orb
add
cld
into
rclb
or
jb
ret
jmp
icebp
xlat
mov
ret
lods
out
xor
jmp
sbb
mov
jno
pop
or
inc
or
lods
sbb
adc
test
imul
mov
ss
repnz
js
mov
xchg
out
mov
sbb
mov
test
inc
in
pop
pop
iret
mov
aaa
push
daa
and
inc
rol
imul
mov
and
jo
in
push
imul
inc
loop
xchg
leave
call
rcr
mov
sbb
inc
jb
and
movsb
in
cli
imul
dec
mov
cmp
iret
inc
fld
jge
and
sbb
stos
es
cwtl
andl
mov
adcl
cli
jge
call
inc
loopne
kxnorb
call
dec
sti
arpl
sub
pushf
and
adcb
shrb
push
hlt
add
fs
mov
add
mov
and
xchg
lcall
mov
push
dec
add
add
adc
es
rclb
lret
ja
cltd
push
or
lcall
mov
fsubp
push
nop
inc
outsl
sbb
jb
lret
ficoms
mov
mov
inc
data16
fmull
pop
jbe
shll
jb
imul
or
mov
mov
cmc
xor
push
arpl
add
jbe
lock
pop
jg
xchg
and
mov
shrl
jae
insb
or
clc
fs
shll
sub
sbbb
fstpt
repz
test
pop
icebp
cmc
and
lods
sbb
and
xor
jg
jge
sbb
inc
mov
js
dec
cmp
xlat
and
cmp
ret
ret
cmpsl
jp
jp
bound
jnp
shlb
pushf
xor
pop
popl
andb
iret
aaa
addl
mov
and
divb
cmpsl
fdivrl
inc
test
stc
and
add
sahf
xorb
popf
or
jg
xor
sti
jge
cwtl
jne
subl
adc
and
inc
dec
or
dec
cmc
jge
dec
pop
jecxz
jo
push
inc
pusha
add
test
lcall
out
sub
lods
fstpt
sbb
xchg
jp
inc
out
xor
scas
add
cltd
cmc
out
mov
stos
lods
jmp
cmp
rorl
xlat
inc
test
fiaddl
sbbl
mov
push
sub
pop
lret
mov
popa
lods
or
push
add
arpl
repnz
mulb
rcrb
pop
cmpsl
mov
add
sub
rcll
rcll
stc
les
push
mov
xchg
pop
sub
mov
shll
hlt
push
jge
adc
stc
insb
mov
mov
stc
pop
or
dec
mov
jmp
movsl
fwait
arpl
xor
aaa
mov
addr16
ficompl
outsb
bsr
test
cmpsl
sub
ficompl
enter
into
inc
mov
sub
mov
dec
bound
test
pop
call
adc
xchg
addb
pop
mov
adc
mov
sbb
andl
gs
imul
je
movsl
pop
push
aas
sbb
adc
jne
mov
test
insl
pop
or
lcall
iret
arpl
cli
cmp
ja
icebp
int
ja
aaa
xchg
ds
jo
aad
cmp
inc
shlb
xchg
je
adc
je
xchg
pop
push
jne
xchg
inc
mov
sub
movsl
mov
cwtl
cld
lret
aad
push
cltd
popf
pop
mov
lcall
mov
mov
mov
inc
jmp
jl
xchg
mov
inc
push
jnp
pop
jl
add
in
fwait
inc
jns,pn
jb
push
pop
push
daa
out
adc
loop
mov
xor
sub
add
hlt
sahf
inc
repz
or
jge
cmpsb
and
cwtl
sbb
xchg
push
jae
and
divps
xor
decl
sub
scas
inc
addb
in
pop
sahf
stos
xor
pop
push
sub
lock
or
aam
push
in
jne
ljmp
es
xlat
inc
in
scas
jle
cmp
cli
xor
lock
dec
push
imul
inc
mov
adc
lock
mov
andl
aas
sbb
adc
icebp
fsubs
mov
imul
repz
std
push
adc
push
inc
sbb
sbb
pop
mov
dec
and
fsubl
pop
push
mov
and
out
or
outsb
mov
out
mov
test
adc
adc
jae
add
mov
flds
leave
add
inc
inc
shl
fld
sub
inc
inc
popa
rol
lahf
xor
aaa
sbb
cmpsl
cld
in
inc
data16
xchg
cmpl
xchg
stc
sbb
ljmp
pop
sub
xchg
dec
xor
mov
push
add
in
jg
xorl
jne
cli
enter
jno
icebp
mov
lods
mov
mov
mov
cmp
in
int
mov
fildll
or
xchg
push
test
jo
mov
aam
dec
insb
cmc
pop
adc
inc
orb
mov
mov
mov
and
pushf
sub
hlt
xchg
sbb
jns
dec
mov
mov
adc
sbb
mov
jbe
lea
cmp
jecxz
inc
addr16
dec
fnstcw
jmp
mov
mov
push
adc
push
jns
popa
ja
mov
inc
or
add
sti
sbb
xorl
mov
adc
icebp
mov
xlat
leave
inc
pusha
out
outsb
adc
xchg
push
mov
cld
and
call
cmp
add
movsl
and
xchg
imul
jo
int
movsl
aaa
cmp
pop
mov
test
scas
inc
fwait
mov
aas
fsubr
mov
pusha
xchg
push
add
adcl
xchg
add
mov
xchg
mov
push
std
outsl
pusha
mov
jo
in
adc
xchg
jge
scas
ret
push
pop
cmp
inc
mov
push
cli
jecxz
push
movsb
insb
jbe
jmp
inc
into
push
fcompl
ja
inc
cli
lahf
andl
ret
mov
pop
or
mov
in
stc
pop
out
loope
sub
movsl
ret
jg
ss
sbb
js
adc
jecxz
fwait
fs
ret
lea
pop
push
lea
push
jb
fmull
clc
dec
inc
add
xchg
mov
in
pop
cmc
mov
loopne
jbe
mov
cmc
and
iret
scas
sbb
leave
in
dec
xor
jae
lcall
test
jns
push
push
movsb
daa
add
mov
and
in
fildl
and
imul
sti
aam
sub
repz
lea
aad
sbb
aam
mov
xor
insb
fidivl
sarb
out
inc
and
dec
sbb
nop
imul
loopne
into
and
adc
adc
jno
adc
roll
sarb
cmp
iret
aaa
test
and
cmp
xchg
cltd
sbb
inc
ret
or
icebp
in
adc
ret
sub
sbb
sbb
mov
sbb
outsl
xchg
fwait
test
inc
lock
cltd
mov
push
std
jmp
sub
fstps
pop
or
inc
das
loopne
cmp
pop
cwtl
add
mov
inc
push
inc
or
cmpsb
mov
inc
testl
test
and
xor
or
ja
mov
cld
repz
xor
and
adc
repz
rcrb
test
mov
dec
ret
lock
and
call
ljmp
aam
sbb
sarl
cmp
iret
jmp
andb
adc
and
mov
mov
stos
pop
add
push
sarb
add
iret
cmp
cmc
xchg
inc
out
xchg
pop
decl
nop
mov
jecxz
xor
dec
outsl
test
mov
test
cmpsb
push
mov
pop
add
mov
aaa
mov
faddl
or
ljmp
inc
imul
xchg
add
xor
inc
sub
mov
mov
ljmp
scas
fisttpll
outsl
dec
xchg
in
sub
lods
cmc
fsubs
in
mov
or
rcrl
es
xchg
sbb
mov
data16
cltd
lea
into
jae
mov
stos
mov
cwtl
jmp
pop
mov
or
or
popf
nop
mov
xor
pop
imul
jnp
push
stos
inc
fistpll
scas
iret
aaa
pop
jg
pushf
xor
test
xchg
and
mov
aaa
xchg
loope
lret
push
push
sbb
fnstsw
rcrl
fwait
inc
ljmp
cmpsb
pop
cmpsb
push
cli
inc
dec
sbb
or
push
frstor
or
or
push
mov
cmp
aas
xor
mov
inc
add
xor
xor
jo
mov
pushf
scas
sbb
adc
jb
out
movsb
pop
inc
ljmp
cmpsl
jg
sub
push
push
std
icebp
scas
push
sub
pushl
loop
inc
and
loop
mov
nop
shr
cmp
push
hlt
inc
std
cltd
push
sub
xor
lcall
jnp
mov
test
mov
fistpll
push
push
ljmp
inc
cmp
push
xor
fcmovbe
test
insb
ds
and
lods
mov
xchg
pop
dec
insl
loopne
inc
or
out
mov
faddl
ljmp
repz
fistpl
jmp
stos
out
mov
fisttpll
jp
cmpsb
test
sbb
inc
adc
inc
int3
fistps
xchg
adcb
mov
outsb
adc
scas
or
cmp
push
mov
pop
sbb
cmc
jne
push
pop
fisubrl
cmc
mov
or
insb
jbe
inc
add
sarl
sti
inc
dec
imul
lods
arpl
sbb
mov
jns
or
cmp
addr16
sti
jge
movsb
dec
movsb
fs
mov
pop
arpl
fs
adc
push
dec
xchg
cmp
iret
out
int
mov
dec
jge
repnz
xor
jne
adc
ret
push
insl
push
clc
xor
xchg
hlt
loop
mov
or
push
shlb
pop
dec
cmc
inc
jo
cli
in
mov
outsb
jne
dec
scas
int
mov
or
xor
pop
xchg
xchg
movsl
mov
insb
jl
inc
adc
mov
cli
cld
icebp
loopne
ret
out
push
std
adc
loopne
push
clc
call
sbb
sbb
xchg
scas
mov
adc
sub
pop
jmp
xchg
rcll
pushf
call
ret
jne
push
inc
fs
popa
pop
mov
jg
jbe
loop
inc
push
ud0
xchg
aas
xor
mov
cwtl
js
push
aam
dec
pop
loopne
aas
iret
sahf
jp
and
xchg
lcall
mov
imul
mov
scas
xchg
mov
mov
jae
out
icebp
enter
jle
lods
imul
xor
pop
mov
pop
sub
sbb
std
adc
hlt
fstl
lcall
fcomps
mov
lcall
adcb
sub
mov
adc
cltd
les
push
mov
lods
loope
repz
xor
cmpsl
loopne
mov
sti
pop
jl
lock
or
xor
test
or
sbb
mov
mov
loop
cmp
xchg
xchg
sbb
les
ljmp
xchg
fcoml
and
xlat
push
mov
cmpl
cwtl
jo
leave
adc
mov
xchg
push
pop
mov
loopne
add
mov
jno
in
jno
pusha
dec
jnp
fsts
xor
out
fstpt
jo
scas
notb
jle
add
sub
xor
and
ret
dec
test
loopne
pop
xchg
or
std
rcll
sub
inc
jmp
cmp
mov
cmp
lea
jno
inc
jae
push
sub
mov
insl
jmp
pop
push
pop
imul
aas
jge
int
jns
jecxz
insl
mov
cli
nop
aad
stc
add
repz
loop
sub
cmc
aad
jle
enter
pop
jns
out
outsb
jb
popa
jb
and
loop
lcall
or
sar
shll
lcall
xchg
add
cmp
and
sub
mov
push
and
sub
push
cmpb
dec
jge
in
xchg
lcall
jne
xor
test
and
jns
andb
push
aaa
mov
loopne
lods
call
jp
pop
addl
lret
mov
leave
mov
add
jno
ss
mov
arpl
inc
ret
out
imul
push
xchg
add
mov
xchg
mov
inc
daa
rolb
pushf
movsb
sbb
and
add
pop
mov
insl
inc
mov
popa
pusha
imul
sbb
sti
xor
adcl
or
jb
inc
hlt
scas
into
in
pop
push
xor
sbb
sbb
les
nop
push
mov
sbb
push
in
adc
cmc
inc
out
mov
fildll
push
int3
in
dec
out
dec
xor
in
mov
rclb
cmp
mov
mov
adc
add
lds
addr16
out
sbb
popa
mov
xchg
pusha
ret
and
jmp
pop
out
fwait
lea
inc
push
notb
js
shr
and
popa
jns
ficoms
int
fistps
dec
push
adc
ds
mov
dec
push
and
xchg
adc
in
xchg
mov
dec
scas
imul
test
add
jle
jmp
inc
push
ja
lret
out
fiadds
enter
popa
mov
dec
imul
lds
mov
cmpsb
mov
or
out
enter
cmc
ja
xor
xchg
mov
push
ret
and
jl
idivb
dec
xchg
inc
ja
cmp
ret
push
outsl
adc
std
test
adc
jae
int3
and
cwtl
out
sbbb
mov
mov
lahf
in
jno
movsl
mov
push
rcrl
lods
mov
pushf
push
loop
divb
stos
aaa
push
lcall
cli
xor
int
popa
mov
push
cmp
pop
test
stos
pop
aam
outsl
cmp
xlat
rorl
inc
push
daa
xor
push
xor
fwait
cmp
lret
insl
lcall
xchg
cmp
dec
sub
pop
inc
cmc
pop
stos
jmp
adc
cs
ffreep
sbb
lock
xchg
pop
int3
dec
cmpsl
div
xor
push
stos
sarl
popa
stc
add
imul
aas
mov
mov
dec
sti
rol
aam
mov
mov
fwait
bound
cmp
out
loop
xor
mov
movsb
les
cmp
jo
dec
enter
push
ljmp
decl
or
movsl
xor
mov
jbe
sub
mov
out
add
andb
jp
xor
popf
sub
leave
add
cwtl
movsb
add
rclb
cmc
loop
xor
inc
inc
dec
fwait
jp
jmp
cwtl
dec
pop
ffreep
push
popl
test
and
xchg
fldcw
cld
adc
insb
loope
cwtl
shll
xor
sub
js
or
in
mov
mov
lea
jge
mov
stos
lret
and
sbb
jl
pop
cltd
outsl
adc
sbb
cmp
data16
adc
pop
divl
mov
sbb
push
adc
inc
movsl
data16
mov
in
fwait
xchg
mov
movsl
jge
sub
popf
mov
pop
and
pushl
enter
lahf
clc
in
mov
ljmp
sbb
stos
gs
jecxz
lods
mov
push
jle
ficomps
repz
mov
mov
mov
adc
leave
mov
addr16
outsl
out
subb
mov
fwait
mov
mov
xchg
push
jmp
add
ret
lods
jne
sub
aaa
push
mov
push
roll
out
popl
jno
xchg
mov
out
pop
inc
mov
andb
clc
mov
pusha
lods
pushf
scas
fiadds
call
cli
mov
xchg
sub
jbe
pop
inc
mov
mov
loopne
lods
mov
jne
adc
inc
mov
or
into
xchg
stos
pop
push
mov
movsb
fcmove
je
lds
adc
xchg
push
or
mov
push
cs
cltd
adc
add
cld
push
push
add
xchg
ret
outsl
sub
andb
fimull
movsb
sub
xchg
jo
leave
dec
pushf
lea
and
mov
daa
inc
loope
cltd
divb
enter
push
lret
mov
mov
andl
mov
ret
mov
lcall
out
repnz
ret
push
push
pop
outsb
cmpb
inc
rol
pusha
cwtl
xchg
or
movsl
sub
mov
sub
sbb
adc
mov
xchg
push
daa
fcmovb
inc
xor
in
sbb
test
inc
pop
lret
or
aam
mov
loope
cmpsb
lods
clc
repnz
pop
lock
popf
cmp
fdivrs
push
fisttps
inc
sbb
lds
xorl
ss
jge
cltd
sbb
cmp
lret
out
xlat
fwait
push
xchg
mov
mov
jp
out
fucompp
jbe
lea
inc
dec
ret
mov
int3
xor
jp
mov
inc
stos
mov
sbb
xchg
sbb
lea
ljmp
fildl
pop
imul
mov
add
test
xor
sub
mov
fcoml
in
mov
sbb
lret
lret
outsl
out
sub
sbbl
jl
xchg
fprem1
imul
shlb
imul
das
nop
xor
jae
int
hlt
ret
insb
pop
pop
data16
mov
xlat
shrl
mov
add
or
pop
ja
add
fstpl
loopne
sbb
std
push
mov
xor
cwtl
rclb
andl
and
pop
xchg
rolb
lcall
pop
push
ret
inc
subl
mov
jmp
testl
inc
andb
lret
sbb
xor
inc
ja
fdivl
out
sub
shll
ss
pop
fcmovnbe
icebp
nop
jle
sbb
xor
leave
pcmpgtd
mov
not
mov
cmp
fcmovnbe
movsl
pop
or
repnz
test
push
mov
dec
dec
and
xchg
lret
jns
lret
lods
cmpsb
je
stc
push
mov
push
sbb
jae
xchg
negb
shl
dec
pop
mov
sbb
cmp
fidivrl
xchg
xor
pushf
das
jp
repz
push
xor
or
sbb
cmp
daa
jmp
cli
mov
fnstcw
sub
xchg
sbb
sbb
scas
js
inc
cmpl
inc
pop
lahf
cld
fistl
dec
and
dec
clc
push
mov
add
imull
push
mov
fwait
arpl
lahf
push
xchg
es
add
jns
call
das
and
cmp
xchg
scas
lock
loop
iret
cwtl
out
imul
mov
mov
es
xor
pop
jo
sub
in
push
adc
push
mov
test
stc
hlt
push
enter
mov
ret
jg
in
pop
or
or
ror
or
ss
orl
in
jbe
cmp
fmull
and
fdiv
jp
sbb
xchg
add
pop
pop
hlt
dec
xlat
dec
sbb
fldt
ja
sub
cltd
xor
popa
and
sub
add
or
pop
mov
inc
sub
mov
xor
jbe
lret
cmp
stos
jns
pop
test
inc
aaa
jo
xchg
insl
inc
shrb
in
jmp
popf
inc
jl
sub
les
adc
mov
rclb
mov
mov
adc
pushf
call
cmc
or
fsubrs
ss
ror
mov
jg
ficoml
xchg
shll
mov
inc
xor
sub
push
add
xchg
lahf
stos
push
jmp
lcall
inc
jmp
popf
decb
shrl
adc
cld
sbb
imul
mov
xor
mov
je
or
mov
push
or
push
jbe
iret
shlb
subps
fbstp
xor
stc
lret
pop
cmp
push
xchg
mov
test
loope
adc
sub
imull
sbb
data16
push
jmp
sub
imul
sahf
shlb
inc
lcall
jecxz
mov
sbb
push
outsl
filds
adc
mov
cltd
jbe
orl
or
dec
iret
push
insb
notl
jg
fcos
icebp
popa
or
push
and
mov
adc
inc
adc
movsb
dec
inc
es
ja
add
cmc
dec
mov
mov
fsubrs
bound
mov
je
lret
mov
cld
cmp
les
sarb
hlt
imul
fbld
rsqrtps
ja
and
adc
aam
cmp
pop
push
mov
call
push
addr16
sbb
orb
mov
gs
pop
nop
adc
repz
jnp
fwait
pop
or
aam
push
push
int
or
mov
cwtl
mov
inc
fcoms
orb
out
cmc
mov
adc
loope
push
and
adc
les
ljmp
xlat
xor
or
std
jge
aad
sbb
jno
or
jge
data16
jo
add
movl
cwtl
pop
loopne
jnp
xor
inc
pop
std
xor
repnz
sub
cmp
popa
lcall
xchg
adc
test
xchg
jmp
jp
mov
xchg
pop
addb
aaa
push
ljmp
add
stos
pop
cmpsb
inc
mov
push
mov
addl
mov
loop
stc
std
loope
lds
adc
daa
pop
shl
push
mov
incl
xor
faddl
push
mov
jmp
int
inc
mov
jno
cs
cmpl
decb
pop
nop
sub
and
jmp
mov
sahf
int
sub
into
xor
mov
xor
push
jecxz
pop
jecxz
aam
fucomi
mov
or
scas
cmpsl
jne
mov
jnp
xor
imul
iret
in
cli
or
dec
jns
pop
mov
ret
mov
jnp
cmpsb
lods
mov
test
orb
mov
jge
fldcw
sahf
fs
popf
and
push
movsb
xchg
xor
out
push
adc
mov
jmp
je
cmp
inc
aas
xchg
movsl
cwtl
inc
jle
outsb
sub
push
aam
mov
pusha
mov
bound
xor
push
mov
imul
ror
je
or
xor
outsb
ja
sub
das
mov
xor
iret
cli
xor
mov
roll
sub
mov
stos
fimuls
mov
cltd
pop
idivl
xchg
dec
in
add
lcall
dec
outsl
mull
movsl
push
mov
data16
mov
rorl
pop
mov
mov
stos
pop
jnp
jnp
hlt
add
into
push
mov
dec
stos
push
std
rorl
cmc
push
or
mov
push
inc
mov
cmp
rorl
ljmp
int
and
lds
inc
es
dec
je
dec
mov
into
inc
mov
movsb
adc
stos
hlt
pop
stos
cmp
xor
dec
ds
iret
into
insl
xchg
lret
inc
lock
or
dec
imul
push
stc
fwait
jg
sub
sbb
in
in
out
mov
lods
and
add
add
cmp
pop
sarb
xor
out
xchg
test
xchg
sbb
and
ds
outsb
or
clc
out
sub
push
or
lods
nop
dec
push
xchg
addr16
push
push
fcomps
pop
arpl
iret
push
push
aas
icebp
and
stos
inc
popf
or
cmc
popa
out
int3
rclb
xor
mov
dec
and
xor
call
push
dec
xor
nop
mov
insl
add
cmp
jne
pop
stos
jle
andl
nopl
mov
and
sti
in
add
insl
cmp
cmpsl
repz
popf
jae
lret
push
in
daa
inc
dec
or
sub
cmp
arpl
adc
or
insb
and
test
add
clc
mov
imul
aam
nop
loopne
adc
mov
xchg
xor
scas
adc
sub
aad
push
xor
nop
js
test
rorb
cltd
and
pop
in
inc
pop
push
repz
popf
fbstp
cltd
jg
mov
adc
sahf
mov
arpl
or
mov
test
mov
insl
je
add
movsl
lock
cs
shlb
and
adc
pop
and
jle
loope
cmp
inc
shll
pop
mov
sbb
inc
mov
shrb
call
xchg
xor
push
jl
repnz
mov
cli
das
stos
sbb
push
xchg
jp
cli
mov
add
pop
mov
notb
shrl
shll
dec
jae
daa
cmpsb
xchg
repnz
imul
inc
cwtl
test
dec
shll
mov
or
bound
loop
add
jno
mov
cli
dec
mov
or
pop
push
fnstsw
enter
filds
daa
mov
jb
lods
cmpsb
xchg
js
adc
stos
xor
mov
xor
pop
xor
add
stc
push
pop
jo
push
xchg
daa
or
test
or
call
fwait
push
or
sar
add
out
lock
push
cmpsl
add
xor
mov
mov
pop
dec
sub
push
js
je
out
sub
push
jp
mov
push
jo
adc
push
dec
push
mov
fdivrl
mov
cmpsl
jae
dec
in
push
pop
jp
pop
cs
orl
sub
out
jle
stos
icebp
cmp
fwait
push
aam
xchg
arpl
mov
ja
cmp
fistl
lds
mov
and
inc
movsl
dec
test
fiadds
adc
dec
or
lock
mov
js
mov
mov
testl
ficomps
orb
fdivl
add
mov
jnp
insl
pop
lea
mov
push
inc
test
stos
iret
cmp
cwtl
in
xchg
adc
sub
inc
or
push
loope
ja
push
xor
lods
cwtl
test
add
dec
aam
pop
jae
add
es
inc
ljmp
and
add
xor
loopne
out
mov
and
pop
pop
pop
jp
pop
mov
xchg
xchg
test
adc
outsb
push
xor
mov
push
imul
push
shlb
imul
pop
cmp
and
scas
repz
dec
add
shrb
sbb
insb
das
xor
lahf
ret
mov
xchg
jbe
push
pop
fst
fiadds
or
cld
cld
enter
es
push
dec
pop
pop
hlt
call
cmp
hlt
in
jb
test
sub
mov
movb
subb
xchg
aad
sar
jle
cli
lret
and
mov
add
pusha
pop
cwtl
sbb
push
in
lea
addr16
imul
mov
fxch
out
adc
insb
jns
push
mov
stos
pop
outsb
test
mov
xchg
lcall
addb
ret
adcl
sub
and
cmp
and
mov
pop
jbe
rcr
push
and
sub
mov
push
adc
cmpsl
xlat
jbe
and
aaa
ret
cwtl
xor
das
jne
xchg
jnp
mov
cmp
adc
jae
jno
es
repz
stos
xor
sub
inc
out
ss
xor
cmp
in
nop
mov
cmp
shrl
aad
fs
cltd
mov
les
and
jbe
out
or
les
dec
ret
xchg
icebp
mov
sub
shr
xchg
loope
cmpsb
xchg
fsubl
fs
aam
add
xorl
add
movsb
xchg
xor
in
cmp
mov
xchg
scas
dec
fwait
fs
xchg
fsub
data16
pop
sub
popa
and
sbb
or
shrb
xchg
mov
aas
cmp
in
fcomps
mov
lahf
sub
outsb
inc
jno
dec
xchg
jl
arpl
push
sti
lds
dec
dec
adc
and
repnz
pop
fs
popa
push
jne
sarb
mov
int
ds
pop
rclb
lcall
adc
in
jnp
addr16
cmc
shll
jg
fiadds
xor
xchg
cltd
push
adc
sbb
jge
jle
dec
adc
inc
int
jae
jb
jmp
cwtl
fstl
xchg
repnz
ljmp
iret
scas
cmp
pop
sbb
stos
cmpsl
pusha
orb
sub
xor
mov
imul
test
cmp
push
loop
pop
cmp
pop
jo
push
add
movsb
scas
dec
sbb
push
jnp
push
add
xchg
xor
xchg
cltd
lahf
mov
cmp
fldcw
addr16
push
mov
or
cltd
das
jecxz
push
sbb
cs
dec
jne
jge
xchg
fwait
add
push
dec
push
data16
push
mov
pop
outsb
mov
in
sti
sub
or
shll
repz
mov
mov
arpl
outsb
clc
icebp
out
stos
decb
imul
cli
das
addr16
xchg
out
lods
sub
insl
in
sbb
dec
push
push
pop
fldl
and
mov
push
and
popf
mov
inc
popa
sub
xor
xchg
or
dec
sub
rol
xchg
nop
adc
lret
popf
xchg
popa
xchg
jl
fwait
sub
out
push
mov
jecxz
aam
push
lret
sub
aas
test
call
fstl
lock
out
arpl
test
aad
adc
testl
mov
add
adcb
cmp
sbbb
pusha
std
stos
adcl
or
dec
cmp
mov
outsl
lods
shrb
sub
andb
push
ljmp
xchg
ds
and
inc
xor
jne
sti
dec
andb
out
adc
ret
cmp
outsb
jl
aaa
imul
ret
inc
stc
aam
ja
nop
clc
scas
pop
add
cmp
mov
jg
push
jae
scas
push
mov
and
test
jbe
lock
scas
mov
push
adc
mov
test
fimuls
xchg
test
or
xchg
and
and
mov
mov
repz
data16
pop
lods
jl
repz
cwtl
bound
out
pop
fildll
xchg
ficompl
inc
xor
js
mov
test
sub
in
push
mov
add
iret
lret
aas
call
push
or
mov
mov
mov
ss
jb
fs
sbb
mov
fldl2e
incb
jns
int3
int3
popa
cmp
aad
movsb
mov
or
aas
fidivl
popa
fistpl
mov
dec
dec
and
xchg
mov
pop
sbb
xchg
cmp
sbb
pop
fsubp
test
fisubs
mov
pop
xor
out
xor
push
hlt
inc
pop
lods
mov
ljmp
inc
loope
fnsave
inc
xchg
cmp
pop
pop
scas
jge,pt
clc
xor
cmp
mov
ficomps
cmp
mov
jl
leave
push
xchg
or
inc
xchg
push
jp
cli
frstpm(287
outsl
mov
xchg
or
bnd
mov
mov
movsb
out
push
popf
adc
iret
mov
cmp
loop
dec
mov
add
push
push
dec
pop
and
pop
push
pop
fcompl
inc
imul
pop
arpl
jmp
mov
jecxz
jo
leave
stc
ja
ljmp
call
out
jmp
jae
adc
xor
fnsave
mov
dec
lea
data16
hlt
mov
inc
push
movsb
or
popa
xchg
pop
cmp
fwait
movsb
add
lret
ret
outsb
lods
mov
mulb
dec
shrb
add
and
addr16
push
jne
inc
cmp
fsubr
aaa
mov
mov
sti
cli
jae
scas
aas
cmp
inc
jge
out
call
add
push
fcmovnbe
movsb
mov
daa
add
inc
movsb
dec
dec
and
out
enter
mov
and
pop
mov
sahf
add
fwait
push
bound
bound
call
enter
sub
sbb
mov
jl
sub
sbb
and
inc
adc
and
or
lret
leave
adc
test
stos
dec
push
xor
out
xchg
add
push
mov
das
xchg
hlt
inc
adc
jmp
sub
push
push
jl
subl
ja
cltd
sbb
mov
jne
mov
stos
std
frstor
bound
inc
lahf
pop
and
ds
stc
lret
add
mov
dec
dec
bound
incl
adc
mov
es
popa
jnp
shll
push
outsl
push
adc
hlt
jmp
out
or
ds
push
or
enter
and
aas
popf
pop
rcll
mov
jnp
jo
pusha
scas
mov
mov
sub
into
fadd
inc
outsl
and
inc
popl
adc
or
ds
pop
into
pop
fistl
cmp
call
loop
repnz
outsl
xchg
test
ret
mov
faddp
dec
xchg
std
cmp
sub
jno
mov
fs
inc
sbb
aas
fistps
orl
stc
mov
pushf
inc
dec
in
jae,pt
in
pushf
arpl
stc
hlt
jno
or
xchg
adc
push
add
int
lds
or
cmp
mov
notl
dec
cmp
nop
push
xlat
int3
imul
mov
mov
popf
addb
leave
fisubs
call
xor
outsb
add
stos
jecxz
inc
cmpsl
xlat
add
insb
mov
push
in
and
push
mov
mov
mov
or
lcall
lods
lret
out
rcrl
inc
in
fdivs
xlat
push
mov
ja
mov
jnp
adc
sti
dec
jp
and
push
xchg
dec
xor
lods
xchg
call
lds
jb
xor
jge
adc
lahf
dec
jle
cmp
ret
lods
jg
mov
out
nop
stos
lods
lock
dec
or
out
orb
sub
inc
xor
inc
out
repnz
sbbl
cmp
in
aas
mov
test
addr16
jne
notl
sbb
and
xchg
movsb
int
stos
and
cs
fisttpll
int
sub
jns
ss
push
leave
and
sbb
stc
push
je
mov
pushf
std
gs
jnp
test
ficompl
fisttpll
in
loope
xor
leave
add
fstps
dec
popf
lds
mov
inc
out
mov
out
jge
push
popa
aam
add
jnp
push
jecxz
xchg
insb
sub
iret
cmp
push
lahf
pop
test
cmp
sti
call
or
dec
push
pusha
data16
jbe
mov
dec
stc
inc
adc
std
imul
xor
adc
mov
repnz
roll
fnstsw
adc
cmp
lea
or
cs
xabort
push
je
inc
iret
dec
outsl
in
enter
mov
xchg
nop
outsb
in
jge
cmp
addb
dec
push
xor
sub
xlat
js
dec
sub
mov
cmp
stc
repz
in
xchg
jl
xchg
ret
mov
xor
cmc
or
fstpl
nop
loop
fnstcw
mov
dec
inc
jmp
mov
pop
jo
push
dec
out
push
mov
dec
pop
xchg
inc
sbb
push
xor
add
rcll
pop
push
imul
aas
stos
jno
or
add
enter
xchg
cltd
jge
enter
and
ror
iret
mov
xchg
sbb
aam
fidivrl
xchg
test
sub
movsl
lcall
or
or
fstpl
std
pop
mov
pop
icebp
in
scas
inc
push
ljmp
xchg
cmp
add
shll
cmp
sbb
or
mov
fs
adc
dec
test
in
subb
and
push
pop
dec
ret
dec
stc
mov
clc
insl
cmp
popa
icebp
stc
std
aam
inc
xchg
loopne
and
or
push
enter
xlat
jb
testl
lcall
add
das
dec
cmc
loope
lea
xor
fldt
jnp
jg
imul
fst
sub
test
cmpsb
lods
in
xchg
mov
sbb
and
mov
test
xlat
jg
xor
fwait
lahf
std
dec
mov
jp
mov
sbb
push
dec
and
jle
mov
push
clc
pop
mov
sub
in
pop
loopne
data16
push
add
dec
xchg
mov
rorb
enter
jb
xlat
ss
in
inc
std
pop
inc
movsb
in
inc
das
inc
bound
add
xor
loope
adc
push
fwait
mov
lret
js
jbe
in
nop
fs
sub
adc
test
jb
adc
mov
frstor
pop
test
js
xchg
stos
repz
mov
mov
jnp
cmp
addb
ret
mov
jne,pn
mov
xor
iret
mov
iret
dec
arpl
xchg
test
mov
fstps
out
sbb
inc
sbb
shlb
in
popf
or
cmpsb
dec
jg
mov
cmp
stc
por
mov
cmp
imul
loop
xchg
imul
sub
add
dec
xchg
add
imul
jl
xchg
popa
popa
arpl
cmp
pop
leave
and
fs
inc
xor
and
push
dec
out
sahf
popf
insb
sub
mov
mov
outsb
insl
sar
inc
sub
int3
push
pop
dec
mov
pop
mov
adc
sahf
or
lahf
fnsave
pop
imul
loopne
clc
popa
and
mov
cltd
shr
bound
pop
divl
mov
push
mov
xchg
jne
mov
xor
push
cmp
cmp
fwait
enter
add
faddl
adc
arpl
fisubrl
pop
fnstenv
xchg
loopne
xchg
cli
div
mov
sub
push
cmp
fidivrs
sti
stos
xor
cmp
mov
dec
fists
mov
mov
push
lds
adc
sbb
xor
and
dec
and
xchg
or
mov
inc
divl
es
mov
clc
xor
repnz
pop
adc
fidivrs
add
or
jl
lds
and
dec
or
aas
mov
jne
in
fbld
cltd
sbb
fimuls
cs
pop
mov
lahf
add
cs
jae
lea
aam
mov
in
inc
ss
sbb
add
or
inc
cli
sub
cmp
idivl
repnz
repz
mov
je
fsubs
inc
push
dec
clc
pop
xchg
xchg
add
mov
ja
jb
gs
mov
insl
icebp
fs
btr
dec
daa
push
icebp
inc
pop
mov
rcrb
fidivrl
data16
dec
rorl
sub
pop
loop
in
lret
scas
jns
or
aaa
jbe
mov
arpl
adc
test
cltd
xchg
into
hlt
pop
mov
push
add
dec
mov
enter
jg
pop
shrb
cli
clc
mov
nop
mov
push
cmp
aad
ret
pushf
mov
jmp
out
push
fimuls
test
jnp
push
es
daa
adc
imul
mov
push
in
pop
outsl
hlt
mov
mov
dec
icebp
push
ja
fnstsw
pop
scas
and
jo
xor
cmp
je
leave
cmp
and
cmp
and
or
ret
xor
cmp
in
fs
dec
mov
mov
icebp
adc
ds
xor
out
shrl
dec
dec
push
mov
into
pop
out
sbb
leave
dec
dec
popf
lret
push
in
cmpsb
adc
inc
pop
mov
imul
js
push
out
and
inc
dec
pop
out
push
nop
lods
mov
lock
sub
testb
push
cld
adc
in
and
and
cmpsb
xchg
jmp
sbb
inc
fs
mov
aam
sub
jecxz
xor
push
out
test
int
ja
jmp
cmp
idivl
jo
mov
sti
addr16
inc
jbe
es
out
nop
fildl
cwtl
and
icebp
insb
rolb
push
int
xorl
scas
testl
clc
popa
xor
adc
or
ficompl
xchg
adc
mov
xchg
and
cmp
addr16
popf
lea
decb
rol
pop
not
rorl
xchg
aas
stc
test
mov
lock
jmp
out
xor
je
icebp
rclb
loope
and
jae
jnp
jle
mov
les
subl
movsl
cmp
pop
in
mov
das
clc
mov
mov
in
mov
das
xchg
repz
sbb
mov
sub
dec
lcall
ss
or
leave
or
jo
sub
imul
std
inc
xchg
jmp
jb
dec
movsb
xchg
adc
sbb
shll
sub
addr16
xchg
fidivl
scas
xchg
mov
mov
das
dec
sbbl
fcmove
and
rorl
imul
mov
and
jp
rorl
pop
bound
or
out
imulb
pop
mov
mov
jae
in
push
gs
aaa
es
lock
mov
mov
dec
fwait
mov
inc
inc
mov
mov
jmp
fwait
iret
jnp
cld
and
out
sbb
xorl
scas
das
testl
inc
gs
das
or
mov
xor
in
ljmp
es
test
cmp
push
mov
push
mov
mov
push
sub
pop
jns
mov
jl
mov
jno
cltd
inc
das
dec
lcall
repz
daa
fisubrs
mov
dec
mov
xchg
mov
pusha
xchg
adc
add
outsl
mov
jmp
inc
sub
jbe
out
aad
jmp
and
dec
sbb
add
dec
push
int3
xor
add
xor
outsb
scas
sbbb
dec
adc
repnz
pop
cltd
mov
aam
lods
ret
pop
aas
stos
push
test
xchg
decl
arpl
and
push
sarb
fwait
lcall
mov
das
pop
cli
outsb
and
sbb
jno
mov
xor
jmp
imul
jp
and
inc
cmc
scas
fiaddl
mov
sub
add
mov
push
push
addr16
and
iret
sub
inc
fsubs
cwtl
add
rol
popf
outsb
push
int3
jge
xchg
fdivrl
mov
les
push
jecxz
jge
jle
xchg
aam
pop
fldt
sub
jg
jecxz
push
mov
out
mov
jecxz
xchg
hlt
int
inc
pop
fidivrl
or
and
xchg
inc
call
or
bound
push
sti
sub
test
repnz
out
bound
dec
xchg
andl
pushf
jp
push
fsts
push
loop
add
jg
ret
test
shrl
lret
pop
adc
xor
test
add
sub
sbb
push
imul
cmp
or
ja
dec
mov
xor
scas
xlat
pop
in
loop
les
xchg
jg
mov
lods
mov
xchg
aas
rolb
or
push
inc
popf
ret
or
xor
or
sub
enter
xchg
cmp
ucomiss
enter
mov
out
fisubrs
mov
inc
pop
mov
lcall
jnp
testb
int
daa
jle
pop
sub
popa
dec
jo
sub
das
fcomi
in
mov
pop
mov
dec
xor
arpl
dec
or
add
ja
lea
icebp
push
daa
inc
sbb
pop
shrb
xlat
mov
push
cmpsl
inc
movsb
sti
jns
push
lds
fadds
sti
dec
pop
mov
fnstenv
cmpb
pushf
cli
lret
popa
mov
test
xchg
mov
push
lea
insb
add
rorb
adc
xchg
outsl
bnd
movsb
in
out
or
or
adc
cmp
mov
sarl
jecxz
mov
aad
mov
pop
inc
dec
repnz
lods
and
movsl
mov
mov
jo
lret
mov
add
add
fwait
xor
test
sbb
cltd
adc
jbe
lcall
or
cld
in
sub
pop
ficoms
fimuls
push
insb
inc
test
or
rol
jg
mov
xchg
xchg
cli
xor
mov
out
push
dec
pusha
xor
or
ds
ret
push
jmp
add
hlt
pop
cmp
inc
ds
ds
mov
fisttpl
jmp
bound
lock
enter
fdivl
jb
sub
loopne
mov
in
mov
pop
or
sub
insl
mov
scas
mov
imul
pop
cltd
test
in
mov
icebp
in
shlb
add
jmp
stos
pop
jns
ja
xchg
mov
out
mov
shl
sbb
pop
and
das
mov
and
adcb
mov
lods
cmp
sahf
sahf
sti
fs
push
push
repz
shl
push
lds
aas
jle
push
dec
or
jp
ret
arpl
dec
xchg
jae
xor
outsl
inc
loopne
mov
push
adc
jmp
pop
jae
popa
inc
repz
fnstcw
mov
dec
xchg
and
in
push
in
out
sbb
incl
inc
and
outsl
xchg
cmp
sbb
dec
icebp
pop
insb
bound
scas
jp
and
lea
adc
jnp
frstor
sbb
fstl
orb
jmp
test
add
pop
or
sub
push
jnp
xchg
dec
cltd
jbe
mov
lea
into
jge
call
pushf
lahf
loop
sahf
jmp
dec
or
cwtl
add
and
push
ds
mov
push
mov
sub
sub
mov
cs
inc
sub
stos
fiadds
sbb
imul
inc
mov
jae
aad
dec
jge
or
mov
jbe
sub
or
or
inc
mov
adc
sub
mov
pop
sbb
push
out
pop
int
add
sarb
pop
mov
dec
push
mov
mov
mov
jp
loop
enter
jle
jp
xor
ret
enter
rcll
and
mov
lahf
jb
inc
and
or
scas
pushf
add
and
mov
inc
cmp
pop
pushf
shlb
pop
jecxz
aaa
ljmp
jo
stos
pop
mov
jecxz
scas
or
int
or
add
mov
push
inc
push
dec
inc
lods
andl
push
cwtl
push
add
cld
jne
cmp
insb
jns
pop
dec
sub
fnsave
fs
loope
rclb
movsb
xchg
xchg
mov
sub
mov
sub
mov
xchg
and
add
test
mov
fs
shll
imul
dec
shrb
ja
cmp
dec
mov
pop
shll
xchg
loopne
hlt
jp
mov
sbb
mov
shlb
imull
rclb
out
cmpsb
jbe,pt
mov
xchg
sbb
mov
add
movb
jno
sbb
mov
xchg
jae
lods
enter
push
jns
cli
fs
bound
jg
mov
jg
inc
jg
test
leave
xor
pop
mov
mov
dec
pop
or
add
js
cmp
test
xchg
mov
fpatan
cmpsb
fwait
in
mov
jle
lock
inc
stos
dec
fs
jp
fmul
mov
mov
sub
out
lock
adc
and
mov
pusha
aaa
mov
xor
xchg
fcmovnb
push
enter
xchg
aad
sub
adc
stc
push
jbe
sbb
mov
xchg
and
inc
outsb
xor
jae
pop
loopne
call
fisubrl
orl
mov
pop
ss
lock
imul
adc
mov
and
cmpsb
cmp
mov
or
mov
mov
inc
sbb
js
addb
mov
or
rcrb
fstpt
mov
pop
mov
jo
mov
shll
xchg
ret
jge
push
sbb
push
pop
pop
pop
lock
rcl
pop
or
aad
jmp
mov
mov
sti
jbe
sub
jo
movsl
and
inc
in
and
push
popf
insl
or
test
loopne
lods
and
sub
xchg
gs
gs
lods
cmp
xlat
nop
movsb
cmp
jnp
loop
push
scas
fstpt
add
mov
iret
dec
mulb
ret
fstp
or
mov
xor
cltd
xor
loop
movsl
push
fsubrl
imul
sti
jne
je
loopne
xor
dec
fwait
ss
adc
les
cmpsb
jmp
jmp
push
fisttps
aad
rcl
cmp
mov
mov
in
nop
mov
idivl
nop
sub
mov
call
ljmp
cmp
inc
jl
rorl
popa
pop
repnz
lods
call
imul
loope
addb
jbe
aad
mov
test
lock
test
dec
sub
daa
xchg
push
shll
dec
add
in
jp
fldl2e
lds
popf
stos
dec
shlb
in
dec
je
push
imul
sti
lret
mov
shll
fcmovb
or
sbb
fwait
cmc
out
je
ret
cltd
lcall
cmp
mov
and
and
mov
std
jno
jb
mov
xchg
pop
repz
and
test
xor
lret
ret
ss
repz
lahf
dec
mov
shr
je
adc
stc
loope
ret
sbb
fiaddl
sbb
lret
push
and
add
inc
icebp
les
nop
cmpl
es
add
cmp
or
cmp
cmp
or
out
pop
jno
sbb
scas
mov
std
cs
sub
mov
in
out
sar
pushf
imulb
xrelease
ljmp
pop
pop
push
push
jge
fisubrs
cld
inc
popa
push
test
lds
lods
sahf
fildl
mov
jne
cmp
pop
ds
aas
sbb
daa
sub
cmp
test
cmpsb
outsl
sbb
mov
push
mov
mul
add
xchg
inc
lcall
mov
int3
ror
jo
jne
bound
out
sub
xor
sbb
lret
xor
mov
or
test
mov
cmpsb
cmp
sub
scas
in
add
std
mov
loope
jnp
aaa
ja
or
leave
pop
inc
add
imul
add
sub
and
loop
mov
xor
shll
insb
in
mov
mov
sub
aad
popf
pop
pop
pusha
mov
int
out
or
clc
jnp
das
pop
lods
in
xchg
ja
xchg
push
or
dec
popa
mov
mov
test
push
xchg
dec
adc
and
arpl
pop
test
sar
pop
adc
mov
adc
jmp
push
xchg
mov
xchg
nop
outsb
jo
loopne
push
bound
and
test
rorl
xchg
adc
scas
test
sbb
jmp
xor
fistpll
mov
mov
mov
es
bound
inc
fstps
xchg
sub
adc
mov
or
call
jnp
testl
aas
and
scas
bound
call
rorl
sub
test
lock
and
out
sub
imul
xor
cmc
cmp
std
mov
je
jb
test
dec
pop
icebp
rorl
push
adc
push
mov
adc
iret
inc
arpl
inc
inc
addr16
dec
hlt
inc
nop
lock
je
shlb
add
ss
aad
insb
sbb
outsb
lahf
imul
jno
xor
rorl
fs
mov
adc
dec
outsb
push
sub
add
insb
in
mov
xchg
nop
sub
mov
movsl
jl
xchg
insb
mov
aam
sahf
in
inc
adc
movsl
in
jle
lret
adc
jle
dec
repnz
push
adc
dec
popa
jnp
insl
pop
sbb
call
aas
jo
gs
int3
push
andb
leave
stc
and
repz
sub
or
shll
enter
push
adc
mov
rcll
push
daa
sub
mov
rorb
test
mov
xor
fwait
adc
call
mov
pop
data16
cmp
call
pop
or
aas
shlb
push
gs
jle
sarl
loope
nop
inc
push
cmp
je
stc
push
hlt
xor
fsts
mov
jl
sub
lods
sub
loopne
jbe
push
clc
loopne
xchg
mov
popa
in
call
cltd
jecxz
push
sub
popf
xchg
inc
mov
cmpsl
fdivs
sub
addr16
xchg
fsubrs
or
mov
lods
mov
inc
or
cltd
lcall
nop
xchg
repnz
lahf
std
jnp
sub
fcompl
sub
pop
dec
test
pop
lcall
out
jns
shrl
sub
inc
or
mov
xchg
sbb
push
adc
push
in
inc
in
cld
ret
imul
adc
mov
mov
data16
stc
fstps
mov
pusha
cmp
push
sbb
xor
dec
inc
insb
pop
xlat
pop
jo
and
testb
out
imull
loopne
inc
mulb
mov
dec
push
mov
fcomip
add
arpl
ret
pop
std
or
pusha
imul
xchg
scas
push
mov
add
cltd
fisubrl
xchg
fsub
jp
xchg
fbstp
push
adc
clc
mov
andl
popf
inc
add
cwtl
out
xor
daa
or
fisubrs
jno
scas
clc
add
cld
or
add
mov
test
aam
mov
pop
fsts
pop
stos
push
out
ds
or
xchg
incl
mov
xchg
arpl
push
fnstsw
xor
out
bound
dec
pusha
int
sbb
repz
inc
and
movsb
sub
loope
fucomp
fs
mov
mov
in
push
loop
dec
sysexit
popa
scas
cmp
mov
lea
scas
movb
repz
popa
mov
js
out
dec
push
push
adc
cmp
lock
mov
pop
pusha
sub
jle
and
xlat
cmpb
cs
dec
dec
xchg
cmpsb
test
subl
test
sub
xchg
adcb
sbb
mov
mov
sbb
int
mov
push
push
inc
pop
dec
xor
sarb
inc
leave
add
ds
push
adc
daa
or
in
sbb
bound
in
fcom
jecxz
inc
add
jecxz
jg
xchg
jp
je,pt
popa
sbb
das
imulb
ja
cwtl
mov
aas
je
mov
xchg
push
lcall
mov
ds
adc
pop
pop
or
mov
cmp
fsubrl
hlt
sahf
mov
test
jmp
mov
faddl
inc
pop
sbb
inc
ljmp
xor
inc
push
jle
gs
roll
dec
inc
test
cmp
dec
xor
xor
push
cmpsl
xchg
ds
daa
outsb
inc
lret
or
jne
ret
int3
outsb
dec
pop
test
inc
dec
push
cmp
or
scas
cmp
nop
popf
pop
hlt
push
xor
in
int3
icebp
sub
pop
testb
out
inc
cmp
adc
in
icebp
sarb
xchg
jnp
lret
cmp
mov
jmp
imul
xor
mov
imul
dec
aaa
enter
pop
daa
push
push
xchg
inc
add
or
mov
jae
add
insb
filds
jno
test
adc
pop
mov
adc
hlt
popf
pop
js
pusha
pop
das
mov
aam
mov
cmp
aam
fprem1
dec
xchg
data16
mov
ret
push
jecxz
pop
xchg
dec
mov
dec
inc
mov
push
sub
xor
in
or
push
cwtl
mov
cmp
arpl
pop
pop
cmpsb
sub
sub
mov
ljmp
mov
cmp
rcrl
andl
pop
int3
sub
cwtl
dec
fisttpll
mov
mov
mov
popf
mov
push
xor
arpl
add
hlt
sbb
leave
mov
outsl
es
push
test
aaa
xlat
mov
push
stos
jne
data16
push
call
pop
xlat
int
pop
dec
mov
sub
popf
popa
inc
loopne
mov
call
loope
and
fs
subl
test
sahf
cmp
ja
cmp
mov
lcall
cmc
pop
test
sub
pusha
add
std
lock
lcall
jmp
sbbb
lcall
icebp
jno
mov
adc
xor
andb
subb
add
inc
push
jae
inc
pop
jp
loopne
push
aaa
rolb
lock
push
or
std
mov
inc
inc
pop
dec
out
push
clc
jge
xchg
push
xchg
fcomip
pop
imul
xchg
push
mov
add
add
or
mov
jp
mov
lods
dec
mov
xchg
dec
and
xchg
enter
cld
pop
sbbb
cmp
cli
mov
addr16
push
inc
es
and
mov
lcall
cmp
test
in
and
xchg
cmpsl
into
outsl
shll
outsl
aas
je
pop
jp
add
jmp
jmp
cs
int3
add
test
cmpsb
sub
sbb
push
int3
sbb
mov
ret
xchg
adc
cmp
push
outsl
xlat
cmp
lds
daa
in
jle
imul
inc
lcall
stos
arpl
mov
pop
push
ss
test
mov
xor
rcrl
ljmp
lgs
testl
pushf
aas
push
xor
sti
lea
imul
push
xchg
repnz
cmp
adc
push
fcmovb
int
push
rcrl
fucom
das
jp
mov
js
inc
pop
sub
mov
pop
test
test
leave
cmp
cltd
lret
arpl
arpl
mov
sub
in
insb
adc
adc
adc
xor
adc
inc
jbe
pop
add
mov
pop
ret
sbb
imul
test
xlat
imul
inc
xchg
sub
enter
inc
xrelease
sub
jecxz
mulb
cltd
xor
mov
or
and
push
sbb
add
inc
sbb
cmp
ja
data16
lds
iret
repnz
dec
dec
sbb
fldcw
rcll
dec
sub
js
xchg
pop
adc
lods
iret
push
enter
jae
jge
movsb
cmpsl
mov
push
bound
sub
lods
scas
push
pop
dec
cvtdq2ps
pushf
pop
imul
lods
mov
movsl
popf
divl
mov
rorb
dec
jbe
jp
cwtl
add
inc
xchg
in
mov
out
add
add
cmpsb
clc
cwtl
and
xchg
divb
inc
addr16
call
add
andb
mov
test
int3
fidivs
call
xor
jnp
outsl
jl
imul
jns
inc
in
je
ss
push
hlt
add
popf
cmp
in
push
sub
call
sti
mov
jnp
call
jo
jns
jecxz
add
mov
arpl
sbb
icebp
inc
cmpsl
pop
movsl
jns
cli
enter
jbe
cmp
add
repnz
imul
aam
or
scas
and
rorb
lods
jbe
mov
lock
fs
dec
sbb
or
adc
lods
and
or
lcall
jo
sbb
clc
pop
addr16
sub
mov
inc
dec
mov
in
push
lock
push
out
dec
dec
inc
es
xchg
sub
or
xor
push
cmp
imul
inc
inc
push
dec
data16
pushf
mov
adc
push
sahf
push
adc
inc
mulb
jecxz
outsb
mov
mov
cld
inc
jg
loope
jns
std
mov
mov
fmul
inc
cli
xor
das
roll
xchg
xor
les
push
xlat
imul
mov
and
jne
inc
inc
jg
call
sub
dec
xchg
adc
loop
fsubs
inc
mov
dec
add
clc
in
mov
xor
and
adc
clc
and
cmp
dec
push
lret
mov
xchg
jg
sahf
call
cmp
push
dec
jb
pop
scas
cmc
rol
bound
xchg
dec
sti
and
xchg
in
push
adcl
ss
arpl
cli
loop
mov
in
lret
out
in
inc
ja
and
and
in
loop
and
push
outsb
nop
mov
push
testl
inc
aas
or
mov
xchg
cmp
cmpsb
jg
mov
fsts
out
sub
enter
gs
lcall
or
xlat
test
ljmp
mov
mov
mov
sub
mulb
cmp
mov
adc
fs
jno
imul
xor
xlat
adc
push
cmpsl
ljmp
dec
das
pushf
jnp
and
mov
xor
out
enter
insl
sti
shll
lret
jecxz
mov
dec
add
je
iret
mov
in
add
xchg
neg
movsb
xchg
mov
pop
aaa
jo
scas
mov
scas
add
pop
movsb
bound
xchg
xchg
pusha
or
push
pop
pop
or
jp
sub
push
mov
pop
sub
shlb
dec
repnz
or
inc
mov
cli
add
movsl
pop
sbbb
ds
outsw
fprem1
sbb
dec
out
cmpsb
cmp
es
xchg
add
jmp
xor
xor
sbb
jge
sbb
pop
out
neg
out
repnz
test
fidivs
lock
sbb
std
cmpsb
inc
mov
aaa
jnp
aaa
add
adc
push
ret
rcll
imul
mov
inc
pop
in
adcb
add
add
scas
pop
rorl
jmp
je
xchg
jle
adc
cmpsb
out
pop
hlt
repnz
outsl
into
cmpb
dec
and
sub
inc
movsb
mov
add
sbb
push
push
fwait
push
push
loope
aas
push
pusha
add
push
cltd
fnstsw
lock
xchg
lcall
lea
addl
leave
mov
lea
add
cli
lds
push
pop
sub
pop
popa
pusha
test
outsb
sub
pop
mov
into
mov
cmp
dec
gs
mov
pop
or
loopne
mov
iret
jmp
add
xchg
add
jnp
hlt
mov
in
sub
bound
dec
fistps
fdivl
fiaddl
push
mov
xchg
rcrl
sbb
mov
mov
in
mov
or
xchg
add
clc
adc
inc
mov
out
es
sbb
xor
push
ds
test
enter
mov
orl
or
jns
or
sbb
push
pushf
movsb
pop
mov
pop
cmpsl
sub
popf
adc
iret
inc
push
mov
xor
sub
jmp
add
jg
rcrb
pop
call
sbb
stc
push
jecxz
sbb
into
bound
or
mov
sbb
and
dec
jo
sub
xlat
mov
lods
xor
aad
jl,pt
sbb
xor
mov
pop
je
aaa
test
adc
and
outsl
insb
dec
jae
sbb
inc
sub
loop
daa
jb
cwtl
mov
call
mov
test
cwtl
push
push
stc
push
insl
mov
adc
jo
ret
xor
xchg
add
pop
lcall
ret
xchg
mov
jne
pushf
imul
mov
fmuls
in
cmp
test
sub
add
fwait
mov
push
out
mov
push
into
pop
call
fdivs
or
cli
imul
push
sti
mov
inc
mov
xchg
and
mov
push
and
mov
fs
cmpsb
popf
es
xor
push
je
mov
push
mov
xor
addr16
out
cwtl
fxtract
jl
inc
loopne
mov
in
xchg
jae
into
or
mov
mov
filds
xchg
push
outsl
in
movsb
jns
jp
imul
xor
adc
pop
mov
inc
in
inc
bound
jp
and
pop
popf
mov
mov
iret
xchg
sbb
popa
cmc
mov
xchg
pop
test
lock
mov
mov
ret
mov
lahf
out
outsb
js
pop
test
js
mov
mov
inc
or
movsb
pop
mov
pop
clc
push
jmp
xchg
lea
mov
loopne
int
in
inc
in
das
ret
mov
pop
mov
pop
lret
jbe
push
inc
lea
jbe
cltd
mov
add
or
test
dec
push
rol
dec
fisttpll
jge
roll
rolb
mov
and
jmp
xchg
dec
test
cwtl
idivb
popa
in
jne
cmp
cmp
mov
es
push
xchg
and
mov
xor
cmp
and
push
test
add
fildll
inc
loope
xor
sub
lea
xor
repnz
jb
jbe
dec
ljmp
add
mov
into
popf
popa
dec
mov
mov
iret
dec
push
out
gs
sbb
clc
mov
lods
dec
out
xor
cmp
loopne
lcall
mov
aam
ret
xchg
stos
mov
adc
nop
dec
fistl
pop
sub
cld
jecxz
jecxz
out
out
js
push
mov
das
xchg
mov
cld
aad
add
mov
push
mov
add
inc
sub
sbb
sub
repz
movsb
push
cli
sbb
xor
mov
icebp
gs
addr16
add
xchg
lret
dec
push
lock
mov
push
mov
shll
es
adc
sti
sub
fwait
insb
nop
xchg
fisubs
mov
jno
shlb
and
jae
lea
push
sbb
leave
dec
nop
jecxz
and
pop
add
int3
scas
clc
xor
and
sub
mov
icebp
nop
xor
jnp
sarl
push
sbb
jle
and
pushf
mov
sub
jb
xchg
pop
pop
dec
pop
pop
ret
scas
aad
nop
ja
adc
xor
fnstcw
rcl
inc
loopne
rol
lds
je
mov
sub
int
pop
adc
push
mov
add
dec
in
push
cmp
iret
jno
out
je,pt
rcl
es
call
rep
subl
in
and
cmpsb
xor
icebp
sbb
es
lea
imull
imul
jbe
adc
mov
ror
mov
int
jle
mov
mov
push
iret
dec
insl
mov
dec
adc
push
cltd
jge
push
sbb
mov
and
stc
sbb
adc
shl
jmp
xorb
push
push
sbb
lret
decb
clc
cli
xor
push
dec
sub
mov
sub
lret
push
and
mov
cmp
inc
pusha
mov
and
cmovns
subl
push
inc
adc
sarb
int3
in
movsl
dec
and
mov
push
pop
ss
insl
push
or
shlb
pop
es
test
and
push
fadds
clc
xor
or
cmpl
jg
add
sahf
xchg
pop
mov
pop
xor
icebp
jno
pop
movl
mov
adc
push
jle
or
rclb
and
adc
push
jnp
loop
hlt
gs
and
mov
jmp
mov
mov
xor
inc
add
movsl
inc
jmp
lret
sbb
xor
jp
loope
ljmp
repz
out
das
in
add
test
sub
not
dec
sbbl
sbb
shll
pop
inc
ret
sub
add
push
outsb
pop
popf
enter
iret
cmpl
dec
push
lea
je
ud2
jnp
cmp
adc
push
stos
pop
imul
ds
add
movsb
stos
push
ret
lcall
sbbl
or
inc
aam
push
inc
cmpsb
outsb
cwtl
mov
add
in
push
fldl
inc
sbb
mov
fdivs
push
xor
mov
test
and
sub
pop
pop
loope
stos
sbb
add
ljmp
pop
test
iret
push
rcr
xchg
outsb
cmpsl
mov
xchg
jnp
and
popf
mov
add
or
out
sbb
imul
enter
adc
mov
daa
movsl
stc
int3
pushf
xlat
inc
jle
xchg
jbe
movsl
js
outsb
or
int
aaa
lret
out
xor
mov
call
sbb
aad
mov
push
pop
sarl
mov
mov
dec
fisubrs
std
jle
test
sbb
push
xor
clc
cs
or
add
xchg
dec
cmc
mull
mov
jo
mov
in
xor
leave
and
pop
out
mov
push
and
mov
pop
hlt
shlb
jne
mov
push
mov
stc
lods
fidivl
pop
std
xchg
jne
push
loopne
and
push
sbb
push
or
ja
add
dec
cmpsb
imul
inc
leave
mov
imul
int
das
out
out
pop
std
mov
mov
xchg
ja
out
xchg
cmp
push
and
cmp
cmp
cwtl
iret
xorb
cmc
lock
fcmovne
imul
mov
nop
and
data16
lea
sbb
pop
shlb
jne
xor
cltd
or
jno
jnp
and
pop
xor
push
loopne
mov
inc
dec
std
dec
rcrb
mov
or
or
loope
dec
shlb
mov
pop
cmpsl
shr
or
sbbl
ja
mov
fwait
jbe
aad
add
and
jg
inc
xor
clc
mov
cltd
jbe
push
xorl
jae
mov
popa
addl
push
pop
pop
xchg
cmpsl
sahf
dec
int3
test
cld
fistps
and
int
popa
jl
xor
adc
xchg
sub
jl
xor
xor
out
sbb
iret
pop
push
add
xchg
push
out
jnp
aaa
lret
into
les
loope
mov
and
jnp
jne
inc
mov
xor
in
testb
shlb
sub
xchg
mov
loope
xchg
add
adc
and
stos
lret
push
mov
cmp
aas
in
test
pop
int3
cmp
mov
dec
or
aam
hlt
subb
imulb
lahf
mov
mov
popa
dec
inc
les
out
std
repz
cmp
ret
mov
pop
add
stos
loop
data16
fildll
cmp
out
mov
xorl
stc
xchg
mov
fwait
sub
mov
sub
xchg
sbb
push
loope
push
jecxz
fisubs
xchg
pop
mov
scas
sbb
pop
pop
jnp
xlat
pop
xchg
test
aaa
test
add
inc
push
pop
push
mov
in
loopne
xchg
xor
jge
cmp
aas
cmp
out
scas
popf
and
fadds
mov
sub
fs
mov
mov
push
stc
mov
sbb
pop
pop
push
xchg
leave
cmp
jns
adc
fwait
or
pop
xorl
jbe
or
dec
jbe
js
shrl
fnstenv
sbb
mov
in
stos
pop
sti
mov
xchg
mov
lods
rol
cmpsl
or
pop
lcall
lods
xor
jmp
leave
xchg
int3
add
mov
adc
adc
mov
xor
sbb
pop
jle
sub
pop
sbb
pop
ret
inc
in
xchg
shll
sub
insb
dec
fsubp
jo
sub
repz
sbb
mov
test
add
mul
scas
stos
push
sti
call
sbb
scas
pop
cmp
sbb
out
cmp
lret
xor
leave
mov
mov
jnp
nop
adc
or
mov
mov
lret
and
fs
pop
xchg
jl
push
or
das
and
push
sti
lock
pushl
sahf
pusha
and
xor
imul
cltd
aam
daa
cmp
out
jb
lds
cmpsl
jnp
dec
mov
dec
outsb
loope
mov
mov
gs
cmp
jecxz
xchg
insl
lods
mov
mov
fcoml
mov
gs
xor
aad
or
mov
mov
int3
dec
xchg
and
into
movsl
add
pmaxsw
iret
nop
jbe
push
je
mov
or
or
shlb
cmp
mov
push
fisttpl
arpl
int3
pop
xor
test
xorl
mov
adc
inc
add
and
pop
shrl
sarb
xchg
mov
mov
sub
and
jns
fisttpl
mov
call
leave
ljmp
push
dec
je
test
test
sub
mov
add
add
inc
mov
dec
push
jge
inc
pop
loopne
sub
inc
add
mov
or
fwait
jp
xchg
mov
lcall
iret
in
mov
add
adc
test
je
cld
sub
jo
cmp
out
inc
jne
mov
lds
adc
cmpsl
shl
or
stc
mov
dec
pop
cmc
xchg
ret
stc
cltd
movnti
shlb
xchg
addr16
cmp
sub
dec
mov
lds
cmp
inc
test
pop
mov
inc
jne
xchg
pop
add
addr16
cmpl
mov
add
je
sbb
je
imul
mov
rol
aas
fcoms
inc
test
and
pop
addr16
cmp
in
jnp
aas
or
test
cmp
rorb
and
xlat
xlat
gs
mov
shrl
subl
data16
and
stos
test
outsb
jle
popf
or
xchg
mov
mov
pop
mov
jge
imul
icebp
in
aas
dec
sbb
sbb
mov
adc
ds
sbb
xchg
inc
mov
je
inc
mov
jne
clc
xor
push
pop
js
push
sub
mov
cmpsb
test
sub
push
xor
xor
xchg
sbb
imul
xor
push
ret
sub
leave
jecxz
loop
pop
cmpsl
loop
add
lods
leave
lahf
decb
repnz
cld
mov
daa
imul
into
dec
adc
sub
and
sub
or
pop
or
leave
andb
cltd
loope
pushf
test
test
aaa
sarl
push
les
pop
into
aas
xor
cmpsb
push
inc
pop
popa
aas
hlt
sbb
sbb
filds
pop
xor
cltd
lods
pop
jae
stc
out
stc
and
push
and
fldt
jo
lods
icebp
mov
add
ret
popf
gs
or
cmpsb
pop
adc
pushf
add
shr
jl
xor
cs
cmp
push
sbb
das
bound
or
lds
xchg
pop
mov
dec
jnp
sbb
test
pop
out
ret
lods
repz
and
xchg
mov
pop
adc
jo
fwait
xchg
dec
sub
dec
loop
scas
cmpsl
js
test
aad
cmp
xchg
jg
sti
pop
mov
sbb
lcall
sbb
repnz
or
stos
adc
les
frstor
lret
mov
or
pusha
shll
pop
mov
push
in
rorl
xchg
pop
mov
insl
out
mov
loopne
sbb
xchg
mov
gs
add
cmp
aas
pusha
mov
pop
in
cmp
das
jecxz
xchg
gs
jo
jbe
jmp
fsub
add
fwait
add
jge,pn
into
adcl
rclb
dec
aas
lods
pop
arpl
and
pop
push
cmpxchg
testl
push
aas
fsubs
scas
pop
add
pop
mov
push
dec
push
dec
jns
xchg
cmp
add
adc
faddl
inc
das
push
aaa
inc
dec
orl
adc
sahf
insl
dec
jo
lcall
or
pushl
pop
aam
loope
out
dec
imul
addr16
mov
call
adc
and
push
imul
cmc
add
add
add
shll
lret
xchg
and
inc
mov
mov
movsl
inc
aad
outsl
dec
lcall
mov
pop
mov
das
fcoml
push
stc
sub
xor
test
inc
fwait
cltd
dec
sti
aad
or
lods
enter
insb
dec
push
mov
stc
fcoms
in
or
or
js
xor
pop
out
cmpsl
fsubs
out
mov
je
adc
jmp
xor
jecxz
push
sub
adc
das
jbe
clc
push
mov
repnz
mov
jle
outsb
outsl
xor
cli
lcall
jg
hlt
pop
and
push
jl
and
out
mov
shlb
fcmovne
xchg
or
jecxz
xchg
popa
repnz
dec
fcmove
pop
sub
clc
mov
inc
push
cmp
or
cmc
sub
dec
aas
xchg
out
cwtl
xor
rol
out
cmpsb
fnstsw
push
adc
lods
dec
leave
mov
ljmp
popa
popa
pop
ljmp
xchg
jnp
mov
mov
xchg
mov
mov
cwtl
cmp
mov
push
mov
cld
dec
mov
xor
in
sbb
out
and
cmp
in
dec
mov
nop
adc
jb
sbb
xchg
mov
or
mov
push
popa
push
fists
je
xchg
pop
into
mov
sub
outsb
or
in
or
call
das
jp
add
call
inc
xor
dec
xor
sub
out
sahf
sub
enter
fiadds
divb
inc
fs
dec
imul
test
sub
pmaddwd
aad
pusha
ret
mov
rclb
jmp
adc
loopne
lahf
xlat
mov
mov
pop
inc
fwait
add
sub
pop
pop
lret
ss
cmp
js
mov
xchg
out
and
out
mov
cli
xor
sub
push
mov
sub
cli
test
dec
adc
scas
int
and
mov
and
pusha
add
sbb
cli
scas
shll
push
xchg
or
outsl
push
jp
ret
bound
loopne
cltd
push
or
scas
movsb
mov
fs
pusha
cmp
lahf
push
popf
stc
and
pop
popa
inc
mov
leave
mov
popf
mov
jne
leave
mov
inc
mov
inc
daa
insb
pop
jns
iret
ret
popa
dec
icebp
or
aad
in
mov
aas
pop
mov
test
movsl
addr16
in
bound
pop
pusha
mov
pop
mov
in
rcrb
leave
jmp
clc
fidivrs
icebp
je
jbe
cwtl
sub
jmp
out
adc
jmp
inc
inc
push
repz
pop
hlt
xor
push
mov
arpl
mov
sub
subl
sti
or
das
mov
xchg
pop
loop
jl
jge
insl
sbb
ds
lods
mov
lcall
or
sahf
shr
rcl
push
sub
in
pop
xchg
mov
addr16
fucomi
xor
mov
fistpll
scas
lods
rorb
adcb
xchg
mov
aam
movsb
cmp
mov
jge
int
cmp
into
sub
adc
ss
rclb
pop
mov
push
mov
inc
loop
mov
mov
lea
cmp
lahf
test
xchg
es
sub
ret
or
or
mov
ret
xchg
add
pop
or
mov
adc
lret
jge
xchg
out
hlt
jecxz
jge
xor
mov
add
out
jb
loop
pushf
in
add
mov
bound
ss
or
pushf
pop
xchg
fsts
jnp
cmpsl
push
negb
mov
nop
mov
pop
inc
rcrb
mov
xor
jns
add
jne
in
mov
cmpsl
jne
repnz
inc
mov
push
jge
int
repz
fisttpl
push
pop
lds
sub
mov
pop
push
inc
inc
test
pop
lds
xchg
cld
iret
test
mov
push
jae
ret
sbb
or
daa
cwtl
mov
dec
rorl
movb
mov
inc
adc
add
fsubrs
or
iret
ja
lahf
push
sub
inc
ficoml
test
cmp
or
rol
lods
sahf
fisubrl
gs
hlt
mov
ja
fisubs
or
jp
jno
xor
lcall
or
stos
shll
out
stos
adc
or
inc
push
lock
pop
out
dec
lret
add
icebp
dec
divb
fmuls
cld
ljmp
loopne
out
aas
pop
cmpb
rorb
mov
sbb
hlt
pop
sbb
daa
inc
adc
loope,pt
shll
mov
lret
aam
stc
xor
popa
rcll
iret
dec
jle
and
nop
sub
xchg
cmp
arpl
pusha
dec
mov
hlt
dec
push
adc
inc
sbb
rol
addr16
addb
mov
arpl
imul
jno
lds
pop
cmpsl
cmp
inc
sti
fdiv
mov
lock
cltd
sub
and
mov
and
mov
push
rcll
lret
in
or
xlat
test
ja
push
jmp
jo
cli
popa
xor
mov
pop
das
aam
sbb
mov
lods
jne
pop
lret
lahf
cmp
leave
xchg
ret
cmp
cmpsl
mov
ds
fdivp
pop
mov
mov
aad
mov
ret
and
adc
andb
sahf
out
stos
dec
int3
or
fdivp
push
dec
mov
cmp
ret
inc
out
dec
sub
std
jne
scas
mov
nop
imul
jmp
inc
insb
and
scas
inc
sbb
push
scas
ds
pop
pop
ja
lcall
cmpsl
pop
dec
inc
shlb
insl
xlat
mov
cld
xor
cli
pop
or
into
fs
adc
movsb
ds
jo
roll
sbb
sub
sbb
cmc
mov
inc
mov
push
in
cwtl
xchg
out
fs
mov
loop
lods
or
xlat
jmp
pop
and
jno
mov
push
xchg
shlb
ret
das
mov
jg
ss
mov
mulb
push
push
mov
adc
lret
out
mov
test
cli
xchg
and
dec
fistl
mov
insl
mov
adc
imul
rcl
mov
popf
mov
mov
das
adc
in
pop
inc
push
test
cld
aam
mov
and
jge
pmullw
push
mov
ljmp
es
jmp
popl
outsb
add
or
cmpsb
stos
xor
sbb
xor
adc
and
xor
jnp
jne
dec
mov
xor
dec
and
cli
jmp
mov
movsl
cld
cli
les
xchg
fpatan
push
sbbl
dec
call
xchg
pop
xor
repnz
ljmp
test
mov
and
mov
mov
sbb
rorb
std
bound
out
xchg
mov
cmp
shrl
pop
mov
or
in
adc
cmp
mov
or
cli
pop
sub
imul
jecxz
cltd
into
shrl
outsb
negb
or
mov
sub
addb
fptan
adc
xor
adc
in
cmp
or
andb
daa
push
inc
mov
jl
frstor
xchg
xchg
ds
push
push
cli
inc
and
mov
push
popf
sbb
inc
pop
add
xor
imul
lods
sbb
rclb
lock
xchg
movsl
or
testb
push
mov
das
imul
gs
out
mov
xor
mov
leave
push
xor
cmpsb
out
insl
lock
inc
jecxz
dec
xchg
into
lea
inc
jl
ret
mov
or
ljmp
jno
adc
jge
sub
ret
int
insl
outsb
pop
pop
jne
cmp
aad
and
xlat
fsub
mov
pop
repnz
fcomi
or
or
inc
ja
mov
cli
xchg
std
aad
pop
push
xchg
cmp
dec
inc
sar
adc
mov
ljmp
js
pop
adc
lds
sbb
dec
sub
jle
add
pushf
sub
sub
push
int
in
sub
mov
mov
jecxz
ljmp
xor
or
lret
xchg
add
enter
adc
jle
sub
jne
in
test
rcr
je
mov
push
mov
aad
cltd
add
lahf
das
int
outsl
pop
fwait
inc
popa
mov
pop
dec
das
fdivp
inc
call
lock
push
lret
mov
or
jg
cmp
scas
adc
cmp
mov
ja
dec
and
sbb
mov
mov
into
jb
dec
hlt
sti
ret
fcompl
sbb
mov
add
cmp
imul
sub
mov
cmp
mov
sbb
push
add
loopne
mov
xor
scas
xor
cmpsb
sbbl
xor
hlt
arpl
rcll
sub
lods
jbe
add
ret
test
in
mov
mul
mov
pop
enter
in
aas
cmp
loop
sarl
or
gs
and
cltd
mov
in
loopne
pop
mov
cmpsl
movsl
mov
out
xchg
scas
cwtl
test
ljmp
nop
outsl
mov
pop
cmpsl
sub
xadd
mov
addl
lods
sub
out
jnp
cmp
adc
lahf
mov
cli
and
and
xchg
out
mov
sbb
push
clc
xchg
fimuls
jle
test
push
pop
inc
bswap
push
xor
xor
popa
adc
lds
test
mov
mov
mov
ljmp
cld
cs
cld
shrb
mov
lea
cli
inc
cmp
insb
movsb
push
repnz
bound
aas
inc
roll
sub
push
test
nop
adc
adc
pop
xchg
xchg
aam
popa
mov
imul
or
out
mov
jnp
xlat
xor
push
fsubrl
xor
mov
test
shl
pushf
push
test
cmp
stos
and
jg
lea
or
mov
aas
pop
test
addr16
clc
out
addr16
pop
shr
cmp
sti
testl
dec
and
movsl
lahf
push
lret
loop
call
push
fnstenv
jno
lahf
or
bound
push
jns
mov
jo
xchg
popa
xchg
inc
sbb
sti
or
enter
mov
mov
stos
pop
rorl
push
cmp
imul
cwtl
clc
out
leave
or
sarb
inc
aas
out
bound
mov
jne
in
xlat
mov
lea
nop
je
lahf
mov
cmp
leave
mov
mov
sbb
add
xchg
daa
int3
fwait
xchg
and
mov
cmp
xor
fwait
adc
fs
cmp
inc
sub
clc
loopne
mov
orl
inc
push
add
mov
push
jne
scas
sub
arpl
lret
push
int
jae
aas
nop
ss
mov
lods
ret
dec
ja
mov
hlt
sub
sub
pop
xchg
outsb
xor
dec
fs
sbb
mov
inc
sbb
mov
add
rcll
mov
rcrb
sbb
add
pusha
bound
ficomps
mov
sti
add
jns
push
lcall
into
mov
jge
cmc
and
xor
xchg
cmc
mov
ja
cmpsb
jmp
xchg
pop
jmp
add
push
fld
sti
or
fsubrs
test
imul
movl
push
xchg
test
dec
lahf
repnz
jb
xchg
dec
or
jb
lods
mov
scas
clc
mov
movsb
push
add
push
insl
mov
cld
add
push
sbb
pop
xor
lahf
test
mov
int
stos
sub
add
test
or
lea
aaa
xchg
cli
sbb
imul
js
inc
mov
cmpb
xchg
outsb
out
mov
in
or
adc
xchg
push
idivl
lea
call
lods
jb
outsb
inc
jnp
mov
rol
shlb
jno
pusha
jp
jecxz,pt
cltd
dec
cld
cmp
mov
jecxz
popa
in
sbb
pop
iret
jae
out
shll
mov
fcmovnbe
adc
dec
add
adc
sti
add
sbb
cmp
jnp
cwtl
pop
or
test
ret
and
insb
hlt
and
mov
push
inc
outsb
hlt
ja
cmc
in
mov
mov
pop
iret
and
jne
mov
or
mov
mov
add
jp
push
clc
repz
aad
inc
insb
xchg
aaa
scas
add
mov
dec
inc
xchg
aas
mov
adc
adc
pop
std
lock
les
popa
jns
sub
scas
add
pop
mov
orl
nop
adc
notl
cmpl
mov
mov
pushf
insb
pop
insb
mov
jp
addr16
imul
dec
int
insb
clc
mov
pop
sbbb
outsb
mov
xchg
nop
out
xor
lock
mov
mov
int
loop
dec
bound
mov
call
jns
push
lods
sub
cmc
jl
fnsave
or
mov
dec
adc
sbb
ja
sbb
cmp
stos
jecxz
push
xor
mov
test
imul
sarb
xor
sub
mov
xchg
and
movsl
adc
and
push
mov
push
movsl
xor
mov
or
shll
xor
out
icebp
dec
shlb
jge
mov
or
rclb
xchg
fisttps
iret
jns
dec
nop
add
aad
sbb
or
je
and
inc
xchg
xchg
loop
xor
cld
pusha
repnz
push
es
iret
insb
lea
sbbb
insl
jbe
fstl
sbb
add
xor
aam
test
dec
movsl
lods
pop
fwait
mov
out
xor
adc
mov
clc
in
sub
xor
dec
in
mov
mov
in
push
cld
mov
out
aad
daa
cmp
dec
shrl
les
jmp
aad
clc
sub
das
add
imul
push
mov
xchg
fdivrl
out
movsb
sub
xor
sub
dec
push
test
push
adc
xchg
dec
insb
pushf
cmc
mov
fsubl
shl
push
shrb
icebp
out
negb
xor
and
outsb
repnz
mov
rcl
sbb
call
pop
inc
add
fxch
lret
push
mov
mov
pop
inc
js
inc
mov
into
daa
sbb
push
inc
xor
add
inc
out
mov
push
mov
push
fmuls
arpl
loopne
cltd
addl
icebp
sbb
jp
fs
dec
hlt
push
dec
je
fisttps
mov
pop
ljmp
xorb
iret
lret
mov
jno
xor
negl
cmpl
xchg
pop
jae
cmp
adcl
ss
dec
dec
fcomip
inc
outsl
xchg
pop
jnp
xchg
xor
shr
lret
shll
cmpsl
adc
jle
lock
push
xchg
jns
ret
inc
xorb
loop
push
adc
ja
xchg
sub
dec
inc
das
or
lods
mov
or
outsb
hlt
popa
dec
loop
insl
repz
mov
test
dec
sahf
mov
insl
and
mov
jl
mov
cmp
or
outsb
lods
adc
lcall
cmp
repnz
push
mov
and
mov
arpl
dec
mov
and
jnp
or
fdivrl
cli
add
push
das
out
fsubr
sahf
enter
inc
cmp
and
xchg
adc
cmp
and
pop
stos
andl
jg
push
sub
add
andl
pop
inc
jl
gs
pop
inc
stos
pusha
or
daa
fwait
mov
xor
fisttpll
cld
in
fld
in
inc
inc
adc
clc
sub
dec
mov
cmp
sahf
xchg
shlb
movsl
cmp
xchg
cmp
push
data16
test
push
or
dec
clc
xchg
inc
call
pop
fstl
stos
xchg
mov
pop
sbb
cmpsl
inc
or
in
push
arpl
mov
mov
lcall
scas
inc
adc
push
push
lods
test
mov
outsb
jecxz,pt
push
xchg
lret
outsl
mov
pop
or
bound
and
mov
sub
mov
mov
scas
shrb
mov
add
fnstsw
adc
aad
les
stos
lods
test
jns
mov
lods
add
or
test
sub
imul
jg
in
jp
mov
and
sub
bound
sarl
sbb
repnz
xchg
ret
out
ljmp
push
movl
insb
sub
and
sbb
adc
loopne
and
insl
clc
dec
loope
push
mov
pop
enter
movsl
sar
shll
insb
sub
jnp
outsl
mov
pop
jge
jl
repz
add
shl
test
adc
push
outsb
mov
test
mov
lods
roll
cwtl
fnclex
xchg
aad
and
jmp
jns
mov
mov
sub
xor
dec
cmpsl
cmc
mov
jecxz
jge
cmc
jg
in
cmp
cli
shlb
fs
dec
jge
sbb
lea
test
popa
adc
mov
xchg
mov
ljmp
fcmovnb
mov
push
mov
fwait
inc
jae
or
jecxz
and
popa
sbb
jmp
cmc
cltd
std
xor
out
and
lock
jp
clc
stc
sbb
add
in
add
sub
mov
lret
test
dec
rclb
pop
fcomp
mov
lds
xor
lds
mov
xchg
pop
outsb
add
jbe
popl
xchg
cmp
in
and
iret
in
or
fnsetpm(287
add
adc
outsl
lret
mov
add
sub
mov
sub
mov
stos
cmp
loope
fisubrs
xchg
ret
mov
xchg
mov
xor
jl
mov
sub
fldl
adc
sub
addr16
cmp
call
jnp
adc
inc
adc
mov
out
sbb
xchg
sub
fisttpl
xchg
mov
neg
shll
ret
pop
xchg
or
nop
pop
rcrb
pop
loop
arpl
mov
arpl
rcll
pop
mov
mov
cmpsl
lods
psrad
jp
push
cli
mov
sbb
arpl
call
push
test
cmp
adc
leave
insl
dec
mov
fcmovnbe
push
pop
jno
iret
sub
les
int3
dec
push
xchg
mov
and
jo
sar
or
xlat
in
insb
lret
mov
pop
inc
ds
dec
je
cmp
jp
fwait
jle
rcrb
cmp
adc
arpl
cmpsb
jp
mov
and
mov
les
jae
rcrb
loopne
cli
sbb
aaa
mov
addr16
rcrl
push
push
dec
stc
je
xchg
loopne
pop
cmpsl
add
test
sbb
rcll
ds
sbb
xchg
inc
adc
push
mov
std
clc
ficoms
sbb
jno
mov
enter
push
or
test
mov
ret
ljmp
call
mov
mov
jo
jle
xor
or
lahf
inc
mov
xchg
push
push
sub
in
and
test
push
cwtl
loope
in
xor
or
push
inc
lret
in
xchg
adc
adc
data16
mov
fstl
jne
shl
jle
mov
mov
inc
fstpt
dec
loope
loope
add
into
mov
dec
xor
jnp
lcall
and
sub
fbstp
pushf
shrl
repz
stc
add
popa
out
and
jnp
es
pushl
mov
cmc
inc
or
adc
rorl
and
xchg
adc
or
andb
lods
jb
push
jo
and
sbb
dec
call
push
fisubs
inc
icebp
int3
add
lahf
add
loopne
adc
xchg
stos
mov
cmp
or
rorl
inc
in
cmp
inc
clc
sub
insl
pop
jnp
notl
xlat
adc
dec
lods
call
adc
ret
ljmp
mov
dec
mov
sbbb
or
addr16
iret
mov
or
push
lods
or
mov
scas
les
icebp
xchg
shll
popa
push
rol
lods
fs
popl
inc
das
and
mov
cmc
and
push
and
sti
loope
jecxz
xor
add
adc
sub
leave
jl
movsl
jl
add
test
adc
fistps
xchg
push
jp
add
inc
stos
das
jns
jae
adc
or
fimuls
jne
cmp
xchg
cmp
int3
lcall
and
push
xor
xchg
dec
lahf
pop
pop
add
push
ss
jmp
out
dec
inc
imul
jnp
push
outsl
mov
cmp
push
or
ret
insl
call
adc
into
push
mov
cmpl
inc
inc
push
cmp
xchg
sub
jne
cli
or
push
pushf
inc
and
sub
hlt
ret
mov
xchg
icebp
call
lods
sbb
subl
sub
lock
add
fsubrs
jp
pop
cmpb
xchg
pop
aad
in
inc
sub
or
fadds
cmc
mov
xchg
pop
stos
cmp
pop
jno
xor
sub
lret
adc
sub
dec
inc
fsubrp
dec
notl
jno
xor
ret
mov
out
push
repnz
lea
adc
jg
push
cmp
movb
mov
in
cmp
add
test
movsb
pop
mov
jbe
mov
push
test
mov
push
popf
xor
jle
cwtl
mov
inc
inc
and
arpl
repz
std
or
dec
outsb
mov
mov
jl
push
insl
cli
adc
mov
push
les
add
xor
shlb
inc
and
jecxz
sub
sarl
movsb
int3
jecxz
xor
stos
dec
scas
mov
or
mov
in
aam
fidivs
cmc
xor
push
mov
pop
mov
and
sub
adc
push
jo
push
shlb
aaa
mov
adc
mov
fisttpll
mov
mov
xchg
sti
push
inc
in
popf
pop
jae
stc
ficoml
data16
jp
nop
adc
add
stos
aam
subb
out
jmp
cld
les
int3
push
fildll
pop
xor
fcmove
adc
outsl
mov
fdiv
push
xor
pop
mov
out
aam
shlb
cmp
incb
push
pop
or
cmp
pop
cmpsb
sbb
xchg
sti
out
clc
pushf
pop
jmp
fidivl
mov
xchg
xor
mov
mov
inc
inc
jno
mov
in
jp
adc
mov
cmpsb
jp
xor
push
jecxz
push
add
stos
sbb
lret
inc
bnd
outsl
sahf
out
dec
xor
push
popa
orl
loopne
sub
lcall
leave
int3
daa
cs
ja
insl
push
cmpl
push
sarb
lods
mov
xchg
jb
fstpt
push
dec
mov
int3
jae
inc
mov
cmpb
jp
out
sub
and
xor
mulb
and
cs
xor
mov
and
ret
sbb
into
fsubl
ss
loop
adc
push
cmpb
and
xchg
fidivs
dec
insl
imul
clc
jecxz
outsl
outsb
leave
jmp
push
stos
aaa
push
daa
je
pop
scas
je
xchg
ret
add
leave
xchg
sbb
je,pn
sahf
fcomp
mov
ljmp
leave
xchg
lahf
push
repnz
xchg
pop
xchg
imul
fdivl
sub
push
ljmp
test
push
pusha
cmc
std
stos
fsubl
lcall
lods
aad
sbb
mov
dec
stos
add
dec
test
shll
out
stos
sbb
mov
dec
fnstsw
ret
inc
popf
jp
xor
jo
adc
js
jmp
into
and
mov
daa
das
mov
inc
mov
push
jl
mov
std
test
dec
in
inc
dec
ret
pop
dec
cld
push
mov
and
es
dec
movl
inc
sub
jae
push
push
mov
pop
pop
popf
das
fsqrt
pusha
mov
ret
push
dec
int
xchg
jne
xchg
and
cwtl
jae
leave
jp
inc
adc
int
rclb
jo
pushf
jge
ljmp
cmp
xor
mov
adc
dec
nop
js
mov
insb
movb
popa
int
std
jmp
sub
pop
arpl
fcomps
in
lods
popl
xlat
jl
adc
arpl
aad
pop
or
imul
popa
lea
icebp
mov
jp
xrelease
add
push
pop
mov
packssdw
jae
and
gs
lea
dec
mov
aas
ja
sbb
mov
lods
and
lcall
sarl
inc
add
jnp
mov
bound
bound
insb
sbb
sub
jnp
jae
lds
lods
scas
mov
imul
mov
dec
or
loope
inc
mov
mov
mov
and
fiaddl
dec
arpl
movsl
cld
pop
sub
pushf
cld
sbb
scas
add
push
jl
shrl
ss
xor
push
sbb
imul
shll
jmp
movsl
sbb
es
and
xchg
cmp
sbbl
dec
xor
orl
mov
and
out
fwait
aad
mov
push
sahf
out
adc
or
pop
sub
fmul
dec
jbe
pop
or
test
subb
shr
dec
std
lock
popf
xchg
ljmp
jge
mov
jl
mov
cltd
add
aad
daa
jns
xor
in
dec
pop
mov
pusha
inc
and
mov
and
and
lcall
ss
test
test
subb
pop
in
xor
push
ja
xchg
in
push
out
xor
fadds
push
pop
jne
sbb
outsl
jecxz
imul
pop
mov
sbb
shll
inc
adc
push
jb
cmpsb
mov
add
icebp
xor
aas
lods
inc
mov
sahf
inc
stos
data16
pop
das
nop
mov
xorl
cmp
out
stos
insb
push
sbbl
lea
into
cmpl
lods
dec
ja
jnp
popa
in
repnz
movsb
mov
push
xor
sub
jge
notb
jge
jo
mov
sbbb
push
adc
jecxz
cmp
rcl
lcall
enter
mov
push
dec
add
mov
shll
cltd
mov
and
jl
mov
push
xchg
nop
dec
add
imul
cmp
adc
mov
sbb
cli
and
lahf
movsl
dec
ljmp
leave
call
cmpsl
xor
dec
push
inc
cmp
daa
fdivrl
inc
clc
das
into
repnz
lds
outsb
xor
mov
out
cmc
icebp
sub
ret
imul
in
mov
pop
loope
inc
insb
or
push
stc
push
jle
ja
insb
jbe
mov
jb
xchg
lret
loopne,pt
sub
inc
xlat
fldt
sbb
fcmovbe
cmp
jecxz
std
addr16
lods
into
mov
dec
jae
xchg
xor
sar
xlat
ss
fwait
lock
rorl
adc
outsb
aad
mov
and
inc
shr
lock
js
negl
gs
mov
out
push
xor
push
decb
add
jae
jl
rcrb
aas
add
and
stos
push
add
jmp
lcall
orl
push
adc
add
or
out
jle
push
dec
addl
adc
call
sub
sbb
push
out
insl
add
pop
mov
out
pop
rclb
dec
add
test
or
dec
imul
popa
xchg
mov
ret
bswap
xchg
cwtl
in
lret
sarl
mov
sub
ss
out
cmp
mov
or
adc
jo
call
push
divb
sahf
in
addr16
dec
or
lods
lahf
dec
push
jbe
fsts
and
or
lods
fadd
in
repz
cmp
adc
inc
or
out
jns
int3
dec
mov
push
adc
adc
les
jge
aas
dec
jp
cmp
push
mov
rcl
je
pop
call
in
movsb
cmp
fildll
notb
pop
aam
cmp
call
push
int3
adc
sar
dec
and
fisttpl
mov
out
aam
mov
std
mov
lock
pop
mov
xor
xchg
mov
push
pop
and
out
es
sbb
es
mov
cmp
popf
mov
jnp
stc
sbb
nop
ja
insb
je
push
test
pop
pop
mov
insl
xchg
and
int3
dec
test
push
inc
pop
pusha
data16
jp
mov
outsl
lods
cmpsl
sub
dec
jecxz
or
mov
mov
mov
addr16
and
mov
sar
push
adc
mov
aaa
test
shll
sub
aam
rcr
lods
ds
jle
add
mov
into
pop
and
insl
inc
shlb
mov
mov
push
sub
lock
adc
and
jle
repnz
sub
jge
xchg
sbb
mov
jns
inc
mov
movsb
repz
dec
xchg
lods
sbb
and
aaa
lods
and
adc
loope
lds
fisubrl
sti
mov
jne
mov
xchg
std
mov
or
push
pop
push
pop
sahf
add
mov
in
sbb
inc
cmpsb
lods
jp
cmpsb
pop
mov
sarl
fadds
shlb
pop
pop
ja
sahf
std
hlt
jecxz
mov
aas
dec
test
jmp
xchg
jecxz
mov
push
sbb
xor
shll
push
and
and
pop
call
mov
fldl
pop
or
jmp
add
aad
pop
inc
and
mov
mov
inc
dec
dec
into
pusha
lods
xor
mov
loop
push
and
pop
pop
call
ljmp
arpl
or
shrl
jno
adc
mov
dec
or
into
fs
jmp
jne
loop
ss
mov
push
sbb
inc
cld
xor
lea
aas
pop
xchg
les
sub
jecxz
push
frstor
push
mov
test
scas
mov
fcoms
dec
ret
xchg
adc
fidivs
mov
inc
into
out
mov
filds
repnz
mov
arpl
xchg
in
mov
aad
cmp
arpl
jnp
push
fwait
and
mov
mov
or
mov
leave
ret
xor
pusha
pop
pop
lea
shlb
or
adc
xor
int
scas
jae
xchg
shlb
or
loope
add
lock
or
js
imul
notl
lcall
bound
sub
dec
jmp
daa
pop
sub
ret
xchg
nop
out
icebp
jne
scas
movsb
add
movsl
push
insb
or
incw
pop
movsb
xchg
hlt
rcrl
dec
mov
pop
and
repz
mov
in
inc
adc
adc
mov
icebp
sti
mov
aas
adc
hlt
xchg
adc
outsb
repz
sbb
push
sub
faddl
int
fldenv
je
mov
mov
test
call
mov
ret
mov
dec
push
testb
jnp
rclb
ficoml
jae
aas
xchg
lds
fidivrl
xchg
push
ss
add
sbb
enter
fsubr
xchg
rorl
stc
dec
adc
xor
mov
sub
and
mov
cltd
divl
imul
xchg
jmp
push
inc
outsl
nop
stos
jnp
dec
xchg
push
mov
movb
mov
jo
mov
mov
insb
add
cmp
pop
outsb
dec
mov
pop
mov
ljmp
call
sub
or
outsb
cmpsl
cmp
or
fists
mov
and
jae
push
xor
mov
push
into
nop
inc
imul
in
lods
and
fsubr
xor
mulb
adc
push
xor
aad
sub
mov
jp
sub
or
cmpsl
loopne
dec
lds
popf
clc
push
cltd
or
xor
push
in
gs
jo
dec
leave
pop
insb
inc
mov
lock
mov
mov
inc
jl
mov
cmp
sbb
aas
ss
xchg
push
cli
dec
scas
in
out
xchg
bound
mov
fld
dec
movsl
fdivl
sub
out
data16
jbe
lahf
pop
test
mov
adc
pop
mov
add
xor
jg
fsubl
loopne
bound
mov
adc
stc
enter
int3
in
pop
pop
outsl
vmovaps
and
lahf
xor
or
je
pop
pop
leave
imul
ficoml
js
stos
lret
push
cmp
sbb
subl
sbb
add
flds
scas
out
aas
cwtl
or
cmc
pop
loope
mov
filds
iret
or
sahf
pusha
repnz
std
roll
jge
or
sbb
cmp
cli
aam
in
lods
imul
push
ja
xchg
add
jae
push
add
shrl
pop
shll
loope
mov
mov
dec
jae
add
imul
pop
xchg
lcall
add
push
xchg
add
mov
adc
adc
mov
adc
test
mov
push
icebp
jne
sub
mov
push
sbb
inc
push
mov
xchg
add
xchg
data16
mov
add
dec
cmpl
lahf
fstpt
mov
pop
cmp
xlat
mov
and
xor
imul
sar
xchg
mov
mov
push
js
cmp
xorl
mov
pop
mov
mov
rcrb
pushf
mov
lahf
mov
cs
lahf
insl
inc
insb
outsl
dec
dec
pushf
xor
adc
add
data16
push
inc
clc
outsl
adc
loop
push
les
sub
adc
or
lcall
xor
enter
jge
mov
jl
xchg
insl
xchg
aad
insb
adc
jb
mov
inc
lds
xchg
or
add
mov
push
inc
stos
or
divl
dec
stos
lea
adc
jno
xor
mov
addr16
and
push
lds
mov
push
ret
cmpsl
adc
in
mov
repnz
add
fiaddl
shrl
xlat
dec
dec
fcoml
sbb
pop
rorl
xchg
lahf
dec
jl
ljmp
push
xor
rolb
push
std
fdivl
int3
mov
sbb
push
pop
les
adc
adc
pop
inc
cmpsb
cs
jne
adc
icebp
sub
sub
add
dec
sub
adc
add
out
ret
and
add
shlb
sbb
fidivrl
stc
dec
pop
sbb
stos
je
pop
in
xlat
pop
rolb
xor
adc
rolb
sbb
stc
dec
les
mov
fsubl
xor
fs
fwait
stc
inc
jecxz
mov
fwait
push
stos
add
push
pop
js
sarb
out
add
add
ret
xchg
int
sahf
sub
divb
xlat
outsl
in
mov
in
add
jb
add
and
xor
pusha
jg
lods
notb
lods
xchg
mov
ret
pop
jnp
xchg
and
shll
mov
push
xlat
movsb
dec
pop
lds
mov
syscall
sbb
mov
mov
push
popf
cwtl
idivb
outsb
push
xor
mov
adc
popa
fsub
push
jmp
push
cmp
dec
dec
cmp
pop
notl
mov
cmp
lock
xor
xchg
in
mov
or
pop
pop
adc
out
jg
jne
add
add
cmp
xchg
fdiv
test
adc
sbb
or
mov
pop
repz
int3
imul
movsl
jp
mov
jo
rorl
sahf
cmp
cmc
std
inc
je
fidivrs
cwtl
lods
lds
mov
mov
jp
or
loop
test
mov
jg
out
dec
pop
shlb
stc
jecxz
mov
daa
repnz
mov
outsb
movsb
out
pop
aam
sub
push
cmp
fs
inc
push
push
xchg
stc
pop
add
sti
ret
jno
into
daa
mov
test
test
mov
dec
lcall
xor
lods
sbb
adc
dec
inc
inc
or
es
lds
or
mov
pusha
mov
sbb
cmp
cmp
sbb
fcoml
lods
mov
xchg
test
mov
jp
ja
mov
mulb
mov
push
frstor
loopne
das
sub
mov
clc
sbb
fsts
imul
mov
in
pusha
xchg
adc
js
fsubrl
jno
test
jnp
scas
sbb
sub
jnp
pop
stc
aam
loop
loop
pop
sub
sbb
xor
fsubrs
cs
cld
fwait
xchg
pop
inc
loopne
xchg
mov
pop
loopne
sti
adc
sbbl
aad
cli
mov
stos
mov
jb
jbe
inc
daa
push
sti
inc
ret
xor
cmp
mov
cmpsl
mov
xchg
xchg
decb
mov
lret
out
in
lret
xor
adc
jle
lcall
cmp
lahf
pop
je
inc
mov
jp
cwtl
ret
rorb
fwait
cmp
pop
pop
icebp
or
cmpsb
imul
fcomip
push
aaa
pop
dec
jmp
and
mov
jecxz
sub
lahf
or
insb
nop
sub
std
push
jle
fs
jp
sub
insl
push
adc
das
mov
or
jecxz
lods
mov
imul
adc
jns
inc
xlat
hlt
iret
popf
mov
push
cmp
push
cmpl
push
or
inc
push
sub
iret
sub
lahf
mov
jg
push
insb
cmp
cwtl
icebp
mov
inc
jns
xor
xor
clc
xlat
loop
lock
xchg
enter
adc
ret
sub
fsubl
or
mov
pusha
xor
lcall
pusha
push
mov
sub
mov
movsl
mov
sbb
out
push
cs
jg
rcrb
insl
orb
lea
loopne
push
mov
pushf
xchg
rcll
insl
divl
aaa
shrl
adc
xor
sub
jl
test
push
shlb
mov
cmp
cmpsl
sub
mov
sbb
in
sub
das
xor
and
push
mov
push
add
adc
jle
jg
clc
cmpsb
sub
shlb
lods
fstp
sahf
jle
scas
and
rcrb
push
pop
pinsrw
mov
movsb
push
pop
daa
hlt
xchg
inc
add
jbe
movsl
and
jl
push
and
adc
mov
popf
fistpl
fcmove
lcall
jl
stc
popf
cmpl
dec
cltd
out
and
lret
insb
xor
aas
dec
cmp
lods
in
les
pop
push
inc
outsb
pop
pusha
xchg
adc
mov
mov
sbb
fnstsw
mov
insb
int3
cmp
adc
dec
pusha
cmp
add
jo
jmp
mov
loop
or
xchg
jle
aaa
cmp
jo
xlat
test
sub
call
fadds
incl
outsl
cld
jns
and
jecxz
bnd
jns
mov
cltd
test
rcll
adc
mov
loop
cli
cmp
rcrb
lods
fsubr
xor
bound
xchg
fcmovbe
inc
jmp
lock
jb
mov
mov
mov
test
test
or
cwtl
xchg
movl
mov
sbb
sub
xorb
pop
mov
movsb
sbb
jl
cs
clc
cmp
xor
push
in
adc
jo
lds
pushf
rcrl
ds
mov
lock
xlat
xchg
dec
jmp
lcall
inc
pushf
add
mov
mov
int
scas
pop
dec
mov
push
dec
jnp
cmc
pop
cwtl
sbb
arpl
pushf
out
outsb
shrl
pop
push
fsubr
dec
outsl
es
jnp
push
and
les
lret
cwtl
dec
addr16
into
ret
mov
mov
pop
mov
adc
mov
jb
xchg
mov
cmp
mov
enterw
add
cmp
push
ds
mov
xlat
xor
xor
mov
push
pop
out
popl
lcall
cmp
sub
ffree
mov
xor
aaa
xor
dec
rclb
sbb
repnz
lahf
adc
outsb
ret
push
or
pusha
cmp
push
dec
or
jg
cmpsb
mov
sbb
mov
mov
mov
ja
ret
nop
leave
pop
in
mov
inc
or
push
shll
jmp
shrb
jbe
mov
mov
adc
add
loope
cmc
popa
sub
ret
adc
mov
out
filds
push
fstps
mov
dec
aaa
fstl
stos
test
mov
adc
addb
cmpsb
sahf
insb
dec
jp
mov
psraw
and
pop
cmp
addb
fldcw
and
sahf
jmp
and
xor
loop
lahf
in
add
mov
inc
xorl
adc
sbbl
cld
inc
mov
and
cmpsl
mov
dec
popa
in
negw
hlt
ds
jno
cltd
mov
fisttpll
add
or
cmp
xchg
subl
int3
insb
mov
es
pop
addr16
inc
in
push
std
sub
jmp
adc
inc
shll
inc
out
xchg
jp
repnz
pop
pop
leave
data16
sub
cmp
lret
rsqrtps
adcl
add
rcl
push
add
mov
cmpsl
mov
pop
outsb
push
or
jb
mov
popa
jns
adc
test
ja
xchg
inc
js
add
xchg
clc
loopne
push
stc
mov
inc
inc
movsl
inc
cs
addr16
dec
xor
adc
and
add
js
xchg
xor
xchg
cmp
jecxz
outsl
hlt
leave
sub
sub
leave
fsubr
add
jns
dec
xchg
popa
jmp
sti
js
movl
icebp
dec
cmpsl
out
fimuls
loopne
mov
rclb
lods
jge
mov
and
fcmove
push
inc
insb
test
cmpsl
push
sbb
int3
int3
vpcmpgtb
mov
pop
mov
lcall
push
insl
add
je
loopne
rolb
testl
sbb
arpl
pop
test
inc
push
daa
imul
jo
pop
ljmp
and
int
nop
dec
idivb
dec
adc
aas
outsl
xchg
jge
jl
add
dec
adc
dec
xor
lods
jecxz
push
or
rclb
mov
add
negl
xchg
adc
into
ficoml
cmp
mov
add
jle
inc
xor
adc
pop
mov
sbb
jecxz
sti
xor
cltd
in
sbbl
cmp
test
pop
and
push
std
jns
icebp
xchg
cmpsl
rcl
ds
dec
xchg
pop
icebp
fs
adc
sub
dec
jno
call
imul
mov
cmp
inc
iret
imul
in
and
xor
ret
jnp
pop
mov
rorb
data16
mov
and
popa
mov
pop
sub
xor
arpl
and
jp
mov
jp
ljmp
mov
out
shll
dec
mov
mov
add
mov
or
ds
lcall
mov
adcb
int
xchg
or
inc
fidivrs
push
fbstp
mov
or
aam
push
lods
dec
jno
adc
push
dec
mov
into
jle
pop
push
mov
cs
insl
jne
push
push
jbe
fimuls
jb
rcrl
movsl
testl
out
ljmp
adc
add
mov
sbb
repz
in
mov
jb
jnp
xor
pop
gs
add
mov
mov
jnp
lock
mov
jo
roll
iret
sbb
pop
jno
call
cli
adc
pusha
or
punpckhdq
shll
out
jbe
aad
pop
fsubrs
mov
outsl
xorl
pusha
aas
ja
aas
js
in
aam
in
sbb
push
xor
popa
aaa
aaa
hlt
pusha
xchg
and
jecxz
nop
or
out
pop
ss
jp
loope
or
jbe
and
cmp
repnz
movl
mov
push
aad
cmp
mov
mov
sub
and
lea
mov
outsb
dec
out
pop
sbb
fimuls
and
imul
push
lcall
inc
jg
add
fstpl
nop
lea
mov
mov
dec
mov
lahf
xchg
dec
divps
add
jge
push
mov
xchg
pop
mov
inc
lock
jnp
fisubs
cmp
push
mov
mulb
dec
mov
add
aam
popa
divb
push
xor
iret
push
sub
add
jge
out
push
and
dec
sbb
out
outsl
xchg
movsb
mov
inc
cmpsl
popa
dec
jecxz
add
push
jp
mov
dec
test
mov
pop
movsb
push
cmp
das
add
sub
stos
out
das
cmp
push
inc
inc
aas
push
mov
cmp
xor
fistpll
test
adc
aaa
aad
adc
das
in
xchg
lock
jo
dec
push
sub
add
sbb
dec
mov
popa
out
pop
xor
mov
jb
sbb
fcomps
or
fs
mov
mov
pop
jecxz
stc
jae
xchg
lods
or
or
mov
and
inc
adcb
push
sahf
lods
aad
xchg
jb
scas
mov
or
addr16
mov
sbb
push
mov
jmp
sub
ret
loopne,pt
shl
pusha
jg
ljmp
shlb
jne,pt
jp
aad
out
aaa
int
inc
dec
mov
sar
sbb
or
fdivrs
outsb
fldenv
sbb
pop
xchg
cmp
mov
inc
pop
xor
adc
sti
pop
mov
adc
sub
rcrb
push
mov
xor
jle
hlt
dec
in
nop
xchg
and
outsb
fisttpl
movnti
das
push
movsb
push
inc
lcall
sub
testl
shl
mov
dec
sub
mov
mov
sbb
movsl
push
sbb
popa
mov
dec
inc
scas
mov
rol
outsl
iret
push
mov
jl
jl
mov
loop
mov
sahf
mov
sub
xchg
xchg
xchg
call
jle
add
adc
test
in
iret
dec
add
imul
cmpsl
pop
out
lret
fadds
push
mov
and
ss
mov
jp
fsub
push
xchg
ret
outsl
pop
dec
jne
pop
xor
ljmp
pop
or
sub
mov
xchg
cmpsl
fdiv
or
push
pop
mov
loopne
pop
iret
push
mov
inc
aas
mov
pop
mov
mov
fists
mov
adc
push
sbb
mov
inc
mov
in
cmp
push
mov
jns
in
cltd
mov
es
rcrb
jp
jge
and
lcall
fcomps
rcll
sbb
lret
xor
inc
xor
clc
divb
outsb
jbe
sbb
cli
jnp
leave
cmp
fdivr
mov
cs
popf
mov
sbb
insl
pop
nop
push
and
mov
mov
das
push
fldcw
mov
rol
shlb
into
loope
add
gs
add
push
addr16
add
shrl
jmp
fisttpll
cmp
arpl
push
xor
push
shll
mov
or
jne
xor
pop
jb
inc
mov
and
cmp
imul
dec
dec
das
movsl
in
ret
nop
addr16
scas
mov
out
xchg
inc
cs
pop
jle
mov
cmp
call
cmp
roll
add
mov
pop
cmp
inc
stc
mov
stos
mov
jcxz
lds
insl
lahf
fiadds
push
sub
xchg
lock
and
mov
mov
and
addb
mov
pop
mov
inc
mov
cmc
cmp
iret
loope
jp
lea
adc
cs
mov
pusha
jo
push
mov
add
shlb
add
adc
es
push
push
jmp
add
insb
cmp
movsl
test
jle
jb
cld
jae
xchg
aam
mov
sbb
push
aaa
mov
mov
cmpsl
mov
sarl
mov
or
js
cmc
sbb
fwait
and
fwait
js
sbb
imul
mov
jl
jle
mov
pushf
mov
testb
xchg
imul
mov
sti
ljmp
xchg
jp
add
xlat
push
adc
and
jmp
inc
mov
stc
jl
sub
pop
insb
xchg
in
mov
or
into
arpl
fsubl
inc
jg
inc
and
jne
sbb
dec
arpl
cmp
add
call
mov
sbb
test
es
adc
sbb
pop
adc
cmpsb
push
inc
or
and
out
add
push
insl
popa
fisubrs
cli
adcb
or
jp
add
jmp
fwait
lret
mov
lahf
ss
test
mov
addr16
icebp
push
nop
sbb
mov
loopne
fdivrs
xlat
mov
rcrl
pop
stos
fs
mov
data16
jl
andl
push
mov
or
jmp
pop
cwtl
test
jo
enter
call
enter
mov
push
lahf
push
mov
jo
enter
or
sti
pop
sbb
test
add
pop
xor
test
xchg
xlat
pop
dec
ja
in
mov
inc
ja
mov
iret
shl
sbb
out
push
ret
pxor
jg
dec
cmp
outsb
inc
jg
fldenv
and
jg
jl
icebp
push
loop
ret
in
mov
adc
shrb
pusha
sub
shll
sbb
test
add
xchg
inc
int3
jne
add
aam
cmpsb
mov
and
mov
es
mov
movsb
fimuls
adc
repz
repz
out
sub
jecxz
jge
mov
mov
push
push
imul
rclb
lock
xchg
jne
decb
in
out
add
inc
mov
outsb
xchg
push
inc
and
dec
insl
cmpl
sub
jl
or
sub
in
mov
inc
aad
fistl
aam
insl
je
sysenter
iret
push
or
scas
xchg
rorl
loop
pop
or
mov
scas
ret
jmp
xlat
adc
sbbb
xchg
push
adc
rorb
push
lcall
ret
xchg
mov
lods
push
cmp
aam
xchg
sub
jnp
pusha
fs
xor
adc
dec
xchg
inc
jecxz
mov
jecxz
pop
push
inc
out
xor
aas
dec
out
adcb
sbb
cmp
cmc
cmp
lea
sub
scas
push
lods
inc
into
add
addr16
les
mov
push
mov
ror
jo
add
add
inc
into
pop
in
adc
daa
js
jne
cs
stos
add
filds
jo
add
add
out
ljmp
out
in
cmc
push
push
into
ljmp
gs
add
daa
mov
movsl
enter
xor
aam
testb
and
push
add
pop
daa
or
sbb
dec
popa
xor
outsb
add
sbb
fisttpl
jle
jge
bnd
sti
addr16
mov
stc
dec
pop
sbb
fisubs
xchg
movsb
test
stos
dec
jmp
es
enter
push
sbb
jmp
mov
sbb
xchg
jb
inc
jp
lret
jle
jbe
mov
mov
lods
push
ljmp
int3
jae
clc
inc
cmp
push
sbb
or
add
sub
or
adcl
jg
cmp
out
mov
jo
les
jl
mov
push
jae
int
push
cld
pushf
jp
es
push
add
add
inc
push
stc
int3
or
pop
cli
push
push
ljmp
iret
jb
mov
lea
rorl
jae
cmp
jmp
mov
in
xchg
sbb
add
and
ja
gs
push
sarb
js
cld
cld
aad
jnp
ret
xchg
test
sub
repnz
test
sbb
and
push
jo
cld
mov
pop
das
orb
loopne
int3
inc
dec
out
and
test
xchg
neg
rcrl
push
lcall
xor
dec
mov
in
cmp
mov
jne
loope
pop
pop
pop
je
mov
sar
mov
push
icebp
jle
push
xchg
xchg
movsl
scas
hlt
or
ret
loope
mov
adc
mov
and
push
dec
out
jbe
sahf
cld
push
ret
cmp
into
out
and
mov
js
adc
mov
js
mov
out
andl
mov
mov
push
adc
jge
dec
negl
sbb
fldenv
arpl
mov
cwtl
lcall
aaa
cld
and
inc
enter
or
js
or
push
sub
adc
sub
lea
fcomi
mov
mov
add
fisttpl
bound
pop
cli
jae
cwtl
test
cltd
jle
inc
je
je
cmp
sub
gs
shlb
test
or
pop
test
aam
push
hlt
pop
mov
adc
push
add
adc
and
test
xchg
test
push
mov
push
inc
out
jne
fwait
push
lock
out
and
sub
or
mov
scas
data16
test
xchg
pop
es
sbb
xchg
testl
push
stos
lcall
aas
sbb
jne
pop
xor
and
shll
jno
pop
push
inc
int3
dec
jp
stos
add
sahf
inc
insl
je
cmp
or
shr
push
push
and
pop
in
movsl
mov
es
pop
mov
mov
cmpsl
add
mov
movsl
shll
les
ja
in
lea
sti
int
repz
sbb
sti
data16
xchg
adc
nop
xchg
test
dec
and
icebp
push
scas
fistpll
je
gs
lock
sub
fnstcw
or
jne
jp
in
pop
outsb
cld
sbbb
ficompl
stos
bound
pushl
push
daa
xor
or
daa
inc
mov
jecxz
jo
cs
les
and
pop
mul
mov
add
mov
test
inc
and
adc
mov
dec
icebp
dec
xchg
xor
and
or
rorb
cmpb
sti
mov
je
rcrl
decl
xchg
lods
iret
movsb
cwtl
or
in
xor
cmp
lret
mov
mov
adc
mov
sub
lods
fwait
addl
mov
xchg
xor
and
sbb
aad
stos
je
out
test
frstor
enter
add
stos
in
xchg
dec
mov
shrl
adc
popf
sbb
sahf
adc
mov
xor
push
aam
mov
loop
je
mov
inc
dec
mov
std
xchg
jnp
rcl
outsb
xor
in
pop
cmp
outsb
jns
push
push
or
ficomps
dec
inc
dec
sarb
mov
ljmp
test
xchg
jbe
ret
push
or
ds
pop
xor
out
fcoms
and
sub
or
mov
stc
cmp
xor
in
or
sbb
je
jae
pop
inc
ss
push
ret
pop
addr16
pop
int
arpl
std
lock
in
inc
aad
pop
adc
clc
xchg
cmpsl
mov
mov
mov
cmp
mov
mov
and
incl
or
aaa
int3
orb
stos
mov
lret
cmc
pop
stos
dec
test
mov
insl
dec
int3
xlat
xor
hlt
xchg
out
mov
sbb
sbbl
pusha
leave
std
int
xor
jmp
jmp
std
xlat
int
push
aam
jne
in
or
mov
xchg
fs
mov
pop
rolb
aad
je
rep
cmpb
aas
lret
iret
jne
cld
xor
push
cld
jle
sahf
xlat
ja
pusha
push
inc
and
rcrl
in
insl
add
sub
push
mov
push
test
dec
or
fadds
xchg
and
mov
add
inc
xchg
jecxz
cli
sbb
clc
dec
add
ds
cs
repnz
inc
sahf
addr16
test
add
xchg
ds
cmp
xor
mov
fadds
add
and
outsb
sbb
inc
mov
adc
enter
fs
or
dec
inc
out
mov
push
xchg
jecxz
ss
push
jg
mov
shr
sbb
les
sahf
jmp
fs
adc
jmp
sbb
mov
cwtl
or
jle
adc
fcmove
cld
inc
and
mov
mov
orb
sub
mov
pop
mov
movsb
mov
add
adc
faddl
mov
or
and
stc
lock
insb
push
xchg
nop
sahf
addb
cmpsb
jne
dec
int
outsl
cmp
push
hlt
ljmp
mov
adc
fs
sti
fiaddl
mov
iret
pop
les
lods
js
pop
jecxz
iret
daa
ficoms
ss
sub
jle
gs
jns
mull
popa
and
add
dec
fimuls
mov
xor
sub
push
cmc
jle
push
aam
dec
test
lods
mov
lea
sub
lcallw
arpl
inc
stos
add
sub
xor
jae
nop
pop
std
inc
insb
cld
sbb
js
sbb
and
fsts
in
xchg
inc
int3
mov
mov
sbb
push
sub
jo
rol
stos
sub
ret
xor
stos
or
jmp
int
xchg
xor
imul
jg
inc
imul
aas
ret
cmpsb
sbb
out
jns
shll
jns
push
and
cmp
fwait
idivl
mov
mov
push
jne
out
sbb
jno,pn
sub
dec
insl
pop
daa
xorl
or
sahf
mov
push
mov
sub
add
mov
mov
or
cs
dec
pop
outsl
fs
shlb
icebp
shll
xchg
lea
andl
lret
lods
cmp
movsb
push
xchg
gs
in
and
cmpsl
insl
xor
xchg
pop
cmp
jg
inc
mov
sub
cmp
dec
jl
sti
jno
dec
mov
enter
or
in
insl
hlt
xchg
sub
lods
dec
cld
sub
shlb
adc
mov
lcall
mov
xchg
and
jl
cmp
insb
jle
shll
fistpll
andl
and
sub
sysret
or
cmpsl
popa
loop
scas
or
xchg
cli
adc
pusha
xlat
cltd
fs
inc
sti
imul
nop
xchg
mov
sbb
shr
mov
add
dec
jl
push
sahf
sbb
aas
and
insb
hlt
jge
gs
cmovbe
fldt
stc
repz
iret
clc
icebp
add
loope
add
out
das
stc
insb
pusha
lods
inc
test
cmc
test
movsl
les
out
unpcklps
sbb
das
push
bts
gs
rorb
aas
sub
mov
mov
out
xchg
daa
clc
xor
xchg
sbb
dec
out
insb
and
aaa
fwait
jle
movsb
pushl
xor
or
mov
test
gs
ret
push
fcmovbe
dec
in
stc
std
mov
leave
dec
inc
addr16
jbe
cs
call
xchg
cmp
sub
or
sbb
mov
cmc
lods
inc
shr
push
and
sub
or
xchg
fcoml
mov
sbb
cmp
and
and
leave
add
sub
jl
mov
out
loop
or
fistl
cmp
adc
aam
test
inc
mov
add
ja
fsubl
xorl
adc
in
sahf
mov
dec
icebp
fcomps
sub
mov
add
negl
pop
mov
mull
dec
push
mov
rorl
out
push
int3
out
pop
scas
lods
fnsave
sahf
std
inc
jle
cs
rclb
dec
xchg
cmp
cmc
push
cmp
testb
dec
imul
sbb
es
mov
push
lods
ret
dec
aas
lret
rolb
test
jge
ja
push
iret
adc
xor
pop
cmp
or
pop
insb
mov
lret
fnsave
aas
sbb
pop
outsb
cld
rorb
mov
out
mov
push
sub
stos
in
cmp
jb
mov
xchg
out
push
or
jno
std
add
or
gs
or
aaa
popa
popf
ja
rorb
mov
add
adc
daa
ficompl
outsl
add
jns
mov
mov
and
cld
mov
stc
negb
xchg
cmp
push
inc
ret
loop
pop
into
add
lea
int
pop
out
pop
jae
data16
mov
decb
clc
push
jg
or
cmp
ss
push
lahf
jg
loope
jp
loop
imul
or
push
ficoms
adc
and
pop
mov
mov
lock
cmp
push
xchg
push
pop
sub
adc
fcompl
test
dec
add
cmp
push
pusha
popa
pop
mov
int3
faddl
aas
rcrl
xchg
fdivrl
mull
xchg
push
test
add
jnp
push
pop
lcall
fmuls
inc
leave
lcall
imul
or
std
push
inc
push
mov
shrb
mov
mov
xlat
shlb
or
mov
or
mov
repnz
lret
mov
mov
cli
mov
es
xchg
inc
xchg
sub
movsl
fsubs
data16
jno
jno
sub
push
movsl
fwait
leave
cwtl
out
mov
arpl
enter
mov
sbb
jb
pop
pop
cwtl
jb
dec
xor
mov
push
enter
and
insl
test
in
cmp
ljmp
inc
cmp
sti
into
jle
add
imul
lcall
xchg
mov
xchg
xlat
cmp
mov
jg
mov
pop
stos
mov
and
test
outsb
mov
mov
mov
cmp
ja
test
lcall
imul
jne
mov
push
and
add
sub
outsl
cld
push
jle
mov
xor
mov
mov
ret
fiadds
in
pop
lea
rcll
mov
insl
mov
cmc
or
scas
adc
inc
pop
jnp
pop
mov
mov
jae
xor
xchg
inc
scas
mov
ds
mov
mov
adc
jae
push
aas
sub
sbb
jo
je
push
push
je
test
adc
pop
outsl
ret
mov
pop
cmpsl
pusha
xchg
fnsave
adc
hlt
jmp
enter
js
add
mov
imul
push
mov
lret
inc
ret
inc
sahf
out
jne
stos
fidivl
hlt
lret
repz
adcb
cmp
frstor
pop
ds
xchg
clc
scas
in
je
xchg
lret
xchg
cwtl
shr
lcall
or
add
dec
daa
fcoml
mov
xchg
aam
icebp
dec
push
xor
pushf
imul
mov
out
or
xor
test
mov
mov
dec
cmp
lds
adc
mov
imulb
or
sub
adc
aad
and
dec
mov
mov
lods
movsb
sti
mov
aam
adc
jecxz
cmc
mov
dec
adc
push
push
enter
out
sbb
fisubrl
xchg
fdivs
jnp
shrb
nop
sbb
add
mov
dec
roll
xchg
jp
aaa
es
sti
jl
jl
mov
loopne
ret
inc
dec
ds
xor
out
jp
add
dec
sti
mov
fstpt
les
flds
adc
sti
xor
dec
sbb
loope
mov
cmpsl
xacquire
out
inc
mov
jo
push
pop
jmp
sbb
mov
rcl
popf
pop
jbe
cmp
es
jno
lods
js
dec
addr16
mov
in
add
push
es
fmuls
inc
sbb
insl
repnz
loopne
inc
movsl
pop
pop
pop
lret
popf
inc
push
xor
cmp
lcall
mull
in
push
adc
or
xchg
xor
nop
jmp
stos
and
adc
fidivrs
sahf
or
fstpt
and
and
mov
retw
push
test
sahf
mov
ss
js
popa
inc
xor
ljmp
pop
and
xchg
mov
inc
dec
push
jns
cmpsl
imul
cmpsl
sbb
cltd
repz
xor
mov
loop
add
icebp
pop
fwait
and
mov
shlb
cmpsl
arpl
mov
push
push
loop
or
pusha
inc
out
sahf
pop
add
pop
lcall
shlb
adc
dec
pop
adc
lret
cwtl
enter
dec
frstor
outsb
clc
test
jb
insl
jmp
push
in
mov
mov
or
mov
jp
test
mov
out
imul
and
out
mov
test
cmpsl
cmpsb
push
xchg
and
jmp
mov
clc
jp
scas
insb
sti
adc
rorb
mov
shrl
imul
cltd
mov
mov
mov
call
lcall
mov
mov
xchg
cld
xchg
movsb
or
sahf
mov
fwait
mov
lods
sbb
xchg
in
cltd
daa
or
mov
lods
adcl
push
cwtl
or
stc
addl
lret
mov
pushf
inc
lea
pusha
aas
sti
mov
mov
mov
mov
xchg
sub
fwait
add
test
hlt
sub
lds
mov
std
sbb
in
mov
out
xchg
lcall
xor
out
and
addr16
pop
les
jo
and
out
ja
sub
repnz
sbb
inc
mov
sub
and
xor
push
or
repz
inc
es
mov
add
push
sub
daa
sti
mov
push
inc
out
pushf
imul
into
xlat
shr
pop
mov
sti
mov
inc
out
or
ja
stc
into
stos
mov
lods
iret
and
adc
and
xchg
sbb
cmp
fsubs
stos
popf
sbbb
arpl
push
js
bound
data16
out
sahf
sbb
in
jns
xor
nop
and
rcll
xor
mov
popf
mov
shlb
sahf
push
nop
cmpb
sbb
pop
lcall
cmp
add
lds
mov
pop
lret
mov
pop
jbe
pusha
pusha
inc
cmp
sbb
shl
aas
xor
sbb
and
test
and
cltd
cmp
or
pop
mov
daa
dec
pop
xchg
sahf
mov
adc
aas
fs
cmc
push
push
test
add
lods
mov
iret
sbb
dec
adc
cmc
comiss
iret
or
jbe
sbb
and
mov
cli
xor
sbb
lcall
mov
or
mov
xor
fld
push
push
das
bound
adc
fstl
cmpsb
sahf
xor
dec
or
repz
sub
xlat
push
xchg
xchg
je
jno
push
mov
sahf
loopne
add
outsl
subl
imul
sub
aas
xchg
add
jle
xchg
push
xchg
movsb
sbb
outsw
and
in
cltd
pop
inc
aaa
shlb
xor
lea
lret
mov
mov
shrb
cwtl
arpl
fmull
outsl
sbb
repnz
addr16
mov
inc
ret
fstl
sbbb
fnstcw
daa
lea
cltd
pushf
cwtl
sbb
imul
pop
push
test
icebp
add
int3
pop
xchg
adc
std
sahf
nop
cwtl
popf
lods
dec
cmp
movsl
jecxz
fcompl
cmp
test
sbb
sbb
dec
pusha
fwait
hlt
ljmp
dec
mov
scas
movb
mov
mov
adc
push
jns
dec
int3
mov
and
test
ja
mov
std
add
aaa
xor
ret
and
mov
add
jge
int
push
sbb
jle
xor
dec
mul
dec
and
daa
dec
and
add
pop
dec
xchg
loopne
inc
sarl
mov
sub
insl
xlat
dec
xor
sar
and
fistps
sar
dec
xchg
sbb
ret
pop
jno
test
pop
xchg
adc
xchg
fidivrl
cli
push
cmp
insl
pop
mov
inc
push
xorl
push
out
loopne
insb
xchg
loop
pop
mov
lods
insb
ret
cmpsl
push
cs
iret
add
and
fdivs
inc
mov
flds
cld
sbb
icebp
mov
mov
cmc
lret
mov
jns
lds
pop
lcall
sub
inc
dec
gs
mov
shll
repz
xchg
out
fidivs
jae
inc
int3
pop
xchg
jp
aad
add
mov
jns
dec
test
pop
jle
pop
std
cld
push
test
inc
pop
imul
dec
jno
cwtl
xchg
lcall
fwait
lcall
mov
mov
loopne
add
pop
pop
mov
sub
mov
pop
aad
flds
push
lods
imul
leave
jmp
jle
or
mov
test
jnp
adc
in
and
and
jmp
jp
andl
fdivs
nop
mov
sbb
in
dec
andb
sbb
sub
mov
pop
xchg
cmp
outsb
clc
clc
jg
pushf
out
sub
xor
cmp
inc
das
insl
lods
iret
jmp
push
je
imul
cld
and
shll
rcl
pop
push
notb
adc
and
incb
xchg
mov
jne
mov
inc
aad
ss
add
in
lea
rcrl
dec
int
aaa
mov
jg
std
addr16
fisttpl
mov
test
scas
test
sbb
cmovl
jp
stos
test
pop
mov
hlt
and
cmpsl
out
lods
imul
pusha
bound
cmc
movsb
test
mov
push
pop
pop
and
push
inc
xor
shll
pop
sbb
mov
mov
pop
out
jne
mov
pop
std
ja
hlt
jae
sub
mov
or
call
inc
jmp
stos
add
mov
push
lret
add
lock
and
sbb
jmp
dec
mov
insl
nop
mov
insl
mov
loop
fidivs
mov
mov
sti
add
mov
sub
dec
iret
add
std
das
jmp
xlat
fstl
mov
add
cmpsl
lret
lahf
cmp
add
sub
sub
and
movsb
pop
test
pop
push
fldcw
test
adc
xor
push
pop
jp
popa
push
fmull
push
and
sbb
pop
addr16
movsb
xorb
mov
lahf
neg
sub
dec
mov
in
aad
jne
mov
pop
xchg
sub
je
stos
addr16
xchg
add
inc
in
push
mov
or
sti
stc
dec
or
mov
dec
mov
test
adc
orl
fidivrs
or
shr
sub
in
pop
jns
inc
pop
smsw
jo
xchg
adc
popf
push
sub
fisubrl
pop
sub
sub
push
jg
dec
cmp
lret
cmpsl
scas
fcompl
cmpsl
sbb
cmp
and
scas
dec
out
mov
imul
out
out
adc
hlt
rclb
cmpsb
jbe
sti
dec
aad
cmp
ja
dec
test
sub
data16
ret
test
call
ja
jns
pushf
adcb
pop
mov
cmpsb
pop
movhps
ds
lcall
pop
cmpsb
lea
mov
lock
hlt
push
mov
mov
inc
clc
xor
inc
popa
in
mov
jnp
lock
adc
cmp
mov
jg
cmp
dec
push
fwait
mov
or
test
sub
cmp
sub
test
jle
mov
cmc
jge
xchg
dec
inc
les
inc
dec
push
das
sbb
jl
loopne
enter
sub
ret
sbb
negl
inc
lock
sbb
inc
arpl
xchg
push
jne
sbb
sub
jge
push
loope
cmpsb
in
push
xor
sub
mov
outsb
xchg
in
pop
pop
mov
mov
dec
ss
inc
subl
test
pop
fsubl
icebp
aaa
shl
sub
dec
mov
xchg
adc
xchg
sbb
inc
cld
imul
daa
mov
mov
mov
cltd
push
dec
mov
je
rol
pop
push
mov
inc
sbb
jbe
pop
pop
movsb
negl
scas
adc
enter
ret
or
es
inc
dec
dec
pop
mov
push
or
xchg
xor
sub
frstor
lret
mov
rol
mov
rorb
pop
add
xchg
in
pop
sbb
push
sub
sarl
push
xlat
sti
push
mov
dec
dec
mov
outsl
dec
adc
dec
cmp
fnstenv
inc
inc
or
inc
ds
rorb
xchg
push
pop
mov
and
xchg
pmullw
mov
js
sbb
dec
adc
cli
jb
ret
ljmp
jno
pop
aas
lret
pop
dec
mov
cltd
fucom
lahf
mov
loope
fsubr
xor
je
mov
mov
add
jge
in
loop
scas
sub
inc
xchg
sbb
and
push
imul
rcrl
mov
mov
repz
mov
jo
mov
aas
inc
push
in
mov
sub
pop
inc
push
lds
mov
mov
movsb
iret
in
and
subb
push
into
mov
xor
inc
xchg
push
rcll
lods
push
shl
sarl
lahf
icebp
dec
or
ljmp
fimull
clc
push
sub
test
inc
fucom
mov
cli
repnz
mov
and
jecxz
xor
out
jne
push
pushf
pop
std
sbb
sbb
insl
mov
call
roll
cmp
mov
pop
ja
adc
cmp
negl
dec
xchg
push
imul
movsb
push
push
inc
stc
cmp
sub
jb
jmp
sub
insb
jno
mov
imul
push
adc
aad
les
dec
shlb
shlb
stos
out
imul
clc
hlt
lret
inc
ror
test
outsb
sub
sub
mov
test
fidivs
out
loope
xchg
xor
test
je
sbb
enter
mov
js
das
cmp
push
jl
jo
pop
push
dec
mov
or
mov
fdivr
mov
icebp
gs
sbb
or
mov
iret
aam
test
adc
jno
insl
push
adc
push
pop
jle
shrb
mov
sbb
je
or
mov
adc
cmp
mov
adc
cmp
std
shrb
lock
aas
fildl
loopne
inc
cmp
cwtl
loop
gs
mov
test
adc
mov
aas
jns
xor
aam
push
mov
scas
imul
mov
jle
cmp
cltd
aas
lahf
inc
cmp
push
loopne
in
xor
aas
pop
jg
push
ret
mov
xchg
imul
loope
pop
scas
popa
dec
hlt
mov
and
mov
mov
psubq
cmp
add
or
repnz
loope
cmc
xchg
jae
sbb
loop
push
out
add
int
xchg
add
pop
icebp
push
pop
jl
pop
adc
sbbb
cmp
pop
fadd
out
pop
and
xchg
out
fwait
cs
add
daa
jnp
sub
mov
gs
scas
ret
sbb
sub
lods
inc
hlt
inc
sbb
mov
mov
hlt
ror
adc
or
test
outsb
in
insb
and
movaps
xchg
pop
xchg
js
or
insb
repz
jmp
outsb
mov
daa
cmp
mov
cmp
add
mov
sti
add
in
std
adc
sti
cmp
out
mov
jle
add
shl
ror
popf
decl
fstl
leave
stos
fcompp
jb
ja
jne
push
sbb
cmp
call
loope
mov
call
repnz
lret
or
sub
push
or
mov
out
mov
imul
jns
lock
cltd
cmp
jns
and
inc
and
sub
inc
cmp
notl
fdivrl
lock
push
gs
jnp
mov
sbb
outsl
adc
cmpsb
add
rcrl
xchg
sub
cmp
inc
push
sub
in
insb
add
mov
mov
shll
cwtl
loop
lcall
adc
lret
or
clc
dec
cmpsb
lret
add
inc
mov
push
jmp
mov
ret
test
jle
xor
sub
dec
or
rcr
and
xchg
fbld
fisubrs
jge
testb
pop
pop
movsb
push
int
sbb
mov
out
adc
outsl
mov
ds
add
add
imul
xorl
cmp
pop
cmovo
scas
sahf
bound
push
or
mov
sbb
pop
jg
push
mov
and
pop
push
add
jno
push
xlat
enter
mov
mov
pusha
daa
lret
out
movsl
inc
pop
dec
jp
mov
adc
xlat
jns
rol
pop
inc
cli
sub
int
in
mov
dec
mov
lahf
xor
pop
pop
xor
mov
movsl
sbb
fmul
add
mov
xchg
inc
xorb
inc
mov
xchg
test
sbb
mov
sbbl
pop
stos
xchg
add
xchg
outsl
xchg
cmp
fcomps
mov
xchg
or
add
repnz
jecxz
mov
pop
inc
push
stos
adc
xor
js
addr16
sub
fdivr
je
or
push
mov
sub
jne
cs
sub
testl
scas
pop
shll
fsts
xor
or
insl
dec
iret
mov
cli
addb
sbb
pcmpgtd
xor
mov
pop
or
pmaxub
pop
ds
sub
daa
icebp
xor
inc
lret
push
or
pusha
fsubs
jb
and
cmpsl
add
insb
mov
mov
das
mov
adc
inc
and
cmp
mov
insl
adc
jecxz
cmp
mov
in
sti
push
or
xchg
in
fists
push
mov
add
daa
push
and
sub
scas
scas
insl
mov
mov
mov
add
jbe
mov
pop
sbb
int3
flds
fldenv
inc
imul
cmp
sub
add
add
cltd
mov
and
lock
nop
inc
xchg
mov
stos
push
xchg
cmp
xlat
push
mov
mov
outsb
js
xchg
jmp
sub
dec
or
lcall
and
jbe
mov
aas
jge
cmp
arpl
xchg
cmp
xor
out
test
pop
in
sti
outsl
push
lds
dec
push
cpuid
lds
sub
inc
adc
lea
mov
in
pop
push
jge
dec
add
cmp
dec
sub
arpl
ret
push
or
ss
jb
loope
in
xchg
dec
mov
cli
xchg
sbb
pop
shlb
lods
imul
out
push
mov
test
push
imul
mov
mov
dec
xchg
dec
mov
adc
xor
mov
es
enter
push
sbb
xchg
lret
lods
xchg
push
outsb
test
aam
iret
cs
ds
push
ss
add
lret
and
sub
test
lods
mov
stos
pushf
push
push
adc
mov
or
cmpsl
sbb
fbstp
les
jl
jo
mov
jl
sub
std
xor
push
testb
sub
test
repnz
jmp
lock
sbb
add
mov
orb
and
pop
sbb
cltd
int3
jns
test
lock
and
sbb
insl
and
rorl
and
in
incl
cli
cltd
add
cmp
push
hlt
aad
jecxz
pop
in
jp
mov
pop
aas
adc
xor
imul
addr16
outsb
sahf
sub
mov
aad
int3
mov
mov
pop
and
dec
roll
loope
nop
leave
mov
xor
cmpl
dec
xor
mov
scas
nop
push
aam
fsts
ss
mov
pop
jno
ds
cmp
cmp
ja
cmp
jae
hlt
int
mov
and
ficoms
shlb
xor
xchg
adc
test
aad
pop
rcrb
ret
inc
and
sbb
dec
sbb
pop
xor
push
jb
pop
push
adcl
mov
inc
push
je
imul
nop
in
xchg
cmp
add
push
mov
nop
pop
mov
clc
pop
cmp
cmp
mov
jl
andb
sub
inc
repz
scas
mov
jae
ss
pop
imul
jae
ret
lods
xor
pop
cmp
jmp
add
or
cli
fs
pop
add
inc
aaa
shll
pop
xchg
scas
movb
cmp
mov
clc
xchg
sub
add
pop
adc
js
addr16
dec
cmp
and
and
loop
lret
inc
je
loope
push
lea
mov
mov
xchg
jne
sub
fmull
fdiv
or
insl
xchg
sbb
add
rclb
sbb
out
mov
rolb
cmp
or
pop
jb
fisubl
fists
imul
pop
cmc
cmpsl
cmp
sub
or
xchg
jge
insb
jl
insb
adc
dec
xchg
mov
mov
aad
rolb
or
ss
iret
loop
dec
xor
stc
push
test
lret
loop
inc
int3
divl
insb
pop
popl
mov
mov
cmpsl
dec
xor
push
xlat
pop
daa
dec
mov
dec
add
int3
es
or
in
bound
push
aas
add
notb
jne
push
jg
in
push
mov
imul
jae
and
dec
sub
movsb
sbb
sbb
mov
or
push
mov
push
xor
scas
dec
jb
jb
sub
popa
les
mov
mov
aad
std
mov
cltd
cmpsl
mov
xchg
and
sti
cmpsl
add
jno
stos
jno
hlt
lock
hlt
xorl
inc
lds
cli
jl
xor
sar
pop
inc
arpl
inc
xor
adc
jg
and
and
sbb
outsb
add
pop
popa
test
push
xor
mov
jae
add
add
or
dec
leave
inc
lds
fcomps
push
jmp
int
lea
xchg
jge
mov
inc
adc
push
addb
mov
pop
sub
fildl
popf
out
xchg
notb
xchg
mov
loopne
icebp
sub
enter
stos
adc
loopne
jl
ds
sahf
sbb
xchg
insb
jl
jl
cmp
jb
inc
shrl
jmp
dec
fldt
adc
outsb
mov
mov
pop
and
push
mov
repnz
imulb
cmp
jl
fs
push
loope
adc
cmp
sub
mov
imul
sbb
push
inc
cmpsb
out
xchg
int3
mov
into
pop
add
fwait
jmp
jbe
aas
lret
mov
sbb
push
mov
imul
mov
ficompl
jle
pop
adc
stc
stos
and
ficompl
and
ja
shll
xchg
pop
out
ficompl
sbb
add
xchg
test
xchg
in
in
insl
add
pop
xchg
popa
pusha
rorb
fwait
das
sbb
inc
adcb
arpl
dec
lods
or
incb
or
inc
xchg
pop
movsb
stc
inc
hlt
mov
mov
mov
inc
imul
dec
and
pusha
sub
outsb
xchg
sbb
and
arpl
mov
hlt
lret
loope
xchg
cli
scas
int3
ds
and
and
dec
jbe
mov
rcll
mov
add
std
sbb
shl
aad
sahf
add
mov
inc
lahf
and
mov
xorl
mov
push
mov
xor
call
fimuls
fistl
in
hlt
sbb
clc
push
xor
sub
xchg
enter
or
add
pop
pop
jp
out
jecxz
fnstenv
push
mov
jae
insl
popf
pop
in
adc
dec
movsb
ss
add
inc
jle
stos
push
lds
stos
xchg
cltd
mov
and
xchg
xchg
xor
push
push
in
pushl
sbb
jno
xor
lret
clc
and
sub
push
jo
cmp
call
mov
ss
mov
pop
andb
add
push
xor
push
xchg
ret
push
mov
xor
xchg
pop
jb
add
push
cli
repz
xchg
add
outsb
sub
add
sub
sarl
cs
into
add
cmpsl
mov
fmul
jmp
push
test
fdivrs
jae
push
dec
leave
aas
xlat
dec
fs
push
jmp
pop
insb
loopne
pop
jns
iret
xor
mov
ds
cmp
rol
imul
in
testb
push
sbb
pushf
cld
lods
outsl
jecxz
leave
scas
xchg
jno
es
push
pop
add
lock
push
and
mov
test
and
mov
cmp
xor
sbb
orb
test
ficompl
cmp
xchg
stos
xchg
jp
enter
jp
out
cmc
cltd
les
xchg
in
push
hlt
repnz
sbb
cmp
or
scas
cld
pop
sbb
adc
adc
xor
push
insb
imul
int
jb
pop
dec
mov
push
testb
hlt
cli
iret
aam
in
or
test
xchg
rcr
ljmp
and
hlt
and
push
movsl
repnz
mov
xchg
sarb
and
push
lods
sbb
push
ret
shll
sti
movsl
outsb
xchg
out
fildl
inc
and
mov
adc
test
bound
jmp
loopne
xor
mov
lret
mov
outsl
sbbb
sub
cwtl
jl
xor
jae
out
lds
push
lods
pop
lds
pop
sub
push
aad
and
adc
mov
sbb
insb
sub
pop
scas
in
or
dec
test
ja
jnp
cli
jae
adc
daa
fldl
in
or
ss
mov
inc
imul
pop
sbb
fsubp
bound
aad
jo
addr16
sarb
int3
xor
mov
mov
lret
sub
pop
testl
fsts
jle
jge
adc
push
mov
rorl
fstpt
lea
xor
mov
dec
call
int
xchg
es
or
mov
enter
xor
inc
and
and
add
iret
inc
dec
dec
jno
and
sub
or
push
aam
cwtl
mov
dec
jecxz
aam
loop
insb
xchg
xchg
xchg
mov
mov
mov
out
inc
push
adc
movsb
nop
in
outsl
pusha
cmp
cmp
pop
inc
lcall
mov
leave
stc
sub
inc
adc
dec
add
imul
add
jbe
cmp
inc
pop
push
mov
je
dec
cmp
nop
test
pop
dec
and
cli
xor
xchg
mov
jo
movsb
xor
inc
add
aad
dec
loope
out
jae
lcall
outsb
sbb
sarb
fadd
xor
mov
mov
jp
mov
in
hlt
fwait
out
ret
mov
mov
rcr
and
aas
cmp
sub
cmc
fucomip
int3
mov
mov
test
mov
pop
hlt
dec
jp
jle
fmuls
rcrl
fwait
lods
xchg
ror
xor
mov
push
dec
mov
dec
dec
repz
into
and
dec
jl
cmp
add
insb
mov
xor
mov
sbb
aad
xor
bound
sub
push
insl
shll
add
test
push
and
inc
jb
push
idivb
aaa
leave
stos
xlat
cld
adc
sbb
icebp
mov
andl
mov
loope
das
test
adcl
in
dec
out
test
js
insb
jmp
xor
mov
clc
shl
lods
lret
sarb
mov
in
test
int3
aad
ljmp
popa
mov
sub
xchg
mov
add
subb
sbb
addr16
sbb
mov
adcl
mov
cmpl
repnz
xchg
cs
dec
loopne
cmp
jb
stos
lea
call
imul
push
jg
pop
outsl
movsb
sti
pushf
movsl
scas
add
rolb
jb
pop
sub
adc
sub
fsubrs
xchg
or
cmc
sbb
adc
loope
aaa
xor
xchg
out
push
test
scas
outsb
fs
mov
shll
in
pop
mov
or
scas
je
push
shlb
mov
dec
mov
pusha
ds
inc
popa
js,pt
mov
icebp
and
das
adc
dec
mov
sub
dec
sarl
mov
out
testl
lea
mov
fdivl
test
push
xor
jg
jbe
fildll
push
xchg
push
lahf
rorb
fisubrs
push
fwait
cli
outsl
jp
mov
pop
jo
dec
cs
pusha
addr16
or
jmp
push
pusha
cmpsb
rcrb
jno
sub
mov
sub
push
loopne
jle
adc
adc
addb
inc
daa
ret
shl
es
mov
sbb
dec
into
xchg
dec
adc
cmpsl
movsl
lcall
push
inc
hlt
jge
push
jecxz
and
stc
pop
sti
dec
loopne
pop
push
jnp
les
xchg
jno
pop
xchg
mov
mov
push
fwait
insl
add
mov
imul
adc
iret
push
iret
bound
add
xor
pop
test
xchg
and
xor
xor
or
in
adc
in
push
push
leave
repnz
stos
repnz
in
es
imul
aaa
adc
jae
lret
lret
mov
call
push
std
xchg
lods
push
mov
imul
push
cmpsl
jae
ret
jp
ds
jae
clc
mov
sub
jp
push
movb
lret
es
xorb
or
push
fisubs
movsb
xchg
not
add
imul
iret
aas
mov
or
xchg
leave
ja
jne
and
add
adc
out
xor
ret
inc
cmp
or
sbb
nop
ret
outsl
inc
cs
into
loopne
movsb
loop
cmp
adc
adc
xchg
rolb
push
add
jmp
in
mov
iret
lret
std
mov
call
dec
andl
jg
sbb
test
push
movsb
push
xchg
xchg
xchg
mov
vphaddubw
mov
movsl
push
jo
pop
jecxz
repz
inc
stc
push
push
add
xchg
cmp
lahf
cmp
ja
mov
sbb
lret
js
cmp
push
mov
ret
mov
arpl
jb
ljmp
cs
pop
repz
pop
and
mov
or
mov
mov
gs
pop
lods
movsl
rep
jo
add
clc
ljmp
and
push
pop
mov
movsl
pop
cmp
mov
sti
xchg
jae
bound
dec
std
arpl
sbb
mov
loop
and
jo
cmpb
dec
les
mov
pop
mov
jns
fnstsw
jne
adc
nop
sub
cmpsl
add
in
repz
aad
imul
sub
sahf
inc
push
xchg
cmpsl
and
in
cvttps2pi
jp
enter
xor
add
imul
mov
adc
iret
dec
pushf
ljmp
xchg
pop
das
les
aaa
or
pop
sbbb
add
out
mov
iret
xlat
dec
sub
inc
push
or
xlat
dec
pop
rolb
inc
sti
add
loop
out
pop
mov
and
mov
mov
ss
fsubrl
int3
push
popa
loop
inc
push
mov
roll
or
fistl
jae
jnp
fwait
shrl
push
or
fisttps
mov
filds
xor
push
xchg
cmp
cmpsb
xchg
cmpsl
test
loop
scas
adc
sub
mov
cli
in
add
cmp
jg
sub
shr
mov
jp
leave
jl
ja
jae
stc
out
repz
outsl
jge
daa
jge
ss
lds
push
jecxz
pop
jl
push
test
stos
dec
iret
dec
mov
lods
sub
clc
cwtl
cltd
push
cli
cmp
sahf
lahf
xor
pop
jle
into
insb
sub
aaa
jecxz
xor
add
je
cmpsl
or
loopne
cs
ds
cmp
cmpsl
dec
jnp
cli
or
pop
in
push
cmp
pop
dec
pop
loop
xchg
mov
or
imul
aam
pop
jae
pop
xchg
jecxz
lea
cli
fadds
add
xchg
scas
jnp
mov
mov
fwait
mov
js
js
out
scas
mov
in
pop
scas
sbb
test
xchg
adc
rol
sbb
jmp
scas
xchg
xlat
sbb
cld
repz
mov
ljmp
insl
dec
lock
js
adc
imul
sub
cmp
outsb
jno
fs
dec
adc
stc
stos
in
movsb
sbb
mov
icebp
lret
lock
push
test
jo
loopne
cwtl
stc
sub
iret
test
inc
daa
bound
jns
rcrb
cmp
sub
mov
or
aas
pop
rorl
shlb
cmpsb
cmp
cmp
cltd
pusha
mov
scas
sbb
mov
rcrl
or
sub
test
add
xchg
push
mov
push
xchg
iret
add
ret
dec
aaa
test
mov
pusha
rorb
pop
sub
in
add
in
dec
test
jg
movsb
aam
pop
or
sarb
lods
std
inc
leave
cmp
in
jmp
fidivl
int
jne
mov
enter
jl
jg
and
adcl
push
fldenv
aad
add
jmp
push
ss
mov
pop
test
jno
in
mov
inc
dec
shlb
inc
mov
lds
cmp
leave
cmc
xchg
add
nop
mov
sarl
in
daa
xor
mov
cmp
shrb
sbb
shlb
or
mov
or
jecxz
or
and
sub
push
xchg
out
ltr
out
lods
adc
and
in
inc
movsl
cltd
icebp
jmp
sarb
lret
ret
mov
inc
pop
jb
lds
push
ljmp
mov
jmp
mov
leave
imul
adcl
push
mov
in
jne
data16
or
scas
mov
jg
jb
and
jbe
mov
sti
sbb
inc
bound
xorl
mov
into
pop
jnp
repnz
into
rol
xor
popa
shrl
call
mov
das
dec
jo
das
in
in
pop
xor
xchg
addr16
xchg
sbb
lcall
xchg
push
aad
push
stc
out
push
and
ljmp
pop
clc
lds
out
xchg
sub
loop
or
cmp
jecxz
sbb
in
shll
loop
daa
mov
sbb
cmpsb
pop
mov
shlb
add
lods
xorb
adc
mov
lods
es
cmp
push
insl
mull
pop
test
jle
adcb
imul
inc
out
push
mov
add
movsl
cmpsb
cmp
imul
push
insl
inc
loopne
adc
repnz
mov
mov
mov
and
jno
shl
mov
sub
ss
mov
jns
jmp
test
xchg
fadds
imul
sub
push
mov
cmp
jne
cld
rcll
inc
jg
out
and
outsb
mov
pop
or
mov
push
loop
mull
fldl
sub
clc
sub
jmp
movaps
fmull
out
cld
sahf
pushf
lea
iret
dec
call
push
inc
lcall
test
mov
sub
stc
sub
sbb
loope
dec
or
inc
xor
mov
jmp
popa
ljmp
or
leave
lret
sub
pop
out
push
dec
and
movsb
data16
xchg
bound
dec
xchg
add
clc
scas
sub
iret
fdivrl
inc
jmp
outsl
mov
loop
add
push
xor
es
fisubrl
orl
cwtl
ss
mov
data16
movsl
fbstp
rorb
pushf
out
aaa
xor
pusha
out
sub
lcall
lock
push
iret
loopne
xchg
mov
movsb
cmp
jle
mov
roll
mov
inc
xor
and
dec
jl
out
out
sub
lds
lcall
test
or
xor
push
pop
sub
and
es
es
imul
das
pushf
dec
pop
and
push
mov
call
push
in
pop
movsb
shll
push
jne
fwait
loope
js
in
xorl
dec
jg
jno
imul
aaa
mov
loope
xchg
int3
inc
mov
rclb
or
pop
lds
or
jge
mov
dec
fisttpll
add
sar
jmp
sbb
movsb
call
sahf
and
pop
inc
pop
pop
imul
xor
icebp
fsts
aaa
fnstsw
jne
mov
pop
dec
insl
int
ret
inc
ljmp
mov
jns
fnstenv
mov
mov
mov
xor
add
pop
fsub
jmp
push
jp
sub
mov
aad
insb
add
jnp
cmc
pop
xchg
push
push
movsb
mov
ljmp
xchg
jl
jmp
pop
add
mov
fnstsw
push
icebp
lock
mov
insl
enter
mov
adc
adc
ret
fucomip
add
scas
bound
decb
push
sbb
xchg
out
dec
les
scas
mov
std
push
pop
sbb
push
shll
or
test
test
jnp
mov
jno
inc
je
sub
and
stos
stc
mov
out
scas
insb
loop
in
and
inc
mov
testb
in
fneni(8087
lret
lcall
cmp
and
loop
xor
push
or
cli
add
push
push
rcrl
int
jns
inc
cmp
and
imul
jle
fdivr
lahf
sbb
fwait
jg
test
mov
jne
leave
xchg
pop
shl
inc
repnz
xchg
sub
test
jmp
add
cmp
lcall
jp
popa
cli
roll
popa
in
mov
push
outsl
mov
mulb
or
nop
jno
cmpsb
push
aaa
mov
cmp
xor
inc
movsb
sbb
sbb
add
inc
test
dec
jmp
inc
pop
jbe
sub
sarl
pop
dec
jae
rcl
add
mov
insb
pop
mov
sub
call
ror
push
pusha
mulb
stos
adc
clc
int3
xchg
inc
aam
lahf
inc
jae
sub
movsl
mov
dec
push
mov
orl
loop
nop
lea
je
add
scas
ja
ss
cmp
jns
cmpsl
push
sbb
addb
stos
and
inc
movsl
mov
decb
push
push
imul
arpl
adc
mov
push
push
lods
out
push
in
lahf
jle
cmp
mov
in
aas
fwait
cld
lcall
cmp
and
cs
mov
mov
mov
add
cwtl
add
mov
and
xlat
sbb
xor
dec
mov
push
data16
or
aas
cmc
mov
outsl
popa
or
shll
lock
aas
pop
clc
jg
push
xor
and
adc
test
xchg
lea
popa
aam
inc
out
sbb
mov
adc
sarl
mov
dec
adc
mov
lds
cmp
mov
repnz
mov
insl
mov
call
pusha
mov
mov
sub
aam
mov
addb
stos
and
pushl
mov
mov
mov
ret
mov
subb
inc
in
repz
inc
mov
xor
loopne
add
out
aad
outsl
push
jnp
xor
aad
subb
pop
out
int3
inc
jnp
cwtl
out
daa
inc
adc
mov
xor
rcl
xor
inc
mov
jge
int3
sub
vmwrite
outsb
dec
out
sbb
test
out
ljmp
add
xor
mov
or
icebp
mov
lcall
lcall
insb
push
fimull
pop
aaa
movb
arpl
in
sarl
lcall
fwait
xchg
cmp
aas
mov
in
mov
dec
nop
movl
imul
or
mov
xchg
xchg
repnz
inc
and
xlat
negb
mov
sbb
inc
jmp
inc
cld
adc
sub
pop
mov
mov
mov
lea
ja
and
cmp
jp
cltd
inc
push
inc
cmp
cmpsb
push
jae
in
ret
popa
cs
inc
imul
fmuls
mov
push
roll
xchg
push
mov
stos
mov
loopne
jmp
mov
in
sub
mov
jp
jno
dec
push
dec
pop
push
and
jmp
xor
mov
addr16
jmp
add
jo
sub
lret
hlt
pop
ljmp
addr16
out
jnp
sbb
jecxz
mov
add
pop
pop
cmp
pop
cli
pop
or
das
jecxz
stos
sub
into
movsl
pop
fistpll
stc
jno
fimuls
adc
je
aam
pushf
push
and
mov
push
sbb
push
cmp
ret
lea
js
lret
cs
mov
pop
fs
fdivl
ret
outsl
icebp
dec
mov
subb
shl
push
or
dec
bound
dec
inc
and
dec
test
xchg
mov
dec
mov
pop
ror
jne
push
xchg
sub
cmp
icebp
popf
shrl
nop
call
adc
dec
movsb
lea
iret
pop
mov
add
cmpsb
cmp
imulb
popa
gs
addr16
add
sub
adc
rorl
adc
xchg
inc
and
lcall
cmp
divl
in
cmp
lods
xchg
cmp
mov
jns
sti
pop
sarb
mov
fsubrl
jno
jo
push
lret
stos
clc
test
sbb
xchg
cmp
ss
ror
and
popa
shlb
sub
push
push
andl
mov
adc
dec
ret
fldt
mov
mov
or
mov
xorb
ja
in
iret
dec
gs
cmp
out
fstl
dec
cltd
push
jge
fs
push
in
stos
mov
sub
aas
mov
ret
in
decl
out
rcl
inc
das
jb
mov
mov
icebp
in
xorl
jae
jbe
dec
fs
fcmovnbe
cmpsb
arpl
test
imul
sahf
mov
mov
jnp
pop
fdivrs
xchg
and
jp
jp
lcall
jo
jo
filds
movsl
add
and
popf
push
xor
int3
pop
in
or
pop
int
xchg
inc
cli
cmpl
fsub
sbb
adc
mov
mov
pminub
subb
loopne
mov
imul
inc
sub
ds
test
lcall
js
movsb
add
into
xchg
fbstp
or
ret
out
nop
dec
xchg
mov
adc
and
jo
jge
mov
mov
outsb
notl
xlat
or
add
add
sbb
sbb
inc
dec
into
add
aaa
xchg
push
test
out
inc
xchg
pop
aad
inc
cmp
mov
popa
pop
or
adcl
stos
nop
or
xchg
dec
lods
dec
push
adc
insb
leave
push
mov
jnp
push
pop
mov
sbb
xchg
fcmove
jno
sti
pop
outsl
repnz
xchg
jo
shrb
adc
inc
inc
dec
push
xor
in
call
jo
add
out
cli
add
mov
xor
cmpsl
push
in
add
mov
xor
popa
ret
push
pop
out
std
and
jb
sbb
inc
loope
jp
lods
pusha
jns
lock
pusha
aas
pusha
cmpsl
pop
or
mov
mov
popl
jae
std
mov
push
sahf
sbb
inc
pushf
aas
sbb
push
int3
jnp
sbb
push
dec
in
js
scas
lret
or
xor
loop
mov
out
mov
std
stos
out
inc
add
in
lahf
in
xchg
sub
addr16
loop
xor
bound
push
mov
es
pop
dec
adc
sub
test
pop
clc
mov
rcrb
pop
sahf
mov
out
fisubs
jge
xchg
ja
inc
lods
insb
or
cld
push
mov
pop
lock
adc
ret
cmp
rcll
dec
ret
into
mov
dec
add
sub
xchg
popa
lcall
mov
cli
ljmp
nop
cli
fsubr
jmp
and
stos
into
cwtl
fcomp
sbb
jmp
aas
push
clc
dec
imul
lock
sub
std
test
loop
sub
jbe
inc
mov
mov
into
fisttps
push
push
xchg
lock
push
ret
adc
fmuls
pop
out
stos
jle
dec
inc
pop
das
dec
add
inc
sbb
lods
sbb
sub
lret
aad
loopne,pt
repnz
stc
xchg
leave
fiadds
mov
push
inc
loopne
in
fnsave
dec
icebp
cmc
rcr
clc
shlb
xor
jmp
dec
inc
sbb
cmc
xor
call
dec
jge
fcmovnbe
lret
xor
stc
mov
pop
inc
xchg
pushw
aam
mov
jne
lahf
int
pusha
add
cmpb
aad
push
test
pop
sar
push
dec
dec
stc
sub
hlt
xchg
or
sub
mov
mov
cld
jnp
xor
xchg
jbe
mov
mov
imulb
stos
fmuls
push
mov
mov
cs
out
les
lcallw
cmc
xor
mov
mov
cmp
iret
push
push
add
sbb
inc
dec
mov
add
xchg
lods
das
fcomp
cwtl
nop
cwtl
lahf
mov
outsb
add
cld
dec
enter
push
xorb
push
into
fwait
pop
adc
xchg
jmp
mov
pop
pop
addl
iret
xor
sbb
and
shrb
scas
pop
roll
hlt
mov
out
push
jbe
aaa
test
jg
inc
mov
rolb
or
lds
ja,pt
lcall
mov
adc
hlt
clc
pop
andb
stos
xor
xchg
mov
lods
cld
into
bound
cwtl
loopne
mov
pusha
mov
lock
loop
das
mov
scas
mov
ret
and
xlat
inc
jmp
rcrl
mov
mov
loopne
dec
add
dec
sbb
repnz
hlt
xlat
mov
mov
add
dec
jne
repnz
dec
in
mov
jg
xchg
jns
ds
aas
jle
sbb
add
mov
inc
push
sbb
add
mov
pop
mov
cmp
push
push
iret
push
arpl
jge
pop
shlb
repnz
out
iret
cld
mov
xor
xchg
pop
push
add
shlb
gs
push
pop
xchg
data16
inc
cli
nop
push
xor
ret
sar
aad
or
inc
push
lcall
lret
outsl
ds
mov
loope
enter
mov
pop
loop
bound
pop
loop
fwait
cmpsb
adc
xor
mov
shlb
pop
filds
orps
into
leave
jp
mov
cli
push
imul
enter
push
xor
push
and
add
pop
hlt
dec
icebp
inc
pop
push
je
push
in
leave
pop
mov
lock
mov
pop
mov
sbb
leave
rcl
lcall
xchg
aam
inc
inc
push
and
cmp
dec
mov
arpl
xor
sub
sbb
bound
je
mov
aas
sahf
xchg
dec
mov
pusha
ja
add
jmp
xchg
shl
or
dec
scas
pop
mov
adc
sbb
add
aas
cmp
test
mov
imul
or
fldenv
mov
int
inc
in
incb
ljmp
mov
mov
push
push
sarl
pop
jmp
cwtl
adc
int
sub
mov
pop
add
adc
xor
scas
lret
xchg
inc
in
cmpsl
repz
pop
and
les
inc
sub
jecxz
adc
std
xor
cwtl
fldenv
xchg
mov
jecxz
cmp
dec
adc
add
add
movsb
popa
iret
decl
mov
adc
sbb
inc
mov
pusha
mov
sub
adc
int
xor
outsb
adc
dec
data16
sahf
sbb
loopne
xor
je
mov
adc
mov
dec
call
push
or
mov
pop
aaa
movsb
pop
dec
xchg
mov
ret
cli
repz
jo
mov
out
rcrb
push
negb
dec
call
fimuls
ficoms
mov
jo
in
in
rcrb
pop
cmp
cltd
jbe,pn
push
dec
insb
jge
add
pop
or
out
daa
and
xor
imul
shll
dec
fldl
sub
push
pop
adc
push
cmpsb
iret
shl
sbb
pop
jecxz
mov
push
rcrl
leave
cmp
xchg
sbb
lock
mov
or
xlat
shrb
loopne
test
push
scas
out
xor
jae
hlt
ljmp
popf
scas
xchg
aad
adc
inc
push
dec
shrb
sti
mov
fldl
fildll
icebp
pop
pop
push
xchg
inc
ficompl
jnp
imulb
shr
or
add
sub
pop
data16
stc
sbb
sbbl
shl
jl
cmp
push
push
pop
pop
pushl
lcall
pop
inc
out
out
ficoms
pushf
test
outsl
movsl
lods
fdivs
xchg
mov
pop
shl
push
data16
into
adc
or
inc
jnp
mov
push
add
pop
aad
loop
movsb
xor
xlat
test
mov
dec
mov
push
imul
mov
pop
call
in
mull
lds
popa
cmp
icebp
clc
lds
sbb
jg
xchg
aam
int3
shlb
push
mov
into
cwtl
xchg
pop
sub
in
lock
clc
pop
addl
insb
dec
push
rclb
jo
or
ficompl
out
ret
sbb
mov
pop
je
sub
test
mov
aam
mov
call
fistps
mov
jbe
xchg
loop
movsb
jno
gs
imul
adc
dec
adc
in
stos
mov
sahf
mov
nop
dec
imul
icebp
test
mov
mov
or
sub
loop
out
fwait
push
adc
lret
cmpsl
mov
scas
mov
data16
xchg
cwtl
cmp
lret
inc
cmp
mov
cmpsb
setae
lock
insb
cmp
push
lret
inc
in
pop
shlb
mov
into
mov
xor
dec
push
pop
xchg
and
cmpsl
mov
test
fdivl
cld
pop
sub
mov
andl
sub
jne
jb
sbb
std
std
pusha
std
jns
cmpsb
jo
xor
xchg
mov
out
push
and
and
sub
jbe
jmp
shrb
test
xchg
mov
xor
jp
push
fsts
sub
pop
out
push
arpl
es
sbb
add
inc
sti
mov
or
insb
sub
or
mov
add
dec
popf
pop
in
pop
push
xor
cmpsl
cmp
inc
pop
cmp
or
rcr
fidivl
mov
dec
cmp
push
ret
sub
enter
dec
popa
push
pop
and
pop
outsl
sub
aaa
nop
in
push
ret
cld
cmp
adc
mov
jp
aad
cmp
movsb
xchg
adc
and
sti
dec
add
adc
lds
inc
leave
xchg
or
cmp
and
inc
int3
jl
gs
pop
pusha
arpl
pop
jnp
icebp
pop
sbb
rcll
lods
sbb
and
and
dec
pop
sti
push
arpl
push
fdivrl
movl
bnd
popf
push
lahf
push
xchg
sub
sub
mov
adc
mov
aam
sub
loopne
dec
pop
hlt
outsl
sbb
daa
inc
jl
xchg
push
add
and
dec
lahf
pop
in
sahf
xchg
nop
xor
xchg
cwtl
push
addr16
dec
adc
dec
roll
cwtl
pop
out
rclb
pop
cwtl
fcomps
jle
imul
xchg
pop
mov
mov
adc
shll
std
mov
jmp
jno
lret
and
outsb
xor
dec
fsubrl
aad
dec
lods
sarb
int
jl
cmp
aaa
jg
xor
adc
sbb
insb
inc
push
idiv
aaa
test
or
mov
mov
cld
in
movsl
lret
aam
xor
add
out
in
or
pop
jmp
add
push
sbb
stc
push
push
pop
sub
mull
xor
inc
xchg
fisubl
sbbb
daa
arpl
adc
aad
incl
sub
jno
comiss
ja
repnz
jo
push
aam
out
movsl
lods
mov
movsl
mov
dec
push
addl
insb
sub
adc
aad
subb
sbb
push
xchg
cmc
jae
sbb
mov
data16
fwait
repnz
sbb
mov
mov
cltd
adc
or
add
inc
shll
and
lds
mov
ds
dec
push
imul
out
sub
xchg
arpl
mov
outsl
out
xchg
pop
das
das
icebp
xor
dec
roll
insb
xchg
inc
pop
daa
cli
dec
es
jnp
ret
adc
iret
outsl
or
test
pop
gs
push
or
or
or
mov
jbe
cs
jl
push
stos
addr16
test
sti
xchg
js
or
jae
ds
and
rolb
test
dec
adc
jmp
add
nop
js
push
mov
pop
rorl
test
push
inc
test
pushf
hlt
rcr
mov
addr16
add
jnp
mov
je
inc
mov
div
inc
mov
mov
sub
sbb
xchg
dec
aad
insl
mov
sub
xchg
inc
loop
out
js
repz
xchg
push
insb
adc
lret
mov
fsubrl
stos
mov
int3
inc
sub
push
adc
fcomip
scas
mov
gs
andl
xor
dec
cmp
lret
inc
inc
into
push
stos
push
mov
clc
cmp
or
mov
aas
xchg
pushf
push
enter
push
jno
jmp
push
lahf
fisubrl
test
mov
jg
call
or
adc
inc
cmpsb
jns
mov
xchg
cmpsl
jmp
fadds
lock
mov
out
mov
add
lock
inc
repnz
roll
push
mov
pop
mov
xchg
xor
clc
xor
cwtl
inc
in
dec
bound
adc
jmp
mov
adc
test
sub
or
bound
data16
jecxz
jmp
ljmp
scas
aam
pop
outsb
jb
in
or
outsl
inc
or
xor
out
daa
sbb
xchg
popa
cwtl
jae
ds
pop
lahf
push
push
call
sbb
sub
xor
xor
fsubrl
adc
xor
popa
pop
xchg
movsb
adc
xor
xchg
jle
in
push
sbb
lcall
mov
in
push
dec
push
sahf
pop
dec
aas
popf
mov
in
push
lds
or
mov
and
cmpsl
push
fidivs
cmp
mov
lea
gs
lahf
mov
add
gs
call
out
pop
cltd
ret
dec
dec
cli
mov
push
push
movsb
sahf
push
dec
std
sub
jp
cmp
cmpsl
jnp
into
nop
outsl
test
mov
push
mov
insl
or
in
sti
mulb
sub
in
outsl
push
xor
sub
movsb
popa
jp
add
cmp
leave
arpl
xchg
adc
or
inc
add
inc
add
push
adc
fwait
icebp
jnp
dec
ret
cli
sbb
push
mov
and
or
cmpsl
push
in
cld
loopne
mov
jp
pop
mov
sti
adc
mov
and
mov
movsb
sbb
fisubl
fstpl
push
cld
and
mov
mov
lcall
and
xchg
mov
lea
mov
inc
fwait
push
gs
test
fistpl
enter
lcall
push
rol
adc
ret
inc
fs
test
fsubrs
cmp
dec
testl
mov
push
mov
sub
ret
push
jge
call
add
fs
mov
jae
sub
gs
mov
adc
mov
pop
enter
adc
jle
iret
repz
pop
dec
loopne
push
fmul
sub
repnz
sarb
int3
sub
pop
xchg
pinsrw
pop
data16
scas
mov
rol
lret
lock
enter
inc
sbb
pop
inc
lock
subb
addb
shll
and
call
mov
sub
jae
mov
lea
inc
mov
mull
jge
xchg
fwait
push
divb
jb
lods
aad
popa
inc
std
mov
mov
pop
sub
sbb
mov
mov
mov
mov
cmp
into
mov
in
insb
mov
sub
jno
adc
loopne
fildll
xor
mov
mov
push
mov
dec
adcl
jge
andb
push
popa
repnz
imul
xchg
push
cmp
ret
lret
ljmp
adc
aam
mov
inc
adc
sbb
inc
sbb
je
cmp
jg
add
pusha
cmpsl
cld
push
test
or
inc
jg
rcr
and
dec
ror
pushf
sarl
scas
mov
movsb
cli
rol
js
xchg
int
ss
add
dec
xchg
push
jae
sbb
movsb
add
xor
push
popf
pop
ret
fs
adc
jno
mov
in
in
mov
movl
in
scas
leave
push
xchg
xchg
test
mov
das
out
xor
push
and
add
clc
push
jne
in
mov
pop
enter
push
rclb
cmp
test
jp
xchg
lods
mov
test
xchg
xor
inc
rcr
sub
cmc
fcomip
fcoms
dec
lret
arpl
data16
pusha
sub
push
leave
inc
fidivrs
lds
push
sbb
insl
add
dec
and
loope
cmp
dec
cmp
pushf
xchg
outsl
jae
mov
adc
outsl
scas
push
add
cmp
lahf
mov
mov
adc
sbb
test
xchg
roll
mov
loopne
lcall
push
inc
ret
fnsave
mov
repz
ljmp
dec
push
cmp
or
push
mov
push
leave
inc
pop
sbb
add
mov
mov
add
mov
dec
rclb
out
dec
push
jo
stos
imulb
sar
insl
in
lahf
jbe
cli
xor
push
ja
sahf
cmp
stos
icebp
aas
inc
push
ja
fstl
jne
jns
enter
xor
cmp
jg
sbb
cmp
dec
inc
insb
pop
push
cmp
cwtl
jecxz
cmc
aam
je
jp
fwait
aad
xchg
stos
cmp
imul
xchg
jbe
mov
push
push
test
pop
fmul
aaa
outsb
adc
ret
xor
or
fdivr
or
adc
dec
sub
adc
pop
mov
inc
mov
cmp
xlat
fsubl
in
inc
lret
sbb
dec
sarl
les
out
push
frstor
aam
addr16
fistl
sub
push
mov
cmpsb
sub
lods
mov
lods
cltd
scas
xchg
jl
pop
cmp
mov
inc
jnp
repnz
ror
inc
test
sub
gs
inc
xor
lcall
inc
push
sbb
jno
push
lea
stc
xchg
rcl
lret
sub
call
inc
jbe
js
push
mov
cltd
loopne
das
lret
add
nop
ret
mov
sarl
push
bound
rclb
pop
imul
movsb
enter
stc
xchg
enter
or
inc
mov
divw
hlt
std
dec
insl
mov
xor
mov
pushf
inc
in
mov
outsb
in
pop
repz
lods
or
out
add
inc
jno
push
leave
ss
pop
mov
cmp
repz
xor
mov
xchg
in
and
xor
cmpl
cmp
ljmp
xlat
cmc
dec
inc
cwtl
push
ja
inc
stc
xchg
repnz
mov
xor
cwtl
test
out
loope
mov
mov
sub
in
test
leave
sbb
out
push
lods
xor
bound
fwait
inc
movsl
xchg
pop
mov
iret
xor
arpl
cmc
fdiv
movsl
sbb
ret
fmull
push
or
orb
cwtl
ds
inc
outsl
cmpl
pop
pop
divps
nop
outsb
inc
cmc
pop
in
jmp
lahf
out
sub
add
call
add
pop
addr16
sub
aam
out
int3
filds
cmp
inc
jle
std
inc
sti
idivb
or
mov
lcall
hlt
test
cmpb
out
cmp
test
mov
xchg
sbb
push
cmpsb
xchg
push
pop
sbb
jl
hlt
add
pop
mov
pop
stos
jbe
daa
cli
dec
cs
out
pop
or
sti
mov
bound
mov
test
sbb
fsubr
push
and
into
out
es
sbb
icebp
sub
orb
loopne
stos
push
repz
add
pop
add
insl
pop
test
gs
outsb
dec
loope
add
sub
jge
mov
adc
imul
add
in
xchg
cltd
cmp
inc
outsl
adc
pusha
paddd
pop
cmp
divl
shll
mov
arpl
test
or
rolb
fisttpll
daa
mov
mov
pop
pop
lret
in
push
js
push
lret
stos
bound
mov
iret
loope
outsb
test
or
fdivl
imul
xchg
and
ljmp
ret
cmp
out
jp
outsb
pop
or
or
ret
scas
xor
out
sub
mov
jne
dec
push
pop
adc
cmp
pop
adc
popf
cli
dec
or
mov
in
mov
or
ljmp
mov
mov
dec
xchg
int3
xor
outsb
mov
push
insb
mov
clc
cs
divb
or
jle
sub
fnstsw
nop
dec
lods
add
sub
or
mov
div
lea
add
lods
adc
inc
mov
mov
in
cwtl
lcall
arpl
lods
and
or
jl
adc
paddb
push
sarl
movsb
popa
push
pop
sbb
inc
jmp
xchg
pushf
sbb
adc
xor
ljmp
lds
mov
add
mov
test
push
sbb
ret
lea
xchg
cltd
jge
gs
insb
lret
out
arpl
or
aaa
lods
xor
jl
nop
sahf
dec
dec
cmp
sbb
fwait
and
push
dec
xor
fucomi
push
jnp
mov
scas
into
dec
jmp
mov
ljmp
fldt
cmp
gs
cmpsl
lock
jo
and
sub
stos
in
pop
test
xchg
adc
add
add
ss
outsl
lret
hlt
sbb
stc
xchg
cmpsl
mov
mov
push
or
dec
sub
fcomps
sub
push
divb
dec
sub
ja
aaa
insl
lret
out
adc
icebp
cltd
push
sahf
cmpsl
mov
add
jo
packuswb
hlt
nop
movsl
je
mov
xchg
mov
push
add
aaa
mov
jl
pop
pop
adc
das
mov
jae
cli
call
in
pusha
cmp
jg
test
popf
stc
sub
push
pop
fldl
mov
xor
mov
xor
aaa
dec
push
push
fwait
sub
repz
pop
xlat
repz
negb
popa
sub
mov
jmp
pop
and
or
push
int
jae
in
repz
daa
pop
sbb
cmp
and
in
and
jp
sub
cmp
mov
adc
sub
outsl
push
dec
sub
adc
and
xchg
sub
push
fsubl
sbb
lret
std
lret
or
dec
push
cmp
rcll
int3
xlat
cmc
cli
int3
push
out
dec
push
lahf
adcb
subb
stos
mov
rclb
cld
xor
je
cld
pushf
int3
lods
sub
hlt
push
in
mov
xor
adc
adc
aaa
jb
int3
fcmovnbe
sbb
rcrl
xlat
stc
and
divl
sahf
iret
ret
rolb
mov
test
or
popa
sbb
xchg
xor
add
iret
fcoml
push
and
inc
and
push
shll
cmp
sub
xchg
mov
pushf
data16
ds
mov
jmp
ret
cmpl
and
add
aad
insl
dec
inc
inc
dec
mov
and
stos
xchg
jle
cmp
pop
sub
negb
aad
push
lods
sub
xchg
sbb
jb
aas
push
arpl
test
xchg
lods
push
inc
jge
leave
fcmovne
lds
popa
dec
jae
adc
fidivs
imul
jae
add
outsb
xchg
xchg
lods
hlt
xchg
xchg
stos
ss
and
cs
fbld
adc
xor
je
rcl
hlt
push
insb
aad
mov
mov
mov
inc
pop
mul
sub
ja
and
clc
data16
mov
sub
lods
jmp
aad
sbb
pop
jnp
clc
ds
sub
xlat
sub
stc
lea
je
out
and
lods
xchg
xchg
cltd
push
daa
test
out
xchg
sbb
movsl
aaa
icebp
and
jb
shlb
push
sti
cs
out
aaa
out
add
jg
out
fisubrl
andb
mov
imul
push
push
aas
arpl
ficomps
lock
aam
outsl
rcrb
insb
jle
fists
data16
pop
jmp
xor
pop
and
xchg
repnz
add
mov
ljmp
or
and
mov
lea
icebp
rorb
scas
pop
inc
stos
sub
nop
loope
xchg
lock
pop
xchg
pop
out
mov
jne
sbb
test
and
jbe
cmc
out
imul
xor
jae
enter
shlb
scas
or
std
divl
bound
sbb
icebp
dec
mov
and
jecxz
fwait
sub
xor
addr16
jecxz
pop
mov
pop
dec
ficoml
fwait
mov
xor
or
clc
sahf
fcmovnbe
icebp
inc
sbb
lods
stc
test
xlat
sbb
test
mov
mov
jb
lods
pop
push
xchg
pop
in
mov
push
mov
jle
test
add
into
hlt
data16
and
cmp
shrb
fsubl
mov
or
inc
mov
push
test
fisubrs
int3
xor
cwtl
sub
xchg
fnstenvs
add
aam
movsb
push
fwait
fwait
mov
cld
es
xchg
sub
cli
sbb
cmp
shlb
xchg
adc
and
lret
in
adc
out
pop
jnp
and
ret
inc
mov
and
mov
mov
push
cltd
cli
lock
sbb
imul
icebp
stos
adc
lret
and
loopne
js
push
scas
add
fs
and
add
sbb
xlat
push
lock
sahf
ljmp
fstps
adc
or
rcll
cmp
out
cmp
or
cmp
adc
in
and
sbb
test
dec
mov
mov
jnp
sub
inc
ljmp
rcrl
outsb
iret
mov
lcall
or
dec
gs
mov
out
inc
push
gs
xor
mov
fs
mov
pop
cmp
jnp
inc
loopne
aam
inc
push
rcrb
sub
sub
or
push
cmp
pop
mov
int
pop
pop
arpl
xlat
outsb
icebp
mov
adc
jns
mov
arpl
divb
insl
sbb
cs
push
adc
int
pusha
xor
or
and
scas
fsubrs
xor
push
xchg
pop
xchg
ror
lock
sub
lock
xor
or
outsl
dec
mov
mov
inc
outsl
fwait
xchg
cmp
dec
fiadds
fistl
xchg
ja
pcmpgtd
push
jno
dec
out
push
mov
leave
sub
mov
icebp
mov
in
fistpl
adc
cmpsl
sbb
mov
sub
test
xchg
shl
cmp
push
jb
cwtl
shlb
hlt
add
lds
jecxz
push
push
adc
lods
test
leave
fsubl
ja
adc
cmp
xrelease
mov
les
dec
sti
add
jb
xchg
add
or
iret
or
into
clc
sub
dec
push
stc
and
out
push
pop
and
shll
pmullw
push
enter
mov
xor
test
mov
xlat
add
popa
push
adc
pop
xchg
sub
fcoms
shr
enter
adc
lods
inc
mov
fisubrs
inc
mov
cltd
jle
push
mov
pop
pop
mov
inc
imul
push
in
xchg
aam
cs
xor
fwait
into
cmp
insb
push
jecxz
and
push
mov
inc
cmp
jmp
adc
inc
imul
and
mov
xor
jmp
jbe
fdivl
push
add
out
repz
imul
inc
enter
sub
inc
cmp
dec
adc
shrl
loopne
sub
mov
sub
jp
enter
mov
add
cmp
cli
shrb
out
cmc
mov
and
xchg
gs
pop
jg
mov
stos
push
out
mov
pop
adc
xlat
pop
adcl
sub
pushw
sub
xchg
mov
add
mov
fs
call
fdivr
mov
scas
fs
mov
xor
jecxz
je
jno
push
notb
popa
sub
xchg
pushf
adc
adc
and
cmp
cmp
les
fistpl
outsl
and
mov
adc
or
cmpsl
mov
fwait
push
jae,pt
test
push
xchg
mov
ljmp
xor
dec
stos
push
xchg
fisttpll
je
aam
jg
test
push
into
cmp
mov
lret
nop
xor
gs
pop
jle
mov
cmpsb
cmpsl
push
pusha
push
pop
mov
add
fldt
xor
es
sti
cmp
les
jle
test
sub
stc
rorb
or
sbb
sub
lods
test
sbb
sub
enter
and
mov
insb
out
inc
sub
daa
jg
xor
jno
mull
push
jp
mov
lret
mov
nop
cmpl
cld
js
test
ret
xor
imulb
add
lds
imul
fmull
sub
jmp
cmc
xchg
mov
loopne
pop
xchg
mov
cmpsb
out
popa
ror
pop
outsb
sub
cwtl
cwtl
sub
pop
bound
and
xchg
imul
call
loope
rcrb
xor
cltd
cmp
lods
jp
xor
sbb
push
fcmovne
lcall
inc
sub
jmp
pop
fnstenv
sub
roll
or
add
int
mov
sti
aas
and
repz
jmp
xchg
stos
fmul
mov
mov
out
imull
lret
push
jnp
add
sbb
cmp
imul
jo
jp
addr16
jae
je
iret
sbb
enter
fidivrl
sub
fsubrl
lods
sbb
rol
mov
out
mov
inc
int3
insl
gs
jne
scas
inc
hlt
iret
lret
or
mov
push
xchg
pushf
inc
stos
mov
ret
jne
aad
arpl
test
sar
jne
push
cs
dec
sbb
dec
jnp
test
xchg
xor
push
mov
xchg
cmp
cmp
mov
shl
std
pop
ret
cmp
popf
in
ja
std
sub
xor
mov
xor
push
push
mov
dec
push
cwtl
arpl
inc
in
mov
cmp
ds
loop
addb
ficoms
sbb
inc
pop
or
fwait
insl
cwtl
xchg
loopne
mov
adc
mov
pop
jb
scas
sub
mov
pop
pop
add
jns
sub
cltd
lahf
xchg
int
loopne
mov
lret
scas
aad
mov
repnz
test
cld
loop
cmp
sub
fmull
orl
aas
push
pusha
jnp
jle
sbb
xchg
cmp
rcrl
mov
xlat
mov
pop
xchg
xchg
xor
sub
jnp
pop
xchg
inc
movsl
jnp
push
mov
ret
push
fwait
jg
or
icebp
in
int3
in
loop
mov
jp
call
mov
mov
mov
loopne
enter
jae
psubsw
sbb
jmp
add
mov
sbb
mov
into
cmpsb
sub
insl
sbb
jp
js
sub
xchg
dec
or
jmp
xorb
popl
xchg
sbb
xchg
and
ds
jns
inc
cmp
push
je
sub
sbb
les
fnstsw
xor
popf
incl
nop
stc
mov
or
sub
loopne
fisttps
hlt
xchg
sub
lret
and
mov
hlt
pop
loop
stos
xchg
adc
and
addl
mov
mov
mov
pop
xorb
dec
fildl
cmp
pop
jp
jg
mov
sub
adc
jae
dec
nop
js
sub
outsl
aam
inc
pushf
shl
pop
out
stos
xor
ficoml
xchg
xchg
mov
inc
loope
movsl
jns
or
fldl
add
push
xor
fbstp
or
call
cmp
pop
test
scas
rorl
xchg
cld
add
pop
call
repz
shlb
stos
jns
push
repz
shr
sti
out
jmp
in
inc
lahf
adc
enter
jns
shlb
pop
xchg
int
push
in
adc
lds
ret
lods
shrl
and
pop
test
repnz
stc
push
mov
lret
lcall
das
das
jmp
pop
ja
loope
push
scas
out
cwtl
call
aas
xor
pop
sbb
or
sub
fidivl
xor
xlat
xchg
and
add
mov
cmp
cmp
xlat
pop
ja
push
pop
jno
mov
aaa
outsl
and
xchg
mov
icebp
inc
add
shl
mov
or
addr16
ret
mov
sub
fcoms
repnz
aas
mov
divl
inc
stos
add
shlb
jno
mov
push
mov
lret
cmp
outsb
lods
adc
dec
jo
push
fwait
jne
ss
mulb
and
mov
es
arpl
push
mov
gs
jmp
int
repnz
pop
insl
push
add
fbld
dec
pop
outsl
jge
pop
mov
divl
test
xor
jb
fwait
movsl
dec
mov
adc
lds
xchg
xchg
je
dec
shll
in
pop
lcall
int
and
sbb
repz
aad
js
in
in
sarb
push
bnd
and
push
retw
cmp
mov
push
and
fcomps
out
fidivrl
or
and
pop
out
es
shrl
adc
mov
or
jb
stc
add
loop
std
ror
push
jno
xor
sti
and
sti
jl,pn
lds
push
mov
aam
jnp
jb
lcall
or
sub
jae
add
mov
mov
xor
popa
subb
outsl
mov
stc
fldl
repnz
mov
cs
aad
push
rorl
adc
and
dec
sarb
ss
cmp
aad
sub
test
fwait
xchg
pop
mov
ja
pop
push
mov
mov
je
cmpsb
stos
jb
fdiv
mov
mov
fiaddl
divb
and
inc
sahf
sahf
pop
ds
fwait
mov
add
sbb
jg
dec
rcr
xlat
arpl
mov
pop
test
rclb
testb
fwait
and
frstor
jbe
pushw
hlt
daa
pop
shrb
jmp
xchg
ja
clc
dec
test
push
push
icebp
mov
push
xchg
push
imull
test
mov
stc
jns
stc
jns
ret
jmp
dec
popa
inc
adc
push
jb
cltd
in
cmpsl
sti
sbbb
mov
ret
jnp
fstpt
sbbb
imul
leave
lret
loop
clc
out
mov
pushf
aam
in
out
dec
inc
test
dec
in
jl
mov
adc
mov
bound
and
cmp
or
loop
js
call
ss
cmpsl
inc
gs
repnz
je
cltd
pop
int
and
dec
xchg
icebp
lahf
sbb
push
ror
dec
sar
std
add
in
out
xor
xchg
int
mov
fdivs
mov
ret
orl
or
sub
sub
sub
push
int3
mov
call
bound
sbb
rclb
jnp
les
adcl
repz
pop
pop
adc
cmp
hlt
icebp
xchg
rcr
loop
mov
mov
das
jns
mov
leave
inc
dec
ffreep
jne
js
outsb
mov
das
imul
pop
mov
add
int3
and
add
pop
cltd
lods
into
xchg
push
cli
push
rcrl
add
xchg
pop
lock
xchg
dec
push
nop
or
add
inc
push
cmpsl
inc
mov
stos
xor
fimuls
xor
mov
test
mov
stc
das
fmuls
mov
cs
dec
hlt
add
xor
les
and
or
sbb
movsl
push
insl
jno
repz
dec
js
xchg
pop
sahf
les
sub
pop
jb
iret
jne
loop
add
mov
lret
lret
cmpl
jns
adc
loope
lret
out
push
fs
inc
mov
out
sub
jmp
iret
imul
inc
dec
mov
rorl
add
mov
inc
sarb
jb
fwait
jmp
mov
jo
and
cmp
ja
mov
clc
and
cltd
scas
loop
sbb
loopne
loop
xchg
aas
xchg
xor
lods
mov
rcl
cmpsl
adc
stc
inc
js
movsb
inc
fsubrl
inc
mov
dec
xor
lcall
mov
push
inc
aaa
jae
cli
sub
inc
daa
aaa
sub
enter
push
jo
dec
fcomps
or
and
std
je
inc
jg
cmc
insb
ss
mov
out
inc
scas
adc
rcrl
add
ds
sahf
jmp
outsb
sub
insl
aas
inc
xchg
jg
mov
stos
and
adc
mov
pop
push
es
aaa
mov
out
jns
les
pop
shrl
cwtl
ret
pop
insb
sbb
fwait
jne
icebp
popa
jo
in
adc
adc
pop
ret
and
cmp
mov
dec
in
xor
test
stc
sbb
push
mov
into
mov
popa
rcll
daa
cmp
add
pop
push
lea
mov
shrb
fmull
aam
push
test
jns
jbe
jnp
lods
das
pop
std
out
xor
cmp
dec
gs
xchg
into
cmc
jb
leave
add
loop
loope
xchg
push
push
inc
js
lahf
andb
movsl
lods
insl
jle
fs
and
mov
pop
and
fs
subb
mov
lods
jmp
dec
mov
and
xor
loope
ficomps
mov
out
mov
and
pop
ja
mov
subl
pop
push
fldcw
adc
cmc
xchg
mov
cmp
cmc
shll
andl
incb
jno
dec
aam
jns
jl
sahf
dec
imull
mov
mov
js
dec
int3
add
ljmp
mov
or
jge
data16
jnp
lock
xor
and
jle
test
xchg
cli
pusha
out
mov
std
jnp
xor
mov
in
int
hlt
pop
jbe
pop
add
inc
xchg
xchg
inc
or
mov
dec
in
mov
mov
hlt
push
std
fwait
leave
mov
loope
dec
sub
aaa
scas
inc
mov
xchg
pop
ficoml
mov
push
jecxz
sbb
notb
push
push
inc
cmp
adc
test
mov
je
scas
int3
aam
loop
cmp
push
sti
and
addr16
insb
add
mov
xchg
xchg
and
push
add
adc
jg
pop
in
bound
adc
xchg
and
lret
jle
cmp
mov
jno
pop
and
xor
test
sbb
cmp
fdivl
jp
push
call
out
shl
fmulp
sarl
ljmp
fwait
mov
add
adc
mov
outsb
cmp
xor
out
sub
xchg
dec
xor
pop
lds
jbe
adc
push
insl
lret
pop
sub
cld
in
leave
add
scas
aaa
popf
mov
subb
orb
add
cmpsb
xchg
inc
in
fbld
mov
lods
jbe
cmpsb
dec
icebp
lock
cli
rclb
fldl2t
and
sbb
insl
sub
mov
mov
rolb
mov
inc
mov
lret
in
ret
pop
imul
fdivs
les
sbb
loope
sbb
push
insb
mov
enter
sub
dec
stc
in
scas
mov
sbb
jecxz
jmp
xor
push
idivl
shll
jno
xchg
iret
aas
dec
stc
mov
loop
jg
push
cmp
dec
fwait
xor
ret
mov
outsl
xchg
aaa
xchg
xor
fnstcw
cmp
dec
testl
ret
dec
jmp
sub
pop
dec
and
push
nop
nop
and
push
push
dec
cmpsl
sub
adc
lods
mov
mov
out
pop
call
mov
ret
mov
pushl
jg
enter
add
imul
push
add
mov
ds
and
pop
jae
xchg
cmp
dec
pusha
and
push
ds
inc
js
hlt
sbb
or
test
js
andnps
pop
inc
dec
std
outsb
leave
js
cwtl
pop
xchg
out
mov
gs
mov
ds
ror
mov
std
dec
std
rcl
xorb
mov
lods
jle
into
mov
imul
cmc
or
nop
cld
dec
and
mov
jbe
lea
movsl
add
test
jmp
sub
and
imul
int3
mov
mov
leave
stc
es
jecxz
scas
push
adc
sbb
adc
sbb
sbb
fadd
subb
aad
inc
mov
movsb
sub
outsb
sbb
push
mov
xchg
mov
xor
loopne
and
dec
lds
pusha
je
or
es
or
mov
popa
mov
int
cmpsl
fs
out
jns
inc
mov
je
dec
out
or
mov
arpl
pop
out
push
repz
sbb
addl
loope
mov
dec
xor
mov
leave
std
not
sub
pop
xchg
outsl
pusha
and
call
xor
ret
mov
and
orb
dec
gs
sub
adc
sahf
pop
or
or
push
call
xchg
jle
ret
movsl
mov
clc
in
iret
push
mov
push
and
repz
shll
std
mov
lds
out
add
bound
lods
ljmp
pushl
xchg
movsl
subl
loop
sub
xchg
cmpsb
xlat
jecxz
xchg
pop
movb
adc
dec
cli
out
or
int
int
lret
subb
idivl
jge
dec
push
lock
push
cli
sbb
aaa
inc
jb
sbbb
addr16
mov
dec
sbb
dec
arpl
jle
cmp
jg
inc
inc
cli
xor
push
pop
push
repnz
ficompl
loope
fcmovu
movsb
loopne
les
push
xchg
pop
add
jmp
mov
inc
divl
push
pop
xchg
add
cmpsl
add
cmp
daa
aad
mov
lea
adcl
push
or
pushf
fs
xor
outsb
inc
xchg
pop
push
adc
cmp
test
sbb
jmp
ret
sub
scas
mov
sub
mov
call
sub
bound
leave
lcall
popf
mov
dec
cmp
fildll
sub
pop
mov
jo
pop
cmp
sbb
push
ljmp
xlat
ljmp
mov
fmulp
sub
dec
pop
repz
sbb
xchg
adc
ret
adc
lock
mov
mov
xchg
cmpsl
dec
push
sti
movsl
lret
stos
cwtl
jp
dec
jmp
sarl
mov
lods
add
xchg
xchg
mov
fwait
dec
sbbl
sub
bound
scas
jae
jmp
xchg
rolb
into
inc
call
pushl
jge
cmpsb
sahf
cltd
leave
cmp
negb
mov
jno
notl
push
inc
lcall
mov
push
xor
sahf
jns
add
jae
daa
popf
cmpsl
adc
dec
add
test
pop
jg
loope
adc
dec
pushf
shl
jl
dec
mov
sti
xlat
jns
cmpb
fcomps
add
fcoms
sbb
xchg
adc
nop
xor
sbb
pop
xor
mov
push
cmp
inc
fsubs
fdivr
dec
cmp
jnp
fstl
mov
push
bound
push
iret
push
dec
nop
jnp
std
mov
lret
and
push
ss
mov
push
xor
pop
out
xchg
jo
aad
and
ret
push
fisubrl
lock
aas
call
lods
pop
int
adc
out
test
mov
ljmp
xchg
sub
addr16
xor
cmpsl
test
dec
or
cmp
push
aam
mov
or
xchg
cmp
jns
les
push
in
and
and
cmp
cmp
pop
aam
xor
mov
cmpl
or
shll
in
int
jae
pop
int
test
mov
push
and
icebp
pop
mov
sbb
xchg
int3
imul
loop
or
ficoml
icebp
push
pop
jecxz
test
cmpsl
loop
jge
add
push
fnstsw
xchg
lods
stc
in
sub
jno
fildll
push
xor
shlb
xor
mov
mov
jmp
addr16
and
in
in
xchg
call
fbstp
add
sbb
rcrl
and
cmpsb
test
aaa
mov
sbbb
cmp
ljmp
test
outsl
sub
cmp
adc
pushf
repnz
rcr
mov
mov
hlt
movsl
pop
fsubrl
jno
pop
xchg
cmc
test
pusha
lds
out
lds
or
pop
out
je
add
orl
cwtl
mov
pop
shrl
lods
outsb
sbb
dec
xchg
push
cld
pop
test
ret
cmc
jbe
and
into
mov
cwtl
loope
lret
or
add
scas
sub
inc
cli
inc
push
test
push
add
lds
or
ja
fstpl
mov
xchg
pop
imul
xchg
push
out
xlat
mov
inc
int3
inc
rep
adc
xchg
push
jns
pop
fsubrs
pop
call
pop
push
in
add
adc
aad
aad
lahf
jge
mov
ret
lods
loop
or
inc
pop
stos
cmp
sbb
fwait
lds
ret
xor
cmp
push
lds
sbb
pop
jb
cli
mov
inc
popf
cmpsl
int3
out
dec
mov
test
movsl
outsb
sahf
xor
xor
aaa
add
idivb
jg
aad
inc
mov
cmp
fidivrs
push
lods
mov
push
mov
call
loope
imulb
pop
push
in
gs
inc
movsb
jo
in
jne
adc
jge
bnd
lods
mov
int
sbb
adc
out
leave
stos
push
out
lock
push
jmp
hlt
add
divb
lcall
mov
xor
leave
inc
jbe
push
inc
xchg
inc
lock
inc
mov
lea
mov
mov
sub
pop
jecxz
jle
xor
out
pop
hlt
test
flds
in
xor
ret
dec
inc
popa
xor
inc
sub
daa
xchg
pop
pusha
loopne
xchg
xor
jns
pushf
ret
pusha
mov
push
mov
xlat
rolb
pop
je
and
push
sbb
or
data16
pusha
cmpsb
orb
or
dec
nop
sti
mov
pop
cmpsb
add
xchg
cmc
mov
and
inc
stos
aaa
xchg
push
adc
inc
mov
aas
inc
xor
or
jns
add
mov
popl
push
cs
addb
sbb
lret
inc
cs
jne
pop
dec
daa
cmp
mov
pop
adc
pop
imul
lcall
cmp
loopne
cmp
pop
leave
xchg
dec
and
sbbb
arpl
call
pop
jbe
aam
sbb
data16
pop
cmc
mov
sbb
cmpsl
jo
lods
loope
xor
push
std
jmp
in
stos
xchg
enter
scas
movsb
shl
pop
es
leave
gs
test
push
jl
inc
jp
ret
cmc
insl
shl
xchg
js
adc
fnstcw
pop
push
xchg
inc
add
pusha
imul
pop
ret
loopne
repz
mov
rcl
cmp
sbb
scas
and
xchg
jp
test
outsb
adc
inc
xlat
fcomps
xchg
push
cmc
push
jle
sub
push
shlb
jnp
mov
ret
and
leave
in
and
sbb
cmc
enter
or
add
fnstenv
pop
scas
fadds
lods
pushw
fwait
ja
mov
into
push
dec
mov
mov
stos
loop
sti
pop
mov
inc
movsb
mov
push
xchg
addl
inc
xor
out
sub
adc
sub
dec
pop
mov
inc
clc
in
adcb
adc
loop
xchg
nopl
push
mov
dec
mov
outsb
nop
sub
adc
insl
cmpsl
jo
xor
cmp
xchg
push
scas
pushf
cwtl
aas
iret
icebp
add
push
aam
sub
xor
pop
test
mov
and
enter
add
sub
dec
add
adc
lods
out
add
adcl
inc
repz
pop
xchg
pushf
lock
xor
roll
sbb
jle
inc
dec
mov
pop
xor
aad
pushf
or
fwait
stc
sarl
cmp
mov
sti
lea
jle
sbb
xor
jg
insb
and
bound
call
addb
out
mov
sahf
insl
insb
xchg
push
adcl
xchg
aas
sub
jg
cmp
xchg
pushf
xchg
aam
sub
jecxz
pop
mov
inc
jmp
test
ret
jo
in
outsb
clc
imul
sbbl
xor
mov
rclb
xchg
outsl
clc
jl
lock
jbe
lret
es
inc
leave
sahf
xor
mov
jmp
loope
pop
dec
pop
leave
out
jae
push
xchg
mov
mov
xchg
xor
gs
jo
int
cld
xor
push
hlt
mov
push
dec
addr16
xchg
sar
cmp
push
mov
push
cmpsb
jnp
js
int3
push
mov
leave
sub
jl
hlt
sti
inc
fldt
or
lods
in
cmpsl
loop
or
add
cmpsl
in
sarb
jl
and
test
jp
push
or
sbb
sbb
es
enter
dec
jae
icebp
fwait
lock
push
clc
or
pop
imul
xor
sbb
mov
adc
pop
movsl
and
adc
jne
dec
mov
mov
lret
xchg
into
pushf
adc
sub
outsl
and
aas
jl
adc
enter
popf
je
pop
es
xchg
sets
je
and
jl
push
rorb
fs
xor
aaa
popa
push
add
int
jbe
in
mov
mov
add
popa
push
daa
cmpsl
loop
les
lret
push
pop
mov
mov
jnp
fnstenv
dec
icebp
notb
xchg
fists
mov
xor
sub
push
stc
int
pop
push
sarl
iret
pop
mov
loop
sti
repz
in
push
xchg
aam
cmp
aas
fstpl
stos
sbb
mov
pop
fmuls
inc
sub
dec
icebp
pop
in
push
cltd
sbb
push
pop
dec
fsubrl
ficomps
stos
sti
jae
mov
or
mov
adc
mov
jne
pop
aad
fcoms
lea
sbb
xor
mov
push
sbb
es
sbb
pusha
add
dec
pop
stos
movsl
adc
jo
addr16
shll
test
or
imul
aad
sub
pusha
in
push
insb
nop
mov
outsb
ret
xor
dec
lods
lds
bound
xor
xchg
sub
dec
mov
iret
adc
sub
xor
fnstcw
xchg
lods
adc
pop
and
outsb
mov
repz
incb
xor
add
lock
outsb
mov
jmp
or
dec
loopne
lds
jg
dec
jl
jge
mov
std
xor
ds
int3
inc
clc
loop
mov
mov
cld
dec
sub
subl
cmpsl
test
icebp
push
cmc
or
leave
dec
ljmp
sbb
lods
pop
lcall
aad
sbbb
arpl
push
mov
movsb
outsb
and
inc
pop
inc
mov
push
por
dec
stos
imul
jbe
xor
sbb
jg
cmp
sub
in
clc
dec
mov
mov
push
cwtl
shrl
lds
dec
dec
cmp
stc
cwtl
mov
sbb
pop
sub
xlat
roll
sub
bnd
pop
sahf
push
fcoml
mov
mov
sub
loopne
call
push
stos
lahf
popa
ss
pop
fs
inc
jne
dec
cmpsl
sbb
and
cmc
lods
clc
fwait
pop
hlt
lcall
mov
imul
lea
push
std
cmpsl
mull
add
mov
xor
inc
mov
inc
sub
mov
cmpsl
scas
in
mov
mov
aaa
cmp
jp
push
scas
jo
shr
cli
sahf
sub
int3
scas
sbb
loope
xchg
ss
sbb
mov
je
test
es
js
popa
sub
sbb
mov
push
pop
outsl
mov
lock
aaa
mov
add
jg
sub
inc
pop
or
sub
push
cmpsb
cmp
cmp
add
push
sbb
imul
jge
xor
dec
shrl
stos
pop
jecxz
popf
sahf
jbe
shrb
jg
leave
rcrb
jbe
dec
lret
les
enter
inc
mov
xor
mov
or
push
data16
fisubs
hlt
or
xchg
push
insb
lock
and
inc
enter
scas
jnp
cmp
popf
mov
push
push
incb
imul
jl
jl
jae
je
add
push
rorl
test
repnz
ja
push
orl
jae
out
adc
insb
mov
nop
sub
push
testl
xor
stos
sbb
inc
sub
xor
sbb
out
pop
scas
add
fstpt
test
inc
icebp
dec
popa
push
dec
leave
hlt
andb
lcall
mov
ds
mov
stc
xchg
in
fstl
push
aas
loope
dec
movsl
cwtl
sarl
cmp
ljmp
cs
mov
mov
aam
sub
in
mov
jne
popa
cltd
or
ds
and
stc
out
push
fdiv
ljmp
insl
jae
push
pop
and
loop
xlat
mov
xor
pop
rclb
jg
push
mov
xor
inc
shr
xor
iret
pop
roll
mov
cmp
xchg
popf
es
push
popa
iret
cmp
repnz
cmp
iret
jecxz
mov
lret
mov
in
loop
inc
and
dec
arpl
movsl
push
adc
or
add
mov
rorl
lock
and
mov
and
dec
add
leave
ljmp
inc
lret
cmp
dec
aas
adc
xchg
xor
addl
ja
push
test
add
add
pop
cmp
out
and
mov
jbe
jnp
in
pop
stos
lock
fisubrs
sbbl
insb
mov
pop
aad
add
out
sahf
cmpsb
jns
pop
xchg
ret
push
sub
divb
and
call
sbb
inc
std
mov
negb
adc
testl
jmp
shl
or
loope
xchg
cwtl
stc
dec
std
cmpsb
add
js
inc
dec
insl
loopne
xsha256
cmpsb
push
fsubl
add
iret
sub
pop
xlat
stc
mov
sbb
rcrl
in
add
imul
jmp
adc
adc
out
jl
xor
xchg
and
push
fcmovb
and
test
cmp
arpl
dec
pop
arpl
mov
nop
fidivrs
sti
stos
loop
mov
lods
jmp
mov
fadds
inc
repnz
jno
cmp
xchg
popf
loop
nop
sub
dec
loop
lods
jno
cld
std
into
and
pop
dec
out
movsb
shrb
scas
andl
and
cmp
push
inc
jo
aaa
sarl
add
scas
dec
in
adc
outsl
pop
mov
repnz
jecxz
push
cmp
jno
daa
sbb
pop
loope
sub
push
inc
enter
push
sbb
push
mov
lcall
xchg
vcomisd
add
cmp
bswap
lret
movsb
push
cmp
dec
mov
or
in
mov
xchg
push
xchg
jnp
mov
pop
add
movsl
jnp
lret
insl
sub
cmp
fsts
rolb
call
push
pop
into
jb
dec
frstor
popf
inc
push
pop
fcompl
ret
pushf
xor
movsb
aam
jmp
rorl
jae
sub
mov
in
push
dec
cltd
inc
sbb
fldenv
out
flds
stc
pop
and
xlat
nop
cmpsl
mov
xor
movsl
inc
cmp
push
or
mov
jae
sub
lods
inc
bound
sbb
test
aaa
jg
add
mov
xchg
jo
or
sub
dec
jl
and
sbb
mov
pop
es
stos
mov
cmc
movsl
mov
leave
shr
sbb
pusha
mov
xchg
sti
sti
aaa
mov
fistpll
pop
ss
jg
sbb
pop
push
ret
add
loop
inc
and
sub
xor
gs
imulb
xchg
push
test
imul
sti
mov
cmc
inc
push
or
cs
pushf
mov
lret
rorb
fistpl
mov
sti
fstpl
bound
dec
je
dec
mov
mov
repnz
xchg
jns
sub
adc
cmp
out
sub
inc
push
and
jmp
add
std
mov
cltd
shlb
adc
sub
jle
movsb
dec
sub
test
sahf
push
cmp
pop
sub
and
inc
aad
test
add
inc
lcall
test
or
push
push
lds
cld
jge
or
jp
sbb
mov
push
in
xor
xchg
mov
pop
pop
in
or
mov
bound
mov
add
mov
xorl
lock
pop
test
pop
xchg
xchg
movsl
sbb
mov
test
test
sbb
fmuls
test
xor
in
add
or
xor
adc
ret
xlat
loop
stc
mov
add
stc
adc
inc
inc
aad
loopne
mov
adc
add
mov
adc
dec
xor
mov
mov
and
or
lock
aam
pop
call
test
rcl
mov
stos
inc
inc
sbb
ja
mov
inc
jae
sub
in
sarb
loop
or
mov
arpl
sbb
cld
and
dec
add
push
mov
fwait
jb
push
out
movsb
ds
pop
jne
out
jecxz
sub
mov
lretw
js
mov
xchg
lock
insb
push
mov
xchg
hlt
mov
lods
mov
cmp
cltd
adc
mov
or
ljmp
and
mov
sbbl
sub
es
xchg
sti
shlb
jns
xchg
dec
xchg
sarl
jmp
clc
or
mov
mov
cld
cmc
mov
push
pushf
xor
push
mov
fidivrl
pop
cli
outsb
outsl
and
dec
fwait
push
cld
popa
push
std
xor
pop
in
pop
add
pushl
mov
aad
icebp
sub
insb
outsl
mov
imul
pop
xchg
leave
aaa
lods
shrd
jecxz
adc
jne
sti
out
outsl
int3
xchg
inc
dec
pop
and
out
aaa
call
jg
cld
mov
xor
lods
add
outsb
pop
fldenv
adc
sub
repnz
add
aaa
xchg
data16
push
sbbb
fcmovu
icebp
xor
jbe
or
sarb
adc
dec
jnp
out
movsb
bound
mov
nop
clc
dec
jp
mov
or
and
stos
inc
mov
insl
out
js
sub
xor
or
push
test
dec
mov
jge
inc
ror
jae
outsl
fsubs
jmp
sbb
jmp
pop
inc
xchg
mov
pop
jbe
mov
jno
aam
insl
sub
das
leave
inc
pop
lods
xor
adcl
mov
call
sbb
shll
pushf
mov
insb
or
mov
lret
adc
xchg
mov
sbb
in
insl
addr16
lret
xchg
push
mov
outsl
and
xor
jmp
js
call
mov
xchg
fcoml
mov
mov
fstp
pop
mov
pop
test
fnsave
adc
mov
pushf
cltd
xor
mov
mov
jl
pop
cld
and
negl
pop
or
adc
dec
mov
je
or
popa
pop
out
jae
cmc
dec
cltd
movsl
out
dec
xchg
test
fsubl
cmpb
xor
stos
cli
mov
adc
insl
stos
das
mov
xchg
andb
jp
mov
push
lcall
adc
call
leave
adc
decb
inc
inc
dec
movsl
mov
sbb
iret
push
cltd
adc
in
mov
adc
cmp
mov
nop
daa
mov
push
mov
imul
stc
push
mov
jae
dec
adcl
rol
sbbl
mov
insl
push
sub
pop
stos
pop
mov
cli
dec
fstpl
insb
popf
sti
ficoms
fildll
or
popa
inc
jns
dec
cwtl
out
repnz
dec
in
cmc
cmp
cmp
xor
xor
pop
pop
lahf
lret
out
aad
jmp
mov
mov
pop
pop
mov
shrb
cmp
dec
jne
cmpsl
ss
mov
shlb
outsl
dec
inc
and
push
call
arpl
xor
xchg
jbe
mov
call
in
sbb
sbb
pop
and
roll
shlb
not
imul
push
cmp
xor
mov
stos
popf
fwait
or
into
cmpl
je
add
es
adc
adc
insl
mov
pop
iret
xlat
or
ret
jne
cmp
fst
xchg
push
out
xlat
in
ss
xor
jle
hlt
add
ljmp
dec
xor
rcrb
lahf
insb
dec
dec
fstl
lods
js
push
addl
sarl
std
push
repz
gs
push
dec
fldl
mov
fwait
and
sbb
jg
add
push
ror
jecxz
and
add
in
cmpsl
leave
cmp
mov
fcompl
aam
pop
lea
inc
cltd
xchg
lcall
cmp
sbb
in
xor
rolb
bound
push
aam
mov
outsl
cmpsl
inc
jmp
dec
rcrl
js
and
inc
fs
das
enter
dec
pop
push
or
sahf
add
or
xor
sbb
xchg
sbb
add
fs
sbb
aam
xchg
mov
js
js
shl
inc
shll
cmpsb
adc
or
imul
sti
rcrb
dec
mov
xor
pop
hlt
xchg
xchg
pusha
mov
lea
repnz
dec
iret
pop
fisubs
xchg
push
rcll
fisttpl
fxch
and
test
sbb
push
cmp
or
jl
jns
sbb
mov
xchg
dec
or
mov
jno
nop
mov
cld
cmp
ret
movsb
or
push
dec
dec
js
mov
and
sahf
mov
or
mov
test
xor
repnz
mov
lcall
sbb
jo
inc
mov
mov
xor
xor
enter
dec
dec
ret
jne
mov
push
xor
pop
loop
in
mov
sahf
push
or
cmp
mov
xchg
push
push
fcoms
mov
push
jl
test
outsl
ja
jp
leave
sub
dec
fnstenv
jae
ret
jne
mov
repnz
insb
sbb
mov
pop
test
sbb
fisttps
test
jns
sarb
orl
jcxz
jno
ficoms
jno
int3
js
jecxz
addr16
inc
add
stos
xchg
scas
jb
or
mov
pop
xlat
mov
and
aad
dec
lods
push
dec
pop
out
lahf
and
add
sub
pop
push
dec
pop
imul
loope
sbb
into
pop
cmpsl
ljmp
iret
lock
adc
adc
xchg
cmp
sbbl
leave
or
adc
pop
cwtl
xchg
and
addl
mov
push
or
loopne
addb
orb
mov
mov
add
jg
pushf
sahf
cmp
rcrl
loope
mov
and
std
xor
or
inc
pushf
jmp
ljmp
xchg
and
shlb
push
rcl
add
pushf
ljmp
mov
xchg
nop
test
jmp
mov
test
fisubl
mov
sub
add
lods
mov
ds
mov
scas
pop
test
add
into
sub
out
repnz
lret
push
push
sub
pop
call
les
cmpsl
adc
or
movsb
popf
enter
cmp
vandnpd
loop
popl
pop
xchg
or
dec
incb
sbb
and
dec
and
adcb
mov
cmp
popa
cmpsb
call
push
pop
xor
xor
sub
lds
aad
mov
or
scas
gs
inc
fists
cmp
cmp
xor
mov
std
lea
mov
lret
jp
lret
shll
or
sbb
cld
push
jmp
and
xchg
lea
jmp
sub
and
inc
and
xor
cwtl
mov
mov
push
sbb
or
dec
jnp
les
mov
and
jns
in
adc
jmp
int
imul
int3
cli
enter
mov
pusha
pop
cmp
ljmp
add
in
pop
xor
out
push
test
mov
int3
jp
stos
stc
xchg
not
ret
mov
popf
arpl
mov
sbb
insb
inc
sub
mov
push
fsub
mov
cli
aad
imul
inc
rclb
mov
jg
xchg
mov
cmp
outsb
xor
inc
pop
pop
push
push
fisubl
hlt
lea
dec
in
xor
stos
fimuls
add
or
test
xorb
cmpsl
pop
cmp
cmp
aas
xorl
add
scas
lods
aad
push
xchg
dec
jecxz
idivl
push
mov
aam
push
jecxz
hlt
pop
jo
stc
jmp
fsubrl
repz
push
dec
push
popa
xchg
pushf
push
mov
mov
and
mov
test
pop
je
cmc
shrl
xchg
sbb
mov
repnz
out
xchg
in
xor
in
jne
shll
pusha
fiaddl
rol
xchg
mov
sarb
clc
fbstp
movsl
nop
adc
cmp
adc
xchg
mov
pop
clc
adc
xchg
test
sbb
cvttps2pi
hlt
cs
dec
shll
pop
dec
mov
or
fimull
clc
mov
lcall
leave
out
cmp
jb
insl
or
adc
add
mov
dec
mov
adc
pop
je
inc
sub
sahf
pusha
adc
push
xchg
lahf
and
out
lret
add
jg
mov
cwtl
mov
cs
fcmovnb
leave
popf
dec
nop
insb
shl
push
je
repnz
pusha
ret
xor
ljmp
mov
arpl
sub
cmp
sub
dec
stc
aaa
cmc
fbld
inc
jg
in
and
in
js
inc
push
fadds
mov
push
sbb
insb
mov
push
xor
cs
jmp
jg
fisttpl
out
repz
jmp
xor
mov
inc
je
lods
mov
js
push
repnz
or
jae
outsb
cmc
jecxz
ljmp
repnz
sub
nop
pop
dec
adc
mov
lret
imul
adc
xor
dec
xchg
lods
mov
pop
mov
pop
xchg
dec
jecxz
cmc
xor
cld
or
jmp
aad
jae
adc
mov
adcb
xchg
mov
jb
frstor
enter
jecxz
fchs
sbb
mov
inc
ret
jbe
push
call
adc
pop
cs
frstor
test
adc
out
test
add
pushf
roll
push
outsl
mov
and
xchg
adc
clc
cwtl
xchg
xlat
cld
push
lret
insb
push
insb
ret
jno
lret
jl
out
lds
push
cmp
movsb
lock
repnz
outsb
cmp
xor
nop
rclb
sub
jmp
or
dec
xchg
sahf
adc
ja
sahf
or
clc
sbb
les
mov
fs
rol
push
xor
icebp
neg
lods
push
insl
adc
push
xchg
jae
std
mov
pop
xchg
mov
push
jmp
iret
and
sub
es
lods
dec
scas
out
fwait
in
adc
popf
mov
cli
into
icebp
mov
mov
push
ja
sarl
je
mov
enter
push
cmc
push
jb
loope
aam
sub
lcall
sbbb
fnstenv
mov
and
lret
les
shll
adc
out
andb
inc
pop
sbb
mov
sahf
in
fisubs
mov
into
mov
xor
sub
xchg
add
dec
dec
out
or
daa
std
inc
in
sub
sub
jle
das
mov
int3
xorb
add
lret
ret
cmp
iret
fcomps
jb
int
repnz
int3
mov
mov
lret
fistl
xlat
int
add
stos
cmp
pop
mov
jns
xchg
adc
lret
subl
addl
int
daa
lcall
ljmp
notb
sub
pop
rorl
lret
mov
or
test
lcall
int
jno
cld
jae
inc
xchg
cli
inc
mov
ljmp
sbbl
mov
mov
pop
lods
pusha
mov
cmp
sub
scas
dec
dec
mov
sub
xlat
std
sbb
cld
es
xchg
push
popa
mov
adc
rorb
xor
scas
arpl
lods
inc
test
int
and
pop
jg
fidivl
dec
jb
subb
incl
xor
cmp
cwtl
subb
fwait
out
and
leave
rolb
aam
movb
pop
mov
xor
aaa
aam
mov
add
sub
lods
and
lods
leave
inc
and
add
popf
xor
aaa
bound
sbb
sahf
and
add
lock
mov
ficoml
mov
dec
pop
push
push
into
push
add
pop
cli
stc
jmp
cmp
push
jnp
sarl
jmp
sbb
dec
inc
stos
push
cmp
push
insl
pop
divl
je
adc
loop
mov
xlat
push
push
leave
xchg
or
pop
or
and
bound
aam
setp
push
inc
mov
loopne
std
pusha
xlat
pop
in
flds
or
pop
rcrb
cli
xor
dec
fdivrl
push
cmp
js
ss
bnd
clc
bsf
mov
stos
lods
push
sbb
dec
pop
cltd
sub
out
xchg
and
mov
dec
xor
mov
xor
stc
mov
mov
cmp
push
push
or
xor
inc
push
mov
aad
xchg
xchg
loopne
xchg
adc
sub
jno
call
adc
xchg
nop
test
push
jb
push
fimuls
mov
not
sbb
jp
inc
out
mov
mov
push
nop
lock
push
sbb
fwait
in
jmp
hlt
dec
or
adc
push
xlat
push
iret
pop
and
or
mov
loop
xor
push
push
fbld
pop
xchg
fwait
jns
push
das
adc
add
negb
fstpl
repnz
pop
cs
jge
fiaddl
fisttps
add
add
and
xor
sub
gs
mov
sbb
out
imul
cld
hlt
daa
sbb
dec
dec
out
repnz
adcb
or
xor
mov
out
jae
mov
in
sub
out
call
push
test
cli
push
aad
jno
mov
stos
mov
lret
dec
push
out
mov
movl
mov
cli
js
cmpsl
xchg
scas
lret
push
and
inc
mov
test
pop
cmp
cld
cli
into
gs
push
sub
push
scas
mov
jp
mov
je
imul
pop
pop
push
dec
xchg
testb
insl
add
call
xchg
int3
cmp
shl
fdivrs
addl
xor
sarl
and
pop
ss
pop
stos
daa
adc
rcll
jecxz
jle
scas
xchg
add
or
xchg
mov
aaa
mov
add
scas
mov
shr
fnstcw
push
jp
pushf
ret
enter
mov
dec
xchg
lret
xchg
xchg
in
aad
adc
mov
mov
push
push
aaa
xchg
les
out
dec
mov
pusha
push
and
pop
mov
jl
lret
dec
lds
jns
orb
insb
mov
outsb
and
push
fninit
dec
xchg
in
loop
push
pop
dec
cltd
push
jl
and
push
cld
mov
xor
out
outsb
push
lahf
inc
sub
call
comiss
jb
clc
cmp
and
jg
dec
dec
das
rorl
adc
dec
popl
insl
gs
pop
adc
sti
xchg
jmp
sub
icebp
jg
test
jg
pushf
xchg
movsb
std
movsb
inc
pop
cmp
fcompl
cld
inc
jne
je
pop
fwait
loop
fstpl
pushf
adc
cltd
sbb
out
xor
hlt
mov
aam
sbb
sub
sub
js
jb
sub
and
ss
rcrb
xor
iret
in
jecxz
push
push
mov
out
es
add
fdivrl
mov
push
pop
and
xchg
cwtl
pop
or
movsb
push
jo
xchg
stos
adc
int
sub
pop
dec
inc
push
xor
push
jecxz
idiv
cmpsb
dec
jge
add
outsl
jno
gs
das
push
cmpsb
and
jns
xor
stos
ret
shll
pusha
data16
xor
add
and
out
inc
xor
movsl
ret
mov
dec
incl
push
test
and
loope
movsl
dec
dec
lgs
shlb
or
rcrl
cld
sub
ljmp
sbb
cmp
fsubp
clc
sub
je
into
sbb
pop
mov
fists
or
cmc
data16
nop
mov
mov
fs
loop
fwait
and
ds
jl
setnp
fidivrl
jno
cmp
sub
in
sbb
sbb
sub
jbe
sub
sbb
loopne
cld
mov
mov
and
or
dec
fldl
hlt
cld
repnz
out
dec
mov
inc
jnp
fld
nop
push
mov
cs
adc
sbbl
les
insb
pop
push
mov
les
sahf
xchg
imul
stc
dec
lods
iret
loopne
int
dec
pop
mov
dec
or
xchg
sub
inc
sub
sub
push
mov
sbb
stos
dec
icebp
das
pop
movsb
sbb
sub
cmp
xor
scas
or
or
mov
adc
dec
std
out
lock
xlat
jle
xlat
add
mov
mov
add
and
jle
jbe
shl
leave
xor
rolb
add
cltd
jg
and
jle
sar
xor
jno
in
add
jle
lock
cmpsl
arpl
and
mov
xlat
mov
sahf
or
leave
inc
pop
sbbl
inc
cltd
and
pop
xor
push
in
xchg
add
test
je
jbe
push
inc
fbld
adc
add
xlat
inc
xchg
jecxz
movsb
pop
test
test
lret
add
jne
sbb
jecxz
imul
fwait
mov
add
lods
fildl
mov
fsubr
movsb
ss
outsb
hlt
shl
push
fldt
call
call
sbb
sbb
inc
cltd
in
es
clc
push
roll
mov
add
jo
movsb
iret
cli
movsb
rcrl
loope
movb
and
stos
adc
outsb
jl
mov
cmp
fs
mov
adc
lds
ret
in
scas
leave
cli
mov
pop
dec
or
lret
bound
mov
mov
mov
adc
cwtl
in
mov
cmp
dec
jmp
out
mov
cmpsb
aas
mov
or
hlt
lock
dec
jle
xchg
lock
dec
cmp
fidivs
test
mov
inc
bound
jae
std
mov
and
cmp
xor
insl
mov
sub
lea
dec
lahf
xor
movsb
daa
outsl
pop
mov
pusha
test
dec
push
data16
lret
mov
mov
aad
aam
mov
fsubp
xor
mov
and
or
inc
not
lcall
ljmp
bound
sti
nop
sbb
xor
jnp
jg
or
call
inc
incw
pop
mov
or
sub
sub
push
jo
cld
sub
fimull
rorl
cmp
and
ljmp
dec
jae
add
sub
add
aaa
cmp
lock
test
mov
lock
xchg
jecxz
sahf
and
xlat
cmp
lret
xchg
push
sbb
movsb
movsl
cmp
xchg
push
add
rcrb
pushl
lcall
cmp
push
push
dec
inc
mov
xor
pop
outsb
pushf
in
out
repz
push
mov
shlb
mov
xchg
arpl
sbb
mov
js
xchg
add
fcmove
cmpsl
fwait
sub
fisttpll
pop
sub
push
xor
lods
push
jg
xor
and
dec
jecxz
rolb
pop
pop
and
sub
push
ds
dec
cmpsb
xchg
arpl
mov
or
and
cmp
cmp
cmpsl
cmc
mov
mov
cwtl
fldl
out
mov
data16
mov
mov
loopne
std
adc
push
aam
test
pop
cld
xor
adc
hlt
mov
xor
push
push
sbb
movsb
mov
fs
pop
popf
jmp
fnstsw
dec
adc
cmpsl
in
jle
sbb
stos
xor
test
sbb
or
in
sbb
sbb
insb
cmp
int
lods
mov
or
add
in
mov
pop
fbld
lea
int3
ret
mov
fdivs
addr16
stos
fcompl
jecxz
cmp
gs
pop
add
dec
cld
out
insl
lods
add
push
or
mov
or
pushl
test
mov
dec
xchg
scas
in
inc
dec
fnstsw
push
and
fptan
adc
pop
and
dec
push
pop
pop
sbb
pop
outsl
lcall
mov
cmp
mov
pop
test
xor
push
pop
add
lret
mov
rorl
lods
mov
cmp
into
push
lods
rcrl
xchg
adc
mov
leave
sarl
call
jmp
cmp
addl
mov
fmulp
dec
jne
sbb
xor
push
jecxz
lods
xlat
mov
xchg
push
leave
mov
shlb
ljmp
aam
stc
push
sbb
cmp
xlat
cmc
inc
loop
push
jne
cwtl
cmp
sub
out
pop
jnp
adc
movsl
xor
add
dec
in
test
lds
scas
pusha
fdiv
fidivrs
fdivr
rol
sbb
in
ret
pop
jnp
mov
adc
mov
cltd
mov
pop
or
or
mov
mov
addr16
movsl
xor
inc
stc
jo
gs
xorb
cmp
dec
cwtl
pextrw
test
pop
aam
jbe
xor
scas
iret
add
rep
push
push
aam
pusha
nop
mov
lock
mov
into
push
add
mov
scas
fcompl
shrb
pop
lret
aad
mov
xchg
outsl
repz
jbe
jecxz
adc
repz
adc
es
icebp
and
mov
stos
pop
test
mov
out
add
cs
popa
out
dec
movsb
mov
pop
dec
xchg
fcmovb
adc
fildl
pop
int3
pop
div
mov
fdivr
xor
cli
test
mov
xchg
ss
sarl
add
sbbb
cmpsb
lahf
or
mov
or
dec
mov
xchg
dec
ret
mov
sbb
sub
mov
or
or
adc
mov
dec
movsl
mov
lods
sbb
adc
jl
adc
in
jg
add
mov
clc
addr16
xchg
sbb
mov
push
xor
xlat
pop
movd
lahf
ret
cmovle
pushf
je
xlat
sahf
mov
add
stos
sub
mov
es
adcb
mov
sahf
pop
push
sarb
dec
imul
and
cmp
jbe
push
mov
shll
sbb
mov
addr16
lock
cmp
fmul
jp
and
repz
insl
out
in
incl
jmp
loope
mov
mov
sbb
cwtl
fistpl
sbb
movsb
jno
jnp
jno
out
arpl
sahf
sub
xchg
inc
je
or
push
movsb
xor
cmpsb
mov
push
mov
or
sub
addl
lahf
mov
aaa
sub
lds
shrl
adc
mov
ljmp
mov
sub
sub
les
bound
adc
inc
fsubrs
shrb
mov
icebp
sbb
ds
cmpsb
pop
push
scas
sub
inc
cmp
lods
and
mov
in
clc
add
push
mov
add
sbb
xchg
fs
mov
mov
xor
xchg
fdiv
clts
icebp
leave
sub
movsb
imul
add
add
insl
leave
lahf
sbb
ljmp
cli
aaa
cli
xchg
jl
xor
xor
les
insl
mov
cmp
dec
psrlw
adc
scas
addb
clc
jo
mov
pusha
xchg
in
inc
dec
inc
sub
lock
out
dec
push
loop
sbb
cmp
mov
cltd
clc
in
push
inc
outsb
test
xor
clc
and
stos
cmpsl
xor
sbb
sbb
insb
cmc
pop
adc
adc
xchg
xlat
pop
xchg
adc
sbb
bound
ficoml
and
pop
dec
lods
jle
push
jle
rcl
mov
rorb
cwtl
xor
enter
scas
mov
mov
inc
outsb
dec
sub
add
andl
popa
scas
sbb
pop
cmp
imul
roll
push
jle,pt
jecxz
out
ror
sbb
push
dec
or
into
xor
stc
pop
out
mov
stc
add
fbld
pop
pop
jns
inc
sti
mov
adc
mov
fs
inc
cmpsl
test
rep
pop
or
or
std
pop
or
inc
or
notl
inc
fsubs
mov
aad
jnp
mov
jmp
inc
sub
outsb
pop
test
xor
fldt
xchg
mov
sub
and
add
fiadds
mov
mov
rcrl
push
and
mov
add
fists
inc
pop
sub
and
movsb
jne
popf
fdivs
lahf
push
pop
sub
test
pusha
push
inc
sub
leave
inc
adc
mov
sbb
push
push
lret
ret
pop
pop
mov
out
push
xor
cvtps2pd
sti
pop
mov
lret
out
xchg
and
lds
jecxz
dec
aaa
add
movsb
adc
adc
pop
sbb
imul
jae
push
into
cs
fsub
pop
cmp
icebp
paddusw
popf
xchg
jg
jo
or
mov
xor
xlat
arpl
mov
dec
cmpsl
pop
in
pushf
or
push
dec
jb
push
jne
mov
clc
add
scas
lret
jno
adc
push
cmpsl
and
sub
pop
add
cmc
daa
xor
mov
movsl
mov
adc
mov
xor
insl
jecxz
xchg
jae
ret
leave
cmp
fucom
std
mov
out
push
faddl
cmc
xchg
stc
mov
pushl
mov
ficoml
xchg
sub
pop
xchg
add
dec
adc
add
adc
jmp
inc
dec
jae
inc
jg
push
das
xchg
das
dec
pop
movsl
or
div
stc
sub
pushf
mov
es
dec
imul
mov
inc
or
dec
aad
xchg
jb
mov
test
jle
data16
stc
stos
sti
push
jbe
mov
jnp
fists
dec
leave
xchg
in
and
rorl
or
push
testl
ja
xchg
pop
idivl
push
jle
imul
adcb
fnstenv
and
mov
movsl
sbb
add
sti
arpl
mov
push
fisubs
lods
inc
dec
and
leave
pop
xchg
jp
xor
mov
ds
dec
cmc
hlt
scas
outsl
out
jns
in
inc
mov
js
jge
in
inc
cs
leave
mov
outsb
pop
pop
pop
xchg
adc
jg
loop
cmp
sbb
divl
xor
fs
test
fwait
sub
sbb
xchg
aad
cmpsb
lods
dec
mov
dec
add
or
push
sub
shl
jnp
push
push
mov
ja
dec
xchg
push
fiadds
lret
pop
cmpsb
cmpsb
mov
jbe
pop
or
imul
adc
into
inc
pop
jmp
ret
lahf
mov
in
inc
sub
repnz
sub
ss
fcmove
negl
jno
and
push
hlt
sub
sti
es
dec
ja
and
fsubrs
xor
mov
imul
mov
mov
iret
fisubrl
call
pop
adc
mov
push
push
cmp
jbe
and
sbb
aaa
pop
ja
enter
arpl
mov
in
in
xor
icebp
jecxz
cs
jbe
mov
lods
mulb
sub
fwait
xchg
cmp
pop
sbb
mov
fsubs
mov
push
xor
mov
mov
pop
mov
ret
icebp
or
sub
inc
jns
cmc
add
shlb
scas
lret
push
cmp
inc
test
das
sub
mov
sub
sub
inc
mov
add
dec
and
xor
push
in
shrl
les
sbb
and
inc
lcall
loope
sub
jno
xchg
testb
sub
sub
pop
mov
xchg
ss
push
dec
lds
mov
lea
mov
mov
mov
fcomps
and
cmp
pop
mov
fnstcw
jo
push
jb
xor
lahf
inc
pop
filds
or
sub
popa
inc
in
int
and
cmpsl
xchg
jle
dec
jns
push
push
push
jae
movsl
push
dec
test
push
xor
icebp
loop
icebp
push
fs
aaa
mov
nop
test
mov
mov
inc
pop
adc
out
lods
loop
pusha
xchg
fmull
scas
popf
xor
gs
sbb
cmpsb
pop
dec
test
inc
adc
out
cmp
lea
leave
xor
cs
lods
rclb
clc
cmp
fs
jp
mov
loopne
pop
mov
les
cmp
mov
in
push
add
pop
jb
leave
mov
inc
inc
xor
push
mov
cmpsl
sahf
adc
xchg
mov
push
xchg
mov
xor
mov
arpl
xor
not
mov
insb
push
and
test
daa
mov
sub
mov
mov
outsl
dec
call
mov
sti
cltd
or
incb
push
pop
jns
in
jbe
mov
mov
mov
mov
mov
cbtw
inc
xchg
flds
add
movsb
jle
mov
and
cmp
push
lahf
sti
adc
popf
mov
push
jnp
pop
mov
cmp
push
fsts
push
mov
adc
push
dec
lret
shlb
xor
xchg
stc
arpl
out
icebp
ja
sbb
mov
ja
cmpsb
pop
scas
testb
lods
out
sbb
and
xlat
jno
ficoml
repz
jns
out
loopne
jl
test
pushf
lcall
jne
sub
pusha
jns
push
movsl
shll
icebp
daa
outsb
mov
inc
ljmp
jae
enter
add
sub
add
push
js
test
cmovl
push
es
dec
insl
cmp
and
fs
cmp
mov
vmwrite
ja
xor
dec
mov
cmp
jg
popa
imul
mov
aad
jmp
mov
sarl
adcb
push
loop
ds
lret
xchg
lahf
push
in
cs
jbe
outsl
sbb
jnp
mov
dec
push
fs
cmp
mov
adc
jnp
adc
dec
insl
sbbb
pop
adc
inc
inc
jge
and
push
or
shr
insl
leave
xchg
decl
cli
test
testb
and
mov
outsb
pop
sub
mov
pop
loopne
int3
mov
jmp
adc
fisttps
loope
dec
imul
stc
outsb
xor
mov
add
arpl
and
jle
leave
std
jecxz
out
xor
xor
inc
sub
xchg
cmp
mov
into
jno
int
sbb
rorb
pand
adc
shrd
and
jle
inc
mov
lea
enter
aas
aaa
ja
ljmp
push
imul
lcall
add
pop
cmp
gs
fisttpll
adc
add
jne
dec
xor
vprotw
cli
in
movsl
mov
icebp
mov
adc
mov
xchg
xlat
push
pop
mov
and
pop
fdivrs
int3
mov
cmp
pop
cmpsl
dec
das
push
add
sahf
cmp
push
aam
pop
cmpsb
or
popf
sbb
imul
dec
sub
orl
and
adc
jnp
adc
jg
sbb
or
and
ss
movsl
repz
addl
and
fldenv
pop
mov
mov
pop
pop
cmp
mov
test
jns
daa
pop
push
add
xchg
sbb
cmpsl
bnd
sub
add
xchg
andl
enter
inc
push
movsl
popf
movsl
xor
enter
aas
ss
or
scas
sbbl
jg
icebp
and
mov
repz
ja
push
aam
lret
adc
in
jnp
adc
and
cmp
shrl
out
shrb
add
cmp
in
loopne
test
xorl
repz
xlat
movsl
es
movsl
sbb
xchg
loope
ret
or
outsl
xor
andl
loope
add
and
cmp
add
in
push
jo
imul
cmp
jle
rcll
inc
inc
inc
fcmovb
idivb
dec
outsb
jp
gs
pop
popa
jl
or
and
cmp
push
addr16
mov
stc
pop
shll
mov
mov
cmp
rcrl
inc
gs
jg
cli
cmc
addr16
lret
inc
jle
ret
dec
xorl
cmp
cmp
int
stos
dec
jbe
mov
cmp
mov
pop
jno
popf
nop
les
enter
movsb
pop
in
mov
insl
dec
xchg
int3
mov
lahf
xchg
in
insb
and
int3
lods
jl
daa
jl
pushl
fcomps
stos
push
jmp
add
pop
fldl
ficompl
hlt
fcoml
lods
xchg
add
mov
sbb
je
or
imul
lods
stc
pop
mov
lds
or
mov
scas
xchg
adc
pop
lods
mov
pushf
bound
adc
daa
movsl
xchg
shlb
or
mov
jle
ds
add
hlt
leave
gs
jnp
jmp
xor
push
pop
rolb
fildll
jecxz
sub
and
jns
test
add
sbb
popf
lea
cmp
in
js
mov
push
negl
lahf
int3
or
and
icebp
jb
cmp
cmp
cmp
push
outsl
xlat
fdivrl
or
ljmp
push
pop
mov
mov
or
sahf
mov
jo
aad
stos
mov
mov
cmp
test
add
ja
pop
mov
sbb
je
testb
lods
sub
jp
ret
cmp
add
in
cmp
xchg
fldt
mov
rcrl
jp
addr16
ja
cli
sub
pop
pusha
jb
mov
mov
and
lods
sub
loopne
xlat
mov
mov
sub
fmull
dec
les
into
sbb
in
fidivrl
sbb
push
cmpsb
stos
lahf
lret
xchg
or
cs
push
out
jno
rolb
ljmp
mov
and
jae
jo
pop
mov
inc
adc
insl
xor
aas
out
add
ja
fisttpll
cwtl
or
aam
fcoms
pushf
pop
outsb
lahf
shlb
shll
gs
xorb
loope
lahf
movsl
sub
push
inc
std
and
adc
inc
jecxz
jne
mov
inc
test
sbb
cmp
imul
xchg
xor
test
mov
or
or
pop
rcrl
adc
dec
iret
enter
cwtl
lret
push
rcll
mov
decb
fdivrl
pop
and
and
push
mov
sbb
mov
adc
fcoml
lret
ret
cltd
pop
adcb
sub
cwtl
in
adc
pop
mov
jne
lret
dec
aad
xor
in
sbbb
and
xlat
aaa
adc
dec
xchg
or
push
imul
jl
test
mov
sub
insb
ret
sbb
push
nop
or
in
mov
dec
add
mov
out
or
fstpl
xrelease
lds
and
xor
pop
mov
in
mov
push
sbb
mov
sbb
out
fwait
jp
pop
add
adc
jge
test
out
xor
xor
xchg
rcr
je
and
cli
cs
mov
jle
xor
out
or
pop
out
inc
and
lea
inc
mov
out
and
aas
jl,pn
or
cmp
xchg
loope
mov
outsl
in
jl
jg
das
inc
sbb
shll
xchg
push
insb
loop
int
sahf
push
jo
sbb
pop
mov
push
lahf
or
xlat
in
add
sub
jle
movsl
pop
pop
xor
adc
add
sbb
popa
pop
sarb
xorb
dec
xchg
test
insl
imul
icebp
cwtl
out
cmp
shlb
jb
push
aas
or
jle
jp
push
jmp
jnp
int
lahf
rcr
sbb
stos
hlt
lods
mov
daa
lahf
lret
ja
es
ljmp
in
ds
imul
inc
dec
dec
push
xchg
jns
scas
pushf
cs
xor
jg
aaa
ss
pusha
adc
mov
sahf
pushf
jne
adc
hlt
xor
aad
dec
hlt
jge
jae
jmp
or
push
mov
or
test
jmp
push
xlat
rcl
jae
test
inc
jbe
pop
aaa
inc
cmc
jae
xor
or
arpl
jnp
jbe
in
mov
cmc
inc
sbb
test
mov
jle
mov
ret
jle
ja
adc
fldt
jne
adc
into
push
lcall
je
jmp
jg
and
decl
int
fsubl
mov
jb
mov
pusha
sbb
arpl
clc
fidivrs
cltd
into
repz
sbb
add
jl
data16
jg
in
js
sbb
or
sbb
das
xchg
outsb
jo
jne
mov
mov
sbb
jmp
adc
xchg
jns
push
sbb
loope
push
imul
sub
test
add
js
fsubs
hlt
das
lds
mov
xor
add
mov
inc
movsb
cltd
stos
mov
stc
cmpsl
push
repz
fistpl
sub
cmpb
add
pushf
daa
push
jo
jge
or
push
lahf
popf
scas
mov
dec
dec
jb
and
cmp
dec
adc
addb
jmp
movsl
cmp
or
scas
sub
xor
adc
xor
bnd
xchg
add
jno
or
xor
push
dec
dec
jle
cmp
sub
mov
and
mov
cmc
sbb
outsb
push
data16
adc
nop
sbb
in
and
out
not
mulb
or
mov
inc
test
fists
jmp
daa
std
sub
mov
inc
movsl
xor
lea
mov
imul
dec
jno
in
cmc
mov
sbb
loop
adc
cmp
shl
data16
scas
ret
data16
mov
mov
arpl
mov
outsb
dec
loopne
adc
and
lahf
aam
xchg
popf
push
loopne
jbe
push
jb
xchg
push
filds
inc
mov
sti
mov
add
jecxz
push
scas
ret
push
cltd
test
mov
mov
add
add
xchg
cmp
lds
pop
cmc
lret
hlt
out
repnz
std
fistpll
cmp
repz
mov
inc
mov
push
add
hlt
std
nop
lret
icebp
xchg
adc
adc
subb
rcrl
lret
adc
lock
pop
das
iret
fsubrp
stos
fcoml
fnsave
and
mov
cld
stos
jg
xor
call
sbb
fcompl
test
and
add
fstl
and
cmp
sbb
insb
dec
jns
cmp
je
loope
dec
add
ljmp
jl
pop
movsl
gs
inc
xchg
pop
fwait
aam
xchg
dec
sub
in
push
in
daa
aaa
push
out
jb
test
enter
add
fmull
add
xor
call
cmpl
std
imull
jnp
xor
sbb
dec
jns
add
xor
dec
jp
fidivl
jne
sarl
call
test
mov
in
dec
mov
mulb
or
xchg
leave
and
push
adc
jp
outsl
cmc
or
mov
repz
mov
lock
lock
outsb
and
stos
scas
xchg
insl
cli
int3
xchg
xchg
xor
inc
mov
fstpt
fidivrl
sub
fs
das
mov
mov
dec
jp
jno
or
xchg
xor
cld
sbb
adc
clc
inc
js
outsl
mov
xchg
repz
adc
pop
xchg
push
cmpb
jnp
icebp
sbb
adc
jp
lods
sbb
loopne
push
xor
inc
sbb
lea
test
in
cmp
xor
inc
or
mov
add
xchg
pop
jo
repz
pop
mov
sar
lea
sbb
in
push
xor
outsb
pop
rcrl
dec
pop
sarl
and
stc
mov
stos
lods
adc
add
add
cmc
adc
jb
push
push
and
lods
push
leave
hlt
jo
mov
adc
mov
testb
inc
and
cmp
mov
test
aam
xor
pushf
out
pop
out
clc
scas
ds
push
stc
mov
hlt
pop
lret
mov
push
sbb
inc
jno
enter
out
stos
mov
jno
mov
shlb
incl
bound
stos
out
rorb
sub
inc
push
jmp
loope
dec
or
pop
xchg
mov
sub
dec
sbb
inc
xor
mov
test
cmp
dec
jmp
cmc
fisttps
out
lods
cli
add
mov
fcompl
in
mov
sub
xchg
push
sbb
mov
mov
loopne
loope
mov
lret
lea
mov
in
adc
adc
mov
ds
mov
jnp
test
xchg
out
add
test
or
lret
aam
sahf
sti
sbb
or
mov
rolb
push
lock
mov
mov
cmp
fdivrl
inc
xchg
pop
mov
inc
xlat
fsts
or
inc
enter
dec
xlat
adc
pop
push
mov
stos
int
mov
fstpt
push
stc
xchg
push
xor
jbe
mov
ja
add
mov
add
xchg
adc
adc
into
pop
xor
xchg
cmp
movsb
aaa
xor
xor
add
pusha
outsb
out
jnp
inc
xchg
jns
insb
inc
aam
imul
cmpsb
pop
mov
mov
aam
or
add
pop
or
mov
add
sahf
push
push
imul
sar
pop
sbb
inc
je
repz
jb
inc
cmpsb
jecxz
sbb
in
cwtl
rolb
pop
loop
xchg
mov
scas
mov
daa
cmp
mov
adc
out
daa
rcrl
shl
int3
enter
adc
sub
jp
or
xchg
sub
ljmp
mov
push
dec
push
stos
hlt
sbb
test
xor
dec
out
xor
mov
jge
mov
imul
cmp
repz
lods
nop
in
sbb
xchg
mov
stos
mov
loopne
ja
int
add
outsb
cmc
jo
pop
sbb
in
pushf
cmp
xor
aaa
rolb
mov
cmp
insb
lock
out
cmp
fdivs
out
out
mov
jb
or
dec
out
xlat
in
pop
jae
jne
in
shr
lods
lock
nop
push
dec
mov
jge
sbb
jle
popf
mov
pop
movsb
movsl
lret
push
lods
jne
adc
popa
push
sub
cmp
nop
out
into
scas
aaa
test
shl
sub
and
dec
sub
sbb
arpl
outsb
lahf
mov
addr16
sub
ja
shlb
hlt
xor
addl
jecxz
jmp
fcoms
jmp
aam
in
lea
ret
pop
mov
push
in
cmp
add
stos
je
test
int
ds
push
sbb
xor
mov
xchg
pop
push
mov
fs
daa
pop
cmp
shrl
jmp
xchg
insl
xor
push
sub
lock
adc
mov
rolb
sahf
and
movsb
test
mov
push
xor
jge
cs
scas
js
push
mov
mov
mov
cmp
xchg
lock
add
and
xchg
mov
ja
loop
push
xor
mov
jbe
faddl
aad
imul
mov
fcoms
and
jecxz
dec
leave
repz
outsb
cld
out
xor
jecxz
mov
movsl
int3
shlb
les
push
mov
xor
sbb
stc
sub
and
loop
pop
mov
adc
mov
jecxz
repnz
add
cmp
xor
insb
mov
xchg
pop
sti
aad
mov
push
hlt
jp
push
les
rorb
pop
faddl
cmp
push
push
cmp
pop
push
push
sub
xlat
dec
xchg
xor
andl
sub
shl
pushf
es
push
or
or
jae
aaa
push
mov
dec
inc
outsl
iret
and
xchg
testl
push
in
jmp
dec
ret
stos
jno
jne
cmp
or
pop
xchg
insl
ds
xchg
jg
sbb
dec
iret
and
inc
sbb
xchg
push
cmp
or
je
cltd
call
adc
sahf
dec
loopne
cmp
mov
mov
shrb
inc
jae
fscale
insl
jnp
mov
test
mov
fsubrs
ret
pop
nop
jmp
xchg
mov
movsb
mov
pop
or
sbb
fisttpl
inc
mov
sub
cmp
movsb
and
enter
xor
into
roll
mov
mov
cmc
lea
pop
or
xchg
and
jp
jecxz
mov
jmp
or
mov
insl
pop
or
push
stos
cmp
test
push
in
loope
push
xor
fs
nop
rcrb
or
addb
and
add
test
arpl
push
cltd
jns
je
add
xchg
out
fnstcw
inc
fnstsw
cmp
lret
pushf
add
outsb
sbb
lahf
jle
fisttps
test
ja
pop
out
mov
push
or
cmp
xor
pusha
mov
orb
and
add
mov
adc
lret
lock
adc
jle
inc
nop
aaa
cmp
xor
test
jb
mov
adc
add
mov
push
jl
cltd
sub
loope
sub
mov
adc
jg
popa
out
and
mov
push
cmpsb
adc
xchg
stc
xchg
add
adc
pop
add
inc
jp
out
std
jg
nop
insl
xchg
enter
lret
cld
imul
ret
lahf
js
loope
cwtl
ret
push
add
jnp
lock
jmp
cmpsl
clc
scas
ss
mov
xchg
lds
jecxz
outsl
fs
popf
push
ljmp
stc
mov
xchg
sbb
dec
jns
push
jg
sbb
loopne
and
aas
out
pushf
aaa
mov
mov
and
bound
jne
sub
xorb
pushf
clc
jne
push
aas
push
sbb
jbe
fmuls
jno
sbb
or
pop
test
icebp
pop
dec
out
ret
xchg
test
dec
roll
arpl
jl,pt
loope
xchg
arpl
inc
add
stos
ja
and
adc
mov
js
mov
pop
push
dec
jl
std
or
mov
in
popf
jecxz
negb
cmp
mov
shlb
inc
sti
imulb
jne
mov
jnp
mov
repz
daa
mov
adc
imul
xor
pop
notl
aad
xchg
das
pop
cltd
pusha
jne
dec
sahf
pop
das
inc
test
stos
arpl
cs
les
fs
dec
std
lods
pop
fwait
dec
mov
jb
mov
popa
push
cs
stos
das
mov
call
rclb
verr
addr16
or
add
mov
fstp
inc
movsb
mov
sub
addr16
daa
push
outsl
mov
xchg
ljmp
roll
test
shl
test
sbb
pop
lds
addr16
jb
dec
addr16
inc
push
jecxz
cwtl
bound
sub
or
repz
and
ret
sub
sub
mov
mov
fld
das
mov
neg
pop
or
mov
aam
cwtl
test
or
xchg
or
jge
sbb
pop
sub
sti
inc
movsl
inc
dec
jnp
imul
pop
push
mov
ds
jae
inc
arpl
jge
mov
imul
xor
outsb
loopne
cmc
inc
fidivrl
cwtl
pop
fstp
cmpb
jp
adc
aaa
aaa
pop
fisubrl
scas
pop
jbe
push
xor
adc
std
cmp
icebp
pop
outsl
call
mov
rcrw
adc
movsl
cmpl
pushf
mov
rorb
mov
jg
jnp
scas
mov
call
dec
push
in
cmp
gs
add
mov
inc
push
or
jnp
lock
fucom
inc
outsl
sti
xchg
daa
pop
insb
mov
fldcw
pop
push
mov
pop
adc
hlt
outsb
jl
leave
xchg
mov
scas
aaa
inc
mov
arpl
dec
add
pushf
cmc
insl
arpl
clc
js
jno
xor
pop
mov
hlt
pop
lock
and
add
sub
popf
xchg
pop
xchg
push
inc
add
pop
push
push
jo
or
mov
adc
shll
sbbb
mov
sahf
push
or
or
sub
pop
lahf
xor
js
sbb
movsl
dec
jg
lds
mov
or
in
lods
pop
mov
lahf
stc
sub
shl
inc
push
xlat
das
mov
jns
xchg
mov
in
nopl
push
jns
cld
xor
cmp
mov
cmp
leave
scas
pop
dec
jmp
inc
les
out
dec
outsl
inc
pop
sbb
mov
add
flds
lret
inc
inc
push
cmc
or
xor
incl
dec
mov
lods
cmpsb
std
xchg
leave
adc
add
sbb
stos
push
movsl
mov
pop
jno
push
jnp
xchg
dec
shl
jae
inc
add
je
imul
jnp
and
jmp
mov
iret
mov
mov
aad
movsl
xchg
cmp
xchg
mov
mov
lret
cmp
add
mov
iret
test
dec
cmp
adc
push
sbb
inc
and
and
xchg
jmp
or
leave
shr
dec
xchg
jbe
dec
add
inc
pushf
and
mov
push
fistpl
cmpsb
xchg
ss
push
pusha
insl
inc
mov
into
shll
mov
fcomp
sbb
lods
rol
fdivrl
ret
push
fmuls
push
xchg
push
inc
and
inc
fidivl
jg
xor
loopne
mov
seto
jne
punpcklbw
test
mov
jbe
xor
jle
jg
mov
push
rclb
dec
lea
insb
ds
xchg
popa
lret
push
push
sbb
jge
jne
cltd
jl
cltd
into
pusha
xchg
shlb
rcrl
jp
aas
and
ds
out
scas
es
repnz
andl
sbb
pushf
pop
addr16
ficoms
or
fs
in
sub
outsb
or
push
lods
int3
sti
jo
inc
jmp
dec
lods
in
test
loop
enter
mov
cmpsb
sbb
or
push
adc
adc
test
xlat
xor
push
mov
inc
test
push
sahf
lahf
adc
inc
outsl
sbb
cld
fdivl
or
or
lock
es
nop
rclb
gs
test
pushf
movsl
push
cmc
cmp
cltd
in
pop
jp
icebp
add
xchg
or
cmp
cli
icebp
test
xor
pushf
xchg
fists
in
ret
add
cmp
or
sbb
popf
pop
rcr
mov
or
clc
ret
jns
lods
mov
adc
xchg
cwtl
stc
sbb
gs
xchg
loopne
push
dec
mov
stc
xor
mov
mov
out
int
ss
test
loope
pop
popa
out
xchg
outsb
push
jg
std
movsl
into
push
sbb
into
fsubrs
outsl
daa
and
fcomi
in
add
sub
clc
cltd
in
ret
lahf
mov
mov
xchg
xor
adc
dec
dec
neg
popl
aad
daa
jnp
mov
dec
jnp
inc
mov
outsl
and
dec
aad
xor
std
mov
ret
mov
inc
xor
mov
popa
fwait
call
jae
addr16
mov
cli
cmp
jecxz
push
enter
push
pop
add
xor
inc
pop
pop
push
add
sub
test
cmpsl
pop
fcom
stc
xadd
add
sub
sar
popa
mov
push
data16
std
js
inc
xchg
sbbb
or
gs
inc
sbb
mov
and
cld
data16
fidivl
dec
cmp
jne
stc
loope
loope
daa
movsb
pop
pushl
stos
aas
ljmp
outsl
jbe
jb
std
outsl
add
lret
lahf
pop
rorl
out
sbb
push
push
mov
or
jp
push
out
aas
jno
incb
mov
xchg
mov
jl
ja
pop
aad
aas
loope
aas
push
jno
add
and
mov
sahf
out
adc
fstps
mov
or
lds
pop
pop
push
or
into
inc
push
adc
js
push
pop
shlb
pop
pop
fst
mov
ficoms
dec
xor
data16
push
xlat
test
adc
adc
cld
xchg
dec
inc
lods
or
push
jg
int
sbb
lods
loop
add
aaa
mov
sbb
daa
fadd
stc
pop
or
pop
cmp
sbb
scas
popa
jge
fsin
sbb
push
cmpsl
cmp
dec
dec
call
push
out
lock
push
xchg
push
inc
add
pop
xor
js
add
ss
push
cltd
or
mov
std
or
mov
mov
mov
js
scas
lds
mov
jl
inc
jmp
mov
pop
lea
jg
pop
fnsave
and
aas
sti
icebp
and
int3
inc
lods
popl
adc
sysexit
mov
imul
dec
cmpsl
mov
mov
pop
lahf
push
jle
push
testb
gs
or
inc
aad
scas
cld
dec
loope
repz
push
je
std
sbb
sub
ljmp
ja
mov
jns
and
dec
in
les
pop
lds
les
jne
inc
dec
mov
test
sbb
push
xor
pop
jp
stos
sub
movsl
mov
nop
in
inc
pop
leave
hlt
cmpsb
and
dec
adcl
mov
data16
loope
dec
subb
dec
es
mov
imul
push
cmpsb
cmp
cmp
push
inc
popf
xchg
ss
or
xchg
sarl
cmp
mov
mov
lahf
sbb
mov
repnz
movd
or
mov
xor
cmp
ds
adc
lods
aaa
rcl
out
imul
icebp
fsubr
push
rol
push
mov
repnz
pop
or
pusha
mov
inc
xchg
test
dec
jl
cmp
roll
ja
mov
ficoms
mov
shlb
orb
stos
mov
adc
mov
loope
adc
leave
push
pop
mov
jl
sub
shll
adc
pop
inc
mov
ret
mov
out
cmp
pop
addr16
in
mov
scas
and
and
aas
out
test
xor
add
xlat
inc
cmpsl
sbb
push
dec
loopne
or
xor
fisttpll
sbb
pop
xor
mov
aad
lds
ficoml
push
jmp
fildll
pcmpeqw
loopne
mov
repz
out
out
add
sbb
and
and
xor
mov
sbbb
movsb
sub
push
int3
push
test
outsl
jne
jge
in
loop
cmp
mov
test
mov
adc
fwait
adc
push
nop
fstl
in
lods
out
cmp
pop
in
fcmovbe
inc
aas
bound
imul
scas
add
insl
push
ss
fdivs
nop
xor
cmp
sbb
das
and
fdivs
sub
dec
cmp
lock
pop
lret
push
inc
xor
stc
xor
jb
adc
es
repnz
into
shrb
sarl
ret
push
in
push
mov
pushf
sub
and
cmp
cmp
ljmp
pop
xchg
jns
cli
mov
fisubl
in
mov
repnz
stc
or
cmp
sbb
inc
pop
jecxz
roll
int
jae
dec
movl
mov
bswap
leave
aam
movsl
push
add
jge
lods
cltd
xor
jbe
push
xchg
sbb
jb
push
mov
and
lret
mov
imul
lret
mov
roll
pop
inc
jno
mov
sbb
xor
jae
lahf
fbld
pushw
testl
and
fstl
loop
mov
fwait
repnz
scas
or
stos
das
jno
lods
dec
bound
aam
jne
testb
stos
es
push
push
xor
adc
push
je
es
adc
push
clc
bnd
xchg
fcomp
imul
jge
les
pop
xor
sub
add
jnp
mov
lret
int
repz
arpl
std
push
jecxz
lret
sub
sbb
mov
xchg
xchg
mov
fs
dec
mov
jmp
aam
stos
imulb
dec
sti
mov
pop
jg
cmp
xor
sub
adc
frstor
cmpsb
sbb
push
ja
in
push
xchg
add
insb
add
subl
test
or
call
or
repnz
or
jmp
test
cmp
xor
mov
dec
lock
push
mov
pop
sbb
ljmp
push
setb
jecxz
push
cmp
or
in
daa
ret
and
xor
shrl
sbb
and
mov
fidivrl
pop
sub
scas
cmpsb
ja
out
mov
or
mov
imul
sub
add
cmp
push
cmp
cld
mov
cmp
xor
jb
cmp
leave
mov
push
dec
xchg
lahf
outsb
jmp
std
in
repz
inc
sti
shrb
push
int
jnp
lods
jmp
lret
xorb
scas
aaa
loop
outsb
sbb
dec
mov
icebp
mov
sbb
fnsave
xchg
jb
jbe
fs
xor
movsl
pop
clc
jl
push
push
xor
outsl
insl
movsb
xor
cltd
lea
clc
jg
jae
addl
jl
rorb
jae
int
faddl
mov
sbb
rclb
mull
imul
or
movsl
movsb
and
stos
lret
add
loop
mov
int
or
scas
inc
leave
jmp
lock
pop
mov
mov
int
inc
pop
cli
mov
jae
cmp
push
xor
nop
sbb
sti
stc
jno
and
ret
dec
push
inc
int
stos
insl
cmp
pop
mov
add
inc
xchg
add
pop
rorl
inc
ljmp
clc
jnp
jno
xlat
and
xchg
into
ficoml
mov
aad
adc
dec
add
addr16
sub
add
scas
sub
std
rcll
cmp
cs
cmpsb
out
sub
rorl
icebp
lea
or
xor
push
and
inc
and
sub
scas
insl
adc
cs
jg
add
addb
push
lock
inc
call
mov
in
dec
fidivs
inc
mov
mov
pop
push
push
je
push
bound
repz
push
std
mulps
jbe
imul
or
aam
xor
in
mov
and
int3
ret
lret
fwait
popa
pop
xor
leave
mov
sahf
push
push
dec
and
or
orb
jmp
lock
push
imulb
cwtl
es
push
or
cmc
adc
mov
rcrb
xadd
xor
inc
fwait
stc
in
or
loop
ret
and
xor
out
jb
mov
pusha
cmp
je
add
pop
push
cmpsl
cmpsl
jnp
les
ret
xchg
push
ror
repz
lods
xchg
pop
xchg
dec
in
mov
cli
mov
loopne
shll
jo
jae
fiadds
jl
jb
addb
lcall
mov
sarl
adc
push
int3
sbb
popa
lock
pop
jae
push
jno
xchg
aam
adc
jnp
jle
mov
or
rcll
js
fcoms
outsl
sbb
cmp
or
dec
mov
aas
xchg
fistps
push
adc
pusha
das
out
xchg
pop
fstl
cmp
lcall
push
loop
ljmp
and
in
xor
jp
mov
enter
push
and
and
sub
es
mov
jno
std
shl
clc
add
adc
push
mov
scas
loope
adcl
xchg
ret
pushf
jno
cld
mov
push
bound
pop
pop
nop
sbb
iret
mov
daa
jge
push
mov
xorl
stos
and
cmpsb
adc
imul
shlb
in
mov
xor
cld
push
fimull
call
ds
pushf
and
popf
lcall
and
mov
sub
mov
inc
insl
xchg
imul
pop
rclb
mov
lea
sbb
stos
clc
sub
imul
test
xchg
mov
and
push
pop
cltd
cmp
adc
mov
lahf
xor
xchg
jmp
shlb
adc
rcrl
scas
dec
push
subb
pop
shl
pop
or
or
adc
mov
jl
popf
insb
jno
mov
sarb
dec
dec
repz
cmp
shlb
cmpsb
cmp
xlat
xor
lret
xchg
nop
sarb
push
xchg
scas
xchg
data16
dec
data16
insb
or
fsts
ja
repnz
mov
adc
xor
imul
popa
xchg
fmul
popl
xchg
inc
lods
mov
sbb
or
daa
pop
pop
cmovns
mov
jbe
xchg
loop
lock
adc
fcom
nop
popf
lods
fbstp
mov
movsl
dec
out
out
rcr
mov
mov
orb
cmp
bound
push
enter
xor
test
sahf
push
lcall
test
sbb
push
lock
mov
mov
inc
orb
loopne
mov
in
inc
fnstenv
call
add
mov
adc
lods
inc
lea
aad
and
pop
mov
push
ret
fidivl
push
xchg
push
fmull
jo
jle
enter
lret
xor
clc
loop
into
inc
sub
shrl
loopne
mov
add
mov
clc
mov
mov
hlt
mov
pop
dec
adc
push
push
or
jne
cmpsl
mov
xor
das
test
mov
push
scas
mov
adcl
sahf
fbld
adc
nop
adc
popa
sbb
xor
test
and
jne
or
fidivl
pop
mov
mov
fnsave
aad
dec
ret
and
dec
lcall
shlb
pop
icebp
mov
mov
nop
fiadds
inc
mov
sahf
mov
push
orl
jge
aas
xor
pop
shlb
sbb
xchg
push
jbe
shl
push
inc
push
enter
testl
fst
xchg
cmp
cmp
push
pop
xchg
stos
jmp
repnz
jge
mov
or
rorb
gs
inc
dec
mov
test
mov
mov
in
in
inc
and
inc
push
cmpsl
lret
aad
mov
roll
inc
mov
jmp
outsl
add
pusha
push
fst
cmpsl
cmp
sbb
push
or
gs
fmull
movsl
fs
fiaddl
aad
jae
inc
dec
pop
in
cld
mov
mov
mov
xor
leave
in
and
jl
sbb
adc
add
icebp
mov
jl
out
ret
bound
mov
ret
nop
ret
push
fdivrs
orb
xor
add
xor
xchg
aaa
jae
aad
call
pop
or
ret
pop
pop
ret
jne
and
xlat
jp
pusha
bnd
out
cli
lock
push
cmp
orb
iret
add
mov
adc
mov
mov
jne
icebp
lods
mov
pop
xlat
adc
popa
adc
insl
jnp
fwait
cmpsl
daa
std
mov
enter
dec
mov
or
lahf
sarb
pop
and
pop
jmp
shlb
in
cs
out
popa
lock
cli
test
shlb
adc
imul
std
sub
mov
sbb
pop
mov
sbb
push
sub
push
dec
shlb
xchg
rorb
sub
push
dec
push
or
mov
stos
and
sti
jno
sbb
xor
mov
inc
adc
and
push
dec
popa
xchg
out
ja,pt
mov
pop
je
fisubrs
ret
cmp
rcrb
mov
mov
inc
pop
insl
fmull
lret
jo
lret
mov
incb
xlat
mov
dec
ret
adc
mov
bound
dec
imul
loope
outsb
push
imul
jge
sbb
incl
add
add
mov
and
jecxz
jge
stc
xor
repnz
pop
idivb
push
cmp
mov
xchg
addps
sahf
sub
push
sbb
loope
fdivs
test
pop
push
shll
and
lcall
imul
sub
les
add
inc
push
mov
cmp
xchg
and
loope
sub
jno
push
cmpsb
mov
scas
adc
add
lahf
roll
outsb
jne
push
pop
dec
xchg
dec
xor
ret
sarl
pop
fs
fnsave
clc
mov
lods
inc
fidivl
out
lret
aam
cmpsl
push
push
movsb
iret
mov
mov
xor
into
inc
nop
nop
cmp
add
dec
outsl
jbe
data16
mov
call
add
xor
pop
lea
add
cltd
jb
inc
ss
sbb
xorl
addr16
clc
sarl
pop
xchg
or
cmpsb
mov
sub
mov
rorb
data16
add
push
mov
je
pop
repz
shll
inc
mov
jmp
add
int3
lods
jmp
popa
xchg
mov
xor
clc
xor
sbb
and
adc
sbb
cli
repz
xchg
xchg
repz
insl
aam
adc
mov
cmp
lods
dec
sbb
mov
sub
out
sbb
mov
jno
js
les
stos
fisubrl
jg,pn
in
ljmp
and
mov
mov
fldcw
or
je
fidivrl
xor
push
dec
mov
mov
or
dec
cmp
adc
stos
out
daa
lahf
sti
mov
outsl
nop
mov
xchg
pop
clc
ljmp
xchg
xor
add
add
daa
xor
pop
push
test
sti
ret
shrb
mov
xorl
lret
ljmp
pop
icebp
push
inc
inc
mov
insl
add
xor
andl
jecxz
loop
push
pop
sahf
ficoml
addl
test
insb
cmp
mov
in
pop
lock
or
xchg
lret
ja,pt
mov
push
sub
cmp
or
mov
adc
mov
jecxz
insl
mov
inc
mov
pop
sub
mov
dec
aam
fwait
push
cmpsb
cli
stos
cmpsl
aaa
inc
test
inc
sub
test
leave
dec
mov
push
mov
mov
pusha
mov
popf
in
xlat
int
xlat
sbbb
xor
jl
xor
js
jne
push
jmp
pop
push
add
in
xor
push
sub
add
int
cmpsl
data16
push
inc
or
andl
orl
push
or
mulb
fstl
data16
mov
jp
int
mov
pop
enter
add
aam
cmp
loopne
adc
test
or
jno
stos
insb
mov
sti
mov
adc
mov
lods
pop
int3
dec
inc
push
rclb
sub
test
push
aas
pop
ficomps
mov
jg
jae
xor
jge
add
sbb
daa
lods
lods
xchg
sub
sub
outsl
mov
push
and
fstpt
inc
sub
test
or
and
and
push
jmp
jmp
rorb
leave
mov
mov
jle
andb
dec
stc
add
push
xor
push
insb
lds
push
mov
ss
fwait
lret
add
fs
lret
in
shr
mov
clc
xchg
jge
xchg
xchg
les
test
cltd
sbb
test
inc
or
mov
popf
jo
fs
inc
or
gs
pop
in
push
mov
pop
pop
adc
inc
xchg
mov
int3
scas
cmp
xor
push
sbb
fwait
leave
dec
cltd
mov
je
cwtl
ds
inc
add
lret
scas
xchg
mov
mov
push
orb
cltd
add
in
push
pop
cmp
cmpl
cmp
faddl
or
jno
rclb
jae
mov
jb
pop
jmp
push
ds
sbb
popf
cmp
adc
mov
or
add
push
add
clc
pop
push
sub
push
aad
sbb
ficoml
pop
jb
xchg
dec
jg
dec
rcrb
repz
sub
repnz
es
push
or
insb
lret
inc
add
add
or
cwtl
jbe
mov
cmp
mov
mov
or
and
and
jecxz
aad
dec
gs
je
int3
std
sub
push
stos
test
mov
loop
fabs
int3
push
lret
imul
sti
mov
inc
jne
xchg
mov
cmpb
dec
ret
mov
or
stc
lretw
mov
shr
cmpsb
jg
jnp
or
lods
or
pop
rorl
dec
in
insb
in
cltd
xor
adc
stos
push
jge
add
fisttps
das
cld
aam
rorl
mov
pushl
mov
call
mov
pop
pop
add
cmp
xchg
into
xchg
shll
xchg
sub
push
jl
sbb
jmp
mov
movswl
sub
dec
jl
fwait
xor
addr16
dec
mov
lahf
imul
push
cmp
pop
mov
or
jp
mov
push
enter
loopne
dec
ja
xchg
jmp
add
sbb
jmp
mov
or
test
dec
insb
sub
xor
sbb
mov
lret
test
movsl
out
or
mov
pop
xchg
mov
ja
cmp
fwait
pop
sub
mov
in
add
add
inc
in
add
mov
fs
mov
fcoms
sub
adc
stc
loope
inc
xor
dec
dec
dec
and
fistl
ljmp
inc
mov
ljmp
pop
loopne
mov
lcall
lcall
mov
fwait
add
and
cmp
sub
lret
add
stos
mov
int
loope
push
pop
and
inc
ss
lds
inc
ret
out
sbb
inc
add
sbb
ret
jnp
pop
cmpsb
mov
shlb
popf
fimuls
inc
or
lret
idiv
sbb
push
loope
xor
mov
sbb
test
xor
cmc
or
jno
sbb
rorb
test
rcl
adc
scas
cmp
and
cmp
repnz
outsl
and
addl
fs
dec
xchg
push
scas
mov
mov
inc
lods
ljmp
arpl
imul
add
or
adc
das
jg
pop
xorb
push
sub
mov
cmp
adc
push
mov
fildl
dec
pusha
xchg
sbb
clc
and
pop
hlt
mov
inc
adc
daa
pop
and
repz
pop
push
dec
mov
int
xchg
scas
adc
dec
jne
cld
fistpll
and
movsl
mov
into
lods
insl
iret
and
pop
call
fisttpl
mov
mov
int
outsb
mov
or
fwait
jnp
vphaddwd
ret
jns
add
iret
mov
pop
sbb
loope
jae
rorl
push
mov
inc
xchg
add
daa
mov
rcrl
fsts
fstpt
xchg
test
inc
pop
fs
push
or
and
lret
js
cmp
lea
iret
jb
add
xchg
and
lds
sbb
imul
inc
fidivrl
shlb
push
arpl
sarl
dec
dec
out
and
or
or
call
push
mov
push
sti
mov
leave
inc
fyl2x
inc
mov
jbe
out
lods
nop
lock
in
xor
jl
inc
or
ffree
cli
adc
outsb
jle
test
mov
jne
push
mov
cmp
push
cmp
mov
cmp
mov
test
jmp
popa
xchg
fidivs
mov
mov
fisubrl
sub
or
pand
data16
pop
std
mov
mov
in
sbb
inc
xchg
xlat
iret
stos
xor
lcall
pushf
fcoml
sub
outsb
jle
cmp
lahf
or
push
dec
cltd
xchg
jne
hlt
jmp
js
fld
data16
add
fbld
lods
ss
lret
outsb
mov
jnp
inc
jbe
shl
push
inc
pop
pushf
push
or
cmc
ret
cld
out
mov
aaa
cmp
or
mov
aas
mov
test
je
loope
call
test
iret
pop
lock
adc
out
imul
add
pop
rcll
and
mov
out
jp
or
add
adc
ret
mov
shrb
push
cmpsl
ret
dec
push
add
add
adc
test
lock
cwtl
and
dec
dec
or
lock
shll
and
pushf
incb
rorl
les
adc
push
shrl
movsl
jle
mov
pop
and
mov
fisttpl
mov
test
pop
lds
mov
stos
mov
ja
mov
nop
sti
out
sbb
dec
sbb
fnstsw
lods
dec
popa
sub
ret
push
shr
cwtl
repnz
lock
cli
rcrl
xchg
lret
shlb
call
dec
clc
je
sub
sbbb
outsb
test
mov
add
dec
stos
pop
sti
pop
sahf
enter
push
push
pop
out
jae
mov
cld
sarb
aad
bound
mov
adc
mov
out
popf
inc
sbb
pop
mov
or
dec
jmp
orb
pop
mov
hlt
jle
fisubl
notb
pop
inc
push
insl
fisubrl
or
dec
int
repnz
sub
daa
shlb
imul
dec
aaa
xchg
inc
pop
test
push
rorb
jle
sbb
subb
inc
cld
imul
pop
adc
mov
out
or
inc
stos
xor
andb
or
pop
pop
movsl
mov
xchg
xchg
cmp
fstpl
repz
cltd
add
ljmp
fwait
ret
xchg
jl
jmp
shl
enter
dec
add
xor
and
pop
ja
bound
cmp
cli
int
insl
fdivrs
sbb
cmp
push
sbb
fsubrl
xor
subl
mov
sbb
insl
test
add
push
cwtl
cmc
and
push
inc
mov
in
sub
jne
repnz
sbb
inc
addb
dec
scas
loop
cmpb
cmp
dec
movsl
cmc
shlb
orb
pop
cmp
insb
lcall
jns
jge
jp
lods
xchg
sub
addr16
inc
mov
scas
cwtl
int
notl
out
jmp
out
push
das
mov
test
mov
dec
ret
cltd
test
in
jae
adc
dec
lahf
test
loop
out
data16
fwait
and
push
sbb
leave
es
add
imulb
inc
das
lock
pop
and
pusha
and
idivl
jno
lea
icebp
sub
jg
fcoml
loopne
or
lahf
repz
fwait
add
jmp
sub
pop
mov
push
aas
pusha
push
pop
jo
adc
loope
push
push
jg
imul
push
jno
push
mov
pop
pop
mov
xor
jns
xchg
ror
mov
mov
xchg
jmp
xchg
cmp
mov
lcall
pop
pop
movsb
add
sub
mov
mov
aaa
pop
imul
and
lcall
push
std
pop
xchg
out
pop
and
push
mov
les
js
movsl
aam
xchg
mov
es
fdivrs
push
pop
ja
jae
or
or
ret
jnp
in
add
pop
cwtl
and
sub
iret
jecxz
fs
lock
mov
or
pop
mov
mov
add
inc
inc
lds
inc
jns
pop
dec
jg
and
test
and
mov
dec
cmp
xchg
or
add
push
jno
and
out
js
mov
sbb
cmp
adc
and
cmp
cs
jne
mov
insl
dec
imul
jno
and
jecxz
xlat
in
fucom
mov
cmp
scas
pop
insl
adc
adc
lods
adc
xchg
push
mov
ja
sbb
repz
ljmp
enter
jp
pop
add
xadd
movsl
fidivrl
jg
fsub
mov
inc
push
jl
mov
fsub
add
rclb
cmpb
inc
mov
popf
dec
loop
stos
pop
lcall
fisttps
adc
cmp
sbbl
push
pop
mov
xor
adc
xor
cmp
dec
inc
dec
add
enter
mov
test
cmp
arpl
xchg
push
mov
out
and
xor
test
inc
cmp
mov
xchg
rolb
sub
inc
je
adc
mov
xor
sti
loop
adc
jle
stos
push
mov
arpl
pop
inc
mov
mov
mov
jo
inc
pop
jns
cmp
clc
pop
ficoms
sbb
sahf
cmp
fimull
test
aam
adc
int3
and
in
inc
add
test
sub
outsb
scas
inc
inc
mov
in
repnz
lret
push
push
xor
int3
ret
inc
jne
jl,pn
hlt
or
inc
sbb
push
xor
pop
ficompl
stos
and
aaa
stos
sub
jbe
xor
jmp
lods
sti
cmp
cmp
and
jmp
jle
ret
aam
fwait
xor
jb
xchg
adc
dec
subb
cwtl
jb
loope
or
sub
insl
xchg
mov
ss
mov
mov
test
repz
mov
data16
ss
mov
imul
sub
xor
adc
sbb
popa
sub
cld
shll
aaa
jle,pt
les
or
xchg
pop
das
je
jns
inc
pushf
sub
stc
dec
mov
xor
pop
mov
sub
xor
scas
fidivl
fsubl
in
dec
ficompl
add
shl
mov
movl
je,pn
cltd
adc
in
stos
fisubrl
jo
mov
mov
adcb
aaa
add
mov
add
outsl
outsl
mov
in
stos
subb
cmp
sahf
lods
je
sbb
push
pop
mov
or
in
adc
xor
pop
xorb
mov
or
mov
lret
jg
xchg
push
push
xor
nop
shl
mov
je
mov
lret
inc
xchg
repnz
aam
sub
daa
mov
push
push
addb
cmp
js
pop
fisubrl
jae
and
dec
mov
clc
cmc
in
nop
outsb
push
or
ret
out
les
or
adc
sbb
push
and
sbb
push
cmp
or
inc
push
mov
sbb
les
daa
mov
pop
push
xor
mov
out
mov
add
and
lock
dec
xchg
sub
jb
xchg
insl
and
sub
or
sbb
mov
mov
cmpsl
mov
idiv
push
fnstcw
stc
sarl
jae
xchg
jecxz
stos
shlb
mov
sbb
in
sub
addb
fnsave
push
adc
pop
outsb
lret
cli
pop
jmp
jne
add
movb
testb
outsb
cmp
es
inc
outsb
dec
ja
jecxz
pop
into
imul
fucomip
shll
in
sbb
mov
fiadds
cld
mov
loopne
or
loop
jne
push
into
imul
push
add
mov
repz
dec
push
inc
cld
daa
and
xlat
xchg
xor
sub
mov
inc
leave
sbb
mov
cmp
shrl
or
mov
insb
and
inc
mov
mov
ljmp
xchg
in
jge
out
fadds
or
mov
repz
mov
mov
insl
cmpl
mov
cmpl
mov
mov
cld
jae
mov
pop
mov
add
and
movsl
int
add
ss
daa
movsb
andps
lods
and
mov
mov
mov
cmc
addl
xchg
out
pusha
or
aam
hlt
fiaddl
int
in
jl
pop
lahf
jmp
mov
aam
rcr
leave
inc
jl
or
icebp
xchg
test
sbb
scas
cmp
mov
lods
jp
sub
inc
jp
jne
mov
cmp
xchg
in
lret
je
std
out
fnstenv
rcrl
sbb
push
dec
mov
jbe
test
pop
xchg
or
lods
jg
icebp
dec
imul
xor
xchg
ror
mov
pop
cltd
xor
in
movsb
xor
insb
jbe
inc
push
addr16
ret
clc
fisubrl
and
jo
and
xchg
imul
fcoml
addb
ret
push
xchg
dec
cs
fwait
dec
leave
les
sahf
pushf
movsb
arpl
dec
pop
pushf
push
lret
in
and
call
mov
inc
mov
addb
mov
popa
cmp
jge
mov
sti
cltd
mov
test
mov
mov
push
movsb
arpl
jo
mov
addl
ds
sbb
or
jbe
inc
and
or
outsl
aam
lret
push
in
jne
fmulp
insb
pusha
in
jbe
pop
fwait
ja
push
mov
adc
push
sbb
divb
inc
cmp
jp
rcrl
jae
aas
mov
mov
xchg
pop
lds
pop
imul
lods
pop
xchg
cld
pushf
lea
sub
mov
or
pop
jmp
mov
inc
add
in
add
pop
xor
leave
mov
xchg
andb
pop
aas
pushf
mov
jbe
mov
mov
jae
inc
cli
cmp
sti
popf
loopne
bound
ss
mov
imul
xor
pop
ror
test
scas
sbb
sbb
cltd
bound
icebp
iret
jae
xchg
rorb
jp
fisubrs
and
pop
pxor
imul
sbb
daa
test
jae
xor
mov
int3
inc
adc
xchg
shlb
pop
jg
daa
in
sahf
and
nop
adcb
addr16
mov
cmpsl
mov
mov
adcb
and
push
mov
fiadds
scas
sbb
jb
mov
ret
out
pop
cld
push
aaa
mov
fmull
lret
inc
sub
inc
pop
pushf
into
btl
es
xor
sti
aas
test
add
sub
and
insb
adc
jne
sub
mov
leave
xchg
mov
cltd
inc
mov
mov
iret
jnp
or
pop
mov
stos
xlat
lea
fs
dec
sbb
mov
dec
xchg
daa
mov
call
adc
or
add
sub
inc
xchg
mov
loope
js
push
movsl
out
dec
div
mov
fldt
aam
sub
inc
mov
jbe
cld
push
pop
mov
sub
push
mov
add
jo
std
mov
mov
cmp
call
add
loopne
jb
inc
pop
in
sub
mov
mov
nop
loop
rcrl
lods
push
sbb
add
cmc
repnz
lods
rcl
jg
xchg
pop
iret
push
test
ret
mov
sarb
sbb
dec
ret
ret
lods
sbb
ds
in
andl
sahf
sub
fdivrs
xchg
cmpsl
add
cmpsb
push
jno
mov
in
stc
jns
stos
sub
rcrl
mov
cmpl
mov
adc
xchg
lea
add
in
mov
mov
cmpsl
arpl
in
repnz
xchg
push
shrl
out
mov
ret
push
imul
jne
jns
std
std
test
mov
daa
sub
and
les
test
aam
inc
sbb
sbb
insl
dec
shrl
addr16
fldcw
scas
test
fstps
in
adc
bound
int
hlt
sahf
outsl
test
cmpl
push
push
in
cli
int3
rcll
lahf
push
push
lods
movsb
fsts
loop
orb
inc
mov
adcb
push
mov
mov
xor
out
repz
lods
push
xor
pop
aad
inc
ja
test
dec
pushf
mov
gs
sbb
sub
inc
push
jbe
mov
gs
fcmovu
inc
xor
xor
adc
jo
jbe
add
push
fcompl
jb
mov
imul
pop
inc
sar
arpl
arpl
stos
mov
or
pop
push
mov
dec
fsubrl
xor
dec
nop
jge
aas
push
xchg
js
mov
mov
dec
movsb
fldcw
pop
push
dec
dec
sbb
mov
aam
jns
dec
push
dec
sbb
or
adc
dec
test
sti
mov
cltd
pop
jne
dec
cmpsb
xor
or
in
mov
lods
sub
push
hlt
maskmovq
testl
push
add
add
fistl
clc
fcoms
mov
rcr
cld
mov
mov
cli
inc
mov
hlt
pusha
inc
xchg
mov
pop
mov
lahf
iret
aaa
outsb
cmc
inc
sbb
sbb
cmp
adc
or
xor
pushf
loopne
jl
pop
xor
cmp
xchg
cmc
movsl
into
repz
or
xor
mov
sarl
cmp
ret
mov
fsubrl
lret
push
mov
mov
or
sub
fcomps
inc
cmpsb
outsl
insl
cld
xor
adc
into
mov
jmp
mov
repnz
scas
jmp
add
es
in
daa
daa
xchg
mov
sub
je
dec
je
stos
lahf
imul
aam
mov
cmpb
into
flds
loope
mov
mov
cmpsl
clc
ss
loope
and
mov
test
fucomp
loopne
mov
lcall
stos
lods
sbb
cmp
je
push
or
lock
jecxz
int
jne
sub
and
pop
sbb
mov
dec
mov
popa
and
mov
ss
adc
loop
in
imul
and
jne
xchg
mov
scas
and
int
or
dec
xchg
data16
dec
hlt
test
pop
or
movsl
cld
cli
enter
xchg
jmp
pop
jle
outsl
xor
sbb
stc
fs
push
imul
mov
sahf
lahf
and
adc
sub
bound
xchg
daa
inc
popf
gs
pop
cmp
das
sbb
mov
mov
pop
jne
insb
sub
xor
sbb
pop
and
add
mov
pop
pop
nop
pop
sub
repnz
aas
sub
xor
aam
cmp
inc
cld
dec
adc
lahf
dec
outsb
sub
subb
or
and
lea
aas
push
loop
xchg
fdivs
and
into
gs
ss
add
or
js
daa
repnz
mov
xor
call
addr16
mov
stc
cwtl
lret
push
pop
dec
mov
lcall
loop
xor
push
ljmp
gs
imulb
jno
push
mov
or
xchg
xor
rcrb
loop
subb
pop
sbb
test
pop
fiadds
call
inc
sahf
cmp
je
mov
sbb
jg
inc
insl
leave
mov
jo
call
addb
inc
dec
push
xor
pushf
rolb
addb
cld
mov
xorl
push
dec
xchg
movsb
mov
repz
ss
and
shrl
mov
les
lcall
or
push
pop
adc
jae
dec
inc
pushf
call
and
shlb
int
push
jmp
sbb
lds
and
daa
pop
ja
jo
fst
add
mov
add
inc
jp
imul
push
adc
jp
xchg
aad
mov
or
out
xor
js
stc
and
scas
movsl
fdivrs
jns
out
je
pop
cwtl
inc
popa
or
mov
jnp
sahf
fisttps
mov
insb
adc
push
int
ljmp
or
cmp
mov
cwtl
aas
xchg
mov
dec
data16
mov
fiaddl
cmp
mov
xor
mov
push
mov
mov
cmp
or
pop
outsl
or
push
fmul
ss
mov
mov
jle
rol
sbb
or
add
adc
sbb
sub
sub
pop
ds
jl
pop
fs
nop
icebp
cmc
inc
fdivrl
mov
mov
test
dec
jns
push
in
sbb
cli
mov
push
shl
mov
inc
jns
jge
jb
mov
popa
dec
cmp
dec
push
mov
xlat
push
inc
add
push
jbe
imul
das
iret
xor
adc
jp
push
xor
push
pusha
cmpsl
inc
mov
fucomip
lea
sbb
cmpsb
ret
mov
pop
scas
outsb
into
mov
cmp
std
call
inc
leave
std
xor
scas
add
dec
pop
jno
ret
out
movsl
pop
pop
xchg
addr16
and
push
mov
cmp
pop
cmpsb
arpl
pushf
push
jp
xorl
cmp
int3
frstor
fwait
lea
xlat
scas
stos
mov
adc
nop
mov
ja
in
cmp
rcrl
clc
mov
or
push
mov
movsl
mov
lea
aaa
jns
inc
gs
int3
mov
call
pop
test
inc
leave
sti
add
and
test
fnstcw
mov
add
iret
in
mov
leave
mov
push
inc
inc
jg
mov
les
jge
mov
test
sbb
mov
sub
lret
dec
add
xor
mov
pusha
into
push
ds
mov
stos
sub
add
push
adc
push
mov
test
push
pop
test
xor
dec
inc
push
aas
pop
leave
mov
lcall
pop
or
adc
push
jmp
mov
xchg
pushl
sub
pop
repz
fnstsw
lods
dec
add
pushf
fcmovne
lock
pusha
fwait
sbb
out
jg
int
sti
dec
stos
mov
in
jo
or
push
outsb
push
lock
loop
ds
adc
int3
lret
jo
mov
add
cld
es
adc
nop
adc
inc
fsts
mov
lahf
mov
mov
mov
mov
outsl
cmc
in
and
adc
icebp
lods
mov
les
sub
leave
sti
dec
push
jmp
jg
fs
sbb
mov
loope
popa
cvtdq2ps
sub
es
ret
jne,pt
mov
sub
inc
jl
popa
daa
dec
add
adc
clc
push
pop
in
sub
lods
insl
sub
faddp
test
xchg
cmpsl
and
sub
mov
pop
jno
adc
cs
dec
mov
mov
adc
dec
out
imul
std
sub
sti
pop
add
aas
sub
push
xchg
push
inc
shrb
daa
and
loop
lock
iret
les
mov
movsl
add
sbb
inc
jne
push
outsb
data16
or
sbb
sbb
cmp
cmp
lret
adc
insl
jo
outsl
js
sahf
push
subl
ss
add
and
mov
mov
loope
mov
outsl
xor
mov
xchg
lods
pop
fimull
fidivl
into
test
cltd
fiadds
test
adc
mov
mov
sahf
rorl
push
rol
outsb
add
mov
jle
adc
fcomip
jne
shr
shll
jp
ret
cmp
in
pop
push
testl
mov
inc
adcl
pop
mov
pop
lret
popf
mov
sub
jecxz
or
jno
rol
and
insb
cmpsb
mov
testb
push
movsb
mov
mov
cmp
cld
into
pushf
mov
and
pop
adc
in
and
and
mov
sbb
imul
leave
mov
mov
push
jbe,pn
nop
mov
aaa
je
mov
ret
mov
xchg
aas
mov
jmp
add
into
add
pop
daa
fisttpl
sbb
push
jne
enter
mov
pop
cmp
jecxz
test
jo
leave
sbb
sub
xchg
lds
in
ret
mov
insl
sar
lahf
addr16
xchg
lea
xor
mov
and
test
push
jp
dec
andl
pop
mov
nop
xor
movsb
push
push
push
fwait
add
and
insl
mov
test
call
iret
cmp
xor
sbb
pop
movsl
mov
sti
pop
push
in
adc
pop
out
loop
out
jae
inc
xchg
test
stos
xorl
mov
gs
adc
adcl
sar
stos
movsl
int
xor
mov
pop
xchg
into
mov
clc
mov
mov
mov
adc
sbb
cmp
adcl
xchg
push
fs
subl
jge
in
ja
push
into
fidivrl
imul
insb
cwtl
mov
rcrb
jp
pusha
lock
sub
mov
es
ret
mov
inc
mov
in
pop
js
pop
mov
inc
ret
repz
mov
je
push
dec
insl
imul
xchg
jl
or
push
mov
mov
divb
int3
mov
pop
pop
mov
in
cmpsl
imul
bound
adc
cs
xor
cmp
dec
neg
loope
jle
pushf
jne
cmp
mov
out
in
outsb
outsb
push
enter
out
hlt
mov
lea
ja
out
repnz
pushfw
ljmp
das
lods
rorl
jle
and
pop
test
nop
or
mov
inc
xchg
jle
fmul
shrb
mov
mov
int
cmp
jnp
enter
cmpsb
movb
cs
and
and
mov
pop
sar
push
jp
push
subl
dec
pop
out
sarl
jmp
sbb
jo
mov
ja
sbb
xchg
data16
mov
sar
inc
lock
pop
rorb
mov
add
xchg
pop
adc
adc
fstps
xlat
les
mul
inc
xlat
push
rorl
jl
shll
add
adc
pop
inc
cmp
or
mov
push
push
aas
jns
out
std
enter
dec
lahf
push
jns
mov
stos
adc
in
inc
mov
push
and
jg
or
fs
mov
jnp
shlb
xchg
jb
sub
in
loopne
shll
pop
mov
jg
mov
stos
test
mov
mov
loopne
rclb
das
or
push
push
mov
push
lret
ja
daa
fmul
into
and
sbb
repz
rorb
repz
pop
mov
adc
or
pushf
sahf
and
jmp
jb
fcoms
lea
or
inc
in
in
arpl
int
or
ret
xchg
xchg
pop
jne
mov
outsl
mov
jns
add
aad
xor
clc
rolb
sub
jmp
mov
mov
sbb
pop
lcall
lcall
mov
shlb
push
fstp
fnstsw
outsl
pop
bound
sbb
push
cmp
stc
in
add
lock
aas
stos
and
out
cli
fstps
insl
test
loopne
push
and
stos
rcll
mov
xchg
sbb
andl
lret
scas
pop
imul
adc
lea
cmp
add
js
jmp
xchg
sub
orb
xchg
data16
iret
fildll
dec
fadd
std
rorb
orl
mov
roll
jmp
mov
outsb
inc
add
outsl
add
sar
out
cltd
or
ljmp
lea
ret
es
shll
adc
lcall
pop
push
lcall
jno
jnp
sahf
es
adc
push
inc
pop
add
addr16
int3
and
push
and
mov
push
sbb
das
notl
inc
push
mov
and
push
test
mov
mov
in
xchg
pushf
loope
jg
jge
jmp
fisttps
out
pop
imul
lds
imul
mov
mov
lods
pop
outsb
cmpsb
lret
insb
cwtl
out
ja
mov
lcall
addr16
and
mov
pop
pop
or
dec
rorl
shll
push
push
sbb
cmpsb
jns
cmp
mov
pop
xor
xchg
push
mov
fstpt
subb
inc
mov
xor
clc
sub
fsubp
icebp
lds
pusha
dec
out
push
in
inc
inc
test
es
mov
cmpsb
hlt
imul
push
das
pop
pop
jecxz
ss
adc
xor
xchg
pop
adcl
sub
cltd
jp
lods
js
pusha
repz
or
xchg
ss
add
int3
push
push
mov
aam
mov
shlb
shr
fs
fsubrl
pop
dec
pushf
dec
loopne
cmp
or
cmp
fldl
push
sub
sbb
adc
pop
mov
jmp
int3
mov
xor
jp
cwtl
aaa
lret
gs
or
dec
hlt
dec
mov
add
pop
sub
aas
scas
mov
adc
std
pop
lods
in
in
jge
cmc
ret
pop
pavgb
sub
sbb
and
xchg
mov
push
jle
jmp
or
add
xor
mov
push
push
xchg
pop
jne
popa
dec
fsubs
mov
ret
push
rcr
ret
add
or
sub
int
mov
fdivrl
aaa
pop
mov
mov
call
xor
fnsave
jle
mov
jns
and
ss
pop
movsb
xor
xor
sti
cmpsl
popf
dec
sub
xor
ffree
adc
imul
sub
pop
push
inc
call
ljmp
jmp
or
lahf
ret
mov
idivb
pop
dec
insb
cmpsb
add
test
imul
test
add
daa
stc
xchg
jne
push
cld
push
loop
loop
sbb
rclb
mov
in
jne
aam
pop
movsl
das
push
mov
and
repz
or
fwait
loope
sub
push
add
cmp
sbb
pop
jbe
les
imulb
pushf
mov
sub
clc
add
movsb
inc
loop
mov
test
pop
popa
sbb
pop
inc
jmp
insb
icebp
mov
les
mov
mov
add
mov
and
jg
das
fidivl
xor
mov
mov
test
jle
adc
ret
shlb
dec
in
les
aam
sti
outsl
and
stos
mov
push
xchg
cmp
mov
push
outsl
mov
mov
jge
out
mov
addr16
cmp
add
xchg
lds
jno
lods
push
pop
cmp
lret
sub
push
pop
pop
jbe
shrd
dec
cmp
xchg
jmp
das
xlat
or
pop
push
pop
ret
cmp
inc
push
inc
pop
insb
popa
shr
insl
or
add
mov
leave
insb
ja
sahf
fstl
mov
xor
js
dec
xchg
out
call
jbe
leave
adc
inc
jne
fcompl
xor
loop
mov
fcmovnb
in
shrb
sbb
les
daa
and
pop
not
add
mov
xor
cmpsb
sub
rclb
mov
jb
ficompl
or
mov
cmp
aam
daa
stos
lods
repz
adc
aam
stc
leave
jo
fldenv
cmp
sub
pusha
jmp
xor
pop
or
stc
mov
aas
push
cmp
mov
xchg
lods
add
sbb
cmp
mov
out
mov
fcompl
test
test
dec
gs
fisttpl
mov
jmp
inc
push
or
or
push
testb
fimull
test
and
test
subb
test
pop
xor
loopne
dec
jmp
xchg
pushf
adc
gs
lods
dec
push
lock
inc
lods
out
push
sub
dec
in
xor
cmpsb
lock
aas
adcl
cli
iret
daa
cltd
ds
pop
adc
mov
popf
pop
aad
loopne
icebp
cmp
fstps
jmp
shrl
cmp
dec
lods
stos
repz
push
fcmovnb
xchg
testb
add
xchg
push
xchg
mov
mov
mov
sahf
rol
or
cwtl
and
and
pop
and
loopne
add
iret
pop
rorl
jge
cmp
or
xchg
push
sub
outsb
xchg
dec
aaa
js
sbb
sbbl
pop
pop
cmp
inc
ja
sub
dec
shr
push
pop
in
inc
stos
repz
ljmp
add
popa
mov
pop
or
fnstenv
mov
andb
or
les
leave
sub
andb
stos
cmp
adc
lods
int3
jb
ret
cmpsl
dec
ss
shll
daa
add
lahf
add
paddb
scas
jae
daa
xor
scas
cli
mov
shll
fists
adc
icebp
push
mov
sub
and
out
icebp
maskmovq
mull
cmpsl
sti
xor
sbb
dec
ret
cwtl
inc
cmp
stc
jmp
imul
loopne
gs
push
sub
sbb
adc
imul
shll
sub
jnp
xor
lret
push
outsl
sub
in
aam
ret
leave
and
nop
les
repnz
push
push
push
loope
dec
mov
add
scas
inc
decl
out
daa
mov
into
adc
sahf
mov
mov
mov
xlat
into
inc
xchg
adc
and
pop
inc
mov
dec
cmp
jnp
mov
push
sub
ljmp
and
sub
inc
movsb
push
out
out
fiaddl
mov
inc
push
jp
add
xor
lret
mov
xchg
xchg
dec
rcrb
call
inc
or
push
mov
mov
xchg
loope
scas
insl
adc
shll
mov
mov
das
ja
sar
rclb
jecxz
and
xchg
pop
test
pusha
cmc
adcb
shll
jne
mov
cwtl
xchg
pop
jecxz
mov
lret
xchg
add
add
xchg
in
add
insl
cs
add
insl
fisubrl
mov
xchg
int3
popf
sbb
and
push
jl
pop
xor
frstpm(287
push
adc
xchg
fldenv
pop
into
xchg
pop
or
nop
gs
dec
test
xchg
sbb
mov
pop
arpl
fwait
and
ljmp
scas
inc
add
push
lea
add
aas
push
and
das
call
fbstp
mov
bound
xchg
and
negb
scas
xchg
outsl
cmp
das
adc
push
sub
push
fsts
jns
push
lahf
sbb
int3
pop
rorb
push
addr16
ficoml
push
add
lock
movsb
mov
enter
mov
inc
fmuls
add
or
repz
inc
xchg
subl
cmc
inc
call
adc
sub
dec
jbe
mov
add
and
sbb
inc
lahf
and
mov
pop
aad
iret
dec
pushf
fnstsw
inc
and
mov
aam
cwtl
sahf
fidivrs
mov
ljmp
adc
inc
add
mov
sub
repz
and
mov
push
and
inc
fwait
test
lcall
inc
jecxz
and
pop
fwait
movsb
inc
in
pop
fdivrs
mov
xor
sti
mov
test
aam
cmp
adc
mov
mov
negb
adc
scas
std
push
add
shll
clc
push
iret
inc
out
add
jg
scas
mov
mov
pop
cmpsb
sti
and
fisttpll
sub
adc
cmpsl
or
lods
mov
mov
mov
cmp
gs
add
fcmovbe
jle
cmpb
pop
ljmp
xchg
sbb
jmp
insl
push
lock
adc
jns
scas
jle
outsb
adc
pusha
jp
push
ret
lods
xor
push
mov
pop
sbb
aam
add
cmp
sahf
lcall
pop
hlt
xchg
in
or
pop
push
notb
mov
inc
and
xor
xor
mov
ljmp
int3
aam
stos
xor
daa
icebp
pusha
or
lret
andl
repz
hlt
pop
jne
jo
mov
mov
cwtl
loopne
shl
out
mov
test
jecxz
pop
mov
inc
into
scas
cmp
je
ljmp
cli
sarw
xchg
dec
or
std
jle
or
and
out
xchg
ja
cmp
jae
mov
inc
or
xchg
xchg
pop
jno
loopne
aaa
mov
xlat
insl
negl
fcompl
mov
sbb
mov
pop
lcall
pop
inc
pop
xchg
and
cmpb
icebp
popa
nop
ror
push
mov
inc
add
cltd
js
mov
push
repz
cwtl
orb
adc
sub
mov
loope
xor
push
outsb
or
test
lods
fbld
cmpb
dec
outsl
cmp
xchg
cmp
sahf
xchg
inc
adc
fstl
sub
rolb
lret
ljmp
jecxz
nop
xor
cmpsb
mov
fcoml
imul
mov
out
out
mov
in
test
aas
and
xor
mov
or
adc
shll
jmp
getsec
ljmp
sarb
or
int3
fmulp
and
mov
mov
fcompl
movsl
or
jns
ss
out
rorb
cmp
and
mov
fsts
pop
imul
jge
ror
lock
adc
sub
push
jno
mov
inc
mov
sbb
xlat
adc
enter
int3
mov
fdiv
push
push
dec
xchg
test
add
sub
mov
fimuls
push
xor
lds
push
hlt
fsubs
cs
dec
adc
stc
hlt
dec
out
js
mov
fsubp
imul
cmp
roll
adc
xchg
push
push
popf
mov
bound
push
pop
xchg
xchg
repz
sbb
outsb
add
sbb
mov
inc
std
int3
int
mov
test
pop
lock
lcall
outsb
hlt
aam
pop
add
ljmp
inc
sub
dec
mov
push
xchg
dec
xchg
ljmp
mov
add
cmp
pop
cmp
jge
mov
mov
jecxz
inc
loope
jb
and
test
fmull
inc
mov
negl
lds
adc
dec
mov
das
outsl
lods
shlb
mov
or
xor
cmpsl
fs
les
lahf
inc
divb
and
mov
push
in
daa
mov
or
lock
xlat
mov
movsl
xchg
flds
push
ret
rcrb
pop
js
mov
inc
push
cmp
lret
stc
iret
xor
mov
not
test
pop
ret
push
xor
fwait
mov
rclb
pop
jae
stos
pop
xchg
push
or
mov
pop
dec
stos
inc
dec
arpl
fsubrs
mov
and
imul
jnp
and
inc
sbb
push
adc
in
aas
lret
es
mov
pop
push
jmp
xchg
fs
mov
stos
dec
fistl
aam
and
ss
pop
jnp
mov
mov
pop
adc
js
gs
dec
add
hlt
mov
pop
test
cmpsl
std
xadd
sub
lods
push
mov
into
cltd
aad
and
repz
in
imul
ja
jmp
pop
and
jle
mov
mov
push
jge
mov
outsb
je
fnstsw
hlt
scas
and
mov
and
adc
je
ja
icebp
ret
pop
or
mov
mov
ja
fcomps
jo
rcll
jne
sbb
and
dec
push
mov
test
andb
jnp
jg
fwait
fs
xchg
push
mov
ljmp
xchg
jno
jns
mov
fs
lods
or
pop
or
add
fidivrl
loopne
or
mov
rclb
mov
adc
outsl
sbb
mov
push
inc
xchg
push
pop
pop
lods
sar
out
adc
and
cmpsb
jne
aaa
cmp
rorl
add
pop
inc
rorl
push
cmp
pop
arpl
cld
int3
dec
inc
into
jne
outsl
adc
outsb
inc
xor
mov
mov
push
pop
movsl
cmp
xchg
or
mov
stos
dec
aas
add
sub
mov
sub
inc
ret
cmpl
xchg
adc
sahf
and
pop
pop
int3
daa
adc
mov
inc
orl
push
add
mov
dec
pusha
adc
xlat
loope,pn
incb
gs
cli
les
push
aad
hlt
mov
mov
jle
ja
inc
cltd
or
pop
cli
cmc
jbe
xchg
sub
jge
stos
enter
and
mov
jg
pop
cmp
xor
xchg
mov
mov
inc
loope
sahf
sbb
add
adc
mov
sub
in
sub
cmp
in
aaa
inc
aad
add
das
pop
jle
mov
push
add
fwait
sub
addb
loopne
and
jno
es
mov
push
or
incb
mov
stos
and
dec
jle
add
mov
or
repz
dec
pop
xchg
push
insl
fnstenv
int3
cmpsl
mul
dec
mov
aad
js
mov
mov
xor
loop
push
movsb
inc
addr16
dec
xchg
fbstp
xor
pop
xor
lods
inc
xlat
fistpl
jg
mov
push
fadd
sbb
stos
insb
push
add
push
mov
jns
dec
push
sbb
sbb
push
call
shll
icebp
jns
aad
dec
daa
push
xchg
test
arpl
dec
push
imul
push
or
mov
dec
addr16
shl
dec
mov
sub
xchg
fidivrs
aaa
pop
call
imul
int3
je
rep
pop
mov
cmpb
les
mov
pop
faddl
cmpsb
jmp
jb
adcl
mov
adc
inc
mov
out
adc
mov
movsl
push
in
pop
jae
cmpsl
movsb
test
fbstp
dec
outsb
sbb
jmp
out
or
jno
push
push
add
std
out
addr16
lcall
pop
pop
adc
leave
or
stc
cmpl
fs
pushf
sub
cmp
push
fmulp
addr16
loopne
jle
mov
jne
in
mov
jb
jge
mov
enter
pop
mov
js
fadds
push
jge
mov
xchg
lods
outsb
mov
add
adc
repnz
mov
mov
out
ficoml
mov
and
divl
push
cld
rcrl
cmp
fstl
fsubl
sub
mov
nop
xchg
inc
lods
adc
scas
lret
mov
jp
mov
xor
push
xchg
sbb
scas
xchg
and
xchg
mov
fistl
or
sahf
pushf
stos
cltd
add
xor
or
add
and
mov
push
negb
lods
mov
pop
dec
or
xor
in
fmul
imul
inc
popf
pop
cmp
stos
mov
cmp
pop
adc
cmc
leave
scas
orb
hlt
fidivs
add
or
jmp
test
dec
or
sti
daa
pop
or
dec
sbb
xchg
jecxz
push
jns
pop
or
or
dec
les
jo
add
and
fsubs
dec
inc
cmp
pop
add
xchg
cmp
stos
lds
adc
cmc
icebp
xchg
pop
daa
ret
lods
pop
xchg
insl
pop
add
ficoml
dec
into
idivb
rcll
or
or
mov
ret
popa
lahf
xor
fildl
rorl
outsl
add
push
cwtl
push
pusha
add
sbb
test
pop
push
outsl
sub
fldt
adc
or
push
pushf
ret
cmp
mov
sti
jecxz
adc
lods
cmp
fists
adc
data16
bound
lcall
ja
popf
bound
jl
dec
inc
xor
sbb
ret
or
jbe
rcrb
pusha
cs
sub
mov
hlt
outsl
loope
stos
iret
rcrb
mov
sbb
cs
sbb
fistpll
xchg
add
lods
cmp
cs
dec
enter
cwtl
fdivp
pop
dec
sti
jmp
sbb
mov
ja
mov
sub
cwtl
std
mov
testl
or
or
and
sbb
shlb
xchg
out
mov
das
and
les
xchg
aam
imul
out
mov
in
adc
inc
and
sub
mov
add
pop
xor
lds
mov
xchg
push
es
ret
sub
out
incb
imul
and
inc
sub
xchg
imul
and
xlat
jns
mov
sub
leave
and
pop
vunpcklps
sbb
pop
and
mov
push
inc
jb
call
xchg
xchg
movsl
jb
mov
sub
stos
dec
inc
or
push
insl
push
dec
pop
insl
divl
mov
lret
sub
pop
pop
pop
jge
push
inc
xchg
shl
mov
mov
les
mov
jae
add
jne
jecxz
lods
inc
push
pop
pop
andl
xor
dec
sar
push
adc
pop
int
xchg
inc
leave
cli
sub
out
adc
rcrb
push
bound
stos
repnz
repnz
and
push
hlt
push
out
inc
and
mov
ljmp
and
popa
mov
sbb
add
iret
mov
sub
lods
test
mov
xchg
outsb
mov
push
aas
jge
cwtl
nop
jle
xchg
pop
lcall
mov
test
aaa
sbb
mov
out
pop
fiadds
or
cmp
mov
fs
mov
pop
jae
xchg
outsl
add
adc
cltd
sbb
test
les
add
call
shlb
popa
push
xor
pop
repnz
mov
orl
in
push
xor
lods
mov
inc
mov
adc
inc
and
pop
mov
scas
daa
js
je
inc
adc
hlt
inc
mov
idivl
push
xor
sahf
test
fdivp
cs
movsb
jmp
insl
jne
jns
pusha
pop
inc
mov
xchg
aaa
jo
jo
push
cmp
pop
and
mov
cmc
filds
mov
mov
lea
iret
shrl
ja
popa
jmp
fldt
jp
push
and
push
or
pop
test
push
pop
in
jne
aaa
adc
push
mov
adc
add
mov
and
pop
inc
shll
pop
scas
jnp
xor
inc
and
je
pusha
sbb
loope
fwait
subl
add
sub
push
push
xor
add
mov
hlt
ss
pop
push
lock
js
jg
in
or
adc
mov
loope
fistl
add
jg
xchg
movsl
cmc
xor
scas
in
icebp
cli
mov
mov
ss
insl
std
jns
mov
out
ss
out
pop
sahf
repz
dec
nop
and
fdivrl
jne
lock
repnz
nop
rcl
xchg
sbb
adc
lock
inc
stos
jle
sub
shl
fcomps
push
and
cmpsb
cltd
test
fnstenv
sbb
out
xorb
lcall
rcrl
scas
cmpsb
dec
xor
sub
stos
lods
lahf
js
inc
mov
jge
push
dec
in
xor
or
enter
pop
dec
mov
aad
in
jb
mov
sub
push
scas
filds
imul
lds
faddp
insb
pop
inc
cmp
push
xchg
test
lea
ret
test
cli
inc
test
jmp
aaa
imul
out
xchg
jne
sarb
ret
add
cmpl
and
popa
push
shl
sub
test
cltd
mov
pop
insb
std
addb
xchg
cmp
dec
xchg
loop
cmp
xor
inc
push
call
ljmp
lds
std
push
repz
fwait
inc
mov
fldcw
jae
inc
mov
push
subl
push
scas
cmpsb
rcrb
jbe
xor
mov
insb
ja
int3
sub
jo
mov
sahf
push
pop
xchg
ljmp
sbb
sti
cld
aaa
mov
fiaddl
push
dec
jnp
mov
in
inc
add
int
push
add
jle
mov
jg
int
daa
mov
leave
sbb
shlb
xlat
dec
dec
mov
std
mov
push
sub
or
mov
lock
das
mov
inc
mov
int3
mov
cld
adc
sarl
paddusb
imul
iret
test
stos
fnsave
cld
je
ss
popa
push
sbb
push
xchg
and
rorb
mov
pushf
jle
dec
rol
hlt
rorb
in
xchg
push
xchg
jle
inc
jno
sbb
push
je
mov
les
mov
mov
dec
sbb
jne
mov
xor
arpl
jl
out
or
arpl
dec
jmp
and
enter
std
lea
pop
adc
roll
push
outsl
and
rcll
push
mov
jo
adc
add
lock
subl
add
dec
mov
enter
arpl
mov
hlt
mov
cli
or
jge
fsubr
test
out
jmp
or
jnp
sar
das
fdivrp
rcrl
lcall
fdivrl
mov
mov
lahf
inc
fstpt
sub
adc
xchg
sub
in
cmpsl
inc
push
imul
aad
int3
jno
repnz
sbb
daa
jo
iret
xchg
fcmovne
push
outsb
in
aaa
int
scas
ljmp
and
stc
mov
inc
cli
int
flds
cmc
aad
or
repz
sahf
pop
sbb
imul
les
mov
pop
arpl
jmp
pushf
xchg
test
lock
mov
inc
out
cmp
pop
fists
das
xchg
or
sbb
lds
fcoml
jbe
xchg
ljmp
popf
mov
pop
sub
add
pushf
push
adc
xchg
jl
ret
jecxz
stos
and
pop
clc
mov
jo
mov
rol
aad
xchg
loopne
in
mov
pop
xor
mov
iret
lods
mov
ljmp
test
ja
pop
mov
jne
push
ss
inc
ret
int
sbb
or
sub
xorl
inc
sub
fwait
sub
xchg
xchg
dec
xbegin
imul
xor
loop
aas
test
fidivrs
loopne
mov
xorl
inc
push
jae
lods
xor
outsb
jb
adcl
mov
push
add
jns
in
xchg
loopne
sub
in
inc
fsubl
inc
pusha
jle
stos
xchg
cmp
xchg
mov
adc
sub
cwtl
cwtl
cmp
filds
sahf
ret
ss
imul
push
addb
mov
pop
lods
std
mov
sbb
stc
dec
xchg
fsubl
pop
fstpl
orb
aaa
pop
pop
or
mov
insl
add
cmpl
ret
and
cli
push
jmp
push
mov
or
push
rcl
dec
fistpll
xor
or
mov
ja
cld
adcb
xchg
add
scas
add
jo
ret
add
cmpsb
cmp
insl
xor
pop
mov
rorl
popa
xchg
dec
je
mov
jno
movsb
gs
ljmp
inc
and
pop
push
mov
fstpt
and
mov
jae
and
ret
inc
in
dec
mov
aad
jns
call
jecxz
imul
xchg
or
mov
imul
xchg
and
aad
out
mov
sub
scas
jmp
and
cmc
mov
mov
mov
mov
sub
push
in
jl
inc
xchg
sub
lea
std
movsl
sbb
pop
ja
negb
inc
sti
xor
dec
into
sub
sbb
adc
xchg
hlt
loope
and
inc
xchg
nop
ffreep
adc
int3
outsb
aad
nop
stos
lock
mov
or
mov
out
loope
scas
mov
fstps
adc
leave
hlt
sti
cmc
mov
popf
push
pop
rorb
enter
test
sbbl
mov
mov
fwait
cmp
and
adc
pop
fwait
aaa
inc
test
and
int
nop
sbb
js
fisubrl
cmp
mov
mov
sbb
adc
pop
pop
bndldx
fs
testb
loopne
xor
sbb
jle
pushf
fimuls
faddp
loopne
sub
dec
into
mov
inc
cmpsb
inc
dec
xor
adc
cld
divl
xchg
jmp
loop
sub
scas
and
add
xchg
and
rsm
test
roll
subl
xor
cmp
jb
imul
cmpb
je
outsl
std
push
xor
insb
loope
lods
and
xchg
shll
pop
mov
and
out
das
add
mov
xchg
adc
hlt
xchg
jb
xchg
mov
lods
push
pushl
aad
xchg
cmp
stos
jns
das
mov
sub
movl
out
pop
dec
jne
add
sbb
scas
mov
mov
out
sti
scas
push
jo
add
sub
stos
inc
and
xchg
or
xchg
inc
cmp
mov
mov
and
popf
sub
cmp
movsb
mov
pop
adc
popf
push
and
insl
addb
mov
sahf
xchg
lea
es
std
jg
movsb
ss
dec
adc
push
jge
pop
xor
pop
inc
pop
push
dec
and
mov
pusha
jl
xchg
cmp
pop
stos
ss
inc
dec
push
cmp
xchg
and
dec
test
and
xor
nop
mov
pop
shlb
jmp
fists
or
xchg
ljmp
cmc
mov
sub
xchg
fcomps
stos
sub
xchg
ss
pop
adc
ret
dec
lahf
jle
jp
test
divb
pop
lahf
insl
xchg
cmp
push
adc
mov
xchg
fldenv
fnsave
test
push
jne
dec
rclb
std
mov
push
push
pop
in
jno
sub
test
inc
cwtl
jno
movsl
add
ret
mov
popa
push
das
lret
pop
pop
stos
cld
je
cmp
insl
rolb
arpl
insb
or
dec
mov
vmovhps
push
dec
cmc
inc
stc
mov
arpl
aas
xchg
jl
mov
punpcklbw
adcl
sub
push
or
call
xchg
inc
pop
sbb
push
out
jb
mov
fbld
leave
cmp
out
outsl
fisubrl
pop
fisttpl
insl
inc
mov
push
and
sbb
jl
mov
cmc
int3
mov
adc
std
xor
mov
lock
lods
xor
sbb
icebp
fisttpl
add
daa
stos
arpl
mov
in
lods
popa
sub
inc
inc
xor
and
rcrl
neg
frstor
push
jo
mov
adc
mov
hlt
repz
sub
xchg
pop
test
lea
mov
mov
sbb
pop
and
xchg
fistpl
push
mov
jne
xor
into
xor
add
leave
pop
scas
clc
mov
push
xchg
pop
clc
jge
lcall
lds
cmp
sub
leave
movsb
inc
pop
xlat
adc
xor
or
add
mov
test
sahf
cli
and
movsb
jge
jge
enter
cmp
fidivrs
inc
aas
mov
xor
push
sbb
stos
aaa
push
or
mov
xor
gs
add
fsubl
mov
jl
sbb
and
fwait
sub
testl
xchg
lods
les
dec
sti
in
jmp
push
pushf
fnstcw
and
and
and
adc
mov
negl
or
int
in
xor
fdivs
das
int3
sbb
xor
test
pusha
dec
xchg
outsl
xor
xchg
movl
popa
aam
int3
int3
enter
cld
xchg
insb
andb
jne
jge
or
aas
xor
cmp
imul
repz
dec
rorb
and
filds
outsl
pop
les
xor
ds
rorb
fstps
shlb
adc
int3
mov
shll
ror
inc
leave
mov
sbb
and
and
add
out
mov
in
cmp
push
inc
mov
daa
push
inc
aas
mov
inc
mov
push
push
xchg
insl
std
xor
dec
movsb
fsubr
add
out
mov
es
mov
jnp
push
cmp
push
ja
outsb
mov
jne
scas
xor
lahf
lahf
scas
stc
xchg
mov
daa
adc
jbe
push
das
loop
int3
push
xor
std
mov
and
pushf
push
in
sub
mov
pop
rcll
rorb
push
stos
push
nop
fcoms
arpl
mov
xchg
pushl
adc
jecxz
jae
and
das
mov
cmpsl
sub
outsb
jmp
or
cmp
push
pop
or
xor
movsl
hlt
push
xchg
push
pop
nop
xchg
pusha
jle
popl
push
mov
insb
lods
fsubrp
ss
inc
aad
mov
pushl
in
jmp
int
in
jns
and
push
das
xchg
dec
testl
lods
mov
fisubl
inc
mov
rorb
test
loopne
js
mov
sbb
loope
je
call
test
shl
add
gs
bound
imul
add
es
test
adc
add
cmp
pusha
sub
addl
or
xchg
xor
push
pop
mov
and
pop
push
lcall
cmp
pop
call
out
je
scas
dec
or
pop
jge
or
cmp
push
cs
jae
mov
dec
call
ljmp
imul
or
stc
add
fmull
dec
fisubrl
jmp
lods
call
fildl
ja
scas
mov
fldenv
dec
pop
push
fucom
rcrb
fldcw
sti
ljmp
ret
insl
sub
xor
push
test
add
imul
insb
adc
add
movsb
jns
sbb
inc
pop
jp
cmc
xchg
data16
xor
mov
lret
pop
jle
mov
mov
cld
cmp
pop
das
mov
aas
in
fdiv
ja
jb
fwait
mov
loope
imul
es
scas
inc
je
or
inc
or
adc
iret
mov
call
lods
dec
shll
push
movsl
cld
mov
xchg
xor
sub
stos
sub
leave
daa
aad
sub
call
jb
and
add
inc
jb
daa
pop
outsb
mov
or
mov
xor
push
mov
sub
sub
cmp
pop
div
fisubl
mov
repz
shrl
pop
loopne
pusha
les
xor
stos
in
out
mov
or
push
jmp
gs
aam
hlt
in
mov
jns
sub
push
sub
dec
rolb
pushf
cmp
hlt
adc
jecxz
pop
lcall
loopne
sti
fsubr
idivl
ds
popa
mov
add
mov
xor
in
sub
aaa
lods
cli
mov
lods
or
push
mov
jl
sub
popf
sub
sbb
dec
daa
add
pusha
ret
adc
xchg
jnp
sbbl
cltd
cmp
addr16
pop
cwtl
std
xlat
or
or
push
lods
mov
xchg
mov
data16
push
jnp
mov
ret
adc
fld
mov
inc
out
xchg
or
mov
ds
xor
adc
jge
pop
or
hlt
or
test
push
clc
ret
push
adc
loope
in
lret
sarl
xor
add
int
imul
insb
andb
fidivrs
sbbl
push
mov
jb
popa
subl
sub
aam
into
movsl
das
jb
bound
fs
mov
out
mov
xchg
in
jnp
cmp
sbb
inc
dec
mov
rorb
sahf
popa
jns
mov
pop
test
add
mov
or
cltd
icebp
rolb
add
xlat
cmp
mov
fnsave
lret
adc
mov
fwait
shl
out
in
mov
inc
xor
jno
testb
jle
out
movb
dec
pushf
lods
call
shr
clc
push
cmp
mov
add
add
ret
fs
movsb
inc
mov
fcomi
jne
call
loope
ds
push
push
jge
mov
pop
cld
xchg
stc
out
jns
int
inc
fistps
aam
mov
ss
push
sbb
ret
pop
pop
mov
stos
push
xor
xchg
loop
sbb
js
addb
outsb
push
fsubl
mov
sub
mov
mov
sub
mov
ret
lret
or
test
inc
roll
mov
cmp
mov
idiv
pop
call
dec
mov
rcr
pusha
pop
fsubrl
adc
sahf
hlt
mov
push
xchg
das
pop
and
cmp
in
imul
inc
aad
clc
mov
mov
sub
cli
add
mov
mov
mull
notb
int3
rorl
je
sarb
and
and
mov
sub
push
cli
pop
pop
shlb
es
es
and
lds
xchg
xchg
fwait
pcmpgtw
adc
loopne
clc
cmp
mov
mov
leave
popf
aam
nop
mov
call
std
out
push
xchg
sbb
ja
or
cmp
in
es
jmp
fsubl
clc
adc
or
dec
insb
int
aas
sbb
push
xchg
loop
adc
test
xchg
jae
xchg
mov
mov
add
xor
jecxz
sub
mov
xchg
sub
daa
adc
mov
dec
scas
add
mov
lock
add
fcompl
repnz
adc
es
ret
jb
adc
mov
lcall
mov
dec
fsts
adc
xlat
or
mov
jl
shl
mulb
ds
mov
ffree
and
push
push
mov
sub
pop
ds
adc
lcall
aas
fnsave
hlt
data16
addb
and
insl
leave
and
mov
mov
aaa
add
dec
sbb
rclb
gs
cmp
inc
xchg
cmp
cmpsb
mov
aaa
mov
cmpl
ficoms
test
into
cld
in
movsb
loope
mov
ret
cmpsb
xor
mov
test
mov
je
xor
sbb
mov
repz
cmp
cmp
loopne
push
ret
lea
aaa
out
or
mov
inc
fstps
inc
lret
push
or
mov
sub
shll
stos
rcrb
fnstenv
fs
cmp
pop
imul
scas
into
sbbb
hlt
jg
push
test
mov
scas
dec
ja
jmp
rolb
test
inc
loop
cld
lock
or
mov
in
and
cwtl
data16
popa
push
xor
pusha
pop
mov
push
aam
pop
xchg
jno
lds
adc
add
and
add
adc
cli
negl
imul
mov
inc
dec
sahf
or
sbb
xchg
mov
test
dec
roll
cmp
cli
popf
xlat
rcrl
mov
cli
add
rcll
jmp
mov
push
sub
and
or
dec
je
decb
jmp
xchg
dec
xchg
aad
dec
addl
mov
pop
outsl
push
inc
icebp
mov
adc
sub
lods
xchg
mov
mov
xor
sbb
popa
jne
xor
pop
and
imul
xchg
mov
gs
lock
cmp
inc
stos
arpl
inc
xchg
mov
into
ds
cld
push
mov
mov
cmp
ss
mov
lock
scas
push
aaa
sub
cltd
in
popa
popa
sub
int3
adc
test
pop
insb
call
xor
adc
test
push
jnp
push
cmc
arpl
sub
cmpl
dec
jne
incl
cs
jge
mov
cmp
mov
stos
out
adc
rol
gs
adc
or
and
adc
mov
out
xor
into
fistl
sub
cmp
cli
dec
cli
je
cmp
mov
and
loopne
aam
out
data16
int3
mov
mov
movsl
xchg
stos
out
aaa
lods
pop
xor
mov
mov
arpl
push
adc
sbb
xor
fadd
or
mov
jbe
inc
shl
inc
rcrb
lea
push
and
lds
jmp
or
sub
lahf
ficompl
dec
int3
add
adc
movsb
jmp
cli
aad
mov
lods
add
xor
or
iret
or
stc
aad
add
dec
stc
inc
loop
fsts
ja
scas
mov
ljmp
ficoms
ljmp
mov
repz
mov
lods
movsl
shrl
jl
out
out
ret
fdivl
add
or
sub
daa
dec
and
adc
sbb
adc
dec
mov
movsb
push
dec
mov
scas
lock
jg
aaa
nop
mov
jb
into
mov
pushf
xchg
push
test
cmp
sbb
xchg
xchg
xor
add
movsl
pop
rorl
lea
cltd
roll
xor
and
mov
sbb
xor
pop
push
fcmovnb
jne
leave
out
jae
pop
push
faddl
fisubs
xor
rcr
pop
cld
mov
in
fs
aad
test
dec
xlat
mov
nop
adc
aaa
xor
xor
or
adc
clc
jecxz
add
inc
xchg
add
cmp
xor
push
clc
cltd
movl
pop
fidivs
adc
cwtl
push
data16
je
insl
mov
dec
lahf
cmpsb
mov
xchg
call
sbb
push
add
arpl
in
imul
jb
mov
inc
mov
lahf
push
mov
mov
inc
xchg
and
lret
loopne
mov
or
les
movsl
stc
enter
in
push
inc
inc
bound
jecxz
test
push
in
mov
fildl
pop
test
push
fmull
or
pop
xor
fstps
hlt
cli
mov
mov
push
cmc
test
sbb
inc
in
cltd
lea
pushf
js
sahf
inc
jmp
lahf
movsb
cmp
lret
push
pop
cwtl
mov
in
pushf
mov
fisubl
or
xorb
mov
inc
xchg
adc
push
popf
mov
push
ret
jo
mov
popf
rclb
es
fdivr
ss
add
pop
adc
rcrl
and
mov
aaa
cli
mov
ja
movsl
cmp
enter
or
add
push
fld
pop
push
insl
mov
cmc
subb
into
xchg
fldl
into
dec
pusha
fiaddl
adc
xchg
cli
lcall
and
fidivs
push
adc
shlb
xor
fwait
push
cmp
fstps
mov
sub
adc
inc
jecxz
out
lock
jne
and
clc
push
xor
mov
pop
je
out
lods
clc
das
fsubrs
xchg
push
out
jp
jl
or
xchg
insb
cmp
stc
rcr
lods
inc
mul
push
mov
pop
jmp
pop
push
pcmpeqw
nop
jp
outsb
jg
pop
js,pt
data16
ss
mov
add
jmp
scas
push
int
adc
lret
enter
push
out
mov
jle
sbb
xor
mov
inc
xchg
xor
and
mov
pop
fildll
shl
adc
dec
popa
jne
hlt
xchg
add
imul
mov
lret
lahf
mov
adc
imul
insb
outsl
fisttpll
pop
popl
stos
cmpsl
add
shrl
rol
outsl
mov
ja
pop
daa
xchg
sbb
or
jge
pop
xchg
jns
lcall
xchg
icebp
jb
shl
shl
jg
rorl
mov
mov
test
cmp
sub
stos
fyl2x
imul
sahf
sti
clc
push
push
and
inc
add
push
int3
shrb
add
fmul
pop
adc
mov
pusha
and
add
jnp
lret
lret
test
shll
xchg
jge
xor
int
cmpsl
pop
ds
pushf
sbb
push
mov
jge
jge
sub
lods
jl
mov
das
inc
xchg
jno
insb
dec
outsl
sbb
in
xlat
repz
add
or
icebp
mov
lret
mov
push
xchg
lods
mov
out
out
sub
cmpsl
shll
stos
or
loope
outsb
imul
push
xchg
movsb
adc
mov
fwait
jle
inc
fldl
xor
sub
into
push
jno
dec
adc
mov
fdivrs
aam
fadd
inc
sbb
lea
mov
inc
inc
daa
xor
nop
mov
imul
jns
pop
sbb
sbb
push
dec
pop
fstps
or
ljmp
push
sub
jb
decb
aam
sub
sbb
lock
lcall
hlt
mov
aas
test
push
sarl
repz
cmp
insl
out
add
sub
dec
pop
xchg
fidivrs
jle
emms
jecxz
outsl
xor
mov
xor
xchg
adc
inc
cmp
popf
popa
adc
into
popa
jnp
mov
inc
push
movsl
fsubr
pop
mov
cltd
stc
inc
push
xorl
ret
adc
sub
test
fs
ljmp
into
and
add
jle
mov
aas
int3
int3
jo
pop
out
test
out
loopne
pop
mov
xorl
xchg
or
pop
xchg
fildl
icebp
je
xchg
fwait
loope
in
jae
xor
outsl
cmp
test
push
rcll
xchg
mov
pop
ret
vpgatherqq
xchg
cmp
sbb
push
lock
and
pushf
dec
pop
mov
inc
ficoms
xlat
pusha
sahf
stos
fs
mov
xchg
mov
push
or
jb
add
and
jge
shlb
sahf
or
shll
int3
test
fsubs
shl
push
pop
push
cmp
pop
lret
pop
mov
mov
sbbb
adc
jne
adc
mov
xor
pop
push
mov
std
dec
xchg
outsl
fcmovnu
cmp
sub
into
lea
lea
ret
test
jb
rcrl
fimuls
and
sub
in
loop
in
push
fdiv
dec
adc
cmpsb
lahf
dec
scas
divb
lds
in
das
or
and
ds
fnsave
inc
stos
mov
test
test
pop
fists
xor
stos
pop
jae
pop
shll
cmp
mov
stos
out
pop
add
lret
dec
add
popf
lret
cwtl
inc
push
cs
xchg
xchg
in
pop
int
cld
stc
inc
sub
roll
mov
insb
sbb
fmuls
inc
repnz
ret
sbb
fwait
stos
mov
movsl
adc
inc
imul
jle
adc
mov
mov
lret
out
testl
outsb
and
xchg
dec
sbb
lds
leave
lock
dec
das
cmp
xor
dec
mov
lahf
arpl
mov
jle
mov
jmp
jmp
inc
insb
aas
nop
mov
test
movsl
test
mov
push
js
enter
call
icebp
pushf
es
iret
xor
or
mov
mov
jp
jbe
mov
imul
pop
inc
repz
lods
nop
push
cmp
adc
cwtl
jbe
add
movb
push
xchg
inc
roll
inc
sarl
inc
shrb
xchg
pop
cld
scas
cwtl
and
lock
cs
lret
cld
gs
lret
test
je
xor
jnp
mov
cmp
fwait
or
int
test
xorl
mov
enter
push
out
dec
lcall
loopne
xchg
dec
popf
fcoms
jmp
push
sbb
in
push
jae
push
jb
xchg
adc
xchg
adc
aaa
xor
subb
or
or
testl
mov
movsl
aam
stos
jns
lods
fisubs
in
dec
ret
xchg
jle
pop
jmp
mov
add
jp
or
mov
clc
int3
sbb
stc
or
stos
dec
cmpsb
sbb
jo
jmp
aam
in
orl
emms
divl
out
out
inc
std
xchg
loop
push
add
lret
lods
and
fwait
mov
cmc
push
inc
mov
enter
lcall
mov
test
and
xchg
lcall
jb
jnp
cmovg
call
cmc
int3
xor
mov
ret
dec
cmp
or
push
hlt
push
fistps
mov
cmp
lcall
and
sub
sbb
xor
sbb
jae
add
aad
test
dec
inc
cwtl
fwait
cwtl
aas
mov
lock
arpl
mov
insl
mov
stos
dec
int3
adcb
sub
xor
negl
fucomip
ficompl
mov
sub
inc
cmp
push
inc
rcll
ljmp
inc
adc
sub
jbe
mov
push
inc
cmp
cld
int3
jecxz
cmpsl
xor
mov
test
insb
pcmpeqd
pop
xchg
shrl
pop
jmp
stc
out
push
push
scas
sbb
aam
xor
test
push
mov
loope
lods
jp
mull
mov
testb
push
in
sub
cmp
cs
and
pop
or
push
pop
aaa
mov
dec
int3
mov
stos
mov
out
jo
pop
in
cmpsb
cmp
jne
scas
cmpsb
div
mov
popa
mov
scas
rcrl
mov
dec
dec
cld
js
sub
add
lds
enter
sub
inc
inc
shll
insb
loope
outsl
add
and
mov
in
dec
hlt
jle
inc
loope
adc
in
jnp
dec
pop
or
out
jge
cmp
xchg
xchg
cli
lds
inc
notl
mov
lods
popf
loope
sbb
mov
inc
in
call
fildll
ret
push
arpl
pop
out
xchg
repnz
pop
imul
xchg
fdivs
dec
jo
add
jo
inc
jb
mov
xor
fbstp
out
cmpsb
dec
mov
adc
mov
out
push
lds
dec
jbe
pop
pop
xchg
lahf
mov
push
mov
push
fisubs
in
gs
enter
cmp
xor
into
mov
mov
icebp
in
test
sub
pop
call
cmp
addr16
mov
ds
repnz
jecxz
test
jnp
test
inc
add
idivb
insl
or
in
push
aad
pop
jg
ljmp
movsb
jns
test
dec
fisttpll
jns
mov
aaa
push
jne
pop
lcall
loop
cmp
push
in
jmp
cwtl
frstor
sbb
or
push
mov
sahf
ret
movb
arpl
cld
sbb
cld
add
sbb
mov
mov
mov
ja
fidivs
cmp
sub
sarb
push
adc
xchg
inc
mov
or
inc
adc
pop
mov
pop
mov
jnp
pop
cmpsl
leave
xor
pop
xor
shl
aaa
mov
xor
jbe
add
sub
sarb
and
js
js
add
jmp
gs
int3
rcll
fdivr
popa
and
lahf
cwtl
clc
inc
lahf
movsl
xor
ret
mov
sbb
andl
popf
push
repnz
pop
pshufw
insl
sbb
lret
fidivl
jp
xor
cli
cmp
pop
mov
xlat
push
mov
dec
xor
cmp
aam
xchg
add
add
mov
aam
loopne
mov
in
and
xchg
fmuls
cmpsb
and
outsl
enter
push
faddl
cmp
inc
repz
mov
dec
mov
popf
test
pop
stos
std
inc
in
stc
mov
mov
aaa
movsb
inc
or
aas
xorl
inc
dec
push
bound
or
jge
popa
pop
cmp
jle
test
enter
sbb
jnp
decb
mov
lds
pop
outsb
push
or
cltd
insl
je
mov
popa
shl
mov
loopne
and
dec
mov
cmp
aam
lret
rcr
das
dec
xchg
push
or
mov
mov
dec
xlat
dec
cmp
lahf
xchg
push
icebp
call
dec
or
lret
sub
std
in
mov
stos
jl
and
sub
xchg
sub
mov
outsl
lahf
push
sub
push
mov
call
cmp
loopne
jle
sub
xchg
outsb
xchg
mov
out
sub
sti
push
sti
out
push
and
mov
ret
js
or
sub
jns
std
and
gs
mov
shr
cmp
in
xchg
test
filds
ss
jne
cmp
fisubl
jmp
lret
sub
or
shll
pusha
sub
fwait
jg
dec
jle
adc
add
sbb
mov
push
shrb
mov
addb
dec
in
out
out
cmpsl
dec
pop
lahf
dec
popa
fldcw
push
dec
xor
sub
lret
enter
sbb
lret
jg
sbb
or
jl
inc
or
mov
rorl
and
xchg
mov
mov
sub
adc
sub
xor
pop
in
xor
xchg
mov
test
fwait
mov
fdivl
aad
stos
inc
mov
xor
adc
cmpsl
or
cmpsb
add
inc
aaa
jle
in
and
sbb
lret
mov
push
dec
mov
cmpsb
out
cmp
mov
pop
out
imul
dec
xchg
dec
cwtl
pop
test
imul
sub
fidivl
test
ss
mov
cmp
mov
out
out
shr
in
cmpsl
push
rorb
push
daa
xor
lret
and
les
repz
sbb
repz
or
test
push
cwtl
add
jb
sbb
out
aam
or
sub
leave
pop
rcll
rolb
cld
repnz
test
push
mov
push
adc
cmc
pop
add
daa
frstor
jmp
inc
cmpsl
inc
pop
lahf
aad
aaa
push
sbb
sar
out
mov
insl
popa
xchg
mov
popa
xchg
xor
lea
xchg
sub
mulb
add
jno
fwait
out
add
inc
out
call
into
inc
ds
imul
inc
push
repnz
shrb
gs
cli
ret
xor
dec
outsl
push
rorb
pop
inc
xor
cs
out
or
outsl
or
int3
in
pop
sarl
mov
imul
sbbb
push
rolb
test
pshufw
fisubs
cli
lock
ja
loopne
scas
popa
push
pop
and
das
test
mov
push
inc
xchg
pop
mov
mov
and
jmp
lock
scas
sbb
and
in
outsb
jle
lds
cmc
in
fwait
dec
aaa
push
sub
xchg
inc
push
add
xchg
pop
rclb
cmp
pop
mov
loopne
mov
and
bnd
stos
sub
and
pop
xchg
adc
cmp
mov
xlat
sbb
arpl
in
lds
test
movsl
or
or
mov
cmpsl
dec
sbb
jp
add
mov
sbb
inc
sbb
mov
lcall
bound
cmp
jecxz
gs
or
mov
arpl
inc
inc
lret
dec
adc
xor
fdivrl
adc
cli
dec
int3
cmp
dec
in
ret
cmp
leave
jno
outsl
pushf
push
cmp
sbb
or
shl
popl
stos
pop
stc
adc
cs
insl
lds
pop
mov
test
rorb
repnz
push
scas
jae
or
mov
test
addr16
aad
add
loopne
ds
lret
lock
scas
xor
std
mov
adc
fwait
movsl
popa
cmpsb
lret
dec
leave
and
xor
and
sbb
int3
mov
xor
cmpsb
ret
jle
or
in
jmp
pop
inc
in
add
inc
repz
mov
aas
imul
imul
xchg
mov
xor
mov
adc
std
lret
mov
sbb
in
test
sub
push
xchg
jae
dec
jbe
mov
cmp
push
imul
and
jno
lds
pop
je
cli
xor
int3
sti
cmp
pop
jo
jl
mov
in
pop
nop
inc
or
ds
adc
ss
or
fiadds
pop
cmp
sub
clc
jge
and
shl
lret
imul
test
jns
mov
mov
cmp
jmp
out
flds
adc
pushf
inc
icebp
dec
clc
xchg
lods
jge
lcall
aaa
addl
in
inc
mov
pop
pop
jmp
shlb
mov
push
in
xor
add
movsb
inc
xchg
mov
rcrl
xchg
mov
iret
xorb
jae
jp
adc
into
stos
and
ret
inc
es
pop
and
fcmovne
scas
mov
mov
repz
and
dec
sub
dec
and
ljmp
push
rolb
orl
cmp
xchg
rclb
lock
inc
push
dec
cmp
sti
cmp
fwait
sahf
in
arpl
repz
xor
add
jmp
cmp
push
divl
xor
mov
xor
popf
mov
mov
xor
dec
rolb
js
mov
sub
insb
adc
loopne
addl
or
fisttps
xchg
cmpb
or
je
lahf
mov
mov
sub
mov
nop
xor
ds
dec
pusha
shlb
sahf
out
js
pop
adc
mov
mov
jne
jmp
xor
or
sub
pop
in
adcb
inc
lods
stos
push
cltd
aas
outsb
pusha
xor
outsl
repz
mov
outsl
popl
shll
jbe
or
lcall
mov
clc
mov
rcl
adc
sub
jmp
les
loop
xchg
pop
ficoml
pop
lods
jnp
vmovsd
add
cmp
mov
cmc
test
cwtl
jge
repnz
ja
fsubrs
jmp
push
mov
repnz
sbb
jns
sbb
mov
imul
push
push
sub
cmp
ds
sbbw
das
jns
mov
adc
into
sub
sub
mov
test
fcmove
pop
in
push
or
insb
in
dec
fnstcw
jnp
addr16
push
sub
jmp
fadds
out
in
fldt
pop
int3
cmc
test
push
out
cli
sub
clc
das
popf
cmp
rcl
ss
or
push
fidivl
sub
test
or
inc
cmp
pop
xchg
stos
fwait
enter
test
std
dec
test
push
les
cld
dec
mov
and
mov
sub
adc
fld1
dec
lahf
lss
mov
lahf
or
call
out
rorl
push
mov
xor
in
inc
idivb
push
subb
add
push
lret
mov
je
clc
cmpsb
std
jbe
aas
sub
int
mov
icebp
into
nop
push
cli
lods
xor
mov
imull
inc
mov
push
repnz
stc
rclb
or
xchg
pop
push
pop
int
pop
pop
fidivrs
inc
fdivr
cld
aad
cltd
push
jge
adc
mov
pushl
fldl
or
out
jnp
popa
or
sub
xor
push
jge
loope
and
dec
popa
push
ficompl
into
into
add
test
xchg
push
dec
mov
mov
in
mov
scas
fst
movsl
loop
or
pop
jb
inc
lods
shl
aas
repz
rol
cmp
out
adc
adc
mov
lods
or
outsb
and
sbbb
push
stos
xchg
sub
std
divb
dec
push
enter
inc
fmuls
fnclex
out
popa
in
or
mov
cmp
push
xor
sbb
cltd
sbb
lret
push
pop
cmp
push
and
clc
ja
leave
ja
int3
push
mov
loope
mov
cmc
dec
lock
mov
sarl
arpl
std
outsl
and
subb
cmp
inc
adc
mov
sub
pop
xor
jo
je
jmp
pop
les
ror
cmp
icebp
push
sub
push
nop
subb
xchg
xchg
xor
inc
pop
cmp
test
mov
loopne
add
shlb
out
inc
test
divl
or
xlat
test
rorl
xor
repz
outsb
mov
inc
or
lahf
lds
adc
cmpsb
dec
lret
xchg
or
aad
add
jecxz
imul
push
push
js
sbb
dec
xchg
jge
xor
sahf
loopne
fiaddl
xor
xchg
mov
and
jg
mov
cmpb
xor
mov
sub
jp
loop
orl
jl
mov
dec
mov
pop
pop
call
inc
ror
sub
jl
dec
or
imul
xchg
les
dec
mov
aaa
jg
push
jb
add
dec
xchg
inc
push
fstps
jae
insb
jne
das
mov
mov
je
cltd
inc
dec
out
inc
lcall
mov
mov
outsl
popf
test
movb
dec
push
jb
jbe
out
bound
and
out
lcall
push
repnz
outsl
add
sbb
sahf
inc
std
shr
jl
mov
adc
add
adc
xor
cmp
sahf
sbb
out
rorl
mov
mov
cld
and
in
dec
xchg
out
lods
sub
mov
loope
lcall
and
rcrl
popf
loopne
push
movsl
popf
mov
fs
enter
pop
pop
and
mov
jl
fistpl
pop
es
adc
nop
jne
push
cmp
jnp
pop
imul
fisttpll
incb
or
in
mov
mull
cmp
fidivl
pop
push
jnp
mov
lods
jmp
jmp
repnz
fisttpll
xor
xor
movsl
arpl
xchg
mov
mov
call
dec
fdivs
cmp
scas
lea
sub
sub
fisttps
pushf
mov
std
jp
mov
mov
jp
repnz
iret
imul
mov
cld
jo
mov
cmp
fbld
ret
push
jle
pop
add
or
lds
push
bndldx
or
sahf
pushaw
push
bound
jnp
push
xchg
or
fs
adc
inc
cs
xor
jnp
jo
ror
stos
add
fisubs
iret
xchg
push
fidivs
or
ret
aaa
inc
jge
add
mov
push
leave
dec
mov
adc
stc
ja
lahf
cmp
xchg
and
xchg
add
in
adcl
adc
lcall
clc
mov
aam
or
icebp
stos
dec
imul
rcll
and
cs
xor
mov
loop
adc
outsb
push
ret
jne
pop
jle
subb
xor
cmp
jge
cmc
mov
fisubrl
or
decb
sbb
mov
push
jmp
into
jle
nop
mov
sbb
sub
aaa
sahf
mov
scas
pop
leave
cmpsl
mov
fidivrs
push
getsec
aad
xchg
lret
es
xor
inc
or
xchg
push
mov
sahf
cmp
lret
in
test
push
aas
or
jle
sub
rorl
jo
push
lods
jl
push
sbb
mov
inc
mov
loop
les
adc
sbb
aas
mov
or
arpl
aad
inc
push
stos
cmp
pop
xchg
pop
sub
mov
pusha
and
push
fcmove
and
and
fildll
loope
lock
lods
adc
fsubr
testl
cltd
add
loopne
xor
pop
mov
repnz
bswap
or
mov
jl
xor
mov
cld
adc
sbb
test
inc
jb
mov
mov
push
imul
shll
push
fidivrs
stos
imul
leave
mov
xor
xchg
es
pop
mov
out
mov
mov
addr16
fsubs
aas
test
add
pop
incl
lock
insl
mov
cmc
leave
scas
call
out
jnp
mov
loop
pushf
inc
sbb
stos
movsl
js
imul
lcall
mov
bound
xchg
mov
mov
outsl
mov
push
sbb
xor
inc
jge
pop
stos
cld
out
je
jnp
lcall
adc
push
or
dec
dec
and
xchg
mov
fisttpll
bound
out
adcb
jle
or
in
mov
jl
inc
xchg
lods
cmp
int3
and
push
addr16
sti
aam
pop
in
mov
xor
mov
stos
aas
cmp
enter
popf
mov
adc
inc
mov
fs
imul
xor
in
shl
and
inc
or
insb
ret
cltd
xor
xchg
and
repz
fs
push
test
popl
aad
mov
outsb
outsl
sahf
mov
inc
sbb
push
dec
mov
adc
data16
cmpsl
lahf
fnsave
or
outsl
in
and
bound
sub
outsl
cmp
call
imul
push
lcall
xor
fcoms
stc
push
lret
daa
push
in
outsb
in
jmp
xchg
mov
and
mov
shrb
cmp
cltd
movsl
sub
push
mov
jp
call
pop
std
enter
sub
repnz
mov
and
mov
sub
pop
and
insl
imulb
pop
dec
push
inc
jge
or
movsl
dec
xchg
xor
and
dec
das
add
icebp
jecxz
jp
nop
adc
out
ljmp
pop
aaa
mov
inc
xor
and
aad
jns
cmpsl
je
and
lret
test
inc
hlt
xchg
pop
sbb
dec
jp
add
or
xchg
lods
fidivrl
xor
and
cli
push
dec
dec
or
subl
es
jnp
inc
rorb
in
and
out
lds
and
dec
inc
test
stos
outsb
cmp
push
dec
fdivrl
je
mov
mov
add
pop
and
scas
addl
arpl
faddl
sbb
pop
je
jnp
dec
pop
inc
lcall
pop
and
leave
scas
pop
lock
mov
mov
cmp
daa
aam
sub
ds
mov
sti
lret
movsb
jne
in
mov
jecxz
xchg
jecxz
cld
inc
inc
pop
mov
mov
into
inc
mov
push
fs
les
mov
pop
mov
inc
add
int3
cli
push
outsl
ljmp
mov
mov
cmpsl
jp
push
cmp
fdivl
nop
sbb
test
ret
in
test
fisttpl
mov
stos
dec
push
cli
pop
fs
or
in
jne
addr16
jg
jae
bound
push
inc
push
push
fldl
mov
jp
jnp
jle
mov
adc
mov
ja
pushw
xchg
mov
xor
sbb
inc
lods
nop
pop
push
andl
cmp
loope
mov
xlat
shlb
adcb
test
mov
fisttpl
add
cmp
bound
frndint
lods
shrl
rcr
inc
dec
fidivrl
xor
mov
rolb
and
fiaddl
mov
rcrb
push
mov
add
dec
fcompl
bound
mov
cmp
popa
xchg
jmp
jle
push
xchg
out
cmp
mov
inc
xchg
ds
mov
sahf
ret
jl
jmp
pop
lcall
daa
pop
jg
dec
add
fstl
pop
and
pop
and
or
jne
jno
sbb
mov
mov
dec
xchg
jp
dec
jmp
lret
jp
add
out
mov
cwtl
insb
les
or
jne
and
cmpsb
adc
int
or
clc
jmp
sahf
cmpl
aam
push
test
push
jle
lods
scas
xchg
ror
inc
jl
pusha
jns
inc
arpl
pusha
jg
and
aam
mov
cmpsb
jbe
xchg
fs
dec
jbe
inc
push
jl
lahf
sbb
push
mov
xchg
dec
inc
inc
scas
and
repnz
xchg
fists
push
push
cmp
cmp
add
jbe
cmp
cmc
imul
jne
mov
sub
arpl
push
jecxz
mov
cmc
enter
inc
pop
push
xor
xchg
push
add
pop
or
mov
jnp
sti
out
add
push
ss
in
ud0
cmp
push
cmpsl
adc
ret
sbb
mov
repz
cld
ss
cltd
adc
add
pop
pop
repnz
adc
cmp
daa
les
faddl
cmp
cld
pop
adc
jp
pop
jns
icebp
jmp
sti
jns
ds
mov
bound
jl
ja
mov
add
xorl
adc
pop
add
pop
enter
ret
je
or
mov
stos
sub
sub
cmp
int
xor
mov
decl
add
popf
jg
fwait
push
or
mov
or
hlt
inc
push
adc
imul
std
or
jg
xchg
lret
scas
inc
mov
xchg
add
stos
push
lock
orb
and
pop
nop
add
loope
push
notb
repnz
mov
popf
loope
ss
call
jecxz
pop
clc
pop
jge
loop
mov
adc
jle
imul
fdivl
adc
daa
jo
cmp
rorl
shlb
stos
xchg
mov
jb
rcrb
mov
xor
push
ss
mov
and
mov
aaa
and
sbb
addl
outsb
out
enter
jge
les
fildll
sti
sub
dec
ror
sub
cmpsb
js
out
push
push
xlat
popf
test
xor
adc
fxch
xor
inc
pop
and
std
inc
aad
cmp
jo
mov
clc
outsl
cld
adc
imul
mov
aaa
jmp
jnp
push
aad
jp
add
sbb
jp
or
and
push
adc
out
out
xchg
pusha
outsb
xor
jge
xchg
mov
adc
movsl
pusha
dec
pop
add
idivb
into
cli
imul
ja
mov
cwtl
ljmp
shrl
push
xor
loope
call
mov
xlat
pusha
loopne
arpl
vmovdqa
icebp
lea
xchg
jp
shll
mov
push
std
xchg
add
dec
insl
push
lock
cmc
daa
inc
lcall
add
mov
out
stc
pop
cmp
mov
and
andl
out
xchg
xchg
xlat
int
mov
call
inc
fcmovne
push
adc
pop
lret
xchg
js
push
mov
aad
shl
push
out
and
push
dec
xlat
and
std
adc
pop
in
cmpsb
xlat
push
pop
xchg
das
and
push
and
testl
add
mov
jp
sub
out
sbb
pusha
ss
test
negb
adc
add
sbb
aas
iret
jo
cli
roll
push
popl
call
cmc
movsl
movsl
jmp
lea
movl
and
incl
dec
dec
orl
mov
cmp
ret
enter
mov
arpl
in
test
cmp
jp
aad
lds
add
jl
shlb
xchg
xor
fdiv
adcb
in
in
movsl
fwait
decb
xchg
dec
mov
and
or
jbe
sahf
xor
add
lods
loopne
mov
sbb
mov
mov
call
and
dec
out
mov
sbb
sub
push
ret
pop
sti
jmp
inc
adc
lahf
mov
mov
pop
mov
mov
push
sub
dec
sbb
inc
dec
das
incl
pop
mov
ss
push
jp
jle
xchg
out
sub
ror
mov
mov
dec
pushf
jae
aas
movsl
jae
fst
scas
sbb
cmp
movsb
jmp
data16
scas
aaa
popf
test
push
out
movsl
mov
mov
sbb
clc
pop
mov
sbbb
sub
lods
jp
lock
mov
mov
add
sti
sti
adc
pop
aas
scas
add
fistl
push
inc
cmp
sub
fadds
mov
mov
js
repnz
push
int3
push
inc
inc
adc
fcmovu
gs
into
inc
aad
jecxz
xlat
adc
sahf
stos
mov
aaa
mov
push
adc
movsb
inc
push
and
jns
clc
dec
cmc
pop
mov
or
add
jl
stos
mov
out
xor
scas
and
rolb
sti
xchg
push
fistpl
push
aaa
das
add
sahf
lcall
pop
jne
xor
adcb
jle
pushf
movsl
scas
repz
shlb
sarb
adc
testb
and
clc
loopne
int3
cwtl
es
sbb
addr16
scas
ljmp
xor
xchg
push
in
fildll
imul
sub
jg
mov
inc
pusha
hlt
idivb
das
mov
cwtl
cltd
sarb
sub
xor
dec
clc
iret
add
nop
mov
xor
adc
into
adc
gs
inc
cs
xchg
fdivl
add
xor
movsl
xor
fidivl
aam
mov
or
aas
and
add
pop
and
loopne
mov
and
add
xchg
in
jecxz
loope
test
pop
nop
inc
dec
push
sbb
test
push
pop
mov
testb
sub
popf
adc
enter
pop
dec
in
inc
testl
ja
sub
lret
inc
sub
fists
push
lret
movhps
cli
cmpsb
xor
aad
enter
pop
inc
mov
adc
jge
sub
pop
out
movsb
cmp
fimuls
jnp
xchg
pop
xor
leave
fwait
sahf
cmp
mov
hlt
jg
hlt
mov
mov
adc
ljmp
mov
lock
adc
addb
add
roll
inc
cmc
arpl
inc
shl
lods
fstpt
stos
xor
nop
add
mov
js
sahf
andl
and
jne,pt
add
jb
ljmp
lret
repnz
and
repnz
push
je
cmp
lcall
and
repz
push
xchg
mov
pop
fwait
out
xchg
movsl
mov
mov
in
sbb
push
or
mov
mov
add
jno
enter
ja
mov
jle
aad
or
xor
rcrb
sahf
stc
repnz
lock
xor
aas
lock
lods
repnz
mov
stc
push
out
imul
xor
mov
negb
mov
sbb
mov
das
rclb
push
inc
test
pusha
cli
je
outsl
jne
sbb
xor
or
push
mov
lds
push
jle
sti
mov
adc
mov
aaa
clc
mov
mov
rorb
fisttps
dec
aas
enter
ds
roll
lds
mov
add
fcompl
jmp
nop
xchg
xchg
jnp
inc
out
xchg
sbb
cmp
sar
push
jae
rcr
scas
cltd
dec
imul
test
jne
pop
adc
or
mov
popa
add
adc
xchg
ficoml
sbb
rclb
outsl
imul
cltd
outsl
dec
and
jo
fbstp
xchg
movsl
xchg
lock
inc
loopne
mov
fsts
jno
lahf
pop
jp
push
outsl
icebp
cli
sbb
fdivr
shr
ret
int3
aad
je
and
mov
orl
andb
add
pushl
sahf
fsubl
test
jmp
inc
lret
add
in
xchg
xor
iret
fwait
rcrb
lods
jo
bound
adc
sub
cmp
sub
xchg
cs
jne
repz
mov
sbb
lods
jp
cmpsl
sbb
daa
les
shl
pushl
dec
cli
sbb
sbb
sbb
dec
xchg
es
insb
out
sub
repnz
out
dec
decb
idivb
fstp
inc
es
cld
incb
out
pusha
xor
sub
push
mov
insb
lods
mov
cmp
fsub
mov
ret
jmp
sub
inc
stos
fs
sub
dec
cmpl
jl
inc
mov
pop
dec
adc
adc
and
or
sahf
pusha
sbb
repz
add
stc
cwtl
clc
mov
push
lea
paddsb
inc
mov
ja
shl
add
cmp
inc
negl
xchg
inc
or
sbb
cli
lds
mov
xchg
fldl
xor
mov
mov
fldt
fnstenv
inc
ret
push
push
shrb
or
mov
inc
loop
mov
dec
inc
mov
and
in
das
mov
sub
push
setp
cmp
bound
mov
xchg
sarb
mov
mov
sub
js
sbb
or
mov
jmp
pop
xor
push
lcall
scas
fs
into
pushf
mov
stc
dec
jae
in
daa
in
outsb
sub
add
jae
mov
push
lods
sub
in
insb
int3
outsl
and
fstl
jp
decb
inc
dec
into
mul
test
jnp
insl
xchg
cmp
dec
lret
push
outsb
loop
fiadds
mov
mov
pop
sbb
xchg
sahf
enter
push
mov
fstps
cli
xchg
sub
fstl
loop
jl
dec
pop
bnd
fisubrl
aaa
mov
in
leave
or
inc
xchg
xlat
je
dec
enter
cmpsl
testb
sub
push
es
jne
adc
mov
inc
pop
pop
cmp
daa
js
pop
sahf
and
mov
lea
xor
enter
add
xchg
nop
aam
movl
sub
inc
push
cwtl
sti
imul
mov
fildl
lods
adc
mov
pop
cwtl
insb
iret
enter
pop
and
fimull
push
jne
je
sub
je
ja
or
cmp
ss
push
mov
icebp
cmp
int
stos
xchg
or
in
faddl
mov
jnp
movsl
adc
xor
adc
fisttps
mov
movsb
aas
loopne
std
xor
es
mov
dec
xor
cwtl
in
sbb
sbb
push
xor
xor
mov
int
cmpl
fcoms
adc
call
test
dec
inc
cmc
cmp
push
popa
and
stos
jecxz
xchg
call
xchg
xchg
xchg
loope
mov
add
ja
mov
loopne
cld
les
je
add
sub
int
testl
aaa
xlat
addl
repz
scas
mov
pop
jo
decl
add
xchg
cs
aaa
sbbl
xor
xor
mov
leave
lret
mov
sub
scas
rcrl
icebp
dec
jp
and
pop
push
mov
push
xchg
cmp
pop
xor
repnz
push
push
aaa
daa
enter
cmpsb
mov
aas
xchg
es
sub
or
ss
adc
adc
movaps
daa
frstor
scas
mov
sbb
push
mov
xchg
pop
mov
cmp
outsb
outsb
loope
sbb
cmp
shr
sub
bound
mov
aam
dec
and
call
dec
stos
push
pop
adcb
jnp
test
addb
dec
mov
pop
add
aas
dec
push
movsb
aaa
loopne
into
ret
pop
jecxz
add
push
pop
mov
pop
adc
lea
pop
outsb
lret
icebp
hlt
xchg
mov
xlat
push
jl
test
into
cmp
pop
ret
fnsave
xchg
sbb
mov
in
pop
outsb
cs
sbb
xor
xchg
fwait
xor
dec
pop
inc
and
filds
test
mov
mov
adc
cmpsl
sub
neg
and
mov
call
pop
testl
dec
fadds
data16
out
inc
jl
sbb
xor
jecxz
or
pop
jno
jnp
fnstenv
into
imul
js
inc
pop
xlat
cld
mov
hlt
xchg
ret
sub
loopne
pop
push
mov
sub
gs
mov
xlat
in
lahf
out
sub
in
scas
out
push
lahf
jl
jecxz
cmp
pop
cmc
push
jmp
pop
mov
out
or
xor
and
cwtl
lret
cwtl
push
lods
data16
je
xor
pop
jl
in
pop
cmp
mov
inc
inc
mov
inc
push
xchg
dec
jae
mov
lahf
scas
sbb
cmp
sub
jmp
or
xor
jbe
add
popf
insb
mov
xor
sbb
mov
movsb
pop
lds
jo
mov
test
inc
fwait
popa
sahf
jnp
or
addr16
popf
dec
cs
mov
cmp
push
jmp
jae
jmp
mov
cmp
jnp
enter
and
imul
or
cmp
aaa
je
sub
xchg
cmpsb
and
and
or
repnz
jns
daa
mov
imul
bound
pop
mul
icebp
mov
sbb
jge
fs
mov
mov
test
lods
xor
push
jge
cwtl
mov
in
or
movsb
scas
imul
loop
adc
popa
jae
in
movups
rcrb
inc
in
jb
les
std
sbb
sbb
js
repz
cmp
insl
dec
sbb
adc
clc
sbb
mov
lock
jnp
comiss
in
call
sub
shl
stos
mov
cmp
paddb
push
sub
adc
test
fildll
push
xchg
outsl
in
repnz
add
stc
inc
jmp
fimuls
jns
mov
adc
push
mov
cmc
mov
jmp
les
jecxz
fucomi
push
sbb
scas
mov
es
js
jnp
out
cmp
pop
sub
cmpsb
mov
adc
lods
cmpsb
push
hlt
mov
or
mov
fisttpll
cmp
push
and
push
incl
daa
adc
push
fsubr
rcl
out
js
imul
sub
pop
jg
pop
jns
sbb
test
sti
cmp
mov
jmp
dec
jbe
ror
stos
mov
dec
or
adc
xor
mov
gs
mov
cmp
lretw
mov
ljmp
pop
mov
movsl
xor
xchg
mov
adc
pusha
call
rorl
aam
jl
inc
mov
movsl
lods
sbb
inc
jo
inc
xorl
scas
inc
add
and
outsl
hlt
jg
idivb
sbb
int3
js
rolb
cmp
out
pusha
fcmove
inc
add
cmp
mov
xor
sbb
adc
xchg
cmp
add
push
inc
or
cltd
xchg
dec
aad
cltd
adc
arpl
dec
cmc
adc
hlt
fsubl
push
jge
orl
cmc
scas
mov
sarl
add
mov
mov
xor
lret
dec
aaa
out
xchg
push
into
push
outsb
dec
fs
mov
sub
cld
clc
mov
xchg
push
mov
sub
xor
sbb
out
mov
inc
jmp
mov
rcrl
movsl
or
dec
inc
pusha
adc
ret
sbb
pop
xor
dec
add
jmp
adc
sbb
fcomp
sbb
out
pop
add
sub
dec
cwtl
clc
cltd
loop
jns
stc
decl
dec
arpl
lods
aas
xor
pop
cs
sbb
xlat
pop
pop
pop
bound
and
mov
dec
test
mov
addr16
mul
mov
mov
faddp
rolb
dec
and
or
rcl
loope
int
mov
loopne
jg
pop
fisubrl
fucomp
aad
daa
dec
mov
mov
push
mov
or
jns
jno
pop
sbb
sbbl
sbb
pop
into
xchg
lea
inc
out
or
pop
shll
jge
outsb
mov
dec
mov
das
cmpl
in
ret
scas
sbb
inc
push
sbb
jp
aas
sbb
adc
cmc
rol
int
enter
insb
fstl
test
mov
repnz
pop
test
faddp
mov
inc
es
sbb
sub
outsb
add
sub
push
outsb
sahf
push
arpl
fdivs
pop
xchg
outsb
add
in
xor
cmp
aaa
push
and
mov
mov
push
imul
jno
mov
jge
lock
adc
mov
mov
xor
sbb
push
add
lcall
in
push
ss
sbb
ss
inc
test
push
fcmovu
inc
andb
xor
inc
dec
sub
call
fildll
test
in
jge
scas
int
mov
xchg
pop
add
sarl
inc
imul
sahf
jg
imul
pop
lahf
stos
lds
mulb
test
scas
popa
inc
data16
sbb
adcl
fildll
lock
mov
adc
ffree
dec
sub
rcl
mov
mov
aad
pop
dec
xchg
addr16
cmp
repz
sbb
xchg
push
aaa
imul
orl
dec
fistpll
jl
in
mov
pop
outsl
cmp
pop
int3
sub
sbb
stos
pop
pop
xlat
call
push
cmp
inc
mov
imul
xor
ret
dec
jb
inc
call
add
popa
cmp
fwait
mov
cmp
jns
in
iret
in
add
test
dec
lods
xor
pop
jne
sbbb
aam
lods
adc
ss
xchg
inc
mov
inc
ret
mov
fbstp
sbb
push
xchg
adc
pushf
iret
std
sub
jg
inc
lock
pop
sbb
adc
fisubrs
sahf
imul
xchg
adc
xchg
rorl
mov
jmp
pop
push
fistpl
aad
jbe
outsl
or
mov
repnz
cli
mov
pop
imulb
xchg
nop
jne
jo
aas
shld
xchg
mov
daa
sarl
dec
add
test
mov
add
xchg
sbb
cwtl
pop
cmp
in
xchg
xor
idivb
mov
out
aas
mov
mov
mov
shr
add
test
aaa
sarl
mov
or
hlt
mov
jmp
dec
push
xchg
push
shll
iret
add
adc
pop
subb
bound
cmp
out
push
ror
dec
mov
sub
lcall
mov
push
into
les
daa
dec
into
and
loope
inc
imul
xor
inc
push
sbb
ret
push
in
sub
fbstp
imul
push
dec
in
mull
out
xchg
jb
inc
adc
pop
out
mov
out
pop
sub
sarb
fidivs
mov
inc
loop
subl
mov
bound
enter
or
fisubl
sbb
push
push
lds
mov
dec
xor
movzbl
push
fwait
jns
mov
imull
mov
xchg
dec
fwait
mov
jae
cld
lret
out
xor
or
in
jo
mov
fcompl
adc
or
push
arpl
sub
inc
ror
popa
test
pop
mov
xor
clc
jno
std
push
push
js
icebp
lods
inc
push
push
roll
lds
fcomip
push
jo
push
mov
arpl
sub
and
dec
pusha
push
hlt
ret
out
mov
xchg
daa
fidivrs
push
into
add
test
lods
pop
bound
mov
lea
iret
ret
pop
stos
loope
outsb
push
cltd
in
push
sub
jg
pop
jns
imul
mov
icebp
adc
pushf
outsl
xchg
test
xor
test
sbb
push
mov
sbb
or
sbbl
sub
mov
aas
lock
lds
xorb
and
inc
adc
pop
pushf
in
add
int
dec
cmp
jge
test
fdivrs
jo
cmp
das
jg
mov
test
push
sbb
repnz
and
shl
xchg
add
fbld
sahf
and
pop
js
jne
pop
pop
mov
das
xchg
int
int
push
cmp
inc
add
lds
mov
clc
popf
jnp
sbb
loope
int3
fdivrs
xchg
and
cld
sarb
cmp
and
add
jo
movsl
mov
push
cwtl
sti
dec
mov
sti
loop
and
dec
fnstcw
repz
and
sbb
test
shl
mov
jns
push
push
mov
gs
in
aas
lods
pop
push
pushf
sar
adc
and
pop
or
or
cmp
imul
mov
loope
jb
test
jnp
je
add
jo
les
aam
xlat
fistpll
cmp
or
ljmp
mov
ja
cmp
xor
insl
xor
adc
or
into
cmp
je
flds
aam
jbe
mov
nop
out
jb
aas
into
clc
jbe
in
pop
rclb
sbb
pop
jge
add
or
data16
mov
mov
pop
cwtl
in
fstpt
ds
dec
mov
lock
cwtl
leave
pop
pop
xchg
imul
iret
mov
add
imul
std
stos
lret
mov
mov
xchg
xor
push
mov
add
xchg
or
mov
mov
fldl
mov
out
xor
imul
push
out
lds
lret
cmpsb
out
cld
push
sbb
sub
lea
ret
adc
or
sarl
rorb
mov
xor
jo
xchg
test
lcall
and
mov
shr
push
mov
xchg
xor
inc
sahf
jmp
ret
mov
jl
cmpsb
movsl
add
testb
sarl
mov
outsb
int3
sub
sub
leave
js
xchg
xchg
adc
out
dec
and
jno
dec
lds
add
pop
adc
pop
das
lret
test
bound
fdivr
sbb
cld
notl
mov
lods
sbb
inc
lret
jecxz
adc
sub
rcrb
inc
ror
and
std
fistps
shrl
loopne
leave
cmpsb
pop
push
pop
into
lcall
sub
das
lock
fwait
jno
adcl
xor
bound
adcl
scas
jle
and
and
mov
and
mov
ja
int3
pop
int
push
mov
leave
dec
aas
lea
push
lret
stos
nop
add
filds
jg
cmp
nop
cmc
pushf
aam
imul
inc
aaa
faddl
pop
sbb
adc
push
shlb
pop
lds
jbe
test
insl
ss
clc
mov
cli
push
rorl
cs
jno
out
cld
movsb
mov
clc
fisttpll
push
test
inc
mov
in
mov
cmc
test
inc
xchg
dec
gs
dec
in
imul
mov
push
fimull
add
imul
jle
repnz
shll
movsb
jg
inc
roll
loop
arpl
and
lds
shll
arpl
insb
aaa
dec
mov
adc
push
ljmp
sti
hlt
mov
and
pop
call
jecxz
loop
enter
sahf
sub
cmp
mov
mov
cld
ljmp
cmpsl
inc
xchg
mov
and
inc
fldt
outsb
into
dec
insl
lret
inc
cli
imul
out
xchg
test
sbb
sbb
test
ljmp
aaa
jbe
jns
call
aas
inc
jno
push
mov
popa
popf
scas
fildll
and
xor
arpl
push
fmull
iret
cmp
cmp
es
mov
push
pop
xor
jl
sbb
ljmp
sbb
sub
jmp
loope
jmp
fbld
mov
xchg
jno
pop
stos
or
sub
scas
xchg
mov
pop
cmp
fcom
adc
dec
push
add
mov
sbb
mov
jnp
data16
adc
xchg
add
jnp
repnz
divl
stc
cmp
adc
mov
aaa
aaa
cmp
inc
xchg
aaa
fisttpl
movl
lret
addr16
mov
or
jo
int3
mov
fwait
xor
fiadds
jp
insl
aad
dec
pop
inc
in
cmpl
mov
jbe
or
push
dec
xor
mov
or
pop
stos
xor
popf
adc
or
lea
call
push
xchg
xor
xor
jmp
pop
int3
mov
addr16
repz
xchg
and
adc
ror
cmpsl
adc
inc
mov
inc
fsubrs
repnz
add
sub
std
nop
fnsave
sub
mov
push
je
lods
jne
sarl
insl
sub
scas
inc
aad
xor
or
pop
inc
nop
loopne
jbe
call
or
xchg
cmp
int3
pop
or
jl
inc
dec
cmp
pusha
pop
lret
mov
jno
out
dec
xchg
jne
fs
mov
lea
add
fsts
cmpsb
xor
in
xor
mov
push
adc
add
leave
jne
mov
stos
mov
cltd
pop
in
cmp
stos
and
fsubl
pop
pop
sti
imul
mov
xchg
rclb
sbb
test
dec
fucomp
std
and
insl
subb
inc
scas
outsb
sub
dec
out
loope
dec
adc
leave
aam
cmp
das
js
push
mov
imul
cli
push
dec
pop
int3
fcmovnu
rcll
out
insb
dec
mov
in
leave
scas
ss
loope
push
xchg
les
and
sbb
mov
mov
inc
jp
jg
dec
cmp
movsl
sahf
sub
fldcw
xor
or
enter
jns
jne
call
push
mov
push
aaa
outsb
lret
outsb
lea
push
add
dec
or
pop
shl
test
mov
mov
test
ret
xor
jns
add
xor
xor
dec
rclb
incl
js
add
data16
inc
add
into
lcall
aam
shr
dec
dec
das
cmp
pop
les
pop
inc
mov
cld
pop
fdivrl
gs
icebp
fistpll
shr
mov
cltd
and
sub
jg
fisubs
add
ds
int
jp
cltd
cmp
dec
es
push
cs
test
pop
aad
daa
in
xor
inc
pop
xor
mov
dec
cli
xchg
dec
or
pop
scas
mov
outsb
mov
adc
cmp
xchg
in
push
mov
adcb
les
leave
nop
rep
mov
sub
xchg
adc
outsl
in
insb
testb
mov
iret
call
cmp
adc
fsubrs
dec
mov
aad
and
xchg
ret
shlb
inc
push
cmp
fstpt
xchg
arpl
ret
jmp
nop
outsb
jge
fildl
jle
or
jl
add
lods
data16
jne
fwait
pop
mov
arpl
rorl
in
adcl
push
mov
fnstenv
in
xor
lods
jp
arpl
or
fsub
in
jl
and
add
mov
mov
pop
mov
inc
inc
outsb
and
cmp
jns
lcall
xor
push
mov
in
xchg
movsb
and
mov
sbb
insb
popa
ficompl
int3
jns
mov
mov
loop
and
and
loop
lahf
push
push
dec
leave
stos
inc
mov
out
mov
pop
addr16
mov
in
sub
mov
xchg
push
adcb
mov
push
adc
inc
lret
adc
fnstcw
negl
out
xchg
push
iret
dec
cmp
cmpsb
add
mov
cmp
xchg
je
xchg
xorl
lret
cmp
mov
lret
pop
sbb
push
sti
sbb
stos
test
and
inc
out
test
rcrb
inc
add
add
pop
fsubs
in
inc
les
shlb
dec
add
dec
mov
adc
jp
addl
xchg
repnz
cltd
hlt
std
fbld
insl
mov
mov
lods
pop
mov
xchg
lods
sti
add
push
adc
xchg
mov
rorb
bound
push
xor
xor
es
mulps
enter
xchg
ret
pop
add
out
sub
std
adc
dec
nop
ds
cmp
lea
scas
mulb
or
jp
int3
outsb
mov
icebp
test
sbb
sbb
or
lret
xchg
xor
adc
inc
mov
aaa
push
xor
es
mov
cmp
mov
and
call
loop
mov
push
or
xor
and
mov
sub
lods
mov
adc
pop
daa
aad
push
icebp
and
out
ljmp
jl
out
pop
sti
adc
loopne
rorl
sbb
mov
imul
xlat
rolb
mov
cli
sahf
and
hlt
shlb
and
cmp
mov
adc
jg
mov
cmc
fs
in
stc
fiaddl
mov
test
out
pop
dec
sub
lahf
arpl
jl
int3
push
sbb
xlat
mov
sbb
xchg
ljmp
xchg
divl
mov
jmp
sbb
loop
jle
test
cmpsb
jne
dec
ds
mov
add
hlt
lcall
imul
cmp
and
cmp
aam
pop
push
stos
fstpt
vcvttpd2dqy
push
loope
out
sub
ret
in
ds
int
test
stos
xchg
jg
jmp
pushf
or
xlat
add
fisttps
push
add
movlps
inc
bound
jo
mov
xor
stc
push
add
lret
lret
fsts
push
jae
or
js
cmc
lcall
in
dec
lret
mov
cmp
adc
mov
ficoms
gs
hlt
int3
sub
lock
mov
jo
fs
bndldx
lahf
shlb
or
sbb
loop
jae
clc
fwait
stos
jge,pt
cmp
pop
into
jle
pushl
lahf
pop
cmp
xor
adc
inc
sub
jecxz
outsb
push
or
or
dec
sbb
movsl
sti
imul
push
push
or
test
loop
sti
xchg
lcall
cld
in
push
jmp
and
imul
das
and
mov
inc
sub
dec
mov
imul
loop
add
adc
inc
cmp
in
jb
cltd
sbb
mov
adc
test
mov
shrb
mov
imul
cmpsb
push
xor
mov
in
and
imul
cmp
jp
or
out
loope
std
cmp
mov
cmp
lods
adc
cwtl
jl
push
sbb
xor
push
in
add
enter
les
jae,pn
cmp
lret
and
lahf
shll
or
mov
add
sahf
loope
scas
push
sub
fnstcw
mov
pop
cld
sub
push
cpuid
dec
or
adcb
mov
pop
mov
xor
xchg
jp
push
inc
in
pop
dec
cmpsl
lcall
mov
faddl
fnstsw
mov
lea
test
xchg
fbstp
mov
dec
ret
sub
pop
aas
enter
daa
push
inc
test
outsb
xchg
pop
testl
xor
pusha
push
movsb
add
push
sti
pop
add
leave
idiv
mov
mov
orb
je
scas
pop
js
cmp
lcall
mov
daa
sbb
and
pop
sub
mov
pop
xor
or
pop
pop
call
dec
repz
or
jb
cmc
adc
cmp
mov
mov
mov
int3
mov
cltd
pop
add
cwtl
jne
pop
or
movsl
popf
xchg
pop
je
sbb
out
movsb
jmp
int
scas
in
aas
gs
jle
dec
je
rolb
lcall
mov
cltd
inc
int
mov
ds
fisubs
xchg
lcall
mov
sbb
or
cltd
push
fdivr
fdivrs
lret
xchg
inc
mov
or
push
adc
pop
mov
xlat
inc
inc
adc
aaa
rorb
enter
imul
inc
sahf
dec
cld
push
in
mov
pop
ficomps
push
imul
je
push
push
pusha
fwait
dec
insb
adc
mov
adc
int3
sarl
xchg
insl
sub
cmp
pusha
sti
out
aas
leave
pushf
iret
push
stc
sarl
xchg
sbb
add
iret
test
fists
jle
stc
inc
iret
inc
sbb
js
mov
cmp
sub
shll
or
gs
dec
or
les
clc
jns
sub
push
mov
dec
dec
sub
pop
bound
cltd
mov
daa
push
inc
push
xlat
dec
mov
repnz
test
scas
out
jae
jg
sbb
aaa
test
repz
sbb
push
mov
sbb
pop
out
sub
adc
js
pop
std
sub
adc
imul
and
push
aad
mov
push
repz
mov
or
jnp
inc
xchg
xchg
jns
dec
mov
mov
mov
test
int3
jle
add
cld
sub
fcompp
or
adc
jl
and
push
daa
loop
pop
add
cmc
push
mov
pop
scas
cmc
jae
daa
cs
or
push
inc
or
xchg
ljmp
xchg
jmp
adc
pushf
bound
mov
push
lret
loopne
cmpsl
cmp
sahf
pop
add
adc
jg
adc
shlb
insb
sub
cmp
in
mov
jmp
push
cmp
mov
xor
cmpsl
xlat
outsl
out
insl
sub
add
add
jae
cltd
popf
push
and
adcb
sbbb
mov
adc
push
pushf
mov
mov
mov
in
jmp
jbe
sub
xor
or
movsb
pop
cs
ljmp
movsl
jb
rorl
lock
add
fwait
aaa
sub
xchg
lock
sbb
repz
sti
or
js
enter
inc
rcr
jecxz
int
jne
js
jb
je
sbb
and
loop
mov
cmp
push
mov
pop
lods
xchg
les
lea
pusha
cwtl
jmp
cmp
cmp
or
mov
fsts
adc
xchg
jp
add
pop
cmp
scas
fcmovnb
and
mov
enter
push
mov
fimull
aad
add
pop
add
push
shrb
mov
push
pusha
out
xor
add
out
sub
fdivl
or
ljmp
int3
sti
jb
out
orl
gs
sar
xor
in
enter
fcompl
jp
add
lea
pop
test
mov
in
movsl
dec
outsb
pop
mov
pop
arpl
mov
arpl
cmp
sub
jb
jns
negb
sbb
jp
sbb
sbb
cwtl
neg
xor
mov
or
xor
push
cld
push
sub
movl
les
je
dec
jo
mov
out
jp
push
lods
mov
popa
movsl
push
mov
jle
int3
jns
movsb
insb
adc
shrl
idivl
dec
out
add
mov
nop
and
mov
stc
mov
sbb
test
pop
lods
xchg
fiaddl
pop
pop
jnp
test
scas
jne
repz
cmp
daa
mov
insl
pop
aas
cli
pop
shll
hlt
imul
aas
fs
cmp
dec
cmp
mov
or
jne
mov
mov
mov
ret
mov
adc
sbb
mov
std
xchg
iret
mov
pop
fdivrs
iret
icebp
loop
xor
mov
lock
sahf
inc
cmpb
inc
andl
into
outsl
xchg
xor
jle
addl
xor
adc
mov
add
mov
rclb
shlb
ds
push
mov
adc
mov
xor
fsubr
inc
cld
push
loope
jecxz
out
pop
push
aaa
cmc
mov
aam
xchg
sub
xlat
pushf
mov
shld
dec
mull
out
add
xor
xor
xchg
pop
pop
xor
inc
sbb
push
push
xchg
inc
mov
into
inc
jo
or
mov
cltd
push
lods
push
inc
push
sbb
cmpsb
inc
dec
int3
sub
insb
mov
lcall
sub
sbb
mov
xchg
rorl
xor
push
push
mov
mov
jecxz
loop
jae
outsl
cld
aaa
sub
clc
cmpsl
or
jae
cmp
jl
les
test
lret
or
sbb
mov
dec
cmp
dec
ja
mov
je
insb
adc
mov
imul
mov
pop
sbb
popa
push
jbe
dec
cmp
cld
popf
pop
dec
or
jb
jmp
push
dec
push
outsb
arpl
mov
aaa
push
in
lock
call
btc
call
imul
add
je
fnsave
mov
or
dec
outsl
mov
ret
arpl
cmc
inc
shll
push
dec
cmp
out
mov
fldl
push
cli
or
mov
in
test
or
mov
das
mov
test
xor
data16
sbb
xchg
xchg
cmpb
xchg
in
dec
push
jne
rorl
in
fmuls
and
mov
mov
mov
pop
xchg
sbb
test
mov
fcmovne
stos
out
mov
xchg
xor
mov
mov
jae
add
stc
out
cld
repnz
ds
fidivs
mov
inc
loop
arpl
mov
mov
loope
mov
push
push
push
push
push
sahf
flds
xor
aas
inc
xchg
lock
cmp
cmpsl
shrb
int
mov
sti
mov
xchg
ja
ljmp
ds
shll
imul
mov
or
dec
jle
imul
add
xchg
push
mov
divb
jecxz
mov
dec
push
cmp
int3
mov
out
shl
sahf
xor
adc
repnz
das
call
lea
push
mov
inc
out
cmp
lea
fnsave
xchg
mov
jge
mov
popa
or
repz
sti
pop
add
cmp
fdiv
or
and
dec
repnz
ror
fwait
lahf
mov
jp
cmp
inc
lahf
fptan
fwait
sbb
fwait
or
push
les
pushf
mov
das
fs
sub
mov
mov
xchg
fwait
enter
jge
popf
call
push
movsl
stos
adc
pop
xor
fiadds
or
mov
and
cmc
inc
in
cmpsl
xchg
push
sbb
lds
scas
insl
lock
movsb
adc
jmp
pop
pop
hlt
loopne
ja
cmp
fsubl
ss
or
subl
mov
imul
pop
scas
push
and
dec
daa
xchg
ret
in
jo
cmpsb
jle
mov
outsl
push
lock
test
ss
aaa
pop
lret
jg
inc
jae
lds
inc
jne
fmull
test
inc
xorb
orl
and
hlt
inc
xchg
ja
notl
pushf
push
in
lods
mov
sbb
mov
addr16
hlt
dec
pushf
and
addr16
pop
sbb
or
imul
cmc
ss
shlb
jbe
and
inc
packssdw
dec
push
fwait
add
into
adc
push
mov
insb
into
icebp
lret
pop
in
sahf
lock
push
lcall
rolb
sqrtps
mov
cltd
sbb
int3
or
fsubrl
cmp
pop
shrl
dec
in
pop
jg
dec
je
dec
adc
mov
repnz
or
or
push
dec
fidivrl
mov
imul
imul
jbe
inc
shll
into
or
movsb
nop
push
push
sbb
fnstsw
popf
hlt
pop
mov
mov
xor
add
pop
dec
clc
or
jp
or
or
add
inc
jne
aad
inc
and
xchg
imul
in
or
test
fisubs
fdivl
and
xchg
mov
scas
xchg
loopne
lcall
adc
sbb
cmp
sbb
jno
push
inc
pop
and
iret
ds
mov
pusha
cmpl
arpl
jae
lods
call
add
test
adc
or
outsb
adc
jo
push
add
sbb
loop
adc
filds
cmp
dec
or
mov
mov
add
dec
push
push
movsl
jnp
adc
and
jp
sbb
ror
cmp
mov
cmpsl
jmp
jne
pop
out
int3
xchg
adc
mul
xor
adc
inc
push
jl
mov
pop
mov
ret
fldt
cmp
jnp
ds
jmp
in
and
push
sbb
jp
pop
add
inc
fcmove
or
sarl
cmp
mov
movsb
jle
adc
mov
xchg
nop
ss
ss
fimuls
scas
add
add
and
in
inc
stos
dec
mov
jmp
mov
cli
fwait
les
add
sbb
fistpl
testl
into
daa
inc
push
mov
aam
mov
loope
and
sbb
movsl
adc
lahf
xor
sub
xchg
leave
movsb
push
dec
rcll
inc
add
enter
jbe
pop
testb
cmp
ljmp
push
push
sbb
fidivrs
outsb
popa
lea
xchg
mov
add
hlt
je
loopne
push
or
shll
jb
xchg
jno
addb
ljmp
mov
mov
cmp
stos
ret
mov
das
ds
sbb
hlt
jl
push
outsb
fwait
cmp
sbb
mov
inc
mov
xlat
shl
jnp
fdivl
cmc
mov
sbb
mov
cltd
lods
test
iret
push
mov
jmp
adc
or
sbb
ret
pop
pop
lea
into
int
dec
adc
cmp
xor
adc
into
sahf
xor
adc
repz
push
push
push
mov
addl
arpl
dec
jne
sarl
xchg
mov
pushf
inc
test
pop
outsl
cmovnp
stos
fsubr
movsl
pextrw
subb
dec
lcall
add
fists
sub
dec
jnp
xchg
mov
roll
push
es
in
fdivs
pop
push
or
push
mov
mov
xchg
pop
mov
cmpsl
sbb
inc
sub
repnz
add
add
inc
or
notb
jbe
mov
or
data16
aaa
cmc
lock
xchg
push
mov
ret
mov
sar
ljmp
ja
mov
testb
xchg
sub
mov
mov
cmc
dec
jle
out
push
push
cld
sbb
cwtl
addr16
pop
sbb
or
push
xchg
mov
xor
dec
inc
test
xchg
mov
arpl
mov
add
inc
rol
inc
mov
sbb
lods
loopne
nop
decl
adc
shlb
stos
out
dec
stos
cltd
mov
xchg
fimuls
dec
lods
leave
dec
or
in
sbb
sub
sub
out
gs
adcl
xchg
cmp
int
scas
mov
xor
xchg
cmp
loope
or
jl
imul
popl
popa
pushf
pusha
loope
jp
inc
bound
stos
cmp
aas
xchg
sahf
add
xchg
add
iret
scas
cmp
xchg
shll
int3
enter
sbb
cmpsb
fisttps
mov
or
mov
repz
push
dec
loopne
or
xchg
ljmp
sub
fdivr
or
setge
mov
and
out
mov
xor
mov
xchg
imul
xchg
subl
xlat
icebp
pop
aad
mov
sbb
popf
iret
mov
push
sbb
lret
mov
sbb
hlt
xor
cmp
cmc
bound
dec
cmpl
jne
out
mov
test
stc
mov
jle
data16
mov
jb
sahf
scas
dec
outsb
jl
inc
push
or
xchg
ret
push
shlb
dec
inc
xchg
mov
adc
jne
xor
jg
jg
add
or
sub
and
jo
js
mov
shlb
sub
out
jae
adc
loopne
xchg
out
push
bound
cmc
in
addr16
adc
sbb
popa
ror
push
or
add
das
and
mov
or
mov
cmc
lods
addr16
and
mov
fucomp
or
jno
movsb
lock
lret
and
lods
clc
mov
into
jecxz
inc
out
mov
es
cmc
mov
sbb
adc
push
iret
aam
cwtl
ss
aas
sbb
push
jnp
nop
jg
dec
pop
mov
pop
jmp
fistpll
stc
mov
pop
mov
insl
mov
lods
std
in
push
out
nop
je
dec
and
push
pop
aas
xchg
inc
xchg
test
push
mov
aad
adc
and
dec
push
push
sbb
mov
mov
sti
ja
in
stc
xor
push
ficoml
add
push
xchg
test
mov
andl
jge
add
inc
ljmp
out
xlat
mov
lock
lahf
clc
sub
pop
sti
cwtl
subb
frstpm(287
dec
mov
mov
adc
sbb
mov
fimuls
pop
xor
popa
mov
clc
or
mov
sbb
xchg
xchg
fcmovnb
pushf
les
sub
or
cli
ret
mov
and
cwtl
push
cli
cli
add
scas
aas
hlt
cmp
jns
add
dec
fwait
xor
lret
cld
fidivrs
ss
faddl
stos
scas
iret
insb
rcll
adc
out
ds
inc
pop
idivb
loope
call
xor
jae
inc
mov
mov
sub
pop
pop
cmc
inc
gs
mov
in
sub
jp
jle
test
jnp
popa
dec
dec
int3
aas
fdivs
js
or
cmp
lods
lahf
sub
mov
aaa
mov
mov
mov
addr16
and
test
cmp
test
mov
cmp
jbe
sbb
xor
dec
add
push
jbe
inc
pop
in
xlat
in
ja
jle
stos
cmp
stos
or
xchg
repz
loopne
aaa
nopl
leave
cmp
sahf
push
cmp
sbb
sbbl
cwtl
or
lcall
sub
lds
jo
or
addr16
cld
push
mov
xchg
jne
hlt
call
fldt
mov
push
hlt
gs
enter
ret
xchg
jl
mov
xchg
pop
add
test
mov
inc
shrl
imul
pop
cmpsl
or
push
sbb
mov
inc
insl
leave
rclb
fidivs
sub
inc
inc
push
testb
testb
repz
inc
js
jl
mov
cwtl
push
xchg
push
pop
js
ret
sarl
xchg
call
or
ret
mov
outsb
jbe
mov
sar
je
inc
mov
push
shlb
mov
bound
mov
test
push
call
pusha
imul
jnp
mov
cmc
lods
jecxz
cmc
jne
arpl
push
ffree
add
je
test
cmp
fcompl
insb
or
movsl
ds
repz
cwtl
scas
mov
js
out
sub
xchg
insl
into
adc
cmp
dec
inc
inc
push
cmp
ss
xor
fdivrs
jnp
jmp
push
cmp
cmpsb
mov
cmpsl
loop
mov
icebp
lret
lret
pusha
rolb
insb
push
xchg
jo
mov
data16
aaa
popf
movb
sbb
add
les
and
clc
sbb
enter
test
fmull
fmull
shll
bound
shlb
or
mov
popa
jne
jb
cmpsl
or
stos
mov
mov
cmp
pop
or
loope
cmp
sbb
xchg
mov
and
shll
xlat
xor
inc
push
aam
out
movsb
stos
mov
mov
mov
cld
xchg
aam
lcall
or
dec
cltd
mov
mov
mov
popf
inc
cmp
fidivs
mull
daa
add
add
idivl
lods
aad
adc
sub
pop
je
sahf
pop
push
sub
dec
jno
std
add
xor
mov
cmp
sbb
mov
aad
push
sub
aaa
pushf
outsl
pop
ret
aaa
rep
fcomi
lods
push
mov
lds
std
enter
cmp
out
or
or
je
outsb
add
ja
push
push
cmpb
sbb
fwait
outsb
xorps
xor
cmp
je
lds
sbb
stos
jle
gs
inc
pop
in
dec
jo
cmp
mov
inc
ret
mov
ljmp
aas
repnz
and
add
mov
repnz
imul
xchg
mov
fs
xor
pop
mov
cmc
lret
sbb
sbb
mov
cmc
fildl
xchg
lods
repz
adc
inc
pop
or
pop
jo
push
jns
pushl
iret
xchg
popf
clc
inc
fbld
imul
jmp
iret
mov
or
icebp
mov
loopne
mov
or
xor
push
xchg
nop
pop
xchg
fsubrs
aas
lret
mov
push
mov
inc
xor
loop
pop
lret
adc
push
cmp
mov
push
aaa
sahf
leave
scas
cmp
hlt
sbbb
sbb
push
jl
and
inc
fdivrp
movsl
cmc
pop
or
fisubrs
shll
pop
fldt
outsl
xor
sahf
mov
insl
rcl
out
int
pusha
cmp
mov
add
out
popa
loop
cmp
sub
cli
dec
sbb
sub
jns
push
mov
jg
pop
xchg
jge
inc
mov
arpl
xor
push
std
inc
das
dec
addb
dec
push
insl
pop
jecxz
mov
cmp
insb
sub
mov
imul
inc
xor
lret
add
aaa
lds
pop
cmpsl
jno
sbb
cmp
mov
mov
fcompl
mov
adc
xor
lcall
jb
imul
arpl
fidivrs
imul
repnz
xor
mov
movsl
inc
and
mulb
or
push
sbb
notb
jle
jo
jo
lock
adc
decb
or
bound
inc
dec
mov
jmp
pop
data16
mov
dec
sub
lcall
stos
enter
inc
sbb
adc
imul
mov
test
es
mov
push
pop
push
insb
xor
pop
push
mov
cmp
cmp
cmpsl
arpl
or
test
aad
rcr
mov
xor
movsb
mov
cld
and
icebp
sub
lahf
loopne
in
in
adc
out
js
inc
mov
xchg
iret
loop
pop
int3
mov
xorb
add
sti
sub
enter
xor
xchg
sub
xchg
xchg
lret
pop
incb
xchg
pop
xlat
mov
pusha
sbb
xchg
lcall
cmp
jg
leave
adc
pop
xchg
mov
lcall
test
fs
lds
test
inc
jp
jmp
insb
sbb
sub
sahf
daa
in
rcr
jnp
sub
or
jno
inc
clc
sub
mov
pop
xchg
dec
or
push
xlat
out
outsl
popa
fwait
cli
dec
add
xchg
fisubrs
ss
adc
or
aaa
pop
cmp
imulb
int3
out
cmpl
enter
jp
push
test
int
cmpsb
sbb
jmp
ror
mov
jb
xlat
call
and
shlb
ja
inc
sarl
lret
cmpsl
ss
pop
stc
loope
dec
cmpsl
mov
rcrl
mov
cmpb
insb
pusha
xchg
push
test
xor
test
xor
or
add
outsl
mov
mov
pop
sub
enter
mov
pop
mov
and
jmp
cmp
mov
mov
cld
push
cmc
jnp
data16
mov
mov
seto
xchg
outsl
lock
ja
adc
mov
push
jns
mull
dec
push
dec
mov
mov
lahf
add
gs
imul
ljmp
add
insb
mov
pusha
adc
or
inc
shrl
cmc
mov
add
rcl
out
scas
pop
dec
mov
enter
pop
in
fcmovu
sub
mov
dec
add
mov
xrelease
stc
lahf
and
jp
je
int3
jo
aad
add
lret
mov
jne
mov
or
mov
sbb
rol
popf
jne
lahf
adc
mov
pop
inc
adc
stos
push
dec
test
mov
js
mov
cmp
add
xchg
lods
add
shrl
xor
inc
push
cmpsl
cmp
lret
dec
dec
lds
and
jno
sbb
xchg
je
add
fnstsw
inc
pop
shrl
and
xchg
push
cmp
out
popa
mov
fistpll
ficoml
cwtl
loop
or
sub
cmp
mov
push
xchg
sub
add
jo
mov
stos
sbb
xchg
aaa
insl
rcrl
add
mov
icebp
jne
stos
cmc
add
pop
sbb
ret
sub
loope
cmpsl
jp
addb
scas
adc
or
push
dec
mov
lds
dec
imul
sbb
setge
cmpsl
subb
ss
cld
inc
jle
lds
push
es
icebp
cmpsl
lcall
mov
dec
sub
movsb
ds
subl
mov
stc
sbb
sahf
sbb
or
pop
out
gs
cltd
fucomip
aam
popa
sahf
sarl
ret
insb
cmpsl
nop
aaa
in
mov
icebp
add
out
mov
sub
cmp
sub
les
pop
outsb
mov
push
add
stos
dec
or
mov
cwtl
mov
aad
or
dec
movsl
dec
mov
mov
dec
iret
pop
xor
xchg
fists
or
push
adc
mov
push
mov
dec
cli
lods
mov
or
or
vaddsd
jbe
daa
incb
cmpsb
popf
mov
lods
mov
pusha
inc
push
hlt
or
or
jo
push
add
ret
xchg
cld
insb
sbb
ljmp
ja
ss
or
loope
mov
cmpsl
mov
aad
jl
add
push
pop
bound
push
cmp
lahf
mov
jns
pop
pop
cmp
arpl
notb
pop
jnp
jbe
sub
pop
ja
rcll
addr16
shlb
cs
cmp
mov
cld
std
mov
mov
jbe
addl
lahf
push
add
sbb
mov
fldenv
sbb
out
push
pop
pop
mov
add
adc
jo
cwtl
inc
xor
sbb
sub
test
sub
divl
fcomps
sub
and
into
xchg
aam
rcr
xor
loop
loopne
scas
and
jp
xchg
test
xor
ret
pushf
test
inc
mov
push
repnz
jbe
mov
daa
mov
cmp
mov
and
int
add
jb
sbb
in
xor
pop
and
add
mov
or
addr16
or
or
pop
inc
inc
sub
test
cmc
das
scas
mov
js
sbb
push
sbb
movb
lcall
adc
mov
sahf
dec
andb
fiadds
out
aad
addr16
mov
xchg
std
push
adc
inc
mov
bound
jle
pop
xor
imull
xor
fistpll
insb
push
mov
shrl
lods
hlt
hlt
inc
scas
mov
enter
arpl
push
ret
js
test
xchg
aas
jmp
jo
lcall
mov
add
dec
imul
sahf
dec
pushf
bound
repz
stc
mov
pop
mov
into
mov
mov
fistpll
or
sbb
xor
xor
inc
ds
cld
lcall
xchg
xor
xchg
movsb
stos
pushl
cmp
push
call
xchg
push
lret
test
pop
repz
cmp
inc
cmp
xlat
ret
cmp
cmp
sub
and
or
lret
dec
mov
iret
xchg
pop
add
in
mov
push
mov
in
cld
jb
push
cs
xchg
bound
pop
and
add
xchg
daa
das
das
sarl
jbe
cmp
shld
shll
pop
push
mov
imul
sub
xor
cmpb
mov
push
push
jns
xor
mov
xor
repz
leave
pusha
mov
inc
lahf
xor
pop
sbb
jp
fildl
and
or
fwait
mov
mov
push
das
pushl
cmp
lea
add
ret
into
jae
ja
adc
imul
test
add
xor
cwtl
sub
jne
in
cmc
inc
sbb
xchg
push
pop
or
dec
jecxz
hlt
add
repnz
mov
stos
push
in
xor
or
jmp
or
and
out
adc
pop
jle
dec
js
sti
mov
xchg
xor
setnp
mov
mov
fwait
lahf
mov
jbe
sbb
adc
push
push
inc
dec
dec
stos
xchg
in
scas
sub
lret
xchg
or
outsb
inc
lods
fnsave
outsb
or
lock
xchg
push
js,pt
mov
stc
sub
inc
daa
fcoms
mov
lock
xor
mov
repnz
mov
addr16
loop
mov
test
inc
mov
loopne
or
std
inc
popa
add
dec
in
das
and
aam
into
fwait
and
xchg
daa
mov
int3
rcr
xor
push
pop
mov
or
gs
movups
xor
sbb
je
dec
cmp
pop
pop
rdpmc
int3
jl
xor
push
cmp
push
sbb
and
adc
lods
std
sbb
jns
push
xor
cmpsb
xchg
lcall
loop
mov
std
test
inc
fcomip
shrl
cmpsl
in
jg
in
jb
fwait
inc
fcmovb
outsl
jl
imul
in
jl
xchg
and
stos
iret
scas
add
push
mov
add
pop
dec
mov
push
paddd
pop
or
in
xor
or
sti
enter
loope
pop
and
jmp
sub
cli
fcmove
popf
xchg
arpl
test
jo
addr16
sti
sub
inc
and
div
xor
popf
lahf
dec
xor
lret
daa
mov
adc
mov
jae
jae
pusha
iret
or
shr
mov
adc
jge
repnz
cmpsl
sbb
mov
lods
add
outsl
sti
je
mov
sbb
rcll
push
xchg
sti
dec
shll
inc
xchg
mov
cmp
test
insl
mov
pop
sbb
mov
stos
jmp
sbb
fs
outsb
mov
cmovns
rolb
lret
nop
or
loope
mov
xchg
mov
xor
xchg
fsubp
jns
andb
xchg
pop
sahf
push
in
pop
pand
push
push
aas
stos
jg
sahf
pop
jb
jg
push
xchg
repz
sbb
std
xchg
int3
cmpsl
sti
and
and
in
dec
ljmp
cmp
xor
jo
shrl
push
ja
adc
or
or
cmp
lcall
leave
jb
lea
push
hlt
mov
fldcw
inc
adc
dec
pop
push
mov
lods
mov
add
ljmp
sub
and
add
inc
shlb
xchg
lcall
lea
mull
lods
fimull
adc
les
mov
jae
xor
mov
out
ja
cmp
jb
std
mov
add
or
in
aaa
loop
in
cmp
gs
push
push
sarl
pop
movb
xchg
pop
insl
mov
scas
cli
popa
call
mov
mov
lea
lods
fnstenv
add
in
mov
dec
adc
inc
aaa
push
add
mov
xor
aad
mov
scas
xchg
and
in
cmpsb
stc
das
xchg
aaa
inc
loop
mov
movsl
mov
xor
aaa
rcll
cmpsl
sub
cli
dec
xchg
dec
dec
test
out
repnz
ret
cli
xor
mov
xchg
jle
lret
xorl
adc
lret
jns
repnz
cmp
sar
or
enter
hlt
dec
sub
inc
xchg
mov
imul
movsl
xchg
pop
es
and
hlt
loopne
jnp
mull
hlt
add
jmp
in
cld
adc
imul
int
sub
mov
test
fimuls
es
or
mov
out
outsl
and
inc
mov
idivl
cmp
insb
push
inc
test
xor
gs
push
push
add
imul
push
dec
push
push
pop
sbb
pop
in
cmp
fsubs
and
xchg
xor
lock
mov
push
xor
stos
jne
jns
cmp
call
mov
fsubs
divb
cmp
je
mov
sub
pop
push
pop
insl
mov
insb
dec
bound
incb
fcos
fwait
mov
ljmp
mov
and
imul
cmp
cmp
inc
adc
mov
scas
dec
inc
dec
leave
hlt
cmpsl
xor
jbe
mov
mov
in
std
mov
mov
cmp
xor
cmpsb
sub
and
test
add
xchg
push
push
lds
add
stos
pop
pop
mov
loop
mov
jmp
scas
or
test
push
cltd
pop
adcb
inc
data16
mov
push
mov
xchg
pop
sub
cmp
aas
sub
xchg
shlb
int
fsts
je
pop
les
jl
add
sub
add
sub
xor
lret
push
inc
pop
js
pusha
inc
mov
xchg
shlb
jnp
stc
pop
ret
mov
cmp
out
lcall
hlt
pusha
push
cli
jecxz
test
icebp
dec
xchg
mov
test
es
pop
xchg
testl
stos
nop
adc
mov
test
bound
sbb
cmp
cmc
mov
pop
stos
std
pop
subl
mov
fidivrs
lock
dec
mov
fbstp
jge
fs
xchg
xor
pop
xor
mov
or
adc
movsb
popf
cmp
imul
ds
jmp
jne
adc
ljmp
mov
mov
loop
add
add
jae
mov
xor
lock
daa
pop
xchg
ds
cltd
add
jbe
add
lahf
sbb
sub
inc
gs
dec
aam
dec
sub
inc
popf
inc
aad
xchg
mov
cmpsb
scas
mov
in
call
mov
xor
mov
sbb
call
dec
pushf
in
stos
sub
and
pop
pop
pop
xchg
cwtl
inc
sub
pop
enter
mov
fimuls
or
sub
je
addr16
ficoml
pop
dec
jnp
adc
push
jle
insl
push
mov
outsl
jne
jae
nop
outsl
lcall
nop
xlat
stos
dec
clc
pop
stc
and
sbb
sub
jo
cmp
push
xchg
pop
cmp
sub
and
movsl
lret
mov
mov
dec
inc
or
shll
cmp
xor
sahf
push
adc
mov
push
mov
jge
adc
pop
inc
add
push
repz
fsubrl
dec
mov
xor
inc
ds
push
clc
das
test
outsl
jecxz
add
mov
cmpsb
pop
out
pop
test
popa
or
mov
and
test
mov
cld
jnp
fiaddl
popf
mov
fnstsw
pop
iret
sbb
cli
sub
mov
jmp
rorb
jnp
js
out
sbb
shlb
jl
xchg
inc
int
inc
xchg
or
xchg
cmc
mov
jbe
cmp
sub
fdivrs
decl
xchg
or
add
subl
imul
push
in
jno
stos
aad
and
shl
stos
outsl
and
les
in
cmpsl
ss
testl
lds
in
or
mov
nop
cmp
push
out
sbb
push
adcl
add
xchg
jge
js
mov
or
add
push
inc
lcall
push
lcall
mov
test
into
out
dec
cwtl
arpl
push
pushf
js
xor
pop
dec
imul
mov
das
lock
rorb
xchg
fsubrs
mov
lret
inc
jne
lcall
adc
jae
mov
cmp
inc
in
cld
cmpsb
push
sahf
stos
mov
sbb
imul
cmp
test
stos
das
jmp
cmpsl
fdivrs
mov
loop
xchg
cmp
push
aad
or
out
pusha
pop
xchg
jge
dec
and
or
mov
cmp
shrl
xchg
into
mov
or
jns
sub
aad
mov
out
fucom
ljmp
loope
sub
and
leave
rorl
push
mov
lods
push
dec
into
jnp
test
das
test
add
xchg
mov
push
inc
and
dec
mov
mov
pop
out
or
or
sbb
pop
mov
add
push
mov
faddl
pop
mov
or
testl
movb
push
sbb
test
test
iret
push
int3
mov
mov
fs
std
fimuls
push
jno
popa
dec
ljmp
enter
jge
les
add
fistpll
sub
int
in
ret
or
sbb
pop
mov
adcb
insb
outsl
sub
pop
or
inc
mov
lcall
addr16
jnp
mov
jbe
enter
out
fldenv
mov
lds
ror
jb
add
scas
outsb
sub
lods
cmpsl
xchg
fsubl
mov
outsb
addr16
or
mov
daa
jecxz
stc
outsb
test
faddp
pop
mov
fwait
adc
test
mov
mov
push
push
cmp
insl
les
call
lods
adc
jno
popf
icebp
int
in
xchg
rcrl
cli
jl
sbbl
jl
out
cmpsl
sub
push
mov
dec
mov
or
imull
xchg
xchg
inc
pop
mov
cmpsb
pop
lfs
mov
jae
or
scas
fdivrl
cmpsb
inc
push
pop
negl
cmpsb
pop
push
xchg
or
sbb
outsb
sub
loopne
dec
lret
xor
scas
inc
scas
dec
pop
mov
fists
divl
add
push
fst
push
cmc
or
jg
xchg
outsl
sbb
push
pop
push
add
outsl
dec
jo
jle
xchg
inc
jle
add
sbb
out
xor
adc
fnstenv
mov
sub
loope
ljmp
test
xor
pop
stc
mov
in
repz
out
mov
enter
fiaddl
sub
outsl
cltd
dec
ljmp
fistpl
xlat
leave
pushf
out
stos
ljmp
fistpll
dec
mov
adc
ret
in
sbb
test
pushf
sbb
jbe
fcompl
xlat
adc
and
and
lcall
push
jle
mov
sub
lahf
test
mov
push
aam
xchg
xor
loopne
fmuls
pop
dec
sub
lcall
add
movsb
push
inc
xchg
insb
jne
push
incb
test
pusha
mov
add
es
dec
push
lds
mov
outsl
xchg
and
nop
mov
mov
inc
loopne
outsb
mov
into
aas
ljmp
mov
or
lds
aaa
lods
xor
test
sub
or
mov
aas
pop
or
out
arpl
mov
shrb
xor
sub
aaa
in
mov
sbb
mov
mov
xor
in
xchg
sub
lea
clc
pusha
xor
mov
mov
mov
jecxz
pop
mov
jns
add
adc
sub
push
out
ret
mov
adc
xchg
jo
inc
arpl
sub
xorl
out
xchg
add
mov
fsub
fucom
cmp
xchg
cmp
adc
mov
ja
push
or
push
push
jno,pn
push
popf
dec
jo
push
pop
je
shlb
call
in
fwait
add
push
mov
xor
ds
pop
inc
pop
fimuls
sub
popa
test
mov
add
mov
xchg
jb
sbb
mov
xchg
jecxz
mov
or
imul
mov
sbb
add
cltd
insb
stc
mov
pop
mov
std
jl
jge
fmuls
ja
inc
or
ficoml
add
inc
push
add
jnp
test
xchg
repnz
test
sar
sbb
sahf
mov
mov
mov
jo
mov
adcl
and
or
addl
inc
adc
mov
mul
mov
mov
cltd
lret
mov
pop
lret
test
aaa
stos
sbb
in
jl
inc
mov
xchg
cld
push
fsubs
mov
shl
or
emms
jge
rcrb
outsb
push
mov
cltd
ss
mov
hlt
int
out
mov
add
sub
sbbl
call
ss
inc
dec
dec
lret
pop
sub
aad
pop
lea
lcall
ret
mov
movsb
scas
iret
aas
cmp
sub
sbb
lret
js
call
sbb
push
inc
pop
pop
loop
xchg
popw
rol
test
sub
lret
mov
mov
sti
adcl
cltd
adc
push
setne
xchg
daa
inc
mov
divl
mov
fbld
mov
sub
sti
xor
mov
or
adc
in
mov
pop
xor
mov
test
fiaddl
xchg
push
pop
aas
loop
cli
mov
out
mov
daa
xchg
stc
jecxz
xor
hlt
sbb
mov
push
pushf
fstpt
jb
clc
xor
stos
lea
push
dec
sub
imul
cltd
leave
cmp
stc
sbb
stos
pop
push
sbb
out
jle
adc
sti
mov
cmpl
shll
push
aad
pop
ds
pop
cmovl
scas
jle
fiadds
mov
and
add
imul
lcall
lea
mov
je
out
push
cmp
xor
inc
fwait
adc
jp
push
xor
add
inc
repnz
sbb
cmp
fldl
xchg
into
dec
push
sahf
dec
add
jae,pn
arpl
mov
aas
jl
sbb
pop
cmp
xor
mov
add
outsl
pop
pop
int3
icebp
add
jbe
ja
repnz
mov
dec
pop
cld
inc
xlat
loope
std
add
seto
fs
shlb
mov
stc
add
aad
sub
leave
fwait
mov
cmp
lret
out
es
pop
int3
xchg
pop
mov
divb
daa
pop
pop
add
int
sbb
mov
and
dec
fbstp
dec
mov
in
pop
lea
int3
mov
scas
push
mov
in
xchg
aaa
andb
fstl
negb
loopne
cmp
xchg
sub
inc
mov
mov
dec
leave
iret
sti
sub
cmpsl
mov
sarb
xor
mov
idivl
stos
sbb
insb
loop
je
sbb
cmp
aaa
inc
push
cwtl
es
popa
adc
fwait
sub
lahf
mov
pop
cmc
ds
scas
imul
enter
jge
fistl
jo
hlt
cld
enter
nop
xchg
pushf
out
cmp
sub
adc
sub
push
mov
xchg
sub
add
cmp
xor
inc
fldl
adcb
les
and
xchg
out
mov
inc
jg
pushf
pop
je
push
adc
leave
or
xchg
inc
pop
int3
dec
xchg
insb
cltd
mov
fsubl
add
ljmp
test
pop
pop
lods
sbb
sbb
jo
mov
xchg
mov
mov
mov
loopne
icebp
in
in
cli
xor
mov
sbb
test
mov
loope
or
int
xlat
push
gs
bound
xchg
inc
xchg
pop
pop
xor
mov
sub
out
cs
pop
sbb
sar
cltd
lcall
adc
cmpsl
mov
popf
push
addr16
nop
add
mov
pop
lret
arpl
pop
cltd
lcall
mov
popf
sbb
lret
mov
scas
movsl
aas
lods
xor
fwait
add
or
add
data16
inc
mov
mov
push
mov
mov
sahf
push
xchg
inc
cmp
xchg
xlat
jp
aaa
out
movsb
js
data16
and
mov
or
stc
xor
lcall
xorl
pop
jne
rcll
jnp
xor
cmp
pop
hlt
push
test
stc
xchg
push
cld
bnd
mov
popa
sbb
and
add
loope
jecxz
jge
ret
xor
roll
or
add
push
in
inc
sub
mov
sbb
pop
lock
mov
pop
dec
xchg
inc
jb
mov
enter
mov
jb
cmp
pop
popa
jecxz
aaa
mov
dec
push
addr16
sahf
inc
scas
mov
pop
fsubl
pusha
testb
cwtl
imull
or
add
jecxz
adc
xchg
test
dec
into
push
mov
lahf
add
sub
mov
jb
push
sub
sbb
mov
cwtl
aam
xor
outsb
jo
pop
and
movaps
pusha
xor
inc
arpl
enter
ljmp
rolb
or
aaa
mov
and
mov
rorb
cmpsb
lret
test
mov
xor
arpl
and
xchg
ret
mov
sahf
lcall
jge
insb
pushw
sub
or
test
lods
scas
push
pop
xchg
rorb
mov
cwtl
push
jb
inc
xlat
push
popf
clc
push
test
loope
mov
cmpsb
dec
addl
adc
pop
fnsave
cmp
insl
push
into
mov
push
add
int
cld
mov
out
xor
dec
mov
mov
lea
inc
imul
mov
adc
fidivrs
xchg
add
dec
outsb
pop
or
cmpsl
scas
inc
mov
lret
or
or
cmpsl
push
mulb
mov
int3
orb
ret
adc
cli
movsl
mov
psubusb
pushf
fnsave
jo
pop
jge
ss
addb
mov
pop
jg
test
inc
adc
lret
lods
pop
insl
and
mov
and
xchg
pushf
lods
or
inc
pushf
mov
dec
inc
pop
das
dec
pop
je
pop
jp
xor
bound
push
cmc
mov
ljmp
sub
sti
mov
bound
push
mov
mov
int3
bound
push
les
sar
or
mov
imul
ret
mov
jne
aaa
es
sbb
insl
sbb
call
sub
cmp
push
or
js
scas
lea
cmpsb
or
ret
sbb
and
xor
hlt
iret
addr16
call
testl
insb
loopne
mov
cwtl
dec
jne
loopne
popa
iret
sahf
jne
sti
push
test
icebp
call
scas
repz
jns
fistps
hlt
cmp
mov
mov
mov
in
mov
inc
cltd
movl
mov
mov
out
mov
rol
lret
jno
int3
stos
inc
sub
gs
xlat
xor
in
mov
mov
inc
or
xor
icebp
xchg
sbb
ret
call
and
test
pop
jb
or
pop
clc
pushf
pop
jbe
push
mov
and
mov
xchg
pop
jl
add
inc
xchg
and
sbb
xlat
stc
add
mov
in
jmp
or
fcmovnb
cmp
mov
push
push
mov
and
xchg
fldenv
pop
stos
lds
btc
and
lcall
es
xor
dec
shrl
xor
add
mov
sbb
push
fst
pop
push
movl
lcall
jle
push
cmp
or
pop
insb
fs
mov
negb
jl
dec
xorl
out
cmc
cli
mov
popf
iret
push
je
insl
mov
dec
dec
mov
mov
lds
int
sbb
lods
test
std
adc
mov
in
sbb
js
xchg
lcall
aaa
dec
lds
lcall
jae
popf
into
into
mov
mov
mov
repz
xchg
xchg
rorl
shll
shll
inc
cmpsl
pop
insb
outsb
andb
or
jo
jae
push
lock
mov
xchg
push
out
outsb
leave
loope
das
imul
leave
sbb
xchg
and
adc
test
adc
sub
adc
mov
fwait
xor
ss
mov
push
mov
sub
jno
lahf
jp
leave
jl
mov
pop
in
fdivrl
leave
dec
adc
jo
add
insl
mov
dec
push
lahf
ja
cli
sarb
cmp
mov
cmpsb
popf
xchg
sbb
inc
push
mov
mov
and
sahf
ja
pushf
jg
mov
loopne
stos
mov
adcl
test
outsl
hlt
adc
jns
add
xchg
sar
mov
sub
pop
xchg
jmp
std
xlat
jns
std
es
xor
mov
ss
mov
daa
call
push
movsb
fsubrl
xchg
sbb
lcall
dec
mov
movsl
fcompl
out
insl
clc
cli
shlb
ds
in
mov
cmp
jns
jecxz
hlt
dec
test
xor
addl
clc
push
xchg
pop
xchg
sbbl
test
lcall
test
xlat
sbb
jp
pop
mov
dec
je
rolb
scas
aad
stc
std
out
shlb
je
cs
cmp
push
lcall
lods
pop
xchg
ljmp
add
in
icebp
pop
aad
insb
mov
push
decl
dec
cmp
negb
popl
pop
je
pop
lock
push
or
xor
and
jmp
jno
jns
jl
cltd
popf
jb
lock
mov
sbb
andb
xchg
xor
pop
cmp
int3
inc
and
pop
fmull
mov
loop
xchg
nop
add
ds
pop
fmuls
ja
lea
dec
je
adc
cmp
mov
outsb
cmp
cmp
stos
lahf
insb
push
fldenv
clc
sbb
xchg
ror
jl
ja
jmp
sbb
adc
sbb
xchg
addb
icebp
xchg
cmp
insl
hlt
addr16
aas
in
scas
and
hlt
cmc
jae
sahf
push
mov
scas
add
je
cmpsl
adc
jg
iret
jg
mov
push
addr16
inc
adc
mov
subb
sub
push
add
adc
or
or
xor
sub
xchg
jb
inc
insl
push
dec
scas
cltd
jb
sub
mov
int
mov
or
sub
push
jl
out
hlt
test
cmpsl
divb
pop
fdivrl
pushf
xchg
mov
inc
xchg
push
adc
pop
rcrb
es
test
std
jg
cmp
xor
fstps
add
cmp
jae
xchg
scas
inc
sub
mov
test
jmp
xor
idivl
mov
and
cmpsb
daa
les
jmp
mov
aad
scas
jmp
test
hlt
add
push
xor
mov
movsl
mov
adc
mov
lock
cli
lds
inc
cli
aam
imul
push
sbb
in
popf
and
out
xchg
scas
and
lds
inc
sbb
jmp
ret
loope
fs
shr
lea
sbb
dec
sahf
mov
mov
popl
enter
pop
gs
sub
repnz
cmp
pop
jecxz
incb
fistl
cs
mov
mov
outsb
push
stos
push
mov
jne
adc
pop
or
addr16
xor
or
sub
add
jg
aad
out
cmpsl
sahf
mov
dec
mov
mov
push
pop
lock
stos
adc
mov
aad
inc
cli
mov
and
subl
and
mov
inc
addr16
and
rcl
leave
adc
lods
lahf
push
lods
pop
mov
push
inc
cs
mov
fwait
add
xchg
jns
push
xchg
xchg
iret
mov
popf
das
mov
xlat
fnstenv
adc
test
xor
das
inc
cmp
mov
or
sub
lahf
xor
sub
loop
xchg
arpl
sahf
cmp
xor
jge
das
sarb
stos
ss
xchg
push
xor
push
movsl
dec
enter
ljmp
mov
mov
sub
mov
sbb
mov
cmpsl
sbb
jl
ss
dec
mov
pop
sti
addr16
pop
sti
es
dec
lea
stos
jb
mov
testb
inc
pop
test
es
cmp
push
mov
outsb
out
repz
or
or
gs
inc
ja
mov
cmp
arpl
shll
xchg
test
movb
clc
or
ljmp
inc
in
pushf
jnp
stos
out
adc
xorb
pop
out
mov
lret
sbb
prefetch
or
shlb
and
push
pop
xchg
dec
je
inc
andl
in
pop
loope
cmpl
sahf
dec
inc
andb
jnp
and
imul
mov
xchg
push
mov
jnp
js
ljmp
adc
test
cwtl
xchg
data16
push
sub
sbb
int
in
in
fsubr
ret
cmpsl
aas
int
test
loope
out
loopne
push
xchg
in
inc
les
fldl
imul
pop
in
or
movsl
gs
mov
lds
or
into
push
sbb
cltd
subl
lcall
xor
insb
pop
pop
cmp
xlat
divl
das
cmp
fbstp
pop
xor
lock
dec
testl
mov
push
xor
out
jge
cld
inc
imul
icebp
inc
xor
or
pop
mov
je
xchg
xor
mov
sub
adc
inc
std
sahf
aas
push
loopne
xchg
pushf
mov
pop
xchg
mov
cmpsb
push
inc
jno
mov
in
push
mov
xchg
lret
jp
nop
mov
jne
sbb
iret
xchg
mov
inc
pop
add
push
ffreep
mov
js,pn
cmp
popa
push
lcall
add
sub
push
push
inc
jne
pop
out
aad
iret
adcb
enter
imul
adc
xor
mov
fwait
repnz
jmp
ficomps
adc
dec
daa
adc
shlb
aam
andb
mov
daa
push
sbb
adc
insl
sbb
inc
std
fisubs
xor
je
ss
sti
imul
js
jne
stos
imul
clc
pop
push
add
pop
stos
xor
aas
xchg
jle
pop
jmp
test
mov
cmp
dec
dec
sbb
fiaddl
test
lods
lcall
hlt
loopne
mov
into
cmp
push
js
movsl
es
lods
in
test
inc
adc
pop
je
dec
push
dec
adc
fwait
pop
repz
stos
scas
adc
test
movsl
xor
mov
pushf
mov
js
flds
and
xchg
adc
stc
iret
add
pop
mov
jmp
pop
adc
jno
ja
jge
adc
cmpsl
cwtl
push
lods
jmp
insb
addr16
jecxz
pushf
mov
es
and
adc
mov
fstpt
jle
jecxz
std
outsb
ds
addr16
aaa
sbb
mov
dec
adc
mov
push
aam
mov
into
stc
add
lcall
daa
int
pushf
mov
clc
and
xchg
jp
xchg
inc
fwait
pop
lret
xchg
icebp
movsl
inc
in
adc
cmpsl
aam
pop
scas
addr16
mov
fsubrl
jmp
dec
cltd
and
movsb
lods
sbb
sub
aas
int
rep
and
or
outsl
lcall
es
shl
call
add
std
xchg
scas
jbe
xlat
repz
les
jbe
or
aas
add
fsubs
pfrcp
jmp
dec
imul
sub
xchg
inc
mov
adc
jg
mov
shl
push
cmp
sbb
notl
inc
jge
ret
mov
lock
inc
outsb
daa
xchg
pop
inc
out
rol
mov
xor
fwait
in
inc
jl
mov
aas
cmpsl
insb
and
js
pop
xor
test
je
out
mov
sub
fcoml
jge
jns
pop
into
add
fbld
xlat
inc
add
dec
loope
sbbl
push
add
sbb
sub
xor
insl
lret
int
test
mov
test
sahf
inc
pushf
and
out
cmpsb
dec
outsl
or
lods
lock
mov
out
mov
popf
jo
sbb
adc
loope
dec
mov
sub
adc
lods
mov
or
or
jl
cli
aas
cli
loope
cld
stos
xchg
rcll
xchg
jae
fwait
sbb
pop
ret
in
mov
inc
aad
push
inc
cltd
pop
sahf
add
dec
mov
lcall
int3
scas
jb
cli
ja
mov
xchg
or
ficomps
mov
dec
test
test
aas
dec
fs
mov
dec
adc
push
cmp
xchg
nopl
mov
fsubs
mov
xchg
ret
insb
inc
xchg
inc
lock
jl
mov
pop
lahf
mov
pop
and
js
sbb
ret
pop
dec
pop
xchg
mov
out
lcall
int
push
cmp
cmc
mov
mov
ja
xor
test
cs
cmpsl
pushf
clc
mov
mov
icebp
jo
xor
movsb
mov
add
cmpl
push
testb
push
adc
inc
imul
jnp
mov
cmp
hlt
sbb
test
aam
jg
mov
sbb
sub
sbb
out
mulb
sbb
sub
cmpb
divl
adc
out
daa
pop
lods
aaa
xchg
cld
pop
pop
sbb
cmp
xchg
cltd
cmc
fdivl
shll
divb
xor
cmpsb
nop
mov
cmc
cltd
push
ret
or
addl
push
test
test
inc
jmp
addl
stc
push
loope
push
mov
lar
inc
push
test
ret
int3
jbe
out
adc
fwait
cmp
jae
mov
mov
add
hlt
mov
add
and
sahf
nop
je
cmp
mov
icebp
ss
cmpsl
fs
cmpb
jb
lahf
pop
nop
aam
sarb
and
bound
inc
xor
into
push
inc
or
mov
scas
inc
pushf
lret
int
jae
fstpl
xor
mov
sbb
jo
pop
cmp
je
push
add
jno
and
sahf
mov
pop
jg
sub
and
jecxz
jno
pop
adc
dec
mov
ficomps
mov
xchg
scas
test
sti
stos
inc
cmpsb
out
jge
cmp
xchg
in
mov
int3
dec
xlat
or
aaa
mov
adc
pop
adc
cmp
jle
fadds
stos
push
cmp
jns
and
into
mov
push
mov
ficoms
pop
mov
sub
fcoml
es
out
mov
ds
push
out
jle
loop
data16
push
loope
jmp
test
xor
mov
inc
mov
rclb
lods
iret
pop
inc
idivb
imul
sarb
test
jmp
lock
inc
push
dec
mov
dec
ret
xor
outsl
xchg
inc
fildll
nop
mov
mov
push
lret
add
mov
or
adc
aas
pusha
pop
call
jo
lret
sub
jne
add
or
xor
sti
loope
fcomi
movsl
test
ss
xchg
xchg
mov
test
shlb
cwtl
mov
or
xchg
adc
mov
outsl
dec
sub
mov
mov
sbb
rep
adc
movsl
push
loope
mov
cmp
add
shrl
inc
shlb
popa
aad
jl
xchg
pop
add
mov
dec
and
pusha
popf
or
lcall
pusha
outsl
or
imul
mov
sub
mov
adc
loop
xor
pop
jg
adc
pop
mov
sbb
jns
sbb
call
imul
pop
ror
jae
add
mov
add
sar
pop
lahf
and
xor
sub
dec
mov
es
pop
mov
jp
pop
lret
push
adc
jns
or
dec
xchg
cmp
push
xchg
sub
inc
out
in
sub
cmp
sub
and
push
testb
xchg
lret
out
rcll
or
add
mov
cmp
push
jge
pop
les
aaa
mov
dec
add
xor
idivl
xchg
popa
push
push
stc
inc
inc
out
inc
ss
jg
je
into
imul
cmpsl
and
fdivr
adc
es
xchg
mov
jp
addr16
das
arpl
mov
push
or
cmp
and
lods
bound
lea
cmp
idivb
mov
shlb
mov
mov
push
mov
sub
jle
daa
or
icebp
dec
jno
pop
loope
test
dec
cmpsb
mov
jne
ja
insl
or
add
xlat
andl
xchg
sti
push
insb
mov
popa
or
clc
jp
xchg
cmc
push
xor
push
test
mov
inc
fcomps
ffree
adc
loop
mov
fwait
jmp
cmc
aad
jno
sti
aas
adc
cltd
dec
negb
jecxz
mov
jno
pop
jo
push
fidivrl
add
xchg
lods
stos
iret
movsl
testb
xchg
ret
add
imul
pop
pop
mov
sub
sub
push
xchg
cld
mov
jmp
mov
inc
out
popa
cltd
jbe
pop
lock
adc
mov
xlat
xor
fwait
add
xchg
shll
cwtl
and
cltd
inc
frstor
push
jl
and
repz
xchg
dec
push
cltd
push
loopne
sbb
mov
cmovs
jmp
and
mov
lret
or
or
xchg
cmp
ja
fbld
outsb
jnp
sbb
push
mov
test
out
in
jg
daa
repnz
outsb
les
pushf
roll
repnz
cmpsl
xchg
xlat
test
das
add
stos
test
lea
cmp
negl
inc
xor
bound
push
sub
fucom
cmp
inc
movsl
stos
and
in
aad
popa
adc
and
inc
cmc
sub
dec
inc
outsb
fstpt
pop
mov
jecxz
push
cli
xor
sti
and
pop
in
mov
repz
jae
pop
mov
inc
icebp
shl
lods
and
outsb
es
sub
shlb
mov
icebp
rcl
lock
nop
fistpll
fiaddl
das
cli
je
inc
mov
fcmove
inc
sbb
push
jmp
pushf
sbb
jns
sbb
push
popf
and
cld
mov
in
mov
orb
and
dec
ret
mov
push
sub
rclb
popa
add
ja
sbb
iret
mov
sbbb
popa
push
mov
gs
dec
pop
scas
inc
test
mov
sub
das
fs
out
lea
popa
push
negb
jb
insb
or
out
pop
sub
je
mov
or
mov
ljmp
mov
cmpsl
leave
and
push
mov
xchg
push
sbb
repnz
jl
or
cwtl
jno
sbb
sbb
push
mov
mov
pop
sbb
pop
out
in
mov
dec
mov
ficomps
mov
jge
inc
cmp
je
sbb
sarb
cmp
popf
push
pop
push
lock
call
hlt
ret
xchg
and
push
les
aaa
jnp
shl
lea
jo
cld
scas
push
cmpsl
das
mov
fsubs
std
rclb
or
xadd
popa
fadds
or
and
sahf
out
in
push
lods
leave
add
push
jle
test
sarl
jbe
dec
inc
lret
std
inc
pusha
mov
inc
inc
sahf
pop
loop
xchg
push
leave
add
jne
adc
jae
jmp
cmp
dec
outsl
jns
xor
xor
movsb
adc
mov
inc
mov
cmp
std
int3
fistl
lret
rcrb
adc
popa
mov
mov
jp
push
movb
bound
xor
out
xorl
outsb
or
push
mov
lret
adc
jbe
cmpsb
mov
popf
mov
movsb
push
inc
movl
fs
arpl
popa
aaa
add
ret
pop
fcmovnb
inc
int3
sar
adc
negb
sub
imul
aas
out
les
jno
arpl
inc
inc
inc
negl
xor
xchg
outsb
push
xchg
sbb
and
mov
mov
gs
incb
or
outsb
aad
mov
add
dec
inc
push
jae
add
movmskps
xor
fwait
add
out
xchg
adc
popa
std
sub
xchg
push
fists
adc
cmpsb
ljmp
test
out
imul
stos
mov
sarl
cld
sbb
ret
and
clc
sub
lds
mov
rcl
sbb
add
push
fidivrs
push
test
cmp
andb
dec
in
mov
cmpsl
mov
push
adc
and
lock
pusha
es
fidivl
pusha
mov
dec
cwtl
sbb
dec
fs
pop
outsl
loopne
loop
mov
xor
mov
int
lds
aad
push
dec
test
loopne
insb
aaa
xchg
in
out
cmc
dec
lods
out
fiaddl
mov
sub
push
aas
orl
fistpl
sbb
dec
jp
and
adcl
inc
int3
mov
popf
ret
leave
pop
neg
push
inc
fcmovbe
icebp
mov
cld
adc
lds
leave
adc
mulb
xlat
push
mov
or
mov
loope
push
scas
test
sti
sub
mov
push
and
into
ret
add
pop
xchg
push
cltd
pop
hlt
add
push
clc
scas
add
daa
je
add
xor
cmpl
pop
aam
fs
pop
sub
mov
imul
mov
int3
jl
jg
or
sahf
xchg
pop
xchg
mov
rol
sbb
xchg
add
stos
bound
add
or
jne
incb
push
adc
ror
pop
mov
daa
adc
inc
sub
jg
outsb
and
jg
ja
sub
sbb
movsl
mov
adc
mov
dec
lea
out
mov
cli
jl
movsl
rcrl
push
pop
fsubr
sub
dec
loope
adc
repnz
push
ret
aad
cli
inc
jle
push
mov
add
in
add
push
je
fwait
ljmp
jnp
lods
sbb
or
negb
mov
jnp
mov
jnp
mov
add
cmp
or
data16
jns
or
add
jg
cli
cmpsb
repz
inc
je
cwtl
test
adc
enter
call
data16
mov
inc
fs
sbb
inc
or
push
pop
test
mov
repnz
or
or
mov
popf
push
inc
sub
mov
sbb
int3
lahf
into
xor
add
fs
jae
aas
cmc
dec
shr
and
ret
std
cmp
sti
and
jmp
pop
inc
pop
das
sbb
out
frstor
adc
mov
aam
mov
into
cs
pop
xlat
mov
or
icebp
and
loop
clc
adc
xor
mov
cmpsl
mov
mov
lret
call
xchg
sbb
lret
stc
add
mov
ficomps
popa
dec
cmp
inc
arpl
stc
and
clc
add
dec
mov
pop
iret
fbstp
imulb
push
add
test
xchg
test
lock
test
cld
hlt
mov
sbb
xor
or
adc
fnstsw
xor
pop
cmp
testb
icebp
outsl
outsb
imul
loop
loopne
fcomps
cld
push
aas
testl
fsubp
bnd
mov
lods
lahf
inc
leave
add
cmp
mov
lock
call
xchg
mov
popf
push
shll
add
dec
mov
xor
push
jns
leave
imul
dec
mov
ret
mov
xchg
cmpsb
push
mov
push
jl
or
out
int
inc
stos
outsl
aad
xchg
sbb
int3
out
mov
cli
mov
sti
and
or
sarb
jns
adc
hlt
ljmp
shlb
jl
lds
cwtl
fisubrs
out
cmp
popa
mov
data16
dec
cmpsl
shl
mov
adc
pop
in
sahf
out
cmp
mov
into
orb
mov
mov
sbb
pop
daa
lcall
fildll
pushf
pop
call
adc
sbb
pop
in
xor
adc
fisubl
pop
shr
outsb
jno
hlt
sbb
sub
arpl
cmp
rcrb
dec
popl
data16
test
sti
fwait
jno
lret
or
ds
fimuls
inc
lods
cmp
cs
xchg
sar
mov
adc
mov
jns
imul
clc
adc
loope
jg
lods
inc
into
repnz
in
mov
aad
jl
lret
jo
mov
add
jns
test
xchg
mov
sbb
mov
ret
rcll
adc
mov
call
mov
adc
inc
jns
jb
in
fiadds
sub
inc
inc
call
pop
adc
scas
gs
mov
lret
cmp
push
notb
cmovno
cwtl
sub
sahf
pop
rcrl
arpl
mov
andl
cli
sahf
push
int
scas
or
adc
pusha
sbb
xlat
jb
or
aam
es
rorl
jge
mov
mov
pusha
cmp
cmpsl
daa
add
adc
mov
inc
xchg
mov
mov
push
aas
loopne
fistpl
mov
cs
or
mov
or
sbb
pop
mov
lea
xchg
out
cmp
lea
push
xchg
test
and
gs
sahf
or
repnz
add
cmp
xor
adc
repnz
xchg
outsl
icebp
les
popa
test
mov
sub
sbb
fidivs
xorl
inc
xchg
push
sbbb
scas
movsw
mov
pop
in
hlt
lea
cwtl
lea
sub
lcall
call
xor
adc
sarl
ret
ret
jno
xchg
lods
inc
mov
or
xor
xlat
ja
mov
ret
fcmovnb
add
adc
mov
divb
test
mov
sarb
js
and
stc
loopne
cmp
dec
pop
jne
test
sbbl
xor
stc
pusha
daa
xchg
xchg
notb
aas
sub
mov
inc
inc
lods
fadd
or
daa
pop
pop
inc
mov
push
lds
cmpsl
jecxz
enter
mov
insl
xor
dec
loopne
pop
aam
or
daa
in
pop
dec
out
push
jae
push
add
dec
mov
leave
div
jg
xlat
inc
fisttps
dec
jmp
dec
arpl
jle
pop
pop
pusha
jno
inc
pusha
loope
out
add
sahf
push
push
movsb
mov
popa
push
sbb
add
repnz
aaa
iret
jbe
push
cwtl
push
mov
and
mov
out
daa
daa
sub
ss
jge
jg
fs
ja
std
jecxz
outsb
mov
mov
jg
cmp
xchg
mov
and
loop
icebp
mov
sub
addb
cmp
fadd
jae
enter
outsb
scas
or
shrb
cmpsb
lret
xchg
int3
fwait
repz
mov
push
push
mov
cmc
jb
xor
mov
pop
pop
arpl
push
stc
cmc
mov
xchg
in
call
xlat
clc
xchg
mov
inc
shr
mov
imul
arpl
and
andb
jo
xchg
stc
jl
jmp
roll
or
dec
negl
ret
adc
cmpsb
fisubl
sbbl
iret
inc
or
xchg
addr16
and
mov
mov
sbb
jnp
dec
jge
in
lcall
cli
test
scas
sub
ja
mov
repnz
jb
mov
movsb
das
std
push
int3
inc
iret
adc
dec
scas
or
ljmp
and
cmc
sbb
rcr
mov
inc
or
dec
adc
outsb
sub
repnz
dec
in
mov
xlat
push
imul
sahf
push
add
mov
xor
popf
pop
int3
negl
adc
cmp
sub
lds
xchg
daa
add
mov
decl
enter
out
xor
jge
pop
jg
rolb
fidivrl
mov
stc
adc
sub
loopne
mov
pop
cmp
mov
xchg
pushf
mov
fdivrs
or
icebp
enter
cltd
ljmp
cmp
jmp
cmp
int3
pop
xorl
push
sbb
cwtl
fisubrs
jo
cld
add
add
mov
inc
xor
ss
fldl
pop
push
out
add
les
push
and
ret
dec
and
sub
jge
push
dec
out
inc
rcrb
dec
adc
pop
out
push
decb
jnp
scas
inc
xor
stos
mov
xchg
sbb
pmulhuw
mov
pushl
sub
pxor
add
xor
pop
mov
into
dec
fdivr
bound
mov
fwait
cmpl
pop
das
or
mov
imul
inc
mov
das
inc
bound
push
lcall
push
insb
push
push
adc
or
lret
loope
push
sbb
cmp
push
fsts
into
sub
pop
or
sahf
xchg
stos
and
pop
jns
lods
or
or
jb
mov
push
addr16
xchg
and
gs
cld
sbb
loope
pop
cltd
push
xorb
clc
xor
imul
cmp
jo
outsb
pop
mov
std
fistpll
inc
add
sub
fbld
js
outsb
jnp
inc
sbb
xor
and
cmp
test
inc
or
jl
and
pop
xchg
int
jns
les
pop
lcall
push
jnp
lds
test
pop
lods
fcmovnb
mov
add
or
mov
inc
sbb
sbb
jae
movsl
mov
cmp
jmp
push
mov
xor
daa
dec
bound
jnp
and
xor
imul
fildl
cld
mov
int
aas
shrb
push
out
out
mov
mov
xchg
or
dec
cwtl
test
cmpsb
push
test
negb
out
ret
dec
ret
into
fisttpll
repnz
xchg
xchg
inc
scas
dec
cmc
and
sti
xor
push
mov
cwtl
and
mov
imul
popf
xchg
cmp
xor
mov
adc
dec
leave
and
into
mov
pop
adc
dec
popf
lods
inc
push
jg
push
sub
and
cmp
push
adc
mov
and
cmp
je
dec
es
and
and
aad
xchg
mov
sti
test
mov
iret
xchg
or
insl
insl
push
mov
xchg
sub
push
scas
jl
stos
push
inc
dec
add
ds
mov
data16
pusha
fmuls
adc
mov
mov
lret
dec
pop
pop
sbb
sbb
adc
push
repnz
jb
mov
inc
push
add
lea
jge
shlb
jnp
sbb
mov
pop
int3
imul
stos
in
sbb
mov
es
cmp
orb
je
mov
imul
ret
or
mov
add
stos
cld
scas
xchg
mov
cmpsl
int3
in
cmp
adc
scas
sti
lods
cld
dec
sti
repnz
and
or
ret
int
lods
repz
in
outsl
xchg
adc
add
pop
push
fsubs
cmp
mov
cmpsl
adc
sbb
push
je
stos
movsl
adc
jns
in
and
loopne
xor
outsb
dec
icebp
or
loopne
xchg
mov
add
adc
fwait
iret
xor
or
jno
nop
cmpsl
sbb
jne
mov
shll
pop
jp
push
mov
fcomp
xor
fnstcw
out
xor
dec
rolb
pop
mov
scas
inc
push
jmp
push
sub
loope
mov
cmp
dec
fwait
je
shrb
insl
js
jo
xor
outsb
inc
inc
or
jle
iret
jecxz
neg
mov
jge
or
mov
hlt
lds
mov
shlb
icebp
mov
xlat
inc
lock
jnp
pop
adc
adc
sub
testl
mov
or
das
les
hlt
or
lds
xchg
add
mov
repz
lcall
xchg
pop
stc
lea
sub
inc
ss
icebp
adc
xor
pushf
inc
mov
jle
arpl
sub
testl
les
fs
push
push
negb
sbb
enter
lods
test
out
fsubrs
fldenv
lret
sti
sbb
add
pusha
cmp
sbb
jb
or
addl
dec
xor
mov
in
outsb
dec
cwtl
add
jecxz
jle
pop
mov
enter
push
cwtl
cltd
out
fs
mov
fwait
or
or
jnp
xchg
push
shll
sub
xchg
cwtl
push
in
bound
sti
sbb
adc
sbb
data16
iret
xchg
sbb
ss
jg
push
ret
push
mov
cs
jmp
and
cmpsb
movsl
mov
dec
test
loopne
xor
mov
out
cli
inc
sub
jnp
ret
mov
jl
sbb
mov
ss
addr16
cmc
xchg
pop
stc
test
dec
sti
xchg
push
xor
adc
fnstenv
data16
addr16
fcomp
out
std
jns
mov
cmp
repnz
sbb
mov
sbb
daa
cwtl
imul
es
xchg
es
dec
cmp
sti
arpl
inc
stos
mov
pop
or
inc
dec
sarb
cli
mov
loop
test
out
sar
xor
ja
mov
out
mov
inc
jp
daa
adc
cmp
push
jne
xchg
pop
xor
inc
sbb
or
in
add
test
pop
adc
aaa
roll
lret
jl
ss
rcl
mov
adcb
xchg
sbb
fs
and
mov
jp
inc
cmp
push
mov
aad
dec
imul
sahf
in
cwtl
ljmp
fildl
int
and
sbb
call
add
cmp
push
or
xor
rcrl
xor
ljmp
aam
fwait
mov
repnz
in
in
cltd
adc
mov
xchg
add
cmpsb
xor
mov
inc
in
pop
das
jp
push
lds
xchg
or
mov
pop
fxtract
jecxz
or
sbb
dec
jmp
inc
sbb
mov
lahf
xchg
je
in
in
inc
adc
or
inc
in
pop
outsb
aad
jge
and
jae
cwtl
mov
xchg
cmp
jae
test
outsb
fisttpll
pop
test
andl
ret
or
insb
xor
out
inc
movsl
sbb
xor
dec
cmp
popa
jns
repnz
xchg
mov
push
mov
jg
ja
data16
add
push
inc
xchg
xor
xchg
movsl
stc
in
lcall
icebp
dec
dec
lock
cmp
xchg
pop
ds
mov
dec
push
nop
cmp
dec
mov
jae
push
mov
std
out
andl
int3
xchg
dec
jmp
jecxz
sbb
mov
outsb
xchg
xchg
cs
jmp
imul
cmp
fstpt
pop
insb
mov
xlat
stos
cld
js
cmp
add
lods
fists
cmpsb
cmp
add
jo
outsb
addr16
aad
jbe
ljmp
test
fistl
into
jb
das
fs
xchg
jmp
mov
mov
pop
pop
pop
add
pop
movsb
lcall
and
cli
ror
stc
sub
inc
pop
mov
push
test
or
add
scas
push
stos
in
cs
pop
mov
push
fxtract
cmp
mov
jbe
mov
xchg
lods
or
inc
fwait
mov
xchg
loop
inc
cmp
rorb
test
add
add
inc
jb
and
mov
mov
jo
push
idiv
jl
pop
scas
fnstcw
cld
in
push
cmp
adc
dec
test
xchg
adc
mov
test
cmp
inc
xchg
mov
dec
pop
ss
mov
addl
mov
sbb
popf
insb
dec
sub
les
push
popa
sbb
fcoms
jb
push
frstor
mov
push
dec
xchg
clc
or
lods
sbb
dec
ret
int3
mov
test
aad
aaa
fcmovbe
pop
aaa
pushf
int3
es
sbb
adc
add
call
cmpsl
orb
cmpsl
popa
sub
into
in
or
sbb
inc
int
dec
mov
into
ja
xor
fwait
in
xor
xlat
adc
inc
xchg
lods
pop
rcll
out
mov
lcall
mov
add
or
cmp
sahf
dec
sbb
das
or
sub
xchg
jno
outsb
push
jnp
ret
enter
add
push
dec
add
notb
fucomp
lock
xlat
add
loop
push
inc
push
xchg
rcrb
gs
adc
divl
adcl
push
gs
es
je
sti
out
in
pop
mov
xchg
sahf
ds
ret
pusha
jo
add
mov
js
mov
jo
dec
pop
rcr
xchg
sub
imul
cmpsl
cmpsl
and
movb
dec
lcall
fincstp
pop
adc
in
pop
shl
sub
out
sbb
mov
sub
inc
push
mov
and
fmul
test
fmull
orb
testb
int3
dec
subb
js
sub
cmovne
lahf
mov
les
test
mov
jns
scas
jbe
sub
inc
sbb
add
cmp
xchg
ret
repnz
adcb
stos
sahf
fcoms
jb
inc
cmpsb
addr16
outsl
dec
ss
jg
xchg
outsb
push
out
jae
add
inc
hlt
xchg
cs
mov
xor
mov
or
sbbb
imul
adc
pop
cltd
push
push
flds
mov
outsl
fldcw
cltd
test
scas
addr16
cwtl
inc
loop,pn
sub
int3
btsl
lea
and
call
adc
push
cwtl
divb
outsb
clc
mov
push
into
incb
xchg
in
adcb
test
ret
mov
xor
adc
call
jnp
js
pop
jle
xchg
ftst
addb
das
negl
add
add
movsl
cmc
out
cmc
pop
int
dec
mov
iret
inc
shll
xor
es
push
dec
ficompl
inc
sub
mov
adc
js
ss
xchg
and
repnz
ds
pop
loopne,pn
out
enter
sbb
into
mov
test
call
inc
out
stos
mov
lret
add
jb
xor
adc
rcrl
add
dec
aaa
mov
aam
push
push
outsl
jno
xchg
mov
mov
mov
nop
jnp
pop
adc
pop
push
pop
xlat
push
inc
add
xchg
test
cmp
push
scas
jecxz
shr
jg
push
lods
scas
fwait
xor
jne
adc
stos
sub
sub
test
into
jmp
decb
aam
lahf
mov
push
popf
movsl
sub
jmp
mov
sub
xlat
mov
icebp
dec
js
push
dec
test
xchg
add
ja
pop
mov
push
test
or
incl
stos
lods
dec
mov
mov
cli
in
repz
lret
ss
jbe
jne
aad
xor
icebp
mov
dec
sub
fisttps
lods
testl
add
cmp
out
adc
ret
xchg
jbe
stos
cld
repnz
mov
push
mov
or
xchg
gs
fldt
mov
shl
pop
nop
cli
fcoms
lds
dec
push
sub
loope
mov
cmp
out
jge
pop
testb
jl
clc
xor
test
dec
cmp
mov
fwait
pushf
into
or
and
or
or
xchg
adc
xchg
int3
sub
cmp
ja
sbb
pop
in
bnd
and
jb
or
test
add
mov
arpl
sub
cmp
repz
inc
mov
xchg
mov
loope
idivb
and
mov
inc
push
mov
lret
mov
push
jl
cltd
lcall
sbb
push
fnstenv
fucomip
push
jmp
or
fildl
pop
sahf
fsts
leave
jl
in
cwtl
pushf
ss
mov
cmp
testb
pusha
and
fs
jg
sbb
sbb
jmp
out
or
jae
mov
mov
out
leave
shll
or
mov
pop
xchg
pop
gs
shrl
jmp
cmp
xlat
xorb
popf
xchg
shll
push
mov
iret
int
jno
cs
xchg
pop
sub
out
jo
rcrb
add
pop
sub
cli
sub
sub
cmpsl
mov
mov
sarl
daa
rclb
push
iret
out
scas
cs
icebp
or
insb
and
mov
bound
dec
scas
dec
lret
sti
mov
mov
leave
add
imul
in
movsb
inc
rclb
jge
sbb
xor
push
test
inc
add
stos
adc
push
push
push
and
ja
pusha
xchg
pusha
fucomip
adc
jg
jo,pt
and
add
shll
mov
dec
in
inc
dec
scas
inc
roll
inc
sbb
pop
dec
in
rcr
test
pop
sbb
jge
hlt
xor
mov
add
cwtl
xchg
test
decb
mov
or
sub
push
mov
push
adc
movsb
jbe
out
push
mov
mov
jae
fstl
outsl
xchg
push
or
in
jecxz
movswl
jb
sbb
icebp
adc
int
cli
and
jne
ja
push
or
cmc
add
mov
ja
hlt
clc
pop
sarb
jmp
xor
dec
sbb
lahf
add
pop
scas
in
fwait
in
adc
add
gs
fwait
shl
and
push
je
and
ljmp
mov
mov
xchg
into
les
movsb
jge
jo
pop
pop
lcall
jecxz
xor
inc
mov
xchg
loopne
and
fmulp
add
test
sub
test
pop
pushf
mov
jmp
xchg
dec
inc
mov
mov
lcall
pop
mov
sub
add
xlat
je
dec
add
cmp
flds
push
movsb
into
inc
ja
daa
int
push
add
out
cmpsb
sahf
lcall
lds
sub
sti
inc
clc
mov
fwait
add
and
popaw
addr16
shl
fisubrs
sub
xchg
loop
loop
enter
jnp
sbb
dec
push
xor
mov
add
push
push
pop
fnstcw
push
adc
mov
movsb
repnz
inc
pop
dec
movsl
jg
jne
repnz
dec
and
ret
cwtl
jl
pop
or
les
cltd
add
mov
push
cs
push
mov
dec
push
pop
into
sbb
inc
cld
xor
cmp
mov
inc
sub
jl
jns
push
mov
aaa
mov
sbb
xchg
inc
cmp
stos
xor
jae
and
and
adc
popf
hlt
adc
cmpsl
sub
fnstenv
and
les
adcb
xor
dec
sub
daa
xchg
icebp
cmp
mov
dec
cmpsl
push
loope
xor
mov
mov
aad
push
out
lahf
jmp
outsl
jecxz
dec
pop
xchg
push
jae
hlt
inc
push
ds
stos
decb
aas
decb
pusha
inc
lock
push
mov
mov
fcmovu
xchg
cmpl
jae
rorl
cmp
popl
leave
cld
mov
or
dec
cmp
mov
push
jns
or
sahf
js
jge
aaa
xchg
sti
into
rcrl
ret
andb
xor
popf
or
cmp
xchg
mov
mov
in
dec
lock
adcb
ja
ja
enter
movsb
bound
ret
sbb
pop
jo,pt
faddp
jb
sub
iret
add
or
mov
mov
mov
mov
popf
cltd
loop
and
push
ja
fwait
or
cmp
aad
and
cmpps
mov
sbbl
jmp
pop
xor
clc
clc
sub
sbbb
jecxz
pop
xchg
lea
outsb
cmp
jbe
stc
test
mov
dec
cli
mov
pop
push
jbe
in
movsb
outsb
inc
mov
jae
mov
mov
cmp
xlat
and
jns
aad
or
jg
add
ret
xchg
aas
scas
sbb
loope
iret
mov
fistpl
jb
imull
sub
idivb
xor
mov
clc
sbb
push
fcoml
jne
mov
jecxz
das
pusha
loopne
cmp
rorb
arpl
inc
sti
inc
repnz
xor
xor
sbb
and
enter
jp
sbb
les
mull
mov
and
xor
push
jmp
fcmovne
mov
cmc
mov
pop
add
dec
pop
push
out
jo
testl
dec
addr16
xchg
imul
mov
clc
dec
sbb
jl
fnstcw
test
adc
int
call
xchg
cltd
and
mov
and
imul
mov
fdiv
popf
hlt
and
incl
call
dec
adc
sbb
das
mov
pusha
pop
push
out
mov
pop
test
adc
sub
loop
cmpsb
outsl
inc
jns
mov
adc
subb
mov
sub
int
clc
pop
mov
dec
inc
inc
subl
jge
pop
dec
jo
adc
repnz
dec
xlat
cmc
push
cmpl
mov
push
jle
test
mov
push
push
mov
popf
add
icebp
jmp
cs
pop
fsts
cltd
les
dec
jo
push
les
xchg
cmp
pusha
mov
push
push
and
out
sti
call
addr16
add
ret
ds
push
sysexit
xchg
pop
mov
mov
xchg
fcoms
scas
scas
outsl
gs
add
dec
aaa
jbe
popa
test
jnp
cmp
xlat
das
push
cmp
cmpsl
in
xchg
je
mov
clc
stos
add
stc
pop
iret
iret
mov
xlat
hlt
movsl
in
mov
outsb
movl
adc
in
clc
movsl
dec
sti
test
sub
or
cli
dec
sbb
fidivrs
loope
mov
xchg
popf
neg
lret
imul
sbb
push
fmul
push
into
iret
jns
push
leave
inc
outsb
xchg
or
jb
in
clc
imul
into
into
mov
out
xor
rolb
xchg
fs
clc
jae
push
insl
xchg
cmc
hlt
jg
fnsave
jb
cmp
pop
dec
enter
xchg
mov
sahf
push
mov
add
aaa
cmp
sbb
pop
jo
push
int3
cmp
pushf
mov
mov
mov
outsl
movsb
xchg
pop
push
jmp
inc
insb
test
in
jnp
xor
cli
aas
or
dec
ds
testb
push
pop
inc
repz
adc
xor
cmc
mov
add
add
fldl
popf
jne
pop
jbe
xchg
popa
icebp
aaa
push
lock
jle
inc
pop
rcrb
and
lds
out
push
test
add
add
into
cmp
cmp
lcall
jbe
lods
enter
rcrl
pop
inc
sbb
mov
mov
inc
adc
scas
into
sbb
inc
push
or
mov
dec
gs
or
pop
dec
inc
in
sti
andl
cmp
pushf
cmpsl
scas
cwtl
stos
jmp
xor
mov
xchg
and
mov
mov
mov
or
xor
clc
mov
nop
aam
dec
mov
or
in
mov
dec
test
pushf
fidivrs
mov
mov
adc
push
orl
nop
pushf
pop
mov
data16
js
nop
fs
fimuls
sbb
ljmp
push
std
cmp
xor
mov
mov
les
mov
push
cmp
push
nop
out
out
mov
dec
movsb
test
shll
mov
aam
lods
mov
out
fsubrs
cwtl
cwtl
xchg
int
lret
mov
dec
jae
dec
je
add
call
bound
dec
adc
xor
aaa
cli
call
mov
scas
out
mov
adc
in
mov
negb
popa
push
bound
das
add
push
add
inc
jno
add
sub
ds
dec
push
imul
push
jmp
add
add
and
add
mov
cmp
shrb
push
lods
xor
stos
mov
leave
int
mov
mov
dec
clc
dec
stc
add
test
repz
shlb
and
f2xm1
mov
mov
iret
mov
mov
int
stos
cltd
or
xchg
jnp
inc
mov
popa
shr
lods
es
dec
lret
mov
iret
ds
or
dec
mov
mov
es
negl
mov
js
scas
lret
movsl
push
lret
dec
repz
in
aaa
popa
add
jg
int3
xchg
pop
pop
sti
xchg
pop
sub
mov
push
and
jle
bound
lahf
inc
mov
mov
outsb
jo
cmp
test
and
pop
push
aam
jo
jg
push
jge
dec
sub
mov
pop
repz
nop
scas
jne
fistpl
fmuls
sbb
fs
and
scas
push
scas
sbbb
pop
lea
ljmp
mov
cli
pushf
aam
push
cmp
scas
jp
andb
cmp
icebp
sbb
js
and
jb
movsl
inc
jge
push
aas
and
std
or
cmp
pop
pop
inc
sahf
mov
insl
push
stc
jae
rorl
in
lods
mov
jecxz
dec
fwait
iret
inc
shll
dec
pop
test
dec
aas
add
loopne
jecxz
mov
lahf
inc
add
jp
nop
arpl
jmp
outsl
data16
sub
inc
pop
jge
enter
inc
mov
shlb
dec
pop
cli
adc
mov
push
mov
outsb
or
inc
sahf
mov
insb
jge
add
jo
and
fnstcw
into
push
out
repnz
std
jno
pop
xorb
fldcw
hlt
or
sub
mov
stc
orb
push
clc
xchg
adc
fisubs
cmp
fsubrs
test
add
push
adc
push
out
xlat
ss
jo
push
shrb
push
cmp
inc
int
mov
mov
mov
adc
mov
and
es
daa
in
mov
ficomps
in
dec
lods
lea
pop
in
cmp
out
xchg
je
xor
xchg
inc
xchg
stos
pop
mov
inc
inc
fisubs
mov
aas
mov
test
sbb
lcall
dec
jle
movb
leave
dec
mov
lds
negl
sarl
pop
mov
mov
cli
and
negb
fisttps
mov
cltd
mov
inc
add
pop
in
xor
in
ljmp
roll
mov
pop
stos
fwait
notl
add
stos
repnz
pop
lods
out
and
in
push
shrl
je
lcall
or
push
scas
pop
out
sbb
push
mov
cmpsb
ljmp
jl
pop
test
mov
or
jns
popf
dec
push
test
scas
mov
aam
cmp
jp
in
testl
repz
popa
test
dec
ljmp
add
movb
addb
cmp
cwtl
xchg
push
adc
adc
push
pop
ret
xor
sub
outsl
cmpsb
xor
mov
xor
hlt
in
xor
or
push
dec
jne
insb
outsl
mov
xchg
lods
add
test
int
insl
aaa
cmp
int
scas
outsl
jmp
adc
xor
cltd
scas
mov
jecxz
sbb
mov
inc
mov
jge
cs
test
xchg
fisttps
push
sub
cli
mov
dec
xchg
or
jnp
das
icebp
incb
xchg
mov
lahf
jnp
lea
movsb
or
jecxz
cmpsb
enter
and
jecxz
or
push
clc
xchg
pop
out
add
push
mov
push
daa
or
pusha
shll
flds
add
and
and
lods
adc
insl
cmp
jg
cmpsb
in
pop
insl
jmp
jne
dec
ret
fwait
incl
jae
mov
mov
out
roll
lock
push
add
xchg
xor
sbb
add
cltd
mov
in
icebp
aas
jae
lock
cltd
xchg
xchg
cmpsb
lea
sbb
movsb
ja
sub
and
arpl
and
clts
fs
lock
push
mov
dec
xor
adc
mov
enter
aas
testl
repz
std
scas
xchg
pop
adc
xchg
dec
push
pop
in
andl
fsubs
test
cmp
push
jmp
pop
hlt
and
daa
inc
and
mov
fnstenv
inc
pop
push
cmp
ljmp
mov
mov
xor
jle
jnp
mov
rcrb
or
sbb
push
ret
cmpsl
pop
call
xor
lock
xor
sub
jb
ds
jae
add
add
cmc
mov
lock
jo
push
dec
sbb
jo
ss
cmc
xchg
mov
sub
outsl
inc
shll
orb
xor
cmp
push
test
push
cld
dec
outsl
in
mov
mov
and
popa
dec
ret
es
test
push
xchg
add
sbb
ss
scas
xor
fsub
cwtl
jge
sbb
push
dec
pop
sub
fstl
fimuls
dec
sbb
insl
pop
mov
xor
les
push
adc
jl
xor
add
stos
pop
mov
movsb
mov
das
mov
inc
push
sub
loopne
pop
mov
jle
notl
jae
cwtl
inc
mov
mov
test
xchg
and
add
pop
sub
push
mov
mov
cmp
insl
cmp
cmp
leave
insb
cmp
or
cmp
cmp
lock
mov
stos
shrl
inc
xchg
lods
or
test
xor
dec
sarb
sbb
xor
mov
loope
mov
out
sbb
and
mov
mov
xor
ja
xor
in
stos
pop
xor
popa
outsb
icebp
scas
inc
and
dec
mov
xchg
mov
xchg
clc
movsl
xchg
mov
cmp
rcrl
inc
cld
and
xor
int3
dec
mov
xchg
jnp
subl
or
push
pop
int3
adc
scas
pushw
sub
pop
inc
push
addps
out
das
js
inc
mov
ss
or
and
and
dec
popf
cmp
rol
push
mov
lahf
cwtl
mov
dec
fimull
lock
cmp
mov
js
fbstp
dec
inc
mov
mov
dec
push
inc
ljmp
dec
add
outsb
arpl
popa
and
mov
pop
cmpsl
ja
xchg
jnp
das
inc
clc
sbb
mov
nop
push
add
adc
adc
outsl
or
rcl
subl
lods
sub
inc
push
push
arpl
imul
mov
pushf
xchg
add
mov
xchg
add
mov
popf
outsl
rcrb
icebp
dec
xchg
adc
int3
ja
pop
ss
aas
popf
xor
out
js
jp
lds
into
or
mov
ja
cmc
jns
mov
and
ret
push
mov
xchg
fcmovu
xor
jbe
imul
ja
stos
xchg
jns
call
xchg
out
xor
or
add
or
stos
loope
adc
push
push
sub
popa
rcrl
into
mov
fsubrp
inc
adc
push
repnz
push
enter
cmpsb
add
xor
sub
push
nop
adc
sarl
fimuls
pop
call
inc
imul
data16
inc
outsb
adc
adc
xchg
and
insl
inc
test
ljmp
push
lret
cmp
sarb
negb
cmp
mov
xchg
xchg
popf
pop
mov
or
repnz
dec
add
movb
in
lods
sbb
pop
sti
popl
mov
cmp
add
mov
sahf
shl
mov
xchg
cs
push
and
pushf
decb
jmp
mov
mov
popf
fstp
ret
xchg
adcl
in
adc
int
cmpsb
test
and
mov
inc
and
jge
mov
popf
je
sbb
rcrb
out
jecxz
mov
outsl
daa
or
and
add
mov
sub
inc
dec
mov
dec
jbe
in
jns
addr16
or
imul
lret
lahf
jb,pt
push
imul
push
add
cmp
icebp
mov
jmp
inc
mov
rolb
lods
cmp
mov
in
adc
cmp
add
and
inc
fcompl
xchg
enter
xor
mov
stos
push
sub
icebp
cmp
pop
iret
or
ret
add
sbb
mov
sbb
test
push
inc
inc
fnsave
pop
push
into
fists
dec
dec
jp
aas
adc
and
push
pop
add
test
or
in
xchg
or
sbbl
mov
and
inc
jae
add
sub
pop
fiadds
out
int
mov
std
movsl
lods
negl
push
outsl
les
int3
leave
jnp
mov
pop
jno
inc
sti
dec
jp
fxch
pop
stos
mov
bound
add
xor
clc
rcrl
shrl
mov
icebp
pop
mov
scas
xchg
xlat
xchg
mov
adc
mov
push
gs
fdivs
ss
adc
mov
je
mov
xchg
xor
xchg
jge
cmp
rclb
rcll
dec
out
enter
jne
fdivrl
xor
int
rcll
mov
arpl
jge
fisubs
jne
mov
xchg
adc
jns
sbb
cmp
add
dec
mov
out
sti
nop
jnp
sub
outsb
push
dec
repz
push
jp
pop
adc
leave
ret
mov
sub
and
adc
xor
lds
mov
imul
and
fildll
pop
adcb
mov
out
xchg
dec
dec
fwait
dec
cmp
fistps
mov
enter
xor
add
cmpsb
push
hlt
mov
push
pop
inc
dec
mov
aad
fimuls
pop
sti
add
jecxz
dec
xchg
out
add
xchg
dec
sbb
sub
es
daa
sti
in
or
pop
mov
mov
ds
xlat
lods
test
cld
les
cmp
and
xor
popf
insb
pop
and
or
movsl
and
popa
mov
sbb
adc
pop
daa
rorl
sti
loope
int
xchg
scas
lea
test
je
mov
mulb
shlb
mov
dec
clc
sub
les
xor
movb
stc
pushl
jnp
inc
pop
in
inc
iret
or
lods
cs
imul
push
xchg
pop
addr16
lcall
push
push
je
scas
outsl
xor
mov
loopne
push
mov
lahf
pop
rcrb
pop
sub
and
pushf
repz
repz
lret
pop
xor
mov
out
shlb
mov
mov
mov
push
sbb
or
mov
sub
subps
stos
sub
sbb
jne
call
in
test
cmp
mov
test
xchg
ffree
insb
push
cmp
scas
hlt
clc
ljmp
iret
mov
mov
mov
cmp
icebp
pop
dec
mov
outsl
xor
push
xor
cmp
in
imul
and
sub
aaa
and
pop
je
add
mov
or
out
inc
adc
mov
jp
xchg
in
sbb
cli
mov
ds
jmp
mov
aad
in
insl
push
icebp
mov
mov
sbb
ja
jbe
and
imul
pop
fidivl
mov
out
xor
or
test
scas
lds
fldt
push
or
pop
inc
mov
loop
cmp
int
into
jmp
arpl
sbb
into
lods
pop
inc
xor
jbe
sbb
ss
add
pop
push
mov
push
or
mov
push
fldenv
adc
pop
mov
js
outsl
lahf
jns
mov
cmc
ja
hlt
stos
lahf
jmp
jmp
mov
pop
cmp
dec
ds
or
iret
mov
and
insl
dec
ret
loopne
push
movsl
adc
jge
jge
stc
loopne
push
mov
dec
mov
testb
cs
adc
push
rcll
cmp
insl
int3
mov
nop
fmull
mov
mov
int3
sahf
add
out
adc
cli
stos
out
and
ss
mov
xrelease
inc
scas
lods
andb
push
adc
sahf
orl
mov
imul
pop
ds
mov
xchg
xchg
or
leave
fdivrs
dec
out
push
pop
lods
clc
call
pop
cmp
sbb
imul
js
xorl
cli
xchg
std
jns
or
or
mov
adc
icebp
out
pop
lea
lock
cld
sub
jo
cltd
sub
int
cli
aad
rolb
mov
push
out
daa
pop
mov
push
add
out
adc
iret
inc
cli
xchg
dec
negb
jecxz
and
push
cmp
xchg
cltd
xor
xor
fdivl
pop
std
dec
xchg
xchg
dec
leave
add
leave
sbb
fnstcw
sub
cmpsl
push
sub
jnp
adc
pusha
pop
es
xchg
les
int
lret
or
lret
add
dec
mov
in
push
jne
xchg
pop
pop
aaa
xor
cmp
popf
cmc
push
and
add
mov
xchg
mov
jle
sbb
add
push
cmpsl
push
pop
popw
add
addl
or
cmpsl
sub
inc
xchg
sbb
in
mov
dec
push
jne
into
cmpsl
lret
xchg
xor
ja
mov
add
sub
adc
sbb
and
adc
sahf
fisubrl
ret
mov
push
rclb
xchg
sbb
sub
adc
ss
ja
sbbl
sub
sbb
mov
sub
xchg
je
cmp
push
or
adc
xlat
stc
int3
mov
pop
mov
imul
loopne
mov
lahf
shll
cwtl
aam
push
aaa
mov
insb
repnz
push
fmuls
adcl
jge
ret
inc
mov
inc
fs
mov
xchg
xor
jmp
cmpsl
mov
mov
sahf
dec
push
adcb
xor
int3
cli
xchg
xor
andb
push
mov
stos
fisubs
and
repz
mov
test
inc
enter
cmpsl
std
dec
out
std
inc
fcomp
adc
leave
xlat
fmuls
cld
jg
hlt
mov
data16
ds
jg
adc
aad
sub
and
in
mov
jp
xor
push
mov
adcb
movl
test
xor
imul
adcl
aam
mov
cmpb
aaa
rolb
pushf
xor
cli
leave
push
ret
icebp
aaa
or
pop
jle
inc
repnz
rcll
xor
add
mov
loope
jmp
push
or
in
addb
std
xor
cmp
push
jl
sti
push
movsl
mov
add
mov
shll
push
add
dec
repnz
imulb
or
xchg
mov
or
adc
mov
test
add
adc
dec
pop
test
jecxz
in
inc
loopne
push
scas
mov
push
push
test
rcll
inc
test
mov
xchg
and
fists
out
movsb
je
icebp
ljmp
daa
mov
in
pop
dec
insl
sahf
and
xchg
mov
xchg
sub
mov
inc
push
imul
lcall
rol
dec
sub
xchg
mov
push
add
movsb
sti
cmp
daa
test
mov
ficompl
jnp
repnz
or
adc
pushf
fdivs
or
mov
mov
scas
mov
mov
jmp
mov
pop
sti
sbbl
test
xchg
push
xor
jmp
je
mov
scas
aas
repz
and
mov
cwtl
shl
jp
cli
pop
mov
es
rcl
mov
adc
dec
push
xchg
push
pushf
in
nop
fdivr
add
fcoms
in
xchg
lock
push
or
pop
xchg
adc
aas
mov
mov
shll
jmp
sub
push
adcl
mov
or
push
loope
mov
xor
push
mov
movsl
pop
sbb
mov
and
mov
cmpsb
aam
xchg
imul
mov
cmp
inc
fldcw
clc
enter
pop
jecxz
je
and
xchg
mov
es
dec
inc
xchg
repz
mov
lahf
jp
jcxz
xor
mov
cli
ljmp
cmp
dec
mov
lods
scas
imul
pop
roll
xchg
scas
cmp
mov
sbb
stos
cmp
xchg
imul
mov
jb
adc
lcall
push
jge
mov
or
sbb
inc
imul
xor
xor
insl
inc
push
stos
lahf
cwtl
cmpsl
or
xchg
dec
fcmovbe
lahf
insl
pop
sar
sarl
push
std
clc
or
adc
loop
ret
dec
enter
cmc
notl
fcmovu
daa
or
aaa
stc
mov
and
xchg
cld
add
add
xchg
loop
pop
sub
xchg
jno
mov
lds
xchg
inc
scas
inc
mov
stos
mov
sbb
xor
je
jo
stos
and
mov
cli
in
pushf
and
xchg
inc
imul
sub
adc
pop
add
in
mov
add
data16
push
add
or
ds
sbb
insb
xlat
sti
rorb
push
lea
xor
iret
mov
or
mov
add
sub
stos
cli
mov
stos
mov
dec
incl
out
js
dec
adc
adc
loop
stos
mov
notl
sub
lds
add
notl
xchg
mov
mov
sbb
js
int
add
push
std
xor
xchg
mov
xchg
iret
shll
pushf
rclb
push
stos
jp
sub
adc
insb
pop
sub
inc
lock
cmc
dec
xchg
in
test
mov
push
jnp
insl
movsl
pop
es
mov
xor
fdiv
leave
mov
pop
jp
mov
fisubrs
cmpsb
fwait
push
clc
sbb
mov
sub
sub
jecxz
jle
shrb
xchg
das
mov
mov
and
int3
mov
stc
mov
pop
cmp
cli
scas
sub
xchg
das
fwait
out
pop
jbe
jecxz
sub
fwait
stc
mov
jge
iret
aaa
mov
jecxz
push
mov
add
xchg
out
loopne
insl
lods
fnsave
or
aad
in
xchg
xchg
and
jg,pn
adc
lock
rclb
aam
jecxz
or
pop
xchg
xchg
mov
fadds
pop
ds
jl
add
js
jl
jnp
fldt
cmp
movsb
add
pop
or
int3
in
adc
xor
addb
push
jnp
mov
cmp
test
dec
lock
scas
outsb
mov
js
inc
mov
xor
mov
fimuls
pushf
push
sub
dec
sti
fwait
mov
inc
jnp
lods
mov
pusha
jp
add
notb
test
mov
fs
and
aad
lcall
adcl
fiadds
and
lret
cmp
inc
pop
popa
mov
mov
jp
mov
mov
sbb
push
inc
sbb
lret
test
mov
sub
dec
aam
iret
lret
dec
pop
mov
rcrb
and
pop
and
inc
stos
leave
lods
or
xchg
cltd
fnstsw
adc
cmpsb
xchg
inc
xor
fsub
fs
dec
sub
jecxz
filds
ret
imul
leave
movd
cmc
push
nop
movsb
push
loopne
pop
mov
jp
cli
inc
hlt
lds
push
dec
fs
sbb
jge
or
clc
fldl
dec
sub
add
mov
add
add
sub
inc
rorb
or
jmp
add
aas
sbb
xchg
fmuls
sbb
out
jge
add
sbb
mov
mov
dec
inc
bound
in
data16
add
imul
mov
xor
in
add
in
or
pop
sub
inc
es
js
inc
cmp
out
loope
shrl
pop
or
dec
cmp
xchg
mov
mov
cli
into
dec
enter
movsl
xor
xor
lea
mov
aaa
xlat
mov
sbb
pusha
mov
jge
test
sbb
push
ret
mov
push
pop
scas
hlt
movsl
adc
or
out
mov
shr
sbb
add
arpl
adc
pop
daa
dec
push
push
imul
jecxz
mov
insb
mov
addl
or
icebp
mov
pop
pop
mov
add
inc
pop
mov
gs
lcall
scas
push
jns
mov
outsl
fistps
push
cs
ret
or
popf
or
xchg
mov
add
mov
mov
sub
movsl
mov
fsts
cmpsb
mov
sub
jo
xchg
lret
cmp
cmp
xchg
mov
das
cmp
pop
sub
movsb
cwtl
jns
ja
mov
or
cmpb
outsl
test
pusha
mov
push
std
xchg
rorb
push
mov
sub
xlat
add
push
push
ljmp
lea
pop
fistpl
repnz
mov
jmp
imul
pop
xchg
fisubrl
hlt
arpl
jecxz
lea
dec
mov
insl
mov
mov
lods
subl
lcall
mov
test
out
xchg
nop
add
bound
mov
daa
inc
and
sub
pop
fucom
loope
pop
push
mov
aad
cwtl
pop
mov
mov
out
xor
fstpl
push
sbb
jp
adc
adcb
and
pushf
rorl
cs
insb
insl
mov
and
pop
filds
lcall
fs
mov
xchg
cmp
mov
jl
add
push
inc
fidivrl
ds
gs
int
data16
xchg
mov
mov
pop
adc
dec
jp
lret
dec
add
sahf
xor
clc
cld
pop
es
notl
inc
push
in
sub
in
cs
sub
pop
pusha
es
sbbl
ret
popf
mov
gs
pop
ret
pop
sub
push
data16
clc
fadd
mov
sub
cmp
xchg
lahf
xor
lea
cmp
mov
mov
int3
adc
fs
or
fstp
pop
fisttpl
pop
sbb
insb
aaa
cld
loope
sub
rcll
les
mov
lods
daa
in
inc
or
fwait
outsl
add
cmp
add
dec
mov
xlat
lcall
stos
jbe
xor
xchg
cmp
cmp
sbb
jle
aam
cmp
je
mov
ja
mov
xchg
adc
mov
push
or
insb
sub
ret
mov
nop
push
push
jnp
daa
out
xor
mov
adc
js
shl
xchg
adc
dec
hlt
and
mov
pop
add
mov
add
out
ret
cmc
xchg
les
fs
bound
call
roll
and
mov
xlat
ds
loopne
adc
cmp
push
mov
rcrb
and
insl
inc
jno
pop
mov
push
out
cmp
or
cli
mull
lock
pusha
mov
mov
test
adc
decb
and
mov
jecxz
xorl
negb
pop
fiaddl
push
fidivrl
add
cmpsb
inc
out
push
fistl
pop
stc
jg
or
sahf
or
rcl
sbbl
jmp
sub
aaa
xchg
push
cmp
cs
cmp
inc
jae
xor
addr16
stos
xchg
pop
insl
add
ds
out
fisubrs
rorb
lcall
jg
cmc
push
fwait
popf
lret
mov
adc
addb
jb
inc
aad
ret
and
jge
hlt
scas
mov
arpl
loop
rcll
ds
mov
ret
pop
xlat
mov
jno
ret
push
cmp
xor
mov
rcrb
fsub
rorb
shll
dec
out
pop
fcomp
je
sbb
xchg
dec
xchg
out
es
ds
cmp
scas
xchg
pop
add
xor
jb
and
mov
mov
ss
lret
dec
pop
and
or
popa
movsb
fnsave
mov
ret
les
pop
fcompl
adc
arpl
stos
dec
in
sub
pushf
sub
push
adcl
std
call
addl
cltd
jmp
js
out
bound
xlat
das
lods
mov
fbld
imul
and
fnstenv
pop
cmp
push
xor
pusha
sbb
shr
push
add
inc
lcall
inc
outsb
inc
imul
push
movsb
sbb
mov
push
jb
mov
arpl
sahf
cmp
pop
mov
cld
or
movsb
orl
lret
mov
or
stos
and
xor
dec
cwtl
loope
les
jg
ds
arpl
cmp
dec
xor
jae
or
jmp
pop
js
and
loope
fistpl
inc
lods
mov
sahf
mov
xor
jle
imul
sub
dec
jmp
push
mov
pop
inc
mov
bound
cmp
mov
iret
mov
mov
xor
int
or
or
arpl
xchg
sbbb
sti
mov
xor
sbb
frstor
sti
adc
mov
or
and
clc
into
cmp
push
adc
scas
add
adc
outsb
dec
or
xor
divl
jg
nop
mov
lock
cmpsl
rorl
cmp
test
inc
inc
cmp
roll
in
mov
outsl
push
das
pop
mov
nop
xor
xor
mov
or
mov
insb
pop
add
xchg
sbbb
aad
fstpt
testb
dec
push
mov
lcall
insl
push
daa
out
lock
xor
adc
lcall
enter
test
icebp
into
sarb
mov
or
outsb
cmp
mov
sub
xlat
mov
arpl
jbe
push
outsb
inc
dec
sahf
loopne
sub
jbe
jo
lret
mov
or
xor
fcoml
xlat
xchg
cli
cmp
out
icebp
mov
jo
xchg
inc
in
ret
sub
and
ljmp
fadds
cwtl
out
fcomps
bound
fildl
inc
or
sbb
or
fmul
xchg
fwait
mov
mov
sub
xchg
iret
test
bound
mov
cmp
push
jb
sub
mov
outsb
subb
adc
mov
movsb
mov
push
inc
mov
pop
rorb
mov
je
sub
jg
mov
inc
fcmovbe
aad
outsl
daa
push
pop
repz
les
jg
mov
cmpsl
jge
in
push
leave
and
and
dec
cmp
rcrb
js
out
dec
pop
out
test
push
pop
mov
aam
fsubrp
push
sbb
and
push
cmpsb
add
and
cmp
and
psrlw
adc
xlat
dec
pop
pop
loope
push
push
outsl
imul
mov
sahf
add
pop
pop
inc
xchg
mov
scas
cmp
push
aas
and
outsl
push
fwait
lret
inc
or
adc
sarl
mov
mov
and
stos
cmp
mov
enter
sub
clc
pop
mov
insl
popa
push
aam
mov
in
adc
cmp
xchg
leave
dec
xchg
jg
xchg
mov
test
or
lcall
mov
jl
cmp
dec
dec
lret
add
jge
push
mov
jg
insb
xor
imul
mov
sbb
notl
mov
sbb
rolb
cmp
sub
dec
js
inc
lods
adc
fdivrl
add
movsb
sbb
cmp
addr16
mov
or
pop
xchg
inc
xor
in
jecxz
jne
addr16
adc
adc
cmpsb
or
stos
mov
scas
bound
sub
xchg
or
rcrl
in
sbb
mov
mov
and
mov
and
push
mov
das
test
jl
ret
mov
mov
jo
and
popa
add
cld
mov
jl
incl
fisttpl
jg
jo
jge
cmpsl
test
adc
push
xchg
rcr
lahf
js
call
cmp
fwait
cmp
cmp
xchg
ss
cmp
out
mov
in
testb
cld
cmp
push
cs
js
cmpl
or
add
mov
loopne
and
ljmp
mov
lret
gs
test
rolb
mov
pop
add
mov
aad
jle
movsl
sbb
repz
xorb
dec
sti
movb
inc
and
and
cmpsl
enter
mov
xchg
mov
xchg
iret
mov
addr16
inc
or
jmp
ficoms
xor
aaa
add
cltd
mov
dec
insb
mov
cmp
inc
inc
pushf
or
push
xchg
cmc
mov
cmp
out
cld
sbb
jp
mov
xchg
sarl
jo
add
jmp
bound
sahf
jnp
cld
jl
into
push
mov
sbb
jp
sub
loopne
jg
outsb
and
xor
add
cld
std
fisubs
mov
xor
aam
and
fs
jb
bound
mov
lock
arpl
sbbb
xor
out
jbe
mov
leave
pop
call
addr16
mov
cli
sbb
jl
int3
jg
mov
cmpsb
addr16
idivb
dec
sti
or
jbe
xor
sbb
int3
dec
ds
pop
push
xchg
cmp
add
or
cli
mov
into
sbb
icebp
aas
fisttpl
adc
cmpsb
lret
hlt
andb
add
shrl
hlt
fstp
stos
std
lods
jbe
ja
inc
lret
adc
dec
in
mov
pop
rcrb
fwait
dec
pusha
mov
sub
jl
mov
in
ror
mov
stc
repnz
lret
and
repz
into
xchg
xchg
sahf
nop
mov
push
fsubrl
bound
pusha
mov
std
pop
cli
call
lock
adc
jne
je
push
cmp
pop
pusha
rorb
aad
cmpsb
cmp
inc
adc
or
adcl
in
xor
fbstp
mov
lods
mov
hlt
iret
push
das
xor
cltd
cmp
sub
inc
and
xor
sbb
mov
sbbl
das
orb
pop
inc
sti
mov
stos
imul
and
jo
cmpsl
mov
xlat
bound
bound
adc
cmp
loop
ret
xor
inc
push
mov
call
push
pop
cmp
sbb
mov
fsubrl
in
je
call
outsl
test
int3
data16
fs
lret
ljmp
idivl
pop
leave
aas
mov
loop
daa
cmp
cmp
movsl
adc
fdivs
orb
je
maxps
fisubl
inc
ljmp
andl
mov
test
movsb
push
data16
mov
or
fmul
popa
dec
sub
cli
or
adc
shlb
pushf
lds
and
pop
lds
dec
test
sbb
jp
in
out
cmp
sbb
mov
mov
fmuls
jno
lock
out
call
cmpsl
sub
int3
imull
or
sub
mov
fwait
mov
cmc
std
adc
inc
jae
adc
in
cwtl
push
incl
iret
call
add
mov
inc
or
faddl
pop
and
lret
mov
rolb
arpl
mov
repz
fsubrp
mov
in
lahf
pop
xor
dec
mov
leave
inc
cmp
mov
sbb
mov
and
ljmp
jg
fsubrl
dec
pushl
ja
xchg
lods
sbb
jns
fldcw
insb
add
inc
aad
outsb
mov
cmp
in
mov
push
aaa
lret
icebp
xor
in
rolb
aaa
stos
ja
adc
fstps
aas
adc
inc
push
jmp
xchg
xor
cmp
mov
xchg
test
push
arpl
mov
loop
js
psubb
out
mov
daa
sbb
jmp
adc
cmp
ljmp
cmp
lret
test
jno
test
push
ds
movsb
jns
mov
inc
mov
dec
ret
clc
dec
cmp
sub
daa
ljmp
inc
sub
or
mov
stc
imul
and
cltd
addl
in
add
popf
mov
das
push
js
andb
arpl
push
movsl
inc
clc
sti
mov
or
icebp
aad
inc
cltd
lahf
or
data16
cmp
mov
push
pop
daa
popf
add
push
sbb
push
mov
or
add
ret
or
cmpsb
in
shll
aam
mov
inc
std
mov
jl
ffree
mov
testl
testb
xor
mov
aad
je
inc
lock
push
mov
call
mov
aas
xlat
lock
int3
jge
data16
mov
push
daa
push
sbb
lahf
or
sub
pop
cmp
cli
mov
popa
out
push
dec
or
mov
sti
fwait
push
cmp
and
add
ja
sbb
add
mov
paddsb
push
rol
or
mov
push
rcl
mov
cmp
addr16
test
xlat
and
jo
pop
sub
sub
sub
mov
pushf
jge
cmp
sub
fwait
sub
mov
xchg
mov
mov
jbe
ja
shrl
pop
lret
or
out
jns
pop
test
out
stc
xor
dec
xchg
xor
scas
fsubp
mov
popa
je
inc
bound
into
dec
sbb
add
lea
and
fcompl
lret
dec
popf
dec
and
roll
push
push
sub
stos
mov
outsl
pop
cmpsl
ds
jo
jle
and
pop
pushf
fwait
pavgw
pop
cli
dec
ficomps
inc
insb
xchg
out
insl
ljmp
mov
or
jo
mov
mov
aaa
jecxz
es
out
sti
jb
fs
cmc
and
add
mov
mov
lods
pushf
lods
sbb
pop
stc
sarl
mov
fsubl
or
adc
fdivrl
xor
shl
data16
bnd
aaa
int
out
mov
pushf
mov
dec
xchg
hlt
lock
mov
jno
cmp
add
sbb
dec
add
loop
loope
clc
push
dec
call
pop
xchg
and
outsl
dec
rcr
adc
mov
ret
cld
enter
scas
out
mov
push
loope
cld
mov
xlat
adc
sub
iret
push
js
sub
ss
xor
and
lds
or
rorl
mov
jb
test
into
add
sub
cmp
popa
fdivr
pusha
shl
inc
and
out
inc
jnp
clc
insl
mov
out
scas
mov
mov
add
pop
je
cmp
cmp
pop
in
inc
and
aas
cmpsl
pusha
lcall
out
or
das
jg
push
dec
cmc
ret
in
sub
pop
popa
xor
push
testb
sub
mov
xor
or
or
iret
cltd
fmuls
cld
push
xor
sub
push
mov
fcomps
fs
mov
test
orl
sub
imul
lahf
and
popa
adc
sub
mov
cmp
popa
mov
cs
sbb
pop
int
out
pop
sbb
cs
sub
es
jle
lock
aam
cmpsl
pop
jbe
push
adc
cmp
cmp
in
in
xchg
dec
cmp
cmp
jb
repz
and
imull
ljmp
cmp
icebp
cmp
es
inc
push
push
mov
jne
inc
mov
les
je
add
push
sub
stc
cli
test
and
movsb
add
mov
imul
shll
inc
test
jmp
int
aam
mov
mov
jge
push
or
aad
test
mov
and
in
popf
pop
outsl
ret
fistps
cmp
fs
in
lock
lock
jl
add
stc
mov
insl
cld
sahf
movsb
jne
sub
fwait
dec
mov
mov
fisubrl
ljmp
and
sahf
in
jecxz
fisubs
loope
jg,pn
aas
mov
mov
mov
leave
adc
jnp
rol
xor
jno
mov
cmpxchg
mov
add
rclb
push
cmpsl
fwait
cmp
push
push
jle
dec
loop
pop
mov
xchg
js
mov
xchg
rcrb
out
mov
test
out
adc
pop
mov
std
nop
dec
xor
fisubs
rcll
les
fcompl
adc
subb
pushf
insl
mulb
cmp
lea
xrelease
mov
out
xor
inc
sbb
jl
popf
mov
mov
xchg
pop
imul
mov
lret
inc
mov
nop
inc
mov
push
and
fdivp
subl
sti
aad
popf
cmpsb
incb
cmpsb
gs
in
sahf
int3
inc
popa
pop
jno
orb
dec
and
add
cs
loope
push
rorb
xchg
push
mov
pop
mov
mov
outsl
testb
arpl
cmp
cmc
add
add
dec
inc
stos
decl
mov
fld
xchg
mov
pop
iret
dec
jmp
insl
scas
into
dec
shl
aas
xor
inc
sub
out
mov
inc
rcrb
sbb
pop
cmc
mov
mov
jbe
adc
sbb
call
inc
xor
fstpt
push
xchg
movsb
leave
idivl
mov
sbb
ds
mov
xor
xlat
mov
fcompl
dec
pop
xor
mov
rolb
aaa
test
fidivs
mov
daa
fmull
push
sbb
push
fidivl
xchg
in
mov
mov
sbb
push
jle
jg
sbb
pop
shll
test
gs
inc
and
sub
dec
fdivrs
ss
mov
mov
push
dec
std
pop
inc
xchg
sbb
dec
add
das
inc
or
xor
cmp
ret
jae
arpl
mov
and
pop
and
dec
mov
mov
stos
push
test
cmp
pusha
insl
jno
leave
dec
dec
pushf
xchg
cli
mov
out
mov
push
xor
or
and
rcl
ret
add
or
push
sbb
push
mov
int3
scas
cmp
pop
push
repz
xchg
push
pusha
push
dec
sbb
inc
loopne
xlat
in
push
sbb
das
pushf
mov
sub
add
cmovl
xor
xlat
mov
mov
std
aaa
add
sti
ret
scas
das
arpl
xor
dec
mov
pop
mov
xor
ficoml
or
insb
mov
push
adcb
in
inc
mov
cmpsl
out
add
lret
and
adc
push
dec
mov
mov
sub
cmp
cs
pop
sysexit
sahf
shll
mov
mov
out
shlb
push
mov
push
shll
jmp
insl
insl
mul
aaa
out
dec
mov
push
xchg
add
in
hlt
push
fdiv
mov
hlt
adc
out
int3
nop
popfw
adc
cwtl
stos
scas
roll
push
aam
int3
mov
outsl
cld
sbb
sbb
je
adc
fsub
lea
adc
ret
das
cmp
loopne
xor
xor
xchg
icebp
sub
jno
pusha
push
pop
ss
mov
out
inc
hlt
jb
inc
inc
push
jae
xlat
fdivrl
sbb
cmc
leave
stos
add
xor
cltd
mov
lcall
xchg
push
jecxz
inc
rcrl
movsb
ds
sub
cmp
cmp
and
fwait
popa
test
xchg
jmp
push
xchg
pushl
pusha
fcmovbe
or
ja
lret
jcxz
mov
add
push
cmpsl
sub
sahf
add
lret
pop
add
jl
adc
rcll
or
nop
jmp
ror
push
negb
testl
cs
jp
or
stc
push
in
mov
add
arpl
lret
jbe
leave
icebp
aaa
xor
pop
xchg
push
jecxz
mov
mov
or
mov
or
leave
cmpsb
mov
add
jb
push
adc
mov
ret
xchg
out
add
fildl
lret
ds
pop
test
ds
cmp
fsubrs
rolb
data16
adc
xchg
dec
imull
add
cmp
cmpsl
fwait
pop
icebp
sub
shr
into
js
sbb
fildl
repz
leave
pslld
pop
jg
andl
or
fdivrs
and
gs
hlt
loopne
test
repnz
push
xor
scas
adc
push
dec
movsl
or
lock
sbb
mov
nop
mov
and
lea
stc
cmc
lods
shl
xchg
idivb
xor
pop
xchg
mov
ds
test
mov
nop
and
loopne
pop
mov
jge
jp
popa
sbb
mov
fs
cld
adc
call
int
add
loopne
jp
mov
mov
fdivrs
sahf
xor
jne
loopne
insl
dec
aaa
fadd
cwtl
shrb
and
lcall
lock
ljmp
mov
mov
inc
cmp
fldenv
call
mov
sbb
sbb
jo
mov
jg
fcomi
sarl
ja
mov
in
stos
mov
enter
mov
cltd
jno
dec
dec
xchg
mov
inc
dec
mov
mov
jne
cmp
ret
lret
daa
xchg
popa
cmc
dec
lock
sub
inc
insl
mov
sub
lock
inc
mov
jp
inc
test
addr16
add
xchg
shll
test
adc
add
mov
popf
adc
test
sub
inc
xor
jge
outsb
subl
ss
mov
xor
fildll
jb
push
mov
lret
mov
xchg
pushf
cmpsb
iret
sbb
mov
test
int
shlb
cmp
je
xchg
mov
lahf
xor
lods
test
jo
cmp
or
inc
push
mov
inc
cwtl
inc
mov
out
in
stos
lea
push
xchg
and
rol
imul
jge
daa
xchg
sub
fisttpl
adc
rorb
popf
sub
mov
sbb
xor
out
cld
and
mov
insl
pop
scas
sbb
jnp
lods
andb
jb
loopnew
or
push
and
xchg
stc
jge
push
imul
and
lods
dec
rorl
sbb
scas
in
mov
les
bound
repnz
roll
and
push
xor
in
js
mov
or
sub
shlb
and
je
dec
xchg
in
loop
add
mov
std
jnp
nop
scas
inc
push
mov
or
mov
xor
aad
mov
je
jb
sub
pop
inc
andb
ja
push
stc
test
notl
data16
push
inc
hlt
clc
cmc
cmpsl
mov
test
mov
notb
pop
data16
add
xchg
test
imul
xor
lds
push
pop
push
push
insb
xor
mov
lret
test
clc
leave
mull
push
dec
test
sbb
or
and
ja
jnp
popf
test
lahf
xor
stc
xchg
divb
mul
cltd
shl
push
push
lret
jbe
les
in
xlat
pop
insl
pop
lods
in
shl
fdivl
insb
jb
fwait
inc
mov
int3
inc
cmp
je
add
loopne
fcomps
cmp
fbld
sbb
pop
mov
push
or
test
bound
insb
popa
out
mov
pop
sarb
fadds
test
cs
lret
out
add
cltd
shl
mov
icebp
mov
dec
mov
jle
sahf
adc
lds
clc
es
mov
mov
xchg
push
inc
cli
das
add
popa
leave
imulb
lock
shlb
bnd
idivl
cmc
popf
xchg
dec
pop
hlt
lds
mov
in
cmp
mulb
jns
insl
jnp
xlat
clc
faddl
xchg
les
mov
jp
xchg
mov
faddl
cmpsb
push
jo
stc
leave
int
and
jmp
es
adc
jne
jg
add
push
or
ljmp
sbb
mov
pop
xlat
and
aaa
in
mov
fs
dec
jg
aad
ret
daa
sbb
or
popf
sub
ss
lret
std
aam
pop
sbbl
loopne
push
aam
push
sbb
mov
pop
decb
mov
pop
xchg
jle
ficoml
es
jecxz
push
inc
push
dec
test
or
inc
mov
clc
es
cltd
in
and
pushf
pop
dec
imul
jb
mov
cmp
outsb
and
in
sti
shlb
cmp
cmc
bound
mov
stos
fimuls
sbb
jne
in
in
leave
int
dec
add
pop
test
inc
sbb
pop
dec
push
mov
lods
pop
icebp
inc
repnz
mov
in
sti
mov
push
outsb
or
int3
cmc
mov
add
cmp
shrb
ljmp
cmc
add
sti
rorl
stos
add
cmpl
arpl
bound
dec
dec
gs
or
jmp
lea
int
mov
xor
scas
jns
fxch
js
add
int3
push
das
lcall
add
ret
cmpsl
sub
push
fsts
arpl
lds
cli
mov
test
jb
into
sahf
add
fisubrl
test
insb
mov
mov
rcrl
xor
andl
cmp
cmp
push
sbb
dec
lcall
sub
jnp
into
mov
fistpll
insl
pushf
jecxz
ljmp
sub
push
xor
lret
iret
mov
addr16
out
push
pushf
nop
negb
orl
scas
or
push
loope
sub
jmp
jg
xchg
in
ret
pop
int
es
cld
fisttps
pop
jl
es
or
in
and
dec
xchg
imul
sbb
mov
and
mov
and
dec
lock
push
xchg
or
adc
lds
pop
or
jp
hlt
jne
mov
ret
xor
dec
or
fsts
fidivrs
lea
dec
jl
xchg
std
xor
dec
or
cmp
rclb
adc
sbbl
jne
fisubl
push
lds
lcall
ret
jmp
pop
inc
dec
rcrb
adc
std
mov
pop
jae
sub
mov
cmpsb
push
push
mov
mov
and
mov
or
fmull
call
push
icebp
cs
fcoms
subb
jmp
negb
out
cmp
in
push
je
jg
pop
sub
pop
dec
jle
lods
adc
add
loopne
pop
xchg
xchg
je
jno
adc
and
sahf
or
inc
xchg
jmp
lock
add
jmp
push
push
or
jb
aaa
lods
loopne
out
into
stos
push
dec
jo
pop
movsl
mov
je
test
add
push
cmp
xchg
cmpb
out
addr16
mov
xor
add
out
mov
and
adc
sub
cmp
ljmp
dec
cmp
fcomps
mov
lcall
mov
mov
mov
jecxz
mov
jecxz
popl
jb
cs
dec
push
clc
jne
jnp
lcall
stc
jge
sub
inc
clc
iret
in
cmp
mov
xorps
cmp
jnp
jmp
pop
and
inc
or
data16
imul
call
jne
aam
cmpsb
test
jne
jge
inc
and
mov
fisttps
or
jge
add
xchg
aad
lcall
and
push
pop
aad
xor
mov
popf
cmpsb
test
test
mov
mov
out
fdivrl
inc
xor
pop
stos
outsl
imul
and
loopne
cmp
mov
and
sarl
and
scas
in
mov
pop
mov
sahf
and
jae
lods
arpl
test
adc
inc
push
sbb
je
inc
out
repnz
fwait
lea
aaa
sub
dec
xlat
dec
sbb
out
fcomi
aas
clc
xchg
add
xchg
lea
shll
sbb
paddd
add
inc
dec
push
lret
clc
ret
test
lret
jge
out
inc
test
pop
xor
into
in
mov
daa
sub
lea
daa
insl
movsl
mov
xchg
fcomps
adcl
push
sub
and
test
cmp
lock
sub
mov
mov
clc
lods
das
js
daa
xor
mov
jno
xchg
and
push
xchg
addr16
movsb
sbb
and
inc
add
sub
hlt
jbe
enter
hlt
lods
pop
xchg
xchg
rorl
sbb
cld
xor
std
mov
addr16
pushf
cmpsb
xor
sahf
sub
inc
lcall
faddl
jg
outsb
mov
ljmp
xchg
dec
xor
add
xchg
ja
adc
push
imul
xchg
lcall
in
scas
inc
pushl
dec
adc
je
push
test
inc
mov
clc
std
add
push
movl
test
pop
std
pop
leave
movsb
in
push
add
mov
lcall
cltd
sahf
or
mov
push
push
xor
mov
dec
and
in
lret
out
dec
dec
sub
sar
in
movsb
jnp
test
xchg
movsb
out
pop
sbb
jno
dec
push
sbb
out
pushf
or
loope
adc
jecxz
sub
sub
out
ficoml
movl
dec
mov
push
fisttpl
test
mov
cmc
imul
mov
lret
mov
daa
mov
nopl
sbb
lds
imul
lds
outsl
les
sbb
jmp
mov
jne
out
push
bt
outsb
xchg
stos
mov
xchg
mov
sar
add
fcmovnb
push
add
dec
stc
mov
ja
adc
mov
enter
and
xorb
mov
ficoml
xor
sti
adc
xchg
notb
inc
out
fst
test
push
test
movsl
aam
cmc
into
mov
fsubl
call
xchg
xchg
mov
sbb
divb
outsl
add
sbb
or
into
es
mov
pop
mov
cmp
mov
dec
mov
push
out
xchg
inc
ss
outsl
cmp
pushf
mov
pop
mov
add
arpl
xchg
mov
pop
jns
test
aam
xor
repz
add
lods
pop
pop
or
jno
addr16
inc
xchg
icebp
sbb
pop
test
mov
xchg
push
jae
clc
sub
cmc
fs
icebp
adc
mov
sbb
pushf
fistpll
loopne
mov
xchg
cmp
out
pop
jg
arpl
adcl
xchg
xor
inc
ss
shll
jno
lds
sbb
pop
out
sbb
pop
adc
enter
push
loopne
lcall
ja
push
je
pop
test
lahf
leave
call
leave
sub
mov
incb
cmc
out
add
xchg
and
xchg
pop
sub
std
out
into
push
mov
mov
or
repz
dec
mov
push
or
cltd
aam
insl
repz
sbb
shlb
mov
add
push
cltd
jne
cltd
roll
mov
outsl
popf
or
and
xor
or
jmp
imul
cmp
out
out
push
dec
stos
mov
sahf
sub
jp
jmp
stos
xor
sbb
mov
inc
mov
mov
inc
cmp
nop
cmp
aas
push
xor
push
dec
dec
fwait
cmpsb
cmovnp
fbstp
jb
in
pop
cmpsl
loopne
lods
jmp
pushf
imulb
pop
push
pop
inc
xchg
add
push
lods
outsl
icebp
add
jge
adc
pop
add
and
mov
push
or
sti
xor
ja
mov
fistps
out
and
outsb
cmp
dec
arpl
out
add
out
xchg
test
sub
cmp
jge
pop
mov
addr16
jge
pop
adc
adc
cmp
mov
dec
xor
dec
fsubs
push
loopne
inc
cli
sub
jmp
jne
hlt
data16
sub
jns
or
mov
jne
xor
mov
pop
das
in
mov
ja
mov
js
and
xchg
aam
jmp
icebp
cmc
loopne
sbb
movsl
shrl
inc
sub
scas
lret
jb
xor
sub
xor
cmp
popa
fldcw
mov
lcall
hlt
sbb
push
mov
imul
in
pop
jb
stos
push
xor
imul
sbb
lret
sarl
xor
shlb
lcall
and
add
pop
and
shrb
xchg
sbb
les
mov
mov
cwtl
outsl
dec
cmpsb
mov
sbb
movsb
sbb
ficomps
xchg
in
fs
movsb
fwait
pop
imul
sti
ret
int
test
clc
dec
jne
jmp
pushf
shll
xchg
adc
out
xchg
out
pushf
cwtl
sbb
lret
mov
pop
inc
iret
mov
mov
add
xchg
imul
out
jle
shll
lret
lods
inc
dec
test
fwait
scas
js
cmp
cmp
popf
test
andb
xor
xchg
inc
in
jo
xorb
int3
inc
and
and
cmp
dec
inc
pop
fwait
shll
fs
pop
aam
subl
sub
push
jg
lret
cmp
mov
sub
outsl
ljmp
nop
pop
mov
adc
movsb
add
cmp
in
mov
in
pop
sbb
cmpsl
dec
mov
test
ret
cmpl
dec
pusha
lahf
mov
popa
mov
push
pop
inc
stos
or
add
xchg
add
or
insl
xchg
movsb
sar
push
dec
xor
sub
add
mov
int
xchg
jge
inc
push
fisubl
push
or
inc
pop
daa
sub
fldt
inc
mov
ljmp
cwtl
sahf
mov
pop
pop
mov
cmp
dec
lock
xchg
or
and
sbb
adc
pusha
leave
loop
pushl
adc
addr16
test
mov
rorb
mov
movsb
pop
pop
or
call
jle
outsl
das
jno
pop
out
jp
adc
and
dec
mov
jae
mov
push
leave
jl
adc
outsb
insl
and
dec
popl
imul
pop
outsb
mov
inc
stos
add
sbb
fsubl
and
pop
inc
sbb
adc
dec
lods
jno
inc
jg
or
shll
insb
aaa
mov
add
jbe
jae
xchg
fcmove
pop
sub
js
jnp
rclb
imul
cli
xor
cmc
stc
outsb
or
stos
add
pop
mov
negb
js
fnsave
mov
pushf
les
out
sbb
dec
add
add
insl
fistl
push
jge
repnz
cmpsb
filds
test
mov
fsubrs
dec
pop
xor
xor
lods
fisttps
fbstp
pusha
mov
jbe
sbb
lcall
xorl
movsb
lret
mov
jb
inc
sahf
bswap
fcompl
push
scas
push
repz
mov
lods
adc
fsubr
or
and
les
jge
or
nop
fwait
add
cmp
and
jne
iret
sbb
sbb
xor
lahf
fldcw
push
negb
loope
push
pop
xorl
int3
xchg
mov
jno
dec
rcr
fcompl
jg
push
cmpsb
pop
and
push
leave
push
push
xor
mov
in
add
jnp
mov
adc
incl
sub
cmp
sub
mov
cmp
push
pop
xor
bound
sbb
lea
pop
mov
mov
call
jno
hlt
pop
or
push
mov
mov
out
dec
dec
or
push
sbb
push
shl
add
int
test
xor
lret
dec
gs
sbb
push
aad
repz
divl
xchg
ror
push
cmp
mov
bound
movsb
cmp
and
mull
loopne
xchg
les
scas
mov
enter
jb
inc
mov
outsl
sbbb
mov
xchg
das
jno
adc
jne
out
addl
arpl
jnp
xchg
stos
mov
jne
lods
xchg
pop
push
pop
jecxz
sub
in
test
test
sbb
pop
std
repnz
div
insl
adc
sub
add
add
push
jns
cmc
xchg
sbbb
imulb
ficomps
aaa
xchg
fchs
mull
lret
add
test
fisubs
in
push
sbb
inc
lock
cmp
push
mov
shlb
fnstsw
test
push
jbe
fisubrl
mov
in
xchg
cwtl
dec
sbb
movsl
out
rolb
lods
dec
mov
roll
ror
call
pop
xlat
xchg
movsb
inc
out
dec
and
hlt
jl
rcll
popf
jno
gs
inc
fiadds
jo
push
jge
leave
jmp
addr16
loop
sub
ret
push
out
call
into
shrb
adc
push
int3
cmpsb
push
or
jmp
jne
mov
shl
mov
jae
loope
adc
les
push
mov
mov
mov
dec
pusha
nop
sahf
shll
fisttps
lcall
sbb
xchg
xor
dec
sbb
aam
or
mov
ljmp
rcll
dec
cli
cmp
enter
mov
stos
push
insl
pop
mov
mov
or
jmp
sarl
xor
sub
in
jmp
and
in
mov
aas
aas
mov
aaa
outsl
insl
sti
dec
lret
movsb
inc
mulb
pop
mov
jmp
sub
jge
jl
sub
mov
fiaddl
loopne
cmpsl
pushl
imul
push
cmc
les
inc
lds
or
jo
jbe
push
mov
adc
dec
dec
adc
sbb
xor
enter
or
add
cmpsl
lds
xchg
mov
popl
scas
scas
stos
add
sub
push
or
daa
inc
push
and
mov
outsb
xchg
mov
dec
cmpsl
pushf
mov
pop
jnp
dec
push
iret
xlat
int3
inc
sbb
push
mov
sbb
pop
cs
add
fptan
sub
xor
mov
idivl
lock
pushf
lea
outsb
rcll
enter
push
paddb
outsl
incl
add
mov
mov
cmp
mov
sbb
imul
dec
aas
or
mov
movsl
mov
xor
popf
out
xchg
je
push
cmp
xchg
sti
sarb
movsb
es
add
mov
aaa
les
loop
lds
in
pop
aas
scas
outsb
mov
mov
or
add
inc
push
insb
sub
pop
pop
dec
mov
lods
shlb
sahf
jne
lea
fs
add
cmp
clc
cmpsl
jo
adc
and
imul
mov
fwait
adc
test
add
mov
test
in
test
gs
jmp
shrb
push
test
aam
cmc
popa
test
lock
jecxz
jle
ficoml
or
push
js
push
add
inc
mov
jb
sbb
scas
add
idivl
pop
pop
mov
add
mov
sbb
add
and
fsts
jbe
mull
popa
adc
scas
xchg
shrl
popl
test
xor
or
inc
cmpsl
jge
cmc
push
out
addr16
sub
inc
xchg
outsl
imul
clc
fptan
es
fidivl
int
mov
daa
pop
mov
aam
sub
dec
add
lods
push
push
xlat
cli
jp
sbb
push
fs
pop
xchg
out
xchg
sub
adc
lods
lea
jecxz
mov
shrl
dec
fcmove
xchg
je
fiadds
or
nop
dec
sub
jno
dec
pop
dec
add
ret
test
xchg
mov
aam
insb
into
pop
mov
fwait
xchg
mov
xchg
push
mov
fisttpll
sbb
test
pop
inc
jge
scas
xchg
xchg
adc
fistpll
ljmp
push
std
mov
repnz
movsb
jp
mov
mov
addb
jmp
addb
and
sub
cmpsl
jns
out
mov
jns
mov
mov
xor
cmpsb
js
pop
loopne
push
or
sahf
and
popf
push
dec
int3
adc
pop
cmp
dec
out
rcrb
mov
mov
push
lock
or
and
dec
mov
js
lock
popf
dec
mov
outsl
neg
jg
mov
inc
sbb
adc
pop
jns
in
and
loop
shrb
mov
mov
sub
fisubrs
aas
xor
cmp
push
dec
cltd
mov
mov
stos
fiaddl
paddb
or
shl
mov
cmpsb
cmc
cs
mov
fnsave
sub
mov
into
orb
add
jns
adc
cmp
lds
in
out
in
dec
cli
adc
jge
xor
jge
and
aad
lcall
jne
jno
and
fucomi
xchg
and
les
xor
loop
mov
rol
xchg
push
jp
stos
sbb
xchg
imulb
clc
sbb
cwtl
stos
enter
hlt
adc
sbb
add
fcomps
or
dec
lock
or
push
popf
push
icebp
jge
ret
ja
sub
or
sub
test
dec
mov
mov
out
or
inc
push
or
add
bound
fnsave
add
mov
add
adc
mov
addr16
mov
test
dec
mov
test
lds
testl
and
dec
xor
ret
repz
les
scas
out
sub
stc
xchg
aas
fisttps
ljmp
subl
cli
scas
divb
out
sbb
jns
int3
out
sbb
mov
sti
xchg
arpl
les
cld
pop
sub
push
push
lods
js
mov
imul
pop
xor
jnp
mov
ljmp
les
lret
push
add
imul
cmp
sub
mov
fstpt
push
pop
xlat
push
mov
movsb
cmp
sahf
pop
scas
fimull
push
xchg
or
jns
dec
cmpsl
lea
add
inc
push
popa
mov
lcall
inc
jmp
shl
ds
scas
adc
outsl
in
lcall
adc
add
test
pop
in
push
cmp
js
and
lcall
push
rclb
push
insl
test
add
hlt
loopne
pop
mov
xchg
push
cmp
pop
divb
sbb
inc
cs
sbb
shlb
jle
xor
fldt
mov
sbb
xor
sub
add
in
adc
fidivrs
rolb
lcall
cmpsb
mov
int
adc
cmc
ret
fs
sbb
repz
sub
pop
ss
or
mov
stos
enter
sub
cltd
push
lds
fidivl
insl
in
addl
dec
cmp
pop
call
out
aad
dec
jle
pop
insb
imul
dec
mov
ret
hlt
push
fimuls
dec
lcall
loope
les
outsb
shlb
adc
aas
pop
push
in
adc
inc
cmpb
repz
repnz
mov
pop
or
sub
dec
jo
mov
pop
sub
fsts
xchg
adc
jno
int
iret
test
jge
cmpsl
sbb
fadd
sti
mov
fwait
and
popf
mov
mov
add
xor
xchg
lock
pop
loope
or
cmp
mov
fldl
cmp
in
bound
ds
or
lea
je
std
ljmp
lret
outsb
xchg
test
test
addb
and
loop
push
push
jnp
sbb
jb
out
aas
pop
cs
xchg
sbb
lahf
fcomps
hlt
pop
and
aas
aam
adc
cs
and
outsb
push
iret
add
xchg
push
dec
loopne
subb
xor
lret
ds
inc
dec
cltd
movsl
daa
pop
push
push
in
out
and
stc
ret
lcall
outsb
ja
scas
jo
in
imul
mov
dec
insb
fisubrl
sub
ret
fsubrp
push
sub
push
ret
subl
pop
jno
mov
sub
mov
xorb
adc
mov
pop
mov
inc
inc
das
cmp
adc
loop
mov
mov
in
mov
test
jbe
xor
inc
xchg
dec
push
jl
sub
call
es
or
adc
stos
jns
xor
mov
dec
dec
jmp
sbb
data16
dec
sub
dec
xchg
push
mov
adc
jbe
mov
insb
in
mov
repz
andb
push
xchg
addr16
push
push
lret
repz
jp
enter
pop
sub
dec
mov
sub
cmp
into
inc
fucomp
pop
ret
ret
mov
or
imul
fwait
adc
mov
movl
pop
lret
xlat
fists
jl
jge
cmp
ja
jecxz
icebp
test
dec
out
mov
xor
pop
shll
jne
insb
dec
notl
lds
push
or
mov
adc
cmp
xlat
cmpsl
push
dec
mov
mov
pop
or
ja
mov
jb
mov
adc
and
mov
jge
jb
mov
gs
fs
mov
adc
fwait
pop
jg
cmpsb
mov
xchg
mov
outsl
loop
add
cmp
or
inc
jae
jnp
gs
sub
int3
push
mov
hlt
addr16
xor
mov
pop
push
ret
sbb
sub
sbb
and
cs
pop
mov
mov
jle
inc
andl
mov
inc
in
aad
push
leave
imul
fimuls
dec
aad
nop
fs
movsl
mov
inc
pop
pop
inc
dec
int3
pop
fwait
xor
scas
pop
out
xor
test
js
ret
in
leave
mov
aam
jae
loopne
out
cli
aas
arpl
mov
pushf
xchg
jne
cmp
mov
add
clc
repz
pop
mov
dec
xchg
jae
mov
sub
pusha
jecxz
or
ja
inc
inc
add
xor
cli
cs
fyl2x
nop
iret
shrb
mov
xchg
outsl
jl
lret
mov
pop
pop
jmp
inc
jp
test
push
in
push
sahf
and
cmpsb
mov
cmp
shr
out
scas
das
and
inc
bound
mov
mov
dec
xor
mov
out
inc
jecxz
cmc
les
mov
mov
js
sti
stos
fdivrp
icebp
lcall
jo
push
sub
jle
pop
daa
lahf
enter
and
xchg
adc
fldcw
inc
popf
icebp
adc
mov
cltd
aam
dec
mov
stos
stos
call
dec
out
aam
imul
push
cltd
push
outsl
pusha
and
or
iret
ja
jbe
cli
push
iret
sub
or
cwtl
lea
divb
js
push
mov
sar
adcl
js
and
mov
outsl
movsl
pop
jne
pop
jmp
lods
rorl
push
fsubrs
dec
clc
jne
pop
movsb
push
xchg
lahf
push
lret
sbb
dec
pop
xor
fcompl
jge
inc
jmp
jmp
dec
aam
cmpsb
stc
inc
lock
lea
add
sbb
dec
in
clc
scas
sub
jae
sub
aad
jmp
sarb
aas
shll
jmp
dec
lahf
es
ljmp
and
cmovp
lcall
mov
int
leave
movsl
shrb
repz
scas
out
inc
jb
mov
cmpsl
dec
dec
mov
cmp
sub
sarb
adc
filds
cld
or
push
adc
cmp
cmp
std
mov
popa
and
push
scas
arpl
inc
mov
or
sar
jecxz
lahf
ret
push
jne
sbb
popa
adcb
pop
mov
and
je
imul
or
lds
daa
test
aad
addb
repnz
popa
mov
add
push
in
adc
ja
nop
adc
pusha
popa
popl
mov
in
or
or
sbb
jno
stos
and
fistpl
les
fbstp
cld
lods
mov
fsub
dec
ss
dec
push
xor
test
mov
ja
stos
mov
mov
add
subb
adc
arpl
xor
push
cli
mulb
or
and
in
into
fistps
adc
sbb
add
xchg
mov
push
push
sub
jno
jg
jnp
xor
fstl
imul
outsl
xchg
mov
jecxz
mov
xchg
stos
int
mov
xor
and
lods
or
xchg
scas
fistpl
adc
pop
mov
stos
jo
xchg
sub
cmp
mov
xchg
sbb
sub
test
inc
aad
lods
and
addb
push
mov
cmp
lock
xchg
dec
dec
dec
out
jmp
cmpsl
test
mov
mov
add
ja
into
pop
push
jo
test
add
incb
lcall
pop
pusha
int
xchg
dec
xor
les
dec
dec
fnstcw
out
mov
rcrl
lods
int3
shll
adc
in
pop
mov
xor
jg
int
sbb
fldenv
imul
jge
xor
mov
or
add
insb
shr
syscall
mov
mov
push
cmp
push
push
pop
lret
ret
mov
in
xor
je
incl
or
ret
and
int3
mov
add
jecxz
sbb
add
push
mov
mov
sub
lea
daa
cld
sbb
in
inc
adc
fnstsw
mov
testb
jmp
sbb
pop
and
cld
rcrl
inc
and
xor
push
cmp
lahf
xor
shrl
js
adcb
ret
cmp
cmpsl
mov
ds
sbb
sub
inc
or
dec
inc
cs
lret
push
mov
push
sub
adc
xor
mov
inc
pop
sahf
inc
and
inc
popa
pop
jle
je
fnstsw
out
sbb
in
and
and
adc
in
cwtl
inc
mov
jle
scas
jge
mov
sbb
imul
jecxz
sbb
push
in
arpl
mov
jl
dec
jp
xlat
jns
dec
outsl
fsubs
pop
call
inc
jo
push
les
jl
jo
fmuls
cmp
pop
je
fstpl
and
popa
icebp
xor
scas
dec
mov
sahf
pop
sbb
pop
fwait
test
pop
aas
mov
push
in
cmp
sbb
xchg
xchg
adc
pop
aas
out
insl
xor
data16
sbb
pop
dec
out
jp
in
fwait
mov
fadd
cmp
popa
cli
xor
enter
mov
sahf
lds
pop
mov
push
inc
loope
arpl
call
mov
jmp
sbb
cwtl
test
fsubrs
xchg
pushf
lods
mov
mov
xchg
adc
cmp
movsb
cld
fsubrl
add
data16
sub
mov
push
mov
lods
adc
nop
dec
popw
aaa
mov
shlb
push
gs
cltd
jmp
jmp
jo
shlb
inc
mov
addr16
mov
jb
jecxz
mov
or
inc
jo
das
wrmsr
jp
cld
ja
leave
adc
add
clc
test
jle
ret
sbb
imul
cmp
lret
adc
mov
adc
mov
fs
sbb
push
fsub
inc
inc
out
jae
scas
shll
xorl
jne
jbe
jle
push
call
mov
mov
cmp
les
adcb
xor
push
orl
sub
test
test
sub
std
cmp
jp
cmp
dec
and
jb
in
clc
daa
mov
sbb
dec
sbb
cmp
sub
sahf
stos
lds
jns
ds
lret
mov
loopne
mov
clc
mov
movsl
pushf
aas
ljmp
jb,pt
repz
in
int
std
jecxz
repz
cmp
xchg
push
inc
aaa
sub
xor
pop
mov
sub
int
lock
bnd
js
int
ljmp
ret
cltd
mov
xor
decl
inc
jae
lock
jl
sar
and
stos
in
cmp
cmpsb
mov
and
push
adc
push
ja
xlat
mov
lods
sbb
pop
aaa
and
xchg
mov
pop
divb
inc
hlt
push
cmp
inc
jnp
xchg
and
pop
jg
pop
fiaddl
sub
jno
mov
cmp
pop
shrb
fisttpl
and
adc
lods
pop
fisttpll
rcll
stos
xchg
rorl
mov
lahf
xlat
fs
out
and
jl
insb
or
adc
int3
xchg
arpl
mov
les
mov
mov
xor
cmpsl
xchg
mov
dec
xor
lds
jae
push
stos
jae
data16
push
pop
dec
int3
jp
xor
push
adc
lret
push
or
add
das
jg
mov
inc
cwtl
sub
adc
shrl
dec
sub
mov
and
mov
sub
insl
xlat
lahf
inc
or
cmp
or
rolb
mov
mov
test
rorl
pop
int3
in
add
loopne
pushf
push
ja
hlt
add
bound
lcall
dec
cmpsl
ret
pop
cwtl
cld
cs
adc
xor
in
in
inc
jbe
push
push
and
jb
repz
add
cmp
fisttps
out
fidivrs
aas
std
mov
fnsave
pop
cmp
mov
fidivs
lahf
out
int3
pop
jae
icebp
inc
sbb
sbb
cmp
push
scas
gs
leave
in
xchg
pop
pop
aaa
cli
arpl
pop
jae
or
or
add
ss
mov
mov
adc
inc
mov
adc
test
or
fcompl
iret
or
int
cwtl
inc
xor
inc
icebp
outsb
icebp
loop
xchg
jne
sub
jne
pop
push
xor
jns
movlps
and
jne
ret
dec
hlt
dec
push
pop
push
adc
xlat
and
es
icebp
popl
addl
loopne
jl
mov
outsb
fidivrl
push
fwait
sub
dec
jmp
orb
daa
jmp
mov
inc
int
add
jno
jecxz
dec
lret
ss
popf
cmp
push
push
outsb
pushf
dec
andl
scas
push
test
cmp
data16
inc
sbb
xor
jg
cmpsb
lret
stc
mov
int
cmp
shlb
pop
add
cmp
scas
inc
stos
mov
xor
pop
enter
xor
adc
jg
out
test
sub
sahf
in
push
pop
sar
stc
fcoml
pop
and
push
mov
fdivrp
xchg
stc
xchg
sub
xchg
xchg
mov
or
sub
das
or
lahf
mov
inc
and
addr16
dec
xor
mov
into
mov
dec
adc
xchg
cmp
in
add
sub
mov
aas
jecxz
cmp
cmp
cmp
or
xchg
push
pop
xchg
mov
shll
inc
movsb
push
call
cmc
cmpsl
lret
aad
lcall
push
jbe
aas
incb
adc
jb
xor
sbb
loopne
add
mov
es
cmc
fisubrl
xor
scas
scas
scas
aaa
mov
dec
aad
outsl
xor
mov
xor
shl
xor
std
mov
lcall
shlb
jo
push
push
add
jb
adc
pop
sbb
ror
in
add
sbb
ljmp
mov
dec
repnz
dec
call
testl
iret
mov
movb
int3
inc
cmp
push
jecxz
test
inc
pushf
test
roll
and
mov
sub
fistps
lock
lods
loope
or
rclb
loop
mov
add
mov
fcoml
and
and
inc
cld
dec
mov
aaa
and
fadds
fldcw
loope
xor
rol
jecxz
sbb
iret
sbb
sbb
xchg
inc
jo
sbb
cld
mov
mov
fdivrp
push
pop
mov
popf
dec
std
xor
or
mov
pop
dec
inc
mov
inc
mov
roll
or
push
aam
popf
lods
mov
iret
cmp
pushf
insl
sbb
hlt
xchg
shll
adc
add
pusha
jle
outsb
data16
mov
inc
push
std
add
aaa
xchg
mov
add
push
lods
lds
aam
sbb
iret
aas
clc
cmp
xchg
sbb
outsb
mov
mov
incb
lods
push
fdivrp
jno
sbbl
out
insl
add
push
cli
enter
mov
icebp
sbbb
mov
sbb
dec
sbb
or
cmpsb
es
mov
pop
subb
pop
stos
push
mov
xchg
movsl
gs
jge
push
push
pop
xor
insb
mov
dec
mov
cmpl
jae
lahf
dec
rolb
mov
jno
mov
leave
cs
mov
enter
rcrl
shlb
push
mov
xor
adc
add
inc
adc
arpl
aas
repz
hlt
stc
mov
pop
shrl
ds
and
xor
shrl
jecxz
cmc
xor
pop
je
lahf
or
inc
dec
dec
imul
imul
dec
scas
xor
std
or
mov
fdivrl
or
lea
fwait
ljmp
imul
cli
clc
cmp
jg
mov
lahf
cmpsl
loope
in
call
jb
sub
push
dec
jns
mov
shrl
mov
push
mov
mov
mov
mov
jo
sub
and
mov
or
xor
inc
adc
je
repz
dec
mov
mov
and
out
cmp
rcll
push
imul
sub
mov
and
addr16
es
pop
adc
xor
ds
je
mov
mov
popf
js
ljmp
jno
std
dec
sbb
pushf
ret
enter
pop
out
jecxz
mov
jo
nop
jg
or
lret
or
pop
les
jle,pt
inc
movsb
ja
pop
xlat
add
cmp
jo
dec
es
test
mov
icebp
into
pop
std
cmp
lahf
mov
int3
loop
xchg
stos
lock
out
mov
jno
mov
lds
stc
or
inc
xor
mov
xlat
mov
out
mov
dec
xor
rorb
jg
sub
out
fisubs
sbb
dec
xlat
clc
into
mov
mov
jle
adc
cli
pop
in
insb
lcall
mov
push
inc
mov
sbb
test
aam
pop
daa
push
outsb
inc
dec
sbb
add
push
push
push
push
and
popf
mov
mov
stos
mov
sbb
rolb
mov
lea
push
imul
add
arpl
cmp
mov
insl
push
dec
dec
movsb
jp
stos
xor
ljmp
sub
pushf
mov
mov
push
lock
or
pop
popf
and
cld
fildll
out
mov
pop
scas
aas
pop
xchg
add
cmpsb
nop
sti
cli
std
and
mov
ds
add
jecxz
dec
pop
loop
mov
mov
scas
add
pop
repz
push
aaa
pop
es
int
and
sbb
adc
push
mov
xchg
dec
sbb
xor
mov
insb
cmc
sub
jns
cmp
push
adc
in
xchg
leave
sahf
aam
sub
xchg
adc
out
fcompl
bound
cmp
pop
jns
jne
aas
stos
pop
push
xchg
pop
push
sub
mov
and
push
lret
in
cmpsb
repnz
cmp
lahf
xchg
and
jnp
adc
mov
jb
inc
jle
xorb
repz
adc
cwtl
rcrb
mov
and
leave
push
push
push
xor
mov
arpl
ja
into
jg
into
sbb
push
dec
xchg
push
addr16
daa
add
test
aad
xor
mov
pusha
push
scas
es
jbe
mov
pop
subb
stos
xor
mov
imul
pop
leave
iret
dec
repnz
or
jl
mov
and
popf
leave
inc
aaa
pop
in
xor
stos
frstor
je
sub
xchg
sbb
push
sar
lcall
mov
jno
sbb
xlat
sub
and
push
outsb
jle
dec
test
jle
movsb
xor
in
sub
test
mov
xor
call
xchg
jb
ss
stos
pop
jae
jnp
mov
insb
mov
out
fwait
cld
sub
xlat
sbb
mov
add
pop
push
cmp
mov
nop
sub
sub
je
jne
or
cli
into
scas
je
ljmp
or
sahf
into
ficompl
jnp
sub
testb
cmp
sbbb
or
pop
cli
dec
or
push
xor
insl
xor
mov
dec
mov
mov
pop
or
cmp
mov
add
roll
lock
mov
mov
fists
iret
xor
scas
faddl
xor
mov
sahf
cmp
mov
push
lahf
xchg
data16
scas
push
pushf
enter
inc
jno
mov
push
xchg
aad
push
lods
jp
cltd
stos
mov
cmp
out
push
jle
push
insl
aas
inc
mov
ret
push
arpl
in
dec
mov
dec
ret
int
out
aaa
lods
dec
push
je
insl
or
add
push
in
mov
negb
inc
sub
lea
mov
pop
cmc
adc
cmp
idivb
pop
jle
rcr
clc
rorb
rorl
icebp
aam
add
jno
addr16
dec
dec
or
push
adc
clc
shl
jg
pop
dec
sbb
lret
cltd
test
es
push
xor
aad
fsubrs
stos
jge
add
sub
jbe
and
push
adc
data16
loop
add
mov
sub
clc
std
sub
dec
pop
sub
push
jns
in
loop
pushf
bound
loop
bnd
xrelease
int3
inc
arpl
and
mov
addr16
lret
jmp
ret
incl
hlt
dec
cmc
mov
push
fisttpl
dec
mov
shlb
pop
stc
jne
int
mov
out
call
sbb
push
stc
scas
xchg
pop
sbb
mov
or
mov
sub
loop
xor
cwtl
loopne
pop
scas
repz
push
mov
jo
repnz
outsb
ds
mov
sahf
scas
mov
sub
je
mov
dec
data16
sbb
pop
sahf
adc
mov
addl
inc
imul
rorb
cli
and
xchg
inc
adc
lds
fs
cmp
and
sbb
pop
jbe
mov
aaa
js
sbb
mov
scas
mov
ja
xrelease
sub
jle
mov
pop
popa
aam
dec
stos
mov
insl
or
insl
aad
outsb
fs
ret
ds
rcrb
icebp
aam
jae
stc
fsubr
cmp
fldl2e
test
mov
sub
cmp
movsb
minps
daa
outsb
inc
sbb
mov
subl
and
push
sbb
mov
pop
mov
jno
sub
inc
cmp
pop
inc
test
cmp
adc
ret
push
mov
out
inc
sub
pop
add
sub
xlat
sub
pop
pop
sbb
add
lods
call
imul
or
add
mov
jbe
outsb
xor
xor
xchg
xor
icebp
push
jg
jnp
push
hlt
dec
int
mov
jae
arpl
fisttpl
sahf
outsb
jne
ljmp
add
sbb
or
das
pop
push
sbb
fnstenv
cmp
xor
adc
out
fninit
mov
imul
cld
icebp
popa
and
cltd
lods
mov
into
mov
and
cwtl
cmp
jb
aas
xor
add
jnp
loope
xchg
insb
pop
mov
jle
mov
mov
in
mov
clc
push
movsb
stos
cmp
xor
sub
fistps
adc
sbb
testb
rcrb
jle
shll
sub
mov
sbb
in
aaa
bswap
dec
jge
inc
movsb
cmpsl
sbb
fs
dec
cmpsl
inc
xchg
shrl
jnp
mov
lcall
cmp
pop
and
xchg
mov
addr16
xchg
jno
popf
jg
ret
mov
adc
sub
xchg
notb
add
jno
hlt
in
add
ds
pop
pop
inc
push
mov
xchg
or
cmp
out
fnsave
mov
jb
xor
add
ljmp
xor
xor
ds
stc
add
xchg
sbb
data16
repnz
sbb
cltd
cmpb
push
mov
jne
fxch
cmp
add
mov
cwtl
push
test
xchg
scas
daa
data16
push
pop
movsl
or
cmp
jne
pop
sub
lds
stc
flds
push
faddl
mov
mov
rorl
sbb
in
mov
or
pop
pusha
mov
jbe
inc
pop
pop
xchg
adc
test
in
xchg
inc
dec
inc
dec
sbb
stos
test
pop
sub
stos
repnz
xchg
add
mov
scas
jle
hlt
lcall
dec
push
cmc
or
jl
adcb
jb
cmp
jo
xchg
imul
in
mov
lcall
xor
push
adc
inc
dec
popa
and
addr16
out
mov
jno
pop
or
mov
js
adc
pop
adc
and
ja
jp
mov
xor
push
sbb
mov
cmp
movsl
imul
xchg
adc
in
stos
rolb
mov
mov
mov
fldl
clc
fildl
pushl
jecxz
outsl
fwait
arpl
fists
fsubrl
and
mov
ret
enter
daa
andl
in
push
mov
pop
push
arpl
adc
jnp
dec
cmp
ret
push
mov
loopne
scas
mov
notb
movsl
mov
sbb
sub
je
xchg
sub
inc
mov
jmp
in
pop
sbb
pusha
jmp
imulb
popl
xchg
int3
sub
jnp
cmp
and
cmp
repnz
bound
daa
fcompl
xchg
roll
mov
jmp
leave
xor
inc
arpl
mov
mov
hlt
ret
xor
js
jge
inc
push
xlat
shr
cli
sbb
lods
mov
outsl
rcrb
xchg
add
or
fisubs
lret
push
pop
cld
push
pop
fistpll
fistl
rcrb
movsb
out
mov
fnstsw
jb
leave
jle
popa
mov
fiadds
test
popa
dec
mov
enter
pusha
ficomps
push
mov
pop
pop
imul
outsb
xchg
jecxz
xchg
ss
mov
fs
sahf
lea
aam
in
cmp
imul
daa
repz
aad
fistpll
fcmovnu
clc
out
fcomp
test
xchg
push
imul
sub
mov
insb
xchg
mov
lods
dec
int3
outsl
or
sbb
dec
mov
dec
sub
outsl
cli
inc
add
std
xor
jo
les
mov
rorb
mov
loopne
out
enter
sarb
imul
xchg
sub
jbe
insb
pop
movsb
imul
push
inc
inc
call
pop
psllw
es
jo
cli
insb
lods
xor
cmp
push
mov
ret
in
in
cmc
scas
loope
mov
mov
stos
data16
cmpsb
out
xchg
sqrtps
decl
in
lds
in
popf
jb
sahf
mov
adc
ljmp
mov
xor
and
pop
dec
fcmovnb
test
inc
iret
push
aaa
or
lahf
mov
sbb
push
mov
scas
aam
jo
mov
cld
je
jp
push
loop
or
inc
push
or
jg
scas
push
inc
movsb
leave
mov
xchg
fdivrs
mov
cmpsb
jg
adc
add
aam
div
mov
ficomps
and
mov
rcrl
xchg
push
ja
into
xor
mov
mov
push
stos
mov
cld
xlat
aam
lret
mov
ficoms
add
add
xor
mov
cmp
aaa
in
orb
cs
xchg
sbb
add
in
stos
sub
cmpsb
sbb
ja
pop
call
pop
cmp
jnp
shll
mov
andb
sub
popa
push
xor
add
imul
in
jns
fistpl
xor
shrl
xchg
scas
adcb
adc
push
dec
out
jg
cwtl
fwait
movsb
cmp
mov
or
add
dec
mov
mul
sub
pop
pusha
rcl
cmp
dec
mov
sub
xlat
cwtl
nop
xor
lret
sarl
inc
dec
int3
fisttpl
mov
xchg
pop
push
sub
adc
hlt
dec
test
push
push
push
dec
in
adc
jg
cld
std
and
outsb
dec
test
jb
pshufw
int3
inc
add
mov
sbb
sub
lahf
outsb
in
jae
jns
sbbb
push
sbb
in
mov
xor
dec
insb
out
jmp
push
jle
rclb
sub
enter
cmp
mov
fnstsw
inc
aas
cmp
or
rorl
pop
and
hlt
mov
out
rcrb
mov
in
stc
inc
mov
xor
aaa
xchg
sub
cmpsl
jmp
dec
xchg
mov
mov
in
lods
outsl
cmp
adc
es
mov
roll
xchg
shlb
sar
into
scas
mov
dec
adcb
jecxz
jbe
scas
sahf
jo
dec
ja
in
dec
dec
pop
add
mov
ljmp
and
imul
sub
xor
dec
insb
cli
xchg
mov
outsb
mov
mov
inc
xor
inc
pop
inc
fimull
sub
mov
dec
popf
iret
push
cmp
inc
cmp
add
and
inc
mov
mov
add
push
lds
or
ret
mov
in
jnp
xchg
sub
cmpsl
jge
xor
push
mov
mov
mov
in
push
lcall
dec
jns
sub
insl
ficompl
movsl
mov
lock
xor
adc
lret
pop
push
incl
imul
xchg
popa
dec
lods
dec
out
xchg
push
out
add
fists
out
int
mov
adc
es
mov
jne
xor
mov
nop
and
xchg
arpl
rol
ja
movsl
xchg
mov
out
test
push
jecxz
mov
sbb
mov
adc
pushf
mov
jns
cmp
and
or
jle
xchg
jmp
imul
sbb
mov
cs
inc
inc
inc
out
xor
push
bound
cli
jl
push
leave
xor
push
mov
in
cmc
pop
fisubl
add
int3
jno
shll
or
jne
or
das
xchg
push
lahf
or
int
ffreep
xlat
adc
out
adc
mov
or
jle
dec
fidivrs
add
push
jne
addr16
xor
cmp
out
jb
out
add
inc
lods
stos
mov
in
jg
or
xchg
ss
xchg
iret
sub
or
jno
jbe
dec
jge
add
cmp
jge
push
paddsb
sbb
mov
test
in
outsl
cmp
or
xor
push
xchg
push
mov
jo
pop
rcrl
sarb
aam
xchg
xor
lea
cmpsl
fwait
cmc
lret
sub
pcmpeqd
adc
xchg
jae
enter
jae
imul
push
xchg
and
add
jno
push
fcomi
std
clc
mov
int
shlb
mov
dec
in
or
dec
pop
jno
pop
and
sbb
adcl
jnp
or
sub
mov
je
cmp
aaa
arpl
pop
cltd
push
jb
icebp
nopl
insb
or
xchg
stc
sbb
push
dec
mov
or
sti
call
adc
and
dec
mov
aam
mov
cmp
sbb
sub
xor
adc
mov
in
ljmp
outsb
or
scas
stc
xchg
pop
mov
hlt
stos
cmpb
dec
adc
inc
cmp
ss
int3
lock
jb
icebp
jp
out
cwtl
stc
arpl
cmp
xchg
cmpsl
cmpsb
mov
sub
ja
out
andl
lods
aad
fldcw
cmp
or
or
add
out
or
and
dec
add
adc
pop
jae
movsl
jmp
test
mov
outsb
cmpb
mov
xchg
mov
neg
fsubl
je
aas
mov
fsubs
xchg
and
ret
ds
js
sub
icebp
mov
std
cmp
mov
mov
cltd
mov
sbb
push
out
adc
lahf
outsb
inc
jns
pop
push
push
je
jle
mov
mov
ficoml
in
ret
mov
cli
add
push
mov
fs
negl
ud2
pop
imul
mov
jbe
shr
push
repnz
adc
stc
roll
xor
mov
mov
xor
js
push
dec
mov
push
jne
imul
push
bound
rcrb
cmc
adc
loope
leave
outsb
push
xchg
scas
aaa
mov
sub
mov
cmp
sti
scas
leave
xor
popf
test
in
adc
xchg
sbb
ja
fidivl
pop
repnz
ret
pop
xlat
lret
jno
fs
xor
shlb
inc
sbb
bound
in
popf
inc
icebp
adc
gs
xchg
jge
sbb
adc
lret
pushf
add
xchg
fs
sbb
insb
cmpsb
aam
push
push
sar
inc
xor
lock
and
push
or
jge
push
xchg
adc
rol
out
int
orb
shll
mov
jge
add
les
js
sbb
cmc
ret
add
inc
std
xchg
push
or
test
scas
jg
push
gs
mov
push
push
push
and
int3
push
ret
and
lahf
scas
movl
ljmp
adc
mov
dec
cltd
in
and
xchg
fwait
mov
out
sbb
jo
jae
mov
mov
xor
adc
lea
inc
or
push
dec
push
mov
out
dec
push
push
and
data16
outsl
xchg
ret
mov
inc
sub
in
clc
out
outsl
repz
inc
rcr
adc
cmc
cmp
rorb
lret
iret
cmpsb
or
clc
push
xchg
inc
cmp
add
adc
jecxz
jns
mov
rcr
xor
scas
pop
push
mov
jbe
cmpsb
cmp
xchg
inc
movsb
lods
mov
pop
pop
mov
out
cmp
mov
rolb
outsb
adc
rorl
icebp
pop
mov
out
dec
dec
and
or
mov
and
ret
jecxz
int
push
aad
mov
mov
mov
push
shrl
adc
and
jmp
lret
cld
test
frstor
dec
mov
in
daa
mov
xchg
pop
loop
out
lea
inc
sbb
out
mov
jmp
loope
xchg
out
inc
shll
mov
je
xlat
clc
and
repz
ret
rcll
imul
scas
mov
in
cwtl
out
inc
mov
rcrl
mov
dec
rclb
stc
or
push
cmp
aaa
mov
jge
xchg
cli
popa
and
push
push
cmp
fcoms
cmp
add
cmpsb
sub
ja
mov
hlt
push
out
addl
push
push
dec
adc
das
mov
or
cmp
xchg
dec
daa
lahf
jmp
pop
cmp
mov
sbb
mov
dec
xor
jne,pn
filds
or
pushl
lret
jmp
pop
mov
mov
inc
push
std
out
cmpl
jnp
cmpb
faddp
icebp
sbb
push
dec
add
push
xor
aaa
dec
sbb
fsubs
test
andl
test
adc
sti
xchg
rcl
push
xchg
bound
out
nopl
cs
push
push
jno
je
and
mov
fs
ljmp
popa
mov
inc
cmpsb
in
in
mov
outsb
xchg
push
push
cld
or
mov
inc
dec
sbbb
sahf
incb
lcall
das
mov
adc
jae
in
sub
es
adc
jno
jnp
movsl
mov
scas
stos
lea
clc
xor
adc
aam
fisubrs
mov
ljmp
sarb
ret
ljmp
or
je
dec
mov
loopne
cmp
popf
mov
pop
aad
insb
rorl
lods
or
repz
lock
ljmp
scas
jbe
ss
or
addr16
bound
aaa
xlat
mov
sub
loopne,pt
addr16
xchg
sarb
sub
pop
jbe
xor
les
ret
mov
adc
repnz
bound
sub
push
aas
push
mov
jmp
xor
test
jl
sbb
aam
test
dec
xlat
xchg
xchg
pop
js
nop
mov
hlt
fmull
adc
mov
loope
cmp
ret
mov
inc
lock
xlat
mov
ja
lds
data16
loope
sbbb
arpl
xchg
loop
loop
jmp
test
mov
je
xchg
inc
xor
and
cmp
dec
cltd
add
pop
add
mov
daa
or
or
cli
loope
dec
sahf
aaa
xor
jmp
adc
aaa
jp
pushf
xchg
shll
adc
mov
adc
inc
repz
adc
mov
outsb
and
pop
sbb
jno
repz
inc
out
or
sahf
pop
rorb
sahf
mov
pop
mov
cmc
ja
repz
arpl
pop
add
dec
hlt
jmp
loopne
scas
or
clc
lds
pop
sarl
inc
pop
push
es
stc
ss
inc
sub
scas
jg
in
mov
adc
mov
lahf
imul
lds
or
mov
and
inc
or
loopne
aas
pop
pop
fwait
xlat
iret
cmp
inc
rorl
cwtl
inc
sbb
dec
jg
out
out
cli
sub
pop
dec
cmpsl
xor
in
int3
lcall
or
mov
rorb
cltd
push
fs
pop
inc
add
sub
and
sbb
fwait
push
mov
jmp
pop
xchg
mov
inc
push
inc
aam
rorl
cltd
or
xchg
mov
stos
icebp
inc
outsl
enter
jnp
and
ja
xor
sub
inc
push
rcr
xchg
loopnew
add
inc
mov
mov
ds
ss
mov
dec
subb
push
imul
fucom
inc
mov
cmp
movaps
jl
outsl
fcomp
dec
mov
cltd
inc
dec
add
sub
jl
js
subl
push
cmpb
push
and
xchg
push
jmp
dec
jmp
scas
and
das
mov
out
icebp
cmp
mov
sbb
call
leave
adcb
dec
sbb
cmpsl
daa
jp
cmp
dec
in
popf
clc
push
pop
push
xchg
sub
addl
inc
iret
jmp
jg
js
pop
and
fst
rorl
ja
ja
cmp
pop
fisubl
mov
dec
sbb
sub
dec
or
inc
mov
adc
mov
add
nop
insl
hlt
insb
adc
pop
push
or
inc
bound
cmp
hlt
mov
mov
mov
xchg
or
dec
jno
mov
push
dec
xor
or
shrl
fcmove
inc
xor
push
js
mov
les
mov
xchg
lahf
lea
std
clc
dec
pop
inc
dec
jno
out
test
orl
call
cs
pop
xor
pop
test
adc
stos
lods
push
cmp
sbb
pop
inc
div
jnp
insl
dec
in
or
sti
ret
clc
ljmp
das
cmc
scas
ds
cmp
in
imul
xor
cmp
loop
and
or
or
adc
pop
inc
fnstenv
stc
mov
js
jle
dec
stos
pop
adc
jecxz
mov
out
and
jecxz
mov
or
or
test
dec
orb
xor
push
stos
push
repz
push
cmp
inc
sbb
pushf
cmp
pop
mov
xor
jb
or
push
sub
pop
clc
xchg
inc
hlt
mov
je
xlat
outsl
or
add
pop
nop
xor
mov
lock
xor
push
ret
push
push
mov
jl
and
frstor
test
sub
shll
setb
out
imul
ja
add
adc
jl
iret
test
cmp
add
out
js
ss
and
ljmp
push
add
lods
fsubrs
andb
xor
mov
and
dec
push
inc
mov
lahf
jmp
std
sbb
lcall
cmp
lock
pop
pop
stc
jno
jo
pop
xchg
push
adc
aam
sub
ja
lods
mov
fwait
mov
out
push
or
cmp
cwtd
shrb
cwtl
insb
jecxz
shll
mov
fistpl
loope
shrb
js
ds
daa
mov
orl
out
or
mov
xor
xor
adc
sarl
inc
inc
outsl
movsb
mov
aam
dec
shrl
dec
mov
sbb
popa
inc
or
es
iret
imul
ss
mov
pop
jne
xor
add
adc
xor
cmp
xlat
jl
push
jg
lret
xchg
pop
mov
jae
jle
inc
fs
xchg
lcall
or
adc
adc
xchg
mov
inc
add
sbb
adc
shlb
or
into
outsb
push
jnp
loop
aaa
mov
and
test
jmp
or
jmp
rol
dec
add
orb
lea
hlt
adc
mov
pop
lock
push
addr16
xchg
mov
hlt
lret
popa
fldl
mov
fstps
jle
cli
jo
push
add
cmpsl
push
cmpsb
jae
adc
jge
add
cmp
and
add
dec
mov
xchg
mov
mov
gs
fadd
or
in
or
shll
dec
repz
fsubl
dec
cwtl
mov
cmp
int3
pop
stc
mov
add
mov
ljmp
adc
adcl
gs
in
es
test
sahf
pop
mov
cmova
iret
xchg
push
mov
adc
outsb
or
cwtl
mov
push
mov
nop
push
test
sub
out
mov
push
fmul
xor
bnd
popf
jg
call
subb
pop
sbb
push
mov
stos
and
arpl
and
jne
lret
sti
xchg
push
push
aaa
jle
mov
enter
out
pop
std
pop
mov
sahf
decb
push
iret
mov
aaa
stos
fcmovnbe
sbb
or
sti
subl
inc
xchg
rorl
imul
pop
repnz
inc
push
pop
idiv
mov
sahf
sbb
add
ss
sub
cmpsl
loope
sub
fcoms
cli
loop
mov
int3
ja
sbbl
test
pop
popa
xor
loopne
leave
mov
pop
mov
rorl
dec
ficoms
es
or
jnp
in
jae
and
pop
xchg
mov
daa
jo
sahf
pushf
ret
call
rclb
hlt
mov
fwait
shlb
aam
pop
lcall
jg
pop
dec
jnp
les
loop
cwtl
orb
xlat
lea
nop
int
inc
xchg
push
int
pop
and
test
inc
dec
gs
dec
shr
xchg
pop
or
push
movsb
stos
or
int3
jecxz
jle
es
xchg
jecxz
jo
popf
stc
xor
stos
adc
rcl
inc
loope
inc
loopne
movsb
clc
sub
das
push
pop
ss
imul
stc
enter
cwtl
sahf
dec
add
mov
sbb
fmuls
fidivrl
ret
aam
andl
out
sub
mov
xor
jp
out
cs
add
sbb
fadds
std
dec
jae
or
ss
ja
fisubs
inc
pop
xor
cltd
mov
cmc
adcl
xchg
lret
inc
push
push
sarl
adc
sub
das
xchg
inc
ret
imul
xor
imul
jb
stc
int3
xchg
imul
cmpsl
or
repz
or
xlat
cmpsl
adcb
xor
mov
jle
push
test
and
cmpl
pop
imul
sbb
sub
sub
jb
aad
mov
loopne
mov
inc
or
hlt
jmp
sbb
dec
sahf
movsl
in
pop
mov
or
negl
dec
xor
push
push
pop
xchg
dec
xchg
add
mov
mov
mov
das
or
xchg
sub
push
les
inc
jmp
jne
add
aas
gs
pop
repnz
mov
or
xor
xor
inc
mov
push
jmp
pop
jl
sbbl
xchg
pop
xchg
loop
xchg
insl
cwtl
stos
ret
xor
mov
sbb
add
jge
adc
xchg
enter
xchg
inc
mov
pop
fcompl
in
and
inc
mov
or
or
aam
inc
and
fisttpll
fiaddl
testl
stc
pop
arpl
fs
fs
add
cltd
mov
inc
xor
jno
test
jae
inc
pop
ds
cmpsl
out
xchg
inc
sahf
mov
mov
lcall
jne
mov
jb
in
test
xchg
or
mov
adc
in
loope
add
into
rorl
sub
shlb
scas
dec
pop
lea
and
sub
and
mov
xor
jne
iret
inc
cmpsb
popf
rcrb
add
sbb
idiv
mov
aaa
dec
mov
cwtl
and
or
jecxz
sbb
icebp
jmp
leave
or
and
pop
or
cmp
and
or
dec
jb
in
cltd
dec
hlt
popf
mov
cmp
ret
and
cs
ds
dec
lds
pop
xchg
inc
mov
shrb
add
mov
lock
stos
xchg
cmp
sbb
call
daa
lcall
mov
mov
outsl
and
jg
add
pop
aas
loop
jg,pt
fldpi
outsb
jb
ss
xchg
mov
pop
sbb
int
int
jmp
nop
shll
fldl
cmc
mov
mov
mov
pushf
int3
in
cs
ss
lds
int3
incb
and
dec
sbb
lds
sub
addb
mov
outsb
sub
pop
inc
jbe
lds
xorb
sub
je
mov
loope
cmp
pushf
sbb
dec
fildl
lea
sti
push
mov
lahf
les
push
pop
stos
push
dec
in
xchg
dec
xor
sub
xchg
bound
xor
add
cmc
test
pop
hlt
sbb
xchg
in
mov
pop
jge
or
imul
pop
push
jg
xchg
cld
jbe
cli
jnp
pop
jb
aas
dec
adc
mov
cmp
aad
inc
arpl
inc
xlat
xchg
dec
adcb
sub
add
pxor
cmp
jo
mov
shlb
mov
clc
jge
jnp
adc
cli
shlb
jbe
shrb
aad
and
xor
loop
dec
xor
inc
mov
xor
inc
insl
adc
inc
sub
mov
stc
imul
loopne
fwait
adc
je
and
lock
or
inc
add
dec
fcompl
pop
or
mov
fildll
adc
fdivs
addr16
leave
cmpsb
mov
cltd
out
std
xchg
cmp
sub
push
clc
out
xchg
iret
clc
dec
dec
aas
cmpsb
pop
jge
push
fwait
outsl
addr16
sbb
mov
scas
ret
and
jno
dec
testb
shr
in
mov
lock
adc
mov
or
repz
mov
pop
dec
fdiv
aad
sahf
push
adc
xchg
and
aam
outsb
mov
sub
aad
into
insl
add
lods
mov
add
shrb
jo
sti
inc
mov
push
fmul
aad
jne
mov
inc
sbb
dec
jo
fisttps
sub
push
add
popf
ljmp
adc
mov
and
mov
inc
pushf
data16
cmp
xchg
or
clc
iret
mov
push
mov
xchg
inc
testb
bound
push
add
jbe
testl
push
imul
fsubr
sub
test
xlat
ret
stos
cmp
dec
push
icebp
sbb
daa
xchg
imul
mov
loope
jle
out
int
lahf
movsb
push
shlb
imul
cmpsl
or
push
out
mov
add
out
cmp
das
setb
test
into
fcmovb
cmpsl
pop
dec
pop
adc
lret
pop
loope
shrl
inc
adc
jns
mov
add
jae
lea
jb
leave
jbe
icebp
inc
push
dec
nop
or
ret
outsb
jecxz
insl
inc
push
jo
add
cmp
push
daa
cltd
or
inc
inc
call
sbb
out
jp
dec
cmp
subb
jns
mov
xor
lahf
fwait
lahf
and
xchg
xor
insb
popa
cs
cwtl
push
cmp
les
arpl
xorps
shll
hlt
rcll
hlt
inc
cmp
pushf
add
fdivs
clc
xor
pusha
push
in
inc
scas
sub
inc
inc
insl
fistpll
ss
insb
or
or
mov
xchg
push
jmp
pusha
or
je
sbb
shl
lods
fisttpll
loopne
dec
insl
inc
mov
cmp
and
xchg
mov
scas
sub
push
fsubp
clc
xchg
repz
jmp
fiadds
daa
mov
clc
dec
pop
adc
jo
xor
aaa
adc
cs
fwait
xchg
mov
lahf
cmpsb
cmpsb
mov
dec
aad
cmp
sbb
ss
pop
fimuls
cwtl
pop
push
sbb
enter
jbe
mov
adc
mov
push
and
lret
and
movsb
push
push
sub
cltd
fildll
scas
cmp
cmp
hlt
fcmovnb
add
cmp
sub
xor
lret
fadds
in
dec
loope
xor
test
repnz
lret
mov
cli
pop
jg
nop
pop
or
scas
pusha
lock
xchg
mov
cmp
scas
jno
push
dec
cmp
xchg
jp
out
lret
adc
pushf
dec
addr16
jne
and
cmp
fistpl
pop
adc
sbb
leave
into
icebp
sbb
jns
or
push
arpl
jmp
insl
xchg
pop
cmp
and
pop
pushf
sbb
push
adc
mov
out
mov
sub
js
out
add
mov
lods
iret
fstl
jp,pt
rorb
lret
in
jg
push
js
add
mov
pop
xor
xor
xchg
into
add
lret
mov
setb
dec
test
imul
testb
xor
push
popf
xchg
or
add
rorb
jns
xchg
enter
test
adc
xchg
in
xor
cmc
and
gs
mov
out
shll
xchg
xor
push
push
jl
xorl
testl
out
mov
push
loope
loop
stos
jg
mov
pusha
jmp
clc
les
arpl
in
shl
sub
xrelease
cli
pop
lret
xchg
and
hlt
cmp
out
xchg
hlt
cmp
lds
jge
add
sar
loop
les
inc
add
mov
pop
fdivrl
xor
out
cmp
xor
int3
scas
and
jg
inc
movsl
imul
hlt
fcmovb
inc
in
pop
aam
add
pop
pop
cltd
ja
cld
js
shll
ljmp
lea
jne
xchg
mov
lock
into
jb
stc
jo
mov
inc
push
dec
int
shlb
inc
adc
outsb
lret
mov
bt
movsl
shll
mov
add
mov
js
adc
scas
outsb
jmp
shl
les
xor
mov
adc
int3
inc
mov
and
inc
ljmp
outsb
stos
or
xchg
adc
lea
iret
jl
cwtl
mov
in
push
cmp
and
push
and
mov
test
scas
add
jb
or
fmull
pop
push
push
leave
inc
movsl
push
int3
pop
stos
mov
jae
icebp
mov
movsl
xor
lods
sub
push
jae
fbstp
lock
mov
movw
mov
into
cmpb
pop
jmp
std
mov
push
fsubrs
xchg
inc
sub
ss
fwait
test
jmp
sti
imul
mov
hlt
mov
sbb
stos
pop
pop
jns
in
jl
pop
movsl
out
dec
pop
popf
js
frstor
fcoml
jle
cld
enter
ret
test
add
push
or
enter
lret
sbb
jno
push
mov
scas
outsl
jg
jne
xchg
aas
mov
fnsave
ret
mov
ficoml
and
out
mov
xor
xor
and
mov
adc
nop
bound
sub
test
fcmove
inc
jbe
test
sbb
repnz
stc
sbbl
xchg
inc
movsl
fucomip
and
adc
push
insb
sub
jno
adc
dec
add
mov
jb
xchg
out
fwait
xchg
add
outsb
cltd
arpl
sbb
mov
sti
sub
pop
mov
jecxz
inc
and
jg
lea
cmp
mov
cmc
iret
xchg
mov
dec
inc
fstpl
push
bnd
outsb
repz
pop
shr
data16
sahf
cs
cs
and
test
stc
cmp
jmp
mov
out
jl
addb
std
int
lea
mov
loop
sarl
and
sbb
cltd
xor
in
pop
popa
adc
outsb
and
aad
ljmp
cltd
adc
jae
out
xlat
fidivl
cmc
ret
pop
and
fisubl
sarl
mov
mov
add
pop
mov
fldenv
out
mov
adc
out
sbb
xor
mov
bound
pushf
rclb
push
jp
movsb
iret
mov
pop
push
loopne
lahf
cs
or
sub
sub
imul
pop
daa
scas
pop
xchg
or
das
insl
push
imul
addr16
inc
sti
xor
or
pop
loopne
leave
fcmove
stc
cmp
ljmp
out
addl
in
es
lahf
cld
cmp
cmpsl
sbb
adc
cmp
push
cwtl
push
je
aaa
add
ficompl
dec
mov
rorb
cmc
or
or
shlb
mov
repz
mov
mov
pop
lods
sbb
cmp
xchg
lcall
inc
insl
push
xor
scas
loop
push
aam
pusha
xchg
pusha
xor
fists
leave
mov
adc
mov
mov
das
orb
xchg
and
adc
cmp
mov
cmpl
sub
data16
xor
outsb
jl
fimull
scas
scas
int
sub
jne
out
and
sub
push
mov
fldt
leave
cmp
lcall
in
cmp
mov
push
ret
xchg
call
pop
rcrl
nop
push
jp
inc
popf
push
cmpsl
jbe
ds
ljmp
or
lea
mov
js
or
inc
test
mov
leave
xchg
gs
int3
pop
push
call
dec
inc
loopne
movsl
xchg
addr16
push
inc
xor
insl
mov
add
push
xor
pop
call
mov
adc
leave
push
iret
mov
inc
cmc
adc
mov
jno
stos
mov
or
sub
mov
mov
out
inc
addr16
pop
out
inc
fs
jne
sub
sbb
movsb
sub
xchg
mov
mov
or
pop
xor
lods
ret
test
or
imul
add
jb
scas
es
mov
int3
dec
outsl
jnp
mov
mov
sbb
mov
adc
inc
xchg
or
sbb
je
pop
test
bndldx
rorl
sbb
pusha
jge
xchg
movsl
or
fimuls
and
mov
test
push
lds
repnz
jmp
push
dec
xchg
pop
adc
lea
mov
cmp
adc
pop
in
in
jne
sbb
xor
pop
add
or
lcall
mov
lds
or
pop
adc
mov
or
cmp
mov
cs
cmc
fdiv
out
or
and
inc
jns
js
gs
inc
aam
fs
call
hlt
push
push
mov
loop
jbe
sbb
adc
jmp
jmp
cmp
pop
sbb
pushf
imul
popf
jecxz
cmp
inc
test
xchg
shll
addr16
dec
push
fs
es
adc
inc
and
inc
pop
push
adc
add
ljmp
cmp
xor
data16
jl
addr16
dec
int
sbb
or
xor
xor
sbb
fcomps
or
xor
mov
sti
pop
add
inc
adc
add
call
dec
lret
imul
repnz
cwtl
fnstsw
inc
mov
dec
jle
push
out
mov
ficoml
jmp
lret
shl
dec
aad
mov
cmp
in
imul
push
add
inc
popa
sbb
fdivl
cli
mov
movsl
dec
shll
inc
fdivl
std
pop
inc
pop
popa
repz
and
fcoms
fildll
das
test
stc
ret
adc
in
stos
mov
hlt
fdivr
and
addb
adc
dec
cli
adc
pushf
xchg
aaa
in
lock
hlt
fdivrl
pusha
dec
xor
test
das
sahf
divl
mov
xor
cmp
jg
add
jmp
sarl
sub
xchg
arpl
or
inc
out
lcall
rcll
cmp
or
lret
xchg
adc
inc
test
mov
push
lods
and
cld
adc
xor
fsubl
cmp
jae
leave
push
jb
in
shll
int3
sbb
rcrl
out
xor
in
test
mov
dec
mov
or
ret
jo
xor
add
cmpsb
jo
cmpb
push
rcrb
sti
or
sbb
mov
pop
out
in
inc
pushf
sub
xor
stos
xchg
lock
fbld
popa
pusha
int3
out
mov
popf
mov
mov
fld
mov
nop
addb
flds
adc
xchg
cmp
mov
add
sahf
roll
adc
xor
mov
movsl
ss
adc
mov
dec
es
mov
mov
cmpl
fisubl
lahf
test
xlat
and
push
pop
lock
adc
stos
xchg
adc
jle
pop
out
cmp
and
push
cmpsb
adc
fnstsw
fildll
dec
dec
jne
pop
pop
test
movsl
sbb
cs
mov
stos
pushf
dec
mov
aaa
add
insb
popf
movsb
jge
jnp
pop
cwtl
ja
decb
loopne
inc
mov
iret
dec
in
int3
shl
das
xchg
sbb
jl
add
imul
or
rorb
cmp
xchg
call
and
stos
add
out
mov
dec
mov
xchg
cmp
xor
xor
mov
dec
cmp
mov
push
xor
pop
xchg
jmp
mov
dec
das
in
lock
pop
fbstp
jl
sub
xor
je
sbb
clc
das
stos
iret
insb
nop
rorb
inc
test
fs
wrmsr
xlat
dec
push
mov
cmp
dec
mov
lcall
outsl
or
sub
hlt
ret
adc
and
pop
insl
sarb
mov
test
cmp
fistl
and
loop
aam
es
fwait
sbb
sti
rep
pop
mov
lea
push
mov
push
movsl
push
and
push
orb
das
leave
fildll
dec
pop
jnp
pusha
mov
enter
cmpsl
push
lret
insb
sbbb
jp
xchg
xor
lds
mov
loop
lret
mov
xor
sbb
add
aas
das
sub
stc
adc
mov
cwtl
iret
and
rorl
out
jb
cmp
and
jns
rcrb
sbb
cmp
popa
inc
fnsave
insl
or
sbb
scas
or
xchg
sub
loop
bnd
addr16
test
testl
dec
imul
std
cmp
decb
out
hlt
jle
dec
jne
hlt
jl
aaa
es
nop
mov
lcall
out
pminsw
mov
stc
ror
jecxz
ds
dec
mov
test
enter
movsb
add
jg
add
shlb
in
addl
les
push
add
inc
mov
mov
jp
xchg
out
push
js
and
fcmove
addr16
sub
movsl
jno
stc
lock
lds
xchg
cmp
mov
movsb
pop
in
loope
shld
push
jle
mov
icebp
cmp
mov
jns
rcrb
lock
repnz
sbb
into
push
cmp
stos
jb
out
lcall
pop
jno
mov
jns
push
pushf
xchg
ss
xchg
inc
addr16
je
or
bound
xor
out
mov
xchg
andb
inc
jae
dec
pop
outsb
ljmp
inc
pop
cmp
test
aas
xor
sahf
cli
test
mov
mov
mov
in
cli
lret
inc
shr
cwtl
std
sub
jno
leave
fadds
in
ss
adc
or
aas
push
test
daa
push
mov
arpl
scas
dec
mov
je
and
adc
scas
cltd
or
xor
jno
inc
inc
jle
shll
enter
mov
arpl
jns
or
arpl
pushf
fldcw
stos
cmc
lock
insb
mov
mov
mov
pop
jmp
outsl
adc
jbe
lret
push
arpl
inc
and
mov
jl
cmp
hlt
lock
pop
inc
loop
test
repz
out
sub
out
clc
mov
inc
ds
adc
lea
imul
push
mov
xchg
adc
pop
mov
jg
push
cmp
xchg
scas
fildl
pop
jecxz
add
bound
mov
rclb
outsb
inc
adc
xchg
sbb
push
pop
rcll
es
inc
mov
xor
push
cmp
gs
out
mov
out
fsts
lods
loopne
imul
and
fsubl
addl
out
xchg
out
inc
push
mov
popa
mov
xchg
cmc
inc
cmp
lock
dec
out
adc
insl
dec
jbe
icebp
divl
dec
jge
pushf
mov
cmc
test
aaa
push
jecxz
jb
and
jb
es
xor
pushf
test
js
insl
dec
orb
mov
inc
sub
repnz
cmp
or
lahf
cmpsl
inc
inc
insb
jmp
mov
xchg
out
add
lahf
or
pop
pop
mov
cmp
inc
loop
ja
inc
dec
std
inc
les
inc
jmp
movl
xor
mov
ret
cmp
xor
mov
insb
cmp
mov
adc
loopne
mov
or
or
loope
test
xor
dec
jbe
loop
fnstenv
int3
push
lcall
xor
mov
je
push
mov
jns
dec
sub
lret
outsl
fwait
add
dec
arpl
dec
adc
dec
and
je
cmp
mov
and
into
rcr
mov
xchg
fcmovnb
jg
push
pusha
cmp
rsqrtps
mov
mov
incl
ret
inc
adc
adc
into
pop
loope
arpl
cs
rorb
mov
adc
gs
daa
aad
lcall
xchg
xchg
jg
inc
inc
cld
xchg
dec
and
xor
fdivs
lds
sarb
stos
shr
and
dec
mov
repnz
in
stos
push
jb
push
push
fcmovnb
xchg
sbb
into
mov
mov
xor
leave
xor
cmp
enter
mov
add
xchg
fwait
es
mov
add
insb
idiv
jge
ss
es
mov
inc
push
xchg
push
cltd
fs
sbb
ds
cmp
push
insl
mov
insl
jecxz
xor
mov
push
das
push
std
cmp
stos
testb
add
xor
fwait
pop
es
mov
xchg
movsb
sub
mov
adc
and
fucomp
and
pop
sbb
out
shrl
adc
mov
shlb
and
sub
js
scas
sahf
inc
xor
cwtl
test
arpl
push
xor
lret
pop
or
out
cmp
cmp
push
mov
xor
pop
pop
jne
rcll
xchg
cli
movl
mov
add
lock
inc
push
pop
in
fisttpl
fisubl
sub
shrb
call
mov
pop
pop
mov
icebp
cmp
sub
outsl
mov
push
clc
and
sub
ds
ret
mov
add
xchg
mov
dec
fnsave
cmpsb
xchg
push
and
add
lods
call
lret
lock
push
xchg
or
inc
push
dec
fwait
outsl
mov
xchg
lods
js
mov
pop
dec
or
das
mov
std
xchg
fcomip
inc
or
and
add
and
xor
push
das
inc
pushf
fwait
xlat
mov
push
clc
addl
roll
jne
out
mov
int3
xchg
negb
dec
dec
mov
scas
and
stc
bound
jle
xchg
shrb
pop
and
xor
mov
xchg
push
lret
jne
push
xor
jb
fbstp
mov
cs
or
ja
push
xchg
mov
popa
or
loope
and
and
adc
ret
sub
mov
jns
add
mov
lahf
mov
testb
mov
push
aaa
es
and
sub
dec
dec
in
xlat
push
popf
add
xchg
ljmp
clc
sbb
mov
je
xchg
mov
repnz
les
loopne
push
in
cmpsl
testb
sub
mov
stos
cmp
and
cmp
cmp
dec
std
rclb
and
cltd
insl
cmp
mov
insb
imulb
xchg
shrb
sub
pop
cltd
and
inc
push
icebp
mov
xor
lret
iret
inc
sub
aad
cmp
sbb
cmpsb
shr
repnz
or
cmp
cmp
bndstx
aaa
loopne
aam
pop
js
mov
repnz
jno
pop
cmp
lret
and
in
push
aad
int3
test
ds
lret
rorb
in
lret
dec
repz
jb
incb
jo
js
mov
mov
cmpsl
sub
xchg
cmpsb
and
mov
sahf
cmp
arpl
lret
pop
cmpsl
idiv
inc
or
loope
jmp
inc
mov
jmp
jo
fistl
jne
shll
nop
inc
dec
icebp
in
lret
loop
out
mov
mov
mov
cmp
scas
sub
int3
out
inc
adc
mov
inc
jne
gs
outsl
aas
fcom
in
sub
mov
popf
daa
loope
mov
sbb
xchg
mov
in
sbb
cs
insl
push
or
hlt
mov
mov
pop
es
cltd
sahf
xchg
inc
sbb
out
push
and
mov
fistps
mov
jbe
xor
or
andl
sub
aam
mulb
mov
sbb
popa
adc
lods
cmp
dec
push
add
sbb
fstpl
jmp
or
mov
inc
xchg
and
cmp
jp
repz
mov
enter
or
mov
hlt
cmpsb
inc
or
mov
aas
es
out
inc
jecxz
xlat
mov
insl
mov
jae
mov
or
push
cmp
pop
dec
shrb
test
insb
mov
mov
pop
pop
or
mov
test
pop
sub
mov
lods
aas
fdivp
xor
pop
xchg
rol
imul
xor
push
push
push
fsubrl
sbb
leave
push
inc
xchg
xor
sub
daa
es
outsb
aad
stos
or
fsubrs
mov
xchg
enter
in
addr16
pop
xchg
inc
mov
popl
dec
out
dec
scas
mov
test
cld
es
in
add
sti
push
add
pushf
out
ljmp
adc
cltd
mov
rclb
xorl
test
pop
mov
xor
xor
cmc
mov
lret
pop
mov
and
inc
adc
fdivp
jbe
sub
es
inc
adc
lods
sub
call
lds
lods
in
ss
jb
add
add
pusha
out
sbb
ss
pusha
jle
push
mov
mov
shll
ficoms
pop
in
andl
lods
and
push
and
roll
mov
cltd
scas
out
roll
pop
xor
cmpsl
add
js
or
sti
mov
and
cmp
cmp
lahf
mov
jno
orb
cmpsl
jno
pop
or
push
and
dec
daa
ja
mov
cs
dec
scas
pusha
add
dec
cmp
pop
push
or
les
fldl
adc
push
clc
inc
add
push
inc
in
hlt
lcall
dec
sbb
clc
daa
sub
imul
cld
mov
push
sbb
lods
sub
ret
rorb
in
cmp
add
jno
cld
push
mov
push
pushaw
sahf
lods
or
sub
jne
int
inc
imul
fnstenv
adcb
std
out
pop
mov
jg
bound
jns
stc
lds
add
sbb
std
dec
lcall
mov
xchg
nop
or
jecxz
ja
test
pop
push
sub
rcrb
dec
sub
outsl
insb
jno
lret
rcrb
movsl
xchg
xchg
sbb
outsl
test
jo
aam
pop
inc
comiss
pop
sub
adc
sbbb
cwtl
popa
adc
enter
sbb
mov
cmp
mov
mov
xor
mov
add
push
inc
ficoml
clc
sub
xor
xchg
lcall
add
sahf
dec
xor
ss
mov
dec
mov
repz
scas
push
dec
jp
lahf
push
inc
pushf
push
shrb
and
repz
sub
cmpsb
adc
popa
pop
mov
pop
lea
cli
or
jno
icebp
lret
or
in
and
push
xor
call
in
inc
and
mov
int3
mov
addr16
mul
push
clts
std
loopne
andl
mov
and
sbb
insb
dec
rcr
test
loopne
or
pop
inc
dec
jnp
mov
sbb
stos
inc
mov
push
imul
pusha
ss
or
pop
fidivrl
lret
rolb
cltd
jo
xchg
mov
imul
les
dec
test
test
int3
jo
fdivr
xchg
push
addr16
or
mov
fsubs
js
sti
jg
sub
or
mov
pushf
imulb
ss
hlt
adc
mov
pop
ss
sub
pop
push
test
les
popa
inc
and
xor
aas
sbb
mov
clc
mov
ds
xorl
fsubrl
cmp
sbbl
in
out
add
imul
mov
adc
push
add
inc
mov
pusha
sbb
jmp
mov
pop
and
and
jecxz
or
andb
imul
sarb
sti
in
scas
sbb
sub
xor
mov
push
xor
bound
pop
sbb
mov
or
mov
daa
int3
inc
dec
test
or
aas
pop
mov
iret
xchg
stos
sub
jbe
stc
jbe
xchg
push
test
stos
sub
int3
loop
ljmp
and
pop
sti
and
aam
jb
ret
pushf
addr16
mov
je
aas
dec
or
testb
or
mov
fsubrl
inc
add
jne
push
testl
lret
jecxz
mov
push
lods
ss
mov
in
loopne
idivb
jge
scas
sbb
cmpsb
outsl
or
sub
divl
stos
insl
lods
test
pop
sub
repnz
mov
jmp
push
in
ds
adc
es
mov
hlt
push
es
jmp
popf
pop
inc
int
andl
fcmovnb
sbb
cltd
imul
arpl
mov
xor
add
pushf
jmp
pop
mov
imul
shll
not
push
aam
mov
adc
cmpsl
fbld
pop
sbb
lret
inc
movsl
mov
lock
ret
add
jno
pop
scas
in
sti
dec
push
xchg
call
mov
ret
mov
lds
cmc
icebp
je
jne
pusha
sarl
repz
add
and
push
scas
popa
les
imul
cmpsb
ja
inc
jmp
add
and
sarb
scas
xchg
aad
popf
jno
es
stc
or
mov
sbb
mov
and
scas
sub
sbb
std
aaa
ret
or
aaa
xor
pop
test
or
jg
add
ret
pushl
mov
imul
scas
data16
push
fs
lea
sbb
arpl
inc
repnz
mov
cld
add
sbb
xor
or
jle
fcos
mov
stc
jmp
icebp
pop
arpl
aam
popf
dec
insb
mov
push
xchg
lea
out
mov
scas
dec
and
or
out
mov
int
fucom
xlat
rol
std
fstenv
push
ljmp
out
and
xchg
cmp
loopne
ret
mov
in
xor
imul
leave
fisttpll
jbe
jle
fnstsw
xlat
stc
jnp
inc
in
xchg
cmp
icebp
jecxz
or
sarl
dec
jne
in
fcomps
pop
sub
testl
das
push
lcall
ret
ds
mov
pop
pop
inc
mov
dec
aad
inc
inc
call
mov
cmp
pop
pop
push
arpl
and
mov
les
insb
addr16
jecxz
xor
dec
inc
jmp
ret
in
push
lock
scas
push
lret
test
addr16
iret
fxch
sub
xor
inc
imul
repnz
add
ret
or
pop
jle
xor
xchg
popf
test
addr16
arpl
push
xor
ds
inc
pop
sbb
cmc
adc
outsl
push
fsubr
ds
clc
jg
popf
icebp
sbb
jbe
adc
test
mov
or
push
pop
in
and
sarl
lret
cltd
mov
lret
lock
sti
iret
lahf
test
cmp
push
inc
mov
insl
xchg
dec
gs
test
sbb
arpl
xchg
cmc
and
repz
testb
and
hlt
add
stos
mov
icebp
or
xor
push
shl
cmp
shll
dec
in
or
movsl
shl
sbb
inc
push
cmp
out
popa
xchg
jo
adc
push
sub
add
mov
inc
adc
gs
dec
and
cmp
pop
jge
mov
divl
js
inc
push
sub
pusha
rcrb
rorl
loope
lret
insl
jmp
pop
scas
inc
inc
enter
leave
mov
lea
gs
push
add
add
xchg
lret
and
adc
ret
jne
pusha
xor
in
jno
cmp
cmp
daa
out
and
xchg
sbb
sub
mov
cmp
inc
stc
jmp
inc
adc
out
push
in
daa
aad
testl
pop
repz
arpl
cmc
xlat
in
inc
imul
icebp
out
shll
rolb
fdivrl
sub
adc
movd
popf
cmpsb
mov
jb
addr16
dec
push
sbb
push
shlb
cmp
push
mov
insb
add
dec
rcrl
fwait
notb
sbb
ss
rcrb
mov
icebp
sbb
loope
xor
nop
add
insl
cltd
push
mov
decl
mov
outsl
es
sbb
push
repnz
in
cltd
inc
jg
lahf
sar
and
call
iret
pop
test
fistl
and
mov
cs
dec
dec
ret
cmp
jb
push
cmpb
gs
add
imulb
jg
dec
ret
jo
cmpsl
les
xchg
add
fsubrl
cld
in
or
push
cmc
icebp
aad
push
into
repz
mov
cmp
test
dec
inc
hlt
clc
and
xor
ret
popa
int
and
clc
imul
pop
mov
adc
mov
mov
shrb
stos
icebp
scas
sahf
std
pop
scas
dec
sbb
xor
ror
cwtl
idiv
insl
je
test
sub
lahf
or
popf
dec
jno
push
test
movl
mov
jbe
ret
dec
push
or
xlat
cmp
pop
sub
mov
in
rcl
stc
inc
iret
mov
sub
mov
adc
ljmp
outsl
loope
pusha
adc
lods
add
sub
hlt
shrb
jnp
cli
out
cltd
leave
out
mov
add
sbb
push
leave
adc
jns
test
jbe
mov
push
lret
lea
mov
ja
adc
call
or
lahf
fidivs
aam
lret
adc
push
xchg
out
cmp
dec
ret
in
pop
repz
mov
insb
cmp
or
repz
into
js
pushf
popf
ds
inc
push
lods
popf
imul
mov
adc
pop
sub
and
and
push
xlat
out
mov
xor
aam
mov
jmp
not
dec
dec
cmpsl
test
xor
cwtl
fisttpll
jmp
sub
mov
xchg
cmp
pop
std
mov
xchg
jmp
stos
mov
xor
bound
jne
and
push
jmp
stc
pop
std
push
inc
outsl
mov
push
mov
lahf
js
xchg
test
cli
push
mov
or
out
imul
aaa
shr
imul
adc
pop
adc
fnsave
imul
add
lret
sbb
outsb
mov
das
call
fs
out
or
loopne
adc
dec
jno
mov
xchg
stc
ret
cmp
repnz
mov
ss
lock
cmc
std
xchg
mov
fadd
mov
jp
mov
jne
mov
outsb
mov
sub
insb
popa
jle
adc
loop
adc
movsb
stc
mov
leave
arpl
iret
addr16
fstl
adc
and
in
cmp
inc
ret
stos
mov
sub
xlat
ja
add
inc
cmpsb
js
jno
pushf
push
add
dec
sub
dec
test
mov
sbb
js
dec
or
push
mov
jns
dec
sbb
outsl
inc
int3
push
push
mov
ja
fiaddl
xchg
imul
xchg
ljmp
mov
pop
cmpsb
popf
pop
repz
jno
jbe
call
dec
adc
nop
jae
mov
out
inc
jg
and
add
fstpl
movsb
repz
add
sub
movsb
sbb
cmc
jecxz
add
inc
movsl
pop
jp
add
imul
cmc
out
cmp
sahf
nop
negb
in
les
inc
jns
addb
addr16
xchg
jmp
decb
adc
xor
repz
xchg
jns
fsubs
mov
add
xchg
loope
push
imul
jno
mov
mov
adc
lea
push
mov
push
scas
insl
inc
shlb
and
js
and
sub
aad
inc
push
jne
divb
lret
sub
cli
lcall
out
add
ret
jmp
orb
icebp
imul
out
hlt
loopne
aas
jo
cmp
or
sbb
bound
or
movsl
inc
or
int3
jge
cli
sub
in
xchg
push
cmc
in
jg
and
push
xchg
cmp
loope
test
sti
outsb
xchg
out
icebp
pop
or
push
and
xorb
push
push
imul
inc
insb
test
lcall
insl
push
fcmovbe
int
pusha
into
mov
sbb
sbb
push
out
mov
out
push
popf
dec
dec
push
cmpsb
daa
mov
bnd
std
int3
mov
push
inc
in
inc
sbb
sbb
in
or
pop
icebp
imul
pop
jmp
jns
or
push
mov
xchg
inc
lret
and
or
out
mov
dec
jmp
testb
test
fcomps
cs
pusha
insb
jmp
sub
or
xor
aaa
lods
sti
outsb
sar
lea
cmpsl
sub
pop
lret
xlat
jns
dec
inc
fstpl
bound
enter
mov
xor
leave
int
push
and
adc
adcl
or
cwtl
cs
addl
adc
cmpl
imul
add
xor
add
sub
pushf
roll
cmpl
xchg
jb
pop
xchg
inc
jno
icebp
ret
push
jns
jno
out
je
jp
sbb
mov
arpl
add
and
cmpsb
into
jnp
mov
jne
dec
call
mov
arpl
out
icebp
je
shl
pop
mov
nop
mov
lahf
jle
movsl
es
and
test
xchg
xchg
jns
nop
cmc
push
dec
sbb
mov
xchg
push
loopne
test
roll
andl
inc
int3
into
jo
das
jns
cmp
adc
fnstcw
sub
fwait
sub
inc
shrb
push
sbb
jae
push
ds
or
add
lea
jo
inc
push
cmp
adc
cmp
fwait
shl
jecxz
cld
push
dec
into
dec
rolb
dec
lahf
pop
pop
sarl
bound
sbb
dec
xchg
aam
pop
leave
rolb
imul
popf
popa
repz
scas
cmp
je
mov
and
repz
repnz
in
jnp
inc
cltd
call
pop
dec
repz
insl
or
mov
icebp
xor
dec
addr16
sub
enter
mov
cmp
push
cmc
in
dec
fwait
pushf
push
inc
push
iret
into
mov
jmp
fdivr
call
push
nop
cltd
mov
insb
lds
test
sbb
xchg
mov
es
into
fdivs
xor
mov
pop
push
mov
jle
jge
jecxz
loopne
xchg
sahf
mov
and
stos
negb
mov
je
pop
pop
pushf
dec
lcall
decl
sbb
sub
test
out
lods
sbb
xchg
inc
inc
or
sub
fucomp
ja
jo
addl
scas
insb
mov
sub
adc
popa
mov
or
xor
jns
lea
lcall
push
repz
jg
cmp
and
sti
out
jle
mov
aas
jecxz
xchg
in
pop
mov
pop
ss
and
mov
add
mov
mov
shlb
subb
adc
adc
gs
push
lcall
sti
loop
enter
cmc
sub
sub
lea
testl
clc
jb
pop
lret
xchg
gs
outsl
xchg
stos
push
lods
sbb
pop
shll
pop
pop
mulb
sub
xchg
pop
sbbb
dec
mov
fsubr
push
inc
push
shll
mov
mov
dec
push
idivb
adcb
cwtl
cmp
push
lahf
jl
cmp
pop
and
sbbb
lret
pushf
and
dec
or
adc
and
inc
sub
push
xor
notl
imul
repz
cmpsb
push
je
ljmp
addl
imul
ljmp
arpl
js
out
xor
push
pop
sub
fidivs
in
lahf
aas
fsubs
mov
xor
fs
cli
push
xor
sarb
mov
push
leave
mov
clc
mov
mov
mov
jo
fisubrs
add
test
test
ljmp
push
push
jg
movsl
inc
xchg
xchg
push
dec
leave
enter
das
or
stc
fmul
ljmp
jmp
mov
ja
push
sub
adc
jg
mov
cld
shr
cmpsb
push
push
sbb
push
xor
jbe
leave
es
mov
xor
out
ja
mov
repz
xchg
test
imul
xchg
ret
into
mov
pusha
in
dec
sub
cltd
inc
arpl
push
aam
arpl
out
sarb
fstl
mov
inc
ss
push
lret
gs
test
xor
push
movsb
sub
in
jmp
dec
repnz
je
pop
je
mov
lahf
xchg
mov
mov
dec
loopne
jg
dec
cmp
bswap
inc
std
pop
mov
jo
test
adc
jbe
push
push
insl
xlat
ret
mov
test
imul
add
adc
fnstsw
mov
and
sbb
cmc
xor
pop
fisubrs
cmpl
jb
lret
shlb
mov
jns
sub
xor
rol
lds
cld
jb
int3
lret
hlt
fdivr
outsb
mov
es
mov
dec
test
mov
xchg
add
js
arpl
das
jl
testl
sti
xor
bound
xor
shrl
loopne
adc
aad
fwait
xchg
inc
movsb
xor
jb
shr
nop
jno
xchg
sbb
add
mov
xchg
add
ret
mov
xor
xchg
loop
mov
out
outsb
or
jg
pop
int
sbb
jb
jb
dec
imul
push
fucomip
das
xlat
mov
dec
jnp
jecxz
int
xor
mov
inc
mov
push
dec
push
and
fadd
jmp
sbb
mov
jo
adc
xchg
shlb
inc
jae
jl
push
repnz
std
dec
inc
and
jle
roll
push
xchg
mov
inc
dec
sub
xor
ss
jg
xor
gs
sbb
in
cwtl
sub
out
xor
cmp
scas
repz
mov
fstps
js
xchg
inc
iret
pop
data16
and
loop
xor
ret
mov
ds
cltd
xor
dec
sbb
and
cmc
xchg
insb
mov
es
pusha
add
sub
fisttpl
sbb
push
pop
loop
test
add
cli
std
cli
xlat
dec
in
lods
and
int3
jecxz
je
pop
xchg
mov
mov
mov
addr16
mov
cmpb
cmpsl
jae
ja
inc
add
pop
xor
loope
stos
loop
sahf
jns
hlt
push
pushf
into
mov
xchg
push
push
or
in
cmp
lcall
scas
repnz
popa
adc
push
mov
push
lods
cs
xchg
jge
pop
jmp
insb
gs
jb
dec
lret
cmp
iret
push
jne
aam
and
mov
cmp
mov
out
push
int
mov
flds
les
sub
dec
stc
push
fildll
mov
into
stos
dec
imul
cli
lea
std
rcr
mov
or
adc
or
pop
test
cli
in
imul
mov
sub
xchg
jmp
insl
lods
mov
scas
inc
sbb
or
scas
jb
adc
js
insb
dec
sar
push
cmp
adc
or
fs
add
in
shlb
add
push
sbb
insl
jns
movsl
cmp
pushf
clc
je
movsl
mov
and
icebp
adc
addr16
sub
jle
sarb
xchg
push
pop
mov
pop
test
cmp
sahf
dec
in
inc
mov
xchg
pusha
add
jle
test
mov
enter
mov
push
imul
mov
push
add
push
mov
xlat
les
dec
sti
js
add
dec
enter
aas
les
jp
xchg
es
jg
pop
and
lds
ret
push
lea
fsubl
pop
pop
jge
das
int
add
ret
ja
pop
dec
cmp
push
cmpsl
int3
fimull
xlat
xor
imul
pop
fstl
cli
dec
test
shlb
push
mov
fimuls
pop
cmpsl
inc
das
jne
les
cmp
jle
cli
setl
inc
js
dec
jmp
enter
xchg
sub
inc
mov
pop
clc
xlat
outsl
std
mov
fnstcw
shlb
add
cmp
xor
std
repz
dec
call
loope
fldenv
xchg
ret
in
pop
add
cmpb
sbb
jno
xor
aas
out
mov
les
enter
jge
out
call
rcrb
or
lret
es
andl
testl
cld
pop
popf
push
sub
movsl
add
xor
inc
es
jg,pt
fists
test
mov
lcall
std
cmp
shlb
cmp
fdivrl
push
xchg
jns
jle
or
mov
cwtl
data16
out
and
insl
movsl
cmpsb
mov
cld
out
stos
cmp
sub
xor
mov
xchg
cs
cmpsb
add
xchg
in
aad
imul
add
pop
or
out
or
cwtl
dec
inc
fldt
rorl
frstor
dec
vrcpss
cli
pop
sub
mov
mov
outsl
inc
repz
xor
bnd
push
mov
test
aam
fldt
xor
leave
jbe
fisttpl
adc
mov
ja
jne
fmull
call
jo
add
jbe
pop
jmp
mov
cmp
popf
push
sbb
pop
std
aas
mov
lods
xchg
add
jp
test
cmp
mov
or
lcall
repnz
ja
mov
xchg
jbe
imul
mov
loopne
js
lahf
and
mov
movsl
add
and
lret
scas
mov
fcoms
bound
mov
push
pop
mov
js
xchg
xor
dec
stos
push
jne
and
cmpsl
jecxz
out
jns
inc
and
cltd
or
fldenv
dec
mov
shrl
stos
into
shlb
nop
ss
xor
jne
sub
adc
fistl
sub
stos
fs
mov
xchg
push
pop
pop
xchg
mov
dec
shr
or
out
lcall
sbb
in
imul
pop
pushf
dec
test
xor
movsb
mov
xchg
mov
push
sub
jnp
stc
mov
push
xlat
es
int3
aaa
adc
jp
sbb
xor
inc
fwait
mov
ret
imul
arpl
cli
and
fs
sbb
call
cmp
movsb
repnz
mov
or
andl
pop
cwtl
hlt
sbb
negb
and
es
cmp
stos
lds
stos
xchg
das
mov
shlb
stos
flds
adc
rolb
ja
movsl
shl
addr16
xchg
mov
mov
or
outsb
sub
mov
scas
mov
dec
mov
mov
je
lods
sbb
xor
cmp
mov
icebp
test
adc
xlat
cmp
pusha
jbe
clc
dec
fsubrs
movsl
jno
mov
mov
xor
mov
dec
xchg
ret
inc
aaa
xor
rcll
subl
mov
addb
cli
outsb
.byte
push
add
add
cmp
cmp
adc
add
cmp
cmp
phaddw
add
std
and
add
adc
add
cmp
add
mov
jno
clc
push
mov
and
ds
jns
pop
cmpsl
xor
push
iret
fabs
xchg
icebp
gs
mov
inc
xor
pop
and
inc
fucomip
in
and
dec
dec
xor
pop
cltd
inc
roll
sub
mov
shlb
mov
inc
ss
cmpsl
cld
jecxz
scas
add
push
aam
clc
popf
imull
addb
mov
hlt
lcall
cli
jg
sub
adc
inc
sahf
andb
cltd
hlt
cmpl
out
xor
divb
dec
add
sti
jge
ret
adc
in
out
push
out
xchg
cmp
jecxz
cmp
mov
dec
sbb
xchg
cmp
loopne
addr16
xor
pop
cmp
pushf
jmp
xchg
mov
int3
sbb
fwait
test
push
scas
in
scas
dec
adc
in
mov
test
int
xor
inc
test
push
lods
push
inc
mov
xorps
mov
fucomip
sub
mov
cli
shl
or
jg
sbb
add
ljmp
xchg
sbb
pushf
sub
iret
mov
xor
mov
mov
push
xchg
test
push
add
in
inc
je
aad
call
in
leave
cs
push
test
mov
add
cli
cmp
pushf
pop
push
xorl
mov
scas
cltd
pop
adc
cmpsb
xchg
jo
cmp
mov
and
xor
xor
hlt
cwtl
jne
mov
cmp
fadds
push
xchg
mov
repz
dec
mov
mov
ss
jno
push
hlt
jno
rolb
jg
rorl
std
fcompl
lods
ret
arpl
sbb
fsubrs
nop
sub
out
mov
clc
cmp
gs
push
push
sarl
inc
je
out
xor
add
and
pop
daa
idivb
push
push
ds
ficoml
je
sbb
test
add
xorl
stos
std
or
xadd
jnp
push
fs
inc
xor
sub
popf
ja
cmp
dec
movsl
in
xchg
jg
sub
dec
loopne
fs
dec
pushf
pop
cmp
cmpsb
jb
sub
popf
shrb
shl
ds
rorb
lret
jmp
and
xchg
sti
mov
add
pusha
xchg
test
inc
xchg
cmpsb
out
inc
test
mull
or
icebp
xchg
xor
sbb
sub
mov
adc
sub
cmp
repnz
pop
into
xor
jnp
mov
mov
pop
jne
pop
gs
vxorpd
aas
lds
mov
int3
cltd
adc
daa
jo
pop
dec
xchg
ret
xlat
das
sbb
cmp
and
test
shrb
xor
and
sbb
pusha
mov
mov
repz
mov
dec
lea
fwait
into
fimull
xor
adcb
mov
push
inc
dec
mov
push
mov
popa
push
add
mov
mov
mov
data16
scas
xor
and
stc
aas
jae
jle
es
push
add
dec
in
dec
not
mov
jecxz
xor
test
test
popf
sbb
repz
pop
adc
pop
andl
scas
dec
inc
outsb
inc
ss
sahf
and
fcoms
cmpl
xcrypt-ofb
cmpsl
sub
repz
mov
scas
xchg
filds
inc
or
mov
push
fs
cltd
je,pn
mov
shl
sbb
shll
sti
dec
mov
leave
dec
pop
inc
cmp
and
ss
bound
leave
jg
repnz
xor
push
lods
fs
push
insl
cmp
rcrb
outsb
sbbb
scas
or
cmpsb
xor
xchg
iret
jno
sbb
pop
stos
sbb
imul
aas
nop
ret
lods
or
mov
hlt
shrb
sub
lds
xor
cmp
adc
add
mov
cltd
cltd
gs
cmp
sti
add
fwait
xor
int3
repnz
jb
jmp
push
rclb
jo
cli
xchg
pop
jae
adcb
add
lea
jmp
mov
rcll
lret
jp
shlb
xchg
push
pusha
idiv
imul
adcb
movsb
nop
ss
cmc
pop
push
ja
jbe
cld
leave
push
push
mov
ljmp
lods
test
sub
ficoml
add
arpl
test
jg
pop
dec
cmp
std
mov
scas
push
or
fsubrs
stc
xchg
mov
push
fidivs
or
and
push
fdivrs
push
adc
mov
pop
adc
xlat
and
daa
or
pop
cmc
push
cmp
arpl
sub
mov
or
gs
in
mov
cmp
pop
test
roll
pop
stos
add
movsb
and
inc
aaa
ret
outsb
dec
jecxz
popf
cs
in
mov
fcomps
movsb
add
mov
push
icebp
inc
mov
mov
sti
fistps
fwait
adc
and
or
je
fsubl
daa
addb
notl
sub
xor
lret
imul
push
mov
aam
inc
add
xchg
xor
es
addb
pop
jo
jns
jns
or
dec
ljmp
dec
mov
lcall
dec
jecxz
popa
xor
or
jge
pop
inc
lock
ja
jno
push
sbb
xchg
sbb
jecxz
xor
push
or
or
sub
adc
dec
mov
add
cltd
xchg
sub
xor
xchg
ja
pop
or
stc
jae
xor
notb
mov
or
clc
pop
pop
fiaddl
mov
pop
gs
shlb
scas
xor
movsb
inc
and
inc
xchg
sbb
cmc
data16
push
fiadds
inc
cli
hlt
repz
and
push
in
stos
cwtl
sbb
sti
fwait
push
scas
mov
add
push
sub
pop
loopne
cmp
jmp
xchg
repz
push
sar
mov
lret
push
adc
cld
dec
xor
loopne
mov
xchg
scas
inc
daa
pop
lds
popf
xchg
sub
and
xchg
rcl
lcall
mov
push
sub
push
sbb
popf
adc
das
add
or
mov
inc
enter
out
jo
fs
cmpsb
insb
rcll
add
push
out
int
dec
imull
popa
js
fs
jg
push
dec
cs
mov
les
sub
and
pushfw
cmpsl
movsb
lods
sub
pop
xchg
inc
sbb
push
inc
xor
sti
inc
and
sub
mov
push
popf
out
and
sbbw
ljmp
push
or
test
mov
iret
xchg
jg
daa
lcall
jecxz
fiadds
sbb
jb
adc
mov
ljmp
aas
sub
sub
pop
aam
inc
test
mov
push
mov
ret
add
xchg
ljmp
adc
inc
mov
dec
mov
mov
jns
mov
mov
adc
cmc
or
rol
mov
cmp
stos
ret
xchg
inc
hlt
mov
lock
aam
cmpsl
arpl
push
sbb
in
repnz
adc
mov
xchg
jmp
push
sub
repz
push
push
int
subb
adc
mov
sbb
mov
push
jae
and
push
jmp
rorb
push
cvtps2pi
xchg
mov
jge
cmp
lcall
dec
lea
inc
subb
idiv
int3
inc
push
push
stc
inc
lret
cmp
adc
lea
push
xchg
negb
in
push
stos
mov
je
repz
adc
jg
and
pop
xor
or
rolb
add
stos
sbb
adc
xlat
mov
fstps
pusha
mov
jb
lods
scas
lahf
rcl
daa
mov
out
or
xor
ljmp
das
or
lret
dec
xchg
pop
mov
jbe
sub
add
das
mov
push
pop
or
jmp
mov
inc
mov
sti
cmc
cwtl
pop
jne
mov
fbstp
adc
push
push
stos
mov
push
dec
ror
cmp
std
sti
jnp
or
adc
inc
mov
cli
dec
mov
pop
pop
scas
adc
insb
hlt
outsl
movsl
sbb
js
inc
xor
mov
icebp
les
adc
inc
test
mov
stos
adc
push
andl
add
push
cmpsb
aaa
fldt
std
xchg
icebp
xchg
sub
dec
mov
xchg
mov
js
xchg
pushf
and
je
mov
jae
cmp
sbb
lahf
mul
xor
faddl
push
shlb
gs
int
push
inc
pop
xorb
loopne
pop
cmp
push
inc
push
std
ds
xor
push
lods
push
hlt
mov
clc
xor
lock
andb
dec
imul
and
jns
xchg
push
cmp
pop
cmp
adc
dec
sub
movsb
jns
clc
pusha
xlat
cmp
xchg
sbb
push
rcr
aad
js
repz
mov
rolb
jnp
pushf
aam
mov
std
out
push
pop
aas
and
adc
movsb
in
pop
fcomps
push
lcall
push
movsb
add
push
psubq
test
sbbl
mov
hlt
sub
push
les
push
jbe
jmp
sar
sbb
jne
enter
iret
pop
dec
loopne
push
add
adc
xchg
xor
loopne
lods
inc
pop
cmp
and
data16
sub
enter
lods
aas
mov
popf
mov
pop
sarb
ljmp
cmc
js
push
pop
orb
sti
enter
mov
repnz
sbb
add
add
push
bound
jge
mov
pop
cmp
sub
hlt
jbe
mov
xor
std
imul
push
stc
imul
jae
ljmp
pop
mov
lret
adc
clc
xchg
stos
lret
dec
push
popf
jno
mov
sbb
divl
divb
addr16
gs
sbb
in
mov
lahf
daa
int3
or
xchg
rolb
and
push
pushf
push
mov
cwtl
daa
inc
sub
scas
mov
mov
aad
or
inc
ljmp
or
int
cmc
fimuls
loop
sbb
push
icebp
jae
inc
test
mov
sbb
jnp
negl
lretw
add
fs
jo
outsb
xorb
sub
adc
ret
cmp
mov
pop
mov
in
cmp
psubq
xchg
and
lea
cwtl
or
adc
in
xor
dec
pop
pushf
fcomi
pop
add
sbb
jb
nop
pop
push
popf
iret
pop
mov
cmpsl
mov
dec
push
loop
mov
mov
dec
in
and
daa
aas
mov
outsb
xchg
or
gs
jge
push
repnz
cmp
loopne
xor
or
mov
sbb
xchg
dec
aad
xchg
add
lret
xchg
ljmp
mov
ss
or
push
inc
sbb
inc
fadd
push
xchg
or
mov
adc
fwait
es
pop
lock
xchg
mov
hlt
rorb
stc
sub
dec
sub
lret
ds
movb
or
inc
xchg
outsl
rcrl
xor
add
add
sbb
nop
mov
inc
cli
xor
sub
inc
lea
dec
ret
icebp
or
jmp
mul
mov
push
je
das
cltd
push
mov
sbb
insb
aad
mov
or
jae
test
mov
sub
scas
aaa
std
add
ljmp
mov
push
and
sbb
jmp
ficompl
popf
int3
dec
dec
pop
scas
cmp
data16
xor
addr16
icebp
nop
sub
inc
jg
xchg
fwait
std
lcall
loop
push
mov
jo
add
pop
sarb
out
and
pushf
push
stos
dec
xchg
add
push
scas
bndldx
xchg
loop
movsb
aaa
popa
hlt
jne
popa
mov
xchg
stos
in
shrl
lock
loop
stc
out
dec
cmp
fdivr
movsl
packuswb
xchg
cmp
repz
pushf
mov
scas
es
xor
xchg
pop
call
mul
negb
jno
pop
dec
lods
mov
ljmp
or
pop
aaa
sbb
mov
sbb
dec
mov
mov
push
or
pop
cmp
mov
xchg
sbb
loope
lret
popf
outsl
aas
xchg
pop
test
jmp
sti
imul
in
icebp
or
or
enter
fistpl
ljmp
sbb
rol
xchg
mov
shrb
push
insb
inc
cmp
iret
cmp
subb
arpl
or
ficomps
and
mov
stos
dec
cmpsb
mov
aaa
mov
jbe
cmc
cs
cmp
sbb
or
jmp
in
fdivs
int
jns
rorb
pushf
out
dec
mov
hlt
jl
jne
imul
xchg
into
and
imul
xchg
shrb
lret
cmp
es
stos
and
imul
mov
mov
or
add
outsl
xorb
mov
aam
pop
sub
aam
dec
lods
mov
adc
stc
xchg
jge
aas
pop
out
add
fldenv
lock
sbb
add
jbe
dec
ret
ss
out
ret
shrl
int
jns
fcompl
xor
pop
scas
flds
xchg
pusha
test
pop
mov
mov
dec
out
mov
xor
push
rol
adc
scas
lods
xor
cli
call
mov
xor
cs
out
cmp
inc
nop
sahf
out
adc
mov
jno
pop
inc
add
bound
jne
dec
rcll
je
xchg
clc
sub
cltd
loope
push
insb
aad
ficoms
sub
mov
or
data16
dec
loopne
xlat
mov
sbb
cmpsl
fbld
pop
push
cmovno
and
jno
sarl
lahf
mov
lahf
faddp
xchg
cmp
sub
lods
pop
cmp
add
in
or
out
xor
dec
dec
pop
sub
repz
sub
push
mov
negl
pop
testl
movb
mov
adc
scas
push
fidivrl
inc
cmp
xor
mov
adc
dec
repz
mov
out
dec
cmpsb
add
enter
jbe
jge
aaa
mov
ljmp
cmpsl
inc
adc
pop
inc
insb
scas
rcrl
sub
lds
mov
rol
loop
std
mov
js
sub
jne
scas
test
or
shlb
cmp
out
dec
mov
push
mov
and
cmpsb
xchg
add
jae
add
mov
adc
lret
pop
int
clc
or
push
inc
adc
loopne
push
push
xor
add
gs
insb
sub
repnz
fildll
push
daa
negl
mov
mov
sub
sbb
shl
dec
fildl
pop
pop
dec
arpl
sbb
cmpsb
stos
xchg
jl
jge
stos
lods
ljmp
mov
in
enter
test
iret
addb
pop
cmp
mov
dec
adc
stos
rcl
jg
xor
mov
ret
add
insl
adc
fs
and
fnsave
mov
movsl
push
sti
add
aaa
mov
xor
sarb
popa
cwtl
pop
stos
das
mov
mov
jno
dec
out
fcomps
dec
bound
movsb
mov
jl
mov
inc
jnp
adc
jg
fwait
popa
pop
mov
mov
push
daa
xchg
aas
aaa
jo
ret
and
dec
or
jae
fcmovnbe
imul
test
sub
cmpsl
negl
loope
flds
push
inc
shll
mov
mov
imul
aas
repnz
jbe
jp
rcrb
dec
lock
add
push
mov
push
sbb
gs
rcrb
or
bound
adc
xchg
ja
cmp
or
insl
cmp
add
xchg
dec
aam
fwait
les
jns
lahf
vpcomw
jmp
inc
mov
and
outsb
pop
jnp
mov
cwtl
push
pop
jo
add
mov
inc
addr16
add
enter
or
pop
mov
fdivrs
xchg
xor
mov
aas
pop
xchg
and
xor
or
push
fdecstp
fisubs
mov
js
jns
xchg
aaa
iret
aad
and
dec
cmpsb
clc
or
mov
rorl
and
add
cmp
sub
out
adc
add
imul
and
and
cli
xor
xor
push
movsl
pop
dec
sbb
stos
dec
push
lahf
pop
ret
jp
sbb
test
adc
add
cmpsb
sub
mov
jmp
inc
icebp
push
nop
sub
dec
pop
imul
fs
rsqrtps
dec
xlat
fldt
rcl
mov
cld
cmc
andb
les
inc
push
subl
adc
cmpsl
cmp
xor
fisttpl
lock
mov
jo
cmp
dec
iret
add
push
hlt
dec
mov
add
arpl
bound
aad
ljmp
outsl
sub
jmp
or
mov
xchg
cld
stc
popa
shll
mov
push
pusha
push
cltd
orl
in
xorl
sub
adc
push
ret
addr16
pop
and
pop
in
xchg
add
ss
out
or
jg
clc
jl
pop
loop
sbb
jo
sbb
push
out
ror
dec
push
std
cltd
lcall
adc
xor
inc
add
inc
and
shrb
mov
xchg
mov
or
sarb
mov
xabort
stos
lret
adc
pusha
pop
sbb
addr16
out
mov
sarb
or
adc
insb
push
add
leave
lods
rcrl
pop
divb
dec
jp
sub
cmp
add
fsubp
push
jp
jg
xchg
cs
je
xchg
adc
xor
cmpsb
test
jbe
mov
int
cli
mov
lock
stos
xlat
insb
ficoms
and
xor
cwtl
push
jne
fsts
or
hlt
into
call
fldenv
jae
lret
add
xchg
popa
inc
mov
adc
cs
jno
je
ds
in
xor
pushf
jns,pn
je
in
push
xchg
pop
cmp
and
lahf
pop
mov
xchg
frstor
sbb
out
cmp
fldenv
pusha
arpl
repnz
pop
in
add
test
ffreep
in
sub
cld
movb
push
xlat
xor
out
add
add
aaa
cmpsl
mov
sub
ficoms
or
and
je
jl
and
pop
ffreep
adc
xor
shll
aam
inc
push
daa
xchg
popa
mov
cmp
inc
repnz
jbe
sbb
enter
insb
dec
xor
rcll
mov
jbe
test
pop
cmpsl
ret
push
rclb
fbld
scas
pop
xor
iret
leave
cmp
cli
inc
adc
and
in
std
mov
inc
int
sti
fildl
gs
repz
inc
pop
ret
das
xor
add
decl
inc
loopne
or
adc
arpl
in
mov
xchg
sbb
std
mov
das
mov
rorl
or
xor
and
mov
pop
cmp
mov
mov
or
cmp
movsl
stc
add
mov
mov
xchg
cmp
lahf
and
je,pn
stc
cmp
pop
xchg
aad
pushf
push
daa
mov
pushf
bound
in
stc
or
cmpsb
ds
and
inc
jg
inc
xor
ficoms
add
xlat
fwait
lds
jp
push
lahf
cli
inc
les
data16
lods
outsb
cltd
pop
cmp
cmpsl
lcall
mov
mov
sbb
nop
sbb
cmpsb
dec
dec
inc
adc
imul
cmp
enter
lock
loopne
mull
xchg
push
dec
jbe
rclb
cmp
or
lret
imul
jo
in
fidivrl
aas
jmp
xchg
ds
fdivl
insl
cmpl
mov
and
dec
insb
xchg
and
outsb
out
xor
xchg
lods
pusha
pop
xchg
les
or
cmpsl
and
push
vcvtsi2sdl
stos
sbb
xor
jg
push
dec
sbb
lahf
bswap
jp
outsl
mov
movsl
aaa
or
mov
fs
insl
xchg
jnp
scas
cmpsl
mov
mov
jmp
add
inc
adcb
loop
mov
test
xor
xor
rolb
xor
rolb
push
scas
dec
icebp
ret
call
sbb
mov
jne
xchg
movsb
lret
lea
xor
jnp
ja
incb
xlat
and
cmp
addr16
push
or
add
cmpsl
mov
jle
icebp
test
add
rclb
sbb
pop
push
das
test
dec
stos
push
aam
mov
inc
mov
pop
out
lds
sub
aam
mov
aas
cltd
xchg
or
sbb
shrl
subb
adc
les
mov
repz
sub
sti
adc
jge
sbb
ret
inc
clc
xor
loop
js
adc
push
push
xchg
inc
sub
cwtl
pushf
mov
scas
adc
fdivl
jbe
dec
mov
cmp
or
fs
sahf
out
mov
add
mov
xchg
divl
mov
mov
fdivrs
lea
add
scas
jbe
and
and
dec
jo
das
mov
movsl
or
scas
subl
in
js
imul
iret
jb
loopne
xchg
arpl
mov
outsb
pusha
jecxz
and
sub
popa
jl
mov
iret
enter
ss
mov
add
add
jle
xchg
sbb
mov
popa
repz
outsb
pop
cmpsl
sub
xchg
andb
je
lcall
pop
dec
lds
cs
sbb
add
xchg
ljmp
cmp
pop
jl
or
fldl
enter
aad
cltd
mov
mov
or
hlt
push
rorb
mov
jge
or
mov
mov
pop
mov
iret
xchg
lock
mov
xlat
shl
add
jo
outsb
xor
jnp
int
adc
pusha
imul
fidivs
mov
xchg
mov
outsl
fildll
mov
int
lods
outsl
mov
sbb
lods
add
aaa
adc
push
xchg
out
fisubrs
fwait
pop
in
aad
sbb
pop
push
outsl
arpl
or
lret
mov
int3
cmp
cmpsl
out
and
push
icebp
push
jbe
jecxz
fimuls
push
lahf
stos
std
sahf
xlat
outsb
xor
xor
xchg
cmp
cmpsb
cmc
push
popf
pop
nop
mov
dec
mov
xchg
add
sti
sub
dec
pop
shrb
xor
ror
daa
fistl
repz
jne
adc
and
jge
sbb
popf
cmp
nop
push
mov
repnz
inc
inc
mov
adc
xor
call
loop,pn
out
jno
adc
aas
cmp
shr
sub
sti
fdivs
adc
fldcw
xchg
lods
mov
inc
and
daa
push
test
push
mov
lods
bound
mov
jnp
aaa
push
push
pop
mov
insb
fwait
rcrl
push
cmp
int3
pop
lds
shr
call
lret
jne
mov
add
std
movsl
push
xchg
and
add
sbb
sub
mov
adc
out
mov
popf
mov
mov
xor
out
or
sub
js
xchg
lods
lahf
mov
imul
or
xchg
ljmp
testb
les
fildll
mov
xor
add
sub
add
fdivr
lock
bnd
xor
mov
or
inc
xor
ret
jo
add
inc
fisubl
inc
notl
in
push
mov
pop
xlat
or
sar
push
sub
scas
mov
cwtl
imul
sbbl
icebp
jge
fiadds
call
testb
aaa
jns
mov
sbb
mov
sahf
xchg
push
xor
mov
leave
sub
mov
dec
cmpsl
push
jge
push
movsb
sub
mov
push
dec
cmp
sarb
into
enter
std
add
add
ja
dec
dec
or
mov
push
push
mov
jo
push
lcall
insl
cmpsb
cmc
adc
push
cmp
dec
or
in
jg
in
pop
xor
and
sbb
xor
stos
push
adc
xor
arpl
imul
push
mov
data16
shlb
movsl
test
mov
cs
repnz
insl
jge
sub
pop
cmp
pop
ja
stc
icebp
cmpsl
push
sub
cmc
sti
mov
cli
je
in
push
sub
lock
mov
cli
pop
sub
mov
pop
jo
test
andl
int
cmp
in
xchg
fsub
pop
cli
add
xchg
xor
mov
shll
inc
sbb
sub
cld
jg
mov
popf
in
iret
push
mov
aas
icebp
subl
sub
pop
cmpsl
inc
fs
sbb
add
fisubs
leave
lret
push
adcl
decb
jle
imul
and
xor
icebp
sub
mov
mov
mov
xchg
fstps
mov
cmp
das
dec
sub
push
leave
push
insl
cmp
and
or
fsubs
xchg
mov
test
dec
rolb
pop
jo
or
jecxz
mov
mov
ja
sbb
xchg
and
jbe
sbb
push
pop
aas
add
popa
stos
sbb
mov
inc
and
push
add
in
jp
mov
cmpb
pop
push
or
xchg
in
push
sti
loop
in
push
mov
nop
xor
mov
ja
test
or
push
pop
push
jnp
cmc
scas
adc
push
mov
cmp
es
loopne
jmp
pop
lods
out
add
adc
adc
lock
rorb
pushf
roll
roll
imul
jecxz
xchg
jg
popf
cmp
adc
call
gs
movsb
mov
or
jmp
filds
insb
sub
xchg
mov
pop
lods
cmp
add
xchg
mov
test
push
xchg
push
imul
scas
sub
int
jp
cmp
enter
faddl
ficoms
lock
adc
insl
or
cmp
dec
sbb
jo
cli
adc
sbb
push
out
ja
push
std
push
mov
adc
mov
das
shll
xor
fcompl
gs
and
in
loop
push
cmp
fdivrl
jnp
call
dec
cmp
push
sbb
sahf
pop
gs
mov
cmc
inc
mov
mov
inc
leave
push
iret
ret
xor
cld
or
pop
jmp
add
cmc
je
mov
sub
mov
data16
js
push
pop
sbb
xchg
jne
mov
xor
add
adc
push
cwtl
lcall
int
pusha
jp
les
ret
fmulp
scas
xchg
es
cmpsb
or
xchg
mov
sbb
es
stos
lea
pushf
rorl
pop
in
adc
mov
sbb
xchg
int3
mov
icebp
sbb
push
cmp
and
icebp
mov
cs
stos
xchg
ret
pop
cmp
jg
sahf
and
mov
in
jns
test
jae
dec
push
lea
addr16
and
mov
mov
sbb
cmpb
add
ret
cmpsl
xchg
push
nop
fimuls
loopne
xor
pop
jge
dec
pop
les
mov
out
out
cmp
pop
mov
jo
scas
punpcklbw
pop
shll
sub
lock
out
fiadds
mulb
aam
lock
aaa
push
cmp
xlat
scas
cmpsl
fwait
mov
std
push
cmc
out
mov
adcb
in
cmc
adc
or
mov
in
mov
ss
cmp
mov
and
add
das
mov
popf
insl
pop
outsb
add
lret
mov
popl
add
in
stos
lods
or
mov
les
cltd
fisttpll
in
jne
bound
test
out
inc
lods
mov
mov
bound
clc
xlat
dec
or
mov
mov
sub
adc
sub
test
add
mov
xchg
int
insb
jecxz
pop
xor
dec
fdivrl
imull
add
gs
pushf
pop
xchg
xor
dec
fs
ja
push
push
stos
arpl
cmpl
sbb
bound
push
mov
aam
add
arpl
popa
xchg
sbb
mov
push
mov
hlt
movsb
cld
nop
fs
fldt
enter
push
xor
dec
aam
mov
imul
mov
add
inc
inc
shr
xchg
xor
loop
imul
dec
sbb
sub
in
cs
fistpll
out
sbb
sbb
cmp
push
mov
pop
dec
jge
mov
pop
xchg
int3
cltd
aam
inc
daa
lods
loop
test
scas
ret
add
xlat
fbld
daa
out
add
mov
adc
or
mov
mov
add
pop
les
inc
mov
imul
add
push
jge
or
mov
mov
in
add
daa
mov
out
flds
or
xor
inc
inc
jbe
stos
push
push
xchg
xchg
dec
ja
mov
cmp
mov
aad
out
ljmp
pop
xchg
pop
adc
in
mov
test
xor
outsl
sub
jge
cld
shlb
add
or
insb
xchg
adc
test
sbb
stos
ret
dec
shlb
inc
icebp
stos
push
ret
mov
outsb
fcmovne
cmovle
mov
lret
hlt
mov
dec
flds
mov
pop
cli
push
rclb
fwait
or
xlat
dec
ret
hlt
mov
add
les
loop
ret
mov
add
inc
sub
dec
cmp
cmp
cmp
lods
adc
xchg
mov
in
daa
data16
mov
dec
add
ljmp
shlb
inc
push
ret
aas
xor
inc
cli
test
mov
sub
ret
xchg
mov
push
push
cmc
mov
mov
lods
out
xchg
mov
daa
mov
ficoms
pop
xchg
test
test
iret
fwait
sbb
mov
cld
xlat
jl
mov
mov
fcoml
pop
jne
insl
scas
push
add
or
adc
mov
push
mov
cmc
pop
and
sub
cli
dec
and
adc
fistpl
xchg
xchg
aad
inc
adc
gs
js
fdivrl
inc
xor
jne
inc
stc
cmp
xchg
imulb
adc
lahf
cmp
loopne
mov
mov
fcompl
aam
push
int3
push
out
outsb
fstpl
aad
mull
mov
jge
add
int3
pushf
push
xchg
jge
push
pop
int3
int3
cmp
and
push
sbb
xlat
mov
jecxz
es
lock
sub
loope
sbb
add
inc
push
push
aaa
enter
cmp
int
fwait
pusha
pusha
mov
mov
aad
jp
int3
mov
adc
dec
adc
lret
nop
and
pop
mov
std
inc
or
lock
cmp
mov
cmp
sbb
testb
loop
pop
xchg
jno
xchg
add
loope
leave
popf
inc
jl
mov
into
xor
das
test
je
call
push
and
loope
xor
jg
dec
rcl
pushf
pop
les
bnd
xlat
cmpsb
aaa
lcall
outsl
mov
jno
pop
lcall
or
jo
or
lock
jmp
andl
in
out
sahf
cmc
test
in
imul
pop
xor
popf
sub
dec
stc
push
pop
adc
dec
roll
mov
cmpl
bound
stos
sub
sbb
xor
pop
pop
stos
sub
pop
ds
push
sbb
xchg
add
xor
repz
sbb
cmp
call
xchg
inc
ficomps
add
cmp
add
xor
into
aaa
mov
pop
daa
iret
imul
push
cmpsl
out
sahf
loopne
fists
pop
mov
jl
and
dec
xchg
mov
fistpll
fmull
mov
add
pop
gs
scas
sbb
in
cltd
call
sbb
jge
mov
popa
sub
sahf
cmc
mov
adc
xlat
outsl
or
sbb
pop
or
dec
or
pop
das
sbb
push
pop
mov
pusha
jl
ret
jnp
sub
arpl
mov
cltd
mov
or
testb
cmp
dec
and
xchg
and
jb
les
arpl
jecxz
sub
mov
and
xchg
mov
test
shlb
cs
repnz
jnp
cmc
js
pop
sbb
xchg
out
mov
stos
push
inc
lcall
dec
shrb
movsb
test
nop
xchg
mov
neg
mov
jne
xchg
loope
xor
jne
push
gs
shlb
lods
sbb
mov
testb
mov
out
adc
in
js
mov
fistpl
xchg
out
push
lret
sub
pop
fwait
xchg
fdivrl
pop
jnp
jmp
loopne
push
jl
sar
pushl
jbe
dec
notl
test
jb
dec
les
jp
inc
inc
shrl
std
push
mov
pop
aaa
loop
aad
or
mov
sub
mov
divb
jecxz
pop
sub
fnstenv
jbe
jb
xchg
cmc
mov
stc
xchg
loope
out
les
mulb
dec
adc
cld
xlat
xor
xchg
add
cmp
mov
xchg
inc
push
fiaddl
adc
mov
push
jge
fcoml
bound
test
adc
loopne
scas
cmpsl
push
stos
imul
cmpsl
pop
xorb
decb
dec
les
mov
push
movsl
jae
adc
dec
jmp
push
ret
aad
cmp
lds
outsl
sub
loope
sbb
les
fsubp
sahf
mov
out
mov
pop
enter
adc
mov
pop
push
mov
stc
daa
repnz
xacquire
shrb
sarl
mov
inc
daa
cmpsl
dec
xchg
push
cwtl
inc
pop
ljmp
cmp
fldenv
lret
out
and
mov
jp
sub
pop
psubb
stos
jmp
bound
pop
nop
int3
ror
push
mov
cmp
call
fs
daa
inc
pop
ss
push
daa
movsb
aas
or
mov
mov
aaa
cs
adc
push
mov
pop
mov
into
addl
jl
test
ficomps
jp
rorb
fmull
pop
test
and
add
scas
leave
xor
stos
ret
add
aaa
out
cltd
add
test
jo
stc
adc
push
sar
mov
sbb
icebp
push
cmp
xor
pop
push
sub
jecxz
inc
xor
xor
pop
les
aaa
cli
arpl
rcrb
adc
push
cmp
leave
js
je
test
in
xor
stc
mov
in
jecxz
add
inc
lock
sbbb
adc
xchg
fistpl
leave
xlat
clc
out
sahf
mov
xchg
rorb
jmp
pop
lods
cmc
cli
pop
outsb
js
stc
cmp
ljmp
das
xchg
inc
sbb
and
jp
pushf
outsl
or
sbb
jle
push
cld
and
dec
imul
sbb
aad
pop
xchg
scas
ljmp
xor
daa
aas
xchg
insl
mov
loope
xchg
out
cmp
aas
xor
clc
or
mov
fwait
inc
pop
lret
jae
or
pop
test
clc
jbe
js
imul
mov
sub
loope
or
add
mov
mov
add
pop
out
mov
js
mov
pop
sub
mov
iret
pop
jle
xchg
push
adc
dec
popf
in
sub
orb
cmp
and
into
mov
and
lods
pop
and
dec
mov
lods
leave
pop
mov
in
or
out
test
jmp
or
xchg
jns
call
cmc
clc
enter
jnp
and
lods
sub
sub
repnz
pusha
add
jae
dec
arpl
push
pop
xchg
ret
add
dec
pushf
rcrl
dec
jo
jbe
pop
fistpll
push
sub
add
scas
push
in
xchg
jecxz
mov
mov
jnp
sbbl
jecxz
fsubr
bound
sub
ret
sub
insl
mov
jp
daa
jnp
shrl
add
jl
loopne
popa
int
mov
xor
xchg
test
push
aad
cmp
ret
mov
fists
cmpsb
icebp
or
arpl
add
aaa
loopne
in
nop
adc
xor
or
adc
inc
xor
mov
rcll
cltd
sbb
inc
inc
and
mov
ljmp
push
sbb
inc
les
repz
jne
jge
inc
std
jl
lret
jae
push
enter
push
jl
lcall
mull
adc
loope
das
std
inc
lods
mov
cli
pop
pushf
pushl
sub
push
popf
in
sbb
pop
fistps
xchg
mov
add
jmp
adc
xor
push
inc
sbb
es
es
daa
add
mov
stos
sbb
cltd
adc
cmpsl
add
das
xor
ds
out
mov
adc
insl
cmp
in
and
push
and
sub
imul
sbb
jg
xlat
push
pop
insb
lods
xor
repnz
mov
or
pop
insl
xchg
or
xchg
aam
cmp
fnstcw
pop
imul
push
pop
mov
roll
aas
push
jno
je
imul
cmp
jno
xchg
pushl
popa
mov
push
lea
and
in
leave
out
movsl
ja
shrl
xor
add
sub
jne
in
inc
add
push
adc
outsb
cmp
and
mov
clc
mov
mov
cmp
insb
lock
lods
sub
scas
dec
lds
sarl
outsb
jnp
inc
adc
dec
or
aam
sub
pop
push
mov
int3
xchg
add
xchg
test
int
xchg
xor
jbe
sub
movsl
push
pop
call
adc
in
dec
push
cmc
jo
sbb
rcrb
mov
fildl
and
fstps
icebp
ljmp
sbb
pop
in
or
mov
je
pop
shl
pinsrw
mov
adc
jp
out
ljmp
xor
push
jne
jmp
pop
ja
xchg
inc
pop
jns
add
jle
mov
insb
das
in
iret
and
scas
jno
loopne
mov
push
jb
jg
scas
adc
mov
rcrl
mov
test
and
mov
inc
or
lods
popa
push
movsb
je
sbbl
iret
mov
ljmp
dec
icebp
movsb
cmp
fisubl
movsb
sbb
push
push
jno
push
sbb
movsb
or
jecxz
test
inc
adc
xchg
adc
scas
and
bnd
aaa
xor
jecxz
pop
cld
nop
test
fabs
xchg
and
fstps
jmp
sbb
mov
cli
fisubs
sbb
push
aam
test
adc
je
xchg
or
push
xchg
inc
xor
aam
mov
and
lcall
repnz
ljmp
iret
mov
cmp
adc
scas
inc
insb
adc
lods
add
jge
push
nop
sub
fsubrs
test
lods
adc
jle
push
jg
push
dec
movsb
rorb
xor
jnp
mov
ja
mov
adc
les
mov
xor
and
push
rep
mov
shll
addr16
sbb
clc
jge
mov
mov
pop
dec
push
lods
or
push
je
out
out
mov
arpl
cmp
jb
or
mov
and
inc
and
inc
xor
test
int
push
lock
lret
test
aas
call
repnz
and
aas
fildl
dec
filds
nop
sbb
stc
imul
pop
test
add
mov
into
imul
xchg
bound
shll
add
mov
and
and
adc
and
test
cmpb
adc
cmp
mov
lds
std
aas
xlat
sub
outsl
xor
std
lds
enter
sub
rorb
cmpb
mov
lcall
aam
jno
scas
lea
ljmp
and
push
mov
pop
dec
sbb
add
jge
or
jne
cmp
and
movsb
mov
test
mov
icebp
push
push
cli
push
ljmp
jno
fisttpl
ja
lret
push
mov
pop
and
and
mov
dec
out
imul
mov
orb
ds
xor
fdivs
daa
adc
push
into
xchg
xor
adc
in
sbb
int
xchg
dec
mov
mov
int3
xor
sbb
clc
lret
sub
data16
sahf
stos
inc
xorl
and
and
ret
dec
add
push
push
fisttpll
sti
repnz
mov
sub
xchg
bound
add
cmpb
inc
add
repz
cmp
pop
ss
out
push
and
jp
je
jle
fs
xor
fisubrl
push
jns
imul
sub
jae
popa
int3
mov
push
in
outsl
int3
and
add
and
or
ffree
aad
icebp
ret
sbb
out
sarb
push
mov
xchg
lret
dec
jge
insb
inc
add
rclb
out
pushfw
fcomi
lds
push
call
add
popf
mov
jp
loop
jecxz
stc
xchg
stos
add
dec
in
ja
fucomp
jb
jp
mov
lcall
out
sub
lret
divl
ds
test
stos
adc
lock
pop
jbe
mov
or
fidivrs
jmp
popa
sub
pop
aam
push
lret
xor
popl
scas
lret
adc
addr16
sahf
add
mov
mov
mov
jae
mov
loop
xchg
lret
sarb
pop
mov
xchg
inc
cltd
mov
lret
push
roll
adc
dec
fsubl
push
les
mov
cmc
or
sbb
xchg
or
xchg
movsl
negb
push
mov
ret
mov
ret
xor
xchg
pop
movsl
push
pop
jae
je
xchg
les
lock
cmp
scas
insl
xor
jno
jecxz,pt
add
bnd
movsl
sub
jle
repnz
in
iret
add
orb
out
mov
or
xchg
outsl
dec
or
dec
or
hlt
adc
xor
dec
inc
daa
push
negl
out
lods
lret
nop
jmp
fcomps
in
xchg
xchg
xlat
add
cmp
lds
sub
jb
aaa
inc
sub
or
pop
or
mov
adc
pop
stos
sbb
cmpsb
xchg
lods
shlb
fiaddl
rclb
mov
push
mov
adcb
sub
sbb
lock
lock
or
sahf
js
int
mov
jge
xchg
inc
pusha
inc
mov
imul
das
add
pop
lock
sarl
add
es
mov
add
pop
sub
push
aas
adc
jae
dec
mov
or
jmp
arpl
out
lahf
fmuls
mov
mov
das
adc
and
dec
mov
xorb
dec
and
aaa
loop
mov
fisubs
mov
xor
insl
xchg
dec
lods
xchg
cmpsb
mov
sbb
lahf
scas
cmp
jae
jp
scas
mov
fistps
imul
out
int3
not
insb
xorl
das
mov
cmpsl
es
int3
push
fmulp
inc
sub
lods
cmpsb
dec
push
out
pop
mov
mov
sarb
stc
addr16
sti
adc
dec
gs
outsb
or
push
cs
or
adc
mov
jle
call
cmp
adc
xor
cmp
in
inc
lds
push
fwait
jnp
sbb
fdivr
lods
int3
sahf
mov
shl
jecxz
dec
shrb
mov
ljmpw
inc
jno
xchg
and
repz
jecxz
jl
mov
push
test
push
out
adc
mov
xchg
out
inc
cmp
hlt
out
aad
out
mov
and
stc
mov
xchg
lahf
mov
mov
mov
loop
adc
add
push
jp
lea
aad
dec
rcrl
loopne
imul
adc
aad
loope
jo
xor
jecxz
cmp
add
imul
dec
pop
loope
sarl
mov
ja
mov
fldenv
mov
push
rcrb
mov
ds
mov
iret
pop
fst
cmp
cmp
mov
subl
cmpsb
ret
inc
dec
sub
fs
shrb
mov
xor
inc
xor
cmp
in
test
filds
dec
outsb
dec
stc
mov
jbe
xchg
jmp
cltd
add
rol
push
lods
das
push
loope
cltd
movsb
or
lret
hlt
add
sub
pop
pop
sub
repnz
pop
pop
xchg
out
lahf
repz
sub
negb
mov
mov
insl
gs
pop
inc
fldcw
xchg
xchg
test
and
jmp
fxch
adc
dec
lods
in
dec
int
icebp
mov
jb
and
rdtsc
mov
fadds
sbb
and
das
lods
or
cmc
rclb
test
xchg
or
inc
insl
stos
ljmp
dec
pop
fldlg2
push
cmc
mov
or
xor
jg
out
int
xor
fldenv
jecxz
daa
push
dec
addl
adc
sbb
addr16
inc
lds
add
rcrb
mov
and
xor
jle
das
cmp
xchg
addr16
stos
sbb
cltd
xor
inc
hlt
jmp
jmp
and
daa
js
cmp
pop
icebp
lds
inc
push
pusha
jb
sbb
jle
pop
pop
pop
fchs
add
bound
lret
xchg
aad
mov
xor
sbb
push
decl
jl
sarl
mov
cmp
out
mov
subb
push
mov
call
and
mov
gs
cmpsb
sub
lods
dec
scas
lahf
jne
outsb
or
add
dec
pop
mov
loop
inc
cmpsb
adc
outsl
sbb
fbstp
jmp
jns
and
push
fadds
insb
inc
das
into
sub
xor
sbb
push
bndldx
jg
inc
xchg
mov
and
jmp
int3
or
or
mov
sbb
jns
out
add
inc
pop
sub
ja
lods
lret
int
aad
mov
and
xchg
shll
pusha
call
out
adc
mov
and
or
xchg
gs
dec
popa
mov
sub
imul
dec
add
clc
mov
jl
les
mov
add
movsl
jg
xchg
cld
ret
js
xchg
sbb
jno
push
mov
insl
loopne
jno
pop
mov
xchg
pop
cmpl
test
out
and
and
rorl
addr16
xchg
push
cmpsb
imul
scas
push
pop
mov
aaa
movsl
out
mov
add
pop
mov
fstps
mov
mov
insb
dec
add
and
pop
push
pop
mov
mov
outsl
test
push
push
or
pop
jp
pop
xchg
pop
es
int3
mov
sub
dec
sbb
dec
xchg
popa
add
pop
shlb
mov
pop
loopne
daa
jo
ds
cld
push
hlt
cmp
outsb
shrb
pop
xchg
mov
push
or
fnstenv
inc
rol
mov
out
inc
and
lret
inc
sub
cmp
mov
and
mov
dec
fisttps
xchg
fimull
mov
xor
in
es
imul
or
ret
pusha
push
inc
jge
sub
jns
mov
mov
ret
aad
jbe
cmp
jno
cmp
lcall
mov
fisttpll
xor
sbb
movsl
sbb
push
out
pop
rclb
pop
dec
adc
fidivl
hlt
gs
shrl
lock
mov
mov
scas
test
mov
cmp
int
cmpsl
push
jno
int
sahf
nop
and
jmp
ret
mov
addr16
filds
xchg
fnstenv
ljmp
fabs
lahf
mov
pusha
daa
dec
test
adc
add
ret
lea
mov
xchg
mov
hlt
xchg
jo
lret
push
daa
cmp
shrl
cmp
dec
insl
jb
sub
out
adcb
cs
les
scas
mov
adc
or
jecxz
mov
cs
es
xchg
xchg
pop
mov
and
clc
push
inc
xor
ret
mov
cmp
in
cwtl
xchg
or
mov
ljmp
push
cmp
ret
add
inc
pushf
xchg
sbb
and
pop
cmpb
aam
dec
es
pushf
hlt
jecxz
fstps
lea
xchg
pop
mov
ret
mov
or
cli
in
xorl
xchg
and
and
shrl
cld
repz
and
mov
cwtl
and
movsl
out
jp
xor
mov
out
sub
xor
or
jb
into
test
fidivrs
mov
push
inc
loopne
jbe
fmull
mov
icebp
xchg
pushf
push
daa
pusha
lret
inc
adc
lea
data16
sub
in
sub
pop
xorb
ljmp
sub
xchg
xchg
pusha
or
in
cltd
scas
pop
sub
popf
mov
mov
in
sub
loop
xor
in
in
mov
mov
cmc
scas
sti
mov
jl
push
push
cmp
pop
sbb
das
mov
test
pop
xorl
fidivrs
pop
out
fcomps
jle
lock
and
inc
fisubs
popf
sbb
add
loope
test
sub
mov
xor
lcall
js
sbb
test
mov
arpl
aas
push
mov
lods
fsubrs
std
mov
daa
mov
sti
ljmp
jo
xor
fistpl
popf
lea
jne
lahf
fdivrs
add
shlb
pop
pop
inc
add
jnp
jg
cli
dec
jns
push
and
shll
in
and
inc
push
pop
jbe
ret
aad
ljmp
cld
pop
cmp
fdivs
push
mov
or
xchg
call
negb
sbbl
add
enter
lock
lods
or
inc
movl
pop
gs
loop
into
aad
clc
mov
incb
sub
jno
fcompl
inc
leave
popa
rcll
jnp
test
cmp
xchg
cmp
mov
pop
add
js
iret
je
cwtl
pop
and
cs
dec
les
fxch
jne
xchg
pop
sbb
push
decb
and
fdiv
fsubrs
or
loopne
test
cmp
in
jge
mov
dec
sbb
lods
test
stos
push
sahf
cld
stos
mov
dec
outsb
fs
cmpb
arpl
dec
test
inc
mov
mov
cld
hlt
mov
idivb
in
jns
loop
sahf
pop
jle
add
jg
push
mov
lret
add
sub
xor
rcll
mov
add
push
xor
mov
dec
sub
dec
inc
mov
jb
and
rclb
sub
sub
and
or
push
aas
aam
outsl
jg
cmc
repnz
pop
ret
hlt
aaa
cmpsb
push
aaa
dec
rorl
sbbl
or
push
cmp
xor
jecxz
lods
lock
mov
and
cmp
addr16
nop
and
add
mov
inc
sbb
mov
xlat
lods
dec
cmpsl
aad
leave
jecxz
das
fiaddl
cmc
popf
and
add
and
xchg
lds
fisubrl
movsl
push
dec
xor
mov
sub
dec
add
rcrl
in
sahf
mov
loop
mov
cmpsl
mov
inc
cmp
dec
je
jg
add
je
ss
and
fwait
xor
in
and
jmp
mov
adc
mov
fsts
mov
enter
movsl
jl
loop
jno
notb
jle
jp
jae
inc
add
dec
subl
shlb
sbb
ja
mov
xchg
pusha
popa
pop
sbb
pop
xchg
cs
jno
daa
mov
adc
mov
leave
sbb
cmp
arpl
subb
dec
cmp
sti
test
adcb
repnz
jp
cmp
pop
sbb
repz
dec
jb
fcomi
cli
mov
fistps
pop
cs
cli
enter
rcll
idivl
cld
imul
scas
sub
rol
int
andb
xor
mov
scas
sbb
inc
int
mov
mov
push
scas
cmp
loope
pop
push
lcall
gs
jmp
shll
jge
movsb
iret
loope
xchg
dec
pop
or
xor
ret
dec
pop
cmp
pop
stos
mov
imul
sub
add
push
xor
repz
cmc
or
pushf
lret
dec
cvtps2pd
icebp
or
or
mov
adc
rcr
cld
std
outsb
jp
icebp
mov
adcl
scas
push
mov
aas
orb
idivl
or
stos
int
cmp
repnz
push
mov
sub
pop
xchg
push
sub
incb
pop
or
nop
dec
cli
sbb
pop
xchg
jg
rolb
insl
sub
fdivrp
into
cmp
fistps
sti
in
dec
outsb
xchg
cmpsb
out
aad
fcompl
mov
mov
incb
rcrl
test
mov
jp
dec
pop
sub
out
cltd
test
mov
stc
pop
mov
leave
inc
cmp
mov
pop
or
push
or
lods
xchg
mulb
pop
jmp
es
jge
jecxz
mov
aaa
pop
mov
in
loop
int3
mov
mov
sbb
in
mov
ret
pop
jae
push
lret
add
push
mov
lahf
and
decl
mov
ja
js
pop
pop
ss
inc
cmp
je
dec
test
xor
int3
xchg
aas
push
loope
add
dec
out
clc
lods
cmpsl
pop
push
mov
sub
cmpsl
outsl
sub
mov
insl
inc
inc
push
xchg
jmp
iret
jle
imul
fsubr
push
push
sub
aas
int
pop
sbb
bswap
push
adc
sub
sub
outsb
addl
mov
iret
mov
inc
sub
cmp
and
xor
sbb
movsl
or
cmp
jno
jne
mov
out
bound
sub
jecxz
mov
xchg
dec
filds
inc
int
xor
jmp
mov
and
dec
bound
fldcw
jl
lret
outsb
je
mov
cmpsb
jecxz
in
mov
lods
inc
sahf
je
ss
repz
andb
arpl
jbe
push
mov
pop
sarb
xchg
xchg
insb
mov
dec
xchg
add
jge
pop
sbb
in
test
mov
jno
add
enter
sbb
fdivrl
shlb
and
and
pusha
cmp
adc
lea
pop
xchg
int3
pushf
xchg
ret
and
push
andl
loop
mov
pop
inc
push
or
in
jns
xor
daa
movsl
or
outsl
inc
lret
dec
mov
sbb
stc
sbb
insb
sbb
iret
shl
push
lods
clc
fcomi
adc
jge
dec
mov
shrb
push
sbb
xor
sub
stc
je
adc
imul
arpl
sbb
xor
dec
xchg
cmc
add
lret
xor
push
push
out
inc
sbb
pusha
js
js
xchg
mov
mov
xchg
fwait
shrb
out
xlat
inc
lahf
and
cmp
xchg
in
or
adc
movsl
pop
adc
stos
jnp,pt
push
mov
andb
mov
mov
pop
mov
sbb
push
inc
fdivs
sbb
dec
jne
mov
adc
dec
out
pushf
push
mov
call
inc
test
sbb
insb
mov
or
nop
or
es
cmp
addl
arpl
inc
enter
push
and
aaa
sub
fcoml
push
movsl
ljmp
sbb
mov
sti
sub
xor
xchg
jns
sarb
and
and
push
rolb
cmp
repnz
hlt
dec
not
loope
xor
fisubrl
stos
es
int
mov
loope
dec
es
mov
leave
add
adc
out
mov
fnstenv
aad
lods
outsb
dec
decl
add
or
loopne
pop
ljmp
test
xchg
iret
ret
jmp
lods
es
jl
adc
lret
cmp
and
sub
push
or
stc
jb
and
mov
stos
mov
insb
iret
xor
sbb
push
push
fidivs
inc
shrb
loopne
mov
push
mov
enter
out
jecxz
sub
loop
pop
les
xchg
jns
xor
mov
cwtl
cmp
push
jne
jecxz
pop
push
xchg
call
shl
test
push
icebp
sub
mov
fnsetpm(287
in
scas
mov
and
cld
add
pop
dec
lea
lods
pop
loopne
movsb
hlt
push
or
inc
and
mov
sbb
sub
dec
xor
bound
bound
pushf
jnp
add
xor
pop
dec
leave
adc
movsl
dec
jns
xor
or
mov
push
lods
idivl
fwait
loopne
loopne
sbb
into
and
icebp
dec
adc
test
fists
mov
addb
lds
add
loop
dec
imul
hlt
xchg
ljmp
cmpb
lret
sarl
inc
add
mov
aas
pop
mov
lea
push
push
or
adc
es
scas
pop
enter
push
adc
mov
pcmpeqb
mov
clc
inc
into
enter
orl
mov
inc
pop
and
add
xchg
jl
les
imul
bound
xchg
jo
inc
cmp
push
mov
push
out
fstl
xchg
xor
sbb
dec
nop
xchg
hlt
cmpl
and
pop
push
and
std
xchg
mov
inc
int
outsl
add
pop
sbb
test
dec
inc
push
xor
cmp
mov
mov
sbb
cmp
ljmp
inc
adc
int
cmpsl
js
aam
inc
leave
xor
adc
sti
inc
jne
lret
cmp
adc
arpl
add
sub
xor
mov
cmpsb
iret
dec
ret
xor
std
es
inc
es
or
xor
xchg
inc
imul
stos
xchg
push
push
out
ret
popf
ss
cmp
adc
imul
cmp
movsl
int
adc
test
fcompl
cld
cmp
push
ret
jle
sbb
loope
mov
out
fwait
in
les
mov
cli
mov
les
or
decl
jmp
je
js
lcall
and
in
cmpsb
and
pop
rcrb
pop
repnz
or
addr16
add
mov
inc
jecxz
ret
outsb
xor
mov
inc
bound
adc
movsl
in
pop
xorl
aaa
out
rorl
mov
mov
fstl
mov
add
test
mov
adc
mov
and
pop
int
lret
adc
inc
mov
xchg
cltd
pushf
int
pop
xor
adc
inc
inc
ljmp
xchg
xor
jecxz
inc
ljmp
jmp
mov
sub
dec
ljmp
cmp
push
icebp
out
pavgb
popl
xor
addr16
sahf
jp
dec
jle
in
mov
jl
xchg
adc
rorb
icebp
inc
push
stos
jge
or
and
out
inc
cmpsb
pop
fidivl
ret
or
sbb
into
mov
in
popa
iret
mov
into
lock
pop
test
in
iret
adc
fnstsw
bound
mov
jno
cltd
fcmovnu
into
scas
or
mov
cmp
add
inc
pushf
popf
cwtl
jno
jb
rcll
jne
ss
pop
nop
mov
mov
cmp
xchg
push
push
and
mov
mov
dec
xchg
dec
sarl
fdivrs
push
imul
movsl
adc
sti
mov
notl
imul
push
fnstenv
sbb
in
shrb
and
adc
lcall
and
ss
outsl
push
data16
adc
adc
stos
sbb
cld
outsl
inc
jb
dec
das
outsb
fiaddl
mov
dec
or
mov
popf
push
jne
stc
and
push
mov
jo
daa
sarl
loope
mov
mov
jbe
mov
insl
push
cmp
jp
pop
push
inc
outsl
repz
jnp
fldt
mov
popa
cmpsl
imul
in
into
dec
stos
in
pop
or
aam
inc
pop
inc
test
mov
das
push
lret
jge
fdivr
insb
out
xlat
mov
dec
push
leave
aaa
mov
sbb
js
icebp
push
cmp
aad
push
movsb
xchg
push
sbb
cmp
and
push
imul
cmp
imul
adc
out
push
add
stos
pop
or
jg
cmp
or
arpl
int3
cs
ds
or
add
sbb
lea
test
xor
fidivl
cmp
cmp
and
repz
jle
into
and
lcall
and
sbb
push
lock
cs
or
fisttpll
xor
mov
imul
test
lds
push
mov
cmpsl
dec
pop
cmp
jecxz
mov
push
xchg
sub
fistpll
scas
testb
clc
stc
pop
in
test
xchg
mov
pop
out
mov
mov
lock
or
mov
outsb
daa
push
xchg
icebp
jbe
mov
jne
das
sbbb
add
iret
daa
jmp
add
push
daa
shrb
loope
cld
jbe,pt
lods
pusha
lea
add
push
mov
into
insb
jle
sti
add
jo
adc
cmc
mov
xor
imul
sub
push
dec
jnp
mov
mov
push
hlt
ror
xlat
dec
xchg
lret
cmp
mov
std
cld
fildl
or
mov
repnz
test
nop
rcl
dec
subl
and
nop
add
xor
push
xor
sbb
push
jmp
cmp
arpl
xor
movsb
adc
adc
xor
bound
xor
jb
sbb
or
dec
iret
xchg
mov
sarl
xchg
cltd
ret
add
and
fwait
push
movsl
add
jno
repz
sbb
into
mov
mov
add
cld
sub
pop
pop
cmc
xor
jnp
iret
ljmp
sbbb
jmp
push
push
push
outsl
js
repnz
js
adc
loopne
jmp
ja
mov
enter
test
imul
jecxz
stos
out
dec
bound
scas
jne
mov
not
fisttpl
xor
mov
rolb
pop
cmpsb
aaa
shlb
mov
mov
sbb
loopne
les
mov
inc
popa
sbb
fxch
sub
out
pushf
sti
sbb
hlt
fnstsw
inc
xor
pop
ret
lret
inc
rcl
sbb
fwait
and
rolb
popa
aaa
pop
adc
lock
daa
or
or
aad
popf
aas
test
xchg
push
cld
adc
and
enter
fwait
popa
jl
inc
cmpl
mov
out
pop
adc
cwtl
lcall
pop
mov
push
xor
cmp
lea
mov
hlt
push
xchg
shll
lret
loop
mov
jne
jno
daa
add
and
lock
jmp
mov
rclb
push
cs
aaa
mov
gs
in
cs
inc
dec
push
cmp
daa
imul
add
mov
xchg
inc
dec
xchg
inc
mov
sti
stos
and
cld
mov
pushf
cli
inc
out
cmp
lods
mov
cs
adc
xchg
jge
dec
sbb
sbb
xchg
aas
jl
mov
mov
loop
xor
das
cs
inc
add
pop
movsl
fidivrl
adc
and
shrb
xor
lds
inc
out
pop
dec
inc
cs
sbb
lods
inc
in
mov
cmp
cmp
rorl
mov
iret
dec
push
and
pop
xchg
mov
stc
imul
js
arpl
ret
mov
cld
lcall
insb
jl
sbb
nop
mov
pushf
js
out
mov
dec
lds
fs
adc
setp
mov
cmp
dec
push
sbb
adc
add
call
pop
les
imul
mov
pop
sub
adc
mov
mov
inc
cltd
imul
adc
pcmpeqw
mov
push
imulb
fwait
cmc
mov
outsl
lret
out
loop
dec
sub
call
or
add
int3
push
and
dec
bound
ret
xchg
rcr
cmpsb
call
aaa
lret
iret
push
cmp
mov
mov
fcmovnbe
jns
lock
das
adc
xor
lods
stc
mov
out
push
sub
es
jne
sbb
push
push
mov
xor
fcomp
push
jnp
jmp
shlb
mov
and
test
or
stos
mov
test
movsb
adc
adc
repnz
fwait
sub
ret
in
sbb
iret
push
dec
and
in
rolb
js
pusha
popf
and
and
dec
jns
dec
sub
adc
push
lds
shrl
xchg
mov
xor
fimull
push
dec
fimuls
out
aas
cltd
ficompl
dec
push
adc
flds
or
add
movsb
lahf
or
in
sub
scas
inc
push
cmp
cld
mov
pushw
dec
and
repz
lcall
sub
dec
inc
xchg
mov
sbb
fwait
push
sti
push
shlb
xchg
and
jae
push
fistpll
add
frstor
and
xchg
xchg
jnp
in
mov
or
sbb
sbb
sbb
dec
dec
jmp
int3
or
mov
scas
mov
mov
dec
paddsw
js
xor
nop
lret
pop
outsb
mov
scas
and
repnz
or
gs
enter
adc
cmp
xchg
sbb
aas
out
jle
adcl
daa
and
cmpsb
jp
test
mov
jo
inc
fadd
pop
sub
in
js
arpl
jg
aam
pop
mov
stc
adc
js
adc
sbb
jecxz
dec
mull
std
or
push
xchg
rclb
push
mov
mov
shll
jnp
hlt
add
push
push
popa
push
pop
andb
push
mov
push
out
pop
inc
fwait
roll
push
ljmp
cmp
cmp
jb
add
pop
jg
sti
fs
stos
repz
and
cmp
and
sub
movsb
or
mov
mov
mov
xor
push
hlt
jae
addl
push
push
xchg
sub
repz
mov
jo
pushf
inc
cmpxchg
or
sti
xor
stos
dec
and
adc
sti
sub
jmp
adc
in
pop
xchg
hlt
in
rcrb
pop
arpl
not
iret
dec
adc
lret
test
mov
jle
mov
sbb
in
or
mov
mov
les
sbb
out
sbb
adc
mov
jle
jecxz
je
ret
push
xchg
pop
loope
push
mov
lret
mov
jnp
sti
mov
push
scas
push
or
repz
andb
clc
push
and
mov
inc
mov
add
pop
repz
sbb
into
jp
xchg
aas
inc
xchg
dec
adc
ret
inc
sbb
movsb
sahf
cmp
dec
inc
push
jge
push
fwait
dec
cmp
dec
cmp
adc
stos
push
les
sarb
mov
aaa
scas
jecxz
fisttps
mov
filds
aad
ret
je
bound
mov
cmp
test
fwait
inc
and
cmp
test
adc
movsw
mov
enter
aad
test
arpl
xchg
mov
sub
inc
test
or
cli
mov
xor
fisttps
shlb
inc
cmpsl
jnp
cmp
add
add
add
or
in
lock
pop
lret
mov
jge
imul
adc
xor
xor
dec
pop
data16
lods
and
pop
pop
test
lret
push
ret
mov
jecxz
xchg
sbb
mov
out
inc
lahf
jle
add
ljmp
lods
jno
mov
add
xchg
sub
cmpsb
cmc
js
jecxz
insw
mov
pop
fnstenv
movsl
jmp
in
mov
testl
adc
cltd
or
ret
or
sbb
in
imul
mov
das
bound
mov
cmp
add
test
lods
lods
insl
or
sbb
clc
cmp
xchg
push
or
mov
lcall
jge
jbe
sti
mov
mov
inc
mov
pop
jne
add
das
xor
loop
mov
and
jbe
sub
aas
adc
xchg
insb
dec
xor
idivl
sbb
repz
imul
subb
jle
fyl2x
subl
push
in
out
mov
cli
xor
movsb
fwait
adc
mov
adc
cld
pushf
loopne
cmp
mov
cmpsl
lret
pushf
rorl
jl
jb
cmpsl
push
xchg
xchg
std
frstor
cltd
xchg
xorl
jge
xchg
or
dec
push
push
or
out
out
cmp
sub
add
mov
orb
pop
cmp
cli
cmp
xchg
mov
loope
jns
adc
add
pop
dec
or
inc
push
repz
mov
pop
jno
cmpsl
push
push
int3
cwtl
adc
inc
push
fisubrs
mov
pop
fdivs
inc
gs
jbe
adc
or
push
jg
pop
add
loopne
je
xlat
mov
add
push
pop
fs
outsl
dec
xchg
arpl
push
push
jp
push
dec
nop
dec
jg
imul
sub
into
cltd
xchg
jns
mov
mov
adc
dec
pop
jo
add
ss
xor
or
bound
sbb
pop
xchg
rorl
lahf
or
and
push
xchg
and
stos
ffreep
and
inc
cmc
pop
bound
xchg
jno
mov
add
mov
or
cmp
fisubrs
fstl
mov
and
xlat
sub
pop
sub
inc
push
sub
jae
es
xchg
xor
cltd
rcr
daa
fisubl
test
jb
into
insl
push
mov
push
jle
dec
loopne
inc
dec
and
aas
jo
call
shlb
push
cmp
pop
lods
xor
xchg
and
inc
xchg
cmp
ljmp
jp
mov
ret
xchg
loop
and
or
leave
lock
push
adc
xlat
test
push
xchg
js
ja
fwait
ss
js
icebp
mov
mov
mov
loop
lahf
mov
add
cmc
sub
ficompl
ret
shrb
fldl
inc
xor
fildl
dec
shrb
popf
and
imul
lock
movsl
mov
popl
pusha
lret
pop
xor
les
or
push
cmp
iret
int3
dec
test
sub
dec
mov
xchg
mov
rorl
dec
rolb
cmp
sub
lods
xchg
bswap
jbe
outsb
and
scas
add
push
icebp
mov
loop
push
fsubrp
nop
stc
aas
sub
add
mov
in
xor
ret
ret
push
cmp
cmp
sbb
sub
lock
shl
mov
xchg
fisttpll
test
add
loopne
daa
pop
imul
sub
cmpsb
mov
lret
add
test
in
mov
dec
sahf
mov
add
pop
shl
in
fwait
gs
popa
lods
aad
xor
pop
mov
push
pop
push
mov
insl
fstps
dec
push
pop
inc
dec
pop
sbbb
push
sbb
sub
iret
cmp
cmp
outsb
ljmp
pop
jno
fbld
loope
rclb
sub
or
shrl
stos
fs
or
jb
mov
jle
add
sahf
cltd
fidivs
add
addr16
jle
xor
dec
mov
arpl
fisubrs
sub
aam
cld
in
xorb
fstps
mov
int3
push
cmp
test
add
rorl
repnz
stc
mov
xchg
into
cmp
test
add
addr16
xchg
jnp
lods
insb
cmc
mov
xchg
adc
cld
mov
xlat
add
decb
pop
dec
push
cmp
sub
pushf
mov
pop
outsb
addr16
lds
icebp
loopne
pusha
popa
iret
ss
std
repz
add
gs
mov
xchg
jmp
cmc
inc
in
pop
mov
cmp
push
or
scas
mov
movsl
xchg
xchg
fbld
xchg
xor
xor
or
sub
hlt
pop
dec
stc
dec
in
jp
into
add
dec
es
xchg
fisttpll
iret
loope
pop
pushf
jp
int
fadds
fisubrl
pop
mov
rcrb
repz
push
push
into
nop
cmp
les
mov
and
lea
or
int
scas
ret
fsubs
jb
inc
mov
sbb
mov
mov
mov
addr16
sbb
cmpsl
scas
push
inc
test
in
out
movsl
pop
cltd
mov
pushf
dec
out
dec
xchg
shl
stc
adc
icebp
shll
repnz
mov
pop
inc
lahf
push
js
sub
fdivs
jmp
inc
out
dec
mov
xchg
sbb
cmp
adc
scas
jle
sti
or
inc
mov
adc
xchg
inc
mov
dec
popf
push
dec
xorb
pop
add
cmc
push
inc
test
mov
inc
xor
out
mov
xchg
sub
xchg
push
bound
cmp
pop
fisubl
roll
jmp
inc
dec
inc
mov
dec
fstpt
mov
popf
jbe
subb
xor
stos
push
jl
sub
test
xchg
cmp
mov
test
push
into
xchg
push
push
cmp
cmp
push
xor
insb
inc
sti
lret
cmp
lret
adc
ljmp
dec
sub
dec
gs
push
pop
daa
les
out
lcall
sbb
jp,pt
xchg
popa
push
xor
and
xchg
adc
imul
loope
cltd
xor
fdivrs
dec
cs
xchg
popa
les
iret
fsts
mov
out
mov
pop
movsl
inc
mov
insb
loope
flds
mov
or
inc
push
fistps
aas
cmp
rcrl
aam
cmp
cmp
enter
loope
je
test
das
xor
sub
lahf
adc
mov
in
pop
or
mov
or
add
cmp
leave
xchg
sti
push
mov
cmp
mov
or
sub
xchg
sbb
push
mov
repz
loope
pop
or
push
cmp
into
inc
pop
ror
mov
mov
testb
xor
pop
das
mov
inc
sbb
xchg
sbb
mov
bound
dec
daa
bound
lods
push
gs
insl
ret
xor
xorl
mov
xor
mov
pop
loope
lods
and
nop
pop
les
stc
dec
dec
xchg
dec
sub
les
ljmp
mov
xchg
popf
jl
or
inc
inc
and
pushf
lods
adc
cmp
push
fstps
mov
addr16
jl
xor
mov
inc
out
inc
adc
rol
ficompl
hlt
sti
jmp
and
inc
and
sub
sub
xor
fbstp
and
dec
hlt
mov
add
mov
pushf
adc
addl
cmpb
daa
push
jg
cmp
sub
test
xor
std
call
push
gs
mov
mov
and
add
sbb
stos
inc
pop
jnp
mov
jle
add
daa
dec
inc
out
loop
inc
pop
test
hlt
push
dec
push
push
and
leave
movsl
int
xchg
adc
mov
arpl
sbb
subl
sahf
sbb
repz
mov
mov
jecxz
sbb
push
mov
ret
in
inc
pop
xchg
pop
add
stos
xlat
cmp
or
sahf
or
xchg
std
xor
mov
mov
xchg
movsb
sub
xor
xchg
clc
push
dec
out
mov
adc
jbe
sbb
lcall
and
xchg
mov
jns
cmp
pop
popa
mov
hlt
insl
imul
push
pusha
popa
clc
dec
fildl
orl
lea
or
add
outsl
push
mov
orl
adc
dec
jns
mov
test
shl
lcall
ljmp
push
fs
jno
inc
aas
sti
lea
iret
fwait
pop
dec
inc
int
fiadds
add
inc
xchg
inc
fisubrl
xchg
gs
add
and
cld
mov
mov
xchg
cmp
dec
loope
sub
leave
xchg
mov
push
mov
fildl
or
mov
inc
popa
add
out
lea
jns
mov
push
cmp
mov
mov
mov
mov
inc
mov
popl
push
cltd
xchg
mov
inc
cmp
jbe
add
add
sti
into
popf
xchg
mov
sbb
cs
jo
test
leave
lcall
lcall
arpl
call
mov
and
adc
push
cmc
into
cmpl
mov
outsl
pop
adc
sbb
mov
insb
mov
sti
pop
pop
test
push
sub
loop
out
imul
adc
sub
cmpsl
je
popa
push
xor
pop
clc
lock
cltd
idivl
dec
jae
push
or
inc
jns
push
mov
je
pop
pop
sub
insb
lahf
stos
adc
mov
or
out
out
mov
icebp
mov
inc
pop
pop
inc
ret
out
pop
test
or
cmc
mov
cld
pop
insl
cs
ret
push
outsl
scas
rcl
mov
mov
sbb
call
sbb
mov
fs
jno
mov
fldenv
inc
dec
or
out
ljmp
jmp
sub
dec
outsb
filds
lcall
cmp
or
add
inc
mov
dec
test
aam
jp
pop
or
cmp
or
xchg
sub
icebp
clc
sbb
push
pop
cmpps
and
xor
adc
idivl
mov
jbe
ret
pop
mov
add
sbb
or
jbe
bound
inc
cwtl
push
notl
in
adc
fildll
std
add
push
addr16
repnz
dec
je
fwait
mov
sbb
popa
testl
test
imul
jbe
ljmp
jmp
int
mov
or
mov
movsb
ss
mov
jb
stos
add
xchg
sbb
enter
mov
fimull
pusha
pop
cmc
movsl
pushf
xor
nop
adc
ret
cld
out
xor
xor
bound
add
test
jne
movsb
lods
push
dec
dec
mov
xor
test
rcrl
jmp
lods
ljmp
mov
cmpsb
cli
inc
add
mov
ljmp
aad
sti
xchg
stc
lods
pop
dec
mov
jmp
pop
add
mov
mov
subb
jns
xchg
repnz
aaa
pop
negl
sbb
imul
outsb
jp
sbb
addl
out
adc
into
stos
or
sbb
xor
and
push
sub
push
leave
push
fisubrl
cmp
nop
fisubrs
std
and
mov
mov
xor
sub
cmpsl
movsb
movsl
shlb
in
shrb
filds
pop
xchg
jg
mov
lcall
incl
dec
mov
sahf
scas
or
lret
xchg
es
out
ds
loopne
cwtl
sub
call
nop
movb
icebp
inc
push
sub
push
fnsave
inc
test
ret
mov
mov
gs
js
aad
aam
hlt
das
mov
xchg
mov
lahf
fwait
xchg
xor
mov
lcall
ret
mov
push
dec
subb
lret
mov
fnsave
aas
adc
add
lock
push
fcoml
ss
dec
out
xchg
ja
inc
das
out
and
xor
sti
pop
ljmp
sbb
xchg
ljmp
cmp
adc
xor
sub
push
mov
jg
in
push
fcoml
jge
popa
sti
pop
inc
jl
adc
into
sub
syscall
dec
push
leave
sbb
fwait
dec
adc
movsl
iret
adc
adc
scas
sbb
lahf
push
lret
sbb
js
xor
pop
iret
insl
popf
sbb
fucomip
mov
test
add
in
pop
fsubs
mov
stc
sbb
fucompp
lret
xchg
adc
lods
pop
shrb
cltd
bound
jnp
shr
dec
test
cwtl
mov
adc
cs
push
adc
or
adc
and
pop
subps
inc
sbb
jno
inc
jnp
adc
lcall
orb
iret
pop
rol
mov
repnz
mov
jecxz
pop
out
aad
jbe
and
mov
inc
cmp
or
gs
jns
inc
jns
das
dec
mov
popf
sub
mov
test
mov
push
adc
fwait
in
popf
leave
stos
stos
pop
mov
dec
fcomp
adc
hlt
sub
in
sub
push
xchg
call
add
shll
stos
hlt
in
inc
leave
push
sub
add
aaa
push
data16
arpl
jge
inc
mov
add
lcall
mov
jle
lds
int
xlat
mov
loope
lods
pop
sbbl
sbb
push
dec
mov
sub
out
es
jmp
sub
lret
cmp
fisttps
sahf
cmp
cwtl
out
inc
jo
mov
cmpsb
mov
xchg
ret
mov
leave
test
pop
lea
add
or
lahf
imul
daa
push
pop
std
loope
mov
pop
lds
inc
push
arpl
xlat
bound
push
inc
push
adc
int3
test
mov
sarl
xor
ljmp
or
add
sub
xor
cld
mov
outsb
std
jge
mov
mov
mov
sbb
ja
pop
jmp
sub
outsb
in
mov
mov
and
enter
arpl
cltd
mov
xchg
push
pop
xor
dec
mov
xchg
out
adc
jns
fadds
sbb
adc
in
test
ds
dec
loop
les
xchg
or
jmp
mov
inc
je
inc
lods
sub
scas
mul
push
adc
sub
icebp
movsb
push
mov
in
adc
dec
pop
dec
aaa
and
mov
sti
pop
and
lds
xchg
cmp
mov
sbb
fcompl
pop
and
push
jne
ret
push
cld
jge
cmp
xor
push
mov
pop
stos
jge
lds
cmp
push
out
inc
flds
or
mov
lock
cmc
cs
es
lods
and
push
out
mov
and
shl
shrb
push
add
movsb
cld
xchg
xchg
add
lahf
jo
test
and
ret
movsl
push
ljmp
insb
out
inc
sub
xor
je
lods
xor
popf
xchg
xchg
sub
or
mov
push
imul
pop
cmp
ds
out
push
ss
fsubl
mov
ss
bound
rolb
push
pop
lods
mov
ljmp
test
into
js
xor
mov
push
mov
popf
push
mov
dec
and
and
push
rorb
out
clc
or
ljmp
mov
cmp
mov
es
sub
mov
inc
cld
loope
popa
das
adc
dec
icebp
sbbb
and
xor
mov
outsl
jmp
cmp
cmp
jo
movsl
adc
mov
sub
loopne
movsb
push
jge
sarb
jnp
cmp
mov
aaa
adc
outsb
mov
xchg
fists
dec
test
cwtl
and
pop
in
add
out
mov
push
imul
push
push
dec
cmp
call
lcall
and
adc
dec
es
negb
adc
hlt
lods
movsl
rcrb
icebp
or
xchg
push
icebp
pop
aam
jp
add
mov
inc
add
jg
movb
mov
aas
sti
je
pop
in
shl
inc
sbb
clc
cmp
test
xchg
in
in
in
or
mov
push
dec
les
jecxz
or
les
jno
es
pop
and
or
xchg
sbb
push
mov
mov
cmpl
shr
mov
inc
fdivrs
mov
ja
mov
push
inc
xorl
dec
psubd
insl
fcom
rolb
notb
cmp
add
dec
pop
cld
js
repnz
inc
test
cmp
jmp
pop
out
std
arpl
in
mov
leave
pop
pusha
mov
dec
out
add
mov
out
nop
fwait
std
xchg
fs
sti
cmp
fnstsw
cltd
stc
or
les
in
mov
jp
push
jg
aad
loop
por
lods
das
cmp
hlt
sar
pop
popf
jp
pop
addr16
jg
cmp
mov
push
mov
sub
sbb
insb
fwait
inc
cli
mov
mov
jnp
mov
xor
cmp
and
ret
fs
cmp
and
fstp
sbbb
pop
les
xor
fstpt
mov
fistpll
push
push
and
in
jg
pop
dec
adc
mov
pop
mov
cli
jo
add
stc
xor
ljmp
std
xchg
jnp
sub
sub
aam
or
mov
rcll
sub
notb
neg
inc
or
push
clc
in
lahf
mov
pusha
mov
mov
xor
or
xchg
xor
imul
pop
or
andb
jbe
or
nop
nop
inc
lcall
cltd
push
test
inc
adc
xchg
adc
adc
push
cmp
add
pop
cltd
test
in
test
and
dec
jne
stos
fwait
je
out
pop
inc
adc
divb
ds
lcall
imul
insb
mov
xor
xchg
stos
les
add
jle
hlt
dec
push
xchg
xchg
es
lock
cmp
dec
js
cmc
xchg
movsb
in
cld
mov
call
data16
inc
adc
popa
mov
add
mov
jnp
mov
jecxz
imul
jnp
popa
aaa
arpl
jge
cmc
push
icebp
imul
and
subl
xchg
inc
push
sub
cmp
arpl
cmp
jp
rcrl
fisubs
fs
cmp
fildl
hlt
push
rclb
in
adc
out
push
nop
mov
clc
out
imull
in
xor
outsb
adc
fs
in
cmc
lock
loopne
mov
cs
clc
push
jp
movsl
jo
jmp
jg
jb
mov
fwait
dec
sub
sbb
mov
and
and
pop
pop
das
lock
lret
adc
push
bound
das
mov
lods
mov
dec
sahf
cwtl
je
lea
pop
mov
repz
insb
test
xchg
inc
mov
ret
xor
xorb
mov
lods
cmp
adc
pop
loopne
mov
fldcw
xchg
cmp
jl
mov
dec
mov
add
out
jno
mov
ja
or
imul
call
inc
fcoml
shlb
cs
insl
inc
into
ds
out
rol
mov
dec
and
daa
arpl
sub
mov
dec
ss
xor
dec
scas
mov
push
jae
mov
and
push
fimull
cmp
push
sbb
fisttpl
clc
fisubs
daa
or
test
xchg
testb
lea
fistpl
fwait
pop
inc
fsubrs
mov
push
mov
dec
mov
cltd
lods
sub
dec
mov
lock
aaa
ds
mov
test
cmp
pop
stos
cmc
in
stos
dec
lahf
loop
and
lods
lock
clc
inc
mov
fldcw
jo
sbb
lahf
jno
xchg
jno
pop
popa
mov
sbb
jp
call
andb
lahf
in
test
mov
xor
ss
pop
andl
adc
and
push
jge
loope
xor
ja
les
fidivrs
mov
sub
ficomps
xor
movsb
stos
gs
xchg
pusha
hlt
rcrl
jns
addr16
xchg
mov
cmp
imul
stc
inc
jo
lret
fisubrl
inc
adc
in
ljmp
lea
cmpsb
cwtl
xchg
test
lret
out
pop
daa
aam
sbb
cmp
adc
loopne
cld
in
loope
imul
sbbb
js
outsl
sub
test
jns
call
ret
aaa
push
outsb
gs
ret
push
jns
xlat
stos
mov
dec
inc
shlb
bnd
inc
scas
dec
jmp
sub
lret
rcll
mov
mov
out
popf
loope
jno
xor
or
out
jecxz
ja
nop
dec
hlt
ds
jmp
mov
mov
sub
js
in
jno
xchg
mulb
stos
inc
xchg
sbb
outsl
sub
mov
cmpsl
jecxz
xchg
call
mov
cmp
shrl
and
dec
push
pop
movsl
popf
mov
mov
hlt
cltd
pop
dec
xchg
and
mov
jge
sub
stos
ret
mov
insb
imul
jb
out
fstps
fildl
adc
das
pop
push
fwait
push
xor
movsb
aad
mov
cs
aad
pop
inc
mov
fs
repnz
push
fs
loopne
push
hlt
stos
cld
add
sub
add
or
imul
out
fwait
pop
cmp
add
jb
push
test
adc
imulb
clc
jecxz
test
mov
dec
inc
mov
shufps
or
mov
mov
dec
sbb
sub
or
movsl
sbb
loopne
stos
sbb
cmp
mov
cmp
mov
pusha
jp
test
ret
cli
or
in
xchg
cmc
lock
insl
push
sub
cmp
stc
in
sub
mov
div
cltd
psubusw
fwait
lods
aad
mov
int
push
pop
aaa
aaa
shrl
imul
push
and
mov
rorl
arpl
cmc
subl
aaa
loop
push
and
sbb
out
jns
push
add
movsb
in
pop
call
jnp
arpl
ds
mov
xchg
orl
push
pop
mov
add
push
imul
scas
sbb
sbb
sub
mov
sub
sub
scas
sti
mov
pop
mov
adc
das
dec
mov
pop
cmp
adc
jbe
ds
repnz
decb
mov
pop
cmp
add
ret
leave
pushf
pop
jmp
inc
shll
inc
dec
out
popf
out
push
mov
jae
jnp
cld
lods
cmp
xor
shll
repnz
ret
ja
aaa
test
fisubs
xchg
mov
sub
mov
pusha
inc
and
sbb
mov
xor
and
pop
inc
repnz
sbb
shl
inc
aam
mov
jl
bound
push
jbe
mov
pop
dec
jne
nop
pop
add
fcomps
adc
dec
or
push
mov
add
jmp
ret
inc
mov
mov
pop
out
jno
and
cmp
adc
ret
cmpsb
pop
test
loopne
add
shll
jo
insb
mov
imul
sub
dec
inc
je
cmpsb
sub
call
mov
pop
fs
pop
pop
sahf
out
or
je
mov
rolb
aam
pop
xchg
cmp
lcall
jp
adc
mov
pop
sbb
cmp
xor
adc
in
push
mov
sub
scas
adc
inc
lcall
inc
adc
jmp
test
inc
pop
or
sahf
jnp
cwtl
sub
out
jno
scas
std
mov
leave
pushf
xchg
cmp
fsubrl
or
dec
push
or
pop
aam
js
imul
stos
std
mov
jno
push
gs
inc
cmp
cmp
scas
and
xor
packssdw
prefetch
sti
push
repz
mov
dec
mov
enter
in
sbb
push
or
push
lods
cltd
add
xchg
cwtl
aam
and
mov
in
pop
dec
jnp
repnz
ljmp
inc
push
fadds
xchg
int
mov
adc
pop
pcmpgtw
lock
stc
pop
jge
inc
lock
sahf
push
lret
cs
and
and
push
loop
ja
mov
clc
sahf
adc
aad
pop
pop
mov
sbbb
adc
ret
and
inc
lea
in
mov
test
repnz
in
cmpsb
divl
mov
cmpsb
scas
mov
ja
ret
sub
jb
hlt
je
mov
cmpsb
in
mov
mov
xchg
mov
or
pop
test
xor
pop
dec
pop
lds
aam
aad
negl
mov
xor
int
aad
cmpl
inc
test
jno
jle
push
lods
jge
inc
cwtl
jp
xor
inc
inc
xchg
jo
mov
mov
repz
cwtl
push
jmp
xchg
in
adc
mov
push
sub
push
jecxz
dec
or
sub
or
inc
pop
or
mov
sti
pop
mov
pushf
inc
xchg
test
stos
mov
add
sar
jg
mov
call
out
mov
sbb
mov
adc
mov
int3
rorl
dec
inc
mov
sbb
sub
cmpsl
imul
cmpb
cmpsl
call
outsb
pop
sbb
and
jns
leave
sub
push
pop
out
pop
testb
push
imul
fistpl
fimull
sti
sti
mov
or
add
and
les
push
shll
sbb
mov
push
sbb
icebp
add
xor
fsubrp
popa
mov
sbb
jge
rcl
addl
mov
pop
int
aaa
popa
out
addb
or
shl
mov
shll
sub
inc
jge
pop
mul
test
inc
sahf
or
inc
mov
sbb
cmc
inc
rclb
pop
sub
pop
or
aaa
out
nop
aaa
jl
shrl
jmp
jno
mov
sti
mov
stc
inc
push
mov
aam
daa
icebp
mov
or
test
movsb
stos
or
std
and
ds
mov
push
outsb
daa
dec
jns
and
mov
adc
repz
in
mov
arpl
cwtl
es
mov
xor
inc
cmp
shlb
mov
mov
in
lret
and
sub
xchg
stc
mov
or
scas
xchg
imul
pop
sbb
xchg
iret
add
lcall
pop
in
inc
les
and
lret
xor
rcll
imul
push
and
xor
loope
lret
inc
lahf
aas
xor
xchg
and
push
mov
jnp
sbb
stos
dec
xchg
jmp
je
adc
ror
inc
xor
add
mov
fldl
lahf
pop
adc
lret
jo
cmp
cmp
xor
mov
repnz
inc
jle
add
adc
not
ss
sub
out
xchg
xchg
test
dec
dec
fxch
out
in
les
cmp
insl
mov
outsb
pop
sti
adc
int
mov
test
test
lds
inc
enter
adc
cmp
fcoml
popf
sub
cmc
pusha
iret
int3
pop
add
jp
cld
xchg
xchg
cmp
mov
ljmp
enter
sub
pop
mov
jbe
enter
lods
inc
notl
shrb
pop
pop
inc
sub
loopne
jne
jbe
bound
sarb
xor
loop
repz
stc
sbb
pop
xchg
push
mov
mov
mov
jo
or
mov
and
push
mov
pop
cmp
repz
add
mov
mov
mov
jae
lock
arpl
cmp
xchg
xchg
push
push
sbb
inc
inc
dec
enter
pushf
jecxz
xchg
popa
mov
popf
jge
and
aad
xor
fwait
addl
mov
lahf
cmc
push
sbb
enter
call
push
ficoms
mov
test
jg
jno
outsl
insl
in
mov
insb
dec
push
popa
xchg
test
jmp
or
cmp
push
mov
jne
pop
mov
div
and
dec
add
add
push
xchg
hlt
sub
mov
lods
adc
pop
or
sbb
and
sub
mov
insb
cmp
pop
push
fwait
cld
arpl
popa
imul
out
adc
dec
int3
fbld
test
push
push
push
jno
pop
sti
inc
push
jbe
into
jae
fcmove
pusha
outsb
pop
lcall
jnp
fcmovbe
sub
and
and
je
mov
mov
popf
push
xor
in
mov
inc
in
sub
mov
jne
adc
cmp
cwtl
sar
lds
aaa
aas
das
fcmovbe
jecxz
jecxz
mov
movl
ds
out
icebp
or
sub
addl
bound
rol
mov
notb
inc
jne
push
sarb
push
dec
fxch
lods
jbe
inc
mov
push
adc
pop
xchg
xlat
jl
xchg
popa
pop
mov
mov
andb
data16
shrl
or
or
cmpsb
movl
jl
lods
adc
xor
dec
sti
add
shlb
iret
test
ja
adc
sarl
or
or
and
dec
jb
push
cs
jmp
mov
sub
cmc
and
or
mov
dec
cld
sbb
in
pop
fsubl
sub
aas
adc
pop
or
scas
lods
out
shrl
out
ja
scas
xor
dec
jnp
lods
in
or
insl
pop
jno
mov
popf
jecxz
cmc
int
sbb
ljmp
sub
inc
cmp
pop
jbe
imul
dec
bound
push
inc
popf
outsb
nop
pop
push
movsb
xor
add
jnp
repz
push
sar
inc
sahf
repz
out
push
adc
xchg
int3
jns
fisubrs
push
push
aas
es
jno
and
cmp
addr16
loopne
jecxz
movsl
jo
adc
dec
fimull
lock
add
mov
or
xor
mov
out
iret
mov
pusha
cmp
push
sub
mov
dec
mov
popa
adcl
shrb
inc
fbld
adc
scas
cwtl
and
jo
pusha
pop
inc
or
cmp
ja
mov
test
adc
ret
clc
popa
xor
pop
push
sbb
mov
int
sbb
xor
xchg
test
jo
rol
stos
pop
xor
mov
mov
jnp
rorl
icebp
push
fsubr
bndldx
xchg
add
mov
pop
loopne
adc
or
mov
fsub
mov
pusha
aas
inc
clc
negl
popf
inc
js
lcall
pop
adc
mov
pop
push
push
dec
sub
data16
pop
imul
pop
xchg
push
sti
pop
or
push
fwait
out
cmp
fsub
inc
pop
movsb
push
jne
enter
sarl
push
lret
pop
aad
loope
sarb
jge
orl
push
movsl
mov
and
js
inc
xchg
pop
clc
repz
inc
push
xor
push
adc
lods
adc
jnp
scas
sbb
cmc
fdivs
fdivl
fmul
test
jp
roll
cmpsl
int
nop
inc
and
add
adc
jns
scas
mov
jecxz
add
adc
dec
nopl
sub
sbb
fwait
in
inc
mov
xchg
jns
js
push
mov
aas
cmp
lods
aam
sbb
call
clc
jae
sub
jne
add
or
enter
and
mov
sub
jb
cwtl
jp
or
add
stos
bnd
and
mov
je
stos
push
or
adc
sub
add
pop
sbb
mov
fnsave
frstor
test
jge
and
mov
jl
outsb
adc
movsb
clc
out
imul
cld
mov
enter
jbe
adc
mov
xchg
sub
loope
enter
loop
das
sahf
mov
fsubrl
add
jge
das
sbb
xchg
or
out
jg
outsb
test
in
and
iret
fcoms
add
or
ja
sub
icebp
stos
inc
cwtl
mov
leave
adc
aam
mov
lret
xor
insl
in
add
mov
xlat
add
mov
icebp
mov
dec
adc
pop
adc
fs
dec
xchg
push
in
das
add
mov
fcmovnu
sbb
in
push
xchg
adc
sbb
test
outsb
mov
sbb
mov
xchg
mov
jecxz
push
cli
fmull
mov
gs
add
sbb
divb
add
cli
and
scas
cmc
xchg
mov
push
dec
es
jnp
clc
test
and
dec
xchg
inc
lcall
fs
jbe
fwait
mov
ljmp
int
xlat
push
bound
adc
sub
call
cltd
dec
fld
mov
mov
add
add
roll
pop
mov
fsubrp
call
inc
xor
push
popa
jb
cwtl
mov
mov
xor
jo
rcrb
mov
inc
data16
push
dec
cmp
ljmp
test
outsl
dec
adc
mov
addb
jp
icebp
stos
fbstp
std
je
dec
ljmp
shll
adc
or
fildl
fs
adc
sub
push
ss
jmp
push
rcrb
stc
test
je
jns
sub
adc
pop
and
negl
repz
and
dec
push
xchg
cwtl
cltd
lods
jle
insb
divb
leave
sub
adc
loopne
xchg
fcmovnb
push
cmp
movsl
lds
pop
fcomps
and
stc
mov
mov
xlat
fstpl
insl
lret
orl
cli
xor
and
jae
mov
insl
mov
test
shll
pop
stc
mov
jl
xchg
push
or
test
jle
sbb
insl
out
xchg
jne
inc
dec
pushf
cmp
xor
add
push
popa
inc
mov
div
sbb
cmp
fdivr
int3
fnstsw
push
das
fiaddl
cli
loop
jle
adc
xchg
iret
pop
pop
outsb
jne
cmp
or
test
cmpl
aad
clc
sbb
notb
leave
nop
loope
pop
pop
lcall
jg
cmp
pop
sar
push
imul
lods
out
test
push
repz
bound
mov
or
pop
pop
xchg
sbb
adc
pusha
dec
cli
jmp
jge
test
pop
lcall
sbb
bound
mov
push
sarl
push
sub
lods
add
sbb
mov
mov
bound
mov
out
leave
aaa
fidivs
lea
sub
dec
xor
movsl
and
add
outsl
add
in
iret
pop
icebp
aad
lea
int
add
aam
loopne
sub
lret
outsb
and
clc
pop
inc
xchg
dec
or
xchg
xor
popf
jne
or
jmp
add
inc
test
aas
mov
jb
out
push
xor
test
pop
mov
jg
je
movzwl
jo
out
jp
aam
mov
cmp
arpl
cs
imul
insl
cs
or
pop
or
dec
mov
adc
nop
in
cmp
push
pop
sub
ss
add
sti
lods
arpl
pusha
test
mov
lret
cli
dec
pop
push
jmp
adc
cmp
repz
out
xchg
jbe
or
fmul
mov
push
jecxz
call
inc
lods
enter
arpl
push
test
and
xchg
out
mov
fwait
aas
aas
test
fwait
out
imul
and
xchg
sbb
mov
dec
pop
sub
icebp
sbb
mov
add
inc
loop
inc
in
or
sbb
mov
sbb
cmc
sub
or
movsb
pcmpeqd
ds
xchg
dec
aas
dec
outsb
cmp
cmp
or
or
cli
fnstenv
cwtl
lods
jb
aaa
lods
add
jne
mov
add
leave
sti
push
incl
repz
fcoms
pop
sub
shl
repnz
cld
push
cmc
fbstp
push
cld
mov
mov
mov
adc
lods
ficoms
imul
imul
mov
xor
xchg
repz
dec
call
sbb
cmpl
test
mov
mov
repz
cmpsb
ljmp
xchg
popa
dec
push
mov
je
adcb
push
negb
test
and
out
mov
popa
sarl
fiadds
pushl
hlt
insb
loop
xchg
xor
ljmp
test
in
pop
outsl
push
jg
sti
aam
es
lret
pop
fcmovnu
push
das
lret
jge
mov
mov
and
popa
dec
jl
inc
add
push
mov
test
into
lcall
repz
jo
nop
xlat
mov
test
fsubrl
lock
or
mov
pop
pop
lock
clc
lcall
cmp
cmc
ja
stos
adc
cmp
cmp
popf
fldenv
mov
mov
aam
jmp
int
push
mov
out
in
sub
insl
in
subl
cmp
push
pop
int3
out
into
adc
in
adc
lret
fistpll
inc
mov
mov
into
jp
push
repz
mov
aam
mov
add
add
mov
mov
jl
or
insb
stos
test
and
hlt
lea
cmp
mov
dec
enter
sub
xor
mov
dec
pushf
cmpsl
push
push
rcrb
cmp
dec
jb
out
testb
pop
cli
xchg
push
scas
aaa
jb
and
cs
add
dec
add
ja
out
or
push
cmp
fbstp
out
inc
push
push
add
inc
add
and
xchg
cli
repz
push
adc
adc
mov
push
sbb
aam
fnstsw
jg
hlt
pop
xor
xchg
orl
imul
test
stos
push
dec
faddp
add
inc
dec
imul
xlat
pop
sub
pop
mov
pusha
push
jo
xor
or
leave
cmpsb
pop
add
dec
insl
pushl
ret
out
cli
enter
fisubrs
mov
inc
mov
cltd
icebp
repnz
fmull
aam
fisttps
ljmp
sub
call
push
test
imul
inc
in
add
je
adc
inc
and
lret
adcl
fucomi
adc
mov
fdivl
repnz
add
mov
pop
mov
les
aam
dec
push
cmp
push
xchg
jno
insb
test
inc
jp
cmp
sub
inc
cmp
inc
xlat
gs
mov
out
aaa
fwait
inc
push
sbb
and
pop
je
dec
cmp
fcmovne
xchg
shlb
test
pop
and
adc
aaa
xchg
jge
adc
subb
je
mov
repz
add
leave
iret
mov
adc
out
inc
dec
and
cmp
jge
shll
sub
pop
jns
mov
mov
inc
mov
cltd
hlt
pop
xor
sahf
adc
std
jae
mov
sahf
push
xchg
xchg
xor
sti
mov
push
mov
jmp
push
xchg
rorl
dec
mov
and
shrl
pop
mov
or
mov
imul
inc
stc
inc
fs
or
jl
movsb
and
stos
push
leave
lds
adc
icebp
add
jmp
mov
ss
mov
ja
push
lret
pop
fisttps
mov
sub
push
pop
cwtl
mov
lcall
je
mov
aad
cmp
mov
pop
inc
or
imul
inc
sti
movsb
es
jae
and
fstpl
stos
jns
sub
push
out
push
pop
push
test
cmc
inc
ror
scas
inc
sub
inc
lret
fsubs
cmovb
imul
jl
insb
shl
lret
inc
rep
add
scas
lcall
push
imulb
repnz
sbb
mov
fldcw
jg
mov
hlt
mov
push
daa
int
outsb
nop
rcl
or
and
mov
mov
pop
adc
pop
xor
mov
adc
add
mov
push
mov
xor
bound
jge
stos
push
mov
pop
mov
sbb
scas
iret
stc
daa
add
xor
mov
inc
je
jl
jmp
cmp
and
andb
inc
mov
repnz
ljmp
cmp
ja
in
das
sbb
inc
nop
or
test
mov
mov
cs
mov
popa
pop
sub
in
sub
mov
push
sbb
rolb
xchg
mov
jbe
enter
and
imul
mov
imul
jo
stc
fisubrl
push
lock
xchg
test
popa
fiadds
stc
ja
js
push
fwait
xchg
in
add
or
mov
add
adc
fwait
inc
mov
fidivrl
aas
xor
mov
or
pop
mov
cmp
pop
int
bound
das
test
and
sbb
sub
int3
ret
xchg
mov
fisttpl
out
in
mov
clc
cltd
insl
mov
jo
movsl
inc
mov
sbb
adc
fs
cmp
into
dec
shrb
xchg
mov
mov
sbb
sbb
xchg
adc
rolb
sub
pop
adc
and
sub
jge
sub
jnp
aas
cmp
test
push
int3
mov
arpl
outsb
decb
push
inc
cmp
out
clc
mov
sub
aaa
cwtl
imul
test
sbb
xchg
je
shrl
shll
mov
push
addr16
btc
neg
dec
das
inc
icebp
xchg
inc
dec
imul
mov
scas
xchg
jmp
xchg
push
xor
lods
imul
std
add
sbb
inc
test
inc
lods
cld
ret
fwait
jg
in
shll
movsl
fistpll
mov
clc
out
imul
addr16
call
mov
inc
mov
add
push
mov
jle
popf
add
xor
jmp
pop
cmp
dec
or
sbb
test
rol
int3
mov
cmp
cmc
sbb
jge
sbb
mov
push
xor
cld
fiadds
sub
outsl
pop
popa
arpl
jns
pusha
jo
idivl
mov
jl
jb
pusha
inc
ljmp
call
stos
add
dec
sub
stc
add
and
stos
data16
int
inc
xchg
rorl
icebp
fdivr
add
and
push
stos
stos
sbb
imul
or
mov
push
or
int3
fsubs
and
es
ds
mov
mov
ret
mov
ss
stos
aam
push
addl
imul
aam
mov
mov
push
mov
movsl
xchg
sbb
mov
movsl
sub
xchg
mov
mov
pushf
stos
mov
sti
daa
mov
repz
stos
pop
rcrb
lock
ljmp
mov
ljmp
mov
xchg
filds
or
dec
fwait
scas
jne
das
and
push
push
or
jns
nop
or
rorl
dec
popa
adc
push
loop
mov
test
cmp
xchg
insl
fsubrs
push
bound
outsb
mov
sub
adc
cmp
jmp
inc
add
or
shl
and
or
sahf
decb
aas
aaa
test
in
aad
inc
sub
enter
pop
cmpsl
fs
jno
std
xor
adc
in
stos
ret
into
mov
into
lret
shll
mov
sub
pushf
mov
mov
or
test
out
or
mov
dec
data16
jnp
and
lret
jns
call
pop
fmull
int3
cmp
lcall
mov
mov
enter
rorl
jmp
mov
xor
sub
lods
imul
popa
lret
cmp
mov
sub
jp
test
dec
ss
aad
js
or
jns
mov
pop
pop
stc
inc
cltd
insl
test
das
dec
rorb
subb
outsl
pushf
or
pop
cmpl
dec
lock
cs
nop
xchg
daa
icebp
mov
dec
aas
cmp
adc
and
js
xor
out
mov
in
jae
dec
movsl
std
inc
rorl
and
sbb
idivb
push
push
pop
sub
cltd
jo
scas
xchg
mov
mov
pop
fsubs
je
jl
dec
iret
and
cmpsb
xchg
mov
leave
mov
daa
add
es
push
aam
and
dec
mov
call
inc
sub
dec
and
aam
pop
je
insl
repnz
orl
cmp
loope
scas
sbb
xor
repnz
inc
dec
ret
fnsave
fcomps
mov
cli
ss
jp
in
rorl
ja
pop
adc
pop
int
mov
sbb
lret
or
add
pop
cmp
or
loopne
xchg
fstps
out
add
loop
in
mov
lret
sbb
repnz
dec
js
xchg
sub
cmpsl
std
mov
cltd
jb
in
or
pop
out
mov
inc
imul
or
int
imul
mov
pop
jmp
and
inc
xchg
push
in
sub
cmp
dec
adc
jge
jp
pop
mov
cld
sbbl
push
test
mov
inc
fcompl
stos
lahf
xchg
mov
ds
mov
cmp
fimull
inc
out
loope
fldl
int3
or
cld
outsl
call
jl
clc
fwait
mov
or
mov
clc
addr16
in
add
adc
jae
and
movsl
xor
aam
cwtl
into
mov
test
in
or
scas
dec
cmc
int
sub
mov
add
inc
and
ret
dec
mov
pop
xor
and
adc
lods
in
or
stos
dec
pop
dec
addb
mov
repz
sbbb
sbb
mov
cmp
fsubrs
in
lods
sbb
popf
cmp
add
xchg
cmpsl
call
cmp
xlat
cmp
fisubl
ss
icebp
add
add
arpl
jg
cmp
mov
ja
rcrl
movsl
fmull
fsubr
or
enter
nop
pop
jnp
popw
push
lcall
ret
xor
mov
scas
dec
popf
leave
inc
jnp
js
sbb
xchg
inc
sub
add
decb
sub
subb
jecxz
adc
add
cmp
mov
mov
call
push
repz
mov
xchg
add
inc
xchg
sbb
insl
test
xchg
js
xchg
dec
jmp
enter
nop
fidivl
into
aas
cmp
cmp
mov
mov
mov
cmc
cli
movsb
add
dec
jns
xchg
outsb
xor
adc
or
lahf
rcll
mov
mov
push
lods
push
xchg
adc
and
pop
push
sub
aas
das
out
es
xchg
aaa
stc
fnstcw
xor
xor
pop
iret
add
cmp
jnp
adcb
add
jl
cld
ret
and
pushl
inc
mov
push
mov
lret
cmp
mov
loopne
fldl
js
fistpl
arpl
xchg
push
imul
aas
movsb
ret
cmp
add
jb
sbb
xchg
jb
clc
lods
mov
popa
xchg
pop
and
test
cwtl
push
mov
pop
addr16
cmp
jmp
fwait
ja
clc
shrl
jb
in
fndisi(8087
mov
push
xchg
aad
jne
jmp
jle
js
aad
sbb
out
inc
test
gs
arpl
aas
lds
sbb
mov
fdivrs
scas
mov
aas
pop
mov
test
mov
xchg
adc
aam
fldt
mov
sub
rcr
cmp
jg
push
nop
xor
faddl
repnz
mov
inc
ja
aad
and
add
rolb
mov
push
inc
mov
xchg
fidivrs
mov
adc
mov
push
scas
int
aam
pop
loope
lret
and
loop
ss
lds
jg
in
xchg
mov
mov
dec
mov
mov
loope
add
pop
add
aad
test
mov
nop
js
mov
pop
fists
dec
int
lds
repnz
ljmp
pop
iret
fadds
ret
test
xchg
scas
imul
jne
sbb
xorb
movsl
adc
push
xor
aad
aam
shrb
psrlq
push
mov
inc
mov
int
arpl
loope
lods
mov
push
add
shrl
and
xor
pop
add
push
cwtl
lret
push
jae
or
mov
shl
and
mov
sbb
int3
inc
pop
stos
fwait
mov
test
jne
jl
sti
pop
lret
mov
out
icebp
sarl
inc
into
sub
mov
lret
adc
out
gs
dec
in
or
mov
negl
mov
mov
cld
in
das
mov
or
push
jno
pushl
mov
push
dec
adc
fiaddl
outsl
jnp
divl
pop
shlw
inc
lea
and
push
inc
cmp
sbb
pop
mov
xchg
xchg
in
addr16
cmp
jge
mov
push
lret
stos
pop
dec
stc
mov
jge
xchg
add
mov
xlat
jge
stos
fsub
push
bound
xor
xchg
mov
add
testl
mov
adc
fsubs
jnp
adc
jg
inc
mov
das
mov
icebp
test
inc
or
xchg
dec
mov
sbb
ljmp
cltd
cmpsl
cld
mov
iret
jbe
xor
jno
cmc
inc
popa
data16
out
xchg
shll
adc
in
outsl
add
out
inc
push
dec
push
or
cmp
rorl
cmp
daa
aad
mov
repnz
xor
push
adc
or
xchg
inc
jbe
mov
icebp
movsb
push
mov
cmp
into
inc
and
enter
sarb
sbb
sub
aad
jmp
loopne
out
sahf
cwtl
sub
add
bnd
pop
jmp
pop
mov
push
sub
lret
icebp
sbb
adc
aad
stos
rep
arpl
popl
and
popa
and
jns
add
jl
scas
jle
adc
fmull
scas
dec
sbb
xchg
or
negl
push
sbb
add
insl
sbb
pop
jle
cmp
stos
das
xlat
adc
test
shlb
mov
jns
dec
lods
out
adc
add
jno
mov
aas
cmp
cmp
aas
adc
dec
xor
fdivrp
and
mov
jg
dec
add
dec
js
xchg
daa
test
sahf
popa
mov
popf
popw
lea
and
add
cmp
call
mov
cmp
es
mov
push
test
shrb
das
push
lahf
pop
mov
xchg
lcall
mov
aam
mov
popa
pop
or
xchg
inc
push
fldt
lret
adc
lahf
popa
mov
popf
adcb
loop
scas
and
fwait
movsb
xor
sub
leave
cmpsl
xchg
sub
mov
xchg
sahf
lds
repz
insl
sbb
mov
or
mov
mov
not
repnz
xchg
pusha
clc
enter
cli
or
inc
jp
jge
cmp
mov
pop
call
sbb
stos
loop
in
lret
mov
pop
hlt
mov
cld
push
jmp
aaa
stc
ss
push
sbb
mov
repnz
dec
bound
and
jne
in
dec
insl
dec
mov
fadds
jmp
fwait
dec
pop
mov
rcll
mov
ljmp
dec
shlb
jae
sub
ja
dec
mov
call
mov
in
in
popa
xchg
mov
cmpsb
scas
and
sub
or
test
clc
in
data16
insb
addr16
daa
mov
fldenv
jmp
or
jp
repnz
jb
xchg
jge
sub
mov
ret
dec
jne
mov
mov
add
xor
jnp
cmp
inc
pop
ja
hlt
push
lcall
mov
push
xchg
sub
inc
and
mov
sbb
int
mov
sub
push
push
add
aaa
or
sbb
cmp
mov
jnp
into
mov
xchg
and
insb
mov
call
cmp
cmp
dec
cmp
xchg
dec
adc
add
sbb
cmp
mov
sbb
xor
and
jb
sbb
stc
sub
mov
sbb
cmpsb
scas
mov
or
hlt
sbbb
cmpsl
xchg
or
jae
js
sbb
xor
and
loopne
in
xor
xchg
xchg
cld
xlat
cmpsl
in
icebp
lock
leave
and
int
jmp
ss
fsubrl
xor
insl
dec
mov
mov
cmc
sub
jg
test
aaa
push
sub
repnz
pop
mov
rolb
pushf
adc
sub
lock
int
and
sub
sub
dec
aam
xchg
ljmp
lock
pop
pop
push
jae
dec
ds
sbb
xchg
inc
repz
mov
mov
xchg
adc
fistpll
push
push
sti
enter
push
mov
loop
lret
js
dec
clc
or
pop
cltd
fsubrs
push
ret
jo
gs
mov
or
sti
outsb
loope
fwait
cmpsl
lds
js
cltd
scas
mov
rolb
mov
test
pop
xor
inc
into
es
sub
call
add
repz
push
pushf
mov
negb
mov
int3
add
fistl
pop
push
push
sti
dec
dec
xchg
popl
xor
sub
popa
nop
pop
push
les
fs
es
hlt
into
in
insl
out
es
adc
movsl
and
sub
adc
push
fisttps
ret
inc
push
sbb
test
adc
xchg
int
push
inc
xchg
scas
add
es
icebp
ficoml
or
jecxz
inc
std
popa
cmp
js
cmpsl
data16
daa
adc
lds
cli
mov
dec
push
shlb
gs
xchg
xor
imul
and
test
push
jp
loop
out
push
adc
mov
inc
outsb
add
icebp
test
mov
mov
cmp
or
subb
loopne
mov
add
enter
popf
dec
add
cmp
decl
inc
test
sti
lret
xlat
fisttps
xchg
sbb
jbe
mov
pop
pop
into
hlt
inc
inc
cmp
mull
ljmp
mov
aaa
xchg
pop
mov
loope
movsl
jae
je
mov
and
out
hlt
inc
jo
pop
std
cltd
xor
add
ds
enter
sti
push
fistl
or
pop
cmp
test
jno
outsl
jnp
mov
aam
adc
outsl
ja
pop
ljmp
fs
add
js,pt
push
adc
out
lahf
dec
push
inc
xor
std
testb
fildl
mov
cmp
jmp
cwtl
lds
pop
out
cmpsb
jns
arpl
in
pop
inc
cmpb
xchg
inc
stc
stos
cltd
pop
loope
push
fwait
testl
or
clc
mov
imul
mov
iret
push
out
sahf
lahf
mul
cmpsl
sbb
ret
ss
stos
sarb
std
outsl
or
or
sub
daa
call
repz
aaa
loope
dec
fdivl
jl
add
sub
leave
loopne
cmp
je
pop
mull
inc
xchg
and
add
pop
push
movsl
sub
call
popf
idivl
or
loopne
fsubs
push
or
or
loop
inc
xchg
imull
xlat
inc
arpl
idiv
sub
adc
push
aas
cmpsb
dec
and
push
mov
xor
sub
repz
jno
sub
mov
pop
or
pop
ljmp
int3
test
sbb
ja
dec
fcomps
out
mov
mov
jmp
rorl
lock
pop
stc
test
mov
lcall
in
test
testl
push
lds
xchg
cs
dec
fisttps
js
iret
aad
dec
adc
sarl
fs
daa
scas
pushfw
clc
pushl
xchg
bound
fsub
or
sahf
insb
fistl
rorb
xor
inc
jae
mov
mov
jle
push
add
scas
and
cwtl
sbb
out
sub
bound
mov
pop
and
loopne
das
rol
cmp
dec
cld
outsl
fistpll
ds
inc
in
popf
mov
paddusb
rcll
jno,pt
jmp
pop
pop
cmp
cmc
push
or
movl
lock
in
cs
add
push
push
xchg
into
inc
adc
rol
lret
push
fdivrl
popf
sub
or
lret
stc
add
test
xchg
in
push
stc
cltd
sub
outsb
sub
in
dec
mov
and
dec
adcl
lret
ret
jno
or
je
fdiv
sbb
sub
ret
aad
dec
lahf
pop
outsb
mov
jnp
dec
add
sbb
das
je
movsl
sbb
dec
mov
cli
mov
mov
lods
subb
outsl
pop
xchg
mov
add
xor
cmp
mov
fistl
js
icebp
shl
push
fidivl
push
shrl
leave
cli
push
cmpsl
into
push
rcll
mov
std
mov
inc
mulb
ss
ja
adc
sti
enter
movsl
mov
cli
adc
das
cmp
pop
in
mov
xlat
sub
pushf
out
jl
loop
sub
aaa
pop
or
adc
and
pop
sub
ds
out
xchg
lods
cmp
int
test
mov
and
jno
ret
ja
sbb
movsl
loop
shrb
pop
mov
mov
xchg
adc
push
mulb
call
cmc
fdivs
cwtl
lcall
or
testb
out
inc
lock
roll
and
daa
leave
jl
xchg
adc
sub
shrl
int3
test
cmc
jecxz
xchg
xchg
insl
loope
pushf
fsubr
in
lret
inc
xchg
sub
inc
paddw
xor
pop
mov
push
insb
pop
xchg
adc
imul
addb
in
or
mov
imulb
pop
adc
mov
or
mov
push
inc
aaa
cmp
xchg
jp
je
add
or
pop
int
and
push
dec
aaa
cmp
pop
and
pushl
stos
pusha
fstps
sarb
outsl
jbe
faddl
mov
mov
shl
xchg
mov
inc
push
rorl
or
mov
xor
insl
stos
lret
xor
fiadds
mov
aad
addb
cmp
lods
ss
inc
popf
mov
sub
jle
out
fnstenv
jmp
push
push
and
push
hlt
outsl
mov
mov
out
data16
int
push
xor
or
add
cltd
mov
and
mov
cmp
popa
fs
flds
sub
xchg
mov
cs
pop
or
pop
push
mov
sub
add
inc
testb
and
adc
inc
add
sub
push
loop
push
rol
std
imul
add
hlt
mov
and
mov
xor
fdivl
mov
jne
jg
jl
ljmp
xor
stos
push
xlat
stos
out
pop
mov
xchg
bound
enter
push
pusha
and
push
and
test
add
pop
fsts
inc
and
mov
lcall
lds
mov
push
cmp
xchg
jns
std
mov
sub
int3
xchg
adc
js
out
pop
push
mov
push
shlb
inc
outsb
push
daa
and
inc
and
nop
add
mov
aaa
adc
mov
sbb
loope
and
or
inc
jmp
repz
cmp
mov
roll
pusha
or
add
fidivs
sbb
dec
lahf
or
aam
aam
imul
mov
inc
out
cmp
hlt
mov
andl
sahf
sub
xchg
bound
cltd
int3
cld
add
int
mov
icebp
repnz
push
mov
je
out
js
lea
mov
sarl
dec
in
data16
daa
stos
outsl
insb
lcall
jmp
cmp
cmp
push
sbb
sub
pop
sahf
imul
ljmp
cmpb
sahf
pop
movsb
into
xchg
add
sub
mov
sbb
jg
ror
imul
add
push
adc
push
jg
inc
jg
jl
cwtl
ud1
pop
fs
jge
inc
addr16
push
scas
insb
ljmp
mov
sbb
xlat
lods
outsb
sub
push
insl
cmpsb
cmp
lret
inc
rcr
or
addb
cmpsb
push
fdivrl
out
scas
lret
mov
loopne
iret
rolb
ds
sub
jmp
hlt
mov
jmp
scas
aam
out
xor
sub
int
clc
dec
jp
adc
addr16
roll
push
fs
push
movlhps
cli
inc
mov
int3
cmp
sahf
insl
lea
jmp
sbb
dec
call
pop
shlb
mov
scas
or
cmp
mov
mov
lods
or
mov
add
dec
xchg
into
repz
clc
pop
sbbl
mov
jns
push
jmp
aaa
insb
inc
xor
lods
ljmp
mulps
jne
or
xchg
lods
popl
call
xchg
add
cmpsb
fsubr
push
jo
lds
jb
mov
mov
jns
push
jne
inc
push
lods
popa
add
xorb
or
jno
ret
push
xor
in
cmp
lret
mov
and
and
xchg
test
add
sbb
mov
addr16
fstps
dec
pop
cmp
ja
mov
dec
das
popa
xlat
xor
add
cli
push
addl
mov
aas
rol
dec
jmp
xchg
sti
xchg
call
rcl
push
stos
stos
sub
and
sti
cs
addl
jbe
cli
js
jmp
xchg
into
jge
adc
je
loop
test
pop
imul
xchg
add
outsb
mov
hlt
xchg
xchg
add
test
sub
cmp
flds
aaa
cmp
cmpb
int
xor
mov
ds
add
ss
mov
imul
fwait
sub
mov
ret
out
insb
imul
dec
xor
mov
data16
sbb
andb
mov
xor
jge
jbe
icebp
pop
cmp
sub
cmp
iret
lret
inc
sbb
cmp
jo
push
adc
pop
sar
mov
mov
cmc
dec
pop
mov
xor
sti
mov
movsl
lcall
cmpsl
aam
shll
or
jb
fprem
add
gs
cmp
sub
xor
and
leave
push
rorb
jno
or
scas
test
adc
cmp
jo
pop
xchg
mov
push
cltd
jecxz
inc
push
or
sub
fidivs
dec
mov
add
push
inc
sub
inc
pop
nop
insl
ss
fmull
pop
jae
stc
pop
fsubrs
sub
xor
jo
add
dec
sbb
or
fisubs
mov
adcb
insb
repz
inc
xor
ss
insl
decb
jbe
pop
or
mov
out
inc
in
jecxz
mov
nop
push
pop
pop
add
ds
out
fadds
xchg
mov
push
pop
cmc
pushf
ds
adc
or
mov
mov
orl
das
cmp
push
bound
xchg
and
addr16
pop
test
or
insl
cmp
enter
push
lods
arpl
pop
mov
cwtl
inc
pop
mov
inc
mov
shl
cwtl
pop
inc
movsl
insl
cmp
sahf
add
enter
pushf
inc
mov
cmpb
jo
push
sbb
push
add
lcall
aas
out
pop
std
call
cmp
xor
in
and
adc
mov
dec
mov
scas
mov
sub
dec
xchg
test
cs
push
xor
movsb
xchg
stc
or
test
xchg
out
sbb
orb
mov
mov
dec
mov
in
cmp
gs
inc
jbe
ljmp
fmul
mov
and
les
jp
push
mov
jle
pop
jge
adc
pushf
out
and
inc
shr
jl
pop
movsb
dec
mov
mov
push
mov
xor
hlt
add
jb
xchg
jo
pop
loopne
imul
cmp
add
pop
mov
jg
imul
mov
adc
add
aas
rol
pushf
icebp
ficompl
dec
pop
jae
fists
sub
mov
push
dec
add
sub
cld
xor
mov
bound
fcompl
xchg
or
sub
fsub
das
xchg
cmp
sub
add
mov
test
clc
pop
pop
test
sarb
push
and
sahf
aam
dec
or
int
in
scas
fsubl
lods
aad
mov
lcall
loope
fistl
fmull
insl
sub
bound
mov
dec
fcomip
xchg
sbb
outsb
sub
fwait
shl
iret
sarb
inc
lea
mov
repz
test
cmp
push
scas
das
jecxz
insb
aas
xor
paddw
daa
xor
aaa
jp
cmpsb
dec
inc
push
push
jp
mov
jle
mov
or
cmpb
fdivp
or
test
pop
lock
loop
and
fwait
aam
or
xchg
icebp
gs
gs
data16
fadds
dec
and
dec
add
imul
out
fmull
test
stos
jle
xor
mov
es
mov
sub
jp
rolb
mov
stc
mov
mov
pop
and
or
mov
add
subl
adc
jl
cli
daa
cmp
sbb
decl
mov
adc
imul
push
xor
dec
gs
jecxz
fwait
cmpsb
loop
mov
insl
mov
adc
idivb
or
call
jl
push
sbbl
sub
jo
xchg
cltd
mov
cmpsb
lea
inc
add
push
loop
in
stc
cmpsb
sbb
aaa
mov
lea
mov
or
popf
pop
sti
ja
bound
and
mov
inc
dec
jmp
sub
cmpsl
push
mov
cli
arpl
mov
jmp
jae
add
fcmovb
aaa
pusha
dec
dec
out
addb
cli
shll
mov
mov
mov
lods
pop
into
jp
fwait
aas
add
and
out
cmp
add
and
jbe
int3
pusha
jecxz
sbb
sub
or
scas
xlat
fisubrl
ja
mov
pop
std
fidivs
adc
push
inc
sarl
or
inc
nop
dec
daa
int
shll
mov
mov
mov
adc
cmp
fs
aaa
stos
or
rcr
dec
push
push
nop
mov
push
add
notl
cmpsl
sub
call
xor
sbb
jb
lock
mov
ret
mov
inc
sub
mov
sahf
std
test
outsb
jnp
sbb
ret
mov
pop
jge
inc
and
or
inc
mov
adc
out
push
inc
fimuls
ljmp
inc
xor
fadd
clc
scas
jl
jle,pt
or
pop
push
fs
ficomps
mov
ficoms
cmpb
mov
mov
aam
test
mov
orl
movsl
sbb
dec
sub
jg
push
push
push
mov
daa
mov
incl
mov
push
mov
add
outsl
mov
dec
cmp
push
roll
mov
lods
movsb
out
pop
xchg
adcl
push
popf
nop
add
cli
das
loopne
dec
add
mov
mov
push
call
cmp
jle
or
dec
or
mov
jne
jcxz
lock
push
sbb
push
loopne
popf
inc
xchg
add
aas
stos
dec
lods
xchg
and
addr16
ror
mov
mov
pop
xchg
fcoms
mov
or
push
pop
pop
stos
sub
cmpsb
popf
cmpsb
ljmp
jne
in
aas
movsb
push
in
in
sbb
movsb
stos
cli
xorb
iret
lods
or
cld
lret
cld
xor
dec
icebp
or
movb
pop
in
or
jmp
jbe
mov
adc
or
aad
pop
inc
js
inc
mov
xchg
xchg
movsl
test
pop
xchg
fs
int3
mov
and
dec
mov
out
mov
icebp
cmp
jg
pop
push
dec
icebp
js
jmp
pop
pop
adc
stos
jmp
xor
fisubrs
imul
mov
dec
mov
push
push
cld
pushf
lcall
cwtl
add
mov
ret
xchg
psubusw
dec
loop
jl
pusha
sahf
push
loope
add
push
mov
test
loop
test
xor
pop
iret
cmp
ss
cmp
pop
push
xchg
out
mov
addr16
imul
mov
fstp
insl
insl
test
test
push
aad
rcrl
dec
xlat
lds
add
lock
adc
push
and
sbb
push
cmp
jecxz
fmull
mov
mov
scas
adc
jg
aad
jno
cmpsb
sbb
sbb
cs
ja
dec
into
test
cltd
jle
pop
fs
jnp,pt
mov
popa
cld
loopne
sti
jns
or
cwtl
into
movsb
sti
ret
pop
jg
mov
inc
lds
mov
pmullw
cmc
je
popa
pop
insl
loopne
or
iret
push
adc
push
lea
xlat
sbb
pop
adc
mov
leave
add
xor
int3
iret
jmp
rcrb
in
repz
int3
loope
fildl
dec
dec
sahf
sahf
or
sub
scas
out
add
mov
sti
cltd
in
sbb
jle
aad
shlb
xchg
cmpsb
daa
mov
inc
inc
jo
mov
and
mov
fists
cli
popf
inc
orb
fnstsw
mov
mov
cmp
mov
fdivs
out
xor
xchg
mov
add
pop
cs
imul
and
sbb
inc
pop
sub
movnti
mov
push
imul
repnz
nop
xchg
and
jle
shll
ss
popl
loop
and
push
loop
or
fisubl
cmp
xchg
dec
mov
xchg
adc
mov
xlat
jge
xchg
xor
test
jo
jno
and
fadds
std
mov
shlb
mov
out
inc
mov
rclb
or
inc
mov
pop
push
in
sub
sub
sti
ret
sbb
mov
sti
pop
push
jne
and
lods
je
sub
pop
test
cld
shr
push
mov
gs
jns
pop
fstl
cmp
movsl
jg
int
mov
test
jns
sub
in
mov
cmc
aam
lods
out
and
gs
out
xor
addr16
leave
inc
daa
loopne
lret
xchg
adc
push
sti
cmp
aam
fistl
es
mov
bound
sub
mov
or
pop
js
xor
jmp
sahf
insb
popa
pop
iret
rcrb
and
insl
hlt
or
pop
mov
add
or
popa
jnp
adcl
cmpl
xor
or
dec
test
jbe
enter
jg
int
add
lret
les
jb
inc
subl
lods
outsb
scas
jl
ss
out
lahf
fcmovb
ror
push
mov
out
into
flds
or
pop
sbb
test
jp
pusha
outsb
daa
pop
xor
mov
shll
dec
push
mov
outsl
push
sub
rol
pop
inc
rep
and
cmp
and
adc
add
js
ficoml
cmp
jl
adc
pusha
bound
test
adc
sbb
std
sbb
adc
ja
xchg
mov
rcrl
push
leave
sbb
loopne
loop
and
inc
lcall
pop
cmp
jnp
xor
in
mov
jb
arpl
fisttpll
cmp
out
aas
inc
sub
insb
mov
push
inc
hlt
add
pop
pop
sub
sub
aam
xor
mov
lea
add
add
fs
iret
xor
pop
int3
adc
xchg
xor
rcr
sarl
pop
dec
mov
and
into
sub
adc
xor
clc
push
int3
es
addl
xor
test
cmp
and
lret
ds
ds
cmpsl
jns
mov
ret
call
aaa
push
cmp
ss
into
cmovs
adc
test
sbb
adc
pop
push
mov
jae
add
shrl
int
pop
or
mov
dec
js
jmp
out
clc
push
int3
decb
inc
cld
lret
test
jmp
mov
rcll
adc
mov
pop
loope
sarb
std
jb
fdivrp
add
loop
mov
cmp
dec
in
lds
sarl
clc
sarb
hlt
stos
lods
js
lds
bound
mov
push
adc
andl
sarb
lcall
mov
push
rorb
inc
test
int3
mov
lds
push
mov
aaa
mov
repz
fs
push
push
fdiv
nop
push
pop
xorb
pop
xchg
sub
and
push
mov
std
shrb
pop
jb
mov
or
insl
leave
or
sbb
insl
ds
jnp
and
shrl
leave
push
xchg
movsl
ja
push
scas
and
repnz
notb
push
cmpsb
daa
ficompl
loopne
push
lods
mov
sub
cs
xchg
dec
sahf
push
pop
subl
fisubrs
pop
sub
test
mov
imul
xchg
inc
sahf
cmp
xor
mov
jecxz
aam
in
lock
stc
mov
push
loopne
lcall
stc
lods
dec
push
and
and
stos
sub
je
jp
cmp
lret
adc
sub
daa
aam
xchg
mov
popa
popf
popf
lods
std
test
lcall
scas
sbb
sbb
in
scas
jae
mov
lea
pop
add
mov
out
dec
shlb
lcall
negl
push
and
jo
xor
repz
inc
jbe
mov
jo
dec
jno
div
pop
cli
enter
dec
or
sahf
xchg
aam
jno
jle,pt
jg
sub
jge
xlat
mov
int
ljmp
xchg
movsl
xchg
hlt
xchg
sbb
sub
out
dec
inc
xchg
jle
jb
adc
inc
mov
jmp
mov
dec
sbb
into
daa
ja
add
and
pop
shll
fwait
mov
in
jmp
cmp
lahf
or
lret
fidivl
ss
or
add
loope
push
cwtl
popf
sbb
imul
jge
outsl
jmp
daa
or
outsb
jmp
xlat
xor
push
pop
push
scas
push
and
push
rcrl
hlt
or
or
shll
out
ljmp
inc
cli
dec
xchg
dec
inc
loopne
test
stos
xor
lret
sbb
in
lahf
lahf
xchg
xor
je
dec
test
hlt
into
xor
js
orb
cli
cmpsb
xchg
cwtl
loopne
in
xchg
mov
bound
inc
jecxz
fstpt
or
imul
jmp
push
pop
xchg
xor
call
adc
ja
mov
into
aam
addr16
adc
shlb
out
pop
xchg
roll
repnz
inc
mov
mov
add
rcll
mov
icebp
out
jb
inc
adc
test
iret
stos
jne
adc
push
rclb
lds
xchg
mov
or
clc
jo
mov
mov
mov
jbe
cmpsl
fstpt
add
lret
lret
xrelease
aad
out
dec
push
cmp
repz
enter
pop
jmp
insb
xchg
sbb
jp
jo
cmpsl
aaa
xor
pop
lods
push
push
das
xor
mov
fsin
cmp
sbb
fs
out
sar
inc
std
add
insl
mov
fucomip
je
fisubl
ds
sbb
and
hlt
cmp
cmp
jg
jg
or
icebp
rorl
push
mov
jo
int
mov
mull
jecxz
cmpsb
dec
sbb
arpl
jp
jno
aaa
out
fwait
das
dec
push
outsb
push
push
shll
xchg
fstpt
pop
xchg
adc
rclb
gs
js
out
lahf
xor
jns
or
mov
mov
or
inc
pushf
xchg
int3
test
repz
mov
lods
cmpsb
mov
daa
pop
bound
repz
mov
dec
mov
mov
bound
fnstcw
cmp
mov
rorl
pop
adc
iret
inc
shlb
sti
pop
and
jle
test
fimull
jg
cmp
xchg
dec
scas
mov
inc
rcll
dec
enter
imul
and
jmp
shrb
icebp
out
cs
add
cmpsl
sbb
cs
dec
pusha
pop
btc
mov
or
push
ja
cmp
xor
aam
in
aaa
pop
or
sar
loop
mov
push
mov
lret
popa
xchg
scas
push
les
rcll
push
outsl
test
fsub
shr
xchg
stos
out
and
or
dec
pop
popa
jbe
into
cmpsl
cmp
pop
mov
mov
mov
xchg
dec
push
sub
xchg
loope
stos
xorb
aad
mov
or
mov
push
push
xchg
lods
out
sbb
xor
pushf
push
inc
sti
mov
cmp
sarl
dec
aaa
outsl
pushf
mov
push
dec
sti
xor
xor
adc
lret
clc
cmp
js
adc
cltd
xlat
sbb
mov
xor
cld
stos
aaa
notl
mov
sbb
or
popa
adc
sbb
dec
test
mov
mov
lock
fidivs
xchg
fldt
js
mov
aas
mov
cli
and
out
inc
rcl
pop
push
ds
add
mov
mov
mov
test
es
and
cmp
mov
inc
jmp
jbe
sub
lods
mov
pop
cmp
xchg
sub
cmc
outsl
push
mov
xchg
cmp
mov
sbb
negl
inc
cwtl
cwtl
negl
jecxz
iret
outsb
sub
icebp
sbb
xchg
lds
lods
or
jb
push
lret
popl
in
leave
sbb
xchg
adcb
stos
mov
jno
dec
cmp
push
jo
inc
jmp
or
xchg
push
shll
pop
mov
ds
fsubl
xor
xchg
leave
dec
xor
popf
jnp
mov
pushf
mov
pop
inc
pusha
faddp
mov
inc
adc
xchg
jae
xchg
rclb
xchg
lds
jmp
push
icebp
jo
fcoms
lods
fiadds
and
add
push
lds
pop
push
iret
sbb
out
jnp
inc
loopne
cmp
imul
xorb
cmc
add
mov
xor
or
jae
cltd
cs
cld
xchg
movb
leave
repz
push
jbe
rorb
xor
dec
mov
aas
insl
add
xor
push
add
push
cwtl
in
push
cmp
lods
das
iret
mov
movsl
lods
jl
mov
or
lods
dec
dec
scas
lds
in
outsl
adc
xchg
or
or
or
mov
pop
inc
es
fcomps
jg
fildll
jl
inc
cmp
mov
add
cmp
adc
cmc
jecxz
cmpl
clc
sbb
ljmp
fidivs
loope
daa
ret
pop
dec
mov
insl
cmp
adc
dec
jge
jne
add
popa
mov
cmp
jg
and
xor
ljmp
sbb
addl
dec
out
ljmp
jp
pop
push
fcomp
popf
test
pop
mov
clc
add
lcall
adc
jno
sub
and
mov
pop
lcall
or
fisttpll
nop
roll
sub
stos
pop
in
cmpsb
faddl
sahf
pop
sbb
insl
add
dec
push
mov
bound
aaa
inc
fnstsw
push
fsubl
pop
adc
mov
stc
dec
aas
lods
dec
ret
data16
lahf
push
xor
and
movsl
add
jge
dec
mov
das
jge
mov
cmp
lcall
push
int3
cmp
iret
or
cmp
sub
mov
pushf
pop
sahf
decl
jbe
movsb
push
xchg
jmp
or
imul
sbb
testl
push
cld
mov
push
push
jmp
lret
push
fiadds
ljmp
pop
in
ljmp
xchg
dec
jmp
adc
jbe
aam
hlt
jns
test
adcl
ss
and
ret
ja
push
aas
jl
test
arpl
cmp
stos
cmpsl
inc
std
pop
cmpb
bswap
repnz
aaa
and
sub
cmpsl
sub
out
xchg
je
hlt
pusha
lret
xor
fwait
stos
mov
testb
fadd
lods
lret
insl
push
mov
pop
fisubrs
xlat
enter
pop
out
mov
pushf
ja
or
adc
loope
clc
pop
dec
inc
aas
push
lahf
cmp
leave
xchg
rorb
lods
push
hlt
xchg
fistl
lret
movsl
sub
sbb
in
adc
negb
xchg
mov
mov
pop
jecxz
fwait
inc
add
add
mov
xchg
icebp
frstor
add
dec
inc
fcomi
mov
out
dec
clc
add
mov
and
mov
pop
sub
mov
adc
ja
test
xchg
mov
sub
test
jge
lods
movsl
ret
shr
dec
and
jmp
iret
mov
addr16
pushf
push
mov
les
dec
rcl
jmp
add
push
gs
aam
in
mov
add
jnp
mov
jg
push
mov
mov
push
sub
add
jns
mov
shrb
cmpsl
push
fbstp
mov
pop
pop
add
or
arpl
mov
or
int
bound
inc
xchg
and
mov
push
mov
imul
loop
jge
mov
mov
in
mov
sub
outsl
out
push
sti
cmp
aam
inc
arpl
rcr
scas
mov
lahf
arpl
adc
mov
mov
adc
in
icebp
mov
out
push
call
xchg
xor
loopne
push
js
inc
rcrb
and
and
push
psraw
sbb
aaa
mov
push
push
dec
cltd
cmp
adc
fidivrs
mov
jbe
insb
or
mov
fldenv
sbb
dec
movsb
mov
repnz
cs
adc
mov
sbb
xlat
mov
int
es
or
aaa
ds
inc
mov
test
add
sbb
test
sarb
mov
aad
dec
jmp
xchg
lds
push
je
hlt
lret
into
ds
pop
dec
movlps
inc
and
loopne
sub
loope
repnz
xor
mov
pop
sub
and
inc
stos
xchg
cltd
dec
mov
push
inc
bound
push
xchg
inc
sbb
mov
sbb
add
leave
mov
ret
mov
mov
out
mov
sub
add
ds
sub
mov
mov
or
mov
sarb
add
inc
nop
jge
outsb
jp
insb
aaa
xchg
cmp
fsubl
jge
jne
imul
test
or
xchg
in
lods
enter
js
out
jae
in
inc
xor
push
xchg
fistpll
dec
fs
outsb
xchg
aad
add
jnp
sbb
rcrb
jg
mov
sti
dec
push
add
mov
sub
lods
ljmp
jp
lret
stos
mov
scas
inc
mov
mov
lock
mov
add
addr16
xor
pop
sub
insb
jle
lret
jecxz
fld
clc
out
enter
lret
jb
and
dec
pop
addr16
xchg
cmpsl
xorl
addr16
lret
int3
add
jg
add
jae
xlat
sub
scas
adc
add
jmp
xchg
mov
cltd
sub
out
xor
jge
or
cmc
sbbb
mov
lods
push
lret
outsl
cmc
lock
xor
sahf
and
subl
roll
jno
xchg
push
jmp
idiv
or
in
jg
sbb
push
mov
outsl
dec
test
cmp
sarb
pushf
jmp
fisttps
cs
imul
mov
das
jle
decb
test
movsb
aaa
sbb
pop
dec
idiv
shll
and
dec
lret
dec
mov
movsl
jne
gs
mov
shrb
clc
std
dec
repz
cmp
es
les
adc
push
cmp
jns
fmull
sub
movsl
pop
mov
xor
repz
int3
sbb
add
push
bound
inc
cmpsl
jbe
int
out
push
xchg
push
outsb
cmp
jo
jle
cmpl
in
dec
sarb
stos
loop
sbb
aas
movsl
lds
jp
dec
push
aam
and
test
in
arpl
sub
subb
mov
sbb
and
movsb
xor
lock
or
push
sarl
out
test
add
dec
rclb
pusha
aas
enter
ja
gs
sbb
push
repnz
jns
or
imul
mov
xchg
mov
push
add
adc
add
fsub
ret
lcall
stos
imul
xchg
xor
jo
pop
push
jb
cld
and
popf
adc
cmp
or
mov
mov
addb
or
popf
mov
fstpl
jae
pop
xchg
add
std
inc
sbb
scas
lret
cwtl
mov
stos
inc
and
xor
subl
enter
mov
xor
cwtl
jle
lea
frstor
loopne
movsl
ret
adc
sbbb
cmp
outsb
sti
cmp
inc
popa
sar
imul
xor
incl
pop
mov
rcrb
xchg
lea
cmp
or
fcmovnb
repnz
ffree
or
bound
xor
cs
das
inc
das
jmp
ds
in
stos
inc
sub
leave
sarb
rcrl
nop
repz
push
xlat
ja
mov
and
sbb
popa
adc
mov
in
xor
cmp
aas
mov
and
out
pop
and
pop
loop
inc
xchg
test
into
xchg
test
push
sub
mov
lea
mov
mov
popa
jecxz
inc
add
imul
mov
inc
aad
jbe
mov
into
xor
test
xchg
mov
xchg
movsl
jmp
mov
xor
sbb
add
sub
fcompl
sub
repz
arpl
loop
inc
sbb
insb
ret
jle
mov
push
pop
sbb
mov
fisubs
cli
xor
mov
push
test
out
cmp
mov
mov
jmp
daa
mov
adc
lret
test
hlt
pop
outsb
push
and
xchg
mov
adc
mov
leave
inc
fmull
shll
outsb
arpl
xor
fsts
std
jno
shlb
push
inc
xchg
cmpsl
mov
imul
std
adc
cmp
push
int3
push
or
das
push
xchg
mov
pop
loope
sbb
int3
mov
jbe
adc
fs
jp
adc
inc
addr16
jl
sbb
inc
xchg
jmp
pop
test
cmp
loop
roll
bound
push
adc
mov
icebp
stos
scas
inc
dec
out
inc
repz
xchg
ja
incl
dec
outsl
int3
insb
jmp
insl
push
push
mov
xor
fwait
push
pop
push
fiadds
test
sbb
dec
adcl
mov
insb
adc
int
mov
lret
das
cmp
rorl
scas
xlat
adc
mov
test
or
mov
fwait
outsb
sbb
filds
insb
pop
and
sub
stos
dec
dec
aad
mov
dec
mov
mov
outsb
ja
jg
xor
lock
outsl
arpl
ret
aam
lea
cwtl
cmc
xchg
mov
repnz
je
call
imul
ja
stos
pop
out
inc
adc
out
dec
or
sbb
shrl
mov
cmp
push
push
test
push
lcall
mov
or
pop
jbe
add
int3
ret
dec
popa
cltd
out
xchg
mov
ret
das
test
push
shll
push
xchg
in
lcall
in
arpl
adc
fcoms
imul
divb
out
shlb
jbe
xchg
xor
mov
mov
mov
or
cli
mov
pop
xchg
leave
arpl
shll
in
movsl
dec
or
add
sub
xchg
clc
rorb
fisttps
fildl
push
jne
dec
and
aas
mov
cmpsl
outsb
xchg
xchg
sbb
es
clc
fwait
mov
rclb
mov
sahf
scas
loopne
add
outsl
xchg
cmp
dec
fstpt
mov
mov
adc
out
push
outsl
mov
push
cmp
or
push
xor
movsb
call
mov
loop
test
cmc
mov
fnsave
sbb
sar
daa
mov
sub
mov
dec
loope
inc
xchg
push
adc
mov
dec
and
dec
mov
add
push
mov
dec
lcall
ret
jne
jecxz
out
rolb
test
iret
push
test
push
cmp
jle
sar
insl
sbb
or
das
add
insl
outsl
test
imulb
test
xchg
loope
int3
cmp
aaa
adc
mov
movsl
mov
mov
push
lods
cmp
ljmp
xchg
xchg
push
sbb
add
inc
cld
test
mov
nop
shlb
adc
das
cmp
push
lods
xor
jns
xchg
inc
jl
decl
je
leave
add
repnz
popa
sbb
dec
mov
mov
sbbl
add
js
repnz
ja
arpl
xorl
sbb
cmp
divps
dec
or
popf
das
adc
jb
dec
xchg
lcall
xor
jb
mov
adc
into
mov
mov
push
dec
loop
fld
push
xor
xor
xchg
or
adc
push
add
les
daa
addb
jge
jmp
push
pop
mov
mov
fistps
cmp
pop
sub
xchg
xchg
or
pop
dec
mov
push
mov
push
ljmp
mov
jne
rorl
push
lock
ljmp
sahf
adc
sbb
lret
std
daa
mull
sbbl
mov
rcll
movsl
xchg
adc
add
fsubrs
push
add
pushf
or
cmp
in
xchg
cli
ret
push
mov
jo
or
insb
sbb
int3
xor
jbe
xlat
push
fmuls
std
mov
pusha
sbb
jl
or
sbb
aad
or
xor
jl
stos
push
lods
push
push
fwait
xor
out
in
pop
dec
stc
stos
jmp
xchg
adc
mov
iret
jge
sbb
mov
xchg
adc
rcll
je
inc
sub
inc
mov
sbb
jnp
pushf
cli
xchg
roll
cli
ljmp
lret
lret
sbb
push
sub
dec
mov
out
mov
shrb
aam
inc
pusha
sbb
loopne
inc
negl
and
jg
nop
repz
jb
mov
mov
ss
ja
or
inc
or
fucomi
lret
test
xor
mov
mov
and
cmp
rorl
pop
lods
cmp
cmpsb
mov
lret
ficompl
pop
cmp
int
jae
pop
divb
lcall
adc
test
sti
dec
cmpsb
ret
cmp
inc
jae
cmc
mov
cmpsb
scas
ss
mov
add
fld
rcll
mov
lcall
imul
jns
adc
sti
imul
out
arpl
xchg
inc
jno
cmpsb
outsl
cs
jg
jno
dec
or
adc
cmpsb
push
pop
xchg
fs
xor
ret
dec
ficompl
out
out
ds
sbb
and
mov
pop
jl
inc
or
rclb
add
int
pop
ja
mov
mov
mov
add
cmp
xchg
xchg
mov
mov
pop
cmp
inc
xchg
push
aam
and
xor
xchg
xchg
test
test
xor
adc
je
int
pop
fnstsw
sub
ret
push
faddp
outsl
add
dec
sub
jbe
xchg
int3
mov
and
ret
or
int
pushf
aas
or
rorb
mov
lea
out
jbe
jo
mov
pop
add
push
adc
mov
xchg
popf
fildll
xchg
push
mov
inc
repnz
sbb
out
xchg
push
dec
mov
rclb
out
dec
aas
scas
pop
xor
ljmp
pop
jbe
or
add
mov
outsb
cmpsb
imul
addl
pop
in
mov
jg
mov
pop
iret
add
or
inc
inc
or
test
cmp
sub
or
pop
ljmp
cld
pop
or
mov
jns
mov
add
cmp
jg
cmp
outsl
in
jle
adc
xchg
popa
or
fisttpl
mov
cs
arpl
stc
dec
adc
add
hlt
or
out
pop
and
loop
jne
xor
and
mov
dec
sub
gs
xor
and
mov
mov
fwait
repnz
dec
stc
or
jl
movsl
ss
jl
lret
sub
adc
mov
inc
jge
pushl
rorb
es
push
insb
gs
pop
ret
mov
fcomp
paddusw
pop
mov
xlat
jge
jmp
xlat
lret
repz
es
inc
movsl
movsl
iret
sarl
sbb
loope
adc
cmp
push
pop
mov
inc
mov
xor
test
shll
or
push
xchg
cmc
xor
data16
enter
push
lcall
clc
pushf
pop
mov
leave
incl
mov
testl
in
add
add
xchg
in
mov
mov
dec
mov
lret
outsb
popf
sarb
test
imul
adc
jbe
js
shlb
repnz
push
xchg
loope
das
add
sbb
out
adc
xorl
add
add
add
add
add
add
add
mov
sub
or
add
je
add
.byte
