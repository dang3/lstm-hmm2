sbb
add
mov
sbb
push
mov
insb
incb
fdivrl
xchg
mov
shlb
pop
push
push
dec
mov
mov
xchg
aas
inc
ja
aaa
out
cmp
pop
ret
mov
mov
mov
int3
xchg
mov
cmp
cmpsl
leave
scas
dec
jg
scas
sub
inc
add
movsl
sbb
sub
in
daa
movsl
cmc
cmp
mov
clc
les
add
call
aaa
pushf
daa
mov
mov
dec
mov
sub
hlt
jo
dec
push
add
jmp
push
push
div
addr16
sub
lret
sahf
repnz
push
mov
xchg
fsubs
shr
jbe
das
mov
pop
inc
sbb
cmp
push
xchg
repnz
mov
daa
out
ret
mov
rcr
icebp
add
ds
insb
gs
cmp
dec
adc
mov
out
inc
fistl
repnz
jmp
jle
sub
cltd
add
fadds
das
jge
xor
jno
scas
mov
int3
std
xchg
or
clc
add
mov
mov
jecxz
lock
in
repnz
mov
fstpl
mov
repz
jns
je
in
fstpt
and
repnz
xchg
outsb
jle
and
stos
mov
stos
jecxz
sar
das
jg
jl
cli
jno
mov
jb
sbb
dec
enter
in
xchg
fbld
mov
mov
or
xor
push
mov
enter
inc
xor
jns
and
fs
lock
mov
mov
mov
xchg
stos
mov
nop
loopne
mov
stos
int
or
add
mov
jecxz
adc
cmpb
adc
mov
pop
repnz
pop
sysenter
int
xor
sbb
pop
lods
sub
sahf
jbe
into
dec
out
mov
xchg
imul
int
test
adc
loop
cmpsb
and
inc
mov
cltd
shlb
jl
lods
add
xchg
les
aam
je
movsl
pop
popa
gs
gs
popf
dec
push
fidivrl
std
mov
cwtl
mov
fbld
mov
mov
mov
pop
lods
sub
cltd
std
jae
adc
pop
push
mov
hlt
cmp
es
adc
sub
insb
mov
and
adc
and
xchg
hlt
add
jb
loope
repz
push
and
add
jge
leave
into
lret
mov
or
pop
mov
cmp
idivb
xor
sahf
in
add
fisubs
jmp
xorb
xchg
lret
add
ret
xor
xor
sub
dec
inc
icebp
pop
adc
mov
fidivl
and
lret
ss
dec
mov
pop
add
inc
and
sbb
xchg
cmpl
inc
adc
ds
ret
test
jmp
sbb
aaa
or
sub
iret
sub
fisttpl
sub
into
adc
mov
arpl
jns
lds
icebp
imul
popf
mov
dec
mov
bound
fnstcw
mov
push
mov
repz
fsubr
push
and
insl
dec
inc
rorl
dec
pop
js
cmc
dec
testl
lret
push
add
shld
or
cmpsl
sub
mov
sub
mov
popf
lret
cs
fstl
ret
mov
mov
repz
cmp
sti
xor
add
fwait
xchg
insb
mov
mov
jbe
rol
cmp
rcl
daa
aam
jnp
jge
je
in
inc
sbbb
inc
cmp
das
lock
xchg
pop
ret
push
cmp
das
xor
pop
jg
add
or
mov
loopne
call
cmp
mov
or
ss
stc
jp
push
ret
push
hlt
movsb
mov
in
push
cli
push
sub
inc
xor
jae
das
cmp
jecxz
mov
cmp
js
fistpll
aaa
cmpsb
xor
scas
add
pop
mov
mov
arpl
repz
push
ss
sub
pusha
jb
lock
lcall
add
sahf
mov
movsb
ret
mov
fwait
data16
sahf
ja
int3
stc
xchg
dec
push
sbb
and
or
sahf
insb
or
aam
fadds
ljmp
dec
inc
sbb
and
aas
add
aam
repnz
dec
lock
add
jns
stos
push
pop
mov
xchg
test
xor
mov
xchg
cmp
imul
pop
dec
jg
xor
fwait
jae
ret
data16
scas
popf
jno
fcmovu
inc
in
repnz
adc
nop
test
mov
cmpsl
push
popa
ljmp
mov
mov
inc
cmpl
mov
or
pusha
movsb
out
cmp
mov
movsb
repnz
shl
xchg
std
fidivs
int
sbb
or
int
cmpb
xchg
cmpsb
loope
or
adc
mov
xchg
aad
data16
add
fwait
mov
mov
add
js
pop
xor
sti
mov
cmp
xlat
inc
adc
test
cmp
pop
into
lods
or
aad
jg
sub
stc
mov
push
outsb
pusha
sub
aaa
add
mov
sub
aam
xor
add
hlt
push
roll
xor
pop
pop
pop
jns
push
lea
test
orb
mov
xchg
mov
mov
out
gs
aas
cmp
mov
aaa
sub
in
loopne
or
cld
int3
cli
aad
mov
loopne
insb
in
pop
int
mov
andl
repz
xchg
jmp
repnz
lock
leave
or
add
loop
divl
je
sub
icebp
bound
mov
and
lea
cmp
in
mov
xchg
mov
pushf
adc
jne
add
pop
cmp
jge
cmp
aas
jl
push
aaa
jp
inc
test
in
pop
mov
lea
shlb
add
mov
andl
nop
inc
out
lret
or
std
push
lds
push
fmuls
cli
xchg
inc
into
push
cmp
inc
pop
leave
out
or
les
enter
call
stos
mov
jne
jne
popa
cli
cmp
pop
sbb
add
cwtl
cmc
and
daa
inc
dec
inc
pop
pop
je
in
sbb
adc
fs
lcall
adc
in
lahf
leave
mov
inc
inc
enter
inc
xor
pop
inc
xchg
adc
pop
in
mov
cmpsl
out
adc
hlt
pop
scas
stc
mov
in
jle
push
sbb
add
jo
xchg
inc
mov
addr16
test
gs
add
pop
cmpsl
push
lcall
dec
aam
xor
lcall
inc
es
and
xchg
repz
pop
inc
xchg
xor
push
mov
js
test
jmp
xor
cs
dec
pop
movsl
xchg
xchg
sub
out
push
push
pop
cwtl
daa
push
jp
leave
xchg
outsb
movsb
push
negb
test
inc
mov
pop
mov
sub
lods
dec
movsl
push
lods
jbe
fimull
aam
or
lods
jmp
pushw
pusha
xchg
mov
lea
pop
std
cmp
cmp
cs
stos
aaa
mov
mov
shlb
xor
enter
lret
loop
or
nop
mov
add
add
xor
xor
pop
pop
insl
push
repz
mov
pop
nop
stos
sbb
cmp
inc
mov
mov
shlb
xor
sarl
pop
popa
and
cld
jnp
cwtl
mov
shll
dec
cs
jb
dec
push
jle
movsb
mov
jle
rorb
dec
ret
int
lods
fs
stos
mov
mov
addl
sub
push
scas
or
fisubl
arpl
call
add
jne
shrl
imul
dec
fmull
jno
lret
out
pop
lock
jbe
dec
jno
pop
test
sub
fstl
adc
pop
jmp
loopne
pop
pop
xchg
jb
inc
sbb
mov
mul
jg
lcall
pop
loopne
cmpsb
repnz
lcall
inc
or
push
sbb
lea
or
sbb
pop
std
aas
sarl
mov
add
int3
push
stc
ljmp
cmp
add
add
lods
in
mov
mov
rcl
pop
adc
push
push
dec
test
roll
push
and
divl
sbb
mov
and
dec
jnp
sbb
mov
cmovl
iret
mov
aaa
test
mov
divl
adc
movsl
je
or
fadd
sub
cmp
cli
int
pusha
sbb
rcrb
push
adc
add
inc
sbb
cmp
lahf
fdivs
inc
push
mov
scas
ja
or
push
ds
stos
into
and
mov
shrb
xchg
mov
ja
aas
and
outsl
dec
lret
and
clc
add
mov
in
cs
ret
fwait
pop
push
clc
nop
mov
repz
inc
push
das
or
push
data16
mov
mov
sub
jmp
jne
push
and
jmp
bound
fsts
mov
call
out
sub
cmp
fldenv
sbb
movsl
jae
mov
in
or
pop
sarl
test
mov
pusha
cmpsb
sbb
push
cmp
in
ljmp
dec
mov
lret
loop
push
cld
mov
pushf
ret
pop
rclb
jmp
mov
inc
subl
flds
outsb
jmp
lds
xor
imul
pop
cmc
mov
test
shlb
mov
repz
outsb
inc
sti
sarb
popf
lock
jns
mov
call
iret
faddl
jp
lods
or
or
jb
sub
add
add
subb
and
xchg
or
outsl
enter
mov
sbb
mov
popa
sbb
pushf
test
xor
and
pop
testl
loope
inc
and
pop
leave
insb
imul
sahf
mov
pop
inc
xor
adc
jne
and
rolb
lods
dec
stos
pusha
xchg
push
mov
scas
mov
push
in
mov
pop
int
stos
xchg
pop
mov
aaa
or
arpl
xor
mov
jp
cmp
mov
or
cltd
stc
addr16
fistpl
lcall
pusha
jne
or
lahf
sbb
lret
and
imul
out
repnz
dec
mov
adc
cmc
leave
pushf
movsl
nop
or
push
xor
loopne
jb
out
adc
ret
mov
inc
pop
enter
aad
xor
aaa
aam
pop
js
jbe
pop
pop
aas
xorl
jle
inc
sbb
ss
das
out
hlt
lock
push
in
push
or
repz
cli
push
add
out
sub
dec
mov
stos
fisttps
jecxz
insl
jae
cli
repnz
xor
jle
push
dec
jmp
adc
leave
xchg
mov
xor
hlt
push
aas
xor
adc
lods
xor
xorb
out
dec
arpl
jbe
pushf
ficoml
or
push
mov
scas
in
aad
ret
sbb
jnp
mov
sub
add
xchg
in
pop
ja
push
ficoml
faddl
pop
xlat
mov
adc
es
push
inc
popa
jbe
pop
pop
nop
xor
in
repz
mov
pusha
rcrb
dec
cmc
or
and
cltd
jle
inc
and
jb
in
imul
orb
add
or
cmp
sti
cltd
clc
mov
mov
adc
mov
add
icebp
inc
scas
dec
mov
push
test
sbb
cmc
ss
xor
mov
ret
inc
mov
std
stos
bound
int3
dec
lea
andl
mov
shl
pop
shlb
push
icebp
add
xor
jmp
repz
orl
cmpsl
loope
mov
mov
inc
jle
test
or
or
xchg
into
vpblendd
rolb
in
xchg
jns
push
adc
pop
repnz
test
sahf
scas
fs
jle
mov
shl
test
lret
add
movl
ret
pop
pop
sub
lret
mov
xchg
sbb
popf
inc
ljmp
nop
jp
adc
div
sbb
mov
popf
fnstenv
into
outsb
outsl
jle
aad
mov
jl
xor
int3
cmp
pusha
ss
add
call
and
sbb
fs
idivb
mov
subb
stos
testl
repnz
cmp
and
dec
push
out
or
loope
insb
xchg
jbe
rol
xchg
cmpsb
loope
pushf
sub
push
sbb
loop
push
mov
mov
jbe
jecxz
jne
sub
push
mov
bound
cwtl
xchg
inc
mov
inc
pop
frstpm(287
dec
jp
dec
pop
or
cmp
imul
dec
xchg
adcl
inc
dec
mov
insb
test
aam
sbb
iret
cmp
outsl
and
add
cld
add
fwait
sbb
ljmp
leave
pop
es
mov
jbe
pop
sub
mov
outsl
adc
and
push
cmpsl
xchg
sub
loopne
and
cmp
xchg
cmc
mov
jne
cmc
jecxz
lcall
pop
jno
xchg
lret
pop
push
mov
jmp
fwait
icebp
sahf
cmp
mov
icebp
cs
push
xlat
and
movsb
xor
xor
sbb
sbb
and
inc
push
add
pusha
gs
lret
sub
in
mov
xor
lret
sbb
mov
sub
inc
ficoml
xlat
xor
fnsave
lods
jecxz
sbb
dec
std
push
notl
cmp
loopne
jae
jns
dec
xchg
mov
loop
fimull
jae
mov
loop
cmp
cmp
mov
inc
cmp
aas
call
aaa
pop
jbe
outsl
dec
mov
rclb
outsb
in
repz
out
call
push
xchg
test
aam
out
cld
pusha
divl
mov
cli
mov
pop
pushw
enter
lcall
jne
mov
icebp
pop
pop
int3
fidivrl
ja
dec
adc
out
jo
enter
pop
jg
cli
stos
pop
push
push
mov
mov
call
cmpsb
xor
rolb
mov
mov
rorb
xchg
in
out
sbb
aas
dec
cmp
ret
adc
mov
mov
movsl
sbb
mov
sbb
clc
push
fbstp
pop
gs
cmp
and
in
test
sbb
fwait
pop
mov
push
test
dec
idivl
xor
repnz
cs
dec
mov
sub
fldl
lcallw
test
dec
mov
sbb
std
imul
inc
lods
out
mov
mov
adc
fucomi
jae
loope,pn
sbb
ret
push
jne
fidivs
ficoml
addl
push
test
xchg
and
lods
push
mov
pop
xchg
xlat
jb
add
pop
subb
mov
decl
ss
xchg
inc
mov
addl
test
push
addb
aaa
mov
push
test
or
or
pushf
inc
jns
adc
and
cld
rcrb
jae
mov
test
lods
les
loopne
mov
lea
pop
push
loope
mov
lcall
jle
fbld
ss
sub
inc
std
add
aam
inc
lds
dec
outsl
cmc
fs
mov
push
mov
mov
mov
push
stos
sub
shl
adc
popa
pop
ljmp
mov
lods
push
dec
rcrb
fstps
repnz
stc
lods
or
dec
scas
loopne
sbb
mov
cmp
das
or
add
xchg
xor
imul
scas
xor
cmp
mov
sub
loop
push
sub
in
js
data16
decb
and
iret
out
push
bound
jae
mov
ret
pop
mov
outsb
push
sbb
inc
and
add
sbb
xchg
lea
sbb
inc
sahf
rcll
test
xchg
cmp
rorb
adc
push
push
jo
mov
xor
mov
push
push
divl
dec
in
arpl
push
daa
dec
jmp
push
fs
ja
inc
cmp
fidivrs
mov
and
xchg
inc
xlat
pop
cmpsb
or
add
lods
es
adc
cmpsl
sbb
pop
imul
addr16
inc
aad
or
scas
das
or
int
jbe
insb
sub
mov
sub
sbb
dec
push
loop
or
push
pushf
or
mov
and
dec
dec
sbb
sahf
rclb
sbb
or
jmp
fsubrl
test
shlb
pop
mov
or
je
sbb
cmpsl
int3
leave
js
out
aas
push
fnstenv
pop
pop
cwtl
test
in
ljmp
lods
fs
fdivrl
and
ficomps
xor
jne
int3
dec
jecxz
pop
push
jne
lret
cmpsb
dec
out
mov
rorl
inc
sahf
push
add
cmp
pop
movl
lret
pop
psubsb
xchg
repnz
xor
outsl
stos
dec
or
jne
lds
leave
push
aas
or
test
dec
sahf
gs
imul
inc
test
fsubl
adc
insb
pop
divl
add
sbb
jnp
xchg
cmp
leave
ja
jmp
mov
push
and
mov
jne
mov
repz
and
xor
xchg
push
pusha
xchg
pop
and
dec
push
repnz
cmpsb
xchg
xorl
stos
xchg
fs
sub
out
xchg
cmp
js
mov
lret
pop
dec
icebp
add
mov
cwtl
sub
cmp
fucom
out
add
mov
je
gs
adc
pop
frstor
cs
aas
xchg
and
xor
cmp
pcmpeqb
int3
jle
ficompl
divb
jb
pop
cmp
outsl
in
ret
sub
xor
or
pushl
mov
enter
imul
mov
mov
xchg
int
xor
lock
adc
jecxz
mov
test
and
add
push
and
xchg
xor
rolb
sub
gs
and
push
cmpsl
fnstsw
clc
call
movsl
sbb
ret
push
xor
lret
push
sub
dec
adc
adc
mov
mov
cmp
roll
dec
push
in
cwtl
movsb
mov
std
mov
sbb
je
mov
adc
mov
inc
aam
roll
loop
out
jp
dec
jno
daa
or
lcall
stos
sbb
sbb
adcl
cs
ja
jle
sub
mov
xchg
sbb
int
or
es
push
fwait
in
adcb
int
push
xchg
shlb
adc
adc
js
inc
dec
ret
ss
mov
sbb
ljmp
xchg
xor
out
pop
add
cmc
fnstsw
add
inc
adc
push
xor
pop
jb
add
jbe
sub
adc
mov
pop
jae
add
ds
out
mov
sub
aad
mov
xchg
scas
jae
or
out
lret
fists
and
sub
pusha
imulb
mov
xor
fdivrs
lods
pop
mov
movsb
rcll
cmp
mov
cmp
mov
mov
jecxz
subl
xchg
mov
fimull
cli
movsb
in
and
leave
add
repz
jo
test
cwtl
ret
push
out
fucomip
mov
mov
dec
or
and
imul
mov
fsubl
push
xchg
subl
loope
or
pop
mov
or
jge
punpcklbw
inc
aaa
xchg
pop
sahf
insl
call
and
cmp
scas
sbb
adcl
gs
cmp
sti
icebp
sub
lock
mov
fiaddl
dec
inc
xchg
mov
ja
or
lock
shlb
and
in
jge
imul
or
jae
xor
in
sub
jno
jno
dec
pop
std
inc
push
mov
inc
arpl
jns
mov
dec
cli
int3
mov
jp
enter
lods
sbb
dec
ja
out
mov
push
sub
addr16
sbb
sub
mov
xor
insb
mov
call
icebp
adc
push
aaa
jae
scas
pushf
pop
adc
inc
push
pop
lret
fwait
sahf
lods
sub
xchg
xor
cmpsl
mov
fs
sub
mov
enter
dec
out
ljmp
out
sbb
jle
fwait
jae
add
sarl
sub
jmp
int3
adc
jmp
mov
jl
lahf
push
push
aas
lds
mov
and
mov
pop
and
sub
mov
jmp
mov
rcrb
leave
jp
fistpll
mov
inc
in
push
dec
push
sti
insb
cmp
aaa
sarl
out
sub
add
dec
dec
fstpt
fwait
int
push
push
enter
addl
popf
fstpl
jne
adc
jecxz
sbb
ss
push
mov
ljmp
fsubrl
or
repz
or
sub
in
push
es
sarl
mov
cmp
out
mov
jmp
sbb
push
out
bswap
lods
sbb
into
push
jns
test
mov
push
insb
stos
aaa
push
sti
or
adc
inc
aad
pushf
adc
push
rclb
mov
cmp
dec
cmpsb
dec
jle
rorb
scas
jmp
jbe
leave
pop
ljmp
mov
or
mov
shlb
mov
outsb
stos
and
jmp
fwait
pop
jecxz
cld
cmp
fmull
ret
mov
imul
pusha
leave
push
cmc
lea
shrb
cmp
ja
imul
shl
dec
in
ret
pop
jne
sub
icebp
jmp
add
pop
jl
xor
jp
aad
imul
imul
dec
ds
outsl
push
int
mov
pop
popa
ja
clc
icebp
and
lock
mov
pop
or
pop
lcall
inc
mov
mov
and
add
xor
xor
sub
cwtl
test
xor
testl
xor
inc
jmp
les
enter
in
bound
adc
fwait
aas
movsl
stos
sub
jg
mov
cmp
dec
adc
iret
pop
jb
outsl
mov
lcall
cmp
adc
add
push
xor
ret
dec
push
xor
mov
cwtl
ss
push
mov
push
xchg
shrl
movsl
or
test
jo
adc
clc
cs
std
mov
lahf
xchg
push
imul
dec
insl
stos
or
loopne
cmc
into
sbb
mov
scas
cmp
out
cmpsl
xchg
add
rcrb
arpl
mov
dec
loopne
cld
out
lods
pop
ljmp
push
aad
and
sahf
mov
lds
push
xlat
stc
cli
adc
mov
or
stc
mov
testl
mov
sub
xchg
xorl
mov
fs
push
pop
and
or
pop
in
adc
mov
push
mov
int
daa
xchg
mov
pop
test
xor
addr16
adc
aaa
xchg
xchg
mov
pop
xor
mov
and
adc
adc
arpl
jmp
incl
test
daa
mov
hlt
add
cmp
pusha
stc
jmp
ss
sub
adc
and
xchg
pushf
lea
pop
cmp
gs
addr16
fisubrl
inc
lret
stc
xchg
rolb
loope
into
xchg
sbb
pop
rcrb
fadds
inc
mov
in
xor
mov
pop
bound
test
shrl
mulb
icebp
cltd
out
push
mov
cmc
les
jmp
sub
enter
inc
cmp
imul
cmc
test
movsl
adcl
hlt
aas
insl
push
mov
mov
bound
fdivp
pop
jbe
xor
shrb
mov
and
mov
mov
bound
repnz
mov
div
inc
lret
popf
cmp
jae
out
out
dec
push
jge
mov
cmp
xchg
int3
or
adc
jbe
mov
imul
xchg
clc
xchg
sub
xchg
cmp
jbe
cld
mov
mov
lcall
scas
mov
push
cmp
sbb
ljmp
jbe
mov
repnz
xchg
insb
push
stos
std
ret
dec
leave
lock
movsb
leave
cs
mov
test
xor
out
fcomi
outsl
sub
je
popa
push
shlb
push
dec
ja
push
data16
add
xchg
jne
jmp
lds
push
roll
xor
insl
dec
xor
inc
subl
popf
cmp
push
push
fs
in
fs
scas
sub
es
xchg
pusha
push
jecxz
mov
xchg
sti
push
xchg
lret
imul
jecxz
sbb
fwait
lods
test
sub
gs
stos
lods
jge
jnp
xchg
xchg
xchg
aad
dec
sahf
xchg
mov
loop
addr16
sbb
testb
gs
out
and
push
inc
pop
adcb
test
fsts
lods
jae
xlat
movsl
sub
ret
adc
pop
subb
int
aam
jp
push
les
lcall
hlt
push
xor
addb
repnz
lcall
adcl
sbb
xor
jl
sbb
shll
fiaddl
imul
jl
jbe
or
or
jg
dec
xor
adc
lods
mov
xchg
in
in
mov
or
mov
inc
mov
sub
fsub
dec
int3
push
fstl
mov
lret
sbb
out
imul
push
insb
sub
outsb
or
inc
sbb
mov
inc
mov
in
test
test
jge
push
or
adc
xor
xchg
or
dec
adc
xchg
cltd
adc
cmp
xchg
mov
jecxz
mov
mov
sbb
adc
dec
push
mov
loop
lret
pop
in
scas
or
movsb
xor
in
jne
ljmp
pop
mov
jnp
mov
icebp
call
dec
aas
xor
and
in
mov
dec
rclb
sbb
cmc
in
andb
add
push
adc
push
cltd
rcrb
movsb
push
xlat
lods
dec
icebp
xor
repnz
inc
mov
xchg
roll
iret
loopne
lret
mov
mov
inc
sbb
mov
lods
ljmp
ds
mov
jp
dec
jecxz
mov
js
in
enter
mov
cmp
in
xor
sar
ds
mov
cmpsb
xor
mov
xor
shr
push
or
push
jne
sbb
xchg
iret
lcall
push
pushf
xor
seta
inc
cmpsb
add
iret
dec
dec
out
sbb
ret
popa
fwait
cltd
call
out
sbb
mov
rol
js
xchg
rcr
cmp
shlb
xor
xor
lods
lock
jmp
inc
imul
fucom
push
ds
ret
dec
rcrl
mov
cmp
jecxz
repz
aaa
lods
inc
addr16
mov
dec
sar
loopne
call
adc
clc
ror
pop
insl
jns
inc
out
cmp
data16
ret
push
or
adc
jmp
daa
negb
arpl
in
dec
push
nop
push
jno
loopne
mov
fwait
popa
test
stos
repz
jle
adc
cmp
jae
lahf
dec
adc
ljmp
pop
addr16
notb
cmpsb
inc
ja
call
pop
fiadds
mov
or
or
test
cmc
xchg
insl
cmp
xor
shll
mov
mov
aam
mov
popa
fcoml
insb
pop
xchg
xchg
push
mov
test
ljmp
daa
mov
xchg
jp
subl
push
js
xchg
and
inc
fs
dec
mov
int
adc
lahf
aas
out
in
adc
clc
cmp
out
lcall
xchg
sti
push
jno
adc
push
push
push
mov
cmp
sub
arpl
inc
push
sub
shl
sti
lahf
sub
adc
cli
jae
jmp
push
outsl
cmp
add
scas
jbe
adc
fsubr
add
rcrb
jl
fdiv
or
dec
sub
fiadds
xchg
add
mov
push
repz
push
scas
sub
sub
mov
pop
sbb
push
lods
or
jns
imul
push
sbb
testl
hlt
mov
in
call
mov
movsl
cmpl
stos
xlat
test
cltd
mov
inc
stos
pop
cmc
sub
adc
hlt
cmp
lcall
xchg
sahf
mov
pop
mov
adcb
jg
push
les
sar
jae
cmc
cli
out
fistl
add
int
jp
repz
test
daa
ja
push
push
adc
leave
sahf
inc
aam
and
sub
aad
push
movswl
out
xchg
aad
loop
mov
add
mov
mov
imul
addb
mov
pop
imul
xchg
dec
lcallw
aad
aad
das
rcr
and
inc
cli
or
mov
jge
insl
pop
cmpsb
xchg
cli
daa
addr16
jmp
data16
jb
gs
loope
in
or
push
pop
cltd
push
jmp
sbb
jmp
out
sub
movsb
push
pop
inc
popf
xchg
or
jno
ss
sub
cwtl
lods
sbbb
sbb
pop
fsubrs
retw
sub
dec
int3
rorb
sub
fcompl
add
and
insb
stc
push
add
popa
sub
sub
scas
xor
and
mov
add
push
xlat
jno
mov
pop
mov
aas
int3
movsb
adc
int3
movsb
frstor
adc
clc
addr16
sbb
out
jbe
push
stos
and
xor
call
out
popf
jo
push
in
outsb
add
pop
jb
div
ljmp
and
pop
flds
cs
test
mov
jecxz
bound
rolb
fimuls
sub
fwait
or
sbb
xchg
fdecstp
mov
lahf
aad
movsb
lods
test
loopne
in
adc
cs
test
loop
jae
outsb
mov
rorb
repnz
xor
rolb
add
fdivrp
mov
jno
cmp
sti
scas
xchg
sub
scas
repz
lock
test
iret
icebp
lret
cmpsl
and
repnz
and
loop
add
insl
fsubr
inc
jnp
sub
test
je
dec
aaa
push
dec
ss
fmuls
push
inc
movb
jne
jae
clc
xlat
stc
sti
imul
frstor
lods
xor
popf
push
xchg
cmp
scas
fwait
insl
push
lods
jns
dec
stos
adc
xor
outsb
mov
repnz
cmpsl
dec
xor
sbb
stc
lahf
mov
pushf
adc
jg
sub
cwtl
sbb
sbb
jmp
rcll
cmpsb
ss
ja
mov
pushf
les
scas
mov
sbb
xchg
xor
addb
cmpsb
sbb
xor
enter
std
mov
adc
scas
sbb
out
mov
push
inc
inc
pop
or
push
inc
push
pushf
jnp
push
sti
cltd
xchg
popa
pop
adc
inc
testl
mov
in
cmpsl
xchg
mov
int3
mov
mov
dec
int3
jecxz
pop
mov
mov
mov
push
adc
cmp
aas
inc
and
shll
jae
jp
ret
ret
clc
inc
jns
gs
jae
or
or
scas
sbb
xor
cmpsl
aam
dec
pop
xor
pop
push
sti
add
mov
scas
inc
xchg
pop
mov
adc
push
mov
mov
rcr
and
movsl
into
sub
arpl
loopne
notb
jbe
movl
out
arpl
repnz
mov
mov
lock
inc
and
in
add
cmp
bound
mov
out
cmc
loope
out
lret
js
pushf
xchg
fdivrl
les
push
adc
add
std
lods
pop
or
jnp
lea
imul
jp
sub
test
and
jl
inc
dec
cltd
inc
stos
imul
and
loop
xchg
cltd
dec
inc
loope
in
sbb
sarl
sbb
test
or
rep
xor
gs
mov
jmp
inc
loopne
rcrl
xchg
roll
mov
xor
fidivl
push
mov
pushf
xchg
cwtl
aaa
pop
nop
mov
add
rclb
fldl
nop
mov
addr16
mov
imull
shl
test
andb
pop
pushf
pop
mov
out
mov
pop
xor
mov
mov
sub
mov
inc
push
cmp
mov
dec
jmp
mov
loope
shlb
lds
js
sbb
ret
pop
call
adc
sub
mov
into
xchg
fs
mov
sbb
cmp
fcompl
fcmovnb
mov
xchg
xchg
and
repz
shl
addr16
test
cmpsb
pusha
pop
lcall
rcrl
ret
push
push
mov
xlat
in
outsb
add
sub
mov
lea
data16
daa
adc
xchg
sub
mov
xor
rolb
xor
push
cmp
pusha
mov
mov
adc
loop
sbb
dec
pop
xchg
mov
mov
aad
pop
mov
stc
mov
fs
out
cmp
push
fisubl
mov
repnz
jnp
xor
mov
lahf
pop
testl
lahf
dec
fisttpl
lds
test
aam
xor
das
and
pop
mov
push
arpl
mov
daa
xor
filds
inc
push
cmp
pushf
xlat
mov
inc
out
adc
dec
sub
js
cmp
aaa
cltd
cmp
or
aam
nop
mov
dec
push
inc
and
push
mov
mov
packsswb
adcl
add
push
or
and
push
testb
or
xor
pop
jle
addl
out
mov
cmpsl
mov
pop
sbb
notl
inc
mov
dec
xor
sbbb
or
test
dec
dec
and
pop
cs
out
jmp
aad
lret
mov
dec
jne
inc
pop
popf
jecxz
test
fistpll
stos
gs
dec
icebp
sti
pop
sbb
jb
cmp
ret
jp
test
push
push
sbb
mov
push
fcompl
mov
jmp
xchg
fwait
dec
imul
mov
adc
mov
xor
xchg
les
mov
shll
mov
sub
dec
div
push
cld
mov
out
inc
add
mov
mov
mov
outsl
cmp
enter
in
sub
mov
imul
cmpl
arpl
dec
div
dec
mov
mov
scas
push
push
mov
test
ljmp
xchg
hlt
ja
mov
test
ja
popf
dec
stc
in
arpl
and
push
inc
icebp
test
xor
mov
int
mov
mov
aas
imul
call
loop
test
imul
mov
loop
cltd
in
or
cli
adc
cltd
ret
jns
lcall
lods
hlt
insl
mov
shr
mov
inc
sub
or
cmp
pop
add
pop
adc
ljmp
daa
leave
xor
enter
ret
mov
pop
pop
daa
jle
push
jle
adc
dec
adc
mov
arpl
test
or
ja
mov
iret
jae
dec
or
stos
incb
inc
je
mov
push
clc
fcomps
xor
sub
push
fcompl
lds
loopne
lods
pop
jmp
stc
lahf
add
mull
aas
leave
ljmp
aaa
xchg
cld
test
lods
push
mov
cld
out
mov
movsl
mov
nop
cmp
pop
mov
jg
push
mov
adc
adcb
repnz
xlat
arpl
cmp
ss
or
add
push
in
jne
jb
imul
push
pop
push
insb
dec
stos
or
mov
loop
pop
mov
lods
inc
leave
lds
push
and
les
shlb
es
or
sub
xor
add
inc
adc
inc
mov
jmp
jecxz
xchg
in
insl
jp
shlb
cld
or
sub
cmpsl
das
xchg
std
inc
adc
call
push
jbe
cmc
stc
mov
stos
je
push
xchg
dec
into
xchg
movsl
jmp
lods
in
sarb
not
cmc
inc
repnz
popa
cmp
or
jl
push
adc
lea
jle
xor
fdiv
xchg
dec
mov
fidivrl
or
mov
dec
test
test
enter
adc
pushf
adc
rolb
repz
je
popa
loope
push
cmpsb
mov
cld
adc
test
sahf
adc
dec
jbe
jb
int3
in
test
sub
push
not
popa
ja
lcall
and
mov
fcomp
fidivs
add
xchg
mov
dec
call
mov
cmp
or
xlat
mov
adc
jns
insb
dec
dec
adc
lcall
xor
fistpll
fsubrl
popf
stc
ss
xor
pop
cmp
movsb
xlat
mov
mov
sahf
repnz
adcb
data16
sahf
movsl
mov
adc
repz
xor
lea
and
lcall
orl
pop
lock
mov
cmc
sbb
jecxz
mov
xor
aaa
dec
push
adc
mov
cmp
sbb
aas
inc
mov
fcoml
in
jg
loop
adc
cwtl
inc
das
jl
jne
dec
in
sub
and
fdivr
daa
in
out
arpl
jo
pop
data16
iret
and
mov
arpl
mov
jbe
jecxz
arpl
push
test
hlt
out
cld
mov
ucomiss
aaa
fdivl
mov
sbb
test
je
test
push
add
sarb
push
pushw
shlb
shl
in
dec
xor
push
stos
xchg
push
adc
ret
xlat
jbe
cmp
mov
push
xchg
jae
inc
xchg
int3
mov
cmpsb
fmuls
js
pop
lods
mov
sub
test
enter
mov
fsubs
adc
push
sbb
mov
add
bnd
mov
push
outsb
out
pop
lods
dec
jne
and
ljmp
mov
in
cli
fistps
stc
fisubrs
sub
push
pushf
cld
out
cltd
adc
loopne
cmp
stc
mov
add
popa
stc
pop
sahf
icebp
cmpsb
cwtd
xor
xor
fbstp
adc
mov
insb
movsl
bound
pushf
test
and
jmp
xor
mov
insb
sub
mov
sbb
andb
cld
mov
and
xchg
insb
push
sarl
sbb
cmc
add
dec
adc
shr
inc
mov
inc
sbb
adc
jb
pop
scas
iret
ja
ss
mov
int
sub
push
jmp
xchg
xor
xchg
xor
test
add
cmp
dec
adc
cmc
sbb
sti
into
leave
test
loopne
cwtl
sub
lods
cmc
jb
es
push
mov
mov
mov
cmpl
sub
arpl
jl
add
jp
cwtl
mov
lds
sbb
add
insb
test
hlt
sbb
out
dec
sub
dec
xor
push
lahf
push
dec
ret
in
sarl
xlat
aad
xor
add
dec
ja
adc
lret
cs
or
daa
pusha
or
mov
jge
sub
int
xchg
popf
lds
adc
mov
sbb
stos
sub
cmpsb
das
ds
and
cmp
cmp
or
inc
push
int3
lcall
dec
arpl
cli
aam
mov
xor
in
es
mov
sub
pusha
out
pop
push
fcomps
movaps
in
push
je
cmp
ret
aad
push
es
jmp
lock
push
mov
dec
pop
inc
add
add
mov
pusha
jecxz
adc
add
loop
insl
pop
xorl
xor
stc
jg
jle
xchg
cmpl
mov
repz
jp
ret
iret
lcall
repnz
mov
cmp
add
movsb
sub
push
enter
xchg
pop
dec
xchg
test
cmp
cmp
jnp
mov
adc
xchg
mov
ljmp
ret
add
into
pop
cwtl
enter
movsb
hlt
jge
mov
pop
fisubs
movsl
mov
jo
ljmp
mov
daa
loope
clc
sbb
sub
shlb
push
add
xchg
lods
xchg
xor
jno
inc
call
mov
mov
push
cltd
xchg
or
ret
cmp
pop
xor
test
mov
and
xchg
or
xchg
and
adc
js
int
xchg
or
jb
xor
daa
out
out
inc
pop
jmp
inc
mov
jp
adc
ret
daa
lret
rolb
enter
and
pop
dec
cmp
jl
and
cmp
sbb
inc
cmpsb
addr16
xchg
cltd
push
rorl
mov
xchg
rcrl
mov
jnp
fidivl
mov
add
mov
scas
mov
fs
sbb
inc
das
push
seta
ljmp
cltd
aad
push
push
push
icebp
retw
in
jp
lods
shl
pop
ja
or
jnp
fucomip
loope
mov
dec
rcr
dec
mov
cs
mov
subl
hlt
pop
or
fisubs
jae
or
test
les
mov
mov
pop
test
dec
jne
mov
iret
das
push
repnz
mov
sbb
and
push
mov
pop
lcall
rcll
mov
hlt
std
add
call
cmp
scas
xor
mov
repnz
nop
xlat
jno
mov
outsl
xor
add
jno
cmc
lret
push
pop
add
loope
test
cmp
and
cmpsb
jg
xchg
leave
xor
in
out
jb
mov
adc
dec
mov
pop
dec
xchg
lock
or
jge
iret
fisubrs
dec
data16
sarb
sub
loopne,pt
fwait
ds
mov
imul
inc
mov
aam
xchg
jns
xchg
mov
add
clc
test
addr16
xchg
idiv
mov
outsb
lock
jmp
loopne
test
inc
mov
mull
cmp
xchg
cmp
shll
lcall
push
xchg
xchg
icebp
mov
sahf
cltd
xchg
cmp
xorl
mov
mov
arpl
mov
into
pop
push
call
mov
mov
mov
fcoms
mov
lods
sbb
decl
jl
adc
push
adc
in
adc
out
cmp
ja
push
or
sbb
pop
shrb
fs
or
scas
cmp
xorb
in
xchg
shlb
mov
jmp
into
sub
out
dec
lods
sub
addr16
fdivs
xchg
push
div
push
mov
fcomps
out
pusha
inc
xchg
fcompl
fisttpl
jmp
push
fcomip
pop
jp
inc
sqrtps
push
cs
sbb
rcll
jle
pop
push
inc
jmp
xor
es
lahf
scas
js
hlt
xchg
mov
insl
sbbl
jmp
sti
sub
cmp
out
test
cs
push
loopne
dec
sahf
inc
pop
mov
xor
pusha
mov
mov
cmp
xchg
cmpsl
mov
pop
and
push
dec
out
pop
cld
jbe
sbb
or
mov
xchg
dec
add
mov
push
jae
enter
call
mov
fists
insl
popa
fldl
mov
es
inc
pop
imul
or
dec
cmp
in
incl
mov
fwait
rorb
ja
inc
out
ret
sub
add
fabs
loop
jno
xchg
push
push
movsl
sbb
lcall
mov
or
jne
jmp
xchg
pop
pop
sarl
repnz
and
sbb
loope
mov
dec
xchg
aas
mov
dec
mov
imul
scas
hlt
add
sub
aam
insb
sub
add
in
xchg
lret
repnz
pop
fildll
xor
outsl
xor
or
imul
testl
fldcw
pop
sti
sti
push
bound
test
push
or
xor
jmp
sar
test
pop
inc
in
aaa
in
xor
in
mov
xor
nop
jecxz
in
xlat
jb
ret
xchg
test
insb
shrb
insl
test
mov
or
or
jne
loop
dec
dec
cmp
push
xchg
ret
rolb
subb
cwtl
mov
enter
cmp
mov
xor
dec
out
mov
mov
lock
mulb
loopne
cmp
push
cmp
outsb
mov
mov
cwtl
imul
adc
xchg
movsb
lea
add
xchg
add
fwait
popa
jg
and
scas
cmp
mov
mov
xlat
pop
arpl
sub
ds
mov
adc
int3
xor
mov
push
xlat
mov
into
popf
adc
xchg
sbb
fadds
or
xchg
dec
mov
lret
sub
cmc
mov
mov
fldt
lds
xor
mov
lret
mov
imul
fsubs
fs
pop
iret
jno
addr16
or
mov
cmp
mov
pop
scas
lods
adcb
inc
xor
xchg
mov
xchg
outsb
int3
ficoml
dec
fisttps
test
idiv
call
mov
or
pusha
fiaddl
inc
inc
addr16
dec
fimull
pop
push
js
insb
dec
or
scas
insb
cmpb
push
enter
add
jg
jne
sub
repz
icebp
mov
mov
or
sub
imul
jecxz
xchg
out
shrb
shll
push
sub
lcall
adc
popa
push
jne
mov
push
cmp
clc
in
inc
adc
dec
les
test
daa
enter
push
lret
adc
lahf
mov
into
lcall
pop
cmp
int3
cld
fmull
test
jmp
xchg
int
lret
repnz
movsl
xchg
xchg
lahf
lods
shl
shrl
mov
jns
lahf
sbb
rorb
ljmp
cltd
aam
mov
divb
gs
jo
daa
fsubrl
jp
and
sub
jo
mov
add
and
or
mov
in
cmp
data16
and
cltd
scas
or
fisttps
lret
inc
mov
shrl
jge
fcompl
lods
xor
jb
movsl
cmpsl
dec
ds
xchg
fisttps
lcall
iret
xor
mov
or
sub
fstps
xor
cmp
cmpb
xchg
sub
sbb
popf
mov
inc
imul
pop
dec
mov
js
into
add
in
jg
xchg
xchg
gs
dec
push
sbb
cmp
bswap
fcompl
xchg
popf
int
jp
out
mov
pop
lods
fs
xchg
xchg
push
sub
test
add
jns
jns
aaa
dec
xchg
or
push
pop
sub
jle
mov
jle
push
andb
mov
dec
and
popf
adc
mov
pop
ja
aam
sbb
rolb
arpl
nop
cs
jno
js
jbe
adc
and
sub
cmp
jae
outsl
dec
scas
addr16
push
hlt
fistps
lcall
or
adc
fwait
call
add
jmp
loopne
pusha
and
in
push
rcrl
xor
xor
dec
lcall
xchg
sub
jge
lock
sti
jle
jo
loopne
mov
sbb
pop
repnz
push
mov
repnz
dec
mov
test
fcompl
add
fsubs
pop
mov
xchg
inc
into
sbb
xchg
arpl
mov
ja
imul
cmp
scas
xor
clc
jle
cmp
into
shlb
jb
js
xor
data16
jmp
movsb
adc
in
rcl
push
jle
pop
dec
or
mov
jno
movsl
aam
dec
and
fisttpll
loope
jle
test
sub
stos
lods
jne
aas
and
adc
lret
lcall
inc
idivb
sbb
xchg
adc
es
and
mov
rcl
push
cmp
lock
fucomi
mov
adc
mov
xchg
mov
xchg
and
adc
adc
xor
pop
push
lcall
inc
jns
add
jecxz
fdivp
add
out
jo
loope
ja
and
clc
mov
xor
mov
jno
loopne
jp
iret
cmc
call
mov
out
fisubrl
inc
lcall
addb
jmp
lret
out
xor
push
cmp
add
add
gs
xchg
mov
ds
pop
std
and
fwait
in
inc
int3
jns
mov
push
push
dec
cmp
or
aaa
repnz
mov
xor
sbb
aam
jl
jae
xchg
mov
ds
mov
js
fcomi
sub
cwtl
sbb
mov
mov
push
xor
and
dec
addr16
inc
outsl
inc
out
aas
adc
imul
test
mov
test
jle
enter
adc
mov
mov
mov
cmp
jmp
adcb
cmpsb
fidivrl
add
and
sbb
sbb
cwtl
mov
cld
or
sub
out
sbb
test
imul
inc
nop
iret
stos
ja
mov
jecxz
daa
movsl
stc
push
sub
clc
jl
or
push
lods
sub
loopne
inc
inc
xor
or
push
mov
jle
imul
insl
mov
icebp
repz
and
test
and
cmp
mov
loop
neg
jnp,pn
pop
jno
add
lret
xlat
insl
imul
jmp
mov
cmpsl
sbb
push
aam
sbb
movsb
cmpsb
or
push
imul
mov
xor
adc
ret
xchg
out
clc
add
push
sbb
stos
addb
jmp
lds
cmp
ds
iret
inc
aam
inc
mov
insl
or
lods
and
fstl
dec
fistl
dec
pushf
push
jb
cltd
sahf
filds
into
scas
sub
in
les
adc
lods
mov
cmp
xor
lea
xchg
test
or
inc
incl
mov
mov
mov
mov
push
adc
scas
xor
jno
mov
sbb
push
add
xchg
inc
addr16
xor
add
sarl
out
xchg
repnz
mov
ss
mov
jg
push
nop
adc
push
pusha
xor
xor
sbb
lea
int3
mov
pop
inc
daa
or
aad
push
pop
ljmp
pop
mov
and
into
xor
mov
jmp
int3
popa
xor
ficoms
push
add
ja
cli
inc
sahf
lret
sub
cwtl
or
cwtl
sarl
mov
scas
cmc
jge
xchg
add
leave
lods
adc
test
lret
jnp
sbb
call
cmp
stc
adc
adc
jae
sbb
out
sbb
adc
in
orl
cmpsb
xchg
stos
jmp
ja
jecxz
inc
inc
pop
mov
int
xor
xchg
pushl
popf
push
xchg
xor
cmovo
pop
inc
push
daa
and
add
inc
pop
inc
in
call
add
jbe
andb
jl
pop
sbb
jge
ljmp
sti
inc
mov
dec
xchg
and
sbb
mov
pop
jo
in
push
xchg
inc
and
popa
pusha
cmp
out
push
stos
sbb
mov
dec
dec
add
inc
push
or
and
mov
cmp
roll
out
mov
sar
ror
les
push
pushf
ret
shl
scas
cmp
mov
mov
popa
or
mov
and
adc
call
imul
jno
xchg
adcb
cmc
pop
cmp
jecxz
mov
das
xchg
mov
ret
test
mov
repz
outsl
sub
cmp
subb
imul
mov
push
scas
add
xor
dec
xlat
in
sub
add
mov
dec
cmp
fwait
pop
lcall
orb
cmpsb
outsl
rorb
vcvtss2si
mov
rol
mov
loope
jl
lock
mov
or
mov
cmp
fidivrs
mov
jle
popf
mov
mov
mov
je
sub
sbb
mov
lods
idivl
push
cli
scas
mov
dec
into
pop
fldl
call
fdivs
inc
mov
test
mov
cmp
pop
cmp
lahf
xlat
in
nop
fsubs
sbb
adc
lahf
add
cwtl
mov
ficompl
cmp
add
mov
push
cwtl
mov
mov
sub
inc
inc
filds
push
loop
cmpsl
fisubrs
jg
adc
cmp
aaa
xchg
jge
pop
xchg
pop
cs
popa
cmp
dec
mov
inc
xor
mov
inc
mov
mov
push
stos
add
clc
and
int
subl
addr16
ja
int
in
push
jmp
das
adc
and
mov
jge
or
out
and
mov
xchg
mov
push
or
dec
jo
sahf
ret
fadds
adc
xor
ds
or
push
and
push
pop
or
jecxz
jge
leave
ret
into
aam
movsb
ljmp
stos
in
xchg
aam
cli
lods
fcmovu
or
pop
xor
rolb
ja
cmp
mov
lahf
jl
cld
cmpsl
ret
mov
jge
jae
pop
lock
aad
xor
dec
and
adc
adc
push
add
fucomip
add
push
and
aad
cs
xchg
mulb
inc
movsl
xor
mov
lods
stos
jmp
mov
adc
pop
stos
inc
adc
xor
ret
pop
insl
push
add
jg
jnp
xor
xor
cmp
adc
mov
xchg
sub
enter
bound
sbb
jnp
jnp
rcl
mov
mov
mov
icebp
fcom
andb
arpl
xchg
jmp
out
sub
inc
bound
push
clc
push
mov
int3
jno
mull
ret
inc
aam
or
fnstenv
test
lods
sbb
ss
inc
push
dec
stos
xlat
bound
popa
pop
xchg
mov
pop
es
xor
popf
and
push
lahf
je
pop
sub
sahf
pop
repz
mov
mov
stos
das
popf
mov
mov
lret
aad
or
jae
fldenv
cli
stos
in
adc
popf
pop
xor
cmp
enter
mov
hlt
push
jp
push
js
mov
jl
inc
cwtl
pop
pop
mov
rorl
adc
and
push
lods
xor
push
jbe
pop
insb
test
xor
imul
push
lret
rclb
pop
lock
or
add
in
icebp
ss
push
sub
cmp
dec
mov
pop
jbe
std
leave
bound
pop
outsl
push
sbb
dec
mov
rcl
pop
in
xchg
xchg
mov
and
dec
or
ds
mov
fidivrs
fidivrl
cs
mov
push
push
cmp
shll
pop
cmpb
and
or
idivl
adc
negb
pop
mov
test
mov
or
xor
mov
or
inc
mov
xchg
add
mov
orl
ret
sbb
inc
or
rorb
lock
dec
lods
xlat
ret
sbb
pop
in
mov
into
xchg
or
or
xchg
mov
mov
arpl
int
mov
repz
sub
inc
imul
movsb
push
aaa
movsl
shl
and
cmp
jns
cmc
mov
in
and
dec
xorl
mov
push
or
cmp
add
jmp
dec
push
shrb
loop
add
fists
ss
ds
rorl
xchg
adc
xor
xchg
lret
jecxz
ret
mov
shlb
add
movsl
addr16
fildl
pop
cmp
and
pop
sbb
iret
in
and
frstor
lea
in
sahf
mov
dec
dec
pop
xchg
inc
ljmp
pop
dec
sub
mov
cmpsb
mov
cmp
scas
adcb
pop
rcll
je
sahf
gs
adc
decl
pop
inc
push
inc
addr16
in
insl
adc
push
outsb
mov
mov
lahf
std
mov
mov
push
shlb
mov
arpl
test
or
inc
popl
push
fdivp
adc
mov
sbb
jmp
pop
lods
and
cmp
xlat
xchg
pop
xor
push
sbb
cmp
mov
pop
adc
push
fnstcw
push
je
mov
dec
insb
repnz
mov
stos
push
imulb
imul
shlb
cmp
xchg
lahf
aad
mov
push
add
adc
out
cmp
mov
lock
outsb
cmp
sub
xchg
xor
mov
push
nop
sbb
movsb
jecxz
rcrb
mov
cld
xchg
popa
push
mov
stc
dec
iret
jmp
mov
cmp
dec
aad
loope
lds
jp
clc
mov
mov
and
and
pop
jmp
jb
cli
hlt
bound
mov
inc
lea
test
mov
hlt
inc
xchg
dec
dec
icebp
add
cmp
adc
mov
push
rcrl
push
pop
lcall
mov
dec
popa
cmp
and
in
mov
negl
push
fnstsw
push
dec
mov
xor
push
jl
inc
cmpsb
test
and
mov
push
cli
repz
addr16
adc
out
scas
adc
cmpsb
insl
cmp
and
fwait
call
nop
call
cmpsb
movsb
dec
jbe
repnz
xchg
fsubp
iret
dec
lods
adc
mov
std
push
or
cmp
sub
bound
cmpsb
fcomps
dec
push
add
xchg
xchg
pop
push
lret
adcb
xor
push
adc
push
iret
lahf
jle
les
inc
nop
insb
jno
fmull
test
into
sub
lods
jg
int3
test
out
push
mov
cmp
mov
fcompl
fmul
and
in
and
lods
jg
mov
xor
outsb
xchg
mov
dec
arpl
xchg
mov
insl
mov
cmpsl
push
cld
andb
inc
daa
xor
mov
push
out
sti
call
adc
mov
push
sti
mov
mov
imul
andb
aam
ljmp
mov
and
je
out
jbe
xchg
imul
push
sbb
clc
xor
dec
es
lcall
push
aaa
inc
mov
cmp
jbe
mov
push
out
jp
push
andl
inc
mov
ds
inc
adc
je
dec
jb
pop
xchg
popf
push
je
or
xor
scas
repnz
cmp
sub
add
and
cmp
sbb
inc
push
call
into
cmc
adc
repnz
add
ss
fdivr
pop
sub
cmp
leave
imul
xor
inc
push
adc
mov
mov
ds
lods
daa
cmp
mov
test
dec
or
jp
cltd
aas
ljmp
xchg
lods
add
jmp
lods
add
mov
lods
les
xchg
push
and
nop
out
push
jae
lahf
rcrb
jge
icebp
jno
mov
inc
sti
lret
sar
or
in
inc
sbb
xor
cmc
hlt
push
loope
cmpsb
jo
jle
mov
and
jne
shl
mov
sbb
ds
imul
jns
push
pop
push
enter
push
popa
mov
out
sub
int
xor
sti
outsb
jle
push
rcrl
inc
fs
cmp
jbe
int3
sahf
sub
int3
and
lahf
iret
mov
or
aad
cltd
jns
scas
movzbl
pop
imul
subb
imul
shr
xchg
sbb
adcb
push
and
jge
dec
mov
push
jg
lret
ret
lock
in
add
jp
push
sub
sbb
out
dec
jle
inc
stc
hlt
mov
adc
cmp
es
aam
cltd
bound
and
cld
pop
shr
mov
cwtl
addr16
xchg
lcall
loope
leave
jge
fbld
les
aad
repnz
mov
cmpsb
sbb
cmp
insb
add
repnz
ss
mov
sbbl
add
jae
sbb
or
ret
fidivs
cmpsl
push
mov
and
cmp
fldcw
sub
cmp
mov
shll
ds
lds
insl
out
ret
fsubp
mov
xorl
ljmp
je
mov
push
mov
push
mov
ficomps
sbb
icebp
mov
xchg
or
cmp
push
loop
xchg
jb
dec
push
mov
xchg
loope
sbb
scas
jno
aam
lods
push
xchg
out
and
ret
aaa
sub
mov
cli
fwait
lods
sbbb
cmp
lds
add
sub
stc
lock
shrl
test
cmc
mov
shrl
ret
push
aas
rorl
mov
jl
mov
addr16
add
inc
scas
movsb
js
sub
pop
shll
jne
xchg
das
call
mov
and
push
imul
mov
punpckhdq
inc
ds
inc
aas
mov
fsubr
shll
cmpsl
jb
mov
je
ds
iret
repnz
call
and
sbb
lcall
outsl
fwait
adc
mulb
rcl
jg
pop
dec
add
aas
mov
push
icebp
inc
push
sbb
lods
mov
fcoml
inc
sbb
popa
xor
ret
adc
ret
stc
push
xchg
rorl
outsl
mov
push
fistps
out
test
pop
mov
mov
mov
mov
daa
push
adc
mov
and
mov
or
cld
adc
fidivrl
dec
cmp
push
cmp
push
int
adc
lods
lcall
dec
mov
arpl
mov
xorb
dec
mov
enter
enter
test
pop
loopne
dec
inc
leave
enter
add
out
push
inc
push
outsl
sbb
sti
jle
fwait
cmpsl
jp
pop
lcall
rorb
xchg
lret
pop
cmc
hlt
inc
add
in
mov
mov
mov
sahf
cmp
lcall
in
fwait
sbb
sbb
add
pop
mov
aam
pop
adc
lcall
cmp
lcall
cmp
into
or
xchg
test
mov
hlt
pusha
adc
jo
nop
imul
pusha
jmp
push
int
dec
test
sbbb
call
add
sub
outsb
mov
stos
mov
dec
stos
mov
out
cmp
mov
hlt
sbb
aad
or
mov
jae
xor
pop
lods
mov
add
sbb
sbb
enter
mov
inc
xor
and
mov
xchg
leave
pusha
lods
fs
or
and
push
mov
into
mov
push
pop
mov
or
shll
jbe
bound
jle
sbb
add
mov
add
insl
adc
mov
into
pop
enter
and
dec
mov
dec
out
sbb
xchg
cmp
or
mov
fimull
testb
lods
cmc
mov
jbe
jbe
int
push
sahf
xor
nop
jbe
push
repz
xor
aam
mov
sbb
outsb
push
repnz
shrl
xchg
xchg
sti
mov
jne
mov
leave
loopne
ss
mov
pop
mov
jns
mov
add
adc
sub
cwtl
ljmp
js
in
and
jo
loope
xchg
mov
es
popf
imul
and
test
cmp
rorl
pop
aad
cmp
xchg
js
outsl
jbe
sub
inc
mov
mov
cmp
xor
sub
push
jbe
mov
out
xchg
adc
dec
xor
je
jns
sbb
xchg
rcl
addb
lds
pop
pop
and
and
imul
clc
das
das
mov
xchg
cmpsb
std
xor
ret
lcall
pop
iret
dec
lods
dec
je
lcall
mov
sbb
cltd
jmp
push
xchg
dec
arpl
arpl
push
out
pusha
in
inc
in
jnp
out
mov
scas
cmp
pushf
jne
jbe
jae
ud0
sbb
in
pop
pusha
mov
xchg
jmp
rolb
add
push
pop
jmp
dec
mov
bound
pop
dec
mov
sub
fiadds
mov
mov
add
sub
mov
jns
push
dec
mov
cld
pop
adc
push
cmp
sbb
pop
std
out
cltd
sarb
cmp
loopne
fldcw
jno
int
sbb
push
pop
jo
lods
add
sub
int3
rol
shrb
std
and
lret
lds
int
fs
lea
jb
jg
cmp
sbb
push
mov
pop
cmc
or
mov
les
roll
mov
add
dec
xchg
mov
and
mov
xor
jbe
sbb
dec
rcl
xor
mov
push
pop
dec
add
ss
push
addb
xchg
mov
data16
cli
dec
popf
add
fs
mov
mov
shlb
sub
xchg
fwait
mov
ja
ret
mov
or
out
stos
push
lret
imull
ljmp
ret
jne
mov
jle
push
inc
mov
mov
and
mov
pop
popa
stos
jmp
mov
rcrl
stos
adc
jb
data16
jne
jno
jmp
popl
sub
adc
das
int
pop
dec
std
pop
xchg
cwtl
adc
leave
aam
pop
push
sarb
or
aam
ds
push
mov
add
inc
or
jecxz
cltd
or
push
sbb
and
out
cld
jnp
shll
repz
xor
xchg
inc
jns
movsl
insb
jns
fildl
scas
test
cmp
push
jbe
inc
into
push
in
jb
inc
scas
repnz
int3
pusha
in
lahf
fnstsw
rclb
mov
dec
mov
shlb
jne
sbb
call
lcall
jl
mov
and
bnd
out
insl
jnp
in
ss
jp
jo
repz
scas
jmp
into
js
jle
add
enter
repnz
cltd
push
sbb
lods
hlt
mov
outsb
addr16
hlt
out
lret
or
adc
cmp
lea
in
push
add
fiadds
nop
xor
sub
pop
mov
out
loopne
add
mov
bound
std
push
cmc
xchg
pop
fisttpll
adc
jnp
js
jb
push
pushf
mov
call
pop
mov
fidivs
rcrb
sub
imul
inc
in
add
xchg
sub
fucomi
mov
push
cmc
rorb
sbb
lret
mov
loope
sti
insl
in
sub
loope
jmp
adc
call
mov
popa
insl
jb
xlat
xor
xchg
fs
mov
sarb
lret
cwtl
or
popf
fnstenv
test
inc
sub
mov
ret
jo
out
jle
sbb
iret
stc
stos
push
stc
mov
jb
push
mov
xor
call
addr16
jle
mov
pop
sbb
stc
adc
pop
pop
mov
aad
push
cld
adc
inc
out
gs
push
jecxz
rorb
ljmp
or
push
and
mov
sub
addr16
insl
aaa
mov
or
call
iret
dec
inc
inc
sbb
insl
cmp
out
fistpl
jl
ds
dec
aas
push
cmp
leave
push
addl
pop
fistpll
dec
cli
adc
pop
mov
adc
imul
leave
fbstp
loop
fwait
jge
aas
jbe
adc
inc
aam
stos
lcall
fstpt
fdivs
or
outsb
scas
and
xchg
sub
inc
jp
lds
cmp
scas
rcrl
ss
and
sbb
xlat
add
ret
ljmp
pop
xchg
inc
jbe
mov
jae
clc
fwait
mov
mov
dec
cmc
fs
cmp
mov
mov
cltd
sti
mov
mov
cmp
inc
pop
mov
inc
push
outsb
repnz
or
testb
subl
decb
sub
and
inc
or
xchg
cmp
arpl
out
sub
loope
push
xor
push
mov
jno
add
dec
or
push
ficoms
jo
fdivrl
in
cmp
sarb
and
xor
mov
cmpsl
pusha
add
aaa
jg
imul
pop
xchg
or
dec
int3
pop
sub
cmp
xor
out
cld
mov
inc
iret
fcoms
sbb
aaa
sbbl
mov
mov
dec
mov
in
popf
cmp
jl
sbbb
outsb
sbb
scas
xorl
mov
mov
push
cmp
dec
popf
push
add
add
cmovg
push
inc
inc
jp
fdivrs
subb
js
jmp
divb
rclb
orl
pop
dec
mov
add
push
jecxz
outsb
testl
fisubrs
pop
xor
cmp
pop
mov
add
in
push
jo
lret
cmp
insb
push
pop
lret
xchg
dec
inc
sbb
cmp
mov
push
xor
adc
mov
mov
push
cltd
xchg
loop
xchg
lods
insb
mov
movsb
mov
mov
inc
cmp
pop
mov
push
fldcw
push
jnp
nop
sahf
inc
mov
adc
pop
cmp
pop
cmp
jns
in
jbe
add
lods
in
imul
fdivp
sarl
mov
gs
js
lea
sbb
imul
aad
insl
lods
cmpsl
pop
lcall
mov
cltd
sub
push
test
dec
inc
nop
cmp
add
shlb
loopne
ret
outsb
push
jno
mov
imul
nop
and
ficomps
push
or
adc
gs
adc
pop
fmul
out
lret
test
jae
mov
adc
push
and
inc
movsb
xchg
dec
rorl
daa
in
lcall
dec
ljmp
das
mov
leave
sti
mov
scas
mov
mov
push
cmp
jb
in
lods
jg
sub
inc
pushf
mov
fwait
cwtl
out
mov
aaa
jo
cmp
iret
loope
jnp
pusha
adc
sub
shlb
sbb
cmp
jne
int
or
and
stos
jmp
rclb
adc
jne
repnz
das
mov
mov
mov
push
movsb
mov
jecxz
push
inc
imulb
push
lds
xor
out
sbb
adc
out
add
cwtl
add
and
inc
nop
shlb
adc
pusha
jne
pushf
mov
sub
idivl
mov
lcall
sarl
push
stc
sub
push
icebp
mov
sub
push
sbb
js
cmp
lods
and
mov
sbb
std
inc
ja
pop
lahf
nop
popa
pop
inc
popf
jne
inc
nop
dec
mov
cmpsb
shlb
sub
mov
aad
or
inc
xchg
xor
into
or
sub
push
fldln2
push
cmp
stos
cmp
mov
outsb
inc
pop
fidivs
xlat
sub
aas
dec
mov
fwait
test
and
pop
mov
mov
push
fst
cmpsl
bound
xchg
je
cmp
dec
movnti
sahf
ffree
sub
xor
fidivl
mul
sbb
jne
jno
cli
fsubrl
pop
lods
mov
fidivrs
xor
inc
outsb
and
insb
lock
test
cmp
cld
add
das
jae
adc
out
negb
mov
mov
xor
or
pop
push
mov
sub
loop
sub
mov
ds
lock
jb
mov
ss
jp
lret
mov
or
fnstsw
push
sahf
subb
dec
pop
mov
shr
mov
and
mov
daa
jle
je
sub
and
stc
movsb
dec
sbb
hlt
or
dec
cmp
lock
pop
adc
cmp
push
jne
fnstenv
sub
pop
clc
pop
adc
lcall
fidivl
add
loopne
xchg
jge
cli
loop
jp
push
lds
je
jb
push
lock
sub
inc
mov
cmpsl
xchg
mov
in
clc
sbb
imul
jbe
push
jo
ds
dec
push
call
testl
aaa
xlat
pusha
call
mov
adc
xchg
pushf
ds
mov
inc
or
jo
lods
mov
add
add
hlt
sub
mov
lahf
cmpsb
sarb
xor
push
jae
dec
xor
shl
mov
daa
scas
je
sub
adc
cmp
jb
pop
mov
push
add
mov
or
push
xor
xorl
mov
icebp
adc
shlb
push
add
negl
mov
adc
pusha
sbb
stos
das
mov
push
iret
pop
imul
inc
jmp
lock
mov
mov
and
xor
jmp
fists
dec
mov
repz
arpl
sbb
xchg
sbb
data16
inc
mov
imul
or
xor
fiaddl
or
lahf
sti
mov
mul
mov
gs
adc
dec
mov
dec
icebp
mov
mov
jl
in
test
mov
add
jecxz
cs
pop
fiadds
shlb
cmpsl
sarb
jmp
movb
mov
mov
xchg
lcall
mov
mov
xor
clc
out
addl
jbe
xadd
mov
pop
xchg
sbb
fbstp
stos
jbe
mov
pop
mov
fwait
inc
lea
jne
jp
orps
mov
fdivrs
clc
cmp
inc
lret
arpl
lods
push
or
scas
sub
mov
iret
je
cwtl
ja
xor
sub
popf
scas
es
aad
popf
roll
lea
push
scas
ljmp
rsqrtps
mov
loope
jae
insl
fildl
mov
mov
xchg
jae
sbb
insl
mov
pop
es
mov
iret
icebp
add
aas
push
push
scas
nop
xchg
mov
ja
lret
into
roll
xor
mov
and
je
imul
fmul
jne
jns
fmul
pop
sub
xchg
cmpl
cmp
aam
pop
pop
xor
push
cmp
pop
nop
scas
pop
incl
add
add
call
mov
aas
cmp
bound
std
lock
pop
inc
stc
mov
repz
ja
inc
or
in
imul
enter
pop
pop
ja
jle
pop
movsl
cmpsb
dec
in
or
push
push
add
xchg
fistpl
dec
xlat
fabs
outsl
pop
adc
repnz
pop
pop
sti
aam
inc
les
in
nop
xchg
cmp
out
sub
test
inc
scas
adc
pushf
xor
das
push
addb
sti
push
aam
xchg
dec
call
mov
push
and
pop
pcmpeqb
sub
push
test
dec
dec
lods
sub
stc
mov
sub
jb
lods
sub
push
inc
add
shlb
and
jl
and
cmc
inc
inc
loop
gs
insl
mov
test
mov
mov
int3
sbb
les
xorps
scas
addr16
pushf
addb
xchg
pop
or
addl
arpl
sub
dec
jbe
clc
int
mov
pop
pop
cmp
mov
pop
lahf
or
adc
clc
fmul
adc
shll
jbe
push
bound
sbb
adc
xor
loope
test
daa
xchg
in
out
aam
lret
jb
mov
mov
push
cmp
shr
inc
dec
sbb
mov
sbbb
pusha
cmp
cmp
in
push
imul
gs
repnz
mov
ljmp
pop
filds
push
popf
mov
and
scas
add
outsl
shl
push
jecxz
push
aad
pop
out
rcrb
dec
jno
adc
out
sarb
bound
arpl
adc
push
fs
mov
dec
lods
jp
inc
mov
iret
movsb
xor
lods
vmovapd
lods
sbb
cmp
jo
insl
lret
loopne
dec
aam
push
fwait
push
cs
std
lret
dec
push
sub
push
cmp
mov
in
push
pop
and
pushl
dec
into
xor
ss
push
cmp
mov
push
cmp
adc
push
adc
mov
int3
mov
xchg
dec
cmpsl
pop
or
mov
pop
push
xor
data16
lret
aaa
stos
jmp
jns
sbb
mov
in
inc
inc
in
mov
xchg
inc
aas
lret
fimull
sbb
ficoms
adc
test
lahf
jns
and
aad
adc
jmp
divb
ret
das
test
cmp
jmp
add
mov
loopne
add
les
bound
push
sbb
not
or
ret
jp
inc
inc
sub
xchg
mov
inc
mov
das
imul
xor
inc
add
outsl
push
jo
cmp
cmp
adc
sar
adc
sbb
xor
lods
adc
imul
xchg
mov
pop
jns
jbe
fdivrs
lds
push
inc
fnstsw
cld
lods
jg
cmpsb
adc
sub
sbb
sub
repz
jb
iret
into
jo
in
sbbb
repnz
xchg
das
daa
mov
jl
add
in
jae
cs
ret
test
add
mov
xchg
sbbb
call
mov
mov
sarb
push
into
push
and
mov
jg
pop
jmp
xlat
mov
fdivl
inc
es
scas
jo
push
movsb
mov
adc
add
jbe
mov
xchg
lock
xchg
jg
mov
test
push
sub
in
pushf
sti
jl
mov
inc
les
push
inc
in
mov
cmpsb
repz
dec
sbb
mov
int3
xor
add
xor
imul
xchg
mov
fistl
cwtl
mov
stc
pop
in
ret
sub
push
outsl
pusha
cmc
in
cli
jp
jns
dec
mov
sbb
leave
xor
sub
sar
imul
add
sub
xchg
xor
mov
dec
stc
pop
push
lock
mov
mov
ljmp
mov
fdivrl
int3
push
imul
push
enter
jmp
icebp
lock
daa
jg
and
lcall
lock
xor
pop
pop
mov
scas
push
loopne
adc
jge
jae
mov
rcl
add
push
mov
sti
or
cli
lods
mov
push
push
xor
pushf
lds
mov
or
pushf
and
cld
inc
mov
cli
jns
sbb
dec
scas
mov
jbe
fwait
xchg
movsl
adc
adc
fsubr
cmp
mov
das
out
clc
mov
movsb
jns
mov
lret
cmpl
cmp
add
push
insl
mov
test
xor
fs
inc
xor
shll
and
dec
popa
mov
rcr
mov
mov
jge
inc
lea
pop
jns
das
mov
push
and
push
cmp
inc
jmp
and
mov
scas
jp
jmp
xor
pop
pop
mov
and
mov
repnz
push
shll
pop
arpl
into
sub
clc
mov
loop
ds
mov
sub
cmc
or
dec
and
loop
test
mov
sub
in
ja
xorl
lods
nop
jbe
movsl
gs
jae
dec
jbe
daa
popa
fwait
jbe
fs
outsb
aaa
lea
push
call
scas
xor
lods
xchg
fistl
dec
mov
fwait
popf
insb
rorb
cmp
pop
mov
inc
mov
jp
popa
orl
mov
lods
call
push
or
outsl
adc
push
inc
mov
inc
dec
adc
sbb
pop
mov
pushf
notb
outsb
lea
pop
repz
xchg
jbe
xor
jae
in
or
mov
xor
hlt
pop
push
inc
movsl
cmp
ds
pop
sbb
rdmsr
int3
fcmovne
add
jecxz
pop
fmuls
xor
gs
mov
daa
sbb
push
jnp
jmp
lea
movsl
popf
lds
inc
inc
jge
jnp
lcall
loopne
inc
mov
pusha
mov
sub
push
and
stc
push
js
sahf
adc
icebp
bound
cs
adc
xor
leave
jmp
stos
fwait
fwait
loopne
out
fwait
push
sarl
sti
lret
and
mov
lret
cmp
adc
lahf
ss
jge
ja
leave
sub
leave
push
and
inc
cmpsb
cmp
cmp
sbb
mov
xor
mov
xchg
sub
repz
and
mov
jg
mov
aad
sbb
out
andps
lods
mov
adcb
cmp
or
enter
mov
mov
xchg
inc
mov
ret
imul
shlb
sub
and
loopne
xor
cli
pop
mov
repz
push
adc
test
js
cmpsb
or
dec
jmp
push
lock
inc
mov
sbb
cmpsb
sub
pop
xlat
or
mov
xchg
pop
fildll
sti
pop
mov
icebp
or
cltd
popa
shll
stos
arpl
push
andl
and
mov
xor
clc
inc
addr16
repz
mov
imul
addr16
out
into
jo
add
addr16
andl
push
dec
or
jno
pop
cltd
popa
jle
mov
pop
xor
inc
outsl
arpl
push
mov
sbb
cmpsl
mov
mov
sub
out
lea
nop
inc
adc
mov
xor
or
xor
stos
int3
jp
push
repz
mov
pusha
push
iret
sahf
mov
out
adc
or
pop
jae
popf
pop
ret
jecxz
dec
xor
lds
out
cltd
cmp
mov
push
dec
adc
lret
jmp
stc
cmp
nop
test
std
fsubrl
in
sarb
popf
movsl
in
and
push
jmp
shll
mov
data16
mov
mov
or
outsb
push
push
das
into
adc
insl
icebp
xor
jl
frstor
gs
stos
xor
or
jne
pop
xchg
xchg
xor
xchg
cmp
adc
xchg
ret
gs
push
arpl
lret
ja
cmpsl
mov
sarl
jg
push
adc
lahf
jmp
nop
jle
xchg
pusha
ljmp
adc
mov
sahf
mov
or
jl
sub
stos
adc
and
sbb
dec
inc
or
std
ficompl
pcmpeqw
jge
pop
lahf
repz
dec
pop
xchg
frstor
in
and
fiadds
clc
mov
fdivs
add
inc
daa
mov
xchg
xor
jmp
aam
mov
adc
in
sub
mov
mov
cmc
sti
xchg
loop
repz
clc
xchg
lods
mov
pop
mov
inc
dec
mov
mov
or
add
mov
xchg
lds
or
das
stos
dec
dec
data16
fistl
add
enter
imul
xchg
rcrl
mov
inc
dec
sub
cmpsl
mov
sub
ss
addr16
push
out
int
xchg
ja
xchg
adc
std
mov
mov
jnp
push
jge
jb
pusha
test
shrb
repz
insb
push
scas
mov
mov
adc
jno
sub
in
pop
in
pop
sbb
out
ss
test
mov
sub
cli
xchg
movsl
rorb
xor
negb
sub
jb
mov
pop
cli
scas
sub
lds
movsb
scas
out
sbb
or
jmp
push
pop
xor
aad
fwait
lcall
jl
dec
push
dec
mov
stos
or
jno
icebp
fstpt
push
ja
pop
inc
fsts
mov
cmp
push
xor
ljmp
popf
bound
jle
shlb
cmp
shr
sahf
sbb
push
imul
jle
and
fs
pop
add
lock
jne
int
cmp
test
dec
inc
sbb
jae
into
xor
jle
sbb
sarl
shrb
dec
popa
jae
adc
test
in
test
pop
add
mov
jge
sahf
push
ret
pop
lahf
fists
sbb
jo
push
fnstenv
sti
xor
jle
movsl
cli
jae
out
and
fisubrl
xor
sbbl
add
adc
mov
dec
jmp
jb
mov
out
in
and
mov
lds
fs
daa
and
jl
dec
cmp
xchg
push
pop
or
xchg
xor
fstpt
cmpsl
jle
popf
jns
xor
xor
or
int3
lret
adc
pop
xor
test
sbb
stos
shr
pop
pop
stos
push
pop
mov
pop
pop
enter
push
mov
imul
jmp
jb
cmp
aam
xor
mov
xor
pop
inc
mov
pop
mov
or
dec
ret
pop
fldt
aad
xchg
sub
pushf
out
cmp
int
inc
push
js
add
push
push
stc
push
adc
fninit
call
shr
cmp
push
rorb
enter
call
out
jo
shlb
and
mov
aam
loopne
jns
inc
sbb
add
inc
popf
xor
dec
lds
cmpb
les
test
pcmpgtd
jb
test
inc
fcomi
fdivs
push
mov
dec
stos
insl
data16
pop
xor
lahf
mov
pop
mov
shlb
rsm
punpckhwd
sbb
loope
mov
xchg
and
mov
xor
adc
enter
clc
push
sarb
dec
je
lods
popa
add
out
or
pop
xchg
adcl
mov
add
sbb
adc
or
ss
test
test
jmp
scas
xchg
push
adc
popf
adc
jmp
inc
sbb
fisttpl
push
add
sbb
pop
adc
pop
sbb
pop
ljmp
mov
push
popa
push
loopne
in
inc
cmpsb
test
push
mov
aas
sarl
movsb
addl
or
mov
outsl
mov
xor
cmp
and
or
int3
mov
and
cmp
aas
fwait
lahf
jns
aas
push
ret
call
lcall
jecxz
into
inc
popf
add
and
xchg
pop
inc
repz
jp
or
insl
push
cld
out
inc
outsb
cs
xor
arpl
test
fldl
popf
jp
cs
jo
inc
repz
fidivl
out
mov
jns
out
lcall
and
mov
imul
xchg
pusha
or
ss
mov
or
jecxz
cmove
inc
sub
push
or
cmp
lods
test
popa
xchg
xchg
ficoms
popa
dec
jns
pop
sub
decb
test
fcomps
push
fwait
jo
mov
jb
adc
push
inc
aaa
lock
lods
out
jno,pt
mov
sbb
test
fiaddl
mov
mov
xor
loop
dec
mov
add
jbe
push
push
inc
loop
aam
pop
loop
jo
mov
jo
add
add
xchg
test
jmp
add
call
aaa
push
into
loop
mov
fwait
in
xchg
mov
shll
sub
cwtl
cmpsb
js
pop
lret
sub
push
dec
mov
xchg
loop
jle
call
testb
xlat
enter
lcall
push
outsb
cmp
iret
notb
loop
pop
inc
ret
mov
push
xchg
xchg
sbb
adc
jl
sub
gs
jg
cmp
cmp
pop
je
sbbl
cmp
pushf
push
add
cltd
pop
sahf
fcmovnbe
cmc
int3
or
cmp
jp
push
xor
mov
jnp
aam
flds
push
push
in
cs
out
cmp
or
das
in
lcall
pop
scas
test
jge
mov
or
mov
int
popf
ret
cmp
popf
and
dec
xor
and
shl
stos
stos
ret
cli
jo
mov
jge
inc
ljmp
je
icebp
cmp
mov
push
fs
add
mov
imul
adc
mov
insl
icebp
popa
fmul
or
or
mov
push
ljmp
inc
out
ds
cld
pop
sarb
sub
imul
jp
test
xchg
adc
cmpsb
add
jae
pop
cmpsb
jno
cmc
scas
mov
push
pop
push
shrl
inc
xchg
jl
mov
inc
call
insl
mov
mov
les
jecxz
cltd
jns
mov
jne
add
pop
inc
dec
mov
ret
ds
loop
mov
xor
jno
je
loope
sub
or
lret
mov
sub
push
popa
movsb
ret
icebp
mov
dec
orl
out
sbb
and
dec
push
rcll
ja
mov
jmp
xchg
and
cmpsl
test
mov
xchg
je
lret
xor
mov
stos
sbb
sub
mov
movsl
arpl
jae
std
pusha
into
jmp
cmp
arpl
xor
mov
fldenv
gs
cs
aas
xchg
xor
lock
and
stc
es
xchg
cmp
or
daa
push
and
daa
decb
inc
mov
jecxz
jne
sbb
xor
repnz
nop
push
int
xchg
push
inc
sarl
sbb
dec
inc
mov
dec
push
mov
push
outsb
push
inc
adc
xorb
mov
jne
pop
push
sub
inc
loope
sub
shrb
mov
adc
push
cld
mov
jmp
push
std
pop
jl
out
xor
push
leave
sbb
or
or
mov
push
movsb
xor
daa
mov
jns
cld
scas
add
pop
in
mov
cmp
adc
pop
mov
inc
adcb
and
xchg
ret
dec
mov
mov
jne
push
xchg
cli
xor
or
mov
jmp
adc
push
mov
push
inc
pusha
gs
xchg
mov
dec
insb
mov
dec
int3
pop
adc
push
add
pop
jb
call
mov
lcall
lahf
clc
scas
dec
mov
pop
cmp
sbb
jns
ficoms
repnz
nop
cli
jbe
je
sarl
daa
sbb
dec
sub
bnd
jb
inc
es
push
dec
adc
imul
jne
and
mov
mov
add
sbb
out
cmp
in
mov
inc
pop
lock
or
lret
stos
out
je
mov
ret
add
mov
cmp
test
scas
fwait
test
mov
outsl
scas
lea
dec
jne
jnp
cmp
addr16
push
in
sbb
cmpsb
cmp
push
jge
daa
in
lret
int3
clc
mov
xchg
bound
and
jb
push
call
xor
sub
mov
mov
sub
bound
xor
les
mov
insb
scas
iret
outsl
aaa
xor
int
sbb
adc
sub
dec
xor
jbe
push
jmp
inc
es
movl
aam
mov
lods
sbb
fcomps
inc
ret
lret
sbb
pop
in
jo
ror
ret
push
repnz
push
inc
mov
int
clc
sub
out
shrb
scas
xchg
lds
inc
cmp
addb
xchg
push
aaa
sbb
push
jae
add
stos
sbb
cld
testl
jbe
flds
gs
lret
cltd
push
mov
and
les
mov
pop
cli
sbbl
push
sbb
and
mov
imul
xchg
outsl
adc
inc
or
mov
adc
xchg
or
cmp
mov
or
aaa
sti
mov
sti
or
push
out
dec
cli
into
iret
sub
cmpsb
cmp
jne
adc
shl
sub
pop
or
xchg
int
dec
xchg
imul
rcll
loop
call
lods
mov
outsb
mov
add
cld
and
test
test
je
xlat
sahf
out
add
ds
xchg
adcl
mov
js
and
dec
mov
dec
xchg
dec
mov
push
jp
cltd
in
inc
fdiv
dec
dec
inc
loopne
sbb
pop
jmp
es
cmp
pop
roll
les
push
mov
lock
inc
push
lods
insl
fisubrs
mov
xorb
daa
out
or
fwait
add
cmp
lcall
lret
ljmp
test
in
sbb
ret
cmc
jne
cmp
andl
adc
xor
pop
xchg
scas
inc
jnp
mov
std
ret
testl
leave
rorb
mov
nop
clc
insb
sti
repz
mov
jo
cmp
sub
xchg
adc
cmpsl
jmp
jl
sarb
adc
sti
cmp
les
scas
sbb
sub
test
jmp
pop
lret
faddl
sub
shrd
push
loope
outsl
inc
dec
loope
add
inc
test
stc
mov
lds
cs
mov
mov
adc
pushf
in
or
cmp
or
add
xchg
iret
cmp
out
hlt
nop
call
inc
js
add
xchg
enter
jmp
shlb
cmpsl
and
in
out
out
gs
hlt
push
cs
mov
jb
jo
xchg
fs
and
jno
mov
or
mov
sbb
add
fs
dec
sbb
std
lret
sahf
push
xchg
mov
fwait
adc
pop
sbb
push
cld
xchg
mov
mov
adc
mov
ss
mov
mov
inc
jl
stos
out
aad
outsb
sub
jns
or
ja
fisubrs
jb
out
or
mov
out
fldl
jno
pop
test
sbb
mov
stos
mov
cltd
adc
fistps
sbb
fwait
out
enter
cmp
sub
xchg
push
stc
mov
ds
jno
cmp
cmp
repz
je
sub
int3
pop
jecxz
pop
mov
dec
lods
dec
lods
ja
inc
shl
jl
cwtl
push
ds
sub
xchg
jecxz
dec
jmp
shll
inc
es
push
mov
mov
pop
jbe
mov
inc
mov
movb
mov
pusha
icebp
rcrl
cmc
jnp
xchg
das
out
insl
cmp
sbb
in
mov
or
dec
push
dec
xchg
jmp
repnz
aaa
subb
or
das
push
push
lret
cmpb
popa
leave
not
scas
sti
fsubl
dec
jmp
cmpsl
cli
ss
mov
inc
ss
aam
jno
or
lock
aam
inc
fadd
jge
addr16
sbb
cmpsb
push
adc
ds
push
add
jae
cli
clc
andl
add
nop
or
cwtl
mov
out
jae
pop
addr16
xchg
mov
inc
pop
enter
mov
mov
in
mov
negb
dec
ds
jae
cltd
cmpsb
push
sub
add
addb
scas
testb
dec
dec
outsb
test
leave
xchg
mov
imul
mov
rcll
pop
pushf
jne
mov
sti
add
std
insb
push
ja
dec
mov
cmp
mov
push
push
cmp
aam
cmpsb
movsb
push
sub
xor
inc
dec
pusha
cmp
adc
dec
adc
xlat
arpl
int
push
mov
int3
mov
inc
sar
dec
xor
mov
lret
and
and
push
cmp
imul
jo
fwait
mov
ja
lods
mov
shrb
out
andl
jp
jmp
push
ret
push
xchg
or
or
add
mov
xor
mov
lea
mov
sarb
jno
inc
lds
dec
pop
loop
mov
mov
mov
insb
pop
and
test
sbbb
dec
adc
jmp
cmp
xchg
daa
sub
addr16
mov
mov
push
mov
lret
sub
arpl
jmp
lock
inc
js
bound
popa
or
es
ljmp
adc
cmpsb
test
push
jb
das
jg
adc
push
push
imul
fwait
fs
ficoml
ret
jnp
out
pop
pop
jns
cmp
loope
cmp
jge
pslld
out
pop
mov
mov
xor
int
das
adc
test
add
in
in
je
jbe
fwait
mov
adc
ds
outsl
inc
sahf
sub
jle
mov
sbb
xchg
xchg
clc
pushf
adc
push
inc
push
and
push
inc
fidivrl
mov
fsubrl
or
outsb
insl
stos
ljmp
cmp
mov
jge
imul
sbb
dec
push
mov
push
fwait
pop
stc
loop
inc
adc
shld
xchg
inc
imul
pop
adc
mov
scas
ss
inc
and
test
and
outsl
int3
cs
shl
or
cmpsb
aam
in
jmp
inc
or
push
or
ja
lock
xor
lods
pop
leave
jmp
ss
pop
cmp
cs
and
push
out
shr
xchg
cmp
push
or
xchg
xor
cmpsb
shll
dec
mov
fsubrl
ss
mov
fcoml
cltd
cmpb
nop
hlt
sahf
rcrl
leave
dec
sub
dec
ja
lods
pushf
je
mov
into
imul
out
mov
in
inc
clc
xchg
pop
and
popf
test
jae
push
cli
xlat
xlat
mov
push
xor
lds
adc
xor
addl
xchg
ret
jne
adc
call
mov
cmpsl
jne
lea
test
jl
mov
and
mov
add
and
push
pop
in
nop
fmul
xchg
loop
icebp
cmp
mov
ds
data16
mov
in
xchg
pop
xchg
in
xlat
add
stc
test
ret
pushf
cmpsb
aam
pop
pop
imul
into
imul
xor
mov
pop
jno
out
dec
xchg
sbb
imul
add
nop
jecxz
pop
lret
pop
inc
fnsave
lret
sbb
xchg
xchg
popf
mov
xchg
nop
andb
mov
jbe
adc
xor
scas
cmpl
subl
in
fldl
aaa
in
mov
fcoml
push
outsl
dec
cmp
jp
mov
mov
lods
add
dec
aas
popf
int3
in
and
lahf
pop
inc
fstpt
sub
testb
dec
in
xchg
out
das
push
sub
xor
mov
mov
mov
les
add
and
mov
dec
push
es
nop
or
sub
sbb
xchg
jns
xor
aas
cli
into
sbb
cwtl
inc
insb
imul
xchg
and
or
xor
rorb
testb
cmc
push
fs
cmc
push
push
jnp
in
cmpb
cmp
push
mov
pushf
mov
jno
cmp
negl
je
scas
stos
addr16
inc
shrb
frstor
arpl
popa
xlat
xchg
mov
outsb
push
or
mov
adc
mov
xor
fiadds
pop
and
das
xchg
add
fdivrl
push
sbb
and
fdivrl
popf
loopne
cmp
pop
adc
sub
dec
pop
lea
scas
scas
bound
je
pop
push
adc
sarb
xchg
push
pop
and
sarl
mov
stos
sub
out
lahf
cmp
inc
popa
sub
cmpsl
push
mov
loope
jecxz
mov
insb
jbe
mov
mov
sub
fcoms
cli
mov
mov
push
mov
push
cmc
fdivrs
inc
adc
mov
dec
sub
mov
xchg
dec
pop
ss
mov
das
xchg
mov
in
fs
inc
pop
jmp
dec
pop
cmpsl
ss
inc
fsincos
and
or
jmp
push
lret
pusha
bound
mov
pushf
nop
pop
ficoml
daa
cltd
imul
xchg
push
sbb
dec
jnp
aam
pop
pop
sti
insb
pop
roll
inc
cmpsl
adc
imul
pushw
mov
xchg
adc
jo
cltd
movsl
jl
or
daa
out
aam
clc
pop
shl
xchg
xchg
aad
xor
xor
movsb
push
pusha
cmpsl
cmp
fisubrl
or
ljmp
fistpl
sbb
mov
shl
mov
scas
insl
cmp
aas
ss
arpl
xor
sbb
xchg
push
sub
cwtl
fwait
shll
jae
push
or
lahf
and
test
and
test
out
xchg
cltd
aas
in
dec
or
sbb
lods
mov
pusha
stos
ljmp
enter
mov
ret
mov
xchg
jmp
dec
pop
mov
xchg
jb
mov
dec
sbb
cmp
ljmp
xor
ror
cli
pop
add
mulb
dec
cbtw
in
data16
sub
add
push
stos
push
sub
or
or
xchg
ficomps
mov
dec
bnd
insb
sbb
mov
jle
icebp
dec
jle
pop
repz
sbb
xchg
xor
fisubl
mov
mov
xchg
cld
sbb
and
out
lcall
in
sahf
mov
mov
jg
xor
adc
dec
mov
pop
or
fcomps
sarb
nop
loop
ja
hlt
mov
int
les
int3
mov
into
mov
sbb
rcr
cmp
aam
cld
dec
pop
adc
push
fiadds
sbb
dec
cmp
add
mov
test
adc
sbb
mov
mov
add
inc
repz
pop
arpl
jp
mov
lcall
pop
pop
jmp
xchg
into
adc
sbb
insb
pop
mov
jg
pop
dec
xchg
add
data16
dec
loop
div
mov
into
inc
test
add
xchg
js
and
sub
call
xlat
scas
test
sub
dec
int3
fwait
adc
rcll
and
xchg
ret
popa
mov
xchg
pop
adcb
mov
push
lcall
inc
ret
int
lret
add
fs
push
call
mov
imulb
xchg
mov
add
test
jbe
dec
mov
add
int3
push
xor
ret
cwtl
bound
inc
inc
mov
ret
imul
pop
mov
cmp
mov
pop
fsubs
xchg
push
jl
jnp
popa
jmp
addr16
pop
sbb
movsb
enter
fistl
inc
inc
popf
stos
push
pop
jge
pop
xchg
std
and
inc
pop
imul
lret
inc
int3
mov
sub
inc
stc
cmp
cmp
push
jno
int
sbb
fstp
popf
inc
bound
popl
into
lea
lret
insb
stos
addr16
inc
mov
out
aaa
adc
jns
pop
dec
ficoms
rcl
into
rcrl
stos
adc
insb
mov
sti
and
ret
mov
stos
cmp
mov
inc
ja
call
push
mov
push
mov
cmp
and
ret
stos
push
push
stos
mov
inc
jp
std
arpl
outsl
fstpl
ficomps
aas
inc
movsl
lds
push
loope
adc
sbb
adc
cmp
push
add
push
inc
cmp
aas
cmp
stc
enter
cld
sub
adc
mov
mov
jne
xchg
push
add
dec
and
xor
push
xor
out
mov
stc
shl
mov
push
xchg
xchg
aam
jo
test
mov
fndisi(8087
cmp
idivb
jle
xchg
iret
dec
in
mov
sbbb
out
ret
push
sub
xchg
nop
sub
ljmp
pop
and
jmp
mov
inc
xchg
repnz
pop
inc
jle
ljmp
into
out
sub
mov
insl
fsub
lock
gs
push
fnstsw
clc
jo
mov
add
and
dec
xor
add
add
inc
test
jbe
enter
in
cmpsb
push
sarl
mov
shl
mov
outsb
xchg
jb
out
sbb
dec
lcall
inc
pop
jo
lret
daa
jecxz
cli
push
ffreep
cmc
cmp
inc
repz
jae
cmc
mov
fmull
mov
cmpsb
iret
mov
int
ljmp
jae
repz
mov
aam
xchg
pop
adc
mov
push
or
or
popf
mov
inc
loop
pop
ljmp
sti
test
lock
loope
cmp
or
xchg
pop
jecxz
jb
fidivl
mov
add
fs
mov
scas
imul
pop
xchg
xor
xor
cmpsl
and
dec
jle
daa
lcall
push
pop
lcall
iret
xchg
pop
mov
add
imull
nop
mov
cmp
inc
clc
cmp
mov
sub
add
loop
cmp
push
sub
ljmp
sti
pop
nop
testl
cmp
xor
int
adc
lea
or
popa
sbb
ret
mov
das
add
inc
mov
fs
inc
or
cwtl
pop
pushf
inc
inc
xor
hlt
mov
dec
outsl
es
cmp
mov
cmp
dec
nop
xlat
jmp
push
fidivs
ljmp
push
jne
push
add
cltd
call
in
and
or
mov
iret
dec
stc
ja
or
shrb
das
iret
pop
push
in
cmp
shr
sub
sbb
pop
sub
pop
shll
add
xor
cmc
push
cld
and
call
test
or
xor
jns
jg
pop
and
mov
out
loop
insl
xor
jo
cmp
insb
test
pop
adc
push
mov
cmpsb
fstps
inc
pusha
test
call
das
cmpb
scas
push
rcrb
add
mov
or
lcall
mov
cmp
nop
stos
nop
mov
dec
cmc
es
jb
push
pushf
stc
int
and
jbe
sbb
movsl
movsb
inc
shll
sub
testb
or
fwait
aam
pop
pop
fistpll
in
inc
test
lret
mov
lret
fldt
lods
sbb
xchg
test
pop
cmp
mov
dec
lock
adc
sbb
push
mov
pop
lahf
je
inc
mov
cmp
xchg
sbb
mov
aas
fcompl
mov
sahf
mov
mov
lret
lret
add
dec
adc
in
xchg
or
mov
outsl
xchg
lret
stc
cld
xor
mov
sub
jg
jae
sub
scas
out
sbb
cmpsl
push
sbb
mov
add
sarl
dec
and
push
std
xchg
push
arpl
mov
mov
scas
int3
in
in
mov
insb
jnp
xchg
js
cmp
aaa
int
xchg
hlt
push
xchg
cmp
insb
jp
adc
and
push
leave
xchg
ret
shlb
inc
xor
and
or
sub
adc
mov
push
xlat
imul
inc
popf
js
sahf
xor
pop
imul
or
cmp
lock
pop
xor
cmp
and
or
cmp
fistpll
call
int
sub
stos
mov
out
xchg
push
test
ret
lock
ljmp
mov
push
outsl
popa
loope
sbb
sub
mov
dec
ret
add
pop
push
loope
pushf
movsb
pushf
test
subb
cmp
mov
xor
mov
daa
fs
lock
xchg
or
icebp
xor
jb
and
pop
jl
xor
dec
jns
fildl
hlt
add
das
pop
sub
rcr
dec
imul
dec
sub
mov
lods
aad
jb
or
je
cmpsl
adc
cmp
sbb
sbbl
in
pop
das
mov
aas
addr16
mov
pusha
insl
jb
and
insb
ret
rcll
dec
clc
xor
test
mov
push
mov
or
lock
inc
and
mov
pop
xchg
out
dec
pushf
lea
dec
repnz
adc
sub
das
mov
incl
aam
insb
dec
jp
movntps
or
adcl
cltd
iret
mov
mov
mov
pop
mov
inc
mov
inc
test
bound
dec
pop
dec
lods
jo
xchg
lahf
xchg
dec
adc
cmp
sti
test
out
mov
sbb
xchg
and
mov
test
mov
mov
dec
test
and
lea
sub
fisttpl
pop
xor
xor
fs
ret
mov
sti
and
jg
sub
pop
xchg
or
hlt
push
sbb
outsl
add
icebp
dec
outsl
loope
add
aam
cltd
sub
jo
psubw
push
jmp
test
push
in
mov
push
mov
pop
pushf
xchg
pop
xchg
cmp
out
pop
xchg
pop
cmpl
jbe
adc
shlb
movsl
mov
push
fdivrs
and
pop
add
jge
dec
cmp
int3
mov
jle
sbb
xchg
dec
mov
fadd
sub
cmp
in
push
adc
cltd
pop
mov
jns
int
adc
in
push
bound
ljmp
lock
mov
inc
jo
cmp
mov
jecxz
mov
push
fsubrs
or
out
push
cmp
es
popf
stos
in
push
mov
sub
add
std
pop
inc
test
andl
imul
sub
cmp
mov
pop
add
ds
arpl
xor
cmp
mov
inc
ret
mov
in
inc
aad
cmpl
fninit
cmp
ret
cmc
push
inc
jbe
leave
out
fldcw
jecxz
pop
sub
insb
fldl
imul
jecxz
imul
jmp
add
sbb
dec
push
mov
jbe
aas
shrb
imul
js
ss
mov
and
pop
mov
cmc
adc
xchg
test
dec
pop
std
out
adc
push
cwtl
inc
cmc
sub
lods
push
sbb
mov
mov
or
sub
dec
fnstenv
pushf
dec
mov
sub
out
pushf
fstps
cmc
out
les
bound
call
jno
jl
repz
cltd
pop
outsb
jl
out
sbb
or
into
lret
lds
xchg
and
sbb
lcall
fyl2x
mov
insb
mov
cmp
loope
fidivs
and
cld
pop
stos
test
test
leave
hlt
imul
pusha
sbb
aad
mov
sub
xor
inc
fiaddl
jb
mov
pop
ja
ret
and
es
xor
xchg
testl
xor
mov
mov
mov
iret
mov
jno
pusha
inc
sub
lret
pop
mull
jl
js
lahf
jmp
push
sbb
jmp
das
xchg
xor
loop
and
jg
cmp
arpl
jge
sub
ja
pusha
test
mov
pop
add
and
dec
popf
xor
and
mov
int
mov
or
jno
mov
pop
push
pop
mov
mov
out
pop
pop
sbb
movsb
test
aas
test
adc
ja
pop
xlat
sub
pop
cmpsl
sub
cmpsl
fisubrl
jmp
mov
sarb
lret
jae,pn
mov
dec
jge
outsl
xchg
js
jae
push
lret
and
push
cwtl
loope
inc
pop
inc
jne
add
cltd
call
mov
mov
js
aam
push
nop
lret
aaa
aam
jl
mov
in
jle
lods
push
dec
lods
adc
sbbl
mov
dec
cmp
nop
sbb
inc
add
pop
mov
or
dec
movsb
in
call
in
imul
inc
xor
std
pop
jmp
pop
and
jp
lcall
cmp
shll
mov
mov
xor
inc
push
fstp
ret
add
mov
xchg
jne
ljmp
xchg
push
mov
psllw
aad
cli
iret
shrb
mov
adc
shrl
subl
pop
mov
mov
lds
mov
loop
in
cwtl
stos
movsl
adc
incb
add
test
push
xchg
movsb
push
push
cmp
jmp
or
das
rcrl
inc
push
lahf
push
jg
xchg
mov
inc
mov
jmp
movl
fistps
mov
cmp
add
es
mov
jae
mov
cmp
mov
cmp
call
jnp
dec
and
enter
jge
bound
outsb
popf
dec
in
jne
sub
jnp
ds
sbb
jno
push
ljmp
repnz
mov
push
sub
mov
sti
sarb
mov
loop
add
push
jmp
shll
xor
cmpsb
push
xor
lock
ja
push
in
jge
or
cmp
neg
nop
iret
fwait
mov
std
int3
jbe
xor
mov
push
imul
pushf
pushl
loopne
mov
jbe
mov
add
sub
inc
jb
inc
mov
stos
lcall
mov
jg
ret
cld
mov
mov
or
xor
pop
mov
lock
loop
dec
xor
mov
loop
addr16
and
lea
mov
iret
push
mov
fnstcw
lret
add
ss
cmpsl
mov
mov
sbb
dec
mov
nop
dec
jne
jl
mov
into
mov
xchg
ficoms
in
orb
nop
cmp
mov
jb
jbe
cmp
push
mov
cmp
xor
jp
xchg
insb
mov
add
lds
cmp
es
das
insl
cwtl
push
adc
pop
mov
push
stos
js
dec
xor
jmp
in
mov
xor
cwtl
ds
mov
iret
jl
add
fstps
xchg
lock
cmp
push
jbe
and
pop
loope
sub
into
in
imul
push
mov
xchg
jns
push
push
and
pushf
pusha
stc
in
pop
xchg
jg
jb
test
mov
outsl
outsb
adc
sbb
add
xor
or
jmp
out
or
and
clc
std
mov
out
es
jecxz
call
xor
rcl
jae
lods
jno
in
daa
fistl
int
ret
xchg
add
add
test
bnd
movsl
add
mov
pop
repz
xlat
jg
idiv
add
mov
inc
dec
and
jo
jns
iret
lcall
fisubs
gs
fcomps
test
ret
push
xor
xorb
sub
jns
xor
call
in
inc
stos
test
shll
xchg
xchg
ret
into
dec
mov
push
dec
lods
mov
or
mov
jl
roll
test
mov
mov
pop
dec
jae
outsb
inc
arpl
aaa
rcrb
mov
xchg
xor
xchg
xchg
in
out
cmp
mov
dec
push
mov
or
int
push
pusha
mov
in
enter
mov
dec
aas
jmp
cli
and
leave
leave
in
aam
inc
js
inc
rorl
lcall
stos
test
pop
cltd
leave
cltd
inc
loop
mov
pop
jne
or
adc
enter
loop
add
mov
cmc
xchg
cmpsl
addr16
push
xor
stc
imul
dec
sub
test
adc
jnp
ljmp
mov
jnp
mul
cmc
sub
push
popf
xchg
out
and
sub
push
std
push
clc
popf
jg
inc
cltd
mov
adc
sbb
dec
jg,pt
sub
mov
orb
and
or
sbb
jb
in
fidivl
push
in
mov
pop
adc
decl
pop
mov
jo
inc
fists
mov
jnp
mov
dec
es
inc
pop
iret
xor
push
cmp
pop
inc
sbb
push
outsb
push
mov
cmpsb
imul
adc
test
cmp
stos
cmp
lahf
aad
add
or
inc
adc
leave
dec
imul
aad
xchg
hlt
mov
movsb
pop
push
mov
mov
std
sbb
icebp
xchg
push
or
mov
out
cwtl
sub
fdivrl
cmp
mov
inc
rclb
mov
psllw
mov
stos
loopne
dec
mov
popa
je
les
xchg
xor
fdivrs
test
pop
mov
mov
in
cmp
sub
daa
popf
das
outsl
inc
mov
fisubrs
adc
bound
lret
insb
push
clc
jbe
setae
ret
and
cmpl
dec
testl
sahf
shl
mov
xor
out
sbb
push
movsl
mov
out
popf
cwtl
xchg
pop
inc
icebp
test
mov
sti
cmp
push
lahf
pop
test
inc
movsb
imul
ret
lcall
jl
hlt
sbb
pop
hlt
enter
pop
ret
pop
add
mov
pushf
cmp
das
fiaddl
cmpsl
cmp
xchg
sbb
lahf
cmp
mov
xor
sub
insb
mov
into
bnd
add
call
cmp
bound
in
fwait
push
movsb
and
addr16
push
mov
jbe
push
incb
jmp
orl
xchg
adc
aad
mov
call
fdivrs
dec
inc
movsl
sub
xor
imul
jl
xor
and
or
mov
lods
in
pusha
loopne
push
cmp
jle
push
sbb
outsb
mov
push
pop
dec
mov
push
popf
xchg
mov
lret
pop
mov
inc
pop
cld
es
xchg
dec
xchg
inc
mov
inc
xchg
test
mov
adc
pop
jp
ljmp
test
add
fnsetpm(287
push
clc
sbb
inc
push
or
mov
clc
dec
test
or
sub
dec
or
out
xchg
mov
fsubrl
mov
fsubl
daa
outsl
and
outsl
fimuls
maskmovq
notl
push
add
fists
and
popa
push
jb
and
in
jl
inc
test
xorb
inc
out
jnp
adc
dec
inc
push
push
dec
notb
aaa
repnz
stc
mov
enter
sbb
mov
pop
loopne
sub
mov
push
pusha
cwtl
aad
in
stc
sub
inc
js
lea
movsb
sahf
cmpsl
in
xchg
fcmovbe
jp
in
movsl
in
add
xor
ret
movsb
test
cltd
in
lret
xchg
or
sbb
jp
popf
hlt
sahf
add
andl
inc
test
stos
sub
ss
dec
test
fadds
push
pop
or
fisubl
and
xchg
pop
mov
ljmp
sbb
xchg
nop
cwtl
filds
cli
cs
stos
shll
xor
adc
in
loop
es
xor
mov
adc
ficoml
movsl
bound
push
mov
sbb
cmpsb
jg
es
dec
test
popa
repz
fldenv
xlat
mov
es
mov
shll
inc
sub
nop
icebp
loopne
sub
push
fcmovb
mov
sub
mov
icebp
iret
cmp
and
add
xchg
jl
cmpl
or
dec
in
jecxz
dec
adc
fwait
lret
pop
lret
loop
hlt
pop
pop
dec
xor
jmp
jae
rcr
repnz
iret
push
inc
add
sub
in
out
dec
mov
mov
cmp
aas
je
pop
push
jecxz
stos
fsubl
pop
jmp
lret
sar
push
ds
jle
hlt
test
outsb
adcl
std
xchg
jge
mov
mov
pop
iret
mov
pop
cltd
fsubrl
xchg
fists
ret
pop
push
cltd
cmp
mov
and
inc
sub
enter
pusha
mov
sub
mov
xor
cwtl
into
cmp
mov
mov
cmp
rcl
mov
dec
aam
jmp
dec
jle
or
mov
add
js
cltd
scas
cltd
cmpb
dec
jmp
sarb
jo
ds
push
cmp
lret
push
jae
mov
stos
sti
xchg
loopne
cld
inc
dec
jl
xlat
xchg
inc
xor
adc
inc
xchg
fwait
sub
add
in
ds
mov
mov
sub
stc
mov
lcall
push
das
inc
inc
pop
jg
dec
and
and
daa
inc
cmpb
lods
rcl
ds
insl
je
mov
pop
mov
setg
arpl
xchg
ficoms
scas
cmc
in
jg
out
sbb
xchg
or
aam
and
fcmovb
fidivl
push
call
add
push
or
xor
dec
insl
incl
daa
mov
xor
frstor
cmp
lods
clc
mov
flds
xchg
bound
test
pop
js
stos
xchg
loopne
imul
es
cmp
das
sbb
lret
and
push
dec
sub
xor
jbe
leave
adc
and
insl
loop
jb
mov
bound
adc
filds
movsb
addr16
outsl
jl
outsl
sub
mov
notb
dec
addr16
hlt
leave
and
cld
inc
inc
clc
mov
mov
and
pop
cld
dec
repz
xchg
sbb
lods
cmp
jmp
leave
gs
pop
int3
and
insl
js
mov
js
and
dec
jp
test
push
jmp
outsl
loop
mov
adc
sbb
fldcw
aam
sbb
sbb
loop
jp
out
movsb
flds
sti
imulb
xchg
aad
and
sbb
int
les
sbb
mov
fwait
xchg
xchg
mov
stos
inc
pop
jmp
aas
adcl
pushf
or
and
or
ja
lea
lret
xor
jge
xchg
in
mov
adc
pop
jb
cmp
and
inc
xlat
push
aam
pop
out
push
add
xor
xlat
and
test
cs
mov
sub
repz
test
pop
dec
pusha
shll
cmc
jne
add
outsl
jmp
push
test
int
xor
mov
dec
or
or
push
ret
jg
xor
sbb
loopne
stc
fistpll
mov
mov
cmp
inc
cmp
rcll
shl
je
cmp
adc
ss
insb
push
jl
sbb
xchg
in
ss
js
into
mov
testl
sahf
push
push
fwait
cs
push
in
ss
jns
or
test
sub
lret
dec
bound
into
insl
add
sti
cmp
aam
movsb
mul
xor
pop
adc
cmp
sbb
pushf
fs
mov
aas
lret
in
add
xchg
dec
adc
cmc
ds
lret
sti
push
xor
dec
in
out
pop
lods
or
shll
sbb
xor
jmp
jge
pop
in
lods
dec
rorb
push
or
xchg
xchg
lods
int3
push
xor
cmp
dec
inc
cmp
or
dec
cwtl
daa
jle
test
pop
cmpsb
arpl
jae
out
and
mov
pop
stc
dec
cld
pop
fisubs
fidivs
xchg
sti
aaa
dec
push
movsl
inc
jecxz
unpcklps
jecxz
call
cmp
adc
stos
jmp
popa
or
xchg
jmp
iret
mov
idivl
adc
mov
add
scas
arpl
or
mov
std
insb
xor
fisttps
lock
arpl
rorl
jmp
sub
fimuls
int3
lock
pop
cmc
pop
and
push
test
fs
mov
cmp
push
aas
sbb
js
in
sti
cmp
insb
jb
dec
bnd
aaa
jmp
sub
rcl
jae
push
xor
mov
loop
sub
mov
test
mov
mov
ljmp
imul
loop
mov
push
jne
push
mov
pushf
fnstsw
jmp
dec
inc
les
inc
lods
out
push
data16
jno
lods
movsl
add
imul
mov
or
clc
mov
fwait
das
je
sti
cmp
mov
cmp
aas
mov
imull
decl
or
dec
mov
std
push
jle
cld
sbb
push
mov
sbb
xor
aad
cmp
pop
les
add
dec
sub
add
dec
ficoms
jbe
ss
jecxz
push
dec
sbb
sarb
sub
in
sbb
and
xchg
clc
mov
sub
pop
lods
insb
push
push
das
lcall
imul
pusha
idivl
mov
mov
fwait
and
xchg
ds
daa
or
jmp
out
mov
cmc
icebp
icebp
mov
jns
mov
lods
testl
jge
push
stos
xchg
das
push
fsts
jl
ds
int3
jmp
lea
imul
je
mov
ror
mov
fwait
inc
jecxz
test
add
hlt
or
fidivs
mov
cld
sti
cmpsl
cmp
pop
imul
or
imul
lea
cld
sbb
jb
mov
jnp
mov
test
pop
mov
fwait
std
xor
scas
inc
lea
test
int
cli
inc
neg
jae
cmp
inc
icebp
xchg
jo
pop
addb
dec
ss
push
pop
push
push
or
movsl
aad
outsl
pusha
mov
stos
mov
push
ds
dec
jmp
or
loope
cmp
les
push
sub
add
ret
pop
test
mov
pop
xor
push
lds
mov
pop
xchg
mov
xchg
xor
adc
mov
jp
les
sbb
jp
lahf
pop
repnz
divl
iret
cmc
sub
push
and
lret
xchg
repnz
in
bnd
mov
mov
cmp
adc
and
mov
ror
les
aad
loope
jle
xor
js
insl
adc
xor
cmpsl
lods
jle
jo
cld
testl
in
push
xchg
int3
mov
mov
xor
jge
ficoms
jmp
mulb
and
add
xchg
nop
and
fwait
push
push
mov
shrb
pop
push
or
adc
add
ss
xor
aad
movsl
xchg
icebp
sub
push
out
mov
xchg
popl
inc
int
scas
push
xchg
and
dec
shrb
sub
leave
pop
pop
pusha
clc
xlat
sub
pop
mov
imulb
push
jo
dec
lds
cmp
test
stos
inc
push
mov
in
das
in
jp
cmp
gs
push
cltd
pop
sub
jb
sarl
jle
push
or
stos
adc
sti
add
add
lret
mov
fwait
lods
cmp
loopne
in
dec
out
cltd
adc
jne
aaa
ret
lret
push
push
out
adc
cmp
bound
jne
test
test
xor
push
ret
xor
fwait
shl
shll
cld
clc
outsb
in
cmp
xchg
lret
or
jo
dec
js
repz
ds
or
adc
in
adc
icebp
pop
pop
in
subb
js
push
std
cwtl
sub
mov
adc
out
shlb
scas
lret
adc
lds
inc
lret
inc
divb
and
cmp
dec
xlat
fcmovne
shlb
push
mov
pusha
add
sbb
cmp
adc
setg
mov
jb
dec
fwait
in
aas
popl
scas
dec
sbb
mov
jnp
cmp
inc
arpl
orl
push
mov
push
insb
pop
aam
out
sub
in
jnp
push
incl
ret
lahf
mov
std
sar
lret
xchg
push
mov
mov
mov
movsb
incl
jnp
pop
out
xor
test
loope
pop
mov
bound
add
into
pop
in
add
sub
mov
insl
ljmp
xor
sbb
or
xlat
adc
jl
stc
hlt
out
mov
leave
pusha
loopne
dec
stc
scas
dec
inc
and
sahf
stc
cmpsb
add
fstpt
leave
je
mov
arpl
ds
lods
call
mov
push
and
adc
int3
mov
sub
pop
xor
xchg
jl
popa
and
stos
xchg
adc
out
iret
rorb
xchg
mov
and
imul
imul
pop
sub
push
inc
mov
or
and
ret
dec
mov
popf
xchg
mov
into
mov
xor
pop
cmp
mov
int3
xchg
sub
jg
pushf
shlb
mov
imul
sub
sbb
call
ror
add
add
push
in
pop
popa
jle
imul
and
and
andl
dec
outsb
dec
xchg
pop
dec
or
or
push
pop
clc
pop
xchg
mov
pop
movsb
jp
jle
mov
xor
xchg
pusha
sub
mov
out
frstor
test
adc
mov
inc
inc
mov
jnp
cs
inc
lahf
mov
in
adc
inc
jno
mov
jno
xchg
hlt
and
add
fsubr
ss
inc
xchg
mov
fucom
popl
cwtl
push
sbbb
push
stos
loop
fwait
nop
fdivs
jae
lcall
aas
pop
insb
mov
adc
fs
xchg
in
sbb
xlat
lahf
inc
pushf
mov
mov
add
add
fstp
xchg
aas
xchg
mov
jb
cli
loopne
aaa
sti
sbb
fcoml
movsb
mov
mov
lret
xchg
rcll
or
aas
push
and
les
arpl
out
stc
inc
dec
sub
add
arpl
out
pop
jge
jl
arpl
and
out
iret
inc
mov
cmp
adc
scas
hlt
jnp
leave
cmc
jmp
js
lods
mov
out
sub
inc
mov
out
sbb
shlb
leave
daa
or
sbb
mov
fcoml
test
dec
cli
in
pop
jmp
mov
and
and
fwait
mov
and
in
dec
jo
sbb
and
cmp
cmpsl
stos
ficoms
mov
pop
mov
sub
outsl
scas
inc
aaa
sbb
repz
xchg
loopne
cmp
xor
sbb
orl
pop
push
scas
test
in
mov
daa
shrl
call
xchg
movsl
mov
jo
sahf
dec
loop
push
ret
xlat
lods
mov
jl
sbb
nop
stos
das
jno
mov
shl
iret
lcall
add
add
sub
push
data16
fsts
das
movsb
mov
or
push
cmp
imul
mov
and
sahf
dec
pushf
addb
std
inc
mov
adc
push
das
or
iret
mov
pcmpeqd
add
push
scas
sub
enter
cmp
sub
push
or
das
ljmp
mov
lret
cmp
jns
pop
rcr
pop
and
lret
sbb
stos
clc
jge
mul
nop
arpl
sbb
mov
jmp
test
shrl
pop
shlb
push
or
enter
xor
imul
adcl
or
test
jmp
push
and
nop
out
aam
sbb
xor
xchg
pop
pop
sub
push
cmp
mov
pop
int
and
push
jg
aas
xor
divb
leave
insl
push
and
into
push
subb
add
fnstsw
les
xor
dec
xchg
sbb
xchg
mov
out
fsub
sysret
test
shrb
int
lock
mov
out
xor
imul
push
imul
call
ficoml
sbb
xor
mov
mov
cmp
lret
out
push
xchg
mov
mov
shrl
imull
sbb
mov
insb
imul
fwait
fwait
sub
sub
mov
movsb
pop
mov
movsl
inc
fs
cmp
or
push
lcall
and
and
sbb
pushl
repz
call
idiv
ds
out
jbe
ror
mov
clc
cmpsl
data16
test
orl
cwtl
push
sub
cmp
or
inc
and
popa
or
inc
push
jg
bound
mov
into
sub
loopne
je
xchg
pop
cld
pushw
push
es
out
mov
scas
mov
mov
insl
push
mov
ljmp
xchg
sti
or
or
ret
inc
imul
add
fucomi
push
dec
cmc
int
mov
aas
inc
mov
bound
or
push
cmp
test
dec
scas
xor
cmp
loop
xchg
out
push
sbb
loope
mov
cli
sub
mov
fisubs
outsl
sub
lods
icebp
xor
das
pmuludq
sub
insb
js
in
sub
adc
push
dec
dec
adc
xor
inc
sbb
add
push
xor
negb
mov
mov
mov
sbb
cmp
pop
je
adc
fldl
imul
jg
jmp
jmp
mov
xor
aaa
bound
cmp
xlat
push
mov
jno
inc
add
dec
outsb
sub
cmp
repz
mov
and
cmp
mov
cmp
mov
or
jl
inc
scas
bnd
and
or
cmp
add
jne
sbb
nop
lret
pop
jmp
mov
jns
jno
pop
aam
jo
push
rcrb
lret
and
adc
dec
cmc
jmp
out
cli
or
and
sbb
lods
cmp
mull
lahf
out
iret
inc
cmp
mov
repz
push
aam
adc
fstpt
mov
pop
lds
leave
adc
push
cmpb
push
loop
sarb
or
stos
lods
int
ja
add
lcall
aam
js
xor
ds
ss
push
ss
lock
push
mov
faddl
adc
xchg
cmpsl
into
pop
out
push
loope
in
xchg
and
mov
adc
out
aad
jge
lock
mov
jmp
es
popf
loopne
xor
sbb
and
les
xor
xchg
pop
lcall
test
in
mov
push
push
rol
pop
pop
and
xor
xchg
fbld
lret
ds
or
testb
lock
sbb
add
shl
pop
jae
sbb
jmp
in
xchg
push
and
xor
adc
xchg
popf
dec
fldenv
das
or
leave
shrl
dec
sbb
les
jmp
decl
sub
mov
into
daa
push
subl
jno
sbb
jmp
fsubs
inc
test
jle
stos
mov
arpl
pop
xchg
cmp
mov
xor
add
cltd
push
ss
movsl
mov
dec
fmull
mov
mov
xorb
mov
dec
es
pop
stc
pop
cmp
sbb
testb
shll
inc
xchg
xchg
insb
inc
dec
es
cmp
out
out
insl
mov
xchg
add
or
xor
stos
cli
fstl
jb
fistl
shll
and
std
je
mov
and
xor
iret
xchg
decl
test
shlb
fcmovbe
dec
ror
xchg
dec
pop
iret
cs
stos
ja
sub
jl
test
lock
sbb
mov
rolb
adc
push
inc
or
into
push
addr16
cld
push
movsb
cli
rorb
test
jg
mov
cmpsb
cmp
lret
add
lahf
out
mov
fwait
test
or
and
loopne
pop
add
clc
add
fildll
dec
xlat
mov
pop
cs
cmc
mov
out
aad
les
cmp
sub
lods
jmp
pop
imul
or
nop
stos
mov
sbb
adc
andb
add
mov
push
iret
ljmp
fstp
push
jno
insb
and
push
adc
aad
pop
mov
lahf
jg
mov
insb
lods
xor
ja
movl
addr16
inc
inc
aam
mov
push
push
and
cmp
push
ret
adc
mov
in
iret
jnp
les
inc
and
cmp
mov
pop
mov
pushf
adc
xor
pop
in
jge
sub
call
mov
mov
jns
adc
jbe
xor
mov
in
clc
fsts
xchg
mov
out
xor
sbb
jns
outsl
sbb
into
inc
push
fsubs
mov
movsl
out
add
mov
pop
xor
popf
add
or
xchg
sbb
addr16
pop
daa
mov
js
dec
ret
mov
sahf
je
and
sbb
sub
fsubl
jmp
mov
sbb
inc
push
and
xchg
das
loop
das
cmp
ss
push
xchg
xlat
jmp
test
pop
jmp
loope
dec
movsb
out
clc
aaa
filds
aam
insb
es
pushf
rcrb
jbe
movsb
or
dec
or
movsl
lcall
sub
adc
lret
jg
mov
js
pop
xchg
das
out
roll
xchg
and
outsb
cmpsl
aaa
pop
sarl
stos
xchg
ret
in
out
mov
fidivrl
arpl
jle
jns
adc
js
jle
mov
adc
ret
xchg
mulb
insl
sub
rorb
mov
push
sbb
add
icebp
add
and
pop
dec
aaa
xor
jbe
in
lds
sahf
mov
dec
sbb
cmovae
mov
push
xor
mov
orb
loope
adc
jnp
xor
add
mov
inc
mov
adcb
out
nop
idiv
pushf
or
push
cmp
dec
popf
test
dec
dec
dec
stos
flds
nop
int3
nop
fnsave
mov
sub
and
mov
out
xchg
add
aam
pushf
cmpsl
pop
inc
mov
push
out
popa
pop
pop
ljmp
dec
mov
add
mov
aas
mov
dec
push
dec
adc
lret
and
xor
mov
xchg
cmpsl
pop
jbe
test
inc
pop
xchg
inc
pushf
test
add
addr16
sahf
nop
sbb
aam
push
mov
cmp
add
jno
push
jns
mov
jne
adc
addr16
cmpsl
sbb
fisubs
movsl
rcll
popf
stos
push
out
fs
shl
mov
sbb
push
inc
pop
sub
iret
inc
cltd
adc
pusha
xchg
sahf
add
js
dec
ss
push
add
mov
inc
or
into
mov
inc
sub
mov
ja
outsb
fcomps
push
faddl
pop
lods
mov
or
aad
push
int
mov
jp
jl
pop
inc
in
adc
outsl
cmp
incb
les
mov
subl
sarl
movsl
rcrl
jecxz
jmp
adc
cmpsl
aas
xor
call
cmpsb
or
xchg
xor
xchg
xchg
mov
repz
push
shl
pop
dec
cmp
scas
inc
stos
cld
jmp
lock
cmp
xchg
push
arpl
adc
in
insl
jb
shrl
dec
lods
xchg
mov
mov
mov
stos
cmpsl
repz
das
scas
push
cli
dec
sbb
mov
inc
test
jecxz
push
popf
shlb
imull
or
cmpsl
icebp
mov
adc
ja
sbb
pop
loop
icebp
lock
hlt
leave
popl
xchg
data16
add
cwtl
pop
add
jae
adc
inc
mov
jnp
popa
out
sbb
sbb
shl
jb
or
outsb
inc
or
aam
call
and
inc
push
aam
xor
les
sub
icebp
out
xor
int3
mov
xorl
ss
push
stos
pop
and
and
jg
mov
repnz
fistps
xchg
into
leave
cmp
mov
push
mov
mov
xlat
fstpt
push
add
lods
mov
int3
jo
repz
lods
xor
insb
adc
xchg
das
push
mov
xchg
pop
push
xor
syscall
cmp
and
jnp
js
push
lods
test
push
fnstenv
add
or
cmp
cld
and
jp
data16
fnstenv
sub
add
in
pop
and
pushf
sbb
mov
xor
cmp
push
sub
mov
pop
mov
leave
or
adc
fs
ret
and
push
lock
sub
aas
pop
out
popa
push
out
sbb
shrl
mov
mov
xor
call
inc
sbb
daa
shl
sti
int3
xor
jecxz
lcall
mov
inc
dec
xor
movb
xor
xchg
imul
mov
adc
xor
fimull
fnstcw
stc
jnp
mov
fstps
iret
push
js
xor
inc
aaa
outsb
incl
es
pushf
jg
cld
mov
out
mov
test
lods
and
fmull
movsl
sub
sub
jmp
dec
pxor
fmull
das
ficoms
movsl
pushf
mov
jp
pushf
adc
fwait
test
cmp
insb
cmp
add
mulb
loopne
pop
aad
cs
add
sub
mov
out
sub
sbb
out
sbb
loope
pop
adc
in
pop
ret
mov
subl
fiadds
stos
ror
add
fcmovb
push
fnstsw
dec
lret
pop
fisttps
mov
push
scas
je
out
and
adc
mov
xchg
inc
or
dec
inc
das
inc
repnz
arpl
add
xchg
pop
dec
scas
addr16
icebp
in
int3
xchg
aam
ja
mov
dec
xchg
fcom
pop
stos
xor
cmp
xor
xchg
shlb
out
and
jo
daa
mov
mov
fbstp
mov
or
scas
mov
push
std
lea
adc
filds
cmp
xor
jmp
push
sub
lret
jg
sbb
outsl
xchg
loopne
adc
pop
pslld
lock
xchg
sbbb
cmp
aad
mov
hlt
adc
lea
daa
ror
and
or
imul
add
lock
xorl
bound
jg
cmp
sbb
nop
add
aad
sbb
sub
movsl
push
xchg
loope
xor
inc
xacquire
xor
cltd
mov
orb
jl
sub
adc
push
rclb
fldcw
adc
out
std
mov
shlb
mov
xchg
mov
add
insl
sbb
and
je
sbb
out
mov
mov
and
cli
loopne
mov
sbb
out
sub
push
lock
push
insl
push
pusha
sub
sub
ja
mov
xor
and
inc
push
push
out
scas
mov
push
push
lods
mov
push
jp
jge
in
loope
push
dec
jne
negb
cli
movsl
mov
popf
enter
mov
mov
ja
loopne
adc
jle
or
adc
fxch
jo
and
pop
inc
push
lds
shlb
clc
mov
or
jo
sahf
andl
sti
cmpsl
mov
ds
stos
push
xchg
aam
push
dec
lahf
imul
push
movsl
aad
jecxz
pusha
jno
lret
cmpsl
insl
adc
sub
cmp
dec
adc
sub
add
lea
subb
xor
pop
inc
or
es
mov
pop
pop
adc
xor
dec
rclb
fisttps
jno
cmp
push
data16
cmp
cwtl
jns
in
push
mov
push
dec
out
int
cmp
mov
or
inc
sub
jg
ljmp
xor
mov
pop
dec
add
mov
stos
loopne
aad
or
adc
or
insl
pop
jmp
cltd
add
push
pop
mov
mov
jp
jo
adcb
pushf
lret
das
xchg
dec
push
rorb
scas
sub
and
add
lret
sub
ret
out
pop
shrb
xchg
pop
push
mov
ja
push
rclb
clc
aaa
test
mov
push
cmp
jge
lret
out
call
fcompl
loop
mov
mov
in
jb
adc
inc
in
stc
sbb
jae
insb
mov
cmp
ret
jnp
ljmp
pop
icebp
xor
adc
push
sub
aam
add
dec
mov
das
nop
ds
mov
test
ret
add
popa
mov
adc
xor
adc
mov
es
pop
inc
scas
xchg
sbb
notb
sahf
jnp
cwtl
add
popf
out
mov
cmpb
mov
loopne
jnp
cli
es
sbb
mov
pop
push
outsb
jmp
stc
rclb
faddp
push
xchg
lahf
jp
test
aad
xchg
or
cmp
cli
lret
fnstsw
psrlq
sbb
gs
sbb
and
cwtl
daa
mov
dec
loope
adc
adc
fcmovne
pop
push
or
rcrl
pusha
and
adc
mov
pop
push
inc
xchg
aam
clc
test
rorl
mov
inc
and
push
or
cmp
jb
hlt
dec
ds
dec
adc
das
jns
mov
cmc
xchg
jb
movsb
cmovge
add
cmp
stos
dec
jmp
mov
inc
sub
sbb
gs
loop
jnp
aam
addr16
rorb
ror
push
push
int
ret
push
cmp
jnp
mov
jo
fwait
push
repz
push
xchg
xchg
rorl
mov
ret
dec
clc
adc
enter
xchg
xor
adc
faddl
inc
lock
testl
fmuls
iret
sti
test
dec
pop
popa
add
adc
dec
xor
in
xor
inc
mov
cmp
rorb
pop
jns
out
outsb
and
shlb
or
aaa
lret
outsb
sbbl
nop
inc
std
xchg
or
sub
sbb
call
mov
adc
loopne
ret
mov
repnz
pop
push
xchg
sub
lods
movsb
aaa
mov
stos
sbb
out
notb
aad
pusha
movsl
xor
dec
lret
add
pushf
lahf
je
push
adc
fistpll
shrb
pop
leave
out
and
arpl
xor
rcll
adc
cmp
adc
mov
add
mov
es
call
mov
inc
mul
jl
clc
inc
push
xchg
xchg
jb
push
inc
xor
xchg
adc
push
sub
xchg
shr
std
mov
mov
lock
or
pop
sbb
pusha
scas
cmp
into
in
je
push
addr16
call
leave
push
sbb
cmp
fdivs
ret
clc
call
push
push
mov
dec
push
mov
jns
mov
movsb
inc
movsbl
cwtl
sbb
mov
pop
decb
add
xor
or
roll
not
das
stc
arpl
lret
jecxz
insb
add
lds
testb
lock
jg
xor
sub
push
mov
mov
test
cmc
in
dec
cmp
daa
leave
fwait
movl
pop
pusha
call
cmpsl
faddl
mov
pop
cltd
iret
mov
lcall
ljmp
pop
mov
xchg
cltd
fisttpll
iret
idivl
pop
push
andl
mov
mov
xor
or
daa
adc
sub
push
stc
icebp
adc
mov
jle
push
aad
ljmp
adc
mov
ret
pop
push
dec
daa
cli
push
aam
in
sbb
hlt
addl
pop
add
call
and
out
pop
dec
fwait
cwtl
je
mov
xorb
imul
mov
clc
les
in
xor
push
lea
cltd
sub
adc
cmpb
mov
out
pop
pop
icebp
inc
shrl
xchg
inc
lods
jns,pn
pop
es
icebp
sahf
push
js
leave
dec
lock
push
xchg
xor
iret
pop
lretw
jle
mov
fwait
in
pop
pop
xchg
orl
pop
jno
insb
pop
sub
xor
sub
daa
jo
das
xchg
push
mov
mov
insl
outsl
pop
jne
fdivrl
ljmp
sub
dec
repz
insb
stos
adc
test
int3
xlat
mulb
int3
jmp
push
xchg
sub
and
lods
and
pop
nop
scas
cmp
fstpl
cmp
push
mov
scas
cmp
cwtl
mov
mov
ja
fmuls
and
ficomps
sar
mov
mov
popf
dec
lcall
leave
orl
leave
sbb
xorl
adc
add
sbb
push
xor
jge
jg
aad
dec
sub
adc
int
shrl
dec
jb
movsl
dec
xor
lret
stos
jno
movsb
or
in
adc
out
movsb
jl
mov
hlt
cltd
mov
popa
fistpl
adc
loop
aad
add
lcall
sbb
and
sub
fistpll
cmp
adc
sbb
pop
stos
push
jbe
jns
jmp
ljmp
mov
xor
push
xor
jecxz
or
dec
or
dec
jnp
ss
push
int
sub
sbb
aad
mov
repz
mov
xor
push
jne
and
and
into
push
insb
ss
push
mov
jle
push
lcall
lret
fwait
test
mov
mov
adc
pop
mov
xor
add
jmp
push
sbb
cld
and
cmp
fdivp
test
dec
cmc
aad
inc
dec
inc
ret
into
inc
lods
jg
cs
cmp
adc
mov
cmp
roll
xor
inc
mov
xchg
loope
out
inc
scas
pop
test
sbb
or
test
xor
jmp
inc
xor
push
sub
popw
sub
call
adc
mov
cmpsb
cmpsl
add
vpunpckhwd
mov
xchg
loop
imul
lods
mov
sbb
gs
fisubrl
cld
add
test
mov
movntq
out
fildl
mov
push
iret
ljmp
xchg
xor
cmp
or
dec
mov
xchg
clc
push
aas
xor
mov
addr16
addr16
out
xchg
jbe
pop
mov
stos
loop
adc
nop
adc
fdivp
adc
and
pop
or
add
sbb
sub
adc
call
mov
and
not
push
xor
lret
add
out
cmpsb
test
movsl
loop
adc
mov
popf
fadds
or
out
sarl
je
or
and
cmpsl
aam
das
int
scas
test
jge
in
mov
inc
mov
xchg
and
imul
decl
inc
dec
inc
jbe
pushf
or
dec
js
addb
lods
jnp
stos
pop
or
inc
mov
dec
sbb
shll
rorb
lds
out
pusha
ret
mov
int3
lock
out
or
sub
cmp
xchg
out
cmp
dec
shlb
mov
fstpt
pop
in
mov
mov
adc
mov
push
adcl
int3
fidivrs
fs
cld
pop
sti
mov
fs
dec
add
ja
in
arpl
out
orl
inc
lret
adc
jmp
or
hlt
or
dec
push
jns
xchg
cli
nop
inc
mov
les
out
cmp
mov
lea
lret
idivl
push
idivl
xor
cmpsb
jp
sbb
stos
arpl
jno
rol
inc
push
test
sbb
movsb
ret
popf
test
in
sbb
cmp
repz
sub
repz
inc
nop
orl
lcall
fisubs
sbb
pop
jg
xchg
stos
ret
adc
iret
outsl
mov
ficoms
mov
adc
cmp
push
xorb
push
sbb
sub
and
in
sub
add
mov
adcb
inc
push
lods
adc
nop
jecxz
inc
ds
lea
negb
fld
pop
fdivrs
inc
popf
out
xor
sbb
jg
xor
insl
testl
aaa
jno
sbb
adc
or
sbb
add
popa
cltd
ret
je
popf
push
ja
repz
clc
aam
mov
enter
fsubrl
repz
je,pn
aad
icebp
ret
mov
cmc
clc
push
stc
jmp
popa
mov
sbb
mov
xchg
xorb
stc
test
dec
fucomp
fstl
jb
jbe
dec
and
push
push
xchg
in
jb
push
add
test
and
insl
pop
jl
jne
xor
pop
xchg
inc
lds
mov
dec
addr16
jp
inc
jne
dec
sbb
and
lds
mov
pop
pusha
lods
xchg
int
mov
js
test
mov
jmp
ss
fwait
sbb
cld
jp
aaa
cmp
arpl
jbe
inc
sub
js
jl
mov
cmp
lcall
out
leave
inc
or
ljmp
cmpl
xor
lea
loop
arpl
pop
in
cmp
mov
loop
mov
idivl
add
lcall
push
test
cs
add
jmp
mov
push
into
dec
jg
nop
sbb
int
sub
aas
lss
inc
nop
call
ja
sbb
outsl
mov
outsb
push
xor
add
movsl
add
jecxz
inc
jmp
sbb
popf
xlat
add
mov
out
lret
sub
loopne
cs
daa
jg
je
imul
cmp
loop
mov
cmpsl
pusha
sbb
popa
mov
dec
xor
mov
lock
mov
out
jae
mov
das
test
scas
arpl
sbb
jns
cmc
push
outsb
les
ds
ret
mov
sar
dec
enter
xor
imul
add
outsb
mov
div
sub
jae
pop
sub
adc
stos
sub
cli
shrl
xchg
and
and
cmpsl
mov
gs
pop
sbb
cmp
test
inc
mov
jmp
pushf
inc
jae
jge
jl
scas
ret
push
pop
or
test
add
jbe
mov
loop
decb
mov
in
inc
imul
mov
imul
shlb
or
mov
icebp
push
inc
xchg
inc
inc
cmp
in
or
int3
ds
jl
dec
fisubrs
inc
test
mov
daa
into
repz
pop
mov
cmp
fistpll
lock
lea
ja
sub
xchg
testb
mov
pop
push
xor
push
push
daa
lods
and
movsb
mov
out
lea
in
mov
mov
jmp
adc
cmp
cmp
xchg
fs
int3
and
stos
imul
or
sbb
lock
ret
mov
xor
lret
int
test
or
pushf
shlb
mov
in
icebp
push
sub
xchg
inc
lret
hlt
insb
mov
pop
ret
push
fstp
lret
lds
push
jne
dec
stc
fstps
test
imul
lcall
rorl
test
aad
mov
in
mov
bound
mov
fldt
lods
mov
or
xor
ret
andl
popf
jmp
outsb
sub
mov
sbb
push
sbb
lcall
xchg
mov
inc
nop
xchg
adc
xchg
loop
adc
dec
rcrl
arpl
dec
lret
cmp
or
popf
rorl
xchg
fwait
je
mov
shll
fstl
jbe
sub
and
cmpsb
inc
xor
sbb
sbb
cmpb
fnstsw
and
in
xchg
cmp
repz
cmp
cmp
test
cmpsl
or
mov
cli
mov
sub
add
shrl
mov
lock
insl
or
sti
jb
test
sahf
push
insb
ja
dec
mov
pop
fcoms
outsb
cli
in
inc
push
or
call
outsb
mov
sbb
imul
jg
adc
push
clc
xor
and
add
std
movsl
push
idivb
rol
jne
mov
xor
xor
mov
cwtl
lods
push
inc
lea
imul
arpl
addr16
jge
lret
pusha
or
loop
jl
int3
pushl
add
push
lret
lds
xor
mov
sub
into
fsubp
addr16
pop
pop
fnstcw
or
xchg
and
lock
movsl
jns
sub
cmpsl
xor
add
es
pop
divb
jns
pop
int
pop
pmullw
in
in
mov
rcll
mov
add
ret
fmul
subl
mov
mov
shrl
jnp
cmpsl
scas
xor
insl
cmp
inc
pop
popa
ss
inc
test
xchg
push
xchg
xchg
or
pop
pop
xchg
aad
jnp
test
push
in
dec
inc
in
repz
or
mov
xorl
lret
cmp
add
pushf
mov
jns
dec
pop
jno
push
adc
testb
mov
loope
pop
xor
xchg
cmpsl
push
rcrb
jle
mov
insb
cmc
xchg
inc
in
ljmp
inc
mov
pushf
mov
xor
adc
xorl
in
xchg
test
cmp
xor
xchg
daa
mov
iret
pop
sbb
jb
test
lods
push
sub
sbb
jmp
nop
push
adc
test
fnstsw
xor
inc
aas
cs
sti
adc
js
lcall
scas
dec
ret
stos
sub
shlb
jecxz
ja
xor
arpl
adc
cmp
mov
shrb
jne,pt
and
mov
int
hlt
xchg
cmpsl
push
sub
loopne
sub
int
pop
popa
or
shrl
lea
out
test
lock
adc
stc
movsb
and
xchg
aam
shrb
out
mull
cmp
add
push
ret
inc
sbb
mov
mov
lcall
jae
sub
leave
dec
push
sub
incl
mov
pop
movsl
jno
and
icebp
or
dec
aam
pop
and
mov
cmc
cli
dec
inc
xchg
jecxz
jecxz
push
sbbb
mov
push
xor
idiv
or
mov
pop
inc
cwtl
mov
stos
and
mov
cmp
rcrl
sbb
sbb
xchg
out
dec
repnz
in
lret
mov
lock
ds
arpl
jae
jp
leave
cli
sahf
xchg
test
pop
pushf
cmpsl
call
or
or
sub
push
loope
pop
ds
rcrb
and
mov
int3
add
sti
xchg
or
jle
loopne
jbe
mov
in
test
scas
pop
pushf
jo
mov
jnp
push
push
or
sbb
sar
inc
xchg
ret
testb
inc
sbb
push
xchg
leave
int
dec
loope
pop
jb
xchg
rclb
xor
xor
cmp
mov
jge
out
jge
jmp
push
fwait
mov
clc
cli
aad
cmp
sub
push
inc
xchg
push
xchg
and
push
insb
in
out
push
push
cld
cmp
insl
adc
pusha
int
sbb
sub
mov
and
xor
push
add
add
mov
sbb
movsb
dec
adc
aaa
rorl
mov
loopne
mov
xchg
sub
add
sbb
repnz
inc
lea
pop
and
imul
es
leave
xchg
sub
mov
repnz
ret
jle
test
popa
adc
ret
push
pop
xor
sbb
mov
pop
outsb
in
mov
mov
ds
es
push
pop
xchg
adc
ret
orl
sbb
negb
nop
ds
sbb
shll
push
add
test
mov
adcl
rcr
out
aam
shll
scas
orb
xchg
ficompl
mov
dec
enter
ret
mov
inc
inc
xchg
sub
pop
gs
xor
cli
push
xchg
mov
sub
or
lcall
sbb
mov
jle
inc
js
mov
sti
addr16
leave
fwait
sbb
and
sub
pop
lds
pop
or
repnz
das
pop
popf
jl
sbb
fucomp
aas
pop
sbb
cmc
or
sbb
imul
int3
sub
mov
mov
pop
jmp
outsl
cmp
outsb
stos
jl
xchg
xchg
jno
lea
stos
stos
jp
jbe
dec
jg
mull
sbb
mov
pop
pusha
adc
add
add
inc
dec
mov
or
in
fnstsw
mov
push
jno
xchg
imul
or
mov
outsb
pop
jae
sbb
mov
gs
jnp
das
and
cmp
adc
out
cmp
pusha
in
mov
shl
jo
push
xlat
push
pop
cmp
std
aas
decl
jno
push
cmc
out
mov
inc
lds
lds
es
cmp
stos
stos
mov
lret
arpl
es
icebp
inc
shrl
aas
out
add
adc
and
mov
push
add
jge
mov
iret
pop
dec
or
cmp
mov
mov
pop
pop
mov
lods
cs
dec
punpckldq
in
push
jg
push
sbb
cmp
add
lods
fsubrl
push
cmpsl
jo
out
and
and
cs
mov
lret
out
mov
lods
in
inc
jno
cmpsb
int3
dec
push
in
frstor
mov
out
mov
bound
sub
loop
aaa
fwait
ljmp
xchg
roll
inc
icebp
gs
jae
xchg
push
es
adcb
xchg
mov
jnp
mov
repz
in
lahf
pop
dec
sbb
andb
cld
daa
lods
mov
pop
shl
mov
mov
adc
into
pushf
dec
cmpsl
xchg
pop
pop
das
ja
inc
pop
adcb
adc
icebp
mov
cmp
std
mov
xchg
testl
sbb
and
sbb
int3
sub
push
xchg
add
jl
mov
mov
adc
lret
dec
mov
xchg
inc
mov
jo
xor
movsl
in
bnd
std
mov
mov
scas
int
jmp
lcall
push
xor
mov
mov
rol
xorb
mov
stc
test
dec
cmp
test
lds
scas
sbb
out
sbb
std
dec
ss
sbb
movsl
gs
lea
jp
cmp
in
jge
aad
mov
jne
daa
idivb
rorb
xor
push
dec
cltd
jne
ljmp
mov
add
dec
loop
pop
or
jmp
xor
fsubs
out
scas
cld
ja
in
out
xor
dec
stc
jae
cmp
popa
or
xchg
xorb
push
push
imull
adc
ss
push
mov
loop
pop
push
lods
lcall
dec
clc
mov
adc
adc
adc
xchg
in
xor
aam
repnz
and
loop
lret
sub
jnp
add
popf
fstps
adc
sub
out
and
cmpsb
leave
loope
fmull
les
mov
mov
gs
movsl
mov
and
cmp
pop
add
and
xchg
into
loope
aad
mov
int
sub
mov
and
test
cmpsl
xchg
pop
mov
mov
push
sti
fwait
sub
aaa
mov
ja
fcoms
mov
mov
pop
xor
jno
jge
cld
xchg
mov
pop
xlat
lea
ret
into
mov
sbb
xlat
push
cltd
xor
lahf
push
lcall
sbb
and
data16
jp
push
mov
popf
ficomps
shll
outsl
stos
data16
push
inc
lahf
jmp
push
add
movsb
mov
xchg
out
rcrb
or
sbbl
jecxz
xchg
jecxz
cmpsl
adc
cli
scas
sahf
xchg
ret
cmp
pop
pop
imul
xor
cli
adc
loope
arpl
in
loopne
mov
or
add
out
cmpsb
xchg
xchg
xor
sahf
dec
call
repnz
mov
sbb
addb
popa
sub
and
sub
jno
jo
movsl
stos
xchg
js
lods
fldenv
inc
fisubs
pop
loopne
push
scas
ror
icebp
decb
pop
in
sub
aas
je
jo
xchg
mov
mov
out
stc
mov
daa
cs
jmp
push
cmp
jle
adc
call
pop
xchg
mov
imul
dec
adc
lret
dec
out
mov
push
lret
inc
jmp
dec
jge
ffreep
cmp
aam
mov
push
pop
inc
or
stos
add
push
call
dec
shlb
sahf
dec
fimuls
pop
std
enter
pop
xchg
test
add
xor
add
mov
fwait
push
in
pop
out
mov
mov
addl
push
idivl
adc
sbbl
fsubl
jne
jg
sbb
popa
dec
mov
sub
jnp
sub
cmp
or
lea
add
enter
les
push
or
mulb
push
hlt
dec
mov
shll
lds
jg
lret
psllq
sbb
out
sub
cmp
jae
inc
std
imulb
insl
xchg
movsl
mov
cmp
add
jbe
popa
mov
mov
jecxz
jge
fcmove
nop
jno
jg
push
repnz
jbe
sarb
and
idivl
in
adc
aas
pop
xlat
out
mull
mov
xor
mov
and
in
paddusw
cmpb
in
fwait
stos
rcrb
pushf
jbe
push
mov
adc
fdivrs
daa
add
cmp
inc
outsl
aaa
sub
dec
inc
and
dec
push
jbe
pushf
or
jl
repnz
push
xchg
xchg
add
push
std
loop
rcrb
shlb
and
cmpsb
xor
call
outsl
jmp
cltd
mov
scas
add
stos
cwtl
jp
adc
pop
jbe
pop
mov
orl
cld
push
dec
push
dec
sub
or
stos
sub
dec
int3
add
rcrb
or
sbb
stos
rol
inc
add
pop
clc
shrl
jnp
xchg
cmpsb
insl
xchg
add
fcomi
loope
imul
popa
mov
add
dec
add
add
stc
fcmove
lret
cmp
cmp
out
and
lcall
fldenv
xchg
loopne
xchg
jmp
js
cltd
push
xchg
out
aaa
sub
jle
sub
xchg
pop
inc
idivb
add
test
sub
sbb
mov
cmpb
rorb
push
pop
out
mov
mov
cmp
pop
ja
call
int
mov
out
xchg
dec
push
pushf
jbe
cltd
mov
das
rorb
xchg
push
pop
pusha
aam
push
jae
out
mov
adc
mov
pop
mov
mov
js
lock
iret
sarb
lahf
cmp
cmpsl
rep
fimull
cmc
mov
jmp
jbe
xchg
es
push
sbb
ficompl
or
inc
test
test
xor
pusha
ret
cwtl
push
test
adc
hlt
sbb
loope
mov
cmp
mov
sbb
xor
mov
das
push
cmpsb
inc
mov
jae
mov
stc
fwait
ss
lods
adc
add
push
rolb
dec
inc
push
das
cmp
pop
push
lar
jmp
mov
sub
xchg
fwait
mov
mov
jle
test
sarl
xor
add
dec
dec
push
mov
pop
add
cmp
jl
jo
mov
xchg
mov
hlt
or
sti
sub
mov
pop
rcrb
sbb
dec
cmp
xor
or
lods
out
jo
ret
mov
cli
in
mov
and
inc
or
cmpl
push
daa
and
push
inc
inc
mov
and
mov
in
je
and
in
dec
cmp
stos
pop
mov
push
mov
sub
insb
cltd
cmp
outsb
aad
sbb
test
xchg
fisubs
xor
je
xor
inc
ss
lea
nop
mov
les
popa
ljmp
std
mov
jle
xchg
dec
scas
movsb
sub
push
fstl
push
loope
or
xchg
xor
cmp
push
push
bound
inc
in
das
divb
cwtl
outsb
cmp
inc
pop
fwait
push
les
test
mov
ss
flds
enter
lret
bound
xor
stos
hlt
ja
lcall
and
shll
mov
les
mov
mov
pop
in
push
cmc
mov
sub
jg
lahf
aam
cltd
add
nop
in
mov
movsl
and
pop
fwait
mov
lcall
or
jb
mov
int3
jge
test
sbb
in
out
stos
push
add
mov
fsubrs
dec
fisubrs
or
push
ds
fcmovnbe
cmc
xlat
add
jno
jo
shlb
std
pop
xor
out
test
rcrb
sbbb
aad
ds
pop
sub
jg
fimuls
ja
aas
sahf
dec
push
mov
int3
daa
movsb
lret
fcomps
out
mov
inc
lcall
imulb
pop
push
cmc
xor
lds
rcrl
sbb
push
jle
repnz
dec
mov
aas
jno
sub
pop
stos
sub
push
lock
cmpsb
test
inc
add
jo
addr16
test
mov
aas
cmpsw
aam
push
add
insb
mov
jae,pt
xchg
js
mov
pop
loopne
jle
pop
and
pop
adc
ficoml
mov
sbb
push
adc
xor
fidivl
popa
inc
dec
sub
int3
imul
test
in
movsb
subb
mov
pop
mov
jg
movaps
or
dec
mov
clc
hlt
or
cmp
lods
aaa
cwtl
lahf
xorl
pop
mov
and
in
gs
mov
dec
cmp
adc
inc
out
dec
mov
jp
jo
cmp
mov
inc
xor
shrl
adc
into
repz
insb
imull
adc
adc
push
js
rcl
stos
clc
mov
fstps
test
pop
pop
dec
out
sub
fwait
gs
sbb
pop
in
and
push
out
ret
inc
jmp
scas
or
jo
cmp
dec
mov
jns
rcrl
xchg
mov
aas
gs
sub
push
data16
adc
sub
stc
sbbb
cs
push
push
repz
cmpsb
cmp
add
sub
add
mov
and
fcmovnb
scas
dec
in
xchg
adc
cmp
lods
push
scas
and
pop
mov
leave
pop
jle
repz
mov
loopne
xchg
mov
or
sbb
push
bound
mov
mov
mov
mov
xor
cmpsl
rorb
daa
mov
xchg
sar
pop
das
addr16
or
lret
mov
or
inc
jl
out
mov
rcrb
jge
cmp
jnp
cwtl
adc
shr
negl
clc
loop
orl
pop
sub
mov
push
or
test
imulb
sbb
jnp
xchg
dec
or
gs
pusha
mov
xchg
jmp
daa
mov
jns
sbb
sti
fidivrs
lods
test
mov
test
inc
dec
imulb
push
sub
add
fsubrl
pop
mov
hlt
mov
push
sahf
add
inc
icebp
and
xor
sub
adc
fsubp
aaa
adc
enter
vcvtpd2ps
pop
add
jnp
jmp
sub
mov
add
adc
mov
out
xchg
jp
gs
pop
adc
orb
out
xchg
cwtl
push
incb
fildll
daa
cmc
test
sub
lcall
add
ss
pop
shl
xor
jg
imul
push
mull
ret
add
sub
mov
rolb
jmp
adc
inc
mov
inc
in
jbe
bound
and
cmpb
call
cld
sbb
imul
push
aam
jl
shll
sar
mov
add
stos
xchg
lea
sub
flds
test
inc
pusha
jmp
pushf
daa
lret
int3
dec
add
jp
and
adc
xlat
nop
xor
ret
js
test
imul
and
test
sub
das
mov
inc
je
adc
fwait
in
cmp
cs
int3
call
and
sub
add
and
lret
test
in
push
inc
jmp
aam
in
not
cmp
fiaddl
daa
sbb
call
push
jp
sub
sub
push
lret
jno
inc
fdiv
pop
mov
mov
arpl
fdivrp
dec
pop
cmp
in
push
jmp
pop
sbb
or
dec
xchg
xchg
daa
icebp
jbe
andl
mov
sbb
das
lea
hlt
daa
push
xor
ret
sbb
fwait
mov
int
or
mov
mov
sbb
mov
push
pop
xor
add
sub
inc
mov
mov
ficompl
inc
push
xchg
and
xchg
jnp
mov
mov
pop
pop
mov
sbb
pushf
mov
mov
dec
aam
test
mov
add
inc
adc
mov
cmpsl
in
add
arpl
outsl
in
hlt
mov
or
pop
cltd
shll
fs
out
sub
jecxz
adc
inc
dec
mov
cmp
cmpb
inc
test
adc
es
mov
xor
mov
inc
stc
push
das
jo
addr16
jp
lret
xchg
mov
sub
loop
xchg
stos
cwtl
fdivs
xchg
jp
imul
shr
aaa
cli
lcall
negl
test
loop
adc
and
fbstp
push
shlb
fiadds
stos
xchg
sbb
test
insl
in
cld
stos
cwtl
cmp
and
sbb
rolb
add
pop
sub
hlt
or
jns
sbb
and
repnz
jnp
dec
pop
sub
mov
cmp
in
lds
imull
fmul
push
ja
or
loopne
xchg
inc
daa
cmc
xchg
sub
cmp
cmp
cmpsl
sub
pop
mov
bound
jmp
frstor
fnstcw
into
sub
mov
repz
loop
std
mov
sbb
add
mov
loop
add
or
repz
lret
cmc
call
data16
mov
adc
mov
jae
add
ja
cmp
dec
ljmp
movsb
lock
scas
rcll
cmpsb
lcall
rcrb
mov
gs
pop
pusha
je
clc
jmp
pop
push
out
outsb
ds
fcom
pop
into
adc
test
mov
mov
clc
mov
xchg
inc
mov
jne
adcl
lods
outsl
or
jno
jo
xor
into
add
cltd
aas
mov
jle
aaa
mov
aaa
in
fstpl
loop
jae
add
push
movsl
lcall
push
xchg
and
push
xor
lahf
mov
push
fstpl
push
loope
mov
sub
pop
jnp
adc
lods
adc
cmpsl
repnz
andl
mov
add
sbb
ss
fsubrl
out
pop
jge
xchg
cltd
inc
inc
out
mov
aas
push
loope
jge
mov
scas
mov
dec
mov
jne
lret
dec
int3
in
sahf
mov
xor
es
cmpsl
dec
repnz
push
jecxz
push
fcomi
loopne
scas
xor
std
add
hlt
pop
inc
inc
fs
test
pop
rcrb
out
jo
mov
mov
fdivl
push
fwait
stos
mov
inc
xor
add
adc
shr
in
inc
cmpsl
fdivs
in
addb
sub
je
sahf
int3
testb
pop
lret
and
test
aam
fndisi(8087
adc
inc
lret
test
repz
stos
shrl
mov
repz
int3
xchg
aad
popa
jo
lea
or
adc
xor
test
enter
dec
pushf
jo
cmp
test
inc
mov
fdivl
mov
rcl
xor
clc
mov
cmp
dec
xchg
mov
inc
lret
push
push
mov
insb
insl
addr16
add
call
mov
jmp
adc
push
testl
repnz
stos
dec
dec
xchg
and
ljmp
mov
xor
shll
mov
mov
js
fwait
cmp
sub
cmp
xchg
dec
jnp
mov
mov
cli
mov
mov
stc
xchg
mov
outsl
stc
mov
nop
or
popf
pop
nop
notl
push
ja
adc
or
jne
sbb
jo
xchg
fadds
mov
aas
adc
in
les
in
aas
mov
lahf
decw
pop
std
jns
jecxz
or
and
dec
mov
ja
or
loop
je
into
adc
cmp
repz
add
mov
xchg
cmc
pop
mov
pop
jb
insb
aad
ror
into
das
in
or
xchg
dec
cmp
or
mov
repz
sub
adc
in
pop
inc
in
xor
or
lcall
add
sbb
lcallw
ss
pop
xchg
push
dec
icebp
dec
xchg
xor
lds
sub
ror
mov
jo
aas
mov
adc
mov
cmpsb
push
jmp
push
xlat
or
movsb
fnstenv
iret
add
notl
pop
jge
sbb
dec
xor
sub
mov
mov
push
mov
ja
adc
adc
mov
loopne
xor
mov
jno
mov
inc
and
popf
jp
hlt
sarl
adcl
push
inc
sub
and
leave
mov
outsl
pushf
cltd
insb
fldt
fmuls
gs
xor
mov
movl
mov
pop
push
jno
adc
xor
daa
in
mov
ja
insb
rorl
mov
insb
stos
cwtl
mov
dec
mov
push
shll
push
ljmp
fstpl
lret
into
mov
lret
cmp
pop
xchg
imul
shll
inc
iret
out
mov
lcall
leave
cmp
pop
cld
scas
push
sbb
lock
xchg
aad
lock
getsec
and
out
ljmp
sub
jns
pop
cltd
std
cmpl
lret
mov
sub
mov
cmp
arpl
jg
xchg
mov
gs
ss
lea
stc
imul
or
fiadds
mov
fs
and
stc
jl
int3
pop
xor
mov
adc
repnz
mov
es
fsubrl
xor
mov
je
jge
daa
aad
and
fisubrl
push
cs
inc
xchg
push
bound
outsb
adc
sub
lea
stos
maskmovq
imull
popf
outsl
jne
and
test
inc
jbe
loopne
dec
add
adc
cmpl
movsl
ucomiss
mov
movsb
aad
mov
mov
insl
lahf
cmpsb
xchg
andl
mov
sub
dec
jae
jmp
jecxz
pushf
push
add
shl
cmp
popf
or
inc
mov
aaa
test
jge
bnd
sahf
xchg
sub
popf
shr
test
pop
jmp
pop
cmpsl
inc
cmpsb
xor
lds
push
cld
mov
push
lock
jle
push
hlt
push
notb
cmc
insl
cmp
std
movsl
arpl
add
aaa
sbb
jne
push
insl
add
int
test
sub
fsubrp
imul
lds
add
xor
xor
sbb
repz
and
iret
mov
popa
fcoms
stos
mov
push
fnsave
repnz
lock
stc
fs
mov
add
pop
jecxz
mov
pop
mov
cld
inc
push
push
leave
inc
in
xor
rcll
ret
mov
in
xchg
jecxz
mov
mov
mov
rorl
add
pop
dec
or
sub
aad
loope
xchg
push
imul
dec
lcall
adc
cmp
sbb
mov
in
cmp
jecxz
mov
push
sub
cmp
cs
mov
ds
aam
inc
int
aam
add
loope
push
push
shlb
mov
mov
and
pop
dec
dec
data16
std
mov
jge
ret
jno
mov
adc
clc
mov
pop
into
push
inc
inc
xchg
xchg
js
pop
loop
pop
sti
inc
mov
das
ja
mov
sti
dec
pushf
into
sub
out
push
sbb
iret
test
faddl
inc
push
jo
cwtl
lock
sbb
mov
ds
mov
jae
jle
xor
add
jle
sbb
scas
pop
stc
das
xor
lcall
aas
js
stc
in
in
jno
mov
daa
sub
mov
ret
mov
mov
sub
dec
sub
pop
fnsave
mov
mov
popf
xor
lods
int
xchg
pop
adc
hlt
popa
jge
adc
rep
adc
dec
inc
sbbl
jnp
dec
icebp
lahf
ja
push
mov
lods
and
xchg
clc
and
dec
pop
scas
mul
cltd
cmp
ss
add
push
insl
xchg
aaa
or
mov
scas
int3
mov
js
ret
or
test
inc
sbb
in
nop
push
sbb
imul
jmp
xchg
sarl
rcrb
scas
rol
lods
lret
ds
and
movsb
js
push
jecxz
adc
xchg
lock
xchg
xchg
lea
pop
xor
mov
ljmp
add
fsubl
outsb
sti
pop
xchg
in
jp
or
inc
inc
pop
out
pop
popf
shl
rolb
inc
pop
sbb
jbe
out
pop
inc
addr16
jecxz
and
add
add
das
push
add
sbb
push
sub
mov
mov
stos
dec
data16
pop
pop
int3
cmp
fucomp
int3
subb
aas
jl
xchg
mov
add
enter
ljmp
sub
subl
sahf
dec
and
push
insb
mov
aad
pop
jle
ficompl
enter
xor
aas
cltd
mov
test
insb
sbbl
push
xchg
jb
test
sahf
repz
inc
add
sub
push
xor
rolb
push
mov
jmp
mov
xor
or
in
mov
loop
lods
js
push
mov
dec
mov
mov
pop
mov
out
fiadds
ja
in
test
or
mov
shlb
mov
in
inc
push
mov
sbb
gs
sbb
out
jp
xor
sub
sbb
jmp
je
cld
stos
cmp
push
xchg
dec
pop
inc
mov
push
pop
push
lock
cmp
dec
lret
dec
mov
fbstp
out
lea
stc
ss
pop
fistpll
and
cwtl
iret
xchg
jno
fcoml
push
jns
int
xorl
call
inc
mov
add
push
or
and
in
cmp
pop
repz
ficoms
int
aad
insl
cmpsb
imul
sti
stc
sub
inc
and
jl
xchg
xchg
rcrb
sub
xchg
popf
je
mov
mov
add
sub
push
pushf
mov
sub
int3
add
cmpsb
dec
mov
mov
sbb
xor
cmp
insl
out
pop
out
mov
mov
xchg
out
and
sti
in
mov
dec
lock
out
dec
cmp
pop
daa
lock
cltd
push
sub
xlat
cmpsb
testb
mov
push
mov
jg
mov
jecxz
or
pop
out
scas
int3
add
dec
dec
xor
push
cs
and
cmc
or
and
add
add
or
lcall
adc
xor
inc
dec
push
push
jl
sbb
jp
pop
jnp
jecxz
lea
arpl
push
cmp
sbb
jbe
mov
or
xchg
push
sbb
mov
sbb
hlt
repnz
add
repnz
mov
stc
jnp
xor
pop
aam
leave
sub
pop
negl
jmp
sarl
ljmp
std
pop
push
je
jmp
push
jge
test
sub
movsb
daa
mov
and
cmc
pop
jns
jp
and
xchg
mov
cltd
jne
daa
in
dec
lret
jp
mov
jp
mov
lods
cs
pop
adc
sub
loopne
mov
sub
sbb
or
jbe
idivl
mov
and
ficompl
outsl
stos
or
pusha
push
pop
and
inc
adc
mov
mov
ss
mov
xor
shlb
loope
icebp
xor
dec
test
ss
mov
popa
mov
jne
test
dec
fldt
mov
jb
sbb
xor
and
pop
std
enter
negl
xchg
xchg
cmp
shlb
enter
xchg
movsl
mov
pop
jne
or
std
gs
jmp
imul
arpl
push
pop
add
movsb
inc
pushf
ja
std
lcall
sub
mov
stos
sub
shl
lods
mov
dec
add
sub
dec
test
xlat
jo
adc
jl
aam
or
and
test
adc
or
sub
push
inc
fdivl
jo
inc
push
outsl
jmp
jno
jnp
cmp
dec
stos
pop
testl
bound
inc
push
gs
mov
jo
lods
sub
sti
call
xor
push
mov
and
mov
cwtl
push
dec
lea
sub
cmp
cmp
fistpll
sbb
adc
sbb
ljmp
mov
aad
test
lret
cmp
mov
xchg
sub
and
repz
jmp
repz
jecxz
leave
inc
fucompp
iret
gs
aad
sub
push
sub
adc
pop
cmpsb
arpl
mov
sub
mov
imul
push
add
stc
mov
mov
jmp
arpl
mov
mov
and
adc
sub
mov
insl
dec
das
dec
lods
insb
mov
xchg
xchg
daa
push
dec
push
add
gs
in
inc
cmpps
xor
jb
dec
mov
jge
sbb
and
mov
cld
iret
and
dec
jns
xor
mov
mov
lea
test
ljmp
cmp
mov
insl
in
and
idivb
cmp
daa
fndisi(8087
int3
xchg
cmc
push
mov
in
jecxz
loopne
xorb
mov
popa
rcr
dec
add
mov
and
pop
testb
daa
add
stc
jmp
jnp
push
sbb
cltd
leave
pop
rorl
addr16
in
jns
jbe
cmp
cmpb
or
dec
fs
ja
addl
cmp
shl
pop
dec
mov
mov
insb
fbstp
ljmp
shlb
shr
push
pop
lods
mov
lcall
xor
xor
sbbl
test
pop
inc
adc
loop
dec
pop
lret
or
sub
sub
shlb
into
ret
and
jbe
imul
in
js
repnz
and
sbb
leave
pop
sub
add
cmpsb
dec
dec
testl
jns
and
je
jnp
shlb
out
loope
add
inc
xchg
ljmp
out
mov
mov
jne
ja
sbb
popa
inc
jl
fadds
mov
in
pop
dec
mov
sbb
insl
cmc
outsb
sahf
aas
mov
lock
jl
std
dec
cmc
mov
pop
jnp
mov
push
daa
arpl
jmp
mov
xchg
jo
or
cmp
out
notb
loop
sbbb
sub
sbb
in
lcall
dec
sub
repz
cmp
cld
adc
idivb
call
lea
in
pop
add
adc
mov
jp
add
cmp
clc
andb
mov
xor
test
stos
adc
dec
jae
fwait
repz
aas
sbb
es
imul
cmp
pop
bts
mov
fists
jl
ss
inc
xchg
lock
cld
bound
push
jge
cmp
das
add
mov
jno
inc
fdivrs
les
add
add
int
sbb
or
mov
nop
xchg
fdivs
sbbb
cli
or
lods
mov
outsb
lods
shl
dec
mov
add
add
xchg
sahf
add
and
adc
ret
pop
std
shll
sbb
repnz
and
xchg
adc
repz
les
stc
pop
cmp
xor
mov
cmc
pop
jl
scas
stc
fildl
loop
and
movsl
lock
addr16
mov
lcall
push
das
cs
dec
negb
mov
insl
mov
faddp
fdivs
mov
jg
into
mov
lahf
data16
das
add
data16
pop
fimuls
lcall
or
outsl
push
jle
cli
xor
inc
and
mov
js
xor
xchg
ss
test
into
adc
jecxz
pop
sub
js
enter
fldt
mov
pop
cmp
mov
sysret
lods
and
in
pop
dec
adc
int3
mov
leave
popa
movsl
fistps
outsb
fwait
jmp
push
push
pop
push
dec
sbb
mov
ljmp
cwtl
f2xm1
or
cmpsl
sbbl
daa
add
int
mov
je
fcmovnu
ss
adc
xor
push
mov
fistpll
mov
sbb
shr
fs
fidivs
scas
scas
mov
frstor
popf
ret
xchg
sub
nop
dec
jnp
xchg
fcoml
or
sub
out
and
ljmp
adc
mov
adc
mov
add
out
stc
flds
mov
add
push
or
sti
or
mov
or
add
test
movsb
lahf
ret
or
sbb
adc
shll
inc
sub
jo
mov
pop
jecxz
dec
pop
rolb
imul
inc
lods
push
sbb
push
insl
scas
lock
sbb
xchg
cmpsl
mov
in
stc
cmp
inc
sbb
xor
lea
aad
pop
jo
mov
or
sub
push
shlb
jae
iret
or
loop
pop
outsb
pop
call
cwtl
mov
cmp
dec
cli
rolb
outsb
rclb
pop
push
xchg
psubusb
pop
cmc
scas
sbb
insb
repnz
push
in
dec
xchg
jns
aad
cmpsb
lea
push
jbe
push
sub
ud2
push
mov
mov
pop
les
mov
rcrb
push
inc
dec
arpl
or
mov
dec
mov
pushl
adc
adc
dec
inc
subb
cmp
jae
fldt
adc
jge,pn
pop
and
push
lret
sbb
sbb
cli
mov
push
jns
mov
adc
mov
mov
add
pop
loop
lods
mov
pop
in
lret
jge
cmp
cwtl
inc
daa
test
fldcw
sahf
push
or
test
xchg
inc
mov
or
into
test
or
sub
or
jp
popa
ss
mov
jmp
dec
ds
sbbl
cli
jl
dec
sti
add
mov
push
cs
or
jecxz
popf
clc
insb
mov
movsl
cmpsb
and
loop
cmp
sub
sahf
jmp
adc
in
jno
cs
dec
das
js
pushf
inc
jmp
rol
clc
pop
andb
pop
mov
dec
mov
mov
pushf
pop
scas
xchg
and
test
stos
dec
mov
push
cmp
sbb
ja
xor
lds
pop
fldl
inc
pop
xor
mov
inc
sub
xor
ss
lcall
mov
push
bound
loope
fldl
fcomp
mov
fdivs
mov
cld
sub
mov
out
loopne
push
mov
adc
xchg
ret
xchg
movsl
dec
push
adc
aad
lahf
je
sbbl
test
jle
jae
fistpll
ja
outsb
xor
jecxz
stos
xchg
icebp
or
js
jge
fwait
jge
icebp
pushf
dec
xchg
and
xor
push
cmpsl
pop
xchg
push
out
loope
inc
imul
add
loopne
sbb
mov
in
lret
fldpi
cmpsb
add
push
out
jg
push
dec
adc
ss
adc
xchg
mov
mov
movsl
stos
es
push
arpl
sarb
in
pop
rcrb
jns
inc
cmpsb
cmp
mov
insb
mov
sar
cld
dec
jns
cld
dec
push
push
fistl
mov
or
sub
leave
idivb
jno
dec
vpsubb
push
test
adcl
and
pop
add
xlat
mov
rcrb
pcmpgtw
jne
mov
push
add
in
inc
loopne
bound
sub
or
repnz
xor
and
je
insb
sub
enter
mov
nop
xchg
pop
cmpb
into
mov
jg
cmp
sbb
mov
add
movsb
push
xor
mov
fisttps
shlb
pop
xchg
mov
test
cmc
or
jns
or
add
inc
lcall
lods
js
je
lods
incb
or
cli
mov
push
and
mov
shll
scas
inc
addr16
into
lock
or
push
push
into
popa
dec
sbb
inc
lahf
add
ds
mov
js
xor
andb
es
cmp
jnp
js
in
mov
test
or
pop
in
fcom
cmp
lock
push
je
pusha
mov
ficoml
mov
xor
test
dec
xchg
xchg
lods
cmp
push
mov
add
subl
fnstcw
cmp
adc
mov
shl
int
mov
xchg
aad
xor
mov
mov
xchg
inc
xor
aas
out
push
sbb
push
mov
mov
nop
add
jns
pop
cwtl
cmp
rol
in
mov
movb
aam
out
push
lods
add
in
fmul
mov
arpl
mov
mov
mov
xchg
xchg
dec
clc
aas
out
jne
inc
ret
insl
mov
adc
mov
sub
jmp
sbb
push
pop
arpl
xor
pop
or
subb
inc
test
cmp
movsb
xchg
popa
jb
cwtl
pop
dec
xchg
jb
pushf
in
push
and
lods
add
cmpsl
aas
ret
cmp
sub
jnp
out
insb
xchg
or
and
lds
and
mov
rcrl
loop
sub
push
push
je
or
ljmp
dec
pushf
fistpll
fiaddl
lods
and
aad
fists
xchg
jae
xchg
dec
in
dec
into
mov
sahf
outsl
movsb
cmpsb
negl
insb
in
cmp
push
push
xor
sub
data16
lret
lahf
push
jmp
andl
sti
push
xchg
aam
pop
adc
fadd
push
fildll
adc
loop
ds
and
aam
xor
iret
loop
mov
pop
mov
push
popa
mov
mov
imul
movsl
addr16
or
addr16
add
iret
push
nop
mov
jno
lcall
fsub
xchg
adc
push
lds
jle
ljmp
xor
mov
mov
cmp
sbb
lds
std
movsb
ljmp
stos
mov
dec
shr
push
loop
or
jp
stos
or
dec
mov
aad
xor
jae
sub
popa
dec
push
pop
das
rcrb
mov
fiadds
jb
dec
adc
lock
fidivl
jb
ljmp
arpl
dec
xchg
stc
loopne
pop
movsl
jae
cmpsb
sub
mov
adc
xchg
nop
out
push
jae
fnstsw
iret
mov
pop
or
stos
dec
mov
dec
lds
inc
setbe
in
sbb
dec
call
lds
cld
sbb
scas
add
adc
mov
cmpsl
jo
mov
sub
aam
sarb
loope
iret
icebp
dec
iret
in
xchg
add
mull
inc
arpl
push
mov
ret
out
adcb
pushf
xchg
fnstenv
lods
pop
xor
leave
lahf
data16
pop
aam
jge
negl
xchg
test
testb
movsl
loopne
icebp
loop
shrb
adc
sbb
adc
ja
aas
inc
sbb
fstl
adc
andl
mov
mov
test
jns
jne
push
mov
jecxz
std
adc
and
andb
push
stc
in
loope
inc
loopne
lods
jmp
mov
in
and
mulb
dec
add
sub
adc
popa
lret
mov
sbb
pop
fldt
ljmp
clc
mov
mov
mov
pop
xor
sbb
data16
cmpsl
pushf
dec
dec
xor
push
in
lahf
inc
push
out
les
push
push
mov
lds
lahf
add
push
cs
cmp
pusha
push
leave
inc
add
sub
dec
cmp
mov
out
push
mov
add
cmpsl
into
push
xchg
adc
sbb
fildll
in
stc
adc
cmp
push
outsb
mov
inc
xor
cwtl
jns
out
pop
add
or
adc
jae
mov
push
inc
mov
mov
stos
push
push
out
sbb
test
sbb
and
mov
mov
adc
cld
aad
scas
ret
inc
inc
enter
cmp
push
push
ja
and
in
pop
pop
mov
sbb
push
stos
rol
inc
dec
lods
dec
jae
in
cld
les
in
sub
xchg
dec
cltd
call
js
push
leave
fstpl
mov
enter
test
inc
cmp
adc
xchg
push
pop
or
test
cmpsb
ss
loopne
or
lahf
stos
repz
jne
adc
mov
mov
pop
cmpsb
xor
sub
fcmovne
cli
push
bound
loopne
clc
int3
das
mov
jp
sahf
fcompl
inc
adc
out
ret
push
int
mov
dec
pop
xor
outsl
mov
adc
pop
inc
dec
inc
cld
push
inc
testl
arpl
movsl
xchg
cwtl
js
je
test
outsl
mov
and
pop
sub
dec
pop
test
sub
mov
jl
out
imul
mov
out
inc
and
fmuls
testb
jg
sub
dec
inc
int
clc
inc
mov
and
in
push
sbb
lods
mov
lea
loope
and
inc
aas
insl
andb
movhps
repnz
jle
sarl
rcrb
aaa
mov
nop
enter
ror
addr16
and
lods
notb
inc
pop
sub
cltd
xchg
cmpsb
jmp
rolb
sti
fadds
les
cmp
push
sub
pop
cltd
out
jnp
mov
movsb
pop
adc
jecxz
cmp
and
stos
and
cmp
sub
jmp
mov
xor
dec
mov
inc
xchg
dec
sbb
lahf
ror
sbb
push
jmp
jmp
out
andl
sahf
in
cmp
ret
dec
sti
or
lock
xchg
and
nop
divb
dec
in
mov
stos
sbb
jmp
cmp
add
js
movsb
xchg
repnz
jp
fsubs
pusha
mov
lock
mov
inc
cmc
sub
clc
mov
mov
and
idivb
inc
stos
jb
aad
sub
mov
mov
xchg
jns
test
xchg
out
adc
and
rcrb
push
lret
in
mov
jno
lods
mov
aaa
insl
addl
cmp
pop
repz
sahf
adc
pop
call
cmpb
jbe
xor
orl
xlat
dec
adc
mov
mov
jge
paddusw
leave
inc
sbb
inc
mov
mov
shlb
fstps
mov
outsb
inc
jno
jbe
nop
or
sbb
mov
repnz
leave
ds
mov
rcll
test
mov
mov
in
neg
xchg
in
shll
pushl
mov
and
xlat
negl
sbb
and
jp
push
sbb
mov
mov
mov
clc
pop
mov
lcall
notb
xchg
rorb
pop
or
pop
mov
adc
mov
jp
enter
ds
add
mov
daa
xchg
inc
mov
cltd
cli
leave
lcall
or
ret
test
and
push
mov
ljmp
shlb
pop
jno
xchg
movsb
in
fcmovnu
mov
and
mov
xchg
lods
add
arpl
loope
in
enter
xchg
faddl
popa
movsl
add
pop
popf
dec
js
clc
push
adc
popf
push
daa
ficompl
mov
xchg
int
cli
jno
test
adc
adc
jmp
push
int3
inc
js
mov
jg
adc
xchg
sub
and
call
sub
mov
sti
dec
xor
inc
fidivrl
dec
push
dec
ja
xchg
push
adc
outsl
stos
mov
outsb
cld
jecxz
aad
lahf
cmp
mov
add
decb
mov
mov
and
int
add
dec
add
js
rolb
cmp
mov
xlat
lea
test
in
sub
loopne
xchg
add
mov
xchg
sbbl
cld
sub
inc
or
inc
repz
enter
and
test
jns
dec
lcall
or
loope
or
pop
enter
aam
sub
in
aaa
add
xor
jg
inc
rorb
mov
cmp
push
ret
jne,pn
adc
shlb
je
pop
add
add
lods
mov
cmp
xchg
mov
leave
int
inc
mov
mov
mov
cmc
xor
xchg
test
sbb
orb
or
test
mov
into
imul
or
and
sub
sbb
xchg
cld
adc
cmpsb
test
mov
das
mov
pusha
out
mov
or
push
xor
jnp
shll
call
out
inc
jnp
pop
lods
xor
ret
sahf
xchg
ficoml
jmp
pop
jne
cmp
lock
pop
xchg
shrb
scas
enter
cmc
jl
xchg
in
shlb
sahf
and
outsb
xchg
idiv
sub
mov
clc
pop
shld
jmp
in
pusha
adc
mov
sahf
xor
iret
dec
outsl
loopne
outsb
test
adc
or
lock
stos
dec
in
add
sti
nop
gs
fsubs
mov
pushf
xlat
repnz
xchg
pop
inc
pop
mov
push
je
imul
mov
push
addr16
push
jecxz
in
sarb
cmpb
lcall
mov
js
cmp
jl
or
sti
mov
mov
xchg
lods
or
inc
xchg
mov
dec
aaa
xor
ret
pop
pop
mov
cmp
add
aas
stos
inc
ljmp
sub
dec
cmpsl
cltd
std
fcompl
or
mov
jnp
insl
and
movsl
in
or
cmp
jne
jbe
aad
jbe
sbb
mov
pop
leave
or
mov
inc
cmc
arpl
inc
push
out
fldcw
mov
mov
test
or
ror
inc
xchg
push
and
lret
mov
enter
sub
test
jne
call
or
in
sbb
hlt
pop
jne
addb
xchg
dec
repnz
in
pop
pop
das
dec
popf
adc
mov
cmpsl
aas
push
sarb
imul
jle
cmp
lods
mul
cmc
lret
inc
ljmp
movsl
shll
mov
mov
adc
inc
mov
sar
xor
out
insl
cwtl
dec
lret
popa
cwtl
sar
movsb
push
jmp
aad
aam
mov
xor
jae
subb
inc
pushf
xlat
cltd
movsl
xor
mov
pop
bound
xor
jmp
lret
lret
pop
and
jno
adc
lret
fistl
fldl2t
pop
repz
push
pop
stc
push
test
imul
fabs
add
hlt
adc
mov
out
xor
inc
sbb
or
pop
cmp
out
xchg
test
pop
loope
or
mov
sub
ss
iret
mov
clc
add
push
repnz
sti
lahf
and
or
fld
add
loopne
xchg
or
mov
jo
adc
adc
jne
ss
mov
les
ret
pushf
jmp
and
cmp
xchg
ljmp
out
adc
mov
sbb
ret
xor
clc
out
dec
ds
xchg
push
jnp,pn
aad
jecxz
fxch
out
out
dec
add
fcompl
test
lcall
xor
cmpsl
call
sbb
test
outsl
outsl
mov
mov
fucomi
dec
xor
fisttps
das
out
aad
mov
adc
xor
jle
shl
jp
outsb
and
mov
jl
in
cmp
jbe
push
jmp
sbb
pop
inc
out
pushf
outsl
lahf
repz
insl
xchg
and
sbbl
scas
cmp
add
jno
jg
sbb
pop
test
notb
pop
mov
je
or
inc
das
adc
jno
outsl
cmp
fucomip
xchg
adc
mov
push
inc
popa
shlb
loopne
out
insb
xchg
ret
sub
loopne
xchg
lcall
lahf
cld
cli
pop
ja
dec
mov
xchg
loopne
mov
xlat
stos
add
stc
fisubs
mov
dec
mov
jle
sbb
sub
add
pop
inc
fs
mov
mov
lea
insl
scas
jae
mul
cmp
sarb
dec
adc
mov
popf
pop
cmc
imul
ret
sbb
sub
xchg
call
or
es
sbb
add
inc
pop
test
addr16
ret
jmp
cs
repz
mov
repnz
sbb
arpl
mov
ss
pop
cmp
out
cwtl
cltd
mov
sbb
notl
xor
jecxz
push
pop
sahf
inc
xchg
pop
dec
jno
push
outsl
out
cli
mov
enter
pop
jg
out
jmp
movsb
pop
xor
cmp
clc
cmp
inc
nopl
mov
and
sbb
sti
xlat
inc
or
dec
cmpsl
add
jge
push
int3
jg
and
in
movsb
cmp
xchg
imul
xor
pop
mov
mov
leave
lcall
mov
aad
rorl
and
sbb
iret
mov
incb
cmp
ret
push
push
and
je
shll
in
cmpb
push
int3
das
cmpsb
adcl
and
inc
pop
lcall
jmp
xlat
out
inc
in
mov
das
xor
xchg
dec
shlb
jecxz
or
stc
lret
xchg
mov
adc
dec
adc
roll
pop
jp
dec
mov
movsb
and
sarl
jmp
push
call
push
mov
mov
pusha
shlb
stos
data16
cld
mov
sbb
out
sbb
lcall
xchg
dec
mov
sub
and
cmc
xchg
pushf
sbb
rorl
mov
jns
cmpsb
jno
cmp
push
or
jp
aas
aaa
imul
ss
adc
fadds
pop
mov
popf
fsts
sbb
es
les
test
rcrb
std
jbe
mov
idivb
jb
dec
dec
xlat
mov
xor
sbb
in
hlt
bound
push
mull
push
sub
jle
shl
test
repz
cmpsb
pop
cmp
add
addr16
push
imul
sbb
inc
xor
jnp
mov
or
sub
xlat
lods
mov
hlt
add
fildl
data16
xchg
push
sbb
xchg
jl
push
mov
loope
jb
cmp
push
inc
mov
adcl
std
cltd
fsubrp
mov
pop
dec
cli
jb
push
pop
sbb
addr16
adc
push
xchg
pop
jmp
icebp
and
or
shll
hlt
cli
jo
cmp
mov
jecxz
dec
add
pushf
insb
xchg
repz
cmc
sub
jl
setg
arpl
mov
dec
imul
aad
rcll
aaa
ret
inc
out
addr16
dec
ds
lret
jp
out
arpl
aad
inc
pop
pop
cld
jae
or
mulb
jmp
in
push
mov
pop
mov
shlb
test
mov
mov
mov
xchg
pop
add
and
cmpsl
es
cmpsl
daa
je
and
loop
inc
lret
add
jl
add
push
pop
in
mov
andl
test
pop
xlat
cmp
pop
aam
fisubrl
popa
mov
loope
mov
or
imul
sbb
pop
inc
cmpsb
rcll
in
inc
mov
push
adc
sub
mov
in
pushf
jl
sti
push
aad
mov
and
faddl
repz
shlb
leave
lret
sub
sarb
pop
xor
and
xchg
lods
je
pop
aaa
or
ss
inc
cwtl
or
push
jp
xor
pusha
and
pop
mov
pushf
or
adc
xor
adc
pop
jb
shrl
lahf
insb
andl
sbb
cmp
std
xor
inc
int3
cmp
sbb
icebp
adc
sub
and
enter
test
mov
sub
or
and
repnz
xchg
or
ss
jle
and
out
sbb
cmp
cwtl
sub
ret
push
cmp
mov
jmp
repnz
sbb
sub
loope
subb
aaa
ret
cmp
and
sub
fdivrs
nop
mov
and
mov
add
outsb
loope
mov
sub
and
sbb
lcall
adc
dec
shlb
iret
mov
dec
cmp
mov
aaa
jae
out
dec
mov
xchg
mov
repnz
mov
call
jns
daa
mov
mov
popf
xchg
jns
xchg
or
fcoms
and
add
sbb
fs
lock
addl
lods
push
out
lret
adc
push
insb
jecxz
bound
enter
jmp
mov
mov
jnp
inc
ret
push
add
xchg
xchg
stos
sub
mov
cmp
ret
repz
mov
sub
in
ljmp
arpl
lahf
pop
xor
fidivrs
in
xchg
leave
loop
sub
dec
or
mov
pop
in
xor
sub
negl
and
or
mulb
push
inc
dec
dec
clc
outsl
and
addr16
lret
std
aaa
pop
test
out
push
mov
inc
inc
test
jne
sbb
imul
lds
orl
loopne
nop
push
xor
add
push
daa
push
mov
adc
mov
test
ret
push
inc
call
sbb
shrl
jmp
inc
inc
sub
fiaddl
sbb
add
dec
jecxz
popa
das
push
or
int3
lret
nop
ja
mov
pop
pushf
psubusb
imul
jae
push
ljmp
loop
outsb
or
pop
mov
push
add
dec
cltd
sbb
and
ja
jb
add
adc
push
repnz
inc
pop
sub
sbb
inc
xor
lret
mov
lret
and
imul
sahf
sti
out
pushf
xor
fdivrl
mov
pushf
adc
push
or
sub
repnz
das
sub
loopne
fmull
add
adc
add
je
scas
adc
dec
mov
sbb
add
xchg
out
jo
fisubl
or
mov
outsl
insl
push
ja
pop
daa
enter
inc
push
leave
shlb
jge
pop
mov
addb
lock
imul
inc
fs
pushf
xor
mov
add
lods
popf
in
pop
mov
fisubrs
sub
icebp
imul
movsl
jl
outsb
scas
negl
hlt
mov
faddp
sbb
lods
sahf
stc
sbb
dec
or
xchg
addr16
in
pop
push
jg
and
lahf
mov
mov
add
test
sub
sbb
or
and
popa
or
or
lcall
mov
xor
dec
sub
adc
shrl
jmp
out
fcom
test
loopne
iret
mov
lahf
mov
lcall
test
mov
sbb
inc
sub
stos
dec
jne
xchg
pop
push
loope
mov
adc
dec
test
and
hlt
subb
xor
aaa
cmp
lret
or
lock
or
mov
sbb
mov
fiadds
mov
mov
fildll
ja
pop
scas
mov
push
mov
push
inc
jge
and
xchg
and
jbe
std
pop
sahf
lret
cmp
or
xor
fisttps
inc
xchg
imul
mov
mov
test
aas
dec
aaa
mov
movsb
fs
sbb
out
gs
repz
sub
mov
ret
mov
inc
push
push
push
fdivr
sbb
add
insb
int3
sbb
adcl
push
add
es
or
adc
inc
push
jg
ret
sbb
jle
movsl
test
shlb
xchg
fwait
and
sbb
sbb
adc
dec
mov
mov
add
sub
mov
push
cmp
or
dec
adc
mov
loope
stc
lock
sti
leave
iret
pop
into
fstl
test
xor
push
pop
sub
pop
and
xchg
ret
jle
pop
inc
jecxz
push
xor
incl
mov
leave
cmpl
mov
in
adc
pop
repz
addb
xchg
push
cmpb
std
cwtl
lret
stos
mov
xor
mov
aas
push
into
lcall
fsub
or
or
sub
ja
imul
ds
jmp
add
jg
movsb
cli
fcmovbe
or
push
divb
xchg
in
pushf
aam
lods
fsubl
lock
pop
dec
call
inc
mov
inc
pusha
or
in
movsb
je
ret
mov
sbb
rcll
cmc
push
dec
jnp
xchg
add
mov
dec
xchg
pop
data16
mov
or
ds
scas
fdivr
ret
mov
idiv
loope
cli
pop
inc
xor
outsl
adc
push
jg
sub
add
sub
data16
jmp
fildll
xor
and
cmp
or
xorb
push
mov
jp
and
call
jp
aad
loop
mov
out
sahf
sub
in
jl
add
add
out
mov
mov
sar
dec
xor
addl
mov
popf
insb
sub
cmp
mov
pop
jecxz
dec
and
xchg
out
and
out
xor
cltd
loope
shll
add
mov
push
adc
cli
and
adc
pop
out
push
iret
add
cmp
mov
mov
jbe
jp
inc
lret
sub
push
loop
mov
arpl
mov
in
pusha
pop
cmp
cld
cmc
fldt
aas
sti
cmp
xor
icebp
out
mov
sub
pop
jmp
aam
cmp
fimull
lods
jo
adc
loop
popf
push
dec
outsl
hlt
jb
repz
in
adc
inc
dec
in
inc
cltd
fsubs
fidivs
push
cwtl
in
pushf
adc
inc
out
insb
es
mov
sub
sbb
jl
mov
dec
gs
sbb
icebp
push
push
push
dec
outsl
enter
inc
popf
ds
inc
jle
cld
push
sarl
push
scas
pop
push
std
push
cli
pop
pop
sbb
and
sahf
lret
and
shrl
mov
fstpl
mov
push
dec
sub
xchg
pop
adc
mov
fcmove
stc
idivb
rolb
push
jg
jmp
push
ffreep
xor
rcl
icebp
pusha
xor
mov
fildl
mov
push
or
outsl
or
outsl
jg
dec
out
jmp
sti
jecxz
inc
xor
mov
lret
xchg
push
call
cmp
rcll
arpl
cmp
sahf
jle
push
icebp
push
mov
inc
mov
test
fsts
mov
push
stc
ss
fs
ret
push
iret
push
ljmp
sbb
orb
cld
jp
insl
int3
xchg
mov
stos
and
inc
sub
dec
inc
pop
mov
push
out
aaa
scas
imul
cmp
sbb
mov
mov
xor
xchg
adc
lretw
xor
aad
mov
cltd
mov
push
fiadds
pop
cmp
xor
add
enter
push
mov
push
ds
jmp
rcl
sub
cmp
lods
in
iret
outsb
xor
fsubrl
mov
pop
std
xorl
mov
subb
dec
jnp
dec
dec
mov
sbb
inc
jbe
test
sarb
inc
mov
sbb
mov
aaa
sbb
cmpsb
jecxz
inc
dec
outsl
cmp
cmp
loop
push
xchg
push
jl
or
test
adc
add
and
jno
jg
pop
sar
enter
mov
enter
sbb
pop
sub
sbb
and
inc
or
cmpsl
data16
sub
mov
xor
adc
cmpsl
adc
push
jae
push
cmp
add
mov
repz
test
jle
shlb
inc
leave
mov
xchg
jns
insl
dec
cwtl
rcrl
cmp
pop
popa
cmp
adc
dec
call
jmp
push
dec
jl
jo
aad
jnp
lcallw
jecxz
dec
test
in
jnp
pop
jne
mov
std
mov
pusha
xlat
gs
add
push
mov
xor
inc
mov
add
pop
loop
push
outsb
lcall
sahf
jle
hlt
inc
std
mov
into
mov
or
test
add
in
imul
inc
mov
pop
and
adc
xchg
push
push
cmpsl
movsb
orb
rolb
add
jbe
test
je
mov
cmpsb
fstpt
cli
mov
jl
movsl
xchg
adc
int3
cmpsb
adc
cmp
sub
movsl
sub
mov
stos
aaa
adc
cltd
mov
and
cmp
inc
jmp
lret
sbb
adc
inc
inc
cmp
stos
pop
cmp
js
sbb
or
and
dec
or
dec
ret
psubsb
les
sbb
mov
cmpsb
mov
popl
cmp
aaa
sbb
jmp
in
adc
jge
cmpsb
mov
sbb
dec
enter
cli
push
xorb
fadds
call
mov
cmp
xchg
adc
xor
outsl
lods
dec
xor
and
lret
gs
cmp
lods
shlb
out
adc
mov
cmp
rcrl
fsubp
and
jle
mov
add
arpl
pop
inc
pop
ret
inc
movsl
sti
cwtl
loopne
or
adc
mov
inc
dec
jge
testl
cli
int
mov
roll
test
daa
lretw
stos
mov
sbb
movsl
outsb
out
loop
clc
call
add
sbb
pop
jmpw
and
mov
jp
jecxz
adc
mov
lods
rorb
sub
and
out
xlat
loop
movsb
jo
sti
les
pop
icebp
pop
sbb
icebp
sub
rclb
icebp
dec
aam
jae
test
cmp
jge
pop
lods
xlat
std
xchg
xor
mov
fimuls
sub
push
int3
jge
icebp
mov
loope
aaa
roll
xchg
xor
out
fdivrs
sbb
mov
sub
lcall
movsl
into
arpl
sub
mov
sbb
and
icebp
dec
dec
dec
ret
sub
insb
mov
mov
fisttps
int3
movsb
arpl
jae
jo
dec
sahf
and
fiaddl
and
out
das
xchg
sub
adcb
sbb
jg
jmp
fbld
push
pop
add
hlt
and
mov
inc
pushf
jle
or
icebp
testl
dec
hlt
hlt
mov
xor
mov
pop
and
cmp
jp
aas
rorl
xchg
das
push
add
pushf
popa
int
and
mov
mov
dec
and
rorl
push
add
enter
lods
mov
sbb
out
jp
movsl
pop
mov
into
cli
int
cmc
shrb
inc
fdivl
mov
inc
aaa
pop
mov
mov
test
xchg
pop
pop
jge
xor
test
mov
add
adcb
fcoms
cs
mov
insb
adc
sbb
ret
mov
jno
into
mov
pop
mov
mov
cmp
push
xor
in
mov
sub
mov
cmp
xchg
lods
mov
into
outsb
stos
xchg
cmc
push
pop
cli
mov
inc
sbb
jns
jb
add
lret
mov
mov
in
lahf
aas
jge
push
divl
xchg
inc
pop
mov
aad
fdiv
sahf
mov
dec
fildl
push
into
inc
testl
inc
add
cmp
jno
sti
push
mov
xchg
pop
das
xchg
add
sbb
js
mov
lahf
mov
cs
fidivs
adc
enter
mov
mov
mov
or
add
pop
cmp
xchg
mov
insl
adc
sbb
or
adc
jmp
mov
in
cmp
jnp
pop
das
jmp
in
adcl
cld
scas
aam
push
mov
fsub
lea
mov
mov
and
fwait
in
add
ja
cltd
or
std
lds
call
xor
mov
lahf
xor
mov
cmp
lds
bound
push
jecxz
into
les
gs
and
sbb
mov
xor
out
sub
hlt
xchg
xchg
mov
push
dec
or
push
fiadds
lahf
sub
loopne
mov
pushf
cmp
jne
ja
cs
dec
test
cmp
cmpsb
pop
push
push
cmp
mov
repnz
xor
mov
and
push
pushl
adc
mov
insl
negl
xchg
in
arpl
cltd
in
nopl
rorl
adc
mov
imul
push
xor
xor
push
add
fsubp
iret
and
jae
stos
add
loopne
pop
pop
stc
cmp
push
mov
mov
mov
shll
sbb
aad
out
mov
sub
jmp
push
push
shll
xor
mov
xorl
mov
jns
lret
xlat
or
test
pop
mov
cli
inc
pop
inc
inc
insb
mov
in
xchg
push
push
jbe
xchg
lcall
stos
dec
loopne
jo
xchg
add
add
sbb
insl
loop
imul
pop
outsl
fcomip
lret
or
or
std
dec
outsl
cmp
inc
jp
je
std
mov
scas
adc
sub
mov
cmp
sbb
xor
cmpsl
pop
jo
ljmp
test
cwtl
loope
mov
mov
into
jmp
push
mov
pop
loop
popf
pop
lret
in
xchg
lods
repz
mov
lret
data16
shr
lock
xor
jmp
frstor
push
jmp
mov
shll
ret
and
xlat
call
pusha
imul
cld
xor
mov
push
bound
pop
or
fstps
call
sub
mov
test
xchg
mov
dec
jnp
out
repz
jge
mov
pop
cmc
cs
cwtl
out
add
pop
iret
test
xchg
int
pop
notb
scas
enter
pop
les
xchg
mov
jae
mov
inc
cmp
addl
jecxz
xchg
testl
pop
nop
cmpsb
mov
jo
pop
push
icebp
jno
adc
daa
sti
jg
jae
pushl
xchg
ds
mov
mov
xchg
mov
ja
cmc
out
sub
pushf
xchg
mov
mov
pop
add
adc
fwait
test
out
jno
ljmp
inc
std
and
sahf
inc
jae
mov
pusha
jp
xor
test
movsb
icebp
arpl
add
int3
fcmovu
outsb
mov
adc
shlb
mov
xchg
shlb
mov
sub
nop
in
add
mov
push
stos
add
aad
adc
int3
push
in
sub
jg
int3
push
fisubl
and
daa
jg
inc
add
in
fs
rcrb
push
fimuls
pop
shll
pop
or
fwait
lds
or
mov
repz
outsl
lds
mov
jge
shll
pop
loop
movsb
jae
and
inc
xor
cmp
test
cmp
fnstenv
sub
pop
fistps
mov
push
jnp
pop
mov
mov
hlt
dec
inc
es
jmp
fisubrl
das
decb
fwait
dec
je
mov
push
outsl
add
jnp
pushf
mov
dec
cwtl
popa
jg
xor
push
jg
movsl
jecxz
sbb
divl
inc
xor
les
push
pop
push
ss
das
cmpsb
pop
jmp
rolb
mov
and
outsb
cmp
mov
ja
add
add
mov
add
test
cmpsb
sbb
test
jo
popa
and
pushl
push
aas
lahf
lret
in
mov
jnp
mov
out
das
or
sbb
cmpl
push
push
jg
inc
sbb
dec
movsl
lret
push
stc
push
enter
jg
jecxz
les
push
jg
push
xchg
mov
repnz
test
andb
cltd
out
scas
hlt
adcl
ja
call
insb
sbb
push
mov
inc
jo
mov
mov
sbb
sub
das
mov
and
loopne
lret
test
mov
add
add
mov
ja
aaa
and
cli
cmp
push
fbstp
xlat
pop
push
sub
or
fcmovb
sub
into
lds
movsl
dec
add
in
ja
mov
xor
xchg
xchg
sub
or
push
or
aas
pop
lock
insb
dec
pop
xor
mov
test
mov
jge
pusha
call
jg
sbb
pop
adc
ja
enter
pop
mov
gs
loop
mov
stc
sahf
mov
sub
ja
lock
lret
and
hlt
and
mov
rcrl
or
arpl
mov
fildl
mov
jmp
bound
cmpsl
sti
out
sbb
fldcw
adc
jge
roll
leave
inc
or
call
test
jl
and
mov
or
cmpsl
xor
lea
pusha
pop
ret
mov
arpl
sbb
cli
dec
mov
lock
xchg
pop
xchg
jg
xchg
push
pop
fisttpll
sub
pushf
outsl
or
add
pop
add
jecxz
in
and
sub
and
enter
fs
mov
adc
xchg
add
out
xlat
ljmp
divb
ret
outsb
push
jle
rcrb
lcall
push
cld
scas
ficoml
jecxz
and
pop
or
pop
fildl
jae
sti
jmp
dec
mov
pushl
data16
push
pop
add
pop
sub
stos
xchg
jl
int3
mov
orl
mov
imul
test
push
notb
add
jg
push
cmp
mov
inc
cmp
mov
int
mov
push
je
inc
std
mov
mov
ret
xchg
arpl
orl
inc
and
orb
sub
loope
ja
icebp
push
push
mov
out
ljmp
iret
aad
adc
mov
push
cmpsb
scas
out
pop
mov
sub
xchg
adc
adc
push
ljmp
mov
les
jo
addr16
fistl
cmp
loopne
cli
or
aam
push
xchg
xor
jne
push
add
jne
rclb
pusha
push
dec
sub
mov
inc
jnp
inc
cltd
les
xchg
xor
fnstsw
or
andb
pop
sub
xor
popf
push
int
dec
jle
mov
pop
idivb
push
mov
mov
ret
inc
lahf
addr16
mov
push
insl
xchg
and
jae
movsl
push
pop
pop
arpl
nop
xchg
rol
andl
loop
int3
push
std
mov
sub
adc
lcall
adc
pop
mov
ljmp
sbb
icebp
popa
sbb
sbb
pop
mov
and
mov
iret
inc
imulb
std
andl
sbb
lea
xor
jne
lds
mov
inc
jb,pt
jp
xor
xchg
scas
jno
hlt
inc
or
jl
lahf
xor
gs
adc
clc
in
or
push
nop
sbb
adc
mov
jg
xlat
test
int
leave
pop
dec
xor
jmp
inc
in
dec
repnz
pop
popf
icebp
mov
jne
pop
xchg
loope
jns
nop
mov
call
adc
dec
or
or
in
movsb
fstps
lretw
mov
into
jae
sub
pop
mov
push
pusha
jecxz
cmpsb
lea
adc
xor
xchg
std
gs
es
jbe
push
pop
hlt
jge
mov
popf
cmp
inc
mov
sbb
jne
add
xchg
aas
movsl
xchg
jle
xchg
test
cltd
push
xchg
xchg
sbb
lret
movsb
or
mov
mov
clc
and
jb
jecxz
cmpl
mov
dec
dec
aaa
inc
shll
call
sbb
xchg
int3
cmp
mov
daa
fnstenv
xchg
sub
inc
btc
scas
mov
in
mov
pop
cltd
xor
mov
mov
xor
sbbl
push
or
or
lret
xchg
pop
xor
fiadds
inc
repz
icebp
js
xchg
notl
mov
xchg
outsb
or
out
jb
push
xchg
subb
jmp
shl
mov
dec
xlat
out
xchg
jl
and
mov
rcl
loop
outsb
mov
stos
xlat
insl
xor
push
aam
scas
es
sbb
cmp
shll
dec
push
mov
dec
lds
jne
sub
bound
pop
jecxz
sbb
loope
push
add
lret
rol
mov
cltd
pop
in
inc
testb
cld
dec
pushf
rcll
repz
inc
mov
icebp
icebp
sti
test
jp
xchg
and
mov
mov
in
add
push
lods
dec
daa
out
dec
push
ljmp
bound
nop
dec
fs
sub
fstl
jl
popa
fsub
je
adc
lret
mov
testb
lret
imul
jp
out
sbb
jmp
add
mov
shll
out
push
cmc
pushf
mov
daa
sbb
adc
aam
fistl
cmpsl
mov
test
pop
mov
xchg
cmc
push
es
je
imul
je
imul
stos
adc
pop
xor
sub
jle
int
xor
add
push
sarl
and
lds
mov
bound
sub
leave
push
sti
pop
push
pushf
pop
push
jecxz
xchg
cmp
imul
test
pushl
jge
jge
and
and
push
inc
add
or
or
sub
enter
xchg
pop
scas
mov
in
pop
loope
rolb
enter
mov
lods
add
pop
fwait
inc
cwtl
and
lods
iret
popf
into
add
mov
jmp
fildl
aad
push
in
rorl
inc
or
enter
push
insl
ret
inc
scas
in
int3
test
clc
ror
xlat
sti
push
push
andb
jp
cmp
insl
xor
fiaddl
cltd
push
divl
adc
scas
call
add
ss
and
sbb
fsubs
cmp
in
mov
pmulhw
sub
push
clc
mov
xchg
sub
xor
sub
lcall
dec
push
negl
out
jbe
xchg
xlat
sub
push
out
adc
dec
jg
push
stc
daa
fs
jmp
xchg
push
lcall
aam
mov
dec
inc
lea
data16
jp
insl
mov
xchg
jbe
test
add
gs
dec
arpl
andb
sub
jmp
or
mov
test
mov
shrl
pop
xchg
mov
add
sbb
cmp
cmp
std
sti
cmp
pop
loope
ja
ds
cmp
popa
daa
sbb
jno
ret
in
cwtl
lahf
or
jp
or
aaa
jae
andl
arpl
jle
stos
inc
rclb
inc
sbb
outsl
add
dec
xor
push
adc
adc
sbb
xor
jmp
daa
les
insb
loop
jae
es
sti
sbb
sub
out
sub
sbb
cmpb
sbb
and
in
mov
clc
mov
mov
scas
push
ja
dec
pop
mov
push
xor
fcoml
push
xchg
repz
sbb
subl
ds
or
scas
in
push
ret
loopne
cmc
in
repnz
add
jmp
cltd
ljmp
fwait
sbb
push
icebp
add
and
add
fwait
stc
in
pop
call
shlb
std
fdivl
adc
ret
into
dec
xor
ret
test
aaa
cs
inc
out
inc
pop
xchg
jne
popa
add
pop
xchg
out
mov
fiaddl
jmp
sar
loop
notb
jae
mov
aas
testl
cli
inc
daa
les
pop
jmp
cmp
addb
in
mov
arpl
adc
mov
lcall
aas
int3
pushf
cmp
jmp
lahf
movsl
or
pusha
mov
pop
lret
inc
lcall
and
insl
lods
repnz
inc
rcrl
xorl
mov
or
lret
pop
jg
icebp
push
movb
jecxz
into
cmc
iret
add
movsl
mov
orl
stc
mov
lret
in
shrl
pop
shll
lcall
rcr
xor
cs
fldt
movsl
mov
fs
mov
fs
ret
adc
shl
or
cltd
cli
xchg
mov
jb
sub
xor
fstpt
push
sub
mov
les
pushf
cli
push
and
shrb
xchg
mov
jno
mov
push
cltd
lods
mov
inc
pop
push
fisttpll
pop
imul
clc
pop
cmpsl
loop
nop
aaa
mov
adc
lock
and
scas
push
sub
inc
sahf
enter
mov
aam
int3
mov
xor
xchg
mov
mov
sub
aad
imul
clc
subl
lds
mov
push
jb
xchg
int3
cmp
mov
negl
adc
inc
imul
mov
xchg
add
or
adc
adcl
mulb
mov
xchg
dec
pop
cli
sub
cltd
dec
mov
fdivrs
sub
push
add
push
push
xchg
sbb
sub
jmp
cltd
jns
daa
jo
callw
mov
jge
mov
push
inc
or
sbb
popa
jg
gs
outsl
clc
out
call
mov
mov
mov
icebp
ja
xchg
mov
xor
lods
ljmp
jns
sbb
mov
cmp
sahf
shl
mov
push
lea
ficoml
movsb
xor
pop
adc
push
lods
fsubrs
shlb
cmpsb
push
sub
out
cmp
rclb
mov
fdivs
pslld
orb
scas
cmp
addr16
sbb
shlb
test
andb
mov
pop
mov
mov
in
cmc
lea
fimuls
sub
xchg
mov
cmp
pop
ja
and
js
addr16
arpl
sub
fcompl
mov
xor
int
loop
pop
scas
mov
inc
imul
out
cld
sub
test
sub
insl
in
push
cmp
mov
mov
movsb
fs
mov
jb
inc
lret
rorb
bound
xchg
cs
and
push
push
pop
pop
push
fldl
dec
sub
xchg
cmp
add
mov
xor
add
pop
jg
pop
call
lcall
popa
cwtl
pop
push
or
sbb
sti
mov
rcll
lock
dec
aaa
xor
out
push
xor
in
xchg
sbb
sub
mov
sbb
ret
lret
xchg
mov
pop
cmp
pop
in
adc
mov
xor
inc
push
dec
cmp
push
sbb
push
add
cmpb
adc
into
lret
push
xchg
daa
sbb
sti
cmp
je
add
sub
xchg
shlb
mov
dec
sbb
pusha
in
push
jg
push
lahf
jno
cmp
aas
xorl
push
popf
es
push
cmpsl
into
push
int
lods
xchg
xor
sti
notb
xor
mov
ljmp
inc
scas
add
add
adcl
scas
stos
in
cmpsb
test
aaa
gs
add
repnz
test
sbb
loopne
push
lods
movsl
cmp
adc
mov
cmc
insb
daa
jnp
xchg
in
dec
or
aad
test
mov
xchg
cs
sbb
test
mov
notb
dec
arpl
clc
add
pop
jmp
mov
mov
xchg
imul
mov
ss
xchg
mov
scas
lea
std
mull
int3
subl
xor
pushf
data16
add
aad
lods
pop
iret
movsb
adcl
adc
neg
xor
shlb
pop
mov
adc
roll
sub
ljmp
loop
scas
jne
mov
test
jge
sub
xchg
and
mov
cwtl
sub
imulb
cs
adc
cmpsl
sub
clc
mov
mov
mov
clc
jge
xchg
outsl
sub
push
jno
cwtl
lcall
push
and
add
fcoml
mov
pop
dec
ret
daa
cmp
lea
jg
xchg
sbb
lock
gs
mov
mov
and
xchg
cmp
dec
sti
sbb
not
inc
and
add
lret
jp
ds
gs
scas
insb
stos
or
popa
loop
ljmp
xchg
test
xor
fisttpl
cmc
adc
stc
outsb
mov
push
das
cmp
xor
mov
sbb
cld
push
xorl
ret
icebp
jecxz
pop
xchg
push
mov
sub
jae
fwait
pop
test
pop
lock
push
sbb
bound
addl
cmpsl
xchg
inc
imul
pop
cs
in
das
out
mov
mov
and
pushf
adc
rorl
jb
inc
sub
js
iret
icebp
aam
jb
call
movsl
sbb
ss
jne
pop
pop
sub
or
fdivl
cmpb
test
icebp
insb
aad
push
sarb
pushf
mov
shll
or
pop
jne
push
xchg
inc
xchg
aad
or
lcall
inc
xchg
ficoml
fcmovu
dec
rcpps
push
inc
movsb
mov
cmp
loopne
or
adc
cld
inc
jns
cltd
std
ret
mov
fildl
push
fisubrs
xor
test
push
xchg
sub
gs
xlat
push
lock
lret
mov
push
or
sub
rol
mov
hlt
enter
push
icebp
int
pop
add
add
les
cltd
adcb
into
push
sbb
test
fidivrs
sub
cmp
sbb
xchg
loop
xchg
dec
cmp
sti
cmc
pop
jbe
and
mov
lahf
xor
les
repz
mov
mov
js
pop
imul
sub
and
cmp
popa
popf
pushf
out
loop
xchg
loope
push
jmp
pop
in
and
mov
jmp
push
push
mov
popf
push
testl
insl
mov
push
call
sbb
adc
imul
cli
in
shll
push
dec
xorl
mov
push
outsl
hlt
jno
loope
rol
sub
pusha
add
mov
loope
mov
push
xchg
repnz
jecxz
pusha
or
xor
test
stos
mov
sarb
add
adc
mov
sbb
and
in
cmc
cmpb
repnz
aas
arpl
cmpsb
test
pop
inc
mov
les
xorb
xor
dec
ret
xor
cwtl
mov
das
mov
push
push
mov
push
cmpsl
in
call
push
add
push
push
movsb
jmp
bound
enter
inc
sahf
mov
pusha
pop
icebp
or
loopne
stc
pop
xor
sbb
rclb
std
movsb
fistpl
enter
mov
or
push
fsub
insb
pushf
sbb
sbb
insl
lods
mov
jg
jb
add
jo
xlat
lret
scas
sub
jns
dec
xchg
popa
notl
cmc
fisubs
std
pshufw
fnstenv
pop
shr
mov
inc
xor
into
call
fdivrl
mov
pop
mov
sbb
pop
repz
test
add
cmpsl
sbb
mov
xor
xchg
bound
mov
sbb
repz
jmp
ds
in
or
out
fidivrs
fstps
test
rol
sub
xor
shll
xlat
mulb
cmpsl
gs
sbb
xor
sub
movsl
int
xor
pop
aad
int
dec
mov
dec
nop
imul
lea
sbb
mov
stc
and
jecxz
mov
mov
push
or
add
out
rcll
mov
add
pop
fidivrl
in
inc
fcomip
popa
push
mov
cld
out
roll
mov
dec
add
ds
fs
sbb
cmp
mov
daa
ret
pop
notb
aam
cli
fstps
loopne
jo
test
cs
and
jl
mov
pop
inc
aaa
cmp
push
fists
mov
dec
xor
inc
inc
inc
jp
pop
cmpb
xchg
cli
cmp
cmpl
push
out
cwtl
lods
xchg
push
and
dec
pop
xchg
aaa
out
negl
adc
push
xor
addr16
aas
push
test
lods
xor
lahf
and
add
jno
in
sahf
push
dec
jo
sub
imul
js
lds
xor
add
int
adc
xchg
fnstenv
pop
in
cwtl
jbe
xlat
or
jmp
out
out
iret
iret
jle
std
xlat
clc
ret
ror
xlat
loop
test
sub
jns
cmpsl
cmpsl
dec
out
adc
lcall
andb
stos
sbb
into
sub
popf
jp
out
notb
mov
dec
imul
dec
popa
xlat
stos
inc
or
outsb
mov
das
xor
scas
mov
xchg
mov
fistpll
inc
fists
jl
xchg
sbb
xor
mov
lds
xlat
mov
pop
mov
jge
pop
into
sbb
or
clc
out
addr16
jbe
js
cmp
inc
pop
lods
jmp
cmp
fs
cltd
and
mov
lret
stos
push
mulb
and
sahf
dec
les
xchg
cmp
inc
pop
xor
cltd
fidivl
test
in
shr
pop
mov
enter
fisttps
std
call
dec
xlat
mov
push
lock
fadds
int
outsb
add
mov
push
lds
mov
mov
into
jb
dec
pop
pop
xor
xchg
lcall
sub
inc
test
jnp
and
gs
lods
in
in
mov
aaa
jne
inc
add
dec
sub
mov
or
and
sbb
dec
ds
dec
je
les
mov
cmp
dec
lods
insl
push
les
mov
mov
jmp
mov
sub
fimuls
mov
pop
dec
rorb
jo,pt
fs
icebp
mov
dec
clc
clc
aas
stos
dec
jge
cmp
test
popf
cwtl
test
aam
sbb
jbe
inc
sub
leave
dec
inc
jp
xchg
rcrb
push
lcall
cmp
dec
pop
inc
xchg
dec
test
or
lret
out
pop
orl
push
ficoms
mov
int
mov
adc
inc
shlb
mov
inc
mov
jge
adc
mov
and
lahf
stos
pop
dec
das
inc
mov
ror
jnp
neg
aaa
test
mov
xor
adc
imul
lods
inc
pop
lret
loopne
gs
ss
or
test
dec
lahf
hlt
sub
push
and
xchg
add
shll
inc
cmc
fldenv
leave
mov
xchg
stos
scas
aaa
lods
imul
jl
mov
sahf
shrb
xchg
loopne
cmp
xor
xlat
aam
lahf
or
ja
test
stos
xchg
mov
cmp
in
mov
inc
out
mov
loope
mov
rorb
insl
pop
es
test
xor
add
mov
mov
iret
jge
sbb
int3
ss
sub
cmp
adc
cmp
push
jo
inc
inc
jge
test
std
pop
scas
mov
scas
cmc
mov
lea
push
mov
mov
and
repz
sbb
daa
pop
stc
sbb
jecxz
mov
fcmovbe
xchg
imul
ret
lock
dec
rolb
sbb
or
jecxz
dec
popf
shl
or
push
fstpl
cs
xrelease
insb
pushf
rolb
or
lcall
jp
jp
inc
jg
push
jecxz
jns
push
dec
ss
mov
jp
jmp
xchg
lea
cltd
std
aad
xchg
jl
in
cmp
pop
dec
in
jnp
xchg
adcb
push
xlat
push
sti
arpl
cmp
push
rcr
test
out
test
lock
or
iret
mov
fisubl
add
test
sbb
jecxz
comiss
sub
pop
nop
popa
test
imul
jbe
shlb
add
loop
or
push
pop
inc
or
dec
add
add
imul
add
lret
hlt
mov
jne
xor
mov
sahf
test
jmp
hlt
scas
adc
cld
mov
mov
enter
test
mov
test
pop
rol
test
xchg
sbb
pop
inc
mov
or
jno
push
inc
ss
mov
push
adcl
cmp
push
out
and
adc
sub
push
mov
aas
adc
leave
outsl
scas
repz
lods
push
pusha
cs
and
subl
cmpsl
cmp
xor
push
dec
pop
mov
sub
mov
syscall
ret
int3
es
in
xchg
ret
inc
push
mov
cmp
movsl
aaa
pusha
mov
sbb
cmp
jmp
outsb
mov
je
inc
or
push
jno
jb
decl
cmp
adc
dec
adc
dec
xor
mov
lret
loopne
stos
lret
loopne
fisttpl
jecxz
add
int
sbb
sbbl
push
test
push
std
rorb
out
xor
fwait
outsb
xchg
cmp
pop
movsb
pop
stc
fstpt
jno
fs
sub
xorb
out
mov
xor
rolb
movsl
popf
push
roll
mov
cmp
aaa
pop
pushf
xchg
pop
and
mov
int3
push
jae
lds
sub
jb
mov
and
sub
dec
xchg
inc
cmp
sbb
addr16
stos
call
aad
loopne
fadds
inc
push
fstps
insl
pop
or
in
fdivrl
fists
mov
loopne
mov
cltd
inc
mov
es
push
xor
orb
lahf
add
jnp
xlat
xchg
cs
xchg
mov
nop
xchg
fdivrp
outsl
cmpsl
out
orb
sti
cwtl
jl
mov
test
cmpsl
test
and
pop
lret
daa
mov
fcmovne
shlb
loop
mov
mov
loopne
out
sbb
sub
dec
mov
stos
xchg
stc
cs
mov
loope
jae
mov
mov
or
das
jmp
fnstenv
or
mov
sti
xor
or
pop
cmp
out
ja
and
iret
in
cmp
lret
fadds
xchg
push
aaa
push
mov
push
vmwrite
or
pusha
mov
shl
negb
or
cmovl
adc
mov
das
push
xchg
add
fimull
cmp
test
in
int3
stos
jle
enter
ljmp
fsubrs
lods
sbbl
add
jmp
pop
sbb
inc
pusha
sbbb
dec
add
cmc
pop
mov
add
bound
mov
call
mov
out
push
lods
mov
and
pusha
dec
sbb
out
mov
cld
addl
iret
jbe
push
dec
or
leave
xchg
mov
rorl
stos
xchg
lret
test
jl
inc
out
jle
aam
data16
cmp
lcall
lods
movsb
cmp
mov
pop
arpl
cmc
pop
xchg
pop
adc
lret
inc
je
stos
mov
iret
jl
movsb
mov
fdivl
add
mov
loopne
fimuls
sarl
sbb
mov
adc
xor
adc
pop
cld
jecxz
jne
and
test
push
fnstsw
mov
lds
nop
fidivrs
test
push
cmp
push
rcr
popa
and
xor
sbb
pusha
out
inc
inc
cmc
xor
or
imul
pop
inc
js
js
scas
adc
xor
mov
ja
jb
add
in
cmp
and
add
dec
je
popf
popf
and
movd
add
mov
lea
fbld
lahf
in
cwtl
pop
pop
push
dec
lahf
or
mov
cmp
ljmp
xchg
sub
xor
cmpsl
sbb
jne
rclb
cmp
jbe
lret
bound
cmp
sbb
stc
jno
mov
push
or
shufps
jne
jge
jnp
lods
xchg
sbb
ja
loope
mov
lcall
ret
push
sbb
jb
jle
gs
pushf
call
shll
cmp
stos
fists
insb
xchg
loopne
cmc
inc
js
inc
movsb
push
jne
stc
xlat
jne
es
adc
and
testl
adcb
dec
fwait
cmpsb
sti
pusha
fsubr
fcompl
icebp
fidivl
mov
int3
in
jecxz
jp
push
cmp
dec
outsb
cmpsb
cmp
or
fdiv
incb
ss
std
or
mov
inc
ds
int3
ds
mov
lock
cmp
mov
shll
fs
xchg
sti
sub
jp
fs
stos
dec
ret
leave
pusha
lods
push
data16
inc
pop
dec
pushf
inc
loopne
or
test
daa
in
les
out
arpl
fs
xchg
int
inc
cli
gs
and
cmc
adc
mov
scas
xor
addr16
shl
cld
xor
xchg
out
pushf
inc
or
mov
loopne
lods
stos
and
or
mov
xor
lahf
cmpl
push
ds
push
mov
and
xor
jge
pop
add
fadd
stos
jno
cmp
push
fwait
rcrb
push
cmp
xor
mov
mov
cmp
xor
out
loop
imul
out
lahf
mov
pushf
lods
dec
ja
int
dec
xor
jle
stc
fmuls
inc
negb
into
pusha
and
pop
cmc
ficoms
and
in
cmpsb
pop
mov
clc
xor
pop
mov
inc
nop
push
mov
clc
pop
cli
mov
fnsave
repz
xchg
into
pop
sbb
dec
fstpl
adc
mov
aaa
inc
pop
movsb
sub
rclb
jge
adc
add
cli
test
stos
adc
cwtl
lea
and
add
add
mov
xor
fidivrs
and
daa
pushl
cs
adc
add
xchg
loope
mov
and
test
adc
icebp
stc
dec
fs
jmp
ja
or
add
iret
mov
outsb
mov
cmpsl
in
pop
loopne
ljmp
stos
and
adc
jp
cwtl
aad
xchg
cli
fistps
mov
pop
inc
xchg
rorl
rorl
adc
cli
pop
mov
enter
or
pop
add
mov
pusha
cmp
inc
pop
cltd
daa
mov
pop
rcr
jp
std
mov
addr16
cld
add
jo
lds
test
adc
fdivs
adc
pop
push
push
mov
cmpsl
cs
inc
xchg
int3
xchg
and
in
sarb
stc
sti
in
xchg
std
and
cmp
adcb
jnp
fsubrs
cmc
mov
xchg
mov
jo
jns
movl
xchg
inc
jp
sbb
xchg
pop
pushf
cmc
lahf
xlat
jns
push
call
in
add
ss
fnstcw
clc
dec
inc
mov
mov
ret
mov
cmp
outsl
and
pop
std
scas
cmp
fmull
xor
pop
and
lcall
pop
pop
sahf
nop
ficompl
mov
cli
ja
out
negl
sbb
add
imul
adc
pop
sbb
mov
xor
nop
cmp
push
inc
fdivrl
test
fistl
jl
out
shlb
leave
into
loope
adc
mov
mov
stos
paddq
ljmp
inc
rcrb
arpl
cmp
cmp
pop
jmp
neg
push
add
cwtl
push
xchg
test
dec
or
cmpsb
jmp
push
shrl
or
inc
pop
shrb
mov
das
push
sarb
fidivrs
pop
adc
sarl
push
sbb
add
rolb
inc
inc
fdivs
dec
mov
jmp
fstpl
lock
pop
and
fisttpl
jae
mov
inc
inc
dec
push
test
ja
pop
xchg
or
dec
daa
add
lods
push
in
flds
sub
cmpsb
mov
stos
cli
mov
imul
cmp
lods
mov
xchg
fcomps
lret
out
add
push
mov
pushf
adc
inc
dec
lahf
repnz
call
sub
aas
test
inc
mov
pop
push
fcompl
insl
cld
mov
lock
out
shlb
nop
pop
xchg
pop
lcall
ss
cmp
add
inc
dec
subl
mov
repz
jmp
ret
test
shlb
fmuls
aam
mov
mov
adc
in
xchg
dec
jle
jp
sub
inc
pop
mov
mov
mov
mov
rep
outsl
inc
in
inc
subb
mov
sbb
sub
mov
insb
pop
jb
icebp
mul
nop
out
addb
xchg
inc
push
add
push
popf
push
ret
sbb
lods
roll
xchg
mov
push
lret
jp
xor
cmp
xchg
sub
mov
fucom
mov
in
insb
mov
sti
add
sti
push
sbb
push
hlt
cwtl
das
rcrl
in
xchg
ljmp
pop
sub
jbe
nop
push
sub
test
adc
cld
gs
js
add
movsb
ror
adc
stos
inc
movsb
sbb
clc
cmpsb
aad
inc
scas
mov
dec
in
fld
push
mov
push
ljmp
stos
xchg
mov
scas
fs
mov
jge
mov
lods
ss
lcall
xor
insb
mov
std
pusha
pop
jno
fistl
jg
mov
xor
js
xor
mov
enter
and
aam
sbb
cmp
dec
mov
push
cmc
aad
pop
imul
sub
sbb
xchg
daa
pop
fisubrs
into
jno
add
insb
or
push
xor
test
mov
js
out
shl
adc
in
xor
popa
xor
arpl
sbb
push
loop
add
xlat
or
sti
sub
jmp
sbb
lahf
stc
addr16
outsl
rcll
popf
and
jg
loop
mov
and
xchg
inc
aas
daa
dec
movsl
pop
inc
int
movsb
aad
lahf
xor
ret
sbb
jo
dec
cmp
rcrb
lahf
mov
xchg
les
pop
cltd
das
xchg
flds
incl
mov
sub
addr16
mov
test
pusha
testb
shrl
push
shrb
mov
out
sbb
push
push
movsb
iret
jne
sar
inc
or
test
sbb
mov
adc
insb
shl
loopne
repz
sbb
push
jnp
jo
shll
mov
or
sbb
ret
pop
push
pop
or
in
leave
ljmp
cmp
sub
inc
cmpsb
imul
enter
test
xchg
add
add
imul
xchg
mov
push
mov
sub
cltd
cmpsl
fs
dec
mov
and
ret
cwtl
out
dec
addr16
push
cmpb
jno
int3
aad
insb
lret
push
sti
xor
movsb
cld
xorb
rol
mov
stc
or
enter
fimuls
and
adc
into
inc
or
shll
daa
jecxz
out
lret
sarb
sbb
inc
add
jle
mov
mov
push
inc
push
push
pop
push
xchg
jge
inc
into
in
gs
add
std
xchg
xchg
imul
sbb
cmp
and
popf
xchg
aam
orb
lock
iret
inc
dec
insl
cltd
or
cwtl
cmp
inc
lret
mov
mov
mov
pop
shll
rcrb
testl
loope
jo
out
lea
mov
pushf
fwait
and
nop
sbb
and
mov
cmp
cmp
dec
push
push
xor
inc
aaa
mov
pop
jne
xchg
jne
jg
cwtl
xchg
pop
popw
cmp
sub
jl
dec
inc
cmpsb
xlat
sub
push
xor
adc
mov
pop
out
bsf
mov
pop
ret
add
xchg
cmpsb
das
jge
out
cli
out
mov
or
pop
push
mov
dec
adc
idivl
xchg
sbb
jp
mov
imul
xlat
push
daa
fstpl
call
push
push
sub
or
fs
repz
push
stos
daa
in
movsb
icebp
daa
jl
or
jns
pushf
andb
and
sbbb
fstpt
mov
mov
lret
aas
test
mov
in
aad
cmpsb
add
xor
pushf
jl
loop
mov
inc
adcb
xchg
add
stc
pop
xorb
pop
xchg
std
loopne
movsl
lea
xlat
sub
or
xchg
mov
scas
sub
hlt
in
mov
cmpsb
idivb
pushf
xchg
repnz
dec
ret
subl
jg
mov
jno
inc
xchg
imul
adc
outsl
jo
cmp
or
push
jnp
add
scas
push
shl
addr16
push
push
dec
ja
rcll
xchg
clc
mov
pop
in
mov
imul
sub
mov
inc
in
dec
adc
in
aam
dec
sbb
jge
add
test
into
and
adc
dec
std
out
push
jns
into
jge
inc
lahf
xor
push
sahf
inc
dec
fimull
jae
and
hlt
imul
or
mov
jnp
es
fcmovnbe
cmp
aas
cltd
out
sbb
outsl
aad
loope
sbb
xchg
lods
or
call
stos
iret
ret
pusha
cwtl
repnz
push
out
xor
out
jge
mov
in
stos
mov
lods
gs
ja
ret
repz
lea
sub
xchg
pusha
daa
out
mov
lods
ljmp
mov
mov
and
xor
dec
rorl
jo
push
sbb
push
pop
jl
scas
ljmp
push
or
mov
cld
pop
inc
repz
enter
xchg
or
mov
xchg
stc
popf
jle
int3
jge
repz
cmp
ret
and
jg
stos
jp
add
inc
jne
rorb
sbb
das
ret
xor
mov
popf
and
jmp
or
inc
cwtl
fistps
test
in
dec
add
fwait
cltd
loope
lods
int3
ficomps
sub
imul
xorl
xchg
fwait
xchg
pop
pusha
or
push
fs
push
xor
icebp
mov
or
jns
in
stos
and
xor
xchg
mov
imul
cs
dec
orb
lcall
iret
sub
sbb
fcoml
pop
xor
adc
and
stos
mov
jbe
add
leave
aaa
in
mov
movsb
jnp
cmpsl
flds
inc
lock
stc
fwait
or
lods
and
mov
ljmp
push
cmp
sbbb
frstor
sub
sti
pop
jecxz
enter
jg
or
dec
sbb
push
jmp
inc
clc
sbb
cmpsb
int
pop
jl
bound
or
pop
sub
adc
int
bnd
push
inc
sub
adc
jecxz
fbstp
clc
mov
sarl
or
out
adc
jp
or
mov
fstps
call
popf
mov
ljmp
cwtl
cld
and
cs
fdiv
jae
mov
cmp
out
std
cmc
mov
sbb
icebp
xor
mov
jae
cmc
mov
pop
cmp
aaa
testl
mov
aad
stos
inc
adc
sahf
mov
sbb
mov
mov
dec
scas
sarb
or
in
push
rclb
pop
xchg
sarl
loop
jns
out
add
pop
fildl
scas
xchg
stos
je
xlat
lret
sub
xchg
jmp
in
mov
push
and
jne
sbb
movsb
nopl
cs
pop
ds
pop
insl
out
popf
dec
and
aad
pusha
jns
xor
jo
lods
or
pusha
mov
sub
sub
imul
jnp
xchg
sbb
push
ret
rolb
push
repz
testl
xchg
test
fbstp
push
push
jo
sub
xlat
je
fs
xchg
test
enter
sbb
int3
jnp
ss
push
sub
adc
aad
shlb
sub
sbb
pop
push
aam
inc
push
repnz
push
popl
or
shrb
cmp
or
loop
call
jmp
inc
add
std
ret
sti
xor
popa
out
fidivrs
in
sub
fisubl
xchg
push
mov
adc
and
das
dec
movsl
pop
dec
or
inc
xor
xchg
lds
rcll
mov
dec
xorb
cld
lahf
lret
cs
fwait
pop
ds
fildll
cmp
or
lcall
repz
inc
aaa
xchg
lret
inc
push
insl
sahf
mov
jb
rolb
cld
loop
sbbb
aad
dec
pop
mov
das
inc
or
rorl
aas
inc
jae
jnp
subl
push
mov
jne
jp
lods
pusha
stos
cld
push
ss
push
xor
lahf
scas
test
sbb
test
out
scas
lods
jecxz
xor
mov
leave
add
or
aas
lods
cli
jno
in
sub
add
and
loop
fidivrl
pop
pusha
clc
pop
scas
push
xchg
pop
insl
bound
loope
ss
mov
xchg
fcoms
mov
adc
cmp
bound
mov
mov
cmpl
sbb
int3
pusha
or
stos
xchg
pop
icebp
pop
movsl
add
in
imul
ds
and
cmp
test
and
and
data16
push
and
mov
cld
dec
call
aaa
pop
fisubrl
and
outsb
mov
in
aaa
cld
in
cld
aas
pop
sbb
lcall
jmp
fbstp
scas
jmp
xorb
pop
das
add
push
xor
pop
sub
mov
sub
dec
mov
jmp
lock
push
ret
clc
je
mov
imul
xor
cmp
jae
clc
outsl
or
sbb
jmp
dec
or
mov
leave
and
loopne
jmp
pop
es
jne
mov
adc
and
inc
rorb
notb
pop
cmp
loope
mov
push
or
inc
mov
xlat
cwtl
pop
adc
pop
dec
and
sbb
pop
ds
xchg
andb
lahf
sbb
fwait
roll
outsb
mov
xchg
sub
jnp
roll
jno
ret
fwait
pop
insl
mov
add
inc
mov
mov
and
into
pop
sbb
aas
les
cmp
out
sub
cs
pop
inc
gs
cmp
les
or
sbb
xchg
popa
push
cmp
inc
lock
js
out
inc
jl
lock
pop
inc
add
pop
mov
aam
fdivrl
stos
cld
jno
inc
sbb
jnp
mov
mov
sahf
out
imul
dec
das
mov
and
xor
adc
insb
adc
jae
sahf
sarb
jnp
sub
lcallw
ret
dec
xor
push
cmp
cmp
cmp
inc
stos
mov
mov
inc
cmp
test
shlb
mov
or
and
jae
adc
iret
sub
jmp
dec
jb
lret
sbb
adc
sub
mov
dec
lods
or
or
divl
inc
fldenv
dec
add
jl
mov
pop
mov
movsb
fcomip
push
push
enter
xlat
inc
sub
xor
roll
jae
out
jmp
xor
pop
dec
fcoms
add
push
daa
mov
cld
push
inc
inc
testl
xor
jb
mov
inc
sub
fsts
daa
test
inc
lods
push
icebp
subb
fisttps
pop
lahf
fwait
jl
mov
pop
inc
mov
jno
fimull
fisubl
jns
add
mov
je
push
clc
cmpb
fistpll
mov
sbb
cmp
out
mov
repnz
dec
gs
add
xchg
cmp
pop
cmp
sbb
fldt
mov
repz
push
call
test
popf
cmpsb
mov
jecxz
shll
xchg
mov
jne
outsl
mov
mov
pop
jg
shlb
sub
push
call
mov
je
ljmp
mov
adcl
mov
or
dec
not
adc
pop
insb
adc
push
data16
xor
in
inc
pop
add
fnstsw
movsl
hlt
sbb
xor
fnsave
add
lret
mov
sub
xchg
jne
cmpsl
lahf
and
out
aam
or
push
fisttps
jp
jno
dec
je
pop
jecxz
inc
mov
popa
or
pop
mov
or
pushf
pop
push
jo
jg
getsec
sahf
sbb
dec
daa
cwtl
mov
psubsw
addl
and
pop
and
dec
pop
add
test
daa
push
mov
adc
ljmp
ja
repnz
aas
cmp
call
loopne
inc
add
pop
jo
push
mov
sub
icebp
sbb
mov
pop
dec
cmc
jmp
push
repz
sub
stc
movntq
out
aad
cwtl
int
pop
ret
imul
add
xchg
inc
ret
fldcw
lock
jne
addr16
enter
dec
jge
jmp
mov
pop
dec
movd
fwait
push
les
sub
jbe
cmp
and
push
repnz
dec
sti
leave
loop
ret
xchg
insb
sub
add
ret
mov
imul
popa
push
mov
sub
dec
out
rcrb
push
ret
dec
mov
loopne
pop
ss
sub
pop
xchg
mov
pusha
dec
pop
cmpsb
cmp
push
mov
nop
xchg
push
movntq
adc
jbe
lret
repz
sbb
stos
shrl
xor
push
sbb
mov
fistps
dec
aas
addr16
notl
orl
pop
cmp
push
gs
sbb
stc
in
inc
in
sbb
inc
iret
add
sti
popf
and
add
inc
bsf
aaa
int3
jbe
pop
fdivs
popa
movsl
pop
and
inc
leave
sub
jns
xchg
sahf
push
cmp
std
adc
es
add
sbbl
div
push
pop
fcmovb
inc
dec
test
adc
mov
inc
imul
push
jno
les
clc
xchg
inc
aaa
andl
mov
stc
cli
mov
jne
pop
jno,pn
and
arpl
pop
add
mov
xor
mov
lret
xchg
shl
loopne
xchg
or
in
jns
jne
stos
mov
xchg
scas
mov
insl
adc
jbe
mov
cltd
pop
xor
sbb
sar
or
bound
mov
je
mov
mov
andb
xchg
jns
sub
mov
ja
dec
dec
or
inc
mov
ds
or
or
inc
fidivrl
dec
div
xchg
lods
inc
mov
repz
jnp
or
nop
out
sbb
xchg
jle
push
cs
xchg
jnp
cmp
push
ss
daa
jg
and
or
dec
pop
and
clc
les
inc
test
lods
adc
leave
loopne
es
rolb
sti
lds
sbb
rcrl
sbb
ror
xlat
push
sub
ljmp
pop
mov
or
sub
sbb
shrb
js
repz
push
push
incl
push
pop
mov
sub
out
repz
movl
mov
cmc
cmc
or
sbb
xlat
and
mov
std
sbb
pop
and
and
adc
divb
ret
lods
dec
jae
xor
inc
and
and
mov
adc
arpl
mov
loopne
jp
popa
divb
out
fists
ret
outsb
xchg
stos
flds
and
insb
rcr
sahf
push
loop
push
mov
and
nop
adc
mov
bound
inc
push
xor
dec
adc
and
out
pusha
push
jg
pop
jg
xchg
jecxz
push
xlat
mov
sub
scas
lods
lods
jp
repnz
mov
decb
fnstenv
xorl
mov
pop
pop
sub
push
lret
mov
push
mov
movsb
fists
adc
test
cmpb
xchg
out
loop
divb
and
mov
scas
push
inc
and
iret
rorb
add
sbb
dec
aas
push
notb
sub
mov
xchg
and
dec
xor
pop
cmp
mov
xadd
push
lret
jbe
push
sbb
adc
test
rol
jmp
add
pop
je
loopne
imul
xor
jge
push
sub
mov
das
fs
je
mov
adc
test
mov
xor
lock
stos
mulb
push
push
pop
adc
cs
mov
adc
or
sub
inc
out
or
je
xchg
loope
mov
jo
icebp
sub
cmp
fbstp
pushf
jno
adc
stos
mov
les
mov
jne
imul
in
movsb
inc
mov
out
jo
ds
daa
mov
dec
into
push
mov
xchg
data16
jne
testb
sti
fucomip
dec
push
lods
shll
lods
xor
pop
cmp
outsl
pop
mov
push
xchg
fldt
lret
jbe
pop
scas
sub
vfrczss
pop
xchg
clc
in
cmpsl
cmpsb
inc
rolb
pop
int3
loop
xor
popa
ljmp
and
insb
pop
xchg
add
mov
rcll
popa
adc
aaa
fldl
mov
frstor
lods
fiadds
aad
fdivl
or
sbb
repz
cmpsb
push
jne
popa
test
pop
add
cmp
lret
sub
add
pop
dec
icebp
mov
test
mov
xor
mov
ja
test
outsb
cmp
ljmp
lcall
cmpsb
les
ds
test
test
push
push
gs
push
jae
test
and
lds
outsb
call
daa
dec
jae
dec
cmp
test
cmp
add
mov
inc
lods
fisttpll
mov
ljmp
mov
imul
pop
ljmp
out
pop
mov
mov
rcll
iret
mov
sti
xchg
jno
mov
and
xchg
ret
pop
sub
ds
dec
daa
rorl
ficoms
mov
enter
lea
repz
add
fnstenv
jne
mov
adc
repz
das
pop
aam
stc
sbb
jns
popf
adc
mov
pusha
mov
push
push
sarb
and
ljmp
jl
scas
add
movb
ret
sbb
les
add
push
add
adc
roll
or
cmp
mov
jnp
les
aaa
pop
sbb
fisttps
inc
inc
dec
repz
xchg
pop
stos
sti
adc
cmp
sub
xor
mov
mov
jnp
ja
mov
popf
xchg
mov
dec
sbb
pextrw
pop
sbb
xchg
test
out
test
insb
enter
aam
cld
pusha
jle
jae
fstl
shlb
ljmp
int3
or
jge
repz
nop
inc
insl
cmc
out
or
pop
inc
lea
jnp
mov
scas
subl
mov
xchg
xor
mov
mov
mov
and
jle
xchg
and
xor
mov
shll
xchg
dec
ret
ljmp
mov
in
data16
and
out
int3
fnstsw
sahf
sbb
arpl
cs
sub
add
jmp
cs
xchg
addr16
or
pop
or
aam
jbe
inc
mov
push
aaa
out
test
loope
repnz
cmp
mov
in
fs
lods
scas
push
and
adc
or
fldcw
mov
cmp
lret
cwtl
inc
scas
mov
and
cld
xor
dec
ljmp
ret
inc
ja
aaa
cmpsb
inc
inc
inc
lock
sbbb
sti
negl
xor
dec
int3
sbb
add
adc
sbb
xchg
outsb
das
push
and
sti
aas
cmpsl
sbb
sbb
xor
inc
bound
lds
loopne
xchg
inc
sub
cli
loop
adc
mov
adc
jmp
inc
jg
pop
enter
outsb
les
dec
mov
int3
outsb
sbbl
outsl
jne
stos
jecxz
adc
pop
subl
and
rorl
je
pop
jecxz
push
mov
sti
push
mov
sbb
cmp
cli
add
mov
loope
xchg
xchg
mov
jae
je
pop
fadds
xchg
mov
push
pop
andb
sbb
mov
dec
xor
push
mov
ret
mov
in
into
cmc
mov
mov
cmpsl
xchg
arpl
rcll
std
push
aas
in
leave
popf
sub
es
pop
imul
mov
sbb
inc
push
cld
std
cs
fwait
lock
mov
xchg
pop
aaa
clc
jnp
inc
cmp
or
test
jg
and
xor
mov
xchg
and
in
xchg
cmpsl
sbbb
push
adc
sahf
popa
cltd
pop
cmp
repz
add
mov
pushf
dec
add
pop
push
sbb
div
cltd
std
mov
popf
movsb
xor
das
in
or
inc
std
add
jne
sub
ds
gs
loop
mov
stc
inc
or
mov
out
mov
stos
outsb
inc
or
mov
out
mov
mov
xor
adc
lcall
and
push
sbb
dec
jae
lcall
lahf
jl
insl
jns
loope
divb
xchg
cmp
xor
cmp
sub
dec
or
nop
icebp
cmp
in
imul
lds
dec
add
mov
aas
adc
mov
jl
jle
rorb
push
ss
fucomp
jecxz
packssdw
jns
inc
shlb
dec
cmpsl
loop
out
and
push
rcrl
call
inc
and
into
sub
test
ret
sarl
sbb
xchg
data16
lcall
jns
jmp
orl
inc
add
xchg
or
pusha
addb
ds
outsb
lds
lcall
jb
xlat
lods
outsl
aaa
sub
inc
push
stos
mov
sti
arpl
in
inc
and
mov
push
ret
jno
filds
push
aad
sbb
jo
jg
lods
les
in
mov
pop
or
lret
sub
push
pop
lahf
inc
imul
push
fadds
lret
out
fstpl
adc
sub
sbb
ja
outsb
in
xor
push
jge
dec
pop
adc
sub
mov
out
in
cld
iret
cmp
rolb
lods
add
lods
inc
test
fbld
sub
ljmp
adc
xor
cmpsb
faddp
xorb
addr16
push
sbbb
fidivl
in
jbe
dec
pop
stos
dec
lahf
mov
jl
xchg
xchg
test
addr16
in
je
cmp
pop
sub
mov
pop
mov
pop
cld
push
inc
add
push
sbb
cmc
cli
dec
popa
mov
push
adc
jb
je
mov
xchg
cmpsl
xchg
mov
mov
js
pop
sub
sbb
insb
out
xchg
popf
lahf
adc
mov
mov
jne
inc
and
xchg
jnp
xor
in
xor
xchg
stos
mov
pop
imul
leave
inc
movsl
aam
cmp
repz
testb
sti
aaa
adc
mov
hlt
and
push
fsubrs
enter
or
xor
mov
mov
cwtl
lahf
dec
test
test
aas
nop
lahf
fsubrl
dec
dec
stos
mov
or
cmpsl
popa
jae
inc
mov
sub
mov
lods
push
sub
sahf
aad
mov
xchg
pop
pop
push
in
dec
xor
add
or
flds
cmp
jge
cmp
jg
sbbl
adc
mov
gs
dec
inc
push
shl
stos
fidivl
sbb
sbb
scas
fwait
movsl
imulb
xlat
pop
cld
inc
into
andl
repnz
push
jl
insl
clc
sbb
xchg
dec
in
xchg
mov
hlt
cmp
xor
daa
sub
enter
xchg
ret
jae
jae
in
mov
and
cmc
and
xor
mov
mov
and
mov
xchg
xchg
lea
and
repnz
jge
out
pop
mov
add
push
add
add
mov
jle
mov
ret
repz
add
sarb
into
xor
fsub
insl
sbb
add
fsts
jle
sbb
repnz
xchg
cmp
test
test
prefetchnta
lcall
loopne
fidivs
ret
push
dec
jl
cwtl
jge
aam
mov
loop
xchg
push
mov
adc
add
xchg
xchg
fsts
loop
sub
movsl
and
out
pusha
test
jns
movsb
mov
popf
cmpsb
xor
out
fdivrl
ss
inc
dec
adc
mov
scas
sbb
xor
dec
mov
sub
sbb
cmpl
or
iret
and
jl
or
sbbl
subb
add
mov
rcrl
xchg
xor
int
and
aad
inc
push
pop
push
das
fwait
jecxz
sbbb
jg
mov
xor
sti
add
adc
icebp
xor
not
mov
push
jbe
cmp
adc
mov
push
lcall
outsl
sub
sub
sub
and
fisubrs
aaa
int
cld
rorb
ret
bound
sub
sbb
in
or
dec
mov
loop
inc
dec
fiaddl
mov
adc
xchg
je
mov
mov
fsts
dec
xchg
aaa
cmp
add
orl
xor
push
push
adc
testb
aam
add
aas
bound
dec
xchg
add
cli
in
lret
iret
mov
outsl
adc
xor
ljmp
adc
mov
popf
cmp
fnstcw
es
mov
adc
sub
fcomip
ret
ljmp
jne
or
daa
inc
shrl
les
in
notb
icebp
push
iret
xor
pop
loopne
test
inc
stos
pop
lret
popf
mov
sub
adc
mov
pop
loope
je
lock
pushf
jbe
scas
and
or
in
xchg
lods
add
test
inc
stc
scas
pop
mov
sub
fisubrs
or
pop
inc
cmp
in
cltd
mov
pushf
cmp
in
and
or
push
in
in
dec
sti
adc
sub
out
aaa
xchg
cmpb
push
nop
mov
xchg
push
dec
add
xor
das
fsubs
push
mov
sbb
add
xchg
cld
mov
adc
cmp
int3
aad
mov
adc
lods
icebp
jo
jp
stc
lea
push
and
data16
movsl
stos
dec
fwait
enter
fidivrl
sarb
sbb
ljmp
jbe
aam
jne
mov
inc
xor
fdivrp
out
outsb
test
mov
fcomip
ljmp
stos
test
outsb
ret
inc
in
lods
xchg
sahf
rol
dec
lret
aas
aas
insl
out
and
adc
dec
adc
pop
adc
bound
mov
jp
scas
mov
ljmp
dec
jb
adc
ss
mov
push
sub
mov
mov
dec
in
push
add
or
pop
mov
popf
cs
xor
or
and
movl
ljmp
fs
dec
cmp
mov
jge
mov
stos
ret
into
push
push
xchg
iret
lea
push
sub
or
jae
cmp
and
test
cs
xor
loop
xchg
add
sarl
adc
addr16
lods
inc
sub
lods
push
fwait
mov
add
mov
fnstenv
mov
jbe
cwtl
or
push
ret
sbb
and
lea
cltd
out
adc
iret
sti
jmp
fcmovb
movsb
jp
mov
push
test
loopne
pop
hlt
lock
sub
adc
or
setno
daa
pushf
dec
sbb
mov
arpl
out
jmp
pop
popf
aad
cmp
loopne
lahf
xchg
mul
ret
jno
lods
in
xchg
fimull
mov
push
pop
jno
mov
cmpsl
inc
mov
jns
outsb
outsb
popf
xor
lds
sbb
cltd
rcrl
gs
test
xor
dec
jl
xor
mov
jne
rorb
sahf
into
jmp
push
jg
inc
dec
sbb
sti
scas
xor
scas
gs
inc
add
xchg
xor
and
or
rcr
jnp
mov
cmp
mov
and
jmp
push
in
in
cmp
mov
fildll
mov
orb
std
aad
rolb
cmp
cmpsl
xchg
dec
insl
mov
add
xor
jae
and
xlat
push
in
je
das
loope
jge
rolb
lds
daa
mov
cmc
stos
jne
movb
test
mov
xor
aaa
push
push
sti
or
fsubrs
add
sub
adc
jecxz
scas
push
jo
dec
push
jg
or
pop
mov
sbb
sbb
mov
cmpl
daa
lods
mov
int3
nop
push
fnstsw
test
xor
lret
xlat
aas
pop
js
scas
cs
xchg
scas
lcall
movsb
push
sub
pop
push
adc
js
push
inc
dec
jae
mov
mov
jns
jmp
aas
cmp
or
inc
mov
dec
ret
daa
or
jnp
jno
sbb
sub
outsb
pop
pop
daa
mov
cmp
dec
shll
inc
dec
xchg
sti
push
cld
xchg
cmp
sbb
lock
test
cmp
mov
popf
xor
loope
in
bound
mov
mov
dec
ret
es
xor
mov
xchg
cmpb
out
scas
lock
mov
dec
cmp
adc
pop
sbb
dec
leave
push
ret
call
lret
into
pushf
pop
outsl
cli
inc
pop
push
les
push
cmp
cmp
fmul
js
push
cmp
mov
outsl
xor
xchg
sbb
sbb
mov
sub
pop
sbb
pop
flds
enter
dec
xorb
jl
cmp
mov
xchg
nop
push
xor
sub
mov
sub
loope
lods
scas
or
loop
leave
inc
jnp
sub
push
sub
sbb
das
jp
sbb
adc
leave
shll
push
ret
data16
or
jo
and
out
pop
out
push
xor
add
sub
and
dec
ljmp
fwait
out
rorb
icebp
cli
lea
ss
loopne
mov
mov
mov
inc
dec
mov
pop
pop
imul
lods
pop
and
data16
push
cmp
decb
cltd
pushf
dec
and
cmp
out
ret
lret
test
push
clc
pop
cmpsl
mov
out
add
mov
sub
lret
mov
sbb
pop
jmp
push
addr16
or
add
in
and
push
jmp
push
cli
frstor
xchg
cmpb
cmc
push
fcmovb
bound
outsl
mul
cmc
shl
xchg
sbb
xor
mov
les
stos
inc
rcrl
jge
xor
lea
sbb
push
pop
cltd
inc
push
pop
push
lods
inc
and
mov
sub
fisubrs
mov
scas
bound
sti
mov
ds
xchg
stos
cmp
ret
in
in
inc
mov
xchg
jae
sub
mov
les
cmp
mov
mov
lahf
loope
std
mov
or
decl
mov
fs
test
pop
cmpsl
or
inc
sti
lcall
jnp
dec
pop
inc
call
add
mov
stos
leave
orl
jecxz
jmp
pop
cli
movb
cmp
dec
fdivrs
pushf
out
sti
mov
test
es
in
js
inc
cwtl
ret
in
nop
fdivl
popa
mov
sar
pop
leave
insl
push
jae
cmp
clc
mov
adc
and
stos
mov
fistpll
sti
push
xchg
sbb
ja
scas
push
addb
pop
and
pop
es
inc
lds
mov
sbb
xchg
and
or
mov
sbb
in
sub
xor
or
aam
jle
cmpsb
lea
cmp
sbb
std
je
and
popa
mov
les
add
into
aam
out
jmp
dec
dec
jbe
add
in
inc
movsb
add
setge
or
negl
mov
lret
sub
xchg
aaa
pop
mov
cmp
sub
xchg
sub
dec
shr
add
push
jnp
ss
cmp
notl
sbb
adc
add
inc
outsl
and
pop
pop
mov
sub
leave
xchg
jae
pop
pop
sub
jmp
loop
cltd
xlat
xchg
mov
pop
mov
cld
dec
test
repnz
shll
int3
loope
repnz
cmpsl
std
xlat
enter
movsl
cmp
and
inc
mov
insl
lods
enter
popa
and
pause
cmp
mov
scas
cltd
inc
in
aas
lret
hlt
mov
clc
adc
fxch
cmp
leave
int
sbbl
push
xlat
dec
cld
loope
add
push
push
push
lock
fmull
out
push
jle
mov
rcl
pop
add
cmpsb
movsb
fucom
mov
loopne
push
pop
movsl
xor
inc
lret
jmp
rcll
arpl
testb
cld
enter
dec
push
ljmp
xor
nop
into
testl
mov
shlb
jl
mov
jne
dec
xor
cld
lods
andl
shl
jg
mov
pop
adc
and
scas
and
mov
in
pop
ss
add
insb
ja
test
and
ja
and
hlt
push
mov
loop
xchg
cmp
mov
aad
pop
mov
gs
movsb
mov
xor
dec
cmpsb
ja
and
adc
insb
test
xchg
sarb
sub
daa
fucomi
cmp
daa
loopne
aas
jge
rorb
inc
ret
popa
cmpsl
sahf
push
out
insb
daa
xor
mov
xchg
push
cmp
jno
and
lods
push
aad
addb
xor
push
mov
leave
push
imul
push
jmp
loope
pushf
shl
push
cmp
flds
inc
pop
mov
adc
outsb
je
mov
mov
cmp
xchg
aam
shl
mov
lcall
and
push
inc
mov
push
adc
push
lods
push
pop
mov
in
inc
ret
sbb
in
leave
lds
fst
inc
inc
out
popf
notb
in
push
or
add
xor
ret
fsubr
test
fbld
cwtl
fucomip
add
cmp
lcall
in
lea
inc
out
adc
lahf
aam
xchg
jmp
push
xchg
xor
xchg
and
packsswb
sarb
inc
mov
push
cld
loopne
sbb
movsl
lret
sub
jnp
outsb
sti
ds
sbb
fisubrs
andl
pushl
dec
lea
inc
inc
push
ljmp
push
lods
xlat
out
lea
cltd
cmp
adc
mov
push
cmp
dec
in
jge
int3
lcall
inc
push
popa
test
jp
push
call
in
and
add
mov
mov
test
das
xor
fsubrl
popf
cltd
int3
jbe
sti
sbb
aas
push
in
popa
ss
push
xor
out
xchg
mov
fwait
adc
add
fmul
push
lea
jno
pop
scas
mov
rorl
or
sbb
std
sub
lods
adc
xor
jg
add
inc
rolb
cli
ret
sbb
inc
repnz
add
stos
pop
sbb
inc
int3
pushf
cli
dec
push
cmpsl
jb
rorb
jle
pop
ret
jl
ss
and
inc
push
je
push
xchg
jle
mov
dec
mov
adc
pusha
imul
je
sub
sub
sbb
push
inc
movnti
push
jne
addr16
test
fstl
jo
and
jae
push
lds
loope
mov
out
cmp
loop
lods
rcrl
pushf
or
outsl
js
inc
adc
add
mov
adc
enter
gs
add
cmp
xchg
fs
add
aam
fdivr
sub
cmpsl
mov
mov
sub
jl
and
push
bound
add
mov
mov
xor
lcall
cli
xchg
jmp
pop
icebp
inc
and
pop
and
repnz
pushf
int3
fwait
lock
out
pop
cltd
int3
sub
adc
stos
dec
rcr
dec
out
inc
jmp
or
mov
jno
push
fnstcw
fnsave
and
pusha
mov
and
jno
and
add
fs
mov
cmp
sbb
cmpsb
mov
je
or
lret
lea
out
inc
js
adc
negl
push
jl
pop
fsts
push
sub
fdivrl
or
mov
sbb
push
pop
pop
into
or
rorl
fwait
cmp
jae
pop
inc
fidivrs
xchg
into
lret
bswap
xor
mov
mov
pop
es
inc
icebp
mov
or
in
es
outsl
stos
cmp
bound
sbbl
daa
stc
inc
mov
fisttpl
in
fnstcw
push
pop
ja
popa
testl
and
xor
push
scas
mov
push
lahf
sar
push
or
jmp
mov
sub
rorl
add
xchg
cmpsb
outsb
xchg
insl
shll
mov
inc
rclb
int3
aaa
ds
xchg
shl
je
cltd
rorl
xor
xor
push
insl
int3
inc
xchg
cmp
sbb
or
jmp
outsb
push
jne
pop
fidivl
push
add
test
and
mov
xor
lcall
adc
jp
iret
popa
movsl
or
jle
xchg
mov
pop
jo
sbb
mov
into
loope
fmuls
out
pop
clc
add
cmp
mov
addr16
lahf
cmc
addr16
cmp
jg
dec
sub
push
sbb
jp,pn
push
nop
in
push
mov
decb
inc
or
lahf
notl
incl
dec
inc
adc
jbe
hlt
das
cld
pop
sbb
mov
sbb
xchg
or
test
xchg
fsub
jnp
xor
cmc
mov
inc
xchg
into
stos
repnz
mov
sar
jbe
arpl
int
lret
movsb
fstpl
push
iret
dec
inc
sub
test
or
and
decb
andb
xlat
cltd
dec
outsl
outsl
cmpsl
add
push
cmp
push
shr
dec
hlt
mov
pop
insb
push
xchg
fwait
or
cmpb
fwait
int3
jle
mov
jns
cmp
andl
stos
xor
stos
sub
mov
sahf
push
mov
add
ds
and
and
push
cmpb
dec
mov
sub
pusha
dec
lods
mov
xchg
adc
and
push
xor
enter
xor
leave
xchg
mov
insl
sub
jnp
addr16
test
jmp
fidivrs
cmp
inc
dec
filds
mov
loope
add
sbbl
fmuls
dec
dec
and
pushf
es
int3
sbb
jp
jecxz
dec
xchg
dec
cltd
push
xchg
push
and
ja
leave
push
mov
adc
jle
mov
xor
inc
cmp
jo
scas
add
pop
and
push
popf
repnz
pop
popa
icebp
pop
xor
mov
enter
push
jbe
icebp
sbb
int
cmp
add
push
inc
xchg
das
push
and
ljmp
fsubrs
rorl
in
push
jne
adc
gs
dec
mov
ljmp
movsb
sahf
add
dec
mov
pop
pop
adc
int3
in
fdiv
xchg
sub
je
lds
imul
dec
ret
shl
sahf
jb
cltd
outsl
mov
adc
inc
and
bound
loope
dec
cs
pop
adc
rcrb
iret
cmp
shrb
or
xchg
int
in
adc
push
sbb
mov
xor
push
es
and
shlb
rol
mov
dec
push
subb
xor
dec
js
mov
add
pusha
inc
and
pop
or
movsl
xor
xor
and
enter
in
les
push
insb
and
or
data16
mov
adcb
inc
cmpsb
int
jge
mov
aad
imulb
inc
negl
shrb
xchg
leave
out
bound
pop
jae
sub
fs
xchg
dec
testl
cmp
fdivs
xor
pop
fcoml
pop
pop
or
movl
xor
sbb
add
mov
sar
mov
dec
pop
jg
xchg
pop
add
or
int3
loop
inc
imulb
adc
cmp
or
fwait
int3
jl
aas
mov
cmp
dec
rorb
sub
lods
into
sarl
ljmp
inc
xor
imul
cmpsb
pop
mov
inc
mov
adc
out
jns
or
jo
loop
outsb
call
dec
add
push
add
jbe
and
sti
insb
gs
pop
or
cmp
pop
repnz
data16
imul
and
push
clc
ss
push
push
fisttpl
repz
add
mov
movsb
sahf
add
push
inc
add
dec
ja,pt
sti
lcall
xchg
mov
inc
pop
icebp
shlb
mov
ss
add
inc
xchg
adc
dec
sarl
ror
mov
jnp
push
sbb
mov
xor
mov
sarb
sub
dec
inc
sub
mov
into
ja
aam
xchg
js
gs
add
shl
mov
sbb
mov
inc
pop
push
dec
push
dec
mov
dec
pop
ror
rolb
aaa
fidivs
jne
sub
mov
lods
mov
add
cmp
out
mov
cld
lock
xchg
mov
pop
nop
cmc
inc
int3
hlt
mov
push
mov
push
stos
fbld
popf
xlat
push
lods
in
stc
out
sub
jbe
jmp
movsl
pop
flds
data16
pop
inc
mov
mov
cmp
mov
daa
push
mov
xlat
xchg
push
jno
lock
sub
xchg
test
push
ret
cmc
xlat
fs
lahf
xlat
inc
int
pop
js
lods
pop
and
and
imul
adc
lods
jge
sahf
fisubs
mov
adc
sbb
jns
std
dec
dec
or
or
push
add
inc
pop
push
imul
mov
fs
rolb
loopne
je
ds
mull
in
scas
push
loope
add
jl
pop
pop
pusha
test
int3
jecxz
popf
movsl
test
imull
mov
cmpsl
scas
divl
pop
dec
lret
or
mov
and
or
stc
mov
sbb
add
out
jmp
fidivs
jae
movsl
cmp
jg
push
jne
cmp
inc
inc
stos
pop
inc
xchg
jg
lahf
or
les
mov
into
loop
lcall
mov
mov
adc
fimull
into
rclb
push
mov
stos
cmp
outsl
cmp
sbb
fwait
call
mov
jb
inc
jmp
push
dec
push
cmp
repz
jmp
adc
add
sbb
xor
fsts
push
sahf
inc
addr16
cld
icebp
mov
mov
jmp
adc
in
lahf
sti
add
inc
out
sarb
imul
lds
lret
cmp
je
xchg
pop
int
rol
arpl
fcoms
cli
ds
pop
xchg
jecxz
mov
adc
pop
ret
add
dec
int
shll
incb
inc
nop
dec
icebp
mov
jp
add
popa
jecxz
mov
int3
jne
pop
data16
adc
mul
pop
repz
mov
mov
loop
mov
cmp
pop
loopne
out
loop
mov
and
push
cmp
ret
mov
andl
push
jmp
push
mov
insl
mov
sti
xorb
out
xchg
cli
sub
push
adc
test
icebp
cli
sub
frstor
ss
pop
mov
test
xchg
popa
inc
inc
add
xchg
fnstenv
jb
cmp
dec
mov
jae
orl
cwtl
ret
and
push
mov
lods
add
icebp
inc
sub
adc
andb
mov
scas
cmp
xchg
aad
mov
mov
inc
mov
cmp
push
or
sarb
dec
into
jo
cwtd
cmc
xor
shl
mov
stos
mov
fwait
pushf
cld
xor
mov
jp
cld
xchg
sbb
lea
aad
add
pop
mov
xchg
outsb
stos
push
xor
ds
push
inc
dec
dec
cmp
jge
imul
jle
mov
xchg
mov
scas
lods
adc
dec
or
xchg
in
movsb
les
sbb
das
adc
push
dec
verr
dec
fdivrs
mov
pop
push
sbb
insb
mov
push
repnz
jns
test
aaa
dec
cmp
push
pop
movsb
xorl
dec
gs
fildl
sbb
mov
into
cld
pop
in
scas
xor
test
aam
mov
cs
fists
ljmp
popa
fcompl
jp
stos
cmp
or
int3
in
sbb
jns
pop
incl
andl
bound
xor
mulb
xchg
cmp
test
cmc
push
lock
sar
inc
sub
mov
and
in
inc
mov
mov
and
cmp
add
adc
and
icebp
mov
adc
pop
mov
dec
in
lret
cmc
mov
mov
adc
imul
jne
movsb
sbb
cld
mov
jo
dec
test
rorl
stos
jmp
mov
cwtl
in
xlat
cli
movsb
aas
dec
cmp
add
mov
push
or
loop
jge
mov
mov
cld
in
fmuls
pop
jns
sbb
pop
dec
pop
mov
xlat
psrad
sbb
notb
repnz
push
ret
scas
lahf
jecxz
pushf
ficomps
xlat
sti
and
inc
jnp
imull
or
mov
adc
add
lds
mov
shufps
xor
addb
lahf
test
call
dec
jbe
call
in
fdivrs
adc
pop
mov
xor
cmpsl
addr16
movsl
jne
pop
jecxz
fistps
fcoms
mov
sub
jbe
add
notl
adc
mov
mov
mov
pusha
das
test
mov
lret
mov
nop
xchg
push
push
mov
adc
cwtl
pop
movsb
cmp
movsl
push
leave
loop
and
sbb
test
divl
notl
or
ds
mov
call
das
pop
jae
mov
repnz
stos
loopne
or
flds
fldcw
push
addr16
lock
cmpsb
das
into
lea
add
movsl
dec
or
and
mov
lcall
cmp
xorl
jae
daa
inc
nop
jmp
inc
lds
idiv
pushf
orb
insl
sti
add
fnstenv
push
popa
mov
inc
and
lock
sub
in
jne
inc
ret
popa
rep
outsl
cmp
inc
insl
and
xchg
stos
shll
ljmp
sub
addr16
lahf
adc
das
pop
cwtl
dec
jne
test
sbb
nop
fildll
add
fs
sub
out
bnd
sbb
das
cmc
or
pop
in
stos
les
dec
hlt
loop
push
std
sub
cld
imul
xchg
bnd
mov
pushf
je
pusha
icebp
lods
mov
dec
dec
fldl2e
cmpsb
jp
inc
push
lock
jnp
add
repnz
pop
scas
xchg
mov
aam
hlt
call
and
sbb
mov
xchg
add
push
sahf
pop
cld
sub
push
popa
sub
mov
jno
lods
mov
mov
cmp
adc
mov
fucomp
or
add
sbb
jns
xchg
stos
push
mov
xchg
mov
ss
xor
imul
and
int
jmp
ljmp
xor
daa
cwtl
sbb
cmpsl
adc
mov
sub
jmp
xchg
mov
shl
aaa
lods
lret
push
dec
lret
fiadds
dec
shlb
adc
xor
imul
and
arpl
outsl
pop
jge
int
pop
lds
cmpsl
cmp
xchg
push
or
repnz
aad
mov
lret
sbb
repz
mov
jbe
scas
push
jbe
jno
add
cmp
in
push
orb
adc
and
insb
xor
outsl
xlat
add
cmc
mov
adc
inc
jge
or
sbb
fdivl
loop
inc
stc
ja
fisubrl
pop
push
pushf
cmp
pop
pop
test
pushf
add
or
lcall
inc
hlt
js
out
enter
popa
push
shrb
cmp
sub
inc
sbb
lcallw
aad
roll
pusha
test
pop
sub
and
push
dec
xchg
push
repnz
in
aas
inc
jg
cli
xchg
mov
adc
stos
mov
daa
jmp
or
cwtl
push
icebp
pusha
arpl
test
mov
mov
adc
pop
mov
adc
stos
stc
push
test
stos
pop
mov
inc
hlt
cmc
mov
fnstcw
inc
hlt
jp
dec
xor
pop
js
cmp
fwait
imul
sub
stos
cwtl
repnz
pop
sub
jp
int3
mov
outsl
das
stos
enter
push
call
mov
sarb
outsb
mov
scas
inc
test
jl
cltd
push
out
mov
push
cmp
push
cmpsl
jae
jecxz
stos
inc
insl
pop
cmpsl
daa
xor
sub
inc
lret
mov
icebp
ja
sub
push
jle
or
adc
jae
sub
cltd
push
repz
mov
fistps
push
sbb
sbb
jne
mov
cmp
iret
pop
std
mov
mov
shlb
clc
ss
ljmp
mov
imulb
mov
and
sub
sbb
pusha
mov
push
enter
int3
stc
psubusw
mov
dec
jb
dec
repz
insb
adc
bnd
pop
nop
lock
pusha
je
dec
pop
cmp
pop
lcall
and
mov
sub
xchg
loope
pop
xchg
inc
popf
cmp
mov
in
mov
cmp
mov
push
push
push
cmc
aaa
out
imul
out
in
pop
jns
fdivrs
loop
scas
push
ljmp
stos
or
sub
xchg
out
push
add
cmpsb
pushf
inc
div
aaa
inc
sub
stos
xor
pop
pop
dec
lock
call
cmpsl
dec
inc
xchg
enter
mov
inc
jl
cmp
aaa
cmp
jno
xor
shlb
and
loope
popa
scas
inc
stc
icebp
in
inc
xorl
push
fs
or
stos
jbe
leave
movsb
lds
popf
fmul
inc
in
stos
or
lock
sbb
xchg
pop
arpl
aad
ljmp
notb
in
std
dec
pop
cmp
nop
push
push
imul
fsubrp
jbe
or
mov
test
mov
adc
mov
add
lods
add
and
add
es
push
mov
test
ret
pop
jnp
dec
mov
inc
movsb
or
imul
roll
sub
jecxz
sbb
shrl
and
xor
dec
popa
pop
and
dec
sahf
mov
mov
repz
mov
cmp
jae
inc
push
cmpb
add
inc
adc
cmpb
mov
and
pop
mov
fistl
rcl
and
jae
or
fadd
insl
pop
and
cmp
imul
jp
mov
mov
hlt
in
test
imull
mov
xchg
fsubrs
es
ret
jl
sti
in
pop
mov
adc
jle
in
jnp
pop
pop
movl
aaa
in
aaa
ja
rorb
imul
pushf
jno
ljmp
fistps
and
jo
ss
jg
jae
xchg
test
lcall
dec
test
sub
lret
arpl
push
pop
and
inc
popa
inc
or
sub
and
fcoml
cmp
loope
mov
faddl
mov
cmp
idivl
aas
lea
out
mov
icebp
sub
enter
mov
addr16
mov
mov
sbb
test
jae
cld
pop
ja
and
lahf
into
cmpsb
cltd
jo
loope
mov
dec
imul
inc
push
cmp
dec
adc
loope
jmp
lods
xchg
scas
xchg
xchg
call
lcall
lret
inc
xor
jp
out
xor
call
ja
sti
mov
push
lret
jg
cmp
out
in
jmp
cwtl
test
imul
sbb
dec
mov
sub
inc
insb
insl
imul
sbb
int3
sbb
xchg
popa
sbb
ficompl
lcall
loop
nop
pop
inc
cmp
ds
sbb
insl
outsl
js
cld
add
mov
xor
sub
or
lods
push
test
jae
mov
push
pop
cld
in
and
ds
add
cmpsl
lea
push
jp
push
aaa
outsb
sti
inc
adc
mov
lret
push
dec
sub
or
pop
addl
jnp
pop
or
and
pop
aam
call
adc
addr16
call
cmp
lret
test
loope
push
cmp
dec
add
sub
push
inc
popa
repz
out
xlat
ror
dec
jo
mov
mov
frstor
cmc
shl
xor
popf
xchg
dec
shlb
les
jmp
repz
xchg
pop
mov
xchg
std
xchg
repz
or
inc
jmp
dec
xor
and
sub
int3
cmp
outsl
jge,pt
pop
aas
rclb
lds
mov
mov
imul
insb
sub
adc
ja
pop
shl
push
mov
push
out
shrb
fadd
adc
mov
push
test
add
or
xor
popl
adc
addr16
push
push
sar
fisubs
jmp
adc
mov
cld
mov
mov
jne
pop
loope
mov
adc
imul
insl
mov
adc
cs
cmp
frstor
scas
inc
je
jg
jno
mov
cmpsl
mov
cmp
loopne
xlat
cmpsl
fs
dec
nop
pop
pop
jl
ds
pop
xchg
in
fs
repz
mov
cmpsb
mov
out
inc
aam
dec
sub
sub
xor
inc
push
mov
loope
fidivrl
in
mov
inc
adc
xor
subb
push
inc
mov
jecxz
in
mov
imul
fisubs
jmp
mov
pop
repz
outsb
popf
jg
push
xchg
mov
pop
scas
scas
inc
or
fnstenv
sub
mov
dec
adc
inc
sarb
jns
cmp
jns
sbb
and
push
insl
mov
subl
ficoms
xor
fisttpll
inc
mov
movsb
icebp
mov
sbb
imul
add
sbb
test
cmp
repnz
shrl
sub
out
loope
sub
push
add
xor
xor
das
jae
jo
jo
rcrb
ret
lcall
push
sbb
and
mov
mov
sti
mov
cmp
sbb
je
mov
and
lods
popa
push
pushf
inc
rsm
or
icebp
add
mov
addb
rcl
fwait
mov
cmp
aam
cmp
int
dec
mov
xchg
cmp
int3
dec
js
cs
outsl
or
hlt
mov
xor
int3
mov
js
mov
xor
test
mov
push
fcoml
in
lods
nop
dec
pushf
dec
and
scas
les
sub
and
ja
loope
call
cmp
jg
call
movsb
inc
jle
notl
xchg
pop
mov
icebp
adc
xchg
mov
popf
xor
mov
dec
andl
mov
popf
mov
loopne
pop
sub
addr16
bswap
mov
insb
dec
mov
xor
xor
rolb
iret
hlt
sbb
xlat
jmp
adc
xchg
push
testl
push
xor
leave
out
xchg
xchg
fdivs
mov
aam
inc
fstpt
jp
push
cmp
dec
aas
pushf
sbb
adc
pop
ss
in
fs
adc
jecxz
ja
xlat
jl
test
jae
jge
adc
aaa
lods
out
or
xchg
aas
mov
xchg
leave
xchg
dec
loopne
xchg
mov
adc
pop
or
scas
rcll
and
inc
movsb
and
ret
pop
push
fucom
cmp
aam
cmp
mov
pop
sub
fldenv
in
leave
mov
cwtl
fildll
pop
es
push
pop
xlat
lods
fwait
xchg
cltd
fisubl
popl
mov
sbb
mov
stos
cmp
jne
push
and
into
and
inc
mov
sub
divb
in
lock
je
jb
in
and
or
cs
ret
ss
in
cmpsl
ret
addb
push
testb
push
out
cli
mov
leave
and
sub
out
add
sbb
std
lods
paddusw
insb
jecxz
mov
lods
ljmp
mov
inc
movsl
test
scas
lcall
cwtl
or
mov
jb
mov
fistps
cmp
sub
icebp
and
mov
hlt
jnp
dec
lods
and
dec
fcmovbe
inc
mov
push
clc
test
add
pop
sbb
sub
jnp
xor
pop
sti
pop
adc
cmp
aas
shr
pop
pusha
adc
push
mov
mov
rol
in
leave
push
in
jp
sub
aaa
jge
aam
dec
lock
inc
int
popa
aas
loop
fwait
cwtl
insl
jge
in
add
mulb
fdivrs
hlt
test
push
hlt
xchg
jno
jge
into
neg
stc
fnstcw
out
push
dec
cltd
xchg
adc
jle
fistps
rcrb
test
jmp
xor
mov
add
scas
fsubl
or
jae
jle
lock
ret
and
leave
aad
outsl
pop
mov
and
mov
cli
adc
int
dec
mov
add
or
je
popf
xchg
adc
in
push
ljmp
fptan
mov
jge
addr16
sub
fidivrs
jge
test
loope
test
xor
pop
pushf
and
xchg
xlat
jne
ds
mov
movsb
dec
outsb
pop
call
nop
ss
xchg
jge
jb
test
cwtl
repz
or
mov
das
stc
mov
int
mov
jo
mov
push
lds
stos
sub
adc
movsl
iret
xor
mov
repnz
or
nop
xchg
dec
sub
and
lds
cwtl
bound
repz
fadds
and
mov
insl
jnp
pop
fcomps
loop
cmpsb
cmpsl
rol
arpl
outsb
lea
mov
mov
add
sahf
pop
sarl
scas
notb
xor
xchg
in
loope
adc
inc
push
sbb
cmp
cmp
xchg
lods
mov
mov
mov
leave
xor
mov
out
pop
popf
and
pop
cmpsb
daa
jmp
jge
and
adc
movsl
jbe
jmp
mov
fwait
rclb
cld
pop
or
jmp
and
adc
sbb
lret
js
jnp
dec
into
out
or
add
fsubs
mov
push
jbe
mull
inc
lods
sbb
jecxz
mov
mov
aam
mov
cmp
mov
dec
jp
in
mov
gs
fisttpl
in
idivl
ja
xchg
cmc
jae
sub
jnp
divb
pop
cld
lods
fs
rcll
in
lds
aas
and
div
notl
add
cmp
ja
xor
jge
loopne
and
push
push
adc
imul
cmc
jns
jae
mov
push
xchg
test
aad
aam
cmp
in
incb
loopne
sbb
cmpsb
ret
stos
test
lcall
cmovle
into
sahf
lcall
sub
psrld
out
in
cmp
dec
std
xor
and
xor
scas
int3
mov
call
xlat
loopne
sub
js
frstor
pusha
mov
push
and
cmp
jbe
cmp
mov
adc
add
pusha
ret
sub
fidivrl
in
pop
mov
and
sub
and
in
xchg
fistpll
sbb
jb
push
loopne
mov
fldcw
jge
or
mov
push
or
mov
fisubs
sub
mov
push
clc
rclb
lret
repz
pusha
imul
mov
lock
out
mov
jo
adc
sbb
in
fwait
loopne
loop
scas
xchg
cmp
add
pop
bts
je
inc
pop
push
jge
inc
jmp
f2xm1
sahf
lea
pop
xor
call
pop
int
dec
cmpsb
js
push
xor
sub
ror
outsl
das
sbb
mov
dec
test
rorb
pop
psrlw
loope
xchg
cmp
aaa
cwtd
sbb
and
xor
int3
mov
in
cwtl
lock
fsubrs
into
and
scas
xor
mov
mov
out
shrl
add
mov
or
and
and
jbe
cmp
aad
cmp
aam
mov
and
sbb
xchg
movsl
lsl
test
movsb
fwait
jo
adc
and
shrl
mov
mov
xor
pop
dec
xor
push
xchg
bound
lahf
push
xchg
aaa
leave
mov
cmp
into
jg
inc
jno
pushf
sbb
or
lret
mov
test
lahf
sub
mov
push
and
mov
cwtl
icebp
jbe
ss
sahf
xchg
pop
and
xchg
leave
in
push
scas
imul
iret
pop
push
das
lods
jae
push
pop
aaa
dec
mov
add
sub
rorl
movsl
enter
push
xchg
outsb
jp
push
in
mov
fcoms
bound
dec
jne
mov
dec
cmp
pop
jmp
ret
addr16
iret
xchg
imul
nop
adc
pop
dec
sbbb
push
fsubrl
test
and
adc
add
inc
adc
push
sbb
push
add
cltd
ret
inc
movsl
add
push
cmp
stos
stos
xchg
popa
mov
std
cmpsl
rorb
jg
cmp
les
pop
mov
ret
add
mov
xchg
mov
sahf
into
mov
add
push
and
sub
mov
mov
repnz
inc
jae
add
adc
lea
dec
into
loopne
mov
cmc
cmp
sub
sti
nop
addr16
inc
iret
xor
sbb
out
jecxz
out
fldenv
or
pop
test
aas
mov
or
ja
jae
dec
repz
mov
jg
mov
fsubrp
aam
mov
xchg
cs
xorl
pop
and
inc
cs
push
pop
rcrb
push
outsb
mov
xchg
das
ror
xchg
fmulp
xor
inc
loopne
adc
scas
dec
sub
loop
and
mov
jmp
sub
mov
cmp
shll
int3
scas
xchg
stos
out
ja
sbb
push
ret
out
adc
mov
mov
sbb
push
mov
dec
les
pusha
test
mov
inc
sbbl
mov
xchg
jmp
cltd
sarl
shr
xchg
jns
pop
add
push
mov
xor
jb
dec
pop
mov
add
jne
test
cmp
dec
add
add
aas
sti
jbe
loop
sarb
push
arpl
lahf
je
insb
movsl
int
int
jg
pop
lea
ror
aad
jle
jl
jg,pt
push
loop
jbe
scas
jmp
mov
in
scas
mov
mov
stc
jle
dec
jno
or
orl
movsb
or
push
aas
add
js
filds
ja
jle
rorb
and
jbe
xchg
andnps
nop
enter
add
lods
aam
push
popf
outsb
jge
pop
in
jo
and
cmp
mov
mov
jge
push
mov
xchg
pop
pop
mov
stos
lds
sub
and
insl
fwait
push
cmp
mov
pushw
test
cs
dec
fcoml
jg
push
push
maxps
jae
jge
sub
mov
sub
cmp
les
addl
mov
movsb
insl
in
jo
add
mov
lds
or
or
sti
dec
pop
cmp
add
fdivl
sbb
inc
cmp
dec
dec
and
mov
lahf
mov
mov
into
mov
pop
sbb
or
cmpsl
rorl
mov
cmp
repnz
inc
outsl
fistps
in
xchg
daa
sbb
fmull
mov
mov
dec
arpl
inc
popf
cmpsb
fadds
dec
sar
cmp
fbstp
push
test
in
sub
cltd
cli
leave
mov
imul
pop
shll
fwait
inc
adc
adc
cmp
mov
mov
lds
cli
inc
stos
ret
les
sub
scas
dec
push
aam
js
stc
sbb
sub
mov
fldcw
cmp
mov
inc
hlt
adcl
cmp
lock
pop
fdivl
sub
and
std
cmp
test
pop
out
iret
cmp
push
sbb
std
push
mov
add
mov
divb
inc
call
das
jl
cmc
cmp
iret
loopne
sub
push
jmp
push
sbb
fisubrs
sti
cld
in
mov
push
popa
sub
sbb
and
rcll
or
cmp
lods
jbe
xchg
ret
or
cmp
aam
push
jnp
and
xor
push
xor
inc
test
xor
rep
jne
pusha
jecxz
inc
push
sub
push
rcrl
in
push
ret
lret
testl
lods
fs
es
xor
sbbl
sbb
lcall
and
ret
xor
rcrl
or
jo,pt
inc
enter
out
or
jno
inc
or
jl
icebp
out
and
js
hlt
mov
cld
pop
dec
and
mov
lahf
cwtl
xchg
push
pushf
repnz
adc
mov
push
push
outsl
lock
gs
xor
lods
adc
rcll
bswap
rcl
pop
inc
iret
in
pop
pop
push
shlb
and
pop
loopne
mov
jge
hlt
fiaddl
nop
jg
pop
insb
sub
xchg
jl
ret
jae
and
and
rorl
fidivrl
xor
stos
dec
add
push
inc
xchg
dec
mov
push
xchg
add
lock
out
xchg
push
pop
mov
pushf
mov
lcall
testl
rclb
shll
aad
add
sub
pop
add
je
sbb
xlat
cltd
jecxz
movsb
call
push
jg
inc
cld
add
cmp
pop
iret
pop
test
jo
pop
fdivp
jle
ja
test
push
or
bound
fdivs
adc
mov
adc
ss
jnp
pushf
sbb
aam
mov
rep
cs
pop
fisttpl
sbb
arpl
fdivl
jecxz
jo
repnz
inc
fdivrs
adc
push
xor
fs
loopne
sbb
sbb
lds
mov
scas
cmp
jp
mov
js
in
insb
adc
iret
inc
mov
ret
jecxz
jnp
adc
dec
push
xchg
es
mov
and
lret
xor
insb
push
loop
add
mov
cmp
into
lahf
orb
mov
jl
lcall
adc
add
imull
dec
shl
pushl
dec
sub
add
add
xlat
lds
xchg
dec
inc
or
cwtl
outsl
dec
clc
das
cmpsl
add
fcmove
pushl
cmp
push
ficomps
sub
shll
and
or
cld
and
sub
ret
and
call
repnz
dec
mov
mov
stc
mov
pop
test
jge
cmp
jo
cli
pushf
ficoms
jne
mov
mov
xchg
inc
push
unpcklps
inc
pushf
push
fwait
popf
dec
mov
and
inc
jns
ret
fdivrl
shl
test
mov
pushf
mov
pop
mov
jle
outsb
insl
sub
inc
rcr
xchg
pusha
movsl
inc
into
add
jmp
push
xor
jb
mov
mov
cmp
mov
ds
in
pop
cmp
add
or
aas
fldenv
mov
cmpsl
pop
ja
imul
mov
inc
mov
xchg
xchg
in
pop
jl
dec
cmp
sub
dec
test
xchg
fsubl
mov
popa
sbb
sbb
cmp
dec
addl
ds
aaa
movsl
xor
pop
insl
lods
movsl
mov
cli
leave
movsl
loop
loopne
idivb
add
push
cmpsl
mov
in
push
inc
lret
and
add
fidivs
xor
stos
mov
outsl
adc
pop
fcoms
call
add
test
daa
xchg
out
aad
fnstcw
xor
lods
lock
dec
pop
icebp
add
filds
xlat
fcmovbe
aas
shll
imul
dec
call
call
dec
jns
ds
or
jmp
out
xor
jb
dec
adc
xor
inc
cmpsl
and
push
push
es
jl
jnp
sti
sti
roll
mov
int
adc
jbe
xchg
add
and
push
mov
pushf
data16
add
rcrb
push
sti
data16
dec
ror
es
cmp
cmp
jns
xchg
sbb
in
push
dec
lds
xchg
push
jle
xchg
jle
js
imul
mov
iret
jg,pt
jl
mov
dec
arpl
jae
mov
iret
cmp
lahf
mov
fsts
cmp
stos
push
jmp
mov
outsb
inc
xchg
xor
sub
xchg
cmp
into
cmp
jnp
fisttpll
cmp
int
lods
cmpsb
adc
and
negl
inc
sub
inc
loope
daa
nop
lahf
xchg
aad
insl
repz
pop
ret
pop
call
sub
imul
adc
popf
xchg
xchg
scas
pop
pop
movsl
out
mov
dec
jp
push
sti
lods
call
stc
in
push
mov
or
stos
ret
shrl
cltd
or
mov
shll
out
lods
dec
cmp
mov
jg
mov
jl
test
sub
popa
fsubl
mov
jg
add
sbb
push
icebp
lcall
jbe
loop
jo
cli
jmp
xchg
in
cltd
jne
add
xor
cltd
roll
jno
insl
lock
cs
sub
pop
sbb
xlat
sub
adc
out
out
pop
nop
lret
aam
out
out
lcall
ret
sub
sbb
mov
jnp
aaa
jle
mov
xchg
push
xchg
mov
je
js
lds
mov
jecxz
fwait
mov
pusha
jp
out
rolb
sub
hlt
adcb
push
sub
lds
lea
fldcw
push
xor
test
lods
imul
std
pusha
cmpsl
aas
bound
jp
enter
dec
xchg
pop
clc
add
push
shlb
inc
mov
std
mov
mov
push
fwait
pusha
sbb
data16
pop
mov
mov
push
imul
mov
jnp
dec
dec
popa
arpl
aas
addr16
je
fbld
fwait
pop
push
int
mov
in
cli
andb
das
stos
idiv
ficoml
loopne
stos
add
lahf
lret
inc
or
xor
jno
push
xor
adc
sbb
rolb
xchg
mov
and
int3
repz
jecxz
ds
hlt
sub
out
js
xor
js
mov
xchg
cmpsb
lock
mov
sti
incb
sbb
mov
adc
mov
loopne
xchg
xchg
mov
jns
mov
test
test
mov
clc
jmp
jo
popf
mov
inc
add
pop
insl
pop
inc
insl
enter
outsl
aaa
adc
sub
movsl
shrl
dec
pop
imul
adc
xchg
jb
mov
xor
ja
rcr
mov
xor
jae
mov
jo
mov
cmpsb
mov
mov
add
cli
hlt
cltd
lods
pop
shlb
loopne
hlt
repz
movsb
mov
dec
add
mov
les
push
dec
stos
in
or
ret
jnp
pop
xchg
popa
stos
add
jmp
popf
icebp
das
jnp
popa
xlat
dec
dec
mov
aad
enter
in
sahf
mov
inc
jle
inc
pop
inc
aaa
mov
cmp
push
imul
inc
sbb
jno
sti
insl
and
adcb
std
test
ljmp
cmp
jl
fbld
sbb
push
rcl
not
dec
inc
mov
sub
rol
pop
enter
dec
lods
dec
pop
lods
or
cmc
pop
sahf
dec
adc
and
adc
jae
xchg
addr16
mov
and
dec
repnz
cmp
imul
mov
shrb
test
dec
xchg
hlt
outsl
cs
fisttpl
in
xor
das
ret
sbbl
push
mov
pop
sbb
xchg
test
fwait
cmpl
fwait
push
xor
sub
cmp
cmp
movsl
cwtl
ljmp
outsl
xor
pop
aad
fbstp
lods
lods
jmp
dec
test
dec
test
std
adc
xchg
pop
jno
ret
inc
fwait
js
bnd
pop
jo
and
and
cltd
les
dec
jo
sbb
sarb
mov
repnz
lret
and
pop
jnp
lods
mov
jb
mov
mov
lahf
in
cmpsl
or
xchg
or
pop
ljmp
add
int3
and
test
sbb
push
std
jbe
repz
repnz
insl
stos
lcall
daa
lds
std
jmp
xor
push
sarb
jl
test
or
cltd
outsb
in
mov
push
push
out
ljmp
cmp
cwtl
in
aad
rorb
iret
outsl
sbbl
fnstsw
push
imul
xor
fldenv
fwait
xor
adc
in
inc
sti
pop
pop
pop
aas
loopne
mov
pop
adcl
jns
push
daa
mov
pop
in
jbe
add
je
ss
adc
cli
in
jns
js
pop
or
mov
jno
cmp
bnd
daa
mov
in
mov
pop
dec
add
mov
int3
adc
daa
push
push
fildl
push
mov
shlb
add
mov
hlt
arpl
push
mov
imul
jmp
cmp
mov
adc
xchg
dec
lret
push
pop
xor
xchg
insb
jle
mov
inc
pop
xchg
out
add
jge
adc
sub
jp
aad
pop
xor
push
rcrb
scas
outsb
jge
jne
cmp
sarl
faddl
push
ret
movsb
push
cmp
mov
ret
testb
loope
mov
in
adc
stc
sub
push
sub
pop
push
jnp
xor
sarl
push
add
jne
add
sub
mov
lds
mov
mov
mov
mov
test
jle
aaa
fnstsw
sbb
and
jle
leave
ficompl
scas
push
jmp
repnz
pop
enter
mov
aaa
rolb
imul
jae
orb
inc
popl
arpl
pop
add
and
xor
sarb
repnz
adc
adc
or
pusha
repz
call
dec
sub
lret
fcoms
cmovg
cltd
mov
push
test
pop
cmp
inc
sahf
sub
scas
in
stos
mov
cmpsb
lahf
out
adc
incl
adc
addl
mov
das
pop
test
mov
mov
xchg
or
rcll
lret
xchg
cmc
add
lock
shlb
add
pop
movsl
bound
mov
jae
jb
jne
roll
adc
cmp
cs
es
or
sahf
sarl
or
mov
test
js
idivl
fbstp
push
cmp
mov
xchg
repz
sub
add
sbb
jno
jecxz
cmp
add
add
sbbl
jo
mov
dec
cmp
outsl
into
addr16
mov
cld
sub
mov
pop
mov
in
or
mov
iret
add
sbb
iret
dec
outsb
iret
pop
aaa
js
and
fmul
push
dec
psubq
enter
inc
std
xchg
scas
and
stos
jle
lcall
cmp
loopne
push
or
movsl
push
ljmp
fsts
xor
inc
xchg
sbb
and
jno
pop
add
test
jae
ljmp
pop
shl
adc
fsub
sub
cmp
in
fstl
iret
loope
jne
dec
cltd
pop
jb
pop
fdivrp
test
outsl
adc
int
repz
mov
push
aas
jmp
pop
pop
aad
sub
adc
mov
xorb
lds
or
mov
xor
lds
aam
sbb
push
inc
dec
mov
push
pop
test
xor
mov
xor
xchg
xor
adc
gs
jb
inc
jp
inc
mov
and
in
mov
test
cmp
daa
lea
insb
sti
dec
js
xor
stos
repz
movsl
test
jecxz
mov
data16
mov
imul
push
add
cmpsb
jecxz
xor
mov
sub
push
ljmp
mov
cli
add
sbb
push
jp
xor
pop
jecxz
gs
cli
cmp
in
sbb
pop
dec
test
mov
mov
stc
dec
ret
mov
add
lcall
into
ret
adc
add
stc
sbb
mov
or
les
ret
add
xchg
pop
pop
mov
jecxz
insl
dec
fsubrl
lahf
sbb
test
sub
loope
jg
mov
test
test
jg
arpl
fists
cltd
cmp
pushf
lock
jecxz
push
xchg
push
add
add
out
xor
xchg
leave
xchg
hlt
mov
dec
mov
push
inc
fucomip
xor
sti
jl
xor
push
push
bound
xlat
loope
fstps
jle
cmpsl
dec
pop
pushf
xchg
rol
add
adc
mov
cmp
ja,pt
dec
xchg
sub
or
mulb
repnz
and
and
jno
sti
cltd
jae
enter
jbe
jp
inc
jb
xor
push
mov
lret
push
push
push
lods
cmp
adc
jl
daa
ljmp
mov
rorb
dec
xor
scas
mov
mov
call
sub
iret
push
jbe
pushl
pop
lea
insl
inc
xchg
int3
aad
jmp
cli
or
jo
add
outsb
xchg
sub
pop
push
push
jecxz
pop
in
sub
aam
shll
mov
mov
sub
and
or
lds
mov
push
add
adc
inc
jmp
add
icebp
pop
sbb
push
lods
xchg
lods
test
xor
pop
cmp
insl
sbb
dec
mov
and
cmp
or
push
cli
les
sbb
inc
aad
int3
xchg
adc
sbb
or
repz
mov
mov
add
push
gs
pop
icebp
into
xor
push
jns
rcll
mov
xor
jecxz
icebp
inc
test
jmp
push
sbbb
push
mov
jae
loope
aas
lods
ret
push
cltd
loop
test
scas
sub
xlat
xchg
aaa
lds
fwait
cmp
les
loopne
xchg
jae
aad
xor
inc
iret
sub
popa
in
add
pop
dec
out
mov
icebp
repnz
adc
aaa
imul
pop
ljmp
stos
mov
loop
sbb
lahf
mov
subl
lods
mov
arpl
std
adc
insb
dec
push
repz
jp
sbb
or
mov
jg
sub
movb
mov
mov
arpl
add
dec
mov
iret
fbstp
jbe
mov
add
test
xor
jecxz
stc
xor
or
xchg
adc
pop
ja
cmp
sbb
mov
shr
jge
cmp
insl
fst
mov
clc
lret
add
mov
pop
sub
movsb
sbb
pop
and
loope
stos
sbb
or
scas
jb
fstp
dec
mov
push
loop
mov
sub
outsl
aad
mov
pop
mov
pop
ljmp
xchg
ret
rolb
xchg
into
mov
in
out
dec
adc
out
mov
pop
dec
ficoml
nop
lock
mov
jbe
and
test
insl
xor
inc
xchg
negb
jb
xlat
pop
jae
and
fists
cmp
ret
xchg
outsb
dec
cmpsb
clc
add
cld
jno
xchg
dec
jbe
mov
das
adc
outsl
ds
push
mov
stos
add
sti
or
pop
scas
cld
jno
or
push
decb
fistpl
iret
and
loop
les
lret
jecxz
mov
adc
and
cmc
add
xor
sub
popa
lock
ss
ss
popa
popf
cmp
jmp
fmul
jb
and
push
cmpsb
iret
aam
or
cmc
and
dec
jns
idivl
xchg
aaa
push
mov
inc
cmp
xor
and
add
mov
cld
daa
out
mov
fdivrs
push
in
or
inc
xchg
jae
cmp
outsl
xchg
enter
cmp
dec
jge
adc
cmp
xchg
nop
xchg
rcrl
int3
shrb
jae
adc
sub
fiaddl
adc
dec
rcl
add
fistl
out
and
pop
mov
rcrl
out
gs
inc
adc
dec
add
adc
lret
inc
lret
test
jecxz
fs
je
data16
xchg
adc
int3
test
mov
outsb
loop
inc
mov
sbb
mov
inc
psubw
pop
popf
bound
stos
bound
shll
add
cltd
out
repz
mov
aaa
cmp
cmp
movsb
popa
mov
fldcw
push
sbb
enter
add
pop
shl
lea
or
or
xlat
push
mov
pop
in
push
cmp
lret
jecxz
int3
jle
xor
lahf
add
dec
mov
jle
xchg
inc
test
xchg
cs
jecxz
jbe
mov
add
out
pop
out
sahf
jns
mov
dec
jns
aaa
pop
cltd
jnp
mov
jns
pushf
mov
pop
jl
clc
hlt
out
lds
mov
pop
hlt
sahf
ret
daa
in
ss
mov
xchg
lea
leave
inc
or
hlt
or
mov
imul
stc
dec
mov
mull
lcall
insl
pop
leave
push
mov
nop
jmp
inc
inc
aam
scas
mull
les
into
test
inc
inc
int3
dec
mov
add
jnp
lods
cmpsb
movsl
repnz
int3
jae
cmpsl
cmp
adc
ret
mov
mov
rcrl
xchg
xor
xor
call
shl
lret
jle
sub
xchg
fidivs
lret
mov
loopne
add
mov
in
insl
fsts
int
daa
bound
mov
iret
popa
sbb
mov
pop
scas
repz
testl
fdivrl
pop
adc
cmpsb
jb
push
push
push
add
fstps
jle
sub
ja
rol
aam
lret
inc
mov
xlat
mov
clc
cmp
jbe
sbb
dec
xchg
mov
outsl
fnstcw
cmp
sahf
mov
call
xchg
jae
pop
sahf
inc
dec
push
div
bound
icebp
adc
out
add
jmp
dec
incb
adc
pop
pop
les
pop
jle
sbb
andb
dec
dec
inc
pop
push
jb
addr16
mov
into
popf
adc
mov
mov
fwait
stc
dec
xchg
in
sub
sti
repz
xchg
xchg
nop
adc
inc
nop
sbbb
push
test
dec
pop
pushf
outsb
mov
mov
sbb
popa
jp
fnstsw
mov
adc
stos
pop
fs
fistl
cmp
shld
jne
cwtl
les
mov
shrl
lret
ja
hlt
in
mov
hlt
mov
mov
adc
sub
add
bound
push
pcmpeqd
aad
push
adc
cmp
popa
js
out
mov
ja
sbbl
in
cmpsb
pop
push
outsb
testb
and
pop
dec
xor
fldt
jb
je
mov
ljmp
adc
xchg
imul
xchg
inc
adc
stc
pop
pop
cli
lea
clc
out
shll
jns
mov
rolb
in
loopne
fs
pop
mov
inc
fwait
mov
xchg
jne
sbb
int
xlat
in
push
movsb
mov
das
jb
inc
decb
insl
test
push
jno
sti
shll
pop
xor
sbb
dec
and
movsl
mov
scas
movsb
int3
movsl
sub
mov
inc
outsl
fcomps
cmpsl
mov
aaa
pop
xor
bts
repnz
dec
loop
sti
add
jl
xlat
push
pusha
fcmovu
out
out
andb
gs
sbb
outsb
dec
lea
test
or
les
mov
sub
xor
push
out
sti
cwtl
pop
jp
add
out
jg
subl
test
arpl
add
pop
cli
push
add
xorb
mov
push
mov
in
dec
jno
jle
jmp
outsl
rolb
pop
sub
adc
shrl
das
das
xchg
push
lods
imul
sub
into
xchg
xor
adc
in
stos
xor
scas
popa
cs
mov
popf
les
push
int
fcmovb
adc
loope
inc
insl
jb
jmp
jns
sub
out
jecxz
pusha
rcrb
push
cmp
ja
lods
dec
orl
shrb
cmp
inc
lcall
clc
xor
and
xlat
lds
lret
jae
in
jnp
pop
into
and
sbb
mov
mov
rcrl
pusha
clc
je
out
jbe
mov
inc
mov
clc
das
push
fs
repz
fiadds
add
mov
std
ja
dec
std
mov
jle
push
and
adc
or
pop
xorl
dec
fmull
jns
out
cmpsl
pop
xor
add
sahf
nop
int
jle
adc
xor
sbb
inc
push
xchg
jb
hlt
imul
pusha
outsl
cmp
add
les
fdivs
inc
adc
test
sahf
outsl
imul
mov
mov
jmp
xor
mov
or
dec
and
sbb
push
mov
cltd
mov
es
inc
leave
imul
or
adc
xchg
out
test
add
test
ds
push
nop
insb
jg
xlat
xchg
xor
dec
arpl
ret
pop
add
push
js
imul
pop
mov
xchg
adc
dec
int3
popf
bound
rolb
pop
sarb
popa
fmul
mov
ret
add
and
daa
enter
repnz
adc
mov
or
jmp
lcall
cltd
in
call
inc
fcmovnb
ljmp
repnz
xorl
pop
outsl
inc
enter
lock
les
shrl
es
sbb
dec
xchg
test
jbe
xchg
xor
jne
scas
sub
xchg
xor
lcall
push
mov
sub
call
icebp
inc
in
addr16
dec
call
ja
jae
add
ss
lret
loopne
std
cltd
pusha
gs
in
mov
insl
sub
cmpl
jo
mov
fs
cmpsb
out
xchg
push
sbb
cmpsw
push
fcomps
out
adc
jno
rcl
lock
cmp
sub
dec
mov
inc
aaa
mov
testb
pusha
jp
sar
mov
pop
pop
dec
add
aas
cmp
cli
sbbb
jae
inc
and
lcall
push
inc
pop
and
sub
addl
mov
pop
mov
out
cmp
cmp
fwait
cmp
popa
iret
sti
jecxz
jns
xchg
mov
adc
nop
lods
es
lahf
leave
fistps
xchg
mov
mov
dec
mov
popa
push
push
jo
adc
rolb
push
das
shlb
addr16
and
popa
or
sbb
out
insb
into
jle
call
pop
jns
cmp
repz
call
inc
in
and
cmp
movsl
mov
out
mov
lahf
jl
and
add
sub
daa
lods
xchg
lods
incl
out
cmovnp
and
and
leave
imul
rol
sti
insb
into
into
rcr
cmp
movsb
loopne
pop
in
pushf
cmp
movsl
push
inc
cmp
stc
mov
mov
fmul
add
dec
inc
cmpl
ret
mov
repz
outsb
cltd
jecxz
icebp
adc
push
fisubs
sbb
cmpb
ds
adc
push
repz
loopne
movsl
adc
lcall
mov
ja
lret
jno
jge
aad
jmp
mov
rolb
push
dec
adc
out
push
dec
repz
stc
xor
in
arpl
loop
ret
mov
push
arpl
sahf
outsb
push
fisttpl
call
sarl
arpl
cli
repz
mov
fadd
push
mov
add
add
fcomps
ror
hlt
mov
movsl
mov
outsl
cmp
jp
lods
orb
or
aam
pop
xor
inc
pop
icebp
mov
shrb
out
adc
daa
xchg
repz
mov
push
int
insl
xchg
lretw
nop
das
xchg
cmpsl
adc
sub
outsw
mov
nop
frstor
mov
adc
xchg
mov
xor
inc
push
decl
adc
mov
fucomip
mov
cmp
insb
pop
dec
in
or
mov
xor
and
cmp
jg
mov
cs
mov
jmp
fwait
sub
mov
push
and
push
jo
cmp
or
popf
adc
lahf
adc
rolb
pop
push
orb
sti
mov
push
jne
xchg
dec
cmp
xchg
push
push
fs
jb
and
aam
sbbl
inc
push
mov
leave
mov
jmp
jno
mov
gs
inc
dec
lods
out
or
imul
lret
or
jl
loop
push
pop
adc
mov
mov
sahf
mov
push
cld
aas
loop
leave
iret
aad
cmp
iret
es
fists
mov
and
sub
imul
in
xor
jnp
in
and
and
shr
and
inc
mov
jle
adc
sbb
out
push
and
mov
add
das
roll
adc
clc
xchg
aam
aas
dec
shll
mov
lret
jb
dec
cmc
loope
sbb
mov
out
xchg
sub
jecxz
imul
push
fadds
mov
insb
cmp
pop
xor
mov
in
rclb
and
cwtl
jne
es
lea
cmp
out
stc
and
push
mov
jo
std
mov
rol
cmp
cmpsl
popa
mov
sbb
jne
int3
push
push
fmull
xchg
das
sti
push
pop
dec
aam
push
mov
cmp
add
mov
pop
arpl
cmpsb
nop
sbb
clc
repnz
cmp
push
popa
mov
inc
add
not
in
mov
cmp
mov
lods
pop
push
and
cltd
jmp
mov
xor
xchg
push
adc
cmp
lret
aaa
test
hlt
lock
arpl
fdivrl
add
das
mov
shrl
mov
loop
in
clc
jae
jl
faddp
scas
mov
mov
mov
xchg
push
dec
mov
or
xlat
ljmp
jle
dec
sub
inc
das
out
mov
cwtl
fnstcw
and
cmp
sub
cwtl
lods
mov
shr
jmp
mov
cli
lods
mov
mov
or
lahf
iret
mov
aaa
or
mov
or
jo
pop
jno
ds
cwtl
sbb
cld
sbb
in
xchg
cmp
in
sbb
inc
jle
int3
rorb
mov
adc
fadds
ja
xor
push
and
scas
in
pop
loop
jg
divl
fwait
nop
hlt
sub
xchg
pusha
pop
push
cmp
sub
insl
inc
aad
mov
addb
mov
jecxz
cmp
gs
xor
inc
xor
mov
test
push
jnp
in
mov
sub
inc
sub
adc
dec
xchg
push
dec
sbb
push
add
leave
jo,pn
aam
jo
inc
pop
dec
mov
daa
jg
out
imul
xor
push
shl
mov
lods
pop
movsb
jle
adcl
cmpl
jle
push
cs
jne
xorb
mov
jne
pop
fistps
cmpb
ret
cwtl
or
mov
fstl
scas
pusha
xor
jp
inc
adc
mov
sub
mov
jecxz
mov
lods
dec
call
push
jmp
in
jl
testl
jp
arpl
and
mov
outsb
and
xchg
decb
fistps
rcll
outsl
fnsave
leave
mov
lds
adc
push
mov
or
aaa
addr16
test
sti
insb
int3
movsl
mov
or
lods
sahf
fbstp
stos
mov
add
ret
stc
and
add
xlat
sub
nop
sub
mov
cli
dec
xchg
adc
adc
mov
adc
jns
add
aad
movsb
out
mov
jcxz
adc
cmove
dec
xchg
and
cmp
rcrb
jle
mov
mov
mov
sub
gs
rcrb
push
adc
movsl
xchg
loop
repz
aam
ljmp
add
xchg
mov
add
mov
mov
mov
mov
add
mov
iret
outsl
pusha
pop
out
adc
xor
int3
sub
jno
ficoms
add
inc
std
pop
lcall
jo
pop
outsb
sbb
or
imul
add
pusha
adc
out
repz
or
sbb
xor
scas
lret
mov
scas
stc
push
fstpl
mov
js
dec
test
std
enter
cmp
insl
adc
ret
hlt
stos
mov
mov
push
mov
xlat
mov
push
cwtl
gs
ss
popf
dec
mov
xor
loop
mov
mov
inc
ljmp
rcrl
mov
cmc
jns
or
xchg
shll
ret
mov
lret
mov
add
mov
jne
pop
test
dec
push
les
pushf
sbb
test
mov
xor
push
repz
sbb
or
in
mov
mov
push
mov
push
xlat
inc
int3
push
push
jno
popa
and
or
imul
movsb
xor
sub
xchg
inc
pop
idiv
jns
adc
std
cmp
insb
inc
push
dec
jns
and
jmp
shlb
fistpll
sbb
pop
test
loopne
fdivrs
mov
and
adc
mov
fsubs
movsl
fcmovb
sub
push
pop
dec
imul
and
pop
test
or
mov
push
add
shll
xor
ret
testb
out
xor
jp
xlat
lock
sbb
cs
or
aaa
mov
and
jecxz
pop
addr16
ja
sbb
jae
mov
leave
jbe
mov
out
pop
loop
out
mov
sub
cmp
add
sbb
cmp
and
push
mov
cli
sub
sbb
lods
cmc
sar
mov
cmp
je
fnstsw
xor
orl
xor
movsb
bound
cmc
jns
sbb
jbe
inc
pop
inc
xlat
je
das
lods
cmc
xor
or
rcrl
and
push
leave
jg
mov
inc
mov
in
ss
sub
xchg
add
mov
jle
or
xor
push
ds
sbb
rep
arpl
int
popa
loop
or
mov
jne
push
cli
and
push
adc
push
in
cltd
mov
nop
setne
sub
in
lds
das
and
jge,pn
nop
sub
imul
ret
inc
push
scas
ljmp
ss
pop
fsubl
outsb
loope
or
mov
sub
sub
mov
and
mulb
lcall
dec
sahf
cmp
fldl
inc
push
mov
sbb
outsb
cmpsl
repnz
and
loopne
adc
mov
enter
push
pop
jo
pop
scas
cmp
sub
in
push
mov
and
test
inc
cmpsb
int3
rclb
and
in
xchg
fsubl
call
orb
outsl
mov
push
add
cld
mov
loop
push
aam
inc
aam
aad
mov
loope
in
lret
dec
mov
xchg
inc
inc
mov
andb
cmp
jp
aad
push
jbe
jae
sbb
inc
sub
loop
test
aaa
adc
hlt
cli
idivb
push
fsub
insb
aas
cltd
dec
xchg
push
stos
mov
sbb
xchg
arpl
shll
cmp
adc
sbb
rclb
addb
pop
imul
xlat
dec
mov
pop
fwait
notl
roll
mov
imul
mov
dec
sub
into
ret
lcall
lret
mov
jb
imul
or
push
jl
loop
inc
sbbb
cld
loope
cmp
xchg
or
movsb
es
pushf
sub
bound
xlat
adc
push
fadd
xor
rclb
mov
repz
scas
cmp
dec
cmp
mov
js
fstp
cmp
int3
pusha
xor
xchg
adc
ds
mov
fwait
and
mov
jle
sub
push
jno
stos
pcmpeqd
push
push
adc
stos
mov
clc
push
add
pop
cmp
arpl
aas
addb
push
xor
and
outsl
std
fwait
repnz
loopne,pn
dec
push
pop
hlt
xor
and
adc
mov
and
ficoms
add
not
mov
icebp
and
loopne
in
lds
jmp
push
into
mov
enter
mov
mov
cld
mov
mov
mov
mov
outsl
mov
mov
jl
addr16
push
pop
out
shll
mov
pop
push
sarl
or
pop
inc
jge
push
cmp
pushf
xchg
jo
mov
mov
dec
mov
cmpsl
mov
imul
jecxz
cmpsl
jno
iret
pop
pop
xchg
cmp
jp
aad
ljmp
out
fwait
int
scas
mov
or
and
add
lret
nop
imul
push
cmp
mov
pop
mov
lret
cmp
negl
xchg
jge
in
adc
push
xor
stos
sub
pop
test
imul
dec
or
int3
xor
lret
push
mov
mov
xor
push
out
mov
ret
aaa
scas
push
rcl
cmp
sbbl
cmc
scas
inc
mov
dec
dec
jo,pn
pop
push
sbb
rol
push
std
idivl
push
stc
int
xchg
sbbl
mov
sbb
jecxz
mov
gs
xchg
lock
ljmp
jne
lret
lss
into
push
aad
sub
inc
lret
push
jo
stos
fwait
sub
fsubl
jb
or
test
icebp
test
inc
dec
dec
stos
movsl
roll
in
int
sbb
inc
hlt
orl
out
cli
bsr
push
mov
mov
arpl
mov
lods
inc
xchg
xchg
cltd
dec
arpl
cmp
mov
sbb
imul
jno
mov
aad
das
je
andb
jne
call
loopne
push
jg
add
and
mov
sub
add
adc
xchg
das
and
mov
sub
push
xchg
jg
out
pop
adc
and
cmc
pusha
push
push
lcall
stos
loope
lds
sbb
adc
and
xchg
jne
outsl
mov
movsb
in
sahf
sub
xchg
jl
sub
loope
pop
out
mov
xor
rcrb
sbb
dec
lods
lock
mov
mov
sti
adcl
lcall
mov
sbb
jno
pop
push
pushf
dec
out
jmp
popa
jo,pn
xor
ror
sarb
sbb
pop
dec
or
iret
fisubrs
test
aam
cli
xchg
adc
pop
nop
and
mov
mov
fadds
into
jle
pop
mov
out
pop
fcmovnb
dec
jg
dec
rcr
mov
in
data16
pop
std
mov
pop
ret
inc
pop
jg
dec
mov
outsb
mov
lods
std
xchg
xor
cmp
popa
mov
dec
aaa
pop
in
or
jnp
and
push
out
out
jl
fadds
int3
fisttpl
inc
pop
pop
test
cmpsb
xchg
mov
xchg
xor
mov
shll
test
mov
aad
call
xor
int
mov
rolb
stos
push
dec
mov
in
je
addr16
and
xchg
push
inc
mov
mov
scas
rorl
mov
shl
aas
jge
jle
jnp
adc
jl
push
mov
lahf
inc
rcr
add
das
ret
sub
mov
fisttps
pop
jecxz
jno,pt
xchg
sbb
push
jmp
adc
add
push
jmp
add
call
sub
inc
inc
dec
xchg
pop
clc
push
inc
imul
mov
cltd
lds
cltd
aam
pop
pop
jg
notl
adc
ficoms
cmp
in
shrb
push
mov
mov
test
pop
dec
or
fs
lock
ds
push
sub
in
jb
ficomps
icebp
sti
loope
add
mov
jae
and
es
mov
jp
popa
mov
add
mov
repnz
adcb
dec
jae
ds
mov
ljmp
aad
int
mov
or
inc
push
sub
or
mov
outsb
shll
jmp
movsb
cmpsl
movsb
outsl
sahf
inc
loope
push
mov
mov
sub
sub
jecxz
mov
fdivrl
aaa
mov
outsb
cmp
mov
or
cmp
call
aaa
pop
clc
sbb
std
xchg
arpl
in
pop
xor
cmp
sub
clc
cs
das
mov
xor
xor
std
mov
sub
cmp
push
dec
clc
sbb
ja
push
aaa
rclb
mov
or
lods
nop
xchg
push
outsl
pop
xor
xchg
mov
cs
pop
jp
cmp
jae
fstpt
mov
nop
cli
dec
add
xchg
in
cmp
sti
in
bound
sbb
test
and
out
add
decl
pop
pusha
lret
lcall
popa
fnsave
push
and
jbe
aaa
and
lods
addr16
adc
std
sbb
push
lock
mull
jmp
cmp
mov
aas
loop
in
in
mov
add
insb
inc
inc
pop
out
stos
aad
test
mov
mov
mov
or
xor
xchg
add
mov
inc
cmp
push
int
mov
hlt
outsb
or
pushf
lcall
jecxz
js
icebp
test
test
pop
xor
je
dec
out
xchg
stc
js
mov
mov
js
inc
mov
cs
or
add
lods
pop
popa
add
or
push
and
icebp
ss
mov
test
lret
dec
mov
int3
mov
lods
int
pop
ljmp
outsl
mov
and
loop
test
leave
xor
daa
lcall
pop
ja
dec
mov
imul
jns
repnz
cld
ficompl
jae
pop
mov
lret
sarb
cmp
sbb
out
inc
jnp
jbe
test
mov
imul
insl
lcall
es
cmpsl
sbb
inc
das
adc
mov
jp
and
ret
push
imull
ret
mov
xchg
mov
pop
dec
out
lods
decl
and
xchg
jo
cmc
jle
push
jbe
loopne
dec
nop
xchg
inc
ret
shlb
xchg
adc
push
sti
sub
mov
addr16
xorb
push
sti
lods
aad
xchg
xchg
jmp
sbb
aaa
nop
mov
jmp
mov
shll
and
add
cmpsl
arpl
push
clc
push
ret
mov
add
aaa
mov
fstl
test
sbb
inc
mov
cmpsb
in
leave
aad
push
out
ja
push
das
sub
mov
add
mov
iret
mov
push
push
inc
lock
fimull
cmp
push
cmp
sub
arpl
pop
cmp
sbb
rclb
gs
sub
dec
xchg
mov
xchg
pop
jg
pop
cmp
rclb
xor
inc
fimuls
jns
xchg
push
into
call
xor
icebp
filds
clc
mov
test
daa
adc
mov
outsb
jl
push
addr16
xor
insl
add
push
inc
mov
sub
jle
pop
std
sbb
add
leave
pop
mov
push
pop
into
push
out
ljmp
stos
mov
icebp
lock
add
xor
and
ret
fisttps
fidivrs
and
xchg
icebp
xor
mov
xor
xchg
jo
and
loope
ret
cmpsl
cwtl
insb
fldt
rorb
and
into
inc
leave
inc
hlt
cld
and
sbb
inc
inc
repz
dec
adc
cmp
mov
push
push
jns
xor
jno
loop
mov
inc
call
push
arpl
imul
out
fld
imul
xlat
and
push
dec
dec
mov
out
sbb
cmp
imul
pusha
nop
fstpl
fwait
jae
bound
fsubl
and
jb
xchg
xchg
mov
repnz
sub
mov
dec
adc
daa
push
ror
test
pop
loop
mov
sbb
inc
xorb
lds
push
mov
andps
xchg
adc
cltd
loop
aad
or
fwait
push
inc
sbb
mov
in
test
inc
fwait
ljmp
inc
movsl
movsb
daa
addl
jmp
movsb
mov
inc
rorl
or
xor
fidivrs
and
cmp
mov
pop
outsl
incl
test
fcmovu
fs
movsb
push
hlt
push
lahf
imul
xor
cmp
mov
lods
inc
xor
bound
or
and
adcl
or
adc
cmp
mov
inc
dec
dec
mov
ja
push
movsl
xchg
jle
nop
or
inc
cmpsl
into
dec
out
push
pop
or
sub
addr16
cmpsl
lods
orl
movsl
jp
adc
mov
or
rcl
lock
ja
ret
jns,pn
mov
ljmp
inc
and
int
in
sub
sub
adc
pop
sub
mov
mov
ret
push
mov
cmpsl
jae
ss
cmp
icebp
sbb
jmp
sub
cmp
xchg
mov
cmp
sti
dec
repz
loope
jge
loop
xor
cmc
notb
jnp
shlb
pop
int
je
dec
clc
stc
jl
jbe
test
adc
fstpl
lds
shlb
xchg
cwtl
test
cwtl
dec
ja
ja
xchg
xor
mov
ret
cltd
je
jae
stos
scas
lahf
xor
inc
fs
ja
xchg
popf
adc
sbb
fists
inc
sub
into
test
cmp
rorl
lds
push
out
hlt
xlat
stos
jmp
and
fistpl
add
insl
popl
xchg
mov
mov
mov
adc
mov
jb
xchg
in
mov
or
and
dec
xchg
mov
fistpl
out
mov
cmp
ret
add
stos
gs
sub
cmp
pushf
sub
mov
lret
dec
sub
cmc
push
cli
lds
pop
test
pop
add
js
cwtl
xchg
in
jbe
mov
jno
sub
pushf
cltd
jne
adc
int3
or
push
xor
mov
sarl
sub
push
enter
lods
jo
jo
ljmp
out
xchg
mov
jl
rclb
xchg
insl
inc
outsl
mov
mov
mov
popf
arpl
mov
fmuls
lods
mov
testb
dec
cmp
cltd
or
inc
mov
in
into
popa
inc
push
leave
int
cmp
fidivl
xchg
mov
es
js
cmp
fisubs
push
movsl
gs
js
pop
pop
pop
push
cmp
pop
add
imul
xor
mov
je
testb
pusha
std
jbe
push
ljmp
fwait
xchg
lea
popa
into
push
enter
mov
repnz
loope
jle
movsl
fistpll
ljmp
shlb
cltd
into
xchg
loope
adc
adc
out
mov
ljmp
lret
ja
maxps
mov
cld
in
lret
xor
sbb
shrl
push
test
fwait
pop
jns
cmp
imul
aad
rol
mov
lret
loope
pop
out
push
jnp
iret
mov
scas
or
enter
xor
xchg
aad
push
pop
test
imul
repnz
std
push
loopne
cmpsb
cs
mov
mov
dec
loopne
mov
mov
lea
arpl
push
ffreep
cmpsl
adc
outsl
mov
loopne,pn
xchg
cmpsl
pushf
pop
pop
mov
in
dec
adc
fcoml
sub
pop
sub
arpl
daa
cmp
mov
or
xlat
cmp
jo
sarb
push
sub
xchg
or
or
lret
cmpsl
inc
dec
mov
test
dec
xchg
shl
repz
fidivrs
leave
mov
scas
mov
pop
loop
cmp
loop
jb
dec
pop
pop
push
xchg
lahf
lret
ret
fsts
sub
pop
mov
push
push
leave
pop
int
xchg
mov
in
cltd
test
inc
cmp
sbb
inc
gs
sbb
bound
jle
ljmp
fwait
push
mov
fldenv
fldenv
mov
iret
nop
xor
sbb
mov
and
mov
pop
mov
fwait
and
fs
jb
inc
dec
std
dec
movnti
mov
cwtl
repz
fbld
sub
dec
or
lods
xor
push
cmp
dec
push
mov
dec
cmp
push
stc
pop
rorb
fldl
add
outsb
stc
push
in
and
sbb
mov
jae
add
push
idivl
sub
cmp
add
sub
lods
mov
or
flds
gs
scas
mov
insb
icebp
decb
aaa
push
pop
insb
push
cmp
movsb
mov
nop
mov
lods
call
cs
addb
mov
sbb
cmp
inc
insb
int
shll
xchg
xchg
lret
daa
jae
dec
mov
test
out
icebp
loope
dec
sub
sub
mov
fldl
ror
cmp
popa
xchg
jl
outsb
inc
std
mov
pop
sbb
dec
xchg
mov
mov
xchg
jne
pop
xchg
xchg
mov
pop
movsl
dec
aas
les
cmpsb
push
inc
stos
sub
pop
pop
scas
lods
shrl
pop
pop
orl
and
mov
arpl
cs
pop
cmpsl
inc
xchg
sub
gs
mov
jge
imul
lahf
cs
rcr
ja
pop
cmp
sub
movzbl
sarl
cli
jp
pop
xchg
test
push
cmp
out
or
push
cwtl
rcrb
jp
mov
mov
jge
inc
push
mov
jge
leave
and
repnz
call
fs
cmp
and
push
insb
aaa
add
add
mov
pop
push
andb
adc
dec
lock
cmpsl
adcl
mov
mov
jmp
pop
sub
push
mov
insb
mov
inc
xchg
sub
jae
fiaddl
lcall
pop
adc
rcrl
xlat
loope
xchg
test
jno
xor
negl
push
popf
pop
jecxz
jns
pop
or
pxor
inc
push
into
add
mov
dec
sub
pop
xchg
lret
outsb
scas
ljmp
test
sub
movb
cs
xchg
mov
loop
pop
enter
fcmovne
sub
in
adc
inc
cmp
xchg
mov
xchg
pop
insb
adc
push
jns
or
jmp
cmpsb
jns
dec
adc
mov
mov
jb,pn
and
xor
xor
pop
cmp
mov
lock
int3
jno
stos
mov
out
pushf
lods
fisubrs
gs
div
repz
lea
mov
xchg
stos
adc
fdivs
lods
xchg
fwait
push
addr16
xchg
fidivs
test
outsb
dec
loope
xor
dec
pop
push
pop
insb
jg
rsqrtps
lods
ret
xor
jno
dec
rolb
add
push
loop
or
jns
jae
jb
adc
test
in
mov
adc
sbb
adc
sbb
adc
mov
push
xlat
aaa
out
lods
push
nop
dec
mov
mov
jecxz
add
push
test
repz
nop
arpl
pop
movsb
inc
subb
outsl
mov
inc
in
popf
mov
xchg
sub
pusha
fstpl
rclb
incl
add
mov
cs
fcompl
push
cs
xor
mov
xchg
popa
adc
dec
pop
lds
fcomps
hlt
insb
add
ljmp
inc
aas
push
mov
push
inc
popa
push
jo
adc
leave
xchg
out
fisubs
add
inc
mov
mov
in
xor
movsl
push
cmp
mov
imul
loope
js
jb
jmp
test
lahf
xchg
pop
lret
jmp
adc
cmp
pushf
mov
add
mov
push
adc
mov
fcmovu
pop
js
push
mov
sahf
xchg
int
stos
aad
idivl
xchg
or
push
add
aas
mov
enter
jl
mov
jnp
mov
cmp
adc
dec
arpl
mov
outsb
cmp
push
shll
inc
arpl
xlat
scas
fists
lahf
xor
fcoml
and
add
cmp
stos
mov
inc
jnp
gs
inc
in
xor
insb
clc
xchg
adc
repz
adc
sbb
mov
fs
lea
popa
aaa
mov
push
sarb
inc
push
xchg
out
mov
xchg
mov
lods
jp
xchg
cmp
push
or
xchg
or
push
cli
movsb
subl
sub
push
loope
add
andl
xchg
push
inc
test
inc
lea
xchg
into
add
aam
mov
in
ss
lret
ds
in
cmp
sub
cmp
aad
es
sbb
cmp
add
std
cmp
pop
shrb
mov
neg
lds
subb
pushf
dec
sahf
and
testl
lea
ss
loop
bound
add
adc
inc
push
mov
push
js
inc
outsl
out
xchg
lea
ret
cmp
sbb
pop
jae
jne
lods
gs
inc
mov
dec
scas
lods
arpl
mov
in
inc
cmc
push
sbb
xchg
scas
xchg
lahf
loop
mov
dec
adc
lcall
cmpsb
movsl
movsl
cmp
bound
pop
sub
jno
mov
daa
dec
popa
jg
pop
dec
aam
sbb
add
shll
decl
push
pop
xchg
cmpsl
js
mov
leave
mov
les
xchg
les
and
cmpsb
adc
inc
xor
mov
bound
dec
shrl
xchg
pop
push
aam
mov
js
ds
mov
jo
out
and
lea
and
leave
test
fistps
add
xchg
setp
sub
adc
pop
lahf
mov
xchg
mov
and
xchg
sbb
mov
in
pop
iret
movsl
pusha
and
inc
aas
stos
out
cmp
mov
rorl
mov
pop
in
and
xor
rcrl
jmp
popa
int
rcrl
fdivs
neg
pop
jmp
fldenv
test
repz
cmp
dec
fidivrl
in
add
sub
xchg
add
mov
jae
jp
pop
adc
add
inc
lods
aad
dec
fimuls
add
sar
sysenter
leave
pusha
pop
xchg
pop
adc
stos
cmp
mov
outsl
mov
mov
addr16
push
jmp
loop
mov
push
lret
add
shll
popa
mov
jo
push
and
mov
cltd
mov
rolb
test
test
mov
cltd
scas
mov
dec
mov
jbe
adc
rolb
movsw
cmpsl
adc
ret
cmp
lods
aam
jp
sbb
jne
cltd
mov
push
iret
mov
dec
popl
sbb
dec
ret
nop
jbe
into
dec
sub
loopne
and
je
or
fadd
aaa
addr16
xchg
push
mov
mov
shl
enter
cld
addl
push
cld
aaa
or
js
pop
out
lods
call
out
sub
jo
push
mov
shlb
xchg
sbb
test
pop
adc
pop
jne
stos
leave
out
sti
loop
out
xchg
arpl
mov
or
inc
jnp
movl
aas
lea
xor
or
lgs
push
inc
inc
mov
or
cli
lds
xlat
or
mov
dec
js
jmp
pop
lods
fstpl
rorb
lock
cmc
push
push
arpl
adc
imul
stos
and
adc
xchg
shl
ja
repz
lret
and
cli
iret
mov
mov
push
mov
aad
and
push
or
out
imul
sub
fwait
or
xchg
stos
mov
jl
sub
sahf
sub
sub
dec
cmpsl
sahf
jl
in
inc
outsl
test
add
test
call
mov
sub
jle
inc
lahf
mov
loopne
icebp
inc
mov
jecxz
cs
addr16
int3
dec
jl
mov
bnd
test
test
xchg
das
xchg
add
sbb
cmp
imul
in
rolb
dec
cmc
scas
add
outsl
add
jae
and
xor
pop
insl
fldenv
mov
repz
das
inc
repz
out
mov
inc
sub
cmp
or
inc
sub
jo
ret
mov
jno
lret
jecxz
dec
popa
push
invd
lds
xchg
mov
xorl
out
jl
les
push
add
rcrl
jl
clc
sub
mov
dec
inc
imul
push
sahf
daa
outsl
imul
cli
sub
push
out
or
push
lods
int
rolb
mov
mov
pusha
in
lcall
add
and
jg
mov
shlb
adc
aaa
pop
popf
dec
push
das
cmpsl
daa
xchg
cs
xchg
or
cmp
pop
flds
or
pop
cmp
ds
dec
fdivrl
xchg
mov
push
jecxz
je
jmp
or
fistps
mov
clc
jo
mov
push
and
gs
xor
push
mov
jo
clc
loopne
inc
jecxz
cmp
mov
jmp
insl
mov
dec
stos
into
pop
out
push
dec
sti
fimull
mov
mov
les
in
mov
pop
aam
mov
xchg
xchg
fdivrs
mov
in
xor
sub
push
in
dec
rcll
in
pop
xlat
hlt
out
lea
mov
cmpsb
fwait
mov
lcall
cmp
hlt
adc
mov
sub
mov
popa
loop
sub
inc
or
imul
fs
sub
dec
mov
in
xlat
cmp
push
shrl
inc
pop
andb
popf
fistl
add
pop
inc
and
adc
pop
sub
nop
xor
pop
fwait
mov
push
stos
stc
ret
insl
sub
mov
out
adc
fsubr
push
movsb
sbb
cmp
push
outsb
cmp
aam
shlb
dec
subb
xor
and
gs
xor
shl
mov
xchg
jb
push
cmp
sbb
cmp
test
inc
movsl
repnz
fisubs
push
call
imul
data16
clc
pushf
mov
add
or
pop
push
xchg
decb
daa
ljmp
sbb
cmp
jb
push
fildll
sub
sti
or
xchg
pop
mov
sbb
inc
loop
jge
es
cmpsb
pop
push
xor
sbb
jne
sub
stos
jle
pop
ret
stos
enter
insb
inc
inc
mov
lret
dec
mov
or
stos
in
or
pop
lret
mov
sub
push
iret
mov
xchg
mov
push
jo
mov
shl
mov
negl
pop
push
sub
adc
mov
add
leave
bound
xchg
jae
movsb
adc
fiaddl
lods
or
movsb
lfs
inc
mov
xchg
xchg
push
popa
push
cmp
pop
mov
sbbl
push
add
test
aad
mov
push
pop
pandn
call
test
fnsetpm(287
mov
push
fsubrl
repnz
inc
lret
push
int3
mov
icebp
xchg
mov
lret
arpl
mov
ljmp
ret
pop
cmp
cmp
mov
xchg
outsb
mov
xor
lret
jp
mov
pop
test
aaa
lahf
sti
jecxz
cmc
mov
arpl
mov
lret
int
ffreep
xor
outsb
dec
sub
jb
int
dec
into
negl
dec
or
sbb
loopne
dec
push
in
xor
lea
je
in
loope
movsl
jb
cmpsb
jbe
arpl
pop
push
lods
in
ret
scas
mov
cwtl
cli
mov
cli
jmp
sti
test
xchg
in
sub
and
mov
int
test
inc
jno
cmp
inc
lea
repnz
hlt
cmp
sub
mov
mov
sub
cmpsl
fdivrl
dec
mov
add
pop
mov
adc
push
movsl
pusha
xor
ds
pop
inc
pop
and
mov
aam
cmpb
mov
xchg
into
dec
mov
jp
xchg
mov
mov
scas
rclb
add
xchg
outsl
int
jae
loop
inc
inc
jl
mov
mov
movsl
sub
fucom
sarl
mov
nop
cwtl
pop
or
adc
inc
andl
movsl
pop
mov
cmp
addr16
fs
pop
dec
enter
data16
inc
sar
cmp
push
xchg
mov
insl
fadd
push
and
jl
cmpsb
shlb
repz
fistl
sahf
mov
sbb
or
adc
pushf
mov
sbb
rclb
in
inc
ljmp
xor
jle
lahf
cmpsl
cmpsl
sahf
dec
ljmp
jmp
shlb
jb
or
dec
sbbl
pop
leave
add
addr16
sub
jbe
fistl
gs
jb
sub
inc
pushf
lock
add
push
cmp
xor
call
push
icebp
clc
out
jbe
jp
xchg
lahf
std
sub
pop
dec
sub
inc
cwtl
scas
inc
push
dec
cmp
lcall
and
mov
jo
fistl
jg
jo
mov
movsb
es
not
sti
sar
rcll
pop
xor
jbe
nop
add
push
in
bound
sub
iret
sub
adc
pop
and
pop
in
or
notb
mov
jge
stos
iret
mov
outsl
iret
and
sub
enter
mov
je
lret
hlt
push
mov
inc
and
xor
xor
jns
sub
dec
xor
lods
add
sbb
adc
sub
loope
mov
mov
xor
pop
std
xchg
jle
xchg
jno
mov
inc
or
fisubrl
cmp
xchg
add
sti
or
mov
jle
subb
nop
cmpsb
sbb
dec
lods
add
adc
aam
mov
popf
shl
test
cmpsb
cld
ljmp
dec
xchg
ja
imull
cmp
push
or
movsb
test
int3
leave
sub
jp
push
mov
mov
jl
scas
lods
adc
adc
in
dec
lods
sbbb
in
mov
sbb
pop
fs
mov
inc
dec
addr16
jne
cli
mov
sbb
mov
in
lea
jp
mov
lods
mov
fsubrs
sahf
xor
leave
in
inc
push
add
pop
mov
repnz
inc
adc
ficompl
test
jbe
cld
jb
adc
or
push
sbb
push
mov
orps
push
into
adc
std
xor
adc
jb
stos
mov
mov
int
nop
cmc
callw
sbb
fcmovnbe
xor
sahf
or
in
xchg
adc
mov
in
cmp
subl
xor
xchg
sahf
sub
test
iret
std
or
cmp
pop
insl
ds
and
mov
sbb
inc
in
and
push
cmp
pop
xchg
repz
cmpsb
inc
mov
adc
bound
adc
ret
push
or
lahf
fcoms
sti
mov
xchg
pop
lods
ja
and
clc
add
je
mov
xchg
out
stos
mov
xchg
adc
mov
xchg
and
xor
cmp
xchg
mov
push
xchg
xchg
push
xor
mov
rolb
push
hlt
xchg
xchg
xor
pop
aas
push
test
dec
jne
cltd
mov
test
gs
jp
pop
stos
dec
jnp
sub
out
pushl
and
test
fdivs
cmp
ret
jle
fcoml
in
mov
push
fbld
xor
das
in
loope
and
mov
lcall
lds
shll
ret
push
loop
mov
push
iret
mov
xchg
stc
jo
loopne
adc
je
aad
stos
mov
dec
dec
mov
pop
mov
xlat
cli
ret
cmp
out
add
cwtl
sub
adc
adc
loop
in
push
lahf
test
push
jp
pop
call
sub
push
fldenv
in
mov
je
inc
pop
dec
sahf
es
cmpsl
jns
insl
addr16
sbb
gs
fstpt
insl
sbb
inc
adc
xlat
add
push
stos
lods
dec
jmp
test
loope
orb
shrb
jl
fucomip
aam
and
repnz
mov
or
test
dec
neg
pop
mov
and
imul
dec
push
pop
and
gs
dec
or
in
or
mov
sbb
out
fstpt
pop
xchg
ds
xchg
filds
out
in
data16
jecxz
out
inc
push
iret
or
loopne
mov
and
mov
int3
xchg
rolb
dec
pop
addl
mov
push
mov
dec
int3
fcomip
mov
xlat
dec
xchg
jmp
push
xor
pop
cmpsb
adc
lcall
mov
scas
js
pop
mov
aas
into
jg
push
leave
popf
subb
dec
sbb
or
mov
add
arpl
cmc
xor
out
aas
adc
cmp
xchg
dec
lahf
jl
xchg
enter
inc
xchg
lods
cli
lods
call
or
xchg
sbb
jnp
int
repnz
sub
mov
push
scas
sub
mov
out
mov
mov
cmp
or
aam
test
js
inc
cs
pop
mov
pop
nop
pop
imul
inc
cmp
inc
frstor
pop
sub
and
test
mov
repnz
cmp
lods
loop
out
loope
mov
outsl
jge
rol
loopne
insb
clc
data16
push
dec
cmpsb
js
lret
or
jb
and
and
xchg
push
dec
xor
mov
jo
jp
add
adc
push
lods
adc
jl
aas
dec
add
in
xchg
sbb
stc
jp
inc
je
push
dec
adc
in
lock
xchg
jp
fiadds
aam
fprem1
daa
pop
mov
pop
add
mov
in
xor
pusha
and
scas
dec
add
aas
sbb
xor
xchg
mov
lock
mov
hlt
add
adc
loop
nop
add
adc
mov
jo
pop
sbb
add
icebp
movsl
mov
mov
add
sub
test
xchg
adc
ja
aas
xor
lret
or
push
adc
outsb
dec
inc
sub
xor
out
push
pop
jo
in
fcmovnbe
add
shr
cmp
fcompl
call
jp
fnstsw
adc
popf
fcom
cs
lahf
int3
out
xchg
pop
enter
mov
movsb
push
and
push
aam
lods
js
mov
push
adc
fadd
sahf
xchg
mov
aaa
movsl
pop
idivb
add
pushf
xor
fldl
jge
adc
movsb
fstl
out
mov
push
adc
xchg
mov
aam
xchg
int
idivl
pop
push
ja
bnd
mov
xor
mov
sub
pop
or
jp
add
mov
inc
outsl
sbb
inc
adc
gs
stos
lcall
ficoml
sub
adcb
xchg
jg
std
cmpsb
mov
out
inc
or
adc
push
mov
pop
push
cmpsl
gs
inc
cld
fdivrp
lods
test
jo
int
push
imul
mov
mov
inc
lock
fimull
xchg
sbb
mov
adc
sub
or
les
mov
popa
inc
mov
loope
xchg
bound
inc
or
enter
add
les
iret
mov
or
cmp
jnp
es
push
call
lds
rolb
loopne
jae
imul
in
and
cmpsl
xchg
and
mov
sub
inc
lods
push
iret
push
jbe
clc
in
or
cs
cwtl
and
int3
xchg
inc
out
adc
xchg
mov
lret
add
dec
out
std
loop
out
lods
insl
sub
cmp
or
loop
in
xlat
inc
std
add
into
xchg
cmp
push
mov
repz
aam
dec
int
aaa
xchg
add
and
mov
aaa
push
push
adc
dec
hlt
jl
and
test
xchg
pop
rorb
fcompl
adc
lods
popf
or
shll
mov
es
pop
mov
jge
in
stos
inc
xorl
jle
pop
lret
dec
xor
aad
mov
pop
es
lahf
sti
sahf
or
fs
out
stos
pop
sub
iret
movb
or
dec
hlt
jnp
mov
inc
mov
scas
pop
imul
jno
inc
frstpm(287
cmp
std
fstpl
dec
cmp
pop
movsb
sbb
lcall
mov
mov
dec
jbe
cs
lea
test
push
jns
push
stos
push
jmp
mov
popa
in
imul
dec
mov
fimull
scas
jecxz
into
test
xor
je
and
mov
fnsave
and
sbb
movsl
fxch
cmpsl
mov
mov
test
cmp
movsb
testl
popf
push
jae
mov
mov
adc
fcoml
push
cmp
push
and
es
ljmp
leave
test
adc
push
aad
cmp
push
pop
mov
mov
aas
mov
add
and
jb
leave
or
stos
inc
in
ljmp
sahf
mov
faddp
lods
push
push
adc
adc
shrl
push
mov
jnp
xchg
cmp
pusha
test
cmp
ss
sbb
pop
out
sub
mov
es
scas
jo
mov
cmc
add
xor
js
pop
outsl
ffreep
inc
pushl
dec
push
cmp
hlt
lock
test
outsl
cmc
lods
jle
xchg
pop
cs
lods
rorb
decb
repz
fs
mov
rcrb
jno
mov
out
cwtl
mov
or
subb
mov
ret
dec
mov
mov
mov
int3
ss
repnz
les
ret
and
stc
adc
sbb
cwtl
lret
ds
dec
xchg
into
lods
fadds
inc
cmp
inc
arpl
scas
cmp
out
push
add
dec
lods
test
das
in
cmp
test
in
mov
add
lea
mov
movsb
cltd
arpl
outsl
repz
das
dec
rcrl
jo
push
dec
pop
pusha
in
xchg
jp
repz
mov
mov
dec
pop
adc
push
mov
dec
fs
push
sbbb
test
jb
lock
xchg
and
jl
and
pop
stos
jge
pop
inc
mov
andb
icebp
int3
sub
loop
mov
stos
and
or
insl
cmp
push
and
aam
test
jb
roll
sub
xor
and
pusha
mov
aad
cltd
stc
push
adc
dec
push
addr16
push
push
dec
rorb
jo
addr16
call
insl
pop
movsl
xchg
addr16
xor
sub
imul
neg
repnz
or
dec
outsb
push
adcl
jne
daa
mov
push
leave
xlat
jnp
xlat
mov
inc
std
jg
pop
sbb
loope
adc
mov
dec
mov
cmp
dec
daa
mov
push
daa
repz
cmp
sbb
insb
push
or
enter
push
jle
jl
daa
cmp
loopne
fidivrl
sub
dec
cld
mov
jbe
lods
lds
fwait
pop
or
loope
mov
sub
dec
xchg
fwait
sbb
or
pop
mov
sbb
or
inc
mov
pop
imul
hlt
fsubl
les
mov
fwait
cli
jns
inc
jns
dec
adc
pop
jle
push
jne
and
stos
loope
cmp
xchg
lret
sbb
popf
sti
mov
cli
adc
lds
mov
jne
mov
stos
lock
add
jb
sbb
loope
mov
adc
out
dec
or
adc
xlat
push
jns
imull
mov
pop
andl
imul
dec
call
push
stc
or
loop
mov
add
out
adc
mov
out
adc
add
rcl
rolb
cltd
bound
insl
sahf
popl
xor
pushf
xor
pop
lods
daa
movb
addr16
push
das
push
pop
sub
stc
sbb
lret
cmpsl
loop
stos
sub
clc
into
and
pop
xchg
xor
jmp
mov
stos
dec
cmp
cmpsl
add
lcall
xchg
dec
neg
cli
cmp
jae
pop
xchg
sub
mov
add
and
xchg
rorl
mov
push
shl
mov
movsb
fists
push
xor
das
scas
mov
leave
sbb
jg
int3
mov
shrb
cs
ja
mov
inc
js
mov
jle
addr16
mov
into
movl
in
xlat
cmp
sbb
loopne
icebp
clc
or
push
cs
pop
jmp
in
cmc
shl
cmc
mov
fnsave
mov
mov
movsl
inc
cmp
test
ficoms
mov
inc
xor
dec
cmc
in
jmp
cmpsb
sub
movsb
push
xor
inc
add
fmuls
inc
xchg
xchg
test
jno
or
cli
outsb
call
push
jg
pop
push
mov
cmp
sub
add
mov
js
test
mov
jno
fmulp
mov
jmp
addr16
pusha
js
lea
or
cmpsb
aad
adc
lds
add
lods
sbb
icebp
jmp
push
xor
cmc
dec
sub
jmp
and
xor
pop
cmp
jns
jno
das
inc
dec
lcall
loop
dec
add
add
addr16
mov
inc
inc
mov
add
in
aas
lahf
adc
fisubrl
add
lret
pushf
dec
gs
cmc
push
hlt
push
mov
jb
pop
add
into
imul
test
push
jmp
xlat
push
icebp
adc
mov
in
inc
dec
popf
mov
jmp
pusha
jno
rolb
adc
sarb
lret
lea
scas
call
xor
cmp
das
dec
jle
scas
inc
outsb
jbe
loopne
cmpsl
xchg
mov
orb
in
xor
repnz
adc
mov
aas
xor
inc
mov
scas
inc
push
inc
int3
inc
popf
out
push
nop
mov
fistpll
scas
pop
fiadds
fsubl
pop
jmp
cmp
into
rclb
popa
scas
mov
aam
jge
add
into
dec
xchg
out
gs
cmp
into
lahf
sub
mov
and
add
insl
jno
fbstp
add
loopne
and
in
ficompl
dec
sub
xchg
pop
lret
sbb
cs
sub
cltd
fidivl
jae
leave
out
or
leave
inc
lcall
pusha
xor
repnz
mov
or
shrl
jge
and
add
orb
dec
cmpsb
lret
mov
in
in
and
dec
xor
pop
or
jmp
push
push
out
and
xor
pushf
add
mov
inc
xchg
icebp
or
enter
sbb
jae
jmp
lcall
and
test
lods
fnstsw
jae
arpl
xchg
jg
jge
in
sbb
xor
dec
mov
pusha
stc
jnp
shrl
dec
pop
mov
dec
out
mov
test
jae
sahf
loopne
scas
out
aaa
addr16
lock
outsb
cmpsb
lret
jle
pop
push
das
adc
rcrb
negb
fsubrp
adc
popa
loope
and
adc
mov
push
add
sbb
push
inc
cmpsl
divl
xchg
cmp
pusha
push
sti
jno
pusha
adc
pop
pop
sub
lock
fcmovnbe
mov
mov
dec
call
jb
pop
scas
jns
lret
dec
add
lock
jno
stc
and
in
jbe
sbb
daa
imul
and
mov
mov
or
pop
bnd
xchg
cmp
loop
xor
out
popa
mov
jp
mov
and
jb
sbb
sbb
jnp
jecxz
sub
fdivrl
pop
jns
test
inc
jb
add
daa
jle
jmp
jno
enter
dec
cwtl
sub
pop
aam
insb
shll
outsb
ss
scas
sub
icebp
or
or
xor
mov
push
mov
in
jge
jl
add
mov
outsb
or
jnp
je
xor
jne
fnstenv
sbb
stos
mov
push
cwtl
loop
push
dec
or
mov
in
jne
jmp
sbb
pop
fs
loop,pn
and
inc
xor
clc
pop
clc
fsubrl
ss
cwtl
ret
pop
inc
pusha
xor
add
inc
insb
popf
sub
ljmp
add
mov
imul
jmp
stc
in
sub
lea
jo
mov
ss
ja
incl
or
movsl
jl
lds
add
pushf
push
sbb
mov
dec
add
and
fcmovnu
xchg
ljmp
or
xlat
fnstcw
repz
push
mov
mov
movsb
cs
mov
je
out
sti
add
xchg
test
cs
push
xor
add
ds
mov
mov
ret
fsubs
lods
daa
fdivl
push
lea
and
call
popa
gs
jle
sarl
fdivl
sbb
adc
pop
popa
popf
test
call
cmp
outsb
dec
xchg
shrb
loopne
or
jecxz
test
fldcw
add
push
nop
jecxz
leave
inc
scas
addr16
jmp
dec
jo
xor
xchg
cmp
test
hlt
jo
adc
cmp
inc
cltd
cmpsb
movsb
jecxz
xchg
aam
mov
mov
sbb
mov
cmp
xchg
sbb
add
pop
test
das
mov
jecxz
fisubs
inc
setne
push
mov
jecxz
clc
sub
push
xor
mov
bound
mov
std
dec
lea
mov
movsb
mov
pop
pop
pop
xchg
mov
dec
stc
ljmp
subl
cmp
push
cmpsl
stc
testb
jecxz
inc
adc
pop
cmp
and
or
imul
mov
mov
pop
pop
jmp
loopne
push
cld
repz
jle
test
jl
push
mov
jmp
push
xchg
loope
mov
xor
adc
rorl
pop
mul
jmp
cmp
sbb
cmp
mov
xchg
in
or
test
push
lcall
scas
imul
pop
sub
xchg
mov
xor
dec
pushl
enter
test
mov
push
pushf
loopne
sbb
stc
scas
mov
stc
adc
push
ret
pop
mov
mov
xchg
ficoms
pop
stc
andb
test
imul
sub
jnp
jmp
fs
mov
sti
xchg
nop
pop
fwait
mov
jo
sbb
enter
jne
dec
fwait
cltd
xchg
div
outsb
mov
test
add
cmpsl
mov
mov
pusha
insb
jecxz
jmp
sti
inc
dec
daa
inc
mov
andl
push
mov
stos
pop
les
mov
cs
jnp
scas
pop
jge
mov
bound
shl
movsl
fstpt
cli
imul
pop
daa
jmp
or
out
in
ret
jno
in
outsb
mov
mov
mov
pushf
scas
pop
test
sub
mov
pop
push
mov
and
cltd
cwtl
loope
or
aaa
jno
bound
pop
mov
jp
sub
pushf
cld
sub
and
loope
dec
dec
sbb
leave
mov
stos
sub
xor
push
lds
into
pop
sub
mov
xchg
pop
cmp
out
mov
outsb
mov
push
adc
pop
rcrl
adc
stc
rclb
add
mov
repnz
mov
mov
mov
lret
cwtl
je
adc
ja
ret
xchg
sbb
daa
sub
test
adc
mov
fs
inc
daa
xchg
sbb
es
mov
stos
or
inc
xchg
and
mov
adc
ljmp
xor
das
mov
mov
inc
inc
add
mov
dec
xchg
mov
mov
rcrb
not
jmp
fistpll
mov
cmpsb
lds
jg,pt
jmp
test
sbb
sub
mov
aas
xor
xor
push
jge
cmp
enter
jne
sub
repnz
movsb
cmp
pop
lods
jbe
add
fwait
sarl
aaa
arpl
mov
mov
mov
leave
fmul
mov
in
inc
push
aaa
or
dec
and
into
dec
in
xchg
hlt
into
dec
sbb
hlt
push
ja
add
callw
or
ja
push
notb
divb
int3
aas
jecxz
shr
lret
xchg
push
out
cmp
sbbl
arpl
fstpt
jg
pop
movsb
sbb
addr16
outsl
sahf
mov
jmp
mov
mov
dec
jg
sub
ret
fdivrs
fs
mov
mov
test
subps
or
mov
hlt
bound
adc
ret
mov
push
sub
stos
decl
sub
add
sbb
hlt
sbb
jp
push
rorb
push
push
aas
lret
cmpsb
mov
xlat
jmp
iret
push
cld
insl
ja
int3
xchg
testb
cmpsl
int3
xchg
fcmovu
std
lods
pop
lods
ret
in
dec
mov
in
add
mov
mov
fistps
mov
movsl
xor
add
out
xchg
scas
mov
inc
xchg
sub
mov
mov
adc
es
mov
call
js
push
push
repnz
dec
movsb
je
mov
xchg
xchg
sahf
and
xor
lahf
adc
inc
mov
cmp
mov
outsl
jge
and
jno
cwtl
js
imulb
push
es
into
lods
cmp
mov
mov
aas
aas
iret
xchg
in
movl
enter
notl
adc
mov
add
mov
leave
push
loop
mov
fadds
inc
dec
pop
repz
push
mov
lock
test
mov
and
jp
rolb
inc
and
je
xchg
insb
sub
pop
fs
jae
mov
lcall
arpl
sub
ljmp
test
sbb
dec
out
push
adc
sbb
loop
aas
addb
lret
gs
add
popa
cmpb
push
cwtl
jno
jg
push
je
sub
adc
mov
rcrb
mov
pop
or
cltd
push
in
mov
cmp
xor
xchg
sti
stos
xor
inc
cmp
xchg
mov
in
lock
lock
push
addr16
shl
gs
adc
push
xchg
xor
inc
out
fs
adc
push
push
imul
mov
je
inc
repnz
inc
scas
adc
loope
imul
fnsave
out
ret
daa
push
xchg
cs
and
ljmp
add
push
pop
addr16
jne
das
lahf
jge
mov
inc
ret
sub
nop
out
pop
std
scas
xchg
inc
xchg
cmp
mov
xor
nop
dec
aaa
js
inc
xchg
scas
or
ficomps
out
or
mov
aam
xchg
repz
stos
dec
int
mov
fistps
push
aaa
pop
inc
in
movsl
inc
push
push
xor
inc
ljmp
mov
xor
xor
pop
sbb
add
mov
testl
cld
popf
in
mov
and
jmp
out
mov
sbb
popa
pop
adc
pushf
and
cmpsb
inc
push
sbb
cmp
inc
add
xchg
xor
mul
xlat
bnd
lock
stos
add
arpl
pop
or
das
sbb
jne
mov
jl
lea
jmp
and
cld
jbe
lret
stos
mov
ljmp
push
scas
aad
not
mov
and
loop
jle
out
mov
pop
mov
pushf
xchg
adc
insb
push
in
lcallw
mov
fisttpll
arpl
jns
xchg
andl
daa
mov
clc
jo
test
jbe
adc
movsb
pop
or
imul
add
xor
and
or
push
repz
mov
popf
mov
mov
adc
stos
sub
je
lds
fsts
or
jmp
cmp
inc
xlat
dec
roll
repnz
cmp
inc
adc
ja
sahf
arpl
dec
jns
sahf
cwtl
in
insl
adc
insb
pop
cmp
shlb
aad
lods
xchg
out
insl
cmpsb
lahf
or
inc
lcall
outsb
add
mov
aam
ljmp
lods
roll
xchg
mov
mov
lock
jl
insl
cmpsb
cmp
or
in
aaa
ja
mov
push
xor
jne
int
or
mul
dec
addl
int3
xchg
in
imul
sub
leave
lds
push
enter
out
mov
sbb
adc
mov
sub
lret
sub
lods
pop
sub
fmull
je
scas
push
insb
sarl
in
lahf
test
outsl
cmp
and
lods
pop
fwait
mov
mov
in
ja
mov
shrb
test
out
fxtract
mov
mov
pop
imulb
gs
sub
daa
and
push
cmp
rorl
daa
pop
jge
faddl
pushf
mov
ret
test
imul
mov
js
lcall
dec
pop
dec
adc
cli
and
and
pusha
stos
aam
xchg
inc
pop
mov
in
mov
arpl
sbb
iret
clc
cs
add
jne
popa
ret
fsubrs
mov
in
cmpsl
push
cmc
shlb
shrl
xchg
in
stc
inc
mov
mov
mov
inc
mov
sbb
cmpsb
ret
inc
sahf
aaa
in
cmc
sbb
in
sub
jmp
dec
orb
js
inc
js
cmp
fisubl
pop
invd
lds
aaa
aaa
mov
bswap
and
imul
pop
mov
cltd
dec
in
faddl
es
sub
mov
fbld
push
cmpsl
scas
mov
push
jnp
enter
daa
push
call
mov
aam
jg
mov
mov
push
and
add
xorl
lods
cmp
mov
inc
sti
sbb
mov
mov
stc
cmp
inc
fwait
into
shll
jmp
jbe
jg
xor
outsb
popa
nop
stos
std
pusha
xchg
xchg
int
scas
push
xor
mov
fildll
orb
adc
nop
push
nop
add
mov
push
push
mov
fmull
sbb
push
loop
je
lea
add
inc
mov
sbb
sti
jo
cmp
mov
dec
stos
pop
call
gs
push
imul
pushf
add
addb
out
cmpsb
add
xchg
shr
ds
hlt
pop
out
sub
movb
ret
clc
ds
out
in
fcompl
mov
cs
or
aam
hlt
or
or
fs
or
jae
inc
dec
in
push
mov
sub
pop
mov
cs
jg
ja
in
and
imul
mov
dec
cmp
out
out
in
and
repz
orl
adc
shrb
and
pop
mov
mov
inc
sub
push
imul
fnsave
fnstcw
jns
pop
pop
or
sbb
js
in
ret
in
scas
mov
jo
call
and
mov
ret
xchg
cmp
mov
and
nop
sub
xchg
cmp
sub
xlat
xchg
push
mov
mov
push
sub
mov
mov
push
jl
pop
cmpsl
sbb
cwtl
adc
xor
lods
shl
push
xor
lcall
ja
bound
xor
dec
lds
sub
test
jg
xchg
hlt
test
divb
daa
push
pusha
xor
shlb
cmp
pusha
addr16
insl
sub
dec
mov
mov
imul
push
cmp
bound
adc
jbe
popa
in
jnp
jno
jp
pushf
hlt
lock
mov
jmp
sub
dec
aaa
gs
xor
lods
sahf
mov
mov
mov
mov
jb
xchg
lds
sahf
or
dec
mov
test
inc
loopne
lea
cwtl
push
push
pushf
jl
cmp
negl
push
dec
or
lock
sar
sbb
sub
mov
out
pop
push
mov
iret
add
cld
sbb
ja,pt
cmp
cs
jbe
shll
sbb
dec
push
stc
add
pop
out
mov
push
popf
cmp
jg
fidivs
sub
lods
loop
lods
shll
mov
xor
fucomi
es
iret
jo
adc
and
sbb
xor
out
jbe
fcmovbe
aaa
loope
mov
push
bound
in
xchg
xchg
pop
mull
or
push
imul
pop
jno
mov
mov
aas
cltd
push
jae
fisttpl
mov
sub
repnz
sub
sbbl
cmp
mov
push
jge
sti
dec
dec
pop
std
scas
sarb
outsb
sbb
fildll
add
nop
mov
jno
mov
mov
lahf
mov
push
les
lret
sub
adc
adc
test
sbb
and
stos
mov
fistpl
cli
mov
das
rclb
int3
and
movsl
sub
inc
fisubs
mov
push
rclb
and
shr
loopne
out
loope
icebp
fisubrs
lahf
dec
mov
fdivp
jnp
or
aas
sbb
adc
add
std
popf
into
in
hlt
cltd
xor
dec
xchg
fidivs
sbb
lods
mov
jge
movsb
xlat
shll
push
test
fildl
jle
and
push
jns
add
mov
ret
add
and
rcll
mov
adc
pop
je
cmpsl
sahf
sub
jle
mov
dec
fwait
xor
mov
dec
jmp
icebp
imul
icebp
in
dec
mov
mov
jp
sbb
enter
movb
fs
les
adc
sbb
xchg
jbe
mov
add
adc
inc
or
mov
pop
rcrb
inc
push
cs
push
sarb
lcall
mov
jecxz
lods
outsl
mov
sub
cmp
bound
or
aad
imulb
xor
xorps
sbb
pop
jae
dec
addr16
sbb
sub
add
push
sbb
outsl
sub
in
jmp
int3
pop
sub
sbb
in
mov
fimuls
dec
cmp
jbe
or
mov
into
or
pusha
cmp
jae
fs
lods
data16
xchg
pop
or
cltd
jge
push
fsubrs
xlat
jl
sbbl
stos
aaa
jo
clc
sbb
inc
pushf
adc
and
dec
add
iret
push
pop
xlat
cmpsb
add
inc
mov
rol
add
cmp
cltd
test
push
jmp
rcl
sbb
and
lea
fnstcw
or
pop
mov
add
js
int
test
ret
fiadds
and
sub
int3
mov
xlat
cwtl
and
xchg
inc
push
dec
arpl
stos
es
inc
mov
xchg
pop
lds
xchg
jo
cli
adc
in
int
push
mov
dec
cmp
add
in
mov
scas
adc
pop
cmp
pop
das
scas
psraw
jge
mov
mov
andl
fistps
sub
stos
sbb
push
mov
cmpsl
rcrb
roll
cmp
pop
daa
out
dec
add
add
les
add
ror
mov
sbb
sbb
xor
jbe
xlat
jns
movsl
andb
cmpsl
sbb
or
fcmovb
sub
xchg
inc
bound
push
pop
push
push
stos
addb
or
push
dec
mov
lret
inc
xchg
pop
mov
xchg
pop
popa
cli
bound
into
mov
int
enter
jmp
leave
repz
inc
xchg
cmp
and
arpl
push
jb
push
clc
jle
je
sti
jmp
testl
add
hlt
stc
jbe
adc
push
fnsave
mov
xor
fildll
sbb
push
ret
adc
repnz
pop
or
dec
test
jne
and
lock
and
sti
add
fisubl
sbb
insl
and
mov
hlt
adc
adc
or
in
es
mov
jmp
xchg
insl
arpl
inc
dec
iret
mov
insb
bound
push
mov
out
filds
sahf
xor
jns
jp
into
andl
cltd
jb
test
lods
cltd
or
lcall
pop
mov
js
and
pop
xor
jmp
and
fdivp
pop
out
push
repnz
adcb
add
mov
xchg
cmpl
scas
fsts
adc
lds
daa
mov
shr
inc
js
imul
pop
gs
pop
out
mov
lds
lods
sti
lock
jge
mov
adc
call
jge
pop
out
ret
faddl
hlt
sbb
popf
cli
dec
xchg
popa
inc
push
repz
xor
inc
nop
repnz
or
ret
sar
ljmp
dec
mov
xchg
or
adc
daa
sbb
dec
cltd
cmp
dec
loope
gs
sbb
push
or
cmpsb
cmp
loopne
pop
xor
inc
mov
std
mov
cmpsl
es
or
add
scas
or
pop
inc
dec
das
ljmp
fwait
and
pop
ja
push
repnz
inc
shl
mov
sub
pop
and
sbb
mov
or
in
jns
push
std
fidivrs
insb
jmp
repz
mov
loope
sbb
xor
pop
lret
sub
int
aas
and
sub
lahf
int
negl
movsb
and
cs
xor
sbb
dec
pop
mov
and
cltd
xchg
push
adc
pop
and
clc
cltd
test
shrb
mov
pop
jnp
adcl
nop
test
movsl
mulb
pop
push
xchg
and
mov
inc
popf
push
sbb
outsl
lcall
movsb
cmp
adc
in
jnp
cmp
cmp
jae
jle
aaa
imull
mov
sbb
pop
mov
jmp
daa
repnz
movsl
divb
out
push
dec
add
imul
loope
orl
ss
pop
rolb
inc
stos
mov
sub
dec
fsts
scas
cwtl
mul
insb
lods
jbe
lods
in
stc
lahf
mov
jmp
sbb
mov
sub
and
add
lahf
les
xchg
lret
mov
ret
xor
movsb
daa
inc
add
inc
lcall
jg
insl
xchg
or
lahf
xchg
int
inc
mov
in
mov
mov
jl
push
xchg
adc
sbb
pop
popf
stos
xlat
pushf
and
lods
fs
push
fs
or
mov
fs
xchg
jp
mov
sub
fwait
lock
and
sbb
divl
test
and
lea
data16
mov
sub
fidivrs
adc
xor
mov
xchg
sub
clc
mov
ss
and
scas
test
mov
xor
fadd
insb
adc
std
insl
push
shll
aaa
jne
xchg
ljmp
dec
mov
jmp
test
es
out
outsl
pusha
pushf
mov
add
outsb
push
stos
xchg
nop
adc
mov
inc
es
pushf
or
xor
mov
test
mov
cmpb
ss
xlat
ffreep
jg
sub
fstpl
add
aam
jmp
adc
sub
lods
gs
sub
test
div
push
pop
mov
sub
push
and
inc
imul
test
push
xor
inc
mov
cmp
xor
jl
scas
out
pop
cwtl
xchg
rclb
test
sbb
pop
les
popf
push
adc
or
mov
loop
daa
adc
cmpsb
in
subl
adc
negb
sbb
scas
add
in
xor
repz
stc
mov
adc
shll
adc
xchg
jecxz
popf
and
push
stos
repnz
cmp
lods
popa
adc
pop
jmp
cmpsl
adc
ss
icebp
lea
push
sbb
into
clc
into
mov
jno
adc
fwait
xor
adc
or
mov
mov
fstps
push
lret
sbb
mov
ror
pop
lods
cwtl
mov
lds
and
ds
lret
adc
aaa
push
pop
add
xor
and
mov
sub
fstpt
insl
imul
mov
inc
cmp
ficomps
and
pslld
dec
mov
add
adc
mov
cs
outsl
mov
dec
aaa
decb
lock
adc
pop
stos
pushf
jno
pop
sub
stos
test
mov
imul
dec
sub
pop
xchg
adcl
add
cld
xchg
imull
pop
xchg
lods
popa
mov
ja
cltd
daa
sahf
mov
jl
or
sub
gs
icebp
jnp
push
mov
shrl
jns
or
pushf
mov
sbb
mov
push
imul
es
outsb
jne
jg
jge
loopne
cmc
orb
fstl
arpl
andb
mov
jae,pt
xor
addl
ljmp
or
mov
cmp
outsl
lock
sbb
jnp
inc
jae
xor
dec
ret
adc
sbb
es
push
sahf
addr16
movsl
jb
test
inc
xor
and
mov
adc
repz
es
push
xchg
or
out
cmc
std
xor
mov
lret
roll
ss
outsl
jg
jge
or
bound
inc
cwtl
cmp
mov
push
cltd
or
aas
fdivrs
push
and
sbb
insl
and
out
push
insl
or
in
test
mov
stc
mov
fildll
push
stc
decb
xchg
mov
shlb
cs
xorb
adc
mov
or
in
xchg
mov
jb
xor
in
fbld
outsl
scas
push
sti
repz
inc
scas
cmpsb
mov
xchg
and
pusha
cmp
dec
nop
or
push
jmp
scas
cwtl
adc
in
add
insb
push
lods
xor
cmp
mov
xchg
aad
and
jp
dec
lock
fs
or
jb
insb
jmp
push
pushf
lahf
adc
in
popl
mov
iret
cmp
jb
jae
jbe
mov
sbbl
loope
sbb
adc
mov
pop
daa
inc
xor
xlat
sbb
clc
sbb
sbb
mov
rcl
rcrl
je
xchg
inc
mov
rcll
jge
inc
sbb
fimull
xor
nop
fists
shlb
aas
pop
in
pop
sbb
mov
clc
out
leave
sbb
lcall
and
out
movsl
mov
push
inc
sub
jg
mov
sbbl
int
pop
ret
add
stos
aam
sbb
dec
movb
adc
jmp
test
clc
ljmp
and
je
stos
pop
mov
mov
dec
inc
mov
dec
loope
xchg
lahf
xchg
sbb
pop
push
ret
icebp
iret
cli
mov
cmp
push
call
jle
xor
popa
lods
jmp
jb
pop
and
ja
fisubrs
out
cmp
aas
adc
xchg
sbbb
pop
xor
cmp
test
sbbb
push
mov
sbb
stc
inc
inc
adc
or
add
push
xchg
fnsetpm(287
sbb
ljmp
or
mov
add
pop
or
mov
sbb
aas
mov
or
sbb
mov
inc
rcll
xor
inc
pop
push
std
xlat
dec
adc
stc
testb
daa
mov
aad
aam
cwtl
stos
mov
jo
mov
shl
sub
mov
jl
inc
lds
adc
sbbl
ret
lahf
mov
pushf
sub
cmp
jne
xor
ja
fiadds
gs
outsb
mov
in
xchg
imulb
nop
test
and
xchg
andb
out
into
into
stos
add
std
xor
aam
loopne
and
dec
notl
dec
dec
imul
into
adc
repnz
sahf
cwtl
in
xor
add
das
scas
btc
sub
jne
mov
push
sub
inc
lret
inc
movsb
xor
cmpsl
adc
adc
fs
dec
pop
loope
dec
xchg
cmp
adc
shll
inc
and
addl
outsl
mov
add
jno
js
es
fs
pop
call
mov
in
cs
addr16
add
or
xor
adc
jns
add
stc
pushf
adc
cld
mov
xchg
je
outsl
addr16
jle
dec
fcmovbe
enter
lret
call
mov
test
cmp
fldenv
xor
xor
mov
adc
ja
pushf
lcall
pcmpgtw
push
cmp
call
shl
repz
dec
jg
or
arpl
xchg
push
push
push
cmp
add
mov
hlt
pusha
mov
xor
icebp
sbb
repnz
fisubs
jp
popf
push
adc
mov
mov
mov
iret
movsl
imul
jmp
inc
aas
or
das
push
xor
jbe
loopne
pushf
leave
popf
xlat
jp
sbb
dec
sub
or
mov
lods
sbb
out
jo
cli
and
mov
imul
xor
shlb
ret
inc
mov
pusha
cld
lcall
test
jno
lock
mov
cmp
mov
cmpsb
lods
mov
lods
cld
cmp
test
and
hlt
sbb
sub
and
insb
imul
mov
test
dec
mov
or
test
mov
dec
cmpl
icebp
fisubrs
or
es
mov
repz
xchg
inc
outsl
or
out
les
outsl
add
push
in
xor
jae
loope
xchg
jb
jbe
mov
pop
push
aam
or
mov
dec
cmpsl
sub
jmp
shl
je
jp
testb
add
push
ret
xchg
mov
fiaddl
test
cltd
aaa
mov
jae
ret
ret
pop
fstl
dec
aaa
rclb
sbb
sbb
test
sbb
mov
push
gs
into
xchg
scas
sbb
sbb
adc
dec
out
mov
cltd
fxch
xor
call
scas
mull
nop
or
fs
stos
jp
pop
and
gs
dec
mov
fidivrl
jmp
add
loope
jmp
outsb
add
xlat
cmpsl
sub
jb
lcall
push
and
add
flds
lods
inc
test
insl
sbb
pop
out
and
gs
add
lcall
mov
std
cmpsb
cs
aas
lods
int
and
cmp
pop
mov
jle
xchg
inc
pushf
or
frstor
jne
sub
jnp
jne
rorb
mov
inc
imul
insl
dec
cmpsb
pop
cltd
sub
inc
clc
mov
shl
pusha
or
das
and
pop
mov
and
fidivrl
loopne
push
pop
out
and
lea
pusha
cmp
out
pushf
dec
cltd
jl
pop
shrb
ret
mov
dec
out
outsb
push
and
push
stos
pushf
testl
dec
ss
mov
flds
xlat
leave
push
mov
icebp
fistps
icebp
pop
pop
repz
loope
lods
addr16
repnz
fsub
pop
cmp
dec
sbb
ficompl
icebp
push
push
sbb
adc
push
psubusw
aam
roll
and
sub
popl
stos
int
or
sbb
mov
mov
ss
adc
dec
inc
bound
scas
push
loopne
andb
cmp
pop
stc
mov
movsl
insl
nop
xor
push
adc
lcall
pop
xlat
cs
jmp
pop
sarb
adc
sahf
mov
ret
fwait
loope
mov
or
mov
addr16
push
ljmp
call
cmp
stc
push
cld
jl
or
inc
jo
jnp
in
cmp
cli
pop
xor
sbb
sub
mov
incb
cmp
add
lcall
jnp
icebp
push
pop
adc
sbb
test
int
and
sahf
jb
ret
inc
fdivs
add
or
jmp
mov
xor
inc
add
push
sbb
test
in
mov
lahf
cld
test
pop
push
out
jmp
sbb
call
lock
ljmp
out
inc
add
mov
into
test
cmpl
push
pop
lds
add
adc
sbb
and
cmp
jae
fistl
scas
fwait
inc
mov
cli
mov
sbb
pop
push
add
popf
bound
sarl
nop
sub
pop
sbb
mov
dec
lods
inc
cld
push
and
or
sbb
dec
add
enter
mov
xchg
fsubrl
test
stos
cmpsb
adc
imull
xchg
test
xor
and
js
cli
or
int3
popa
dec
data16
mull
mov
sbb
ret
or
js
pop
xchg
and
je
test
push
sti
jp
jae
nop
loop
push
pop
addr16
mov
dec
or
cli
mov
dec
jne
loop
push
mov
adc
iret
adc
pop
adcl
in
outsl
or
mov
jge
or
xor
add
push
fdivrl
pop
outsb
add
or
das
and
add
dec
data16
insl
mov
xor
jae
sub
pop
sti
xorl
ret
popl
popa
pop
add
cwtl
push
xchg
add
jp
mov
pop
fldcw
jmp
jmp
ret
sbb
cmpsb
push
mov
push
mov
out
adc
inc
add
subb
inc
std
lret
xchg
adc
jbe
and
add
lahf
ljmp
out
lods
fists
sub
or
xchg
ret
or
jg
sub
xchg
dec
adc
addr16
cmp
out
push
int
mov
xchg
leave
sub
das
jp
pop
adc
jecxz
es
into
push
xchg
scas
ljmp
sub
rol
sbb
adc
or
rcl
andb
ss
xchg
cmp
mov
enter
mov
rcll
mov
cwtl
lods
jge
and
clc
smsw
cmp
aaa
adc
cwtl
je
mov
sub
push
bound
sub
mov
xchg
test
push
movsl
mov
gs
stc
mov
mov
out
fcoml
jmp
fwait
cs
cwtl
dec
add
sbb
add
xchg
mov
sbb
xor
cli
add
add
xlat
xor
xorl
sbb
dec
loopne
inc
mov
xchg
loop
mov
fwait
xor
je
repz
add
xor
cmp
sub
mov
ds
jle
add
and
sub
fldl
insb
pushf
push
insl
pop
repnz
add
out
cli
loopne
mov
pop
and
test
test
popf
loop
fisubs
add
sub
shll
imul
repnz
pop
dec
mov
sub
sub
sbb
jmp
test
mov
icebp
imul
shrl
ror
cmpl
xor
add
mov
stos
xchg
stos
pop
dec
sti
test
or
imul
in
or
mov
sub
mov
insl
add
mov
add
cld
sbb
dec
mov
int3
hlt
es
out
xlat
sbb
cmpb
ret
pop
mov
les
stos
cmpsl
out
mov
xor
jae
imul
adc
mov
fidivrl
adc
insb
dec
adc
jnp
add
arpl
mov
stos
mov
adc
push
repnz
jecxz
fs
icebp
pusha
fs
mov
cmpsb
sub
sbb
jns
dec
rcll
je
fmuls
enter
cld
xor
lret
jne
or
xchg
fimuls
cltd
les
inc
mov
xchg
and
out
sahf
mov
pop
xchg
mov
cmpsl
aad
clc
jl
add
scas
decl
gs
lret
in
sub
push
jp
jle
mov
jl
mov
fmuls
xor
adc
add
adc
mov
lea
sarb
cld
inc
icebp
push
sbb
xor
xchg
les
xor
lds
scas
adc
bound
jmp
cmp
jns
shrl
xchg
pop
stos
push
adc
xchg
stos
sbb
cltd
inc
insb
loopne
bound
cmpsl
adc
sbb
xchg
pusha
adc
inc
adc
outsl
pop
jl
in
cmp
add
mov
fidivs
rorb
push
test
sbb
out
push
adc
xchg
push
adc
xchg
out
movsl
jb
scas
xlat
stos
je
xor
std
aam
testl
or
lods
mov
and
cs
in
add
push
and
shr
into
lea
jno
dec
sahf
lock
leave
xor
cmp
jb
cwtl
cmc
xor
adc
mov
es
shrl
push
std
insl
out
sahf
dec
sub
push
add
push
mov
mov
ret
mov
and
ret
add
imul
pop
into
fldt
mov
aaa
pop
xchg
lds
decb
mov
cli
mov
in
dec
or
mov
mov
dec
lcall
mov
add
test
inc
or
add
push
lcall
movsb
jecxz
inc
push
xor
sbb
iret
mov
cmp
sbb
pop
mov
ja
xor
cli
in
in
jbe
push
xor
sbb
sbb
mov
push
xchg
test
push
imul
imul
xchg
lahf
add
pop
cmp
loopne
fstpt
je
adc
xor
daa
sub
push
push
mov
mov
stos
push
fimull
ror
jecxz
pop
adc
xchg
xchg
mov
sbb
push
dec
iret
adc
push
jle
xchg
daa
mov
pop
mov
leave
sbb
sub
add
add
xorl
das
lret
xchg
fistpll
cmp
pop
lcall
pop
xor
push
mov
jle
mov
push
xlat
mov
sti
ret
shll
shl
fwait
sbb
lcall
push
ja
lret
aam
lods
inc
xchg
dec
insb
xor
adc
scas
dec
push
mov
sub
add
sbb
add
rorb
sub
jne
loopne
loopne
mov
xchg
es
jnp
mov
add
mov
out
sbb
jno
xchg
push
push
pop
xor
inc
dec
jmp
xor
movl
adc
lds
leave
lahf
jmp
into
xchg
add
or
or
mov
data16
sbb
push
add
aaa
shll
push
out
sbb
mov
call
mov
jae
arpl
sub
adc
pop
cmpsb
orb
test
scas
je
in
lods
lods
dec
into
stos
cld
push
icebp
push
push
mov
xor
out
jbe
push
fldcw
imul
pop
les
ds
push
mov
rorb
xor
lcall
inc
ret
push
push
mov
fwait
jae
dec
cs
cmpsl
or
clc
jns
push
repz
mov
nop
adc
cmp
int3
js
mov
nop
sub
lock
cltd
jmp
hlt
dec
arpl
mov
adc
addr16
or
xor
aas
sarl
div
addr16
andl
jecxz
aad
notb
cltd
movsb
dec
stos
lock
mov
sti
xlat
in
or
add
and
scas
mulb
data16
xor
xlat
mov
add
shll
gs
mov
shlb
out
push
fidivrl
cmpsl
inc
adc
adcl
cmp
sahf
mov
adcb
push
xchg
ja
push
mov
push
hlt
repnz
rorb
ljmp
cmovo
dec
mov
or
clc
jge
xor
loope
out
dec
nop
xor
loope
xor
int
lods
movsl
out
mov
test
mov
icebp
fwait
push
jnp
lods
jmp
aaa
aas
sbb
pop
sbb
dec
lds
xchg
lds
pop
mov
xchg
adc
ret
int
adc
mov
ret
pop
gs
dec
jae
and
cmp
mov
shrl
test
outsl
cltd
pop
push
mov
into
mov
dec
push
push
jp
pop
daa
dec
xor
lret
dec
mov
icebp
cltd
rcr
insl
cld
inc
or
pop
fwait
jns
das
stc
popa
mov
je
inc
sub
adc
pop
dec
insb
mov
jp
cmp
push
push
jno
fwait
movsl
mov
stc
push
das
roll
xor
sarb
xor
add
cmc
push
hlt
xor
cs
adc
arpl
or
sbb
adc
xlat
adc
sub
add
aam
cmp
push
inc
cld
shll
pop
pop
push
mov
in
mov
and
adc
repnz
and
mov
mov
dec
xchg
cli
pop
mov
jmp
aad
mov
std
sar
in
fcompl
addr16
pop
pop
out
imul
jle
dec
pop
push
xchg
sahf
outsb
cmp
fstpt
xchg
lock
out
testb
sbb
xchg
and
mov
mov
fs
sbb
js
jne
in
fbstp
pop
int
repnz
imull
arpl
stos
push
jae
mov
adcl
push
mov
adc
mov
negb
mov
repnz
call
push
lea
add
lock
scas
cmc
icebp
and
lahf
add
xchg
and
test
cmp
fisubl
mov
adc
clc
mov
arpl
xor
pusha
fiaddl
bound
jmp
cmpl
mov
mov
pop
addr16
sub
pop
sbb
mov
add
in
jno
ja
sbb
arpl
inc
jle
out
stos
cmp
push
gs
sub
add
inc
stos
loope
lods
jle
dec
inc
sub
loop
leave
adc
inc
xchg
fstp
adc
aam
xchg
pop
mov
sub
stos
mov
js
fucomi
xchg
mov
jg
mov
mov
lea
jge
icebp
or
jecxz
dec
or
addr16
loop
xor
addr16
push
mov
add
call
add
gs
xor
mov
out
jne
mov
test
leave
adc
xorb
rclb
popa
in
enter
or
scas
push
ret
pop
mov
es
arpl
sub
popf
xchg
xorl
loopne
adcl
adc
xchg
ss
mov
pop
dec
popf
rcll
add
repz
iret
pop
rclb
test
imul
sub
or
daa
idivl
loopne
xchg
push
aas
cmpsb
xchg
gs
or
adc
xor
daa
mov
mov
push
inc
cwtl
icebp
pop
push
mov
test
std
out
adc
gs
lea
sub
jnp
shll
testb
xor
sbb
hlt
stc
and
pop
dec
sub
aad
lret
mov
lcall
js
test
adc
addb
and
imul
adcl
cmpsb
xor
sahf
iret
cmp
jb
andb
or
aas
adc
gs
sub
iret
inc
int
cmp
bound
pop
pop
jbe
pop
mov
inc
sbb
adc
sub
dec
stos
in
push
fstpl
imul
es
add
adc
jp
ret
add
xchg
daa
pop
sub
fs
sbb
rcll
in
mov
dec
outsb
adc
enter
mov
pop
movsb
test
jno
xor
push
loop
add
js
dec
fbld
pop
inc
sbb
outsb
pop
inc
dec
xchg
imul
rcrb
jmp
lret
mov
xchg
jle
fisubrl
out
mov
arpl
mov
inc
arpl
scas
aaa
mov
pusha
adc
cmp
addr16
inc
enter
inc
cmp
inc
jae
mov
mov
inc
jne
push
sti
fdivp
test
pop
push
mov
sub
lock
es
jbe
jb
push
inc
imul
adc
gs
neg
call
push
inc
push
adc
nop
xor
sub
pop
pop
std
mov
fs
aad
test
cmc
sbb
add
in
test
lahf
adc
mov
mov
mov
js
dec
pop
xchg
into
or
fsubl
imul
mov
mov
cwtl
bound
push
jg
jnp
scas
inc
cmpsb
push
outsb
loope
or
inc
and
pop
popa
inc
pusha
icebp
add
pop
movsl
lret
xor
mov
push
fsubr
jg
push
mov
sarb
shl
xor
in
mov
cmp
pop
fcomp
or
loope
jmp
push
data16
jo
outsb
lods
stc
adc
loope
cmpsl
scas
ret
mov
popa
sysexit
dec
adc
fwait
rorb
pop
push
lock
leave
dec
adc
xor
cmc
mov
sub
pop
push
fwait
cmc
push
sbb
scas
out
cli
xchg
and
xchg
lea
ja
xor
adc
popa
fiaddl
loope
fwait
xchg
jge
frstor
push
mov
push
aad
in
dec
mov
dec
mov
aad
or
cmp
shll
stos
loope
cmp
lcall
test
js
jo
shrl
and
cmc
mov
sbb
sub
lds
xchg
pop
xor
jb
loopne
mov
xor
cli
outsb
js
push
cmp
call
lea
clc
into
fstps
push
sub
out
lock
xor
push
jl
pop
repz
int3
mov
add
dec
pop
outsl
repz
andb
sub
mov
sbb
repnz
cmp
push
or
cmc
pop
mov
into
cmc
mov
sbbb
and
adc
stc
sub
jecxz
es
pusha
fistpl
jp
clc
mov
es
cli
or
mov
stos
xor
loopne
cmc
aaa
jecxz
shrb
mov
adc
test
mov
sbb
aad
js
sbbl
inc
xor
xor
push
adc
sbb
and
movsb
lret
nop
call
or
fwait
and
nop
fimull
cli
xchg
nop
popa
ret
or
xor
mov
adc
cmpxchg
call
mov
subb
imul
mov
popa
pushf
sub
enter
fnstsw
shrb
xchg
pop
int3
and
jno
push
pop
lods
arpl
inc
in
out
es
mov
pop
inc
mov
inc
in
clc
dec
cmpsl
dec
lods
xchg
aas
push
jl
inc
call
inc
mov
inc
jecxz
sbb
or
mov
xor
outsb
push
push
mov
dec
dec
loop
ss
pushf
inc
out
inc
lds
push
jns
and
mov
xor
dec
lods
mov
or
outsb
cmpsl
call
cmp
pop
adc
and
inc
or
mov
test
ja
cs
push
iret
lds
ja
sbb
arpl
and
push
stos
in
jns
in
push
or
mov
adc
shlb
jmp
mov
add
js
push
test
in
or
test
icebp
jae
mov
icebp
adc
mov
mov
sub
adc
inc
idivl
nop
mov
jnp
push
adc
push
sbb
add
sbb
pop
or
jecxz
test
push
sahf
cmpsb
adc
jge
in
cmpsb
fimuls
mov
addb
add
push
jnp
stos
cmc
push
mov
push
jnp
pusha
jmp
mov
stos
out
sub
rcr
mov
jecxz
nop
add
insb
inc
adc
xor
mov
push
lahf
js,pt
fwait
push
ljmp
in
mov
std
movsl
cld
shrb
mov
es
call
clc
pop
sbb
cmp
xchg
ds
mov
shlb
loopne
xor
fisubrs
push
jae
out
mov
cmp
out
or
jne
movsl
test
push
jle
pop
out
cmp
xor
iret
fsubl
and
push
addb
mov
jns
add
push
inc
ret
call
inc
inc
jmp
test
jb
inc
cmp
test
xor
jmp
or
aas
mov
movsb
or
and
adc
test
aam
ss
cli
sub
fwait
mov
inc
or
pop
mov
popa
mov
scas
or
arpl
jno
dec
dec
iret
sbb
mov
cwtl
sub
push
mov
int
mov
jae
inc
jae
fdivl
ds
lock
lods
inc
sub
push
cmc
add
lock
ffreep
jo
shlb
push
lahf
int
loop
or
mov
jmp
test
sbb
sub
mov
mov
fsubl
mul
cwtl
icebp
cli
xchg
jb
repnz
imul
xor
test
pop
cmpb
push
inc
lahf
not
push
xchg
xor
int
ss
dec
loop
les
jno
mov
mov
addr16
xor
push
mov
pop
pop
dec
sahf
push
xor
dec
aas
and
rcrl
jb
out
fs
lock
add
daa
pop
aaa
xor
lahf
icebp
in
stos
jge
ljmp
dec
xlat
jnp
push
xchg
pop
or
jae
lods
push
and
mov
push
int3
pop
jmp
ret
out
dec
ds
jp
mov
cmpsb
hlt
test
pop
mull
push
pop
leave
in
test
jnp
cmc
dec
adc
sub
in
fisubl
das
lds
xor
and
lods
cld
stc
mov
jmp
aam
mov
xor
fcmove
add
xchg
jge
and
pop
fstl
or
in
mov
inc
into
ja
jecxz
and
pop
mov
mov
jle
aas
pop
out
mov
loope
cmpl
add
dec
jo
sahf
mov
adc
jbe
in
sbb
xor
jno
orb
fwait
add
lods
inc
loop
lds
cmp
adc
arpl
xchg
nop
xchg
and
mov
adc
in
icebp
ja
adc
xor
data16
adc
cmpsl
push
leave
sub
aam
or
dec
dec
cmp
pop
and
xlat
divl
sbb
jbe
sub
push
xchg
or
or
adc
jmp
jl
jns
mov
pop
fisubrl
and
xchg
rorl
out
sbb
mov
aam
sub
inc
cmpsb
xor
outsb
or
mov
pop
testl
and
sub
imul
push
mov
insl
aad
xchg
mov
sahf
lcall
popa
dec
jnp
inc
mov
aam
pushf
adc
cwtl
icebp
dec
or
mov
and
mov
push
fwait
data16
jae
int
out
movsl
sub
push
xchg
inc
sarl
dec
add
sbb
fisubrs
xchg
jg
insl
sub
jecxz
mov
andb
and
dec
mov
insb
sbb
pop
jnp
xor
sub
movl
imul
lock
xchg
cltd
in
popa
lea
jae
pop
push
xlat
js
pop
stos
jne
adc
push
cmp
jle
mov
aaa
cmp
push
mov
mov
mov
loop
insb
cmp
scas
cltd
ja
shl
cmpsb
mov
aam
add
outsb
and
aam
clc
mov
ret
not
ljmp
bt
add
enter
hlt
adcl
in
pop
add
and
mov
test
stos
scas
das
repz
lahf
and
xor
jnp
rcll
push
sub
call
pop
clc
jae
push
pusha
aad
pop
push
pop
daa
ror
iret
lods
mov
dec
out
pop
mov
cltd
inc
jge
jbe
or
inc
lret
into
cwtl
outsb
bnd
mov
outsl
push
and
push
dec
hlt
jecxz
mov
fs
negb
sbb
and
lret
cli
dec
adc
mov
push
add
ja
sub
scas
and
loop
xlat
push
cmpsl
or
fistps
xchg
dec
arpl
hlt
and
rcrl
movsl
movl
mov
xchg
sbb
loope
cwtl
sbb
add
les
popa
addr16
adc
pop
push
xor
icebp
lock
mov
rcr
jge
lret
jmp
pop
jo
enter
js
daa
mov
cmp
out
xchg
leave
imul
push
aas
cmc
adc
fwait
jo
fidivs
nop
xchg
enter
ret
mov
sub
dec
pop
xor
dec
xchg
dec
cmpsl
sub
mov
adcb
add
cltd
adc
add
push
push
push
ja
mov
xchg
daa
sub
popa
xlat
xchg
sbb
sub
pop
int
test
pushf
and
and
sbb
enter
push
out
xor
push
ds
aaa
adc
jbe
icebp
test
push
cmp
stos
inc
jg
rcll
sbb
push
popa
loop
fcompl
jae
push
jp
ficompl
or
in
mov
rolb
mov
mov
pop
and
xor
push
mov
in
int3
mov
wbinvd
adc
ds
movsl
fidivrl
mov
fwait
xchg
push
imul
xchg
pusha
jo
dec
icebp
ds
iret
cld
inc
mov
jns
repnz
push
sub
mov
mov
cmp
dec
outsl
push
outsb
lcall
testl
and
and
mov
mov
aad
xor
dec
addr16
aad
sub
or
pop
pop
cltd
loope
in
push
pop
mov
mov
cmp
adc
inc
in
aad
and
jmp
cli
test
shrl
loopne
xorb
jg
imul
dec
sbb
les
jmp
mov
movsb
mov
mov
mov
int3
inc
xchg
jbe
or
aaa
sub
push
adc
push
jne
dec
in
xchg
inc
daa
or
adc
pop
and
lcall
int3
ljmp
je
cmpsl
xor
jns
jb
int3
xchg
sbb
push
into
and
repz
stos
test
popf
rcl
sub
xor
jmp
repz
hlt
xor
fadd
int
leave
xchg
icebp
aaa
clc
and
inc
add
mov
jo
hlt
int
addb
test
inc
mov
push
and
ret
push
std
sub
mov
lods
dec
dec
sti
adc
pop
mov
sub
add
scas
pop
in
aam
loop
mov
jo
mov
or
mov
push
or
and
dec
outsb
dec
sbbl
mov
or
pop
adc
aas
xorl
ror
sub
xor
psrld
test
xor
sub
pop
mov
pop
cltd
mov
aaa
mov
and
push
aad
movsl
out
xor
js
inc
rclb
xor
nop
ror
imul
aas
movsl
out
dec
cli
push
or
sub
push
enter
shlb
xlat
lret
pop
imul
pop
sub
push
aaa
in
es
push
mov
add
sbb
inc
jne
xchg
es
je
bound
jmp
or
xchg
clc
inc
push
cltd
movsl
adc
pop
dec
repnz
cmpsl
imul
push
or
lock
dec
movsl
xor
dec
jmp
adc
repz
aaa
rcll
dec
adc
sbb
push
dec
mov
pop
cmpsl
repnz
fnsave
ficoms
repnz
fistpl
jo
pop
das
rcll
lds
std
adc
jecxz
push
ret
and
cmp
jo
addr16
inc
or
mov
pop
sub
push
jbe
arpl
rorb
js
pop
scas
inc
shll
mov
inc
ret
lock
insb
lock
aad
mov
and
inc
adc
data16
add
or
push
cmp
cmpsl
pop
sbb
movsl
pop
dec
sbb
lahf
xchg
sbb
dec
cmp
jp
mov
sub
inc
clc
into
xchg
mov
inc
jb
lds
nop
jecxz
es
add
lock
adcb
mov
lahf
dec
psraw
or
shlb
das
insl
das
ja
and
mov
pushf
in
xorl
loopne
cli
in
sub
stc
xlat
nop
xchg
ss
fsubrs
push
push
fcomps
outsl
xlat
jb
cmpsb
adc
repnz
pop
outsb
lea
xor
and
aam
repz
push
sub
lods
scas
ja
cmp
aad
mov
push
repz
rol
fbstp
sub
xchg
outsl
lcall
hlt
inc
ret
pop
dec
fwait
arpl
aad
jns
bound
jg
in
incb
adc
cmp
bound
mov
cmpsb
es
movsl
rcrb
jmp
sbb
popf
cmpl
into
scas
mov
sub
sbb
sbbb
cmp
xchg
xchg
or
aad
mov
aad
inc
jno
outsl
add
and
fidivrs
and
mov
fadd
imul
mov
jg
adc
fldenv
fidivrs
push
aad
mov
movsb
inc
xchg
notl
xchg
lret
testb
add
stos
scas
push
mov
add
push
add
dec
sahf
cmp
out
pop
orl
fisttpl
jns
mov
ss
jns
add
mov
or
mov
stos
ret
ljmp
inc
jne
mov
loop
jle
out
pop
push
stos
dec
xchg
and
repnz
adc
cld
jecxz
rcr
repnz
loopne
and
mov
ficompl
adc
jp
jno
and
jae
push
rol
rorl
bound
cwtl
mov
jmp
mov
xchg
adc
orb
adc
mov
pop
or
out
cs
jmp
pop
mov
lgs
add
cmp
sbb
xchg
dec
out
out
jmp
loopne
and
subb
addr16
adc
xlat
dec
add
les
xchg
mov
xchg
sub
leave
cmp
mov
or
lret
xchg
lret
popa
push
ja
cmp
mov
loop
clc
lea
mov
clc
mov
sbb
bound
mov
cmc
jb
mov
mov
mov
push
mov
call
or
inc
scas
pop
das
or
pop
loop
sbb
cmp
cmp
fcomip
arpl
mov
stc
dec
xchg
icebp
dec
and
dec
cwtl
sub
popa
mov
push
push
or
add
xchg
adc
mov
adc
fldt
push
testb
dec
mov
cs
sub
pop
daa
popa
and
or
sub
call
mov
inc
adc
lock
stos
in
insl
lods
mov
hlt
aad
and
adc
add
sahf
xchg
or
push
outsl
jmp
sub
sarl
xchg
sbb
xor
jp
lcall
mov
dec
sub
out
lods
push
mov
test
inc
pop
push
and
pop
push
jg
loopne
xlat
and
mov
movsl
xor
mov
jbe
or
stos
or
or
pop
sahf
outsl
leave
rcll
ret
lret
cmpb
pop
mov
outsb
lds
and
ja
fidivrs
dec
fwait
popa
jecxz
or
sbb
add
push
iret
pop
in
mov
sti
xor
add
cmp
push
imul
data16
mov
xlat
pop
mov
in
es
repz
es
js
bound
test
lods
test
fs
xor
adc
lahf
mov
and
lea
mov
inc
xchg
mov
dec
out
mov
xchg
mov
pop
xchg
xor
push
sub
fimull
das
adc
rclb
and
mov
jmp
test
dec
cmp
jno
insb
jmp
je
sbb
ret
lds
jmp
pop
mov
push
cmp
sub
sti
xor
sub
loop
jb
mov
pop
fbld
jecxz
jbe
sub
and
sbb
cltd
adc
pop
and
sbb
lcall
cmp
imul
push
sub
mov
jge
ljmp
xchg
idivl
out
pop
leave
xor
or
mov
xchg
mov
rcrl
popa
outsb
out
push
cmp
test
add
mov
mov
aaa
popa
mov
fs
das
pop
mov
adc
xchg
out
mov
push
or
fisubs
stc
dec
jae
cwtl
int3
cmpsb
in
cmp
into
mov
fmul
dec
xchg
repz
out
push
push
sub
negl
inc
jne
push
int
add
filds
xlat
inc
out
outsl
dec
fcoml
mov
cmpsl
jno
int3
into
adc
jg
or
xor
lds
pop
push
in
xchg
dec
mov
sub
mov
or
sbbb
sub
jl
shrl
iret
pop
pop
mov
jo
enter
pop
dec
fbld
xchg
jne
xor
aas
mov
lods
jp
mov
sbb
roll
push
jp
enter
and
adc
add
and
or
xor
gs
jg
shll
cmp
jb
stos
aad
adc
xchg
addl
cmc
lcall
push
adc
out
outsl
mov
mov
mov
dec
dec
fstl
sbb
jecxz
and
inc
dec
jne
out
mov
pusha
push
and
imul
sub
jp
jo
in
out
push
mov
leave
jp
lahf
cmp
add
pusha
decb
inc
ja
dec
mov
inc
fstpl
sbb
cmp
add
add
mov
lods
daa
in
out
int
or
movsb
xchg
lahf
xchg
xchg
jae
push
jle
jecxz
xchg
rcl
outsb
and
or
pop
movsl
cld
xchg
cmp
ss
pop
and
inc
jl
dec
lds
mov
push
popl
sub
mov
nop
fsubl
fiadds
into
out
hlt
sbb
aam
cmp
jae
popa
cld
lods
insl
xchg
repnz
or
cld
push
out
lcall
push
loope
push
add
test
pop
adc
cmp
dec
dec
pop
cmp
lea
cmpsl
lea
ljmp
or
fld
es
enter
arpl
negl
loopne
mov
or
mov
cmpsb
adc
and
flds
push
scas
loop
mov
repnz
imul
in
lcall
add
pushf
mov
ficompl
sub
gs
bound
lods
and
pushf
push
es
stos
sahf
shll
or
cmp
mov
lds
inc
sbb
shr
inc
push
pop
shrb
incb
cmp
das
je
outsl
les
xor
inc
outsb
mov
lcall
jmp
and
jp
aam
enter
and
imul
inc
loop
xor
fmull
cmp
mov
and
mov
adc
rolb
into
push
mov
sbb
nop
pop
sub
js
inc
in
cmp
test
std
mov
xor
out
dec
sub
or
push
loope
cmpsl
and
stos
outsb
xor
mov
out
in
and
mov
icebp
loope
jmp
shl
aaa
testb
in
mov
test
mov
orb
mov
push
cmpsb
jg
iret
lds
add
inc
stos
xor
xor
in
icebp
int3
loop
ss
sbb
cmp
push
das
jne
ja
mov
dec
ljmp
xchg
xchg
fldenv
xchg
sbb
push
movsl
out
mov
adc
cmp
jl
or
das
stc
insb
cltd
out
push
push
ret
mov
mov
adc
xlat
inc
in
xor
jle
push
cmp
cmc
jne
lea
jbe
mov
dec
mov
mov
leave
rclb
arpl
sub
mov
mov
inc
jnp
orl
adc
push
cmp
lods
pop
push
push
jg
inc
cld
dec
pop
mov
in
aaa
adc
js
jp
and
inc
jle
ljmp
addr16
jne
and
mov
ss
das
adc
ljmp
fiaddl
outsl
stos
adc
xchg
xchg
or
adc
iret
pop
push
fdiv
pop
sbb
jb
clc
call
cwtl
and
mov
dec
or
fistpl
repnz
or
test
andb
loope
mov
and
mov
inc
dec
pop
jne
and
dec
addr16
jb
pmulhuw
frstor
std
ret
push
cmp
pop
jl
mov
mulb
inc
movsl
cwtl
cmp
fidivl
rcll
push
addr16
mov
xchg
insl
icebp
xorl
lds
idivl
ror
pop
xacquire
xchg
push
xchg
mov
lcall
xor
decl
add
in
in
and
inc
push
dec
enter
cmpsb
mov
dec
sub
test
lahf
add
int3
and
sbb
iretw
test
outsl
out
js
inc
push
mov
jge
and
lahf
loop
insl
push
fs
add
push
data16
mov
mov
pop
or
test
mov
xchg
fsubrs
lret
mov
inc
lods
leave
jae,pt
xchg
es
lahf
ss
lods
and
xchg
pushf
std
jmp
sub
or
scas
dec
scas
cld
aaa
mov
sub
es
xor
xchg
sub
xor
pop
cmp
pushf
xchg
mov
lea
and
stos
cmp
iret
pop
daa
fxch
xor
inc
into
xchg
je
aas
pop
ljmp
jns
inc
jbe
mov
and
pusha
pop
pop
push
loope
fimull
loopne
add
outsb
mov
out
mov
movsl
mov
aam
inc
or
cmp
mov
push
cmp
maskmovq
idivl
ficompl
pop
sbb
aaa
addr16
mov
cli
mov
fcomps
inc
lret
jecxz
jg
leave
outsb
lahf
xchg
mov
jo
xor
ja
movsl
jge
xchg
push
sbb
sub
ficoml
repnz
jae
loopne
ficomps
xor
in
in
add
sub
fcomip
jnp
xor
bound
addb
add
lret
sbb
fistpl
xlat
xchg
arpl
or
jno
jmp
jbe
xlat
das
rol
dec
sub
dec
push
push
sub
gs
ret
sar
xor
sarl
insl
xchg
pop
push
add
xchg
jo
xchg
cwtl
mov
out
dec
out
mov
and
lds
xchg
sbb
mov
jae
xor
ret
inc
xchg
xchg
push
cmpsl
fisttpl
fisttpll
mov
xor
mov
sub
xchg
dec
icebp
jbe
ficompl
add
enter
outsl
leave
inc
fisubrs
cmp
and
cs
jle
xchg
add
lods
sub
mov
add
xor
test
inc
push
or
pop
xchg
aam
in
push
popf
sbbl
pushf
mov
subb
lret
jnp
inc
jbe
adcl
addr16
fwait
pop
decb
ss
shlb
fs
mov
sub
dec
cmp
lea
pop
mov
jle
xor
insb
mov
xor
xor
ds
pop
lcall
hlt
iret
mov
in
mov
shrl
adc
jb
popf
sti
jbe
mov
loop
mov
add
std
das
xchg
and
mov
xlat
lock
mov
outsl
pushl
out
scas
mov
jg
cmc
in
mov
and
adc
mov
xor
add
fbld
dec
aam
mov
sbb
lods
mov
xchg
dec
dec
rcrb
adc
cvttps2pi
or
xchg
xchg
xchg
mov
sbb
xor
mov
test
int3
jecxz
or
cli
xchg
adc
mov
jne
mov
out
into
sbb
into
adc
sbb
cwtl
sbb
jp
mov
ret
inc
jmp
or
mov
xchg
sbb
inc
out
xlat
jns
jno
push
add
pop
popa
pop
mov
lods
stc
push
push
push
xor
jp
dec
addb
push
xor
mov
cmpsl
push
inc
push
into
jmp
ds
leave
add
ljmp
in
fwait
clc
rcll
inc
push
cmpsl
clc
dec
adc
and
addr16
or
inc
push
lds
xorl
xchg
test
movsl
lcall
jo
sbb
les
pop
and
mov
xor
dec
add
push
xor
mov
mov
ds
cmp
mov
repz
aaa
and
dec
or
pop
test
pop
jnp
or
out
lock
lock
push
xor
insl
addr16
fstps
mov
orb
xchg
xchg
inc
xchg
dec
in
push
xor
sub
call
ret
xor
adc
lret
push
or
sbb
push
out
leave
dec
in
fcomp
inc
lds
lods
jg
xor
popf
mov
stos
mov
dec
xchg
shrl
mov
mov
out
or
inc
dec
enter
cmp
cmp
sar
out
adcb
xchg
mov
mov
cmp
jnp
push
xchg
pop
ljmp
clc
outsb
stos
in
shl
push
pop
enter
leave
daa
mov
hlt
les
push
loopne
cld
and
dec
jbe
outsl
adc
xchg
or
cmp
cmp
add
and
inc
cmp
lahf
in
daa
cmp
pushf
insb
ss
lcall
mov
fildll
push
ret
fcmove
ja
push
lcall
inc
outsl
inc
fisttpll
inc
cs
xchg
xchg
or
adc
pop
jecxz
and
sahf
outsl
dec
dec
fdivrs
mov
mov
or
or
loopne
sbb
aas
xchg
inc
loope
sbb
data16
adc
mov
insb
xchg
cmp
jb
mov
push
fldenv
mov
pop
cmp
test
int
ret
xchg
or
ret
inc
cmpsl
cmc
mov
repnz
js
fsubr
or
jns
push
jo
jmp
push
jp
cs
aam
cmpsb
dec
mov
mov
clc
pop
xor
lea
dec
mov
push
cmp
fs
sub
push
js
repz
dec
leave
cmp
adc
mov
pop
add
aas
pop
sbb
into
add
mov
pushf
out
inc
lret
cmp
sarb
aas
add
xor
xor
or
xchg
loopne
fldt
test
xor
mov
add
mov
in
adc
into
mov
pop
and
push
inc
cmp
or
pop
jg
sub
ds
adc
jl
ficoml
mov
pop
fiadds
inc
es
pop
in
add
rorl
add
scas
mov
sbb
js
mov
push
pop
cmp
mov
mov
outsb
fildl
or
mov
xor
mulb
mull
adc
mov
mulb
popf
and
hlt
mov
cmpsb
sbb
pop
mov
jne
and
and
arpl
je
mov
add
and
into
setnp
inc
pavgw
add
loop
outsl
inc
mov
out
and
sbb
mov
mov
adc
jo
cs
mov
es
repnz
mov
xchg
add
xor
bound
incb
adc
and
shlb
ljmp
sarb
pusha
ret
mov
outsb
pop
test
add
lds
push
test
ret
jl
imul
add
lcall
mov
mov
int
pop
or
popa
adcb
xor
pop
sbb
mov
popf
jmp
adc
mov
lock
fsubl
pop
mov
xchg
add
xchg
sbb
stc
sbb
jno
fisttpl
rcl
xchg
movsb
jecxz
hlt
mov
adc
insb
dec
mov
mov
out
enter
repnz
mov
pusha
inc
ja
jle
outsb
aas
pmullw
cmp
leave
test
xchg
lods
mov
mov
xchg
addl
jmp
jne
mov
arpl
popf
ss
jno
jecxz
gs
stc
scas
inc
aam
jmp
inc
imul
mov
sub
clc
test
in
call
cmp
mov
mov
sub
pop
mov
or
sldt
push
add
cmp
rol
pop
dec
mov
push
mov
or
xchg
lret
rcrb
lahf
scas
sub
ret
sbb
mov
gs
fistpl
lcall
xchg
mov
aam
pop
xor
aam
imul
push
aad
push
pop
lret
out
sub
iret
mulb
or
loop
cltd
jb
or
jmp
ja
push
in
lcall
lock
lea
cli
scas
sbb
pop
shlb
mov
xor
mov
pop
mov
bound
adc
jbe
jb,pt
adcl
push
push
fadds
jg
push
inc
ljmp
aas
sub
aaa
push
fistpl
out
inc
and
push
imul
xchg
incl
or
xor
dec
adc
xor
test
adc
xchg
cmp
test
fucomp
aad
add
cmp
add
or
mov
pushf
add
sub
jno
mov
iret
lods
or
imul
rcrb
sbb
test
mov
and
lock
popf
rorl
xchg
movsl
xchg
insl
lret
daa
fstpt
xor
sub
push
pop
inc
fidivl
cld
popf
xor
ja
push
pushf
xlat
push
data16
test
pop
repz
push
fbstp
icebp
ret
mov
jle
fsub
arpl
in
adc
inc
pop
repnz
sarl
out
test
xor
scas
add
inc
cmp
je
aas
cmc
mov
add
sbbb
cmp
ret
mov
pusha
into
push
mov
xlat
mov
cmpsl
sub
xor
hlt
xchg
push
xchg
adc
sub
cltd
push
pushf
mov
jl
mov
dec
sti
pop
pop
mov
and
into
outsb
outsl
mov
and
dec
fwait
xor
loopne
stc
loope
dec
pop
getsec
testb
cmc
rcrb
xchg
and
repz
and
and
std
mov
mov
adc
aaa
stc
and
or
in
or
inc
cmpsl
outsl
lahf
pop
mov
xchg
push
ljmp
xor
push
pop
loope
movsl
jmp
nop
insb
movsb
xor
push
mov
add
stos
push
orl
imulb
into
jne
dec
xchg
rclb
jl
repnz
jmp
nop
push
mov
daa
cs
push
das
mov
jge
shrl
sarb
mov
xor
inc
loope
rorl
or
xchg
lahf
aaa
jle
flds
mov
aas
mov
ficomps
icebp
negl
daa
shll
mov
dec
ljmp
jnp
push
dec
or
or
into
sub
sub
add
adc
push
dec
add
cmp
jnp
push
and
and
pop
repnz
ja
mov
pop
push
sti
push
mov
scas
ja
dec
dec
ja
xchg
and
mov
filds
or
lock
addl
jo
dec
test
int3
ffreep
push
sub
aad
pushf
mov
pop
fcompl
and
movsl
scas
jno
jb
jno
and
xchg
mov
mov
adc
cmp
into
roll
and
sub
jmp
xlat
jns
data16
sbb
mov
inc
lock
jle
ja
jns
inc
xchg
jp
mov
fldenv
dec
cwtl
mov
ds
xor
add
mov
shl
cmpsb
inc
dec
jns
sbb
cmp
popf
in
lock
xor
jp
push
fsubrs
jge
rcll
ljmp
movsb
mov
xchg
sub
sub
dec
push
xlat
and
rorl
ja
aaa
mov
mov
inc
pop
popf
sti
xchg
std
lds
xorl
filds
push
xor
das
out
pop
add
test
pop
xor
jb
jge
bound
loop
dec
fidivl
xor
sbb
stos
and
mov
cs
fildll
inc
aaa
xchg
out
lods
ss
inc
cmc
inc
xchg
mov
pop
sbb
and
and
lcall
adc
xchg
pop
stc
cs
aam
add
cltd
add
sbb
lods
popa
xchg
rcll
push
fidivl
lds
fwait
dec
jle
xchg
add
pop
and
sub
sub
pop
cli
jae
stc
sbb
mov
jp
repnz
or
and
xchg
fxch
insb
fdivrl
ja
cwtl
and
scas
xchg
jge
mov
outsb
pop
fmuls
dec
mov
rcrb
jg
add
inc
outsl
incl
or
lcall
jae
ret
dec
mov
xchg
inc
js
addr16
rcr
xchg
scas
loope
fisttpl
xchg
mov
pop
push
sub
xchg
mov
mov
pop
mov
cmp
stos
inc
cli
out
out
stos
ror
shrb
push
ss
sub
mov
lcall
pushf
jo
add
ljmp
sbb
push
ss
xor
mov
fcoml
dec
sar
outsl
addr16
aaa
int3
xchg
iret
push
sbb
inc
sub
cwtl
pop
push
mov
mov
inc
or
sub
fnstenv
push
jb
test
sub
jg
pop
push
inc
cmp
fnstcw
mov
add
shrb
xchg
repz
clc
addr16
in
outsb
cmpsl
add
xchg
xchg
pop
mov
or
lods
jne
sbb
lds
or
mov
dec
sub
sbb
call
inc
in
pop
pusha
dec
andl
sub
pop
test
sub
cmc
or
pop
add
out
pop
aam
neg
pop
shr
jl
popa
push
dec
xchg
clc
cli
popa
jns
lea
fnstenv
xchg
insb
test
adc
lcall
in
dec
bound
pop
dec
rorl
outsl
lds
movsb
scas
rcrl
outsl
mov
pop
xchg
popa
je
fmuls
fiaddl
pop
add
movsl
or
add
mov
hlt
shll
fisttpll
int3
jmp
icebp
lahf
fsubp
cmp
mov
repnz
fs
and
pusha
push
jle
push
mov
xchg
mov
popa
mov
jecxz
inc
jnp
mov
arpl
jmp
jae
lock
in
adc
in
or
jecxz
mov
adc
push
push
divl
mov
data16
imul
add
mov
inc
sbb
imul
dec
lret
lods
cmpsl
xor
sbb
aam
movsb
pop
out
mov
fcomip
repnz
lahf
cmpsl
push
out
fs
loop
mov
dec
add
popf
cmpsb
fisubs
test
jmp
inc
adc
push
mov
or
jmp
mov
xchg
cmc
jmp
add
lea
stc
mov
in
adc
lcall
dec
out
sbb
aaa
dec
test
cs
shll
aam
fistpll
jne
fldt
pushf
je
push
aad
push
pop
aaa
jle
pop
test
sub
cs
pop
dec
je
ret
sahf
sbb
sti
test
outsb
push
lds
fimull
sub
sbbb
or
mov
mov
lcall
xchg
movsl
add
cmp
out
sahf
push
push
pop
loop
mov
insb
shl
jmp
pop
mov
xor
mov
xor
icebp
es
mov
out
mov
in
jg
repnz
xchg
sarl
andb
test
adc
js
rorb
push
xor
sbb
lcall
cmp
aaa
adc
dec
test
sbb
test
push
mov
fs
mov
in
sub
xchg
jnp
icebp
jge
mov
test
outsl
dec
push
xor
push
ss
pusha
mov
mov
test
xchg
push
cmp
popl
sub
repnz
test
lret
add
jmp
and
mov
es
cmp
insl
nop
push
pushf
push
and
pop
mov
cmpsl
repz
out
mov
pop
stos
push
stc
mov
cmp
pushf
js
jecxz
imul
push
xchg
and
loope
dec
loop
test
lret
pop
gs
lods
cmp
push
adc
pop
xor
mov
ja
mov
and
adc
test
jae
lds
sbb
mov
iret
dec
push
jecxz
dec
dec
xlat
sub
divb
mov
jno
jae
sbb
scas
jne
inc
xchg
mov
fdiv
insb
xlat
or
sahf
jae
into
jecxz
push
cli
jmp
pop
add
dec
scas
adcl
shrb
sub
pop
cmpb
mov
xor
ja
ficoml
test
xchg
xchg
push
notl
mov
mov
ds
negb
jae
fimull
fistpll
inc
loop
das
outsl
push
iret
and
or
in
ljmp
add
mov
mov
cli
jne
imul
das
adc
rclb
xor
cmpsb
sub
push
dec
icebp
fs
dec
loop
pop
cmp
mov
mov
pop
int3
pop
add
arpl
inc
mov
das
jnp
inc
fs
sub
scas
gs
imul
dec
ds
lret
mov
dec
pop
mov
out
push
push
xchg
mov
popf
je
addr16
aam
in
fwait
test
imul
inc
fsubs
jae
xlat
out
stc
and
ffree
rcrb
pop
xor
rcrl
rclb
jno
jae
mov
or
sbb
popf
lods
test
dec
repz
mov
into
cmpb
jbe
call
repz
shll
xchg
inc
adc
sbb
push
mov
jg
adc
in
movsb
jle
movsb
mov
data16
cmp
dec
jg
fstpl
add
stc
adc
rolb
enter
aaa
out
sbb
das
sub
mov
push
jl
mov
lret
in
mov
imul
sub
in
jno
cmp
fadds
aad
in
cwtl
dec
ljmp
xchg
bound
stos
xor
jg
test
lret
sahf
loop
cmp
jmp
cld
inc
jl
xchg
test
mov
cwtl
pop
fisubl
adc
mov
test
jbe
popf
jne
push
or
jno
insb
aaa
jecxz
jge
inc
test
or
push
xchg
ficomps
sti
and
and
call
xchg
ror
sbb
and
les
push
mov
test
mov
mov
xchg
mov
adc
jno
sbb
mov
mov
cli
je
dec
int3
cli
subb
mov
mov
shlb
dec
jecxz
add
and
out
xchg
addr16
push
sarb
mov
fbstp
cmpsb
movsl
sub
mov
imul
mov
and
orb
xlat
jo
std
rcr
rclb
jns
jo
loop
and
in
or
fs
outsb
movsl
mov
push
cltd
mov
push
popf
push
jne
and
out
rclb
outsl
sbb
jge
cmp
pop
dec
shl
lods
mov
push
daa
sbb
mov
pop
add
je
mov
fwait
aam
mov
rcrb
adc
mov
pop
sub
test
mov
lcall
push
sub
fwait
xor
mov
in
cmc
mov
mov
fsubs
sahf
mov
dec
sbb
cmp
xor
outsb
out
gs
mov
lds
daa
rol
into
sti
fidivrs
xchg
cltd
ficoms
lret
or
mov
dec
xor
add
or
and
xchg
xor
or
shll
push
sub
add
mov
loopne
pop
outsl
mov
xorl
pusha
sub
xchg
lds
je
dec
add
mov
mov
outsl
fcmovnu
es
bound
mov
mov
jne
cltd
aaa
fsubp
mov
scas
out
loope
sahf
jns
push
and
iret
cs
mov
mov
fwait
mov
sar
stc
dec
push
lret
outsb
inc
ss
dec
sbb
cwtl
iret
xchg
icebp
mov
outsl
jno
stos
jmp
and
pop
push
std
and
inc
arpl
xor
into
movsl
sbb
icebp
push
bound
dec
xor
lcall
rclb
jb
sbb
jbe
icebp
sub
pop
adc
xor
sbb
lods
push
sub
jl
cmpsb
adc
in
mov
xchg
and
sbb
add
lods
cmp
clc
pop
mov
xchg
addr16
inc
fdivp
dec
dec
pop
sbb
or
lock
test
iret
lret
in
int
jecxz
jmp
int3
movsb
scas
dec
pop
js
mov
adc
adc
jmp
sti
dec
test
xor
je
dec
fisttpl
gs
popa
aam
stc
cmpsl
ja
mov
test
lret
rcll
jb
and
fimuls
push
ret
dec
pop
test
mov
cmp
shlb
fists
das
jl
pusha
push
movsl
cmpsb
aaa
mov
dec
jg
int
ret
xor
std
dec
ret
dec
ja
test
sub
push
in
fcomps
sbb
mov
outsb
mov
pop
sbb
repz
fsubs
scas
rcr
negl
and
pop
cs
cmp
xorl
cmp
and
xor
nop
daa
iret
xlat
js
loopne
dec
mov
or
add
inc
js
or
pop
out
aam
push
push
dec
mov
dec
jbe
dec
call
mov
mov
sbb
scas
mov
push
clc
rcr
popa
popf
stc
xchg
loopne
xchg
in
lahf
cmp
lcall
shrb
dec
mov
test
int3
lds
cmp
out
inc
mov
adc
lcall
adc
cmp
jo
out
test
rorl
enter
sti
xchg
scas
mov
adcl
in
jbe
jl
sbb
add
mov
jle
adc
stos
lds
test
daa
in
lret
dec
cmp
test
icebp
movsl
imull
clc
outsb
xlat
mov
mov
push
pop
mov
insb
or
push
or
fdiv
jle
ds
insb
outsb
cli
jns,pt
sahf
mov
fldl
and
in
in
jne
jo
add
dec
xor
or
fcoms
fbld
jmp
mov
repz
dec
call
push
fcmovbe
xchg
pusha
push
xchg
mov
gs
and
iret
repnz
gs
push
or
xor
mov
fstl
fnsave
pop
dec
jmp
cmp
push
test
nop
das
pop
arpl
aam
add
test
out
push
lret
sti
ret
pop
add
test
mov
out
fcmovnbe
or
xchg
add
inc
jne
and
and
pop
push
push
mov
int
test
xchg
fstl
adc
imul
sbb
cmp
xor
ljmp
sub
or
xor
jbe
sbb
std
shl
ja
ret
mov
mov
cmpsl
jg
adc
mov
pop
insb
xlat
and
rclb
aam
jle
sbb
insb
lret
ljmp
loop
lret
lret
test
push
and
adc
push
sbb
xchg
cltd
xchg
clc
cmp
call
mov
pusha
ljmp
adc
imul
pushfw
inc
and
shlb
mov
mov
lock
inc
fadd
add
enter
fimuls
clc
push
push
insl
pop
xor
imul
dec
push
in
dec
ljmp
xchg
inc
push
xchg
scas
fildl
fistpll
jge
aaa
decb
pop
movsl
shr
pop
out
inc
leave
push
mov
test
pop
mov
and
push
mov
iret
leave
mov
test
sar
add
out
mov
daa
sub
imul
inc
gs
jg
bound
xor
mov
mov
cmp
mov
js
daa
sub
xor
bswap
jns
xchg
dec
xchg
xor
adc
xor
test
xchg
dec
popf
dec
ss
cmp
out
lds
inc
sub
mov
inc
sub
and
pop
clc
sub
cmp
sub
outsb
fisubrs
inc
push
aas
push
or
notl
bound
push
in
sbb
or
inc
popf
sub
jecxz
mov
sub
mov
leave
cs
push
subb
xchg
stos
js
adc
filds
insl
scas
xchg
pop
fadds
sbb
mov
xchg
mov
rcr
arpl
and
mov
hlt
mov
leave
adc
dec
pushf
cld
rolb
in
pop
outsl
nop
cwtl
push
insl
push
xor
scas
dec
leave
lods
inc
xor
dec
jg
in
jbe
arpl
pop
xchg
xchg
push
ss
and
sub
ja
fbstp
loopne
mov
mov
sbb
mov
aaa
dec
fcompl
outsb
pop
and
aaa
or
out
lods
adc
sbb
push
mov
and
mov
xlat
fisttps
mulb
andl
push
adc
sub
xlat
sub
outsb
outsl
sbbb
popf
int
xor
cmpsl
in
les
daa
jmp
dec
lods
into
shr
loop
add
fdivrl
out
pop
jp
xchg
movsb
push
xchg
push
in
arpl
mov
fs
jecxz
hlt
pop
adc
fistpll
fstp
jnp
mov
arpl
test
lods
push
repnz
mov
ljmp
ss
lds
add
lahf
arpl
cmp
hlt
lahf
mov
xchg
aam
subb
fsubr
mov
or
and
jecxz
icebp
jp
adc
xchg
mov
fstp
sub
shll
fs
mov
test
cld
movsb
sub
loope
popl
arpl
shlb
push
mov
xor
push
sbb
pusha
inc
negl
mov
sub
push
test
sbb
sub
in
test
mov
addr16
std
fcmovnbe
or
pop
and
ficoml
rclb
fidivs
repz
cs
jne
cs
in
in
cmp
scas
loope
fisttpll
jg
jbe
push
sub
lret
lods
call
xchg
out
adc
in
cmp
jae
lcall
adc
adc
loop
out
je
add
cwtl
push
adc
mov
daa
shll
jbe
repnz
push
out
sub
and
clc
and
data16
sub
pop
ss
jl
dec
out
scas
mov
adc
jne
pop
push
inc
sub
pop
fucomi
mov
mov
shlb
out
ds
sbbb
or
mov
ret
or
inc
movsl
xchg
mov
outsb
xchg
gs
xor
xor
add
cli
sub
ss
and
clc
jmp
pop
push
mov
popf
xor
sbb
mov
in
adc
cmpsl
outsb
test
jp
xor
add
mov
mov
xchg
pop
inc
dec
lods
loopne
cmp
repnz
repz
mov
lret
je
xchg
je
lcall
stos
and
sub
mov
mov
std
sbb
stos
sbb
mov
xchg
lock
icebp
sti
mov
fcomip
lahf
fstpt
loope
dec
jp
xor
cmp
cs
mov
add
pop
sbb
jl
xchg
outsl
jb
nop
dec
mov
mov
mov
movsb
fmull
incl
movsl
popa
dec
jg
mov
xchg
or
rcll
std
jge
or
pop
lock
enter
mov
cmp
add
aad
dec
movl
fwait
push
leave
ljmp
or
lret
pop
repz
std
ret
das
xor
repz
mov
pop
lea
pop
sbb
idiv
xchg
xchg
add
mov
jb
repz
scas
call
pop
mov
inc
cs
add
cmp
inc
lds
nop
pop
adc
dec
rolb
adc
movsl
ds
popf
test
xchg
stos
mov
cmp
pop
or
or
sub
inc
cmp
shll
jb
jmp
fwait
cmp
clc
add
arpl
jle
sbb
sub
sub
jl
loope
mov
adc
push
jo
dec
lret
push
shr
movsl
add
ret
test
add
out
pop
scas
test
test
movsb
xor
pop
inc
loop
adc
mov
arpl
cli
out
sub
test
cmp
mov
iret
imul
negl
lods
pop
filds
ja
jp
out
and
test
cmp
xchg
push
test
adc
scas
test
int
inc
mov
jp
cmp
mov
xor
bound
xchg
loopne
int3
sub
nop
int3
testl
popf
cmp
push
out
sub
push
xchg
or
jl
jecxz
push
mov
push
loope
sbb
cmp
adc
jl
jb
test
pop
pop
roll
mov
push
cli
adc
fcmovbe
lods
xchg
sbb
lods
call
push
mov
mov
push
xchg
jmp
cmp
mov
mov
inc
mov
popf
inc
push
push
pop
pop
and
nop
mov
add
xor
je
idiv
vpavgw
add
push
out
popa
int
add
es
or
mov
xchg
aaa
repz
dec
loopne
and
or
cmp
add
in
mov
lds
mov
xor
dec
or
popa
jbe
loopne
sti
fld
cmp
lods
dec
xor
mov
inc
call
dec
int3
pushf
test
hlt
ret
push
mov
pop
push
repz
dec
rorb
daa
mov
mov
popa
xlat
xor
push
dec
mov
mov
imul
pop
aad
stos
cmpsl
jecxz
cltd
rclb
addb
inc
pop
cld
cmc
ret
push
fwait
inc
mov
mov
sahf
aad
orb
pusha
std
dec
ja
rcl
inc
sbb
mov
jne
sub
xchg
js
pop
test
inc
dec
push
fs
xchg
sub
rclb
arpl
cmc
adc
mov
cs
shll
fs
xchg
push
cmp
cltd
mov
repnz
data16
cmp
daa
inc
js
cld
pop
sub
mov
orb
loop
insb
mov
xor
add
js
pop
sub
fildll
sbb
jg
test
mov
mov
or
decb
aaa
mov
pop
xor
push
icebp
test
or
mov
add
popf
pop
or
hlt
loop
mov
push
popf
mov
daa
lock
jnp
pop
insl
imul
jns
xlat
scas
sarb
pop
sub
es
cmp
sbb
das
jae
adc
inc
or
aad
adc
inc
mov
add
and
mov
test
adc
out
lcall
lret
dec
pop
lahf
mov
xchg
ret
dec
mov
add
sbb
jno
fcomp
xor
pop
add
sahf
push
fisttpll
xchg
mov
dec
mov
and
test
out
movsl
mov
mov
roll
or
stc
scas
and
aad
adc
std
mov
adc
mov
aaa
push
iret
mov
pushf
int3
jle,pt
or
cwtl
and
mov
pop
push
stos
mov
cmp
cmp
push
xor
mov
rclb
pop
add
push
cmp
inc
sub
out
add
fnsave
push
negb
cwtl
pop
movsb
test
push
lcall
cwtl
xlat
es
adc
mull
out
loope
arpl
pop
aam
std
push
sub
inc
dec
dec
cwtl
int3
xor
in
ds
ja
ret
inc
divb
push
dec
inc
or
imul
add
cmp
pusha
push
xchg
mov
add
dec
push
dec
rep
and
shll
lea
js
ds
repnz
and
je
or
clc
mov
push
fildll
cmp
push
sbbb
cmp
pop
das
shrl
jae
mov
xlat
and
and
pop
cwtl
xor
clc
xchg
sahf
sbb
cmc
mov
add
repz
jp
push
outsl
into
xor
bound
popf
lahf
jge
pop
mov
lret
or
out
ja
test
loop
mov
adc
mov
dec
mov
fs
sbbl
daa
in
jbe
dec
lret
test
pop
mov
inc
loopne
push
movsl
in
cli
jmp
enter
sbb
fadds
xchg
loope
enter
cli
vpunpckhqdq
add
mov
xlat
mov
ret
arpl
and
sub
out
adc
sbb
jg
sub
xchg
nop
jg
sbb
leave
loop
dec
mov
push
scas
mov
xchg
jp
mov
rcrb
mov
jle
lahf
cltd
sbb
push
dec
xor
mov
and
mov
aad
mov
test
lock
xlat
enter
and
iret
xchg
mov
and
scas
lret
jb
or
push
out
pop
ret
pop
mov
pop
fst
mov
je
inc
mov
mov
lods
mov
js
sub
sub
push
fsubs
lret
pop
testl
push
push
pop
rolb
sbb
pop
mov
fwait
orb
add
in
cld
outsb
mov
inc
in
cmpsl
and
jno
xchg
into
adc
bound
and
mov
cmp
sbbb
dec
mov
arpl
jo
stos
pop
out
pop
pop
jno
xchg
jmp
lds
icebp
clc
aad
adc
mov
sub
lods
addb
xchg
xchg
nop
in
repz
clc
xchg
pop
sbb
or
sub
mov
cld
mov
loopne
jmp
repz
fsubs
push
jle
mov
push
popa
into
lea
fsubrl
jns
mov
jbe
xor
test
mov
mov
pop
dec
out
jmp
inc
icebp
shrl
in
pop
jnp
movsl
or
push
shrl
pop
and
dec
pusha
mov
inc
cs
lods
mov
rorl
push
inc
and
cli
sbb
js
push
adc
mov
adc
mov
rolb
jo
js
sub
push
xor
pop
push
pop
mov
imul
add
pop
pop
lret
xchg
sub
sub
lods
jnp
out
push
into
sbb
mov
test
and
das
adc
sbb
iret
cmpsl
lock
cwtl
les
sub
push
dec
lods
flds
add
repnz
adc
pop
stos
repz
mov
push
add
or
test
jno
imul
shll
mov
icebp
push
call
mov
or
sub
mov
cmp
inc
addb
cmpsb
das
mov
gs
test
and
cs
and
and
dec
dec
int
imul
clc
stos
cmp
cltd
stos
cmp
sbb
adc
mov
mov
jl
mov
sbb
add
mov
mov
cmp
mov
jno
icebp
daa
push
loopne
clc
sub
dec
out
shll
fimull
add
xor
cmp
mov
pop
dec
mov
mov
stc
ss
leave
xchg
pop
scas
inc
xchg
sub
icebp
fwait
adc
xlat
cmpl
lods
popf
add
jmp
jns
nop
push
out
bound
cmp
sbb
jbe
loopne
push
in
out
inc
sti
sub
sub
aam
xor
and
jns
mov
icebp
cmc
or
xchg
add
std
stos
mov
dec
pmullw
xchg
mov
daa
xor
aam
loopne,pt
sbb
pop
jmp
inc
pop
sub
stos
sbb
inc
lods
mov
lea
cmc
dec
ficoml
lods
xchg
loope
pushl
inc
add
stc
cmp
sti
movsl
jbe
fs
popf
lods
fistl
xchg
adc
dec
sub
or
dec
aad
leave
mov
lods
mov
aas
int3
mov
pop
mov
and
popa
shrb
nop
adc
push
xlat
jns
pop
addr16
rorl
and
arpl
bound
add
cmc
in
mov
xchg
in
bound
sub
sti
fwait
xchg
bound
lods
push
xor
xchg
js
mov
mov
out
inc
inc
rep
xlat
and
adc
sbb
pop
stos
pop
mov
xchg
enter
sbb
or
push
arpl
leave
in
mov
js
mov
pop
aas
xor
mov
das
adc
push
ja
jo
sub
xchg
cltd
jecxz
jl
pop
push
mov
or
dec
xchg
rclb
call
aam
jmp
mov
cmpl
lock
push
jmp
inc
dec
sbb
cli
cmpsb
jae
pop
mov
cmp
jnp
jno
lods
repz
pop
out
xor
add
jns
and
add
outsl
adc
mov
mov
xor
jbe
mov
sbb
lods
jno
je
repnz
mov
fnsave
call
xchg
sbb
and
aad
lcall
pop
inc
adc
sbb
mov
imul
inc
ljmp
add
cmp
xor
clc
sahf
sbb
inc
xorb
inc
mov
lods
xchg
out
not
adc
cmp
add
gs
push
rclb
inc
daa
sbb
fidivrs
out
xorl
jecxz
in
repnz
js
test
jne
mov
ljmp
mov
pop
fadds
push
rorl
mov
and
insb
add
inc
or
into
pop
or
adc
ret
sbb
xchg
sbbl
mov
xor
add
into
aam
imul
insb
into
into
lahf
dec
aas
hlt
sbb
bound
in
scas
leave
daa
fistl
mov
ss
fs
rolb
or
ds
adc
je
cmp
js
push
imul
fcmovnbe
cld
loop
xlat
mov
int
enter
sbb
sbbl
out
mov
xchg
sub
mov
subb
lret
or
pop
inc
mov
add
xchg
loope
xchg
popf
mov
mov
add
jp
jns
push
mov
adc
pop
hlt
push
jno
enter
sahf
add
sti
push
or
inc
aam
adc
pop
sahf
xchg
or
jmp
sub
dec
sbb
fnstsw
fsubrp
inc
lret
ljmp
and
xchg
push
into
pop
xchg
pushf
mov
outsb
adc
arpl
jmp
mov
inc
in
push
push
dec
xchg
push
mov
insb
sbb
outsl
aaa
imul
mov
sub
jg
repz
jnp
in
idivl
sbb
cmpsl
out
shlb
mov
sbb
aad
cs
xor
mov
lret
cmp
outsl
in
shll
pop
scas
dec
shll
scas
in
mov
out
aad
xchg
sbb
mov
addb
outsl
dec
add
inc
test
sub
sbb
bound
push
popl
cmpsb
xchg
out
push
pop
jb
xor
xchg
pushf
daa
cwtl
sub
imul
or
push
mov
inc
loopne
dec
or
hlt
pop
or
mov
cmp
cs
inc
mov
fsub
jmp
aad
ficoml
and
push
cmp
mov
stos
cmp
mov
adc
ret
push
inc
stc
les
sub
xor
insb
push
aaa
add
sbb
pop
movsb
jo
int
cmpsb
lahf
daa
mov
pop
sub
sbb
jno
fsubrl
cwtl
lods
out
je
mov
cmp
inc
xchg
lret
pop
jg
in
fdivrp
pop
hlt
push
and
fisubs
adcl
pop
testb
fdivl
mov
cli
lret
cli
rcrb
mov
push
outsb
pop
test
pop
mov
pop
cmp
adc
std
divb
cwtl
pop
lods
push
lods
or
sbb
std
or
test
mov
fdivs
cltd
or
jnp
daa
dec
cmpsl
mulb
stos
cmc
jl
dec
test
sub
mov
jae
clc
loop
lcall
dec
out
add
mov
enter
xor
mov
in
in
pop
data16
ljmp
scas
ja
les
test
dec
xchg
loope
fsubs
inc
cltd
sti
subb
add
popf
push
xchg
ds
lods
mov
xchg
cmc
push
dec
pop
or
cmc
dec
mov
push
jae
mov
cmp
lahf
mov
xchg
pusha
repnz
dec
or
xchg
test
mov
mov
cmc
imul
pushf
mov
lods
movsb
jnp
cmp
lret
mov
add
mov
sub
lret
jg
out
cmp
cmc
loope
mov
enter
sub
sbb
mov
cmp
test
in
sub
mov
push
mov
xchg
jae
sahf
ss
mov
lods
outsl
and
cbtw
pop
xchg
out
mov
movsl
and
adc
fsubrl
rorl
in
xor
pop
sub
and
ret
cltd
aaa
pop
cmp
jl
lret
div
cmp
adc
scas
and
cwtl
dec
add
fs
push
insb
incb
lcall
pop
les
inc
cmp
and
adc
out
dec
ds
addl
in
in
jle
enter
jbe
or
push
orl
lret
mov
sbb
dec
andb
arpl
in
push
in
fidivrs
mov
pop
mov
pop
loop
add
dec
lods
lods
mov
mov
std
sub
and
push
adc
add
jno
sub
movsl
sub
push
addl
cs
pushf
adc
pusha
rcl
push
aaa
xchg
inc
xchg
int
push
fwait
mov
pop
dec
cmc
outsl
popf
cs
mov
push
int3
pop
lods
mov
adc
adc
pop
pop
cwtl
imul
ret
mov
and
jle
fsubr
sub
lds
and
adc
mov
or
mov
fdivr
xchg
adc
stos
xchg
dec
or
xor
push
jae
mov
fdivl
dec
sbb
xor
bound
stc
clc
adc
fs
mov
cmpb
cmpsb
popa
cmp
adc
pop
sbb
jmp
sub
adc
jl
leave
fidivrs
mov
mov
in
mov
decb
fidivrs
repnz
int3
xor
xchg
fldl
inc
icebp
out
hlt
push
popa
push
inc
fxch
xor
shr
cmp
cltd
push
loope
and
jle
outsl
pop
ror
xchg
jmp
hlt
repz
fdivrp
int
les
enter
or
sub
cmc
cmc
sbb
int3
cmp
insl
test
cmp
stos
dec
xchg
sub
jne
stos
inc
test
xor
mov
add
mov
inc
or
leave
stos
insl
mov
or
lret
and
mov
sbb
pop
es
push
movsb
or
push
inc
sbb
pop
mov
fildl
mov
mov
push
out
adc
cltd
and
decl
cmp
jmp
xchg
sti
cmc
mov
bound
mov
pusha
mov
pop
push
test
jl
mov
mov
xor
lock
push
cs
dec
inc
xor
cld
cmc
or
lods
adc
addr16
sti
aad
pusha
sub
inc
jno
pop
pop
add
sub
int3
cmp
fisttps
cwtl
aaa
or
cli
xor
mov
ss
dec
mov
add
in
mov
adc
scas
imul
mov
test
pop
xor
popa
call
mov
dec
outsl
lret
jb
mov
mov
adc
cmpsb
shll
add
in
outsl
inc
mov
out
call
cwtl
mov
push
flds
test
sbb
xchg
test
push
fisttpll
cld
stos
scas
mov
hlt
sbb
xor
ss
inc
jne
iret
xchg
xor
fimuls
inc
dec
mov
pop
xor
sub
inc
cmc
mov
mov
jns
xor
sub
cmp
jbe
cmpsl
ret
out
es
mov
mov
test
mov
lret
call
std
jl
xchg
or
bound
mov
cmp
pop
xchg
cmp
xor
test
mov
iret
sar
push
std
mov
loopne
mov
rcrb
add
xchg
inc
imul
in
lahf
std
test
das
push
outsb
sbb
in
fidivs
pop
pop
pop
fidivrs
mov
add
jnp
mov
cltd
cmp
and
fwait
lea
into
scas
imul
rorl
icebp
and
mov
sbb
lcall
insl
in
aaa
mov
mov
adc
jae
jns
xchg
cmp
les
mov
xor
lds
push
jl
xor
pop
or
inc
mov
stc
mov
cmp
add
or
pushf
dec
mov
lods
jg
lods
iret
in
mov
out
test
rcr
mov
in
add
hlt
pop
add
add
jge
pop
cld
stos
xor
push
inc
insb
dec
sub
std
dec
pop
aam
mov
dec
test
push
mov
sbb
jno
xchg
popa
in
xor
dec
aas
mov
cmpsl
mov
add
idiv
mov
xor
ds
add
das
mov
ficoml
xlat
pop
jge
dec
data16
xor
les
and
imul
cmp
pop
inc
aam
neg
xchg
add
fisttps
jb
xor
call
nop
push
mov
les
insl
adc
lret
mov
adc
ja
lods
mov
inc
sub
insl
pop
mov
push
inc
mov
nop
xchg
dec
fdivr
xor
dec
fmull
std
dec
mov
ljmp
cwtl
and
push
and
sahf
xchg
sbb
inc
loopne
pop
mov
sbb
adc
retw
dec
addr16
sbb
loop
mov
jo
pop
push
push
loope
popa
add
pop
cmpsb
inc
cmc
and
inc
cltd
fdivl
push
sub
mov
es
fwait
js
jne
inc
daa
in
xchg
popf
das
push
les
sub
stos
jbe
cmp
cmp
leave
pushf
sub
push
popl
cli
push
outsl
adc
or
pop
cmp
fistl
pop
jmp
dec
gs
mov
fcmovne
xor
iret
rcll
jp
movsb
rcrb
test
out
out
outsb
arpl
aaa
mov
and
negl
mov
sbb
stos
jns
adc
mov
jnp
add
push
or
pop
mov
bound
add
fisttpl
adc
rolb
push
mov
imul
pop
push
cmp
sahf
cmp
pusha
scas
rcll
adc
fisubs
lcall
cmp
mov
sbb
inc
pop
mov
insl
dec
je
push
mov
mov
sub
dec
hlt
or
mov
lds
inc
pop
lret
mov
push
ja
jmp
mov
push
test
andl
dec
test
in
mov
sti
xchg
stos
imul
loopne
je
jg
call
out
adc
jl
pop
xchg
jne
into
movsb
insb
jmp
pusha
int
clc
aas
push
mov
into
xor
icebp
stos
mov
xor
mov
xchg
in
in
movsb
inc
mov
nopl
out
aad
faddp
subb
int3
xchg
inc
sarl
mov
stc
lods
inc
add
jge
mov
mov
pop
jecxz
xchg
popf
flds
sub
insl
adc
cmp
xchg
mov
push
jp
mov
xor
les
enter
and
adc
add
mov
rcrb
cltd
ljmp
imul
das
outsb
add
jnp
loopne
mov
and
clc
inc
in
stc
and
sbb
xor
dec
data16
xor
xor
enter
stos
nop
pop
dec
pop
jmp
dec
out
or
mov
mov
cld
out
pushf
mov
hlt
jae
lahf
sbb
inc
fadd
inc
xchg
les
cmpl
cmpsl
inc
adc
imul
lds
test
mov
jne
lods
xchg
je
out
xor
mov
cmp
sub
jbe
push
sub
lret
adc
fnsave
dec
sub
ret
fmull
mov
out
dec
stos
inc
jae
sub
jns
cmpsb
push
sub
cmpsb
shlb
xchg
jmp
jp
mov
push
push
xor
push
jecxz
xor
sub
insb
nop
mulb
repz
clc
ljmp
add
pop
aaa
cmp
jbe
lea
js
xchg
nop
mov
aas
inc
repz
movsb
dec
pop
sahf
in
sub
inc
mov
sub
jnp
pop
incl
cmp
xchg
std
pushf
or
imul
insl
adc
fnsave
xor
movsb
lea
jne
sub
je
mov
sub
pop
inc
das
mov
push
enter
movsb
stos
clc
push
and
inc
jecxz
jecxz
ficompl
or
ret
mov
mov
mov
aam
addr16
xchg
xor
adc
cmp
fiaddl
push
add
dec
loopne
cmp
push
xor
xor
lea
rclb
jle
jno
inc
clc
rolb
mov
sahf
or
push
pop
pop
inc
shl
add
inc
fmuls
pop
mov
stos
mov
xor
sub
dec
fst
mov
icebp
jae
xchg
sbb
fists
ret
fdivl
mov
sti
scas
nop
ret
sbb
shr
popa
lods
in
cs
push
xor
stc
jge
cs
inc
out
mov
jecxz
call
mov
fidivs
fwait
pop
bound
addb
xor
out
aaa
shrl
lds
cld
xor
repz
notl
push
lcall
popf
andl
mov
out
dec
mov
lods
ss
mov
push
jle
lret
adc
fbstp
xchg
int
sbb
cmp
cmp
std
dec
arpl
rcrl
ja
inc
xchg
loope
dec
sub
cmp
lods
or
test
pop
inc
lea
xchg
sub
cmp
cs
cli
xor
xlat
pop
pop
pop
jmp
rclb
in
in
mov
jnp
outsb
and
xchg
push
imul
out
sbb
inc
mov
jbe
insb
aam
xor
adc
and
incl
stc
and
jg
dec
loop
shll
js
movb
hlt
loope
pop
roll
out
mov
mov
add
loope
fucomi
pop
xor
outsb
sub
cmpb
js
sub
push
sahf
cmpb
sbb
fmuls
sub
fbld
xor
adc
adc
push
adc
fcomip
inc
int
or
cvtpi2ps
mov
jge
ja
lds
mov
aam
cli
mov
arpl
jg
jns
mov
mov
push
jbe
pop
hlt
mov
cltd
subl
inc
cmp
cmpsb
stc
mov
rol
or
in
jmp
dec
mov
mul
imul
and
cltd
cwtl
xchg
mov
cmp
stos
cmpsl
mov
stos
fistps
xor
cmp
cmpsb
js
jg
inc
pop
cmpsb
adc
hlt
xchg
mov
jno
add
test
jl
jg
push
jg
fdivrl
popa
out
push
xchg
push
mov
pushl
out
outsl
loop
aad
lods
loop
xlat
dec
rol
cwtl
add
stos
popf
xchg
push
sub
imul
sub
push
iret
aad
cmp
fcomps
adcl
sub
push
outsl
cld
mov
pop
cmp
cmpsb
sub
add
mov
ss
push
dec
mov
push
aaa
aaa
je
xor
mov
leave
gs
in
addb
mov
ja
ret
loope
imul
enter
sti
sub
negl
xchg
sbb
outsl
subl
ss
adc
pusha
stos
cmpsb
jp
enter
testl
test
loope
movsb
addr16
hlt
insl
push
arpl
xchg
and
movsb
mov
pop
bound
or
xchg
sarl
addr16
jmp
aam
cmc
js
or
xchg
cmp
sbb
gs
in
repnz
out
xchg
loopne
cmpsl
cld
sub
icebp
dec
add
or
cmpsl
xor
mov
cmp
push
les
neg
pop
mov
in
lret
push
out
xchg
addr16
notb
adc
ja
jmp
sub
add
pop
lods
je
insb
clc
push
push
push
push
cli
or
add
cmp
insl
xlat
test
ds
adc
lret
cmpsl
mov
push
inc
stos
in
call
out
mov
push
mov
mov
dec
xor
icebp
scas
sbb
cltd
mov
orl
js
mov
es
push
pop
data16
pop
in
or
or
push
scas
sub
xchg
lahf
add
pop
adc
dec
mov
mov
shlb
pusha
sahf
push
fdivs
insb
cmpsl
lea
lea
pusha
test
sub
cmpsb
lock
xlat
adcl
xor
ljmp
xor
aad
mov
jp
popf
inc
push
das
sbb
cmp
or
sbb
or
icebp
es
cmpsb
xor
xor
jg
sbb
adc
cmpsl
in
mov
push
inc
ljmp
jecxz
ljmp
sub
add
jecxz
jnp
andl
and
aaa
lock
in
jle
inc
pop
fsubp
adc
notl
mov
bound
mov
inc
mov
xchg
jg
loopne
inc
lcall
mov
push
outsb
xor
xchg
xchg
hlt
sub
imul
add
dec
xlat
inc
enter
pop
and
enter
lret
push
push
dec
dec
dec
loopne
xchg
inc
sahf
popa
or
loopne
shll
add
sbb
bound
fs
sbb
jns
sbb
ds
cltd
ret
sarb
fstl
jo
and
push
add
adc
fldl
in
cld
or
gs
jge
push
std
mov
dec
mov
jp
inc
lret
dec
xchg
and
cltd
int
popf
and
insl
hlt
hlt
sbb
push
lods
cmp
push
xchg
mov
jmp
mov
jns
add
add
sub
shll
xchg
pusha
adc
pop
testl
scas
sti
rcll
or
in
cmpsb
sub
sbb
pusha
push
test
add
addr16
jo
cld
mov
rcl
or
js
test
mov
jecxz
adc
in
lahf
sbb
das
dec
add
dec
pop
and
mov
rcr
xor
cmp
push
cltd
dec
lcall
sub
cmc
mov
repnz
mov
xor
jbe
shlb
inc
jo
xor
jle
xchg
pop
fucomip
popf
ljmp
push
lock
xchg
add
push
pop
loope
push
fisttpll
aaa
and
push
xchg
sbb
into
and
mov
xlat
cmp
insl
pop
dec
pop
jne
sbb
mov
or
adc
xor
mov
fwait
jge
xchg
insb
stos
mov
scas
inc
xor
sub
mov
sub
jge
aaa
adc
jmp
mov
lods
xchg
push
aas
rcll
and
movsb
shl
adc
inc
xor
inc
and
insl
data16
std
out
push
es
jb
add
sub
push
out
push
push
jne
xchg
inc
jns
int3
sub
adc
int
jmp
mov
int3
mov
fdivr
pop
push
dec
jne
jb
add
ret
mov
arpl
fadds
icebp
lcall
dec
sbb
addb
addr16
andb
clc
mov
sub
loope
and
cmc
repz
xlat
sub
inc
jle
add
testb
sti
insl
bound
bound
xor
out
sbb
cmp
stos
adc
push
mov
ja
xor
add
inc
dec
mov
mov
repnz
and
mov
test
fisttpll
adc
addr16
dec
pop
mov
test
insl
subl
mov
lods
pusha
mov
mov
imul
lret
add
imul
or
lahf
daa
jp
lods
pop
pop
dec
cmp
mov
jae
js
sub
mov
sahf
das
outsb
scas
fstps
pop
cmp
push
into
lret
sar
mov
jbe
scas
push
repnz
jge
jecxz
int3
adc
addl
ret
and
push
fiadds
repnz
aad
ds
outsb
imulb
lods
inc
sarb
mov
fisttpl
xchg
sbb
xchg
cli
stc
or
pop
inc
pushf
sbb
repz
loopne
leave
bound
cli
nop
out
inc
stos
decl
shrl
and
or
lods
push
sbb
popf
sub
in
and
inc
dec
psubd
pop
and
adc
addr16
and
std
pop
xor
sub
into
fisttps
add
es
adc
sbb
and
into
jmp
xor
test
push
add
daa
bound
fcom
inc
push
out
mov
addr16
das
inc
ret
rol
sub
add
mov
fdivrl
mov
add
test
pop
pusha
sbb
push
jne
and
and
mov
popa
dec
aam
pop
lock
out
test
mov
ror
fdivl
add
test
cmc
jbe
mov
xor
pop
lods
sti
jnp
and
mov
mov
or
add
push
jo
movsl
sub
jle
cmp
enter
mov
ss
scas
stos
jo
stc
jecxz
fisubs
fisubs
or
lods
aam
cmp
xor
scas
shrb
push
mov
daa
lret
pop
ss
daa
rcrb
cwtl
cmp
lcall
sti
push
or
lret
add
lock
inc
jmp
mov
insl
fldcw
jne
cltd
cmp
dec
into
xchg
dec
and
and
into
mov
leave
dec
dec
or
push
icebp
cmpsl
mov
les
cmc
or
pop
and
lods
add
sub
and
lea
fwait
mov
or
fwait
or
je
mov
jb
pop
pop
pop
push
pop
cmc
inc
inc
and
clc
push
push
cmpb
pop
adc
or
ljmp
lcall
movsb
or
cltd
mov
xchg
inc
icebp
in
cs
adc
icebp
xchg
std
jno
fld
mov
loopne
jnp
movsb
clc
out
jno
xrelease
shl
icebp
push
xor
inc
lret
and
hlt
xchg
mov
inc
daa
mov
inc
xor
add
push
sti
dec
and
pop
jle
mov
std
jecxz
and
aaa
stc
imul
xchg
pop
mov
cmp
call
mov
negb
inc
shl
xchg
leave
aam
stos
mov
mov
xchg
in
pop
cwtl
mov
sub
ds
cs
popf
cmp
or
and
insl
or
mov
lahf
pop
mov
inc
scas
mov
xchg
push
sahf
mov
cmpsb
sahf
inc
pushf
ds
popa
mov
test
stos
or
popa
test
adc
xchg
pop
dec
cs
or
xchg
cs
in
sbb
push
adc
mov
call
icebp
fisubs
sbb
nop
mov
ret
aad
cmc
lods
push
jl
fninit
inc
push
in
cltd
xchg
idivb
lock
mov
mov
xchg
lods
cmp
lret
and
lods
fldl
lret
out
add
mov
add
js
ficoml
movsl
pop
xchg
sbb
lret
inc
rdmsr
mov
adc
aam
dec
mov
inc
test
push
ret
popf
dec
mov
ds
mov
inc
cs
mov
mov
iret
mov
shlb
and
sbb
adc
scas
mov
or
cld
lea
adc
pop
out
or
cmp
pop
shrb
in
movsb
xor
lods
jmp
pop
je
call
jge
ror
mov
add
jne
fstl
inc
jmp
jne
cld
mov
xlat
adc
xor
sub
add
add
mov
ja
mov
fcmovnb
sub
stc
arpl
dec
enter
jnp
xor
cmc
rcl
gs
js
andb
lea
sbb
ss
push
leave
inc
hlt
or
out
or
adc
sbb
insl
adc
lret
idivl
aam
test
jp
lods
inc
cld
lds
pop
mov
insl
in
cwtl
mov
das
fcmovnb
or
adc
jmp
scas
jg
shll
inc
roll
movsb
xchg
ja
mov
jg
push
sbb
push
fldenv
push
mov
pushf
nop
xlat
pop
mov
dec
repz
jne
push
popf
push
outsb
pop
push
mov
adc
jnp
shrb
fadd
popa
daa
fidivrs
stos
sbb
mov
int3
and
aam
jle
addr16
add
xor
add
call
sub
test
push
jne
ss
je
rorl
inc
scas
or
daa
and
ljmp
xchg
inc
jl
insb
arpl
dec
cmpsl
scas
lds
out
addr16
push
lret
jecxz
mov
or
bnd
gs
addr16
sahf
das
mov
inc
mov
add
cmpsb
and
push
sbb
xchg
nop
in
and
pop
or
aas
mov
movsl
pop
test
dec
es
aam
insb
dec
pop
push
push
in
loope
das
aaa
fidivs
ds
bnd
dec
imul
iret
dec
sub
insl
iret
lret
inc
pop
dec
mov
ds
cmp
jge
sub
loope
sbb
pcmpeqw
rcr
dec
mov
xchg
xchg
orb
in
xchg
xor
cs
xor
push
std
iret
pusha
out
popa
or
cmc
test
mov
cltd
inc
xchg
negl
mov
insb
scas
inc
mov
inc
rorb
cmp
xchg
mov
inc
mov
xor
xchg
adc
cmp
lcall
dec
jl
std
jmp
sub
sub
pusha
es
fcmovb
or
aad
repnz
lcall
movsb
cmp
clc
inc
xchg
fimuls
test
fbld
inc
nop
cmpsl
push
std
push
mov
test
dec
test
pop
xor
inc
jl
movl
mov
cmp
jnp
lahf
movl
jp
xor
mov
icebp
outsl
icebp
iret
sarb
pop
xor
scas
jns
stc
add
push
stc
jns
dec
loop
push
add
jle
jo
xchg
loopne
mov
fcoml
das
popf
jnp
stos
xchg
ss
xor
add
mov
mov
mov
pushf
fimuls
inc
and
sub
push
mov
pop
sub
mov
push
xor
cltd
cmpsl
jno
ss
push
bound
aaa
jns
repnz
aad
and
cmp
loope
in
xchg
sub
fs
sub
popf
fstl
sub
cmpsl
sar
mov
and
cwtl
movsb
ret
sbb
outsl
or
push
pusha
xchg
popl
or
cltd
jbe
loopne
mov
fidivrl
inc
aaa
je,pt
mov
repz
sbb
sbb
add
imulb
stos
aas
lods
fimuls
mov
movsb
aam
loop
jg
xor
fidivrs
out
das
call
js
pop
xchg
push
stos
cs
xor
mov
dec
dec
mov
jbe
notl
mov
gs
push
arpl
mov
hlt
sti
outsl
or
sbb
js
jne
out
inc
sbb
jno
dec
jmp
adc
mov
push
cmp
jg
loop
mov
sub
iret
add
cmpsb
bound
mov
aad
jecxz
mov
dec
jecxz
aaa
shl
je
push
test
bound
es
xchg
mov
mov
jl
dec
adcb
dec
cwtl
xor
out
fwait
imul
dec
lret
jge
pop
mov
mov
out
pusha
push
sbb
inc
test
call
aam
or
add
dec
add
ss
xlat
push
sti
pop
cmp
ljmp
ds
xchg
or
out
xor
mov
imul
rcrl
sub
cmp
popf
xchg
test
out
xor
jns
sbb
nop
cli
negb
roll
dec
lahf
idivl
add
sub
xchg
adc
mov
lods
cmpl
dec
icebp
xchg
dec
pop
cltd
adc
jnp
pop
ror
jl
pop
jb
negl
add
fwait
add
ret
lods
xor
jnp
push
in
mov
cwtl
xorl
or
aaa
jmp
nop
xchg
sub
or
ret
inc
or
mov
add
xchg
and
mov
pop
push
or
xor
daa
add
daa
dec
fsubrl
pop
imul
incl
push
aam
mov
lds
adc
adc
jg
subl
iret
dec
mov
fnstenv
pop
int3
mov
push
sarb
cs
xor
push
cmp
fwait
popf
fildl
inc
lahf
inc
pop
stc
mov
femms
xchg
dec
mov
jecxz
xchg
push
fmul
mov
insb
shrl
or
sahf
notl
rsqrtps
mov
js
leave
xor
pop
popa
and
mov
or
inc
adc
push
cmp
testl
ret
inc
mov
cmp
aas
push
inc
mov
mov
xchg
rcl
inc
hlt
and
shlb
imul
cmp
mov
pop
insb
mov
inc
sti
push
mov
data16
adc
or
insl
fs
test
cmpsl
insb
cld
add
xlat
into
and
jle
xor
add
stc
jl
push
repnz
mov
lods
adc
lret
xor
push
pop
push
jmp
lods
push
in
mov
in
es
int3
iret
cmp
or
clc
pop
popf
inc
outsl
xchg
stc
sbb
mov
fcmovb
lret
jne
and
repz
jecxz
fs
call
push
xorl
dec
jns
fbstp
test
push
es
ret
jno
jb
sahf
sub
sub
sbbb
test
andb
inc
out
daa
fldcw
cmpsl
dec
sbb
mov
pop
jecxz
aaa
insl
push
gs
xchg
xor
insl
inc
movsl
fistpll
inc
or
xchg
in
stos
adc
mov
add
in
in
pop
and
adc
add
and
lock
mov
dec
push
xchg
and
mov
pop
sub
mov
sbb
lret
into
jp
cld
pop
mov
loop
iret
std
shlb
ljmp
scas
les
pushf
dec
insb
scas
jl
sbb
aaa
xchg
mov
cmc
push
cmp
test
cld
ljmp
bound
in
jne
loop
mov
out
fwait
push
in
xchg
cmp
cmc
push
pop
cmp
cltd
dec
inc
mov
adc
in
out
fcmovnb
outsl
arpl
daa
icebp
clc
xor
outsl
fsub
lcall
icebp
push
es
pop
mov
sti
mov
xor
das
mov
inc
inc
lock
hlt
xchg
xchg
mov
insb
push
iret
lret
cmpsb
mov
int
test
fisubrs
inc
movsb
cmp
cmpsb
or
mov
cmp
xchg
jle
push
bound
jae
fisttps
adc
or
loope
dec
aaa
idivl
push
mov
sti
cld
adc
sub
sub
mov
mov
mov
fcmovne
add
or
xor
imul
ss
shlb
xor
loope
mov
mov
sbb
sub
or
mov
arpl
lds
les
cltd
or
cld
cmpsb
inc
in
lods
leave
rcrl
add
mov
adc
outsl
mov
fcompl
fisubrs
and
call
nop
ss
inc
jnp
mov
mov
push
xchg
pusha
or
sbb
insl
sahf
cmpsl
dec
mov
mov
out
push
movsb
stc
sbb
xchg
or
xchg
adc
lret
popf
push
fnstenv
sahf
cmp
in
cmpb
test
cmp
test
mov
test
daa
aad
or
jmp
insl
sbb
fldcw
jecxz
pop
cs
add
insb
add
loop
add
ret
inc
sti
dec
jne
in
cmpsb
xchg
adc
inc
adc
cmpsl
cltd
icebp
fwait
lea
out
jp
and
out
js
ss
sub
mov
dec
cmp
cmp
lea
cmp
mov
push
mov
xchg
sahf
jp
sub
mov
inc
idivl
or
iret
dec
mov
out
inc
jg
dec
pop
cli
aam
jne
pop
mov
jl
ret
pusha
jo
dec
xchg
xchg
mov
stc
clc
mov
insb
imul
stos
add
dec
aaa
mov
ljmp
cwtl
xchg
jmp
ja
fadds
adc
arpl
mov
popf
lret
data16
mov
lret
pushf
sbb
cwtl
aam
clc
fs
cmpsb
or
lock
cs
sbb
dec
adc
or
jge
jmp
xor
add
mov
cwtl
cwtl
sub
std
stos
push
and
orl
sbb
int
outsb
xor
shl
clc
sub
stos
push
xlat
lods
push
lock
test
mov
out
dec
push
movsl
inc
ds
cwtl
mov
jnp
jo
jae
mov
hlt
aas
ja
ss
and
lods
add
out
leave
push
iret
sbb
jge
ret
sub
sub
stc
stc
jbe
xor
sbb
push
dec
mov
xor
push
imul
xchg
dec
or
dec
sbb
sub
mov
inc
push
je
idivl
sbb
cmp
sti
xor
mov
outsl
ja
push
pop
mov
lock
fmuls
inc
sub
shl
adc
and
notl
xchg
enter
enter
push
sbb
movsl
sahf
les
mov
adc
jecxz
in
mov
pusha
jae
js
lods
ficoml
mov
mov
jge
inc
pop
or
sub
aas
xor
leave
popf
inc
mov
cli
inc
pop
and
add
mov
add
outsl
pop
mov
mov
movsb
sbb
cmp
inc
sbb
xlat
mov
sti
xor
in
jl
fucomi
ja
pop
or
pusha
jg
xor
dec
mov
lcall
mov
adc
fsubs
sub
cmc
xchg
xor
pop
jns
dec
lahf
or
sbb
rcll
xor
sub
fsubrp
mov
data16
out
pop
mov
jns
inc
mov
fstps
sub
xchg
xchg
lods
mov
ret
lds
loope
mov
scas
shlb
rorl
and
fbld
icebp
test
jl
xor
or
frstor
andl
loope
mov
adc
shlb
xor
gs
and
sub
and
cli
cmp
cmp
loopne
enter
pop
adcb
add
xor
ret
xchg
pop
je
cmc
dec
hlt
int
addb
sbb
in
jg
iret
ljmp
mov
xchg
mov
scas
cltd
mov
inc
scas
loop
jg
fcomps
sub
adc
arpl
test
push
adc
dec
fistl
enter
fbld
stos
mov
inc
pushf
push
jmp
popa
jle
ss
xchg
ljmp
ficoml
xor
sub
xchg
jmp
adcl
aas
mov
lcall
inc
and
xlat
daa
xchg
add
fwait
pusha
xor
dec
push
in
xchg
dec
lock
inc
inc
jge
xchg
icebp
movsb
dec
shr
add
sub
push
xor
cmpl
fs
xlat
addr16
shlb
orl
mov
das
xchg
or
inc
lret
ret
cmc
jmp
mov
ljmp
neg
adc
das
xchg
dec
fstps
or
adc
cmp
imul
jecxz
ljmp
mov
xchg
mov
subl
sub
enter
jmp
dec
je
xchg
icebp
mov
adc
cmp
int3
movsl
jp
lret
adc
insl
lret
mov
scas
stos
xor
mov
cs
mov
aad
push
out
xor
scas
sub
jp
mov
mov
js
xlat
xchg
sub
add
xchg
adc
lock
insb
push
ret
icebp
xchg
les
shlb
frstor
test
rcrl
and
pop
sub
or
jbe
push
icebp
mov
and
xchg
push
call
repnz
mov
fsubs
dec
dec
test
xchg
push
stc
pop
inc
sbb
mov
rol
stos
nop
xorb
xchg
mov
in
dec
test
aaa
mov
inc
mov
js
pop
pop
sub
nop
mov
lret
je
in
xor
jle
inc
mov
mov
push
ljmp
mov
pop
cmp
dec
cltd
in
dec
outsb
lods
xchg
push
mov
xchg
mov
and
mov
add
jp
out
pop
les
repz
dec
mov
xor
cmp
add
add
repnz
out
sub
jno
data16
sub
sub
frstor
adc
sub
jp
mov
aam
imul
data16
xchg
imul
xchg
int
daa
adc
repz
sbb
ljmp
test
and
dec
shrb
das
xchg
adc
inc
call
dec
rcl
adc
sub
iret
sbb
fists
inc
mov
push
testb
incb
test
pop
inc
add
add
sub
mov
hlt
and
lods
aam
mov
les
adc
or
or
call
cs
cwtl
xorb
push
mov
adc
fiadds
popf
pop
loopne
and
cmp
movsl
add
pop
adc
adc
push
cmp
pop
test
test
clc
push
test
js
ja
jne
or
jg
pop
adc
out
mov
test
popa
sahf
sbb
mov
test
xor
sbb
ret
gs
in
movsl
imul
dec
fldt
inc
push
dec
enter
pop
sahf
aad
testl
je
or
cmpsb
out
cmp
fisubs
push
dec
sti
mov
icebp
mov
push
and
shll
outsb
in
pop
dec
pop
dec
pop
popf
mov
mov
mov
ret
mov
jo
jg
ja
cwtl
jmp
in
dec
xor
adc
xchg
push
add
into
xchg
outsb
mov
push
sbb
dec
adc
stos
sbb
movhps
nop
scas
notb
add
stos
push
xor
mov
lods
popf
sar
push
and
test
xor
rorb
jle
bound
mov
cld
push
cmp
mov
sub
add
mov
lcall
mov
push
scas
dec
ja
sahf
add
dec
repz
mov
dec
shll
jnp
call
jo
xchg
jle
push
cmp
jmp
jo
lret
inc
out
xchg
sub
shl
test
dec
cwtl
pusha
sub
out
or
insb
push
or
jbe
push
movb
enter
add
jmp
cs
xor
cmp
loopne
sbb
mov
fcoms
das
inc
fcmovnbe
add
loopne
fs
ljmp
sub
nop
and
faddl
push
ss
xlat
mov
stos
stc
mov
push
inc
test
mov
pop
mov
cwtl
rolb
push
fwait
in
xchg
in
jge
xlat
cmpsl
and
lret
cmpl
js
add
cmp
inc
adc
icebp
pushf
pop
inc
jne
fldcw
push
and
and
jecxz
hlt
cmp
cld
sbb
push
into
aad
loop
cld
add
add
out
test
mov
dec
out
dec
outsl
data16
mov
inc
repnz
or
mov
mov
mov
add
and
mov
out
popa
jmp
adc
push
lods
in
mov
popf
mov
pop
lea
sub
out
and
push
jge
dec
xor
xorl
mov
lods
mov
outsl
sub
shl
mov
add
jmp
aad
out
vmread
mov
imul
xchg
push
pop
sti
jmp
ljmp
xor
push
push
inc
cmp
nop
scas
sub
inc
push
adc
sbb
sub
orl
jp
rorb
sub
aaa
xchg
cmp
pop
aad
out
adc
orb
push
enter
test
repnz
fsubrs
xor
sub
std
xchg
fistps
lods
leave
jnp
rcr
pop
sti
icebp
pop
jmp
test
mov
sub
mov
and
mov
nop
lods
lock
and
xchg
pop
or
popa
xor
cmc
add
sbb
test
addr16
push
out
das
mov
xchg
mov
decl
repz
hlt
or
bound
xorb
daa
sub
mov
insl
mov
aas
ret
fwait
jmp
jns
js
outsb
decb
loope
es
xor
leave
enter
cmp
fwait
cmpsl
arpl
leave
out
test
add
mov
es
adc
jle
pushf
mov
clc
xrelease
dec
dec
aaa
push
fsubr
add
leave
sub
fwait
pop
insl
in
push
add
xchg
xor
movsb
xor
lahf
das
aaa
sub
jnp
dec
ljmp
pop
pop
incb
and
push
test
fcoms
sbb
in
inc
jmp
lahf
dec
mov
adc
arpl
in
cmc
cmpsb
dec
xor
adc
push
mov
push
clc
xor
jb
mov
testb
sub
sti
adc
hlt
mov
jp
popa
sbb
mov
mov
cmpsb
add
test
cmp
shl
xlat
mov
std
xlat
je
mov
sti
or
stos
loop
jae
xchg
pop
cmp
xchg
pop
in
xchg
mov
movsb
ss
pop
sbb
sub
pop
sti
ja
jno
jne
mov
lcall
and
sbb
ret
mov
push
ret
mov
insl
subl
notb
sahf
push
into
xor
repnz
sub
pop
fsubrl
mov
out
adc
daa
popa
add
dec
lds
sub
lret
mov
xor
xchg
mov
or
push
fsubs
mov
mov
sbb
lahf
es
in
sbb
xchg
xchg
xor
outsl
repnz
mov
cli
fwait
and
inc
test
ds
addb
push
repz
dec
jg
pop
fdivs
repnz
lret
or
orb
stos
xor
icebp
sub
test
pop
cwtl
in
pop
cmp
rolb
lods
or
imul
cs
pop
pop
xchg
popa
jns
xor
lahf
add
xchg
fistpll
mov
dec
jb
jg
jg
dec
sub
pusha
mov
jb
ret
addr16
and
dec
std
pop
pop
pop
mov
dec
xor
rcrl
movsb
pop
xchg
addr16
and
cmp
push
arpl
dec
out
test
pop
stos
jmp
pushf
push
cmp
jbe
mov
xchg
test
jo
push
into
das
loop
or
xchg
test
inc
lock
push
xchg
pushf
nop
and
imulb
adc
lods
test
lea
push
push
scas
xchg
push
movsl
jo
jno
enter
js
pusha
shlb
repz
loope
push
lahf
pop
cwtl
jp
ret
out
or
out
ficompl
dec
mov
fistpll
fadd
lret
loopne
lock
test
cmp
dec
shlb
lea
or
mov
sbb
push
sub
cmpsl
arpl
pop
shrl
mov
mov
sub
fwait
in
cmp
popa
in
popf
sub
dec
les
adc
daa
scas
cmpsb
mov
jecxz
pop
lret
pusha
mov
dec
mov
jo
inc
cli
adc
test
xor
mov
je
mov
sub
movsl
dec
cwtl
addr16
add
mov
lds
sbb
mov
and
mov
test
fstpt
dec
jge
ficoml
jge
or
mov
loopne
pop
pop
fisubrl
icebp
mov
fdivrs
add
outsw
repnz
cmp
scas
xor
fidivrs
dec
jae
pop
dec
shlb
outsb
xlat
mov
pop
cmpsl
into
mov
add
mov
cmpsb
xor
int3
xchg
add
mov
ljmp
and
pop
js
mov
pusha
inc
pop
jecxz
push
pop
cli
add
imul
fs
cmp
outsl
ret
loope
orb
loope
push
popa
in
sbb
popa
test
out
loope
aam
js
mov
push
or
jecxz
hlt
mov
cmp
pop
lret
insl
enter
ds
inc
daa
in
push
sti
cltd
inc
mov
into
adc
js
pushl
cmpl
pop
cmpsb
in
sbb
push
ljmp
jg
jg
rclb
cmp
movl
xor
sub
cmp
mov
icebp
xchg
aad
shl
sbb
dec
sahf
aam
jno
mov
imul
jne
jbe
int
dec
stos
mov
mov
cmc
fisttpll
shll
ret
inc
in
mov
loopne
inc
pop
lods
add
das
adc
cs
sbb
mov
sub
mov
stos
adc
jecxz
stc
sti
loop
and
jg
jg
js
jmp
or
xchg
outsb
xlat
lcall
aas
sbb
or
fwait
push
inc
sub
popf
inc
mov
pop
cwtl
and
pop
mulb
sbb
lcall
mov
sbb
pop
stos
ret
dec
aam
push
loop
pop
xor
and
imul
test
jl
push
es
and
sub
sti
xchg
jmp
out
test
dec
out
pusha
or
fwait
mov
and
fdivrp
lock
jg
enter
pop
into
jne
pop
jg
xchg
aaa
or
sbb
cltd
cltd
call
add
sbb
inc
aam
xor
popf
pop
sub
cltd
add
or
into
mov
shlb
inc
pop
xchg
and
movsb
in
pushf
lret
jo
pop
pop
int3
stc
jb
clc
pushf
hlt
movsb
sub
sub
out
pushf
adc
dec
lret
cmpb
jae
lea
xchg
cmpsl
dec
xor
mov
add
gs
les
into
insl
pusha
repz
and
sti
leave
jmp
rcll
xchg
pop
int
jns
adc
je
hlt
pop
push
and
dec
loop
outsl
push
adc
fisttps
xchg
jne
je
inc
loop
lods
dec
popf
arpl
pop
insb
jecxz
fcoms
fnstsw
insb
test
mov
xor
into
inc
fadds
fstl
aam
ss
cltd
push
hlt
mov
adc
into
movsl
into
shrb
mov
imull
mov
mov
mov
mov
inc
jmp
leave
rorb
lret
add
les
xchg
rorb
mov
fiadds
in
gs
mov
xchg
cmpsb
inc
lods
jo
sub
cmp
mov
sarb
ja
inc
push
and
jge
aam
cli
dec
sub
push
cmpsb
or
jle
xor
cmp
and
insb
test
sbb
lea
clc
push
inc
sbbl
andb
ja
test
movsb
mov
dec
loop
jmp
cmpsb
push
dec
out
pop
ja
adc
lret
ja
movlps
call
mov
adc
sbb
mov
insb
xchg
or
mov
test
cmp
lret
add
js
mov
in
js
dec
loope
mov
jmp
cld
mov
xchg
jle
mov
add
xor
cwtl
lahf
or
cwtl
xor
push
cmpsl
xchg
add
pop
movsl
test
push
out
in
call
push
fisttps
test
cmp
loop
adc
aad
in
test
shl
push
testl
cmp
cmp
stos
push
sbb
cmp
mov
mov
arpl
shlb
jle
jl
jo
fists
mov
cmp
stos
imul
loop
addl
shl
imul
addl
mov
mov
jecxz
outsb
mov
sarb
lahf
rclb
jecxz
or
cwtl
dec
push
dec
mov
out
xor
lods
add
lods
xor
lds
int
punpckhdq
cs
or
mov
subl
adc
xlat
mov
dec
lret
lods
sub
insl
inc
rclb
xchg
pop
insb
mov
mov
add
lds
sbb
je
jg
sbb
cmp
repnz
xchg
push
mov
fldl
sub
inc
inc
push
call
ds
popf
pop
xor
add
add
repz
mov
aad
adc
mov
outsl
pop
mov
jp
push
pop
movsl
not
jb
cwtl
add
stc
lcall
sbb
dec
fiaddl
mov
test
arpl
out
xor
cmp
mov
push
or
nop
and
or
or
inc
push
outsb
sbb
cli
pop
xchg
mov
push
notl
cld
scas
adc
dec
pop
movsb
repz
push
jns
daa
outsl
cld
call
xlat
xor
mov
pop
dec
popa
xlat
psubw
lret
adc
fisubrl
popf
pop
je
xor
mov
sub
xchg
mov
into
jge
xor
jo
pop
fimull
adc
or
sbb
fs
jns
in
fwait
lahf
xchg
jg
imul
stos
dec
jb
pop
fs
aaa
nop
and
push
sbb
push
sub
push
ja
test
dec
inc
jmp
loop
test
jns
shll
and
xchg
adc
adcb
fidivrl
ud0
jl
mov
aaa
dec
jbe
cmp
push
outsl
aaa
out
loop
add
sbb
nop
jp
mov
hlt
test
sbb
push
imul
push
inc
xchg
test
inc
pop
cwtl
fdivrl
pop
arpl
lds
push
sbb
test
mov
in
icebp
rorl
out
mov
mov
jo
stc
xchg
xor
cltd
and
imul
test
gs
loop
pop
jle
scas
or
mov
inc
fwait
jo
enter
push
dec
mov
mov
xor
sub
or
pop
push
and
test
rorl
xor
hlt
xchg
cld
jno
ret
or
jne
loop
sub
mov
aad
notl
fcmovbe
andl
adc
repz
popf
cmp
add
test
mov
or
fildll
sarb
adc
aam
arpl
adc
and
aaa
xchg
inc
add
lods
test
cmp
cmp
jo
push
mov
mov
insl
mov
or
jmp
ja
outsl
pushl
daa
push
xor
and
xchg
loopne
sbb
mov
push
pushf
ss
pushf
data16
or
mov
test
push
pop
pop
and
popa
adc
or
in
sbb
dec
into
xchg
iret
iret
dec
mov
dec
dec
sub
insl
mov
inc
adc
sarl
in
bound
sbb
xchg
int
pop
dec
add
out
js
sbb
gs
sbb
bound
inc
add
mov
jmp
ja
ret
in
jno
mov
add
or
fistpll
mov
xor
hlt
lock
out
sub
sti
mov
rcrl
adc
xor
mov
push
daa
int
xchg
js
push
mov
inc
adc
and
add
shrl
dec
mov
mov
and
pop
into
add
lahf
je
testl
int
inc
mov
or
aas
or
mov
nop
sbb
pop
xchg
xchg
add
int
push
add
out
mov
andb
ficoms
imul
dec
scas
dec
adc
inc
ljmp
lods
fists
iret
sti
jmp
inc
add
mov
or
fistps
rol
rolb
fcomps
sbb
iret
cmp
sahf
sarb
mov
jb
cmp
lods
add
sbbb
mov
adc
imul
add
jp
dec
mov
shr
jne
dec
arpl
fsubs
ret
scas
and
inc
cs
mov
inc
in
cwtl
mov
psllw
xor
mov
cmp
lds
pushf
pop
ret
jmp
cmp
jbe
pop
add
mov
std
and
xor
mov
movsl
lods
push
add
stc
adc
fs
xorb
insb
out
mov
push
xchg
xlat
or
jl
jge
stos
movsb
cmc
xchg
add
daa
enter
loopne
mov
mov
xchg
mov
xchg
jge
push
loope
sub
or
pop
sbb
test
push
push
fs
mov
ret
int3
sbb
mov
add
mov
in
push
add
and
sub
and
add
sar
push
stos
cmpsb
sub
rcrl
mov
add
shrb
es
cmp
adc
jbe
mov
cmp
jnp
or
repz
sbbl
repnz
inc
lahf
dec
sbb
cltd
inc
sub
int
notl
addr16
sahf
pop
mov
addb
cmp
mov
or
fs
lret
mov
sarb
jne
and
and
push
mov
mov
jb
rcrl
rclb
out
mov
fistpl
decl
loope
mov
xchg
mov
jmp
xor
sti
aaa
jg
sub
jge
fadd
sub
jnp
inc
pushf
ret
adc
mov
repz
pop
jl
loop
push
push
scas
setle
scas
fs
dec
cmp
push
mov
cmp
mov
mov
icebp
push
imull
xor
leave
xchg
sbb
cmp
test
jmp
pop
je
out
jns
adc
adc
into
jbe
and
push
push
cmp
lcall
lcall
push
cs
lret
les
aas
aam
pop
out
or
add
sbb
xchg
fs
mov
push
gs
fxam
pop
sar
outsb
mov
dec
xchg
mov
int3
push
rcll
ret
addr16
fidivrs
enter
fildll
mov
pop
or
je
sub
adcl
jbe
push
jecxz
js
in
sbb
int
dec
adc
pusha
push
hlt
xchg
lea
push
jp
mov
popl
fildl
mov
ljmp
lret
jo
push
cmp
adc
jge
adc
inc
and
mov
popf
lea
cld
cltd
lret
addr16
lahf
xor
les
cli
adc
jb
mov
and
test
lods
inc
iret
lods
mov
pop
pop
push
clc
mov
jle
mov
ret
inc
mov
xchg
push
mov
ss
push
test
cmp
out
add
mov
sti
fistl
sti
fwait
movsb
out
mov
iret
es
and
sub
push
inc
test
mov
pop
push
push
and
mov
adc
paddsw
out
loope
jmp
clc
push
mov
aaa
lahf
jle
xor
sub
and
cwtl
hlt
imul
xchg
flds
and
daa
mov
fcom
dec
inc
jecxz
xchg
xor
fbstp
movsl
dec
jnp
in
jle
mov
jae
ficoms
daa
outsl
xor
out
orb
mov
cld
pop
movsb
jns
ljmp
xchg
rorl
int3
xchg
das
stos
add
dec
push
or
cli
cmpl
ljmp
je
sub
or
ss
outsl
aad
outsl
fcomp
int
int3
push
adc
outsl
jecxz
les
push
inc
mov
jmp
and
cs
mov
sub
arpl
add
inc
insl
pop
scas
adc
lcall
mov
daa
pop
add
inc
rorb
loopne
push
mov
int
clc
jns
fistl
xchg
cmp
push
js
xchg
push
sub
jno
pop
pop
pusha
adc
out
jbe
mov
imul
imul
jo
dec
inc
lock
addr16
xor
add
mov
fs
mov
orl
jb
out
pop
cld
xchg
stos
nop
stc
xchg
lods
js
xchg
dec
cmp
push
sub
int3
sbb
xor
jp
repnz
dec
das
mov
popa
sub
or
aad
jns
add
dec
inc
pusha
subl
fimull
and
lret
in
sub
push
xchg
sti
sbb
sti
push
jns
mov
xor
call
icebp
and
push
jg
and
cmc
ror
fldenv
mov
mov
push
popa
das
xchg
daa
mov
push
add
jnp
hlt
shrb
fs
das
mov
and
mov
pop
aas
jne
sub
mov
scas
inc
inc
push
in
xchg
pop
push
xchg
push
jecxz
cwtl
pusha
mov
inc
es
inc
sub
and
jbe
or
pop
enter
mov
jns
outsb
mov
lret
mov
lcall
lods
jp
repnz
orl
adc
mov
addl
in
and
xor
scas
inc
sbb
xor
bnd
push
mov
cmp
ret
dec
aad
shlb
arpl
fcomps
clc
lret
mov
lcall
push
cwtl
arpl
call
mov
jno
sub
jnp
jle
sahf
push
sub
or
aam
lret
dec
loope
lahf
mov
cmp
or
in
mov
stos
push
int3
and
addr16
lea
xor
add
xor
int3
leave
jg
ret
jecxz
lock
cmp
nop
sub
xchg
cmp
out
scas
jae
jae
in
out
xor
nop
xchg
add
inc
sub
adc
sbb
push
add
push
mov
ja
shlb
loopne
push
mov
push
jl
adc
jno
jmp
pusha
sbb
daa
stos
mov
out
cmp
mov
mov
pop
or
and
mov
and
les
insb
jb
mov
add
jb
pusha
ss
xor
mov
pop
sbb
add
and
int3
lret
stc
pop
es
sahf
lock
jg
scas
ret
nop
and
shrl
mov
jge
in
iret
xchg
push
sbb
cmp
out
inc
jp
movsl
lods
jp
outsl
stos
outsb
mov
dec
xchg
sbb
jge
adc
scas
fs
arpl
xor
repz
jns
rcll
xlat
adc
loop
out
jbe
inc
jl
mov
pop
cmp
pop
int
xor
shlb
roll
ret
je
rcll
mov
push
adc
mov
xchg
jge
stos
loopne
mov
push
or
loopne
jae
enter
and
inc
subb
cs
and
add
ds
test
xlat
scas
jne
pusha
jns
movsl
or
das
cmp
xchg
loopne
mov
xchg
rcll
mov
pushf
mov
call
aaa
fisubl
ja
sbbl
xor
in
cmp
jp
cmp
mov
inc
cmp
pop
mov
cmp
lock
out
ret
fnsave
subb
ja
repz
leave
cmp
ret
cmp
popf
out
repz
sub
dec
sahf
call
jno
push
jns
popf
add
icebp
xchg
mov
mov
aam
or
mov
rcr
sbb
cwtl
pop
or
repz
ja
xor
cmpsl
pop
rcrl
mov
test
jne
movsl
std
sub
push
or
das
jmp
repnz
push
test
sbb
sbb
outsl
xor
dec
xchg
mov
dec
data16
pop
lods
outsl
test
jbe
inc
fidivs
mov
daa
mov
mov
xchg
popa
sub
lcall
adc
and
xchg
int3
pop
ret
paddq
hlt
xor
dec
sub
stos
lods
mov
mov
cmp
movsb
dec
fmull
sub
adc
adc
aaa
clc
cmp
cld
imul
popa
js
fidivs
cmp
jae
jmp
lahf
mov
xchg
lds
arpl
pop
add
dec
jl
mov
in
clc
in
xlat
fistpll
push
dec
xchg
push
sbb
mov
mov
pop
lahf
movsl
xlat
loop
mov
jnp
adc
xor
xor
dec
jne
mov
cmp
mov
jp
les
repnz
ja
push
mov
ret
cmp
lods
mov
xor
pop
ret
popf
ja
inc
adc
icebp
sbb
mov
and
inc
and
lock
iret
jmp
inc
push
inc
int3
dec
cmpsb
test
stc
xor
into
pop
push
cmp
js
ficomps
iret
packsswb
xor
repz
aas
js
test
outsl
xlat
stos
call
xchg
mov
pop
lods
pop
sub
lcall
inc
cmp
imul
mov
mov
adc
xor
cmc
notl
pop
cld
mov
sub
stos
lret
push
stos
test
scas
into
push
ja
sahf
divl
outsl
fisubs
push
cltd
outsb
shlb
neg
subl
jbe
pop
aaa
mov
push
lods
jle
pop
test
push
push
mov
out
movsb
sub
dec
xchg
push
fwait
mov
sarb
int3
out
xchg
repz
lds
cmc
stc
mov
and
rcrb
add
outsb
sub
add
pushf
lahf
das
lret
mov
cmp
jle
call
inc
mov
dec
loopne
mov
dec
das
pop
add
movsb
shlb
xor
ss
lods
pusha
and
cmp
xor
jge
xchg
fwait
dec
sbb
ljmp
sub
adcb
xor
iret
push
test
in
mov
es
jp
mov
ret
clc
inc
insl
add
jp
fwait
aaa
xor
pop
or
jno
xchg
lret
mov
mov
mov
push
into
stc
and
pop
pushf
lea
stc
cmpsl
sub
mov
stc
into
mov
loope
xlat
dec
dec
push
divl
jne
and
and
sub
dec
add
xorb
aas
dec
mov
sub
jnp
push
aaa
sub
xchg
pminsw
test
out
mov
pop
divl
movl
mov
inc
jp
inc
cmp
out
mov
insb
jl
sbb
jns
ja
pop
cmp
loop
mov
outsb
adc
js
pop
inc
xchg
mov
les
into
fisttpl
in
loop
mov
cmpb
ss
push
lahf
push
xchg
mov
fbstp
out
mull
xor
cmpsl
hlt
and
lret
movl
jno
sarb
mov
enter
aaa
retw
inc
nop
in
dec
nop
jle
test
inc
and
pop
mov
dec
mov
addb
inc
pop
or
ljmp
jmp
stos
jbe
lods
out
outsb
clc
jo
mov
lcall
gs
cltd
cmp
pop
cmp
sti
xor
movb
xchg
mov
outsl
negl
xor
push
sbb
lock
out
xchg
push
ljmp
sbb
add
call
repz
mov
xor
lahf
mov
test
lods
outsb
add
js
movl
cmp
negl
hlt
movsb
mov
mov
neg
stos
mov
xor
mov
dec
mov
xor
mov
faddl
lcall
pop
push
sbb
fnstsw
sbb
scas
cmp
out
push
sub
stos
fwait
dec
xchg
lock
daa
ret
insb
test
aam
push
mov
shlb
loop
dec
mov
icebp
or
pop
jecxz
and
dec
sub
mov
xchg
inc
frstor
out
call
xchg
jns
add
rcrl
mov
xchg
adc
lds
inc
sub
aad
mov
cmpsl
adc
shlb
push
cld
push
push
rcrl
adc
push
or
scas
loopne
faddl
push
push
iret
decl
jp
inc
inc
leave
inc
xor
sub
mov
pusha
vrcpps
mov
xchg
into
outsb
cmp
leave
dec
sarb
insl
imul
aam
iret
imul
into
rorb
sahf
push
sub
xchg
outsb
into
movl
jmp
inc
arpl
pop
je
pop
mov
xlat
sbb
insb
push
bound
or
push
jno
out
sbb
mov
into
fwait
and
lods
sbb
bound
rcll
mov
xlat
js
shrl
lods
jb
jbe
test
mov
adc
ss
mov
mov
jp
mov
xchg
xor
rolb
or
out
push
or
lret
mov
std
adc
sbb
mov
pushf
pop
subb
out
nop
and
ret
daa
lahf
mov
mov
into
imul
pusha
inc
fisttpl
pop
or
jo
mov
pop
adc
xor
xchg
xor
cmp
add
jmp
jnp
push
daa
pop
push
push
iret
xchg
and
add
cmp
add
movsl
aas
and
xchg
and
jmp
int
jne
imul
dec
dec
hlt
dec
mov
sbbl
xor
adc
xor
addr16
ss
adc
push
loope
mov
ja
std
jns
int3
push
inc
sub
out
or
not
mov
in
jae
cmpsl
lcall
xor
pop
mov
lret
cmp
add
ret
fldl
add
jnp
pop
sbb
mov
jg
sub
xor
movsl
sbb
iret
xchg
adc
call
lret
pop
shll
lods
cli
bound
and
repnz
out
sahf
gs
outsl
jnp
xor
rcrl
mov
jno
sti
sub
cmp
sub
mov
xchg
iret
xchg
xchg
mov
enter
mov
sub
and
xchg
cmp
jle
adc
dec
mov
adc
add
cli
sbb
mov
hlt
add
lret
mov
in
jmp
sbb
xor
jmp
add
ss
xor
mov
adc
or
mov
rolb
out
push
nop
imul
addr16
enter
xor
mov
inc
dec
stos
push
hlt
scas
xchg
mov
dec
call
shlb
frstor
mov
jne
icebp
xchg
cmp
lahf
int3
in
out
insb
dec
sub
fstps
call
jecxz
xchg
and
inc
mov
pop
or
shll
outsl
xchg
xchg
xchg
lods
xlat
xor
jle
mov
dec
pop
ficoml
sar
push
dec
mov
push
pop
adc
mov
push
jg
pop
fsub
inc
xor
xchg
cmp
push
insb
jmp
movsb
pushf
pop
das
sbb
aas
push
stos
fistpll
cltd
dec
arpl
lds
into
scas
cmc
int
cmp
cmpsb
aam
jmp
leave
pushl
jg,pn
mov
cmpl
ficoms
lret
or
into
mov
fldl
pop
sub
addr16
jbe
cmovg
xor
into
jne
je
xchg
outsb
mov
mov
sub
insl
rol
dec
mov
aam
xchg
out
lds
mov
test
sti
jmp
jae
and
mov
fcoms
pop
dec
insl
incb
push
out
ja
test
xlat
out
add
iret
lret
int3
stos
mov
lahf
jne
mov
loope
or
xchg
mov
dec
add
test
loope
iret
xchg
pop
pushaw
ds
clc
dec
jb
xlat
push
mov
dec
jns
push
hlt
loopne
fisubs
lahf
scas
sbb
xchg
push
into
lea
test
sub
test
jge
xlat
test
lods
sbb
xor
pop
adc
mov
sbb
fisubrl
std
mov
add
jbe
daa
xchg
jp
fs
insl
test
and
push
sub
mov
in
pop
sbb
xor
imul
inc
rclb
mov
lea
fldenv
cmp
bound
bound
ja
jecxz
dec
pop
cmp
fistl
cld
pop
lret
xchg
pop
pusha
add
pop
mov
inc
pop
int3
stc
sub
adc
rcrb
mov
loope
cmp
mov
jae
sub
xor
inc
dec
mov
pop
int3
dec
xchg
test
stos
mov
xlat
das
roll
mov
loopne
push
adc
mov
mov
add
icebp
mov
clc
mov
imulb
adc
test
sub
jge
hlt
jnp
or
sub
pop
loop
mov
sbb
les
repz
in
cmp
push
cmpsl
rcll
cmp
xor
shr
pop
xchg
lahf
gs
lods
lahf
mov
scas
mov
sbb
test
ljmp
xor
pop
mov
pop
loop
leave
je
out
hlt
insl
pop
and
and
add
fnstcw
fstpl
movsl
or
dec
dec
pop
mov
test
xor
int3
pop
xor
adc
fidivrl
sub
jbe
test
subl
mov
xchg
cld
mov
test
mov
cmpsl
insl
cmc
scas
insl
inc
ret
fwait
xchg
pop
sub
pop
push
les
cltd
les
and
mov
and
testb
inc
sub
test
insb
add
ret
insb
pop
jg
cmp
dec
pop
dec
pop
jp
pop
out
stos
and
roll
sub
xor
jns
push
insl
in
lret
sub
loopne
jo
mov
jmp
aas
fnstcw
mov
ror
sahf
cmp
in
pop
jle
mov
in
push
adc
ret
das
mov
insl
jp
mov
int3
aaa
scas
subb
xor
aas
jo
out
nop
mov
mov
loopne
push
lods
pop
jbe
cmc
lods
in
jae
xchg
icebp
fistpll
mov
inc
mov
aam
xor
fidivrl
inc
es
jbe
add
pop
mull
xchg
pop
outsb
push
movsl
jle
pop
out
cmpsb
addr16
arpl
inc
notrack
or
xor
sub
inc
fsubl
lock
pushf
sbb
mov
sbb
inc
inc
mov
fiadds
sbb
cmpsb
mov
or
sub
dec
dec
dec
mov
push
push
cltd
arpl
lods
loopne
push
jo
int3
cmp
rolb
addr16
mov
out
int
adc
mov
addb
jns
shr
sub
xchg
mov
cmc
mov
mov
jmp
popf
addb
pushf
fisttpl
cmc
cmp
insb
in
sub
pop
mov
add
das
mov
jno
out
fptan
jae
mov
xchg
in
loopne
jle
pop
mov
sbb
fisttpll
jl
mov
inc
xor
push
movsb
sahf
mov
xchg
jg
push
ja
push
stos
cltd
xchg
adc
imul
cmpb
lds
lcall
out
cmp
imul
adc
cmp
and
bswap
subb
xor
mov
repz
loopne
rclb
cmp
dec
repz
repz
pushf
rcl
cmp
iret
movb
or
push
imul
and
jle
outsb
mov
inc
jl
adc
test
sti
cmp
je
subl
arpl
cmp
and
mov
and
popa
insb
leave
push
adc
sbb
ljmp
in
pop
fwait
lea
gs
fwait
dec
jmp
outsl
repz
aad
mov
xchg
jmp
add
dec
mov
and
lret
or
mov
pop
mov
pushf
xlat
pushf
xchg
mov
mov
dec
and
mov
mulb
sbb
pop
ret
adc
clc
push
sbb
cmp
xchg
addr16
cld
inc
lds
fdivr
mov
and
movsl
or
movl
mov
pop
cmp
push
jle
loopne
push
ror
jb
xor
sbb
push
cmp
rcll
and
pop
cmp
add
mov
sbb
scas
shlb
cmp
clc
xor
inc
and
mov
jo
mov
inc
mov
pop
sub
inc
fmull
fs
out
je
cmp
mov
in
loope
arpl
push
cwtl
lods
xlat
insb
dec
or
pushf
sub
push
mov
arpl
inc
xchg
shll
inc
jb
fwait
dec
daa
ljmp
in
ljmp
and
sar
mov
in
in
lret
inc
xchg
fsts
pop
scas
mov
mov
xchg
outsb
daa
push
lds
xchg
cmpsb
xor
pop
sub
dec
lcall
rclb
fildl
mov
iret
push
sarl
sbb
ss
ds
popf
jmp
cmp
mov
lds
jae
frstor
mov
int3
jo
mov
lret
xchg
and
dec
adc
fistl
test
dec
cld
imul
mov
fwait
cltd
push
loope
stos
inc
out
imul
int3
daa
push
push
mov
inc
test
sarb
jg
lods
sub
sarl
push
adc
aad
mov
sbb
mov
xchg
jl
sub
push
xlat
push
cmp
push
popf
negl
lret
xorl
cmp
scas
jae
ret
and
sbb
add
es
outsb
in
aam
sbb
lock
popf
add
lret
mov
dec
jecxz
jl
and
and
lahf
mov
and
lods
out
inc
sbb
push
aas
outsl
inc
or
add
cmpsl
cmp
mov
add
ret
test
push
fwait
or
add
not
int
xchg
shrb
sbb
xor
mov
sbb
mov
out
jle
int
mov
add
pushf
jge
and
scas
xchg
loopne
jae
inc
fbld
dec
dec
shl
hlt
notb
jns
jmp
enter
leave
lods
sbb
pop
push
pop
test
sbb
fists
test
sbb
scas
push
into
sbb
test
push
outsb
pop
in
adc
and
pop
push
js
cs
or
insb
sub
adcb
or
adc
pop
loopne
flds
iret
lret
out
jo
push
sbb
pop
mov
sbb
mov
std
iret
sbb
push
out
mov
mov
cmpsl
cmpsl
adc
mov
fstpl
mov
iret
daa
cmc
adc
mov
mov
rol
pop
bound
stos
mull
call
inc
lahf
and
fsubl
cmpsb
jge
mov
ja
notb
or
sub
and
mov
push
repz
mov
mov
lods
mov
rcll
push
jb
inc
inc
enter
jecxz
cmp
add
mov
pop
loopne
inc
pop
mov
mov
pop
incl
jne
addr16
sub
xor
je
cmp
mov
push
stc
cmpsl
fs
mov
fucomip
cmpsl
cltd
cltd
test
lret
in
or
fsubl
loopne
lods
sub
scas
mov
dec
aam
mov
int
xchg
data16
add
jae
cmc
repz
and
hlt
inc
dec
mov
aad
pop
lds
and
fstps
std
loop
mov
mov
into
loope
cs
push
loopne
repz
xchg
jb
ds
out
in
adc
jno
rclb
fcomps
lret
xlat
xor
jle
sbb
arpl
data16
pusha
pop
add
inc
into
xor
call
mov
pop
cs
mov
jmp
mov
pop
and
mov
stos
cmp
fmul
bound
jne
adc
les
cmp
leave
sbbl
inc
les
call
sub
fs
testb
shlb
xchg
test
push
nop
cmp
and
add
xchg
sub
in
int
push
fs
lret
call
ds
movsbl
or
pop
inc
or
in
push
sbb
pop
out
pushf
imul
ljmp
lods
mov
xor
add
pop
jmp
lcall
lahf
mov
xor
pushf
fstpt
and
or
sahf
xchg
or
mov
rcll
fs
mov
lret
xor
lcall
push
cli
rclb
cltd
aad
test
sub
into
shrl
inc
jge
sbb
js
sbb
mov
sub
fwait
lret
fs
inc
into
adc
clc
cmp
add
stc
mov
cmp
lods
adc
inc
scas
lcall
in
push
sbb
push
sbb
cwtl
sub
sub
pop
mov
ret
inc
call
and
inc
mov
lret
and
fisubs
das
jge
pusha
xchg
cmp
in
nop
fists
stos
sub
or
or
pop
loop
in
dec
mov
in
or
fwait
das
cwtl
arpl
lret
jp
outsb
pop
inc
loopne
sbb
lds
push
push
xor
je
cmp
push
lcall
imul
dec
add
sbb
mov
mov
jnp
dec
mov
pop
fdivr
push
into
inc
adc
or
mov
je
cs
add
xchg
test
adc
stc
test
jg
dec
inc
push
lret
or
mov
ficomps
gs
int3
xor
xor
cmp
cld
sbb
ss
cltd
nop
xlat
xchg
aas
fsubrp
into
xchg
into
loope
push
sbb
outsl
fldt
mov
fs
and
sbb
divl
jb
sub
mov
mov
adc
mov
iret
enter
cmpb
mov
lret
std
filds
dec
std
pop
push
xor
ret
push
icebp
xor
or
pop
or
jnp
movsl
sub
cli
inc
int3
in
jno
push
icebp
push
dec
out
push
out
jecxz
jmp
jmp
aad
fstpl
dec
mov
gs
xor
loope
inc
push
sbb
mov
mov
jmp
stc
scas
test
lahf
dec
or
jno
mov
test
xor
xorl
sahf
mov
push
sbb
es
xor
sub
jp
pop
pop
lods
add
mov
pusha
jg
xchg
stc
outsl
jns
out
mov
nop
test
fisubrl
push
repz
or
pop
jg
fimull
gs
cli
xchg
inc
mov
pop
jbe
cmp
loope
pop
push
xchg
pop
nop
ds
xchg
mov
xor
add
add
sbb
jl
scas
enter
clc
or
jg
stos
cmp
jbe
arpl
sti
enter
clc
add
xor
mov
popw
in
mov
mov
sbb
add
sahf
outsb
sub
inc
into
xlat
cmp
cmc
ja
ss
in
jnp
mov
movsb
lea
xchg
jp
lea
int3
xchg
loope
cmp
mov
dec
shl
pop
xchg
lcall
rcrl
insl
sub
dec
cmp
test
push
pop
push
jbe
xor
xor
shl
data16
outsb
fstpt
rorb
subb
xor
jo
mov
std
sbb
mov
stos
and
sub
inc
stos
sti
ret
adc
inc
ds
dec
add
pop
push
test
inc
std
or
daa
xor
pop
xlat
push
and
mov
fnsave
test
push
add
arpl
adc
jno
pop
mov
xchg
cmp
cmp
cmp
adc
ds
pushf
inc
shrl
push
push
cmp
xchg
daa
lahf
mov
test
and
fnstsw
xchg
out
inc
mov
mov
pop
inc
movsl
push
add
or
adc
rcrb
rol
decb
loop
jecxz
scas
cmc
mov
out
loope
and
mov
addl
or
rolb
xchg
mov
inc
adc
mov
inc
jo
fwait
xor
loopne
jle
je
and
pop
jae
mov
pop
fnstenv
or
pop
into
sub
adc
cli
mov
add
jb
mov
je
repz
cltd
cmp
out
ja
lahf
sbb
out
jg
mov
das
or
sti
cmpl
imul
dec
add
test
lcall
arpl
push
cmp
sti
cmp
jge
mov
out
lods
mov
mov
adc
lcall
and
push
scas
out
cmp
pop
jb
int3
sbb
push
sub
jbe
inc
jecxz
dec
arpl
xor
xchg
mov
cli
lahf
push
mov
adc
leave
cmp
stos
pop
movsl
ret
cltd
xchg
jbe
mov
cmpxchg
pop
addb
adc
ja
lods
fistl
fidivs
and
pop
inc
test
jmp
push
ja
out
mov
orl
aam
dec
and
mov
rcrl
cltd
push
dec
push
or
cmp
mov
out
mov
pop
add
mov
sahf
and
adc
adc
add
inc
jo
xchg
pop
out
pop
enter
dec
add
sbb
js
icebp
push
and
pop
incl
shll
inc
add
sub
mov
add
dec
cltd
lret
lea
divl
push
jge
pop
dec
movsl
or
push
in
pop
fnstenv
inc
cmp
dec
sub
fwait
test
insb
mov
enter
stos
popa
or
scas
lods
lods
jno
lds
mov
std
cld
out
mov
jnp
aaa
ljmp
je
clc
push
stc
sbb
mov
push
dec
mov
sub
in
pop
mov
imul
daa
rcll
pop
pop
pop
fdiv
sahf
mov
ja
cmp
scas
dec
shlb
mov
mov
push
fwait
mov
in
jmp
jecxz
popf
cmc
xchg
notb
push
xlat
pop
mov
pop
psllw
xchg
sub
cmp
cmpsb
adc
jl
leave
xor
mov
sbb
lret
pop
pop
aam
das
mov
data16
js
push
cmp
sti
push
mov
outsl
mov
out
or
sub
or
sub
out
std
test
or
push
cmp
push
adcl
daa
lahf
push
jnp
loope
lret
rcr
les
hlt
and
pop
or
cli
sub
fidivrs
pushf
loop,pn
mov
xor
xchg
lods
or
mov
jge
pop
push
xor
jge
pop
sbb
jecxz
addl
inc
jmp
pop
xchg
or
sbb
xor
or
mov
xchg
iret
cltd
xchg
adc
xchg
faddl
pusha
cmp
adc
adc
les
dec
mov
fisubrs
dec
xor
jmp
sub
out
and
xchg
insb
jge
sub
aas
xchg
in
in
loopne
lods
add
das
lods
sti
out
test
dec
inc
sbb
sub
pop
das
in
sub
fidivrs
std
cltd
inc
mov
repz
andl
addr16
xor
jae
jg
jo
sub
inc
cwtl
pop
push
mov
stc
inc
push
or
cld
xchg
add
lea
sbb
mov
inc
cs
ljmp
dec
mov
and
ret
arpl
leave
sub
pusha
cmp
cmp
cmp
fs
cmpsb
adc
daa
stos
movsb
jnp
inc
dec
jp
xor
xor
cli
mov
add
lahf
movsb
out
and
cwtl
sbb
sbb
or
inc
das
movsb
xchg
xchg
sub
mov
and
ljmp
test
adc
add
jae
mov
imul
xor
inc
pop
pop
mov
and
pop
or
sbb
aaa
ljmp
adc
add
jg
pop
cmpsb
loop
stos
mov
mov
lret
or
xchg
inc
mov
in
xchg
sbb
out
lcall
cld
dec
cmp
xchg
mov
mov
pushf
jp
fmulp
popa
push
pop
xchg
mov
jmp
gs
jno
daa
out
xor
mov
repnz
fistpl
xor
orb
jne
stc
lahf
or
popf
mov
insl
lcall
pop
mov
and
mov
inc
add
jae
ss
inc
mov
int3
push
ja
sbb
stos
rcrl
shlb
xchg
movsl
mov
aaa
pop
pop
and
lahf
lahf
sub
rcr
and
mov
push
add
jle
or
jne
sbb
jno
lahf
fadd
arpl
mov
adc
lea
prefetch
or
mov
push
outsb
sbb
aaa
stc
mov
dec
xor
sbb
clc
xchg
and
add
es
fs
xor
inc
out
out
mov
inc
pop
cmpsl
push
insl
es
inc
lea
lods
repz
loope
mov
sub
push
adc
stc
jle
mov
pop
mov
aas
pop
faddl
int
xor
lcall
aaa
jo
sub
xchg
das
sub
jns
jo
stos
pop
mov
pop
sbb
jle
stos
loop
pushf
mov
adc
int3
mov
add
leave
daa
inc
insb
xchg
jl
fsts
ja
push
add
hlt
and
ds
gs
push
add
cmpsb
ds
lods
in
xchg
jmp
pushf
mov
sbb
hlt
xchg
inc
pop
adc
lea
push
sub
add
adc
xor
jb
cmp
cmpl
out
xchg
xlat
rorl
aad
pop
xchg
pop
push
nop
sub
dec
push
or
xor
xor
mov
int
jne
dec
xchg
outsl
pop
stc
imul
cmp
dec
fadds
or
iret
mov
push
movsl
mov
cli
imul
add
andb
sahf
xchg
in
movsb
sbb
push
jns
adc
pop
scas
jecxz
push
add
push
mov
gs
mov
jno
stos
sar
pop
lret
fwait
shrl
sub
lcall
enter
ficomps
sbb
inc
xchg
add
fwait
sub
out
xor
shlb
mov
ljmp
inc
inc
jecxz
je
push
adc
cmpsl
inc
pushf
fcmovnb
or
mov
lods
ret
ret
test
mov
popa
mov
jo
cmp
ja
push
push
sub
pop
fwait
pushf
pusha
sbb
jge
mov
adc
push
test
add
pop
in
lahf
push
mov
jb
shll
mov
or
xorb
jecxz
test
cmp
stos
dec
lods
es
dec
sbb
stc
push
scas
lods
and
xchg
mov
sbb
cld
mov
ja
pusha
stc
jle
clc
xlat
adc
inc
cmp
pusha
mov
mov
inc
ja
dec
fdivrs
jo
pop
cmp
out
movsl
sbb
sub
xor
xchg
jns
fwait
mov
fadd
xchg
xchg
idivl
add
rcrl
adc
push
mov
xchg
add
jbe
cs
jne
aam
inc
loop
push
jg
mov
stos
inc
ret
adc
mov
jb
imul
gs
xorb
shll
mov
popa
bound
sub
mov
fnstenv
ret
dec
call
popa
jne
push
es
or
cmc
push
mov
clc
scas
xor
mov
lret
data16
cwtl
stc
xor
rcl
or
push
jae
sbb
mov
mov
in
mov
push
or
mov
or
ret
push
jnp
xchg
cmp
ss
push
clc
insl
fildl
fstps
sub
and
adc
aaa
cmc
ljmp
cmc
sub
lret
push
dec
out
cmp
repnz
push
push
mov
push
cmp
mov
movsbl
mov
dec
daa
stc
clc
dec
stc
dec
push
mov
cmp
pop
loop
pop
adc
int3
jae
iret
in
dec
movl
push
mov
es
lods
add
mov
les
pop
cmp
mov
sarb
out
loopne
cwtl
cli
xchg
enter
dec
add
stos
loop
add
nop
popf
lcall
mov
mov
pop
imul
cltd
mov
adc
pop
xchg
pop
fld
imul
adc
sub
add
dec
es
pop
sbb
and
inc
cld
jle
stc
mov
inc
add
jp
mov
push
lea
xchg
loopne
xchg
mov
or
xor
clc
pop
leave
cmp
lea
ret
loope
push
push
mov
mov
cld
xor
es
insb
inc
sub
mov
stos
jmp
xor
add
jae
sbb
clc
insb
ja
jns
jg
mov
pop
or
mul
pop
sub
out
push
stos
aas
insl
enter
leave
cli
adc
into
leave
mov
and
int3
inc
jo
add
xchg
jl
mov
sbb
jno
pop
bound
xor
stos
jl
mov
xchg
jne
fstpt
push
scas
push
leave
jae
lret
xchg
lds
ror
xlat
and
inc
push
psrld
stos
lahf
shr
xor
fdivl
push
dec
sub
xchg
sub
insb
nop
mov
cmp
movsb
negl
push
inc
and
sub
inc
sbb
in
push
lods
lret
inc
lods
dec
mov
dec
shl
in
jb
pop
adc
pop
or
add
shrd
mov
loopne
cmp
fmull
dec
cmp
inc
lret
mov
data16
dec
fwait
ret
lods
inc
std
pop
sbb
adcb
push
mov
rcrl
cmc
mov
pop
rol
xchg
xor
xor
add
add
repz
pop
mov
cmpl
pop
push
mov
xchg
cmp
add
js
mov
pop
arpl
adc
xchg
mov
stos
aaa
xchg
sub
int3
sbb
sub
and
idivb
adc
push
jmp
fidivs
jns
or
out
testl
out
jge
cmc
aam
add
xchg
lea
inc
pop
xor
adc
repz
bts
call
nop
gs
push
lret
or
inc
out
out
mov
push
mov
xchg
loop
loop
int
iret
loope
mov
insl
mov
mov
je
pop
popf
ds
ret
rclb
pop
mov
inc
and
add
mov
aaa
cmpsb
push
in
pop
mov
add
push
cmp
pop
fs
lea
cld
jnp
pop
das
mov
pop
lock
test
xorb
sbb
adc
ds
xchg
push
fbstp
je
inc
fsubl
add
popa
movsb
dec
lret
mov
cmp
aas
data16
adc
aas
dec
scas
cmp
pop
aaa
pop
shll
lds
and
xlat
int
lods
xchg
sbb
cwtl
jl
xchg
popa
bound
lret
in
pop
out
sti
mov
push
test
ss
dec
rorb
aam
mov
adc
or
frstpm(287
or
pop
orb
push
je
push
jnp
mov
cmp
or
out
xchg
pop
std
push
stc
test
aas
in
xor
inc
dec
push
xor
sbb
sub
lcall
xchg
ja
cmp
inc
adc
xchg
arpl
cld
xchg
xor
or
inc
fidivrs
mov
es
adc
pop
rcrl
mov
rorb
nop
sti
jl
jecxz
inc
jecxz
outsb
lods
mov
and
test
mov
mov
nop
ds
enter
dec
test
jae
jmp
stc
xor
sub
stos
xchg
and
inc
rcll
cmp
fildll
adc
test
mov
mov
mov
pop
xchg
xchg
pusha
jo
or
scas
rcrl
or
cmpsl
pusha
sub
pop
cmpsl
push
mov
dec
pop
mov
and
dec
inc
jns
aam
pop
mov
push
negl
inc
pop
jmp
pop
in
cmc
push
adc
pop
mov
jb
es
mov
stos
or
mov
mov
mov
mov
outsb
push
repnz
cltd
fnstcw
aam
pop
fcoms
xlat
sub
mov
push
ret
mov
nop
cmpb
shll
leave
jg
leave
mov
push
movsb
addr16
inc
in
mov
mov
fadd
mov
jl
enter
add
push
lret
xor
pop
mov
or
test
aaa
push
rol
imul
daa
ds
xchg
test
and
add
push
push
in
je
clc
inc
pop
push
adcb
jo
sub
mov
mov
xchg
fwait
pushf
fnstsw
dec
push
xchg
push
add
aaa
nop
outsb
loop
insl
int3
cmp
mov
fisttpll
mov
loop
xchg
outsb
popa
sbb
cmc
and
aaa
hlt
pop
ror
rclb
xchg
mov
lcall
loop
push
shrb
inc
sti
jnp
mov
mov
insb
cmc
pop
scas
jb
popf
pop
mov
test
fiadds
fidivl
add
xor
mov
std
sub
mov
mov
es
push
or
in
mov
and
addr16
arpl
xchg
adc
cmpsb
xchg
mov
cmp
subb
orl
add
push
js
lret
notl
or
mov
test
mov
sub
pop
cmp
inc
mov
cld
cli
or
fistl
loop
and
lds
mov
addr16
mov
inc
pop
scas
xchg
push
inc
jno
or
mov
push
leave
in
negb
vmulss
push
cmpb
cmpsl
movaps
faddl
mov
imul
dec
sbb
push
les
popa
js,pt
mov
stos
jle
inc
cmp
mov
pop
rorl
add
push
in
stc
outsl
xor
sbb
add
jno
push
or
insl
and
fs
jecxz
sar
repnz
and
jg
aad
xchg
cltd
mov
call
scas
jecxz
push
rcrb
jb
mov
fstps
daa
mov
push
jno
ljmp
cmp
mov
push
push
je
add
jg
cld
cld
xchg
fisttpll
or
xchg
orb
loopne
jmp
sbb
inc
dec
ficompl
outsb
dec
rorb
sti
ja
in
stc
repz
adc
out
pop
mov
mov
call
pop
inc
inc
js
repnz
fisubl
loopne
flds
dec
sbb
js
cld
scas
lods
push
loopne
mov
jnp
pop
lahf
sub
xchg
mov
jne
cltd
repnz
cmp
neg
mov
into
hlt
xor
aad
jge
insl
add
cltd
outsb
or
int
test
cli
imul
movsb
mov
lock
int
rcrl
cwtl
push
push
xchg
adc
pop
in
inc
jbe
in
xor
mov
repnz
push
push
in
jbe
imul
lea
int
pushf
xor
sbb
pop
push
mov
mov
jnp
and
and
pop
adc
add
mov
insl
push
ljmp
outsb
inc
in
cli
dec
testl
xchg
xor
incl
pop
cltd
push
push
scas
jae
dec
xor
ret
push
lods
cmp
adc
mov
orb
push
hlt
mov
ja
mov
pusha
xchg
vpavgb
in
add
aas
mov
sub
inc
xchg
movsl
loopne
sub
pop
cmp
bnd
in
sbb
insb
scas
sti
mov
ret
mov
inc
fstpt
fucomi
adc
andb
mov
bound
movsl
inc
scas
and
add
repz
inc
std
pop
aad
and
mov
push
je
movsb
inc
mov
fsubr
mov
into
dec
lock
int3
imul
sub
ljmp
es
call
stc
mov
ret
cs
push
pop
jns
add
push
aad
pop
lods
pop
sahf
into
popf
mov
push
adc
adc
das
mov
ljmp
movsl
das
mov
and
cmp
jnp
pop
lods
inc
mov
add
lret
les
ss
insb
push
or
shlb
and
pop
inc
hlt
xchg
sub
and
or
dec
mov
xchg
pop
cmpsb
pop
push
inc
jne
scas
push
mov
test
xchg
and
jnp
mov
pop
adc
cmp
jo,pn
pop
and
aad
xchg
cli
add
aaa
out
pop
ret
and
scas
sub
mov
cltd
in
les
mov
lcall
mov
movsl
insl
mov
in
xor
mov
dec
push
push
sub
fcomps
leave
dec
daa
aad
cs
lahf
popf
xor
lss
jge
mov
subl
mov
mulb
adc
mov
popl
adc
dec
mov
fdivrs
pop
pop
adcb
xchg
into
mov
add
pop
add
sti
cmpsl
das
jg
adc
or
sub
dec
xor
xor
mov
ret
jae
pop
sub
sub
pusha
mov
push
clc
xchg
cmp
sti
idivb
out
call
test
push
xchg
xlat
mov
sets
lods
lds
mov
push
pop
ljmp
out
movb
inc
sub
jnp
aad
sbb
pusha
ret
hlt
jno
mov
sbb
pop
xlat
push
inc
sub
outsb
or
mov
pop
cmp
mov
jbe
in
push
aaa
shlb
in
push
fsubr
aad
mov
pop
sbb
push
insb
insl
mov
mov
test
ja,pt
icebp
jmp
lods
jb
xlat
subb
nop
divl
jno
hlt
add
ds
sbb
sub
rcll
sbb
inc
arpl
push
push
popf
ds
leave
push
and
and
imul
cmp
ja
fmul
pushl
mov
add
cmp
add
icebp
inc
sub
adc
ret
cmp
inc
test
fdivrs
mov
pop
cli
dec
fnsave
mov
mov
sub
imul
xchg
into
adc
movsb
loop
push
inc
mov
imul
mov
icebp
stc
push
dec
outsl
sbb
out
lods
push
jne
lods
push
shrb
fimuls
jmp
rcrl
shrb
adc
mov
lcall
into
mov
ret
enter
outsb
inc
popa
pop
mov
mov
arpl
dec
lret
push
xchg
xor
push
and
insb
rorb
adc
push
cmp
sub
mov
aam
movsl
in
fdivrl
out
sbb
cltd
sbb
sbb
mov
push
xchg
jnp
xchg
leave
mov
aad
out
xchg
dec
sbb
test
rcll
jmp
mov
or
es
pop
xor
mov
fmul
sub
push
fistpll
fwait
pop
lahf
mov
cld
or
sub
stos
adc
cmp
lds
lods
or
sbb
orl
inc
dec
lahf
adc
cwtl
inc
adc
clc
repnz
scas
test
xchg
xchg
enter
ja
adc
lods
bound
xor
sahf
mov
sub
andb
add
lret
cltd
stc
sbb
ret
data16
push
xchg
rclb
push
jne
add
out
vsubss
enter
sub
inc
jbe
mov
pop
outsb
push
pop
sbb
push
lahf
hlt
jl
in
inc
ret
call
xchg
push
adcb
in
ret
pop
push
fwait
adc
jle
test
bound
xor
lods
xlat
fwait
jb
sti
int
push
jo
dec
mov
fs
outsl
xor
mov
pop
mov
iret
push
clc
or
clc
xchg
pop
fs
insl
clc
test
mov
loope
jp
movsl
pop
xor
call
jmp
or
pop
dec
cld
ficompl
movsl
fistl
pop
ljmp
andb
sub
call
inc
xor
sbb
mov
repz
rorb
inc
scas
pop
ja
ljmp
arpl
mov
mov
pop
pushf
sbb
inc
adc
roll
xchg
loope
mov
popf
ss
push
mov
add
nop
fcompl
adc
psubd
divl
mov
fistpll
int3
pop
out
hlt
dec
out
hlt
loopne
and
push
or
mov
ror
test
push
movsb
mov
push
pop
mov
test
xor
lret
es
ja
cmpsl
mov
loope
push
enter
gs
inc
inc
in
sbb
insb
roll
iret
fadds
inc
lret
lods
mov
fsubrl
aad
sahf
movsl
pop
cmpsl
cmp
ds
insl
aas
adc
daa
lahf
xor
loop
adc
add
ljmp
jno
cmp
sbb
inc
pop
hlt
fs
xlat
jmp
jmp
mov
out
cmp
fldln2
daa
fcoms
pop
cld
inc
pop
ret
pop
mov
push
adc
shrl
jb
rorb
cltd
mov
or
leave
pop
test
repnz
mov
or
scas
int3
test
jns
leave
inc
or
xchg
xlat
mov
inc
es
push
aas
pop
jnp
scas
aad
fs
add
sub
rorb
sub
jae
pop
gs
xlat
sub
ret
pop
out
or
pop
pushl
outsb
add
lock
imul
dec
jnp
orl
ret
out
jne
mov
leave
out
xchg
popa
add
int3
nop
sbb
mov
mov
fcmovb
xor
sub
mov
jae
nop
lea
fmull
test
out
push
jge
push
hlt
dec
xchg
cmp
sub
pop
push
push
jbe
in
mov
mov
imul
getsec
hlt
imul
mov
ret
cmc
loopne
inc
mov
data16
fadd
into
cmp
rclb
push
daa
cmpsl
in
mov
adc
out
mov
stc
sbb
inc
popa
or
mov
mov
aam
lds
xchg
cmp
es
ds
pop
mov
fistps
pop
popf
cmp
out
lret
xor
pop
enter
mov
xchg
fidivrs
loop
outsl
test
jno
call
pop
xor
loopne
out
fadd
xor
loop
sti
push
adc
sub
mov
fstps
mov
xchg
mov
xchg
outsb
push
test
adc
mov
int3
sbb
orps
cmpsl
inc
jp
jp
mov
sub
add
lock
jl
je
jns
pop
jge
push
pop
jge
mov
xor
mov
into
mov
inc
ja
and
aaa
cmp
repz
pop
mov
faddl
inc
lahf
cmp
mov
out
pop
insl
inc
mov
idiv
into
mov
mov
shll
push
cmp
and
push
push
divl
movl
mov
dec
pop
fwait
stc
loopne
mov
negl
or
mov
xor
pushf
inc
je
dec
out
push
pop
es
dec
mov
push
push
pushf
test
mov
pop
out
jnp
insb
add
push
mov
sub
lods
aam
fcoml
mov
pop
pop
pop
push
mov
loopne
mov
into
int3
or
inc
lahf
lret
out
dec
dec
xchg
dec
addr16
push
das
cwtl
and
sbb
int3
xchg
mov
subb
dec
lcall
xchg
sub
fisttpl
xchg
fdivrs
mov
lahf
cmp
aad
shll
scas
imul
fdivs
cld
in
inc
or
aas
push
sub
je
hlt
add
jge
push
je
ss
cmc
xchg
cmp
clc
push
cmp
dec
push
or
inc
sub
jge
lds
xor
daa
cwtl
test
cmpsl
ret
fwait
stc
sbb
aad
mov
dec
mov
mov
dec
bswap
bound
mov
sub
lret
repz
mov
xor
test
cmpsb
pop
mov
pop
movsl
or
in
imul
out
xchg
xchg
mov
mov
push
sbb
cmp
sbb
or
mov
daa
push
inc
outsb
jecxz
mov
int
dec
lcall
mull
xchg
pop
out
iret
jo
mov
pop
repz
mov
add
jp
inc
xchg
push
cld
jmp
dec
bound
std
jl
mov
push
and
add
popf
inc
sub
cs
sub
stos
movsb
icebp
ljmp
mov
push
pop
jbe
jl
mov
dec
lock
data16
lcall
loop
aad
add
pop
aad
mov
fnstsw
cwtl
push
andl
xor
paddusb
jb
movb
jle
jge
push
lods
push
movsl
hlt
dec
jnp
pop
div
inc
lock
push
pushf
sub
sub
loop
outsl
pop
sbb
cmp
loopne
icebp
and
and
add
push
out
adc
std
add
xor
jns
pop
and
dec
outsl
ss
dec
ja
add
sub
inc
mov
fcoms
lock
test
rclb
lods
sub
and
notb
lods
sub
sbb
int3
adc
gs
xchg
daa
sub
cwtl
cs
jb
ficoml
sbb
mov
cmp
loop
pop
mov
ret
das
imul
mov
sbb
xorl
ret
cmp
add
add
fwait
xchg
xor
insb
cli
and
ret
jl
inc
cmp
pop
and
and
loopne
adcb
sub
and
out
mov
lahf
imul
mov
data16
mov
stc
add
or
jle
fldt
cli
jbe
mov
imul
shlb
iret
ficoms
jecxz
dec
test
or
loopne
cmp
mov
pop
jl
scas
xorb
jne
push
fidivl
cmp
or
bound
arpl
mov
pop
push
mov
xor
mov
mov
ja
fiadds
dec
sbb
out
test
fcomps
inc
arpl
mov
ffreep
stos
rcll
pop
loopne
lret
xchg
dec
sub
mov
xor
test
pop
leave
mov
dec
dec
je
fildll
into
hlt
out
mov
sbb
inc
xchg
cld
mov
mov
pop
jne
mov
jle
scas
loop
je
push
push
je
cwtl
fnstcw
mov
int
daa
aaa
ljmp
adc
add
jae
stos
aam
jge
cmpsb
popf
test
repz
pushf
adcl
cmp
jecxz
push
add
xor
dec
call
jae
movsl
fcmove
inc
outsl
je
mov
mov
push
mov
les
je
je
fisttpl
loopne
pop
pusha
pop
movsl
mov
push
in
cmp
test
mov
insb
lret
aam
repnz
sub
cmp
xlat
pop
enter
sbb
std
pop
aaa
sub
fldenv
in
dec
cs
jp
sub
sub
outsb
aam
mov
jl
adc
popf
and
adc
mov
adc
loop
push
out
cmp
mov
sar
xor
pop
sbb
jmp
jne
inc
add
insl
arpl
ljmp
push
jecxz
iret
dec
sti
mov
repnz
insb
out
pop
xchg
pop
jmp
pop
mov
lahf
dec
imul
pop
fsubl
xor
lods
movsl
jmp
jle
jbe
pop
outsb
std
jae
xor
cld
insb
test
or
in
dec
les
cmpsl
sub
pop
dec
or
fs
push
mov
dec
mov
sbb
mov
cmp
pop
mov
cs
imul
into
in
inc
lea
cmp
and
popa
add
mov
test
hlt
repz
outsl
mov
lock
je
dec
fbld
pop
mov
clc
insl
stos
lock
jns
dec
scas
mov
xchg
and
sbb
andl
lods
mov
aas
dec
enter
fisubrl
arpl
mov
mulb
aad
jo
fldl
jo
ss
fidivrl
xor
jnp
mov
jne
mov
das
pusha
push
cmp
stc
repz
imul
pusha
dec
pop
test
cmp
insl
int3
mov
xor
les
out
fsubrs
xchg
jl
in
mov
mov
mov
sub
sub
and
inc
mov
mov
je
mov
push
jae
loop
push
sti
clc
cmc
xor
cmp
daa
out
push
ja
test
iret
rol
jne
pusha
add
stos
aas
mov
mov
aam
dec
xchg
ret
dec
jne
xor
mov
adc
cmp
bound
xchg
xor
scas
scas
lds
cmp
insl
or
lret
lods
cmp
inc
inc
adc
int3
mov
sub
jbe
mov
aad
xor
shl
imul
clc
pop
pushf
push
cmp
push
mov
mov
icebp
and
pop
bound
aad
push
add
roll
sub
lcall
std
cmp
popa
cmp
dec
out
add
mov
mov
mov
js
data16
xchg
jge
pop
out
and
xor
jns
fists
xchg
or
mov
xlat
xchg
pop
jge,pn
add
pop
pop
xchg
xchg
cmp
mov
out
push
pop
fdivrs
fld
ljmp
pop
jmp
xor
adc
mov
dec
mov
outsb
cmp
xchg
fdiv
shlb
leave
adc
imul
out
lock
push
xorl
enter
and
in
add
lcall
imul
xchg
loop
jge
bound
inc
mov
lock
lret
std
push
adcl
cmp
pop
movsb
adc
cld
mov
xchg
jmp
cmovns
add
cs
jge,pn
push
and
adc
fwait
cmp
or
in
pop
and
clc
pop
jp
mov
bound
xchg
ficomps
in
cmp
cmp
mov
fdivl
dec
adc
xchg
jmp
aam
xchg
pop
push
xor
inc
into
inc
sbb
pop
ja
cltd
add
test
xchg
push
mov
jmp
int3
lods
cmpsb
and
adc
pop
mov
fs
cmpsb
dec
adc
aas
mov
xchg
mov
jo
push
mov
push
out
dec
jp
clc
sbb
push
mov
shll
pop
adc
sub
push
push
scas
in
add
add
aas
icebp
lret
divb
into
in
xor
popa
push
roll
mov
dec
pop
adc
mov
sbb
in
roll
xchg
sarl
outsb
clc
call
mov
and
jb
or
or
lods
and
push
out
iret
pushf
in
mov
negb
imul
xorb
add
aam
mov
fsubl
popa
dec
jnp
nop
jecxz
imul
test
scas
mov
mov
cmpb
iret
rcll
and
in
ret
lds
jno
fwait
jae
dec
fidivrs
xchg
nop
ret
mov
int3
test
loop
in
mov
sbb
cltd
ret
xchg
cs
inc
mov
lret
xchg
push
xchg
cmp
mov
cld
jmp
fs
pop
cmp
dec
push
and
hlt
pushf
and
rcll
mov
push
insl
fstpl
xchg
test
sar
sbb
cmp
fildll
pop
ljmp
or
icebp
lret
rolb
xor
pushf
xchg
popf
pop
adc
jl
movsl
es
je
jne
jge
pop
cld
pushw
push
repnz
jns
add
jae
data16
mov
adc
sbb
repz
aas
pop
pop
sub
divb
push
xchg
xchg
or
push
pop
lret
inc
mov
adc
jg
stos
stos
call
fsubs
in
push
lods
cmp
pop
inc
lds
stos
paddusw
out
inc
mov
inc
mov
addr16
push
push
inc
sbbb
shlb
push
and
xchg
cmp
add
mov
enter
cmpsl
sub
out
jg
test
pop
sub
push
adc
jmp
pop
stos
scas
mov
loope
xor
xchg
popf
into
fisttpll
add
cmpsl
inc
fs
scas
imull
cmpsl
add
mov
push
inc
test
in
or
test
arpl
ja
jae
sub
xor
idivl
rorl
adc
cmp
test
stos
aaa
push
pop
mov
xlat
sub
jp
ja
jae
int3
push
repnz
call
insl
out
dec
imul
test
mov
add
or
addr16
mov
sar
sbb
or
sbb
stos
imul
cmc
jecxz
mov
enter
fs
xchg
push
jge
sub
sbb
jb
leave
dec
sub
mov
test
cmp
rcl
push
ds
pop
jne
fwait
out
sub
lret
push
push
in
pop
mov
inc
or
das
test
push
popf
hlt
data16
pop
xor
lods
add
sarl
xchg
cmp
jbe
cmc
mov
mov
cmp
test
lret
ret
loopne
or
ret
dec
lods
ret
inc
sub
enter
clc
in
cmp
fwait
adc
sbb
arpl
in
mov
aas
pop
sbb
lock
js
dec
mov
inc
scas
cwtl
mov
jae
call
test
push
jp
xor
jno
jno
xor
test
cmp
pop
xor
pop
fidivl
shr
cmpsb
and
leave
popa
push
xor
inc
scas
test
daa
and
cmp
and
popf
xor
xor
mov
mov
mov
jns
orl
enter
cmp
imul
inc
pop
push
dec
pop
sbb
pop
rcrl
lret
je
call
movsb
push
fistpl
and
lods
lods
pusha
movaps
or
sarl
lods
jbe
fsubp
mov
sub
xor
push
outsl
mov
leave
or
jecxz
fisttps
dec
lahf
add
dec
mov
je
pusha
stc
push
popa
stos
push
es
jg
cmp
push
fnsave
movsl
pop
xchg
rcrb
pop
test
and
push
xchg
push
insl
dec
jecxz
rorb
mov
stc
pop
mov
shr
mov
and
movsb
lock
adc
sar
push
pop
fcmovne
push
pop
lcall
lods
cmp
xchg
push
or
in
jnp
nop
pop
push
jo
dec
jp
in
mov
inc
inc
stc
cmc
or
cmp
movsl
dec
scas
sahf
icebp
mov
fmul
mov
jb
sbb
sbb
mov
mov
inc
adc
daa
stc
inc
cmp
mov
lock
dec
mov
sub
inc
and
popf
in
stos
and
xchg
xor
or
cmp
ficomps
sub
daa
dec
lret
idivb
push
test
loope
add
mov
xchg
cmc
rcrb
cld
xlat
fcomps
imul
lods
pop
jb
xlat
push
xlat
iret
xchg
jno
jae
es
fcmovnbe
pop
in
push
sbb
aad
repz
cli
loop
fwait
mov
pusha
sub
das
or
inc
adc
int
stos
fcomip
and
mov
aad
mov
in
jecxz
inc
rcrl
sub
and
mov
sbb
mov
lods
pop
loope
adcl
leave
lcall
rcll
or
push
fs
test
push
lret
data16
rcll
fcmovbe
cld
pop
mov
or
incl
push
pop
and
jge
jg
jmp
sub
dec
inc
arpl
in
add
icebp
mov
lods
sub
outsl
cmc
dec
jns
xchg
in
leave
aaa
or
imul
pushf
mov
push
imull
xlat
push
icebp
pop
adc
loope
out
or
xor
xor
xchg
mov
out
or
rcll
les
mov
xchg
repnz
or
and
dec
or
std
fldt
test
add
inc
jge
cld
rcll
sub
push
mov
jecxz
imul
je
psubw
mov
ret
push
push
adc
cmp
mov
data16
push
jbe
std
and
jns
addr16
test
in
jns
inc
push
cmc
mov
sub
popf
cmp
cltd
mov
stos
adc
scas
out
sahf
dec
mov
xchg
mov
sub
pusha
mov
inc
inc
mov
cmp
or
ss
xchg
or
sub
aad
cmp
sub
cmp
ficomps
movsbl
pop
mov
aam
jb
jno
testb
add
aas
je
mov
inc
jae
sarb
mov
inc
aam
or
cmp
push
sbb
cmpsb
mov
mov
ret
pop
mov
lds
xor
push
gs
push
mov
sub
pop
and
fisttps
xchg
or
data16
lds
push
xorl
repnz
xor
sbb
and
add
pop
or
cs
mov
inc
out
pop
ljmp
dec
inc
notl
xor
mov
out
xor
in
xchg
adc
lcall
aad
mov
or
test
aad
jle
bound
dec
cbtw
loopne
xchg
fldl
inc
sahf
cmp
xchg
lret
jnp
jae
shrl
and
add
fisttpl
pop
mov
sub
aad
andb
icebp
pop
lds
jae
movsl
iret
test
pop
add
rcl
and
test
and
mov
inc
add
fiaddl
out
lcall
jmp
inc
inc
je
pop
sub
mov
xor
das
mov
cmp
shlb
pop
sbb
mov
ret
aaa
dec
fsubrs
addr16
pop
mov
fs
imul
pop
daa
sub
fld
adc
insl
or
xlat
pop
orl
lahf
aad
xor
mov
jp
push
dec
push
sub
ret
dec
pop
or
mov
js
mov
inc
mov
cwtl
add
dec
and
adc
shll
add
and
test
repz
scas
fwait
inc
or
ja
data16
dec
ds
dec
or
mov
loop
daa
inc
or
dec
mov
movb
ret
out
lock
xlat
add
mov
jp
pop
call
enter
inc
stos
nop
xor
mov
and
dec
iret
mov
rorl
scas
xchg
push
es
and
add
sbb
bound
dec
sub
mov
lods
mov
imul
mov
jle
int3
inc
jb
adc
inc
addr16
stos
ret
iret
inc
mov
add
std
pop
out
mov
std
jmp
xor
inc
loope
fdivrl
push
add
test
jp
mov
movsl
xchg
loope
movb
inc
and
js
xchg
lods
inc
dec
sub
clc
cmp
int3
in
xchg
clc
insl
jmp
sub
movsb
sub
jge
jl
lods
dec
pop
jb
in
xchg
ss
pop
add
xor
adc
insb
pop
mov
cmpsl
jecxz
into
mov
fdivrl
add
jmp
and
loopne
iret
stc
loop
ret
sub
xchg
ret
into
sub
gs
mov
add
insl
push
sbb
dec
mov
test
rolb
pop
push
inc
jbe
push
fnstenv
pop
scas
xchg
add
pop
jns
sub
xchg
insb
bound
jmp
sbb
popf
cwtl
push
popa
enter
mov
clc
cwtl
sahf
jo
inc
lcall
mov
and
xchg
cmp
insb
push
mov
stos
lods
pop
mov
pop
and
aam
push
fsubrl
push
xor
rcrb
pop
xor
cli
xor
in
xchg
inc
push
mov
inc
mov
add
dec
test
inc
aad
int3
test
aad
push
into
movb
sbb
dec
lret
lahf
and
dec
lods
mov
lret
ja
icebp
push
pop
or
cltd
iret
push
lock
inc
movsl
in
cmp
lods
andb
fwait
mov
dec
test
cmp
js
das
push
mov
fistpll
fistl
out
or
aam
mov
xor
add
iret
movsl
insb
pop
addr16
jg
repnz
pop
in
cltd
mov
sub
in
ja
adc
lret
add
aad
or
subl
mov
pop
pop
dec
pop
stos
outsb
mov
xchg
mov
add
xchg
push
arpl
sub
fcmove
in
jle
out
fdivp
adc
sbb
popa
loopne
or
or
pop
aam
enter
lcall
movsb
xchg
movb
and
sub
insb
lret
ljmp
cmp
andb
mov
aad
sub
test
out
cmp
push
mov
les
fistps
call
push
xor
push
inc
shll
xor
add
movsl
jnp
in
pinsrw
sarl
xor
inc
mov
loopne
mov
cmp
mov
pop
in
cmp
es
push
dec
sub
movb
adc
dec
add
jmp
sub
mov
aad
movsl
and
xor
rcl
mov
imul
pusha
insb
jno
jp
xchg
push
test
inc
mov
dec
inc
mov
into
hlt
insl
cld
adc
in
cmp
pop
jbe
sub
jmp
movsl
push
xchg
xor
adc
jne
push
pop
jbe
nop
fimull
mov
mov
lods
cmpb
xor
cmp
pushf
cmp
add
push
sub
or
or
ljmp
sbb
cs
push
or
fdivs
inc
xchg
pusha
jns
add
cld
int3
xchg
cmpsb
push
pop
push
int
pop
loop
push
clc
pop
adc
fisttpll
cmp
mov
std
push
lods
sbb
cli
add
jp
sbb
mov
sbb
imul
out
and
cmp
scas
xor
jl
outsb
push
shll
popf
sarb
mov
insb
lea
jbe
jno
lcall
adc
mov
mov
dec
fmul
inc
add
or
mov
stos
sub
mov
or
ret
popa
sbb
mov
or
sbb
xor
daa
xor
repz
adc
lea
inc
cmp
dec
jae
push
lods
lea
into
mov
xlat
adc
jl
sub
add
push
aam
sbb
sub
xchg
mov
data16
sarb
jge
test
adc
shlb
icebp
or
ja
aas
push
push
enter
cwtl
adc
mov
push
dec
in
bound
sbb
int
sbb
jmp
les
repnz
xor
mov
jno
aam
push
hlt
lock
imul
jg
push
js
adc
scas
hlt
inc
shr
push
shl
cmp
inc
mov
or
movsl
mov
adc
fwait
test
xchg
mov
sub
stc
out
loope
mov
cmp
jno
popa
mov
arpl
ja
push
stos
insb
arpl
add
ret
out
or
or
maskmovq
insl
dec
testb
mov
sub
ret
xor
movsb
dec
jnp
test
fcmovbe
mov
insl
sbbb
add
push
sbb
push
xor
add
ffree
add
cmpsb
sbb
xchg
jp
sbb
inc
mov
ficomps
pop
mov
xchg
cld
loop
lods
mov
shlb
xlat
xor
test
sub
daa
cmp
xor
push
popf
inc
test
cmpsl
pop
test
sub
js
lods
xchg
iret
jle
lret
fwait
icebp
test
push
sarl
std
inc
xor
xchg
adc
lret
sub
mov
mov
mov
push
sahf
push
pusha
mov
sarb
xorb
cmc
js
mov
pusha
or
mov
idivl
adc
push
imul
shl
xchg
sub
movsl
das
xchg
pop
pop
jg
mov
mov
shll
pop
and
or
test
mov
icebp
lcall
sbb
mov
sub
subl
mov
sti
das
clc
xchg
pop
popa
fisubrl
mov
mov
or
inc
push
adc
push
out
fsub
stos
mov
test
sbb
out
fidivl
out
adc
mov
mov
jbe
ja
xchg
inc
pop
sbb
test
and
lock
jecxz
or
sub
imulb
mov
add
adc
mov
mov
jns
xor
cli
inc
inc
xchg
or
pop
enter
mov
inc
sti
cmp
mov
icebp
mov
add
mov
aam
mov
dec
fwait
xor
pop
sub
cwtl
loope
aas
and
mov
and
outsl
lock
inc
fcoml
inc
mov
sti
scas
cmc
mov
lock
jg
mov
inc
xchg
aas
inc
mull
jg
xchg
lea
sub
add
jmp
dec
out
int3
inc
sub
mov
and
pop
stos
lret
rorl
push
fldcw
xchg
lods
jno
sbb
int
out
popa
and
jp
movsl
inc
in
adc
popf
mov
stos
mov
dec
jecxz
outsb
mov
push
adc
sbb
imul
pop
clc
inc
sbb
cld
xchg
je
xor
pusha
mov
loope
loope
or
inc
jg
dec
popf
stc
mov
pop
push
mov
fnstenv
jo
out
dec
insb
out
adcl
mov
xchg
imul
xchg
xchg
xchg
cmpsb
test
dec
lods
andb
xor
xrelease
xchg
rcrb
sbb
add
divb
mov
cmp
mov
outsl
push
dec
hlt
repz
pop
mov
fistpl
cmp
xor
sub
mov
or
pop
mov
fdivr
cmpsb
pushf
dec
or
and
call
and
push
mov
jns
push
pop
mov
out
mov
mov
adc
fistpl
sbb
cmp
hlt
cs
cmp
mov
jmp
imul
mov
mov
aas
jle
dec
adc
fisubrl
nop
pop
dec
out
sub
movsl
lret
jg
ss
pavgw
mov
xor
rcl
lods
inc
psubusw
stc
mov
je
in
popf
cltd
adc
xchg
sub
xchg
lret
xor
xchg
sbbl
les
lret
test
cmpsb
xor
cmpsl
xor
adc
imul
and
xchg
jne
xor
jno
mov
rcll
jle
lret
add
pop
sbb
dec
test
cmp
das
adc
pop
cs
push
mov
movsb
xchg
lea
or
cmp
mov
pop
jl
adc
dec
jno
fdivp
cli
mov
xor
mov
aam
repnz
mov
mov
int3
xchg
mov
pop
int
fstpt
or
inc
dec
push
and
lock
or
and
pop
cmp
jmp
mov
xlat
mov
mov
push
je
ds
fcmovbe
adcl
pop
inc
loop
or
jbe
mov
jle
into
xchg
sbb
push
or
jno
cmpsl
loopne
insb
or
push
mov
jge
sbb
and
inc
xchg
cmp
rcll
mov
dec
aam
ds
dec
iret
mov
ret
add
cwtl
xor
lahf
sbb
mov
and
stos
and
or
outsb
pop
adc
shl
mov
sbb
xor
subl
jne
mov
xchg
sbb
jg
jle
shlb
push
fcompl
idiv
test
incl
pop
rorb
mov
test
sar
pop
mov
je
out
or
sti
outsb
rorb
cmpsl
inc
lcall
or
pop
outsb
push
cmpsb
xchg
lcall
xor
test
ljmp
lahf
das
flds
pusha
pop
jge
sbb
gs
xchg
and
pop
and
pop
mov
push
mov
in
pop
popf
shrl
or
arpl
dec
sbb
cmpb
push
hlt
outsb
mov
enter
cmp
push
xchg
pshufw
add
push
xorb
sbb
cmp
inc
dec
adc
subl
mov
push
pop
fcmovnu
sbb
mov
push
sub
js
rcrb
mov
loope
arpl
outsb
push
xchg
adc
js
int
pusha
xchg
loop
xchg
pop
pushf
and
add
shrl
mov
dec
or
or
loope
es
pushl
imul
jns
scas
sbb
mov
xor
mov
imul
pop
jmp
mov
into
stos
mov
js
inc
fcomps
daa
ja
pop
mov
lea
imul
int3
push
mov
imul
stc
jno
negb
test
sub
xchg
adc
jo
jb
js
or
push
es
stc
xchg
aaa
stc
lea
xchg
pop
pop
popa
cwtl
cmpsb
repz
negl
add
int
push
adc
dec
sbbl
fsubl
aas
cwtl
mov
repnz
fldcw
and
add
mov
add
mov
ljmp
lcall
sub
sahf
dec
aas
mov
repnz
adc
dec
mov
cmp
negl
add
mov
fbstp
pop
xor
add
dec
and
inc
stos
lds
cwtl
mov
pop
jo
jl
int3
add
fsubrs
cmp
sbb
sahf
or
in
imul
xchg
lret
jno
cmp
aad
ljmp
fstp
ja
call
insl
jnp
clc
cmp
scas
fldt
popa
or
outsb
dec
pop
sbb
js
add
cltd
push
cmc
int
adc
pavgw
xor
jge
negb
imulb
in
pop
imul
pop
test
rcrb
or
and
mov
mov
mov
jnp
stc
inc
sub
xchg
js
je
xor
cmc
mov
xor
mov
test
add
xlat
cmp
dec
mov
pop
pop
test
mov
dec
arpl
imul
jl
cmp
push
out
sahf
pop
popa
adc
lcall
jp
mov
cmp
cmc
fsts
sahf
mov
dec
insb
push
repnz
test
fdivrl
sbb
push
repz
cmp
xchg
pop
loop
sub
or
or
in
out
mov
pop
mov
cmp
xchg
sub
pop
jg
lahf
and
mov
jmp
popa
xchg
mov
pusha
mov
or
xacquire
mov
or
fbstp
adc
test
dec
cld
pop
push
xchg
scas
outsl
repz
jg
sub
ret
arpl
in
cltd
xor
jb
sub
aam
or
push
pop
mov
and
xchg
inc
fcmovu
cmc
xchg
jmp
fstps
test
fwait
stc
dec
sub
out
inc
or
fcom
test
mov
std
cmp
in
push
xor
fcoms
jge
jmp
mov
sbb
cmp
pusha
into
call
adc
jb
sahf
ret
mov
push
test
cs
fbld
in
add
mov
and
sbb
mov
mov
ret
out
aas
pusha
sti
cwtl
cltd
imul
jae
shr
decb
imul
insb
or
add
fmuls
inc
cs
mov
sub
inc
adc
jno
add
movsb
add
stos
xor
inc
sub
mov
sub
sub
mov
pop
jp
lods
push
xor
mul
or
dec
jge
pop
mov
aas
add
adc
xlat
ret
mov
movsl
pusha
inc
cld
dec
adc
add
xchg
mov
sbbl
popf
pop
mov
lods
lods
loopne
jl
aaa
mov
nopl
mull
shrl
and
out
cs
idivb
pusha
lea
sbb
ror
addr16
negl
addr16
mov
inc
lds
add
cld
jb
jbe
sbb
mov
sub
inc
fnstenv
aas
or
add
lock
imul
xor
fldenv
pop
inc
lods
fwait
xchg
sub
loopne
test
push
xsavec
push
fisttps
stos
push
sub
lock
lret
repnz
ret
xlat
subl
dec
jae
inc
out
insb
xchg
sahf
push
ja
test
out
lcall
imul
xor
call
cs
push
jo
mov
shll
icebp
xchg
sub
add
lret
insb
add
fidivrl
and
sub
test
inc
leave
jne
adc
mov
aas
jecxz
push
push
popf
or
or
xor
push
mov
arpl
mov
call
push
push
inc
aaa
sbb
in
les
fidivrs
cmpsl
and
jmp
adc
sub
sar
inc
cmp
inc
mov
icebp
lret
ret
insb
nop
cmp
sub
roll
sbb
adc
xchg
inc
jne
mov
pusha
jp
jle
sub
adc
xchg
push
jg
mov
or
mov
fsubrp
add
test
imul
push
shrb
pop
mov
cs
mov
sub
mov
sub
xchg
insb
push
ss
outsl
xor
cmp
push
jge
popa
out
pop
add
bt
add
jecxz
push
and
in
neg
cmpsb
loop
pop
xlat
pop
push
or
xchg
in
xor
aam
sub
ret
xchg
stc
rorb
imul
mov
ds
jo
jl
bound
test
in
jns
sbb
std
nop
fisttpl
sbb
mov
fwait
mov
js
jecxz
add
and
fwait
mov
fwait
mov
cmp
or
mov
mov
shl
mov
push
mov
pop
je
jne
mov
push
out
pop
mov
lods
movsl
sub
mov
add
cmp
mov
ss
or
inc
repnz
fwait
iret
xchg
dec
pop
or
pop
dec
rorl
fcomps
imul
jae
sahf
push
pusha
es
sbb
add
leave
cmp
icebp
das
movsl
sub
lods
add
mov
in
xor
sbbl
add
sbb
mov
or
mov
mov
je
fadds
lods
lret
aad
cmc
call
sbb
sbb
mov
xor
mov
push
push
mov
adc
in
es
jnp
pop
arpl
call
dec
stc
lcall
out
leave
aad
adc
flds
std
lds
daa
pop
push
test
adc
ja
inc
pop
adc
add
jns
cmp
outsl
aaa
inc
rcrl
or
repz
dec
pushf
mov
pop
dec
pop
movsl
pop
gs
cmpsl
pop
pop
jp
mov
sbbb
push
cmp
loope
xor
mov
xchg
repz
test
dec
roll
mov
jne
scas
hlt
aam
push
gs
cmc
lret
je
shll
cmp
sbb
shl
fldenv
lds
outsb
xchg
dec
mov
jge
dec
inc
scas
daa
mov
sbb
mov
jl
adc
or
ljmp
mov
mov
sahf
inc
loope
in
out
push
sub
sbb
sbb
pop
ret
cmpsl
cmp
insb
notb
dec
inc
xor
cmp
mov
mov
xchg
rclb
sbb
sti
shr
xchg
sti
and
idivl
pop
dec
adcl
sahf
fistpll
sbb
dec
rorl
inc
popf
testb
addr16
cli
nop
mov
pop
bound
push
cmpsb
jno
jno
xchg
mov
xor
jb
test
add
nop
sbb
arpl
lods
cmpsb
gs
out
xchg
in
mov
bnd
xchg
mov
test
pop
es
sbb
xor
or
stos
mov
loopne
sti
out
test
imul
clc
or
lds
cmp
outsl
fsubrs
loopne
push
xchg
cltd
addr16
sbb
jl
dec
sbbb
or
sbb
jle
test
orb
and
lods
mov
push
mov
xorl
add
inc
mov
jbe
stos
add
mov
jb
stos
jecxz
sbbl
rolb
loope
inc
lods
int3
push
jge
into
addr16
xor
cmpb
sub
xlat
lods
cmp
mov
adc
sti
inc
sti
cld
daa
inc
lret
jl
cmp
sbbl
jg
sub
les
cmp
call
mov
mov
sub
add
sahf
ficomps
fdivs
add
jmp
mov
insl
pusha
repnz
jge
pop
inc
pop
lahf
pop
add
aaa
or
xor
addl
std
rcrl
cmp
jb
js
mov
test
lret
aad
mov
sub
inc
insb
shl
mov
lret
stc
pop
jge
and
fadd
add
mov
mov
cs
mov
cmpsl
ror
mov
fbld
sarl
ror
out
ror
fimull
jg
inc
adc
push
int3
inc
sbb
lods
xorl
mov
xchg
cli
sub
inc
test
push
mov
andb
xchg
loop
out
loop
lcall
sbb
sub
push
sub
fwait
mov
xchg
cmp
in
das
xchg
jbe
or
xchg
lock
xor
les
test
cs
ret
aaa
dec
and
add
mov
adc
dec
push
fs
adc
sbb
test
inc
movsb
fcmovnb
testl
test
xor
mov
jl
push
shl
js
dec
das
push
hlt
xor
fidivl
jb
mov
or
and
je
outsb
xor
inc
sbb
jnp
pop
dec
add
clc
and
es
jae
cmpsb
cs
lods
pop
neg
inc
int
into
jo
daa
jecxz
cwtl
in
mov
ficompl
sti
mov
fnsave
bound
orb
mov
ret
dec
popa
pusha
outsl
pop
push
je
push
mov
sarl
push
vshufps
icebp
pop
jecxz
lret
hlt
lods
pop
repnz
loop
sbb
aad
sub
sbb
or
push
inc
push
lds
leave
ret
leave
mov
adc
fwait
insl
ss
fidivs
lret
or
sub
lahf
add
repz
das
mov
xabort
push
fbld
push
test
sub
insl
out
sahf
test
lret
push
and
and
xchg
add
or
into
fstps
inc
jnp
lods
movsb
rclb
out
in
xchg
jecxz
add
nop
cltd
inc
enter
sub
loop
nop
cmc
iret
test
adc
dec
xchg
dec
shrb
mov
jb
stc
add
sbb
movsl
arpl
out
cmpsb
insl
jns
js
fbld
push
mov
adc
dec
mov
push
shrb
xchg
jge
loope
mov
adc
mov
mov
popf
mov
je
inc
arpl
fwait
mov
and
cmp
call
test
xchg
jnp
scas
jno
or
pop
scas
dec
leave
inc
inc
addl
xor
out
pop
jmp
repz
out
fdivs
jnp
int
cmp
es
xchg
jno
stc
lret
pop
out
pop
popa
mov
scas
aad
and
or
cmp
aam
cmp
push
int
lea
jnp
scas
dec
mov
fsts
or
lcall
data16
cmpsl
testb
int3
or
inc
and
std
imul
sub
inc
pop
pushf
or
inc
and
fisubrs
aas
inc
mov
icebp
repz
repnz
inc
xchg
pop
cli
in
bsf
lcall
data16
outsb
call
aam
fsubl
sbb
pop
xor
insb
aam
xor
jg
addr16
in
jb
cmc
icebp
xchg
imul
xchg
rorl
mov
mov
sti
cwtl
mov
lcall
je
mov
push
mov
cwtl
and
cmp
jge
jne
xchg
jl
les
jge
mov
xchg
jnp
mov
push
push
shll
sarb
or
sbb
fldlg2
mov
jge
pusha
sub
test
jmp
push
nop
jp
xchg
pop
ret
dec
pop
add
clc
popa
aaa
add
add
or
jp
jne
xchg
rol
cmp
pop
jae
fs
std
push
cwtl
push
and
std
sbb
ja
sahf
leave
jmp
jg
mov
pop
jo
mov
ret
outsb
inc
insb
xchg
jno
xchg
mov
cltd
mov
outsb
fsub
or
sarb
shrb
ljmp
push
inc
test
or
test
scas
xlat
push
pop
mov
jl
in
add
ror
in
mov
mov
stc
xchg
pop
inc
push
std
push
push
insl
adc
sti
fsubr
jns
add
orb
mov
jle
adc
sbb
pushf
and
lods
mov
jecxz
nop
out
test
xchg
push
or
je
scas
out
inc
jns
roll
test
daa
lret
rorb
inc
push
les
test
loopne
scas
cli
movsb
xchg
xor
mov
mov
sub
popa
or
cmpsl
lret
lods
or
lret
shll
subb
inc
inc
cmpsl
ret
test
orl
sbb
push
xlat
into
sub
and
mov
lock
fwait
outsb
jmp
insl
mov
rcl
std
cmp
pop
sti
test
test
inc
lcall
mov
and
into
cltd
mov
jmp
ret
fiadds
cmpb
or
lahf
adc
or
sti
lret
or
std
fwait
xorb
cmc
es
mov
inc
dec
inc
sahf
adc
stos
jecxz
sub
aaa
xchg
fcomps
scas
xlat
test
clc
mov
pop
jp
stos
loope
inc
sbb
adc
xor
hlt
inc
lret
dec
sahf
sahf
adc
sbb
push
and
je
cmp
call
adc
xorb
aaa
sbb
cld
adc
push
push
arpl
pushf
sbb
sub
jb
dec
ret
xor
and
lret
lahf
pop
mov
addr16
cmp
arpl
mov
cwtl
fsubrs
mov
fstpl
lret
ret
das
aas
imul
mov
inc
test
push
imulb
mov
mov
xor
ror
iret
lods
mov
mov
std
rcll
fsubrl
mov
push
xchg
inc
pop
fmull
jge
push
jp
clc
imul
mov
mov
cld
push
sbbl
aam
fisubrl
popl
and
mov
out
xchg
lds
lods
nop
dec
xchg
cmpsb
call
cld
push
lcall
sub
cmp
sub
and
push
pusha
push
xor
dec
push
and
mov
xchg
push
xchg
adc
rorb
push
pushf
xchg
and
stos
scas
orl
ja
xchg
jecxz
idivb
pop
fwait
call
inc
jg
sbb
addl
and
jmp
inc
sub
cs
lret
jnp
js
mov
sarb
stos
and
fisubrl
mov
les
loopne
xchg
jo
imul
xchg
insb
psubw
dec
js
add
sbb
mov
addl
or
push
dec
dec
pushf
sbb
push
mov
mov
adc
sub
push
roll
dec
into
pop
dec
out
or
sub
sbb
cld
mov
jne
pop
mov
sbb
aad
push
popf
addb
test
loope
fldt
adc
sbb
pop
loope
mov
test
xchg
divl
lahf
xorl
scas
insl
dec
and
int3
and
dec
lds
xchg
pop
ds
pushf
sub
xchg
mov
mov
push
shrb
pop
sub
aas
pusha
scas
sti
je
cmpsl
es
push
insl
or
push
xor
sbb
test
jmp
ja
jp
cmpsl
cmpxchg
xchg
ljmp
stc
cmp
sub
or
movsb
sti
jne
movsb
jmp
int
fstps
test
sub
iret
jp
push
add
pop
xor
popf
push
xchg
and
ret
mov
adc
popf
and
add
xchg
clc
inc
test
repz
mov
jb
inc
out
jae
movl
adc
cmp
mov
std
in
ret
popf
xor
or
sub
jns
adc
jmp
pop
jae
mov
out
cmc
cmp
push
xchg
xor
mov
lret
xor
sub
mov
add
lock
jp
inc
call
fnsave
leave
cmovns
fistl
popf
xlat
mov
mov
pop
or
sbb
es
int3
jno
sbb
sbb
fcompl
xchg
sub
push
sahf
and
cmpsl
data16
lahf
out
xchg
addl
push
mov
and
or
ss
inc
lahf
xor
icebp
or
fadd
mov
fldenv
xchg
insb
push
fwait
jae
stos
mov
and
xor
subb
and
dec
movsl
jae
and
dec
shll
jbe
push
pop
jo
pop
icebp
sub
inc
push
push
and
mov
mov
mov
out
push
xor
cvtpi2ps
xchg
mov
aaa
pushf
dec
jne
sub
out
adc
xor
sbb
call
lcall
mov
out
inc
push
mov
inc
pop
repz
dec
push
fmull
or
pop
fisubrl
js
loop
sti
test
sbb
jl
shll
mov
and
ss
out
std
inc
jbe
imul
xchg
xor
xchg
inc
mov
adc
jnp
sbb
xchg
add
lock
pop
pop
insl
mov
cltd
jge
cltd
daa
push
sbb
stos
jns
aas
jnp
jmp
mov
cmp
punpckhwd
jg
mov
cmp
dec
or
imul
neg
pop
mov
lahf
int3
cwtl
push
fmuls
add
jbe
cli
dec
loopne
data16
loope,pt
test
jno
xor
jne
pop
cmpb
jne
dec
sbb
lahf
ret
xor
mov
imul
jle
mov
movsl
mov
mov
out
stc
mov
mov
in
add
test
in
push
adc
ds
test
es
cmpsl
or
mov
mov
push
jnp
lds
push
mov
or
add
push
xor
inc
icebp
jecxz
scas
insl
jbe
adc
rorl
repnz
out
nop
daa
int
inc
mov
pop
or
enter
test
or
gs
in
faddl
imul
pop
lds
andb
clc
cmp
jnp
cmpsb
insl
test
les
roll
and
dec
aaa
sbb
fisubrs
add
fdivr
decl
ret
push
hlt
push
lret
push
or
shrb
aam
movsb
pushf
dec
cmp
es
ret
mov
clc
ljmp
in
in
jnp
movsb
sub
rcrl
mov
push
std
sbb
sbb
andb
movsl
mov
fwait
jns
scas
in
fnstcw
jns
repnz
in
xorb
sbb
das
or
and
pop
inc
jb
sub
pusha
incb
xor
mov
sti
shll
jno
fstp
add
lods
xchg
and
ja
js
mov
pop
pop
inc
mov
cmp
test
mov
ffreep
scas
push
adc
mov
outsb
xchg
add
scas
pop
push
sahf
lret
push
xor
rorl
hlt
inc
popf
push
add
dec
mov
sub
pop
lods
push
mov
jg
push
sbb
mov
js
ljmp
jecxz
inc
cmp
jae
inc
popf
jp
loope
daa
cmc
shrb
sbb
in
mov
jp
cmp
ret
pop
aam
inc
xor
mov
or
cmp
or
mov
andl
iret
or
imul
mov
pop
pop
icebp
into
xor
loope
add
push
pop
xor
mov
pusha
das
int3
cs
or
pop
and
cltd
loop
fnstcw
aam
sub
push
dec
pop
pop
jnp
push
and
inc
in
rolb
sahf
lods
mov
aam
sbb
dec
push
ret
negb
sbb
sti
push
scas
cs
mov
das
dec
pop
jbe
sbb
pop
aam
movsl
mov
ret
frstor
fcmovb
in
es
enter
aad
out
xchg
test
mov
fwait
and
xlat
rcrb
icebp
xchg
mov
cmp
inc
adc
mov
lods
shll
insl
mov
adcb
aaa
mov
xchg
add
mov
lods
roll
add
jnp
icebp
inc
fimull
sbb
bound
jne
mov
xor
and
fistps
push
fistpl
sub
cmpsb
cmpsl
mov
lcall
mov
hlt
push
addl
lret
cwtl
cwtl
push
jae
arpl
gs
aaa
sahf
mov
testb
inc
jo
pop
inc
adc
repnz
sub
ret
mov
leave
pop
or
fdivrl
arpl
stc
rorb
addr16
das
xor
les
mov
adc
in
add
adc
cwtl
and
jg
inc
mov
jbe
cld
jno
bound
and
popa
or
mov
xchg
xchg
pop
lea
cmp
xor
aad
and
scas
inc
aad
lret
sahf
mov
mov
mov
mov
push
mov
xor
scas
lods
or
cmp
std
dec
jae
adc
add
sbb
sbb
mov
jge
inc
dec
and
inc
bound
stc
cmp
jb
cltd
loope
jle
pop
xchg
adc
lahf
jp
dec
lea
sub
push
repz
mov
and
js
jno
out
xchg
pop
je
inc
mov
lret
inc
out
xchg
loopne
mov
add
sarb
and
outsl
cmc
and
mov
dec
ret
jmp
push
cld
jg
test
pusha
outsl
les
mov
pusha
ja
ja
cmp
pop
fisubl
movl
insb
dec
test
xchg
lret
in
ja
xor
adc
push
dec
lea
lcall
ja
dec
xchg
push
lahf
jno
fistpl
mov
pop
pop
fdivrl
adc
jnp
sti
jae
sbb
push
add
xor
cwtl
pusha
jp
sbb
sbb
and
stos
hlt
push
xchg
or
push
and
sub
mov
adc
sahf
in
push
pushf
jae
sub
das
jl
adc
cmp
pop
lret
leave
repnz
mov
std
inc
mov
mov
xchg
push
mov
mov
jmp
push
jp
fwait
pop
fst
xchg
push
in
mov
popa
mov
inc
enter
sahf
add
cs
ja
fsubrl
call
negl
mov
jmp
mov
outsl
or
inc
push
push
imul
mov
and
test
add
dec
mov
pop
jb
adc
out
mov
cmc
ret
pop
sbb
pop
mov
outsb
in
in
fistpl
xor
repz
sbb
and
sahf
sti
cwtl
mov
pop
xor
ret
int
mov
lcall
cmc
xor
push
ja
popl
inc
ljmp
and
mov
cli
jge
mov
and
or
jmp
xchg
mov
lock
bound
and
xchg
mov
xorl
mov
mov
xor
jae
xlat
add
lret
cli
dec
test
xchg
mov
insl
fstp
fs
pop
cld
mov
jno
jb
mov
inc
fdivrs
xchg
jb
mov
repnz
int3
mov
sub
ja
adc
in
mov
cs
inc
inc
aas
push
mov
adc
dec
inc
lods
cmp
inc
xchg
sbb
mov
imul
leave
fnstenv
push
imul
jecxz
imul
dec
xchg
jns
sbb
pusha
rcll
test
cs
xchg
dec
sbb
notb
nop
cld
xchg
icebp
mov
jb
cltd
sub
test
push
shl
push
xchg
ret
out
repz
jo
adc
jo
in
dec
shll
adc
cmp
dec
mov
or
movsb
in
lret
or
lods
and
jne
push
shll
xchg
cmp
xor
leave
mov
ficomps
insb
movsb
aas
jno
clc
xlat
jb
or
xchg
push
fidivrs
in
sub
xchg
test
jle
enter
pop
dec
sysenter
mov
in
and
std
mov
xchg
das
pop
lods
jmp
gs
and
or
mov
ds
fildll
inc
lret
adc
movsl
loope
aad
xchg
cltd
arpl
leave
cmp
sti
dec
and
aam
mov
fidivrs
xor
pop
arpl
pop
mov
push
jge
ret
into
iret
xchg
add
push
push
jg
cmp
sbb
xchg
cmp
cmp
mull
movsl
lret
xchg
dec
inc
cmp
jg
andb
dec
aaa
inc
cmpl
add
jno
aas
test
loopne
jle
dec
jecxz
push
fincstp
dec
inc
test
fs
or
rol
les
lahf
lahf
es
push
shlb
in
cld
ja
lods
fiadds
test
inc
mov
ret
scas
enter
mov
out
cmp
cmp
xlat
movsb
imul
pusha
push
mov
hlt
mov
adc
fucomp
push
lret
repz
call
lahf
sub
rolb
mov
cli
mov
pop
xchg
sti
or
mov
insl
outsl
mov
fwait
cmpsl
xchg
add
adc
sub
inc
in
repnz
xchg
mov
aad
fmul
push
scas
rclb
cmp
mov
pop
pop
movl
mov
pop
jg
dec
pop
and
int3
iret
sub
or
push
insb
mov
insb
inc
gs
mov
sbb
mov
frstor
add
push
sub
sbb
jnp
sahf
xchg
stos
call
inc
fstl
das
stos
push
sub
push
in
lret
and
cmc
add
and
jnp
pusha
mov
pop
pop
or
repz
add
jle
dec
mov
jns
sbb
movb
xlat
ja
orl
mov
ret
push
xchg
data16
add
sub
xchg
pop
mov
sahf
xchg
fadds
add
sbb
and
cmpb
outsl
pop
or
add
insl
cmp
dec
dec
sub
pop
add
cmp
lea
ja
push
mov
cmpsb
sti
into
ja
repz
addr16
push
inc
sub
call
lock
xchg
inc
pop
popf
cwtl
mov
pop
aad
aad
test
cmove
orb
lea
jge
pop
jne
das
sti
mov
xor
mov
fcmovne
aam
xor
or
lahf
push
add
jg
inc
movb
aas
popf
jge
sbb
sbb
cmp
out
int3
cmpsb
xor
inc
mov
dec
push
xchg
push
cmp
push
xor
or
jnp
es
sbb
jno
lcall
fistl
pop
cmpsl
mov
lea
sub
lock
adc
sub
push
dec
rcr
pop
xchg
pop
mov
les
mov
mov
stos
gs
mov
xor
xlat
xchg
shr
fadds
add
or
mov
adc
adc
mov
es
jne
sub
pop
xchg
lea
cmp
mov
dec
nop
or
xchg
mov
xor
jae
scas
call
rorb
repnz
lds
or
pop
xor
inc
cmp
cwtl
lea
js
mov
gs
inc
dec
inc
mov
mov
sbb
pusha
push
jns,pn
add
xor
mov
bound
out
lods
push
inc
iret
fcoms
pop
outsb
cmp
adc
adc
clc
arpl
push
mov
imul
aas
inc
lods
xor
and
lods
mov
aad
andb
iret
push
lret
fistl
dec
popf
lret
mov
and
push
test
loopne
mov
push
push
std
sahf
add
lea
test
add
shlb
mov
aaa
fldt
add
mov
pop
add
add
jl
xchg
mov
xchg
int
sbb
rclb
into
mov
hlt
rclb
push
pop
fwait
imul
xchg
cmp
mov
mov
into
cmp
call
sarb
movsb
mov
sub
pusha
mov
int
mov
dec
add
pop
push
cmpsl
icebp
push
inc
cmp
aam
jnp
jl
jne
out
dec
sbb
sub
mov
aaa
xlat
sub
push
push
insb
xor
mov
pop
pop
inc
stos
or
insb
out
mov
mov
add
mov
cld
mov
icebp
mov
mov
dec
mov
xor
mov
mov
sub
test
jecxz
and
mov
aam
addb
pop
mov
jmp
fldln2
data16
daa
and
data16
push
test
rorb
test
test
add
or
push
and
shlb
lcall
push
das
lcall
xor
mov
mov
xchg
andl
xchg
mov
add
jge
insl
mov
add
outsb
inc
movsb
push
loopne
ljmp
inc
or
and
mov
ret
and
int3
jno
cmp
aad
jge
mov
ucomiss
shll
daa
jns
mov
into
cmp
push
or
jo
movsl
subb
fmul
js
stos
adc
enter
jnp
out
insl
jno
lods
cwtl
in
in
pop
andl
xchg
sbb
mov
js
inc
aas
aam
xchg
xor
or
mov
fwait
lcall
push
add
stos
add
aad
cmc
adc
pop
insb
into
clc
loop
popf
gs
movb
sub
dec
push
xchg
sub
jmp
push
jne
fdivr
mov
ljmp
popa
push
push
iret
out
adc
push
sti
mov
int3
inc
jbe
inc
dec
mov
dec
cmpsl
mov
movsb
xchg
cmpsb
jo
sahf
pop
outsb
mov
inc
push
dec
inc
and
inc
mov
mov
dec
xor
xchg
into
mov
and
dec
cmp
adc
push
jmp
jmp
adc
xor
stos
das
mov
ret
imulb
lcall
mov
test
nop
mov
adc
jb
sbb
cltd
xchg
in
mov
xchg
xor
lods
jp
cmp
call
loop
adc
jl
xchg
and
and
imul
jno
pop
cmpsb
push
imulb
es
mov
pop
add
inc
cmp
mov
lds
and
cmp
lret
enter
cmc
sbbb
loope
push
hlt
mov
stos
aam
jg
jne
dec
lock
or
sbbb
push
sub
fwait
mov
sahf
or
or
cld
dec
int3
push
cmp
cmpsl
cmp
pop
pop
sbb
or
stos
adc
hlt
rcrl
jno
sarb
push
cmpsw
ror
call
rcl
out
cmp
push
mov
int3
mov
out
in
xor
add
adc
int3
xor
jp
ret
xor
sbb
rorl
and
sbb
out
mov
mov
dec
icebp
aas
xchg
mov
mov
pop
mov
in
pop
and
pop
mov
adc
popl
loope
fdivrs
lcall
lods
add
sub
ds
or
imul
ljmp
mov
or
mov
call
mov
ss
jmp
xor
in
xchg
daa
mov
mov
sbbb
adc
push
pop
mov
mov
jge
daa
xchg
xchg
sbbl
fadd
fdivp
loopne
xor
adc
jo
and
shrl
repnz
add
or
jns
clc
pop
inc
xor
jmp
adc
addb
xor
jae
push
insb
out
lea
int
cltd
imul
dec
sub
inc
in
sub
in
push
in
mov
ljmp
sub
jmp
popa
or
add
nop
mov
cmpsl
xchg
icebp
or
dec
adc
pop
mov
push
and
lods
jne
jns
cwtl
je
jae
pop
mov
and
xchg
ficoml
adc
icebp
es
pushf
sub
fisttpl
popf
push
lds
pop
mov
popa
daa
sub
xchg
push
rolb
lods
lret
rcl
jns
aaa
push
ret
sub
ljmp
scas
jno
fstl
xchg
cmp
addr16
cli
mov
sub
add
and
pop
push
popf
je
cmp
out
test
push
fmulp
mov
ret
xchg
fcomps
aas
adc
add
into
or
inc
aad
gs
and
jno
xor
or
jmp
enter
xchg
pop
insb
ficompl
ja
fcomip
loopne
ret
mov
rcrb
add
inc
push
mov
shlb
mov
cmp
dec
pop
jg
push
jecxz
jle
clc
pop
adc
xchg
test
xchg
int
je
mov
xor
je
push
push
cmpsl
jnp
mov
sub
aaa
ja
cmp
xor
adc
mov
fists
mov
mov
xchg
test
mov
push
sbb
pop
jno
shlb
xorb
dec
repnz
and
sub
sbb
out
repnz
push
call
outsb
pusha
or
jmp
movntps
sahf
mov
fstpl
lret
test
or
pop
mov
mov
leave
sub
js
rclb
in
and
sbb
add
ds
cmp
dec
sub
sbb
jo
aas
sub
jge
lret
pop
lret
movsl
enter
aam
jae
fldl
or
aaa
or
es
or
xchg
loope
dec
cmp
loopne
shlb
cmp
idiv
inc
mov
fwait
mov
scas
lea
pop
or
xor
xchg
sub
and
arpl
sub
repz
loopne
dec
cmp
loopne
negb
cmp
jns
mov
cltd
xchg
jns
in
pusha
test
fdivrs
mov
mov
dec
std
xor
mov
pop
stos
leave
xor
out
xor
jnp
push
cmpsl
sti
pop
push
sti
cs
adc
aaa
inc
pop
dec
mov
xchg
sbb
add
ret
push
aad
popf
cmp
pop
ljmp
or
jp
jno
jmp
mov
ret
stc
out
pop
les
pop
mov
xchg
test
in
xchg
hlt
mov
cltd
adc
loop
imul
jo
or
push
outsl
push
in
or
xor
sbbl
imul
xchg
xor
cld
sbb
jnp
rolb
addr16
add
cmpsl
stc
pop
jmp
xlat
mov
xchg
mov
mov
enter
test
jl
push
xchg
cwtl
mov
test
sub
data16
mov
ret
hlt
outsb
std
mov
pusha
js
ficoms
lret
adc
pop
cmpsl
pop
jg
and
movsl
and
outsb
pop
sub
aaa
cmpsl
jl
mov
push
ja
inc
push
je
and
int3
push
movsl
mov
lods
hlt
das
js
fmull
or
jns
mov
arpl
mov
cmpsl
sbb
dec
push
sbb
sti
jb
jecxz
add
stos
imulb
pop
adc
in
xchg
cs
cmp
cmc
lret
mov
inc
lock
dec
in
sub
fs
xchg
sub
fstpt
iret
lods
ds
rol
imul
lret
mov
cmp
sub
test
out
pop
cmp
inc
sub
movsb
fnstsw
repnz
jge
out
mov
inc
add
mov
jb
and
jo
fidivl
cmpb
ret
dec
daa
lcall
and
iret
mov
adc
xor
aam
xor
divl
imulb
loope
push
or
push
insl
icebp
xchg
scas
jl
mov
ret
scas
dec
loope
leave
lcall
popf
getsec
xor
xor
bound
jecxz
mov
xchg
mov
mov
js
pushf
push
enter
mov
movsl
pslld
dec
popa
inc
jb
in
sub
xor
xor
and
test
cmp
add
shl
and
push
mov
or
fnstcw
push
outsl
sbb
rolb
je
mov
pop
popf
aad
add
aad
ror
push
fisttpl
hlt
xchg
rcrb
test
inc
aam
add
ret
sbb
adc
inc
cld
addl
jb
xchg
cmpsl
and
push
mov
jge
into
mov
jo
adc
je
xor
pushf
gs
pop
mov
test
push
popf
test
dec
test
xchg
adc
cmpsb
fwait
pop
sub
cmp
pop
insb
mov
aaa
push
adc
sub
xchg
fdiv
in
add
xor
sbb
iret
fidivl
fmull
cld
mov
and
test
push
jnp
les
leave
mov
cmpsb
push
faddl
mov
dec
and
aad
fcmovu
xlat
out
mov
into
insl
mov
and
cli
fidivs
xor
shr
cmpsl
mov
or
mov
sub
pop
sbb
or
cmp
fadd
jle
dec
repz
mov
imul
test
xor
dec
mov
adc
and
out
cmp
and
pop
dec
gs
sti
sbb
adc
mov
push
adc
dec
xor
and
pop
push
imul
jle
mov
add
cmp
mov
jmp
add
inc
adc
push
mov
pop
mov
in
jb
cmovne
xchg
movsb
and
xor
mov
mov
add
mov
mov
inc
mov
sbb
cmp
out
xchg
mov
push
inc
xor
pop
popl
jge
inc
dec
das
inc
add
lods
mov
adc
int
jp
jne
sub
jg
ret
cmp
hlt
shlb
out
mov
sahf
mov
xor
je
jb
in
out
popf
fldenv
cmp
pop
mov
xor
insl
ds
stc
std
hlt
mov
xor
jbe
leave
in
in
test
pop
add
lcall
cmp
cmpsl
adc
rcl
cmpsb
test
je
dec
insl
mov
ret
jnp
out
push
in
ja
mov
call
pop
adc
xchg
test
fistpll
sahf
cmp
outsl
das
cmp
nop
and
aaa
jmp
test
pop
lcall
push
sbb
mov
notb
shl
push
mov
repz
imul
mov
sbb
fisttps
std
mov
mov
pop
sahf
cwtl
bound
mov
popf
inc
loope
int3
ret
cmpsb
dec
outsl
sbb
sub
jno
mov
and
mov
pop
xchg
mov
fmull
pop
aaa
imul
mov
sub
and
test
sbb
xor
push
jp
mov
cmp
jbe
jg
inc
mov
mov
mov
cli
ret
dec
and
adc
outsl
inc
enter
adc
jmp
mov
fdivr
mov
push
jg
sbb
pop
testl
pop
push
dec
cs
inc
out
scas
xchg
and
movsl
mov
sahf
dec
jbe
mov
sti
mov
xchg
cmp
popa
sub
xchg
mov
cmp
sbb
xchg
add
xor
push
or
add
lods
and
gs
pop
xor
test
or
add
scas
fcom
lahf
lods
movsb
cmp
mov
repz
fiaddl
in
imul
mov
pushf
sbb
cld
mov
sbb
out
lcall
cmp
nop
scas
xchg
dec
loope
idivb
mov
mulb
mov
leave
mov
inc
pop
sbb
fs
shll
or
and
not
push
dec
cmp
xor
test
movsb
scas
push
sbb
nop
outsb
je
jle
pop
stc
adc
aas
or
clc
bound
pushf
out
mov
loope
xor
pop
xor
adc
inc
mov
mov
sahf
adc
stc
dec
sub
int
cmp
outsb
movsl
xchg
cmpsb
lret
leave
and
fs
leave
dec
xchg
and
jns
xor
inc
test
inc
mov
cmp
fistpl
scas
push
pushf
mov
xlat
gs
and
nop
sti
pop
xor
es
jmp
daa
mov
jnp
jmp
pop
jo
pop
movsb
pushf
mov
imul
aas
and
aaa
mov
pop
xor
out
inc
lret
rcr
lock
jp
cmp
lea
mov
inc
pusha
dec
sub
sti
add
pushl
bound
ljmp
mov
inc
and
or
nop
lcall
or
mov
mov
jl
fmuls
incl
rcrb
jle
or
push
or
fcomip
jns
adcb
ficompl
xchg
push
sahf
rorb
mov
mov
jle
in
push
inc
jne
mov
and
arpl
out
popf
xlat
ss
dec
sub
imul
aaa
les
aas
xchg
les
push
jae
filds
xor
and
int3
cmp
or
mov
xchg
push
push
jl
out
cmc
lahf
pushf
xchg
push
int
adc
jne
push
inc
mov
mov
mov
push
mov
mov
insb
and
adc
jp
fbstp
enter
jb
shlb
xor
into
pop
sbb
push
lret
aam
add
dec
jae
hlt
pop
loopne
jno
lods
jb
stc
push
add
mov
shrb
push
jo
mov
jecxz
lods
scas
stos
pop
loopne
inc
push
fs
adc
jl
push
movsb
outsb
push
cltd
jbe
scas
mov
xor
cmp
mov
mov
adc
push
mov
mov
fldln2
inc
xchg
fisubs
daa
stos
cs
jecxz
dec
pop
pop
cmp
test
movsl
arpl
bound
adc
int3
inc
cmp
inc
sub
loop
mov
pop
xor
cmp
pushf
pminub
sbb
das
xlat
daa
icebp
popf
sub
stc
test
mov
jl
test
inc
cmpsl
add
loop
mov
mov
fcmovnbe
jae
dec
add
push
push
jno
mov
subb
lcall
cs
lea
add
enter
aaa
mov
push
sub
cmpsl
cmp
bound
add
pushf
add
mov
stos
xchg
mov
sbb
mov
lret
fwait
inc
leave
iret
mov
jno
sbb
call
pusha
adc
add
cmpsb
mov
xchg
cmpsl
shll
add
out
in
or
mov
rorb
or
mov
insb
pushf
out
push
and
std
nop
sahf
mov
mov
adc
xor
mov
sbb
out
lret
jg
test
lahf
xor
int
stos
push
pop
add
add
fcomps
pop
mov
inc
test
ret
cmp
cmpsl
std
imul
cltd
loope
rcrb
dec
nop
xor
fs
pop
xor
dec
sub
xor
add
sbb
insl
xor
cltd
call
sbb
cmp
add
orl
out
mov
rcll
rcrl
into
fisttps
imul
jnp
and
inc
iret
push
push
dec
das
push
es
movsb
gs
stc
cld
sub
addr16
rol
and
jae
mov
std
mov
inc
mov
cwtl
jno
mov
je
faddl
aas
pop
or
lcall
cmp
ss
dec
xor
loopne
cli
mov
out
mov
movsl
adcb
out
idivb
fwait
sub
ficoml
clc
xchg
sbbb
rorl
jp
push
inc
cmp
xor
sub
mov
cmpsb
shrb
pop
mov
shll
inc
or
jl
sbb
cmp
mov
jns
sbb
dec
dec
sbb
mov
mov
mov
fisttpll
loope
lds
sub
or
shrb
pop
mov
mov
push
pop
stos
jb
gs
adc
lds
mul
jo
dec
hlt
jg
xor
jnp
loope
xor
jl
out
ja
xchg
bound
or
push
or
mov
push
jo
cmp
xchg
outsb
insb
sub
andb
add
jb
nop
jno
adc
fimuls
xchg
movsl
std
lods
dec
gs
ja
cmpsb
xchg
pop
jae
jge
outsb
sbb
and
xchg
les
adc
mov
fistpl
fnstcw
stos
stos
pusha
pop
xchg
lds
lret
loopne
stos
mov
dec
push
jecxz
sbb
fdivrl
jbe
fldt
dec
pop
sbb
or
mov
sbb
cmp
cmp
lods
pop
iret
rcrl
jbe
int3
arpl
xchg
or
daa
pop
lcall
xchg
and
std
fldl
dec
push
loope
cmp
hlt
xor
add
or
insl
mov
pusha
xor
cmp
fcomi
pop
inc
push
pop
xor
out
mov
inc
xor
dec
cld
jle
in
jl
xchg
fisubrs
into
outsb
pop
lea
hlt
or
ss
xor
or
inc
dec
ficompl
xor
and
or
or
les
xchg
sbb
cwtl
add
xchg
sbb
dec
mov
inc
fdivs
ret
jbe
push
cmp
pop
cmp
lret
jge
sbb
ja
xlat
xchg
rcr
inc
xor
rcl
xor
push
shl
push
data16
push
out
jp
test
call
mov
hlt
sbb
and
pop
gs
lret
stos
and
aad
jge
clc
clc
lods
cmp
fdivl
inc
jl,pt
pop
xchg
add
mov
jl
repnz
jmp
xchg
xchg
out
fdivs
dec
mov
adc
rorb
fwait
mov
or
or
pop
jae
mov
cwtl
mov
in
negl
mov
roll
cmpsl
imulb
mov
push
flds
jns
clc
fsubrl
test
add
jmp
pop
adcb
xchg
aaa
addr16
cmpsb
inc
stos
pop
adc
fs
loop
popf
lea
pop
push
leave
xchg
inc
int3
push
and
inc
out
push
int3
shrl
jns
mov
mov
dec
test
cmp
cmp
repnz
call
out
mov
xor
cmpsl
orl
add
outsb
pop
jns
or
cmp
insb
test
loope
mov
scas
cmp
setnp
jecxz
dec
push
and
sub
adc
pop
and
lods
stos
or
or
push
movsb
mov
add
lods
shlb
insl
test
sub
jl
cwtl
sbb
scas
mov
push
push
lods
sbb
fs
movsb
je
bound
mov
cmpsl
adc
sbb
lock
pop
adc
push
cmp
mov
add
push
data16
sahf
mov
jge
pop
inc
pop
pop
pop
mov
shrb
push
ljmp
int
xchg
dec
mov
jp
xchg
mov
fwait
test
rcrl
sar
jge
mov
imul
loope
out
adc
scas
sub
add
daa
jbe
jg
movsb
push
pusha
push
mov
push
push
icebp
mov
jae
jae
mov
icebp
jb
sub
sbbb
sub
sub
push
lods
dec
xchg
inc
in
xchg
fidivrl
dec
pop
dec
push
std
enter
cmpsl
sub
push
std
dec
push
xchg
xlat
mov
outsb
dec
mov
or
sbb
mov
ds
cmp
mov
and
cwtl
popf
out
jb
jge
test
mov
jb
jnp
dec
outsb
arpl
jmp
cvtdq2ps
faddl
outsl
int3
jge
push
jge
push
sub
je
sub
sub
orl
adc
in
cli
adc
dec
nop
test
mov
stos
aad
xchg
dec
pop
sub
lahf
push
icebp
es
pop
xchg
sbb
xlat
bound
insb
std
outsl
fistps
mov
js
sbb
popa
cmpsl
sbb
scas
jmp
lods
out
cmp
sbb
push
pop
push
mov
dec
dec
add
pop
int3
loope
jb
and
cmpsb
add
lods
xor
cmp
pop
fsubrl
mov
stos
stos
and
shlb
mov
pop
mov
xchg
mov
or
inc
cmp
jl
test
cld
icebp
add
dec
imul
loop
dec
loopne
xor
sbb
mov
and
lea
outsb
adc
imull
pop
mov
push
repz
sub
movsb
xor
sub
cs
jl
sarb
mov
push
xchg
fstl
mov
inc
mov
push
mov
int3
dec
lcall
push
cmp
daa
xor
test
mov
mov
sbb
ss
sbb
lret
loop
fisttpll
pushf
loope
out
inc
push
and
je
mov
cli
mov
cmp
and
jnp
xlat
push
push
out
repnz
mov
mov
adc
sbb
test
mov
in
push
mov
sub
add
jge
cmp
inc
push
rorl
cmc
call
xor
jne
ret
add
sub
and
dec
iret
repnz
fwait
pop
pop
outsb
mov
sti
sti
xor
stos
cmp
in
or
jmp
aam
mov
insl
push
xor
dec
out
cmp
dec
outsb
add
insl
mov
out
out
repz
mov
cmp
cmovle
lds
jl
xor
push
sbb
mov
jb
mov
pop
mov
xchg
sub
enter
adc
ja
xchg
mov
popa
add
iret
in
jmp
dec
mov
inc
sub
mov
stos
lret
push
inc
mov
testl
dec
je
pop
ds
jge
push
or
push
mov
insl
cli
add
cmc
and
cmp
decl
dec
pop
dec
dec
mov
repnz
xlat
aam
xchg
push
addr16
xchg
push
insb
push
cmp
imul
int3
dec
inc
push
inc
push
and
xor
cltd
jne
sbb
adc
pop
enter
gs
sub
std
inc
add
pop
lea
ret
repz
sbb
fildl
loopne
xor
push
fldenv
sbb
push
and
or
das
push
cwtl
sub
mov
inc
lahf
adc
call
add
cmp
gs
dec
mov
inc
out
xor
pop
int3
cmp
xchg
mov
insb
lods
xor
das
dec
jnp
cmp
inc
mov
mov
and
testl
cmp
into
or
add
sub
pop
movsl
adc
mov
mov
cmpsb
push
popf
ja
cwtl
icebp
addr16
cld
test
cmp
inc
push
jo
jp
inc
jmp
cmp
fbstp
sbb
fdivrl
jo
aam
jmp
jne
dec
cmc
test
xor
mov
mov
out
inc
outsb
scas
mov
and
out
movsl
mov
mov
scas
push
lcall
push
mov
test
subb
pop
pop
add
dec
xchg
ja
dec
leave
xor
cmc
stos
xor
xor
imul
mov
mov
jp
cmp
in
dec
pop
int3
or
es
es
cmp
xor
insl
sbb
xchg
cwtl
ds
fdivp
jmp
je
outsl
jg
cltd
popa
dec
sbb
adc
push
mov
ffree
pop
call
cs
xor
mov
push
test
cmp
shll
lods
inc
add
pop
ja
dec
stos
popf
inc
mov
inc
inc
add
std
lods
into
ss
fwait
push
gs
sub
mov
adc
sub
mov
pop
xchg
inc
inc
in
adcb
mov
xchg
div
inc
jo
popa
mov
push
add
and
push
mov
dec
pop
push
aad
cwtl
push
or
outsl
int
test
sbb
mov
ret
or
data16
mov
mov
aad
test
and
mov
push
or
imul
sbb
push
in
add
xchg
xchg
push
cli
pop
shll
jae
fcmovnu
cmc
fidivrl
sarb
js
mov
aad
rol
out
cmpsl
mov
js
pop
dec
cmp
mov
mov
mov
ja
addb
sbb
jns
aas
jle
outsb
pop
loope
andb
jmp
rclb
push
cmp
mov
push
sbb
out
insl
push
out
jne
divb
insb
jo
add
aas
fdivrl
mov
push
push
push
or
push
xor
in
hlt
stos
int3
loop
adc
in
nop
dec
xchg
push
fnstenv
xchg
jns
dec
negl
mov
jns
fs
das
in
inc
inc
std
xor
and
xchg
lods
xor
lds
push
call
jle
mov
push
test
mov
pop
sub
sahf
enter
enter
lcall
dec
aas
sahf
mov
std
das
adc
push
cltd
into
int3
enter
sbb
push
in
stos
subb
pop
data16
inc
dec
jp
rclb
test
gs
jns
push
stc
dec
data16
push
outsl
jl
add
pop
je
mov
xchg
mov
mov
push
shlb
ret
xchg
xchg
clc
ljmp
lahf
jecxz
fnstenv
int3
push
cmp
aam
mov
xor
int3
push
add
mov
mov
or
pusha
scas
cmp
mov
stos
js
cmp
add
pcmpeqd
lea
ds
mov
cli
and
jl
xchg
jno
sbb
sub
movsb
clc
lods
mov
int3
jo
fwait
pushf
imul
adc
dec
mov
sbb
and
and
jne
inc
mov
push
and
push
mov
shll
jmp
jbe
jno
add
test
push
sti
fnstcw
xor
xchg
out
or
pushf
push
cmp
push
jae
ds
sub
inc
loop
jo
mov
cmp
add
dec
inc
pop
movsb
fisubs
pop
lahf
pop
sub
outsb
testb
bnd
out
das
ljmp
lret
pushf
icebp
xor
mov
in
and
adc
cmpl
pop
cmp
rclb
ja
cmpsl
mov
sbb
push
push
mov
pop
rcl
lahf
loope
push
push
inc
inc
or
ficoms
jne
push
imul
sbb
shlb
pop
add
ficompl
sbb
cmp
outsb
mov
lock
into
push
stc
daa
out
sbb
dec
data16
lahf
test
sub
test
xchg
int
addr16
pop
jp
stos
sub
test
imul
mov
sbb
push
mov
xor
xor
xchg
pop
or
out
outsl
add
xchg
sbb
push
sbb
adc
sbb
xchg
fdivrl
push
int
insb
sti
les
movsl
mov
maskmovq
notl
lret
dec
in
ficomps
xchg
insb
icebp
insb
std
imul
sub
cmp
add
pop
addr16
mov
mov
aam
jnp
mov
dec
fdivr
aas
enter
popf
xlat
aaa
cld
add
dec
std
call
sub
jne
insl
sub
test
dec
sti
scas
adc
xchg
sbb
jl
inc
les
in
hlt
das
pop
pop
incb
lret
testb
pop
push
dec
jo
mov
mov
push
mov
aaa
aaa
test
cmp
iret
push
repz
mov
leave
fcom
add
dec
sub
sbb
fdivrl
int3
pop
scas
loope
or
and
leave
aaa
mov
pop
pop
daa
xchg
and
lock
loop
push
xchg
xor
cmp
mov
jl,pt
sbb
out
ss
add
movsl
sbb
adc
and
gs
icebp
lods
pop
xchg
enter
mov
xor
sbb
cmpsl
mov
imul
mov
sub
loope
imul
lods
fstpl
lret
mov
outsl
clc
lcall
imul
mov
jl
int
repnz
and
andb
inc
jge
pop
and
inc
ds
dec
mov
mov
add
das
sbb
rcrb
mov
adc
out
pop
push
or
and
cmpsl
mov
cmp
arpl
jns
and
inc
add
lret
sbb
adc
mov
insb
xchg
hlt
stos
inc
mov
js
dec
dec
fidivl
stos
mov
sub
xlat
aaa
pop
jne
aas
fisttps
repnz
iret
sub
repz
push
ja
pop
mov
add
inc
or
dec
jp
xor
fs
movsb
aas
cltd
mov
pusha
jnp
pop
or
push
aas
jno
dec
ss
xchg
jp
dec
push
jne
xor
cld
nop
cld
push
mov
popf
in
test
and
mov
or
push
jp
test
inc
jge
cmp
mov
jne
out
leave
xor
pushf
mov
je
cld
ja
shrl
mov
into
dec
pop
xor
cld
pop
xchg
xchg
add
push
testl
ja
push
in
pusha
push
and
sbb
cld
movl
aas
dec
mov
adc
aaa
and
jmp
dec
add
iret
mov
mov
jle
mov
dec
lea
sbb
repnz
lret
or
mov
aas
or
out
inc
jno
subb
adc
fdivl
jb
pop
lret
xor
xor
inc
pop
std
clc
pop
mov
idivb
sbb
add
or
lahf
arpl
adc
ss
mov
xchg
xor
das
xchg
insl
inc
push
jge
xor
or
aaa
or
xchg
sbb
cwtl
push
and
dec
hlt
sbb
push
popf
icebp
shlb
js
push
add
mov
lcall
or
mov
mov
xor
pop
aas
jb
push
push
addb
or
mov
xor
adc
or
fwait
xor
dec
sub
lods
int3
leave
cmpsb
jl
mov
dec
and
dec
mov
test
xchg
fdivrl
loopne
mov
mov
fisttpll
pop
adc
pop
cmp
hlt
mov
xor
jmp
sub
dec
xor
mov
rolb
sbb
cmp
int
roll
add
jb
je
mov
jl
arpl
int
outsl
lret
loopne
xchg
scas
jp
outsl
sbb
leave
pop
loop
add
mov
jmp
lret
xchg
nop
divb
sbb
pop
sar
push
and
popa
sub
or
ljmp
les
push
sub
push
or
popf
mov
shll
test
out
or
iret
inc
adc
or
cmpsl
fisubrl
bound
xchg
jmp
cmp
push
rorb
in
add
sbb
test
and
lea
dec
xlat
xchg
pop
cltd
adc
bound
or
aaa
mov
dec
in
sub
cltd
and
in
xchg
or
mov
push
mov
mov
sub
push
stos
push
mov
clc
mov
dec
mov
clc
scas
inc
cltd
xor
lret
mov
pop
int
add
cwtl
dec
pop
lret
lods
inc
test
add
fld
sub
inc
fsubrs
mov
loopne
cmp
shrb
add
and
jbe
call
stc
pop
dec
ret
cwtl
xchg
movsl
dec
jne
cli
inc
inc
dec
andl
xchg
lret
idivl
js
lret
mov
test
mov
xor
push
sbb
sbb
sti
xor
inc
sub
sahf
insl
clc
push
popa
or
jae
push
or
and
push
xor
push
xlat
dec
ljmp
push
sub
push
dec
xchg
xchg
arpl
mov
xor
cwtl
dec
add
int
inc
mov
cmp
adc
xlat
fisttpll
add
xor
cmp
jmp
sbb
gs
cmpl
leave
cmp
lds
fiadds
lcall
das
lea
stos
cmc
ljmp
jae
pop
test
sahf
push
clc
ret
enter
test
and
test
std
pop
decb
xchg
les
lods
mov
orb
mov
or
cltd
lea
cld
fdivrl
push
push
clc
ja
movb
loop
sbb
stos
movsb
jno
sbb
punpckldq
nop
mov
rcrl
lods
into
mov
sub
iret
cmpsl
xchg
out
xchg
pusha
popf
xchg
test
hlt
inc
sub
jp
fwait
xor
cmp
sub
rcrl
les
pop
add
add
out
jo
inc
inc
mov
xchg
push
sahf
mov
xor
aas
jae
mov
pop
adc
movsb
sub
dec
subl
icebp
cmp
xchg
decb
push
xor
or
push
test
adc
sahf
mov
sbb
mov
adc
in
sbb
dec
push
jnp
mov
lods
lea
push
lods
aaa
js
je
pop
lahf
std
pop
jle
idivb
dec
popa
jns
fiadds
pop
mov
out
push
movsb
insb
loopne
mov
sbb
sbb
xchg
push
outsb
rorb
mov
adc
xor
bound
xchg
cmp
in
dec
adc
mov
in
add
cli
or
mov
xchg
cli
xchg
mov
mov
mov
push
mov
test
test
mov
add
inc
cmp
lock
mov
scas
push
fbstp
xlat
popf
ret
inc
lods
xchg
pop
es
sub
pop
out
das
lahf
arpl
cmp
in
sub
dec
push
xchg
mov
je
das
pop
mov
mov
mov
cmpsb
mov
push
hlt
pop
cwtl
out
data16
pop
add
icebp
jbe
repz
shll
outsb
add
fiadds
cs
mov
call
and
xor
xor
pop
cwtl
xchg
add
cli
xchg
adc
sub
jmp
loop
dec
jbe
test
or
and
je
push
loope
loop
mov
sub
mov
pop
jecxz
pop
or
xchg
push
inc
push
push
push
xchg
and
daa
imul
adc
popa
fcomp
ret
push
push
cltd
aas
xchg
cmc
jne
xchg
mov
dec
clc
ret
adc
inc
sub
pop
and
cwtl
ret
add
sub
or
pushf
xor
xor
jne
arpl
sbb
adc
mov
xor
lea
enter
adc
inc
lahf
or
rol
pop
pop
adc
dec
scas
paddusw
pop
inc
rol
xchg
aas
fsub
add
mov
std
adc
cmp
and
cmp
hlt
faddl
mov
mov
mov
add
dec
sti
dec
jmp
lds
in
add
mov
gs
mov
or
lods
jge
mov
ss
mov
xor
bound
nop
fldt
mov
popf
or
test
or
outsb
inc
or
sbb
push
fcoml
jp
xlat
shl
cmp
mov
cli
bound
gs
cltd
mov
test
jae
mov
pop
popf
dec
inc
andl
or
pusha
daa
out
adc
or
mov
loope
pop
cmp
data16
cmp
scas
pop
dec
xchg
mov
cwtl
xlat
push
fwait
rcll
cmp
imul
mov
adc
insb
cmpsl
dec
adc
inc
lds
push
ss
lds
cld
cmp
mov
pop
repz
jp
imul
pop
inc
rcrl
roll
mov
adc
popa
inc
jmp
sahf
mov
fsubl
pop
out
in
insb
test
fcmovnb
loopne
jmp
sub
or
adc
lods
xchg
stc
mov
in
sub
jne
out
mov
test
mov
mov
and
adc
adcl
mov
mov
mov
sbb
das
stc
mov
sub
push
mov
ret
jmp
mov
outsb
mov
cwtl
cli
test
stos
jecxz
lock
aaa
or
xchg
sbb
insb
xchg
mov
ret
rcll
filds
sti
aas
sub
into
in
in
shll
push
roll
in
or
jbe
cmpl
fmuls
int
in
rcr
pushf
jne
test
cmp
fdivrs
inc
mov
jmp
ret
loop
fsubs
mov
out
imul
mov
mov
jne
mov
mov
sub
stos
adc
lcall
mov
push
xchg
aas
lods
add
enter
cmpsb
fcoms
jno
aas
pop
mov
inc
mov
stc
hlt
scas
pop
in
jp
out
ss
jno
mov
push
gs
xor
ljmpw
jg
out
outsl
cmp
repnz
jmp
icebp
jge
or
scas
cmp
lods
sub
lahf
push
dec
out
adc
jge
ja
xchg
push
leave
xchg
and
popf
mov
dec
adc
push
cld
sar
push
pop
and
fcmovnu
enter
clc
ja
outsb
jne
push
xor
ror
aad
ficoml
mov
push
addr16
outsb
inc
xor
fnstcw
and
pop
dec
xor
inc
pop
cmp
mov
adc
les
push
push
cmp
inc
add
ret
push
cmpsb
add
xchg
mov
xor
xchg
add
sahf
sbb
mov
mov
scas
mov
dec
jecxz
shrb
mov
mov
popl
mov
mov
push
sub
xchg
orl
lahf
in
jge
jmp
mov
stc
js
jg
add
dec
ret
mov
std
in
mov
mov
mov
test
inc
jo
pusha
sub
test
je
fsubrl
dec
movsl
cmp
fimull
cmp
inc
xor
je
lea
test
xorb
sbb
dec
imul
sbb
notl
adc
test
dec
push
jno
mov
or
insl
jb
popa
stos
xchg
mov
ja
sub
jns
inc
pop
loope
addb
outsl
int
movsb
and
push
popa
dec
xchg
inc
mov
int3
cmpsl
pop
dec
test
shll
daa
xchg
les
nop
mov
orb
pop
lods
repnz
sub
xor
adc
lcall
cmp
and
pop
xor
mov
lds
cmp
push
call
jmpw
xor
scas
outsl
mov
stc
cmp
or
sarl
shll
cmc
hlt
and
xor
leave
in
jp
push
mov
dec
mov
dec
add
orl
cmp
and
cmpsl
cs
fnstsw
pop
xchg
jg
add
mov
inc
jns
fisttps
jne
sahf
das
cmpb
push
daa
mov
out
dec
repz
in
addr16
call
mov
mov
cmp
ret
add
shr
shll
jle
popa
loope
xchg
xchg
add
mov
rclb
mov
adc
iret
sbb
mov
cltd
loopne
pop
je
xchg
or
std
mov
inc
inc
popa
mov
xor
ds
das
pop
clc
xchg
jns
mov
lret
jge
push
inc
sbb
jne
jno
cli
pop
pop
pushl
push
jb
pop
das
cld
pop
test
pop
movsb
jl
popf
sub
add
das
in
xchg
divb
sahf
mov
or
push
ja
popf
rep
shrl
jbe
leave
arpl
and
mov
xchg
add
aam
dec
stc
loope
or
andl
js
subl
cmp
ja
xchg
rclb
jg
fidivs
xchg
shrl
testl
shrl
or
repz
daa
or
lahf
dec
and
or
out
pop
pop
insl
xchg
mov
and
and
sbb
ja
cmc
mul
sub
enter
dec
push
jecxz
fidivl
stc
pop
sbb
rep
clc
test
test
lret
fs
sub
aas
insb
jne
and
xchg
pop
push
mov
mov
pop
arpl
push
push
test
scas
mov
sbb
je
sbbb
addr16
mov
rolb
xor
ja
pop
dec
cs
push
iret
sub
aas
mov
mov
pop
push
std
adc
out
icebp
and
sbb
and
sahf
jg
test
jle
aad
sub
mov
dec
stc
push
lret
movsl
mov
mov
xchg
inc
add
inc
mov
mov
jae
jp
cmp
dec
pop
fbstp
sbb
inc
les
dec
sahf
daa
mov
sbb
cmp
cld
rcrl
jno
cmpsb
push
scas
pop
cmpl
xlat
dec
cli
sbb
int3
adc
inc
daa
das
mov
shl
aad
adc
outsl
cmp
jp
popf
xchg
movsl
fdivs
dec
jmp
xor
shr
bound
adc
push
jg
jns
sbb
stos
imul
in
into
jl
das
aas
jl
jg
fnstenv
xchg
scas
imul
add
sbb
pop
shl
sbb
dec
add
mov
stc
cmpsb
inc
sub
test
inc
adc
cmp
and
es
mov
lods
leave
mov
sbb
xchg
jb
fs
mov
scas
sub
push
notb
push
or
pop
mov
or
cmpsl
xor
jmp
inc
enter
pop
jmp
jns
sub
in
add
jle
insb
xor
cmp
inc
sahf
mov
mov
mov
lahf
pop
enter
xor
mov
mov
fwait
or
xchg
ret
les
mov
in
mov
out
inc
movsl
les
arpl
mov
call
sbb
jno
pop
or
dec
cmp
xchg
fucom
adc
xor
fists
adc
add
imul
cltd
testb
mov
and
and
int3
scas
sbb
call
and
scas
cli
add
push
into
inc
sub
add
mov
pop
dec
aaa
pop
out
fsubs
dec
push
dec
nop
enter
mov
mov
cmp
dec
imul
data16
push
mov
ljmp
sbb
sar
out
lret
outsb
or
push
dec
sahf
jbe
sub
inc
test
repnz
pop
dec
flds
mov
mov
aad
mov
nop
in
adc
pop
cli
mov
movsl
in
mov
push
pop
pop
xchg
sub
pop
push
push
xor
stc
adc
dec
or
adc
rorb
xor
in
loope
push
cwtl
pop
stc
sbbb
add
push
pop
or
fwait
clc
xor
into
mov
les
pcmpgtb
push
out
jne
cmp
push
xchg
mov
mov
adc
out
aam
jbe
shl
and
dec
jo
stc
and
scas
ja
mov
and
xor
xchg
mov
jae
data16
sbb
mov
notb
mov
push
push
xor
fcoms
mov
in
aaa
aad
and
jecxz
repnz
leave
mov
ror
inc
inc
jle
add
clc
or
iret
jno
jno
push
rclb
cld
arpl
ret
xor
push
les
daa
dec
xchg
push
mov
stc
xor
mov
ljmp
mov
mov
adc
loope
mov
int
and
xor
ss
cmpsl
mov
sbb
cmpsl
adc
sbb
in
mov
hlt
add
arpl
xchg
dec
mov
fwait
jmp
mov
cs
fsubs
cwtl
loop
push
xchg
fcmove
pop
clc
xchg
movsb
pop
stos
sub
mov
addr16
scas
jmp
jne
and
decl
pusha
out
sbb
lods
popa
and
shll
movsb
mov
xchg
sbb
add
sahf
xchg
sbb
mov
fpatan
lods
sbb
push
hlt
mov
shlb
and
jecxz
add
inc
xor
outsb
daa
stos
stos
lods
push
in
jmp
movsl
or
data16
jns
imul
andl
inc
sahf
sbb
dec
pop
int
push
fildl
lea
fdivrl
cmp
inc
int3
sbb
sbb
add
cmp
in
jb
mov
pop
fdivp
jp
inc
push
sub
out
adc
mov
dec
push
xchg
imul
popl
or
inc
ret
imul
rorb
cld
stos
xchg
cltd
jns
add
popl
cmp
int3
sbb
cmp
jae
and
dec
sbb
mov
push
in
repnz
jno
xlat
mov
cmp
mov
xor
add
outsl
loopne
mov
sub
pop
cmc
movsb
sbb
mov
lret
jo
add
add
sub
dec
roll
popw
into
mov
cmpb
sbb
mov
clc
cmp
pushf
test
ret
jp
out
push
out
dec
cmpsb
jp
add
jge
adc
outsl
iret
cmp
xchg
mov
ror
fxch
sub
jle
xchg
pop
mov
add
mov
push
ret
out
mov
cmp
jo
or
adc
dec
stos
jle
or
daa
jnp
fistl
mov
adc
frstor
mov
lret
test
mov
inc
mov
out
fsubr
arpl
in
push
cmp
mul
cmc
cmp
sub
and
rcr
sbb
divl
add
push
aaa
std
ds
dec
xchg
ss
sub
bound
xchg
push
mov
jl
sbb
inc
stc
dec
push
push
dec
mov
rorl
cld
es
je
mov
mov
cmp
pop
popf
outsb
or
mov
std
int3
int
jbe
push
stc
xchg
shll
fxtract
insl
hlt
jo
into
mov
test
andl
cs
and
lods
xchg
loop
cltd
xlat
mov
add
cmp
adc
adc
jns
stc
jne
push
mov
nop
je
mov
int3
dec
jb
sbb
pop
vmaskmovdqu
jmp
and
mov
test
bnd
jmp
ret
and
test
lret
dec
rcr
outsl
ror
mov
out
mov
stos
xchg
adc
mov
jbe
int
insl
gs
xor
mov
es
in
inc
addr16
cmp
jmp
arpl
jmp
inc
lret
jae
std
push
or
sbb
aaa
add
icebp
out
imul
mov
aas
cs
mov
cli
jp
imul
fucomp
fwait
or
jmp
nop
push
subb
or
aad
popf
outsl
aaa
adc
jp
mov
xchg
adc
mov
rcl
stc
scas
lea
pushf
mov
mov
loopne
add
popa
in
xchg
pusha
mov
or
mov
fdivrl
jecxz
fmuls
in
lea
jae
sub
adc
dec
and
xchg
jp
mov
jb
sahf
fldt
call
mov
jle
mov
mov
xchg
sbb
xchg
pop
aam
adc
scas
sbb
xchg
xchg
movsb
mov
mov
cmpb
daa
cmpsl
fs
mov
or
pop
xchg
loope
fldt
mov
sub
mov
out
loopne
pop
dec
push
push
daa
les
out
mov
mov
stc
mov
pop
inc
lods
cmp
mov
cmpsl
mov
sbb
orl
sub
cmp
call
jge
dec
xchg
fsubl
cmpsl
sub
ss
push
rol
xor
mov
mov
mov
inc
rcll
add
or
cmp
ljmp
mov
daa
or
dec
cli
and
mov
cmp
loope
pop
mov
xchg
shll
pusha
rcr
ljmp
movsb
jg
pop
mov
adc
pop
inc
ljmp
into
push
push
test
add
out
outsb
add
push
aad
mov
test
mov
dec
loop
adc
ret
inc
ret
mov
or
decl
out
cmpsl
arpl
xchg
cmp
test
mov
sbb
hlt
and
jmp
pop
lret
dec
pop
add
hlt
mov
push
pusha
and
cmp
push
jne
fnsave
cmp
cltd
cmp
outsb
clc
icebp
lock
lret
insl
mov
cmp
or
jecxz
add
scas
adc
and
inc
mov
int
xlat
pop
add
mov
sbb
icebp
dec
movsl
cs
add
dec
add
popf
or
inc
cld
ret
mov
mull
mov
dec
int
add
push
int
cmp
clc
adc
or
adc
xchg
pop
mov
jbe
pop
cmpsl
pop
jge
mov
lea
fistps
lahf
inc
in
sbb
daa
mov
enter
or
inc
addr16
outsb
inc
dec
fistpll
xchg
pop
cli
dec
cltd
add
scas
sub
cld
lds
insl
inc
sub
or
mov
dec
adc
push
sbb
push
xchg
adc
add
andl
xchg
loopne
dec
sbb
add
cwtl
inc
adc
jnp
fbld
jecxz
inc
cmp
andb
jae
negb
cmp
enter
mov
lods
pop
cmp
lock
cmpsb
pop
mov
addb
ror
push
jle
inc
sahf
or
xchg
pop
pushf
push
sahf
xchg
pushf
test
out
cltd
jne
sbb
mov
pop
mov
lahf
mov
lods
pop
or
mov
in
mov
jp
js
cmp
fimull
or
lds
stc
pop
cmp
and
movb
ljmp
adc
bound
insb
popf
shlb
sbb
push
lahf
fsts
mov
mov
iret
cmp
out
or
push
shll
adc
fidivrl
and
jmp
lods
xor
xchg
inc
dec
sub
xchg
or
pushl
dec
sbb
mov
das
loopne
fwait
roll
fucomp
lods
sbb
aaa
dec
jo
popa
inc
mov
add
lea
das
jbe
in
test
push
subb
sbb
fsubr
ss
jns
add
cwtl
mov
xor
shlb
filds
dec
xchg
adc
loope
rclb
inc
inc
xlat
sarl
add
test
push
lock
sbb
movsl
or
pop
nop
mov
sub
cli
jo
inc
cmp
xchg
outsl
push
jbe
shrb
or
jnp
out
aas
add
add
push
cmpb
mov
call
lea
lods
jns
xchg
cmp
dec
addr16
xor
lahf
jnp
dec
and
daa
cltd
insb
sub
mov
xor
ficoms
adc
push
mov
push
adc
and
sub
jns
push
ljmp
into
xchg
adc
neg
pusha
pop
sub
add
mov
mov
mov
add
icebp
dec
lock
or
loop
subb
mov
gs
and
std
in
xor
imul
and
and
xchg
inc
fs
push
mov
jp
pop
jae
call
jmp
sbb
push
insb
and
push
arpl
lds
jmp
ljmp
push
dec
leave
test
mov
mov
cld
ljmp
addr16
and
cmpsb
orb
mov
xor
aas
aam
sbb
dec
jmp
test
cmp
jge
cs
lcall
dec
pushf
push
outsb
ret
xlat
mov
xchg
jnp
mov
or
jb
mov
mov
sarb
fnsave
dec
dec
int3
mov
pop
pop
fidivs
sbb
pop
sbb
push
ret
sahf
sbb
jg
dec
stc
push
push
xchg
data16
pop
adc
ja
and
mov
addr16
xabort
fisubrs
xlat
nop
repnz
mov
enter
shll
es
mov
mov
xor
or
adc
aas
rcll
pop
inc
ror
pop
notb
and
aaa
jg
mov
cmp
loop
nop
sarl
sbb
mov
xlat
add
mov
inc
int3
das
inc
repz
mov
test
mov
jbe
ds
sarb
dec
fldt
incl
in
xchg
imul
daa
mov
jle
mov
clc
xor
mov
pop
repnz
xlat
scas
cmp
mov
imul
fmull
popa
or
sbb
sub
fiaddl
mov
cmpsl
subb
sbb
sub
inc
nop
dec
icebp
je
in
inc
orl
sub
add
cli
in
mov
inc
repz
jae
cmp
fimull
jp
cli
outsl
mov
aaa
jo
or
dec
and
mov
fadd
imul
pop
mov
sub
dec
jp
bound
xor
push
sbb
mov
mov
or
and
inc
mov
leave
adc
jbe
iret
leave
sub
and
xchg
loop,pt
sarl
int
shrb
cmpsl
leave
and
sbb
pop
jo
mov
cltd
push
enter
dec
cmc
mov
repz
add
aas
pop
js
lock
ficoml
adc
hlt
cmc
cmpsb
inc
xchg
mov
mov
push
loop
xchg
mov
out
in
adc
xchg
fcomp
popa
and
mov
add
pop
out
pop
rcrl
rorb
cmp
push
mov
sbb
mov
jp
jl
dec
mov
push
pop
cmp
mov
mov
cmp
mov
sbb
adc
mov
gs
cmp
sti
cld
dec
inc
aas
inc
pextrw
sbb
inc
mov
and
add
fwait
add
sbb
push
mov
push
xchg
aad
test
inc
adc
enter
sarb
cwtl
shll
daa
inc
lret
popa
lret
push
jne
and
cmp
cmp
lea
mov
movsb
cmc
jl
cwtl
mov
xor
push
inc
push
stc
aam
dec
cld
loop
sahf
and
lods
test
push
inc
xchg
xor
xchg
cli
mov
push
mov
sub
cmp
cmpsb
and
lods
pop
outsb
dec
fwait
sbb
and
dec
aaa
add
shll
cmp
xchg
xchg
cmpb
clc
adc
sub
ret
jecxz
xorl
icebp
pop
hlt
fnstcw
shlb
imul
dec
fwait
mov
pushf
pop
out
loop
push
or
out
push
stos
dec
xchg
lds
inc
bound
jle
lret
push
mov
mov
hlt
in
and
sub
sub
pop
fidivl
and
stc
jo,pt
in
fmul
inc
sub
sub
sub
add
int3
ss
movsb
repz
into
shll
and
js
mov
xchg
mov
cmc
pop
test
cmc
pop
jecxz
cmp
sbb
addr16
xor
xchg
lea
cli
mov
test
in
pmulhuw
mov
mov
dec
rorl
outsb
mov
and
push
stc
dec
xchg
sub
adc
and
push
mov
pop
add
fwait
les
cli
inc
push
ret
test
stos
sti
adc
sub
or
icebp
xchg
call
pusha
inc
jmp
inc
mov
leave
push
or
int
push
rolb
rcrb
js
lods
add
xor
pop
sbb
test
pop
cmp
gs
add
inc
or
xchg
and
lods
ja
sbb
jno
push
add
xchg
lock
stc
xor
push
sub
inc
popf
lcall
or
cmp
mov
mov
pop
ss
mov
adc
sub
inc
jecxz
sub
insl
sbb
pushf
clc
cmpl
dec
ret
jno
pop
gs
daa
test
sbb
inc
cmpsl
addr16
mov
int3
ret
dec
pop
sbb
fbld
ljmp
pop
and
sub
sub
jl
mov
mov
in
bound
inc
or
insb
mov
jle
cmpl
xor
shrl
stc
push
push
lock
inc
add
xor
mov
clc
or
mov
cld
push
lret
addr16
mov
push
mov
jle
jmp
cltd
test
fidivrl
mov
out
lea
pop
jg
lea
es
repz
adc
mov
or
xchg
clc
sub
push
ss
adc
fsubrs
shlb
mov
stos
js
xor
mov
sub
or
addb
inc
cs
dec
repz
pop
inc
stos
icebp
enter
push
sbbb
mov
push
pushf
adc
xor
aad
fwait
and
dec
jg
inc
repnz
xor
or
ret
xor
push
adcb
push
mov
jne
mov
jle
jecxz
pop
adc
cmp
imul
pusha
jp
cmp
and
dec
pop
addb
pop
mov
and
cmpsb
mov
adc
and
jno
sbb
in
ss
idivb
sbb
sbb
insb
aaa
ljmp
clc
pop
int
mov
orb
add
push
jb
dec
add
push
fwait
sbb
or
mov
test
call
sbb
pop
push
cld
into
and
mov
ja
movsb
mov
ds
mov
cwtl
test
mov
xorb
push
push
mov
jmp
data16
pop
imul
jmp
cmpsb
bound
movl
fdivr
xor
imul
mov
inc
pusha
xchg
in
or
push
and
int
pop
adc
out
add
je
fcoml
mov
inc
std
movl
in
cmpb
pop
stos
outsb
mov
clc
lds
sub
ljmp
jns
pusha
sub
pop
cmc
cmpsl
rcrl
mov
cs
push
xlat
std
in
pusha
and
xchg
dec
ds
test
jno
dec
xchg
or
jnp
out
or
fs
and
or
addr16
jnp
or
xor
call
adc
mov
pop
es
jae
clc
mov
mov
mov
roll
and
cmp
fs
dec
xchg
pop
sub
fiadds
mov
gs
xor
enter
ljmp
ficoml
sarl
jnp
add
lock
arpl
lock
jle
dec
ds
test
sbb
orl
add
loop
jmp
lods
adc
add
fistps
add
aam
xchg
adc
cmp
mov
jp
lods
dec
icebp
mov
and
rcrl
push
ret
mov
cmp
xor
stos
rcrb
jg
cmpsb
fs
jb
mov
dec
pop
lahf
out
pop
addr16
lret
inc
inc
ja
sub
fisttpll
gs
mulb
mov
clc
sub
enter
adc
ja
cwtl
pop
movsl
or
mov
test
sub
push
dec
mov
test
cmp
scas
imul
icebp
jle
popf
icebp
prefetch
and
mov
mov
das
add
xor
mov
mov
cmp
lahf
mov
and
xor
push
ror
pop
or
mov
or
call
aas
rorl
cmp
lret
or
arpl
out
shrl
lret
push
vpmaxsw
icebp
call
shl
push
stos
dec
cmp
scas
sbb
sub
and
jnp
in
mov
sbb
cld
push
inc
mov
and
ret
outsl
push
movsb
dec
sahf
xor
adc
push
cmp
addl
mov
cmpsb
push
fildl
jns
jae
ja
rclb
pop
rclb
lahf
adc
xchg
fidivs
jg
push
ss
test
xor
int3
cmp
pushf
dec
idivb
pop
dec
or
add
mov
jo
rcrb
adc
pop
in
leave
aad
push
pop
es
mov
push
fbstp
push
cs
jmp
mov
nop
int
repnz
fldl
mov
mov
mov
or
mov
xchg
jmp
ret
sbbb
pop
arpl
xchg
mov
sub
cmpsl
or
xchg
enter
inc
cwtl
cmc
hlt
push
fldcw
divl
push
stos
adc
jecxz
ror
xchg
mov
mov
popf
and
xchg
dec
sahf
jb
mov
dec
lahf
das
jg
and
jl
xchg
dec
xor
inc
xorb
jb
fcmovnbe
pop
mov
mov
mov
call
jo
out
cmp
jge
jle
or
sbb
icebp
pop
lds
js
scas
mov
add
in
ret
negb
adc
and
sub
call
or
and
mov
outsl
testb
xchg
xor
test
cld
imul
jmp
xchg
and
jg
ficoms
icebp
test
mov
stos
or
cld
sbb
out
mov
mov
jecxz
add
add
hlt
jo
adc
add
xchg
xchg
xchg
loop
cltd
in
mov
dec
mov
xchg
cmp
cmp
ss
jecxz
mov
mov
dec
xchg
aam
lds
les
mov
mov
addl
push
xor
pop
mov
inc
xchg
jl
mov
xlat
add
movsb
ret
loope
in
xchg
lret
push
aam
xor
inc
push
in
push
insb
mov
icebp
jecxz
jae
clc
das
mov
int3
outsl
aam
sar
dec
mov
movsb
cmp
clc
pop
cli
inc
jle
add
xchg
push
sub
ja
mov
sbb
stos
movsb
mov
add
push
lret
data16
mov
xchg
out
jle
std
sti
out
adc
xorb
mov
mov
add
inc
pop
mov
push
xchg
add
cmp
jle
adc
loop
mov
cmp
pop
jo
mov
inc
jo
loopne
repnz
icebp
add
add
push
push
push
mov
jb
fdiv
lds
xchg
int3
push
or
das
notb
fisubl
pop
adc
insb
fsts
mov
rolb
push
in
xorl
push
adc
jnp
and
test
aad
aas
cs
pop
sbb
shlb
repnz
cmp
cmpsb
ds
std
xchg
mov
gs
dec
movsl
sbb
imulb
sbb
ja,pt
or
jp
cmp
enter
push
fstl
or
sti
xchg
fldlg2
cmp
loope
push
jle
sbb
xchg
sbb
inc
fcmovu
mov
fmull
cmp
orb
jns
pop
mov
lea
insb
inc
cmc
add
in
adcb
subb
adc
push
popf
cmp
jne
shlb
arpl
pusha
or
or
stos
cmp
and
pop
mov
fcomps
jns
mov
sahf
or
cld
add
dec
repz
inc
out
mov
mov
fstpt
inc
icebp
mov
or
dec
mov
pusha
es
push
add
add
jnp
lea
xchg
pop
add
adc
je
pusha
das
int
sahf
ret
icebp
mov
adc
cmp
movl
sar
bound
add
xchg
jecxz
cwtl
pop
xchg
dec
mov
and
mov
ds
addr16
inc
data16
sbb
dec
or
push
int3
jns
sbb
insb
xchg
mov
mov
dec
je
sbbb
test
add
mov
outsl
push
rcrb
mov
and
xor
rep
mov
pop
pop
shlb
pop
push
repz
sarl
rorb
jecxz
punpcklbw
jnp
pinsrw
jnp
cmp
xchg
les
loop
sbb
or
movsl
subb
pushf
mov
mov
insb
loope
xor
mov
jne
insl
out
xchg
xor
iret
sti
cwtl
cmpsb
push
stos
xchg
cmpsb
xor
and
popf
dec
jno
mov
xchg
ja
and
inc
js,pt
rol
je
pusha
stc
flds
xchg
and
mov
sti
into
mov
and
int
mov
pop
mov
sbb
pop
fsub
sbb
push
mov
js
aam
cmp
inc
jecxz
or
lret
repz
and
pop
dec
sarb
lods
cmp
js
push
pop
and
jo
adc
pop
mov
jp
add
sti
mov
xchg
scas
sbb
imul
xor
aaa
inc
shlb
and
outsl
adc
xor
test
xchg
sub
sahf
sub
addr16
and
add
in
addr16
pop
mov
push
out
dec
pop
dec
mov
inc
ss
add
pop
rorb
fstps
lea
push
ljmp
mov
mov
in
jg
fnstenv
sub
rol
cmpsb
rcr
dec
repnz
ffree
jecxz
or
add
ljmp
clc
pinsrw
pop
jge
lret
outsb
xchg
rcll
mov
lahf
cmp
imul
stos
ss
sbbl
out
in
jns
sub
mov
jp
das
xor
sbb
push
add
dec
dec
in
mov
or
mov
call
dec
push
add
lret
les
pop
jecxz
aad
fildl
test
or
xchg
daa
push
pop
loop
inc
cmp
fidivrl
jle
fisttps
andl
dec
test
sti
mov
jle
repnz
nop
loope
cmp
xchg
gs
dec
pushf
mov
ljmp
inc
and
shll
adc
insb
fdiv
lods
dec
ret
subb
sbb
je
in
sbb
mov
sbb
and
scas
pushf
mov
js
leave
ret
iret
pop
mov
sbb
sub
insl
mov
fldenv
adc
popf
loop,pn
sti
les
cmp
or
shrb
jle
loopne
outsl
fildll
fs
jl
or
xchg
push
sti
adc
out
mov
jecxz
testl
rolb
sbb
jb
or
jb
mov
lahf
and
and
fdivl
cmc
out
gs
clc
adc
shrb
in
repnz
int3
lods
cmc
xor
sub
lret
and
outsl
nop
les
rcl
push
inc
push
nop
lea
dec
cld
xchg
push
loop
fisubrs
inc
ret
adc
pop
sbb
sub
push
push
nop
lods
test
sub
or
pop
ret
push
xchg
push
lods
inc
adc
push
add
fucomip
sub
or
mov
inc
push
outsb
sahf
pop
fcomip
and
subb
push
add
mov
xor
icebp
add
in
push
jbe
test
xor
std
xchg
repz
dec
inc
mov
clc
mov
insl
cs
xchg
inc
popa
iret
sub
push
mov
xchg
aaa
push
xor
ret
jbe
cmp
mov
add
mov
pop
and
mov
mov
adc
icebp
mov
mov
rorb
fisubs
adc
jecxz
test
cmp
push
icebp
and
push
icebp
ljmp
imul
pop
jnp
add
loopne
mov
adc
pop
mov
mov
and
ds
mov
aaa
into
or
add
fdivrs
mov
je
aam
cmpsl
cld
daa
std
xor
popa
jnp
nop
push
xor
mov
imul
xor
xchg
testw
dec
xchg
mov
sub
dec
aas
adc
shrb
test
icebp
iret
roll
jl
sub
sbb
jae
jae
imul
shl
and
scas
add
cmp
pop
roll
adcl
scas
movsb
pop
jo
xor
xchg
mov
mov
mov
mov
xlat
out
add
loop
out
aad
jp
xor
mov
inc
lock
popa
dec
xor
jmp
sub
cli
mov
ror
cli
inc
mov
inc
jmp
adc
enter
fwait
repnz
and
pop
lods
jb
jbe
push
and
mov
test
mov
mov
lock
out
push
mov
out
jl
push
xchg
jns
or
add
xor
sbb
std
sub
call
pop
popf
sbb
lea
lret
movsl
xchg
xchg
bound
sub
dec
rcrl
lahf
scas
jae
fs
stc
jp
sbb
fldenv
pop
in
clc
cld
pop
dec
inc
int3
pop
pusha
rorb
ficompl
out
add
jno
inc
adc
cmp
push
data16
dec
pop
cmp
add
bnd
shl
and
ja
stos
dec
jnp
sub
enter
xchg
jp
outsb
jne
xchg
fnstcw
jo
add
cmpsl
cmpsl
jl
mov
std
icebp
jge
loopne
mov
mov
in
add
xchg
dec
xor
fs
mov
jmp
je
sub
repnz
add
cld
pop
repnz
xor
mov
xchg
loop
xchg
popa
add
jb
cmp
xchg
in
lods
in
stos
test
aas
inc
enter
movsl
cmp
lods
into
add
jne
cmp
mov
adc
rol
dec
xor
in
test
cmp
sbb
cs
and
or
cmp
sub
dec
push
in
js
fidivrl
dec
push
cli
adc
mov
cs
adc
add
mov
mov
xor
or
ja
fcoms
inc
mov
in
js
ret
xchg
inc
sub
adc
les
scas
and
lods
in
out
sti
inc
subb
inc
sbbl
sub
add
fstpl
push
sub
out
mov
fsubl
xor
sub
jmp
xchg
int
loop
addr16
push
std
or
insb
sarb
cmpsl
sbb
pop
aaa
xchg
arpl
jp
repz
cmp
push
int
xorl
idivb
add
mov
pop
add
aaa
test
loopne
sub
push
arpl
dec
xchg
inc
xchg
dec
pop
decl
mov
aaa
ss
stos
in
dec
testl
jnp
cmc
cli
or
lds
xchg
mov
loop
nop
dec
cs
sub
lahf
stos
gs
aad
and
cs
sbb
mov
movsb
mov
or
lcall
pop
cmp
mov
jmp
sbb
push
lock
movsb
insw
fcmovbe
lret
shll
int
add
pop
mov
scas
adc
aam
pop
xchg
sub
out
inc
inc
inc
inc
adc
lds
pop
push
jne
jbe
sub
movsb
out
lock
add
sub
cmp
push
pop
loopne
inc
mov
roll
cmp
fcmovb
push
xor
jmp
jno
or
dec
fwait
xor
pop
fdivs
or
and
fs
lahf
mov
enter
cmp
pop
cltd
mov
repnz
mov
lods
push
das
mov
daa
inc
inc
fiadds
sbb
out
or
mov
dec
sbbb
mov
mov
dec
stos
sub
pushf
loopne
cld
jl
or
cmp
outsb
lock
mov
pop
shl
roll
pop
shrb
mov
dec
jecxz
lock
scas
outsb
mov
mov
sti
iret
je
mov
ret
gs
div
mov
inc
fidivrl
inc
int
out
mov
mov
push
mov
adc
add
jns
js
xchg
bound
cmp
ficompl
mov
in
xor
add
lahf
jmp
pop
pop
push
aam
cvtpi2ps
mov
inc
fisubs
mov
pop
mov
jo
push
mov
push
inc
mov
dec
test
dec
pop
clc
imul
push
xor
dec
jns
gs
cwtl
sti
xor
cld
pop
xchg
sub
add
xor
decb
hlt
in
into
inc
rcrl
clc
out
xchg
test
outsb
pop
add
ret
xchg
shll
push
push
mov
ljmp
mov
orb
mov
jecxz
std
jp
push
mov
push
xor
jbe
pop
lea
push
mov
and
mov
hlt
out
movb
das
pop
enter
dec
xor
iret
and
push
stos
sub
jno
lret
xor
shrb
dec
daa
daa
mov
jno
adc
or
mov
push
in
push
adc
iret
push
ljmp
fucomi
mov
clc
out
or
fidivl
jne
mov
imul
fbstp
repz
xor
enter
mov
xor
or
movl
push
fnstsw
popf
mov
pusha
ljmp
mov
std
loop
dec
push
adc
scas
xlat
lret
scas
in
in
insl
imulb
stc
xor
lret
xchg
sub
adc
cmp
lahf
push
insl
xor
loope
dec
fcompl
shrl
dec
push
int3
sub
jo
jg
or
repz
mov
popf
lcall
outsb
mov
sti
jo
adc
lret
cs
inc
fidivrl
or
movsl
mov
sub
cmp
pop
pop
xchg
pop
cli
sbb
ds
or
xchg
push
inc
push
jb
mov
scas
sub
pop
xor
rorb
mov
lock
mov
pop
cmp
and
jge
sbb
jno
mov
xchg
push
gs
or
enter
std
scas
xchg
xchg
cmpsl
jb
jl
inc
xchg
dec
rorl
push
xlat
test
mov
push
jmp
leave
mov
cltd
mov
stos
stos
fcmovnb
int3
sbb
out
lock
in
cmp
inc
ficoms
sahf
pop
sub
mov
dec
bound
cmpsl
xchg
lods
fiadds
add
jecxz
jne
outsb
xchg
loopne
mov
cli
fs
cwtd
aaa
push
mov
pmaxsw
pusha
and
pushf
cmpsl
in
imul
jno
jno
sub
lods
std
cli
ficompl
jno
test
mov
mov
dec
lcall
dec
out
mov
pop
cmp
roll
xlat
negl
xchg
fidivrs
pop
mov
xchg
fisubl
xchg
lea
shll
fcmove
push
xor
and
es
and
fisubl
test
push
sub
inc
adc
je
arpl
inc
xchg
push
andps
shlb
add
inc
jp
in
jp
xchg
xor
cld
xchg
stc
and
shll
adc
cmp
jno
pop
int
repz
push
dec
out
jae
push
out
inc
fsubrs
dec
lcall
lret
fcoms
test
outsl
jnp
fcoml
pop
pop
sbb
aam
dec
add
push
xchg
cld
cmpsl
pop
into
out
cmp
insl
es
dec
test
cmp
sub
mov
repz
sarl
sub
mov
mov
cltd
cmp
mov
lcall
test
pop
mov
andps
jmp
jle
xchg
pop
jg
sbbb
pop
jo
sub
fcmovnu
sti
pop
in
sbb
movsl
push
idivb
push
pop
jg
fiadds
or
mov
inc
lock
adc
sub
shlb
cmp
sbb
popa
push
xor
daa
mov
add
std
test
jbe
ror
pop
xchg
pop
les
mov
movsl
inc
push
idiv
sub
pop
mov
mov
pusha
sbb
pop
sahf
sbb
idivl
fmuls
mov
call
imul
fcoml
fisubrl
cmp
lcall
xor
adc
add
sbb
cmp
jmp
cmp
sub
mov
aad
pop
adc
es
fmull
xorb
mov
lods
push
fwait
pop
cmpsb
ret
xlat
ljmp
gs
dec
xchg
into
mov
jae
mov
jecxz
fldcw
out
sti
sbb
sbb
dec
inc
pushf
je
jge
sti
xchg
fbstp
xchg
imul
mov
enter
fmuls
and
mov
mov
sub
push
mov
mov
jmp
or
or
mov
enter
xlat
gs
je
int3
test
inc
xchg
mov
test
jecxz
sub
and
lcall
and
xchg
mov
jmp
test
stos
dec
jp
loop
sub
test
loopne
push
jae
pop
push
sarl
pop
sub
push
push
push
lods
mov
imul
mov
cld
stos
push
daa
out
imul
popa
pop
nop
push
lods
add
dec
in
sbb
shl
push
testl
cmpsl
lcall
xor
jmp
sub
lcall
cld
test
popa
leave
inc
es
mov
std
and
into
or
or
fcoml
fsubrs
divl
lret
repz
jl
out
xchg
jecxz
into
mov
sbb
pusha
mov
xchg
jb
clc
loope
xchg
push
sbb
or
xor
sbb
inc
mov
xchg
dec
push
or
sub
mov
pop
cld
dec
gs
and
shrl
cmc
or
in
mov
shlb
cmp
add
dec
push
jecxz
jns
arpl
mov
or
mov
sarb
sti
sub
iret
push
push
mov
mov
lods
mov
mov
xor
stos
out
out
cmp
scas
aad
mov
movsb
adc
push
and
test
icebp
fldenv
mov
data16
js
jno
mov
pop
mov
outsl
or
js
fistpll
and
sub
xor
dec
or
jmp
testb
in
sar
insb
aad
lea
mov
sbb
xchg
aas
sbb
out
mulb
data16
or
loope
outsb
xlat
mov
into
cmp
pop
out
inc
popa
jb
mov
pop
lds
lahf
adc
inc
movsl
add
inc
cmp
push
pop
add
out
inc
in
cs
ss
mov
js
es
repnz
inc
and
in
mov
inc
pop
mov
dec
add
dec
aaa
xchg
add
test
cli
mov
xor
inc
mov
and
cmpsl
inc
xchg
aad
outsb
gs
stc
iret
cmp
sbb
mov
loop
int3
inc
imul
jg
je
add
pop
and
push
dec
jg
or
pop
xor
mov
jo
xchg
popf
xchg
enter
insb
mov
rolb
mov
in
jg
cwtl
test
out
dec
lds
cmpsb
mov
jle
sub
cmpl
mov
cmp
add
bound
or
mov
out
mov
cli
xchg
push
gs
push
in
jge
imul
dec
xchg
rorl
xor
jnp
add
stos
js
sbb
stos
ficomps
mov
push
ret
sbb
adc
or
cmpsl
rol
mov
lods
out
sub
and
fcompl
loop
cmp
scas
mov
or
enter
ss
pop
pop
incb
arpl
cmp
scas
arpl
inc
push
mov
leave
push
push
inc
dec
aam
mov
dec
pop
int
ret
jnp
rcrb
pop
or
sub
mov
bswap
cli
xchg
in
sbb
mulb
xor
pop
mov
adc
push
fsubrs
test
cmp
sti
adc
push
add
xor
das
sub
das
bound
xchg
or
fwait
jge
shlb
cmp
js
inc
add
rcrb
jno
lahf
pop
or
out
inc
pop
sbb
mov
jle
nop
push
push
mov
mov
sbb
enter
data16
mov
dec
and
outsb
clc
imul
rclb
cmp
subl
mov
xchg
xchg
sti
dec
xchg
xchg
cmp
xor
inc
sti
mov
lret
inc
xor
dec
fs
dec
add
or
xchg
xchg
or
imul
lcall
repnz
stc
cli
mov
pop
ja
iret
and
and
jg
cmp
rclb
lcall
jb
scas
mov
xchg
adc
mov
mov
insb
add
xorb
cmp
nop
adc
push
jae
shll
aaa
inc
cmpsb
mov
out
sub
ljmp
jmp
jne
push
mov
pushf
jecxz
jne
mov
lret
es
fsub
cli
sbb
fsubrl
ficoml
cmp
ljmp
cmpsb
jbe
sbb
cwtl
mov
mov
stos
call
sti
mov
sbb
idivl
fdivrs
mov
lret
sub
test
lret
cmp
les
fimuls
lahf
out
je
jno
sub
push
in
dec
test
cli
jmp
add
ja
hlt
stc
das
xor
push
into
aas
and
sub
dec
jo
test
dec
add
or
push
iret
or
aam
popa
je
mov
xchg
xor
push
mov
xchg
add
pop
dec
dec
inc
pushf
push
mov
sbb
hlt
je
mov
sub
push
ljmp
xchg
or
mov
push
aam
icebp
xchg
add
pop
aas
add
int
sahf
shrb
je
jnp
mov
cs
jnp
cs
sbb
rorl
xor
mov
xor
dec
lahf
add
xchg
cwtl
xchg
rcll
push
les
sarl
mov
xchg
pop
sub
push
in
cmp
push
mov
arpl
fs
leave
mov
and
inc
inc
in
fs
mov
in
dec
inc
add
add
idivl
push
pop
ljmp
sti
inc
gs
push
gs
xchg
jg
vpmovsxdq
pop
jge
aam
mov
xchg
cmp
pop
sarl
ds
xor
push
sbb
sub
addr16
pushf
push
lret
ficompl
cltd
aad
ja
in
push
aad
pushf
into
pop
fistps
lcall
push
pop
xor
js
jge
inc
pop
add
lods
or
repnz
fildll
pop
stc
dec
cmp
xor
sub
in
std
scas
and
call
rcr
xchg
enter
js
in
jne
sbb
shll
and
jae
inc
xor
mov
mov
jnp
sbb
cmp
outsb
mov
mov
push
clc
mov
xor
nop
ficomps
pusha
dec
bound
cmp
movsb
jg
inc
xor
jle
add
add
jne
adcb
push
or
mov
orl
loopne
xor
stos
mov
mov
fisubl
in
ja
movsb
lcall
sarl
mov
test
fucomip
in
sbb
and
sbbb
pop
divl
jmp
cmpsb
ror
or
pop
jge
xchg
rcrl
cmp
sbb
addr16
xchg
xlat
movsb
lea
test
mov
add
ljmp
add
mov
lods
popa
xlat
sbb
xchg
fstp
xor
test
std
push
or
and
sbb
push
mov
test
and
mov
xor
nop
lods
pop
test
movsl
aad
pop
pop
sarb
sahf
mov
pop
stos
add
icebp
add
repnz
jo
sti
int
push
ficoml
test
fstl
or
adc
ja
jne
xlat
sub
inc
mov
dec
loopne
lea
mov
sbb
inc
arpl
xorb
pop
pop
pop
mov
jp
sti
mov
cwtl
shl
repnz
push
sahf
data16
negb
xor
or
in
aam
lcall
cmpl
mov
pop
cs
sti
bound
pop
and
inc
jne
insb
push
sub
lds
cmp
hlt
dec
out
es
lret
js
jno
into
jb
xchg
fldt
in
push
je
adc
xor
mov
add
aad
gs
mov
push
mov
nop
jge
jne
or
sbb
fs
imul
lods
mov
mov
inc
pushf
jns
adc
imul
jb
jmp
jge,pn
sbb
inc
gs
push
enter
icebp
xchg
jmp
jg
fildl
dec
cmp
dec
mov
enter
aam
or
add
in
sbb
jno
xchg
add
inc
cmp
xchg
cmp
sahf
lret
push
adc
outsl
rclb
js
stos
lret
test
inc
insb
inc
inc
lds
cmp
imul
sbb
cmp
shll
add
cmp
in
mov
xchg
mov
gs
push
add
mov
add
sbb
adc
test
daa
scas
insl
sbb
into
loopne
jbe
pushf
je
stos
lret
cmp
out
sub
ss
shl
pusha
stos
add
enter
add
shll
inc
or
negl
in
mov
ds
jnp
jae
ret
mov
jnp
dec
and
mov
inc
hlt
mov
shlb
scas
sub
mov
into
push
xor
xor
cmp
std
mov
sbb
xor
sahf
push
decl
out
fs
pop
outsb
sub
out
fs
pop
sahf
fidivrs
aas
fistl
aas
push
stos
sub
cmpsl
dec
shrb
jnp
cmp
insb
xchg
dec
xchg
xor
jbe
mov
mov
outsb
pop
sub
int3
xchg
sub
and
or
lock
mov
xchg
aas
add
pop
sbb
pop
xchg
and
xchg
fstps
mov
push
or
cs
xor
push
mov
es
jmp
pop
cmp
out
mov
adc
shlb
xchg
lcall
mov
xor
push
jg
fidivrs
add
cmp
push
pop
pop
jmp
sub
addr16
ljmp
xchg
mov
adc
mov
sub
cltd
sbb
mov
rol
rcr
push
push
divb
jmp
mov
ljmp
imul
inc
mov
xchg
cmpsl
push
adc
pop
cmp
lea
lods
mov
mov
pop
and
jle
push
mov
inc
dec
enter
adc
sar
in
mov
push
out
mov
repnz
sub
jbe
mov
inc
jno
sbb
mov
cmp
cmpsl
mov
clc
xchg
imul
xchg
repnz
and
xchg
mov
sub
push
imull
es
xor
icebp
push
mov
movl
pop
mov
push
sbb
or
sbb
sbb
or
mov
cltd
xor
mov
frstor
cltd
subl
mov
fiadds
aas
fcomi
mov
mov
orb
fmul
pusha
mov
insl
xchg
push
xor
fwait
pushf
adc
loop
xchg
sub
ret
js
outsb
out
and
inc
sbb
sub
and
cmp
sti
inc
inc
xor
test
pop
fdivr
and
cli
mov
inc
cmp
aas
test
movl
adc
loopne
xchg
jg
andl
push
out
imul
cmp
mov
pop
test
mov
push
lock
push
loop
test
pop
push
loopne
jecxz
ret
int
sub
ljmp
add
das
inc
jo
pushf
xor
jge
les
cmpsl
push
dec
lcall
sbb
mov
add
pusha
ret
push
data16
add
cmp
hlt
jno
fisubl
out
mov
pop
xchg
es
push
ljmp
adc
xor
andb
jbe
dec
and
pushf
inc
adc
inc
mov
ficoms
orl
sub
mov
lds
mov
daa
divl
lret
fidivs
add
cwtl
mov
aad
push
xlat
daa
shll
repnz
outsb
sub
push
xchg
popl
cmc
gs
adc
adc
dec
aad
add
or
scas
stos
jmp
mov
add
xchg
cs
mov
inc
call
test
mov
into
cmpsl
inc
std
xchg
popa
inc
pushf
stos
sbb
loope
adc
push
in
pusha
push
dec
hlt
hlt
or
adc
arpl
and
insl
sbb
fwait
cmp
mov
scas
and
mov
out
mov
stos
stos
xchg
cmp
add
push
loop
dec
inc
outsl
aas
push
jl
je
jo
comiss
sarl
movsl
jle
cmp
in
and
pop
and
and
andb
repz
mov
cmp
cwtl
jbe
stc
incl
and
popa
faddl
aad
adc
push
mov
imul
add
add
movsb
loope
cltd
pushf
sub
stc
and
stos
call
mov
icebp
insb
inc
inc
lret
cmp
dec
adc
shrl
sub
or
call
jo
outsb
mov
dec
ja
scas
mov
popa
pusha
jnp
js
dec
imul
daa
add
icebp
pop
xchg
cmp
sbb
xor
cmp
add
mov
jno
push
insb
mov
scas
data16
jne
push
mov
stc
insl
lock
fisubs
jp
dec
jmp
sub
jno
push
out
add
lock
mov
es
inc
nop
xor
adc
xchg
dec
lret
loopne
je
dec
data16
scas
ror
jle
lods
enter
mov
rolb
rorb
push
push
ja
or
add
imul
das
mov
lcall
xor
sub
test
iret
adc
sbb
xor
or
and
fmuls
sub
js
inc
push
or
xor
cwtl
or
jno
push
or
mov
je
push
jno
ljmp
data16
cmc
and
mov
ljmp
lcall
adc
pop
movsb
xchg
mov
in
mov
cmp
in
pop
inc
xchg
mov
xchg
movb
test
ss
cmc
rcll
xor
ds
ret
clc
mov
fidivl
fldenv
xor
ret
inc
fdivr
push
mov
or
movlps
dec
cld
push
jbe
out
dec
push
or
mov
and
fsubp
insb
cmp
lods
mov
clc
int3
jmp
sub
faddl
fstpl
fsts
icebp
adc
adc
in
mov
jo
in
loope
sti
ljmp
in
pop
je
das
push
pop
add
mov
decl
push
push
cltd
xor
xchg
sbbb
xchg
sbb
push
push
mov
xor
gs
xchg
negl
scas
mov
ljmp
inc
inc
inc
ds
jge
jl
inc
mov
ljmp
cltd
popf
cmovb
cltd
cmp
adc
sti
sub
inc
jp
testb
int
xor
fsubrs
pop
ss
cmp
sub
andl
insb
mov
loope
mov
test
mov
pop
mov
mov
xchg
push
scas
mov
psubusw
pop
adc
mov
out
cmp
fstl
divb
pop
mov
adc
or
jle
or
pop
imul
lcall
movsb
xchg
popa
outsl
daa
movsb
xor
mov
mov
std
add
lcall
xchg
dec
lahf
sub
push
pop
add
xchg
enter
aaa
mov
int3
repz
jmp
dec
enter
jne
sub
aad
aad
cmp
push
iret
push
cmpsb
inc
inc
ds
pop
test
lcall
lds
cwtl
mov
mov
aaa
iret
test
test
fisttpll
adc
jns
into
xchg
inc
negl
cltd
xchg
mov
cli
dec
ja
sub
xchg
sar
jmp
fnstsw
sti
popf
sbb
inc
repz
sub
mov
xchg
stos
cmpxchg
dec
je
add
aam
mov
jae
test
adc
sbb
pop
xor
ffreep
mov
ja
sub
shr
stc
push
je
ja
push
ljmp
mov
lock
or
jecxz
je
cmpsb
ret
push
inc
mov
push
xchg
sub
fcmovu
xorb
and
xor
scas
mov
pusha
cmp
les
sbb
roll
mov
subb
repz
dec
ljmp
lods
ds
ficomps
pop
push
in
push
test
push
xchg
jo
fisttpl
and
or
loopne
aad
dec
mov
bound
dec
sbb
arpl
dec
loopne
popf
hlt
dec
lahf
loope
jo
jno
cmpsl
aaa
push
push
lahf
cs
sbb
in
add
mov
int
jne
ds
divb
xor
jle
mov
add
cs
fadds
jno
into
int
push
test
aad
lret
push
add
xchg
imul
mov
enter
dec
in
dec
lea
mov
xchg
dec
cmp
push
pop
sbb
fiaddl
pop
xchg
insb
leave
pop
xchg
test
add
cmpsl
aaa
add
inc
mov
lret
mov
in
cmpb
js
xrelease
in
jo
lds
mov
out
movsb
pop
aaa
dec
mov
pop
xor
dec
sub
xchg
adc
or
cmovg
in
push
fldcw
push
addb
daa
mov
mov
cltd
xlat
pop
insb
stc
dec
push
sahf
pusha
out
mov
mov
int3
dec
pop
mov
jno
stos
xlat
or
pop
push
jo
jge
cmp
in
jl
or
or
popa
mov
es
cltd
and
dec
mov
mov
out
fs
dec
cli
nop
sub
pop
out
gs
sbb
mov
mov
mov
or
inc
sub
out
lret
je
or
dec
mov
jno
mov
popf
test
loopne
jo
xlat
test
lahf
dec
adc
or
add
fnsave
ss
mov
arpl
xor
cmp
add
es
hlt
xor
test
les
mov
adc
mov
in
pop
or
fdivrs
movsl
jl
adc
or
outsb
or
aaa
dec
jp
fs
bound
xor
jl
and
outsl
jns
js
xor
xchg
inc
roll
jp
xchg
fisubs
push
lahf
repz
fists
out
fisttpl
ret
dec
xchg
mov
sbb
jp
addr16
lock
jmp
sub
mov
xchg
mov
pop
push
dec
lcall
inc
adc
push
inc
pusha
and
jg
cmp
pop
push
fwait
xor
and
jbe
sbb
dec
pandn
cli
gs
repz
les
push
lcall
push
loop
add
add
inc
sbb
sub
xor
push
mov
sbb
inc
mov
xor
insl
push
aas
roll
jle
test
call
push
inc
xor
lret
xchg
ret
jnp
and
rolb
fistps
or
sbb
or
fcomip
pushf
pop
sbb
je
ret
js
ss
xor
aad
mov
jle
pop
in
inc
mov
jbe
imul
out
and
pushf
hlt
mov
sub
int3
rcrl
adc
lods
aad
sarb
xchg
push
sbb
mov
pushl
mov
imul
ja
test
insl
inc
push
in
lret
out
ret
push
test
mov
and
loopne
js
xchg
jle
out
sub
sbb
in
inc
mov
out
lds
lcall
jns
dec
in
loopne
hlt
imul
shlb
mov
cmp
add
jecxz
out
je
mov
mov
sub
adc
test
popf
lret
jl
cwtl
xchg
ja
or
sub
pushf
les
ss
enter
repz
pop
cmp
add
add
outsl
xor
pop
fwait
hlt
in
fisttpl
dec
test
xchg
fistps
mov
pop
lods
rcrb
cmp
and
mov
ret
scas
mov
and
mov
hlt
dec
and
sti
sbb
call
hlt
push
int3
aaa
cmp
hlt
sub
xchg
stc
aas
or
out
inc
and
jae
mov
sub
bnd
outsl
ja
scas
gs
and
push
imul
pop
shlb
rcll
call
outsb
cmp
dec
add
push
adc
sbb
popa
lcall
and
ss
leave
hlt
rorl
push
stc
cltd
mov
jmp
add
add
mov
xchg
imul
lret
fs
loop
sbb
mov
sahf
bound
lret
sub
jns
cli
xor
sbb
and
xor
inc
lahf
push
mov
inc
ds
or
mov
stos
push
mov
mov
jb
out
repz
in
out
push
sub
inc
js
mov
jns
add
add
xor
jno
inc
std
jle
ret
lock
imul
mov
scas
dec
jle
sbb
jno
rolb
cmp
aas
lahf
shll
push
lea
leave
sbb
mov
out
mov
jmp
fs
in
jle
js
pop
cmpsb
sub
shlb
stos
inc
ljmp
pop
stos
xchg
xor
push
push
in
fidivs
in
fst
scas
and
in
mov
out
popf
jae
loop
insl
fidivl
pop
jnp
orb
pushf
sub
repnz
mov
xchg
inc
shl
fisttpl
int
insl
ss
jge
xchg
xchg
jbe
push
adc
cmp
add
aam
jmp
or
cs
pop
fadds
cltd
adc
mov
sarb
ljmp
mov
scas
mov
cmp
sahf
ja
arpl
movsb
push
fsubrs
xchg
ret
adc
push
fcomps
dec
lret
pushf
fwait
jp
push
mov
jnp
push
mov
cld
loopne
dec
dec
addr16
fwait
xlat
push
xchg
push
push
sub
clc
test
xchg
add
in
mov
loopne
testb
test
loope
arpl
jb
lock
dec
adc
cmp
pop
xchg
mov
dec
cwtl
add
push
shlb
jmp
sbb
pop
sub
aad
jne
gs
jne
cmpsl
cmpsl
stos
xor
mov
hlt
fisubrs
mov
mov
or
lcall
sub
mov
inc
nop
jno
xchg
mov
outsl
inc
lods
bound
in
in
inc
rorb
jns
orb
in
call
fimuls
inc
iret
push
mov
loope
out
sub
adc
adc
cmp
xchg
addl
mov
xchg
orl
test
inc
cmp
and
cmp
xchg
inc
mov
jmp
jno
jbe
gs
xchg
mov
and
lcall
sub
sahf
mov
or
fstpl
sub
pop
xor
fidivs
xor
jae
les
sub
int
sbb
push
andb
inc
push
inc
mov
pop
dec
mov
dec
jno
cmc
clc
dec
or
fsubl
stc
xchg
fidivrs
pushf
or
stc
into
mov
lcall
aad
sub
xor
dec
mov
sarb
jno
pop
sub
cld
dec
cmp
mov
pop
jg
fimull
cli
and
lret
int3
movsb
inc
lcall
sub
repz
clc
mov
sbb
xchg
lahf
out
je
scas
movsb
jg
xorb
jno
jbe
subb
stc
inc
mov
dec
adc
sub
js
out
push
mov
pop
mov
mov
and
sbb
add
aaa
push
jbe
xchg
cmp
dec
cmp
cmp
je
int3
sub
mov
push
fnsave
pop
mov
jge
cmpsb
addr16
mov
cmp
js
jne
mov
mov
outsb
mov
pop
jne
mov
jmp
xor
dec
aaa
es
push
xchg
stos
ss
xor
cld
xchg
xchg
iret
mov
sbb
sbb
and
js
dec
sub
sbbl
stc
mov
inc
iret
test
adc
shl
mov
lds
jne
dec
sbb
push
adc
mov
jl
jle
inc
loop
mov
out
or
cltd
arpl
andl
arpl
cli
fmuls
pop
xor
cmp
in
lea
ret
adc
mov
daa
iret
cmc
rorb
scas
lea
inc
imul
mov
sbb
shll
push
pushf
sub
xchg
pop
sub
cmc
sub
cmp
xor
lcall
push
hlt
and
cwtl
pusha
outsb
xor
pop
scas
mov
clc
mov
adc
es
and
adc
in
jl
rcrb
push
in
mov
out
sbb
gs
nop
mov
and
inc
push
cmp
push
xlat
cmp
add
xchg
ret
std
shlb
jl
ret
out
clc
push
pop
xlat
out
shrl
xchg
mov
fcompp
mov
jmp
add
mov
cmp
lret
in
dec
dec
pop
loop
pop
lea
scas
cmpb
xchg
push
es
test
jbe
jl
sbb
insb
testl
sub
fwait
pop
ret
and
jb
adc
out
or
pop
pusha
dec
in
inc
cmp
sarb
out
lods
push
mov
rorb
xchg
ljmp
mov
jb
push
ja
adc
dec
inc
lret
arpl
jae
outsb
cmp
std
test
idivb
adc
popa
or
push
dec
lods
ljmp
push
insb
stos
push
ret
test
out
push
lahf
jb
sub
mov
fsubrl
cmp
test
pop
cmpb
cli
dec
pop
mov
push
mov
dec
lcall
repz
fdivrs
in
lds
push
popa
aas
inc
jl
dec
ljmp
jmp
aaa
dec
and
fstps
ja
loope
andb
fs
aaa
inc
jcxz
mov
insl
jo
sub
les
insb
nop
and
jb
fdivr
out
cwtl
xchg
scas
cmovne
cltd
jno
lcall
mov
pusha
js
ja
and
sub
mov
mov
test
test
sbb
insb
sahf
ret
clc
push
push
outsb
adc
test
push
add
ror
insb
jmp
xor
shrl
dec
shll
dec
pusha
xor
outsl
pop
xlat
sub
mov
pop
push
pop
add
hlt
fcomip
in
xchg
cld
lock
xchg
js
xor
aaa
js
sub
test
inc
movsl
out
loope
cltd
mov
mov
pusha
lods
mov
in
push
test
subl
popa
sub
mov
dec
jnp
pop
pop
adc
adc
hlt
pop
pushf
xlat
sub
stc
nop
dec
imul
push
mov
push
adc
enter
mov
xor
xchg
cld
or
sub
std
cmp
pop
sbb
test
lcall
punpckhdq
adc
sahf
and
xchg
lods
mov
xchg
add
cmpsb
pop
in
mov
adc
pop
push
xor
mov
mov
jbe
cmp
xor
inc
out
fsubs
in
or
sbb
gs
xor
mov
pop
add
fdivrl
fadds
adc
int3
lds
mov
and
add
data16
pop
int3
sbb
pop
and
push
enter
ret
movsl
into
outsb
add
jae
iret
daa
push
xchg
cmp
inc
xorb
jnp
pop
sbb
ds
push
repz
std
leave
push
cmp
mov
xlat
shrb
adc
in
xor
mov
mov
xor
jge
cmpl
outsb
mov
lock
mov
cmp
mov
mov
xchg
ds
fucomi
push
pop
js
ljmp
in
or
mov
pop
sahf
or
lahf
jmp
rcl
sub
sub
outsl
mov
fwait
dec
dec
std
or
jmp
mov
mov
negb
jb
cwtl
lock
pusha
adc
loop
xchg
fists
pop
shr
imul
outsl
in
nop
adc
adc
test
add
adc
mov
and
xchg
cmp
test
jae
pop
adc
aaa
pop
repz
mov
cmp
lahf
push
ja
add
enter
cmpsb
repz
sbb
adc
cmp
pop
adc
lods
pusha
jb
sub
jecxz
scas
push
aad
mov
adc
dec
adc
std
jl
xchg
or
test
aaa
leave
in
sub
pop
pop
es
imul
add
cmp
hlt
ret
daa
and
bound
nop
popa
nop
adc
mov
push
mov
fnstenv
sub
xor
xorl
popa
xor
jl
shlb
pop
cli
addr16
shl
cmp
add
or
dec
xchg
jmp
adc
cmpsl
pusha
mov
cltd
sbb
les
inc
ss
or
ffree
bound
popf
sub
popf
push
inc
sbb
pushf
jle
nop
rol
fisubl
in
addr16
lods
std
push
add
dec
orb
add
jecxz
push
hlt
rcrb
repz
rcll
rcrb
icebp
add
cmp
fcomps
sbb
mov
jnp
rcrb
mov
orl
lock
outsb
xlat
movsb
mov
pop
mov
sahf
xlat
popf
stc
jae
mov
ret
push
mov
ret
jecxz
pop
pop
xchg
push
push
push
popf
jae
scas
jle
out
movsl
xchg
xchg
loopne
in
push
sub
cld
jecxz
test
test
hlt
aad
repnz
inc
or
outsl
mov
jnp
popf
ja
in
lret
leave
into
pusha
loop
test
pop
hlt
jmp
out
jp
jmp
push
call
mov
adc
lods
cmp
mov
pop
popa
std
rcll
and
xchg
jmp
add
push
push
add
sub
add
lret
add
rolb
lds
xor
mov
or
or
repz
inc
mov
sub
repnz
mov
pop
bound
push
mov
aaa
test
or
aas
cmc
mov
mov
js
push
cli
aad
jecxz
test
test
mov
negl
adc
adc
dec
lods
mov
sub
in
les
es
out
into
stc
imul
rorb
clc
jno
mov
aad
xor
jg
test
xchg
inc
sub
test
imul
sub
cmp
icebp
jg
inc
mov
add
jp
adc
rclb
inc
jmp
lret
imul
add
dec
jge
icebp
mov
push
pop
inc
lahf
shrd
push
or
cmpsl
in
cs
xchg
les
add
pop
adc
sbb
jle
out
adc
enter
dec
xchg
xchg
dec
or
outsb
xorps
mov
push
imul
fcoms
fsubl
and
sbb
xchg
cmc
shlb
sbb
push
sub
lahf
js
and
mov
shll
mov
stos
xlat
pop
jl
aam
adc
pusha
inc
stos
je
leave
adcl
sub
lahf
dec
push
cmpsb
dec
cltd
data16
and
in
mov
mov
pop
lods
cmp
jb
arpl
mov
lret
pop
test
or
out
jae
fildll
and
xchg
lock
mov
imul
notb
in
push
xchg
fadds
cmp
test
cmpb
fsubr
push
nop
repz
xor
lods
div
pusha
fimuls
jecxz
pop
std
dec
enter
mov
lret
pop
andl
repz
jae
shl
aam
inc
les
inc
data16
int3
cmc
shll
inc
pop
xor
sbb
and
sbbb
xchg
sarl
pop
fwait
pop
push
repnz
imul
arpl
mov
les
jb
add
mov
mov
popf
in
out
sti
mov
and
cli
hlt
mov
push
int3
lods
aas
mov
outsb
outsl
xchg
xlat
rcl
push
sbb
dec
adc
ds
sub
scas
shrb
mov
sub
pop
insb
pushf
jg
push
adc
sbb
xor
imul
inc
xor
fistpl
inc
cli
and
xchg
xor
add
push
test
gs
jnp
and
push
out
fmull
bound
rclb
stos
dec
xor
lret
dec
stos
loope
mov
enter
pxor
loope
mov
and
pop
sbb
test
jae
jg
aad
hlt
mov
cmpsl
mov
lods
xchg
cld
dec
xor
pop
mov
push
hlt
std
xchg
fimuls
and
xchg
repz
xchg
xchg
lock
mov
loope
jg
adc
mov
push
lea
add
lds
xor
sbb
mov
andl
pushf
arpl
stos
cltd
jbe
push
sub
jg
cmp
push
inc
out
xor
adc
xchg
fs
inc
dec
pop
mov
leave
lods
shll
fs
adc
call
aad
fcmovb
ret
clc
push
cmp
scas
imul
gs
bound
test
filds
push
add
imul
leave
mov
pop
not
test
or
fists
add
mov
add
sarb
fstp
add
cmp
sub
shl
xchg
mov
xor
gs
ss
cmp
out
add
add
ljmp
lods
lds
jle
pop
clc
fisubrs
ret
or
or
or
mov
fidivs
jmp
mov
push
lret
push
inc
mov
pop
and
add
xchg
pop
inc
cld
test
xor
pop
pop
push
mov
ss
pop
push
xor
je
push
inc
incb
cmp
mov
xorl
xchg
cmp
inc
pop
aaa
cmp
inc
mov
je
lea
fisubl
jle
sub
cs
pop
or
push
xchg
pop
pop
adc
ret
pop
sti
mov
fstpl
xor
inc
out
xor
js
dec
aaa
fnop
mov
mov
cmp
iret
ss
daa
xor
ljmp
test
sahf
adcb
cmp
xchg
mov
outsb
dec
jp
inc
adc
and
lret
sarl
mov
inc
add
jmp
sahf
push
push
mov
and
xchg
ret
lcall
pusha
out
repnz
subl
pop
and
repz
jo
jo
insb
xchg
sub
mov
push
mov
lahf
in
in
adc
insl
xor
jmp
inc
xor
ds
lcall
and
pop
add
pop
in
xchg
inc
and
push
push
mov
and
mov
sti
sbb
bound
js
cmp
es
fisubrl
xlat
ucomiss
sbb
std
daa
xchg
mov
sbb
stos
popa
insl
les
mov
iret
sahf
popa
shlb
dec
xchg
mov
xchg
mov
xchg
fwait
dec
dec
sub
mov
in
scas
in
call
cmp
jg
cld
mov
lahf
loopne
mov
imul
cltd
pusha
inc
mov
mov
lds
mov
lods
xchg
and
pop
in
add
in
lds
push
fcomi
outsb
fstpl
mov
cmp
mov
pop
loope
jmp
jno
sub
fdivr
jge
daa
loop
and
adc
fdivr
jae
dec
addr16
push
jne
sti
pop
orl
sarl
test
jae
cmp
scas
pop
pop
inc
pop
jno
lret
pop
arpl
mov
add
roll
sub
cmp
cmp
lods
loope
bound
mov
adc
clc
nop
sbb
das
cmp
push
push
iret
jo
xor
setge
bound
fnsave
icebp
andl
push
jmp
mov
xchg
sub
dec
pusha
sbb
cmpl
mov
insb
pop
jae
js
cmpsl
std
rcr
and
vprotb
xchg
movsl
xchg
jmp
push
jmp
cld
movsb
stos
fisttps
mov
sbb
xchg
and
inc
popa
sub
test
inc
and
push
cmpb
cmc
inc
adc
sub
stos
fdivl
rorl
fwait
push
pop
mov
out
ficomps
cld
xchg
stos
mov
fisttpl
cli
mov
inc
adc
lock
or
mov
movsb
test
xchg
cmp
push
or
dec
lds
in
cmp
xor
clc
inc
pop
loop
test
or
push
shlb
xchg
jg
rol
add
in
ret
mov
sbb
push
push
adcl
mov
sub
xchg
fcoms
mov
lcall
jge
cmc
inc
es
dec
ret
push
and
enter
pop
adc
xchg
mov
xor
lock
dec
mov
xchg
cmpsl
jb
inc
push
pop
sub
insl
cli
mov
cmpsb
sub
scas
push
jmp
mov
mov
mov
fsubl
mov
inc
outsb
sbb
mov
test
jl
popf
push
mov
rcl
pop
gs
and
divl
fisttps
xor
inc
sub
push
ret
or
call
repz
popa
push
fists
sbb
xor
ret
mov
add
rcrl
ljmp
jbe
scas
outsl
insb
aam
ds
add
xor
je
xchg
call
lret
xlat
mov
xchg
mov
ja
push
sti
mov
mov
push
inc
xor
or
mov
pop
xor
or
inc
inc
sbb
push
mov
mov
sahf
or
outsl
insb
sub
sahf
lret
cmc
pushf
test
ret
test
ret
jno
pop
iret
mov
mov
add
jae
negl
cmc
jns
sbb
pop
lods
dec
dec
lods
xor
sbb
or
rorb
call
ss
arpl
mov
mov
sub
leave
ss
xor
lcall
push
xor
push
aad
test
fstl
les
clc
xor
adc
in
mov
divb
out
call
popa
push
nop
nop
add
pop
lret
int
enter
in
outsb
sub
mov
pop
in
or
mov
inc
aad
jge
nop
ret
movsl
insl
mov
adc
jle
and
outsl
stos
je
pop
dec
popa
je
sub
pop
push
and
jb
inc
add
cltd
in
ret
and
pop
jae
out
scas
pusha
insb
mov
pop
push
icebp
int
mov
aaa
lret
dec
push
fs
or
hlt
insl
or
iret
mov
fldcw
sub
push
mov
mov
cmp
js
sub
movsl
jae
inc
dec
or
cwtl
mov
xor
stos
je
sub
adc
push
lds
roll
mov
cmp
jecxz
pop
es
sbb
aam
dec
adc
sbb
pop
adc
test
stos
test
jp
lds
xor
in
lods
cmc
mov
pop
imul
xchg
lea
stc
mov
ja
jae
jbe
jmp
dec
push
push
rolb
mov
cmc
mov
lahf
jle
test
pop
fidivrl
xor
popa
test
mov
sbb
jo
daa
test
pop
and
roll
add
sub
data16
push
cli
out
mov
hlt
cmpl
sbb
lods
addr16
adc
inc
xlat
xchg
dec
sub
int
iret
ret
jno
ss
in
cs
jns
out
out
scas
shrl
mov
icebp
xor
and
sbb
jg
frstor
dec
dec
sbb
and
push
int
mov
es
jb
outsl
and
in
lock
dec
mov
push
cs
mov
push
das
scas
inc
jns
push
or
or
add
pusha
sbb
xchg
sbbl
iret
and
lret
push
jl
push
test
xor
sar
lret
mov
sbb
dec
push
mov
cwtl
idivb
xlat
add
and
jle
pop
repnz
lds
test
jecxz
arpl
xor
mov
pop
xchg
int
mov
sbb
fcompp
dec
ja
lock
mov
jae
sub
cmp
or
push
sub
mov
mov
out
mov
shrl
shl
into
out
cmpsb
xchg
push
inc
jge
dec
ss
dec
push
mov
xchg
mov
or
xchg
xor
xor
aam
cmpsb
lock
cs
push
call
jno
in
cmpsb
mov
xchg
loope
mov
cmp
notl
push
pop
pop
adc
addr16
test
xor
sub
mov
popf
rcrl
cmp
add
ds
ret
cmp
xor
daa
pushf
jl
test
fldt
xchg
mov
test
arpl
inc
scas
or
pop
pop
cmp
xor
lods
and
adc
rorl
ret
mov
orb
push
inc
loope
push
lahf
or
mov
xchg
test
in
out
cmp
xchg
xlat
add
popa
lock
xchg
dec
aam
xchg
dec
xchg
push
mov
imull
test
mov
jg
mov
sub
or
es
jo
popa
inc
xlat
fdivs
test
or
mov
pop
mov
js
ret
in
pusha
jp
test
fbld
dec
hlt
cmp
mov
inc
mov
fsubl
loop
js
dec
js
call
pop
push
fidivs
mov
int
push
mov
cmp
popf
sub
pop
dec
or
mov
shll
xor
jle
sbb
pop
and
clc
add
mov
clc
mov
inc
sbbl
popf
into
mov
fistpll
pop
sbb
mov
sub
jg
mov
out
xchg
mov
and
xor
xchg
pop
inc
mov
pop
mov
shl
out
sub
pop
xor
pop
mov
adc
adc
std
push
mov
stos
sbb
and
sarb
mov
jge
je
push
icebp
mov
push
xchg
lods
push
aam
mov
push
jo
mov
mov
pop
push
sahf
addl
mov
push
sbb
fimull
fisttpll
cmp
cs
mov
dec
push
push
jp
sbb
in
cmp
inc
int
sbb
js
mov
xor
xchg
stos
mov
mov
jle
xlat
dec
stc
push
mov
or
sub
es
cmpb
adc
xchg
xor
adc
cmpsl
lahf
sub
mov
mov
inc
testl
push
fnstenv
aas
xor
inc
cmp
cmp
jg
add
inc
ja
lret
pop
jo
lcall
inc
test
adc
lea
in
dec
dec
stos
jns
out
jge
mov
pop
or
jne
rolb
rclb
or
in
fimull
jg
push
mov
out
pop
or
mov
sti
mov
inc
xchg
xor
push
mov
mov
adc
push
addr16
jo
cmpsb
cmp
leave
loop
sbb
into
daa
dec
xchg
mov
mov
sarl
add
dec
lock
lahf
xchg
push
xchg
stc
lcall
cwtl
call
inc
fistps
ret
jnp
fnstenv
lds
push
mov
mov
movl
int
cmp
dec
adc
in
cmp
jp
scas
jne
push
inc
lcall
hlt
add
or
addr16
in
out
mov
add
xor
cmp
mov
lea
stos
lea
movsl
test
xlat
fisubs
xor
aaa
jmp
pusha
pop
or
lock
jb
fcmovbe
popa
aad
xor
push
mov
mov
adc
mov
orb
mov
jecxz
loopne
in
test
mov
stos
mov
or
mov
cltd
mov
stc
pop
push
xor
cmp
xchg
lods
inc
xor
lea
cltd
lcall
sbb
and
and
xchg
cmp
rcrb
fisubrs
xchg
adc
xlat
or
sbb
leave
jb
sub
jg
xchg
cmpsb
aam
ljmp
mov
inc
int3
push
shr
push
adc
clc
stos
insb
or
pop
shl
adc
cwtl
dec
dec
scas
test
lock
mov
jge
mov
pop
jp
imul
shlb
lds
xchg
lock
mov
mov
fs
mov
sbb
jg
mov
and
aad
or
test
leave
or
filds
pop
adc
into
mov
mov
cmpsb
xorb
ds
pinsrw
pop
cltd
push
out
int
xchg
mov
dec
hlt
jb
std
pop
shll
arpl
inc
cmp
cltd
mov
cmp
in
cmp
ficompl
xchg
adc
test
scas
les
pop
adcl
mov
test
add
inc
inc
je
imull
xor
jecxz
aas
mov
je
pusha
out
xchg
movsb
adc
dec
test
pop
fs
imul
mov
repz
xor
push
fdivl
sub
stos
in
or
movsl
adc
xchg
stc
lds
je
inc
daa
fxch
or
jg
imul
dec
rolb
je
dec
mov
shrb
aaa
cmpsl
push
add
adc
sahf
stc
ror
mov
inc
lods
sub
jnp
sub
ret
or
sbb
pop
lcall
stc
cmp
sub
je
inc
arpl
xor
loope
rcrb
fdivrl
jmp
push
aas
out
sub
fimull
jae
movsl
jne
in
pop
daa
shl
sub
push
nop
lcall
cltd
xchg
inc
adcb
xor
pop
sbb
push
sub
xor
out
sbb
mov
test
xor
aas
cli
push
aam
rorl
repz
div
jb
xchg
je
daa
sub
sub
and
sbb
lret
cmc
pop
jae
dec
arpl
fs
aad
adc
add
stos
pop
clc
aad
dec
negl
test
mov
push
dec
mov
js
sbb
mov
sbb
inc
or
shl
mov
sbb
jecxz
inc
mov
lock
je
cmp
sbb
inc
or
sbb
mov
sbb
jl
dec
sbb
lcall
repnz
dec
push
pop
mov
shlb
adc
inc
xchg
insb
push
add
inc
inc
jb
add
ret
loopne
and
push
xchg
sub
cmpl
mov
lock
fsubrp
data16
sbb
adc
mov
mov
push
in
push
out
xchg
pushf
xchg
sbb
inc
inc
ficoms
xor
cmp
fistpl
leave
mov
fsubrs
sti
mov
mov
or
stos
pop
cmp
inc
test
jl
data16
pushf
mov
stc
cmp
jecxz
filds
cmc
lods
insb
hlt
dec
xor
adc
mov
push
push
pushf
ds
daa
loope
lods
jno
inc
and
or
shll
fiaddl
es
dec
arpl
mov
add
sub
iret
cmp
rcr
sbb
sub
mov
xor
ja
or
xchg
mov
stos
sub
pop
mov
jecxz
inc
jmp
ret
pop
or
mov
outsl
xchg
jp
dec
in
mov
sbb
pop
sub
pop
jmp
in
sbb
movapd
sbb
fs
pushf
sub
xchg
push
in
jp
mov
pushf
mov
and
in
lods
mov
lods
pop
lock
jae
xor
cwtl
jae
test
cmp
dec
or
dec
mov
loopne
pop
aaa
cld
mov
adc
dec
repz
ds
mov
dec
fidivrs
sub
sbb
ljmp
add
inc
or
imul
cmp
pop
xor
or
aam
jmp
cmp
fs
repz
sarl
sub
mov
shll
or
scas
stos
push
xchg
dec
shrb
inc
fstps
jae
xchg
scas
fadd
insl
pop
cmp
fs
dec
fistpl
xchg
aad
fistpl
int3
and
les
cmp
dec
xchg
xchg
fiadds
scas
jmp
add
insl
shr
mov
pop
xor
mov
out
adc
ss
nop
ljmp
push
push
mov
jne
sub
hlt
mov
and
add
movsl
and
and
add
cltd
fidivl
sub
pop
fdivrl
mov
xchg
js
nop
outsl
add
insl
mov
xchg
aad
out
loop
mov
pop
dec
arpl
and
int
mov
mov
and
test
pusha
push
mov
jp
sub
rcr
lock
sti
iret
and
dec
icebp
jne
jbe
sub
inc
xor
in
dec
mov
mov
and
sbb
call
in
dec
inc
aas
fs
pop
xor
or
cmpsb
sahf
xor
dec
push
jg
test
popf
stos
scas
sti
call
aam
movsb
and
jnp
bound
dec
pop
mov
sti
loopne
int
and
fidivs
pop
or
mov
iret
and
cmp
test
pop
push
cmp
add
and
repz
push
inc
mov
jbe
add
bound
iret
sub
ret
inc
jl
popa
in
movsb
cmpsl
in
cmp
loope
pop
xor
inc
inc
and
out
test
andb
dec
cld
cmp
pop
hlt
mov
push
xor
mulb
movsb
adcl
sub
fcompl
sub
lds
mov
inc
xchg
add
imul
dec
xor
add
pop
cs
outsl
lcall
dec
stos
add
inc
jge
jp
mov
pop
mov
pop
pop
adc
pop
sbb
or
cmpsl
xor
int
into
cmp
lock
into
add
adc
adc
fmull
sbb
sub
ret
jmp
repnz
jns
add
sub
test
loopne
xchg
sub
and
jmp
icebp
xchg
add
xchg
mov
fcomps
inc
in
or
sub
or
sub
ljmp
xor
jbe
stos
in
pop
rclb
stos
xchg
sahf
nop
out
sbb
gs
and
add
fisubl
cmp
xor
sub
clc
jb
test
sub
test
arpl
dec
xchg
pop
push
loope
sbb
out
push
cmp
adc
xor
rorb
cld
daa
hlt
mov
idivl
aad
push
inc
aas
add
cmp
adc
pop
sbb
iret
aam
cli
or
decb
sub
fcmovne
aaa
shrb
push
popa
and
cmp
inc
or
rcll
mov
cmp
inc
aaa
dec
sbb
fdivr
mov
xor
sbb
fwait
mov
jp
sbb
pop
test
in
inc
movsl
hlt
pop
sbb
mov
inc
mov
lds
jge
mov
int3
fdecstp
mov
stos
or
mov
out
scas
rcll
lret
cmp
mov
sub
mov
fimuls
push
sub
pop
js
ret
push
cmp
frstor
sbb
dec
out
icebp
addb
pop
cmpsl
cmp
int3
out
sbb
inc
mov
mov
mov
inc
mov
push
push
movsl
xchg
movsl
sti
jp
pop
mov
sbb
aaa
dec
enter
rorl
sti
arpl
and
pop
fdivrl
push
jne
push
or
xchg
push
lahf
pop
mov
cmp
dec
push
ds
dec
subl
ret
push
sarb
cmc
sub
lret
mov
xchg
adc
sub
pop
xor
pop
test
ljmp
pushf
idiv
das
dec
mov
mov
scas
out
inc
scas
fildl
jl
xchg
sbb
loope
cli
jno
jns
lret
sbb
fs
jp
jns
pop
aam
mov
test
sbb
sub
lret
jbe
imul
mov
clc
scas
rolb
aam
mov
call
testl
enter
mov
dec
lahf
arpl
lock
mov
adc
sbb
mov
mov
lods
addr16
pop
xor
cmp
aad
mov
xchg
jbe
rolb
adc
mov
dec
dec
jb
lods
push
cmp
dec
aad
loopne
xor
push
xlat
xchg
dec
mov
lret
popa
paddd
jae
xor
mov
aas
lahf
outsb
out
push
sub
lahf
inc
cltd
or
and
pop
dec
xchg
in
cmp
sahf
je
outsb
cmp
fdivl
stc
shrb
mov
clc
je
and
push
jmp
out
stos
mov
mov
inc
imul
mov
adc
push
xor
dec
sub
aaa
test
and
push
xchg
push
stos
in
pop
sub
loop
mov
or
nop
and
in
xchg
mov
inc
mov
stos
jmp
or
push
adc
xchg
shll
sbb
shr
jmp
adc
cmp
das
push
enter
sbb
jbe
aad
mov
and
idivb
dec
inc
fwait
mov
xchg
mov
mov
adc
pop
inc
jo
mov
hlt
mov
mov
fcmovnu
cmp
push
and
je
aam
inc
and
sbb
mov
test
lods
lea
sti
sbb
mov
dec
rclb
mov
adc
int
enter
jnp
addr16
clc
mov
add
repz
cmpsl
xchg
add
bound
mov
lcall
mov
mov
stos
or
jp
xchg
inc
cmp
xlat
cmp
or
cmp
insl
push
in
ret
scas
pop
in
test
clc
leave
cld
jnp
xchg
push
or
inc
pusha
daa
xor
dec
movsl
scas
hlt
insl
in
ffree
das
les
mov
add
je
cmp
mov
jnp
dec
popf
jo
mov
imul
cmp
dec
les
and
mov
in
cli
jo
or
in
ret
leave
pop
adc
aam
outsl
sbb
in
pop
and
or
or
sbbb
jns
fwait
sbb
stos
sub
dec
pop
xchg
arpl
sahf
sub
push
hlt
mov
sub
xchg
xor
shll
dec
push
sbb
or
das
arpl
xor
data16
adc
cld
xor
ret
popf
loop
sti
fdivl
jmp
mov
xor
ja
inc
rol
and
mov
push
dec
mov
xor
adc
inc
mov
push
dec
adc
push
push
xchg
arpl
sub
dec
movb
sub
out
das
dec
push
cmp
and
jb
test
sub
les
stos
add
cmp
sub
and
sub
cmc
add
inc
sahf
jno
mov
sbb
mov
inc
faddl
or
fimull
ds
in
pop
pusha
lods
add
ret
sub
int3
mov
xchg
imul
mov
int3
mov
adc
mov
mov
enter
jno
hlt
xchg
sti
mov
sub
in
mov
shll
cmpsl
arpl
pop
and
arpl
aam
push
mov
out
mov
imul
ds
add
pusha
push
in
fcoms
sub
loop
lret
xor
xchg
add
jnp
cmp
inc
and
dec
inc
add
sahf
lods
mov
pop
div
xor
js
fcoms
lods
inc
mov
cmp
mov
ss
inc
leave
mov
xlat
add
aad
pop
imul
aam
push
push
cltd
xchg
jecxz
cmpsb
add
pop
fcmovu
dec
adc
xor
mov
lcall
std
inc
cmp
aad
pop
das
pop
or
pop
testl
mov
movsb
xchg
test
cli
fimuls
lods
insb
ss
xchg
pop
mov
scas
std
sar
inc
cmp
clc
addr16
xor
clc
cmpsb
and
jg
dec
push
or
into
xor
pop
mov
jb
imul
lods
xor
faddl
mov
imul
jb
inc
stos
imul
testb
sbb
jo
lahf
adc
or
aam
ljmp
ret
enter
fidivrs
xchg
stc
pop
push
inc
xchg
sub
das
mov
cmp
das
and
test
adc
xchg
insl
push
test
fstl
ss
push
push
adc
int3
xchg
cmpb
shll
scas
mov
mov
push
fisttps
adc
xchg
imul
push
test
sbb
pop
fwait
jnp
jo
xchg
jp
lea
aaa
mov
jmp
pop
ror
cmp
repnz
pop
out
jne
lods
push
lds
stos
sub
mov
int3
into
pop
ret
xchg
test
pop
xchg
push
and
lods
inc
test
sbb
cltd
mov
arpl
sbb
cmp
and
push
inc
sbb
mov
rcrb
jbe
icebp
cmpsb
cmp
pop
sarb
mov
hlt
lock
pop
fwait
outsb
out
cwtl
icebp
es
fisttpl
cmpsl
jns
xchg
loopne
push
in
out
adc
push
sbb
repz
and
push
or
daa
mov
sbb
or
pop
cmp
cmovs
dec
ss
cmp
cmp
mov
cld
lcall
orb
inc
sti
andb
jp
push
sub
ret
mov
addr16
push
cmp
lcall
cmp
stos
xchg
inc
std
mov
xchg
lea
mov
or
push
dec
sbb
flds
jb
adc
or
popf
aaa
pop
add
popa
dec
pop
jo
push
ret
xor
sub
int3
clc
sbb
sub
out
fsubs
pop
mulb
dec
rcr
lret
jnp
popa
xchg
or
xchg
mov
and
fsubrl
adc
dec
scas
sbb
fsubs
add
adc
xchg
cmpsl
ljmp
sbb
mov
xor
int
in
xchg
inc
or
lds
daa
jb
ficoms
movsb
into
pop
lret
in
xchg
cld
test
push
mov
jae
xchg
ljmp
cwtl
ja
sbb
mov
leave
and
inc
mov
dec
and
pop
add
filds
inc
and
jb
nop
sbb
xchg
jge
adc
sub
sbbl
lds
outsl
push
cmp
loope
dec
test
fldcw
fiadds
insb
xchg
mov
mov
lods
lcall
mov
sub
iret
outsb
imul
fwait
and
and
ja
out
into
cltd
mov
loope
addr16
cmp
lods
call
imul
ficompl
add
sbb
jb
pavgb
pop
insl
subl
cli
adc
mov
out
inc
fstp
jle
test
dec
sub
push
cld
divb
pop
or
ds
jg
cmpsl
test
das
lahf
mov
imul
mov
and
jbe
cmp
movsb
call
cmp
sti
mov
loop
push
call
cmp
jo
les
in
inc
add
lock
and
or
popa
push
repz
adc
arpl
xchg
dec
mov
outsl
and
addr16
shrl
ret
push
scas
push
adc
test
lock
mov
xchg
add
mov
or
ror
movsb
push
jns
push
aad
jnp
sub
ret
lea
pushf
hlt
mov
lret
fcoml
cwtl
cmp
adc
nop
adc
or
fnsave
sub
pushf
stc
cwtl
sbb
push
loopne
test
cmp
sti
ds
mov
sub
outsb
xchg
dec
and
sbb
dec
bound
inc
imul
or
in
push
mov
pop
push
js
pop
xor
mov
clc
icebp
mov
in
xchg
pcmpeqw
mov
jp
icebp
fmull
pop
adc
push
inc
notb
mov
pop
sti
mov
and
inc
lea
fstpt
cwtl
push
xor
out
mov
push
adc
sbb
mov
inc
es
xor
pop
adc
imul
xchg
pop
mov
xor
in
inc
add
jno
movsb
aam
loopne
jmp
and
push
mov
rclb
and
dec
sbb
adc
dec
ret
rcr
daa
out
cmp
cmp
sbb
jo
mov
mov
xlat
and
les
ffree
sub
subl
mov
stc
inc
mov
dec
addl
pop
sar
add
fistpll
ficompl
cmp
outsl
iret
movsl
xor
mov
xchg
push
xor
popf
push
pop
ret
insb
inc
jne
or
sahf
and
pop
clc
jg
push
adc
imulb
lcall
lea
stos
xchg
mov
xchg
mov
jp
loope
test
adc
adcl
in
sub
cmp
loopne
or
div
lock
cmp
and
popf
lret
pop
std
push
stos
mov
dec
and
js
xor
pop
jno
pushf
mov
test
das
inc
jns
xor
jge
repz
fldt
rcrl
lds
testb
popf
call
cmp
and
pop
mov
ss
popf
pop
inc
add
sti
stos
mov
add
pop
mov
aam
or
popa
and
arpl
add
out
shlb
inc
int
popa
push
inc
pop
add
aad
xchg
imul
addr16
mov
cmp
mov
mov
lds
add
arpl
icebp
out
adc
mov
push
add
stos
je
mov
sub
mov
cmp
shrb
in
mov
ljmp
ror
xor
pushf
pop
mov
mov
test
test
icebp
mov
pop
fstpl
aam
xor
outsb
push
sbb
xrelease
dec
fwait
dec
mov
or
and
xchg
sti
xor
movsb
cmp
inc
pop
outsb
shrl
dec
aad
adc
jno
shll
enter
pop
ret
cmp
arpl
mov
sahf
negl
adc
adc
mov
adc
jns
xchg
dec
push
cmp
jecxz
mov
test
inc
decb
pop
xchg
sbb
xchg
and
jle
push
cmpsl
into
repnz
and
daa
inc
ret
nop
push
arpl
mov
in
cmp
std
mov
adc
inc
mov
add
push
repnz
dec
mov
mov
stos
mov
cmp
arpl
in
cmc
push
pop
inc
xchg
xor
inc
pushf
inc
faddl
stos
xlat
and
fidivrl
adc
pop
ljmp
lahf
and
addb
pop
stc
arpl
js
dec
xor
movsb
push
or
pop
mov
bound
rolb
mov
push
dec
loopne
and
sub
xor
out
repnz
adc
cmp
xorb
cmpsl
ss
jl
ficoml
fsubr
lret
jmp
lds
int
sub
push
addb
mov
pop
add
push
or
push
push
push
sbb
pop
xor
iret
addb
sbb
les
cmp
pop
arpl
cmc
repz
push
pop
loopne
push
xchg
sub
add
std
inc
adc
jne
pop
iret
add
mov
sbb
jecxz
xor
in
ljmp
add
repnz
add
xchg
cmp
stos
movsb
xchg
dec
in
add
push
ja
int
sub
jl
inc
les
insl
jns
and
and
cli
push
mov
add
inc
xchg
cli
pop
pop
cmpsl
dec
sbb
int
inc
mov
jno
or
jno
enter
imul
ja
in
into
lods
jns
mov
jae
in
stos
mov
jecxz
pop
xor
fs
ss
es
mov
dec
mov
cmp
jno
and
call
cs
daa
aaa
or
lea
fsubl
xor
jo
fbld
xorb
push
in
pop
adc
mov
xchg
fists
cwtl
fcoms
leave
xlat
andb
arpl
loop
mov
leave
dec
arpl
imul
mov
inc
jne
mov
std
jne
arpl
aaa
dec
cmp
mov
out
repz
push
inc
scas
xchg
pop
or
imul
xchg
out
push
jns
arpl
add
loopne
cmp
arpl
cli
sub
sbb
cmp
rolb
dec
fcompl
mov
std
loopne
pop
cmc
or
xchg
or
mov
sub
test
out
icebp
jge
jne
mov
inc
jmp
and
in
cmp
xchg
mov
lea
test
cltd
mov
mov
mov
out
sub
fisubrl
gs
fcoms
xchg
enter
es
mov
negl
xor
jge
out
scas
cmp
lds
jne
xor
sbbb
xchg
xor
insl
sbb
pusha
push
arpl
dec
out
in
out
in
dec
push
push
lods
fldl
cmp
xchg
arpl
sarb
mov
lret
sub
jns
sub
movsb
imul
ret
fsts
sub
xor
lret
icebp
add
arpl
jae
jge
and
push
inc
sub
scas
std
xor
dec
out
mov
xchg
mov
cmp
adc
cmp
lea
mov
push
inc
cmp
loope
leave
sbb
adc
loopne
and
mov
ja
push
xor
jb
jne
mov
sub
adc
jne
ret
lea
sti
cltd
xor
mov
cmp
out
or
jns
je
js
or
loop
cmp
scas
xor
push
inc
mov
mov
andb
fcoms
pusha
mov
mov
out
fwait
lret
fsts
out
imul
push
or
out
pop
push
inc
ret
push
jnp
testl
notb
push
mov
adc
sub
mov
mov
jmp
fstl
dec
rcl
cmpsb
mov
bound
pop
scas
aaa
out
sbb
jecxz
pop
stos
add
mov
sub
int
mov
in
repz
loope
adc
pop
xor
hlt
mov
in
lea
stos
mov
and
lcall
fs
jp
jns
popf
mov
lret
cmpsl
and
loopne,pt
dec
fildll
imul
pusha
mov
hlt
pusha
fwait
push
call
inc
scas
test
mov
or
hlt
repnz
movsb
pop
es
lahf
int
mov
out
ja
enter
lret
repnz
rcll
andb
test
push
cmp
mov
aam
lret
ret
push
ret
mov
inc
out
sbb
cli
int3
push
push
pop
mov
pop
cli
pop
sbb
lahf
enter
fsubs
inc
loope
xchg
adc
cwtl
xchg
jo
dec
movsl
mov
fsubs
push
repz
mov
sbb
add
loopne
shrl
aad
ljmp
es
and
cmp
push
push
sbb
adc
lds
fsubrs
data16
lods
inc
pop
pop
daa
ret
cmp
in
out
fisubrs
pushf
adc
pusha
jecxz
xor
pop
mov
dec
mov
inc
lock
or
in
mov
adc
pop
movsl
inc
cli
test
fbstp
in
mov
aaa
adc
adcb
hlt
pop
adc
inc
and
push
inc
scas
adc
inc
movsb
dec
test
sub
jnp
mov
sub
pop
push
lds
pop
gs
fcoms
pop
inc
cs
test
test
xchg
mov
adc
mov
popw
jge
mov
xchg
outsl
nop
xchg
jmp
pop
mov
incl
test
outsb
inc
lods
jg
mov
xor
xor
cmpsl
daa
daa
sbb
cmp
mov
jae
adc
rclb
aam
jg
and
inc
dec
cmp
pop
jle
lret
and
out
mov
ljmp
dec
stos
sub
inc
test
lcall
popa
xchg
dec
xor
sub
cmpsl
data16
addr16
sarl
imull
jp
int3
sbb
enter
lock
add
cmpsb
xor
and
mov
call
jle,pn
fistl
int
lret
push
push
adc
lret
push
adc
or
daa
sbb
jb
xchg
mov
lahf
jl
xchg
lods
fstp
jnp
xchg
stc
cmpsb
xor
push
lds
pop
fstps
sbb
ret
mov
outsb
mov
pusha
out
rclb
lods
jp
inc
jl
xor
push
push
xlat
cs
mov
xchg
test
add
outsb
loop
imul
mov
fists
cltd
xlat
mov
stc
test
xlat
push
repnz
ss
pop
jecxz
stos
xlat
pop
mov
jbe
xor
mov
lea
sbb
ret
or
loope
scas
in
adc
loope
adc
repnz
fisubrs
lock
jns
add
mov
adc
rcll
fs
sahf
add
jmp
sbb
push
jmp
inc
pop
dec
mov
bound
push
mov
enter
sub
pop
jle,pt
bound
dec
pop
dec
testl
push
imul
lahf
fnstcw
mov
lret
add
loopne
dec
mov
mov
ja
call
jl
mov
enter
xor
push
scas
shlb
xchg
cmpsb
dec
outsl
lret
sbb
mov
xchg
loop
or
sbb
ret
out
add
lods
ds
sbb
and
dec
adc
lret
or
inc
iret
shl
pop
pushf
paddb
fmull
pop
popf
mov
enter
fisttps
pop
cmp
adc
stos
sbb
mov
cli
xorl
xchg
mov
push
add
stos
mov
xchg
xchg
loopne
jno
data16
into
pusha
mulb
ficompl
push
or
cmp
repnz
jb
jge
or
push
aad
jo
jecxz
je
loopne
clc
or
popf
inc
leave
jns
mov
cmp
mov
xlat
push
fcmove
lret
mov
jb
xchg
lds
push
adc
mov
jno
xor
or
add
lods
jmp
adc
leave
icebp
mov
mov
loope
mov
mov
mov
adc
pop
out
ds
repnz
es
mov
dec
sbb
xor
inc
ret
xchg
icebp
rcrl
mov
iret
sub
mov
cltd
iret
fdivr
push
inc
out
divl
sub
pop
jp
sti
sahf
in
movsb
adc
in
sar
clc
lods
fists
mov
xchg
jne
leave
les
rolb
sub
xchg
jecxz
cmc
js
fnstcw
adc
jp
mov
xchg
xchg
enter
mov
pop
icebp
dec
int
mov
sbb
push
data16
and
scas
sub
cmpsb
ds
decb
gs
lods
ret
nop
adc
fistps
insb
mov
fwait
enter
adc
pop
or
jg
lahf
fldenv
pop
and
xchg
jp
les
cmpsb
adc
inc
cmp
ljmp
aas
imul
mov
es
fsubs
inc
subl
jmp
cmpb
push
dec
into
ret
in
aam
jo
jnp
mov
sbb
pop
inc
push
adc
aam
ja
adc
mov
cmpb
xchg
jle
dec
sbb
mov
mov
jbe
inc
imul
jns
push
arpl
das
shrl
negl
pop
sbb
pop
loope
stc
pop
sbb
pushf
pop
int
sbb
push
jle
fs
mov
jo
xchg
mov
cmp
cs
mov
in
loopne
movsl
sbb
iret
mov
mov
out
xchg
mov
pushf
push
dec
mov
add
push
repz
inc
xor
shrb
adc
adc
in
push
aas
fists
outsb
jmp
pop
xchg
addb
mov
loope,pt
rclb
xor
decl
push
pop
dec
inc
gs
or
mov
ja
or
push
js
xchg
and
pop
loope
ret
cmp
aas
sbb
sub
pop
imul
cmp
adc
pushl
das
fisubs
repnz
test
hlt
or
xor
js
push
scas
pushl
mov
sub
sub
addr16
dec
xor
je
or
cmp
adc
mov
mov
and
push
push
add
dec
js
es
aas
cli
add
in
cmp
pop
fs
cs
shll
mov
fnstsw
xchg
xor
mov
and
test
movsb
mov
in
sahf
in
fldl
pop
mov
xchg
fiadds
pop
out
mov
daa
push
sbb
out
push
fldt
push
push
mov
aaa
dec
or
pushl
add
cli
clc
jno
push
mov
jl
sbb
jo
pop
mov
out
jb
stc
jle
add
jbe
pusha
adc
subb
push
jo
scas
or
mov
lret
adc
shrb
and
sbb
cmpsl
test
leave
test
fs
js
movsl
or
dec
inc
inc
and
aaa
mov
fsubrs
and
and
out
mov
test
mov
inc
and
fs
mov
push
or
pop
arpl
pop
jnp
sbb
or
pop
mov
pop
inc
mov
xlat
and
insl
push
in
pop
cmc
pop
in
cmp
mov
fcoml
xchg
mov
pop
sti
sbb
pop
mov
aad
imul
imul
xchg
int3
mov
test
mov
ja
pop
cmp
or
orl
out
sub
orb
inc
outsb
outsb
cmp
loop
jb
das
outsl
decl
jne
inc
cmp
sub
lret
jp
mov
ja
push
mov
lret
cld
ljmp
jg
out
mov
test
popa
fldenv
cltd
repz
and
push
loopne
loop
cltd
jae
inc
push
and
sbb
mov
adc
dec
or
pop
test
mov
lods
hlt
mov
cmp
inc
out
cs
shll
sbb
lea
test
mov
dec
out
sub
cmp
mov
cld
mov
and
inc
mov
out
mov
jns
mov
fldt
mov
lock
pop
imul
dec
sbb
dec
stos
mov
mov
and
inc
xchg
loope
hlt
outsb
mov
icebp
aam
push
stos
aam
sub
lret
testb
push
movsb
leave
push
out
fcoml
push
cmpb
push
inc
pop
pop
out
or
hlt
into
mov
inc
ret
ljmp
push
frstpm(287
sub
adc
push
pop
int
push
nop
lcall
loopne
fs
sub
inc
pop
stos
nop
jmp
popa
sub
pop
ret
xchg
xchg
mov
lea
jnp
sub
jnp
sub
cmp
testl
cmp
cmpsb
mov
adc
add
cmp
pop
sbb
sub
test
jle
das
inc
hlt
fadds
add
lea
mov
test
push
add
mov
jecxz
pop
cwtl
add
jmp
sbb
les
insb
pop
push
push
pop
push
mov
dec
shufps
or
pop
inc
adc
pop
fidivrs
xor
sub
jg
pop
aaa
jns
lahf
leave
sub
cltd
push
sbb
test
mov
testb
or
mov
cmp
jmp
mov
pop
fidivs
jns
aad
push
add
jns
daa
sahf
shrl
das
pop
dec
cld
mov
stc
fscale
test
into
dec
mov
shll
notl
mov
xor
xor
mov
arpl
pusha
lods
in
sbb
xchg
aaa
andl
stc
out
push
or
sbb
and
call
mov
cmpsb
movsl
int3
jge
psubq
xor
insl
or
cmpsl
push
das
pop
and
cltd
fisubrs
clc
mov
fdiv
out
push
out
insl
xor
ss
fldt
mov
in
push
cmp
xor
xchg
stos
xor
adc
push
cmp
pushf
lods
jno
movsl
and
sub
cmpl
inc
pop
xor
loopne
sub
ja
test
lahf
lret
mov
mov
sbb
and
int
add
push
and
jp
cli
pushf
cmp
dec
lahf
test
and
test
dec
iret
jg
nop
adc
aas
orl
mov
leave
and
add
popa
lods
div
enter
nop
in
lret
add
arpl
add
out
arpl
pop
jno
repnz
push
out
leave
arpl
and
fldcw
push
out
fadds
and
mov
out
ljmp
test
lret
mov
aam
dec
add
mov
inc
mov
cmp
add
sub
in
fimull
cmp
dec
pop
inc
adc
mov
inc
adc
mov
faddp
push
cmpsl
mov
fs
and
insb
inc
pop
pop
xor
cmpsb
cmp
stos
movsl
xor
nop
ljmp
mov
into
or
push
in
loope
int3
rcr
dec
sarb
jl
iret
dec
cmp
stos
xchg
lods
lods
rorl
stos
jb
xchg
loop
rolb
rolb
ss
mov
sub
or
pop
dec
pop
cmp
xchg
jb
dec
jp
sbb
cwtl
jmp
xor
sub
or
or
clc
lods
es
sbb
test
aad
lock
mov
xchg
push
jecxz
cmp
inc
loop
cmp
test
xchg
shrb
mov
dec
sub
shl
into
or
stos
out
cwtl
xchg
push
pushf
jne
in
fisubs
enter
aas
outsl
push
movsl
cmp
push
lods
and
sub
sbb
arpl
icebp
movsl
lods
sahf
and
dec
lock
loope
lahf
movsb
adc
icebp
add
lods
fcoms
cmp
pop
add
addr16
aas
test
out
arpl
aam
inc
cs
xor
out
cwtl
shrl
cmc
cs
mull
out
mov
mov
lods
pop
rorb
inc
mov
out
js
inc
jecxz
cwtl
shlb
xchg
or
adc
mov
insb
imul
imul
imul
push
xor
test
sub
popa
dec
pop
adc
push
sahf
shlb
sahf
fiaddl
clc
movsl
mov
pushf
pop
inc
mov
pop
add
out
push
test
dec
loope
aad
shr
out
cwtl
es
or
cmp
popa
sahf
notb
xor
fdiv
ja
popf
cmp
mov
inc
in
jbe
xchg
sti
lret
fsubr
pop
fstl
mov
dec
pop
cld
loop
push
xchg
xchg
test
roll
sbb
fnsave
xchg
je
test
push
adc
test
pop
cmp
push
pop
jle
xchg
loope
jl
dec
mov
mov
mov
push
cmc
adc
push
mov
jge
cmp
xchg
insl
outsb
inc
scas
sarb
das
pushf
sub
out
addl
imul
adc
mov
das
nop
mov
sub
push
jmp
jno
ss
pushfw
or
lea
mov
outsl
test
int
cmp
xchg
push
sbb
inc
fistps
cmp
adc
add
adc
fiadds
aam
push
pop
mov
or
push
arpl
ja
insb
or
in
sahf
out
mov
push
jecxz
gs
push
mov
cld
andb
shrl
add
lcall
adc
and
rcrb
mov
inc
jmp
jle
jo
dec
push
aas
xor
push
insl
mov
mov
test
cld
fidivs
or
push
stos
in
jmp
imul
lods
mov
mov
xor
cmp
dec
push
out
and
fcmove
push
jae
mov
push
test
adc
adc
arpl
imul
gs
scas
fistl
daa
mov
loop
icebp
faddl
sbb
lahf
repz
stc
pushf
xor
aaa
sarl
mov
sbb
inc
pusha
dec
xchg
jge
cmp
cmp
xor
es
loope
jmp
cwtl
fisubl
push
imul
icebp
mov
lcall
testb
bound
ss
lret
insb
sbb
mov
xor
cs
and
dec
insb
jmp
adc
sub
mov
inc
aas
es
mov
lss
push
loope
mov
cmp
in
clc
pop
mov
cltd
mov
xor
cmpsl
jmp
mov
jg
xchg
je
and
jmp
xor
cmp
scas
int3
mov
repnz
ds
jne
mov
mov
jbe
bound
jecxz
mov
dec
sbb
add
shlb
dec
mov
lret
jg
roll
push
loop
movsb
mov
bound
sahf
addb
add
jbe
cmp
inc
sub
mov
jge
pop
test
iret
stos
mov
mov
fwait
enter
and
shlb
push
xchg
jp
mov
fbstp
adc
aad
xor
pop
mov
dec
sahf
shr
movsb
test
icebp
dec
push
ljmp
jg
and
aaa
add
lcall
push
loop
add
mov
aaa
rorl
call
jge
sti
lea
mov
out
or
out
mov
in
or
stc
jmp
mov
sub
sub
xchg
lret
pusha
push
lods
dec
jecxz
xchg
push
cli
ds
int3
push
gs
movsl
mov
mov
cmp
jmp
addr16
xchg
push
or
xor
inc
add
aaa
ljmp
aam
xor
subl
jecxz
in
inc
dec
sub
sti
cwtl
repz
push
add
mov
and
stos
xchg
push
ret
loope
insb
sbb
sbb
stos
addr16
loopne
xchg
add
shll
in
ja
mov
jae
data16
xchg
or
mov
pop
or
xchg
mov
mov
mov
and
test
mov
mov
mov
jl
fwait
sbb
into
jmp
jl
dec
mov
ljmp
push
jmp
out
icebp
mov
xchg
and
sub
push
push
call
push
and
xchg
out
rorl
cmp
push
cmp
sbb
xchg
fstpt
lret
sbb
jmp
sti
sbb
lods
sahf
sti
hlt
sub
dec
mov
mov
popf
push
jmp
hlt
or
int
jl
int
mov
rcrl
inc
cmp
xchg
lret
pop
mov
in
gs
sti
cwtl
fisttps
test
cmp
push
add
movl
add
push
lock
sbb
xor
xlat
neg
inc
pop
push
enter
aaa
mov
push
jecxz
pop
ljmp
fldl
xlat
out
loop
mov
and
aad
xchg
mov
nop
lcall
adc
cld
add
adc
mov
pusha
in
das
push
sub
in
dec
xor
cmpsl
inc
mov
xchg
shl
xchg
ljmp
mov
xchg
mov
cmp
mov
insb
xlat
negl
out
popf
adc
push
or
and
shll
adc
mov
popf
cmc
ficoml
push
sbb
jb
push
mov
push
sub
mov
mov
nop
cmp
jecxz
inc
push
xchg
dec
loope
aaa
insb
cmp
cmp
mov
rcrl
and
loopne
pop
lea
out
push
mov
test
or
cmp
or
int3
out
iret
jnp
inc
stc
cld
mov
cmpsb
xchg
push
inc
jo
sub
and
sbb
sbb
or
cltd
loopne
pop
cld
mov
cmp
in
cli
div
addr16
and
inc
dec
adcl
nop
adc
out
test
inc
pop
sbb
daa
mov
pushf
jae
add
repz
nop
jo
push
adcb
pusha
data16
ret
pop
mov
jae
and
mov
test
clc
into
arpl
dec
push
stc
add
push
add
or
add
pop
inc
fistl
mov
loope
xor
gs
cmovl
jae
xor
ficoml
mov
lret
pop
push
test
mov
jp
cli
sub
je
clc
xor
scas
pop
xchg
cmpsl
jne
sti
lock
cmc
fwait
inc
or
ljmp
jecxz
pusha
shrb
sub
lds
xor
xlat
lods
xor
cmp
leave
xor
scas
out
aaa
push
mov
data16
sbb
shrb
lds
jl
sbb
shlb
rolb
mov
mov
out
push
jbe
mov
test
xchg
es
push
test
and
sbb
push
fists
dec
cmpl
adc
enter
mov
loopne
and
xor
push
cmp
popa
jne
adc
mov
pop
fwait
imulb
lret
push
aad
mov
loop
icebp
mov
push
jecxz
inc
fucom
jnp
jg
jae
jnp
sbb
pop
or
or
sub
sub
leave
out
sbb
nop
dec
jge
hlt
mov
push
fwait
mov
inc
xchg
dec
aaa
jb
jb
pop
jae
bound
fnstcw
rep
xor
ret
aam
xchg
popa
add
lock
and
lods
addr16
movsb
pop
out
xchg
fisubl
add
mov
sbb
xlat
mov
push
js
mov
call
jl
test
sbb
sub
cwtl
int3
dec
decb
push
or
dec
lcall
cmpsb
test
jo
outsb
call
daa
push
loop
jmp
adcb
xchg
inc
movsl
fs
adcl
sub
pop
inc
and
sub
mov
lock
adc
enter
dec
stos
adc
and
mov
add
sarl
xorl
push
in
cli
and
lock
inc
das
addr16
jl
jb
add
xor
jno
jnp
xor
cmp
and
jle
int3
dec
ljmp
mov
popa
or
sub
jle
dec
lods
out
addl
ljmp
movsl
mov
pushf
xor
push
sbb
mov
xchg
out
sbb
ja
fs
addr16
test
bnd
add
imul
cli
mov
scas
cltd
add
xchg
add
pop
mov
mov
test
add
inc
out
call
fists
dec
cmp
ret
xchg
lea
mov
data16
push
mov
mov
in
pop
push
scas
adc
scas
inc
enter
addr16
cmp
adc
or
call
rclb
sbb
cmp
xor
dec
sub
clc
adc
mov
icebp
pop
jno
adcl
pop
lahf
incb
inc
dec
fwait
adc
subb
mov
inc
inc
push
add
outsb
adc
xlat
in
scas
add
cli
test
je
ja
imul
xor
pop
stos
addr16
rcrl
lds
lock
mov
je
sub
fcos
lock
adc
or
mov
sub
mov
and
mov
adcl
xor
and
ret
add
adc
mov
inc
pushf
xor
adc
xor
or
stos
js
sub
rcr
xlat
cmp
jmp
adc
adcb
jmp
lods
jg
aam
test
lret
fstp
in
add
aad
sub
xchg
push
push
mov
frstpm(287
cld
arpl
scas
pop
pushf
mov
aad
ret
in
stos
mov
flds
and
je
xchg
aad
sbb
sbb
sub
mov
bound
aad
jge
cmpsb
jge
test
adc
fidivl
xchg
cld
dec
xchg
or
or
lds
aaa
cmpsl
dec
sub
xor
xchg
dec
sbb
daa
xchg
push
jl
rcrb
jmp
sahf
push
push
ret
mov
dec
imul
shll
mov
iret
and
inc
or
or
fidivrl
xor
fldl2e
int
jmp
or
mov
ljmp
mov
loope
cmpsb
out
sbb
pop
aam
pop
mov
arpl
pop
inc
test
and
jns
pop
in
ret
mov
mov
pushf
push
test
je
lcall
inc
and
fstps
iret
enter
pusha
mov
jle,pt
lods
dec
stc
out
sub
adc
and
imul
fs
int
aam
daa
icebp
pop
xchg
push
adc
fcmovnbe
loopne
push
in
push
lock
into
push
mov
jae
mov
cmpsl
loope
arpl
sub
dec
fwait
inc
int3
call
scas
movsl
adc
push
ja
pop
test
test
dec
mov
jae
int3
xor
test
mov
push
js
xchg
ds
ret
jb
pop
scas
pop
push
int3
frstor
rcl
icebp
stos
fisttpll
mov
and
cmp
mov
jp
std
imul
push
shrl
jmp
pop
cmp
inc
add
andl
mov
lea
jbe
jl
pop
xor
pop
mov
jecxz
test
lret
jo
ds
pop
cmp
mov
inc
shrl
rol
movsb
jne
call
xchg
mov
or
inc
mov
inc
scas
repnz
pop
xchg
jl
push
rcl
push
cmp
mov
xchg
sub
mov
mov
add
mov
jg
int
scas
out
inc
ds
jmp
jo
ja
fisubrs
add
seto
xor
sbb
pop
jecxz
into
cmpsb
sub
xchg
cmp
iret
xchg
int3
push
lcall
out
stos
mov
jg
mov
cmp
call
sub
test
cmp
adc
sarb
mov
stos
add
cmp
out
imul
pop
lcall
mov
pop
imul
sahf
cmc
mov
push
mov
mov
dec
lods
and
mov
movsl
aas
add
int3
pop
pop
fwait
add
scas
mov
cmp
adc
cmp
shl
loop
pop
testl
adc
nop
lea
push
cmc
mov
jle
lds
add
insl
xor
jp
in
loop
sbb
stos
movsl
dec
xchg
xchg
pop
dec
add
mov
mov
adc
push
or
sbb
dec
lods
test
mov
cmp
lcall
mov
lods
shlb
pop
mov
mov
mov
rclb
fiaddl
fisubs
lds
mov
in
sbb
pop
and
adc
sub
sti
xchg
pusha
pushf
inc
xor
fnstcw
xchg
popa
outsl
cltd
xor
pop
adc
leave
ja
stc
push
fwait
cmp
les
andl
mov
xchg
fdivr
inc
fs
jb
mov
jle
imul
test
adc
and
std
xor
out
push
sbb
out
jno
rcl
jle
lds
dec
adc
aam
cld
adc
push
mov
jno
je
call
jmp
jne
xchg
jnp
nop
daa
dec
pop
push
cmp
sbb
sub
cmp
xor
push
movsb
shlb
jmp
pop
cmp
sbb
scas
xchg
lea
adc
adc
addl
mov
xor
push
sbb
in
cmpsl
jns
nop
sbb
cmpsl
test
cli
push
shrl
or
popa
dec
mov
xchg
imul
push
add
xchg
mov
andl
out
ret
mov
xor
push
pusha
sbb
jo
add
push
or
and
or
jmp
sub
icebp
nop
test
and
incb
dec
pop
jno
jnp
dec
imul
loopne
or
xor
cmp
dec
mov
int
xlat
out
sar
pop
imul
movsb
rcll
jb
mov
ljmp
fwait
das
xor
pop
xor
test
test
jo
dec
xchg
xor
sub
icebp
jbe
jl
repnz
stc
rorb
push
imul
nop
mov
jle
push
lret
icebp
scas
iret
loope
dec
xchg
adcb
add
mov
stos
cmp
cmpsl
fstl
nop
push
inc
add
mov
aad
inc
fistps
test
shr
inc
mov
and
sbb
nop
cltd
lret
jecxz
mov
pop
cmp
pop
push
fisttpl
pop
hlt
fstpl
mul
rclb
sub
adc
fdivs
pop
int3
das
ficompl
imul
out
fidivrs
ret
js
mov
adc
repz
int
or
sbbb
sub
mov
pop
mov
fadd
inc
call
in
jno
cmc
imul
mov
shll
mov
add
mov
pushf
mov
pop
shlb
scas
rcrl
lahf
int3
adc
ja
add
push
cld
and
dec
add
mov
in
mov
mov
cmp
in
out
inc
sub
fisubrl
jno
mov
pusha
sub
sahf
xchg
ffree
or
repnz
sti
das
sbb
cmp
xchg
rorl
in
push
ret
cld
shl
and
into
adc
push
add
popf
xchg
incb
fiadds
imul
and
mov
ljmp
not
or
das
sub
ja
ss
dec
ds
shll
adc
fiadds
mov
add
adc
sbb
sbb
push
dec
xchg
sub
mov
stos
mov
mov
pop
mov
loope
repnz
and
pop
popa
mov
xchg
sub
in
sub
cmpsb
xor
stos
pop
rorb
mov
add
ja
or
inc
into
das
push
out
test
pop
adc
mov
in
xorl
roll
mov
jne
and
sbb
imul
cld
xchg
jecxz
xchg
ds
ljmp
jo
pop
mov
in
mov
mov
out
movl
outsl
jo
jge
lock
xor
cs
mov
push
cmpsl
iret
dec
test
into
imul
push
and
mov
fwait
mov
in
clc
ret
lret
jne
or
push
test
jl
or
pxor
clc
sub
add
push
jg
iret
pop
and
in
xchg
cltd
lahf
je
xor
inc
jb
jae
jp
pop
icebp
repz
dec
shlb
cmpsl
sub
jle
shlb
outsb
adc
mov
or
sbb
mov
out
andl
movsl
dec
adc
out
sub
xlat
xchg
movsb
out
mov
in
or
jns
jl
and
sub
pop
js
mov
in
inc
leave
mov
loope
cmpsl
dec
int3
mov
and
mov
mov
mov
test
sub
jae
aam
gs
adc
int3
xchg
test
ret
or
pop
add
sub
xlat
jbe
xlat
add
dec
push
cmp
cmp
scas
or
push
mov
loop
cmpsl
sbb
sbb
test
push
mov
into
shrl
cmp
jne
lds
iret
hlt
fwait
xchg
push
sub
movsl
jo
mov
sub
adc
jae
adc
lock
daa
pop
xchg
mov
nop
das
imul
dec
testb
cmp
xor
jns
cmp
mov
mov
outsb
imul
fstpt
js
fstl
outsb
lret
mov
sahf
mov
fs
out
sahf
and
mov
or
stc
aam
mov
sub
push
negb
push
xor
push
mov
jg
fnstsw
scas
xor
mov
xchg
das
cmp
xchg
dec
xchg
divl
daa
stc
or
xchg
out
jo
inc
cwtl
push
mov
dec
sub
out
push
arpl
jge
mov
xchg
bound
inc
sbb
jbe
or
xchg
sbb
cmp
mov
fnsave
gs
jb
lret
dec
popa
adcb
ja
cmp
adc
sub
push
adc
imul
and
movsl
pusha
out
push
fdivrl
mov
aad
f2xm1
inc
imul
or
cmp
mov
and
push
out
dec
and
frstor
add
cmpsb
in
cmc
jnp
mov
mov
pop
adc
in
jo
push
lods
addr16
sarb
or
inc
cli
aam
inc
add
xor
fsubrs
ds
pop
fcompl
push
cmp
fcmovnbe
leave
sub
outsl
cmp
jae
sti
jne
jmp
ror
cld
xchg
xor
and
ljmp
stos
push
mov
xchg
inc
mov
call
ret
pop
ds
sbb
dec
inc
mov
flds
addr16
push
xor
or
ss
pop
mov
mov
loopne
outsb
fldcw
push
mov
in
lods
idivl
sbb
dec
imul
nop
popa
jne
jnp
das
inc
push
xchg
cld
push
data16
cmp
xchg
and
fstl
dec
sti
fistps
push
out
push
and
fbld
ret
sbb
popa
shll
aaa
cmc
aas
dec
test
addr16
aas
movsl
iret
push
pop
xchg
aaa
and
rcrb
fistpl
fidivrl
dec
gs
and
aaa
out
xchg
cmp
xlat
mov
adc
lds
dec
jmp
mov
popf
nop
dec
aam
mov
jbe
or
cmp
xchg
aam
xlat
mov
adc
and
jge
xchg
rorl
inc
lock
divl
xor
cmpsl
cmc
sub
fidivs
fcomi
cs
jnp
push
sub
notl
lds
inc
or
push
and
and
mov
hlt
sbb
mov
loope
push
jns
xor
leave
iret
test
push
add
jns
sbb
xchg
cs
out
je
mov
cltd
pop
hlt
cmpsb
and
cld
repnz
shl
dec
loop
in
or
dec
cwtl
movsb
dec
mov
lock
es
sbb
sub
pminsw
sbb
mov
fbld
jae
arpl
lcall
movsb
addr16
dec
cmc
daa
sub
mov
icebp
mov
cmp
mov
or
cs
inc
sbb
cmc
mov
mov
add
shl
out
inc
push
scas
mov
enter
xor
sbb
addb
push
cli
xor
mov
and
jecxz
std
call
jae
jnp
ss
jg
ja
adc
bound
jmp
clc
mov
cmc
inc
pop
mov
subb
pop
cmpsb
fdiv
in
xchg
rcl
icebp
test
xchg
cmp
mov
mov
cwtl
test
insb
and
pop
fistps
movsl
lcall
test
lods
decb
pop
mov
inc
ret
mov
adc
push
shlb
dec
hlt
lret
ret
add
cmc
xor
repnz
mov
sub
inc
pop
pop
mov
ja
mov
jb
aad
mov
jns
dec
sub
ljmp
shrd
xor
daa
xor
xchg
add
mov
in
mov
leave
fs
sub
enter
shll
aaa
dec
scas
in
test
mov
add
stos
and
push
xor
rcl
jae
pop
andb
mov
out
jge
scas
outsb
mov
mov
push
inc
mov
lahf
jae
pop
vpmacsww
movsb
xchg
stos
add
push
jbe
aam
or
loop
sbb
call
jge
cmp
push
jg
bound
adc
xor
cmp
pop
in
sbb
add
mov
sbb
inc
iret
iret
arpl
jle
loopne
cmp
xchg
pop
insl
mov
adc
in
rcrb
jo
cli
ret
push
inc
sar
jae
add
pop
sub
filds
outsl
in
mov
jb
sbb
sbb
add
mov
or
fimull
nop
push
xchg
push
ret
xor
ds
mov
mov
lods
and
dec
scas
push
xchg
call
xor
sbb
push
out
mov
jge
mov
mov
mov
pushf
xchg
mov
and
mov
mov
movsb
cmp
pop
xor
xchg
add
xchg
test
test
jl
std
xor
adc
dec
sub
fistl
sub
orb
mov
jecxz
sbb
arpl
and
add
rolb
jle
jecxz
jmp
daa
inc
mov
and
insb
shll
dec
popf
pop
pop
divl
mov
xor
ja
in
push
add
das
ja
mov
adc
rcr
fwait
ds
mov
push
lret
inc
jns
aad
mov
jo
jge
in
cltd
lods
mov
cmp
int3
sbb
or
jecxz
push
fisubl
out
sub
je
cmpsb
push
sbb
in
mov
stos
pop
adc
mov
ss
int
jge
rolb
mov
xor
dec
test
jge
cwtl
fwait
lds
pop
mov
pop
mov
push
cmp
das
cmpsb
ret
in
add
add
dec
daa
mov
cld
sub
shlb
fs
cs
popf
in
adc
in
imul
out
adc
dec
cmpsl
xchg
fidivrs
cmp
in
sub
jbe
xchg
int3
xor
fnstenv
flds
dec
mov
movsb
or
int3
adcb
sub
imul
arpl
add
insl
add
cli
les
mov
dec
mov
nop
sbb
add
cmp
ds
dec
push
ljmp
lods
fisubs
sub
and
mov
lods
pop
mov
test
lock
into
inc
in
xlat
pop
sarl
push
and
sub
and
out
mov
ds
xchg
xchg
mov
push
inc
stc
mov
scas
cli
outsl
das
outsl
lret
xlat
daa
adc
adc
cmp
filds
ja
push
cmp
xchg
jb
dec
cld
lret
fldenv
ficomps
mov
data16
sub
mov
leave
pop
and
push
add
dec
cmpsl
pop
enter
xor
and
mov
push
je
leave
out
cltd
out
pop
jge
push
bound
dec
imull
ljmp
and
mov
xor
pop
mov
into
insl
adcb
outsb
xchg
mov
lods
roll
cvtps2pd
mov
imul
mov
cmp
cmpsl
or
int3
dec
dec
sbb
cmp
xor
rclb
aam
push
mov
or
repz
mov
cli
incl
ss
jle
jecxz
add
sub
int
sub
gs
in
pop
lret
rorb
pusha
aad
hlt
mov
push
std
xor
ja
imul
int3
shrl
and
ds
clc
xchg
adc
out
testl
jmp
call
in
aas
xlat
push
mov
push
mov
sub
popa
pop
outsb
adc
cld
lcall
pushf
push
and
cmp
lahf
pop
inc
test
lock
sub
push
shr
stc
push
push
or
imul
xchg
out
cmp
xchg
outsb
add
pop
jns
rcrb
add
fiadds
pop
aam
sub
ljmp
jns
popa
or
gs
addr16
iret
out
rcrl
into
push
sub
pop
push
lahf
jle
sub
sbb
inc
cmp
outsl
jae
adc
or
aaa
iret
adc
adc
outsl
push
sbbb
ret
sub
xchg
ljmp
shrl
sahf
dec
rclb
cmp
dec
orl
jecxz
shlb
pusha
jge
mov
icebp
mov
mov
jo
and
fadd
insl
data16
hlt
dec
ds
lret
rol
imul
inc
lret
icebp
bound
jl
aad
mov
test
shrb
cwtl
push
imul
mov
test
daa
imul
lods
mov
push
sbb
fucom
repnz
fisttpl
mov
dec
xchg
cs
or
xchg
cmp
int
mov
lret
fistpll
pop
repnz
xchg
lret
add
lds
push
sub
sbb
cmp
scas
loopne
and
xor
xchg
sbb
sub
adc
insb
loop
pop
jne
jmp
icebp
test
sbb
out
sbb
cs
fisttpl
lods
and
jl
mov
inc
jo,pn
pop
stos
pop
into
dec
popa
xor
inc
cli
adc
sub
xchg
or
insl
inc
xor
mov
adc
xchg
jae
jmp
push
sub
imul
sti
mov
inc
je
sub
sarb
outsb
jle
push
filds
cmp
dec
inc
loope
mov
les
adc
in
icebp
mov
push
cmc
sub
cmp
jb
mov
fwait
mov
push
enter
loop
dec
inc
roll
xchg
out
nop
outsb
shl
push
les
cs
in
cmp
inc
xchg
test
or
aaa
hlt
popa
push
mov
scas
lret
jno
cmp
fmuls
cmp
add
adc
pusha
xchg
adcl
xor
adc
jb
pop
jg
sti
mov
fs
out
fdivrl
lock
lea
sti
inc
subb
cmpsl
imul
das
into
movsb
je
cmp
and
stos
xor
fs
jae
pop
fmulp
sbb
sbb
jo
push
lcall
pop
push
cmpsb
dec
xor
sahf
jl
filds
imul
mov
sbb
mov
and
sbb
push
sbb
sti
or
sub
xor
or
cmp
fisttpll
xlat
out
xchg
aas
xor
lret
jns
sti
mov
mov
sub
add
xchg
pusha
pop
push
sahf
jno
sub
sub
dec
and
xchg
imul
push
mov
xchg
aaa
enter
xchg
popa
add
enter
and
add
and
mov
jne
sti
test
cwtl
push
inc
nop
pop
inc
sub
shrl
push
jmp
bound
das
cwtl
call
sahf
aam
pop
out
jne
jne
rcl
lret
repnz
mov
lahf
inc
shl
sbb
imul
mov
xor
push
lock
and
pop
and
pop
neg
mov
es
push
jbe
inc
xor
cld
fpatan
fists
je
pop
and
lahf
mov
xor
cltd
xor
xlat
lahf
lea
mov
or
popa
mov
mov
stos
sbb
int3
dec
call
lea
mov
int3
pop
inc
jecxz
test
sub
out
xor
push
fisubs
pop
fdivl
xor
mov
int3
test
adc
shr
fistpl
xchg
cmc
sub
and
mov
iret
mov
in
test
movsb
outsb
mov
enter
jmp
push
mov
sbb
sti
mov
dec
lahf
pop
add
or
fwait
cmp
push
stos
and
fdivl
xor
push
subb
xchg
mov
repz
in
test
jmp
cld
mov
aaa
mov
sbb
sbb
push
ret
jnp
imul
jnp
sbb
mov
adc
iret
ret
popa
cs
loope
sbb
dec
xor
imul
iret
mov
filds
or
push
dec
mov
push
lods
xor
bound
sbb
mov
xchg
xchg
push
xlat
sahf
sbb
sub
dec
or
inc
sbbl
mov
cmp
cwtl
inc
repz
cwtl
addr16
cli
mov
pop
inc
xor
movsl
mov
mov
inc
loopne
push
fs
mov
cwtl
clc
mov
and
pushf
bswap
ret
test
es
or
je
dec
xor
xlat
sbb
rclb
jmp
das
adc
adc
loop
insb
mov
lods
cld
push
fadd
les
jg
jge
inc
test
push
jae
add
mov
cmp
and
xchg
fcom
add
xor
ret
mov
adc
sub
faddl
cwtl
clc
sub
es
das
es
adc
out
sarl
loop
mov
pushf
sbb
scas
jle
js
punpckhbw
sub
push
sarb
mov
mov
nop
mov
pop
and
cmp
insl
movsb
js
jno
mov
les
fwait
scas
adc
sub
ss
pop
mov
loop
sub
cmp
shl
test
add
fdivs
dec
pushw
or
in
lds
pop
into
adc
test
arpl
int3
add
push
jge
out
mov
push
mov
in
pop
adc
mov
and
sbb
aad
sbb
sti
and
and
test
lds
sub
lcall
mov
pop
push
jns
mov
sub
cmp
jp
pop
lcall
jbe
outsl
fcompl
sbb
jge
mov
cmpsb
mov
push
push
sub
jle
scas
sbb
ds
xor
or
xlat
mov
inc
lods
mov
push
test
jl
xchg
es
int
ljmp
push
mov
mov
stos
cmpps
iret
sahf
les
cld
push
cmp
dec
cmp
je
pop
cmp
gs
jmp
int3
or
mov
push
fsubl
gs
cli
test
pusha
cmp
and
xor
jp
lret
jb
addb
sbb
mov
adc
imul
add
jle
pusha
add
loopne
dec
pop
test
and
aam
mov
repnz
jne
inc
cmpsl
inc
inc
push
outsb
xchg
mov
and
adc
mov
jmp
lret
xchg
call
lahf
fstpl
pop
incl
push
gs
adc
jno
cltd
cmpsl
roll
pop
repz
call
cmp
mov
cmp
insb
pop
jb
xorb
cmc
dec
dec
rcrb
ss
mov
add
mov
mov
test
push
or
shlb
cmc
and
pop
mov
or
sub
adc
sub
mov
jne
jl
repnz
scas
dec
sbb
lds
icebp
and
call
outsb
data16
cmpsl
inc
mov
repz
add
sbb
xchg
cltd
je
sbb
jp
dec
mov
mov
fwait
jmp
push
push
imul
inc
bound
aad
jnp
mov
mov
pop
jmp
mov
xor
cmp
and
adc
pop
xor
add
push
jbe
loop
inc
xchg
cli
xchg
xlat
lods
fidivrl
addl
fcomi
mov
jl
and
fstpl
jg
mov
mov
lods
cld
add
mov
fs
leave
pop
ja
mov
arpl
pop
pushf
xlat
cli
in
pop
fistpl
dec
mov
lea
push
pop
outsb
mov
es
je
js
or
filds
jp
sub
jl
nop
inc
lcall
xchg
pop
sbb
xchg
mov
sub
ss
addl
push
ss
movb
pop
movsb
or
popa
add
mov
fmulp
xor
rorl
mov
xor
jae
jge
xor
das
jne
xchg
cmpb
xchg
sbb
dec
les
push
push
sahf
mov
sbb
push
rcl
pop
out
pop
inc
push
addr16
test
jns
incl
mov
ds
sbb
test
pushw
es
jle
mov
cmpb
adc
testb
cmp
adc
imul
ljmp
in
jecxz
or
xchg
rcrl
xor
jo
sbb
fstps
dec
adc
push
test
xchg
and
int3
push
icebp
push
lret
jb
mov
mov
shrb
jo
lds
cs
cmp
adc
outsl
in
fscale
out
sbb
pop
or
addr16
cmp
ret
xchg
lds
mov
inc
movsb
lods
ret
inc
hlt
mov
xchg
xor
push
fcmovu
nop
scas
aaa
sarl
and
ljmp
arpl
cs
xchg
jnp
and
xlat
mov
mov
test
aaa
or
sbb
add
jmp
mov
unpcklps
cmp
lret
pop
pop
jg
paddsw
dec
sbb
mov
jle
scas
outsb
shl
call
jb
add
iret
popa
psubq
fwait
rorb
out
inc
fistl
and
into
sbb
mov
push
or
cmp
mov
mov
subl
inc
add
mov
das
dec
push
test
je
imul
enter
bound
movsb
sbbl
add
lret
or
test
rorb
push
add
xorb
or
loopne
jo
push
inc
mov
gs
stos
inc
mov
pop
pusha
mov
popa
xchg
xor
loope
test
push
stos
into
popf
pop
in
pop
or
aaa
std
je
mov
iret
cli
je
neg
cwtl
dec
test
mov
xchg
out
pushl
mov
adc
push
mov
subl
jne
pop
inc
aas
das
dec
insb
cmp
std
bound
cld
dec
loop
xchg
xchg
divb
int
dec
xchg
pop
or
jmp
add
adcl
sub
dec
sbb
dec
sbb
icebp
xchg
bound
loop
xchg
outsl
push
add
loope
xor
mov
fadds
inc
das
std
push
data16
or
push
sbb
stos
adc
add
sahf
ljmp
fwait
cld
stc
jne
inc
ljmp
cmp
pop
fwait
push
and
xor
test
jg
xchg
xor
cmpb
inc
mov
inc
test
sbb
sbb
addr16
jno
hlt
xchg
lret
int3
fistl
cltd
cmp
pop
test
sub
mov
adcb
int3
fsubrs
jle
add
mov
jae
inc
movsl
shrl
xor
aas
js
add
jmp
shll
cmc
push
sbb
lcall
mov
sbb
addr16
mov
mov
push
pop
adc
pushf
out
flds
adc
loop
shl
insl
movd
mov
push
push
test
fidivrs
jge
in
mov
jmp
hlt
imul
push
insl
push
out
in
ljmp
xor
xor
xlat
dec
xor
je
test
mov
add
xor
jbe
add
out
push
dec
pop
loop
xor
cmp
pop
jl
enter
scas
stc
leave
leave
add
les
ss
mov
sub
or
mov
lahf
xor
push
in
xor
stos
les
mov
cmpsb
mov
ljmp
repz
pushf
imul
pushf
xchg
aaa
jle
pop
and
push
repnz
pop
insl
hlt
sub
pop
xchg
fucomip
out
stos
ds
ficoms
adc
ret
sbb
inc
xchg
shl
and
fwait
test
xchg
cmp
mov
jno
ficomps
clc
dec
push
xor
add
pop
icebp
jle
shl
ljmp
push
sub
dec
sbb
imul
lods
xchg
clc
hlt
fisttpl
outsb
std
aaa
gs
xchg
mov
and
dec
hlt
pop
jnp
lods
xchg
lret
imul
pop
inc
mov
cwtl
or
mov
and
outsl
dec
push
mov
shlb
adc
shrb
ss
push
jl
sub
push
iret
nop
ss
rorl
aaa
scas
int3
rcrl
mov
inc
aaa
xchg
in
add
jmp
xchg
cltd
dec
fwait
sbb
add
add
cwtl
mov
imul
cmp
imul
and
sbb
jp
push
push
jns
pop
or
dec
jmp
xchg
mov
dec
sahf
pop
movsl
stc
pop
scas
adc
cmp
xlat
mov
jmp
push
jg
jle
fists
les
jns
rcll
lds
outsb
cmp
ret
pop
out
cwtl
mov
inc
add
lods
insb
roll
xor
pop
shr
fwait
lret
jmp
and
pusha
pop
and
pop
shlb
push
jl
xor
lea
pop
xor
cwtl
xchg
push
dec
into
int3
ss
jl
pop
mov
jne
lods
xchg
sbb
mov
jbe
pushf
adc
lret
scas
push
clc
test
inc
hlt
cmp
pop
sbb
cmp
sbb
jnp
orl
out
movsl
push
aaa
js
mov
jl
ret
pop
add
pushf
into
stc
std
mov
ljmp
xchg
aas
sbb
insb
cmp
es
in
pop
sub
stos
dec
int3
mov
mov
jne
mov
mov
jge
in
push
sbb
pop
outsb
call
ret
std
xchg
lahf
pop
sbb
popf
rol
out
in
xlat
je
mov
les
jle
sti
int
adcl
push
mov
inc
stc
add
mov
mov
cs
cmp
adc
stc
daa
add
dec
push
add
sub
popf
adc
in
mov
mov
adc
mov
out
lret
and
xchg
add
adc
jo
cmp
sub
add
inc
inc
jns
sub
xor
out
push
js
inc
xchg
xor
xchg
jl
pusha
call
nop
stos
mov
js
aam
in
inc
jle
hlt
imul
and
or
mov
mov
pop
jnp
test
mov
test
cwtl
and
cmp
sbb
ffree
iret
dec
xor
mov
clc
paddsw
lods
es
into
ja
sti
popf
ss
popf
das
test
mov
push
loope
jl
xor
fwait
dec
mov
pop
jbe
nop
out
psubusb
aas
mov
inc
out
adc
ljmp
jg
sub
dec
or
test
inc
cltd
nop
cmpsb
adc
fnstsw
sub
cmp
push
fwait
push
inc
pop
sub
push
inc
ljmp
jp
sub
mov
pushf
mov
iret
xchg
adc
xchg
dec
mov
mov
push
fwait
jmp
mov
lds
sub
test
ja
mov
lock
test
aad
xchg
daa
rcll
mov
pop
pop
shrb
fdivrs
push
rorl
jge
test
inc
cmp
xchg
bound
inc
pop
rcrl
mov
out
idivb
and
sub
loop
rcrb
cmp
adc
fwait
sbb
sbb
cmpsb
fucom
and
jp
mov
ret
mov
adc
or
adc
and
xor
movsl
test
mov
sub
jo
movsl
jmp
std
mov
and
mov
sbb
pop
sbb
adc
sub
xor
es
in
jge
outsb
sbb
sub
fbstp
mov
xchg
mov
mov
insb
in
sub
jnp
in
jl
imul
movsb
js
jl
mov
ret
sbb
test
stos
jns
std
test
jo
sarb
aaa
loop
cltd
sahf
pop
sbb
fwait
pop
sub
out
shr
mov
inc
cmp
pop
lock
testl
push
push
push
xorl
hlt
push
ret
xchg
cs
shll
movsb
hlt
movsl
insb
popa
inc
inc
dec
test
cmp
dec
push
popl
adc
jb
sbb
pop
sub
outsl
stos
aad
mov
sub
push
aad
stos
inc
mov
sub
push
jp
push
outsb
aam
scas
push
bound
loopne
add
xchg
arpl
inc
cmp
icebp
popf
ret
xor
pop
shll
loop
int
add
sbb
cmp
and
xchg
roll
pop
repz
xor
push
pop
leave
sbb
test
push
mov
out
aas
mov
mov
mov
add
or
fs
out
jb
fcomps
insb
pop
icebp
mull
fbld
cmp
sbb
mov
pop
mov
cmp
cli
sbb
mov
test
add
daa
add
xlat
movsb
fxch
push
mul
and
cmpb
cmp
outsb
cltd
lahf
xchg
adc
dec
enter
out
idivb
test
loopne
sub
and
push
nop
mov
jns
inc
xchg
inc
enter
sahf
mov
mov
or
adc
orl
inc
xchg
sbb
add
pop
aad
sub
je
sbb
push
jge
pop
enter
push
add
andl
mov
add
in
push
or
push
pop
sub
dec
pop
or
pop
dec
loop
scas
daa
inc
rclb
xor
mov
sbb
pop
sub
jno
daa
mov
cmp
mov
pop
mov
push
lods
inc
hlt
cmc
hlt
pushf
mov
cmp
movsl
hlt
inc
stos
scas
js
in
and
sub
inc
adc
inc
sti
mov
roll
xor
mov
out
bound
cli
bound
xchg
mov
dec
adc
aaa
mov
or
aas
mov
adc
xchg
shll
imul
pop
sbb
and
hlt
lahf
mov
sar
xchg
mov
in
rclb
sbb
xchg
add
mov
mov
pop
dec
mov
cmp
mov
in
fsubrs
and
sahf
adc
aaa
lods
mov
cmc
sub
lret
mov
add
sbb
mov
ja
mov
mov
mov
push
shl
inc
sub
sub
insb
les
mov
cmp
mov
mov
nop
add
fmul
aas
xchg
mov
push
xor
addb
sub
insl
adc
push
dec
add
xor
xor
out
pop
mov
jb
popa
mov
leave
and
cmpsl
mov
adc
aas
jg
jge
mov
cmp
scas
or
shl
push
and
mov
ss
insb
std
les
daa
test
shlb
aas
icebp
in
aam
mov
push
lcall
mov
in
hlt
je
pop
js
imul
sub
push
in
push
shlb
test
shl
and
imul
sub
pop
pop
pop
scas
out
xchg
cwtl
adc
dec
mov
mov
push
out
cmpsb
sarb
pop
sbb
shlb
push
lock
fildl
add
aad
test
cmp
aam
das
push
jl
adc
int3
dec
outsl
dec
jne
fidivl
arpl
xchg
jb
hlt
fs
lret
mov
in
cmovs
movsb
add
movsb
orl
ret
xchg
mov
sbb
xor
icebp
push
xchg
mov
mov
hlt
add
and
mov
lahf
jnp
push
repz
pop
jne
mov
sub
incl
jb
add
mov
xchg
dec
mov
movsb
xchg
ja
repz
dec
mov
inc
add
add
inc
aam
adc
movsb
adc
ss
pop
rcrl
sbb
imul
pop
adc
push
sub
xchg
xor
decb
pop
ret
sbb
push
sarb
inc
shl
iret
fs
ret
mov
lret
repnz
dec
dec
out
and
call
adc
cwtl
rcrl
mov
pop
jnp
jo
mov
subl
sahf
add
xor
sbb
ret
jle
mov
adc
test
xchg
add
dec
xor
das
adc
es
adcl
cmp
lock
sti
sbb
lret
mov
sbbl
jo
mov
cmp
fdivs
mov
add
in
and
pop
cwtl
pop
xchg
sub
mov
mov
and
jg
cmp
loop
call
or
nop
sub
lahf
push
ds
jmp
sub
int3
jge
rorb
into
mov
xor
cmc
daa
test
jne
cltd
out
fwait
insl
push
subl
push
add
loopne
sub
sbb
sub
roll
outsb
cmp
pop
aaa
aad
adc
jns
push
lods
cmp
inc
ja
outsb
mov
clc
fidivrl
dec
divl
leave
jl
loopne
push
cmp
push
ja
mov
jae
es
cmc
imul
sub
pop
adc
movsl
xor
sub
outsb
and
mov
and
pop
pushf
bound
out
sarb
sbb
mov
xchg
mov
lock
jae
lcall
push
scas
push
mov
mov
lcall
iret
jecxz
daa
xchg
xchg
jge
inc
or
mov
mov
mov
fs
stos
aam
xchg
xor
je
push
sub
inc
jne
xor
mov
pushf
cmp
mov
push
push
mov
sub
xor
mov
testl
jns
or
mov
push
mov
adc
cwtl
rcr
cmp
inc
jg
xor
shrb
xor
mov
enter
xchg
shll
mov
ficomps
ret
push
aaa
xor
sarb
add
mov
dec
orl
mov
xor
inc
stos
stc
cmc
stc
pop
and
pop
maxps
aad
bound
push
outsb
dec
and
and
pop
std
mov
fcmovu
in
test
fwait
movsl
loope
inc
mov
inc
and
push
cld
out
movsl
sub
add
cmp
jmp
out
addl
mov
push
adc
add
lret
adc
sahf
add
in
loop
jb
adc
dec
xchg
cltd
inc
mov
mov
pop
xor
in
push
jnp
arpl
loop
lds
out
xchg
shl
cld
xor
mov
rorb
addr16
add
mov
jle
pusha
les
jbe
xchg
dec
shl
out
adc
cli
int3
pop
cltd
std
stos
fistpl
ret
inc
sbb
jmp
hlt
sbb
and
xor
or
or
mov
jg
in
and
xchg
stos
insb
fsubp
cmp
pop
ffree
pop
sti
cs
fstl
adcb
fwait
cmp
push
jo
leave
jl
mov
adc
fs
je
sti
enter
lahf
push
testl
push
jbe
jbe
fincstp
xchg
es
add
push
cmp
stc
dec
mov
cmp
push
je
jp
lahf
movsl
leave
mov
aas
lods
fiaddl
pop
xor
jae
mov
rcrl
xor
push
xor
shll
lahf
cmp
dec
or
leave
pop
pop
push
inc
mov
insl
mov
test
pop
mov
clc
adc
fstl
cmp
xor
sbb
adcb
repnz
jae
ds
xchg
and
test
xchg
or
sbb
cmpsl
cmpsb
mov
mov
ret
clc
mov
out
imul
lods
add
nop
jo
scas
push
mov
popf
rcll
sbbl
lds
stos
inc
mov
gs
in
mov
outsb
test
stc
nop
dec
mov
push
scas
popf
push
dec
out
mov
int3
es
pop
cmp
fstpl
mov
and
xor
cmp
in
dec
pop
or
popa
xchg
stos
sahf
rolb
xchg
jge
data16
cmp
aam
stos
pop
push
xchg
jae
add
mov
lea
jnp
add
cld
clc
nop
lahf
clc
or
rcrb
jge
popa
dec
movb
shll
fisubrs
ret
into
add
repnz
repz
xchg
call
xor
jge
incb
imul
and
adc
je
mov
mov
cmpl
add
loope
int
loopne
movsl
inc
adc
mov
pop
add
icebp
mov
push
lods
pop
xchg
pop
cld
push
xor
xchg
std
pop
sbb
cmp
fst
adc
repnz
fidivrl
aam
push
and
inc
repnz
sbb
jbe
mov
stos
aad
lret
sub
lea
iret
lret
stos
mov
push
sbb
mov
arpl
and
add
insl
mov
jmp
mov
fisttps
pushf
jp
push
fs
push
xchg
adc
xchg
adc
dec
lods
insl
sar
testb
js
add
push
aas
mov
xchg
popf
mov
push
xchg
std
dec
pop
cs
jb
iret
inc
leave
push
gs
in
outsb
iret
js
jne
testl
push
sub
sbb
sub
sbb
out
inc
fldcw
cmpsb
or
adc
mov
test
mov
add
jge
inc
rorb
push
out
les
fimuls
lods
test
out
xor
mov
in
dec
jmp
scas
fidivl
lods
or
add
je
mov
arpl
iret
out
xor
mov
jp
jecxz
sub
mov
mov
mov
stos
inc
imul
push
mov
mov
bound
pop
in
pop
loopne
sub
sbb
roll
shrl
lahf
mov
lret
dec
shll
jle
push
lret
test
cmpsb
xchg
icebp
loope
shll
arpl
mov
push
cwtl
xchg
hlt
jmp
popf
repz
jl
or
lods
loopne
mov
fsubrp
lret
or
fldl
stc
jno
fadd
push
dec
loop
dec
mov
test
cli
cmp
jecxz
and
mov
or
inc
andb
jl
jo
jb
jne
or
pop
and
out
imul
xchg
ds
sbb
jns
sbb
int3
xchg
jne
ret
movsb
xor
sub
pop
and
mov
lds
stos
stc
mov
cmp
adc
loop
and
sbb
mov
adc
xchg
movsb
sub
lods
mov
mov
mov
push
cmp
push
fidivs
jb
sub
mov
fisubrs
mov
sub
out
pcmpgtb
mov
push
jge
insl
cmpsb
jp
pushf
xor
xchg
pop
sub
aaa
fwait
dec
sbb
mov
xorb
xchg
popa
rolb
push
test
jmp
mov
and
or
mov
cmpsb
push
xor
xchg
xor
mov
call
in
cmpsb
jbe
das
inc
add
add
dec
icebp
es
jnp
pop
scas
pop
in
add
les
jg
adc
push
stc
mov
clc
sbb
dec
xorl
cmp
adc
mov
and
jno
cmp
loopne
imul
push
cs
jnp
push
ret
jmp
lret
jmp
fsincos
dec
inc
mov
nop
sar
dec
addr16
inc
gs
mov
add
push
xlat
das
mov
cli
mov
mov
movsl
push
fldcw
popa
int
or
xor
mov
xchg
adc
mov
lods
cs
xchg
adc
mov
stos
cltd
testl
shll
cmc
inc
orl
mov
incb
cltd
movsb
dec
mov
and
xor
data16
fmull
scas
push
insl
cwtl
adc
sub
movsl
xor
mov
mov
adc
out
mov
iret
imul
stos
rcrb
popf
push
cmc
cmpb
xor
ja
mov
mov
scas
cli
cld
sbb
scas
mov
test
repz
xor
out
sti
pop
data16
xchg
mov
jne
rcll
mov
cmc
aad
jnp
icebp
cltd
xor
sub
adc
push
int3
and
in
dec
popa
pop
bound
push
jno
out
add
mov
pusha
add
lds
int3
int
xchg
pop
enter
xor
mov
jb
les
xor
and
mov
jb
data16
ds
push
scas
sarb
or
mov
gs
aas
pop
push
fimuls
push
and
lcall
jns
loopne
pop
mov
cmp
or
bound
out
xchg
out
jl
cltd
idivb
lods
adc
sub
lret
sbb
popf
cmpsb
xor
push
popa
inc
shl
xor
addr16
jno
and
movsb
jg
es
sbb
sub
xor
mov
mov
outsb
cmp
dec
inc
dec
enter
or
inc
and
mov
inc
inc
movsb
mov
adc
mov
mov
and
adc
cmpsb
repnz
xor
push
imul
adc
orb
repz
aaa
add
jne
push
aam
jo
dec
add
cld
push
jmp
ficompl
cwtl
add
in
int3
leave
leave
out
jge
pop
sub
xchg
sbb
rolb
push
out
mov
jecxz
enter
sub
mov
sub
jmp
cmpsl
daa
les
xor
loopne
jg
lock
dec
ljmp
repz
cli
pop
pop
mov
dec
stos
jg
outsb
adc
out
xchg
test
pop
test
mov
rcrl
into
or
xor
popa
mov
push
add
sti
mov
adc
dec
lea
js
xor
push
or
inc
jecxz
sbb
jmp
push
int3
mov
jbe
test
adc
jns
dec
scas
gs
fimuls
adc
jle
scas
xor
sub
cmpsb
mov
mov
scas
idivb
ret
cmpsb
xchg
lods
cltd
sbb
xor
cmp
adc
nop
mov
sbb
cmp
pop
fbld
loop
mov
ror
pop
jp
mov
mov
adc
jp
mov
inc
fwait
push
out
push
mov
cwtl
jnp
test
out
push
std
mov
push
into
int
mov
dec
and
divb
faddp
jl
pop
lods
or
jmp
pop
test
int
ficoms
loopne
fadd
test
and
and
and
jl
das
sub
inc
std
dec
lret
fsubs
test
lret
or
fwait
popa
xchg
lret
outsb
jle
mov
add
jp
lods
xorb
les
jbe
mov
pop
jg
jb
nop
and
test
cld
hlt
and
imulb
jbe
rorb
jge
cmp
xchg
ret
loopne
stos
lock
lcall
mov
movsb
icebp
xchg
mov
jg
push
int3
inc
sub
jbe
xor
rolb
mov
iret
push
xor
test
push
sbb
mov
jae
jp
stos
int3
fs
mov
pusha
nop
xor
shl
xor
inc
imul
sbb
xchg
roll
sub
pushf
push
dec
mov
sub
bound
lods
movsl
outsb
cwtl
sarb
into
addr16
loop
out
les
cmp
add
dec
mov
sbbb
push
shrl
movsb
mov
sub
jle
push
xor
pop
call
cmp
in
pop
test
inc
je
push
popf
enter
cwtl
adc
mov
les
jbe
xchg
push
inc
mov
out
pop
sarl
and
jle
and
ret
jecxz
cmpsl
mov
sub
dec
daa
add
stc
in
insl
add
xchg
jg
ficomps
xchg
into
push
mov
popf
dec
pop
mov
sbb
mov
pop
pop
ljmp
test
insb
pop
in
push
xchg
sub
insb
add
adc
push
xchg
addr16
mov
mov
shlb
and
mov
and
or
mov
lcall
enter
push
sbbb
cmpsl
inc
clc
aaa
punpcklwd
and
xorl
cmp
insl
scas
push
lcall
dec
psrlq
jb
adc
adc
mov
mov
xchg
xor
sbb
push
xor
or
out
adc
inc
lds
cld
ss
insb
dec
stos
push
mov
lret
xchg
xchg
add
mov
ror
xor
stc
mov
sub
leave
sub
mov
or
or
mov
or
add
jecxz
aaa
sti
std
sbb
filds
iret
frstor
mov
pop
mov
lret
cmpsl
push
jecxz,pn
jmp
or
push
int3
ja
or
push
and
jecxz
mov
lds
nop
aas
cwtl
popf
adc
cmpsb
mov
js
shr
sub
mov
int
dec
popa
int3
lods
pop
mov
add
icebp
adc
sub
inc
xor
arpl
dec
mov
out
popa
jno
jl
cltd
xchg
das
push
push
jl
out
iret
movl
xor
xchg
cltd
addr16
xor
sub
shll
inc
inc
pop
cmpsl
adc
add
pop
dec
jge
clc
adc
test
dec
fidivs
sbb
loop
xchg
mov
nop
aaa
cwtl
jbe
ss
int
pop
and
sbb
sbb
cmp
loope
mov
ret
out
xorl
loopne
sbb
sbb
sbbl
imul
sahf
or
sahf
cmp
inc
test
lods
pop
in
or
mov
add
in
or
cmp
repnz
add
jns
movsb
out
sub
in
sbb
xor
fildll
in
shlb
mov
jno
add
fisubrs
fwait
mov
out
cwtl
mov
repnz
aaa
std
and
movsl
cmp
jae
mov
dec
in
mov
sub
xor
dec
jns
icebp
sub
inc
in
mov
iret
sbb
out
xchg
icebp
add
nop
push
test
sar
jns
mov
and
out
repnz
mov
ljmp
shl
add
jne
scas
aad
shl
nop
pop
xchg
xchg
cmp
sbb
add
xlat
and
sub
mov
bswap
push
lods
jae
jae
mov
mov
shlb
and
xlat
shll
iret
cmpsb
cs
inc
aad
jmp
push
fsubp
adc
imul
shrb
pushw
pop
mov
inc
arpl
in
test
fwait
out
mov
jg
clc
inc
dec
stos
aas
mov
and
and
daa
cs
les
pop
push
xor
cmpl
sbb
jmp
push
cwtl
and
in
jns
lret
imul
js,pn
inc
push
imul
lret
xchg
mov
cli
pop
jecxz
pop
ljmp
xchg
xchg
fnop
in
std
pop
popf
push
adc
pop
sub
adc
mov
dec
fidivs
sub
pop
adc
jmp
cmc
addb
lcall
xchg
mov
inc
loopne
ret
out
adc
cmp
movsl
imul
adc
lcall
testb
jle
ds
mov
mov
cld
jno
inc
enter
out
or
js
push
stos
sub
and
outsb
dec
mov
pop
add
sbb
add
shll
lret
bnd
arpl
adc
adc
add
aaa
in
je
sub
in
dec
ss
out
push
inc
into
leave
stos
scas
aas
sub
mov
cli
fdivrl
jecxz
iret
cmp
in
pop
loop
adc
leave
outsb
mov
into
fwait
sub
xchg
aad
cmp
fwait
int3
mov
and
mov
jo
pop
pop
push
mov
ss
push
or
push
shll
pop
jge
xorb
fisubrl
stc
les
inc
ret
xchg
xchg
clc
xchg
sbb
addb
outsl
mov
inc
xchg
or
xchg
xchg
push
pop
loopne
jp
add
jle
je
mov
stos
std
ss
dec
insl
cmp
push
add
mov
mov
hlt
gs
push
fbld
scas
jb
push
xchg
popa
insb
xchg
add
enter
cmpps
jg
dec
hlt
adc
adc
sahf
pusha
adc
cs
fdivrs
inc
push
sub
inc
or
fisttpll
pop
dec
fisubl
into
mov
xor
mov
lret
sbb
xchg
dec
rorl
adc
xchg
in
jb
sub
sub
popf
xchg
mov
insb
popf
fstpl
inc
in
xor
mov
cwtl
lods
push
bound
push
sub
pop
jmp
outsl
mov
les
pop
insl
out
adc
js
xor
repnz
ret
lret
in
sbbl
add
in
in
xor
cmp
popf
cmpsb
ret
jmp
pop
push
jae
push
mov
ds
ds
push
pop
jp
int
push
mov
dec
inc
fistpl
xchg
mov
movsl
jmp
push
sti
xchg
add
insl
mov
insb
push
movsb
xchg
pop
pop
xchg
pop
test
inc
xor
imul
fsubrp
jno
test
int
inc
pop
adc
cmp
mov
jb
sbb
dec
cld
addr16
add
adcb
mov
sbb
shll
push
or
lods
mov
call
jg
pushl
call
or
outsb
adc
in
vmread
orl
cmp
xchg
push
dec
mov
or
insl
sbb
ficoml
or
test
mov
pop
mov
jmp
xchg
jle
das
mov
cltd
push
mov
test
jle
push
ret
or
pushl
mov
or
pop
jle
jmp
scas
inc
mov
pop
sub
add
addr16
jae
icebp
cltd
sub
xor
pusha
mov
xchg
or
mov
add
xchg
dec
push
std
inc
repz
adc
mov
std
add
call
sub
lret
jnp
pop
dec
pop
cmp
mov
jp
roll
push
and
enter
dec
mov
test
xorb
insl
ljmp
repz
test
inc
add
or
mov
imul
sub
push
cltd
xchg
push
cwtl
fmulp
out
pop
aaa
cvttps2pi
inc
cmpsl
push
rcrl
mov
movsb
fbstp
jns
fwait
gs
or
mov
jge
push
push
clc
cmp
dec
and
mov
xchg
inc
loop
pushf
add
xor
mov
imul
mov
and
mov
outsb
sub
scas
repnz
test
adc
jbe
push
shll
push
push
lock
xchg
push
push
int3
dec
jns
inc
lock
gs
imul
xor
cs
mov
and
and
inc
cli
mov
rorb
jmp
push
push
or
idivl
bnd
int
xchg
mov
and
adc
rolb
xlat
xor
mov
lea
push
stc
lods
mov
or
cmpsb
sbb
push
lods
iret
out
jo
loope
add
pushf
insl
mov
pop
in
addr16
jge
sbb
repnz
mov
ret
xchg
bound
mov
gs
mov
push
sarl
pop
idivl
and
adc
fimull
les
subl
lock
ret
add
xchg
sbb
push
sub
add
or
inc
hlt
sbb
shlb
outsl
repnz
sub
popf
add
sbb
inc
lock
push
adc
cmpsl
xor
lret
dec
and
insb
xchg
or
fstpl
mov
sub
jp
ja
icebp
inc
das
testl
addps
mov
fstpl
lahf
aaa
mov
xchg
sahf
sbb
push
je
or
outsb
dec
xchg
cmp
into
mov
push
add
mov
push
lret
in
std
dec
in
mov
sbb
rcrb
dec
sar
sub
sub
scas
and
pop
pop
lock
ss
les
jne
decl
out
fs
xor
js
xchg
leave
mov
mov
mov
adc
test
repz
imul
roll
loopne
jb
lods
stos
add
sbb
not
stos
jb
scas
jecxz
sub
or
adc
cmc
mov
pop
scas
jmp
ror
outsb
jae
repnz
lahf
std
mov
add
or
sbb
arpl
fwait
daa
pop
and
in
mov
loopne
cs
sbbb
mov
cmpsb
and
xchg
in
xor
call
dec
pop
lret
popf
lea
cmpsl
dec
shll
ficomps
pushf
cs
popf
xchg
push
sarb
fnstsw
fadds
and
jge
lea
sarl
sbb
push
mov
adc
xlat
push
push
arpl
pushf
xchg
jb
cmp
dec
cmp
xor
sbb
push
mov
ja
or
inc
lds
iret
fwait
mov
sbbl
push
pop
pop
push
sbb
fisttpll
xchg
or
int3
icebp
mov
mov
sub
out
adc
lds
fiadds
ds
xchg
test
nop
dec
add
nop
std
arpl
fs
push
xchg
cmp
iret
push
mov
aad
sub
mov
push
mov
inc
stos
push
push
outsl
es
sub
ret
push
pop
mov
and
sub
xlat
aad
mov
jne
add
pop
sub
jl
jle
aaa
divl
xor
adc
daa
sbb
aad
mov
cmpsb
out
jl
loope
aam
mov
imul
ja
hlt
and
jo
push
xor
fwait
xor
test
aaa
lcall
into
jne
shr
sahf
dec
das
cmc
shll
lcall
aad
sub
gs
or
mov
call
imul
pop
sahf
int
out
dec
pop
mov
push
insb
sbb
scas
fucom
adc
cmp
mov
mov
js
fsub
mov
inc
dec
mov
pusha
jbe
loopne
sbb
rolb
inc
stos
mov
cmp
or
in
adc
mov
push
hlt
pop
fidivrs
mov
into
or
sbb
adc
cmp
mov
insl
xchg
int
arpl
out
add
insl
sbb
mov
ficomps
cwtl
sbb
iret
or
jb
lods
xor
je
dec
pop
jmp
sbb
movsb
fucom
add
pop
lds
decb
xchg
jp
lret
shlb
inc
or
stc
mov
dec
xchg
notl
outsl
mov
ror
sub
idivl
dec
mov
dec
sbb
dec
sti
xor
fistps
cmc
js
cli
and
push
lea
mov
inc
mov
mov
and
mov
call
outsb
enter
inc
xchg
sarl
loop
fmuls
cmpsl
inc
jmp
out
push
sbb
into
ljmp
push
jne
es
adc
dec
mov
sbb
lock
mov
insl
or
mov
cs
fwait
ret
inc
sub
pop
fstl
push
ret
insl
and
cltd
and
xor
shll
dec
sub
mov
adc
jno
xor
cs
stos
out
adc
aaa
fwait
mov
add
and
mov
fistpll
mov
jmp
adc
icebp
ret
pushf
xchg
hlt
es
call
test
jg
rcrb
add
fdivl
add
xchg
pusha
frstpm(287
push
out
loopne
push
stos
push
xchg
cmc
ret
dec
push
mov
inc
std
out
scas
jno
add
pop
in
stc
ret
mov
dec
aad
repz
mov
dec
bound
aaa
cli
mov
sti
xor
in
xchg
aas
push
mov
out
jg
mov
cli
mov
dec
xchg
mov
mov
xchg
ret
movsb
cs
aad
mov
hlt
dec
or
xchg
xchg
xor
adc
or
push
push
lods
mov
pop
leave
aad
sahf
cs
jns
pop
in
sub
push
aaa
pop
ret
push
cmpsb
add
push
cmp
inc
adc
out
mov
xor
mov
incb
cltd
jecxz
mov
xlat
or
mov
mov
cmp
orl
sub
mov
and
adc
rolb
lret
jle
push
inc
xor
inc
in
push
dec
mov
inc
xor
cmp
lods
mov
cmp
aad
mov
inc
mov
lcall
sub
es
aam
add
or
mov
loope
lret
sbb
mov
jne
lret
xchg
push
and
jmp
test
test
mov
in
cmp
pop
aam
or
test
stos
lock
jl
add
xor
int
pushf
jb
push
iret
pop
jae
fs
mov
mov
push
add
movsl
mov
jb
lock
jb
ljmp
push
or
pop
and
dec
push
push
inc
hlt
test
xchg
pop
in
in
fidivrl
add
cmp
jns
cs
jb
shl
mov
or
push
jo
dec
out
lods
sbb
adc
cmp
and
add
sbb
mov
add
loop
fdivr
in
rolb
lock
ret
stc
test
mov
rol
mov
xchg
jge
mov
mov
leave
cmp
mov
call
stc
pop
cmc
pushf
ljmp
fcoms
mov
mov
push
or
and
adc
out
adc
scas
test
xor
fistpll
cmpsb
call
pop
adc
stos
add
jbe
out
fidivrl
movsl
test
gs
push
add
jg
loope
pop
mov
dec
test
mulb
lea
sti
aaa
iret
cmpsl
dec
cld
es
sahf
adc
scas
ljmp
inc
cli
mov
mov
xchg
iret
aas
pop
ja
xchg
mov
call
sahf
js
xor
scas
aaa
clc
mov
aaa
xchg
pop
or
cmp
jno
insl
push
in
insl
mov
ds
adc
aad
mov
mov
popf
sbb
cmp
lds
xchg
sbb
xor
push
fcmovu
xorb
cwtl
xchg
rcrb
cltd
inc
adc
je
xchg
push
sbb
in
cmp
dec
out
loopne
leave
dec
and
ljmp
xor
or
mov
loope
notb
cmp
sbbb
shrb
out
movsb
stos
sub
cwtl
jb
add
pushl
adc
mov
jmp
sbb
jae
int
andl
call
dec
mov
pop
pop
je
inc
ljmp
in
imul
roll
jb
shll
pop
adcb
jae
mov
mov
inc
sub
sti
insb
in
lcall
cmc
dec
jae
rorb
mov
or
lods
mov
dec
mov
int
jne
mov
fstp
gs
xchg
and
out
andb
mov
pop
cmpsl
jbe
stos
test
popf
dec
popa
jae
inc
fwait
push
mul
and
jb
shrl
stos
daa
xor
in
repz
rorb
cmpsb
mov
shll
push
push
scas
ja
dec
jno
cmpsb
push
aaa
dec
movsl
jg
jno
shrl
xchg
inc
shrl
xchg
and
xor
cmp
or
mov
pop
insb
cmp
lahf
xlat
or
daa
es
test
fisubrl
push
cmp
xchg
add
lahf
loope
push
sbb
pop
lods
jle
test
sahf
into
test
adc
or
push
cmp
lock
jmp
in
fdivrl
cmp
mov
xchg
lea
pop
and
fdivrl
push
xchg
faddl
push
push
jp
inc
jo
mov
xchg
inc
neg
in
xor
sub
iret
and
out
dec
cmp
fsts
add
jno
add
cwtl
push
mov
sub
addr16
adc
sbb
mov
mov
nop
xchg
gs
fwait
jg
sub
jno
sahf
xorb
js
push
xor
inc
lret
mov
hlt
push
xor
repnz
sbb
jb
jb,pn
cli
shrl
sahf
mov
pop
ret
stos
dec
jmp
pop
adc
lcall
ja
call
fsubl
repnz
dec
test
ret
decl
mov
ljmp
push
xor
jns
cmp
add
push
daa
mov
loopne
inc
mov
push
xor
xchg
xor
xor
pop
das
fs
jno
cld
test
cltd
push
into
jle
stos
imul
mov
lods
jae
faddl
out
loop
or
movb
mov
fs
add
cli
popa
sub
les
sarb
fwait
cli
push
mov
push
cmpsl
cmpsb
adc
jge
push
push
add
mov
add
sub
adc
and
adc
daa
dec
in
das
insb
outsb
rcrl
cwtl
adc
mov
stos
out
test
push
loopne,pt
fwait
out
or
inc
mov
sub
mov
xchg
sbb
sbb
or
mov
data16
pop
push
daa
out
lods
cld
pop
adc
mov
add
out
enter
dec
std
fwait
sbbl
mov
arpl
inc
fsub
cmpsl
or
ror
stos
imul
imul
adc
les
add
imul
xor
das
lcall
ss
push
sbb
push
pop
test
jp
ljmp
mov
movsb
or
pusha
jmp
dec
mov
mov
movsl
adc
or
in
or
movsl
rcrl
adc
cltd
cmpb
inc
testb
sbb
xchg
shlb
cmpsl
adc
pop
add
ret
jno
mov
xchg
jle
orb
push
xchg
pop
xorb
mov
adc
fadd
sub
xor
mov
cmp
xchg
es
inc
sub
dec
ret
out
sbbb
iret
out
mov
in
mov
pop
test
sub
in
push
sub
push
jmp
push
gs
aad
roll
out
inc
mov
jae
int
push
loope
xchg
nop
and
dec
lret
mov
ficomps
cmp
dec
lds
aaa
mov
xchg
push
movsb
dec
out
xlat
mov
add
enter
jbe
or
jne
mov
inc
jle
aam
and
ljmp
inc
ljmp
cmpsb
aas
pusha
mov
mov
call
shrl
dec
jmp
push
xchg
cmp
out
push
test
cmp
aaa
cltd
sbb
pop
inc
xchg
movsb
dec
mov
inc
lret
aaa
mov
inc
sub
mov
jae
mov
lahf
push
inc
outsl
cs
fs
jnp
fisubl
out
xchg
mov
or
insl
sub
inc
mov
stos
jns
cld
xlat
gs
aaa
adc
xchg
in
movsb
arpl
sbb
cmp
or
test
adc
pop
pop
js
push
or
push
add
mov
or
and
cmp
mov
jno
not
and
jmp
aas
mov
sub
push
jo
add
orb
push
or
mov
mov
fstpl
test
pop
pinsrw
inc
jecxz
and
ret
cwtl
xchg
rclb
push
sbb
sbb
les
ret
dec
pop
shl
loop
dec
xchg
adc
test
push
mov
mov
jmp
inc
mov
shll
xor
push
cmc
inc
andl
push
push
sbb
pusha
popf
dec
sbb
jg
andl
pop
cmp
scas
int3
arpl
sub
mov
xchg
fwait
mov
or
dec
sub
stos
xor
clc
sbb
jle
add
pushf
movsb
fidivrs
addr16
aaa
test
sub
jnp
xchg
and
xchg
mov
dec
xor
mov
popf
inc
jecxz
push
dec
add
bound
push
pop
movl
mov
sub
fadds
push
push
cs
testl
fldt
test
into
ds
fcoml
pop
dec
rcrw
or
sub
adc
std
sbb
lds
movsb
popa
lods
pop
jo
mov
pop
scas
inc
std
neg
jge
test
pop
dec
or
add
jle
aas
out
fisubrs
fcomp
or
lahf
ret
mov
lcall
add
leave
sbb
sbb
sub
clc
xor
leave
jge
data16
cwtl
cmp
fdiv
in
repz
test
xor
mov
in
sub
and
jne
pop
rclb
out
cmc
inc
xchg
and
pop
ja
push
stos
in
mov
repz
hlt
sbb
negl
sbb
sarl
shlb
data16
icebp
call
idivb
out
adc
or
pop
repz
fwait
int
lahf
je
lcall
and
cwtl
mov
adc
pop
imul
sub
pusha
notl
push
inc
lods
push
fmull
cmc
or
sbb
andl
out
pop
lahf
pop
movsb
es
pop
popa
call
inc
xorb
flds
cwtl
leave
inc
adc
shrl
js
mov
inc
adc
pushf
sbb
sarb
mov
jno
push
pusha
insl
jecxz
pop
sub
out
jae
stc
push
dec
sahf
std
cmc
cmp
jae
leave
loope
mov
pop
ds
ficomps
mov
hlt
daa
rcrl
add
pushl
sarb
loope
out
mov
push
testb
loop
inc
mov
inc
leave
int
fldt
hlt
cmpsb
clc
aad
sbb
push
icebp
mov
into
shll
jo
push
dec
sbb
and
xchg
push
pop
cmc
test
in
lea
es
dec
cmpsl
inc
ret
into
sahf
test
jnp
outsb
dec
rclb
scas
leave
adc
or
std
adc
data16
nop
push
push
mov
jo
sub
mov
push
xchg
cwtl
in
mov
gs
out
push
shll
sub
or
mov
arpl
inc
xchg
xchg
cmp
lods
mov
stos
stc
cld
bound
xchg
scas
and
inc
fmuls
pop
mov
cmpsl
sub
cmp
pop
mov
sbb
inc
mov
aam
lret
dec
adcb
push
adc
push
aad
mov
sbb
ljmp
loopne
mov
mov
dec
cmovbe
in
pop
icebp
lods
pop
push
or
js
rorl
insl
fistpl
sub
jne
xchg
clc
aad
and
push
add
mov
lret
shlb
xchg
add
imul
add
fxtract
cmp
add
ja
hlt
mov
lock
push
ljmp
inc
dec
inc
push
inc
push
ljmp
out
jo
inc
icebp
xor
push
jl
push
scas
sbbb
and
sbb
dec
xor
pop
movsb
cmp
add
scas
cmp
jbe
scas
cmp
and
push
xlat
and
stos
dec
hlt
fs
das
cwtl
xor
aaa
pop
and
sub
pop
inc
push
mov
fisubl
bound
ret
std
addl
inc
lahf
xor
cmp
mov
dec
lock
into
xchg
adc
jge
ljmp
lea
sbb
and
shlb
sbb
lret
xor
ds
dec
out
lea
cmpsl
cmp
loop
lret
mov
jo
mov
dec
mov
push
xchg
imul
pop
push
jae
or
inc
jo
cmp
inc
mov
ds
jecxz
jne
lcall
xchg
cmc
sub
pop
lods
fstpt
cmp
xor
inc
xchg
mov
leave
xchg
or
jge
js
inc
lret
int
jae
cmp
lret
push
push
mov
lcall
mov
ret
pop
adc
lret
inc
pop
pop
lods
mov
mov
sub
lock
orl
push
int3
pop
pop
in
aaa
xor
jle
mov
scas
insl
fadds
fldenv
cmp
push
dec
sbb
stos
repz
cs
add
aaa
fs
iret
mov
mov
fisttpl
stc
rorb
jae
and
and
xchg
dec
xor
dec
inc
sub
cs
xchg
adc
dec
add
mov
push
faddp
jp
in
lcall
lret
sub
add
emms
xchg
fsubs
dec
dec
add
cmp
xor
lock
cbtw
fmull
push
or
lds
ss
cld
rclb
inc
and
mov
adc
jb
cmp
pop
xor
bound
aad
fisttpll
sub
rorb
test
add
and
jp
lret
popa
outsl
or
ja
push
ret
pop
mov
cmpsb
pop
mov
int
popa
addr16
lahf
int
inc
jb
popa
xor
inc
outsb
sbb
pop
ret
inc
lret
xchg
std
iret
jb
lock
leave
and
inc
xchg
in
stc
rcrb
push
insl
lds
or
insl
movsl
lods
cmp
lds
cmpsl
sub
lcall
pop
arpl
insb
push
cmpsl
decb
out
lahf
scas
add
int
leave
out
xchg
orl
cld
jp
int
rolb
xor
test
mov
sub
bnd
rcrb
fs
pop
test
sbb
inc
push
jo
aad
imul
cmp
or
add
out
jl
into
push
aad
loope
mov
lahf
addl
mov
ds
addl
es
lds
mov
or
ficoml
scas
inc
imul
add
fwait
push
adc
push
jmp
fwait
ja
xor
lret
fstpt
push
cmp
pop
popa
rcrb
shll
outsl
mov
fs
daa
sahf
xor
call
es
dec
loop
or
sbb
inc
mov
scas
lea
iret
loop
mov
fwait
inc
movsl
sub
lahf
mov
lea
pushl
add
inc
into
jns,pt
cmp
fcmovu
or
mov
repnz
daa
fbstp
sub
sub
lea
mov
stos
movsb
or
inc
hlt
fisubrl
mov
and
subb
movl
add
push
push
dec
int3
int
or
popf
imul
and
adc
dec
jecxz
adc
sub
mov
pop
iret
push
sbb
mov
mov
test
std
movsl
inc
je
pop
movsl
stc
les
mov
shrl
dec
arpl
mov
dec
out
jnp
mov
loop
insl
mov
cld
je
call
mov
cmpsl
stos
mov
add
dec
cmp
frstor
popf
cli
sbb
movsb
ljmp
cmpsb
fidivs
inc
cmc
pop
imul
push
xchg
lcall
sub
xchg
iret
data16
ficoml
jae
pop
and
fwait
lahf
cmp
xchg
inc
mov
pop
adc
push
in
lcall
lret
cmc
adc
xor
cmp
add
hlt
out
insl
or
mov
enter
jbe
sbb
lcall
adc
add
int
jg
outsl
je
jle
lea
loop
inc
pop
push
ja
jmp
fdivs
add
cwtl
cwtl
loope
mov
fistpl
arpl
mov
lea
jmp
push
cmpsb
dec
iret
insl
lock
lcall
addl
inc
cli
sbb
and
sahf
sbb
pop
rclb
movsl
cld
vpmadcsswd
in
mov
es
daa
xchg
popf
mov
stos
mov
xchg
lea
adc
push
lcall
in
test
les
mov
subl
add
in
mov
lea
inc
loope
and
mov
fptan
add
xchg
dec
push
mov
inc
push
fs
lcall
je
testl
mov
cs
and
pop
loope
add
mov
mov
sub
fsubl
jnp
mov
mov
inc
push
rcr
mov
pop
xchg
dec
arpl
in
insl
out
push
pushf
dec
subl
lret
mov
mov
jl
loopne
mov
push
mov
add
cmp
add
jae
xchg
inc
mov
out
sbb
mov
stos
xlat
lds
lods
jae
fcoms
xor
data16
js
test
cmp
inc
lock
sub
movsl
nop
out
cld
jp
pop
lea
negb
std
cmpsl
out
incb
outsb
ret
xchg
inc
or
or
scas
mov
repnz
in
inc
sbb
mov
std
insb
dec
decb
sub
fwait
add
cld
mov
inc
push
jecxz
xchg
daa
sbb
pop
in
shlb
inc
int3
cmp
lea
stc
pop
mov
in
add
ret
test
das
dec
adc
mov
push
inc
push
stc
scas
into
dec
insl
iret
mov
push
fwait
lods
jecxz
xor
test
xchg
inc
dec
jl
lock
aas
dec
cmp
mov
dec
xchg
adcb
sbb
cltd
mov
shll
inc
or
arpl
sbb
pop
out
dec
loop
pop
repz
mov
add
ja
sub
test
pushf
and
and
cltd
imul
shlb
mov
scas
dec
jp
in
jne
insl
fsubs
add
cmp
inc
adc
rcll
in
pop
dec
sarb
out
sbb
loopne
addr16
cwtl
fucomp
mov
addr16
ja
pop
das
push
addb
pusha
lods
popf
out
lods
pusha
push
xor
orb
add
aaa
pushl
pop
inc
lods
pop
scas
outsb
call
mov
sub
shll
loop
mov
test
jbe
cmp
test
pop
clc
cwtl
aam
mov
cmp
mov
dec
mov
clc
cmc
xor
push
xor
loop
scas
pop
fdivs
dec
mov
pop
cs
cs
pop
cmc
jno
cwtl
add
inc
cmp
fs
xor
mov
push
inc
push
sahf
jmp
cmc
arpl
pop
and
pop
xor
add
shl
fucomp
mov
add
lret
cmc
rclb
and
xchg
mov
test
dec
add
push
jns
or
mov
lret
xchg
cli
cmp
adc
iret
or
sub
repz
std
iret
mov
pop
mov
or
insb
adc
adc
hlt
das
inc
sbb
push
add
pushf
add
scas
sbb
mov
jne
xor
inc
xor
popl
leave
pop
mov
repnz
inc
leave
adc
add
cltd
jns
mul
movl
jp
mov
scas
xchg
push
and
cld
and
lahf
bound
xchg
xchg
pop
sti
xor
subb
aad
xchg
repnz
mov
jl
add
les
lahf
js
dec
cmp
jae
sbb
into
sbb
mov
test
pusha
inc
data16
mov
cmp
fs
mov
call
lret
test
pop
rolb
mov
and
pop
iret
out
and
cmp
rolb
jae
adc
and
test
xchg
sbb
adc
or
cmp
mov
gs
xor
cld
mov
mov
mov
insl
notl
mov
andb
pop
fwait
push
pop
popa
xlat
in
fidivrs
mov
mov
cmc
adc
adc
movsb
in
test
int3
incl
pop
mov
or
dec
fs
cwtl
add
repz
imul
jae
movsb
xchg
ret
imul
or
gs
hlt
clc
dec
mov
sbb
data16
pop
dec
sbb
sub
xchg
sbb
add
pusha
and
or
and
and
scas
scas
or
mov
inc
mov
ss
addr16
enter
shlb
shrb
ret
popa
or
mov
pop
inc
fnstenv
loop
xchg
inc
sbb
adc
gs
inc
sbb
rorl
lock
dec
adc
jecxz
lock
ret
xor
lds
pop
leave
inc
shl
out
ss
aad
add
xlat
cli
add
inc
outsl
loop
or
jp
cmpsb
xor
cmp
int3
loop
jl
scas
jnp
lea
fstl
popa
imul
mov
and
fnsave
adc
and
std
inc
mov
es
roll
sub
int3
sub
mov
sbb
clc
mov
mov
std
mov
stos
add
dec
and
adc
xor
lds
imul
mov
xchg
movsb
les
and
push
mov
lcall
mov
js
dec
or
sti
mov
aas
inc
or
mov
cmpsb
mov
lds
push
pop
sub
xor
jb
xchg
enter
andb
stc
das
sub
jne
mov
mov
negb
jle
dec
int
loope
inc
scas
xorl
loope
fwait
jecxz
mov
push
rcr
shr
push
fsubl
outsl
rorl
push
ficoml
insl
fldcw
fdivr
std
dec
popf
inc
enter
jl
cmpsb
mov
xorb
dec
loopne
jmp
hlt
fldcw
sub
mov
test
imul
mov
jp
data16
ss
fdivl
pop
sub
adc
call
jl
data16
mov
xor
fsubr
popa
outsb
rcl
xchg
xor
inc
ficomps
mov
insb
xchg
insl
sub
clc
loope
and
sub
cwtl
fdivp
dec
mov
notl
adc
test
bound
std
cwtl
mov
push
out
cmp
mov
in
push
cmp
mov
sub
inc
lock
mov
stos
cmp
jmp
sub
add
jecxz
ja
pop
les
test
rolb
dec
sti
shlb
shlb
ljmp
cmp
sbb
xchg
inc
test
and
fldz
int3
xchg
stc
or
mov
movsb
das
jl
mov
mov
pop
popa
add
lock
test
mov
jb
cmp
out
cmp
icebp
arpl
dec
pop
pop
jbe
mov
jb
arpl
stc
cmp
xchg
push
inc
push
xor
sti
std
ds
jl
mov
cmpsl
push
ret
rol
in
cmp
xor
sbb
aaa
jp
push
xchg
test
mov
pop
jp
or
repnz
push
push
jecxz
jns
subl
stos
push
addr16
loope
sub
fbstp
push
filds
and
pusha
xchg
mov
sbb
add
fwait
mov
xor
mov
orb
je
jl
out
jbe
push
stos
cwtl
cld
and
stos
fisttpl
lods
xchg
jge
cld
in
xor
das
jae
jbe
fisubl
out
push
cmpsb
push
pop
jp
orl
mov
xor
xchg
aaa
add
dec
push
addr16
xchg
mov
jbe
dec
test
int
inc
jbe
aam
fsubrl
adc
mov
aad
pop
shll
cld
out
add
adc
jl
cmp
repz
ficoml
mov
movl
inc
mov
mov
aaa
dec
stc
xchg
hlt
adc
sahf
das
add
and
mov
ds
or
cmp
decl
xor
push
divb
jnp
xor
xchg
pop
add
xchg
sbb
cmp
xor
lahf
pop
dec
punpckhwd
lret
enter
dec
pop
test
pushl
popaw
enter
andb
enter
mov
js
jecxz
mov
cmp
inc
mov
sbb
int
aaa
repz
inc
sahf
cs
xor
ja
fstpl
add
add
push
sub
lods
pop
jo
int
loopne
jns
mov
sbb
dec
popl
mov
out
adc
mov
jmp
mov
stc
push
inc
mov
mov
inc
call
scas
and
je
fstpl
jne
dec
dec
cmp
mov
sub
rorb
mov
jl
dec
pop
sbb
sahf
push
mov
xor
adc
loope
push
jge
push
pop
cmp
xlat
adc
andb
test
adc
mov
xlat
mov
mov
test
sub
pop
lea
add
ss
mov
mov
sbb
xchg
sahf
pop
mov
aaa
in
jo
test
adc
sbb
jmp
clc
xor
in
mov
pop
cmc
add
test
xlat
pop
push
sbb
push
push
push
push
or
fwait
aam
dec
cmc
ss
enter
jno
repnz
inc
push
dec
or
addl
fwait
imul
popf
inc
xorl
fisttpll
inc
and
mov
pop
mov
stos
icebp
dec
scas
int
lcall
int
scas
mov
mov
pusha
inc
enter
imul
jne
out
adc
or
shll
out
inc
pop
daa
sbb
fsubr
popa
vpmaddwd
adc
enter
jle
push
push
test
mov
movsb
in
pop
and
jge
sbb
imul
pop
popa
imul
and
sarb
lds
jmp
adc
xchg
pop
sub
cmp
add
xor
insl
aad
jp
pusha
rcrl
insb
enter
decb
pop
shl
sbb
mov
xor
rcrl
mov
inc
adc
mov
lds
jne
sub
mov
push
push
mov
add
out
jae
inc
or
loope
fbld
add
xor
xchg
xor
mov
and
icebp
lods
out
pop
mov
mull
ljmp
cmpsb
into
mov
adc
jne
movsb
ss
in
pop
and
bound
mov
or
sbb
in
adc
xor
fcoml
imul
mov
and
int3
push
outsb
cmpsl
mov
insl
or
imul
vrcpss
adc
jl
fs
adc
fisubs
divb
cld
adc
int3
and
rclb
sbb
leave
xor
mov
mov
jg
cmp
divb
lock
mov
addb
or
loope
mov
xor
mull
push
sbb
cmp
mov
fisubrl
fstps
lea
jg
sbb
cmpsb
ds
pop
imul
push
xor
jle
jmp
fldt
out
cmp
scas
or
cwtl
fdecstp
leave
sbb
or
sahf
xlat
div
iret
xchg
mov
fistl
lea
in
xchg
adc
mov
into
dec
sbb
inc
orb
jecxz
sbb
in
add
arpl
cwtl
sar
fnclex
das
out
mov
ljmp
movl
ljmp
stos
movsl
xor
sub
inc
pop
hlt
push
xchg
stos
test
scas
mov
lods
add
out
xor
mov
divb
ss
ss
cmc
mov
rcrb
jecxz
sbb
lret
ja
leave
push
in
jae
jae
mov
cmp
sub
sbb
popf
sbb
mov
insb
jbe
xlat
lock
divb
push
sbb
xchg
dec
addr16
stc
out
cmp
scas
mov
cmp
xor
fdivrs
mov
push
icebp
jns
xchg
test
add
mov
sbb
mov
in
loopne
ficomps
in
lcall
ret
lret
pop
mov
call
in
sbb
shlb
lods
pop
jg
fldcw
movsl
dec
bound
push
mov
in
das
pop
sar
push
dec
or
cmpsl
mov
rcl
mov
mov
inc
cmp
int3
push
ret
mov
call
ficomps
leave
loope
mov
shll
adc
scas
test
xchg
insl
mov
cmpsb
daa
mov
popa
std
int3
decl
jg
jae
notb
bound
mov
mov
in
inc
negl
int3
pop
cwtl
lods
push
bnd
lds
cmpsb
xor
push
dec
aas
divl
pop
jmp
mov
cmp
inc
lods
fistl
jmp
jecxz
loope
push
daa
push
daa
fwait
movsl
xor
fdivl
jb
xchg
js
in
dec
out
loopne
xchg
xor
fbstp
loope
sub
mov
sbb
jae
daa
inc
ds
adc
cmc
push
repnz
lds
js
lock
mov
lahf
sub
rcrb
sbb
bound
imul
jl
loopne
gs
xlat
push
pop
stc
pop
fisttps
push
jae
pop
gs
popf
jo
xor
jg
out
leave
mov
xchg
xor
inc
inc
pop
or
push
lret
stc
lock
jle
adc
push
adc
jb
negb
test
dec
addr16
sar
ja
arpl
jb
cmpl
shrb
xchg
cmp
shlb
out
out
cld
jno
out
addr16
push
imul
leave
add
sti
push
stc
mov
lea
mov
popa
xorb
iret
or
in
mov
sub
imul
or
jg
mov
test
stos
in
cltd
idiv
bound
clc
inc
pop
inc
dec
push
cmp
aas
enter
gs
repnz
sbb
mov
lock
jecxz
mov
sub
sarl
bound
inc
mov
mov
sub
faddl
loope
sbb
sub
adcl
push
sahf
xchg
test
adc
sbb
xor
mov
out
imul
pop
push
fiadds
jbe
test
fs
sub
push
lods
and
hlt
cli
andl
mov
sub
gs
lret
repnz
dec
or
aaa
jmp
pop
push
popf
shl
mov
movsb
xchg
xor
push
mov
stos
lahf
in
cmp
out
cltd
lret
cmp
adcb
or
mov
aas
dec
mul
outsl
cwtd
mov
mov
cld
xchg
mov
dec
and
into
imul
jge
dec
pop
adc
sub
arpl
jnp
dec
test
subl
faddl
sbb
lcall
jae
sub
pop
pop
and
dec
lcall
xchg
lods
inc
xor
lret
cmp
cld
pop
sbb
addr16
int
sbb
into
adc
ret
push
insl
fwait
dec
mov
insl
insl
and
cmpsl
xchg
shr
xchg
mov
clc
adc
adc
xorb
push
adc
sahf
xchg
inc
pop
dec
sbb
testb
or
test
cli
jg
inc
mov
test
mov
adc
sbb
int
mov
enter
scas
fiadds
imul
leave
into
mov
and
jo
and
js
fcmovbe
jbe
cmp
dec
push
mov
push
and
xchg
mov
jp
jb
sahf
cmc
outsb
in
shl
rol
fwait
mov
clc
jecxz
mov
pop
mov
mov
incb
inc
lahf
es
insb
jbe,pn
mov
adc
loope
push
stos
add
dec
pop
lret
jg
gs
cmp
je
adc
loop
dec
lock
int3
mov
jb
push
sub
pusha
inc
out
scas
in
push
inc
out
daa
popa
popa
movsl
push
cwtl
icebp
xchg
mov
push
pop
mov
mov
sub
lods
jp
sbb
test
in
int
jnp
push
stos
or
jmp
lock
adc
pusha
dec
fisttps
cmc
jmp
push
xchg
arpl
ljmp
fcmovb
xchg
in
xchg
push
jo
out
into
outsl
jns
movsb
call
mov
cmc
sti
adc
out
imul
fiaddl
sbb
das
sub
fcompl
mov
nop
push
outsl
shll
inc
data16
pop
add
in
or
jecxz
stos
xchg
jo
push
adc
loop
mov
mov
adc
mov
repnz
add
std
or
scas
hlt
lret
pop
pop
call
push
pop
push
cmovg
mov
fwait
cmp
mov
cld
lret
enter
sti
cld
dec
sub
push
mov
xor
jno
lahf
loop
hlt
xchg
outsb
jne
mov
sbb
stos
mov
push
xchg
fnstenv
xchg
mov
lahf
xor
cmp
jo
or
fld
loop
stc
and
mov
mov
cmp
mov
xchg
cmp
outsl
add
or
jb
mov
inc
movsl
imul
or
fsubr
in
mov
xchg
mov
mov
add
stos
push
jnp
jecxz
sub
aas
and
out
mov
sbb
sub
dec
pcmpgtw
hlt
in
out
and
movzwl
aaa
out
lock
cld
add
ret
and
bound
push
pop
js
mov
mov
cmp
insb
sbb
push
xchg
jmp
and
dec
fcmovne
test
inc
sbb
js
and
imull
xor
xchg
jbe
jg
leave
test
fldenv
push
das
in
cmc
push
cwtl
jl
push
sub
mov
dec
outsl
cmp
jns
xor
scas
push
mov
ljmp
aaa
mov
arpl
iret
arpl
gs
dec
add
jle
ja
pop
mov
out
jnp
cmpsb
addr16
mov
push
adc
int
pop
das
mov
negb
sahf
lock
stos
jle
jle
insb
jle
into
sbb
mov
ja
dec
xchg
fimull
cmpsl
daa
stos
sbb
push
xchg
xorl
in
into
ja
jae
sub
xlat
adc
inc
xor
imul
add
fld
scas
mov
jmp
mov
lahf
pop
imul
mov
and
jno
cmpsl
dec
mov
pop
cmp
ret
jae
add
aam
inc
insl
outsl
mov
xor
dec
sbb
fnstenv
cmp
ret
lahf
pop
mov
mov
cmpsl
fiaddl
mov
rorl
rcrl
inc
xchg
insb
bound
mov
cmp
dec
or
adc
out
dec
sub
pop
jae
xchg
sbb
mov
into
js
xchg
adcl
mov
cmp
push
sbb
fbstp
pop
jb
mull
mov
inc
add
dec
inc
pop
arpl
pop
fsub
dec
inc
test
pop
mov
loop
push
push
nop
push
pop
mov
jg
iret
xchg
cmpsb
fwait
addr16
inc
orl
es
adc
mov
int
cmpsl
sbb
sbb
jp
imul
cwtl
in
shll
mov
out
sub
xor
cmpsl
mov
add
and
and
mov
dec
lahf
into
adc
mov
stos
pop
stos
mov
int
clc
sti
xchg
lcall
xchg
cmp
xor
sbb
push
jecxz
addl
xor
es
rcr
jae
sbb
or
and
out
cwtl
pop
scas
fcomps
in
leave
push
aad
stos
jae
jns
push
in
cmp
pop
and
or
xchg
pop
mov
jnp
mov
test
ficompl
lock
fbld
jg
and
cmc
or
sahf
movsb
mov
fsubr
and
push
jle
jne
jmp
repnz
mov
icebp
mov
xchg
inc
cmpl
out
aad
push
or
and
and
scas
inc
jnp
loope
pusha
push
inc
movsb
outsl
bt
lahf
cmp
pusha
sbb
mov
push
adc
scas
cmp
jge
cmp
lahf
dec
xchg
rcrl
dec
lock
lods
mov
insb
fwait
pop
lock
push
sbb
insb
loopne
pushf
jnp
test
sbb
cmp
test
movsl
jne
xorb
pop
faddl
in
out
arpl
sub
bound
cmpsl
pusha
sub
mov
out
cld
sub
dec
fstpt
test
xchg
or
mov
cmpsb
lods
sbb
mov
test
add
mov
jp
cltd
lea
mov
push
out
ja
or
pop
in
aas
int3
movq
push
stc
inc
mov
lea
cwtl
addr16
and
lahf
stos
sti
xor
imul
aaa
xchg
ss
pop
mov
popl
or
js
into
sbb
lcall
xor
inc
or
or
pop
movsb
lret
xchg
xchg
movsb
or
bound
jle
imul
ficompl
loop
outsb
js
mov
push
jmp
push
popa
mov
xor
cmp
fwait
pop
mov
fmull
inc
sub
movsb
out
push
mov
xchg
jo
jne
notl
cmpsb
sub
dec
push
pushf
ljmp
adc
dec
das
shufps
cmp
jne
cli
push
int
push
js
loope
jmp
xchg
mov
push
pop
icebp
movsb
pop
fstps
or
pop
popa
or
lea
fistpl
add
pop
data16
sub
push
pusha
xchg
lret
or
xor
shrl
movsl
loopne
shll
shlb
or
imulb
xor
insl
hlt
lods
or
lock
and
xchg
ret
subl
ret
movsl
test
or
push
lret
jl
sti
ror
repnz
ljmp
inc
movsb
push
out
mov
jno
lret
mov
cmp
xor
xchg
xchg
mov
cmp
paddusw
call
mov
push
icebp
mov
cltd
cmpsl
mov
mov
out
repnz
push
mov
sahf
test
push
lds
mov
arpl
jno
cmp
push
xor
fwait
xchg
fwait
std
mov
sbb
lods
xor
dec
in
pop
sub
loop
dec
setg
test
arpl
xchg
mov
mov
call
mov
xor
insb
push
dec
adc
arpl
inc
lret
lahf
cs
les
cmp
xchg
xor
adc
jp
fmuls
test
scas
stc
cmp
push
incl
loope
adc
push
test
rorb
sbb
xchg
jne
mov
pop
test
inc
add
cmp
pop
xchg
xchg
jb
pop
mulb
mov
sub
jae
cmp
daa
out
nop
repz
fmul
jno
daa
adc
mov
loope
fs
sbb
aas
rcrl
fidivl
adc
dec
jb
dec
ja
popl
je
fstpl
ret
inc
addr16
mov
lods
shl
mov
cld
add
mov
and
add
or
sub
pushf
add
sub
shrl
or
test
and
notb
ljmp
mov
pop
mov
ds
jb
pop
mov
push
dec
xlat
sub
cld
push
mov
lds
push
sub
movsl
dec
testl
pop
and
add
mov
jno
loopne
sarl
jle
mov
mov
mov
pop
divl
pop
bound
bound
xchg
fstpl
xchg
inc
pop
jno
mov
add
xlat
repnz
pop
adc
adc
fisttps
xor
loope
shl
jge
pop
nop
pop
rolb
sub
mov
iret
icebp
or
insb
leave
or
dec
mov
xchg
out
out
fidivrs
mov
mov
fdivs
movsl
movsl
jo
icebp
and
xchg
cmpsl
orl
aas
push
test
filds
ss
mov
or
sub
sbb
test
cmp
xor
sub
or
lock
test
push
xchg
mov
or
and
pop
xchg
inc
jmp
dec
subb
inc
lahf
lods
add
mov
xor
test
in
setae
ss
clc
das
adc
jne
icebp
jecxz
insb
int
sub
scas
cs
cmp
rcl
inc
sbb
aaa
aam
jg
sti
rorb
fcoms
fdivl
push
pop
js
int3
dec
dec
xlat
and
imul
subb
stos
call
mov
js
stos
jle
add
jp
in
sub
fstpt
lcall
cmpsb
adc
sarl
xchg
mov
subb
test
mov
add
sbb
pop
movb
push
shlb
pop
dec
mov
daa
dec
add
repnz
iret
push
inc
repz
jae
les
jo
test
mov
icebp
stos
push
jge
push
ret
sbb
vcmppd
pop
andb
fmull
pushf
imul
test
dec
iret
adcl
jno
in
ss
cmp
ficomps
jb
fldenv
mov
out
lea
clc
jmp
test
out
jmp
sub
or
rcrb
loopne
mov
add
xor
push
sub
inc
aas
sbb
and
mov
imul
xor
mov
addb
ds
cmp
cmpsb
cmp
dec
mov
xchg
xor
out
lods
xchg
mov
sti
arpl
dec
sbb
lret
inc
lea
jge
enter
in
pop
or
jge
sub
jno
xchg
arpl
or
inc
add
xor
cmp
cmp
jg
fwait
icebp
adc
jg
lods
add
movsb
aas
dec
jb
and
inc
sbb
lahf
fnstenv
sahf
stos
fsub
popf
std
fucom
jne
xor
xor
outsl
sti
ror
lea
pop
push
push
xcrypt-ctr
cmpsl
pop
xchg
sub
jne
das
scas
mov
cmpl
jl
je
inc
fsubr
inc
imul
sub
mov
or
icebp
dec
out
ljmp
xor
aaa
sahf
and
push
rorl
ja
mov
adcb
xchg
mov
push
test
push
shrl
sub
pop
xor
and
mov
inc
loopne
pop
inc
dec
pop
loop
push
inc
gs
test
out
jle
dec
mov
ss
shlb
adc
adc
movsb
pop
and
gs
popf
push
repnz
sub
xchg
movsb
aas
or
data16
pop
cmp
lret
gs
stos
push
pop
cs
xor
xor
test
adc
int
mov
sbb
mov
imul
xor
fdivl
std
xor
jb
adc
push
ljmp
pop
lret
fcmovnu
pushf
sub
jl
int
pusha
sub
xchg
repz
dec
jno
adc
leave
push
xor
stc
stc
cmp
jns
cmp
call
ss
jb
pop
ficompl
lods
sub
ss
push
cltd
loopew
ret
sti
inc
pop
inc
shll
adc
sub
js
sbb
fnsave
cmp
mov
mov
cmp
cmpsl
and
jl
cmp
loop
scas
es
shr
jg
dec
mov
aam
xchg
dec
inc
xchg
and
jo
ja
rol
or
mov
or
mov
lret
pop
sbb
sub
ret
fcoms
out
mov
push
stos
popf
xor
enter
pop
jmp
mov
pop
inc
movsb
mov
loopne
lcall
dec
popa
push
inc
push
in
clc
iret
test
jmp
sbb
rcrl
cmp
inc
xchg
or
outsl
js
addl
bound
test
in
adc
shrl
push
xchg
xor
mov
aaa
push
jb
dec
jge
jge
movsb
fdiv
fsubrl
and
popf
faddp
fistpll
pop
fdivrl
lahf
dec
push
or
jnp
movl
in
jmp
outsl
push
aad
sti
xlat
push
in
shrb
xor
jbe
inc
inc
test
fs
in
add
js
popf
cmpsl
inc
or
out
sahf
pop
pusha
sarl
sub
bound
jae
in
rclb
push
mov
dec
movsb
mov
mov
cmpsl
cmp
test
inc
mov
in
cli
out
sbb
div
repz
and
push
and
push
pop
rclb
push
add
inc
push
add
add
sbbb
das
in
push
add
idivl
push
mull
jo
cli
cld
mov
ret
in
adc
jp
mov
ljmp
test
cmp
pop
inc
popf
jne
test
sub
mov
push
pop
je
out
mov
inc
movsl
inc
or
mov
rclb
add
aaa
std
cli
ret
jmp
lret
ret
cmpsb
test
sbb
xor
inc
add
pop
out
push
xor
mov
aas
mov
ljmp
xchg
nop
mov
sbb
icebp
xchg
movsb
test
fistps
xchg
inc
lret
sarl
jge
or
insl
fisubs
out
test
gs
fldl
imul
add
fwait
jl
dec
pop
lods
ss
ficomps
mov
cmp
setne
fs
movsb
sbb
dec
cmp
or
adc
iret
punpckldq
lods
dec
ds
sub
js
sbb
scas
push
imul
aad
cmc
xchg
inc
iret
push
and
cmpsb
cmp
sbb
ljmp
cmp
xchg
dec
jp
jne
stos
shrl
mov
push
push
testl
jecxz
cli
add
sahf
adc
sahf
int3
dec
xor
pushf
mov
lock
popf
adc
or
int
repnz
call
rcll
test
mov
jmp
cmp
inc
dec
ror
cmp
jp
push
jns
ret
pop
dec
arpl
add
add
mov
cmp
ret
cmpsb
mov
dec
mov
cmp
loope
mov
inc
loope
notl
cli
nop
adc
jmp
aaa
mov
pop
sub
fildl
enter
inc
xchg
lods
sbb
mov
lds
stos
incb
gs
push
cmpsl
pushf
cmp
mov
leave
out
fs
adc
leave
mov
mov
dec
mov
mov
into
fcomps
shrb
int3
cmp
jmp
push
sbb
lods
lahf
outsl
movsb
mov
jg
sub
test
out
je
pop
lahf
add
sarl
lods
pop
jnp
or
out
and
pop
or
pusha
mov
icebp
ss
jo
mov
ret
dec
xchg
pushf
addr16
ja
jae
clc
out
pop
repz
xchg
push
xor
xor
jp
loope
xor
xchg
sbb
mov
pop
repnz
mov
fcoms
test
or
lock
xor
ret
cmp
sahf
gs
pop
cli
jmp
movsb
push
mov
cmp
sub
mov
sbb
adc
mov
ret
dec
xor
cld
dec
loope
inc
pop
popf
mov
xor
lcall
imul
jecxz
cs
ds
test
test
pop
rorl
ret
pop
stc
and
iret
push
mov
inc
shll
xchg
sbb
mov
arpl
mov
dec
vmovlps
loop
outsb
mov
and
dec
stos
mov
adc
pop
loop
mov
push
mov
mov
in
xor
je
inc
and
in
ss
or
lahf
push
jmp
insl
decb
outsb
mov
mov
add
sub
movq
ss
popf
xchg
lret
into
xchg
adc
shrd
das
shlb
jne
js
sub
cmp
out
pop
imul
in
adc
jne
ror
pop
in
cmp
enter
mov
sub
divl
lods
mov
adc
fwait
push
adc
mov
mov
cmp
push
daa
cmpsl
scas
dec
mov
inc
push
inc
add
loope
fcoml
fstps
inc
stos
mov
jo
je
bound
shlb
data16
out
insb
or
cld
pushf
jp
sbb
stc
fwait
push
mov
add
mov
test
lea
push
in
rol
jae
pop
dec
adc
ret
daa
cmpsl
jmp
inc
sub
cmpsl
jmp
out
jecxz
inc
sub
push
ljmp
dec
mov
fisttpl
lock
xlat
mov
mov
jecxz
inc
pusha
dec
mov
push
or
or
push
adc
cltd
in
ljmp
cmp
xlat
or
enter
aam
inc
or
das
pusha
cmp
cs
inc
rorl
xchg
test
lods
push
xor
shl
out
mov
cmpsl
in
imul
pushl
sar
lods
mov
loopne
cld
xor
adc
or
out
mov
sub
add
ret
pop
xor
or
xchg
pop
rcr
adc
dec
mov
push
inc
outsb
xchg
jo
mov
loop
stos
lcall
push
iret
inc
mov
addr16
insb
shll
imul
shrl
aad
xor
jae
xor
fs
loopne
jne
mov
or
popa
mov
rcrl
and
fs
repnz
inc
pop
lea
in
lret
cmc
addb
fs
xchg
call
sub
sub
std
dec
mov
leave
sub
push
fsubl
aad
lret
sub
lahf
jl
jle
ret
inc
sbb
sub
adc
mov
jne
jl
xchg
dec
cmp
inc
jns
xchg
test
fs
pop
shlb
test
jmp
je
jmp
fstpt
lock
xlat
sub
or
mov
in
dec
andb
xlat
mov
test
sub
clc
insb
mov
cltd
mov
sbb
repz
push
push
frstor
or
addr16
and
xchg
jne
js
enter
dec
push
add
jbe
or
ret
sbb
out
push
notl
xor
mov
pop
sub
mov
add
jne
out
cmc
mov
shrb
dec
cmp
and
cmp
nop
cmp
clc
or
stos
pop
dec
push
mov
shlb
mov
lods
jo
cmpsl
xchg
xchg
bound
sub
dec
sub
jmp
pop
add
in
scas
pop
pusha
cmpsl
xchg
sub
sub
push
lcall
cmp
xor
bound
test
jmp
and
fs
jne
lret
lret
lret
loopne
cltd
jns
shrl
jbe
add
in
lock
mov
mov
hlt
mov
xor
addr16
setl
int3
lds
jns
test
jmp
adc
mov
fsubr
movsb
mov
rcr
jle
sbb
mov
jg
es
lahf
mov
xor
pop
jnp
cmc
sub
jmp
loop
mov
push
shll
lods
jecxz
mov
gs
in
inc
loopne
xchg
xor
popf
out
insl
dec
mov
es
pushf
push
jle
bound
sbb
xor
cmc
aam
mov
or
xchg
mov
or
inc
pop
fisttps
popf
push
cwtl
jbe
xor
sub
inc
inc
or
in
js
popf
daa
or
mov
leave
bound
test
xor
dec
add
or
pop
loop
call
dec
fstl
inc
and
lods
and
mov
cli
mov
in
cmpsl
ljmp
test
in
sahf
pop
jno
js
out
inc
test
jnp
rclb
hlt
loop
mov
ror
lcall
je
ret
cmp
mov
lea
sbb
testl
test
pop
ljmp
pop
repnz
xchg
cli
xchg
jp
push
jae
xor
sub
inc
test
sbbl
mov
mov
sbb
lds
mov
gs
cmpb
clc
sub
repz
stc
fs
loopne
jno
out
sahf
sub
data16
cmpsb
xchg
cli
fistpl
inc
lea
jge
push
lea
lea
dec
or
add
mov
cmp
dec
das
and
sub
test
cli
pop
jnp
inc
push
dec
xor
adc
pop
mov
sub
les
ds
add
dec
cmp
repz
and
push
dec
out
jb
fildl
push
test
sub
fs
lea
pop
jl
std
jno
sbb
stos
push
xchg
outsl
cmpsb
shrb
repnz
push
rcrl
sub
test
jne
lea
add
mov
jno
fildl
repz
xor
jg
push
dec
pusha
sbb
xchg
imul
sub
sbb
mov
iret
sub
lcall
jg
jo
cmp
aas
dec
sahf
rolb
mov
add
int
ret
lods
imul
loopne
orb
jnp
push
mov
das
xchg
xchg
sbb
xchg
ret
adcl
pop
adc
ljmp
ja
pop
xor
pusha
jns
mov
xchg
dec
mov
pop
mov
inc
or
adc
fistpll
mov
xchg
inc
inc
fcmovnb
cld
loopne
repnz
movsl
sbb
ds
push
pop
lret
je
jb
jae
std
mov
testb
sub
lods
lret
popa
fnsave
push
shlb
dec
add
aas
fdivp
sbbb
pop
xorl
xchg
jne
xchg
loop
faddl
xor
jbe
push
jge
and
nop
aad
divl
cltd
mov
ss
push
pop
lock
pop
jo
icebp
inc
loope
aad
sti
xchg
or
pop
xchg
cmp
mov
sub
cld
pop
arpl
inc
dec
jecxz
cmpl
icebp
in
mov
cli
addr16
pop
cmp
mov
popa
or
sub
add
push
and
sbb
xor
imul
add
xchg
cmc
cmp
movsb
ja
dec
ficoml
movsl
jo
nop
outsb
scas
xchg
ror
fwait
jge
adc
loop
fnsave
cmp
xchg
and
cmp
inc
fsubl
push
mov
jge
sub
je
and
test
fadds
int
loopne
ret
inc
pop
es
xchg
cli
inc
mov
pop
lods
lret
test
adc
mov
and
imul
xchg
push
pop
fscale
out
cltd
sbb
sbb
dec
push
and
lcall
cmp
ss
sbb
mov
add
pop
lds
jo
imul
fdivs
lods
scas
fimull
sbb
movsl
stos
rclb
popf
mov
push
push
lret
pop
in
xorl
mov
mov
jns
xchg
sti
dec
rcrl
and
pushl
popa
cmp
adc
ficompl
adc
pop
js
inc
or
xchg
mov
and
dec
xorb
leave
xchg
pop
mov
rclb
xchg
ret
lret
lods
cmp
sbb
je
lods
sub
jp
lret
dec
xchg
mov
xchg
mov
call
rolb
stos
je
xchg
imul
fcoml
dec
add
stc
test
push
mov
adc
mov
call
push
jp
aam
inc
cwtl
mov
in
inc
mov
xorb
adc
push
pop
jecxz,pt
loop
je
test
inc
mov
inc
popa
push
inc
jo
mov
add
cmp
jmp
cmpsb
jp
pop
daa
pop
adc
popa
dec
push
mov
clc
jmp
out
sti
movsb
mov
rorl
push
and
lcall
movsl
lods
mov
fwait
movsl
dec
jbe
mov
and
push
aas
adc
addr16
mov
cmp
inc
xor
cmp
cmp
lea
xchg
xor
sbb
icebp
shl
sub
xor
nop
pop
aaa
mov
aas
fidivl
dec
or
xchg
loope
jno
xchg
add
xchg
dec
aad
mov
insb
lret
xchg
je
popf
iret
or
fidivrl
pop
sub
jmp
loope
test
sub
xlat
repz
sub
and
ficompl
ljmp
stc
xchg
push
in
insb
vmaxsd
jno
sbb
test
adc
pop
or
das
fnstsw
or
fisubrl
loopnew
inc
int3
and
lods
fstp
pop
add
lret
xchg
fsubs
push
lcall
aad
in
ljmp
cmp
jns
ja
fildll
scas
xchg
std
js
pop
imul
pushf
add
or
ss
dec
mov
push
or
out
jne
rcrb
cmc
push
xor
cwtl
push
xchg
cmp
sti
sbb
aas
das
pop
add
mov
lock
gs
repz
shrb
outsb
adc
lahf
inc
les
xor
push
push
lods
std
mov
jnp
out
pop
idivl
jo
mov
sbb
xor
pop
xchg
add
sbb
lret
loopne
dec
jnp
aaa
fstl
push
xor
add
ret
pop
inc
mov
cmp
outsl
jb
adcb
sbbl
cmpsl
leave
cmp
decl
pop
mov
cmp
cmc
sahf
mov
loope
mov
roll
xchg
jecxz
mov
nop
shrb
pop
mov
cmc
jb
movsb
sti
rorb
leave
pop
push
adc
mov
mov
adcb
addr16
jge
ror
inc
loope
pusha
sbb
mov
jnp
sub
insb
adc
push
lret
fcmovnbe
std
int
ss
inc
shrb
sub
loope
add
cmp
test
in
push
inc
scas
out
nop
mov
mov
or
push
dec
sub
roll
xchg
outsl
adc
arpl
jns
enter
mov
scas
cld
cmp
xor
dec
dec
imul
ret
fs
stos
test
js
rorl
mov
insb
nop
loopne
js
push
aad
out
aad
jb
out
pop
imulb
pushf
xchg
push
repnz
ret
xchg
jno
ja
adc
lret
add
mov
cmpsl
mov
sub
rol
xor
cs
push
mov
sub
repz
sbb
add
cld
push
xchg
mov
dec
lds
xchg
pop
ljmp
or
add
dec
jle
jae
cmp
stos
ret
or
daa
das
mov
dec
lods
loop
in
std
jmp
mov
jmp
or
fsubrp
fwait
push
sub
adc
mov
std
stos
mov
xor
add
enter
ret
call
lods
mov
mov
mov
arpl
adc
mov
push
jmp
test
out
xchg
div
movb
addr16
es
outsb
scas
sub
sti
fiaddl
sub
test
rcrb
lret
cmp
xor
mov
push
mov
dec
or
out
cmp
pushf
adc
hlt
stos
sub
pushf
push
mov
add
jecxz
sarb
dec
out
mov
popa
pop
and
xchg
xor
js
lds
cmp
pop
test
fsub
daa
stos
or
and
adc
push
in
and
jle
stc
jmp
lcall
es
in
cmc
sarl
pop
ds
movsb
loopne
lcall
sbbl
lret
inc
rolw
sub
in
data16
fldt
ljmp
cmp
out
aad
inc
jb
mov
sub
andb
ljmp
push
data16
cld
push
in
dec
fidivrl
cmp
lea
mulb
shrb
sub
ss
mov
sbb
push
mov
call
js
stos
ret
stc
sbb
xchg
xor
iret
sbb
inc
push
mov
repz
aaa
fld
inc
into
pop
cltd
and
shll
fldenv
sbb
into
insl
les
repz
push
pop
push
clc
je
jno
jnp
subb
test
movsb
std
stos
inc
les
jbe
mov
stos
stc
push
jge
dec
push
add
mov
adcl
subl
lods
mov
adc
or
imul
xor
popf
xor
fists
data16
adc
pop
inc
rolb
mov
cs
add
imul
cld
sub
add
mov
push
push
mov
orl
and
xor
push
je
xor
mov
insb
shl
mov
xchg
jb
cmpsl
and
and
jb
xchg
ljmp
dec
daa
sahf
or
dec
or
mov
mov
push
sbb
in
stos
ss
pushf
and
jb
test
or
ja
push
or
mov
inc
ret
data16
mov
shll
inc
adc
ss
dec
rorb
push
loopne
cmp
xlat
pop
xchg
cmc
movsl
or
mov
xor
cli
jp
push
iret
xchg
inc
pop
mov
stos
int
jnp
fnstenv
mov
inc
jae
std
cli
mov
call
ret
cmpsl
pop
sarb
out
stos
jo
daa
popa
mov
adcl
pusha
lcall
outsl
ud2
jle
lea
pop
lea
fcomps
inc
sub
or
jl
mov
call
sub
and
sbb
jmp
ss
dec
or
filds
mov
popf
dec
adc
cmp
add
repnz
cmp
aad
xor
or
aaa
test
aaa
inc
call
es
adc
movsl
pop
adc
lret
pop
iret
xchg
and
or
pop
push
sub
pop
daa
cmpsb
pop
sahf
enter
xor
aam
adc
xchg
jae
mov
jo
jne
ret
popw
jg
push
dec
leave
pop
add
fwait
adc
dec
inc
stc
push
jmp
fnsave
or
push
hlt
or
inc
dec
adc
sub
movsl
addr16
fstl
mov
aas
je
sbb
sti
and
jb
push
stos
mov
xor
loopne
lods
mov
mov
mov
or
sahf
cltd
test
out
jmp
test
aad
int3
addr16
mov
movsb
mov
in
pop
mov
push
pinsrw
mov
nop
scas
adc
rorb
mov
sbb
mov
pop
mov
jg
xchg
xchg
imul
pop
adc
lahf
sbb
xchg
repz
xor
in
lock
xchg
test
and
arpl
push
jmp
jg
xchg
and
push
mov
sbb
test
jle
mov
ss
int3
insb
outsl
ja
inc
lods
test
push
aas
push
sbb
adc
dec
mov
or
add
jle
enter
movsl
mov
xchg
or
ret
stos
or
jmp
mov
in
mov
into
xor
cltd
sbb
stos
shl
jb
adc
dec
dec
jae
sbb
push
int3
fld
inc
add
xchg
aaa
jno
fstpl
cmp
xchg
or
sub
push
mov
push
lods
mov
jae
das
mov
out
xlat
cli
push
mov
xchg
xlat
imul
pop
adc
jb
jl
cmp
xor
rolb
lret
jle
sbb
or
fisttps
push
lock
or
test
pop
mov
xor
rorl
lds
push
das
mov
cmpsl
adc
in
and
dec
movsl
aas
in
imulb
test
iret
loopne
movsl
je
icebp
xor
cmp
xor
cld
jge
cmp
pushf
sahf
pop
mov
mov
mov
cmp
inc
pop
jns
jmp
mov
or
lcall
dec
adc
jb
mov
mov
daa
cmpb
push
push
mov
mov
mov
scas
cmp
in
icebp
ficomps
jb
pusha
in
int3
jp
psubsw
or
adc
divb
fiadds
dec
xchg
cmp
fisttpl
inc
je
xor
mov
sub
les
mov
dec
jnp
push
call
jbe
mov
push
push
xor
mov
xchg
out
jno
ja
mov
sbb
mov
xor
inc
push
je
lock
fsubrl
sbb
adc
push
stos
or
scas
xchg
ja
mov
adc
and
popa
push
push
fnstsw
cltd
mov
sbb
testb
ds
inc
mull
icebp
inc
inc
xor
in
cmp
push
xor
or
int
xchg
push
loope
cmp
pop
stc
mov
mov
popf
push
xor
push
lds
mov
and
sub
jle
sbb
scas
cltd
pop
adc
loope
mov
mov
jae
cmp
test
sub
shl
jae
mov
repz
push
mov
xchg
pop
dec
cmp
push
mov
pop
test
and
faddp
insl
lret
lcall
adc
xchg
inc
mov
movsl
push
clc
pop
fisubs
jmp
mov
out
stc
cmpsl
mov
orb
mov
movsl
repnz
xchg
cmpl
sbb
pop
xor
mov
sti
fcoml
xchg
inc
mul
push
pop
nop
ljmp
lahf
mov
add
mov
popa
adc
call
fidivs
xchg
and
mov
ja
and
sbbl
add
mov
out
pop
test
xor
loopne
test
cwtl
out
push
ljmp
inc
aas
decl
and
sub
mov
int3
fisubs
dec
jnp
push
xchg
jbe
dec
mov
movsl
fwait
lods
jg
pop
mov
stos
push
out
in
insl
movl
mov
add
add
mov
or
ret
sbb
push
addr16
sbb
pop
inc
hlt
imul
fsubs
xor
sub
pavgw
popa
sarl
sbb
inc
pop
test
fwait
sbb
jno
sarl
cmpsb
jnp
cmp
arpl
inc
sub
cmp
sbb
negl
jg
pop
add
jmp
push
adc
jecxz
sub
in
loop
pop
mulb
adc
mov
ljmp
adc
mov
in
and
mov
test
mov
jb
aas
mov
aam
leave
jbe
outsb
xor
mov
fldl
pushf
push
push
int3
fsubrl
cmp
push
mov
inc
rorb
fwait
notl
cmp
cs
push
ret
imul
xchg
adc
movsl
rorl
ds
mov
mov
cltd
fstp
xor
mov
mov
jne
mov
mov
cmpsl
jnp
out
pop
mov
pop
gs
into
test
in
mov
test
rorl
and
xchg
pop
lcall
jl
jmp
inc
push
out
push
sub
in
add
adc
sarb
push
push
cmpb
aas
xchg
in
sti
xchg
mov
pop
imul
aad
xchg
movsl
push
out
mov
push
ret
pop
mov
js
and
sahf
cmp
xor
hlt
xor
xlat
mov
mov
inc
stos
mov
adc
inc
in
xchg
push
sbb
stos
push
adc
lahf
xchg
lods
push
inc
gs
daa
cld
mov
das
pop
jae
sahf
or
xlat
adcb
or
push
insl
sub
insb
cwtl
fstpl
xor
stos
and
xchg
icebp
and
pop
and
mov
mov
push
mov
out
xchg
stos
jb
lret
pop
sub
fmull
dec
outsb
int
scas
icebp
and
and
cs
adc
divl
fsubp
inc
movsl
mov
cmpsl
lcall
jnp
jnp
ja
adc
cmp
andl
icebp
into
mov
mov
xor
inc
dec
mov
cmp
cld
adc
xchg
push
pushf
sahf
cmp
loop
mov
lret
jl
push
push
pusha
pop
xchg
xrelease
outsl
pop
enter
cld
and
ja
mov
pushf
inc
not
mov
sbb
mov
js
xorb
xchg
xchg
in
adc
test
fstps
mov
adc
jo
mov
cli
xor
nop
aam
rcr
inc
pop
nop
fcoml
cmp
iret
xlat
push
pop
add
sahf
imull
or
rorl
jmp
in
jle
xor
sub
mov
sub
xor
and
jle
mov
cmpl
mov
xor
in
lahf
loop
mov
ficoml
xor
add
mov
movsb
pop
and
adc
stc
sub
push
push
imul
mov
f2xm1
fadds
and
sub
lret
mov
pop
in
pop
xchg
pop
ja
pop
ret
mov
push
mov
sub
jg
enter
lahf
xor
dec
fdivs
lcall
dec
push
repz
adc
cmp
pop
pop
mov
inc
sub
or
and
jle
aas
push
inc
jecxz
jns
mov
bound
push
xchg
mov
pop
mov
inc
notb
inc
or
cmpsl
fldenv
rcrl
int3
pop
sbb
xchg
push
cmpsl
loope
xor
jp
mov
fwait
push
push
mov
faddp
popf
ds
bound
imul
fidivs
cmp
sti
pop
mov
dec
jb
andl
sbbl
rcl
xchg
cmpsl
out
int
add
daa
loope
fwait
mov
hlt
push
adc
sbbl
xor
in
or
dec
mov
mov
and
add
jbe
lock
repnz
cmp
addb
je
call
sub
push
xchg
xchg
cmp
sub
pop
ja
jbe
leave
mov
dec
dec
scas
push
mov
xor
pop
sub
lret
mov
imul
sbbb
sub
push
pop
out
push
xor
fimull
push
pop
pop
cs
add
jbe
dec
sub
in
std
sub
sbbb
in
push
out
lret
daa
sysenter
mov
fwait
dec
dec
or
rorb
mov
sbb
cmp
sub
leave
cmp
xor
xchg
cmp
call
dec
lret
mov
jg
iret
int
dec
xchg
push
jp
mov
pop
push
insl
pop
stos
stos
xchg
clc
in
or
cld
adc
jg
loope
ret
push
xchg
lret
jb
sarl
daa
imul
fcompl
xchg
rcl
in
fsubrs
fisubs
jbe
mov
or
pop
pop
ja
xchg
rclb
mov
xchg
sbb
ja
inc
push
ret
push
pop
cmp
jmp
das
repnz
mov
jb
pop
jno
xchg
cwtl
mov
bound
lea
bnd
and
lods
pop
sbb
test
xlat
pop
jmp
xchg
and
clc
ret
add
or
push
dec
repz
je
pop
stos
ss
testl
fimull
sti
andl
into
out
fs
inc
xor
arpl
aaa
shrb
mov
icebp
nop
cli
add
push
mov
pop
or
adc
sbb
mov
ljmp
push
adc
cmp
adc
subl
push
mov
out
stos
shrb
loop
xor
mov
testb
or
add
xchg
xchg
in
mov
ficomps
jne
repz
dec
shrb
jae
sti
leave
call
adc
xchg
or
jne
popa
sti
testl
ret
jle
or
fcmove
mov
sub
movsb
pop
in
pop
mov
push
push
gs
xchg
add
sbb
push
push
repz
inc
ss
pop
add
pop
sub
jle
mov
mov
xor
xchg
aaa
shr
loopne
outsb
or
lret
mov
fstpl
mov
mov
pop
dec
cmp
dec
add
stos
add
and
lods
push
and
xchg
mov
jl
mov
int
sarl
lcall
inc
pop
imul
push
adc
jns
mov
popf
stc
pop
push
test
fnstenv
xor
cmpsb
pop
movsl
fadds
test
lahf
or
jl
xor
adc
cmp
push
out
cmp
pop
mulb
shl
jmp
push
xchg
rolb
and
fsts
cltd
movsl
jmp
cmp
mov
aad
stc
test
cmp
xchg
aam
mov
sbb
fnstsw
orb
sub
addr16
pop
negl
mov
add
sbb
xchg
sub
dec
sbb
aad
lret
mov
push
and
push
inc
int
sbb
cmp
test
popf
imul
mov
jl
fnstsw
loop
xor
lock
cld
push
gs
fs
lods
int3
inc
std
pop
fs
jecxz
fwait
jle
cld
fldcw
pop
pop
jnp
sbb
lret
adc
mov
out
mov
rcll
sbb
mov
lock
into
popf
or
aam
push
lods
jne
jne
push
mov
mov
inc
addr16
sub
xchg
out
mov
stc
mov
mov
xorl
lfs
pop
add
idiv
popf
out
test
out
pop
push
xlat
or
dec
push
xor
dec
fst
mov
rcrl
mov
fcompl
sub
es
shll
xor
or
fiadds
adc
cld
daa
scas
cld
lcall
mov
mov
mov
cmp
inc
jmp
mov
aad
sahf
jmp
mov
jo
pop
pop
add
and
popa
or
test
nop
push
mov
jg
push
push
scas
push
push
add
mov
push
dec
sub
pop
jp
out
fisttps
cs
aas
data16
loop
add
adc
lret
mov
mov
inc
lret
xchg
pop
popa
in
mov
pop
stc
in
adc
sbbl
fcoms
xlat
mov
mov
push
push
imul
cltd
xorb
insb
push
push
lods
or
xor
inc
xor
fisttpll
adc
out
jae
cltd
inc
fdivrs
stc
imul
lcall
cmp
sti
rcll
lret
xchg
and
aaa
mov
js
cmp
popaw
int
mov
mov
cmp
push
filds
in
js
cli
mov
jecxz
sub
ss
add
test
cmpsb
gs
sbb
push
negl
ror
sub
pop
push
xor
out
and
or
adc
add
mov
inc
in
jb
inc
sbb
sti
or
pop
sbb
pop
stos
sub
push
dec
adc
idivl
addl
pop
pop
jecxz
or
test
push
dec
insl
mov
jle
popf
scas
push
lds
int
fnsave
mov
js
in
xor
enter
dec
cmpsl
xchg
mov
mov
int3
cmpsl
or
test
lret
dec
or
cs
gs
pop
cli
test
xchg
or
div
xchg
scas
test
fwait
add
cmc
fldl
shl
cmpsb
jge
mov
or
and
inc
and
sub
cmpsl
pop
aad
sub
and
push
mov
lods
loop
cld
jmp
pop
sbb
andb
mov
or
les
inc
push
or
mov
xor
out
inc
loop
add
ret
pop
stos
push
test
fwait
push
iret
jg
lock
mov
fwait
out
sbb
outsl
data16
pop
popf
fcom
pop
add
adc
call
dec
xor
jge
insb
push
divl
push
inc
mov
dec
lret
fwait
test
fidivrs
mov
lcall
test
imul
push
sub
adc
popf
xor
sarb
mov
cld
pop
ds
pop
hlt
data16
js
mov
jmp
loope
lahf
or
xchg
xchg
push
pop
cmpsl
dec
test
in
and
dec
sahf
adcb
xchg
mov
push
xchg
mov
int
sub
pop
sbb
shll
dec
fwait
testl
cmp
and
sbb
push
adc
mov
lcall
js
testl
push
jp
jbe
in
push
std
das
stos
fisubs
in
lock
jbe
inc
fadd
imul
xor
aas
inc
loopne
mov
in
das
xchg
inc
lods
xchg
aad
test
test
ljmp
cli
xchg
push
push
fildll
xchg
ret
jge
jl
mov
out
adc
pop
jl
dec
mov
ss
dec
test
and
lcall
ret
dec
mov
adc
xor
pop
fadds
sbb
cwtl
or
jle
lret
xchg
mov
mov
aad
out
sbb
and
add
cmp
or
rclb
mov
cmp
cmp
stos
cmpb
sub
mov
cmc
jnp
xchg
jg
in
test
fisubl
leave
push
cmp
leave
xchg
inc
pop
in
popf
mov
pop
inc
pop
clc
imul
aas
dec
inc
push
sahf
and
in
test
mov
sub
enter
mov
imul
repnz
rcll
shll
imul
shlb
or
mov
imul
mov
sub
push
xlat
and
mov
rol
push
add
pop
jge
inc
mov
jle
fnstsw
mov
sub
sahf
mov
sub
jp
imulb
cli
rcrb
sbb
dec
mov
scas
std
stos
mov
push
push
loope
and
mov
data16
adc
xchg
adc
mov
xor
mov
ret
enter
xor
push
andb
dec
aas
sub
xchg
lret
sbb
cwtl
jbe
inc
std
cwtl
xor
daa
movsl
gs
cmpsb
lret
dec
jae
jno
xchg
gs
popa
jge
loop
js
lret
dec
daa
rcrb
in
imul
inc
mov
mov
push
push
sbbl
pop
jmp
aas
jae
xchg
insb
lds
and
push
xor
jbe
or
out
ds
loopne
push
int3
bndstx
shll
pop
jmp
or
adc
out
sahf
adc
push
andb
aaa
add
add
mov
cmp
ror
les
jecxz
jge
push
add
dec
lods
fimuls
inc
dec
jmp
dec
and
call
jg
outsl
xor
loope
dec
test
sahf
mov
pop
jnp
daa
dec
jbe
test
cs
pop
out
addr16
and
lret
xor
inc
shrl
cmp
jno
dec
jp
or
int3
sub
pop
mov
sub
lahf
add
iret
test
test
xchg
or
pop
bound
mov
cmpb
pop
scas
clc
xchg
and
les
into
popa
jmp
cmp
gs
test
stos
mov
ror
sbb
mov
jmp
call
in
mov
inc
fistpll
dec
mov
mov
mov
lret
lock
aam
adc
outsl
nop
movsl
sarl
aas
xchg
ss
loope
fyl2xp1
mov
inc
mov
pop
cwtl
push
or
fsubs
sub
je
insl
gs
fsts
mov
pop
sahf
into
fldl
call
lret
adc
das
pop
out
xor
or
gs
stc
or
xchg
push
test
sub
repnz
out
or
cmp
inc
pop
addr16
imul
or
jl
xor
jg
and
add
jge
insl
cwtl
inc
dec
push
mov
adc
fnop
pop
cwtl
or
cmpsl
test
mull
fnstenv
inc
push
test
rorl
outsb
pop
ljmp
ljmp
daa
in
or
int
insb
add
fwait
insl
xor
add
addr16
xor
lcall
push
dec
jo
loopne
sbb
and
repz
js
pushf
lock
aam
mov
or
push
cld
sbb
pop
mov
and
and
inc
pusha
cmp
jmp
rolb
mov
popf
std
scas
mov
sbb
rcrl
pop
inc
jnp
push
push
dec
lcall
repnz
cmpsl
popf
movsb
mov
call
or
dec
enter
loope
dec
inc
test
jle
pop
push
fsts
sbb
mov
outsl
xchg
std
mov
pop
rcrl
or
dec
fmuls
inc
jp
and
sub
xlat
push
cmp
xchg
sub
add
inc
std
jl
rcrl
cmp
adc
pop
push
jae
call
js
test
outsb
in
adc
stc
or
xlat
test
adc
sub
bound
and
add
gs
mov
icebp
mov
movsl
addb
sub
sub
lahf
negb
fadds
mov
pop
xchg
and
push
scas
mov
mov
xchg
fwait
shrb
cmp
bnd
cmc
jo
add
push
mov
mov
lcall
mov
inc
es
or
mov
mov
test
jae
loopne
mov
ret
inc
stos
jle
dec
loop
dec
outsb
dec
int
in
lods
es
aad
dec
mov
jmp
inc
xor
or
lret
xlat
and
stos
adc
pop
adc
sbb
xchg
add
jmp
cmpsl
pop
das
mov
es
flds
push
add
dec
lcall
mov
movsb
fnstsw
movsb
fistpl
pop
div
out
mov
cli
xor
pop
sarl
xor
movsb
mov
ss
xchg
fstp
in
cmovbe
lock
sbb
mov
sbb
adc
scas
popa
add
mov
mov
sub
adc
mov
ja
cmp
clc
and
cmp
jmp
mov
jge
lock
jg
das
mov
divb
sbb
sti
cmp
mov
mov
gs
incb
jg
in
mov
andb
ret
mov
jb
and
or
jg
outsb
sub
mov
inc
std
fdiv
mov
mov
dec
or
popf
mov
jne
xor
jp
and
jb
push
jnp
mov
lret
test
imul
sbb
pop
inc
testb
dec
mov
iret
xchg
pop
test
or
jecxz
imul
jge
pop
sbb
and
jae
add
sub
clc
jo
and
add
fidivrl
push
imul
pusha
adc
jns
pusha
xchg
jnp
push
iret
mov
mov
cmp
cmpb
jns
sarl
jp
lods
aas
stc
std
stos
cmp
and
iret
mov
fists
mov
sub
mov
stos
int
sbb
rcl
xchg
test
stos
adc
xchg
xor
jge
pop
sub
xor
out
xchg
iret
cmp
sub
jge
add
repz
lret
lds
xor
scas
or
out
push
loopne
add
mov
and
and
jle
stc
cmp
xor
lods
push
jno
jo
and
fs
aaa
mov
cmp
sarl
pop
jae
sbb
subl
imul
movsb
mov
dec
ljmp
xor
icebp
shlb
into
in
sbb
addb
pop
add
mov
or
sub
inc
clc
inc
and
inc
sbb
or
aas
mov
int3
loope
and
inc
cmp
xor
test
mov
dec
es
test
and
sbb
pushf
inc
push
mov
aas
xor
aas
test
stos
ja
xchg
sub
scas
pop
inc
data16
inc
and
mov
lahf
jns
sbb
jge
jns
lret
dec
mov
inc
xchg
mov
ret
mov
cmpsb
jo
inc
add
mov
inc
loope
outsb
push
out
jns
mov
call
mov
das
shl
add
dec
xchg
xchg
loop
inc
push
pushfw
out
mov
inc
sbb
jns
cmpsl
adc
jecxz
cmpsl
das
sahf
add
out
cmp
jp
xor
xor
andl
ja
cwtl
and
and
icebp
push
out
mov
enter
or
lret
das
aad
push
arpl
push
aaa
xor
pop
outsb
mov
jb
ficompl
mov
shll
push
add
mov
pop
das
aaa
clc
es
outsl
inc
dec
xchg
xchg
fiadds
mov
rcrb
sti
insl
or
dec
jbe
push
add
pop
ficompl
js,pt
lods
pop
mov
inc
icebp
and
push
sbb
mov
out
aam
mov
sti
es
push
lcall
mov
mov
sub
xchg
mov
ficoms
jp
xchg
adc
jmp
sahf
pop
jns
pop
ret
push
mov
pushfw
mov
and
cli
jmp
jle
repz
loop
jg
test
cmp
insb
adc
dec
popw
cmp
xor
lret
dec
or
pop
push
popf
aam
jmp
ljmp
dec
data16
jmp
es
fisttpl
imul
leave
ret
inc
jnp
and
cmp
or
mov
imul
mov
out
stos
mov
adc
add
lcall
imul
lods
cmp
gs
cmp
scas
sbb
jecxz
fnsave
jp
sbb
daa
cli
leave
and
mov
mov
cmpsb
push
stc
insb
push
mov
and
jmp
fs
fs
sbb
std
fmul
sbb
sub
and
cmp
or
xchg
cmc
inc
repz
aaa
inc
push
adc
outsl
popf
fimuls
in
or
outsb
fisubrl
out
mov
dec
rol
jae
test
sbb
sti
js
push
cmc
ja,pt
xchg
je
jae
je
repz
xchg
iret
push
adc
lods
bound
ret
inc
insb
dec
cmpl
xchg
daa
jno
movsb
jno
mov
imul
aaa
dec
or
andl
xor
jo
aaa
dec
lods
xchg
cld
cmp
ret
cmp
mov
in
adc
inc
jle
xlat
add
add
cmp
push
push
adc
out
scas
push
jp
cli
lret
ja
jmp
or
mov
and
repnz
sti
out
xor
and
adc
aad
mov
and
insl
xchg
sub
arpl
shll
mov
mov
mov
out
or
inc
cmp
xor
xchg
js
jae
data16
hlt
imul
icebp
cli
imul
mov
dec
sub
xor
inc
dec
mov
gs
add
inc
hlt
lcall
jp
adcb
test
mov
mov
sub
lret
fmull
lret
or
jne
int
pop
adc
add
inc
fnstsw
add
dec
or
sub
cmp
into
add
out
dec
cmp
loope
ss
das
fcompl
adc
cmp
cli
cmc
mov
cli
mov
sbb
pop
jnp
push
fstl
mov
out
jnp
or
roll
xchg
dec
xor
jl
or
jb
sahf
or
push
stc
pop
xchg
push
fadd
mov
in
fadds
ret
xchg
push
xchg
sbb
imul
repnz
inc
sbbl
jp
addr16
sub
jmp
dec
shrb
stos
ljmp
pop
xchg
addr16
xchg
dec
pop
mov
jg
shlb
in
dec
out
dec
test
cmpsl
mov
xor
cld
ja
inc
enter
adc
mov
bnd
inc
loop
adc
xor
cwtl
es
jo
pop
sti
pop
push
mov
movsl
jge
call
movsl
mov
mov
imul
xor
mov
cltd
dec
les
adc
jbe
mov
xchg
js
jbe
push
out
xchg
iret
enter
iret
clc
ficomps
xor
mov
mov
pop
xlat
fbld
add
push
loopne
test
jne
jecxz
les
bound
call
in
nop
sub
ds
test
scas
pushf
cs
out
lret
pop
jae
out
ss
or
shll
add
ja
push
push
jne
add
nop
jg
mov
fucomi
and
xchg
jp
call
lahf
pop
f2xm1
je
stc
xor
test
mov
push
push
cli
push
out
rorb
xchg
adc
insl
into
mov
idivb
movb
sbb
in
jecxz
cmp
cld
and
push
fiaddl
loope
repnz
mov
push
pop
ret
outsb
push
push
adc
mov
outsb
cmpsl
inc
or
xchg
shlb
inc
cmp
xchg
cmp
mov
xor
jae
xor
mov
ds
repz
xor
imul
cmp
jmp
enter
hlt
ja
out
jbe
js
jbe
xchg
sub
aam
stos
ss
out
pop
lahf
out
inc
je
mov
popf
popf
rcr
loopne
hlt
aas
jae
negl
dec
pop
fstps
push
cld
cli
enter
loopne
stos
out
jmp
sbb
cld
and
pop
dec
push
jle
fiadds
mov
sub
xor
or
sarb
movsb
push
inc
inc
cmp
mov
sub
or
popf
jae
fs
clc
into
pop
ja
aas
iret
adc
std
cltd
mov
in
cs
push
push
cmp
mov
inc
mov
sti
and
addb
lods
mov
fstp
enter
popf
shlb
movsl
fadd
andl
popf
jno
test
leave
mov
mov
loopne
mov
mov
testb
and
ja
cmp
and
mov
xlat
rcl
xor
push
or
cmp
sub
arpl
cmp
fcoms
jno
scas
mov
and
add
ss
ficomps
dec
pop
in
push
loop
inc
sub
mov
mov
cmpsb
int
movsl
xchg
lret
adc
cmpsb
popa
sbb
adc
rep
ret
mov
ja
adc
mov
nop
mov
scas
mov
jle
xchg
loop
mov
push
das
sbb
fdivrl
hlt
mov
in
cs
fsubs
je
daa
xor
adc
and
outsl
jp
pop
xchg
in
push
mov
fsubl
fldcw
in
in
mov
jno
mov
mov
sub
jp
pop
imul
sub
cmp
mov
shlb
insl
rolb
movl
cmc
or
jmp
xor
ljmp
cmp
lcall
je
mov
jnp
mov
cmp
or
or
repnz
or
inc
add
out
addr16
dec
rcrb
lods
pop
and
imul
lock
popf
mov
hlt
push
add
cmpsb
mov
push
sahf
jnp
sub
pop
and
fidivrl
cltd
mov
xchg
cmpsl
sbb
pop
or
inc
inc
pop
adc
lea
dec
push
mov
adcb
xchg
adcl
mov
mov
andl
lds
adc
pop
out
jnp
jne
jb
test
aas
jno
out
mov
xor
aaa
fldt
popa
int
movsb
cmc
out
fiaddl
out
inc
cmc
adc
and
pop
sbb
imul
xlat
popf
jne
sbb
mov
push
les
pop
ret
push
xlat
hlt
jno
js
into
scas
out
fistpl
shll
mov
jns
lods
mov
test
xor
add
daa
xchg
jmp
in
mov
mov
shrb
sbb
mov
sbb
jno
xchg
pop
lret
shlb
fdivr
pushl
dec
jno
lods
add
cmp
icebp
shlb
xchg
add
int
ss
push
push
cmp
sarl
je
ja
and
sbb
jl
cmp
sbb
pushf
rorl
mov
das
jmp
paddq
js
test
call
xor
subb
ficomps
adc
aaa
sbb
mov
cmpsb
pop
inc
into
daa
lret
mov
pop
cs
xorb
dec
aam
out
push
nop
mov
pop
jbe
dec
cmp
pushf
add
push
ret
daa
cmpsl
outsb
mov
out
jns,pn
movsb
xorb
ljmp
dec
hlt
dec
leave
add
cltd
inc
icebp
es
pop
xor
test
filds
xlat
fcomps
sbb
fbstp
int3
sub
sub
and
xor
into
inc
iret
es
hlt
sub
adc
aas
mov
xor
div
or
out
divl
filds
mov
xor
in
data16
insl
pop
push
sbb
xor
mov
jmp
inc
andl
shrl
pop
xor
jbe
sub
adcb
lock
out
lret
stc
or
lods
mov
adc
mov
fnstenv
push
sub
insb
cmp
push
in
insb
fdivs
loop
xchg
pop
jg
in
lahf
outsl
inc
xorb
lret
std
jecxz
sub
loope
mov
mov
pusha
shll
loop
lods
iret
inc
mov
das
jge
xchg
cli
dec
mov
scas
pop
ret
loope
inc
xor
mov
loopne
mov
cmp
push
jg
cmp
fisttpl
fmul
test
adcb
cwtl
cld
xor
leave
sbb
cwtl
sti
repnz
notb
jge
push
fldcw
fists
inc
mov
call
adc
rcll
dec
or
jge
lcall
negb
add
mov
incl
xor
xchg
add
fwait
ret
lahf
or
fcmovbe
mov
insl
jecxz
leave
push
pop
add
and
je
sbb
fadds
cmpsl
push
pop
cmp
sbb
in
or
xor
orb
shll
icebp
fistps
out
test
xor
test
outsb
pop
fs
push
pop
mov
movb
test
icebp
jnp
test
jmp
insl
add
adc
xchg
in
gs
mov
mov
scas
insl
xor
lret
inc
sbb
insb
aas
xor
or
int3
dec
cwtl
insl
sbb
mov
mov
jnp
push
or
adc
cltd
dec
insl
cmp
fcoml
inc
insb
mov
imul
or
xchg
xchg
dec
cmp
push
call
mov
dec
sti
negl
inc
idiv
andb
adcl
cmp
mov
mov
jp
jnp
pushf
jmp
insb
cmp
xchg
and
inc
rcll
mov
iret
insb
ljmp
and
je
outsb
push
leave
nop
jle
dec
jp
inc
fwait
xchg
pop
mov
and
push
aad
loop
imul
pop
mov
leave
out
js
mov
mov
mov
js,pn
xchg
es
inc
dec
punpckhdq
inc
jle
mov
pop
mov
pop
std
adc
outsb
pop
sbb
jne
sub
push
test
fsubs
mov
cwtl
add
bound
into
cmp
in
inc
mov
add
fsubrl
adc
jecxz
xchg
add
lret
xchg
hlt
dec
repz
insl
xchg
addb
out
cmpsl
call
mov
lahf
pop
pop
mov
movsb
lods
sub
out
cmpsl
dec
je
loop
sbb
orb
ljmp
dec
jge
sahf
jno
cmp
pop
or
jge
notb
je
test
xchg
fstl
out
jmp
mov
cmp
and
lahf
cmc
jl
jge
imul
in
mov
movups
pop
gs
stc
repz
inc
in
xchg
loope
push
pop
xchg
sbb
cld
inc
xor
xchg
jmp
adc
mov
push
bswap
lods
mov
adc
popa
adc
fldl
jle
es
or
dec
mov
mov
cmp
scas
add
jnp
xlat
dec
cmp
mov
int
lods
dec
mov
mov
loop
ja
inc
scas
mov
cmp
adc
push
push
jmp
rcll
outsb
call
mov
jge
lods
jns
sub
pop
scas
mov
and
and
loop
or
xorb
adc
pop
stos
daa
scas
pop
sbb
and
xor
pop
adc
jns
mov
ret
fmuls
cld
cltd
or
iret
testl
xlat
sti
inc
sub
xacquire
sub
bndstx
nop
dec
in
and
es
and
jecxz
xchg
mov
inc
lods
push
inc
stc
cmp
mov
lcall
xor
bnd
mov
iret
pushf
pop
lock
mov
psrlq
fistpll
movsb
fnstenv
in
xchg
lds
and
ret
cld
adc
push
pop
jne
jb
cmp
lret
add
or
cmpsb
mov
mov
in
adc
test
xchg
mov
and
sar
cmpsb
pop
out
insl
mov
leave
xchg
loope
out
mov
pop
jno
aaa
lea
mov
sbb
addr16
fstpt
test
sahf
mov
mov
adc
fldenv
xchg
cmp
mov
pop
fnsave
push
cmpsl
dec
lahf
fisttpl
pop
mov
fisubs
cli
lret
mov
and
push
mov
and
cmp
xchg
pop
xor
fcoml
stos
stos
dec
and
inc
push
into
mov
cmp
decl
jae
cmp
xchg
jge
dec
daa
arpl
mov
jae
and
adcl
or
adc
lcallw
aad
insb
jae
addr16
jno
sbb
mov
adc
outsl
loopne
mov
inc
icebp
push
mov
adc
movsb
movsl
push
jl
inc
pop
stc
mov
and
stc
sub
test
into
push
push
jb
pop
fidivrl
xchg
xchg
clc
xor
jae
sbb
add
and
adc
sub
sub
pop
push
das
push
sbb
push
das
inc
cmpsb
dec
and
mov
pop
loop
add
pop
fidivrs
adc
xor
ret
jb
mov
call
divb
pop
test
nop
sub
lret
aad
xor
dec
lds
scas
imul
ret
mov
dec
int
push
adc
or
mov
arpl
sarb
lds
xchg
mov
repz
cli
and
test
mov
shll
xor
iret
movsl
and
notl
dec
xor
push
aam
sti
push
push
imul
push
xlat
lret
cmp
adc
cmp
adc
dec
add
jg
jp
adc
rolb
pusha
dec
dec
jmp
push
push
pusha
movsb
cmpl
cwtl
adc
jnp
push
int
lcall
int3
sbb
sub
rcrb
and
xor
ret
cmp
call
ljmp
lods
dec
iret
push
push
shlb
das
loop
lret
sub
fwait
call
cmp
pusha
iret
loope
or
shr
mov
imul
sbb
dec
jp
jb
pop
imul
adc
nop
sar
pop
ret
jp
mov
push
xchg
push
mov
cld
push
mov
fs
nop
orl
sahf
loop
out
clc
sbb
adc
pop
hlt
fbstp
cld
sub
push
inc
push
or
ja
shlb
aam
in
xor
neg
sub
movsb
push
push
std
loopne
aad
out
mov
inc
ret
or
fildl
lods
int
xor
mov
ss
and
pop
xchg
mov
jmp
dec
add
or
pop
jno
dec
cmpsl
fld
stos
mov
mov
mov
xor
or
xchg
mov
pop
fistps
push
mov
jp
call
hlt
inc
call
jno
lods
sbb
mov
inc
pop
call
pop
into
or
test
repz
fstp
es
adc
jnp
sub
sub
dec
out
mov
mov
sub
or
out
ja
jae
rorl
mov
and
push
add
and
adc
jg
jo
aad
sbb
pop
cmp
inc
add
inc
les
mov
xchg
popa
push
lods
mov
shll
jg
and
xchg
jl
push
lret
loope
dec
sub
inc
sbb
out
push
pop
adc
aas
or
jo
divb
rcrb
dec
inc
pop
rcrb
xchg
push
fmul
jae
jmp
push
xor
in
mov
aas
arpl
in
dec
xchg
adc
xchg
jle
adc
xor
add
js
js
push
mov
lahf
clc
ds
les
mov
lock
xor
cld
daa
inc
mov
test
dec
mov
aam
xlat
sbb
out
repnz
js
lret
xor
data16
xor
xchg
in
sub
adc
mov
xchg
pushf
daa
ror
es
in
test
test
pop
mov
cmc
cmp
xchg
or
push
sarl
testb
mov
cmpsb
scas
dec
cmp
aas
or
jg
push
pushf
aad
xor
xorl
xchg
ret
std
sarb
xchg
fwait
pop
les
jo
push
mov
lcall
xor
push
xlat
lret
pop
int
hlt
and
and
push
and
mov
mov
pop
xlat
lds
push
and
out
cwtl
into
mov
mov
jg
imul
sub
inc
cmp
xor
dec
les
aaa
dec
sbb
jle
mov
mov
xchg
enter
leave
ds
adc
jns
dec
aam
into
push
lods
sarl
xor
sub
xor
ljmp
pop
lds
and
lret
sbb
push
xchg
sbb
push
fbld
pop
and
das
xchg
xor
mov
les
popaw
into
decl
in
cmp
mov
lahf
sub
shlb
push
inc
or
orl
and
xchg
fists
arpl
jb
filds
cltd
mov
loope
inc
sbb
inc
jg
xor
fwait
mov
aad
jne
fwait
lods
xor
icebp
mov
xchg
cmpsb
imul
repnz
pop
aaa
push
jno
dec
cmp
nop
arpl
mov
fs
insb
and
imul
or
popf
cmp
outsb
lds
stos
iret
jl
mov
lods
out
adc
out
dec
mov
mov
ret
jecxz
out
xor
pop
inc
outsl
pusha
mov
out
je
pusha
shl
or
sbb
fsubl
div
in
sbb
fsub
pop
sub
xchg
mov
or
mov
pop
leave
add
cmp
in
and
cmp
add
int3
mov
in
decb
jo
js
pop
shrl
pop
and
adc
lds
xlat
inc
int
adc
jae
xchg
es
filds
jne
mov
jle
pushf
fwait
into
and
fs
inc
and
add
push
sbb
dec
outsl
jae
adc
and
sbb
xchg
daa
nop
incl
loop
sub
in
rclb
push
sub
pop
ja
mov
lret
loop
mov
add
push
jo
and
js
cmc
dec
mov
outsl
sub
push
shlb
repz
bound
mov
fadds
jo
mov
pop
sbb
jns
mov
cmp
mov
cmovo
mov
data16
scas
js
sbb
xchg
jmp
pop
mov
and
test
pop
sub
ja
cmpsl
push
mov
xchg
lahf
mov
or
mov
minps
aad
out
mov
and
jge
inc
inc
sub
pop
push
jmp
pop
aad
pop
mov
push
repnz
mov
lret
inc
xchg
mov
cmp
mov
dec
mov
xchg
mov
or
fwait
mov
mov
aas
lock
push
sbb
inc
lcall
push
fcomps
out
push
movsl
and
mov
push
dec
cmp
in
sar
stc
add
cmp
mov
mov
dec
adc
push
out
push
adc
push
cmp
xchg
mov
cmp
jns
movsl
in
dec
push
sbb
pop
xor
mov
mull
outsb
call
mov
jmp
fisubs
mov
call
rolb
imul
dec
pop
add
and
or
inc
les
outsb
rolb
iret
ljmp
push
mov
int
sti
aam
sbb
mov
and
mov
imul
xor
out
fsub
outsl
pop
xor
mov
repz
sbb
inc
pushf
sub
movsl
adc
mov
imul
sub
fisubrs
lcall
jbe
jb
inc
lahf
pop
repz
js
cmc
xor
lds
loop
push
dec
sbb
xchg
xchg
arpl
fiadds
dec
int
subl
add
pop
insl
subb
mov
enter
xchg
jg
imul
std
jg
xchg
int
fsubrp
xchg
call
and
xor
lcall
stc
jp
scas
in
xchg
cwtl
push
sti
test
in
daa
adc
bound
inc
mov
popa
mov
shr
int3
mov
pop
imul
mov
push
xor
gs
xchg
pop
jmp
sub
movsl
imul
adc
xor
lock
imul
inc
cmp
dec
cli
sub
fisubl
add
jns
and
insb
or
cmc
xor
das
mov
push
clc
lds
cwtl
test
xor
sbb
jmp
movsl
push
call
fisubl
mov
movsl
sbb
std
inc
add
insl
in
cld
push
jo
jp
xor
fisttpll
aas
or
pop
mov
daa
int
in
sub
adc
jnp
and
xchg
jne
sub
xor
aas
sbb
and
xchg
adc
repz
lret
js
outsl
jns
inc
adc
jg
and
fmuls
pop
daa
divb
imul
mov
daa
mov
imul
ja
push
aad
push
push
xorb
xchg
shlb
insb
xor
or
inc
mov
jb
notl
xchg
div
xor
xor
mov
shll
sbb
lds
stos
jne
jae
push
adc
mov
xor
jb
xchg
fsts
mov
pop
mov
xor
div
out
dec
xor
cmp
decl
dec
jns
jmp
pushf
push
push
lea
xchg
xor
mov
loop
cmp
mov
jns
pushf
clc
jmp
cli
push
std
xchg
mov
mov
xchg
pop
mov
iret
movups
lcall
hlt
mov
xor
scas
cltd
sub
js
leave
sbbb
jle
in
jne
inc
or
daa
sbb
cmp
xchg
test
push
push
mov
aas
ja
out
fsubr
nop
sub
es
sub
pop
jns
inc
pop
jo
or
jmp
iret
insl
in
dec
pop
xor
inc
cmp
pushf
dec
in
stos
dec
dec
pop
push
lods
dec
clc
xor
mov
or
decb
stos
add
in
cmp
sbb
fsubl
sbb
adc
xchg
jbe
jns
popf
mov
cs
daa
mov
xor
cmpsl
adc
pop
and
pop
subb
fnstenv
cld
mov
fisttpl
lds
xor
fwait
push
mov
sub
and
mov
inc
lods
fidivrs
imulb
dec
mov
dec
iret
cltd
jmp
xchg
incb
jns
or
cld
pop
js
push
int3
jns
movb
mov
out
repnz
dec
mov
fsubs
mov
cmpsb
scas
or
test
repz
mov
mov
and
insb
popa
inc
mov
jmp
inc
sub
xchg
mov
xchg
add
push
test
inc
adc
or
mov
sbb
lcall
ret
sbb
add
les
aas
repnz
fs
sbbl
fs
outsl
sub
push
insl
mov
fstpt
jge
or
push
mov
movsl
jns
sub
movsl
outsb
mov
loopne
sbb
mov
js
mov
xor
mov
sbb
nop
dec
in
movsb
in
jae
test
loope
cmp
test
mov
bound
xchg
out
ror
ss
subl
in
pop
xchg
pop
flds
xlat
jl
jecxz
insl
jnp
stos
movhlps
xchg
es
xor
loope
jge
popa
pop
movb
movups
cs
movsl
xor
lret
repz
push
jae
xor
out
mov
add
xor
mov
jne,pt
lcall
inc
xchg
leave
lret
pop
rorl
shl
fcmovnb
mov
ss
icebp
in
out
out
out
ss
ja
inc
add
fcoms
mov
add
call
cmp
das
inc
pop
imul
add
orb
lods
cmp
mov
mov
sbb
hlt
push
inc
jecxz
into
mov
sbb
imul
js
mov
fists
outsb
xchg
mov
pop
push
imul
xchg
push
add
movhps
loope
jnp
stc
jmp
lds
jae
sbb
lds
outsb
ja
das
push
ja
addr16
or
push
pop
jae
mov
inc
out
jns
jno
orb
test
scas
or
mov
lea
sahf
lea
pop
andb
mov
movsl
push
shll
dec
mov
out
pop
aam
cmc
pop
insl
fisubrs
sbb
pop
jb
ss
or
sarl
jecxz
mov
rolb
push
xor
icebp
test
sbb
fdivl
aaa
xor
mov
dec
mov
sar
adc
dec
rcl
ljmp
xchg
test
negb
out
push
idivb
jb
xchg
dec
push
mov
jp
jnp
out
in
push
sbb
inc
inc
push
rcll
je
repnz
daa
rcrl
mov
and
mov
lods
or
in
push
push
mov
push
addr16
scas
nop
lret
dec
sahf
inc
xor
cld
inc
addr16
out
aad
mov
fisttpll
push
push
call
add
movsl
into
pop
je
xor
sub
mov
cmpl
mov
jbe
fiadds
cli
enter
jecxz
into
sar
ja
das
out
pop
lcall
pand
std
jns
mov
or
inc
stos
in
clc
lret
fnstsw
rcr
je
jnp
fucomi
mov
mov
ss
cmovne
lods
lock
mov
aaa
xor
cmpsl
cmpsl
xor
jae
pop
push
or
push
cmpsl
clc
out
xor
xchg
prefetcht0
outsl
cmp
addb
fnstcw
fucomi
dec
or
or
sub
imul
mov
xlat
or
insb
cltd
fstpt
in
aam
in
push
sbb
xchg
rcrb
mov
jecxz
push
jecxz
adc
mov
lods
bound
lcall
lcall
je
popf
clc
icebp
push
inc
mov
aam
jmp
adc
incl
push
cmp
test
in
jnp
icebp
or
lea
mov
leave
ficoml
lahf
pop
icebp
jns
fadd
cmp
clc
sbb
sahf
mov
ret
and
jg
xor
addr16
inc
cld
mull
pusha
movsl
in
gs
add
loop
andb
data16
pop
inc
mov
idivl
ds
inc
mov
jl
lcall
outsl
popa
sbbl
jmp
dec
or
rol
in
movb
aas
lret
sbb
pop
sbb
inc
mov
imul
jns
sbbl
mov
dec
push
fisubs
repz
scas
dec
cmp
data16
and
sysenter
xor
mov
adc
mov
insb
std
outsl
out
div
and
pushf
xchg
ret
and
aam
mov
ss
add
es
sahf
and
mov
pusha
lds
sub
dec
or
data16
or
lret
push
jl
jae
jne
imul
fwait
inc
mov
outsl
sbb
arpl
mov
pop
xor
pop
into
jg
enter
addr16
lea
cmp
rol
push
mov
movsb
dec
inc
dec
dec
faddp
and
in
xor
movsl
add
pop
daa
mov
cmp
aaa
pcmpeqb
jmp
pop
hlt
test
out
movb
sub
in
stos
pop
or
sub
cmp
lds
in
aas
int
cld
mov
sbb
push
adc
out
pop
test
pop
das
dec
movb
and
loopne
cmp
lds
cmpsb
xchg
sbb
sub
ds
dec
out
imulb
repz
cmpsb
mov
lcall
mov
call
xchg
out
shl
dec
adc
add
into
sbb
leave
cmc
insb
inc
mov
fists
fcompl
xchg
aam
ljmp
test
mov
movsl
mov
in
jp
add
shll
and
bound
pop
and
and
ljmp
mov
add
or
clc
add
push
loopne
cld
enter
das
jmp
dec
jnp
daa
in
movsb
stos
xlat
test
push
call
or
testb
mov
je
sub
or
icebp
inc
cmp
test
mov
ds
dec
mov
das
js
pusha
or
iret
js
cmc
cmpsb
repnz
test
pop
mov
dec
xor
fdivrl
or
outsl
filds
push
pop
std
addr16
call
cmp
inc
pushf
shl
fistl
das
lock
ret
jp
stc
adc
pop
mov
shrb
ja
out
fcoms
out
jb
cld
and
mov
lret
imul
scas
push
dec
insl
pop
orb
mov
xor
shrl
movsb
inc
imul
sti
test
out
xchg
push
push
cmp
outsl
mov
negl
sub
mov
fnsave
cmpl
cmp
cmp
add
mov
push
push
fisttpl
jb
inc
icebp
fs
or
shlb
mov
push
popa
push
fldt
push
loop
push
xor
in
jmp
push
movsb
pop
fiadds
dec
jmp
jno
xchg
xchg
pop
inc
or
in
or
popf
xor
push
cmpsb
or
push
and
or
cwtl
push
xchg
jne
in
int
push
push
xor
dec
mov
mov
pop
filds
dec
sti
dec
adc
jnp
jne
cwtl
or
xchg
je
loope
push
push
mov
dec
or
jmp
pop
scas
mov
in
test
mov
andb
pop
mov
mov
fimull
push
ret
sub
negb
mov
inc
jmp
movsb
shlb
incb
mov
sub
in
xlat
inc
adc
sub
movmskps
les
xchg
mov
andl
roll
cmpsb
or
xlat
or
sbb
not
sbb
sub
dec
das
movsl
jmp
aas
jecxz
into
adc
mov
xchg
push
clc
inc
bnd
inc
fld
push
sbb
xlat
pop
repnz
dec
jnp
clc
pusha
mov
xchg
loop
mov
insb
sub
flds
dec
in
or
xor
addl
mov
push
xchg
fisubrl
in
adc
mov
popf
arpl
aad
out
inc
insb
push
sub
ja
mov
mov
push
xlat
or
rep
jge
jb
pop
and
add
int
les
rcrb
xor
jle
das
inc
inc
out
pushf
mov
fwait
or
rcrl
push
xor
iret
nop
jp
and
or
movsb
shll
stos
mov
mov
aaa
dec
push
test
pushf
jge
jno
jle
sub
cmp
dec
pop
dec
mov
testl
jle
es
popf
cwtl
mov
subl
pop
cmp
lcall
push
jno
test
xlat
shrl
adc
scas
lcall
cltd
adc
mov
sti
lret
fimuls
jmp
xchg
fistpl
outsl
shl
stos
and
jecxz
sub
mov
into
pop
jl
outsb
xchg
lods
pop
ss
dec
fbstp
rcrl
mov
mov
out
jmp
sbb
ret
adc
dec
dec
and
rcl
jp
cmpsl
inc
sti
testb
add
insl
in
sub
add
push
mov
lcall
push
ljmp
mov
push
mov
xor
add
dec
fsubrl
push
sub
cli
adc
jbe
fisubs
in
enter
push
sahf
inc
lret
xchg
lcall
fsubl
sbb
adc
push
shrl
mov
mov
adc
adc
push
in
fldt
cmp
jecxz
mov
jae
jne
cwtl
out
inc
rcrl
xor
out
xchg
jb
mov
push
fdiv
adc
in
cli
test
add
inc
sub
jle
sub
mov
inc
jl
cmp
into
sti
fisttpl
mov
pop
in
stos
lds
lcall
and
sub
lcall
cmp
in
push
sub
cwtl
aaa
lock
push
aam
dec
mov
jae
mov
jmp
inc
aad
cs
aad
imul
ret
inc
repz
jge
inc
and
inc
into
xor
push
mov
dec
mov
notb
shrl
add
and
psraw
xor
ja
push
in
pop
adc
mov
and
icebp
mov
inc
mov
add
enter
aaa
sbb
out
and
push
ljmp
fimull
jno
xor
sbb
std
stos
push
les
shll
lcall
hlt
mov
movsb
testl
iret
ljmp
outsl
jge
push
cwtl
addl
cmp
xchg
rcrl
outsl
insl
add
bound
out
add
sar
lret
mov
ljmp
mov
out
mov
sub
mov
cmp
ret
fisubrl
adcl
inc
fsubrs
add
lods
ss
adc
out
stos
xor
js
sbb
lahf
arpl
clc
and
not
sub
xorb
mov
lea
sub
fsts
lcall
lea
sbb
mov
xor
xor
in
mov
stos
lds
int
add
jnp
outsl
in
ficoms
xchg
mov
adc
jns
jb
loopne
xor
stc
and
or
stos
mov
pushf
mov
push
pop
cmp
push
lods
and
cmp
stos
pop
cmp
mov
push
divb
push
lahf
mov
icebp
dec
fimuls
arpl
mov
call
bsr
rcl
pop
idivl
sti
inc
adcl
pop
mov
divl
cmpb
sar
mov
cmp
rcrl
cmp
dec
call
mov
lds
leave
repz
jae
sbb
nop
cmp
mov
cmp
cmp
or
jle
jbe
fsubr
mov
sbb
pop
jg
in
add
and
sub
cld
sub
push
leave
pop
adc
mov
xorb
fwait
jne
xchg
scas
lcall
icebp
adc
dec
fdivrl
dec
addr16
jne
lock
test
xchg
cmp
dec
jle
push
aaa
icebp
pop
xchg
push
mov
ljmp
js
inc
jno
pop
push
add
movsl
mov
in
jns
mov
pop
lret
shl
sbb
stos
test
and
xchg
lahf
cmp
xchg
ljmp
or
push
pop
push
pop
lcall
mov
insl
data16
fidivs
insl
jno
and
stos
adc
sahf
popa
mov
inc
mov
xchg
pop
dec
jp
push
int3
add
adc
sarl
mov
xor
cmpsl
and
mov
adc
adc
xor
xor
in
push
sbb
sbbl
mov
fmull
sub
jnp,pt
ficomps
frstor
dec
inc
adc
jl
ficoms
add
pop
pop
mov
cli
call
push
mov
test
divb
ret
xchg
aam
and
shll
xorl
push
loopne
inc
inc
sub
dec
jns
jmp
test
push
mov
or
std
loopne
jmp
xchg
sub
jg
adc
and
es
int
jno
hlt
bound
pop
cmp
jl
and
mov
xor
cli
dec
lods
aam
mov
adc
jl
push
mov
je
popf
jo
mov
sbb
and
dec
jns
sahf
push
repz
stos
jo
fisubrs
aas
lods
mov
or
cmp
repnz
icebp
or
lcall
pusha
aad
filds
dec
loopne
iret
divb
cli
cmpsl
push
scas
inc
cwtl
scas
mov
cmp
dec
lods
imul
rcr
adc
mov
popa
daa
jo
mov
mov
lods
imul
pop
movsb
cmp
mov
movsb
push
movsl
icebp
sub
dec
pop
lods
xor
ficomps
jmp
frstor
ljmp
aad
mov
dec
push
pop
xor
loopne
xor
adc
sub
or
jecxz
mov
xchg
mov
pop
push
inc
or
lcall
scas
xchg
loop
into
filds
sbb
in
xchg
sti
push
mov
scas
outsb
pop
add
andl
jmp
loopne
mov
dec
stc
jnp
daa
nop
pop
addr16
int
cli
push
test
and
pop
adc
addr16
push
pop
add
imul
dec
pusha
adc
push
sahf
sbb
out
add
notb
dec
jle
add
sub
ret
sbb
xchg
cmp
pop
jmp
xorl
inc
adc
add
sbb
in
in
popa
test
jmp
mov
fistps
xchg
shl
push
sti
mov
pop
xor
mov
xchg
adc
mov
lret
push
gs
xchg
das
pop
mov
mov
lret
mov
mov
inc
xchg
fnstcw
pop
fisttpl
add
pop
sahf
iret
fucomp
sbb
je
xchg
loopne
push
cmp
addr16
mov
out
xor
jmp
push
push
mov
jecxz
movsb
lret
dec
xor
pushf
cmpsl
inc
insb
cs
in
test
ret
lret
shl
pop
or
rcrl
mov
js
ljmp
pop
mov
ss
mov
idivl
das
mov
mov
jae
cmp
sbb
in
and
jns
add
test
add
clc
inc
subb
inc
push
mov
in
inc
aaa
mov
fwait
add
rorb
inc
jle
test
mov
das
push
imulb
sbbl
je
mov
sbb
jns
inc
ds
imul
mov
pusha
out
or
fcmovbe
sub
in
push
mov
inc
xchg
js
mov
and
inc
jno
shl
and
inc
js
daa
jno
cmpsl
adc
stos
push
and
ljmp
test
aas
repz
push
fbld
das
cmp
push
inc
or
jl
repz
mov
lds
stos
imul
sub
testb
movsb
int
inc
shll
cmc
adc
inc
and
test
test
add
jae
and
pop
jne
xor
sbb
outsb
cs
pop
bound
mov
aas
push
mov
pop
fstl
test
into
fadds
loopne
pop
mov
jns
xor
and
sub
mov
loope
stos
jbe
mov
sub
in
jbe
sub
jmp
andl
add
adc
sbb
jo
push
mov
enter
jg
pop
push
ds
repnz
inc
icebp
out
push
pop
mov
cmpb
in
inc
pop
in
push
push
jge
jae
jg
or
xor
xchg
and
pop
scas
fistpll
push
sti
out
rolw
and
sub
jno
shlb
sti
push
xlat
ljmp
nop
and
xchg
or
jnp
and
adcb
or
ja
scas
mov
sarl
mov
and
pusha
ljmp
fidivs
push
jbe
dec
aad
xlat
cli
push
mov
js
rcrl
rcl
mov
loopne
popf
xchg
out
or
aam
jge
cmp
jae
int
sbb
nop
popf
adc
iret
inc
aas
in
mov
adc
pop
dec
clc
lcall
sbb
push
xor
cld
int
sub
and
mov
out
shll
mov
ficompl
push
mov
cmpsb
push
mov
push
int
into
mov
scas
outsl
movsl
jns
inc
sarb
pop
bound
mov
xchg
dec
jno
inc
jno
mov
mov
mov
mov
jg
test
pusha
jle
cltd
or
imul
cmp
cli
fwait
out
rorb
sbb
out
sub
adc
scas
cmp
adcb
mov
jbe
rcl
insl
adc
adc
cmp
pop
rcrl
mov
inc
aaa
in
dec
pop
shl
inc
leave
xchg
jmp
stos
enter
shll
mov
mov
ds
jo
shrl
push
mov
inc
inc
mov
out
mov
fsin
cld
testb
sbb
sub
or
aas
arpl
fldl
cmp
ret
pop
sti
or
add
rcl
in
mov
mov
add
into
into
cmp
xor
dec
push
cmp
sub
dec
pop
loopne
mov
pushf
in
and
test
cmp
sub
xor
and
outsb
fdivs
pop
jle
imul
ds
lods
imul
mov
arpl
pop
shrl
scas
jae
clc
mov
outsb
add
bound
xor
push
or
sarb
lods
add
fildll
mov
jmp
mov
mov
outsb
call
mov
imul
mov
outsb
pop
cmc
std
jle,pn
mov
push
pop
int3
jecxz
outsb
shlb
pop
loop
sbb
and
xchg
push
iret
push
rcl
or
and
mov
push
cli
insb
xchg
dec
cli
aam
ja
cmpsb
pop
mov
jecxz
push
jge
jle
inc
cmp
dec
test
dec
test
shll
jp
popa
and
jne
stc
fistpl
jmp
mov
addr16
sub
gs
in
pop
arpl
xchg
lock
xchg
pop
mov
stc
imul
jno
cli
adc
xchg
mov
dec
cltd
lahf
das
mov
mov
dec
out
imul
and
test
lock
sub
mov
repz
pushf
loope
and
mov
add
jecxz
andl
mov
inc
out
jge
cmc
mov
pop
sub
nopl
and
enter
jbe
call
pop
jns
les
enter
mov
leave
icebp
jg
mov
pop
out
nop
add
fnstsw
jbe
imul
pop
push
or
jecxz
mov
xor
lods
adc
xchg
push
insb
pushf
and
cmp
push
mov
inc
add
int
xor
pop
clc
pop
cli
fisubrl
stos
sbb
cltd
cmpsb
cmpsb
xchg
lock
std
and
fisttps
sbb
jge
pushaw
push
and
and
fwait
lret
jecxz
sbbl
data16
je
mov
fcompl
cld
pop
mov
sbb
pop
and
xchg
stos
aam
inc
and
jnp
push
pop
mov
or
jne
scas
enter
dec
mov
xor
jnp
and
ret
add
sub
sub
mov
xor
loope
jae
sub
int3
call
rorb
fwait
adc
dec
push
outsl
or
pop
xchg
pop
adc
pop
sub
pusha
mov
mov
gs
push
push
lret
push
insl
cmp
ret
add
sbb
push
dec
hlt
pusha
clc
lea
loope
test
rep
in
shrb
cmp
data16
jge
sbb
mov
or
push
subb
push
push
sbb
xchg
lahf
std
lahf
mov
mov
sub
jmp
cmp
sbb
scas
push
mov
inc
shll
lock
jmp
xor
in
popa
sbb
scas
fstl
out
or
shl
add
imul
jmp
notl
jo
xchg
push
icebp
lea
or
pop
cmpsb
cmp
push
cmp
jge
mov
lods
out
xchg
lahf
lret
pop
fs
dec
sub
lock
push
dec
cltd
movsb
shll
pop
adc
nop
dec
mov
enter
jno
rorl
out
dec
pop
out
dec
shll
dec
inc
sbb
mov
dec
mov
push
rcll
mov
fmul
adc
rcrb
mov
mov
int3
icebp
push
ds
xor
add
jno
mov
and
mov
jg
ret
sbb
push
add
push
shrl
xor
aaa
lods
out
ret
push
pop
loopne
inc
adc
sbb
dec
inc
mov
push
mov
out
cmpsb
pusha
pop
bound
jnp
dec
leave
ja
mov
jge
adc
dec
fisttps
out
xchg
mov
xlat
mov
lcall
pop
lea
iret
loop
subl
mov
jp
and
jle
sub
mov
lar
fnstsw
jns
call
divb
push
sbb
xchg
pop
clc
faddl
rorb
pop
cmp
loope
pop
xor
jecxz
and
add
or
ds
jl
xchg
push
inc
inc
lods
cld
in
in
dec
lret
push
add
stos
repnz
xchg
sbb
test
cmp
mov
cwtl
mov
add
mov
inc
jmp
dec
xor
sbbl
test
scas
lahf
xor
add
in
sbb
push
addl
adc
nop
int
daa
mov
jmp
cmp
fcomi
push
xchg
inc
mov
mov
lret
adc
xor
pop
xchg
or
xor
les
jo
arpl
sbb
stos
cli
adc
xor
gs
xchg
inc
and
push
mov
in
push
nop
push
clc
adc
adc
mov
mov
inc
mov
xchg
mov
or
or
cld
out
and
enter
mov
pop
lret
movsl
mulb
mov
jg
mov
arpl
ja
je
mov
hlt
cmp
cwtl
movsb
jb
sub
ret
jno
mov
or
inc
jl
rcrb
cmpsb
loop
mov
enter
insl
js
mov
mov
xor
imul
cld
les
add
leave
sub
jns
fcmovne
ss
iret
subl
aas
mov
push
inc
jne
jecxz
mov
repnz
jl
pusha
das
cmp
sahf
adc
sbbb
les
add
mov
fcoml
mov
or
js
push
ja
ja
int3
lret
leave
jecxz
and
sbb
add
cmp
pop
inc
push
lds
sbb
hlt
cli
pop
js
jp
ja
mov
mov
cmp
or
aas
xchg
adc
subb
iret
jecxz
adc
jns
cmp
pop
lock
es
add
add
dec
repz
sub
or
mov
cli
add
ds
out
scas
mov
or
add
mov
cmp
in
repz
mov
xchg
in
push
lret
pop
cwtl
repz
insl
and
arpl
scas
jbe
ret
and
and
or
cmpb
scas
aaa
mov
ja
xor
lea
aaa
mov
ror
mov
inc
clc
push
push
sbb
std
xchg
lods
dec
add
lods
inc
or
cs
jno
fwait
lods
outsb
mov
mov
popa
xchg
das
pop
out
sub
leave
jmp
mov
std
sbb
xchg
sbb
data16
aam
pop
test
clc
mov
cwtl
rcrb
cmp
and
cltd
bound
pop
cwtl
dec
xchg
ljmp
sbb
adc
xchg
inc
movsb
into
pop
fisttpll
lods
xchg
lcall
add
out
jbe
adc
dec
xlat
mov
push
pop
push
fcompl
popa
and
sbb
or
sub
mov
inc
push
movl
out
pop
lea
cmpb
xchg
loop
mov
jge
stos
mov
mov
or
mov
mov
mov
and
push
sbb
or
adc
outsl
js
arpl
inc
jg
dec
clc
xchg
sbb
mov
adc
jae
dec
and
stos
or
jl
push
mov
mov
jno
out
push
test
fcoms
add
gs
out
ret
add
std
lock
in
xlat
or
stos
add
xchg
int
adc
cmp
outsb
inc
gs
lahf
push
mov
xor
jg
and
inc
enter
xchg
jno
mov
gs
mov
sub
jl
fcmovb
mov
xchg
bound
sbb
popf
add
stos
cmc
lock
cmc
jnp
push
xor
lods
inc
dec
mov
aas
out
cmpb
in
pop
sub
insb
sub
popf
xchg
inc
push
adc
out
scas
xchg
push
jmp
cmpsl
sub
mov
lods
fxch
mov
call
adc
pop
sub
icebp
inc
test
popf
mov
dec
xchg
xchg
into
inc
dec
push
gs
or
aam
pop
fsubl
or
dec
mov
push
mov
mov
cmp
ljmp
loop
sbb
add
faddp
adc
mov
sbb
lea
outsl
xchg
mov
sub
dec
adc
das
and
pop
loopne
loope
sub
out
rcrl
xchg
cmc
and
out
fidivs
rcrb
shlb
jno
pushf
bound
adc
jecxz
sti
leave
or
movsb
popw
xchg
hlt
fwait
jae
inc
dec
xchg
ds
cld
or
dec
cltd
mov
sub
jg
inc
sbb
fldt
ss
adc
gs
sub
mov
aas
add
movsb
sub
add
push
stos
and
shrl
xchg
pop
adc
push
xlat
test
lret
imul
add
xlat
in
sti
adc
xchg
jae
or
jae
jp
adc
push
push
notl
iret
or
adc
lcall
sarb
push
test
das
sbb
xchg
sub
cld
jg
jmp
dec
cli
xchg
movsl
fwait
mov
or
mov
xchg
in
mov
dec
fwait
fs
fldl
es
xchg
xchg
inc
mov
dec
outsb
repz
push
scas
cmp
adc
and
imul
lcall
cltd
mov
push
sbb
mov
jno
rcl
inc
and
movsl
or
pop
sbb
jg
push
cmc
int3
adc
pop
icebp
rorl
mov
cmpl
rclb
mov
icebp
pop
loop
rorl
mov
ret
mov
and
scas
pop
in
mov
dec
shll
insb
inc
ja
xchg
sbb
jg
negl
scas
sub
dec
outsb
pusha
rorb
sub
inc
adc
scas
or
dec
insb
push
mov
push
scas
push
mov
fdiv
cmp
cld
popf
stc
and
push
mov
mov
pop
pushf
sbb
jns
push
and
dec
push
pop
in
xor
adc
icebp
xor
and
push
xor
pop
data16
dec
adc
roll
sub
lods
fstpt
inc
and
out
xchg
popa
loop
mov
aad
xor
xchg
mov
in
dec
jl
out
xchg
cmp
cltd
ljmp
cmp
inc
xchg
pop
jne
push
or
mov
imul
pop
in
jo
stc
ljmp
xor
addb
xchg
aaa
ficompl
pop
push
or
sub
mov
inc
xchg
xlat
aam
ficoml
pop
push
cmpl
sbb
add
jecxz
mov
loopne
jne
xchg
mov
shr
lods
xchg
mov
inc
jp
data16
outsb
in
stos
test
add
add
test
enter
fldcw
cs
xor
cwtl
and
imul
push
xchg
fsubr
imul
sub
cmp
cmp
int
jbe
mov
sbb
fldenv
jmp
lcall
sub
sti
dec
in
inc
ficoml
sahf
sbb
cmp
pop
dec
adc
mov
mov
in
lret
lret
test
stos
fstl
clc
ret
jne
dec
addr16
es
imul
add
pop
push
fcmovu
sti
scas
int
xchg
loope
cmc
leave
mov
vmovss
rorb
iret
sbb
inc
xor
dec
mov
repnz
dec
ret
pop
ja
dec
in
push
xchg
add
outsl
int
in
jge
sbb
mov
andb
xchg
in
and
imul
xchg
mov
adc
sub
mov
mov
fsts
iret
scas
call
push
mov
xchg
bound
jo
or
push
jp
mov
mov
inc
out
std
stos
jnp
pop
and
imul
or
icebp
adc
rol
adc
andb
cltd
ffreep
xor
sahf
mov
aad
pop
inc
inc
cmp
or
jb,pn
int3
lods
jmp
xchg
fsubrs
mov
xchg
decl
add
imul
std
adc
cmp
pop
xchg
pop
inc
fisttps
and
push
or
cwtl
fwait
sbb
dec
pop
arpl
insl
jle
std
mov
mov
in
xorl
inc
fimuls
outsb
fldenv
rorb
mov
cmp
mov
mov
ljmp
subl
cli
popa
mov
jge
and
xor
outsb
cld
pusha
sub
lret
adc
push
hlt
out
inc
sahf
out
add
push
push
test
pop
mov
cmp
sub
pop
adc
adc
cmp
mov
xchg
sub
int
pop
mov
sub
and
xchg
mov
push
data16
pop
ss
inc
and
sub
cmp
mov
mov
stos
arpl
adc
push
cmp
scas
add
or
jns
stos
xchg
in
push
in
dec
movsl
jne
jno
jnp
or
adcl
or
jmp
xchg
xchg
inc
inc
ja
in
sbb
lods
mov
sub
sbb
imul
xor
in
test
stos
lcall
sbb
inc
or
gs
cltd
outsl
push
pop
cmp
dec
popa
mov
or
data16
mov
sti
inc
lock
ja
stc
xor
pop
mov
fwait
in
add
out
pop
xchg
cmp
push
movsl
aaa
insb
and
pop
inc
cmp
ret
out
ss
out
lods
mov
das
xor
idiv
rcrb
sub
testl
sbb
jp
jnp
adc
cs
mov
sbb
fmull
iret
lahf
sub
lea
mov
sarb
inc
push
pop
add
faddl
xchg
push
in
add
ds
xchg
and
sbb
sbb
lods
sub
movl
mov
sbb
sbb
cmpsl
jo
cmp
cmp
add
adc
xor
shlb
push
jnp
hlt
addr16
out
adc
mov
inc
sbb
dec
sub
cld
mov
sbb
test
fldcw
pop
adc
or
push
and
movsb
shlb
sbb
mov
int3
nop
mov
bnd
fnsave
dec
rol
or
pop
in
xchg
movsl
cltd
in
push
outsb
jns
insl
insb
jne
out
cmp
jmp
sub
insb
fbld
xchg
xchg
stc
cltd
test
xor
scas
xchg
cmpsl
leave
xchg
dec
mov
cmp
mov
inc
add
hlt
cmp
jmp
lods
ss
fisttpll
orl
and
or
orl
push
xor
or
jns
push
lds
nop
in
push
fs
push
movsl
push
inc
stos
jnp
jne
jl
addb
adc
ret
and
and
jmp
push
scas
daa
into
adcb
mov
out
xor
xor
xor
jge
in
rcrl
dec
clc
jecxz
adc
pop
xorl
lock
xchg
xor
cmpl
sbbb
bound
mov
popf
lods
cwtl
pop
mov
mov
fldl
mov
sbb
ret
sub
push
dec
out
dec
inc
xor
jp
pop
iret
movsl
push
adc
lret
mov
popa
dec
and
inc
pmaddwd
xor
bound
mov
push
fsubrl
fcomps
mov
jmp
mov
imul
popf
xchg
icebp
jne
cmpb
sub
mov
test
or
aam
push
cmp
lock
mov
sbb
hlt
and
cmp
sub
pop
jle
xchg
or
test
sbb
xchg
xchg
dec
adc
mov
and
out
pop
jbe
pop
sub
inc
out
ja
int3
enter
stos
mov
jge
mov
movsb
push
test
lods
cltd
lcall
dec
xor
mov
imul
jg
stc
pop
insl
sbb
enter
lahf
scas
xor
xchg
and
call
fldl2e
inc
data16
daa
loop
dec
push
push
test
add
jmp
mov
cmp
push
push
pop
adc
pop
sub
xchg
test
sbb
jae
mov
jb
stos
nop
lret
cltd
push
mulb
push
mov
jmp
push
orb
mov
pusha
dec
pop
aaa
push
adc
sbb
jmp
mov
or
les
sub
ljmp
dec
push
enter
outsb
push
into
or
test
aaa
divl
xlat
je
insl
push
movhps
pop
cmc
cltd
loop
xchg
in
sub
jg
cmp
pushf
aaa
jge
sbb
add
clc
ljmp
mov
lea
adc
push
pandn
dec
int
cwtl
in
xchg
shlb
mov
xchg
xlat
ds
xor
dec
repnz
sti
sbb
or
addb
dec
gs
int3
push
mov
sbb
sub
sahf
aas
and
outsl
loop
lock
sahf
cmc
test
push
fldt
pop
loop
movsl
bound
cltd
jo
scas
push
adc
ljmp
data16
test
sbb
call
dec
or
jnp
mov
xor
cs
mov
mov
or
mov
cmpsb
jnp
jno
std
pop
adc
mov
jge
inc
and
andb
dec
and
out
push
cmp
jbe
xor
dec
sub
movsb
popa
cmp
jae
hlt
cld
popa
jne
push
or
jnp
sbb
imul
dec
orl
int
clc
sbb
fs
or
out
jo
mov
cmp
es
ret
outsb
hlt
and
sbb
popa
xlat
into
xor
adc
nop
push
movsl
xchg
lods
lret
lahf
jae
ljmp
dec
sar
mov
lea
orl
inc
into
jecxz
pusha
rclw
push
mov
sarb
sbb
mov
mov
ror
jl
xchg
ret
inc
and
aam
pop
or
jecxz
fsubrl
shlb
cmpsl
jae
xchg
jmp
out
movsl
outsl
mov
pop
inc
jl
mov
call
jb
jbe,pn
cmpsl
test
mov
pop
sub
add
mov
insb
cltd
mov
mov
and
mov
sub
add
and
xlat
add
xor
adc
mov
and
mov
enter
int
mov
lea
not
xchg
les
push
fadd
div
push
dec
push
loop
sti
xor
push
inc
cmp
mov
cltd
push
pop
iret
jno
or
xor
movsl
add
loopne
and
jecxz
in
enter
fcoml
xor
cmpsb
and
push
pop
lea
inc
arpl
test
xchg
or
sub
or
sarl
or
fstpl
lret
pop
cmpsl
test
adc
and
pop
pushf
outsl
fsub
movb
push
mov
cmp
mov
lods
int
push
sbb
push
push
mov
lods
packssdw
dec
popf
pop
cmp
xor
jmp
xchg
mov
mov
fnstsw
jge
adc
clc
mov
ret
iret
icebp
adc
js
ret
loope
dec
cs
add
ds
jbe
mov
sub
unpcklps
inc
fnstenv
mov
adc
inc
sbb
popf
and
cs
jnp
call
lds
fistps
add
loopne
movsl
xor
push
into
popf
pop
lods
sbb
mov
testb
adc
ja
lds
rcr
sbb
jle
ljmp
adc
mov
leave
lods
loopne
jl
lret
mov
mov
xor
xchg
orb
in
shrb
pop
fs
shl
mov
jmp
sub
rcll
push
enter
jl
and
shrb
jl
sub
and
mov
movsl
bound
data16
mov
sbb
mov
ret
mov
inc
fidivrl
or
xchg
cmovge
pop
or
jne
inc
pop
fstps
cmp
sub
xchg
xorl
cmp
or
sub
xor
lahf
and
mov
sbb
ret
pop
mov
ret
and
pushf
sub
int
jns
testl
xorl
fsubrl
adc
shr
stos
movsl
jb
dec
and
cmp
daa
inc
mov
sbb
mov
xchg
ficoml
mov
or
push
aaa
in
cld
mov
pushf
repnz
mov
mov
mov
stos
mov
insl
ret
dec
mov
xchg
and
gs
inc
mov
and
mov
jno
push
fsubrs
scas
xor
cld
adc
sbb
js
pop
pop
fwait
inc
pop
in
pop
cmp
loope
adc
out
and
jbe
xchg
pop
pusha
dec
addr16
jno
aas
cmp
aad
cmp
push
fldl
sub
fistpll
js
das
call
jno
jbe
lds
jmp
je
inc
jmp
or
and
pop
mov
fucomip
mov
pop
div
repz
or
pusha
mov
sarl
stc
inc
dec
cmp
dec
iret
in
jnp
pop
outsb
jp
notb
je
mov
mov
push
xor
rcr
int
ljmp
leave
jno
and
dec
mov
and
nop
sub
push
ja
arpl
sbb
sahf
pop
into
xor
rclb
sar
loopne
mov
sbb
popf
pop
xchg
mov
gs
pop
fnstenv
test
xor
stos
xchg
frstpm(287
cmpsl
dec
fnstenv
and
mov
movsb
xchg
enter
add
int3
pop
repnz
sub
cltd
or
push
or
add
sti
pop
xor
in
mov
xchg
jns
cmp
dec
or
or
imulb
out
jge
mov
jle
rorl
ljmp
stos
mov
fmull
dec
ds
add
sub
adc
push
fsubr
mov
daa
pop
or
mov
mov
cmpsl
and
ss
out
jge
pop
sub
ss
jnp
cs
xlat
leave
add
ljmp
xchg
int3
sbb
push
lcall
pop
mov
aaa
and
sub
xor
cmp
mov
pop
lret
cmpsb
push
jl
mov
bound
dec
iret
hlt
mov
jbe
pop
xor
xchg
es
push
cmp
arpl
loopne
orb
andl
mov
pop
les
adc
pop
scas
xorl
mov
mov
fwait
jle
fistpll
cmp
lahf
or
and
inc
xchg
adc
pop
dec
ss
gs
arpl
lock
jbe
aaa
cmpb
and
mov
cmp
gs
popf
xorl
sub
hlt
nop
inc
mov
and
arpl
test
pmaddwd
dec
test
xchg
shll
ds
add
daa
jnp
mov
xor
loop
int3
sub
mov
jmp
xchg
sbb
lods
mov
xchg
or
xchg
popf
aaa
out
push
sub
sub
fisubrs
xchg
fmull
jge
xchg
mov
stos
clc
mov
in
xchg
sub
dec
test
test
jl
jle
fsubs
ret
pusha
sbb
stc
adc
mov
int
sbb
jns
inc
les
mov
clc
mov
cmp
js
push
mov
sbb
dec
aaa
ret
daa
adc
or
pop
outsb
push
adc
mov
mov
fwait
push
js
fwait
pop
push
xlat
cmp
scas
pushf
inc
xor
cmp
js
out
stos
imul
hlt
int3
add
cmc
pop
mov
sub
cmp
imul
pop
sub
dec
arpl
arpl
dec
mov
add
inc
sbb
dec
pmulhw
add
mov
jmp
add
push
aad
ljmp
sub
out
adc
cmc
lods
jns
or
lret
push
push
insl
dec
lods
hlt
xchg
inc
sti
mov
mov
shrb
fists
add
fcmovnbe
test
adc
inc
cs
lret
cmc
imul
adc
das
push
aad
movsl
or
cmp
fwait
repz
mov
cmp
rcrb
pop
dec
cltd
jnp
push
into
mov
add
rcrl
popf
fwait
ret
lods
xor
xchg
xor
dec
adc
loopne
jo
or
jae
setb
add
cmp
inc
mov
or
and
inc
movsb
adc
sub
cs
imul
les
fld
les
adc
jno
outsb
aam
jp
pop
fdivp
iret
cld
pop
lahf
out
loopne
cmpsl
test
pop
and
xor
and
lds
inc
pop
pushf
mov
fstps
adc
ljmp
ljmp
or
gs
sbb
xchg
ret
sarb
cltd
aaa
pop
enter
mov
imul
out
daa
push
adc
fmull
pop
cmpsl
andl
pop
js
int
xchg
fnstenv
inc
and
shr
pusha
iret
xchg
xor
pusha
add
in
cs
mov
test
je
mov
scas
scas
pop
xchg
nop
sbb
and
dec
or
xchg
sbb
jae
rcrl
sbb
les
aam
dec
pop
jne
jb
push
xchg
stc
xorb
fwait
mov
mov
mov
add
sbb
aaa
pop
lods
push
or
out
xor
fisubrs
pop
loope
ja
adc
imul
rol
jne
xor
popl
imul
xchg
fcoml
push
push
sub
arpl
lcall
icebp
sub
sbb
mov
jns
xor
je
jge
adc
xchg
cmpsb
out
inc
or
outsl
push
ret
shr
cmp
sbb
mov
and
int3
sbb
sub
aam
stc
adc
ljmp
xchg
ja
pop
adc
in
sub
jle
les
icebp
mov
sahf
arpl
sahf
jecxz
sbb
ret
or
stos
cltd
jnp
test
jne
mov
sub
mov
add
mov
inc
les
pop
dec
sub
jp
clc
sbb
lds
add
test
push
add
cli
lahf
cmp
sbb
jl
sti
fcomps
dec
cwtl
dec
popa
leave
idiv
cli
ficomps
or
push
and
mov
xchg
orl
orb
adc
test
pop
adc
stos
adc
int
scas
bound
mov
mov
pop
xchg
push
lock
es
in
sahf
jns
cld
adc
cmp
cmp
pop
es
aaa
outsl
push
sbb
mov
jmp
pop
and
movsb
in
les
in
je
or
mov
push
sbb
fnstsw
xchg
xor
and
out
lea
push
dec
mov
nop
sbb
and
mull
adc
add
adc
je
in
push
pop
jo
movb
mov
out
xor
fiaddl
inc
push
add
sbb
xchg
adc
in
xchg
les
out
xor
or
push
out
rcr
cmc
fildl
arpl
push
sarb
lds
es
add
movsb
hlt
xor
push
sbb
data16
sahf
mov
pop
call
pop
cli
lcall
ss
test
jp
stos
adc
inc
push
data16
cmp
sub
inc
mov
jmp
add
lret
jbe
cmpsb
sub
jp
lods
mov
aam
aas
lods
mov
push
dec
pop
shrl
jns
loopne
push
lods
mov
pop
pusha
rorl
int3
xor
or
mov
rorb
push
imul
inc
pop
xlat
xlat
rcll
cmp
push
jne
outsl
sub
pop
jl
jg
or
push
add
pop
inc
inc
pushf
xchg
dec
pop
push
movsb
pop
jno
aam
push
sbb
and
insl
add
add
loope
cwtl
jle
mov
xlat
scas
popa
data16
hlt
stos
pop
or
push
clc
loop
not
pushf
test
repz
mov
adc
loop
sub
ret
xchg
jge
jns
or
inc
fstp
push
cmpsl
cld
rcrl
jmp
test
or
add
hlt
loope
mov
cltd
aas
mov
push
and
jmp
insb
ret
cwtl
push
pop
xor
pop
jbe
push
inc
outsl
pmaddwd
mov
xor
and
lds
sub
pop
push
jns
clc
inc
popf
xchg
xchg
out
mov
mov
mov
mov
icebp
add
push
or
arpl
popa
add
adc
push
cmpsb
adcl
loope
icebp
mov
outsb
jbe
xchg
mov
xor
push
sub
mov
or
jl
xor
mov
cmpsb
ja
jnp
or
sub
xchg
into
out
jb
js
pop
mov
stos
fcoml
sbb
add
frstor
inc
xchg
mov
jge
sbb
pop
iret
add
iret
push
lods
insl
push
insb
lret
stos
adc
inc
xchg
sub
into
ret
sub
in
iret
sbb
xchg
stos
sti
or
aam
or
out
jno
cli
outsl
and
mov
popf
cs
pop
push
mov
test
xchg
dec
xchg
fldt
xor
fstpl
jnp
adc
jo
out
cs
adc
push
mov
xchg
pushl
mov
sahf
decb
pop
xchg
push
sbb
inc
or
cmp
mov
xor
pop
sti
cmp
add
stc
mov
xlat
jo
push
cmova
sbb
cld
mov
sbb
fwait
xchg
lret
out
xor
mov
push
shrd
loope
and
adc
mov
pop
pop
out
movsl
pop
add
pop
pop
push
movsl
push
icebp
xchg
dec
dec
loopne
fldcw
adc
add
loop
test
lret
add
adc
xchg
add
push
fmul
cmpsl
fists
in
sti
imul
xor
lret
xor
roll
das
mov
xchg
sar
adc
lods
pop
and
in
gs
int3
inc
sti
stos
jle
pop
add
fwait
das
sbb
outsb
test
cmp
int3
mov
pusha
out
cwtl
pop
dec
cmp
js
inc
jae
fs
or
push
add
xor
xchg
popf
idiv
je
xor
push
mov
xor
orl
pop
mov
loope
arpl
arpl
or
imul
testl
xor
imul
jmp
add
xchg
push
jno
dec
fiaddl
add
loopne
inc
mov
inc
in
shll
cmp
push
xor
nop
push
push
mov
push
xlat
mov
add
and
iret
ficomps
jo
xor
jae
xor
enter
pop
pop
push
sarl
cmp
mov
jno
arpl
dec
mov
int3
jmp
lods
filds
test
sti
push
movsl
pop
adc
xchg
sbb
loope
es
mov
aam
out
fmuls
popl
add
loop
and
out
inc
xor
pop
mov
lcall
and
mov
fisubrl
mov
cmc
add
pushf
sarl
dec
jns
pop
int3
lea
stos
nop
mov
mov
sti
arpl
insb
pushf
andnps
push
jnp
rclb
add
sbb
subl
sbb
dec
outsl
lea
inc
cmp
pop
adc
sub
jmp
xor
add
inc
mov
aaa
iret
inc
and
test
add
popf
push
cmp
imul
roll
adc
insb
adcb
jo
cmp
adc
lcall
sbb
ljmp
into
sbb
leave
fisttpll
jns
idivl
pop
mov
push
sahf
inc
sbb
aas
inc
or
mov
jmp
jno
test
shlb
inc
cmp
std
adc
sbb
lods
dec
mov
scas
jo
test
insl
fmuls
movsl
sbb
dec
repnz
and
sahf
add
int3
roll
dec
loop
cli
in
lods
fldl
lods
out
pop
push
mov
mov
jnp
or
int3
xor
popa
and
aad
and
and
cmp
clc
jb
das
mov
sub
divl
icebp
xorl
sub
mov
add
cmp
repz
adc
ret
aad
cmc
add
ds
jne
pop
sbb
leave
hlt
jle
sub
in
rcrl
mov
jl
or
pop
loopne
xlat
cli
shll
or
jb
jp
cmp
jl
dec
or
and
in
adcb
or
outsb
adc
ret
nop
test
jae
inc
stc
mov
call
les
or
stc
jns
lcall
xchg
movsb
pop
loopne
aas
xor
jle
xchg
sti
inc
clc
es
lds
pop
push
cmp
notb
inc
lods
xor
sahf
fcompl
and
xlat
cld
ljmp
mov
adc
jmp
ret
icebp
mov
mov
and
mov
test
sbb
cmpsl
mov
push
jge
or
repz
loope
ret
pop
das
jnp
call
push
xchg
pop
xchg
dec
lcall
push
int
xor
pop
sub
dec
fmul
jo
aas
mov
sti
push
push
test
push
adc
outsl
cltd
inc
pop
js
jle
add
fwait
push
add
and
fwait
loop
lods
mov
and
in
fcomps
add
or
enter
xchg
lods
mov
out
pushf
out
pop
imul
push
mov
cs
shlb
mov
jbe
insl
jbe
adc
sarb
mov
test
shrb
dec
xlat
ret
sbb
jp,pt
nop
and
or
sti
xor
pushf
pop
xor
mov
add
pop
pop
ljmp
lock
jnp
in
pop
sbb
inc
xchg
movsl
popf
roll
fcmovnu
cli
fimuls
jge
xchg
xchg
lock
popf
aad
and
push
sahf
aad
inc
push
lret
inc
and
jg
push
push
cwtl
sub
xchg
cld
adc
xor
xor
sbb
cmpsl
pusha
mov
lods
sbb
inc
push
fnstcw
pop
and
and
mov
lods
mov
cmp
cwtl
and
vpunpckhdq
jno,pn
loopne
jb
mov
mov
test
mov
mov
or
dec
imul
scas
cld
sbb
scas
ja
es
mov
out
inc
jge
fldcw
jb
jp
fs
jne
pop
xchg
mov
xor
push
pop
jl
fisttps
xor
movsb
adc
gs
fld
jno
lds
jle
aas
iret
mov
mov
dec
rorl
cltd
xorl
outsl
pusha
inc
push
cmpsb
sub
mov
xchg
xor
ret
add
pushf
test
dec
leave
push
pop
aaa
mov
xchg
fs
test
fistpl
mov
sbb
jnp
pop
dec
dec
jno
xchg
lret
les
xchg
cmc
and
and
mov
mov
lock
pop
call
jle
xor
inc
xchg
xor
pop
jnp
loope
cmpsl
pushf
call
mov
sub
out
or
mov
jbe
xlat
cli
pop
lcall
jmp
jns
jmp
add
jns
jmp
nop
inc
scas
dec
xor
dec
out
fidivrs
sub
inc
lods
je
sti
or
lcall
xchg
sti
dec
in
popa
mov
pop
enter
adc
enter
ss
add
mov
es
or
call
jno
ja
test
xor
fs
push
cmp
sbb
test
xor
sub
incb
jb
xchg
test
fnstcw
inc
push
and
scas
std
in
jle
mov
add
negb
xchg
cld
xchg
ret
lds
rcr
mov
into
js
pop
or
jno
mov
mov
inc
or
pop
inc
rcl
jge
xchg
push
mov
sub
add
repz
sbb
in
push
xor
xchg
and
cwtl
lcall
rclb
mov
push
arpl
rorl
push
pusha
loope
sarl
shlb
roll
jne
and
push
fldt
add
xchg
pop
pushf
mov
sbb
jl
mov
fstps
pop
mov
jnp
pop
pushf
ss
sbb
dec
add
es
daa
mov
jne
jbe
xor
or
inc
cmp
adc
xchg
ror
cmp
push
push
mov
mov
stos
orl
or
outsl
mov
sbb
sbbb
aas
push
ret
xchg
fdivrl
daa
pop
adc
fstl
inc
add
pop
testl
lods
dec
pop
mov
aas
mov
inc
or
clc
cmpsb
hlt
js
mov
xchg
rcll
repnz
mov
xlat
lods
mov
add
cmp
xchg
mov
push
leave
xchg
lock
aaa
andb
push
jp
xchg
sub
or
mov
stc
mov
enter
hlt
cs
sbbl
jle
add
and
stos
rcrl
adc
test
xchg
daa
mov
test
cmp
test
jb
les
in
outsb
and
jnp
nopl
idivb
ss
in
aas
inc
pop
lds
mov
js
shrl
xchg
mov
dec
xchg
into
test
ja
push
loop
cvttps2pi
mov
insl
loop
xor
icebp
outsl
and
stos
icebp
push
fidivrl
sarl
ret
sub
jne
roll
mov
cmp
mov
mov
cli
hlt
fdivrl
icebp
and
cmp
dec
icebp
xchg
sub
add
adc
sbb
mov
fsubp
addl
pop
lret
mov
fs
sbbb
imul
imul
xor
mov
test
stos
jp
jns
shl
push
mov
imul
mov
pop
dec
pop
out
cmp
roll
leave
ljmp
in
cs
nop
mov
xchg
daa
and
bound
daa
inc
mov
ja
scas
stc
ja
mov
mov
and
inc
dec
sbb
xchg
inc
test
inc
stos
leave
xchg
pop
call
hlt
lock
cmp
push
xor
push
addr16
xor
loop
and
mov
inc
jmp
in
cmpsl
lret
stc
jecxz
ret
sbb
movsb
xor
adc
stc
ficomps
das
jp
inc
add
jp
es
fdivrl
mov
dec
rclb
aas
pop
mov
push
imul
rorb
aad
std
xchg
mov
jg
int3
in
xchg
dec
dec
test
rcrb
inc
mov
lcall
call
xchg
mov
jnp
rolb
or
push
mov
out
adc
mov
clc
jae
into
por
jo
cmp
add
rorb
movsb
pop
pop
es
pop
fstl
lods
cmp
leave
mov
push
inc
in
cmp
loopne
push
paddusw
jne
aaa
cmp
push
js
sbb
outsl
sub
adc
dec
fwait
mov
rolb
fstl
pop
es
jp
and
gs
cmc
jl
mov
cmp
shll
inc
xor
xor
push
jae
or
pop
cmpsb
inc
add
test
lahf
cmpsl
bound
pop
scas
stc
jnp
vmwrite
popf
inc
dec
test
xchg
sub
xchg
push
mov
mov
js
inc
xchg
scas
mov
pusha
es
scas
add
call
sarb
cmc
cvtpi2ps
out
push
test
push
in
sub
loope
mov
ret
je
int
adc
sub
xor
mov
pop
packsswb
sub
inc
inc
f2xm1
jge
inc
xor
dec
fsubs
xor
sti
repnz
inc
sub
mov
xorl
test
jle
int3
icebp
mov
dec
dec
loope
and
jnp
mov
je
cltd
fisttps
xchg
cmp
test
enter
dec
sbbl
jae
push
out
mull
gs
mov
clc
sub
cld
orb
int3
inc
daa
lea
jmp
xor
push
insl
stos
call
fadds
mov
es
fsubrs
push
into
and
pusha
or
jnp
imul
cli
jg
stos
jo
orl
xchg
pop
hlt
jnp
push
lock
push
cld
dec
gs
cmp
enter
adc
lods
pop
stos
fisttpll
xor
outsl
pop
imul
or
jb
cmp
icebp
sbb
test
je
fcoms
and
sub
fs
inc
aam
sbb
jmp
or
aas
mov
cmp
sbbl
mov
xor
inc
outsb
push
int
inc
xor
cli
test
mov
mov
jnp
xchg
xor
mov
xor
push
xchg
ja
sub
xchg
mov
out
mov
fistpll
jo
aam
icebp
mov
ficompl
dec
push
xor
inc
es
add
popf
jmp
jbe
notl
aad
outsl
jle
push
mov
jp
lea
sub
cltd
xchg
int3
mov
int
and
add
xchg
stos
cmc
mov
jmp
call
push
xlat
inc
mov
mov
dec
sbb
aad
inc
push
out
push
cmp
in
inc
push
xor
and
push
lcall
or
xchg
fidivrl
sub
andb
lret
mov
loop
xor
mov
mov
out
and
sbbb
mov
and
inc
sti
shll
inc
decb
pop
cmp
dec
jmp
leave
mov
mov
lods
jg
lods
push
xchg
or
movsb
mov
xorl
push
pop
out
push
or
insb
adc
out
ret
es
outsl
xor
sbb
fldt
idivl
dec
inc
out
ret
cmc
xor
popf
sbb
call
ss
ja
sahf
rolb
pop
xor
outsl
in
xor
mov
sub
lcall
push
nop
aas
mov
ret
xchg
mov
mov
fsubp
enter
push
subl
sarl
aaa
pop
dec
or
mov
sub
mov
and
fiadds
insl
fiaddl
xchg
xor
ffree
out
cmpsl
push
scas
push
sub
xor
xchg
cmp
in
xchg
ror
ja
add
aaa
mov
aas
in
push
aaa
cs
sub
dec
cmp
jge
mov
les
cmp
cs
fcoms
cmp
ret
popa
hlt
push
js
fnsave
pop
push
mov
insb
mov
repz
mov
in
jb
mov
out
insb
gs
clc
iret
lea
sti
xchg
mov
sbb
and
in
pop
xchg
mov
push
jo
adc
push
sbb
sub
inc
cmpsl
pushf
push
sbb
pop
arpl
bound
inc
jecxz
mov
jns
dec
iret
lock
ja
out
sarl
aaa
mov
and
jp
cmp
xchg
jnp
scas
mov
push
dec
cwtl
leave
xchg
add
pop
mov
out
cli
test
sub
mov
adc
je
xorl
and
stos
sbb
iret
jmp
mov
inc
pop
jns
mov
dec
jge
clc
mov
push
fs
push
fstpt
repz
or
shrb
mov
add
dec
cwtl
mov
outsb
mov
xchg
stos
sub
loop
clc
or
xchg
in
mov
mov
pop
pushf
mov
pushf
mov
cltd
sbb
push
and
fldl2t
sub
jg
mov
pop
push
xor
ss
js
sbb
adc
pop
jo
or
aad
jmp
lds
sub
nop
daa
sarb
call
insl
pop
adc
push
lods
daa
mov
add
jno
mov
cmpsl
bound
mov
mov
xor
shll
pop
lret
pop
xor
loop
cmpsb
mov
inc
lock
test
and
cld
xor
int3
scas
repz
das
xchg
fdivs
push
repnz
int
pop
iret
push
xor
pop
push
inc
fistl
adc
push
lret
notb
out
jmp
push
xchg
xor
lods
xchg
jecxz
test
cmp
insl
and
sub
out
xor
sbb
xchg
scas
add
sub
pop
test
cmp
cs
push
call
mov
mov
or
adc
xor
sub
pop
in
mov
out
xor
mov
push
cmpsl
adc
xchg
aaa
sub
xor
in
ds
fstpt
imul
cmpsb
mov
in
sbb
jno
outsl
int3
mov
test
mov
push
cmpsl
leave
rorb
dec
push
xor
xor
pop
jecxz
mov
loope
std
ss
hlt
mov
les
insl
inc
and
stc
or
std
jle
jmp
push
or
fisubs
subb
imul
fdivp
shl
sub
sbb
mov
push
jle
test
mov
daa
aas
arpl
movsb
call
sarl
or
icebp
cmpsb
fidivl
sub
imul
lods
movsl
sbb
mov
out
sarb
pop
addr16
stos
aas
mov
cli
ret
popf
xor
mov
mov
mov
ret
inc
xchg
iret
mov
aaa
and
dec
mov
and
sahf
and
cmpsl
inc
sbb
vxorps
or
push
mov
into
in
fucomi
movsl
lds
mov
pop
lcall
mov
jbe
lea
xchg
pusha
push
sbb
inc
cmpsb
jnp
in
sbb
iret
in
mov
lods
inc
sbb
mov
jae
adc
je
adc
int3
mov
out
jns
inc
xor
inc
les
lods
jne
cmp
movsl
mov
push
mov
xchg
push
and
arpl
sub
outsl
jae
add
cmp
jne,pt
movzwl
loop
ss
or
cmp
clc
nop
push
shrl
cmp
insl
imul
push
sbb
mov
xor
dec
push
inc
push
jle
pusha
inc
cmp
inc
push
cmpl
out
outsl
adc
in
in
mov
test
aaa
jns
push
or
push
xor
jae
and
sub
jb
lea
or
out
popf
cmp
sub
sub
repz
cli
test
cld
std
loop
pop
in
mov
cmp
rorb
xchg
sbb
cvtps2pi
inc
sarb
out
pop
pop
lcall
mov
jb
mov
jecxz
cmc
repz
lods
inc
imul
xor
imul
or
into
and
mov
testb
mov
cltd
xchg
jno
dec
stos
test
add
mov
int3
pop
cwtl
idivl
adc
movsl
push
or
lock
xchg
imul
and
cli
jl
insl
ret
push
push
xor
xchg
mov
push
lock
sbb
jecxz
inc
sub
jle
mov
lret
xor
jge
sub
fimull
push
adc
mov
inc
sub
inc
xor
adc
pusha
imul
pop
insl
mov
or
jbe
js
imul
jmp
dec
inc
push
jmp
jbe
jmp
and
dec
xchg
push
imul
mov
push
stos
and
jb
loope
mov
xchg
mov
mov
and
inc
ljmp
sub
out
and
daa
add
ret
mulb
lret
inc
push
rorl
shll
mov
mov
xchg
imul
or
push
nop
pop
xor
push
adc
cli
mov
or
loope
jg
or
jno
lock
push
popl
leave
jge
scas
dec
into
jmp
xor
hlt
lock
pop
xchg
aad
sbb
jbe
movsb
outsb
sub
scas
out
push
rol
sti
inc
dec
and
inc
pop
jg
add
cmpsl
aaa
fldt
jbe
xor
cmp
out
lret
pop
in
dec
and
scas
xchg
bound
lods
sbb
lds
mov
mov
mov
xor
pop
and
sti
cmp
std
add
pop
or
sarb
push
stos
std
cltd
lret
xchg
cmp
notl
xchg
cmpsb
mov
pusha
or
mov
add
or
iret
ret
add
test
ficoml
mov
dec
adcb
leave
push
mov
mov
stos
adc
add
push
sbbl
shrb
adc
push
xor
dec
movsb
arpl
repnz
cmp
lcall
orl
xor
cmpsl
stos
daa
std
or
pop
out
aas
js
mov
jnp
xchg
orl
incb
jnp
test
jg
push
jnp
sub
sub
movsl
mov
fstps
push
fnsave
sub
add
dec
dec
mov
in
faddl
ss
inc
and
rclb
jno
xchg
pop
ss
out
xor
scas
pop
subl
jne
and
cmp
fmul
ljmp
adc
pop
lret
std
inc
fstps
out
call
loop
pop
out
popl
cmp
cmpsb
out
sbb
push
xchg
inc
and
push
push
leave
push
dec
lods
mov
mov
adc
ljmp
push
mov
jbe
int
pop
inc
gs
mov
aas
inc
or
mov
loop
scas
cmp
push
cli
cmp
push
mov
out
push
mov
mov
jle
mov
pop
sbb
xchg
test
rcr
dec
shrb
mul
divb
sbb
pop
aad
jae
rolb
jecxz
std
lret
sar
xor
cmpsb
add
add
push
ficoms
pop
in
pop
je
movsb
mov
neg
pop
or
test
insl
popf
pop
les
mov
setno
lret
push
or
pop
enter
dec
cmp
int3
pop
jmp
and
insb
loope
fs
sbb
shll
pop
fstl
rcrl
fxam
jne
xchg
inc
loopne
sbb
push
mov
mov
cmpsl
mov
js
push
jbe
fstpl
mov
lods
js
cs
cmp
mov
jbe
mov
add
mov
out
cmc
mov
sti
jns
jnp
add
lea
push
data16
xchg
add
lahf
xor
loopne
nop
aaa
and
or
adc
mov
enter
fs
adc
jnp
aaa
es
je
out
inc
fiadds
jne
in
mov
test
shrl
add
sbb
and
aaa
mov
daa
cmp
shr
and
dec
pop
in
and
ret
inc
cmp
jne
test
lods
dec
and
jg
sub
sub
dec
push
mov
int3
pop
xchg
out
in
mov
xlat
lahf
imul
dec
ret
fsubr
add
insb
pop
push
mov
xor
rcl
sub
jp
cmp
scas
lea
mov
test
popf
sub
mov
xchg
aad
push
mov
xor
movsl
hlt
xchg
dec
xor
lcall
in
pusha
insb
daa
jg
clc
mov
push
push
jge
les
cld
cmpsl
pop
push
mov
xchg
jmp
clc
fwait
push
adc
mov
pop
lcall
scas
pop
out
out
inc
inc
mov
sub
sub
in
les
dec
popa
sub
inc
add
jp
adc
dec
iret
orb
das
pop
fdivs
in
das
in
test
aad
std
xchg
movsl
movsl
pusha
and
jno
push
adc
xchg
testl
push
xchg
xchg
loope
mov
xchg
fprem1
jo
cmp
sbb
int
lret
dec
lret
loopne
outsl
imul
negl
or
andb
xchg
mov
dec
shll
fnsave
jb
push
xor
aas
and
mov
fdivrs
sbb
gs
ret
and
fiaddl
jns
sub
xchg
sarb
fsubrl
mov
xor
dec
fldl
cmc
aad
adc
inc
mov
inc
mov
test
xchg
xchg
mov
fwait
movsb
int3
mov
sarl
shll
pop
mov
jns
sub
and
pusha
pop
loop
push
xchg
daa
xchg
ljmp
test
dec
lods
xchg
mov
xor
pop
ret
xor
cmp
daa
cmp
pop
sub
cmpsl
dec
adc
insl
jmp
outsl
popf
add
in
ss
test
mov
shr
mov
lcall
iret
sub
fldt
cld
xor
mov
mov
lcall
cmp
nop
js
inc
mov
cmc
sbb
in
mov
sub
movups
adc
cmc
add
inc
test
mov
push
sarb
push
cli
dec
sbb
inc
jae
adcl
sbb
sub
cmpl
cs
je
ficompl
aam
or
test
rcll
into
outsl
fiaddl
inc
xor
rcl
jne
fstpt
xorb
into
mov
loopne
mov
push
jecxz
imul
push
jno
imul
loopne
fs
pop
jb
cmpsl
in
ss
clc
sti
mov
cli
xor
stos
mov
sub
mul
call
jne
loope
leave
lret
std
fcoml
lahf
mov
test
xlat
pop
jecxz
pop
sbb
sbb
mov
repnz
cld
ret
and
fistl
add
pop
insl
push
push
in
pop
fsts
pop
pop
jno
ret
jns
dec
dec
aas
dec
sbb
dec
adc
in
mov
xchg
and
push
cld
popf
in
sub
aaa
hlt
pop
mov
into
sbb
mov
out
xor
cld
fcomps
js
adc
cmpl
faddl
ja
lahf
jge
xchg
push
or
mov
dec
xlat
push
push
push
fldl
orb
stos
xchg
pop
pushf
dec
negb
adcl
push
cmpsb
aam
stc
add
lcall
mov
and
and
adc
mov
cmp
mov
int
dec
les
push
cmpb
mov
nop
and
hlt
rorl
inc
movsl
je
ljmp
call
outsl
inc
ja
stos
aam
sub
pushf
push
aaa
popa
iret
in
mov
lcall
shr
pop
and
adc
test
push
cmp
sub
mov
mov
stos
cmp
sbb
adc
insl
les
xchg
pop
mov
cli
sahf
dec
outsb
fldcw
scas
pop
arpl
jp
js
in
and
outsl
xor
movsb
mov
cmpsl
aaa
push
pop
adc
sahf
add
leave
sub
int
fidivs
xor
sbb
mov
and
and
shrb
test
scas
add
sbb
out
les
xchg
or
mov
push
jo
ds
fldt
xor
or
adc
jle
movsl
xchg
jne
scas
push
fmull
movsb
mov
xor
sar
mov
iret
int3
cmp
mov
scas
jmp
xchg
mov
jmp
cmc
loopne
and
dec
movsl
push
mov
dec
into
imull
in
clc
push
nop
imul
fbstp
popa
adc
popa
pop
sbb
stos
loopne
sub
orl
sub
and
hlt
sub
imul
pop
cmp
call
cmp
lahf
jnp
cmp
daa
ja
cmp
es
mov
xor
pop
faddp
scas
bound
cmp
in
in
mov
jb
or
aaa
dec
inc
mov
xchg
xor
icebp
andl
or
lea
xchg
ret
mull
cmp
push
sbb
add
std
dec
pop
daa
inc
in
cs
nop
and
fadd
push
xchg
or
ret
aam
ret
test
int
inc
add
out
add
mov
lret
aas
outsl
movsl
stc
xchg
fcoml
dec
nopl
push
jo
mov
mov
stos
mov
out
or
sbb
div
adc
rcrl
xor
xchg
adc
pop
cmpsb
mov
ja
pop
das
std
outsl
idivl
mov
es
inc
cmpsb
mov
or
mov
lahf
xchg
cmp
iret
push
mov
pusha
fmuls
test
fildl
ret
bound
jb
mov
xchg
out
test
rol
jae
jb
pop
rcll
cmp
sbb
test
adc
loope
xchg
mov
cmp
mov
mov
inc
pop
lret
mov
jecxz
pushf
add
add
rolb
sub
ja
cmp
jl
adc
cld
adc
sbb
adc
das
mov
setp
andb
insl
lret
pop
pop
ret
push
mov
ficompl
xchg
lret
xor
in
scas
ljmp
xor
or
shl
adc
imul
and
lock
mov
sub
pop
insb
test
and
ljmp
aaa
adc
ret
lds
and
pop
inc
dec
mov
push
test
mov
or
xor
add
or
mov
or
popf
aad
lret
xor
jno
popa
enter
daa
mov
aaa
mov
outsb
fwait
enter
xchg
sbb
ret
dec
sahf
and
scas
jo
ljmp
mov
mov
add
sub
gs
jecxz
fists
xchg
rclb
cld
in
or
rcrl
mov
mov
fsub
data16
and
lret
andl
cmc
in
cmp
outsb
ja
push
hlt
les
ljmp
arpl
cltd
das
mov
fcmovne
jecxz
jne
push
enter
test
mov
pop
inc
ss
or
jnp
int3
inc
shl
xchg
hlt
dec
cmp
or
clc
jae
pushf
sti
push
data16
jecxz
xor
sarl
mov
arpl
scas
jb
cltd
in
pop
cmc
daa
test
test
push
test
mov
mov
int3
xchg
popf
mov
in
je
mov
cli
inc
jl
mov
movsl
or
jns
inc
add
roll
lea
add
and
lret
mov
pop
movb
xor
push
xor
add
jb
loop
lret
pop
lods
inc
and
lcall
xchg
ss
insb
cmc
jmp
jo
add
sub
mov
sti
inc
or
into
repz
popa
add
insb
stos
jecxz
xlat
insl
xchg
cmp
push
mov
xor
adc
aad
jnp
jle
mov
sub
mov
mov
enter
add
stos
mov
aam
mov
subb
dec
into
push
mov
dec
and
or
cld
inc
push
fsubp
std
rclb
int
jae
adc
inc
fcmovb
sbb
mov
mov
cmp
jmp
test
jp
mov
inc
cs
ret
inc
enter
xchg
fadd
dec
jle
inc
sbb
dec
fistpl
cmc
out
outsb
or
xlat
cld
push
adc
mov
inc
push
testl
aad
jge
sub
mov
sbb
les
add
lods
ja
mov
mov
adc
test
mov
jg
cmp
sbb
outsb
mov
push
mov
xchg
daa
jg
pop
xchg
scas
cltd
and
scas
sub
aad
ret
cli
adc
mov
test
insl
fisubl
call
add
popa
lods
dec
mov
pop
jnp
sub
mull
dec
clc
jnp
int3
mov
arpl
in
jae
repz
sarb
xchg
mov
std
test
lret
dec
bound
push
mov
jbe
cltd
iret
test
or
mov
xor
pop
cmpsl
xor
stc
mov
bound
lods
xchg
mov
mov
sbb
jge
aas
sub
adc
mov
in
jb
lret
shlb
scas
adc
cmp
push
xchg
add
add
pop
bound
shlw
add
adc
lcall
pop
sub
inc
xchg
addl
fdiv
jge
cmp
mov
cs
jo
pop
pushf
jno
fldt
inc
mov
dec
dec
fnstsw
ss
fistps
andl
int3
mov
xor
iret
mov
jne
or
mov
inc
imul
movsl
dec
xor
out
pop
adc
xchg
pop
dec
sbb
in
sbb
popf
out
lods
enter
pop
enter
lock
or
inc
test
xchg
fdivrl
sbb
ffreep
aaa
mov
cltd
or
xlat
mov
movsl
jbe
lahf
pop
sti
dec
or
adcl
fincstp
and
inc
sbb
dec
mov
leave
pop
xlat
cmp
push
pop
and
or
dec
lret
jno
add
cwtl
mov
mov
lret
cmpsb
shlb
jecxz
sub
xchg
rclb
and
push
aaa
push
push
mov
repnz
shll
adc
call
inc
rclb
cmp
push
sub
sahf
frstor
jg
adc
test
push
cltd
push
xor
xchg
mov
cld
sbb
mov
sbbl
pop
test
fisubs
jl
xchg
incb
xlat
xchg
movsl
aad
jbe
push
xor
mov
gs
stos
xchg
outsb
sub
ficompl
cld
lods
cli
sarl
fld
in
shr
pop
fdivrl
cmc
shl
rorl
inc
loopne
mov
lods
mov
inc
lds
mov
push
jne
sets
or
mov
inc
aad
scas
cltd
and
pop
in
lahf
loop
notb
mov
nop
dec
cmpsb
dec
aad
xchg
mov
and
mov
out
adc
mov
push
mov
outsl
push
cmc
sbb
add
push
jbe
mov
xor
loopne
and
xchg
pop
outsl
call
mov
sarl
ret
cmp
push
cmp
int
pop
push
sub
xor
inc
jp
and
bound
pop
xchg
jle
sub
aas
lcall
pop
ret
fsubs
fnstenv
dec
rol
cmp
xor
pop
mov
mov
inc
adc
mov
mov
cltd
scas
mov
notb
add
jmp
xor
leave
je
addb
nop
imul
das
out
call
loope
sub
mov
fnstcw
stos
jge
mov
xchg
out
ja
push
cld
stc
popa
in
cmpsl
or
std
out
fsubs
mov
dec
int3
pushf
mov
inc
sub
xchg
ja
push
xor
or
mov
enter
push
inc
shlb
scas
jle
pop
lret
add
jne
ja
test
pop
mov
pmulhuw
test
mov
jmp
test
insb
lret
enter
clc
jae
adc
or
in
loopne
mov
xor
cmp
lods
adc
push
iret
mov
mov
pusha
je
push
test
imul
in
mov
add
movsb
fwait
push
loop
and
dec
es
sbb
lret
adc
insl
add
outsb
mov
pushl
bound
test
roll
cmp
shl
ret
repz
xchg
mov
mov
imul
lcall
mov
sarl
adc
lahf
xor
cwtl
insl
cli
pushf
add
fucom
outsl
aam
sbb
fs
es
mov
dec
mov
sub
jb
outsb
add
daa
mov
int3
imul
xchg
test
in
cmp
jl
xorl
xchg
inc
dec
add
leave
jl
in
lock
lock
sbb
sbb
cli
and
insl
shll
mov
lods
mov
js
in
out
arpl
les
es
sub
mov
mov
cli
or
fisubrl
mov
push
adc
fistpl
pop
jbe
xor
push
pop
and
stos
fcomps
fbstp
fistl
dec
and
test
jg,pt
xchg
push
mov
outsl
lret
iret
pop
jle
mov
mov
popw
xchg
sahf
mov
sahf
pop
sbbl
insl
pop
pop
pop
jle
sub
push
push
aas
sub
daa
fstps
mov
cmp
cmp
scas
push
loopne
test
jle
inc
cwtl
rorl
les
lcall
mov
mov
or
test
pushf
rep
les
dec
inc
es
stos
sahf
or
stos
in
dec
popf
jmp
movsb
stos
outsl
sbb
and
out
insb
es
pop
fmuls
jmp
daa
fwait
mov
ficomps
ret
inc
out
out
pop
xchg
mov
es
mov
movsb
outsb
mov
sbb
sub
in
mov
pop
adc
mov
and
clc
loop
stc
sub
cli
sbb
out
aad
jbe
andl
or
xlat
mov
cmp
dec
lahf
xchg
and
in
cltd
adc
ljmp
rcl
daa
sbb
loope
sub
mov
mov
jno
outsb
or
mov
aaa
push
sub
insl
xor
mov
xchg
mov
stc
les
mov
inc
add
cmp
sarl
xor
push
fnstenv
out
jecxz
sti
mov
jg
loopne
dec
mov
push
ficomps
adc
xchg
ret
cmp
lcall
xchg
and
std
mov
pusha
push
incl
xchg
test
jge
call
xchg
ret
xor
mov
pop
push
jecxz
into
loop
imul
pop
aad
push
imul
inc
xchg
mov
out
push
lahf
and
add
jns
push
pop
mov
jo
mov
jns
in
lcall
aaa
repz
pause
fwait
hlt
ret
sbb
xchg
sbb
popa
ja
addr16
mov
cmpb
out
add
lods
imul
mov
push
int3
je
js
ds
cld
mov
push
ficomps
clc
nop
dec
push
int
xor
or
insb
cmpsl
mov
adc
add
jb
pop
jle
cmc
mov
orb
addb
leave
fsubl
fprem1
sub
mov
xchg
movsb
sbb
lds
in
jb
push
insl
xor
frstor
and
pop
mov
call
aas
int
loop
and
sub
lock
adc
sbb
inc
add
pop
dec
ret
hlt
movsb
scas
xchg
sbb
add
xor
ds
aad
add
js
loop
push
mov
inc
xor
cmova
xor
xchg
fidivrl
sbb
iret
sahf
sub
jge
sbb
mov
aaa
cmp
ja
into
arpl
xor
arpl
cs
les
je
out
cmp
pop
xchg
hlt
cmp
add
push
mov
clc
sub
incl
addr16
addl
jle
jg
xchg
arpl
dec
jle
dec
popf
ret
sbb
lds
std
pushf
xor
xchg
imul
fldenv
or
fwait
sub
dec
mov
xchg
and
pop
jae
daa
and
test
or
psubsw
mov
lock
loope
cmp
mov
les
jns
je
pop
idiv
add
lret
sub
ret
and
and
pop
shl
ja
dec
mov
popf
addr16
dec
jl
idiv
movsl
je
vcvtss2sd
mov
iret
mov
xchg
enter
pop
dec
pop
and
pushl
and
xor
sahf
adc
mov
ljmp
pop
and
add
add
rcll
bnd
sbb
and
xchg
addr16
pop
into
add
mov
pop
or
shll
sub
pop
int3
stos
iret
adc
repnz
mov
and
sbb
sbb
cmc
stos
inc
jge
push
mov
sbb
std
ret
sub
dec
inc
add
dec
adc
loopne
jl
dec
fmul
adc
jmp
mov
clc
js
bound
or
mov
pop
and
into
rcll
ret
sub
mov
xor
mov
push
rclb
pusha
xor
dec
int
js
loope
cli
outsl
push
in
cmp
icebp
cmp
xchg
sub
imul
add
rorl
pop
ror
push
repz
mov
ficoms
ds
adc
ja
flds
scas
push
push
out
and
ja
dec
sbb
inc
lret
mov
mov
mov
or
sub
cmovno
movsb
and
push
arpl
and
mov
push
sbb
mov
cmp
push
fstpl
sahf
lahf
dec
insl
std
xchg
xor
std
incl
and
xchg
or
nop
dec
ss
pop
sub
cmpsb
jge
xchg
cltd
and
xchg
cli
out
mov
sub
outsb
cmp
out
test
add
mov
fbld
rcrl
or
out
or
and
cs
and
push
or
int3
jbe
std
fldl
pushf
iret
lret
sbb
test
pop
or
dec
adc
mov
or
xor
insl
mulb
enter
xorl
cmpsl
sub
add
or
ljmp
js
jg
mov
xor
push
cs
mov
sbb
push
and
lods
loopne
jmp
mov
jns
jle
push
and
popf
xchg
dec
sub
cmp
cmc
mov
aas
xchg
pop
and
push
in
cmp
outsb
mov
pop
insb
jge
or
inc
push
ret
inc
syscall
xor
xchg
ret
mov
adc
sbb
and
aas
mov
int3
push
fcmovb
jmp
test
in
lds
pop
mov
sbb
pop
test
sbb
push
in
cmpsb
mov
mov
int3
mov
xor
push
push
mov
stc
push
outsb
aad
negb
and
xchg
pop
push
insb
icebp
cmp
sbb
cwtl
sub
jp
scas
cmc
push
xchg
in
loop
push
imul
jae
mov
dec
je
add
xor
cltd
xchg
and
mov
inc
sti
inc
jmp
inc
jle
lods
aaa
lock
and
sahf
cwtl
or
add
imul
cld
add
test
cli
js
and
clc
movsb
les
and
nop
xchg
jns
das
cmp
inc
adc
call
lret
push
add
pop
fadds
repnz
xchg
loop
adc
js
es
inc
lock
popa
fwait
push
ljmp
test
lock
pop
or
mov
mov
ds
jnp
push
sub
inc
roll
loopne
pop
stos
jae
push
fmuls
out
sbb
stos
pusha
and
sbb
cmc
add
jg
push
mov
adc
adc
jne
test
loope
lret
inc
pop
push
and
pop
inc
rcl
daa
test
adcb
add
add
push
jl
jo
out
or
movsl
and
dec
mov
dec
cltd
popf
adc
movsl
in
sbb
mov
mov
and
ljmp
sub
repnz
and
xor
jo
lods
into
ja
ret
into
lods
jo
sarl
cmp
repnz
or
jmp
data16
dec
sbb
mov
pop
cmpb
jae
insl
adc
mov
mov
or
inc
ss
cld
and
adc
inc
imul
in
imul
sub
jne
loopne
icebp
out
in
in
lock
and
push
scas
push
frstor
das
or
mov
gs
lea
sbb
push
push
loop
or
stos
lods
jmp
and
lahf
xchg
push
test
shrb
repnz
or
mov
ds
jl
loop
cmp
jl
mov
in
lock
mov
and
lret
js
inc
outsl
xchg
lods
lock
xchg
dec
andb
jle
aaa
xchg
and
nop
push
mov
inc
shl
xchg
arpl
fs
lods
das
sub
and
jl
movq
hlt
jmp
jne
lds
sub
popf
push
sub
cmp
cltd
fidivrs
pop
lcall
xor
fadds
cld
jl
sahf
push
adc
push
outsl
cmp
fldt
int
jb
movsl
int3
push
jge
or
out
mov
dec
in
arpl
push
push
scas
shl
loopne
in
jge
xor
sub
dec
add
pop
test
pop
push
inc
xor
movsl
mov
or
mov
stc
in
aad
movsl
or
lcall
sub
pop
loope
jp
test
imul
and
pop
jb
sahf
pusha
lcall
inc
fldt
cmp
out
cli
fwait
xor
cmp
and
adc
mov
xchg
in
cli
insb
and
in
lahf
sbb
mov
xchg
sahf
cmp
addr16
in
or
add
inc
push
out
test
mov
mov
mov
push
or
sbb
sub
and
mov
movsl
pushf
je
stos
shlb
int3
xor
adc
dec
pusha
sbb
push
mov
jns
movsb
dec
je
push
add
scas
loope
mov
lcall
aas
in
mov
mov
jno
push
pop
push
lahf
add
pop
lea
or
jmp
mov
cltd
inc
mov
subb
inc
jg
outsb
mov
sub
dec
jg
pop
jbe
push
or
out
std
lcall
xlat
dec
fwait
dec
or
sbb
popa
xlat
xchg
xlat
rorl
xlat
scas
mov
in
je
pop
mov
lods
nop
mov
xor
mov
insb
imul
sti
sub
fidivs
out
out
fwait
adc
shrl
fs
jne
aaa
loop
sti
or
sti
push
outsl
adc
cmpsb
cld
adc
fdivr
pushf
pushf
sub
in
ljmp
insb
sbb
xor
ds
daa
int3
jb
or
test
leave
ja
aas
push
repz
or
repnz
pop
add
icebp
das
mov
jl
push
cmpsl
pop
xlat
push
sbb
inc
std
in
dec
fisubrs
lods
jmp
rorb
add
mov
jbe
cwtl
aad
negl
jne
xchg
sbb
setl
xchg
sub
imul
pop
int
dec
mov
adc
jp
push
aam
jb
imul
push
jae
mov
jae
sub
shll
push
push
xor
xchg
or
repnz
mov
arpl
lods
clc
jg
push
hlt
xlat
int3
scas
cmp
sbb
scas
lret
movsl
lods
ds
and
scas
loope
cmpsb
mov
lea
dec
mov
out
enter
cli
lcall
inc
push
inc
aad
xor
lods
mov
xchg
inc
xchg
jmp
dec
rclb
mov
popa
int
mov
add
iret
dec
fst
mov
loopne
push
pop
imul
cli
lcall
jl
pushf
mov
sub
add
sub
add
pop
mov
pop
xor
pop
jge
cmp
dec
jge
pop
hlt
lea
jbe
ret
das
popf
add
shll
test
mov
dec
or
test
pop
push
fwait
decl
adc
inc
scas
pop
xchg
cmp
mov
pop
or
mov
ficompl
jmp
dec
test
repnz
cmpb
sub
push
jo
mov
lret
mov
mov
and
push
adc
testb
icebp
jns
call
mov
pop
lods
jl
pop
or
push
pop
cld
cltd
and
jbe
andb
add
arpl
xor
mov
daa
adc
cmp
inc
call
stc
jnp
lret
aaa
bound
je
test
pop
out
ljmp
movsb
lret
xchg
das
mov
mov
xchg
lahf
enter
clc
adc
xor
sbb
shl
in
jae
cmp
sub
mov
cmp
ljmp
jp
sti
loop
push
jo
gs
sub
add
iret
cmpsb
subl
jg
aad
xor
pop
mov
out
dec
arpl
aaa
xchg
fdivrl
jge
cmp
sub
mov
cmp
push
cld
imul
jno
int3
adc
xor
jo
adc
in
aaa
xchg
in
int
mov
int
mov
sbb
inc
test
aaa
push
pop
je
or
mov
bound
mull
loopne
push
out
loop
daa
pop
js
movsb
xor
xchg
jg
icebp
add
push
aas
push
push
push
and
dec
jg
leave
fstpt
fs
mov
jbe
dec
ja
hlt
or
adc
into
ret
loop
out
out
cmp
stc
mov
mov
icebp
test
in
mov
dec
das
cmp
dec
hlt
xchg
cmp
jnp
test
ljmp
scas
pop
add
loopne
daa
add
pop
or
jne
and
push
mov
test
mov
xchg
or
orl
jl
mov
leave
xchg
pushf
addr16
add
and
inc
jo
and
adc
lret
sub
sub
iret
movsl
inc
es
pop
jbe
dec
repz
movb
data16
mov
cmp
xor
arpl
into
outsl
cs
push
and
test
loopne
addr16
repnz
mov
ret
gs
inc
mov
push
pusha
jp
imul
push
mov
adc
sahf
imul
jbe
iret
xor
test
or
ret
inc
xchg
divb
call
add
roll
and
push
jecxz
jo
test
lcall
adc
test
lcall
adc
gs
inc
sub
test
xchg
shll
jmp
ficoms
out
test
rcr
pop
movsl
addr16
xchg
jge
adc
in
cltd
in
sbb
test
movsb
imul
and
scas
lret
sub
inc
jmp
sbb
ljmp
add
inc
ja
inc
sbb
mov
inc
int
jns
and
add
mov
jg
in
out
mov
call
mov
mov
mov
shlb
and
push
add
mov
fistps
cmp
nop
adc
std
pushf
mov
jle
push
iret
inc
push
push
lahf
inc
jl
pop
push
push
push
ffreep
jle
in
sbb
mov
mov
int
out
nop
lcall
xchg
or
sbb
or
outsb
add
rep
cli
jmp
inc
and
mov
cwtl
in
lret
cltd
aad
lahf
ficoms
daa
jl
or
pop
sub
iret
jle
popa
mov
mov
inc
pand
mov
jle
inc
pop
popfw
rorb
cmp
adc
mov
push
mov
aas
mov
dec
push
xorb
lock
cli
and
add
fs
leave
dec
push
adc
cmp
cld
imul
out
xchg
push
lret
ljmp
es
or
fwait
popf
sub
sbb
xor
pop
jnp
test
or
pusha
pop
dec
into
outsl
mov
jbe
xor
insb
push
pop
cmp
mov
mov
movsb
mov
nop
loope
and
mov
aam
dec
push
pusha
imul
out
jmp
sbb
add
jne
sub
fldt
jge
add
sub
sbb
or
jbe
push
aad
mov
jmp
mov
add
stc
jno
sbb
jbe
hlt
out
mov
sahf
dec
sub
inc
jae
jge
inc
mov
pop
or
mov
lds
jmp
dec
add
mov
cmc
cwtl
mov
jecxz
stc
jp
jo
stc
pop
pop
xor
sarl
das
fwait
sub
and
pop
jbe
or
inc
in
stos
pop
mov
sub
inc
les
push
add
or
loopne
xlat
mov
ret
sbbl
shlb
mov
mov
loopne
xchg
mov
sbb
fnstcw
out
xchg
pop
cmc
fldenv
jbe
pop
pushf
stos
repnz
push
out
push
and
les
push
sbb
lcall
push
xlat
cmp
jb
mov
inc
aad
cmp
and
scas
imul
js
out
fs
mov
sbb
das
arpl
or
cwtl
rorl
lds
jne
lds
mov
les
not
orb
sti
fwait
xchg
mov
jne
and
push
add
movsb
in
mov
mov
jnp
aad
pushf
insl
jle
test
pop
jg
sbb
cld
mov
xchg
jle
outsl
mov
xchg
xchg
xor
lods
jecxz
cmp
push
inc
pop
test
pushf
adc
sub
lds
cs
stos
add
fistpll
adc
mov
negb
in
xlat
fnsave
jae
dec
jo
mov
dec
cmc
sar
dec
test
jle
jnp
dec
movsl
pop
std
fstl
test
icebp
and
or
ja
xchg
fs
insl
adc
xchg
and
push
inc
out
lret
mov
test
xor
aaa
dec
xor
and
mov
adc
fisubl
jmp
pop
mov
call
adc
dec
out
pop
mov
jne
cmp
push
add
push
scas
lds
mov
dec
aaa
cmp
xor
enter
xorl
test
xchg
icebp
push
fstps
pop
aad
outsb
out
sbb
popf
dec
or
mov
adc
bound
cmp
addl
cmp
pop
cmp
lahf
arpl
inc
mov
inc
adc
pop
test
dec
movsl
dec
xchg
outsb
lods
sub
repz
cltd
int3
out
or
pop
push
xchg
xchg
inc
and
shll
ret
mov
icebp
mov
adc
loop
or
jnp
pop
fwait
in
mov
xchg
loope
push
cmp
mov
and
xor
nop
js
xor
push
and
aad
jo
mov
push
pop
frstor
repz
pop
hlt
push
stos
sub
pushf
loopne
xchg
test
pop
mov
pop
pop
or
stos
test
pushf
jmp
mov
xlat
mov
std
es
add
jb
xchg
ret
xchg
in
xlat
inc
jg
push
and
cs
add
sbb
mov
mov
iret
comiss
arpl
mov
negl
jne
xchg
lret
sub
push
bswap
xor
popa
mov
sti
movsl
popf
fidivrl
push
jmp
testl
roll
add
sbb
repnz
push
cmp
inc
adc
fs
arpl
cbtw
pop
testl
xchg
dec
js
cmp
inc
addb
pop
mov
sub
mov
scas
xchg
dec
divl
cmpsl
push
adc
fsubrs
and
mov
mov
sbb
xchg
jo
fcoms
iret
pop
push
cld
sub
sbb
dec
mov
arpl
filds
bound
mov
addb
pop
inc
fdivl
add
pushf
add
idivl
sbb
mov
mov
xchg
fwait
shlb
adc
and
jg
outsb
push
sbb
repnz
aaa
sub
dec
push
subb
xchg
mov
int
cmc
mov
ss
outsb
mov
and
clc
out
out
jmp
inc
pop
pop
jo
leave
cmpsl
popa
mov
adc
jg
mov
or
xor
mov
ret
mov
pop
stos
mov
jl
rcrb
frstor
mov
fcomps
out
xchg
push
adc
push
push
leave
popf
push
fnstenv
and
stos
mov
lret
lods
in
fwait
aaa
jle
stc
jmp
int
mov
popf
cmp
mov
sub
leave
ss
mov
mov
and
in
mov
flds
or
jnp
aad
add
push
xor
mov
sub
test
sbb
outsb
rorl
mov
nop
jnp
sub
test
xorl
shr
loope
sbbl
notl
pushf
ljmp
clc
les
mov
test
mov
cmpsl
or
dec
iret
mov
dec
mov
not
movsl
inc
les
pushf
jp
cmp
fsubs
push
inc
jns
in
sub
cltd
cli
add
inc
jp
xor
in
das
sahf
lret
sbb
fs
jge
lret
mov
int3
mov
mov
mov
fldenv
out
inc
add
loopne
cmp
xchg
lret
rclb
mov
subl
hlt
movsl
pop
xor
xchg
push
dec
jne
orb
cmpsb
mov
test
xchg
lcall
test
cltd
fdivrs
cmp
push
mov
scas
das
jnp
cmp
push
sub
push
fsubrs
and
fists
and
orb
or
cld
mov
sbb
xchg
iret
and
jmp
push
push
sar
dec
push
pop
int
cmp
jge
rol
and
xchg
lods
push
xchg
and
enter
cmp
xor
add
mov
ret
jne
mov
aas
mov
inc
dec
jo
mov
jmp
or
xor
or
sti
cld
push
xor
fsubs
mov
sub
and
push
sbb
sbb
daa
or
xor
adc
dec
icebp
dec
aad
inc
lds
sub
sahf
xchg
outsl
bound
lahf
int3
mov
stos
negb
lahf
jb
dec
mov
mov
and
addb
test
push
int3
out
jno
andb
sub
inc
popf
adc
pop
bound
xor
push
cwtl
stc
lods
sub
cmpl
das
dec
and
jbe
push
pop
cmp
inc
adc
cmp
lods
mov
rcll
js
add
cmp
xor
movsl
aaa
jg
ss
sub
jge
adc
mov
and
pop
push
sub
test
fsub
inc
jns
fs
adc
lods
xchg
lds
pop
out
shl
pushl
mov
shl
call
jmp
xchg
adc
mov
pop
arpl
pop
jg
sbb
or
shrl
in
add
or
out
iret
jl
jmp
test
movsl
decb
ret
adc
cld
stc
sarb
xchg
xchg
stc
ss
stc
in
insl
mov
movsb
mov
cli
xchg
pop
sub
xlat
inc
lret
scas
rcr
dec
sub
jno
mov
cmp
pop
dec
push
popa
mov
in
xchg
cli
test
jp
mov
and
jns
ljmp
gs
movsl
mov
add
mov
mov
fs
sbb
push
out
xchg
jns
sbb
sub
mov
imul
mov
pusha
mov
inc
or
jmp
xlat
shll
push
out
adc
xchg
lds
sub
in
lods
int3
xor
dec
mov
pop
rcll
xor
mov
call
cli
dec
ror
mov
arpl
insb
xor
cmp
ljmp
lret
out
inc
fwait
ss
test
cld
xchg
sbb
pusha
push
jo
test
pop
cmp
or
outsb
mov
fisubl
pushf
aaa
or
pop
sti
cltd
inc
jg
in
xor
ficomps
je
fildl
xor
std
adc
inc
stc
lcall
cmc
rcrb
mov
jno
movsb
shrb
pop
adc
es
pop
pop
push
or
out
mov
mov
and
subl
into
lock
arpl
and
xlat
or
ds
aam
mov
lcall
in
jae
pop
in
xor
test
push
shlb
loopne
jle
push
mov
in
into
xlat
push
cmp
mov
cs
jmp
inc
incb
or
shr
cmp
stc
pop
xchg
ljmp
les
leave
adc
dec
out
aaa
out
arpl
xchg
sbb
mov
cli
stos
cmc
add
push
daa
lahf
xchg
insb
lahf
scas
mov
out
add
insl
out
and
xchg
mov
or
fdivr
pop
jbe
mov
or
lret
sbb
and
ja
out
js
repnz
dec
add
xchg
ja
out
push
je
rcrl
bound
adc
push
lret
leave
mov
push
test
xor
sarb
push
fsincos
sbb
lods
pusha
jo
pop
adc
jnp
cltd
inc
ret
xorps
mov
jae
sub
or
lea
movsb
pop
stos
sub
pop
dec
gs
lock
fstpl
mov
sahf
cmp
xor
out
stc
jge
jo
sub
pop
push
xchg
sbb
xor
xchg
cmc
addr16
jae
cmp
mov
nop
inc
pushf
push
mov
shlb
repz
ljmp
pmaxsw
bound
dec
mov
fistpl
jbe
lret
mov
mov
sub
and
mov
rolb
je
aad
aam
insb
xor
loope
or
push
scas
scas
sarb
int3
test
adc
loope
push
aaa
add
adc
mov
out
sbb
pop
lock
movsb
sbb
push
roll
mov
fistps
jb
testl
jp
sub
push
mov
aas
inc
clc
call
jo
fdivs
mov
xchg
lods
cmp
sub
adc
and
fstps
out
aas
cmp
adc
xchg
push
imul
lahf
test
loope
push
sahf
inc
paddsb
lahf
mov
xor
sbb
jmp
gs
test
add
bound
push
ljmp
sbb
fcmove
inc
jecxz
aas
fwait
inc
popa
dec
mov
jg
jmp
aad
push
je
test
jmp
sbb
popa
push
inc
repz
dec
jl
inc
fnstcw
push
into
mov
mov
pop
sub
mov
lock
and
or
lret
lret
lock
ret
iret
mov
sti
in
push
js
pop
pop
les
std
mov
loope
std
fwait
test
mov
movsl
icebp
out
arpl
xor
aaa
lds
out
jmp
or
ds
add
mov
out
and
or
adc
mov
mov
xchg
sbb
enter
outsb
inc
mov
cmp
fdivp
pushf
fs
xor
mov
mov
adc
sbb
sub
sahf
cltd
jo
fs
sub
pop
das
dec
sub
cmp
fdivrs
dec
adc
clc
into
xor
xchg
push
sub
or
or
sub
outsb
stos
data16
jno
adc
pop
out
and
jecxz
add
in
mov
roll
inc
out
test
pop
stos
mov
aaa
xchg
loope
mov
aam
jecxz
sbb
jge
dec
jmp
stc
cmp
insl
sbb
loop
arpl
bound
popa
movsl
in
inc
jno
fisubrs
push
decb
outsb
into
and
jns
jno
pop
pusha
jno
dec
std
aam
mov
or
test
pushf
ss
push
xlat
xchg
mov
xor
js
add
jo
push
setge
js
clc
xchg
loop
jmp
mov
xor
movsb
movd
pop
mov
loop
adc
pushf
inc
mov
cs
mov
fisubl
cmp
insb
sahf
add
mov
cld
push
xor
mov
bound
mov
scas
fwait
out
cmp
pop
imul
cli
or
xlat
xor
push
cmp
ds
cmpl
jp
roll
sbb
jb
lds
fs
data16
xchg
call
mov
push
sahf
push
and
shll
pop
mov
hlt
mov
and
sbb
push
arpl
loopne
push
add
adc
popf
nop
mov
mov
shlb
adc
and
stc
adc
push
sub
shlb
sar
xchg
je
outsb
jle
sub
xchg
std
xlat
lea
loope
push
pop
mov
fidivrs
jp
xchg
in
adc
aam
loop
cmp
dec
xchg
loopne
xlat
or
push
sub
mov
push
inc
lods
cmpl
xor
int3
sub
jo
ret
shll
mov
sbbl
xchg
jmp
in
xchg
pop
cmp
and
lods
cltd
xor
push
stos
aad
out
inc
push
call
loop
or
in
sti
add
data16
inc
lds
inc
pop
stc
pcmpeqb
xor
cmp
inc
ja
divl
rclb
pop
es
sub
insb
arpl
jo
addr16
sbb
mov
sub
xchg
enter
aam
add
dec
or
mov
int3
pusha
mov
movsb
xor
xor
test
jae
mov
jg
shlb
cwtl
push
shl
lds
mov
push
add
cmc
push
xor
adc
aam
or
lret
ljmp
sub
mov
repz
dec
xor
push
popf
sbbl
js
rcrl
stos
mov
popa
ss
addr16
inc
add
push
add
test
imul
test
or
pop
push
aaa
adc
sar
mov
lods
xorl
and
es
mov
pop
mov
clc
mov
sub
xlat
lret
mov
mov
into
insb
fcom
xchg
out
in
jp
bound
in
mov
sbb
jne
fwait
aad
mov
xor
pop
push
xchg
pop
jo
outsb
jae
dec
add
push
notb
push
xor
and
ss
lcall
es
sub
cmp
cmp
and
inc
xor
fstpl
aad
mov
dec
xor
xchg
mov
out
mov
jo
insl
sbb
mov
divl
jae
sub
push
mov
scas
jnp
mov
cwtl
and
jb
rolb
xor
hlt
mov
cmp
cmpsl
cmp
add
mov
lret
movsb
fs
cmc
xchg
lret
or
pop
popa
lcall
std
mov
fsubs
cmp
out
aas
mov
mov
mov
inc
push
pop
sbb
mov
sbb
setnp
mov
sub
cmpsb
roll
aad
mov
push
inc
imul
lret
add
cmp
sbb
xor
mov
and
dec
jle
aas
subl
aam
out
test
pop
mov
cmc
pop
add
add
int3
pop
cmp
push
inc
fstps
push
sahf
xorl
imulb
fld1
shll
enter
mov
mov
stc
lea
xchg
aad
and
imul
jno
jno
or
push
int
cmp
fwait
mov
scas
aaa
cli
hlt
outsb
mov
add
pop
add
cmc
jp
scas
xchg
ds
int3
lcall
loop
xor
push
sub
jae
subl
out
xchg
iret
lock
clc
xchg
dec
lods
and
mov
clc
aaa
das
lret
mov
inc
xchg
mov
pop
or
mov
pusha
aaa
hlt
sbb
sbb
mov
aaa
test
mov
inc
jg
cs
sub
mov
push
xor
lds
mov
push
mov
sub
movsl
aad
jno
movsl
jne
lock
sti
cs
dec
clc
sbb
dec
stos
push
adc
and
fsubl
cmpsb
inc
mov
rclb
push
mov
aaa
adc
aam
dec
and
dec
mov
pop
jb
cwtl
loop
ret
jg
faddp
push
lea
imul
loopew
push
mov
cmp
mov
xor
sbb
loope
scas
push
ljmp
jae
sar
sub
inc
xchg
roll
mov
push
loop
push
mov
or
sti
cld
or
int3
xchg
in
adc
fs
fbstp
add
mov
dec
outsl
in
lods
icebp
push
imul
repz
xchg
bound
jp
inc
into
fistpl
push
sti
mov
mov
sbb
stos
xchg
adc
pop
jb
xor
adc
jns
int3
dec
bound
int3
jle
movsb
xchg
sbb
sbb
push
inc
out
imul
sbb
fnstenv
lret
xor
push
mov
stos
mov
mov
movsl
jbe
adc
rorb
rcr
xor
out
dec
lcall
hlt
inc
test
rolb
dec
mov
inc
cmp
xlat
daa
lea
imul
jno
aam
popa
push
mov
dec
or
icebp
push
xor
sarl
jge
mov
jmp
inc
mov
mov
sbb
inc
movsb
xchg
fwait
scas
pop
lret
dec
pop
incb
pop
adc
test
xchg
iret
aas
gs
jmp
in
mov
out
xchg
cmp
in
dec
movsl
inc
xor
inc
push
out
fcmovnu
mov
int3
mov
sti
jge
call
scas
cld
mov
aas
xor
cmp
sahf
pusha
call
mov
int3
mov
dec
in
push
cmp
imulb
dec
push
sbb
or
add
jae
pop
jae
shl
push
loopne
gs
xchg
xchg
jmp
push
cmp
aas
sbb
push
mov
ss
jb
outsl
js
pop
and
stc
and
mov
ljmp
divl
mov
dec
scas
cli
sub
fimull
xor
mov
inc
add
pop
dec
pop
shll
imul
ret
sti
push
push
push
iret
stos
cs
adc
popf
jmp
nop
int
lahf
orb
push
popa
pop
popf
inc
mov
dec
jne
mov
adc
mov
cmp
add
jp
in
scas
mov
jge
faddl
ss
arpl
lcall
sarb
incl
loopne
adc
rcrl
push
int3
sub
cld
mov
xor
push
in
inc
xlat
jbe
es
in
dec
xchg
std
adcb
adc
imul
fdivr
mov
pop
xor
cmp
xor
push
cmp
inc
cwtl
aad
adc
or
push
jg
fsubrs
xchg
nop
imulb
into
adc
rolb
aaa
imul
mov
ss
mov
fs
push
dec
mov
outsb
in
jecxz
pop
add
es
mov
mov
faddl
popf
mov
call
test
pop
sub
and
pusha
adc
arpl
add
inc
mov
push
sbb
les
fsubl
roll
jns
stos
shll
inc
hlt
in
xor
movsb
mov
cmpsl
jne
sbb
es
int3
stos
aam
loopne
xor
test
push
mov
pop
fwait
sub
mov
push
push
ds
and
mov
jno
push
sub
adc
pop
and
add
xchg
xor
loopne
xchg
aaa
lret
insb
jns
les
or
or
or
mov
aas
xchg
push
int3
cmpsl
lret
mov
adc
ds
sub
aam
sbb
push
jl
addr16
sahf
jo
lock
fsubs
fs
cltd
lahf
pop
jns
dec
push
xchg
fisttpll
sarb
jnp
and
dec
insb
pop
dec
in
add
arpl
and
lds
sbb
jne
mov
imul
lcall
xchg
jo
aam
fadds
std
rclb
cmp
int
es
ss
pop
scas
or
pusha
insl
jecxz
sti
cmp
adc
test
pop
notl
pusha
xor
enter
mov
mov
ficoml
jp
xor
in
xchg
sbb
push
jmp
aam
inc
and
frstor
mov
fwait
into
divl
xchg
adc
loopne
add
xor
or
nop
cmp
add
out
cmova
and
in
out
in
cli
movsb
imul
imul
sub
xor
mov
loop
stos
fmul
jmp
ljmp
sbb
inc
mov
dec
ljmp
jae
ja
cmpsl
mov
mov
add
pop
fwait
push
mov
and
je
or
arpl
imul
mov
xchg
push
inc
aad
add
cwtl
jb
or
out
pop
ret
pop
xor
int
dec
adc
sbb
sbb
ret
pop
sub
aaa
jno
and
add
and
cmp
pop
or
outsl
jno
jbe
jne
ret
shl
movsb
jg
test
rcll
in
adc
arpl
leave
mov
xor
mov
fwait
sub
outsb
mov
cld
test
mov
cmp
scas
mov
xchg
add
mov
dec
lods
popf
int
mov
fimuls
sub
xlat
lahf
cmp
scas
mov
or
adc
adc
aad
loop
dec
dec
jecxz
bound
in
push
jno
arpl
gs
jno
and
insl
loope
call
jns
or
ljmp
add
fs
or
cmpsl
mov
iret
jmp
loopne
jl
lret
add
or
inc
mov
cmc
mov
and
outsl
or
xchg
jno
negb
jmp
sub
ja
mov
cmp
push
mov
loopne
rol
cmp
cmp
xchg
test
ror
mov
push
cmpsb
mov
mov
jge
fdivr
pop
int3
jp
xchg
sbb
sbb
sub
arpl
imul
popa
pop
fimull
inc
nop
loop
movsb
sahf
fstpt
adc
mov
loop
mov
jle
cmp
push
out
or
push
mov
rcrl
daa
push
mov
cltd
adc
popa
aam
rcr
mov
js
aad
and
icebp
xchg
rcr
ja
mov
leave
les
pop
lods
nop
mov
inc
mov
into
mov
dec
lds
xor
fdiv
cmp
mov
mov
or
in
and
das
cmp
mov
pusha
es
cmc
inc
rorl
mov
subl
aad
scas
sahf
mov
adc
lods
repz
lret
inc
pushf
idiv
mov
cmp
adcl
sbb
xlat
loopne
and
into
incl
out
stos
xor
push
jbe
cmp
stc
add
test
mov
test
les
sub
das
dec
out
shrl
cmpsl
je
pop
inc
cs
and
xor
jmp
and
sub
jo
rcl
and
inc
decb
cmc
movsl
cwtl
ret
les
in
test
or
mov
sub
cmp
pushf
mov
push
sarb
pop
xchg
rol
or
out
mov
sarb
xor
cmpsb
adc
outsl
testw
or
jo
pop
jmp
pop
fdivrl
lods
test
push
xchg
cld
mov
push
daa
int3
ret
xor
cmp
cli
mov
mov
jno
insl
cli
sub
xlat
jmp
fmull
imulb
inc
jno
push
adc
pop
adc
xchg
int3
mov
fwait
pushf
mov
cwtl
adc
push
pop
adc
loope
pop
lods
xchg
xchg
les
mov
subb
push
arpl
pushf
mov
mov
js
xchg
adc
into
std
cmp
dec
sub
adc
out
sub
dec
out
pusha
test
jo
cmp
cmpsb
sbb
rorb
or
pop
jae
call
aas
or
push
jle
push
jecxz
fbld
test
push
dec
mov
add
stos
test
fnsave
cmc
andb
jnp
pop
gs
pop
adc
test
push
jl
imul
pop
stc
gs
ret
cmpsb
enter
scas
xlat
test
jecxz
pop
cmp
mov
inc
in
fimuls
imul
xor
sub
jle
xor
mov
cmp
int
cmp
xor
adc
jno
rorb
arpl
mov
cwtl
repnz
cli
pop
vpacksswb
call
pop
mov
int3
in
pop
test
in
outsl
adc
jp
rcrl
sar
rcrb
mov
xor
jnp
outsl
pusha
push
int3
sub
mov
push
sbbb
xchg
pushf
jl
loope
jle
xor
mov
cli
mov
sub
push
cmpsb
sbb
and
push
cmc
lcall
dec
xorb
out
movsl
bound
mov
mov
rdtsc
test
flds
inc
int3
test
jg
sbb
aas
les
mov
add
hlt
push
push
insl
lds
xchg
iret
inc
add
and
push
pushf
or
jno
pushf
mov
or
inc
mov
js
mov
cli
mov
xchg
cmp
jne
mov
fdivl
in
xchg
cmc
fidivrs
daa
daa
push
inc
or
stc
jne
lcall
mov
inc
scas
mov
inc
mov
test
cmpl
xor
mov
sbb
js
or
ljmp
mov
out
je
stos
and
aaa
and
orl
sub
dec
jbe,pn
adc
in
inc
std
inc
stc
jp
mov
cs
scas
je
jo
sbb
lret
aad
fstpl
and
sbb
jg
adc
sbb
and
cmpsl
es
fidivrs
lods
push
jnp
aam
jl
adcl
jb
xor
cld
pop
fs
adc
fldl
cmp
and
shll
sub
je
fmuls
pop
repnz
xchg
sbb
adc
in
fcompl
xor
sti
loope
mov
push
xchg
loope
std
xchg
and
add
and
xchg
mov
jnp
inc
aas
pop
pop
cwtl
rol
pop
pop
xchg
leave
in
xchg
pushf
lds
jns
out
pushf
ja
mov
out
or
xchg
pop
mov
in
or
sbb
sub
push
out
add
test
stc
xchg
data16
pop
dec
call
jo
ret
ljmp
and
cltd
repnz
imul
out
out
lret
cmp
inc
cs
xor
dec
mov
lods
jne
dec
lahf
and
mov
fldcw
mov
das
insl
mov
sub
or
pop
pop
sbb
lods
fmull
pop
sahf
lods
lods
pushf
mov
test
nop
or
inc
push
int
xchg
stc
fmull
fimuls
popf
mov
or
jne
mov
mov
sti
sar
and
mov
inc
into
nop
stos
fcompl
xlat
call
icebp
loop
roll
mov
gs
les
imul
leave
mov
cmp
add
hlt
push
inc
loope
in
loopne
aam
jo
outsb
xchg
shrb
mov
in
lea
movsl
add
and
push
js
jae
fiadds
lahf
rcr
sub
lret
push
xor
jg
push
cmc
add
push
test
mov
or
and
jo
pop
push
sbb
insl
aaa
loopne
pop
dec
cmp
mov
sub
add
mov
scas
leave
scas
mov
ja
inc
int
ss
out
push
mov
jbe
xchg
inc
stc
or
add
and
xchg
call
call
jbe
loopne
cmp
lcall
push
xchg
test
in
in
fiadds
or
pop
mov
jbe
pop
out
mov
lds
pop
pop
jnp
cs
mov
popa
push
popf
mov
lea
mov
xchg
push
outsl
adc
out
jno
or
lret
cmp
sbb
dec
adc
mov
negb
addr16
pop
aas
fs
das
add
pop
sub
ja
popa
push
mov
jb
mov
push
jmp
cmc
push
out
nop
sbb
test
dec
jp
mov
inc
lock
test
mov
xchg
xorl
sbb
or
sbb
js
xlat
popf
cmp
xchg
sbb
inc
mov
data16
or
jp
pop
jae
dec
mov
mulb
mov
sub
sbb
pop
xchg
enter
push
movsb
xchg
cld
jnp
xor
dec
push
fwait
or
mov
sub
adc
orb
mov
pusha
notb
pop
adc
stos
push
enter
stos
cwtl
mov
sub
xorl
lods
inc
mov
jl
subb
out
hlt
std
adc
mov
in
sti
ja
add
gs
push
push
ljmp
or
sbb
and
arpl
mov
clc
clc
fdivs
and
pop
in
jo
inc
mov
scas
bound
rcrb
sahf
mov
fstpl
push
add
mov
pop
shrb
push
movsb
aas
jp
sub
xchg
int3
fsubr
add
xor
out
std
movsl
add
ss
call
mov
scas
cmp
sbb
mov
and
jmp
mov
pop
mov
cmp
cmp
and
clc
lret
mov
push
and
loope
sbbb
xor
mov
lcall
aad
inc
ss
mov
jae
jbe
dec
in
mov
pop
mov
loopne
imul
xchg
in
out
xorb
fstpt
sbb
in
les
stos
lods
and
fists
into
adc
fstp
jp
fisttps
cmpsb
jmp
es
xchg
pop
pop
test
sub
loope
dec
rol
lock
mov
xorb
lods
in
je
incl
xlat
inc
xor
xchg
mov
cs
jae
sbb
in
mov
push
sar
mov
cmpsb
test
cmp
sbb
jl
pop
jbe
mov
add
loopne
out
dec
push
or
lock
mov
pop
sub
aam
mov
inc
notl
out
movsb
mulb
push
jg
dec
out
cmpsb
lock
jl
pop
pop
jecxz
in
adc
adcl
test
pop
test
in
test
das
std
jle
add
cmp
filds
pop
sbb
cmp
shlb
xchg
mov
push
dec
daa
dec
aam
ret
push
stos
pop
fidivl
push
js
test
pop
data16
and
popf
jecxz
sbb
xchg
in
sbb
add
loop
js
dec
jg
inc
jge
arpl
mov
mov
fisttpl
jle
lret
outsb
inc
dec
xchg
ret
shr
cmp
fisubrl
mov
adc
xorb
xor
insb
in
lds
pop
xor
fnstsw
adc
adc
inc
repz
inc
xchg
adc
push
insl
movb
js
push
pop
sub
xchg
push
js
cmpsl
subl
xchg
or
call
in
cmc
jl
in
jb
dec
in
negb
sahf
inc
fs
xor
loop
fcomps
test
mov
lahf
aas
add
dec
mov
call
jne
fsubrs
hlt
std
or
pop
fucomip
out
lret
mov
test
repz
sub
inc
fbstp
into
and
and
xlat
push
mov
ret
rcrl
rcrl
shrb
mov
into
cmp
outsb
xor
mov
out
jbe
arpl
jbe
or
pop
push
bound
push
hlt
push
mov
cltd
call
pop
ret
adc
jae
pop
hlt
imul
lods
mov
push
ljmp
lods
rsm
jae
hlt
add
sub
adcl
push
out
push
mov
xor
mov
addr16
adc
ret
push
aad
cmpsl
rcll
mov
mov
adc
jl
test
dec
gs
arpl
push
sub
add
sbb
mov
insl
stos
fldenv
dec
imul
mov
dec
dec
xor
xchg
mov
cmp
js
push
dec
push
xor
dec
in
ljmp
cmp
sti
jmp
mov
daa
aad
xchg
or
mov
in
ja
jo
cli
jmp
bound
jno
lea
add
add
cmp
xor
nop
and
add
out
lcall
or
jle
cld
loope
shlb
push
and
rcll
int
ja
push
cmp
scas
movsb
fcmovnbe
movsb
push
xchg
int3
add
sub
call
mov
rcll
dec
sub
adc
fdiv
inc
pop
mov
fcomps
and
mov
addr16
mov
aaa
pop
lret
pop
insl
sbb
mov
insl
mov
cmp
jnp
rcrl
dec
mov
data16
dec
rclb
sub
cltd
insb
xchg
lods
data16
std
sbb
xchg
aad
in
pop
xor
test
in
test
stos
sub
in
xor
mov
pop
int
shll
sub
fsubr
imul
mov
aam
xchg
cs
dec
xor
cmp
loope
sub
xor
mov
jmp
lret
dec
push
in
add
push
data16
inc
loop
push
mov
sub
adc
test
mov
xchg
test
adc
and
cli
sub
fmuls
or
sbb
xlat
dec
int3
out
jecxz
sbb
dec
or
jbe
sub
imul
dec
xchg
insl
adc
popf
loopne
fistpll
jae
xchg
scas
or
mov
imul
push
in
mov
push
inc
jb
and
sub
iret
dec
lahf
in
jle
mov
lahf
and
in
into
pop
rolb
xchg
inc
out
mov
mov
clc
aaa
cmp
mull
sub
es
pop
xlat
or
or
aas
and
leave
push
xchg
rorl
in
outsl
and
mov
mov
push
ret
pusha
xor
xchg
inc
das
outsl
sti
lahf
xor
lea
shll
fstl
jmp
dec
push
sub
jns
ljmp
jp
sahf
push
leave
outsb
into
and
mov
insb
add
cmp
mov
cmp
xchg
popa
xchg
je
movsb
std
enter
loopne
and
imul
aaa
mov
mov
lock
sahf
and
jl
rcrl
enter
aad
mov
mov
sbb
adc
outsl
lcall
daa
xchg
insb
sub
loop
xchg
mov
rorl
ljmp
fldt
inc
adc
fcmovnbe
loopne
mov
or
pop
adc
mov
mov
hlt
scas
mull
and
push
shr
or
lods
addr16
cmp
mov
xchg
jbe
insb
in
xchg
leave
dec
sahf
fadds
aam
iret
xor
incl
xchg
test
sub
push
xor
mov
and
daa
outsl
jl
and
fwait
xchg
add
jmp
push
leave
fbld
mov
add
iret
pop
cs
scas
adc
sahf
add
sahf
in
repz
or
or
inc
cmp
lret
xchg
sub
in
rclb
xchg
mulb
mov
shll
shll
out
cmpsl
or
mov
call
rolb
out
xor
into
loop
mov
pop
int3
movsl
sub
movsl
es
adcb
xchg
xchg
dec
xchg
pop
test
push
cwtl
pusha
dec
xor
orb
aad
roll
stos
popa
fnsave
mov
in
inc
es
into
rorb
fisubrs
cmc
sbb
inc
ret
jne
cmpsb
sub
call
stc
into
iret
loop
sbb
lcall
lock
inc
ljmp
vmwrite
imull
into
aam
lods
xor
pop
test
mov
ficompl
mov
pop
pop
xchg
xchg
addl
push
mov
add
and
cwtl
xchg
sub
mov
test
repz
fldcw
or
push
loopne
push
popf
and
mov
jae
inc
mov
loopne
enter
fsubp
or
or
mov
inc
push
xor
lret
leave
ja
enter
pop
pop
data16
and
mov
pop
hlt
sbb
out
shlb
xor
lods
or
arpl
push
ror
or
shlb
ss
xor
dec
outsb
add
repz
inc
outsl
pusha
pop
leave
mov
std
orl
dec
pop
add
andb
xor
lret
scas
cmp
popf
cltd
lret
les
shrb
movsl
out
imul
fdivl
into
adc
add
scas
orl
add
sub
sub
push
in
bound
aam
xchg
jmp
mov
cmpsl
inc
jne
outsb
scas
aam
loopne
jg
xchg
cmp
lods
jg
fimull
push
mov
imul
mov
sbb
cmp
ret
dec
fdivrl
lret
xor
and
adcb
fstpt
jne
data16
xor
shl
stos
dec
ja
loopne
jge
cltd
pop
adc
imul
jnp
ss
pop
pop
cmp
push
sub
popf
gs
in
inc
cwtl
gs
imul
fnstcw
adc
fistps
icebp
fdivrp
sub
adc
fists
xor
or
cmpsb
dec
sub
xchg
sbb
inc
mov
out
aas
pushf
dec
test
and
adc
pusha
aad
mov
jne
push
mov
scas
cli
mov
pop
xchg
and
roll
sbb
in
lods
rorl
xchg
dec
push
or
shl
fstl
data16
adc
adcl
test
xchg
cmpsb
stos
sbb
sub
outsb
jg
add
mov
lods
adc
mov
sbb
enter
jo
inc
enter
movsb
mov
int
push
lods
pop
jl
lret
test
shlb
push
loop
lahf
je
lods
push
mov
cmpb
jle
aad
enter
push
jbe
fimull
test
fstps
fildll
push
clc
insl
daa
cltd
push
pop
loopne
pop
mov
jmp
sbb
xchg
xchg
push
nop
inc
push
clc
xchg
imul
mov
in
or
pop
xchg
mov
out
mov
pusha
sbb
out
stos
lcall
mov
sbb
fadds
int3
repnz
test
xchg
jle
push
dec
mov
xchg
cmp
mov
jle
in
push
push
push
sbb
xchg
ja
call
mul
sbb
push
ljmp
cmp
movsl
mov
aaa
sbb
lock
sub
insb
pop
sub
sub
insl
inc
repz
xchg
cmp
je
xor
inc
dec
jg
jmp
xor
pop
push
dec
add
cmp
fs
fs
stc
push
jae
mov
call
push
pop
scas
loopne
cmp
lret
cli
cmc
cmp
test
and
stc
in
imul
daa
pop
push
adc
sub
sub
das
imul
imul
das
fwait
movsb
xchg
in
je
sub
into
dec
dec
add
icebp
shlb
sub
outsl
ds
insb
sbbl
mov
xchg
fildll
or
jns
mov
push
jp
push
push
test
lock
dec
xorb
and
mov
sub
orl
sub
lds
test
fcmovb
and
cmpsl
ret
pop
cmp
jecxz
test
jcxz,pt
xchg
enter
loope
push
dec
iret
inc
loop
sbb
insb
cmp
adc
and
sahf
out
popf
scas
xor
fs
arpl
cmp
cld
xor
xor
xor
divb
rolb
push
test
out
daa
std
imul
aaa
movsb
movsb
lds
fstp
mov
mov
pop
fcomi
pop
cmpsl
and
gs
int3
dec
push
push
dec
scas
je
fisttpl
loopne
lds
or
sub
mov
repnz
inc
fstps
xorb
lea
in
dec
pusha
ret
fwait
enter
jno
jb
jp
pushf
lret
into
xor
dec
std
inc
or
or
dec
sti
dec
xchg
pop
je
repz
push
push
or
adc
shll
and
xor
call
mov
clc
arpl
lcall
test
pop
rcll
sub
packsswb
ret
scas
mov
push
popa
add
jmp
loopne
fxch
movsb
add
outsb
mov
fadd
pop
inc
inc
dec
adc
pop
xchg
push
mov
xor
inc
cmp
jecxz
test
xor
jmp
iret
mov
loop
fldt
push
cwtl
aam
lods
xchg
out
sbb
inc
jne
test
sub
push
push
hlt
jbe
mov
pop
push
jae
mov
push
ljmp
mov
jp
ss
gs
in
jnp
sahf
lahf
lcall
scas
jbe
icebp
in
das
jl
shlb
into
sub
fwait
mov
jne
cmpsl
scas
xor
test
sbb
roll
and
mov
dec
imul
aam
and
movsb
pop
push
leave
inc
jnp
in
fdivl
jno
dec
mov
and
cmp
cwtl
mov
addl
mov
add
arpl
and
jne
fcmovb
jns
mov
lods
dec
xchg
je
dec
test
stos
inc
out
mov
dec
adc
push
repz
imul
div
outsb
xchg
dec
mov
push
jmp
push
jecxz
adc
outsl
inc
mov
cli
mov
add
in
movsb
aad
sub
jg
add
dec
add
loop
add
ss
jne
test
outsl
cmp
mov
xlat
lret
sub
adc
daa
sbb
aam
adc
xor
cmp
fisubrl
aas
push
enter
out
dec
jno
outsb
addw
dec
lcall
in
sub
repz
inc
xlat
aaa
icebp
mov
xchg
idivb
xchg
lods
mov
fsubr
out
xchg
mov
mov
xchg
xchg
push
cld
cmp
rorl
mov
in
push
sbb
shll
mov
xchg
sbb
in
sub
xor
lcall
sub
jmp
std
lods
jbe
cmp
dec
push
stc
ror
or
flds
xor
mov
aaa
ret
xor
pop
pop
stos
sub
pop
and
fs
fisubs
push
sar
icebp
mov
cld
clc
xrelease
fs
dec
pop
imul
mov
std
adc
scas
lods
mov
mov
inc
pop
test
jge
xorl
pop
mov
dec
dec
push
mov
popa
shr
mov
adc
addb
xchg
sbb
adc
leave
lret
pop
dec
jmp
inc
add
sub
pop
sbb
sub
mov
lret
stos
dec
jne
xchg
inc
xor
inc
lea
hlt
hlt
mov
aaa
in
outsb
and
adc
push
mov
pop
or
push
push
fnstcw
cmp
sub
std
mov
fdivrp
lcall
mov
and
ret
clc
push
pushf
call
mov
int
cli
mov
test
cs
ds
cmc
cmpsl
arpl
xchg
rorl
jp
add
mov
dec
adc
pop
adc
mov
add
test
sub
adc
stos
lcall
sbb
cmp
cwtl
mov
fnsave
shl
dec
inc
xlat
shll
mov
jae
mov
cmp
popa
popf
cmp
jge
fidivrl
push
push
movsl
loopne
and
inc
leave
stos
das
and
mov
test
jp
pop
lea
pop
dec
adc
adc
or
pop
xchg
cs
inc
mov
jo
sub
sbb
pop
add
aaa
xor
mov
data16
inc
adc
icebp
push
adc
sti
xchg
mov
jns
outsl
stos
fsubrs
andl
or
sub
push
adc
lahf
jo
outsl
xchg
pop
fs
jge
in
lcall
test
push
cmc
test
push
insb
and
es
rcl
dec
cltd
xchg
es
lods
sub
or
stos
mov
popf
insb
jns
add
lock
push
xor
aaa
test
stos
aam
cmp
lret
sub
ret
aad
stc
dec
loop
mov
lcall
dec
lods
sbb
add
bound
and
mov
out
jo
repz
loope
pushf
pop
shll
push
bound
into
dec
xor
or
mov
lcall
shlb
or
cmp
xchg
insl
dec
stos
or
pop
xchg
rcl
or
dec
repz
mov
inc
add
mov
call
sarb
mov
mov
mov
int3
ret
or
mov
shll
jle
addr16
stos
jmp
loope
es
mov
stos
push
addr16
xor
addr16
sub
mov
out
xchg
aam
adc
and
int3
pop
fsub
int
pop
push
mov
frstor
pop
int
hlt
call
cmp
sbb
fisttpl
lahf
call
add
je
adc
iret
mov
in
mov
mov
sub
test
pop
push
outsl
fwait
push
ret
sub
xor
iret
or
in
and
adc
adcb
push
pushf
lock
lock
inc
jae
xor
mov
push
insl
inc
arpl
es
xor
xchg
push
and
lea
sbb
into
fdivrl
imul
xchg
stos
pop
test
jo
xchg
popf
imul
movsl
enter
dec
lock
push
add
xchg
lahf
xchg
mov
dec
mov
cmp
xchg
jno
sti
insl
test
mov
mov
test
dec
cli
or
push
xchg
sbb
jecxz
shl
mov
insl
in
xor
inc
mov
loopne
add
sbb
shll
inc
aaa
lock
cmpsb
xor
mov
mov
xchg
push
mov
add
leave
xchg
pop
sbb
shrb
sbb
loopne
lcall
mov
push
mov
fcomi
cmovne
iret
sahf
xor
int
mov
cwtl
mov
aaa
ss
notb
mov
push
xchg
fildll
push
aaa
test
mov
pop
push
push
jecxz
pop
std
cmp
pop
fdivs
jecxz
in
fsts
push
xor
xlat
xchg
faddl
inc
lods
movsl
leave
jge
aam
popf
push
dec
insl
mov
ja
pop
mov
sub
inc
add
popa
aad
xor
mov
cli
insb
iret
leave
mov
cmp
lock
fs
mov
cld
outsb
xor
push
scas
sbb
cmpsl
lods
in
pop
fbstp
push
sbb
pop
pop
popa
mov
pop
sbb
decb
push
scas
dec
xor
sub
push
jnp
jae
jo
hlt
cmp
in
mov
or
jmp
lods
aam
mov
enter
dec
jge
fisttps
aaa
xchg
cmpsb
imul
dec
ret
sbb
popa
and
js
pop
movsl
fmuls
sbb
jno
fisttpll
adc
lret
add
lea
xchg
mov
decb
add
or
mov
out
arpl
or
push
jge
xchg
add
fnstcw
sbb
push
sbb
in
das
shr
sub
imul
js
push
cmpb
xchg
jp
movsl
push
sti
das
adcl
mov
bound
test
insb
mov
xor
bound
subb
xchg
mov
adc
adc
das
out
inc
xor
sbb
sbb
sub
push
lods
pusha
sub
cmp
nop
mov
cmpb
ds
mov
push
sarb
cmp
es
adc
push
sub
and
hlt
outsl
test
sub
lcall
inc
push
xor
loop
mov
xchg
ja
or
dec
mov
xchg
fstp
jg
mov
jbe
sar
sub
pushf
mov
orl
imul
and
dec
add
in
jg
stos
mov
mov
add
icebp
sahf
insb
push
adc
lock
mov
xchg
aam
in
fnsave
pop
add
js
in
add
inc
scas
rorl
pop
rcll
and
rcrl
dec
mov
sbb
outsb
push
xchg
fs
pop
mov
daa
loope
cwtl
dec
rcll
hlt
push
mov
cmpsl
fwait
icebp
push
ss
mov
and
inc
sbb
lods
and
daa
dec
rcrl
mov
dec
or
scas
inc
add
stc
cld
rcrb
add
iret
fnsetpm(287
mov
ljmp
iret
ss
clc
sbb
inc
iret
enter
dec
pop
or
cmpsl
and
dec
dec
jg
cltd
shlb
lds
sahf
mov
inc
ljmp
aaa
jne
stos
mov
stc
xchg
sbb
arpl
sbb
test
lock
fisttpll
out
rclb
mulb
mov
inc
and
ja
popa
add
nop
xorb
adc
pop
adc
aam
and
leave
mov
out
test
push
lods
jg
push
jnp
lods
push
pop
push
mov
dec
mov
mov
xor
push
repnz
aam
xor
mov
mov
loope
shr
ret
test
pop
out
mov
enter
insl
out
sarl
cmp
popa
xchg
push
sbb
cwtl
cli
mov
pop
dec
cmpsb
lcall
fs
mov
addr16
test
lods
add
dec
imul
int
hlt
pop
icebp
mov
and
mov
and
addl
scas
mov
and
test
popa
rolb
pop
es
enter
jecxz
jge
mov
xor
jae,pt
jmp
jno
or
push
lcall
add
or
cmp
mov
inc
cmp
data16
xor
or
aas
call
xor
add
ja
gs
popf
fmul
dec
fxch
jae
jg
cld
sarl
sbb
lret
sti
mov
shll
in
into
or
or
adc
mov
loop
mov
cmp
mov
push
adc
shl
mov
pop
outsb
aad
testb
out
push
je
shl
jbe
or
jge
mov
fisttpl
lahf
adc
push
push
int
ret
mov
mov
push
mov
addl
mov
mov
fsubl
sahf
movsl
or
fnstenv
outsl
incl
leave
in
pop
shrb
outsb
clc
jbe
das
jle
loopne
jns
sub
add
movsb
shlb
mov
push
lcall
xor
push
scas
mov
mov
test
dec
and
cmpsb
sbb
std
pop
lea
pop
jne
push
ror
mov
or
mov
loope
jo
jae
or
loopne
or
add
stc
gs
aas
cwtl
pushf
out
ret
lock
ja
add
cmp
fstpt
push
dec
dec
mov
add
mov
ret
mov
fisttps
dec
push
orb
adc
sub
cmp
pop
repnz
ss
cs
sub
mov
frstors
clc
les
push
fdivrl
sbb
jmp
sub
adc
adc
pcmpgtd
lock
aad
out
loope
mov
aad
xor
sbbb
pop
idivb
adc
js
xor
jle
add
stos
push
xchg
lea
enter
popa
and
arpl
mov
push
outsl
dec
adc
arpl
imul
and
out
inc
jg
imul
outsl
cmp
and
les
jmp
xchg
lods
xor
jb
adc
sub
sub
jo
dec
cltd
das
pop
fidivs
jge
pop
mov
dec
xchg
test
test
mov
sbb
add
add
cli
pusha
pop
clc
mov
mov
call
ret
imulb
call
sub
or
dec
call
mov
inc
cmp
mov
jp
dec
push
and
add
mov
add
pushf
ret
das
movsb
cmp
cmpsl
es
iret
loop
sub
cmp
cmp
mov
cs
dec
cmp
cmpsl
xor
sub
xorl
inc
in
addr16
aad
and
daa
xchg
cmp
fwait
cmc
je
outsl
stos
testb
push
das
out
and
repz
or
or
idiv
push
enter
scas
mov
mov
push
pop
push
mov
jne
xor
push
add
or
test
jmp
scas
das
dec
pop
fstps
mov
pop
fstl
movsb
cmpsb
inc
popa
popa
mov
xchg
inc
sub
xcrypt-ofb
cmpsl
stos
rorb
ret
cmpsl
cmpsl
or
or
scas
ja
js
stc
lret
sub
xchg
jo
ja
leave
test
mov
push
psllq
test
or
test
push
call
or
sub
jno
mov
out
ret
shrl
mov
pop
mov
lock
sbb
call
xor
ret
jne
and
sbb
mov
loopne
roll
clc
cs
ret
pop
data16
pop
xor
sub
jg
movsl
add
xchg
pop
shrb
dec
and
xor
lods
gs
pop
mov
inc
shll
lahf
xor
adc
pop
imul
push
lds
ficomps
stc
mov
push
fbstp
pushf
sbb
sub
addr16
mov
rcl
jns
loop
pusha
xchg
jl
push
jno
jb
jmp
out
or
call
pop
fstpl
cli
pop
das
sub
mov
and
jb
sbb
in
movsb
fisttpll
push
lret
outsl
mul
jle
in
jecxz
mov
inc
push
test
movb
adc
dec
or
jb
jecxz
xchg
cmpsb
adc
mov
shlb
mov
ret
hlt
fstpl
fdivrp
arpl
sub
lret
push
pushf
or
out
rcr
xchg
cmpl
rcl
xchg
jns
mov
jbe
add
push
xchg
inc
fstpl
sbb
push
fdivl
sub
xchg
add
bound
aas
dec
gs
push
aaa
adc
mov
bound
cmpb
pop
mov
mov
jle
mov
mov
js
pusha
xchg
xchg
jl
int
rorl
inc
fisttpll
and
push
push
enter
adc
mov
fmuls
dec
aad
sarl
dec
ret
sbb
inc
mov
inc
inc
fdivs
adc
xor
aas
mov
pop
arpl
pop
and
fistl
mov
or
mov
mov
hlt
mov
xor
or
mov
mov
sub
pop
mov
add
or
xor
jge
add
ja
mov
sub
rorb
dec
mov
es
fimull
ds
cmp
pop
hlt
jecxz
aas
jge
mov
test
mov
jnp
scas
mov
stos
bound
int
mov
nop
mov
push
add
and
cld
push
mov
pop
shlb
cli
cmp
pop
pop
imul
xchg
add
sub
test
push
pop
sbb
and
cmp
add
test
mov
inc
clc
lea
cmp
push
loopne
adc
xor
mov
stos
pop
pop
jg
ds
inc
push
aas
ds
sbb
cli
adc
call
ds
xchg
dec
mov
jae
jl
ds
pop
test
fisubs
or
push
sub
add
fimull
icebp
lods
mov
and
mov
push
or
push
test
mov
mov
nop
sti
leave
ret
xchg
aam
out
into
and
mov
jge
sub
out
icebp
inc
lea
lds
sbbl
popf
repz
arpl
push
mov
rcrb
inc
jle
jo
ret
cltd
sub
je
mov
cmp
lret
shll
xchg
mov
mov
andl
sbb
sub
fdivrs
and
add
lods
sahf
jb
aaa
loop
shrb
aas
cltd
mov
mov
stos
push
lds
pop
jnp
pop
pop
dec
or
and
int3
mov
enter
mov
cmpsb
daa
cwtl
pushf
sbb
aaa
mov
push
loope
xchg
lcall
ret
rcl
mov
sub
cmpl
sbb
lock
xchg
nop
adc
movsl
rorb
add
lcall
rorl
in
ret
jmp
punpckhdq
es
dec
xchg
cwtl
inc
xor
mov
pop
arpl
xorl
sub
out
push
dec
fs
lds
or
mov
out
stos
inc
sub
xor
sbb
cmp
stc
jmp
xchg
mov
mov
popa
sbbl
adc
or
fidivl
lret
sti
ss
and
xchg
adc
test
dec
imul
stc
rol
xor
sub
mov
iret
cli
loop
push
pop
adc
in
jg
sbb
jbe
pushf
test
fisubs
cmp
and
sbb
aas
adc
sub
adc
mull
jno
fisubrs
sub
cmp
dec
jb
or
nop
loope
mov
xor
aam
sub
inc
xor
les
sub
in
jmp
push
mov
sbb
test
cli
iret
jl
inc
les
outsl
out
insl
ret
xor
dec
mov
mov
add
idivw
sti
sarb
pop
push
jmp
sbb
cmp
inc
rorl
test
mov
sbb
xchg
inc
insb
push
fistpl
scas
mov
imul
jle
mov
lods
xor
inc
cs
jmp
leave
cmp
or
or
adc
xchg
dec
sub
and
repz
sub
bound
jge
cmp
rorl
cs
mov
mov
dec
pop
test
das
repz
mov
mov
lods
push
call
mov
iret
dec
xor
fwait
pop
or
in
pusha
inc
lods
or
pusha
loope
mov
sub
xor
pop
add
cs
or
cmpsb
or
ret
rcl
jns
test
mov
pop
mov
imul
jl
jns
xor
icebp
push
mov
lods
stc
sar
aam
push
and
test
mov
adc
test
pop
push
lock
cmc
sub
psrld
leave
and
adc
add
enter
mov
fimuls
ret
and
leave
mull
lods
push
sub
mov
dec
movsb
add
cli
test
pop
shlb
jae
xchg
iret
xlat
stc
mov
mov
or
pop
dec
jmp
mov
aas
cmpsb
in
xor
pop
dec
out
pop
pop
icebp
or
sub
pop
loope
mov
scas
loopne
push
or
add
pop
popa
adc
pop
hlt
add
stc
mov
adc
push
insl
scas
xor
test
xchg
test
inc
pop
push
lods
cmp
xor
or
icebp
fidivrs
add
cmp
pop
repz
fldl
jae
lds
fimull
jno
ds
and
lock
pop
cmpsb
cmp
dec
or
arpl
mov
addb
jecxz
outsl
xchg
mov
shrb
pop
je
pop
adc
mov
rorl
xor
test
jg
adc
jnp
fcom
mulb
mov
jb
dec
fmull
lea
inc
fiadds
popa
inc
or
cli
cmp
push
lret
add
mov
cmp
jp
lahf
imull
pop
and
dec
sbb
cmp
ljmp
mov
negl
ror
push
jl
fcmovu
push
mov
sti
sub
scas
stos
inc
xchg
sub
faddl
push
xchg
fs
xchg
and
cmpsl
roll
push
lock
xor
stos
jno
inc
xor
add
fucomp
ret
jnp
lahf
bswap
in
lock
mov
dec
pop
mov
test
fidivs
jno
jge
pop
fcompl
push
pop
pop
mov
jae
enter
shll
icebp
or
lret
mov
mov
incl
mov
push
icebp
inc
addr16
pop
scas
int
test
jp
dec
das
inc
cld
sbb
js
xchg
xor
push
xorl
sub
daa
js
cmp
dec
test
test
xchg
inc
rclb
push
into
sbb
mul
pop
push
cltd
xchg
std
clc
outsl
rcr
add
movl
mov
lock
sbb
in
aas
mov
pop
add
cli
in
cltd
sub
rolb
dec
cmp
pop
fcmovne
mov
mov
mov
loopne
or
dec
jo
jp,pt
rep
push
aas
jns
addr16
aam
stos
loop
xchg
xchg
cmc
sub
ret
xchg
xor
sub
pop
mov
loope
ret
xlat
jne
or
dec
leave
xorb
or
xor
clc
ret
mov
imul
movsl
and
lods
lods
mov
lods
mov
pop
xor
inc
push
inc
popa
cmp
negl
mov
mov
jle
push
inc
sbb
insb
hlt
or
cwtl
rcrl
cmc
xor
test
mov
inc
pusha
add
pop
insl
push
ret
fdiv
popf
or
adc
or
sub
mov
ss
dec
adc
hlt
jne
cmp
adc
stc
and
mov
mov
mov
int
xor
cmpsb
out
pop
sbb
pop
std
push
iret
pop
push
adc
in
xlat
dec
sbb
inc
mov
add
or
aaa
cmp
dec
cmp
into
fstpl
xor
repnz
lods
add
nop
pushf
inc
test
mov
vcmpsd
out
adc
pop
dec
mov
mov
mov
out
or
pop
andb
jno
out
inc
iret
ret
fildll
movsb
xchg
dec
out
iret
mov
and
sbb
in
aaa
mov
ljmp
loopne
and
xor
les
mov
in
mov
dec
inc
jg
xchg
push
and
fistl
sbb
push
pop
fimull
xor
pop
into
push
dec
add
rcr
mov
loopne
stos
push
addr16
bound
incl
jb
push
xchg
pop
dec
sbbb
fsubl
bound
dec
pusha
jne
scas
sub
pop
mov
adc
jmp
or
jmp
loopne
lret
pop
sbb
pop
pop
rol
into
fcmovnu
imul
or
stos
jp
insb
pushf
pop
dec
mov
xchg
add
adc
push
dec
out
jg
lret
loop
fmuls
mov
movsl
sarb
mov
aam
push
aam
enter
xor
or
push
dec
outsb
and
xor
repz
pop
sbb
test
add
push
jb
adc
sarb
mov
sub
push
test
mov
fbstp
pop
dec
dec
and
cltd
ror
jle
inc
cltd
mov
dec
mov
lret
cmpsl
stc
inc
bound
outsb
sbb
xor
xchg
rcr
sub
cli
mov
jns
mov
leave
xchg
les
jp
jge
ss
nop
ret
lods
icebp
je
test
ret
or
inc
in
xchg
popl
sbb
dec
lock
jno
rclb
inc
dec
mov
push
jmp
xor
imul
gs
sti
aad
jle
fnsave
push
divb
pop
inc
movsl
loop
sbb
lds
or
and
mov
push
icebp
xchg
sahf
cmp
jbe
ljmp
push
push
push
icebp
sub
scas
in
sbb
and
xchg
in
dec
push
mov
outsl
stc
movsb
inc
testl
and
push
cmp
dec
lcall
adc
push
or
pop
stos
and
mov
inc
iret
and
dec
punpckldq
nop
and
test
cmp
jge
lret
arpl
pop
lret
fdivrs
das
sub
ret
sbb
xchg
jo
dec
mov
add
fnsave
outsb
mov
xchg
xchg
cld
lret
xor
and
lahf
push
loopne
sbb
jle
fsubs
or
mov
pop
cmp
xlat
nop
dec
shl
mov
mov
shrb
test
pusha
cs
sbb
push
jbe
iret
fisttpll
das
lock
push
cmp
popa
add
mov
movsl
fwait
push
inc
or
lock
adc
popa
push
fs
jns
cmc
xor
inc
pop
lock
and
fnstcw
push
shr
adc
fs
std
jo
loopne
pushf
addb
xorps
push
mov
mov
sqrtps
insl
popa
aad
and
icebp
in
loope
push
fimuls
xor
pop
loope
pusha
jl
call
je
arpl
xchg
pop
mov
pop
push
sbb
divb
mov
xchg
inc
dec
hlt
fs
cmp
mov
fcomip
popw
fmull
dec
dec
xchg
mov
or
shrb
pop
add
cmp
cmpsl
dec
sbb
cld
ss
and
lcall
jecxz
and
xchg
sbb
jnp
add
adc
jns
dec
mov
cs
dec
aad
sbb
cmp
dec
cmp
out
or
iret
hlt
bound
mov
out
fadds
and
mov
inc
mov
inc
jns
push
pop
data16
test
js
je
repnz
sbb
je
lods
add
rcrb
jl
scas
and
jae
mov
loopne
daa
out
xchg
fidivs
sbb
inc
jmp
fwait
popf
in
jecxz
cmp
cmc
popf
scas
cs
stos
imul
ljmp
cltd
xchg
xor
pop
out
mov
imull
ret
leave
loop,pt
sub
jae
dec
sub
outsl
stos
pusha
pushf
cvtps2pd
and
cmc
outsl
scas
mov
sbbl
xor
in
je
mov
clc
mov
sarb
and
mov
lock
sub
inc
adc
cmp
dec
pop
push
lock
rol
sub
xor
shll
mov
xchg
fsubr
es
sub
ror
push
mov
mov
jno
sbb
sub
dec
cwtl
add
div
jp
xchg
out
adc
mov
lret
or
mov
mov
mov
push
sub
hlt
cmc
jl
mov
stos
mov
push
flds
fidivrs
es
out
add
in
cli
mov
mov
mov
lret
mov
xchg
je
fsubs
lock
push
test
clc
xor
mov
sub
aaa
sbb
push
lds
push
add
inc
js
sub
mov
sbb
out
inc
mov
inc
cmp
and
sub
int
sub
ljmp
bound
test
imul
and
imul
xor
lods
jge
pop
add
out
rep
rclb
shll
adc
mov
fstpl
in
push
mov
pop
inc
cmp
inc
or
sbb
xchg
adc
xchg
loope
pushf
and
fs
pop
pop
jmp
dec
loopne
and
adc
push
mov
out
pop
and
pop
xchg
lret
inc
mov
or
rorl
xchg
xchg
bound
cmpsl
hlt
push
push
jns
test
and
push
frstor
gs
loopne
pop
es
sti
push
test
jg
sbb
inc
mov
mov
sub
sbb
jge
jno
lcall
inc
jae
cmp
imul
xchg
cmp
add
jae
add
xor
aad
movl
repnz
cwtl
movb
mov
movsl
repnz
hlt
pop
aad
lahf
and
jae
sbb
jbe
mov
repnz
or
adc
cmp
push
pop
fsubp
mov
hlt
or
jbe
addr16
out
cmpsb
jmp
cmpsl
repz
lods
fwait
inc
cmp
mov
xchg
sbb
movsb
mov
ss
jecxz
jmp
jbe
pusha
inc
mov
imul
fnstenv
movups
xor
and
into
mov
jl
mov
xor
rcrl
leave
fs
in
aad
jge
cmp
mov
pop
cwtl
es
scas
sub
cmp
push
imul
scas
shrl
xchg
sub
icebp
vpunpcklqdq
dec
icebp
aam
dec
insb
enter
fdivrl
fnsave
out
mov
fcomip
out
mov
movsl
loope
adc
push
pop
outsb
dec
add
stos
pop
scas
add
push
xor
sub
mov
jae
hlt
push
in
cs
stc
mov
add
fiadds
sbb
pop
aas
sbb
push
push
xor
loopne
fcomip
movsb
addr16
pop
cmp
into
out
xchg
push
jp
sub
push
addb
jg
xchg
sbb
mov
mov
pop
dec
pop
xchg
rol
les
sub
mov
add
loope
inc
mov
lret
movsb
inc
add
adc
in
fistps
cmp
mov
push
call
cmp
test
mov
jecxz
xchg
fldenv
iret
push
ror
lahf
shrb
jmp
cwtl
jmp
gs
es
addr16
lret
mov
into
je
or
pop
jns
xor
mov
sbb
push
std
adc
shrl
stos
jo
push
adc
enter
scas
jns
cmpsl
inc
mov
adc
pop
xchg
scas
into
pop
adc
jnp
jp
inc
lea
out
fldenv
lods
sub
mov
cmp
dec
mov
negl
dec
mov
sub
imul
mov
cmp
movsl
or
inc
lods
add
cltd
aas
adc
fildll
xor
jp
add
cmpsb
movsb
ret
ud2
xchg
mov
xor
rcl
inc
pop
xor
rcrl
vandnps
xchg
sbb
call
mov
cmp
jnp
mov
or
dec
sub
cs
je
add
aam
xor
mov
aas
js
pop
loope
mov
cmp
in
insl
jb
jo
outsl
andb
loopne
cmp
movsl
int
loope
mov
sahf
cmp
mov
cmp
cmp
mov
xor
mov
jg
addb
mov
jns
loope
xor
push
push
movb
push
sub
inc
fcmovnu
stc
gs
es
jmp
pop
mul
sub
movsl
mov
sub
push
mov
and
pop
xchg
data16
lahf
aad
into
scas
cmc
pop
mov
ja
pop
pop
xchg
lahf
pushf
out
movsb
or
inc
call
stos
push
negb
orb
push
rcr
das
dec
test
ds
adc
dec
push
add
mov
xchg
mov
inc
push
inc
xchg
cld
pop
ret
push
bound
rcr
mov
jge
jmp
imul
decb
push
adc
lcall
adc
mov
and
into
rcll
addr16
ljmp
and
test
lret
xor
fstpl
mov
xchg
fdivr
ret
out
inc
pop
cmp
ds
mov
push
out
sbb
lea
xchg
ljmp
pushl
sub
js
add
mov
sahf
mov
lcall
psrld
lock
jle
adc
movsb
inc
cmp
fisubrs
iret
jg
mov
pop
push
outsl
mov
test
sti
popf
or
insl
ljmp
mov
mov
lea
mov
cltd
ret
and
mov
js
push
mov
loop
jp
xor
inc
jb
outsl
jge
mov
cmp
adc
push
mov
mov
dec
repz
arpl
inc
mov
mov
and
lcall
in
incl
pop
mov
fisubl
pushf
fsubs
lock
fcoms
xchg
stos
popf
xchg
js
inc
xorl
sbb
push
xchg
xchg
pop
jne
pusha
jnp
adc
sub
push
loop
out
cmp
inc
test
pop
and
bound
adc
pop
mov
xor
sub
out
test
xor
incl
hlt
mov
cmpsl
test
xchg
inc
mov
popf
aaa
stos
dec
pop
call
xchg
sub
fistpl
pusha
mov
repnz
xor
jecxz
push
push
in
inc
cmp
dec
out
xor
mov
jp
mov
rorb
push
inc
out
adc
add
nop
mov
fldl
movsl
clc
cmp
mov
movsb
out
mov
inc
push
icebp
or
mov
int
mov
mov
cmpsb
ret
add
mov
cmpsb
idiv
xor
adc
and
and
stos
mov
out
in
cmc
out
add
not
in
fiadds
add
stos
das
mov
shll
inc
cmp
pop
or
outsl
jae
int3
sarb
aaa
cmc
mov
mov
mov
mov
xchg
jl
cmpsl
xchg
push
std
sub
adc
dec
pop
push
cmpsb
inc
data16
fcoml
push
fstpl
in
inc
imul
call
scas
add
rcll
cmpsb
movsb
xorl
jbe
into
insb
push
shl
and
jno
fdivs
je
mov
mov
fwait
lds
bound
lods
hlt
xor
arpl
lcall
sbb
es
add
loop
pop
sbb
jmp
sbb
mov
aaa
rcrl
mov
push
fdivs
stos
test
mov
aam
cmp
movsb
in
add
insl
sbb
jne
sbb
adc
fsubrs
repnz
or
cmp
ret
fsubs
shrb
aam
adc
test
jmp
push
mov
xchg
aaa
and
stc
jnp
lret
rcll
bound
xor
rcl
cmp
xchg
cmovne
push
add
adc
pop
lds
inc
or
rolb
addl
shlb
xchg
in
enter
push
push
or
xor
dec
inc
lock
dec
xchg
int3
cmpsl
or
sub
push
push
or
push
fwait
into
bound
bound
dec
push
das
pop
mov
mov
xchg
mov
mov
icebp
pop
icebp
aad
mov
inc
out
loop
cld
sub
mov
sub
bound
push
sarb
jle
in
nopl
shl
hlt
jge
mov
jns
push
call
dec
les
pop
les
cwtl
fwait
jg
sub
xor
mov
out
cmp
fimuls
jo
dec
xor
or
sahf
repnz
jge
popa
std
sti
sti
cmpsl
imul
xchg
push
push
ja
cld
pop
xor
or
fistpl
push
sub
fcmovne
insl
insb
xchg
jns
loop
cmp
ret
arpl
mov
cld
test
cs
jo
pop
test
push
lahf
mov
xchg
sbb
repz
sti
cmpsl
xchg
mov
ds
push
adc
mov
arpl
inc
leave
test
in
addl
pop
jecxz
arpl
mov
push
or
inc
or
ljmp
imul
xor
mov
pop
sub
pop
divb
sbb
dec
sti
or
mov
mov
cmp
sub
mov
adc
xchg
sbb
movsl
cli
idiv
or
cmp
push
lret
jl
ja
adc
aaa
test
pop
lods
mov
repz
push
mov
xor
lds
aas
imul
sbb
test
xchg
dec
inc
push
mov
push
jge
ljmp
movsb
sahf
push
icebp
push
and
add
inc
dec
jnp
xor
xchg
xor
mov
inc
cmpsl
in
insl
bound
insl
push
insl
mul
push
and
xchg
sub
dec
mov
inc
jmp
pop
pop
jne
nop
ds
cmp
sub
notl
and
inc
addb
lods
fs
ret
cltd
js
jmp
cmc
movsl
es
shlb
movsb
lret
std
xor
or
ret
lods
in
pusha
pushf
iret
cmp
inc
loop
ja
xor
add
lds
pop
mov
loop
pop
cmp
lods
leave
inc
inc
push
fcompl
lds
sbb
cld
stos
inc
and
inc
sub
enter
call
inc
aad
ljmp
xchg
and
mov
cmp
stos
add
mov
push
popf
sarb
out
mov
lods
or
pop
orl
fmul
fwait
sbb
sbb
mov
mov
mov
mov
sbb
add
add
pmulhuw
stc
stos
adc
sbb
and
sbb
ss
enter
movsl
jb
inc
mov
cmp
pop
int
lods
mov
push
cmc
adc
cmpb
adc
adcl
cli
cs
pop
cmpsl
fmull
out
sub
jb
aas
xchg
mov
xorl
cmpsl
fdiv
and
inc
mov
sbb
sub
adc
adc
cmpsb
test
mov
aam
cmc
ja
mov
push
xor
mov
push
jg
insb
pop
and
shrb
insb
sub
cwtl
dec
movsb
jbe
testl
in
outsb
fnstenv
push
cmp
mov
sub
push
scas
pushf
adcb
movsl
rolb
fs
in
sub
or
test
mov
popl
jnp
sbb
jne
pop
inc
into
mov
aam
sarb
mov
fcmovb
add
pop
mov
out
mov
in
pop
scas
and
cmp
cli
push
clc
in
push
ret
and
scas
pop
out
insl
ss
dec
nop/reserved
js
outsl
jle
or
jg
aam
out
outsl
stc
inc
bnd
cli
mov
inc
and
jb
push
loope
cwtl
xchg
out
lea
add
test
inc
and
sarb
imul
push
cmpsb
cli
push
jle
xchg
cmp
or
scas
aam
push
pop
lds
push
add
xchg
sub
call
mov
pop
fidivl
dec
push
adc
sti
stc
dec
popf
jecxz
arpl
es
dec
pop
inc
cmp
pusha
sbb
pop
outsl
stos
call
sub
xchg
cmp
sarl
aaa
loop
imul
outsb
xor
mov
sahf
push
out
add
lock
mov
cmpsb
out
jmp
sub
repnz
xchg
xchg
push
dec
out
or
adc
lret
sub
popf
push
cmp
jns
dec
mov
mov
or
push
test
dec
cmp
mov
scas
pop
cmp
adc
sub
jbe
stos
shlb
cmpsb
adc
fidivrl
mov
decb
sub
inc
fwait
scas
push
enter
mov
inc
push
mov
mov
mov
cmp
mov
push
test
xor
sub
or
sar
pop
xchg
call
cmp
push
mov
push
std
lods
mov
insb
and
jnp
aam
mov
mov
cld
push
test
dec
jno
dec
imul
mov
decl
ja
scas
sahf
mov
ret
inc
scas
or
andl
dec
or
mov
mov
stc
lds
ret
pushf
lock
add
inc
mov
mov
out
clc
int3
lret
jbe
add
aam
mov
sbb
sarb
mov
adc
inc
nop
sub
xor
scas
imul
inc
mov
push
push
test
sbb
aaa
xchg
mov
mov
add
mov
mov
dec
out
lds
jge
inc
pop
inc
andb
lods
add
sub
mov
mov
outsb
test
stos
fsubs
outsl
ret
outsb
das
push
dec
sbb
xchg
insl
sub
or
adc
mov
sub
inc
push
inc
adc
sbb
mov
and
scas
sbb
push
aaa
fdivrs
add
movsb
sar
xlat
mov
push
sub
repnz
cmpsb
pop
lods
mov
add
sbb
mov
xchg
loop
daa
shrb
jle
inc
es
add
test
cmp
mov
in
inc
popf
fmuls
sbb
pushf
test
xchg
jo
adc
inc
fistpl
cs
sub
arpl
std
enter
xor
bnd
mov
xchg
sahf
inc
shlb
pusha
dec
cmp
mov
xchg
rorl
sbb
add
push
sbb
out
ss
loope
jb
ss
insb
mov
jmp
call
cmp
pop
cmp
cmp
ljmp
in
mov
cwtl
mov
out
addb
mov
aas
push
push
and
fmulp
fldt
fprem1
pusha
imul
jns
mov
sub
int
lock
xor
enter
cld
aaa
mov
sub
out
scas
xchg
out
adc
inc
pop
or
in
sarl
xchg
add
rcll
adc
and
std
call
or
fs
adc
sbbb
adc
test
sub
mov
and
jbe
and
fs
add
aad
sub
pop
jle
sbb
add
ret
mov
hlt
jns
fwait
adc
mov
mov
push
shlb
push
pushf
mov
dec
dec
in
or
xlat
and
lcall
mov
hlt
jb
popa
cmp
inc
inc
jge
cmp
scas
pop
shrl
xchg
movsl
sub
pop
inc
and
fcomps
in
mov
lods
fsubs
int
lahf
xchg
icebp
mov
loope
inc
enter
stos
aad
xchg
pop
icebp
adc
pusha
lods
neg
psrld
mov
jno
in
out
insb
inc
push
mov
or
call
xchg
lcall
jp
ss
hlt
jae
leave
inc
andl
test
xchg
or
into
test
mov
jno
jmp
mov
push
mov
inc
pop
outsb
push
add
fistpll
add
push
mov
jmp
test
lods
jg
pop
mov
push
subb
dec
jle
ror
xchg
inc
jo
jno
xor
jo
int3
add
das
ffreep
outsb
fisubs
add
addr16
fldl
ret
adc
add
fdivl
lcall
std
push
fadd
inc
mov
xor
adc
inc
push
push
pop
int
push
mov
data16
popa
mov
sarl
jne,pt
mov
xor
out
sbb
dec
push
xchg
mov
push
jo
pop
sbb
add
mov
popa
sbbb
movsb
int
xor
pusha
push
dec
inc
push
scas
scas
jmp
scas
mov
rcrb
xchg
lods
xorl
orl
roll
daa
xchg
and
jp
mov
push
in
sub
aam
inc
enter
and
xor
pop
imul
and
jne
jbe
xor
push
mov
loopne
movsb
sbb
stc
and
and
add
xchg
aad
push
sub
inc
lahf
adc
dec
repz
movsb
sub
hlt
pushf
fldt
and
and
lret
and
mov
test
xor
add
pop
mov
shrl
add
dec
push
pushf
dec
rol
jl
push
aaa
lahf
and
pop
ret
mov
push
mov
sub
repnz
adc
int
cmp
jo
into
mov
lcall
es
dec
xor
sbb
add
repnz
jp
mov
es
in
jmp
add
pop
out
adc
flds
out
mov
push
push
fsubrs
fiadds
add
sub
rcrb
test
cwtl
mov
jae
mov
sub
xchg
pop
add
enter
clc
mov
adcb
out
adcl
push
inc
pop
pop
adc
xor
add
add
adc
jl
mov
rorb
insb
sbb
sti
call
fisttpll
add
nop
lock
mov
adc
in
push
and
aad
iret
popa
pop
jl
loopne
bound
cmp
push
movsl
movsl
int
lods
repnz
arpl
sahf
rcrl
pop
dec
jle
insl
jb
scas
outsb
cld
in
iret
inc
outsb
xor
fcoms
ret
aaa
cmp
mov
scas
int
cmp
xlat
inc
adc
icebp
dec
cwtl
adc
mov
dec
sub
enter
mov
xchg
or
or
sub
fists
mov
dec
ficoml
lcall
adc
add
rcrl
ljmp
add
cmp
dec
jp
adc
daa
enter
mov
test
add
mov
imul
imul
or
push
and
jnp
push
cmp
aam
jnp
repz
push
xchg
pop
sub
jno
mov
shlb
push
mov
mov
outsl
mov
mov
insl
mov
mov
inc
inc
mov
jle
fidivl
shlb
hlt
jae
stos
xchg
loopne
mov
mov
adc
clc
mov
push
and
icebp
add
mov
fwait
mov
jne
pushf
mov
insb
int3
or
mov
xor
addb
daa
xor
cmp
inc
pop
add
fistpl
add
in
cmp
push
cmp
sub
sub
push
push
xchg
pop
mov
arpl
out
xchg
dec
mov
repz
rcrb
ljmp
or
xor
sti
sub
lret
push
stos
out
ret
pushf
or
sub
inc
std
dec
out
ss
adc
push
pushf
mov
xor
fwait
loope
ja
faddp
push
jl
mov
inc
jbe
mov
push
xchg
repz
pop
xor
pop
and
cwtl
add
inc
inc
int
sub
sub
sbb
push
stc
xor
mov
push
xchg
and
movsb
lock
sub
stos
push
ja
push
cmp
pop
fbstp
ret
sarb
jno
jecxz
or
cmp
and
lea
sub
and
jno
inc
push
orb
aam
xchg
shr
xor
sub
push
in
lods
das
sbb
out
push
fcmove
push
add
jno
cmp
jne
mov
lock
sub
or
add
shlb
inc
hlt
leave
cmp
xor
sbb
arpl
cltd
xor
fcompl
dec
jmp
fadd
push
or
mov
pop
sbb
dec
gs
loop
shrb
push
adc
push
in
xchg
rcll
ja
insl
pop
add
std
loope
or
xchg
and
les
xlat
xchg
test
les
dec
in
idivl
insl
dec
sub
fidivrl
sahf
pop
lock
and
pop
mov
pop
sub
scas
bound
pushf
je
les
lret
fucomp
aad
loop
in
sub
dec
dec
and
dec
mov
inc
xchg
sub
dec
subb
mov
xchg
add
add
faddl
js
jecxz
ss
test
gs
jnp
mov
or
faddl
and
movsb
mov
dec
pop
or
push
xor
sbb
jno
add
shrb
mov
push
and
fnstcw
aaa
pop
sub
pushf
jae
int3
xchg
out
lea
test
stos
inc
xchg
pop
ficoml
fnstsw
mov
push
lcall
dec
add
push
lods
mov
mov
dec
pop
lret
push
dec
stos
lcall
mov
mov
arpl
pop
scas
mov
fwait
imul
cmp
sbbl
ficomps
fld
inc
xchg
or
pop
inc
add
inc
cwtl
shr
adc
jge
push
aad
push
jle
imull
mov
gs
daa
pushf
cmp
xor
popa
cltd
roll
xor
data16
pop
cli
or
sbb
rol
sti
repz
test
cs
sub
test
rolb
or
fbld
pop
mov
inc
and
addb
fmuls
pushf
cmc
mov
les
fidivl
mov
es
out
xchg
dec
loope
dec
cmp
cmpsl
xchg
pop
add
mov
xorb
cmp
jb
cmpsb
mov
gs
popl
loop
cwtl
pop
xor
scas
stc
cmp
test
cmpsl
xor
popf
ficompl
ja
movsb
add
adc
xor
jp
push
movsb
pop
mov
in
add
pusha
push
dec
pop
imul
vcvtsi2sd
push
xlat
call
lret
or
dec
dec
mull
push
push
push
mov
fisubrs
arpl
orb
adc
out
cmp
mov
int
cltd
adc
test
sbbl
stc
push
pop
jae
push
data16
sahf
loop
mov
sub
mov
je
adc
push
stc
inc
sbbb
ljmp
mov
sbbl
in
and
mov
push
cmpsb
enter
inc
bound
mov
pop
movsb
xlat
rclb
push
aam
sub
ret
test
or
mov
and
loopne
mov
aam
dec
outsb
dec
test
lock
push
iret
js
xchg
out
add
fcomp
push
es
fadds
mov
stos
in
xlat
xor
lahf
inc
jb
add
cmp
call
dec
push
js
sub
jae
clc
addr16
aam
out
xchg
add
int3
or
iret
sbb
jo
imul
xlat
add
ljmp
jns
cmp
cmp
jmp
sub
sbb
les
cmc
add
hlt
push
dec
jno
pop
insb
mov
adc
jl
lock
testb
int
or
out
in
scas
push
xchg
adc
dec
fucom
add
adc
inc
adc
cmp
dec
adcl
dec
pop
lret
mov
jmp
out
popf
sbb
stc
dec
sbb
pop
mov
adc
rclb
aas
das
movsb
sbb
dec
fdivrs
jno
mov
and
lds
mov
sbb
xchg
jl
sahf
je
xchg
xor
ret
inc
jmp
push
mov
add
adc
ljmp
mov
dec
mov
or
rclb
adc
or
or
mov
out
test
xor
test
das
aad
pop
outsb
sub
mov
sub
ds
lds
add
push
mov
inc
rolb
inc
es
inc
push
jns
xchg
cmp
fildll
cs
xchg
subb
dec
lret
ret
mov
lods
fstpt
jg
adc
mov
mov
push
sbb
lret
cmpsl
jp
cmp
push
loopne
xchg
addr16
xor
repz
pop
sub
orb
pop
push
and
mov
pop
add
or
outsl
mov
xor
test
popf
jg
into
xor
imul
gs
cmpsl
push
shlb
gs
ss
call
lds
inc
xchg
ret
ficompl
jnp
les
movsb
pop
adc
pavgb
sahf
inc
sbb
imul
mov
ja
cltd
in
push
rcr
bound
popa
adc
ss
repnz
inc
ljmp
jp
pop
pushf
popf
sbb
repz
push
xchg
mov
dec
and
or
rorb
rcll
mov
stos
aad
cltd
je
daa
pop
movsb
pop
xchg
xor
pop
into
icebp
test
mov
push
jle
sbb
pop
cs
std
lret
push
loop
adc
aad
test
inc
sub
jmp
push
push
or
sub
xchg
mov
icebp
xor
mov
pop
push
lret
cmp
in
in
mov
dec
inc
lret
inc
jmp
jae
shll
mov
cmp
mov
push
rol
icebp
orb
pop
pop
inc
shrl
jge
and
mov
enter
int
and
outsb
jp
adcb
rorb
and
xchg
lds
ret
je
adc
push
cmpsl
pop
dec
and
stc
pop
jle
in
sahf
sub
cmp
out
mov
jnp
mov
xor
lea
in
fmuls
add
dec
addr16
push
add
shl
mov
ljmp
add
mov
sub
fmulp
cld
dec
adc
repz
and
inc
lds
xor
js
ss
cmpl
lret
mov
cli
mov
pop
mov
and
cld
cmc
inc
popa
xor
jne
stos
xchg
test
lock
sbbl
cmp
xchg
cmp
cmp
cmpsl
into
mov
lock
mov
insb
jmp
lds
lcall
mov
push
jmp
adc
xor
sub
imul
adc
xchg
push
or
loopne
mov
pop
and
jl
cltd
pop
jmp
lahf
arpl
or
pop
bound
sbb
inc
pusha
or
xchg
inc
xor
dec
inc
cs
mov
cmp
test
mov
inc
push
push
cmp
lods
pop
sub
enter
in
inc
sbb
mov
lret
inc
sbb
pop
cwtl
mul
shld
jg
mov
inc
pop
or
xor
popf
sub
xlat
aam
jns
and
dec
mov
mov
test
mov
clc
lea
or
inc
enter
push
or
lahf
lock
stc
add
ret
pop
fsubrl
mov
push
pushf
test
sub
les
dec
inc
jae
pop
dec
test
ja
jns
sbb
rclb
pop
mov
movsl
in
cld
shrl
subb
pop
mov
push
mov
cmp
es
rcl
mov
popa
dec
xchg
lds
mov
out
mov
call
cmovle
xor
enter
sub
add
jnp
mov
pop
xchg
and
mov
cmp
xchg
inc
popf
ficompl
subl
cmp
mov
popa
shll
out
shl
add
mov
cltd
mov
call
scas
or
add
popf
jno
notl
add
insl
std
cs
and
in
fdivrl
dec
sub
mov
test
daa
in
aaa
loopne
push
and
sub
dec
dec
xchg
mov
jge
jmp
lods
imul
xchg
int3
ss
aas
into
stos
mov
mov
add
xchg
roll
stc
pushl
add
sti
cmp
jbe
dec
mov
add
dec
imul
mov
jmp
dec
ja
pop
cmp
repnz
cmpsl
dec
outsb
shll
iret
cli
lods
mov
scas
inc
popf
subl
loop
fcomps
mov
mov
sarl
sbb
fstps
test
jns
sahf
shrb
and
rclb
fadds
bound
sahf
cs
mov
lods
pushf
out
sbb
and
mov
mov
insb
or
sub
push
jmp
mov
rcrl
mov
xor
sar
push
inc
jp
push
pop
jbe
xchg
ja
xchg
sti
das
shrb
add
sub
cld
pushf
or
std
dec
mov
test
lock
jbe
scas
popf
mov
and
stc
rol
loop
push
rorl
out
xchg
aam
mov
test
xor
out
pop
bound
mov
pop
jg
into
adc
jmp
mov
mov
xor
mov
aas
lcall
fs
fs
out
cs
dec
mov
popf
shl
dec
in
jge
push
dec
aaa
pop
fwait
push
fstp
xor
cmp
jns
push
dec
sub
jne
pop
and
test
mov
daa
sub
jmp
lret
dec
scas
imul
sbb
nop
inc
cmp
cwtl
sbb
fmull
sub
movb
adc
rcrb
mov
cmc
mov
clc
add
fildl
movsl
popa
dec
xor
int3
mov
out
hlt
dec
pusha
cmpsb
mov
aam
cmpsb
xchg
ljmp
jmp
xor
push
js
inc
cmpl
sub
bound
test
iret
push
mov
aad
cmp
xor
lea
jecxz
sbb
adc
js
call
cmpsl
inc
orl
nop
shl
repnz
mov
adc
and
sub
sub
cli
arpl
mov
imul
push
adc
lods
cmpl
add
adc
aas
or
movsl
inc
int
xor
push
nop
sbbl
jbe
mov
pop
pop
sbb
in
enter
cli
mov
loopne
push
or
mov
aaa
pop
add
mov
imul
enter
aaa
sarb
cmp
loope
add
fnstenv
cmp
pusha
mov
lret
add
cmp
add
imul
jo
cld
jo
call
xor
xor
or
fs
test
push
jge
movsl
inc
cmpsb
or
addr16
xor
add
and
aam
pop
data16
jmp
dec
stos
cmp
adc
sti
hlt
mov
outsb
fsubr
out
test
dec
push
jecxz
shll
or
cmp
sub
rolb
shlb
add
cmpsb
enter
lea
iret
push
ds
scas
ret
add
call
mov
xor
sbb
btr
std
mov
inc
mov
icebp
shlb
add
rclb
outsb
jp
or
test
popf
shrl
ljmpw
loope
sub
inc
mov
dec
cmp
adc
mov
mov
xor
cwtl
jp
lods
mov
enter
cmp
dec
sti
movsl
mov
mov
push
jb
lahf
movb
das
ds
mov
icebp
sub
insl
dec
mov
add
gs
xchg
push
sbb
push
xchg
test
sub
dec
ss
push
pop
in
jno
push
and
lds
sub
mov
test
xlat
sub
inc
sti
fisttpl
sub
les
add
xor
push
adc
call
ret
sub
pop
imul
mov
setno
test
adc
push
xchg
gs
je
andb
mov
sbb
sbb
pop
jge
jno
xchg
enter
add
mull
insl
adc
scas
insl
in
mov
sbbb
mov
dec
fwait
lods
es
and
aad
mov
sti
or
push
push
in
dec
add
icebp
repz
call
outsl
mov
sbb
pop
push
stos
jp
pop
mov
xor
xor
dec
fadds
inc
xorl
out
xor
dec
stc
mov
jl
das
orl
pop
add
mov
add
xor
sbb
pop
adc
cmp
inc
gs
scas
loope
jno
jb
xor
call
xchg
std
jbe
rorb
icebp
stos
dec
mov
out
fdivrs
xor
and
dec
push
loopne
push
pop
mov
lock
lea
stos
pop
addl
push
xor
int3
ljmp
fistpll
add
mov
jmp
xchg
mov
cmp
es
inc
lret
dec
cmp
jle
pop
lods
push
sti
ja
movsb
clc
xor
cmp
mov
adc
in
pop
add
dec
jae
daa
push
lods
popl
js
stos
mov
dec
add
fcompl
add
jecxz
addr16
jbe
cmp
test
ja
movsl
test
in
push
nop
push
jns
jge
imul
jle
loopne
or
lock
pop
aam
cmp
mov
mov
sbb
cmc
xchg
add
inc
test
lods
out
jmp
xchg
loope
and
notl
jle
stos
arpl
mov
lea
rolb
mov
jmp
xchg
pop
push
pop
add
data16
rclb
fiadds
cmp
inc
shlb
dec
jne
fldl
push
sarb
scas
cli
bound
test
outsb
xchg
ret
negb
push
jae
xlat
ficompl
jmp
sbb
ret
sub
call
push
mov
adc
push
sbb
test
pop
dec
cltd
mov
dec
mov
sahf
call
jl
mov
js
out
int
test
jnp
sub
xchg
or
push
pop
ror
lds
arpl
mov
push
sahf
mov
out
imul
sbb
popf
lods
ret
nop
push
inc
sub
mov
frstor
lods
cmp
aad
mov
inc
inc
xchg
fistpl
lea
cmp
std
jo
push
push
rcrl
push
cld
jmp
add
push
dec
jmp
adc
jge
inc
test
dec
mov
dec
int3
jae
out
dec
data16
repz
xor
cmp
pop
fs
and
bound
or
dec
jno
add
pop
repnz
ss
jecxz
and
or
imul
cmp
ljmp
or
mov
jno
push
ljmp
stc
andl
jecxz
add
in
or
mov
fsubl
push
out
int3
inc
push
pop
mov
fdiv
into
mov
icebp
jg
loope
mov
popl
iret
pop
mov
pop
mov
cmc
push
sbb
sub
out
std
or
xchg
xor
stos
fdivrs
cmp
xchg
cmp
xor
and
mov
dec
dec
shrl
and
cmp
xor
adc
dec
repnz
shll
insl
cltd
repz
into
jle
cmpl
fstps
adc
jge
cmp
frstpm(287
in
xor
in
idivb
pop
fld
test
xchg
cmc
xchg
adc
mov
add
lret
lods
sub
pmaddwd
add
dec
fnstenv
shlb
iret
dec
xor
xor
xchg
adc
test
in
jmp
mov
mov
enter
dec
xorl
stos
popa
dec
jo
nop
sbb
cmp
fsubrl
dec
movsb
xor
movsl
mov
push
addr16
mov
or
xchg
mov
mov
imul
add
push
xchg
mov
aas
cmc
lcall
cmp
mov
jb
in
clc
call
xchg
and
sub
mov
sub
aas
fs
add
mov
leave
and
adc
lods
xor
mov
lds
push
stc
pop
frstor
popl
dec
xchg
mov
rcr
movsl
dec
cld
adc
je
dec
add
js
shlb
fmulp
out
mov
push
ret
mov
nop
sarl
dec
shl
je
imul
outsl
dec
mov
push
mov
les
push
mov
adc
cmp
std
or
je
mov
xchg
mov
push
sti
idivb
dec
pushf
mov
outsb
push
sbb
inc
pusha
add
lahf
pushf
test
subl
cmpsl
cmp
inc
xchg
or
push
std
xchg
mov
or
cmp
inc
push
repnz
xchg
cmp
adc
arpl
mov
sub
adcl
pop
clc
ret
sbb
in
call
push
sbb
loope
rcr
jae
push
pop
rolb
mov
data16
cmp
push
movsb
lret
shl
lcall
cmp
les
rolb
in
cld
addr16
outsb
scas
mov
sub
xor
inc
ss
shll
test
popf
movsb
fs
add
in
mov
cmpsl
aas
mov
cmp
mov
into
mov
jg
inc
sub
and
dec
std
lods
mov
push
xchg
es
jmp
lock
or
xchg
ss
or
xor
xor
jmpw
loope
sub
insl
loopne
sbb
inc
or
push
jge
mov
insl
subl
test
imul
jb
xor
sbb
pop
or
sub
adc
sbb
mov
sub
and
mov
movsb
jb
adc
cmpsl
sarl
mov
add
fcomps
mov
insb
xchg
jb
mov
leave
mov
imul
xchg
mov
add
hlt
sbb
stos
pop
cmpsb
ljmp
incl
cs
fidivl
out
nop
sub
ds
fstpt
mov
sub
ds
dec
sub
int3
les
sbb
sti
in
fdivl
fs
test
mov
cs
dec
ds
out
cmp
pop
shl
fnstsw
lret
vmwrite
icebp
or
stos
xor
pop
mov
dec
push
std
and
shr
cmp
in
mulb
rorl
repnz
mov
pop
inc
inc
dec
jb
pop
push
inc
sbb
fimull
xor
push
das
pop
xlat
lods
enter
push
jmp
push
or
and
xlat
jl
mov
lods
mov
mov
dec
or
outsb
xchg
sbb
mov
or
inc
sub
shlb
incb
push
xor
mov
push
stc
pop
pop
and
loopne
arpl
mov
sbb
test
or
sar
mov
xchg
sub
in
lods
and
js
shr
jle
sub
xchg
lcall
das
push
jp
out
push
push
loopne
and
repz
and
in
pop
mov
xchg
in
and
push
push
sbb
sar
add
xchg
cmp
inc
xor
adcb
stos
cmp
dec
push
jo
das
cwtl
inc
shll
inc
jnp
xlat
pushl
pop
aaa
into
cmp
gs
call
je
insl
and
imul
arpl
adc
jbe
inc
xor
push
aas
sbbb
pop
std
mov
inc
xchg
xchg
sbb
out
aaa
dec
stc
mov
sbb
or
jb
lods
xorl
rorb
out
je
popa
cwtl
pop
jno
pop
data16
sets
data16
sbb
adc
movsl
in
es
push
lock
les
sbb
fisttpl
xchg
sbb
adc
movsb
adc
bound
daa
and
pop
lret
adc
push
das
icebp
cwtl
in
imul
push
xor
cmpsb
popf
cli
mov
add
xchg
dec
pusha
fstl
jg
fs
dec
mov
jne
or
es
jnp
xchg
ds
mov
add
rorl
or
mov
hlt
je
mov
xchg
mov
sub
lods
sbb
mov
scas
enter
inc
icebp
sub
imul
inc
push
sub
js
mov
add
sub
mov
pop
jle
mov
scas
and
fwait
mov
fwait
xchg
inc
cli
icebp
mov
sbb
push
mov
xor
xchg
scas
add
fcmovu
loope
data16
lds
or
mov
cmp
cmp
xchg
loop
adc
cmp
js
pop
jl
cmpxchg
xchg
sti
mov
shrb
jo
cmp
addr16
int
mov
call
and
repz
push
mov
sub
or
dec
decb
adc
gs
cmpsl
pop
add
sub
ja
fildl
jno
sbb
jae
mov
and
push
mov
stos
sub
fdivrl
aas
sarl
pop
add
and
ret
aam
jmp
mov
pop
das
popf
inc
mov
jle
inc
inc
adcb
lahf
rolb
sar
ss
scas
andb
out
push
xchg
push
xchg
jg
add
or
cltd
fsubs
out
dec
aas
aad
mov
inc
lds
mov
mov
cld
icebp
repnz
mov
sbb
mov
das
mov
sub
lock
fcomps
lds
push
mov
xlat
xor
add
inc
je
rcl
lea
jmp
rcl
arpl
sbb
sbb
sub
mov
pop
nop
pop
mov
ja
test
js
stos
addr16
or
and
ljmp
push
mov
fisubrl
jge
adc
insl
mov
pop
add
jae
adc
in
leave
xchg
or
mov
or
add
jbe
inc
stos
push
dec
rclb
xor
mov
mov
pushf
stos
test
movsb
loopne
lods
sub
out
mov
lahf
loope
jns
sbb
add
rcrb
loope
push
pop
mov
push
loope
mov
or
dec
cmp
sbb
fidivrs
xchg
lahf
popa
jge
in
jl
std
cmp
lahf
lock
popa
mov
cmp
dec
cltd
sbb
bound
pop
cmp
inc
sahf
jecxz
fistpll
jae
in
or
ljmp
imul
sub
or
xchg
jle
icebp
jo
aas
imulb
subl
ret
pop
mov
mov
int3
xchg
lcall
push
in
xchg
iret
cs
adcb
pop
rdpmc
mov
inc
xchg
pushf
jecxz
lods
xchg
arpl
sbb
rorb
xor
mov
inc
inc
push
cs
jns
mov
mul
pusha
ljmp
loope
lods
and
xchg
mov
or
mov
clc
repz
ja
cmpsl
pop
fistpl
out
ret
filds
scas
je
dec
out
scas
pop
pop
jg
enter
in
dec
rcrl
push
cmpsl
cmp
ja
rol
test
xchg
mov
sbb
addr16
sahf
pusha
rorl
aaa
cmp
fwait
sub
sbb
subb
lahf
adc
or
into
xchg
xchg
cmpsb
stos
dec
dec
stos
fsubrl
mov
loopne
in
leave
ja
mov
mov
jge
push
mov
mov
lea
add
mov
sti
js
mov
out
vmwrite
stos
xor
mov
and
cwtl
bound
add
jmp
fisubs
lock
and
add
push
pop
outsb
std
jb
lods
xlat
inc
and
jecxz
aam
ret
lret
add
clc
mov
outsl
xor
xchg
inc
push
push
sbb
in
test
mov
rclb
jno
out
fwait
jmp
adc
jl
js
arpl
cs
push
outsb
mov
stc
mov
std
jmp
dec
adc
push
lret
pop
jbe
xchg
mov
cmp
into
and
pusha
cmp
mov
loop
mov
rorl
mov
sbb
js
cwtl
dec
dec
mov
mov
xchg
mov
aas
add
in
lods
dec
repz
call
adc
jnp
xchg
adcl
xlat
shr
lret
lahf
mov
stos
rorb
dec
cmpsl
repz
je
xor
adc
movb
das
adc
pushf
in
lods
imul
cmp
aas
sahf
and
adc
mov
jmp
dec
cmpsb
pop
cld
fidivl
hlt
shl
jbe
into
jmp
loop
test
movsl
sub
cmp
xchg
jnp
cmp
dec
pop
lcall
aad
dec
inc
push
cmpb
sbb
cmp
movb
sarl
ficompl
dec
andnps
test
push
lds
push
cmc
sbb
push
push
cmp
and
lods
jl
mov
loope
jae
sub
pop
jge
cvttps2pi
add
push
movl
fmulp
outsl
enter
cli
push
sub
inc
aaa
sub
imul
xor
aad
test
sub
jns
stc
fwait
enter
mov
lret
mov
ret
fidivl
ret
jmp
andb
and
movsb
mov
test
and
incl
xchg
sub
bound
or
lock
aaa
out
gs
lret
dec
out
jbe
xor
push
shrb
imul
stos
jnp
jge
pop
cltd
test
ds
ret
popf
push
mov
nop
inc
or
pop
mov
movsl
adc
xchg
icebp
inc
jl
cmp
imul
daa
aam
adc
mov
xor
jmp
in
adc
push
mov
icebp
movsb
mov
mov
daa
mov
lcall
xor
mov
jl
push
jae
js
rsm
jecxz
sbb
push
test
inc
adc
cmp
cwtl
mov
stos
clc
cmc
ja
inc
test
mov
imul
sub
sbb
outsl
xchg
loopne
movl
adc
inc
lahf
or
sbb
mov
mov
out
and
sbb
jo
aas
pop
or
test
sub
push
cmp
enter
testl
notb
movsb
pop
add
and
or
jae
loope
cmpsb
add
mov
mov
inc
push
out
sub
into
int3
cltd
sub
popa
sub
repz
add
sbb
pop
dec
bound
pop
ret
push
notl
outsb
jnp
sbbl
push
popf
call
sbb
mov
inc
xor
outsl
push
mov
int3
pop
adc
mov
push
or
fsubrs
pop
test
xor
inc
sbb
mov
sub
sub
add
mov
or
cmp
std
mov
rclb
rolb
jne
pop
inc
fdivs
es
ret
push
out
outsb
imull
lods
cmp
into
out
jbe
lcall
inc
cmp
jmp
and
xor
inc
stos
cmpl
ljmp
xchg
cmp
xchg
dec
mov
sbb
and
pop
pop
and
cmp
shrb
inc
aas
out
or
jbe
dec
loop
mov
mov
push
add
sub
mov
jae
push
sub
sbb
mov
pop
in
cwtl
testb
shl
push
pop
mov
xchg
shll
std
and
jmp
lret
dec
scas
pushf
dec
sti
daa
popa
test
pop
je
jo
dec
test
mov
arpl
lock
ss
xchg
cmp
lcall
loopne
orl
sar
sbb
out
lahf
dec
enter
test
ja
mov
bnd
testb
cwtl
jmp
or
lcall
in
stos
in
sub
cltd
out
in
lahf
or
mov
scas
cld
ret
aas
pop
hlt
dec
pusha
icebp
idivl
stos
aad
test
mov
sub
xor
jne
sub
dec
aam
or
lret
dec
xchg
dec
xchg
popl
fdivl
mov
sbb
cmpsl
rcl
xchg
rcl
cmp
sub
mov
push
add
xchg
jl
jae
jmp
fcomp
stos
and
stos
sub
xchg
or
daa
mov
imul
push
jnp
pop
dec
push
imul
lret
pop
push
fcompl
inc
imul
std
cmc
sbb
pop
pop
add
jo
jnp
inc
cld
pop
cmp
cltd
jg
fucomip
frstors
js
insl
fldln2
mov
adc
mov
sub
xor
lods
jae
push
adc
into
lods
inc
fwait
or
cmp
or
xor
daa
xchg
int3
outsb
mov
inc
sti
ret
call
push
pop
gs
test
jmp
xor
mov
loop
aam
mov
xor
cmp
mov
adc
and
pop
testl
mov
cmc
mov
adc
mov
clc
pop
subl
mov
mov
inc
cmp
insl
mov
pop
cbtw
push
fidivs
iret
cmp
insl
push
push
fs
jne
jp
in
leave
pop
les
sarl
push
push
inc
gs
mov
lahf
push
lahf
or
dec
push
outsl
add
inc
push
lods
inc
fldt
mov
hlt
dec
dec
push
mov
push
push
in
cmp
loop
mov
das
pop
jne
push
and
in
sub
loop
pop
popf
lea
mov
iret
adc
jbe
fmull
jnp
xchg
mov
leave
cmp
sbb
cmp
add
and
ret
adc
pop
pop
fidivl
xor
pop
addr16
loope
sbb
dec
push
cmpsb
mov
dec
or
sub
xchg
daa
lret
insl
dec
in
lock
dec
sub
jl
ljmp
mov
inc
cmp
pop
popf
xor
jmp
out
or
call
pushf
add
popf
mov
sub
cmp
adc
cmp
out
adc
inc
xchg
sbb
xchg
push
stos
sub
mov
cld
mov
inc
sub
sub
inc
leave
hlt
in
cld
or
sbb
xchg
ljmp
cmp
enter
jle
mov
fstps
scas
daa
jo
test
xor
mov
cmp
repnz
pop
or
nop
mov
or
repnz
add
push
movsl
psubsw
int
push
lret
xor
lds
pop
push
fisttps
cmpsb
lds
int
int
pop
fcomps
fdivp
insl
or
add
push
pushf
mov
int
fidivrl
repz
jmp
jmp
jb
shlb
xchg
or
jecxz
ss
jge
lods
jno
mov
dec
push
inc
or
rclb
out
dec
stc
in
aas
push
scas
loop,pt
or
inc
or
loop
mov
mov
nop
shlb
iret
jo
pushf
add
cmp
lods
cld
ja
out
dec
add
loop
lcall
jmp
push
loopne
shrb
sub
mov
loope
jae
or
dec
sbb
stos
movsb
ret
lods
xor
mull
inc
mov
xchg
sub
adc
add
sarl
idivb
jnp
insl
jmp
fsts
adc
stos
cli
stos
and
test
outsl
cmp
decb
mov
sub
xchg
es
add
jne
in
push
sub
push
mov
in
pop
jno
mov
es
outsb
cmp
jne
mov
mov
fsubs
shll
imul
outsb
xchg
push
pop
push
mov
and
adc
jg
or
sbb
dec
mov
mov
sbb
popf
out
sub
les
into
xor
jmp
dec
cvtpi2ps
mov
popl
jb
sub
les
push
dec
loop
push
dec
push
insb
sahf
aam
cli
xor
and
add
cmpsl
leave
and
loope
pop
fsts
push
mov
adc
mov
ret
sub
xchg
push
mov
jbe
push
sbb
repnz
sbb
pop
subb
in
sub
pop
push
imul
mov
enter
test
pop
lahf
sub
pop
inc
test
add
clc
add
aam
adc
cmp
add
mov
xchg
enter
cmp
nop
test
mov
or
and
mov
xchg
insb
imull
mov
and
push
inc
inc
xchg
xchg
pop
imul
mov
aam
or
add
les
add
pusha
jnp
add
or
insl
sbb
xchg
mov
shr
dec
aam
xchg
aam
xor
mov
inc
mov
dec
enter
inc
push
xorl
lret
fisttpl
or
inc
movsl
dec
popa
push
and
mov
lock
lret
xchg
cmp
leave
rorb
daa
in
data16
fidivrl
push
cmp
dec
xchg
jg
mov
push
fwait
jns
xchg
mov
aaa
inc
call
jnp
subl
push
and
sti
fmull
lock
cmp
adc
divb
lret
call
adc
dec
push
in
orb
shrl
scas
or
repz
movsl
mov
out
cli
cmp
cltd
lcall
mov
inc
jns
inc
fistpl
lahf
iret
in
in
subb
lods
fcomps
movsl
inc
jl
and
addr16
leave
push
jle
dec
inc
mov
daa
lahf
adc
aam
mov
dec
mov
mov
test
scas
inc
leave
add
sbb
ja
mov
sar
icebp
jge
cmpl
sar
arpl
jmp
addr16
push
pop
mov
push
and
insb
sti
imul
addr16
mov
jge
sarb
cmp
fsts
loopne
or
fs
dec
lgs
xor
repnz
adc
push
adc
add
lock
lock
adc
xchg
fcmovne
xchg
sarl
rorb
cmpsl
mov
outsb
outsb
sbbl
xlat
int
or
sbb
mov
insl
iret
or
xor
lahf
mov
aad
inc
pop
aaa
in
xor
mov
or
mov
inc
in
das
sbb
loopne
pusha
rcrl
jp
aad
jg
inc
test
lcall
push
mov
test
fisubrl
xchg
ja
cltd
dec
mov
sbb
call
mov
rcr
loope
adc
sbb
dec
cmpsl
into
fisttpl
mov
adc
pop
adc
sbb
pop
and
pop
ljmp
hlt
pop
js
mov
mov
pop
and
movsb
inc
and
pop
imul
xorl
setnp
mov
es
enter
shrl
cmp
mov
aad
andb
scas
addl
jle
fistpl
lods
adc
push
insb
fidivrs
jb
lret
dec
mov
mov
rcrb
adc
pushf
cld
outsb
rolb
pop
dec
pop
pop
cmp
mov
add
std
jnp
scas
xor
add
es
pop
inc
and
or
mov
les
movsl
adc
ffreep
cmp
dec
jbe
mov
push
iret
sbb
xor
xor
sbb
lret
js
push
dec
and
cli
scas
andl
lret
mov
add
jle
or
cs
push
dec
negb
mov
shll
xor
xor
fwait
test
sbb
ror
push
clc
xor
icebp
sbb
push
xlat
or
aaa
sub
das
sub
aas
inc
mov
in
ret
dec
sub
dec
pop
sbb
ret
es
add
pop
mov
outsl
adc
dec
push
out
arpl
mov
fbstp
mov
nop
lock
mov
lret
rcl
out
pusha
cs
jae
pop
mov
mov
adc
inc
mov
data16
in
jg
dec
push
push
not
and
in
cmp
insb
out
andl
jbe
aas
jl
xchg
and
es
pushf
fldenv
call
shrb
pop
fildl
das
scas
jle
pop
mov
iret
mov
xchg
push
sahf
mov
dec
push
pop
push
repnz
dec
jmp
stc
stos
add
in
sbb
pushf
pop
push
movsb
mov
inc
xchg
pop
fistps
mov
pushf
mov
cmp
adc
xchg
loop
popf
and
je
cmp
insl
test
ljmp
jmp
mov
lret
fisttpll
les
xchg
cmpsb
jne
push
and
mov
cmpsb
xor
fwait
cmp
sti
ss
pop
push
testl
xchg
inc
xchg
adc
test
cmp
movb
xchg
xor
in
stc
mov
mov
test
test
iret
or
scas
sub
lea
das
add
test
rcl
lods
popa
mov
sbb
daa
or
sub
dec
mov
pop
cmp
mov
popa
cmp
mov
xchg
inc
lret
sahf
push
jbe
arpl
loope
cmp
pushf
imul
neg
xor
pushf
mov
fcoms
in
out
js
ja
push
sbb
leave
mov
push
mov
mov
inc
jns
adc
sub
push
or
stc
lods
adc
cmp
jo
loopne
lcall
xor
into
jbe
imul
add
aas
xor
je
jb
and
mov
xchg
xchg
das
inc
pop
dec
and
popa
mov
mov
and
push
jns
sbb
mov
adc
inc
cs
ret
or
dec
xchg
insb
fs
jecxz
mov
lods
js
pop
pushf
int3
dec
ss
dec
sub
mov
push
add
add
popf
inc
test
jb
sar
inc
cmp
push
insl
fisubrl
sbb
fcmovnb
push
or
xchg
pop
xor
xchg
xor
std
mov
bnd
pop
or
pop
pop
push
es
inc
mov
cltd
jno
shll
cmpsl
sahf
add
mov
cli
aam
fbld
sub
mov
mov
fcom
xchg
lods
out
ljmp
ret
mov
sbb
stos
fisubrl
xchg
lea
icebp
fistl
jne
or
mov
cmp
xor
aad
sbb
fcomi
js
pop
xchg
sbb
jg
or
cmp
in
sub
sbb
dec
test
fcmovb
cmpl
lods
inc
daa
loopne
dec
cmp
xchg
fildll
dec
and
add
jp
jns
push
push
jmp
out
or
int3
iret
ror
cmp
adc
loop
push
and
push
xor
aad
mov
fsubrs
or
icebp
sub
xor
pop
ret
adc
mov
adc
dec
ds
xchg
rcrb
mov
inc
aaa
adc
loopne
sahf
cmp
mov
stc
dec
pop
loopne
enter
pop
adc
lods
pop
jns
fs
cli
add
xor
cmp
push
in
lods
in
sbb
mov
daa
fdivrs
dec
ja
sbb
and
adc
cmpsl
orl
aas
mov
mov
movsl
sti
mov
pop
shr
sub
or
push
mov
mov
jg
adc
not
adc
push
dec
negl
rcrb
xchg
mov
movsb
inc
popa
jmp
mov
mov
sbb
repz
pop
cmp
inc
sbb
sti
pop
sbb
enter
add
insb
push
rcrl
imul
jle
sbb
jae
jne
pusha
shr
xorb
adc
sbb
pop
cmp
mov
add
test
pop
and
mov
sahf
sub
pop
sbb
cmp
add
add
lock
clc
lods
shlb
add
stos
mov
insl
push
int
negl
test
sbb
jecxz
cs
mov
adc
sbbl
xor
dec
dec
pop
decl
das
pop
push
pop
sbb
scas
sub
mov
xchg
cs
cmp
mov
sbb
xchg
lods
push
loop
adc
or
lods
scas
adc
and
lret
push
adc
push
insb
inc
inc
lock
imulb
test
subb
shl
in
xor
adcl
decb
xor
gs
and
shld
pop
sub
orb
xor
jae
daa
fcmovnu
enter
test
data16
aas
scas
cmp
dec
xchg
cmp
cmp
mov
push
add
mov
dec
cmp
scas
movsb
cmpsl
inc
cmpsl
mov
test
aaa
rorl
sahf
mov
jne
daa
mov
push
int
ds
pop
xlat
inc
mov
call
adc
loop
fsubs
fwait
ret
adc
push
mov
mov
and
movsl
popf
mov
adc
jae
clc
dec
ljmp
add
jmp
lods
jns
jbe
mov
in
xchg
ss
js
test
pop
std
orl
icebp
jo
mul
fsubl
jg
into
sbb
jecxz
dec
adc
insb
push
testl
xchg
fidivs
push
jo
jmp
adc
scas
inc
icebp
aas
push
mov
ret
shr
test
and
gs
cli
std
xchg
shlb
cs
xchg
xchg
repnz
les
mov
mov
push
adc
jl
imul
in
sbb
and
cmpsb
sbb
mov
mov
inc
lret
popf
fistps
je
and
mul
sbb
xor
lock
add
fcomip
mov
scas
and
dec
daa
push
movsb
dec
push
cmp
and
loope
inc
popf
lods
dec
and
add
or
dec
fs
push
je
push
fbstp
je
jp
add
cmp
mov
mov
sbb
inc
imul
outsb
aas
push
les
notl
jne
mov
fidivs
mov
cmp
mov
push
ljmp
or
enter
jecxz
lea
loope
jle
mov
xor
pop
jnp
push
cltd
lds
scas
cwtl
mov
std
dec
lods
lcall
push
inc
xchg
xchg
or
xor
add
pop
fstpt
push
xor
jg
jg
ret
popf
inc
add
sub
aaa
jnp
test
mov
fnstcw
sub
xchg
cmp
mov
or
hlt
cmp
adc
adc
xchg
les
xchg
dec
iret
add
cmp
fiaddl
sbb
and
loop
add
shrb
fimull
insl
dec
in
fsubs
loop
adc
les
mov
neg
es
fisubl
mov
ds
bound
or
and
lods
or
popa
rorl
int
mov
mov
outsl
imul
pop
cwtl
mov
push
adc
mov
pop
mov
and
sub
push
sbb
repnz
nop
dec
sti
rcll
and
icebp
cmpsl
push
mov
push
push
lods
aam
cmpsb
sbb
out
shrl
xchg
addr16
repnz
mov
dec
fwait
cmc
mov
movsb
dec
sbb
sub
mov
adc
fistl
lods
xor
test
mov
shll
mov
mov
jnp
mov
push
fstpt
mov
int
add
lods
repz
mov
xor
dec
popa
mov
sub
data16
lahf
and
into
clc
mov
es
lea
fimuls
jns
jmp
xchg
stos
sbb
xchg
iret
bound
jge
aam
sarl
mov
jo
iret
and
lcall
lods
ret
fdivl
data16
add
jnp
adc
sahf
dec
pop
loop
cmp
xlat
mov
fmuls
or
cmp
mov
jb
test
push
out
call
out
xchg
add
push
out
loop
mov
dec
lret
pop
push
fdivr
es
fisubrl
pop
mov
in
inc
jnp
jmp
cmpsb
bound
icebp
in
inc
pushf
flds
push
imul
xchg
push
outsl
adc
xor
add
cmp
jmp
or
push
add
xor
sub
and
in
jns
loopne
fmull
subb
cmp
out
mov
lret
mov
imul
imul
movsb
pushl
push
js
dec
pop
pusha
ljmp
mov
icebp
xchg
das
frstpm(287
sbb
cmp
cmp
enter
jo
iret
cmc
cltd
leave
jg
and
cmp
insl
jle
cmp
xor
scas
test
mov
icebp
out
xor
movsl
dec
mov
cli
cmp
and
enter
sub
pop
dec
push
int
test
cmp
sahf
out
jecxz
into
ss
mov
mov
cmp
loop
in
into
push
in
pop
test
inc
push
push
mov
test
dec
xor
outsb
push
inc
inc
sub
xor
pop
sbb
xor
cwtl
push
mov
xchg
pop
lret
shlb
popa
and
adc
sbb
imulb
mov
out
dec
mov
pushf
adc
jp
mov
jno
pop
fiaddl
lds
mov
xchg
cwtl
iret
mov
fstpl
leave
push
sbb
movlps
inc
cmp
add
aam
inc
and
sub
fdivrs
xchg
sub
pop
xor
imul
imul
and
andl
arpl
lock
jmp
dec
test
add
mov
dec
sbb
mov
enter
pop
adc
lods
mov
stc
sahf
pop
cmp
fldt
mov
testl
pop
mov
loop
sub
xchg
add
out
loope
mov
fs
arpl
jns
ds
xor
icebp
and
xchg
sub
xor
adc
push
sub
pop
sbb
and
and
dec
imul
cmp
es
test
xor
fistl
inc
aad
sbb
stos
pop
stos
mov
jge
jg
sub
cld
add
call
rclb
divb
xor
fimuls
inc
jecxz
movsb
arpl
pop
or
jbe
leave
lods
xchg
test
lods
clc
lock
mov
data16
popa
mov
lods
cwtl
xchg
and
xchg
inc
cs
or
dec
sbb
loopne
shlb
xor
in
sub
cwtl
addb
lods
or
xor
idiv
lods
push
les
mov
push
xchg
and
dec
add
push
jns
jnp
xor
mov
xchg
stc
lret
mov
jo
aad
lds
cmp
std
pushf
popw
jge
fildl
cmp
sbb
lret
sti
stos
xor
pushf
xor
xchg
adc
test
push
mov
push
cld
add
xchg
testl
jns
and
in
repz
shr
mov
into
stc
mov
xor
gs
mov
jno
add
ret
add
pop
adc
sub
mov
stc
insb
or
sub
notb
mov
mov
pop
popa
arpl
ja
rcrb
fldl
icebp
mov
jbe
mov
hlt
jb
push
pop
sub
jo
cmp
adcb
ds
negb
dec
add
mov
sbb
jmp
mov
in
aas
aam
mov
movsl
fcom
fists
xchg
jecxz
push
icebp
pop
pushf
clc
sbb
dec
cmpsb
mov
jb
adc
add
daa
sarl
xchg
mov
pop
add
subb
and
imul
int
out
subl
cmp
fcomps
and
fcomps
outsb
lret
cmp
jl
lea
mov
jbe
loop
sti
scas
mov
jne
pop
jecxz
stc
out
or
sub
mov
ret
mov
xor
arpl
pop
mov
cwtl
mov
push
pop
test
push
xchg
in
dec
fdivs
mov
les
inc
aaa
pop
sarb
pusha
xor
fildll
xchg
aam
sub
imul
add
pop
push
ss
and
pop
das
and
in
sub
pusha
imul
and
or
pop
lods
mov
cmpsb
call
out
push
pop
cmpsl
je
jg
or
pop
push
popa
fucom
mov
push
mov
mov
addr16
and
mov
insb
mov
jp
sar
xchg
popf
ja
iret
test
cmp
sbb
hlt
mov
push
jecxz
push
out
sti
movsl
arpl
cmp
mov
divb
ret
adc
jg
addr16
in
jae
stos
je
or
xor
push
push
lahf
enter
xchg
fldcw
pushw
imul
and
aaa
jae
leave
xchg
ljmp
imul
movsl
lods
out
hlt
int
pop
mov
les
flds
call
sbb
pushf
fdivp
adc
add
enter
lock
mull
or
out
mov
lret
je
and
push
lock
dec
xor
loop
into
or
aaa
cli
xchg
aam
arpl
cmp
add
mov
lock
inc
ret
jbe
inc
fldt
pop
aam
xchg
iret
cmpsl
aam
add
dec
stc
and
or
pop
add
lea
stos
and
loope
inc
lcall
xor
rclb
xor
mov
in
in
cmp
xchg
sahf
mov
pop
neg
sti
and
cs
sbb
cmpsl
and
sbb
sub
mov
mov
fs
push
push
fistps
push
xchg
popl
lods
mov
cmp
int3
inc
sahf
pop
push
jbe
sbb
xlat
mov
pop
pop
cmc
mov
pop
scas
jnp
ja
ds
cmp
adc
cmp
xchg
push
add
dec
popl
push
xorb
adc
sub
xor
pop
loopne
shr
xchg
add
xchg
ds
stos
jg
jnp
and
inc
rclb
repz
gs
cmc
push
cmp
jl
rcr
cs
rcll
test
scas
movl
out
pop
les
pop
andl
sub
push
xor
push
inc
mov
xchg
ret
ja
xor
or
cwtl
pop
and
in
cmp
pusha
fadds
fucomi
jp
test
push
push
icebp
or
cmp
pop
aaa
lods
aas
cmp
jmp
adc
and
into
cmp
xor
dec
bound
push
stc
sub
push
testb
loopne
push
mov
ret
mov
or
mov
scas
inc
inc
cmp
pop
push
shlb
sbb
outsb
push
cli
stc
call
or
and
les
clc
cmp
or
in
retw
pop
and
aas
push
pop
testb
rorb
lcall
or
push
stos
cmp
sub
mov
popa
mov
fldl
mov
mov
and
bswap
in
push
cmp
jbe
mov
in
insb
mov
fwait
adc
or
lahf
xchg
jl
jbe
jb
ja
xor
and
push
push
pop
dec
loop
lock
xchg
and
sbb
dec
in
mov
movsl
mov
cltd
and
mov
jecxz
fcomip
push
cli
popf
lret
stos
out
adc
xchg
loop
mov
arpl
mov
cwtl
ret
popa
or
cmp
fists
adc
mov
insb
add
dec
rcr
cmp
arpl
dec
movsb
sbb
jne
mov
xchg
aam
inc
sub
and
jne
movsb
cmp
movsl
aas
scas
push
stos
mov
out
jns
mov
movsb
fs
repnz
jmp
adcl
xor
push
sub
push
cmc
sbb
aaa
cmc
xor
lret
dec
popa
lods
addl
in
scas
sub
jmp
pop
and
mov
sbbl
cli
into
aaa
out
inc
xor
ja
mov
mov
or
call
mov
mov
movsb
xor
call
xor
cmc
ljmp
fs
aam
push
inc
into
push
xchg
ljmp
inc
xchg
dec
clc
pop
fsub
loope
std
xchg
inc
xchg
jg
mov
xchg
mov
or
dec
gs
pop
cmp
stos
das
mov
shll
mov
aaa
inc
jge
push
xor
nop
movsl
insl
adcb
out
or
inc
cmpb
adc
fistpll
xor
icebp
and
pop
push
mov
std
iret
or
cmpsb
test
hlt
adc
je
and
cltd
xchg
adc
or
adc
cmp
shrb
out
arpl
xchg
les
addl
pop
je
xlat
push
les
and
pop
mov
js
jne
shlb
push
andb
xchg
gs
movsb
rcl
pop
mov
xor
pop
icebp
jo
cmp
sbb
dec
sbb
stc
cld
adc
inc
pop
sti
stos
add
xchg
sbbb
scas
mov
pop
dec
and
imul
rorb
mov
loop
sbb
repnz
jmp
xchg
xchg
pop
sub
mov
out
out
fsubrs
fsubl
es
mov
ret
mov
inc
data16
adc
mov
int3
daa
dec
pop
aaa
cmpsl
nop
testl
scas
mov
mov
inc
jne
inc
dec
mov
scas
xchg
repnz
bound
repz
or
or
mov
hlt
daa
cmp
dec
push
xor
or
mov
xchg
mov
cs
push
mov
pop
lret
sub
les
pop
mov
dec
rolb
int3
and
roll
push
or
dec
jo
loope
xchg
xchg
sbb
mov
adcb
cwtl
hlt
cmpsl
cltd
loop
rcl
dec
bound
movsb
pusha
lods
repz
cld
sub
mov
push
dec
add
test
movsl
addr16
je
repz
xchg
cwtl
pusha
fwait
cltd
mov
push
mov
addl
jmp
mov
push
shrl
cmpsb
daa
loop
inc
cmc
cltd
in
test
int3
push
stos
pushw
shrb
std
movsl
add
add
dec
ljmp
repnz
and
xor
loopne
pop
mov
cmpb
xor
inc
adcl
xchg
mov
fidivrs
cltd
rcl
in
outsl
arpl
lret
pop
pop
nop
push
js
xchg
dec
test
lock
jmp
or
lds
sub
notb
xor
pop
pop
mov
out
scas
jle
aaa
sub
or
lcall
ja
fwait
sub
xchg
jp
loopne
dec
sbb
out
dec
sub
xor
push
sub
sahf
push
test
cld
test
or
icebp
pushf
in
mov
cmp
mov
fucomi
and
arpl
clc
jae
dec
loopne
mov
push
cmpsb
add
outsl
hlt
push
mov
dec
aas
in
inc
lret
test
sahf
ja
sbb
out
lds
cmc
mov
das
pop
jne
test
adc
add
ret
ficompl
outsl
arpl
pop
mov
and
bsr
jns
test
test
mov
rcrb
push
pop
rorb
mov
jb
push
mov
mov
fdivr
shl
roll
popa
sahf
es
mov
push
xchg
jbe
cli
push
outsb
stos
sbb
xor
mov
repnz
test
std
inc
lock
test
andl
loop
fnstenv
fwait
sahf
mov
add
aas
xchg
sbb
add
lcall
xor
jo
lret
adc
fwait
sbb
mov
fildll
cmpsl
mov
xchg
loop
jnp
andb
adcl
pusha
sbbl
loop
pop
mul
dec
test
cmp
mov
adc
lret
pop
xlat
mov
stos
imul
ret
push
std
sbb
aaa
sti
jp
lcall
popf
mov
cwtl
jns
addb
and
ljmp
cltd
ss
orb
inc
sub
push
cmpsl
loopne
inc
aas
adc
movsl
je
cld
pop
xorl
and
idiv
std
in
mov
push
add
out
jb
pop
jp
push
inc
jmp
add
in
dec
mov
mov
shrb
movsb
orb
sub
cld
sbb
mov
pusha
mov
pop
test
dec
inc
fs
xor
mov
xor
xor
testb
jmp
sbb
add
shrb
mov
xchg
mov
out
xor
fistps
aam
jb
repnz
into
std
inc
in
jecxz
scas
mov
jp
int
lahf
and
push
sub
loopne
aas
sahf
pop
inc
jnp
and
cmp
pop
dec
xchg
sub
scas
jo
out
mov
dec
jnp
ljmp
mov
ss
test
ja
test
addr16
movsb
or
rcpps
fwait
icebp
lcall
sub
add
cltd
mov
stos
mov
mov
jnp
cltd
push
fldcw
pop
cld
pop
cs
xor
in
fbstp
adc
pop
cltd
dec
out
jp
mov
mov
push
sub
jl
mov
push
in
jp
sahf
sbb
or
and
lods
jecxz
xchg
sarb
frstor
pushl
dec
inc
les
jnp
lretw
cmpsb
xchg
adc
cmpl
cmc
push
pop
in
lods
sub
lods
jg
into
popf
mov
loop
je
add
cmpsl
mov
pop
cli
pusha
aam
pop
in
cmp
mov
sbb
and
push
push
test
arpl
pop
cmp
jmp
pop
insb
or
shlb
push
push
fmuls
movsb
jb
or
in
jl
sbb
aaa
mov
stos
adc
pop
lds
pop
xor
rcll
jl
adc
push
stc
leave
mov
shrl
test
movsl
in
sbb
pop
lock
cmp
push
or
lea
jnp
jb
mov
mov
movsb
shlb
not
cmc
cs
jbe
dec
sub
fwait
cli
jb
dec
jp
push
pop
movsl
add
and
rcll
stc
and
xchg
add
dec
aas
sub
lods
sahf
test
push
movsl
xor
cmpsl
inc
mov
xor
ljmp
mov
mov
call
mov
in
pop
mov
mov
mov
sub
dec
jnp
mov
icebp
sbb
cs
enter
cld
push
ret
cmovge
push
mov
sbb
aad
mov
cmc
mov
outsb
hlt
xor
or
stos
jp
out
sahf
mov
mov
idivl
fwait
pop
mov
mov
les
jge
cmp
test
fimull
or
imull
inc
mov
movsb
out
mov
cwtl
subl
xchg
negl
sub
adc
or
insb
mov
jo
out
or
and
dec
scas
mov
cld
add
js
jo
js
adc
cmpl
jo
shrl
mov
adc
nop
mov
in
mov
xor
fcoml
adc
sbb
insb
in
sub
and
and
subl
faddl
stos
cltd
loope
mov
call
or
jg
adc
aaa
mov
inc
sbb
int
enter
shll
out
push
dec
cmp
push
jae
and
mov
insb
dec
jmp
ja
xor
aad
jp
comiss
das
cmc
jne
cld
rcl
mov
scas
pop
mov
pop
clc
mov
mov
pushl
adc
mov
mov
daa
dec
push
mov
pop
push
icebp
ja
or
xor
rcrb
lods
dec
cmp
std
mov
inc
push
lods
fwait
lds
sbbl
pusha
jno
push
mov
ret
push
cmpb
outsl
push
leave
mov
outsl
int3
jo
movsb
and
repnz
int
xchg
dec
clc
sub
ficoml
mov
jne
jbe
xchg
push
xchg
pop
insl
inc
or
repz
negb
cmpsb
shrl
cli
mov
aam
or
xchg
xchg
adc
xor
adc
into
stc
xor
jecxz
pop
lock
mov
sbb
pop
jecxz
inc
sub
scas
cmp
imul
mov
orb
pop
mov
jg
cmp
test
dec
sbb
lret
pop
xor
unpckhps
mov
lock
mov
mov
loop
and
jbe
bnd
iret
or
lds
lret
aad
pop
push
xlat
mov
xchg
xlat
lods
mov
push
ss
mov
sbb
sub
ret
xorl
adc
push
and
sbb
sti
mov
xchg
cmpsl
addr16
dec
scas
pop
pop
mov
dec
push
adc
movsb
pop
aas
sub
sub
popf
mov
sub
mov
int
mov
inc
cltd
cld
in
insb
aaa
mov
shll
in
push
gs
add
adc
or
pop
sub
pop
sti
sbb
sub
pop
cmp
mov
flds
movsb
pop
aas
or
inc
lahf
jge
lahf
stos
or
jnp
mov
mov
or
sub
mov
aam
hlt
or
adcl
mov
inc
outsl
or
jbe
es
pop
setae
mov
lods
pop
push
inc
xor
cmp
iret
dec
popa
mov
push
cmp
or
jb
pop
insl
imul
xor
mov
xchg
sub
cmpb
xchg
adc
cmpb
jb
inc
cmp
jnp
mov
cmc
push
icebp
fidivrl
stc
mov
js
jno
sbb
mov
inc
es
shrb
js
lock
popf
inc
pop
mov
pop
sub
outsl
dec
into
adc
test
push
icebp
xor
loopne
out
jne
sub
cmpsl
sbb
out
xchg
and
das
int
hlt
test
test
jae
dec
sbb
dec
cltd
xor
neg
ret
mov
dec
roll
icebp
cmp
mov
rcll
and
jb
nop
and
xor
rcr
jg
fs
icebp
pop
mov
cmc
testl
mov
mov
and
clc
mov
sahf
sbb
mov
cmp
movsw
pop
call
xchg
lods
pop
mov
repz
xchg
add
sti
fbstp
jmp
push
mov
mov
mov
mov
mov
testb
stos
or
lcall
mov
add
inc
iret
lea
xchg
xchg
call
jle
xor
xor
data16
iret
arpl
mov
sub
enter
imul
inc
inc
cmp
popf
pop
sbbb
cmpsb
rolb
xchg
sbb
push
xchg
lahf
inc
adc
jmp
and
push
mov
push
lea
in
dec
or
jo
push
push
enter
mov
push
iret
or
adc
sub
pusha
jmp
rolb
dec
dec
cmp
sahf
push
xchg
add
pushf
push
push
xor
and
mov
xor
decl
jg
mov
sbb
mov
mov
clc
andb
enter
je
sub
inc
sub
adc
and
push
and
decb
adc
lret
fnstsw
fbstp
lahf
cmpsb
push
lret
mov
inc
pop
or
pop
xchg
sub
ljmp
xchg
int3
gs
xlat
cmp
jbe
outsl
mov
out
out
mov
lahf
jg
rorl
rcr
das
inc
add
push
inc
mov
mov
dec
jns
ljmp
mov
shrl
out
scas
pop
or
pop
stos
and
xor
lods
pop
dec
rcr
mov
jns
pop
arpl
mov
inc
dec
dec
inc
xchg
sub
mov
push
sbb
pop
sti
xor
lea
imul
adc
cmp
inc
mov
jo
jecxz
neg
mov
mov
or
outsb
insb
sysenter
mov
mov
arpl
out
dec
shrb
out
filds
ljmp
or
jmp
push
jg
int3
dec
out
add
adc
out
ret
cmpb
lret
dec
sbb
ret
leave
pushf
push
adcl
push
cld
and
scas
mov
xchg
leave
and
test
fbstp
push
sbb
pop
stos
mov
repz
mov
testl
and
jmp
sahf
cmp
push
data16
movsb
popa
movsb
stos
int3
adc
push
xchg
pop
movsl
dec
bswap
dec
push
imul
inc
dec
movsb
ljmp
cmc
or
xchg
mov
or
mov
xchg
push
popa
or
mov
test
adc
xlat
out
test
push
testb
rcl
push
sub
shlb
or
jl
mull
testl
dec
enter
test
sti
xchg
mov
dec
mov
scas
adc
lea
sub
outsl
xlat
push
test
pop
hlt
jle
push
testb
cs
xchg
mov
mov
fidivl
push
cmp
xor
movsl
push
and
xchg
gs
inc
or
xorb
jbe
pushf
mov
cmpsl
xchg
cmp
dec
ljmp
movsl
jne
in
xor
test
mov
dec
inc
or
cld
dec
mov
mov
xchg
fsubrs
mov
sbb
cmp
add
stc
repnz
push
and
mov
push
ljmp
outsl
or
call
je
movsb
jp
jecxz
xor
mov
mov
cld
or
xorb
stos
es
test
popa
inc
dec
mov
xchg
xor
hlt
call
dec
sub
fldcw
dec
outsl
mov
inc
ficomps
jnp
adc
das
gs
adc
pop
jno
adc
add
fists
sbb
xor
bound
insb
pusha
dec
pop
sub
cmpsb
pop
pop
push
mov
adc
jns
fsubrl
scas
xchg
frstor
in
inc
xor
push
mov
jb
fisttpl
sub
push
sub
add
je
jns
pop
bound
insb
lret
jns
fldz
adc
dec
fistpll
jecxz
add
xchg
push
mov
popa
sub
call
shl
cmp
popl
dec
outsb
and
lret
rclb
mov
mov
fcomps
daa
sbb
add
cmp
loopne
push
cwtl
cmp
cmp
pop
inc
outsl
bswap
ljmp
ss
insb
dec
or
xchg
or
mov
xor
xchg
push
push
fldl
pop
mov
push
or
sbb
test
mov
pop
cmpsb
xchg
lahf
fs
push
mov
movsl
pop
push
jne
inc
mov
pusha
fmull
mov
add
adc
xlat
into
xchg
pop
mov
jmp
shl
push
inc
xor
in
fwait
out
adc
lret
fcmove
mov
push
pop
sti
xor
sahf
in
fwait
lea
and
test
jle
mov
inc
inc
mov
das
clc
add
xor
add
xchg
std
arpl
sahf
lret
inc
cli
push
jns
or
add
cmp
insb
out
sub
cltd
movsb
cs
cmp
push
xor
sub
xor
hlt
outsb
movsl
fcompl
adc
pop
ds
test
nop
lods
insb
push
adc
dec
stos
ljmp
xor
dec
mov
cmp
jmp
cmp
movups
pop
mov
stos
lret
jge
inc
rclb
cmpsl
sub
pop
and
mov
xchg
loop
sbb
icebp
add
call
mov
popf
mov
sbb
enter
popf
and
pop
pop
inc
cmp
ja
push
mov
inc
jo
inc
jb
cli
and
xchg
andl
mov
adc
push
negl
xlat
push
jg
add
jge
sti
mov
cmpsb
pop
add
cld
inc
xchg
jl
icebp
mov
adc
mov
push
inc
xlat
out
shrb
sbb
xlat
pushf
bsr
rcrl
mov
push
xchg
jo
inc
mov
mov
bound
shlb
adc
das
addr16
std
dec
push
jmp
jb
hlt
cld
and
lods
fdivl
pop
sub
and
lods
mov
push
lods
test
aad
sbb
fstpl
sub
je
sahf
cmp
mov
ljmp
mov
out
xorb
mov
lcall
cwtl
xor
jp
cmpb
out
dec
inc
mov
sbb
es
mov
sub
mov
shr
sbb
lds
adc
mov
js
pop
fdivr
and
psllq
mov
fidivs
mov
nop
repz
pop
sbbl
dec
stos
cmp
or
pop
pop
and
inc
aad
mov
adc
mov
fistpll
cmpl
push
rolb
sub
add
enter
ss
xlat
ret
mov
and
push
pop
inc
mov
sbb
rorl
push
fsubrp
mov
popf
jecxz
dec
test
cmc
int3
pop
aam
mov
sub
adc
and
rclb
outsl
sbb
mov
in
pushf
and
ljmp
mov
sbb
push
xor
jae
sub
adc
leave
repz
testb
imul
jae
jmp
or
aad
sbb
lock
xor
mov
jno
sahf
cmp
dec
out
or
or
ss
lds
cmpsb
sub
add
movsl
stos
aas
mov
sti
xchg
sbb
mov
psadbw
jb
inc
mov
mov
sub
jns
dec
inc
jnp
and
or
imul
sbb
push
scas
sarb
pop
in
push
mov
mov
cs
out
roll
xchg
and
loopne
jns
xor
loop
mov
scas
xchg
jb
mov
dec
aad
xchg
push
repz
xchg
cmp
ret
sbb
sub
mov
push
ljmp
sbb
negb
popf
outsb
jl
pand
pop
daa
sahf
das
sbb
adc
cs
lock
mov
cmp
sub
pushf
fisttps
pop
pop
fisubl
xchg
scas
push
lea
mov
xlat
loopne
movsb
fmull
push
and
pop
or
pop
icebp
sub
and
pop
xlat
inc
xor
out
dec
pop
out
roll
xor
das
cld
sbbl
outsb
out
adc
sti
insl
fnstcw
ret
sub
in
inc
push
jne
cmp
cs
xor
dec
xor
sub
mov
aam
jmp
xchg
mov
pop
lret
movsb
push
mov
dec
add
outsb
jle
push
outsb
mov
mov
fisttpl
cmp
lahf
filds
pop
lcall
mov
jo
data16
aad
insb
shufps
mov
pusha
pop
lcall
or
sbb
movsb
mov
pop
aaa
xor
xor
or
repz
sub
outsl
nop
popf
xchg
mov
mov
fmulp
out
popl
mov
clc
rolb
sbb
roll
mov
int3
or
aaa
inc
mov
sub
pop
mov
or
scas
fmuls
cmp
scas
sbb
gs
xor
idivl
andb
negb
pop
pop
sub
pop
movsl
icebp
ds
rclb
loop
mov
shrl
or
cmpsb
dec
andb
shlb
mov
sarb
mov
dec
adc
and
push
in
movsb
inc
lods
out
cmp
sti
dec
jae
jb
cmpb
aam
btc
inc
push
js
dec
hlt
test
sub
das
imul
pop
push
inc
cmp
out
js
pop
cwtl
jecxz
arpl
or
fcompl
jg
inc
and
pusha
addr16
cs
rcr
cmp
es
inc
shlb
inc
dec
and
mov
sub
fbstp
push
xchg
dec
outsb
mov
jo
or
aad
sahf
adc
xor
or
jno
or
out
cmpsl
jnp
mov
adc
addl
int3
xor
adc
or
mov
ret
pop
mov
popf
shrl
int3
outsl
dec
mov
mov
pop
mov
mov
sahf
mov
mov
ret
inc
push
out
movsl
mov
cs
pop
in
hlt
into
dec
xchg
jns
pop
xchg
mov
cmp
or
jo
es
aaa
enter
or
sub
fucomp
inc
fwait
jns
cmp
jno
push
pop
push
cmpsl
imul
mov
scas
addr16
mov
jecxz
mov
loopne
lock
adc
das
adc
cmp
push
xor
lahf
test
lret
jl
icebp
mov
pushl
add
insb
mov
call
mov
les
hlt
lea
cmp
sti
pop
inc
mov
dec
xorl
and
jnp
sarb
dec
xchg
mov
loop
add
or
mov
sbb
pop
jns
push
dec
add
push
xor
cmp
loope
mov
mov
arpl
fisubrl
nop
or
pop
push
mov
insb
scas
in
jg
arpl
into
jge
mov
mov
inc
stos
inc
mov
jmp
hlt
or
mov
es
or
ret
and
dec
mov
outsb
lcall
je
je
aad
fldcw
sbb
push
lret
sti
add
scas
call
insl
bound
fwait
sub
test
mov
rcl
ret
jp
movsl
fldl
mov
xchg
xor
orl
rol
pop
cmp
add
dec
in
ficomps
cmp
out
lcall
pusha
xor
scas
outsb
mov
xchg
lods
pop
movsb
mov
push
aad
mov
adc
jno
mov
pusha
out
jmp
sub
mov
rcrl
pusha
xor
sbb
sub
imul
mov
jmp
sbb
mov
testl
mov
xchg
pop
outsb
inc
push
or
into
lahf
xchg
mov
mov
and
dec
inc
or
sbb
cmc
shl
cltd
insl
fistps
mov
mov
mov
lahf
inc
xor
lods
sub
rclb
daa
popa
adc
sub
outsl
lret
dec
jno
fisttpll
jne
lods
sub
pop
push
sbb
dec
push
scas
cltd
jo
cmp
mov
pop
and
sbb
inc
testb
subb
lods
imul
pop
sbb
cmp
movsb
fldl
pop
mov
out
cmp
mov
sub
fistpll
jno
cld
push
jae
cli
dec
popf
mov
cmpsl
cmpsl
test
ljmp
jmp
xchg
and
aad
fists
mov
subl
arpl
mov
dec
movsl
push
pop
mov
and
stc
cmp
sbb
pop
xor
loope,pn
add
pop
pop
pop
stc
shl
gs
fldcw
popa
and
xchg
int
add
xor
repz
dec
jp
or
stos
bound
sti
popa
push
popf
jno
sub
mov
xchg
bound
mov
jne
lret
mov
lea
sbb
jae
fsubs
rcrl
cmp
xor
lock
dec
pushf
xchg
daa
jle
mov
nop
or
sub
call
cmp
into
jge
test
nop
and
jne
dec
inc
dec
sub
jp
fsts
pusha
adc
stos
sbb
mov
xchg
jo
pop
or
call
pop
inc
mov
push
roll
fs
xlat
jl
mov
sbb
mov
das
iret
jecxz
jns
add
dec
or
adc
adc
mov
lock
jbe
cmpsb
rcrb
jbe
ja
aad
out
ss
jecxz
xchg
pop
xor
stc
bound
movsl
gs
imul
scas
fs
mov
add
fbld
gs
lret
ds
push
cmpsl
push
adc
push
stos
stos
in
sbb
lock
ds
pop
adc
mov
cld
pop
fwait
icebp
or
rol
push
mov
hlt
mov
lods
dec
inc
mov
nop
daa
popf
add
sti
enter
push
sub
js
pop
repz
mov
pop
jmp
pop
xchg
bound
into
dec
fdivp
cs
inc
rcll
aad
dec
andb
jne
les
fmul
imul
pusha
cltd
sub
xor
push
fs
lds
jae
sub
call
sbb
sbb
in
addr16
leave
mov
adc
pushf
vmwrite
jp
xchg
icebp
and
shl
inc
mov
inc
mov
xor
cmp
sub
push
jl
xchg
loope
aad
cmp
jmp
fucomip
shr
dec
ljmp
je
pop
adc
repnz
aad
pop
jb
sahf
mov
imul
push
mov
cld
mov
dec
fs
sub
das
dec
and
jg
test
or
popf
mov
stos
mov
inc
adc
jbe
cmp
ljmp
adc
repz
das
stos
inc
jns
add
lods
sbb
inc
pusha
les
mulb
mov
imul
pop
xchg
adc
push
sbb
add
mov
enter
jmp
test
ja
sub
sbb
jl
and
dec
jp
sub
cmp
xor
out
lods
jno
push
and
jmp
mov
mov
imul
adc
adc
xchg
add
pop
sub
xchg
push
xor
mov
daa
jo
jne
push
cmp
push
stc
loop
das
into
cmp
test
xlat
repz
popa
sub
push
out
repnz
sbb
arpl
cs
movsb
adc
xlat
mov
add
aaa
jno
int3
fst
test
mov
jns
mov
jge
mov
testb
xchg
push
adc
repz
xchg
jp
in
icebp
inc
in
in
fs
dec
xor
repz
leave
jb
fidivrl
pop
inc
mov
sub
loopne
jl
inc
jp
lret
and
push
ds
cmp
out
add
repnz
sbb
xor
jp
adc
faddl
fsub
jecxz
pop
in
push
fsubrl
jb
xor
stos
and
cmpsb
out
xorl
out
push
test
xlat
leave
mov
lods
push
mov
inc
jb
push
push
inc
xchg
fnsave
fisubs
scas
notl
movl
mov
mov
sbb
ljmp
cmp
int
push
pop
jne
push
es
xor
push
lret
stos
jecxz
mov
loopne
out
outsb
xor
insb
xor
inc
push
lock
test
push
fwait
inc
pop
push
mov
nop
sub
js
xchg
lea
icebp
data16
testl
pusha
and
int3
aas
inc
xor
sub
out
pusha
aad
data16
in
sub
mov
sub
test
icebp
pop
pop
xor
dec
mov
xchg
xchg
cli
stos
in
jge
pop
jb
or
stc
fxtract
sub
inc
pop
inc
adc
push
cld
mov
mov
adcl
sbb
ret
add
xor
arpl
pop
xchg
sbb
jne
sbb
inc
mov
xor
and
pop
dec
sub
in
iret
rclb
clc
fbstp
popa
rorl
imul
sub
repnz
repnz
xlat
test
loope
imul
mov
or
inc
fcom
fistpll
mov
cltd
divl
loop
insl
sbb
lahf
push
mov
pop
popf
mov
out
push
dec
and
loope
stos
xchg
andl
jns
or
sarl
fiaddl
pop
mov
sbb
enter
aaa
inc
lods
fucomp
push
push
add
leave
cli
lea
jb
popf
xor
fldenv
sbb
les
shr
mulb
adc
sbb
cmpsb
clc
adc
clc
cli
hlt
lods
jns
push
adc
jne
pop
adc
sub
cs
lret
rcll
jecxz
mov
cwtl
jne
into
mov
sub
out
xor
pop
shll
cmp
or
xor
in
shr
xor
mov
jmp
call
cmp
jne
outsb
popa
cmp
pop
pop
leave
mov
inc
push
cs
fildl
pushf
pushf
nop
mov
ljmp
xor
stos
fs
enter
popa
fsts
aam
mov
xchg
cmp
adc
pop
fwait
aas
or
dec
mov
mov
fwait
cmpl
movsb
aam
and
out
ds
jnp
in
shll
loop
sub
dec
or
mov
mov
jge
add
lcall
mov
inc
push
insb
aaa
mov
out
ds
sub
out
lods
lahf
pop
outsb
xchg
dec
and
and
scas
das
fs
lock
fnstsw
pop
or
and
sbb
adc
sbb
stos
out
pop
sub
cmp
adc
icebp
test
jne
mov
test
sbb
inc
mov
fnsave
add
inc
mov
push
cli
lods
mov
xchg
bound
jmp
dec
push
mov
cmpsl
mov
cltd
mov
dec
dec
ss
test
aas
jmp
adc
out
sbb
stos
pop
mov
mov
dec
add
mov
aaa
outsl
sub
adc
xor
jge
lahf
pushf
dec
lret
pop
or
cmovns
int3
movsb
sub
test
movsl
sbb
andl
pop
loope
add
movsb
mul
pop
adc
or
mov
mov
dec
jge
jl
scas
pop
out
cmpsl
adc
dec
mov
je,pn
cmpsb
orl
push
xchg
mov
inc
aam
cld
mov
pop
imull
ret
shlb
imul
or
int
in
sbb
cmp
and
xchg
enter
mov
subl
in
cltd
jl
shl
lods
add
nop
ret
fimull
test
ljmp
add
jne
ficoms
adc
mov
cmp
rol
mov
pusha
mov
lret
mov
jmp
idivl
xchg
aaa
outsb
pusha
dec
sub
jmp
scas
cs
cmp
rorl
pop
xor
cmp
int3
shlb
scas
and
testl
adc
pop
pusha
ja
jae
xor
mov
cwtl
and
xor
shll
dec
cld
mov
cli
fwait
pop
mov
je
pop
mov
jge
mov
stc
pop
ret
adc
lds
xchg
and
adc
sub
jnp
and
jl
mov
clc
jne
xchg
adc
pop
nop
ret
decl
into
or
jnp
fldcw
pop
jecxz
shlb
cmp
scas
pop
jo,pt
into
xchg
xchg
test
rorl
dec
xchg
mov
insb
inc
inc
sub
jecxz
arpl
jmp
add
jg
xchg
into
addr16
cmp
popf
sbb
test
pop
mov
push
stos
es
adc
das
mov
mov
int3
inc
aad
push
or
js
sub
inc
inc
js
ja
push
push
int
je
mov
add
ljmp
mov
xlat
and
cmc
andl
xchg
dec
in
jl
or
pop
mov
hlt
mov
call
fsubs
adc
push
cli
test
jle
xchg
mov
ljmp
xchg
pusha
scas
and
mov
xchg
in
or
adc
pop
mov
push
jo
sahf
out
mov
or
cmp
movsl
jmp
sti
out
fdivrs
and
pop
les
cmp
jae
loope
inc
mov
data16
jae
inc
repnz
movsl
and
repz
gs
enter
push
sub
mov
jle
fisubs
lock
sub
outsl
cs
ret
pop
xchg
mov
and
test
dec
aam
hlt
sub
call
daa
xchg
xchg
lock
outsb
test
or
lcall
mov
add
test
jmp
jno
push
aad
jg
dec
cmp
mov
xor
jae
ret
mov
mov
cltd
out
mov
les
movsb
inc
mov
cmpsb
daa
add
scas
push
outsb
inc
cli
loop
add
inc
pusha
gs
dec
push
and
inc
xlat
mov
fistps
dec
xor
xchg
jecxz
jb
pop
mov
and
test
es
xchg
dec
cmp
insb
push
xor
insb
and
add
inc
je
pop
aam
pop
pop
ljmp
in
in
cmpsl
subl
jecxz
pop
xchg
cltd
movsb
mov
dec
and
mov
pop
sahf
mov
pop
test
sbb
int
aam
lret
mov
jmp
push
mov
js
push
or
adc
shll
aaa
outsl
lds
mov
add
dec
cmp
aad
xor
mov
call
inc
mov
lret
idivb
xchg
aam
out
rorl
cmpsb
push
sub
loope
adc
xchg
jl
dec
inc
add
mov
test
fiadds
sbb
insl
lock
imul
cmp
scas
xchg
loope
cmpsl
in
arpl
jo
jp
sahf
arpl
movsb
sbb
push
push
jne
loopne
movsl
insl
in
fdiv
mov
mov
jecxz
fisubrl
movsb
cli
iret
jle
gs
mov
mov
cmp
jge
aaa
mov
cmp
mov
dec
xchg
je
jp
dec
mov
xor
or
mov
aas
xor
icebp
pop
pop
cmp
sub
addl
and
sahf
jo
int
xchg
push
loop
or
inc
add
lret
jo
hlt
pop
cli
fldcw
xchg
pop
scas
adcb
test
push
nop
push
repnz
add
inc
andl
mov
xchg
cmp
sub
add
es
inc
dec
cmpsl
inc
jmp
push
push
in
adc
xor
sbb
jmp
popf
leave
push
dec
jne
clc
jge
push
shlb
pop
movsl
xchg
into
cmp
stos
sbb
loope
push
pop
mov
and
adc
ja
rorl
push
ja
insl
push
mov
out
lcall
adc
test
bound
pop
jmp
dec
test
cmpsl
push
add
and
pop
push
lret
jne
mov
adc
fwait
fwait
stc
movsl
shlb
leave
pop
je
arpl
in
ja
cmpsl
fdivrl
in
fistl
imul
addb
call
push
mov
push
mov
inc
inc
pusha
push
iret
xchg
icebp
and
xchg
mov
ljmp
mov
xchg
test
xor
mov
and
and
lcall
jo
pop
inc
xor
sahf
into
adc
adc
xchg
mov
clc
fwait
xchg
les
xor
pop
fcomps
sub
xchg
add
jecxz
mov
das
dec
sti
cmp
jbe
xor
dec
data16
lods
adc
std
iret
jns
adc
jp
mov
insl
scas
pop
cmp
je
cmp
cmc
mov
test
mov
icebp
imul
cmpsb
adc
in
fcomps
movsb
mov
arpl
adc
sub
ret
pop
shrb
or
adc
inc
paddd
pop
repnz
ffree
sub
sti
sbb
jae
stos
dec
xor
mov
push
fsubr
inc
ret
out
mov
jno
pop
mov
mov
xchg
mov
pop
mov
inc
es
pop
loope
mov
xchg
add
add
xchg
mov
or
xorb
decl
adc
mov
outsb
aaa
mov
xchg
mov
sbb
pop
lds
or
in
orb
test
icebp
and
cmp
andb
fidivs
sbb
lcall
ds
sbb
and
or
xor
xlat
xor
jle
or
lret
cs
fimuls
push
aas
aas
push
mov
sti
test
or
out
add
mov
push
xchg
aad
sbb
adcb
fists
fidivrs
dec
sbb
fwait
and
add
xor
shrb
jl
in
and
adc
mov
pushf
cltd
imull
add
jnp
sbb
mov
dec
sbbb
mov
daa
arpl
dec
adc
xchg
loop
cld
xchg
adcb
and
fldl
cmp
repnz
fists
xchg
dec
loopne
dec
push
push
insl
sbb
cltd
loope
push
inc
insb
add
rcrl
mov
je
aam
jmp
push
outsb
dec
push
das
decb
pop
or
shl
mov
add
add
cmp
sbb
ja
jne
daa
into
data16
jne
out
es
dec
andl
ja
scas
mov
es
les
push
inc
nop
fbstp
mov
cmc
mov
mov
push
daa
dec
mulb
push
ficoml
sub
dec
fcmovnb
jge
test
sub
lcall
pop
mov
pop
xor
add
rol
out
xor
rcr
or
mov
iret
jae
cli
fwait
repz
in
js
xchg
imul
xor
mov
pop
xchg
sti
mov
int
nop
xchg
outsl
lcall
mov
je
mov
stos
scas
ret
outsb
mov
or
in
loopne
punpcklwd
mov
sbb
fstpl
xchg
aaa
repz
popa
inc
jg
ljmp
outsl
xor
stc
loope
fdivl
fisttps
fsubrp
rolb
lcall
imul
xchg
pop
xor
mov
int3
xor
out
outsl
xchg
or
loop
add
adc
cmp
inc
pop
xchg
fdivrs
xor
ret
xor
fimull
stos
push
mov
inc
mov
mov
loop
cltd
in
and
out
scas
pop
dec
xchg
leave
lret
pop
push
loop
jge
loope
cli
mov
call
or
xchg
xor
clc
jp
shrl
xchg
test
sub
iret
dec
out
faddp
mov
mov
loop
mov
adc
repnz
jge
fbstp
pop
jl
and
jge
xor
mov
fcoms
aad
push
pop
stos
imul
es
xchg
mov
nop
pop
sbb
sarl
jge
repnz
loop
shlb
fidivs
rcrl
daa
out
ss
jmp
out
icebp
cld
adc
inc
and
push
sarb
lods
mov
addr16
clc
scas
sbb
fsubr
cmpsb
cmc
mov
xchg
jns
pop
int
pop
xlat
xchg
cltd
mov
out
jecxz
push
loopne
mov
stos
pop
pushf
movsl
and
jae
sub
jb
jb
inc
daa
rorl
imul
ljmp
leave
pop
gs
jno
cmp
stc
insl
nop
cmpsb
aas
popa
scas
mov
mov
sub
add
or
or
fwait
shll
mov
xor
mov
mov
out
adcb
stos
or
jae
xlat
lods
js
xor
or
adc
push
sub
xor
in
ror
jae
pusha
clc
sub
cmp
xor
mov
xor
inc
lret
rorl
cwtl
mov
scas
lahf
fcomps
rcrl
inc
scas
imul
sti
je
and
xor
sub
xchg
movsb
addr16
xchg
mov
enter
inc
in
ds
cmpsl
jge
rorl
lcall
jecxz
iret
jge
inc
dec
fidivrs
mov
lods
xchg
mov
push
ret
lcall
les
pop
aas
movsb
insb
shrb
pop
hlt
pop
push
sub
rclb
cmp
outsb
stos
xor
rclb
or
sbb
mov
pop
xor
push
cmp
inc
jmp
sbb
push
sbb
or
ror
neg
sbb
out
mov
pop
and
jbe
cli
inc
push
loop
test
shll
xor
mov
cwtl
or
fs
xchg
sbb
clc
pop
dec
test
ss
add
ss
inc
sahf
ret
fdivs
jge
mov
or
ret
push
idivl
adc
adc
in
push
outsb
sbb
sbb
inc
pop
loopne
mul
or
in
std
add
cmp
sbb
add
add
js
jge
cmp
cmp
sub
mov
pop
lret
lcall
mov
in
fnstcw
sbb
push
stos
cld
outsl
cmp
push
mov
jmp
pop
jae
leave
and
jl
xor
pop
cwtl
shrl
ret
xor
jne
and
mov
push
mov
or
test
test
cmp
fsubl
mov
nop
aad
jmp
loop
shl
xlat
fdiv
mov
stc
jo
fs
stos
mov
iret
push
pop
pusha
mov
push
repnz
test
enter
test
in
dec
xor
xor
mov
lcall
andl
or
lea
loopne
sub
test
cmp
cs
nop
jne
mov
cld
in
das
fistpl
adc
or
jmp
sbb
push
or
sub
andb
test
filds
roll
add
jge
mov
in
dec
call
fcompp
jle
add
fmuls
dec
dec
fs
test
or
lea
hlt
out
inc
jge
bound
jle
movsl
hlt
push
push
jecxz
mov
pop
cld
cmp
jp
cmp
and
mov
pop
adc
and
mov
inc
adc
and
sarl
stc
stos
ljmp
jns
imul
pop
sbb
mov
out
rcll
imul
pop
xchg
sub
mov
arpl
push
sub
stos
push
or
inc
notb
adc
ss
pop
pop
popf
mov
mov
pop
mov
and
sahf
aad
jne
cmp
fists
adc
sub
faddl
add
mov
cmp
rclb
jo
cli
ljmp
pusha
addr16
stos
push
jle
test
jcxz
xor
das
cmpsb
push
iret
js
cmpsb
repnz
out
sbb
fsubrl
test
movsl
scas
mov
loope
jp
or
aaa
dec
ret
dec
test
clc
dec
dec
gs
adc
into
movsb
jmp
aam
movsl
out
add
lea
push
pop
add
jg
jg
ret
xchg
fs
inc
fldl
mov
jmp
aaa
pop
mov
and
fdivrl
xor
sahf
mov
push
loope
dec
movsb
jge
das
mov
loop
repnz
sub
add
adc
xchg
test
stos
lods
jne
mov
cwtl
jle
jns
inc
mov
push
xlat
sbbl
int3
push
in
rol
inc
cmp
mov
addl
jb
fidivrl
out
cmp
adc
repnz
adc
ficoml
and
or
popa
sbb
into
mov
fld
ret
cmp
in
clc
testl
rorl
mov
arpl
scas
or
fadds
pop
xchg
cmpl
in
xor
aaa
mov
int
sub
push
stc
hlt
cmpsl
xchg
add
dec
pop
cmp
fimuls
sub
addr16
rclb
imul
pusha
movsl
popa
and
in
imul
cs
shr
cmpxchg
lret
mov
sub
cld
sbb
mov
leave
ja
xchg
jne
xor
push
mov
je
insl
sbb
jecxz
and
sub
scas
sub
ficomps
mov
movsb
outsl
jecxz
hlt
cmp
jl
jg
bound
mov
out
mov
scas
xchg
inc
pop
mov
xor
adcl
or
mov
inc
loope
jecxz
je
lods
aad
jnp
xchg
push
in
dec
xchg
mov
ret
push
rorb
pop
scas
int3
cmp
push
sub
dec
les
jecxz
in
ja
pop
cmc
mov
std
sbb
inc
fstps
mov
or
adc
aad
clc
popa
cmp
xlat
pop
push
test
das
leave
fisubrs
lds
push
sbb
movsl
fisttpl
add
xchg
int
imul
insb
mov
sub
sub
mov
enter
pop
insb
in
jne
inc
push
aam
xchg
jge
mov
jns
xor
lods
gs
adc
add
add
pop
push
dec
andb
mov
pushw
mov
imul
sbb
icebp
cwtl
pop
insb
int3
inc
jmp
and
mov
jnp
pusha
push
fwait
mov
push
dec
push
stos
pop
pop
mov
imul
les
dec
cli
jae
xchg
imul
lahf
push
int3
popf
jmp
lret
fcmovu
pop
test
lea
outsl
dec
xchg
nop
pusha
add
cmp
sub
jp
in
mov
sub
sub
test
pop
ret
ficomps
fidivs
movsl
sub
out
push
push
push
push
repz
jle
fcmovu
or
lcall
push
xor
inc
test
pop
jmp
push
mov
arpl
hlt
sub
adc
cmpsb
ds
cmp
lock
push
std
imul
imul
cmp
mov
inc
and
iret
xor
test
adc
cmp
dec
ret
out
imul
add
cltd
push
loope
enter
mov
pop
push
cmp
pop
fimull
icebp
sub
imul
lret
daa
dec
pop
or
xchg
add
or
cmp
cmp
rcl
xchg
xchg
cs
jb
inc
jbe
sbb
adc
loop
ja
or
or
pop
nop
test
mov
mov
mov
pop
pop
push
hlt
sub
jecxz
hlt
dec
stc
xor
pusha
in
inc
test
cmpb
out
xlat
adc
sbb
xchg
push
sti
inc
lahf
aas
and
icebp
cld
xchg
add
mov
sbb
bound
outsb
icebp
call
ss
xor
das
push
mov
cmp
gs
lcall
mov
jp
or
fwait
jne
addr16
loope
stos
inc
push
cmp
ds
es
xor
std
mov
daa
xor
mov
and
dec
in
xchg
outsb
out
adc
mov
and
loopne
jge
aas
sub
cltd
adc
stos
sbbl
loope
push
jecxz
popf
jge
mov
adc
or
sbb
stos
sbb
and
adc
pop
in
lret
adc
xlat
pop
mov
mov
fiadds
fldt
jp,pn
lock
lds
xor
sub
adcb
rcl
jecxz
sbb
xor
xchg
xchg
aam
decb
insb
jl
mov
mov
pop
popf
dec
or
cmpsb
ficomps
mov
sbb
jo
lds
mov
testl
mov
int3
sbb
push
add
pop
loop
cmp
sub
mov
push
arpl
cmpsb
test
mov
jbe
lcall
add
fld
jecxz
lret
pop
or
loopne
shlb
shll
adc
frstor
pop
nop
sbb
lret
push
mov
cmpsb
test
dec
dec
scas
inc
inc
mov
mov
insl
xor
mov
lcall
pop
repnz
mov
imul
sbb
xor
fldenv
movsl
and
test
pop
cmp
pop
loope
js
pop
rcl
je
cwtl
dec
test
or
xorb
adc
dec
or
mov
push
mov
mov
sub
lahf
fcomi
gs
mov
and
mov
inc
dec
add
sbb
jno
lea
rcr
xchg
xchg
or
push
movl
lret
inc
scas
push
insl
inc
add
out
dec
subl
out
jae
aas
inc
jbe
pop
imul
cmp
sbb
fisubs
pop
mov
ljmp
dec
data16
call
dec
daa
push
fcoms
ja
loop
inc
sub
inc
fbld
jb
xor
mov
inc
in
add
pop
sti
in
push
lret
mov
mov
cmp
push
push
insl
lahf
pop
out
jne
popa
mov
pop
icebp
lret
pop
insb
stc
mov
popa
push
pop
or
push
adc
lahf
and
inc
lcall
dec
push
pop
mov
push
adc
mov
inc
inc
aam
neg
fldcw
lcall
rorb
int3
adc
xchg
clc
or
cltd
mov
push
pop
pop
sarb
push
je
js
loopne
lret
rorb
dec
loop
pusha
mov
jmp
fs
movsb
fchs
push
mov
les
fsubl
fimuls
dec
shlb
sti
push
fnstsw
mov
sub
mov
jne
enter
outsl
pop
jecxz
iret
inc
sub
in
test
sbb
insb
pusha
push
mov
mov
repz
push
jmp
faddp
xor
decb
xor
repnz
inc
hlt
lret
movsb
or
and
xor
sbb
mov
mov
jnp
push
outsb
and
je
stc
jl
lods
mov
roll
mov
mov
push
xor
mov
lahf
leave
sahf
in
outsb
mov
lods
mov
imul
mov
push
or
lret
pop
xchg
xchg
pop
in
call
mov
mov
xor
dec
in
fsubrl
adc
lret
fists
pop
ret
dec
or
addr16
sbb
scas
mov
xor
js
mov
adc
push
xor
and
sub
cmc
popf
add
dec
stc
cmp
fucomip
inc
idivl
scas
das
rol
int3
leave
sbb
cli
mov
std
loop
out
mov
inc
lcall
xchg
xor
pop
test
andl
or
xchg
stos
add
or
insl
or
sub
repnz
int
push
sahf
jb
xor
dec
ja
push
adc
sbb
into
test
cmpsb
or
xchg
cld
xor
test
xorb
mov
cwtl
mov
mov
cmp
push
loop
sbb
and
jecxz
test
xor
gs
loopne
call
shlb
lret
xchg
push
lret
pop
popf
or
test
mov
push
clc
out
or
mov
jnp
mov
out
orb
jle
mull
pop
jge
or
test
lret
test
mov
push
cmpsl
xor
inc
pop
into
or
add
fst
push
dec
dec
arpl
xlat
adc
jb
dec
mov
add
xlat
pushf
insb
cmpsl
cmc
mov
aaa
or
mov
aad
mov
rcrl
or
int3
dec
inc
outsb
inc
cmove
cmpsb
pop
xchg
and
xchg
cs
mov
dec
cltd
xlat
add
out
sti
outsl
jle
fcomp
jl
popf
pop
mov
jge
aam
jle
pop
jbe
adc
cmp
sub
xor
jo
loop
push
leave
xchg
aaa
imul
lods
lret
les
shrb
les
pop
rcrb
jp
push
js
std
push
test
aad
lea
inc
sahf
imul
inc
mov
cmp
jle
xchg
adc
jbe
cmp
inc
or
je
movsb
cmpsb
popa
das
addl
std
adc
and
rorb
xor
inc
sub
sub
mov
sub
test
lret
lret
lods
cmp
cmp
add
ret
ficomps
out
adc
adc
mov
pop
aam
and
movb
jecxz
mov
sub
jbe
inc
sub
mov
mov
jecxz
inc
in
lds
mov
shll
inc
insb
jb
jecxz
cld
pop
imul
mov
lock
fildll
fxtract
sbb
dec
mov
lcall
pop
subb
pop
leave
aas
pop
mov
jb
and
jge
xchg
and
ds
add
xchg
fstpt
push
sbb
push
loope
xchg
cld
in
mov
fwait
dec
es
repz
mov
lock
loopne
mov
das
cmp
add
imul
scas
mov
jge
in
mov
jg
test
adc
pop
mov
mov
iret
jbe
std
cwtl
or
scas
out
lock
xchg
mov
mov
enter
sbb
dec
aaa
mov
pop
fnstenv
cmpsb
mov
push
cmp
loopne,pn
push
sbb
pop
jo
mov
adcb
mov
push
and
cs
add
dec
pop
outsb
and
and
mov
std
mov
mov
jns
daa
mov
and
iret
cmp
add
add
adcb
stos
stc
andl
pop
pushf
inc
stc
ljmp
cmp
imul
lock
mov
ret
jl
add
xor
mov
pop
lea
lret
jns
lahf
xchg
mov
pop
push
cwtl
fsubrs
mov
scas
pop
pop
inc
cmp
outsb
mov
add
int
adc
lods
cmpsl
pop
inc
dec
pop
cmp
jecxz
mov
fsubrs
pop
les
jmp
jno
mov
in
sbb
mov
hlt
jns
add
pusha
movsl
lahf
push
movsl
ret
dec
pop
mov
push
std
fidivrs
adc
and
lds
cli
mov
adc
fistps
push
enter
fdiv
cltd
cmp
push
pop
daa
sub
sbbb
imul
inc
nop
das
xchg
adc
daa
in
jo
inc
int
jmp
xor
out
mov
fistpll
pushf
add
in
iret
inc
call
sbb
movsb
cmp
lret
adc
fstpl
pop
jae
mov
xchg
int
push
aas
test
out
js
xor
out
ds
cmp
inc
shll
lret
je
xlat
roll
push
popa
pop
or
and
addr16
jcxz
mov
js
mul
cmp
mov
xchg
pop
inc
adc
pop
jecxz
jo
pop
sbb
jle
outsl
jnp
repz
cmp
popf
insb
or
xchg
dec
lds
pop
inc
cli
pusha
dec
dec
faddp
loop
ror
bound
out
imul
insb
pop
mov
push
or
adc
xor
xor
sbb
pop
pop
addr16
sub
dec
or
outsl
lds
fwait
add
cltd
mov
fdivs
fstl
xor
sub
dec
mov
xchg
mov
loope
leave
mov
data16
dec
out
test
add
sub
mov
jnp
into
push
sub
mov
pusha
addr16
cltd
adc
inc
insl
and
fstl
jno
mov
popa
leave
iret
scas
add
or
sub
mov
fs
rolb
js
repz
adc
and
vmovupd
stc
mov
insb
mov
adc
icebp
je
jmp
mov
hlt
mov
js
ds
nop
mov
xchg
dec
push
add
aaa
xor
out
outsb
arpl
mov
mov
cld
lock
jo
sbb
insl
ds
pop
mov
dec
push
xchg
mov
cmpsl
xchg
cs
xchg
int3
xor
pop
loope
lret
sbb
jbe
in
loope
jg
adc
pop
jno
xor
mov
pusha
fisttpl
push
fucomip
adcb
adc
dec
das
xor
je
adc
stc
push
xchg
mov
js
mov
jo
std
imul
add
andb
mov
cmp
daa
fwait
xchg
cmpsl
inc
outsl
outsl
or
jl
push
cmp
ret
mov
cmp
cmp
cmc
jnp
mov
inc
mov
adc
xor
out
jecxz
and
or
daa
add
test
jo
or
int3
xchg
pop
jecxz
sbb
testb
stc
jmp
cmp
rorb
sbb
cld
xor
les
pop
add
dec
enter
in
pop
sbb
mov
cmp
xor
sbb
cwtl
xor
sbb
adc
cmp
loop
clc
std
adc
sub
jmp
outsl
cmc
dec
cwtl
cmpsl
inc
jns
lcall
shll
dec
mov
xchg
mov
sarl
cli
mov
mov
iret
xor
mov
mov
sbb
and
icebp
mov
insl
xorb
int3
lods
repz
clc
or
dec
idiv
mov
cli
jae
mov
push
pushl
mov
adc
and
inc
jmp
pop
ret
push
lock
mov
mov
jl
scas
repnz
inc
test
rclb
push
pop
dec
and
add
aaa
dec
mov
test
add
xchg
cmp
and
outsb
movsl
push
pop
popa
mov
inc
call
out
outsl
sbb
push
push
fwait
mov
adc
push
sbbl
adc
adc
fistpl
and
pusha
inc
pusha
xor
bound
or
add
movsl
jo
sbb
stos
mov
subl
std
lods
mov
fcmovnb
xchg
cld
add
cmpsb
jecxz
sbb
or
mov
cli
mov
fistps
stc
jg
int3
add
dec
cmp
push
test
ret
dec
inc
test
jge
and
int
or
mov
dec
inc
pop
hlt
pop
push
pop
sbb
pop
sti
gs
jo
ss
je
movsb
shr
mov
mov
int
inc
dec
jp
mov
fstps
dec
cmp
out
pop
cmp
fistpl
dec
cs
movsl
cmp
sti
xor
and
inc
cmp
dec
add
xor
stos
jecxz
cmp
mov
push
repz
dec
repz
daa
ret
sbb
outsb
sbb
pop
test
pop
jbe
mov
setge
icebp
testl
push
add
and
iret
pop
sbb
pop
pusha
sahf
cmpsb
push
cli
out
fsubrs
mov
mov
loop
push
stc
jmp
lcall
and
jo
jecxz
or
dec
scas
loopne
stos
pop
outsl
out
lods
push
cmp
sbb
mov
sub
es
add
push
mov
jns,pt
in
push
lret
subb
add
xor
mov
and
or
cmp
dec
inc
sti
or
jl
adc
inc
std
iret
adc
fld
int3
nop
pop
add
pop
popa
jge
in
jne
adc
sbb
xchg
or
les
mov
pop
cmp
data16
ja
cmp
sbb
jbe
sbb
or
pop
and
mov
out
and
jno
bound
jbe
popa
dec
jo
outsl
fbld
mov
push
arpl
push
cs
mov
pop
lock
sub
aam
dec
jp
mov
fwait
mov
repz
adc
dec
outsb
aad
pushf
bound
adc
ret
ja
inc
aaa
or
ja
in
jnp
add
push
xchg
xor
xor
ds
mov
pushf
arpl
jne
int3
jl
ds
cmp
xchg
cmp
xchg
jp
mov
pushf
out
pop
push
xchg
ret
inc
inc
out
and
xchg
jg
jne
jg
loop
movsb
and
jbe
stos
xchg
mov
mov
cwtl
jne
adc
mov
mov
test
pop
imul
xchg
and
mov
jno
push
jne
popf
js
jns
pushf
dec
aad
mov
outsl
out
pop
lock
mov
aaa
test
hlt
mov
scas
adc
aaa
xor
loop
fld
rclb
adc
clc
push
negb
addb
cld
aas
pushf
test
fwait
les
pop
js
adc
push
push
cmp
lds
cld
mov
dec
ljmp
jb
sub
pop
les
xor
pop
sub
cli
iret
scas
idivb
jmp
cltd
xorl
sti
cld
aas
sub
clc
pop
mov
inc
daa
mov
dec
sbb
pop
jnp
push
out
jo
add
bound
es
xchg
pop
out
aad
adc
popa
ljmp
mov
addb
dec
and
add
inc
sbb
loopne
or
in
leave
jbe
pop
mov
sbb
rolb
mov
loop
testb
icebp
int
sbb
fisubrs
push
test
cltd
push
add
push
scas
cli
neg
sbb
xchg
repz
aaa
push
and
xchg
sbb
cmpsb
stos
aam
pusha
aaa
clc
insb
cmp
loopne
int3
cmp
inc
std
and
pop
pop
rolb
gs
call
lea
sub
and
and
test
mov
push
xchg
notl
inc
cmp
out
hlt
fsubs
rol
jne
stos
jbe
xchg
jp
test
icebp
pop
add
fmulp
xlat
add
pop
dec
sub
rsqrtps
jnp
scas
repnz
int3
ds
std
pop
out
push
lret
orl
out
daa
xchg
cmp
add
aad
cli
and
int
add
jg
dec
rcll
jbe
push
pop
mov
sub
jg
mov
push
or
mov
mov
enter
cmc
fisubs
xchg
and
pop
jmp
pop
and
call
bound
imul
out
sub
cmpsl
ds
and
pop
adc
je
mov
adc
out
jp
jl
sti
dec
aam
lcall
xor
push
es
in
std
fistps
sti
pop
ret
and
mov
out
inc
loop
jne
ret
stc
mov
paddusb
mov
std
outsl
movsb
cmpsl
or
jg
mov
sbb
pusha
les
iret
jbe
pop
mov
data16
imul
clc
and
push
add
dec
xchg
push
loope
mov
pop
mov
xchg
in
pop
rorb
test
scas
in
rcll
pop
jmp
hlt
cmp
sbb
movsl
sub
or
xchg
mov
iret
sub
pushf
jp
fiadds
mov
rcll
add
push
hlt
stos
push
ss
out
sbb
pop
dec
adc
cmpsl
jp
leave
mov
jg
insb
xchg
push
cli
push
mov
movsb
mov
mov
mov
xchg
mov
test
cmc
xor
mov
jbe
and
mov
popa
mov
dec
in
int
gs
daa
insb
bound
or
mov
pusha
and
std
xchg
pop
sub
repnz
pop
fisttps
sub
sub
out
je
bound
inc
icebp
out
cmp
xchg
stos
push
mov
mov
pop
xchg
test
push
outsl
add
sub
xor
sbb
push
and
pop
pop
xor
int3
xchg
aad
adc
mov
pop
sti
scas
cmp
mov
dec
mov
sbb
pop
push
fwait
cmp
mov
out
mov
lahf
mov
and
pop
repz
inc
rolb
inc
xchg
lahf
adc
pop
sbb
jae
or
inc
inc
idivb
scas
jo
inc
mov
nop
xchg
xor
popa
test
add
sbb
mov
jae
sbb
add
xchg
adc
jbe
addb
xchg
clc
sbb
insb
gs
mov
jle
adc
out
inc
in
jnp
mulb
mov
sub
stc
cltd
pop
sbb
and
cmc
fdivrl
jmp
out
cmpb
shll
cltd
and
lods
insb
inc
sub
pop
add
mov
adc
cmp
repz
ret
mov
cmp
cmp
cld
xchg
jb
cmp
jnp
pushf
sbb
mov
and
push
add
xchg
xlat
dec
mov
jl
mov
icebp
outsl
xchg
mov
jg
xchg
add
xor
push
pop
pop
and
in
inc
sub
sub
ljmp
cmc
or
lahf
adc
ds
jbe
lret
add
sbb
add
adc
fcoms
mov
push
lods
test
and
test
rcrb
test
movsb
stos
xchg
leave
pop
leave
iret
iret
sub
add
inc
push
and
aaa
mov
gs
mov
decl
cmc
xor
adc
xor
out
ljmp
adc
and
mov
gs
mov
fdivrs
enter
adc
cmpl
pop
mull
sahf
push
cmpsb
xchg
ja
mov
jb
cltd
insl
xor
mov
xor
cmp
mov
cli
adcb
popf
daa
push
jbe
mov
dec
lods
add
push
cltd
sbb
jne
nop
arpl
imull
icebp
out
outsb
dec
mov
dec
stos
push
mov
mov
fidivl
hlt
inc
ficompl
pop
cmp
sbb
frstor
orb
lods
lret
lods
cmp
adc
pop
test
or
test
mov
jge
fstl
mov
sbb
cmp
ret
push
aaa
push
and
mov
and
gs
jmp
dec
mov
pop
dec
pop
aas
xchg
mov
nop
lods
ja
in
dec
add
insl
repz
out
sub
add
dec
and
jecxz
dec
popf
lahf
test
mov
mov
xchg
dec
push
push
xchg
push
rcrb
add
addr16
push
push
nop
addr16
dec
mov
ret
movb
faddl
cmpsb
fidivrl
ret
push
mov
inc
or
cmp
jo
inc
sub
sbb
jnp
cmp
inc
es
mov
dec
mov
jns
in
xor
clc
aad
xchg
push
xchg
push
mov
data16
mov
adc
push
push
test
mov
cmp
lret
test
aam
mov
add
mov
xchg
cmp
aad
add
push
and
sbb
negl
aas
lds
and
jmp
sbbb
jae
xlat
iret
ffreep
cmpsl
pop
or
adc
jg
xchg
insb
sahf
mov
fisubs
sahf
pop
popf
mov
test
xchg
and
lea
jne
and
insl
fcoml
mov
es
test
and
hlt
in
jp
cmc
stc
adc
test
test
mov
xchg
cs
adc
push
and
jle
inc
jg
shlb
popa
nop
jl
mov
aas
jle
lcall
dec
mov
and
mov
mov
sbb
add
jmp
outsl
test
inc
mov
int3
sub
mov
xchg
andl
mov
ljmp
lods
rcrl
lea
sbb
inc
mov
adc
std
jge
movsl
hlt
fisubs
cli
mov
les
dec
add
jg
stc
sarb
xorb
pop
int
daa
cld
adc
or
pop
idiv
int3
std
call
add
push
jo
mov
aad
lahf
fldt
xor
jg
sub
mov
out
jns
or
pop
popa
mov
ror
bound
xchg
sub
push
faddl
push
leave
daa
jb
shll
xchg
pop
xor
mov
xor
mull
mov
cmp
movsl
mov
xor
xchg
jne
push
fnstenv
repnz
ja
dec
cmp
or
push
jge
inc
mov
iret
rcrl
sbb
xor
mov
mov
mov
jns
std
mov
dec
add
dec
xchg
inc
sbb
movsb
mov
lds
shll
shll
mov
cs
push
ds
pop
sbbl
arpl
xor
add
or
jnp
jle
adc
daa
or
pop
sub
orl
int3
lods
hlt
pushf
jecxz
pop
xor
sahf
lock
inc
mov
imul
aaa
sbb
adc
jns
cltd
cmp
xchg
into
inc
ucomiss
jnp
mov
inc
jmp
out
ret
add
push
mov
jae
clc
out
sbb
xlat
sub
fsubl
sub
std
push
xor
lret
sbb
ret
xor
jbe
push
adc
aas
or
clc
cmp
roll
add
decb
mov
outsl
stos
cmc
adc
adc
sti
pushf
push
mov
jp
sbb
mov
inc
fdivr
outsb
xor
jo
pop
shlb
bound
mov
outsl
icebp
jo
sarl
nop
imul
and
xchg
xchg
bound
insl
sub
mov
loop
inc
cmp
sub
dec
cli
sub
mov
xor
shl
aam
inc
cmc
or
and
pop
scas
outsb
mov
inc
test
jmp
mov
or
sub
movsb
xor
lds
dec
mov
popf
push
loopne
mov
mov
cmp
xchg
test
mov
mov
dec
push
mov
push
or
sub
fucomi
pop
scas
jns
inc
out
mov
sbb
jbe
fwait
gs
loopne
and
shrb
lods
cltd
fs
addr16
inc
out
mov
jle
stc
mov
cmpl
mov
lcall
inc
rcll
jmp
dec
push
xchg
mov
xchg
jg
sarb
jnp
or
push
mov
xor
push
fs
and
into
mov
lret
inc
testb
aas
inc
and
sub
dec
sti
adc
jnp
inc
dec
shrl
imul
scas
jp
cwtl
rcrb
mov
inc
push
lret
hlt
int3
lods
or
adc
xor
imul
or
sbb
loopne
leave
pop
cmp
mov
repnz
scas
sub
mov
mov
fdivrs
xchg
ja
push
in
fstl
lret
mov
pop
out
pop
pop
shlb
dec
and
aad
mov
cmpsb
inc
mov
mov
mov
lcall
adc
and
lock
inc
addr16
jne
mov
add
xor
lock
dec
rorb
addr16
stos
popa
sti
xchg
adc
cmpsb
mov
jle
mov
mov
data16
lods
jecxz
add
and
pop
js
mov
bound
dec
outsb
ljmp
scas
shl
sub
rcrl
in
mov
push
loopne
inc
mov
sar
cmp
push
cmp
adc
xchg
xor
mov
adc
int
xchg
cli
pop
or
insb
out
movd
cmp
outsb
lahf
push
repz
stos
in
sub
sbb
cs
arpl
cmp
lcall
scas
jmp
mull
xchg
xchg
xor
imul
pop
cmp
or
je
stos
mov
mov
mov
xor
imul
nop
xor
mov
mov
mov
mov
addr16
in
iret
cli
jne
jbe
mov
add
sbb
cmp
icebp
add
push
mov
aas
aam
stos
popf
pop
int3
sbb
inc
sbb
pop
cmp
les
rorb
pop
ljmp
jge
out
clc
insl
adc
and
sub
and
pusha
imul
push
lret
stc
xor
push
mov
popf
sbb
add
cwtl
jnp
xchg
and
cmp
lahf
xchg
and
js
ror
es
push
mov
fsubrs
push
lods
addr16
cmpsb
pop
sahf
in
or
arpl
mov
sbbl
add
jmp
pshufw
add
or
cmp
mov
mov
shlb
ja
imul
push
dec
mov
inc
rorb
cli
arpl
dec
outsb
mov
scas
cmp
addr16
mov
sub
iret
mov
jne
das
jo
cmp
andb
movsl
mov
jp
push
push
and
imul
jb
mov
out
lea
cmp
repz
sbb
inc
subl
pop
sub
xor
pop
inc
or
push
js
and
add
ss
sub
insb
mov
out
push
ficomps
mov
mov
or
fldpi
sbb
dec
inc
adc
je
adc
jl
jmp
add
out
pop
pop
xor
cld
sbbl
hlt
loop
dec
mov
inc
movsb
in
call
xchg
rorl
loop
inc
ret
in
inc
cld
jbe
cwtl
add
add
fisttps
out
movl
pop
in
sbb
ljmp
push
jnp
and
xorb
jbe
add
iret
sub
packssdw
sbb
jbe
add
add
cld
pop
and
cld
repz
pop
inc
sbb
dec
jno
sarb
jne
or
das
loopne
ret
mov
lds
mov
pop
gs
clc
test
enter
add
xchg
cmp
aam
push
push
fwait
adc
loopne
push
aam
lahf
fldl
mov
dec
cmpsl
test
xor
push
adc
xor
and
xor
or
nop
push
out
bound
pop
out
add
jl
push
cmp
mov
popa
jb
ret
add
mov
pop
stos
xor
inc
or
std
shlb
jns
icebp
and
idivl
ret
jge
sbb
or
das
rclb
sbb
push
lock
int
insl
pop
mov
xor
shlb
lret
lret
pop
mov
mov
clc
lret
jnp
out
jae
jb
in
mov
pushf
addr16
orb
rorl
cmp
es
fwait
xchg
mov
adc
xor
cmp
mov
clc
ds
sbb
jp
cs
mov
inc
add
cmp
in
mov
push
jae
aad
popf
cmpsl
mov
subb
cmp
fcoml
sarl
push
dec
pop
fsubr
adc
dec
or
and
jbe
xchg
stc
mov
pop
pushf
or
lods
push
dec
outsb
cld
mov
xlat
movsb
aaa
shr
ds
ret
sarw
cmpb
mov
lock
push
inc
cmp
aam
rol
bound
jnp
outsl
gs
jge
add
and
jp
push
mov
mov
enter
int
mov
stc
outsl
jg
jbe
adc
mov
cld
lcall
mov
sub
je
mov
lds
and
mov
xlat
lret
or
sub
inc
cmc
shrl
aas
subl
lret
subb
cltd
dec
incl
add
cmp
cmc
push
fs
cmpl
mov
aas
imul
push
lret
and
xor
pop
ja
data16
jecxz
ret
add
push
cmp
fs
cmc
ret
aad
mov
and
mov
faddl
lcall
mov
cmp
pop
xchg
inc
and
leave
mov
jbe
lcall
imul
jl
movsb
ret
stos
inc
das
icebp
call
leave
fsubrs
mov
add
lock
mov
lods
out
mov
outsl
push
mov
mov
mov
add
add
jbe
inc
dec
lods
pop
xrelease
test
nop
out
pushf
cmp
lahf
push
xor
fiaddl
xchg
aad
sbb
adc
hlt
xchg
push
sbb
and
fwait
xor
leave
pusha
and
scas
fs
scas
ja
and
inc
test
cli
or
jbe
push
movsb
jg
jae
mov
leave
push
test
xor
imul
push
icebp
test
in
cmp
or
pushf
or
pop
in
stc
push
icebp
or
aad
lret
je
aaa
pushf
push
pushf
shlb
fsubs
lahf
imul
call
shrb
repnz
jg
dec
mov
mov
lock
xor
jnp
push
sub
fs
sbb
inc
mov
push
stos
fidivrs
pop
pop
aam
int3
sahf
testl
mov
dec
jge
push
arpl
aaa
mov
mov
jne
push
cltd
jb
sysenter
test
adc
cmp
push
idivb
pop
mov
mov
ret
dec
jp
nop
inc
lcall
pop
mov
adcb
test
pop
mov
hlt
loope
jmp
mov
hlt
jb
ficompl
mov
and
aaa
mov
imull
fcompl
jo
data16
sub
icebp
or
in
das
and
mov
dec
jnp
int3
loope
push
call
sub
movl
iret
shlb
xor
pop
jl
scas
fmuls
add
mov
mov
pop
push
cmc
xchg
lcall
push
xchg
dec
pop
aad
xchg
cmp
fs
cmp
in
xor
shlb
jle
or
mov
rorl
mov
arpl
mov
xor
xchg
jbe
repz
out
pop
sub
mov
adc
pop
or
fs
je
jle
adc
es
sti
or
mov
pop
andl
notb
add
rcll
adc
shr
std
mov
cli
or
repz
jmp
mov
jno
push
mov
out
in
std
lock
push
test
mov
dec
xchg
mov
loop
je
js
movsl
outsb
test
gs
std
jle
sbb
cmp
jnp
fisubrs
mov
push
adc
xchg
jecxz
cltd
pop
inc
test
pusha
adcb
dec
mov
into
sub
or
mov
sbb
mov
dec
fcoml
cwtl
cld
mov
xchg
add
cmp
pop
jge
outsl
les
into
adc
loop
ss
and
or
out
ficompl
add
aad
inc
mov
imul
cld
mov
jb
mov
push
xor
shl
dec
dec
nop
mull
ja
xchg
ret
loopne
js
or
sbb
cmp
mov
sbb
inc
xor
dec
fildl
push
dec
cmpb
cmp
fldt
jne
shll
cld
or
pop
sahf
push
fmul
icebp
out
loope
cmp
push
sub
jns
addr16
xor
mov
xor
jbe
cltd
jl
dec
and
ret
into
push
add
cltd
jge
out
adc
xor
mov
mov
mov
aad
jae
lock
adc
cli
cmpl
rol
icebp
and
inc
mov
ljmp
pusha
int
jbe
loopne
loopne
jno
popa
mov
cmp
adc
fs
xchg
outsb
push
jp
lds
mov
mov
into
mov
lods
pop
mov
ja
lods
xchg
dec
inc
insb
test
push
adc
inc
inc
dec
or
jg
call
xchg
aam
inc
dec
sub
push
inc
jo
scas
mov
stc
sub
lock
and
movsl
inc
cltd
ds
rorb
daa
pop
into
cwtl
mov
jecxz
cmp
jle
lahf
cmpsl
inc
test
jb
push
popf
or
mov
add
out
dec
jecxz
data16
cmpsb
and
or
js
fistps
xchg
fucom
mov
push
fstpt
pop
pusha
fdivrp
inc
test
xor
sahf
lods
jbe
leave
lcall
xchg
sti
fdivrl
fmuls
test
inc
mov
arpl
mov
mov
fists
adc
jo
sbb
adc
je
icebp
mov
flds
out
dec
cmc
ja
adc
inc
jg
sti
jp
push
je
xchg
lds
mov
or
stos
gs
stc
addr16
cmc
outsb
pop
or
sub
push
push
call
call
shr
out
rcrl
movsb
insl
push
shlb
pushf
inc
jmp
call
push
ret
adc
mov
jge
daa
inc
dec
and
lret
jno
cmpsb
and
nop
and
add
push
sub
mull
cmpsb
addr16
sahf
lods
cmpsl
sbb
repnz
gs
sbb
std
xor
fmul
out
mov
and
adc
xor
mov
xorb
mov
dec
jnp
outsb
cmp
dec
push
sbb
xchg
pushf
idivb
test
out
push
mov
cmc
add
push
sbb
data16
push
cli
jo
rcll
cmpsb
outsl
cli
aaa
xlat
push
test
cmp
call
stos
adc
fstpt
test
push
leave
push
push
xchg
xor
and
dec
dec
cmp
hlt
in
test
xchg
xchg
dec
inc
xor
ret
jp
add
jle
inc
inc
pop
pop
mov
sub
jbe
jb
pop
xor
cwtl
dec
xchg
adc
pop
xchg
pop
mov
jno
and
aam
es
jae
jnp
push
out
push
dec
push
stos
jecxz
sub
xor
mov
mov
push
leave
outsb
dec
mov
cwtl
cmpsb
orl
sti
push
cli
mov
jl
or
aas
sbb
dec
mov
stos
jo
into
int3
or
add
jl
pop
xor
or
arpl
jo
inc
sbb
loope
mov
inc
mov
sarb
jae
rolb
mov
and
movsb
add
pop
sub
aad
lret
fidivs
rolb
dec
push
cld
imul
or
xor
cmp
pop
mov
mov
aas
mov
fcoms
and
lret
pop
or
sbb
cmp
fadd
cmp
popf
jle
jmp
inc
icebp
out
imul
xor
icebp
outsl
jmp
fisubs
mov
repz
dec
fldt
xchg
daa
mov
movsb
sbb
hlt
in
pop
add
loopne
dec
pop
sbb
sub
stos
addr16
xchg
mov
subb
inc
inc
lods
or
jg
push
jo
pop
fcoml
add
insl
dec
and
inc
shll
out
adc
cmc
mov
xor
sbb
out
mov
pop
lock
fisubrs
push
mov
sub
push
pop
pop
xbegin
lock
js
xchg
mov
add
js
es
mov
jnp
mov
rolb
test
jo
sti
mov
cmp
imul
enter
dec
ds
outsl
inc
cs
notb
and
arpl
leave
scas
inc
jg
sbb
xchg
sti
mov
dec
push
xor
push
js
sbb
cmc
cmpb
dec
gs
xchg
add
sarl
xor
xchg
dec
scas
mov
mov
xor
jno
mov
out
jmp
dec
cmp
and
sti
adc
mov
xor
cmp
popa
out
and
imul
mov
cltd
mov
pop
orb
add
es
mov
inc
ret
clc
or
cmc
push
inc
mov
jne
jmp
xchg
call
mov
pop
mov
stos
fstps
mov
cmc
je
fsubrs
in
pop
insl
mov
push
inc
sbb
cltd
push
dec
lods
dec
daa
jo
sbb
jno
fsubrl
xor
in
lret
movl
ljmp
xchg
mov
in
imul
nop
ja
push
push
in
lahf
daa
pop
inc
push
cli
sti
xlat
test
inc
and
fsts
inc
call
adc
mov
lcall
push
aad
imul
nop
lods
das
jnp
cmp
sbbb
repz
test
adc
cwtl
ja
inc
dec
jnp
bound
test
fwait
stc
mov
pushf
inc
insb
and
icebp
iret
xor
es
enter
add
and
rorb
out
inc
out
mov
lds
xchg
sbb
sub
pop
dec
push
mov
mov
jns
push
adc
push
mov
in
and
inc
inc
inc
adc
pushf
cmp
xor
xor
mov
cmpsb
cld
cmp
jae
mov
mov
jns
pop
and
mov
shlb
in
xor
lcall
ds
sub
stc
outsb
sbb
xchg
push
add
and
xorb
lods
mov
jl
push
cltd
mov
sbb
aad
imul
pop
sahf
push
data16
jecxz
test
xchg
stos
into
ds
xor
xor
ljmp
ds
mov
mov
adc
pop
sbb
add
fisubl
sbb
mov
sub
cmp
rep
call
popa
jg
add
pop
bound
fildll
or
test
dec
dec
leave
fwait
mov
xor
je
inc
test
or
push
xor
adc
sahf
dec
sbb
fldl
jg
mov
pop
push
sub
cltd
in
out
enter
jecxz
jg
call
mov
js
inc
mov
and
arpl
mov
xor
popa
cmpsb
repz
mov
adc
repnz
lret
push
addb
into
cmp
mov
cmp
scas
inc
pop
stos
mov
into
push
xor
or
gs
ret
flds
bound
jnp
cld
and
stos
je
lcall
inc
jns
fadds
xchg
push
mov
cld
sti
pop
in
jl
into
adc
sub
rcr
in
and
mov
lds
aas
mov
or
xlat
je
loope
iret
inc
data16
adc
testl
xorl
mov
xlat
sbb
test
loop
cwtl
or
adcb
jbe
scas
push
mov
sub
cmp
mov
dec
or
cmpb
and
mov
inc
inc
sbb
clc
ret
pop
jae
jbe
aas
dec
sub
cmp
rcll
mov
cmp
ss
gs
outsb
lret
inc
mov
out
mov
push
test
outsl
outsb
cld
mov
pop
insb
addr16
inc
test
rorb
jl
fisubs
ja
rclb
add
mov
loop
xor
clc
cli
jmp
nop
es
jp,pn
add
shl
ja
into
push
nop
pop
cmc
mov
pusha
lret
mov
add
pop
pop
addr16
pop
cmc
or
icebp
in
dec
sbb
and
mov
dec
out
out
adc
xor
dec
mov
pop
mov
mov
ror
cmp
into
dec
aam
or
popl
mov
lds
push
push
dec
mov
mov
fisttpl
fldt
jns
jnp
jg,pt
insl
subb
lods
lret
mov
cmp
jno
push
pusha
mov
loopne
mov
pop
cltd
mov
loope
arpl
mov
dec
scas
js
and
leave
mov
fs
outsl
pause
mov
in
ret
popa
adc
es
adc
cmc
push
movsb
jg
cltd
adc
sub
fwait
out
orb
fsubr
outsb
in
shrb
add
add
gs
sarl
mov
sbb
je
and
gs
inc
js
ja
xor
cs
xor
mov
mov
fidivrs
xor
and
mov
fistpll
frstor
fmull
pushf
mov
fs
pop
add
sub
xor
pop
push
pop
ret
fstl
les
push
dec
xor
and
push
sub
mov
cmp
inc
cmp
dec
pop
or
mov
imul
xchg
cmp
push
pop
jo
add
insb
outsb
xchg
out
mov
out
gs
and
and
or
aad
sbb
fs
or
imul
jae
sub
ja
inc
rcrl
lret
inc
mov
lea
aam
add
mov
push
mov
lret
ja
jecxz
dec
push
push
cmp
insb
nop
addr16
imul
test
xchg
fisubrs
dec
xor
imulb
inc
pop
and
xchg
xor
js
xchg
jbe
inc
pushf
movsb
pop
lock
sub
dec
fmulp
addr16
xor
cmp
jne
test
xchg
add
ss
ficoms
stos
jl
cmp
xor
inc
out
xor
mov
xchg
mov
mov
mov
and
mov
add
inc
sahf
xor
shr
leave
lret
gs
stc
out
pop
insl
xor
push
out
pop
rcrl
insb
mov
sub
pop
pop
pop
lea
movsb
movlps
lcall
xchg
sub
std
inc
inc
jg
arpl
ljmp
loope
or
stc
nop
stos
sarb
out
mov
lods
scas
lahf
cmpsb
xor
mov
inc
jb
mov
pop
adc
sbb
push
jo
adc
mov
mov
andl
xor
addb
add
pop
sub
cmp
aaa
ja
les
xor
adc
dec
out
repz
ret
cwtl
in
adc
iret
dec
fwait
fs
mov
add
sbb
aaa
dec
sub
lea
sti
imul
insl
int
mov
sub
lods
sub
jno
movsb
pop
or
mov
insb
lods
adc
adcl
mov
or
push
outsb
or
jle
insl
out
sub
sbb
inc
push
jmp
pop
movsl
nop
cmp
cmp
cmp
stc
movsbl
xchg
das
push
inc
ja
shll
xor
xchg
cmpsl
mov
sbb
leave
sbb
mov
pop
xor
rorb
push
xor
or
dec
sub
inc
rolb
pop
push
add
and
xor
mov
negl
add
jle
or
in
scas
fs
mov
cpuid
fs
out
loope
in
mov
or
mov
push
inc
inc
adc
sub
ficomps
idivb
fldl
push
pop
jns
pop
adc
jmp
dec
iret
scas
and
or
xchg
jae
push
push
mov
cwtl
inc
or
cmp
call
cmp
xchg
subb
bound
mov
jo
adc
shr
push
xor
daa
adcb
jg
in
js
subl
or
lcall
ljmp
gs
cmc
insl
xchg
pushf
addl
xor
inc
out
mov
adc
test
xchg
mov
jo
cwtl
push
mov
out
fwait
aam
cmp
xchg
xchg
push
dec
in
jb
pusha
jmp
push
aad
mov
mov
dec
push
loopne
std
dec
xor
pop
das
fs
jle
inc
push
or
xchg
pop
sub
inc
xor
ljmp
xchg
int3
iret
icebp
pop
seto
sbb
xlat
and
icebp
rol
cmpsl
adc
decl
addl
mov
xchg
xchg
mov
xor
in
das
ja
lds
cmp
fsts
or
adc
stos
xchg
mov
popf
in
push
lcall
mov
adc
into
cmp
sub
mov
mov
gs
scas
add
test
mulb
xchg
ret
mov
sbb
fsubl
dec
call
mov
mov
xor
cmpsl
fwait
pop
lret
mov
mov
in
or
cmp
and
in
inc
xor
js
mov
fistl
mov
push
dec
aam
mov
lds
insb
bound
repnz
arpl
add
shld
and
rcrb
inc
bound
fisttpll
movsl
test
popf
aas
in
pop
in
sbb
mov
gs
daa
ss
push
xchg
dec
jo
pop
push
sub
mov
cmc
jmp
jp
push
ljmp
cltd
xor
bound
push
mov
xchg
ret
lcall
dec
dec
mov
mov
mov
mov
dec
mov
popa
minps
cwtl
outsl
jae
pushf
rcrl
xchg
rclb
lock
insb
ret
ljmp
xchg
cmp
sub
adc
adcl
xchg
in
cwtl
jmp
icebp
test
out
iret
mov
mov
xchg
and
jbe
add
sub
fldenv
add
sbb
mov
add
outsl
cmp
cmp
iret
mov
lock
push
ds
ret
inc
pop
out
cwtl
and
lds
loop
adc
in
into
cmp
mov
inc
in
jbe
decl
scas
sbb
jnp
add
and
dec
xor
cli
mov
xchg
stos
pop
popa
xchg
xchg
mov
push
push
mov
lcall
mov
int3
fadd
insb
mov
loopne
cmp
and
mov
mov
cmp
inc
fiaddl
lret
aam
push
std
in
dec
mov
dec
and
sahf
push
cli
jle
dec
out
push
pop
sbb
sbb
pop
xor
pop
call
sbb
and
xor
fs
inc
xchg
xchg
pop
cmp
xchg
xchg
push
adc
leave
jb
jecxz
jge
dec
sbb
jns
push
dec
fdivrs
ja
imul
xor
fstpt
xchg
lret
mov
jmp
xchg
or
test
xchg
cmpsl
xor
jae
or
lods
psubb
orl
in
jp
add
lret
xor
fimuls
sbb
mov
loopne
fcomp
ret
mov
fisttpll
sar
int3
mov
cmp
push
mov
and
movsl
sahf
in
xor
shr
dec
jle
pop
sub
and
jge
inc
jmp
and
in
jns
shrl
pop
icebp
mov
sahf
fcoml
mov
add
notl
rorb
sti
arpl
sub
andb
inc
adc
push
cwtl
jle
xor
mov
or
notb
fdivs
adc
jmp
mov
notb
mov
pop
dec
scas
push
leave
stc
daa
imul
sub
idivl
adc
movsl
xorl
repnz
addr16
xchg
clc
add
push
stc
push
ljmp
xchg
xchg
lret
out
add
cltd
lcall
arpl
insb
mov
fisttpll
popf
rcrb
in
push
sti
lret
and
arpl
jg
jae
pop
push
shr
rolb
pslld
js
lock
xorb
inc
inc
rcl
js
pop
push
int
jl
add
sbb
out
or
lds
pop
inc
ljmp
jg
jg
push
dec
iret
cmp
lcall
std
and
cld
mov
jae
jno
adcb
vcvttss2si
sbb
in
neg
fwait
xchg
clc
int
les
or
mov
xchg
idivl
sub
cmp
mov
mov
and
mov
movsl
xor
cld
mov
cmpl
lods
cmpsl
mov
int
cld
xor
xchg
xor
lock
out
aam
movsb
sub
mov
test
out
xor
adc
push
scas
sbb
movsl
add
cmp
pusha
mov
mov
sti
pop
cmp
xlat
jne
int
adc
dec
lds
repz
out
stos
mov
push
mov
pop
jg
out
push
fisttpl
nop
popa
movsl
add
or
ficompl
rorb
jge
inc
cs
ljmp
and
inc
jg
xor
stos
sbb
adc
orl
jmp
sub
pop
fildl
jo
pop
inc
jbe
int3
int3
xchg
cmp
dec
shrl
inc
cmp
adc
jg
popa
lods
jmp
jo
push
cmp
mov
loopne
addr16
add
ja
in
rcl
pop
shlb
gs
loope
add
sub
cmpsl
lret
adc
clc
nop
mov
mov
out
hlt
and
insb
push
pop
mov
out
mov
sub
lea
jle
xor
roll
cmp
xchg
cwtl
or
lods
dec
dec
mov
jae
stos
test
mov
int
adc
aam
pop
sbb
rcrb
mov
cmp
sbb
dec
mov
cmp
mov
mov
push
cwtl
xor
daa
pop
push
cmp
ret
int
je
mov
adc
int
mov
stos
pop
jno
ljmp
pop
xor
xor
mov
jle
pop
testl
cmp
ret
pop
xchg
test
mov
clc
cmp
inc
popa
jp
xchg
clc
add
mov
push
fisttpl
mov
movsl
mov
int3
leave
pop
aad
dec
mov
push
lcall
fldt
popf
lods
out
jo
jge
sahf
popa
in
pop
add
rep
popa
mov
scas
xchg
in
test
dec
jge
push
nop
subl
aaa
lea
daa
or
dec
roll
xor
mov
loope
adc
xchg
add
ret
add
aad
mov
addb
cmpsl
xchg
push
subl
mov
ret
inc
jle
ficomps
sti
pop
jmp
dec
iret
in
pop
ds
pop
adcb
cmp
loopne,pn
bnd
xor
adc
test
add
pop
dec
enter
fwait
leave
in
xchg
pop
es
mov
or
mov
push
imul
loop
sbb
stos
cmp
leave
lret
fs
xor
jae
sbb
daa
jmp
pop
and
adc
sub
cld
xchg
add
adc
lea
and
push
testb
stos
ret
ret
xchg
hlt
pop
vpcmpgtb
das
daa
xchg
pop
scas
xor
out
xchg
and
sti
mov
dec
sarl
out
aam
xchg
rcll
in
inc
test
mov
cld
adc
jg
add
int
mov
into
jne
or
mov
push
jne
mov
push
adc
jae
imul
fwait
sahf
xchg
mov
inc
ret
mov
cmp
mov
aam
loopne
inc
cmp
in
sub
push
jns
or
stos
cltd
ficomps
dec
out
stos
pusha
andl
loopne
add
inc
push
andl
mov
mov
mov
pop
in
inc
or
jle
iret
xchg
jmp
negl
mov
pop
ret
ss
push
xor
data16
push
cmpsb
push
repz
pop
jp
js
sub
xchg
jle
mov
ret
inc
gs
pop
out
xchg
shlb
call
dec
or
push
lahf
xchg
push
sbb
or
inc
mov
inc
lea
nop
repz
cmp
iret
das
insb
jns
mov
outsb
aad
push
adc
push
xor
push
mov
jl
jp
jns
dec
cmpsb
ret
test
xchg
and
imul
repnz
jecxz
jecxz
mov
lea
lret
pop
and
pop
add
in
movsl
lds
inc
aad
push
xor
js
dec
mov
call
lret
sbb
pop
xchg
lcall
mov
cmp
pop
leave
push
pop
pop
or
push
cmpsl
cli
pop
adc
stc
icebp
ficoml
adc
pop
aas
fucomp
test
popf
movsb
mov
push
ja
add
subb
loopne
fnsave
cwtl
mov
mov
jecxz
outsb
mov
in
sbb
inc
rcrb
mov
adc
add
iret
jns
push
mov
xchg
or
pop
add
mov
jae
pushf
pop
push
fsubs
mov
xchg
fiadds
sbb
pop
sub
popf
and
ja
mov
imul
sub
adc
cmpsl
push
push
pop
das
arpl
jg
xor
aam
fwait
inc
ds
add
pop
data16
cwtl
daa
push
in
pop
jp
into
mov
inc
dec
mov
xchg
das
dec
lret
xlat
and
inc
jl
pop
or
xchg
xor
repz
sub
add
xchg
outsb
adc
adc
add
xor
mov
mov
or
rcll
mov
add
xchg
sbb
xchg
shl
xor
std
dec
into
bnd
add
jno
add
push
faddl
inc
mov
addr16
pop
jmp
xchg
mov
loope
lock
sbb
ja
dec
pop
jl
push
sbb
add
dec
sti
add
pop
fidivrs
aam
imul
mov
popa
fistpl
pop
pop
mov
cmp
fcmove
scas
call
je
xchg
mov
pop
adc
push
inc
iret
out
into
test
inc
or
pop
test
push
pop
vunpcklps
aad
cmpsl
push
xor
adc
repnz
sti
scas
pop
xor
xchg
jecxz
nop
mov
int
mov
in
pop
fs
lret
andps
fsubs
mov
test
int
sbbb
sub
ja
out
jg
mov
xor
imul
jnp
push
aad
xor
cltd
shl
repnz
sbb
xchg
movl
pusha
jg
stos
pop
push
adc
add
jb
adc
xlat
fdivl
sub
inc
cmp
pop
push
sahf
sub
call
stos
sub
leave
mov
jb
push
fdivrp
mov
jmp
into
dec
mov
pop
and
jnp
jne
add
test
leave
out
jae
test
int3
jle
pop
nop
dec
inc
pushw
mov
xchg
aam
mov
sbb
cli
lods
push
sarb
mov
mov
xor
les
xor
cmpsb
mov
add
imul
mov
xchg
jg
test
insb
sbbl
jbe
gs
mov
adc
and
xor
mov
mov
hlt
test
test
aaa
xrelease
pop
rcrl
lahf
gs
inc
stc
sbb
mov
and
dec
cli
or
sub
loope,pn
insw
movsl
jnp
sbb
push
xchg
call
outsb
or
adc
sub
ljmp
cmpsl
and
cmp
cmc
rolb
or
js
imul
rorl
pshufw
rcll
fcomps
das
sbbl
or
enter
rcrb
and
fdivrs
or
pop
and
lock
out
dec
inc
testl
outsl
xlat
daa
push
lods
mov
pop
or
jmp
test
in
call
je
inc
es
pop
mov
cmp
xchg
clc
fwait
jbe
rcll
mov
in
rorb
icebp
loop
movsl
test
hlt
popf
ret
lret
out
push
mov
cmp
sbb
popa
ds
mov
popf
pop
lcall
leave
pushf
adc
ds
mov
popf
mov
mov
push
fidivs
cmpsl
movsl
or
xor
lret
addr16
add
lret
lahf
dec
hlt
inc
clc
mov
and
adc
lds
cs
das
and
insb
pop
cli
and
mov
mov
test
add
push
lret
mov
cmpsb
sbb
es
sbb
inc
xor
push
xchg
inc
shrl
adc
mov
mov
add
dec
movsl
inc
push
mulb
out
push
hlt
aam
leave
cli
push
adc
or
adc
aad
mov
pop
call
arpl
data16
aam
jne
in
adc
lahf
or
bound
lret
xchg
std
data16
fsubl
mov
cmpsb
mov
fsubrl
push
iret
subl
outsl
std
mov
je
mov
outsb
xchg
cli
inc
mov
add
xchg
popf
sahf
xchg
stos
xorb
inc
push
mov
dec
in
add
and
sub
mov
loope
das
mov
xchg
sahf
loope
test
aam
adc
hlt
mov
mov
cmp
aad
mov
outsl
or
xchg
bound
lcall
xchg
rorb
sbb
in
mov
push
fnstcw
xchg
adc
pop
aad
xchg
push
sbb
cld
in
dec
daa
cmpsb
and
in
mov
es
inc
jl
adc
out
sub
sar
mov
subb
daa
in
mov
les
inc
or
mov
push
fldcw
stos
dec
data16
fists
sbb
in
cltd
and
pusha
jo
aad
ficompl
push
jle
ds
xor
xchg
leave
xchg
push
fidivrs
mov
pop
pop
and
rclb
aaa
pushf
popa
sub
push
and
jp
lods
pop
push
mov
inc
jbe
add
sbb
fcoml
xchg
xchg
andl
dec
dec
shlb
xchg
daa
std
aam
jae
xor
pop
jne
repnz
rcrl
jo
aad
rcl
in
int3
sub
mov
jo
adc
jae
data16
adc
inc
mov
dec
or
cmpsb
pusha
in
mov
ret
pop
inc
in
cmp
lret
mov
int
aam
adc
sub
mov
jb
pop
inc
popf
call
mov
ja
dec
cli
mov
xlat
jmp
inc
out
jle
and
dec
dec
imulb
in
mov
mov
mov
lss
shlb
scas
dec
and
xchg
fstpt
jne
fs
popf
in
jae
push
lods
dec
test
lahf
cmp
cmc
add
idivb
dec
mov
cwtl
lret
cmpsb
popa
cmc
pusha
add
enter
adc
and
enter
int3
pop
fidivrs
add
sub
loope
cwtl
dec
mov
ljmp
gs
cmc
lds
ficomps
int3
out
jg
std
data16
iret
ret
ja
mov
mull
aam
push
mov
les
icebp
adc
sbb
pop
subb
mov
sbb
sbb
jnp
cmp
mov
aaa
test
xchg
push
xor
mov
in
push
adc
ja
inc
cwtl
ss
xlat
cmp
push
fisubs
inc
adc
cmc
cs
push
push
and
rorl
jl
sbb
pop
jae
dec
inc
das
call
adc
sbb
xchg
sub
out
int3
push
or
ljmp
cmp
inc
imul
mov
sub
in
jbe
mov
cmp
enter
rcl
and
and
jp
push
sbb
xor
sub
push
out
add
mov
int
adc
ret
dec
mov
jecxz
cli
and
fldenv
lret
pop
adc
js
imul
sbb
in
dec
adc
sar
mov
xchg
adc
or
shr
and
or
mov
in
jg
mov
dec
mov
cmp
xchg
es
pop
jbe
ja
jmp
enter
and
and
ret
adc
scas
sub
adc
movsb
push
ret
test
mov
test
jnp
fsubrs
jmp
inc
incb
es
imul
outsb
add
jo
test
xchg
push
or
lods
dec
mov
popa
jae
in
scas
fsubl
gs
clc
cld
das
addr16
cmp
call
mov
sbb
mov
jle
sbb
std
dec
mov
xor
or
push
push
mov
addr16
daa
push
xchg
fwait
adc
add
jge
repnz
fsubr
pop
sub
or
lock
jl
into
es
mov
inc
dec
or
push
jne
mov
xor
icebp
je
and
sub
loop
je
mov
jge
or
in
and
pop
in
loop
sahf
lods
mov
pop
or
sub
call
out
lea
add
add
inc
je
sub
cmp
stc
dec
jmp
dec
push
jb
out
push
mov
out
mov
sbb
xchg
shlb
lods
jns
dec
loopne
inc
testb
push
xor
bswap
enter
push
aam
fbstp
lret
cmp
inc
push
inc
inc
stos
sub
dec
test
jp
mov
sti
das
inc
xchg
jbe
xchg
call
push
jnp
enter
fptan
push
mov
sbb
adc
in
in
fs
mov
dec
add
dec
dec
out
movsl
js
adc
les
mov
mov
mov
sub
dec
fwait
inc
shlb
cli
scas
push
test
or
inc
dec
jmp
out
out
xchg
lahf
xor
movsl
stos
mov
jl
fisubrs
xor
mov
out
fildll
sub
dec
addb
leave
frstor
incb
popf
add
add
lds
xlat
mov
push
pop
lret
adc
sbb
or
shl
les
sub
imul
or
cld
out
mov
jmp
std
xlat
fcoms
stos
pop
roll
cltd
das
repnz
fsqrt
fidivs
test
sub
pop
mov
xor
mov
cmpsl
mov
or
inc
mov
dec
call
cmc
mov
js
decb
movl
fistl
movsb
icebp
cmp
sbb
pop
inc
fsub
stos
lds
lea
jmp
loopne
push
dec
or
mov
inc
rorl
aaa
cmc
sbb
lret
adc
cmc
rcll
jg
shrl
push
mulb
cmp
sub
mov
insl
inc
cmp
daa
add
jmp
fwait
pusha
jge
aaa
adc
in
out
push
mov
sbb
jmp
std
repnz
pop
and
jne
jg
rolb
es
out
dec
mov
cmpsl
mov
sub
xchg
xchg
shlb
stos
loopne
mov
movsb
aad
mov
mov
insl
fimuls
leave
push
xchg
into
and
pusha
aaa
mov
in
mov
insl
dec
sub
arpl
sbb
push
lret
pop
mov
outsl
cmp
out
cltd
adc
ja
pusha
dec
xor
pusha
stos
mov
jae
mov
out
fistpll
mov
lods
shrl
sub
xchg
lds
shlb
out
rol
pop
pop
dec
fnsave
aam
jno
int
mull
lods
mov
mov
nop
pushf
or
push
mov
out
fsubp
out
inc
js
add
lods
icebp
in
lods
xorl
xchg
fdivrl
pop
mov
call
sbb
jo
push
aam
sub
add
add
sub
out
jns
jnp
scas
std
sbb
ljmp
test
push
or
pop
aas
call
dec
pushf
stos
insl
imul
ds
jp
inc
inc
inc
push
push
cmp
jecxz
inc
ss
popf
les
daa
das
cwtl
packssdw
xchg
stos
mov
push
add
push
icebp
repz
xchg
or
inc
dec
push
cwtl
jno
mov
push
mov
add
sahf
xor
scas
and
cwtl
das
aam
ret
mov
mov
mov
flds
mov
loope
call
scas
lret
popa
sub
xor
adc
loopne
xor
jmp
push
mov
daa
cmp
addr16
pushf
xchg
jp
add
push
xor
test
lea
cmp
mov
movsl
leave
jae
loopne
push
in
sub
jge
insl
in
adc
xor
inc
cmp
sbb
out
out
rorb
out
in
sar
rorl
outsl
in
jne
lahf
test
cmpsl
xchg
xorl
inc
loopne
or
jecxz
add
pop
xor
pop
in
dec
jns
add
xchg
mov
xor
sub
aas
mov
hlt
outsl
or
scas
push
xchg
outsb
in
and
xor
mov
or
lds
sahf
aas
dec
cltd
jbe
cmc
mov
pop
xchg
divb
in
js,pn
hlt
inc
outsl
jbe
adc
sti
addr16
test
and
int3
inc
adc
xchg
xchg
bound
jmp
stos
cmp
data16
cld
jb
loop
imul
divl
push
imul
mov
fdivp
addr16
mov
das
fsub
jp
test
mov
jo
int
pop
movsl
rorl
jecxz
cmp
or
push
int
dec
and
jnp
mov
rolb
xorb
mov
cltd
xchg
mov
dec
jb
cli
mov
aaa
inc
sbb
std
leave
push
push
and
mulb
xchg
pushf
addl
add
call
fistpll
add
mov
ljmp
lods
push
or
loope
leave
pop
add
ss
push
fs
add
or
and
aas
mov
xchg
or
jp
and
fnstenv
mov
sub
movsb
lcall
mov
push
loop
into
push
pop
xchg
nop
fnstsw
adc
ja
ljmp
inc
pop
mov
push
pop
lea
test
ss
ret
inc
adc
std
cmp
jnp
cld
jl
test
notl
pop
pop
icebp
shl
xor
adc
repnz
push
lahf
jo
push
cmp
sarl
pop
jne
ljmp
inc
shrl
push
pop
push
test
add
in
xor
aaa
ret
jg
out
in
data16
hlt
mov
fcompl
fnstcw
adc
out
mov
pop
dec
aaa
add
xchg
imul
in
mov
adc
xchg
push
mov
or
lcall
jge
fwait
shll
stos
test
and
fwait
mov
jmp
xor
fisubs
xor
add
dec
xor
int3
test
inc
inc
test
lea
sub
xchg
iret
dec
xchg
cmp
and
adc
mov
push
or
mov
or
xchg
inc
jns
into
mov
xchg
mov
or
sbb
iret
test
icebp
cltd
push
or
je
aad
xchg
mov
xor
mov
ss
hlt
lods
add
xchg
sbb
pop
push
sbb
scas
adc
add
inc
xlat
jbe
cmp
insb
insb
lret
lahf
sub
loope
sbb
jg,pt
add
push
lea
aaa
leave
mov
shll
cmc
jae
cmc
xchg
jno
xchg
mov
jo
jl
and
push
mov
lock
cmpsb
push
out
pushf
movsl
lahf
push
orl
dec
dec
jo
xchg
fidivrs
stos
sbb
add
cmpsl
fsubrl
pop
ljmp
xlat
pusha
jmp
xlat
int
icebp
cmpsb
jo
movq
mov
cmc
mov
fwait
out
push
push
dec
pusha
adc
cmc
mov
pop
sub
xchg
pushf
push
cltd
aam
xchg
inc
arpl
or
imul
or
mov
std
stc
push
inc
or
adc
and
or
shl
mov
shl
dec
adc
push
lcall
cmp
daa
pop
insb
call
xor
ret
mov
sbb
and
or
aaa
pusha
cmp
jo
xchg
mov
and
xor
lods
out
imul
imul
adc
xchg
mov
inc
inc
jns
arpl
lahf
or
fs
cmp
cmpsb
fdivrl
les
cltd
es
add
mov
out
sbb
lea
out
inc
stos
xchg
daa
sbb
in
in
gs
mov
rep
jmp
lea
je
cli
test
mov
push
mov
fcmovbe
rorl
sub
pop
cmp
sahf
rclb
adc
mov
rolb
lods
jae
cwtl
mov
add
add
cli
shrb
or
mov
lcall
inc
imul
sbb
mov
jle
jg
sbb
xor
test
fwait
lods
stc
into
call
cmp
xor
mov
into
mov
dec
hlt
aad
rorl
mov
push
mov
add
jae
xchg
lret
cmp
sbb
mov
loope
out
cmc
nop
dec
sbbb
jae
arpl
pop
or
in
jmp
push
inc
jp
sbb
incl
xor
lret
popf
lds
dec
sub
ljmp
xchg
loopne
in
neg
bnd
ret
push
jecxz
mov
lds
enter
jg
repnz
push
jmp
aam
cld
dec
mov
imul
imul
ljmp
pop
pop
cmp
sbb
orl
loopne
into
adc
insl
insb
pop
xor
xor
cltd
in
lock
ja,pt
pop
push
xor
pop
jle
add
jne
or
dec
sub
or
push
add
jmp
cmp
rcrb
xchg
scas
cmp
clc
sbb
mov
ljmp
xchg
scas
pop
jecxz
adc
pop
nop
mov
in
mov
js
jne
lods
add
mov
pop
pop
jno
ret
mov
dec
ror
lock
stos
mov
xchg
and
outsb
push
loope
add
adc
sbb
xchg
push
xchg
call
jbe
stos
add
jo
popf
pop
insl
jmp
push
scas
sub
mov
xchg
loope
in
adc
outsb
jno
push
daa
push
dec
push
int3
dec
mov
pop
fwait
or
push
ret
xor
in
xchg
add
fisubrs
inc
or
ficompl
inc
out
inc
inc
or
mov
in
lea
mov
movsl
push
imul
push
loop
test
xor
or
aam
jb
push
stc
sub
mov
push
or
loop
sbb
adc
jle
mov
lret
in
xchg
push
enter
dec
sub
push
mov
lcall
mov
fs
cmpsl
xlat
lods
cs
xchg
stos
or
cld
pop
mov
add
stos
cmpl
xchg
rorb
mov
lds
mov
hlt
lods
xor
add
pcmpeqd
push
and
test
fbld
or
dec
incb
mov
jo
scas
push
outsb
stos
mov
xchg
sbb
jo
stos
mov
and
out
lcall
cmc
mov
scas
sub
xchg
lods
mov
sahf
xor
inc
imull
sub
out
fwait
stos
sbb
in
sbb
sbb
or
jno
or
sub
cmc
inc
pop
dec
or
out
outsl
into
pop
jge
notl
jmp
jge
jp
mov
lahf
sub
sbb
sahf
lcall
ret
and
loopne
cmp
mov
out
pushf
mov
cmc
in
stc
into
add
mov
mov
ljmp
dec
daa
cltd
into
ficoml
call
or
mov
mov
dec
push
inc
pop
les
in
and
out
repz
out
out
inc
pop
shll
add
test
fnstenv
das
aad
pop
dec
mov
or
lods
nop
add
je
shll
pop
add
cmp
push
mov
out
adc
sub
mov
repnz
inc
je
movsb
stc
out
push
jg
test
les
dec
xchg
shll
sub
dec
mov
xor
mov
cmp
ds
cmpb
adc
rcrl
mov
out
enter
std
je
aaa
pop
je
pushf
lahf
mov
shl
and
cs
bound
jnp
in
cmc
addb
insl
popa
cltd
xchg
sub
inc
push
pop
adc
mull
movsl
stos
lods
push
sub
mov
in
out
jno
jno
cltd
cwtl
jne
sub
mov
jns
push
dec
xor
mov
addl
cld
leave
jmp
cmp
sbb
aam
bound
adc
xor
pop
add
push
xchg
sbb
mov
jl
insl
fimuls
cli
pop
pop
add
inc
pop
shrl
sub
stos
fistl
ljmp
fxch
mov
adc
pop
lret
lods
repnz
xchg
cld
js
pop
imul
lods
aad
imul
cmp
jg
shll
in
adc
or
xor
imul
push
push
jle
repz
imull
sub
sub
lahf
daa
fdivr
mov
xor
mov
imul
jmp
jecxz
nop
imul
lods
aad
jmp
jbe
imul
aad
lods
fidivl
enter
shll
push
mov
jnp
shl
xor
fidivl
test
stos
or
sub
cmp
sti
dec
mov
enter
decl
loope
mov
mov
sbb
rol
push
lds
in
cvttps2pi
cli
out
inc
fisubs
ficoml
addb
add
sbb
jno
push
pop
insl
mov
adc
or
cmp
inc
push
cmc
xchg
insb
or
movsl
mov
dec
cld
xchg
pop
aam
add
push
stos
jp
dec
mov
mov
adc
lods
and
inc
std
xor
mov
inc
aaa
dec
mov
shl
loop
or
aam
sbbb
loope
fmuls
jae
imul
nop
fldl
out
sbb
xchg
xchg
push
cmc
jo
mov
add
shll
add
test
dec
or
dec
testb
mov
sub
pop
add
and
inc
adc
mov
ficompl
fstps
pusha
sbb
or
jno
test
aad
jb
inc
fs
mov
jne
mov
add
aam
stos
jns
frstor
pop
adc
mov
mov
cwtl
mov
pop
into
call
jmp
mov
xchg
sbb
sbb
imul
sub
daa
popa
xor
std
inc
xchg
ret
xchg
mov
push
es
adc
aaa
insb
int3
sar
scas
push
ja
rcrl
and
add
ljmp
ret
xor
cmpsl
push
sbb
add
sbb
dec
rcrl
loope
xor
rolb
stos
push
push
daa
push
jmp
dec
clc
cvtpi2ps
rcll
xchg
ror
insl
arpl
pop
jecxz
xor
scas
push
and
rcrl
repz
mov
inc
push
mov
ret
movsl
sbb
and
in
test
push
xchg
dec
jl
fwait
xchg
jecxz
fsubrs
jnp
xchg
pushf
psrlq
fadd
and
popa
lret
or
inc
xchg
jmp
mov
inc
call
mov
jb
leave
cmp
jp
xlat
jmp
les
into
in
sub
loop
cmp
or
cltd
scas
mov
xor
stc
push
sub
aas
ss
faddl
sahf
inc
shll
ds
push
orl
imul
outsb
xchg
jle
fdivrp
sarl
ds
or
sbb
addr16
outsl
or
mov
dec
aad
ret
adc
xchg
cmpsb
pop
push
mov
or
mov
jne
sti
sub
jae
jge
xchg
and
roll
jmp
sahf
or
xor
jmp
insl
xchg
add
lock
ja
loop
nop
pop
flds
hlt
inc
cmp
cld
mov
inc
and
push
lea
insl
sub
cmpsb
jne
and
insb
cmp
xor
mov
mov
jne
xor
jbe
push
push
inc
and
cmp
ja
sub
pushf
outsb
mov
lahf
scas
xchg
mov
cmp
out
enter
jge
stos
cwtl
cmp
sbb
scas
in
and
ja
stos
imul
jno
pop
push
xchg
int3
lahf
lock
xchg
dec
pop
inc
je
mov
sahf
fiadds
sahf
pop
aad
daa
arpl
loopne
movb
lds
mov
aad
test
sarb
dec
rcrb
adc
inc
mov
xchg
mov
iret
dec
sbb
add
stc
mov
push
out
loopnew
adc
mov
xor
add
xor
mov
dec
push
add
push
aad
xchg
adcb
cmp
mov
dec
dec
inc
push
sbb
stos
mov
insl
shrb
outsb
mov
je
stos
stos
stos
fwait
cmc
push
xchg
fstpl
push
push
xor
pop
hlt
inc
test
add
cmc
pop
ficoml
push
cld
int
jg
cli
sbb
lds
aas
stos
or
pop
ret
adc
pop
cld
ds
pop
stos
mov
xor
fsubr
roll
adc
push
mov
addr16
mov
inc
xchg
scas
xor
sub
js
xchg
push
or
in
in
decb
scas
mov
cmp
jns
push
sub
cmpsb
clc
movsb
imul
outsb
inc
stos
adc
imul
and
xchg
pop
cmp
mov
mov
mov
btr
loope
or
sub
inc
popf
fsub
and
mov
pop
in
lods
add
jl
xor
or
rorb
cli
push
mov
rcll
data16
pop
cli
roll
ret
sbb
mov
add
in
ds
aaa
outsl
cmp
dec
inc
adc
inc
pop
or
xchg
and
mov
leave
pop
gs
cmc
inc
jne
imul
inc
aaa
pop
or
popf
out
orb
push
test
fwait
push
sub
pop
dec
cmp
xchg
mov
jb,pt
xchg
sub
leave
and
add
sbb
dec
fidivl
inc
movsl
icebp
pushf
jne
jle
pop
shrb
inc
adc
and
xchg
lods
inc
test
dec
xlat
js
jbe
sub
mov
mov
adc
cmpsb
cmpsb
imul
sti
inc
pop
stc
sbb
push
movb
call
xchg
std
test
ds
ss
add
hlt
lods
and
sahf
inc
adc
cmpb
inc
popf
mov
or
mov
mov
mov
mov
je
mov
call
cmpsb
or
mov
ljmp
push
inc
or
cmc
and
insb
xchg
xlat
mov
popf
lock
xor
mov
and
mov
mov
sub
jp
push
outsb
rol
adc
xchg
js
inc
xchg
xchg
cld
xchg
ret
inc
clc
imul
lea
sbb
dec
test
test
jb
mov
mov
pop
adc
inc
mov
mov
push
mov
fs
pop
cmpl
bound
popf
mov
and
adc
loope
sarb
pop
xchg
mov
dec
and
xor
lret
int
loopne
jnp
cmc
sub
mov
dec
sub
sbb
bound
push
adc
mov
js
inc
dec
sbb
push
out
call
push
adc
cmp
test
jg
loope
push
jecxz
mov
xor
sbb
jp
cmp
movl
pop
mov
repnz
enter
or
jae
inc
mov
push
pop
outsl
inc
outsb
cmc
cs
pop
fmull
cmp
int3
ds
loope
cld
stos
pop
or
daa
inc
cld
jne
into
js
and
sbb
arpl
xchg
sbb
test
dec
scas
inc
out
add
dec
clc
roll
xchg
repz
push
inc
sbb
sarb
call
xchg
xchg
mov
std
sub
adc
and
lcall
fs
enter
mov
and
cmp
push
lock
xchg
scas
stos
mov
mov
sub
test
int
fstl
loop
push
arpl
test
ss
cs
mov
jg
sti
lock
xor
push
cltd
das
jno
or
xor
mov
popa
fidivrs
mov
mov
adc
xchg
mov
test
mov
adc
frstpm(287
nop
lea
aas
xchg
mov
aam
jns
lret
rorl
pop
jb
je
push
or
shll
sbb
add
xchg
push
adc
movsl
xchg
add
adc
dec
inc
dec
fsubrs
mov
mov
adc
inc
or
insl
cmp
mov
inc
dec
mov
fsubrp
mov
lea
mov
out
or
nop
outsl
arpl
mov
int
push
jecxz
test
pop
in
cmp
nop
lcall
sbb
mov
xlat
imul
test
cmp
iret
sub
bound
decl
xor
mov
sbb
mov
movsl
dec
fsubs
mov
sahf
push
or
inc
popf
add
scas
inc
sarb
pop
mov
xchg
mov
insl
std
pop
or
iret
add
mov
pop
xor
mov
adc
push
stos
je
sbb
or
popf
stos
sbb
dec
cmp
pop
inc
orb
data16
mov
inc
xor
stos
pusha
sbb
cld
xor
stc
shrl
sbb
push
cmp
cmp
jbe
fidivrl
inc
cltd
sub
loopne
shrl
jo
shl
call
in
into
jmp
inc
jmp
popf
pop
ja
je
xchg
jg
les
mov
adc
sub
push
push
sub
jge
lahf
icebp
adc
int
sbb
cmpsl
xchg
imul
cmp
cltd
out
mov
loop
cmc
cmpsb
jge
dec
fildl
dec
into
push
push
fstpl
and
lock
pop
jne
add
cltd
sbb
dec
cmp
xor
jmp
jae
mov
pop
xor
fadd
mov
or
push
movsl
cli
jecxz
subb
fwait
mov
xchg
insb
add
sbb
mov
pop
and
fimull
sbb
and
or
sub
stos
jnp
jno
mov
lretw
push
jne
pop
jg
add
leave
clc
outsb
xchg
jp
adc
lds
adc
jno
dec
scas
aam
cmp
cmp
jmp
fidivl
rorb
push
xchg
loopne,pn
nop
push
test
popa
xchg
jnp
inc
xchg
lods
xchg
test
or
cmpsb
xor
out
pop
cs
enter
rcll
jo
push
ds
jl
hlt
fwait
adc
push
adc
inc
pop
inc
in
mov
out
lock
push
pop
js
sbb
pop
in
mov
int3
mov
sahf
popf
into
or
push
fidivrs
sub
test
testb
rorl
or
inc
and
lods
lcall
fs
lods
add
sbb
sahf
repnz
push
data16
fstps
dec
sbb
cmc
inc
insl
push
test
arpl
movsl
test
push
mov
andl
dec
pushf
lret
sbb
inc
daa
aad
xchg
mov
push
imul
jb
sbb
xchg
mov
push
mov
mov
cmp
fwait
or
repnz
inc
iret
testl
ss
out
aad
mov
inc
jae
and
sbb
cwtl
fndisi(8087
call
add
sbb
xor
lea
cmpsb
bound
repnz
int
pop
lcall
notb
lods
std
mov
movsl
adc
jp
stos
cmc
mov
sbb
and
bnd
adc
test
insl
leave
test
popa
stos
stos
std
xor
xchg
sub
cwtl
inc
mov
sub
jp
jns
dec
lods
push
cld
inc
adc
add
hlt
fs
add
xor
lds
fs
in
enter
mov
nop
adc
in
in
pusha
adc
cmc
cmc
fcompp
pusha
mov
imul
or
negl
cmp
lods
inc
or
movsl
sub
push
jae
push
repz
and
adc
xchg
cltd
mov
pop
loope
lea
adc
stos
xchg
test
insb
rorb
jo
dec
mov
fmull
imul
xchg
jp
ljmp
ss
pop
or
andb
sub
mov
jmp
mov
out
mov
cmp
jne
adc
add
lea
ljmp
xchg
and
loope
and
mov
stos
arpl
sbbb
adc
xor
pop
divb
loope
cltd
push
lods
scas
or
jmp
inc
inc
loop
or
std
push
repnz
mov
or
xchg
shlb
fmull
dec
gs
jnp
das
adc
test
inc
mov
push
mov
mov
adc
hlt
sbb
mov
arpl
insl
adc
jge
bound
mov
rcrl
pop
adc
mov
aad
iret
shrl
mulb
in
je
outsb
dec
inc
arpl
hlt
mov
sub
push
adc
or
cmc
ffree
and
xchg
rclb
mov
jmp
inc
xchg
cmpl
nop
adc
fists
adc
rclb
push
aas
lock
test
add
jb
lea
inc
mov
loopne
add
mov
bound
ds
in
aaa
add
popf
pop
das
dec
lods
int3
ljmp
add
int3
repnz
xorb
mov
dec
int3
shr
add
ret
sub
mov
jae
out
inc
pop
sub
shrl
xlat
aaa
xor
push
shlb
pop
cmpb
ficompl
adc
sbb
aad
inc
xchg
sbb
mov
dec
in
inc
imul
xchg
adc
inc
push
mov
icebp
push
in
dec
mov
scas
push
fwait
or
cmpsl
scas
pusha
scas
pop
lea
loop
std
lcall
psubsb
lret
enter
out
inc
mull
iret
jl
pop
dec
pop
repz
mov
inc
shrb
or
xor
sarl
outsl
in
shrl
mov
lock
fldt
xor
cmp
mov
jle
repnz
ja,pt
sahf
inc
aas
jno
imul
mov
lret
clc
push
cld
iret
lret
ret
out
inc
lret
adc
xchg
or
pusha
lds
push
sub
mov
sbb
jmp
push
mov
pusha
mov
add
pushf
inc
ds
fstp
pop
gs
cmp
arpl
sbb
push
add
sbb
inc
lds
inc
test
adc
nop
sub
outsl
leave
jp
fisttpl
adc
mov
xchg
sub
push
xchg
hlt
pop
and
bound
cmpsl
jo
insb
ret
or
cmpl
cltd
js
cmp
dec
add
mov
adc
aaa
sub
aas
push
dec
jns
sbb
imul
mov
or
sarl
out
xchg
popa
ret
sub
fs
adc
loope
sub
and
and
fwait
lahf
int
subb
and
shr
pop
pushf
xor
push
loopne
fidivl
and
mov
insb
test
xlat
sbb
popf
sbb
nop
add
in
sarl
xor
sub
jno
mov
lcall
mov
add
sub
mov
jge
cltd
and
push
int3
pop
stos
in
or
mov
and
mov
and
and
imul
insb
xor
or
fwait
and
int3
and
sarl
pop
sub
call
add
aad
mov
jmp
xchg
mov
clc
sahf
mov
push
out
aam
xlat
mov
mov
call
imul
sbb
cmp
inc
popa
mov
pop
in
xchg
pop
nop
mov
out
jno
add
xchg
push
in
arpl
popa
cltd
dec
mov
sub
aaa
neg
cmp
cwtl
dec
mov
or
in
jl
pop
adc
and
jo
test
fimuls
shl
inc
dec
sbb
cltd
aaa
mov
and
xchg
and
cmp
pop
cmp
outsl
jge
ret
mov
and
pop
into
jge
dec
xlat
or
icebp
and
out
and
divl
or
stos
orl
add
push
mov
pop
inc
pop
inc
repz
xchg
sbb
shlb
scas
mov
mov
add
lret
cmpsl
mov
xchg
xchg
pusha
mov
das
les
push
icebp
jg
or
dec
out
vprotd
stos
xor
and
push
and
aad
xchg
pop
xchg
inc
xchg
mov
loop,pt
movsl
mov
ja
sbb
vpmulhuw
mov
shll
out
adc
or
int
inc
push
sub
jno
lods
dec
mov
sbb
mov
lock
adc
arpl
out
jl
pop
dec
lret
mov
mov
mov
jb
sub
cmpsl
js
jo
test
paddusb
or
cs
ljmp
mov
in
xchg
mov
mov
xchg
pop
xor
inc
push
mov
mov
dec
and
lock
xor
or
push
std
js
rcll
add
mov
cmpsl
or
lods
push
jp
cmpsl
test
and
inc
mov
pop
test
pop
call
lods
xlat
adc
cltd
jp
push
repz
mov
hlt
xor
stc
daa
push
mov
pop
inc
cmpsb
scas
lea
push
mov
cmpsb
xchg
fcoms
inc
push
loope
push
sbb
popf
pop
mov
jo
lahf
mov
fdivr
mov
sub
rclb
adc
movsl
mov
stos
pop
in
int
push
int3
jno
fmull
pusha
ja
arpl
jl
daa
inc
mov
pop
sarl
jp
pop
inc
and
mov
ficoms
xchg
mov
sub
sti
cld
xchg
jbe
bound
aam
pop
hlt
xchg
push
aas
out
mov
pop
add
xor
pop
cmp
pop
std
inc
fxch
xor
pop
xchg
test
fimull
imull
icebp
call
je
add
dec
out
push
adc
mov
daa
adc
pop
mov
fs
shlb
jo
cmp
mov
lods
and
movsb
xchg
sub
fs
stos
movsl
adc
dec
add
mov
xor
insb
ret
pushf
shlb
dec
pusha
lret
jae
jl
inc
and
mov
fs
cmp
mov
lds
jg
inc
les
out
loop
gs
inc
scas
ljmp
jne
and
scas
xor
aad
out
jo
inc
stc
mov
mov
mov
pop
mov
and
xor
repz
in
lea
stos
aam
lcall
pop
or
mov
jns
repz
jae
pop
mov
adcl
enter
xchg
inc
mov
addr16
mov
add
push
mov
scas
movsl
in
lcall
mov
cltd
subb
repz
dec
cmove
pop
sub
mov
daa
sub
out
rorl
pop
jge
rorl
sbb
ret
dec
fiadds
or
xor
pop
mov
pop
cmp
int
xchg
pushf
or
ds
pop
jmp
xlat
out
aam
inc
cli
out
cmp
test
decl
cwtl
in
jle
xor
xchg
fldl
movsb
jp
lahf
mov
popf
adc
sub
movsb
mov
xchg
scas
sbb
int
test
testb
inc
ja
add
xor
gs
ret
dec
xchg
nop
jne
jbe
cld
adc
sbb
inc
cmpb
repz
js
fwait
mov
shrl
icebp
stos
sub
pop
imull
aam
js
mov
repz
stos
add
jnp
lret
ljmp
testb
jns
fnsetpm(287
pusha
mov
adc
sub
sbb
push
jb
pop
out
sub
mov
jno
leave
adc
xchg
push
or
add
mov
shr
push
or
popa
pop
sub
mov
call
into
cltd
mov
adc
shrb
or
sub
xor
pop
inc
sbb
sub
inc
in
mov
mov
addb
int
dec
jns
adc
add
sbb
mov
add
ret
jle
cmp
ja
enter
mov
add
lds
dec
in
data16
mov
mov
call
mov
or
add
push
inc
outsl
shl
cli
movsb
loope
movsb
iret
fldl
or
adc
inc
nop
mov
loope
popa
mov
push
loop
mov
orl
enter
loopne
cmp
push
loopne
icebp
xor
fs
repz
cltd
mov
sub
loop
sbb
mov
or
jle
das
jmp
jb
xor
out
and
push
mov
inc
ljmp
lods
mov
rcrl
dec
lods
ja
dec
sti
jno
cwtl
and
lea
fcomps
pop
sbb
sarb
cmp
lods
xor
iret
cmpsb
ds
cmc
inc
into
sbb
arpl
or
mov
sbb
stos
inc
mov
dec
aaa
add
hlt
xchg
js
xor
shr
sahf
in
movsb
pop
adc
ret
sub
pop
out
inc
xor
cs
pop
call
mov
test
push
icebp
cld
cmp
add
pop
xchg
cmp
ret
lds
jg
inc
pop
ljmp
test
imul
stos
mov
adc
mov
jb
icebp
xrelease
dec
pop
mov
lea
aam
dec
lock
add
mov
out
pop
xchg
inc
mov
inc
in
out
in
jno
or
movsb
jnp
push
xor
mov
addb
push
dec
jmp
fcomps
sahf
outsb
fstpl
clc
fstp
push
xchg
cld
jecxz
scas
dec
aad
pop
sbb
dec
and
popa
push
setg
into
insb
xchg
pusha
aam
mov
xchg
mov
push
push
pop
mov
std
jecxz
repnz
pop
aam
mov
fisubrl
gs
fldcw
in
push
mov
icebp
xchg
mov
test
ss
sbb
lea
ljmp
aad
les
aad
in
hlt
lahf
es
inc
pop
repnz
inc
cs
int
push
mov
push
mov
jp
pushf
pop
insl
popl
add
addr16
cmp
imul
mov
and
push
out
aam
jo
fsts
fmull
inc
ss
xchg
mov
mov
push
and
cmp
in
cwtl
sub
sub
adc
int
lea
xchg
push
mov
sahf
sbb
sar
lret
out
pusha
sbb
add
cs
js
movb
test
call
das
jbe
mov
add
or
enter
jnp
fwait
andb
int
stc
or
mov
push
scas
mov
jle
das
movsl
inc
scas
rcll
pop
xchg
cli
cmp
stos
insl
xor
xor
pop
or
pop
and
xchg
mov
in
cwtl
ror
inc
mov
push
gs
jge
pop
xchg
bound
sbb
pop
xor
adc
insb
pop
and
lcall
loope
push
aam
jno
xor
daa
js
ds
js
aam
lahf
jb
jne
cltd
sbb
fsub
or
add
fsts
lahf
dec
sbb
pop
or
fwait
dec
lret
fists
outsl
mov
dec
pop
jge
insb
lret
cmp
sub
jnp
leave
je
xor
mov
in
shrl
mov
sbb
imul
js
sub
test
cli
and
mov
fmuls
or
inc
ret
loope
popa
mov
and
popa
or
fstps
test
repnz
or
cmp
psubsw
test
sub
jp
mov
push
rcrl
dec
dec
test
mov
mov
or
xchg
fmull
adc
inc
movsl
jl
pop
pop
pop
outsl
mov
insb
popf
dec
mov
cmp
inc
dec
in
pop
in
je
xchg
inc
mov
or
mov
sbb
hlt
imul
cwtl
movsl
addr16
adc
dec
fisubs
inc
xorb
xor
arpl
mov
js
sub
leave
jl
ja
cld
cwtl
rclb
cmpsl
iret
out
insb
adc
xchg
aas
sub
loopne
lea
mov
inc
cmp
lcall
or
mov
adc
mov
push
adc
test
loopne
xchg
arpl
push
hlt
jl
pop
aam
pop
aaa
xchg
sahf
in
lretw
push
lea
pop
pop
test
push
xor
sub
int3
lea
cld
sub
push
jns
mov
pop
mov
popf
adc
cwtl
mov
mov
sbb
fwait
xchg
insb
movsl
nop
xor
in
outsl
in
lcall
mov
arpl
push
popa
sbb
pop
cmc
test
xchg
xchg
bound
push
sahf
inc
dec
inc
test
div
inc
mov
or
int3
push
aad
js
xchg
js
jge
ss
jg
add
fmull
jg
icebp
add
js
cmp
fbld
push
inc
stc
jo
fwait
cmpsb
dec
ret
pop
daa
addl
dec
and
xlat
int3
icebp
push
mov
and
xchg
imul
adc
adc
xor
xor
idivl
jmp
pop
movsb
insb
jns
out
imul
jo
cld
push
and
sbb
ret
pop
mov
stc
mov
and
stos
and
sbb
scas
push
mov
pop
lock
dec
pop
loope
xchg
sti
inc
dec
loope
dec
push
mov
ret
out
jecxz
fs
sbb
or
fdecstp
jl
add
mov
push
shll
pop
sub
sub
stc
ja
pop
push
data16
popl
ret
pop
cmp
mov
pop
insl
add
pop
inc
mov
in
adc
jmp
jge
iret
je
lahf
add
mov
call
clc
mov
pop
jecxz
lea
jbe
test
fbld
sbb
add
lcall
insl
fcompl
dec
pop
pop
cmp
rcll
fistpll
jmp
push
push
cmpb
xchg
xchg
dec
dec
cltd
lahf
push
mov
ds
cmpsb
dec
cmc
jbe
cli
mov
jnp
shll
sarl
adc
xchg
int3
fistpl
bound
enter
jmp
mov
repz
mov
adc
mov
mov
adc
adc
int3
jmp
bound
int
dec
adc
fidivl
movsl
inc
shlb
lahf
repz
std
xchg
in
adc
out
pop
jge
roll
jnp
sub
mov
outsb
loope
pusha
aam
popf
xlat
mov
scas
test
cs
clc
aaa
rorl
adc
pop
xor
push
sbb
leave
jno
imul
sub
push
loop
cmp
push
test
jbe
shlb
cmp
add
jbe
pushf
and
push
movsb
subb
test
leave
orb
cmp
ja
lcall
rorb
mov
and
mov
mov
pop
mov
aad
in
cmp
imull
es
jl
iret
fisttps
hlt
lcall
enter
inc
rcrb
cld
cmp
mov
cmp
enter
imul
pop
das
sub
lea
popa
lret
je
xchg
hlt
sbb
das
and
jnp
add
jp
pop
gs
cwtl
in
adc
and
fs
or
push
cmp
adc
mov
dec
dec
shl
mov
rcl
adc
jg
jbe
in
lods
xor
xchg
push
cli
mov
pop
add
sbb
sub
or
fnsave
mov
fisttpll
fcmovbe
dec
dec
fidivl
andl
in
dec
movsl
jmp
mov
push
outsb
cmc
imul
inc
pop
push
xchg
popa
nop
mov
fwait
stos
and
fidivs
xchg
shll
sbb
sarb
pushf
lret
movb
in
xor
dec
jno
pop
bound
push
pop
push
inc
sbb
ficoml
jp
dec
cmp
scas
cs
icebp
stos
daa
rcr
js
push
cmpsl
push
mov
popf
add
ds
cwtl
dec
int3
arpl
mov
sub
call
lods
xorl
out
jg
push
push
icebp
push
xor
inc
xlat
lods
out
cwtl
cmc
mov
mov
dec
and
xlat
cmp
dec
mov
lcall
imul
mov
les
mov
mov
pop
divl
mov
filds
out
incl
cmp
mov
cmp
pop
sti
lahf
add
bound
mov
jge
test
xchg
sub
push
xchg
push
jecxz
or
pushf
mov
jmp
jle
iret
xchg
jecxz
pusha
xor
adc
sbb
sbb
movsb
sub
add
dec
pop
mov
into
xchg
aam
push
adc
and
adc
mov
and
fwait
push
or
ret
mov
pop
andl
es
adc
add
or
or
pusha
cmp
mov
incl
xor
ror
lock
mov
sbb
data16
mov
xlat
adc
mov
bound
mov
add
sti
push
push
and
sti
cwtl
push
xlat
mov
lret
test
cwtl
test
add
push
aaa
test
jbe
add
in
out
cltd
ljmp
inc
ds
mov
icebp
jae
dec
lods
rclb
jne
shl
sub
and
add
mov
scas
enter
push
enter
sbb
xor
jecxz
add
or
fcomps
adc
jecxz
fwait
ret
ss
std
xchg
push
es
cmp
and
ss
adc
pop
insl
ja
lods
int3
push
cmpsb
repz
push
adc
sahf
ljmp
fimull
mov
ret
xor
jb
xor
mov
push
cld
jg
out
pop
xor
dec
xlat
or
rolb
ss
dec
sbb
or
lret
xorl
out
outsl
push
nop
or
add
jge
fldt
dec
add
xor
nop
stos
sub
push
scas
sbb
in
ljmp
push
stos
shrl
test
inc
outsb
or
push
lock
pop
sub
mov
mov
lret
pushf
inc
pop
and
mov
mov
sbb
je
adc
cmp
adc
add
cltd
pushf
and
cltd
insl
in
stos
xchg
fwait
inc
or
jl
popf
leave
lods
sbb
sti
and
fisubrs
std
popa
xor
arpl
xor
mov
aam
pop
mov
popf
lret
jno
ljmp
int
mov
sub
mov
sti
outsl
sub
xor
rorb
fisubs
sub
jge
push
jb
pushf
jmp
jecxz
sbb
jb
push
adc
add
inc
pop
inc
mov
into
imull
mov
pop
add
js
inc
push
mov
or
test
test
add
push
sub
imulb
lret
js
lea
mov
xchg
pop
jge
mov
push
push
mov
js
adc
pop
xlat
fcmovnu
movaps
sub
movsl
mov
jge
xchg
loopne
push
scas
push
outsb
out
mov
xor
outsl
test
push
cmp
adc
push
inc
arpl
mov
fs
and
sbb
sbb
test
fstps
adc
leave
xor
lds
lcall
xor
popa
outsb
cltd
xchg
cmc
stos
in
jnp
inc
stos
jp
int3
mov
inc
fidivl
cli
nop
push
jnp
sbb
mov
jnp,pn
sub
cmpl
pushf
addr16
or
cmc
push
stos
sarb
leave
lock
jo
std
popa
dec
dec
pop
xor
jbe
lret
mov
or
xor
test
mov
adc
pop
shlb
clc
pop
in
mov
popa
adc
lcall
jne
repnz
pop
dec
mov
mov
sub
stos
cmpsb
xchg
aam
lods
xchg
je
test
adc
push
int3
sub
inc
shr
pop
mov
out
sub
call
pop
jp
jecxz
inc
and
ljmp
dec
or
mov
mov
dec
dec
or
sbb
or
jno
mov
in
mov
mov
jmp
test
inc
pop
mov
mov
sub
inc
mov
xchg
mov
cmpsb
mov
out
sbb
jmp
mov
mov
out
pop
stc
repz
lahf
ds
and
sub
and
sub
push
fwait
add
pop
or
sub
and
xor
mov
jp
fidivs
dec
les
imul
in
shl
or
fiaddl
mov
sti
add
add
inc
dec
icebp
push
popf
mov
andl
cmpl
xor
xor
jne
and
ret
rcll
adc
rorl
into
je
xchg
sti
adc
sti
sbb
mov
dec
sbb
add
pop
and
dec
jo
aam
pop
arpl
and
mov
lods
decl
fmulp
xchg
fcoml
into
cwtl
pop
lods
sbb
imul
mov
cs
xor
iret
fmuls
mov
cs
pop
mov
rclb
push
jnp
or
in
pop
not
out
ret
je
cmp
out
std
outsl
lods
push
inc
dec
out
or
mov
jge
push
in
inc
dec
inc
stos
adc
insb
cmp
add
in
mov
inc
fsubl
outsb
ss
test
or
pusha
stc
jns
push
cmp
mov
lods
xor
bound
dec
add
add
out
mov
cltd
mov
andl
rcll
jbe
mov
cli
push
cmc
bound
jle
fldl
popf
enter
mov
fcoms
mov
dec
add
jmp
jno
mulb
add
xchg
push
push
jle
lods
ljmp
push
insb
mov
aaa
orb
inc
cmp
xchg
cld
cld
push
xacquire
sahf
je
gs
adc
je
arpl
push
xchg
xlat
and
fisttps
sbbb
enter
and
jp
in
pop
out
add
int
mov
mov
repnz
mov
ret
or
lcall
pop
fcoms
xor
xlat
cmp
ss
mull
jno
rorb
push
xlat
mov
imul
in
loope
pop
stc
push
xor
fmull
paddsb
cwtl
test
sbb
ds
cltd
xchg
xor
cmp
bound
in
je
mov
or
and
daa
scas
jno
cld
xor
rcrb
cmc
sbb
pop
add
mov
pop
rol
xor
mov
sbb
int3
sbb
fldt
loope
lea
dec
adcl
pop
popa
pop
ja
lret
xchg
adc
sub
push
cmp
adc
bound
xorl
mov
xchg
sbb
lret
fisubs
dec
hlt
sub
dec
mov
loop
mov
dec
call
jmp
mov
xchg
test
add
pop
fwait
sbb
xlat
loopne
fcompl
dec
outsl
cmp
dec
fdivrl
sbb
pop
and
mov
add
mov
or
or
sbb
or
jge
cwtl
daa
add
shr
or
sub
jno
cmp
cltd
lahf
ficoml
scas
dec
std
movsl
xchg
cld
inc
jle
out
subl
jns
add
orb
xchg
int
pusha
push
lret
lahf
push
in
mov
adc
dec
xchg
fwait
frstor
xchg
mov
shr
add
insl
dec
fsub
cmp
imul
mov
ss
cmc
jno
sbb
scas
mov
mov
fsubrs
mov
out
sub
cld
aad
cld
call
fldenv
fcmovnbe
jp
jno
mov
aas
test
subl
push
mov
cmpsl
jmp
daa
ud0
clc
add
and
xchg
push
shrb
mov
roll
cmpsb
xchg
stc
push
pushf
repnz
sbb
lods
push
adc
add
mov
movsb
adc
add
pop
or
mov
or
cmpsb
jmp
into
fistpl
mov
pop
fsubrs
add
mov
xor
or
std
test
dec
or
inc
mov
imul
xor
pusha
mov
roll
lahf
outsb
mov
push
mov
mov
add
lret
rolb
mov
jae
int3
push
jno
lcall
loopne
das
add
mov
notl
shlb
shr
mov
fadd
adc
lea
lret
pop
pop
push
stos
mov
and
mov
fldenv
sbb
jae
ficomps
cmpsl
dec
mov
aas
xchg
jns
push
jb
lds
test
xorb
fdivrl
imul
mov
stc
mov
out
jae
decb
cmp
mov
bound
adc
cmp
and
out
xor
enter
sar
inc
cltd
or
xlat
push
dec
fiaddl
dec
pushf
lcall
lret
pushf
inc
jle
scas
push
jae
mov
lahf
mov
fbstp
adc
push
mov
jp
xor
aad
add
or
hlt
inc
pop
mov
jno
xor
push
setle
les
call
mov
mov
pop
mov
dec
rcr
push
cmp
mov
push
inc
popf
fucomip
mov
cmp
and
rorb
sub
jns
sbb
lahf
cmp
sbb
lds
or
add
inc
icebp
outsb
shrl
add
mov
out
push
sbb
jl
cld
js
int3
and
pop
adc
push
je
add
push
sbb
adc
lahf
es
pop
xor
jnp
add
push
iret
mov
fsts
xchg
and
sbbb
in
jns
xorl
imul
sub
inc
mov
cmp
fildl
pushf
jno
andl
cmp
out
mov
xchg
mov
jmp
int3
or
push
insl
sub
pop
iret
ljmp
addl
mov
shl
scas
sbb
jmp
fnstenv
pop
push
jno
mov
inc
bound
outsb
mov
cmpsl
imul
sarl
adc
in
push
jb
adcb
pop
nop
pop
xchg
push
adc
and
mov
and
jb
js
sub
push
lret
lds
into
or
ror
roll
sub
sarb
fcoml
out
pop
movsl
sbb
sbb
pop
add
cmpsb
int3
pop
inc
lret
xchg
jle
aam
in
insb
test
das
subb
mov
or
inc
shlb
and
xchg
lret
pop
clc
cmp
or
and
rorb
cmp
cwtl
imul
stos
sahf
dec
movsl
rcll
and
sti
dec
mov
nop
inc
je
inc
out
cmp
lods
lea
div
aad
mov
shrl
cmp
mov
sarb
cs
push
mov
adc
andb
inc
sbb
test
jbe
fidivs
fists
ja
loop
jae
xchg
ds
fucomi
cmp
sub
out
mov
pop
outsb
sbb
outsl
in
xor
out
mov
loopne
add
sti
jne
dec
enter
loopne
add
mov
cmp
fdiv
adc
sbb
xor
pop
out
int
or
setle
and
mov
sbb
jmp
icebp
insl
es
out
fwait
sbb
fnstsw
push
fdivrl
or
test
or
jns
xchg
mov
add
jno
or
jne
or
ja
fstl
inc
push
addr16
mov
cwtl
andb
fnstsw
arpl
bound
xrelease
lods
sbb
xchg
imul
mov
out
lcall
or
pop
and
cmp
cmp
xor
aad
lods
pop
dec
jecxz
push
loop
or
mov
inc
add
fwait
jp
outsb
xorl
outsl
sub
sub
pop
cmp
insb
leave
clc
into
fwait
and
mov
inc
in
in
jnp
movsl
push
adc
iret
mov
stc
xchg
int
mov
pop
xor
xchg
jno
out
jp
icebp
lea
iret
sbb
and
pushf
arpl
js
cmc
syscall
xor
mov
sub
sub
nop
sbb
lods
clc
inc
pop
lock
fistpll
cmc
adc
mov
jmp
sti
xor
sub
cmpsb
mov
stc
add
lret
mov
ljmp
cli
mov
inc
imul
loope
mov
ja
mov
mov
aam
rorb
push
fisubrl
or
mov
lret
lea
loop
xchg
xor
cld
pop
in
bswap
daa
add
mov
in
fnsave
xchg
test
fs
and
inc
xor
or
cmpl
es
pusha
lcall
sbb
inc
jle
mov
sub
aas
jno
push
ret
xor
push
and
mov
bound
dec
mov
movl
ret
jnp
sbb
cmp
je
dec
jl
jno
and
movsb
fmuls
xchg
push
pusha
test
mov
push
js
iret
cs
fcmovnb
adc
or
outsb
pop
mov
lock
sbb
lods
cmpb
leave
clc
popa
in
fsubl
incl
ret
icebp
mov
stos
mov
cmp
lds
int3
outsb
icebp
add
pop
jp
sub
cld
shrb
insl
bound
outsl
jo
cmp
stos
mov
mov
cltd
in
hlt
mov
in
sbb
sub
fdivs
shlb
xor
xor
xchg
fwait
inc
push
mov
lods
push
lret
mov
fmuls
inc
aas
push
les
mov
sub
movsb
inc
fcompl
inc
enter
xor
sub
clc
sub
sbb
setle
push
xlat
int3
pop
sahf
fnstsw
call
movq
orb
lret
lret
shr
jmp
dec
stc
and
pop
or
jns
mov
pop
and
test
and
xchg
inc
rcrl
pop
xor
xchg
cmp
sbb
xorl
sbb
leave
or
sub
xor
pop
mov
mov
aam
mov
adc
add
add
adc
leave
mov
mov
and
push
mov
repnz
scas
ljmp
sub
pop
dec
std
pop
jno
jb
cld
adcb
sub
xchg
pop
or
inc
insb
jne
mov
mov
inc
aad
lcall
rcr
cmc
adc
xchg
inc
xor
push
xor
dec
aad
sub
popf
inc
xchg
je
cwtl
cmpsl
jl
enter
or
fiadds
ljmp
mov
dec
mov
push
scas
mov
ret
push
or
ss
aas
sahf
mov
into
dec
mov
inc
std
mov
int
cmc
cmp
clc
jno
movsl
xchg
dec
push
add
and
lea
std
jecxz
lret
sti
pop
cmpsl
lcall
sub
cltd
and
aaa
orb
add
lret
fldt
ds
mov
ret
jle
push
xor
out
jmp
or
add
lcall
fnstenv
lock
mov
scas
call
mov
sbb
push
lods
hlt
jge
and
aas
insb
inc
int3
sahf
sbb
fs
loope
movsb
dec
xchg
inc
dec
out
cmp
xorb
pop
jmp
stos
inc
jae
notl
lcall
mov
nop
pop
add
int3
movsb
pop
std
jb
std
lahf
xchg
pop
stos
pop
sub
push
test
popa
sub
pop
push
dec
jnp
fnsave
mov
outsl
lret
cmp
je
dec
xor
outsl
gs
mov
push
xor
xchg
lret
sub
sbb
cs
out
loop
fsubrs
ss
outsl
lret
add
loopne
jmp
movsl
add
jb
xchg
push
ficoml
int3
xchg
enter
inc
or
test
sahf
into
fwait
push
adc
and
imul
jmp
loopne
loope
es
inc
aam
lahf
ds
icebp
fcmovnu
jg
mov
mov
into
xchg
sub
inc
ds
or
stos
mull
xchg
fnstenv
inc
adcb
add
and
lcall
movsl
jg
xchg
dec
movsl
cmp
or
sub
pop
fs
mov
push
iret
xchg
xor
sub
rol
pop
jne
dec
in
mov
sub
xchg
jg
imul
add
add
push
repz
jae
jp
sahf
bound
xor
mov
and
mov
jl
add
xor
cld
dec
or
pop
mov
int3
subb
cld
in
or
pop
pushl
add
shl
cs
loope
lret
cmp
xchg
mov
mov
inc
aam
mov
mov
mov
xchg
xor
mov
movl
and
lret
or
push
jmp
push
dec
lcall
movsl
dec
inc
add
pop
cmp
pop
jp
divb
insb
sub
xchg
mov
fcompl
push
push
push
pop
adc
cmc
test
mov
mov
sub
mov
pop
cmpb
inc
popl
nop
jge
and
jne
clc
push
add
jae
add
or
shl
repz
dec
int3
ja
int
or
shrl
adcl
xchg
adc
rcl
mov
lods
scas
mov
fstpt
lcall
movsl
pop
lret
mov
sarl
mov
notb
inc
jb
gs
cmp
into
push
fistpl
mov
or
cs
lods
mov
or
out
sahf
lds
test
nop
std
push
push
or
lcall
cld
std
jno
das
mov
pop
mov
lods
jae
lcall
jo
pop
fists
and
xchg
sbb
pop
cmp
xor
daa
sub
pop
ja
lret
mov
sub
repz
jmp
fidivrs
adc
sahf
jl
fimuls
repz
mov
movsl
sub
cmp
adc
test
cmp
xchg
test
xor
lods
adc
cld
push
push
add
dec
push
sarb
and
stos
mov
mov
adc
or
bound
mov
mov
shrl
jno
xchg
fcoms
hlt
dec
inc
jb
jmp
test
movsl
sbb
xor
js
popf
mov
mov
add
cmp
ret
adc
push
cld
inc
mov
and
mov
cwtl
shr
sahf
fcoml
cs
repz
mov
nop
sub
xor
lods
mov
gs
adc
push
sub
jb
dec
cli
add
push
testb
into
cmc
jnp
imull
adc
out
sub
addr16
sbbl
add
pop
shll
js
xor
push
insb
inc
dec
sbbb
cmovg
mov
inc
hlt
mov
xor
bound
gs
sbb
xor
hlt
cmpsb
repnz
sbb
mov
push
cld
or
andl
dec
ds
lock
fnclex
in
xchg
jbe
fiaddl
cmp
cli
icebp
cmc
push
cwtl
jno
dec
or
inc
adc
push
sbb
fstps
jo
sbb
add
and
push
mov
les
jnp
sarl
dec
testb
xchg
adc
fnstcw
test
dec
mov
pop
sub
jb
cmp
cwtl
mov
fcompl
mov
mov
rorl
xor
mov
mov
pusha
shlb
lahf
push
jnp
push
inc
sbb
cwtl
inc
mov
and
sahf
sub
lret
mov
out
jbe
mov
int
fsubl
xchg
insl
in
sbb
lock
sbb
add
mulb
lret
push
icebp
xchg
jae
movsl
insl
or
faddl
xchg
xchg
add
out
mov
adc
add
popa
mov
mov
loop
cwtl
push
sub
inc
inc
fdivs
sbb
inc
sbb
add
les
repz
imul
jle
and
inc
sahf
mov
clc
jnp
lock
inc
mov
mov
xlat
movsb
mov
sub
test
cmp
lcall
push
mov
mov
jle
outsb
xor
mul
divl
jle
inc
sbb
cmp
imul
addl
inc
lea
push
jle
sub
sub
repnz
push
push
sahf
call
mov
lods
and
jle
out
and
repnz
mov
sbb
add
popa
sub
aam
mov
std
mov
jns
push
inc
jl
inc
stc
jmp
sti
jnp
mov
ret
int3
out
ljmp
out
in
into
jmp
lods
mov
jno
daa
mov
jbe
inc
insl
test
ss
fs
pop
inc
inc
push
cmc
push
dec
es
adcl
idivb
xchg
cmc
and
cli
jns
mov
pop
or
ja
jno
arpl
jbe
push
fidivrs
jl
gs
rep
mov
popa
lock
sahf
push
inc
lods
and
xor
jle
push
fmuls
icebp
inc
sub
push
xchg
xor
adc
je
rcrb
push
outsb
les
mov
fimull
aaa
pop
fistpll
test
in
sub
cmp
sub
das
pop
das
jl
jnp
push
sbb
movsb
dec
mov
rorb
xor
lea
pop
fisttps
xor
inc
push
stos
pop
mov
insb
lcall
dec
fiaddl
jne
aad
in
sbb
icebp
mov
js
cmp
dec
push
xchg
and
pop
fiadds
push
inc
lods
sub
cmp
xor
ds
in
xchg
push
xor
jne
mov
xor
xchg
test
mov
movsl
mov
xorb
pop
jl
mov
cmc
xor
pop
mov
mov
xchg
clc
adc
pop
inc
pop
push
add
xchg
ret
ret
sub
dec
sbb
pop
mov
std
je
xchg
fcoms
out
push
fisubl
and
mov
ficoms
and
sub
shll
mov
adc
mov
ret
pushf
pusha
xor
sub
or
repnz
sbb
cmc
jmp
mov
sbb
sub
ret
cmp
repnz
fistps
into
or
mov
xor
lret
push
leave
or
repz
or
mov
les
cmp
fisttps
mov
push
inc
pop
pop
inc
imul
fimull
and
orl
js
rolb
fwait
jb
stos
inc
sbb
sub
and
dec
sub
cmp
cmp
inc
cmp
mov
add
aam
lods
ret
outsb
aaa
dec
mov
pop
and
lods
sbb
call
jo
and
sub
shlb
mov
dec
clc
inc
mov
mov
xchg
in
sbb
push
push
lahf
inc
mov
rorb
das
hlt
orb
jne
popf
add
push
xor
sbb
inc
xor
dec
or
in
call
inc
insb
sub
xor
jns
or
lcall
and
loope
lret
outsl
xchg
enter
and
push
or
cs
test
sbb
les
xchg
jg
jns
aad
adc
dec
lret
frstor
push
fwait
adc
adc
fiadds
insl
mov
and
pop
mov
add
or
adc
loope
cmp
bound
movsb
hlt
or
or
scas
ret
push
filds
insb
cltd
mov
adc
insl
dec
xchg
jne
or
call
jnp
mov
fnsave
jns
mov
or
aas
pop
lds
pop
div
int3
pop
dec
mov
dec
int
cwtl
dec
xchg
push
call
pop
mov
rorl
push
scas
mov
pop
pop
test
jmp
lcall
clc
adc
add
pop
mov
in
movsl
push
lods
pop
adc
xchg
lock
xor
repnz
pop
inc
dec
shl
arpl
mov
fbld
aad
inc
lods
cmp
std
cmpsb
dec
es
push
scas
test
and
sbb
ljmp
sbb
call
sbb
pop
mov
data16
pop
sub
imul
inc
jo
adc
cmpl
xchg
fmuls
loopne
jbe
sub
jp
cmp
adc
add
jp
jns
loopne
mov
mov
dec
repnz
sub
cmpsl
aaa
arpl
mov
dec
xchg
add
push
jge
cs
jg
insb
addr16
sti
mov
addr16
xor
in
sub
cmp
popa
ficoml
out
pusha
lcall
inc
pop
mov
xchg
hlt
xchg
sub
sbb
test
in
jmp
test
stc
inc
aas
enter
jl
loope
mov
call
push
mov
jb
dec
sbb
enter
mov
out
jne
pop
ja
pushl
inc
mov
gs
jge
ss
jne
add
and
out
bound
push
jmp
lahf
mov
mov
fdivs
arpl
or
lods
adc
cmpsb
push
mov
xchg
cmp
sbb
or
xchg
inc
out
es
xchg
int3
mov
rorb
mov
sbb
cmpsb
adc
ljmp
shlb
nop
sbb
and
cmp
enter
scas
xchg
sub
fiaddl
dec
fists
sub
dec
push
mov
pop
lock
jecxz
cmp
les
sub
cmp
inc
sub
mov
icebp
cmp
dec
jl
lods
test
aas
pop
cmc
pusha
rorl
mov
sub
insl
test
push
add
cmp
out
mov
leave
inc
mov
inc
pop
outsl
xor
nop
cmpl
into
sbb
or
mov
sti
adc
stos
lahf
pop
ss
xor
add
mov
jmp
les
lea
or
xor
outsl
fcoml
mov
cmp
xchg
inc
pop
mov
jno
aad
cmp
movsl
lods
add
mov
mov
movsl
sub
mov
pop
je
mov
aam
and
int3
ret
std
insb
lret
pop
in
mov
sbb
cmp
test
adc
loopne
mov
jl
aas
pop
sbb
pop
pop
in
aas
scas
xchg
mov
pop
leave
insb
fimull
mov
popa
cltd
popf
mov
mov
mov
cmp
adc
xchg
pushf
test
fs
or
daa
and
cld
fldenv
pushl
shlb
jno
and
rcl
mov
adc
cmp
shlb
aad
repz
dec
sbb
xcrypt-ofb
cmpsl
stos
xchg
dec
inc
pop
mov
stc
inc
push
cs
inc
mov
popf
aas
push
push
sub
xchg
aad
xchg
popa
movsb
data16
sti
je
mov
add
aad
sbb
or
loope
xchg
dec
aam
sbb
push
imul
jp
test
popf
out
je
sub
repz
mov
je
insb
jbe
add
adc
jl
sbb
jmp
loope
or
pop
imul
xchg
aaa
and
out
jae
add
mov
lcall
dec
ret
les
dec
mov
lods
pop
jp
sbb
js
xchg
dec
je
push
fnsave
mov
or
adc
fistps
push
sbb
fcomps
add
std
popf
jle
jle
lahf
xchg
adc
subb
sbb
add
mov
cmp
or
rorl
psubusw
jecxz
sbb
or
adc
xchg
mov
scas
int3
fisttps
cmp
pop
mov
jne
pop
mov
jg
xor
mov
fadds
cltd
nop
adc
push
roll
fadd
jmp
cmp
jae
cmp
std
in
jmp
or
add
ficoms
iret
in
imul
ror
cmp
cmpsb
inc
adc
mov
test
xchg
pop
mov
jmp
sub
mov
dec
filds
dec
inc
adc
mov
mov
jp
cmp
cmpb
in
jmp
imul
mov
test
shll
rcl
sub
dec
shlb
xor
sarl
lds
sub
xor
pop
dec
js
jb
mov
enter
add
mov
and
cmpsl
inc
arpl
cli
add
xor
xor
imul
ror
jmp
arpl
pop
aas
lods
in
movsl
data16
and
out
iret
sbb
fmul
mov
mov
lret
inc
mov
imul
aam
mov
stos
out
mov
add
mov
mov
repz
iret
add
jb
imull
jecxz
fdecstp
aaa
in
inc
pop
dec
sbb
xor
cwtl
lcall
jmp
call
xchg
cwtl
aam
ljmp
adc
iret
jae
mov
out
ss
adc
push
out
hlt
jg
cltd
sbb
clc
cmp
xor
jbe
in
in
cmp
mov
sbb
mov
cmpsb
out
lds
dec
xor
imul
inc
dec
aam
xorb
xlat
mov
orb
out
scas
push
stos
xchg
mov
fsubp
rcr
or
js,pt
pop
xchg
icebp
outsl
pop
fs
repnz
aas
pop
adc
popf
mov
loopne
int
cltd
cmpsb
and
jg
xor
inc
jno
jge
sbb
xchg
out
dec
bound
mov
sbbl
mov
inc
lods
shlb
sarl
in
mov
add
sbb
lcall
adc
adc
insb
ljmp
popa
lods
stc
das
xchg
dec
scas
mov
dec
in
es
inc
stos
repnz
lods
add
cli
cmp
jae
leave
push
test
or
das
mov
lret
xchg
aam
xchg
mov
mov
int3
mov
arpl
dec
xor
cli
popf
add
pushf
clc
inc
ud1
std
push
pop
shll
sbb
ljmp
cltd
incb
orb
fdivl
loopne
mov
sti
sub
and
xor
mov
push
sub
cmp
int
testb
pop
pop
imul
repz
jo
lcall
sbb
mov
vcvttsd2si
out
mov
adc
push
stos
aam
imul
pop
cld
repz
shlb
adc
aad
cli
out
xor
or
jmp
jl
add
sub
loop
mov
ret
jb
shrb
push
adc
in
mov
cli
mov
sub
inc
leave
pop
mov
and
sbb
clc
insl
inc
inc
sub
pop
out
pusha
mov
dec
pop
ficompl
ja
fsubs
or
inc
and
add
test
jne
sahf
add
lds
add
rcrb
jecxz
dec
jmp
mov
pushf
imul
sub
fsubr
fs
sbb
fpatan
cmc
stc
sbb
ret
aad
pop
push
add
movsl
loopne
cmp
pop
mov
mov
push
enter
pop
pusha
push
js
lret
or
pop
adc
pusha
xchg
sbb
hlt
pusha
aad
mov
aad
f2xm1
push
ficompl
daa
mov
add
add
mov
mov
insb
jb
out
cs
addl
out
repz
int3
jne
popf
pop
fsubrp
inc
pop
arpl
pop
test
les
pop
jne
sub
mov
dec
jmp
ret
mov
jge
xlat
jbe
hlt
dec
cli
das
ja
and
int
dec
adc
jle
out
xor
add
mov
pop
add
jae
icebp
in
and
into
cmpsb
out
mov
and
mov
shll
mov
mov
aad
fnstsw
push
mov
mov
inc
xchg
lds
mov
int
fidivrl
or
push
push
jbe
or
cmpsl
call
jbe,pt
push
jmp
fidivrl
dec
and
mov
jbe
imul
pop
push
hlt
fisubrs
clc
ja
adc
ds
shlb
sarb
lcall
add
int
jae
aas
jmp
sub
mov
and
push
in
dec
add
mov
pop
lds
aaa
cmc
lods
or
xor
ret
xorb
js
repz
fwait
jo
mov
pop
arpl
xor
loopne
inc
jo
lahf
xchg
push
xor
pushf
sarl
or
test
push
inc
rcll
lret
lds
pusha
mov
mov
mov
push
mov
xchg
lret
adc
stc
nop
mov
sbbb
mov
sbb
dec
push
ret
inc
push
jg
in
push
pushf
pushl
push
mov
repz
into
daa
ret
push
fs
xor
ror
data16
push
enter
daa
sbb
pusha
lcall
jp
mov
cmpsl
mov
push
mov
call
cmpsb
sti
outsb
jb
scas
loop
push
push
cli
xchg
les
mov
pop
dec
pop
adc
stos
sub
sbb
xchg
adc
mov
aam
ficoms
add
mov
bnd
pop
or
adc
cmc
leave
add
xchg
sbb
cmp
mov
pop
adcl
rcll
cmpsl
cmp
inc
or
xorb
sub
mov
icebp
cmp
out
sahf
data16
mov
andb
icebp
mov
cmpsl
mov
sti
sub
mov
cld
into
xchg
inc
enter
cmpsb
into
inc
mov
sub
and
stc
mov
call
inc
sub
lret
test
dec
dec
sti
adc
or
testl
ret
dec
lods
fcoml
sbb
push
rclb
adc
inc
jecxz
sub
cs
dec
mov
out
lods
enter
sub
adc
sub
imull
stos
loope
sbb
std
repnz
stos
cmpsl
jmp
or
subb
push
and
pop
jns
cs
sbb
cld
clc
xchg
cmp
cmc
fsubr
add
fdivrl
mov
xlat
push
xchg
arpl
call
hlt
into
test
jl
mov
das
out
mov
push
pop
imul
cmpsb
mov
pop
mov
sub
sbb
inc
pop
jg
in
faddp
das
stos
xor
mov
les
add
sbbl
jnp
mov
mov
loope
sbb
mov
xor
mov
jo
xor
push
lret
and
sub
dec
ficoms
inc
and
nop
loop
cmp
mov
test
ja
and
ret
mov
or
mov
xor
sahf
mov
mov
mov
repz
fsubrl
adc
xor
adc
and
shll
lea
xor
sti
xor
cmp
scas
sahf
testb
pop
loop
lods
and
push
jg
push
rolb
and
push
inc
fdivrs
jbe
mov
add
push
shlb
mov
xor
or
xor
jmp
cmpxchg
and
js
mov
dec
stos
dec
daa
data16
dec
jmp
test
loope
fnstcw
in
movsl
xchg
stos
ja
jle
xchg
inc
jae
pusha
insl
fadd
daa
jle
jns
iret
add
cmc
push
xorl
aas
dec
inc
xchg
insb
outsl
jp
rcll
cmpsl
or
pop
data16
cmp
pushf
frstor
out
or
bnd
scas
orb
push
xor
jns
xor
pop
mov
jmp
pushf
lods
or
repnz
mov
xor
lcall
ret
mov
adc
sbb
dec
sbb
jecxz
xor
hlt
mov
xor
cli
in
mov
fcoms
mov
scas
shrl
shll
add
leave
push
mov
lret
in
lock
std
addr16
dec
push
cmp
stos
xlat
je
aad
adc
xchg
mov
fcompl
mov
mov
fbstp
xchg
pop
pop
ds
sub
cmp
aam
test
mov
fsubrs
mov
pop
inc
fidivrl
in
jle
xlat
fiaddl
std
add
aad
cld
in
mov
ds
mov
aam
sahf
sub
or
pop
sarb
jnp
adc
mov
cmpsl
dec
pusha
push
cmp
xor
sbb
adc
or
inc
fs
pop
or
mov
mov
test
aas
xor
jge
dec
xchg
notb
mov
stos
icebp
aad
adc
aam
inc
enter
lret
sub
jp
rdpmc
push
mov
xor
mov
mov
or
pop
or
mov
lds
dec
adc
jecxz
cmpsb
data16
add
popf
push
jae
imul
cwtl
pop
cld
into
mov
cmp
jnp
add
push
cmpsb
push
xchg
es
out
clc
mov
jo
sbb
in
pop
movsb
sti
mov
jae
xchg
iret
fdivrs
imul
ljmp
hlt
mov
cmp
mov
iret
jge
stc
or
and
pop
dec
xor
xor
inc
inc
add
xor
or
out
movsb
cmc
jp
pop
jg
xor
sbb
or
dec
mov
mov
in
cltd
inc
push
insl
ja
mov
push
dec
jb
in
lret
pop
sti
cmpsl
jo
stc
dec
push
nop
lahf
xor
cwtl
daa
pop
pop
mov
or
arpl
and
cmpsl
mov
sub
outsb
cld
push
outsl
mov
cmp
jnp
mov
iret
pop
andl
jecxz
adc
cltd
sub
adc
xchg
mov
add
lock
push
mov
xlat
adc
add
push
popa
jge
ret
cmp
enter
insb
int
imul
gs
cmp
mov
cmpsb
jb
dec
data16
mov
shrb
push
xchg
test
xchg
dec
aaa
jne
dec
push
push
pop
dec
aaa
out
lods
dec
imul
jg
or
push
dec
xchg
jnp
add
xchg
mov
popa
mov
sub
fnstenv
cld
lret
mov
xlat
leave
mov
jge
dec
out
lcall
int3
cli
push
test
call
addr16
inc
into
enter
adc
test
cwtl
inc
cmpsl
ss
pop
sub
cmpsb
pushf
jb
jo
loope
mov
jbe
push
inc
adc
jp
xchg
ja
outsb
xchg
hlt
popf
insb
sysret
jg
inc
sbb
inc
mov
or
xor
orl
lahf
dec
subb
adc
aam
adc
loop
call
dec
push
or
cmc
jno
mov
fwait
notb
addb
lahf
xchg
add
stc
enter
popf
push
addr16
xor
xchg
inc
pop
add
mov
pop
or
icebp
js
pop
mov
nop
add
sub
movsb
loopne
push
sbb
fcomps
mov
xchg
xchg
xchg
outsb
mov
ja
jo
out
sbb
pop
ret
fisubs
jge
aas
insb
test
mov
out
lret
fdivrl
rcrb
hlt
mov
lds
lea
xlat
aam
push
xchg
fs
iret
pop
mov
loopne
pop
outsl
mov
cltd
cmp
adc
and
bound
arpl
and
sub
or
dec
lret
repnz
ret
adc
cmc
dec
mov
jb
jb
ja
jmp
mov
out
pop
movsl
mov
mov
js
cmpsb
inc
push
mov
rol
xchg
add
loope
repnz
and
or
mov
cs
je
adc
xchg
xchg
imul
mov
shlb
xchg
dec
add
mov
idivb
enter
out
cmpsb
mov
popf
ret
andb
repz
mov
bound
ljmp
dec
add
inc
adc
fwait
aas
cmpsl
gs
pop
idivl
adc
aaa
cmpsb
lods
mov
xor
or
pop
int
xlat
sarl
shlb
insb
and
add
mov
or
sbb
mov
jle
jecxz
jnp
sbb
pushf
pop
sbb
jns
fcoms
fistps
adc
aam
sbbb
movl
add
adc
sbb
push
rclb
aad
inc
js
mov
mov
in
sbbb
bound
test
cwtl
add
xor
dec
std
or
mov
scas
cwtl
jo
or
inc
test
xchg
jge
add
push
xor
jo
idiv
out
pushf
lcall
dec
iret
mov
push
loop
jp
outsl
sarb
loope
pop
js
in
popf
test
or
lods
dec
dec
sbb
xor
aas
fs
cmp
xchg
mov
roll
aaa
fdivp
fbld
push
mov
je
inc
sub
lods
jmp
dec
ss
mov
ljmp
jbe
sub
addl
and
or
inc
push
addl
sub
and
or
sub
fadds
mov
leave
xchg
xlat
dec
test
jns
xor
pop
nop
sbb
push
jp
inc
cli
fnsave
gs
sbb
movb
sub
ja
stc
pop
jg
fidivl
shll
imul
add
in
test
mov
cmp
mov
int3
pushf
pop
or
aam
lock
mov
mov
out
adc
neg
sub
shl
insb
push
or
fwait
inc
movsl
mov
pop
push
pop
decb
ficoml
ss
and
fmuls
mov
test
into
daa
and
mov
mov
mov
mov
cltd
push
icebp
cmp
jb
test
mov
jp
scas
daa
les
inc
jmp
mov
mov
leave
xor
fidivs
pop
fmuls
xchg
hlt
dec
ficomps
arpl
or
popa
fisttpll
xchg
lock
mov
shlb
ss
push
pop
and
loop
insb
filds
repz
clc
xlat
xlat
les
xchg
push
stos
mov
jmp
movsb
jp
test
push
dec
int3
subl
cmp
mov
pop
in
add
add
aam
jmp
cmp
popf
xor
mov
sub
cwtl
imul
jmp
xchg
or
and
push
pop
out
xchg
pop
insb
add
pop
test
dec
test
xor
sti
xor
iret
dec
and
dec
sub
and
sub
pop
push
mov
cld
ljmp
sbb
ja
sbb
jmp
repz
pop
jge
bound
sub
shrb
shlb
and
push
sbb
lods
pmulhuw
and
imul
mov
in
sbb
scas
mov
in
or
dec
dec
sbb
insb
pop
xchg
or
pop
mov
xlat
xchg
fwait
insb
les
cwtl
out
in
adc
add
shlb
fisttps
pop
jl
cmp
push
sub
fisubrl
lret
cli
cmp
scas
clc
stos
es
lcall
mov
pop
pop
test
lock
out
imul
clc
dec
in
pop
aad
mov
xchg
push
pop
insl
ret
xor
sbb
data16
popf
hlt
and
inc
jecxz
pop
scas
inc
fnstenv
inc
mov
outsl
aam
cmp
mov
jle
dec
xchg
lock
sbb
inc
leave
scas
push
pop
cwtl
iret
sbb
sbb
push
xchg
repnz
mov
jae
xchg
or
imul
cmc
adc
ja
push
scas
jecxz
das
pop
inc
lock
cmpsb
sub
jmp
jno
nop
lcall
in
aaa
pop
xor
xor
lcall
outsb
dec
and
pop
aas
es
adc
push
pop
loop
outsl
pop
outsb
pop
out
cld
xor
ret
mov
lods
mov
loop
mov
jecxz
lods
xor
xor
xor
inc
mov
and
mov
icebp
mov
nop
fnstenv
sbb
add
dec
pop
mov
std
aas
ficoms
jmp
scas
aam
dec
mov
outsb
cli
xor
mov
std
sbb
sub
cwtl
fisubrs
add
or
push
fldenv
cmp
lods
pop
testl
in
pop
aas
fnsetpm(287
fiadds
negb
cmp
jbe
sub
jno
loop
xchg
sti
pop
xchg
mov
push
jne
jg
adc
imul
lock
mov
jle
jbe
pop
mov
jbe
mov
hlt
mov
push
outsb
cmp
pop
adc
sub
adc
pop
imul
pop
jle
loope
mov
jle
mov
leave
sub
dec
xchg
sti
push
xchg
dec
movb
leave
mov
sub
mull
sarl
lahf
shl
pop
gs
fdivs
dec
sub
jecxz
es
xor
dec
add
inc
fs
clc
sub
adc
or
arpl
lea
or
jnp
cmpb
lret
jmp
pop
fmuls
mov
int
outsl
call
ja
rcl
clc
mov
xlat
inc
inc
mov
je
sub
jmp
push
sti
repz
dec
pusha
and
nop
das
stos
mov
dec
or
xchg
add
aas
adc
cmp
mov
sbb
inc
popa
inc
pop
in
cmpsl
adc
test
cmpsl
or
aad
add
or
stc
push
ret
push
leave
int
pop
cmp
fisttpll
arpl
mov
or
adc
push
pop
fcomi
dec
ret
sbb
dec
scas
fnstsw
mov
in
mov
jmp
jne
mov
xchg
lock
insl
push
jne
in
repnz
outsl
in
jno
daa
mov
jae
mov
stos
test
cmp
mov
jl
scas
adc
inc
stos
lods
adc
cs
cmc
std
mov
adc
je
xchg
movsl
mov
lods
sub
arpl
add
mov
pop
cld
xor
in
add
xchg
cmpsb
mov
dec
in
mov
ret
jp
and
cmp
pop
pop
push
jo
outsw
ja
jg
pop
movsl
mov
xlat
jl,pn
jno
lcall
in
inc
fstpt
shll
add
xchg
mov
jle
adc
xorl
cli
jae
in
rorl
insb
cltd
and
cli
push
sahf
xchg
push
gs
clc
mov
cmp
pop
cli
addr16
fnstcw
cmpsl
fbld
les
lods
js
jp
loop
inc
sti
data16
cmpb
aad
ljmp
fstps
add
and
xor
and
lret
add
push
mov
enter
popa
xor
pop
cli
pop
mov
or
jns
pop
testl
lahf
shll
xchg
icebp
sahf
movsw
inc
pushf
imul
pop
cmpsl
jmp
xor
lret
fs
lea
loop
sub
dec
and
sub
dec
pop
rorb
popa
xor
pop
and
inc
test
push
es
inc
divb
sti
jl
xchg
imul
push
and
cmp
je
mov
vmovdqa
adc
sahf
mov
dec
les
rcrb
into
sub
mov
aad
mov
icebp
mov
fcoml
outsl
or
shrl
ret
add
cwtl
ljmp
lret
scas
loope
and
lock
cmc
imul
push
ret
xor
sub
pusha
push
inc
mov
push
jne
je
sahf
rolb
pop
decl
and
lret
mov
packsswb
scas
repnz
and
add
cmp
and
add
gs
ret
in
pusha
dec
cmp
adc
dec
xchg
dec
push
inc
lret
fs
roll
ret
fistps
dec
cli
xchg
xchg
loop
mov
and
orl
les
inc
loope
mov
in
and
cmpsb
repz
mov
dec
shrl
movsb
pop
cmp
mov
fiadds
pop
push
out
out
add
pop
popf
push
fs
daa
pop
push
inc
dec
jmp
dec
inc
roll
jns
inc
js
pop
cmp
fldcw
adcl
and
das
ret
push
push
dec
add
fstps
out
retw
xlat
dec
shl
push
xor
mov
das
andl
jmp
dec
sub
cwtl
or
adc
sbb
repnz
jae
movb
rcrl
inc
inc
les
mov
loop
mov
inc
shr
cmpsb
mov
daa
mov
lea
mov
mov
icebp
insl
bnd
stos
dec
andl
mov
add
mov
imul
int
or
fidivs
mov
pop
out
sbb
add
rolb
lahf
les
test
nop
cwtl
add
xchg
aad
ljmp
push
inc
test
cmc
or
in
dec
cwtl
decl
lahf
fs
cltd
pop
sub
and
pop
sti
pop
movb
in
repz
les
lahf
lcall
adc
adc
js
stos
jp
add
mov
pop
inc
mov
outsb
gs
mov
mov
mov
mov
sbb
dec
cmp
inc
pusha
sbb
leave
in
lock
sarl
inc
lods
and
mov
mov
cmp
adc
adc
ljmp
inc
dec
add
mov
sub
out
xchg
mov
mov
pushf
xlat
push
mov
lds
hlt
adc
xor
in
jp
cmp
push
inc
popa
mov
push
loope
adc
cltd
mov
outsb
mov
mov
sbb
adc
outsl
shrb
jg
mov
inc
adc
pop
and
and
test
fldenv
jbe
pushf
shll
loope
popf
xchg
jp
mov
scas
sbbb
dec
rclb
inc
nop
mov
inc
xor
mov
mov
scas
inc
sub
cmp
test
out
sbb
or
aad
pop
mov
lea
dec
or
adc
mov
outsb
and
popa
roll
cmp
mov
inc
fwait
add
adc
cmp
stc
dec
out
fsubrs
outsl
jle
lret
cld
fimuls
mov
cmpsl
ds
and
sub
cmpsb
pop
cmpsb
adc
adc
scas
fsts
mov
jo
sub
das
imul
mov
push
and
lods
push
in
push
cs
pop
mov
or
stos
pop
out
popf
outsl
ljmp
aam
jae
loopne
mov
lea
imul
icebp
pop
arpl
aad
lret
out
bound
xchg
jne
loop
or
icebp
or
inc
js
xchg
cld
sbb
cld
jo
dec
test
repnz
dec
xor
mov
dec
out
and
testb
pop
sub
pop
mov
jnp
mov
inc
int
mov
cmp
fildl
ljmp
in
iret
jae
cmpsb
ror
add
xlat
and
adc
dec
js
lret
or
dec
pop
mov
sub
and
xorl
jne
mov
mov
or
roll
sbb
mov
cmp
push
subps
icebp
aad
mov
fcmovb
mov
mov
js
jne
mov
pop
dec
out
ds
popf
rcrl
pop
jecxz
sub
lcall
or
push
filds
test
int
cmp
in
push
in
fwait
pop
out
pop
or
cmpb
adc
jmp
mov
mov
jmp
mov
inc
repz
adc
jge
lret
out
push
pop
push
ds
cli
in
mov
test
insb
mov
pop
push
mov
jnp
int
push
mov
lods
dec
adc
xchg
cmc
rcrl
adc
cmpsb
lret
sub
jl
dec
or
mov
popa
xchg
clc
jp
pushf
rcrw
jne
fs
inc
mov
test
xchg
mov
or
and
sub
imul
into
repz
push
ss
loopne
fnstcw
arpl
cld
sti
dec
stos
xchg
sbb
push
loop
mov
jg
or
inc
insb
cmp
pop
or
push
sahf
xorl
mov
movsl
inc
mov
stos
movsl
std
xchg
add
out
mov
and
mov
insl
call
dec
int3
inc
xchg
push
cmp
push
mov
stos
fwait
scas
jp
dec
dec
js
fwait
mov
pop
cmp
mov
cltd
orb
leave
cmp
cwtl
cs
int3
add
mov
ror
lcall
mov
pop
sub
sti
bound
pop
jmp
xor
rorb
scas
dec
inc
rcrl
test
mov
sbb
popf
imul
cwtl
jno
movsl
hlt
rolb
mov
jmp
pop
int
lods
lock
mov
popf
push
repz
dec
inc
inc
mov
out
ja
cmpsl
mov
ficomps
movl
push
flds
clc
xor
lods
xchg
pop
mov
stos
jnp
andl
push
mov
popf
out
push
adc
mov
xor
adc
adc
jbe
mov
jae
ror
sub
cmpsb
fwait
lods
arpl
outsb
pop
lret
mov
hlt
loope
or
fcompl
sarl
mov
xor
addl
xchg
inc
out
lds
ljmp
js
sti
nop
cmpsl
es
inc
int
loopne
loopne
add
mov
hlt
add
xchg
jg
or
or
push
cmp
jae
scas
arpl
cmc
or
fmuls
jle
sbb
jns
gs
mov
ret
pop
cmpl
push
cli
je
mov
aad
loope
or
adc
cli
sbb
out
adc
rcr
cmpsl
leave
pusha
adcl
sti
call
sub
fwait
outsb
pop
xor
outsb
jecxz
hlt
movsb
rclb
sbb
add
cli
addr16
cmp
add
adc
mov
dec
mov
cmpsb
xadd
push
mov
icebp
cmc
mov
push
rolb
test
push
cld
imul
mov
mov
mov
push
cld
fiaddl
pop
push
test
fwait
pop
push
movsl
out
pop
xchg
dec
and
aaa
je
in
mov
incl
push
ljmp
or
leave
test
dec
push
cmc
push
push
mov
sahf
inc
arpl
pop
and
in
imul
out
sub
test
cmpsb
push
sti
fidivrl
addr16
int3
test
adc
in
add
jns
mov
jle
js
jle
add
mov
mov
lods
arpl
cmp
mov
jns
mov
cmc
cld
adc
mov
outsb
jle
leave
adc
scas
test
sti
push
push
push
scas
cwtl
addr16
pop
pop
imul
outsb
add
xchg
jmpw
push
shlb
enter
xor
inc
mov
arpl
jne
adc
xchg
mov
icebp
xchg
xchg
ficoms
movsl
pop
adc
push
and
test
push
ds
cmp
sbb
xchg
sbb
push
lcall
add
inc
test
mov
jno
inc
pushf
fsubrs
mov
xchg
adc
mov
jmp
jecxz
shl
cmp
rcrl
jb
cwtl
xor
xor
addl
cmp
push
push
mov
aaa
adc
sub
and
mov
mov
pushf
lcall
sti
cmp
leave
mov
cmc
fstpt
loope
mov
hlt
and
mov
cmp
pop
lds
loop
jmp
orl
inc
jmp
aad
pusha
xor
fidivrl
lret
mov
addl
sub
adc
jg
lcall
jge
xchg
addr16
or
mov
mov
fbld
and
push
aad
cwtl
mov
decb
std
or
lret
sbb
push
sub
popf
dec
mov
sub
cwtl
repnz
cwtl
inc
xor
testb
fmul
notb
aad
idivl
dec
popf
ret
pop
stos
ss
stos
sbb
lea
cmp
movsb
cli
test
jecxz
lahf
fldl
cmp
js
or
adc
fists
or
push
movlps
inc
out
loopne
dec
test
mov
cli
pop
test
popf
xchg
adc
pushl
jecxz
dec
cmpsb
ret
and
loope
cmp
stos
iret
dec
je
fwait
add
mov
mov
sub
subl
inc
xchg
or
push
scas
outsb
jp
push
popf
testl
jae
push
pop
mov
icebp
addr16
jg
pop
nop
mov
aad
stos
mov
pop
dec
in
sub
mov
add
or
call
imulb
mov
scas
mov
push
bound
pop
test
jmp
aaa
lret
cmp
dec
sub
in
push
fbld
xchg
push
dec
xchg
inc
inc
out
jg
cmp
cmp
push
cs
and
pop
mov
pop
add
push
mov
imul
cmp
pop
pop
out
cmpsb
xor
push
mov
fwait
cmc
push
inc
fwait
inc
push
push
insl
inc
das
jp
in
repz
pop
sub
insl
pushf
lret
data16
jge
arpl
cmpsl
insb
add
push
jge
dec
sub
dec
adcl
and
cwtl
mov
daa
hlt
ds
incb
mov
aaa
in
ret
fisubrs
fsub
pushf
shrl
pop
sbb
push
add
std
adc
fwait
mov
rcll
iret
jne
mov
sbb
ret
inc
xlat
jp
fadds
out
cmpsl
xchg
movntps
adc
out
inc
sub
cmpl
arpl
in
sub
cmp
scas
std
cmpsb
mov
or
imul
outsb
add
fisubrs
outsb
dec
pop
pop
cmp
dec
mov
in
add
jmp
dec
mov
push
out
cmpsl
add
inc
adc
mov
adc
push
mov
lahf
cmp
sbb
mov
jmp
aaa
sti
add
out
mov
icebp
mov
xchg
sub
in
stc
lret
inc
mov
mov
cli
add
dec
mov
and
pop
imulb
or
pop
movsl
mov
out
movb
aam
and
push
pusha
daa
les
jle
ret
sbb
call
xor
aam
inc
xchg
jp
adc
adc
pop
arpl
into
adc
xchg
mov
in
jg
int3
pusha
arpl
mov
rorl
sbbl
loope
add
cmpsl
cmp
dec
mov
cwtl
lret
pop
aas
mull
and
xlat
sbb
iret
push
add
jp
jno
cs
out
mov
push
inc
jmp
loope
sbb
lock
push
jg
imull
loop
jp
push
cmp
jge
adc
andb
jne
and
aad
mov
adc
mov
stos
jge
pop
pop
andl
pop
jo
gs
sbb
out
imul
mov
imul
xor
add
shlb
into
cwtl
inc
cwtl
imul
cmp
loop
mov
mov
push
xor
push
test
mov
mov
inc
ret
pop
cmp
les
mov
icebp
mov
lret
mov
adc
cmpsl
and
jno
lods
inc
aam
push
mov
pusha
into
pop
sbb
movsl
sbb
into
cwtl
lret
out
mov
sbb
andl
daa
test
fst
in
push
pusha
adc
add
ljmp
test
mov
out
addr16
add
jo
sub
outsb
push
cmp
jo
adc
mov
dec
psubq
or
jle
xchg
pop
lahf
mov
aad
cmp
addb
jo
aaa
push
pushf
jbe
dec
cmpsb
jno
cmp
pop
gs
inc
jp
mov
cltd
aaa
rcl
sbb
cmp
sub
mov
leave
pop
jp
fwait
iret
and
scas
jbe
xor
fcoms
mov
js
mov
lret
pop
ja
cli
mov
cld
mov
sarb
mov
push
adc
xchg
addr16
mov
out
jne
lods
add
or
sub
pop
xchg
std
mov
xchg
adc
pusha
jecxz
sbb
adc
jb
pusha
add
call
sahf
cmpsb
in
shlb
sbb
mov
rorb
fcompl
lock
dec
push
mov
movsb
into
out
subl
mov
stos
sub
rolb
faddp
mov
mov
dec
ret
push
sbb
push
test
enter
cli
sub
incl
push
call
xchg
cmp
mov
or
push
cmp
adc
push
cmp
adc
xchg
mov
push
xor
pop
push
or
xor
dec
ret
loope
out
xchg
imul
sbb
cmpsl
cmp
push
xchg
nop
jp
add
pop
rorb
or
mov
std
clc
dec
pop
dec
mov
clc
imul
push
ja
jo
xor
arpl
repnz
das
testb
xor
imul
cmp
mov
and
cmp
xchg
test
cwtl
arpl
cmpsb
cld
rcr
ficoml
je
es
out
mov
ret
mov
outsb
inc
scas
xchg
push
pop
enter
in
xchg
and
out
sub
jne
mov
push
mov
outsb
jbe
addr16
xchg
pop
loop
jnp
icebp
das
rcrl
mov
movsl
sbb
push
daa
cmp
and
arpl
movsb
or
test
cli
lea
popf
jmp
and
xchg
icebp
pop
ret
cmp
mov
movb
mov
dec
scas
js
not
movsb
negb
mov
cmp
mov
inc
cmp
repnz
in
inc
rcrl
dec
fidivrs
aam
add
inc
xchg
sbb
cmpb
inc
les
or
and
jno
in
mov
mov
imul
jns
aad
jb
mov
test
cmpsb
mov
insb
ret
sbb
jo
lret
xor
loopne
or
mov
call
adc
adc
popa
ret
jb
dec
leave
jecxz
inc
aam
pop
jb
push
inc
daa
xlat
adc
or
sub
mov
idivb
movzbl
pop
and
scas
xchg
loopne
sbb
push
or
dec
imul
push
mov
inc
loope
orb
xchg
mov
sub
xchg
adc
mov
out
mov
push
and
jne
mov
imul
or
fdivl
les
int3
int3
pop
ret
cltd
xlat
jmp
popa
sbb
mov
stos
push
push
ja
pop
pop
mov
adc
cmpsb
sbb
rorb
mov
loopne
cmp
pop
push
or
jle
mov
mov
cld
cmp
mov
push
decl
jnp
push
mov
sarb
adc
add
or
pop
leave
or
pushf
sbb
jmp
mov
in
hlt
push
pushf
lret
adc
sub
mov
sub
std
inc
out
cwtl
mov
pop
into
inc
add
lods
mov
sub
shll
cmpsb
clc
cmc
repz
mov
cmp
jo
test
mov
std
loop
or
add
or
testl
fnsave
fwait
cwtl
stc
pop
into
je
add
call
or
xor
or
shr
ljmp
fwait
dec
lcall
in
mov
mov
pop
les
dec
test
ficoml
jmp
or
shrb
lahf
mov
mov
movsb
sbb
andb
dec
and
aad
in
cli
lea
outsw
jge
xchg
arpl
lahf
and
sbb
in
ret
arpl
in
jno
pop
out
or
xchg
clc
dec
andb
sbb
stos
pop
dec
adc
movsb
loopne
inc
inc
ficomps
xor
notl
mov
fwait
mov
test
jg
mov
push
in
scas
lret
fwait
jle
cmpsl
jae
rcrb
cmpsl
push
out
mov
xchg
les
adc
push
test
pushf
sahf
jle
push
pop
and
or
mov
push
movsb
roll
or
add
push
lret
or
jnp
data16
sahf
sub
ret
mov
mov
mov
jmp
add
rcll
xchg
xor
in
fsubs
cmp
sbb
adc
add
sub
xor
jmp
mov
or
push
sar
and
xor
ret
adc
pusha
or
sub
sbb
xlat
out
or
aad
xchg
and
pop
push
out
push
sahf
aas
xchg
push
pop
push
loopne
sbb
out
hlt
test
data16
daa
in
xchg
cmp
mov
pop
and
test
cmpsb
into
add
dec
jecxz
sub
lds
and
iret
aam
and
mov
aaa
je
or
movsb
out
jne
jecxz
out
cs
and
daa
or
shlb
sbb
jb
sbbl
mov
cmp
push
insb
and
inc
ret
jp
jb
add
mov
mov
stc
inc
sahf
adc
hlt
repz
repnz
push
jg
mov
das
mov
jg
in
icebp
cmp
sub
cs
stc
rcr
cmp
xchg
out
xchg
inc
popa
inc
lock
cwtl
mov
imul
sub
dec
imul
dec
pusha
test
sbb
cmp
mov
xorl
dec
inc
fs
and
lds
jb
mov
mov
fndisi(8087
mov
adc
repnz
repz
loope
or
movsb
inc
xchg
fwait
movsl
cmp
push
push
push
call
mov
adc
enter
cmc
push
stc
outsl
into
lcall
hlt
push
mov
mov
mov
aam
dec
xchg
add
lods
dec
push
xlat
js
scas
and
sysret
cmp
cltd
push
les
rorl
out
xor
add
mov
xor
jp
mov
and
aaa
xchg
xor
pop
loopne
test
into
stos
movsl
mov
pop
pusha
inc
cld
lods
mov
push
and
cmpsb
movsb
or
sub
movsb
cltd
cli
sub
or
mov
inc
xorb
pop
xchg
ss
dec
mov
in
jl
pop
add
cwtl
add
inc
mov
nop
jecxz,pn
xorl
mov
adc
sub
out
sub
mov
and
jbe
cmp
jo
lcall
inc
add
fdivp
mov
mov
xor
push
add
ret
add
pop
or
jle
in
or
or
sub
sub
movsb
mov
and
fnstsw
testb
inc
adc
imul
or
test
xor
pop
cmpsl
fsubl
xchg
xchg
add
xchg
pusha
mov
or
push
xor
ror
cltd
push
loope
inc
xchg
out
adc
call
les
lods
inc
sbb
push
lret
mov
add
add
jl
ss
icebp
push
jmp
mov
xor
mov
daa
xor
or
ljmp
pop
lret
mov
sub
dec
sbb
int3
sbb
pop
sbb
lret
add
or
xor
and
sahf
mov
xor
fwait
adc
fsubrl
repnz
push
add
xchg
scas
mov
add
pop
sbb
inc
in
testb
mov
cwtl
jbe
test
lahf
test
out
jno
push
lods
xor
sbb
push
mov
pusha
lcall
ja
cmpsl
adc
stc
jb
lret
call
dec
aas
repnz
mov
adc
nop
ds
jns
imul
dec
ret
xor
mov
push
adc
adc
fnstsw
scas
mov
xor
in
mov
push
adc
fwait
int3
pop
aaa
pop
mov
jle
pop
dec
int
bound
add
adc
mov
push
mov
cmp
cmp
es
mov
std
xor
xor
repnz
jae
cmp
adc
jmp
xchg
orb
adc
outsl
add
test
pop
pop
mov
inc
dec
xchg
jb
sti
sbb
test
std
mov
imul
jae
fiaddl
scas
out
icebp
mov
movsl
and
push
jne
adc
dec
adc
push
pop
cmp
mov
movl
xlat
imul
repz
dec
and
lret
ss
adc
dec
fists
cmp
pop
or
mov
mov
xchg
xlat
lret
xor
sub
clc
mov
xlat
jae
mov
icebp
imul
shl
idiv
jmp
loopne
enter
push
dec
push
inc
test
cmpsl
and
bound
inc
mov
add
test
adc
inc
dec
mov
cs
das
push
stc
jno
pop
xchg
test
push
fisubs
inc
js
cmp
sbbb
mov
push
sahf
mov
out
jp
dec
push
lock
mov
dec
aam
aas
dec
cmp
dec
or
ret
xor
sbb
and
push
out
xchg
jecxz
add
adcb
mov
std
cmp
mov
push
fwait
cld
cmpsl
sbb
stos
clc
cli
out
mov
xchg
and
in
dec
mov
pop
imul
xchg
loopne
loopne
mov
pop
testb
fs
lock
test
xchg
sbb
hlt
subb
adc
hlt
pop
sub
or
leave
lods
lret
mov
add
addr16
mov
imul
mov
shlb
mov
loope
test
gs
dec
sahf
and
test
add
pop
or
cmc
hlt
mov
adc
std
xchg
push
test
add
add
sub
mov
xor
jae
bound
enter
sbb
mov
sub
in
mov
arpl
push
out
cmp
jb
sub
or
fwait
push
sub
cwtl
add
popa
and
cs
mov
lods
inc
lds
xrelease
shr
add
add
int
xchg
pop
ret
lret
cmp
stos
mov
das
dec
in
sub
pushf
cwtl
je
in
add
add
push
fmulp
or
insl
or
push
loop
xor
push
subl
daa
pop
test
adc
adc
or
lcall
mov
push
aad
sub
adc
and
lods
fisubl
add
sub
stos
sbb
mov
fstps
pop
iret
inc
mov
or
jae
or
sbb
xchg
cs
mov
inc
pushf
negl
push
sarb
xor
rcrl
aad
mov
pop
push
iret
ficomps
sbb
inc
sar
sarl
adc
fwait
sti
adc
subb
loope
cmp
mov
sub
push
mov
jo
fistpl
arpl
out
dec
jp
mov
movsl
movsl
mov
push
movb
pop
xchg
pop
arpl
xchg
pop
sbb
jns
cmpsb
test
cmp
jge
mov
insb
xchg
xchg
cmpsb
sub
mov
xorb
mov
movsb
jle
cltd
fnstenv
dec
das
repz
fldcw
jno
inc
mov
or
push
inc
sbb
push
or
bound
decl
stos
fwait
adcb
mov
in
jnp
add
jne
pop
adc
sub
sahf
ret
fcoml
loopne
pop
mov
push
mov
pop
pop
push
lret
and
int
fsubl
and
ljmp
push
repnz
xor
mov
and
jnp
sbb
inc
jp
or
cltd
and
pop
mov
imull
cwtl
dec
inc
push
arpl
xchg
mov
insb
in
daa
mov
jne
ds
imulb
cmc
int
movb
adcl
popa
inc
in
mov
dec
std
lea
imul
push
jmp
icebp
cmp
test
or
inc
sbb
push
in
lds
xor
ficoms
out
into
fcoms
jg
movsb
pop
jmp
mov
in
aad
jbe
mov
sub
std
js
or
sbb
pop
je
jbe
add
inc
jo
or
dec
jnp
xchg
aas
rorl
add
fisubs
jge
dec
fwait
in
negl
or
cltd
cmpsb
fdivrs
leave
inc
mov
jne
xor
push
or
pop
xor
cmc
sbb
add
sbb
pop
mov
adc
and
frstor
add
stc
mov
and
add
cmp
mov
cmp
add
sub
or
fst
pop
mov
cwtl
lods
mov
lods
pop
popa
xchg
push
push
push
popa
cltd
xchg
mov
aad
jle
xchg
and
mov
dec
lea
dec
cmc
aaa
xchg
pop
sbb
mov
mov
cmc
cwtl
test
stos
jb
jmp
mov
pusha
add
jns
gs
xor
inc
in
mov
clc
iret
ja
mov
sti
rcr
mov
aam
jg
adc
xchg
jno
cmpsl
repz
jg
xchg
loop
ror
add
mov
addr16
pop
pop
sbb
popa
addr16
cmp
insb
pusha
jnp
cmpsl
icebp
mov
outsb
test
movsl
lahf
mov
rorb
ret
and
gs
popa
pop
mov
rcrl
push
movsl
pop
mov
dec
jb
pusha
xchg
xor
lock
push
sbb
mov
jmp
xchg
sub
iret
int
rorl
imul
sbb
jmp
jbe
imul
mov
xchg
dec
inc
cmpsl
enter
jge
loope
add
jecxz
adc
add
movsb
pop
stos
mov
jno
pop
std
fwait
mov
cmp
adc
dec
stos
add
int3
push
and
push
add
mov
mov
imul
xor
insb
rorl
lahf
aaa
mov
dec
push
mov
cmp
das
outsb
imulb
cli
pusha
data16
cmpsb
cltd
cwtl
aad
std
jl
enter
mov
add
shrb
into
cmp
fists
push
inc
shl
roll
sahf
scas
jno
mov
dec
ror
jbe
mov
jb
lret
sbb
fldlg2
mov
cmp
lods
xor
xor
fwait
cmp
shll
ss
sub
cmp
aam
xchg
adc
ds
out
icebp
nop
push
in
insb
cmpsb
gs
mov
out
ret
xor
sub
pop
sbb
test
imul
shr
add
xor
movsl
ret
mov
sub
sub
imul
jno
push
in
mov
mov
repz
jno
push
leave
mov
cmpsb
movsl
xchg
mov
outsl
ja
je
mov
lock
fstp
mov
jo
xchg
lods
mov
ja
arpl
rcrl
lret
scas
xchg
xor
rol
jo
jno
push
pop
aam
test
add
mov
call
ret
xchg
xor
imul
mov
pop
inc
imul
jne
subl
dec
inc
cmp
sub
jo
out
cmp
xlat
jno
pop
fisubl
pop
xchg
bnd
jo
pop
cmp
mov
inc
pop
divb
jne
mov
xchg
inc
enter
popa
xor
add
out
sbb
fs
test
stos
loope
add
dec
dec
and
lea
jne
aas
out
mov
and
ds
sbb
mov
iret
loopne
jl
shrl
mov
cmp
negb
ret
dec
movsb
xor
mov
pushf
mov
xor
iret
mov
mov
orb
sti
cmp
stos
sub
bound
rorb
and
pop
and
ss
xlat
sbb
les
xor
in
push
cmp
fmuls
fld
int
mov
imul
and
pop
xchg
sub
mov
ds
rcll
js
inc
cmp
mov
push
test
cmpsb
scas
das
pop
jecxz
dec
cmp
fdivs
push
movsb
jo
or
cmp
jp
cmpsl
push
xor
xchg
aam
js
fwait
pop
jo
cld
xchg
xor
and
jecxz
rorl
sub
sub
sub
gs
test
fistl
or
inc
mov
pop
hlt
xchg
lea
cmp
hlt
pop
mov
pushf
js
call
test
dec
push
or
xchg
imul
mov
je
cltd
enter
shrl
mov
push
imul
or
fucomp
shlb
push
xchg
std
pusha
mov
out
iret
xor
pop
jno
or
scas
int
push
lods
call
mov
xor
jo
mov
mov
xchg
pop
pop
jbe
inc
xor
in
xor
lahf
outsb
dec
lods
pop
mov
sub
ljmp
and
jecxz
dec
jae
inc
out
mov
xchg
loopne
push
in
mov
into
cmpsb
scas
jl
daa
jl
mov
out
jne
cmp
xor
fwait
loop
dec
das
pop
loop
lret
push
movsl
adc
and
push
cmpsl
xchg
les
rorl
add
inc
jmp
or
loope
sahf
adc
loopne
sbb
aad
cmpsb
push
push
andl
mov
push
pop
push
leave
roll
or
jg
cmpsb
gs
sub
imul
or
sbb
and
mov
cmp
adc
divb
call
inc
cmpsb
lea
je
inc
popa
ret
adc
inc
dec
pop
cmp
hlt
adc
lds
add
idivb
std
sbb
mov
pop
pop
mov
mov
sub
inc
add
mov
pop
daa
cmc
dec
aad
or
andl
jle
lds
gs
lahf
lea
fadds
cmp
adc
xchg
cs
enter
ficoms
or
cmp
loope
stc
js
inc
or
xchg
pop
cmp
push
insb
adc
in
push
icebp
mov
and
jmp
mov
push
popfw
xchg
cmp
xchg
sbb
pop
push
das
ficoml
inc
aaa
or
mov
pop
sub
push
xlat
lret
stos
cmp
jae
push
int3
dec
xor
jne
xor
push
sbb
bound
mov
addr16
cli
test
fwait
aas
mov
mov
aaa
xchg
add
push
mov
cli
mov
sub
xor
sbb
mov
jle
adc
jnp
add
push
mov
inc
lea
jl
stos
stos
dec
ds
lds
pushf
adc
sub
ja
or
lahf
jns
cmp
sbb
mov
lgs
je
test
mov
into
push
pop
fwait
mov
lret
push
xlat
xchg
dec
xchg
jo
mov
das
cmp
xchg
repz
mov
pop
push
or
jmp
ss
dec
rorb
out
loopne
into
fwait
dec
or
sub
adc
and
lret
jne
mov
js
sub
insb
lea
xor
cmp
pop
inc
ljmp
mov
cmc
inc
stos
lret
adc
mov
insl
sbb
xchg
dec
xrelease
jge
loope
jo
in
lea
in
fldenv
xor
cmp
adc
dec
push
dec
inc
into
fld
cwtl
test
jg
jmp
sbb
xor
in
les
pop
xchg
ficomps
aas
jns
inc
jmp
leave
add
mov
test
icebp
dec
sub
in
sti
cli
dec
aam
xor
test
les
es
hlt
jne
dec
xlat
hlt
or
and
cmc
pop
pop
mov
mov
xchg
pop
jb
mov
int
jnp
pop
cli
std
je
stos
bound
and
xor
xchg
jge
ljmp
daa
dec
ds
xchg
fistl
out
adc
inc
loope
mov
ljmp
cmp
fistpl
js
insl
aaa
inc
mov
cmp
inc
mov
fidivs
pop
scas
jp
push
mov
inc
fdivr
push
pop
daa
dec
cvtps2pi
out
out
pushf
je
adc
call
inc
adc
mov
lds
or
xor
leave
sarl
sbb
lcall
lock
loopne
andb
and
push
xor
pop
aas
xchg
cmp
popf
jno
xchg
mov
hlt
popa
xchg
sahf
cmc
stos
mov
sbb
hlt
sbb
adc
mov
adc
adc
mov
outsl
inc
mov
js
dec
out
sahf
sahf
xchg
sbbl
mov
jl
pop
mov
test
ret
push
outsl
ret
iret
cld
jp
dec
cmc
sbb
mov
add
lcall
push
mov
mov
mov
insl
cld
jae
xchg
rclb
xlat
hlt
or
sub
mov
mov
repnz
cs
xchg
jg
sbb
data16
das
std
mov
cmp
daa
adc
repnz
push
mov
or
cmp
xchg
ljmp
cli
mov
ss
add
inc
out
inc
mov
jnp
stos
lret
pusha
stos
nop
cs
addb
push
aaa
push
or
jnp
adc
addr16
lods
lods
mov
jmp
hlt
sub
and
test
insb
imul
divb
and
cmp
stos
mov
mov
fsts
xor
adc
push
or
js
fidivrs
pop
mov
ja
adc
fimuls
and
cmp
mov
push
xor
out
cs
dec
jl
mov
icebp
pushf
mov
mov
cmp
push
orl
pop
nop
push
sarl
inc
inc
data16
mov
lret
hlt
ja
cmp
loop
cmpsl
jp
and
lret
mov
shlb
xchg
xchg
pop
sbb
cmp
sub
fs
cltd
hlt
ja
mov
xchg
shlb
mov
cltd
popf
addl
mov
movsl
mov
cmp
gs
fcomip
ret
mov
mov
mov
add
dec
inc
sub
cmc
je
in
jb
dec
aad
inc
pop
jmp
adc
mov
sub
adc
fmuls
jb
mov
out
addb
mov
jo
pop
add
js
aad
push
lds
xchg
aas
jnp
and
adc
and
sbb
or
sbb
loope
sub
mov
mov
xor
shll
lcall
cmp
pop
and
and
xor
pop
jbe
inc
aam
xchg
xorb
mov
insb
cmpsb
sub
add
stos
dec
les
fsubrl
jmp
cmp
adc
out
sti
push
pop
and
mov
in
push
mov
mov
rolb
sub
inc
gs
or
xchg
cmp
enter
jb
jns
ror
fwait
or
jne
es
pushf
sahf
push
dec
jecxz
aas
xchg
fdivrs
pusha
xor
aad
cltd
popa
xchg
push
aas
sub
cmp
ret
jl
sub
push
call
cmp
dec
das
add
push
sub
sub
inc
je
popa
test
lret
sbb
mov
shr
cmp
loope
dec
mov
mov
in
imul
jne
mov
and
ret
fmulp
repnz
mov
jecxz
stos
pop
and
idiv
lcall
cmp
push
insb
mov
dec
in
fadds
in
stos
xor
lret
adc
pop
pop
scas
fsubrp
in
fmull
arpl
repnz
cmp
add
sbb
mov
pop
push
xchg
or
movsl
loope
data16
mov
inc
dec
mov
jnp
aaa
pop
test
in
iret
fimuls
jns
pop
in
cltd
in
pop
imul
outsb
push
mov
or
xchg
aas
lahf
test
mov
inc
call
test
aam
ret
mov
xchg
scas
rclb
adc
fsubl
sar
jle
add
in
lds
stos
jnp
dec
lock
data16
test
jle
xor
sahf
imul
push
in
mov
pop
sub
dec
arpl
in
pop
xchg
subb
rcll
rcl
enter
cmp
mov
xchg
rcr
xchg
call
sub
cmpsl
dec
xor
fwait
mov
aaa
or
jg
sub
stc
iret
movsb
in
ret
mov
fisubs
lret
clc
mov
pushf
xor
fistpl
jg
sub
adc
mov
push
jbe
jns
xchg
sub
jae
test
pop
push
popa
dec
mov
push
xchg
rcl
add
mov
insb
lds
sbb
scas
aad
cmp
sub
mov
mov
sub
in
push
lods
pusha
mov
lcall
mov
push
push
add
out
pop
punpcklwd
repz
adc
sub
mov
andl
cmp
xchg
imul
into
ret
xor
iret
mov
mov
jge
and
jle
mov
mov
int3
scas
mov
rclb
push
adc
inc
or
push
loopne
xlat
mov
mov
fcmovnb
dec
jbe
push
lock
fsubrs
inc
stos
sbb
sbb
outsl
adc
push
or
out
inc
mov
ss
mov
sbb
loopne
std
cmp
in
or
sbb
xlat
repnz
xchg
mov
sbb
das
mov
dec
mov
jo
shlb
rcll
mov
cmp
lcall
aas
jb
lds
cmp
pmulhuw
or
xchg
insl
int3
aaa
les
add
in
iret
mov
add
push
xchg
sbb
gs
jp
lcall
pop
ror
jle
sar
and
sahf
imul
jp
sub
jg
mov
clc
pop
cmpsl
push
out
cmp
out
push
push
cmp
sbb
sub
inc
stc
mov
pop
jl
cltd
mov
addr16
je
mov
pop
out
push
loop
pop
xchg
jge
pop
mov
js
das
loopne
dec
inc
jno
xor
mov
cmp
mov
subb
pusha
push
imul
adc
and
mov
int3
and
das
das
adc
add
xchg
jmp
xor
andb
push
loop
push
jge
ret
sub
mov
fs
cwtl
mov
cmpsb
or
add
loop
insb
push
fabs
jo
xchg
mov
cpuid
inc
ret
add
fldcw
xor
mov
aaa
fcoml
dec
jb
lret
iret
stos
cmp
push
idiv
mov
fwait
call
icebp
mov
push
rolb
or
add
push
mov
adc
and
and
insl
xorl
jp
sub
and
add
int
or
adc
pop
inc
mov
in
or
icebp
cmp
ror
mov
push
mov
jl
dec
popf
inc
imul
jmp
in
addr16
cltd
push
test
jnp
leave
jnp
xor
mov
mov
js
fstl
push
xchg
cmpsb
or
jbe
pavgw
mov
xor
push
dec
and
jle
cmc
jecxz
jbe
add
dec
xorb
call
mov
jns
xor
add
dec
mov
ret
ror
push
sti
xchg
mov
xor
pop
push
jg
adc
jne
rol
dec
in
lahf
mov
mov
stc
popa
cmp
movsl
les
mov
xchg
sbb
or
cmp
out
aaa
jns
push
jge
ret
arpl
adc
lret
cmpsb
unpcklps
xlat
sbb
and
stc
sub
push
mov
jmp
push
lret
sar
xor
movsb
test
pop
shll
xchg
loopne
rolb
ljmp
xor
into
mov
xchg
push
sbb
shrl
pop
je
add
call
push
push
pop
mov
pop
mov
fnstenv
inc
fcomps
add
mov
clc
add
xchg
or
shrl
imul
cltd
inc
out
je
ficoms
test
mov
push
or
fistpll
rcrl
mov
sbb
iret
xchg
ret
jge
push
cli
in
lcall
pop
ds
add
inc
test
cmp
jnp
mov
push
int
jmp
or
sbb
pop
jb
inc
cmp
push
in
cmpsl
and
or
subl
xchg
sbb
adc
pop
cmp
dec
sbb
add
mov
ret
ljmp
test
xor
jecxz
mov
ja
xor
mov
inc
jmp
loop
mov
xchg
faddl
fldt
or
mov
fs
add
cmp
adc
call
repnz
inc
mov
sar
in
xchg
mov
xchg
and
cmp
jns
or
icebp
in
jle
fsub
flds
jb
sbb
bnd
mov
mov
stos
mov
fmull
lds
adc
mov
arpl
dec
lcall
and
jecxz
inc
adcb
test
pop
shrb
cmc
sub
ficoml
inc
xchg
bound
aas
sahf
scas
push
mov
xor
mov
movsb
push
mov
cmp
lret
divb
mulb
lds
in
mov
ret
pop
scas
decb
or
dec
mov
fisttps
mov
mov
mov
mul
xchg
pop
push
movsl
add
fisttpll
sub
sub
addr16
push
push
xor
outsl
ret
mov
push
divb
xor
std
jge
pop
sbb
pusha
les
push
aam
jb
and
ret
xchg
cmp
gs
ss
xor
cmpsl
fwait
popf
aaa
scas
push
or
or
cld
outsb
les
popa
imull
mov
shll
fidivrl
ror
sbb
jmp
push
out
outsl
in
xchg
rorl
rcll
push
outsb
aas
xor
fisttps
clc
cmpl
aam
jl
lcall
stos
xchg
mov
lds
cmp
cmp
inc
lcall
or
cmpsb
adc
pop
pusha
sbb
cmpsl
leave
rclb
mov
and
jo
int3
aas
push
push
xor
fisubrs
adc
push
dec
stos
mov
pop
clc
data16
out
pop
popa
sub
sub
add
sub
dec
adc
mov
dec
mov
pop
xchg
sub
cld
jmp
or
pop
jg
mov
push
dec
pop
ret
test
mov
push
cmpsl
in
and
xchg
xorl
imul
or
and
lock
lcall
call
or
sti
xor
jns
inc
cmpsb
das
cli
movsb
es
fcomip
outsb
sub
xchg
pusha
pop
jns
mov
mov
sarl
fxch
out
mov
dec
jp
out
es
rolb
mov
jbe
addl
out
nop
popf
cmp
jmp
pusha
add
outsl
gs
mov
and
test
js
inc
mov
sahf
or
stos
adc
xor
stc
jg
pop
gs
out
mov
popf
or
jnp
in
jl
or
iret
andl
int
sti
bound
fstps
mov
jb
fldl
scas
rcrb
or
xor
loopne
dec
hlt
into
aas
pushl
adc
jp
inc
pop
in
dec
mov
repz
add
insb
cmp
pushf
daa
int3
scas
imul
data16
xor
push
test
push
pop
xchg
jecxz
pop
lock
adc
inc
cltd
cld
fwait
sahf
jp
jg
popa
test
fwait
push
data16
sbb
call
pop
dec
cltd
test
lcall
fildl
ss
jbe
imul
fst
mov
shrb
test
sub
repz
popf
repz
imul
clc
rcrb
adc
jne
icebp
or
div
pop
js
jg
add
bound
lds
jb
es
mov
call
push
dec
cwtl
lods
xor
push
outsb
mov
fimull
insb
and
mov
mov
ret
ds
hlt
aas
sbb
cmp
cmpsl
dec
jae
mov
int
dec
in
lret
rcrl
xor
jbe
push
push
mov
mov
add
cltd
and
xor
popf
xchg
ret
arpl
or
sub
movsl
leave
and
pop
and
or
jns
bound
fsub
add
dec
sub
roll
in
call
jmp
mov
enter
push
jp
js
inc
pop
mov
imul
cwtl
mov
gs
out
dec
addl
or
pop
xchg
stos
cmc
subl
icebp
sub
in
lret
pop
jg
push
pop
das
add
sbb
pop
std
ret
sbb
pop
cs
sahf
sbb
xor
adc
inc
inc
negl
icebp
and
cld
repnz
mov
mov
into
push
sarl
sub
popa
nop
ret
mov
adc
and
push
or
inc
imul
sub
js
sbb
jecxz
mov
nop
fcmovnbe
xor
or
leave
push
mov
adc
push
hlt
mov
cmp
xchg
cli
pop
ret
ret
cmp
into
jne
gs
gs
or
xor
arpl
sarl
dec
insl
mov
shl
mov
clc
aaa
cwtl
out
xchg
xor
es
adc
or
mov
push
mov
dec
xchg
repz
aaa
jo
mov
hlt
outsb
mov
in
push
push
in
or
jnp
imul
cmp
fwait
lods
call
inc
repz
lret
les
jmp
sub
xor
push
mov
mov
dec
sar
xlat
mov
loop
add
stos
xorb
or
shll
jae
mov
inc
inc
jae
jnp
sub
lcall
xchg
pop
mov
sub
imul
jg
add
mov
push
mov
cmc
out
les
cmpsb
cmpsb
inc
movsl
sub
shrb
out
mov
xchg
and
jne
and
sub
add
jb
mov
sbb
rcrb
or
stos
xchg
push
andb
fcomps
repz
dec
xor
add
mov
mov
sub
test
movb
ja
stos
nop
repz
xchg
add
dec
lcall
pop
daa
add
xchg
adc
push
and
mov
push
sbb
mov
jo
push
sti
insb
push
rorl
frstor
pusha
jne
push
iret
dec
jg
jg
in
fs
xchg
xor
dec
fisubrs
aas
and
call
scas
mov
jecxz
jge
popf
dec
cli
popf
lret
adc
jne
xlat
mov
pop
test
subl
cld
dec
mov
push
mov
push
aam
lret
dec
pop
sahf
push
jnp
and
push
jne
xor
outsb
loope
mov
iret
jge
add
inc
mov
pop
cmp
mov
and
and
mov
mov
pop
mov
mov
das
mov
test
pop
mov
fwait
mov
xorl
cmpsb
subb
cmc
xchg
mov
xchg
dec
xchg
in
and
test
mov
clc
mov
dec
dec
imul
mov
dec
mov
out
xchg
aad
enter
dec
mov
dec
pop
sub
sbb
lret
or
xchg
nop
inc
push
cmp
cli
cmpsb
scas
or
loope
jecxz
es
jbe
push
mov
pop
push
mov
mov
leave
popl
lock
lds
in
dec
mov
dec
adc
pop
scas
sbb
xchg
fidivrl
mov
adc
jmp
lea
int
test
aaa
jne
aaa
mov
fcompl
imul
js
fwait
adc
lock
mov
daa
push
sbb
test
nop
pop
arpl
xchg
lahf
ja
push
lret
fs
int
addr16
nop
fiaddl
mov
adc
pop
sub
js
mov
mov
gs
xor
lds
mov
push
jns
inc
insb
test
inc
test
xchg
mov
jmp
pop
pusha
aaa
and
out
arpl
loop
fwait
cmp
cltd
push
into
aad
and
outsl
loopne
vucomiss
lock
pop
push
ss
cld
lock
inc
and
jge
js
iret
or
nop
mov
sbb
test
fbld
lds
jge
lcall
imul
out
mov
lods
stc
jns
push
je
xor
jle
jns
ljmp
int3
repnz
incb
mov
mov
loope
and
int
inc
mov
pop
fidivrl
add
add
and
inc
nop
fistpl
push
mov
lods
xor
or
cmpsb
mov
cmpsl
addr16
ljmp
jns
mov
test
dec
aaa
std
sub
sbb
xor
push
mov
divl
pop
scas
dec
jno
pop
push
stos
and
pop
hlt
sbb
aad
adc
nop
and
pusha
cmc
cs
sbb
pop
icebp
mov
mov
jmp
dec
leave
test
jmp
cs
mov
mov
push
and
loop
xchg
sbb
imul
mov
fsubrs
outsl
out
mov
lock
inc
or
adc
stc
pop
movsl
sbbb
daa
test
iret
in
ficoms
mov
jnp
inc
fmuls
and
mov
shlb
add
inc
in
adc
filds
mov
fldcw
push
cmp
add
cmp
rcl
push
js
fistpl
mov
bnd
ficoms
lock
jnp
in
cmp
hlt
out
jmp
xor
sbb
and
mov
push
cmpsl
cmp
adc
mov
cmc
sbb
aas
push
inc
lret
xchg
arpl
xchg
iret
int
scas
lcall
fcmovnu
mov
repz
jne
test
xchg
bound
push
push
fnstsw
shr
shlb
add
bound
test
aad
pop
add
repz
jbe
outsb
loope
int
cmpsb
std
sub
pushf
push
pop
push
or
or
add
divl
icebp
loopne
jnp
aas
leave
and
lea
sbb
cs
in
cmp
xor
sti
xchg
xchg
xchg
inc
mov
push
test
pushl
sub
cmp
adc
into
ljmp
in
dec
int
sbb
xor
mov
das
xchg
pop
inc
lahf
xchg
xor
push
aas
jge
mov
adc
push
test
ds
mov
test
cwtl
mov
mov
popa
add
jbe
sahf
xor
jmp
and
pop
dec
xchg
popf
movsb
lods
add
nop
outsb
inc
and
mov
loop
inc
fimull
cli
ds
ds
inc
pushf
xchg
and
xor
lcall
mov
push
adc
pop
cmc
mov
push
sbb
pushf
rcrb
pushf
pop
lock
fdivrs
fsubs
adc
cmp
sub
lcall
adc
or
cs
cmpl
fadd
dec
add
imul
loopne
mov
daa
sub
sub
outsb
sub
cmp
jb
push
push
or
cld
add
mov
or
leave
repz
mov
ja
ljmp
push
xchg
stc
pop
aas
cli
lret
jns
stos
push
ret
and
add
jmp
ja
mov
jle
sub
push
push
cmp
jns
xchg
lea
push
hlt
test
push
movsb
dec
jmp
fld
rcll
dec
pop
rolb
add
andb
insl
pop
sbb
lret
call
pusha
cmp
out
movsb
xor
inc
and
sahf
cmpsl
in
jle
inc
clc
push
sub
xchg
jle
jo
popa
jbe
dec
popa
roll
fdivrl
or
test
stc
push
add
je
sub
ljmp
push
xor
mov
and
add
addr16
jo
cld
loop
stos
leave
mov
jbe
jnp
jne
testl
adc
dec
addr16
jb
lahf
mov
xchg
or
daa
mov
lret
and
and
rcll
xchg
cmp
out
pop
movsl
xor
dec
pop
hlt
add
cmp
ss
adc
jae
pop
push
add
pop
lock
sarl
mov
shll
fsubr
out
or
iret
dec
jle
pop
pop
jb
repz
inc
pop
mov
xor
adc
pusha
in
cs
pop
aas
out
aas
push
jmp
dec
cmp
sbb
call
clc
das
push
jmp
aad
jge,pn
neg
mov
ljmp
cmpl
jmp
and
fwait
movsl
mov
clc
or
sbb
loop
ljmp
lret
mov
jmp
ds
notl
jecxz
aas
mov
and
shrb
shrl
sub
lea
mov
add
adc
pop
sti
xchg
pop
in
lret
xchg
icebp
scas
es
and
or
jns
mov
cmp
jg
push
push
xchg
cli
jae
and
lods
xchg
pop
iret
cltd
sahf
jae
icebp
das
popa
int3
push
cltd
repz
fnstcw
sub
das
push
cli
jp
es
outsb
into
popa
icebp
add
mov
sbb
mov
arpl
scas
pop
sahf
jge
leave
mov
xor
jbe
jp
push
dec
icebp
and
stos
pop
cld
push
xor
jmp
push
mov
imul
imul
cmp
adc
fs
lea
sbb
hlt
and
pusha
mov
inc
add
inc
nop
clc
xor
pushf
stc
js
je
filds
test
outsl
cmpsb
mov
xchg
pop
sub
mov
ljmp
ljmp
lret
push
sbb
mov
popf
lahf
sbb
xor
push
psubusw
cwtl
jnp
jbe
movsl
stc
insb
push
test
jecxz
insb
addr16
fstp
push
popf
fwait
mov
out
call
or
jae
lea
shl
push
je
adc
pusha
pop
fld
push
flds
and
out
dec
jp
ljmp
mov
mov
adc
ret
pop
and
popf
jle
repz
xchg
int
gs
push
xchg
or
push
aam
pop
out
in
fucomp
loop
xchg
jp
mov
dec
insl
cs
ds
inc
pop
cli
pop
popf
aad
rol
and
dec
rcl
pop
mov
mov
icebp
add
mov
jmp
leave
mov
icebp
push
jne
sub
jb
push
push
mov
ret
scas
or
cmpsb
jnp
mov
aam
and
inc
jg
ja
outsl
and
jge
popa
jp
cmp
inc
dec
fcmovb
sbb
icebp
shl
stos
mov
movsb
dec
add
cmc
push
mov
pop
call
pop
sbb
jb
aad
xlat
ljmp
in
aaa
jecxz
insb
cmp
aaa
cmc
dec
cmpsl
into
cmp
out
push
lcall
fdivs
jae
sbb
jae
sbb
mov
sbb
mov
ret
loop
mov
pop
jge
xchg
jle
dec
pop
in
fst
icebp
pop
mov
arpl
inc
xorl
dec
dec
mov
and
mov
clc
stos
aad
sbb
jne
call
jg
outsl
cmp
mov
pop
punpcklbw
cmp
sbb
out
mov
lcall
dec
mov
push
aad
cld
scas
push
movsb
enter
ljmp
xor
add
pushf
cli
dec
adc
inc
pop
out
mov
mov
push
test
movsl
daa
ds
fs
test
mov
stos
ficompl
xorb
insl
mov
mov
aam
xor
divb
xchg
or
adc
mov
push
add
je
sti
adc
jns
shrl
or
aam
icebp
scas
and
cmp
add
sub
sar
mov
mov
mov
test
insb
sub
cmpl
insl
test
maskmovq
imull
mov
pop
inc
and
int
jle
shlb
jb
sub
xchg
and
xchg
adc
shl
pushf
sub
adc
arpl
dec
xchg
cmp
jl
jns
sbb
data16
repnz
xor
mov
outsl
and
out
xor
enter
adc
xchg
pop
fwait
or
sbb
shrl
jbe
out
and
mov
lds
add
std
push
call
xchg
jbe
cmp
ljmp
ret
por
mov
jecxz
stos
mov
sar
or
mov
out
popf
mov
pop
mov
jecxz
push
sub
xorb
nop
push
fidivs
sub
leave
mov
lcall
cmp
lret
mov
loope
xchg
js
xor
test
or
inc
jno
xchg
testb
sub
sub
call
gs
xchg
aam
in
mov
push
int3
jl
xor
fdivrl
sub
mov
xor
push
out
sbb
push
jg
sub
popa
push
mov
sbb
xchg
enter
mov
rorb
jo
std
addr16
ss
ret
or
add
and
call
daa
xchg
pop
in
add
aad
adc
pop
lahf
cmp
subl
imul
push
add
pop
xor
pop
push
or
aas
push
and
inc
popf
dec
je
push
ljmp
in
cld
push
pop
icebp
rorl
cmp
push
imul
jno
jge
lds
adc
xor
shll
mov
xchg
je
fcmovne
jle
mov
or
cli
ret
mov
test
das
fimull
mov
jl
push
mov
xlat
cmpsb
mov
mov
stos
xlat
mov
pop
cmp
sbbl
outsb
fistl
es
xchg
ss
scas
jbe
push
stos
adc
mov
icebp
xchg
sar
jge
jmp
push
aaa
setae
aam
shlb
push
out
std
imul
repz
and
push
mov
daa
out
sub
pop
push
adc
mov
add
test
stos
and
push
ret
jecxz
rep
xchg
push
mov
push
push
mov
sahf
adc
sub
ret
faddl
and
nop
xchg
or
push
dec
out
fdivs
setnp
jle
in
bound
xchg
lcall
in
fwait
arpl
fdiv
leave
add
nop
xchg
lds
sbb
daa
push
iret
xchg
addr16
xchg
add
pop
iret
pop
movsb
inc
sbbl
std
mov
push
andl
inc
xlat
and
loop
fs
and
mov
push
repz
bswap
sub
int
sub
inc
lret
or
testl
lahf
xchg
jne
cmovae
repnz
pop
enter
mov
xchg
mov
inc
push
jb
inc
pop
fsubr
in
call
outsl
jno
popa
insl
cmp
imull
int
cmpsb
enter
rcll
inc
cmp
out
xchg
or
punpckldq
mov
stos
int3
xchg
mov
popa
xchg
je
pop
arpl
xor
xchg
rclb
push
hlt
in
punpckhbw
jp
jmp
clc
sti
and
in
and
idivb
sbb
inc
lcall
sub
pop
fisttpl
and
cltd
inc
adc
mov
sahf
cmp
ficoms
repnz
outsb
and
insb
dec
pop
inc
pop
outsl
outsb
test
jmp
adc
outsl
mov
dec
fcmovnu
sub
xor
mull
das
or
sub
in
sbb
mov
cmc
pop
imul
cmp
push
mov
and
push
decl
xor
mov
inc
inc
mov
push
icebp
mov
shr
test
sahf
sti
sub
cs
imul
lock
xor
mov
mov
cltd
push
fs
sub
clc
leave
or
imul
mov
adc
notl
cmpb
into
jp
in
cld
mov
xchg
lods
cmpsb
mov
pop
subb
xchg
lock
arpl
mov
mov
xor
jns
sbb
push
out
test
mov
sbb
mov
mov
push
sub
push
jl
pop
cmp
popf
pop
inc
rolb
scas
push
mov
cmp
push
scas
cmp
and
sub
syscall
and
sub
adc
stos
std
inc
dec
or
dec
push
add
bound
xchg
jge
dec
push
test
or
and
sbb
sbb
xor
mov
mov
incb
lcall
or
lods
sbb
test
and
xlat
cs
push
mov
xorb
push
jmp
cmp
loop
push
adc
shl
pushf
ljmp
iret
ds
mov
cmp
jne
stc
pop
aaa
orl
rcll
jno
mov
push
push
jmp
xchg
scas
sti
sub
js
out
inc
bound
test
lcall
add
das
insl
adc
inc
pop
iret
add
fimuls
push
mov
mov
fs
test
ja
test
cmp
and
mov
pop
jnp
adc
jo
bound
inc
aas
pop
sub
nop
fcomps
in
test
outsl
nop
xor
les
and
repnz
cmp
ljmp
push
add
fsts
and
jnp
mov
addr16
dec
out
jmp
shll
ds
cmp
popa
pusha
cmp
ret
dec
xor
jle
inc
cwtl
scas
lahf
sub
sbb
nop
xor
dec
pop
xor
add
iret
pop
cli
jns
sub
mov
cmp
dec
mov
repz
int3
ss
adc
mov
stos
mov
pop
xor
xchg
xor
lret
jge
lock
aad
stos
sbb
xor
xor
dec
adc
rcrb
or
and
aam
mov
sti
outsl
sti
push
les
movsb
std
hlt
jo
std
out
dec
std
jb
lods
fs
push
jno
adc
jl
mov
test
sbb
icebp
inc
push
stc
mov
xchg
test
xor
mov
lret
fisubs
mov
inc
and
mov
ljmp
push
out
jno
ds
push
mov
fldl
jl
or
xchg
add
in
add
fwait
jecxz,pn
cmc
dec
and
fbld
adcl
aaa
mov
call
adc
xchg
nop
mov
sub
mov
popf
mov
xor
aas
add
out
int
cs
pop
out
in
dec
int3
jb
mov
mov
cwtl
mov
addr16
mov
inc
mov
dec
add
mov
xchg
xor
cmc
xorps
clc
mov
add
sahf
mov
ljmp
aas
mov
adc
sub
mov
imul
ss
scas
insl
sub
enter
aaa
mov
and
movsl
push
cmpb
repz
testb
ds
loopne
pop
ja
mov
and
push
fisttps
sti
xor
jne
or
add
inc
inc
sub
dec
mov
xchg
jg
scas
cmp
mov
jl
js
mov
iret
and
push
lods
cmp
mov
lahf
xchg
ljmp
ljmp
pop
or
clc
insl
adc
push
or
jno
dec
push
into
mov
xchg
fimuls
mov
add
xchg
enter
addl
mov
test
or
enter
lcall
mov
test
mov
test
dec
sub
popa
ja
and
cli
es
adc
xchg
inc
add
mov
aas
mov
sub
adc
loope
dec
cmp
mov
mov
fnstenv
mov
xchg
cld
or
sbb
in
jecxz
xchg
fistpll
int3
out
xor
jno
pop
loope
adc
test
cmc
aas
inc
fnsave
stc
sbb
test
in
loope
inc
cmc
sub
bound
mov
in
mov
mov
scas
sbb
xlat
sti
lock
addr16
lock
xchg
sbb
mov
inc
cmpsl
inc
js
push
cmp
sbb
sbb
inc
mov
arpl
leave
mov
out
add
sahf
and
addr16
in
fldenv
pop
lods
jg
inc
mov
ss
mov
mov
cmpsb
clc
lea
mov
movsl
fiaddl
repz
movsl
popa
inc
shr
xchg
aad
mov
in
push
add
xchg
hlt
mov
sbb
call
orb
lret
xchg
in
xchg
push
xorb
int
pop
jl
jne
ja
sub
sub
and
cmc
pop
sbb
mov
fwait
jge
rclb
and
jnp
in
adc
adc
cmp
std
cmp
xchg
pop
rcl
das
and
mov
fs
inc
xchg
cltd
push
adc
rolb
stos
in
and
and
jmp
cmp
push
xchg
ds
test
xor
xchg
inc
cmp
lret
or
xchg
jmp
cmp
out
das
dec
or
push
pop
repnz
imul
sbb
data16
jae
xlat
lea
testl
mov
test
dec
sbb
inc
mov
xor
xlat
or
test
pop
jge
mov
dec
out
add
add
jp
sbb
xchg
divb
dec
sbb
jg
jge
data16
pop
loopne
scas
or
mov
aaa
pop
sbb
add
mov
xchg
push
dec
push
ret
cmc
jo
xlat
lahf
push
fidivrs
ja
push
xor
movb
fcoms
into
mov
pop
xor
pop
xor
enter
orb
aam
push
push
fwait
add
cltd
movsb
xchg
xchg
jne
enter
mov
lret
lods
push
sbbl
call
xor
sbb
es
test
daa
out
sbb
out
fdivrp
mov
xor
pop
lea
mov
repz
jp
call
movsb
lcall
jno
jmp
xor
pop
movsb
loopne
adc
fisttpl
mov
movsl
lahf
sub
jbe
call
inc
push
inc
sbb
fsubr
imul
add
movsb
icebp
add
push
pop
gs
int3
fsubs
iret
int3
imul
xchg
xor
iret
mov
jnp
xchg
insl
aad
mov
xchg
or
jnp
dec
push
out
or
push
pop
call
inc
mov
mov
loope
cmp
or
std
pop
mov
push
pushl
mov
in
divl
faddp
xchg
xchg
movsl
stos
es
leave
cltd
jo
shl
adc
rcrb
mov
subl
loop
repnz
sub
test
divb
in
cmpsb
mov
pop
mov
jle
fistpll
outsb
inc
testb
add
pop
pop
inc
popa
inc
test
lods
mov
lcall
cwtl
push
dec
xchg
inc
les
mov
scas
cmp
in
adc
xchg
into
aas
pop
cmpsb
xorl
mov
push
repnz
pusha
and
jb
gs
jmp
rclb
out
mov
pop
loop
in
pop
sub
sub
add
jne
and
pop
jb
push
pushw
xchg
and
jbe
sbb
jb
pextrw
fiadds
sub
aas
sbb
inc
xchg
jb
mov
fistl
mov
cltd
gs
jae
out
out
jp
pop
inc
aad
push
push
cmp
or
cmp
loopne
adc
sti
sbb
fwait
into
pop
nop
or
inc
mov
das
gs
test
rolb
jle
loop
add
sbb
nop
sahf
xchg
xchg
and
ret
rcll
mov
aaa
xor
rcr
adc
sbb
addr16
in
mov
aas
xor
adc
jl
push
hlt
hlt
scas
cmp
mov
fnstenv
xor
xchg
cmc
push
shlb
push
dec
sub
pop
mov
cltd
in
call
loop
fists
test
mov
fcomps
xchg
push
adc
subb
pop
hlt
outsb
jns
jne
jbe
ja
inc
cmpsl
mov
mov
mov
push
rclb
sbb
cmpsl
push
dec
adc
das
movsb
lret
pop
jmp
in
pop
mov
or
fsubr
test
cmp
xlat
jmp
mov
inc
je
aaa
aas
dec
adc
pop
cmp
mov
nop
cli
cs
sub
das
inc
mov
xchg
jl
sub
sahf
fcomps
leave
imul
nop
xchg
push
ret
lods
in
inc
sub
sub
imul
jl
push
sarb
inc
mov
mov
pop
call
pop
jle
out
ss
xor
jmp
lahf
movsl
icebp
sub
sarl
das
mov
push
adc
pusha
lods
and
push
jecxz
add
fldcw
fcoms
xor
jns
imul
adc
outsl
rcrl
imul
addl
repnz
or
addr16
cs
out
jle
pop
push
es
mov
xchg
cmpsl
jno
aam
jle
in
or
sbb
iret
cmp
popa
ret
mov
mov
hlt
lcall
push
push
imul
loope
add
sub
pop
daa
test
push
sti
cs
ss
imul
xchg
pop
fnsave
push
mov
dec
pop
outsl
movsb
jmp
or
sahf
imul
rcrb
jp
mov
ljmp
push
mov
adc
lods
mov
mov
aad
jns
jne
push
and
rcrb
push
add
push
bound
cmp
pusha
mov
sub
lret
mull
or
mov
test
out
dec
xchg
xchg
bound
fcoms
jae
xchg
and
aaa
mov
mov
adc
ds
push
mov
ret
into
adc
jmp
and
andb
jmp
hlt
fidivrl
popa
test
sar
dec
pop
repnz
add
and
push
enter
xchg
push
sarl
cmpsl
cmp
jne
sbb
adcb
add
jne
test
push
ror
ret
xchg
jbe
inc
jb
push
arpl
lds
lret
ljmp
pop
fdiv
xor
mov
push
ljmp
mov
addr16
popa
and
pop
mov
mov
fidivl
lea
je
xchg
mov
jno
sbb
and
fcomps
shll
inc
and
adc
cld
aas
xchg
std
lods
movsb
mov
popa
call
sti
and
jno
xlat
and
jp
add
jb
mov
shl
mov
xor
add
rcl
jnp
xchg
inc
mov
mov
lahf
cmp
dec
jl
sub
cmp
pop
sub
mov
inc
flds
push
aas
lcall
xor
pop
pop
daa
lds
xchg
cmp
pop
xor
jecxz
shrb
fdivs
sub
rcrb
jge
mov
stc
adc
repnz
adc
and
and
cli
lock
popa
gs
outsb
loope
dec
fld
jb
mov
addr16
and
ds
imul
add
cmp
pop
cmp
stos
dec
xlat
adc
jecxz
rcll
sbb
dec
cmp
imul
push
sbb
dec
cmp
inc
aad
loop
xchg
sbb
pop
aas
movsb
ret
cmp
xor
ja
push
imul
in
test
inc
imul
and
mov
cmp
mov
push
test
in
jmpw
jns
mov
cmp
or
add
dec
ror
fildll
jae
xor
sbb
js
add
cs
fldenv
pop
clts
sti
sahf
imul
cmp
mov
imul
jmp
nop
fs
xlat
cmpsb
mov
inc
int3
mov
js
test
push
fdivp
and
inc
rcll
stos
into
aaa
cltd
add
fwait
mov
xor
out
test
addb
jp
cltd
sub
sahf
push
inc
sar
into
mov
int3
pop
gs
loope
mov
inc
inc
in
and
rorb
add
sub
sub
adc
inc
dec
push
push
xchg
movsl
js
fnstcw
jne
pusha
lahf
adc
mov
jl
ljmp
cmp
pusha
xchg
xchg
mov
cmpl
fdivrs
in
fistpll
mov
out
add
lahf
push
insb
mov
jb
loopne
add
and
aas
or
dec
push
data16
cmpb
push
cmpsl
out
adc
out
daa
mov
dec
sbb
movsl
mov
and
push
xor
imul
out
out
shrb
andl
sbb
mov
int
ficomps
jle
movsl
cmpsl
imul
pop
loopne
stos
lahf
sub
jno
lods
lahf
push
popl
test
jne
inc
add
std
pop
xlat
ds
and
dec
push
sub
xor
mov
adc
fidivrs
cmp
sahf
or
cwtl
jnp
pop
pop
pop
xor
push
xlat
adc
pop
into
push
mov
movsb
stos
cmc
and
cmp
adc
mov
test
arpl
pop
test
add
pop
pop
or
sub
in
mov
jecxz
ljmp
push
xchg
repz
mov
iret
out
pushf
sbb
sub
xchg
xchg
mov
into
insb
xor
arpl
rcl
or
sbb
fs
xchg
add
push
and
es
cmp
cli
jnp
inc
jo
and
outsl
sbb
scas
test
data16
lods
imul
test
jnp
xlat
cmp
jae
inc
outsl
es
add
mov
test
sbb
mov
and
xlat
sbb
es
dec
dec
mov
lock
xorps
xchg
rol
cs
pop
dec
test
fs
dec
icebp
out
xlat
push
stc
je
hlt
push
mov
cmp
testb
sbb
fiadds
ja
adc
cld
push
cmp
inc
ljmp
xchg
ret
and
sbb
int3
aam
test
leave
mov
mov
rcr
mov
xchg
jns
je
inc
mov
aad
ss
cmp
mov
dec
es
sub
inc
push
push
xor
dec
adc
iret
cmpsb
scas
xor
and
orl
dec
mov
iret
dec
cmp
jg
out
aad
out
mov
adc
fwait
ret
arpl
les
sbb
sbb
lock
cmp
test
xor
pop
das
subb
jge
gs
jb
stos
ret
mov
sbb
or
test
adc
jmp
ljmp
sub
inc
lea
sub
fs
inc
rcrl
xor
cmc
fisubrs
mov
fcomi
repz
mov
pop
js
inc
inc
cmpsb
mulb
xor
je
xor
mov
push
or
out
jbe
xchg
fsubrp
sbb
insl
call
ss
jno
mov
pusha
outsb
stc
lcall
xor
xchg
int3
lcall
dec
je
inc
lock
rclb
add
sarb
pop
push
mov
pop
loopne
inc
loope
shrb
push
adc
adc
loope
xor
jns
repz
mov
dec
jle
add
icebp
pop
pop
inc
mov
into
mov
xchg
rcl
jmp
aaa
in
dec
lds
lahf
ret
mov
fidivrs
mov
popf
pop
pop
push
push
ret
dec
sbb
or
mov
sti
outsl
mov
inc
in
sbb
hlt
lcall
jp
inc
loope
pop
sub
stc
in
lods
jmp
mov
je
cmp
shll
ficompl
xchg
ret
test
push
xor
popf
add
nop
and
xor
mov
mov
lret
int3
mov
test
rcll
dec
dec
adc
insb
sbb
mov
jbe
mov
rol
pop
inc
rclb
bound
jno
lock
mov
add
inc
and
sbb
out
je
sub
and
xor
xchg
add
mov
mov
repz
sub
arpl
cmpsl
repz
ret
jmp
lods
sub
sub
mov
sbb
add
idiv
jg
sbb
movsl
roll
mov
fmul
lods
lret
dec
adcb
in
mov
dec
mov
stos
inc
mov
mov
cli
add
shll
cmc
dec
sahf
divb
repnz
mov
xchg
lock
test
enter
out
adc
mov
xchg
or
mov
cmc
mov
mov
mov
out
filds
cld
xchg
mov
and
inc
out
cvtpi2ps
stc
je
movsl
ret
jns
and
and
jnp
xchg
mov
mov
sbb
mov
sub
aas
pop
rcll
mov
loope
ds
xchg
pop
sbb
mov
push
fnstsw
pop
in
les
jbe
imul
push
insb
cmp
xchg
xchg
jb
mov
vsubpd
mov
push
cld
cmp
mov
push
add
lcall
jmp
call
pop
test
bound
or
insl
push
inc
cmp
mov
inc
push
jl
mov
xchg
aas
pushf
add
mov
xchg
mov
jo
popa
arpl
xchg
jge
gs
add
add
adc
lret
push
adc
pop
lcall
inc
out
in
dec
shrb
outsb
push
and
or
dec
outsl
test
or
inc
jne
ds
adc
and
push
mov
fs
out
out
out
test
insl
mov
jnp
mov
jnp
adc
push
mov
mov
cmp
fisttps
xchg
cmp
sahf
and
repnz
or
and
jle
test
xchg
sarl
xchg
scas
std
imul
mov
lock
andl
add
int
xchg
rolb
hlt
push
or
dec
or
jo
or
mov
push
cmp
xor
inc
imul
fs
sub
addr16
enter
adc
push
add
cmpl
fnsave
daa
push
sub
arpl
adc
or
mov
jo
shrb
push
dec
pop
sub
xor
lods
sti
inc
jecxz
lods
ss
mov
movq
or
inc
fsubrp
scas
inc
pop
or
leave
nop
sbb
lods
or
sub
sub
jecxz
rcrl
jnp
sbb
sub
xchg
add
inc
fiaddl
cmp
inc
mov
mov
call
xchg
lcall
imul
lods
adc
lret
mov
int3
outsl
ds
out
and
insb
insb
addl
into
or
cli
inc
cwtl
mov
add
lahf
sbb
ja
out
insl
push
sahf
popf
xchg
lret
jmp
push
enter
jne
loop
xchg
test
sub
pop
xor
push
js
ljmp
scas
inc
addb
cmpsb
adc
mov
movb
inc
push
pop
jp
ds
not
out
xchg
inc
pop
test
jg
sahf
mov
pop
mov
mov
jne
sub
cld
cli
cmp
dec
sub
adc
mov
cltd
lea
cmp
or
xchg
cwtl
cli
push
xchg
xor
and
cmp
xor
mov
insl
mov
pop
in
mov
scas
mov
insl
mov
mov
pop
cmp
or
cltd
mov
sub
mov
mov
sbb
cld
pop
mov
or
in
jle
jp
sbb
jae
dec
mov
inc
xor
pop
loope
xchg
pop
push
mov
mov
mov
jge
mov
adcl
mov
clc
lcall
xchg
repz
jb
test
mov
fldcw
pop
fcoms
aad
notl
lds
faddl
fldt
int3
test
in
xchg
nop
test
xchg
pop
fwait
jne
cmp
mov
dec
stos
rcrb
int
cmp
pushf
pop
fisttps
adc
ds
dec
mov
out
lock
rcrl
cli
mov
cmp
cmp
push
pop
cmpsl
enter
pop
inc
jmp
inc
mov
or
xchg
jns
adc
lock
mov
pop
mov
cmp
fiadds
inc
aam
jl
and
sub
add
pop
push
fs
shll
cs
lret
xchg
int
gs
mov
adc
sub
xchg
and
lods
aad
fsubr
sbb
cmpsb
popf
pop
cmp
mov
in
xchg
push
pusha
lret
lcall
and
jmp
pmullw
push
xor
lods
push
shl
stc
and
repnz
movsl
mov
int
cmp
push
add
sahf
cmp
mov
inc
push
pop
and
aam
hlt
cmpsb
xor
daa
ror
cmp
test
aas
sbb
mov
addr16
mov
test
adc
or
mov
add
add
loopne
adc
aad
in
mov
jnp
fldt
cmp
push
in
mov
ds
lods
loope
cmp
cld
inc
xchg
mov
imul
mov
fsubl
jge
hlt
mov
xchg
in
les
cmpsb
sub
sahf
out
pop
outsl
je
or
and
dec
std
cmp
xchg
jne
inc
ljmp
mov
pop
jnp
aaa
int
gs
adc
push
xor
push
or
rcrb
addr16
push
fnstsw
arpl
push
push
mov
sti
loopnew
push
push
jno
arpl
addr16
mov
mov
enter
pop
sub
rorl
mov
pusha
das
shlb
adc
push
add
adc
out
std
pop
out
mov
cwtl
inc
lret
les
stc
or
jmp
outsb
mov
cmpsb
pop
mov
xlat
shrl
popa
push
in
add
xchg
mov
mov
sub
sub
test
pop
into
aas
dec
repnz
ds
les
jnp
ja
xchg
stc
stc
in
jge
cwtl
movsl
mov
pop
xor
loopne
std
roll
lods
xchg
out
iret
jge
push
push
loope
jecxz
sub
pop
scas
repnz
arpl
inc
mov
cmp
nop
cmp
test
sarl
nop
dec
loopne
loope
xchg
dec
pop
dec
aam
imul
mov
cmpb
adc
mov
push
jo
cmc
clc
daa
btr
insb
cmp
add
inc
push
dec
pushf
jl
loopne
push
out
test
inc
add
xor
imul
pop
in
pop
push
push
add
pop
lret
jge
xchg
dec
rorl
das
sub
loopne
pop
adc
jl
test
aad
sbb
sub
ret
sbb
dec
shlb
sub
cmp
dec
jae
sahf
jmp
push
push
add
push
stc
pop
ret
dec
add
cmp
into
add
jns
rol
ror
shlb
push
add
scas
jbe
je
std
mov
mov
popf
movsb
and
jbe
sub
inc
nop
in
flds
pop
jns
dec
shlb
or
push
jae
in
sbb
xchg
bnd
movsb
stc
add
stos
enter
jge
pop
mov
paddq
sbb
aad
jecxz
or
xchg
out
aad
and
imul
adc
pop
inc
jmp
add
aas
pop
and
jno
xor
add
shrb
jecxz
cli
hlt
in
push
jo
sbb
push
inc
mov
jnp
fisttps
popa
popf
pop
rorb
push
and
adc
jle
js
in
mov
adc
js
std
or
test
cmp
or
ss
xchg
sbb
or
gs
ret
std
and
inc
xchg
pop
xor
iret
mov
xor
out
jle
or
fbstp
push
repnz
pop
addb
ss
adc
xchg
xor
mov
loope
or
xchg
fwait
xchg
dec
fsubrl
jo
sahf
jl
cmpsl
sub
dec
hlt
cmp
test
popf
mov
jge
daa
xchg
mov
test
dec
ss
shrb
or
addr16
je
cmpsb
arpl
pop
mov
fs
inc
adc
or
xor
in
adc
enter
pop
das
mov
pusha
jne
hlt
mov
jge
leave
fucom
popa
test
lea
dec
cmp
repnz
jmp
aam
les
das
mov
jns
jmp
jae
js
adcb
mov
je
insb
mov
stos
jbe
lahf
mov
adc
lock
iret
clc
inc
xor
and
jle
mov
loopne
incl
pop
jae
test
movsl
dec
sub
into
lea
aaa
in
add
adc
sub
mov
xchg
fildl
pop
mov
jb
push
lahf
pushf
data16
ret
call
inc
iret
js
out
push
dec
das
inc
xor
mov
xor
mov
inc
insb
addr16
daa
test
loope
xchg
imul
jle
mov
dec
cld
imul
in
sub
movl
jae
leave
scas
js
sbb
lock
daa
adc
mov
pop
out
push
sub
sbb
fwait
in
dec
jg
lahf
sbb
mov
jno
loopne
pop
setg
inc
nop
insl
sti
push
and
pop
jl
dec
mov
in
nop
or
push
push
cmp
pop
jp
imul
test
mov
or
jmp
xchg
je
adc
into
mov
sbb
and
mov
mov
fistpl
jle
jae
xchg
std
sti
pop
adc
clc
jecxz
test
mov
push
aad
neg
outsb
addr16
xchg
jl
or
shlb
mov
cmp
adc
sub
push
lret
or
repnz
jno
lcall
mov
jmp
mov
sub
cltd
outsb
hlt
lret
fdiv
fildl
mov
testb
adc
inc
adc
test
test
add
mov
mov
mov
sti
test
ja
xor
iret
jae
cwtl
in
or
pusha
ljmp
es
stos
sbb
adc
push
outsb
pusha
inc
in
adc
jno
push
insl
int
stos
pop
insl
mov
pusha
insb
jb
out
mov
and
add
inc
lds
pop
mov
aas
mov
test
pop
or
dec
inc
jge
add
pop
ret
cmp
dec
jo
push
jne
inc
xlat
push
hlt
jno
daa
test
std
dec
cmc
outsl
scas
xchg
in
imul
dec
arpl
fdivr
test
xor
push
push
in
fimuls
icebp
lahf
fsubrl
int3
inc
push
aaa
daa
lcall
dec
or
cmp
jle
mov
pop
repnz
or
push
fsubl
and
mov
mov
add
sbb
dec
mov
dec
outsl
pop
mov
or
push
shrl
cltd
pop
test
add
out
inc
in
inc
pop
push
sub
xor
inc
pop
jbe
aam
jnp
aaa
je
insb
mov
mov
nop
sarb
jmp
dec
or
mov
shll
jns
into
fnstsw
lods
aaa
mov
add
stos
test
pop
mov
fisttpl
sub
lret
sbb
inc
iret
incl
jae
jmp
mov
fistpl
cld
icebp
imul
sub
imul
or
std
mov
lds
icebp
mov
ficoml
int
and
or
xor
fisttpl
sti
std
jg
or
out
mov
mov
cmpsl
out
dec
pop
dec
fnsave
cmpsl
jle
scas
inc
test
pop
mov
xchg
xor
cli
stc
cmc
sbb
sbb
cmpb
pop
mov
adc
dec
cmc
sub
mov
loopne
stos
or
mov
imul
popa
repnz
mov
xor
rorl
sbb
fs
xchg
das
and
pop
mov
add
loopne
sub
inc
jge
ret
pop
xchg
icebp
ret
pop
std
lahf
adc
adc
sub
sub
mov
and
push
insl
ret
test
pop
mov
jo
sbb
adc
std
fistpl
es
subb
inc
test
movsl
les
rorl
test
bound
test
adc
push
add
sbb
push
and
pop
push
sbb
outsl
mov
icebp
push
iret
sub
fsubl
scas
fsubs
adc
sub
inc
clc
inc
int3
popf
addb
addl
mov
push
enter
pmaxsw
jp
inc
mov
dec
fs
dec
lods
adc
mov
cwtl
lahf
pop
filds
xlat
cmpsb
cli
loopne
in
std
mov
mov
test
pop
mov
dec
xchg
js
scas
sarl
ljmp
lds
loopne
mov
dec
ret
dec
fnstenv
loop
aas
adcb
sbb
jbe
cwtl
lods
ja
jae
xor
sbb
fidivrl
lahf
inc
test
mov
cmpsb
call
lret
xor
mov
fcmovb
popa
ds
pop
js
jo
sub
jne
dec
call
test
das
cmp
xor
xorl
mov
mov
loop
xchg
sub
movsb
pop
sub
sub
js
mov
pop
and
sbb
pop
aam
sub
jo
pop
jmp
popa
in
mov
cmp
jbe
negl
testl
pop
inc
dec
mov
add
mov
hlt
mov
in
lahf
mov
aaa
int
outsl
mov
add
ljmpw
movsb
mov
pop
sbb
xlat
ret
inc
jge
loope
pop
jle
adc
mov
xchg
insb
popa
or
jnp
cmc
imul
inc
push
sti
jl
xchg
jl
or
sub
in
jecxz
dec
inc
insb
sbb
sti
jecxz
mov
jmp
scas
adc
cmp
ljmp
inc
inc
icebp
push
sbb
outsl
repnz
mov
mov
arpl
pop
cmpsb
dec
dec
outsb
cli
pushf
loop
adc
sbb
sbb
and
imul
filds
mov
and
outsl
push
lret
insb
mov
mov
mov
enter
pop
rol
inc
cmp
dec
adc
cmp
inc
jl
cmp
pop
fninit
or
mov
repz
cmc
shr
mov
stos
in
adcl
dec
insl
pop
dec
dec
add
lods
mov
cmpl
dec
sbb
adc
jae
mov
xchg
jle
ja
push
nop
mov
movsl
lret
jb
add
jle
sbb
xchg
sub
push
mov
jg
test
jp
xor
pop
daa
addl
jmp
into
mov
mov
push
pop
sub
cmp
sub
cld
and
movsb
jg
and
jl
push
sub
push
sub
mov
cmpsb
fdivrs
and
repz
addr16
aaa
cmpsb
mov
icebp
sbb
xor
cmpsb
push
xlat
out
add
aam
pop
mov
test
fsubl
jbe
scas
mov
lret
leave
aad
sub
cmc
jle
and
pop
mov
sub
into
test
leave
cwtl
jo
in
jl
inc
and
test
and
jns
jo
jg
mov
lret
and
xchg
in
adc
rorb
stos
cltd
push
fsubrs
dec
imul
mov
not
loopne
in
imull
sti
mov
add
push
and
push
and
cld
xchg
wrmsr
shll
xchg
mov
repnz
pop
dec
jmp
add
movsb
popf
ljmp
popl
dec
test
jecxz
jno
insl
shll
es
cmp
addr16
pop
jg
mov
mov
hlt
popf
shll
sub
adc
xor
sbb
arpl
sub
mov
sbb
jb
in
clc
inc
cmc
push
mov
adc
adc
adc
and
jae
adc
inc
lods
aad
scas
mul
imul
addr16
push
fcmovb
or
mov
jno
lds
mov
cwtl
and
jns
fs
or
addb
xor
int
xchg
enter
jo
jae
xchg
out
xchg
jb
hlt
xor
push
cmp
into
aaa
lret
ret
pop
xchg
mov
and
add
mov
mov
idiv
and
push
repnz
add
inc
fimull
jno
add
pop
cmp
arpl
enter
cli
subl
in
test
in
cltd
push
adc
je
aam
pop
add
jnp
push
stos
jns
les
cltd
mov
fwait
loope
notb
mov
add
mov
adc
scas
pop
mov
scas
je
lret
call
xor
or
xor
dec
mov
push
arpl
mov
dec
or
rcr
mov
nop
adc
out
in
adc
insb
lret
outsb
push
inc
pop
cli
outsb
sti
mov
sbb
inc
lret
iret
add
pop
test
dec
and
inc
sbb
lcall
test
push
movsb
negl
mov
mov
xchg
stos
push
les
jae
pop
pop
xor
xchg
pop
inc
dec
aam
pop
push
adc
and
shlb
ret
cld
pop
cli
insb
sbb
lods
adc
pop
cmp
insl
xchg
loop
insl
pop
mov
or
subl
sub
sub
fdivrs
add
es
push
pop
mov
lods
pop
xor
lahf
stc
rol
jo
addl
repz
adc
add
pop
in
jne
and
leave
sahf
imul
jne
in
adc
icebp
pop
lock
ret
out
or
push
mov
xchg
pop
fsubs
js
test
mov
enter
dec
ficompl
cwtl
push
cmpl
dec
les
lret
arpl
jmp
insl
pusha
inc
xor
dec
sbb
cmp
mov
mov
jnp
and
fdivl
push
ds
inc
idivb
adc
das
iret
jge
testl
pop
jb
insl
int
mov
rorb
arpl
mov
and
pop
add
mov
dec
js
cld
iret
jmp
cltd
mov
adc
mov
fidivrs
sub
dec
ja
cmpsb
enter
aas
xor
sahf
adc
shlb
or
mov
mov
dec
shlb
stc
fcomps
mov
pop
xchg
jg
pop
jle
or
mov
in
arpl
jge
js
mov
ljmp
inc
xor
adc
pop
cld
mov
std
and
pop
into
jmp
push
sub
adc
sub
adc
shlb
jmp
pushf
mov
cwtl
es
push
and
adc
movsl
jno
lea
imul
shlb
mov
imul
sbb
adc
loopne
lods
pop
xchg
add
decl
pop
adc
sbb
cmpsl
xor
mov
add
aad
adc
ljmp
test
push
mov
shll
outsb
push
rorl
outsb
cld
push
push
stos
fnstsw
in
ja
cwtl
xor
test
lcall
jl
out
cmpsb
pop
shlb
mov
repz
ficoms
xchg
inc
jne
adc
dec
les
add
jno
mov
mov
cwtl
xchg
pop
test
cs
imul
mov
aas
jmp
add
inc
fnstsw
negb
rcll
push
xchg
mov
xor
xchg
or
or
cmp
pop
or
sbb
cmp
bound
cli
das
test
inc
jp
repnz
push
in
jb
shll
xor
cmc
mov
push
mov
push
jmp
enter
lret
ljmp
js
hlt
xchg
into
pop
jnp
stos
dec
or
ret
sbb
xor
xchg
je
adc
mov
adc
mov
iret
inc
mov
push
addr16
movsb
mov
mov
adc
movsl
pop
scas
rcrb
xchg
nop
mov
fidivs
mov
pop
test
sbb
enter
push
fmull
xor
fldcw
lret
jnp
shlb
xor
jmp
sbbb
cltd
fsubr
aam
sub
xor
or
pushl
add
sarl
mov
insb
adc
mov
fnstcw
xor
mov
divl
cmp
cmp
cltd
pop
aas
inc
inc
pop
pop
inc
lret
fdivl
popa
incl
add
cli
rcll
int3
push
rcll
jmp
es
adc
mov
in
xor
out
jecxz
xor
dec
push
xor
sub
jne
and
dec
xor
jae
cmp
notl
sub
sbb
in
lods
xchg
jnp
fs
push
rcrb
outsb
fwait
jne
pop
fdivs
cmc
inc
xor
add
jmp
push
sub
lods
decb
cwtl
xchg
add
shrb
jg
xor
xor
or
dec
mov
xor
popa
mov
mov
jle
mov
popa
test
jns
test
xor
adc
or
rolb
dec
add
xchg
scas
jne
push
or
ss
mov
inc
fwait
add
push
adc
sbb
mov
inc
lahf
testb
stc
shll
sahf
push
push
cltd
and
adc
rep
jecxz
aaa
mov
loopne
mov
leave
adc
push
mov
mov
sub
or
jg
mov
daa
xchg
push
mov
mov
cs
ret
push
mov
adcl
inc
enter
xor
inc
jns
adc
or
notl
scas
fsts
xchg
sub
or
xchg
mov
fistpl
jno
mov
or
inc
lods
cli
dec
jmp
in
mov
mov
adc
add
mov
sub
cmp
popa
js
cwtl
imul
and
sub
sub
imul
bound
rcrl
in
xchg
mov
xchg
gs
pushf
out
jle
outsb
push
jnp
js
add
or
loop
cmp
sub
faddl
test
sahf
ljmp
lds
mov
sub
mov
cmp
testb
fs
add
lods
iret
mov
dec
or
call
movsl
std
mov
sbbb
inc
mov
cmp
xor
enter
dec
das
or
fcomps
fdivrs
lock
push
arpl
addl
mov
popf
adc
ljmp
je
xor
adc
cmp
notb
mov
push
scas
insb
sbb
popf
adc
jnp
mov
sub
frndint
adc
bound
mov
jb
fwait
rcr
mov
lods
iret
imul
sub
sarb
jnp
loop
sub
xlat
pushf
fstpl
lret
push
test
pop
jnp
cs
sub
addr16
lret
lds
sti
cmp
dec
push
jge
mov
adc
mov
inc
push
jae
pop
out
popf
inc
push
inc
insl
in
es
imul
jnp
or
testl
jp
lods
test
int3
inc
pop
frstor
lods
cmpsl
daa
mov
enter
repnz
int
fmull
ljmp
or
aaa
jb
ljmp
lock
mov
pop
xor
mov
lods
push
and
push
sti
sahf
rcrl
mov
insl
int3
sub
xor
adc
clc
pop
daa
out
out
sbb
xchg
mov
and
push
xor
inc
dec
mov
xor
int3
gs
pop
pop
bound
cmpsb
lock
or
add
out
iret
xor
cmp
mov
sbb
pop
push
jns
ds
popa
dec
mov
inc
xchg
pop
push
add
jg
sub
mov
sub
push
or
popf
mov
xrelease
mov
aas
and
pop
nop
stos
in
arpl
gs
add
adc
loop
or
bound
push
lcall
mov
or
mov
mov
in
fwait
mov
neg
imulb
push
arpl
jno
jae
into
mov
jbe
je
lods
mov
adc
pop
xor
repz
popf
inc
cltd
loop
lret
sarl
add
adc
enter
inc
mov
test
cltd
push
push
xor
jmp
loope
sbb
mov
and
sub
and
dec
fwait
loopne
jg
inc
sahf
and
test
fs
lret
mov
sbb
jecxz
xor
push
bound
dec
std
pop
push
rclb
mov
call
cmc
mov
sub
jae
orb
add
popa
dec
leave
negb
jbe
inc
insb
cmp
lds
jmp
das
xor
jb
mov
decl
ss
push
das
mov
pop
in
pop
sub
cmp
mov
iret
imul
or
inc
pop
mov
fadds
popa
sti
mov
loop
xor
call
sub
push
idivb
arpl
roll
fs
aam
pop
jne
xor
sahf
mov
in
adc
xor
hlt
addr16
popf
and
iret
test
mov
jg
adc
fstps
mov
pusha
js
xchg
lahf
pop
push
cmpsb
loopne
or
das
rcr
data16
hlt
cmp
cmp
push
add
pushf
xor
add
pop
fildll
push
lea
aaa
loope
rolb
mov
mov
adc
jecxz
int
adc
xor
add
jne
stos
sbb
ret
push
orl
fucomp
pop
pushl
mov
sub
aaa
lea
popf
pop
xchg
xor
and
sub
insl
insl
outsb
mov
xchg
stos
stos
mov
pop
jno
data16
jecxz
push
mov
cmp
int3
mov
in
inc
dec
or
or
inc
mov
mov
out
rolb
dec
rolb
push
into
inc
fldcw
mov
pop
sbb
mov
push
dec
jp
push
cli
add
nop
xchg
sbb
mov
or
jne
and
out
rclb
xor
push
cs
lcall
or
into
pop
ljmp
jge
xchg
pop
sub
int3
clc
movl
imul
push
mov
outsl
lcall
mov
dec
bound
lret
adc
shrl
dec
ja
ja
insb
push
orb
rcll
mov
iret
fnstcw
sbb
jg
pop
xor
push
addl
gs
add
cld
repnz
jmp
xor
adc
xor
leave
jo
js
mov
adc
sbb
adc
movups
cmc
mov
popf
movb
daa
imul
adc
mov
push
push
test
repnz
cwtl
and
sub
jno
fistpl
xor
mov
loopne
mov
xor
add
add
jbe
mov
mov
shr
pop
mov
pusha
pop
outsb
shrb
mov
push
xor
xor
test
fwait
jo
aam
dec
lds
shrb
mov
mov
mov
mov
dec
xorb
jg
insb
in
mov
das
push
icebp
cmp
orb
lahf
fbstp
imul
cmc
cmpsb
mov
aad
fnstsw
xorl
aas
or
sub
cmp
or
aad
mov
and
add
mov
mov
test
addr16
pop
inc
push
sbbb
adc
xchg
adc
roll
loop
test
pop
or
dec
mov
popf
xchg
xor
sbb
mov
test
dec
mov
xor
pop
das
xchg
jnp
pushf
pop
jae
sbbb
sub
pop
frstor
into
lahf
xor
pop
out
test
loope
andl
cmp
pop
jp
inc
pop
imul
pop
in
nop
hlt
stc
sub
and
adc
jne
cs
repz
xor
enter
push
inc
notl
dec
adc
pop
xchg
jbe
adc
xor
fsubs
or
lahf
lds
adc
push
sarb
shrl
fcoml
inc
mov
sub
mov
dec
lds
xlat
in
or
mov
mov
int3
test
dec
jle
adc
mov
xchg
sbb
js
jg
mov
cwtl
shll
jg
xchg
push
insl
jg
daa
push
scas
gs
fnsave
out
add
mov
lock
into
mov
outsb
lods
push
in
cmp
pop
dec
dec
lods
inc
int3
pop
push
pop
adc
hlt
inc
mov
popa
stos
push
andb
in
outsl
subb
mov
xchg
lods
xchg
cli
cltd
mov
js
pop
add
rcll
test
push
clc
fcomp
mov
push
ret
out
in
xchg
push
xor
out
movsb
outsb
adc
loop
mov
cmp
pop
idivb
je
jmp
mov
xor
xchg
pandn
mov
jnp
lahf
fisubs
je
rclb
xor
jb
repz
in
mov
adc
push
pop
das
mov
and
jne
add
xor
ror
xor
push
ds
scas
push
inc
jb
xlat
repz
jge
test
mov
xchg
xor
fcoms
sbb
xor
mov
ja
jp
or
inc
jl
sub
scas
das
daa
in
cmp
lahf
pop
mov
or
out
mov
dec
in
lea
int
sub
lret
add
in
sbb
int
jecxz
dec
jbe,pn
sub
mov
inc
mov
jno
adc
push
sahf
shll
xchg
pop
jp
mov
lea
cmp
mov
jmp
js
shl
outsl
mov
repz
arpl
ja
dec
mov
pop
std
call
mov
in
sbb
imul
mov
xor
subl
pusha
and
fisttpll
pop
mov
lahf
sbb
xchg
mov
daa
push
dec
jnp
and
mov
jo
adc
push
sbb
mov
aad
add
popa
pushf
or
rcrl
and
icebp
mov
sbb
xor
pop
cltd
jp
fadds
arpl
pop
sbb
mov
add
fimuls
in
mov
popf
jno
popf
inc
lods
je
sarl
dec
mov
pop
shr
xlat
int3
test
fsubs
rcrb
hlt
ret
sbbb
add
stos
xchg
mov
scas
mov
cmp
push
out
cmp
insb
add
ss
jl
bound
mov
shr
mov
clc
fsts
scas
and
cmp
jl
inc
xchg
subl
pop
sarb
push
jmp
ds
lcall
sub
ja
andl
popa
int3
cli
jae
adc
repz
pop
inc
jle
dec
test
pop
push
sub
js
in
subl
leave
mov
mov
jno
iret
cmp
sbb
pop
int3
popl
ret
mov
inc
cs
mov
sub
cmp
mov
dec
int3
rcrl
jae
fimuls
popa
push
pusha
adc
dec
mov
xor
add
pusha
and
iret
movsbl
mov
or
iret
leave
lcall
xor
shl
cmp
mov
fs
xchg
sub
leave
add
pusha
fs
popf
dec
add
jmp
jbe
push
dec
add
pop
xchg
xor
cltd
fldenv
test
fst
cli
lds
aam
add
and
pop
jg
shlb
outsl
loop
pop
dec
pop
add
ret
cmp
test
frstor
les
loopne
add
stc
push
loope
push
popf
cmp
cld
cmp
or
add
in
fwait
bound
mov
inc
je
shrl
mov
push
sbbl
testb
mov
mov
cltd
stos
dec
dec
mov
data16
rclb
mov
push
add
in
aam
push
popf
ret
lods
and
dec
adc
scas
shlb
inc
mov
fiadds
cld
into
mov
test
popf
pushl
xchg
mov
mov
mov
or
enter
adc
adc
xchg
stos
jbe
out
negb
ds
call
aas
push
jbe
sbb
add
mov
xor
clc
and
xchg
dec
out
jne
jnp
aaa
lcall
subb
in
shl
aam
sahf
dec
cmpsb
call
mov
inc
mov
dec
sub
dec
lcall
movb
aaa
stos
scas
jmp
lock
adc
mov
xor
add
cmp
or
flds
mov
sub
jb,pt
sbb
sub
aaa
jbe
dec
sti
xlat
xchg
jmp
xlat
lods
in
dec
outsb
cmp
test
inc
pop
mov
js
sub
addl
fldl
xorb
leave
push
pop
xchg
mov
pop
xor
scas
lahf
pushf
mov
loope
popf
mov
repz
movsb
jge
enter
cmp
sti
push
imul
dec
rcll
sahf
mov
cmpsb
sbb
and
cld
into
aad
subb
xchg
dec
pop
ljmp
cmc
mov
into
popf
push
dec
lret
sbbb
pop
outsb
xorl
rorb
loope
mov
loopne
xchg
lock
ss
aad
es
and
rcrb
xorb
aam
fs
fs
mov
loope
xchg
sti
or
inc
jb
xor
iret
cmpb
in
movsb
lods
xchg
in
jle
pop
adc
add
jl
xchg
imul
sub
rclb
pop
jl
xchg
inc
sbb
out
enter
mov
cmc
movsl
push
sbb
leave
pushf
xchg
aad
xor
out
ret
mov
iret
scas
das
mov
es
out
jg
sahf
mov
push
fwait
ret
and
pop
xor
lods
out
mov
add
mov
jne
fstpt
insl
pop
aam
push
aam
arpl
push
dec
lret
dec
pop
mov
sbb
addb
push
shrb
sbb
clc
les
add
fnclex
cs
jge
popf
hlt
dec
push
int3
sub
xor
repz
pop
and
push
pop
dec
into
das
and
pop
sbbb
in
shrl
fisubrs
lea
xor
adc
dec
and
repnz
push
sbb
pop
pop
das
ret
fwait
cld
aad
xchg
mov
fimuls
cmp
pop
mov
pop
call
rcl
insl
lcall
lods
cmp
fstl
mov
or
out
jbe
fs
mov
xchg
add
jg
mov
shll
or
pop
mov
sahf
and
jae
jae
inc
mov
movsb
test
and
jmp
dec
xor
daa
pop
lcall
mov
inc
ret
mov
push
sub
jg,pt
insl
out
jae
rcrl
lcall
daa
out
out
or
xor
sbb
xor
jno
xor
test
aas
and
mov
sbb
enter
adc
adc
rol
loope
movsb
pop
cmp
mov
outsl
aaa
shll
rorb
mov
inc
xor
or
pop
adc
mov
lret
lods
push
in
pop
hlt
insb
push
sub
popa
and
cld
jbe
adc
and
dec
fbld
adc
pop
in
aaa
push
shlb
jo
and
xor
hlt
pushf
lcall
fmul
inc
cs
test
dec
push
sbb
bound
or
enter
out
incl
in
pop
nop
jo
fcompl
cmp
pop
sbb
sub
bound
fisubs
add
xchg
mov
xchg
mov
inc
adc
dec
nop
inc
in
cmc
cld
adcb
jp
bound
and
mov
sbbl
mov
pushf
js
ljmp
inc
push
and
and
enter
mov
pop
lret
call
out
cmpl
lds
and
push
insl
clc
push
adc
sub
inc
push
out
adc
lahf
es
mov
jecxz
adc
orb
adcb
pop
lods
lods
andb
pushf
add
insb
les
push
roll
std
mov
inc
pop
pop
arpl
fistpll
cli
adc
cmp
sahf
loop
mov
jnp
cmp
mov
jnp
push
pop
les
and
test
dec
jo
dec
lods
dec
and
out
es
push
jmp
pop
int
jae
push
mov
jmp
or
ds
sbb
and
test
push
repnz
pop
xor
lahf
adc
mov
lcall
lods
xchg
add
or
push
cmp
icebp
das
inc
dec
push
mov
sbb
out
repnz
loopne
jg
pop
sahf
mov
adc
push
loop
iret
push
sbb
jb
cltd
xor
shrl
jmp
in
fimull
mov
lcall
xor
mull
jne
lods
and
stos
repnz
outsl
cmp
fs
in
sahf
adc
mov
fmull
iret
sbb
dec
adcb
hlt
mov
int3
daa
mov
xchg
repz
aad
sub
mov
push
push
test
leave
testb
or
mov
jmp
notl
mov
xchg
jmp
shll
sub
sub
mov
shrb
dec
xor
popa
pushf
mov
mov
fimull
imul
leave
lahf
addr16
into
dec
out
fwait
bound
cmpsb
inc
cmc
pop
add
lcall
repnz
xor
fisttpl
cmp
pop
out
xorl
outsb
movsl
imul
aad
mov
and
xchg
icebp
pop
test
jae
push
fs
stos
jbe
inc
xchg
dec
sbb
and
in
mov
mov
mov
mov
mov
or
xchg
jge
mov
push
xor
jae
xchg
out
and
stos
sbb
mov
test
or
jl
pop
dec
inc
xchg
mov
dec
sbb
fwait
cmp
std
add
push
rcr
sbb
push
mov
sub
cld
xchg
jecxz
jmp
mov
sub
les
lret
mov
or
call
pusha
ret
xchg
mov
mov
jbe
pop
lret
idivl
xchg
jae
fbstp
or
xchg
das
and
inc
adc
xor
scas
xchg
push
push
adc
inc
mov
add
scas
rcll
inc
ror
repz
out
mov
inc
mov
mov
mov
xlat
shr
cwtl
aam
mov
les
add
popl
jmp
outsb
fsubs
jle
sub
iret
test
pop
pop
sbb
add
sub
cmc
xchg
out
insl
scas
push
scas
sbb
mov
ss
adc
imul
push
jecxz
dec
insl
push
mov
mov
pop
sub
movsb
out
cmpsb
jge
mov
or
enter
cld
testl
pop
or
icebp
push
jno
aam
repz
push
xchg
loop
adc
or
or
divb
movsl
lcall
sbb
and
ljmp
sbb
lock
mov
cltd
int3
or
jge
mov
rolb
ja
sub
nop
pushf
loopne
jnp
idiv
mov
adc
lahf
in
out
das
out
ss
pop
sbb
cmp
test
jl
push
pop
sbb
mov
dec
lods
stc
jno
pop
mov
lret
imul
dec
je
push
negb
inc
or
popl
popa
mov
movsl
repz
test
pop
mov
out
mov
mov
jne
clc
nop
out
mov
add
xchg
insl
adc
or
int
scas
inc
lods
mov
mov
inc
mov
mov
popf
out
in
fs
jge
in
adc
xor
add
jg
in
xchg
or
shll
push
inc
repnz
js
pop
pop
push
dec
jg
cmp
mov
dec
mov
mov
add
lret
and
cltd
push
xchg
stc
sub
adc
fcoms
adc
push
cli
int3
shll
into
mov
sbb
test
push
pop
mov
sahf
mov
mov
je
cmpsl
add
fistpll
sbb
in
cs
in
int3
test
dec
popa
lahf
jae
hlt
popa
out
das
adc
mov
loop
xor
add
movsl
xchg
dec
inc
cmp
xchg
lret
jb
sbb
add
lret
xchg
mov
lahf
mov
cmp
ds
xlat
xchg
shlb
dec
sbb
testl
rclb
out
pop
push
and
mull
sbb
sub
out
mul
add
mov
inc
or
stc
aad
and
adc
mov
out
out
cltd
ja
dec
xchg
jp
push
popa
div
lcall
push
imul
sbb
xlat
adc
sbb
adc
pop
mov
adcb
sti
add
jnp
test
insl
jno
in
dec
mov
sub
lock
int
mov
xlat
cwtl
aam
into
push
add
popf
jmp
dec
push
push
mov
in
sbb
mov
adc
sub
push
sub
pop
mov
xorl
cmp
or
jecxz
mov
push
adcb
ja
xchg
into
push
int
or
pop
aam
sbb
mov
xchg
mov
and
popf
sbb
xchg
pop
jge
inc
jecxz
cltd
mov
pop
xchg
inc
leave
adc
push
pusha
inc
hlt
ja
ds
je
xchg
orb
loopne
lods
scas
lods
cmpsb
leave
gs
mov
outsl
inc
pop
mov
movsb
cwtl
fwait
add
sahf
shrl
cltd
adc
aaa
sub
mov
out
fs
xchg
mov
out
jo
in
andl
lcall
jae
sbb
mov
fisubrl
daa
or
stos
cmpsb
cmp
clc
leave
shll
inc
in
inc
loopne
sbb
inc
insb
cli
out
sub
sub
mov
pop
subb
mov
add
sbb
cs
xchg
jp
shll
jae
cmp
dec
ja
ret
divb
andl
pop
mov
lcall
loopne
arpl
mov
jecxz
out
add
scas
xchg
test
cld
lret
xorb
pusha
and
lock
je
adcl
sbb
aaa
dec
stos
mov
pusha
and
push
shl
fcomip
ja
xchg
and
xchg
test
jge
jne
xchg
mov
into
mov
pop
fists
and
movsb
xchg
addr16
cmp
jecxz
and
popf
fisttpll
repz
jmp
outsb
mov
test
mov
bound
cmp
data16
packsswb
test
aaa
das
aas
jb
mov
mov
lahf
dec
pop
jg
inc
push
negb
mov
push
or
lahf
outsb
pop
inc
shr
sar
std
inc
orl
imul
rol
xor
sub
xchg
jmp
imul
movsb
scas
cmc
cld
imul
add
sub
cmp
clc
lock
rcl
out
or
xchg
enter
test
jbe
jno
fidivl
sbbb
inc
and
aam
cmp
lock
stos
sbb
lcallw
insl
clc
ret
or
ljmp
inc
fists
jmp
dec
in
ds
aam
push
shlb
inc
push
xor
cmp
stc
mov
jb
mov
or
lock
pop
lahf
jl
push
es
imul
inc
pop
jge
cmp
adc
dec
mov
pop
jmp
cmp
fwait
int
loopne
stc
xchg
cld
push
sub
lds
cli
popf
jo
mov
mov
fbstp
cltd
xor
and
pop
adc
cmpsl
loope
cmp
adc
dec
push
sbb
ss
ss
sarb
pusha
stos
push
jno
pop
push
sbb
sub
orb
stos
lcall
scas
mov
loopne
rolb
mov
dec
pop
mov
xchg
fcomip
sar
mov
and
in
or
dec
stos
cli
roll
fwait
adc
fs
xchg
leave
lahf
inc
mov
sbb
out
loopne
mov
push
inc
xor
lret
push
in
lcall
ljmp
data16
testb
dec
and
sbb
lods
xor
inc
xchg
xlat
and
bnd
adc
test
lret
pop
pop
dec
adcb
fstpt
pop
stos
inc
rclb
sub
mov
and
lret
sbb
push
jo
pop
mov
cmc
enter
sub
pop
leave
cli
stos
orl
das
iret
dec
lea
jno
adcl
mov
adc
movsb
cli
mov
cli
jl
cltd
jns
adc
sbb
push
scas
xchg
push
fmuls
rcl
sbb
in
add
lods
xchg
fdivrs
adc
pop
frstor
mov
push
add
mov
lret
rclb
fwait
addr16
add
mov
mov
jbe
out
ja
decb
aaa
out
scas
insl
pop
fldt
jle
push
jg
stos
les
setg
cmpsl
fcoms
jne
jo
mov
iret
stc
dec
pop
sub
add
in
leave
mov
sub
lret
clc
rcr
cmpsl
iret
popa
mov
sub
and
popf
cmp
push
in
push
xchg
sbb
and
cmp
and
dec
mov
adc
shrb
and
mov
addl
cli
add
shrb
pop
jno
addr16
mov
pop
pop
mov
rcl
loopne
cmp
push
push
jl
or
mull
rclb
jne
sub
cmc
scas
notl
hlt
adc
inc
gs
cmc
cmp
ds
mov
dec
jge
lds
lock
sub
mov
imul
xchg
test
jb
pop
testb
aaa
dec
sarl
push
xor
insb
and
arpl
mov
cmc
xor
or
xor
hlt
test
inc
inc
pop
andl
sub
dec
lods
movsl
pop
in
outsb
adc
and
xchg
out
mov
sbb
pop
cltd
outsl
and
flds
jb
xor
cltd
jmp
cmp
clc
sub
mov
xchg
scas
mov
jb
je
enter
lods
cmp
lock
cwtl
xor
sbb
dec
cld
test
xor
lock
push
push
adc
mov
or
fdivl
std
jae
mov
lret
mov
sub
int3
stos
fidivs
sub
and
adc
sahf
push
aad
dec
add
jbe
xor
sbbb
test
mov
dec
sub
xchg
movsl
push
xor
sbb
push
sbb
push
push
add
lock
mov
les
xor
mov
into
pop
stos
sbb
mov
lock
into
pusha
repnz
dec
ss
sub
cmc
pop
mov
cld
mov
jae
sub
sbb
ss
lret
jle
enter
xchg
mulb
int
aas
insb
ss
add
scas
cmp
pusha
sub
jbe
addl
xchg
aam
pop
push
ficoml
sti
shll
call
push
lret
shll
jne
adc
sub
jecxz
js
fists
loop
or
jle
xchg
popf
dec
xchg
test
cmp
rolb
pop
dec
imul
mov
aaa
pop
inc
imul
and
popa
out
push
pop
lret
lds
mov
inc
add
lret
and
repz
or
xchg
subl
xchg
mov
or
sbb
pop
ds
mov
mov
ret
sbb
shrb
repnz
xchg
and
mov
clc
or
mov
xor
pop
int
imulb
clc
dec
mov
dec
divl
jns
mov
sub
adc
addr16
sub
inc
repnz
negl
mov
adc
xchg
push
aas
inc
pop
push
int
popf
push
push
add
push
mov
rclb
bound
or
mov
sub
into
movsb
sbb
and
cmp
rorb
inc
repnz
movsb
dec
testb
lea
leave
mov
mov
leave
movsl
cltd
mov
out
ljmp
or
add
jmp
pop
ss
sub
jmp
inc
push
cltd
cli
lcall
fildl
add
mov
cmp
and
jo
gs
into
in
push
icebp
add
xlat
jns
repz
cmpl
gs
test
push
repz
hlt
adc
jns
push
lcall
inc
cmp
popa
xchg
leave
scas
loopne
add
jmp
inc
pop
dec
or
cmpsl
test
dec
and
outsl
sbb
push
addr16
sub
ja
lret
ds
xchg
enter
adc
cmp
cmc
add
aaa
xor
int
and
push
mov
mov
and
leave
std
fsub
call
repnz
test
mov
inc
mov
pop
shl
incb
inc
iret
inc
fisttpl
imul
and
mov
mov
push
xlat
add
mov
ja
pop
fwait
gs
loop
mov
popf
dec
and
mov
dec
mov
xchg
scas
xchg
into
movsb
xchg
je
dec
push
add
cmp
sbb
pop
loope
push
fnstenv
fdivrl
xchg
xor
aas
in
leave
sbb
dec
pop
rcrl
js
mov
fnsave
push
xor
mov
xor
jb
dec
inc
pop
xor
sub
mov
sahf
scas
push
lea
icebp
xchg
jle
mov
mov
in
xchg
xor
mov
xchg
sbb
imul
and
or
pop
xchg
or
jo
sbb
movsl
cmp
mov
stc
test
rcll
stos
and
cld
pop
arpl
gs
fcompl
fs
pop
mov
into
outsb
jmp
stos
outsl
mov
stos
add
add
cmp
sub
and
pushf
pushf
hlt
lret
or
sbb
pop
mov
mov
inc
ja
pop
jne
ret
pusha
fists
xchg
jmp
into
adc
sub
add
lcall
push
mov
mov
out
push
push
in
add
cmpb
ret
and
outsb
inc
aad
xchg
int
dec
inc
in
cmp
cmpsl
insl
mov
cld
imul
test
inc
repz
sub
movsl
data16
sahf
and
cmpxchg
orb
mov
mov
dec
stc
and
mov
sbb
add
dec
jmp
sahf
or
xchg
ret
add
imul
shl
cmp
cs
ret
xlat
outsb
sti
push
test
jg
adc
incb
int3
mov
or
iret
adc
dec
add
dec
mov
leave
cmc
and
mov
int3
clc
int
subl
or
push
dec
lock
lcall
push
lcall
ja
push
sahf
mov
inc
loope
lock
xchg
je
pop
sbb
add
in
imul
push
out
ss
mov
scas
int
ja
call
int
les
dec
inc
fdivr
cmpsl
adc
mov
gs
sub
movsl
je
jne
pop
xchg
mov
pop
cmpsl
lcall
jmp
lahf
sub
ljmp
in
enter
push
std
mov
lret
lcall
add
push
and
fldenv
dec
insl
in
lcall
cmp
and
incl
mov
adc
dec
roll
into
mov
sub
inc
icebp
jecxz
ss
cmp
push
aaa
dec
ljmp
add
jno
out
add
adc
xchg
sbb
jnp
mov
xlat
sub
outsl
jbe
mov
mov
clc
popa
lcall
and
jmp
adc
dec
jb
repz
push
inc
sbb
sbb
les
test
popa
lret
push
cmp
cmp
sbb
and
int3
jne
jmp
jae
nop
mov
or
popf
cmpss
xchg
popa
fsub
es
shlb
sub
jne
jb
pop
imul
pop
cmpsl
cmp
mov
mov
mov
mov
popf
inc
xor
icebp
xorl
shl
push
add
outsl
or
xor
ficomps
add
imul
push
and
cs
or
fwait
inc
insb
inc
bt
dec
les
mov
iret
cmp
int3
mov
les
test
or
movsl
imul
xor
fbld
jnp
adc
stc
mov
fstps
sub
mov
or
fimuls
xchg
or
add
in
push
repz
leave
sti
xchg
pop
sbb
ljmp
aam
add
jne
dec
mov
in
or
loop
fldl
push
dec
xor
stos
jbe
test
fdiv
fsubl
loopne
cmpsl
xlat
adc
push
adc
dec
in
in
cmp
xchg
lods
mov
sarb
hlt
jp
mov
lock
stos
push
mov
xchg
sub
loop
leave
pop
pushf
sahf
rcl
push
leave
sahf
dec
ja
in
mov
pop
jne
and
dec
add
lea
adc
dec
sbb
adc
sub
lds
sbb
sub
and
xor
shrd
push
push
repnz
and
loope
mov
clc
cmpsb
cmpsl
test
adcl
sbb
sub
call
imul
push
test
call
jbe
and
shll
rolb
mov
add
clc
lock
daa
jl
ret
inc
xor
xchg
stos
cmp
test
add
inc
mov
push
adc
mov
iret
pop
in
repz
xchg
sarl
adc
outsl
shl
fmull
pop
decl
ficompl
dec
repz
xchg
xor
cmp
das
jl
inc
jne
shll
cs
mov
push
dec
lods
and
cwtl
pushf
sbb
jbe
xchg
xchg
ret
clc
rorl
xchg
lcall
and
aas
push
dec
push
push
inc
mov
into
out
imul
lea
fnop
xorb
das
push
push
stc
mov
lret
out
add
add
in
mov
ss
movsl
ss
stos
jb
adc
cmp
loopne
jle
jecxz
ja
mov
jmp
mov
insb
jnp
mov
mov
imul
add
jne
mov
cmp
sbb
ds
cmp
in
sar
sbb
jns
or
cmp
push
call
loopne
or
leave
xor
dec
xchg
dec
inc
mov
shl
lahf
push
push
dec
addr16
test
cli
cs
cmp
div
fstpl
into
push
ret
cmp
movsl
scas
out
cmp
rcrb
xchg
je
pusha
outsl
adc
aas
jl
cmpsl
mov
cmpsb
or
in
pop
and
icebp
jb
add
adcb
leave
mov
shlb
cmp
movsl
mov
in
dec
pop
enter
sub
add
clc
mov
ret
sahf
jmp
inc
or
inc
testl
mov
mov
pop
aas
icebp
pop
aaa
test
cltd
or
sub
mov
ds
lock
test
sub
mov
movsl
fs
testb
add
xor
mov
imul
int3
mov
mov
pop
movsb
xchg
jo
jecxz
jo
fwait
push
push
xchg
out
dec
xchg
mov
aam
adc
int
adc
lea
daa
xchg
sbb
and
loope
jns
fdivs
imul
mov
sub
dec
push
addl
inc
testl
roll
xchg
rcrl
xor
data16
push
out
insb
outsl
clc
shr
sbbb
adc
repz
push
jg
enter
xor
sbb
gs
pop
xchg
mov
push
rep
sbb
push
adc
mov
jnp
xchg
std
cs
pop
pop
scas
inc
lahf
mov
inc
outsb
leave
sub
dec
sbb
lock
push
call
sbb
in
cmc
aaa
dec
in
jbe
movsb
shrb
test
add
jg
dec
mov
sub
aam
js
jecxz
add
ret
add
dec
sub
inc
xor
adc
mov
insl
pop
cmp
mov
sub
mov
sbb
jle
cld
mov
adc
mov
mov
add
outsb
movaps
stc
and
fdiv
inc
test
adc
or
and
jo
push
pop
fisubrs
movsb
stc
xchg
xchg
pop
mov
insb
xorb
icebp
add
xor
dec
add
xchg
pop
push
ds
jp
sbb
cmp
or
sti
fs
inc
sub
and
into
pop
pusha
dec
cli
inc
dec
push
cmp
push
ljmp
mov
or
bound
pop
mov
jmp
mov
dec
inc
lahf
add
in
cld
aaa
cmp
arpl
orb
mov
pop
aas
and
and
cmp
sub
mov
xor
dec
dec
and
addr16
lea
stc
scas
mov
hlt
fidivl
lods
or
sub
dec
add
or
les
ret
data16
or
adc
in
inc
fisubrl
outsl
test
jno
xchg
dec
dec
push
xor
lock
mov
aam
insb
aad
jle
mov
inc
out
add
inc
mov
jp
jle
push
dec
pop
shrl
mov
pop
mov
sbb
std
mov
aaa
ss
mov
shl
sbb
pop
xchg
mov
pushf
and
mov
scas
mov
mov
cmc
mov
outsb
jl
jmp
lods
push
lds
fcom
push
in
mov
cs
push
inc
movsl
movsb
mov
adc
fcoml
jbe
add
xchg
and
pop
outsl
out
pop
dec
mov
or
xor
dec
int3
mov
adc
sbb
out
mov
inc
sbb
loop
pop
mov
sbb
bound
popf
popa
frstor
adc
rcrl
movsb
in
jp
dec
subl
pushf
mov
aam
xor
sub
xchg
into
push
fsubs
jno
cs
out
ficompl
mov
mov
nop
xchg
sbb
inc
rcrb
fmull
inc
cmpb
sub
jne
cmp
fisttpl
inc
jne
dec
shlb
xor
xchg
fcmovne
or
imul
mov
mov
push
mov
push
insl
push
clc
cmp
inc
cmpsl
mov
loopne
loop
test
jo
stos
orb
cli
dec
jp
fidivl
jp
jl
rclb
rcl
pop
push
mov
sub
and
inc
or
in
fcom
out
dec
xor
repnz
and
xor
aas
daa
dec
push
push
cli
dec
sbb
xchg
ret
mov
shll
jne
movsb
stos
jmp
repnz
dec
sub
dec
xchg
iret
imul
push
out
sub
push
dec
add
shrl
jae
jp
mov
push
in
mov
pop
xor
fldcw
cmp
aad
jo
lcall
les
test
sub
data16
and
or
mov
test
dec
xlat
jo
pop
ror
dec
pop
add
ret
cli
pop
ficomps
cmpsl
add
sbb
dec
decl
xchg
xor
or
or
loop
mov
lods
int3
test
lods
pop
push
shrb
mov
adc
sbb
scas
aas
fstpl
pop
xchg
pop
nop
test
aam
jb
ror
push
mov
jp
xlat
xor
test
push
pop
inc
mov
into
repz
test
xor
fsts
decl
movsl
imul
cltd
mov
dec
pop
das
push
lret
setg
add
add
pop
lcall
jmp
out
adc
dec
xor
insb
lock
cmc
fistpll
rolb
mov
mov
repz
dec
in
bound
add
loopne
xor
repz
hlt
xchg
rcr
pop
mov
pushf
pop
inc
arpl
push
fidivrl
add
mov
fwait
dec
not
fstl
add
into
xchg
int
insl
std
inc
std
adc
push
aas
in
lahf
and
push
test
ds
mov
mov
lret
mov
rcl
mov
xchg
xchg
rcrl
aas
mov
xchg
into
xor
xor
push
xor
and
call
lahf
leave
lcall
sbb
push
scas
or
lret
sub
shlb
or
dec
xor
clc
lahf
adc
mov
lahf
dec
push
pushf
je
push
mov
push
adc
enter
xchg
pop
push
outsl
mov
xor
movlps
scas
cmp
roll
xchg
xor
leave
or
nop
and
xor
or
mov
and
sbb
add
scas
lahf
cmp
out
jb
mov
or
aad
pop
in
jnp
adc
cmp
fmuls
xchg
test
data16
pop
jns
push
xlat
and
jecxz
aas
fildll
xor
xchg
jge
and
pop
movsb
mov
and
mov
movsb
sub
das
sahf
imul
sbb
scas
sub
cmp
jne
xchg
adc
cmp
inc
and
inc
scas
imul
jg
and
mov
pop
pop
lock
push
pop
push
sbb
push
pop
mov
mov
add
jge
imul
pop
pop
lods
add
mov
dec
push
push
xchg
not
loope
sub
adc
push
push
pop
aad
push
pusha
push
add
int
fcomp
fcoml
jg
pop
daa
pop
push
test
xor
insl
or
loope
add
adc
cli
jae
mov
xchg
ljmp
jle
dec
hlt
cmp
lods
xlat
xor
out
push
pop
or
sbb
outsl
dec
dec
adc
or
cs
lret
out
pop
aas
mov
mov
ja
jo
pop
cmp
inc
cwtl
fcoml
test
xor
jno
mov
add
push
stc
fadds
jmp
dec
cmp
in
das
dec
pop
out
ds
ljmp
dec
loopne
xchg
jecxz
mov
push
cmpsb
push
or
out
out
daa
xor
nop
iret
in
into
sti
aad
pop
and
filds
mov
cwtl
sub
mov
or
push
cwtl
cmp
mov
cmp
je
fwait
cwtl
jnp
rcr
pop
loop
repz
inc
popa
or
lods
mov
movsb
xchg
sti
inc
fcomps
push
ljmp
cmp
inc
mov
fstpt
insl
mov
icebp
arpl
daa
lret
jl
adc
mov
add
xor
dec
lahf
js
popf
inc
inc
ret
add
dec
sbb
and
add
std
and
xchg
test
notb
lods
fs
inc
jae
push
mov
movsl
test
ljmp
xchg
in
out
sub
sbb
sub
jmp
jb
bound
ja
cltd
xor
stos
int3
cmp
in
fcmove
and
add
mul
aas
jns
fnsave
out
inc
xchg
xlat
jge
outsl
aaa
dec
std
sbb
ljmp
sub
jge
sbb
jecxz
fcmovnu
pop
data16
pop
aam
stos
stc
mov
stc
dec
mov
mov
addl
ror
test
jge
popf
lcall
aas
mov
push
stos
jle
daa
lods
sbb
das
les
xchg
mov
push
les
jnp
xchg
cmpsl
in
jmp
div
jl
jne
mov
jmp
andb
rorb
hlt
cmp
adc
pusha
fistps
or
lret
sbb
mov
cmp
or
cmp
jecxz
nop
fwait
pop
pop
repnz
push
cmpsl
or
sbb
xchg
cmp
mov
hlt
add
leave
and
jl
cmp
mov
pop
push
fstl
cmp
dec
push
and
xchg
dec
jae
es
lods
inc
xlat
mov
icebp
fcompl
inc
mov
hlt
out
testb
ucomiss
adc
int
add
pop
push
adc
sarb
sub
jbe
daa
xor
xchg
aaa
xor
push
repnz
sub
cmpsb
sbb
jle
add
clc
repnz
imull
jmp
insl
adc
pop
ja
pop
sbbb
fwait
and
dec
lds
dec
pop
mov
push
sub
add
or
js
std
dec
ds
out
test
fstp
pop
mov
or
imul
mov
jmp
mov
sub
push
dec
jnp
dec
jmp
xchg
mov
je
jae
pop
js
fdivr
mov
out
push
mov
push
cltd
aad
mov
hlt
jg
dec
neg
mov
call
addr16
das
sub
shl
sbb
pop
inc
add
xor
ds
xlat
sub
je
mov
les
test
fcoms
dec
inc
sub
mov
mov
lret
mov
cwtl
push
iret
test
cmpsb
or
and
jns
lock
insl
lret
adc
xlat
mov
jecxz
add
xlat
popf
in
xchg
jo
xchg
xchg
inc
fisubrl
mov
mov
push
inc
mov
jno
scas
test
xlat
mov
xchg
add
sbb
loope
int3
sbb
push
mov
or
arpl
in
cmp
add
inc
pop
jno
mov
je
idiv
cld
adc
test
sub
addb
dec
loopne
mov
out
mov
addr16
fildll
leave
pop
pop
sub
mov
xchg
add
lret
and
je
mov
jmp
in
ficompl
imul
test
inc
jp
fsubrp
insb
sub
inc
mov
mov
in
pop
jnp
repz
data16
dec
repnz
pop
mov
test
cmp
mov
frstor
sub
pushf
jns
inc
dec
scas
in
jecxz
ret
cmp
inc
or
push
or
xor
jmp
xchg
push
jmp
mov
mov
cld
sbb
lcall
cli
pusha
data16
mov
adc
les
adc
jge
aam
mov
movsl
dec
aaa
pop
xor
adc
xlat
pop
lahf
sub
je
pop
es
popf
push
mov
dec
js
stc
dec
mov
jle
mov
rcrl
sbb
xchg
cld
adc
gs
fdivrp
adc
sbb
push
push
mov
adc
lret
push
ljmp
iret
cli
mov
ja
sbb
loop
hlt
outsb
push
shll
and
xchg
or
cmp
out
popa
mov
cmp
rclb
pop
add
xchg
test
std
shl
lods
pusha
sbb
cmp
pop
push
imul
fistl
mov
inc
fidivrs
mov
cs
push
xor
sbb
push
aas
mov
dec
xor
cmp
repnz
not
cmp
xor
cvtps2pi
adc
push
push
mov
or
mov
jno
psrld
xor
pop
cmp
mov
cmpsl
mov
xor
mov
int
mov
mov
imul
cmpsl
fiaddl
test
xorl
push
push
call
lock
push
scas
xchg
rorl
mov
cwtl
ret
scas
arpl
out
stos
mov
repnz
ss
and
xor
xchg
inc
cwtl
cwtl
sub
ljmp
cmp
mov
imul
or
lock
adc
jb
pop
sahf
or
push
test
jg
lcall
cmpsl
pushf
sahf
stc
fwait
mov
sbb
imul
js
add
push
add
mov
repz
jno
idivl
mov
and
xor
or
imul
fbstp
dec
and
xchg
mov
testb
out
cli
dec
push
pop
hlt
xor
inc
sarl
stos
in
insl
mov
js
notb
or
aam
xor
sbb
sub
mov
pop
punpckhbw
ja
sub
jp
das
and
shr
mov
ss
sub
xor
hlt
push
les
std
jg
dec
mov
repz
sbb
jmp
push
mov
or
xchg
scas
push
pop
jle
inc
mov
jp
ljmp
pusha
push
rcrb
iret
sub
mov
add
dec
icebp
push
xor
fcmovbe
sti
pop
pop
fnstcw
mov
add
xchg
repz
mov
adc
sbb
mov
popf
test
push
jg
adc
movsb
fwait
gs
in
adc
insb
inc
pop
enter
and
adc
flds
lea
std
add
mov
pushf
dec
int3
xchg
in
mov
add
mov
ss
sbb
or
inc
mov
inc
bound
adc
xchg
scas
aad
inc
insb
jl
fdivl
inc
shrb
xor
imul
push
cmpsl
cmc
push
inc
mov
xchg
mov
sub
in
dec
mov
sub
sbb
push
add
xchg
pop
mov
sarb
jae
pop
mov
ret
scas
aaa
and
mov
jns
add
stc
sub
sbb
daa
int
repnz
xor
int3
or
xor
lds
in
push
imul
std
rcll
popa
sub
xorl
cmp
xor
repz
lock
in
push
mov
cmp
xlat
sahf
into
leave
pop
jnp
mov
outsl
add
aas
mov
mov
stc
lcall
dec
test
sbb
mov
add
int3
cmp
mov
push
pop
pop
pop
je
int
nop
out
xchg
mov
and
mov
iret
cmp
scas
or
rclb
mov
ds
and
pop
lods
insb
mov
imul
add
xchg
leave
in
pop
jo
jne
test
pop
push
mov
mov
jbe
ret
rcrl
xor
mov
jae
xor
adc
jnp
mov
adc
sahf
or
mov
adc
add
and
or
mov
out
leave
xchg
lahf
movsb
sub
ds
addl
jo
negl
sbb
out
pop
movsb
cmp
loopne
insb
sbb
das
ret
cmp
adc
mov
dec
outsl
and
push
scas
cmp
and
arpl
lahf
inc
lock
daa
xchg
cmpb
mov
rcrl
pop
xchg
movsl
aad
fs
pop
out
adc
test
fisubrl
ljmp
mov
xchg
sahf
lods
gs
lock
sbb
xor
out
xor
orl
in
pop
add
adc
subl
cmpb
xor
dec
pop
pop
sbb
not
roll
imul
push
data16
mov
lret
mov
sbb
insb
inc
stos
sub
pop
push
outsl
sahf
fisttpll
in
into
aam
inc
stc
sahf
and
pop
scas
in
int3
xorl
mov
add
ja
mov
or
jecxz
xchg
add
push
push
cmp
mov
inc
scas
insb
jae
lea
sbb
pushf
inc
push
call
adc
push
loopne
sbb
mov
fidivrs
test
stos
mov
stos
je
add
and
and
inc
pop
cltd
fisttpll
stos
jns
stos
add
sub
lods
stc
dec
jno
lahf
pop
mov
push
dec
xchg
cmp
cmp
out
sub
mov
out
add
les
insb
mov
xchg
daa
and
fisttpll
mov
dec
mov
xorl
mov
xor
lds
adc
sti
jg
lods
lock
add
mov
jge
dec
data16
dec
insb
int3
cwtl
dec
jecxz
xor
inc
ret
std
mov
sbb
jo
out
or
inc
std
popf
into
adc
cld
fadd
xchg
cld
inc
push
sbb
sarl
mov
mov
jno
insl
mov
cmp
iret
sbb
leave
insl
push
or
arpl
stc
xor
insl
sahf
repz
cwtl
iret
and
mov
mov
ret
movsl
cltd
push
dec
out
bound
mov
aad
fmuls
push
mov
out
cmp
push
inc
adc
movb
stos
or
aas
mov
testb
xlat
sbb
cmp
sbb
cs
xchg
and
mov
dec
xchg
leave
pop
fstl
in
mov
enter
cmp
loope
test
sub
sub
mov
test
xor
pop
pop
and
data16
imul
xor
and
dec
xchg
inc
test
lea
movsb
inc
cltd
mov
call
cwtl
inc
sbb
mov
xchg
mov
sub
subb
sub
mov
lret
cmp
mov
aaa
inc
aaa
xchg
lock
dec
xchg
shrb
nop
sahf
mov
inc
pop
jbe
daa
in
les
mov
adc
divl
scas
mov
outsl
test
push
pop
iret
or
loopne
gs
inc
adc
fsubl
add
mov
int
lahf
addb
cli
in
fld
jno
xchg
mov
mov
cmp
or
pop
js
xchg
add
cs
ljmp
push
stc
cld
push
cmpsl
xchg
lock
push
nop
test
pushf
inc
xchg
es
inc
out
in
pop
lret
sbbb
loopne
push
les
loopne
fcmovnbe
test
mov
jl
add
mov
mov
outsb
ljmp
jle
test
nop
mov
testl
and
rorb
cmp
jns
test
adc
int3
cwtl
add
sbb
xor
sbbb
jmp
arpl
pop
outsl
stos
out
jmp
popf
data16
jno
mov
mov
push
out
sub
fisttps
movsb
in
addl
iret
dec
inc
mov
dec
push
faddl
stc
cmp
addr16
mov
sbb
negl
loopne
jb
shl
cli
sub
xchg
out
pop
ds
sub
mov
push
or
mov
cmp
xchg
andb
adc
push
and
xor
dec
popa
nop
push
add
jl
loop
and
les
push
cmp
inc
mov
pushf
fisttpll
not
dec
andl
sbb
fcmovne
mov
std
mov
sbb
call
sbb
not
sub
xor
test
rcrl
lds
mov
lea
data16
push
into
aas
mov
gs
inc
or
mov
dec
add
movsb
xorl
sbb
dec
cmc
mov
inc
xchg
mov
pop
mov
loop
pop
jg
ret
cltd
pop
fsubr
nop
or
pop
aas
outsb
push
mov
emms
mov
inc
int3
push
sbb
rolb
idivb
push
or
rclb
xchg
loop
push
ret
fwait
pop
add
fisubrs
xchg
adc
and
scas
cmp
rcr
iret
std
in
push
fwait
xor
add
rorb
aad
inc
mov
jg
xchg
mov
xchg
xor
shr
mov
adc
sub
sahf
and
mov
sub
es
cmp
je
lret
pop
sbb
jnp
cmpsb
and
ljmp
stos
in
sti
jbe
mov
mov
add
push
and
int
call
cmp
call
pop
imull
faddl
push
jg
sti
mov
or
fxch
mov
push
outsl
lret
clc
xchg
push
stos
pop
cmpl
pop
sbb
pushf
push
lock
test
std
pop
aad
loopne
lods
fisttpll
mov
cmp
mov
add
je
or
rorl
icebp
sti
sub
xchg
inc
repnz
add
pop
insl
inc
popa
aaa
movsl
icebp
sbb
add
gs
push
adc
out
jmp
pop
add
icebp
sbb
ret
sbb
ret
repnz
es
cmpsl
add
jbe
mov
cld
out
out
bound
sub
stc
lea
pop
test
cmp
inc
ss
in
xchg
mov
dec
aam
lcall
add
fidivs
jmp
inc
xor
repz
sbb
pusha
xor
out
push
xchg
xor
dec
sbb
outsl
jbe
or
cmp
sbb
jno
lods
or
mov
mov
jg
mov
inc
xor
or
scas
stos
sbb
pop
push
faddl
cmp
aad
ljmp
xor
into
adc
jb
add
pop
outsl
out
jmp
mov
mov
jo
cmp
fistps
push
add
xor
ret
adc
cmc
aam
adc
ss
cmc
fwait
sbb
cmp
out
jp
mov
fsubl
dec
in
ds
push
mov
addl
sarl
pop
clc
outsl
shrb
jge
add
lret
enter
fists
push
cmp
cmp
jb
sub
push
lock
aas
rcrb
pop
ficoml
lock
cmp
sbb
inc
add
cmp
mov
xchg
adc
loop
push
stos
hlt
mov
mov
rorl
push
add
adc
inc
mov
repnz
rorb
mov
lock
xchg
inc
int
add
xor
std
aam
cmp
push
je
pushf
mov
fsubr
xchg
push
dec
jmp
daa
and
push
data16
fsubs
inc
les
arpl
xchg
stos
xchg
enter
sub
movb
mov
fnsave
jecxz
fldenv
stos
mov
lods
test
cltd
push
adc
dec
pop
pop
xchg
out
and
jae
cmpsb
inc
ja
test
sub
popa
fstl
int3
and
aad
pop
int3
jg
mov
cmpsb
push
cmp
out
movl
mov
clc
test
lret
pop
out
mov
mov
sbb
cld
loope
lea
test
inc
lcall
int3
and
iret
dec
sarb
incb
cmc
hlt
sbb
in
adc
das
stos
int3
fwait
mov
push
outsb
sbb
movb
shll
or
sub
rcl
sti
lods
pop
inc
jg
adc
xor
loopne
jnp
jno
test
ljmp
aas
dec
ds
lahf
xchg
cmp
pop
sub
pushf
movsb
jmp
fsubs
in
jle
stos
mov
iret
add
push
shlb
adc
dec
insb
jns
xchg
aas
xchg
jecxz
push
adc
pop
adc
mov
insb
lds
fmul
or
jmp
lea
jo
in
sbb
icebp
test
lods
mov
cmp
loope
jnp
inc
add
xchg
fnstcw
test
xor
pop
sarl
gs
jmp
adc
xchg
ret
or
xor
repnz
sbb
mov
add
data16
flds
lahf
sbbb
pop
incb
adc
rcrb
jne
xchg
pop
jmp
xlat
sub
dec
aad
sbb
in
int
cmp
fwait
rep
outsb
cmp
sub
cwtl
lods
testl
out
stos
mov
jns
sbb
stos
jb
xor
mov
push
imul
adc
xchg
inc
xor
lock
push
shlb
cwtl
clc
sub
das
outsb
shrl
aas
mov
dec
inc
test
sub
push
rorl
and
out
pop
out
fstpt
and
icebp
test
adc
pusha
dec
lods
cmp
dec
sbb
pop
mov
sbb
jg
mov
je
sahf
sbb
int
sbb
mov
insl
adc
lods
dec
insb
in
jecxz
mov
stos
cmpsl
out
ss
inc
test
test
xor
sahf
fisttps
sub
add
fbld
je
xchg
dec
push
cmp
inc
ljmp
cs
int
adc
add
lret
inc
packssdw
cmp
movsb
push
iret
rsqrtps
mov
aad
pop
sub
inc
sbb
ret
xchg
mov
mov
sbb
jno
pushf
jle
and
adc
adc
adc
jo
in
pop
gs
outsb
add
jle
aad
or
add
adc
leave
jo
fs
sbb
aas
cli
mov
mov
fcomi
cltd
into
std
cltd
sti
mov
mov
cmpsl
adc
push
ret
jg
mov
push
dec
test
fucomi
imul
push
push
xor
sbb
inc
sbb
or
add
cmpsb
iret
cmp
jnp
subb
xchg
loop
fsubs
inc
sub
jge
and
jp
rclb
cli
mov
add
cmp
mov
imul
hlt
sub
es
xchg
rcrl
loop
adc
pop
push
cmp
out
les
fs
jne
iret
jmp
lock
test
xor
xor
aaa
loop
jne
aaa
lock
sub
pop
add
mov
push
pop
mov
xchg
add
jle
jo
jmp
or
mov
sub
add
je
imul
pushf
jno
ljmp
mov
stos
xchg
inc
cmpsl
push
cmpsl
sbb
imul
arpl
lea
sbb
mov
shrl
out
dec
dec
xor
nop
jg
dec
pop
mov
sbbl
sub
xor
into
xchg
jb
push
es
frstor
and
stc
rorb
stos
bound
aad
pop
jo
sbb
scas
sbb
cwtl
inc
sub
out
pop
iret
xchg
mov
push
addb
mov
ret
push
jne
hlt
cmp
outsl
repz
cmp
test
sub
lret
adc
dec
xchg
mov
xor
sbb
lcall
mov
repz
dec
aad
xor
stos
inc
mov
pushf
pop
sub
and
pusha
mov
enter
sbb
std
xchg
loop
ljmp
mov
cmp
aaa
daa
jmp
pop
push
push
inc
in
inc
inc
loop
pop
sbb
xor
add
or
lods
xor
and
xor
inc
cmp
fdivl
and
out
dec
adc
jae
sti
sahf
loope
xchg
inc
jge
ror
ficomps
xor
bound
enter
lods
stos
push
xor
ja
xor
fsubl
insb
cmpsl
xor
std
sbb
dec
in
pusha
mov
adc
sub
cmp
test
and
outsb
pop
xchg
pop
fdivrs
lahf
xor
decb
push
adcb
out
fs
mov
fwait
mov
leave
cmp
popl
das
scas
call
pusha
cmpsl
cld
mov
leave
mov
xor
scas
mov
mov
scas
je
sub
addl
mov
jmp
pop
xchg
or
xor
push
ja
adc
cltd
fs
add
jmp
popf
pop
sbb
lods
jnp
inc
sarl
add
add
adc
mov
sbb
push
xchg
in
fwait
mov
inc
test
xchg
sti
sub
xchg
mov
push
cli
orl
pop
mov
mov
cmp
addr16
sbb
cld
or
daa
mov
addr16
fwait
jae
jno
lock
and
push
adc
dec
sub
pushf
loopne
jecxz
ljmp
dec
xor
pop
stc
or
xchg
pop
xlat
mov
lock
xchg
scas
adc
test
sub
stos
mov
xor
xor
pushf
and
fldl
mov
inc
jmp
out
out
inc
cwtl
fnstsw
test
xor
mov
in
pop
adc
cli
or
aaa
jnp
loop
and
sti
mov
fistps
jns
cli
jmp
shll
in
fcmovb
test
mov
adcl
flds
pop
xchg
cs
arpl
mov
adc
clc
mov
hlt
imul
dec
mov
and
sbb
sbb
ljmp
sub
adc
pop
cmp
mov
shrb
pop
add
popl
sbbb
test
outsb
xchg
and
pop
dec
or
rcrl
in
or
xchg
add
stos
xor
rcrb
fcomps
out
xchg
test
fsts
iret
jno
lcall
mov
pop
or
lret
fidivs
jbe
lods
jns
fwait
mov
cs
decl
test
cmp
stos
push
clc
pushf
push
ret
mov
cli
sub
insb
fwait
add
ja
pause
outsb
arpl
mov
or
jo
push
push
or
aaa
fsubl
stc
push
lods
shr
outsb
sbb
and
outsb
mov
and
mov
pop
imull
sbb
inc
test
sbb
mov
push
aas
push
sub
push
loop
xchg
in
sub
jl
mov
stos
add
out
mov
mov
ficomps
or
fdivrs
push
test
mov
int
idivl
sysenter
std
mov
fadd
sbb
daa
aad
icebp
add
or
int3
mov
fcomps
lcall
movsb
scas
sub
mov
fucomp
pop
rolb
js
cltd
mov
adc
sub
int
adc
data16
jno
add
push
into
jmp
mov
test
adc
fldcw
inc
scas
je
jne
cld
je
idivl
push
arpl
stos
add
xor
dec
jg
lds
pop
call
stos
cld
bound
mov
rorl
aad
add
lahf
cmpsb
jle
and
sub
inc
jmp
push
adc
std
sbb
xor
pusha
push
mov
sbb
rorl
in
mov
cmpsl
sti
push
and
mov
jb
loope
and
ljmp
in
xchg
push
sbb
int3
dec
ret
jecxz
sbb
xor
dec
int3
and
inc
dec
or
dec
or
int3
mov
imull
xchg
subl
lods
mov
jns
cmc
nop
sbb
mov
sti
stos
addb
mov
cmp
cmpl
sbb
lahf
gs
inc
nopl
out
or
push
or
mov
mov
jae
cwtl
push
loopne
sarb
xor
pusha
roll
and
cmp
xchg
gs
mov
loope
jmp
fwait
adc
push
shlb
add
mov
lea
xor
je
ds
lahf
aad
bound
and
icebp
icebp
repz
adc
jmp
sbb
adcl
xchg
arpl
push
cmpl
popa
sbb
add
push
mov
int
pop
jbe
dec
dec
bnd
fdiv
xchg
mov
ljmp
pop
out
sub
mov
dec
dec
test
cli
imul
cmpb
mov
mov
shl
and
xor
mov
inc
sub
push
mov
and
rcrb
xorb
das
lcall
inc
les
inc
ret
imul
loopne
scas
pop
ljmp
lahf
cmovbe
push
mov
add
outsl
jge
pop
cmpsb
mov
add
ljmp
push
jge
dec
decl
stos
sti
mov
cli
sbb
adc
cmpsl
loopne
loop
xor
dec
lea
pop
test
lahf
push
add
or
cmp
mov
jae
test
aaa
dec
add
cld
mov
or
ds
aaa
push
pop
jle
int
jecxz
bound
scas
xchg
int
pop
mov
out
out
adcb
xchg
mov
loopne
mov
xchg
stos
fs
in
adc
mov
xchg
sbb
adcb
daa
mov
adc
insl
rcrb
nop
ss
repnz
js
or
lods
jle
mov
mov
mov
mov
mov
popa
cmp
push
scas
ja
cmp
xchg
mov
pop
inc
dec
sbb
xor
mov
frstpm(287
ds
in
cmp
push
test
dec
test
mov
jg
in
sub
dec
mov
sbb
sbb
inc
adcl
shr
pop
and
fistps
cmp
leave
inc
adc
xchg
inc
sub
in
push
testb
adc
jmp
je
xor
jne
outsb
jp
vaddpd
and
int3
cmp
inc
push
out
aam
insb
xchg
stos
fimull
imul
and
es
pop
jg
jp
int
sbb
mov
cmpsb
test
add
test
add
push
push
popf
stos
or
pusha
adc
in
sub
push
divl
lret
sahf
cmp
adc
pop
jne
push
xor
outsb
fiaddl
pop
mov
jne
cmc
icebp
xchg
xlat
movsb
pop
cmp
jmp
addb
add
mov
xor
stc
mov
xor
dec
dec
push
aam
push
add
pushf
movsl
filds
push
div
test
fst
imul
jecxz
inc
leave
push
adc
mov
sub
adc
and
mov
cwtl
sub
mov
push
std
loopne
push
add
fcomps
xchg
xor
mov
aad
imul
pop
jp
adc
push
push
mov
leave
call
push
aam
ja
mov
fsubrl
out
xchg
mov
mov
jmp
ss
inc
out
insb
adc
adc
es
add
jns
loope
cwtl
cmp
push
jp
cld
adc
mov
mov
fstps
ret
pop
mov
and
filds
scas
mov
ds
jmp
jbe
add
popf
pop
push
or
adc
add
fidivrl
jmp
mov
and
pop
jecxz
nop
jg
ss
mov
mov
jmp
in
sbb
movsb
decl
sbb
test
sbb
sbb
loopne
ljmp
lock
jg
adc
cmpsl
jl
scas
loope
cmp
and
clc
aaa
movsl
dec
jne
xchg
ficompl
jns
xor
stos
xchg
js
pop
es
dec
fs
insb
fists
scas
or
add
dec
cmp
xor
jnp
dec
inc
cwtl
push
test
push
movsl
lock
push
test
shrb
pop
mov
orb
mov
out
sbb
cld
pop
arpl
fnsave
adc
pop
lret
dec
and
lret
stos
iret
cmpsl
dec
mov
lds
cmp
jge
fidivrl
cmc
lods
and
jecxz
mov
setl
push
sbb
fstl
add
inc
dec
in
fcmovnbe
xchg
jno
jnp
push
test
lods
adc
push
fildl
dec
sti
cmp
lock
dec
js
add
adc
std
cmp
mov
inc
pop
and
call
push
sub
adc
arpl
in
mov
push
iret
fstpl
mov
xor
inc
lret
ss
int
ja
fwait
sysenter
adc
jl
cs
cmpsl
imul
addr16
rorb
jno
fdivr
dec
push
pop
lds
push
adc
xchg
sbb
iret
sbb
jl
ljmp
fdivrp
add
addb
mov
call
sub
xchg
xor
mov
out
out
xor
aad
sub
inc
aas
sbb
dec
sbb
cmpsb
jl
stos
fsubrl
xchg
sub
and
sub
cmp
pop
nop
inc
cli
loopne
mov
push
aaa
outsl
mov
cmp
cltd
in
xchg
push
fwait
out
add
scas
shrl
inc
adcb
lcall
ja
popf
mov
shrb
mov
cld
cmp
pop
stos
popf
dec
sbb
xchg
push
in
in
fiaddl
sbb
xchg
dec
sbb
fisttpl
pop
cmpl
jge
mov
mov
outsl
popf
in
sbb
push
inc
xchg
out
cmp
fdivl
clc
mov
push
jl
jp
aam
xlat
xchg
and
dec
push
add
xor
mull
pusha
or
mov
xchg
add
xchg
push
mov
pop
jbe
lret
sahf
sub
dec
lret
pushf
aas
int3
jmp
add
movb
or
clc
mov
pop
bound
mov
addr16
std
daa
into
ss
cmp
mov
test
rol
cmp
ret
scas
and
fists
loop
xchg
loopne
sbb
inc
mov
int3
ret
popa
mov
add
xchg
pop
pop
or
pop
sbb
aad
xor
in
adc
adc
mov
pop
push
lock
ljmp
inc
sbb
in
jbe
andl
iret
mov
pop
mov
jo
lcall
xor
rcrb
scas
mov
aaa
fldcw
add
mov
and
xchg
inc
in
mov
jecxz
inc
movsb
and
sbb
cmc
mov
call
sti
movsl
jae
ret
sub
adc
les
adc
insb
jecxz
imul
jle
inc
fldl
push
jne
add
pop
ss
lahf
add
pop
lods
push
mov
ret
ljmp
imul
cltd
xchg
inc
adcb
mov
shlb
xor
popf
in
push
stos
ret
inc
fstpt
xchg
fiadds
cmpsb
fstps
sub
cmp
pop
jne
cmpxchg
daa
mov
test
and
ja
adc
xchg
test
mov
lock
pushf
cltd
mov
enter
scas
push
adc
nop
insb
xor
push
xchg
lret
sbbb
mov
xor
mov
push
loope
push
or
stos
sub
xlat
jae
and
adc
ds
cmp
data16
pusha
mov
push
imul
pop
or
push
nop
lods
push
mov
hlt
jmp
cmp
jl
bound
mov
xor
mov
adc
and
sbb
mov
mov
iret
ret
nop
icebp
aas
addl
ljmp
push
insl
pop
test
cmpsb
inc
push
pop
cmc
jnp
adc
cmp
dec
pop
shrl
je
jo
mov
add
nop
inc
rorb
push
xchg
add
add
cmp
rcrl
push
sub
add
mov
inc
sbb
jae
test
cmc
xor
lea
jge
push
jnp
jl
lock
push
pop
mov
inc
dec
adc
xchg
push
adc
mov
daa
xlat
pop
xchg
cmp
leave
popa
fsub
fmull
sbb
ljmp
les
stc
dec
imul
or
enter
aaa
sub
out
or
ficoml
scas
rorl
pop
jbe
cmp
iret
mov
call
push
sbb
imul
mov
jnp
repz
xor
push
in
std
dec
stos
stc
sub
mov
frstor
scas
pop
inc
mov
mov
hlt
cmc
aam
and
out
pop
lret
or
lods
mov
imul
pop
outsb
inc
lahf
push
frstor
popf
fwait
inc
cmpsl
dec
dec
add
mov
adc
hlt
jo
mov
xor
xor
leave
mov
cmc
pop
sti
or
xor
gs
insb
cmpsl
and
paddw
rcrl
popf
sub
lahf
int3
in
sbb
int
pusha
cmp
int3
out
movsb
rolb
insb
gs
xlat
or
inc
rclb
pop
popa
es
sahf
adc
frstor
int3
fistl
mov
mov
sub
test
or
cltd
bound
std
mov
mov
sub
lret
add
jmp
jle
arpl
gs
or
and
xchg
xorb
xchg
mov
xor
mov
dec
aam
cmp
jne
jmp
ljmp
or
out
pop
cmp
push
inc
mov
shl
mov
push
loopne
outsb
and
sub
addl
xchg
dec
push
je
movsb
or
subb
mov
add
daa
mov
push
aad
clc
dec
mov
lret
adc
xchg
inc
xchg
push
xchg
push
imul
out
das
mov
rol
stos
or
jmp
pop
xor
sbb
nop
sub
outsl
pusha
mov
xchg
sbb
shl
icebp
add
iret
ss
inc
cli
sbb
ljmp
cmc
das
mov
mov
cmpl
shlb
and
lcall
cmp
or
cmp
jp
sbb
inc
mov
in
add
ja
sahf
add
leave
pop
ljmp
shll
inc
xor
stos
mov
loop
pop
divb
mov
jno
dec
sub
add
cmp
inc
pop
roll
das
aad
xor
aad
movsl
pop
cmc
push
inc
pop
cli
ret
jno
pushfw
out
jns
mov
mov
or
sub
ret
imul
xchg
mov
sub
lods
jle
mov
adc
adcl
mov
call
inc
push
ss
jb
add
movntq
lea
mov
push
xor
inc
arpl
nop
xchg
fmull
scas
daa
pop
int3
ljmp
adc
icebp
dec
pusha
mov
adc
test
push
cmp
and
or
push
adc
pushf
xor
cmpl
in
push
mov
fcoml
repnz
xchg
call
xchg
xchg
ss
xchg
xchg
loope
cmc
movsb
mov
test
inc
hlt
fiadds
bound
inc
int
cmp
mov
aas
sti
fdivr
inc
push
repnz
je
cwtl
inc
jo
orb
and
negb
or
ret
xor
dec
sub
jns
loopne
adc
sub
addb
stos
sarb
dec
push
dec
arpl
scas
mull
lods
jle
inc
jbe
sbb
je
or
xor
and
or
pushf
add
adc
test
jo
clc
inc
add
call
adc
adc
adc
jnp
dec
pop
jae
rcr
fildl
mov
mov
fxch
or
mov
add
into
clc
fwait
iret
and
xor
adc
sar
jns
cwtl
adc
push
repz
sti
inc
cmpsl
add
xlat
insb
or
adc
mov
jns
in
or
sti
shll
mov
sbb
mov
fldt
hlt
pop
jge
pusha
cmpsl
leave
mov
or
xchg
cltd
inc
inc
pop
loopne
sub
daa
mov
rcrb
xchg
popl
sbb
notl
fnstenv
rorl
es
lods
dec
inc
pop
fildll
cmp
lret
mov
or
inc
int
jnp
dec
test
cwtl
push
es
nop
bound
xchg
dec
add
lock
roll
push
dec
lock
xor
cmp
lret
or
sbb
mov
pop
jge
jno
xor
sbb
xor
stos
cmp
or
pushf
xor
lods
pop
insl
pusha
repz
lret
arpl
or
in
cmp
pop
pop
xchg
and
pop
cwtl
add
mov
pop
les
ss
loop
push
cmpsl
push
inc
mov
xchg
mov
inc
inc
lds
cmpsb
and
ret
push
inc
cmpsb
mov
fistl
lcall
jbe
das
dec
jae
jmp
cmp
sub
sbb
jmp
js
pop
ds
pop
jmp
or
mov
sub
jmp
test
add
cmp
mov
cli
bound
cld
jnp
mov
imul
pusha
cld
ss
xor
push
xchg
add
int
push
push
mov
outsl
xor
adc
pop
fiaddl
push
add
push
das
xchg
fmuls
xor
cld
loopne
call
push
sbb
addr16
out
orl
les
or
xlat
ret
mov
ljmp
and
ficoml
arpl
out
push
sub
inc
je
mov
jne
daa
adc
loope
ljmp
xlat
mov
aas
mov
jne
in
fldenv
xchg
or
lcall
int3
dec
xlat
aam
sub
fisubl
icebp
sarb
cmc
xchg
in
inc
lods
jmp
cmp
cmpsl
lret
xchg
jne
dec
xor
cmpsl
jecxz
mov
mov
push
add
bound
jae
mov
jbe
nop
pusha
push
pop
jae
movsl
std
jo
popf
aas
push
mov
sbb
adc
adc
dec
mov
sbb
movsb
and
in
xchg
fsubl
test
dec
vpaddusb
jl
jecxz
mov
test
popa
push
push
icebp
aas
cs
mov
pop
adc
fcomps
clc
das
loop
cmp
xchg
inc
jne
insb
int3
cmc
mov
cltd
and
adc
leave
or
cmp
in
push
add
ja
mov
cltd
aas
sbb
cmc
cld
pop
adc
xor
leave
out
sbb
call
mov
pushf
aam
push
jnp
shl
mov
xchg
daa
ds
pop
aas
sub
test
xchg
or
add
push
xchg
ljmp
mov
test
jmp
mov
xchg
enter
sub
lahf
addb
flds
fwait
sub
jnp
push
push
sub
loopne
inc
aas
push
inc
sti
aam
cmpb
push
aad
sahf
pushf
frstor
dec
ret
push
dec
pop
mov
mov
add
mov
shll
in
or
adcb
lock
push
push
into
jno
lcall
xchg
xchg
lahf
xor
mov
pushf
jl
and
jns
js
test
xchg
pop
cmpsl
jle
mov
fcmove
sbb
xchg
adc
mov
pop
mov
sahf
insl
mov
rcl
add
lods
pop
pop
mov
ljmp
ss
sub
jmp
ret
xchg
xchg
pop
jecxz
mov
xchg
inc
inc
mov
sub
in
sub
stos
xchg
nop
fstl
lret
add
lds
outsl
jge
mov
add
mov
or
mov
loop
xor
daa
fiaddl
adc
mov
and
addr16
outsb
insl
aad
jb
xor
xor
ret
es
lret
jns
imul
repnz
into
and
sahf
imul
mov
movsl
ret
scas
nop
fstpl
mov
jg
mov
inc
lahf
movswl
or
dec
jne
and
xchg
sbb
nop
in
mov
jns
aas
xchg
dec
sahf
sbbl
out
jge
leave
or
cmp
cmpsb
and
pushl
mov
jo
cmp
test
lret
loopne
add
lods
stos
or
pop
inc
hlt
ret
test
mov
xchg
mov
aam
bound
add
push
push
mov
pop
out
push
out
or
sbbb
mov
pusha
leave
pop
es
dec
jge
or
inc
fsub
mov
push
loope
add
pop
test
out
mov
sbb
mov
mov
lcall
jne
add
outsb
xor
pushf
add
movsl
movsb
lcall
push
int3
aaa
das
or
daa
mov
and
or
mov
and
ss
movsl
mov
push
outsb
negb
daa
aad
dec
int
daa
fcmovne
jecxz
dec
xor
popa
mov
pop
xchg
pop
out
adc
andl
xchg
popf
pop
and
cmpsb
jg
lret
insb
cwtl
adc
inc
daa
jecxz
push
dec
push
mov
insl
sub
or
lods
mov
out
jb
in
xchg
sub
mov
mov
jmp
xor
xchg
inc
push
subl
inc
ret
xor
stos
jno
shll
and
data16
ljmp
xor
adc
xchg
push
daa
cwtl
inc
jmp
int
xor
mov
inc
jge
adc
out
xchg
pop
stos
jle
pop
adc
int3
enter
out
jle
lahf
xchg
xlat
sub
inc
stos
adc
mov
mov
xchg
inc
cmpsl
inc
ja
push
jecxz
dec
daa
dec
test
mov
dec
daa
icebp
loope
add
cltd
je
sbb
fldlg2
mov
inc
push
cmpsb
fcom
mov
xor
mov
imull
outsb
int
cmp
cmp
push
or
sbb
mov
lds
test
stos
lret
cmp
xchg
mov
dec
mov
mov
and
mov
cmp
in
mov
and
enter
adc
xchg
or
sub
out
mov
xor
pushf
sub
or
fisubs
bound
xchg
mov
mov
push
or
and
pop
scas
cmc
pop
stos
xchg
mov
push
xchg
pusha
lret
ret
inc
pop
aad
or
xor
aad
stos
popa
orb
mov
push
into
scas
sbb
out
aas
hlt
cmp
in
lahf
out
ffreep
push
imul
popa
pop
stos
mov
fcmovbe
rclb
mov
es
add
adc
jp
pop
mov
mov
jp
jae
push
out
xchg
push
ret
fiaddl
sbb
inc
jo
scas
into
cmp
loop
xor
call
int
push
cmc
xor
add
xchg
sbb
aad
out
dec
mov
push
push
fcoml
cmpsb
cmp
sub
in
mov
sub
push
cmp
push
notb
ds
mov
sub
imul
scas
data16
in
and
fsubr
cli
xor
jb
loopne
mov
adc
fwait
mov
lcall
loop
inc
repnz
push
popa
dec
push
out
pop
pop
pop
roll
or
cltd
push
push
jo,pn
in
pop
inc
sub
jle
inc
fimuls
jle
sti
pop
push
clc
sbb
dec
aam
push
mov
jno
or
ljmp
dec
mov
mov
adc
repnz
sub
xchg
sub
jmp
lcall
cmp
and
rorb
inc
xchg
cmp
push
adc
or
jecxz
ja
push
inc
rcl
loopne
jg
mov
lret
jmp
inc
sahf
cmp
sbb
adc
cmpsl
jp
dec
hlt
jle
mov
sti
repnz
rorb
sbb
iret
shlb
fimull
jb
lods
sbb
and
push
xor
jl
mov
pop
push
mov
cmp
jge
jns
cmp
sbb
insb
cmp
inc
or
pushf
jno
not
cmp
cmp
les
inc
in
sub
jp
into
or
mov
leave
push
out
lcall
sahf
and
hlt
jmp
mov
or
push
ret
inc
and
cmc
loope
mov
or
sahf
mov
cmpsb
lods
leave
lods
dec
mov
jo
inc
dec
test
jne
mov
pop
sub
outsl
jne
xchg
das
cli
in
lcall
push
cmp
mov
push
cmpb
cli
movl
add
call
cmpl
rcrl
in
jl
jb
stos
mov
icebp
popf
add
fistpll
icebp
mov
test
cli
icebp
push
test
mov
mov
stos
imul
pop
adc
or
dec
xlat
daa
jbe
imul
stos
xor
lds
cmp
jle
dec
mov
repz
mov
mov
mov
jo
rorb
push
test
and
adc
or
pop
push
jo,pn
inc
xor
adc
subl
jne
stc
int3
jmp
mov
or
sarl
push
sar
ljmp
xor
inc
lock
scas
int3
and
incb
insl
push
inc
push
faddl
jne
pop
push
scas
xchg
mov
push
aam
ds
xchg
jmp
pop
and
xchg
insb
mov
add
mov
rorl
mov
jnp
jp
mov
pop
lcall
and
xlat
xor
mov
inc
sbb
gs
hlt
pop
or
test
mov
dec
push
and
adc
cltd
stos
lahf
lds
mov
cmp
push
mov
inc
js
outsl
enter
sti
pushf
shlb
inc
sbb
jge
shlb
xadd
cmp
mov
repz
and
dec
mov
stos
bound
xchg
loope
loop
rclb
dec
dec
clc
mov
cli
cmp
punpcklwd
movsl
shlb
sub
mov
test
and
sbb
aaa
shl
push
outsb
aas
in
cmp
leave
jmp
pop
mov
arpl
pop
adc
insl
movsb
fdivp
imull
mov
enter
fstpl
push
adcb
dec
push
push
mov
loopne
fcoms
mov
adc
or
inc
adc
clc
lcall
mov
lods
insb
cmp
data16
mov
sub
leave
stc
test
popa
jge
adc
sub
mov
cmp
sub
stc
or
or
mov
jecxz
xchg
sub
shl
enter
adc
mov
enter
mov
xlat
cld
arpl
test
movsb
cmpb
fs
mov
xchg
or
push
repnz
lret
mov
add
jae
call
mov
xchg
mov
in
pusha
flds
push
jge
pop
aas
inc
or
cltd
cmp
lds
xchg
inc
filds
inc
enter
pop
inc
dec
pusha
addr16
dec
push
mov
inc
dec
xor
jmp
pop
pop
or
pusha
cmp
scas
lcall
push
lcall
mov
subl
scas
add
mov
in
cs
mov
push
pop
mov
int
xchg
push
enter
add
pop
rcl
and
mov
into
mov
int3
xchg
test
push
jnp
lock
lret
push
or
sub
ret
test
lods
rcr
test
fndisi(8087
jo
in
or
iret
sahf
fstpl
dec
fwait
xlat
inc
jae
inc
push
push
pop
mov
scas
fidivs
out
mov
adc
add
mov
xchg
dec
daa
pushl
pop
fs
sahf
int
push
mov
shrb
or
cmc
inc
lods
lret
cmpxchg
daa
fisubrs
outsb
jg
je
mov
xor
fwait
or
js
adcb
aad
mov
cmovge
das
mov
push
cmpsb
test
scas
in
popf
call
outsb
xlat
dec
add
and
mov
xchg
stos
pushf
add
cld
xor
scas
rolb
js
jnp
shr
cltd
inc
in
jl
xor
xor
pop
lahf
inc
sbb
ret
jp
nop
adc
xchg
inc
xchg
inc
push
cmp
inc
xchg
add
push
pop
and
cs
sbb
aaa
sub
xor
dec
add
int3
ljmp
mov
out
inc
notl
aam
adc
dec
dec
and
aaa
or
and
icebp
mov
cmp
add
out
lret
add
xor
jbe
ficoms
sarl
inc
ficomps
and
ret
mov
shrl
divl
xorb
movd
or
or
mov
xchg
rorl
adc
sbb
das
push
jp
mov
or
fucompp
sarl
push
popa
push
and
sub
push
mov
popaw
mov
rcrl
cmp
add
rcl
test
mov
adc
mov
mov
sbbl
incl
cld
pop
add
cmpsb
ret
test
test
inc
movsb
jmp
inc
mov
test
cmp
jno
adc
leave
mov
dec
jo
repnz
loopne
lods
les
pop
out
fcomps
dec
lret
arpl
push
lret
add
add
imul
inc
add
sbb
enter
outsl
push
je
sub
pop
daa
jo
mov
push
sbb
sub
stc
adc
ja
push
popf
lds
imul
or
sti
lahf
ficoml
pop
jge
gs
and
xlat
mov
push
xchg
mov
mov
mov
and
int
sub
in
cmpsl
test
sub
in
or
sbb
mov
pusha
pop
dec
int
test
ljmp
out
mov
in
cmp
cmp
jg
pop
fidivrl
xlat
leave
pop
fistpl
roll
jecxz
sbb
mov
aad
sbbl
outsb
mov
outsl
dec
mov
popf
lcall
inc
sbb
movsb
cmpsb
or
fst
mov
fcompl
adc
insl
imul
jecxz
out
xchg
sub
push
call
addr16
fmulp
pop
cmp
int
in
inc
push
mov
xchg
lret
xor
mov
dec
test
mov
push
sbb
into
pop
out
fs
mov
cmc
test
cmpsb
jns
jnp
sbb
pushf
sub
push
js
scas
cmp
in
mov
mov
dec
add
cmpl
jo
aam
cmp
sbb
lcall
push
and
xchg
mov
mov
mov
jae
in
add
jmp
cmp
cltd
leave
sti
mov
addr16
jnp
jne
pop
xor
mov
stos
push
in
add
cmp
push
adc
jg
sub
inc
pop
add
push
into
icebp
pop
pop
fninit
pop
ja
jle
mov
stos
push
adc
lock
pop
aam
movsl
and
cmp
cmp
fwait
mov
mov
xchg
sub
mov
dec
ret
jns
in
ret
adc
dec
dec
in
shr
lock
sarl
fiaddl
push
push
dec
or
sub
mov
mov
pushf
addb
push
mov
pop
negb
outsl
aaa
fnstcw
xchg
pusha
gs
inc
adc
dec
push
insb
mov
out
gs
dec
pop
movsb
or
or
outsl
mov
imul
cmp
inc
adc
out
scas
loopne
andl
jl
das
mov
fnstcw
xlat
les
jb
addl
mov
outsb
test
push
ds
mov
test
cmp
popl
in
jns
sub
adc
out
mov
push
fistpll
cltd
das
jp
pop
xchg
jl
xchg
rorl
std
mov
inc
cld
lret
sarl
mov
shrb
fisubrl
repz
cs
es
push
test
out
addb
and
xorl
mov
mov
and
lds
fsubs
mov
mov
mov
mov
ljmp
out
fmull
mov
xor
or
into
mov
push
and
xchg
call
or
xchg
nop
aas
aad
scas
stc
pop
iret
inc
shlb
ds
ret
daa
pop
pop
je
lods
lret
lods
xchg
xor
leave
orb
aam
cmp
pushf
sub
dec
loopne
int3
test
jbe
mov
add
pop
cmpsb
and
cs
bound
mov
jp
mov
push
mov
int
push
mov
mov
mov
shrl
pop
cmp
and
leave
ljmp
and
subl
xchg
cmpsb
jp
in
icebp
mov
lods
or
inc
dec
sbb
mov
repnz
movsb
ret
inc
mov
loope
std
pop
je
test
cmp
fimull
or
or
popf
out
int3
sbb
jecxz
adc
xor
sub
push
add
std
je
inc
xlat
jae
dec
xabort
add
fwait
cmp
jnp
jbe
xor
shlb
mov
clc
push
push
pop
test
out
loop
push
sti
or
es
dec
in
sbb
movsb
adc
cmp
or
jo
les
outsl
mov
adc
int
and
xor
xor
mov
xchg
and
sti
mov
pop
or
daa
mov
lret
pop
jns
mov
push
pop
lahf
call
in
lea
fnstsw
stos
push
sub
dec
jle
push
xorl
or
cmp
int
in
mov
test
nop
push
mov
push
hlt
push
adc
add
xor
popf
or
enter
clc
pop
mov
movsl
jg
jno
inc
inc
jo
cmp
cmp
sbb
mov
stos
sarb
mov
xchg
and
dec
les
pusha
jge
popa
add
mov
mov
jecxz
popf
mov
or
cs
mov
xor
or
sbb
xor
cmp
repz
pop
stc
scas
out
cmpl
add
or
aaa
movsl
aam
out
dec
mov
sbb
adc
cmovb
inc
adc
sbb
and
and
in
xchg
addr16
fdivl
pop
push
mov
add
add
leave
mov
inc
cmpsl
das
in
xor
mov
push
adc
add
push
xchg
sub
repnz
dec
int
in
inc
pop
outsl
adc
push
jb
std
clc
inc
repz
xchg
xchg
enter
call
fidivrl
icebp
test
push
jge
cmp
call
loopne
addr16
stc
aas
dec
jl
and
cs
stos
pop
lret
cmc
mov
std
aam
push
cs
lods
jae
rorb
je
mov
adc
int
jmp
adc
add
adc
jb
dec
lret
fnsave
push
int3
sub
in
add
mov
mov
and
push
movsb
and
in
and
mov
scas
stc
mov
push
loop
pushf
in
aas
jge
ss
or
sti
cmp
inc
push
pushf
mov
arpl
enter
sbbb
sbb
sub
or
insl
push
lret
mov
jmp
xchg
fs
mov
xor
addb
add
mov
int3
and
sub
fcomps
and
aad
fs
add
xor
mov
or
lea
loop
jle
push
lret
cmp
or
insb
jb
out
shrl
mov
sbb
movb
fcompl
scas
iret
insb
sbb
fldcw
sub
dec
or
aas
and
push
or
xlat
sbb
std
lret
cmpsl
cli
jle
movsb
scas
dec
inc
push
dec
gs
mov
mov
mov
xchg
ret
shl
mov
pop
dec
andb
loop
fstl
or
jl
sbb
clc
notl
inc
mov
std
pop
in
xor
jne
xor
xor
inc
xor
push
or
icebp
lahf
jns
push
stc
and
xchg
hlt
lret
aad
shll
cmp
xchg
lahf
mov
jmp
and
arpl
mov
mov
out
fimuls
out
mov
fiadds
lods
xor
pop
or
repnz
fucom
std
iret
outsb
sbb
nop
adcb
mov
sub
pusha
lcall
gs
loope
iret
mov
cli
cld
push
add
pop
sti
and
dec
popf
pop
push
movsb
sarl
xor
sbb
insl
popa
lock
xchg
mov
push
rorb
dec
lods
rorl
mov
xchg
daa
add
and
jg
cmpsl
mov
pop
push
sahf
flds
fiadds
sahf
test
repz
push
add
lret
xchg
mov
loopne
sbb
out
xor
lods
in
gs
lcall
dec
ja
sbb
addr16
mov
push
je
xor
push
sti
push
pop
push
sahf
int3
inc
mov
stos
hlt
mov
hlt
int3
pop
adc
mov
fisubrl
add
add
outsl
pusha
xor
jno
iret
fstpt
pop
and
cs
jbe
dec
jecxz
mov
xor
mov
xchg
scas
inc
push
xorl
push
jne
xor
sbb
mov
sahf
test
adc
jp
dec
add
pop
aad
mov
sti
cld
add
cmp
mov
push
jecxz
and
loopne
mov
push
out
and
outsb
notl
jl
insl
fs
or
jo
nop
imul
pop
ljmp
sbb
xor
xor
cld
dec
push
aad
mov
hlt
aaa
pushf
sbb
push
pop
mov
mov
cmp
int
pop
lret
nop
mov
dec
and
mov
mov
imul
adc
xchg
mov
cmp
xchg
mov
jp
gs
mov
stos
xchg
sbb
cmp
cmp
inc
pop
out
enter
xor
lock
push
dec
nop
ret
sbb
xchg
xchg
xor
mov
push
ret
ljmp
rcll
and
add
dec
push
insb
mov
scas
add
les
ds
fiaddl
pop
in
aad
idivb
clc
jmp
jle
mov
pop
leave
sbb
les
ja
inc
cmc
fnsave
mov
ja
mov
add
shr
mov
arpl
daa
mov
sbb
enter
cwtl
int3
cli
dec
pop
aaa
mov
cmp
jb
sub
sub
push
je
push
popa
mov
mov
test
fistpll
lret
ret
stos
jns
mov
xchg
adc
fwait
or
add
xor
dec
pop
divb
pop
bound
in
cmpb
test
sbb
push
aad
jb
fnstsw
adc
inc
adc
inc
hlt
mov
pop
pop
lret
in
fiadds
outsb
lea
ja
push
aam
push
jo
int3
rclb
lahf
dec
mov
loopne
mov
out
test
filds
or
sbb
xor
lss
xchg
sub
int3
xchg
pop
enter
rclb
adcl
cld
daa
add
adc
xor
pop
mov
jle
icebp
inc
jns
jnp
ret
iret
add
repnz
inc
push
in
fcmovnu
push
in
repz
add
jp
jle
out
fidivl
sub
mov
ficoml
dec
push
jg
test
aam
jae
mov
fs
mov
push
jo
icebp
and
arpl
jl
repz
fwait
repz
cmpsb
jns
insl
add
int
jmp
fisubrl
inc
mov
inc
repnz
insl
mov
pushf
sbb
lods
sub
xchg
adc
ss
dec
mov
icebp
repz
xor
call
jge
ss
add
adc
rcrb
lods
add
mov
je
sub
js
pop
add
push
push
popf
add
and
sbb
cltd
cmp
bound
adc
cmc
lea
les
xor
cmpsl
mov
mov
into
scas
fidivl
aam
leave
jecxz
nop
pop
insl
push
xchg
into
push
and
rclb
fs
nop
fsubl
dec
ljmp
push
xor
sbb
cmp
test
and
loopne
mov
lea
dec
sbb
divb
mov
lahf
sub
mov
std
test
inc
dec
push
sub
orb
stc
pop
xor
pop
shrb
mov
mov
xor
xorl
pop
lods
lret
outsb
mov
bound
pushf
test
test
loope
fwait
xchg
arpl
sub
xchg
out
inc
std
ror
inc
xchg
mov
mov
fmulp
jmp
movb
dec
fsub
fmull
repz
loope
fs
mov
or
and
jae
movsb
xchg
xchg
es
jno
and
es
xor
adc
dec
and
pop
insl
out
fdiv
xor
cld
push
xchg
jbe
loop
fdiv
dec
shr
mov
mov
imul
std
cmpsb
mov
sbb
inc
aad
jecxz
sbb
lahf
lret
imul
je
cmp
jge
cwtl
inc
es
stos
mov
mov
jne
mov
inc
mov
jnp
jl
orb
jae
push
mov
cmp
lods
loopne
mov
mov
rol
and
lret
outsb
adc
pop
sbb
ret
icebp
sbb
int3
and
cmc
cmp
fdivs
hlt
mov
xchg
mov
dec
test
je
add
jae
inc
dec
push
repz
insl
sub
sub
sub
clc
add
lods
icebp
mov
mov
test
adc
out
fisubrs
fs
sbb
sub
repz
out
adc
rcll
jbe
test
sub
dec
jbe
or
test
push
mov
mov
insl
scas
fwait
or
negl
jno
stos
inc
mov
in
cltd
daa
shll
dec
pop
int3
testb
inc
daa
inc
mov
shrl
push
pop
mov
fildll
fmul
adc
or
adc
mov
fstl
dec
sbb
pop
pop
xor
enter
push
xorl
cmp
inc
xchg
cmpb
loop
sbb
sub
aad
iret
in
sbb
push
mov
adc
fists
jns
mov
ja
or
stos
xor
mov
mov
or
shll
fistps
and
gs
ret
push
lret
push
aas
lods
fwait
mov
cmovne
aaa
adc
xchg
pop
mov
add
outsl
into
in
adc
fdivrp
iret
push
push
lret
shrb
test
xchg
mov
push
in
out
sub
cs
lret
outsb
rcrl
mov
leave
sbb
xor
mov
iret
mov
push
outsb
lahf
xor
popf
mov
leave
popa
andl
rol
jae
loopne
xchg
int
mov
subb
ficoms
and
jmp
nop
icebp
repz
jne
movsl
mov
imul
int
fadds
mov
int
jp
testb
jae
lea
mov
dec
cli
adc
jne
int
push
rolb
out
mov
or
cmpsl
xor
mov
lret
out
mov
pop
js
cmp
or
pop
es
mov
xor
out
xor
cmp
pushl
out
jecxz
lock
insb
push
sbb
cs
push
pop
sarl
push
incl
mov
repz
push
cmp
cmp
jmpw
out
loopne
lret
jo
push
cmp
adc
mov
js
mov
mov
jmp
ds
negl
inc
cmp
mov
in
jg
repz
sbb
push
dec
sbb
pop
xor
rcr
enter
loopne
aaa
lods
xchg
pushf
fisubrl
lret
in
xchg
neg
cmp
or
xchg
sub
nop
sarb
xchg
ret
xchg
cmpsl
push
cwtl
and
hlt
mov
fnstenv
fldenv
subb
jg
shl
push
scas
mov
ss
add
mov
loope
mov
jmp
test
outsb
inc
inc
stos
in
imul
dec
push
stos
xlat
mov
ds
cmc
add
inc
shrb
aad
imul
push
lods
lret
lds
xor
push
aaa
inc
xchg
idivl
ljmp
pop
xchg
enter
jmp
adc
hlt
lods
xor
mov
mov
xor
arpl
repnz
push
jnp
int3
pop
sbb
fdiv
and
lock
inc
call
sbb
jecxz
pop
stos
push
dec
icebp
mov
xchg
mov
insb
inc
ljmp
daa
jno
push
mov
ss
sub
jge
bound
mov
add
scas
iret
sub
mov
adc
popa
pop
aam
add
xchg
xor
add
xor
das
sbb
dec
mov
repz
shr
daa
fwait
stc
mov
mov
stos
loope
xchg
sbb
loop
in
outsb
adc
inc
inc
jg
inc
subl
and
fwait
sbb
jb
cltd
stos
xchg
sbb
mov
cli
xchg
dec
test
aam
int3
mov
mov
fsubl
stc
dec
aam
inc
lahf
xchg
dec
and
ljmp
jg
iret
dec
mov
in
cmp
inc
hlt
mov
push
pop
push
ret
gs
adc
out
inc
nop
or
lods
mov
into
xchg
in
daa
fwait
ret
aam
xchg
leave
and
or
repz
mov
mov
je
iret
popf
aam
mov
nop
mov
and
mov
jb
xor
into
and
push
ds
dec
mov
mov
jl
mov
add
fs
jno
ret
and
stc
dec
xchg
sbb
mov
and
pusha
aaa
mov
frstor
cltd
outsb
pop
jg
inc
in
xlat
xor
movsb
push
inc
xor
add
decb
sub
es
jae
push
out
and
cld
outsb
pop
insb
popa
sub
adc
sahf
xor
out
std
push
rcr
shlb
aaa
pushl
movsl
sbb
fisubrl
push
or
in
rclb
xchg
cmpsl
sti
xchg
lock
fiaddl
cmpsl
jle,pt
iret
sbb
popf
jb
ss
cmp
aaa
aas
loop
lahf
data16
and
jge
int
movsl
xor
xlat
pop
push
js
fnsave
lock
pop
pop
aaa
js
jecxz
sub
mov
in
cmp
inc
mov
jo
add
inc
lea
iret
cmp
pushf
loop
push
ja
cmp
test
or
mov
mov
in
lods
ds
push
push
sub
cmp
cmc
jl
mov
add
push
sub
arpl
ret
into
jp
mov
xor
xor
xchg
imul
mov
movsb
xchg
inc
fs
inc
scas
aam
mov
xchg
mov
stos
inc
mov
jno
lahf
sbb
pop
inc
pop
idivb
push
sub
or
dec
jne
mov
int3
imul
test
rcrb
jne
out
sub
sbb
nop
sub
shrl
aaa
xchg
mov
cmpsb
sbb
stc
mov
mov
adcl
push
jb
add
sub
jmp
jecxz
mov
stc
cltd
pop
and
shrb
hlt
dec
leave
cmp
mov
ljmpw
sbb
shlb
cld
mov
pop
loope
loopne
sub
pop
lods
stos
cmp
shlb
dec
sti
mov
pusha
fcompl
call
cmpsb
test
nop
ds
or
inc
mov
xchg
in
inc
jne
mov
in
dec
mov
adc
pusha
mov
fdivrl
aam
test
mov
add
ret
pop
int3
sub
mov
sbb
cmp
out
fmuls
lock
xor
xorb
mov
add
sahf
adc
lock
int
sbb
int
sub
std
cmp
jo,pt
xchg
and
lock
xchg
aad
xchg
mov
outsl
push
pushf
jmp
fildll
jp
jle
add
imul
mov
add
dec
add
nop
pop
test
mov
in
aaa
push
inc
je
pop
out
fcmove
std
outsb
pop
scas
data16
insl
adc
xchg
jmp
daa
dec
scas
pop
test
mov
cmp
sub
pop
sub
repnz
and
and
aam
call
mov
inc
fildl
push
and
mov
push
dec
mov
xlat
or
adc
jp
into
daa
sbb
enter
jb
insl
sub
xchg
add
test
mov
lods
test
nop
stos
push
xor
pop
inc
cmc
in
nop
xchg
cltd
gs
lahf
call
cli
ret
xchg
fildll
xchg
or
inc
add
inc
pushf
inc
mov
jmp
fwait
pop
and
inc
movsb
fadds
je
push
loopne
mov
add
inc
lods
in
les
xchg
aas
sbb
inc
mov
rcrl
dec
push
fcmovnbe
jmp
das
sub
adc
ss
cmpsb
rcrl
repz
outsl
rep
lods
inc
and
cmpsl
add
mov
insl
bound
lahf
push
push
push
mov
std
aaa
inc
das
jmp
aas
std
xchg
test
and
fstl
dec
cmpsl
mov
xor
adc
jmp
outsl
dec
cmp
movsb
imul
xchg
mov
fsubs
inc
mov
in
xor
das
test
inc
add
or
xchg
mov
push
jle
sub
and
mov
popa
leave
icebp
movsb
push
aaa
sub
std
cwtl
cmp
mov
je
loopne
mov
arpl
mov
dec
shl
sub
xchg
fistpll
pusha
sbb
lret
add
jae
push
pop
int3
lods
js
push
inc
mov
mov
cmpsb
add
insl
push
lret
pop
jle
test
roll
sub
stos
in
cmpsb
int
xchg
xlat
cmp
adc
mov
and
mov
aad
std
pop
stos
addb
xor
out
fidivrs
jb
movsl
push
in
and
in
int3
adc
push
pop
jmp
jmp
int3
pushf
cltd
push
fmull
pop
mov
lea
and
mov
adc
sub
pushf
push
lods
jne
and
fs
ds
ja
std
es
rcll
ret
inc
orb
sub
sub
mov
xchg
push
call
push
mov
cmp
pop
pop
adc
xchg
mov
out
cmp
fsubl
into
fcom
push
inc
in
sbb
xchg
mov
xor
ljmp
and
jns
push
push
or
pop
faddl
popa
mov
jecxz
repz
and
pop
dec
mov
imul
and
call
push
dec
dec
sub
xor
daa
mov
add
pop
sub
xchg
loope
or
insb
sahf
insb
ljmp
cmp
lock
sbb
or
xor
jl
into
cmp
sbb
or
xchg
push
sub
lds
dec
mov
mov
mov
addl
sub
mov
loope
bound
notb
test
mov
mov
mov
lahf
inc
mov
js
or
jne
sub
sub
add
scas
pushw
xchg
setb
dec
dec
push
push
scas
xchg
mov
xchg
mov
imul
xlat
pop
fmul
or
nop
xor
xor
or
inc
out
ss
jecxz
sahf
xchg
rcr
xchg
cmp
call
nop
cli
arpl
dec
imul
repnz
jb
test
cltd
arpl
mov
filds
inc
cs
wbinvd
in
mov
nop
cmp
aas
mov
movsb
xchg
ret
xlat
mov
js
push
subb
into
or
mov
inc
or
stos
hlt
mov
cmpsl
mov
fwait
xchg
dec
jb
ljmp
mov
dec
dec
lods
or
add
and
inc
sbb
push
push
sahf
decl
inc
pusha
cmp
mov
in
xchg
rcll
ja
mov
adc
arpl
repz
fs
adc
enter
and
xchg
and
add
shl
dec
pop
pop
scas
cwtl
out
lea
xor
cmpl
popa
xor
cmc
clc
js
push
cmp
movsl
mov
push
inc
xchg
rcrb
outsl
subl
sub
or
rorl
add
pop
or
fadds
sbb
push
mov
es
pop
push
jns
insb
mov
mov
lods
push
call
cmpsb
dec
jae
jle
mov
mov
rcl
mov
mov
aaa
xchg
xlat
popf
cmp
shr
xchg
stos
addr16
xlat
mov
pop
insl
out
push
sahf
cwtl
clc
out
nop
push
lods
xor
mov
cmpsl
cld
pop
jp
ss
mov
jge
inc
rcrl
insb
mov
jg
ja
dec
std
scas
leave
mov
add
pop
lret
push
ljmp
notb
inc
test
jmp
mov
leave
xchg
xor
dec
icebp
add
fdivrl
loop
pop
mov
fwait
xchg
and
test
sti
shl
divb
xchg
mov
xchg
push
mov
loopne
sub
dec
clc
xchg
movsb
aad
adc
sub
iret
fsubrs
add
scas
jno
mov
fdivl
jp
push
xor
inc
xor
sub
add
mov
bound
mov
push
bound
imul
mov
ljmp
aas
mov
inc
lods
and
sti
loop
adc
pop
out
pop
cmpsl
jno
adc
ja
dec
and
inc
and
lods
das
in
mov
bound
pop
inc
je
testl
mov
je
push
pushf
lret
push
push
inc
mov
push
insb
sbb
add
sbb
pop
adc
fucomi
fbstp
loop
add
js
iret
and
loope
cmpsl
inc
leave
out
xlat
xchg
leave
ss
cli
aam
sub
dec
and
mov
enter
push
xor
push
sub
test
mov
lods
loope
mov
xor
out
pushf
fcmovnbe
cmpsl
jg
xrstors
roll
sarl
add
fcmovb
repnz
cltd
ret
fnstcw
mov
mov
out
imul
jmp
pusha
fdivs
outsb
jp
mov
jg
dec
and
int
push
fwait
scas
fiadds
scas
or
shll
push
ds
and
lock
imul
ds
mov
mov
dec
jnp
inc
sbb
add
jmp
xchg
data16
pop
mov
sbb
ja
sbb
nop
jnp
sub
xchg
mov
aaa
int
ss
out
cmc
inc
icebp
outsb
mov
xor
or
mov
sub
in
fildll
sti
lock
pop
adc
pop
es
jae
cmp
pop
push
sbb
inc
arpl
enter
outsb
mov
mov
ljmp
add
mov
aam
xchg
sarl
cmp
inc
testb
jecxz
aam
clc
push
stos
push
mov
gs
mov
leave
inc
pop
les
cmpsl
imull
aaa
test
in
inc
pop
data16
adc
pop
out
mov
push
xlat
movsb
loope
jns
cld
sub
push
mov
rcrb
in
and
inc
jmp
add
jmp
mov
es
xor
xchg
jno
xchg
mov
aad
mov
pop
cmp
loope
cmp
xchg
js
loopne
movzbl
andb
xlat
xor
jno
loop
rorb
aam
lock
push
clc
in
fsub
sbb
ds
mov
pop
mov
or
inc
jle
sub
je
outsl
sub
jge
mov
movsl
xor
iret
data16
mov
ljmp
xchg
repz
je
daa
xchg
sub
or
add
sbb
arpl
dec
sbb
mov
mov
fcompp
mov
mov
loop
dec
scas
add
fstp
into
cltd
add
mov
push
sarb
insb
test
inc
dec
adc
push
enter
push
aaa
or
pop
fcmovbe
shlb
jo
mov
cld
aaa
jnp
sub
xchg
mov
repz
mov
mov
fnsave
lret
imul
cld
sub
cmpb
dec
outsb
ret
push
cmp
sub
xchg
aas
add
or
call
aaa
fs
mul
sti
fwait
pop
bound
mov
clc
mov
push
call
pop
and
mov
cs
lret
push
sub
inc
xor
and
fisubs
lds
imul
jne
xchg
in
mov
std
rcll
pop
rcll
jns
js
sub
enter
mov
jecxz
inc
xlat
dec
mov
insl
cmp
xor
mov
xor
mov
icebp
fsubs
inc
adc
mov
mov
mov
in
stos
mov
out
fwait
pop
sbb
mov
in
mov
pop
test
jmp
std
xlat
pop
jno
mov
clc
ror
loopne
dec
lcall
fnstsw
pop
mov
test
mov
repnz
adc
xchg
sbb
sarl
jae
lret
popf
sub
push
mov
sbb
pop
imul
filds
pop
jne
dec
sbb
jge
jns
cmc
rolb
or
add
sbb
mov
aad
and
loop
mov
mov
add
dec
stos
stos
xchg
dec
subb
rorl
incl
loop
in
or
push
rorl
outsb
dec
stos
or
and
dec
push
dec
push
sbb
out
mov
cmp
xchg
clc
lahf
ss
out
jbe
loop
inc
fs
jbe
xchg
jecxz
and
and
pop
mov
cwtl
sub
popf
jge
aam
jne
stos
cs
xlat
or
lods
outsl
adc
pop
mov
js
movsl
or
push
sub
movsb
scas
sbb
inc
mov
lret
mov
aaa
cmp
hlt
cmpsb
sbb
pushf
fwait
cmp
lods
mov
xor
xchg
repnz
adc
ret
js
insb
lods
cmp
je
call
imull
in
pop
cmc
add
adc
mov
popa
mov
xchg
sub
roll
sub
ds
loopne
cwtl
out
xchg
cmp
jne
and
nopl
dec
repnz
add
xchg
push
scas
popa
sub
mov
pop
mov
jno
push
ds
fidivrl
sbb
and
xchg
scas
push
jo
inc
jns
test
jmp
stc
and
sbb
outsb
test
mov
jne
notl
insb
cltd
data16
in
aaa
push
pop
push
push
jmp
jg
gs
das
add
imul
test
sbb
dec
sbbb
sbb
popf
lods
xchg
xchg
out
aaa
ret
rcrl
lcall
cld
lret
push
push
popa
push
mov
insl
mov
jmp
mov
sarl
xchg
rcrb
mov
xchg
bound
add
sub
sub
adc
xchg
fwait
movsb
mov
add
ss
cmp
jae
inc
lods
imull
jne
sbb
cmp
loop
sbb
pop
cmp
fstps
sar
xor
neg
pusha
push
pop
or
mov
aam
cwtl
xchg
pop
mov
xchg
xchg
jb
xchg
movsl
xchg
lds
jno
fisubs
lods
clc
xchg
loop
adc
pusha
or
and
pop
pop
push
mov
ret
pop
pop
push
push
xchg
sar
cmp
repnz
mov
xor
dec
push
outsl
or
mov
rcll
stc
arpl
fs
push
jno
mov
shr
xchg
inc
mov
push
out
sub
mov
imul
jno
pop
mov
shrl
sbb
outsl
insb
and
adc
add
mov
xor
or
sub
mov
and
inc
test
cwtl
mov
inc
xor
xor
jo
adc
fst
fstps
add
sarl
pushf
mov
cmp
test
jg
xlat
scas
sub
jmp
jmp
mov
pop
and
adc
movq
mov
mov
mov
adc
jbe
or
push
mov
inc
mov
inc
ror
insb
lret
xchg
push
imul
sahf
sbb
es
jbe
mov
jg
mov
pop
xchg
dec
insl
popa
inc
push
cmp
filds
sti
out
test
push
jge
xchg
mov
dec
dec
xorb
inc
xor
mov
aas
mov
mov
add
xor
sub
and
or
push
dec
xor
shrl
andb
frstor
pop
std
inc
arpl
xor
test
data16
sbb
xchg
shlb
mov
fisubl
dec
movsb
xlat
ret
shlb
mov
enter
and
sub
scas
lcall
xchg
or
out
mov
gs
and
xchg
push
jns
call
ret
push
div
lahf
inc
or
vshufps
cli
fs
int
pop
ret
dec
test
dec
inc
add
or
stc
jg
mov
inc
sysenter
mov
in
inc
add
aad
xchg
adc
inc
mov
pop
lret
int3
les
pop
lods
dec
les
push
cli
jecxz
imull
sbb
sbb
cs
xor
movsb
test
movsb
sahf
neg
sub
cmc
mov
stos
mov
pop
or
adcl
fwait
loop
cmp
add
adc
outsb
cwtl
and
and
push
adc
fdivl
rolb
add
mov
add
cltd
pushf
andb
andb
dec
sbb
fisttpl
das
call
in
jo
adc
dec
in
jl
add
les
xchg
mov
aaa
rorb
ficompl
icebp
mov
push
cmc
out
das
push
pop
repnz
arpl
push
lcall
dec
mov
popf
repz
lret
sbb
adc
cmpsb
rol
push
mov
xchg
or
and
test
roll
cld
lahf
push
mov
std
sti
or
xchg
cs
xchg
mov
ds
pop
mov
add
sbb
jne
pop
aad
fwait
aam
aam
rolb
mov
mov
pop
xchg
icebp
lret
sbb
add
cs
cmp
in
cmc
pop
notl
add
loope
sbb
fdivs
cwtl
hlt
xchg
inc
sub
mov
inc
jg
sub
jnp
arpl
mov
mov
or
mov
or
mov
sbb
inc
dec
out
sbb
ret
stos
out
in
in
pop
add
adc
push
add
pushf
mov
push
inc
jo
jne
mov
mov
push
jo
xchg
scas
pop
inc
jecxz
xor
shll
xchg
mov
mov
push
insb
insl
jne
adc
cmp
and
cmp
jno
jg
push
jge
jno
sarb
mov
adc
bound
nop
push
lea
sbb
xchg
xchg
push
mov
pop
adc
out
or
adc
push
aaa
or
or
imul
subb
sub
mov
jbe
jl
jecxz
push
test
gs
cmpsb
les
mov
scas
inc
fstl
jmp
addr16
or
or
push
xor
aad
mov
mov
or
mov
xor
and
add
sarl
sbbb
xchg
mov
testb
xchg
sub
and
iret
outsb
pushf
mov
addr16
dec
xor
out
es
ret
pusha
lods
mov
jb
fldcw
ljmp
fidivs
lret
mov
cltd
insl
or
mov
adc
mov
sti
repz
push
xor
into
test
addr16
mov
icebp
loope
push
push
mov
dec
clc
adc
or
add
mov
pop
or
cltd
pop
push
pop
inc
ja
push
cwtl
sub
ss
xlat
pop
and
enter
out
sahf
leave
les
movsl
jnp
mov
mov
icebp
das
mov
push
cmp
dec
sub
fistpl
and
mov
into
fwait
test
or
aaa
insl
movsb
clc
pushf
rolb
jp
out
cmp
outsb
les
xor
data16
lcall
fwait
aas
xorl
sbb
inc
repz
jns
adc
mov
mov
out
dec
ds
xchg
push
cmp
xchg
loopne
mov
mov
mov
add
inc
jp
mov
xor
dec
xchg
xchg
stos
jp
in
lods
sbb
sti
fcoml
adc
cmp
and
add
push
adc
sarb
fldcw
ret
stos
mov
and
out
jl
sub
adc
lock
dec
xchg
xchg
leave
dec
xchg
addb
xor
adc
test
add
jno
sub
test
cmp
mov
jge
fisttpl
lcall
lea
fst
cmpl
ja
push
sub
sti
in
sbb
jnp
and
mov
nop
into
dec
push
rolb
xchg
sbb
xchg
inc
mov
jle
fsubl
pop
mov
dec
mov
pop
bound
shlb
pushf
xchg
dec
or
sub
mov
and
or
rolb
push
dec
out
inc
dec
into
jno
adc
push
movsb
mov
xlat
ljmp
xchg
jb
insl
xchg
cld
or
sarl
dec
jbe
mov
mov
and
icebp
jo
outsl
les
inc
pop
dec
xchg
les
push
movsb
into
mov
sub
jae,pt
cmp
mov
mov
mov
flds
decl
into
pop
sbb
movsl
call
inc
and
push
scas
push
ror
in
jbe
add
aas
arpl
out
adc
test
cs
or
push
not
cmp
lret
or
cmp
mov
sub
jg
imul
scas
xor
mov
loopne
xchg
nop
lods
test
sub
pop
imul
jge
out
ficompl
lcall
pop
mov
jp
sbbb
test
mov
mov
xor
pop
leave
shrl
push
das
fidivs
xor
scas
sub
das
dec
xor
iret
mov
jmp
cmpsl
pop
sbb
loop
lea
sahf
mov
and
xor
inc
mov
inc
xor
adc
andl
xor
xor
dec
mov
sbb
leave
fistps
pusha
mov
add
ret
adc
dec
mov
add
xchg
mov
jo
inc
cmpsb
pop
sub
stos
negb
cmpsb
xchg
sbb
test
xchg
pusha
inc
inc
imul
push
adc
adc
in
ficompl
test
cwtl
hlt
iret
lret
push
into
jae
fcoms
pushf
jp
sub
mov
fisttps
iret
popf
xor
xchg
ss
arpl
sbb
inc
icebp
movsb
or
lret
xchg
mov
jp
mov
icebp
pop
push
sub
push
stos
sub
jle
jne
jmp
push
lret
xor
addl
icebp
mov
enter
stc
fldt
push
mov
push
mov
push
or
sub
adc
jle
int3
imul
addl
mov
fcmovbe
xor
rcrb
add
push
fs
pop
mov
cmpsl
pop
cs
ret
shrl
test
push
adc
and
and
adcb
out
jns
xchg
pop
adc
xor
dec
xchg
xor
pop
dec
sbb
xchg
iret
adc
popa
inc
mov
aaa
and
fsts
cltd
inc
pop
mov
in
inc
lea
sub
mov
xchg
popf
inc
mov
arpl
pop
adcb
sbb
pop
cmp
sbb
add
pop
insl
sbb
adc
sbb
in
jb
neg
movsl
fmul
jmp
pushf
je
and
push
sub
mov
inc
jns
out
jmp
mov
cmp
fisttpll
push
inc
scas
jb
inc
test
and
jne
or
aad
das
jnp
hlt
or
jnp
sub
int3
sbb
in
roll
fwait
nop
je
xchg
cmp
sub
shl
mov
push
push
dec
pop
sbb
push
and
sahf
imul
pusha
pop
pop
jo
lods
popf
inc
lret
or
ficoms
test
mov
or
xchg
cvtdq2ps
jae
mov
jo
dec
movl
xchg
pop
scas
push
add
dec
movsl
or
rcrb
loope
push
and
das
push
xchg
sub
dec
mov
push
scas
add
scas
ret
test
mov
pinsrw
fstpl
fwait
xor
mov
popa
mov
es
lds
orl
lods
jmp
mov
dec
std
lret
add
and
push
mov
dec
dec
std
sar
in
repnz
test
adc
call
test
sub
in
adc
mov
in
xchg
stos
push
jmp
into
pop
xor
cmp
jnp
hlt
add
lods
xchg
xchg
es
jp
or
ljmp
jmp
add
mov
push
add
test
test
jg
ret
daa
mov
inc
in
test
and
sub
fisttpl
dec
push
out
cmpsb
fmull
push
ljmp
push
fisttpll
leave
sbb
dec
xchg
dec
mov
cmpsl
pop
mov
mov
fwait
sahf
xchg
mov
pop
pop
push
add
out
lcall
gs
push
outsl
punpcklwd
mov
mov
push
inc
lea
cmp
cli
stos
mov
clc
clc
lret
bound
sbb
fmuls
mov
inc
stos
call
je
xchg
movsl
out
mov
lods
fsubrs
jp
je
inc
dec
adc
or
cmp
stc
or
cli
pop
cmc
xchg
lods
cmp
fsub
mov
inc
and
or
pop
sbb
mov
leave
sbb
mov
pusha
or
xor
movsl
cs
inc
fnsave
cmpsb
bound
cld
call
dec
fwait
arpl
mov
test
sarb
or
fidivrs
sub
fst
cmp
mov
xor
push
push
dec
divl
dec
xor
mov
int
fidivrl
xchg
cltd
sub
sbb
je
jae
out
sbb
adc
add
push
addr16
mov
fwait
lods
cmpsl
out
fwait
shl
std
or
test
or
popf
mov
pmaxub
out
mov
sbb
into
pop
xlat
arpl
mov
push
je
pusha
dec
jl
and
dec
roll
ljmp
inc
xor
mov
pusha
rorb
pusha
or
add
mov
dec
out
repz
testl
jecxz
repnz
mov
sbb
testw
popf
shlb
test
mov
pop
dec
fs
mov
mov
bound
add
mov
sti
pop
mov
push
out
pop
sbb
mov
and
adc
inc
sub
addr16
lret
test
mov
or
mov
das
int
dec
add
mov
or
mov
inc
xorb
icebp
add
lcall
outsl
adc
dec
jb
sub
pop
cmp
mov
mov
je
mov
push
out
out
jb
test
paddd
lock
inc
insl
sbb
jo
and
paddsw
adc
std
xchg
fs
mov
mov
pop
mov
or
inc
cmpsl
or
inc
jnp
mov
xlat
jae
data16
movsb
pop
xor
mov
dec
andb
arpl
das
stos
adcl
dec
test
sbb
out
lods
movsl
in
mov
pop
inc
add
outsb
xchg
rclb
push
mov
aam
leave
sbb
mov
jbe
mov
icebp
cmp
and
adc
mov
cmp
fbstp
loope
aad
xor
out
jge
gs
jmp
std
mov
mov
xchg
jnp
rcr
pop
adc
pop
repz
pop
stc
repnz
jecxz
loopne
loope
mov
jmp
in
jns
movsb
inc
aad
jg
pop
mov
nop
lcall
ljmp
jns
in
pop
sub
mov
cmp
jle
xchg
inc
xlat
cwtl
sub
rcrl
pop
inc
mov
test
shl
fs
inc
fucomp
outsl
aas
test
adc
push
jno
and
jl
push
out
add
xchg
jb
sbb
dec
es
repnz
cltd
mov
bswap
movsl
mov
cmpb
dec
mov
lock
pop
pop
pop
cmp
xchg
bound
mov
jmp
fstps
and
lods
adc
and
clc
cld
dec
mov
out
outsl
out
add
ret
fmul
push
pop
push
iret
sbb
mov
and
clc
ss
mov
cmp
xchg
aas
sbb
push
sbb
ror
sbb
push
jmp
sub
adc
push
nop
or
dec
in
loopne
movsb
jbe
fadd
mov
sbb
inc
jmp
in
ss
adc
insl
iret
jae
or
push
daa
mov
scas
and
les
rclb
movsb
shrb
push
add
repnz
dec
add
ja
test
jecxz
test
jmp
and
ret
push
mov
mov
dec
xor
lea
scas
mov
sub
test
push
lahf
mov
cmpl
ja
lods
pop
pop
add
mov
fiaddl
mov
inc
sbb
aam
mov
pop
push
jmp
adc
sub
and
shlb
and
negl
or
nop
lcall
loop
lret
xchg
sahf
jne
push
call
cmp
push
jmp
in
testl
push
jmp
xchg
in
inc
and
xchg
mov
sahf
lea
adc
push
sti
sahf
scas
cltd
ret
das
repnz
xchg
popf
jg
mov
shrl
out
jno
adc
rorl
push
jns
movsl
pop
jbe
loop
cmp
je
and
sbb
negl
gs
test
ja
shrd
cld
pushf
pop
pop
loope
ret
popa
sbb
lock
jns
lahf
sub
lahf
xor
xchg
jne
jo
int3
es
ret
and
pop
xchg
inc
ljmp
jb
les
in
xchg
lds
xchg
sub
popf
xor
cs
mov
movsb
inc
jg
rorb
movsb
mov
rorb
enter
xor
imul
enter
mov
sbb
xor
and
inc
movsl
sbb
mov
imul
repnz
inc
nop
shrb
and
das
call
adc
and
fadd
imulb
dec
xchg
xchg
mov
das
imul
lock
in
frstor
aam
inc
mov
aaa
mov
or
add
loop
fadd
mov
fidivrl
mov
mov
fadd
mov
dec
lods
ss
cmp
out
popa
dec
add
movsb
daa
lods
jae
push
movsl
pop
or
dec
rcrb
into
mov
fs
fildll
fstl
imul
arpl
or
das
les
sbb
lea
dec
fsub
stos
ss
lods
sbb
push
fcom
lods
sub
push
push
pop
int
das
fbld
cld
add
mov
pop
and
aas
add
push
mov
xlat
notb
mov
ja
and
cmpsb
daa
inc
decl
cmp
frstor
in
cmp
fadd
jl
jbe
push
outsb
enter
test
ss
inc
dec
and
notb
ret
cs
mov
hlt
jno
lret
aam
push
dec
and
leave
sub
inc
xor
insl
lahf
inc
jmp
inc
in
icebp
mov
nop
stos
js
pop
cmpsl
adc
icebp
push
cmp
hlt
mov
jo
sbb
xchg
fisubrl
lcall
ret
cmp
add
repnz
sub
dec
test
push
xor
xchg
or
sub
shl
faddl
insb
in
adc
or
nop
push
scas
fnstsw
clc
jno
or
and
cld
movsl
gs
dec
and
loope
leave
pop
sub
data16
fisttps
sahf
daa
sub
mov
popf
popa
hlt
xchg
jp
ja
gs
cli
loop
test
cmp
fldenv
insl
movsb
pushf
sub
popl
mov
pop
push
enter
xchg
add
iret
mov
mov
xchg
adc
inc
inc
lock
loop
jecxz
pop
add
sti
inc
xchg
xchg
repz
mov
mov
add
push
lds
movsl
pop
jmp
lock
pop
shlb
pop
lret
xchg
and
cmpsl
mov
and
cmp
ror
xor
cmc
divb
xor
inc
out
fcom
lea
fidivl
addb
xchg
add
or
jne
iret
iret
and
int3
in
jecxz
stc
addb
test
and
xchg
sbb
cmc
lock
pop
inc
js
xchg
leave
dec
pop
or
aam
push
sub
cmp
icebp
pushf
or
ret
popf
or
xlat
xor
int
sbb
ret
clc
hlt
lods
mov
aaa
xchg
jmp
cli
xchg
mov
lret
lods
jnp
loopne
out
cmp
fbstp
pusha
test
cmp
jle
std
and
xchg
push
imul
pop
repnz
cli
xchg
pop
push
mov
dec
loop
pop
jmp
dec
mov
add
aad
lds
sub
call
or
push
lcall
rcll
mov
cltd
sub
loope
add
cmc
cs
repnz
sbb
or
dec
out
nop
add
mov
pop
sahf
pop
js
mov
xor
jp
loope
jbe
adc
shll
cli
mov
scas
cmpsl
or
cs
outsl
lahf
add
cwtl
fs
mov
repz
push
repnz
mov
mov
pop
inc
daa
das
xchg
mov
push
and
imul
dec
inc
cwtl
inc
sbb
jecxz
cs
mov
scas
lret
or
adc
loop
xchg
push
mov
or
mov
xor
punpckhwd
cmp
out
outsl
xchg
addb
mov
sbb
fsubrs
mov
sbb
xlat
xor
popf
push
inc
cltd
aad
and
or
js
aad
pop
sbb
les
outsb
lahf
out
std
mov
cmpsl
xchg
pop
jnp
iret
icebp
sahf
xchg
aad
mov
push
fwait
inc
pusha
stos
or
pushf
sbb
int
inc
mov
add
aam
jae
call
out
loope
add
aaa
hlt
or
sbb
orb
mov
cmc
inc
outsl
and
inc
sti
mulb
or
inc
pushf
data16
fcoml
clc
cltd
inc
rorb
jmp
insb
loop
sub
jge
mov
cmpsb
cmpsb
stos
add
mov
inc
call
in
aas
dec
push
mov
mov
imul
cltd
xor
pop
popf
xor
dec
add
jbe
pop
pusha
or
push
shll
push
and
xlat
loopne
test
mov
ret
jecxz
xchg
lahf
mov
jp
push
inc
mov
xor
sub
sub
in
adc
xor
cmc
push
jecxz
push
lahf
mov
cld
scas
lahf
sbb
adc
sbb
inc
pusha
and
jl
mov
sbb
and
test
add
in
lret
int
std
jns
adc
mov
sub
hlt
pop
xor
fdivs
and
mov
sbb
xor
jmp
or
mov
mov
scas
adc
hlt
gs
mov
outsl
cmp
jmp
xchg
lea
sbb
daa
xor
cmp
push
lcall
push
jl
cmp
dec
xor
pushf
push
out
mov
sbb
aam
pop
mov
adcl
dec
mov
jns
xchg
data16
clc
pop
enter
xchg
sub
mov
xlat
jmp
mov
mov
jp
out
pop
loope
push
jmp
cmpsl
mov
sub
adc
cmp
cmp
inc
es
jmp
lods
pop
sbb
addb
fxch
add
addr16
pusha
xchg
add
in
sub
fisttps
mov
mov
aas
ljmp
leave
cltd
leave
and
fwait
leave
in
in
add
inc
sub
and
push
insb
push
and
cs
dec
or
dec
packssdw
xor
xchg
bound
hlt
fsts
push
leave
ss
adc
inc
fsubrs
push
hlt
push
into
cmp
xchg
add
mov
aad
jno
fldenv
and
mov
or
cmp
adc
sbb
out
push
push
imul
inc
bound
mov
or
das
cmc
pop
mov
fstps
sub
sub
arpl
std
js
add
js
movb
rep
icebp
dec
out
xchg
sbb
jge
cmp
and
add
test
sub
test
and
fistpl
adc
or
and
or
icebp
mov
rclb
fisubrs
mov
sbbl
movsl
repz
dec
adc
xor
mov
test
rcl
adc
out
scas
adc
jo
xchg
aas
jne
shll
rcll
je
xchg
rcrl
das
cmpsb
into
inc
mov
shlb
xchg
stc
xor
loope
pop
mov
and
movq
int
std
cli
arpl
adc
out
add
adc
pop
add
xchg
xor
xchg
xchg
ret
in
sbb
dec
out
mov
daa
xor
mov
push
lahf
fwait
loopne
bound
mov
cmpsl
inc
xchg
bound
add
pop
lret
xor
scas
sub
jp
imul
jne
jecxz
cltd
fldcw
movsl
test
out
nop
xor
jne
mov
adc
add
cltd
cmpsb
divl
adc
fdivs
sbb
scas
pop
lods
and
jae
jecxz
mov
mov
add
and
scas
sub
dec
les
inc
mov
xchg
dec
pusha
ret
dec
ljmp
adc
pop
aas
in
popf
xor
pop
popf
inc
add
push
add
add
inc
push
pop
nop
cmp
and
sbb
shlb
lds
mov
cltd
push
rcrb
out
or
mov
push
stos
ljmp
ljmp
pop
and
xor
hlt
and
dec
aas
std
fnsave
test
jge
or
int3
dec
sub
pushf
cmp
ret
xor
jecxz
outsl
adc
pop
aad
or
pop
adc
xor
jb
xchg
xor
pop
mov
aam
adc
cmp
ret
loopne
mov
push
loop
jl
mov
mov
push
fists
mov
in
out
in
and
pop
sbb
out
xchg
jl
movsb
fnsave
push
jo
add
int3
ljmp
repnz
mov
or
pop
out
jb
daa
mov
repnz
out
sub
and
jecxz
or
arpl
and
imull
enter
cli
test
inc
fsubp
add
push
push
push
mov
iret
mov
es
pop
outsl
ja
fcmovnu
aaa
adc
ret
cmp
stc
and
fwait
clc
out
scas
int3
mov
pop
lcall
xchg
adc
stc
xor
xchg
mov
imull
xchg
or
sub
ds
inc
mov
mov
sub
xor
int
jp,pn
push
popf
pop
xor
push
iret
add
push
mov
pop
mov
cmpl
xor
pop
mov
aam
xor
push
mov
jnp
bound
rorb
mov
imul
shll
or
rorl
stos
adc
xor
dec
dec
jmp
data16
xchg
leave
in
testl
roll
adc
shll
outsl
cmp
ds
hlt
dec
cli
imul
sbb
jmp
inc
ljmp
negl
push
loopne
pop
cltd
fists
mov
ds
lcall
lret
add
cmp
pop
push
jl
fninit
jecxz
jecxz
sub
and
sbb
sub
sbb
rol
pop
or
xor
cld
jl
outsb
jg
popf
cmpsl
add
int3
cmc
dec
and
sub
push
add
xor
clc
xchg
das
stos
test
inc
dec
push
fstpt
push
pop
jne
insl
sahf
out
and
mov
pop
pushf
and
mov
ss
inc
es
inc
push
mov
dec
push
jb
mov
mov
in
mov
mov
arpl
cmc
enter
enter
dec
jmp
test
or
add
jb
push
sbb
mov
dec
push
pop
adc
pinsrw
imul
addl
inc
add
mov
mov
arpl
mov
and
pop
push
out
lret
jae
notl
enter
inc
mov
sub
std
pop
dec
xor
addr16
push
outsb
push
orb
push
cmp
mov
mov
test
push
mov
jne
push
sti
aam
clc
cmp
sti
adc
or
jmp
dec
cmp
outsb
pop
sub
cmp
mov
out
jnp
and
mov
addr16
loop
test
test
inc
add
mov
mov
sbb
scas
inc
clc
les
sbb
push
mov
xchg
test
pusha
std
cmp
out
push
cmp
dec
push
test
xchg
fimuls
into
cmc
sbb
push
jl
outsb
jb
shl
xor
mov
pop
pop
or
sahf
pop
mov
add
cld
int3
cld
cmpb
fdivs
push
xchg
sub
rcrb
inc
mov
xor
jmp
scas
stos
pop
dec
add
ret
dec
jbe
xchg
into
cmp
into
jae
or
hlt
push
ss
imul
rolb
shl
into
jg
xchg
xlat
push
les
inc
cmp
aas
inc
loop
jle
xor
and
stc
stos
pop
sahf
lret
stos
push
out
xor
and
fbld
inc
xchg
ljmp
dec
cld
add
inc
pushf
mov
pop
cld
xchg
cmp
test
jne
test
jecxz
and
ljmp
xor
sbb
insb
mov
lock
or
fcmovnbe
pop
xchg
jo
test
push
aas
lret
sub
stos
loop
push
ja
mov
sbbl
mov
daa
ss
fcompl
pop
lods
in
jl
sbb
jnp
jb
cmp
notb
push
xchg
arpl
sbb
cmp
clc
out
xchg
iret
lods
add
loope
xchg
inc
inc
fistpl
and
mov
cmp
mov
and
mov
adc
mov
sahf
add
enter
xchg
testb
loope
lcall
and
iret
aam
mov
adcb
xor
add
inc
rcrl
idivb
into
das
xchg
inc
push
iret
or
sub
faddl
scas
out
adc
jge
dec
iret
mov
subl
inc
add
scas
xor
pop
push
cmpsb
add
setp
mov
test
ja
mov
sti
cmpsl
jecxz
jns
xor
hlt
push
pop
sub
mov
iret
add
and
cmp
add
pop
mov
lock
in
ss
hlt
mov
xor
xchg
inc
repz
inc
or
fldcw
movsl
push
push
out
and
rorb
pop
and
das
pushf
outsl
sbb
lock
pop
mov
leave
sbb
push
push
pushf
out
repnz
fwait
or
fwait
push
xchg
mov
lcall
loop
je
and
sbb
pop
out
mov
push
in
lds
xchg
cld
rcrl
or
or
mov
call
push
bound
pop
mov
sbb
mov
je
lret
test
adc
adc
pop
add
lds
ret
cmc
inc
cmp
hlt
sbb
and
cmp
mov
mov
cltd
or
mov
mov
jno
jg
rorl
mov
mov
xchg
fisubrl
call
jns
pop
test
pop
vhaddps
test
enter
scas
int
jns
or
fdivl
clc
jns
inc
mov
fs
outsb
jmp
je
fldl
je
sbb
sbb
xor
into
push
fwait
insb
call
ret
outsb
pop
jecxz
sbb
adc
lods
mov
sub
jmp
dec
mov
test
ret
mov
mov
mov
mov
mov
rorb
xchg
aam
xchg
shrl
mov
loopne
cli
fwait
cli
cmpsb
jmp
add
sbbb
movsl
pop
xchg
mov
and
push
push
pop
fstp
arpl
scas
and
jb
push
or
dec
stos
data16
inc
bound
lock
test
cli
and
lock
sbb
mov
cs
shr
sarb
or
xlat
daa
jge
push
ret
cltd
call
pop
adc
push
push
or
filds
jne
imul
or
jb
in
xor
ret
mov
sbb
in
jo
les
mov
ret
xchg
in
lret
inc
aad
inc
test
mull
imul
pop
mov
inc
push
sbbb
loope
push
repz
lret
sub
cmp
pop
ljmp
cs
test
shlb
mov
in
sub
pop
loope
or
aas
xchg
mov
dec
negl
sbb
lcall
jge
mov
test
outsb
ja
out
stos
test
and
int3
sub
in
lret
add
in
xchg
jno
push
filds
lcall
inc
push
fldl
pop
jo
mov
or
pop
pop
ljmp
inc
push
das
adc
lods
shrd
mov
jns
push
daa
adc
adc
pop
mov
jno
movsl
inc
xlat
and
add
ffreep
mov
mov
pop
mov
ja
mov
pop
daa
std
jl
addr16
dec
jbe
lock
ret
adc
or
jl
fiadds
out
nop
data16
loop
int
push
test
pushf
popf
fstpt
jnp
pop
and
cmp
or
js
pop
ret
subb
xchg
and
insb
jecxz
sarl
jae
fiaddl
hlt
addr16
mov
jae
dec
lods
stc
shrl
xor
in
idivl
mov
xchg
xchg
and
sub
in
mov
push
fistl
or
mov
test
js
pop
jp
and
out
adc
mov
pushf
jae
rcr
nop
cmp
imul
lcall
imul
and
push
dec
lea
movb
lods
sub
jg
push
addl
cmpb
sti
andl
lods
lods
adcl
sub
andb
mov
or
das
adc
pusha
lret
lcall
jno
and
sbb
cli
rcl
pop
js
stc
clc
mov
cmp
in
dec
jo
int
test
adc
scas
sub
in
imul
aad
cmp
jmp
popa
inc
cmp
dec
or
cli
repz
adc
rcr
mov
faddl
jg
faddp
inc
cmpsb
mov
jno
cmc
sbb
shr
call
jle
ds
stos
cs
mov
and
adc
mov
sbb
adc
xchg
sahf
stc
das
aaa
test
mov
notl
or
dec
out
shll
les
lds
popa
cmp
icebp
mov
stc
push
jle
mov
mov
dec
pop
push
clc
shrl
mov
jmp
pop
add
ret
pop
mov
and
fdiv
lret
dec
rcrb
lds
sbb
and
shll
pop
lods
scas
sub
cmpl
pop
stos
inc
or
pop
xor
lahf
imul
and
pop
mov
sahf
insb
or
sbb
cmpsb
xchg
and
out
or
lret
insl
dec
divl
jg,pn
cmp
ss
xchg
inc
lea
mov
inc
mov
je
xchg
icebp
pop
test
mov
xchg
lock
xor
outsl
inc
sbb
je
lret
arpl
test
fwait
mov
xchg
and
loope
dec
pop
pop
pop
test
adc
mov
ljmp
push
mov
imul
sub
push
and
loope
and
int
mov
loopne
lcall
shlb
shll
das
xchg
or
mov
out
mov
add
push
arpl
pop
cmpsb
notb
sub
mov
cmp
dec
lcall
or
push
sbb
mov
sub
cwtl
and
or
orps
and
lock
cltd
inc
int3
aam
jno
cltd
pop
ficomps
out
sbb
push
lock
push
add
das
sbb
mov
xchg
es
pop
and
scas
cmp
in
jl
or
cmc
dec
movsl
fiaddl
pop
inc
xor
push
stc
inc
inc
mov
mov
sub
inc
les
push
push
dec
or
call
imul
scas
loopne
leave
movsl
ret
out
hlt
push
cwtl
data16
subl
mov
and
fisttps
cmp
push
sbb
pop
movsb
sub
mov
jne
and
mov
and
sbbl
mov
out
and
insl
or
testb
dec
sbb
sub
mov
clc
popa
in
fnsave
mov
inc
add
sbb
fdivr
xchg
cmp
aam
inc
les
hlt
inc
scas
xchg
lcall
repz
pusha
inc
es
in
clc
sbb
push
and
pusha
mov
addr16
cld
or
leave
mov
sub
movsb
inc
stos
sub
jne
mov
loope
mov
test
mov
xchg
add
add
push
cli
jg
add
pop
adcb
adc
lcall
add
arpl
repnz
sub
dec
scas
rclb
movsb
lcall
sub
and
mov
sbb
loopne
imul
pop
pop
fisubl
jno
sbb
fsubl
outsb
jb
ss
mov
mov
stos
imul
dec
push
jl
sub
cmp
es
mov
mov
mov
popa
sbb
addl
iret
xorl
dec
rclb
xchg
into
jl
mov
addr16
sbb
pop
imul
mov
enter
fs
loope
push
imul
inc
enter
sbbl
and
mov
dec
pop
aas
jl
pop
cmpsl
xor
lds
fcoml
fs
cmc
rorb
sbb
pop
enter
push
mov
test
push
dec
mov
fwait
cmpsl
loop
push
and
jb
in
and
in
hlt
push
jge
shll
pop
jbe
jbe
jbe
jge
fadds
stos
pusha
mov
daa
ret
xor
xchg
mov
xchg
fisttpll
hlt
loopne
mov
adc
mov
lahf
hlt
sbb
pop
or
dec
ds
popa
sbb
lods
push
adc
out
inc
pop
sarb
movb
insb
sbb
loop
popf
or
int3
aam
js
mov
and
subl
aaa
xchg
insb
add
and
loop
test
aaa
push
xchg
sbb
test
movl
scas
sarb
repz
and
sub
inc
push
adc
cmp
or
and
arpl
out
lds
arpl
fldl
dec
dec
xor
push
fdivrs
mov
dec
sub
mov
mov
sbb
fsubrp
mov
test
add
outsb
xchg
pop
adc
lret
jmp
mov
pop
cmpsb
sar
or
mov
dec
fs
push
sbb
sbb
imul
xchg
mov
lret
nop
xchg
cmp
sub
loope
cmp
dec
push
sahf
inc
dec
test
jmp
pusha
or
enter
jle
repz
sbbb
lods
push
pop
repz
inc
dec
aas
lret
add
divl
sub
xchg
fimull
mov
fcmovu
cmpsl
sbb
test
daa
push
shrl
arpl
xchg
testl
pop
inc
add
push
fdivrl
mov
test
adc
xor
cmp
xor
xchg
sub
gs
mov
jecxz
shll
lods
push
cmc
ret
dec
sub
mov
es
and
xor
xor
addr16
push
xchg
stc
mov
lret
mov
ret
cmp
or
std
ret
mov
aaa
hlt
outsl
push
lcall
push
pop
cli
push
xor
pop
bound
cwtl
icebp
jno
mov
xchg
push
push
ds
pop
rolb
sbb
sbb
add
bound
and
pusha
icebp
pop
out
jge
mov
sub
cmp
aas
push
inc
mov
push
mov
stos
jno
push
push
mov
xchg
adc
cld
adc
or
push
add
add
loopne
cltd
sbb
addl
cli
pop
xor
dec
cli
cmc
lret
sti
lock
aas
in
push
lcall
sub
int3
cltd
or
sti
fisubs
pop
cmpsl
data16
fcoml
loop
int
mov
mov
mov
repz
mull
imul
aas
dec
in
xlat
pushf
loope
add
gs
aad
jg,pn
ret
adc
and
dec
stos
insl
add
into
ret
sti
repnz
sbb
add
sbb
sub
push
in
sbb
shrl
scas
mov
xor
imul
mov
lcall
std
dec
test
lea
pop
call
scas
push
dec
gs
cmp
and
jecxz
mov
or
or
mov
lds
or
insb
sbb
out
inc
test
neg
andl
push
mov
xor
pop
and
imul
lock
inc
into
mov
clc
sub
push
and
hlt
sub
xor
xchg
scas
stos
es
out
xchg
jmp
dec
lret
xor
adc
push
mov
mov
push
jmp
les
fildll
or
imul
dec
fwait
mov
xchg
inc
mov
or
es
lcall
rorl
arpl
and
std
ds
sub
loope
jnp,pt
inc
das
outsb
lcall
dec
xchg
or
sub
stos
hlt
insb
testb
adc
push
in
popf
sbb
pop
dec
cmpsb
and
adc
cmp
and
sahf
jbe
add
and
mov
cmpsl
in
pusha
push
pushl
pop
add
jnp
fidivl
or
call
lret
cli
mov
cs
shl
icebp
lods
and
jo
into
xor
data16
js
and
push
mov
repz
jb
mov
mov
mov
into
cmp
sti
dec
or
in
adc
xrstor
jb
lret
dec
sbb
jecxz
or
dec
pusha
ds
movsb
frstor
jge
xchg
ss
mov
enter
inc
dec
enter
mov
inc
pushf
cld
push
imul
fstpt
or
xchg
aam
jl
sbb
or
cmp
sub
lock
repz
jae
push
in
js
out
cmove
hlt
les
fstpt
clc
jb
dec
or
mov
leave
mov
cld
add
xchg
dec
dec
pop
movb
push
rcrb
adc
adc
push
lahf
cmp
or
lret
rep
and
int3
mov
mov
inc
mov
popa
push
std
out
dec
and
mov
push
cltd
lock
sbb
cltd
in
mov
fs
aad
sub
xor
dec
ficoms
test
shll
jae
ficompl
sub
mov
adc
xchg
or
shl
cmp
pop
sub
push
mov
daa
xchg
std
shlb
mov
and
xor
dec
lret
sub
jmp
dec
lcall
hlt
mov
pop
jmp
xor
out
stos
adc
jbe
shlb
sbb
cmp
lods
fisubs
sbbl
dec
push
mov
in
lret
mov
pop
in
rol
mov
sub
xchg
icebp
push
or
jl
fldt
and
push
mov
jbe
lahf
cmc
out
out
sti
cs
into
loop
push
sub
jmp
pop
sbb
adc
fimuls
cmp
sbb
and
inc
cltd
decb
pop
ss
cmp
shll
clc
cli
sbb
push
adc
jmp
xchg
ficoml
mov
cmpsl
mov
popf
ljmp
jo
cmp
mov
sub
orb
sbbb
bound
cmp
movsl
mov
dec
mov
in
ja
icebp
sbb
push
and
enter
add
xchg
inc
cmpsb
add
fldcw
and
lods
dec
insb
push
sbbb
mov
pop
adc
xchg
inc
adc
insb
hlt
mov
fcmovne
sub
jmp
add
xchg
scas
outsb
sbb
dec
aad
cmc
cmp
addr16
sti
dec
mov
inc
fwait
subb
add
dec
ret
push
leave
outsb
rclb
cmp
sbb
add
inc
dec
ret
and
repz
lods
pop
xchg
sbb
lods
jecxz
subb
jge
lods
loopne
cld
ss
nop
dec
nop
cld
mov
insl
cmp
clc
adc
cmp
xchg
adc
sti
adc
ds
scas
sub
loopne
js
es
inc
lret
cmp
jge
sbb
stos
aaa
push
lods
int
or
xchg
adc
test
add
popf
or
add
jno
xor
ljmp
fbstp
mov
xor
xor
loop
push
sbb
cmp
cmc
andb
ret
sbb
into
ljmp
outsb
mov
lea
sub
enter
jg
mov
jp
mov
stc
pop
inc
ds
mov
fwait
lea
das
repz
or
lock
movsb
aaa
mov
movb
out
roll
sti
cli
mov
push
popf
push
mov
or
fimuls
in
dec
rorb
dec
sbb
xrelease
movsl
inc
cwtl
in
inc
or
sub
movl
shlb
inc
sbb
jp
mov
hlt
and
mov
pop
push
test
mov
scas
into
mov
jnp
push
mov
iret
sub
lods
xchg
es
cmp
mov
lods
pop
out
cli
flds
data16
add
subl
push
mov
loop
jnp
test
fstpt
iret
out
arpl
data16
cld
loop
adc
pop
adc
ret
sub
dec
icebp
jle
jno
ret
cmc
xchg
and
jnp
cltd
pop
mov
cmp
test
sbb
adc
dec
and
leave
add
test
dec
dec
or
xor
sbb
fmull
xchg
mov
std
in
loopne
call
xchg
push
xchg
push
das
ja
sub
insl
sbbl
mov
push
gs
outsl
repz
xchg
and
es
insl
mov
jge
xor
cmp
mov
insl
jnp
adc
xchg
pop
cwtl
push
mov
xor
mov
push
dec
out
push
and
inc
imul
cwtl
in
mov
mov
stos
dec
sarb
mov
cmp
rcl
xchg
dec
and
ss
mov
in
sahf
fs
xchg
ficomps
mov
cmpsl
xor
outsl
jne
mov
test
addr16
rorl
adc
andb
daa
fcomp
fldenv
push
inc
mov
inc
rcl
adc
cmp
test
aad
add
pusha
sbb
dec
mov
aad
inc
push
xor
rcll
lahf
xchg
aad
xchg
xlat
call
scas
insb
xor
push
pushf
fwait
movb
push
aam
mov
jmp
or
fs
cmp
adc
and
jo
jo
insl
xchg
xchg
int3
cs
dec
mov
jno
add
out
push
ljmp
mov
addr16
jle
pop
pop
mov
testl
test
push
mov
sub
enter
loope
lret
add
or
aad
cmp
repz
mov
mov
jge
std
imul
mov
jp
xor
popf
xchg
or
xor
aam
inc
push
xchg
mov
jp
jnp
aas
mov
jecxz
lock
mov
push
ljmp
jl
rclb
aam
pop
lods
add
mov
sub
pop
cmpsl
jp
daa
mov
cs
repz
push
fildl
xchg
rcrl
jo
mov
mov
cltd
pop
out
pop
sbb
mov
rdmsr
aas
xor
lret
loope
ret
out
adc
in
pusha
je
cmp
and
mov
or
pop
subl
ret
add
inc
cmc
mov
rcll
ud1
fdivl
pop
lret
adc
out
rol
dec
mov
dec
icebp
and
mov
loope
or
cmpsb
cwtl
lcall
orl
loop
gs
and
push
jg
bound
add
lcall
imul
out
mov
in
scas
xor
cmp
cli
sub
jle
ss
dec
push
dec
fucomp
es
rcrb
push
push
or
lods
repz
jecxz
jns
insl
popf
dec
jmp
sti
sub
imul
les
pop
ret
lret
call
jmp
push
sti
fwait
ret
or
pop
lcall
pop
pop
scas
cmp
loop
or
shl
stos
out
push
jno
roll
xchg
jb
jb
sbb
std
imull
test
mov
ds
cli
mov
sbb
xor
nop
sbb
aad
push
mov
cld
pop
js
cltd
lret
or
dec
into
lcall
xchg
add
and
into
cmc
movsb
mov
and
pop
iret
imul
mov
out
push
pop
mov
push
jns
insb
inc
movsb
xor
adc
xor
xchg
scas
mov
or
sahf
sbb
mov
arpl
cld
in
xchg
int
xchg
sbb
imul
mov
xchg
pop
test
sbb
or
out
inc
nop
push
lahf
xchg
cmp
inc
cli
jns
lea
dec
cmp
sub
pop
inc
lret
xchg
inc
add
mov
jo
adc
out
insl
cmp
rolb
pop
leave
and
sub
or
daa
sbb
lods
add
fiaddl
dec
nop
shlb
mov
aas
stos
jecxz
cli
fwait
inc
jb
inc
jns
cwtl
into
jnp
cmc
push
jae
push
cmp
sub
mov
dec
cld
xchg
in
pop
mov
sub
and
xchg
sbb
data16
test
arpl
movsl
add
pop
xchg
dec
aaa
hlt
sub
movsb
jecxz
sub
scas
movl
jl
adcb
in
gs
and
bound
and
and
lcall
daa
mov
sub
cld
loop
andl
push
lret
lahf
clc
push
repz
dec
sbb
or
repnz
cmpsl
jge
dec
jbe
shrl
in
or
dec
call
mov
mov
icebp
pop
ljmp
repnz
xchg
sbb
fwait
pop
xor
mov
sbb
fsubl
add
xor
pop
test
jnp
xor
repz
leave
int
inc
xchg
inc
cmp
incb
ss
test
push
xor
pop
lds
imul
adcl
loope
repnz
out
das
ds
lcall
mov
arpl
and
adc
scas
sbb
pop
call
xchg
inc
mov
cmp
aad
jg
gs
popa
test
adcl
insb
push
jne
cmp
outsb
cmp
or
rcr
xchg
test
pushf
add
pop
sub
shlb
test
popa
imul
mov
mov
fwait
clc
or
push
insb
jecxz
sub
mov
outsb
or
icebp
lods
xchg
int
movsb
sbbb
into
sub
aam
lcall
cmpsl
mov
arpl
popa
inc
xchg
cmp
ja
mov
std
push
ss
xchg
push
cvttps2pi
scas
mov
rol
lds
outsl
push
popf
fwait
jecxz
xchg
fs
aas
dec
mov
pop
sbb
shrb
pushf
sub
in
dec
cmpsl
ficoml
jge
and
push
scas
out
sbb
movsl
in
test
ret
or
test
mov
loopne
jge
cmp
push
rcll
test
addr16
sub
and
out
mov
lods
scas
int
lods
sti
jge
stos
lahf
xchg
cmc
or
mov
stos
jp
lahf
scas
hlt
std
mov
stos
adc
mov
sub
sbb
xlat
mov
dec
xchg
xchg
mov
and
cld
ljmp
cs
and
inc
adc
sbb
insb
mov
scas
ljmp
and
leave
dec
leave
mov
add
push
mov
adc
xor
sti
fsubs
and
push
movsl
xchg
lcall
mov
leave
pop
jae
inc
pop
or
shrl
dec
xchg
push
push
in
mov
mov
and
adc
mov
fldenv
and
mull
pop
ret
lret
mov
mov
jecxz
in
das
clc
cmpsb
ljmp
pop
idivb
sub
bound
roll
xchg
push
jo
xor
jp
jae
dec
test
mov
bound
mov
pop
negb
mov
fnstenv
jbe
pop
adc
mov
xchg
scas
add
insb
fsubl
in
adc
loop
ss
ljmp
stos
fwait
mov
into
inc
cmpsb
jg
jge
jno
imul
cs
lds
rcll
nop
xor
jecxz
sub
lcall
popf
mov
mov
cmp
jl
js
sbb
ljmp
push
stos
sbb
mov
pop
xor
in
sub
xor
pop
xchg
xchg
clc
pop
int3
mov
idivl
cmp
xor
sbb
xchg
into
out
fdivrs
ss
mov
test
pop
lret
sub
push
xchg
or
inc
push
in
adc
xchg
cmc
sti
int
xchg
pop
and
out
add
xchg
ret
scas
mov
jp
mov
fsubp
lcall
inc
and
cmc
fsts
pop
lcall
pop
popf
js
xchg
and
sub
or
cmp
jne
xchg
icebp
fidivs
jmp
lcall
jg
ljmp
jl
ss
sub
pusha
xor
adc
sub
inc
call
jmp
pop
xor
and
rorl
add
pop
lret
je
mov
xchg
fs
pop
jns
xor
or
data16
ret
icebp
rolb
ja
scas
add
scas
cmp
cli
pop
cmp
mov
dec
and
push
pop
inc
cmpsl
add
out
outsl
insb
adc
mov
pop
test
idiv
fisubrs
lahf
sub
in
or
cmpsl
pop
fiadds
rcrl
idivb
lahf
int
sbbb
sub
stos
pop
push
mov
imul
push
std
cli
mov
shlb
int3
fdivr
movsb
xor
dec
mov
xchg
mov
and
data16
iret
fnsave
dec
xor
nop
outsb
movsb
mov
scas
lock
mov
je
sarb
and
cmp
and
jecxz
in
dec
pop
icebp
or
lcall
ja
fpatan
popa
sbbl
subb
leave
or
insb
imul
aas
imul
sarl
jp
imul
push
mov
je
imul
add
sub
out
pop
ficoml
adc
in
cmp
clc
rol
incb
pop
roll
sub
insb
daa
loope
add
outsl
cli
pop
and
pop
dec
and
xchg
int3
or
pop
cmp
movsl
mov
push
sahf
outsl
xlat
inc
fsubrl
cltd
and
cmpsl
jae
pop
test
test
and
bound
mov
movhps
in
jge
out
std
or
push
into
jmp
sbb
jne
sbb
dec
daa
jne
mov
test
dec
out
inc
hlt
push
lret
mov
imul
enter
mov
sbbb
push
inc
jl
mov
adc
xor
iret
lret
movsb
aas
or
data16
dec
fmull
dec
pop
dec
xchg
and
pop
xchg
mov
scas
and
mov
adc
mov
adc
xchg
and
inc
sbb
push
adc
cli
std
jmp
imul
push
scas
clc
or
imulb
bound
les
loopne
pop
stos
mov
cmc
pop
cmp
xchg
jb
sbb
movl
mov
sbbl
jnp
imul
xor
jle
sub
mov
fildll
mov
xor
out
stos
inc
popf
push
xorl
and
and
adc
and
push
cltd
push
mov
mov
decl
jmp
dec
jl
cmp
jb
sub
lret
cmpsl
mov
cmp
add
int3
and
js
and
cmp
ret
mov
add
rol
mov
enter
jae
in
leave
bound
hlt
sub
inc
or
or
xor
faddl
lahf
mov
insl
mov
cmp
int
subl
dec
cmpb
in
in
cmc
dec
dec
mov
cmp
xor
jmp
out
ljmp
jp
pop
hlt
ja
or
push
rcl
in
loope
jnp
adc
add
or
or
pusha
lret
fidivs
push
fdivp
and
sub
rcrl
mov
arpl
das
jmp
mov
adc
dec
xchg
outsb
or
testl
jg
cmp
xchg
movsb
js
cmp
outsb
repnz
push
ljmp
popf
dec
jo
int3
andb
push
xor
out
dec
cmp
xor
mov
inc
adc
mov
aam
sbb
mov
add
sbb
mov
cmp
jne
ret
mov
or
dec
ret
pop
pop
sub
inc
push
test
adc
imulb
arpl
fcomps
mov
fwait
gs
notb
arpl
popa
movsb
add
xchg
clc
pop
and
fisubrs
xchg
loop
pop
bound
adc
mov
mov
stos
adc
mov
sbb
add
xchg
fwait
mov
adc
popf
cmp
sub
jbe
jp
add
jmp
subb
test
pusha
dec
out
dec
pop
xor
rcll
nop
movsb
fildl
stos
fiaddl
or
cmp
mov
mov
or
je
mov
jmp
dec
dec
ss
adc
add
mov
mov
jecxz
arpl
xor
cmp
and
stos
jno
dec
std
push
adc
repz
ret
sbb
pop
daa
cmp
adc
sahf
mov
add
popf
inc
pushf
cwtl
mov
push
lret
sahf
movsl
outsl
pop
cmpsl
fmuls
inc
jp
hlt
out
in
test
outsb
dec
or
mov
jno
push
add
mov
fsubrl
test
fwait
lods
cmp
mov
clc
ljmp
sbb
cmp
jmp
jle
ficompl
pop
adc
jo
inc
sbb
jl
pop
sarb
pop
jle
push
fidivrl
push
pop
xor
and
addl
sti
aam
and
fsubrs
shl
and
mov
xchg
xor
sbb
and
divb
push
fstpt
cmp
dec
stos
xlat
lret
push
or
arpl
xor
ret
and
cltd
and
xchg
clc
out
xchg
les
inc
push
mov
adcl
movsl
mov
adc
sub
push
xor
bswap
in
pop
les
add
inc
pusha
lret
xor
push
rcrl
ret
adc
xor
in
pop
out
rcrb
adc
imul
xor
repnz
ds
rcll
sub
int
cmp
fs
popf
fwait
pushf
rolb
bound
mov
stos
popa
push
pop
imul
sbb
jmp
pop
or
ljmp
dec
stos
lods
stos
sub
push
sahf
stos
jp
ror
xchg
inc
jecxz
loope
jbe
aad
js,pn
cwtl
mov
jmp
popl
fmul
xchg
ret
inc
stos
or
movsb
xchg
std
into
adc
call
arpl
and
scas
movsb
ljmp
sub
push
inc
popa
cmpb
sbb
out
jmp
adc
pop
adc
jbe
shlb
or
jno
and
cmc
mov
stc
add
lret
adc
dec
push
leave
enter
filds
scas
sub
push
insl
mov
push
lods
inc
mov
and
movl
xchg
movsb
fwait
sbb
aam
jb
inc
inc
mov
orl
aam
mov
bound
jmp
lds
add
out
or
cmp
fnstenv
fwait
cli
xor
dec
xchg
test
xlat
adc
inc
xchg
in
and
rcl
pop
inc
jmp
or
aaa
pop
cwtl
repz
mov
mov
scas
jmp
xor
sub
in
adc
leave
ret
cmp
mov
addr16
arpl
mov
pusha
mov
outsl
fwait
mov
lcall
jmp
dec
int3
jecxz
add
loop
and
push
outsl
cmp
push
sbb
xchg
dec
dec
jmp
sbb
aad
in
bound
push
mov
dec
loop
ljmp
adc
jg
xchg
dec
mov
inc
push
shrb
int3
and
push
xor
pop
pop
pop
fists
sbb
shll
mov
in
jne
mov
pop
jecxz
iret
fisttps
jae
pop
iret
popa
cli
sbb
cmp
sbb
sbb
addl
inc
dec
fsubrl
add
sub
inc
mov
fdivr
lods
xor
inc
push
inc
xchg
sti
lret
push
cld
out
icebp
pop
pop
rcll
sbb
mov
jne
adc
sub
stos
push
cmp
sbb
mov
mov
xchg
mov
inc
inc
jb
inc
in
scas
icebp
sbb
lea
mov
push
outsb
into
pop
mov
in
and
pusha
and
jg
sbb
icebp
inc
decb
insl
push
in
stos
clc
mov
push
inc
outsl
mov
cmp
insl
mov
or
fildl
jbe
ljmp
testl
ja
xchg
icebp
loopne
ret
sub
lods
cmp
xchg
repnz
xor
push
sub
das
jbe
sbb
cli
enter
xchg
scas
push
popl
int3
inc
add
out
js
rclb
rcr
addr16
and
pushf
inc
dec
outsb
movsb
push
sbb
insb
cmp
clc
jl
loopne
in
xchg
push
lea
push
xor
cmpsl
iret
sub
xor
or
shlb
add
aad
pop
mov
push
inc
jb
iret
adc
outsl
movsl
sub
and
cmc
xor
dec
repz
push
dec
test
xchg
jb
and
in
js
in
add
fldenv
cmp
test
outsl
or
dec
mov
ljmp
bound
cmp
fsubrl
pop
mov
xchg
cmp
loop
sbb
dec
cmp
bound
xor
cmovo
imul
das
mov
xchg
sbb
pop
xor
and
xchg
cli
pushf
xchg
sbb
jno
cltd
stc
cmp
sub
xchg
fnop
mov
adc
mov
es
pop
cs
movsb
sbb
shlb
cmp
aaa
or
das
ljmp
insl
sysenter
push
push
mov
pop
jnp
das
mov
mov
add
aas
mov
sbb
fstps
inc
sahf
jle
hlt
lcall
mov
adc
aam
ja
imul
stos
int
dec
jns
adc
sub
pop
sbb
mov
mov
into
pop
sbb
xchg
pop
inc
xor
adc
sbb
and
push
xchg
enter
bound
adc
or
rorl
cmp
nop
cltd
fucom
pop
xchg
ljmp
fistpll
adc
jne
fisubs
adc
jp
xor
roll
xor
rcr
jmp
pusha
cli
xchg
gs
pop
rcrb
xorb
or
test
fmulp
int3
out
mov
rorl
jle
fucomi
mov
jns
addr16
mov
lds
mov
cmp
mov
add
adc
inc
adc
out
xchg
inc
adcb
into
mov
cli
aas
adcl
mov
xchg
aaa
add
int3
sub
xchg
mov
ret
ss
xchg
enter
or
jge
lret
mov
adc
das
lods
mov
sub
jge
mov
cmp
adc
inc
cli
lock
fnsave
ud2
ja
outsl
fs
sbb
sbb
test
dec
cmc
inc
cmp
add
ja
jae
inc
ljmp
lods
cwtl
pop
and
arpl
ja
les
pop
inc
popf
outsb
repz
into
popf
test
stos
mov
pop
sub
jne
sarb
test
and
in
icebp
cmp
arpl
lds
inc
and
lds
adc
push
push
scas
sub
pop
pop
xchg
or
daa
fnsave
hlt
pop
call
mov
cs
pop
jle
pop
sbb
mulb
pop
clc
cmp
imul
fisttpll
repnz
mov
fwait
mov
out
jo
adc
adc
pop
bound
je
loopne
mov
mov
lahf
dec
ffree
jge
inc
xchg
mov
pushf
pusha
push
dec
shl
cwtl
int3
jge
arpl
js
pushl
push
cmp
lea
sub
cmp
repnz
xor
ljmp
es
je
insb
ret
mov
shl
mov
jne
xor
xchg
xor
xchg
cmpsl
pop
jmp
pop
mov
sub
or
outsl
pop
lods
jle
std
push
mov
cmpb
mov
iret
lds
out
pop
ret
inc
mov
and
mov
push
std
or
sbb
sub
loop
mov
movb
subb
mov
cmpsb
data16
xor
adc
add
xor
insb
leave
stos
or
rcl
push
sbb
and
dec
or
pop
and
add
jmp
mov
sub
test
adc
out
sub
mov
pop
inc
mov
ss
xchg
test
xlat
outsb
fmuls
bound
js
cltd
dec
mov
cltd
loopne
orb
mov
pop
aad
fincstp
mov
in
push
push
jmp
add
inc
xchg
and
sub
outsb
push
lcall
rolb
inc
mov
add
out
pop
add
arpl
sub
sub
pop
pop
dec
lds
and
loopne
fdivp
xor
jp
pushf
push
mov
sbb
cs
and
cmp
lret
lock
pop
cmp
pop
sub
adc
add
pop
pop
repz
repnz
mov
xor
mov
call
hlt
fdivrl
loop
orl
insl
jo
xor
xchg
and
shlb
sub
xor
mov
js
mov
stos
inc
out
pop
pop
loop
popf
ds
lret
add
sub
sbb
faddl
jb
sub
cld
decb
mov
push
sahf
cli
inc
sbb
out
adc
inc
push
jge
dec
out
add
push
cld
aaa
ficoml
jno
in
cmp
outsl
mov
in
jb
cmp
je
or
inc
mov
in
test
cmp
out
fsubl
pop
add
push
fists
push
ret
pop
movsl
pop
sbb
adc
aad
test
mov
test
sahf
das
xor
push
or
fiadds
mov
inc
stos
xchg
out
mov
mov
adc
das
cltd
dec
in
jae
sub
lock
out
inc
insl
gs
ds
cmp
cmpsl
jne
and
sub
ret
mov
movb
inc
nop
mov
mov
jg
mov
sbb
int3
or
pop
mov
jp
sub
iret
jp
inc
pop
mov
sub
adc
xor
push
ljmp
adc
jno
out
mov
movsb
ret
leave
sub
test
ret
out
loopne
mov
push
ficompl
hlt
mov
mov
pop
outsb
dec
jl
adc
jle
pop
iret
js
and
test
popf
lods
into
dec
sbb
pop
push
xchg
in
repnz
mov
in
aaa
mov
push
or
adc
cmp
mov
rorb
jae
inc
add
cmp
push
mov
repz
stc
stos
push
shrl
jmp
aam
repnz
in
inc
inc
fmuls
mov
add
addb
divl
mov
lcall
jmp
jge
jp
dec
loop
cmp
movsb
loop
loop
iret
and
rolb
clc
push
mov
add
push
sbb
dec
pop
iret
push
fcompl
rolb
push
sbb
push
imul
sarl
mov
outsl
cltd
lcall
pop
subl
dec
xor
fsubrl
push
or
pop
or
ja
mov
pushf
sbb
paddusb
lods
or
in
inc
mov
arpl
jno
test
inc
les
inc
pop
divl
cmp
js
cmp
push
xor
pop
repnz
adc
insl
dec
into
out
iret
testl
sub
fimuls
ret
jge
outsb
push
fisttpl
mov
insb
xorb
iret
inc
cs
push
dec
pop
int3
sahf
cmp
pop
pop
sub
add
jne
push
js
mov
sub
cli
mov
pusha
subl
and
arpl
std
cmp
jmp
mov
pop
mov
dec
das
out
inc
cld
mov
add
xchg
xchg
inc
cmpb
xor
nop
xor
outsl
dec
std
fstpl
aad
in
loope
push
addl
cmp
jmp
xor
roll
nop
push
adc
xorb
adc
pop
out
repz
shll
mov
test
pushf
add
mov
adc
bound
ret
rol
mov
cmp
into
in
addr16
mov
or
xchg
ja
dec
imul
outsl
mov
nop
pop
mov
cmp
dec
fnstcw
lods
shrb
mov
pop
jmp
in
inc
mov
dec
mov
mov
loope
sub
sbb
cmp
add
hlt
pushf
and
sahf
cs
cmp
fcos
fisubs
shll
dec
insb
sub
xor
push
int
out
lds
dec
sti
imul
fmull
aam
scas
push
test
test
push
inc
add
divb
xor
fs
cmp
add
nop
std
outsl
and
fmull
push
mov
outsl
les
add
xorl
insb
pop
test
sbb
lods
cmp
mov
cmc
call
mov
loope
pushf
sarb
fldt
fstl
lods
lret
lods
pusha
xor
int
adcl
pop
data16
out
les
or
inc
or
dec
cmp
inc
add
and
lret
in
and
std
pop
in
xor
ds
add
jg,pn
repz
insb
das
bnd
dec
lahf
sbb
or
push
dec
mov
lock
icebp
dec
jle
push
pop
adc
jl
pushf
hlt
pusha
lds
fldt
pop
xor
mov
dec
out
pop
xchg
cmpsb
jmp
es
mov
in
push
pop
add
ficompl
push
divb
cwtl
lret
dec
jp
xor
sub
mov
loopne
xchg
add
sahf
sub
cwtl
mov
mov
add
addr16
out
inc
xor
mov
jbe
add
sbb
lods
out
mov
fwait
arpl
jecxz
mov
jg
lcall
lret
dec
jbe
movsl
icebp
push
ret
ficompl
or
ror
push
mov
jae
push
loopne
imul
push
sbb
into
cmp
imul
xchg
add
mov
adc
push
jge
mov
dec
jo
cmc
out
or
jnp
sbb
sbb
lcall
imul
jmp
sub
out
add
ror
stc
add
xor
xor
cli
aam
stc
outsb
int
fdivrp
arpl
fcoml
jecxz
jecxz
cmp
leave
in
iret
fsts
sbb
jge
xchg
push
out
fcmove
aam
inc
add
fdivrl
dec
xchg
nop
out
pusha
adc
xchg
adc
repnz
lea
rolb
fldenv
inc
push
pop
int
fists
cmpsb
rorl
mov
pop
jns
pop
push
stos
jns
cmp
addr16
cld
cmpsl
test
gs
data16
or
dec
adc
or
xchg
outsl
fsubr
push
mov
push
movsb
imul
or
rolb
sub
imul
dec
add
ret
cmp
mov
sbb
push
icebp
into
push
jmp
jg
gs
sarb
cli
test
jno
or
xor
cmp
adc
gs
adc
arpl
loopne
outsb
cmp
add
xor
push
icebp
je
xor
stos
in
aas
inc
lock
fnstsw
sbb
add
mov
add
pop
pop
add
sbb
ror
lock
push
push
out
xor
dec
adc
sub
repnz
or
inc
xchg
dec
jb
das
jno
std
or
mov
movsb
lock
or
pop
inc
cmp
push
jb
mov
int
adc
nop
sbb
cli
fisttpll
mov
adc
insl
push
mov
push
jae
fs
or
scas
icebp
outsl
out
jnp
stc
mov
ds
pop
imul
repnz
add
xchg
in
dec
popf
pop
cmp
sbb
dec
push
fisubrl
jg
in
pop
xchg
add
add
and
insb
aad
mov
push
adc
and
lds
inc
jle
gs
scas
push
cwtl
lret
xor
and
sbb
and
bound
movsl
roll
pop
popa
jne
sahf
dec
xchg
arpl
add
add
jge
pop
xor
xor
insb
nop
in
sbb
pop
in
dec
inc
or
dec
lret
arpl
xchg
movsl
xor
mov
in
mov
sbb
enter
dec
xchg
je
fcmovnbe
sbb
pusha
cmp
mov
mov
dec
sbb
scas
pop
jecxz
mov
ret
xchg
jnp
call
loopne
jbe
jae
pop
push
std
push
push
sub
ret
loop
lret
scas
in
por
stc
es
push
imul
fiaddl
cmp
sbb
add
mov
jbe
pop
in
ds
jmp
pop
pop
inc
stc
xchg
hlt
jbe
sub
push
addr16
mov
mov
inc
and
cmp
repnz
cld
lcall
test
in
xorl
xlat
dec
imul
aam
js
jnp
cld
addr16
fdivl
pop
in
sbbl
cmp
pcmpeqd
test
dec
sub
iret
and
cmc
lahf
in
push
push
jno
iret
stos
fcom
cli
in
gs
cmpsb
mov
ret
gs
inc
cmc
mov
mov
sub
jae
loopne
rcr
fisubs
cmp
aad
subl
mov
mov
push
xchg
test
orb
mov
sahf
push
mov
out
sub
xchg
fistpl
mov
jbe
lds
fcomps
hlt
loope
imull
movsb
push
push
rorl
jne
xchg
int3
xchg
cmpb
push
xor
pop
pushf
dec
add
jmp
jmp
out
mov
sbb
adc
adc
dec
add
jo
push
je
jecxz
xlat
mov
xchg
dec
ret
or
fnsave
jo
xor
cmc
xlat
jl
movsl
jle
mov
mov
sub
adc
aaa
adc
movsl
ds
aam
idivb
shlb
lcall
out
push
xor
insl
fildl
stos
and
lret
shrl
xchg
shr
into
lock
sub
ret
fsts
pushl
or
lds
insb
jge
in
mov
out
in
add
adc
test
cwtl
lds
cmpsl
pusha
sbb
adc
fdivr
es
dec
scas
pusha
lods
pop
pop
jl
adc
imul
lcall
dec
into
enter
sub
dec
pop
call
cwtl
adc
dec
int
pop
jmp
popa
mov
adc
and
lea
xchg
mov
mov
fadd
or
sbb
and
cmc
ror
pop
shr
adc
and
cmpsl
mov
lods
pop
jge
loopne
ja
jl
adc
mov
psrlw
out
xchg
add
add
jp
in
loop
xor
cmp
stc
outsl
stos
in
dec
pushf
jl
faddl
jno
adc
cmp
mov
xchg
push
xor
push
add
daa
cwtl
mov
loopne
call
jmp
dec
add
pop
in
sub
hlt
or
inc
testb
stos
jne
pop
movsl
mov
pusha
pop
dec
je
pop
mov
jnp,pt
push
mov
or
jae
mov
dec
jge
cs
push
dec
je
dec
icebp
sbb
push
jne
push
mov
rcrl
sets
mov
pop
aas
lods
xchg
out
lret
test
add
lahf
pop
or
in
or
rcrl
adc
icebp
icebp
or
or
dec
int3
jl
aam
cmpl
mov
adc
aas
cmp
sub
push
mov
adcl
fmuls
fmuls
mov
jbe
lock
fwait
cmp
add
jo
addl
adc
jmp
jno
sahf
cmp
jns
sub
fisubl
movsl
or
cmp
loop
pop
insl
jne
dec
xor
pushf
xchg
xor
cmp
cli
inc
ss
mov
adc
sbb
imul
out
dec
les
stos
xchg
pop
dec
push
sarb
loope
mov
cmp
xor
fidivl
orl
arpl
mov
inc
adc
loop
insl
pop
pmullw
fildll
inc
ds
ror
xchg
jb
icebp
fs
sub
jbe
cmp
mov
dec
jle
and
into
inc
les
rcl
jp
cmc
xchg
fisttps
adc
sti
test
and
cmp
cmp
das
pop
mov
xchg
cwtl
mov
ljmp
aam
imul
mov
out
adc
iret
fildl
addl
shlb
pop
enter
negl
and
push
xchg
aaa
pushf
mov
stc
loope
out
pop
not
popa
xor
jle
jb
inc
add
inc
or
cmp
loop
mov
dec
mov
rcrl
subb
add
dec
addl
and
test
subl
jbe
insb
pop
cmpsl
cltd
and
jbe
sti
insb
ret
or
push
sarb
cmc
pop
inc
add
add
and
sub
ret
dec
lods
mov
add
nop
xchg
testb
fmul
cli
jl
pop
inc
in
push
mov
add
fwait
jmp
or
mov
es
js
cli
sub
popa
iret
addb
pop
mov
mov
stc
pop
jne
lret
add
push
shlb
insl
xchg
mov
pusha
scas
jnp
in
mov
push
nop
jae
mov
mov
adc
push
sti
sbb
jecxz
int3
scas
fwait
sub
out
jecxz
cmc
aam
xchg
jge
mov
xor
adc
out
test
jne
fs
adc
iret
mov
call
jbe
lock
shl
test
inc
or
cli
out
sub
ret
mov
mov
or
xlat
cmpb
and
or
jmp
mov
xchg
pusha
xorb
cltd
mov
ficompl
xor
mov
mov
add
mov
jb
jo
mov
pop
dec
scas
fcoml
outsb
enter
xchg
mov
sarl
ljmp
leave
cli
subl
inc
je
xor
mov
pop
scas
cmc
push
jae
mov
lret
push
cmp
fsts
call
cmp
stos
push
repnz
sbb
and
out
push
pop
sub
xor
cli
sub
dec
adc
adc
pop
sub
movsl
sub
jne
cmpsb
push
mov
jg
test
jmp
push
mov
into
lret
dec
je
cld
jg
ret
sti
les
aam
cmp
xchg
mov
mov
movsl
add
cmpsl
test
mov
push
mov
lds
push
ja
addr16
pop
cli
in
sbb
sbb
mov
lcall
das
mov
xor
push
mov
arpl
scas
cltd
pop
popa
push
push
loopne
gs
loop
or
push
jo
jns
outsl
sbb
pop
scas
shrb
jecxz
adc
rolb
pop
addb
push
es
fmul
adc
add
call
pop
jge
jae
lods
repz
arpl
fbld
lods
xchg
or
stos
jae
cmp
fsubs
out
lret
sub
adc
cmp
pop
fwait
or
arpl
push
out
xchg
sbb
lea
xlat
dec
fdivl
xor
push
or
lcall
push
dec
in
clc
aad
inc
mov
and
and
pop
into
in
pop
fcomi
push
sbb
mov
mov
sbb
or
insb
pop
int3
dec
jae
gs
out
cmp
aad
test
push
add
and
mov
bound
mov
jnp
sub
xor
ret
icebp
pushf
out
shr
imul
lahf
loop
xor
imulb
fadd
xor
and
lods
ja
outsb
clc
das
lret
mov
stos
mov
loopne
xchg
and
imul
cmpsb
jae
cwtl
cli
mov
aaa
add
pop
cli
shll
and
adc
mov
ret
bound
xlat
pop
sbb
pushl
daa
aas
sbb
mov
sbb
cmp
popf
inc
lods
pop
push
out
xchg
fidivrl
sbbb
xchg
inc
iret
out
movsl
mov
or
ret
popa
popa
out
sarl
gs
int
sbb
xchg
sbb
xchg
push
jl
xor
push
and
jno
jg
adc
cltd
leave
pop
mov
rcll
dec
dec
ror
push
cltd
lret
loop
cmp
test
xchg
mov
cwtl
xchg
mov
lahf
das
xchg
sbb
addr16
cmp
mov
xor
push
pop
lock
leave
add
stos
mov
popa
sti
sbb
es
push
push
sarl
or
leave
fnsave
push
xchg
rcrl
xor
in
adc
and
xor
movsb
into
lret
shrl
mov
call
subl
popf
int3
mov
js
sub
mov
std
and
andb
loop
es
mov
arpl
rcr
out
mov
pop
mov
or
jae
out
fdivr
movsl
rorb
mov
mov
nop
popa
fcomi
imul
repnz
lock
or
pop
xor
ljmp
and
das
pop
cmpsl
int
inc
shll
roll
mov
out
sbb
push
push
in
aad
xchg
js
lahf
js
dec
hlt
lcall
loopne
out
iret
jp
outsl
mov
mov
mov
mov
adc
jp
test
js
ljmp
outsl
or
push
lock
enter
mov
ljmp
loopne
iret
cld
outsl
sarb
pusha
fdivr
mov
inc
add
inc
pop
pop
mov
out
repz
scas
or
mov
add
mov
xor
sti
test
push
das
stc
sub
mov
arpl
dec
int
test
pop
andl
xchg
insb
aad
jo
xor
sbb
push
aas
adc
and
je
fcomps
xor
loopne
lods
add
or
adc
in
leave
push
mov
mov
add
mov
sbb
or
pushl
mov
lock
mov
push
jmp
lret
pop
frstor
adc
iret
xchg
lea
xor
rorb
or
leave
cwtl
mov
out
dec
loope
lds
xchg
data16
xchg
xchg
sbb
scas
mov
flds
mov
clc
ja
xor
clc
loopne
or
jl
mov
popa
std
fidivrl
ret
in
cmp
dec
push
and
repz
mov
dec
sbb
jg
dec
xchg
push
jo
fiaddl
xchg
xor
into
dec
subl
dec
mov
add
outsb
adcl
andb
test
jle
adc
cmp
vpermi2d
and
pop
push
ucomiss
dec
lahf
mov
push
cmpsb
push
std
int
je
sbb
shlb
xchg
cmp
inc
sbb
hlt
mov
aaa
mov
pop
jecxz
xchg
cmc
xchg
scas
jle
or
inc
hlt
cmc
cmp
and
mov
jnp
std
loop
jge
jne
xchg
clc
aas
cmp
mov
enter
out
adc
repnz
shll
shrl
cmpb
mov
and
inc
test
movsl
sbb
jno
cmc
insl
fisubrs
push
jno
popf
push
push
repz
sub
mov
or
sub
xor
movsl
push
mov
fisubl
loope
add
movsb
cmp
jmp
add
jbe
popf
call
mov
xchg
scas
push
or
jne
popa
scas
andb
repnz
imul
or
mov
js
mov
mov
or
sub
mov
ficoml
and
adc
pop
adc
out
xor
cmp
cmpsl
lret
jg
sbb
clc
mov
out
imul
sbb
scas
mov
pop
mov
clc
cs
incb
sbb
fisubl
movsb
daa
mov
push
xchg
adc
sbb
add
cmp
int3
fs
in
hlt
in
pop
pop
inc
test
lea
sti
dec
dec
push
aaa
fsts
cmpb
inc
insb
test
add
lds
pop
add
fcomps
lock
aaa
in
xchg
xchg
inc
push
mov
push
and
add
iret
leave
and
cltd
out
jae
mov
sub
and
dec
cmp
xor
fcompl
dec
ja
decl
xchg
int
inc
cmp
adc
hlt
subb
inc
test
mov
loope
loopne
enter
mov
push
aam
dec
xor
repz
cmp
bound
sub
call
xchg
inc
int
imul
aad
sbb
je
mov
cwtl
mov
int
jbe
jns
sbb
xor
in
dec
xchg
mov
mov
mov
fcomip
fidivrl
mov
std
xchg
fimull
clc
out
mov
stos
jle
ljmp
add
and
xchg
mov
repz
xor
sbb
and
out
add
jg
jl
pop
push
push
xchg
fisubs
jecxz
mov
fdiv
cmp
fnsave
cltd
call
ljmp
ret
add
jmp
js
mov
ficompl
daa
inc
aaa
ret
test
std
in
scas
mov
xor
pop
inc
dec
sbb
mov
out
adc
mov
mov
adc
mov
mov
ror
icebp
movsb
loopne
stos
sub
iret
mov
or
adc
xchg
mov
in
pop
rolb
mov
out
fcoml
push
ljmp
push
pop
add
in
mov
loopne
mov
leave
xchg
inc
mov
dec
fwait
outsb
jae
fistps
sarl
pop
dec
shrb
pop
dec
and
xor
movsb
adc
fstl
adc
push
mov
sarl
pop
pop
sbb
stos
in
pop
sarl
stos
std
push
and
dec
mov
sub
adc
jg
roll
adc
in
and
cli
daa
adc
std
in
add
loop
cmpl
xchg
call
cmp
testb
adc
add
dec
pop
inc
push
je
or
inc
push
xchg
out
pop
in
inc
loop
out
lds
adc
jp
pusha
int3
cmpsl
sbb
push
sub
lock
cmp
xchg
fsts
mov
mov
inc
pop
incb
inc
fistps
mov
adc
aas
jge
xchg
imul
push
jne
test
daa
adc
movsb
dec
jmp
mov
test
cmp
jmp
xchg
pusha
jl
ret
mov
mov
mov
imul
lret
aaa
imul
jg
and
pop
sub
sbb
cld
insb
stos
push
daa
mov
jmp
push
btr
aad
cmp
test
mov
push
push
ljmp
dec
ds
jp
push
or
mov
lret
and
clc
mov
mov
fstpt
mov
shl
ds
leave
je
lahf
dec
adc
insb
jg
or
test
push
rcl
xlat
jae
daa
pop
pop
xor
cltd
mov
xchg
pop
pop
xor
xlat
or
pop
les
add
xor
out
popf
fistl
out
fs
sub
xor
call
mov
stc
cmp
popl
mov
push
pop
insb
dec
notb
xlat
mov
cmp
push
rcrl
adc
jmp
ljmp
pop
inc
xchg
sbb
jnp
adc
repnz
cltd
push
subl
dec
stc
mov
imul
xchg
scas
push
test
popf
in
and
aaa
stc
cmp
in
xor
jne
mov
cli
mov
pop
mov
mov
enter
push
xchg
test
add
and
dec
jmp
loope
inc
pop
mov
add
sub
xor
push
inc
jmp
test
adcl
andl
lds
cmpsl
xor
vmovntps
dec
test
stc
popa
scas
fisubl
lock
jo
mov
dec
fwait
movsl
cmc
dec
leave
cmc
nop
pop
add
in
repnz
aas
in
pop
jns
js
push
push
jno
dec
mov
ret
xor
push
dec
jp
push
inc
jmp
pop
sbb
sbb
jns
mov
mov
cmp
addr16
mov
jle
into
out
mov
add
ljmp
xchg
mov
mov
mov
sub
lcall
lret
pop
jle
addl
jmp
in
int
dec
mov
in
cld
add
jne
gs
repnz
xchg
xchg
sub
cltd
ja
loope
mov
imul
mov
jnp
out
test
loopne
xchg
adc
fimuls
int3
jecxz
jg
ljmp
movl
mov
add
and
jp
cmc
inc
dec
push
push
cmpsb
pop
cmp
popa
add
aam
out
mov
mov
xchg
sbb
int3
lea
cmpb
xorl
scas
lret
fs
pop
push
adc
out
test
fnstenv
mov
mov
out
enter
sub
cli
jo
nop
adc
or
test
stos
mov
push
inc
and
jmp
jecxz
push
add
lret
jecxz
scas
add
add
ret
sub
and
and
in
sbb
test
leave
push
loop
push
jne
stos
and
cld
sbb
ds
jmp
jno
pop
ret
add
pushf
mov
sub
cltd
loopne
repnz
enter
movl
mov
aad
in
sub
adc
sub
mov
dec
ret
sbb
pop
mov
xchg
xchg
sbb
fmul
mov
push
pushf
test
imul
xor
xor
or
xor
ds
xchg
in
xorb
arpl
mov
xchg
stos
out
inc
adc
fistpll
mov
sbb
dec
cmpsb
pushf
iret
aas
and
dec
mov
dec
rcrl
int3
inc
shll
pusha
std
or
xor
push
pop
inc
testl
adc
lcall
std
fnstsw
mov
mov
sbb
add
push
push
mov
mov
push
in
jbe
addr16
mov
mov
inc
pop
outsl
nop
fldcw
push
add
add
adc
push
into
andl
and
aam
aas
fmull
cmp
ds
mov
adc
dec
jne
xchg
mov
adc
inc
arpl
popa
and
icebp
out
negb
and
leave
dec
push
stos
xchg
jp
add
sti
push
cwtl
std
inc
leave
stc
popf
ljmp
sbb
push
and
sahf
lods
xchg
fisttpl
push
sahf
cld
xor
ds
in
ficoml
cmpsl
jge
pop
addr16
or
es
or
leave
add
push
fldcw
jmp
sub
adc
cmp
outsl
push
mov
lret
xchg
lods
into
mov
ss
mov
xor
xchg
lods
mull
gs
lcall
jne
mov
shlb
sti
jecxz
inc
push
mov
sub
out
cmp
jmp
ds
loope
cld
mov
push
outsl
mov
sub
lahf
shlb
push
idivl
out
add
ret
cmp
popa
testb
adc
ss
repnz
push
sbb
scas
test
mov
clc
fadd
mov
cltd
adc
push
addr16
push
mov
mov
jo
mov
cltd
xchg
push
iret
lea
and
pop
mov
mov
adc
add
cltd
arpl
test
shrb
lret
jle
ljmp
and
pop
jno
fisubrl
idiv
sbb
adc
adc
arpl
into
add
or
ret
shrl
fs
and
out
aas
aam
hlt
mov
arpl
cmp
add
or
xor
jp
fs
testb
je
and
fadd
cmp
stc
out
or
call
xchg
ss
adc
xor
sub
ret
and
std
xor
stc
dec
lcall
ljmp
ds
les
rclb
addl
fildl
or
enter
add
inc
mov
cmpl
jae
sarl
cltd
or
sahf
daa
xchg
insb
in
inc
pop
incb
inc
enter
ljmp
dec
and
cmp
repnz
aad
test
sub
cmp
xchg
cmp
cmp
xor
in
imul
scas
mov
push
jne
mov
dec
sub
insl
mov
scas
and
jo
aaa
ret
pop
jae
test
cmc
mov
ret
and
pop
fdivp
dec
mov
pop
shlb
jge
sti
icebp
rcll
mov
aas
push
dec
or
js
lret
push
xchg
dec
addr16
mov
push
mov
movsb
shl
stc
sahf
xor
pushf
push
and
subb
lea
das
pop
icebp
lds
punpcklwd
jae
xchg
cld
lcall
sub
dec
cmc
loop
xchg
push
cmp
jmp
mov
xchg
xor
add
cmp
xor
sub
dec
xor
pop
test
inc
cwtl
lret
mov
sbb
ret
fisubl
out
into
xor
or
xor
xorb
xchg
pop
insb
paddusb
xchg
cli
jb
mov
cmc
out
sbb
dec
out
pop
dec
loope
mov
insl
mov
pop
fs
ds
stos
push
shll
jb
cli
mov
lds
ret
jge,pt
mov
xor
aad
inc
ret
fildl
mov
jmp
push
shll
imull
movq
xchg
adc
shr
iret
jge
lods
inc
add
jnp
js
mov
xchg
aam
sbb
fistpll
insl
loop
sbb
push
mov
sub
push
inc
cmpb
sbb
push
dec
ret
in
lds
sub
adc
xlat
adc
push
pushf
xchg
das
fldt
sti
pop
call
sti
fstl
lock
mov
push
inc
or
jl
mov
cmpsb
and
cld
les
lea
imul
pop
imul
pop
mov
cld
jp,pt
cvtpi2ps
adc
cmp
push
jmp
scas
mov
aas
mov
fists
bound
cmp
leave
push
test
pusha
sbb
outsl
call
and
ret
xor
lcall
xchg
js
xchg
stc
dec
lret
sub
push
cwtl
outsb
mov
dec
lcall
fcomps
xorb
je
insl
mov
jp
sub
xchg
int
mov
xchg
mov
mov
xchg
and
xchg
outsl
or
adc
ja
lods
inc
shll
add
sbb
sub
mov
mov
ljmp
pusha
cmpb
decl
insl
inc
adc
dec
add
cmpsb
cmp
mov
adc
jle
push
lods
cmp
cmpsl
stc
xchg
jp
and
push
jbe
xor
addl
hlt
shrb
lock
mov
out
lock
fistpll
xor
adc
cmp
lea
push
ljmp
sti
gs
movsb
rcrb
shlb
cmp
mov
fdivrl
mull
sub
jecxz
testb
cmpsl
fcoml
jmp
pushf
inc
repz
leave
dec
adc
push
mov
ss
xor
jecxz
addr16
jno
test
fiaddl
mov
add
clc
pop
xor
jns
clc
or
cs
xchg
add
daa
dec
ja
push
mov
sub
jns
lret
cmp
pop
push
pop
icebp
gs
jl
sub
pop
mov
lea
jge
daa
rcll
lahf
mov
mov
add
je
loop
jp
xchg
scas
dec
aaa
mov
and
mov
xor
sti
clc
pop
out
cld
jmp
sbb
ds
fcmovb
jg
adc
jge
nop
xor
ljmp
add
push
jg
hlt
add
sub
mov
sahf
enter
push
jg
lcall
jb
sbb
ja
cli
out
xchg
daa
testb
push
imul
adc
sbb
bound
push
cmpsl
push
mov
nop
add
push
ljmp
fsub
dec
scas
aas
jb
add
movsb
iret
data16
gs
hlt
gs
fisttpl
int3
out
sahf
nop
lods
ficoml
orl
mov
lea
in
cmpsl
push
jp
mov
pop
pop
arpl
inc
lods
sub
xchg
movl
fisubs
xor
jae
insl
mov
or
or
mov
xchg
nop
insb
push
daa
loope
inc
js
clc
mov
cltd
arpl
pop
pop
orl
subb
lret
pop
cmp
sub
das
mov
inc
lret
push
mov
out
cmpl
inc
mov
rclb
xchg
mov
leave
sbb
inc
outsl
into
cmp
jle
mov
dec
test
arpl
iret
mov
dec
adc
in
jnp
sub
sbb
jnp
arpl
ljmp
lds
mov
cmp
scas
xchg
jnp
sub
and
adc
repnz
loopne
sbb
call
push
aaa
xchg
push
xchg
inc
pushf
jnp
sbb
dec
fcmovne
push
out
out
dec
push
mov
mov
mov
and
cmpsb
lds
adc
aad
adc
fdivrp
iret
sarl
cmpsl
iret
sub
inc
scas
scas
add
push
call
leave
movsb
call
into
sbb
mov
hlt
mov
dec
adc
outsl
sbb
push
adc
stc
mov
les
ljmp
sbb
mov
int
jo
dec
xor
sahf
out
imul
mov
mov
je
nop
scas
repz
bound
and
cld
in
aad
daa
xor
jo
jmp
test
pop
popa
jg
mov
xor
loopne
cmp
push
and
arpl
addr16
lcall
xchg
movsl
mov
jo
test
xchg
nop
fsubrl
sbb
pslld
loop
xchg
mov
not
mov
lods
loope
push
adc
mov
das
jo
out
scas
and
fwait
pop
adc
shl
jnp
sub
mov
shrb
call
cmp
jmp
cltd
push
out
in
aad
in
pop
int
or
xchg
sti
loopne
jecxz
cli
inc
sub
negb
das
nop
outsb
repz
jge
andb
jecxz
mov
nop
in
addl
scas
cs
jmp
pop
xor
stos
pop
xchg
sbb
and
jp
lret
popf
cmp
mov
xchg
pop
xor
mov
dec
jmp
adc
cli
mov
mov
mov
push
jp
insl
dec
jge
stos
test
pop
gs
jo
inc
cmp
scas
sub
js
cmp
and
fisubl
adc
and
fsub
js
mov
adc
movsl
data16
lret
inc
inc
jl
mov
mov
push
inc
loope
jecxz
or
add
cwtl
mov
xchg
push
jmp
sbb
lock
pop
popf
xor
iret
addr16
mov
js
lret
sbb
and
mov
push
into
mov
leave
mov
es
and
jno
and
or
push
jns
jnp
sbb
xor
mov
scas
pop
into
push
and
cmp
jbe
test
in
mov
popa
sbb
jns
pusha
jb
std
and
jecxz
pop
pop
repz
sbb
in
or
or
mov
movsb
in
push
push
out
int3
imul
test
xor
mov
popf
out
jnp
push
mov
jmp
aad
insb
imul
sti
addb
mov
inc
sahf
dec
aaa
cmpsl
scas
lea
jle
sbbb
rcrl
shlb
pop
mov
pop
sub
hlt
popa
popa
lahf
rclb
mov
ljmp
jl
aam
or
xchg
ja
cld
jbe
adc
jns
lret
test
mov
fcoml
in
dec
dec
dec
sbb
test
pop
cmpsb
mov
and
hlt
push
enter
movsb
jns
push
cmp
dec
lret
jbe
xor
lea
notl
sbb
ljmp
add
leave
push
fnstcw
call
inc
test
ds
or
outsb
insb
sbb
sbb
outsb
inc
sbb
roll
or
iret
mov
icebp
test
out
cs
fwait
sub
and
lock
cwtl
push
dec
gs
es
push
fistl
out
lods
and
loope
mov
xchg
mov
pop
sub
stos
push
xchg
adc
mov
cs
out
adc
stos
adcb
icebp
jae
mov
fmuls
loope
fisttpll
cmp
dec
xor
push
sbb
add
orb
test
push
add
inc
test
insl
test
nop
add
push
sub
xor
xchg
cmpsl
jge
ja
or
insb
inc
mov
pop
push
fsubr
pop
cwtl
push
or
aad
mov
loopew
pop
pop
push
jge
push
lret
cmp
in
jb
adcl
sbb
dec
xchg
jmp
outsb
movsb
jns
fldl
popa
ja
mov
push
subl
jno
jl
sbb
shll
inc
or
ret
jle
loop
push
adc
dec
and
dec
add
cmp
aaa
add
arpl
repnz
rclb
push
fildll
mov
flds
out
scas
fisubs
adc
inc
ltr
pop
dec
inc
push
dec
mov
jge
fdiv
xchg
stos
jae
adc
push
sar
daa
xchg
pop
sub
mov
stos
out
push
dec
stos
ds
xchg
add
mov
sbb
pop
mov
aas
mov
mov
je
push
lret
inc
cs
mov
clc
xor
inc
mov
jmp
add
fldl
pop
or
imul
pop
or
adc
rcll
bnd
mov
xchg
imul
mov
test
imul
pop
loop
bnd
add
push
fistl
xor
test
clc
pop
push
mov
cmpl
adc
mov
xor
pop
lret
orb
pop
test
int
test
add
negl
xor
add
inc
and
into
mov
test
inc
mov
or
in
mov
ret
push
push
sub
mov
sub
mov
jo
cmpsl
xchg
stc
data16
mov
loop
pop
inc
je
mov
sub
faddl
scas
lea
lcall
pusha
adc
pop
mov
and
into
shrl
movb
pop
add
mov
out
loop
popa
pop
iret
insl
cmp
sbb
mov
inc
lcall
add
mov
jae
dec
jge
out
inc
jle
in
int3
push
cli
push
jo
fiadds
sub
repnz
xor
push
push
sub
and
add
cmp
shll
mov
sub
sbb
cld
push
lea
inc
outsb
stc
push
addr16
daa
mov
dec
jno
and
xchg
sub
ret
insl
dec
sbb
ret
repnz
push
scas
xchg
cmc
push
jl
decb
and
cmc
stc
adc
and
xchg
loope
out
xchg
in
nop
mov
xchg
mov
jg
cmp
call
mov
outsb
pusha
mov
test
test
sub
inc
push
and
mov
fwait
movsb
pop
push
lcall
jne
add
ss
lods
fstpt
or
fildl
pop
mov
cwtl
popa
cmp
xlat
loop
jnp
imul
cli
push
sbb
repnz
sti
xor
js
mov
mov
add
fidivs
mov
pop
clc
push
mov
cwtl
push
cmp
adc
les
movsb
add
daa
xor
int3
jle
into
mov
fidivl
and
sahf
iret
add
test
lcall
shr
sbb
and
imull
test
adc
mov
mov
out
imul
push
into
dec
inc
icebp
mov
mov
and
adc
mov
mov
decl
ror
cmp
cmp
fldl
mov
or
lock
pop
sahf
xchg
and
cltd
daa
insb
dec
add
jnp
in
and
vcvtpd2dqx
pop
cmp
cmp
setb
in
rorl
flds
loopne
or
sbb
scas
insb
inc
or
aas
push
mov
add
inc
mov
stos
xor
jae
xchg
cmc
or
pop
lahf
int3
xor
cmp
je
nop
ret
or
pushf
push
ljmp
hlt
out
sbb
fdivrs
add
mov
mov
leave
push
test
pop
pop
scas
rcl
ljmp
jo
jnp
pushf
sbb
adc
mov
add
aas
mov
lds
mov
mov
imul
dec
sbb
lods
rcll
cmp
fimull
sub
xor
cmp
inc
test
test
add
test
xchg
in
in
pop
rorl
loopne
push
je
out
ret
sub
loop
pop
pop
das
pop
sbb
out
pop
sbb
xorl
subl
cmp
dec
inc
clc
dec
std
arpl
dec
in
jnp
and
addr16
les
push
mov
pushf
push
fisubrs
je
jp
mov
cli
mov
lds
lock
test
inc
pusha
fs
jae
inc
out
aam
xlat
leave
pop
mov
push
fnstsw
aam
sbb
push
adc
mov
js
jg
jnp
xor
jne
pop
mov
nop
sbb
xchg
jbe
sbb
subb
repnz
jmp
or
pop
loopne
mov
cmp
pushf
cltd
mov
roll
loop
enter
xchg
mov
add
repz
adc
sbb
mov
rorl
adc
cmp
mov
es
xor
lock
push
test
std
jns
xchg
push
mov
jg
xchg
xchg
lret
imul
movsl
lds
add
leave
stos
imul
sbb
push
xor
pop
lea
mov
jne
mov
add
pop
fnstenv
jmp
shlb
stos
lcall
jae
jno
cwtl
inc
mov
div
mov
cmpsb
fsub
push
sbb
push
dec
mov
adc
lret
sbb
mov
lods
cmp
mov
rorl
bound
in
sbb
jecxz
mov
clc
sti
ja
data16
mov
pusha
push
sub
popf
mov
sub
das
fcomi
mov
xchg
in
push
orl
test
stos
push
jmp
push
xabort
or
jmp
add
ret
and
ret
loope
fs
push
loop
fisubl
imul
fidivl
loopne
pop
imul
iret
movsb
mov
cmpl
sub
outsl
in
or
mov
jecxz
sbb
inc
push
in
jb
fldt
cmpsb
adc
mov
ljmp
xchg
mov
xchg
or
clc
xchg
xchg
int3
lods
add
nop
in
in
mov
leave
outsb
mov
dec
push
imul
mov
pop
and
xchg
xor
jmp
inc
repnz
aad
lahf
cmp
adc
mov
stos
mov
dec
lret
push
test
push
test
sub
loop
leave
aam
movsl
xor
rcrl
subl
nop
pop
push
std
lret
push
pushl
inc
adc
push
ljmp
xchg
out
cmpsl
dec
xorl
xor
cmpsl
cmp
jg
js
push
loopne
shl
add
dec
sbb
and
testl
inc
jae
cld
dec
pop
das
sub
push
aaa
push
pop
add
jns
rcl
inc
and
loope
dec
movsb
mov
jnp
and
fstpl
lahf
iret
push
lahf
ss
mov
out
insl
bswap
and
and
adc
and
repz
pop
js
or
cmp
gs
scas
adc
incl
jecxz
scas
and
jne
fcompl
sub
pop
lret
push
push
mov
cmpsl
lds
jp
push
cli
fcmovnb
sbb
sar
push
imull
insb
stos
push
pop
repnz
insl
bound
int
decw
test
xor
xchg
mov
mov
mov
jmp
das
std
cmp
xchg
sbb
aam
push
adc
rclb
in
sbb
sub
jp
out
test
inc
sub
cltd
int
xlat
mov
xlat
jno
das
inc
out
dec
pop
insl
sbb
bound
repz
sub
cmp
jnp
mov
into
xchg
pop
or
shr
test
xor
xchg
push
mov
xchg
sbb
cmp
nop
pop
inc
and
enter
add
mov
mov
sub
pop
xchg
inc
in
loope
movsl
jbe
sub
fdivr
mov
sub
mov
enter
jle
xchg
bound
push
sbb
sti
xor
fmuls
push
xchg
inc
jl
jecxz
aad
cmp
fisttpll
rolb
pop
xor
shlb
out
int3
pop
dec
out
mov
and
push
xchg
inc
loop
mov
ds
es
mov
js
jecxz
es
xor
jne
ret
data16
jnp
das
xchg
in
cmpsb
rol
cli
mov
repnz
cmp
les
int
push
addr16
fdivp
jmp
jp
jecxz
mov
xor
sbb
mov
mov
inc
jno
pop
and
push
imul
pop
mov
stos
mov
adc
popf
pop
mov
cmpsl
mov
mov
insb
shlb
dec
icebp
mov
add
and
mov
popf
mov
push
sub
push
inc
lahf
dec
testb
cltd
push
sahf
into
or
out
jne
cld
mov
loope
pusha
fisttpll
sub
xor
dec
in
push
pop
movsl
jg
mov
loopne
adc
stos
mov
pop
ret
int
cli
rcll
mov
push
nop
jmp
mov
aaa
popf
xchg
out
xchg
xchg
imul
adc
inc
dec
insb
ds
call
xchg
test
xchg
xor
loopne
lcall
mov
movsl
loope
lds
cmp
inc
inc
fstpt
xchg
int3
mov
insl
out
cmpsb
cld
mov
and
or
or
icebp
iret
mov
hlt
xchg
fwait
das
xchg
lock
pop
cmp
rorb
mov
outsl
jns
push
ficoms
jno
mov
jno
push
pop
add
repnz
sbb
pop
mov
inc
push
sbb
xchg
dec
loopne
xchg
mov
fs
lret
mov
mov
test
test
hlt
add
scas
and
fwait
jl
inc
adc
ss
fstpl
or
mov
inc
add
cmc
dec
xchg
pop
pop
out
push
call
sbb
sarb
cmp
test
inc
jbe
add
inc
loop
or
dec
push
pop
fstpt
xchg
adc
repnz
sub
ficompl
daa
into
xor
mov
sbb
test
lret
mov
push
rclb
mov
and
je
jnp
push
mov
xorb
dec
xchg
push
imul
and
loop
cmp
xchg
call
xchg
dec
pop
add
xor
cltd
bound
inc
andb
lds
pushf
idivl
lret
xchg
and
pop
sub
loopne
icebp
jae
mov
shlb
jbe
lds
mov
outsl
pop
stos
jb
push
aam
sahf
rcl
cmp
jbe
mov
xchg
sub
lcall
pop
repz
or
jecxz
movsl
adcl
popa
inc
sub
mov
in
cs
sbb
lods
incb
sti
mov
pop
cmp
jecxz
scas
incb
cmp
repnz
or
pop
push
out
pop
mov
cmp
stos
mov
dec
std
sarl
and
push
inc
sbb
hlt
xchg
mov
xchg
add
movsb
movsl
mov
ret
ret
pop
movsb
leave
imul
push
das
lret
jg
daa
mov
lahf
push
xchg
dec
shlb
xlat
into
ret
xor
cmp
loopne
test
les
jne
mov
sbb
push
std
icebp
pop
test
pop
lock
xor
pushf
test
jns
sbb
sarb
rcr
gs
and
insb
adc
dec
jo
in
loopne
mov
xor
pop
mov
mov
outsb
pushf
jp
lods
add
inc
subb
mov
sbb
in
test
fdivrs
cmc
jnp
and
mov
out
icebp
xchg
clc
iret
js
mov
ret
jbe
and
cmp
push
mov
inc
jne
xor
add
pop
scas
pushf
insl
sub
dec
mov
pushf
pop
in
movsl
pushf
stc
movsl
and
aad
mov
dec
inc
adc
mov
or
fimuls
adc
popf
loope
cmpsb
ss
and
push
gs
push
sub
push
or
loopne
or
pop
cmp
mov
xchg
dec
sti
fs
sbb
imul
dec
and
or
cmp
mov
dec
roll
sbb
mov
push
xchg
popa
sbb
dec
mov
add
mov
or
mov
dec
out
sub
movsb
sar
test
adc
test
inc
test
sub
shrl
xchg
mov
sbb
add
lcall
repnz
pop
mov
sub
ret
nop
movsl
jne
into
lea
sbb
jae
push
scas
push
inc
push
mov
push
call
mov
mov
sahf
scas
inc
jmp
push
add
data16
outsb
jb
mov
dec
push
push
mov
cmp
mov
mov
cmp
inc
and
cltd
push
cmp
push
movsb
inc
xchg
mov
negb
lret
xor
addl
das
or
dec
out
dec
mov
cmp
shll
ljmp
rorl
pop
les
addl
sub
xchg
pop
imul
mov
mov
lods
ret
movsb
cmpsb
lcall
fistps
pop
xchg
hlt
mov
push
cmp
adc
sub
andb
fstpl
cmc
int
push
pop
call
insl
mov
stc
inc
in
mov
adc
push
rcll
sub
mov
sahf
xchg
push
inc
add
test
movsb
cltd
jle
jmp
push
adc
cmp
mov
leave
sti
adc
sbb
idivb
push
ret
add
ss
in
gs
jbe
lcall
movl
in
leave
aam
inc
mov
xor
jmp
inc
mov
sti
mov
fsub
rcll
inc
push
sub
lahf
stc
mov
cltd
pop
mov
mov
mov
adc
xor
push
les
mov
insb
ljmp
mov
mov
push
fildll
lret
xchg
test
popa
addl
nop
adc
icebp
pop
add
int3
cmp
mul
mov
jecxz
movsl
push
mov
add
fwait
push
push
push
shrl
pop
dec
je
ljmp
cwtl
cld
or
jecxz
dec
nop
scas
push
in
pop
into
test
xor
xlat
shrb
jmp
jno
pop
js
ja
into
add
mov
pop
adc
scas
enter
xlat
jg
xchg
push
push
xor
xchg
sti
jnp
dec
movsb
inc
jp
mov
sub
sbb
fs
inc
sbb
xor
lret
gs
subl
pop
adc
mov
sbb
cmpsl
test
pop
mov
cmp
pop
rcr
mov
mov
pop
mov
push
lahf
lret
xchg
or
lcall
daa
rclb
pushl
sub
fimuls
xlat
fs
jecxz
jae
pop
mov
sbb
add
push
mov
fidivrl
enter
mov
mov
dec
test
sub
mov
cmp
mov
or
cmpsl
push
gs
lcallw
pusha
jp
xlat
jg
iret
addr16
jnp
pop
xchg
fnstsw
subb
or
mov
mov
mov
sub
roll
cmpl
lcall
push
loope
fists
lret
xchg
insb
test
xchg
enter
sbb
aam
mov
inc
in
out
orps
sub
in
jp
imulb
es
mov
sbb
sbb
pop
shrb
lahf
mov
sub
lea
jecxz
hlt
push
mov
int
aad
adc
or
idivl
ljmp
ficoms
xchg
xor
fidivrl
inc
mov
jp
into
cmpb
enter
dec
and
fbld
cmc
mov
aas
mov
cmovp
add
lret
cs
lcall
leave
rcrl
call
ljmp
jae
fcompl
xor
pop
loopne
imul
dec
mov
inc
adc
lods
xlat
push
int
dec
ret
ljmp
push
cmc
data16
mov
add
mov
cli
int
push
adc
push
stc
mov
push
pop
nop
mov
out
fs
or
xor
jnp
mov
inc
mov
xchg
bound
leave
and
mov
arpl
cmp
shrl
sbb
sub
arpl
pop
ss
push
scas
cmp
aas
cmp
or
inc
sub
inc
push
xor
popa
xchg
cmp
jmp
and
jecxz
repz
lahf
nop
pop
and
popf
and
popf
int
gs
je
dec
xor
aas
lret
sti
scas
mov
push
add
lahf
filds
std
test
scas
push
add
mov
loopne
fistl
je
fcoml
mov
jno
js
push
insb
push
jg
in
ja
cltd
stc
sbb
je
fisttps
dec
int3
dec
xlat
dec
cmpsb
sub
mov
jae
mov
push
dec
in
ljmp
sub
mov
sbb
xchg
lret
jno
pop
lahf
sub
xchg
stc
pop
dec
mov
mov
cld
stos
sbb
ja
hlt
int3
push
push
in
repnz
int
pop
dec
repz
adc
jae
in
pusha
dec
ljmp
inc
inc
lret
inc
dec
loopne
adc
pop
mov
test
xchg
push
and
jno
push
arpl
repz
shll
stos
in
std
icebp
and
dec
xchg
mov
negl
fistps
popa
data16
cmp
sbb
mov
jbe
loopne
jmp
cmc
outsl
adc
in
test
cmpsl
cmp
mov
mov
popf
xor
mov
mul
xor
add
stos
loopne
fldenv
push
push
loopne
aad
mov
push
sub
cwtl
jno
ja
lret
rorb
mov
xor
rcrb
sub
sbb
loop
pop
pop
das
xchg
mov
inc
mov
std
pop
popf
rcrl
out
sub
ds
mov
push
add
adc
in
sub
jbe
push
and
sub
ficoml
mov
imulb
mov
sbb
dec
stc
dec
out
pop
shll
aaa
data16
pop
mov
push
xchg
adc
es
movl
cmp
je
jp
push
dec
xchg
sub
dec
out
cmpsb
inc
pushaw
call
pop
adc
roll
cmovs
push
sqrtps
push
mov
push
mov
xor
test
jb
dec
mov
outsl
pop
sti
lret
out
loop
adc
mov
sbb
cmpsl
adc
inc
loopne
and
inc
dec
nop
mov
mov
bound
call
pop
iret
sahf
pop
mov
fcoml
ret
movsl
add
mov
jecxz
inc
mov
sbb
test
mov
push
ret
mov
mov
aas
in
imul
pop
in
ret
xor
mov
mov
xlat
push
push
cmp
call
les
adc
and
bound
dec
je
push
xchg
aam
cld
inc
lods
mov
mov
xor
fdiv
pop
lret
das
push
cmpsl
mov
pop
mov
pop
sub
cli
add
inc
push
adc
mov
adc
ss
push
and
jecxz
jnp
xchg
mov
aam
cld
test
xchg
lods
cmp
add
pop
jmp
dec
mov
int
inc
push
cmp
in
add
or
stos
pop
cmp
add
clc
add
push
mov
mov
pusha
fnstenv
dec
jge
rcrb
mov
movsb
push
ja
rolb
std
lcall
int3
cmp
bound
fiadds
add
or
mov
out
or
and
sbb
outsb
ljmp
push
sub
sahf
movsl
mov
sub
repnz
adc
jb
xchg
cmp
sbb
mov
daa
jl
filds
sbb
jge
mov
outsl
movl
jge
pop
data16
cli
jl
cld
in
icebp
jecxz
mov
fidivrs
test
and
fs
fistpl
add
ljmp
xor
jg
xchg
push
adc
fmuls
mov
sub
pop
popf
push
cmpb
and
mov
cld
mov
mov
sbb
add
aas
arpl
cmp
orb
out
jns
push
mov
mov
jb
push
mov
daa
mov
mov
or
loop
les
test
test
jg
pusha
call
xor
cmp
adc
test
inc
jo
or
out
sbb
flds
out
inc
out
xor
daa
dec
js
jmp
shrl
add
es
aad
scas
lds
fwait
xchg
int3
fcomip
outsl
and
sbb
cltd
lcall
push
call
inc
loopne
or
cmp
sbb
xchg
inc
stos
xchg
and
mov
xor
jne
mov
loope
jbe
scas
adc
loopne
js
or
orl
adc
jg
fisubl
cmp
or
aam
jb
inc
jmp
or
add
push
push
enter
lods
sbb
pop
cmp
lahf
sub
and
icebp
push
mov
and
mov
dec
mov
mov
xchg
jp
cmp
fdivrs
je
cmp
xchg
pop
mov
fistpl
stos
ss
scas
jl
flds
cwtl
sub
inc
or
push
pop
test
jg
ljmp
outsb
adc
fimuls
mov
jmp
dec
shlb
cmc
jne
and
fwait
cmp
je
dec
sbb
dec
add
cmp
xchg
iret
loope
movsb
into
push
pusha
xor
inc
lret
addr16
cmc
cwtl
add
mov
jbe
ja
inc
les
pop
cs
xchg
cmpb
aam
push
out
mov
or
pop
ds
mov
stos
cmpsl
lcall
or
mov
sub
outsl
divb
cmp
ret
mulb
pop
das
test
push
shll
out
xchg
ja
ljmp
mov
sbb
ja
out
sub
sbb
js
mov
sub
dec
add
out
and
das
enter
or
xor
push
sbb
sub
push
mov
subl
loopne
aaa
jne
pop
jne
xor
imul
mov
jns
cltd
ds
or
push
test
or
call
add
jne
mov
or
fdivrl
jg
clc
cmp
in
gs
pop
pushf
ss
ljmp
pop
ljmp
mov
out
pop
jg
in
loopne
xchg
fisubs
xchg
sub
cmp
ret
loop
out
popf
pop
and
cmp
mov
sbb
aam
mov
mov
push
mov
inc
icebp
mov
aam
adc
sbb
cwtl
js
pop
mov
je
or
mov
bound
out
out
mov
movsb
je
popa
and
add
jecxz
xchg
dec
int3
cld
cmc
out
xchg
push
inc
lret
andl
mov
je
mov
movsl
cltd
enter
cmc
ss
mov
and
cltd
mov
adc
ss
or
mov
mov
push
test
jmp
push
fwait
jge
pop
setae
scas
cmovle
js
inc
ror
xlat
aam
fcmovne
inc
shlb
inc
mov
mov
jle
pop
mov
inc
xchg
ret
out
xchg
aam
repnz
aad
clc
cmp
outsb
sub
test
xchg
insb
rcrb
jmp
pop
xchg
cmc
pop
in
out
jns
sub
jmp
sub
popf
les
repnz
mov
mov
push
mov
arpl
cli
sub
fucomip
repnz
adc
adc
sahf
add
xchg
dec
xlat
pop
add
push
xchg
push
arpl
imul
or
sub
mov
dec
adc
nop
mov
adc
adc
cmp
xor
inc
movsb
pop
or
mov
int
jne
popf
push
jp
dec
into
xor
push
roll
inc
or
aad
packssdw
pop
lods
mov
push
push
mov
xchg
cmpsl
mov
push
push
test
fcomip
cmpsb
fsubr
ret
ds
sbbb
fsubl
cltd
jbe
insl
xchg
iret
outsl
mov
rorl
jb
or
out
add
mov
mov
add
aad
add
nop
gs
lret
ljmp
test
shlb
mov
xchg
mov
movsb
mul
xchg
pop
test
push
mov
lods
lret
xchg
or
pop
rorl
mov
fistl
sbb
push
inc
cs
jnp,pt
mov
clc
push
push
dec
movsl
jns
mov
or
cmc
in
cmpsl
add
fistpll
sub
add
and
and
lea
dec
ret
xlat
push
xor
mov
push
xor
mov
ret
cli
mov
add
lcall
fstl
inc
mov
mov
mov
enter
and
cltd
out
or
in
pop
jle
jmp
add
jmp
imul
adc
xchg
sub
insl
addr16
adc
addr16
sub
fucomip
sub
stos
ds
jne
inc
cmp
sub
jge
sub
push
sbb
ficoml
lea
xor
sbb
cld
xor
rolb
jne
es
cmp
inc
mov
sub
adc
xlat
popa
call
fsubrs
cmc
push
enter
pop
movsb
nop
push
mov
pusha
and
cltd
and
push
mov
push
mov
mov
cld
xor
lret
rorb
int
inc
mov
les
mov
inc
sbb
mov
mov
xchg
inc
imull
hlt
xlat
bound
sub
outsl
mov
push
mov
fcomi
ja
xor
mul
mov
shll
cmp
outsb
sub
idivl
shr
sub
nopl
push
std
xor
mov
notb
icebp
int
nop
pop
stos
sub
adc
or
rcll
push
or
sub
jne
jmp
lea
aas
cld
push
mov
adc
mov
jne
movsl
and
iret
and
cwtl
orb
add
imul
in
into
insb
call
call
jnp
mov
or
or
jmp
sahf
dec
cmpsb
mov
jne
mov
pop
xor
in
loope
sub
or
jb
and
mov
jg
cli
scas
pop
mov
test
into
fistl
cld
cmp
jp
mov
xor
cmp
jp
pop
pop
sbb
in
cli
jno
push
repz
sub
orl
mov
lods
jno
add
xchg
enter
cltd
movsb
and
or
ja
xor
inc
xchg
dec
mov
jp
push
mov
jb
out
vmulss
and
xor
rol
push
into
icebp
mov
and
jb
lds
and
test
cmp
ret
stos
jle
cmp
aam
adc
jecxz
loop
jecxz
mov
es
push
xchg
aaa
and
jecxz
dec
or
daa
sub
lahf
stos
add
jb
cmp
sar
xchg
sahf
cmp
rorb
xchg
dec
adc
xor
sbb
fmull
repz
ret
leave
mov
sub
cmp
or
rolb
sub
loope
cmpsb
mov
lods
jae
dec
ret
add
psrlw
jg
fstpt
mov
jne
and
fnstenv
push
xlat
les
pop
loop
inc
xor
dec
mov
xor
cld
cmc
sbbb
cmp
fiaddl
pop
dec
cmp
shrl
cmp
push
or
fcomps
jbe
repz
inc
add
inc
mov
push
jp
andb
push
cmp
in
jbe
jbe
adc
lret
aam
xchg
enter
xor
or
fiadds
xchg
push
or
xchg
cmp
leave
pop
shrl
scas
in
arpl
push
pop
pop
jb
mov
xchg
divb
subb
inc
sub
clc
aaa
jns
xor
out
xchg
xor
jmp
jge
adc
jnp
cld
pop
andl
xor
xchg
lcall
sub
cmpsb
call
icebp
and
jl
clc
lcall
pop
js
idiv
cmpsl
or
pushf
bound
adc
xorb
push
inc
mov
shll
cmp
xchg
jmp
jle
mov
lock
outsb
fsts
bswap
scas
lods
insb
push
sbb
xor
cmpsl
cwtl
in
sti
in
in
pop
mov
call
ja
shl
movsl
scas
sbb
addr16
cmp
or
out
cli
js
adc
lods
cwtl
or
lret
outsb
adc
pusha
pop
es
sbb
sbb
call
ja
cmp
cwtl
loop
mov
mov
cmpsl
mov
cwtl
push
loope
jbe
sub
push
in
notl
clc
cmp
xor
popl
add
cmp
or
in
and
in
mov
sub
jns
sbb
jb
cmp
pop
insl
xor
popa
pusha
int
add
cmpsb
sub
in
popl
mov
sbb
sti
jno
jno
push
fstpt
pop
test
push
sbb
and
repz
ret
stos
xchg
mov
adc
xchg
xor
aam
in
mov
lods
js
inc
movsl
stos
cld
cmp
enter
cmp
mov
adc
out
adc
into
jnp
je
sub
icebp
adc
sub
xor
repnz
js
or
popf
aad
dec
inc
push
mov
icebp
aam
dec
xchg
adc
push
adc
divb
stos
push
fidivrl
add
jo
sti
mov
stos
dec
imul
or
out
pushl
loop
stos
sbb
jp
inc
dec
pop
mov
mov
or
and
xchg
loope
inc
xchg
je
xchg
cmp
inc
jae
xchg
push
call
pop
add
jnp
push
xor
push
push
cmp
fs
lret
jo
out
jne
fwait
inc
mov
push
inc
roll
adc
sub
jp
jge
add
data16
or
ss
lds
pop
out
addl
fmuls
outsl
jno
insb
xor
mov
xorb
fs
sahf
cmp
cmpl
pushf
shl
sub
out
mov
test
or
orb
jbe
adc
dec
test
fwait
and
jecxz
mov
dec
in
pop
mov
mov
imul
add
dec
call
cmpb
and
pusha
or
cmc
pop
lret
mov
sub
push
mov
pop
pop
cmc
cmp
sbb
xor
in
jge
into
and
loop
adc
outsb
lods
jg
cmp
sub
mov
insl
in
push
inc
cmpsb
push
jmp
cmp
jbe
xor
pop
js
fimuls
fwait
div
or
inc
vorps
adc
xor
jno
enter
jo
mov
push
sahf
push
push
dec
add
push
xchg
sub
xlat
dec
cmp
popf
adc
xchg
out
sbb
jge
mov
sbb
mov
and
inc
mov
nop
mov
shrb
andl
xor
je
jb
ret
push
rcrl
mov
inc
cmpsb
clc
loopne
mov
std
repz
bound
enter
aad
inc
add
leave
push
mov
fistpll
push
iret
push
pusha
xlat
and
mov
clc
add
popf
data16
mov
mov
decl
cmc
lcall
mov
nop
xchg
cmp
jl
addr16
mov
repnz
mov
push
xor
mov
or
bound
add
lret
outsl
push
clc
ret
mov
ret
sbb
popf
in
imul
pop
add
or
xor
or
and
rorl
add
test
fwait
lods
outsb
out
cmp
shl
dec
repz
dec
repz
addl
and
cmp
adc
sti
scas
fstl
pop
push
xor
aad
or
in
pop
movsb
sbb
repnz
inc
dec
cmp
mov
out
std
pop
xchg
sbb
gs
dec
adc
outsb
mov
jnp
rolb
or
das
mov
push
cmpsb
push
lods
std
loope
adc
pop
sti
xchg
jmp
xchg
addr16
lds
out
pop
out
mov
test
insl
stos
stc
in
cmp
dec
lcall
je
add
fmuls
ljmp
xor
test
jmp
ficoml
jecxz
inc
inc
inc
in
pusha
xchg
int3
sahf
mov
xor
into
jb
loopne
iret
cmp
fdiv
std
iret
mov
pop
lret
std
inc
ss
inc
jo
je
cmp
popf
inc
inc
stos
mov
dec
cmp
outsl
mov
mov
xor
mov
cmp
test
mov
push
xchg
fwait
xchg
sub
push
push
sti
xchg
std
pusha
pushf
shl
xchg
sub
cmpb
adc
lods
pusha
insb
fcomps
adc
icebp
inc
cli
push
repnz
mov
jmp
mov
jnp
adc
mov
jmp
xor
and
adc
adc
in
mov
pop
movsb
push
push
outsl
add
pop
gs
and
mov
out
ja
imul
and
jmp
icebp
jge
fsubrl
fldl2e
repz
jmp
inc
and
sbb
xchg
pop
add
scas
cld
xchg
lods
in
sbbl
pop
mov
lcall
lret
cli
mov
fnsave
cmpsl
jne
mov
stc
js
mov
sub
adc
imul
int3
sub
mov
cmpsl
in
jae
stc
jns
out
dec
push
push
enter
mov
add
dec
jmp
cltd
lds
cwtl
nop
or
cmp
xor
sbb
mov
in
xor
stc
orb
and
push
data16
lret
sbb
push
bound
mov
ret
xchg
lahf
aas
popa
inc
pushf
inc
repnz
lahf
out
in
jo
stos
add
ja
nop
and
xor
sub
test
sbb
lea
xchg
jne
test
and
sub
mov
jl
decb
cmpsl
push
add
loope
xorb
notb
push
ret
sbb
jmp
test
mov
bound
enter
incb
stos
outsl
mov
mov
push
xchg
pop
adc
push
xor
inc
jg
xchg
and
out
sbb
ret
pushf
loop
mov
dec
outsb
or
xor
mov
repz
test
sahf
and
filds
mov
ss
addr16
mov
lret
inc
neg
cmp
test
sahf
cmpsb
dec
mov
dec
mov
pop
jo
lret
cwtl
jbe
pusha
pop
inc
mov
push
or
sbb
dec
lock
mov
or
mov
es
mov
jb
inc
je
fsubs
pop
push
and
int3
popa
dec
dec
ret
setbe
fidivrl
pop
mov
imul
cmpsl
or
cld
sbb
in
sub
sbb
testl
inc
lahf
inc
jae
dec
inc
stos
pop
lods
cli
push
mov
mov
pop
enter
ds
bound
pop
pop
fdiv
sbb
push
int
mov
std
add
test
inc
lcall
out
aas
mov
imul
test
jl
mov
ja
lret
push
push
test
lea
mov
xor
pop
xchg
ja
sub
out
mov
pushf
jecxz
push
add
pop
mov
push
push
icebp
pop
icebp
push
jecxz
js
rclb
pop
jo
fdivrs
and
jo
enter
cltd
xchg
sbb
add
cs
mov
xchg
adc
cmp
andb
dec
in
in
outsb
lods
xchg
jle
int
mov
sbb
call
outsb
sahf
pop
pusha
push
insl
divl
frstpm(287
sub
icebp
xor
ljmp
mov
stos
jo
lcall
push
nop
cli
jne
je
ljmp
in
stc
mov
loope
sub
jg
fwait
xor
popa
jg
mov
into
test
mov
pop
cmp
cs
jmp
insl
test
xchg
xchg
pushf
xchg
je
mov
leave
negl
adc
sahf
data16
add
cmp
lahf
xor
movsb
setns
mov
push
jnp
add
xchg
sbb
mulb
lods
jae
test
je
pusha
push
adc
mov
fneni(8087
popw
mov
lahf
push
cmpsl
pop
and
jnp
dec
call
xchg
adc
pushf
jne
fdivrl
xchg
inc
shl
popa
outsb
inc
adc
test
mov
lock
sbb
sub
and
ljmp
add
pop
inc
subb
push
mov
add
ljmp
nop
andl
loop
dec
ret
loope
scas
movsl
test
sbbl
xor
test
xor
hlt
push
in
shlb
or
ret
std
lods
sub
pop
ret
repz
imul
xchg
in
push
repnz
jge
lods
repnz
jae
outsl
addr16
cmp
lret
cmp
lret
or
movsb
mov
xor
push
stos
xlat
rol
aaa
cmp
or
inc
scas
jmp
ds
jbe
aad
pop
sbb
sbb
push
add
mov
sbb
bound
clc
orb
int
dec
cltd
es
jge
add
mov
in
jg
fistpl
pop
inc
out
out
js
test
jbe
and
hlt
jnp
out
pop
cmp
popl
dec
out
mov
in
add
leave
cmp
add
cmpsl
sbb
adc
jecxz
mov
push
push
movl
cvtdq2ps
ftst
sub
lock
stos
adc
movsl
cld
xor
test
push
xchg
out
pop
mov
xor
mov
lret
jmp
data16
xchg
mov
push
ret
out
cmpsl
inc
fwait
sarb
and
movsb
mov
mov
bound
ljmp
test
sbb
adc
or
incb
xchg
pop
pop
cmp
push
aas
fstps
rcll
xlat
pop
adc
jne
mov
insl
lret
pop
addr16
call
leave
or
or
push
jmp
daa
shlb
push
inc
fwait
push
pop
jo
out
fldenv
push
push
and
lods
shll
xor
arpl
mov
push
mov
add
ds
push
pop
xchg
mov
aad
in
adc
mov
pop
mov
push
test
inc
out
mov
bswap
push
data16
and
jno
outsb
adc
xor
es
dec
push
mov
mov
jne
lds
adc
jno
cmc
cltd
rol
aad
adc
jp
add
add
mov
push
aaa
mov
clc
push
outsl
jle
imul
mov
add
loopne
adc
mov
int3
cmp
das
dec
jb
subb
sti
jne
movsb
mov
mov
jno
mov
sbb
fists
lret
mov
pusha
cmp
mov
lods
mov
out
dec
scas
cs
xlat
inc
pop
in
hlt
nop
rcll
shll
lret
movsb
push
inc
test
jecxz
setae
aam
rcl
dec
add
mov
sbb
fmul
mov
sub
repnz
iret
mov
mov
je
stc
sbb
pop
test
adc
jns
mov
mov
iret
cmpsl
xchg
pop
movl
scas
push
push
or
sub
dec
dec
insb
nop
sbb
ret
mov
or
mov
lods
sbb
mov
ficompl
js
adc
shrb
subb
pop
sbb
jno
in
loope
dec
stc
jns
out
cmpxchg
mov
cwtl
popf
jle
fsub
icebp
or
jo
push
jns
decl
ljmp
cmc
mov
aam
push
and
push
or
test
jmp
clc
jns
scas
dec
mov
push
mov
xchg
inc
call
sbb
lods
lods
pusha
pop
push
push
adc
mov
xor
sarb
dec
mov
mov
xchg
sub
mov
dec
or
xchg
cmpsl
and
hlt
fs
rcr
push
sbb
dec
dec
lahf
ljmp
test
popa
fs
xchg
fimull
in
xchg
cmpl
pop
in
ret
mov
and
cmpsl
xchg
xchg
loope
movlps
sbb
xchg
outsl
loopne
add
cwtl
outsl
mov
test
xor
arpl
lods
aaa
dec
aad
cmovnp
lds
out
cmp
pop
jmp
xor
cmp
sbb
dec
dec
mov
cmpsl
int3
mov
pop
in
or
test
fcomi
popf
or
dec
sahf
pusha
arpl
jp
or
and
cld
jl
das
inc
ror
add
daa
lock
xlat
les
icebp
aam
adcb
sti
lret
js
shll
or
push
in
ss
push
dec
movsb
jb
adc
or
dec
sbb
dec
mov
mov
rcl
mov
in
test
repnz
aad
ds
loop
popa
jp
add
popa
jmp
ret
xchg
push
mov
mov
pop
in
fstpt
fwait
loopne
sbb
inc
repnz
inc
lret
loop
mov
mov
xchg
dec
pusha
cmp
lahf
xchg
loope
or
add
sbb
mov
sub
sub
rol
in
cmpl
loopne
mov
sub
inc
jecxz
rcll
pop
mov
add
mov
and
cli
xor
xchg
and
lcall
ljmp
push
outsb
lea
ja
adc
xchg
rorb
mov
sbb
mov
mov
sub
setp
xchg
add
lds
and
ret
mov
inc
lods
add
inc
daa
shrb
out
add
xchg
decb
cmp
faddl
mov
jno
cmp
xlat
xor
cltd
cmp
xchg
mov
xlat
movsb
outsl
test
xor
jb
lahf
adc
pop
mov
fisttpll
adc
jge
popf
je
cld
lcall
in
imul
jp
cld
fmuls
lds
ficoml
sub
inc
movaps
sarl
das
cs
mov
cmp
mov
ljmp
test
loope
arpl
pop
lahf
mov
dec
data16
adc
sbb
mov
dec
jmp
repz
scas
shll
loop
mov
mov
mov
add
jg
sub
add
decb
or
les
test
pop
or
cwtl
fbstp
mov
fs
aam
aad
push
cmp
or
dec
dec
inc
pop
push
push
push
cli
cmpsl
add
pop
int3
sbb
xchg
xchg
les
shl
push
popf
stos
shl
sbb
movsb
mov
push
sub
mov
stc
adc
xlat
push
sti
fs
lahf
out
inc
out
xorb
in
pop
xor
inc
xchg
adc
cld
jns
xchg
aad
int
sub
lahf
pop
ret
lea
inc
xchg
jns
or
sub
cmp
cmpsl
mov
mov
sub
lock
jecxz
lds
jle
in
or
mov
adc
aam
jge
les
or
pop
pushf
add
dec
in
fsubrl
sbb
dec
xchg
jg
cld
xchg
mov
mov
xchg
sub
sub
stos
cmp
xchg
lds
push
pushf
rorb
inc
ret
imul
in
lahf
jmp
cmp
shrl
scas
es
scas
es
mov
xchg
jg
mov
insb
mov
mov
push
mov
imul
cld
sbb
add
xchg
mov
pushf
mov
pop
gs
mov
jg
xor
shlw
pop
out
add
sbb
inc
inc
js
aad
push
pushf
sub
mov
test
aaa
and
repnz
sub
push
xor
sub
icebp
adc
ja
xchg
mov
insb
inc
jle
cmpsl
or
sub
ljmp
and
or
loopne
pop
push
mov
sub
pushf
popa
cmp
mov
xor
push
fs
sbb
dec
sub
jmp
addr16
sbb
dec
mov
or
int3
or
fmulp
lahf
pop
xchg
lahf
mov
ror
in
scas
retw
cwtl
test
sub
jno
inc
push
aaa
sub
and
sbb
fisttpll
hlt
push
pop
stos
imul
pop
xlat
in
stos
cltd
jae
pushf
out
jno
add
insl
sub
sti
jge
data16
sbb
les
xchg
xlat
inc
sbb
mov
xor
jae
push
pusha
cwtl
push
mov
mov
xchg
adc
push
flds
inc
cmp
mov
test
nop
jnp
lcall
xor
into
and
fidivs
cmp
into
mov
xorb
sub
pop
jecxz
jecxz
jbe
adc
repz
popf
inc
add
inc
push
mov
dec
movsl
js
push
loop
stc
push
and
in
pop
ss
hlt
stos
icebp
lock
mov
bound
inc
int3
test
xor
repnz
mov
pop
or
pop
pop
and
mov
pop
or
lcall
push
xor
sub
jnp
mov
sbbb
and
xchg
fnsave
pop
mov
mov
inc
outsl
adcb
pop
jg
cmpsl
inc
jmp
sbb
push
jno
repz
adc
dec
mov
or
outsl
jns
xchg
ret
icebp
bound
lcall
negl
cmp
inc
pop
mov
imul
mov
es
and
into
add
mov
jp
cwtl
mov
sub
mov
push
inc
das
lahf
dec
or
imul
and
clc
popf
bound
test
xchg
push
mov
lods
mov
jmp
mov
mov
loope
add
stos
leave
lret
ljmp
add
xor
jmp
sub
xchg
mov
popf
mov
gs
fstl
pop
inc
lods
shlb
push
sbb
popf
outsb
mov
sbb
inc
jmp
mov
adc
pushf
mov
orps
enter
and
xor
fisttpll
xor
and
sbb
sti
in
jb
mov
in
cmp
scas
jo
push
and
or
pop
push
rcrb
xchg
push
push
cs
gs
hlt
push
lahf
jmp
jns
int3
inc
mov
stos
ja
stos
cmp
jp
insl
mov
jbe
push
and
clc
adc
pop
dec
movsb
sub
adc
popf
xor
dec
rcll
inc
ljmp
sub
jb
sub
xlat
jae
inc
fs
dec
dec
pop
insl
cmp
testl
out
clc
dec
mov
jmp
mov
insb
leave
push
aad
lds
pop
jp
das
out
mov
xlat
outsb
sbb
dec
cmp
mov
push
ss
sti
test
dec
out
scas
push
lea
pop
insb
pop
or
xchg
pop
cmpb
ja
dec
and
dec
cld
ret
mulb
mov
xchg
add
scas
fbld
sbb
xchg
mov
push
and
jnp
xchg
mov
cmpsl
or
adc
rcrl
add
mov
cmp
adc
cli
daa
bound
insl
and
pop
aam
leave
popa
imul
or
mov
push
add
dec
sub
sbb
aad
fisttps
es
jno
sub
stc
mov
cltd
xor
push
add
pop
inc
sbb
jmp
inc
test
notb
cli
insb
nop
out
cmpsb
push
or
mov
jge
xchg
push
popa
stos
into
loope
es
popf
cmpsb
pushl
mov
adc
in
rol
inc
or
out
into
cs
test
enter
pavgb
lret
add
jnp
xor
test
test
mov
add
jl
sub
ds
cmc
rcll
cmp
sti
xor
addr16
cmc
dec
pusha
insl
fs
xchg
or
mov
mov
std
dec
sar
and
cmp
leave
adc
je
jo
xor
cmp
lds
lock
cwtl
arpl
sbb
jnp
repnz
data16
in
repnz
das
add
decl
mov
pop
clc
xchg
lea
xchg
gs
insb
testl
pop
inc
mov
sbb
call
mov
iret
insl
sbb
sti
in
xor
icebp
cmc
mov
jge
sub
fwait
inc
and
std
xor
lret
negb
fistl
inc
mov
sub
jle
mov
pop
mov
por
out
push
add
mov
cmp
int
dec
jecxz
jnp
shll
or
dec
ds
imul
sahf
aas
clc
movsb
lret
dec
xchg
push
int3
sbb
pusha
out
and
mov
dec
clc
xor
xchg
cltd
xchg
into
adc
hlt
lea
enter
in
mov
aam
inc
and
mov
push
cmp
mov
sub
push
xlat
cs
testb
pop
mov
scas
xchg
mov
push
dec
filds
js
dec
mov
and
pusha
insl
aas
fildl
mov
shr
add
sahf
pop
pushf
mov
scas
outsl
sarl
dec
sbb
pop
sub
add
push
adc
push
out
fdivrl
adc
daa
and
loop
push
xchg
nop
inc
jo
or
into
or
sbb
jo
cmpsb
bound
fcomip
rclb
pop
and
test
push
jg
mov
push
dec
test
or
mov
data16
das
sbb
cli
jbe
lods
incl
loopne
push
dec
in
mov
pop
sbb
idivb
adc
popa
lea
in
mov
sub
and
popf
cwtl
jmp
cmpsl
adc
loope
and
loop
inc
sbb
or
dec
incl
insl
fs
repz
xchg
pushf
sub
aas
or
push
mov
inc
dec
mov
insl
fimull
and
not
xchg
in
dec
mov
repz
cli
int3
lods
js
rorb
popa
ja
adc
or
push
divb
or
push
shl
jns
jno
jno
cwtl
stos
bound
out
push
shl
daa
jmp
lea
std
xchg
ror
and
mov
xchg
mov
xchg
movsl
push
sub
loopne
pop
adc
mov
sbb
pop
push
imul
jecxz
adc
jle
inc
shrb
inc
out
cmp
push
pusha
mov
les
sbb
push
or
sub
fstps
push
stc
scas
mov
into
loopne
dec
aas
adc
iret
mov
je
std
and
ljmp
insl
iret
test
sbb
mov
cmp
scas
mov
inc
add
das
mov
dec
sub
cwtl
mov
pushf
xchg
jne
cmp
mov
ret
outsb
dec
pop
das
cmp
inc
stos
mov
in
cwtl
cli
fldt
iret
shll
xor
jl
mov
mov
repnz
xchg
xchg
bound
sbb
pop
xchg
jbe
insl
inc
imul
data16
ds
sub
pop
lret
jns
xchg
cltd
pop
cmp
stc
jecxz
fcomps
pop
xor
push
je
pushf
lds
aas
lea
arpl
repz
imul
popf
popf
sbb
nop
fsubrl
stc
mov
push
pop
pop
xchg
scas
mov
cmp
jecxz
aad
enter
cmpl
and
std
and
ds
stc
das
cmp
mov
push
lods
push
xchg
cwtl
inc
fmull
add
into
cmp
stos
mov
scas
daa
lahf
sub
lahf
xor
pop
nop
inc
int3
mov
add
add
cmp
out
push
add
lods
push
sub
or
xchg
push
mov
gs
cmpsl
lds
jmp
sub
movsb
je
out
fstl
mov
shll
pop
sahf
icebp
icebp
add
jbe
lods
xchg
add
sti
xor
iret
push
dec
dec
call
in
es
out
ret
lret
or
fcomps
lods
mov
jg
lret
cli
or
jl
negb
push
andb
sub
xchg
outsl
js
popa
cmp
sbb
push
mov
push
fisubs
mov
addb
stos
or
jmp
repz
pop
sbb
addr16
inc
sub
cmpsb
test
leave
in
adc
and
vaddsubps
pop
mov
ror
pop
lock
push
movsl
dec
daa
mov
inc
inc
mov
test
lods
mov
or
sub
sbb
in
iret
push
iret
fisubrl
jae
lods
aam
xchg
lods
test
cmp
inc
ficoml
je
std
mov
enter
cmpxchg
shl
mov
call
adc
shrl
clc
xchg
jge
test
outsb
sub
add
mov
xor
movsb
push
and
imul
dec
sbb
lahf
adcb
jp
das
jbe
pusha
push
adc
mov
jecxz
daa
lahf
stos
jg
shlb
push
add
mov
lea
adc
mov
sbb
mov
mov
cltd
decb
jmp
inc
js
sub
loopne
int
jmp
lret
xor
lds
je
pop
mov
sub
mov
mov
mov
mov
pop
mov
or
fisubrs
adc
sarl
push
mov
mov
scas
js
mov
jo
cltd
mov
stos
or
cmp
jg
test
xchg
push
sbb
push
movsl
pop
xchg
pop
mov
cli
aaa
cltd
jl
incl
sbb
cwtl
sti
imul
cmpsl
out
cmp
push
subl
in
inc
xchg
pop
leave
mov
push
xor
rcrb
shlb
inc
xchg
xchg
jnp
fdivl
push
loope
jecxz
icebp
pop
lcall
iret
cli
jbe
jb
sub
inc
dec
and
push
jb
push
and
sub
mov
out
add
addr16
repz
add
mov
icebp
jge
jno
push
pop
xor
mov
sub
test
popf
push
jne
dec
flds
cltd
pop
xorb
add
sub
das
sbb
sub
cmp
xchg
sub
mov
in
sti
icebp
imul
imul
push
hlt
xchg
mov
xchg
mov
and
mov
mov
imul
xchg
mov
xor
or
in
lret
mov
popa
pop
xchg
mov
sub
pushw
mov
in
ret
pop
pop
nop
bound
xchg
xor
mov
jmp
es
das
pushf
sbb
xchg
jns
inc
fnstenv
fiadds
or
cmc
and
fs
push
inc
sub
ret
rorb
dec
fistps
mov
enter
insb
fwait
fs
xchg
icebp
push
cmp
dec
ljmp
fwait
mov
xchg
push
fwait
shrl
add
negb
mov
fcompl
add
pop
mul
mov
add
ds
xor
mul
insl
ficompl
btsl
lcall
pushf
jo
sbb
xchg
cwtl
xor
sub
push
inc
xor
mov
xlat
aaa
mov
dec
cltd
and
xchg
sub
mov
pusha
xchg
push
mov
clc
push
outsb
sbb
insl
loope
jg
mov
cmpl
adc
add
cmp
sbb
js
and
adc
cmp
in
or
add
jmp
mov
shrb
cmp
cwtl
mov
inc
sarl
xchg
outsl
ja
xchg
or
aad
jne
push
push
ret
pop
fcmovu
sub
scas
jbe
into
mov
or
popf
daa
call
cmp
testl
push
repz
push
test
cmp
mov
daa
call
cwtl
stc
loop
shlb
add
sbb
rol
test
cltd
adc
je
xchg
enter
jmp
out
mov
in
adc
xor
es
int3
dec
mov
lret
mov
pop
std
stos
mov
les
and
fidivrs
call
lds
lea
adc
mov
xchg
cmpsl
adc
pop
das
xor
sub
mov
sahf
loope
lods
mov
dec
push
jecxz
cmpsb
jbe
pop
movsl
enter
cmpxchg
inc
and
and
or
repz
mov
pop
mov
outsl
xor
mov
add
lret
repnz
in
jb
loopne
cmpsl
mov
mov
push
mov
test
jne
lahf
stos
push
xorb
mov
ret
gs
dec
insb
rcrb
and
nop
xchg
jle
adc
mov
or
addb
ds
xor
lock
test
pop
jg
xchg
fstpt
pop
ds
xor
push
xchg
and
frstor
mov
test
fidivrl
mov
cs
mov
lds
stc
lock
shlb
jmp
inc
test
fisubl
cmpl
add
fwait
shl
mov
xlat
fisubs
fldl
out
cltd
or
js
idivl
and
in
cltd
cwtl
sub
fldenv
add
xchg
xchg
mov
out
outsb
dec
or
insl
imul
test
add
xchg
sbb
popa
out
mov
and
jne
mov
mov
pmaddwd
mov
cmp
repnz
outsb
jl
or
mov
ror
sbb
push
in
cmp
shrb
mov
pop
daa
push
or
sbb
rep
mov
sahf
add
icebp
ss
loopne
popa
movsb
add
cwtl
and
jns
inc
aam
xchg
movsb
xchg
sub
dec
into
lock
pop
adc
xchg
nop
lret
pop
sbb
jg
test
jl
sub
xchg
arpl
mov
popf
pushf
mov
lcall
xchg
ja
and
insl
xchg
dec
mov
mov
dec
add
or
fdivp
push
dec
jae
sti
repz
mov
stos
push
pop
out
cmpsb
jno
aad
sbb
sub
xor
xchg
mov
xor
adc
mov
xchg
cld
pop
cmp
push
in
sub
inc
sbb
test
dec
shl
dec
outsb
sub
repnz
loop
sub
insl
jmp
pop
andl
mov
mov
sbb
or
sbb
rorl
out
lods
sar
dec
mov
adc
sub
clc
out
dec
push
xchg
cwtl
leave
xchg
push
lods
adc
dec
fildll
push
cmp
imul
jmp
sub
inc
and
xchg
mov
xchg
popa
and
pop
jg
pop
xor
and
dec
jl
push
add
jnp
leave
or
jmp
and
inc
sub
push
dec
inc
lcall
cmp
adc
xchg
gs
inc
and
sbb
inc
sub
sub
and
jp
nop
mov
pushf
aas
mov
dec
pop
mov
in
sub
pop
push
jb
jge
or
xchg
inc
push
pop
fisttpll
sti
stc
add
test
dec
repz
insl
pop
mov
loop
add
scas
jne
fldt
push
xor
je
pop
jecxz
and
test
js
pop
test
add
mov
stc
das
dec
xor
rol
sarb
icebp
loop
mov
outsl
sub
and
mov
int3
int3
loop
das
or
int
adc
aam
aad
jbe
aaa
mov
in
ljmp
xchg
dec
mov
fs
jno
inc
inc
xor
aam
dec
mov
mov
aad
push
or
push
lcall
dec
mov
daa
cmp
cmpsb
jle
mov
and
pop
inc
stc
movsb
insl
testl
cli
jle
xchg
xchg
add
clc
mov
mov
lea
adc
xchg
jl
adc
jmp
cmpb
or
dec
int3
test
fdivs
sbb
sbb
divl
jp
insb
push
data16
add
in
pop
ss
inc
dec
inc
cmp
mov
loope
jl
xchg
push
or
scas
fsubp
std
mull
rclb
push
hlt
fdivr
adc
icebp
xchg
mov
pop
or
mov
aaa
and
test
pop
loopne
js
add
push
push
mov
loopne
les
sub
inc
fdivs
xor
lock
pop
imull
sbb
mov
cmpb
call
pusha
scas
push
insb
adc
stc
lahf
test
xchg
ja
stos
mov
int3
int3
cmc
mov
jmp
cli
sub
xchg
test
ss
push
mov
ja
sbb
push
test
push
push
mov
push
rolb
jnp
nop
mov
adc
cmp
lds
push
and
xchg
jns
sbb
or
lahf
pop
cvtpi2ps
mov
inc
push
inc
lret
negl
je
jo
adc
add
fstpt
cmpsl
dec
jb
mov
mov
jo
sub
sbb
push
in
insb
outsb
jg
aaa
xchg
mov
sub
and
fsubrl
popa
loop
test
fcomp
sbb
mov
loop
dec
fdiv
inc
sub
add
aad
incl
mov
jne
ret
rcr
xchg
cmc
dec
mov
cmp
inc
adc
mov
sub
pop
cmp
push
jns
adc
xor
imulb
pop
stos
add
fistpll
cmp
test
adc
sub
inc
outsl
jecxz
movsb
mov
insb
or
push
pop
xorb
push
sbb
jl
lods
cmpsl
mov
sbb
xor
dec
imul
sub
into
pop
imul
or
dec
pop
xlat
faddp
test
ljmp
add
inc
test
jne
push
in
inc
mov
xor
dec
outsb
push
imul
fisubs
cmp
dec
outsl
push
enter
sub
mov
or
popf
popf
mov
mov
scas
ds
mov
into
push
xor
jae
into
mov
cwtl
xchg
add
outsl
xchg
sbb
pop
nopl
ret
sbb
push
or
sbbl
xchg
bound
into
pop
fisttpl
mov
stos
xchg
jge
in
xchg
or
jne
lahf
roll
in
cmp
inc
test
pusha
cmpsl
jmp
sarl
mov
or
xor
xchg
dec
rol
mov
sbb
push
test
movsl
in
inc
lret
daa
enter
lret
sub
insb
ja
rorl
jo
jle
cmc
call
popf
add
jbe
cld
test
cld
shll
pop
sti
adc
in
fadds
xchg
arpl
lea
mov
mov
xchg
cmp
cmpsl
push
mov
mov
outsl
sub
mov
pop
imul
je
and
movsb
test
mov
sahf
inc
push
cmp
sub
xchg
and
cmpsb
orl
mov
push
jecxz
icebp
fistpll
fimuls
jle
repz
sbb
leave
leave
jmp
imulb
mov
ret
dec
mov
xchg
stos
push
and
or
jo
pop
or
xchg
add
mov
pop
in
push
lahf
pop
leave
in
test
push
popf
jno
in
sub
mov
js
daa
mov
cs
bound
sbb
pop
mov
sub
testb
shl
inc
xorl
es
jb
sbb
enter
mov
or
aaa
xor
in
hlt
jae
pop
clc
adc
mov
jb
ret
mov
inc
adc
cmp
lds
sbb
inc
or
pop
sbb
lock
pop
inc
inc
sub
nop
arpl
dec
mov
pop
mov
cmpsl
fs
mov
or
lods
sub
inc
xchg
ret
mov
out
dec
jb
mov
subl
mov
fwait
stc
testl
mov
dec
iret
sub
insl
dec
inc
add
adc
and
and
cmpsb
pop
lcall
in
adc
dec
shll
imul
adc
adc
ret
and
mov
mov
sub
dec
int
pop
lods
iret
cmp
data16
sub
pop
imul
inc
cltd
addb
lea
rcrb
xor
cld
jo
mov
popa
dec
jp
mov
aad
ja
jle
stos
test
scas
mov
jmp
data16
cld
and
xchg
jo
jecxz
call
and
inc
dec
pusha
gs
mov
lods
aad
insl
bound
add
scas
mov
adc
cmpsl
ret
xor
fsub
out
pushw
popa
sbb
inc
sub
out
mov
les
mov
xchg
lds
ret
icebp
mov
pop
jg
stos
mov
lahf
shlb
fisttps
xor
mov
out
iret
inc
jp
call
sub
mov
movl
inc
mov
jmp
jnp
push
inc
iret
inc
fs
mov
pop
mov
popa
les
push
jl
loopne
mov
cli
xor
push
jns
adc
cli
nop
outsb
cmc
lahf
adc
pop
sbb
es
out
andb
loopne
inc
in
pop
fldl
imulb
xchg
xchg
ds
jo
scas
mov
mov
loope
push
mov
jg
mov
jns
rclb
push
arpl
jge
add
stos
sti
inc
adc
sub
pop
popf
push
orb
imul
fwait
cmpsl
xor
jnp
cmp
adc
cmp
cmp
imul
mov
add
jl
cmovne
arpl
ret
cld
cmp
sbb
outsb
daa
mov
push
lock
inc
fdivrs
test
icebp
xor
sbb
scas
xchg
imulb
loop
pop
pop
daa
xor
pop
std
xchg
jl
jbe
in
and
je
xchg
push
pop
fstpt
and
dec
js
popa
loope
cmp
icebp
sbb
xchg
sub
pop
ss
mov
or
and
dec
pop
mov
insl
test
inc
mov
xorb
test
filds
sbb
mov
movsb
mov
dec
pop
std
sbb
sar
or
loop
mov
cmpb
pop
cmc
lock
push
sub
push
out
lds
xchg
loope
int3
cmpsb
jns
int
je
shl
push
test
dec
lret
and
dec
bound
adc
jle
in
in
mov
push
or
repnz
dec
xchg
dec
arpl
lret
xlat
inc
out
mov
add
loop
jp
neg
es
sub
jo
or
add
push
push
add
subb
dec
push
sti
cmpsb
pop
and
sbb
in
lods
lods
enter
stos
cmpsl
lods
dec
gs
ds
repz
imul
pop
daa
aaa
or
aam
nop
loop
jns
or
or
adc
xor
movsb
movsl
or
repnz
sub
or
shl
pop
jo
cmpl
mov
lods
fmuls
test
pop
mov
push
adc
or
addl
push
sub
lcall
dec
and
aaa
stc
inc
das
int
pop
cmp
scas
fstpl
sub
fisubs
or
aam
mov
jnp
push
in
cs
sbb
pushf
xor
iret
adc
add
inc
sub
xchg
rclb
mov
adc
cmpsb
negb
dec
or
js
cmp
icebp
inc
inc
xchg
and
mov
pop
daa
pop
pop
mov
dec
adc
adc
add
mov
adc
outsl
fstpt
rcll
insl
cmpsb
push
fldt
shlb
clc
fidivrl
jno
es
mov
mov
aad
stc
or
js
and
int3
movsl
mov
cmp
test
scas
rclb
add
pop
incb
jne
xchg
mov
outsl
iret
sbb
push
mov
cli
inc
rcrb
popf
in
add
aas
pop
cmpsl
bndldx
cltd
push
jl
xchg
loope
adc
sbb
jb
inc
shlb
and
add
loopne
in
jmp
fsubrp
mov
out
out
mov
enter
fwait
jle
flds
addr16
je
jbe
xchg
pop
mov
imul
adc
cltd
xor
xlat
adc
pop
mov
mov
rcrb
push
push
jecxz
or
test
gs
push
fcmovnu
incl
in
repnz
add
imulb
adc
or
jno
movsb
dec
lds
mov
dec
add
movsb
insl
xor
jg
add
movsb
push
es
mov
sub
or
rcrw
jl
pop
jne
jmp
not
dec
sbb
push
aam
insl
clc
pop
and
xchg
add
mov
fnstenv
cmp
hlt
xchg
dec
mov
out
cmc
pop
mov
adc
adc
mov
or
lahf
rcrl
fwait
insl
pushf
scas
pop
inc
mov
and
sub
mov
or
sbb
or
cli
mov
mov
mov
dec
xchg
inc
and
scas
ret
repnz
bound
popf
and
outsb
fldenv
cmp
xor
sbb
dec
jne
pslld
insl
push
lods
adc
lret
mov
adcl
push
cmpsb
jecxz
dec
xchg
add
push
out
sbb
mov
xchg
out
pop
pusha
lahf
jecxz
int3
jae
in
dec
scas
jbe
and
mov
xchg
push
xor
mov
xchg
cs
shrb
and
and
nop
scas
fsubs
cmp
xor
fidivl
dec
test
testl
xor
inc
scas
outsl
cmp
dec
cld
mull
mov
pop
mov
stos
inc
add
cs
ja
loop
xor
andb
repz
jle
add
jmp
out
inc
outsl
and
stos
shl
vpsraw
inc
test
scas
mov
dec
push
push
aad
pop
dec
stos
in
aad
add
dec
sbb
adc
popf
lock
xor
push
in
jecxz
out
gs
jmp
jnp
jle,pt
ljmp
insl
mov
loopnew
filds
sbb
js
adc
push
std
lcall
movsb
data16
ret
sahf
pop
add
add
push
jl
mov
cmp
ror
xor
fistl
cli
inc
mov
popa
cmp
push
pop
push
es
add
addr16
mov
popf
out
add
shlb
pop
popf
pop
into
inc
movsl
nop
add
xchg
cmp
outsb
or
fwait
stos
and
mov
movsb
fistl
aaa
mov
dec
ss
fs
std
cwtl
or
sbb
test
enter
cwtl
mov
mov
fisubl
icebp
repnz
dec
subl
dec
ss
movsb
push
xchg
push
andl
mov
fisttpll
add
sbb
es
and
xchg
cmp
shrb
xor
jne
xor
jno
pop
ret
jae
out
inc
or
ret
in
mov
sbb
sub
jb
pop
shlb
cmp
lea
enter
bound
daa
push
and
jae
leave
cmp
pusha
es
fcmovbe
sti
and
push
cmp
addr16
xchg
in
mov
icebp
add
lds
inc
insl
or
loop
dec
dec
call
jl
sub
jecxz
imul
testl
lds
pop
in
and
mov
or
cs
mov
mov
aad
rorb
gs
and
xor
push
add
outsl
test
in
js
imul
enter
rcrl
fwait
xchg
lds
jl
in
mov
xor
sbb
loopne
inc
lods
push
fistpll
lea
mov
loop
imul
lret
jmp
inc
stos
push
pop
mov
mov
mov
adc
dec
adc
sahf
loopne
ds
clc
or
or
jns
je
mov
jecxz
cmovne
in
mov
outsb
sbb
notb
lods
or
add
add
dec
jb
ret
movsl
pusha
xor
enter
hlt
fisubrs
push
xchg
mov
mov
cmp
add
jge
fildl
cmp
sbb
stc
aad
adc
addr16
and
bound
iret
add
divl
lods
inc
scas
rcrb
lock
xlat
add
test
data16
cs
sub
xor
pop
pop
push
add
adc
sub
ja
pop
data16
fs
orl
ret
test
les
insb
out
sarl
jecxz
mov
mov
cmovne
mov
inc
push
add
fdecstp
negl
addr16
dec
jge
and
das
stos
push
imul
add
sahf
dec
inc
dec
leave
xchg
in
dec
sub
mov
out
data16
fnstsw
xor
jmp
mov
xchg
mov
ds
movsb
fs
arpl
fimull
jp
scas
mov
icebp
jne
push
leave
lods
imul
pop
lea
add
sahf
cvtps2pd
fisubl
shll
dec
and
mov
pop
xchg
sarb
sbb
jne
cs
shrl
lea
pop
cmp
mov
mov
xchg
xchg
cli
sahf
orl
lea
fs
add
ret
jbe
sub
mov
or
inc
or
xlat
in
fwait
and
movsb
add
outsl
mov
mov
pop
mov
fisubrs
mov
iret
push
ljmp
mov
pop
lret
xor
aam
push
adc
outsb
mov
add
mov
adcb
mov
std
lret
pop
sbb
sbb
push
repnz
xlat
jnp
inc
dec
adc
xchg
daa
in
jl
mov
sbb
ficoms
cmpsl
iret
mov
jne
xchg
push
lea
push
sub
add
loop
jb
adcl
call
pushf
pop
mov
and
fs
and
push
add
notb
into
mov
lcall
mov
xor
inc
loopne
xchg
mov
sbb
jb
jge
fmulp
mov
imul
jno
pop
mov
lcall
icebp
fistpll
jle
mov
data16
dec
mov
mov
lahf
jecxz
scas
popf
add
cli
movsl
and
pusha
mov
sub
adc
fabs
jbe
cltd
jb
decl
out
jp
jnp
cmc
xor
mov
shld
out
fisubs
adc
aad
movsl
adc
shll
add
adc
arpl
mov
xchg
xchg
push
int3
cmp
lret
inc
sbb
fsub
xchg
add
mov
outsl
and
mov
idiv
iret
add
leave
push
xor
dec
push
or
insb
xchg
call
xor
sub
adc
sub
xlat
bnd
incb
jecxz
lcall
inc
je
data16
dec
mov
mov
stc
inc
mov
mov
call
add
in
ficomps
mov
sub
sub
retw
pop
add
mov
jbe
jg
pop
das
inc
pushf
jno
pop
outsl
adc
andb
aad
push
sub
arpl
call
rcll
sbb
int3
cmp
ss
nop
je
cli
gs
and
lock
mov
in
mov
es
into
mov
mov
dec
and
xor
ljmp
repnz
push
ret
cli
cli
push
fimull
movsb
or
xchg
cmc
push
mov
dec
push
jnp
cmp
push
outsb
mov
pop
add
mov
outsl
sbb
dec
sbb
daa
or
notl
xlat
insb
icebp
into
mov
mov
bound
or
das
xchg
dec
fs
neg
pop
lods
pop
aam
fwait
mov
or
out
fmull
xchg
sub
roll
fdivs
cs
jnp
aas
adc
mov
add
fmull
ja
ret
add
and
orb
push
pop
hlt
mov
je
fldenv
jb
xchg
xchg
repz
dec
jns
xchg
mov
lods
sub
xchg
addr16
push
nop
and
mov
or
adc
out
mov
and
xor
and
cmp
outsb
scas
jp
lahf
xlat
fadd
iret
xchg
xor
pop
gs
xor
push
mov
mov
leave
push
or
in
leave
cs
xor
int3
leave
out
or
and
pop
scas
xchg
and
inc
icebp
cli
sbb
jl
dec
adc
push
shr
dec
imul
popf
scas
mov
das
mov
push
xchg
mov
lret
scas
shl
imul
mov
rorb
pop
xlat
out
inc
push
lea
cmp
mov
mov
sub
dec
cmp
xchg
hlt
inc
repz
stos
dec
fcoml
sub
scas
dec
clc
lahf
aaa
and
data16
sub
xor
sbb
mov
push
out
jno
pushf
dec
push
and
adcl
sbb
rcll
fldcw
push
jo
inc
repnz
xchg
push
jl
es
mov
cmpsl
jecxz
sub
or
cmp
movsl
jbe
sub
push
mov
push
sub
jecxz
dec
imul
fnsave
mov
pop
inc
mov
inc
sub
lahf
mov
lods
sub
insb
push
mov
xor
xor
push
xchg
movsl
dec
scas
mov
bound
mov
data16
fnstenv
mov
mov
sub
add
pushl
pop
jmp
add
dec
and
mov
pop
stos
fcmovne
mov
js
adcb
lcall
pop
lcall
test
xor
dec
movsb
mov
jne
pop
sar
fidivrl
cmc
pushl
stos
cltd
dec
xchg
imul
leave
lret
jge
or
test
lret
roll
jecxz
mov
je
movsl
mov
fs
mov
push
ljmp
pop
outsb
mov
sub
or
cld
stc
and
fstp
pop
test
lea
jbe
shlb
mov
push
mov
ret
jo
lea
out
popf
push
out
loop
lret
addl
push
adc
xor
push
popf
pop
insl
adc
xchg
std
add
inc
push
push
adc
cmp
and
loope
ja
cmp
sbb
pop
leave
imul
jae
aas
mul
cmp
test
imul
bound
sub
popf
sub
mov
add
aad
mov
pop
cmp
in
or
mov
mov
xchg
loope
in
ds
lret
sub
popa
push
push
sbb
je
inc
shlb
lods
add
pushf
mov
das
xor
lcall
ret
imul
ss
in
xchg
and
cwtl
inc
pushf
mov
mov
ljmp
mov
sahf
into
fnsave
sub
adc
fistpl
sahf
shr
sub
or
test
jae
xchg
clc
ljmp
push
mov
push
push
adc
imul
lretw
outsl
fists
cld
cmpsb
push
lahf
push
out
mov
leave
jge
in
jne
pop
out
mov
and
adc
lret
cmp
jb
scas
in
push
add
pop
pop
add
mov
hlt
cwtl
fidivrs
arpl
ficompl
dec
pushf
in
jecxz
neg
daa
repz
cltd
jb
clc
cmp
stos
or
dec
fldenv
aam
mov
mov
nop
inc
cmp
enter
sbb
test
jg
inc
std
and
rorb
enter
push
sahf
jne
add
insb
sub
dec
je
pop
mov
pushl
adc
pushf
cmp
pop
cwtl
cmc
les
and
lahf
xchg
and
pop
lcall
xor
xchg
pop
mov
pop
cmp
cmpsb
ljmp
push
adc
and
mov
fistps
scas
sbb
add
inc
out
sub
cmp
cmp
inc
xchg
mov
inc
jp
xchg
fstpl
jbe
icebp
repz
jecxz
loope
xchg
in
popf
movsl
or
jo
pop
notl
xorb
cli
jle
ret
fmull
fsubl
add
stc
jns
inc
loop
outsl
and
adc
lahf
jg
jnp
sub
in
mov
jl
mov
mov
mov
es
jmp
pushf
test
les
inc
jge
jbe
call
xor
dec
sub
lds
jge
cwtl
inc
mov
stc
fsubr
aam
popf
push
mov
in
lea
arpl
adc
das
leave
mov
loopne
or
xorb
push
and
out
mov
xchg
roll
mov
cs
arpl
mov
jnp
cld
lahf
scas
out
xchg
addb
jns
jg
test
add
mov
pusha
jmp
sbb
cld
outsl
loop
clc
adc
xor
loope
gs
in
movsb
in
cli
add
push
xchg
push
push
sahf
icebp
xchg
add
dec
shlb
stos
jmp
int
push
lea
push
pusha
outsb
mov
clc
add
lods
adc
push
mov
std
iret
or
lock
clc
sbbb
icebp
lret
sbb
movsl
cmp
repnz
pop
das
jmp
pop
xchg
xchg
sbb
imul
cli
aad
imul
leave
cmp
mov
pop
cli
sub
shrb
test
xchg
pusha
cmp
push
sbb
cmp
cli
js
adc
lret
sub
mov
and
mov
xchg
jle
lret
mov
inc
sbb
add
test
lods
push
mov
sub
dec
jg
sub
loop
mov
mov
test
cltd
dec
inc
mov
push
rcrl
fisttpl
out
push
rcll
je
lret
cmpsl
int3
fwait
jge
aaa
sub
or
push
xor
mov
dec
xor
mov
leave
ss
mov
sub
push
sarb
pop
aas
and
test
insl
push
lretw
call
mov
lcall
imul
dec
cltd
mov
inc
sahf
adc
push
dec
xorl
pop
leave
mov
push
dec
data16
stos
fnstcw
xchg
hlt
and
lahf
nop
adc
dec
push
jmp
xor
test
out
and
mov
negb
lods
call
lahf
clc
mov
fcoml
xchg
mov
test
test
lea
adc
std
add
fisttps
mov
xchg
mov
ret
cmpsb
in
in
mov
xor
jmp
sti
nop
inc
orl
pop
mov
fildl
push
push
pop
cld
add
mov
cmp
lods
sub
in
loopne
mov
and
ret
jecxz
dec
arpl
dec
in
dec
out
mov
test
dec
test
adc
sbb
fldt
mov
cmpsb
and
push
lcall
inc
or
arpl
fcomi
push
mov
sbb
pop
add
or
fsubl
aad
mov
in
andl
jmp
inc
iret
sbb
sti
not
adcb
xchg
dec
mov
shrb
or
jmp
fwait
jmp
les
dec
lretw
xchg
push
or
pop
aas
daa
xchg
ds
jge
push
mov
test
popf
fistps
mov
and
inc
daa
mov
in
inc
adc
push
inc
gs
repnz
sahf
imul
pop
mov
dec
xor
cmp
lods
ss
sarl
hlt
cmpxchg
add
rorl
out
sub
or
ret
daa
repnz
jecxz
ljmp
imul
adc
faddl
mov
fcmovbe
out
in
aaa
test
repz
mov
jo
lret
int3
xchg
push
and
scas
push
cmpsb
enter
dec
xor
inc
pusha
pop
subb
cmpsb
int
mov
shrl
push
push
pop
shll
jno
shll
popa
incl
lret
imul
jne
jns
add
xchg
mov
out
dec
adc
call
sub
cmp
sbb
call
mov
xor
mov
cmp
sbb
ret
lods
cld
adc
push
call
out
call
push
mov
int
sub
inc
int3
repnz
pusha
cmpsl
jne
xchg
hlt
add
inc
sub
pop
in
and
and
mov
out
xchg
sbb
movb
std
ja
cli
mov
adc
gs
lods
mov
dec
lds
add
pusha
push
dec
adc
cmp
push
repnz
inc
dec
fisubrl
add
mov
out
aam
jo
jno,pt
cmp
mov
push
into
ret
lods
sbb
pushw
dec
pop
or
loop
jge
aaa
pop
pop
sub
test
xor
cmovnp
scas
mov
call
dec
jge
test
xor
fwait
add
jl
insb
rorl
outsl
sub
push
aas
or
jmp
dec
and
divb
push
jo
clc
jecxz
int
cmpsl
repnz
push
stos
jl
mov
test
scas
pop
adc
xor
pop
sahf
filds
mov
pop
fidivrl
inc
gs
mov
cmp
loope
xlat
js
std
or
ror
lods
in
cmp
nop
in
popf
enter
nop
fidivl
sbb
nop
xlat
mov
mov
lret
loope
mov
arpl
jae
push
push
mov
outsb
sbbl
das
pop
out
daa
jns
andnps
mov
jno
jmp
and
data16
lcall
lds
cmpb
xor
jmp
inc
or
lods
out
les
test
xor
mov
gs
imul
sar
dec
cmp
fwait
and
push
sub
pop
jle
cmpl
addr16
sbb
xor
dec
roll
mov
pop
daa
sbb
jne
in
andl
cli
adc
or
mov
int
mov
jno
es
ds
lods
int3
xchg
aaa
mov
xor
xor
sbb
addr16
outsl
cld
adc
dec
push
clc
sub
sti
pop
icebp
xchg
pusha
push
xchg
dec
or
mov
ljmp
or
mov
sbb
aaa
jmp
xchg
adc
cmp
sub
cmovl
or
aad
mov
and
lods
jecxz
and
pop
sbb
scas
sti
icebp
scas
push
clc
mov
into
arpl
mov
or
mov
push
mov
xor
jbe
mov
bound
push
lahf
fmulp
cwtl
es
add
imul
std
push
fldl
ret
cmp
loopne
sti
add
mov
aaa
pop
xchg
push
mov
mov
sahf
and
rorb
push
ret
pop
jne
data16
sub
fsts
lret
nop
jp
movsl
cmp
scas
mov
sub
jo
mov
arpl
sti
in
leave
in
sbb
xchg
cmp
sbbl
lahf
data16
mov
test
jle
addb
loop
jl
aas
mov
loopne
into
mov
jl
pop
jp
adc
rclb
lds
nop
call
add
std
addb
add
shrb
jge
adc
aaa
rcrl
mov
imul
pop
inc
push
stos
cmp
loope
repnz
inc
ljmp
ljmp
adc
mov
mov
dec
fwait
or
pop
mov
mov
inc
js
dec
inc
fdivrs
jge
xor
loopne
jle
ss
fdivs
xchg
and
xorl
inc
pushf
adc
notb
inc
and
iret
adc
cli
xor
jae
push
movsl
daa
fsts
jge
iret
cmc
add
mov
imull
pushf
shrl
popf
mov
pop
sub
pusha
rep
rclb
sub
mov
or
pop
stos
pop
xchg
xor
jecxz
std
mov
adc
cmp
out
outsl
sub
and
inc
and
test
pusha
shlb
icebp
pop
adcb
and
mov
add
mov
push
push
into
cmp
sahf
xor
ret
ja
andl
push
push
pminsw
mov
pop
movsb
pop
xor
and
adc
sub
rorb
push
call
mov
in
inc
idivl
enter
pushf
and
in
jo
and
clc
jb
outsl
cmp
pop
mov
adc
pushf
jns
jg
ret
jge
aas
aad
jl
and
movsl
shll
cmc
mov
mov
jecxz
jae
lea
leave
gs
movsb
setns
xor
repnz
pop
mov
jb
ja
repz
or
daa
pusha
clc
test
popa
fcomps
call
sub
test
je
push
pushf
xor
mov
xchg
cmp
jmp
mov
insl
add
xor
aas
ja
js
mov
out
dec
xchg
push
adc
sub
movsl
adc
and
loopne
adc
pop
popa
icebp
cltd
mov
mov
cmp
mov
ss
cli
dec
jne
and
sub
shlb
iret
push
arpl
sbb
int3
sahf
fildll
frstor
pop
dec
fidivs
es
mov
sub
push
add
add
jb
aaa
mov
lret
sbb
xchg
xor
loop
sarb
std
mov
ljmp
jmp
les
ficoms
shrb
jbe
das
movl
jg
stc
mov
scas
cmp
mov
out
mov
adc
pop
ficomps
les
lahf
cwtl
icebp
adc
jg
mov
sbb
fisttpl
xor
outsb
jg
mov
addr16
add
movsb
inc
jecxz
sub
imulb
inc
sti
leave
lahf
dec
aas
sbb
jl
or
andl
jb
add
test
iret
in
repnz
lcall
mov
loopne
jb
jnp
mov
int
or
and
mov
pushf
sub
cmp
mov
mov
test
add
mov
les
xor
sbb
popw
fwait
ret
stc
mov
in
xor
mov
pusha
inc
xor
push
lahf
add
mov
jp
cmp
out
jge
xchg
gs
pushf
push
into
daa
ds
out
jbe
adc
out
lea
icebp
jnp
hlt
jns
or
aad
mov
test
lock
fwait
jmp
inc
int3
sbb
lret
jecxz
sub
outsb
imul
or
scas
mov
mov
stos
and
jmp
dec
scas
lods
stos
iret
inc
mov
pop
add
inc
dec
ljmp
jno
ds
or
scas
add
jno
fisttps
insb
in
fcoms
jns
fcmovne
aad
lahf
add
test
sub
xchg
or
mov
icebp
adc
sub
aaa
enter
jbe
or
ds
popa
aaa
cmpsl
cmpsl
movsl
xchg
popa
filds
sti
dec
test
movntps
jp
aad
stos
call
fildl
pusha
addr16
test
push
jmp
xchg
jge
sub
xchg
mov
mov
lcall
push
icebp
cltd
fadds
add
xor
pop
fcomps
sbb
pop
incb
dec
and
cmp
push
movsl
adc
and
rclb
add
sbb
lret
fstpl
ljmp
adc
push
and
xchg
mulb
sub
test
insl
push
adc
aad
adc
push
scas
cmpb
data16
mov
jecxz
add
scas
pop
ljmp
pop
push
pop
mov
jne
mov
and
jl
dec
movsb
aad
popa
jo
test
jno
xchg
push
push
jnp
sbb
lcall
dec
les
lahf
pop
out
das
lds
dec
enter
repnz
inc
pop
jne
bound
in
push
test
cmp
repnz
or
sub
fldenv
or
fsubrs
dec
sbb
sub
pop
add
push
push
pop
cmp
aad
or
inc
cmp
mov
pop
and
push
js
test
push
mov
mov
push
or
add
add
dec
outsb
push
push
or
mov
lods
lret
ja
or
bound
pop
xor
aam
js
popa
mov
push
fs
jle
mov
popa
or
add
xchg
xchg
sub
mov
push
pushf
add
jbe
cmp
push
shl
stc
fistpll
les
ret
xchg
daa
inc
loope
fcoms
xchg
push
mov
pop
xchg
sbb
lea
push
push
std
mov
mov
inc
imul
in
test
dec
in
dec
sbb
push
test
sub
orb
aam
aas
jp
insb
sarl
fistpll
cmp
shrl
mov
ljmp
xlat
outsl
popa
inc
add
incb
pushf
ljmp
xchg
jge
pop
sbbb
pop
sub
movsb
pop
adc
mov
push
jecxz
mov
fs
mov
outsl
mov
pop
rcll
dec
inc
jmp
and
movsl
out
fscale
push
jne
dec
mov
cld
test
xchg
add
dec
mov
cmpsb
sahf
adc
mov
jbe
mov
fwait
inc
stos
inc
xor
cltd
and
sarl
push
dec
pop
arpl
iret
inc
ljmp
xchg
cmp
jb
hlt
hlt
outsl
insb
xchg
sub
mov
shlb
mov
sub
popa
into
out
mov
faddl
mov
les
pop
xchg
mov
or
shlb
ret
cmp
add
sub
and
es
pop
lods
testb
stc
leave
bound
or
pop
mov
shll
mov
loop
loope
jle
test
movsl
adc
popa
lret
and
mov
xchg
mov
addr16
add
dec
icebp
push
sbbl
lret
inc
dec
jae
push
pop
add
pop
mov
inc
adc
cld
add
insl
dec
test
movl
push
pushf
or
imul
mov
fcmovnbe
xor
lret
aam
push
inc
xlat
adc
add
rolb
push
inc
xchg
xchg
mov
ljmp
stc
adc
sahf
mov
aam
xor
xor
pop
scas
or
mov
clc
cwtl
xchg
inc
inc
dec
es
inc
out
xor
push
insl
int
in
jno
cltd
xor
ja
sbb
jmp
cmc
jecxz
inc
mov
xchg
dec
xchg
or
rcrl
dec
addr16
pop
xor
fisubrs
icebp
out
mov
cmp
out
arpl
sbb
inc
repz
sbb
mov
aaa
inc
pushf
push
adc
inc
mov
in
xchg
test
in
aas
stc
and
lods
inc
push
jno
test
push
xor
mov
mov
pop
inc
and
sbb
or
ret
push
test
inc
mov
sub
rcll
lds
jae
ja
fwait
sub
push
sbb
mov
pop
repnz
arpl
sbb
push
movsl
pop
push
sbb
dec
xor
sub
inc
in
adc
push
pusha
jno
in
in
mov
mov
sbb
fcmovb
repnz
adc
mov
add
testl
ret
insb
push
mov
cli
clc
scas
cmpsl
popa
mov
dec
add
lock
sbb
dec
stc
and
lods
std
hlt
aas
mov
outsl
inc
pop
push
test
sbb
xor
fistl
enter
js
int
adc
sar
ficoms
adc
or
mov
addb
jae
roll
add
pop
jge
scas
jecxz
movsb
stos
int
sub
or
dec
scas
pop
nop
xlat
lea
add
lock
mov
ret
mov
test
mov
mov
dec
mov
pop
xchg
lock
je
test
pushf
fisubrs
jge
aas
daa
dec
imul
mov
add
js
lods
mov
mov
push
sub
jecxz
in
ss
mov
ss
aad
dec
jns
and
dec
shll
and
ret
cmp
testl
in
xor
pop
std
cwtl
pop
out
rep
jbe
sti
sarl
xchg
and
clc
fucomi
mov
aas
orl
test
jg
xor
xor
in
ljmp
push
cwtl
aad
je
sub
dec
push
mov
aaa
call
cld
mov
fwait
jmp
lahf
adc
popf
adc
adc
icebp
xchg
xor
cmpsb
dec
adc
ljmp
out
arpl
inc
outsl
push
in
gs
push
or
shll
push
out
je
pcmpeqd
ds
test
hlt
push
mov
sbb
push
pushf
negb
sti
cmp
jmp
xchg
or
mov
adc
inc
xchg
andb
push
and
sub
sbbb
dec
pusha
sub
fisubs
and
jne
lds
jnp
push
in
enter
aas
clc
aam
test
call
leave
imul
jecxz
mov
and
sahf
sti
out
inc
movsb
or
mov
pop
add
push
sub
mov
xchg
and
mov
and
cltd
aas
dec
pop
sbb
fmuls
inc
les
in
xor
pop
out
sub
dec
xor
pusha
cltd
imul
xchg
dec
repnz
xchg
loope
int
and
mov
sub
mov
shll
jg
inc
dec
aad
lret
imul
lods
and
shll
sbb
aaa
and
pop
ror
lods
nop
aad
or
sti
jle
xchg
out
add
pop
xor
popf
mov
addr16
ror
mov
sahf
jle
repz
sbb
mov
fcomps
je
scas
sbb
into
add
das
and
sub
and
insb
lea
mov
ds
pop
push
scas
push
inc
iret
jae
sahf
mov
test
pop
aas
fnstenv
aaa
jno
out
sbb
dec
xchg
sbb
jg
push
inc
aam
inc
mov
add
mov
cmp
jno
inc
pop
aas
test
push
iret
pop
out
mov
inc
rcll
and
cs
js
push
add
les
mov
pop
pop
push
cmp
gs
xor
xor
shl
add
jp
pop
inc
sbb
inc
push
add
scas
adc
inc
punpcklbw
mov
out
adc
jne
push
ret
mov
pop
jbe
mov
mov
push
aam
ds
inc
in
and
sbb
stos
loop
insb
inc
scas
scas
imul
imul
out
dec
nop
dec
int3
push
push
mov
dec
cmpsb
mov
cmpsb
in
and
lods
and
stos
and
or
xchg
sub
pop
adcb
pop
xchg
nop
mov
dec
mov
js
gs
sbb
cmp
fmulp
cmpsb
fs
sbb
mov
jb
xchg
xor
imul
fidivrs
jecxz
adc
cmp
cmpsl
testb
lods
sub
lahf
sti
mov
adc
ret
lds
add
ja
fwait
loopne
loope
mov
in
xlat
lahf
das
and
int
pop
repz
mov
popf
mov
or
popf
pop
fxch
gs
ss
aam
mov
jecxz
mov
les
and
cld
add
push
jmp
rcrl
cmc
popf
xchg
iret
fs
test
mov
cld
xchg
mov
cwtl
stos
xchg
nop
mov
int
or
push
in
repz
push
sub
push
dec
fsubrl
pop
adc
in
gs
lret
add
fcoms
dec
ja
test
mov
jmp
mov
xor
sub
lea
mov
ljmp
clc
adc
cmp
mov
adc
ljmp
xchg
mov
inc
aas
mov
into
mov
ret
push
sub
adcl
lahf
pop
out
scas
pop
adc
fwait
outsl
stos
inc
jmp
fiadds
cld
lret
mov
icebp
stc
in
je
outsl
cld
jns
pop
xlat
dec
nop
pop
xor
cmpsb
sub
pop
xchg
loop
add
addr16
outsb
cmpl
push
insb
out
push
push
inc
mov
mov
outsl
xor
or
out
fistps
fs
or
pushl
cmpsb
test
shrb
enter
cwtl
sub
leave
push
or
xor
scas
sti
jb
je
push
adc
testb
mov
mov
xchg
nop
inc
sbb
clc
shrb
inc
sti
push
and
test
mov
mov
pop
fistps
loop
xor
icebp
gs
sub
aas
mov
dec
dec
dec
jne
into
pusha
stc
cmpsb
call
xchg
ds
cmp
inc
cmpsb
cmp
sahf
out
pop
jo
pop
and
adcl
std
stc
es
loop
outsb
cmpsl
xor
push
iret
pop
lods
cwtl
call
paddd
repz
shr
rcrl
sbb
hlt
out
es
inc
out
jo
push
push
nop
xchg
push
sbbl
or
icebp
fnstsw
roll
stc
push
push
jne
jge
dec
cmp
xchg
jns
rclb
fiaddl
dec
xlat
das
fwait
adc
dec
lret
subl
mov
mov
sahf
xchg
jg
push
bswap
sub
pop
cmp
int3
mov
push
push
dec
addr16
in
jnp
data16
pop
inc
int3
fcoml
xorb
jl
mov
mov
out
int
mov
xchg
repnz
pushf
pop
jbe
inc
in
xchg
and
inc
add
popf
jo
sub
xchg
dec
iret
mov
dec
jne
push
jg
push
iret
ds
adc
jae
adc
mov
lods
adc
add
lock
das
stos
pop
mov
js
lahf
and
int3
and
push
mov
sbb
xchg
nop
cwtl
rcrl
cmpsb
mov
and
iret
mov
aaa
imul
inc
dec
lds
xor
js
and
ljmp
pop
out
jne
adc
ss
pop
push
call
pop
mov
testl
dec
movl
mov
cmc
sahf
daa
and
shrl
fadd
pop
pop
adc
push
imul
sub
lods
ret
dec
mov
rcrl
scas
movsl
outsl
repz
in
shrl
insl
stc
sub
faddl
outsl
insl
roll
leave
ret
xor
mov
nop
adc
and
imul
pop
mov
cmp
ret
add
dec
cmc
pusha
adc
sub
ss
ss
and
add
push
cltd
lret
push
enterw
int
mov
gs
jp
mov
test
pop
xchg
and
fwait
pop
loopne
adc
dec
xchg
jnp
mov
rorb
jo
fisttpll
mov
add
mov
pop
les
fsub
in
dec
dec
xor
lods
push
fidivrl
mov
insl
movq
jae
adcb
call
xchg
test
pop
jmp
into
nop
xlat
push
call
xchg
pop
pop
cmp
lds
sbb
clc
daa
sbb
xchg
fmulp
nop
arpl
mov
xor
push
insb
test
xchg
in
addr16
or
test
cwtl
das
or
rorl
imul
jle
pushf
xchg
movsl
dec
ja
inc
pop
shll
dec
cs
popa
push
push
pop
ss
imul
cld
cmp
sbb
mov
jp
pop
addr16
pop
roll
adc
dec
jae
shrb
iret
push
xchg
into
dec
jp
pop
pop
addl
fiaddl
jae
jl
sbb
xchg
xchg
sbb
xlat
mov
jae
push
adc
pop
and
daa
cld
push
call
and
aas
dec
daa
pop
dec
inc
inc
into
out
icebp
or
ja
and
adc
push
frstor
ss
pop
mov
sub
fxch
stos
pop
xchg
sub
mov
adc
dec
daa
mov
nop
test
jb
fistpll
cli
nop
push
rorb
popf
leave
pop
pop
repz
xor
cmpsb
sti
xchg
shrb
pop
inc
lock
fistpll
mov
in
push
cmp
push
imul
ja
imul
repz
out
jge
adc
or
dec
cli
pop
xchg
inc
hlt
push
movsbl
popf
dec
lock
or
outsb
or
mov
jl
pop
in
test
pop
sarb
in
shl
cmc
mov
or
test
lahf
test
inc
ds
xor
sbb
mov
sbb
push
jnp
and
mov
adc
xchg
ss
js
pop
clc
in
leave
push
push
add
loopne
fcoml
lret
rclb
mov
mov
mov
icebp
loop
std
fisubs
movsl
sbb
sub
nop
mov
and
inc
movsb
sbb
fsts
in
cmp
jbe
rclb
cmp
out
cld
jg
ret
inc
cmp
jp
xchg
lea
mov
or
ror
addb
adc
shl
jge
call
pop
xor
xchg
lods
cmp
js
outsl
test
or
and
imul
xchg
mov
xor
leave
ret
xchg
jmp
test
xor
test
fs
lods
xor
in
iret
enter
scas
add
mov
in
fs
xchg
jb
add
lods
jmp
and
shrb
addr16
push
lock
push
into
mov
mov
orl
sbb
cmp
mov
pop
std
lret
mov
out
and
sti
xchg
jo
cmpl
imul
xor
sahf
mov
sub
jle
jecxz
enter
mov
cmp
int3
and
pop
jo
lds
jb
jb
int
cmc
mov
mov
jp
fucom
cs
out
shlb
test
mul
cmp
pop
bnd
imul
pusha
mov
push
mov
mov
sbb
loop
cmp
arpl
sub
dec
xchg
fs
pop
jae
jl
jmp
shrl
jge
mov
js
xchg
movsl
roll
cmp
mov
jo
pop
in
adcb
ficoms
out
cmc
add
or
sub
adc
mov
iret
sub
adc
mov
mov
rorb
test
push
adc
rcrl
xor
xchg
outsl
mov
loop
aam
push
xchg
cmpsl
or
pop
push
ficoms
push
xor
sahf
adc
mov
repz
push
xchg
enter
cmp
jo
pop
mov
adc
push
mov
xchg
dec
mov
roll
mov
cmp
mov
jle
scas
dec
mov
icebp
and
add
or
addr16
imul
push
imul
cs
pop
loope
xor
iret
mov
mov
imul
jbe
pop
sti
sub
sbb
stos
pushf
lret
popf
push
fstpl
or
std
pusha
push
sub
mov
lock
mov
pushf
mov
push
cmp
push
push
mov
daa
icebp
jmp
pop
dec
or
in
out
sbb
cmp
orl
movsb
test
mov
xor
sti
pusha
and
cmp
push
imull
mov
insl
cmp
mov
dec
add
and
cmpsl
push
jl
lods
push
sbb
mov
jmp
cli
jl
mov
or
xor
jno
es
imul
pusha
ret
lcallw
sti
mov
and
loopne
subl
xor
lret
loop
mov
jns
cmp
ret
movsl
push
movl
arpl
scas
mov
rcr
cmp
movsb
jb
and
dec
rcll
dec
sbb
das
sub
out
jge
aad
xlat
jl
inc
int
cld
push
mov
shrl
mov
adc
mov
mov
out
add
cld
shl
xchg
mov
mov
and
repz
or
insb
out
push
dec
xchg
xor
insl
stos
pop
xor
mov
jo
dec
stos
jb
addb
and
stos
cwtl
fwait
orl
and
inc
dec
aad
nop
pop
into
pop
cmc
pop
fimuls
cmpsl
push
fdiv
pop
xor
xchg
ja
mov
repnz
xchg
stos
or
push
adc
mov
cmp
popa
mov
ja
js
mov
icebp
sbb
or
outsb
insb
sub
push
shll
jae
test
js
inc
inc
push
add
lcall
xorl
cmp
sub
and
pushl
aas
xor
icebp
subb
ljmp
movnti
mov
add
inc
jnp
rcl
nop
test
jl
and
push
cmp
fistl
mov
dec
sbb
and
icebp
mov
adc
cmp
xor
shll
dec
cmpsb
gs
popf
leave
pop
adc
sbb
cmc
ljmp
push
lret
adc
insl
sbb
pop
mov
loop
and
mov
and
and
inc
cmp
lods
mov
sbb
scas
inc
inc
sbb
xchg
mov
sahf
or
sub
movsb
js
dec
outsb
out
xchg
fmull
pop
mov
test
xchg
fsincos
sbb
mov
push
xchg
jmp
int
xor
mov
mov
dec
inc
dec
movsb
out
repz
adc
stc
push
xor
xorl
rorl
mov
mov
push
fisubrl
popf
pop
fs
adc
sbb
cmpsb
test
lock
aas
stos
es
mov
xor
int3
in
test
add
xchg
stos
xlat
jo
in
pop
imul
pop
cmc
hlt
push
sub
push
adc
int
jle
jae
scas
shll
mov
or
lock
dec
xchg
cs
mov
in
scas
cltd
push
scas
inc
stos
gs
jp
popa
sbb
movsb
dec
lock
aad
mov
stos
mov
lods
or
int
cmp
mov
clc
jne
movsl
les
adc
sbb
push
or
inc
mov
xchg
mov
and
jnp
dec
sub
sti
aas
lods
ja
call
sbb
loope
lea
mov
test
and
mov
mov
fisubrl
lret
push
outsb
or
cmp
leave
cmpsb
mov
int
gs
mov
imul
movsb
int
xor
add
dec
test
sbb
adc
push
or
mov
and
bound
es
negb
aad
jo
stos
cmp
insb
sti
popa
fimull
lret
dec
jp
popf
ret
pusha
or
mov
repz
mov
mov
std
outsl
icebp
lcall
sarb
sub
cmp
stc
cmp
in
in
sahf
cld
lea
jge
fcoml
inc
in
clc
mov
dec
add
insb
neg
imul
pop
mov
add
jno
fstpl
push
fstpl
movsb
dec
fsubs
lods
lds
jp
mov
and
mov
add
dec
movsl
out
jnp
dec
inc
xor
pop
pop
push
iret
add
sahf
jb
pushf
testl
xor
aam
jbe
mov
inc
ss
mov
cmc
ss
adc
or
sti
loop
jo
es
push
and
fdivs
add
out
inc
cmp
mov
push
fwait
mov
cmp
xchg
pushf
fistpll
clc
hlt
adc
cmpsl
mov
test
inc
fcmovnu
out
pusha
fs
sub
mov
mov
test
cli
jge
add
aas
out
hlt
mov
pushf
push
addr16
dec
and
fidivs
lods
and
negb
mov
in
sub
mov
inc
jge
das
jle
mov
jno
or
fsubrs
pop
movsl
mov
ror
adc
xor
cmp
mov
sub
mov
mov
js
insl
std
mov
push
pop
push
xchg
jno
aas
scas
ja
and
les
std
lods
fbld
sbb
mov
ret
inc
push
repnz
push
mov
jo
mov
cmp
dec
inc
idiv
cli
out
pop
xorb
adc
pop
jo
nop
pop
xchg
jb
test
or
xchg
loope
vmovntpd
out
repnz
sub
xor
sub
out
mov
adc
lods
jb
xchg
jl
aaa
add
mov
cwtl
jmp
stc
xor
push
inc
cmp
mov
mov
loopne
or
stos
andb
loop
jbe
inc
je
enter
pop
lahf
ret
arpl
push
rorb
mov
push
sbb
xchg
insb
xor
insb
je
or
fbstp
or
les
sub
lahf
test
jmp
add
clc
repz
icebp
pop
or
int3
xor
mov
mov
mov
adc
mov
add
cmp
adc
sbb
jb
insl
push
cmpb
cmp
pop
sub
int
sti
daa
pushf
jb
fstpl
popa
and
inc
sub
adcb
pusha
xor
and
cmp
jae
push
cmp
call
aad
jle
rcrb
mov
push
adc
insb
cmpsb
inc
and
add
cmc
xor
ljmp
movsb
mov
mov
lods
jbe
cltd
lahf
pop
pusha
in
or
dec
fwait
sbb
callw
or
rolb
mov
pop
sbb
adc
popa
movsb
pushf
stos
xchg
into
in
add
xchg
mov
lods
jmp
inc
ret
xor
jae
xor
js
push
add
inc
jns
ljmp
lret
add
mov
repnz
shll
icebp
dec
mov
icebp
pop
pop
out
cmp
shrb
mov
push
scas
iret
push
mov
adc
shlb
out
dec
stc
negl
sbb
imul
sub
xor
dec
lods
push
mov
mov
sbb
mov
popf
mov
adc
jecxz
or
dec
and
leave
mov
push
cld
mov
xchg
add
lret
shlb
sti
push
push
pop
jb
insb
jmp
adc
mov
xor
fdivrs
test
inc
jb
mov
jbe
out
xor
xchg
xchg
aas
aas
or
cwtl
rcl
pop
pop
adc
or
mov
insb
insl
adc
lods
jmp
out
xchg
sarb
push
les
sbb
inc
add
ss
movsb
and
ret
out
sub
stos
aam
sbb
push
push
call
push
out
sub
push
xchg
xchg
pop
cwtl
notb
push
mov
stos
outsb
push
aad
mov
inc
fists
lret
xchg
nop
jle
sub
sub
ljmp
test
sub
adc
ds
std
push
scas
jno
movsl
cmpsb
inc
mov
push
and
sbb
cmp
fidivs
scas
notl
cmpsb
sbb
in
add
fidivrs
fnsave
aad
inc
inc
mov
and
movsl
cltd
dec
mov
mov
jmp
dec
outsb
inc
jno
push
gs
xchg
gs
subl
add
clc
xor
push
stos
xlat
adc
mov
cmp
push
pusha
sub
test
sub
xor
cmp
xchg
or
push
sub
pop
push
inc
aad
and
mov
pop
or
mov
dec
xchg
test
pop
mov
xor
or
and
lock
fdivr
sbb
inc
fcmovnb
pusha
jmp
rorl
hlt
and
mov
add
fldcw
test
mov
fs
aaa
xlat
scas
and
lcall
js
and
and
xor
pop
dec
jl
arpl
jle
xchg
lods
flds
pop
arpl
cmp
inc
inc
xor
mov
jl
jmp
sub
sbb
inc
xorl
cmpsb
push
leave
lcall
mov
mov
fs
shrb
xor
sub
mov
sub
xor
stos
xorb
out
jno
mov
pop
into
xchg
lret
jns
imul
sbb
aad
leave
push
xchg
fwait
stc
mov
mov
and
mov
sub
stc
push
cwtl
jb
rcl
clc
sbb
inc
jmp
mov
ret
es
xor
pop
adc
jmp
out
add
or
push
mov
pop
pop
std
int
pop
sahf
jl
xchg
inc
push
data16
aad
push
pop
js
in
hlt
outsl
add
xchg
mov
test
ds
test
mov
sub
inc
xor
add
mov
les
push
addr16
std
daa
add
mov
mov
jmp
xor
dec
loopne
jg
jp
xor
jo
pop
pop
shll
adc
sub
and
stc
xlat
push
enter
adc
not
repnz
xor
jno
xchg
mov
push
ja
cmp
shlb
push
lds
pop
sbb
fisttpl
xor
mov
jb
jae
cwtl
sbb
add
cmpsl
xlat
gs
sahf
mov
fwait
pop
leave
pop
and
data16
inc
out
inc
inc
jns
les
inc
test
xor
es
imul
sub
ret
jae
movsl
scas
jp
pop
loope
and
lahf
sbb
insb
dec
sbb
in
and
add
lcall
mov
stc
xchg
mov
sub
imul
popa
leave
aad
ret
xchg
lods
jecxz
outsb
xchg
shrl
lock
jmp
pusha
mov
sub
out
and
repnz
popa
jo
test
xor
jge
sub
aas
push
cmpsl
push
pop
addl
cmp
mov
mov
sahf
sub
add
pop
push
aas
xlat
imul
push
feni(8087
js
inc
insl
or
adc
pop
or
je
cmp
inc
add
mov
lret
ret
mov
cmp
dec
lea
cs
mov
ss
or
jmp
xor
loope
stos
movsb
stc
outsl
ja
jmp
sub
xchg
inc
bound
add
adc
push
adc
popf
lods
cli
js
or
outsl
mov
mov
in
sti
repz
mov
cmp
rorb
adc
cli
mov
lret
mov
push
jmp
xchg
xchg
add
aam
icebp
cmpsb
mov
repz
in
xlat
xchg
test
and
scas
into
and
cmp
mov
adc
rcrb
pop
sbb
jl
shll
std
les
rolb
cltd
and
aad
test
fstl
xchg
add
jmp
bound
lret
adc
push
sbb
dec
cmp
add
mov
dec
aaa
jmp
rorl
lock
outsl
push
or
inc
cmpsl
shrl
pop
int
mov
mov
push
pop
adc
scas
fs
mov
add
ret
jno
movsl
jae
dec
insl
testl
roll
loopne
inc
scas
leave
cmpsl
shrb
daa
dec
adc
mov
adc
std
lea
int3
push
lret
jge
daa
fdivrl
fistpll
les
dec
jmp
mov
std
orl
xchg
pusha
and
xchg
sub
xor
push
xchg
add
sbb
jle
fs
sbb
js
mov
dec
cltd
and
ds
jo
dec
cmc
push
inc
repz
sbb
in
sub
roll
data16
iret
xor
add
xor
sarb
in
cmp
jns
outsb
cmpsb
add
and
inc
mov
adc
jae
push
push
xchg
xor
clc
in
add
movsb
scas
lods
scas
in
jle
mov
jno
imul
xor
rorl
in
aad
mov
int
in
frstpm(287
push
fucompp
imul
sub
adc
xor
pop
cmpsl
cmp
fimuls
fisubs
outsb
lret
bound
sub
jb
jle
int
mov
gs
outsl
fcoms
subb
in
push
shlb
movsb
cmp
push
or
repz
repnz
ja
aas
push
pop
dec
cwtl
dec
xchg
cmp
jne
arpl
mov
imul
adc
sbb
adc
xorb
jae
mov
adc
adc
mov
jg
mov
sub
inc
sar
pop
ds
add
mov
dec
fdivrl
insb
or
add
sub
lods
cmp
jp
leave
fildll
push
dec
mov
mov
adc
rcr
inc
jo
inc
mov
mov
adc
mov
or
pop
mov
inc
loop
lea
pop
add
in
cld
int
or
mov
mov
pop
xchg
xlat
mov
push
adc
pop
in
xlat
daa
cmp
pop
push
stos
cld
or
rclb
clc
jne
fnsave
sarb
pop
mov
testb
mov
outsl
sbb
dec
pop
xor
push
leave
mov
repz
push
imul
lret
aad
lahf
and
fwait
cld
sbb
pusha
adc
adc
sub
inc
aaa
pop
jae
jnp
arpl
movsb
add
pop
push
divl
mov
scas
jb
mov
dec
push
movsl
testb
cltd
rcl
dec
xchg
js
mov
in
adc
aaa
aad
loope
mov
mov
pop
and
mov
ret
in
adc
imul
js
ljmp
jmp
jg
imul
shl
loope
test
xor
stos
and
or
mov
jae
push
ljmp
xchg
ret
push
push
rclb
clc
pop
jmp
rorb
mov
and
insb
xchg
sub
aaa
dec
mov
das
inc
sub
push
xor
mov
jg
cmc
icebp
mov
inc
sbb
mov
inc
cwtl
imul
add
lcall
inc
push
ds
in
xor
ljmp
or
pop
mov
or
or
pop
das
xor
sbb
mov
ret
int
fucomi
and
mov
and
out
ja
loopne
pop
movsb
pusha
xor
adc
jnp,pn
leave
adc
aaa
add
call
cmc
scas
aas
cmp
fs
stos
test
sahf
ret
mov
lahf
popf
adc
push
push
push
in
push
cmc
movsb
test
gs
loopne
sub
adc
and
pop
mov
lcall
inc
jne
in
popf
inc
sbb
mov
out
cli
ret
sub
out
mov
sub
sbb
and
pop
rcrl
out
xor
imul
mov
call
jns
pop
adc
mov
cmpsl
mov
inc
xorps
std
mov
mov
adc
sub
pop
jge
mov
rorb
xchg
xchg
cmc
or
xor
repnz
inc
in
lock
jmp
aaa
add
int
imul
inc
les
test
and
and
inc
fisubrs
jbe
or
ret
and
dec
sbbb
mov
cmc
mov
xor
fdivrs
mov
xchg
jns
lea
pop
lcall
add
push
pop
cwtl
adc
xchg
mov
push
je
andb
sub
leave
int
dec
jns
mov
pop
out
sbb
aaa
sub
cmp
repnz
in
bound
repnz
out
cmp
push
jle
rorb
outsb
cmp
mov
pop
hlt
or
nop
mov
sub
jno
roll
add
fildl
push
xchg
jbe
stos
pop
enter
shl
cltd
adc
daa
lock
sub
sti
xchg
sub
insl
add
sub
push
jnp
les
fdivs
mov
rcrl
adc
iret
nop
dec
das
mov
xor
inc
sub
js
mov
adc
jge
inc
dec
insb
xchg
mov
mov
stos
inc
pop
push
inc
std
pop
inc
sub
ret
pusha
pop
or
icebp
ss
mov
add
jmp
call
int
push
xor
dec
je
fimuls
and
int3
data16
xchg
lret
ficoml
insb
sub
out
popf
lret
fstl
adc
cmp
std
xor
adc
inc
adc
addr16
add
xor
fmull
sub
fcompl
push
stc
insb
add
cmp
in
push
ljmp
inc
mov
push
addl
shlb
fstpt
icebp
je
xor
dec
pop
fwait
bound
cmp
in
movsl
inc
mov
push
or
pop
stos
sahf
out
sti
mov
mov
loope
ljmp
cmp
cmp
in
inc
dec
bound
repnz
push
sbb
sbb
clc
and
sub
mov
jbe
aad
jle
xchg
mov
and
xchg
pop
fs
out
push
idivl
fisubrl
push
sti
ljmp
movsl
jmp
cltd
pushf
inc
and
jmp
jnp
and
aad
adc
xchg
sbb
ret
call
add
mov
mov
or
insl
inc
in
loop
push
push
fstl
ss
jl
xchg
scas
push
aam
loop
inc
mov
pop
jo
cmp
insl
xchg
xlat
push
les
adc
out
enter
hlt
dec
xor
jnp
adc
mov
and
inc
jmp
jno
dec
movsb
cwtl
test
iret
add
pop
xchg
mov
xor
cwtl
dec
int
cli
jns
inc
sbb
rolb
or
outsl
fstps
lock
jg
inc
in
push
xchg
xchg
xlat
test
add
filds
adcb
inc
in
xor
mov
cmpsl
cli
sub
inc
and
mov
pop
sbb
pop
cmp
ss
ja
movsl
or
pop
dec
js
adcl
popa
dec
adc
test
adc
sbb
pop
fwait
call
adc
je
xchg
add
nop
rcl
std
sbbb
jge
lods
mov
jno
int
xchg
push
ffree
xorb
mov
mov
lods
repz
mov
sbb
mov
std
orl
sbb
xchg
imul
stos
mov
imul
shlb
test
pushf
xchg
clc
negb
adc
clc
push
or
sbb
jmp
mov
mov
xchg
out
or
cld
lea
dec
and
dec
icebp
dec
dec
push
loope
pop
aas
shl
xchg
shrl
lock
outsl
mov
xchg
std
mov
ficoml
xor
inc
push
fstpt
or
daa
dec
or
in
out
out
imul
test
mov
das
or
pop
adc
or
xor
in
rclb
cmp
sarl
jecxz
dec
and
fs
lods
pop
shrl
jbe
sbb
mov
pop
push
movsb
mov
jge
loope
add
aaa
jbe
pop
and
movaps
xchg
sbb
idivb
leave
fstpl
inc
or
xchg
mov
in
push
out
xchg
lcall
xchg
mov
push
xor
and
and
clc
mov
push
inc
adc
mov
mov
cmovp
enter
out
iret
rdmsr
stc
sub
mov
and
inc
lret
mov
nop
mov
mov
xor
shll
cmpsb
pusha
sub
mov
mov
out
popf
xchg
call
dec
je
push
std
cmp
out
and
sub
mov
push
jns
ds
popa
lock
and
cld
out
pop
mov
jge
leave
xlat
pushl
movsb
push
test
ror
xor
movsl
xchg
add
sub
ljmp
jae
adc
hlt
xchg
mov
sbb
rolb
sub
push
out
aas
push
repz
lods
scas
inc
sub
or
sti
mov
dec
pop
mov
mov
lds
mov
mov
test
pop
stos
xchg
xor
sahf
andb
pop
pop
dec
push
out
jnp
out
mov
imul
loopne
cs
sub
loope
ds
clc
outsb
sarl
add
pop
fimuls
lcall
push
add
pop
mov
pop
push
add
or
dec
push
lods
in
push
sbb
icebp
mov
inc
or
push
jns
push
movsb
add
das
jno
sbb
call
in
and
mov
pop
movsb
imul
pop
jmp
inc
mov
ss
clc
jmp
dec
and
or
int3
jg
insl
filds
pop
mov
xorb
xor
das
call
movsl
test
pop
add
jge
mov
and
shrb
add
call
push
push
jae
daa
into
shll
out
add
scas
into
lods
mov
dec
popa
cli
mov
adc
aaa
je
xchg
xchg
leave
pushf
inc
repz
ret
idivb
cs
ffree
cmp
nop
mov
fmul
jl
push
dec
push
mov
adc
mov
mov
flds
movsb
fs
inc
dec
inc
push
cltd
push
int3
stos
mov
pusha
incl
es
in
shl
pop
lahf
or
cli
mov
in
adc
sar
jnp
push
sbb
sbb
adc
jbe
icebp
cmp
push
xor
adc
fiadds
arpl
ret
roll
ret
jne
into
jl
gs
daa
cmc
cmpsl
sti
cli
pusha
xchg
pop
push
mov
repz
divl
jp
cmp
mov
in
daa
orb
ljmp
out
pop
jo
add
lds
add
cmp
dec
cli
ss
ficompl
mov
fisubrs
loope
sbb
jg
mov
movsl
mov
jecxz
and
cmp
ljmp
mov
jns
mov
jmp
aaa
xchg
clc
and
inc
loope
xor
push
repnz
mov
divb
sub
xor
push
or
jecxz
push
lea
jae
or
adc
imul
pop
iret
cmc
add
aam
aam
mov
loope
pushf
sub
aaa
and
xchg
fcmovu
stc
mov
xor
jne
push
xchg
in
fisubrl
movsb
jle
rclb
jp
idivl
sbb
movsl
test
push
jmp
out
adc
sbb
jecxz
push
mov
out
sti
in
insb
arpl
out
sbb
xor
push
stos
movsl
jns
out
adc
mov
jp
push
cltd
js
pop
mov
jo
rorl
add
dec
jnp
lret
or
inc
ret
jmp
ror
js
and
inc
enter
mov
mov
mov
daa
cli
add
add
pop
dec
jb
mov
or
fs
gs
add
cwtl
lds
ljmp
adcb
loop
push
imull
mov
xorb
inc
dec
push
outsb
stos
push
push
gs
sub
int3
jmp
loope
icebp
xor
mov
loopne
movb
or
neg
shl
push
nop
dec
lret
push
jns
xor
and
lret
andb
shll
fwait
je
adc
aaa
push
jecxz
mov
dec
out
inc
addr16
add
sbb
mov
xor
and
mov
fdivl
xor
stos
mov
pop
pop
divl
fwait
mov
or
int3
push
mov
stos
or
cld
sbb
arpl
jge
icebp
repz
cmc
lret
mov
and
loopne
in
push
jae
cltd
inc
xor
ror
jno
imul
sbb
mov
in
cmp
pushl
and
loopne
or
fdivrs
stos
loopne
das
adc
dec
shll
lods
push
sbb
mov
jge
fwait
cltd
nop
and
mov
mov
adc
or
out
sub
stos
scas
xchg
jge
pop
cs
stc
out
sbb
mov
aam
xchg
mov
or
jns
into
mov
mov
sbb
pop
sub
pop
sahf
repnz
adcl
imul
mov
test
fdivl
sarb
push
push
ret
inc
and
sbb
cmpsl
aaa
ljmp
sbb
push
lods
push
jl
inc
test
sbbb
pop
shl
in
iret
js
push
sbb
lret
cmp
xchg
mov
aas
pushf
xor
mov
popa
setnp
xor
jns
mov
jg
fldl
jns
xor
xchg
lods
sub
pop
mov
dec
pop
leave
xlat
pop
mov
andl
hlt
or
inc
out
mov
inc
mov
jbe
sub
xchg
dec
xor
pop
cmpsl
cli
ret
mov
jl
jno
repz
cmp
cmp
int
aas
jne
jg
adc
sbb
ret
mov
pop
or
pop
ljmp
pop
out
mov
fisubrs
scas
jge
scas
xchg
imul
pop
xchg
mov
out
dec
test
mov
in
outsl
cld
sti
test
in
aam
xor
pand
jno
inc
ret
hlt
hlt
dec
sub
fninit
movsl
mov
arpl
inc
ret
cmp
popf
pop
add
nop
add
outsl
adcb
add
in
out
arpl
or
push
sbb
jae
mov
int
scas
lods
jo
adc
addl
fcoml
mov
inc
pop
rcrb
test
call
mov
inc
inc
dec
add
aad
ljmp
jmp
mov
mov
sub
adc
or
sub
jge
xchg
and
adc
movsb
inc
push
insb
add
es
pop
mov
jno
sbb
and
cli
jne
pop
cmp
int
loop
mov
aam
lahf
jle
arpl
mov
pop
out
lret
fmuls
mov
adc
pop
shrb
leave
data16
cwtl
fbstp
mov
pop
sbb
adc
jb
mov
add
dec
mov
pop
lea
scas
cmp
or
add
dec
push
inc
addb
or
ret
fneni(8087
mov
notw
mov
jecxz
in
mov
sahf
cmp
or
pop
jnp
pop
jge
mov
adc
and
mov
ffree
ret
repnz
stos
bound
mov
cmp
scas
sbb
push
imul
aaa
mov
scas
mov
pop
inc
jp
frndint
ds
ret
xchg
test
daa
aam
hlt
lds
gs
repz
leave
in
sub
mov
dec
ret
add
call
adc
ljmp
mov
shll
hlt
dec
in
pop
mov
imul
ret
mov
mov
cli
push
pop
daa
outsb
daa
sbb
adc
sbb
ljmp
out
dec
push
sbb
in
arpl
jne
xor
cli
out
mov
xor
lods
pop
push
fs
jne
mulb
fbld
cmp
lock
popa
pop
insl
fists
cmpsb
incl
jge
xchg
out
cmc
push
aad
adc
aad
cmp
or
adc
jp
mov
xor
add
mov
xchg
aad
mov
insl
mov
stos
or
cwtl
push
or
sbb
and
lds
inc
mov
sub
mov
mov
mov
arpl
js
imul
cmpsb
fnstcw
in
inc
pop
pop
jo
fsubrs
mov
xchg
aad
dec
ljmp
outsb
sub
push
pop
aas
int
scas
dec
xor
mov
nop
pop
fs
ss
int
int3
pop
push
mov
scas
movsb
or
pushf
sahf
cmpsl
test
mov
xchg
popa
je
and
jp
int
pop
mov
pop
sbb
frstor
js
xchg
pop
loopne
mov
sub
xchg
sbb
int
dec
pop
out
test
mov
addb
xor
jg
pop
mov
mov
loopne
enter
cmp
out
movsl
adc
stc
cmp
dec
int
xchg
mov
adc
popa
das
adc
or
daa
mov
jno
mov
lahf
ja
add
ss
mov
pop
jns
push
jl
gs
add
push
call
mov
jg
xchg
andb
mov
xrstors
frstor
push
fbstp
nop
stc
xor
xchg
test
negl
cmp
imull
aas
mov
xor
mov
mov
push
loopne
arpl
loopne
arpl
stos
pop
cmp
jge
and
into
xchg
inc
sub
add
xchg
rcrl
cmp
sub
adc
adc
das
or
or
lahf
fisubl
adc
sbb
xor
subl
outsb
xchg
jge
sbb
scas
test
shl
pop
repnz
xor
in
ss
mov
call
push
insb
ja
push
dec
out
out
adc
adc
xchg
pop
inc
xchg
adc
aad
in
lret
inc
lds
jae
adc
sar
mov
fistpll
xchg
fwait
out
iret
adc
inc
xchg
inc
mov
and
push
or
ret
enter
stc
xlat
inc
sub
out
clc
sub
rorw
cmp
enter
mov
test
les
add
inc
mov
nop
mov
lcall
scas
ja
pop
pushf
int3
out
xor
test
xchg
call
stc
jmp
xlat
push
push
lret
ja
loopne
je
sti
dec
insl
xlat
mov
popa
roll
jns
sti
mov
pop
loop
jecxz
mov
and
mov
movsb
push
orb
xchg
jl
push
sbb
jo
adc
sarb
test
sub
imul
clc
mov
sub
cmc
cmc
das
push
sub
sbb
or
mov
jmp
rcrl
jg
lea
push
jl
xchg
cmp
jnp
mov
or
inc
mov
push
push
insl
adc
loope
jae
dec
inc
cmp
jl
push
and
jmp
push
js
and
inc
jns
jne
sub
faddl
add
sbb
lcall
mov
xor
mov
xor
mov
jl
stc
lahf
andl
mov
inc
jle
pusha
sti
fstps
gs
add
pop
xor
scas
mov
cld
mov
dec
movl
scas
pop
cli
das
ja
add
xor
and
fbstp
shl
mov
mov
in
jle
push
inc
dec
and
int
add
mov
aam
cwtl
mov
lds
lock
cs
repz
mov
adc
inc
mov
mov
cmp
into
pop
or
es
rolb
jle
and
lcall
or
mov
in
js
lcall
inc
ret
adc
lcall
mov
pop
xchg
insl
and
sub
out
je
push
in
clc
fs
xchg
add
addr16
add
push
lock
rorb
repnz
sar
push
repz
xchg
int3
ja
loopne
addr16
push
dec
mov
mov
movl
mov
sub
ljmp
cld
arpl
ror
jl
ficompl
dec
and
jno
cmp
aam
pop
fnsave
adc
mov
insl
jne
lods
mov
inc
aad
stos
jl
or
aas
xchg
mov
xchg
mov
sbb
mov
in
ret
inc
out
aaa
divl
dec
and
mov
outsl
xchg
inc
in
adc
fwait
xchg
mov
outsb
clc
xchg
sbb
sbb
push
cld
jns
ljmp
rcl
lods
xlat
das
cwtl
sti
addr16
mov
int3
out
mov
repnz
nop
popa
mov
jb
out
or
lods
out
push
mov
out
call
or
outsl
mov
aaa
repnz
lock
stos
sub
mov
lretw
and
out
sub
add
fldcw
ss
inc
cmp
xchg
dec
adc
cmp
push
in
and
jns
jecxz
lcall
in
mov
lods
add
and
test
cmp
jmp
xchg
mov
and
pop
and
cli
sub
adc
lds
rorl
dec
fidivrl
fdivr
push
jnp
jge
and
test
scas
fnstcw
jmp
cs
das
loope
lods
xchg
insb
cmp
dec
stos
pop
insb
or
and
sub
adc
mov
cli
pop
ret
mov
fnstsw
int3
jae
ja
push
cmp
cmc
fstpl
ficoms
push
loop
inc
cmc
hlt
xchg
in
and
pusha
sub
adc
iret
stos
sti
pop
mov
imul
adc
push
xchg
cmpsb
lcall
push
shlb
push
lea
fsubl
dec
push
xor
fldt
out
dec
outsb
scas
sbb
inc
sub
insb
push
test
xor
mov
lock
aam
sub
mov
xchg
push
xchg
xor
add
inc
mov
inc
adc
cmp
or
fdivrp
inc
jo
mov
repz
ljmp
or
mov
mov
mov
mov
inc
xchg
jno
jo
mov
ja
dec
and
roll
ja
jno
cmp
std
dec
popa
jg
push
pop
hlt
mov
pop
clc
pusha
outsl
std
add
xor
sub
mov
daa
sub
aad
inc
insb
jae
ja
imul
cmc
dec
xchg
xchg
inc
cmp
dec
lea
sub
jge
pusha
pop
xchg
cs
imul
fdivl
rep
sbb
js
call
dec
ret
pop
xchg
cmpl
imul
mov
push
repz
inc
scas
mov
lods
sbb
inc
cmp
push
int3
aas
xchg
xor
fidivrl
inc
or
jp
jbe
in
cltd
pop
and
pushf
mov
jo
popf
push
scas
inc
mov
inc
int
ret
and
shrl
push
adc
xor
mov
mov
dec
in
lahf
andl
fcmovnbe
vpshufhw
lods
add
cs
aaa
aaa
scas
mov
jp
ja
cmp
mov
in
lret
ficompl
adc
dec
sahf
insl
jge
and
dec
cmp
inc
push
imul
xchg
cmpsb
jne
adc
sbb
repnz
jnp
push
or
aad
jle
imul
shll
int
and
jno
inc
divl
jb
jmp
pop
call
adc
push
and
addb
add
out
test
xchg
dec
jo
or
xchg
ss
call
dec
mov
aas
aaa
rol
jge
fcmovb
cmpsl
lret
cmpsb
in
mov
mov
rolb
push
or
xchg
ljmp
scas
cli
mov
mov
dec
aad
add
icebp
and
push
out
nop
into
fldenv
leave
cli
dec
xchg
mov
jae
shrl
leave
and
clc
test
or
cld
stos
in
dec
or
stc
xchg
mov
ja
xchg
adc
int3
lods
pop
pop
xlat
adc
aas
testl
fs
icebp
fs
mov
out
cmp
sub
jne
fcoml
leave
in
pop
aam
fisubl
mov
test
out
in
stos
repz
stos
clc
stc
in
sbb
mov
imul
test
xor
leave
push
xor
or
in
adc
add
rol
mov
mov
inc
les
xchg
mov
cs
jb
xor
adc
jne
push
js
sti
fistps
xor
push
push
test
push
adc
cmp
adc
dec
fs
sbb
clc
leave
out
pop
pop
scas
dec
jmp
adc
mov
pop
jne
jb
stc
push
xchg
dec
dec
stos
or
bnd
adc
fidivrl
pop
mov
xchg
pop
loope
inc
aaa
addr16
arpl
mov
push
mov
mov
jge
cli
movsb
mov
push
push
adc
mov
mov
dec
mov
mov
xchg
or
push
sbb
inc
xlat
ficompl
pop
xorb
sub
mov
push
mov
mov
aam
in
out
neg
neg
jae
adc
arpl
loope
add
push
mov
andl
pop
mov
mulb
push
mov
clc
in
rcrl
lret
push
movsb
push
int
rclb
loopne
add
insb
xor
daa
pop
stos
jbe
out
imul
fwait
and
cmc
ljmp
xlat
outsl
jl
stc
pop
mov
stos
xchg
cltd
sbb
adc
movsb
aaa
cwtl
sbb
adc
xchg
imul
adc
out
mov
mov
and
pop
dec
rorl
xchg
stos
lods
xor
xchg
loop
cmpsl
into
ja
out
call
or
cltd
mov
cmpsl
add
jl
pop
cli
stc
dec
imul
into
add
xchg
add
dec
loopne
and
jle
xchg
sahf
or
aam
mov
jg
shl
dec
and
lock
bound
dec
lret
in
aaa
addr16
mov
or
mov
out
or
loope
popf
iret
mov
icebp
mov
popa
mov
insl
push
or
shr
int3
rcll
das
repz
loop
sub
mov
jne
inc
or
mov
es
out
push
add
sarl
cmpsb
and
cmp
mov
add
fwait
aaa
sub
inc
ljmp
mov
fldl
inc
push
jnp
fidivs
cmpsl
cmp
pop
jae
sbb
ljmp
mov
imul
std
iret
push
aas
cmpsl
test
ror
jge
test
js
mov
sbb
mov
jns
scas
jnp
mov
addr16
xor
lods
rorb
sbb
or
lea
xor
rcll
inc
or
cmp
stos
or
lock
add
add
pushf
or
jecxz
icebp
xchg
mov
lcall
insl
sub
mov
sbb
push
lods
test
and
repnz
sbb
out
testl
jg
inc
enter
in
pop
adc
fwait
xchg
lea
lods
cltd
int3
mov
adc
sbb
xchg
inc
das
insl
lret
or
fcmovb
js
insb
pop
pusha
xor
lds
mov
and
pop
scas
mov
inc
and
sahf
xchg
fildll
scas
icebp
sub
jecxz
pop
ret
leave
jl
xor
gs
and
dec
dec
js
cmc
addr16
sahf
push
movsl
mov
dec
cmp
movsl
sahf
mov
push
add
subb
loop
gs
jae
mov
push
dec
lods
hlt
test
adc
inc
cld
cmp
jnp
jae
jo
pop
in
fwait
movsl
imul
cli
in
mov
push
cwtl
bound
icebp
pusha
xor
add
pop
aam
push
mov
lret
pushf
push
lds
lahf
out
xchg
or
ftst
add
or
push
out
lods
pop
sbb
ja
leave
stc
push
popf
push
aad
into
mov
mov
sub
xchg
pop
in
lretw
call
sbb
pop
test
xchg
jne
pop
popf
dec
adc
xor
data16
push
aad
mov
gs
adc
popa
cmp
mov
gs
push
mov
push
and
add
lea
xchg
insl
jmp
data16
scas
lret
xchg
loope
dec
pop
add
xor
cmpsl
sbb
imul
adc
aad
pop
inc
push
push
jae
cmp
and
movsb
test
call
aaa
xor
or
adc
in
pop
out
loop
out
mov
std
subb
lock
mov
xlat
mov
push
xchg
pop
shrb
cmp
fdivp
loope
pop
mov
sbb
into
int3
add
or
sbb
insl
mov
mov
jae
shl
pop
idivl
mov
test
or
enter
insb
lds
es
int
and
cmp
jg
pop
sahf
int3
pop
xchg
mov
ljmp
dec
xor
cmp
call
sbb
movb
popf
jp
sbb
cli
xor
int
pushf
jnp
inc
cmp
adc
ds
jns
jl
sbb
testl
repz
or
mov
mov
ds
out
xchg
adc
xchg
mov
lea
jns
jno
lock
dec
imul
jb
push
test
push
dec
jbe
cltd
cmp
pop
stos
or
mov
push
cmpsb
add
and
push
call
or
inc
imul
sti
xor
repnz
addr16
out
xchg
xchg
sub
addr16
cwtl
sti
cld
add
jp
mov
adc
push
or
fmull
push
mov
jl
scas
lret
scas
test
dec
fcomp
je
std
cli
sbb
add
jo
xor
fstpl
pop
xchg
jnp
andb
jecxz
imul
pop
pop
aaa
jns
out
inc
aas
xchg
fdivrl
rcrb
fs
adc
adc
cmovge
mov
lods
data16
mov
or
inc
pop
data16
shr
xchg
mov
icebp
jge
fsubr
adc
loopne
dec
jo
sbbl
dec
jnp
das
imul
stos
repnz
cld
jns
decb
mov
imul
or
lcall
cmp
xor
pop
sub
int
pop
xchg
or
push
push
mov
mov
jle
stos
jmp
enter
lret
test
and
outsb
and
mov
pop
lods
stc
push
pop
in
mov
dec
sarb
xor
mov
test
lret
xchg
xor
aas
rcll
int
scas
dec
jp
out
outsl
xchg
aam
mov
stc
mov
jl
out
testl
je
outsl
xor
cmp
fcoml
dec
rcrl
movsb
push
or
pusha
xor
dec
loopne
std
jmp
sbb
arpl
or
out
repz
das
nop
lahf
xchg
scas
xor
push
mov
aaa
insb
imul
cmp
cmpsb
inc
loopne
out
aam
ds
add
sub
push
mov
jnp
xchg
add
ficomps
js
fisttps
and
or
and
cmpsb
out
sti
testb
cli
adc
pop
xchg
ss
mulb
leave
fdivr
insl
in
push
jecxz
mov
ret
cld
shrb
pop
jmp
sbb
xorb
inc
lea
mov
repz
addr16
jae
and
xor
lret
insb
push
out
ljmp
mov
push
adcb
sub
aaa
jge
fldt
imul
cmp
ljmp
xchg
jg
xchg
mov
and
adc
ja
pop
sbb
inc
out
mov
push
movsw
sub
out
sbb
push
xor
mov
mov
mov
cmp
push
hlt
sbb
call
fwait
les
mov
mul
loopne
ret
out
inc
push
cli
inc
adc
in
mov
popa
and
scas
sbb
xor
pop
push
push
pop
outsl
and
xlat
cmp
push
pop
pop
nop
add
shlb
mov
vpcmpeqd
cmp
loope
dec
aas
sbb
push
scas
xor
sbb
pop
call
insb
cmp
adcl
outsl
pusha
sbb
testb
dec
or
adc
gs
adc
insb
mov
jle
dec
adc
mov
pop
iret
push
adc
and
jno
scas
or
sub
sub
cmp
les
cmp
cld
pop
inc
pop
fistps
sbb
rorb
popf
pop
pop
mov
cwtl
lods
dec
in
jge
cmp
fidivs
scas
sub
js
xor
inc
test
call
fmuls
fnsave
leave
sarl
idivb
mov
cmp
mov
es
pop
pop
stos
and
add
stos
jbe
xchg
setnp
push
mov
idivb
cmp
sbb
clc
and
mov
les
cmpsl
xor
fdivp
pushf
push
pop
push
sub
cs
dec
mov
xor
out
lahf
out
fs
mov
jle
mov
das
mov
inc
insl
dec
pop
xchg
sbb
push
aam
cld
nop
cwtl
adc
adc
imul
mov
add
dec
jg
lock
fadds
adc
js
pop
inc
xchg
or
rcll
popf
cmc
lods
add
jne
clc
mov
jo
js
or
xchg
out
stos
decb
xchg
cltd
out
pop
adc
movsl
ss
mov
push
incb
mov
mov
cwtl
and
das
xchg
dec
insl
scas
repz
loopne
mov
or
ss
add
rol
fldl
sub
mov
sbb
lods
inc
fidivs
movsl
loop
cmp
stos
pushf
jecxz
dec
stos
add
mov
xchg
push
sbb
jo
jmp
jnp
push
repz
lock
call
pop
jl
in
or
and
push
mov
bound
mov
lods
jp
sbb
icebp
xchg
or
mov
cmp
push
fistpll
cmp
int
adcb
lahf
outsl
mov
cli
int3
loope
mov
or
in
lret
cmp
inc
mov
push
sub
xchg
sbb
sbb
daa
mov
inc
inc
mov
jo
pushf
aam
dec
mov
push
push
jg
out
xchg
dec
sbb
or
es
pop
adc
lods
or
sbb
hlt
nop
and
add
rcll
or
aas
pop
ja
icebp
push
xor
push
xor
xchg
push
shrl
cmpsb
rcr
add
dec
sub
test
cmpsl
and
dec
lcall
sarb
mov
data16
mov
mov
dec
loope
cs
test
mov
inc
nop
jg
push
arpl
xorl
cmp
push
or
mov
inc
test
sbb
std
push
pop
push
xor
mov
enter
sbb
clc
js
mov
sti
stc
or
in
cmp
sub
outsb
pop
fwait
hlt
test
sbb
imul
cmpsb
mov
sbb
movsb
push
inc
jnp
pop
sbb
jmp
push
and
sbb
dec
les
mov
push
xor
dec
mov
test
leave
inc
inc
xchg
test
add
push
mov
xor
mov
es
mov
mov
sbb
stos
cld
jno
in
xchg
sub
out
les
mov
out
add
shll
repnz
outsb
add
dec
mov
sti
pop
mov
clc
push
hlt
imul
mov
mov
imul
cltd
ss
mov
mov
cmp
test
jl
aam
filds
jmp
pushl
jle
jns
jns
es
in
inc
js
mov
stos
mov
mov
push
jmp
mov
cmp
ja
leave
stos
lods
or
sub
cmp
mov
ja
inc
mov
test
mov
nop
inc
jp
xor
and
daa
lret
dec
mov
jno
in
mov
mov
push
pop
orl
mov
mov
xlat
xchg
fldenv
je
cwtl
and
cmp
mov
sub
test
ljmp
in
add
and
mov
clc
and
lds
xor
out
fdivl
mov
out
sbb
out
xchg
inc
pop
orl
ss
lret
mov
mov
xchg
daa
jns
pop
mov
cmc
xchg
xchg
push
mov
inc
ss
arpl
xorb
insl
pop
sahf
orb
sbb
imul
popf
mov
sub
and
cwtl
jne
test
in
lea
pusha
cmp
ds
jg
cmc
push
popa
jo
xchg
mov
jl
adc
in
dec
cld
add
sub
xlat
movb
popf
dec
ret
js
jo
hlt
lret
icebp
das
aad
jp
adc
jo
lods
or
sti
cmpsl
mov
in
pop
add
clc
sub
pop
loop
inc
pop
or
lea
fstps
aas
fwait
hlt
fucomi
decl
mov
dec
push
mov
push
xor
push
jmp
shll
ss
loopne
jne
ljmp
mov
push
test
rol
ja
add
add
orb
aad
not
jno
cwtl
and
mov
cmpsb
mov
pusha
lods
sub
sbb
fs
aam
gs
adc
decb
push
scas
movb
movsl
pop
dec
or
adc
pop
pop
jb
xchg
ror
mov
pushfw
js
xor
enter
and
pop
data16
mov
in
cmp
dec
std
repz
or
or
push
xchg
xchg
leave
inc
ret
scas
dec
lds
aas
int3
movsl
imul
imul
xlat
add
cltd
nop
insb
cmp
aas
andb
xor
insb
xor
xchg
sbbl
mov
or
add
scas
mov
fwait
jle
ljmp
sbb
jae
mov
and
xor
pop
or
push
inc
pop
lods
int3
add
shlb
add
mov
fnsave
out
and
ret
adc
enter
inc
iret
stos
fwait
movsl
ficoms
xor
enter
test
into
mov
imul
push
das
mov
loopne
mov
or
xor
sub
push
rorl
cmp
mov
iret
mov
cmp
sbb
xchg
sarl
mov
lods
lcall
addl
fisttpl
or
js
sub
fldlg2
les
scas
cltd
xor
or
mov
jae
dec
jp
mov
test
data16
shrl
push
dec
jbe
scas
test
pop
mov
lcall
lea
pop
jge
fwait
xor
push
or
pop
pushf
jmp
dec
pop
imul
hlt
pop
mov
cltd
mov
test
test
jle
add
push
pop
outsl
mov
fldl2e
je
push
sbbb
movsl
unpckhps
xorb
ss
inc
xchg
cmp
lods
pop
xor
mov
or
jg
lahf
aas
xchg
pop
push
mov
ja
mov
fwait
dec
jge
sbb
sti
iret
mov
pop
xor
push
je
hlt
adc
pop
movsl
gs
sub
or
lret
sub
xor
jecxz
pop
ret
les
push
enter
loope
test
lcall
mov
aam
loopne
inc
or
sub
or
aas
test
ret
or
int3
xchg
push
push
popa
jae
inc
sbb
repnz
lcall
lret
cltd
inc
mov
or
sbb
cmpsl
xchg
xorb
inc
jns
mov
stos
or
inc
cli
cmc
cmp
dec
daa
outsb
mov
push
aam
cmp
test
and
addr16
pop
loopne
sub
fstpt
iret
imull
loop
pop
sbb
inc
xchg
inc
gs
fcmovne
xchg
mov
mov
mov
enter
inc
dec
outsb
imul
roll
arpl
jo
adc
push
sbbl
ret
sbb
sbb
mov
faddl
outsl
xchg
test
xor
cwtl
sar
xcrypt-ofb
cmpsl
sub
adc
ficoml
push
fwait
cmp
mov
fcomp
jmp
mov
xor
xor
dec
pushf
ss
jo
call
scas
pop
adc
call
mov
add
jecxz
push
in
push
inc
scas
ss
rorb
out
fnstenv
pop
jl
cmc
scas
ret
faddl
jbe
sbb
sub
cmp
inc
ljmp
pop
inc
mov
int
mov
mov
add
xor
jge
mov
xchg
mov
push
sti
insb
ja
xchg
in
aam
stos
lods
cwtl
mov
repnz
gs
int3
lock
icebp
ret
push
daa
push
cmp
test
push
mov
sub
cmp
xor
aas
leave
in
xor
xchg
mov
ret
mov
das
mov
dec
xor
mov
test
sahf
fmull
xor
jmp
mov
dec
cmpl
ret
call
sub
dec
xchg
and
nop
mull
gs
dec
add
mov
movsl
push
ds
xor
xchg
jo
outsb
outsl
pushl
mov
ss
unpcklps
pop
fwait
jmp
pusha
jle
mov
arpl
pop
push
and
pop
pop
cltd
push
sbb
jp
test
jecxz
adc
adc
in
pop
pop
stc
inc
shrl
and
es
mov
inc
mov
xor
loop
outsl
cltd
lods
out
mov
xchg
lds
sub
push
adc
sub
pushf
cmpsb
sub
xlat
fisubl
loop
mov
sub
clc
or
repnz
loopne
mov
push
loop
dec
lods
in
jo
das
test
pop
imul
aad
test
mov
and
push
pop
ret
sub
loopne
outsb
mov
or
inc
fimuls
push
mov
and
subb
cmp
xchg
loop
movsb
scas
in
cmp
in
iret
test
mov
repz
testl
lahf
dec
fsub
testl
loope
out
subb
and
add
lds
lock
shll
cmp
sub
xchg
lret
mov
movsl
mov
nop
cmp
mov
ss
pop
jl
mov
xchg
xor
mov
loopne
xchg
clc
into
dec
mov
sub
in
add
orb
cmp
pusha
or
ljmp
ss
call
pop
lcall
mov
sub
jns
and
and
mov
pop
cmp
xchg
lds
mov
mov
vmwrite
mov
add
outsb
mov
dec
scas
add
sub
xor
andl
sub
in
pop
adc
ret
mov
call
lea
xlat
std
jp
and
mov
mov
xor
add
subl
cwtl
push
dec
aad
fldenv
cmc
in
fistl
dec
std
out
pusha
xor
pusha
sbb
rolb
inc
mov
inc
push
in
int3
sbb
mov
ljmp
and
sbb
xor
mov
sub
lods
sub
repnz
mov
push
add
xchg
lahf
push
loope
jl
arpl
mov
rorl
loop
cmp
adc
lea
movb
rcll
dec
in
lea
add
nop
movsb
pusha
mov
and
push
je
cmp
cmp
dec
test
ret
xor
xor
scas
mov
inc
lds
push
lock
dec
loopne
adc
nop
movsb
sbb
stc
sub
dec
cmp
ds
sbb
push
mov
cmp
mov
and
mov
call
push
les
rcrb
insl
dec
inc
ret
dec
icebp
sub
into
xor
incl
jae
hlt
or
mov
xchg
or
repz
adc
negb
mov
cmc
test
adc
je
push
push
sub
addb
lret
hlt
mov
cli
test
push
dec
mov
outsb
and
fnstsw
mov
popa
dec
sbb
pop
cmp
out
push
push
mov
mov
jno
jno
insb
test
mov
repz
hlt
jecxz
sbb
dec
push
pop
cld
fnsave
dec
fwait
add
ds
lods
jp
adc
xchg
dec
repz
adc
cmc
cwtl
push
aas
shll
xchg
out
ss
ljmp
outsl
aad
ja
dec
pop
loopne
shrl
aam
pop
enter
pop
mov
test
call
iret
shl
xchg
pop
mov
xor
dec
mov
push
lret
mov
arpl
test
mov
lret
lret
daa
cs
sub
pop
in
push
mov
test
aaa
sarb
sbb
cmp
in
cmpsb
dec
xchg
jecxz
jns
sub
popf
fadds
push
movsl
pushf
mov
sbb
fs
xor
mov
pushf
and
adc
enter
xor
adc
pop
fsubs
adc
pop
mov
and
popa
inc
cmpsb
or
sbb
mov
add
ljmp
rorl
loopne
mov
sti
cmpsb
addr16
adc
fmuls
hlt
mov
loop
mov
in
nop
mov
lock
aaa
stc
repnz
mov
push
insb
ds
iret
jl
mov
mov
add
mov
stos
xor
mov
inc
mov
int3
and
xlat
jo
mov
int
mov
push
inc
cmp
mov
inc
sahf
hlt
cmp
or
fdiv
paddusw
cmpsl
into
push
addr16
push
idivl
ret
nop
sbb
push
popa
fwait
adc
push
loope
or
cmp
mov
and
sbb
add
xor
out
fnstcw
pop
addr16
adc
rcrb
and
xchg
adc
stc
sub
mov
lock
shlb
pop
xchg
sbb
aad
std
xor
cli
mov
mov
xor
daa
push
push
sbb
mov
mov
out
pushf
dec
push
int
fisttpll
addr16
movsb
ficomps
in
out
orb
insb
bound
mov
inc
pop
shr
pop
mov
rcr
mov
mov
fwait
mov
fs
les
jbe
xchg
in
inc
mov
pop
ficompl
sahf
in
lock
sub
movsl
adc
addr16
sbb
dec
call
mov
pop
and
push
adc
cmp
data16
mov
or
pop
mov
hlt
cmp
sbb
iret
popa
cmp
xchg
pop
fwait
and
in
mov
jns
xchg
mov
pop
ret
xor
ja
out
in
test
fisttpl
test
adc
and
pop
and
leave
inc
and
dec
mov
fs
imul
cmp
jmp
push
ja
inc
scas
dec
pushf
mov
lret
mov
hlt
sti
icebp
sbb
xor
xchg
xchg
ret
imul
loop
pop
ror
enter
dec
push
jnp
loopne
insb
mov
mov
adc
inc
mov
pop
sbb
loopne
xor
repz
or
adc
push
idivl
testb
ret
test
lret
pop
int3
scas
pop
imul
cmpsb
sub
mov
ficomps
sbb
ret
sub
xchg
insb
aaa
xchg
movb
mov
and
lahf
adc
push
mov
mov
xor
jmp
jecxz
fistpll
fiaddl
ja,pn
lds
xchg
dec
ret
inc
and
aaa
push
movl
adc
pop
adc
daa
notb
shlb
fidivrs
xchg
imul
and
flds
popf
fisttpl
push
cld
popf
insb
ds
shl
rep
inc
lret
sahf
sub
jl
jp
pusha
scas
push
push
mov
popf
or
hlt
push
mov
mov
test
or
adc
cmp
xchg
lock
fldt
shll
insb
inc
mov
cltd
mov
push
repz
leave
dec
sub
insl
fmull
out
or
push
pop
cmp
mov
jp
cmc
icebp
push
inc
clc
push
mov
push
mov
rol
inc
sti
call
add
fstl
test
push
rolb
add
movsl
lcall
or
negb
sbb
out
aam
and
pop
xor
in
in
mov
aaa
test
and
xor
test
mov
sbb
stos
sub
xchg
pop
js
sti
loope
jp
mov
push
push
ljmp
pop
mov
and
xchg
out
ss
or
bound
ja
fistps
xorb
enter
cld
in
cmpsb
jge
sub
push
scas
mov
sbb
xchg
insl
sub
xchg
mov
ljmp
add
or
xchg
mov
ss
ret
ss
lret
mov
push
test
mov
lret
add
sub
pop
repnz
rcrl
jmp
lods
jb
lret
jo
insb
add
ficomps
lods
jnp
xchg
popa
sub
rcrl
dec
lock
icebp
stc
fidivrs
push
jb
int3
fs
pop
xor
dec
xchg
jecxz
arpl
les
jb
test
push
in
sbb
or
popa
sbb
cwtl
xchg
lods
pop
xchg
addr16
dec
aam
fcoms
pop
and
fadds
aas
movsb
pop
xchg
movsl
lock
pop
popf
je
sbb
std
scas
in
inc
push
lret
dec
js
inc
lds
into
lahf
bound
adc
test
or
or
xlat
xorl
loopne
mov
inc
pop
pop
push
add
fisttpl
push
lds
fdivrs
inc
imulb
test
xor
jns
and
or
out
cld
in
shrb
pop
nop
daa
ret
mov
scas
and
out
fisubrl
xor
dec
icebp
hlt
jo
and
xlat
mov
push
imulb
pop
shlb
jno
mov
jge
sbb
sbb
lods
mov
and
mov
test
fbstp
jp
dec
repz
dec
sti
ss
imul
and
jge
in
mov
push
shrb
sub
jge
cmpsl
add
xchg
adc
aaa
inc
fcmovu
mov
push
mov
xchg
cmp
sbb
mov
aas
loope
rcrl
shlb
xchg
sti
test
fcomp
aas
dec
adc
lock
inc
in
adc
ljmp
pusha
movsb
stos
mov
mov
and
outsl
mov
pop
imul
bndldx
add
pop
sub
add
stc
imul
out
movsl
and
cld
movsb
pop
pusha
cmp
shlb
loop
xor
in
popa
jae
mov
rolb
sub
cli
cli
in
cld
push
cmc
arpl
roll
mov
cmp
inc
sbb
pop
jp
inc
out
gs
push
mov
fnstsw
fst
mov
js
pop
cmc
pusha
xor
pop
cwtl
mov
jl
add
push
push
mov
cmpsb
add
sbb
pop
and
add
mov
sbb
mov
rcr
dec
adc
or
lock
dec
pop
xchg
imul
lahf
xor
dec
aad
push
add
aam
jmp
hlt
add
pop
mov
jbe
xorb
mov
js
fwait
sbb
xor
add
lcall
pushf
mov
mov
mov
int3
js
mov
jge
push
or
js
ljmp
push
pop
jp
xchg
fldenv
pop
fwait
xorl
in
jmp
fsubrl
jecxz
lea
lahf
xor
and
adc
dec
mov
out
xchg
add
push
push
stos
outsl
mov
or
bound
int3
mov
push
jle
loop
mov
inc
jg
movsl
mov
ss
daa
ficoms
sbb
mov
lock
adc
popf
push
test
pop
pop
mov
loopne
fistl
sbb
popf
in
cmp
cmp
push
rcr
sub
scas
mov
mov
jnp
int
xor
xchg
adc
out
xchg
imul
icebp
add
sub
add
xchg
push
and
insb
xor
stos
jno
pusha
ljmp
adc
sub
or
mov
and
aas
jns
test
shl
push
sub
rcr
push
mov
cmp
and
psadbw
add
je
das
push
dec
adc
and
neg
push
add
outsb
es
mov
mov
adc
into
sub
add
jae
andb
push
iret
mov
mov
pop
lret
enter
sbb
xor
dec
int3
subl
ss
jb
inc
aam
mov
das
std
cli
inc
sbb
sub
popa
fimull
sti
jnp
rcrl
repz
dec
xchg
and
imulb
jb
jns
mov
pop
adcl
sub
xchg
push
mov
dec
lods
add
jmp
push
and
xor
loop
lods
lds
xor
mov
xlat
mov
and
pop
leave
cmpsb
js
mov
and
imul
sahf
jmp
xchg
ss
js
lret
mov
movsb
pop
pop
test
add
xor
mov
sbb
add
movsl
in
fsubl
xor
aad
mov
arpl
adcb
movaps
cld
ret
sbb
jmp
mov
mov
sti
cmp
loop
mov
in
sub
push
stos
outsb
sbb
mov
sub
outsl
adc
into
lret
test
mov
pop
and
push
movsl
cmc
xchg
pop
dec
xor
inc
xchg
pop
std
xchg
les
test
scas
and
and
test
jle
bound
dec
lea
or
movsb
fsubr
hlt
outsb
sbb
ljmp
mov
data16
shll
and
pop
scas
and
lret
sub
xchg
addr16
and
sub
mov
cmp
jns
mov
lea
add
dec
mov
add
add
bound
push
jns
jne
ficoms
adcl
popf
stos
aam
out
fyl2x
aaa
push
xchg
ret
and
add
xchg
clc
cmc
xorb
ret
imul
gs
jnp
push
movsl
xchg
cmp
push
sub
repnz
push
mov
outsb
sbb
divb
sbb
add
cmp
test
popf
aad
push
out
mov
add
sub
movsb
filds
cmp
dec
scas
inc
ss
sbb
adc
in
nop
cmc
xor
jno
lock
mov
sbb
outsb
imul
pushf
aad
jmp
test
fstl
mov
mov
arpl
mov
xchg
int3
ret
mov
mov
mov
xor
mov
xor
xchg
sub
ficomps
test
lret
dec
mov
loop
dec
mov
sbb
cmc
push
fidivl
jp
sbb
cmpsb
add
loop
push
outsb
add
jmp
dec
sbb
or
lret
in
iret
mov
mov
lock
add
je
pop
jl
bound
adc
jmp
das
nop
push
lret
arpl
cmpsb
dec
xchg
jl
lret
mov
jnp
sub
sbb
cmp
add
dec
and
test
xor
inc
pop
xor
ds
jns
push
in
pop
aaa
prefetch
lods
and
out
popf
loope
ljmp
xchg
sti
jl,pt
mov
mov
xchg
pop
pop
test
cmpsl
lea
shl
leave
sti
add
mov
fscale
or
jb
xor
in
lock
repz
scas
subb
push
das
and
test
push
rcrb
xchg
ss
and
frstpm(287
cs
dec
icebp
pushf
xor
leave
adc
loop
jg
daa
cmpps
jge
not
lret
icebp
pop
pop
daa
jle
xchg
je
jns
in
hlt
mov
cmc
and
subb
lahf
stos
xchg
and
add
call
xor
dec
fildll
adc
xchg
adc
push
ds
pop
stos
mov
rcrb
popf
popf
les
sti
sbb
push
into
jbe
int
sub
or
cmp
scas
adc
mov
xchg
psllw
lahf
push
jb
or
int
imul
mov
jecxz
or
mov
outsb
mov
orb
shlb
sarl
push
ret
mov
push
add
ja
add
xlat
hlt
ret
out
and
cmp
mov
jne
cmp
imul
and
rorb
aas
rclb
xchg
mov
cmpsl
cmp
frstor
push
lret
pop
loop
jg
jnp
and
addl
lods
stc
in
inc
mov
add
inc
dec
pop
fisttpll
sbb
pop
or
gs
push
mov
pop
adc
jmp
add
inc
push
loopne
sbb
in
les
mov
clc
out
in
into
pop
out
test
fsts
fiadds
sub
pop
mov
sub
adc
adc
loope
push
loop
inc
fiaddl
jmp
inc
ret
in
lret
notl
in
pop
cs
xor
xor
int
jl
insl
mov
call
scas
mov
insb
mov
faddl
repnz
mov
cmp
dec
xchg
mov
push
sub
cmp
mov
fstpl
sub
orb
cmp
mov
and
outsb
or
xor
fwait
in
pop
jno
into
xor
sbb
dec
sbb
mov
sub
mov
push
das
adc
mov
mov
out
or
mov
pop
or
mov
stc
jle
add
shlb
icebp
pushf
xor
daa
push
ror
call
sarb
xor
movsb
mov
loope
xor
loop
mov
sbb
out
pop
sarl
adc
or
mov
sbb
loop
mov
jecxz
iret
xchg
in
xchg
xchg
into
inc
jb
enter
loopne
cmp
imul
push
test
cmp
pop
imul
movsl
pop
jnp
fildll
mov
or
rcrl
fwait
mov
cwtl
lcall
cmpsb
bound
pushf
lcall
loop
dec
stc
mov
xchg
shll
mov
jge
xchg
faddp
cmpsl
xchg
jne
insl
or
xchg
dec
imul
dec
fwait
cmc
fwait
sub
aas
adcl
adc
inc
out
fstl
sbb
leave
sarl
push
fwait
std
mov
push
mov
fs
push
jo
cmp
inc
out
inc
cmp
pop
fwait
test
cmc
int
orl
mov
enter
outsb
push
movsb
push
jo
jnp
mov
ror
xlat
sti
hlt
xchg
pusha
mov
push
int3
loope
daa
or
jbe
dec
andl
shll
scas
xchg
mov
cltd
rorb
repz
inc
mov
jmp
lcall
fldt
mov
das
lret
mov
add
lret
loope
in
xchg
hlt
xchg
sbb
out
pop
cmpsl
fdivs
and
hlt
mov
inc
daa
push
stos
jne
xchg
push
mov
mov
lret
repnz
mov
xlat
xchg
fnstsw
shll
sbb
dec
dec
dec
test
push
fcomps
mov
rorb
fucomp
inc
mov
into
jb
jp
xchg
cmp
jl
xor
fistps
jle
pop
cmpsl
mov
inc
cs
jne
pop
daa
lret
addr16
xor
cmp
jns
jle
movsb
pop
adc
xor
idivb
call
lret
je
loope
xor
aad
ds
or
mov
aam
push
xor
subb
out
pop
inc
mov
movb
pop
je
xlat
iret
jno
popf
loop
sub
xlat
scas
fdivl
jp
imul
decb
ljmp
sarl
imul
jge
cmp
jnp
cwtl
jecxz
into
lcall
push
cmp
lret
std
sbb
cs
out
cmp
mov
mov
lods
sbb
and
das
sbb
and
dec
adc
fwait
test
dec
ds
mov
jb
dec
inc
enter
jge
lret
mov
mov
rolb
jae
mov
jo
imul
int3
ljmp
xchg
movsl
popf
shlb
sbb
and
inc
push
xchg
stos
addb
xchg
mov
xor
dec
hlt
dec
lret
push
or
xor
cmc
mov
jnp
add
mov
ret
mov
scas
sbb
mov
sub
jge
fsts
pushf
sub
and
xor
jnp
iret
fsubrl
call
mov
lret
mov
sbb
mov
add
xor
es
stc
pop
out
fistpl
adc
push
sbb
ficomps
dec
jg
fisttps
sub
sub
sub
pop
sub
xchg
fcmovnu
pop
test
sbb
icebp
fnsave
lcall
shrb
adc
xchg
je
cmc
inc
sub
mov
lahf
cmp
jp
pop
mov
nop
push
fbstp
cld
pop
push
mov
xor
in
in
les
mov
imul
push
dec
sbb
add
jl
imul
jae
mov
outsb
aas
xchg
test
pop
and
jno
add
and
test
cmp
xchg
cmpsb
mov
jg
je
fnstsw
or
jbe
cmp
push
scas
jge
fmuls
repz
xor
lods
push
rcl
mov
pop
mov
cmp
jne
xorb
pop
movsl
sbb
ret
push
or
push
hlt
fwait
stos
xchg
sbb
cmp
insl
mov
inc
or
shrl
xor
push
sub
sbb
mov
loopne
jle
inc
push
jle
lahf
and
mov
fildll
inc
cli
mov
mov
imul
inc
xchg
xor
xor
xchg
loop
mov
addb
scas
jno
sbb
fdivrl
fnstenv
inc
sub
xlat
pop
or
pop
aas
cwtl
and
testb
pop
fdivrs
cmp
call
loopne
mov
testl
and
jno
mov
loopne
and
sbb
and
jmp
xor
add
or
in
mov
call
push
pop
mov
shlb
mov
xchg
aaa
test
jae
cmp
cmpsl
and
jmp
sbb
bound
test
mov
in
mov
mov
mov
mov
ret
popa
fstps
mov
inc
xchg
sahf
outsb
cmp
sbb
jns
daa
mov
xchg
aam
je
lods
test
mov
sub
fadd
xchg
int
fimuls
cli
push
addr16
shrl
mov
out
addr16
repz
dec
sbb
pop
jl
or
hlt
sub
cmpb
pusha
xor
jmp
jg
lods
dec
mov
pop
fbstp
dec
jo
adc
popa
add
xor
sub
push
fcmovb
icebp
and
scas
fnstenv
cmpsb
cmp
adc
dec
lods
cli
xchg
in
andl
xchg
mov
mov
mov
pmaxub
xor
sbb
cli
cld
jo
push
sbb
fucomi
push
loop
idiv
pslld
xor
movsl
out
std
fsts
xchg
stos
and
inc
lods
jbe
loopne
notl
rorb
jbe
add
sbb
mov
dec
sbb
sbb
sub
out
push
ret
decb
inc
or
xor
xchg
dec
pop
mov
xchg
clc
mov
addr16
mov
cmp
add
xchg
mov
sahf
xlat
pop
xchg
in
xchg
push
push
lea
fstp
mov
fsub
ficoms
pushf
jb
mov
add
mov
ror
jbe
fstpt
shlb
inc
inc
mov
mov
test
inc
adc
dec
jg
xor
inc
dec
repnz
add
divb
inc
in
aas
cltd
insb
hlt
lret
lods
mov
mov
sbb
mov
sub
dec
inc
test
mov
stc
push
adc
dec
ret
lret
mov
sub
cmpsb
xchg
gs
pusha
add
shr
push
cmp
mov
push
cld
stos
or
sbb
jb
dec
jmp
push
inc
shll
push
data16
ret
fwait
add
test
mov
adc
scas
add
pop
pop
pop
adc
outsl
cli
xchg
add
scas
adc
aam
decb
dec
out
repnz
lret
incl
mov
cmpsb
xlat
add
imul
sub
clc
fldenv
negb
mov
adc
dec
daa
imul
fiadds
rcrl
jns
pop
jo
jp
xchg
lods
adc
repnz
std
aad
jmp
add
ljmp
cli
jbe
andl
sub
sub
mov
loope
and
adc
push
adc
shll
xlat
clc
and
in
pop
decb
and
pop
les
nop
inc
xchg
add
fcmovbe
popf
in
mov
mov
mov
leave
ja
xchg
jp
mov
mov
mov
test
js
shlb
out
int
test
imul
sti
cmc
xchg
xor
cmpsb
cli
clc
pop
push
push
xlat
pop
push
xchg
stc
pop
movb
test
in
xchg
and
sbb
bnd
push
out
scas
test
mov
push
cmp
sbb
lahf
sub
jnp
add
jl
aam
add
xor
jp
cmp
testb
jmp
mov
lahf
sbb
sub
xchg
lahf
mov
fmuls
rorl
pop
jmp
inc
das
inc
inc
and
mov
push
loop
jl
mov
out
sub
lods
mov
xchg
test
rcr
cli
push
jno
push
cmp
dec
add
push
lret
into
notb
mov
fistl
imul
add
orb
fbld
sub
addb
inc
ds
adcb
orb
mov
mov
add
out
ret
dec
adc
mov
mov
mov
pop
adc
aad
cmp
adc
pusha
addr16
testl
add
scas
mov
jns
orl
cmpsb
cltd
mov
js
push
outsl
add
ljmp
scas
jno
pop
nop
inc
mov
inc
shlb
je
sub
ss
testb
sub
arpl
mov
mov
or
aad
cmp
lret
jae
repz
mov
or
xor
aam
sub
rolb
adc
lock
jecxz
mov
adc
leave
nop
sub
mov
add
mov
imul
sbb
call
icebp
jno
stos
movsb
sbb
ss
lods
mov
xchg
movsl
or
orl
sbb
stc
mov
scas
push
inc
gs
sub
iret
rorl
xchg
into
sbbb
dec
xchg
xor
paddb
lret
or
pop
adc
aaa
dec
mov
jmp
out
dec
fadd
fcompl
in
jl
lock
dec
mov
leave
rol
into
push
hlt
xchg
or
cli
sub
orl
xlat
ja
jmp
into
xchg
mov
outsl
fcomps
mov
int3
mov
std
xor
sbb
xlat
sub
adc
sub
pop
jecxz
call
and
pop
mov
inc
scas
scas
xor
ja
xor
xchg
pop
sub
inc
fdivrs
fmull
data16
idivl
sub
jbe
rol
lea
mov
adc
push
pop
push
pop
mov
inc
push
fdivrs
cmp
jg
out
fdivrs
aam
adc
jecxz
repz
mov
movd
mov
int
leave
dec
rcrb
andb
clc
push
sub
iret
fprem1
vmovdqu
and
xchg
mov
and
xchg
shlb
mov
test
daa
mov
mov
push
pop
cmpb
mov
xor
push
cmp
cmp
jbe
push
in
or
push
rcll
mov
pop
adc
or
mov
push
adc
jp
shlb
lods
mov
cs
adc
push
xchg
mov
test
addr16
cltd
dec
ds
mov
push
fcoms
mov
mov
adc
int3
ret
rolb
mov
add
mov
xchg
ljmp
xorl
ljmp
mov
imul
daa
jge
jnp
cmp
lock
out
xor
je
popf
adc
mov
jl
adc
mov
jb
scas
adc
inc
call
clc
ja
pop
pop
sbb
inc
orb
jne
cmpsb
xor
or
pop
test
inc
xchg
loope
mov
inc
cltd
cltd
jmp
loope
icebp
cli
addl
xor
adc
js
lret
sahf
fmull
push
or
lea
in
sbb
jl
xchg
cmp
rcr
hlt
dec
mov
pop
insl
fwait
arpl
cmp
push
and
cld
sbb
cwtl
cwtl
ds
mov
lock
push
mov
out
adc
js
repz
sbb
cmpsb
or
cmpb
dec
in
dec
sub
jmp
xorl
loop
stos
cld
jnp
mov
mov
test
jg
sub
mov
fcomps
jb
cmp
sub
mov
mov
sub
fsub
cmpsb
cmp
scas
aad
adc
scas
ja
sub
xor
mov
sbb
push
jno
pop
cmp
fidivl
jne
sub
push
push
mov
mov
push
mov
ljmp
mov
icebp
mov
dec
sbb
dec
jmp
es
mov
cmp
in
mov
test
inc
adc
int
nop
pop
rorb
sbb
clc
test
mov
xor
pop
adc
push
sub
rclb
cld
adc
mov
mov
les
jmp
xor
in
add
jecxz
ror
sub
push
mov
or
test
leave
sub
add
jnp
mov
jo
std
and
fucom
xchg
rcrb
adc
scas
lahf
rcl
mov
out
mov
add
push
loopne
popa
jmp
fwait
sub
add
push
outsl
stc
push
fidivrs
das
lret
and
aaa
outsl
lods
repnz
fdivl
loopne
xchg
aaa
addr16
sti
xor
xchg
mov
adc
imul
in
inc
rclb
cmp
jge
mov
out
push
cmpsl
cmp
push
push
sub
and
inc
movsb
aas
inc
cmpsl
into
les
stos
cmpsb
icebp
mov
daa
popf
dec
ftst
adc
popf
push
pop
jmp
ret
in
sbbl
jl
in
test
adc
stos
bound
lock
jmp
mov
loopne
in
aas
and
add
pusha
fisttpll
push
das
pop
int
ret
xor
in
loopne
ror
xchg
repz
and
adc
jb
ret
loop
push
jo
push
mov
data16
mov
push
jnp
adc
sar
fsts
or
xchg
mov
js
xchg
push
mov
lret
in
rcrl
pop
mov
std
lods
lds
pushf
hlt
and
sahf
orb
cmpsl
pop
or
iret
ljmp
dec
lcall
enter
es
sbb
fbld
mov
ds
jae
repz
icebp
gs
shlb
mov
outsb
xor
outsb
gs
jl
icebp
leave
gs
jnp
mov
adcl
shll
push
mov
or
shrl
push
mov
mov
mov
fdivrp
sub
bound
cmp
sub
in
add
mov
jo
sub
andb
dec
nop
cmpsb
mov
mov
inc
dec
sahf
out
out
loope
xchg
vsqrtps
and
xchg
dec
pop
fsubs
sbb
inc
into
subb
cmp
lret
push
sub
bound
or
and
loope
insl
jo
cmpsb
icebp
xchg
lret
lea
sub
dec
movsb
les
mov
outsl
shrl
es
data16
out
mov
js
jle
or
mov
mov
fisubs
jne
addr16
mov
cmpsb
cmp
outsl
mov
xchg
nop
mov
loopne
inc
and
mov
fsubrl
inc
mov
stos
mov
nop
aaa
dec
int3
das
sbb
cmovg
mov
cmpsl
jp
or
sub
mov
jae
imul
fwait
clc
negl
clc
jo
mov
out
pusha
cmp
fstpt
add
xchg
test
jg
jbe
jo
inc
mov
xchg
imul
and
insl
jbe
rcl
lods
jmp
clc
popf
pop
xchg
lea
outsb
mov
sarl
movsb
add
adc
push
or
cltd
or
je
pop
push
pop
insb
sahf
cmc
mov
das
adc
mov
pop
out
fs
add
push
mov
jo
xchg
push
pop
mov
sti
mov
push
arpl
mov
divl
fprem
das
imul
xor
and
mov
outsl
xchg
or
int3
mov
push
out
pop
add
and
mov
inc
out
ror
xor
dec
call
and
dec
out
pusha
sahf
jmp
test
and
inc
lret
lahf
cli
in
mov
andb
cmpsl
jp
insb
notb
xchg
jp
pop
out
xchg
fsubl
mov
pop
dec
and
imul
sub
ja
push
lcall
jl
dec
inc
les
add
push
data16
inc
mov
inc
aad
stos
push
pop
ds
loop
and
mov
mov
insl
jae
mov
xor
mov
jle
jno
cltd
stc
ljmp
dec
or
cmp
or
push
xor
test
xor
mov
sub
jge
shll
aam
cmp
adcb
loope
lods
data16
outsl
xor
xor
mov
cmp
test
enter
mov
push
xchg
or
imul
pop
mov
sub
sar
adc
ja
in
loopne
adc
xchg
sub
test
add
dec
pusha
cmp
jge
xchg
leave
cmp
das
leave
sti
gs
sub
ljmp
pop
subps
jmp
pop
xor
mov
mov
inc
xchg
daa
shlb
sti
sub
dec
ds
mov
xchg
fwait
push
dec
xchg
cmc
adc
dec
sub
xchg
pop
adcl
popf
push
mov
mov
fsubrs
idivl
in
lods
loope
dec
xchg
outsl
movsl
sahf
outsl
inc
into
orb
ret
sub
loop
scas
cmpsb
push
add
ljmp
or
stos
out
dec
fs
add
jno
mov
jno
xchg
cmpsl
loopne
mov
call
push
fst
push
sti
out
dec
call
ret
mov
and
or
push
sahf
popa
sbb
fcompl
xor
test
mov
push
fidivrs
dec
pop
xchg
mov
ja
enter
aaa
scas
sbb
fcmovnbe
cld
and
jae
mov
pop
mov
dec
mov
daa
mov
and
movsb
ss
rol
xchg
or
sub
pop
sbb
insl
and
xchg
imulb
pop
jmp
je
cmp
lds
sbb
mov
in
loop
cmpsl
inc
mov
mov
mov
repz
jo
loop
movsl
testb
pop
push
xchg
stc
sbb
inc
mov
mov
mov
addr16
mov
xorl
std
loope
cmp
cwtl
aaa
test
arpl
inc
sbb
js
das
xor
scas
cmp
push
jae
sbb
mov
mov
mov
mov
daa
mov
push
sub
cmp
cmp
cmpsl
mov
cs
cmpsb
fidivs
cltd
ljmp
ss
cmc
mov
ljmp
popa
roll
mov
and
push
sbb
rorl
pushf
inc
adc
loopne
push
add
adc
xor
push
cmp
das
xchg
xor
ja
out
jp
sbb
mov
les
mov
push
sahf
xlat
sbb
pop
xlat
jno
xor
ss
push
pushf
pop
mov
in
and
mov
fwait
sahf
sbb
fcoms
aas
sbb
or
fs
loope
js
adc
mov
or
js
xlat
dec
insl
out
mov
mov
rcrl
cmp
adc
push
cmp
inc
xor
mov
mov
lret
pop
js
sbb
adc
out
dec
mov
test
cmp
mov
xlat
sub
fisubrl
subl
int
mov
or
push
in
andb
pop
rolb
shr
sub
inc
mov
mov
mov
mov
gs
std
test
pop
out
push
outsl
mov
inc
in
aas
mov
loope
pop
les
dec
adc
push
mov
and
sbb
std
cmp
add
adc
sub
pop
sbb
fwait
insl
in
inc
mov
push
std
mov
mov
mov
sub
ds
mov
add
data16
and
push
adc
dec
ljmp
inc
push
stos
dec
mov
mov
or
push
rolb
mov
jge
pop
xor
subl
pop
sbb
lock
aas
test
xor
adcb
mov
mov
call
movsb
dec
outsb
cmp
ljmp
push
push
mov
jbe
or
mov
out
mov
in
in
daa
mov
out
adc
xor
clc
aas
mov
fiadds
pusha
push
or
test
mov
add
inc
imul
insb
xlat
mov
adc
and
or
cmp
adc
es
dec
cld
ftst
mov
pop
sub
cmp
int
xor
in
inc
rorb
in
movsb
cltd
pushf
call
ret
iret
xchg
mov
sbb
inc
movsl
cmpsl
repz
movsb
xchg
fs
dec
outsb
mov
mov
jmp
repnz
shrb
inc
rorl
mov
jbe
mov
int
sub
mov
mul
adc
sarl
aad
adc
xchg
lock
xchg
xlat
cltd
mov
xchg
imulb
sbb
stos
sub
sbb
sti
and
adc
aam
test
je
xchg
int
shll
pop
add
idivb
popa
out
gs
lds
arpl
and
pop
xlat
inc
lds
in
ret
pop
cltd
ss
push
jecxz
clc
sbb
fs
jae
sub
mov
jl
mov
mov
imul
mov
sub
sarb
and
pop
addr16
es
sub
or
into
push
dec
int3
push
push
negl
adc
and
cmp
imul
add
test
sti
add
dec
loop
mov
jo
jl
xchg
inc
imul
and
mov
inc
cmp
push
jg
out
pop
repz
lret
xchg
movsb
push
and
mov
sub
xchg
js
add
cmpsb
sub
fstps
lret
jg
push
jo
out
divb
xchg
mov
scas
jl
scas
test
mov
sbb
fstpl
imul
fstp
and
cmp
adc
js
mov
cmpsl
jmp
add
sub
ret
enter
mov
call
lea
out
ret
fisubrl
test
shr
mov
call
pop
mov
fsubrl
xor
jle
pop
pop
sbb
push
and
push
mov
int3
call
inc
and
or
and
push
jmp
xor
mov
sarb
mov
cmp
aad
sub
mov
shlb
and
mov
das
fstpl
or
jne
mov
inc
imul
pop
cmp
pop
mov
daa
mov
sub
ja
dec
and
xchg
sbb
push
test
pusha
lret
push
cmp
popf
cli
fs
pop
sub
repz
lret
in
lock
sahf
lcall
mov
pop
mov
add
pop
cmpsl
pop
or
lret
mov
inc
dec
sub
jl
and
push
subl
out
in
xchg
cmp
lods
jg
pop
inc
ljmp
data16
nop
inc
mov
jo
cld
sub
sub
add
jne
int
mov
js
pop
int
lods
or
loope
arpl
mov
ljmp
lahf
and
cmp
sbb
sub
mov
jo
jecxz
mov
mov
pushf
push
mov
push
cmp
mov
ja
xor
insb
jl
sar
mulb
xor
cmpsb
push
add
idivl
iret
adc
mov
addl
stc
div
pop
mov
dec
lods
mov
daa
stos
sti
cwtl
clc
aam
pushf
pop
sbb
or
xor
popf
cmpsb
call
fidivrs
push
pop
mov
jbe
cli
nop
test
xchg
cltd
adc
jb
orb
push
lea
fsubrl
test
jg
std
cmp
jae
cltd
mov
faddp
ret
mov
cmpsl
xchg
or
or
sub
sub
push
mov
fsubr
adc
inc
add
or
test
xor
std
jno
pop
inc
jmp
jp
aam
mov
dec
xor
push
xor
sub
jae
popf
xchg
jo
dec
loopne
mov
outsb
js
daa
xor
pop
call
inc
sub
mov
in
daa
cmpsb
loope
cld
fisubl
sub
scas
and
add
lcall
or
mov
cmc
jp
jbe
fwait
jno
leave
inc
lds
pop
add
test
xor
pop
aam
mov
jbe
gs
sbb
filds
pusha
lret
adc
dec
adc
jle
xor
cmpsl
call
lods
jecxz
ds
mov
cs
ja
aad
xchg
fiadds
out
loopne
aaa
mov
clc
adc
es
imul
pop
out
xor
and
pop
xchg
mov
and
mov
inc
rclb
aas
and
fwait
lcall
sub
adc
pop
push
leave
jg
iret
dec
lods
in
repnz
loopne
daa
xchg
in
lods
lock
hlt
and
insl
and
das
push
lret
roll
cmp
inc
rcrl
lds
mov
mov
bound
mov
movsl
push
inc
test
ja
push
mov
inc
out
js
mov
mov
mov
lds
cmp
adc
sbb
scas
mov
test
sahf
jbe
or
jmp
mov
addl
call
cmp
incb
sar
repz
popa
adc
jbe
cmp
in
push
push
insl
xor
insl
xchg
cmpsb
xchg
std
aas
test
jge
or
mov
inc
cmpsl
ljmp
and
jno
lea
mov
push
jnp
dec
xor
push
pop
xchg
iret
sbb
insb
fnstcw
adc
xchg
mov
pushf
xor
std
lret
iret
add
inc
data16
jb
lcall
mov
out
xchg
jo
mov
fists
and
xor
jno
testl
rcrb
sbbl
pusha
sub
ss
insb
shl
mov
inc
pop
in
sti
mov
mov
jge
clc
mov
shrb
sub
jb
mov
fisubl
inc
das
addr16
sub
lea
mov
and
lods
mov
xchg
cmp
jge
push
fstps
or
xchg
gs
ljmp
jp
push
mov
leave
dec
scas
mov
dec
lods
cmpsl
roll
jne
cmp
scas
jb
mov
push
fcompl
or
test
loopne
enter
push
mov
dec
push
xor
xchg
pop
mov
imul
lods
add
imul
addr16
in
rcl
xchg
pop
test
scas
pop
jle
xor
xchg
popa
inc
aam
mov
imull
sarb
adc
out
out
xor
adc
hlt
jb
out
incl
stos
adc
lret
lods
inc
sahf
pop
sub
xor
fadds
fnstcw
imul
and
je
test
js
push
jp
arpl
enter
xor
xchg
sbb
add
jnp
dec
repz
mov
sti
fsts
movsl
pop
or
mov
testb
sub
dec
pop
lds
and
in
adc
jmp
inc
hlt
movl
cmp
or
ret
mov
movsb
lods
pop
cmp
inc
jbe
inc
loope
pusha
and
sub
jecxz
ret
cmp
pop
pop
mov
push
adc
add
add
adcb
js
adc
inc
out
lcall
scas
or
pop
cltd
rcrb
or
jecxz
dec
aam
je
fnstsw
mov
les
repnz
and
sti
cmp
popa
lcall
adc
xchg
or
inc
mov
pop
mov
pop
xor
test
xchg
jbe
sar
inc
ss
mov
pop
pop
lds
dec
popa
cld
dec
jbe
pop
cmp
fmulp
mov
inc
sub
ret
jbe
jmp
sti
mov
mov
add
out
jnp
stc
inc
movsb
pop
push
jb
iret
sub
mov
roll
addb
loop
test
repnz
push
dec
outsb
lret
sbb
pop
xor
lock
pop
lods
cmpsl
fsts
jb
dec
add
xchg
xor
and
or
sbb
mov
xchg
lods
int
jmp
in
push
shlb
inc
lock
mov
stos
xchg
sbb
rcll
mov
mov
cmp
push
sets
aad
imul
aad
ljmp
and
fbstp
inc
outsl
insb
or
adc
enter
dec
aad
pop
popa
push
fisubrs
in
push
dec
and
push
test
fcoms
jle
js
pop
sbb
lret
and
and
sarl
adcl
aad
sahf
sub
mov
cmp
sbb
add
cmpsb
push
cltd
fs
mov
insl
je
into
ljmp
stos
ficompl
hlt
push
jmp
pop
mov
sti
insb
repz
jb
add
push
xchg
movsl
jmp
ss
icebp
cli
mov
int3
loop
stos
addr16
aam
fwait
adc
push
inc
push
insl
pushf
xor
inc
popa
rcrb
test
push
repnz
xor
bound
out
int3
add
outsb
in
ljmp
jg
push
mov
add
adc
inc
cli
mov
adc
xor
push
lahf
out
out
dec
jnp
lahf
test
xchg
xchg
andl
mov
sub
push
fadds
fld
xchg
movsl
outsl
in
pop
test
push
insl
scas
jae
ss
mov
aad
in
sub
or
ss
outsl
pop
fiadds
xchg
int3
jne
dec
adc
mov
fiadds
pop
aad
add
or
inc
pop
push
pop
mov
xchg
stos
xchg
fldcw
pusha
ds
shlb
les
mov
xor
sub
mov
mov
xlat
mov
mov
mov
push
push
push
mov
sbb
and
pop
cmpsl
pusha
out
popf
sbb
test
arpl
sbb
jmp
fisubs
xor
in
mov
fcoml
sbb
repnz
movsb
ja
loope
jmp
outsl
sub
stos
sbb
aas
push
cli
pop
mov
mov
test
aaa
mov
mov
popf
or
fisubl
das
xchg
sbb
insb
pusha
dec
push
jb
arpl
lcall
ljmp
cmpsl
xor
push
mov
mov
and
imul
stos
add
inc
das
jo
loopne
fildl
inc
leave
movb
fistl
mov
les
das
mov
push
icebp
xor
in
or
or
jmp
into
inc
jnp
mov
pop
cltd
cli
sbb
call
sub
mov
sub
cmp
xchg
or
add
jae
pop
icebp
out
sbbb
mov
mov
cmp
adc
insb
sbb
xor
cmp
scas
xchg
bound
in
adc
jl
gs
and
lods
jb
mov
pop
jl
cmp
icebp
repz
xchg
imul
sbb
push
dec
and
pop
or
xor
add
enter
jle
int3
sub
les
test
xchg
or
in
es
out
jb
pop
repnz
xor
inc
jno
inc
mov
test
jl
hlt
cmc
mov
dec
imul
pop
adc
xchg
mov
imul
in
pop
aas
xchg
xchg
mov
repz
cli
mov
xor
xor
sbb
sub
adc
adc
arpl
std
adc
lods
loop
in
fst
movsb
push
inc
mov
pop
push
imul
sarl
sbb
leave
xor
popf
xchg
push
and
scas
mov
call
fcoms
ror
xchg
sbbl
push
movsb
icebp
mov
xchg
rcrb
jb
mov
cmpsb
dec
xor
aaa
test
clc
out
lods
sbb
sub
pop
movsl
sub
adc
lcall
popa
fwait
popa
ret
and
subb
rclb
sub
cmc
clc
shll
cltd
imul
pop
out
jg
stos
lock
sbb
dec
jne
or
add
sbb
jns
inc
push
or
lock
ret
shlb
pop
les
leave
jge
mov
mov
xchg
arpl
pop
xlat
cmp
mov
cltd
xchg
lea
fadd
push
jge
or
xorb
aad
lock
dec
xor
testl
jmp
ds
adc
jmp
xchg
pop
jb
push
sbb
sti
inc
mov
mov
repnz
test
icebp
xchg
xor
ss
inc
mov
lahf
sbb
jmp
mov
cs
outsl
clc
ds
jns
xchg
call
or
sbb
dec
lods
jne
pop
pop
lea
jb
dec
xchg
xor
int
or
add
push
incl
stos
sbb
cmpsb
daa
inc
leave
adc
pusha
insb
jmp
sbb
in
or
dec
shll
push
and
or
xor
imul
rorb
flds
add
jmp
xlat
das
js
mov
inc
pop
fnstsw
jb
rorl
fwait
sub
jl
cmpsb
push
or
inc
cmpsl
push
psubq
fsubl
jns
ljmp
ror
adc
xor
stos
xlat
lcall
push
mov
dec
cli
rcrb
fidivs
sub
sub
stos
or
jne
push
xor
and
xchg
xchg
mov
sub
sbb
roll
scas
mov
dec
mov
bound
sub
cmp
leave
mov
mov
jae
jge
sbb
add
mov
inc
adc
jnp
popf
and
hlt
xorb
lock
xor
mov
mov
mov
and
mov
add
lods
mov
subb
sub
jmp
xor
leave
and
lret
adc
test
lods
or
push
push
xchg
adc
lea
or
push
call
xlat
inc
arpl
jmp
scas
int
jo
mov
jle
insl
fmull
rolb
inc
sub
jb
pop
aam
ds
aaa
and
loope
dec
inc
daa
addr16
cmp
mov
or
es
mov
cmp
and
lods
jmp
mov
sti
jae
or
mov
sub
push
jmp
adc
and
iret
mov
out
hlt
jae
inc
mov
out
ljmp
adcl
inc
outsb
xchg
xchg
es
jp
pop
xor
movsb
mov
add
test
ret
pop
test
xor
mov
outsb
lcall
jns
into
or
mov
cmp
mov
imul
and
sti
rolb
fninit
jg
test
push
sub
js
sahf
lods
adc
stos
mov
mov
cmp
jno
add
push
int
movsb
test
out
orb
notl
push
ja
adc
mov
or
out
test
jb
into
jb
leave
loop
jb
pop
fs
repz
enter
mov
movsb
loope
clc
and
mov
cmp
unpcklps
mov
mov
mov
inc
shll
data16
xchg
cmpb
push
dec
sarl
xor
xorl
lods
or
sbb
or
or
fsubs
enter
imul
shll
out
xlat
mov
inc
push
out
pop
cmp
xor
cmp
mov
pop
adc
xchg
cltd
movsb
leave
mov
in
pop
cwtl
ljmp
pop
xor
inc
dec
or
jmp
aas
cmp
in
sbb
loope
mov
sub
sub
int
cmc
sbb
push
dec
jge
push
adc
mov
sbb
inc
adc
xchg
dec
popf
jg
mov
pop
ret
dec
pop
aad
or
dec
push
push
mov
int
xchg
and
scas
mov
pop
inc
lods
mov
inc
lcall
add
push
push
cwtl
mov
push
test
icebp
in
cmp
cmp
adc
mov
push
xor
push
fimull
sbb
sub
xor
push
sbb
pushf
movsb
and
testb
in
ftst
mov
mov
add
jae
xchg
iret
addb
es
mov
xchg
mov
inc
nop
ljmp
mov
push
clc
pop
mov
jns
jbe
mul
jne
cmp
scas
aam
std
pop
stos
push
adc
ljmp
das
adc
mov
cmc
xor
dec
js
and
mov
push
or
sub
fiaddl
mov
fistps
inc
or
inc
xlat
pop
rol
outsl
xchg
subb
jno
fdivrl
cs
daa
pop
imul
mov
lret
mov
and
mov
jae
imul
pop
or
lods
les
pop
jecxz
and
cltd
mov
add
push
notb
dec
sub
stos
mov
jae
cld
dec
mov
cwtl
adc
hlt
xor
push
movsl
jmp
jns
imul
nop
adc
sub
incb
inc
lods
dec
repz
xchg
adc
sub
dec
ljmp
movsl
hlt
dec
imul
prefetcht2
arpl
lret
out
mov
lret
mov
insl
sbb
add
cmp
jecxz
test
mov
push
mov
cmp
hlt
push
loope
mov
cmp
mov
cltd
sarb
push
cmp
mov
sbb
insl
outsb
xlat
pop
hlt
sbb
mov
adc
movsb
cwtl
ret
sbb
cmp
cmpsb
aas
jle
ret
cmpsl
shrl
and
inc
test
insl
sub
inc
add
adc
pop
xor
aad
dec
jecxz
lods
adc
in
lea
xor
adc
xchg
jmp
call
jl
xor
rcll
sub
ljmp
push
jb
bound
popf
mov
adc
cmp
mov
dec
sahf
pop
jmp
les
sahf
add
stc
or
mov
sbb
ds
mov
xor
add
add
mov
xor
push
call
sub
sbb
sbb
jno
jae
arpl
push
ret
cmp
clc
sarb
adc
notb
sbb
jecxz
iret
mov
add
stos
cmp
lea
mov
rorl
fldcw
arpl
push
or
jg
rcll
cmp
repnz
fwait
in
xchg
adc
movsl
in
jnp
add
cmp
xchg
stos
jl
mov
stos
popa
dec
rorl
movsb
fmull
ljmp
inc
adc
movsb
xchg
xchg
push
mov
clc
push
push
mov
push
icebp
jnp
sbb
pop
mov
scas
inc
jp
mov
fcomp
icebp
fs
jp
rclb
jns
xchg
jno
xchg
popf
insl
loope
mov
sub
ds
imul
repz
xchg
and
dec
sbb
and
pop
shll
adc
in
push
iret
dec
stc
sahf
neg
push
pusha
cltd
aaa
push
mov
shll
stos
icebp
mov
andb
nop
push
data16
inc
cmc
fxtract
notb
mov
push
test
fcompp
jne
sub
xor
cmp
xchg
dec
inc
add
shll
mov
xor
out
jle
inc
add
repnz
xchg
fs
cmpsb
sbb
or
into
push
test
mov
jae
fwait
cwtl
pop
leave
jle
scas
dec
jno
imul
add
shrl
adc
jns
jo
sub
jmp
notb
sti
sar
call
push
cmp
ret
std
jnp
test
add
dec
fdivrs
fwait
mov
lret
pop
add
inc
sub
fwait
sub
fdivl
mov
test
push
xor
dec
fidivs
rcrl
or
push
push
fwait
cli
out
cli
repnz
sub
jno
mov
psrld
aas
pop
imul
enter
jg
pop
call
les
out
xchg
mov
out
enter
into
xor
adc
dec
jne
adc
lret
loope
icebp
cmp
dec
sbb
data16
imul
or
movsl
mov
das
movsb
mov
mov
push
mov
xor
lret
and
adc
stos
clc
and
adc
std
hlt
bound
push
pop
arpl
xor
sbbl
dec
dec
pop
push
lcall
out
or
out
sub
int3
mov
jmp
shlb
out
sbbl
pop
pop
nop
inc
lret
jae
mov
test
add
je
sbb
adc
jnp
xchg
sbb
sbb
mov
adc
cwtl
aaa
clc
mov
lcall
nop
sub
hlt
add
add
dec
cmp
jnp
stos
rcrl
jne
sbb
cmp
or
out
push
mov
dec
adc
dec
sbb
xor
jle
pop
sub
std
adc
pop
filds
mov
lret
rcl
cmp
mov
popa
out
mov
clc
pop
or
repz
or
mov
pop
jns
or
leave
inc
imul
pop
xchg
add
cli
push
xor
aaa
push
lret
push
nop
mov
jae
jbe
mov
mov
ja
fldl
pushf
js
xor
fistl
lock
pop
or
push
and
pop
fcomps
cmp
inc
jae
fninit
in
cltd
test
ret
pushf
cmp
jle
je
inc
push
sub
cmp
cmp
stc
xor
or
mov
pop
dec
sub
stos
out
xlat
repnz
pop
nop
ja
push
xor
test
mov
adc
jae
cld
mov
lahf
xchg
dec
push
popf
out
and
test
pop
lds
adc
sahf
ret
cmpsl
xor
insb
mov
lods
mov
push
jle
mov
dec
lds
scas
jge
fwait
cmp
fidivl
jmp
mov
or
sub
pushf
mov
push
xor
push
cli
aam
je
jo
aaa
push
sbb
mov
xor
xchg
push
into
cmp
inc
cmp
pop
sbb
adc
dec
test
aad
arpl
mov
cwtl
cmp
ret
push
add
in
cli
test
aas
iret
das
xchg
xchg
arpl
cld
addl
test
pop
jle
mov
repnz
sbb
dec
out
mov
in
lock
movq
dec
push
push
dec
in
ret
pop
xchg
xor
ds
mov
add
in
jg
fmull
mov
popf
out
jmp
xchg
bound
dec
sub
pop
insl
lea
ds
jbe
jo
jae
pop
aam
sub
adc
jae
mov
xchg
andl
adcl
mov
stos
in
inc
adc
xchg
rcrl
icebp
int3
or
jns
and
outsb
push
mov
or
jb
test
xchg
mov
jnp
or
hlt
neg
ljmp
push
aas
xor
dec
jo
test
jecxz
or
decb
aad
push
fptan
cltd
xchg
andb
add
pop
lret
sahf
sbb
adc
xchg
xchg
xchg
and
sbb
push
fadds
out
nop
imull
stos
out
mov
shll
cs
or
push
fst
mov
call
push
notb
xchg
pop
fsts
stos
and
add
cmp
cmc
addr16
mov
mov
addr16
cmp
cmp
fcoml
xchg
not
push
xchg
dec
or
shl
mov
jle
mov
mulb
dec
xor
mov
jbe
imul
jns
lock
cmp
mov
std
dec
mov
add
arpl
cmc
xchg
aaa
or
mov
or
cli
out
rclb
cmpsl
lahf
xlat
rcll
xchg
or
lcall
xchg
data16
inc
sbb
lcall
enter
push
aas
adc
int3
icebp
sbb
and
pushf
mov
decb
xchg
pop
push
out
insl
push
lahf
out
sub
push
add
jmp
insb
aam
lds
addr16
mov
lock
call
adc
mov
xor
jne
sub
or
and
jl
ja
pusha
fwait
cmp
pop
jb
and
sub
pop
cmp
clc
push
rolb
xor
test
call
cmpsl
mov
and
mov
aaa
call
shrb
mov
mov
mov
jb
xor
pop
xor
push
stos
mov
das
insb
gs
pop
loopne
fwait
scas
mov
cmpsb
nop
mov
das
imul
dec
jno
test
xchg
ja
sub
jns
jne
icebp
addr16
sub
mul
jae
jle
cmp
xchg
fcmovnbe
xchg
call
mov
je
cmc
inc
aad
fdivrs
inc
repz
xchg
aam
popa
lret
and
enter
loopne
mov
out
xlat
aad
sbb
mov
or
xchg
test
addr16
xor
mov
push
jns
push
or
jle
inc
in
xchg
in
test
nop
xchg
push
add
fdiv
lock
add
ret
xor
pusha
cmp
out
fists
mov
adc
loope
mov
xlat
sbb
rorb
dec
sub
movsl
xor
jmp
sub
loopne
out
and
cmp
cmpsl
xchg
mov
sub
cmp
daa
sbb
sub
add
cmp
lds
sbb
push
out
lret
hlt
stos
loop
inc
and
les
inc
aas
mov
shrl
mov
push
rclb
jb
mul
pop
and
inc
lock
dec
mov
jl
push
xchg
push
push
inc
add
sbb
mov
sbb
push
or
frstor
mov
push
insb
int
mov
notl
inc
push
or
stos
icebp
ja
gs
pop
sub
out
pop
lret
mov
xchg
test
dec
call
rol
fimull
add
jge
xchg
mov
jecxz
ret
and
adc
adc
cld
adc
mov
jns
mov
stos
push
cmp
mov
adc
jl
jge
sbb
push
pusha
imul
sahf
sti
movsl
cltd
test
sub
lods
inc
pop
push
sbb
mov
or
xchg
mov
pop
pop
mov
xchg
jno
pop
cwtl
test
mov
xchg
push
data16
orl
add
test
push
leave
or
fs
lret
shrb
mov
adc
jb
jnp
adc
sbb
std
ss
mov
sub
fistps
pop
xchg
mov
adc
adcl
jne
jmp
lods
out
add
ljmp
movsb
fsubs
mov
mov
rolb
mov
cmp
add
scas
jne
test
into
aam
pop
xor
lret
fcomp
mov
fwait
adc
test
xchg
test
lahf
andl
movsl
divb
lds
ss
rclb
out
jae
std
mov
mov
es
cwtl
push
xor
jl
mov
ret
add
loope
or
xor
notb
cmp
cmp
or
mov
mov
jg
mov
outsb
cmpsb
pop
shlb
lret
jge
xchg
xchg
nop
imul
js
repz
and
ja
lods
jns
sbb
jb
sub
int
push
xchg
shrl
xchg
cmp
out
dec
pop
dec
pushf
popf
xor
lods
cmp
mov
lea
or
inc
insb
pop
pop
ficompl
pusha
inc
xor
es
mov
call
adc
mov
ja
aam
cmp
xchg
mov
mov
inc
lcall
movsb
ja
in
sahf
std
out
and
out
add
lcall
out
mov
pop
cld
jns
inc
data16
shlb
mov
xor
add
lods
add
out
jb
out
fistps
bnd
movsb
and
or
lret
lret
stos
ja
cmp
insb
lahf
mov
mov
push
or
outsb
icebp
test
xchg
inc
imul
lret
inc
pop
dec
cmp
sbb
jmp
outsb
stos
mov
mov
add
cmp
aam
jns
and
lret
inc
ficomps
mov
into
fdivl
jecxz
int3
dec
fdivp
dec
addb
xor
sbb
pop
mov
mov
mov
bound
ss
add
cmp
push
lret
xor
nop
test
icebp
add
dec
push
lods
mov
inc
imull
shl
fdivl
iret
pop
rcrb
gs
fstpl
xchg
outsb
and
sbb
push
and
push
stos
mov
jge
mov
mov
inc
daa
xchg
out
outsl
push
test
addr16
xorl
jne
inc
jbe
xchg
xchg
pop
jns
inc
jg
movsb
out
push
sbb
xchg
cmpsl
gs
xchg
or
sbb
sub
cmpsb
mov
mov
adc
les
sub
pusha
pusha
xchg
in
jnp
sbb
out
add
arpl
xchg
inc
jbe
lock
int
push
sbbb
jae
mov
mov
call
repz
sbb
icebp
sbb
mov
push
mov
pop
or
xchg
out
je
xor
cmp
lods
add
cmp
or
mov
mov
sahf
push
mov
cwtl
mov
fiadds
pusha
iret
std
lret
rolb
test
inc
inc
leave
cli
xor
inc
dec
popa
push
insl
testb
inc
jg
pop
inc
inc
shrb
sbb
adc
sti
cmp
outsb
enter
cmpsb
lods
mov
mov
sbb
push
xchg
int
pop
movsl
repz
das
movzwl
fs
or
adc
push
cltd
push
dec
test
cmp
sub
sub
mov
add
jne
sbb
jne
cli
xchg
adc
or
push
jo
pop
cmp
add
adcl
nop
fdiv
clc
test
pop
hlt
jmp
dec
jge
cmp
jnp
data16
leave
add
shr
insb
sbb
dec
push
and
idiv
mov
subb
or
sbb
orl
dec
out
popf
mov
ja
mov
and
pop
outsb
mov
out
xor
lods
cmc
xchg
imul
cmpsb
shr
push
sub
test
int
xorb
enter
or
push
test
and
or
stc
rcrl
test
or
xchg
inc
mov
int3
pop
xchg
lds
jb
arpl
dec
lcall
jmp
call
imul
movsb
sub
xor
mov
imul
sbb
mov
xchg
in
imul
das
pop
aam
sub
imul
mov
int
mov
push
pop
and
mov
adc
push
xchg
lods
xlat
inc
repz
or
fmull
lret
cmc
xchg
xor
clc
xchg
in
jmp
bound
xor
repnz
sub
ss
pushf
jns
xchg
lret
inc
pop
adc
or
jnp
movsl
xchg
jl
sub
insb
out
or
dec
inc
insb
hlt
fucom
gs
in
mov
mov
xchg
inc
cmp
fnstenv
cmp
jno
pop
in
jp
hlt
xor
xchg
out
mov
cmp
push
push
rorb
xor
js
sbb
jmp
inc
mov
cmp
push
call
loope
fmuls
or
ret
cwtl
jne
outsl
mov
fildll
scas
mov
pop
fsubrs
loop
pusha
mov
mov
pop
lods
and
push
fcmovnb
pop
mov
call
adc
in
sub
sbbl
jne
xlat
and
dec
sbb
mov
or
push
adc
insb
adc
xor
in
add
cli
inc
or
shlb
and
push
jnp
cltd
or
loopne
stc
imul
pop
into
dec
fcom
rol
ss
mov
sub
fwait
mov
pop
adc
sbb
roll
add
jge
sub
adc
loope
jne
dec
fisttpll
daa
xor
imul
cmp
push
xorb
dec
lret
xchg
daa
out
sub
sbb
nop
mov
shlb
adc
subb
aas
push
testl
in
xchg
icebp
mov
je
jnp
and
inc
fisttpll
jp
inc
mov
sbb
jecxz
lods
sub
mov
push
inc
jns
scas
xor
jae
movsl
jae
into
lcall
repz
jle
adc
fdivs
jge
sahf
mov
mov
leave
xchg
add
out
lret
rclb
adc
mov
jp
in
or
adcl
dec
pop
xor
daa
cmp
add
cwtl
mov
xor
fbstp
cmpsw
scas
fsubr
jno
fcmovnu
dec
sub
push
sub
add
adc
and
add
int3
xchg
test
ss
push
cmp
mov
mov
adc
cmp
sub
xchg
adcl
iret
mov
jae
pop
cwtl
or
fldt
push
outsb
out
aas
mov
push
or
std
stc
add
adc
inc
mov
imul
pop
lock
xlat
add
test
dec
xchg
out
cs
push
in
xor
jae
aaa
in
xchg
adc
sbb
mov
pop
mov
sub
xor
cmpsb
fstpl
out
jnp
cmp
jecxz
adc
push
mov
fildll
loopne
add
xchg
mov
and
mov
call
xchg
int3
aaa
cmp
sbb
inc
or
add
cs
mov
cmp
mov
pop
and
cmp
add
arpl
add
add
cmp
shrb
test
xor
jle
fldenv
rol
push
lods
push
sbb
stos
mov
fs
dec
and
es
popf
push
imul
lcall
stos
out
sbb
imul
push
ss
jg
dec
std
in
mov
es
cmpsl
outsl
pushf
push
mov
popw
pop
sub
xchg
out
test
mov
sbb
cmpsl
push
enter
sbb
sbb
sbb
and
cld
mov
rcll
popf
lcall
xlat
and
mov
test
mov
test
add
push
push
or
mov
xlat
jns
fnstenv
jle
js
and
arpl
dec
out
mov
cltd
adc
ss
rcrl
scas
test
pusha
fisubs
outsb
push
lods
shrb
mov
dec
fcmovbe
fdivrl
jb
imul
mov
pop
fsubl
adc
jecxz
fdivs
cmp
sub
mov
inc
jnp
gs
cmc
aas
jle
mov
jb
cmpsb
fwait
lea
xor
leave
ja
push
mov
mul
sbb
jp
inc
add
xchg
stos
cltd
push
fsubrs
data16
divw
call
insl
pop
xchg
cmp
notb
cld
outsl
gs
mov
mov
repnz
out
gs
or
xlat
sbb
std
lret
sub
mov
dec
push
or
dec
cmpsl
lea
imul
insb
movsl
fwait
mov
imul
cli
mov
or
mov
mov
int
bound
neg
mov
and
adcb
pop
inc
push
mov
or
scas
xchg
fisubs
add
daa
out
cld
das
ss
xchg
jecxz
xchg
pop
and
push
adc
call
inc
sbb
in
test
cwtl
inc
test
lock
fisubrs
push
lcall
aam
dec
sub
lock
bnd
cmc
xchg
movsb
mov
repz
cli
push
sbb
fld
sbb
add
pop
pop
mov
std
enter
ds
pop
sahf
or
neg
pushf
dec
dec
lret
or
test
and
cmp
and
cmp
push
adc
pop
sbb
xchg
mov
lock
loop
sbb
dec
push
ret
cli
jecxz
sbb
mov
cmp
addr16
mov
out
rolb
movsl
adc
sub
das
fwait
sbb
repnz
adc
mov
out
xchg
dec
push
cmp
adc
adc
xor
pop
gs
jae
mov
mov
subb
ret
mov
dec
fwait
daa
popf
mov
js
stos
add
stc
or
shl
xchg
adc
aas
iret
inc
and
jmp
nop
cltd
or
add
mov
mov
lock
mov
sti
sub
push
mov
test
push
cwtl
cmp
in
aam
mov
in
loope
out
mov
in
dec
test
jecxz
lcall
shrb
ja
adc
cli
mov
cmp
mov
cmpsb
pop
or
xor
xor
loope
loop
mov
push
dec
dec
xchg
push
dec
pushf
outsl
pop
add
xchg
adc
fisttpll
cli
dec
je
mov
mov
cwtl
in
and
imulb
es
cwtl
rcrb
sbb
sbb
es
xor
dec
xchg
adc
push
loopne
cmp
pop
push
push
xchg
pusha
cltd
dec
push
test
xchg
pusha
fdivrl
cs
stos
mov
mov
sub
scas
and
fldl
mov
in
jle
aaa
lds
ficompl
push
mov
cltd
in
xchg
ss
jle
fildl
jle
xchg
xchg
dec
or
data16
sbb
adc
sub
push
cli
pusha
ljmp
lahf
popa
das
inc
aam
cld
xor
stos
enter
sub
pop
xchg
inc
xor
push
rol
push
xor
into
out
flds
mov
xchg
pusha
or
fwait
dec
divb
adc
addr16
mov
ret
dec
add
adc
xchg
mov
jae
movaps
inc
idiv
jecxz
adc
jns
lea
call
mov
loope
in
adcl
mov
stos
jl
pop
dec
and
fidivs
pop
cmp
imul
push
lods
xchg
jp
cmp
std
push
mov
roll
mov
jno
shlb
pop
fistps
repz
push
pop
push
mov
jl,pt
rcll
into
add
cmp
ja
mov
mov
mov
cmp
aad
add
xchg
cmpsl
push
rep
adc
and
andl
subl
jns
dec
pop
jmp
inc
sub
sub
or
pop
cmp
loop
dec
shrb
cld
pop
lcall
jns
or
jne
addr16
shrb
jg
push
sbb
push
enter
iret
lea
mov
sub
xor
push
loop
stos
inc
stos
sbb
jo
fstl
mov
sbb
inc
lcall
dec
sbb
stos
into
clc
jge
stc
jnp
jmp
and
rcll
jp
mov
mov
jle
data16
movsb
shll
lea
fnsave
or
jl
mov
cld
imul
bound
mov
out
test
jl
jnp
mov
xchg
lods
mov
push
and
pop
out
mov
cli
sub
xor
sbb
into
add
push
add
popa
fs
shlb
xchg
or
fldenv
test
inc
gs
lea
fwait
mull
mov
rcrl
mov
into
cld
shrl
test
ret
or
cs
inc
or
sub
xlat
jle
mov
test
ja
push
inc
mov
xor
pminsw
shrl
mov
sub
jle
sbb
test
adc
mov
aas
and
push
in
push
or
ljmp
jno
xchg
jmp
sub
movsl
mov
ret
outsl
cmc
scas
outsw
sbb
add
lcall
stc
cmp
lret
or
dec
pop
lods
imul
std
adc
sbb
idivl
sahf
pushf
movsb
mov
lret
mov
shlb
or
pop
cs
imul
mov
inc
and
jne
outsl
mov
les
mov
lret
in
cltd
call
mov
sub
ljmp
repnz
and
mov
shlb
int3
insb
adc
jl
pusha
js
fsub
inc
jge
or
scas
pop
pop
sahf
mov
loope
sub
mov
push
rcrl
push
sbbb
sbb
or
mov
ss
dec
add
pop
dec
cmp
jns
gs
out
js
leave
stos
repz
inc
shlb
xchg
movl
test
pusha
repnz
push
mov
mov
loope
daa
xchg
mov
test
xchg
pop
pushf
pop
cmc
mov
xor
jmp
imul
push
and
movsl
mov
lods
mov
pop
imul
fwait
sub
dec
or
push
mov
movsl
push
or
or
insl
mov
into
add
fs
or
push
mov
loope
lods
andb
cltd
sbb
jb
outsb
mov
lret
loop
or
and
mov
or
fldt
adc
mov
rorb
mov
adc
xor
pop
dec
xor
push
repnz
cmp
pop
jne
enter
pop
adcl
or
xor
dec
loop
popf
in
mov
mov
sti
jge
push
lock
inc
dec
sbb
clc
je
push
sub
gs
fisubl
xchg
leave
out
outsb
sub
rorb
cmc
cmpsb
sbb
add
mov
and
push
xchg
nop
mov
leave
cmp
mov
jae
sbb
push
fstpl
xchg
sarl
adc
lcall
popa
and
sub
in
cmp
or
xor
mov
shll
push
jo
sub
in
xor
sbb
dec
mov
lret
mov
xchg
mov
or
fisttpl
js
pop
ret
mov
add
out
xor
test
outsl
mov
mov
or
fdivl
fildl
jno
pop
pop
ja
and
push
sub
mov
fisubs
pusha
or
loopne
push
push
jecxz
dec
pusha
sbb
sbb
in
out
dec
pop
jg
ret
push
iret
push
arpl
dec
adc
jecxz
into
inc
mov
add
sbb
jne
dec
je
push
cmp
cld
xor
int
shl
xchg
hlt
aad
fistpl
sub
sahf
ret
mov
xchg
dec
adc
dec
in
jo
sarl
mov
inc
out
mov
inc
sti
aam
popa
cmp
daa
jmp
ret
cltd
ja
sti
inc
sbb
fstpt
xor
pop
cwtl
stos
addr16
cmp
and
sbb
pop
stos
sbb
movsl
or
mov
jg
out
mov
add
cwtl
pop
test
or
dec
orb
dec
mov
mull
inc
xchg
add
sbb
xchg
dec
mov
cmc
fdivr
iret
dec
mov
pop
cli
jecxz
push
sbb
mov
push
or
data16
stos
sbb
mov
pop
fcompl
iret
pop
pop
in
scas
cmp
outsl
cmp
xchg
xor
sbb
in
add
lahf
push
jns
lock
jns
cli
pop
lea
xor
ljmp
jns
shrb
xchg
imul
les
fs
mov
pop
inc
pop
lds
es
js
cmpsb
rcl
sbb
or
sbb
shlb
fcmovu
addr16
fmull
int
movsl
clc
jle
lock
xor
sbb
and
test
add
incl
or
jmp
sbb
xor
aam
fistpl
jmp
fxch
jmp
adc
adc
fucomp
push
imul
fwait
jne
and
jae
push
cmp
bound
push
stc
popa
inc
scas
jbe
jae
inc
push
jg
movsb
es
movsl
repnz
js
mov
movsb
push
pop
jae
frstor
jb
movsb
iret
lcall
repz
mov
push
xchg
adc
in
daa
dec
mov
push
xchg
or
mov
loope
mov
push
roll
mov
clc
adc
jnp
and
stc
mul
addr16
xor
or
sti
out
mov
sub
lea
nop
mov
pop
fisttps
add
in
xor
push
jecxz
cld
ljmp
or
in
inc
adc
mov
in
mov
mov
or
shrb
cmp
sbb
push
gs
sarb
inc
jae
aaa
scas
pop
mov
stos
and
clc
out
sub
mov
bound
scas
bound
and
data16
std
push
and
cmp
dec
icebp
dec
adc
vpunpcklwd
out
adc
mov
xor
push
repz
pop
std
mov
cmp
xor
push
adc
pop
rorl
mov
out
add
push
sub
sub
push
jo
sbb
jnp
aaa
scas
fwait
mov
inc
jecxz
mov
push
jnp
push
movsb
adc
jb
popf
aam
jbe
mov
mov
adc
loope
pop
rcll
iret
pop
outsb
aas
jg
in
shrl
test
arpl
xchg
jg
shll
mov
sub
inc
dec
cmp
sbb
lret
imul
into
fistpll
mov
cli
shll
dec
ljmp
fdivs
pop
test
addl
xchg
pusha
pusha
push
and
ret
mov
sarb
call
loopne
xor
jecxz
and
xor
stos
and
sbb
test
rcrb
in
mov
ss
scas
fstps
icebp
xor
enter
scas
jge
inc
push
out
rol
mov
sub
out
and
lods
call
iret
lcall
jge
xchg
sub
cmpsb
ret
add
adc
sbbl
mov
push
jno
cld
sbb
test
test
dec
stc
sub
or
addr16
repz
jl
lds
jle,pt
test
and
subl
jge
stos
aaa
xor
mov
sub
xchg
ret
inc
jns
dec
stc
enter
adc
pop
and
jge
enter
stc
push
in
test
in
pop
in
or
push
lret
ljmp
cmp
jmp
mov
mov
dec
fdivl
mov
mov
testl
pop
mov
xor
jg
stos
fsubl
pop
add
call
mov
adc
adc
inc
testb
stos
in
lret
pop
fcoml
pop
in
push
fwait
ja
xchg
add
loopne
fcoml
data16
jno
ss
dec
fimull
fwait
pop
pop
shl
adc
xchg
iret
je
dec
mov
inc
lcall
cmp
dec
sub
js
ret
cmp
xor
pop
sar
jne
push
adc
push
test
std
xchg
popa
jnp
lahf
cmp
arpl
imul
add
inc
jae
adc
sub
cwtl
shl
xchg
stos
add
hlt
adc
insb
je
jle
jnp
lret
ret
imul
mov
add
jo
arpl
insl
sti
leave
or
adc
cltd
jo
push
stos
fistps
mov
shlb
stc
into
cwtl
and
repz
inc
sbb
je
sub
sarl
lret
dec
test
insb
ss
bound
pop
add
call
fimull
mov
cmp
clc
mov
mov
sbb
and
loopne
xor
into
mov
add
cmp
xchg
jle
insb
mov
adcl
jp
test
int3
stos
not
sub
movsl
mov
jg
add
jge
pop
and
fisttpll
ja
mov
jg
out
ds
clc
ret
jl
rcr
pop
xchg
je
fsubp
and
fcomps
and
loop
popa
jecxz
repz
and
jge
dec
scas
push
repz
popf
test
out
fwait
push
pop
dec
jne
sarl
xchg
movsl
or
add
jno
cmp
sbb
roll
outsl
mov
jmp
test
mov
pop
jp
cmc
adc
lea
rorb
outsb
fnstcw
lret
push
cli
xor
push
ds
cltd
adc
lahf
cmp
mov
fcomps
mov
pusha
lea
cmpsb
call
pop
cmp
xorl
push
testl
sub
or
outsb
add
in
jo
int
mov
cwtl
test
pop
xlat
mov
cld
sbb
xlat
fucomp
mov
jg
scas
scas
cmc
push
in
push
xor
or
lret
aam
adc
or
pop
out
js
sub
add
fadds
xchg
mov
shlb
cmp
cs
cmp
rcrb
jl
insb
inc
pop
ss
insb
mov
dec
arpl
pop
idivl
mov
cmpsb
cmc
sub
scas
lods
cmp
jg
add
dec
loop
aas
std
bound
cmp
inc
mov
mov
and
fdivrl
dec
mov
jl
nop
or
xor
xchg
and
das
mov
mov
ss
stc
or
cld
dec
leave
dec
or
push
shrl
call
pusha
jge
inc
roll
xchg
sahf
scas
stos
ds
adc
aam
sub
nop
insb
mov
scas
inc
cs
mov
pop
mov
pushf
jmp
loop
stc
inc
xor
cwtl
add
cld
inc
jp
jne
cmp
cmp
aas
or
jmp
addb
lahf
jno
inc
mov
push
push
fidivs
test
mov
int3
lret
cmp
flds
outsl
cmp
add
inc
or
lcall
jno
in
inc
cwtl
pop
das
mov
jnp
mov
or
inc
mov
fwait
or
adc
test
sub
mov
int3
pop
jge
mov
jle
scas
mov
pop
clc
es
lahf
or
xchg
or
leave
xlat
inc
sbb
and
mov
mov
call
mov
cltd
loope
xor
inc
mov
stos
sbb
sbb
in
xor
push
stc
imul
jge
mov
cmp
mov
add
push
fmul
sbb
or
sahf
xchg
iret
repnz
dec
pop
repz
pop
mov
andw
mov
cmp
aad
stos
loopne
jbe
mov
in
and
int3
movsb
adc
shl
xlat
cmc
jle
mov
popa
sub
aas
sub
xor
xchg
imul
mov
and
and
push
scas
dec
jmp
inc
ret
sub
lods
sub
call
rolb
mov
sti
sbb
sbb
scas
add
mov
pop
pop
repnz
sbb
int
pop
mov
xor
jns
adc
push
je
push
aas
ret
jmp
jmp
loope
inc
mov
xlat
adc
pop
xchg
lahf
jmp
sbbl
dec
movsl
mov
lcall
fs
cmp
sbb
jmp
cld
add
inc
xchg
jb
out
cmp
pop
jl
pop
push
lock
outsb
xchg
in
mov
fwait
adc
add
and
xor
pushf
and
test
hlt
insl
mov
cmpl
insl
scas
xchg
lret
pusha
add
fsubs
fbld
pop
adc
movaps
fildl
es
loope
jno
jo
fs
cmc
and
pop
shlb
rclb
jp
jnp
out
je
push
repnz
adc
and
xchg
sub
adc
mov
adcl
scas
inc
xor
lock
and
sbbl
mov
dec
stc
std
xor
xchg
sbb
jbe
aas
jb
mov
mov
fcompl
jp
xlat
outsl
test
out
insb
std
jns
icebp
out
mov
js
je
fsub
sbb
adc
fisubrs
punpckldq
pop
stc
scas
and
sub
loope
ds
inc
dec
adc
push
and
jg
and
int
shl
mov
or
call
daa
or
mov
jp
mov
enter
inc
dec
jno
stc
push
pop
imulb
xor
js
xor
xchg
jne
rclb
inc
ja
out
cld
mov
insl
dec
xor
jo
push
xor
xchg
jne
push
sbb
pop
mov
mov
pop
xchg
jnp
iret
sti
fistps
ret
xlat
stos
in
adc
adc
cmp
xor
mov
dec
xlat
std
cmp
and
and
sub
dec
bound
clc
xchg
leave
pop
enter
pushf
lds
out
xchg
mov
faddl
push
or
jne
out
jg
rcrl
push
mov
cmp
lcall
popl
mov
ffreep
loopne
enter
sarb
push
sub
pop
leave
pop
mov
xor
sub
es
pop
dec
lods
mov
xor
addr16
mov
fdivrl
in
jecxz
xchg
sub
mov
gs
sbb
xchg
ret
jle
repz
roll
xchg
std
aad
sbb
pop
aaa
mov
xchg
add
arpl
aas
or
test
dec
mov
outsb
imul
cmp
in
lcall
fldenv
insb
sub
js
inc
or
pop
fsub
aam
in
enter
aaa
cmp
jmp
rol
ds
pop
add
sahf
popf
inc
insb
cmpsl
dec
jg
and
mov
hlt
sbb
pop
cmp
int
xor
movsb
push
pop
push
mov
sub
incl
adc
sbb
mov
or
xor
call
stos
dec
stc
sbb
jb
cld
mov
popf
cmp
test
push
cmp
jb
mov
mulb
or
jns
js
cmpb
out
negl
icebp
pop
and
lods
fs
jno
lahf
adc
mov
xchg
in
fcompl
mov
add
bound
movsl
and
inc
lret
pop
jmp
out
mov
sti
jno
cmpsb
daa
test
stc
aas
push
and
cmp
cmp
xchg
std
sub
adc
push
jle
and
or
std
lods
xorb
cmp
addr16
in
sub
sub
loope
movsl
stc
jnp
jne
rolb
hlt
add
add
adc
inc
fsubr
ficoms
out
jb
rcll
or
stc
cld
stc
js
and
mov
sti
loop
sbb
push
pop
fldenv
sbb
icebp
adc
jecxz
pop
int
xor
fndisi(8087
pop
jmp
pop
dec
filds
fsubs
pushf
pushl
test
inc
mov
pop
div
pop
cld
jnp
push
jbe
shlb
fistps
fdivs
jo
sub
mov
and
cmp
ret
xchg
stos
mov
push
adc
es
aam
dec
inc
lcall
adc
pop
push
xor
sub
call
popa
xor
es
pop
jae
jle
aam
inc
fcompl
push
mov
pop
jg
repz
jecxz
mov
shl
mov
mov
leave
movsl
push
jb
mov
jne
xchg
enter
xorb
cmp
mov
aam
jae
xchg
adc
outsb
outsl
cmp
ds
mov
push
dec
xchg
rclb
push
jmp
movsl
fdivl
push
dec
addr16
stos
push
jo
jne
add
adc
movsl
mov
and
loop
lock
movsb
mov
loop
sub
pop
imulb
dec
daa
mov
lret
les
mov
in
lret
mov
sbb
adc
ss
fcmovbe
jge
rep
pop
sub
push
pop
xchg
sbb
mov
lcall
mov
insl
or
cmp
cld
fs
and
push
loop
cmc
test
popf
mov
pop
out
fimuls
les
enter
in
in
xchg
sbb
or
pushf
in
mov
pop
mov
xor
out
nop
add
pop
in
cwtl
dec
mov
inc
fildll
imul
sbb
icebp
mov
cmovnp
mov
imul
push
jmp
xor
insl
lds
lock
insb
stos
cmp
xor
sub
mov
jp
arpl
sub
aas
mov
adc
mov
or
sbb
rorb
in
xor
fsts
cmp
jl
mov
dec
dec
mov
mov
ljmp
fidivs
mov
jne
iret
inc
int
inc
shl
in
shrb
in
loop
adc
xorl
outsl
add
inc
nop
mov
xor
dec
mov
sahf
addr16
mov
std
add
adc
scas
jecxz
sbb
sub
xchg
fcoml
ret
jne
es
push
sahf
inc
adc
lret
ljmp
mov
push
push
nop
cld
mov
ss
enter
jle
test
dec
mov
cwtl
inc
cmp
xchg
jb
lret
je
push
xor
jae
fwait
sub
lock
xor
or
stos
xor
push
mov
repz
add
dec
shl
imul
mov
in
ret
and
loopne
inc
pop
mov
sbb
loopne
gs
sti
mov
inc
cld
out
dec
cld
insb
sbb
jmp
add
pop
retw
dec
cmp
repnz
pop
pop
pop
mov
jno
movsl
cmpsb
jns
outsb
pop
mov
push
pminsw
mov
in
pop
in
fcoms
imul
outsl
fldl
xchg
sarb
sti
jmp
jmp
fcomp
sbbb
push
mov
dec
mov
cld
cltd
popf
fimuls
sahf
mov
addr16
xor
dec
mov
pop
data16
jmp
xchg
mov
pop
push
inc
inc
cmp
iret
and
adc
ds
addl
out
pusha
jnp
pop
add
pop
xor
lret
or
xor
fbstp
insl
inc
push
xor
rorl
les
out
mov
mov
pop
dec
icebp
sub
xchg
lea
in
mov
add
jge
stos
add
mov
addr16
mov
add
leave
adc
add
sarb
inc
scas
ja
push
hlt
sub
addl
cld
inc
lods
lods
mov
out
lcall
push
adc
mov
jb
xor
push
pop
jbe
cmp
dec
addr16
std
fs
scas
ret
jb
or
add
inc
cwtl
std
cs
mov
fidivl
aaa
mov
js
cltd
aam
ja
jno
cli
jb
dec
data16
mov
and
out
addb
mov
adc
jbe
adc
sub
sbb
imul
jge
loop
jecxz
xor
call
mov
shlb
popf
xchg
daa
mov
cltd
js
pushf
clc
xor
faddl
mov
mov
jecxz
out
ljmp
sub
aam
add
lods
add
ja
sub
dec
outsb
pop
stos
cwtl
sub
lds
js
jle
int
jo
add
repz
scas
sub
test
sbb
jne
into
arpl
xchg
fsubrs
aas
fidivl
or
mov
fs
and
lret
pushf
int
jge
sub
xor
or
call
lcall
jne
fs
js
rcr
stos
adc
xor
mov
mov
pop
repz
sub
mov
ds
divb
adc
iret
clc
iret
iret
jbe
push
je
je
push
mov
inc
jl
into
adc
xor
sub
hlt
push
sahf
aas
jno
orl
xor
scas
push
xor
jp
xchg
fucomp
fs
test
aaa
sbb
rorl
andb
lea
pop
shrl
and
imul
or
adc
jno
mov
out
fsts
cmp
xor
repz
jl
ficoms
int
fs
divb
stos
mov
imul
mov
outsl
mov
addb
pop
cmp
aam
scas
dec
sbb
push
xchg
xchg
lods
inc
dec
jbe
lods
ds
rclb
add
xchg
test
sub
or
pop
lret
push
leave
scas
les
mov
fildll
testb
pop
cmp
dec
jnp
dec
aam
sbb
cmpsb
sbb
mov
push
je
cmp
cli
addb
jnp
mov
call
es
inc
test
mov
cld
add
sti
mov
jae
adc
mov
xchg
xchg
xor
xchg
repnz
pop
jnp
or
leave
sub
mov
cmc
jns
push
pop
out
jno
jge
xchg
das
xor
sbb
lods
cmpsb
dec
xor
jo
mov
fiadds
mov
jle
repnz
cmp
pop
sbb
je
mov
ljmp
stc
dec
idivl
test
in
inc
mov
sarb
pop
cmp
aaa
sbb
mov
popa
aam
xchg
div
pop
jle
fldl
je
sti
inc
out
sub
hlt
dec
add
in
and
cmc
popf
cmp
mov
lcall
jo
push
ret
data16
xchg
scas
sahf
mov
das
fists
lock
mov
adc
addl
add
pushl
mov
ds
std
lcall
sub
adc
jge
outsb
xchg
mov
popf
or
mov
loope
lret
addr16
lret
inc
inc
mov
cmp
mov
sub
jnp
sub
push
pop
out
push
pop
call
ljmp
scas
or
cltd
out
and
adc
mov
and
and
lods
scas
add
cli
adc
xor
outsb
cli
into
fidivl
mov
jg
int3
xor
mov
jecxz
clc
sbb
out
xchg
imul
inc
jbe
cltd
add
add
xor
lods
mov
pop
dec
cltd
adc
int3
std
les
pop
jle
sbb
xorl
test
sub
cmp
bound
and
fdivr
dec
jo
push
repnz
dec
sbb
inc
jp
hlt
mov
scas
mov
jb
push
jmp
clc
shl
mov
push
icebp
sahf
es
js
sti
inc
fimull
into
js
sbb
mov
inc
adc
pushf
out
jmp
das
rcl
movsb
call
jnp
vmovhps
stos
mov
inc
aas
fwait
push
jne
dec
dec
addr16
inc
ret
jmp
xor
scas
mov
adc
loop
xor
push
and
cmpsb
in
and
mov
adc
mov
into
xchg
push
sub
xor
scas
add
dec
mov
in
inc
mov
add
mov
add
mov
fcomp
pop
lahf
mov
les
cmp
inc
pop
push
xor
sbb
push
mov
aad
rcrb
inc
insl
sub
cltd
or
out
sub
movsl
cld
scas
stos
popa
movl
sub
out
pop
push
lods
xchg
mov
and
xor
add
mov
push
jle
movsb
dec
outsb
jg
leave
lret
sub
adc
and
sbb
mov
mov
rolb
lods
xor
inc
insb
cmp
xchg
jns
pop
nop
ja
lahf
loope
pop
xchg
hlt
or
jns
mov
js
into
sub
xchg
rcrl
test
jbe
popl
mov
xchg
gs
mov
roll
es
push
sbb
mov
cld
add
cmp
mov
add
mov
pop
mov
mov
enter
mov
push
dec
cli
sahf
frstor
icebp
xchg
sbb
ret
xor
mov
jo
push
sub
jb
leave
inc
pushf
mov
sbb
je
sbb
out
gs
pop
push
incb
push
dec
or
mov
sti
pop
inc
sbbl
fs
mov
sbb
cltd
cwtl
push
mov
sub
xchg
testl
inc
cmp
push
pushf
push
iret
bound
mov
inc
sbb
test
shlb
and
imulb
pop
fsubrp
stos
addr16
cmp
pop
push
add
aad
daa
mov
outsb
loope
or
push
xchg
sub
add
xchg
dec
js,pn
dec
jmp
mov
stos
jb
dec
xor
or
or
push
ret
xor
inc
nop
xchg
mov
fwait
fs
xchg
jp
pop
inc
jp
add
aaa
ret
insl
sub
stc
inc
xchg
sub
mov
dec
adc
pushf
ss
dec
ret
or
fidivrl
jge
xchg
loop
mov
mov
mov
cmp
adc
scas
inc
and
pop
sahf
shrl
and
add
inc
xor
test
jg
xor
push
in
repz
or
out
decl
je
lret
xchg
add
test
je
int
inc
ja
push
push
std
jp
daa
cli
sarb
xchg
addr16
xor
pop
jmp
enter
sub
sbb
inc
sbb
arpl
mov
xor
inc
mov
mov
mov
adc
mov
sub
dec
xchg
mov
in
xor
xchg
aam
pusha
push
or
loopne
dec
in
out
jnp
adc
push
or
sbb
xor
cmp
sti
xchg
sub
add
andb
popf
in
repz
loopne
fsts
lret
mov
gs
adc
sbb
int
loopne
fmull
xchg
mov
les
pop
add
add
movsl
test
test
pop
add
pop
xor
int
dec
out
jmp
adc
pop
xor
iret
sub
fisubrl
jne
in
or
mov
dec
jo
es
dec
dec
and
js
lods
sbb
and
mov
adc
dec
push
out
popl
add
add
push
sti
popl
mov
pop
jne
sub
jbe
ret
sub
not
aad
jnp
scas
pushf
cmc
rcl
pop
and
mov
pop
mulb
jbe
jl
pop
mov
sub
inc
bound
sbb
push
addr16
imul
pusha
push
push
dec
lret
cltd
push
leave
sbb
test
xlat
pop
clc
mov
lock
fnstenv
jecxz
inc
mov
mov
push
sbb
ret
gs
mov
lea
mov
add
or
push
out
ds
mov
mov
jns
sub
shrb
sub
pop
xor
rol
push
adc
negb
mov
out
popa
sbb
jns
mov
inc
in
mov
sbb
stos
xorl
shll
mov
mov
push
lcall
daa
mov
aam
iret
insb
ds
cmp
xor
call
mov
out
sub
cmp
and
iret
or
insl
jle
or
lea
xlat
add
ret
outsb
push
das
pop
adc
mov
add
sub
aam
insl
jno
stos
mov
jno
rorl
jns
and
mov
fwait
inc
xchg
insb
cmp
or
iret
sbbl
inc
push
jecxz
aad
outsl
push
sbb
out
pop
jge
mov
repnz
fs
sbb
fcmovnu
shrl
in
jno
mov
jne
dec
jg
scas
sbb
out
sub
mov
jle
mov
or
pop
and
sub
xor
dec
loopne
dec
lahf
ret
mov
nop
xor
aaa
mov
loop
push
adc
sbb
sbb
pusha
and
inc
jnp
cmp
mov
enter
jns
mov
mov
ss
and
stos
sub
xor
jns
xor
lret
ret
pop
mov
mov
repz
movsl
adc
jae
lds
incl
mov
dec
push
test
xchg
cmp
add
insl
and
out
ljmp
xchg
xchg
int
inc
jl
pop
shrb
jno
mov
adcb
or
out
aaa
mov
inc
add
mov
pop
lods
push
fs
jmp
or
mov
or
shll
adc
pop
sub
movsl
push
cmpsl
or
jecxz
add
shr
pop
sahf
pop
insl
or
pop
xchg
loope
out
mov
cltd
adc
sti
data16
xchg
cmc
lcallw
lret
and
push
cmp
data16
mov
push
ds
cld
jmp
imul
or
rolb
xchg
add
jbe
fmuls
mov
test
pop
stos
lret
sub
mov
inc
or
adc
es
inc
imul
pop
inc
out
lds
mov
jle
in
xor
push
jnp
fcmovne
dec
adc
inc
mov
out
fstpt
out
stos
mov
roll
test
hlt
xor
jl
mov
test
ret
in
pop
cmpsl
aas
mov
pop
push
lea
pop
xchg
pushf
loopne
xchg
into
movsb
mov
fwait
xor
inc
mov
lcall
jae
in
outsl
xor
test
test
pushf
arpl
adc
in
xchg
mov
aas
imul
scas
scas
mov
outsl
out
imul
stc
and
and
test
aam
jg
outsb
xchg
fnsave
xor
lret
into
inc
int3
rorl
cmp
dec
mov
popf
pop
xchg
cmpsb
dec
loop
xorb
les
ret
stos
pop
imul
fs
leave
xchg
jns
int
add
add
ret
mov
dec
pop
jbe
jle
push
je
sahf
or
add
andl
movsl
or
push
ret
leave
or
dec
mov
sbb
xchg
pop
jne
mov
rcll
outsl
or
mov
and
mov
inc
mov
imul
cli
dec
inc
mov
xchg
mov
into
cmp
movsb
inc
into
div
and
out
push
ret
mov
movsb
or
pop
inc
lods
rolb
stos
adcb
jmp
xchg
std
dec
xchg
mov
inc
fwait
negl
xchg
lcall
mov
rorb
and
or
jns
mov
mov
push
xchg
mov
pop
push
xchg
clc
lods
sbb
fcmovnu
jnp
and
xlat
incb
push
add
idivb
and
sub
inc
adc
dec
xchg
sbb
cmp
push
pop
dec
popf
lods
jo
sub
shr
jge
out
lods
push
and
fwait
and
mov
shr
inc
lds
in
in
loopne
pop
out
scas
mov
push
inc
jnp
pop
out
jl
inc
scas
xor
or
mov
and
xchg
sbb
ficompl
mov
adc
mov
sub
dec
and
cmp
sub
xor
popl
mov
mov
loope
xchg
mov
mov
mov
cld
dec
xor
dec
mov
ljmp
hlt
jle
int3
lock
mov
imul
call
xlat
sbb
cltd
mov
popf
pop
adc
fnstsw
jmp
adc
stos
mov
cmp
xchg
bound
sbb
push
pop
lahf
loop
adc
mov
mov
push
jecxz
adc
inc
cmp
hlt
adc
leave
mov
jecxz
adcl
cmpsl
movsl
arpl
je
inc
push
or
aad
dec
into
jge
cltd
adc
jle
mov
add
arpl
aas
xor
ret
inc
dec
push
imul
nop
push
and
and
out
fimuls
fs
stos
cmp
inc
pop
pushf
shl
push
and
mov
mov
jo
push
in
cmp
inc
mov
ret
mov
mov
jp
pop
add
sbb
dec
in
sbb
or
sbb
shl
pop
shlb
sub
rolb
and
cmp
pop
stos
push
jmp
popa
mov
mov
movsl
add
ffree
push
push
lea
mov
push
or
mov
imull
jp
cli
push
and
pop
dec
dec
sbb
xchg
mov
in
jno
fmuls
pop
inc
mov
cmp
jmp
push
sub
add
movsb
fnsave
xor
dec
inc
add
xchg
xchg
add
mov
dec
pop
push
scas
shll
push
loopne
pop
jle
sub
movsl
jle
enter
aad
xor
movsl
mov
fcmovbe
cli
cmp
inc
mov
inc
je
fabs
int
fdivs
roll
inc
es
cmp
cwtl
push
je
inc
out
test
sarl
dec
pop
cs
dec
pop
mov
push
jecxz
cmp
popa
xchg
fbstp
sahf
dec
pop
lret
jae
mov
mov
imul
pop
push
icebp
pop
ret
pop
sarl
add
jbe
push
dec
xor
xchg
xchg
cmp
popf
ret
in
xchg
xchg
incl
cmpsb
out
mov
mov
sub
divl
rcrl
adcl
xchg
insl
lcall
into
pop
sub
dec
adc
mov
push
lods
nop
mov
mov
es
arpl
outsl
fiaddl
inc
xchg
push
sub
int
loopne
lea
mov
sub
jno
arpl
scas
pop
mov
jge
xchg
mov
and
push
mov
insb
cmp
jnp
sub
xchg
mov
add
xor
push
jmp
adc
pop
ja
adc
mov
mov
imul
imul
add
popf
mov
mov
fiaddl
or
cmp
push
popf
inc
jmp
or
ret
adc
jmp
cltd
mov
ds
ror
sti
fisubrs
cmp
inc
and
inc
in
lcall
push
lcall
and
das
shll
dec
call
push
jl
loope
push
test
jnp,pt
push
ss
fsubrp
adc
pop
adc
insb
push
cmpsl
xor
out
out
push
in
mov
cs
outsb
or
add
cmp
insb
test
xchg
pop
out
mov
ja
adc
xor
idivb
cld
into
jle
mov
mov
inc
popw
jmp
stc
mov
repnz
xchg
rcll
dec
loopne
jp
fisttpll
ja
jle
dec
mov
movsb
or
dec
loope
push
xor
adc
out
and
and
add
repz
xchg
shr
lea
push
loope
jae
lds
dec
rclb
xchg
std
push
sarb
iret
push
push
pop
sbb
out
mov
push
jecxz
cmp
dec
ja
cmp
or
hlt
or
sbb
in
inc
sbb
xor
data16
push
dec
adc
movsl
mov
lret
pop
mov
gs
hlt
fs
aaa
aas
push
or
testl
pop
aaa
push
sahf
inc
xchg
jl
mov
pushf
jae
cmc
and
test
subb
mov
rclb
lahf
pop
pop
out
dec
sbb
repnz
and
xchg
xchg
cmpb
lcallw
pop
jl
mov
call
cmp
mov
sbb
stos
xorb
loopne
add
jnp
xchg
jbe
push
adc
dec
cmp
xchg
imul
sub
mov
adc
insb
xchg
popa
inc
iret
iret
pop
push
or
in
xor
and
int3
insl
mov
lahf
mov
mov
jns
ds
xor
lcall
shlb
xchg
test
pop
cld
repz
jmp
adc
pushl
sbb
les
mov
adc
cmp
xchg
fidivl
push
lret
sbb
push
mov
mov
xor
gs
inc
shll
or
sbb
mov
xor
lret
nopl
or
sub
rcrl
xchg
pop
add
aas
mov
dec
dec
cltd
sbb
and
adc
add
xchg
jo
mov
jno
sti
je
pop
loope
je
pop
mov
cld
je
xchg
dec
push
neg
cmpsb
leave
std
scas
out
repnz
push
icebp
fs
mov
jns
mov
scas
mov
stc
fldt
je
negl
in
lret
out
scas
stos
repnz
aad
outsb
ja
cmp
lock
jne
or
mov
int
mov
std
outsb
cwtl
fwait
movsb
add
pop
xlat
rolb
int3
xlat
sbb
mov
mov
sbb
sbbl
sub
cwtl
shl
add
leave
inc
loop
cmp
or
addr16
or
cwtl
push
sbb
dec
das
inc
enter
sbb
add
xchg
call
ss
sarb
arpl
lock
push
cmpsl
inc
push
repz
lahf
insb
mov
cltd
test
adc
adc
jle
fwait
xchg
in
dec
cmp
in
sub
mov
leave
jnp
stos
cwtl
popf
cwtl
xchg
sbb
jp
lea
cmovg
xor
andl
inc
and
xchg
jle
fwait
or
dec
cmc
sbb
add
mov
cwtl
adc
out
scas
mov
negb
hlt
lds
das
xlat
jno
lods
pop
leave
cmp
jg
fldenv
add
hlt
pop
ss
lock
fisttps
sub
test
sub
jb
sti
or
loope
mov
fdivs
fistpll
gs
mov
push
cli
sub
test
out
nop
rcl
popf
leave
xchg
or
fcompl
stos
adc
stc
pop
or
into
dec
mov
sub
fsubl
push
int3
movsl
enter
push
mov
mov
cltd
push
aaa
adc
jge
mov
mov
cmp
cmp
or
add
jae
shrb
or
cwtl
pop
jbe
sbb
insb
lret
cmp
outsb
enter
fmull
push
scas
repz
dec
mov
call
xor
incb
and
add
imull
in
out
lods
mov
lcall
xor
cli
cs
andl
in
int3
mov
int3
xchg
loop
cmpsb
xchg
mov
mov
mov
aaa
inc
ja
mov
push
pop
or
jecxz
lret
xchg
cmp
mov
inc
in
scas
push
cld
movsb
adc
inc
lds
fbstp
sbb
cmp
xchg
aad
in
in
stos
filds
in
cmc
jne
cmp
xor
sbb
jg
mov
jmp
xor
mov
addl
cmp
sub
ret
pop
mov
push
outsb
pop
sub
jne
jl
lods
sbb
push
imul
push
xor
out
lss
jl
aam
pop
mov
jp
ret
xor
adc
or
fidivl
test
xchg
out
aad
adc
outsb
mov
mov
adc
dec
sbb
outsl
xchg
jno
xchg
imul
and
icebp
inc
std
mov
pop
jl
fidivrs
or
ror
repnz
adc
sub
inc
xchg
adc
mov
cmp
sarb
push
xchg
jl
jg
mov
lret
stos
mov
dec
fs
sahf
lahf
sub
int
sahf
lcall
out
add
mov
cmp
cmp
mov
enter
fs
jnp
cwtl
push
lret
mov
mov
mov
sub
xor
dec
cmpsl
push
out
pop
outsl
fsubrl
in
xchg
in
or
jmp
daa
xlat
push
shr
and
sbb
push
lret
or
mov
insl
adc
scas
mov
in
pop
ret
int3
mov
jo
test
repnz
jmp
aad
fdivrs
cmc
mov
push
push
mov
or
jge
subl
and
pop
shlb
adc
push
mov
out
sub
mov
jno
dec
cli
cmpsb
rcl
xchg
adc
push
insb
aas
xchg
lea
mov
and
xor
arpl
paddb
mov
inc
test
sbbb
push
inc
add
nop
lock
in
imul
xor
or
and
sub
push
sarl
dec
wbinvd
jnp
cmp
sarb
movsl
dec
add
jge
cld
adc
cltd
std
pop
xlat
push
jb
mov
int
lods
inc
insl
lahf
cmpsl
aas
repnz
inc
sti
movsb
inc
push
push
stos
mov
push
mov
jg
mov
and
inc
or
add
test
cmc
mov
popf
mov
cmp
sub
lock
jnp
repz
xor
aam
call
fwait
test
inc
fistpll
push
adc
pusha
enter
dec
cld
xchg
cmpsb
ror
dec
fs
mov
jno
xchg
jg
mov
cld
push
mov
adc
mov
mov
ja
mov
or
sarl
mov
out
mov
mov
test
loopne
enter
dec
adc
xchg
stos
nop
xlat
test
cwtl
rcll
mov
xchg
and
mov
std
pop
repz
inc
xor
sbb
ja
pop
leave
push
add
cmp
nop
ja
sub
shll
xor
aam
xor
mov
inc
inc
sub
sbbb
cmp
xor
scas
and
lcall
push
ja
pop
and
hlt
call
dec
push
inc
jmp
dec
xor
pushf
mov
std
jle
push
mov
ret
sbb
mov
int
cmp
jmp
jmp
lds
fsts
or
mov
xor
arpl
sbb
jl
loop
xchg
push
cmp
sub
arpl
pop
jp
xor
repz
mov
jg
jge
sub
sbb
xor
stc
adc
inc
mov
call
xchg
push
movsb
mov
xor
xor
stc
push
jmp
dec
jo
push
leave
and
out
lock
mov
ret
les
frstor
shrb
bound
fistl
sbb
mov
sbb
js
hlt
cmp
jb
and
jle
iret
mov
or
xchg
jno
enter
pop
hlt
mov
ret
inc
adc
out
jno
jb
cmp
pop
ret
or
loope
inc
pop
mov
inc
stos
movsl
lret
cld
lds
fistps
mov
jl
fs
loopne
jno
mov
xchg
and
push
mov
andl
cwtl
xchg
push
or
xor
pop
call
sub
xor
cmp
fnstcw
out
mov
inc
xlat
adc
xlat
cli
fs
test
sub
jle
mov
xor
jne
mov
mov
ficomps
sbb
sbb
aaa
push
or
and
sahf
xchg
cmp
fistl
rcrl
mov
push
or
inc
bound
jle
mov
push
sti
xchg
jle
imul
xchg
or
cs
dec
jne
fnsave
lahf
cmpsl
dec
cli
push
cmp
jecxz
dec
mov
mov
cmpsl
mov
shlb
push
pop
xchg
fstl
jbe
lret
sub
pop
cmp
clc
jmp
std
mov
sti
xchg
outsb
std
sbb
jno
mov
ret
inc
xor
inc
out
xlat
fisubrl
push
in
sbb
mov
repnz
inc
add
loope
outsb
add
imul
inc
pop
xor
jl
jbe
cmpsb
aad
xchg
mov
jg
cmp
and
cwtl
add
pop
mov
das
pop
mov
mov
mov
xchg
push
mov
lahf
dec
and
stos
sbb
clc
orl
movsl
popa
addr16
cmc
dec
push
xchg
call
xchg
iret
add
int
je
imul
jl
jp
lahf
rcrb
pop
into
adc
lods
push
ret
adc
jno
sub
push
ror
xor
test
and
push
mov
xor
in
or
xchg
mov
xchg
or
mov
pop
jmp
add
jl
jne
pop
aas
mov
jecxz
mov
mov
mov
popl
fcmovnbe
cltd
pop
push
jno
sbb
jns
mov
xor
leave
sub
mov
fildl
add
lods
je
fisttps
push
adc
mov
out
gs
ret
insl
sub
mov
dec
dec
pop
ror
leave
or
sbb
stos
xor
dec
imul
mov
pop
lock
or
xor
xor
icebp
orb
adc
xlat
xchg
push
lahf
enter
xchg
les
push
popf
dec
push
aaa
mov
and
jns
test
mov
pop
int
adc
adc
dec
in
es
xchg
mov
xchg
cmp
adc
dec
movsb
addr16
mov
mov
movsb
pop
jle
cmp
sbb
push
and
xchg
std
or
mov
pusha
gs
scas
and
or
and
cli
push
fnstenv
mov
inc
mov
push
out
xchg
ror
sub
or
in
dec
ja
adc
sbb
repz
adc
sub
adc
xor
ret
xchg
mov
xor
scas
sub
xchg
inc
insl
iret
xchg
icebp
iret
shll
in
stos
fld
mov
call
cld
adc
cli
pushf
fdivrp
dec
in
lea
js
mov
inc
cli
out
repz
sar
xor
cmc
jb
or
int3
jge
add
out
setbe
inc
jle
inc
xchg
mov
lods
jmp
repz
or
incl
jle
outsb
popf
jg
xchg
aas
sti
repnz
mov
pop
stos
jp
jge
imul
xor
mov
aad
sbb
jnp
and
mov
mov
in
mov
test
or
mov
test
in
xchg
mov
jmp
out
outsl
lea
std
jae
mov
push
bound
rcr
and
lods
je
lcall
push
pop
shrb
jecxz
dec
inc
lods
dec
ljmp
xor
pop
jb
ja
pop
cmpsl
or
add
sub
or
cmp
mov
adc
or
rolb
mov
popl
aam
lods
insl
test
jge
dec
lahf
mov
cwtl
mov
sub
push
dec
jbe
imul
adcl
iret
popf
outsb
sub
cmp
jge
cmpsl
mov
fnstenv
push
mov
rolb
fcoms
cmp
jnp
aad
mov
cmpl
lcall
test
cmc
sbb
pop
add
cmp
add
cli
jmp
aaa
test
into
adc
rol
cmpsl
das
push
add
aad
push
fiadds
fwait
sbb
push
enter
add
xor
sub
or
or
insl
xchg
maxps
inc
test
scas
insl
adc
lods
xor
push
pop
sti
aam
add
shll
sbb
mov
sbb
icebp
adc
jbe
mov
or
sarl
push
daa
adc
mov
jno
xchg
push
fistps
sub
add
or
repz
xorb
in
jecxz
out
or
or
mov
xchg
dec
sbb
and
inc
and
call
sbb
loope
xchg
jnp
je
and
call
iret
repnz
push
push
dec
xchg
scas
cli
bound
loop
aam
push
xor
std
testb
push
stos
sarb
movsb
xor
xor
mov
out
ja
pop
xchg
enter
subb
mov
inc
add
push
add
xchg
loop
xchg
dec
mov
in
pcmpeqw
call
lcall
inc
test
shll
lock
dec
int
cld
sbb
loop
add
mov
push
in
sub
mov
push
add
jg
fisubrs
inc
adc
fildll
adc
arpl
add
or
lea
mov
cmpsl
cmpsl
adc
test
xchg
lods
into
pop
xchg
pop
loop
mov
add
jbe
cmp
shlb
jmp
xor
sbb
stos
xchg
hlt
jnp
and
adc
mov
xlat
daa
scas
cltd
sahf
mov
mov
cltd
dec
je
mov
sub
aam
add
es
das
stos
mov
jle
cli
lds
pop
mov
cmpsl
jmp
dec
and
sbb
insl
ja
cmpsl
cmp
cwtl
fdivrl
mov
push
push
mov
data16
push
mov
add
iret
adc
cltd
push
push
je
insl
jle
icebp
mov
mov
leave
fnsave
movsl
cmpsb
adc
fildl
aam
nop
sbb
es
and
dec
jecxz
dec
cmp
stos
ljmp
stos
xchg
xor
xchg
adc
jno
aam
push
addr16
xlat
std
neg
push
sbb
jb
das
pop
mov
fdiv
mov
fs
xor
xor
pushf
das
mov
movsb
arpl
imul
sub
sti
jle
fcompl
inc
jnp
inc
ds
subl
call
lods
jl
scas
and
xchg
adc
lcall
call
lods
mov
sbb
paddw
into
fsubl
add
cmc
adc
jnp
adc
cmp
lds
mov
sbb
cli
sbb
push
sub
mov
or
mov
dec
xchg
mov
add
ror
mulb
insb
mov
testl
lods
lock
in
pop
add
sbb
jns
test
mov
adc
es
mov
add
sub
icebp
test
call
add
dec
pop
push
or
push
loopne
jg
adc
mov
pop
lods
adc
int3
jg
xchg
or
gs
mov
loope
repz
pop
or
add
push
cmp
int
jp
jb
mov
fidivs
popf
pop
xchg
rorl
mov
addr16
jne
sub
cmpsb
dec
das
out
lahf
cmc
data16
fs
mov
repnz
sbb
xor
adc
xchg
push
cwtl
cmp
cmc
xchg
loope
adc
ret
mov
mov
pop
cmp
xchg
pop
add
add
xchg
dec
pop
mov
mov
jp
scas
lods
stos
popf
cmp
arpl
xor
aad
xor
ja
mov
out
clc
cli
mov
repz
paddusb
pop
or
mov
or
bound
adc
pushf
or
lcall
shlb
xchg
jo
ret
adcl
mov
mov
pop
addb
jbe
movl
inc
adc
cmc
sbb
hlt
out
pop
jl
mov
ss
outsb
sbb
and
nop
dec
imul
dec
jg
outsl
add
dec
jl
dec
outsb
ljmp
xchg
lahf
xchg
and
orb
call
outsl
in
pop
repnz
mov
xor
add
fidivrs
mov
test
pop
adc
icebp
sub
and
loope
push
mov
dec
fcmovb
or
insb
popa
xor
inc
mov
imul
fcomi
or
aaa
adc
inc
in
mov
mov
adc
mov
add
rcrl
out
push
aaa
and
test
loop
mov
lcall
bound
aaa
push
add
push
push
inc
std
ret
xchg
sbb
sub
fistl
jmp
enter
sbb
fldcw
lcall
mov
arpl
lea
aad
in
push
mov
sbb
loope
jl
cmpsl
dec
nop
push
addr16
xor
mov
jno
in
dec
add
arpl
cld
cltd
scas
cmp
repz
cmpl
jge
lcall
adc
mov
cmp
loop
clc
push
cmp
mov
inc
leave
push
movsb
cmp
decb
or
cmp
or
hlt
mov
pop
add
cmp
std
in
pop
lock
lret
jecxz
push
jb
jp
inc
sbb
dec
and
cmpsb
lret
hlt
inc
inc
inc
mov
ret
and
pop
mov
sbb
cmp
stc
movsb
cmc
cmp
outsl
push
sbb
dec
and
cli
jnp
mov
sbb
popa
or
cmc
pushf
jae
dec
cwtl
shrb
add
pop
lock
cltd
cs
push
outsb
mov
fsubrs
clc
decb
adc
or
push
stos
or
in
push
jge
lds
sub
aam
dec
lods
sub
mov
and
fstpl
mov
mov
inc
rcr
add
loop
sbb
sbb
bound
inc
js
ja
and
imul
mov
std
xchg
notb
lods
push
stc
mov
fmull
insb
mov
inc
xchg
into
ret
jle
lret
bound
xchg
cwtl
jbe
int3
mov
stc
cmp
fwait
dec
jl
nop
arpl
push
out
inc
ja
jnp
mov
lcall
pop
hlt
adc
xchg
and
pop
pop
jae
push
loope
shll
or
mov
sub
int3
and
mov
mov
mov
mov
cmp
stos
sub
sarb
or
inc
insl
pop
or
icebp
clc
ficoml
out
push
insl
ja
loopne
xchg
pop
push
mov
lcall
mov
push
xchg
push
js
les
or
imul
mov
cmp
sub
sbb
movsl
sti
inc
popf
popa
cmp
push
je
mov
sti
aad
test
pop
sub
ja
daa
mov
jne
int
adc
or
cltd
ja
adc
out
mov
lret
mov
jg
jecxz
and
inc
sbb
test
jmp
mov
je
fcoms
jle
add
stc
mov
or
mov
arpl
xor
and
add
fwait
sub
mov
decl
shlb
fdiv
pop
sbb
data16
xchg
cmp
pop
push
push
call
pop
loop
xor
jecxz
and
test
pop
fwait
fists
in
or
jbe
mov
xorl
arpl
xchg
or
adc
js
and
cmp
jmp
dec
enter
stos
mov
scas
xchg
fcompl
mulb
daa
mov
imull
add
sbb
mov
add
stos
sub
cli
imul
std
mov
jl
dec
stc
cli
or
das
or
dec
push
fildl
inc
stos
fadds
cmp
or
adcb
inc
add
mov
test
aam
sub
and
daa
incl
and
adc
xor
xchg
rcl
mov
add
dec
into
int3
das
popf
push
mov
push
mov
stos
xchg
mov
hlt
scas
imul
mov
out
cmp
cwtl
jle
mov
sbb
es
push
test
enter
in
iret
push
int
orb
jle
inc
fldenv
shrd
sbb
int3
sub
jnp
or
jo
sbb
add
outsl
mov
stc
and
and
add
mov
ja
sbb
sub
jecxz
lds
arpl
fldcw
stos
mov
pop
mov
mov
adcb
mov
je
jecxz
inc
inc
mov
or
sub
movsl
outsw
insb
pop
out
test
dec
ret
in
and
or
js
sbb
testl
test
mov
or
cmpl
fisubrs
push
pop
mov
jbe
cld
stos
mov
cmp
push
gs
or
mov
push
loop
pop
mov
xchg
adc
dec
js
out
test
scas
push
icebp
xchg
or
cmp
into
pop
push
or
les
iret
pop
or
lret
sub
or
dec
add
add
sbb
dec
or
mov
jl
dec
push
xor
das
jg
ja
enter
lods
fwait
repz
gs
jmp
sub
leave
adc
xchg
rcr
mov
es
mov
mov
or
xor
sub
mov
jns
mov
xor
jns
nop
mov
xchg
js
fidivl
ja
xchg
in
pusha
ljmp
cmc
pop
pop
jg
aam
cmp
jecxz
inc
iret
jge
ret
sub
shll
jmp
lods
mov
push
lcall
imul
xor
inc
fstl
and
insb
sub
ja
jge
popa
ljmp
dec
dec
adc
cmp
loop
cmp
dec
enter
mov
add
push
fdivrs
pop
push
xorl
push
add
lods
dec
mov
das
xchg
pop
mov
mov
cmp
fdivrl
repz
stc
mov
add
cli
int
fnsave
mov
fisttpll
popa
leave
popf
sbb
in
les
je
pop
cwtl
or
adc
lods
push
xchg
cs
imul
inc
cmp
inc
popf
cwtl
popa
sti
jne
je
adc
mov
mov
add
mov
outsb
mov
fwait
enter
ja
jp
add
ret
in
loop
xor
and
std
rclb
icebp
mov
dec
fdivl
mov
daa
push
movsl
mov
pop
dec
pop
mov
cmp
addr16
sub
pop
and
xchg
adc
mov
push
lock
jnp
hlt
ss
mov
adc
mov
es
mov
bound
aas
push
loope
or
in
mov
and
sti
ja
ret
cwtl
das
mov
das
push
jne
add
sti
or
inc
jne
push
fidivrs
mov
or
xor
lods
fistpl
nop
inc
aad
push
push
mov
cwtl
jg
add
out
call
jne
sub
inc
test
mov
xchg
cltd
sbb
dec
insl
cmp
xchg
adc
pushf
sub
xor
add
jb
inc
loop
and
ds
push
fs
dec
pop
jecxz
jo
clc
movsb
and
jne
out
rolb
push
xchg
mov
movsl
scas
pop
pop
jno
sbb
fbld
lods
jne
or
and
sbb
es
dec
std
or
inc
iret
cli
aam
xchg
ljmp
push
lret
mov
push
stc
sbb
iret
dec
cli
mov
stos
jg
daa
inc
fcompl
lea
jl
loop
aad
xchg
pop
sahf
jo
jbe
dec
movsb
xor
xor
add
imul
add
mov
test
hlt
mov
add
sub
loop
jg
inc
gs
cmp
hlt
jno
mov
test
push
cmp
repnz
adc
pushf
add
jge
pop
int3
in
loope
lcall
lret
mov
adc
xchg
out
adc
out
mov
fcmovnu
push
cmp
lret
cli
popf
adc
dec
mov
pop
movsl
in
fstp
test
cmpsb
movsb
fdivp
cmp
les
sarl
mov
jg
movsl
ljmp
mov
push
adc
subb
mov
pop
enter
cmp
fwait
push
js
dec
negb
push
or
xlat
pop
sub
lret
dec
jo
mov
dec
outsb
mov
push
outsl
and
dec
sub
pusha
push
push
sbb
mov
add
dec
rorb
aaa
cmp
xor
dec
stc
lods
pop
test
jbe
adc
lods
jmp
and
daa
imul
test
push
push
mov
jle
insb
inc
xor
cltd
lea
sub
pop
pop
mov
lock
jnp
add
push
repz
and
out
cli
repz
iret
cli
mov
pop
xchg
mov
insl
mov
pop
adc
jo
fldenv
and
mov
dec
dec
and
push
cmp
xchg
cmc
or
pop
adc
sbb
jmp
jle
pop
call
jmp
aas
push
repz
addr16
inc
xor
adc
rcr
loopne
inc
xchg
adcl
dec
out
nop
pop
sbb
cmp
popa
xlat
mov
mov
scas
sub
into
xchg
cmp
jae
push
stos
ds
lods
add
or
inc
adc
dec
pop
call
mov
mov
mov
and
dec
rcl
pushf
scas
add
jmp
mul
and
xchg
mov
std
aad
add
mov
scas
push
cmpsl
and
in
popf
ss
jbe
into
repnz
sbb
inc
mov
jge
aam
mov
stos
mov
and
adc
jg
mov
xchg
iret
arpl
mov
inc
pusha
jbe
faddp
aas
pop
push
test
xorb
sbb
sti
das
or
test
jns
add
cmp
lods
jnp
cltd
push
jle
pop
add
sub
cmp
adc
stos
pusha
popf
pusha
cmpsl
jns
and
aad
fadds
sahf
int
icebp
daa
test
imul
sub
mov
lock
mov
adc
pop
imul
js
sub
pop
divb
mov
and
mov
push
ss
in
push
ja
orl
test
or
addr16
push
cmc
jg
push
sub
inc
rcr
jle
push
xchg
scas
sbb
fnstsw
and
jmp
xchg
xor
roll
pop
sbb
and
or
dec
das
add
dec
fmuls
mov
jo
hlt
pop
push
out
push
or
mov
mov
fcompl
cmp
jle
fdivs
mov
in
loop
mov
dec
cmp
in
out
out
mov
outsl
pusha
js
enter
fwait
lahf
pop
test
xchg
out
cmc
in
aam
xor
popf
mov
jno
outsl
ret
xchg
lods
push
jae
pop
pusha
add
call
mov
or
xor
idiv
sub
lods
xor
bound
pushf
add
sub
decl
mov
cli
adc
into
lods
ss
out
xchg
aaa
fcmove
push
and
dec
xchg
lcall
call
cmc
mov
add
sbb
push
push
test
dec
push
pop
into
mov
adc
divb
loope
paddusw
aam
cmp
pop
ja
fiadds
xchg
pop
cmp
sbb
mov
shlb
fwait
and
sbb
xchg
lcall
in
addb
arpl
push
fisttps
popf
je
jge
adc
test
sbb
sarb
mov
sub
in
cmp
test
sub
fcomi
sub
mov
ret
fnstcw
daa
jp
scas
shlb
into
push
jecxz
sub
daa
out
or
push
ss
mov
mov
push
repnz
arpl
imul
loop
sbb
cltd
mov
jp
push
int
mov
fcmovnbe
mov
cltd
pop
and
sbb
xor
cmpb
xor
roll
inc
sub
leave
xor
sub
jns
scas
mov
jl
test
imul
negl
imul
aam
movsb
mov
sahf
push
or
xchg
push
mov
push
sub
vpshufd
mov
enter
sub
cltd
test
sahf
and
jmp
jns
mov
xor
jp
mov
fpatan
and
sub
push
inc
add
inc
xchg
cmp
test
cmpsb
loop,pt
cmp
sbb
add
xor
sahf
and
fldl
add
lea
cmp
call
ds
or
ficomps
xchg
shlb
and
xchg
or
scas
mov
outsb
push
jb
and
xchg
shrb
out
movsl
sub
push
or
stos
cmp
mov
lods
cltd
and
lods
in
test
jle,pt
lret
adc
jp
rolb
cld
pusha
scas
and
jp
sbb
cmp
pop
lds
and
inc
sbb
mov
out
cmc
push
rorl
or
inc
add
adc
mov
jae
adc
cwtl
aas
xchg
adc
dec
mov
fcmovnu
jl
aam
and
out
xchg
xchg
in
sub
mov
pop
pop
int3
setno
mov
add
mov
fsqrt
pop
xchg
jecxz
stos
dec
jo
inc
mov
imul
loope
xchg
adc
or
dec
sub
fdivs
cmp
das
gs
fisubl
out
or
aad
fsubl
imul
push
fs
push
lcall
mov
xor
fistl
sbb
in
aam
push
cmp
and
mov
sbb
ret
push
rcr
ja
sub
mov
dec
clc
pop
push
shrl
mov
dec
aaa
jns
lds
add
dec
pop
mov
jg
lods
inc
push
or
or
pop
mov
int
lahf
inc
cmp
xchg
gs
and
xchg
mov
push
sbb
jae
push
fsubrl
mov
sbb
adc
in
scas
loop
pusha
xor
lret
ja
mov
fsubrl
scas
insl
into
in
mov
mov
mov
cmp
pop
stos
dec
push
ljmp
in
pop
xor
jg
rcrl
mov
aad
mov
adc
cmpsl
lcall
lods
loopne
call
aaa
scas
lock
and
nop
xchg
cltd
lods
cmp
dec
les
inc
test
lea
inc
dec
mov
inc
sarl
xlat
xor
adc
aas
sahf
inc
cmp
mov
mov
les
clc
dec
jg
fistpll
aam
xor
es
add
inc
mov
xor
cmp
cmp
add
add
pop
fidivrs
mov
sbb
sahf
ficoms
inc
inc
ss
push
call
orl
pusha
add
lahf
xchg
enter
mov
pop
ds
movsb
loope
cmp
loope
data16
inc
dec
adc
or
sti
inc
addr16
dec
enter
fbstp
mov
push
lock
popf
xchg
icebp
rclb
test
in
add
sahf
mov
jb
aaa
xor
cmpsb
lahf
cmc
push
fsubrl
mov
test
and
pavgb
xchg
scas
sbb
xor
daa
or
adc
enter
sbb
ss
mov
je
adcb
jne
mov
mov
add
mov
sub
out
cltd
dec
or
jl
cmpb
je
pop
loopne
xchg
orb
jl
jl
popa
in
jno
ret
push
cmp
mov
cmpsb
inc
repz
test
js
sbb
push
insl
clc
and
leave
dec
js
out
mov
push
push
lods
imul
push
cld
lea
pop
shr
ja
xor
pop
lret
and
adc
out
rol
inc
in
out
mov
push
hlt
xchg
mov
scas
pop
iret
cld
rclb
mov
sbbb
sarb
idivl
shr
imul
adc
dec
push
testl
out
push
aaa
cmp
ja
fsubrs
scas
push
inc
or
rcrl
arpl
xchg
xchg
ljmp
push
pusha
sub
pop
or
pop
cmovp
jne
mov
inc
aad
stc
dec
push
in
fdivrs
push
imul
or
sbb
pop
adcl
out
push
mov
jg
xchg
adcb
imul
mov
pop
gs
or
pop
imul
jg
out
out
mov
loop
xor
out
dec
ja
lahf
mov
push
mov
cwtl
push
insb
addr16
sbb
push
pop
stos
or
fs
xchg
push
dec
popa
arpl
mov
xchg
sbb
cmp
out
xchg
xor
mov
scas
movsl
sti
and
jge
aam
rcl
add
push
sahf
fwait
loope
shl
fistl
and
dec
or
fsts
repnz
dec
or
jge
out
add
inc
jmp
dec
cmp
jne
jnp
cmp
sub
adc
push
cmp
pop
cmp
cmpsl
inc
sbb
jno
pop
rcll
pop
inc
lds
addb
mov
and
js
mov
ja
mov
fistps
push
in
pop
scas
test
xor
push
lea
cwtl
mov
push
out
sti
or
push
jle
push
insl
addl
inc
push
pop
pop
cmp
shll
les
mov
inc
mov
push
sbb
push
nop
push
push
test
cmp
cmpsb
inc
xor
daa
pop
ret
jo
insl
mov
push
jae
and
test
pop
iret
sbb
test
mov
pop
dec
int3
push
fst
xchg
repnz
sub
dec
cmp
xchg
push
ror
mov
stc
mov
inc
jnp
cld
adc
push
cmp
ret
mov
jp
jb
aaa
mov
loopnew
stos
scas
mov
adc
inc
xchg
sub
lahf
clc
call
xor
les
loop
mov
subl
das
js
clc
nop
cmp
mov
loop
xor
sbb
icebp
sti
lcall
fcomi
data16
stos
repnz
xor
add
jb
popf
push
xor
inc
add
mov
popf
sub
push
xor
xlat
jno
sub
adc
cmp
clc
jl
xlat
pusha
push
sahf
call
adc
xor
ja
or
rolb
push
hlt
pop
and
loopne
mov
xchg
loopne
jg
pusha
out
sub
fdiv
aam
test
loopne
inc
loopne
cmpsl
movsb
lea
pop
clc
cmp
add
lcall
lods
dec
icebp
add
mov
daa
and
inc
or
in
pop
outsl
das
push
adc
neg
cmc
or
inc
sahf
sub
push
cmc
mov
sub
mov
adc
incl
inc
adc
mov
outsb
scas
lcall
and
jg
fdivl
arpl
data16
and
outsl
jp
lret
pop
scas
or
aaa
aas
ret
fisubrs
stos
int3
and
xlat
jno
aad
push
bound
jmp
sub
xchg
inc
in
or
repz
mov
or
sbb
xor
jmp
inc
fldcw
idivl
pop
xchg
sbb
lahf
aas
enter
orl
out
out
pop
loopne
popf
adc
add
fsubrs
jp
mov
inc
repz
sub
in
jb
or
mov
jns
inc
out
cli
pop
fsts
ds
aaa
into
lcall
leave
mov
lret
cmpsb
insb
and
je
hlt
jo
mov
mov
jge
fdivrs
mov
push
nop
or
sti
shl
mov
mul
cmc
std
je
int3
stos
jecxz
test
adc
cmp
aas
scas
sub
push
jge
sub
cmp
in
xor
xor
inc
ret
and
mov
les
xor
shll
lock
std
fdiv
lea
cmp
sub
mov
lock
xor
es
mov
xlat
cmc
add
das
cmp
xor
pop
test
pop
icebp
movsl
int
insl
in
jge
inc
fwait
nop
dec
jae
xor
or
push
jle
lods
dec
push
xchg
loopne
out
mov
test
adc
aam
xorb
imul
imul
mov
enter
pop
sbb
adc
sbb
cld
pop
mov
stos
xor
in
stos
push
ret
mov
or
flds
in
scas
cltd
fbstp
ret
cmp
mov
dec
int3
cmp
popf
mov
dec
cld
mov
xor
lahf
es
and
int
xchg
inc
movsb
inc
popa
ds
into
out
sbb
iret
dec
movsb
imul
add
push
push
shll
movsl
movsb
lret
sahf
insb
xor
push
neg
movsb
sub
lods
mov
push
cli
mov
adc
fs
and
mov
push
loopne
cmp
mov
out
cld
fs
fwait
sub
xchg
aas
add
sbb
mov
adc
add
jle
mov
pop
xor
test
nop
orl
fsts
push
cmpsl
mov
sbb
inc
arpl
push
mov
mov
lret
sub
pop
nop
or
sbb
adc
inc
pop
mov
inc
adc
pop
add
setae
lods
mov
inc
lret
out
jbe
lds
sbb
stos
dec
ljmp
add
sbb
lock
leave
xchg
cli
insb
popa
jecxz
pop
fwait
cmp
xor
or
test
in
mov
pop
lahf
pop
push
cmpsb
xor
fstps
addr16
ljmp
mov
outsl
xchg
push
jo
push
dec
pop
push
loope
decb
imul
jb
js
lret
xchg
add
fnsave
mov
cltd
or
rcl
lods
adc
sbb
dec
shll
jno
push
ja
cmc
rolb
xor
inc
push
dec
scas
fistl
and
dec
xlat
loop
xor
jno,pn
mov
pop
push
cmp
fs
fnsave
sub
pop
hlt
cwtl
xor
jns
push
cmpl
cmpl
push
mov
adc
fnstsw
out
das
xlat
daa
push
aaa
popa
inc
mov
enter
jns
mov
lea
stos
iret
mov
pop
jne
sbb
fimuls
cmp
and
dec
stos
scas
pop
in
pop
fmul
sbb
mov
jno
inc
fbld
mov
add
jmp
iret
or
sbb
push
call
mov
xlat
icebp
out
dec
and
mov
shlb
push
jno
jns
mov
movsl
lret
jmp
lldt
jle
inc
mov
jmp
sub
or
lret
inc
addr16
mov
imul
out
out
pop
scas
cltd
cmpsb
mov
and
test
into
dec
cmp
movsb
sbb
leave
std
and
push
sub
dec
and
pop
and
jno
xchg
sbb
out
dec
adc
je
movsl
andl
add
mov
fsts
sub
and
sahf
and
mov
call
lahf
enter
cltd
push
push
and
jge
dec
imul
xchg
xchg
fstpt
cmp
fldcw
andb
rorl
pop
add
adc
aas
cmp
mov
movsl
subl
dec
xchg
popf
xor
scas
jg
adc
clc
or
xor
out
jnp
mov
sub
cld
jne
push
cmp
je
popf
imul
adc
insl
das
jo
add
sbb
fnsetpm(287
test
popf
mov
mov
add
mov
mov
loope
jnp
or
lret
pop
pop
daa
pop
fmul
pop
or
jns
cmpsb
push
xor
popa
cmpsl
enter
dec
int3
icebp
aas
sub
xor
jne
outsb
cwtl
mov
lods
test
xchg
jecxz
stc
or
add
ja
cmp
mov
pop
push
adc
lods
lea
xchg
xor
xchg
outsl
inc
notl
xlat
and
adc
xorl
add
inc
mov
and
jbe
imul
xchg
mov
pop
mov
and
cmc
cli
mov
stos
aam
xchg
imul
lcall
int3
cmc
dec
and
pop
shl
sub
push
lahf
cmpsl
sub
cmpsb
das
xor
xor
loop
push
jb
enter
mov
push
test
cmpsl
mov
lods
add
movb
mov
mov
cmpsb
ss
es
sbb
mov
sbb
subl
orps
cmp
inc
cmc
imul
rcrl
dec
xchg
lds
sbb
add
ja
or
lods
out
sbb
ret
and
sub
out
or
cltd
leave
inc
adc
or
inc
mov
orl
mov
out
test
pop
xorl
or
popa
sti
cltd
loop
shll
push
add
pop
repz
push
sbb
mov
xor
stos
cmpsl
aam
mov
xchg
cmp
lods
je
and
scas
cmc
aaa
jge
push
mov
mov
or
in
xchg
jae
jmp
cmp
or
mov
mov
cmc
pusha
jns
dec
lret
shlb
stos
inc
pop
leave
stc
subl
enter
sarl
shr
cmp
call
gs
ss
mov
or
iret
pop
popa
push
sbb
cmc
fstpt
ret
push
adc
jp
mov
add
lea
jno
inc
and
mov
xchg
xor
bnd
arpl
mov
outsl
in
stc
dec
in
out
cwtl
clc
lods
xchg
dec
mov
pop
mov
jg
xchg
out
mov
xchg
or
push
insb
xor
ja
rorl
xchg
mov
sbb
mov
lret
jne
sub
out
xchg
rolb
in
in
push
jno
xor
inc
cli
adc
rcrl
jnp
xchg
jmp
mov
sub
out
pop
adc
push
mov
xorb
aaa
mov
lods
out
int3
popa
xchg
or
sub
outsl
or
pop
popf
arpl
in
subl
dec
fstl
pop
sbb
adc
std
sub
ds
lcall
mov
shll
xor
lods
lea
scas
or
loope
adc
jp
mov
shrb
lret
pop
inc
adc
stc
adc
test
mov
mov
lds
aad
xchg
jecxz
cmpsb
push
jmp
jmp
mov
mov
cli
sbb
xor
xchg
pop
sub
adc
fldenv
pop
dec
jns
out
xlat
xor
lea
xchg
and
pop
pop
out
pushf
lods
pushf
icebp
shrl
sbb
stos
addr16
mov
jecxz
gs
ljmp
out
sbb
in
xchg
jo
or
jge
call
sbb
jnp
lret
in
mov
lret
fsubr
sub
sub
cmp
inc
fstpt
icebp
gs
jne
popf
and
inc
pop
clc
testb
cmp
sub
jne
and
loop
les
flds
call
or
adc
dec
xor
xchg
hlt
out
add
lods
movsb
push
movsl
ret
adc
sbb
cmpl
jecxz
sub
mov
push
sbbl
dec
scas
daa
movsl
adc
dec
arpl
adc
loope
cmpb
fs
cmp
loop
sub
rcrb
shl
sbb
mov
aad
inc
cmp
aad
js
jbe
or
jnp
pushf
mov
shrl
push
push
mov
and
cmpsl
repz
xor
add
xor
xchg
jo
rcl
imul
data16
shll
sbb
rcrl
jne
iret
inc
ret
aaa
add
cmp
xor
call
lea
gs
push
or
outsb
push
inc
mov
mull
std
repnz
mov
push
inc
ret
dec
test
push
lcall
into
js
clc
xor
xor
or
in
or
pop
dec
pop
inc
add
push
test
push
rclb
cmp
repz
es
data16
stc
or
bound
addr16
xchg
pop
lods
push
jb
mov
jae
inc
jbe
sbb
inc
insl
dec
xchg
jmp
insw
iret
lcall
add
push
inc
or
dec
pop
mov
aad
cmp
lods
xor
pop
jo
enter
xor
les
mov
mov
fstps
sbb
xor
pop
out
mov
inc
xor
pusha
int
push
pop
out
or
sub
shlb
jg
xchg
and
ja
dec
les
mov
pop
mull
inc
out
xchg
mov
scas
decl
dec
stos
mov
mov
jmp
neg
int3
call
sub
jae
cmc
xchg
sub
dec
cmpsb
jp
es
jb
or
dec
cmc
sub
iret
sub
lods
popf
dec
jge
pop
cld
cmpsb
jno
aaa
out
sub
xor
or
mov
or
jg
rolb
dec
movsl
jle
jno
mov
xchg
pop
adcb
test
mov
pop
inc
fwait
sbb
push
push
sub
mov
into
or
dec
rcr
cmp
sub
push
lds
rorb
movsl
repnz
out
loop
addb
js
lock
std
jae
pop
stos
mov
mov
xor
popa
jg
cmp
push
mov
jge
push
out
sbb
popa
xorb
add
scas
les
cmpsb
insb
sbb
mov
iret
int3
mov
adc
adc
mov
lahf
add
data16
lods
pop
adc
imul
inc
sub
sub
cmp
cmp
stc
testb
jle
xchg
pop
stos
cwtl
nop
iret
pop
dec
mov
mov
scas
pop
xor
push
cmp
sub
gs
jecxz
cmp
cli
adc
dec
cmp
testl
repz
sub
pusha
repnz
push
ffree
jne
rclb
push
fsts
je
add
pop
jnp
or
xor
enter
test
les
inc
dec
mov
and
std
lds
xchg
call
dec
jnp
add
jp
inc
rcrl
adc
push
cmp
in
jle
xor
shrl
ds
jo
out
nop
dec
mov
out
and
jns
pushf
push
mov
sub
imul
cltd
xchg
rcrl
arpl
ret
cmpsl
pop
jnp
mov
mov
wrmsr
mov
stos
xchg
cmp
pop
lret
add
xchg
jge
sti
mov
or
inc
pushf
add
cmp
daa
push
adc
mov
aad
jne
divl
jae
adc
adc
ds
testl
xlat
fs
inc
jo
scas
jo
in
cmp
mov
mov
pushf
fisttpl
or
aad
scas
mov
add
adc
jge
in
mov
adc
out
mov
sub
xchg
stc
jl
push
and
inc
xor
sub
rcrl
xor
pop
int3
jb
daa
test
lret
ret
add
js
sub
cld
jmp
insl
aas
aaa
jno
mov
and
popa
loopne
xor
lock
into
addl
test
adc
and
mov
in
jne
cmp
push
jns
jge
sbb
inc
xlat
fs
xchg
cmpsb
mov
or
fsubrs
enter
sub
cmp
pop
fists
add
xor
cli
cmp
push
mov
loopne
inc
sub
sbb
push
popf
adc
test
adc
dec
mov
lods
add
call
iret
sbb
idivl
pop
mov
lahf
mov
xchg
pop
jns
popf
bound
in
xor
sub
movsl
sub
or
pop
int3
mov
stc
mov
add
int3
in
inc
aam
lock
pop
fdivr
es
sub
into
jne
pop
xor
inc
sbb
stos
xor
stos
push
push
mov
jae
mov
in
stc
cmc
cmp
jp
cmp
out
mov
aaa
jle
adc
mov
negl
int
dec
dec
rorb
lods
lret
aam
cmpsb
mov
mov
das
push
xor
pop
call
out
pop
fsts
mov
dec
mov
pop
popa
clc
xor
and
cmp
push
xchg
cmpsb
cmp
enter
inc
mov
dec
jae
push
adc
notl
adc
mov
sarb
pop
std
js
leave
imulb
rcr
addr16
jnp
push
movsl
mov
adc
fcomip
lods
pushf
adc
push
jge
mov
add
push
roll
pop
ja
pop
jle
sarl
aam
or
cmp
lods
mov
pop
mov
lret
and
repnz
into
lock
vpshlb
xor
xor
add
mov
jnp
jns
in
mov
leave
xchg
pop
std
adc
dec
jp
aam
and
jmp
cli
dec
popa
insb
and
dec
fcmovnu
repz
lds
xchg
add
js
imul
jle
fstpl
xor
subb
mov
mov
sub
ja
push
faddl
imul
dec
xchg
fs
add
jb
in
test
loopne
test
sub
test
ret
push
jecxz
js
nop
es
lods
roll
dec
sbb
jl
mov
push
adc
xor
adc
sub
jo
testb
lods
xchg
loope
sbb
outsb
xlat
xlat
lret
mov
popf
xchg
inc
mov
shr
and
mov
and
ret
cwtl
cmc
popa
cmp
and
stc
insb
insb
add
jecxz
pop
enter
jbe
int3
add
pop
xchg
aaa
lods
or
jmp
fcoms
pop
adc
sub
je
jb
push
and
sub
push
lods
popf
pop
mov
sbb
roll
sbb
dec
mov
mov
mov
rcrb
sub
insb
loop
fptan
dec
js
inc
lret
mov
test
dec
jge
or
hlt
cmp
or
pop
roll
shrl
jp
lods
push
sub
daa
ss
mov
xorb
mov
ret
push
add
stc
das
fucomi
fistl
clc
jae
jno
pop
aaa
leave
push
cs
iret
insl
clc
ss
fsub
inc
cmp
and
hlt
xchg
mov
xchg
lret
mov
xor
bound
dec
mov
mov
xchg
add
add
arpl
aas
mov
out
pop
inc
jae
xor
xchg
lcall
mov
orl
or
and
add
or
sysret
pop
ret
rcll
push
test
cmp
rol
push
gs
cmp
sub
je
adc
ljmp
add
and
jmp
sub
jg
orb
cmp
insl
mov
repz
pop
mov
mov
rcl
pop
lea
add
in
cmp
dec
lahf
sbb
add
add
aaa
cmc
xor
out
in
sbb
maskmovq
divl
mov
fs
shl
jg
jbe
ljmp
xor
je
or
imul
loope
outsb
lea
and
mov
les
enter
xor
push
shrb
dec
je
or
cmpsb
fmull
and
sub
inc
or
cmp
push
jae
aas
adc
in
jecxz
dec
mov
xorb
lds
mov
jg
fwait
repnz
mov
add
mov
test
outsl
ja
pop
in
xchg
cmpsb
in
mov
sbb
cmp
mov
out
inc
mov
cmp
pop
pop
ret
inc
ljmp
js
sbb
jp
ds
xchg
dec
std
lahf
stos
sbb
xchg
cltd
pop
shl
push
insl
nop
jnp
cmpl
rcr
mov
shl
out
sahf
stc
adcb
mov
pop
mov
dec
pop
call
lods
cmc
iret
data16
addl
push
and
mov
aam
lcall
add
jl
jl
jmp
fcompl
pop
lahf
dec
push
cmp
dec
jecxz
mov
xor
subl
inc
scas
or
rcrb
insl
push
mov
jge
xchg
push
daa
jbe
push
movsb
je
in
push
test
sbb
js
dec
imul
test
push
ja
mov
cmp
jo
ret
fucomp
jbe
insl
packsswb
lret
lret
xchg
and
imul
nop
fptan
loope
push
scas
scas
push
xor
jno
sbb
popf
dec
inc
pop
dec
inc
ret
lret
cmp
jg
mov
dec
sbb
xor
push
dec
sub
sbb
daa
test
es
outsl
sbb
sub
pusha
iret
cmp
shl
leave
push
out
and
movsl
pusha
out
mov
int3
cmp
xlat
pop
aas
fsubrl
imul
icebp
je
iret
pushl
push
adc
mov
rclb
push
cmpsl
xchg
mov
sub
out
push
jmp
enter
inc
mov
inc
jae
cld
arpl
pop
gs
imul
xchg
adc
ja
out
pushf
imul
mov
pushf
je
lea
cmp
xchg
sbb
enter
mov
mov
testb
sub
lods
xchg
fnstcw
sahf
in
outsb
test
sub
xchg
dec
xor
rolb
cmp
sti
jecxz
inc
mov
push
and
psrlw
add
subl
cmpsl
out
jg
xchg
stc
xchg
js
cmp
dec
ja
push
dec
sbb
push
xor
popf
xchg
adc
or
adc
inc
test
pop
fisttpl
fimuls
add
adc
pop
fcomps
bound
mov
scas
dec
in
xabort
push
clc
popf
mov
aas
ret
out
fwait
sub
push
xor
pop
pop
xor
fnsave
cmpsl
mov
push
mov
cmp
mov
add
mov
imul
cmp
add
push
cmc
insw
and
xchg
mov
es
and
sbb
decl
out
push
fchs
xchg
or
mov
cld
loop
imul
addl
mov
call
mov
fdivp
bound
inc
inc
stos
call
sbb
mov
cld
not
sub
sub
mov
cmp
sti
push
aas
inc
dec
or
pop
ja
les
fildll
fwait
insb
xchg
imul
mov
pop
es
sbb
jp
mov
in
lds
lcall
fbld
pop
stc
add
fs
lcall
cmpsl
jo
std
stc
xor
xor
int3
daa
dec
sbb
fbstp
sarb
movsl
loope
adc
pop
cs
xor
mov
and
popf
loope
shl
enter
sbb
scas
repz
pop
aas
fdivr
mov
mov
sbb
pop
ficoml
shll
jns
in
jae
jno
sbb
outsb
pop
pop
xchg
sub
sub
sub
stos
in
xchg
mov
insb
or
pop
pop
push
pop
xor
mov
lods
xor
popf
inc
sub
sub
aaa
arpl
rcll
leave
xor
scas
pop
test
fs
xchg
shll
inc
pop
fmuls
jb
fcompl
inc
sahf
clc
nop
xor
icebp
hlt
sub
aad
dec
pop
data16
fcompl
sbb
sarb
jae
push
aad
jmp
add
add
fsubs
in
inc
int3
and
imul
pop
nop
lcall
lods
jo
clc
mov
int3
pushf
xor
xchg
mov
scas
lea
inc
adc
insb
push
push
mov
add
jns
cmp
sub
or
cmp
xchg
and
inc
pop
jbe
into
cld
mov
in
out
push
sub
jmp
xchg
mov
dec
sbb
in
add
bound
rcll
xchg
sbb
decl
inc
inc
mov
int
and
inc
pop
arpl
xor
int3
push
popa
sbb
ficoml
call
cmc
insl
pop
out
jne
push
fldl
ds
cmp
test
lret
mov
fwait
insb
and
cli
sub
cmp
mov
mov
jmp
cli
fnstcw
sbb
mov
in
sub
mov
sahf
sbb
cld
sbb
cmpsl
mov
add
lods
mov
inc
sarb
sub
pop
jnp
test
push
lahf
push
jecxz
xor
pop
loopne
arpl
movsb
and
sub
mov
ret
fisttpl
or
rol
inc
test
pop
insb
cmp
out
xchg
lods
in
ja
popf
or
mov
divb
orl
pop
insb
sar
mov
lcall
rcrl
jecxz
sbbb
stos
test
cmpsl
out
and
enterw
add
inc
sub
push
and
inc
das
mov
sbb
popa
clc
sub
dec
pop
xor
lret
xor
or
pop
out
add
icebp
mov
rep
jae
aas
stos
pop
mov
xchg
lret
ja
xor
mov
sub
mov
insl
mov
test
xlat
pop
lods
lods
gs
mov
mov
mov
in
cmp
aad
rcrl
inc
lret
clc
or
mov
fdivrs
sub
push
hlt
dec
jmp
xchg
sub
in
cmp
sti
nop
pop
ret
lods
adc
hlt
mov
cld
js
cmp
sbb
lds
cmp
add
mov
mov
test
push
shlb
cmpsl
ljmp
mov
fwait
adc
cld
or
mov
call
dec
movsl
mov
data16
imul
loope
mov
xchg
sbbb
test
mov
aad
sti
pop
add
mov
xchg
mov
sbb
mov
adc
lret
popl
mov
sub
in
pop
inc
fwait
les
lahf
push
leave
inc
lock
mov
pop
push
xchg
arpl
sub
dec
scas
jbe
xorb
lret
subl
ja
adc
jnp
and
mov
out
mov
push
jb
or
jnp
xchg
imul
mov
push
sti
popa
pop
outsl
mov
jmp
daa
loope
jne
xor
add
jnp
push
out
xchg
aam
fcmovbe
scas
inc
lock
or
push
subl
mov
sub
xchg
push
push
xor
xor
stos
mov
mov
inc
outsb
mov
xlat
sub
hlt
xchg
mov
dec
and
testb
ret
adc
xor
mov
dec
cltd
push
out
mov
gs
mov
daa
and
xor
loop
sub
jno,pt
cmp
ss
xor
jno
lods
scas
ljmp
bnd
xchg
xorl
mov
inc
dec
das
cmc
clc
scas
fldl
mov
stc
repz
clc
xor
bnd
jb
jae
shll
mov
xor
sub
pop
mov
adc
pop
insl
fistpl
xchg
sub
mov
and
dec
lea
mov
mov
sbb
sub
push
or
pop
cmc
and
arpl
insb
mov
jge
jo
lods
test
xor
xorl
or
outsb
cld
cli
dec
fnstsw
js
or
ja
mov
sub
aad
dec
cmp
sbb
mov
popa
sbb
push
sub
test
mov
mov
ss
enter
mov
and
inc
cmp
or
xor
sti
jmp
push
hlt
int
and
inc
mov
dec
sub
lret
mov
jns
mov
inc
cmpsl
and
mov
fwait
mov
cmp
sbb
inc
xchg
sarl
xchg
popf
pop
xor
cwtl
es
clc
push
pusha
ret
cmp
dec
inc
push
dec
adc
inc
and
pop
hlt
out
jns
ljmp
add
cmp
loopne
aam
and
inc
es
scas
addr16
filds
mov
jo
scas
sbb
outsb
sub
inc
sub
out
jp
or
lret
cmp
mov
push
fbld
sbb
sti
cmc
push
jge
cmc
xchg
inc
test
jne
repz
ficompl
push
aas
mov
sub
cld
dec
jmp
inc
nop
into
out
incl
mov
jg
insb
scas
inc
jnp
inc
fstpl
cmpsb
lods
and
sti
cmp
in
jae
je
adc
fs
cld
xchg
jecxz
mov
sub
adc
cltd
sahf
sbb
popa
mov
js
lcall
jne
xor
add
xor
jle
mov
and
xchg
pop
cmp
mov
mov
mov
addr16
inc
mov
jmp
sub
jp
incl
and
out
inc
das
xchg
xchg
xor
sti
add
adc
test
mov
sbb
mov
jnp
pop
dec
dec
sub
and
movsl
cltd
test
enter
enter
icebp
in
scas
push
dec
lods
in
adc
push
xchg
sbbb
dec
lods
mov
movsl
int
mov
and
mov
or
push
cmp
sar
data16
lock
mov
mov
mov
inc
and
fsubs
xchg
xchg
push
xchg
rolb
inc
ja
jns
test
out
mov
inc
push
ds
aas
test
add
or
jae
sub
adc
adcl
enter
mov
xor
scas
push
dec
jecxz
pop
or
les
shlb
js
sti
enter
add
cli
pop
dec
or
fstps
divl
jbe
pop
test
xor
movsb
test
scas
stos
jp
push
lret
cld
or
out
stc
in
fcmovne
add
jo
aam
jg
test
sbb
ja
out
notb
cmp
test
leave
aam
mov
push
sarb
cwtl
add
in
pushf
mov
sarb
in
mov
jle
imul
jne
adc
mov
xchg
jle
cmp
dec
lds
cmp
dec
xchg
dec
fistl
cmp
mov
and
out
mov
insl
rolb
in
out
add
jo
add
mov
das
cmc
sti
pop
clc
xchg
cmp
leave
sub
js
xchg
push
jae
les
test
mov
das
cmp
add
sbb
addr16
cmp
test
sub
and
enter
bound
outsl
stos
addr16
xor
inc
inc
scas
push
mov
dec
adc
ja
xchg
jbe
cld
stc
repz
sti
xor
mov
popf
pop
nop
sub
ja
push
dec
mov
jmp
mov
ljmp
xchg
sub
sarl
shrb
leave
lret
and
sub
pop
or
mov
sbb
sbb
aaa
jecxz
lock
add
mov
int
push
ja
testb
jge
adc
sub
pop
cmp
sub
jb
push
aam
xor
inc
ss
add
fsubl
add
mov
push
popf
lahf
scas
mov
mov
pop
sti
push
mov
cmp
jns
in
mov
enter
xor
jo
add
push
push
inc
xchg
out
adcb
jge
xchg
dec
hlt
cmp
arpl
enter
sbb
push
push
mov
mov
daa
or
arpl
out
cmp
jno
shll
jl
add
cmp
jo
mov
orb
cmp
push
pop
movsl
pop
xchg
sbb
cltd
movsb
dec
ja
into
or
inc
mov
scas
dec
test
inc
sbb
lds
sbbb
xchg
pop
cmp
pop
pop
ljmp
push
add
lods
inc
lahf
mov
jb
xor
sbb
stos
cmc
pop
lcall
xor
pushf
movsl
jp
pop
loop
and
outsb
sub
std
mov
loope
mov
fwait
gs
pop
cmp
cli
and
leave
lock
popf
jns
jns
out
dec
mov
lcall
sbb
js
addb
ret
aas
sub
xor
rorb
xor
das
aas
jp
cmpsb
sub
pop
out
add
xor
ret
fsubs
xlat
adc
xor
gs
insb
push
or
setle
pop
out
rcl
and
add
mov
or
imul
cmc
dec
pusha
scas
nop
mov
add
and
add
mov
fwait
ret
test
int
cmp
pop
sub
add
rcrl
iret
dec
fsubrl
jno
popa
pop
sbb
and
andb
mov
jne
jg
or
cmp
cli
sub
clc
mov
xor
dec
scas
in
sbb
cmpsb
push
cmp
test
cmpl
outsb
jp
sub
pop
fiaddl
fbstp
cltd
adcb
test
xor
test
xchg
int
or
call
xor
decb
or
adc
mov
xor
pop
xchg
ds
stos
fisttpll
mov
dec
xor
inc
shrl
dec
test
aaa
xchg
addr16
lods
cltd
cmp
outsl
movsl
mov
jnp
xchg
adc
add
shrb
dec
adcb
in
jne
mov
xchg
movlps
xchg
int3
mov
test
insb
mov
cmp
push
int
je
pop
xchg
shll
pop
out
std
scas
rcll
mov
movsl
jg
cltd
xor
mov
mov
test
jno
xor
popf
and
cld
xor
jne
fdivr
cmp
xchg
insl
dec
cs
dec
push
lds
mov
jo
xchg
adc
lea
xchg
push
dec
fidivrl
mov
adc
bound
sbb
aas
cmpsl
aam
in
push
cmp
subl
in
aaa
xchg
cld
lcall
movsl
das
repz
dec
jl
insl
shrl
fucom
mov
sub
fnstcw
pop
mov
mov
aam
cli
mov
test
dec
shl
shrb
and
sahf
dec
lods
inc
and
mov
push
je
jle
cmp
sub
inc
sbb
fidivrl
mov
sahf
push
fstpl
sub
jo
pop
jge
ret
jge
dec
inc
repz
in
sbb
xor
sub
iret
cmp
in
mov
fwait
js
jmp
xchg
add
cmp
enter
jge
pusha
sar
mov
icebp
sbb
jne
adcl
int3
sub
out
sub
cld
mov
mov
js
sahf
out
push
pushf
mov
cltd
mov
sub
add
iret
icebp
xchg
loop
push
xchg
sbb
es
iret
insl
push
std
mov
inc
adc
xor
xchg
in
lret
inc
popf
insb
xchg
mov
mov
jns
movsl
sub
or
mov
mov
outsl
fcoml
out
jle
xor
sbb
loopne
xchg
xchg
jnp
pop
pushf
fs
dec
addr16
adc
jge
movsl
lods
in
out
in
inc
jmp
push
jle
daa
call
sbbb
jecxz
xchg
enter
fsubrl
lcall
mov
mov
add
pop
mov
pop
lcall
in
push
test
lds
push
dec
rcrb
jae
aaa
push
iret
or
xchg
psubw
push
and
cwtl
xchg
cmp
hlt
hlt
xchg
addr16
lea
lods
fs
cmc
icebp
call
xorl
sahf
jne
mov
jae
std
adc
popa
xor
movsb
outsl
cmpl
push
sub
and
or
shrb
inc
jnp
arpl
nop
sti
imul
fstps
pop
mov
psubd
mov
test
fdivl
stos
mov
mov
jl
xchg
inc
scas
enter
fcoms
xchg
iret
out
lods
sbb
and
sbb
adc
xor
add
xor
jge
xor
or
addb
cmp
out
push
jno
xchg
lahf
jne
cs
cltd
jbe
in
sbb
pop
jns
outsb
add
cld
leave
stos
ret
sar
adc
ljmpw
pusha
pop
lock
mov
mov
or
sub
das
mov
adc
pop
push
xchg
pop
push
out
add
lock
inc
push
jae
insl
xor
mov
xchg
and
call
mov
addr16
and
in
adc
clc
pop
xchg
pop
rcrl
dec
fidivl
leave
out
sub
mov
js
xlat
subl
fucomip
mov
or
out
sti
out
stc
scas
adc
jp
or
pop
jbe
lds
test
jmp
mov
inc
sbb
adc
add
add
shl
into
xlat
sbb
imul
pop
lea
out
cli
sbb
mov
inc
push
out
pop
mov
jmp
stc
sub
adc
or
test
jecxz
xor
xor
push
js
xchg
sbb
mov
imulb
frstor
hlt
bound
sti
inc
cmc
insb
mov
xor
sbb
lods
or
addl
jge
movsb
shrl
push
addr16
inc
repz
enter
dec
test
insl
loopne
jo
arpl
mov
sub
fwait
lods
call
push
mov
add
movsl
popf
cmpsl
std
xor
xchg
cltd
int
jb,pt
xchg
and
in
sub
jmp
subl
pop
aam
test
scas
jl
mov
cmc
adcl
bound
add
mov
or
pusha
mov
sarl
sub
sbb
cmc
stos
test
xor
pop
fucomi
mov
or
and
roll
xor
jmp
mov
inc
cwtl
pop
daa
cld
jp
cmpsl
cmp
sub
push
push
cltd
rcl
xchg
mov
cld
bound
cltd
jle
sahf
sbbl
sbb
outsl
and
or
faddp
xor
lea
jecxz
push
xor
dec
cli
movsl
push
divb
sti
ret
in
lock
mov
cmpl
ja
push
adc
popa
lods
xor
sbb
cli
dec
push
sbb
ret
leave
add
adcb
rol
loop
sub
out
enter
jns
inc
adc
sahf
nop
test
xchg
mov
fcmove
pop
or
mov
jge
loope
shl
shlb
shll
daa
mov
xor
mov
arpl
xchg
jle
insl
jbe
xor
add
pop
xchg
jae
scas
lret
fucomip
movsb
es
xor
sti
fcmove
dec
pop
icebp
jne
ja
xor
mov
adc
aaa
or
sti
mov
pop
popf
jbe
xor
ret
mov
sbb
push
pop
pop
jecxz
ja
add
mov
xor
dec
fbld
pop
xchg
xor
faddp
jle
xchg
andnps
jae
popf
jmp
and
push
shlb
movsl
push
repz
in
and
cmpl
inc
notb
mov
add
adc
das
enter
jl
inc
das
stos
jge
out
in
sbb
push
imul
jge
shll
in
pop
sub
jg
loope
shll
pop
iret
dec
stos
jp
outsl
bound
fisubrs
std
xchg
iret
leave
jl
hlt
add
pushf
push
sub
jno
push
pop
int
cmp
mov
xchg
cmp
mov
scas
es
lds
movsb
daa
popf
jl
push
fs
insb
mov
das
lret
test
js
jl
adc
mov
fdivr
gs
push
ljmp
test
jo
mov
xchg
xchg
sub
xchg
jno
outsl
xor
dec
mov
jo
popa
fstl
jecxz
cmc
fiadds
scas
in
lock
or
mov
out
xorl
and
jne
mov
test
sti
cmpb
pop
jnp
sti
mov
jmp
leave
test
mov
and
clc
inc
inc
fimull
push
and
or
leave
push
jbe
lods
leave
xor
filds
sub
shrb
je
dec
adc
das
stos
add
aas
jmp
int3
or
outsb
pop
jnp
jo
mov
fnstsw
fidivrl
addl
testb
sbb
inc
push
cmp
inc
test
shlb
xchg
jg
cmpsb
decb
mov
nop
hlt
insb
push
arpl
lods
mov
in
jns
mov
mov
insb
xchg
mov
aam
push
inc
shll
mov
loope
aad
fsts
sub
fldcw
fdivrl
and
jns
xchg
sbb
imul
push
rcll
dec
pop
jb
push
cmp
push
mov
out
loopne
dec
inc
mov
repnz
in
mov
shlb
hlt
and
andb
xor
add
and
xchg
xchg
cltd
imul
cmp
shl
xchg
xchg
arpl
lds
dec
mov
sub
inc
out
pop
imul
jmp
mov
std
inc
insb
cs
test
jne
popa
sub
je
mov
out
adc
testl
sarb
das
xor
cmp
cmpsb
sub
mov
test
jle
pop
shlb
jg
fisubl
pop
lds
sbb
jl
xchg
jb
mov
xor
xchg
ja
sti
jge
pushf
and
test
fbstp
xor
push
push
or
inc
jb
or
enter
sbb
les
addr16
lods
xchg
pop
fsubl
inc
aam
cmp
call
mov
daa
pop
push
std
sbb
fdiv
pop
stos
xchg
mov
test
dec
adc
imul
fwait
popa
mov
mov
sbbl
push
fadds
popa
push
jb,pn
pop
addr16
fldl
pop
push
in
decb
push
mov
xor
dec
mov
out
dec
mov
and
movsb
cltd
push
sbb
dec
or
rcl
add
push
mov
cmp
fcomps
mov
and
dec
jae
jns
movsw
aam
dec
out
iret
xor
xchg
push
jne
outsb
add
outsb
xchg
leave
addb
pop
inc
mov
hlt
in
out
fs
je
cmp
lcall
movsl
push
adc
daa
jne
popf
push
mov
sub
sbb
inc
lret
pop
xor
mov
inc
push
divl
sub
shlb
not
das
and
xchg
cs
mov
test
fstpt
mull
cli
add
movsb
fimuls
dec
clc
dec
jg
loope
stos
gs
cwtl
xor
pop
ja
jmp
adc
divb
jl
cmp
into
addr16
daa
mov
pop
in
scas
cwtl
or
in
addr16
popa
inc
shrb
sub
sbb
jle
insb
xor
jmp
in
imul
aam
out
dec
pusha
or
andl
push
adc
cmpsl
test
pop
into
mov
xor
sbb
push
sti
sub
ljmp
call
xor
in
cmpl
dec
in
sub
xchg
cmp
add
scas
in
int
jb
stos
xlat
push
jle
fldt
inc
mov
ret
shlb
dec
pop
pop
push
fldt
adc
or
std
into
ficomps
sbb
stos
jg
ja
xchg
test
ret
or
xlat
jne
sub
andl
gs
lock
aas
test
mov
test
xchg
xorb
js
iret
fcoml
mov
repz
cmp
mov
or
push
xchg
je
mov
add
push
xchg
int
fwait
mov
iret
dec
pslld
and
inc
popa
test
mov
xchg
movsb
adc
sub
mov
adc
and
shll
jecxz
lds
push
lret
jbe
in
dec
adc
je
movsb
and
fbstp
insl
mov
dec
and
test
and
push
bound
out
sahf
int3
scas
inc
addr16
ffreep
xchg
fcoms
test
addr16
and
mov
or
push
cmp
push
arpl
cs
dec
out
push
jg
pop
icebp
cmc
mov
and
mov
cltd
das
mov
out
push
lea
fiadds
add
in
insl
and
ds
sbb
mov
jno
push
sub
push
cmpsb
sahf
push
popa
pusha
loope
adc
in
push
lret
sbb
lcall
inc
add
sub
bound
bound
or
xor
addr16
xor
pop
test
add
sub
fcomps
add
mov
mov
rcrb
stc
sbb
inc
jmp
lock
ds
mov
repnz
pop
test
in
adc
xor
mov
lock
xor
sub
mov
sub
lcall
dec
mov
stc
mov
push
push
pop
insb
loop
in
adc
popf
fld
add
sbb
fwait
int3
sub
addr16
bound
in
dec
outsl
mov
repz
jb
sub
mov
push
jmp
sub
sbb
insb
nop
loopne
push
jns
sub
popa
sub
movsb
adc
scas
test
mov
push
hlt
enter
sub
push
and
inc
dec
xchg
cmp
iret
and
test
loope
ret
shlb
stos
jg
sub
les
fld
cwtl
lret
mov
push
mov
add
add
scas
rcr
mov
iret
and
mov
inc
scas
aad
fstl
jmp
hlt
cmp
pop
outsl
fadds
mov
mov
pop
mov
mov
jne
add
inc
lods
mov
dec
sub
adc
lock
dec
mov
sbb
test
jo
das
and
loope
je
popf
aad
mov
sbb
pop
lcall
fcompl
aas
dec
xchg
fsubrp
mov
sbb
lock
cmpsl
andb
enter
scas
mov
shrb
jns
sbb
adc
push
jb
cmp
call
inc
pop
push
pushf
jns
aas
inc
lea
xchg
daa
jmp
repnz
shlb
cltd
cltd
mov
movsb
and
ret
outsl
lret
push
and
pop
les
xchg
sub
cmpsl
clts
push
and
dec
out
and
sahf
mov
ljmp
jnp
out
pop
sbb
ljmp
sbb
shlb
jp
jbe
adc
lahf
pop
or
sub
push
ljmp
and
dec
push
jo
mov
cmpsl
das
sub
testb
das
xcrypt-ofb
cmpsl
out
icebp
sub
in
ja
lods
xchg
sub
mov
jecxz
decb
arpl
ja
and
inc
sbb
sahf
pushf
outsl
jge
lcall
imul
mov
icebp
pushf
mov
mov
push
mov
sub
jo
insl
cmp
sbb
out
lock
fistl
adc
popa
and
sbb
scas
jbe
push
pop
aaa
loopne
sti
imul
iret
pushf
pop
jecxz
dec
and
lds
inc
and
ds
fdivrl
sbb
xchg
decl
stos
orl
or
dec
in
xchg
mov
imul
shl
xor
fdivs
in
dec
shl
or
into
lcall
mov
gs
mov
cmp
cltd
cmp
xor
sarb
push
cmc
aaa
sbb
int
lds
shl
je
outsb
test
push
mull
add
gs
pop
mov
movsb
sub
add
iret
dec
and
jnp
xchg
xchg
nop
out
jg
xchg
mov
loop
repnz
sub
in
fildl
movsb
adc
xor
lods
and
mov
test
bound
sub
negb
xchg
jle
push
jns
fimull
scas
xor
sbb
scas
dec
clc
lahf
push
sub
inc
in
or
mov
mov
jg
out
je
loope
sbb
lahf
nop
pop
sub
psadbw
nop
pop
sbb
pop
jnp
xlat
inc
sbb
std
pushf
mov
adc
xor
lret
fmuls
mov
xor
inc
fnstenv
jg
lret
test
inc
xchg
sbb
inc
xchg
test
movsb
mov
add
shr
pop
push
loop
or
insl
push
into
inc
mov
dec
or
adc
mov
sub
in
into
xchg
push
pop
ret
sbb
mov
xchg
sub
or
jecxz
cwtl
dec
pushf
mov
xchg
in
pop
out
inc
lret
lea
ss
lcall
aad
xor
xchg
or
insl
adc
mov
jno
cmp
in
push
scas
int3
push
and
testb
pop
mov
loop
adc
jbe
mov
in
je
loopne
sar
mov
push
or
stos
int
mov
idivl
and
xor
into
cmpl
enter
ret
imul
cmp
sub
nop
adc
das
out
push
lods
jecxz
jnp
add
cli
and
test
clc
pushf
fidivrs
or
push
dec
dec
shll
arpl
repz
inc
movsb
adc
jecxz
gs
jae
es
dec
icebp
push
lods
mov
or
cmovo
push
nop
xor
xor
loopne
ja
lds
adc
inc
sbb
push
fs
repz
aas
fs
xor
mov
in
leave
cmpsb
cmp
es
push
sub
lods
sub
push
xor
insb
jne
push
sti
push
mov
mov
fisubrl
mov
push
dec
inc
add
push
sbb
push
or
pop
adc
hlt
popl
in
xchg
sub
jg
fistpll
outsb
push
pop
lods
test
mov
mov
sub
fsubrs
sar
inc
cmc
ret
mov
push
push
add
lods
icebp
adc
dec
xor
push
or
sbb
dec
xchg
pop
mov
repz
pushf
jmp
outsb
loop
fnstenv
inc
js
jb
pushf
adc
ret
loope
sub
aad
movsl
dec
sbb
lcall
addr16
out
dec
sbb
jp
push
sbb
xor
xchg
jae
pop
xchg
lret
push
hlt
loop
scas
inc
push
fdivl
add
daa
mov
fcmovne
xchg
in
adc
and
lea
dec
mov
popf
mov
in
mov
fdivs
adc
es
mov
push
jae
or
std
insb
aas
icebp
xor
push
inc
jb
lcall
and
inc
xor
jmp
hlt
dec
dec
xlat
inc
add
dec
shll
repz
jb
movsb
imul
mov
jae
adc
adcl
jnp
out
push
fs
sub
loop
out
and
and
inc
dec
jecxz
pop
iret
aas
cltd
push
push
push
or
lahf
jb
jnp
push
xor
pop
xchg
scas
push
cwtl
dec
cmpsl
in
out
in
jae
xchg
and
scas
fs
push
stos
dec
rolb
insl
movsl
scas
scas
and
add
imul
out
movsl
stos
sbb
insb
das
sbb
pop
mov
addb
shlb
sbb
mov
jg
stos
inc
xor
mov
mov
dec
outsb
jbe
addr16
ror
fldt
cmp
mov
cmp
mov
jp
insl
jbe
outsb
fcompp
pop
inc
in
mov
std
dec
iret
push
jmp
dec
in
imul
push
call
dec
xchg
cltd
add
out
lcall
jl
adc
fcomi
and
ljmp
push
push
push
xchg
mov
mov
jae
je
lret
dec
sbb
and
push
and
mov
mov
stos
test
lret
pop
or
sti
adc
out
movsl
ljmp
add
add
hlt
jns
idivl
add
bound
mov
add
das
js
fldl
cwtl
jp
push
sbb
sub
in
pop
aam
dec
mov
sub
push
in
fmull
dec
lret
scas
fstl
mov
mov
mov
in
inc
call
adc
or
les
insl
mov
ljmp
ljmp
dec
test
in
jecxz
mov
push
or
lret
mov
gs
js
mov
xchg
fwait
movsl
in
outsl
outsw
xor
or
xlat
cs
cltd
in
pop
int
cmp
jmp
int
adc
sbb
mov
cmp
shrb
pop
andb
add
jmp
dec
jmp
lret
mov
xor
pop
aam
cmp
dec
mov
stc
xor
or
pusha
and
cmp
mov
sti
adc
mov
pop
mov
movsb
jbe
mov
dec
xorl
test
imul
pop
cwtl
mov
movsb
int3
aas
fwait
push
pop
std
jno
inc
mov
jnp
insb
fstpl
push
push
lods
mov
mov
mov
mov
or
mov
outsb
sahf
adc
mov
xor
shr
daa
xchg
scas
and
loope
mov
push
mov
dec
or
or
push
aam
inc
test
loop
int3
icebp
or
repz
adc
add
fwait
inc
add
mov
mov
loope
sbb
push
outsb
hlt
dec
jo
cmp
stos
mov
jno
pop
es
cmp
inc
mov
inc
scas
inc
dec
xchg
ljmp
mov
xchg
jmp
js
and
repz
xor
insl
inc
mov
mov
daa
test
fnsave
add
iret
fld
cs
sub
mov
or
shr
xlat
jge
dec
push
test
push
cmp
aas
pop
mov
add
adc
in
shr
fcmovnb
jbe
adc
or
int
out
dec
xchg
ret
sbb
test
cmp
ficoms
bsf
sbb
shll
ds
lods
xor
cmp
nop
test
add
movsb
fisubs
sti
jle
dec
outsb
mov
xchg
loop
rcrb
ret
addb
test
movsb
sti
push
pop
dec
imul
mov
cmp
or
mov
in
dec
leave
rcr
inc
fwait
movsl
pop
subb
shll
cmp
hlt
or
cmp
jmp
pop
shll
mov
mov
enter
pop
mov
pushl
jge
scas
and
popf
push
sahf
int3
lock
lods
inc
pop
mov
sub
enter
clc
cmc
in
cmpsb
inc
stos
stos
insl
add
xchg
push
shlb
push
jno
pop
cmp
dec
out
inc
mov
xlat
lock
jns
push
divb
mov
test
ja
gs
dec
out
fcmovnbe
jno
fildl
in
cltd
pop
pop
sub
enter
or
xor
jno
in
pop
aas
sub
divb
push
hlt
jae,pn
fbstp
mov
rcrl
into
movsl
sbb
lock
xchg
pop
nop
cmp
mov
pop
gs
cs
push
cmpsl
jne
nop
and
inc
test
sarb
push
add
xchg
loope
cmp
cmp
mov
sub
jne
cld
out
xor
sbb
fisubs
fisttps
lods
ds
movsl
sbbb
inc
xchg
and
lea
movsl
mov
jle
fsub
push
data16
cwtl
push
pop
dec
jecxz
stos
sbb
inc
clc
xchg
adc
fs
loop
mov
mov
orl
sbb
jl
sub
outsl
negb
jns
cs
mov
mov
xor
imul
sub
enter
sbb
inc
fnstenv
cltd
gs
cs
or
sbb
das
test
push
test
pop
xchg
jb
sbb
into
dec
push
mov
loope
dec
lds
insb
and
cwtl
xchg
xor
fs
xor
ror
cmp
enter
test
and
nop
cmpsb
jbe
iret
sbb
mov
jne
pushf
lcall
ljmp
int3
fcmovu
outsl
sbb
mov
inc
ljmp
andb
fdivrs
adc
xchg
or
or
push
jge
push
popf
xchg
sub
dec
jno
inc
add
mov
dec
pop
sub
bound
mov
lret
mov
lret
xor
mov
neg
sub
out
jbe
lods
incb
jb
test
push
mov
into
test
cmc
insb
in
push
lahf
pushf
fmul
test
fldcw
jno
leave
mov
stc
iret
fisttpll
cmc
inc
mov
push
loop
pop
mov
fldcw
stc
pop
cltd
mov
movsl
jg
jnp
sub
addr16
pop
mov
add
mov
imul
fmul
dec
add
add
and
mov
clc
push
add
sahf
in
sub
test
out
daa
dec
pop
push
add
pop
sbb
aaa
or
test
pushf
incb
adc
fmull
xorb
dec
pop
xchg
or
sbbb
mov
fiadds
bound
xchg
xor
cld
xor
inc
sub
xchg
pop
adc
sub
or
cmpl
call
out
or
nop
pop
and
loopne
gs
jg,pt
leave
ss
insl
fiadds
scas
xchg
lret
or
lds
mov
and
imul
add
ljmp
inc
jns
jae
cmp
inc
lret
pop
sahf
pop
push
xor
jno
pop
iret
movsl
push
lcall
or
pop
pop
cmp
fcomip
mov
lods
adc
scas
fistpll
outsl
cmpsb
stos
lret
insb
icebp
mov
cmp
pop
imul
fpatan
lock
xchg
push
jp
jo
jo
cld
xchg
push
jbe
add
sub
lcall
xchg
sub
pop
sub
xor
leave
xor
cmp
outsl
or
inc
mov
lret
sub
sub
movsb
insb
or
pop
out
and
sbb
dec
stos
inc
fcomps
jl
call
lret
cmp
cmp
xchg
jae
jbe
loop
bound
or
xchg
jecxz
mov
dec
or
out
les
mov
lods
mov
pop
jecxz
jl
cmp
fdivrs
daa
mov
dec
adc
jl
int
addr16
xor
mov
inc
data16
adc
adc
sub
mov
mov
mov
sub
dec
mov
pop
es
dec
cmp
pop
ja
mov
mov
test
xor
shr
inc
sbb
imul
lock
jo
int3
push
fldenv
xchg
jmp
es
loope
in
pop
dec
aad
xchg
add
subb
lret
dec
inc
repnz
jg
cmp
xchg
mov
leave
movsl
mov
pop
xor
sub
outsl
push
and
jnp
sarb
xor
cmp
xchg
lds
ds
mov
inc
mov
mov
push
in
mov
sbb
mov
stos
xchg
xor
notb
mov
ljmp
mov
xchg
pop
push
shl
cltd
pop
out
fldl2e
mov
jg
rorb
pop
imul
pop
cli
fwait
cmpsb
adc
push
sbb
cmc
jg
ret
shll
pop
sbb
mov
test
int
pop
in
addr16
or
and
ljmp
lret
popa
popa
adc
sbb
scas
mov
out
in
or
cmpsl
xchg
subb
imul
ljmp
xor
jecxz
dec
loope
push
and
out
pop
dec
psubusb
cld
mov
push
ror
xor
aas
jmp
dec
cltd
dec
sbb
imul
dec
adc
aas
push
int
cld
sub
pop
jp
add
insb
clc
pop
and
ds
imul
lahf
jno
ds
fisttpl
xor
enter
sbb
or
jle
bound
das
sahf
push
loope
int
sarl
xor
mov
shlb
cmp
sbb
and
cs
aas
xchg
lahf
or
jge
or
lds
fnsave
add
mov
je
or
push
push
scas
jbe
loopne
stos
out
fiadds
push
jae
push
push
pop
sub
jmp
xchg
adc
mov
shrl
arpl
jns
push
or
pop
xchg
aad
iret
add
aam
jl
cs
rcll
inc
cmc
sub
xor
jg
mov
les
shll
push
js
and
test
mov
mov
lock
js
insb
mov
xor
adc
jb
mov
loopne
in
cmp
scas
dec
les
test
cmc
fbld
mov
adc
clc
mov
inc
ja
lods
add
data16
addr16
cmpsb
subb
pop
rorb
fidivl
inc
sub
in
aaa
test
inc
jle
loop
cwtl
xchg
aas
decb
adc
xor
mov
popa
in
mov
xor
fdivrs
push
gs
lds
sub
movsl
rorb
push
movsb
movsb
xor
sub
add
pop
xchg
in
cmp
inc
xlat
cmc
push
inc
push
test
or
stos
test
adc
push
popa
mov
in
test
jo
inc
lds
jl
dec
icebp
ds
xchg
shll
sub
push
fwait
inc
sahf
stos
scas
xor
fs
sub
enter
ret
inc
incb
callw
shr
cmp
push
inc
sbb
pop
and
mov
scas
fcmovnu
inc
pop
std
xor
out
lret
pusha
loopne
mov
pop
mov
sbb
pushf
jne
jne
loopne
lcall
cmovle
adc
int3
mov
incb
in
cmpsb
in
jp
dec
xchg
push
jmp
decl
in
xor
in
mov
test
mov
cld
mov
jg
mov
mov
push
movsb
addr16
mov
xlat
sbb
xor
vphsubdq
roll
push
adc
pusha
fldt
lods
add
cmp
pop
push
pop
leave
shrl
xchg
xchg
push
jp
inc
call
mov
aaa
imul
in
pop
into
mov
fucompp
add
movsb
addr16
test
sub
push
mov
jle
arpl
loop
shlb
xor
or
pop
outsl
lret
push
sti
xchg
or
mov
jno
ret
pushf
movsl
cmc
and
in
pop
out
cvtps2pd
push
sbb
pop
pushf
or
adc
int3
push
shl
ljmp
push
dec
sahf
data16
int3
xor
mov
cmc
movsl
mov
or
push
js
andb
nop
test
jecxz
lds
out
fimuls
xor
pop
pop
inc
rorl
push
dec
std
push
jne
pusha
lods
dec
sub
aas
pushf
or
scas
mov
xor
xchg
pushfw
in
dec
stc
sbb
or
mov
sbb
lret
frndint
in
insl
fs
fdivrl
xchg
rclb
lods
out
mov
pop
xchg
subl
mov
pop
ljmp
adc
push
mov
jmp
out
test
mov
adc
add
adc
or
enter
xor
pop
pop
push
insb
pop
test
or
cmp
or
out
and
loop
imul
pop
iret
mov
pop
out
shl
mov
out
cmp
cli
les
pushf
sti
or
out
push
mov
stos
std
test
outsl
mov
push
dec
mov
fsubrs
rcrl
cmp
xor
xchg
dec
mov
insl
ja
insb
xchg
repnz
and
cmp
cmp
js
ret
sbb
inc
test
stc
iret
orb
hlt
sbb
xlat
dec
jle
mov
pop
cwtd
inc
pop
pop
test
xchg
push
inc
push
inc
adc
shll
inc
mov
mov
cmpsl
jne
dec
dec
sub
adc
outsl
pusha
inc
mov
jge
int3
popa
jnp
fwait
xchg
pushf
add
lods
mov
fmul
adc
adc
dec
fwait
push
mov
inc
dec
aaa
das
and
aaa
or
push
pop
xchg
fisttps
xchg
iret
jg
stc
and
loopne
mov
inc
jo,pt
push
mov
add
mov
int
nop
movsb
out
test
xchg
stos
ja
adc
jle
push
inc
jp
shll
add
arpl
loopne
mov
xchg
jbe
bound
movsl
mov
adc
jnp
pop
sahf
imul
jae
loopne
std
dec
add
popa
clc
das
jmp
mov
lea
repnz
lock
cwtl
aaa
sub
insl
add
jle
ds
push
pop
pop
mov
ja
adc
jno
shlb
aad
sbb
sti
jmp
imul
sahf
iret
arpl
cmc
push
cmp
test
pop
movlhps
push
movsb
cmpsb
sub
mov
repz
cli
mov
mov
jle
and
shrl
xor
lea
dec
lods
ja
push
mov
roll
lahf
test
lds
xchg
out
sub
pushl
inc
mov
pop
paddusb
clc
mov
xor
fstpt
or
xchg
push
out
pop
popf
das
outsb
and
repz
scas
cmpsl
or
cmp
or
sbb
sub
leave
incl
in
dec
lds
adc
pop
loopne
mov
sar
lock
jl
and
mov
xchg
jno
pop
popf
fnsave
imul
cmp
xchg
jnp
push
fwait
int
mov
pop
roll
dec
push
fsts
pop
cmpsl
push
mov
sbb
sbb
and
mov
repz
dec
icebp
jbe
sbb
jno
pop
mov
scas
and
cmp
xchg
mov
je
mov
int3
rorb
adc
add
div
add
adc
dec
sbb
push
mov
mov
inc
fcom
dec
aad
je
adc
in
sub
insl
mov
pop
bound
ss
xchg
mov
push
ja
lods
sarl
or
mov
aad
fs
cli
xor
jne
enter
mov
jle
push
cld
jecxz
jle
fimull
dec
push
mov
cmp
xchg
pop
or
sbb
pop
ret
ds
cmp
int3
out
inc
xchg
in
inc
pop
add
movsb
and
ljmp
leave
add
push
pop
add
jne
or
add
pop
mov
aaa
cmp
cmp
mov
in
and
xchg
mov
xchg
mov
inc
and
rorb
popf
repnz
dec
lods
cld
mov
cmp
lods
xor
jne
push
hlt
mov
or
xchg
sbb
fiadds
movsl
push
xor
in
lds
jmp
fisubrs
inc
lcall
cmp
rolb
jnp
ja
iret
mov
test
sbb
pop
lock
insl
jle
test
insl
jge
ss
mov
xchg
stos
outsl
sbb
ret
pop
fisubs
divl
xor
lds
mov
mov
mov
sub
xchg
mov
and
and
ret
je
xor
push
add
call
outsl
and
pop
and
jns
fdivs
ds
int
jg
cmpsl
mov
sub
adc
inc
adc
jne
pop
jno
icebp
sub
and
jl
rcr
jns
les
mov
push
dec
bound
xchg
sbb
loopne
adc
and
push
lret
cli
xchg
or
mov
enter
ja
test
sahf
xchg
xchg
fdivrs
das
and
sbb
mov
repz
mov
inc
aaa
lret
pop
xchg
fsts
aam
lcall
fldl
out
push
cmp
adcb
mov
cwtl
push
jns
ret
cmp
fwait
cli
aaa
cli
out
incl
sahf
out
dec
add
cmpsb
adc
pop
mov
lcall
aam
xchg
gs
push
mov
insb
adc
fisttpl
jb
cmp
jne
or
fstpt
jo
and
call
push
mov
inc
inc
xor
xor
in
subb
fidivs
pop
sub
mov
nop
dec
ror
sub
in
add
rcrb
js
aas
movsl
lcall
outsl
or
adc
fistl
sbb
sbb
or
mov
mov
fs
push
or
iret
mov
aam
dec
mov
jns
push
dec
xor
test
insb
in
ljmp
push
negl
stc
jo
lea
fisttpll
roll
adc
mov
add
mov
mov
mov
mov
jp
mov
je
shl
pop
cmp
xchg
sarb
stos
sti
cmp
mov
scas
into
mov
fldcw
daa
repz
ss
mov
sbb
xchg
mov
inc
subl
nop
dec
notb
or
test
pusha
xchg
sarl
nop
popf
cmp
lods
andl
sub
call
fistl
outsb
ds
pop
popa
ret
lea
stos
inc
push
cmp
sub
mov
jae
add
ret
mov
test
jo
or
add
sbb
popa
lods
or
xchg
rcrb
aad
fcoml
pop
sbb
cmp
pusha
subb
lcall
jmp
lcall
mov
ret
adc
xchg
add
in
mov
push
mov
jo
nop
sbb
scas
loop
in
sub
imul
sbb
dec
mov
add
fcomps
into
daa
fsubrl
fwait
or
jp
movsl
out
push
lret
cmpsb
dec
xchg
movsl
pop
mov
adc
jle
lock
pop
fwait
and
aaa
add
insb
rclb
lods
inc
fs
daa
test
mov
imul
xor
aam
out
inc
adc
jecxz
mov
mov
sub
and
mov
insl
ficomps
loope
fs
jae
lods
addr16
outsl
xchg
pop
lret
in
pop
ret
pop
cmp
cmp
mov
rolb
inc
sbb
dec
adc
dec
jb
xor
cld
xchg
mov
sub
add
lods
jnp
cmp
pop
inc
test
add
loope
xchg
jge
xchg
mov
cmp
add
jbe
sub
or
nop
push
jnp
out
into
mov
lock
popa
adc
xor
call
mov
stc
pop
push
arpl
mov
repz
in
popf
imul
ss
je
xchg
pushf
mov
loop
movsl
popf
das
cmpl
rcrb
mov
pop
sbb
in
fidivrs
sub
lret
icebp
fadds
out
rorb
mov
add
push
movsl
stos
out
pop
call
aam
lahf
xchg
mov
xor
lcall
xor
cwtl
sbb
cmpsb
int
dec
dec
jp
fcmovnbe
or
fstpt
aam
test
pop
icebp
cmpsb
fneni(8087
sbb
mov
pop
arpl
clc
bound
pop
mov
hlt
xchg
test
or
in
outsl
jbe
adc
jp
inc
mov
dec
mov
sbb
jne
jge
mov
mov
imul
pop
cmp
stos
jns
jg
orl
fisubrs
dec
add
movsl
scas
sub
jecxz
push
and
xchg
push
ret
jecxz
cmpb
pop
stc
cli
je
or
mov
jg
sti
pop
sbb
loope
push
lahf
mov
push
mov
out
dec
mov
outsb
sarl
mov
js
mov
call
jge
fildll
mov
iret
stc
jno
dec
xor
les
ret
push
or
les
xchg
pop
dec
fsubl
fbstp
imul
int3
out
stos
or
lahf
out
movsl
mov
mov
add
sbb
xlat
addb
inc
aam
push
into
mov
xchg
add
daa
mov
mov
fsts
sar
adc
in
dec
insl
ficompl
mov
mov
xchg
inc
lea
sub
mov
lahf
test
sub
add
sub
sbb
push
loope
int
xor
xchg
rcrb
push
cmp
inc
jg
out
lcall
in
adc
and
clc
shll
mov
fbstp
lock
mov
jmp
push
fdivp
sub
sub
or
call
sbb
mov
fcompl
gs
mov
add
test
lock
sbb
fisubs
pop
pop
shll
jno
mov
aad
popa
push
fiaddl
dec
lods
mov
cmpsl
push
ror
jb
popf
push
enter
push
shrl
xchg
cwtl
xor
xor
mov
popf
pop
fcoms
pslld
mov
jae
rorb
jae
fildl
ds
jle
add
mov
jge
stc
sub
push
jbe
or
pop
xor
out
icebp
adc
dec
jne
sbb
fadd
pop
stos
je
jle
movl
fsub
mov
cmpsl
nop
inc
aam
stos
push
cmpsb
sbb
das
mov
ret
mov
ret
aam
fdivr
mov
jae
jp
dec
incb
sub
jmp
std
out
test
mov
das
xchg
in
add
cwtl
adc
and
enter
in
pusha
sub
cs
jae
shlb
cmpsb
add
xchg
push
mov
and
test
fwait
jg
pop
pop
lret
insl
xor
ret
dec
cmp
adc
popf
not
or
out
shll
out
sub
mov
insl
push
and
aad
xchg
or
shll
insb
gs
sbb
sbb
and
push
enter
cmp
data16
mov
mov
in
and
enter
jo
mov
sub
inc
je
sbb
shll
inc
shll
aam
xor
inc
and
push
jae
and
mov
test
sbb
push
jl
xchg
fldl
push
in
out
fwait
mov
xchg
cmp
test
aam
enter
scas
enter
leave
pop
and
xor
clc
push
push
sub
dec
push
dec
sbb
jo
and
jbe
mov
pcmpgtd
mov
cli
test
jmp
and
jecxz
sub
jbe
mov
dec
sbb
jbe
push
xor
outsl
roll
mov
stos
and
test
les
xor
fs
stos
inc
shl
pushf
pop
cmc
les
jno
jae
cs
dec
jl
pop
sub
enter
xchg
pop
ja
or
stos
ljmp
iret
out
mov
pop
js
scas
xchg
mov
xor
xchg
leave
add
sub
ljmp
sub
push
sbb
inc
fwait
or
pushf
ss
fwait
dec
fwait
add
imul
or
mov
sbb
loop
fbstp
sub
xchg
push
outsl
pop
xchg
fdivl
loopne
fcomps
scas
jp
xchg
int
pop
jbe
jl
jnp
push
ja
cmpsl
xchg
push
inc
mov
out
mov
ja
sahf
or
sarl
es
or
push
push
mov
fsubrs
iret
sub
lcall
gs
cld
inc
iret
scas
icebp
mov
stos
cld
sbbl
jne
pusha
mov
or
call
sti
dec
xchg
pop
and
daa
lcall
or
movsl
jg
inc
push
xor
push
call
mov
lahf
mov
mov
test
out
and
js
xchg
lahf
fdivs
jle
lret
imul
insl
fwait
loope
je
das
jecxz
repnz
imul
xor
mov
cmp
leave
push
xchg
add
or
mov
jl
push
adc
repz
push
sbb
mov
add
sarb
repnz
pop
sbb
adc
jecxz
sarl
mov
push
rolb
cmp
cmpsb
push
xor
xlat
push
xchg
mov
aaa
out
xchg
dec
imull
add
jmp
inc
pop
sub
mov
inc
jl
stos
popa
inc
sub
loope
mov
lret
lret
sub
jbe
lods
push
dec
and
sbb
fisubrs
sbb
lods
fs
ja
jmp
inc
call
push
popf
and
cs
lds
cwtl
movsb
fs
mov
fcmovne
andb
mov
lds
roll
les
mov
sub
pusha
xor
ja
mov
dec
inc
mov
incl
add
fistpll
outsb
add
stos
cmp
mov
stos
push
mov
addb
and
sbb
fmuls
roll
mov
cmp
mov
in
ds
cli
xchg
mov
andl
jns
mov
inc
in
xor
cmp
orb
sub
fmuls
decl
out
cmp
setns
mov
movsl
add
outsb
push
icebp
scas
push
pop
aaa
fs
cmc
jp
dec
std
mov
adc
aad
xor
push
push
mov
repz
insb
outsl
call
cld
aas
mov
out
mov
ret
stos
cmc
fistpl
loope
push
pop
mov
das
in
fnstsw
stc
mov
cmp
xchg
jle
xor
xchg
push
mov
dec
mov
stos
adc
xchg
and
and
clc
sub
lods
jp
xchg
out
mov
sub
mov
push
or
call
mov
lcall
cmp
in
push
addr16
leave
clc
mov
outsl
out
mov
addr16
dec
ja
loop
loope
or
mov
cmp
push
xchg
mov
push
xchg
fdivs
ss
adc
push
imul
js
add
add
and
mov
imul
dec
ret
xchg
and
pop
push
mov
push
inc
outsb
and
sub
cli
sbb
xchg
pushf
lcall
push
ds
in
mov
mov
jbe
pop
pusha
mov
adc
lahf
jnp
xchg
xor
lahf
adc
in
outsl
push
pop
movl
jae
popa
push
lret
dec
lea
lds
cld
adc
nop
sub
or
push
cs
add
notb
outsb
pop
call
sbb
mov
test
and
add
add
push
fistl
ljmp
jecxz
pushf
in
out
mov
pop
sub
int
or
notl
cmp
mov
sti
fcom
push
cmp
xchg
stos
xor
testb
push
xchg
pop
es
add
xchg
insb
and
popf
roll
inc
and
rorl
test
or
adc
inc
lret
fstps
pop
aam
aas
addr16
pop
incb
adc
mov
push
sub
shrl
push
mov
cmp
lahf
ljmp
jg
adc
lret
jecxz
test
mov
out
cmp
pop
out
fdivs
mov
jne
xchg
and
and
add
hlt
jmp
push
mov
cmpsb
adc
or
je
sahf
xchg
jno
leave
xchg
dec
outsb
ja
push
scas
or
push
add
cld
xor
cmpsl
lods
les
mov
mov
inc
movq
or
pop
mov
js
mov
ss
xchg
cmpsl
or
jp
cmpsl
cmpsb
adc
sbb
int
adc
push
pop
pop
pop
push
jne
push
xchg
sub
or
push
aaa
hlt
pop
cmp
enter
sub
jne
addb
fs
ja
mov
addr16
add
testb
lods
mov
inc
xlat
push
or
cmp
cmp
xchg
fwait
cmpsb
xchg
pop
dec
outsb
into
movsl
xchg
xchg
add
test
popa
lret
lret
in
in
mov
bound
xlat
stos
insl
ret
xchg
enter
lds
ret
fdiv
xchg
hlt
cltd
and
push
out
and
dec
movsb
pop
and
sbb
hlt
pop
jo
xchg
out
add
fistpll
sub
sbb
and
lcall
iret
xchg
mov
test
ds
adc
dec
stos
iret
sbb
scas
jne
pop
jae
fsubrs
shlb
lods
outsl
lcall
mov
movsb
in
ret
push
mov
addb
aas
data16
sbb
push
in
in
inc
xchg
out
dec
pop
pop
ret
or
fnstsw
sbb
repz
popfw
sub
testb
lea
cmp
pop
push
ja
cmp
lret
aaa
push
in
das
mov
push
mov
mov
enter
std
dec
add
adc
ss
pop
cmpl
les
mov
fists
inc
pop
repz
xchg
nop
and
insl
pop
inc
push
mov
jecxz
inc
dec
imul
dec
shll
mov
push
dec
or
aas
fmul
jno
dec
inc
pushf
dec
pop
mov
mov
mov
test
or
pop
inc
mov
jge
xchg
fwait
mov
mov
jle
fwait
mov
jns
cltd
sti
ljmp
jo
je
dec
sbb
sub
xlat
rorl
pop
push
adc
ret
jae
push
jge
lods
push
xorl
outsb
sub
outsb
stc
test
dec
xor
inc
test
adc
xlat
sbb
jae
cmp
add
loopne
sub
scas
hlt
and
xor
jmp
dec
cmp
cld
rclb
cmc
mov
jp
sub
sahf
mov
arpl
and
inc
lds
mov
lahf
pusha
lods
dec
adc
mov
movsb
imul
sub
pop
inc
push
aas
add
shll
inc
fmul
imul
add
mov
rorl
js
xchg
sbb
lock
mov
sbb
add
or
xor
je
orb
hlt
call
xchg
popf
insb
faddp
cmc
jbe
jns
mov
rcr
imul
sarl
sahf
push
iret
sub
test
sub
paddsb
add
pusha
mov
shr
inc
adc
jnp
sbb
outsl
fidivl
hlt
out
xchg
call
aaa
jns
lcall
or
es
sbb
mov
mov
add
sub
xchg
repnz
stos
jg
imul
comiss
addr16
and
xchg
imul
xor
xchg
pop
jle
orl
or
stos
dec
xor
imul
enter
cltd
idivb
sub
shrb
jge
xor
xchg
mov
data16
testb
scas
stos
cmpsl
jno
arpl
leave
ds
ret
inc
add
les
shlb
xor
sbb
sbb
xchg
mov
into
fs
xor
xchg
or
lds
mov
sbb
iret
mov
js
scas
mov
mov
mov
into
bound
and
push
test
lods
adc
cmp
cmp
fisubrl
push
adc
das
subb
movsl
loop
movsl
inc
and
jbe
lods
adc
and
bound
test
inc
imul
xchg
xor
scas
repz
lea
hlt
mov
adc
mov
push
jge
inc
test
jae
pop
aas
add
and
mov
cli
sub
cltd
sub
xor
int3
dec
add
inc
sub
orb
fidivrs
xor
ja
xchg
int3
sub
sub
sbb
lret
jmp
test
cmc
lock
lods
push
adc
rcr
jecxz
cltd
push
cwtl
test
in
out
lods
aad
out
in
das
mov
push
scas
add
rol
subb
inc
jbe
add
dec
lods
xchg
in
inc
cwtl
inc
insb
lds
or
fimuls
cli
insb
ficomps
mov
out
fidivs
adc
mov
add
mov
lret
icebp
and
jae
push
cmpsl
inc
jp
xchg
fs
aas
mov
lods
ljmp
lcall
dec
in
pop
mov
pop
push
cmpsb
inc
stos
jae
pextrw
or
sbb
lahf
jne
ljmp
cmpsl
in
mov
pop
sbb
lds
push
addl
push
lods
xchg
add
leave
or
lods
rclb
mov
mov
add
pop
push
fmuls
insb
pop
or
not
mov
loopne
in
adc
lea
cmp
das
adc
cld
idiv
test
int
fcmovbe
or
divb
in
sub
lods
xrelease
jecxz
js
aaa
xchg
js
pop
stos
adc
inc
xor
dec
inc
dec
xchg
das
jne
stos
xchg
imul
cld
in
test
sub
jno
mov
push
int
pop
cli
push
gs
cmp
pop
lock
inc
dec
cmp
jl
sub
cmpsl
stc
cmp
or
dec
xchg
cs
xlat
mov
ljmp
mov
fneni(8087
js
je
xor
hlt
adc
lcall
mov
sub
pop
pop
xchg
mov
icebp
fldcw
mov
jne
adc
les
das
push
jp
inc
stc
xor
js
jne
int
dec
data16
test
in
cltd
lock
lret
ss
test
fbstp
or
fdivrl
adc
pop
outsl
rcrl
and
cmc
push
pop
popa
fldt
iret
mov
add
or
dec
jle
dec
outsb
outsb
push
adcb
shlb
bound
cmp
insb
or
in
xor
les
mov
loop
sub
xchg
test
jg
push
mov
imulb
outsb
cmc
inc
pop
push
inc
cmp
jns
jno
push
xchg
repnz
push
ds
repnz
out
xor
mov
out
jmp
dec
test
dec
add
cmpb
add
lods
cmp
test
ljmp
push
es
jbe
cwtl
cs
push
mov
pop
adc
mov
jo
dec
jg
add
jecxz
cli
lds
hlt
cmpsb
rcrl
lods
or
fwait
popa
fiadds
inc
dec
mov
loop
mov
loop
mov
insb
xchg
lods
add
push
or
and
orl
loop
and
cmp
or
jns
mov
cmp
pop
stos
push
insl
mov
mov
mov
mov
push
lea
dec
push
adc
data16
iret
lea
stos
xchg
out
xor
fs
sbb
and
test
cmp
je
int
mov
xchg
stc
hlt
cmpsb
mov
aam
insl
pop
push
imul
mov
push
jnp
fsubrp
adc
fcoml
inc
xchg
repz
pop
ja
jmp
cmp
adcb
mov
in
and
push
je
inc
jo
jne
pop
xor
adc
dec
fnstcw
test
je
divb
xor
push
gs
mov
pop
rorb
cmpsb
pop
in
jne
xor
push
jge
shl
add
xchg
lret
xchg
cmpsb
pop
cmp
out
pop
fst
cmp
or
xchg
popa
movsb
aam
cmp
mov
add
add
cli
repz
pop
xchg
lods
add
data16
ja
lret
loope
fisttpl
js
test
cltd
js
pop
hlt
mov
xchg
dec
mov
repnz
test
or
movsl
mov
addr16
xor
add
arpl
dec
popa
jge
imul
mov
imul
push
jp
push
flds
cs
push
sbb
ficoml
add
cmp
aam
cwtl
iret
jne
and
jp
fdivrs
iret
shrl
jns
xchg
cld
pop
adc
dec
rcrl
sahf
aad
cs
adc
pop
data16
push
in
cltd
out
out
inc
dec
add
in
outsl
fwait
cwtl
lods
jmp
out
outsb
dec
fcomp
inc
mov
popa
jg
jno
mov
jmp
or
cltd
rolb
jbe
pop
ficomps
cmp
adc
adc
push
test
dec
sahf
fistpll
push
and
pop
jns
push
add
stc
sub
inc
fdivr
and
push
arpl
das
sbb
bound
scas
jg
xlat
push
lods
sbb
adc
cli
test
notb
bound
sbb
pop
cmpsb
mov
mov
or
pop
pop
loop
loope
xlat
sbbb
stos
in
xor
sub
in
jge
or
mov
xchg
cmp
xor
mov
sub
mov
xor
sbb
push
ds
mov
rcrl
aas
insb
cmp
push
mov
outsl
adc
fidivrs
nop
fwait
testb
ret
loope
dec
fdivrs
pop
test
mov
pushf
rol
ficomps
in
push
jo
fst
ficomps
ljmp
sarl
jg
cli
stc
roll
mov
cld
add
sub
adc
mov
testl
lock
mov
mov
insb
and
scas
or
dec
ret
jns
cmpsb
xchg
enter
xlat
pusha
adc
cmc
adc
in
adc
bound
in
icebp
pushf
dec
fistps
je
cmpsl
sarl
mov
or
pop
out
xchg
pop
clc
sbb
lret
in
gs
jmp
jg
ret
pop
call
into
jns
push
xor
nop
or
push
inc
mov
insb
cltd
int3
sub
jne
aad
stc
test
lods
notl
imul
lret
cltd
push
out
mov
dec
cmp
push
shlb
fldt
outsl
xor
adc
ficoml
and
jb
jge
sbb
sbb
repz
push
call
aas
rcrl
pop
mov
rcll
iret
and
cmpsl
movsb
test
jecxz
pop
lock
inc
repnz
dec
aad
mov
push
dec
xor
xor
stc
repnz
arpl
xor
push
fs
iret
xor
lret
or
pop
decl
push
mov
sbb
test
incb
sbb
popf
push
loope
std
ljmp
bound
sub
lret
popf
pop
xor
mov
fdecstp
mov
cwtl
xor
pop
inc
fs
fs
lret
cmp
sub
jp
addr16
loopne
xchg
test
or
pop
adcb
repnz
mov
jmp
fwait
enter
lods
add
or
insl
pop
fildll
or
sub
test
push
das
lea
adc
iret
cmp
mull
fucom
jno
imul
rorb
lea
pop
and
mov
leave
jns
scas
mov
sarb
pop
pop
push
adc
cmp
std
and
mov
mov
mov
sub
dec
add
imul
outsl
and
or
mov
inc
enter
or
repnz
insl
in
rolb
xchg
mov
mov
inc
inc
and
cmpsl
ds
mov
movsl
push
mov
mov
in
mov
icebp
push
sub
inc
jecxz
and
jno
sub
inc
adc
push
inc
test
popa
test
jb
in
sbb
insb
cmp
les
pop
adc
pop
push
js
int
mov
push
xchg
xor
in
mov
fidivrs
es
push
pop
mov
stos
dec
je
test
stos
loope
out
mov
stc
call
inc
scas
scas
mov
mov
scas
mov
and
int
push
mov
sti
jnp
ljmp
cltd
in
int
adc
jmp
dec
cmpsl
cmpb
pop
fsubs
sub
mov
adc
xor
xchg
hlt
inc
pop
xchg
test
fcmovb
add
adc
push
cli
stos
lret
mov
cmp
inc
vmwrite
sub
adc
jmp
jno
int3
and
dec
sbb
jae
hlt
push
push
loop
add
cs
xchg
test
fsubrp
ret
ljmp
push
aam
pop
mov
xor
xchg
rcrl
repnz
jmp
sbbb
push
push
rol
hlt
pushl
out
loop
pop
add
dec
pop
push
enter
and
es
add
scas
lods
cmpsl
push
shlb
mov
movsb
xchg
mov
sbb
fstl
push
movsl
push
sub
out
mov
addr16
mov
out
adc
stos
or
adc
movb
jns
jbe
ds
lods
imul
add
dec
mov
mov
mov
mov
inc
push
dec
jnp
fmuls
inc
mov
div
pop
push
mov
cmp
aam
aam
aas
aad
jmp
xlat
cmp
cmp
add
pop
dec
add
sub
push
or
sub
mov
lret
cli
mov
stos
push
stc
lcall
mov
std
hlt
adc
mov
mov
and
xor
sti
mov
push
int
sbb
inc
cltd
pop
arpl
mov
push
jo
adc
mov
cld
fisttpll
sub
lods
jae
fcmove
movsb
jg
ficoms
or
cmp
hlt
or
xchg
adc
dec
push
add
sbbl
js
xchg
addl
xchg
iret
ficoml
out
sahf
dec
std
out
jecxz
jle
lock
mov
fists
dec
addr16
or
cmp
xor
xchg
hlt
mov
jmp
or
push
add
mov
orl
xor
dec
sub
xor
sub
mov
pop
mov
mov
mov
cli
add
jg
xchg
lods
daa
mov
sub
xor
dec
jg
inc
loope
and
dec
push
xchg
pop
dec
fdivs
dec
lret
aaa
xchg
popa
push
dec
adc
mov
leave
into
pushf
pop
dec
mov
out
fs
out
push
adc
push
push
cmp
adc
mov
push
rcrb
inc
inc
dec
leave
fs
and
movsb
imul
insl
int
cltd
ja
pop
lock
sub
addr16
adcb
ret
xor
push
cs
dec
ffree
cmp
repz
inc
out
mov
xor
jl
xlat
movsb
mov
insb
fdivl
icebp
sub
or
loopne
mov
std
push
push
and
rorl
jbe
or
xor
or
lods
test
inc
inc
xchg
pop
fisubrs
mov
xchg
cli
inc
jb
ds
out
jp
cmp
hlt
push
xchg
pop
pusha
sbb
ljmp
add
lcall
lret
pushl
or
mov
or
adc
xchg
xor
rorl
in
sub
add
push
xchg
fcoml
int
push
aaa
cmp
inc
popf
ja
mov
imul
sbb
pushf
lock
cli
inc
sbb
mov
xchg
xor
add
subb
das
insl
lea
jge
xor
insl
cmp
push
jge
aam
jne
push
ret
inc
loope
jmp
mov
jno
out
out
insb
mov
out
pop
sbb
dec
add
xchg
mov
xchg
mov
cmp
loopne
xchg
mov
jmp
cwtl
lahf
adc
adc
loopne
xchg
or
sbb
sub
popf
aad
cmp
lret
jo
sarb
shl
orl
sbb
xor
cs
cmpb
rorb
xor
add
faddl
cwtl
jmp
sti
pushf
int
mov
imulb
jnp
leave
push
psubusb
clc
pop
scas
js
scas
push
into
sbb
adcb
out
ret
pop
cmp
stos
mov
push
push
adc
flds
cmp
and
js
adc
jae
insb
jns
cmp
pop
inc
sbb
ds
repnz
incb
scas
cmp
adc
pop
and
jle
getsec
into
adc
rolb
daa
sbb
jb
xchg
cmp
pop
es
cwtl
sbb
jl
cmp
dec
add
in
addl
or
mov
lret
or
loop
mov
pop
movnti
dec
inc
mov
divb
aam
aas
xor
cmp
dec
push
sbb
xor
jno
outsb
dec
push
add
and
js
lock
movsl
jne
test
and
push
out
test
inc
cmpsb
icebp
rcrl
out
pop
inc
mov
inc
std
xchg
mov
cmc
repz
incb
rclb
adc
je
push
mov
fisttpl
xtest
mov
jp
ja
xlat
pop
or
loopne
jp
mov
sbb
mull
imul
ja
sbb
jnp
sbb
jmp
out
cmp
dec
or
in
inc
les
loope
aam
pushf
aaa
aas
xchg
cmp
ret
cmp
push
mov
mov
ficompl
mov
dec
inc
pop
cmp
mov
int
out
sub
pop
inc
xchg
and
cmpsl
mov
rol
cmc
push
push
ds
adc
in
cwtl
or
movl
cli
into
push
cmp
jle
push
dec
pop
inc
add
stos
sub
aad
dec
stos
mov
mov
in
xor
incb
shlb
xchg
push
cmp
dec
sar
xor
dec
sbb
mov
jmp
pop
cmp
sub
data16
psrlq
nop
outsl
sub
or
flds
push
pop
fstl
das
stos
insl
lods
xlat
inc
fdivr
push
nop
adc
sub
jmp
or
jo
add
xchg
dec
cld
cld
dec
push
aaa
xchg
inc
xchg
pop
xor
fimuls
loope
jno
mov
inc
das
lods
cmp
mov
call
sub
xchg
add
shlb
lcall
scas
aaa
into
iret
insl
in
xchg
cmpsl
jnp
mov
les
mov
fiadds
stc
popa
cmp
shrl
cmp
insl
and
xchg
nop
sbb
jnp
dec
shrl
xlat
sub
cwtl
push
retw
or
jb
lcall
cmp
mov
sbb
loopne
xchg
mov
in
xchg
outsb
in
les
xor
bound
jge
cs
test
cmp
lods
outsb
xchg
movsb
lret
scas
inc
das
flds
mov
scas
out
leave
cmp
arpl
incl
mov
mov
shll
adc
aam
push
mov
push
mov
mov
sub
mov
mov
sahf
mov
lods
ret
push
mov
adc
cmp
in
mov
mov
jl
xlat
jle
or
ljmp
xor
adcl
std
sub
mov
sbb
lods
cmp
aam
shrl
sub
inc
ret
cmp
fwait
mov
mov
jmp
inc
jecxz
jl
mov
inc
mov
out
out
sub
imul
mov
xorb
in
outsl
cld
and
loope
aas
cli
inc
loopne
pop
fmuls
jo
out
dec
dec
fwait
orl
sub
test
fwait
cmp
sub
cmpsl
xor
jnp
push
and
pop
out
sub
xor
and
sub
jne
dec
push
imul
and
xchg
and
adcl
adc
mov
xor
xchg
rorl
mov
in
nop
stos
inc
push
out
pushf
push
test
cld
fwait
xlat
cmp
adc
hlt
cmc
aaa
out
fldz
cmp
insl
imul
mov
fidivl
mov
std
test
ds
adc
push
insl
pop
jmp
dec
sti
and
sub
xchg
mov
popa
ss
and
adc
cmp
daa
push
jnp
lahf
mov
cmp
nop
aaa
pop
insb
loope
mov
sahf
neg
pop
xlat
jmp
mov
clc
fildll
push
je
pop
adc
inc
xchg
aad
in
loope
arpl
mov
cmp
mov
mov
arpl
or
adc
sbb
pop
repz
scas
mul
or
mov
shll
call
cs
lds
stc
xor
jbe
aam
rcrl
notl
and
sub
dec
jne
repnz
and
cmp
mov
jne
xor
xor
mov
cltd
adc
notl
repz
mov
fprem1
rcll
mov
mov
into
jnp
es
addb
jns
stc
mov
cmp
xchg
pop
cmp
rorb
pop
imul
and
repnz
andb
sbb
outsl
adc
mov
xor
pop
cmp
or
cltd
pop
fsub
rorl
sbb
inc
test
std
cmp
sbbl
mov
lret
mov
inc
test
sahf
cmp
nop
daa
jo
xor
fsubrl
add
adc
leave
jno
out
jge
mov
jge
xchg
or
xchg
clc
fwait
ret
scas
out
mov
inc
iret
push
or
movsl
cmp
int3
dec
pop
or
pop
cltd
js
pop
movsl
xchg
pop
cli
shlb
fwait
and
shlb
shlb
mov
mov
mov
and
adc
pop
out
cld
je
fs
popa
das
push
push
sbb
movsl
add
lods
push
and
cld
in
push
mov
xlat
mov
inc
cld
xchg
je
jmp
loop
shlb
mov
cltd
mov
fs
adc
adcb
sarb
adc
pop
je
popf
jbe
insl
cmp
mov
lock
fsts
mov
or
inc
xchg
les
in
sbb
mov
andb
mov
das
pop
cld
int3
lret
daa
in
ret
add
test
mov
sub
mov
mov
scas
sub
dec
push
cmp
xor
arpl
lahf
rcll
sbb
pop
sub
std
loopne
fistl
adc
xchg
mov
or
mov
adc
outsb
dec
add
outsb
jbe
das
sub
mov
cmp
into
xchg
mov
cmp
adc
mov
incb
lret
adc
pusha
pop
shl
mul
outsl
fcomps
fnsave
lds
test
out
out
lcall
sbb
dec
xchg
xor
imul
xchg
or
imul
or
jmp
in
lods
mov
scas
rorb
mov
push
xor
xchg
dec
adcb
push
pop
cmpb
out
mov
jl
push
iret
int
popf
xchg
loopne
lods
stos
pop
scas
mov
call
nop
sbb
xchg
push
sub
scas
push
mov
pop
mov
lds
adc
mov
int
adc
mov
mov
fs
jmp
hlt
fs
aad
xor
xor
shll
shlb
adc
mov
loope
cmpsl
push
into
cmp
pop
cld
push
sub
sub
gs
icebp
push
addr16
jmp
push
fcmovb
jl
enter
pusha
add
add
addl
add
adc
daa
or
mov
incl
mov
pusha
fldl2t
adc
xor
mov
add
xor
repz
mov
adc
sahf
xchg
call
pop
pop
cmpsb
pop
test
push
mov
pop
mov
lds
xor
scas
bnd
cs
push
fistpll
pop
jb
dec
pop
test
jecxz
into
jmp
inc
ror
jecxz
cmp
adc
fmuls
push
lds
out
add
repnz
and
sbb
jp
icebp
cltd
dec
mov
dec
cmp
cld
std
ja
jnp
sbb
cwtl
jge
mov
inc
in
test
es
cmc
mov
pop
fcompl
movsl
dec
or
pop
in
ret
jae
xchg
nop
xchg
dec
add
iret
inc
in
gs
lahf
cld
push
hlt
sbb
into
sub
ljmp
cmpsb
frstor
push
in
fistps
cltd
mov
dec
nop
push
call
aam
sbb
push
mov
leave
ss
pop
ret
adc
test
mov
sub
or
pop
mov
pop
xorl
mov
div
imul
push
jo
cmp
scas
sbb
fsubrl
aas
mov
or
xor
movsl
or
adc
es
js
jnp
add
fistpll
mov
cmp
dec
mov
xor
fcmovb
ret
xor
pop
mov
add
push
lret
lods
add
push
clc
in
pushf
sbb
dec
cmp
and
divb
daa
imul
push
pop
ds
daa
imul
jecxz
in
jge
int3
int3
and
insl
daa
mov
jle
dec
inc
stc
sub
cwtl
jle
xchg
jns
cmp
fwait
adc
daa
xchg
ljmp
mov
pop
mov
sbbb
and
clc
mov
mov
and
mov
pop
sbb
gs
xchg
pop
je
xorb
sbb
scas
push
sbb
in
mov
jb
mov
rcrl
ja
iret
out
push
sub
icebp
popa
or
jmp
mov
inc
dec
stc
stos
fwait
xor
daa
jge
jno
pop
mov
lret
adcb
mov
test
mov
pop
mov
sub
add
testb
mov
nop
ss
jge
xor
mov
mov
scas
loop
sti
lcall
sbb
cld
out
insl
lcall
jmp
mov
imul
outsb
negl
or
insl
iret
mov
jecxz
in
or
adc
inc
push
or
sarl
add
repnz
pop
push
xor
fdivr
push
popa
cmp
movsb
lods
out
mov
mov
push
push
xor
dec
cmp
ficomps
setge
and
inc
mov
cltd
xor
lahf
loope
fcmovnb
mov
xchg
divl
pop
or
gs
jne
cs
push
pop
in
inc
push
in
stos
jnp
mov
loopne
mov
jne
mov
std
in
lcall
mov
jnp
sbb
nop
lea
insb
fs
cmpsb
xor
or
push
int
jbe
rcr
or
add
adc
mov
sub
subb
dec
jmp
aam
out
pop
jae
js
cmp
lahf
rcl
cmp
inc
adc
xor
arpl
fimull
std
js
sti
lret
adc
mov
popa
jnp
ds
mov
sbb
leave
dec
stos
js
add
popa
loope
cmp
jl
pop
lds
lret
cli
je
cwtl
test
or
ds
jo
cmp
xchg
jno
mov
in
out
in
xlat
shll
je
dec
inc
call
das
imul
into
aad
sub
aam
push
push
and
inc
dec
call
pop
cmc
pushf
aaa
mov
imul
mov
jne
dec
fistps
cmc
lods
mov
aam
dec
popa
in
fwait
mov
sub
and
gs
xor
cmp
cli
lret
test
repz
dec
xchg
or
xor
cli
push
in
push
add
xorb
sub
push
mov
xlat
cmp
cwtl
jecxz
jb
shll
inc
or
jnp
mov
scas
aad
in
dec
out
fldl
inc
pop
push
mov
xchg
sbb
aam
rorl
bnd
cmp
sbb
or
std
pop
xchg
push
xchg
sbb
add
inc
lcall
test
pop
stos
mov
adc
dec
inc
aaa
test
dec
jecxz
inc
and
jmp
pusha
push
sub
push
and
sbb
scas
imul
jne
rolb
test
sub
adc
and
jle
rclb
lds
xor
pop
inc
ret
fstl
mov
add
lret
fimuls
repnz
ljmp
popf
mov
xchg
adc
roll
push
mov
ds
cli
lock
or
sbb
int
hlt
sbb
es
cmpsb
mov
daa
das
repnz
test
loopne
sub
das
jns
dec
dec
icebp
add
mov
xor
and
sub
mov
push
je
pop
pop
dec
lret
mov
shrb
out
push
dec
sub
out
popa
aas
lretw
outsb
pop
int3
sbb
imul
dec
aaa
repnz
dec
pop
outsl
outsl
iret
cld
mov
ret
add
in
stc
adc
sahf
inc
lahf
inc
pop
out
test
aaa
repnz
pop
rolb
cmp
jp
add
jo
je
or
rcr
flds
dec
mov
mov
jne
test
xchg
dec
jecxz
and
push
sbb
cmp
outsb
and
dec
les
sbbl
stc
mov
and
fnstcw
cs
mov
jns
mov
xor
mov
mov
add
aad
cmp
cmp
mov
out
xlat
ds
cmp
pop
and
repz
cltd
aam
push
int
or
xchg
xchg
in
addr16
jo
addb
mov
leave
xor
ret
inc
cmp
push
jle
add
xor
mov
fcmovne
inc
out
cwtl
cld
in
and
outsl
pop
pop
inc
ljmp
test
loop
and
xor
repz
js
in
inc
jo
into
xchg
popf
stos
and
cmpsb
dec
enter
mov
add
or
push
addl
scas
jnp
cmp
xchg
insb
fdivl
rorb
jg
fs
pop
xchg
in
adc
sub
or
mov
add
addr16
mov
scas
inc
popa
mov
cmp
mov
and
xor
add
jmp
sub
arpl
cmp
mov
push
cmp
and
sbb
test
mov
imul
pop
lret
fists
jae
adc
sub
push
in
xlat
js
inc
xchg
fwait
mov
shlb
inc
test
push
nop
test
xchg
rolb
in
push
imul
jbe
and
fisttps
inc
mov
in
cmp
xchg
add
xor
loop
je
inc
gs
jp
sbb
xchg
test
xor
sbb
mov
xor
cmp
mov
xchg
mov
into
cmp
adc
sbb
daa
icebp
cmp
nop
stos
jo
inc
adc
loopne
inc
inc
mov
icebp
jae
aad
or
ret
int
sbb
out
pop
jge
and
stos
jo
push
lds
pop
ret
cwtl
pop
jge
pop
and
lret
pop
xchg
mov
cli
jbe
or
decb
out
pop
push
imul
dec
fstp
ja
add
mov
cmp
cmp
mov
pop
mov
hlt
mov
push
mov
xchg
xor
xchg
xor
scas
cld
or
ss
dec
sbb
mov
mov
movsl
jmp
add
sahf
gs
jns
or
lods
fistpll
dec
adc
scas
fcompl
inc
and
sub
lods
in
addb
sub
pop
inc
jg
xchg
pop
icebp
push
sub
lock
pop
cmpsb
ss
sbb
cld
mov
inc
mov
jns
sub
fsubr
nop
shll
into
out
inc
pop
sbb
loope
xchg
jne
xorb
jmp
aad
sti
popf
mov
xchg
repz
mov
push
cltd
out
sub
mov
arpl
adc
pushf
out
jns
add
mov
andl
mov
daa
push
xor
xor
loop
jne
outsl
inc
push
mov
jle
sbb
jl
mov
clc
lods
mov
mov
push
sbb
ficompl
add
loope
xor
outsb
out
xchg
mov
xlat
dec
sub
jmp
mov
andl
popa
cmp
fiadds
add
mov
xchg
jne
test
jno
mov
je
add
repz
cmp
adc
cs
cld
inc
cmpsl
sub
sbb
ret
push
iret
aas
mov
icebp
and
sar
ljmp
push
add
sbb
cltd
aaa
sub
xchg
mov
stc
xchg
out
pop
cltd
test
mov
hlt
cmpl
add
adc
sub
mov
xchg
test
pop
imul
sub
cmp
xchg
sbb
fstps
xchg
cld
testl
or
pop
jb
jecxz
in
fists
movsb
aam
mull
stos
es
leave
inc
and
or
xchg
pusha
and
cmc
out
adc
divl
xor
or
imul
je
data16
icebp
sub
inc
jae
pop
adc
push
push
pop
out
cmp
imul
add
pop
in
jg,pt
push
adc
push
ljmp
adc
fistpll
xor
addb
mov
jmp
sbb
test
xchg
and
xchg
int3
push
xor
fs
fldl
mov
rcrb
lock
mov
fcompl
or
sub
sbb
sbb
jae
lahf
and
in
pop
ret
xchg
mov
inc
sub
add
mov
cmp
dec
sbb
dec
mov
dec
add
les
bound
inc
insb
jb
in
notb
ret
mulb
fstps
out
notl
or
mov
fmull
mov
or
dec
loopne
dec
dec
pop
aad
and
mov
or
inc
sbb
cs
or
jmp
fnstcw
add
enter
lcall
jp
popa
mov
dec
movsb
cmp
adc
hlt
dec
xor
in
imul
ror
push
aam
or
pop
pop
jge
push
fimull
xor
fwait
int3
inc
and
decb
mov
orl
call
add
sub
repz
mov
and
jne
mov
imul
lea
push
xchg
mov
fnsave
dec
les
cmp
popf
xor
leave
mov
std
push
repz
and
add
std
dec
jle
mov
shll
push
sbb
pop
loopne
lea
mov
push
or
lea
aam
xchg
mov
add
addr16
xor
sbb
pop
push
sqrtps
movsl
cld
add
clc
fstpt
pop
int3
aaa
xchg
mov
ja
ret
lcall
in
xchg
pop
in
cwtl
mov
push
fcomps
push
xor
jecxz
inc
and
lds
mov
pop
hlt
aam
into
mov
int
cmc
sub
dec
in
addl
in
sbbl
gs
and
adc
bnd
mov
mov
push
int3
inc
fcmovne
or
ret
pop
mov
and
mov
loop
lods
cs
hlt
jge
xchg
mov
popa
ja
adc
dec
lods
or
push
xchg
xor
mov
into
mov
sub
movb
xchg
cld
movsb
sti
jnp
pop
push
inc
push
jp
jns
mov
scas
cmp
ror
dec
xor
popf
pop
push
xor
add
call
xor
jge
xchg
outsb
scas
pop
leave
sub
pop
inc
lea
fwait
or
lods
adc
mov
test
hlt
xchg
test
jge
add
pop
push
pushf
mov
repnz
cmp
sbb
sbb
decb
jg
mov
mov
push
pop
dec
into
jo
xchg
pop
imul
in
xchg
ret
jno
aas
push
xor
fldl2t
lret
es
push
dec
sub
mov
and
add
nop
mov
mov
mov
push
cmp
mov
mov
out
sbb
xchg
psrlq
cmpb
or
test
pop
cmpsb
ficoms
xor
testb
xorb
lret
pop
xchg
mov
fdivl
xchg
fidivrl
das
adc
and
dec
jmp
das
popf
mov
movsb
inc
jg
mov
dec
dec
mov
test
in
push
and
adc
outsl
aas
add
mov
mov
hlt
add
jecxz
shl
mov
fcomp
xor
mov
cmpsb
loop
jg
fisttpll
or
orb
xchg
stos
adc
std
stc
or
cli
fmull
mov
dec
mov
gs
cmp
pop
cld
lret
xor
stos
jbe
and
mov
adc
mov
pop
ret
repz
sub
test
mov
in
push
and
int3
sbb
out
push
sbb
daa
enter
loopne
data16
stc
cmpb
scas
cmp
pop
pop
cmp
push
lea
imul
stc
scas
jno
loope
dec
lcall
hlt
gs
sub
mov
xor
cwtl
cld
push
and
test
out
inc
jecxz
lds
movsl
xchg
xor
test
push
out
lret
adc
pop
sti
in
xlat
repnz
sahf
aad
test
mov
pop
jecxz
mov
in
stc
je
pop
js
sbb
scas
outsb
add
sbb
int3
cmpsb
notb
je
orl
inc
inc
arpl
fwait
push
sbb
idivb
jecxz
mov
mov
pop
pop
aad
mov
or
rorl
mov
mov
stc
and
stos
cltd
xchg
movsl
ljmp
xchg
repz
push
jl
test
pop
in
pop
in
je
ljmp
insl
js
outsb
sub
add
ret
ret
and
clc
push
nop
cmpsb
lock
sbb
adc
adcl
shl
adc
or
test
pop
dec
loopne
sbb
lahf
or
call
test
xchg
or
xor
cmpsb
xor
xchg
adc
inc
xor
shl
gs
mov
sbb
sbb
rorl
and
rorb
jecxz
fwait
popl
mov
jmp
cmp
push
sahf
rcrl
push
adcb
clc
pop
cmpsb
jns
dec
test
fdivs
icebp
mul
inc
icebp
call
or
xchg
add
icebp
aaa
cmp
mov
jns
dec
push
sbb
decl
cmp
std
testl
lods
jns
sahf
sbb
or
daa
testb
and
aas
jp
subl
cmp
sti
jg
fdiv
outsl
jmp
aad
insl
lods
mov
sbb
cmp
mov
xor
push
arpl
xlat
ftst
nop
in
in
push
cs
lcall
outsl
js
bsf
insb
push
popf
mov
fcomps
in
jp
sbb
hlt
sbb
cmpb
push
mov
ret
or
push
movsl
dec
mov
stos
test
xchg
test
inc
cmp
jns
fstcw
test
mov
mov
dec
daa
repz
into
add
sar
outsl
and
test
popf
jg
cmpsl
xor
sub
sbb
add
or
mov
push
rcr
sbb
mov
ret
sbb
stc
into
mov
jbe
lock
roll
lret
inc
cmp
repnz
movl
mov
mov
jmp
ja
negb
into
lea
pop
lods
lcall
popf
fistpll
cli
insb
call
pop
pop
rcrl
pusha
ds
jb
cmpsb
in
or
iret
fsts
sub
xor
lcall
ljmp
or
and
mov
mov
decl
jo
mov
loope
repnz
sub
sub
icebp
adc
mov
frstor
addr16
loope
mov
and
jnp
cmpl
dec
arpl
bound
inc
push
mov
xchg
inc
clc
mov
lcall
inc
add
mov
cmp
sub
insl
or
ffreep
bound
push
xchg
push
scas
fs
mov
push
mov
inc
cld
mov
hlt
jne
test
stos
sub
cld
jno
push
jl
or
sbb
cmp
jp
and
sbb
aas
jle
pusha
mov
jb
xchg
sbb
mov
js
lret
dec
xchg
inc
das
mov
cmp
scas
sti
add
push
fs
imul
sti
test
lcall
aad
inc
repz
enter
pusha
or
sti
adc
sti
leave
inc
rcrl
xchg
ret
add
mov
push
dec
add
push
daa
nop
fucomp
push
imul
inc
mov
or
add
push
test
xchg
adc
dec
sbb
fwait
add
popl
js
xor
divl
dec
mov
pop
icebp
test
pop
inc
jmp
or
xor
aaa
and
jle
push
pop
shll
fldl
lret
or
xor
pop
xchg
or
cmc
jb
cmc
xlat
aaa
inc
pop
pop
cwtl
loopne
loopne
mov
or
mov
xchg
aad
outsl
sub
pusha
leave
mov
xchg
sub
fnstsw
add
pop
std
mov
or
push
jmp
and
cld
lea
mov
inc
sub
pop
cmp
cmpsb
pop
insl
ret
test
loope
inc
cltd
sahf
xor
jge
insl
cld
movsl
jecxz
fwait
mov
cmp
push
or
das
add
stos
mov
arpl
mov
fnsave
adc
cmp
sbb
xchg
movsb
xlat
repnz
or
sahf
mov
push
push
cli
lods
jbe
iret
mov
cmpsl
sub
movsl
and
hlt
cmp
xchg
or
loop
sbb
and
mov
lret
std
add
mov
repz
aas
shll
inc
into
mov
mov
mov
mov
leave
mov
outsl
andb
out
push
add
dec
dec
sarb
fnstsw
dec
enter
push
out
aaa
mov
pop
xchg
jo
inc
decb
inc
loope
mov
repnz
cmc
pop
push
inc
xchg
mov
pop
pusha
shll
test
outsl
jno
mov
stos
mov
push
scas
lret
rcll
mov
in
fwait
pop
mov
inc
sti
cld
pusha
rcll
fptan
int
cmp
or
xchg
fs
in
in
call
xchg
and
and
jo
nop
pop
jg
pop
clc
jp
scas
inc
sbb
add
pop
cmp
fldenv
jb
mov
lret
jnp
mov
cmp
leave
add
inc
hlt
adc
stos
push
mov
aaa
mov
hlt
imul
mov
jmp
out
mov
leave
xor
adc
add
jmp
pushf
fdivrs
fld
popf
test
adc
ss
mov
pop
daa
jl
in
imul
add
jnp
in
inc
xchg
enter
pop
push
mov
fsubl
xchg
mov
mov
loope
inc
and
adc
mov
stos
or
mov
push
jns
test
jne
cmp
inc
push
inc
mov
inc
mov
scas
lahf
mov
push
add
jg
xor
rorl
pop
pop
jl
xchg
popf
mov
test
ljmp
push
push
push
loope
lods
adc
dec
mov
movsb
xchg
gs
stc
cld
jb
push
decb
ja
in
subb
stos
in
sahf
loope
out
mov
mov
and
xchg
mov
lds
in
add
addr16
and
sbb
dec
inc
xchg
cmp
ficoms
cmp
adc
int
inc
aad
cmove
inc
out
mov
jmp
nop
lret
mov
lock
push
imul
cmpsb
fmuls
fldt
mov
sbb
sarb
mov
outsl
mov
ds
push
scas
mov
arpl
mov
aam
stc
jecxz
jmp
cmc
cmp
mov
xchg
in
std
jbe
dec
xor
inc
fidivs
cmpsl
xchg
pop
test
arpl
std
or
mov
hlt
pop
fcmovnbe
lahf
into
cmp
xchg
dec
movsl
aad
and
pop
fisttpll
sti
and
mov
add
scas
mov
jns
insl
in
subl
xchg
inc
call
fcoms
jae
inc
or
jge
mov
les
lods
cmp
adc
lret
stc
adc
adc
jae
xor
inc
xchg
push
xchg
frstor
loope
fildll
push
mov
xorl
lret
mov
bound
sbb
adc
add
cmp
push
test
repz
repnz
ljmp
jae
add
int3
stc
mov
cltd
int3
sbb
mov
sarl
cmp
les
xor
repz
sar
daa
addr16
xchg
xchg
xchg
dec
sti
sub
sub
jmp
in
pusha
inc
push
mov
lea
aas
cmpsl
cmpsl
add
lea
movsl
or
sub
mov
push
movsb
jge
cmp
push
cmp
imul
mov
adc
and
mov
inc
inc
repnz
int3
push
lret
add
jbe
cmpsb
lock
inc
pushf
sub
scas
lahf
jb
push
add
mov
push
adc
call
pop
cmpsl
push
add
mov
in
rclb
pop
adc
or
mov
lea
lahf
xchg
push
dec
inc
mov
mov
movsb
in
mov
lods
push
and
cmp
jbe
fistl
jne
fcoms
add
add
mov
pushf
fadds
jp
fdivr
nop
in
ret
pop
ror
jmp
mov
xchg
mov
cmp
dec
jbe
sar
enter
arpl
sbb
pop
push
mov
cmc
push
and
int
popf
push
sbb
into
xchg
addr16
loopne
and
mov
push
or
dec
jno
cmp
sahf
aaa
insl
addb
xor
fisttpll
jae
inc
push
cltd
stos
addr16
cli
push
jl
das
jecxz
scas
lods
ret
fldt
mov
sti
dec
fcomps
lds
out
fcoms
push
sbb
test
fisttpll
aas
dec
jge
lahf
loopne
push
pop
mov
inc
aaa
push
lds
jp
cmp
cmpsl
decb
pop
add
pop
push
clc
inc
and
and
aad
jp
js
mov
push
roll
enter
popf
fwait
jno
jl
mov
nop
lcall
stos
fidivrl
mov
push
cmp
jo
ret
and
mov
push
testl
lcall
fimull
pop
push
add
mov
cmpsb
adc
stos
into
push
lea
pushfw
mov
fdivl
lahf
dec
dec
jb
xchg
call
sub
mulb
jnp
jmp
fcmovb
push
sub
ss
daa
mov
sbb
imul
scas
xlat
pop
jno
je
adc
daa
outsl
std
push
incl
rcr
mov
xorl
cmpsb
push
dec
pop
popa
mov
call
fidivs
xor
sar
dec
lcall
dec
into
repnz
dec
jmp
sti
or
dec
mov
inc
ja
pop
adc
adc
dec
jns
jmp
adc
aaa
leave
or
cmpsl
in
and
push
pop
push
pop
bound
xor
mov
fisubl
cmp
loop
jp
stc
jnp
adc
sub
xlat
jge
mov
bound
inc
jg
cmp
xchg
xor
mov
jmp
into
mov
add
jno
xor
xchg
mov
adc
cmovnp
mov
or
inc
shrl
enter
sub
mov
sbb
lods
lock
js
cmp
cli
pop
jg
out
xchg
and
mov
add
pusha
adc
adc
stos
lods
mov
mov
add
movsl
and
fstpt
add
test
push
push
lods
xchg
jl
enter
add
enter
pop
inc
cld
into
jmp
inc
inc
sbb
and
sarl
andl
and
out
jg
lcall
cmc
bound
xor
enter
mov
jae
dec
fstpt
sbb
or
sub
daa
stc
cs
js
mov
repnz
cs
out
push
inc
mov
cmpsb
sahf
ss
lods
jns
push
or
hlt
fbstp
test
call
jne
lea
jle
lea
or
xchg
dec
dec
push
in
xchg
xchg
mov
mov
or
inc
lea
or
mov
push
aad
jns
xchg
pushf
fwait
les
or
adc
ds
fidivrl
prefetch
sbb
sbb
jl
out
leave
mov
das
cltd
jl
shl
lods
daa
int3
pop
and
daa
test
mov
cltd
push
cmc
les
or
pop
xchg
adc
push
xchg
xlat
loopne
jno
jmp
ds
loop
jl
xchg
je
push
lods
test
outsl
mov
add
push
mov
rorl
jmp
push
dec
dec
stc
mov
jge
mov
and
rcl
mov
fwait
pop
xlat
bound
loop
push
mov
pop
fldl
sub
outsl
fwait
nop
filds
in
ret
cmpsb
inc
cli
orl
cmp
pop
popf
push
lret
or
inc
cs
mov
mov
push
jns
mov
sarb
add
sar
pop
mov
or
stc
dec
mov
pop
ds
adc
lret
jb
dec
adc
ja
cmp
in
mov
fs
jo
into
cwtl
mov
and
mov
pushf
fs
dec
jle
or
test
mov
pop
adc
aam
fs
shrl
outsl
adc
in
leave
xchg
pop
dec
adc
popa
xor
shl
cmp
aas
cmp
fistps
pop
test
mov
imul
xchg
mov
mov
mov
mov
cltd
add
sub
fildll
lret
rolb
add
or
movsb
addr16
ja
in
xor
imul
dec
or
mov
das
or
xchg
icebp
jmp
cwtl
fs
sub
ljmp
sarl
int
int3
push
loopne
or
jbe
loope
daa
cmp
sbb
xor
mov
filds
sbb
sahf
aaa
in
mov
inc
lcall
xor
mov
inc
sbb
stos
mov
pop
lock
jae
and
enter
test
int
imul
js
pusha
sti
push
adc
mov
mov
ja
xlat
mov
subl
movsl
enter
mov
sbb
push
push
andb
sub
ret
int3
jecxz
cmp
adc
sarl
sbb
sbb
mov
mov
in
into
dec
inc
dec
push
jb
xchg
sub
hlt
mov
addr16
mov
lods
lods
mov
scas
stc
push
push
insb
inc
fucomp
mov
or
std
jmp
jb
mov
subl
mov
pop
inc
sbb
mov
insb
not
sarb
ljmp
sub
mov
push
ret
lcall
pushf
lock
push
roll
and
fcoml
popa
add
jecxz
lahf
arpl
es
sahf
dec
mov
push
inc
pop
cld
adc
fldcw
in
mov
jo
dec
push
push
mov
or
stc
hlt
jo
ljmp
inc
jecxz
enter
data16
sbb
mov
scas
popf
sbb
rorb
mov
loope
pop
mov
stos
insl
fstp
adc
pop
dec
xor
xchg
cltd
clc
push
sub
mov
sahf
addr16
push
push
pop
xor
cmp
mulb
jno
mov
call
dec
mov
sbb
add
out
mov
outsb
loop
es
aas
jecxz
and
pop
rcr
push
out
addb
das
inc
mov
ss
xchg
repnz
jp
lock
in
sub
lock
stos
jp
pop
and
dec
dec
pop
push
mov
shr
pop
push
adc
scas
repnz
jl
xor
fldenv
xchg
xchg
add
or
repz
jae
popf
inc
dec
dec
adc
push
fiaddl
cmp
pop
jno
sub
outsl
adcl
add
sarl
rcrl
or
xor
pop
gs
cmpl
fdivrs
mov
aaa
jnp
pop
hlt
fdiv
or
or
pop
mov
fnstenv
test
xlat
push
leave
test
add
out
and
lods
push
outsb
arpl
daa
call
in
add
xor
test
push
pop
fdivr
cmp
inc
dec
push
jg
xchg
pop
ljmp
xor
xor
jg
test
lock
cld
fadds
mov
inc
iret
push
dec
xchg
das
testl
cmpsb
push
call
mov
and
xor
xor
push
inc
and
mov
mov
and
movsl
dec
mov
sbb
test
rcll
int
xchg
xor
dec
dec
stos
sbb
out
pop
scas
adc
pop
jb
adc
add
rcrl
jg
cmp
fs
in
sti
adc
or
mov
cmp
mov
sarb
outsb
ss
roll
inc
scas
stc
ret
xchg
pusha
push
cmp
das
mov
mov
dec
enter
mov
mov
bnd
iret
aaa
add
stos
mov
sti
test
cmp
gs
fmull
call
lret
andl
out
lret
lahf
and
out
incb
test
jb
dec
shll
mov
mov
sbb
fldpi
lret
mov
ja
cmp
mov
dec
fwait
jo
inc
test
cmp
mov
mov
std
ja
cli
idivb
mov
xchg
test
loopne
das
leave
outsb
addl
lret
jmp
mov
repz
bound
cmp
sbb
imul
aas
jecxz
pop
lods
test
hlt
lods
imul
stos
lea
mov
arpl
adc
testl
add
call
and
icebp
dec
mov
loop
jecxz
insb
mov
scas
sub
add
or
lcall
sahf
push
push
jbe
push
sbb
pop
punpckhdq
lcall
pop
inc
push
rclb
bound
mov
sub
jae
or
je
aaa
nop
loope
push
sbb
push
int
jp
ss
sub
in
jo
cmp
scas
mov
push
repz
jns
fs
imul
insl
pop
jmp
in
inc
cli
adc
ds
sub
mov
js
in
push
push
pop
cmp
or
cmpsl
das
pop
or
sbb
sbb
arpl
loope
mov
mov
cmp
movsl
cmp
fmuls
sub
jmp
push
jmp
pop
push
adc
ds
add
repz
and
fiadds
out
adc
mov
lret
rcrl
mov
imul
popf
pop
mov
dec
mov
and
push
xchg
cld
outsl
jae
cmp
add
or
adc
jecxz
jle
dec
scas
or
pushf
add
es
frstor
loopne
mov
fldl
inc
adc
cmp
lock
xchg
mov
into
loop
jnp
pop
repz
xchg
mov
mov
mov
xchg
cmp
test
sti
dec
pop
inc
call
in
mov
popa
cs
shl
aas
mov
dec
cwtl
ret
int
sbb
outsl
ja
cmc
outsl
fdivl
fildll
lds
sub
test
in
cmp
test
daa
cld
xor
not
jbe
or
in
pop
sbb
jbe
test
fld1
imul
les
ffreep
jae
xchg
xor
mov
stos
filds
test
pop
inc
sub
mov
js
lods
adc
or
or
jo
imul
cmp
pop
sub
jmp
mov
jne
stos
xor
xorb
xchg
sub
mov
cmp
aam
int3
movsb
and
pusha
std
xchg
push
insl
sub
mov
fdivrl
mov
mov
int3
mov
cltd
cs
imul
lcall
sbb
dec
repz
push
rcr
cwtl
adc
lods
shlb
mov
outsl
test
sbb
dec
jnp
pop
hlt
push
pushf
sub
scas
push
lods
inc
push
mov
ret
inc
sbb
add
out
sbb
arpl
stc
int3
dec
aaa
mov
fisubs
jp
or
ret
mov
xorb
xchg
popf
lcall
verw
insl
setge
out
das
cltd
insw
imul
push
mov
lods
sub
mov
mov
hlt
mov
mov
mov
jecxz
xchg
or
and
dec
imul
push
add
mov
dec
cmp
or
ss
rcrl
inc
aad
fbld
mov
mov
cltd
mov
aad
jo
xor
dec
mov
sbb
leave
icebp
add
pmullw
sbb
pop
pop
sub
ret
divl
es
mov
pushf
adc
sub
push
mov
inc
mov
mov
mov
mov
push
or
test
jns
sub
inc
hlt
jno
cmp
xor
lock
add
lods
dec
jmp
inc
test
pop
push
lahf
ljmp
shrl
shr
nop
mov
xchg
mov
test
jns
push
lds
je
pop
pop
daa
push
xlat
sbb
cltd
cmp
enter
sub
add
inc
dec
fwait
mov
sahf
mov
push
repz
push
xor
stc
add
idivb
add
jge
cmp
cmp
imul
sbb
mov
std
dec
gs
daa
mov
mov
lock
xlat
pushf
mov
and
test
xlat
fcmovb
xor
imul
jno
add
jg
lods
daa
pop
sbb
jae
jle
inc
leave
imul
dec
lahf
scas
ljmp
xchg
xchg
cmp
daa
es
repz
xor
cli
push
bound
adc
inc
jmp
mov
shll
scas
jbe
sub
xchg
inc
push
sahf
mov
addr16
mov
andb
idivb
sub
mov
js
pop
pop
mov
mov
xchg
in
mov
cmpsl
movsb
mov
sub
mov
insb
lret
sbb
and
cs
mov
ficoms
pushw
add
andl
add
sub
inc
adc
dec
in
mov
mov
shlb
xor
in
pop
push
mov
adc
pop
sbb
dec
dec
cmc
lds
cmc
sub
dec
test
outsb
test
add
mov
add
ret
jo
xchg
jae
lds
cmp
cmp
sbb
orb
jp
dec
popa
je
push
mov
and
jp
inc
aas
ljmp
icebp
lods
dec
dec
pop
pop
cwtl
cwtl
adc
sbb
repz
jno
les
enter
je
xchg
mov
idiv
cwtl
insb
cmp
mov
das
scas
sti
repnz
lret
fimuls
ret
xchg
pop
int
stos
sarl
jb
inc
pop
push
xor
test
sbb
inc
insl
iret
sub
lret
push
pop
or
repnz
jg
mov
xor
nop
in
sbb
xchg
in
xor
sarl
test
ret
lea
test
imul
out
and
or
fldl
std
push
mov
xchg
and
pop
cmp
sbbl
cmpsb
aaa
rep
mov
out
rcrl
or
pop
mov
sbb
pusha
jbe
sbb
mov
jge
scas
addr16
push
imul
ret
and
jg
adc
pop
sbb
add
lahf
mov
xor
les
sbb
jp,pt
adc
nop
add
jmp
movsl
pop
aam
imul
or
inc
cwtl
jge
jbe
xor
ffreep
cltd
leave
les
lds
mov
fcompl
sub
or
dec
dec
loop
push
loope
cmc
mov
das
pop
mov
or
sub
sbb
push
icebp
movsb
dec
jecxz
mov
push
jecxz
rorl
jmp
add
fisttpll
pusha
hlt
or
xor
cmp
jns
lea
pop
mov
mov
test
lea
cld
clc
mov
and
outsl
xchg
insb
je
or
cmp
mov
insl
pop
popa
shl
lds
cwtl
cmp
dec
xchg
push
pop
and
sbb
lds
in
pop
daa
test
jo
mov
int3
fdivl
or
cwtl
xor
push
push
ja
jge
rorb
out
es
bound
cmp
push
sbb
jb
pop
mov
sub
clc
pop
push
sbb
es
pop
je
mov
mov
cmp
push
xor
out
inc
mov
stos
movsb
jecxz
adc
mov
push
sub
outsb
cld
insb
mov
loopne
add
adc
dec
incb
pop
mov
push
and
cmc
sahf
pop
into
xor
push
leave
adc
mov
fdivl
pop
add
push
repz
push
lret
fucomi
in
xor
insb
add
in
cmp
xor
outsl
fprem
repz
sub
stc
ret
mov
dec
add
cmc
sbb
lock
push
jae
fcoml
lds
gs
pop
test
push
add
sar
jnp
inc
fwait
in
sbb
mov
cmc
cmpsb
add
mov
ret
and
cmpsb
pop
cmp
inc
jne
mov
jns
add
sarl
mov
dec
mov
pushl
faddl
ja
sbb
xor
gs
int3
test
lock
mov
ret
mov
sub
xor
out
scas
jnp
fnstsw
sahf
outsl
fucomp
std
clc
call
aad
sub
xor
stos
and
imul
adc
or
incl
mov
xor
push
push
add
rcll
mov
ds
es
xchg
mov
cltd
dec
mov
into
cmp
add
jae
sub
sbb
adc
adc
push
enter
inc
inc
es
je
test
repz
mov
mov
ljmp
inc
lds
push
out
hlt
sbb
add
jbe
mov
xchg
mov
sarl
test
xchg
push
in
cwtl
mov
inc
mov
movsl
lret
mov
lds
pop
pop
insl
adc
lea
xor
insl
mov
xor
cmp
hlt
xchg
insb
aam
xchg
sbb
rorl
sub
jno
sub
bound
push
imul
mov
jno
xchg
popa
ret
xchg
loop
xor
pop
xchg
jle
fildll
push
dec
or
inc
pop
imul
es
in
and
jne
add
jecxz
and
addr16
jb
fsub
pop
gs
jle
call
lret
mov
es
mov
ret
fwait
insl
sub
fisubrs
arpl
or
lret
pop
iret
cld
push
jo
dec
and
mov
adc
mov
jl
aas
xchg
ljmp
loope
and
mov
dec
dec
and
push
int
sbbl
clc
xchg
mov
ret
lea
xor
adc
cmp
aam
ss
ret
jmp
pop
insb
adc
dec
frstor
mov
or
popa
mov
xchg
push
insb
xor
cmp
mov
cmc
outsl
loope
std
insl
sbb
add
sub
xor
out
es
leave
scas
out
pop
add
clc
and
jmp
lods
jle
jp
cmp
adc
fiaddl
pop
icebp
push
or
xchg
adc
or
test
mov
jo
or
push
inc
dec
cmpsb
mov
aad
inc
jmp
js
sbb
sub
lret
lds
je
je
xchg
ficomps
inc
popf
or
mov
xchg
or
pop
and
mov
sbb
cmpsb
data16
sub
and
iret
and
lock
push
repnz
push
xor
fdivrs
ja
cmp
adc
scas
sbb
test
mov
mov
lret
leave
xchg
lock
sub
mov
ficoml
jmp
pop
lahf
ja
xchg
lea
mov
add
stos
sbb
roll
scas
adc
pushf
decl
jns
lds
gs
mov
fcmove
cmp
je
mov
loope
mov
call
mov
fdivl
in
xor
and
fs
int3
in
adc
or
stos
outsl
dec
mov
dec
outsb
ss
int3
pop
imul
push
mov
cwtl
pop
xchg
mov
std
loopne
test
test
pop
ds
dec
dec
ffree
divb
cltd
repnz
jecxz
imull
enter
sbb
sti
lret
lea
xchg
mov
fadds
rcrb
rcrl
es
pop
cltd
inc
cmp
ds
pop
ret
mov
cltd
mov
cmp
xchg
int
and
jecxz
add
pop
test
sti
les
push
mov
dec
xchg
push
and
dec
mov
aad
ficompl
in
adc
arpl
dec
and
jl
pop
push
xchg
push
aas
inc
iret
ss
push
sbb
arpl
adc
mov
shlb
sbb
imul
mov
inc
sarl
js
lea
nop
mov
call
sbbb
pop
xor
aad
aaa
mov
das
ljmp
dec
jg
push
pop
mov
xor
iret
out
push
xchg
add
rol
adc
mov
ds
cli
dec
pop
lahf
cmpb
cwtl
cmp
xor
test
push
sub
das
mov
sbb
xchg
inc
leave
enter
movsb
sbb
xor
psrld
cmpsb
jg
pop
jmp
push
movsl
aad
mov
mov
stc
jmp
push
pop
adc
add
cmpsl
jmp
xor
arpl
push
xchg
data16
insb
push
mov
ds
lods
fsubs
lahf
aas
frstor
ja
mov
mov
jl
lret
add
jne
or
aaa
mov
or
cltd
mov
mov
cwtl
sahf
cmp
in
in
call
push
or
xchg
dec
into
push
xor
inc
and
inc
popf
mov
mov
out
xchg
out
push
cmp
fildl
mov
adc
mov
mov
mov
inc
jecxz
cmp
fiadds
add
mov
dec
xchg
xchg
xchg
or
xchg
test
mov
cmp
dec
inc
movsl
dec
fldenv
add
repnz
aam
rolb
hlt
xchg
inc
cmp
cmp
cmpsl
mov
ret
inc
lods
pop
into
or
nop
push
stos
pushf
mov
les
jb
repnz
adc
mov
ds
mov
cmpsb
jl
mov
mov
test
push
mov
adc
adc
aas
lea
jge
sbb
sub
push
and
jo
nop
dec
add
mov
sbb
je
mov
inc
inc
jns
or
faddl
mov
mov
fidivrl
lds
aam
mov
mov
sbb
push
repz
pop
das
cmp
mov
mov
xorb
test
stos
out
std
ja
inc
pop
add
aaa
outsb
xchg
adc
mov
in
stc
outsb
mov
es
jbe
fdivs
pushf
ljmp
inc
insl
mov
test
xchg
sub
inc
popa
arpl
mov
push
jmp
xchg
cmp
data16
xchg
xchg
sahf
adcl
cmp
mov
outsl
cli
outsb
dec
jl
jne
ret
out
sub
cmp
insl
jbe
pop
rcrl
jge
das
out
ftst
xchg
imul
push
and
sbbb
loop
push
jns
jb
xor
out
scas
adc
jecxz
mov
pop
pop
ljmp
xchg
push
jne
push
lods
test
arpl
cmp
cwtl
sub
fsubp
mov
cmp
repz
ds
in
negl
mov
xchg
aaa
cmp
ret
imul
aad
mov
bound
xor
inc
xor
fnstenv
stos
in
ficompl
sbb
mov
loop
stos
xchg
mov
jmp
jo
hlt
mov
sti
das
pop
scas
into
es
mov
or
inc
dec
cmp
inc
gs
jmp
push
xor
sbb
ljmp
push
and
sbb
outsb
mov
loopne
mov
sbb
pop
in
inc
push
iret
js
js
shll
into
jmp
leave
sbb
lret
push
loope
or
inc
aaa
mov
stos
call
mov
loope
incb
jo
mov
dec
ds
xor
and
push
xchg
mov
pop
fldcw
push
hlt
rorl
aad
lret
std
or
cmp
xor
aas
fstl
jmp
lds
adc
mov
imul
pop
push
mov
frstor
fisubrs
or
dec
sub
movsb
jecxz
fiaddl
stos
sti
xor
sbb
addl
fwait
in
dec
mov
push
pop
out
rorl
jne
xchg
fwait
popa
pop
push
xor
fcomp
adc
leave
lret
inc
insl
mov
in
jns
inc
fidivrl
or
push
adc
sbb
sub
stos
cmpsl
adc
fcmovbe
cmpsb
sbb
fsts
icebp
outsl
imul
add
mov
mov
ffree
push
inc
cmp
push
cmp
adc
mov
stos
sub
test
popa
mov
dec
push
xchg
scas
mov
sbb
sub
mov
cmp
sbb
mov
mov
pop
mov
jo
sbb
hlt
int3
shrl
add
call
dec
lea
pop
cwtl
aam
cmp
adc
mov
loop
out
cmpsl
rcr
loope
add
pop
ja
lret
add
aaa
xchg
les
repz
out
pop
int
adc
popf
sub
jmp
ret
pop
rorl
ficompl
or
cmpsb
mov
in
or
pop
lahf
popa
ficoms
add
jns
aaa
int
pop
pop
rorb
sbb
fwait
jno
lahf
push
shlb
dec
add
mov
fnstcw
popa
notl
adc
cmpl
bound
push
cltd
xchg
push
pop
pop
arpl
sti
data16
pop
fld1
xchg
adc
out
fcompl
hlt
xchg
push
xchg
lea
fcompl
mov
mov
sub
stc
adc
mov
inc
inc
dec
add
mov
mov
push
mov
cmp
lods
or
lea
call
push
jb
shll
cli
das
xor
sub
push
pop
aas
fsubrl
jae
jns
push
dec
inc
nop
repnz
mov
sub
jecxz
sub
aad
cld
nop
cmp
arpl
add
cmp
mov
or
mov
lret
lock
dec
mov
dec
mov
jl
cmovl
adc
xor
xchg
mov
fildll
pushf
pop
and
pop
popa
cwtl
cmp
movsl
and
cmp
inc
in
aad
mov
sub
add
dec
mov
addr16
mov
push
sub
and
inc
mov
test
inc
xor
scas
or
mov
dec
scas
cmp
jbe
add
xor
movsb
mov
hlt
and
hlt
mov
insb
imulb
xor
clc
and
sub
jle
sti
jl
mov
sbb
xlat
add
xor
jle
jnp
inc
add
cmp
xchg
dec
pop
lods
mov
into
push
mov
dec
mov
shlb
arpl
lret
ss
daa
mov
clc
xchg
or
jb
sbb
xorb
out
sbb
pop
xchg
mov
repz
cltd
fs
faddp
sahf
shll
ljmp
sub
push
and
call
xchg
sbb
addb
push
scas
pop
cli
sub
mov
mov
mov
shll
pop
xor
out
push
mov
daa
cmp
lea
scas
call
pop
cltd
inc
int
dec
ficompl
fiaddl
fsub
arpl
int3
xchg
push
loope
test
mov
pushf
dec
jnp
cmp
out
mov
jmp
jle
mov
inc
mov
test
ja
inc
push
adc
lahf
add
add
hlt
icebp
pop
sbb
push
bound
shl
sub
jne
pop
mov
outsl
mov
jo
ror
or
cld
arpl
popa
pop
mov
lods
push
inc
or
add
pop
movsb
stc
mov
or
repnz
sahf
in
addr16
mov
xor
add
cli
ss
testb
hlt
cmpl
mov
mov
and
or
dec
dec
jg
ffreep
jae
aam
rolb
mov
adcl
sub
fidivl
std
jne
out
arpl
cld
mov
cmp
pop
mov
in
popf
lret
shll
push
jecxz
adc
ds
movsbl
fadd
push
and
fdiv
fnsave
dec
jl
out
addl
lods
cvtpi2ps
push
aas
jae
out
cmc
dec
xor
mov
mov
jge
fstl
cmp
inc
divl
mov
cltd
fldcw
iret
sub
test
repz
push
cli
outsl
shlb
in
sbb
stos
stos
xchg
stos
jo
sub
fisubl
add
sbb
jnp
xchg
sbb
inc
outsl
cltd
popf
mov
add
mov
pop
push
jecxz
and
xor
call
mov
jmp
add
pop
sub
pop
jge
clc
xchg
or
lea
into
jo
push
ljmp
loopne
mov
scas
xchg
jp
mov
or
roll
xorps
imul
adc
ret
adc
xchg
stc
sahf
jnp,pt
out
out
mov
and
in
pop
add
push
test
out
inc
mov
and
add
mov
push
negl
jl
xor
hlt
xchg
fistps
dec
addr16
call
cmp
out
stc
jno
jnp
enter
ljmp
sbb
ret
push
fs
sbb
in
in
test
std
insl
mov
sub
cwtl
outsl
fnstcw
es
inc
pop
xchg
jnp
lcall
loope
mov
dec
mov
jb
ficomps
stos
sar
adc
sbb
mov
lahf
jmpw
push
inc
push
mov
pop
adc
or
add
xchg
lock
int3
jbe
xlat
pop
inc
mov
mov
dec
mov
outsb
inc
test
xor
loopne
sarb
mov
add
add
loopne
cwtl
fiaddl
xchg
shlb
addr16
test
icebp
pop
mov
leave
lcall
enter
xor
sub
lret
bound
cli
arpl
add
jmp
loope
int3
test
mov
pop
and
notl
dec
pop
mov
add
mov
into
sahf
fdivs
rcr
sub
out
sub
adc
mov
gs
stos
or
mov
jle
cmp
fisttpll
adc
mov
das
push
scas
mov
in
jg
push
aad
stos
sbb
jmp
or
xchg
add
lahf
mov
push
xchg
xchg
add
sti
inc
mov
cmc
outsb
outsl
cmp
dec
mov
es
adc
mov
mov
inc
in
popa
push
mov
dec
call
addl
inc
rcrl
ret
mov
sbb
dec
jbe
or
pop
lock
cmc
mov
loope
out
inc
insb
fisttps
icebp
and
cmc
gs
push
inc
xor
fldenv
mov
jb
fisubrs
pop
mov
cmp
es
fdivl
pop
add
or
adc
adc
adc
mov
insb
dec
or
cmp
pusha
outsb
pop
mov
leave
in
mov
mov
inc
fsubrl
pushf
dec
xchg
add
mov
jecxz
les
jae
jg
mov
shll
jg
pop
rcll
lret
into
add
repz
mov
dec
push
add
mov
or
fs
jle
and
jecxz
sarb
cmc
stc
out
in
jae
push
stos
mov
sarl
push
addr16
movsl
int
movsl
aam
test
pop
sub
xchg
xchg
sahf
iret
xor
cmpsl
subb
push
adc
imul
out
inc
xchg
hlt
pop
jnp
cmpl
sub
add
rcr
cmp
lcall
or
sbb
fstp
test
call
jp
insl
test
dec
std
push
pop
mov
mov
test
pushw
pusha
es
or
out
lcall
sub
push
pop
pop
push
mov
xchg
in
xlat
subb
pop
cmp
les
out
inc
popf
sarl
scas
shl
addb
add
push
adc
add
shl
popa
xor
xchg
scas
inc
mov
inc
arpl
scas
dec
cli
pop
push
scas
fisttpl
loopne
jle
cld
fxch
or
cltd
clc
mov
leave
mov
cltd
insb
xchg
lahf
int
leave
mov
xchg
xchg
add
push
push
mov
or
xchg
push
iret
mov
sbb
mov
out
sti
or
cmp
jb
push
pop
or
push
jmp
push
lcall
loop
xchg
dec
sarl
dec
and
imul
shr
cmpsb
cmp
ss
mov
push
adc
hlt
movsb
iret
or
cwtl
or
test
repz
and
push
inc
repnz
cmp
movl
in
fsubrs
mov
or
lods
mov
cld
adc
or
mov
xchg
jne
mov
pop
aad
rcll
ja
xor
sarl
fisubrs
push
and
sub
lds
out
shrb
out
aas
inc
push
das
lret
je
arpl
xchg
pop
lahf
push
pop
pop
jecxz
or
rorb
xchg
pop
movsb
mov
mov
in
in
ss
outsl
ds
jno
mov
push
insb
hlt
xchg
add
pop
pop
xchg
loopne
lret
or
mov
lret
pusha
jge
mov
mov
call
dec
in
es
add
push
mov
mov
inc
cld
inc
push
daa
sub
dec
xchg
stos
lods
jae
loope
mov
scas
xor
xor
and
out
mov
in
mov
jbe
add
lahf
mov
push
sbb
addr16
frstor
push
and
and
dec
inc
jl
cwtl
jecxz
mov
or
gs
add
subl
scas
push
pushf
mov
mov
and
add
call
or
pop
mov
arpl
nop
icebp
call
mov
xchg
dec
or
lock
lea
fimuls
push
fisubrl
jo
into
xchg
lret
adc
xchg
rorb
cmpl
cmpsb
jp
adc
add
ret
mov
daa
or
and
test
mov
loopne
jb
jge
dec
bound
aas
sub
rolb
data16
push
jl
pop
push
into
mov
xchg
lods
or
push
cltd
pop
rcrb
mov
jno
mov
cmp
or
sbb
push
in
jecxz
pop
in
daa
xchg
inc
cmp
inc
fldcw
cmpsl
sbb
inc
mov
jbe
fistpl
fiaddl
lods
push
jge
push
cmp
or
enter
hlt
jl
pushf
les
mov
mov
cmc
adc
shlb
jae
notl
mov
lcall
lods
clc
fsubr
or
aas
sbb
popa
cmp
repz
mov
sub
mov
mov
aam
dec
xchg
adc
rorl
adc
sub
mov
int
xlat
and
outsb
icebp
ja
mov
add
das
pusha
mov
and
fbstp
ret
pop
and
aaa
sti
ret
ja
int
stc
test
mov
inc
sub
fnclex
add
movsb
stos
jns
cmpsl
addl
mov
xchg
add
dec
stc
jne
in
cmpsb
pop
or
int3
xor
mov
add
mov
lret
inc
pop
jp
jl
into
push
or
sbb
inc
xchg
in
xchg
inc
sti
outsl
jge
pop
cwtl
xor
push
rcll
xchg
jbe
push
lahf
jl
ds
fcoms
call
inc
xchg
sub
and
rcr
clc
pop
push
xor
xchg
mull
mov
xchg
mov
dec
sbb
and
adc
cmp
adc
xor
js
xchg
scas
dec
or
daa
lret
sub
cs
int
sbb
fists
sub
push
imul
int3
cmp
popa
mov
stc
cltd
lods
lods
scas
fildl
pop
lahf
push
stos
xor
cmp
lahf
mov
pop
dec
pop
fsts
add
mov
sub
and
cltd
lds
push
mov
add
push
mulb
push
dec
popa
imul
mov
inc
push
cltd
das
dec
adc
push
ret
idiv
fwait
xor
and
mov
sahf
mov
rcr
mov
mov
popa
mov
sub
inc
fnstcw
in
jnp
push
jle
in
pusha
sbb
xorl
das
dec
sub
mov
lds
scas
outsb
jge
and
mov
rorb
add
popf
or
lods
push
enter
ror
inc
sbb
sub
sub
mov
and
cmp
xchg
or
pop
xor
lcall
in
xchg
ret
xchg
loope
cmp
pop
or
and
stos
push
push
ds
dec
add
jo
lods
out
xchg
out
fcompl
sbb
and
cmc
out
ss
ss
pop
leave
or
pop
jp
pop
mov
enter
add
pusha
loop
push
out
mov
mov
mov
nop
int
cmp
pop
jg
fldenv
jg
push
mov
popf
add
cmc
mov
int3
fsub
bound
or
xor
cmpsl
dec
stos
lret
push
rorl
sbb
sub
push
pop
ds
shll
mov
and
add
jg
push
push
mov
jno
sub
mov
adc
mov
movsl
sahf
jg
imul
int3
dec
leave
jae
dec
cmp
sbb
insl
mov
mov
pushf
adc
mov
idivl
jae
jo
inc
cltd
pop
inc
pinsrw
xchg
xor
repz
add
imul
push
inc
ret
sahf
cmp
ss
in
roll
dec
push
xor
ret
jmp
lret
daa
ja
mov
dec
notb
or
xchg
add
adc
sbb
inc
xchg
cmp
sarb
mov
xorl
xchg
jo
fisubs
xchg
lcall
jno
mov
xchg
add
inc
enter
jb
lods
jle
mov
sbb
icebp
jb
xchg
jns
imull
lods
shll
cmp
jb
movb
in
mov
mov
push
je
cld
js
xlat
enter
mov
aas
jecxz
inc
into
sbb
push
and
adc
adc
gs
or
push
jno
jae
dec
scas
xchg
gs
test
out
arpl
adc
mov
push
or
mov
gs
fldln2
fadd
js
cltd
xchg
jg
adc
imul
fldcw
lods
add
out
aaa
mov
adc
inc
mov
scas
pop
mov
scas
dec
shlb
imul
fwait
mov
inc
mov
sbb
mov
insl
lds
movsb
je
out
out
mov
ret
sbb
mov
out
pushf
loopne
fnstsw
ja
pop
arpl
or
int
push
xchg
pop
and
sbb
push
gs
rep
push
shlb
rcll
data16
lds
lret
dec
inc
sti
jns
push
mov
ffreep
addr16
gs
inc
cvtpi2ps
scas
out
sub
dec
mov
sarb
dec
outsl
jbe
shll
into
add
push
rcr
push
aas
inc
jno
dec
sbb
rolb
call
stc
mov
mov
je
mov
stos
add
rcrb
sbb
cmp
mov
jge
lea
je
mov
lds
xchg
aaa
mov
aam
and
arpl
push
jmp
call
jmp
inc
mov
pop
sub
jl
and
fdivs
ja
or
xchg
adc
les
bswap
push
sahf
adc
hlt
inc
or
mov
test
lahf
loopne
ds
jmp
and
mov
hlt
jle
mov
dec
mov
add
sbb
mov
adcl
jns
fwait
xchg
test
xor
add
xchg
mov
insl
xchg
add
inc
sub
xchg
inc
inc
dec
dec
fistpl
lds
cmc
shl
inc
jmp
pop
mov
xchg
lcall
das
pusha
jmp
pop
jns
lcall
fcomps
mov
or
je
lock
gs
mul
dec
dec
sbb
dec
jg
rcll
xor
fldenv
fcoml
pop
ret
push
sub
mov
adc
xchg
outsb
jecxz
mov
xor
stos
push
aas
mov
fimuls
xchg
jbe
loopne
xchg
sub
js
push
jns
cld
mov
sbb
loopne
les
test
loop
mov
mov
adc
mov
pop
mov
push
mov
pop
xchg
pushf
mov
adc
inc
xchg
fsubl
in
sbb
and
sbb
adc
or
xorl
cwtl
inc
mov
mov
xor
pushf
jmp
push
push
xor
hlt
iret
jmp
add
and
scas
fistpl
pushf
movsb
jmp
lcall
sbb
push
sbb
data16
push
repnz
or
nop
imull
popa
or
pop
and
mov
insl
ret
leave
jb
pop
lods
lods
and
dec
jmp
cltd
xchg
mov
push
enter
mov
addb
sbbb
adc
dec
jle
push
scas
jnp
mov
xchg
ret
mov
orb
adc
or
push
and
mov
decl
fstpt
repz
add
mov
xor
dec
ret
sbb
in
xchg
mov
lods
cmp
mov
scas
hlt
pop
lcall
lea
es
xor
imul
dec
sub
out
mov
inc
jno
fidivrl
sub
pop
cmp
fsubl
arpl
mov
sbb
leave
rolb
cmp
xchg
jnp
and
or
push
jle
cmp
insl
adc
mov
out
mov
test
adc
punpcklwd
adc
inc
or
imul
push
lea
cltd
mov
cmp
mov
stc
sarl
into
pop
js
iret
sbb
fbstp
cmpsb
mov
lds
pop
sbb
dec
iret
inc
lds
mov
xchg
mov
push
daa
inc
pop
mov
pop
insb
repz
fwait
sahf
inc
repz
arpl
dec
movsb
pop
mov
fiaddl
pushf
fildl
sbb
mov
and
xor
lahf
or
jmp
stos
popf
adc
lds
fidivs
rcll
and
push
gs
cmp
cmp
mov
and
movsl
pop
iret
cmp
pop
mov
cmpsb
mull
dec
shrb
jbe
repz
cmp
mov
hlt
push
ss
sbb
pop
ljmp
pop
xor
fistpll
sub
inc
insb
movsl
sub
adc
out
sbb
ror
and
push
fstpl
test
rcll
fcomip
xor
icebp
adc
add
sbb
in
cmpsl
movsl
rcrl
jns
and
testb
test
jnp
or
and
cmpsl
out
push
stc
out
cltd
dec
jl
jecxz
xor
aad
cmp
imul
xlat
cltd
pop
sub
popa
dec
lods
imul
gs
cmpsl
push
stc
jno
and
fsubr
test
xchg
mov
addb
mov
cmp
sub
mov
mov
popf
insl
xlat
pop
ljmp
js
mov
mov
pop
xlat
arpl
sbb
mov
cmovae
mov
mov
mov
fs
popf
pop
mov
fisubrl
sbb
lahf
add
lret
fs
fs
jo
jnp
div
pop
fcmove
pop
and
jmp
and
pop
lock
mov
aam
adc
orl
dec
add
mul
inc
int
int
hlt
or
cld
jnp
imul
popf
push
inc
jne
push
push
adc
mov
imul
pusha
mov
into
testb
xchg
dec
mov
shll
mov
xor
fidivrs
in
aaa
adc
iret
mov
lds
mov
aas
adc
lret
mov
aam
or
and
pop
push
clc
cmp
hlt
jno
test
stos
xor
je
stos
int
sbb
cltd
pop
push
nop
push
dec
mov
insl
push
incb
es
mov
lcall
icebp
iret
add
jge
xchg
cmp
add
pop
xchg
push
pop
push
jmp
mov
addb
sbb
in
shrb
call
in
cmpsl
add
adcb
iret
scas
dec
pop
fcoms
cltd
xchg
push
mov
cmp
adc
jne
mov
jb
pop
adc
mov
ljmp
outsl
leave
jg
jmp
inc
je
ret
sti
sahf
adc
adc
aad
rcrl
jp
pushf
lock
gs
ror
cmp
iret
loop
push
jle
mov
testb
cltd
lahf
leave
rclb
pop
test
mov
cmpsl
lods
sub
push
jle
pusha
mov
outsb
push
push
insb
add
cmpsl
std
dec
daa
and
iret
cmpsl
dec
push
xorb
sub
addr16
out
push
sbb
fs
popa
xor
push
jmp
mov
and
mov
xor
xchg
fwait
push
movsl
dec
lods
mov
ss
int3
orl
fsubl
add
in
inc
xchg
jmp
arpl
lds
mov
and
imul
jbe
push
int
dec
mov
je
push
testb
sahf
pop
inc
inc
enter
fidivrl
sub
and
mov
ljmp
popa
mulb
mov
testb
pop
pop
mov
imul
jno
mov
pop
inc
dec
mov
mov
sub
inc
jno
pop
xchg
shl
push
and
jp
mov
inc
mov
lahf
ret
cmpsb
movsl
inc
mov
stc
ret
out
lds
push
dec
sbb
jmp
cmp
xor
lcall
mov
push
xchg
or
pop
dec
mov
aad
pop
testb
and
push
sub
sbb
nop
inc
adc
mov
xchg
daa
and
cmpsb
lahf
xchg
mov
xor
dec
leave
jmp
shlb
mov
jle
sub
push
cmp
pop
pop
cmpsb
sti
xor
fiadds
mov
or
and
call
ja
fisubs
dec
lea
scas
cmp
sbb
inc
jns
call
pop
inc
imul
adc
lods
fisttpll
dec
loop
sbb
in
rolb
sahf
pop
or
cmp
jo
xor
jmp
xor
aaa
test
xchg
cmc
and
adc
ss
in
jo
subl
mov
mov
fisubl
out
push
cltd
inc
xor
cmc
addr16
xchg
xor
scas
jle
xchg
cltd
inc
pop
sbb
xor
dec
cwtl
imul
popa
sub
dec
and
int3
call
jg
xchg
inc
iret
in
lods
jb
aad
mov
adc
adc
mov
xor
in
insb
cmp
loop
inc
gs
enter
push
repz
push
add
es
mov
sub
fistps
cli
test
loop
loopne
cmpl
lcall
xchg
cmp
mov
inc
std
mov
mov
fadd
jge
mov
aam
ja
popf
leave
mov
out
arpl
and
rcl
adc
fs
sub
dec
and
jecxz
call
int
icebp
dec
add
sub
push
xchg
xchg
jecxz
mov
pop
push
sbb
iret
test
lea
lret
cltd
cltd
ds
xor
pop
pop
sub
lea
aad
mul
pop
and
mov
test
int3
dec
rorl
lea
fdivp
decl
into
dec
push
subb
mov
fs
inc
jg
lds
mov
add
out
int
test
bnd
jmp
mov
xchg
movsl
sub
mov
fcom
int
push
loope
add
ds
jbe
cmp
mov
sbb
xlat
mov
rclb
faddl
mov
push
pop
xor
out
dec
dec
dec
cltd
pop
lds
dec
aam
fs
mov
repz
aas
lock
stc
pop
test
aam
xchg
lcall
popa
dec
inc
lret
scas
arpl
movsb
jno
xchg
cmp
sti
aas
or
into
test
fmul
mov
fmuls
or
popa
and
pmuludq
xor
out
sub
in
sbb
jo
or
imulb
mov
sbb
adc
jmp
scas
dec
int
rcrl
roll
jb
insl
cmp
pusha
dec
sbb
or
out
xchg
lds
iret
jg
mov
in
jnp
loop
push
clc
in
in
rol
scas
push
xor
jbe
dec
push
push
repnz
adc
fidivrs
cmc
inc
movsb
mov
outsl
add
outsb
lret
cmpps
in
mov
cmp
inc
ljmp
mov
mov
mov
sbb
xor
xchg
mov
and
fidivrl
sahf
sbb
jno
loope
cmp
stc
add
pop
icebp
aaa
or
imul
xchg
cs
or
push
jecxz
movsb
mov
nop
fcoml
adc
ret
pop
sub
loopw
mov
sub
mov
xor
lsl
popf
pop
cmc
sub
addr16
in
or
stc
mov
sbb
jle
or
mov
das
lret
fs
sbb
xor
pop
out
rcrb
mov
addl
xor
jecxz
mov
xor
and
loop
repnz
shl
mov
fstpl
sub
icebp
sub
mov
pushf
mov
push
shrl
fidivrs
or
test
stc
pop
dec
push
or
fwait
pop
pop
mov
sbb
jbe
push
in
scas
push
std
lds
ret
es
xlat
inc
out
mov
mov
out
sti
test
xchg
loop
out
push
ret
and
scas
xchg
std
subb
aam
in
sbb
cli
pop
xchg
ret
cmp
cwtl
ret
jg
push
cmp
sbb
test
fdivs
addr16
adc
pop
jg
incb
stos
xor
sbb
jecxz
push
faddl
lcall
push
sahf
mov
dec
fsts
loope
test
dec
insb
mov
pop
mov
insb
frstor
in
xchg
push
jmp
inc
pop
pusha
adc
add
in
cmp
or
shl
mov
mov
popf
repz
fnstsw
daa
xor
gs
in
inc
in
xor
arpl
jecxz
call
ss
pop
daa
iret
push
sahf
mov
lock
lock
ret
adc
shlb
sarl
pop
push
in
sar
bound
lcall
jns
dec
out
mov
iret
pushf
xor
data16
inc
insb
pop
sub
mov
sub
je
push
into
pop
test
mov
sbb
clc
popa
cmc
mov
cmpsl
lcall
inc
pop
xchg
xchg
sbb
inc
repz
movsl
out
loop
hlt
fs
bound
in
xchg
cmp
hlt
es
sub
jne
mov
sbb
push
xor
fcoml
cmp
mov
pop
aam
fisttps
testl
push
push
jmp
std
mov
lock
jp
mov
call
cwtl
xchg
out
sbb
or
xchg
outsl
es
jle
jns
roll
mov
loop
mov
sub
in
cmpsb
jne
outsb
ds
and
lods
aam
push
push
sti
push
sub
icebp
push
inc
sub
aaa
dec
test
sub
or
test
stos
mov
adc
outsl
out
push
shll
aas
mov
mov
pop
clc
inc
cmpsl
adcl
and
lcall
or
cmpl
pop
outsb
cmc
rcrl
and
or
inc
and
daa
ljmp
mov
sub
push
stos
jbe
sbb
cmp
in
in
sub
pop
sbb
pop
add
arpl
xchg
sub
sbb
mov
fdivrl
push
sub
in
call
push
addr16
ret
cmp
rorl
rcrb
sbb
fucomip
adc
aaa
cmp
addr16
xchg
loope,pn
mov
lods
jo
mov
jmp
fists
fidivrl
dec
mov
and
mov
xor
inc
pop
jp
pop
sahf
adc
scas
add
adc
inc
jne
aad
and
mov
in
fstp
jne
lahf
xor
stc
sbb
bound
cmc
les
js
js
lea
jmp
shl
lahf
jp
nop
jb
ror
shl
jmp
aaa
dec
iret
sbb
push
int
push
push
mov
mov
lods
push
add
sbb
xchg
hlt
mov
add
mov
and
aaa
and
ret
sbb
adcb
and
dec
xchg
mov
loop
stos
bound
adc
rclb
sbb
push
stos
aaa
mov
jne
pop
pop
lcall
pop
jecxz
mov
or
jns
ficompl
loope
mov
fldcw
mov
add
and
lret
fst
int3
popf
jne
dec
cli
push
es
je
xor
and
imul
dec
dec
faddp
jge
push
cmpsb
and
clc
mov
inc
outsb
and
sbb
loope
pop
loop
mov
ljmp
xchg
outsl
inc
dec
pop
movsb
and
adc
stos
inc
xor
daa
adc
outsb
ljmp
js
sbb
inc
dec
xor
mov
cmp
jmp
push
js
jl
aad
push
cmp
jne
fcmovu
stc
xor
popf
in
ljmp
jae
cmp
pop
lock
negb
jecxz
loop
mov
xchg
sahf
call
fildll
inc
cmp
mov
stos
jo
mov
nop
xor
xchg
es
icebp
in
daa
mov
pop
dec
xlat
xchg
sbb
mov
inc
lods
cmp
and
jnp
dec
jp
xor
pop
fnstcw
push
insb
adc
inc
cld
sbb
je
frstor
add
push
out
incb
repz
pop
push
jp
xor
and
inc
push
inc
jns
cmp
add
mov
sti
mov
icebp
pop
jne
fstpl
xor
leave
adcb
sub
mov
cmp
in
insl
dec
cmpsl
pop
jo
adc
sub
adc
stos
mov
cli
mov
je
add
repnz
dec
sbb
lea
mov
enter
sti
popf
jno
roll
into
sahf
adc
lea
pop
sbb
pusha
adc
loope
inc
jmp
test
insl
add
mov
loope
data16
and
and
jbe
push
out
push
rolb
mov
jle
or
pop
fldt
add
inc
les
pop
sbb
aam
ljmp
jbe
lds
cmp
sbb
roll
push
enter
dec
jle
sub
xchg
push
fcmovnu
mov
push
inc
sbb
add
mov
mov
shl
in
pushf
lret
repz
push
ljmp
mov
aaa
lret
mov
push
fwait
mov
mov
dec
dec
out
testb
enterw
sbb
insb
lods
pop
xchg
in
mov
loop
movb
daa
dec
imul
xchg
mov
int
je
xchg
adc
es
subb
clc
test
in
add
sbb
push
sub
push
sub
movsl
lret
cmp
dec
inc
imul
ljmp
data16
and
or
xor
das
movsl
push
pop
jno
jo
insl
idivb
fnstcw
ljmp
cmpsl
and
add
push
addr16
fs
call
dec
xor
adc
xlat
mov
insb
adcl
lcall
push
sbb
inc
sbbl
mov
sub
pop
mov
pop
loop
aas
pop
mov
hlt
enter
sub
jmp
pop
outsb
fsub
mov
pop
jo
orl
addr16
imul
cltd
aam
mov
xchg
mov
mov
shlb
push
adc
sti
xchg
je
outsb
dec
xlat
call
pop
mov
in
loope
jbe
fwait
cmp
loop
cmp
in
js
sbb
imul
mov
aaa
xor
and
sbb
mov
insb
xor
packsswb
cmp
inc
mov
mov
mov
test
mov
jo
call
push
jno
or
icebp
fistpl
pusha
xor
jno
aad
cmp
test
pop
adc
gs
out
cmp
pushf
dec
das
push
push
xor
xchg
sbb
lea
add
fisubl
push
cmp
ljmp
outsb
sub
push
xchg
inc
pop
mov
mov
arpl
andb
mov
mov
sub
ret
or
xor
or
ss
aam
pop
and
mov
and
adc
arpl
rcrl
stos
es
daa
shll
mov
outsb
add
add
loop
ret
mov
shll
rcll
add
adcb
sub
and
lock
loopne
lods
sub
sub
xor
in
sub
enter
pop
sub
cld
aad
mov
pop
dec
addr16
push
pop
fwait
sub
mov
xchg
and
fstpt
mov
inc
cmc
dec
push
sub
cld
fwait
inc
mov
in
mull
rcrl
mov
mov
arpl
sub
xchg
push
add
mov
xchg
xchg
xor
pop
cld
jl
pop
shl
mov
into
adcl
cwtl
sbb
xchg
inc
xchg
test
fadds
adc
jns
jne
cmp
xchg
or
xchg
or
xor
jae
jno
mov
mov
pop
fbld
out
lcall
imulb
push
push
mov
movsl
xchg
ja
inc
dec
sub
test
xor
test
repnz
lcall
mov
outsl
out
flds
cmpsb
pop
incb
sub
stc
stos
xchg
aaa
cld
xchg
add
jmp
push
jecxz
or
fcoms
lahf
cmp
mov
cld
sub
inc
pop
cmp
cmp
pop
mov
daa
in
mov
and
dec
xor
popf
pop
add
out
roll
lcall
xor
jae
sbb
jno
daa
jmp
sbb
shrb
push
divb
lret
call
fiadds
repz
fidivrl
mov
pop
xchg
mov
push
mov
sbb
adc
out
loop
xor
or
mov
loopne
cmp
sbb
sti
loopne
rep
mov
lods
outsl
mov
jp
lock
push
inc
out
mov
jp
push
inc
mov
testl
push
bound
cmp
xchg
loope
mov
mov
lcall
test
adc
cmpsl
push
rcll
adc
and
subps
mov
adc
ss
xchg
xchg
aam
sbb
mov
push
sbb
pop
cmpl
test
sub
test
aaa
add
push
ljmp
cli
fnstcw
mov
test
imul
insb
push
mov
mov
adc
sub
mov
fisubs
call
cmpsb
mov
ds
fsubrs
xchg
or
mov
mov
dec
in
js
push
arpl
pop
aam
fs
pop
xchg
mov
ljmp
sub
and
fnstenv
lock
aas
adc
mov
mov
add
ja
xchg
data16
icebp
mov
adc
jecxz
fldenv
adc
add
popa
and
aam
xor
dec
fsubs
pop
mov
cli
rolb
cmp
adc
pop
or
sub
xchg
pusha
push
daa
inc
sub
cmpsl
cmpsb
pop
adc
push
pushf
iret
jb
push
mov
xchg
xchg
add
xor
fdivrs
push
ja
in
rolb
pop
movsl
sub
mov
dec
push
push
fisubs
adc
mov
cmp
dec
pusha
cmpsl
mov
out
ret
fdivr
inc
scas
out
sbb
adc
test
jmp
pop
hlt
mov
fsubrs
push
stc
fdivs
aas
jae
pop
pop
jl
push
mov
add
mov
rolb
push
clc
int3
sub
stc
in
or
sahf
loope
jp
cs
adc
add
cwtl
sarb
jmp
outsb
or
add
xor
sbb
mov
dec
and
and
movsl
adc
adc
push
mov
sahf
call
push
cmp
push
in
ljmp
daa
pop
out
cld
jmp
rcll
jb
roll
enter
adc
push
jle
cwtl
test
cmp
mov
insb
sub
out
sbb
dec
mov
mov
movsb
in
jne
lods
in
and
pop
add
addr16
jno
xchg
or
mov
popa
fldt
call
push
sar
cltd
push
pop
pop
fiaddl
add
rclb
aas
fs
xor
stos
aam
cmp
aad
clc
in
mov
das
sub
mov
test
aam
xor
jb
xlat
cmp
imul
mov
in
jg
inc
mov
jl
sbb
push
mov
sbb
push
push
repnz
sbb
decb
mov
out
or
xchg
movsb
sub
sub
and
ret
jle
addb
jg
inc
int3
pop
stc
pop
push
pop
scas
inc
xor
xor
ljmp
imul
test
push
inc
sub
xor
outsl
pop
xchg
or
adc
out
scas
icebp
jmp
sbb
dec
adc
push
lcallw
scas
adc
dec
lock
bound
jbe
jl
sar
test
pop
aam
push
shlb
sbb
lret
test
and
xchg
idivb
das
mov
jb
andl
aad
aam
add
add
addb
popf
sbb
xchg
outsb
xor
in
push
or
std
adc
fstpl
lods
or
bound
leave
leave
jle
iret
mov
pop
aaa
insb
jmp
and
sub
mov
xchg
add
lds
mov
outsb
cmp
aam
sbb
es
or
rorb
int3
push
rcrb
dec
cmp
cmp
shll
dec
adc
mov
sti
mov
popf
aas
imul
xchg
out
sub
test
sub
test
std
mov
mov
jecxz
mov
xlat
test
jecxz
cld
inc
mov
sahf
adc
cltd
sti
pop
mov
jp
notl
les
arpl
test
mov
xor
fiadds
jb
cmovb
lret
mov
aaa
sub
and
inc
xchg
iret
mov
xchg
fisubs
movsb
lds
push
xchg
inc
daa
jnp
test
ds
mov
popf
sbb
mov
mov
in
les
outsl
push
pop
add
pop
outsb
xchg
pop
subb
ret
mov
imul
cmp
jo
aaa
jge,pt
fnstsw
push
pop
cwtl
fcmove
mov
adc
outsl
mov
dec
loop
icebp
mov
dec
cmp
sub
addl
imul
rorb
rcrb
or
sub
lock
sahf
jle
jbe
fimuls
push
lods
jle
sub
inc
in
or
mov
fmull
and
lea
jae
push
inc
stc
outsl
pop
inc
and
xchg
shl
jbe
jb
pop
adc
decb
or
fidivs
les
adc
pop
and
jg
dec
xchg
in
mov
aam
ds
fldenv
xor
rcrb
adc
add
mov
in
push
add
negb
lods
cmpsl
jmp
fs
mov
lods
push
cmc
lds
push
sbb
xchg
repnz
leave
cmp
dec
push
cmp
mov
add
adc
mov
iret
add
cli
movsb
cli
imull
lret
lahf
outsb
out
xchg
and
sarb
jbe
mov
inc
fstps
fstl
js
cmp
lods
push
jl
cmp
jge
or
or
inc
mov
jge
rcll
xor
pop
pop
sti
test
stc
scas
aaa
call
cmp
mov
pop
jl
bound
incl
cmp
test
adc
or
pushf
fidivl
adc
sub
gs
push
xchg
int3
arpl
jge
adc
and
cmp
stos
jl
lahf
sub
cli
sbb
push
in
sub
pushf
dec
rcrl
lods
cltd
jle
xchg
jp
adc
in
shll
cmp
out
iret
out
cld
xor
scas
mov
push
imul
and
jmp
loope
cmp
push
sub
ds
mov
adc
cli
fadds
mov
testl
ljmp
jle
es
push
push
cli
std
fildll
sahf
fs
mulb
out
xchg
push
sub
or
stc
jg
push
fst
push
and
fsubr
insl
jge
xor
ljmp
pop
mov
adc
or
cmc
push
fwait
sub
out
mov
pushf
mov
pop
jne
jmp
pmulhw
sti
mov
fldenv
jge
arpl
cmp
pop
mov
rorl
imul
push
scas
pop
shl
stc
mov
loope
out
in
outsl
or
adc
sub
das
jg
jp
fs
inc
sbb
pop
and
icebp
js
add
aaa
adc
xchg
out
mov
mov
into
hlt
outsb
sbb
scas
push
lret
pop
pop
cmp
lods
jg
pushl
ja
cltd
inc
ja
and
sbb
push
adc
imul
jno
fsts
cwtl
cmp
push
addr16
loop
loop
jae
add
push
cmp
mov
dec
fcoms
xchg
enter
dec
and
mov
sub
xchg
xchg
shrb
mov
aas
lock
cld
icebp
push
mov
test
inc
mov
ret
inc
and
lods
sbb
jp
scas
stos
mov
xchg
jp
cmp
ss
insl
push
ss
test
adc
rcrb
notb
xchg
adc
cmpsb
or
push
mov
in
outsb
push
insl
addr16
mov
neg
lea
outsb
test
push
roll
add
outsl
sub
daa
loopne
enter
add
int3
jbe
mov
inc
jmp
mov
push
inc
add
xor
add
xor
outsl
fdivs
pop
mov
out
scas
imul
lods
mov
xchg
fists
or
or
jle
sti
outsl
popf
cmc
push
pop
orb
cmp
enter
inc
xor
add
mov
jl
jb
inc
mov
mov
mov
mov
mov
push
add
xor
push
mov
bsr
mov
mov
sbb
or
xorl
inc
lock
ljmp
mov
out
cld
lea
cltd
lahf
dec
loop
popa
int3
mov
sub
pushf
clc
pop
fmul
aas
lea
sub
mov
cmp
repnz
dec
fwait
inc
ljmp
sub
scas
pop
iret
je
xor
clc
pop
mov
mov
es
cmpsl
aad
popf
pop
mov
es
js
push
mov
lods
popl
popa
int
bound
fs
ret
loop
rcll
sub
cmpsl
jmp
aaa
pop
pop
lcall
dec
dec
and
dec
movsl
adc
shr
jmp
mov
aam
pop
jb
incb
into
bound
xchg
clc
mov
add
ja
pop
inc
aad
daa
lds
jp
dec
xor
jmp
adc
scas
pop
lds
cmp
std
sub
test
ret
and
inc
push
ret
in
rcrb
jg
and
bound
adc
push
test
dec
das
fimull
data16
jge
sub
add
cwtl
push
lods
jp
push
adc
dec
and
add
and
add
inc
fsub
inc
mov
and
dec
fidivs
ds
js
je
cmc
cmp
jecxz
ljmp
mov
jns
mov
scas
into
das
mov
rolb
xchg
mov
out
mov
pop
mov
cmc
aad
or
fdivl
pop
jns
loop
dec
sub
jl
mov
or
enter
mov
sub
cltd
sub
fcoms
pop
addr16
pop
and
and
push
xor
fsubrl
lds
cmp
and
jae
jp
sub
push
int3
mov
sbb
push
adcl
pop
pusha
sar
add
jg
out
pop
push
sahf
pushf
jnp
and
sbb
pop
loop
dec
stc
and
push
leave
jb
cmp
mov
adc
push
lods
sbb
and
xchg
mov
movsl
lods
push
inc
sub
inc
jne
or
in
pop
cmc
inc
push
pop
lods
sub
xor
mov
cwtl
test
adc
ljmp
cmp
jae
mov
pop
xor
test
aam
mov
lods
pop
cmp
dec
out
push
inc
mov
insl
testb
mov
enter
leave
popa
and
sub
aam
fsubp
fnsave
mov
or
cmpsb
push
and
adc
xlat
and
jmp
xchg
nop
pop
rorb
shll
popa
ds
nop
pop
sub
lcall
xor
add
in
lea
inc
rol
data16
mov
insl
push
addr16
push
mov
ds
cltd
movsl
inc
sub
int3
scas
sbb
xchg
jns
and
test
and
adc
inc
bnd
push
or
mov
test
aam
xchg
sub
fstps
ret
scas
adc
jb
pop
sub
cmp
xchg
jae
loop
ret
xchg
pop
mov
and
call
into
rcrl
rcr
scas
mov
sub
mov
inc
pop
cltd
xor
mov
pushf
imul
out
in
push
fcomps
jo
stc
es
adc
mov
std
jl
int3
loope
js
and
shll
mov
jg
jae
cmpsl
ja
xor
push
ljmp
cli
ficomps
pop
orl
orb
pop
sarb
sti
fidivrs
pop
insl
and
mov
mov
mov
pusha
push
addl
rolb
mov
adc
rorl
xchg
xchg
aad
or
mov
xchg
add
pop
aas
mov
dec
sub
pop
mov
xchg
xor
push
int
pushf
insl
xchg
sub
and
lods
aad
shl
je
out
push
add
adc
lret
call
fsubs
jge
push
sbb
add
add
inc
aad
sahf
aad
mov
jge
dec
mov
pop
xchg
int
jne
repnz
bound
mov
int3
xchg
lcall
pop
outsb
add
mov
js
or
add
push
sub
in
pusha
cmpsb
and
fsubs
pop
jge
daa
jb
mov
push
cmp
inc
mov
add
jns
fwait
jnp
shll
int3
outsl
sub
push
cwtl
pop
mov
sub
fcomps
fld
aam
lcall
jnp
arpl
aam
lods
inc
hlt
add
and
jae
stos
outsl
dec
mov
jne
testb
ds
push
ljmp
add
pop
iret
fisubl
xor
les
ficoms
incl
cmpsb
sahf
fistl
xor
call
mov
jnp
pop
aam
loopne
mov
cmp
inc
jle
dec
adcb
mov
cmp
insb
mov
movsb
jne
mov
cld
imul
jo
xor
arpl
leave
xchg
mov
je
bnd
outsb
clts
and
dec
rcrl
cmp
pusha
and
mov
sbb
jno
stos
push
test
rcll
lods
add
xchg
les
leave
sbb
icebp
leave
sar
mov
mov
adc
cmpsb
popw
and
and
ja
mov
pop
mov
scas
sub
orb
outsl
in
in
pop
add
pop
add
or
inc
fadds
sbb
rolb
shlb
out
aam
sub
and
xor
fwait
das
sbb
int3
pop
adc
push
enter
repnz
test
scas
je
loopne
stc
sbb
and
movsb
inc
inc
push
mov
stos
movsl
repnz
xchg
int3
pop
icebp
jb
or
ljmp
repz
adc
inc
adc
es
push
pusha
add
dec
loop
jns
scas
aas
cltd
je
mov
xor
or
xchg
xor
jle
sbb
loopne
xchg
mov
in
adc
inc
jne
cltd
inc
repz
imul
cmp
push
jno
dec
loope
icebp
add
dec
push
push
ds
out
mov
push
push
cli
inc
scas
lods
outsb
mov
std
add
mov
pop
repz
add
mov
jno
push
movsl
ja
inc
lahf
insb
aam
leave
cmp
push
add
daa
jp
jae
mov
sub
fisubrl
adc
and
jmp
and
jae
mov
rcll
xchg
loopne
test
cwtl
mov
mov
inc
mov
lds
cs
and
xchg
clc
add
je
jmp
xchg
pop
cmc
pop
mov
mov
sub
fidivrl
or
pop
divb
lcall
movsb
push
or
into
push
adc
mov
fidivs
xchg
int3
add
jae
lahf
loop
mov
ds
rcrb
stc
push
fldenv
sbbl
fxch
push
cmp
mov
jle
enter
in
insb
xchg
mov
mov
adc
mov
or
mov
xchg
fstl
jmp
ret
mov
add
cltd
push
jne
dec
pop
mov
out
push
scas
cmp
in
dec
pop
popa
adc
scas
dec
adc
jl
cmc
mov
aaa
in
sub
or
jmp
cmp
pop
call
std
mov
movsb
push
jbe
ret
mov
xor
sub
mov
push
mov
xchg
xchg
cmpb
lahf
cld
push
into
jl
xchg
push
sub
push
or
push
lods
and
jb
push
add
hlt
pop
pop
dec
push
lret
dec
inc
ret
push
fdivrp
dec
cli
push
lds
xor
push
pushf
je
mov
or
mov
push
pop
inc
jbe
pop
ret
cwtl
stos
mov
add
dec
loope
in
ljmp
jno
cmp
jae
aas
or
out
xchg
out
mov
pusha
cmpsl
sbb
push
push
push
jg
orb
xchg
aad
aas
pusha
mov
insb
outsl
jae
cmp
mov
add
inc
and
int3
dec
js
or
aas
cmovae
inc
test
in
jne
stos
sbb
mov
and
or
sbb
dec
xchg
pop
fstps
pop
stos
aas
mov
mov
jb
push
adc
sub
sbb
roll
in
mov
std
clc
jo
push
xchg
sbb
ljmp
xor
sbb
in
fstps
xchg
pop
xchg
shr
fistl
cmp
inc
pop
pop
cmp
xchg
mov
jle
xorl
inc
pop
inc
sub
cmp
pop
dec
es
in
fstpl
sahf
and
dec
cmp
test
in
aaa
push
fimull
imul
xchg
ret
ret
popl
cltd
cmp
bound
fidivl
sub
xor
js
in
lea
jl
push
call
pop
daa
inc
test
xor
lahf
or
jae
inc
jecxz
pop
mov
ret
fistps
jl
jb
daa
dec
clc
mov
adc
les
test
cltd
inc
and
mov
lods
pop
lcall
push
je
je
loopne
and
pop
xchg
fwait
loope
cmp
add
in
pop
call
or
arpl
xchg
cld
cmp
es
scas
ds
dec
or
mov
adc
fwait
pop
insl
ret
mov
pop
mov
xor
sub
jno
mov
jp
inc
aaa
jge
push
add
lret
icebp
loopne
cmpsb
cmpsl
dec
mov
mov
dec
loop
adc
lcall
mov
adc
addr16
pop
push
push
imul
jno
push
dec
cmc
xlat
mov
mov
ror
mov
negl
mov
mov
mov
arpl
pop
dec
add
adc
incb
popa
ds
cmp
aaa
or
pop
push
or
sti
and
incb
pop
fs
pop
outsb
and
mov
aas
frstor
xchg
push
adc
ret
mov
dec
out
inc
and
xchg
inc
ret
aam
out
bound
repnz
aad
or
fsts
dec
shlb
mov
push
int3
stos
cs
mov
mov
daa
mov
dec
or
xor
movsb
inc
mov
jle
jne
shll
sbb
sub
pusha
jge
aas
clc
xor
fxch
mov
push
sbb
jae
dec
pextrw
cmpl
aaa
lcall
jecxz
jmp
cmc
enter
mov
fwait
pop
push
push
and
mov
movsl
push
sbb
aam
jge
sub
dec
daa
in
jle
imul
cmp
das
js
divb
je
insb
fmull
mov
pop
inc
pop
or
push
xor
ret
addr16
cmpb
mov
or
ret
pop
sub
ficoms
fldl2e
ret
test
push
sub
dec
dec
nop
adc
inc
fsubrs
out
push
pop
arpl
loopne
fsubl
fdivrs
add
jae
icebp
sub
jae
test
repz
jno
mov
cmpsb
xchg
sub
mov
out
sbb
mov
dec
addl
adc
iret
out
add
cld
cmp
or
fsubl
and
xchg
sbb
jl
in
leave
aad
push
loope
popa
mov
push
frstor
xchg
mov
sbb
enter
lds
xor
add
shll
inc
popf
fs
mov
and
mov
fldl
sbb
or
bound
lcall
push
or
adc
notl
int3
leave
insl
in
sbb
mov
lds
pusha
xor
mov
cmpsb
sub
push
xorb
mov
lret
nop
in
fldt
add
or
pushf
movsb
xor
mov
mov
aad
outsb
nop
pusha
gs
out
pop
aas
sub
test
shr
movsb
fwait
test
pop
insb
imul
scas
cmp
and
in
loope
into
and
outsl
dec
ja
arpl
outsb
inc
xchg
jecxz
and
orb
movsb
mov
test
mov
jmp
loop
es
cmp
out
mov
fnstsw
cltd
sub
les
and
inc
mov
lea
mov
jo
pop
cmpsl
add
cmpl
hlt
lods
inc
and
fadd
repz
dec
cmp
insb
mov
cld
int
lock
fstl
out
push
xor
push
mov
lods
dec
and
jne
ror
sbb
mov
or
je
add
xorb
or
mov
adc
push
in
es
int3
insl
aad
mov
mov
jle
pop
cwtl
mov
popa
in
in
mov
adc
dec
andl
xchg
cmp
and
stos
fsubrl
adc
lahf
jb
mov
push
mov
cmp
vmulpd
xlat
cmpsl
in
out
sub
inc
int
push
cmp
dec
push
xchg
inc
int
lods
cs
mov
scas
pop
inc
xchg
rcr
inc
dec
test
mov
fdivl
jne
add
lea
xor
es
out
add
push
mov
or
shrl
js
mov
lret
jo
add
scas
fstpt
rol
insl
in
mov
xchg
outsl
xchg
jno
ljmp
inc
add
out
xor
xor
ds
pop
test
rcrl
stc
or
jnp
cmc
pop
movsl
or
mov
gs
in
lahf
jle
xchg
imul
adc
fwait
out
mov
and
scas
les
lds
pop
xchg
fisubl
inc
mov
pop
jbe
push
or
sub
mov
adc
xchg
out
fisubrs
push
stos
or
and
lods
lock
cwtl
enter
jle
xor
mov
mov
aam
mov
dec
and
loopne
enter
out
out
cld
hlt
aad
incb
dec
push
mov
sbb
jg
lret
adc
mov
into
adc
jmp
mov
xchg
test
cs
out
xchg
div
in
xchg
xchg
pop
sub
xchg
or
mov
ret
clc
incb
popa
cmp
and
and
data16
xor
insb
mov
iret
sbb
add
push
cltd
lock
popa
pushf
xchg
inc
fwait
ret
xchg
jg
push
xor
aaa
lds
mov
xchg
xchg
icebp
in
dec
pop
pop
adc
idivb
and
js
mov
aas
sti
push
mov
push
das
enter
mov
bnd
or
and
xor
jbe
popa
xchg
and
mov
or
mov
leave
pop
pop
pop
xor
ficompl
call
and
push
mov
insb
pop
bound
addl
cmp
or
jle
daa
imul
mov
es
and
jne
pop
mov
loop
mov
sbb
or
xchg
in
pop
push
shll
cld
cwtl
mov
fdivl
add
cld
dec
sub
out
jge
imul
mov
out
and
icebp
cld
in
aas
or
loope
cmp
jge
and
ja
aaa
mov
insb
aaa
add
jl
mov
mov
call
jg
sbb
mov
adc
adc
xor
or
movb
cmp
dec
outsl
push
adc
mov
fildl
push
adc
lock
xchg
insl
pop
or
push
pop
pusha
sahf
inc
sar
jb
call
outsb
out
cmp
cmpl
mov
sub
into
bound
jbe
sub
repnz
and
mov
lds
dec
cmp
jbe
sbb
xchg
xchg
dec
cli
ror
in
shrl
pop
push
out
mov
adc
cmp
pop
ja
xor
mov
sbb
les
xor
xor
push
sar
sub
enter
adc
dec
or
sbb
sbb
popf
inc
ljmp
fmull
out
xchg
or
jl
cs
popa
out
testb
mov
pop
xchg
jecxz
sub
test
sbb
push
jns
into
rol
lods
sub
std
int
sti
gs
sbb
pop
mov
mov
pop
dec
add
cmp
xchg
imul
adc
add
in
fiadds
inc
dec
and
out
inc
jo
outsb
std
mov
or
cltd
rcr
scas
cmp
xor
mov
push
add
in
pushf
pusha
push
xor
cmpsl
adc
in
cltd
out
sbbl
les
flds
mov
outsl
je
js
dec
cld
movsl
push
fdivl
adc
adc
xor
dec
jp
ficoms
inc
xor
cs
sub
xor
dec
les
sub
jl
mov
test
in
bndldx
pop
or
into
inc
mov
test
jns
and
sub
mov
mov
mov
loopne
add
subl
mov
jle
or
push
pop
and
mov
inc
in
mov
cmp
jae
adc
fcmovnbe
push
jae
testl
xchg
pop
and
xor
pop
push
inc
jp
add
bound
aam
sbb
orl
insl
mov
movsl
ud0
xchg
inc
mov
inc
mov
push
loopne
pop
sbb
sahf
cmp
push
call
or
sbb
sbb
aad
ja
add
fisubl
lahf
shll
ror
ror
cmp
das
xchg
dec
dec
add
adc
out
lds
sbb
icebp
cmp
push
pop
scas
or
daa
cwtl
idivl
outsb
dec
mov
mov
cwtl
inc
aam
mov
inc
xor
push
rcr
xorl
std
mov
in
and
lock
or
add
popa
orl
cmc
sbb
loop
xor
mov
jecxz
inc
sbb
je
adc
adc
push
sub
mov
add
dec
sbb
cmp
cltd
loop
xchg
frstor
adc
out
mov
push
repnz
sarl
das
popa
push
mov
test
pusha
cmpsb
inc
mov
mov
mov
test
mov
sbb
sete
add
pop
xor
mov
out
mov
pop
jns
add
inc
cli
outsl
aad
out
add
xor
mov
add
in
test
lock
popf
cmp
jo,pt
mov
xchg
adc
rcrl
jg
shlb
dec
xchg
ss
xchg
jl
adc
dec
inc
shlb
add
mov
push
cmp
xchg
aam
pop
inc
bound
inc
fcoms
movsb
or
mov
lret
mov
jmp
mov
inc
out
cmp
jl
pxor
stos
jg
or
outsl
push
xor
mov
ret
xchg
mov
imull
test
jge
mov
push
inc
daa
adc
cltd
sahf
outsb
ss
test
stos
repz
mov
mov
cli
lcall
and
addb
call
pusha
iret
cmpsl
jge
out
incb
div
gs
test
ja
ror
lret
mov
or
gs
pusha
cmp
push
lods
add
or
mov
push
pop
inc
adc
or
fstpt
rcrl
je
add
xchg
scas
jp
inc
pusha
or
lea
call
add
xor
lret
sti
sub
push
mov
js
movb
popf
icebp
or
lea
js
in
or
jne
les
test
dec
incl
mov
rcl
pop
pop
sub
aam
mov
add
xlat
sub
pushf
sbb
fldt
add
stos
bound
mull
mov
nop
mov
jb
add
shll
add
cmp
mov
mov
fmulp
icebp
dec
adc
insl
or
mov
add
or
daa
mov
jnp
xchg
out
push
add
or
or
dec
sbb
xor
dec
cmc
jp
in
xchg
pop
shlb
lock
xchg
std
aaa
roll
mov
push
fstl
jne
arpl
fwait
stos
scas
push
sub
xchg
push
lods
fcomps
dec
jnp
push
loope
dec
int3
cmp
or
aas
das
icebp
mov
add
inc
mov
out
xor
cli
xchg
fadd
aas
xor
dec
sub
jno
xchg
scas
fcoms
pop
pop
xchg
test
or
enter
sbbb
mov
sbb
and
lcall
cmp
lea
inc
fsubl
cmpb
loopne
add
adc
popa
aaa
and
sbb
mov
cmc
inc
lret
cs
and
add
add
testb
pop
pop
and
test
xchg
jge
xchg
pop
and
mov
mov
out
xchg
in
xor
pusha
out
mov
mov
dec
outsl
je
cltd
mov
sbb
faddl
repz
xchg
or
cmp
enter
mov
and
pusha
test
test
mov
cmp
cmp
mov
iret
cs
mov
fcmove
fdivl
xchg
mov
repnz
lock
nop
dec
aaa
cwtl
rcll
in
inc
sub
fwait
cmpb
mov
shll
jno
cmp
mov
sbbb
mov
shll
inc
sbb
jb
jmp
fwait
adc
fwait
xchg
mov
xor
fisttps
xchg
aas
mov
mov
out
or
sarb
pop
sbb
int
sbb
mov
xchg
xchg
hlt
outsb
lret
popf
aaa
push
pop
mov
jmp
arpl
xor
fmul
fimuls
pushf
and
lret
mov
mov
mov
mov
push
xor
insb
ljmp
inc
add
pushf
xor
pushf
insl
mov
in
inc
dec
or
lret
dec
sub
push
xchg
call
sbb
in
sub
fmul
hlt
and
ret
loop
ds
dec
push
rcll
dec
pop
or
mov
scas
daa
ss
and
cmp
repnz
les
test
pop
add
out
loope
sbb
mov
dec
ret
lahf
sti
xchg
insb
and
push
sub
cmp
jmp
xlat
push
jnp
xchg
loopne
pushl
outsl
xchg
hlt
lahf
sub
sahf
lds
pop
mov
int3
cmp
cmpsl
sub
test
insb
in
cli
adc
and
aaa
test
ss
push
dec
jecxz
loop
notl
mov
push
in
in
xchg
sarl
mov
or
cmp
mov
sbb
int3
jp
stos
sub
push
mov
cmp
jp
rcr
mov
jns
cmp
rolb
push
lock
popl
call
in
test
xchg
sahf
fisubrs
mov
fwait
mov
xor
cmpsb
outsl
and
cmc
pusha
and
xlat
or
push
mov
or
add
pop
rcrl
add
out
lods
dec
or
mov
repnz
iret
ret
pop
push
or
or
out
std
push
scas
and
mov
cmp
xchg
imul
xor
jl
repnz
cmp
xor
lahf
cli
push
fldcw
jbe
test
add
dec
add
add
lret
dec
inc
mov
fsubs
cmp
push
pop
shr
cmp
pop
call
shrl
clc
fwait
dec
or
test
sti
cs
adc
pop
mov
aaa
lods
bswap
push
inc
aas
lods
enter
mov
ss
mov
sbb
inc
adcb
pushf
mov
fyl2x
pop
cmp
lar
fsubrp
pop
push
mov
test
jno
adc
xchg
mov
rcr
pop
add
out
xor
or
call
xchg
aas
mov
insb
or
sub
test
sbb
add
cli
push
xchg
jp
mov
mov
pop
sbb
ja
int
sbb
stc
lock
sbb
pusha
stos
scas
sbb
cmpsb
jl
ret
add
push
test
fwait
es
test
int
imul
dec
sbb
pop
xchg
ret
mov
enter
and
dec
pop
inc
push
add
test
sub
xor
mov
pop
xor
sub
popa
xorb
cmp
out
pop
scas
in
xor
lret
or
cmpl
lret
mov
dec
aad
movsb
dec
jnp
sar
adc
roll
cmpb
cli
jns
push
jecxz
xor
or
in
and
je
sti
and
mov
jg
adc
jo
cmp
lret
gs
andb
jne
mov
cmp
inc
aam
cmp
fidivl
dec
loopne
inc
sub
mov
mov
dec
sub
add
add
pop
jns
xchg
add
fsub
push
cmp
push
xlat
jb
pop
sbb
not
push
adc
cmp
jns
pop
cmc
add
lods
dec
xchg
test
inc
and
sbb
jmp
fstpt
jmp
dec
sarl
add
pop
imul
repnz
mov
filds
lock
pop
add
testl
addb
into
jbe
add
dec
cs
dec
in
and
xor
sarb
cmp
aam
inc
repnz
cltd
enter
cs
lock
push
lea
dec
mov
pop
push
cmpsl
dec
mov
movsb
mov
push
nop
mov
dec
rorl
bound
lcall
add
ficoms
arpl
mov
aas
inc
mov
jmp
push
movsl
adc
push
and
dec
dec
clc
fildl
lcall
cmp
mov
or
sbb
push
adc
lret
outsl
xchg
jae
movsl
push
dec
jae
out
xchg
mull
mov
mov
xor
mov
das
dec
adc
sub
push
xchg
dec
sbb
outsl
push
inc
imul
cmp
xchg
jbe
push
jl
add
push
hlt
fiadds
aad
int
pop
xor
cmp
dec
popa
adc
lret
jp
sub
xorl
imul
cmc
sbb
enter
mov
xchg
cmp
inc
cmp
outsl
aas
stos
cmp
adc
cli
or
imul
sub
inc
and
and
push
je
mov
add
jne
jle
jg
std
stos
push
pop
es
and
loopne
add
jbe
js
push
push
mov
cmc
loop
negb
or
mov
fidivrl
push
lcall
or
mov
popa
loop
adc
jnp
pusha
dec
stos
aaa
jb
subb
repnz
add
mov
jbe
dec
mov
js
jg
adc
xchg
jmp
hlt
pop
xor
rcr
out
in
xchg
lods
cmc
ret
mov
cmc
fldl
mov
in
jmp
jmp
stc
std
shlb
in
js
testl
icebp
dec
icebp
cmc
or
ja
xor
shl
stos
pop
sbb
sbb
movsl
jle
ja
pusha
sbb
mov
adc
pop
inc
lret
cli
or
inc
clc
mov
sub
jmp
nop
sub
fisttpll
lahf
cmpsb
and
push
aam
mov
loop
add
imul
ljmp
inc
mov
shl
jno
push
adc
in
mov
nop
jns
dec
add
hlt
push
push
or
mov
pop
pop
push
test
pop
mov
push
jnp
ret
push
inc
adc
jbe
adc
testb
jns
mulb
pop
cmp
adcl
push
je
das
popa
inc
cld
push
or
aas
or
dec
or
jnp
xor
daa
pop
mov
notl
inc
enter
sbb
stc
pusha
inc
mov
adc
loope
xchg
stos
add
fwait
pop
daa
push
jnp
sahf
add
mov
mull
pop
fwait
test
fistl
and
mov
inc
shll
in
aaa
fs
or
and
nop
shrl
xor
pop
push
push
xchg
cmpsb
jp
jnp
negb
push
inc
inc
sub
or
fmull
xchg
movsl
cmp
rolb
xor
mov
push
inc
inc
xchg
fstpl
push
xchg
std
mov
mov
out
pusha
mov
jns
or
xchg
aam
mov
jnp
xor
test
lret
jg
jecxz
push
fmuls
push
outsb
jb
dec
cmp
ljmp
sahf
push
xchg
xlat
jmp
and
xor
xor
fistl
jno
sbbl
mov
sbb
insb
cmp
sbb
jge
shrb
xchg
in
inc
mov
mov
inc
and
mov
jb
lret
lods
mov
xchg
lods
xchg
dec
sbb
fstps
stos
andb
mov
insb
data16
or
mov
mov
add
jg
mov
inc
or
cmp
xchg
mov
xlat
outsl
cmp
shll
rcrb
sbb
lods
movsb
xor
mov
mov
fldenv
popa
push
pop
lds
pushl
adc
inc
test
mov
shl
f2xm1
mov
out
xor
lods
mov
pop
rol
gs
in
inc
mov
mov
scas
inc
cwtl
and
bound
dec
icebp
aad
and
inc
arpl
xor
or
mov
shlb
adc
xchg
movsb
mov
jp
andb
push
xor
mov
xor
cwtl
ret
jnp
pop
add
jnp
cs
shll
aas
xchg
cmp
lret
sub
and
or
pop
into
or
fdivs
xor
sarb
cmpb
xchg
inc
add
push
push
icebp
add
xchg
or
rcr
adc
test
jbe
jp
jno
iret
mov
jle
popa
jl
sub
mov
dec
mov
cmpl
jmp
fstpl
into
inc
mov
in
sbb
adc
pop
cmp
xchg
aas
cmp
pop
inc
outsl
jl
lock
in
mov
cmp
mov
loop
jp
shl
push
out
icebp
xor
in
and
push
sub
das
sbb
mov
pop
cmpsl
sub
cmp
rolb
lods
mov
inc
xor
cmp
cmc
cltd
pop
subl
mov
fucomip
push
mov
test
add
loope
out
add
mov
pop
inc
aam
lret
adc
mov
mov
or
fldt
into
out
mov
push
movsb
dec
addb
je
sbb
insl
and
lcall
and
sbb
outsb
mov
mov
cmp
into
cwtl
dec
push
push
dec
push
add
pushl
nop
adc
push
fdivl
dec
gs
mov
xor
popa
sbb
push
idivb
push
fmull
imul
repnz
jb
fidivrl
lahf
icebp
mov
insb
or
call
dec
sbb
sbb
repnz
ss
popf
or
inc
xchg
test
jge
jbe
push
outsb
xchg
pushw
sub
repnz
mov
pop
xor
mov
xor
cltd
dec
mov
adc
sti
lahf
add
movl
add
call
add
pop
jne
in
cmpl
inc
xchg
xor
mov
lret
mov
or
dec
shrb
cmp
sbb
mov
mov
scas
fisttps
loope
lcall
mov
jle
mov
mov
jae
cmpsb
add
cld
xchg
loope
cmc
lret
or
iret
jl
inc
lea
pushw
iret
sub
mov
or
adc
js
cltd
decl
add
movsl
cs
xor
cmp
mov
pop
pop
icebp
nop
inc
data16
pop
outsb
dec
aas
stc
jp
cli
lods
imul
fs
sbb
mov
jge
xor
mov
pop
mov
xchg
fcmovb
dec
pushf
xchg
pushf
cmpl
push
mov
rcrb
sbb
sbb
xlat
jecxz
xchg
add
xor
int3
lods
cmp
jb
push
and
dec
fmulp
sbb
xor
lea
push
mull
andb
mov
sbb
cmp
cmp
add
stos
movsl
push
js
push
mov
mull
add
iret
addl
aad
out
js
xchg
add
dec
mov
or
ret
adc
ret
push
mov
sub
inc
mov
sub
add
outsb
mov
xchg
icebp
push
or
mov
sub
fstpt
test
nop
push
scas
movsb
pushf
mov
lock
mov
sub
pop
inc
fwait
out
je
std
lret
ficompl
shll
xchg
dec
fldcw
fwait
xchg
sbb
fucomp
pop
popa
pop
push
stc
aad
sub
icebp
add
add
cmpsb
cmp
jmp
jle
pop
jbe
and
mov
jmp
sub
pop
pop
jecxz
mov
xchg
rcrl
popf
insb
rol
ret
cmp
paddb
cld
aaa
out
testb
mov
lods
stos
sti
jl
subl
inc
jne
mov
mov
sub
outsb
xchg
add
lret
cmp
icebp
pop
pop
push
hlt
ljmp
adc
inc
imul
adc
lcall
scas
mov
enter
fiadds
popf
lds
adc
lds
sbb
int
test
and
push
ret
jmp
scas
test
push
rorl
fwait
test
dec
cmpsl
jecxz
mov
fwait
cmpsl
jg
push
movsb
xchg
mov
dec
pop
aas
imul
jns
dec
cmp
jo
xchg
test
mov
lret
mov
xchg
mov
ds
out
aam
aaa
or
fwait
and
and
and
repz
decb
popa
loop
xchg
test
sub
cs
add
jg,pn
js
adc
popf
push
in
in
pop
adc
mov
sbb
bnd
mov
aas
cmpsb
cmp
js
lret
jg
popf
mov
aas
leave
aam
cmp
xchg
mov
xchg
mov
lret
dec
jne
jne
leave
fs
push
lock
sub
or
pop
popf
fsubrl
push
cmp
adc
push
xchg
push
sbb
cmp
pop
mov
les
jbe
lret
inc
enter
stos
bts
xchg
dec
repz
add
xor
fstl
das
dec
aad
ss
or
shll
out
idivb
mov
dec
mov
mov
sti
shlb
popa
cmpsb
enter
mov
mov
jg
inc
sbbb
lcall
mov
jmp
xor
rcrl
adc
out
aad
push
icebp
mov
push
mov
sub
nop
lret
movsl
fst
xchg
movsl
inc
ror
cmp
test
sbb
test
cli
lret
mov
stos
xorb
inc
lea
fs
les
lods
imul
shufps
sti
inc
adc
shrb
or
lds
loop
ret
mov
push
clc
adc
pop
scas
arpl
xchg
pop
jnp
jmp
adc
loop
dec
sub
test
sti
jmp
pop
mov
and
add
push
mov
jbe
jo
or
xchg
lahf
dec
pop
or
cwtl
insl
movsl
fidivrl
xchg
sbb
sahf
add
clc
inc
fnstcw
jbe
int
xchg
fcompl
or
inc
xchg
lock
xchg
jo
jne
scas
leave
push
out
cmp
cmp
cs
fwait
add
mov
dec
xchg
jg
mov
imul
test
mov
pop
popa
inc
mov
xchg
in
aas
nop
fxch
xchg
and
les
fwait
lahf
jmp
cli
cwtl
enter
rcl
mov
int
aam
or
nop
xchg
sbb
mov
mov
lds
jns
repz
sti
jbe
xchg
push
jns
xchg
hlt
nop
sbb
xchg
jmp
into
mov
xchg
shll
adc
stc
test
adc
int3
fdivl
add
lea
shll
outsl
xor
mov
test
cmp
aam
popf
es
xor
out
cli
xchg
cmpsb
clc
mov
inc
mov
pop
fidivl
movsl
stc
out
out
dec
xchg
sbb
mov
lods
sahf
xchg
aad
out
mov
int3
inc
push
shll
mov
jo
movb
daa
test
xchg
or
pop
cmpb
or
and
movsl
sub
call
addl
adc
orb
loop
cmp
dec
gs
mov
adc
sbb
pop
add
int
cwtl
test
test
cwtl
xlat
xor
mov
in
jecxz
mov
xchg
jmp
jae
sti
bound
jge
test
iret
xor
ss
inc
sti
and
mov
mov
mov
pushf
mov
inc
cwtl
jns
jmp
lods
fwait
movsb
mov
je
mov
pop
cmpsb
dec
clc
mov
xchg
scas
lds
push
scas
loop,pn
push
rcrl
rorl
mov
sub
test
xlat
lock
fwait
enter
imul
mov
lahf
or
jb
sahf
mov
xchg
dec
push
pushf
pop
mov
jmp
cltd
mov
into
loope
pop
inc
cmp
out
lret
test
dec
test
pop
push
adc
adc
xchg
shll
cs
inc
or
mulb
sub
xor
jae
jnp
push
cmp
or
hlt
enter
sbb
mov
mov
dec
std
movsb
inc
hlt
pop
mov
xchg
sarb
test
dec
in
in
data16
aaa
out
out
test
aaa
dec
push
or
mov
movsb
push
push
je
out
mov
adc
push
or
aad
push
push
dec
fidivrl
sub
adc
sub
xor
jge
or
inc
mov
cs
push
out
insl
adc
test
jo
scas
clc
cwtl
mov
int3
cmpsl
outsl
lods
or
push
cs
mov
pop
ret
pop
test
cli
icebp
es
cs
pop
sbb
inc
push
divl
outsl
push
push
popf
loop
pop
xchg
test
scas
mov
lods
adc
jbe
cmp
cmc
jbe
mov
add
incb
and
inc
push
in
fidivs
sub
out
ret
adc
pop
mov
push
imul
mov
lret
sub
mov
movsl
jg
add
cs
repnz
jnp
add
mov
push
fsubr
mov
or
jg
imull
int
pop
scas
pop
mov
cwtl
sbb
inc
gs
jb
imul
cmp
inc
mov
lahf
inc
or
outsb
imulb
out
push
pop
jcxz
mov
mov
call
ds
clc
push
inc
fimuls
loope
xor
xor
int
push
push
sbb
fdivrs
ficompl
sbbb
in
test
out
mov
mov
ficompl
lret
push
lret
add
test
mov
mov
out
mov
mov
imulb
mov
add
push
pusha
mov
sbb
ss
and
or
mov
or
cmp
dec
xor
in
out
sbb
push
pop
jmp
sub
push
lea
or
xchg
out
jae
out
push
int
adc
mov
and
mov
and
add
push
xchg
jmp
jg
cld
add
repnz
mov
jmp
push
fld
dec
int3
arpl
add
dec
test
leave
cld
vpmulhuw
jl
outsb
jecxz
mov
dec
enter
add
test
hlt
dec
pop
mov
imul
stos
jge
jecxz
test
push
inc
add
aad
int
mov
mov
fwait
outsb
daa
hlt
add
dec
xchg
pop
xchg
popl
and
aas
xor
push
xchg
xlat
mov
lods
sbb
xchg
sub
adc
pop
test
xchg
cmp
pop
dec
mov
dec
pop
sub
xor
jg
jmp
sar
or
arpl
es
call
cmp
cld
add
fs
lahf
in
lds
mov
cld
cmpsb
in
in
mov
fildl
pop
cmpsb
pop
out
cmp
add
cmp
adc
mov
mov
fldcw
aas
mov
or
jg
pop
mov
jae
inc
aad
jmp
mov
icebp
loopne
adc
dec
xor
jne
fucomi
sbb
fwait
sar
jae
ret
inc
jb
int
in
add
dec
in
push
fucomi
repz
mov
repnz
jne
push
and
sub
orl
std
pop
push
dec
jecxz
or
or
sub
lods
test
push
getsec
sbb
mov
loope
fnstcw
rcr
push
add
jnp
cmp
inc
pop
and
out
add
hlt
imul
inc
outsl
or
rcl
jl
xor
idiv
xchg
idivl
int
push
sub
dec
movsl
daa
mov
leave
pop
xchg
mov
loope
pop
or
loope
cwtl
pop
sbb
sub
testl
stos
test
test
adc
cmpsl
inc
leave
adc
dec
pop
pushf
cmpsb
mov
add
adc
sub
adc
inc
cmp
bound
mov
mov
or
daa
test
cltd
stos
addb
mov
push
xor
or
decb
sub
inc
adc
movsl
les
loope
mov
jg
xchg
sbb
xor
pop
dec
mov
inc
mov
push
adc
push
daa
pop
push
jno
add
gs
push
repnz
mov
les
push
arpl
inc
lahf
dec
or
sub
and
adc
jp
loope
ja
add
cmp
mov
mov
lock
addb
pushf
push
mov
xlat
invd
scas
outsl
dec
push
mov
jge
pop
fnstcw
sub
repz
roll
insl
imul
cmpsl
rorl
leave
or
out
js
cmp
push
xlat
jp
mov
test
pop
cmp
jae
gs
jns
test
movsl
sbb
sub
scas
int
imul
stos
inc
icebp
fs
add
add
add
aam
lock
and
cltd
aaa
fcmovnu
jo
lods
dec
pop
mov
push
out
in
lock
mov
stos
das
xor
and
xor
std
cltd
xchg
mov
dec
dec
in
lea
fsubrp
in
adc
xor
xchg
xor
shll
ljmp
lods
ret
outsb
out
xor
jnp
jns
call
adc
mov
leave
scas
iret
or
or
dec
mov
and
push
ljmp
adcb
lds
in
push
int
ret
mov
mov
add
add
out
je
dec
mov
fistpl
mov
sub
ljmp
fdivs
sbb
mov
mov
aaa
mov
outsl
push
cs
cltd
and
fldenv
icebp
jecxz
int
in
mov
jb
inc
jl
lahf
pop
xchg
fs
loop
ret
fucom
mov
xchg
pop
mov
daa
js
fldl
mov
jnp
pop
pop
pop
mov
mov
sbb
add
jmp
xchg
ljmp
xchg
mov
aad
ret
repnz
push
adc
xchg
or
movsw
xlat
pop
inc
mov
dec
dec
int3
repnz
add
gs
push
negl
inc
pushf
xlat
jl
mov
movsl
int
out
dec
push
pusha
movsb
cmp
leave
repnz
push
mov
cmp
aaa
cltd
jb
cli
fcompl
sahf
jnp
jle
inc
enter
mov
test
dec
jae
mov
or
das
pop
or
cltd
mov
xor
ret
ror
sarl
adc
test
fcoms
xlat
xchg
inc
or
sub
xchg
mov
aas
add
push
inc
sbb
popa
xor
xor
add
sub
sbb
insl
sub
sbb
cmp
test
call
fadd
and
add
pop
push
jno
dec
xor
das
in
jb
or
gs
jmp
arpl
dec
xorb
fists
mov
or
xlat
das
fs
nop
add
cltd
outsb
or
sub
mov
inc
test
in
sbb
mov
mov
idivl
xor
xchg
ljmp
out
lds
xchg
or
adc
fstp
jecxz
in
sahf
adc
mov
aaa
not
mov
out
repnz
cmc
test
call
xchg
imul
jmp
sub
push
nop
mov
daa
cli
int
and
cli
inc
add
les
loope
mov
jmp
call
insl
sbbb
movl
adc
sub
xchg
ljmp
arpl
jmp
cld
fidivs
sbb
xchg
sub
or
movsb
mov
jecxz
es
xor
call
cmp
mov
clc
mov
je
cmpsb
out
jg
bound
loopne
testl
daa
test
jb
addr16
cmp
jp
test
loope
and
cmc
out
in
sahf
sbb
stos
add
and
ds
xchg
sbb
xchg
push
arpl
cmp
out
lcall
imul
mov
xadd
js
jge
data16
dec
sub
jnp
add
das
scas
lods
daa
shll
pop
cmp
inc
ljmp
lods
mov
sbb
xchg
lods
ficompl
pop
lahf
sbb
std
jmp
push
call
rclb
cmp
mov
push
ja
mov
das
xor
dec
mov
pop
addb
jmp
arpl
cld
xchg
rclb
loopne
mov
sub
mov
js
adc
dec
pop
pop
jno
dec
clc
insb
cmp
adc
out
mov
shl
xor
mov
flds
xchg
cwtl
sub
or
iret
mov
in
xchg
pop
dec
inc
mov
cli
stos
and
mov
std
cmpsl
loope
pop
or
test
nop
rcl
nop
sub
pushf
pop
add
xor
pop
test
dec
aas
add
sarb
movsl
lret
pop
notb
mov
adc
repz
stos
xorb
xor
sbb
inc
jnp
cmp
mov
inc
das
int
out
pop
mov
mov
fdivr
out
scas
xchg
xchg
lret
out
xchg
or
into
xchg
lds
outsb
add
ffree
shrl
push
pop
iret
sbb
inc
sub
xor
hlt
imul
cwtl
test
enter
jno
pop
jbe
int
scas
xor
rolb
into
ljmp
shll
mov
mov
dec
pop
xchg
jns
ljmp
imul
bnd
jbe
lds
mov
cmc
popa
adc
enter
cld
add
inc
sbb
dec
xchg
pushl
pop
inc
push
dec
sti
adc
enter
jno
aam
mov
dec
or
lahf
push
jl
hlt
and
fadds
into
lret
fs
push
push
ret
loope
add
and
imul
insb
in
repnz
roll
jne
daa
adc
sbb
xor
test
jno
movsb
lret
pop
fwait
adc
adcb
fstpl
repnz
fistps
adc
sub
cmp
cmp
sbb
xchg
jp
sar
faddl
pop
loope
pushf
mov
popf
shlb
outsl
mov
lea
sbb
mov
cmpsb
jb
mov
xor
jecxz
or
enter
and
loop
jp
out
in
sahf
frstor
mov
call
xor
push
das
aad
xchg
pop
dec
xor
or
pop
pop
mov
dec
in
jns
sbb
rol
arpl
gs
cmpl
dec
mov
gs
and
stc
mov
mov
push
std
sbb
xor
out
sbb
sub
nop
stc
popf
in
inc
cmpsl
dec
pop
out
lret
xchg
int3
ljmp
in
ret
pop
incb
xchg
sahf
pop
scas
outsb
sarl
sub
or
pop
jae
repz
lahf
js
sub
stos
in
inc
sub
mov
js
dec
or
testl
pop
hlt
cmc
vzeroupper
fisubrs
xlat
jns
pop
dec
pop
insb
fisttpl
sub
test
insb
movsb
jne
xchg
lret
ret
lods
dec
mov
add
sub
push
repz
mov
cmp
cltd
je
xchg
fsubr
add
imul
out
xchg
mov
mov
dec
xor
ljmp
loop
sbb
push
scas
mov
and
ficoms
inc
rcrl
dec
cld
pop
loope
pop
pop
hlt
sbb
cmp
sub
dec
int3
xchg
aam
fwait
lods
sbb
fisubl
mov
jns
ljmp
je
mov
aas
mov
jl
mov
in
cmp
mov
mov
and
adc
int
leave
mov
mov
cmpb
cmp
pop
cld
inc
loop
and
or
mov
js
or
adc
cmp
xor
arpl
cmp
inc
jmp
and
call
inc
rcr
out
out
cmovo
push
out
in
mov
inc
xchg
bound
and
jecxz
pop
push
jg
inc
sub
adcl
pop
outsl
sub
push
cli
dec
or
pop
cmc
mov
hlt
mov
inc
insb
ds
sbb
outsl
jge
or
orb
ror
aam
aas
popa
ja
mov
mov
js
xor
adc
mov
int3
dec
cmp
ljmp
dec
and
sahf
or
pop
fwait
xchg
mov
into
push
push
push
test
xchg
xchg
fmuls
or
and
insb
cli
fs
fwait
adc
in
sti
sub
punpckhdq
js
pop
cmpsl
xor
sarb
mov
les
loop
sbb
cmc
iret
pop
xchg
inc
call
into
ja
jae
ja
jg
dec
notb
cmc
push
mov
mov
jmp
stos
or
mov
lcall
repz
shrb
orb
sahf
cmp
xchg
mov
xchg
ficomps
and
xchg
shll
cmc
mov
in
xchg
pop
inc
negb
rcl
jb
and
adc
in
jg
jl
add
mov
add
push
cmp
xchg
mov
jo
jno
outsb
dec
jae
pushf
movsl
sub
test
mull
push
rclb
into
mul
mov
popa
data16
lahf
in
add
pop
push
inc
push
insl
xchg
pop
mov
push
cmp
sbb
repz
in
in
fldt
out
rol
jbe
jb
fimuls
mov
mov
jge
sbb
jl
sub
dec
inc
add
cmpsb
and
rcrl
rcrb
into
out
xor
loop
jne
jbe
inc
dec
stos
cmp
push
pop
shlb
mov
cmpb
faddl
inc
mov
idivl
xor
lea
or
std
inc
inc
mov
xor
push
aas
and
xchg
mov
pushf
sbb
xorl
imul
push
sti
test
in
or
fistpll
loop
arpl
jo
inc
mov
mov
ret
bound
out
pop
cmpsb
repz
cmpsb
hlt
aas
and
ret
ds
jbe
decl
and
sbbl
or
and
jno
imul
xchg
ja
insb
mov
jle
fstl
fnstenv
roll
or
jle
jle
push
ljmp
cmp
pop
rorl
inc
testl
sahf
call
jns
rcrb
mov
mov
lock
dec
xor
xchg
je
test
aaa
clc
imul
sub
or
scas
xor
or
add
xor
insl
sub
mov
mov
cmp
push
add
pop
test
adc
add
insl
inc
jns
sbb
add
in
push
pop
jl
data16
pop
xchg
add
ja
or
sbb
sti
gs
scas
xor
icebp
std
outsl
int
sbb
cltd
mov
sbbb
push
mov
push
fs
out
aas
les
popf
pop
sbb
and
xor
es
add
sbb
or
mov
ja
dec
mov
imul
int
cld
mov
mov
cmpsb
mov
xor
sbb
pop
out
adc
sti
mov
push
jns
xor
fdivl
test
lret
mov
mov
arpl
popa
adc
fs
adc
mov
xchg
sbb
sub
pushf
sub
mov
sbb
mov
dec
pusha
test
out
pop
xchg
jno
lcall
outsl
lea
inc
imul
test
jg
adc
aas
inc
push
push
fld
dec
stos
aad
lock
js
js
or
and
and
dec
fsub
pop
push
push
scas
pop
push
or
push
cwtl
jp
xchg
sti
xor
inc
jge
jne
cmpsb
add
fsts
mov
mov
filds
pop
aam
test
sub
adc
lock
fdivrl
inc
mov
push
xchg
xchg
pop
mov
dec
adc
shlb
xor
or
pop
mov
fsubr
imul
test
inc
sbb
mov
sbb
sysret
out
cli
add
icebp
inc
push
addr16
push
xchg
jl
inc
addb
cmp
sub
lahf
mov
sbb
push
pop
test
mov
lcall
ja
ss
leave
xchg
loope
test
loop
mov
icebp
sub
test
jno
push
lahf
aam
or
sarb
push
scas
push
insb
std
stos
sti
test
in
arpl
push
popf
aad
sbb
xchg
stos
cmp
mov
mov
push
pop
jmp
mov
add
inc
adc
cmp
andl
and
inc
mov
das
and
pop
sbb
pop
ror
add
jae
mov
adc
cltd
lahf
aaa
nop
mov
loopne
inc
es
inc
call
mov
pop
mov
xorl
lcall
in
push
mov
xchg
popa
packuswb
lods
push
out
inc
sub
lods
xor
dec
movsb
stos
rorb
mov
lods
jae
pop
push
push
pop
divb
add
call
sub
lea
fwait
jne
push
push
clc
inc
in
mov
in
lret
cmp
pop
gs
test
jmp
call
mov
addr16
mov
mov
push
aam
cmpsb
mov
mov
cltd
popa
mov
mov
arpl
das
jmp
popa
dec
xor
int3
in
mov
std
inc
cs
lret
or
pop
ljmp
sub
into
addr16
dec
aas
push
in
scas
outsl
cmp
jnp
movsl
add
push
ret
sbb
sbb
nop
cmp
mov
mov
testl
daa
xchg
aas
int
inc
ja
add
mov
push
mov
jg
xorb
sub
adc
loope
mov
add
add
push
iret
mul
jl
adc
sub
test
mov
mov
adc
imul
mov
xor
gs
mov
and
fdivrl
push
inc
push
sbb
inc
jne
je
rcrl
push
xchg
jb
daa
add
xchg
iret
pop
sbbb
jnp
fidivl
mov
cmp
into
push
xchg
popa
mov
xor
mov
cmp
fcmovnu
ficomps
pop
lea
mov
mov
xchg
ja
dec
test
imul
mov
in
adc
into
pop
pop
adc
cli
sbb
xchg
mov
add
mov
mov
push
stos
sub
aam
xchg
hlt
inc
insb
push
in
test
or
push
push
push
fsubs
dec
pop
push
mov
or
push
adc
cmpsl
incl
and
aam
imul
xor
mov
push
in
or
push
int3
and
jae
mov
adc
xchg
imul
les
mov
subl
add
add
std
and
mov
pop
lds
rcrl
adc
dec
jnp
out
inc
pop
jnp
jno
outsl
pop
adc
lock
cmpsb
orb
lcall
mov
cmp
ret
push
test
iret
dec
cmpsb
or
cltd
xor
mov
outsl
scas
lods
fs
aam
movsb
lret
sti
ret
add
mov
fdivrl
outsb
mov
mov
and
push
aaa
sti
rorb
sbb
pusha
pop
jbe
jns
mov
mov
int3
push
pushw
mov
fdivl
mov
test
daa
jp
out
jp
movsl
push
loope
popa
mov
mov
adc
aas
cmpsb
sbb
pop
mov
test
les
xchg
mov
hlt
sub
enter
sbb
pop
scas
pop
push
dec
call
dec
adc
add
filds
adc
cmovns
cmpsb
mov
xlat
hlt
popf
pop
pop
mov
cmp
int
push
and
cmpsl
nop
mull
sahf
xor
fildl
mov
aam
push
rclb
adc
pop
fwait
push
dec
aas
data16
ds
movb
pop
ficoms
jo
loop
push
in
push
mov
push
movsb
cmp
lahf
adc
jns
scas
and
push
push
ljmp
mov
xor
lods
mov
and
adc
push
mov
lods
sub
mov
test
mov
hlt
inc
push
mov
insb
cld
mov
enter
jecxz
mov
fsubs
fadds
enter
ret
jns
mull
cs
rolb
lret
stos
cmp
xchg
in
daa
jbe
and
push
pop
or
add
jp
hlt
xchg
pop
inc
or
sbb
dec
cwtl
stc
mov
pop
dec
daa
insb
xor
inc
pop
xchg
jecxz
push
sahf
mov
fsubp
iret
mov
sbb
inc
inc
gs
clc
push
adc
pop
and
adc
sti
std
shr
pop
cmpsl
push
or
push
lods
pop
pop
cmp
sub
insb
or
cmovl
add
fimuls
or
popf
ja
loop
das
pop
sub
sarl
xor
mov
pop
pop
lret
call
inc
fidivl
out
fwait
imul
add
pop
daa
test
cmp
jo
ljmp
jnp
adc
mov
inc
adc
std
in
in
pop
addr16
fdivs
xchg
call
jno
xor
mov
outsl
testl
or
cli
lahf
mov
pop
mov
lret
test
stos
jne
fistpl
mov
dec
hlt
inc
mov
stos
mov
jne
insb
sub
cmp
imul
push
les
and
in
lret
push
fcom
gs
loop
stos
jp
pop
inc
out
pop
adc
pop
cmp
sub
lcall
js
dec
stc
shrl
mov
repnz
add
sti
sbb
jge
push
xchg
ss
and
inc
pop
nop
cld
mov
test
fistl
lods
cli
rcrl
push
add
push
push
sti
lock
jno
fcmovnbe
test
adcl
jne
and
faddl
inc
mov
fcompl
push
cmpb
inc
push
fstpt
mov
popa
insl
sub
mov
mov
int
push
int
test
mov
outsb
sbb
ja
or
inc
jne
push
nop
jo
inc
inc
adc
gs
aad
into
jb,pt
dec
in
cld
and
mov
fidivrl
fdivrl
dec
cmc
adc
mov
fs
xor
insl
out
iret
xchg
pop
je
xchg
mov
mov
insl
adc
mov
cmc
fmull
push
inc
pop
or
std
cmp
push
data16
push
repz
icebp
out
outsb
and
icebp
mov
lahf
push
ds
mov
and
in
repz
stos
push
cmp
iret
push
popf
cmp
faddl
pop
stos
jge
push
popa
out
pop
addb
sbb
test
push
mov
cs
ror
add
std
into
test
aam
jb
mov
ljmp
mov
jp
cmp
and
cmpl
aam
getsec
outsb
in
and
push
xlat
je
push
mov
out
outsl
pop
or
xor
inc
pop
lea
mov
pop
shr
cmp
sub
clc
inc
inc
sbb
push
gs
imul
push
into
jl
and
das
popa
ret
rorb
lods
dec
add
enter
inc
pop
aas
in
loopne
adc
movsl
push
scas
sub
ret
pushf
std
sub
lcall
mov
sahf
adc
stos
xor
roll
loope
mov
push
mov
outsb
fwait
lret
dec
das
sub
daa
cmp
outsb
pop
lahf
mov
jns
inc
add
inc
inc
cmpl
scas
and
cltd
lret
and
pop
inc
mov
sbb
cmp
push
mov
cmp
xor
mov
mov
sub
fildll
pop
pop
sbb
pop
jp
push
cld
int
xor
pop
out
movsb
dec
test
fsts
inc
out
xchg
in
sbb
decb
ds
je
mov
cmp
pusha
pushf
sub
add
pop
jns
adc
ret
imul
rorb
pushf
or
mov
pop
jno
lods
mov
js
lods
push
mov
call
test
push
into
dec
rcrl
lea
push
cmp
lds
je
nop
das
jne
jg
dec
aad
mov
mov
ds
pop
popf
jp
pop
icebp
or
mov
pop
fdivl
repz
pusha
mov
lods
ljmp
xor
fistpl
xchg
int
push
pop
add
sub
mov
pop
scas
ficompl
cmp
insl
popf
pop
ss
push
les
jb
bound
nop
mov
lcall
ss
aad
xor
testb
bound
jmp
int
cli
std
pop
gs
scas
or
push
lret
stos
roll
imul
or
mov
and
mov
push
push
mov
test
pushl
and
dec
xchg
gs
nop
cmp
or
adc
mov
mov
cmc
or
ljmp
push
add
in
adc
insl
push
es
out
fisttpll
clc
jecxz
xchg
outsb
and
icebp
lea
repnz
in
imul
and
negb
sarb
rorb
dec
mov
inc
mov
mov
or
jle
dec
insl
add
std
xchg
scas
mov
or
clc
loopne
loope
fdivrs
je
mov
jp
je
or
mov
dec
lret
jbe
xor
mov
rol
iret
in
push
insb
sbb
lret
mov
inc
lret
xor
fs
test
lea
insb
sbb
mov
rcrb
or
jns
cmpsl
sahf
std
sbb
mov
lds
cs
les
movsl
push
push
dec
movsb
cwtl
mov
out
dec
cs
pushl
lret
mov
and
sar
inc
insl
cld
dec
pop
inc
cmpsl
mov
and
call
cmp
jbe
int
dec
loop
ss
sarl
jmp
adc
pusha
xor
lods
shll
sub
adc
pop
sti
mov
iret
addl
test
fucomip
movsl
mov
fists
push
adc
or
mov
out
pop
out
inc
in
pop
mul
rolb
mov
mov
repnz
in
imul
out
icebp
inc
into
mov
push
icebp
mov
mov
cmp
stos
sbbb
push
mov
push
add
stos
adc
xchg
mov
call
lods
dec
lret
int
mov
in
arpl
faddl
xchg
and
lahf
fadd
inc
rcll
add
out
pop
stos
mov
mov
sbb
fwait
loop
test
lock
or
cmpsb
fstpt
sub
in
or
mov
pushf
push
push
jnp
addr16
ret
ja
mov
sbb
stos
pop
into
inc
mov
jp
mov
test
scas
sub
cs
jb,pn
not
mov
push
stos
decl
push
adc
call
insl
shl
adc
arpl
ss
insb
or
mov
jno
outsl
sub
pop
cmpsl
sbb
push
movsl
push
jae
dec
in
adcl
fnsave
cmp
test
push
sub
push
decl
stc
jne
ds
sub
xor
pop
out
jns
or
adc
jle
mov
movd
cli
mov
jne
inc
addr16
cmp
pop
loop
or
pop
add
adc
cmpsl
mov
dec
in
mov
mov
sahf
mov
jo
mov
cmc
cmp
sahf
cmp
lahf
adc
gs
fadd
adc
addl
shrl
sbb
and
ljmp
dec
mov
loop
mov
adc
lret
insb
and
cmpsl
xor
mov
cwtl
sbb
out
inc
jns
repz
cld
daa
dec
xor
jb
dec
xor
mov
andl
aas
mov
push
loop
push
mov
movaps
pop
xchg
test
xor
mov
pop
add
mov
iret
push
push
xchg
xor
jns
inc
fimull
mov
mov
out
test
cmpsb
ret
aam
mov
in
push
js
adc
stos
sbb
push
js
fsts
hlt
xchg
lea
mov
jmp
lock
ds
fs
fwait
xchg
fwait
add
test
push
iret
cmp
clc
insb
pop
adc
sarb
ja
inc
testl
mov
mov
rep
insl
dec
mov
xchg
dec
adc
dec
mov
mov
dec
insb
repz
mov
outsl
jge
push
mov
adc
pop
fs
stos
cli
int
sub
cwtl
jo
mov
outsb
push
sbb
cs
lea
in
mov
adc
dec
add
in
fidivl
out
jbe
fwait
pushf
pop
jne
jp
arpl
add
nop
mov
xor
jmp
rclb
arpl
clc
push
ret
cmp
and
cmpl
jle
lahf
mov
loop
mov
enter
movb
das
add
xchg
sbb
es
add
mov
and
movsb
cld
mov
mov
cmpsl
bound
push
pop
and
jne
popa
mov
test
int3
adc
cltd
push
mov
repz
adc
dec
and
jb
ja
fdivl
pop
mov
inc
jb
dec
in
scas
jb
or
inc
xor
mov
int3
jne
addl
js
xchg
repz
adc
sbb
aad
mov
scas
push
leave
push
imul
pop
ds
mov
rcrb
xor
push
ds
jnp
xor
addr16
sub
jg
or
adc
jo
sub
mov
mov
andl
lcall
push
push
lahf
stos
pop
mov
roll
scas
push
adc
pop
test
push
jge
sub
test
idivl
mov
dec
clc
inc
push
test
mov
mov
lcall
insl
pop
gs
inc
cmp
lods
pop
xchg
xchg
outsb
pop
pusha
push
add
lret
imul
push
cmovns
adc
std
pmulhuw
push
mov
test
xchg
ret
mov
inc
clc
fiaddl
mov
pop
cltd
mov
mov
sbb
repnz
in
jecxz
call
icebp
adc
xchg
pop
cmpsb
cltd
jno
adc
or
and
ficoml
jmp
xchg
adc
push
adc
rolb
push
int
mov
or
push
push
push
pushf
in
dec
inc
sahf
loope
aad
cmp
cmc
pop
dec
adc
adc
fisttpl
fisubrs
aas
inc
xor
stos
bound
sub
xchg
adc
int
pop
nop
aas
push
sub
pop
jo
push
cmp
insl
shlb
pusha
fcomps
sbb
adc
push
popa
outsl
js
adc
mov
mov
pushf
xor
xadd
push
or
xor
nopl
lock
inc
jp
cmp
mov
repz
dec
push
cmp
add
jno
pop
push
ss
xchg
add
push
cmpsl
test
lcall
push
sahf
por
clc
add
loop
push
xchg
pop
lret
stos
filds
pmuludq
add
mov
test
daa
leave
xor
ficoml
xlat
push
xor
cs
jmp
lock
jecxz
movsl
add
pop
movsb
jns
sub
sbb
scas
jb
mov
add
cltd
push
cmc
inc
mov
cmc
fmul
adc
arpl
sub
inc
dec
push
and
push
lret
sbb
das
pop
dec
xchg
aam
andl
or
sbb
push
pop
or
add
pushf
insl
in
xchg
sarl
fisubrs
mov
dec
iret
push
enter
add
inc
pop
out
lods
scas
push
lea
push
movsl
push
adc
daa
mov
fwait
pop
jb
ljmp
mov
out
jle
ja
decb
into
cld
inc
jno
push
test
sbb
adc
push
and
xor
sub
into
xor
ficomps
lret
mov
push
xchg
add
or
pop
in
ret
shll
push
mov
push
sub
fstps
mov
xchg
loopne
mov
cmpsb
sbb
jb
xor
xchg
pop
nop
call
lods
test
pushf
dec
xor
rcrl
test
sub
stc
xlat
leave
push
in
aad
imul
xor
push
cmp
fs
movsl
rorb
lahf
inc
add
or
sub
mov
adc
push
loope
mov
test
aad
or
mov
jl
inc
out
pushf
loope
add
xchg
sbb
outsb
and
cs
leave
mov
shlb
pushf
jnp
and
xchg
je
out
mov
and
cmp
add
push
mov
xor
mov
popf
fwait
xor
and
imul
push
xchg
mov
fs
jmp
imul
in
pushf
cmp
inc
les
push
andl
std
pusha
stos
lods
sub
pop
xchg
xchg
xor
nop
cwtl
add
mov
jo
and
ja
jle
and
dec
mov
xchg
push
scas
mov
mov
cmc
inc
test
out
add
jb
mov
push
pop
cmpl
jns
frstpm(287
clc
stos
lret
ss
in
xchg
int3
call
out
adc
xor
mov
lods
fwait
cld
psllw
xchg
and
push
outsl
iret
jne
in
mov
into
push
scas
inc
xchg
gs
jmp
popa
adc
and
aam
je
cmp
inc
ret
lcall
dec
dec
ss
sbb
lret
push
aas
jge
fistpll
xor
lock
inc
push
enter
lods
mov
fldl
test
sub
mov
sbb
cmp
mov
xor
cld
in
or
push
repnz
mov
lahf
icebp
cli
in
cmp
pusha
jo
cmp
jg
sbb
xchg
mov
xor
or
arpl
pop
subb
cmp
xchg
js
pop
lcall
or
ss
stos
andb
out
sbb
sub
push
xchg
fwait
add
sub
inc
xorb
es
and
cld
das
pusha
xor
lods
fs
fiaddl
aam
ss
xchg
jmp
dec
push
add
cmp
addb
push
jno
inc
into
xchg
imul
sbb
xor
out
push
mov
call
jo
dec
mov
inc
adc
xor
cmp
pop
xor
jle
push
cmc
filds
frstor
lret
mov
xchg
xor
test
jno
add
sarl
mov
adc
repz
ljmp
ds
lods
in
xchg
dec
in
add
fs
testl
cmp
mov
xor
or
mov
call
sarl
lcall
xchg
jecxz
jbe
stos
jno
dec
xchg
rcr
xchg
and
sbb
dec
aaa
and
mov
movsb
or
or
call
xor
call
xchg
ss
fstpl
sti
jge
pop
jmp
sub
test
or
mov
add
in
hlt
mov
adc
scas
clc
stos
dec
sti
into
xchg
mov
sub
mul
inc
push
cmp
mov
cld
enter
movsb
adcl
movl
scas
inc
sub
loop
pop
add
xchg
jns
jb
xor
jp
ds
ret
repz
or
dec
cmc
call
and
loope
fnstenv
mov
jmp
jno
jae
sti
rorb
push
jmp
adc
aam
sahf
gs
shlb
or
xor
xor
nop
inc
dec
orl
inc
ds
mov
jne
popa
mov
roll
inc
cmp
ds
cmp
cmp
sub
mov
imul
mov
mulb
lds
lcall
cltd
push
inc
cltd
outsb
pop
push
outsl
mov
mov
aaa
mov
sbb
mov
iret
pop
orb
jecxz
xor
push
jle
add
or
mov
push
leave
adc
nop
ds
push
add
pop
in
jl
sbb
add
int
pop
iret
pushf
fdivr
std
out
rcrb
lret
sbb
nop
stos
rcl
les
push
and
dec
add
pop
push
pop
sbbb
push
notb
stos
dec
mov
jo
out
stos
outsl
test
inc
push
hlt
jg
inc
jns
loopne
les
mov
sbb
pusha
ffreep
jp
push
mov
jge
mov
inc
fwait
mov
loope
test
lods
mov
or
adc
pop
rcl
cs
movb
sbb
cwtl
or
mov
insl
jne
insl
pop
bound
jnp
cmc
push
ljmp
sub
add
repnz
cmp
arpl
xchg
imul
xchg
je
out
xchg
push
movsb
frstor
fsubl
fnstcw
or
sbb
scas
or
push
xchg
cmpsl
aad
leave
fnsave
fwait
pop
xor
jnp
test
ja
and
push
pop
mov
aam
inc
cmp
shrb
mov
loop
inc
cmp
bound
in
pop
push
imul
push
xor
or
cmp
sti
jns
inc
inc
jno
sar
mov
cwtl
cmc
js
divl
push
mov
add
xor
jmp
ret
push
repz
insl
fcmovne
push
add
add
mov
push
mov
iret
je
dec
add
dec
pcmpeqb
xchg
dec
sbb
outsb
lods
sbb
xchg
pop
rcll
pop
aaa
inc
imul
cltd
xor
rolb
and
scas
mov
call
scas
pusha
popa
xor
nop
mov
pop
dec
dec
int3
lcall
jl
mov
fcomip
mov
jno
addr16
mov
jge
popa
pop
pop
jnp
jl
iret
hlt
jmp
jg
mov
add
iret
stos
push
fs
and
test
mov
push
jo
icebp
or
inc
jmp
xchg
mov
je
adc
sbb
cmpsl
mov
mul
fldenv
push
mov
mov
ret
inc
fucomp
add
sub
pusha
pop
mov
insb
cld
sbb
cltd
out
add
mov
testl
imul
push
cmc
lahf
lods
cmc
aam
fcom
mov
jg
out
cwtl
add
cmp
xchg
adc
sbb
in
pop
fwait
je
pop
mov
ja
mull
xchg
dec
sub
and
out
push
ret
imul
popa
pop
addl
lds
int
pop
mov
push
or
and
inc
xor
inc
or
int3
or
mov
and
test
je
jo
add
lcall
inc
sbb
ror
jle
les
daa
xor
pop
jne
fistps
fdivs
dec
jp
dec
and
or
gs
aad
icebp
lret
mov
je
sub
cltd
test
fdivrs
mov
pop
xor
xchg
xor
xor
outsb
jnp
cli
lds
mov
sub
cmp
cmp
push
nop
mov
jae
lds
jno
insl
jns
pop
mov
xlat
xor
mov
sarl
lock
mov
sub
jno
jmp
or
aad
inc
mov
jnp
lret
mov
into
pop
jg
adc
mov
jbe
testb
adc
fdivrs
jns
popf
jecxz
mov
inc
pop
mov
push
pop
and
je
scas
inc
stos
mov
addl
ret
aam
and
dec
fwait
sub
test
inc
arpl
inc
scas
adc
test
mov
push
lods
mov
jmp
lods
sub
mov
dec
mov
xchg
hlt
dec
das
frstpm(287
jae
loop
push
aad
lcall
or
pop
stos
cmp
aas
mov
mov
xchg
inc
call
cmp
pop
mov
add
shrb
inc
xlat
add
xor
shll
sub
xchg
inc
sbbl
pop
mov
jmp
sub
sbbb
rolb
dec
aas
pop
sahf
or
inc
gs
add
xor
mulb
xchg
and
or
jno
xchg
rclb
push
cmp
xchg
add
ja
xchg
mov
xlat
xlat
test
push
mov
mov
or
aas
lret
sbb
out
mov
inc
and
xchg
push
push
cltd
ja
xchg
ret
push
push
push
add
xchg
ret
movsb
mov
out
xchg
andl
lea
or
into
jne
fadd
filds
push
sub
jnp
lea
iret
xor
movsb
cwtl
pop
stos
scas
push
popa
fidivrs
xlat
ret
fcomp
add
adc
pusha
and
push
pop
daa
dec
sub
idivb
mov
adc
xchg
ret
outsb
in
idivb
jg
jecxz
faddp
sbbl
loopne
fistps
push
pop
mov
mov
sbb
cmp
pop
or
push
push
int3
mov
mov
dec
xor
adc
cwtl
jb
dec
inc
ljmp
add
dec
push
push
cmovl
mov
pop
out
or
cmc
aad
int
mov
adc
js
jnp
mov
dec
cmp
jae
icebp
les
lcall
mov
push
sub
into
lcall
jmp
jne
mov
dec
jbe
push
inc
mov
sub
or
adc
inc
push
and
into
sub
nop
xorb
jne
out
cmp
sbbb
jb
pop
mov
aaa
adc
rcl
stc
lds
xor
xor
jns
lret
ret
add
fcoms
cmp
sbb
subb
inc
ss
xor
daa
stc
fidivrs
mov
sarl
mov
xlat
push
push
vpand
fsubrs
test
or
push
outsl
roll
pop
adc
xchg
push
cmpsl
cmp
dec
xorl
push
pusha
sbb
je
adc
ss
lahf
pop
xor
insl
mov
xchg
js
xor
and
sbb
jno
mov
cltd
pop
push
jg
push
add
sub
push
pop
inc
sub
xchg
cmp
leave
das
dec
push
and
xor
bound
xor
adc
xchg
mov
fs
dec
lods
xor
mov
dec
lcall
jns
mov
pop
jg
shlb
lds
sbb
aas
dec
in
fwait
lahf
mov
inc
in
push
lods
mov
push
push
inc
sub
ja
int3
leave
stc
xchg
dec
loope
and
mov
in
cmp
cmp
dec
inc
in
lds
out
pop
fwait
loopne
into
xchg
xchg
shll
jmp
sti
mov
or
rorl
scas
cs
je
sub
xchg
mov
lahf
cmp
jno
sbb
jbe
sbb
push
sbb
stos
sbb
pop
adc
movsl
lock
fcompl
pop
int3
lea
jae
test
pop
mov
out
pop
fstpt
xor
sbb
xchg
lods
push
leave
xchg
add
mov
xchg
fdiv
sti
adc
dec
mov
push
movl
lret
mov
dec
mov
std
test
mov
cltd
push
xlat
push
enter
sub
bound
test
int3
and
add
pop
fidivl
xor
lods
aad
push
xor
inc
nop
cs
addr16
mov
call
shlb
aad
push
mov
cmc
into
push
xor
jp
pop
mov
aas
pop
sub
out
sbb
call
or
icebp
sbb
daa
mov
pop
shll
fists
les
es
jne
mov
xchg
fistpll
adc
cltd
sub
icebp
fistl
mov
adc
or
mov
popa
inc
fdivrs
mov
lods
xchg
mov
fdivrs
jmp
mov
mov
outsl
mov
push
shll
or
push
insl
push
hlt
push
fstl
xchg
hlt
xchg
cs
fiaddl
lock
and
add
adc
aaa
pop
push
inc
mov
adcb
sub
popa
inc
jg
les
xchg
xchg
sub
jp
outsb
cmpsb
scas
mov
shr
mov
cmp
sbb
les
mov
repz
mov
cmpsl
std
mov
add
jnp
or
pop
out
pusha
test
loopne
sbb
stos
int
pop
cmpl
or
push
popa
cmpsb
clc
aam
bound
add
loope
imul
rolb
dec
adc
mov
mov
xchg
test
out
mov
stc
in
out
ds
mov
mov
imul
stc
aad
iret
mov
pop
adc
fisttpl
cltd
stos
inc
push
sub
ret
xchg
outsb
repnz
pop
test
shlb
add
xchg
rol
jne
sbb
movsl
jno
or
aam
mov
xchg
sahf
es
push
popa
cmp
cmpsb
ja
push
cmp
out
xchg
loopne
fnstcw
jo
je
out
loop
and
push
stos
inc
push
jmp
inc
jmp
mov
ror
cmpsl
fnstcw
dec
sbb
adc
lds
fstpl
int3
or
mov
jmp
lock
sub
jo
imul
test
sbb
jg
sub
faddl
pop
aas
fsqrt
xchg
cmpsb
ljmp
mov
pop
jle
rcll
cmp
xchg
jnp
xor
mov
add
fiaddl
xor
mov
push
add
loop
bound
push
inc
pusha
fxch
hlt
add
mov
add
shll
in
lods
add
ds
sub
jp
pop
je
leave
mov
int3
or
dec
aad
test
movsl
xchg
xor
cwtl
sbb
lods
test
mov
jp
jl
jp
jo
movsl
mov
mov
mov
icebp
or
out
in
rclb
or
pop
mov
adc
vmovhpd
test
jle
je
inc
bound
or
out
repz
mov
inc
scas
insb
dec
cmpsb
cmpsb
dec
or
xor
outsl
sahf
jo
movl
mov
test
mov
lret
in
xchg
loop
lahf
ror
push
xchg
lods
dec
push
nop
dec
je
test
mov
mov
lret
aad
ret
inc
cmpsl
loop
sbb
add
sub
out
mov
mov
fisubs
mov
jne
ret
lcall
jmp
enter
bound
fildl
jbe
push
popa
fnstcw
adc
cwtl
or
imul
test
mov
jo
lds
js
jno
dec
imulb
mov
cmp
mov
push
andb
mov
dec
loopne
repnz
rcrb
and
jmp
sbb
js
mov
fdiv
pop
int
mov
push
pop
cwtl
push
or
aas
sti
dec
test
fidivs
repz
push
dec
ja
ds
xor
popf
out
fwait
mov
pop
lods
das
pushf
call
stos
mov
cmp
jns
or
lock
das
not
mov
outsl
cmp
outsb
xchg
fdivrs
adc
in
xlat
popa
lret
dec
ret
xchg
push
xchg
call
das
lock
mov
pop
scas
and
divb
loop
jb
outsb
fisttpll
aaa
clc
adc
cmpsl
inc
xchg
mov
arpl
aas
std
push
and
ret
fdivrs
aas
je
push
dec
cli
outsl
add
pop
mov
sbb
sbb
pop
pop
mov
mov
mov
insl
aas
fcoml
adc
loopne
hlt
ret
aas
inc
dec
orl
scas
mov
insl
fimuls
jne
add
jbe
test
cmp
mov
cmp
dec
repz
sbb
loop
jl
sub
ret
repz
push
push
sbb
ss
js
cs
addb
dec
out
pop
rol
and
orl
and
cwtl
xor
xchg
in
fcomip
xchg
aas
out
pop
sti
cmpsl
cmp
xchg
mov
ret
cmp
cmp
fidivrs
jnp
loop
sub
add
jge
and
inc
movsl
xchg
cld
or
into
mov
jb
js
xchg
xchg
insb
test
negb
inc
cmp
xchg
xchg
outsb
cs
jbe
dec
inc
push
add
inc
mov
mov
cmp
lea
lret
aas
jmp
adcl
cmp
dec
sub
mov
mov
inc
xchg
push
out
mov
lea
movsb
dec
push
outsb
jg
stos
xchg
adc
sarl
sub
ret
cmp
mov
and
insl
stos
adc
iret
adc
imul
rorl
cmc
stos
dec
fwait
aas
inc
leave
daa
dec
ret
test
xor
insl
xor
pop
lcall
sub
data16
push
mov
test
arpl
pop
popf
loope
mov
mov
lret
sbb
add
jns
mov
lret
sti
inc
in
xlat
add
mov
sbb
mov
test
jnp
push
addr16
std
ret
adc
adc
add
stc
mov
int
adc
fbstp
stos
aaa
inc
mov
cmp
sub
cmp
fsubr
fdivrl
adc
jne
dec
adc
outsb
mov
cli
pushf
rcrl
sbb
sub
pushf
aam
repnz
in
pop
xchg
add
mov
sbb
xchg
enter
sti
push
out
mov
lods
xchg
push
jmp
push
addr16
testl
in
cs
jae
lahf
adc
fdivl
xchg
stc
cwtl
mov
scas
out
into
lock
sbb
in
out
jecxz
notl
loopne
add
loopne
add
add
pop
lahf
cmpsl
push
add
lds
cmp
cld
pop
stos
dec
or
sub
lcall
mov
push
cmp
pushf
dec
cmp
sub
mov
sbb
daa
mov
movsl
fisubl
inc
dec
jb
fisttps
push
push
popf
xchg
loope
dec
andb
push
out
je
cmp
cmp
movsl
push
xchg
xchg
sub
lcall
scas
adc
in
in
dec
adc
cs
mov
adc
cmc
fidivl
xchg
loop
pop
push
fs
push
mov
jae
or
adc
ljmp
mov
jns
cmp
ficompl
mov
bound
stos
sub
cmp
jnp
xchg
repnz
and
fcmove
imul
push
jg
ss
into
inc
outsl
xchg
xchg
pop
dec
pushf
stc
xchg
or
xchg
jo
shrb
imul
mov
add
test
inc
inc
test
in
int3
cwtl
fs
sub
add
lods
mov
pop
lret
pop
lret
mov
ljmp
ds
dec
pushf
or
std
or
pop
lods
jno
mov
aad
daa
and
sti
xor
ret
xchg
lods
into
dec
xor
jno
in
cltd
outsl
inc
push
and
addr16
test
bswap
xchg
ret
sarb
js
sbb
les
pop
mov
inc
inc
xor
adc
loop
shll
je
fcoms
dec
ljmp
icebp
lret
xor
mov
xchg
jge
mov
rclb
mov
or
aaa
and
mov
xor
mov
jp
sub
or
adc
sbb
lahf
mov
cwtl
dec
pop
sahf
mov
or
sub
fadd
push
cli
imul
push
jmp
mov
pop
addr16
add
dec
mov
xor
movl
inc
cmp
or
test
xchg
out
cmpsb
mov
divl
mov
pop
sub
lcall
push
sbb
test
jle
cmc
mov
jbe
mov
call
les
stos
jae
repz
and
rcrb
push
dec
loope
sbb
stc
mov
out
or
pop
sbb
stos
push
mov
xchg
dec
pop
out
and
addl
cmp
shl
sbb
repnz
jns
inc
and
rcll
mov
imul
test
stos
sarb
adc
sub
jae
ds
fdivs
inc
jno
or
sbb
mov
out
push
inc
loop
enter
stos
adc
insb
pusha
dec
sbb
test
dec
sbb
arpl
and
clc
shlb
mov
push
cwtl
jo
lods
push
loopne
xchg
ljmp
lret
call
in
jnp
xchg
cli
loop
enter
mov
dec
dec
xchg
int3
cmp
je
loope
mov
in
outsl
sti
aas
test
mov
mov
and
push
pop
dec
inc
sbb
int
jb
pop
int
jne
aam
or
jmp
inc
imul
lcall
push
or
mov
cmp
dec
idivl
push
jmp
jns
jl
and
shlb
and
int
ljmp
jnp
in
sub
push
ret
lcall
pop
pop
dec
notb
add
popf
bswap
pusha
mov
cmp
inc
outsb
bound
enter
sahf
fnstsw
or
in
dec
adc
push
mov
call
mov
out
call
fwait
mov
push
les
dec
add
fidivl
xchg
inc
pushf
out
sub
xorl
aam
xor
xor
daa
adc
push
imul
or
aam
xor
add
inc
in
xor
pop
cmp
jp
and
mov
imul
fwait
divb
inc
mov
mov
call
js
jns
inc
fstpt
fisubs
adcb
outsl
loope
and
sahf
push
out
add
clc
push
repnz
mov
cltd
leave
test
xor
jge
movsb
mov
leave
mov
mov
outsl
icebp
fiadds
cmpsb
mov
jns
and
mov
mov
leave
push
cmp
out
mov
inc
popa
sbb
cmpl
push
pushf
dec
jp
arpl
or
push
ds
js
adc
dec
leave
cmp
lahf
mov
jecxz
sub
in
mov
or
fwait
pop
push
mov
iret
xchg
xor
loopne
insl
jnp
rcll
cltd
adc
cld
push
sub
lcall
mov
xchg
mov
mov
push
push
mov
js
ljmp
in
mov
xchg
fwait
cs
mov
rcll
mov
pop
movb
imul
dec
icebp
daa
add
in
adc
or
adc
cmp
dec
or
add
jne
cmp
aaa
xor
cs
notl
fildl
or
sub
inc
jmp
xlat
inc
leave
shll
mov
fstpl
scas
leave
fsts
aad
pop
int3
sti
jecxz
hlt
fs
sbb
arpl
insb
jecxz
testl
sbb
cmc
sub
and
fildl
dec
in
inc
mov
pop
aas
sbbl
ror
cli
sub
mov
outsb
jle
push
inc
stc
out
xor
xchg
inc
mov
or
cmp
clc
mov
in
inc
mov
aas
hlt
mov
sub
add
pop
xchg
mov
or
mov
fdivrs
jbe
add
int3
pop
mov
inc
sbb
orb
xor
mov
stc
dec
cltd
test
fucomi
dec
mov
xchg
subl
sbb
or
pop
clc
pusha
nop
mov
mov
das
mulb
pop
imul
cwtl
clc
ljmp
ret
pop
sahf
sub
rcr
addr16
imul
mov
mov
adc
stos
shrl
pop
jle
push
pminsw
cltd
jecxz
push
imul
mov
orb
or
mov
je
add
aaa
popa
xchg
add
jne
push
fidivs
cmpsb
sub
aad
aam
fists
loope
or
shrb
adc
outsb
jle
jne
notl
inc
mov
push
imul
cld
or
adc
popa
ljmp
rclb
ja
inc
scas
mov
lahf
jecxz
lret
push
aas
nop
lds
and
call
sbb
pop
push
jno
push
sub
and
sahf
pop
mov
jae
jmp
dec
mov
int3
or
mov
mov
push
mov
outsb
push
sub
ds
mov
mov
cmp
fmull
imul
push
inc
push
jbe
in
ljmp
std
pop
fwait
lods
leave
fidivl
ret
popf
mov
xchg
inc
cmp
stc
pop
ficompl
mov
inc
mov
shrl
into
mov
hlt
mov
inc
popf
fucomi
shlb
aam
inc
push
icebp
imul
sbb
repz
or
daa
stc
and
mov
int
inc
sub
imul
adc
mov
sub
push
sub
mov
imul
push
mov
xchg
std
dec
enter
rcl
aad
mov
and
fistps
add
dec
sub
movl
and
cld
lahf
cmpsb
les
adcl
push
mull
mov
repnz
pop
movsb
shrb
sub
jae
xor
lret
mov
or
cs
ja
ret
cld
cmp
and
inc
sub
mov
cli
fidivrl
bound
mov
cmp
jecxz
inc
test
cltd
xchg
add
mov
mov
orl
out
add
or
imul
sub
xchg
stos
inc
pop
dec
sub
adc
je
cmpl
aaa
popf
in
sbb
jb
dec
mov
lock
mov
movl
sub
rcrb
xor
mov
jmp
mov
mov
movsb
mov
notl
stos
fists
or
dec
inc
lods
fimuls
std
in
adc
in
iret
mov
sbb
shl
pop
fs
addr16
into
negl
dec
sub
aam
test
jo
xor
jp
ficompl
add
rcrb
clc
fsubs
pop
pop
jp
rcll
in
je
popa
xor
repnz
mov
cmc
subl
test
jle
add
int
push
sub
xchg
jnp
out
pop
add
hlt
cmc
xorb
jnp
or
mov
mov
add
push
pop
fs
adc
sub
subl
lcall
stc
pushf
pop
or
shl
addr16
imul
cwtl
xor
mov
mov
insl
rcll
mov
test
sbb
adc
xchg
rcrb
frstpm(287
data16
test
ffree
les
mov
sub
je
push
int3
mov
add
mov
push
sub
arpl
stc
jb
dec
lahf
cmp
push
push
out
mov
sti
push
adc
stos
mov
loope
xchg
ss
xchg
in
fwait
imul
jecxz
inc
int
push
pop
out
out
sub
rclb
mov
movsb
jb
rol
faddl
in
mov
add
dec
pop
mov
addr16
pop
cmpsb
xchg
cld
jo
sbb
jnp
daa
xchg
xchg
outsl
jge
mov
inc
ja
mov
jmp
sti
mov
add
cwtl
test
mov
push
cmpsb
cmp
xor
mov
js
lret
cmc
lret
in
push
xchg
loope
or
dec
add
dec
divl
int3
and
ss
lcall
loopne
push
ret
mov
testb
push
dec
sahf
imul
inc
ss
inc
cmpsb
mov
add
mull
dec
imul
inc
mov
xchg
bound
sbb
test
mov
sbb
int
add
adc
cmp
dec
pusha
les
xchg
jb
dec
mov
loopne
push
pop
mov
dec
repz
hlt
push
mov
jp
ret
jae
sahf
enter
lods
and
jb
push
pushf
daa
adc
cmpsb
lcall
sti
xchg
mov
xor
adcl
stc
inc
rcrl
ds
popf
sub
add
loopne
es
fdivrp
test
imul
push
mov
jae
cmp
and
stos
stos
popf
mov
lret
sub
mov
push
mov
sahf
in
jp
lea
rcrb
add
adc
lret
nop
pop
mov
xchg
call
xchg
mov
xor
test
into
enter
fistpl
push
enter
imul
adc
testb
pop
lods
add
popa
add
mov
dec
es
pop
ds
pop
adc
pop
cmp
mov
jne
pop
decb
fists
pop
mov
jmp
in
flds
fiadds
sbbb
and
mov
push
mov
dec
test
andl
in
adc
cwtl
adc
jge
es
sbb
xchg
or
insl
cmp
fwait
sahf
or
jp
adc
xlat
mov
imul
fisubs
pop
dec
loop
pop
in
xor
mov
shl
loop
adc
inc
and
stos
shl
pop
leave
xchg
adc
mov
mov
mov
ljmp
cs
rorl
cs
cmpsb
loope
imul
jmp
xchg
sub
fcoml
mov
mov
std
cmp
push
mov
xor
and
inc
adc
xchg
rorl
sub
or
stos
decl
sbb
mov
pop
adc
push
xor
cmp
push
stos
cmpsb
jg
xor
mov
and
lds
cwtl
push
les
movsb
je
out
sar
sub
movsb
xor
mulb
mov
stc
cmc
std
mov
jl
cmp
in
jg
enter
cmc
sub
loopne
mov
jno
mov
ret
loop
xchg
mov
fwait
and
adc
repnz
lahf
aam
mov
in
in
dec
xchg
mov
add
mov
cmpsl
pop
xchg
pop
test
jnp
in
and
pushf
cmp
xor
frstor
insb
fisttpll
insl
lock
imul
cltd
stos
mov
mov
cmp
cmp
in
add
xchg
sbb
push
xor
pop
dec
cmp
jg
mov
jl
xor
xor
sub
movsb
dec
pop
scas
int3
js
dec
rcrl
sub
and
fmull
ds
inc
xchg
aas
xor
cmp
push
and
xchg
jbe,pt
lret
dec
shll
out
aam
cmp
decb
sahf
mov
mov
mov
stos
mov
push
xchg
xor
pop
xchg
mov
es
mov
add
inc
mov
push
and
fcmovb
std
inc
sbb
ja
sub
push
fld
and
pop
inc
or
xchg
in
int3
mov
pop
movl
and
lods
jmp
das
ljmp
outsl
pop
jl
jg
lock
insb
fcompl
mov
pushf
xor
jge
cli
cwtl
loopne
cwtl
popf
xchg
fucomp
and
add
sbb
add
xchg
adc
or
xor
add
fcos
jae
and
and
in
leave
xchg
pop
pop
fs
loope
cmp
mov
aam
movb
pusha
push
jns
lock
dec
mov
nop
sarb
movsl
jmp
sbb
dec
mov
ss
imul
cmpsb
sbb
pop
cmc
and
pop
pop
lret
cltd
fnsave
sub
sub
adc
lcall
jae
lock
jns
add
movsl
ljmp
pop
sbb
ds
jecxz
xor
cmpsl
jle
mov
pop
mov
add
cmp
mov
xor
data16
cld
popf
cli
mov
inc
test
push
and
pop
loopne
ds
xor
sbb
insl
outsb
out
push
xchg
je
and
cmpb
xlat
dec
pop
mov
in
xchg
pushf
mov
mov
and
push
js
jne
lret
stc
jns
mov
test
xchg
repz
dec
mov
cmp
mov
pop
push
in
mov
imull
lahf
inc
add
std
std
imul
xlat
imul
leave
leave
mov
push
daa
jo
cmp
jns
shll
cmp
test
outsb
jo
cmp
xchg
mov
cld
pop
leave
sbb
lret
jl
ljmp
sbb
stc
sub
sub
mov
loopne
cmpb
dec
loopne
xchg
inc
daa
out
push
es
inc
test
movsl
inc
dec
fidivl
mov
push
or
stc
pusha
cwtl
adc
adc
in
or
in
pop
jecxz
xchg
dec
mov
shrb
ss
mov
loop
negb
inc
test
inc
or
mov
call
movsb
sbb
lcall
add
mov
bound
or
ja
mov
push
popa
negl
mov
addr16
movsb
sub
fcomp
les
push
ror
jle
lret
push
inc
mov
iret
add
clc
sub
and
jae
movsb
hlt
fnsave
stos
fadd
add
jnp
test
notl
data16
sub
push
in
popa
jp
ret
xchg
int
sti
rclb
jle
fistpl
test
pop
mov
imul
emms
daa
je
popa
xor
orl
aaa
stc
sbb
sbb
fwait
push
dec
outsl
dec
das
mov
leave
loop
xchg
mov
add
xor
clc
mov
addl
int
mov
pop
insl
push
mov
xorl
stos
xchg
lcall
ja
sbb
dec
xchg
jle
mov
enter
test
pusha
aam
xorb
mov
cmpsl
out
scas
jg
jno
int
lcall
scas
push
sar
movsb
fnstenv
inc
and
jae
xorb
cmp
mov
shlb
add
psubb
insb
fidivs
outsl
cmpsb
mov
insl
pop
dec
jmp
cwtl
jno
pop
int3
xchg
jmp
icebp
mov
xchg
stc
not
icebp
stos
jge
mov
call
mov
jmp
sbb
inc
mov
test
mov
pushl
inc
add
xchg
mov
insb
add
jb
xchg
repnz
xchg
pop
mov
adcl
jge
mov
mov
push
aas
and
fdivrl
pusha
mov
jno
cmp
xchg
mov
les
jne
mov
jne
ret
mov
lods
jo
push
aam
jecxz
gs
lea
cli
stos
mov
es
mov
sbb
mov
aaa
jne
outsb
adc
fldcw
cs
add
je
test
daa
jo
inc
es
fisubrs
sbbl
fwait
cmp
sti
outsl
in
sbb
xchg
mov
es
inc
ror
mov
push
mov
adcb
jle
sub
pop
jl
pop
rcrl
push
adc
or
mov
inc
fnstsw
pop
xor
mov
dec
bound
inc
cld
jl
add
hlt
mov
add
fildll
movsl
mov
fldcw
pop
xchg
dec
rcrl
mov
pusha
pusha
cld
sbb
insl
in
mov
cmc
ds
clc
popf
inc
xchg
fld
push
dec
and
loopne
or
incl
cmp
or
lret
in
mov
repnz
dec
pop
or
xor
lret
sub
push
nop
mov
sar
out
in
lcall
or
mov
cmp
dec
and
out
fidivs
mov
jae
and
fildll
into
and
mov
in
xor
into
fadd
stc
ret
sbb
xchg
aam
std
stos
or
bound
pushf
aas
dec
mov
mov
adc
emms
jnp
add
rclb
sub
std
inc
popa
rcl
inc
or
sbb
test
cmc
push
pop
cmp
iret
fdivp
xor
adc
lret
daa
adc
aad
pop
dec
push
fdivrl
mov
sbb
ds
push
push
pop
cmp
sahf
dec
sub
push
imul
in
cmp
dec
xor
scas
jle
call
lcall
mov
xlat
pop
and
fdivrl
pushf
mov
sti
fst
adc
movsl
shrb
inc
cmp
ljmp
jns
add
das
jg
loop
inc
scas
sbb
testl
insb
das
adc
push
mov
clc
rcrb
fwait
ja
fs
lds
mov
and
fcmovu
sbb
out
mov
dec
stc
mov
adc
adc
fsubrs
dec
sarb
mov
fwait
pushf
pushf
movsb
cmpb
sub
dec
pop
ds
jne
stos
mov
inc
mov
insb
ss
cli
lods
mov
push
cmpsl
inc
sub
mov
push
push
adc
daa
push
stos
or
stc
mov
out
repnz
adc
in
lret
std
mov
jle
les
xchg
cmp
fwait
pop
je
fadd
imul
mov
sbb
sub
lea
enter
adcl
loope
idivb
test
adc
jecxz
add
jle
orb
and
or
mov
inc
xor
stc
mov
cs
adc
sbb
ds
pop
fisubrs
sbb
push
jge
aas
pop
call
lea
cmp
jmp
jp
mov
repnz
aaa
sub
dec
mov
out
jne
out
inc
jg
push
mov
and
xor
push
bound
jge
dec
cli
popf
add
sub
stos
fldl
jne
pop
jns
fisttpl
daa
das
aad
mov
int3
fidivl
lds
push
nop
cmp
cmp
imul
or
mov
js
push
pushf
lods
and
mov
insl
cmc
add
shlb
jnp
or
sti
inc
loop
dec
test
or
jns
sub
lods
int3
cmp
mov
mov
inc
ret
data16
ljmp
push
das
lret
mov
std
int
cld
mov
pop
gs
mov
xor
adc
mov
fldenv
ret
jmp
push
out
inc
pushf
jl
xchg
mov
das
pop
jg
lods
mov
mov
shrl
or
jle
popa
ret
add
jp
jae
testl
stos
lret
incb
cmp
mov
mov
mov
stos
pushf
mov
pop
les
popf
mov
add
xor
jb
daa
mov
cmp
dec
adc
and
in
stos
jp
popa
out
sub
sbb
mov
fadds
ja
or
inc
imul
jo
fwait
outsb
stos
mov
out
jo
sbb
out
lea
jbe
iret
and
mov
std
scas
xchg
fbld
jle
jg
xor
cmp
stc
xor
leave
cmp
fistpl
sahf
push
fnstsw
ja
imul
jecxz
xor
adc
aas
and
jl
rdpmc
pop
cmpsb
jmp
mov
inc
mov
pop
cmpsl
push
in
xor
cmp
fldenv
daa
xor
test
call
cmp
test
call
loope
sub
mov
clc
aaa
fnstcw
mov
adc
push
mov
add
cmpsl
rclb
pop
adc
ljmp
or
cmpsb
pop
test
inc
dec
jo
std
xor
sbb
xlat
push
cwtl
push
push
aas
dec
aad
nopl
fsubl
mov
ret
fidivl
or
lret
and
popa
pop
rorb
cmp
push
xor
xor
fisubrl
pop
push
jno
pushf
mov
je
fs
jmp
sub
jns
sub
addl
fiadds
cs
push
push
inc
fnstenv
test
xchg
jg
pusha
sub
mov
test
add
cmp
sahf
xchg
inc
push
push
lods
push
adc
cltd
popf
inc
inc
cltd
mov
sub
mov
mov
cmc
negb
mov
and
fldcw
scas
arpl
sub
mov
mov
int
add
xchg
mov
outsl
add
out
jle
rclb
xchg
jmp
scas
fs
xchg
test
fptan
ret
or
jo
fstl
stos
xor
ds
aas
push
adc
rcr
test
leave
or
push
or
and
fisttps
mov
and
and
nop
pop
mov
sbb
or
movsl
push
imul
cli
sub
xlat
cmpsl
jbe
jge
rcrb
add
sub
add
adc
addr16
and
jno
test
test
jb
inc
setno
mov
andl
shlb
mov
jmp
dec
xchg
mov
sub
sub
pop
dec
pop
or
pushf
cmpb
xchg
rcrl
jmp
ss
sbbb
out
add
or
mov
sbb
xchg
pushf
test
jecxz
push
cwtl
or
fs
in
nop
orl
jmp
cmp
cmp
stos
or
pop
ss
and
daa
mov
loopne
in
cmp
dec
stos
rclb
or
loopne
add
cmpsl
xchg
pop
jbe
btc
in
jnp
mov
mov
cmpsl
dec
mov
inc
mov
cmp
sbb
mov
test
aam
int
add
adc
cli
je
mov
loopne
sbb
stc
sbb
out
aad
inc
in
push
adc
xor
les
test
andb
fs
pop
test
pop
jl
movsl
dec
mov
sbb
or
sub
pop
mov
dec
ret
data16
push
pop
int3
idiv
mov
jns
sbbb
push
es
add
in
xor
ljmp
shrl
xlat
fnstsw
jno
loope
fsts
fnclex
lods
sub
push
mov
jbe
test
pop
add
mov
pop
xor
je
sub
fs
pop
and
add
nop
adc
and
cmp
push
and
aas
cmp
push
jge
fisttps
or
movsb
cmpsl
push
fbstp
jne
jp
mov
shrl
mov
dec
jle
mov
or
negb
or
pop
xlat
push
sbb
pop
shr
popf
sbb
std
sbb
mov
pop
xlat
mov
xchg
dec
jmp
ss
je
aad
imul
bound
push
push
cmpsb
jle
add
xor
insl
int3
pop
testb
stos
push
inc
aas
repnz
scas
stos
dec
rorb
out
sahf
adc
xor
leave
adc
loope
cmpsb
lds
clc
pop
dec
ja
push
jmp
js
out
or
sub
mov
bound
in
les
leave
adc
scas
sbb
sub
add
aaa
mov
and
das
es
jbe
xor
mov
fnsave
dec
sub
fs
aam
fs
mov
cmpsl
sub
gs
dec
pusha
test
inc
cmp
xchg
push
sbb
xor
fwait
push
pushf
jle
scas
cmp
jne
aad
arpl
dec
insb
int3
xor
sub
test
xchg
aas
leave
or
scas
and
pop
add
popa
aas
aaa
imul
xor
fimuls
inc
decl
jne
sti
fwait
sbb
mov
aad
cmp
push
outsb
cmp
fidivrs
mulb
ret
xor
jno
movsb
jp
jmp
add
mov
inc
xor
xor
inc
inc
sbb
scas
push
mov
add
daa
adc
imul
fiaddl
pop
xchg
mov
jae
push
dec
pop
xor
mov
imul
arpl
test
pop
scas
sub
and
lret
pop
repz
lahf
mov
mov
mov
cld
test
rorb
lret
xchg
or
inc
repnz
cltd
xor
jnp
jmp
ret
sahf
xchg
push
jne
xlat
xor
arpl
inc
loopne
gs
fucomp
aad
outsl
push
inc
push
jmp
pop
jmp
jmp
repz
mov
jle
out
xor
xchg
mov
out
sbb
xchg
lods
lret
fisubrl
dec
push
pusha
pusha
nop
lods
movsl
mov
lret
ljmp
or
mov
mov
leave
lods
sub
aad
sub
mov
add
out
pusha
add
ss
jl
adc
push
inc
mov
in
jno
push
mov
int
xchg
js
scas
call
je
push
mov
dec
pop
lds
push
jmp
sbb
add
add
fcoms
ret
and
jo
dec
and
pop
les
pop
or
sub
inc
push
icebp
pusha
and
shlb
sub
cwtl
outsb
stos
or
mov
cwtl
jbe
xchg
and
dec
or
lea
sbb
mov
mov
cmp
mov
ja
or
xchg
pop
stos
push
jo
rcl
cmp
ljmp
fisubrl
cltd
and
lods
add
mov
lahf
lds
xchg
pop
scas
jne
jo
sbb
mov
fistl
jg
sub
jno
aas
icebp
inc
dec
mov
sub
cmpsb
push
fmul
and
dec
jae
inc
xlat
rolb
inc
pushf
and
cmp
dec
mov
dec
mov
pop
xor
out
jne
cmp
or
insb
outsb
into
add
xchg
imul
sub
sahf
jae
cmp
aaa
outsl
dec
lods
inc
mov
ljmp
cmpsb
jecxz
ljmp
xchg
push
sbb
rorb
jnp
jbe
sbb
insl
sbb
shl
test
mov
or
fsts
lcall
push
popa
inc
push
bound
cmc
daa
mov
jmp
lcall
push
pop
push
mov
movsb
fwait
jmp
xchg
icebp
bnd
pause
out
and
adcb
loopne
mov
inc
or
jg
ret
fdivrl
or
cmp
sbb
pop
mov
movsb
sbb
jno
adc
sub
xchg
jecxz
or
jmp
or
in
cmovnp
sbb
fs
and
cmp
pop
mov
adc
xor
jle
out
test
test
repz
stc
enter
addl
mov
imul
xchg
mov
dec
ljmp
add
cmc
and
push
imul
jl
aam
lods
in
data16
rep
add
sub
mov
aas
cwtl
ds
mov
xchg
adc
sub
add
and
iret
scas
jmp
inc
in
mov
mov
decl
cli
adc
jle
push
in
ds
daa
dec
xor
das
in
imul
les
rcrb
movsb
or
push
or
dec
sub
push
jle
sbb
loopne
fdivrl
cli
sbb
mov
jbe
pop
sbb
iret
add
sbbb
clc
inc
fstpt
inc
ret
mov
ret
or
out
out
mov
lahf
shll
push
repz
sub
xor
or
mov
dec
add
or
ljmp
dec
cltd
and
sbb
dec
outsl
sub
lret
or
aas
loope
and
push
jge
cmp
icebp
hlt
loopne
jbe
jg
adc
in
push
shlb
or
push
fsub
inc
jb
aaa
sbb
stc
jp
mull
stc
mov
jo
jle
lea
icebp
sbb
imul
shr
shl
pusha
test
testl
loope
fdivrs
scas
or
mov
pop
or
sub
jnp
pushf
out
imul
push
popf
imulb
sub
imul
jle
mov
xor
adcl
sbb
shr
xchg
inc
and
mov
dec
rorl
sub
push
out
dec
out
sbb
sbb
add
addb
test
jp
jp
and
dec
mov
or
stos
mov
cmp
push
push
adc
popf
mov
dec
fcmovne
loopne
fists
add
sub
dec
sbb
adc
and
dec
loope
sbb
push
mov
xor
testl
xorl
lds
rcll
mov
push
xorl
mov
inc
shlb
idiv
lods
fcomi
out
sahf
mov
in
mov
cmp
push
xor
sar
xchg
popa
test
xchg
fsubl
je
xchg
fcomp
movsl
pop
jnp
jp
pop
cmp
cmp
xor
popa
dec
je
mov
inc
aaa
xchg
mov
pop
xchg
mov
fisubrl
inc
jp
cmpsl
cmpl
mov
fstl
lds
jmp
dec
xchg
rcr
sub
test
xor
push
lods
cmpsl
out
mov
lret
aam
mov
loopne
stos
loopne
aaa
test
into
fstpt
jmp
pop
lahf
insb
xor
xchg
cmp
icebp
push
push
in
cld
mov
add
cmp
aam
stos
pop
stos
aas
shlb
loope
jno
sahf
jbe
mov
and
jns
sbb
push
sbb
sbb
mov
jl
scas
jnp
pop
mov
ror
jne
dec
mov
addr16
mov
xchg
inc
imul
push
sbb
scas
and
pextrw
lods
repnz
lock
shl
mov
lahf
arpl
lahf
test
mov
mov
xchg
jl
in
adc
out
add
and
arpl
dec
scas
inc
pop
inc
mov
test
mov
jns
ja
sub
test
xor
and
test
insl
jge
mov
and
imul
cli
aaa
ds
lods
lret
sti
cmp
xchg
ret
xor
mov
iret
sbb
in
push
dec
sti
popa
fistpl
enter
pusha
popl
mulb
inc
inc
loop
xor
decb
sbb
jne
or
cmp
sbb
sub
or
push
loope
mov
mov
jne
xor
iret
add
push
inc
pop
mov
push
lea
pop
inc
lds
dec
push
nop
and
cli
dec
shr
fists
or
nop
sbb
add
and
decl
in
clc
pop
mov
aam
pop
cmp
jns
addr16
lods
loop
sub
mov
push
jge
test
js
shr
add
cmpsb
add
xor
roll
cmp
lds
scas
dec
dec
insb
cwtl
sub
jge
dec
daa
inc
push
mov
rcrb
loop
cmp
shlb
icebp
std
pop
pop
mov
pop
mov
addr16
stc
jmp
sti
xor
leave
cmpsb
imul
aam
or
aas
and
das
xor
xchg
add
pop
jecxz
cwtl
loop
push
sub
fcompl
ret
iret
in
jle
call
dec
popa
pop
loop
in
inc
mov
loopne
out
call
inc
add
sub
sub
cmp
stc
aaa
pop
adc
xchg
incl
mov
pop
cmova
fadds
jle
and
dec
dec
push
cld
hlt
fcmove
es
mov
mov
stos
and
das
data16
adc
cmp
cmp
pusha
subl
adc
loopne
and
into
stc
dec
test
or
xchg
fldcw
cld
cmp
shrl
fistps
popf
int
mov
rolb
xor
push
sub
out
sub
dec
add
nop
push
ds
frstor
xchg
pop
xchg
pushf
sub
mov
mov
pop
push
xor
or
lods
dec
mov
cmp
jmp
ja
mul
mov
imul
lods
popf
xchg
mov
mov
cmp
mov
dec
pop
insl
outsb
mov
push
pop
test
fwait
js
pop
outsl
mov
xchg
fnsave
lock
insl
lret
insl
fsts
lods
int
sub
mov
icebp
or
mov
jnp
hlt
shll
and
xchg
xor
xchg
push
testl
mov
ficoms
mov
jge
scas
xchg
sbb
pop
aaa
mov
dec
or
gs
test
inc
adc
hlt
fmulp
add
pop
or
push
sub
xchg
sbb
pop
xor
movsb
xchg
fs
mov
adc
pop
jge
pop
gs
add
ret
or
popa
mov
or
jle
adc
mov
dec
lock
and
subb
data16
mov
test
mov
nop
jnp
mov
addb
push
cmp
xchg
loopne
inc
push
mov
fst
inc
mov
and
out
loop
outsl
push
movsb
test
scas
scas
rcr
sub
push
sbb
pop
dec
pop
ret
sarl
push
add
push
loopne
xchg
dec
pop
push
add
jmp
mov
js
pop
mov
int
xchg
lret
filds
stos
xchg
filds
stc
stos
iret
jbe
pop
gs
cwtl
mov
cwtl
xchg
in
sbb
pop
dec
lret
ljmp
out
insb
mov
decb
push
sahf
or
jecxz
rcrl
push
or
mov
mov
xchg
mov
in
mov
adc
push
sbb
mov
std
jg
or
and
rolb
cmp
push
push
jg
push
xchg
cltd
testl
js
popf
sarb
mov
push
cmp
fistl
mov
out
ror
xlat
js
and
inc
push
gs
mov
popa
nop
jo
sub
shlb
lods
iret
xchg
mov
daa
jnp
sbb
sbb
fstl
sub
inc
push
mov
jecxz
shll
mov
mov
in
xchg
jne
xor
mov
pop
gs
mov
orl
and
lea
sub
xor
rcrl
inc
insl
outsl
insl
scas
movsl
xchg
mov
jae
cmpsb
mov
jne
pop
imul
sbb
cs
jno
int
and
sti
jae
insb
xchg
sub
scas
roll
mov
inc
mov
xor
jnp
jp
push
dec
addr16
mov
fcomps
scas
outsl
inc
enter
clc
xor
enter
in
fs
repz
xlat
xor
ljmp
cmp
lcall
rcrb
and
mov
lock
cmc
adc
xor
and
scas
ss
call
xlat
inc
scas
pop
bound
push
xor
lret
aam
push
outsb
call
cli
jmp
push
pop
int3
in
sub
sub
pop
push
mov
pop
jle
inc
ret
or
jbe
cmpsl
mov
mov
stc
adc
dec
test
shlb
stc
pop
jge
or
cld
sbb
xchg
xchg
jmp
icebp
push
cltd
jae
rcr
push
pop
dec
mov
add
add
pop
mov
push
adc
adc
cmc
push
or
ds
or
pop
mov
jnp
and
xchg
mov
jle
sbb
enter
mov
cmpsb
fbld
int
dec
sbb
in
mov
call
adcb
and
xor
lahf
gs
loopne
test
sub
popa
sub
or
jae
adc
pop
mov
push
das
add
movsl
icebp
addr16
icebp
xchg
add
leave
sbb
inc
enter
xor
cmp
mov
sub
dec
mov
clc
adc
scas
lret
or
cmpsb
test
mov
mov
outsl
xor
xor
push
and
addr16
outsl
pop
mov
xchg
outsb
adc
sbb
dec
mov
add
ficoml
mov
test
out
out
and
jbe
adcl
adcb
pop
mov
dec
add
int
cmp
push
clc
cmp
out
sbb
lahf
jp
sti
shll
adc
adc
add
cwtl
sbb
out
inc
sbbl
mov
jae
test
sub
sub
lret
lods
xchg
push
ret
add
loope
xor
lcall
les
lods
into
sbb
mov
out
into
insb
cmp
test
mov
xor
mov
xchg
cwtl
ds
int
out
popa
repz
ds
rolb
inc
mov
push
push
lret
xchg
bound
add
or
mov
lret
sti
add
fwait
cltd
jg
or
sub
mov
inc
dec
add
ljmp
mov
or
sub
cs
adc
pop
in
mov
adc
aaa
dec
cmpsl
div
or
movsb
jmp
adc
jo
hlt
sti
aas
int
clc
push
lcall
inc
je
inc
xorb
lcall
mov
out
jae
xchg
push
pop
pusha
aad
call
inc
cmp
cmc
mov
mov
jb
pop
enter
xchg
sub
scas
push
dec
scas
cs
xchg
push
gs
cwtl
mov
xchg
dec
cmpsl
cltd
mov
inc
test
push
mov
roll
inc
sub
call
cwtl
jge
xchg
sti
insl
test
adc
hlt
mov
adc
pop
pop
or
dec
jae
fldenv
adc
test
cmpsb
push
push
addl
into
pop
sahf
sub
mov
inc
aaa
xor
loope
stc
adc
divb
rorb
pop
loope
je
loop
and
sub
das
dec
notl
aas
mov
shlb
xor
xchg
stos
mov
cld
cmpsl
jecxz
and
pop
clc
icebp
xchg
sub
fsubrs
lea
xchg
adc
test
sbb
js
pop
ficoml
sub
enter
and
into
sahf
stos
mov
jbe
sarb
push
cmp
gs
and
bound
sub
pusha
mov
mov
and
and
iret
lods
mov
mov
fwait
loope
test
cli
jne
jl
js
frstor
and
fildl
into
adc
push
sub
arpl
fs
fadds
push
mov
stos
pop
adc
sbb
jo
scas
decl
mov
mov
cmp
sbb
imull
pushf
stos
ja
sbb
push
cmc
call
lods
add
lds
xor
in
stos
pop
rorb
sub
mov
aaa
mov
add
shlb
iret
push
int3
push
fsubrs
jne
fwait
pop
xor
es
lret
loope
fwait
xor
insl
fiadds
mov
sti
xchg
ret
inc
std
inc
adc
inc
add
sbb
dec
shll
fisttpll
add
outsb
sti
xchg
mov
cmpsl
insb
sbb
mov
xor
lcall
stos
pop
mov
add
push
pop
out
sti
mov
in
scas
mov
inc
xchg
rcll
pop
dec
popf
rolb
add
mov
std
out
scas
and
push
xlat
cld
or
jecxz
fwait
inc
mov
mov
pop
pop
scas
cmp
mov
sub
pusha
outsb
lods
adcb
data16
adc
sbb
in
mul
and
push
xchg
pop
xor
adc
pop
cmc
mov
mov
out
xchg
dec
pusha
pusha
cs
add
sub
loopne
lods
fdiv
cmp
add
gs
cs
cmpsb
add
sub
pop
enter
int
sbb
push
dec
ds
cmp
cmc
movsb
jg
xor
or
xchg
leave
push
jnp
and
pop
int3
fs
stos
sbb
lds
ja
xor
mov
pusha
jp
mov
or
cs
lock
and
push
xor
popa
ljmp
pop
push
cmp
iret
and
int
dec
movb
test
loopne
je
push
stos
aas
mov
in
and
xchg
aaa
and
dec
mov
or
push
lea
jge
sbb
sub
mov
and
clc
roll
fmull
out
xor
cmp
pusha
mov
jge
lods
js
xor
mov
scas
in
sub
jne
popa
push
mov
jb
in
mov
inc
cmp
imul
jecxz
pop
out
hlt
inc
cmp
cld
mov
int3
shl
clts
lds
mov
mov
dec
pop
adc
mov
dec
cwtl
cli
movsl
dec
dec
push
fdivrs
out
loop
jp
test
pop
out
es
inc
adc
inc
jmp
jnp
das
in
filds
fldl
lcall
dec
dec
mov
jge
inc
out
jns
xor
cli
xchg
arpl
dec
call
xchg
dec
jbe
scas
jbe
lret
es
cli
and
mov
cmpsl
inc
ret
push
fcmovbe
add
jl
ss
inc
les
dec
fcmovu
mov
cmpsb
xor
xchg
sbb
ret
repz
jg
repz
aam
dec
out
pop
repz
adc
push
out
push
int3
scas
nop
popa
jno
and
stc
addr16
dec
add
leave
add
jmp
mov
ja
xchg
push
rorb
mov
sti
shl
or
mov
and
pop
fdivr
ficomps
stos
xchg
mov
std
daa
add
stos
aas
jns
int
aas
leave
outsl
adc
xor
mov
and
mov
imul
test
out
lock
push
lea
aas
cmpsl
rclb
or
pop
mov
or
push
jecxz
cmp
add
mov
push
ss
mov
mov
fildl
and
pusha
xorb
stos
add
stc
test
int3
fisubrs
data16
push
lahf
popa
icebp
cltd
jns
jg
or
ss
call
loope
sahf
jne
sarb
das
jae
in
je
insl
xor
lods
xlat
or
inc
neg
daa
mov
dec
push
test
sti
add
jne
mov
call
jle
aaa
std
into
test
jmp
arpl
sbb
ss
push
fidivs
and
inc
push
mov
fbld
xor
sahf
dec
push
ret
fidivs
movsb
and
subb
insl
in
or
mov
push
cmpsb
and
jae
cmp
out
jno
jne
mov
out
push
sub
out
movsb
sub
lock
jmp
pop
lret
nop
push
loope
add
add
push
or
pop
mov
out
mov
and
dec
mov
fnstenv
push
mov
dec
rorb
jg
test
xor
aas
push
jl
cmp
out
pop
inc
into
xor
idiv
dec
arpl
mov
popa
int3
lds
shlb
cmp
je
xor
aad
mov
outsl
and
xor
outsb
xchg
decb
or
outsb
jnp
mov
jge
cmp
jl
cmpsb
hlt
add
cmpsb
pushf
jmp
push
cmpsl
movsl
ret
jno
cmp
mov
lret
lret
insl
and
cs
fnstenv
jbe
stos
les
adc
int
cmc
call
xchg
pop
in
or
ffreep
out
rorb
or
mov
int
pop
shlb
popl
scas
mov
mov
or
insb
loopne
add
cmovp
dec
nop
lret
jae
cmp
jo
push
fisttpl
std
fsts
or
stos
call
mov
js
cmpsl
int3
add
jns
in
jp
adc
jmp
mov
dec
in
jb
aam
pusha
bound
fcomi
jp
push
xor
push
xor
cmpsb
cmpsl
inc
out
jns
xor
rol
insb
jbe
int3
sahf
mov
inc
jle
sti
xchg
pushf
pushf
fimull
js
cld
mov
out
or
aam
js
and
pop
sbb
mov
lods
mov
pop
sahf
jae
xchg
pusha
mov
and
fisubs
cmp
ds
dec
cld
daa
jl
in
lock
cli
xchg
push
es
sbb
nop
or
fiadds
ja
pop
shrb
inc
lcall
or
in
std
inc
jno
push
push
inc
mov
out
push
pop
push
test
fdivl
addr16
ficoms
mov
fsubs
fistps
pop
mov
jbe
stos
ffree
jge
repnz
cld
push
sbb
and
lods
test
out
enter
push
outsb
in
cmp
mov
mov
mov
add
cmp
cmpsl
sbb
int3
mov
icebp
xor
cld
les
cmpsl
mov
push
pop
inc
mov
or
nop
cltd
adc
cwtl
cmp
mov
dec
imul
fisttpll
je
adc
dec
movsb
enter
jl
jg
cmp
inc
ret
loop
mov
push
adc
pop
and
inc
jne
roll
adc
pop
xchg
repnz
inc
rol
ja
push
aad
int3
insb
jl
stc
fs
mov
fdivl
mov
je
out
xlat
icebp
lret
adc
jnp
daa
xor
pop
ljmp
push
pop
add
and
mov
lods
inc
rclb
pop
out
cmp
add
repz
mov
jne
push
fisubrl
lock
pop
or
scas
les
das
jle
push
jnp
stos
and
mov
fidivs
sub
mov
test
sub
out
and
pop
ffreep
sub
sub
lahf
jmp
and
xor
ss
mov
mov
test
lds
outsl
cmp
xchg
jns
cwtl
xchg
scas
insl
cmp
bound
or
pusha
inc
cmp
pop
sub
sub
sbb
setne
inc
ret
push
data16
add
sti
popa
in
es
test
lock
and
into
and
inc
jge
sub
push
or
ret
movsl
test
mov
mov
xor
mov
mov
pop
dec
xchg
mov
pop
cwtl
mov
ret
shr
sbb
mov
jmp
nop
pop
cmpsl
mov
pop
adc
insb
add
in
push
dec
pop
test
inc
xchg
jno
or
je
pop
shrl
adc
test
and
xor
mov
out
lods
mov
xor
mov
aam
mov
xlat
mov
or
repz
sbb
push
repnz
mov
xor
ror
cmpsb
add
pop
arpl
xchg
sarb
dec
cltd
pop
sbb
cli
jne
cmp
pop
popf
xchg
adc
int3
cmc
push
aad
sbb
mov
xchg
test
aas
push
push
sub
pop
xchg
dec
inc
stc
fnstcw
sub
dec
in
pop
xor
lret
mov
out
push
jg
adc
push
dec
sbb
test
rcll
jle
rcrl
push
jecxz
cmp
add
mov
xchg
dec
mov
xor
ficoms
add
hlt
daa
dec
mov
inc
orb
mov
xchg
and
cld
ljmp
sti
ljmp
mov
imul
outsb
outsb
push
ret
dec
into
movsl
dec
mov
es
or
je
pop
lahf
pop
sbb
scas
mov
clc
movsb
sahf
lods
hlt
push
sahf
sti
cmp
dec
leave
dec
cmpsb
pusha
shlb
xchg
in
mov
xchg
inc
sub
movb
cmpsl
inc
inc
movsl
inc
pop
sbb
int3
jle
mov
push
mov
push
pop
stos
mov
jb
lahf
adc
jbe
push
sbb
in
jp
insb
push
and
jno
stos
xchg
mov
push
out
jnp
jns
pop
mov
scas
lret
int3
lock
xorb
add
insb
in
call
into
fwait
jmp
xor
loope
lcall
fsts
xchg
mov
mov
xchg
lret
xchg
adc
or
into
push
sti
rcl
mov
sub
pop
aaa
dec
imul
repnz
fidivrs
xchg
cmp
ljmp
xchg
mov
mov
push
or
jmp
xchg
fcoml
enter
jb
pop
pop
enter
sub
adc
mov
sar
jo
mov
push
incl
je
icebp
popl
mov
mov
mov
jae
mov
mov
aaa
xor
xlat
fcmove
xchg
aas
dec
sbb
xchg
nop
sar
push
scas
in
sbb
inc
notl
dec
pop
push
dec
rclb
je
in
mov
inc
push
inc
adc
and
mov
sti
or
jno
insb
ret
sbb
jle
popa
popa
mov
sbb
xor
int
repnz
pop
daa
pop
xchg
fmull
adc
dec
lock
xor
jae
orl
sub
push
ret
imul
sub
dec
sbb
aam
jl
and
enter
test
fnstcw
pop
test
sbb
movsb
filds
mov
and
popa
mov
push
cmpsl
aaa
mov
sbb
push
mov
sbb
push
add
mov
push
pop
and
push
adc
test
loop
or
and
das
jmp
dec
mov
sar
lret
sub
call
repnz
adc
sbb
jno
dec
add
leave
test
push
xchg
cmp
fbstp
fmuls
jne
fidivrs
enter
sbb
push
lret
xor
push
iret
out
xchg
xor
aas
ret
jp
pop
push
cwtl
xchg
stos
push
shlb
push
push
lret
es
imul
andl
xorb
out
out
nop
push
adc
add
push
adc
mov
cld
xor
mov
or
push
inc
pop
dec
jmp
xchg
lcall
out
mov
dec
subl
scas
sbb
add
dec
scas
in
clc
test
mov
and
xor
push
push
dec
adc
or
data16
mov
or
icebp
mov
stos
xor
bound
je
add
adc
jle
sub
inc
dec
lret
aas
add
cmpsl
lods
push
inc
sub
imul
sub
fnsave
lret
outsl
push
test
push
cmc
add
inc
shl
daa
sbb
les
and
jge
outsl
orb
xchg
and
hlt
loopne
out
pop
int
cmp
idivb
mov
test
push
aaa
insl
adc
ds
mov
mov
popa
jge
xchg
dec
or
mov
fbld
push
mov
pop
jb
cmc
mov
setp
and
fisubl
push
xor
sarl
stos
sar
jno
xor
gs
test
imul
aam
pusha
push
push
mov
and
ljmp
cs
mov
cmp
scas
and
jno
int3
cwtl
fdivl
sbb
mov
xor
out
inc
sbb
js
std
jecxz
mov
repnz
sbb
in
popa
xlat
pop
movl
jbe
inc
clc
ds
cmp
ret
fxch
sbb
inc
push
and
shll
or
loop
sbb
inc
adc
cmp
adc
push
movsl
xchg
subb
mov
stos
repnz
rolb
pop
mov
push
or
movsl
push
xchg
dec
dec
jo
lret
mov
out
test
loope
cwtl
pop
inc
jl
pop
addb
movsb
jnp
dec
inc
mov
xor
es
int3
nop
test
aam
sbb
stos
adc
pop
push
movsl
mov
test
or
sub
or
jnp
in
inc
das
mov
cmp
lret
xor
imul
sti
dec
gs
int
add
imul
pusha
pop
je
in
inc
in
jl
aaa
bound
call
mov
or
fwait
mov
adc
leave
mov
test
mov
mov
add
in
cmpsb
pandn
popf
icebp
popf
jg
aas
dec
push
jae
fwait
stos
std
adc
imul
es
in
fcmovnu
aam
push
mov
mov
fmuls
jno
pop
popa
test
in
js
xor
push
lcall
in
pop
pop
es
cmc
add
jg
cwtl
xchg
xchg
or
mov
mov
repz
repnz
adc
aam
inc
pop
mov
sbb
fnsave
adc
icebp
adc
pop
sti
cld
xchg
inc
lret
pushf
ret
push
jbe
xchg
xchg
fadd
and
mov
add
pop
xchg
lods
pusha
lods
std
mov
pop
fldl
add
fsubr
shlb
sbb
fnstcw
sbb
call
ds
gs
or
mov
ja
ja
js
sarl
dec
lahf
dec
div
adc
mov
dec
add
cmp
es
sbb
int
inc
pop
negl
cli
jmp
imul
insb
aas
add
mov
jo
icebp
mov
jns
es
add
test
adc
fldcw
add
mov
adc
outsl
jg
rclb
cmp
ret
jb
mov
mov
scas
cli
test
jp
adc
inc
mov
inc
aaa
rcrb
repz
sbb
adc
cltd
scas
pop
roll
mov
call
dec
inc
test
dec
lret
aas
loope
xchg
pop
pop
insb
push
ret
mov
aam
in
xchg
mov
and
cli
test
out
mov
pop
lcall
addl
cmp
test
mov
out
push
sbb
inc
arpl
xor
cmp
sub
je
pop
adc
pop
leave
mov
popf
repnz
inc
jecxz
lahf
pop
jp
jo
add
lret
shlb
dec
mov
mov
mov
in
dec
pop
lcall
pop
lea
cs
and
ffreep
in
pop
adc
adc
movsb
dec
and
add
jge
notl
pop
xlat
dec
ljmp
mov
out
adc
sub
scas
or
pop
inc
scas
pusha
and
int
testb
mov
arpl
sbb
ss
jmp
jno
cltd
sub
mov
xchg
mov
gs
in
into
add
dec
dec
pop
push
sub
mov
cmp
xorl
jne
or
mov
lods
adc
fld
bound
or
outsl
rorl
push
jo
mov
push
clc
stos
cmp
inc
enter
jo
sahf
std
or
fsubl
test
pop
jne
in
clc
out
adc
push
or
jecxz
mov
mov
insb
incl
mov
leave
dec
fldenv
push
std
aad
dec
pop
pop
jge
leave
jnp
sti
cli
cmp
out
xchg
jecxz
xor
sti
push
mov
pop
lahf
jmp
clc
sbb
inc
je
xchg
xorb
inc
push
xlat
adc
subl
cli
ficoms
dec
jbe
leave
call
popf
dec
jbe
subb
in
xchg
jb
cli
dec
insb
outsl
iret
xor
cld
cmpl
inc
add
xor
lret
fisttpl
mov
mov
inc
sahf
mov
push
mov
lret
mov
stos
add
jmp
sarb
mov
outsb
sbb
cmp
dec
lcall
mulb
cmpsb
pop
sbb
gs
leave
daa
sarb
les
int3
lret
icebp
fstl
push
dec
add
rolb
mov
mov
pop
push
flds
aaa
dec
cwtl
or
dec
mov
in
mov
add
stos
add
popa
shl
mov
push
insl
popf
fsub
adc
adc
add
loop
imul
dec
or
xchg
mov
in
ret
stos
or
jae
stos
xor
addr16
lret
mov
inc
mov
fcmovnbe
lea
xor
dec
adc
and
adc
xchg
leave
xor
jge
fisubl
inc
mov
add
ffreep
cmp
or
lcall
mov
sub
cmp
or
pop
sub
jno
aad
nop
jg
dec
jb
lret
mov
adc
gs
out
xlat
int3
mov
divb
push
ret
pop
and
dec
adc
and
cmc
ret
lcall
orl
pop
inc
dec
mov
bound
or
xchg
cmp
xchg
int
lret
push
mov
and
popf
rclb
xor
lret
pop
add
mov
xor
out
cmp
es
and
ficoms
movsl
jle
pop
pop
mov
jns
dec
sub
sub
scas
fcomps
sub
ret
dec
push
adc
rolb
in
pop
hlt
stos
es
int
and
mov
cmp
pop
adc
pop
xchg
lcall
mov
clc
mov
icebp
inc
into
dec
pop
sbb
xchg
push
decb
push
push
inc
xlat
scas
arpl
mov
jmp
sub
or
xchg
aad
xor
pop
outsl
adc
loope
push
mov
xor
lds
std
arpl
shlb
sub
xchg
movsl
mov
cmpsl
mov
jmp
fcomip
mov
sbb
xchg
mov
sub
divb
xor
hlt
mov
mov
push
ljmp
push
out
mov
repz
dec
push
inc
adcl
cmp
jmp
inc
inc
bound
test
add
shrb
mov
sar
inc
mov
cmc
icebp
xchg
fists
outsl
inc
jmp
mov
mov
scas
mov
cmp
sbb
bound
loope
fsubp
shl
je
test
mov
sarb
fcompl
sub
pop
out
xchg
xor
movsl
jo
pop
imul
dec
js
push
loope
std
pop
popa
dec
test
loope
push
inc
je
dec
lods
dec
ja
je
icebp
repnz
lcall
addr16
pop
push
lock
jecxz
popa
lcall
or
mov
sub
enter
push
jns
pop
dec
push
xchg
pop
sahf
dec
cli
arpl
add
and
adc
xorb
lock
inc
ljmp
adc
stc
frstor
jmp
popf
pop
cmp
push
les
dec
dec
pop
mov
mov
push
jo
jae
mov
cs
imul
pop
jmp
ret
xchg
enter
and
nop
fbstp
and
jno
inc
leave
ds
out
fadds
mov
bound
push
loopne
cmp
lahf
jl
movsb
ds
cli
mov
cmpsb
mov
stos
dec
dec
movsb
aam
fwait
roll
fucom
inc
data16
icebp
outsl
mov
outsb
pop
mov
popf
popa
aaa
pop
or
sub
dec
pop
mov
ret
inc
mov
push
inc
test
inc
dec
pop
jle
sub
mov
int
and
movb
push
dec
je
mov
daa
js
aaa
push
dec
stos
xchg
frstor
pop
adc
inc
mov
int
lds
mov
lds
inc
jae
inc
push
sub
rcll
lods
negb
and
jg
push
scas
popa
sbb
mov
mov
push
hlt
in
sbb
pushl
repz
push
clc
clc
mov
adc
xchg
fyl2xp1
fs
pop
sahf
imul
sbb
cmp
mov
push
or
mov
adc
add
xor
out
test
movhps
loopne
leave
inc
pop
sub
sarl
push
inc
sbb
data16
add
inc
lret
es
adc
mov
int
jbe
shrl
imul
movsl
fwait
in
mov
mov
out
and
pop
sbb
or
cwtl
mov
xor
mov
jmp
adc
fists
inc
sub
cmpsb
stos
sbb
in
fstps
fsubs
xchg
mov
daa
cmp
insl
adc
mov
jae
roll
and
push
sti
cmp
mov
sbb
mov
fcmovne
sbb
ja
cltd
jl
or
scas
andl
jmp
mov
aam
rorb
mov
adc
and
xor
loopne
bound
into
or
pop
movsb
in
fstps
adc
outsb
mov
into
scas
add
je
cmpb
and
cmp
jp
sbbb
into
inc
jo
inc
adc
jbe
mov
cmp
xor
xchg
cmpsl
mov
inc
sarl
sub
imul
test
xor
xor
and
ret
mov
push
fldenv
cmpsl
mov
stos
cwtl
outsb
and
add
push
mov
mov
nop
enter
inc
hlt
loope
dec
jae
test
and
idiv
call
lea
cmp
call
sub
cmp
lds
mov
mov
sbb
out
shlb
cli
stc
inc
or
enter
outsb
push
pushf
xor
mov
pushf
das
sub
jp
clc
movsl
mov
popf
rcl
popa
in
push
xchg
addb
les
mov
fadd
stos
test
push
shlb
adc
pop
add
mov
fldl
rep
mov
cmp
minps
cmc
fcompl
xchg
mov
sub
stos
lcall
mov
push
fcoms
xor
dec
push
pop
pusha
clc
pop
js
pop
inc
aad
aam
jmp
test
push
jne
data16
mov
dec
mov
fucomp
repz
lret
inc
pushf
jl
divl
arpl
dec
mov
push
call
andl
xor
jb
xor
push
xor
cmp
scas
inc
adcl
adc
out
cmp
or
das
adc
add
testl
je
cltd
or
scas
fistps
repnz
xorl
inc
add
adc
adc
pusha
pop
mov
or
lods
jnp
nop
aaa
push
test
inc
addr16
out
mov
fsubrs
js
dec
jae
adc
addr16
es
scas
out
fcomip
and
enter
mov
adc
xor
lods
mov
enter
add
adc
test
mov
nop
addb
dec
xor
jae
rcrl
popa
xchg
pop
pop
mov
pop
js
cmpsb
pop
xchg
das
mov
dec
jg
mov
mov
pop
stos
pop
mov
into
jg
leave
into
lahf
xchg
sahf
hlt
mov
repz
aad
push
test
mov
dec
scas
movsb
pop
test
fst
daa
test
dec
xlat
and
cltd
daa
addr16
dec
js
pop
in
rcrb
sbb
xchg
bound
shl
arpl
jmp
xchg
dec
xchg
mov
inc
lock
adc
lea
mov
inc
jge
bound
cmp
mov
adc
sbb
mov
sahf
add
cwtl
dec
in
pop
mov
xor
syscall
inc
testb
in
arpl
mov
pop
push
mov
lea
call
push
inc
cmp
loope
push
orb
mov
pop
stos
cmp
inc
pop
hlt
sub
mov
xchg
sbb
incl
push
or
fildl
adc
lea
dec
lret
mov
and
and
push
outsl
mov
pusha
jle
push
xor
cmp
outsb
or
repnz
jl
incb
inc
push
out
loope
cmpsb
and
js
lret
popa
cwtl
pusha
jb
stc
shlb
pop
sub
pop
push
mov
loope
pop
fisttpll
pop
jg
pop
mov
add
js
pushf
mov
ljmp
outsb
sub
dec
and
in
xor
dec
pop
mov
lcall
push
mov
out
xor
std
mov
mov
je
aaa
jbe
or
jl
test
jns
das
sti
lahf
rcll
pop
cmp
add
fistpl
jb
aam
lahf
sbb
test
test
cmp
outsb
rolb
lahf
int3
jns
inc
gs
icebp
pop
pop
call
shrl
mov
or
shlb
sti
call
mov
add
mov
movsb
pushf
pop
dec
jmp
add
push
and
mov
mov
pusha
or
cmpsb
jo
dec
push
push
lods
mov
test
ja
adc
aam
imul
jbe
inc
fcomip
in
xchg
mov
pop
adc
push
in
loop
add
lcall
icebp
jl
xlat
bound
jmp
test
inc
shlb
cld
aad
cli
inc
cmp
fdiv
lods
xor
test
push
mov
arpl
adcl
or
fnsave
iret
push
ds
sub
lahf
icebp
mov
jns
loope
fstp
pop
lods
leave
push
xor
xchg
popf
test
loopne
scas
jge
and
or
pop
jmp
adc
pop
les
push
test
sbbl
daa
lret
xor
lods
subb
mov
sub
cmp
scas
pop
xorl
mov
pop
test
xlat
insl
sbb
pop
fldl
jmp
dec
xor
inc
popf
xchg
aam
jbe
pushf
xchg
in
aaa
ret
fdivp
cmovno
bound
inc
mov
iret
in
push
sbb
pusha
fdivrl
vmwrite
pop
loope
sbb
fisubs
fistl
das
es
xchg
mov
das
xorb
dec
popf
loop
enter
sbb
cs
rclb
stos
mov
sub
pop
jae
repz
cmp
mov
dec
into
xchg
ss
mov
jns
or
cmpsl
lahf
xor
lock
out
adc
sbb
adc
test
rcrb
mov
mov
shll
inc
data16
in
push
xchg
js
popf
push
mov
dec
xor
aas
es
cmp
test
or
mov
adc
push
or
xor
mov
mov
mov
sub
jle
mov
push
ret
icebp
pop
pop
xchg
mull
mov
adc
in
fldln2
sbb
andl
dec
jmp
jnp
addl
mov
scas
fimuls
mov
cld
mov
cmc
ret
jmp
and
stc
std
ljmp
sarl
dec
mov
outsl
jo,pt
sub
test
pop
xchg
lds
mov
xchg
sbb
loop
jb
aad
cmp
or
cs
ja
fcoml
mov
daa
popf
xchg
loope
insb
sahf
rcrb
and
ja
mov
mov
jecxz
lods
xchg
jns
or
nop
xchg
jmp
xchg
adcl
dec
js
test
mov
sbb
jno
push
sbb
leave
stos
andl
outsb
test
or
or
loopne
mov
je
inc
mov
movsl
adc
sbb
or
adc
sbb
push
push
push
add
inc
aam
imul
cmpsb
dec
cmp
popf
in
test
shrb
push
pushf
clc
lcall
mov
test
mov
cmp
lret
cmc
addr16
pop
cmp
xchg
pop
sbb
imul
pusha
daa
icebp
dec
cli
pushf
pop
out
adc
dec
popa
sbb
cmp
xchg
dec
jae
dec
and
cltd
cmp
mov
sbb
loope
push
pushf
shlb
inc
inc
call
mov
xor
repnz
jge
fiadds
mov
shlb
movsb
out
sub
push
adc
add
jecxz
or
in
push
mov
nop
jmp
pop
push
lret
loop
or
xbegin
lahf
xor
lcall
sbb
mov
ret
dec
jno
push
ds
add
negl
loope
jmp
bound
mov
aad
jno
aad
xor
dec
jns
jmp
jae
in
dec
repz
lds
push
sahf
int
clc
dec
jp
jmp
add
rcll
xchg
and
xchg
rcrb
pop
arpl
jb
test
lea
mov
cmp
addl
pop
add
lds
sub
mov
sbb
das
les
pusha
das
push
mov
sar
jae
jecxz
loop
cmp
add
into
xchg
repnz
push
fldcw
cmc
inc
dec
dec
fdivl
mov
mov
pop
call
scas
xor
jns
sbb
push
jecxz
push
clc
sub
cs
jbe
sti
faddl
aas
add
inc
lods
xor
mov
ja
cmp
lahf
sbb
dec
pop
pushf
mov
xchg
repnz
gs
int
mov
sti
xchg
sub
adc
test
clc
shrb
lods
mov
in
and
adc
dec
and
cmpsb
fmull
movsl
xchg
aas
mov
push
mov
xchg
fdivrp
in
sbb
xchg
ret
add
adc
or
xchg
mov
xor
jno
add
ss
inc
fs
pop
mov
adc
lods
addb
test
clc
cli
sbbb
push
pop
mov
jmp
cli
xchg
sti
mov
aam
xchg
push
sbb
sar
pusha
fmul
mov
xchg
adc
push
push
mov
adc
mov
cmpsl
cld
mov
pop
fdivr
int
jo
ss
das
cmpsl
ss
std
aad
bound
test
mov
outsl
shlb
in
pop
xorb
jle
sbb
jl
popa
les
outsb
inc
and
shrl
sub
fstpl
nop
mov
cmp
dec
and
pop
mov
jno
sti
push
addr16
adc
mov
push
stc
pop
xchg
ret
inc
ret
hlt
shlb
adc
mov
shll
scas
ljmp
cmp
sbb
xchg
addb
scas
test
inc
mov
daa
rclb
jbe
adc
clc
mov
inc
sub
pop
xor
mov
jl
inc
cmp
adc
cmp
or
dec
ja
push
and
jae
cld
je
cmpsl
xchg
clc
xchg
clc
dec
mov
jo
loop
jo
insl
gs
pop
add
mov
in
fs
sub
xchg
inc
leave
sbb
sub
mov
btc
fidivs
vorps
fwait
dec
jl
xchg
inc
cmp
aas
xor
add
cmpsl
hlt
xchg
mov
mov
pop
sub
push
or
adc
pop
sub
lds
pop
pop
js
pop
add
add
cltd
punpckldq
test
int3
mov
mov
out
dec
add
sbb
int
scas
js
ror
add
mov
stos
movsb
stos
xor
or
mov
cmp
xchg
aaa
cmpsb
push
in
ret
xor
scas
xchg
push
pop
push
pop
icebp
adc
adc
es
jg
jp
in
das
mov
gs
repz
outsb
sub
loopne
outsl
cli
mov
hlt
pop
mov
outsl
imul
jg
sub
dec
dec
les
inc
fisubl
cli
pop
push
sub
ror
push
out
pop
dec
mov
mov
mov
pop
mov
fstpl
or
js
icebp
pop
mov
pusha
or
sub
out
inc
arpl
stc
out
jb
movsb
push
or
dec
xchg
enter
jbe
cli
push
dec
test
mov
inc
hlt
inc
je
in
or
pusha
ret
mov
std
add
push
lods
pop
fistl
or
mov
aas
lea
push
js
or
fists
cwtl
cli
and
stos
push
shll
loop
dec
sbb
sub
stos
mov
rorl
jge
mov
mov
insb
sbb
add
fnstenv
mov
aam
imul
and
add
push
push
inc
cmpsb
lret
ret
stos
into
inc
inc
mov
insb
mov
sub
dec
xlat
adc
out
or
in
lock
sbb
pop
and
lcall
jnp
mov
jmp
jnp
cmpsb
jae,pn
jmp
in
jecxz
mov
jl
cmpb
or
shll
cmp
addl
push
inc
ja
iret
data16
pop
lret
clc
shr
push
xchg
xor
fwait
xor
adc
dec
jb
clc
dec
lea
ja
xchg
and
fnsave
mov
dec
inc
outsb
mov
sub
popa
inc
xchg
insb
pop
dec
pop
shll
push
xchg
mov
mov
cmp
stos
add
fdivrp
int
push
push
out
das
mov
test
cmp
push
mov
fwait
js
xlat
jg
pop
int
add
incb
mov
cltd
xor
clc
xchg
xor
mov
sbb
out
lret
lods
call
dec
ss
and
outsl
xor
dec
repz
std
daa
mov
inc
add
jnp
cmp
mov
loop
sbb
rcr
out
out
cs
jo
xchg
inc
loop
std
xor
pop
test
outsl
fdivrs
fwait
dec
shl
imul
lock
insb
or
jp
inc
std
push
sbb
popf
testb
enter
ds
mov
ret
out
test
je
jecxz
jnp
test
xor
aaa
mov
push
mov
sbb
ret
nop
out
fs
pushf
cwtl
push
cmp
xchg
add
mov
dec
xor
into
test
inc
fstp
dec
fdiv
cmp
cmp
arpl
sbb
cmc
popf
jne
addr16
iret
jecxz
dec
dec
mov
enter
cs
es
fiaddl
cmp
movsl
mov
insl
mov
daa
mov
dec
jb
add
clc
cmpsl
fsubl
and
das
ret
jle
std
sub
test
lret
in
pop
mov
inc
cmp
cli
or
dec
push
sahf
hlt
imul
sarb
cmp
mov
pop
sti
repnz
dec
xor
idivl
xchg
das
imul
mov
mov
lea
sbb
mov
fisttps
ljmp
arpl
popf
mov
repz
push
mov
and
int
push
jb
push
or
cmc
cmpsb
cmp
or
and
out
movsb
inc
sbb
imul
test
mov
mov
adc
mov
pop
jno
dec
imul
and
cmp
int3
pushf
xchg
adc
mov
test
jbe
repz
addr16
mov
cltd
mov
andb
cs
inc
lahf
push
xchg
xchg
lods
fwait
add
inc
hlt
push
in
imulb
mov
test
mov
ja
in
xchg
mov
out
in
mov
or
adc
movsb
lcall
into
jle
jae
movsl
or
cltd
push
add
popf
lret
ljmp
jmp
adc
push
cmpl
jns
dec
clc
fwait
stos
add
dec
addr16
popaw
jb
push
push
addr16
int3
enter
mov
jo
pop
push
repnz
negb
xor
cmpb
push
cmp
and
test
mov
arpl
cmp
push
jecxz
xchg
lret
xor
test
mov
cmp
and
arpl
iret
outsl
adc
in
adc
sbb
ds
xor
popa
adc
cmp
inc
jae
shl
enter
and
idivl
adcb
aam
push
rcrb
ret
push
inc
jmp
inc
pop
mov
orl
inc
nop
test
push
mov
cli
fst
push
test
jg
mov
lret
notl
insb
lds
push
outsl
adc
mov
fiadds
adc
mov
and
sbb
outsb
add
fcomip
mov
movsb
add
out
jmp
xlat
sarl
divb
in
aam
xlat
mov
insb
jne
mov
sbb
jns
mov
movsb
jle
leave
jg
cmp
and
std
pusha
inc
scas
outsb
stc
imul
movsb
mov
pushf
mov
jnp
pop
push
stc
sbb
adc
jmp
ds
aad
pop
xchg
jg
scas
push
filds
in
add
cmc
and
sbb
ret
out
stos
cmovbe
stc
mov
cmpsb
push
add
and
scas
fildll
add
xor
sahf
dec
mov
xchg
shr
xchg
out
xor
icebp
sub
or
ja
mov
xor
std
xchg
fcompl
sub
sub
inc
ret
cld
mov
xchg
mov
pop
test
mov
clc
stos
leave
je
call
pop
rolb
add
imull
mov
in
mov
sbb
lds
fwait
add
in
in
mov
mov
inc
sbb
and
in
ss
xor
cmc
jne
add
adc
jp
sub
push
push
mov
adc
adc
hlt
outsb
lods
adc
bound
push
jo
mov
xchg
call
cwtl
xchg
and
jb
call
dec
lret
push
mov
mov
xchg
roll
mov
dec
movsb
daa
cld
scas
cmp
std
test
sub
stos
mov
imul
push
mov
in
xor
mov
aam
lds
ret
inc
jns
enter
cli
sbb
imul
in
mov
lcall
mov
fstp
push
lea
test
xor
imul
xchg
stos
ret
push
xor
subb
pop
aas
fwait
cmpsb
into
lds
cmpsb
mov
clc
or
inc
push
xor
shrl
adc
mov
je
jmp
mov
mov
shlb
clc
adc
cmp
ss
inc
mov
xchg
pop
xorb
sub
jmp
ja
hlt
sarb
xchg
loopne
pop
push
jne
int
fwait
lds
lds
pop
add
movsl
sbb
inc
inc
sub
cmpsb
enter
xchg
jbe
adcl
test
hlt
mov
push
mov
push
pop
sbb
dec
shrb
daa
mov
stos
adc
in
push
mov
cmp
push
push
xor
lret
sbb
sarb
clc
push
or
xor
sub
aad
mov
sti
mov
dec
enter
rorl
dec
imul
inc
and
or
push
cmp
icebp
rcl
int3
mov
or
fcomps
xor
push
rcrb
inc
xchg
xchg
lods
outsb
andb
xor
or
movsb
dec
cmp
sahf
lahf
int
mov
lcall
or
xor
fmull
imul
out
mov
test
sbb
incb
xchg
xchg
add
jb
dec
xlat
mov
mov
outsl
dec
xor
arpl
jp
mov
sub
or
outsl
or
in
das
sub
pop
xchg
test
jbe
stos
jno
jecxz
orl
and
shll
dec
jmp
ds
aas
call
push
outsl
dec
lcall
cwtl
pop
push
addb
and
cmp
xor
inc
cmp
cld
adc
sbb
mov
insb
or
jo
mov
nop
out
call
notl
in
je
sbb
lret
insl
jge
bound
mov
sub
sbb
mov
mov
jae
dec
or
int
fcompl
jecxz
callw
daa
shlb
xchg
repz
inc
cmpsl
or
fisubrl
pop
pop
xchg
and
cmp
loop
frstor
cld
mov
adc
mov
fsubrl
aaa
or
cmpsl
xor
push
xor
shll
mov
mov
pushf
xor
movsb
idivl
xchg
imul
inc
mov
loopne
and
into
jb
push
lods
inc
loop
cmp
and
sbb
jns
popa
mov
xor
sub
fstpt
pushf
rcrb
mov
ljmp
ja
subl
pusha
movl
jno
fistl
push
and
add
mov
out
cmpsl
test
pusha
pop
mov
dec
insb
jb
and
iret
mov
xchg
xchg
scas
les
and
pusha
adc
cltd
xor
into
jecxz
andl
aad
sub
fwait
or
xor
mov
pop
pop
push
mov
or
aam
adc
push
jns
clc
and
add
or
testb
adc
sti
cwtl
lea
mov
or
jecxz
pop
xchg
das
mov
and
int3
push
cltd
xor
lahf
add
ja
xor
mov
mov
arpl
inc
mov
cmp
xchg
jmp
xor
enter
cld
pop
je
lahf
add
pop
pop
js
adc
cmp
adc
mov
inc
mov
inc
dec
add
mov
pushf
arpl
lahf
mov
cli
adc
mov
jge
sbb
mov
movsl
cmp
ss
pop
jl
popw
or
imul
adc
xor
lea
pusha
test
push
xor
cmp
mul
nop
cmp
int3
xor
cmc
cmp
loope
lcall
int
inc
or
repz
mov
mov
mov
fisubl
mov
iret
push
out
sbb
inc
sub
ljmp
jl
jmp
adc
stos
lahf
xor
orb
bound
add
jmp
push
sti
dec
adc
jge
mov
mov
incb
dec
sub
lret
xor
push
add
loope
mov
test
loopne
jmp
movsl
jne
bound
stos
in
xchg
add
loop
es
jb
fsubl
stc
jo
negl
jmp
jl
fistpll
push
aam
jl
inc
fmuls
add
into
mov
push
cmpsb
lcall
or
mov
push
add
mov
push
imul
insl
cmpsb
test
and
mov
cmp
mov
sub
icebp
push
add
movsl
or
popf
jno
lods
xor
dec
xchg
loop
aad
leave
and
mov
sub
add
mov
xchg
xlat
mov
sub
mov
addr16
dec
or
inc
pop
cld
adc
fisubrl
test
mov
fdiv
pusha
call
adc
sarb
repz
xchg
jno
jns
sub
aad
and
mov
mov
pop
cwtl
pop
or
aad
adc
dec
lret
fistl
mov
cmp
xchg
push
adc
pop
hlt
nop
add
xchg
jbe
imul
loop
add
dec
xorl
add
inc
xchg
cs
sub
outsb
dec
leave
arpl
sub
adc
stos
ja
cmc
adc
aas
ret
cmp
iret
jle
and
outsl
fdivrl
dec
loope
jae
or
inc
xor
cmp
mov
fwait
pusha
pushf
scas
jns
and
mov
rol
jne
push
pop
jae
fbld
sub
test
je
aam
ror
loopne
rcll
fwait
in
mov
test
mov
gs
and
test
sub
xchg
pop
test
xchg
cli
outsb
movsb
stc
js
mov
test
test
addr16
in
push
mov
popf
jo
sti
in
or
mov
and
iret
mov
jecxz
clc
jns
aaa
xor
xchg
fadds
cld
add
repnz
xchg
mov
lea
lahf
test
arpl
cmpl
cwtl
inc
outsb
sbb
mov
or
lock
lret
push
dec
push
loop
add
pop
ja
jge
outsl
mov
cmp
push
cmpsb
fcmovu
insl
push
addb
push
push
imul
mov
xor
divb
ret
mov
pop
adc
mov
repz
popa
enter
dec
aam
int3
xchg
mov
pop
dec
inc
mov
jb
xchg
lcallw
and
jecxz
sti
jge
in
test
cltd
push
fxam
push
mov
cld
test
cmp
pcmpeqb
aas
int
cmpsb
lret
pop
mov
repz
mov
push
hlt
xchg
jl
mov
sbb
fcoml
inc
sub
das
dec
out
cwtl
sbb
test
inc
arpl
push
shr
dec
mov
adc
leave
push
loopne
mov
xor
gs
jne
jp,pn
shrl
sbb
sub
lahf
js
popa
clc
push
mov
mov
push
jae
and
lods
notl
and
lcall
and
adc
or
mov
lock
leave
adc
lods
enter
and
xor
icebp
popa
add
jge
divl
jne
xlat
adcl
and
or
std
xor
pop
rcrl
push
shlb
sub
pop
dec
shl
xchg
push
inc
in
clc
pop
jne
jle
rorl
or
adc
pushf
mov
xchg
inc
insb
push
mov
xchg
dec
fidivrs
mov
das
and
mov
push
call
cwtl
jl
lahf
sahf
jl
fbld
aas
daa
ror
ja
or
addb
imul
ret
arpl
lods
dec
testl
mov
mov
mov
aad
xor
jae
in
fiaddl
push
inc
fs
in
adc
push
mov
in
das
lret
xchg
adc
or
lcall
bound
lods
notl
insl
xor
rcll
sbb
cld
cld
xchg
lock
adc
push
aaa
lret
add
mov
jecxz
xor
ret
pushl
addr16
mov
pop
fdivrs
dec
pushf
sub
hlt
fnstenv
mov
mov
dec
jnp
xor
icebp
scas
ds
scas
clc
add
or
jecxz
out
cmp
int3
js
in
out
notb
mov
shlb
adc
push
inc
mov
test
jg
addr16
jae
xchg
xchg
adc
ja
sarb
fstl
dec
adc
testb
es
test
xor
pop
mov
cmp
sbb
pop
jo
sbb
inc
mov
adc
imul
idivb
ret
loop
dec
hlt
jge
inc
out
mov
push
cwtl
popf
cwtl
jae
in
lahf
fimull
or
mov
movsl
rorl
jmp
lcall
push
pop
dec
mov
mov
mov
lret
mov
pusha
enter
mov
stos
pop
lcall
stos
and
add
mov
jg
inc
dec
pop
push
mov
add
add
adc
mov
sarl
lcall
jae
push
cs
xor
pop
push
jae
mov
cld
cmp
add
pop
mov
mov
leave
roll
enter
pop
jmp
popa
jmp
mov
fldln2
test
iret
adc
add
lret
mov
test
jb
inc
mov
push
push
das
sbb
movsb
or
mov
test
into
cli
loopne
xchg
outsb
out
addr16
jbe
mov
pop
jo
sbb
mov
in
pop
adc
sbb
lods
xchg
aas
pushf
or
fisttpl
cmp
ja
mov
mov
jno
or
xchg
mov
mov
push
mov
sub
push
outsl
push
sti
or
jae
adc
mov
and
data16
mov
in
dec
jae
fmull
leave
pop
and
jno
adc
cmp
xlat
lock
in
fdivrs
mov
cmpsb
pop
jge
dec
sub
or
ficompl
adc
mov
enter
aad
addb
shlb
jb
inc
xorb
dec
in
pop
cmpsl
ret
cwtl
into
rclb
sbb
jne
imul
pop
movb
mov
pop
mov
xchg
and
insl
addb
aaa
xor
and
fdiv
push
jb
jmp
outsl
mov
cli
ret
js
mov
or
int3
arpl
insl
faddp
test
and
cmpsb
or
xor
mov
shrb
and
inc
cmpsl
and
xchg
dec
mov
sub
push
or
inc
xlat
mov
mov
or
aaa
mov
cmp
push
pop
adc
adcl
sbb
mov
mov
xchg
pop
push
sbb
or
sbb
je
gs
das
pushf
cmpsl
xlat
jmp
nop
pop
or
mov
mov
xor
sti
iret
movsb
add
dec
fbld
lea
xor
dec
aaa
sub
idivl
push
fsubrp
jle
push
aam
lock
test
dec
lret
cmp
loopne
jb
test
or
jae
xor
mov
push
dec
movsb
stos
jle
add
lahf
push
add
inc
fwait
sub
sub
les
gs
cmp
jnp
push
pop
pop
add
add
mov
mov
add
repz
pop
dec
sbb
shrl
aam
pop
add
cmp
pop
pop
xor
push
jae
mov
aas
fisubs
dec
gs
mov
or
fldl
iret
ret
in
ror
mov
or
aaa
pop
dec
xchg
les
cmpsl
in
and
add
push
dec
in
lds
aam
cmpsb
or
addl
fwait
inc
add
mov
and
or
repnz
fistpl
les
or
ja
in
add
vpsrlw
test
jle
popa
lret
fsubr
jno
mov
sti
push
push
mov
push
pushf
sbb
repz
xchg
adc
mov
or
das
mov
inc
cmp
sbb
rcll
in
add
sub
mov
movsb
xchg
jo
sbb
mov
push
jnp
dec
int3
in
es
xlat
dec
and
mov
sub
xchg
mov
push
pushf
mov
and
push
iret
xor
out
push
idivl
cwtl
mov
ret
xor
jle
push
mov
popa
cmp
pop
pop
push
lret
stos
sub
or
loopne
or
inc
in
xor
ficompl
xchg
pop
out
aam
pop
sbb
mov
outsb
lahf
shrb
mov
pop
jns
fisttps
in
pop
sbb
out
test
sub
adc
or
icebp
push
sbb
js
add
or
testb
shrl
pop
xchg
push
loopne
in
lods
aad
jo
es
fsubl
dec
jne
jp
aaa
test
xchg
or
push
fildll
sub
push
dec
adc
cmp
repz
xor
mov
and
push
shlb
shll
dec
aas
aas
add
mov
fisttpll
mov
xor
ljmp
mov
fdivs
pop
xchg
es
add
pop
call
fimuls
xor
push
ret
fldt
push
adcl
adc
or
jns
mov
jno
lret
mov
pop
add
cmp
adc
cmp
mov
pop
pop
jo
inc
imul
ret
out
vcvttps2dq
jo
jle
xchg
xor
popf
shll
mov
aam
xor
sahf
push
mov
xchg
sub
mov
push
cmp
or
and
cltd
aaa
push
jg
adc
imul
mov
inc
pop
jbe
inc
sub
mov
out
rcrb
ss
mov
push
sbb
aaa
imul
lock
mov
fmuls
aaa
mov
inc
adc
mov
mov
fcmovne
sub
lahf
ds
mov
notl
push
fnstenv
xchg
and
in
pushf
das
push
push
cmc
repz
sub
in
mov
loopne
out
and
data16
xchg
mov
or
mov
sbb
cmc
dec
pop
sbb
loop
adc
mov
mov
dec
xchg
mov
jb
pop
adc
lds
pop
jnp
sbb
inc
inc
dec
jo
fstpl
pop
mov
or
rorl
mov
gs
out
cwtl
and
and
in
fldl
cmp
jle
in
mov
jge
inc
ss
mov
outsb
dec
xor
push
add
and
push
pop
push
sbb
call
fisubs
jae
test
adc
movsb
lret
push
decl
push
clc
je
push
sbb
inc
mov
ljmp
fbld
xchg
adc
push
loopne
add
xchg
out
je
fwait
sbb
xor
rclb
cmp
mov
lods
jp
in
jo
enter
xchg
lock
cmp
cmp
mov
mov
xchg
aam
and
push
mov
pusha
scas
in
iret
lret
mov
jmp
int
dec
jge
scas
ss
mov
jp
pushf
adc
lds
lock
scas
mov
jae
push
pop
mov
lret
dec
mov
les
push
lcall
aam
cs
cwtl
mull
mov
dec
movsb
jae
and
sbb
dec
mov
loopne
imul
push
fidivrl
inc
push
jo
pop
mov
cld
push
enter
dec
mov
pop
jbe
inc
sti
hlt
add
inc
fs
ret
daa
mov
stc
rorb
shl
jmp
and
shl
sub
push
addl
push
int3
inc
mov
addr16
leave
out
lret
adc
dec
ret
xchg
jp
mov
inc
xchg
bound
cmc
and
inc
cwtl
ljmp
cs
aad
repnz
adc
xor
dec
cmpsl
jns
mov
fidivrl
inc
sti
shl
daa
push
cld
mov
scas
call
cmp
inc
push
hlt
jp
push
lcall
lcall
push
cmp
mov
in
mov
pop
imul
out
movl
ljmp
push
add
mov
and
outsb
pop
gs
cmp
jo
repz
data16
add
xchg
mov
lret
and
cmp
data16
cmp
imul
xchg
push
rcl
cmp
fiaddl
adc
mov
test
scas
sub
xchg
stos
inc
jo
test
outsb
out
pop
add
cmp
jnp
jne
mov
das
mov
mov
push
pushf
in
cli
mov
xchg
pop
mov
insb
out
sbb
adc
je
in
inc
jne
scas
jo
add
mov
rcrb
jmp
mov
lret
pop
mov
mov
rorb
jne
cs
dec
mov
into
mov
mov
mov
xor
inc
pop
jge
or
scas
les
insl
mov
adc
out
decb
mov
fisubl
cmp
in
leave
arpl
imul
fwait
or
add
out
mov
mov
xchg
sbb
or
icebp
adc
sbb
leave
xchg
out
adc
scas
jge
mov
adc
mov
pop
scas
xor
nop
lret
mov
fcompl
cwtl
popa
mov
mov
frstor
jl
movsb
xor
sahf
push
pop
inc
aas
inc
sahf
xchg
ficoml
mov
iret
sub
movsl
insl
gs
fcmovu
repnz
mov
xchg
fisttps
outsl
jecxz
sub
lods
fsubr
mov
pop
mov
inc
mov
into
repnz
sbbl
cli
lods
test
lods
sub
in
jle
sub
sarb
jbe
clc
jae
loopne
ss
pusha
cs
add
arpl
lods
cmp
pop
push
pop
iret
loope
fstl
aad
sub
int3
and
mov
mov
xor
jge
lock
cmp
push
pop
loop
call
addr16
or
repnz
push
out
clc
aad
mov
adc
push
rolb
xor
pop
loope
loope
out
fildll
arpl
cwtl
rcl
cmp
sub
pushf
or
cmpb
lret
and
mov
shrb
xchg
out
dec
push
das
bound
lret
loop
call
loope
lahf
inc
jnp
sbb
cmpsl
or
lcall
insl
fcmovnu
inc
hlt
jl
adc
or
xchg
sbb
adc
dec
lret
enter
outsb
loope
xor
sbb
dec
in
popa
mov
nopl
push
ds
inc
jle
jae
xchg
push
jbe
into
out
push
jl
sub
push
or
sub
mov
mov
ds
xor
lock
cs
push
lahf
fstps
rcrl
add
pop
fdivrl
pop
fwait
dec
addr16
fisttpll
dec
aas
cmp
and
mov
adc
repz
cmp
adc
xchg
fwait
insb
out
mov
push
loope
fs
hlt
adc
insl
divps
pop
add
fldenv
adc
add
mov
and
test
or
xor
dec
pushf
mov
jle
mov
sub
sub
xor
aad
test
iret
xchg
leave
mov
scas
xchg
push
xchg
ret
xchg
aam
test
fcompl
mov
mov
stc
add
sbb
sbb
jmp
lret
das
add
and
and
in
xchg
arpl
dec
pusha
ss
daa
jmp
push
dec
sub
setae
stos
test
outsb
inc
divw
jns
icebp
stos
in
lahf
cwtl
mov
mov
outsl
sarb
mov
bound
jns
and
je
imul
test
sti
outsb
out
data16
mov
popa
repz
xlat
jne
es
lahf
ds
outsb
aas
test
and
lret
ljmp
out
movsb
mov
pop
imul
push
lds
adc
mov
pushf
and
xchg
aas
mov
add
jmp
mov
negb
lret
xchg
or
enter
fwait
loop
int3
inc
lods
mov
aam
cld
push
cmpsb
arpl
mov
mov
cmp
push
fs
out
shlb
cli
xchg
fwait
aam
jmp
aam
push
ja
push
or
imul
out
mov
into
ret
or
dec
pop
pop
shlb
lea
push
pop
loope
lds
mov
fisttpl
mov
hlt
std
push
jle
xchg
pop
xor
das
bound
xchg
mov
call
dec
mov
mov
push
cld
jae
fisubrl
lea
cmpb
dec
cmp
cmp
lcall
std
xchg
mov
jo
imul
jle
mov
jg
sbb
lock
push
dec
and
icebp
xor
sub
push
push
and
daa
rorl
or
sbb
movsb
movsl
push
xchg
push
nop
xchg
jae
pop
jecxz
es
or
ljmp
icebp
jbe
dec
inc
gs
popa
jmp
jbe
fnstsw
data16
or
daa
jp
cs
loope
rcrb
fs
out
push
xor
mov
lahf
mov
dec
jmp
sti
pop
xchg
nop
sarb
mov
inc
ds
insb
add
pop
pusha
pop
inc
push
lock
icebp
jns
loopne
pop
mov
and
ret
and
sbb
dec
pop
or
movsb
and
jle
loop
inc
mov
addl
push
ja
fwait
das
inc
mov
addr16
sahf
add
aad
mov
sub
subl
enter
fs
add
and
loopne
aas
mov
aaa
push
pusha
cmp
mov
call
jmp
xchg
adc
xor
stos
mov
pop
mov
pushl
push
pop
sbb
lock
mov
fs
xor
cmc
shrl
dec
dec
jg
xor
push
sub
imul
shlb
xchg
out
sub
mov
sbbl
dec
mov
std
out
dec
aad
xor
mov
mov
aaa
enter
jbe
or
add
mov
mov
xor
stc
xlat
js
xchg
lret
adc
inc
and
lods
xchg
enter
add
aam
lahf
pop
pop
adc
add
insb
dec
rcrb
mov
xchg
push
arpl
leave
mov
fistps
jmp
mov
fs
cld
push
clc
decl
movsb
clc
imul
dec
lcall
int
movsb
push
push
test
mov
inc
loope
fcomp
and
repz
pop
out
pop
push
in
push
rclb
movsb
mov
ret
mov
popf
dec
mov
testb
popa
out
push
rolb
jbe
mull
aad
dec
cmp
push
jecxz
test
jecxz
mov
lds
je
testl
cmpl
imul
mov
stos
pop
inc
cmp
test
mov
cmp
test
push
jne
notl
mov
in
aam
les
pop
orl
mov
shlb
adc
mov
add
and
dec
mov
out
loopne
inc
adc
in
in
das
ja
push
sbb
jno
in
aaa
or
repz
mov
dec
insb
pop
jl
jmp
leave
or
add
mov
fcom
or
aam
addb
xor
lea
leave
sbb
aam
cmp
stc
subl
out
mov
daa
cmp
mov
push
mov
call
jg
xchg
inc
cmp
sub
data16
mov
movd
cmp
inc
data16
jne
pushf
lods
and
cmpb
cmp
mov
fstpl
sub
dec
xor
dec
dec
aam
leave
into
sbb
adc
popa
adc
cmpsl
xor
fildl
std
out
adc
xor
lret
pop
mov
shr
aam
xchg
sub
cmpsl
rorl
outsb
pop
popf
adc
stos
cld
jb
push
loopne
nop
rcr
inc
ds
jmp
cmp
sti
ror
adc
pop
ret
and
xor
and
mov
loope
jecxz
mov
aad
push
xchg
xor
outsl
jbe
aaa
mov
sbb
iret
push
mov
push
xchg
imul
movsl
icebp
and
sub
stc
jle
popa
pop
clc
inc
mov
add
ss
sub
fldt
call
bound
aad
xor
inc
mul
sbb
jae
adc
jb
sub
outsl
lret
in
fsts
aas
cmp
jno
hlt
jge
leave
pop
adc
es
nop
add
push
adc
or
icebp
sub
sub
inc
sub
es
std
dec
xor
cmp
mov
popf
add
leave
or
mov
fucomi
ljmp
jb
lock
js
jmp
jle
out
mov
lods
lret
inc
je
packuswb
incb
add
xlat
cli
push
stos
xchg
add
mov
psubw
mul
jl
out
negl
dec
inc
in
stc
pop
adc
xor
mov
pop
out
mov
jne
xor
loopne
inc
test
aaa
lds
and
ds
std
lcall
pop
xlat
or
addr16
loope
fiaddl
insl
xchg
push
inc
adc
sbb
xchg
stc
inc
mov
or
or
push
cmpsb
mov
cltd
xor
addb
xor
sti
enter
in
sti
lea
lret
cs
jl
dec
add
enter
cmpsb
xchg
out
fldl
adc
das
inc
popa
jnp
inc
ret
scas
push
sub
loopne
int3
mov
imulb
movsb
and
cmp
xor
and
daa
mov
adc
shr
mov
and
rcr
scas
pop
daa
dec
cmp
popf
xchg
push
or
jno
fsub
fdivs
mov
mov
mov
aam
es
ds
ss
sbb
sub
cmc
fwait
lcall
imul
pmullw
loope
scas
push
push
outsl
jge
push
xor
ret
movsb
ja
jg
imul
sarb
xchg
push
vpacksswb
flds
cltd
icebp
pop
je
mov
test
push
jge
aam
mov
jp
icebp
aad
jnp
dec
cmp
sub
xor
test
ljmp
push
add
xor
sub
push
or
mov
mov
inc
ja
sbb
inc
xchg
bound
shll
adc
shlb
inc
sbb
lret
or
or
outsl
aaa
mov
xchg
daa
add
push
pop
or
ret
adc
test
mov
aas
xor
and
scas
enter
pop
movsl
lods
push
xor
xchg
adc
sbb
ret
dec
cwtl
xchg
pop
sti
insl
dec
xlat
mov
les
sub
ljmp
cmp
les
cmp
lret
shrb
pop
adc
xor
mov
mov
ds
fiaddl
or
mov
rolb
pop
mov
enter
mov
loop
mov
divb
dec
rolb
adc
in
sub
inc
and
xchg
jge
andb
test
test
mov
push
jb
rol
int3
ja
loop
adc
dec
xchg
push
imul
sahf
popa
cmpsl
addl
hlt
mov
sti
sub
xor
mov
mov
xlat
sti
pop
inc
add
and
cmp
mov
insl
cmp
loope
call
xchg
add
push
or
movsl
imul
scas
into
test
mov
icebp
imul
xchg
notb
jle
inc
cli
mov
shrb
testb
into
call
pop
push
cwtl
ja
add
mov
adc
aad
add
fstpl
inc
rorl
pop
insb
popa
jle
mov
sbb
cmpsb
xor
dec
jbe
stos
push
push
add
dec
jecxz
and
jns
xor
out
repz
sub
push
adc
and
in
cltd
std
dec
ss
cltd
inc
popl
pushf
sbb
xchg
lret
push
shlb
sub
add
leave
lods
cmc
lock
adc
lods
sub
mov
mov
mov
in
and
lds
loope
loope
mov
cli
xorl
mov
push
cli
jbe
mov
push
in
fldt
adc
movsl
je
xor
loope
lcall
jnp
sub
in
jecxz
adc
mov
or
rorl
add
lcall
push
faddl
push
push
dec
pop
int
add
lock
fldenv
jl
fisubl
mov
loope
pop
aaa
out
loopne
idiv
sub
jl
lock
addl
sbb
dec
sahf
mov
ds
data16
mov
mov
add
mov
les
mov
bound
mov
jecxz
int3
test
addb
push
push
rorb
xchg
outsb
and
rclb
jae
inc
fildll
sub
push
pop
out
in
mov
mov
jp
sbb
in
roll
dec
pop
xchg
push
out
push
rcr
cmc
sti
jbe
dec
ss
sti
xchg
or
mov
sahf
mov
xlat
outsb
jg
out
push
int
daa
mov
cmpsb
es
imull
and
push
jge
mov
pusha
or
add
lahf
cmpsb
out
std
xchg
popa
subl
mov
movsl
mov
icebp
push
lea
ljmp
jp
dec
fwait
jo
lcall
fisubs
add
pop
lcall
leave
xchg
dec
push
pop
xchg
fcmovne
pop
xchg
sahf
sub
mov
adc
cmp
imul
push
cld
divb
lahf
mov
stos
push
cld
dec
inc
cmc
cmc
xchg
test
dec
jns
repz
sti
xor
outsl
mov
dec
fmull
xchg
mov
adc
imul
pop
inc
cmc
cld
arpl
sbb
jecxz
push
jns
pop
mov
jmp
mov
push
lds
repnz
leave
fisubrs
sbb
mov
jbe
in
repnz
push
xchg
outsb
xchg
and
add
and
or
insw
out
enter
cs
dec
frstor
jo
push
sub
add
jle
adc
push
movsb
mov
add
out
rsqrtps
int
xchg
subb
iret
xchg
outsl
test
or
subl
stos
sarb
or
sti
repnz
push
pop
cmpb
add
dec
shl
xor
test
pop
adc
adcb
cmp
jg
int3
xchg
jbe
lret
rclb
ljmp
les
subb
movsl
dec
mov
push
mov
sarb
nop
in
ljmp
pop
dec
je
add
mov
gs
cmc
dec
movsb
sahf
imul
pop
insb
dec
push
inc
push
lret
out
jnp
pushf
adc
push
subb
ja
mov
repnz
mov
cmpsb
dec
sbb
adcb
frstor
lcall
imull
mov
mov
or
mov
cld
mov
loop
mov
sub
call
test
out
fwait
shl
adc
mull
cmp
int
fidivrl
lret
les
pop
fsubl
arpl
jae
adc
sbb
bound
xor
test
mov
mov
xlat
repnz
mov
out
stc
repz
add
shrb
jg
cmp
pop
adc
add
repnz
aaa
mov
das
add
pop
addl
es
mov
mov
mov
lock
sub
cmp
je
call
add
fidivs
inc
lahf
mov
jge
popa
faddp
ss
pop
sbb
roll
jmp
movsl
stos
insl
sub
and
je
push
lret
mov
loope
pop
cmp
jne
movsb
lcall
pushf
orl
jbe
push
clc
loopne
mov
push
push
adc
and
cmp
jmp
setnp
cmpsl
repz
mov
sbb
mov
cmp
rolb
xlat
mov
dec
ret
clc
cvtps2pd
sbb
pop
dec
ss
aam
pop
push
add
fmul
sbb
mov
popl
cmpsl
sub
add
popf
xor
mov
jmp
mov
lods
mov
icebp
sbb
mov
add
ss
cs
jl
pop
lods
inc
pop
mov
les
jns
mov
out
test
cltd
test
cli
jge
fldl
dec
cltd
popf
xchg
daa
jb
stc
push
xchg
jg
pop
cmpsb
pop
cmp
shrl
cmp
ficoms
jnp
mov
outsl
and
les
cld
into
out
popf
pop
das
xlat
push
jl
out
xchg
cmp
aaa
mov
and
outsl
xchg
mov
cmc
xor
sbb
mov
jbe
jl
sbb
call
mov
add
fstp
je
loope
icebp
fcoml
xchg
adc
lds
xor
mov
xchg
test
jmp
gs
mov
nop
repz
out
dec
inc
ja
iret
scas
push
add
dec
fsts
push
icebp
pop
arpl
and
in
adcw
dec
mov
jbe
test
cmc
hlt
mov
adc
mov
pop
xchg
pop
cmp
pop
ss
bound
lods
clc
jo
add
repnz
clc
pop
mov
pop
push
cmp
les
ljmp
mov
ss
movsl
ret
int3
add
mov
xor
cmp
push
cmp
rol
dec
jle
cltd
mov
push
rcll
loop
and
mov
shrb
dec
push
mov
sbb
mov
in
cltd
movsl
rolb
imul
sahf
adc
movsb
test
mov
into
cmpb
inc
cmp
mov
call
mov
pop
out
mov
sub
pusha
jecxz
addr16
cmp
sub
jne
mov
lock
mov
pusha
int3
push
mov
jno
jecxz
test
sahf
outsw
fsubrl
add
xlat
loopne
xor
mov
decb
mov
pop
mov
cli
outsl
int3
mov
or
sbb
in
outsb
add
popa
stos
dec
inc
mov
cmp
cmp
xor
xor
aas
out
insb
fidivrl
jp
sub
pop
lea
push
push
lret
sahf
pop
fisttpll
and
lods
pop
push
inc
jb
sub
gs
mov
pop
outsb
jno
add
xor
cmp
loop
sbb
inc
int
inc
stc
test
mov
imul
jae
ret
add
arpl
fs
std
in
jae
adc
mov
clc
insb
push
pop
jb
lahf
mov
pop
push
lahf
mov
testb
or
outsl
insb
js
mov
push
ror
pushf
xor
push
je
xor
fsubrs
lcall
xchg
int3
push
fimull
cmc
mov
jne
out
adcb
lahf
dec
out
inc
shll
sub
int3
jnp
arpl
insb
dec
and
adc
or
push
ljmp
fistl
cmp
out
rcrl
pop
sub
rcl
add
push
cmp
lret
insl
mov
es
inc
ret
pop
insb
fst
xor
popa
mov
jg
mov
xor
lret
mov
mov
stos
add
out
push
aam
and
fimull
fdivr
ret
cmp
fs
stos
out
push
neg
inc
sub
push
popf
pusha
js
cld
shrl
stc
inc
mov
mov
push
ja
push
jno
and
mov
push
ljmp
movsl
sub
pop
push
lock
xor
dec
and
jmp
lds
push
pusha
mov
push
dec
iret
jmp
lahf
addr16
mov
add
scas
rdpmc
jp
es
fxch
push
mov
cs
pop
roll
pop
std
fsubrl
mov
mov
mov
imul
clc
scas
jle
lods
icebp
ret
or
adc
iret
shll
add
push
loop
mov
dec
xor
fstps
ret
xchg
fs
jb
pop
ret
fdivs
pop
lahf
jne
in
and
push
repz
sbb
mov
fidivrl
xor
ja
inc
notb
int
jg
jp
neg
es
jbe
mov
je
or
lock
in
mov
or
and
cli
jne
ret
gs
das
xor
fs
jbe
scas
mov
neg
lea
fadds
xchg
int3
repnz
enter
fisubs
lods
and
push
sub
in
xor
xor
inc
inc
subb
add
add
imulb
mov
cmp
pop
out
mov
jge
push
adc
mov
stos
test
or
push
mov
or
mov
stos
loope
sub
jle
lds
cmp
imul
mov
or
out
cmpsb
mov
jno
xor
or
subb
addr16
dec
cmpb
ret
adc
sbb
scas
test
insb
mov
jne
hlt
dec
out
or
jle
ja
sti
xchg
pop
jp
push
push
adc
int3
add
xchg
mov
push
repz
std
fisubl
aam
stos
bound
xchg
js
fcmovnb
dec
mov
or
cmp
fwait
bound
shl
fsubl
adc
cmp
fst
cmp
in
mov
test
mov
popa
inc
es
adc
shlb
inc
cld
sbb
pop
lods
cmpsb
cwtl
addr16
insb
into
insb
es
mov
clc
les
in
mov
mov
xlat
xchg
push
adc
mov
jno
xchg
lahf
dec
jle
lea
js
jb
iret
sub
rclb
mov
vpsllw
pushf
call
add
push
dec
jb
add
fwait
cmp
inc
outsl
popf
pushf
adc
sbb
sti
jmp
mov
outsb
sti
movsb
or
es
test
sub
shll
popa
inc
mov
pusha
clc
cld
lock
cltd
adc
cmc
aaa
dec
fisubrs
jmp
int
jp
outsl
push
in
out
shlb
jno
lcall
cli
test
jno
pop
push
xchg
into
sub
fnstsw
dec
push
fcomps
sti
cmp
clc
mov
icebp
lret
std
sub
cs
adcb
dec
cs
mov
pop
out
idivl
dec
xlat
jle
push
loop
dec
icebp
inc
push
cmpsl
imul
aas
mov
pushl
sbb
test
mov
sbb
sbb
xchg
pop
loopne
xor
test
cmp
in
add
adc
ficomps
loopne
test
and
pop
mov
pop
inc
cmovle
inc
icebp
add
pop
jbe
fidivrl
jnp
push
aam
push
call
xchg
push
outsl
adc
cmpsl
push
cmpsb
imul
sti
aas
mov
test
cmp
divb
or
dec
data16
push
push
test
lret
dec
push
cmc
cmpsl
loopne
mov
or
pop
cmpsl
lock
in
inc
scas
mov
cmp
inc
cmp
mov
pop
inc
dec
lcall
and
ds
mov
jge
cwtl
pop
mov
sti
mov
outsb
xor
out
mov
cmp
lret
flds
add
pop
inc
ret
jl
xorl
popa
das
out
sub
jno
ds
sbb
lods
cmp
push
and
imul
into
mov
in
adc
xchg
jb
adc
aaa
shrb
cmp
movsb
fbstp
int3
jmp
sub
mov
or
jmp
lahf
aaa
nop
and
pop
movsl
bound
xor
xchg
sub
and
out
mov
notl
testb
dec
push
pop
sbb
test
in
sub
in
out
mov
push
push
xorb
imul
pop
cmp
mov
mov
pop
out
loopne
lods
stc
mov
mov
cmp
mov
sbb
jmp
mov
sub
loopne
and
stc
xor
xor
mov
loope
mov
into
push
scas
push
stos
pop
mov
adc
sbb
push
push
adc
xor
rorl
dec
arpl
or
jge
sbb
cwtl
push
push
nop
into
xchg
in
jnp
or
sbb
xor
cld
push
mov
jl
out
add
jle
add
jb
dec
nopl
xor
pop
adc
sub
outsb
sbb
sub
dec
push
and
pop
mov
mov
ret
lcall
popf
push
adc
aam
ret
ret
xor
dec
cltd
repnz
jne
jecxz
imul
push
leave
fdivs
popf
sbb
or
andb
sbb
push
mov
jno
stc
in
call
stos
stos
rcrb
repnz
dec
pop
xchg
pop
dec
mov
out
jns
test
in
ljmp
imul
inc
adc
in
sbb
hlt
insl
cmp
mov
xchg
adc
mov
cmp
lret
adc
mov
add
xchg
ret
sbb
movsl
std
out
ret
push
pop
pop
or
das
sbb
scas
je
inc
loopne
push
into
dec
scas
sub
jmp
fnstsw
out
jl
scas
ret
iret
popa
inc
inc
movsl
sbb
cs
fildl
jno
das
insl
cmp
addr16
lea
add
pop
push
sub
mov
outsb
or
add
xchg
lods
mov
sahf
nop
xchg
adc
fdivrl
pop
shrb
cmp
rcr
sbb
pusha
mov
mov
sub
adcb
mov
mov
inc
and
test
inc
fiaddl
stos
sub
adc
iret
lea
xchg
cmp
cltd
mov
adcb
cli
and
xlat
loope
out
inc
add
xchg
cmp
test
mov
insb
pop
in
pop
mov
jne
mov
int3
push
movsb
sbb
sub
popf
flds
pop
es
mov
cmp
mov
movl
pop
push
in
sub
push
add
cmp
out
add
mov
and
fstpt
imul
lcall
dec
and
mov
testl
inc
pushl
fstps
and
push
push
push
popf
cs
ret
pop
test
or
test
out
xchg
lds
cwtl
dec
clc
or
mov
and
mov
xchg
fisttpl
arpl
inc
loope
js
mov
gs
loopne
rclb
dec
popf
es
push
in
xor
test
sbbl
cld
push
mov
xor
jns
pop
addr16
xor
dec
push
jbe
xchg
inc
push
mov
arpl
sub
mov
jl
cs
adc
mov
rcrl
in
jle
ss
lods
jo
jno
pop
inc
mov
dec
stos
push
and
inc
sbb
cmp
or
popa
lahf
add
xor
jo
pop
sub
inc
inc
ret
popf
mov
push
fcmovbe
dec
fwait
std
test
ret
lods
mov
ret
lods
das
sub
test
adc
add
sub
aam
iret
cltd
push
xlat
adc
push
jg
push
pop
mov
jne
stc
es
mov
repz
pop
bound
stc
and
cs
lcall
ss
xchg
cltd
or
adc
add
sub
xlat
push
jae
mov
gs
add
nop
daa
mov
mov
xchg
jbe
push
dec
xor
mov
movsb
pop
mov
jp
dec
mov
les
nop
adc
popa
mov
cs
cmp
add
xchg
push
dec
sub
push
int3
mov
inc
jmp
lods
jne
call
out
repnz
fdiv
ss
mov
inc
jmp
cmp
fcmovnu
mov
add
lods
jb
adc
into
mov
cmp
fidivs
fldcw
push
sbb
shll
xor
filds
icebp
xor
cmpsl
mov
or
repz
mov
stc
mov
hlt
mov
adcl
movsl
popf
stc
xorl
cmc
and
jle
movsl
adc
fisubl
or
cmp
push
mov
lret
test
pop
decl
mov
and
jle
mov
jmp
out
stos
in
loopne
in
jle
punpckhbw
add
nop
sbb
and
sub
sbb
sti
into
cmp
adc
js
xchg
and
pop
push
or
stos
mov
lods
xchg
xchg
stos
lock
push
out
push
gs
or
fwait
addr16
popa
test
nop
call
cmp
mov
jl
jmp
adc
imul
xchg
mov
jb
das
std
add
dec
xchg
loopne
inc
sub
jbe
cwtl
repnz
dec
mov
sbb
push
xchg
rorl
ret
dec
aad
pop
push
ret
cmp
repz
out
add
gs
mov
cmpl
insb
mov
mov
mov
push
mov
cmp
mov
jmp
mov
gs
enter
or
out
cmp
roll
add
sbb
push
daa
mov
fisubs
mov
pop
pop
sub
and
rclb
call
or
mov
loope
inc
cmp
mov
cmp
cli
aas
lret
imul
fstl
cmp
jg
pop
xor
movsb
shll
in
js
cwtl
filds
and
dec
cmpsb
mov
push
scas
mov
test
cmp
mov
mov
mov
sahf
sti
pop
test
nop
or
dec
sti
xor
cld
xchg
inc
icebp
stos
cmpsb
sub
cld
fbstp
fimuls
cmpsb
jne
mov
jecxz
push
mov
stc
out
jmp
cli
inc
in
shrb
int3
add
sbb
iret
mov
shll
add
xchg
loopne
push
out
mov
mov
scas
repnz
pop
adc
or
xchg
xchg
add
sti
add
cmp
jle
rep
push
cmpsl
add
dec
stc
inc
jne
fs
dec
jnp
mov
and
out
xchg
ja
and
shr
data16
mov
xchg
mov
mov
mov
jnp
imul
fsubrl
ret
das
stos
mov
or
push
call
mov
push
fisttpll
jne
adc
adc
out
daa
popa
das
xor
testb
pop
cld
xchg
dec
pop
scas
inc
rcrb
mov
xor
cmp
xor
ror
bound
and
data16
fs
shrl
ret
add
xchg
xor
mov
fldenv
gs
cmp
insb
xchg
dec
ss
push
cmp
test
loope
out
fmull
push
inc
and
rclb
inc
mov
and
loopne
cmpsb
cmc
fs
cmpsl
idiv
cld
pusha
xor
push
jg
sub
and
lds
dec
inc
in
mov
icebp
mov
les
out
int3
add
movsl
repnz
jno
outsl
xlat
or
daa
lcall
fs
dec
push
xchg
jo
fidivs
or
adc
addr16
addr16
in
addr16
and
clc
das
insb
icebp
push
add
fnsave
mov
cmp
pop
xor
aaa
push
jbe
push
shrb
add
nop
dec
icebp
xchg
call
push
std
xchg
xchg
data16
idivb
test
test
movsb
frstor
and
fnstsw
mull
or
jecxz
aam
jmp
outsb
sub
aad
pop
into
stos
and
sub
imul
jo
jmp
pop
sbb
add
aam
dec
imull
sbb
orb
jbe
dec
mov
adc
jp
and
mov
call
cmp
and
ret
jnp
jae
lea
ss
outsl
test
jge
leave
mov
pusha
mov
xchg
push
adc
push
mov
movsl
hlt
into
movsb
add
outsb
test
sbb
mov
push
pop
ljmp
xor
jl
mov
std
and
leave
xor
sbbl
cli
sub
inc
stc
rol
dec
jbe
xor
mov
lods
mov
mov
aad
test
cmp
fcoml
std
fdivrs
dec
and
lret
nop
ja
sti
test
out
sahf
movsb
xor
lret
cmp
lret
in
into
add
sbb
cmp
and
adc
leave
daa
and
mulb
mov
call
mov
cmpsb
xchg
push
xchg
cmp
scas
daa
es
sbb
outsl
test
aam
movsl
out
sar
dec
inc
cltd
lar
int3
push
add
jb
std
adc
lret
lods
lods
dec
das
jae
pop
iret
pop
lods
dec
in
xchg
imul
xchg
mov
xchg
sti
inc
jno
pop
stc
push
xchg
and
fcmove
xchg
jp
fcoms
xor
sti
dec
adc
aam
xchg
dec
int3
cltd
jge
lods
dec
arpl
imul
mov
sbb
dec
out
sub
inc
idivl
pop
rorb
push
xchg
loope
fdivrs
inc
add
stos
dec
std
sbb
lahf
out
mov
xor
cltd
mov
inc
push
mov
add
fcom
push
mov
les
mov
jle
fistl
or
adc
xlat
stc
shlb
lock
xchg
fsubl
mov
ss
std
mov
push
mov
xchg
mov
mov
xchg
push
cmpsb
push
jo
icebp
push
out
aam
push
mov
hlt
push
addr16
push
aaa
inc
loop
pop
mov
jnp
leave
xchg
mov
mov
aam
xchg
test
mov
outsb
sbbb
ja
pusha
xchg
mulb
and
jecxz
xchg
push
pop
icebp
and
fsubs
aas
jnp
dec
xor
jnp
clc
cmp
cmpsl
lock
cmpsb
xchg
pop
lea
jl
in
nop
mov
inc
pop
enter
movsb
jge
inc
rcrb
cmp
inc
ds
mov
pusha
jge
cmp
pop
sub
lcall
xchg
mov
cmp
mov
ss
movsl
iret
pop
in
fs
pop
mov
sub
mov
mov
ja
sub
adc
and
andl
pop
nop
cmp
inc
or
pop
adc
mov
mov
ds
adc
imul
jg
mov
mov
in
jecxz
dec
push
insl
int
cmp
cmc
pop
sbb
inc
pop
xor
in
cwtd
mov
stos
outsb
add
fcomps
rorl
lcall
repnz
pop
mov
cld
insb
mov
cmc
das
scas
xor
inc
movsl
cmp
cs
rcrl
es
sbb
into
lock
test
mov
cwtl
mov
adc
movsb
sub
add
cmp
lock
mov
loope
xorb
dec
in
jae
mov
imulb
xor
mov
aas
in
push
lds
push
mov
add
stos
loop
push
das
cmpsb
dec
push
adc
idivl
xchg
push
push
pop
clc
xchg
xchg
bound
add
add
sti
nop
mov
xchg
push
cld
add
add
fwait
sbb
dec
out
xor
testl
mov
sub
dec
jp
scas
xchg
sbb
xchg
test
int3
xchg
lret
and
jge
scas
adc
sbb
leave
cmp
push
pop
xlat
or
mov
cld
push
pop
ret
lcall
imul
daa
add
sarl
sbb
xor
rorl
or
add
popf
sbb
jne
js
stos
fists
das
push
cmp
and
daa
xchg
pop
pushf
orl
jno
push
push
dec
and
jl
scas
ljmp
bound
ja
cld
cmpsb
sbb
enter
cmp
enter
mov
popf
push
sahf
add
js
or
pop
inc
jbe
std
cli
sub
jmp
sbbb
loopne
mov
jns
lock
inc
lods
ret
jge
mov
loopne
and
xchg
leave
aad
jge
inc
les
aad
inc
int3
pop
stos
sub
out
pusha
repnz
jns
lcall
xorb
test
loopne
add
mov
ds
mov
xchg
or
mov
xchg
and
xchg
cmc
push
and
sahf
xor
repz
xor
add
cmc
and
mov
bound
jbe
lods
imul
test
cmpsl
xor
scas
mov
lret
fucomip
das
mov
cmc
dec
lcall
xchg
xchg
jbe
push
add
mov
mov
jno
stc
mov
ficompl
out
loopne
sbb
push
pop
pop
push
mov
stc
cmc
frstor
out
js
sbb
jmp
jecxz
fsubr
addb
sbb
jg
and
xor
mov
dec
aam
mov
xchg
mov
mov
and
jecxz
subl
xchg
fucomp
cld
int3
jle
pop
and
arpl
fwait
and
jle
mov
mov
adc
sub
sahf
mov
in
adc
insl
lcall
out
mov
imul
stos
fdivs
xor
bound
cmp
inc
lea
jp
push
inc
dec
jo
ljmp
loop
ljmp
jp
scas
xor
imul
add
iret
dec
fmul
in
aas
push
xor
popf
push
cmp
cmc
push
mov
data16
fnsave
test
jae
ficomps
sub
repnz
mov
jmp
xor
xlat
cmp
cs
in
dec
inc
push
push
adc
sub
mov
pop
ret
cmpsb
inc
int3
mov
test
sub
test
sbb
fildl
xchg
and
sbbb
lret
push
and
jle
jbe
dec
pop
loop
push
pop
movsb
push
fildl
int3
sbb
push
mov
es
fmuls
test
cld
xor
sub
jle
or
mov
inc
xchg
aas
pop
sub
push
shrb
pop
inc
xchg
cmpb
xor
test
leave
loop
mov
repz
jbe
popf
xchg
scas
fdivl
sarb
and
push
pop
push
jb
mov
ljmp
mov
mov
mov
mov
mov
addr16
cltd
jp
inc
pop
xchg
push
mov
outsb
jecxz
lods
cli
jns
lcall
cmpsb
and
mov
push
icebp
mov
jge
and
fs
ss
sub
addb
pop
sub
mov
test
sub
cmp
sbb
outsb
je
pop
sub
lahf
inc
aaa
icebp
jns
das
outsb
mov
xchg
test
in
jnp
out
movsb
roll
js
cmpsb
test
mov
dec
mov
or
mull
fistpl
mov
xchg
xchg
je
addr16
or
mov
bound
das
dec
dec
insl
cmc
enter
pop
shrb
xor
int
xor
add
movsl
mov
push
pop
dec
fwait
fwait
add
push
les
je
arpl
sti
push
ds
jnp
mov
mov
sub
or
enter
ficomps
xchg
cltd
lods
add
push
mov
xchg
call
lcall
add
or
jb
shl
mov
mov
in
pop
cltd
mov
or
pop
inc
daa
in
sahf
scas
fwait
gs
lret
push
or
jbe
jge
xchg
dec
jbe
mov
sbb
fisttpll
or
lret
push
xchg
popa
dec
test
push
dec
fcomps
mov
adcl
mov
adc
xor
popa
mov
add
mov
xor
pop
fs
xor
lods
cmp
mov
je
push
cmpsb
add
xor
sbbw
pop
adc
inc
mov
ss
cwtl
pop
in
xor
cmc
mov
int
imul
push
xor
in
dec
xor
jle
jge
fstpl
add
inc
add
das
fidivl
add
dec
sbb
enter
adc
jle
xchg
mov
loop
or
jne
scas
sbb
ja
xor
stos
in
jns
push
mov
in
out
and
cld
mov
bound
sub
inc
daa
mov
jge
dec
mov
int
sub
fiaddl
push
xor
xchg
lcall
lahf
shl
icebp
aad
jbe
in
pusha
jle
into
dec
pusha
dec
addr16
pop
daa
aad
icebp
mov
out
dec
outsl
push
jmp
xor
inc
push
sbb
inc
nop
or
sbb
pop
cli
into
and
jge
lods
in
jae
mov
lock
cmp
cs
rcll
adc
negl
test
jne
cltd
dec
popf
push
jnp
push
dec
jb
popa
int3
mov
fisttps
cmpsl
inc
and
inc
das
lret
add
and
imul
sbb
cmpsb
jle
sti
sub
adc
xchg
sbbb
pop
movsl
jl
out
out
xchg
push
pushf
pusha
mov
dec
sub
add
mov
add
ljmp
lea
lods
pop
stc
inc
inc
stos
pop
repz
sub
ljmp
mov
in
orb
aad
sti
sub
fs
test
arpl
testl
or
int3
inc
mov
xor
xor
mov
movsl
ss
push
ret
jno
out
dec
pop
fs
hlt
loopne,pt
aaa
lods
fcom
lea
clc
mulps
out
jmp
push
incb
mov
jo
rcrb
out
push
scas
push
jb
aas
sahf
jo
add
lods
jl
fcompl
dec
push
sbb
push
dec
icebp
lcall
mov
mov
push
push
push
in
icebp
sbb
ret
jno
mov
cmpsl
jns
sbb
mov
roll
lcall
push
xor
loopne
shlb
sbb
inc
in
jl
test
cmc
cmp
dec
mov
add
les
aam
popf
mov
mov
or
xchg
or
test
jne
or
bound
hlt
or
jecxz
adc
pop
adc
cmpsb
jo
or
cmp
ficomps
in
add
imul
mov
sub
pop
ja
mov
mov
insb
ret
adc
add
das
ret
lds
cld
sub
push
cld
jo
enter
mov
push
sbb
popf
aas
fimuls
mov
jo
int
mov
fimuls
cltd
xor
cmp
int
sub
mov
in
popa
test
rolb
lods
add
and
inc
push
stc
test
xor
gs
sbb
mov
mov
jl
jo
push
ret
xchg
and
outsb
adc
lods
add
push
adc
out
lods
or
shll
les
cmpsb
jne
jo
adcb
fsubrs
dec
xchg
decl
mov
mov
aam
jnp
xchg
jbe
adc
adc
clc
cmpsl
aas
cwtl
push
sbb
ljmp
fwait
lahf
popa
jo
jle
pop
fldenv
mov
mov
dec
xchg
dec
mov
jo
pop
fdivs
xchg
mov
dec
ret
fwait
sub
mov
fs
scas
xchg
stc
ja
push
gs
jae
adc
mov
adc
fiadds
ficoms
dec
xchg
fdivs
popf
adc
or
push
inc
das
sar
pop
inc
inc
lahf
enter
cmpsl
lahf
mov
jl
out
xchg
outsb
push
dec
stc
lahf
dec
mov
lds
pop
add
aad
aaa
orl
movb
sub
cmp
or
mov
push
pop
paddusb
fists
dec
cmp
xchg
scas
fsincos
jnp
ret
test
mov
mov
clc
std
lds
repnz
push
pop
lods
or
cmp
add
add
les
insb
aam
ljmp
movb
dec
mov
push
sbb
adc
push
add
lock
or
lock
fildl
adc
xor
jg
imul
fcmovnb
testb
nop
add
push
cmp
mov
sub
jp
push
mov
dec
andb
movsb
mov
sbb
mov
je
xchg
mov
sub
pop
fwait
movsl
stos
mov
fwait
sbb
push
test
andb
xchg
nop
fnstcw
jge
cmp
push
lcall
adc
andl
cmpsb
dec
mov
into
stos
push
dec
lock
test
shll
xchg
or
xchg
lods
shrl
popf
mov
shll
jg
cmp
loopne
mov
fisttps
adc
mov
loopne
clc
mov
adc
ss
mov
and
add
pop
xor
out
push
or
inc
ja
jns
fucomi
les
xlat
shll
jle
leave
push
jge
cs
push
int3
nop
cmp
sahf
out
jmp
repnz
mov
dec
ficoml
mov
mov
fisttpll
mov
or
sahf
cld
gs
jmp
or
stos
jmp
sahf
lds
cmp
test
rcll
pop
pop
add
shlb
lods
mov
stc
loope
aas
mov
dec
sub
and
lcall
mov
mov
test
movsb
es
cmp
lret
mov
dec
cmove
in
popf
cmp
enter
rcrl
outsb
lods
js
loop
loope
mov
aad
aam
or
sti
cmp
jne
and
cmp
fistl
push
lret
faddp
xchg
add
add
inc
or
inc
in
aad
ss
sub
jo
daa
lahf
loopne
adc
inc
out
ds
dec
enter
cs
dec
movsl
lahf
cmpl
add
mov
cmpsb
jbe
imul
fnstenv
cmc
out
dec
movsl
fidivs
inc
mov
arpl
push
addl
push
xchg
test
clc
es
or
lcall
cltd
mov
decl
sbb
jp
imul
sub
out
adc
and
sti
jne
stc
sbb
pop
pop
ficomps
cmp
mov
pop
pop
dec
imul
add
sbbl
out
je
jmp
jo
arpl
das
fistpl
sub
add
fwait
mov
push
and
pusha
aad
les
aas
add
or
mov
stc
sub
jnp
filds
add
dec
mov
push
inc
inc
rolb
lahf
mov
scas
std
pop
adc
jne
mov
mov
xchg
xchg
outsb
test
sti
sahf
inc
xchg
icebp
imul
xchg
mov
jg
pop
cmp
pop
mov
and
out
pop
roll
js
in
sub
xchg
xchg
sti
xor
push
cmp
mov
sarb
lock
clc
dec
das
dec
lea
and
dec
arpl
mov
mov
mov
mov
inc
push
jmp
inc
push
test
push
push
insb
sub
xchg
xlat
dec
cltd
lock
cmpsb
pop
enter
nop
or
inc
inc
arpl
xchg
outsb
fs
sub
xor
popf
or
call
sti
xchg
inc
mov
adc
jae
cmc
stos
mov
mov
into
push
pop
jmp
pop
es
icebp
sbb
dec
push
pushf
xor
sbb
in
in
xchg
mov
adc
sbb
cmp
pop
out
ret
mov
or
enter
adc
xor
hlt
mov
mov
clc
pop
pop
mov
cmp
pop
imul
divb
pop
mov
or
xchg
jb
movsb
roll
bnd
jl
push
cld
xor
inc
inc
int3
call
test
jnp
mov
orl
in
mov
mov
cmc
jnp
inc
pusha
cmovne
dec
ret
insb
sub
jge
jecxz
cmpl
push
sbb
pop
fbld
xor
scas
iret
insl
dec
lea
loop
push
je
jo
jne
pop
sbb
test
inc
cmpsb
dec
pop
mov
aam
add
adc
fidivrs
pop
xor
mov
push
fldln2
shlb
out
insb
cmpsb
cwtl
les
mov
and
inc
fdivr
lret
pop
mov
mov
dec
pop
dec
push
enter
or
lcall
mov
pop
inc
sub
shrl
inc
test
and
mov
mov
ficompl
sahf
loopne
sarb
jbe
insl
jg
popa
push
mul
js
fidivrl
mov
gs
pop
pushf
shl
add
mov
lea
sahf
imul
scas
testb
cli
and
gs
xchg
outsl
sub
in
lcall
inc
test
stos
das
cmp
test
xlat
scas
sub
int3
mov
mov
loopne
sbb
adc
outsl
in
ss
rcrl
out
into
out
and
fldcw
dec
or
cltd
sbbl
lock
mov
aad
inc
inc
dec
jp
mov
mov
adcl
lds
out
repnz
push
pop
or
stc
mov
jge
mov
addr16
mov
pop
jp
jp
pop
repnz
jg
xchg
cmc
adc
notb
fdivp
mov
cwtl
scas
rolb
push
insb
push
imul
stos
sbb
mov
pop
les
ja
int
or
push
lock
pop
jne
sbb
popa
dec
pop
sar
fmuls
sbb
pop
mov
insb
std
jae
sbb
das
inc
movsb
pushf
aaa
mov
mov
lock
mov
or
dec
test
dec
scas
xor
dec
repz
pop
mov
ret
push
adcl
inc
push
stos
cmp
add
jbe
test
or
sbb
push
cltd
push
les
idivl
jmp
repz
xchg
lock
movsb
xchg
subb
icebp
or
push
popf
mov
cmpsl
push
jmp
add
dec
sarb
or
out
imul
and
cmp
or
loop
nop
pop
rcrl
xchg
sub
and
lcall
push
out
sbb
xchg
cmp
mov
mov
jg
or
sub
mov
ljmp
add
dec
adc
xlat
push
outsl
mov
cmp
sbb
mov
pop
nop
mov
jle
sbb
mov
add
fld
sbb
jbe
imul
ret
pop
inc
notl
jl
add
add
xor
or
inc
sub
xchg
jne
out
mov
sub
imul
jmp
jg
or
push
dec
cmpsb
pop
loope
bound
fldl
addr16
adc
push
sub
movsl
rcrl
jnp
mov
xor
enter
or
mov
mov
jns
pop
imul
mov
daa
outsl
inc
dec
ret
cs
mov
out
test
xor
ljmp
loopne
cld
add
jle
cli
scas
xor
clc
scas
and
adc
pop
orb
add
repnz
or
or
and
leave
aaa
cmp
fisubl
jnp
xor
nop
gs
cmp
xchg
or
stos
cmp
shll
test
cs
push
push
jmp
test
jle
pop
and
call
pushf
xorb
imul
adc
sbb
pusha
loope
add
xchg
xchg
ficoms
pop
cmp
je
test
or
xchg
mov
insb
icebp
xchg
int3
mov
divb
cli
jnp
inc
sahf
inc
icebp
lods
fwait
pushf
adc
icebp
pop
jp
push
andb
out
pop
or
push
out
lret
popa
add
fdivr
arpl
adc
pop
mov
sbb
xchg
cmp
es
outsb
mov
mov
shll
pusha
dec
adc
sti
inc
pop
rcrb
pop
sub
fxrstor
mov
out
into
mov
inc
shll
inc
outsl
dec
xchg
in
das
dec
pop
or
push
repz
lret
push
pop
add
mov
or
mov
scas
lret
jae
jb
dec
dec
mov
jnp
mov
adc
sbb
nop
mov
sbb
popa
sbb
inc
add
sub
fnstcw
jg
cmp
addr16
sub
jnp
enter
push
fiadds
jns
loop
push
ljmp
ds
into
sub
xchg
jge
jl
int
out
lods
cmp
sub
sub
mov
das
mov
lods
push
popa
xchg
inc
mov
mov
movsb
lods
pop
ret
setl
popa
sahf
ja
nop
mov
pop
jne
inc
loop
cmp
mov
addr16
mov
in
and
in
push
lea
lret
mov
stos
pop
mov
call
ficomps
stos
push
xor
andl
shlb
cmpb
jb
faddp
or
xlat
xor
inc
js
jg
xadd
xchg
sub
inc
mov
popa
lea
xor
insb
pop
or
push
inc
and
cli
ss
insl
or
mov
and
inc
push
mov
lock
rorb
es
fs
jns
movsb
mov
lret
out
std
jns
and
dec
shlb
xchg
stos
jge
scas
fbld
mov
mov
and
stos
ret
jbe
lahf
fmul
loop
ja
clc
mov
lret
imul
sub
and
pop
clc
lret
sbb
mov
sub
cli
or
leave
push
fsubrl
ret
ret
scas
cltd
or
test
and
in
xor
fwait
pop
lcall
imul
mov
mov
push
push
sub
cld
jmp
add
in
lret
sarl
sbb
lods
xchg
push
notl
mov
pop
aam
or
cs
cmpl
mov
pop
xchg
jl
mov
xor
lea
cmp
sub
sub
orb
inc
sbb
adc
shl
jb
inc
sub
sti
mov
jp
pop
sbb
sti
xchg
or
stc
lods
movsb
ds
xchg
add
insb
push
dec
les
shl
loop
out
popa
jg
sub
adc
xchg
inc
insl
xchg
in
call
mov
push
and
loop
mov
pop
add
imul
sbbb
mov
dec
push
daa
pop
cmc
mov
movsl
data16
pushf
ja
xlat
jno
xor
adc
push
shll
and
adc
shl
mov
out
xchg
loop
mov
dec
mov
xor
add
pop
aad
test
mov
inc
subl
push
scas
pop
pushf
lret
jle
jmp
lret
ss
jns
jg
sbbb
sarl
jae
cmp
pop
or
add
cli
dec
repz
ja
dec
lea
sub
adc
in
das
xchg
inc
sub
iret
lcall
popa
push
sub
push
call
pop
pop
repnz
loopne
dec
mov
in
movsb
mov
jno
fwait
adc
sahf
mov
jbe
and
pushf
bnd
pop
dec
sti
mov
stc
aaa
imul
sti
push
pop
mov
mov
enter
xor
leave
cli
in
xchg
inc
filds
addl
fs
aas
sub
mov
mov
int
outsb
aad
or
es
enter
in
addr16
popf
imul
decb
xor
jmp
inc
cs
jg
lret
inc
je
orb
stos
pop
lahf
mov
cwtl
data16
mov
mov
sub
mov
out
inc
inc
out
dec
test
nop
dec
shrb
mov
cmp
gs
xlat
mov
jg
test
ret
pusha
ret
push
inc
aas
cli
push
sbb
mov
cmc
pushf
sbb
pushf
pcmpeqw
and
or
push
ret
add
jl
mov
sahf
dec
xlat
adc
rcl
push
in
mov
sti
pop
jno
shll
cmc
in
je
dec
xchg
inc
jl
es
mov
jp
xchg
enter
ret
into
inc
inc
ror
out
push
or
dec
dec
pop
xor
cmpsb
jp
push
mov
inc
add
arpl
call
sbb
sub
lcall
xor
daa
loopne
data16
notl
jl
rorb
fs
pop
dec
sub
xchg
fcomps
stc
daa
divl
test
push
test
cmp
dec
xchg
hlt
sarl
sbb
call
jmp
xlat
pop
jne
lock
or
loope
inc
pop
add
jecxz
divl
mov
adc
push
xor
jae
repz
rorb
mov
jb
cmp
and
pop
xor
pop
sbb
outsb
fisttpl
or
je
or
push
push
jb
adc
cwtl
add
pusha
arpl
aaa
mov
mov
lret
cmpsb
stos
cmp
mov
jp
adc
or
aad
fiadds
inc
mov
fstpl
hlt
sub
out
sti
sub
inc
pop
dec
or
pop
mov
push
sub
sbb
arpl
xor
bound
add
cmc
sbb
je
fwait
addl
daa
fdiv
mov
xlat
sahf
and
jno
xor
sbb
js
pop
pop
pop
xor
arpl
push
xchg
xchg
ja
arpl
aam
aad
jne
fisubs
inc
cmp
arpl
mov
nop
mov
cmp
jmp
loopne
and
jb
lahf
pop
shrb
pop
clc
daa
cmp
out
inc
jns
cld
inc
ffree
push
adc
pop
les
adc
shrb
xor
jb
or
enter
call
or
loop
repz
lcall
or
repnz
cmp
pop
aam
sbb
or
inc
rsqrtps
sbb
mov
xlat
inc
aaa
add
je
sbb
int
add
adcl
fld
std
repnz
loopne
cmc
fsubrp
outsl
cltd
xchg
mov
test
sub
or
aam
and
fsubrs
ret
lods
cmpsb
jnp
sub
and
xchg
pop
rcl
pushf
in
inc
or
mov
pop
jnp
jnp
add
shrl
icebp
xor
stos
dec
cmp
std
test
adc
add
dec
sub
movsb
add
adc
and
fnstsw
fwait
nop
shr
pop
test
loopne
ljmp
lods
pop
pop
and
jmp
ret
cmp
xor
rcrl
push
xchg
aam
rcr
and
leave
mov
dec
jmp
into
pushf
jp
dec
xchg
dec
and
fistps
push
scas
andl
data16
cmp
iret
inc
icebp
cmpsb
sub
jne
js
stos
adc
xor
outsb
pop
sub
or
pushf
sub
xchg
xor
fstpt
fidivs
outsl
sbb
cli
std
xchg
mov
xor
pop
mov
jle
movsl
dec
push
scas
push
fs
cs
and
nop
adc
xor
adc
sbb
or
cmp
xor
popa
and
call
mov
add
stos
leave
dec
lds
pop
or
stc
out
pop
out
jne
insl
adc
loop
fwait
mov
mov
push
add
cmpl
pop
nop
call
mov
inc
in
mov
inc
lret
xor
gs
in
cmpsb
and
imul
mov
hlt
and
xchg
jb
pop
xchg
mov
xchg
insl
in
cwtl
fcoms
fs
in
rcll
pcmpeqb
movsl
arpl
dec
xchg
jnp
stc
std
mov
push
es
ja
jle
fbstp
dec
or
lock
bound
mov
fbld
out
xchg
mov
psadbw
jge
mov
push
push
cltd
jecxz
mov
aaa
rclb
decb
inc
je
xor
test
test
adc
push
jbe
je
das
xor
sub
stos
aaa
xor
int3
jmp
cmp
shr
jmp
gs
pop
leave
jmp
jns
das
lret
inc
inc
mov
sub
gs
jmp
sbb
or
adc
sub
bound
cmp
fstl
push
or
jnp
and
pop
jb
cld
jge
mov
or
out
jecxz
sub
cld
or
jno
mov
pop
pop
push
popf
fisubs
push
ret
adc
into
jbe
mov
xchg
mov
fsubl
pop
out
xchg
push
mov
js
popf
mov
and
dec
lock
fisttpl
pop
xor
negl
mov
mov
je
mov
sbb
jae
in
push
push
enter
jns
cwtl
int
inc
rolb
mov
xor
or
mov
push
imul
lea
movsb
movsl
ffreep
out
sub
pop
shrl
push
mov
push
clc
push
popa
sbb
popf
aaa
out
fdivl
std
data16
dec
ds
popa
arpl
into
inc
adc
jp
hlt
add
cmp
adc
lods
ret
aam
into
add
jnp
inc
pop
add
pushf
jmp
imul
imull
outsb
cmp
mov
ror
xchg
xor
stc
mov
dec
orl
lcall
pop
scas
mov
jae
lret
out
inc
dec
es
in
push
xor
adc
out
sub
mov
mov
xchg
cmp
pop
xchg
and
cmc
xor
jl
nop
add
jg
pop
cmp
pop
sahf
sti
xorl
mov
pop
push
sbb
sub
pop
sbb
push
js
or
pop
mov
idivb
test
jae
push
inc
cs
xchg
pop
xchg
je
cltd
lock
leave
push
xchg
rorb
mov
mov
cmpsl
aad
stos
nop
pop
inc
insl
filds
xchg
loop
pushf
jle
cs
xchg
adc
add
inc
xchg
xor
mov
out
lcall
lods
dec
icebp
daa
mov
mov
mov
add
sbb
arpl
jg
sub
pusha
rcll
cltd
stc
and
xchg
inc
add
aad
test
or
lock
aad
clc
ds
sbb
popa
xchg
jae
sbb
push
fwait
push
mov
xchg
insl
and
sbb
xchg
das
shl
inc
test
repz
or
pop
mov
mov
pop
mov
push
or
pop
pop
negl
mov
shll
lods
test
dec
xchg
nop
iret
push
iret
jmp
jae,pt
jmp
inc
shlb
inc
aaa
lret
push
cld
sub
lea
mov
scas
adcb
scas
or
mov
mov
mov
ret
or
std
ficomps
mov
repnz
mov
push
push
aas
imul
xor
adc
mov
mov
lret
scas
pmulhw
xchg
jge
dec
push
sbb
dec
js
cli
cwtl
nop
popf
push
pop
outsl
mov
test
addr16
sti
mov
and
inc
xor
fisubrl
stos
sbb
mov
sbb
lcall
sub
xor
jno
fwait
mov
or
dec
sbb
in
lcall
add
rcrb
out
mov
push
sbb
ret
into
adc
xchg
scas
push
cmpsl
adc
pop
pop
cmp
xor
xor
inc
ss
cmp
dec
fs
out
jb
xchg
xchg
ret
loopne
xchg
test
adc
loope
imul
and
mov
jmp
or
push
mov
mov
icebp
cmp
dec
testl
sti
insb
add
mov
adc
or
fwait
inc
sbb
movzbl
xchg
mov
mov
pusha
push
dec
mov
mov
test
mov
dec
push
cmpsb
mov
gs
sbb
or
inc
mov
xor
rcrb
rcrl
mov
test
shl
dec
push
jbe
cltd
fmuls
js
and
lds
pop
jmp
pusha
sbbl
jmp
add
jnp
adc
add
lret
adc
lret
add
arpl
sbb
xor
mov
cli
push
mov
sti
dec
inc
push
fisubrs
push
test
orl
jnp
mov
out
ret
push
imul
fcomp
shlb
fstp
scas
lret
jecxz
imul
lea
add
xor
bound
mov
mov
les
mov
push
mov
mov
imul
ret
cmpsl
gs
stos
mov
repz
icebp
dec
inc
mov
push
testl
dec
pop
mov
shrb
xchg
cmp
in
ljmp
push
push
xchg
enter
ret
in
and
inc
fdivrp
and
fbld
in
mov
push
dec
inc
cmp
aad
sbb
jnp
or
and
mov
fs
pop
sbbb
jg
fisubrs
mov
mov
icebp
sti
test
test
inc
and
inc
jo
not
push
faddl
jmp
xorb
sub
dec
pop
inc
push
xchg
movsl
cs
pop
scas
aaa
add
sub
mov
ret
xor
sti
push
sbb
sbb
jnp
inc
jno
pop
cmc
pop
or
jge
sti
xchg
testl
dec
bound
mov
xor
aam
lods
sbb
or
imul
xchg
jo
push
pop
lock
aas
sti
cli
das
xor
fisttps
fidivrl
les
xchg
push
rclw
stos
sbb
lahf
pop
cmp
das
clc
out
cmp
int
cmp
bound
jmp
add
test
mov
mov
lret
xor
sub
jmp
in
pop
or
xor
shll
in
mov
mov
popa
xchg
cld
addr16
fmull
and
mov
add
pop
aam
cmp
inc
cmp
dec
add
ja
pop
sub
jne
push
out
sub
sbb
inc
or
outsb
fcomi
jmp
push
mov
or
or
jne
jge
pop
sbb
out
xchg
imul
or
or
mov
jecxz
rolb
push
hlt
rcr
popa
cld
adc
pop
repnz
push
std
push
mov
add
fisubrl
jmp
insl
je
jns
test
rcr
pushf
push
mov
xchg
or
sti
imul
leave
aaa
insb
push
enter
jno
jo
or
sti
ret
xchg
subb
push
cmp
stos
loopne
shlb
cmp
mov
je
std
loope
mov
xor
push
mov
push
test
xor
xor
and
cmp
fwait
or
xchg
jno
scas
cmp
out
push
mov
inc
inc
xor
add
jno
mov
fldt
out
mov
xor
ss
jb,pn
adc
fs
mov
xchg
ret
test
fisttpll
mov
mov
mov
ret
lcall
sbb
xchg
rcr
cmp
pusha
fistl
idivb
std
inc
ret
or
lret
sub
test
xchg
ret
enter
sahf
lret
roll
inc
fidivs
fcos
pop
push
push
push
insl
insl
push
or
or
hlt
mov
lds
xor
out
cld
loop
xor
mov
mov
out
das
idivl
gs
movsl
mov
xchg
push
aas
sarb
jmp
adc
lcall
stos
push
decb
mul
out
loope
pop
dec
pop
mov
xor
adc
lret
addb
in
sbb
nop
jle
inc
push
in
jbe
lahf
pop
mov
add
aam
or
jp
loopne
dec
xchg
loope
push
adc
enter
mov
inc
mov
mov
lret
mov
push
es
jecxz
add
lock
inc
aaa
lock
dec
gs
mov
or
mov
pushf
in
cmp
addl
mov
nop
add
outsl
adc
dec
and
mov
mov
jb
in
hlt
mov
div
sub
bound
shl
inc
adc
ljmp
xchg
scas
testb
rcrl
xor
loope
sub
cmp
jle
mov
xchg
pop
aad
push
adc
fsubrs
add
cmp
pop
aaa
movsb
ret
movb
je
fmuls
xchg
and
adc
adc
and
es
das
pop
dec
cmpb
push
adc
bound
mov
or
shrb
ljmp
and
mov
xchg
jae
xchg
push
mov
popa
mov
jae
and
mov
lock
addb
cli
xchg
lods
inc
jmp
cmp
loope
cwtl
fdivs
add
fwait
mov
dec
pop
ret
sub
mov
dec
pop
xor
vpmacssww
adc
lcall
fidivs
xchg
inc
aam
insl
inc
jne
add
cld
mov
jo
jl
pop
sbb
inc
jecxz
mov
popa
inc
fmull
dec
fs
cmpsl
in
loope
rclb
clc
lcall
sub
insl
lds
sbb
pop
addr16
inc
pop
mov
ljmp
ror
mov
inc
stos
rcrb
add
jmp
and
sbb
jmp
pusha
jmp
std
loope
sub
fneni(8087
mov
inc
je
std
insl
push
push
jb
leave
mov
mov
push
in
xchg
sbb
lods
add
pop
lods
mov
dec
int
or
mov
jecxz
aas
adc
test
popa
inc
inc
int3
popf
imul
xlat
out
sub
negl
decl
cmpsl
xor
mov
into
fwait
push
jmp
cwtl
mov
pop
test
outsl
add
sub
mov
mov
jmp
ret
or
mov
ja
push
mov
pop
and
dec
or
cmp
sbb
adc
jae
inc
sbb
and
test
rclb
xchg
leave
les
jg
or
mov
dec
loopne
mov
mov
aaa
lahf
jg
dec
adc
lods
cwtl
pop
push
xchg
jbe,pt
push
push
pop
loopne
int3
aad
pop
jne
cmpsl
mov
mov
dec
mov
mov
xchg
jbe
ja
push
call
cmp
mov
lods
mov
rcl
rcrb
gs
sub
adc
idivl
icebp
pushf
cmp
popf
hlt
and
imull
xchg
xor
nop
add
sar
pop
or
mov
push
push
cmpsb
pop
jns
imul
fmulp
mov
mov
lods
cmpsb
add
mov
aaa
push
add
or
cmp
stc
test
mov
xchg
xchg
outsl
xor
outsb
inc
jbe
out
in
jp
pop
cmp
andb
push
and
inc
mov
push
inc
jo
imul
sub
push
out
adc
loop
repnz
pop
sbb
lcall
dec
jns
aad
mov
add
test
jo
rclb
xor
aas
dec
sahf
xor
fsubl
pushf
leave
lods
jo
aam
pop
jl
pop
mov
mov
and
incb
mov
fdivl
fs
scas
outsl
push
or
enter
test
dec
fs
inc
loopne
movsl
daa
loopne
jb
mov
mov
rcll
scas
cmp
mov
test
inc
adc
aam
lea
inc
sbb
adc
sbb
movsb
pop
movsl
icebp
jge
in
fwait
popfw
push
rolb
lcall
jp
lods
sub
inc
xchg
cmp
ljmp
ret
mov
js
daa
inc
mov
dec
lea
adc
pusha
mov
out
cld
push
xchg
fnstsw
mov
test
lods
inc
call
pusha
cltd
mov
push
lock
or
lea
jno,pn
test
cmp
loope
popf
cmp
stos
pop
mov
pop
lea
enter
dec
scas
push
ret
jl
dec
in
mov
out
in
call
mov
push
xchg
jne
cld
lret
xchg
std
out
push
enter
test
add
sbb
xor
ss
mov
sbb
scas
xor
addr16
mov
xor
mov
iret
fadds
pop
pop
cmpb
jle
xchg
iret
pop
add
lcall
dec
push
jae
cmp
jp
outsb
imul
adc
mov
or
jb
out
fildll
jle
dec
and
in
push
stos
jle
aaa
cs
mov
movsb
enter
mov
int3
loopne
cmp
jecxz
repnz
mov
jo
cmc
jmp
out
outsl
mov
push
dec
sub
and
mov
daa
cmp
xchg
sub
mov
mov
rolb
mov
and
lret
ss
pop
pop
cmp
xchg
pop
mov
daa
inc
das
stos
mov
push
lret
fs
jns
or
mov
pop
insb
sbb
push
fimuls
push
popf
out
cmp
mov
movsb
push
xor
pop
jno
out
push
jne
lcall
push
in
js
iret
repz
sub
outsb
pop
adcl
sub
xchg
push
rorb
stc
push
or
int3
add
mov
divb
lcall
jo
or
cmp
xchg
push
jno
pop
call
into
xor
mov
jecxz
mov
into
xor
jo
mov
out
fcmovnb
arpl
ret
loop
scas
sub
inc
jb
sbb
and
xchg
jnp
sbb
cmp
int
push
fsubrs
cwtl
std
mov
test
fsubr
call
xchg
pop
sub
fmul
fistpll
xchg
push
mov
shlb
in
jno
and
jb
fs
dec
loope
jle
jae
ds
call
inc
data16
arpl
dec
nopl
sub
cmpsl
mov
mov
adc
ret
jg
xchg
inc
mov
xlat
adcb
push
add
mov
lds
or
mov
leave
xchg
jmp
push
mov
inc
xor
ret
fisubrl
lods
xchg
scas
mov
inc
addl
inc
mov
jp
dec
jns
jne
inc
arpl
push
mov
pop
repz
mov
jp
cmpsl
test
stos
imul
ficompl
xchg
maskmovq
idivl
inc
sub
jle
sub
mov
daa
and
ja
or
jmp
sub
ret
add
mov
jl
mov
jbe
or
cld
pop
dec
sbb
mov
dec
je
and
jp
xchg
shrl
cmp
sub
mov
jae
ja
lcall
cmp
pop
int
dec
scas
xlat
mov
mov
fildll
mov
push
call
stos
dec
mov
nop
cmc
add
or
insl
pop
and
mov
rolb
mov
js
ficompl
adc
adc
mov
je
out
jge
pop
roll
or
rorb
subb
insb
pop
mov
out
add
xchg
push
push
cmp
test
mov
push
mov
stos
loope
rcll
decl
push
xchg
daa
pop
mov
iret
mov
or
ficomps
inc
cmp
xchg
xlat
mov
ja
add
fcmovne
movsb
insb
stc
icebp
or
fsubs
in
dec
mov
mov
sbb
ljmp
enter
cmp
int3
test
das
adc
jg
xlat
or
scas
repz
xchg
dec
inc
cmp
pusha
mov
xlat
jbe
pushf
dec
icebp
je
popf
jb
push
lock
and
xor
cmp
das
iret
clc
stos
push
and
cmpsl
mov
aad
lret
jb
pop
jnp
vpsrld
mov
hlt
lcall
out
push
mov
and
jp
lds
xor
sbb
xchg
cmp
jns
pop
aaa
shll
repnz
cmpsl
insb
cmp
data16
xor
xor
out
or
into
add
pop
jge
daa
mov
daa
cmc
sbb
inc
icebp
sub
test
rcrl
icebp
dec
fwait
add
lret
insl
sub
scas
call
mov
jne
test
fnsave
push
or
dec
call
pop
xor
sub
lods
adc
pop
enter
add
fisubrs
cmp
or
pop
jne
ret
mov
cmp
ret
aad
xchg
nop
pop
and
or
fdivl
imul
mov
xor
and
mov
mov
cs
in
cmp
test
aaa
insb
or
fstpl
daa
sub
or
ljmp
sub
ja
mov
sbb
imul
in
cmc
dec
mov
sbb
test
pusha
jbe
xchg
xchg
sub
leave
sub
cmp
loopne
not
ss
mov
pop
testb
mov
hlt
inc
pusha
insl
outsb
cmp
jnp
mov
push
repnz
and
xchg
in
sbb
cmp
mov
arpl
inc
rolb
sub
das
shlb
dec
pop
sahf
clc
xor
sbb
int
adc
shlb
dec
mov
mov
fisubs
mov
dec
mov
push
gs
ret
dec
mov
movb
movq
xchg
xor
lahf
addr16
sbb
push
mov
or
adc
add
push
movsl
aad
loop
call
ljmp
out
pop
pop
rcrl
sub
mov
xchg
loopne
sti
add
in
xchg
pushf
in
dec
push
ret
xor
std
or
mov
inc
mov
mov
fadds
fdivrl
push
and
fidivl
rcrl
inc
sahf
push
fwait
dec
je
std
jae
jne,pn
out
repnz
sub
bound
sub
mov
iret
ljmp
push
and
xor
daa
mov
dec
pop
into
and
lds
test
sub
in
mov
push
xchg
mov
ss
das
mov
fstl
andb
xor
cli
pop
hlt
mov
les
icebp
jns
leave
xor
into
push
ljmp
push
mov
mov
retw
into
fsub
xor
lock
inc
mov
notl
xor
push
add
dec
xchg
sarl
bound
inc
or
lods
dec
fisubrs
xor
nop
fsubs
mov
and
xchg
in
push
fnstcw
loope
dec
call
and
scas
xchg
pop
fwait
dec
mov
cmpb
add
movsl
mov
jb
push
ljmp
push
ljmp
dec
xorl
inc
pop
test
mov
and
call
xor
jo
shl
xchg
cmp
icebp
lods
cli
mov
add
aas
jnp
insb
ds
cmpps
sub
inc
stos
out
mov
sbb
das
inc
push
lods
inc
jne
mov
adc
shrl
cmp
push
rcr
sub
and
orb
mov
adc
repz
fmuls
das
sub
mov
je
push
and
jb
int
pop
insb
fwait
xor
cmpsb
ss
xchg
sub
jge
xchg
inc
xchg
in
pop
or
sti
jb
leave
jmp
imul
or
cmp
or
scas
lret
ljmp
popf
aas
daa
push
lock
mov
pop
mov
xchg
or
adc
xchg
lret
jmp
lock
pop
xchg
add
pop
fadds
jb
lahf
jne
je
xchg
test
in
mov
ret
icebp
pop
arpl
je
jecxz
out
jo
jge
mov
xlat
sbb
lock
add
jno
jle
dec
cmp
jns
imul
sbb
push
addb
andb
sbb
sbb
cmpsb
add
jmp
popa
cmp
mov
mov
mov
aas
insb
hlt
repnz
mov
push
sub
sbb
jl
mov
add
sbb
and
popf
pop
in
or
xchg
add
aam
fldt
pop
pop
movsb
inc
and
pop
sub
stos
adc
pop
mov
adc
mov
icebp
mov
setno
imul
add
lea
jecxz
cmc
roll
mov
popf
clc
inc
scas
fildl
cmp
in
xor
xchg
icebp
add
add
mov
xor
pop
loope
imul
xchg
sub
clc
inc
imul
out
imul
sarl
push
aas
mov
inc
lret
adc
cmp
jl
inc
fmulp
loop
jbe
pop
jnp
mulb
rcrl
pop
or
jns
sub
mov
xor
mov
push
xchg
mov
out
dec
mov
int3
int3
hlt
sbb
jo
nop
mov
cmpsl
cmc
mov
inc
inc
in
scas
aaa
ficomps
push
les
dec
jmp
imul
sahf
pop
aad
cs
out
mov
out
jle
stos
into
jecxz
lea
test
scas
pop
push
lds
imulb
sbb
out
into
insl
insb
push
loope
test
call
clc
jecxz
sub
inc
pop
mov
jnp
adc
add
mov
inc
scas
inc
cmpsl
ljmp
iret
insl
sub
pop
inc
in
aas
bound
pop
cld
data16
push
adc
outsb
jl
mov
in
sub
out
pop
mov
aaa
inc
das
rep
cwtl
mov
sbb
scas
dec
notb
push
or
pop
mov
imul
or
es
pop
cli
stos
lods
ret
dec
and
jno
mov
mov
jge
mov
inc
scas
mov
dec
idiv
in
rcl
mov
push
cmp
add
jmp
or
cltd
insl
or
rorl
cmp
adc
aam
adcl
sub
jnp
and
dec
por
stc
xchg
repnz
mov
test
ret
sbb
pop
outsb
scas
cwtl
outsb
ss
dec
sahf
iret
lods
int
test
movsb
mov
stc
adc
add
adc
mov
mov
or
jns
iret
pop
jns
scas
inc
xchg
clc
dec
jl
fmull
or
xchg
adc
aam
fcoml
popa
lea
call
daa
jge
mov
mov
ds
sbb
xchg
xchg
aam
jb
mov
cmpsb
dec
jle
hlt
in
icebp
cltd
orl
loope
ret
in
aaa
loop
lods
xor
icebp
mov
xor
std
loope
out
rcll
insb
jmp
cmpsl
pop
push
cli
aam
pop
xchg
cmp
sbb
and
pop
ljmp
sub
mov
ret
xchg
push
gs
shll
push
xchg
adc
imul
shrb
sub
xor
and
addb
sub
jb,pt
add
or
jge
cs
fstl
fiadds
xchg
fcoml
adc
lcall
xlat
pop
or
and
push
jge
mov
loopne
fcoms
dec
push
sub
push
testl
cmpsb
mov
pop
in
mov
dec
sub
imulb
stos
adc
add
jecxz
push
call
mov
fiadds
shlb
out
loop
insb
pop
std
mov
mov
addr16
lret
sub
addr16
push
dec
or
xchg
xchg
cmp
sub
or
push
inc
hlt
jge
mov
scas
adc
cltd
xchg
dec
xor
xchg
and
xchg
insb
fsubrl
mov
test
daa
inc
clc
pop
sub
dec
stc
rorb
arpl
aaa
out
xorl
enter
jnp
mov
lret
push
push
lds
flds
pop
and
lahf
xchg
cld
jmp
ret
popf
fimuls
dec
and
push
lcall
ret
and
enter
movsb
pop
lods
arpl
xchg
cmp
enter
decl
push
dec
inc
mov
dec
sbbb
pop
push
iret
pop
out
loope
xchg
inc
out
pop
lret
into
faddl
fwait
xor
loop
and
mov
jg
or
cmc
in
pop
pop
out
cld
icebp
mov
inc
ficoml
mov
cltd
rorb
in
fstps
flds
lods
push
cmp
cwtl
sub
mov
pop
push
lahf
aad
mov
or
ss
xor
dec
insl
jnp
mov
jae
rcrb
popf
lahf
ret
mov
sub
rol
ds
mov
lcall
cmp
call
and
xor
inc
das
mov
and
mov
cmpsb
lret
dec
movsb
mov
stos
sub
dec
sbb
mov
movsb
mov
fdivrl
ficoms
sub
call
pusha
pushf
and
sbb
fimull
dec
into
ljmp
data16
inc
in
add
sti
jmp
mov
dec
push
and
jnp
sub
push
and
push
dec
daa
pop
push
data16
xchg
push
into
jle
or
repnz
mov
inc
nop
xchg
in
cmpsb
or
movsb
ficoms
pop
test
bound
es
cmp
outsl
jle
out
jmp
add
jp
xchg
data16
mov
dec
and
mov
enter
dec
loop
pop
push
outsb
inc
add
sar
imul
add
mov
nop
stos
cmp
push
loopne
nop
xor
mov
sbb
mov
pop
jl
in
jl
and
movsb
add
int
pop
fsts
jmp
lret
imul
push
mov
pop
dec
dec
push
pop
or
jl
dec
mov
jmp
cmc
mov
jne
in
inc
stos
xchg
mov
shlb
sub
mov
jp
or
daa
xor
mov
pop
enter
inc
iret
popa
outsb
les
pop
push
imul
int
and
jp
xchg
clc
loopne
lods
xchg
es
das
rorl
xchg
mov
jmp
adc
loope
sbb
sbb
lcall
jp
das
orb
pop
add
cli
lds
enter
sub
popf
sub
mov
pop
daa
cmpsb
xchg
push
test
or
shlb
add
jnp
push
pop
test
cmc
sub
inc
push
in
jae
iret
les
or
outsl
dec
add
add
mov
xchg
fwait
pop
pop
jns
jmp
scas
sub
add
in
imul
mov
inc
fxch
movsb
or
pop
jns
movhps
mov
cmp
sbb
inc
test
in
hlt
or
push
or
xor
add
ljmp
xchg
pop
adc
shrb
arpl
rcrl
roll
sub
jle
dec
xchg
ret
repz
mov
xor
or
aad
mov
arpl
inc
inc
push
lods
sarb
jl
mov
dec
fisubs
hlt
cwtl
and
adc
pop
mov
mov
shrl
adc
xchg
gs
pop
ficoms
ljmp
lea
imul
movsb
xor
ss
mulb
adc
fsts
mov
lea
xor
dec
xchg
inc
push
mov
push
cmc
fyl2xp1
mov
dec
cld
clc
ror
std
rcrl
jns
jno
push
fsubl
movsl
pop
xchg
sbb
in
add
popa
xchg
jp
test
in
adc
push
std
sub
adcb
pop
les
sahf
dec
ljmp
xor
rsm
test
cmp
into
ret
fldenv
xchg
fstpt
mov
sarl
pop
lcall
das
in
notl
out
add
cmp
popa
fisttpll
cmp
cmp
push
sbb
pop
fucomi
mov
stc
inc
xchg
pop
push
mull
fiadds
hlt
test
insl
adc
aam
test
and
repz
xchg
cmp
xchg
cmp
sbb
es
in
jb
jbe
inc
popl
les
adc
adc
mov
cmp
inc
adc
mov
or
pop
sbb
rcrl
insb
adc
jo
sub
ja
out
xor
fwait
out
inc
pop
sub
pop
test
sbb
sbbb
lock
sbb
sub
pop
aas
cmp
sub
imul
xor
outsl
nop
dec
fsubrs
aas
call
ljmp
pop
xor
shll
xor
enter
pop
or
adc
push
fnstcw
push
sub
mov
sub
mov
pop
mov
cmp
push
lea
bound
sbb
sub
addb
mov
mov
adc
mov
mov
jbe
and
iret
orb
mov
mov
in
xchg
mov
mov
dec
mov
sbb
lcall
int3
cmp
es
mov
lcall
jmp
cmpsl
push
or
dec
loope
pop
push
cwtl
sub
mulb
inc
jle
faddl
cmp
movsl
jg
int3
into
pop
testl
add
daa
mov
out
adc
and
daa
sti
lcall
imul
loope
sbb
rcrb
jmp
in
inc
popa
xchg
push
data16
adcb
xchg
add
inc
add
negl
movsb
push
mov
mov
clc
xchg
lret
inc
jl
push
push
mov
jnp
in
fwait
lods
add
jmp
push
popf
bound
jbe
push
fs
mov
sub
sbb
sub
add
insb
in
pop
les
mov
cmpsl
fiadds
outsl
cmp
aad
das
push
shl
xchg
push
fisubl
xchg
in
cmp
jno
fdivl
xchg
test
mov
mov
sbb
or
add
cmp
dec
aas
xlat
xchg
jno
push
test
mov
nop
repnz
add
lret
mov
add
lahf
movsb
sbb
xchg
or
jge
xchg
sbb
xchg
inc
inc
xor
insl
xor
sub
ret
adc
andb
lods
int3
push
mov
lods
mov
aad
icebp
icebp
clc
cli
out
add
xchg
outsb
scas
movsl
adc
pusha
loope
pop
push
nop
pusha
sbb
mov
in
mov
cmpsb
mov
popa
leave
pop
stos
jae
cmp
sub
pusha
mov
xor
push
js
or
test
cmp
test
cli
xor
jp
decb
sub
inc
xchg
cmp
subl
ret
cmc
orb
mov
mov
lea
or
jmp
xchg
or
subb
dec
sarb
das
inc
pop
enter
pushf
mov
dec
mov
jb
and
and
cmp
nop
in
sbbb
out
lahf
xor
imul
mov
jp
or
adc
fnclex
add
rorb
decl
jno
loop
ss
xchg
push
inc
cmpsb
loop
mov
loop
out
sbb
lret
aaa
xchg
jge
mov
popf
fcompl
je
pop
dec
sbb
cmp
and
or
xor
mov
cmp
gs
or
add
adc
pop
hlt
aam
in
bound
addb
je
jne
sbb
sub
fiadds
in
ss
gs
ss
das
xor
stos
xlat
add
lret
subl
inc
lods
mov
stos
sub
dec
inc
daa
push
pop
daa
xor
mov
jae
mov
call
jg
pop
rol
sahf
xor
outsl
mov
gs
inc
fildll
push
push
fwait
icebp
cwtl
xor
pop
xor
push
xchg
iret
shl
push
fsubl
jae
adc
insl
xor
out
popf
adc
ret
sub
sbb
out
xchg
pop
es
or
adc
fisttps
popa
lds
cmc
icebp
jb
or
and
push
andps
cmp
and
mov
leave
pop
mov
shlb
inc
shlb
push
push
dec
pushf
ljmp
rorl
pop
and
jnp
loopne
dec
sbb
inc
aas
les
imull
sahf
jle
push
dec
dec
add
das
xchg
ss
scas
hlt
cmp
lods
lds
jp
xchg
mov
push
aaa
push
adc
push
stc
inc
cmp
and
push
lcall
inc
or
add
add
inc
out
cs
imul
pop
divl
psubb
pop
fcompl
add
pop
or
fildl
aad
jmp
xchg
cmpb
in
xor
icebp
adc
popa
jae
popf
nop
xchg
add
pop
lea
mov
addr16
nop
cmp
or
aas
popa
sub
out
mov
ret
cmc
pop
cmp
push
or
and
sbb
add
mov
add
mov
cwtl
loop
loopne
iret
ss
fisubl
inc
ds
in
jp
and
fadds
hlt
fwait
and
dec
mov
or
rol
inc
aas
xchg
call
fstpt
push
jb
mov
inc
stos
jno
jmp
bound
out
aas
jbe
mov
std
inc
xchg
lds
push
mov
sbb
jno
jb
cmpsl
repz
or
dec
insl
cmpl
cmpsl
orb
hlt
test
adc
psrad
or
dec
jae
daa
nop
mov
xchg
xchg
sub
and
mov
pop
jmp
fistps
pop
das
dec
and
dec
jae
mov
andb
fisubl
pop
stc
lret
mov
scas
icebp
sub
jp
jge
push
popf
mov
inc
imul
push
aam
mov
es
icebp
jg
jg
cmp
fcompl
gs
sbb
add
inc
push
test
adc
xor
lahf
in
lret
out
nop
gs
xchg
mov
xor
sbb
out
ljmp
fists
lret
xchg
push
and
mov
sti
push
aas
xchg
inc
pop
cmp
and
mov
int3
ret
xchg
mov
push
mov
jmp
or
stos
cs
aam
clc
jl
push
out
rcrb
mov
push
cmpb
or
lea
mov
jecxz
popa
addr16
imul
lea
dec
ficoml
stos
iret
mov
dec
out
fstpt
hlt
fsub
jnp
jno
lret
loopne
bound
mov
icebp
ror
aaa
scas
inc
adc
movsl
outsb
mov
scas
iret
adc
jae
mov
leave
cmpsl
pop
xor
stos
leave
adc
insb
dec
gs
fidivrl
cwtl
enter
in
and
mov
fldcw
mov
pop
or
xor
mov
xchg
rcr
inc
xor
xor
outsb
pop
xor
xor
jp
filds
or
push
cld
cmp
clc
inc
push
adc
cmpsb
test
push
orb
ss
and
in
or
push
lds
jno
into
inc
test
lea
negb
pop
cmp
lds
add
imul
or
sub
push
mov
shr
or
fwait
sub
dec
dec
mov
and
inc
mov
mov
enter
sti
dec
cmp
faddp
pop
xchg
ljmp
xor
loopne
jns
lret
adc
dec
fwait
sub
int
popf
loopne
out
add
addr16
inc
jne
jl
inc
int
push
fimuls
and
pop
aaa
add
lcall
sbb
loope
ljmp
out
fmull
ret
and
inc
or
in
rorb
mov
imul
add
adc
mov
icebp
call
jb
cs
repnz
orb
cmp
pop
inc
clc
shr
sbb
cld
loope
enter
lock
dec
leave
and
pop
gs
push
das
in
out
mov
jge
add
je
outsl
pop
fists
aam
test
dec
mov
pushf
nop
hlt
sbb
push
gs
xor
xchg
in
push
in
clc
lods
cmpsl
and
movl
xchg
gs
cmpsl
inc
inc
pop
adc
or
inc
jmp
pop
pushf
add
push
aad
sbb
adc
pop
pushf
sub
lods
stos
adc
loopne
lret
adc
cwtl
jle
jp
inc
xchg
lret
out
rclb
mov
fcompl
cmpsb
adc
add
call
pop
xlat
cmpsl
sub
pushf
sbb
arpl
fsubrl
sub
sbb
cmp
pop
pushf
mov
mov
mov
jmp
test
pop
aam
xchg
sbb
dec
and
ds
das
sub
rcr
jmp
xor
cmp
push
cmp
test
fisttpll
xchg
ret
lea
out
jecxz
rcrl
rcrb
mov
lret
and
pop
xorl
lods
cmc
aas
push
jnp
jbe
lcall
repnz
fcmovnu
scas
popf
and
mov
jmp
pushf
loop
mov
enter
clc
pop
lds
enter
cmp
into
xchg
sbb
push
inc
fndisi(8087
mov
loope
and
out
jbe
push
jnp
lea
pushf
jno
scas
aam
adc
push
push
stos
je
jp
std
jge
mov
adc
xchg
jns
xchg
lds
adc
xlat
mov
ja
add
inc
out
sbb
lahf
jae
je
cmp
das
push
push
push
push
mov
push
xor
sbb
pop
lcall
es
loope
std
mov
add
push
fcoms
subb
inc
jg
jle
cmp
inc
sti
mov
sub
mov
add
lss
mov
mov
enter
jns
test
or
cmp
sbb
sarl
cs
testl
fidivrs
xlat
pop
mov
out
fmuls
or
mov
inc
ds
mov
jle
std
jb
sahf
insl
sub
ret
icebp
mov
out
push
andl
and
cmp
roll
cwtl
dec
pushf
iret
jge
mov
mov
call
sub
xchg
pop
and
das
and
rolb
jmp
and
cltd
mov
adc
roll
aam
jb
jp
cli
fildl
add
inc
pop
scas
out
xchg
outsb
enter
sbb
or
in
sub
nop
lods
jnp
sub
xor
sub
mov
outsb
mov
into
mov
and
out
mov
out
push
mov
lret
xor
jae
mov
add
xchg
or
testl
in
addr16
loopne
push
loopne
push
xchg
and
rcrb
test
xchg
lcall
push
sbb
xchg
xor
in
adc
inc
test
subb
or
add
dec
sti
in
mov
jge
jo
mov
and
jp
xchg
xor
repz
cmc
inc
xchg
loop
mov
rcll
add
or
xchg
and
clc
inc
dec
fnstenv
and
adc
jno
jecxz
mov
push
ret
dec
pop
fdivp
pop
mov
xor
mov
nop
dec
rcrb
hlt
xchg
sbb
push
mov
xor
arpl
fisubs
pop
cmpl
jne
call
in
out
insl
loop
push
xchg
stos
add
pushf
sti
arpl
pushf
jae
fs
pop
xchg
lret
repz
push
xchg
mov
mov
xchg
or
push
test
lahf
stc
sub
int
fcompl
out
dec
cmp
xor
pushw
push
cmp
adc
in
out
orps
arpl
bound
xchg
les
shrb
fs
fwait
push
rcll
push
add
pop
out
dec
int3
lods
mov
aad
addl
dec
pop
orl
in
int
inc
iret
or
dec
clc
flds
pop
mov
push
dec
inc
mov
cwtl
out
les
mov
dec
cmp
pushf
cmpb
push
xor
mov
xor
ficompl
in
mov
pop
adc
lahf
rcr
jo
mov
mov
jecxz
fstpl
mov
andl
dec
repnz
ret
unpcklps
insl
dec
mov
push
or
sub
xorl
loopne
shrb
aam
or
sub
nop
aad
enter
jo
cld
jge
push
jl
sbb
push
test
inc
or
aad
test
out
mov
mov
xor
imul
inc
push
push
cmp
into
xchg
bound
lods
iret
xchg
lcall
push
inc
jle
iret
inc
and
mov
adc
sub
mov
ja
mov
xchg
xchg
sbb
daa
and
or
xor
loopne
sub
into
subb
cmp
pop
push
mov
fwait
imul
mov
cmc
xchg
jbe
adcl
jne
rorb
mov
jb
ror
notl
inc
or
sbb
mov
cltd
outsl
call
inc
fistps
inc
loop
inc
or
int
andb
pop
dec
mov
mov
cmp
mov
loop
aaa
stos
les
sub
jns
rorl
outsl
and
test
jae
or
or
push
ja
xchg
push
add
add
cld
xor
shlb
xor
jl
enter
mov
pop
and
jb
out
push
mov
push
pop
sbb
out
fdiv
test
divl
aaa
inc
fistpll
mov
outsl
loop
add
divl
add
in
das
addr16
lock
loop
adc
test
mov
and
sbb
mov
pushf
push
cmp
mov
mov
jp
add
aas
and
icebp
mov
cltd
icebp
std
notl
outsb
xchg
push
out
test
push
sbb
adc
pop
aas
add
cmc
or
mov
bound
lods
jnp
add
out
popf
mov
loope
jmp
iret
frstor
add
inc
jb
sbb
push
subb
xchg
jne
jb
cli
jmp
mov
imul
lret
fwait
or
fcmove
push
ret
jne
add
pusha
inc
loop
daa
cmc
or
test
scas
nop
push
mov
and
sbb
ret
ret
cmp
mov
test
dec
bound
in
push
sub
xchg
mov
mulb
mov
mov
out
iret
pop
push
mov
jo
pusha
es
dec
fistl
push
cmp
fidivrl
out
in
pop
int3
imul
fiadds
mov
andb
into
movsl
lods
push
jbe
sbb
inc
aas
pop
rcll
push
sbb
cmpl
xor
lret
clc
hlt
jle
out
add
jecxz
ljmp
mov
mov
push
fisttpll
or
nop
inc
lds
movsl
xor
out
jne
enter
fmuls
daa
not
xchg
add
aaa
cmp
loope
jp
add
fimuls
mov
sbb
fstpt
in
mov
call
aas
sarl
adc
and
rcrb
dec
xchg
xlat
gs
cmp
jnp
outsl
cmp
popf
push
jg
mov
lods
mov
in
aas
scas
int3
cmp
pop
ss
loope
dec
cmp
mov
aad
xchg
push
int3
fsub
and
dec
data16
cltd
pop
pop
es
int
mov
dec
jp
push
cmp
bound
push
pop
movsl
mov
inc
sbbb
xor
mov
lret
mov
js
out
mov
pusha
test
repnz
mov
cmp
sub
cwtl
arpl
in
mov
pusha
loope
test
push
mov
xchg
enter
cmp
cmp
xchg
insb
push
rcrl
mov
in
xor
pop
pop
sub
fcomps
mov
insb
push
mov
and
add
jl
ja
ret
adc
cld
jge
mov
xchg
hlt
xor
mov
dec
stos
adcl
xor
and
mov
and
outsl
mov
int3
bound
mov
in
dec
dec
xor
jge
cmp
mov
loopne
test
leave
or
andl
xchg
test
or
adc
mov
daa
jno
fildll
shll
mov
loope
test
mov
sub
pop
adc
add
loopne
jmp
and
push
mov
xchg
jge
mov
sarb
loop
mov
flds
xor
push
movsb
fcomps
lods
mov
cmp
inc
rcl
loop
dec
jo
stos
jns
scas
popl
dec
xchg
cmpl
testb
mov
fsubs
imul
add
and
scas
xor
mov
pop
out
int
shlb
cmc
add
call
mov
add
mov
sti
daa
adc
data16
pop
xor
cwtl
outsl
std
scas
popl
mov
cmp
js
daa
je
adc
les
fwait
lcall
cmp
cmp
inc
jno
jle
test
aas
xor
fsubrs
and
filds
popa
xor
sbb
dec
push
push
or
jg
add
call
call
ficoml
lahf
xor
das
jo
push
mov
xchg
stos
clc
gs
cmpl
hlt
inc
push
mov
push
sub
xor
movsb
push
subl
inc
sub
pusha
pop
mov
sti
ret
push
mov
jmp
and
jae
jecxz
shll
dec
jecxz
aam
pop
fs
test
lds
into
xchg
aaa
shrb
sbb
ljmp
sub
das
adc
daa
cwtl
cmp
andl
enter
idivl
jbe
divl
inc
mov
mov
xlat
adc
adc
cwtl
jns
sbb
iret
xchg
into
mov
lds
inc
int3
pop
cmpl
pop
les
test
aas
imul
js
gs
lcall
mov
xor
loop
js
stc
adc
ficoms
jnp
in
adc
add
xchg
mov
pop
jmp
xor
inc
clc
cmp
sub
sti
xchg
pop
test
lods
mov
fiadds
scas
inc
and
lea
mov
sti
jb
lea
gs
mov
pop
test
cmpb
stos
repz
xor
arpl
shr
lock
and
fwait
inc
loope
and
in
adc
mov
inc
and
or
clc
xchg
xor
jmp
mov
idivl
test
mov
punpcklbw
or
popf
cltd
daa
sbb
or
and
mov
adc
and
jmp
int
movsl
xor
dec
push
nop
xchg
int3
mov
pop
cmc
cmovle
sbbb
jb
fldenv
mov
inc
shlb
mov
fisubs
adc
push
mov
sbb
or
rol
adcl
shrl
jae
cltd
mov
jne
scas
pop
sbbb
adc
clc
xor
or
in
xchg
xor
out
popa
pop
fisttpll
dec
push
sub
mov
repz
or
xchg
dec
xchg
clc
xor
scas
rolb
bound
mov
sti
jns
mov
inc
and
xlat
sahf
push
sbb
sbb
mov
xor
or
icebp
jo
xchg
sbb
mov
jge
cwtl
iret
fcomps
inc
adc
fwait
pushf
or
cli
daa
ret
jnp
mov
test
stc
sub
fcompl
in
cld
test
mov
faddl
pop
push
cmp
lods
xchg
dec
jo
arpl
xor
sbb
push
push
xchg
filds
call
ret
scas
jge
dec
jp
inc
out
imul
add
push
or
out
lods
iret
cmp
xlat
adc
mov
outsb
mov
out
sarb
cmc
iret
stc
inc
neg
push
dec
leave
or
push
leave
xor
les
push
sbb
add
imul
repnz
sbb
icebp
cmp
rcr
fcmovnb
pop
js
orl
in
testb
in
xchg
xor
sub
lahf
cmp
pop
xor
das
mov
int
adc
inc
and
and
sbb
fstpt
jne
and
sbb
cmp
pop
jge
stos
xchg
pop
mov
bsr
mov
addr16
pop
rolb
addr16
xchg
fidivrs
mov
xchg
pop
mov
mov
dec
aas
out
xor
jmp
mov
gs
push
xor
inc
and
arpl
dec
pop
add
fldl
mov
in
sbb
sbb
fwait
pop
aaa
xchg
xchg
push
sti
fidivrl
nop
in
stos
jl
pop
and
inc
in
std
shll
dec
adc
xchg
out
loope
repnz
rcl
mov
mov
testb
ret
xor
add
aaa
in
adc
push
sbb
sti
ds
adc
roll
jae
sbb
sub
xchg
mov
ljmp
add
adc
mov
xchg
stc
adc
mov
daa
jge
lret
mov
cmpsl
mov
push
dec
sbb
mov
repz
jbe
movsl
mov
mov
test
adc
rol
cs
cmp
shlb
xor
hlt
sbbl
mulb
js
mov
cltd
pop
pop
sub
adc
sub
sub
xchg
mov
ja
xchg
lret
inc
daa
dec
out
dec
stc
nop
sub
sub
or
xor
loop
into
into
shrl
jo
mov
leave
mov
or
xorl
or
js
xor
jb
inc
sbb
cmpsb
push
movsb
scas
xchg
dec
pop
aaa
scas
aaa
ja
nop
jae
int
mov
cmp
cmpsl
or
sbb
adc
ja
cmpsl
aas
mov
push
test
xchg
rcl
lea
out
incb
pop
lret
iret
inc
sbb
call
es
sbb
int
xchg
inc
sbb
sbb
mov
pusha
jnp
xor
scas
cwtl
jge
je
dec
mov
dec
scas
push
into
andl
daa
dec
lret
sahf
lahf
test
mov
lods
xchg
das
jge
jbe
mov
jp
test
push
xchg
inc
mov
out
jb
jmp
insb
fwait
dec
repz
pop
sbb
push
pop
aad
ja
xlat
movsl
test
ljmp
out
movsb
subb
xchg
sbb
dec
cmp
push
inc
rcr
scas
out
mov
mov
pop
add
sub
cld
pop
pcmpgtd
pusha
jo
or
js
jae
cld
fstpt
popa
jecxz
dec
lret
dec
or
mov
sbb
mov
or
xchg
fbld
mov
ljmp
xor
mov
rcr
lods
ret
push
es
inc
mov
test
mov
mov
dec
sub
pop
lret
inc
sub
data16
mov
jle
aaa
int
mov
xor
iret
icebp
and
in
leave
lcall
add
jae
adc
mov
jmp
push
sbb
mov
push
xchg
pop
rolb
pop
imul
stc
jne
pop
outsl
outsl
cmpb
jns
popf
xor
sbbl
jne
lret
push
or
lret
sub
sub
lcall
pushf
sbb
inc
ss
les
mov
mov
pop
add
sub
jmp
mov
dec
repz
mov
mov
adc
cmp
test
xlat
cmp
imul
dec
or
into
cmc
mov
fnstcw
add
xor
inc
jns
int3
jns
inc
or
movsl
jl
push
cmp
xor
jo
fbstp
ret
pop
scas
rorl
jmp
dec
imul
std
cwtl
mull
popf
mov
jbe,pn
pop
inc
and
aas
repnz
jl
insb
jae
mov
dec
pushf
icebp
lret
pop
int3
xchg
jnp
dec
insl
cmpsb
clc
lea
xor
cli
pop
ret
fstp
pusha
fcmovne
push
nop
movsl
xchg
rcrl
xchg
jl
loop
stos
jp
mov
sub
repnz
sbb
repz
rorb
push
into
shl
clc
mov
dec
es
dec
dec
xor
pop
dec
lret
jnp
fs
mov
inc
stos
int3
sub
loop
and
outsl
das
cmpsb
fnsave
out
mov
sbb
int
mov
sub
insb
inc
cmpsb
mov
orl
jmp
dec
repz
into
arpl
into
xor
mov
enter
push
lods
pop
mov
rolb
arpl
xor
adc
test
cs
cmp
pop
xchg
mov
fcmovb
je
call
cmp
dec
jns
mov
sub
hlt
sub
xchg
fsts
dec
xor
lods
xchg
call
mov
jmp
mov
xlat
js
or
pop
fidivl
push
push
push
in
pushf
cwtl
push
test
and
dec
mov
clc
test
pop
jmp
mov
mov
test
fwait
push
adcl
pop
add
push
lret
dec
clc
cmpsl
insl
jae
jg
mov
lahf
mov
shl
xchg
call
or
mov
jl
movsb
lcall
xchg
or
mov
xor
inc
xor
test
pop
pop
ret
mov
insb
push
xchg
or
inc
es
cmp
test
inc
test
mov
pop
push
xchg
int
aas
adc
sub
jecxz
cmp
fsubrl
dec
jp
mov
push
cmp
lcall
jo
mov
push
xor
xchg
mov
fdiv
pop
scas
sbb
ss
dec
sub
inc
in
mov
mov
jae
inc
dec
dec
pushf
lahf
loopne
mov
and
cltd
std
and
add
cs
lock
xor
dec
add
xchg
inc
dec
lret
shr
cs
icebp
cmp
jno
aam
cmc
lea
test
adc
lea
gs
data16
stc
out
or
add
xor
frstor
xchg
rcl
mov
mov
mov
sbb
mov
cld
aam
ret
js
mov
push
push
mov
pop
out
push
cmpsl
and
sbbl
mov
xchg
out
xor
lods
notl
mov
das
fstps
ja
fnstcw
lock
fwait
lock
ss
sbb
out
icebp
scas
sub
jg
mov
movsb
das
or
lret
out
and
dec
xchg
daa
test
jmp
sbb
add
jg
xchg
inc
fisubrs
inc
mov
xor
push
xor
add
jns
mov
fcmovnbe
jns
push
aad
push
adcl
andb
test
nop
push
jge
sub
loope
sub
popa
dec
inc
or
mov
iret
push
sub
cmpsb
ja
add
or
and
and
mov
mov
cli
or
xor
aas
lea
les
test
fiadds
repnz
and
inc
lcall
inc
jge
ret
xchg
xor
sub
cmp
sti
ja
xchg
shll
lcall
test
aam
lcall
add
dec
mov
xor
mov
adc
icebp
add
mov
bnd
lcall
movsl
mov
cmpsb
rcrl
xorl
adc
jae
fxch
imul
xchg
mov
mov
fidivs
cmp
or
cmc
dec
push
je
aad
out
into
call
in
lahf
int3
cmp
popa
test
sub
sahf
rolb
xor
inc
inc
jecxz
cltd
shlb
lods
xchg
xchg
jne
sbb
in
sti
push
in
cmp
mov
add
gs
cmpsl
fs
jo
inc
push
je
imul
dec
pop
insb
cs
ja
jno
std
mov
aas
jge
aaa
xor
lahf
pop
lret
mov
xchg
and
gs
xor
sti
ljmp
jae
fnstcw
push
inc
icebp
inc
mov
mov
mov
dec
int
nop
and
dec
mov
sub
call
imul
jbe
sub
jp
ds
movsb
loope
jmp
mov
sub
ja
cs
cmpsl
inc
xchg
mov
jnp
imul
in
mov
xchg
fidivs
xor
push
lods
lahf
push
jecxz
or
mov
icebp
aad
adc
iret
xchg
testl
adc
sarb
popa
insb
pusha
movsl
imul
ret
data16
sub
add
cmp
cmpsl
fldcw
arpl
sti
pop
push
sarl
cs
addl
adc
mov
mov
pop
ja
enter
mov
cmp
movsl
rcl
push
jbe
mov
subl
aaa
sbb
xor
loop
push
lret
inc
in
xchg
in
jns
mov
aaa
xchg
aam
mov
in
push
adc
movsb
js
popf
or
pop
lret
push
push
adc
push
aam
out
and
rolb
stc
adc
in
mov
mov
mov
aas
jl
adc
push
ret
and
orb
and
xor
aad
jmp
fxch
and
sub
mov
pop
loop
notb
xor
enter
xchg
mov
mov
add
jl
dec
pop
cs
cmpsb
mov
dec
adc
fnstenv
jae
jl
add
add
lock
cmp
negb
cmp
pop
adc
xor
mov
xlat
adc
inc
pop
cli
xor
fwait
jp
dec
push
xorl
and
test
dec
pop
mov
loopne
or
in
jae
sarl
mov
int3
into
jbe
inc
mov
adc
inc
adc
xchg
xor
or
jmp
jmp
add
test
mov
pop
adc
pop
xchg
xor
int3
push
imul
int3
add
arpl
mov
fucomp
es
adc
jg
xor
imulb
lret
int3
je
push
std
pop
scas
add
push
mov
inc
sbb
mov
push
lods
fcmovnbe
repz
iret
or
xlat
test
xor
leave
sarb
fs
push
pop
aad
pop
dec
fnstenv
rclb
icebp
andb
pop
test
mov
jmp
add
ljmp
sbb
pop
insw
xchg
popf
push
jecxz
push
pop
sbb
adc
imul
mov
lret
insb
je
faddl
insb
ja
daa
mov
movsl
dec
sbb
jo
iret
inc
or
push
negl
loop
ret
scas
mov
push
ret
dec
into
inc
fs
ds
mov
and
test
dec
or
cwtl
scas
in
pop
in
mov
fidivrs
nop
and
stos
mov
or
popa
jno
xlat
andl
pushf
push
arpl
sbb
outsl
lea
test
sbb
call
inc
punpckhbw
dec
mov
ds
andb
dec
fs
jno
jmp
outsb
adc
cld
cmp
xor
mov
push
daa
xchg
add
sub
cmpsb
aaa
int
push
je
mov
lock
dec
add
push
push
xorl
xor
mov
shrl
push
sub
dec
mov
fdivr
sbb
std
popf
jae
mov
cmp
ss
shr
or
jp
add
cmpsb
imul
notb
inc
xor
imul
js
xor
in
jnp
push
inc
data16
xchg
add
add
fldt
pusha
movsl
popa
push
pop
ret
mov
or
mov
mov
xchg
call
push
or
sbb
pushf
clc
xchg
xchg
loope
xchg
insl
push
nop
dec
sbb
inc
mov
iret
push
dec
jmp
sub
inc
lcall
in
ficomps
nop
or
shrb
gs
ds
inc
inc
mov
iret
icebp
int
js
fidivl
popf
jle
pop
imul
lret
imul
sbb
dec
shll
scas
int
cmp
mov
dec
out
add
mov
fidivl
ja
xorb
pop
icebp
xchg
inc
inc
xchg
icebp
push
pop
mov
adc
jnp
cmpsb
mov
cmc
ss
repnz
aaa
stos
data16
mov
leave
faddp
dec
inc
inc
ret
cmp
and
icebp
sahf
xlat
pop
cmp
test
pop
out
xchg
jg
in
das
mov
jle
xlat
mov
pop
fsub
fnstsw
and
mov
xchg
ss
jne
and
sub
fsubrs
test
in
xchg
lret
inc
cmc
ja
aas
fiadds
ds
jo
aam
ss
sub
jle
ja
mov
pop
in
xchg
fcompl
fcoml
xchg
das
cmp
std
cmpsl
xorb
jbe
fwait
lcall
jp
fnsave
pop
cmp
orl
and
jb
pop
add
fwait
jp
imul
test
jbe
push
jmp
jmp
xchg
dec
xor
enter
sbb
fs
inc
pop
rcrb
sbb
test
inc
dec
gs
aam
outsb
adc
ja
aam
sub
sbb
std
bound
sahf
adc
es
bound
push
popf
lret
mov
out
aad
jecxz
icebp
popf
orb
sbb
jo
outsb
push
adc
insb
inc
push
and
mov
stos
jge
ret
test
push
add
push
lods
fildll
mov
test
cltd
push
adc
mov
lea
xor
xchg
repnz
inc
push
push
add
addr16
cmp
mov
das
jl
std
in
or
insb
imul
push
aaa
sub
add
daa
jecxz
icebp
cltd
sbb
adc
insl
sbb
in
sbb
xor
mov
es
lods
push
dec
jmp
insb
adc
mov
ret
ror
pop
xchg
int3
sbb
ret
sub
push
sarl
out
mov
or
adc
xchg
mov
call
jae
dec
in
subl
add
out
out
add
fistl
sar
lds
sbb
add
sahf
jnp
les
jmp
stos
enter
lods
outsb
ret
sahf
and
xchg
cltd
mov
mov
jmp
mov
lods
add
idivb
sub
stc
or
inc
push
repz
je
clc
xor
cs
add
sub
mov
lahf
sub
inc
jns
dec
cmc
fdivs
scas
fldl
inc
or
lret
fstps
jo
adc
mov
jns
in
nop
cli
dec
push
cld
xor
stc
and
js
jnp
in
xchg
enter
inc
cmp
jle
int
ret
ds
orl
std
out
or
and
dec
nop
test
leave
mov
jecxz
loope
outsl
loop
mov
nop
test
loope
adcl
add
cmpsb
sbb
sbb
arpl
scas
cli
out
dec
lret
int3
lock
mov
adc
jl
jne
pop
cli
scas
xchg
mov
dec
stos
pop
ret
imul
jl
test
inc
mov
addr16
pop
or
push
ds
or
xchg
jo
rorb
out
pop
icebp
fs
roll
xlat
cmc
lds
pop
jecxz
mov
and
sahf
sbb
mov
fdivrs
movsl
sub
enter
adc
call
out
imull
push
xchg
pcmpgtd
push
inc
cmp
mov
pop
push
lods
test
mov
std
cltd
sbb
sub
lahf
inc
push
sti
and
adc
mov
dec
idivl
aas
pop
pop
out
xchg
aaa
not
stos
fstpt
arpl
push
cli
jecxz
andb
sbb
inc
dec
movsl
iret
fcoml
xchg
inc
int
mov
mov
mov
int
idivb
add
jle
inc
incl
xor
lock
mov
jbe
push
shr
rcrb
hlt
cli
lds
or
jp
xor
test
add
mov
jns
dec
jmp
pusha
xchg
fdivs
or
adc
adc
and
filds
jecxz
pop
test
lcall
mov
jbe
push
outsl
xchg
out
mov
jo
push
rcrb
jne
fucomp
pusha
push
aad
repz
das
xor
dec
pop
rcrb
test
and
push
outsl
icebp
mov
and
into
loop
inc
mov
test
mov
push
in
inc
cmc
dec
mov
es
xchg
pop
mov
xor
pusha
call
sbb
push
lea
stc
scas
popl
mov
outsb
pushf
mov
ljmpw
pop
pop
icebp
in
push
xchg
mov
push
popa
into
aas
mov
in
pop
mov
repz
scas
ljmp
adc
cmc
out
fwait
hlt
call
pop
fld
outsl
sbb
out
inc
and
dec
mov
xor
leave
mov
movsl
fsubl
nop
cmp
adc
inc
stc
scas
adc
add
mov
mov
inc
jl
jne
pop
ret
pushl
andb
mov
js
loopne
and
test
xlat
add
addl
add
lock
rol
push
and
roll
enter
push
dec
cltd
add
and
sbb
pop
imul
push
and
es
push
movsl
xchg
cmc
pushf
cmpsl
lock
jbe
dec
pop
sbbb
roll
popf
js
jg
adc
mov
stos
stos
cmc
in
mov
xlat
xor
push
outsb
clc
add
aad
push
repnz
cmp
inc
fidivrl
shll
mov
inc
pop
xchg
sbb
pop
test
mov
jg
xor
incb
pop
inc
adc
outsl
mov
jmp
adc
adc
aam
mov
stos
insb
add
adcl
pop
fisubs
outsb
add
xor
out
stos
mov
dec
inc
icebp
test
push
shl
push
enter
adc
push
or
mov
adc
ljmp
int
push
or
out
lcall
fsubrs
fcoms
inc
out
jnp
jo
dec
out
xchg
jbe
jl
mov
mov
sahf
and
push
mov
stos
fdivs
inc
popf
xchg
lret
ds
repnz
pop
fmulp
arpl
cwtl
xor
and
inc
cmp
mov
rol
jno
fidivl
fwait
xchg
push
call
ljmp
shrb
sbb
rclb
inc
pop
outsl
into
movsl
insb
mov
test
stos
push
cmp
scas
cmp
xchg
and
xchg
inc
ja
ret
cmp
fsts
inc
sbb
pop
mov
aam
dec
bound
test
lret
pop
int
test
outsl
sub
out
pop
xor
lahf
jnp
rorl
cmp
out
mov
repz
push
ss
cmpsb
pop
xor
or
cltd
outsb
mov
dec
push
pop
je
xorl
mov
bswap
cwtl
mov
sub
push
sub
mov
pop
fsincos
xor
das
mov
insb
inc
pop
ljmp
jb
icebp
sti
imul
mov
sbb
sbb
in
fbld
iret
or
ret
mov
jne
test
mov
orl
negb
inc
bswap
cmp
fnstcw
jns
fnstsw
push
cli
jmp
clts
jnp
iret
repz
adcb
jecxz
sub
lahf
jl
jg
cmc
leave
and
lea
gs
adc
jo
push
push
das
in
or
push
adc
push
mov
push
pusha
and
pop
pop
xchg
or
pop
es
lahf
insb
outsb
mov
clc
fdivr
or
xchg
or
scas
mov
dec
das
lea
sub
jmp
inc
adc
mov
insl
xchg
mov
jbe
lods
ds
scas
cmp
cmp
into
inc
xchg
sub
or
inc
push
push
lahf
jl
jp
rep
test
cli
fnstsw
add
loope
xlat
xchg
xor
enter
adcb
mov
and
rcrl
ja
fwait
or
or
xchg
mov
outsb
xchg
xor
mov
test
mov
out
test
outsl
inc
mov
inc
lods
mov
faddp
and
jno
mov
pop
repz
subb
ficoml
dec
lock
pusha
imul
xchg
jp
lea
xor
repnz
rclb
out
lods
stos
pop
je
rcrb
popf
xor
inc
mov
ret
mov
popa
mov
pop
jmp
call
scas
mov
lock
int3
scas
pop
pop
lds
pop
or
mov
iret
adc
pop
or
sub
lods
aaa
js
cmp
inc
ret
mov
test
sti
test
mov
mov
jecxz
mov
pop
mov
inc
dec
xchg
ficompl
adc
adc
movsl
in
inc
pop
inc
stos
ss
test
adc
movsl
and
mov
jb
mov
or
jno
push
outsb
fbld
dec
xchg
push
mov
enter
test
movsb
mov
movsb
rolb
fadds
imul
mov
cmpsl
pop
inc
jecxz
mov
ds
shrl
je
inc
movsb
frstor
ljmp
out
dec
push
pop
jo
fwait
xor
jbe
in
jecxz
ret
mov
mov
in
scas
sbb
cmpsl
dec
ljmp
jbe
mov
and
loop
aam
jge
scas
mov
mov
push
inc
inc
add
mov
and
rorl
cmpl
pusha
sahf
pop
int
iret
hlt
out
adc
mov
jns
mov
daa
dec
das
dec
cmp
js
into
hlt
test
mov
in
adc
jb
jp
sub
lds
dec
aad
cld
shll
add
mov
sahf
cmp
sub
pop
mov
das
fldenv
push
jmp
add
movsb
pop
mov
and
xor
ja
cld
aas
inc
cmc
out
imul
dec
xor
pop
or
jmp
mov
pushf
jl
popa
cmp
imul
xor
jge
int
insb
add
push
sbb
fisttpl
xchg
xchg
outsl
mov
push
idivl
or
push
pop
cmp
jo
cmp
int
push
fwait
std
fcomps
lods
in
int
lret
popf
sbb
mov
movsb
inc
or
pop
fidivrs
fiaddl
xor
and
sbb
int3
test
jnp
out
loope
xchg
push
xchg
push
jbe
mov
mov
jg
icebp
xchg
jno
inc
push
or
jnp
sbb
insl
inc
inc
jbe
js
jecxz
mov
test
jl
sti
mov
test
lcall
mov
mov
js
add
push
and
mov
cmpb
pusha
stos
cmp
mov
xor
pop
fisttpl
mov
jnp
pop
pop
pop
fldcw
clc
pop
mov
cmc
in
jle
jno
add
scas
repnz
mov
test
sbb
sbb
in
mov
cld
inc
loope
jae
push
les
xor
ret
inc
data16
adc
shll
dec
rdmsr
mov
stos
and
insl
push
jle
test
adc
ret
js
ret
cmp
cmpsl
rorb
ret
lcall
insb
fnstenv
pop
sub
adc
mov
mov
cmp
xor
sbb
cmpsl
sub
xor
add
mov
in
scas
mov
inc
sbbb
rcr
insb
ret
push
jnp
and
outsb
add
sub
ds
les
and
sub
movsb
and
int3
jl
mov
std
gs
add
lods
mov
sub
je
aaa
pop
mov
lcall
cmc
jp
mov
sub
jmp
in
mov
push
movsl
test
into
xchg
push
cwtl
sti
jae
ds
in
mov
int
movsl
scas
sub
push
dec
sub
jmp
push
add
xchg
scas
dec
add
daa
out
das
shrb
pop
adc
and
pusha
cwtl
push
jnp
stos
div
fsubrl
punpcklbw
pop
aad
xchg
loop
sbb
push
je
xchg
pop
xchg
jbe
les
sub
insl
pop
add
pop
pop
ficompl
pop
inc
jo
jbe
jge
jp
test
jno
adc
repz
pop
fistpl
shlb
pop
mov
cld
fcmovbe
sarb
push
leave
aam
mov
daa
push
push
mov
inc
fidivrs
sub
cmp
aam
fbstp
dec
lds
arpl
mov
ds
in
sarl
push
icebp
or
mov
rclb
lea
jp
inc
add
fildl
jl
add
imulb
das
loope
pop
pop
ja
sti
test
cmp
das
ffreep
cmp
std
mov
test
leave
dec
bound
and
pop
or
xchg
movsl
pop
mov
sbbl
inc
xor
sub
inc
outsl
fists
pop
fdivrs
out
mov
pop
mov
rorl
loope
into
sub
cld
xchg
pop
xor
rol
cmp
test
jg
cs
in
mov
pop
lahf
rcrl
jno
dec
aas
ret
push
adc
aad
xchg
pop
push
push
dec
aad
icebp
cmp
xlat
mov
mov
jmp
cmp
mov
lock
mov
andb
sub
dec
or
les
sub
pop
jbe
jnp
dec
pop
xchg
mov
xchg
iret
stc
mov
int
mov
jno
adc
mov
push
cmp
xchg
dec
arpl
je
mov
push
pop
cmpsl
pop
jb
je
scas
imul
iret
pop
xor
ret
test
rolb
push
stc
xchg
jo
lret
jns
sti
mov
mov
bound
pop
xor
sbb
add
sti
imulb
popf
and
sti
mov
in
stos
mov
sarl
stc
cld
push
adc
sar
aaa
fs
data16
rolb
and
jo
shrl
inc
add
push
xchg
jns
loop
lds
int
std
sbb
aad
mov
pop
xchg
daa
mov
jns
stos
mov
jp
mov
mov
cmp
sarl
mov
movsb
in
xchg
or
les
and
xchg
subb
leave
loope
mov
jmp
xor
stos
and
std
ja
out
push
jb
mov
out
jmp
dec
and
xchg
dec
pop
mov
push
pop
imul
les
add
inc
inc
mov
mov
mov
add
jmp
and
adc
pusha
roll
mov
sahf
scas
in
push
test
mov
fs
xchg
std
sbb
pusha
rcll
push
jge
mov
mov
stos
mov
int3
out
sti
addl
cmpsb
and
enter
out
lock
mov
shl
lods
push
les
loopne
popf
xchg
xchg
xor
andb
js
and
sbbb
cmp
inc
cwtl
xchg
sbb
mov
movsb
faddl
fldenv
sbb
sub
jbe
ret
addr16
test
das
mov
sti
js
push
dec
sub
lret
and
dec
pop
dec
lahf
mov
cmpsl
imul
pop
sbb
push
xor
mov
int3
mov
lods
mov
out
mov
sub
push
dec
das
out
or
jmp
and
pop
movsl
mov
inc
push
jns
pushf
mov
lock
cmpsl
or
push
push
cmc
xor
ds
int3
jecxz
das
sti
sub
test
jle
xchg
adc
movsb
inc
jno
pop
cmp
icebp
popa
cmc
das
lret
cmp
cs
inc
jo
push
clc
and
mov
aas
out
mov
push
in
aad
stos
movsb
aas
push
adcb
jecxz
mov
cmp
lods
repnz
in
repnz
test
aaa
cmp
movb
dec
mov
mov
ret
sbb
pop
insb
daa
cld
xchg
lds
jae
lcall
adc
arpl
gs
xchg
fwait
mov
std
pop
adc
xor
cmp
addr16
mov
pop
outsb
xor
cmc
xchg
mov
pop
loop
mull
mov
jb
xchg
pusha
cmp
xchg
call
leave
mov
adc
mov
ljmp
xchg
dec
push
int3
xchg
test
and
sub
das
loope
stc
pop
lds
mov
in
rcrb
rclb
lcall
mov
fwait
dec
cwtl
pop
cmp
jb
and
xor
jmp
push
popf
fs
inc
mov
fldcw
xor
out
in
mov
sbb
adc
mov
in
dec
xor
in
mov
pop
ss
lods
movups
xchg
ds
mov
cmp
lcall
rcrl
fcomi
sub
push
push
insb
insb
repz
shr
cmc
mov
jecxz
daa
movsl
or
lret
sbb
cwtl
xor
xchg
filds
mov
cmp
jno
adc
mov
and
movsl
dec
cmp
cmp
add
and
or
scas
jae
xchg
xor
mov
add
aam
pop
in
jecxz
out
js
sti
sbb
jbe
adc
incl
push
push
pop
jno
inc
test
fwait
jno
xchg
test
push
insl
mov
cmpsl
sub
shrw
sub
test
ljmp
or
sti
das
dec
out
sbb
push
adc
bound
loope
xor
mov
repnz
lock
sti
pop
ljmp
dec
mov
jne
inc
call
push
sbb
push
repz
or
push
imul
js
sbb
xchg
mov
push
mov
rcrl
int
imul
xor
addr16
jae
insl
lcall
subb
cmp
mov
or
out
roll
lods
fdivl
cmp
pop
arpl
mov
outsb
pop
hlt
sbb
je
movsl
xorl
dec
add
pop
jmp
pop
or
push
and
idivb
xor
and
xor
idiv
movsb
gs
pop
dec
xlat
aaa
scas
negl
lea
lret
sbbl
fistpll
jbe
adc
jae
sti
sub
push
ss
push
mov
gs
mov
fld
lcall
push
or
pop
xchg
cld
dec
inc
fdivrs
test
and
dec
mov
xor
jle
cs
cmp
dec
ja
adc
stc
dec
ss
jno
and
call
push
mov
push
mov
xor
pop
das
arpl
mov
ret
mov
cltd
imul
shrb
sbb
in
nop
outsb
outsl
mov
arpl
mov
dec
divl
subl
and
fwait
es
ja
lock
aas
mov
cs
pop
cmp
inc
jle
inc
mov
mov
xor
lock
add
hlt
adc
mov
pop
inc
lods
mov
sarl
popf
mov
push
xor
cmp
pop
xor
push
or
mov
jno
cmp
mov
jl
bound
fildll
dec
pop
ja
inc
mov
adc
es
std
dec
mov
mov
lock
pop
out
rolb
inc
fs
jle
add
adc
jg
sub
stos
lods
xchg
push
in
and
jbe
or
inc
test
scas
xchg
sub
cmp
movsb
inc
aam
mov
pusha
daa
inc
or
xchg
or
mov
jbe
dec
jle
lods
in
add
mov
push
push
mov
daa
orb
stos
es
frstor
aas
dec
push
mov
and
jo
xchg
pop
jo
aas
shl
jp
mov
stos
mov
inc
sarb
or
adc
shl
cmp
push
shl
call
add
or
lds
cmpsl
ss
shr
jno
adc
cld
lods
out
out
cs
mov
mov
mov
std
out
dec
xlat
xchg
outsb
fwait
hlt
jl
fstps
int3
cmp
addl
pop
into
mov
lock
add
or
sub
push
sub
push
mov
or
stos
inc
mov
cli
or
push
outsl
jnp
add
insb
ljmp
xchg
arpl
test
cwtl
jno
cmp
pop
push
data16
xchg
xor
pop
add
repnz
xor
outsb
repz
aas
push
push
push
mov
and
dec
xor
and
cmp
outsl
add
push
hlt
xor
fdiv
or
push
jg
cli
adc
adc
dec
sbb
pushf
out
iret
outsb
std
mov
or
pop
push
fildl
fistps
mov
mov
rorl
pop
mov
xchg
stos
out
sti
xchg
mov
adcb
fdivrs
cld
loop
mov
in
mov
incb
pop
out
sub
xlat
add
and
clc
pop
imul
popa
rorb
push
ljmp
shll
xor
orb
ljmp
addl
pop
jmp
jmp
sub
stos
mov
loop
mov
jnp
outsb
add
dec
jne
push
pop
xchg
mov
test
test
ljmp
in
fnsave
pop
cmp
jg
jo
or
pop
jg
andl
add
je
shl
scas
push
out
adc
mov
cmp
xor
mov
mov
orb
movsl
dec
mov
arpl
jg
imul
add
fldt
out
dec
popl
sub
repnz
arpl
test
gs
add
lea
mov
jb
pop
mov
out
in
lret
in
push
pop
pop
mov
mull
cwtl
cltd
dec
sub
lock
lea
add
and
cmpsl
out
and
mov
fcmove
in
cmpl
addr16
adc
jnp
mov
lret
lods
les
push
sar
mov
ds
rclb
loop
mov
pop
scas
jmp
ljmp
lahf
lods
out
inc
xor
mov
pop
data16
es
jnp
jno
fidivs
cmpb
imull
xor
and
sahf
gs
fs
adc
shlb
adc
nop
ret
xor
pop
jns
ja
xor
rcrb
in
shll
inc
fwait
mov
mov
pusha
push
jne
or
mov
cmp
xorb
iret
fsubs
cmp
and
cmc
dec
adc
cmpsb
mov
fisubl
out
jnp
push
cmp
sub
xchg
push
mov
and
sbb
stos
test
leave
and
xor
xor
add
insl
mov
dec
or
fstpl
jle
stos
xchg
mov
test
ficompl
or
mov
add
and
mov
dec
push
cmp
mov
pop
sbb
andb
pushf
push
repz
jnp
and
pop
sti
mov
js
or
nop
sbb
inc
sbb
inc
mov
arpl
inc
imulb
cmp
mov
inc
pop
mov
outsb
std
pop
cmpsl
xor
mov
fists
nop
jb
rol
jge
mov
fstps
ss
mov
inc
mov
inc
nop
push
xchg
xchg
mov
sbb
sub
add
js
jno
add
mov
lret
rorl
cmp
xor
insb
repnz
scas
lods
sbb
sbb
cmc
out
test
add
add
push
clc
or
loopne
push
mov
std
gs
insl
div
mov
inc
gs
adc
xchg
adc
inc
lea
xor
jb
mov
aad
enter
out
ret
pop
rolb
xchg
jne
adc
cmpsl
jecxz
dec
sahf
outsl
fsubs
sub
fnop
subb
lret
out
pop
fiadds
push
lret
xor
push
repz
pop
mov
insb
ss
test
insl
or
dec
loopne
btr
nop
push
fisubl
repnz
sbb
xchg
xchg
mov
add
outsl
or
ret
je
scas
mov
gs
mov
imul
sbb
les
adc
out
mov
test
dec
mov
jne
dec
in
mov
jmp
lods
jl
xor
sub
adc
aam
cmp
fidivrs
jle
aad
cli
pop
mov
stos
cmp
nop
shll
ret
in
cs
clc
cmp
inc
js
mov
and
xchg
aas
sub
push
xchg
js
add
push
jge
sub
enter
pop
mov
in
mov
rcl
mov
adc
xchg
into
push
in
add
push
xor
inc
shlb
call
pop
data16
rol
xor
sub
adc
sbb
adc
push
sbb
addr16
lock
repz
scas
adc
cwtl
cli
jno
jns
xchg
pop
fmull
jmp
or
sub
adc
mov
sbb
dec
mov
jb
shrl
adc
cmc
iret
lods
jg
sbb
fwait
xor
add
pop
roll
hlt
pop
mov
lret
sbb
movsl
add
hlt
dec
ss
xchg
mov
andl
adc
cmp
mov
jge
sbb
adc
jnp
mov
in
push
stos
xchg
adc
nop
xlat
loopne
hlt
dec
dec
cmc
negl
sub
jno
cmp
imul
sbb
push
stos
lahf
xor
pop
jmp
push
mov
xchg
dec
push
rolb
xor
ffreep
inc
in
adc
in
icebp
cli
xchg
inc
mov
sub
xchg
jg
mov
lods
sti
test
pop
inc
jns
test
lods
fdivrl
xor
and
sub
sbb
or
loopne
dec
mov
mov
subl
xchg
fcmovne
or
mov
loopne
pop
cmp
int3
or
dec
sbb
xchg
cwtl
inc
int
mov
jne
mov
iret
and
ds
into
inc
inc
shll
lea
stos
pusha
push
int3
dec
cmpsl
xor
cmp
xchg
sbb
loope
nop
jo
addr16
cmp
cmpsl
add
xchg
sub
call
out
shrl
push
inc
adc
test
iret
movsl
lret
jmp
push
int
js
add
repnz
push
add
dec
mov
frstor
stc
test
cli
imul
dec
stos
mov
sbbl
and
arpl
out
cmp
ljmp
out
fistl
repnz
loope
enter
add
mov
pop
insl
pop
xchg
xor
in
mov
fwait
add
sbbl
int3
sbb
xchg
xchg
adc
mov
pop
xchg
sarl
bound
mov
push
pusha
das
adc
pop
das
cmc
scas
xor
fisubrs
cmp
ret
mov
jecxz
push
jb
and
std
in
sbb
ss
scas
mov
fucomp
inc
cmp
pop
cmc
mov
xor
xchg
and
adcb
in
pushf
push
xchg
imul
push
test
sub
push
dec
je
call
mov
xchg
ss
popf
or
sub
sbb
insb
addr16
loop,pn
or
stos
scas
aas
mov
arpl
leave
add
negl
mov
es
or
adc
aas
fildl
out
jle
fisubs
fcmovne
sub
aad
movsb
in
push
sub
fdivs
xchg
or
sbb
lret
bound
imul
cli
popf
adc
mov
js
dec
sbb
xor
cwtl
dec
loopne
leave
cld
sbb
lds
mov
adc
inc
push
fisubl
imul
or
xchg
shll
mov
cmp
decw
sub
adc
bound
push
xchg
mov
push
jno
data16
mov
mov
sbb
push
adc
cld
jl
imul
inc
stos
xor
jo
sub
pop
in
ficompl
mov
pop
aas
pop
ret
pop
sbb
gs
fldcw
adc
or
inc
lods
cmp
adcl
pop
mov
sub
xchg
fs
mov
or
mov
aaa
xor
mov
pop
inc
aam
xchg
lock
sub
jl
xor
out
mov
arpl
in
and
pushf
loopne
add
lds
inc
pop
jl
test
mov
cld
bound
sbb
fistpl
pop
fnstcw
cmpsb
xor
add
and
mov
cmp
push
adc
popf
xchg
add
inc
std
jecxz
insb
fcmove
push
xor
add
mov
sbb
fbld
cmpsb
pop
adcl
sbb
movsl
mov
fwait
repz
ljmp
sub
pop
mov
ljmp
or
adc
jecxz
jmp
jns
enter
cmp
push
cmp
mov
movsb
jo
inc
and
subb
shlb
and
mov
jbe
mov
pop
pop
sahf
mov
loopne
inc
data16
mov
xor
push
call
dec
sub
cwtl
and
pusha
and
pop
adc
jle
push
sahf
bswap
out
sub
icebp
cs
and
and
sbb
enter
push
imul
daa
popf
inc
inc
push
insl
loope
pop
jle
stc
mov
in
test
movsb
movsb
cmpsb
pushf
mov
mov
cmp
push
cmpl
mov
jmp
lods
inc
or
pop
or
test
jp
pop
das
dec
stos
cmp
in
cmp
scas
lods
stc
add
daa
cmp
jo
into
test
in
dec
mov
mov
fcom
inc
lret
jnp
sub
pusha
ficoms
jp
inc
in
mov
idivb
lock
sub
sub
lea
adcl
dec
int
stc
xchg
call
gs
lods
mov
mov
and
daa
and
std
and
mov
mov
cmp
sbb
xchg
xor
sbb
out
gs
pop
cwtl
jle
rolb
and
shrl
or
das
insb
mov
cmp
cmpsl
fcoml
push
ret
xorl
adc
push
fmull
xchg
push
cltd
xchg
sbb
mov
out
stos
mov
jg
jmp
pop
lods
cmpsl
jbe
mov
or
ror
test
pop
movsl
cmp
sysexit
inc
lods
ja
push
cmpsb
mov
push
in
push
cs
not
cwtl
cs
aad
incl
mov
jg
or
popf
jno
jne
or
or
jge
jns
les
fnstenv
mov
pop
ljmp
test
nop
fsubrl
loopne
loope
rorb
mov
mov
call
test
cmp
pop
jno
xor
push
sbb
inc
jbe
sub
pusha
out
ret
std
inc
pop
int
cmpsb
out
das
mov
shrl
daa
lea
daa
push
fistpl
sub
sub
pop
lods
adc
mov
mov
xor
rclb
repnz
sarb
xchg
popf
loopne
repz
inc
dec
push
repnz
int3
push
cld
icebp
adc
nop
ret
sahf
cmp
xchg
nop
imul
sbb
sbb
aaa
pop
pop
fcoms
and
adc
xor
cmpsb
dec
clc
sub
cmc
dec
xor
sub
mov
cmpsl
aam
pop
dec
fstl
push
dec
cwtl
in
ret
arpl
jne
push
xchg
xchg
sub
iret
cmp
pop
es
sub
adc
inc
mov
xchg
mov
out
push
cmp
cli
inc
cmp
jnp
lods
sub
pop
ret
and
leave
inc
stc
sbbb
incl
or
jmp
ja
lock
cmpsl
pop
add
add
movb
mov
jmp
or
scas
popf
std
icebp
adc
push
cli
popa
int
mov
mov
call
divb
das
jmp
inc
ds
pop
jo
fdivrl
scas
loopne
add
mov
enter
inc
mov
dec
test
lods
and
mov
pop
add
shlb
aam
pusha
mov
mov
lahf
mov
repz
js
mov
sub
test
test
negb
icebp
xchg
xor
xlat
cld
idivb
movsb
and
dec
es
xor
popa
aam
xchg
add
lock
mov
add
mov
xchg
mov
xchg
xor
mov
cmp
jb
insl
in
dec
push
add
in
arpl
sbb
push
and
add
popa
test
pop
push
mov
pusha
scas
repz
mov
or
mov
test
shrl
jns
mov
or
adc
push
adc
mov
jmp
sub
fldl
lock
jmp
or
and
aas
jmp
cmp
icebp
mov
jmp
dec
lret
fst
cltd
popa
pop
xchg
imul
jge
mov
mov
popf
mov
mov
adc
mov
shl
dec
pop
pop
mov
enter
dec
add
out
addl
pop
pop
scas
add
test
in
out
cwtl
scas
adc
insl
or
bound
jno
sub
jo
add
add
les
lods
mov
xchg
adc
xchg
xor
xchg
pop
and
cmp
inc
repnz
add
mov
sub
push
xchg
test
or
or
and
sbb
push
mov
cmp
fldt
push
dec
test
adc
jle
inc
jecxz
xor
push
je
les
dec
mov
xchg
lcall
cmpsb
mov
mov
inc
bound
push
leave
out
leave
shl
pushf
xor
es
ljmp
rolb
int3
pop
mov
inc
or
push
sahf
daa
inc
xor
insb
add
push
into
loope
fldcw
jbe
mov
gs
mov
stc
cmpb
sbb
lods
sub
jne
mov
sahf
in
rol
outsb
shlb
cmc
dec
loopne
fmull
jg
push
in
jle
inc
ss
fdivrp
sahf
fstl
jnp
push
xor
insb
push
sbb
cltd
cmp
mov
jne
shll
lea
xchg
or
pop
mov
fildll
inc
and
lods
cmpsb
lods
cmp
int
push
into
mov
pop
push
rclb
aas
inc
mov
mov
movsl
add
int
fdivs
sbb
pop
push
fistps
rcrl
xchg
pop
xor
and
fmuls
std
ja
jl
pop
scas
push
aaa
cld
aaa
mov
xchg
dec
mov
push
fwait
ja
mov
leave
jbe
aam
mov
rorl
xchg
mov
popf
push
lret
data16
stos
sub
mov
cwtl
out
incl
cmp
imul
jo
pop
cmpb
add
jmp
lahf
rorb
decl
xor
jle
jno
push
pop
pop
fildll
fimull
inc
push
dec
divl
fadd
inc
mov
test
hlt
inc
xchg
jmp
push
xor
inc
mov
lret
pop
cmp
cwtl
jae
mov
test
mov
xrelease
scas
sub
outsl
stos
mov
sub
mov
or
add
dec
aam
inc
stc
mov
push
xchg
sub
icebp
push
sahf
mov
adc
scas
std
push
fiaddl
int
pop
adc
addl
mov
push
dec
fidivs
test
es
test
and
jge
ss
loopne
cs
aad
xchg
pushf
repz
jno
daa
jg
or
jne
mov
repz
lock
jno
in
test
inc
fcmovne
inc
jmp
or
xchg
aas
int
andps
rcrl
movsb
mov
lret
or
dec
push
add
xor
xchg
push
mov
xor
xor
push
sub
sbb
inc
fidivrs
push
mov
dec
add
mov
pop
or
popf
adc
dec
add
pop
fwait
push
jl
mov
out
sub
push
xchg
xlat
scas
sbbl
stos
shlb
arpl
in
sub
lock
fwait
dec
sub
in
xchg
add
sub
shlb
es
pop
je
lahf
mov
sub
call
mov
mov
pop
mov
cld
rol
aas
adc
in
decb
xchg
cmp
xchg
mov
leave
mov
or
adc
sti
in
cmc
xorl
stos
bound
fsubp
bound
enter
test
xchg
fadds
inc
xor
addl
mov
pop
and
inc
fxam
xchg
arpl
ss
mov
fdivl
mov
in
mov
jmp
cmp
sub
xchg
push
int
pusha
ret
or
cmp
mov
inc
dec
lds
mov
mov
xor
outsb
sub
cwtl
add
push
jb
pop
fs
add
jp
jg
push
popf
pop
lds
imul
mov
mov
sarl
pop
jge
push
loop
les
lds
xor
sarb
sub
mov
lcall
mov
inc
jne
mov
test
mov
mov
dec
outsb
push
mov
adcl
aad
jle
push
in
into
out
mov
dec
mov
and
sbb
mov
add
mov
out
inc
cmp
lock
xchg
add
aas
pop
test
aas
cmp
rolb
in
push
rcrb
int
and
pushf
xlat
or
xchg
loop
mov
and
test
out
jns
ret
push
stc
lahf
push
cld
or
dec
add
shl
stos
xchg
movb
push
jo
aas
sub
or
cmp
xor
push
dec
out
push
mov
incb
int
bound
pop
test
jg
daa
xchg
inc
ss
aam
jbe
inc
pop
inc
cmc
lock
in
in
xchg
sbb
add
fneni(8087
loope,pt
jle
pop
idivl
aas
cmp
les
or
loope
cmp
mov
enter
or
adc
push
mov
or
std
push
or
push
ss
mov
cmc
push
mov
mov
stos
sti
dec
inc
scas
fwait
mov
fldt
jbe
clc
rorl
mov
push
jmp
sub
mov
in
dec
mov
sbb
dec
lcall
mov
add
xchg
push
andl
mov
rorl
in
push
sti
dec
adc
mov
aam
cmp
adc
xchg
adc
inc
clc
add
adc
ds
push
push
or
jmp
int
xchg
dec
push
imul
mov
jns
xchg
or
insb
push
cmp
sahf
ret
cmp
cmp
sub
notl
adcb
push
cmpsb
cmpsb
jnp
test
pop
imul
inc
scas
in
xor
push
cwtl
cmp
sbb
mov
ret
sub
test
add
aad
or
testb
test
xor
xchg
lret
repz
or
xchg
xor
popa
dec
les
out
cmp
pop
es
clc
or
shl
sarb
inc
std
fs
dec
pop
cld
mov
mov
mov
or
jle
pop
lret
popa
clc
insb
dec
dec
test
xlat
andl
push
xchg
xchg
jno
scas
ss
leave
fnstsw
xorl
lods
gs
adc
rorb
dec
pop
sbb
sub
add
test
cwtl
out
or
xlat
out
cmc
lret
es
dec
mov
outsb
adc
xor
sbb
sbbl
mov
pop
aaa
or
sbb
je
int3
add
xlat
shrb
push
int
enter
popa
mov
scas
xchg
add
inc
ljmp
jb
fxch
rcrl
cltd
dec
and
lret
pop
lcall
push
adc
orl
jbe
jnp
sbb
std
xor
fistpll
aas
std
inc
cmp
cwtl
inc
in
cld
gs
popa
xchg
xchg
jnp
mov
xchg
cmc
cmp
int3
repnz
aad
into
mov
cmp
addr16
lds
adc
fbld
cmp
cmpsb
jge
push
out
adc
fwait
push
mov
shlb
push
or
push
and
mov
and
testb
shl
mov
fnsave
add
cmpsb
cmp
shll
and
push
xchg
icebp
push
adcl
dec
push
dec
jle
or
jl
lea
xor
cmp
fmuls
clc
test
sub
mov
inc
sub
add
add
mov
pop
insl
movsl
pushf
inc
mov
xor
sbb
clc
and
clc
cli
clc
cmp
dec
mov
push
pop
inc
mov
ror
cld
fcomip
mov
bound
cmpsb
faddl
test
mov
push
stos
dec
xor
xlat
mov
imul
push
outsl
es
int
call
fwait
push
cmpsl
mov
outsl
int
add
mov
lcall
out
sbb
sub
and
jbe
push
xchg
mov
and
fildll
mov
cmpsb
adc
jno
pop
loope
les
lret
inc
mov
inc
in
arpl
dec
sbb
push
stos
aas
mov
cmp
fwait
or
push
lret
in
mov
rclb
xchg
into
adc
jae
scas
out
xchg
jo
sub
xor
push
mov
add
sbb
dec
ss
pop
imul
loopne
pop
push
cmp
xchg
pop
push
add
setb
stos
sahf
lret
lea
loope
mov
xchg
ret
cmp
scas
dec
push
lcall
xchg
mov
inc
mov
mov
and
stc
data16
in
scas
mov
sub
aam
adc
and
sti
mov
scas
orl
loope
push
shlb
imul
lret
in
jne
adc
lods
jnp
lock
push
jnp
pop
inc
fisttps
stos
in
xchg
fidivrl
insl
and
mov
mov
adc
cld
fidivrs
sbb
and
lea
xor
add
ret
mov
and
pop
and
cmp
icebp
aaa
cltd
out
cli
aad
pop
xor
lea
push
or
add
lret
mov
mov
out
mov
dec
test
dec
mov
cwtl
jbe
sbb
aam
popl
sub
js
xor
aas
jmp
cltd
js
cmpsl
imul
cmp
jo
xchg
out
hlt
xchg
push
add
cmp
cmpsl
cmp
les
dec
orb
inc
rorl
inc
ds
jnp
xlat
adc
in
daa
stc
scas
xchg
jne
xchg
icebp
xchg
iret
jne
and
int3
sar
mov
pushf
cmc
xlat
push
test
and
push
rclb
mov
xchg
inc
in
inc
push
fistpl
daa
test
cmp
idivl
roll
push
rclb
xor
lea
dec
sub
cmp
cwtl
test
mov
int3
mov
inc
sbb
outsb
lcall
nop
adc
mov
cmp
pop
xchg
mov
cmp
int3
daa
pushf
push
out
and
rol
cmp
aad
sti
push
test
mov
imul
scas
xchg
push
add
enter
daa
in
cmpsb
popf
sub
jle
inc
pop
lret
test
and
testb
jmp
stos
lods
lcall
popa
ficoms
push
sbb
out
mov
push
rcrb
inc
xchg
psubusb
ror
adc
test
fimull
xor
sbb
sub
pop
andb
fwait
js
out
lcall
xchg
mov
outsb
and
push
aam
xchg
cmp
inc
sti
or
flds
mov
xor
mov
icebp
mov
and
mov
dec
jmp
cld
jecxz
daa
mov
aam
lret
mov
sbb
ja
into
imul
jns
aam
out
xchg
mov
xor
sbb
imul
cwtl
jle
jecxz
pop
sysret
jns
mov
or
cmp
cmp
and
adc
adc
xor
push
cmp
mov
mov
lahf
popa
mov
fwait
push
xor
cmp
subl
xor
int3
cmpsl
xor
dec
adc
stos
xchg
ret
fstpt
jge
mov
mov
pop
rcll
daa
pushf
dec
cli
cs
cmpsb
mov
pop
pop
cltd
loope
repz
movsl
push
insb
mov
push
loop
cli
push
or
inc
cmp
mov
mov
inc
fadd
gs
pop
or
test
pop
nop
les
loope
mov
pop
in
jecxz
or
push
lods
ret
cmp
pop
dec
loope
add
js
aas
mov
jbe
scas
lahf
stc
stc
rcl
stos
add
aas
pop
pop
cmp
xchg
mov
cmc
test
or
cmp
push
mov
mov
jp
cmp
test
ja
sbb
push
and
inc
fs
ret
movsb
lretw
in
push
xchg
sbbl
nop
mov
outsb
ja
bound
sub
mov
sbb
fs
ss
and
and
cmp
push
jb
push
aas
lahf
notb
incb
fs
aam
outsl
lods
pop
hlt
adc
rolb
jo
bnd
rcrl
cmp
divb
dec
popf
and
or
mov
inc
cmp
jl
scas
and
lret
pop
cmpsb
add
loop
loope
add
ret
mov
cld
fsub
cmp
stos
add
xchg
rorl
sbb
pop
adc
pop
popf
mov
xchg
lods
dec
lret
lock
fs
adcb
push
in
xor
push
jb
rol
ljmp
adc
xor
xchg
scas
test
bound
xor
jg
inc
mov
jp
or
lret
loop
aam
cld
or
and
xlat
adc
jns
pop
xchg
or
and
jmp
push
push
leave
adc
lahf
or
dec
mov
cmp
push
cli
fcomps
mov
int
xchg
mov
sbb
jp
xor
pushf
sahf
ret
cwtl
cmp
pop
push
jp
je
sti
fistpl
rolb
mov
dec
xor
outsl
addb
or
mov
adc
push
mov
push
pop
mov
adc
sbb
fnstsw
pop
add
xchg
in
dec
pop
lods
xor
cmp
inc
add
xor
sub
mov
out
rol
mov
mov
adc
mov
cmpsl
lea
out
mov
or
aas
cs
mov
push
add
lret
cmp
mov
push
fs
das
sub
dec
aas
xor
jbe
push
jmp
dec
jecxz
movsl
aaa
rcrb
pop
lea
sbb
inc
dec
imulb
or
xchg
insl
adc
cmp
adc
cmp
rol
sub
pop
repnz
jno
movsl
clc
mov
js
imul
inc
cmp
pop
xchg
push
out
insb
stc
int
sahf
lret
pop
test
int3
push
pop
xchg
xor
jp
inc
inc
stos
push
dec
sahf
sbb
and
fcom
mov
scas
ret
push
xchg
adc
loop
into
rcl
ret
dec
pop
xor
stc
mov
push
push
loopne
ds
dec
pusha
lcall
sti
ret
xchg
stos
in
decl
mov
cmc
arpl
int
iret
int3
aas
xchg
xchg
dec
lcall
cmp
mov
das
addr16
mov
pop
mov
cmp
sbb
cltd
dec
adc
les
arpl
std
ret
mov
adc
push
movsl
or
sub
push
aaa
jp
inc
cs
mov
xchg
push
loopne
xchg
mov
adc
in
insl
mov
lahf
jmp
jbe
leave
add
bound
lds
mov
sti
in
xchg
xor
cmc
je
mov
cmp
loop
cmpsb
shrl
add
jae
jg
inc
in
sub
or
pcmpgtd
jb
xchg
xchg
in
lock
insb
nop
inc
shll
xor
adc
pop
in
xor
adc
je
fcmovu
cld
inc
fldl
into
nop
cmpb
arpl
mov
mov
popf
push
mov
scas
sbb
xchg
scas
pop
sub
push
orb
scas
or
jge
jne
ret
leave
jne
pop
xor
inc
mov
ret
xchg
out
jne
mov
mov
mov
insb
stos
mov
adc
fbstp
push
sub
insl
aas
inc
push
dec
cs
dec
sub
testb
inc
sbb
out
rcrb
sub
push
lds
pop
or
mov
addl
sti
mov
add
pmulhw
cltd
lods
fdivl
push
ljmp
xchg
pop
fs
mov
xor
xchg
repnz
mov
pop
divl
and
pop
addr16
pop
cmp
adc
xchg
mov
aas
dec
scas
pop
lret
or
insb
xor
int3
movsb
xor
dec
sbb
test
cmp
scas
into
pusha
pop
shll
int
inc
aad
sub
scas
xchg
loopne
imul
push
ror
pop
inc
ds
mov
adc
arpl
sbb
pop
andb
or
add
iret
inc
orb
cmp
ljmp
push
adc
mov
in
or
push
fsubrl
test
or
outsl
mov
jmp
or
inc
incl
push
scas
mov
pop
lods
pop
push
aas
dec
adcb
pop
mov
jo
sub
or
xchg
loopne
mov
nop
sbb
enter
test
mov
adc
mov
xor
in
dec
and
xchg
and
or
je
or
jge
add
stc
out
ss
in
in
fmull
sbb
mov
add
xchg
mov
dec
xchg
into
lcall
or
fs
fld
inc
out
fmull
icebp
les
out
sub
sub
inc
mov
nop
push
jmp
testb
nop
addb
xor
pop
int3
outsl
sub
ljmp
inc
push
mov
and
xchg
mov
in
test
cmpsl
mov
aam
mov
outsl
int
jne
mov
divb
cmp
xor
pop
inc
cmpsb
mov
sub
ret
div
mov
push
nop
outsb
push
cmp
xchg
stc
ret
jmp
xor
xchg
test
push
dec
pop
mov
aam
aad
adc
push
jecxz
cmc
sbb
jnp
or
or
in
push
cwtl
in
xorb
dec
bound
sbb
iret
test
insb
stos
inc
xor
pop
js
imul
dec
jb
lcall
add
out
dec
push
pop
dec
adc
mov
je
xchg
stc
mov
lock
cmp
sbb
gs
cmp
sbb
rorl
int
add
test
lcall
fsts
push
sub
sub
xchg
inc
mov
hlt
fwait
aad
inc
pop
sahf
in
sub
in
cmpsl
sbb
sub
mov
pushf
mov
mov
or
cmp
mov
dec
inc
dec
xor
or
shrb
fldl
pop
mov
xchg
xor
flds
push
jb
mov
fucomp
jle
cmpb
iret
xchg
cld
fwait
lds
roll
xchg
test
xchg
push
inc
push
mov
pushf
jne
sub
sahf
loopne
arpl
icebp
es
dec
insl
out
xchg
call
clc
sub
mov
xchg
hlt
roll
inc
lahf
push
sub
and
inc
sbb
fmull
int3
mov
dec
loopne
or
call
or
fsubl
in
cmpsb
pop
lcall
xlat
mov
imul
add
sbb
xor
jge
int
cmc
pop
cmp
dec
cmp
jp
sbb
or
mov
dec
test
sahf
fistl
push
loopne
jno
fisubrs
cmp
xor
repz
mov
inc
xor
lods
mov
mov
daa
in
adc
dec
cmpsl
stos
shl
xchg
adc
out
repz
jno
inc
mov
dec
sbb
sub
mov
fnstcw
and
int
push
stos
mov
inc
out
imul
lock
cmp
scas
inc
xor
dec
andl
out
cmpsl
inc
ret
gs
lods
mov
push
rcrl
cmp
and
mov
nop
aad
cmp
ja
cmpsl
js
cmpl
push
cmc
cmp
cmpsb
jno
xchg
sub
test
sub
stc
movsl
xchg
sbb
dec
pusha
sub
mov
xor
xchg
dec
daa
pop
stos
push
dec
cmp
nop
imul
jne
cld
ja
outsl
insb
movsb
xor
sub
mov
mov
dec
jg
add
enter
add
mov
dec
or
icebp
imul
adc
int
pop
and
addr16
fs
sbb
adc
mov
stos
sar
loop
cmc
mov
mov
adc
jno
mov
fs
and
sbb
fstl
in
lds
mov
mov
xorl
in
lcall
push
dec
jle
mov
out
orb
pop
insl
push
adc
mov
xor
dec
mov
out
out
hlt
ret
add
les
movsb
sub
ss
jo
fs
mov
popa
mov
pop
in
cltd
mov
loopne
add
lds
iret
cwtl
in
push
dec
jge
pusha
cmp
mov
or
jnp
sti
in
and
imul
dec
xor
push
or
xchg
mov
lret
es
xchg
adc
pop
inc
jl
xchg
stos
cmp
aam
fistpl
sub
push
jl
jne
mov
fsubl
mov
or
adc
scas
into
dec
mov
inc
mov
je
jl
adc
jb
mov
ss
sbb
lock
fstpt
xor
push
pop
and
xor
cmp
stos
and
mov
dec
lret
xchg
xor
sti
stc
xor
adc
mov
into
lds
add
insl
add
sbb
fisttps
sbb
add
repz
testb
xor
mov
cwtl
xchg
addl
mov
int
in
mov
mov
cmp
loopne
shlb
sahf
mov
cmp
cmp
pusha
sbb
shl
push
jnp
mov
mov
sbb
add
and
mulb
dec
mov
repz
xchg
cmp
sub
add
stc
xchg
dec
into
imul
xchg
scas
pushf
mov
pop
and
enter
rcrl
divb
leave
mov
sarb
ret
mov
lds
inc
leave
lods
out
inc
xchg
sbb
dec
int3
aad
push
mov
xchg
pop
leave
ret
push
outsl
dec
loopne
fwait
sbb
fbstp
xchg
or
in
fwait
test
mov
dec
adcb
arpl
or
push
add
xchg
rcrl
inc
test
in
and
push
into
dec
imul
fiadds
sbb
enter
dec
lret
jb
push
sub
adc
cmpsb
adc
jns
lea
jbe
hlt
out
out
lock
leave
movsb
cli
sub
stos
je
push
pop
mov
scas
add
dec
fisttpl
inc
and
pop
sti
pop
stos
dec
lret
xor
push
mov
jle
push
out
es
sbb
pop
ficoml
out
icebp
xor
lods
adc
cld
push
and
testl
ljmp
xor
mov
xchg
cmpsb
sub
scas
jo
push
ljmp
mov
push
dec
ret
or
jmp
push
dec
jno
inc
fsts
mov
xchg
mov
stos
xchg
cltd
sbb
and
cmp
push
cld
aas
xor
sub
sbb
lds
mov
sti
push
std
mov
das
into
pop
pop
or
loope
sbb
outsl
repnz
scas
and
fdivrs
add
ret
test
lahf
mov
jle
sbb
fistl
pop
gs
movsl
lods
add
jl
nop
and
inc
pop
or
loopne
mov
arpl
mov
mov
push
test
ljmp
pop
aas
cmpsl
ds
xor
ja
pop
xchg
shrb
sahf
loopne
movaps
jmp
popf
jne
lods
mov
cmc
dec
cmp
hlt
and
sub
popa
outsl
push
sbb
jl
out
add
stc
repz
xor
mov
xor
mov
test
loope
cmpsb
test
add
dec
sbb
xchg
dec
pop
pop
jbe
mov
hlt
xchg
xor
or
jecxz
or
outsb
imul
mov
jbe
ret
mov
loop
je
pop
sahf
cmp
pop
adc
gs
add
dec
addr16
sarl
ds
xlat
pop
mov
push
pop
in
push
jo
out
push
int3
dec
xchg
xor
loopne
call
movsb
rcrl
inc
xchg
sub
int
or
loopne
sub
rclb
mov
xchg
je
add
sub
outsl
xchg
test
adc
mov
mov
lock
mov
pop
add
scas
clc
pop
mov
pop
outsl
inc
push
xor
fmuls
jns
shrl
or
jo
cmpsb
push
nop
das
push
daa
in
fstl
sub
jne
xor
mov
push
outsl
das
imul
pop
add
imul
inc
call
mov
stos
sbb
xchg
fcompl
jmp
fucomip
shll
fdivrl
and
push
call
or
adcl
loop
adc
aad
das
test
cmp
cltd
cmp
sub
jmp
xor
sbb
push
pop
xchg
orl
jne
pop
and
mov
inc
mov
inc
or
mov
jbe
lret
mov
xchg
dec
in
fists
bound
aam
inc
popa
fistpl
xchg
cmp
pop
sub
sbb
xchg
imul
incl
popf
push
dec
pop
jns
pop
icebp
cmc
call
test
xchg
xchg
call
scas
movsl
mov
sbb
leave
movsb
fmull
lds
lea
adc
hlt
push
push
jo
mov
sbb
mov
pop
push
scas
lods
loop
sub
gs
cmp
imul
and
in
js
mov
insl
add
xchg
or
sbb
inc
push
jle,pn
xchg
xchg
sub
jp
fsubrl
rcrb
cmp
jmp
arpl
and
fwait
and
leave
adc
add
mov
xlat
xchg
jle
mov
sub
stc
add
out
je
jg
cli
cld
jge
cmp
sahf
and
imul
hlt
leave
mov
mov
mov
call
xor
sub
aas
xor
push
cwtl
mov
loopne
xchg
imul
jle
xor
jmp
popf
and
mov
or
push
dec
or
xchg
int3
out
mov
lret
xor
add
shlb
and
movsb
dec
xlat
ds
sahf
push
and
out
add
mov
aaa
jae
clc
push
and
and
decb
mov
push
or
sbb
stos
xor
pop
fcompl
ljmp
rorb
jno
test
stos
dec
mov
xchg
fidivrs
mov
inc
mov
mov
push
inc
pop
out
ds
popa
loop
ljmp
movsb
push
movsb
xor
test
cs
mov
dec
pop
stos
xor
aam
lods
mov
ficoml
test
inc
and
lds
dec
lds
mov
notl
rcl
leave
push
ljmp
mov
pushf
jns
cmp
mov
sub
push
lock
and
sbb
push
cwtl
enter
ret
push
scas
ljmp
jecxz
sub
fmuls
cli
inc
or
and
dec
jmp
enter
sbb
cmp
mov
and
imul
xchg
sbb
push
lea
inc
mov
dec
int
shlb
lea
mov
cmp
aas
push
mov
mov
mov
inc
lcall
xchg
adc
mov
xorl
jmp
add
mov
inc
leave
testl
ss
fwait
imul
daa
das
fxch
fcomi
loop
pop
xchg
or
mov
xchg
dec
rcrl
dec
ds
mov
inc
sub
aas
push
sub
les
sub
cmp
sub
add
test
stos
adc
mov
xchg
dec
enter
mov
push
pop
xchg
pop
out
mov
lds
leave
rclb
lret
xchg
aaa
sub
pusha
xchg
scas
sbb
das
inc
je
sbb
inc
add
xor
movsb
in
and
fwait
xchg
mov
ljmp
imul
jb
in
fisubl
lods
mov
lods
mov
mov
data16
or
push
faddl
mov
xchg
adc
gs
mov
inc
sbb
add
out
jg
aad
sbb
cmpsb
xor
xchg
mov
pop
stc
out
sbb
xchg
pop
test
jno
and
lea
pop
dec
lea
fnstsw
scas
fnsave
jbe
sub
push
inc
add
iret
mov
arpl
cmp
adc
icebp
mov
shll
inc
or
bound
sbb
xlat
cmpsl
or
push
addr16
jno
divb
inc
and
lcall
fs
in
pop
mov
xlat
fstpt
xchg
stos
mov
daa
adc
sub
movsl
loopne
in
or
mov
std
shll
and
call
leave
sub
mov
pushf
add
lcall
mov
test
ja
inc
sbb
xchg
jo
dec
push
cmp
push
popf
sbbl
outsl
test
jle
lods
aaa
add
cltd
dec
loopne
dec
mov
out
xchg
vmread
mov
mov
aaa
mov
pop
pop
sbb
push
in
enter
or
pushf
daa
out
orb
negl
test
xor
jg
call
add
arpl
inc
add
jge
scas
sub
loop
cli
dec
ljmp
sbb
js
loop
cmp
pop
sahf
dec
andps
aaa
mov
pushf
mov
inc
mov
mov
pop
aam
repnz
mov
and
jnp
fcmove
je
shll
aam
or
sahf
rcrl
inc
xor
leave
or
shrl
push
dec
pop
sub
int3
jno
shr
xchg
addr16
repnz
popa
nop
xor
test
dec
fdivrl
aaa
cmpsl
ds
push
dec
lea
sub
nop
cs
out
pop
in
mov
push
add
dec
pop
scas
mov
push
pop
test
inc
inc
xchg
aad
add
or
xor
cmp
sahf
test
dec
out
subb
adc
and
jmp
sahf
hlt
add
push
in
or
jo
cmpsb
push
and
shll
pop
decl
inc
push
iret
mov
movsb
outsl
inc
jmp
lods
xchg
cmp
loopne
fwait
cmpb
xor
addr16
xchg
push
lods
jp
adc
scas
shrb
popf
out
outsb
pop
jns
cltd
dec
fwait
pop
data16
jl
idivb
int
push
sarb
jg
jno
std
push
push
stos
inc
sbb
in
xchg
mov
mov
dec
jle
stos
cli
sub
mov
inc
movsl
mov
sbb
xchg
inc
xchg
imul
mov
pop
jno
clc
mov
fimuls
ret
mov
aaa
mov
cwtl
inc
mov
dec
daa
sbb
int
dec
stc
jecxz
mov
decb
mov
out
pop
stc
mov
stos
and
popf
int3
movsl
daa
aaa
insl
call
sbb
jg
push
adc
int3
gs
jp
cltd
add
push
adc
adc
pop
or
mov
jle
stos
scas
mov
mov
fadd
lock
sub
les
sub
iret
add
adc
mov
outsb
and
in
adc
mov
cmp
mov
pop
in
nop
mov
mov
je
push
aaa
and
push
add
out
data16
outsb
iret
jnp
push
addr16
icebp
or
push
jb
loop
ja
fistpll
and
jl
fimuls
xor
add
xchg
mov
popf
rcrb
ja
jbe
arpl
stc
in
fcompl
mov
out
push
cmp
scas
test
mov
mov
sub
pop
jae
add
dec
vxorps
pop
pop
lods
adc
or
cltd
inc
vmovaps
movsb
cltd
call
push
nop
pop
imulb
jecxz
subb
push
inc
dec
pop
push
inc
mov
in
sub
push
data16
testl
push
test
jmp
imul
sub
aaa
jl
cmpb
aas
add
jo
fwait
ljmp
in
sar
dec
fsubl
cmp
dec
pusha
ret
or
xchg
bound
iret
mov
daa
ret
xchg
js
pop
jmp
es
fwait
pushf
xor
out
sub
ret
imul
sub
incl
mov
pop
imul
clc
out
cmpsl
xor
pop
add
xor
or
mov
cmpsl
mov
jae
xor
xchg
dec
lret
rcll
mov
mov
cld
mov
aam
in
cltd
jl
pop
add
xchg
xor
mov
add
popa
nop
mov
jnp
push
clc
iret
call
add
fisttpl
xchg
lret
repnz
add
cmp
mov
sbb
jmp
inc
jns
clc
inc
sub
std
sub
repz
repnz
xor
dec
js
test
mov
outsb
nop
xchg
lods
imul
es
mull
push
insb
pop
push
and
mov
shll
hlt
jnp
or
push
jmp
mov
dec
outsb
lock
inc
in
popa
lcall
fwait
arpl
inc
pop
mov
cli
loope
mov
xchg
jo
adc
popf
jge
nop
je
out
push
inc
fs
pop
or
cmp
dec
call
fwait
inc
or
xor
ficoms
movsl
adc
push
push
pop
push
pop
arpl
lods
lret
in
outsl
enter
pop
ds
inc
test
inc
lret
decl
into
inc
loop
lock
lahf
cmpsb
cmp
xchg
jl
enterw
pop
out
mov
test
mov
cmc
clc
mov
inc
pop
iret
fsubrl
imul
out
lds
xchg
add
sbb
fwait
leave
dec
sbb
cmpsb
sahf
jae
xor
push
lcall
mov
mov
test
call
add
jmp
sahf
mov
jae
repz
scas
adc
and
inc
inc
mov
sbb
push
in
push
adc
sbb
movsb
fdivrl
sbb
mov
arpl
sub
ja
sbb
dec
cmp
cmp
adcl
and
test
or
mov
xorl
push
popa
std
jb
push
rol
imul
ret
pop
xchg
xchg
cli
and
sub
push
fs
jecxz
loopne
xchg
pop
fcomp
pop
orb
jb
into
mov
or
test
jnp
cmp
je
aam
scas
xchg
jne
lds
and
sahf
mov
and
cli
pusha
push
lds
mov
sub
adc
sbb
mov
aam
dec
ss
sbb
inc
push
faddl
aad
das
sub
in
lahf
repnz
pop
mov
lds
add
mov
fyl2xp1
nop
inc
outsl
inc
inc
pushf
sub
pop
repz
lret
mov
pop
add
mov
cmp
fwait
dec
jmp
lret
mov
or
inc
mov
lcall
mov
adc
xchg
rolb
jo
cmp
test
inc
divb
push
mov
les
jge
lods
push
xchg
push
pop
hlt
scas
jne
push
and
cli
cwtl
sbb
jne
sti
and
push
jnp
sub
inc
rcr
mov
int3
pusha
cmp
jmp
lret
cmp
push
cld
fisubl
dec
popa
push
int
mov
dec
jp
or
not
test
shl
int3
jp
and
pop
les
out
push
xor
mov
stos
in
inc
xor
jle
mov
push
es
xchg
xchg
js
stc
sbb
dec
pop
bnd
lcall
xlat
mov
add
cwtl
pop
das
cmp
les
gs
stc
lods
arpl
and
mov
jns
out
jo
mov
pusha
pop
clc
je
movsb
loop
in
mov
adc
loopne
or
js
arpl
adc
sbb
stos
jg
jmp
out
sub
mov
fwait
pop
xchg
sbb
lea
xor
pop
cmp
lods
daa
jecxz
mov
pop
lahf
mov
lea
or
call
lea
ret
inc
add
jno
mov
addr16
adc
jo
icebp
xchg
outsb
outsl
dec
add
pop
jecxz
imul
scas
jbe
cmc
cmp
in
cli
andl
xor
in
popf
or
mul
sbb
pop
clc
dec
mov
lea
ficomps
pop
repz
aaa
sub
nop
fiadds
adc
stos
loope
or
fstl
xchg
pop
dec
jp
rorb
orl
adc
scas
mov
xchg
add
push
ret
jae
add
mov
pop
jne
dec
xchg
cmp
sahf
jmp
jnp
ja
or
pushf
inc
mov
mov
xchg
sub
aaa
and
imul
mov
inc
adc
std
xchg
add
adc
aaa
xchg
cmpsb
cmp
repz
mov
lahf
test
gs
mov
cmp
enter
fisttps
adc
lods
inc
inc
dec
das
xorb
hlt
xor
pop
out
mov
addb
shrl
cwtl
add
mul
dec
mov
ja
inc
jl
mov
sub
addr16
hlt
add
jne
add
mov
dec
addr16
pop
xchg
daa
sahf
xchg
ja
inc
mov
fisubs
std
ja
adc
xor
pop
xor
test
ja
fildl
mov
movsl
inc
movsl
or
xchg
and
and
jle
cld
rcrb
shll
xchg
cli
sub
jnp
call
lcall
pop
das
push
in
hlt
insb
mov
ret
ljmp
sbb
push
dec
fs
dec
xchg
out
imul
loop
dec
xor
pop
fsubs
incb
data16
std
pop
divb
test
jl
pop
inc
lods
mov
push
outsb
jp
cmp
jo
mov
push
push
cmpsb
push
cli
pop
cltd
sarb
jnp
mov
sub
push
push
lret
imul
out
inc
inc
cmpsb
fs
inc
or
sub
dec
dec
mov
and
cmp
lahf
mov
mov
sbb
lret
cltd
cli
mov
dec
fucomi
add
out
enter
fdivl
xchg
stos
add
add
dec
test
or
jae
mov
shlb
xchg
sub
xor
push
rclb
sub
cmp
add
jns
inc
aas
jne
stos
mov
sahf
mov
mov
jl
nop
dec
imul
sahf
xchg
jge
cmp
dec
cltd
and
xchg
jae
and
pop
lea
mov
inc
adc
mov
mov
mov
jl
pop
or
and
ret
push
mov
fistpl
sub
xchg
jns
cmc
les
dec
psraw
popa
icebp
dec
sbb
ficoms
mov
scas
xor
bound
push
mov
js
andl
mov
mov
repnz
sbb
popa
fwait
movsb
mov
cs
lods
jl
iret
push
jb
nop
daa
or
xor
sbb
cmp
inc
gs
imul
mov
ret
subl
loopne
mov
cld
dec
popa
sub
push
add
loope
add
fwait
jl
sti
xchg
out
out
mov
jno
cwtl
pushf
andl
clc
sbbb
pop
imul
sbb
adc
xchg
cwtl
adc
hlt
adc
scas
push
clc
test
outsb
ret
jge
scas
inc
rclb
cmpsl
fstpl
or
push
lcall
or
jle
adc
cwtl
incb
dec
insb
sahf
cld
testl
scas
into
xor
jnp
lret
sbb
pop
jno
in
cwtl
icebp
sbb
in
sbb
push
insb
sub
sbbl
rclb
bound
in
adc
cmp
jne
xor
fwait
stc
sub
cmp
xchg
jg
mov
jg
mov
and
nop
movsl
dec
jl
outsl
adc
in
jp
movsl
add
in
shlb
jle
adc
push
movsb
lds
push
imul
insl
pop
lcall
add
imul
movsb
adc
mov
adc
and
pushf
dec
shll
insb
jns
sar
jbe
incb
mul
or
imul
scas
jecxz
mov
dec
add
xchg
mov
adc
mov
jle
adc
sub
or
xchg
enter
in
dec
mov
fninit
das
hlt
and
adc
dec
push
cmp
sbb
out
out
data16
pop
dec
pop
pop
scas
mov
pop
aas
mov
add
out
sub
adc
mov
adc
aaa
jl
cs
rcrb
pop
cmpsb
and
scas
lret
iret
iret
movsb
test
dec
dec
inc
ret
jecxz
pop
rcll
fisttpl
sbbl
icebp
scas
hlt
mov
and
nop
pop
xchg
jb
mov
cmp
fimuls
sbb
xor
jmp
push
fimull
and
int3
cmp
ljmp
fs
push
push
cmpsb
jno
jne
std
xor
loop
inc
pop
call
jno
lahf
popa
add
cmp
int3
mov
popa
movsl
adc
jl
aam
push
adc
fsubl
and
aad
sbb
jno
addr16
xchg
xor
jbe
add
xchg
jle
xchg
inc
imul
leave
sti
shl
movsl
std
loop
cwtl
xchg
mov
sti
cmp
push
and
jmp
lock
jne
pusha
lods
lds
orb
push
pop
jle
and
push
and
repnz
test
push
fbld
inc
jno
test
repnz
pop
or
ss
add
bnd
aaa
out
stc
sub
push
cli
mov
push
jae
addr16
stc
outsb
inc
pop
adcl
or
jo
inc
xchg
sbb
push
and
pop
mov
lods
das
aas
lods
dec
cld
jo
fnsave
inc
jle
cmp
aam
jg
pop
jg
adc
lahf
insb
push
out
push
xlat
ficoml
dec
xor
ss
frstors
push
push
add
scas
out
pop
jle
js
mov
hlt
popf
push
aam
fstpt
mov
lods
addr16
dec
in
insb
imul
cmp
sbb
jmp
or
mov
xor
jge
pop
movsl
jg
xchg
int3
push
out
fwait
arpl
movsb
gs
xor
iret
cli
sub
cltd
test
mov
aad
or
push
mov
fisubl
shlb
popa
lahf
outsl
inc
movsl
sub
xchg
dec
mov
add
fidivl
and
loop
push
and
fcomps
inc
mov
ud0
cmp
mov
sarl
int
stc
out
inc
jmp
add
sub
push
fidivl
and
push
shll
pop
in
xchg
movsl
fstpl
mov
mov
dec
in
outsb
dec
mov
dec
mov
lods
dec
or
shll
or
inc
mov
in
pop
dec
xchg
ja
inc
ficomps
loop
jns
and
pop
ss
pushf
aaa
rorl
out
adc
pop
mov
stc
jle
bound
mov
in
push
mov
push
stos
sub
mov
xor
mov
imul
jmp
js
ds
or
fdivp
ret
cmpsb
loopne
into
nop
xchg
inc
in
pop
int
lea
add
mov
dec
and
in
hlt
data16
xchg
inc
xchg
in
add
popa
xchg
jmp
push
sbb
repz
xor
xor
sahf
mov
push
jb
push
pop
out
adcl
push
adcl
stos
and
out
out
xor
push
push
fsubrl
xor
pop
out
fs
mov
xor
int3
push
cli
sarl
jns
loop
dec
add
insb
lret
test
lahf
cmpsb
sti
pusha
dec
dec
aad
mov
xchg
mov
sub
vmaxps
mov
mov
mov
inc
and
pop
xor
xchg
inc
fisttpl
shlb
or
pop
cmc
stos
ss
scas
jb
add
ret
mov
es
add
push
sbb
push
adc
mov
pop
mov
adc
repz
xchg
mov
pop
cli
sub
mov
pop
xchg
repz
adc
cmp
adc
int3
andl
jmp
push
loopne
pop
add
sbb
je
sbb
mov
ss
sbb
xor
push
push
jno
cmp
add
ds
ret
aam
dec
jl
mul
dec
lret
or
sub
jle
outsb
dec
xchg
jmp
scas
pop
add
mov
repnz
jmp
imul
das
xchg
cmp
bt
mov
movsl
mov
test
mov
aas
scas
push
out
cltd
fwait
ror
test
pop
push
pop
shll
and
mov
lods
xchg
and
fs
test
js
mov
aaa
dec
and
repnz
add
add
lock
dec
inc
pop
sub
sarl
leave
mov
cltd
rclb
xor
jns
iret
inc
dec
adc
movd
rcrb
push
je
sti
stc
xchg
test
jecxz
jbe
lods
xchg
test
adc
ret
iret
adc
loop
stc
sbb
sub
iret
mov
popa
test
std
lret
mov
nop
je
pushf
test
push
push
stos
fnstsw
sahf
loopne
push
mov
sub
sbb
jo
mov
jae
mov
sarl
test
adc
push
stos
loop
sub
and
cmp
fdivl
xor
sub
fidivrs
xor
call
std
mov
das
neg
jbe
leave
arpl
sub
ss
shll
mov
test
pop
ds
sub
pop
mov
into
jecxz
xchg
sarl
out
les
xor
aaa
decl
call
aad
loopne
jmp
push
imul
sbb
inc
and
add
in
aam
pop
dec
cmc
mov
repnz
mov
adcl
dec
pop
mov
das
into
mov
pushl
jb
roll
out
cwtl
lahf
test
fcoml
fstl
xor
push
or
dec
mov
mov
sbbl
push
push
add
pop
je
cmp
add
cs
sub
test
mov
ret
mov
and
jbe
and
add
adc
mov
pop
jbe
mov
jl
inc
xlat
xor
push
push
sub
and
stc
or
cld
xor
out
ds
jo
jnp
xor
into
sub
shlb
or
cltd
mov
sbb
fldt
fsub
shr
orb
or
bound
ja
push
mov
jp
add
lods
push
fsts
jl
inc
es
dec
pop
mov
stos
xchg
sub
sbb
lea
test
xor
pop
out
pop
rorl
and
je
clc
pushaw
and
fistl
jbe
je
or
sub
push
sbb
mov
push
cltd
es
xchg
cmp
scas
push
or
inc
push
xchg
add
inc
test
cld
daa
cmpb
leave
lds
pop
cmpl
mov
pop
insb
jo
imul
sub
or
cld
pop
and
mov
gs
enter
loope
jnp
cmc
std
and
adc
rclb
aas
loopne
je
inc
loopne
inc
sbb
mov
insb
aas
icebp
cmp
paddsb
rcll
inc
imul
call
adc
xchg
lods
jg
dec
push
sub
push
push
lds
xor
outsb
fcompp
lods
and
pop
nop
out
test
imul
xchg
add
jl
push
test
test
xor
mov
inc
roll
mov
aas
mov
stos
lods
repz
mov
mov
push
jb
scas
js
lods
jns
es
out
sub
hlt
out
sbb
nop
or
and
and
sbb
lods
xor
in
xor
cmp
fistl
dec
pop
insb
xchg
sub
mov
fcmove
jecxz
sbb
loopne
adc
sbb
xor
fistpl
fwait
push
cs
je
fs
cmp
icebp
adc
and
sub
add
push
dec
loop
lods
cs
xlat
mov
ja
jbe
xor
add
pop
fidivl
mov
test
aam
jp
ja
int3
pop
mov
leave
sti
dec
repnz
dec
xchg
push
pop
cmp
jg
inc
mov
fimull
inc
insb
sub
imul
das
fstl
mov
add
xchg
int
repz
iret
addr16
loope
pop
fs
inc
and
stc
shrl
lret
sub
aad
mov
scas
aas
das
mov
ss
cli
push
mov
and
pushf
xchg
mov
mov
lods
or
movsb
cltd
int
and
mov
fs
test
mov
jg
sbb
jns
xchg
ljmp
bound
push
clc
inc
int3
push
inc
inc
lock
pop
inc
nop
lods
dec
imul
inc
sahf
mov
jno
repz
jl
fadd
outsb
mov
or
add
popf
push
cwtl
cmpsl
jns
out
push
push
dec
ljmp
dec
loope
lods
add
sbb
fldt
push
push
imul
dec
sbb
lock
mov
cmp
imulb
das
sbb
pop
mov
xchg
xchg
or
dec
sub
fmuls
inc
mov
xchg
adc
xchg
xlat
test
ss
pusha
lea
xor
adc
push
negb
adc
icebp
mov
dec
lods
leave
sbbb
inc
insl
jle
inc
inc
xchg
mov
dec
xchg
jno
or
xor
ficompl
mov
mov
add
cmp
cmp
jge
xor
test
mov
in
lock
dec
stos
cld
cli
int
cwtl
in
xchg
mov
notl
mov
test
out
pop
inc
fwait
stos
xor
je
xlat
mov
sub
addl
inc
leave
jnp
push
inc
ds
pusha
aaa
test
bound
sub
cli
arpl
adc
pushf
add
pop
les
sub
sub
std
sar
loopne
outsl
test
and
xor
xchg
cld
and
ljmp
add
in
xor
sbb
arpl
jno
stos
adc
mov
bound
mov
xchg
fisubrs
divl
aaa
cs
les
mov
sub
jo
xchg
sub
xor
std
dec
cltd
and
xchg
push
or
dec
lcall
sbb
inc
lock
js
cs
lock
dec
adc
push
pop
fbstp
mov
xchg
xor
pop
push
stos
mov
mov
add
cmp
ficomps
mov
lods
loopne
dec
add
mov
mov
or
nop
add
cmp
call
enter
fisubrs
stos
fwait
outsl
pop
nop
push
fisubrl
mov
cmc
loope
mov
and
rcl
pushf
fldt
imul
push
subl
lahf
jns
dec
lods
dec
inc
cmp
inc
xor
out
xchg
roll
movsb
jns
mov
push
jbe
es
add
and
int3
adc
out
sahf
adcl
std
stos
sub
pop
aam
lahf
stc
jmp
sub
mov
jns
arpl
icebp
mov
daa
mov
or
cwtl
push
pop
jmp
fistl
push
mov
stos
lock
jo
ret
xchg
je
int3
push
cmpsb
mov
in
cmc
push
rorb
jl
addb
cmpb
popf
hlt
lret
dec
jo
inc
and
or
xchg
adc
hlt
test
mov
sbb
or
xchg
sub
pop
div
data16
aaa
cmp
cmc
lds
ljmp
dec
dec
mov
xchg
xchg
test
clc
mov
jge
or
push
pop
lods
ss
into
pusha
mov
or
icebp
xchg
or
icebp
dec
and
dec
jge
cmpsl
push
data16
int
movl
and
cwtl
jge
daa
jnp
lret
sti
lods
jae
cmc
or
cld
mov
cld
or
and
jp
pop
bound
xchg
lods
mov
sbbl
dec
inc
scas
inc
aam
popa
and
ret
mov
dec
mov
lods
js
mov
addr16
fwait
mov
icebp
pop
cwtl
stc
cmp
pop
cmp
mov
sti
jp
mov
dec
mov
add
cwtl
add
inc
lret
xor
mov
je
add
add
ljmp
push
and
lods
fdivl
sahf
data16
or
in
mov
push
add
sub
or
pushf
sub
push
out
dec
xchg
in
mov
data16
sub
out
mov
xor
xor
jmp
fcomps
mov
dec
xlat
out
xchg
fsub
call
pop
mov
pop
pop
xchg
mov
add
cltd
sahf
sti
sbbl
fisubs
xchg
idiv
mov
inc
testl
cmp
cmp
cld
lret
adc
mov
lods
jo
push
push
sub
pop
cmp
mov
flds
sub
pop
push
mov
fdivl
or
pusha
xchg
fiaddl
popf
add
mov
std
mov
mov
mov
sub
sbb
sub
mov
orb
cmp
idiv
pop
push
in
cli
mov
jg
ret
pop
ds
icebp
lods
xchg
popa
cmp
push
pop
pmuludq
addl
imul
dec
test
add
jl
pop
movsb
test
fdivrp
mov
push
push
sub
cmp
cmp
dec
xchg
xor
mov
rcl
push
pusha
bound
xchg
push
inc
movsb
in
or
hlt
ja
ret
int3
cmp
movsb
mov
shl
imul
out
add
mov
lock
das
lods
mov
aam
lds
lock
repz
xchg
scas
ds
push
add
movsb
lock
pusha
inc
pusha
incb
mov
dec
imul
rorb
test
push
notl
and
cmc
fldcw
adc
test
repnz
inc
shl
rorb
pop
jle
out
mov
jle
adc
popl
pop
repnz
rol
xchg
ja
fstl
cmp
leave
jno
jge
orps
push
insb
pusha
jmp
xor
leave
or
aaa
mov
nop
mov
mov
mulb
cmp
xchg
jmp
and
lcall
jb
push
inc
mov
hlt
cmp
flds
lcall
push
pop
sarl
and
ss
test
cmpsl
adc
test
icebp
add
mov
mov
lret
mov
xor
dec
xchg
sub
js
in
out
jg
pop
rorb
sbb
mov
mov
je
inc
test
fxch
push
xchg
push
mov
test
mov
ret
xchg
xchg
scas
stos
int
adcb
fcompl
push
inc
push
je
push
push
in
gs
adc
dec
cmp
lock
dec
in
mov
inc
mov
mov
inc
push
xchg
add
sbb
adc
cmp
and
faddl
mov
jbe
lret
xor
add
leave
pusha
cmp
fcmovnbe
jp
call
cmp
jle
aaa
jo
test
lcall
dec
push
jle
pop
clc
sbbl
lcall
jle
and
add
orb
xchg
fistps
repz
inc
mov
les
mov
mov
int
imul
aaa
dec
mov
mov
fwait
sub
cmp
inc
shr
mov
in
inc
std
popf
mov
fidivs
mov
je
cmpb
loop
or
inc
add
and
and
pushf
jle
shl
lret
call
mov
sbbl
xchg
inc
inc
ss
into
xor
jecxz
xchg
gs
test
xor
je
cmp
jns
insl
mov
xchg
mov
xchg
and
mov
sub
push
xlat
aas
xchg
daa
mov
es
enter
mov
in
inc
incb
pop
xchg
aas
sti
dec
hlt
cs
mov
and
or
fs
shlb
je
push
shrb
or
insb
loope
aam
andl
ja
ljmp
jno
ja
mov
xchg
cmp
arpl
movsl
add
and
mov
pop
sub
xlat
push
lret
xchg
fdivl
lods
cmp
pusha
push
pushf
inc
mov
sar
lods
inc
lcall
lcall
cmpsb
inc
scas
test
and
fstl
and
push
mov
fstl
dec
dec
leave
in
pop
mov
iret
adc
dec
fmuls
mov
lahf
notb
sahf
sbb
in
jo
lcall
and
sbb
pop
jne
mov
int
mov
jae
popa
fisubrs
mov
adc
push
inc
sub
rorb
faddl
lcall
notl
cmp
loop
loope
mov
mov
xor
cwtl
mov
push
out
mov
xchg
out
in
in
dec
inc
or
cld
xchg
jge
sti
lahf
push
jge,pn
js
cld
xor
jne
mov
fs
bound
cmp
mov
sub
cmp
testl
or
pop
pop
xor
divps
ljmp
jle
inc
mov
popf
jns
push
hlt
icebp
in
int3
pop
lds
stos
mov
int3
push
cmp
cltd
test
stos
cmpsb
mov
or
dec
das
mov
mov
or
jb
jle
fsubs
nop
in
xchg
sbb
pushf
lret
jnp
cmc
mov
jl
loope
sub
xchg
mov
jno
mov
rclb
push
mov
cmpsb
mov
xchg
loopne
into
ret
xor
and
pushf
loope
out
or
xchg
jo
pop
add
call
sub
cmp
jmp
fadd
sub
mov
inc
cld
xor
jb
nop
add
clc
mov
push
or
insl
das
in
inc
pop
push
bound
xor
pop
or
mov
pop
aad
pop
daa
jg
fcoms
or
pop
xchg
jmp
dec
xor
mov
daa
dec
mov
push
outsb
movb
mov
mov
dec
inc
repnz
shrl
sbb
test
xor
inc
xor
pop
cmp
mov
dec
in
cmp
scas
inc
insl
les
jge
out
xorl
cmp
add
outsl
pop
fisttpll
mov
ja
int3
sbb
xchg
add
stos
and
push
stos
lahf
push
jecxz
out
and
les
insl
or
add
jmp
subb
cmp
roll
jp
push
aaa
mov
dec
imul
das
fwait
jmp
shll
insb
push
std
mov
bound
in
fst
into
and
cli
pop
pop
mov
xchg
push
lret
sarb
dec
in
mov
pop
fidivl
out
jb
cmp
repz
add
imul
push
mov
sar
jns
xchg
xlat
mull
in
inc
addr16
sub
fldt
xchg
jmp
fiadds
mov
add
loop
bnd
loope
insl
pop
mov
lods
ret
and
lods
pop
sbb
cs
inc
push
lcall
inc
mov
jmp
sbbl
scas
int3
dec
popa
in
push
sbb
sub
push
rclb
push
outsb
sbb
sub
xor
mov
push
push
adcl
sbb
fs
push
adc
inc
mov
dec
adc
pop
loop
test
call
xor
mov
fwait
add
imul
xlat
lods
mov
imul
into
mov
insb
test
lahf
jp
out
scas
adc
xchg
pop
in
stos
add
cmp
ficompl
stos
dec
sub
cmp
mov
mov
out
pop
cmovns
test
out
jge
xor
mov
add
sbb
pop
lods
jns
pushf
mov
flds
add
aad
mul
sub
jno
lahf
in
mov
xchg
xor
fucomp
out
mov
xor
scas
imul
enter
sbb
inc
bound
das
pop
xor
pop
mov
dec
cmp
lea
jno
enter
sbb
scas
leave
sbbl
inc
xchg
jmp
mov
dec
jl
arpl
mov
xchg
cwtl
icebp
outsb
cmp
xchg
sub
andl
mov
shl
sub
out
mov
pop
in
mov
fstp
push
push
push
push
inc
sbb
cmp
jmp
fists
xchg
loope
mov
xchg
xor
outsl
insl
inc
pop
add
push
mov
dec
push
or
or
lock
xchg
xor
shl
push
shrb
push
mov
push
dec
cmp
pop
and
push
addl
xchg
movsl
pop
cmp
dec
gs
cmp
jmp
iret
testb
pop
out
mov
dec
adc
jnp
out
out
je
sahf
mov
xlat
xchg
idiv
xchg
sahf
and
adc
xchg
leave
and
inc
xchg
stos
out
imul
rcr
je
scas
adc
cmpsl
sahf
jnp
imul
mov
movsl
dec
add
pop
jmp
loop
mov
cmp
adc
and
xor
aaa
push
mov
xlat
popa
adc
add
ss
sbb
inc
insb
add
cmc
jo
rorb
out
in
popf
aaa
out
addr16
push
pop
jle
cmp
and
orb
sub
fwait
mov
cmpsl
popf
cmp
cmp
dec
pop
fldt
sbb
loope
repnz
lahf
hlt
mov
xchg
bound
cwtl
cmp
cld
mov
adc
xor
shlb
cmpsb
inc
dec
mov
xchg
jb
daa
sti
inc
js
in
or
shlb
cmpsl
or
xchg
sbb
lcall
sarb
xchg
icebp
dec
pop
mov
or
mov
sub
sub
push
fidivrl
cld
add
daa
popa
cltd
and
addr16
aad
inc
jecxz
cmpsl
mov
jae
sub
inc
sti
mov
or
std
pushf
jne
fdivrl
out
dec
add
add
or
hlt
pop
fwait
insb
mov
lods
adc
adc
jmp
popf
ret
lock
std
ss
push
repnz
enter
or
jae
sub
push
mov
out
dec
sbb
aad
shl
mov
arpl
mov
sbb
jg
sbb
out
push
adc
rcrl
mov
in
dec
mov
push
xorl
jecxz
mov
inc
sbb
cwtl
cmp
cmpsl
int
mov
inc
push
les
push
sbb
pop
inc
int3
addb
jo
inc
stos
xchg
addr16
ret
jmp
lds
mov
xchg
mov
pusha
lock
fisttpl
adcl
dec
dec
jns
repz
push
mov
mov
jge
frstpm(287
xchg
lods
insl
xchg
xabort
adc
stos
arpl
push
jecxz
sub
or
ljmp
outsb
sub
sub
jle
mov
add
lea
into
jo
mov
ret
loopne
cmp
and
iret
loopne
aas
dec
jns
dec
movb
add
cmp
lcall
push
aad
fbstp
call
jbe
sub
divb
cli
mov
xchg
inc
push
mov
ret
rclb
inc
cs
fs
jp
test
nop
mov
pop
andb
mov
sbb
dec
cmp
hlt
push
aad
lock
inc
outsb
add
pop
xor
call
jge
fsubl
sti
pop
mov
xchg
add
shr
mov
sub
jo
rcrb
icebp
ss
into
js
mov
dec
xchg
xchg
or
or
fsubl
inc
mov
jno
pop
cmp
mov
gs
repnz
or
rep
jo
xchg
sti
inc
xor
imul
movsl
mov
out
aaa
sahf
xor
and
pop
add
cli
push
cmpsb
adc
ret
fdivp
cmp
and
andl
and
sub
inc
ja
or
push
outsb
and
out
rcl
jge
subl
cli
loope
sub
repz
inc
lock
aaa
adc
repz
jnp
data16
jne
lcall
pop
xchg
cmpsl
inc
mov
dec
std
ja
mov
mov
cmp
negb
or
push
cmpsl
mov
fwait
out
out
test
lea
mov
mov
add
std
push
les
pop
inc
daa
pop
sbb
int
mov
imul
sbb
ljmp
adc
add
sbb
test
es
cltd
inc
nop
or
mov
testb
mov
push
shrl
xchg
inc
jl
fs
dec
out
or
mov
add
jnp
stos
sub
sub
lcall
mov
jb
adc
jbe
push
into
push
xor
and
xchg
clc
add
icebp
jbe
test
enter
or
rorl
int3
call
cmpb
stos
sub
aad
cs
andl
int3
iret
jo
push
lahf
mov
int
stos
test
cmc
hlt
dec
and
or
push
mov
int3
outsl
adc
push
cmp
jp
ret
idivb
scas
cltd
or
jle
sub
lods
fldl
mov
mov
mov
rcrl
outsl
or
or
int3
jecxz
adc
lret
push
adc
mov
xor
jecxz
dec
test
pusha
out
jp
stos
sub
test
in
js
popf
cwtl
fldt
fsts
xchg
pop
cs
popa
xchg
std
cmp
leave
push
fdivrs
mov
inc
aam
add
and
call
ds
mulb
or
pop
inc
fcomps
cltd
dec
loop
pusha
scas
push
push
cmc
stc
mov
or
std
out
mov
jge
in
jge
xchg
cmp
mov
cmp
lahf
mulb
jns
cmp
or
xor
outsl
inc
cli
mov
xor
jnp
xchg
adc
sbb
push
lds
rcll
movsl
mov
lea
mov
or
pop
fists
add
sub
daa
and
mov
add
stos
std
sub
pop
mov
les
je
fdivs
scas
add
and
lcall
roll
icebp
sti
cmp
pop
xchg
js
dec
cwtl
dec
pop
and
jg
and
and
mov
jno
xchg
and
shrl
and
mov
xchg
lock
pushw
push
pop
push
mov
popf
int
ret
add
pushf
inc
aam
sub
pushw
sub
jl
sub
imul
push
dec
bound
pop
clc
mov
std
imul
bound
ret
fcom
flds
cli
cmpsb
inc
jge
shlb
or
add
in
mov
or
and
fisttps
cmpsb
inc
sahf
cvttps2pi
xchg
push
mov
cltd
mov
and
jo
mov
ret
inc
test
dec
loopne
stc
jmp
add
cltd
lds
mov
xor
scas
mov
ja
cmp
int3
pop
cwtl
dec
or
ds
sahf
sbb
cs
push
das
loopne
pop
mov
push
add
sub
pop
mov
mov
xor
mov
dec
adc
es
push
push
ret
pushf
enter
clc
dec
fdivrl
mov
pop
sbb
dec
push
popf
in
data16
test
sbb
mov
insb
pop
mov
or
mov
stos
divl
pop
mov
andl
jecxz
push
mov
adc
mov
data16
clc
in
cs
mov
sub
out
mov
or
pop
adc
pop
push
push
jns
push
mov
bound
sub
jmp
dec
jl
jle
nop
out
lock
sarb
lret
in
fisubl
push
xchg
inc
sub
xchg
push
ds
mov
movsl
jno
sbb
mov
in
mov
rorl
repz
in
sahf
push
loope
pop
movl
mov
push
sub
sbb
pop
rcrl
sbb
mov
adc
pmulhuw
aam
sti
push
je
leave
je
mov
ret
out
push
testl
ljmp
inc
pop
daa
inc
scas
mov
pop
and
insb
daa
push
add
pushf
sbb
inc
mov
insl
inc
sub
shl
aaa
sbb
push
iret
xor
mov
mov
les
mov
fistpl
push
dec
sbb
add
loopne
mov
inc
sub
test
mov
outsb
mov
fimull
dec
add
fisubs
cmp
mov
aad
mov
icebp
loop
stos
fwait
aaa
cld
scas
daa
xor
shrb
xchg
sbb
ss
insb
inc
bound
inc
xor
addl
mov
dec
push
adc
cmc
ficompl
addl
gs
hlt
cmc
roll
shlb
push
cmp
js
lea
loop
scas
cld
sub
adc
jle
jne,pt
fldz
sbb
dec
idivl
adcb
cld
imul
inc
cmpsl
xlat
cmp
ljmp
outsl
in
lods
add
add
xchg
dec
xchg
inc
jle
mov
icebp
out
jg
in
dec
push
mov
push
inc
push
pop
imull
mov
xor
cwtl
and
sarb
mulb
ja
jmp
test
pop
fcoml
mov
stos
pop
inc
add
lock
std
repnz
bound
xchg
stc
sub
dec
mov
xor
fistps
mov
daa
icebp
xor
adc
ficoml
xchg
dec
adc
dec
fstl
lahf
jo
mov
sub
hlt
ss
add
out
xchg
in
dec
adcl
pusha
mov
dec
test
mov
sub
jle
or
fistpl
ljmp
lahf
cld
mov
push
test
or
mov
or
xchg
inc
pop
cwtl
jns
pushf
fwait
in
lock
fs
in
mov
pop
mov
push
enter
jnp
sbb
cmpsl
icebp
sub
cmc
pop
mov
sarl
dec
push
xor
loopne
in
jp
out
lea
dec
mov
xchg
add
and
repnz
pop
aad
dec
mov
mov
pop
jae
movsb
daa
inc
outsb
mov
sbb
adc
das
push
sub
jmp
into
sbb
ds
rcll
cmp
dec
push
sbb
test
mov
push
sub
subl
sub
adc
xor
sahf
rcrl
mov
enter
test
push
push
cmpsb
cmp
cmp
and
push
outsb
mov
push
nop
stos
inc
mov
imul
loop
inc
jbe
fildll
bound
in
cwtl
ja
adc
cmp
lods
mov
jno
insl
or
push
jnp
dec
cmp
test
add
sbb
shl
xchg
jae
xchg
inc
stos
aad
aaa
in
mov
pop
cmpsl
add
lret
jae
sbb
xchg
sbb
push
fdivr
mov
pusha
stos
cmc
mov
cs
cmp
insb
dec
xchg
push
scas
add
lcall
cmp
mov
inc
jb
dec
loop
test
and
rorl
adc
push
jb
cmp
pop
movsb
ret
xor
out
lcall
sbb
cmp
mov
outsb
mov
lock
ret
scas
sub
add
sub
icebp
ljmp
push
or
or
cmp
lea
jl
jl
lds
loope
iret
outsb
cmpsb
sub
and
shl
jl
in
jge
pop
jle
rorb
out
xchg
sub
xchg
or
mov
test
stos
fisttpll
movsb
xchg
rclb
jp
test
mov
sub
ja
mov
outsl
sub
insl
cmpsb
repz
mov
stc
fwait
and
mov
adc
dec
xchg
call
pushf
xor
dec
pop
inc
or
pop
insb
loop
xchg
test
decb
push
inc
adc
sar
inc
push
mov
inc
fnstenv
in
rorb
scas
shll
and
cs
mov
mov
mov
jmp
mov
mov
adc
sub
add
sub
or
ja
loope
pop
mov
jmp
sub
pop
xor
fstpl
adc
sbb
dec
leave
xchg
cmp
push
test
out
mov
cli
push
xchg
psubsb
fcmovne
ret
test
jp
xchg
cmp
rclb
ret
icebp
fs
or
sbb
movsb
inc
push
push
and
push
xchg
std
popf
jae
push
xchg
push
aaa
mov
pop
inc
and
fwait
sub
mov
push
rcrl
cmp
sbb
les
push
xchg
jnp
fwait
adc
sbb
orl
data16
dec
mov
stos
add
and
out
push
rclb
lods
mov
mov
mov
pop
imul
cltd
stos
lcall
sbb
hlt
mov
sub
jmp
das
mov
mov
mov
sub
adc
cltd
jmp
mov
in
sbb
ret
and
rorl
scas
cmpsl
sbb
mov
fistl
popa
mov
sub
sbb
out
push
and
xchg
and
xor
das
jmp
insb
outsl
sub
lahf
mov
insb
stos
cmp
icebp
mov
rcrl
lods
das
push
cmp
int3
loopne
xlat
pop
ret
adc
lds
add
daa
adc
jns
js
pop
mov
imul
imul
pop
rclb
xchg
outsb
and
loop
or
sub
mov
testb
js
flds
jp
dec
out
add
in
xor
sub
mov
jne
in
mov
mov
je
leave
lods
xorb
xchg
pop
rcrl
jne
jle
or
inc
shlb
inc
pop
mov
mov
stos
xchg
xor
outsl
addr16
jmp
jb
pop
xchg
jg
stos
popf
aam
pop
pop
fprem1
adc
pushl
pushf
sbb
push
push
pushf
mov
sub
xchg
inc
mull
test
loop
shrb
sbb
test
popf
adc
mov
js
outsb
rorb
push
adc
shll
les
lds
mov
pop
dec
mov
dec
jmp
adcl
in
lods
cmp
jmp
arpl
js
mov
daa
cmp
mov
pop
jo
enter
jp
xchg
pop
push
xor
xchg
nop
add
out
hlt
adc
adc
jl
call
xchg
sub
data16
mov
std
mov
lret
out
lret
fnsave
int
jns
and
lock
stc
shl
cmovnp
dec
iret
pop
fdivs
or
sub
or
jnp
jae
addl
pop
loopne
cs
or
rcrb
mov
add
int3
cmp
push
cwtl
jb
arpl
add
sub
ja
int3
add
jp
pop
insb
in
mov
stos
and
adcb
mov
int3
jl
xorl
cmp
lock
cli
xor
inc
and
std
pusha
insl
inc
sbb
and
stc
pop
xchg
cltd
test
nop
je
xchg
inc
cs
add
jmp
inc
pop
fnstenv
pop
daa
cmc
add
sub
or
scas
cmp
mov
mov
and
adc
jg
lcall
repz
lcall
test
mov
xchg
mov
and
andl
mov
push
inc
jo
and
sarl
insl
icebp
stos
sbb
mov
outsl
sub
hlt
jae
jp
insb
fimuls
cs
xor
xchg
cmc
mov
nop
jnp
out
rcrl
hlt
movsl
pop
test
lret
lcall
push
adc
mov
sub
or
insl
mov
fistps
loope
test
xor
pop
xor
add
and
ja
mov
outsl
xchg
inc
popa
mov
sbb
aaa
dec
xor
or
dec
sbb
ljmp
int3
mov
adc
jge
les
mov
popf
or
xchg
addr16
mov
xchg
stos
mov
pop
jle
pop
ja
nop
std
sbb
mov
pushl
pushf
repnz
jle
add
orl
arpl
insl
cmpsb
lds
mov
dec
jl
loope
filds
dec
pop
jae
icebp
xor
into
repz
loope
test
call
fisttpll
inc
jg
testl
pop
in
push
dec
push
and
cld
inc
in
sbb
mov
jmp
icebp
push
mov
add
xchg
enter
jmp
push
scas
xchg
out
pop
and
pop
sub
or
clc
sbb
scas
push
lods
add
repnz
xor
mov
mov
cltd
xchg
adcb
mov
push
test
gs
mov
push
lods
insl
mov
jecxz
scas
enter
sub
aas
or
dec
pop
ds
test
push
xchg
scas
xor
fstpt
fnsave
shrb
jnp
jmp
mov
jb
cmp
inc
stc
or
or
xor
sbb
lock
mov
cmp
scas
mov
lcall
mov
xor
lds
cmp
adc
adc
dec
lds
in
sub
in
cmpsl
addr16
imul
mov
in
loop
dec
in
ss
fisttpll
mov
fidivs
aaa
aam
cmp
outsb
fldt
inc
push
int
push
fnstenv
adc
xor
or
sbb
out
rol
push
test
sbb
loope
jge
addr16
test
dec
jae
pop
movsl
jg
imul
dec
mov
rcrb
pop
lea
je
dec
in
cmp
push
jge
dec
push
pusha
mov
clc
int3
adc
push
shlb
fs
testl
loope
dec
fsts
mov
orl
mov
sbb
mov
ja
addr16
sub
cmpsb
addr16
test
jo
xor
scas
jge
outsb
shrb
ret
mov
aas
sub
stc
jae
scas
xchg
cli
adc
add
outsl
outsb
and
shl
jmp
les
ja
mov
xchg
arpl
jnp
lret
sub
mov
scas
icebp
push
jne
cli
jle
cmpsl
sub
imul
mov
mov
loopne
pop
in
adcb
mov
test
lods
shrb
mov
mov
sbb
pop
repz
mov
iret
adc
and
lock
mov
adc
xor
cmpsb
sbb
xchg
sub
mov
sbb
xchg
in
xor
mov
nop
pop
lret
movsl
push
ljmp
jmp
xor
pushf
outsb
mov
adc
nop
shl
lds
daa
inc
xchg
lret
inc
imul
sbb
push
mov
push
icebp
dec
test
fldcw
movsb
sbb
push
stc
sub
ss
push
repz
mov
push
xor
mov
ja
out
adc
xor
adc
pusha
xchg
inc
mov
negl
sbb
or
jp
lret
inc
hlt
sar
pop
and
insl
fidivrl
xor
repnz
test
mov
add
sub
dec
and
cli
das
pop
mov
push
xchg
or
std
movsl
pusha
test
ljmp
lahf
fs
or
cltd
inc
jge
mov
dec
nop
adc
xor
sub
out
int3
mov
addr16
cmpsl
or
enter
sysret
popf
jmp
lret
in
test
add
int3
pop
in
mov
mov
out
or
add
sti
xchg
daa
cmp
sub
mov
jnp
rcrl
lock
jb
or
adc
mov
jo
mov
adc
xor
shr
and
ss
and
addr16
stos
lds
sub
rcll
mov
nop
rcrl
lcall
push
ja
pushf
push
cmp
lcall
push
fs
push
js
pop
ret
fimuls
mov
addr16
jae
gs
add
add
mov
ficoml
fidivl
std
adc
push
loope
shrb
sbb
adc
dec
cmp
xor
negl
and
add
jle
and
test
xchg
shl
out
cmp
cmp
xchg
sbb
push
push
in
ss
roll
sti
mov
test
add
or
bound
paddd
pop
adc
loopne
enter
test
adc
loopne
adc
jne
mov
int3
testl
pop
adc
xor
lret
lods
jbe
icebp
jnp
lods
clc
hlt
push
push
outsb
push
scas
cltd
mov
pop
ja
pusha
jnp
lea
lret
test
scas
mov
mov
in
int3
push
shr
sahf
inc
outsb
and
dec
and
add
or
andl
ret
jbe
sub
cs
sub
jmp
xor
fistpll
jle
rol
inc
or
iret
add
hlt
and
inc
call
pop
xchg
lret
lds
mov
jbe
push
test
xchg
adc
cmc
iret
xor
push
adc
mov
gs
mov
and
pop
jl
jae
ljmp
sbb
dec
xor
movsl
inc
call
fimull
fdivrp
loopne
push
pushf
push
and
negb
in
fildl
push
adc
enter
enter
cmp
add
pop
clc
cmpsb
sbb
popa
jmp
mov
fistpl
shlb
subb
inc
mov
shll
outsl
xor
jmp
fadds
daa
testb
ret
pop
movsl
or
xadd
cmc
jae
cmp
pop
mov
dec
adc
add
adc
fisttpl
jecxz
sbb
sbb
jle
inc
cmp
scas
daa
rcrb
lret
loope
jmp
ja
or
dec
mov
sbb
adc
rcll
pop
pop
loop
pusha
fstpl
xor
xchg
mov
fadd
ret
addr16
inc
cmp
xchg
add
push
push
lret
stos
add
orb
in
push
and
lret
in
aad
add
mov
xchg
cld
dec
push
jne
jb
mov
sbb
bnd
xor
push
inc
jbe
imul
add
dec
sbb
push
lret
std
leave
lcall
push
push
jbe
loop
std
pushf
daa
cltd
out
aam
mov
push
iret
lcall
test
and
pushf
or
mov
fistpll
jbe
icebp
mov
int
jl
xchg
cltd
cmp
pushf
mov
scas
movl
xor
dec
xorb
in
inc
daa
push
cs
mov
lods
xor
mov
cltd
sbb
loope
cmp
xchg
int
repz
aas
cmc
adc
mov
sbb
push
cwtl
xchg
mov
dec
rorl
xor
insb
mov
fdivl
insl
jbe
lret
lds
push
sbb
and
out
push
imul
mov
xchg
lret
push
decl
aas
jnp
pop
jmp
and
or
test
mov
xor
gs
jmp
mov
jo
jmp
xlat
fisubl
test
xor
xor
push
fstpl
mov
pop
inc
test
add
push
outsb
fs
inc
xlat
cmp
in
pop
jb,pn
dec
scas
push
xchg
fcmovne
adc
cltd
add
mov
int3
aad
ss
lret
imul
add
push
pop
mov
xor
nop
or
js
mov
inc
or
jmp
mov
mov
imul
data16
lods
pushf
mov
xchg
push
sub
jae
add
cmp
jecxz
or
jns
lock
mov
mov
ror
ret
push
add
mov
lahf
lods
jmp
mov
push
pop
xor
mov
lea
jae
imul
shll
lcall
les
lret
shrl
clc
push
mov
pop
and
xor
mov
fwait
mov
fs
pop
loope
sub
es
loop
xor
sbb
pop
sub
adc
enter
push
mov
mov
jmp
cmc
leave
inc
add
inc
push
jg
in
mov
mov
ljmp
data16
nop
jnp
lahf
loope
subb
scas
pop
and
fcoml
ffree
mov
xor
adc
pushf
test
enter
inc
dec
or
sub
test
movsb
jl
adc
add
mov
scas
mov
in
lahf
mov
adc
fwait
sub
lcall
aas
lcall
cmp
in
mov
xchg
in
mov
lret
xor
sbb
xchg
in
xchg
mov
pop
rorl
mov
push
xchg
jg
mov
push
jge
or
enter
pop
and
imul
test
out
jl
jge
outsl
mov
mov
into
ror
repz
mov
lret
hlt
mov
hlt
xchg
adc
inc
and
sbb
xchg
lds
test
mov
fmulp
popa
lock
or
cs
add
and
jp
lock
js
xor
pop
jmp
adc
out
jg
js
xchg
sahf
and
and
bound
pop
ror
add
fmull
mov
out
loopne
ficompl
xchg
leave
adc
movsl
cmp
das
pop
dec
mov
popf
mov
lods
lea
adc
xchg
idiv
sti
xchg
les
enter
xor
shll
push
lock
add
xor
mov
in
bnd
into
rcr
and
pop
sub
xor
outsb
jae
int
push
test
outsb
jg
imul
cmc
popf
test
outsl
pop
neg
xchg
push
ret
into
mov
mov
dec
jb
xchg
push
fs
repnz
jge
orb
xor
push
test
ja
dec
fwait
and
jle
repz
insl
inc
outsb
imulb
ds
data16
cli
dec
sub
pop
adc
shrb
adc
mov
mov
sbb
loopne
mov
fs
push
lret
jmp
fsubl
cmp
or
add
scas
xorb
cmp
lahf
inc
jl
scas
test
push
adc
push
out
scas
das
inc
js
rcrb
stc
jb
xchg
and
sbbl
and
and
outsb
into
dec
push
sub
dec
test
je
add
icebp
cmp
aas
nop
cmp
jae
outsl
addl
ds
fwait
jbe
lea
sbb
sbb
pop
add
nop
sub
xchg
mov
mov
xorl
in
and
or
cld
and
inc
loop
lcall
mov
xchg
xchg
xchg
stos
insl
stos
lods
addr16
sub
jecxz
jnp,pt
int
mov
lret
lock
xor
enter
arpl
cmpsb
sub
xor
sbb
mov
mov
cmc
test
test
in
into
mov
xor
jb
pop
cmp
movsl
loopne
mov
jg
pushl
mov
jne
cmpsl
cmp
mov
cmp
shll
cwtl
lods
push
imul
popa
imul
not
xchg
mov
lcall
cmp
pop
lahf
mov
sbb
sub
mov
loope
and
add
lcall
cmpsl
imul
shl
movsb
incl
stos
ret
or
jb
adc
and
aas
mov
imul
cmp
push
cli
xchg
xchg
cmp
or
xchg
ljmp
mov
jp
and
cmc
add
test
mov
cmp
xor
loopne
xchg
push
scas
fcmovu
lods
aad
sub
mov
fs
add
into
fcmovnu
ret
getsec
mov
scas
cmpb
movsb
inc
pushf
rorl
test
fstpt
ljmp
mov
mov
pop
push
jge
aas
and
cli
push
mov
fbstp
pop
loopne
push
sub
inc
loopne
inc
cmpsl
dec
stos
mov
ret
in
and
ret
sahf
inc
push
fldenv
cmp
das
fs
inc
pop
mov
arpl
jp
pop
pop
leave
or
fstpl
jg
mov
movsb
and
and
call
outsl
int3
xor
ret
xchg
sbbl
lock
jmp
cmc
jl
dec
cmp
xchg
push
divl
jae
mov
shll
flds
sub
cmp
pop
xchg
fwait
es
sub
out
ja
adc
je
push
inc
pop
js
rcll
shl
mov
push
subb
cld
push
mov
cmp
dec
adc
push
test
inc
xor
add
jne
popl
sub
and
xorl
out
jno
mov
repz
inc
cmp
outsb
cmp
insb
fcom
shll
in
inc
repz
fildll
xchg
cmp
jecxz
push
mov
gs
push
clc
jecxz
or
xchg
inc
bound
jp
popl
out
cmc
pusha
sbb
mov
in
and
adc
pop
jmp
pop
push
lahf
sbb
ret
out
and
ret
and
cmpl
sbb
jmp
jge
or
mov
jp
fistpll
lret
inc
or
pop
push
in
mov
or
leave
rcll
mov
aam
jmp
cmp
insb
push
rorl
out
and
or
mov
and
lds
sbb
repnz
and
pop
stos
rclb
mov
xor
jb
filds
fwait
inc
fcom
loop
mov
fstpt
adc
iret
and
cmp
ja
sahf
add
jae
cmpsl
les
and
out
jnp
cmp
test
shrl
decb
push
xchg
add
sar
jmp
ficoml
in
out
popf
fwait
mov
push
nop
and
arpl
sub
and
in
mov
inc
fistps
idivb
outsb
stc
dec
xor
aas
pop
inc
xchg
cmp
push
push
dec
push
loope
test
mov
jge
mov
jl
mov
and
push
mov
cmp
lods
jae
daa
scas
dec
imull
push
adc
leave
jmpw
and
mov
jb
int
inc
fnstsw
dec
js
fdivl
mov
adc
xchg
repnz
es
sub
leave
pop
sahf
sti
test
and
xor
or
sbbl
cmpsb
iret
add
in
sbb
xchg
sbb
sub
std
xchg
xchg
or
int3
mov
sahf
jns
or
imul
enter
xor
xchg
sub
sub
daa
pop
or
stc
imul
xor
xor
mov
icebp
je
outsl
loope
push
pop
lock
mov
mov
stos
lahf
and
mov
enter
push
inc
or
aaa
fnsave
mov
es
and
repz
loopne
push
or
push
sbb
jp
pop
data16
mov
insb
icebp
stos
les
jb
mov
mov
xlat
fimull
pop
jg
das
arpl
sbb
push
mov
cli
leave
xchg
ficoml
fstpt
repnz
dec
lret
add
push
ret
xor
out
ds
jbe
mov
adc
sahf
push
push
enter
stos
loopne
sub
in
pop
jmp
flds
in
jae
xchg
outsb
inc
jge
and
test
mov
xor
jae
lods
xor
pop
jbe
add
jge
out
jp
dec
jbe
sbb
iret
fwait
std
cmpb
mov
sbb
dec
aas
rcll
push
aam
mov
xor
jmp
lods
neg
lds
mov
into
sbb
ljmp
fimull
dec
xchg
ja
ret
xchg
push
sahf
mov
insl
ret
rorb
add
jae
es
lock
pop
aad
mov
mov
sub
mov
cmp
mov
xor
outsb
mov
mov
xchg
mov
aas
mov
dec
jbe
or
mov
lds
mov
add
jns
stos
bnd
nop
jle
push
mov
cmp
outsb
std
xor
jnp
mov
pop
push
xlat
mov
inc
cmp
push
xor
int3
or
out
sub
loope
jno
jnp
test
into
pop
ret
ss
xchg
outsl
lods
call
mov
fcom
mov
pushf
out
in
mov
add
fcmovu
pop
lahf
out
xor
cmpsb
sbb
jnp
inc
or
jno
or
push
aad
rcll
xor
mov
pop
sub
sbb
inc
addr16
jb
cmpsb
and
nop
hlt
ds
cmp
in
and
mov
incl
in
sti
popa
fnstenv
data16
mov
mov
mov
out
enter
jle
add
je
mov
ret
lret
cmp
xor
int
psllq
xchg
inc
les
push
sub
mov
push
jae
in
xor
lahf
call
push
mov
shll
inc
ja
roll
jnp
bound
sti
pop
mov
mov
mov
mov
loopne
lcall
mov
mov
testl
ja
fistpll
inc
imul
into
and
xchg
add
ja
push
ret
icebp
scas
pop
inc
pushf
in
std
push
or
jno
xchg
dec
and
aas
dec
dec
xchg
xchg
mov
xchg
dec
je
mov
add
repz
sub
adc
loope
push
adc
adc
inc
pop
jle
into
les
dec
lods
mulb
jmp
pop
orl
mov
std
mov
xchg
push
sub
push
inc
inc
jns
cmp
ljmp
daa
cld
stc
aaa
addl
adc
adc
call
cld
out
gs
xor
loopne
cld
mov
mov
icebp
repz
dec
jge
loope,pt
es
sub
cli
mov
inc
js
xchg
or
mov
ficoms
or
cld
in
pop
fs
cmp
and
sbb
mov
scas
xor
sbb
addb
nop
jle
dec
pop
mov
push
sbb
adc
cmc
cmp
and
stos
mov
jge
fisubrl
mov
mov
insl
leave
mov
dec
mov
push
sub
lcall
adc
inc
rorl
sbb
test
push
sar
sbb
pop
js
mov
shrl
pop
xchg
pop
mov
cwtl
cmp
stos
xchg
fidivl
add
movsl
dec
fcmovbe
fsubrl
inc
pop
inc
lock
lcall
out
jl
and
outsl
inc
or
sarb
sarl
lcall
xor
lret
fstps
testl
bound
ja
icebp
stos
shlb
and
xchg
push
jmp
test
add
xlat
sbb
pop
rol
cmc
push
test
sub
pop
mov
test
call
jge
xchg
xchg
aas
cmp
movsb
aam
inc
outsb
pop
sub
jl
and
mov
leave
vmread
fsubs
mov
std
in
cmp
icebp
movsb
leave
xchg
lcall
xchg
cwtl
jecxz
jle
stc
pushf
rcrl
sti
xor
arpl
add
imul
ficoml
xorl
push
test
imul
cltd
out
ja
leave
inc
outsl
or
insl
clc
adc
std
popa
mov
arpl
jl
and
mov
stos
push
adc
repz
dec
popf
mov
jae
pop
out
les
and
cltd
pusha
fwait
mov
pop
sub
sbb
js
mov
cmp
push
sbb
adc
jb
dec
mov
cmp
push
nop
rcr
addl
xor
ja
push
into
enter
loopne
call
inc
cmp
inc
arpl
pop
rorb
adc
in
jge
add
loopne
mov
loopne
aaa
and
mov
xchg
pop
lahf
leave
xor
and
cli
mov
jecxz
mov
int
cmp
pop
cs
and
rorl
xlat
daa
rol
pop
mov
fildl
out
cmp
and
lds
scas
imul
cli
scas
jg
popa
cmp
sahf
std
jge
mov
mov
out
push
and
sarl
or
nop
fwait
xchg
lock
lcall
adc
pop
jmp
push
and
sahf
outsb
dec
out
jno
jno
pop
orl
add
dec
xor
xchg
mov
xchg
fs
xor
lret
faddp
scas
sahf
and
pop
add
or
lea
push
bnd
cmp
xor
imul
sbb
sub
dec
push
add
mov
push
cwtl
fisubrl
push
jmp
fstpt
cwtl
aam
hlt
ret
push
aaa
xlat
or
mov
push
popa
push
aas
rcrb
pop
jo
imul
xchg
push
call
mov
lods
scas
jns
and
loop
mov
sub
fimuls
mov
push
jp
out
push
adc
push
mov
lret
xor
int
shll
sti
dec
fildl
loopne
or
jmp
push
jmp
js
cmp
ss
mov
roll
ja
ficompl
inc
rolb
xchg
addr16
add
bound
js
xor
ds
daa
cmp
adc
or
in
cmp
cmp
in
pop
ljmp
jge
jle
lds
in
adcb
or
fisubrs
scas
xchg
arpl
pop
sub
movsb
inc
test
push
lcall
jnp
js
dec
mov
add
inc
xor
lahf
cmp
lret
lahf
std
mov
mov
jge
cmp
mov
sub
fldcw
xchg
hlt
sbb
dec
ret
fdivrs
pmulhuw
std
les
sar
movsb
aaa
mov
data16
ss
dec
lcall
cmp
or
mov
adc
arpl
aam
xorb
aam
repnz
or
mov
dec
aad
int3
nop
xor
xchg
cmp
das
sbb
data16
push
xorl
out
jmp
ret
popa
int3
icebp
dec
cmpsb
jg
sub
push
cld
inc
movsb
push
add
pop
push
xor
sahf
outsb
push
mov
mov
jg
mov
cmp
leave
ds
dec
mov
or
sub
cmp
fistl
xor
sti
jg
push
mov
pop
insl
mov
xor
mov
push
mov
in
shrl
inc
sbb
add
out
std
sahf
out
add
aas
mov
stos
sub
shlb
nop
sub
add
imulb
sub
clc
jnp
fbstp
ja
std
mov
les
test
test
int
cmp
cmp
mov
ret
xchg
fisubl
repnz
ror
test
cmpsb
inc
scas
mov
lock
jae
mov
sub
mov
inc
inc
dec
insb
es
nop
xor
or
scas
mov
scas
fildll
jp
mov
mov
in
pop
sti
popl
push
shlb
inc
adc
fcos
fisubrl
and
sub
jl
ret
out
inc
out
xor
repnz
scas
dec
push
jecxz
fwait
ret
ficomps
scas
sbb
xor
jo
push
aas
rorb
daa
mov
adc
add
popa
stos
repnz
push
jecxz
loop
popf
xchg
add
lret
popf
push
xchg
push
hlt
adc
int
jb
add
loopne
ss
jbe
push
shll
fwait
and
dec
stos
popf
and
popa
jg
pop
add
in
rcrb
jecxz
pop
push
aaa
jno
jo
fs
std
sbb
addb
cmpsl
add
xor
lods
ljmp
pop
mov
leave
and
icebp
mov
push
sbb
lds
inc
mov
jg
mov
or
cmp
add
sub
adc
rcrb
mov
xchg
cwtl
stos
adc
ds
jl
lcall
adc
pop
loopne
pop
pop
push
sbb
sub
and
andl
add
mov
ds
mov
inc
int
js
mov
jne
push
and
inc
sub
xchg
adc
mov
notb
xchg
ret
xchg
scas
mov
arpl
push
sub
enter
out
cli
test
adcl
pop
inc
out
sbb
call
hlt
inc
popf
cs
fcmovnb
jnp
out
fmul
movsl
dec
cmp
mov
les
pusha
dec
mov
mov
aam
jmp
push
lret
push
into
dec
ret
arpl
mov
sbb
shrb
sbb
rolb
nop
std
negl
pop
push
sub
rorl
jae
mov
pop
sbb
jae
out
scas
movl
push
cmp
clc
out
sbb
jne
add
inc
fidivrs
pmulhw
adc
aam
fisubl
movsl
pushf
movsl
push
push
inc
cld
outsb
inc
scas
pop
dec
and
lods
cmpsb
xor
mov
mov
push
dec
ss
inc
fsubr
jl
lds
jo
lret
int3
movsb
in
pusha
mov
cli
sub
push
add
mov
add
adc
cmp
xor
jle
jl
jl
jae
dec
fdivrl
icebp
addr16
mov
mov
ficoml
pop
adc
mov
cli
leave
aaa
push
push
ja
or
mov
cmc
inc
push
hlt
pop
sahf
push
mov
ror
sbb
jb
xchg
jp
fdivrs
inc
and
sbb
push
ljmp
ficomps
mov
dec
xchg
mulb
xchg
sti
sbb
outsl
mov
xchg
leave
adc
cmp
jecxz
sub
and
sub
cmp
sub
out
test
cmp
xor
cmp
int
sub
lock
adc
outsb
sub
jb
shll
mov
xchg
inc
das
out
outsb
push
and
fiadds
xor
fcomp
ds
xor
icebp
lcall
lea
jl
stos
cwtl
xchg
push
and
loope
adc
cwtl
add
inc
inc
xchg
movsb
mov
xlat
xor
sarl
cmp
and
dec
pushf
xchg
out
out
aad
fs
xor
cmp
push
enter
out
jne
cmp
lock
gs
bnd
aad
mov
ss
jmp
fdivr
sbb
dec
or
adc
add
xchg
iret
loope
mov
insb
ja
or
enter
pusha
adc
bndstx
insl
sti
js
push
arpl
nop
adc
pop
cmpl
pop
xor
adc
mov
pop
in
adc
mov
lcall
mov
dec
pusha
mov
mov
dec
dec
mov
int
ds
sub
pop
inc
push
sbb
hlt
push
icebp
shr
jns
pop
push
sub
jmp
loopne
icebp
cmp
stos
jge
shlb
flds
js
mov
sahf
pop
inc
inc
xlat
clc
mov
das
insl
or
and
fwait
dec
imul
jmp
in
mov
nop
aaa
in
pusha
inc
fisttps
lcall
pop
sub
mov
test
mov
pop
dec
ds
enter
test
ljmp
sarb
cmp
add
stc
or
xchg
das
lahf
ljmp
push
dec
stc
inc
in
aam
pop
stos
xchg
mov
pop
cmp
rcrl
mov
fsubr
adc
cwtl
lea
fdivrl
dec
xchg
in
fidivrl
xchg
ret
add
outsb
xor
xor
jae
xchg
xchg
add
scas
loopne
js
pop
cmpb
sub
mov
imul
cs
cmp
fnstsw
pop
shlb
xor
pop
out
loop
mov
test
dec
adc
inc
imul
fidivrl
jno
pop
mov
push
adc
fildl
inc
jge
leave
mov
aad
sub
addl
sbb
and
mov
dec
jbe
xlat
adc
adc
fidivs
mov
fs
hlt
popf
mov
sbb
sub
push
out
cs
pusha
mov
pop
mov
cwtl
push
aam
or
sbb
inc
testl
pop
jb
in
es
aad
ja
in
jecxz
iret
divl
out
les
sbb
xor
or
ret
rcl
add
daa
test
dec
pop
out
je
dec
jp
xor
repnz
outsb
cmp
push
mov
push
fwait
das
xor
fsubrl
pop
loope
je
rcl
int3
hlt
lret
sbb
lret
jp
pop
xchg
repnz
pop
mov
cmp
or
xor
lock
mov
pushf
and
fists
pop
xchg
insl
add
in
enter
addr16
sbb
ret
sbb
into
clc
push
inc
movsl
psrld
fisubrs
xchg
shrl
and
aad
mov
push
inc
nop
xlat
adc
adc
push
xchg
test
fdivs
ss
xlat
sbb
or
js
xchg
mov
je
test
or
dec
cmp
jnp
jecxz
icebp
mov
push
and
fwait
stos
sub
jo
cmc
data16
mov
aaa
mov
out
add
int
lods
sub
jo
adc
cmp
cwtl
les
push
or
adc
es
jp
daa
or
aas
hlt
push
push
jo
mov
bnd
pop
mov
jle
cmp
je
sub
mov
aaa
jb
mov
rcrb
xorb
call
out
repz
mov
jnp
xchg
lcall
jb
movsb
cmc
pop
sbb
daa
pop
push
and
imul
out
lret
popa
xor
mov
mul
mov
cmp
mulb
and
push
hlt
dec
push
inc
lea
pop
jne
ffreep
xor
dec
and
aas
add
hlt
faddl
push
mov
cmp
imul
dec
adc
mov
xchg
xor
pusha
ror
pop
pop
push
add
push
dec
jge
bound
ds
inc
xor
push
adc
or
test
test
mov
ucomiss
and
push
jo
and
push
mov
push
inc
mov
jae
dec
mov
xchg
int
xor
stos
scas
lods
push
sub
xchg
xchg
and
xor
push
and
add
mov
push
jbe
aas
dec
pop
adc
sbb
fwait
cli
sbb
mov
and
mov
mov
jmp
nop
pop
lods
sarb
pop
add
xor
jecxz
mov
pop
popa
push
jg
clc
out
fnstenv
movsb
ja
cs
push
std
fwait
in
daa
fucomi
adc
and
adc
or
and
xchg
pop
and
adc
dec
js
jbe
test
sub
gs
imul
and
adc
xchg
pusha
push
sub
jg
xchg
in
loop
es
into
pop
cwtl
jns
mov
sbb
in
int3
adc
push
lret
xorb
nop
or
bound
xchg
repnz
mov
iret
push
jno
loopne
ss
faddl
xchg
daa
inc
in
test
clc
popf
pusha
dec
adc
pop
ds
sbb
movsb
inc
push
pop
inc
shlb
movsb
and
push
push
push
xor
aam
sbb
inc
jl
andl
imul
add
inc
adc
cli
js
jb
out
mov
xor
jmp
psllq
jae
ret
jle
pop
add
push
cmp
pop
cwtl
pop
fistpll
scas
dec
mov
pop
ret
sbb
xchg
mov
lahf
mov
sbb
call
popa
adc
sbb
rcl
mov
mov
dec
add
mov
hlt
xlat
sbb
or
stos
mov
pop
add
addr16
hlt
dec
sti
stc
and
mov
das
push
xlat
mov
scas
xchg
subl
xchg
xchg
mov
mov
out
mov
cld
dec
jnp
jecxz
daa
pushf
inc
sub
inc
sbb
sub
test
dec
mov
rclb
xlat
mov
or
pop
popf
iret
je
xchg
sub
xchg
mov
lret
into
sti
andb
rorb
mov
cli
xorb
mov
stos
and
and
mov
jnp
mov
or
sbb
xor
push
fsubrs
cwtl
lea
cmp
sarb
jecxz
lcall
push
dec
bound
sbb
inc
sub
mov
cmp
xchg
push
pop
fimull
pop
aas
int
xchg
loopne
cmp
push
int3
ret
cs
push
push
dec
mov
xchg
xor
push
lods
test
dec
js
add
or
testb
mov
mov
fs
std
popa
leave
aam
outsl
jg
fucomip
pop
mov
ret
pop
popa
leave
lret
cmp
mov
mov
fidivrs
xchg
fwait
jbe
ret
xchg
jge
std
test
hlt
fimull
inc
aad
inc
inc
mov
in
bound
or
fimull
and
add
xor
loope
loopne
and
mov
jno
sti
jno
sbb
je
movsl
movsl
leave
push
pushf
jl
mov
outsb
popf
or
sbb
dec
add
inc
sub
pop
bound
mov
pushf
mov
cmpsl
xor
lock
mov
std
insb
outsb
inc
lock
adc
mov
push
call
shll
imul
pop
sub
test
jb
jg
lret
xchg
adc
cld
jle
je
fcoml
push
pop
or
or
ficoms
insl
loop
fimull
xchg
mov
cmp
inc
cmpsb
sub
mov
lods
flds
fsubrs
ss
cmp
push
nop
xchg
popa
mov
idivl
cmp
jmp
dec
pop
fisubs
add
cmpsb
add
mov
out
pop
push
repz
hlt
cld
add
and
jle
es
add
fwait
cmp
pop
loope
cwtl
sbb
jmp
pop
pop
pop
sub
mov
and
jg
inc
and
push
add
rcrb
push
das
jb
jo
stos
cmpsl
jp
std
jmp
add
pop
into
fbstp
inc
jg
push
insl
cmp
outsb
dec
fldt
test
cmp
push
jnp
jns
push
outsl
pushf
insb
push
mov
nop
iret
jle
mov
ljmp
stc
xchg
repnz
sahf
xchg
jp
push
cmp
push
inc
xchg
push
xchg
pop
movsl
jp
arpl
mov
push
test
mov
fxch
outsl
adc
nop
add
xchg
movsl
lcall
pop
loope
ljmp
test
jbe
inc
mov
mov
mov
jae
test
sarb
inc
xchg
fadds
lcall
arpl
jno
or
xor
cmc
push
xchg
stos
in
movsl
push
in
jg
nop
inc
mov
lret
js
xor
insl
mul
pusha
je
or
xchg
jg
outsl
lcall
ss
insb
mov
mov
aaa
lret
pusha
popa
cmp
fsubs
cld
std
jl
sbb
push
sarb
into
and
nop
imulb
or
cs
test
dec
pop
mov
pop
dec
pop
adc
in
mov
cmpb
inc
mov
imul
arpl
aaa
mov
addr16
sub
popf
xchg
sub
es
lea
pop
xlat
pop
dec
hlt
repz
repnz
inc
lods
mov
les
push
adc
data16
or
jnp
pop
lcall
insb
lea
mov
mov
in
enter
daa
and
mov
arpl
pop
lds
mov
fwait
xchg
or
and
jmp
ficoms
dec
cmp
cmp
jae
test
adc
movsl
add
ret
xchg
inc
imul
dec
aad
mov
push
fwait
mov
fs
pop
sbb
and
div
jns
sub
mov
movsl
jmp
and
ret
in
cmp
fstpl
mov
in
lock
dec
push
xchg
jb
mov
add
inc
xchg
fwait
and
xor
mov
into
iret
push
cmp
xor
and
popa
adc
nop
jae
cmpsb
xchg
aad
lret
inc
xchg
divl
sahf
gs
aad
test
push
out
in
adc
mov
mov
sub
adc
pop
std
es
js
push
mov
pop
sbb
fildll
ss
sahf
ja
std
outsl
or
and
data16
push
cli
mov
sbb
mov
jmp
push
jns
mov
insb
xchg
aam
sbb
ret
push
xchg
daa
dec
insb
cmp
lcall
enter
dec
jge
mov
mov
or
cmp
fdivs
lods
fists
test
subb
cmpsb
push
or
xlat
jae
push
js
repz
xchg
xchg
dec
xlat
and
stos
jo
rcrl
movsl
mov
mov
inc
or
out
xlat
adc
cmp
sbb
int3
sub
add
mov
and
rorb
and
fisttps
fimuls
mov
jmp
sbbb
mov
subb
xlat
aam
adc
call
out
loop
xor
insb
xchg
xlat
sahf
or
push
cmp
fisttpll
jle
or
std
rorl
sbb
filds
jg
cmp
mov
pusha
and
mov
lret
pop
adc
jecxz
push
sub
pop
shl
imul
cmp
xchg
add
inc
and
add
cmp
xchg
shlb
test
add
sbb
cmp
icebp
int
pop
aaa
mov
shrb
xchg
movsl
xlat
lock
notb
cltd
sub
sbb
cmc
xor
xchg
push
xor
outsb
outsb
push
insb
cmp
or
inc
pushf
jae
push
or
mov
sub
cmp
mov
ds
push
daa
fistps
jmp
xlat
popa
imul
ret
xchg
adc
sarl
orl
je
pop
clc
pop
add
or
cld
in
lret
mov
fsubs
mov
pusha
shrl
pop
inc
xchg
sbb
stos
push
fwait
mov
incb
sbb
mov
fiadds
lods
jne
enter
lock
jl
je
subb
adc
sub
dec
int
push
shrl
pop
fsts
push
fcmovne
lahf
inc
out
out
ret
inc
mov
jns
nop
push
ljmp
xchg
inc
jbe
std
xchg
add
into
es
imul
and
xchg
scas
pop
sub
sti
cmpsb
imul
mov
and
gs
loopne
inc
sub
sub
xor
adc
push
lret
ja
in
xchg
hlt
dec
mov
fdivrs
jecxz
cli
hlt
adcb
push
test
jne
enter
shll
jp
inc
xor
xor
push
aad
push
cmc
mov
mov
push
mov
push
dec
mov
aas
vmovss
adc
mov
pop
adc
rcrl
jp
push
insl
adc
data16
inc
mov
jbe
push
js
orl
cmp
pop
les
fsubl
sub
pop
lock
jnp
test
insb
mov
adc
mov
jno
cs
jno
test
mov
pop
shlb
mov
adc
adc
pop
es
inc
push
xchg
lahf
stos
std
pushf
mov
addr16
mov
jg
push
imulb
popf
inc
and
or
xchg
mov
gs
outsb
sarb
lret
call
add
and
xlat
daa
mov
add
iret
and
xchg
adc
fildl
mov
xor
imul
mov
cmp
pop
lret
sub
xor
frstor
jnp
mov
std
mov
scas
movsb
shr
stc
cmp
int3
rcl
push
jp
mov
sahf
xchg
mov
sbb
xor
movnti
cmpsb
mov
push
xchg
and
xlat
in
push
dec
or
push
mov
pop
repnz
test
jle
push
dec
out
cltd
es
sbb
mov
pop
mov
ffree
sub
xor
mov
mov
les
aam
dec
add
mov
std
icebp
lods
movsl
notl
sbb
popf
enter
sub
sbb
push
xchg
fdivs
sarl
xor
dec
shl
add
pusha
mov
shr
fcompl
addr16
lret
enter
dec
mov
jno
xchg
sbb
std
adc
out
add
pop
int
hlt
into
xlat
dec
pop
mov
cmp
lcall
add
je
lods
xor
call
xorb
mov
stos
inc
add
and
sahf
xor
mov
xchg
lds
fwait
in
sub
mov
inc
dec
stc
out
fidivs
add
ljmp
add
notb
ficoms
imul
aad
mov
int3
xchg
xor
adc
adcl
sbb
es
out
inc
insb
cmc
inc
and
push
dec
sbb
pop
add
jmp
lcall
nop
and
popf
insb
mov
add
dec
lret
dec
mov
loopne
rcrl
lds
jg
push
and
fidivs
mov
inc
inc
fcoml
cltd
sbb
cld
inc
into
inc
mov
inc
addr16
inc
les
add
mov
mov
int
jnp
mov
xor
xlat
sbb
pop
inc
popf
sub
xlat
sub
inc
inc
add
mov
xlat
insl
sub
jne
out
insl
data16
mov
cmp
nop
fdivl
inc
sub
out
or
js
or
ficompl
sub
clc
mov
loope
and
inc
fadds
pop
cmp
inc
out
shrb
mov
ficomps
enter
imul
mov
dec
insb
cmpb
ljmp
mov
add
mov
push
lea
dec
cmp
push
shrl
jo
std
adc
fistps
loopne
or
lock
or
dec
and
orb
xchg
pop
jb
xchg
cmpsl
mov
and
mov
mov
and
subl
loopne
cwtl
rorb
xchg
pusha
mov
dec
jnp
adc
enter
frstor
aam
fldcw
sbb
jno
push
xor
add
gs
add
push
jns
sbb
dec
push
inc
mov
filds
sbb
lods
pop
cmpsl
sbb
inc
mov
int
fcoml
fisubl
inc
and
push
pushf
sub
fidivs
addr16
lcall
icebp
inc
and
outsl
mov
aaa
lcall
mov
lock
cmp
loop
ljmp
pop
outsb
sbb
pop
in
sahf
aad
mov
sbb
jo
sbb
push
loop
movsb
or
and
jae
mov
xchg
jae
loopne
push
xchg
je
sub
xlat
es
push
fs
cld
xor
jmp
fwait
jp
in
sub
ret
sbb
stos
push
add
shl
ret
cld
gs
aaa
xchg
lea
sahf
je
mov
ss
imull
mov
out
mov
mov
push
adcl
push
into
pmulhuw
sub
xchg
out
sub
outsb
es
scas
or
orb
xchg
xchg
repnz
pavgb
pop
cmpsb
enter
push
outsb
out
mov
stos
sub
pop
sarb
into
xchg
add
vpaddsb
and
lock
mov
popa
scas
scas
and
repz
sbb
std
dec
lods
jge
bound
ss
movsb
fisubs
mov
jne
or
push
popf
aam
dec
incb
mov
insb
dec
cs
or
mov
rorl
lcall
push
or
cmp
fildl
sbb
test
jb
in
dec
cltd
lea
push
pop
sub
scas
push
push
xchg
push
xchg
inc
push
cmp
daa
pusha
xchg
test
mul
pop
and
pop
and
mov
mov
pop
push
or
iret
popf
push
out
and
and
dec
ret
pop
mov
or
sbb
outsb
andnps
xchg
mov
sbb
push
inc
test
js
push
xchg
mov
xchg
fsts
dec
scas
enter
lea
aaa
inc
enter
xchg
test
pop
loop
call
xchg
add
dec
int
pop
and
leave
movsl
or
xchg
aad
inc
lods
mov
in
fdivr
push
testl
fcompl
push
inc
or
sbb
jne
xchg
sbb
das
xor
push
faddp
jmp
dec
addr16
mov
scas
mov
sub
je
sbbb
pop
dec
fucomi
and
xchg
scas
mov
mov
std
xor
sub
or
jge
xor
xchg
setns
sub
out
inc
mov
pusha
xlat
adcb
inc
mov
scas
push
xor
nop
mov
out
sub
cmc
add
add
dec
add
mov
adc
jl
fnstenv
fwait
mov
cmp
les
stos
sbb
mov
inc
or
sbb
mov
and
push
pop
aas
cmpsb
sbb
adc
xchg
add
xorl
inc
mov
repnz
dec
lds
cmp
mov
ja
or
push
leave
dec
xchg
push
out
out
or
jle
push
jbe
aad
push
adc
mov
jbe
loop
insb
pop
pop
mov
pop
int
in
xchg
mov
shll
mov
mov
pop
dec
or
mov
bound
aad
ss
inc
fsubr
hlt
lods
out
inc
pop
inc
aam
clc
call
jmp
xchg
mov
lret
xor
mov
push
rorb
aam
test
push
mov
push
bound
insb
jne
mov
rcrb
mov
orl
ficoms
aad
out
rcrb
pushf
aad
int
lods
ja
mov
insb
inc
outsb
loop
icebp
and
sbb
jle
push
or
lret
jae
push
pushf
loop
js
cmp
int
dec
mov
xchg
mov
dec
adc
sbb
rorb
pop
lcall
jmp
xchg
xlat
dec
daa
test
daa
test
pusha
bound
inc
lock
inc
icebp
pop
or
mov
sbb
pop
mov
out
and
push
bound
stc
gs
popa
aad
sbb
mov
xchg
mov
cld
orl
push
inc
nop
mov
stc
add
js
add
ficomps
xor
cmpsl
neg
inc
pop
adc
shl
stos
addr16
xchg
pop
mov
lea
dec
mov
mov
mov
lds
in
negl
leave
enter
cmp
sub
popa
jae
dec
xor
or
aaa
xor
mov
add
adc
dec
nop
pop
sti
adc
loope
pop
pop
add
stos
sarl
jl
scas
inc
push
and
pop
jns
rcll
and
add
shr
cmp
mov
ficompl
jp
mov
sbb
addr16
mov
fldenv
sbb
xlat
mov
jae
push
lea
loope
dec
aas
adc
pusha
aaa
mov
adc
fbstp
movsb
adc
scas
xor
xlat
movups
loope
push
dec
shlb
adc
mov
out
cmp
xchg
pop
sarl
add
mov
dec
add
push
mov
lahf
cmp
in
or
dec
aam
sub
imulb
sub
inc
sub
aas
imul
stc
lods
scas
pusha
insl
test
xor
into
out
add
xchg
jl
pop
js
imul
int
push
mov
adc
add
sbb
fildll
fwait
dec
gs
xor
imul
push
fdivrl
xor
xchg
or
pop
jge
lods
mov
call
lret
mov
sbb
aaa
push
ljmp
andb
or
push
mov
jb
pushf
test
rcrl
mov
sti
arpl
pop
in
lds
add
xchg
jnp
adc
mov
pop
push
sti
addr16
or
mov
mov
xchg
jae
insb
push
dec
and
and
movsb
ficompl
xorb
shlb
iret
outsb
and
and
mov
fimuls
outsb
fdivr
sahf
push
pop
clc
aas
inc
mov
mov
and
fldt
les
mov
fcompl
not
data16
jae
jecxz
dec
push
mov
arpl
xchg
push
sbb
shlb
sarb
add
cmp
pop
outsl
push
test
movsb
sub
mov
xchg
stc
mov
cltd
in
daa
fisubrs
xor
popf
fidivl
popa
mov
mov
lret
pop
bound
clc
sbb
std
mov
jnp
mov
lock
dec
cmc
inc
lahf
in
mov
movsl
mov
outsl
push
loop
inc
cmp
cmp
aad
test
out
cli
es
push
inc
mov
ss
sub
add
xchg
adc
inc
inc
mov
push
scas
sti
ljmp
and
pop
jbe
mov
sbb
mov
cmp
mov
add
or
in
popf
insb
movsl
aaa
cmp
pop
mov
lret
push
push
dec
xlat
ljmp
sbb
mov
int
bound
fs
hlt
xor
lret
jae
fisubrl
mov
shlb
or
lea
test
stos
imull
mov
sub
sahf
ss
sub
xor
daa
add
inc
push
icebp
orl
cmc
js
mov
jns
addr16
cmp
outsl
movsl
decl
dec
dec
add
adc
repnz
cmovg
xor
cmpsl
ficoml
fs
lods
scas
mov
imul
aas
lods
shl
je
xor
out
and
lods
lret
in
ljmp
mov
inc
loope
mov
mov
jns
sub
int
sti
push
addl
out
loope
out
lods
stos
inc
push
add
mov
out
pop
into
mov
inc
cli
mul
shlb
dec
pop
xchg
data16
mov
mov
fnstenv
add
mov
mov
ss
mov
cmp
pop
dec
xor
lret
lcall
inc
and
xchg
adc
or
push
adc
jno
cmpsl
dec
cmp
inc
mov
adc
loopne
xchg
adc
iret
test
sub
xor
aaa
push
cmp
popa
sarl
mov
mov
call
aad
fsubr
inc
pop
inc
enter
inc
inc
or
inc
inc
mov
fdivr
pop
pop
je
push
sti
sub
mov
jb
and
xor
hlt
mov
xchg
pushf
cmp
push
dec
outsb
jae
std
push
push
jle
mov
lret
iret
mov
insl
xor
or
jmp
sbb
sbb
mov
mov
push
mov
sub
adc
dec
jle
sub
cmp
scas
push
sub
and
nop
shll
mov
mov
mov
stos
loop
push
cld
mov
movsb
add
adc
mulb
lea
jns
dec
mov
fidivl
push
add
decl
into
push
popa
adc
dec
cwtl
lock
xor
push
loope
stos
add
shl
int3
xor
dec
bound
stos
jge
addr16
dec
mov
int3
iret
sbb
or
rcr
sbb
shl
sarb
stc
in
sbb
adc
mov
jl
pushf
push
jo
mov
pop
sbb
cmp
scas
dec
hlt
cmpsl
xchg
push
mov
or
push
ss
not
sti
sbb
push
out
xor
dec
cmp
xchg
push
loope
scas
add
imul
enter
and
or
push
dec
aaa
fcmovnb
sub
test
stos
ret
sub
push
jecxz
mov
out
adc
repnz
sti
ret
mov
add
insb
mov
js
scas
pop
mov
in
cmp
in
fstl
jbe
sub
pop
or
sub
jmp
xlat
int3
push
leave
push
inc
clc
data16
mov
adc
ds
xchg
call
jo
xor
bound
out
and
nop
cmp
test
cmp
xor
jmp
data16
push
xchg
std
add
pop
adc
jmp
fiadds
sbb
xor
xorb
mov
xchg
sbb
imul
mov
dec
jae
mov
jg
mov
outsb
push
sbb
push
xor
arpl
clc
xor
push
lret
inc
adc
lods
mov
fimull
cmc
cmp
aam
lahf
pop
sub
adc
adc
repnz
and
mov
sub
jo
jbe
sbb
sub
xchg
inc
ret
cmp
cld
mov
aam
jl
sub
jp
in
cmp
cmpsb
sti
or
lods
fldt
test
dec
mov
mov
inc
hlt
lea
or
pop
clc
popf
dec
daa
mov
mov
test
push
mov
mov
inc
mov
sub
shl
test
aaa
push
ja
aas
fidivl
pop
xor
xor
push
mov
sbb
pusha
push
or
lret
dec
ja
mov
insb
nop
cltd
jae
xchg
cld
push
cmp
ds
insb
mov
push
push
jbe
inc
jns
xchg
mull
pop
aaa
push
add
sbb
lret
pop
jmp
jns
imul
arpl
movsl
inc
fnstenv
ret
add
push
or
shrb
inc
call
mov
add
sbbl
xchg
test
xchg
inc
push
lret
cwtl
shl
cmp
xchg
lret
mov
add
add
mov
push
loope
jnp
in
xlat
out
jo
sub
in
fs
mov
push
add
in
mov
fidivs
xchg
cli
mov
pop
jb
fcomp
stos
cmpl
shlb
mov
es
ret
dec
inc
popa
mov
aad
ss
ret
sub
jecxz
sbb
xchg
fidivrl
or
jae
xchg
cmp
es
adc
adc
and
dec
push
dec
mov
mov
repz
jb
cld
push
xchg
notb
jmp
icebp
push
gs
mov
add
adc
shll
out
sub
mov
subb
xor
mov
mov
cli
pop
fs
leave
pop
or
inc
add
cmp
jmp
pop
repz
cmpsl
adc
mov
xor
jmp
addr16
pcmpeqw
ljmp
jb
mov
jno
loopne
test
pop
scas
dec
movsb
jno
test
push
xor
lods
mov
cmc
scas
and
xor
cmpsl
push
dec
aad
shr
sbb
jo
mov
push
popa
pop
cli
test
inc
add
ficomps
mov
xchg
and
pop
pop
sahf
cwtl
xor
add
aas
pushf
int
xor
push
xchg
fdiv
lret
inc
out
ss
movsb
mov
jno
cmp
sub
scas
out
jecxz
xchg
adc
iret
pop
repz
insb
dec
js
mov
xor
cld
inc
loopne
adc
mov
movsl
mov
push
dec
clc
xchg
mov
jge
or
out
data16
push
inc
mov
adc
sahf
cld
test
sbb
xor
fwait
add
mov
cmpsb
enter
sub
jmp
lods
sbb
fdivr
loope
and
testb
adc
lcall
add
xchg
out
ret
ljmp
or
mov
test
add
fcomi
inc
frstor
sbb
jl
enter
ret
sub
out
shll
lea
jnp
movsb
add
test
push
adc
shll
push
aam
xor
xchg
shll
lahf
sbb
out
sbb
decl
shlb
lods
xlat
push
test
push
push
jmp
mov
mov
jle
push
aaa
nop
loopne
cmpsl
mov
pop
mov
lret
push
mov
push
inc
mov
cmp
loop
jmp
jmp
push
push
fisttps
or
pop
mov
insl
xor
je
push
add
cld
outsl
mov
ljmp
push
mov
bound
cltd
pmulhw
mov
aam
add
rorb
ret
cmp
imul
mov
lret
mov
mov
jae
xchg
rclb
dec
push
rorl
mov
push
rclb
mov
and
dec
cmp
pop
movsl
shl
fiadds
cld
out
mov
push
hlt
lahf
sbb
repz
shr
mov
lods
insl
rcrl
rorl
jg
mov
out
jge
out
mov
cs
popa
movsl
sbb
shl
xorb
cmp
cmc
je
jno
cli
loop
scas
xchg
call
inc
pop
xchg
pop
rolb
jmp
xchg
adcl
mov
push
mov
jecxz
inc
cs
inc
mov
pop
adc
sub
cmp
repz
aaa
mov
loopne
xor
mov
cltd
ja
dec
pop
out
pop
inc
pop
fsubrs
add
cmp
inc
xchg
dec
repnz
fcoms
gs
push
imul
leave
sahf
adc
adc
ds
dec
ret
mov
in
add
xchg
icebp
xor
test
sub
mov
test
cwtl
cmp
jae
and
mov
adc
cmp
lods
inc
movsb
adc
ret
aas
xor
jg
outsl
jbe
push
add
sub
pop
in
sub
scas
stos
or
out
fcomps
mov
sbb
jl
dec
mov
cmp
fstps
adc
xor
fsubrl
sbb
mov
mov
pushf
pop
fs
inc
jmp
in
and
and
cmp
imul
dec
js
lcall
les
les
or
sub
pop
ljmp
pop
jle
aas
iret
sarb
movsl
mov
sahf
or
sub
adc
rcrb
xor
xorl
les
pusha
ss
repz
jle
inc
xchg
lret
push
lods
jne
add
jb
or
xor
mov
test
aaa
push
shll
sbb
arpl
sbb
mov
inc
ss
xor
mov
mov
fsubl
fwait
xchg
jbe
imul
cmp
push
or
rcrb
cli
nop
int3
push
das
fs
js
lods
repnz
sbbb
fiadds
rcll
scas
sbb
imul
mov
cmpsl
pushf
inc
lea
or
test
adc
xchg
in
dec
sub
nop
add
sub
std
xlat
inc
mov
pop
mov
xchg
lahf
inc
in
jbe
mov
add
pop
lock
fs
int3
mov
lret
push
call
rep
mov
push
aam
mov
shlb
cmpb
cli
loop
mov
out
xchg
jae
dec
cwtl
xchg
pop
push
cwtl
rorl
out
xchg
push
dec
xchg
mov
xchg
adc
and
loopne
cmp
xchg
fdivs
push
mov
lret
mov
imul
fwait
jg
pusha
push
adc
cmp
push
sbb
inc
outsb
cmp
cmpsb
jmp
in
xchg
mov
popa
neg
pusha
sarb
ljmp
push
lea
xchg
out
ja
cmp
push
mov
icebp
inc
cmp
jno
sti
shlb
jge
fnstenv
push
add
jnp
outsb
xor
push
insl
or
pop
fwait
mov
jg
jmp
inc
jns
mov
inc
xchg
leave
xchg
push
out
xlat
nop
pop
lock
push
les
jl
mov
cmp
inc
cmp
mov
enter
sbb
fldcw
pop
roll
sub
mov
fadds
into
xchg
sbb
dec
frstor
pop
sarl
mov
mov
jb
ljmp
xchg
add
nop
and
jp
andl
mov
jmp
push
in
negb
mov
push
pop
mov
shl
insl
hlt
sub
repnz
adc
add
pop
or
adc
jp
sahf
and
mov
sbb
pop
fcom
jl
testl
xchg
mov
xchg
or
jecxz
aam
imull
mov
mov
js
and
sub
cmpsb
cli
mov
push
pop
nop
dec
mov
fimull
jmp
ret
in
xor
or
cmpsl
out
xlat
jno
out
mov
ret
fsubs
daa
stos
repz
jo
mov
or
mov
insb
lea
adc
and
sarl
and
adc
in
jns
cld
dec
add
push
out
gs
cmp
dec
xchg
pop
dec
push
cld
push
scas
stos
loope
xchg
in
fsubrl
lret
lds
fs
notl
mov
lcall
out
mov
outsl
sub
dec
loop
jl
cld
dec
fwait
jmp
gs
ret
dec
out
push
lahf
sub
or
call
jnp
mov
dec
pop
emms
pop
pop
adcb
dec
insb
jmp
pop
pop
aas
jecxz
pop
mov
les
pop
mov
mov
lret
jb
addb
out
imulb
sahf
shll
adc
cmp
out
mov
das
sbb
adc
filds
adc
xor
add
aad
imul
add
loop
in
mov
push
adc
jo
pop
sub
add
xorb
bound
out
mov
and
mov
call
cmp
push
insl
mov
pusha
sbb
inc
cmp
mov
fmuls
add
push
pop
and
mov
pop
fisubl
dec
xchg
xlat
lahf
push
xchg
negl
jp
scas
gs
movsb
cli
jmp
or
shll
lock
jb
iret
add
into
mov
mov
daa
mov
pop
aaa
or
iret
inc
or
inc
sbb
add
add
orb
adc
sub
adc
int
test
aam
adc
out
pop
push
jmp
invd
adc
ret
in
add
in
testl
cmp
test
mov
cmp
inc
push
mov
xchg
mov
pop
pop
dec
and
fbstp
nop
fisttpl
xor
call
stos
mov
push
aam
jb
push
push
push
mov
shrb
sbbl
std
pop
sbb
mov
mov
push
arpl
aas
in
dec
or
sub
into
ja
sti
out
jbe
sub
jle
push
jns
add
fisubrl
sbb
add
xchg
mov
dec
lret
fstl
xor
in
rcll
cltd
int
jne
xchg
cmpb
mov
pop
pop
lock
pop
les
push
jne
out
lret
sbb
pop
push
fstl
cmp
aam
pop
adc
fwait
or
xchg
mov
pop
pop
mov
pushf
pop
pop
into
inc
mov
icebp
mov
inc
mov
sub
sbb
icebp
adc
loope
push
sub
outsl
clc
mov
add
xchg
add
add
mov
or
sub
or
xchg
nop
lret
das
or
cmp
xor
pop
adc
sbb
mov
sbb
mov
sti
mov
ret
ret
stos
aas
sar
and
xchg
sbb
push
into
aam
lret
pop
add
movsl
nop
xchg
stos
fcompl
outsl
stos
call
adc
aas
sub
pop
loope
cld
inc
jp
adc
xchg
sub
jns
xchg
sub
mov
xchg
es
push
push
mov
out
jmp
xlat
sub
lret
sub
mov
cmp
mov
out
mov
mov
fidivrl
nop
repnz
pop
add
pop
xlat
addr16
jnp
or
cmc
and
mov
rclb
movsb
scas
aam
push
pop
fadds
add
std
add
cmp
cmp
xor
mov
dec
stos
mov
rcll
call
jo
cmc
xchg
jl
sbb
push
cmp
rolb
inc
xchg
adc
sti
sbb
loope
and
push
and
xchg
or
in
mov
lcall
xchg
loop
int3
inc
cmp
inc
shrb
je
mov
mov
out
cltd
mov
sahf
sbb
lods
lods
outsb
add
cmp
ret
jbe
outsl
std
shrb
dec
cmp
lret
ljmp
jne
dec
jecxz
jno
icebp
jne
sub
xor
mov
out
push
mov
mov
push
pop
xchg
or
je
out
lock
nop
xlat
add
clc
jo
add
cld
ret
stos
in
xchg
push
aas
loop
and
cmp
adc
dec
or
inc
ret
enter
das
and
or
mov
pop
mov
adcl
sahf
adc
ret
test
or
in
jge
xor
cld
loope
jmp
lahf
andb
pop
out
sbb
int
add
das
lea
mov
aam
push
sub
pop
pop
adc
sti
add
negb
mov
mov
and
xchg
je
dec
mov
mov
jmp
cmpsb
pop
cmp
dec
cmp
insb
test
mov
scas
xchg
xchg
mov
loop
add
shl
jnp
shll
inc
sbb
movsl
mul
cltd
xchg
sbb
mov
inc
xchg
dec
inc
loope
adc
iret
hlt
das
pushf
pusha
lea
imul
loopne
icebp
stc
ret
aad
movsl
lahf
rcll
xchg
mov
sbb
xchg
cltd
push
push
dec
mov
jle
xlat
push
jge
les
ror
out
xchg
xchg
mov
sbb
inc
fldcw
scas
cmpl
xchg
pop
jp
loopne
dec
cmpsl
pop
stos
popa
xchg
popf
stos
int3
cmp
dec
add
jg
push
jp
add
ja,pt
jecxz
mov
call
fistpll
or
jbe,pn
mov
cltd
and
iret
mov
fs
in
sbb
jg
and
sub
imul
pop
shlb
cmp
inc
inc
jp
jno
lods
push
sti
cltd
push
lcall
push
and
mov
sbb
out
lods
daa
pop
add
insl
jb
loopne
outsl
loope
clc
mov
loopne
out
dec
cmp
inc
sbb
in
sbb
mov
ret
enter
inc
into
das
bnd
aas
xchg
je
idivl
test
test
pushf
and
mov
ret
lret
xchg
aas
data16
jge
dec
add
mov
jbe
ss
repz
push
les
cmc
aaa
mov
dec
jmp
adc
push
cwtl
packssdw
inc
scas
or
mov
test
lods
pop
mov
adc
sbb
shlb
dec
sub
std
sbb
not
sub
mov
cwtl
sbb
mov
push
mov
xor
adc
icebp
xlat
xor
mov
xchg
dec
test
mov
jmp
out
push
aaa
cmp
pop
shll
test
andb
push
push
xchg
push
enter
scas
stos
into
mov
jbe
add
idivb
dec
jne
xor
fbld
jae
pop
addr16
sbb
or
in
push
cmp
adc
repz
pusha
lods
fwait
in
mov
pop
pushf
andl
idivb
outsb
inc
movsl
mov
and
inc
icebp
and
inc
cmpl
push
mov
dec
repz
repz
mov
jecxz
and
and
jmp
movsl
sbb
test
shl
or
mov
dec
mov
fsts
add
mov
in
sti
clc
jae
loop
pop
or
and
stos
addr16
sbb
cwtl
pushf
das
lret
jg
adc
mov
or
add
shrl
push
jne
addl
adc
cmp
pop
addr16
enter
inc
stc
insl
pusha
cwtl
sub
inc
inc
ss
mov
call
repz
pushf
aaa
shrb
pop
inc
es
sub
inc
sbbl
fsubrp
xor
js
mov
cmpsl
jecxz
movaps
mov
inc
and
xchg
jl
mov
xlat
mov
clc
cmp
popa
mov
mov
cmp
cs
cmp
mov
test
dec
fiadds
int3
sub
imulb
mov
pop
jo
in
pop
jge
adc
ljmp
dec
or
lahf
mulb
and
cmpsb
fldt
cs
sub
daa
mov
push
cmp
sub
xchg
imul
xlat
xor
lret
in
call
cwtl
pushl
xchg
xchg
sbb
out
lods
mov
mov
or
sti
negl
aaa
and
int3
pop
push
mov
repnz
pop
dec
mov
iret
pop
mov
ror
jnp
jno
jge
mov
inc
pop
test
clc
scas
pop
lcall
pop
fst
push
mov
inc
pop
test
fimuls
xchg
addr16
dec
sti
dec
faddl
adc
xchg
out
dec
lods
mov
jns
or
push
lds
ret
test
xchg
pop
cmp
lret
fwait
subl
lods
std
jmp
push
repz
jl
adc
mov
scas
push
je
andl
leave
xor
xor
pop
aam
in
test
nop
push
or
xlat
pop
in
lds
cmc
jae
ljmp
cmp
jge
test
aaa
sub
dec
or
jae
mov
jns
insl
add
jg
xor
adc
cmp
push
jo
in
and
mov
inc
pusha
adc
adc
push
loopne
inc
mov
std
shlb
inc
fwait
test
jge
out
add
jb
scas
push
jae
inc
mov
sahf
inc
mov
ss
stc
inc
cmp
or
and
repz
xor
ret
sub
loope
stos
xor
aas
xor
nop
inc
lcall
jno
aas
lss
xchg
and
pop
ja
inc
shl
mov
stc
sub
jg
push
xchg
fistl
push
inc
dec
inc
push
cmp
inc
cmp
mov
xchg
sahf
mov
outsl
ss
insb
mov
idivb
je
mov
push
in
jle
xchg
push
shlb
jl
or
rolb
dec
mov
negl
lods
insl
iret
or
push
ss
lods
in
adc
cmc
push
in
sub
and
push
es
icebp
gs
mov
dec
bswap
iret
fwait
call
out
loopne
jl
addr16
xchg
adc
cmpsl
xchg
jb
inc
aad
sub
mov
cwtl
push
pop
outsb
cmpsb
pop
mov
ja
pop
cmp
popa
int3
mov
shlb
fsub
sti
xchg
insl
push
test
inc
mov
xor
mov
test
movsb
and
sti
sub
or
pop
xchg
mov
inc
shrb
push
cs
xchg
ja
cmp
inc
rcrb
stc
mov
lcall
outsb
movsb
lods
xchg
adc
adcb
push
inc
pop
pop
adc
daa
add
xchg
aaa
adc
xchg
push
adc
pushf
jp
push
dec
test
fnstenv
sbb
pop
stos
and
bound
daa
lock
cli
add
mov
idivl
cli
pop
pop
adc
pop
adc
cld
popa
inc
dec
dec
loop
and
and
push
out
mov
fsqrt
mov
clc
mov
stos
lret
pop
pop
lods
sub
test
mov
jge
xor
and
dec
mov
xchg
mov
movsb
popf
arpl
xchg
lahf
xor
ficoml
test
and
aam
enter
mov
mov
adc
xlat
pop
xchg
jp
mov
jae
stc
add
mov
xchg
hlt
pop
sbb
cltd
mov
pop
sub
pop
xchg
jle
rcrl
dec
lret
bound
test
xlat
sti
jecxz
mov
inc
icebp
repnz
movsb
sbb
push
push
lahf
jg
cmp
pop
in
jle
out
mov
andb
or
test
cs
sbb
add
icebp
inc
jmp
daa
test
adc
cmp
mov
bound
mov
jae
std
test
das
cmp
cmc
sbb
in
scas
xchg
mov
outsb
lret
push
in
jns
inc
cli
sub
add
push
and
sub
mov
mov
xor
dec
adc
out
call
jecxz
lret
xor
das
jae
mov
and
test
mov
push
xchg
movsb
xchg
int3
xchg
jbe
lret
mov
movsb
jae
insb
cld
sub
dec
loope
out
push
and
rep
push
das
in
lods
frstor
mov
fwait
sbb
fsubr
test
mov
or
dec
mov
std
add
in
ja
adc
jne
mov
or
arpl
loope
inc
cmc
xchg
inc
sub
test
and
sub
pop
loope
mov
dec
loopne
dec
and
jle
movsb
inc
ds
pop
xchg
int
loopne
lea
jl
and
mov
lret
push
dec
and
lea
test
push
lock
and
lret
ljmp
out
push
jl
movsl
ret
push
xchg
clc
dec
fistpll
test
ja
out
lods
mov
bound
outsl
cmp
int3
xchg
push
dec
xchg
pop
mov
vmovupd
jmp
iret
scas
sub
fwait
pop
sub
test
cwtl
nop
jae
iret
push
mov
lcall
dec
inc
pop
push
iret
xor
push
call
clc
imull
jb
xor
xor
scas
ja
and
push
push
repnz
cmp
in
pop
fiaddl
scas
pop
popa
pop
mov
movsl
shlb
adc
popa
sbb
cmp
sub
push
sub
les
arpl
mov
xor
lea
mov
pop
lds
sti
pop
and
sub
mov
xchg
pop
repz
mov
mov
mov
and
sub
lcall
mov
xchg
aaa
mov
jge
popa
add
sbb
mov
push
ds
shrl
out
push
push
repnz
stos
inc
fbstp
ljmp
in
cmp
sbb
rorl
sahf
out
inc
add
sbb
stos
rorb
or
mov
idivb
pop
loop
push
ds
pop
fisubrl
jns
adc
xchg
mov
adc
xor
xchg
lahf
and
mov
jns
pop
xchg
inc
fdiv
push
stos
xlat
lahf
mov
sbb
add
in
ja
das
testb
mov
fisttpl
aam
insl
pop
enter
and
add
or
mov
xchg
xchg
cmpsb
dec
or
xor
pop
adc
push
out
push
xchg
andl
fdivrs
insl
fmull
out
sti
leave
popa
popf
test
jbe
ret
jle
or
xchg
aas
mov
jmp
fsubr
lds
add
pop
mov
lcall
cmp
sarb
xchg
dec
mov
iret
je
loope
lret
out
inc
fisttps
lds
jg
xchg
sbb
nop
rorl
inc
push
negl
or
inc
adc
jnp
stos
je
mov
shll
sub
push
pop
das
ds
fwait
mov
xchg
lahf
loope
mulb
jae
jne
mov
or
jge
andl
cmp
in
push
rolb
add
mov
loope
lds
push
and
scas
mov
fs
lret
loope
ffreep
mov
push
ror
out
arpl
nop
ja
sub
test
out
xor
cmp
ret
sub
mov
push
xchg
pop
arpl
cld
xor
shr
mov
push
jp
daa
pop
insb
adc
les
sub
or
adc
or
xor
sbb
xor
add
call
ja
mov
and
lcall
push
out
mov
pop
jb
ret
js
outsb
loopne
rcll
hlt
loop
pop
movsl
popa
sbb
insl
bound
ret
xor
add
imul
lods
movsb
pusha
pop
addr16
mov
lcall
mov
jge
div
add
push
movb
sbb
outsb
mov
jbe
repz
pop
xchg
jle
cld
dec
push
shll
fwait
mov
cmp
sbbl
dec
or
jno
push
jmp
mov
mov
jo
inc
adc
cmpsl
movl
mov
arpl
lds
ljmp
stc
mov
sbb
mov
in
xchg
cld
movsl
pop
scas
ss
xor
pop
xor
movsl
inc
push
popf
aad
xlat
push
mov
cmp
add
push
stos
pusha
jnp
bnd
mov
jbe
push
add
and
fptan
mov
aas
jb
lods
enter
nop
mov
arpl
dec
xchg
mov
adc
adc
and
das
fists
sti
mov
js
hlt
aam
ljmp
push
mov
xor
loope
into
jg
sti
jbe
adc
jecxz
mov
cmp
mov
dec
sbb
aaa
jmp
insl
pop
in
add
xchg
fnclex
clc
mov
pop
idiv
into
and
ss
arpl
pslld
mov
inc
or
aaa
mov
stc
xchg
les
xlat
bound
sti
cmp
cmp
mov
push
lods
sub
rorl
fidivrl
add
les
ljmp
mov
sub
xor
stos
aaa
dec
lods
test
jne
outsl
push
mov
inc
push
in
adc
xor
mov
adc
lret
xor
in
daa
fistps
pop
sub
add
cmpb
xor
inc
jge
lds
cs
arpl
xlat
sub
inc
lret
push
cmp
pop
add
insl
addr16
faddl
or
scas
xchg
cmp
mov
push
mulb
xchg
mov
pop
sub
inc
fstl
pusha
stos
mov
push
jb
lods
xchg
or
sub
or
in
out
xor
sar
sbb
ja
test
insl
push
sub
jno
mov
sti
into
dec
pop
enter
jecxz
outsl
dec
popf
mov
mov
and
sbb
scas
sbb
xor
push
push
mov
scas
cmp
fcmovnu
sbb
mov
xor
repnz
mov
pop
out
xchg
inc
sar
out
roll
sub
cmp
popa
arpl
ficomps
pushf
adcb
popf
and
imul
mov
push
hlt
in
cmp
shll
jmp
out
aam
test
mov
xchg
cltd
pop
int
xchg
aas
cmpsl
mov
sbb
les
aam
fnstsw
inc
cmpsb
dec
mov
sbb
xor
mov
cmc
into
mov
clc
jecxz
pop
xchg
ja
repnz
outsl
mov
loop
fsubr
inc
or
adc
es
test
inc
rcrb
jnp
mov
or
sbb
mov
xor
mov
in
int3
sub
unpcklps
mov
lea
push
aas
nop
insl
push
pop
movsl
sbb
ds
cli
test
in
inc
xchg
fildl
inc
xchg
lods
xor
adc
popa
cmp
test
push
inc
push
or
cmp
xor
ss
mov
fmul
lret
sarb
mov
out
sub
dec
cmp
xor
cs
or
clc
add
inc
call
push
shrl
xor
dec
pop
mov
lds
sub
loopne
shlb
xchg
sub
fcompl
xchg
enter
ficoml
fwait
and
push
cmp
nop
mov
cs
mov
and
popl
shll
mov
or
fidivrs
mov
ret
jnp
adc
aam
repz
jp
xchg
arpl
mov
and
mov
mov
push
fwait
and
enter
mov
inc
std
and
mov
mov
mov
and
int
mov
scas
xor
xchg
arpl
dec
jae
lds
out
pop
add
test
or
subl
sbb
mov
jb
pushf
mov
jns
jecxz
dec
fcmovb
out
pop
inc
cmpsl
into
jbe
sbbl
imul
push
les
fnstcw
nop
push
cli
dec
aad
js
jg
test
insb
and
aas
dec
mov
fimull
add
movsl
sbb
adc
or
sub
mov
dec
mov
add
fstpl
pop
fbld
sbb
sbb
out
aas
cmp
push
loopne
popa
adc
mov
fsts
mov
test
inc
mov
leave
mov
push
dec
sbb
inc
icebp
fists
inc
clc
xchg
test
mov
dec
jbe
add
lods
pop
ja
or
push
jge
pusha
jecxz
test
scas
adc
in
pop
nop
mov
lock
jae
clc
mov
mov
icebp
mov
xchg
add
dec
pop
jne
adc
add
sub
push
es
jl
cmpb
lds
andl
push
pusha
mov
inc
das
pusha
pop
xchg
push
mov
idivl
insl
cs
push
sub
je
and
movsb
inc
push
loope
test
sub
inc
pop
bnd
in
sbb
xor
sub
cmove
icebp
loopne
sar
push
pushf
fs
cmp
jne
dec
cld
sbbb
add
xor
ret
add
pop
dec
test
out
push
xor
out
xchg
dec
int
lds
fs
repnz
mull
mov
mov
xchg
push
push
and
add
dec
push
push
pop
loop
xchg
roll
jns
and
fcompl
push
xchg
xorb
les
cmc
pop
push
outsl
outsb
call
loop
mov
aad
or
pop
gs
jmp
mov
adc
push
mov
outsl
push
mov
hlt
jmp
fldcw
in
dec
and
insl
mov
or
adcl
pushf
cld
fnstcw
push
mov
mov
nop
and
call
bswap
lret
outsb
adc
int
or
add
xor
popa
jl
mov
fucomp
push
cmp
lret
jne
fsts
stos
rorb
cmp
push
adc
test
testb
xlat
shl
mov
je
add
adc
pop
mov
ljmp
test
jp
mov
cmp
sub
outsl
xchg
leave
add
xlat
inc
and
and
fdivr
arpl
std
leave
ret
jne
sbb
jp
lcall
mov
mov
clc
nop
adc
sbb
fnstcw
sbb
sbb
xor
xchg
mov
dec
ja
data16
xchg
xor
cmp
fmuls
in
sarl
add
xchg
jmp
jl
test
xchg
or
popf
in
sti
lcall
xchg
in
cwtl
dec
adc
xor
push
push
fadds
add
je
outsl
push
xor
inc
imul
hlt
rorl
dec
bound
dec
mov
jbe
pop
cli
lds
xchg
std
iret
push
inc
adc
cmp
dec
inc
and
mov
xor
and
dec
repz
and
cmp
fwait
xchg
mov
pop
mov
or
push
push
jne
gs
sbb
xlat
jnp
cmp
adc
fisubrl
leave
push
cltd
popf
popa
add
ds
or
mov
aad
shll
xchg
lret
or
fsts
repz
jbe
clc
mov
xchg
xchg
mov
mov
cmp
jnp
xchg
mov
pop
xchg
adc
push
push
aaa
data16
xor
mul
psubb
dec
mov
mov
nop
repnz
add
out
movsb
inc
shr
jno
mov
adc
arpl
movsl
rcrb
xor
popf
rol
push
gs
jg
dec
xchg
mov
xchg
inc
dec
div
xor
loope
or
mov
inc
ret
add
cs
or
pop
sub
leave
mov
orb
sub
icebp
jg
andl
and
xchg
sbb
xor
inc
es
addr16
mov
jp
clc
inc
ss
or
shlb
popl
mov
inc
mov
dec
sub
adcl
push
popf
xor
scas
push
mov
das
mov
fbstp
push
or
incl
scas
dec
aaa
push
test
in
loop
int
fcmove
cmpsb
push
xchg
setno
sahf
shll
cmp
pop
movsl
out
mov
mov
movsl
jmp
loopne
sub
sbb
mov
push
jae
sub
pop
mov
loopne
xchg
cmp
mov
push
leave
icebp
xchg
js
scas
in
pop
fisttpll
movsb
sbb
xchg
jl
add
cmp
imul
cmp
or
insb
int3
cmc
xor
push
lds
decb
pop
xchg
mov
xlat
cmc
sub
xchg
jns
dec
jg
add
pop
movsb
mov
out
or
jbe
pop
pushf
leave
xor
test
add
xchg
notl
push
popa
mov
or
cmp
outsb
out
bound
shrl
fs
or
pop
xchg
dec
xor
jle
push
cmp
stc
hlt
test
lahf
mov
aas
frstor
xchg
jne
rcrl
sti
int
fstps
aaa
mov
mov
push
mov
ja
jnp
mov
mov
std
sub
lahf
cmp
add
lods
add
add
push
and
lock
out
repz
push
imull
cltd
bound
xchg
mov
imul
es
aas
xchg
mov
repnz
imul
imul
addr16
mov
xor
and
sub
gs
movsl
scas
out
loopne
lods
into
scas
mov
xchg
fwait
pop
push
outsb
je
xor
sub
inc
jp
idivl
or
je
sbb
scas
cmp
push
inc
popl
icebp
xchg
movsb
call
jge
roll
lock
pop
gs
ret
cmp
sub
ficoml
pop
mov
nop
fdivs
push
inc
add
pop
dec
sbb
xchg
mov
or
adc
xorl
arpl
mov
mov
jg
cli
sub
mov
dec
dec
and
mov
push
mov
add
add
mov
pop
lea
and
movsb
adc
incl
jnp
insb
and
fisubrs
add
push
fsubr
outsl
sub
je
and
mov
push
testl
insb
inc
popf
and
mov
xlat
stos
scas
fcmovne
pop
pop
dec
rcr
loop
fidivrs
fistps
xor
ja
sbb
sahf
shlb
test
inc
cmp
lds
jg
mov
scas
aaa
xchg
fistpl
subb
ret
push
getsec
xor
cli
iret
and
iret
sahf
pop
xchg
pusha
pusha
fmuls
in
ror
lods
push
mov
add
test
push
sub
push
mov
sbb
ja
add
int3
shr
cmp
pop
add
cmp
pop
loopne
and
jno
mov
ret
cmpsb
add
push
xor
imul
push
fdiv
notb
cld
cmc
xchg
inc
add
dec
mov
mov
adc
out
call
adcl
and
ret
mov
xchg
js
or
je
adc
xchg
int
add
sbb
fisttpl
int
mov
cmp
lret
sub
dec
inc
fsubs
or
es
sbb
int
mov
gs
mov
repz
sti
cmp
push
repnz
jne
aas
loope
add
arpl
adc
out
pushl
xor
enter
or
dec
jmp
xlat
icebp
jnp
xchg
pop
fs
jl
add
repnz
mov
adc
jmp
mov
lds
lcall
dec
jmp
mov
mov
hlt
pop
sarb
sub
mov
rcrl
jae
and
adc
mov
pop
testb
lret
cmp
and
pop
daa
and
mov
pop
das
cwtl
lret
mov
pop
data16
dec
fdivr
test
cmp
pop
xchg
shld
lods
fisubl
lea
in
and
push
jg
jno
aad
ja
mov
in
adc
scas
pop
jb
in
inc
inc
jns
pop
shlb
nop
test
nop
sti
iret
pusha
xchg
rorl
sub
shll
js
sbb
xchg
lret
push
and
call
cmpsl
adc
cwtl
call
test
inc
enter
jo
test
pop
mov
push
sbb
xlat
test
mov
pop
sbb
out
dec
loopne
pop
addr16
rorb
mov
test
les
dec
sbb
mov
cwtl
fldl
hlt
je
into
cmp
pusha
mov
add
xchg
jl
clc
pop
dec
sub
mov
cld
inc
fsubrs
cmpsb
adc
inc
jne
sbb
xor
movsl
push
stos
pop
pop
sub
outsb
bound
pusha
xor
adc
in
sbb
iret
jmp
pop
jg
xlat
mov
dec
test
inc
bound
repz
lock
shl
je
cwtl
mov
sbb
sbb
out
dec
rorb
inc
xor
pop
dec
out
jmp
std
vpunpckhbw
mov
adc
loopne
sbb
hlt
cs
inc
and
xor
jne
inc
xchg
mov
adc
dec
pop
mov
fcmovu
fstl
xor
call
push
cmp
sbb
adc
in
sbbl
pop
std
movsb
add
notb
cld
and
inc
push
in
imul
pop
adc
sub
xchg
cld
xchg
and
arpl
add
stos
in
leave
loop
sub
add
jge
dec
lret
and
jb
call
xchg
insl
setg
mov
sahf
lret
std
jmp
std
mov
fdivs
xchg
iret
jg
sahf
fidivrs
jb
arpl
cmp
or
test
ljmp
jl
push
inc
cmp
xchg
shlb
adc
scas
lea
in
push
lds
mov
push
fmul
fldlg2
je
roll
call
jb
nop
in
inc
pop
jmp
aad
cmp
pop
jno
jo
push
fs
lods
lahf
push
pop
add
jae
lods
or
into
std
mov
fstp
add
cmp
xor
jg
pop
clc
add
pop
in
xchg
pop
ja
mov
scas
movsl
test
daa
enter
mov
je
jmp
rolb
mov
fwait
bound
in
dec
jae
ret
push
outsb
dec
pusha
loop
pop
cwtl
sar
pop
andb
push
or
cmc
loope
mulb
testb
xchg
lock
nop
mov
aas
push
fmull
flds
inc
mov
ja
sahf
ret
outsl
mov
test
iret
sub
icebp
adc
into
into
call
shlb
aam
and
nop
xor
outsl
pushf
lcall
lea
stc
jmp
push
sub
rol
or
lahf
ss
xchg
lds
in
ret
push
push
test
call
adc
jecxz
out
lret
and
lds
xor
xchg
xor
mov
orl
and
adc
cmc
int
xchg
mov
pop
cmp
adc
les
mov
mov
sbb
sub
nop
test
pop
pop
movsb
inc
push
and
pop
pushf
pop
cmp
aaa
movsl
mov
sbb
sbb
out
inc
xchg
test
std
fiadds
push
ja
repnz
ficompl
loop
outsb
or
rcrb
mov
inc
clc
jne
add
jecxz
xchg
outsb
push
push
scas
pop
mov
adc
repz
xchg
xchg
and
pop
lea
mov
out
mov
xchg
cwtl
push
pop
pop
in
sub
out
es
pop
in
jnp
jmp
les
aam
mov
rcrl
mov
push
popa
subl
and
mov
mov
or
add
in
and
cmpsl
dec
push
or
in
lret
and
sbbb
rolb
pop
faddl
adc
frstor
adc
cli
mov
jecxz
add
jns
lock
fwait
mov
sub
pushw
ret
lods
mov
pushf
gs
es
lock
mov
push
insl
jp
pushf
test
jno
mov
int3
cwtl
sbb
dec
add
jns
testb
add
lock
jo
add
es
aas
push
cmpsl
xchg
les
adc
leave
cmp
jl
xor
mov
cwtl
outsl
in
jle
scas
int3
les
sub
test
jae
jl
xor
jb
mov
clc
test
sar
pusha
pop
dec
pop
jo
sub
dec
xlat
insb
add
clc
shrb
jnp
fsubs
cmp
adc
testb
scas
mov
cmp
jae
mov
or
mov
mov
ss
movsl
inc
arpl
sbb
fld1
mov
mov
rclb
in
gs
out
lret
stc
addr16
pop
push
xchg
sbb
jae
mov
dec
jne
dec
sub
jp
mov
imul
push
out
sub
addr16
cmc
xchg
xchg
repz
gs
dec
cltd
mov
dec
cltd
repz
push
sbb
and
not
ret
add
mov
mov
sbb
repnz
lds
rcll
mov
sbb
push
or
pop
mov
jbe
lahf
arpl
imul
push
lea
cltd
ljmp
mov
cmc
and
sub
mov
push
inc
nop
mov
mov
aam
push
stos
lret
jne
pop
inc
movsl
cwtl
in
cltd
rcll
mov
mov
mov
mov
enter
aas
mov
cli
xchg
adc
lods
jecxz
pop
push
pop
test
cmc
dec
es
scas
repz
push
imull
or
add
inc
and
pop
sbb
lea
iret
popf
lret
ret
add
popf
je
mov
xlat
xchg
repz
and
push
cld
and
jp
ja
in
jg
jbe
out
out
lods
clc
inc
or
cmpsb
adc
lcall
mov
or
mov
xchg
mov
jno
sub
cmpb
dec
push
mov
aaa
dec
mov
inc
push
jmp
sbb
and
and
add
mov
push
xor
adc
adc
pop
inc
pop
pop
arpl
inc
test
in
mov
sbb
push
lds
and
in
out
mov
xchg
leave
xor
testb
aaa
mov
jno
pop
cmp
sbb
enter
push
popa
pop
or
dec
aad
inc
fildl
dec
lret
inc
loope
push
js
lcall
push
iret
enter
mov
cmpsb
mov
les
ret
cmc
rcr
jge
dec
out
sub
leave
mov
push
int
push
add
js
in
iret
jp
sub
adc
in
out
std
jae
mov
add
out
mov
inc
ret
and
cmpsl
jmp
mov
data16
outsb
push
jnp
inc
xchg
mov
dec
mov
push
jno
nop
pop
cmpb
mov
jl
pop
lret
int3
stos
jecxz
popa
insl
mov
xchg
roll
mov
insb
aaa
jbe
in
push
jns
push
loopne
pushf
pop
psubq
into
cli
xchg
push
adc
sub
add
sub
jl
test
lods
mov
push
pop
or
mov
ds
push
movsl
int
lret
and
dec
cmp
pop
add
aam
mov
xchg
mov
pop
sbb
or
inc
test
push
test
mov
mov
xchg
mov
fstpl
aam
lods
cmp
fwait
cmp
push
add
arpl
testb
popa
push
or
pop
xorb
outsl
imul
sub
sahf
mov
iret
outsl
inc
jo
cmp
and
inc
xchg
push
pop
pushf
dec
pop
mov
cmp
dec
lds
mov
mov
jge
jmp
ret
popa
lock
jmp
aas
pop
pop
pop
inc
inc
add
sbbl
sub
xor
push
fadds
cmp
minps
push
add
and
adc
addl
pop
xlat
repnz
sbb
xlat
sbb
into
jno
divl
mov
mov
fdivl
stos
bnd
test
je
mov
arpl
pushf
fcmove
cmp
and
and
in
clc
push
xor
dec
sbb
adc
dec
ss
insb
arpl
lcall
fnstenv
cmp
push
add
sub
lret
jecxz
add
adc
xor
push
mov
cmc
repnz
imull
in
sub
push
ljmp
mov
in
mov
dec
jno
jb
dec
iret
mov
movsb
andb
pop
add
mov
jmp
push
pop
popa
and
cmpsl
data16
lret
add
mov
enter
scas
sbb
jnp
push
je
sbb
xchg
arpl
xchg
pop
and
mov
setle
cmp
cmpsb
jno
inc
insl
insb
in
rcl
jmp
out
aas
mov
and
xor
scas
dec
stos
add
cld
push
outsl
cli
mov
andb
negb
mov
rcrb
adc
push
addr16
loope
iret
addr16
pop
addr16
jecxz
mov
push
adcb
jmp
ja
mov
xchg
lcall
push
and
xlat
inc
dec
cwtl
scas
call
and
mov
je
mov
mov
and
test
cs
lock
lods
xor
nop
bound
call
jb
cwtl
inc
push
aad
in
pop
xchg
sti
jne
es
xor
outsl
lret
push
mov
faddp
jb
jns
jp
jmp
sub
pop
into
fstl
sti
loope
or
daa
mov
andb
cmpsb
mov
in
cmpsb
dec
pop
add
jmp
mov
xor
pop
xor
movb
inc
lcall
xchg
mov
add
cmpsb
stc
adc
enter
push
ja
mov
pop
or
cmp
mov
push
lods
sarb
mov
test
scas
aaa
movsl
inc
repz
xor
cli
cmp
cwtl
out
rcl
pop
pop
adc
scas
movsb
add
cmpsl
inc
mov
in
sub
fld
lds
mov
and
test
cmp
mov
mov
lods
int3
hlt
or
fistpll
push
inc
sbb
dec
leave
sub
jl
xor
test
and
rcrb
sbb
sbb
jnp
mov
jns
xchg
sbb
stc
lahf
cmpl
push
xchg
jb
ficoms
pop
push
pop
dec
add
imul
adc
sub
push
adc
lcall
cmp
mov
inc
cmp
push
adc
pop
xlat
test
leave
dec
testb
fmull
xchg
repz
xchg
incl
or
adc
mov
loopne
das
xchg
loopne
lret
adc
pop
in
movsb
fsubl
mov
daa
cmc
sub
cmp
mov
mov
adc
dec
xor
rorb
ss
lds
xchg
scas
orl
mov
jp
sub
push
std
mov
xor
inc
les
and
inc
sub
test
lods
test
mov
lods
jnp
push
scas
cmpb
sbb
adc
cmp
pop
mov
and
fwait
sub
lcall
fdivs
xchg
icebp
dec
xchg
scas
lds
sub
test
pop
cmp
das
out
ja
js
jmp
mov
shll
iret
sbb
xor
js
imul
daa
xchg
sbb
mov
sti
jecxz
psadbw
fsubs
icebp
ljmp
mov
cmpsl
mov
repnz
in
daa
gs
push
mov
int
sbb
loopne
pop
pop
scas
and
pop
mov
call
xchg
stos
push
dec
push
lods
fisubl
cld
lahf
pop
ss
jbe
push
lods
pop
roll
popf
dec
jne
imul
mov
outsb
sbb
ss
lret
pop
jns
jo
pop
add
nop
inc
cmpb
lcall
xchg
shrb
pop
iretw
call
jg
dec
jle
stos
pop
cltd
aas
cmp
push
mov
in
outsl
sub
adc
dec
sbb
jnp
into
shr
push
xchg
stos
out
xchg
push
fnstsw
or
ret
adcb
fldl
out
mov
int3
rolb
js
cmpb
xor
mov
repz
or
repz
sti
adc
leave
pop
dec
std
enter
jb
shll
cld
movsb
aad
call
clc
outsb
stos
inc
cli
push
xchg
mov
add
mov
mov
adc
stos
out
in
xchg
shl
mov
sbb
mov
lock
push
test
scas
ss
sti
ficoml
or
jge
in
lret
fwait
out
pop
loopne
stos
inc
daa
pop
je
inc
jns
call
clc
adc
cmp
iret
imul
adc
in
add
jg
in
in
out
lret
iret
js
jnp
jl
mov
mov
or
pop
and
mov
sbb
push
dec
cmpsl
pop
or
adc
ljmp
jge
ret
cmpsb
push
push
xlat
les
lret
insl
aaa
aad
xor
pop
adc
imul
add
jo
test
test
iret
sbb
cs
fdivrs
sbb
push
lahf
xchg
and
xor
stos
fistps
dec
jle
xchg
ja
mov
jne
and
std
cwtl
pop
push
xor
aas
cmp
loopne
shll
push
jecxz
andb
jg
jg
xchg
repz
xor
dec
gs
mov
lret
pop
xor
cli
sub
aad
in
pop
adc
push
xlat
jg
cmp
in
fisubrs
cmp
push
lods
int3
dec
stos
fnstenv
in
inc
in
faddl
push
cmp
or
mov
divb
mov
jae
xchg
out
mov
sub
and
daa
jl
push
cmp
loop
aaa
mov
ljmpw
out
stc
ja
xor
pop
xor
sahf
out
jno
xchg
cs
pop
cwtl
imul
ss
cmp
pop
movsb
sub
fnstsw
ffree
xor
nop
xor
fisubrl
testl
ret
sub
and
pop
repnz
fs
daa
dec
or
cmpsb
mov
ljmp
sbb
jo
adc
add
add
pop
push
or
es
mov
out
cmp
mov
pop
push
push
cltd
inc
mov
cwtl
scas
mov
cwtl
xchg
iret
cwtl
adc
fidivrl
push
clc
jae
inc
push
xchg
xchg
fsubs
pop
pop
jle
xlat
inc
cmp
jmp
fsubl
jge
out
pusha
xchg
add
xlat
jle
xor
push
movsl
cmpsl
leave
std
imul
cmc
xchg
push
pop
sub
into
cmpsb
mov
ret
aas
inc
xor
out
shl
sub
mov
jg
mov
mov
sub
inc
das
out
rclb
jnp
popa
cmp
call
outsl
dec
es
pushf
adc
cmp
mov
push
push
stos
xchg
rcrb
nop
mov
clc
jl
mov
dec
xor
sbb
mov
or
mov
bound
sbb
nop
pop
mov
add
push
aaa
and
or
cmp
sub
jl
xchg
sub
or
sub
and
shr
loop
jns
dec
scas
in
movsb
subl
push
add
xor
mov
data16
push
dec
dec
sbb
push
push
in
pop
and
cmp
sub
fists
sbb
in
fstpl
insl
lock
pop
arpl
popf
icebp
lcall
pop
test
out
mov
ror
loopne
mov
dec
xlat
rorl
push
lds
push
dec
bound
xchg
aaa
push
or
jnp
or
loop
jbe
push
xlat
sub
lret
outsl
lret
iret
into
lret
addr16
std
push
push
inc
inc
cli
movsb
or
add
sub
xor
pusha
pop
mov
sarl
pop
lret
xor
popf
pop
adc
test
les
sub
sbb
into
mov
notb
scas
icebp
adc
addr16
stos
ja
int
movsb
sbb
inc
fldl
push
cmp
xor
loope
or
fidivrs
add
xor
adc
out
dec
rorb
mull
div
cmc
adc
movsb
mov
cli
push
sti
inc
dec
and
roll
mov
xor
dec
sub
cli
lock
clc
sub
ss
fstp
add
lret
sub
idivl
imul
sbb
mov
lret
pop
sbb
sbb
sub
sub
shll
rcrb
outsl
mov
jo
or
jle
cmpl
aas
mov
out
scas
aaa
or
mov
mov
push
gs
pushf
and
push
into
cmp
and
ljmp
int3
dec
xchg
stc
loope
out
loopne
sar
mov
sub
sub
sbb
sti
bound
movsl
cmp
insl
mov
mov
mov
test
jbe
in
test
stos
loope
gs
cli
movsb
ret
cmpsl
sahf
xor
xchg
fcoms
iret
andl
lret
shll
fsubl
sub
push
rolb
mov
aas
and
xor
add
loop
loopne
xor
xchg
lds
or
loopne
xor
xchg
loopne
cli
into
outsl
pop
icebp
pop
dec
lods
out
inc
das
dec
jbe
out
adc
iret
pop
testl
jg
mov
imul
nop
mov
jnp
out
pop
ret
jl
sbb
bound
test
and
push
mov
mov
or
js
push
sahf
cmp
dec
stos
pop
mov
pushf
cmpsl
cmpsl
stos
xchg
xchg
lahf
pop
pop
adc
and
dec
jecxz
inc
pop
hlt
popa
sbb
xchg
fsubs
pop
ss
fwait
or
mov
nop
movsb
aas
sub
es
jl
repz
jne
mov
std
lock
loopne
mov
out
mov
jge
sbb
xor
rcrb
pop
mov
ss
push
adcl
ret
sub
mov
sub
and
in
shr
les
mov
mov
ljmp
dec
cmp
jg
pop
dec
fs
push
and
cmp
dec
pop
ja
dec
or
enter
xor
mov
jecxz
scas
xor
iret
stos
stc
push
lcall
fildll
shrl
call
inc
mov
bound
mov
outsl
cmc
or
les
cmc
js
rcll
mov
cmp
lret
mov
orb
jp
pop
sarb
xor
int3
xorl
inc
cmpsb
xchg
out
std
and
push
xor
lock
push
xlat
push
inc
dec
xlat
adc
rclb
outsb
xchg
jnp
out
jg
sbb
push
xchg
add
adc
int3
cmp
sti
out
xor
arpl
fisubl
repz
in
xor
movsl
insb
adc
aaa
movsl
gs
loopne
shl
enter
or
push
pop
adc
hlt
jne
xchg
cmpsl
inc
xor
xorl
mov
aad
cmp
aad
lds
xor
push
fwait
loopne
pop
or
lds
out
pusha
cs
jno
mov
leave
pushf
and
adc
ljmp
jp
sub
sub
insb
addb
fwait
test
adc
loop
jp
jmp
roll
dec
and
sub
xor
or
sub
mov
neg
stos
int3
jns
fistl
sub
push
das
lds
xchg
clc
xor
jp
pop
lock
add
dec
ret
xchg
mov
cli
rcrb
xchg
inc
mov
adc
shrl
ror
fdivr
sub
cwtl
push
sub
pop
mov
lret
xor
addb
ljmp
mov
push
lret
push
insb
jne
inc
pushf
dec
cld
mov
lret
sub
jae
pop
mov
movb
pop
cmp
mov
iret
out
inc
jmp
fsts
fimull
ss
inc
pop
mov
js
lods
dec
lock
inc
loopne
dec
hlt
mov
loope
imul
sub
mov
sbbb
pop
sub
inc
ja
sbb
xchg
xor
jb
lds
mov
je
lret
sti
xor
add
cmp
sahf
jg
mov
jnp
fsqrt
adc
cmp
mov
adc
or
lods
sub
jp
sbb
fstpt
lahf
dec
add
mov
xchg
roll
stos
mov
pop
xor
lcall
gs
je
dec
or
sbb
in
jbe
repz
jl
mov
movsb
dec
fcoms
mov
dec
bnd
cmpsl
sub
faddl
jo,pn
out
dec
sbb
out
addr16
pop
xchg
popf
add
jl
jge
cmp
in
mov
jg
gs
out
push
sub
sub
sub
cmp
aam
cltd
fcoml
sub
rorb
rcrl
in
int
ret
cmp
ret
rcrl
popf
jge
repnz
adc
in
and
push
jle
jg
jg
mov
insb
mov
cmp
adc
jecxz
sahf
or
inc
mov
scas
pop
and
into
add
add
stc
cli
sub
outsb
mov
mov
inc
js
sarl
sub
xchg
inc
jae
pop
push
mov
enter
adc
rcrl
xchg
and
xchg
sbb
pop
pop
inc
mov
fiadds
icebp
pop
lcall
pop
adc
scas
clc
xchg
dec
or
sti
jmp
adc
xchg
rolb
adc
shll
leave
fwait
mov
mov
sbb
sahf
inc
ss
mov
int3
loopew
fcom
insl
lods
xor
movsb
or
jecxz
jnp
push
jbe
sub
push
jl
icebp
mov
call
test
imul
scas
xor
jne
aas
repz
dec
inc
mov
lds
mov
je
adc
out
imul
cli
xchg
adc
cli
cmpsl
mov
test
fidivrs
add
or
lahf
xor
add
hlt
repnz
cwtl
mov
popf
jecxz
stos
in
rclb
push
xchg
fwait
cmp
add
pop
outsb
push
lods
scas
mov
push
stc
adcl
data16
cs
or
adc
fcomip
xchg
or
xor
cmp
xchg
push
andb
and
mov
adc
dec
clc
pop
xchg
cmp
cvtps2pd
sub
xor
pop
jge
fucom
or
aaa
mov
ljmp
int
or
inc
mov
je
or
roll
mov
ss
je
lcall
cmpxchg8b
mov
dec
das
cmp
mov
jbe
sbb
ret
and
mov
call
push
add
add
rclb
loopne
inc
pop
div
stc
test
or
ljmp
adc
sahf
mov
dec
mov
cwtl
push
push
mov
pop
jno
daa
pop
mulps
hlt
cmpsl
insb
outsl
aad
aam
loopne
mov
jp
sub
mov
clc
dec
adc
pop
clc
punpckhwd
jg
inc
negl
imul
lret
aam
sub
ljmp
add
xor
jbe
into
in
inc
test
mov
icebp
jp
sbb
insb
insl
lods
outsb
mov
push
insb
jmp
outsb
mov
pop
inc
repz
add
jb
sub
icebp
shr
pop
sarl
xor
pop
sub
inc
dec
lea
je
mov
es
mov
aas
xchg
mov
je
pop
inc
aad
cmp
es
mov
mov
push
das
test
dec
outsb
mov
dec
cwtl
or
dec
das
mov
adc
cmp
push
jae
add
scas
loopne
inc
mov
decb
repnz
push
pop
adc
mov
ds
xlat
lcall
jmp
pop
fs
jle
loope
leave
dec
int
sarb
aad
fcmovbe
xor
push
dec
sti
and
xorl
pop
lcall
in
in
outsb
mov
push
xlat
inc
xor
sbb
inc
and
dec
mov
in
andb
in
mov
test
ror
sbb
xor
pop
push
jae
inc
rcll
mov
mov
push
cmp
push
mov
mov
test
mov
jnp
sbbb
inc
pop
inc
mov
mov
pop
lds
fildll
or
sub
pop
int
xchg
popf
ret
stos
sub
mov
push
mov
ljmp
in
and
ds
insb
insl
xchg
incl
push
std
mov
mov
stos
cld
negb
ds
adc
mov
aam
xchg
cmp
mov
faddl
dec
push
cmpsb
jns
enter
lea
pop
or
cli
ficompl
push
jne
dec
cltd
cmc
repnz
jge
lods
iret
add
mov
dec
cmp
movsb
push
das
out
scas
repz
test
and
es
jae
loope
sti
adc
rol
add
dec
mov
xchg
mov
jne
adc
shl
mov
mov
and
int
add
xorl
inc
mov
notl
jne
insb
jmp
cmpsl
cli
add
inc
push
fs
push
lds
mov
mov
es
shlb
call
out
in
pop
std
fcoml
mov
cmpsb
arpl
add
fsubp
dec
mov
ja
xor
cmp
or
push
inc
and
imul
pop
and
cwtl
lock
cmp
shlb
or
sbb
jge
cmpsb
mov
xchg
cmp
repnz
icebp
push
xchg
or
mov
aaa
and
mov
stc
sbb
cltd
clc
leave
jae
pxor
leave
xchg
push
popf
pop
mov
aad
hlt
dec
or
and
cmp
out
std
shr
jb
test
test
shl
xchg
adc
scas
mov
cmpb
ret
jno
sub
lods
adcb
enter
je
movb
js
mov
sub
sub
pinsrw
into
push
rclb
push
mov
lahf
in
mov
pop
adc
fistl
mov
aad
push
fs
sub
hlt
rcrb
push
fbstp
out
pop
mov
mov
xchg
jo
fstpl
imul
push
add
pop
ds
sbb
jb
fcomps
stos
adc
testl
jg
frstor
push
lds
push
adc
mov
push
jg
sub
pop
imul
pop
push
icebp
adc
jmp
shlb
dec
pop
gs
shrl
mov
jmp
ja
xor
sti
pushl
mov
ds
jecxz
adc
pop
jno
sbb
popf
jae
shr
lock
inc
cld
sub
fnstcw
pop
and
sub
mov
ja
pop
jle
dec
jbe
xor
mov
jne
lods
aas
test
cmp
in
filds
test
cwtl
push
test
es
movswl
mov
mov
cmc
loopne
sub
jns
filds
cltd
test
out
pop
mov
in
xchg
sbb
xor
sti
sbb
mov
dec
loope
stos
push
fdivrp
sbb
jmp
jp
jo
xchg
cmpsl
sti
stos
shll
mov
or
je
xchg
and
inc
ss
sbb
cmp
push
ficoml
subb
in
sub
mov
movsb
outsb
loope
pop
test
lods
add
test
pushf
js
xor
les
xor
xchg
gs
cmp
xchg
pcmpeqb
fldenv
jo
scas
fstpl
adc
mov
inc
ja
mov
sahf
ja
arpl
pop
faddl
and
and
fisubl
pop
sbb
pop
push
clc
dec
ret
pop
scas
aad
test
jl
pop
mov
ljmp
jno
sub
loopne
xchg
mov
lea
shrb
mov
inc
jb
hlt
pop
jae
addl
movsb
test
xchg
xor
das
push
rorl
inc
mov
es
fucom
pop
xchg
int
add
lret
das
imul
or
popl
dec
pop
out
jg
pop
mov
lea
mov
sub
mov
stos
jp
ss
ljmpw
adc
and
movsl
sub
xor
pop
cs
push
sub
push
mov
popf
xor
jb
or
mov
inc
inc
or
int
popa
jmp
bound
jecxz
dec
mov
dec
push
dec
jns
ljmp
imul
xchg
je
dec
jno
sub
xorb
jmp
pushf
ret
ja
cmp
pop
stc
inc
adc
pop
pop
fistpl
push
addr16
shlb
jno
push
js
add
cld
jmp
shrb
or
pop
jecxz
jo
mov
and
lahf
decb
push
dec
mov
and
es
fistl
outsb
sbb
pop
xchg
xchg
rorb
dec
cmpsl
sub
es
or
iret
mov
dec
out
push
xlat
ja
adc
mov
add
repnz
aad
test
mov
cmc
shlb
sub
lods
push
in
or
mov
ja
sti
test
mov
fs
jl
gs
add
clc
ficoml
push
and
adc
lea
jg
mov
push
ss
mov
xchg
adc
lods
in
lods
adcb
roll
repnz
fisttpll
add
mov
sti
xchg
xchg
loope
int3
xchg
movsl
mov
in
in
inc
movsl
mov
subb
ljmp
pop
cmpsb
lea
lret
clc
pop
leave
add
jno
or
jecxz
push
stc
mov
call
pop
addr16
movb
cmp
adc
xor
and
inc
adc
stos
push
lock
push
in
mov
mov
cmc
cmpsl
enter
scas
arpl
push
test
sbb
cltd
dec
jp
rorl
or
fdivrl
adc
lods
inc
movsl
pop
cmp
jecxz
push
xchg
jge
shl
addr16
mov
sbbl
movsl
xchg
repnz
pop
icebp
jl
negl
inc
pop
sub
cmc
pusha
out
cmc
int3
andb
dec
inc
loop
arpl
enter
sub
push
sub
pop
mov
mov
or
adc
leave
rorl
insb
xchg
push
pop
lds
jno
mov
xlat
xchg
sbb
in
sub
mov
gs
movl
and
xor
ret
fstpl
and
sub
xchg
fwait
lahf
cli
inc
popf
mov
arpl
mulb
ret
icebp
xchg
sbb
mov
call
outsl
mov
out
test
test
mov
inc
inc
mov
adcl
pminub
imull
and
push
std
rclb
push
xchg
sub
push
imul
movsb
dec
icebp
push
out
cwtl
inc
int3
adc
pop
push
and
push
dec
cmc
popf
ret
sbb
sub
shl
cmp
mov
pop
push
mov
lods
sahf
xchg
pop
sbb
inc
icebp
clc
cmpsb
ret
mov
inc
std
movsb
xchg
pop
insl
rorb
jle
mov
dec
dec
or
incl
lret
xchg
lds
daa
mov
jb
imull
mov
std
pop
imull
mov
inc
fwait
sub
xchg
repnz
xor
jbe
rcll
js
mov
or
pop
in
sarb
fcmovnb
pop
test
insb
push
xchg
sub
mov
fadds
fcmove
pop
push
pop
repz
mov
mov
jno
jmp
mov
cld
mov
dec
pop
mov
add
dec
shl
push
iret
pusha
or
push
xchg
or
rolb
xlat
xchg
mov
cli
push
inc
fs
push
adc
aaa
test
ljmp
imul
scas
adc
jmp
clc
loope
popf
mov
mov
ljmp
jo
cli
ss
outsb
arpl
inc
repnz
push
das
xor
outsb
cld
lock
in
inc
sti
fstl
inc
ficomps
push
sti
pop
pop
and
loope
cmpsb
jmp
inc
aad
and
std
int
pop
lds
add
cmpsl
out
sub
sbb
icebp
das
xchg
adc
xchg
inc
in
and
xor
push
in
pushf
stos
add
shrl
shlb
jl
lods
add
fimuls
jb
sbb
inc
pop
add
mov
ss
dec
sub
jl
shlb
fdivrs
outsb
fbld
int3
xchg
or
mov
hlt
mov
mov
xor
or
and
sbbl
jge
cmp
pop
cmpsb
add
icebp
out
add
push
mov
push
orl
pop
adc
adc
dec
inc
jmp
sbb
sbb
test
dec
aam
test
call
inc
gs
lret
add
lods
aad
pop
lret
gs
xchg
sbb
and
cld
xlat
mov
xor
pusha
arpl
fs
rcl
in
sub
rolb
jmp
add
stc
mov
pusha
and
nop
inc
push
xchg
stc
shll
and
xlat
jp
fists
cmp
scas
clc
cs
iret
or
mov
dec
fsubl
mov
lock
shll
sub
out
sti
cmp
sub
in
or
mov
leave
cmpsb
icebp
mov
sbb
sahf
scas
xor
mov
mov
cmpsb
mov
xor
dec
xor
or
int3
xchg
xchg
push
insb
sbb
adc
adc
pop
mov
insb
jae
sub
mov
out
arpl
fwait
pushf
add
mov
stos
sub
push
cwtl
lods
mov
sub
fwait
push
jno
mov
pop
pusha
and
ja
add
pop
int
mov
push
addr16
je
scas
adc
pop
shll
jmp
xor
mov
in
lock
xchg
bound
leave
adc
or
aaa
or
icebp
mov
pop
sub
rcll
fsub
in
rcrl
rcr
nop
inc
jb
or
jnp
and
dec
jmp
int3
mov
pop
mov
fisubrs
stos
in
mov
xchg
enter
std
mov
out
leave
in
cmpsl
xchg
inc
jg
sub
xchg
stc
adc
mov
mov
push
add
dec
int
lods
lods
xchg
into
xchg
popa
inc
cld
ret
push
daa
sub
mov
aad
fnsave
jns
call
xchg
in
mov
push
push
bound
popf
or
rcll
mov
daa
cli
daa
cmp
jbe
fmuls
das
aam
jnp
cmp
pop
pop
sbb
xchg
testb
mov
stc
roll
orb
pop
mov
dec
cmp
and
imulb
cs
repz
fwait
lock
jmp
sub
cmp
mov
jno
in
out
dec
iret
jp
cmovl
jle
sbb
int3
fmuls
push
std
es
xchg
xchg
dec
aam
daa
out
mov
std
mov
mov
inc
fstps
pop
adc
stos
imul
ja
loop
lea
jp
inc
out
mov
lds
push
dec
or
loop
daa
adcl
dec
dec
inc
xor
aad
cmp
xchg
mov
cs
sarb
addl
into
fst
fwait
sub
fstl
push
dec
outsl
cli
sbb
lahf
cmp
jecxz
pop
dec
and
inc
test
rorb
outsb
loope
xchg
adc
sbb
imul
push
insl
sub
mov
dec
je
lcall
movsl
sub
ljmp
push
and
xchg
or
push
and
xor
fxch
sub
movsl
in
stos
inc
insl
fcomps
mov
xchg
jmp
mov
mov
in
stos
daa
dec
les
cmp
popa
outsl
mov
outsl
outsl
sbb
addr16
in
imull
pop
lock
jo
fldl
fistl
pushl
dec
mov
push
ret
mov
lods
lods
dec
adc
jecxz
cli
in
rclb
cmp
cs
xchg
xorb
pop
and
mov
ret
pop
pop
mov
js
dec
lahf
out
pop
and
inc
cmp
xchg
jbe
out
mov
loopne
imul
data16
dec
push
test
sbb
fistpl
mov
lods
lods
into
mov
int3
xor
ficompl
fisubl
push
aas
jmp
mov
stos
mov
sub
loop
enter
pop
inc
inc
cmc
xchg
fdivs
sahf
outsl
arpl
and
xchg
nop
cmp
push
push
pop
out
lcall
aas
push
mov
mov
xor
mov
pop
decl
xchg
mov
in
out
push
fwait
xor
push
shll
pushf
scas
test
out
xchg
dec
mov
shlb
gs
loop
mov
lock
call
push
stc
fistpl
shrl
fcomp
mov
or
out
jb
fistpl
jo
clc
cld
pop
lret
push
mov
loope
jbe
inc
mov
daa
repz
sbb
cmc
jge
fs
cld
cwtl
and
dec
out
mov
movsb
aaa
dec
pusha
mov
mov
xor
mov
popa
jne
js
es
mov
cmp
mov
push
inc
pop
outsb
dec
sti
cld
stc
and
leave
sti
in
mov
popa
cld
add
pop
xor
or
mov
imulb
dec
lret
insb
std
fidivl
mov
in
cmp
jecxz
std
and
lods
push
push
data16
xor
add
jbe
mov
mov
dec
insb
je
mov
xchg
jecxz
mov
push
xorl
cmp
repnz
or
push
enter
cmpsb
push
mov
enter
pusha
test
cmp
inc
mov
imul
pop
adcl
adc
pop
iret
insb
orb
dec
dec
xchg
inc
sbb
fnsetpm(287
fcoms
out
das
add
shll
or
adc
stos
jge
test
int3
arpl
test
xchg
mov
sub
adc
add
jecxz
neg
sbb
pop
outsl
adc
dec
shl
adc
jns
clc
in
sub
sbb
mov
xchg
aam
xchg
cmp
adc
cli
jo
shrb
insl
fxam
movzwl
scas
roll
js
repz
xchg
mov
scas
inc
jnp
fcompp
in
xlat
test
jmp
lods
test
daa
jp
cmpsb
add
leave
lret
add
fsubp
sub
cmpsl
dec
stos
mov
mov
cmc
lcall
int
lds
xlat
popf
mov
fiadds
fidivrl
pop
into
xchg
inc
xor
loop
mov
jg
hlt
jle
cmp
gs
jno
pushf
push
movsl
sbb
or
sub
inc
fdivrp
or
in
hlt
in
repz
gs
decb
mov
loopne
sbb
sub
add
sbb
pop
mov
cld
outsl
dec
add
shl
ss
mov
fwait
xchg
shr
jp
lret
adc
and
shlb
push
dec
ljmp
push
or
je
aam
pusha
notl
aaa
in
hlt
jmp
mov
clc
dec
orl
js
or
lret
mov
mov
inc
cli
rcrl
iret
dec
pushf
dec
rcl
push
leave
call
in
fwait
out
mov
push
daa
inc
stc
sub
popa
movsl
fs
je
adc
test
test
js
and
pop
mov
add
mov
cmp
mov
jb
in
repz
cli
xorl
cs
sub
fnstsw
mov
jg
lcall
fcmovbe
or
pop
inc
xchg
or
push
inc
adc
pusha
xchg
xchg
pop
xor
jg
xor
pop
incb
xchg
addr16
xor
fistpl
xchg
add
add
jl
and
push
call
mov
idiv
and
dec
xorb
push
insl
inc
sbb
xchg
inc
aam
movsb
adc
add
jae
hlt
dec
insb
stc
sub
or
jns
mov
push
pop
les
sub
jle
mov
fidivl
push
cli
xor
xchg
js
pusha
repz
mov
push
idivb
xchg
xlat
mov
jge
adc
or
icebp
les
jae
imul
pop
sub
cltd
xchg
pop
ror
mov
out
pop
outsl
xchg
push
cmpsl
inc
fs
mov
cmc
mov
data16
mov
cmp
in
xchg
xchg
push
push
imull
loop
into
scas
adc
push
loop
cwtl
push
or
mov
lods
lahf
push
int
mov
mov
push
enter
jmp
and
xchg
sbb
pop
sarb
mov
dec
movl
fs
add
lret
mov
lahf
lods
jo
push
and
push
mov
or
mov
pop
movb
mov
ror
mov
push
or
rcrl
jmp
dec
pop
or
cwtl
sub
les
xchg
movsl
mov
jno
pop
add
addr16
ret
xor
mov
in
xor
jmp
insl
andb
mov
push
push
sub
in
mov
int
fnstenv
test
push
stos
test
sbb
sbb
pop
rorl
je
add
mov
dec
sub
cs
pop
xchg
imul
stos
hlt
pop
sbb
bound
bound
or
fimuls
xor
pop
or
pusha
push
insb
leave
sub
repz
das
dec
dec
sarl
cmp
or
popa
fistps
imul
stos
ljmp
dec
add
xlat
mov
adc
das
xchg
nop
mov
shr
inc
and
dec
push
push
mov
sidtl
aaa
pop
push
dec
nop
ret
into
mov
jae
das
jbe
mov
je
ret
popa
neg
sbb
lods
insl
in
sub
jmp
enter
test
xchg
push
loopne
add
push
add
sub
mov
int
lahf
push
jno
stc
addr16
clc
adc
mov
lahf
ja
in
push
mov
icebp
push
sti
std
movntps
push
or
pushf
adc
or
mov
fucomi
dec
mov
ficoms
or
js
out
xchg
out
insb
sti
repz
cmp
insl
sub
mov
jne
mov
pop
mov
sbb
inc
pusha
pop
mov
stc
add
cmp
es
aas
aaa
pop
test
and
lahf
sbb
in
push
sbb
testb
mov
mov
xchg
add
loop
int
xor
mov
lcall
adc
int
enter
mov
add
sub
mov
mov
in
jp
dec
xchg
add
xor
pop
cmc
int
mov
xchg
ljmp
addr16
in
scas
xor
or
js
mov
jb
roll
clc
loope
ret
icebp
add
or
std
ret
lcall
dec
popa
mov
lea
int3
dec
mov
add
inc
enter
stos
fmuls
test
cmp
mov
rcll
cli
pop
ds
movsl
mov
xchg
mov
pop
lds
dec
aad
push
jno
icebp
idivb
ret
lods
test
aaa
fsubrp
sub
clc
xor
jne
and
pushf
scas
cmpb
push
or
xor
and
adc
packsswb
sbbb
jecxz
add
jmp
fwait
sbb
cwtl
je
lcall
scas
stc
add
adc
add
pop
sub
sahf
loop
and
pop
sbb
xchg
dec
jb
test
fwait
into
lcall
dec
inc
rclb
scas
inc
push
test
clc
lds
mov
inc
shll
sub
push
fldcw
popf
mov
push
or
sbb
leave
ds
dec
and
xor
lds
les
int
addl
adc
test
nop
iret
popf
movsl
rolb
and
out
lock
pop
fisttpl
fstl
int3
cmpsb
mov
sbb
icebp
jp
add
test
jae
xchg
notb
push
inc
out
aam
sub
dec
nop
cltd
dec
mov
jl
hlt
lods
adc
xchg
mov
adc
jnp
pushl
push
dec
push
lock
or
dec
mov
adc
mov
add
add
cwtl
pop
or
xor
aaa
add
in
add
sbb
dec
ds
jno
pop
xchg
cli
out
pop
testb
movsb
dec
pop
adc
sbb
stos
pop
mov
nop
xor
bound
fistps
cmp
cmp
push
andl
push
xchg
jmp
xchg
into
cmc
cmp
sbb
in
lret
insl
mov
push
sbb
and
sahf
in
insb
xorb
daa
out
jmp
xchg
out
gs
inc
push
aaa
add
ds
push
push
adcl
pusha
pushf
movsb
scas
xchg
stos
push
cmpsb
scas
xor
arpl
mov
xor
lock
mov
ficoml
mov
and
sti
fwait
gs
pusha
test
out
mov
cwtl
mov
or
inc
loopne
mov
cmpsb
jae
fadd
cmpb
xor
mov
and
out
mov
mov
sub
sub
add
adc
mov
or
fmull
inc
inc
stos
ret
outsb
rcrb
aad
imul
mov
sub
mov
jge
mov
cmp
outsl
xchg
push
aaa
sbb
mov
jl
js
dec
aad
pop
loope
rorl
stos
sbb
mov
lods
pop
cld
sbb
lret
adc
xchg
test
mov
xchg
test
popa
frstor
pop
stc
pushf
fsts
xor
push
sub
push
loope
dec
pop
mov
pop
call
out
xchg
and
cmc
aas
add
mov
and
ljmp
inc
and
pushf
xchg
aaa
and
add
das
push
mov
or
xchg
mov
imul
xchg
cmc
fsubrl
sarb
push
push
dec
sbb
jne
xlat
mov
dec
aad
out
mov
ljmp
outsl
loope
and
push
xchg
push
dec
dec
jmp
test
xchg
sub
lcall
xchg
repnz
sub
lods
fwait
call
fnstenv
adc
pop
pop
jl
xchg
test
jp
aaa
aas
cmp
cmp
out
xchg
xchg
xor
leave
aam
lahf
sub
mov
cs
cwtl
leave
cmp
push
adc
cmpl
jg
inc
pop
mov
cmp
push
xchg
xchg
ljmp
push
fbstp
push
push
adc
sbb
inc
sub
add
nop
or
dec
push
mov
test
push
xchg
je
lcall
sbb
aad
mov
push
cmpsl
mov
adc
pop
inc
or
dec
push
cmc
fs
daa
push
dec
test
int
fsubp
popa
subb
popa
fimull
sbb
or
jne
mov
stc
into
std
adc
push
pop
pusha
jbe
fs
mov
and
imul
xor
xor
fbstp
lock
xchg
stos
lea
or
inc
imul
inc
xchg
gs
je
dec
fs
in
push
add
mov
mov
fmull
int3
and
aas
imul
inc
xor
push
xor
and
push
stc
mov
sbb
aas
mov
popl
mov
movsl
xchg
lods
push
movsb
xchg
jb
jbe
jne
xchg
cli
sub
insl
insb
push
insl
push
cli
aaa
popf
or
ret
out
decb
dec
aam
inc
stc
int
mov
xor
test
fs
dec
jg
fisttpll
sbb
orl
loope
xchg
loope
rclb
add
js
cmp
mov
mov
ret
sahf
ret
out
push
in
pop
fldenv
das
xchg
mov
sub
or
or
xor
pusha
push
cmpsb
add
testl
aam
mov
or
scas
loope
mov
aam
xor
lods
dec
xor
add
hlt
pop
jo
stos
xchg
inc
xor
mov
aaa
pop
ss
sub
imul
push
ret
mov
jge
mov
subb
pop
outsl
jle
jmp
mov
mov
jge
movsb
or
cltd
adc
movsb
and
pop
cmp
adc
pop
push
sub
adc
push
pop
cmp
mov
aaa
and
lret
daa
incb
mov
dec
adc
call
jge
notl
sbb
mov
scas
jns
cld
frstor
lds
add
cmc
mov
jnp
hlt
jbe
mov
push
add
out
jo
sub
roll
mov
shll
jp
mov
sbb
xor
dec
sbb
ja
cmpsl
cmp
inc
xchg
sub
adc
mov
mov
mov
out
cmpsb
mulb
cmpsb
int3
jo
sti
sub
pop
xchg
jne
mov
bnd
sbb
jmp
in
test
adc
and
xchg
mov
inc
xchg
xchg
xor
lock
fs
push
testl
xor
cwtl
mov
mov
sbb
mov
stos
mov
cmp
ret
pop
dec
inc
gs
mov
orl
int3
fcompl
dec
out
stc
testb
or
mov
repnz
adc
ljmp
jb
lret
movsb
out
push
or
test
jne
fwait
andb
xor
jl
rclb
lret
xor
movsl
dec
in
ror
xor
xor
aaa
mov
jb
addl
xchg
cli
sbb
cmp
push
inc
inc
scas
lds
out
mov
cmp
xlat
push
dec
shll
je
pop
das
xchg
mov
cmc
arpl
pop
mov
dec
insl
fcmovne
jmp
shll
jp
fcoms
cmp
pop
jle
lret
fnsave
xlat
dec
inc
cwtl
jl
pop
fcmovu
sbb
pushf
sbb
pop
shrb
add
pop
push
ds
cmpsl
dec
mov
sbb
outsl
pop
iret
aaa
lock
cmovb
push
inc
sub
xchg
sahf
pop
add
jb
jbe
mov
add
lcall
sub
or
test
pop
es
lcall
outsb
or
movsb
loopne
mov
xchg
lock
pop
movsb
ud2
sbb
repnz
dec
ljmp
xchg
insb
stos
mov
mov
popf
inc
and
sarb
pop
shlb
jne
loope
es
out
adc
clc
testb
push
hlt
test
dec
in
push
cltd
mov
iret
pop
into
add
mov
jmp
fcomip
xchg
fucomi
xlat
inc
gs
dec
les
xor
pop
les
add
std
es
hlt
fcmovnbe
aam
push
fs
out
mov
mov
cmpsb
sub
sbb
imul
sbb
sbb
dec
scas
scas
out
or
out
pop
ljmp
aas
clc
arpl
aam
js
sahf
cmp
pop
rcrl
cli
mov
mov
insl
loopne
mov
cmp
adc
out
jecxz
and
movsb
inc
out
int3
mov
mov
lds
adc
loope
test
mov
jae
xor
outsl
jbe
idivl
push
inc
outsl
test
inc
add
mov
mov
andl
mov
inc
adc
in
xor
ret
lods
adc
lods
scas
cmpsl
sub
dec
xchg
lods
add
aaa
icebp
int
imul
xchg
xlat
inc
sbb
pop
jecxz
cmp
mov
mov
mov
es
or
inc
cmp
lret
xchg
adc
cmp
adc
repz
xor
push
pop
xor
loop
sub
push
adc
push
fwait
je
inc
mov
jl
dec
idivb
aas
ret
sub
out
je
icebp
mov
fists
mov
mov
shrb
or
sub
into
inc
xor
jae
dec
popf
or
add
push
push
pusha
push
stc
cli
cmp
std
xchg
pop
addr16
pop
nop
lret
adc
pop
dec
repnz
and
xor
lods
fidivs
cwtl
or
test
rcrl
adc
inc
xorl
or
or
push
rcrb
mov
push
xchg
pop
sub
adc
cmp
xchg
mov
std
ds
test
adc
fs
dec
std
mov
jae
popa
cmc
jns
test
das
mov
movsb
jns
jae
test
or
in
adc
add
mov
add
cltd
sar
push
sbb
pop
or
movsl
mov
adc
outsb
mov
cmp
inc
jae
push
dec
sbb
adc
mov
pop
xlat
pop
adc
fistps
pusha
push
int
or
inc
cli
aam
inc
test
arpl
loop
inc
je
jno
and
or
js
xor
sub
and
ds
aad
movsb
ds
jnp
in
daa
cmp
push
je
adc
push
lret
cli
xor
jbe
sarb
adc
repnz
data16
shlb
push
clc
notl
sub
cmp
pop
xchg
shrl
jecxz
test
lds
push
jns
cwtd
xchg
pop
rcll
jne
sbb
sbb
mov
push
out
pop
xor
daa
je
push
ds
addr16
dec
add
pop
push
xor
cmc
jl
mov
push
xor
cmp
jg
mov
xchg
lret
jecxz
inc
xchg
inc
lret
dec
aam
adc
mov
nop
js
cld
sub
add
pop
insl
cmp
ss
out
ss
dec
jge
cmp
popa
dec
pop
xchg
ret
test
and
pop
push
sbb
aas
dec
adc
in
adc
xchg
dec
xchg
xchg
rorl
jmp
sbb
push
cmp
dec
ss
shrb
mov
loop
or
add
xchg
inc
aam
aad
xchg
jb
cmpsl
ja
test
daa
cmpl
sub
xor
sbb
sbb
out
test
and
and
sbb
imul
jo
movsb
movsb
movsb
xor
icebp
insb
and
inc
cmpsb
xchg
mov
es
pop
int3
dec
mov
xorl
cmp
dec
push
dec
enter
fwait
inc
jnp
rorl
fisubrs
call
dec
hlt
push
sbb
or
into
lds
pop
js
cmpsb
mov
cli
adc
or
adc
shrb
daa
xchg
mov
jbe
pop
out
cmpsl
addb
movsl
push
pop
jno
adcl
mov
jge
andl
fcmovne
aaa
add
mov
inc
lahf
mov
or
sbb
mov
in
mov
add
pop
dec
popa
les
xor
sbb
mov
mov
jns
adc
repnz
mov
les
pop
fistpl
mov
scas
mov
lea
or
push
inc
in
in
roll
rcrl
sti
fbld
ficompl
test
jne
dec
outsl
pushw
call
iret
mov
sbb
lds
loop
cmpsb
adcb
negb
jnp
mov
inc
or
cs
idiv
pop
jno
xor
lea
in
dec
adcb
pop
pop
adc
pop
pop
xchg
sub
int3
mov
mov
mov
sahf
mov
mov
inc
jl
add
add
aad
fs
aad
cld
cwtl
add
sarb
lret
mov
aaa
jne
sahf
test
sbb
jo
addr16
std
mov
fs
xchg
mov
int3
pushf
mov
dec
movsb
sub
subl
pop
xchg
jp
enter
sbb
sub
outsl
push
and
aas
pop
iret
push
push
jecxz
push
or
or
adc
mov
mov
adc
mov
ds
push
insl
mov
popa
out
lods
pop
je
mov
gs
sub
jo
into
dec
push
cld
add
cmc
and
icebp
insb
andb
popa
or
repnz
mov
add
pushf
dec
or
stos
daa
cmp
adc
mov
push
je
inc
lret
inc
mov
cmp
mov
pop
pop
xchg
xorl
push
jle
stos
adc
mov
mov
sbb
push
inc
data16
in
bswap
inc
add
xchg
sbb
sub
xor
and
or
lock
cli
push
jnp
lock
jo
jae
sub
xchg
pusha
aam
out
loopne
int
cmp
push
sbb
nopl
mov
std
icebp
hlt
pop
lds
rcrl
push
std
sub
sbb
pop
add
sbb
adc
cwtl
repz
push
clc
jp
jge
inc
orps
insl
mov
adc
sbb
xor
clc
pop
mov
lds
xchg
jo
push
and
pop
and
and
inc
gs
int3
fs
xchg
repz
mov
ffree
aas
rcl
test
int3
shrl
sahf
pop
shlb
push
cwtl
add
xchg
lret
pop
mov
jg
jl
daa
cli
pop
les
and
cmpsl
cmc
xchg
cmp
push
push
es
and
cmp
add
outsb
lret
jbe
dec
inc
cli
push
sbb
add
call
sbb
scas
aas
int3
jns
fmul
add
jle
mov
popf
lea
and
sub
pop
dec
aad
lret
out
adc
fsts
push
int
and
into
rcll
icebp
pop
jns
lock
lock
loopne
dec
popa
pop
mov
loope
ljmp
cs
mov
dec
inc
xchg
int3
test
pop
dec
mov
pop
xchg
mov
sbb
shlb
adc
cli
dec
stos
jmp
sbb
inc
cmp
push
xor
pusha
jnp
xor
shr
movsb
sub
aad
pusha
inc
xchg
jno
mov
dec
int
sub
jne
cmp
jecxz
jecxz
jne
xor
mov
push
xor
xor
dec
outsl
aas
xor
inc
add
cwtl
dec
sub
xchg
aad
mov
xchg
pop
sbb
push
int
mov
sahf
cmp
lods
mov
loop
or
lcall
sar
adc
push
mov
jbe
or
cmp
das
sarb
cmp
jae
sub
pop
pop
mov
dec
std
aas
int
jmp
hlt
scas
int3
pop
jae
mov
imul
xor
xor
cmp
dec
sub
inc
sahf
fsubl
push
add
fcomip
sbb
int3
popf
inc
lcall
inc
pop
dec
lea
xchg
cmp
adc
push
xchg
dec
and
into
jl
mov
mov
aaa
adc
fsts
testl
shll
jge
sbb
push
fwait
addb
mov
arpl
add
cmp
rorb
je
lret
rclb
push
pop
adc
inc
cmpsl
bound
leave
xchg
add
fs
scas
xor
aad
out
mov
push
aad
push
push
test
cmp
popf
cltd
dec
ds
cmpsl
inc
mov
addl
imul
and
jno
push
bound
cmc
ficompl
outsb
in
mov
fmuls
mov
lea
sahf
test
jg
xor
add
sub
xchg
in
cmp
fwait
dec
xchg
dec
dec
xlat
jg
jne
movsb
or
push
jmp
in
icebp
dec
pop
xchg
cmp
inc
addr16
cltd
inc
sbbl
or
enter
jmp
mov
sub
movl
inc
or
int3
mov
xor
mov
xchg
in
mov
mov
cwtl
inc
test
shll
loop
jg
repz
jb
addr16
pop
test
out
es
sub
jl
fstpt
lock
push
sub
lds
and
push
jl
test
ffreep
addb
ja
inc
or
jne
fwait
sub
out
sbb
fldl
testb
stos
es
jp
xorl
add
rcrl
or
or
loope
bound
fs
mov
cmp
and
sbb
mov
push
jbe
sub
pop
out
fs
xorb
push
shrl
out
dec
addr16
loopne
adc
mov
fstpt
mov
adc
sub
loopne
lret
test
mov
xchg
ret
je
push
popa
add
dec
ret
aad
cli
shll
push
shrl
rcr
imul
bound
cltd
popf
xor
out
push
stos
push
rcl
jns
push
jns
shll
loope
std
and
lret
aaa
les
lds
rol
js
or
test
mov
int
dec
push
sub
popl
adc
shl
lahf
xchg
cmp
or
add
popf
or
pop
mov
xchg
pushf
mulb
inc
outsl
jmp
mov
push
push
bound
nop
and
jbe
lret
shl
idivb
cwtl
or
movsb
sub
ret
sub
mov
cmp
das
cli
inc
inc
in
pop
gs
or
or
aas
mov
xor
inc
repnz
aam
xchg
sub
jnp
iret
rclb
leave
xlat
add
int
cmp
out
lds
cwtl
scas
xchg
nop
lret
xlat
addb
lahf
mov
push
jne
arpl
xchg
or
stos
pop
push
into
pop
mov
jmp
lds
fs
stos
pop
lds
lret
dec
sub
mov
test
jmp
cs
lods
pop
mov
lds
inc
fistl
jmp
and
pop
add
shr
lahf
mov
mov
call
pop
fdiv
add
and
mov
mov
xchg
mov
sub
jb
mov
int3
or
xlat
into
mov
outsb
in
xor
adc
dec
jo
or
sahf
fimuls
out
ss
jmp
jne
adc
jl
and
inc
outsb
push
ret
loopne
lahf
dec
mov
push
sub
and
dec
jno
mov
inc
xor
cli
and
gs
adc
adcl
mov
les
js
xchg
jns
aaa
out
cmpl
and
adc
sbb
xor
cltd
leave
and
in
dec
jno
pop
mov
dec
jnp
in
fsts
and
pop
pop
lea
lods
mov
int
and
mov
dec
stos
push
lods
mov
cmp
clc
test
rorb
pushf
mov
in
jle
jnp
fsubrl
sub
call
sahf
test
adc
or
sbbb
shlb
bound
out
in
push
test
xor
xchg
jmp
cli
clc
iret
mov
cwtl
popf
stc
cld
shr
cmp
adc
out
jo
jle
xchg
inc
jae
cmpb
cmpsb
jmp
aaa
hlt
pushf
enter
jo
or
ss
scas
popa
push
mov
scas
lahf
loop
ds
pusha
push
filds
jb
mov
addr16
lea
mov
push
fmul
out
ret
push
data16
cwtl
xchg
jbe
iret
call
pop
mov
mov
xchg
int
mov
cwtl
nop
and
mov
out
inc
or
in
incl
mov
pop
movsl
stos
stos
movl
pop
push
ror
shll
cmp
test
mov
sub
sti
pop
loope
popf
in
cmc
in
mov
nop
add
jmp
cli
roll
decl
cmp
dec
mov
ret
jo
xor
mov
and
xchg
adc
jne
ret
mov
sahf
xchg
or
pop
xchg
adc
imul
xchg
imul
lods
cmp
mov
xchg
sub
xlat
test
inc
cmp
sub
mov
cmovp
mov
pop
je
mov
jbe
ret
cltd
xor
jbe
push
jmp
ret
jp
or
rcrb
test
fcomp
pop
inc
leave
dec
dec
mov
mov
inc
or
or
pop
repnz
push
nop
xor
mov
ss
xchg
int3
cld
data16
cmp
adc
jb
stc
movsl
and
int
mov
mov
inc
lods
arpl
add
sbb
pop
clc
outsb
and
lds
or
cmp
ds
js
out
scas
pop
es
frstor
jns
cld
mov
add
aaa
in
adc
cli
xchg
adc
es
aad
push
jne
test
mov
jns
mov
jp
pop
sub
arpl
and
add
mov
ljmp
sti
lret
std
mov
sub
repnz
dec
fcmovnu
testb
test
jno
mov
push
add
scas
jne
test
and
mov
and
jbe
icebp
and
jmp
add
xlat
lcall
ds
int
dec
sbb
lods
mov
je
addr16
sbb
ficoms
ficoms
aad
sti
mov
adc
ret
xchg
out
push
sub
sbb
int3
ret
lea
cmp
insb
mov
mov
xchg
loopne
sbb
pop
push
mov
stos
adc
fs
push
lods
insl
lahf
mov
arpl
mov
adc
push
xchg
mov
pop
dec
and
pop
dec
push
xchg
sbb
sub
dec
inc
jb
cmp
fsubl
add
bound
pop
mov
and
stos
inc
nop
mov
jno
stc
pop
mov
lret
dec
int3
sub
jmp
mov
mov
movsl
add
or
inc
pop
ds
rorb
mov
jnp
dec
outsl
enter
das
xorb
add
cmp
nop
rcrl
push
movsb
or
inc
cwtl
lcall
jle
dec
adc
jae
xchg
lock
or
push
in
push
inc
movsb
lcall
repnz
call
ljmp
out
cmp
mov
scas
pop
fdivrs
sarb
dec
cmp
and
or
xchg
xchg
pop
out
test
or
mov
sub
sbb
push
test
xchg
adc
push
mov
cwtl
dec
inc
adc
insl
cli
or
shl
ds
ds
cmp
outsb
jo
lds
scas
xor
stc
push
cwtl
out
or
add
imul
jae
leave
and
das
inc
mov
mov
jge
mov
push
mov
or
pusha
cmp
dec
test
in
sub
push
loop
sbb
jg
mov
jbe
insb
mov
add
out
push
icebp
mov
out
jg
jge
mov
cmpsl
add
out
dec
push
add
shlb
pop
mov
mov
xorb
inc
mov
mov
stos
push
pusha
out
adc
std
call
loopne
dec
in
mov
jmp
data16
sbb
xor
xor
mov
mov
pop
push
je
ficoml
mov
cmp
sub
je
lcall
push
sub
cwtl
pop
dec
imul
ljmp
mov
inc
and
ficoms
pop
test
jne
arpl
pusha
je
inc
ret
rorb
mov
fidivrs
es
mov
mov
mov
sbb
ja
fsts
dec
into
xchg
or
gs
fldt
in
cmp
xor
mov
sbb
add
sahf
sti
cmp
cwtl
nop
out
mov
push
pop
push
leave
xchg
jae
pop
pushf
xchg
add
or
push
addl
mov
shlb
aam
into
xchg
addb
repnz
add
daa
dec
pop
in
out
daa
arpl
test
icebp
loope
jle
popf
mov
insl
ret
push
push
enter
add
in
mov
mov
stos
mov
dec
test
inc
in
in
cs
xchg
xchg
dec
lds
mov
shl
lea
mulb
sbb
cmc
bound
into
jp
enter
cmp
sub
fs
jl
daa
adc
add
std
cmovge
and
inc
repz
adc
imul
cmpsb
call
or
and
jp
adc
push
cs
fnstenv
mov
lock
add
outsb
stos
pushf
jmp
lds
mov
and
add
xor
repz
push
push
or
or
bound
jl
fildll
repz
jb
cwtl
push
gs
dec
sbb
stos
imul
fiaddl
push
mov
dec
scas
pop
add
dec
stos
in
cmpsb
ucomiss
addb
ret
dec
inc
ss
pushf
mov
mov
mov
std
jno
lods
jae
mov
rcll
push
sub
dec
and
int
xor
push
mov
add
insl
cmpl
loopne
orl
jle
outsl
aaa
sahf
mov
push
jo
xchg
and
inc
movsl
test
jae
pop
repz
lcall
outsb
pop
dec
scas
out
test
inc
int
xor
inc
stc
add
mov
fcomi
inc
out
jl
push
push
xlat
stos
inc
jmp
cmp
scas
push
xchg
scas
pop
insl
add
mov
pushf
xor
or
xor
jnp
inc
mov
sbb
jnp
jne
jo
loop
inc
sbb
mov
and
rcrl
xor
loopne
pop
aas
and
mov
ret
lea
repz
jp
testl
sahf
movsb
pop
push
frstor
std
sbb
jnp
je
in
movsl
sbb
cmpsl
pop
divl
bound
xchg
insl
fmuls
pop
stc
jl
rcrb
shrb
aam
in
pop
in
jl
loopne
sbb
imul
adc
or
push
out
cltd
xlat
pop
cmc
shll
xor
sbb
jb
push
cld
shlb
mov
ss
push
in
xchg
loop
rclb
sbb
push
call
aaa
jno
out
jae
das
icebp
cmp
adc
or
xchg
int
lret
pop
shll
xchg
gs
push
push
pop
ret
xor
mov
insb
imul
pop
ret
cld
dec
cltd
aam
aam
push
mov
gs
pop
imull
daa
test
adc
mov
pop
sbb
cmp
and
insb
in
pushf
outsl
imul
sbb
jns
adc
stos
mov
ss
sbb
sub
push
and
shl
outsb
mov
inc
jb
mov
sub
loop
pop
adc
pushf
sub
mov
cs
cmpsb
pop
sub
dec
cmp
xchg
xor
popa
mov
push
dec
cmpsl
out
arpl
clc
in
lret
jmp
insb
cmp
lret
std
cwtl
mov
sbb
mov
outsb
and
mov
mov
mov
clc
pop
and
jecxz
add
stos
cmp
mov
inc
pop
movsl
inc
mov
inc
ljmp
in
sub
enter
or
rep
test
out
fstpl
in
mov
xchg
jne
cmp
cwtl
les
push
and
jg
imul
and
xchg
icebp
aaa
dec
pop
push
mov
inc
jb
xchg
test
ss
cwtl
lds
cltd
mov
push
mov
dec
sub
mov
add
lock
mov
lds
sub
mov
test
fs
sarl
pusha
or
sbb
jo
sbb
test
dec
scas
outsl
adc
cmc
divb
xor
mov
cmp
mulb
inc
mull
or
xlat
imul
jbe
push
das
mov
pop
mov
fldt
cmp
sbb
ret
xor
test
sub
loopne
popf
mov
bound
neg
aam
arpl
popf
loopne
cmp
aam
or
in
push
inc
add
imul
xor
mov
in
sub
in
sub
sbb
roll
outsb
xchg
das
das
cmpsl
mov
fwait
cmp
and
push
sub
adc
jne
cmp
lods
push
cmpsl
sub
or
push
out
mov
push
sub
push
ja
pusha
mov
sarl
adc
popa
popa
call
sub
dec
out
mov
dec
ficomps
aaa
dec
push
shr
and
or
jne
jb
adc
mov
or
imul
mov
pop
jg
adc
rcll
lds
hlt
sbb
jge
out
int3
out
cmp
cli
sbb
clc
dec
lcall
pop
adc
rolb
cmpsb
xchg
pop
pop
ret
sbb
imul
jp
pop
and
jbe
test
or
lds
movsl
rcll
add
sub
xchg
dec
or
pop
lret
in
sarb
and
pop
enter
jecxz,pn
addr16
sbb
sbb
lods
dec
push
insl
dec
sub
cmp
data16
mov
lret
xor
mov
leave
ret
add
xchg
xor
xlat
sub
fisttps
jae
out
add
icebp
ja
pop
push
jo
bound
cmp
sbb
into
scas
lods
in
cld
add
pop
dec
sbb
adc
cmpl
xchg
js
dec
shll
push
mov
in
jl
popf
dec
push
cmpl
mov
imul
scas
ret
outsb
in
ljmp
inc
shll
push
push
fstpt
flds
in
enter
sbb
mov
mov
rcll
adc
cld
lcall
pop
xchg
xor
dec
jbe
int3
fwait
pop
or
loop
mov
sub
fidivl
add
call
add
cmpl
out
pop
inc
popa
ret
push
arpl
and
sbb
clc
and
lods
push
add
mov
enter
mov
push
ficoms
addr16
stos
ret
sbbl
push
out
jns
jns
mov
xchg
jb
pop
or
aam
sub
daa
lds
adc
sbb
movsl
add
mov
xor
mov
cltd
cmpsl
and
dec
loop
inc
test
mov
es
pop
inc
and
cmp
and
dec
cli
lock
ret
bound
xchg
xchg
ret
loopne
fsubrs
xchg
push
sub
bound
leave
sbb
jmp
mov
outsl
add
je
lcall
mov
sahf
arpl
ret
xchg
popf
jno
mov
cmp
aas
addb
rcrb
fildl
aam
inc
cwtl
imul
loop
ljmp
les
fmuls
lret
mov
call
lret
push
ss
adc
push
inc
cltd
shlb
mov
mov
shlb
mov
xor
leave
cmp
rcrl
orb
push
mov
in
aam
push
add
test
lock
and
jle
xchg
jmp
dec
inc
test
or
out
dec
push
xor
icebp
daa
out
insb
xchg
rclb
test
leave
dec
and
or
mov
es
lret
xor
add
jle
lcall
mov
test
jbe
or
stos
adc
pop
fildl
test
fstp
adc
dec
out
imul
xor
cmp
and
inc
scas
lret
aam
pop
or
mov
fcompl
orl
cwtl
adc
lret
leave
fidivrs
jecxz
mov
imul
pop
bts
clc
dec
fmull
jle
push
dec
imul
or
mov
dec
pop
mov
inc
fwait
xor
push
mov
mov
lret
out
fcomi
lods
shl
nop
jg
or
dec
out
add
mov
pop
sbb
mov
cmp
xchg
inc
addb
and
cmpsl
or
mov
inc
and
loopne
fisubs
pop
addr16
ud0
push
ss
ret
subl
aaa
outsb
push
mov
repz
addr16
xor
int
in
push
adc
ljmp
loop
cld
pop
int
sub
mov
push
push
pop
data16
lods
shlb
rcll
leave
or
push
aam
cmp
jns
sar
adc
mov
and
andnps
jnp
mov
in
outsb
mov
mov
mov
adc
pop
push
adc
out
movsb
or
js
bound
fildl
clc
jp
movb
mov
and
cmp
cmpsl
or
sbb
xor
fisubrl
mov
inc
lods
mov
cmp
das
lods
les
fadds
sti
cmpsl
insb
cmp
push
rorl
mov
fistpl
push
pcmpeqb
push
cmp
aas
dec
adc
sub
ficoms
sbb
push
jp
push
stos
jae
ljmp
insl
aad
mov
fsubrl
push
bound
sbb
mov
xchg
push
xor
pushl
push
mov
cmp
test
push
rcll
int
xor
cmp
pop
ud2
xchg
pop
inc
inc
adc
lea
sub
aaa
push
or
insl
in
shr
jo
fs
xor
int3
es
repz
mov
hlt
outsb
jno
cmpsb
inc
cmp
xchg
add
outsb
inc
cmpsb
jo
mov
cld
imul
std
pop
aad
sbb
out
cmp
fbld
stos
aam
lret
inc
dec
aas
imul
inc
stos
lret
imul
clc
lea
fs
xor
ret
xchg
mov
sahf
jecxz
loopne
hlt
dec
sub
jne
mov
dec
push
les
adc
andl
pop
ret
dec
mov
pusha
movsl
mov
iret
scas
sarb
scas
popa
jle
ljmp
outsl
jp
mov
sbb
mov
fnsave
inc
int
pop
pusha
das
cmpsl
cld
aam
jmp
into
popa
xor
sbb
mov
int
iret
repz
fisttpll
push
jecxz
out
stos
jp
xorl
mov
fisttps
mov
pop
pop
lret
in
sub
jns
out
iret
mov
iret
xor
mov
inc
mov
jecxz
mov
xlat
in
imul
pop
xchg
and
mov
inc
dec
jns
jbe
rcll
mov
inc
adc
pop
jge
jle
test
mov
jmp
imul
fxch
stos
mov
imul
adc
test
cs
sahf
loopne
loopne
sbb
and
fidivrl
stos
icebp
push
in
testb
push
lds
adc
addr16
getsec
mov
lods
iret
popa
push
lods
cmp
xchg
dec
enter
adc
into
addr16
mov
bound
fsub
xor
imul
in
cmc
push
ja
fcomp
je
xchg
not
jae
xor
das
mov
es
lret
test
mov
fstps
or
cmp
pop
pop
adc
test
xchg
popa
and
movsl
inc
into
adc
bound
fadd
jne
sub
cmp
inc
rcrl
out
pop
xchg
jge
rolb
and
fdivrs
hlt
mov
scas
mov
loopne
sar
in
push
loop
js
test
jmp
add
pop
mov
test
outsb
aaa
mov
push
ret
gs
sarl
and
inc
and
cmp
adc
cmp
sbb
push
jge
or
dec
scas
cltd
or
mov
enter
jns
xor
sub
addr16
shlb
inc
push
subb
xchg
icebp
or
adc
lret
mov
fsubs
iret
lods
cwtl
mov
sbb
in
sub
arpl
add
je
fdivrl
mov
xor
enter
xchg
jbe
mov
pop
xor
and
bnd
ret
shrl
fcoms
cmpsb
cmc
rorl
fwait
cmp
incb
stos
dec
fidivs
addr16
cmpsb
add
out
jmp
aad
xchg
jecxz
lods
pop
ror
add
shlb
mov
arpl
inc
insl
outsl
mov
sbb
dec
pusha
shll
add
sub
enter
fisubrl
je
test
mov
mov
cmpsl
jmp
imull
mov
inc
dec
outsl
push
cmp
ss
push
cmp
not
or
aas
cwtl
mov
ret
lods
pop
into
or
xchg
pop
test
xchg
push
pusha
cld
xchg
inc
pop
in
jno
lock
stos
cmpsl
stc
test
mov
iret
movsl
adc
xor
add
push
mov
jae
subb
mov
fwait
lods
das
neg
cmp
mov
nop
pushf
pusha
or
sbb
jg
les
jge
stos
and
pop
push
in
pop
jp
jns
and
sub
ja
cmpsl
test
mov
inc
outsb
lcall
imul
dec
loop
aad
mov
stos
int3
mov
testb
clc
aas
mov
sbb
notb
mov
xor
push
aas
mov
lds
and
lods
cld
or
std
jne
dec
mov
stos
push
adc
inc
mov
or
inc
insb
cld
out
push
sub
in
popf
std
mov
jae
sbb
mov
dec
nop
cmp
mov
lods
inc
mov
xchg
push
repz
int
sub
push
out
adc
lret
pop
mov
sub
pop
pusha
mov
pop
insl
xchg
aad
jge
jp
and
adc
je
data16
sbb
lcall
dec
arpl
mov
add
xor
fldcw
pop
inc
rcrb
jg,pn
js
fdivp
xor
mov
mov
mov
bt
ret
test
shll
xor
or
push
rclb
dec
sbb
mov
call
jmp
fadd
clc
ret
sub
inc
lock
lds
popf
xlat
aaa
sbb
rcl
add
les
loop
out
repz
pop
scas
das
inc
inc
leave
cmp
xor
cmp
cmpsb
push
test
fimull
in
mov
xchg
aad
push
out
fs
loope
and
in
and
enter
adcl
pusha
pop
fisubs
test
pop
ss
jecxz
push
fwait
mov
mov
xchg
ja
cltd
lock
push
inc
add
add
pop
add
xchg
adc
inc
pushf
dec
ljmp
mov
mov
ljmp
push
popa
test
sub
cmpl
iret
into
std
movb
xchg
call
nop
in
pusha
addr16
add
adc
repnz
adc
test
adc
pop
div
jns
je
jg
in
fadd
adc
jg
jg
or
sti
mov
inc
imul
dec
pop
inc
lcall
jo
rcll
ljmp
xorb
mov
mov
pop
pop
mov
rolb
mov
out
ljmp
cmp
loopne
dec
mov
mov
cmp
hlt
ret
add
movsl
jp
mov
nop
mov
mov
mov
popa
cmp
push
lea
dec
xchg
xchg
or
fsubrs
pushf
cmp
sub
dec
lcall
fsubr
xor
stos
lods
and
das
jp
xchg
add
in
sub
icebp
rorl
push
pop
sbb
pop
mov
insl
add
push
pop
enter
imul
inc
into
outsb
lods
addl
push
gs
cmp
mov
sub
xchg
jns
mov
xchg
mov
and
fmulp
fdivl
xor
push
fs
pop
sbb
outsb
mov
clc
out
out
outsl
ffree
jae
addr16
sub
aaa
in
into
in
rol
out
and
loop
int3
sahf
sbb
jno
dec
and
lret
lahf
cli
cmc
sti
jne
push
fisubl
push
fildl
pusha
mov
js
mov
push
xchg
mov
adc
lea
dec
push
int3
stos
sbb
sbb
mov
pop
outsb
stc
or
inc
mov
mov
push
movsb
pop
inc
xchg
inc
sahf
sbb
xor
lock
daa
mov
xchg
sub
push
test
pop
mov
and
ud0
dec
mov
jge
push
popf
dec
or
lods
movl
sub
int
inc
xor
mov
mov
pop
jmp
adc
fmuls
imul
sbb
mov
rcrl
popa
pop
mov
and
jge
nop
mov
mov
mov
ret
in
lds
pop
cmp
rcrl
std
cmp
push
out
jl
ljmp
xchg
adc
cmp
nop
jnp
dec
orb
and
jbe
clc
sahf
inc
or
push
or
jb
mov
imul
xchg
jle
cltd
in
pop
dec
or
pop
fnstsw
inc
xor
sub
stc
fs
nop
outsb
push
rcll
mov
adc
divb
push
and
stos
add
mov
jo
push
mov
ja
loope
cli
pop
xchg
and
cmp
ret
mov
sahf
mov
xor
pop
mov
arpl
loopne
pop
xchg
into
push
sub
popa
arpl
push
xor
cmp
clc
mov
not
ss
cld
push
test
dec
aad
adcb
rolb
fs
fsubrs
lock
cmp
cmpsb
mov
push
cwtl
mov
mov
outsl
popa
sub
daa
jle
sbb
cmc
pop
and
negl
pop
mov
sti
sbb
test
mov
mov
and
aaa
push
pop
ds
imul
sbb
pop
inc
jnp
mov
xchg
jecxz
pop
ret
aad
adc
sub
jbe
xor
jo
rcrb
shlb
mov
push
mov
ja
push
push
pop
push
fsub
int
sbb
jnp
xchg
mov
xchg
out
cmpsl
out
or
cmpsb
inc
lock
or
push
shll
sub
or
popf
lret
sbbb
ja
xor
push
jo
and
dec
pop
movb
push
mov
out
jg
push
orl
cmpb
mov
cmp
pop
cmc
outsl
and
xchg
lahf
imul
and
xchg
mov
sbb
ljmp
pop
mov
cltd
xor
mov
sbb
popa
leave
jg
in
cs
pop
icebp
sbb
pop
xor
pop
sub
mov
out
pop
sub
imul
xor
lock
xchg
shlb
loope
adc
sti
cmpb
pop
mov
sbb
rcr
incb
and
and
adc
std
xchg
inc
sub
cmova
and
adc
lcall
stc
mov
or
imul
mov
and
in
popa
inc
imul
push
fldl
int3
xchg
push
imul
dec
cmp
loop
xlat
and
pop
imul
xor
or
mov
fisubs
mov
data16
not
in
fnstenv
std
push
xorl
push
xchg
dec
fists
jmp
lock
pop
xor
subb
sbb
mov
test
pushf
lcall
or
stos
add
dec
push
ret
lret
cmpsb
push
mov
mov
mov
cld
lea
fwait
bound
mov
test
or
in
jnp
es
mov
repz
push
lcall
jmp
xchg
jns
pusha
ss
ficoml
dec
jnp
push
push
jno
mov
aaa
sti
icebp
dec
imulb
popf
dec
sub
lea
jge
and
jne
xlat
xchg
mov
sub
add
xor
xchg
push
lds
ret
mov
xor
pop
arpl
jns
mov
in
mov
cltd
pop
fldcw
rclb
sbb
inc
cmpsl
xor
adc
fdecstp
push
cmp
daa
scas
and
out
icebp
mov
in
shl
repz
jl
jbe
popa
loop
in
mov
xchg
pop
sti
or
pop
dec
push
das
dec
cli
xor
push
scas
js
sbb
mov
je
nop
inc
insb
adcb
sbb
cwtl
cmp
insb
mov
in
aaa
push
xlat
dec
stos
sub
and
sbb
inc
mov
mov
cmp
mov
test
popa
shlb
clc
sub
out
push
testb
lea
inc
jg
and
dec
push
xchg
cmp
mov
mov
clc
xchg
and
pop
sub
sub
add
add
bound
pop
mov
or
push
pop
pusha
das
nop
icebp
jl
incl
xor
in
xchg
mov
shlb
add
fiadds
and
popf
and
out
add
or
aam
and
push
fs
sub
cli
mov
mov
pop
loop
jns
adc
loopne
jo
adc
inc
push
inc
xor
lea
out
xchg
aad
pop
dec
lret
fnsetpm(287
mov
or
jno
jmp
leave
popf
jns
add
cli
xor
dec
ficomps
nop
inc
pop
mov
mulb
xchg
icebp
inc
sub
into
sub
iret
mov
adc
mov
inc
insb
pop
cltd
nop
or
orb
jb
sbb
push
call
in
cmp
ror
mov
dec
dec
loop
jnp
es
cs
call
mov
je
sbb
pop
hlt
adc
es
aam
xchg
sub
into
jg
enter
pop
sbb
xchg
mov
push
out
mov
lods
int
add
cltd
pop
ss
jno
aam
push
insb
js
and
fsub
jno
test
dec
mov
ss
sub
sti
out
loop
lods
negb
or
sub
lea
push
loope
ja
int
pop
add
mov
cmp
aas
arpl
mov
mov
pop
lds
divb
cmp
and
xor
mov
test
das
jns
mov
dec
pushf
push
insl
mov
mov
xchg
mov
clc
cmpsb
dec
stos
lret
push
jno
ja
ficoms
mov
lret
sub
push
adc
jge
out
fdiv
movsl
and
lcall
outsl
mov
mov
loop
and
adc
jmp
roll
daa
pop
loop
cmp
sbb
xor
arpl
cmpsb
sbb
loopne
push
out
xchg
addl
stos
je
xchg
das
lds
pop
adc
outsb
outsb
xchg
add
mov
mov
mov
xchg
adc
mov
call
cmp
or
mov
lret
jb
movsl
xchg
movsb
into
addr16
pop
adc
inc
xlat
lds
aas
xor
aam
lret
enter
xchg
push
jg
xlat
push
cs
cwtl
push
pop
lahf
mov
lea
lret
mov
jbe
push
sti
sti
jp
or
jns
mov
jno
out
sbbl
popf
dec
pop
push
shlb
inc
cmpsb
mov
sti
xor
cmp
mov
xchg
and
push
dec
out
test
mov
lds
dec
les
jbe
aad
cmp
push
sbb
pop
pop
and
xor
pop
outsl
idivl
pushf
push
mov
mov
inc
fnsave
rcrl
pop
xchg
sub
int3
pusha
mov
daa
pop
and
test
mov
jns
jl
pushf
push
gs
push
call
mov
adc
push
and
jb
mov
clc
pop
mov
push
pop
jnp
enter
cmpsb
pushf
lods
pop
enter
nop
fidivrs
xor
push
cmp
pusha
mov
and
ss
enter
inc
mov
sti
clc
xchg
lock
pop
scas
arpl
xchg
insl
sbb
jne
lock
imul
popf
adc
adc
or
push
inc
std
nop
add
add
sub
cltd
pop
nop
pop
adc
movsb
gs
outsb
push
mov
out
ja
js
inc
repz
andl
push
mov
imul
mov
mulb
push
scas
cld
outsl
add
or
jmp
sbb
sbb
jecxz
sub
push
jae
xchg
mov
loopne
inc
sbb
fsts
cwtl
push
add
inc
pop
adc
adc
das
adc
enter
xlat
xchg
mov
cld
add
or
leave
in
xorb
fs
push
mov
or
xor
dec
test
or
addb
mov
push
or
imul
or
gs
mov
push
mov
fcoms
inc
aaa
scas
adc
mov
xchg
or
inc
mov
sarb
xor
add
inc
lret
mov
verw
mov
stos
pop
xchg
dec
addr16
jmp
pop
cld
cmp
xor
fisttpll
adc
stc
jg
adc
test
push
push
pushf
cmpsl
cmp
inc
mov
mov
ret
dec
mov
rcl
mov
xor
lock
rcll
or
ds
mov
sbb
popa
shll
xor
data16
mov
fldenv
add
xor
xchg
pop
dec
pop
or
test
inc
cli
adc
je
fsubs
mov
pop
xchg
add
mov
adc
add
cli
or
push
xor
adc
ja
fiadds
popf
movsl
cmpsb
or
jb
pushf
nop
shlb
loop
or
repnz
mov
ja
fs
dec
in
repz
daa
push
faddl
adc
push
sbb
ja
push
and
push
outsb
cmp
pop
dec
pop
out
adc
mov
out
xchg
mov
loopne
xor
push
daa
sbb
stos
jg
and
test
push
adc
add
mov
sbb
sub
mov
dec
and
jnp
filds
cvtpi2ps
int
sub
pop
inc
inc
pushf
xchg
imul
fwait
pop
or
add
lret
neg
fwait
pop
cmp
sub
imull
mov
pop
adc
xor
jmp
insb
nop
aad
stos
sbb
popa
jp
out
add
pop
inc
out
in
mov
in
adc
scas
insl
push
fs
fwait
or
xlat
cmp
pop
les
inc
xlat
daa
xor
pushf
out
pop
xor
bound
mov
nop
xchg
xchg
outsl
clc
out
jp,pt
cmp
insl
sub
push
or
jo
lcall
loopne
lcall
in
mov
leave
lret
push
jge
mov
jo
sub
inc
roll
jmp
cltd
lock
cmp
xor
push
pushf
das
mov
outsl
cmpsl
pop
test
sub
xchg
dec
or
add
movsb
cmp
xor
mov
in
int3
fiaddl
testb
jno
dec
shlb
addl
or
sbb
shl
jns
test
push
das
inc
out
cmpsl
mov
arpl
inc
inc
and
int3
sub
push
inc
push
xor
add
cs
add
adc
adc
iret
test
push
mov
imul
test
add
sahf
fxch
cs
adc
jge
dec
adc
repz
mov
push
adcl
xlat
dec
andb
int3
push
bound
aas
fisubrl
mov
xchg
shlb
dec
ficompl
aad
idivl
loopne
adc
xor
out
mov
std
mov
cli
jp
cltd
hlt
leave
clc
mov
mov
mov
loop
nop
out
add
arpl
dec
mov
push
popf
pop
adc
mov
inc
out
cmp
cmpsb
jmp
cmp
adc
jnp
xor
ja
jbe
cli
rcrl
repnz
cmpl
les
cmp
movsb
xchg
cmc
std
mov
adc
incb
cmpsl
xchg
mov
push
fstl
cli
adcb
sub
je
js
loop
cmp
ds
jmp
cmpsl
xorl
push
test
lods
mov
cmc
shlb
push
out
lds
data16
enter
neg
popf
xor
std
xchg
xchg
daa
call
setb
dec
subb
sub
loopne
jge
xlat
aaa
lret
jecxz
mov
lods
xchg
push
lcall
mov
loopne
mov
in
pushl
cmp
add
or
pop
push
mov
dec
jmp
jbe
adc
fisubl
pushf
mov
mov
cmc
and
gs
sbb
in
or
cltd
rcrb
in
inc
push
jle
sub
fildll
mov
mov
enter
pop
int3
sub
aad
fld
push
movsb
adc
push
iret
js
pop
sbb
xorl
dec
sti
mov
data16
bound
xchg
ret
arpl
loopne
inc
pop
adc
cmc
xor
jle
jg
push
mov
popf
iret
add
mov
xchg
icebp
inc
jmp
enter
sbb
xchg
stos
cmpsb
xor
push
popf
or
lcall
fildll
or
xchg
inc
and
jp
pop
mov
push
xchg
lret
test
pop
hlt
jns
enter
jl
cmp
xchg
lods
or
and
cmp
mov
cmp
mov
ja
adc
cmp
fnsave
push
sbb
sub
sarl
bound
cmc
aad
je
push
nop
xchg
jp
int3
insb
xor
in
aaa
inc
mov
out
call
scas
pop
lahf
pop
jns
or
mov
sub
out
mov
ss
icebp
mov
arpl
cmpsb
loop
ja
push
jge
cmp
cmp
inc
lahf
jl
shl
loope
mov
stos
out
nop
adc
fistl
push
mov
test
test
imull
jb
inc
cld
adc
push
int
pop
inc
jb
adc
test
into
cltd
jbe
jb
gs
dec
mov
xor
sahf
mov
push
jge
mov
sub
mov
dec
mov
imul
clc
or
cmpsl
mov
dec
xchg
aam
arpl
xchg
cmp
inc
and
clc
add
pushf
daa
mov
cmpsl
and
push
ja
cmpsl
mov
inc
mov
ss
pop
lods
or
lahf
andb
jae
xor
stos
cs
xchg
in
mov
inc
dec
popf
add
jbe
loop
jle
pop
jae
add
out
outsl
xchg
inc
push
sub
sbb
out
fsubrl
cwtl
sbb
jno
aam
mov
sub
imull
out
or
fidivl
out
or
adc
aam
std
shlb
add
sahf
xchg
sbb
or
cmp
ja
cmpsl
xchg
das
cli
popa
pusha
mov
xor
xor
call
nop
into
rcl
leave
repz
scas
out
fildl
fstl
xlat
xchg
push
inc
bnd
pop
xlat
fs
xlat
ljmp
sub
out
clc
xchg
jle
aas
xchg
pop
adc
jmp
and
jnp
les
imul
mov
sub
neg
lea
mov
push
pop
test
aas
loope
xor
pop
mov
push
inc
dec
stos
hlt
lock
mov
mov
sbbb
lret
or
jge
mov
pop
inc
sbbl
add
mov
cmpsb
rcrb
jge
or
cli
or
mov
out
push
adc
js
mov
fidivl
shl
fisubrl
fsubrl
sub
xchg
in
mov
pop
pop
repnz
and
jnp
shrl
xchg
push
dec
cmpsl
inc
push
jge
inc
mov
roll
inc
adc
aas
pusha
xchg
cli
dec
call
adcb
mov
push
into
std
cld
in
les
push
jbe
jg
mov
cmpb
sub
xlat
jne
jecxz
test
push
jmp
mov
mov
adc
lock
in
mov
adc
sbbb
pop
bound
sbbb
xchg
sub
addr16
mov
lret
ja
or
pop
dec
out
push
fldl
add
adc
out
cmp
mov
xor
push
jge
mov
pop
aam
sti
and
lods
lret
addr16
sbb
jno
rcr
pop
test
adc
lds
or
in
cmp
stc
dec
pusha
cld
leave
call
movb
sbb
sub
mov
push
sub
fldcw
stos
push
stos
repnz
and
xor
jmp
stos
addr16
pop
jno
and
cmp
outsb
dec
cmp
cwtl
mov
data16
imul
fistps
sti
add
in
inc
scas
jecxz
fcmovb
roll
and
addr16
push
or
cmpsb
dec
xor
adc
adc
xchg
iret
sub
push
add
pop
imul
sub
and
jnp
cmc
lods
repnz
les
or
jecxz
dec
and
jb
or
addr16
sbb
and
cmp
push
rorb
sbb
xchg
shl
dec
mov
add
and
imul
test
test
inc
lods
shrb
cs
add
jmp
std
loopne
out
pop
inc
xchg
and
sbb
sbb
aaa
in
outsl
sti
mov
xchg
stc
pushf
sti
push
divb
std
jbe
in
rep
push
out
js
pop
lods
clc
push
out
xor
mov
jno
lods
push
dec
in
and
jp
fisttpl
iret
mov
push
movsb
sbb
push
imul
scas
cmp
data16
sbb
cld
or
or
jle
int
xor
mov
sahf
test
enter
ret
popa
stos
add
push
push
or
xchg
inc
cmp
into
lods
xlat
push
insb
stos
mov
in
scas
push
fldt
call
mov
lret
in
ror
movsl
data16
into
std
jecxz
or
imul
hlt
pop
pop
mov
loop
sub
sub
daa
mov
xor
push
out
dec
jno
fsubr
push
stc
gs
into
ret
or
pop
paddw
in
aas
pop
mov
pop
stc
mov
pop
jb
jg
cmp
mov
inc
mov
mov
cli
add
sahf
push
push
pushf
push
dec
pop
or
dec
inc
mov
xchg
xchg
lret
inc
xchg
mov
test
cmpsb
dec
mov
and
sarl
shlb
xlat
fwait
stos
push
or
aaa
rcll
lret
lret
mov
jae
xor
aas
mov
out
jp
stos
and
xor
jle
jno
push
xchg
pop
aaa
sbb
mov
and
bound
mov
leave
pop
xlat
inc
andl
mov
sbb
sarb
push
test
jbe
add
mov
or
mov
out
inc
inc
mov
out
int3
outsl
push
adc
dec
mov
ret
call
js
mov
icebp
popf
in
ss
ljmp
inc
nop
mov
fwait
pop
lret
int3
adc
call
cmpb
loop
add
mov
or
fcoml
jae
pop
and
fsubrl
ja
sub
sbb
outsb
push
roll
pushf
mov
adc
jb
mov
cmp
cmp
or
mov
mov
aaa
xchg
adc
mov
inc
mov
cmpsl
hlt
jmp
mov
mov
fimull
or
xchg
fwait
dec
jae
test
repnz
pop
pop
dec
sub
mov
aam
xor
xchg
sub
xchg
lret
adc
add
dec
lods
mov
in
in
test
call
inc
in
in
and
push
pop
sti
and
sarl
xchg
mov
loopne
lret
insl
push
ret
pop
lahf
sahf
pushf
mov
test
out
mov
dec
sub
in
xor
add
jno
cmpxchg
insb
out
xlat
inc
out
shll
sbb
lds
mov
imul
or
outsl
mov
xchg
or
mov
or
push
mov
xchg
sub
cli
rcl
jnp
xchg
inc
mov
mov
cmp
ret
rcrl
lahf
xor
pcmpgtb
mov
ror
xor
adc
xor
add
xchg
popf
lret
jns
inc
iret
lcall
sbb
xchg
incb
or
lock
negl
dec
test
push
aaa
push
ret
pop
jnp
pop
imul
mov
lret
cmpsl
mov
cmp
lods
loopne
inc
out
loopne
je
in
and
mov
call
inc
cli
dec
sbb
test
hlt
mov
sbb
inc
mov
sub
mov
push
insb
leave
pop
outsl
or
xchg
dec
lock
inc
outsb
lea
mov
test
cmp
lds
adc
clc
dec
jge
daa
mov
psadbw
ds
neg
movsl
rcrl
test
cmp
inc
push
xor
push
mov
mov
fwait
hlt
bound
cmp
mov
imul
loope
xor
pop
xchg
fnstcw
es
movaps
imul
dec
cmp
test
insb
fisttps
push
dec
hlt
das
pop
jg
mov
insb
mov
add
rolb
adc
test
enter
and
scas
push
das
jecxz
dec
sub
mov
and
enter
enter
mov
hlt
add
test
mov
dec
sub
out
mov
mov
cmp
les
insb
lcall
js
shrl
aaa
negb
aaa
jecxz
stos
push
pop
sbb
stos
cltd
mov
add
pop
sbbl
lret
xchg
cmp
int
mov
push
out
pushf
sub
pop
fstl
cmp
xchg
popf
pusha
dec
insl
mov
cmc
into
out
shr
cwtl
and
and
and
rcr
clc
push
xchg
stos
mov
mov
pop
sub
pusha
test
mov
adc
push
dec
fnsave
xchg
int
xor
sbb
cltd
int
in
xchg
mov
mov
sarl
je
mov
repz
mov
mov
xchg
imul
or
add
das
mov
loop
pop
fildll
push
inc
cmp
xor
add
or
lods
inc
mov
add
dec
xchg
or
filds
push
addr16
test
out
adc
xlat
adc
fmuls
xchg
jno
jp
iret
dec
loop
lods
xchg
fistps
cmp
xor
mov
jbe
inc
aam
test
add
lock
imul
xlat
and
pop
jnp
jno
adc
or
adc
movb
cmpl
hlt
stos
ret
imul
aaa
or
test
mov
mov
test
cmp
cwtl
test
xor
nop
insl
out
add
push
into
aaa
mov
pop
cmp
adc
aaa
sbb
mov
jge
hlt
pop
pusha
arpl
mov
sbb
xchg
jge
insl
sti
xchg
lret
xlat
loop
insb
repz
sub
mov
mov
imul
dec
pop
lcall
dec
inc
int
mov
in
cmp
iret
mov
inc
push
jge
mov
jns
dec
jbe
jb
sub
dec
mov
in
push
fdiv
inc
fs
mov
pop
dec
cmp
es
and
fdivrs
nop
aad
bound
mov
cltd
cli
test
lods
or
clc
mov
mov
cli
pop
or
popf
cmp
or
std
bnd
outsl
xor
je
sbbl
jnp
pop
shrb
nop
int
sub
mov
mov
lea
into
jnp
add
dec
xor
jae
pop
pop
clc
sbb
pop
mov
in
dec
sbb
adc
add
xchg
aad
imul
mov
sub
inc
mov
add
pop
sbb
negb
mov
fcoms
fbld
js
int3
gs
mov
cs
push
repz
lret
dec
mov
imul
popf
cmp
jne
xor
int3
setae
xchg
dec
inc
pop
aas
fcomp
jp
xor
adc
sub
xor
call
fmuls
shl
dec
push
iret
inc
daa
or
cmp
leave
xchg
lods
and
test
or
insb
mov
mov
xchg
push
iret
sub
mov
cmc
sub
xchg
sti
les
pop
pop
push
dec
arpl
dec
xor
mov
cwtl
jnp
adc
in
or
pop
scas
inc
ljmp
jne
clc
je
or
fiadds
cmp
pop
push
push
push
in
inc
mov
xor
mov
dec
xor
jne
adc
es
cmp
push
lret
mov
add
mull
fsin
jae
xchg
pop
pop
xchg
mov
sbb
in
fdivrl
pop
loope
popf
adc
daa
inc
scas
call
pop
sahf
push
pusha
scas
sub
comiss
fcmovbe
jmp
mov
insb
out
sub
stc
jbe
movsb
imul
test
popf
xchg
inc
aaa
fidivrs
addl
xor
aam
enter
push
add
fadds
neg
jecxz
push
shl
push
xchg
fldt
shlb
ljmp
sub
enter
icebp
push
imul
fucomi
into
add
jns
lahf
cmp
sarl
rcll
pop
push
insl
adc
mov
cltd
mov
stos
iret
or
test
jb
call
xchg
rorb
iret
jae
cmpsb
sti
test
ljmp
pop
std
in
sub
mov
adc
rcr
notl
mov
lea
imull
call
cmpsb
xchg
cmpsl
pop
int
adc
mov
push
in
out
adc
imul
inc
ja
pop
xchg
sub
mov
push
pop
test
arpl
test
jge
test
fists
movsl
or
imul
lret
ret
loop
mov
cltd
loop
into
mov
xor
scas
cmpsb
sbb
imul
sbb
ja
xor
xchg
outsb
outsb
or
mov
sbbl
movsb
pop
mov
inc
lds
cmp
aaa
lock
out
outsb
iret
jnp
xor
sub
pop
add
mov
lcall
and
mov
call
rorl
dec
adc
pop
pop
add
aad
xorl
ljmp
mov
mov
mov
add
or
pop
pop
lret
and
or
fimuls
cmpsl
and
into
sbb
sbb
adc
jecxz
ja
testb
fsubrs
cmpsb
jno
push
and
xlat
pop
or
or
negl
insb
mov
outsl
in
push
or
cmp
imul
adc
insl
lahf
fs
sub
xlat
aam
popf
daa
add
push
cmpsl
jae
mov
jmp
mov
ret
les
mov
xchg
sub
push
imul
jo
and
cmp
pop
mov
sub
adc
mov
pop
test
in
es
add
push
incb
mov
test
mov
inc
jg
mov
shlb
dec
lsl
push
dec
popf
inc
inc
push
or
pop
push
xchg
xchg
and
and
xchg
js
jle
push
imul
mov
mov
sti
xchg
das
jo
jle
and
gs
dec
jns
xchg
jle
in
jp
jno
and
mov
xor
in
test
lock
dec
scas
sbb
adc
int3
or
and
sub
fs
cwtl
test
inc
aam
and
test
icebp
subb
inc
es
jecxz
xor
add
cmp
fisubs
faddl
ret
inc
inc
dec
cltd
test
push
ret
jbe
adc
js
bound
sbb
test
add
lds
test
mov
jb
and
adc
or
mov
push
adc
hlt
xchg
cmp
icebp
icebp
pop
shll
push
mov
or
add
xor
arpl
ja
xor
or
flds
mov
dec
cmpl
jnp
cltd
loopne
mov
lret
fildl
out
or
cmc
in
add
mov
mov
xlat
adc
mov
xor
test
sub
iret
xor
xchg
aaa
cmp
add
xor
pop
pop
stos
mov
jle
js
jle
push
jl
mov
sub
test
lcall
cmpl
pop
fwait
mov
cmp
and
inc
arpl
hlt
mov
ja
das
inc
sbb
sbb
insl
dec
push
jae
push
loopne
push
arpl
mov
xchg
into
sti
or
lods
imul
testl
sbb
pop
pop
imul
push
addl
mov
rcr
xor
test
add
xor
mov
mov
pop
in
sub
sahf
mov
and
nop
movsb
cmp
insl
mov
sbb
movsl
ds
pause
mov
loopne
jmp
subl
mov
and
repz
sbb
ficomps
je
fidivl
jge
xchg
lret
enter
sbb
push
mov
cmp
mov
sbb
stos
sbb
adcb
pushf
sub
cmpsb
mov
sbb
pop
jae
hlt
stos
jno
mov
popa
leave
jge
sub
jl,pt
ss
std
iret
pop
jae
push
push
sahf
sbb
into
inc
cmp
out
or
cltd
mov
mov
testl
roll
dec
jg
sbb
test
push
pop
add
fsubp
rorb
cmpsb
cltd
xadd
mov
xor
jmp
push
inc
cld
sbb
cmpsb
jae
xor
or
nop
sub
adc
in
xor
mov
mov
aas
pop
jno
stos
sarb
lock
fs
mov
aam
in
inc
das
mov
cltd
push
testl
jns
xchg
pop
mov
out
inc
test
cmpl
add
mov
sbb
mov
sbb
adc
je
fcomip
add
inc
notl
add
lcall
pop
dec
pusha
in
adc
insb
mov
dec
les
mov
clc
daa
push
adc
fcmovne
out
out
pop
mov
pop
insb
outsl
rolb
ss
in
push
add
shrb
lds
rcrl
mov
sub
mov
stos
es
scas
jl
xchg
push
popa
aaa
xor
enter
arpl
dec
add
popf
xchg
sbb
rol
into
xchg
fcmovnb
cmp
fcoms
popa
outsl
dec
cmp
lahf
sbb
xor
xchg
clc
stos
inc
nop
shrl
mov
loopne
stos
repnz
mov
and
testl
cwtl
icebp
cld
adc
add
sub
repz
cwtl
scas
or
push
ficompl
or
movsl
xchg
psubw
out
cmc
idiv
xchg
or
push
sbb
adc
insl
dec
out
mull
idivl
mov
xchg
rcr
scas
xor
cmpsl
add
inc
iret
sbb
in
icebp
xlat
divl
leave
push
cs
sub
lcall
add
inc
xorl
lret
popa
pusha
push
xor
xchg
jns
in
push
dec
xchg
jge
ljmp
xchg
loopne
fsts
sti
insl
and
xor
cmp
cmc
inc
push
inc
jl
shll
mov
loope
cmpsl
les
add
xor
and
cmp
xor
add
pop
lcall
push
es
in
jmp
xchg
arpl
clc
sub
pop
cmpsb
inc
ret
add
sbb
xchg
jne
mov
mov
int3
mov
fidivrl
shlb
jae
test
adc
fs
int
fld
rolb
out
xor
je
icebp
das
lods
imul
insb
dec
push
lahf
pop
mov
out
lods
sbb
punpcklbw
fdiv
sub
xchg
xchg
aam
mov
add
push
loop
stos
stc
cwtl
dec
push
lds
data16
mov
cmp
stc
idivb
pop
push
dec
inc
mov
out
mov
or
rcrl
pop
mov
cmp
adc
fcoml
nop
je
or
pop
mov
outsb
iret
push
mov
in
ret
xchg
jne
xchg
filds
mov
adc
push
sarb
hlt
call
pop
xorb
sbb
aad
das
stos
push
cltd
mov
in
icebp
js
rol
xlat
add
loope
dec
adc
mov
add
bound
test
es
iret
mov
inc
sbb
and
push
push
or
sbb
icebp
mov
sub
idivl
outsl
aaa
push
pusha
das
inc
mov
imul
cwtl
lahf
xor
es
adc
pop
mov
ficoml
mov
faddl
into
adc
fnstsw
popa
sbb
pop
push
dec
mov
xchg
out
xchg
leave
add
jg
in
in
repnz
mov
movsb
je
js
in
hlt
mov
ret
loope
cmp
xchg
mov
aas
jp
out
dec
stc
mov
and
xor
pop
rorb
pop
daa
inc
testb
outsl
cmpl
sbb
or
xchg
xlat
jbe
or
mov
sti
sub
inc
icebp
inc
fmulp
pop
notb
jl
mov
sbb
sub
arpl
mov
pop
insl
xchg
push
xor
in
jne
les
inc
and
repnz
sub
mov
fldcw
icebp
idiv
push
clc
rep
insl
lret
pop
sbb
shlb
sahf
in
negb
sub
loopne,pt
out
mov
dec
push
lret
repnz
movsb
out
lods
aad
notb
pop
mov
xor
das
div
mov
and
orl
push
pop
bound
cmp
cmp
sub
add
mov
nop
addr16
sub
data16
xor
jp
sub
inc
jbe
inc
sub
pusha
and
cmp
leave
mov
sbb
or
ffree
movsb
adc
push
out
sbb
in
pop
push
mov
xchg
dec
into
popf
testl
lods
and
pop
fdivr
aam
mov
stos
test
sub
inc
lcall
ret
ljmp
xchg
jge
jecxz
and
ret
enter
and
inc
gs
mov
mov
adc
jmp
mov
sbb
jno,pt
sub
jle
sbb
xchg
cmpl
push
push
divb
mov
popf
dec
test
inc
dec
mov
inc
lret
inc
xchg
rclb
pop
mov
sarl
push
mov
mov
mov
les
rcrb
jecxz
or
push
pop
mov
or
push
fbld
push
cmc
pop
mov
sti
movzwl
adc
mov
mov
addb
xor
push
dec
pop
jns
jecxz
jnp
fcoms
adc
mov
stc
push
loop
jno
loopne
stos
outsb
sbb
push
sbb
dec
or
jl
shlw
shl
sarl
dec
pop
stos
pop
adc
mov
aam
pop
cmp
divb
dec
xor
lgs
loopne
inc
jbe
fwait
shll
sahf
mulb
adc
sbb
pop
ss
xor
hlt
in
mov
nop
mov
dec
pop
dec
mov
push
std
cmp
fisttpl
subb
hlt
add
mov
ret
cmp
adc
dec
mov
movsl
sub
mov
enter
mov
cld
addr16
sbb
out
cmp
sahf
dec
ficompl
inc
push
mov
out
add
push
jmp
cmp
jnp
push
pop
nop
aaa
sar
inc
icebp
cld
lret
inc
cli
test
fwait
jno
dec
test
pusha
jb
xchg
call
push
fsubrp
sub
out
adc
aas
push
inc
aad
ljmp
in
sub
inc
movl
or
loopne
int
imulb
sbbl
sahf
xchg
mov
cltd
fcmovne
push
mov
sahf
push
inc
ror
dec
push
xor
fidivrl
ljmp
enter
bound
mov
mov
fcom
fwait
test
pop
mov
push
pop
fxch
xchg
out
loop
data16
loope
lret
dec
jbe
sub
cld
adc
mov
je
inc
add
fdivrs
fsubl
mov
lcall
cmpsl
mov
imul
inc
clc
insl
push
cmp
insb
addr16
lds
jg
loopne
cli
jecxz
call
mov
shl
in
xor
cmp
pushf
and
in
pushf
ret
iret
jne
bound
hlt
push
adc
insl
lock
jge
mov
shrl
push
sbb
push
adc
cmp
cli
dec
xchg
rcr
std
mov
cli
fstpl
push
or
or
adc
lahf
sarb
enter
dec
repz
movsl
or
push
jo
clc
fisubrl
lret
jp
in
je
pop
repz
popf
fildl
mov
ljmp
lcall
dec
pop
outsl
cmc
iret
mov
inc
jno
outsl
push
mov
inc
add
inc
add
jecxz
mulb
cltd
rcrl
movsl
sbb
stc
or
jge
cmpl
xchg
out
xchg
jp
dec
jns
test
mov
ljmp
xor
xchg
sub
add
js
pop
cs
and
movsb
sub
adc
cmp
loop
cli
popl
pushf
jae
fbld
aas
sub
inc
divl
lret
sahf
or
push
lods
inc
mov
mov
les
loope
test
adc
cmp
inc
and
xlat
lea
test
sbb
lods
xchg
imul
out
stc
fimull
pop
add
sub
adc
popf
inc
outsb
subps
or
mov
hlt
dec
int
mov
cmp
push
mov
mov
cmp
xor
pop
lods
fldcw
fidivrs
adc
loopne
jp
xchg
sbb
add
cmp
das
hlt
je
xchg
shlb
idiv
add
daa
add
jo
push
xchg
dec
adc
stos
lret
inc
xor
ret
hlt
leave
xor
divl
push
or
or
or
js
cmpsl
or
cwtl
and
stos
lds
sbb
scas
xor
pop
test
aam
sbb
jge
xor
add
jmp
cwtl
push
icebp
dec
or
mov
sbb
clc
inc
mov
sbb
nop
push
xchg
cmpsl
and
push
shlb
ljmp
sub
pusha
push
cltd
test
pop
icebp
jge
loop
arpl
ss
push
clc
cmp
cmp
neg
and
inc
xchg
clc
fisubrs
orl
and
stos
xlat
lret
test
pop
outsb
fisubl
inc
pop
mov
ret
sbb
xor
jae
stc
mov
jmp
sbb
ss
in
loop
movsb
add
cmp
fistps
movsb
jns
sahf
mov
pop
lods
adc
aad
test
ficoms
mov
jbe
cmp
cmp
pop
jp
cli
in
pop
mov
ds
jo
test
arpl
push
or
sbb
rcrl
loop
xor
cmp
fsubl
cmp
idivl
sbb
mov
mov
not
ss
lods
sbb
ljmp
xor
xchg
in
std
in
lock
dec
dec
or
cmp
imul
rorl
gs
mov
mov
jmp
xchg
mov
adc
push
and
jmp
or
wrmsr
jecxz
inc
inc
pop
mov
adc
push
gs
scas
addr16
pop
icebp
sub
mov
and
in
jl
xchg
jae
pop
in
sbbb
jmp
in
aas
mov
mov
in
sub
mov
cmpsb
lock
call
clc
xchg
cmp
aaa
loopne
push
cmpsb
dec
sub
dec
pop
insb
aad
push
ja
pop
sbb
xor
pusha
outsl
jnp
dec
cmpsb
pop
jb
pushf
loope
test
mov
loop
add
pop
js
sbb
mov
sbb
in
pop
ret
imul
int3
mov
ljmp
jmp
cltd
fwait
jmp
xor
xchg
mov
lods
fdivrp
jp
adc
xchg
lods
test
push
xlat
pop
add
mov
call
jl
mov
in
cwtl
fwait
push
div
push
adc
jge
jo
mov
call
and
or
test
mov
sbb
push
xchg
and
enter
in
sub
sbb
ss
sub
ret
xor
mov
lahf
and
sbb
negl
pop
cmpsb
sub
in
or
pop
push
pop
outsl
lods
movsl
fdivl
hlt
xorb
rolb
inc
dec
int3
ljmp
movsb
push
addr16
or
out
dec
data16
mov
lds
xchg
pusha
arpl
or
lods
test
das
push
mov
xor
ljmp
lods
test
sbb
push
and
cld
fists
mov
hlt
lea
roll
xchg
decb
pop
add
xor
xchg
cli
into
sbb
jbe
ret
add
xchg
and
mov
push
jae
repnz
mov
fcompl
ret
pop
xchg
adc
inc
cmpsb
jb
or
lods
jecxz
stos
icebp
add
or
mov
mov
mov
and
inc
push
pop
outsb
leave
push
pop
imul
in
pushf
mov
adc
xchg
adc
test
add
pop
inc
inc
stos
lret
xchg
mov
fldl
mov
fsub
and
adc
or
jle
stc
bound
popa
imul
rcrl
ds
movsl
data16
aad
pop
mov
dec
js
test
mov
popa
jmp
lret
test
cli
lcall
lds
add
xchg
hlt
push
jg
xor
ljmp
and
rorb
add
jns
sbb
lea
fstpl
xchg
mov
pop
icebp
mov
mov
xchg
mov
jnp
jo
lds
xchg
sub
mov
rcr
dec
orl
daa
psllw
dec
jno
jmp
and
adc
mov
xchg
dec
jecxz
fcomps
fs
cmpsl
cmp
addb
and
jne
pop
out
std
and
jo
xor
testb
push
stos
cwtl
cmp
in
add
cld
rcr
mov
jecxz
sbb
lahf
mov
or
sub
test
inc
mov
test
cmpb
cmp
imul
mov
daa
sbbb
mov
or
or
pop
pusha
pop
fistpll
xlat
xor
fsubl
inc
mov
fsubl
icebp
inc
icebp
out
stos
or
cmp
daa
std
mul
adc
aad
push
push
add
gs
imul
dec
mov
inc
jbe
pushf
push
mov
scas
int
xchg
or
cs
add
cmp
in
mov
sahf
dec
xor
fcmovbe
cli
popa
push
sahf
push
jmp
push
mov
cmp
inc
les
jecxz
push
test
jne
out
jns
inc
mov
xchg
sub
fs
xor
jnp
sub
js
and
lods
sub
jbe
mov
mov
lahf
call
push
xor
sahf
sub
add
sbb
cld
repz
mov
sub
push
lret
inc
xor
jne
xor
mov
cmc
popa
xchg
or
mov
aam
lahf
mov
and
cli
inc
shrb
dec
popf
adc
ret
dec
push
xchg
and
inc
lret
xchg
cmp
test
sub
je
lret
inc
mov
jo
icebp
xor
xchg
test
subb
cmp
mov
add
push
lcall
arpl
ja
aad
inc
fsubrs
add
js
movsb
insl
mov
jp
test
lret
fdivl
mov
mov
pusha
mov
popf
les
or
jmp
daa
stc
pop
mov
and
adc
int
jl
jmp
sub
arpl
pop
addr16
data16
mov
jne
cmc
pop
jnp
femms
jns
pop
sarl
cld
mov
and
outsl
out
inc
pop
cmp
push
push
cld
cmp
bnd
sub
jnp
stc
popf
jno
mov
add
dec
imul
icebp
cmp
cmp
fwait
sub
ret
jmp
gs
enter
jbe
shlb
xlat
incb
jmp
cwtl
jb
or
fwait
inc
push
dec
stos
mov
pop
test
sub
fs
add
loope
adc
dec
jge
pop
scas
mov
dec
lret
pop
or
mov
adc
and
mov
or
dec
adc
sbb
xchg
mov
test
ja
and
mov
mov
iret
mov
cwtl
jb
inc
addps
jg
cli
sbb
data16
lds
mov
pop
orb
enter
aam
ljmp
call
jo
lods
fs
sarb
adc
fisttpl
stos
test
cld
xlat
jge
pusha
adc
push
inc
int
mov
jno
mov
or
xor
leave
xchg
outsb
je
mov
adc
xor
or
xorl
add
sub
fwait
xchg
jp
ss
int
imul
dec
lds
mov
mov
dec
in
loopne
fiadds
lods
ror
mov
les
xchg
dec
insb
icebp
or
jno
fisubrl
test
out
int3
sbb
cmp
lret
scas
out
popa
xchg
mov
fstpl
js
sub
adc
cs
jp
inc
out
imul
cmp
cmp
jge
loope
aas
sub
inc
mov
push
imul
add
fnstenv
jmp
ret
in
int
test
push
push
sbb
enter
in
dec
push
cmp
cwtl
mov
mov
xchg
jg
fbstp
mov
ret
jbe
call
mov
mulb
add
lods
stos
outsl
stos
xlat
fldt
in
dec
xchg
mov
dec
push
jle
mov
sti
push
dec
mov
sub
cmp
lea
mov
xchg
dec
jnp
pop
sub
les
insl
mov
pop
imul
mov
stc
jne
cmp
jg
dec
sub
xchg
pop
mov
pop
inc
mov
out
mov
sub
mov
aaa
cltd
xchg
in
mov
lret
push
lds
lcall
inc
or
cmpsb
push
jmp
jp
ficomps
inc
dec
add
shl
nop
pusha
add
fsts
jl
xchg
es
insb
xor
and
xchg
cmp
enter
test
fisttpll
and
mov
xchg
pop
cmp
ret
mov
div
pushf
insb
jmp
sub
cmp
adc
lret
gs
xor
dec
out
or
je
mov
jp
add
mov
ljmp
and
gs
sub
xchg
into
int3
fldcw
inc
frstor
xlat
jp
leave
sub
rorb
call
mov
stc
outsb
xor
ja
in
mov
ss
shrb
add
int
nop
push
in
out
mov
mov
iret
repnz
dec
and
xchg
loop
sbb
dec
stc
aam
xchg
or
xchg
lret
pop
icebp
fstl
jbe
cld
ficoml
mov
sbb
icebp
repnz
sbb
cli
mov
fmuls
jmp
fcoml
push
xchg
adc
cmp
jno
leave
stos
adc
jg
cmp
inc
stos
in
push
add
cmc
pop
stc
sub
int3
test
mov
dec
stos
roll
in
faddl
testl
and
push
mov
mov
fdivr
push
adc
dec
mov
xchg
mov
dec
andl
flds
cwtl
int
jge
outsl
add
and
cmp
adc
jno
cmpsb
push
test
lcall
dec
stos
or
test
inc
mov
xor
imul
mull
imul
imul
jg
hlt
pop
js
inc
jecxz
mov
inc
push
jg
jmp
les
adc
cmp
inc
push
xchg
popf
scas
sbb
push
mov
repnz
cmp
movsb
inc
xchg
jecxz
jmp
aad
inc
fimull
fcomps
jle
ret
roll
mov
cmp
mov
stc
int
and
mov
sti
lahf
push
mov
sahf
sub
mov
stos
cmp
sub
fldz
add
test
mov
aad
inc
andb
repz
cmp
lret
test
dec
loopne
stos
imulb
xchg
and
ljmp
pusha
in
adc
sti
mov
inc
or
mov
sub
or
jecxz
add
stc
std
jle
rol
lcall
xchg
int
fiadds
or
inc
es
mov
cwtl
fldenv
aas
daa
imul
and
xor
imul
or
and
popa
jecxz
sbb
stos
sub
or
adc
adc
cmp
loop
sbb
lcall
andb
or
filds
mov
in
cltd
sub
repz
fisttps
pusha
stos
jbe
shl
xor
jo
push
mov
pop
jge
mov
xchg
jnp
dec
sbb
iret
adc
add
loope
stos
incb
scas
dec
cmp
cs
xorb
mov
xchg
test
std
nop
std
lret
sbb
inc
pop
adc
adcb
mov
xor
mov
push
cmp
sahf
jne
in
aaa
loop
int
push
push
jp
xchg
test
sub
outsl
ja
scas
mov
cmp
out
cmp
out
or
aas
ret
testl
pop
mov
fwait
push
xchg
scas
jle
fdivl
out
jmp
dec
cmp
mov
gs
jmp
pop
or
push
mov
sbbl
shl
inc
mov
or
cmpsl
lods
inc
xchg
or
mov
push
stc
ret
leave
jns
inc
mov
mov
insb
xlat
nop
lret
jne
pop
push
and
aaa
cld
sub
pop
repnz
add
pop
popf
in
add
and
mov
in
pop
mov
and
mov
jo
inc
xorb
xchg
sub
fdivrl
jo
push
inc
and
pop
das
cmp
push
push
cmp
pop
adcb
adc
addl
add
dec
mov
dec
adc
inc
jb
pop
int
out
cs
lret
sti
call
xchg
or
or
jmp
pop
pop
xchg
sbb
and
pop
pop
mov
test
insb
insb
fisubrs
jle
loope
in
and
and
adcb
pop
jnp
jb
data16
inc
mov
cmp
lods
sbb
add
stos
xchg
sub
and
mov
sti
scas
flds
push
daa
cli
add
loope
mov
dec
dec
adc
addr16
pop
in
xor
xor
jmp
pop
cwtl
mov
cmp
das
and
data16
and
addr16
icebp
or
icebp
xor
mov
loope
imul
push
mov
movsl
pop
inc
mov
sti
rcl
jl
mov
mov
push
fnsave
fdiv
push
out
loop
loopne
xchg
xchg
jge
std
sbb
or
imul
test
mov
sub
nop
or
mov
addr16
mov
xrelease
sub
pop
sbb
pop
mov
clc
mov
mov
dec
inc
sbb
inc
std
dec
push
push
cmp
mov
and
insb
mov
jp
mov
xchg
jae
mov
adc
in
popa
xor
ror
xor
adc
stos
xlat
sbb
pop
inc
cwtl
pop
dec
arpl
pop
mov
push
inc
lods
cmp
outsl
adc
jb
inc
xchg
cmp
sub
and
push
fisubrs
rcr
bound
nop
mov
add
xor
pusha
sbb
add
das
andl
test
std
pop
sbb
pusha
cs
xor
mov
es
or
jns
adc
inc
enter
pop
cmp
aas
clc
scas
test
jl
xor
adc
mov
leave
xchg
mov
pop
dec
ss
pop
sbb
inc
mov
fisubrl
test
jp
sbb
fstps
test
jl
icebp
lock
adc
cmpsl
mov
fwait
das
adc
sbb
pop
fscale
mov
adc
push
xor
lods
mov
aas
stos
mov
lahf
cmp
test
aad
pop
shr
xor
jbe
push
jb
xchg
and
or
in
adc
adc
mov
movsb
add
test
xchg
mov
lcall
push
pop
lock
sbb
into
jb
in
sub
leave
mov
fdivl
jle
in
fbld
mov
loope
inc
jecxz
mov
pop
pop
ljmp
ret
xchg
ss
xchg
outsl
cli
fnstenv
cs
jl
arpl
mov
pop
sbb
lea
mov
xchg
jbe
shrl
mov
xchg
push
or
xchg
test
jp
and
and
push
xchg
scas
loope
mov
mov
or
adc
popf
mov
and
sub
arpl
jmp
dec
pushf
add
mov
loop
sarl
nop
js
adcb
movsl
mov
scas
das
jbe
xor
push
pop
mov
pop
sbb
xor
icebp
mov
jo
popa
pusha
cmp
cmp
dec
cld
sub
add
cmc
sbbb
xlat
adc
hlt
inc
cmp
or
xchg
inc
daa
lahf
or
or
adc
test
dec
push
mov
je
ror
cmp
mov
jmp
mov
je
and
std
mov
mov
inc
adc
pop
jp
and
lods
repnz
pop
sub
and
out
divl
jg
adc
cmp
mov
ds
div
std
sub
dec
dec
or
jl
jge
iret
jl
lret
adc
or
enter
in
add
mov
mov
sub
sub
adc
sub
cmp
cltd
dec
lcall
xchg
or
aaa
loop,pn
mov
sbb
scas
pop
iret
or
jbe
dec
std
daa
sahf
sub
int3
jb
sub
ror
pop
pop
xchg
adc
add
jno
lods
pop
inc
fwait
push
in
hlt
shlb
cmp
popa
lcall
cmp
jge
inc
cmpsb
dec
lret
int3
scas
jnp
loopne
ds
cmp
xchg
and
cmpsl
repnz
mov
sub
pop
cmc
push
movsl
out
fwait
outsb
call
inc
lahf
fs
mov
dec
iret
push
int
xor
adc
lcall
xor
cmp
das
inc
jle
push
add
dec
cmpsb
ret
xchg
pop
jns
add
mov
insb
mov
pop
enter
sub
jecxz
adc
push
aas
ds
aaa
pop
lcall
mov
jnp
sub
jp
jecxz
cwtl
outsl
test
int3
push
inc
imul
insl
inc
imul
push
mov
int
into
jg
jmp
adc
xor
out
cwtl
push
sar
sbb
addr16
cmpsb
cmpl
jge
push
stc
nop
daa
sub
pop
pop
test
roll
sub
push
popa
mov
mov
and
popl
aas
dec
test
xchg
or
jge
fbstp
data16
xlat
aad
int3
movsl
adc
jle
pop
jg
arpl
mov
sub
jg
push
jecxz
push
cmp
nop
mov
icebp
in
and
js
enter
and
xchg
jg
xchg
arpl
pop
std
das
mov
push
push
sbb
andb
scas
lahf
or
mov
mov
xchg
jbe
mov
inc
pop
nop
mov
lea
sub
jmp
mov
push
dec
incl
loope
loop
std
int3
push
clc
dec
loopne
in
das
mov
xor
and
sbbb
in
imul
pushf
and
mov
mov
push
neg
mov
mov
call
cld
jl
call
pop
pop
pop
jns
sahf
mov
cli
shrl
fiadds
outsb
fdivl
stos
ljmp
pushf
jns
add
test
js
jae
mov
lahf
add
push
inc
cmp
pop
mov
scas
cld
jg
dec
movsl
je
ja
in
pop
addb
push
loopne
push
pushl
dec
add
mov
std
mov
into
out
and
and
test
outsb
mov
sub
lds
insl
cmp
xchg
or
lret
in
loop
rcr
cmpsl
stc
shlb
add
xchg
pop
adc
mov
mov
dec
fcmovbe
cmpsl
push
insl
stos
cmpsl
leave
jg
in
push
arpl
lods
sub
mov
test
pushf
ja
push
lahf
add
jb
add
iret
mov
testl
jmp
out
enter
fcompl
lods
add
fs
lock
pop
pusha
es
stc
sbb
xlat
jmp
pop
push
scas
scas
lret
faddp
xchg
mov
pop
and
popa
pop
fstpt
adc
je
imul
mov
mov
and
lock
in
push
push
clc
push
mov
push
add
test
fdiv
jns
jmp
mov
movsl
cmp
in
in
lock
push
xchg
adc
daa
sti
mov
addr16
jle
scas
insb
ret
or
ficomps
aaa
lds
sbbl
mov
mov
mov
cmp
out
push
loope
push
xor
sub
std
rcrl
lock
insb
mov
fwait
mov
sub
lahf
adc
or
inc
adc
pop
pushf
sub
pop
ja
test
arpl
test
adcl
sahf
sbb
dec
jae
loop
inc
ret
inc
or
mov
lds
cmp
rcrb
ret
cmp
xlat
in
ja
mov
inc
ret
mov
jle
jns
loopne
cmp
adcl
dec
push
adc
mov
loopne
mov
push
outsl
in
sub
in
inc
jge
les
jg
stc
shl
mul
int
dec
jecxz
pushf
shll
push
inc
mov
insb
xchg
pusha
inc
cmp
jo
in
mov
or
and
mov
pop
lods
rcr
mov
inc
dec
add
sbbb
cmp
mov
pop
mov
pop
mov
imul
cmp
pushf
sub
out
std
mov
inc
adc
pop
cmp
lods
aaa
or
xchg
adc
pop
cmp
pop
mov
popf
mov
or
daa
push
and
cli
mov
pop
xchg
add
mov
inc
rolb
leave
nop
or
sbb
or
imul
mov
inc
xor
pop
mov
mov
loopne
fidivrl
xor
andl
inc
xchg
std
fisttps
in
cs
jne
xor
add
jge
xchg
jo
cmp
je
mov
mov
and
cmp
mov
add
mov
xchg
mov
bound
adc
or
inc
dec
push
dec
in
xchg
mov
jecxz
rcll
pushf
sub
add
push
xor
addr16
imul
shrl
xchg
sarl
jne
xchg
shlb
xchg
inc
lret
jmp
push
gs
in
or
insb
lods
sub
cmp
lcall
adc
jge
notb
push
push
cmp
pop
push
fisttpl
mov
jnp
insb
mov
push
ja
and
xchg
mov
mov
lahf
movsl
dec
imul
aas
cmpsb
addr16
inc
mov
addr16
aam
mov
into
mov
xchg
fs
movsl
mov
mov
aas
andl
aad
cwtl
std
jno
call
popa
or
out
xor
or
ss
jge
movsb
jp
scas
jne
add
notl
or
mov
xor
jnp
adc
jg
xchg
jne
mov
arpl
test
jmpw
xchg
or
and
or
sbb
mov
pop
sti
inc
lods
insb
ret
push
mov
js
fidivs
dec
subb
push
fisttpll
mov
sbb
mov
mov
iret
lods
inc
and
das
sahf
out
jne
arpl
add
loope
jns
repnz
adc
and
push
in
sarl
sahf
dec
lret
aad
mov
in
popa
xor
jae
cmp
dec
inc
sub
mov
orb
jo
mov
aam
inc
pop
dec
xor
fs
jp
jns
pushf
sbb
insl
pop
and
loope
xchg
and
lret
mov
adc
addr16
inc
aam
mov
inc
xchg
xorb
nop
or
lcall
or
je
jle
xchg
testl
sub
mov
dec
cmpb
cmc
int
pop
mov
push
and
addl
sbb
xchg
xor
fmuls
loop
fistps
in
addl
movsb
aam
xor
xchg
mov
pushf
insl
add
inc
test
aaa
out
loopne
jle
rcrl
or
fisubl
fcomps
push
mov
lods
addr16
mov
stos
pop
cmp
inc
cmp
sub
xchg
bound
sbb
fdivrl
add
sbb
cmp
das
in
dec
sbb
test
pop
xchg
mov
repz
jmp
xchg
add
std
das
fisttps
cltd
add
mov
mov
xor
sub
pop
adc
xchg
inc
sbb
lcall
roll
jno
cmp
sbb
ss
std
xchg
enter
inc
or
xor
push
add
jb
xor
push
shl
cmp
xlat
xchg
mov
sahf
adc
mov
dec
cwtl
jg
push
and
jg
leave
and
je
adc
mov
decl
mov
fsub
jmp
push
push
rol
xor
pushf
cs
and
mov
pushf
xchg
sub
jle
mov
add
xchg
or
xchg
pop
sbb
int3
or
lea
push
push
addr16
cmp
test
cmp
imul
lret
in
jo
jecxz
std
push
and
inc
in
cwtl
insl
mov
pusha
xchg
in
ret
jo
pop
cltd
adc
push
add
jl
push
sarb
inc
cmpsl
cmp
cmp
xor
sahf
lds
hlt
pop
out
outsl
sbb
std
adc
sbb
push
aad
or
mov
sahf
rclb
push
out
sub
fiadds
aad
or
add
jne
test
test
stos
adc
imul
dec
push
mov
lods
movsb
or
xchg
push
mov
and
divb
adc
cld
in
pop
adc
add
mov
adcb
fdiv
lods
mov
cwtl
pop
push
sti
dec
mov
add
add
xor
sbb
subl
and
inc
jb
and
xor
pop
and
mov
aaa
sbb
lods
adc
into
xchg
and
ljmp
loope
pop
mov
outsb
das
fs
cmp
add
jns,pn
mov
push
iret
cmp
sub
mov
xor
jb
std
stos
imul
aam
mov
push
push
xor
cmc
negl
stos
cmpb
push
cmpsb
jle
divl
test
leave
int
or
fmull
fs
fwait
inc
leave
aas
dec
mov
push
loopne
lods
sbb
or
pop
xchg
mov
stos
push
sbb
imul
out
je
mov
scas
leave
pop
jecxz
popa
aam
mov
cwtl
pop
jmp
test
sbb
cmp
idiv
fcoms
dec
clc
cmpsl
sbb
adc
movsb
jno
fcoms
inc
test
push
imul
notb
jle
push
mov
imul
push
rcl
out
mov
pop
fsub
push
mov
push
and
lods
iret
mov
mov
cmp
pop
hlt
cmp
nop
pop
mov
sub
imul
stc
sbb
in
push
lahf
shll
das
test
test
enter
lock
sti
cmpsl
and
imull
xlat
addb
andb
jbe
mov
push
pop
mov
mov
orl
jae
cmp
int
nop
mov
test
ja
lahf
or
fs
xchg
pop
into
dec
das
iret
xor
mov
fs
sub
sti
pop
adc
jg
sahf
inc
rcl
inc
adc
in
mov
mov
inc
lock
or
inc
adc
push
pusha
cmp
inc
dec
pushf
jnp
cmp
push
test
mov
xor
and
mov
push
sub
stos
adc
loope
insb
xchg
lret
inc
outsl
lods
dec
imul
sub
mov
and
cmp
in
sbb
test
mov
mov
xchg
pop
gs
aaa
xchg
mov
mov
sarb
rolb
mov
lods
stc
stos
xorb
aaa
pop
inc
test
xor
pop
andl
cwtl
movsb
loope
popf
pop
inc
sbb
int3
movsl
sarl
mov
cmp
and
adc
flds
cld
out
ds
hlt
push
sbb
das
jb
cmp
les
push
mov
fldt
push
jns
sub
out
notb
imul
clc
cmp
mov
add
lcall
int3
or
call
push
jne
add
mov
mov
hlt
loop
lods
cli
imul
or
out
xchg
lahf
and
inc
movsl
jno
out
jns
lods
adc
sbb
mov
jo
cmp
xchg
jbe
sbb
add
ss
mov
mov
cld
mov
pop
mov
push
and
std
dec
fwait
dec
and
sti
sbbb
in
xor
aad
bnd
rcrl
push
test
out
ds
add
and
fisubs
stos
js
lods
dec
popf
push
mov
insb
jae
push
cmpsl
or
sub
ds
or
pop
imul
mov
xor
rcl
pop
pop
test
nop
sub
cmp
into
fwait
mov
imul
push
fs
stc
cld
jo
mov
shlb
lods
mov
fs
iret
sbb
xchg
dec
xchg
cvtpi2ps
fldcw
dec
inc
jbe
dec
cwtl
es
jae
and
and
xchg
inc
mov
push
iret
inc
mov
xchg
test
jb
mov
sti
mov
pop
adc
sub
adc
ret
xlat
xchg
iret
xchg
mov
xor
jo
xlat
sarl
and
lcall
pop
sub
pop
cmp
mov
push
into
mov
mov
call
mov
ss
jmp
sub
jae
and
mov
lcall
ja
daa
clc
sti
cld
pusha
inc
adc
gs
add
or
jp
jmp
sbb
sti
cwtl
pop
out
mov
aas
push
lret
mov
mov
sub
ror
popa
mov
inc
push
mov
sti
rorb
push
sti
xchg
inc
dec
clc
push
xor
mov
sar
jge
sbb
adc
lods
nop
mov
adcb
mov
shll
mov
mov
push
mov
mov
and
inc
insl
cli
lds
imul
inc
inc
xchg
mov
push
or
cmpsl
push
ja
icebp
xor
mov
subb
mov
sub
mov
addr16
in
mov
pop
in
aas
cmc
rolb
scas
pusha
xor
cmp
rorl
push
leave
test
mov
sub
cmp
mov
xchg
push
loop
adc
sbb
test
js
mov
add
jge
cmp
cli
out
add
push
scas
fwait
scas
into
into
dec
fnstsw
pop
ss
xchg
push
dec
icebp
inc
lcall
int3
orb
fidivrs
xchg
mov
push
neg
cwtl
shrb
in
data16
jp
jb
ret
pop
sub
imul
mov
pop
loope
ds
lods
jno
lds
push
leave
stc
sub
lret
xor
movsb
les
ja
lret
inc
inc
mov
dec
enter
in
adc
inc
xor
inc
push
mull
gs
adc
out
js
lahf
pop
loop
and
jnp
pop
inc
add
inc
pop
fs
sub
xor
out
mov
dec
add
mov
xlat
pop
inc
push
mov
mov
imull
jmp
out
shlb
jle
and
stos
clc
loopne
clc
sbb
inc
sub
xor
add
sbbl
adcb
or
movsl
or
out
mov
push
jle
mov
int
push
jo
ds
in
inc
pop
sub
data16
xchg
or
shlb
loopne
jo
and
subb
mov
mov
add
push
mov
ret
or
xor
out
dec
out
in
pop
add
dec
cs
or
les
call
mov
inc
mov
pusha
add
ret
pusha
jb
repnz
int3
clc
les
cli
jecxz
fdivrs
mov
jle
mov
andnps
sti
clc
xchg
hlt
fildll
lcall
lods
out
jge
dec
xor
push
sbb
ds
mov
cmp
lahf
adc
std
inc
lret
into
outsb
jne
jns
mov
out
inc
aam
aam
mov
cs
shrb
cmpsb
arpl
sub
mov
insb
and
jp
cltd
inc
out
jg
xchg
or
xor
lret
js
sbbl
sub
jne
jle
popf
mov
sub
mov
out
xchg
inc
outsb
push
pop
mov
mov
stos
jmp
movsb
mov
sbb
sbb
pop
popa
flds
mov
dec
adc
xlat
mov
or
dec
pop
enter
adc
mov
daa
xor
insb
pop
jae
imul
insb
imul
and
sahf
mov
cmp
cs
jl
mov
xlat
pop
cwtl
enter
scas
and
lea
add
iret
cmp
cmp
lea
or
push
outsb
adc
nop
popf
xchg
lret
add
sbb
stos
ljmp
or
inc
pop
sub
dec
push
sbb
xchg
jb
inc
lea
mov
lahf
push
stos
sbb
ja
and
mov
dec
mov
imul
cli
cmp
mov
movl
out
dec
xchg
std
lock
push
mov
pop
and
push
ficompl
xlat
mov
ljmp
cmc
insb
sub
int
and
testl
cmp
push
and
xor
mov
mov
scas
mov
adc
movb
inc
inc
jle
nop
bound
fisubl
ds
push
in
decl
xor
test
xchg
fldl
sub
rol
jecxz
out
and
out
stos
fdivr
add
notl
add
sarb
xchg
mov
sub
movb
lods
stc
loopne
sti
mov
lret
adc
addr16
stos
pop
repz
scas
scas
sbb
or
pop
repz
jge
aam
pusha
adc
insl
push
mov
out
stos
xchg
mov
inc
add
mov
and
sbb
inc
xorl
pop
stos
inc
cwtl
int3
iret
xor
lods
mov
loop
add
push
dec
lock
ja
dec
iret
fidivl
dec
scas
flds
inc
rorb
mov
mov
repnz
rclb
stc
movb
aas
mov
daa
mov
jno
dec
pop
ret
xchg
mov
movsb
xchg
jne
lock
inc
test
shll
add
cld
add
dec
cmp
ds
cmp
cmp
jmp
sbb
das
push
imul
fistps
xor
inc
add
dec
mov
shl
push
rorl
dec
outsl
inc
mov
sbb
add
testb
insb
int3
out
push
inc
xor
shll
mov
outsl
jo
outsb
xor
sbb
pop
fcmovu
mov
dec
imul
iret
adc
stos
or
inc
popa
and
xor
cs
rep
rcl
in
xor
stc
adc
dec
xchg
inc
dec
xchg
sbb
inc
xchg
mov
ds
outsb
pop
inc
and
js
pushf
outsl
inc
jecxz
xchg
int
testl
cmp
jne
movsl
cmp
sahf
loopne
in
ficoml
dec
aad
fcompl
xor
aam
cmp
xchg
xchg
and
sub
inc
inc
repz
xchg
and
outsl
adc
imul
arpl
subl
dec
pop
inc
lods
add
xor
sbb
push
jae
cmpsb
loope
jns
mov
xor
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
enter
inc
fisubl
addb
push
pop
insb
xchg
push
es
sar
int3
push
movsb
sti
push
and
outsl
adc
mov
add
mov
shr
xorb
xchg
add
and
lret
ret
lret
push
adc
dec
sbb
hlt
mov
jp
dec
fldenv
mov
sahf
mov
aam
or
mov
popf
xchg
sub
mov
scas
loop
inc
inc
sbb
sub
orb
loopne
out
sarb
sub
push
pop
sbb
test
stos
jbe
jmp
or
out
pop
test
dec
adc
or
or
mov
xchg
loop
fs
test
xchg
into
mov
inc
insl
pop
daa
idivl
xchg
xor
bound
mov
add
stc
scas
inc
test
inc
in
and
xchg
adc
clc
add
bound
xchg
and
or
lahf
push
in
fs
int3
cmp
test
arpl
xchg
xchg
sti
mov
je
push
pop
rcrb
sbb
je
jecxz
xchg
or
arpl
test
sbb
xor
inc
cmp
pop
loope
inc
jl
bound
outsl
mov
xchg
adc
bound
lret
and
mov
fisttpl
jno
xchg
mov
jno
loop
xchg
mov
ja
jns
cmp
xor
push
sti
out
ss
std
pop
out
fdivl
mov
out
inc
xor
sub
insb
and
mov
icebp
push
mov
pop
jmp
movsl
xchg
fcmovnu
add
pusha
movsb
pop
mov
mov
int3
fs
push
cmpsl
fwait
ret
repz
es
imul
popa
scas
ds
movsl
aaa
pusha
lds
fildl
enter
mov
sbb
aam
ds
jg
mov
sbb
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
rolb
add
lahf
