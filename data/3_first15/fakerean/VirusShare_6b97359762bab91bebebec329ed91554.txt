add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
inc
inc
inc
add
decl
decl
test
mov
dec
inc
add
popf
pusha
decl
test
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
aas
xor
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
jne
inc
add
push
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
in
inc
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
ljmp
mov
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
xor
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
out
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
sub
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
sub
out
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
xor
or
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
cmp
add
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
cli
and
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
addb
push
push
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
cmp
mov
in
mov
hlt
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
cmp
str
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
bound
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
or
inc
add
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
outsb
cmp
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
mov
inc
add
sbb
incl
sarb
mov
push
cmp
and
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
fsubl
inc
add
add
mov
and
cmp
jne
mov
mov
cmpsb
es
add
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
pop
cmp
decl
decl
adc
into
call
mov
fwait
ss
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
dec
inc
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
inc
ss
add
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
sbb
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
adc
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
call
mov
add
mov
in
ja
cmpsl
mov
lahf
add
mov
xchg
add
test
scas
clc
add
nop
add
iret
add
add
test
subl
add
xchg
add
mov
lods
aad
mov
cmpsb
test
add
add
push
push
push
push
call
add
mov
add
add
add
push
add
lea
mov
xchg
add
lods
clc
add
notl
into
out
std
add
add
jbe
xor
add
lods
add
push
jmp
subl
aam
pop
pop
add
pop
jae
rcll
add
fiaddl
add
popl
mov
lea
pop
popl
push
push
push
push
push
push
push
push
lea
push
push
lea
push
call
jmp
add
leave
jbe
add
rcl
into
jle
mov
mov
add
cmpsb
add
add
push
ja
add
clc
addl
arpl
add
xchg
pop
add
mov
jnp
add
mov
popa
add
mov
bound
pop
push
push
lea
push
push
push
push
call
int3
test
add
aam
add
add
fnstsw
xchg
nop
add
add
add
add
out
add
scas
xchg
add
add
into
add
pushf
je
hlt
lea
pop
push
push
push
push
push
lea
push
push
push
call
cltd
add
nop
mov
nop
out
imul
mov
add
loopne
add
lock
add
aad
fwait
add
movl
add
stos
lret
mov
add
add
loopne
add
fdivp
pop
mov
pop
je
add
add
add
add
add
add
mov
lea
pop
call
call
push
push
push
lea
push
lea
push
push
push
push
call
pop
mov
int3
scas
pop
in
push
add
add
add
mov
cltd
pusha
add
cmc
add
mov
mov
pop
add
in
arpl
add
fimuls
add
add
add
outsl
add
xchg
add
add
jp
pop
xchg
scas
add
pop
push
push
push
lea
push
lea
push
push
call
add
in
loopne
in
stc
add
negb
ljmp
fadds
add
add
add
add
add
add
fwait
add
add
addr16
call
push
push
push
call
lret
add
add
stos
add
jecxz
fiadds
cld
hlt
add
add
fwait
cmc
rol
scas
add
mov
add
add
popf
add
add
stos
add
ljmp
add
shrl
lds
mov
hlt
lea
pop
jmp
ret
push
lea
push
push
push
call
in
iret
jle
addr16
int
shll
xchg
add
sarl
icebp
add
out
add
scas
xchg
add
add
add
in
addl
in
pusha
push
add
jo
add
lds
add
add
in
shrl
enter
add
add
push
add
pop
lea
add
jge
mov
lea
pop
mov
push
push
call
lea
add
addr16
mull
add
xchg
cltd
popf
data16
jecxz
addl
add
jp
add
add
mov
cltd
jl
jns
clc
add
add
loope
add
icebp
subb
pop
aam
add
test
push
js
add
rolb
ret
popf
mov
add
loop
mov
lea
pop
mov
push
push
push
push
push
call
iret
mov
add
pop
call
add
add
in
faddl
pushf
int3
in
ja
push
roll
rcrl
roll
hlt
mov
mov
lea
pop
add
push
push
push
push
push
push
push
push
lea
push
call
jmp
loopne
int3
push
add
bound
call
lcall
add
pop
jae
add
int
fnstsw
mov
mov
fldt
mov
push
push
lods
lods
add
jnp
jge
enter
add
pop
add
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
push
int
add
lret
fwait
test
lods
mov
into
pop
mov
int3
pop
add
cwtl
leave
cmc
xchg
les
fcmovne
insb
rol
out
mov
roll
in
out
push
add
lahf
imul
mov
hlt
lea
pop
add
push
push
push
push
push
push
push
push
call
lods
add
lods
add
stos
add
add
testb
add
push
mov
stos
clc
jle
add
xchg
pop
add
nop
mov
popa
fiaddl
arpl
mov
in
add
and
pop
add
test
push
push
lea
push
lea
push
push
call
push
cwtl
mov
pop
lods
add
rcr
add
js
add
scas
mov
mov
add
add
add
add
mov
out
mov
sar
lods
pop
xchg
mov
add
movsl
pop
add
aam
xchg
jl
lcall
lea
pop
xor
push
lea
push
lea
push
push
push
call
xchg
add
int3
add
in
popa
pop
add
add
add
mov
add
mov
mov
jno
add
rolb
add
mov
mull
addb
mov
in
int3
faddl
add
scas
cwtl
add
add
insb
mov
jno
out
add
add
arpl
add
outsl
mov
test
pop
add
push
push
lea
sub
push
and
add
not
inc
sub
ror
add
pop
sub
sub
not
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
je
jmp
add
add
mov
add
jmp
add
inc
aad
addr16
bound
adcb
lods
add
jnp
mov
add
add
les
jne
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
loope
mov
add
fcomip
add
jbe
mov
pop
js
add
add
pop
add
add
lock
add
add
xchg
test
in
jnp
filds
out
int
mov
add
filds
add
jnp
fildl
add
mov
xchg
push
push
mov
add
mov
add
pushf
mov
xchg
jae
mov
lea
pop
call
push
lea
push
push
push
lea
push
call
arpl
add
ret
cli
add
mov
ljmp
mov
jge
loope
add
push
in
cmpsb
add
add
add
add
add
mov
mov
add
add
call
jnp
push
repnz
jp
clc
push
add
add
pop
mov
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
imul
add
add
loopw
add
testl
test
filds
lret
add
jae
leave
mov
jo
mov
add
mov
cmpsb
xchg
push
iret
mov
lea
pop
movl
push
push
push
push
push
push
push
push
call
sti
add
add
add
sahf
add
add
jmp
add
add
add
push
xchg
add
mov
add
add
xorl
push
insb
add
outsl
test
mov
xorl
nop
add
add
jns
add
add
add
add
out
add
push
push
add
imul
popa
and
inc
loopne
lea
push
push
push
push
push
call
mov
jo
add
mov
add
pop
sti
js
add
add
xchg
jo
add
add
add
add
xchg
add
lahf
stc
mov
add
cmc
mov
add
fldl
testb
cmc
mov
add
add
mov
arpl
fistpl
add
add
push
mov
add
cmpl
arpl
pop
push
push
push
lea
push
push
push
lea
push
push
call
add
roll
add
mov
mov
add
jmp
add
notb
mov
divl
in
add
pop
push
mov
roll
add
xchg
add
imul
aad
jae
add
cmpsl
add
mov
push
add
cmpsb
add
lods
rolb
add
mov
lea
pop
pushl
push
push
push
push
lea
push
push
call
mov
pop
add
popa
flds
jmp
add
mov
xchg
add
rcl
out
add
lds
pushf
jp
add
cld
fptan
ret
add
add
pop
pushl
push
push
lea
push
push
push
call
add
divb
xchg
add
flds
mov
add
addl
mov
xchg
out
shlb
enter
xchg
add
mov
add
lret
add
jb
xchg
mov
mov
jle
mov
pop
call
pushl
push
push
push
push
call
imulb
xchg
add
mov
imul
add
add
je
rolb
lcall
add
leave
addr16
jl
sahf
add
lods
lahf
add
imul
lea
pop
pushl
call
push
push
not
lea
lea
push
or
not
add
inc
lea
lea
not
sub
inc
pop
shl
add
sub
pop
push
lea
push
push
push
push
lea
push
call
add
add
std
lea
add
shll
add
jbe
clc
scas
add
mov
lret
jae
xlat
sarb
js
imul
pop
mov
add
add
add
mov
add
fdivrs
in
xchg
xchg
mov
sahf
sti
arpl
add
jae
mov
push
fdivrl
mov
cld
lea
pop
pushl
push
push
push
push
call
sahf
iret
lahf
lods
add
ficomps
movb
mov
add
pop
int
mov
mov
mov
test
add
fiaddl
sarb
stos
sbbl
nop
repnz
nop
add
add
mov
in
pushf
data16
clc
in
add
jecxz
jge
push
add
fldl
stos
xchg
imul
jbe
add
xchg
jo
filds
add
cmc
mov
lea
pop
call
push
push
push
shr
add
push
xor
add
lea
shr
inc
sub
sub
add
pop
ror
pop
push
push
push
push
push
push
push
push
push
call
xchg
int
add
stos
pop
js
push
add
add
add
popf
add
shr
scas
add
mov
add
add
lea
add
pusha
pop
add
jne
add
stos
add
lods
imul
lret
add
int
mov
lret
ret
fcoms
fadds
in
mov
lea
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
out
add
repnz
movsl
data16
push
add
add
clc
js
add
add
add
jmp
xchg
mov
notl
data16
mov
mov
in
testl
rorl
pop
call
mov
push
push
push
push
call
lock
push
mov
add
stos
mov
add
jo
add
jno
movsb
jle
mov
mov
lahf
jp
popa
icebp
add
pop
stos
push
enter
fiaddl
add
mov
aam
add
jb
mov
lcall
xorl
ret
add
pop
add
stc
hlt
push
mov
lea
pop
push
push
push
push
push
lea
push
push
call
add
popf
add
in
pusha
add
add
add
add
add
add
adcl
jle
in
lock
mov
add
xchg
movsb
add
loop
ret
movb
std
jl
add
mov
movsb
mov
add
add
aam
bound
pop
push
push
lea
push
push
lea
push
call
add
scas
add
xlat
add
xchg
pushf
add
insb
add
mov
cmpsl
jnp
add
add
add
negb
icebp
add
mov
add
repnz
test
add
adc
pop
in
add
push
push
call
add
roll
loopne
mov
mov
xchg
testb
add
popa
mov
add
push
scas
add
jl
je
add
pop
add
add
push
add
rcl
jmp
add
add
mov
lea
pop
add
push
lea
push
push
push
push
push
push
call
add
testb
add
std
push
add
add
add
add
add
pop
lea
mov
jns
out
add
pop
add
mulb
xchg
rcrl
fcoml
mov
add
lahf
jmp
aam
bound
add
push
push
push
push
push
push
call
add
xchg
cmc
add
js
movb
xchg
jno
jae
ja
jbe
rolb
xchg
push
xlat
fsubrl
cld
lret
pop
jge
jnp
movsb
repnz
add
add
arpl
cli
fnstcw
pop
shl
int3
lea
pop
mov
push
push
push
lea
push
push
call
xchg
sbbl
xchg
flds
sti
add
add
leave
jl
mov
add
into
out
xchg
jecxz
repnz
fsubrp
add
pop
add
add
add
fmull
xor
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xchg
popf
movb
fadds
mov
out
add
fmul
mov
lret
movsb
add
add
add
popl
add
scas
int
iret
mov
push
cmc
cmc
addr16
add
sti
add
int
cmpsb
ja
xchg
add
xchg
loope
ret
fildl
mov
lea
pop
add
push
lea
push
push
push
push
push
call
test
add
jne
add
jle
scas
push
add
addl
add
in
js
mov
jbe
xchg
loopne
add
fs
pushf
ja
mov
jp
les
jp
add
add
add
push
add
push
add
add
xchg
mov
outsl
scas
add
int3
int3
add
jle
mov
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
movsb
add
repnz
gs
add
add
pop
into
xchg
add
pop
test
add
loope
add
mov
add
stos
out
push
add
aad
jo
add
cwtl
push
cmpl
push
in
add
mov
jns
add
add
stos
push
add
add
add
repnz
arpl
lods
int
xchg
jnp
add
sti
mov
lea
pop
push
push
push
push
push
push
push
call
mov
add
add
add
int
jbe
add
pushf
add
insb
int3
add
add
cld
add
add
addb
mov
lea
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
lods
add
xchg
jge
ror
mul
push
imul
add
add
icebp
sarb
mov
push
add
add
aam
add
add
add
add
popf
mov
add
add
mov
lea
pop
xor
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
movsb
mov
jne
add
add
add
push
mov
insb
pop
enter
add
popf
add
add
mov
add
add
out
ja
xchg
les
nop
out
mov
lret
xchg
popa
flds
sti
mov
lea
pop
add
push
push
push
push
push
call
fcom
add
add
mov
add
ret
jp
gs
push
loop
add
sahf
mov
add
test
add
add
testl
arpl
add
pushf
sbbl
call
add
add
add
out
xchg
aad
insb
int3
pop
mov
bound
add
pop
push
push
push
push
push
push
push
push
call
stos
add
add
add
imulb
int
xchg
flds
out
add
add
cmpsb
pop
xchg
call
scas
add
add
add
in
into
add
add
cmc
add
test
add
push
int3
push
ret
add
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
call
mov
cmpsl
imul
in
add
mov
add
test
notb
add
jae
add
push
add
mov
pop
xchg
stos
add
pop
jle
add
lcall
push
push
mov
in
add
add
hlt
mov
lea
pop
xor
push
push
call
pushf
add
test
add
add
add
xchg
js
add
pop
add
call
mov
add
js
jp
add
lods
loop
xchg
add
pop
add
push
push
lea
push
lea
push
push
push
call
add
add
lock
push
add
add
mov
add
stos
mov
add
add
stos
in
pop
jbe
addb
stos
ret
pop
enter
push
in
add
jno
shll
add
jb
hlt
pusha
stos
int
les
add
add
add
add
popa
sbb
push
lea
push
lea
push
call
mov
sti
add
stos
add
add
pop
filds
add
enter
bound
add
fisubrl
add
xlat
add
popa
add
add
add
test
cli
into
lock
add
insb
pop
add
cltd
jb
add
add
adc
add
push
add
mov
lea
pop
mov
xor
push
lea
push
push
push
call
mov
je
mov
jo
shlb
fadds
js
push
clc
add
push
jno
push
fadds
pushf
shlb
aam
add
filds
add
mov
add
mov
jmp
xchg
mov
out
cli
push
add
arpl
pop
sub
pop
push
lea
push
push
lea
push
push
push
call
add
cmc
rcr
add
cmpsb
lods
add
ljmp
mov
jnp
mov
jae
add
add
clc
addr16
xchg
add
add
add
pop
rep
push
lea
push
lea
push
push
lea
push
push
push
push
call
fwait
xchg
jle
imul
add
lret
add
test
add
add
lds
rorw
xchg
int
push
add
xchg
add
xlat
add
mov
lea
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
loop
aad
mov
mov
xlat
lcall
add
add
mov
add
add
add
cmpsl
imul
add
add
lods
mov
movsl
add
add
jns
loope
add
int3
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
loopne
xchg
add
mov
sahf
pop
push
mov
arpl
in
push
add
jo
gs
leave
fsubl
mov
add
shlb
in
mov
push
pop
fs
mov
data16
filds
movsb
aam
lods
push
idivl
add
lea
pop
add
push
shr
xor
add
not
pop
add
push
lea
shr
add
pop
add
mov
push
push
push
push
push
push
push
push
call
mov
movsb
mov
add
ja
mov
mov
rclb
jl
pop
mov
bound
fiadds
sti
cmpsl
into
sahf
cld
add
fs
arpl
mov
add
sti
movsl
jnp
add
mov
lea
pop
xor
push
lea
push
push
push
push
push
push
push
push
push
call
push
mov
movsw
addr16
add
cmpsb
fcmovnbe
lods
add
loopne
movsb
add
cwtl
add
add
fdiv
mov
add
pop
mov
jbe
addl
add
mov
jmp
add
stc
jle
add
mov
sub
les
add
push
not
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
cld
js
xchg
out
les
add
add
add
cwtl
icebp
into
add
xlat
in
mov
outsl
add
add
aam
push
in
add
add
scas
add
add
add
test
add
ljmp
ror
jmp
sahf
add
pop
xor
push
push
call
rcrl
push
sbbl
xchg
adc
push
add
mov
clc
xorl
mov
movsb
jo
lds
add
mov
data16
mov
ljmp
add
add
pop
add
push
sub
not
pop
mov
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
data16
add
add
add
add
out
mov
pop
mov
xlat
pop
add
jbe
fsubl
addl
add
add
mov
call
mov
lea
pop
xor
push
push
call
push
add
jp
add
push
pop
add
mov
push
mov
push
push
mov
mov
mov
add
add
push
add
jge
addb
add
arpl
imul
sbb
push
add
add
mov
add
ffree
rorl
pop
add
push
shl
sub
rol
pop
add
add
push
push
push
push
push
push
push
lea
push
push
push
call
in
xchg
mov
mov
imul
add
add
jbe
add
rolb
mov
push
mov
addb
add
xchg
pusha
mov
xchg
pop
add
push
add
add
xchg
in
add
ret
addl
add
fmull
rclb
add
add
add
popa
mov
pop
mov
push
push
add
sub
push
or
inc
add
rol
rol
shr
sub
shr
lea
add
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
xchg
mov
in
scas
add
add
sahf
loope
pusha
add
fiadds
add
loopne
stc
mov
loopne
popl
lods
mov
fistpll
add
add
add
lds
test
push
add
add
lds
std
jp
pop
lret
aam
add
add
cltd
sahf
add
add
lock
add
sbb
add
pop
pushl
push
lea
push
push
push
push
call
jge
add
fcmovne
add
add
jno
fs
add
pop
int
pushf
rcrb
jge
popl
pop
add
xchg
stc
clc
add
xchg
mov
add
jb
bound
fisubrs
jge
add
pusha
add
add
int
pop
movsl
add
fisubrs
mov
add
adc
call
push
push
call
jecxz
add
add
mov
popl
push
jns
add
testb
mov
cli
xchg
add
imul
lret
imul
add
jae
add
loopne
cmc
push
ja
add
add
cmc
mov
add
add
xchg
out
mov
add
mov
mov
lea
pop
push
push
push
dec
xor
push
sub
add
not
dec
sub
shl
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
lahf
lock
in
add
add
fldl
add
rcrb
mov
rolb
sbb
sbbl
jmp
jb
iret
add
add
add
mov
bnd
add
aam
bound
push
push
rol
dec
shr
shl
pop
push
push
not
inc
pop
call
push
push
push
lea
push
push
call
imul
add
add
add
add
imul
cmc
add
add
pop
add
add
movl
fiaddl
cmc
add
call
mov
ret
lds
add
mov
adc
mov
push
push
push
call
jbe
add
call
adcl
ljmp
add
add
arpl
cmpsb
movsb
add
ljmp
push
out
push
lds
add
nop
add
mov
lea
pop
push
mov
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
loopne
add
mov
push
add
add
add
add
add
add
add
call
mov
clc
movsl
lahf
add
les
add
add
add
aad
jne
clc
mov
add
xchg
push
fadds
add
xchg
xchg
xchg
pop
add
add
push
add
pop
add
push
push
push
push
push
call
jp
mov
mov
mov
push
arpl
cld
jne
mov
add
add
xchg
add
add
xchg
cmpsb
lock
mov
fdivr
add
mov
add
movb
add
add
xlat
mov
jge
ja
add
jbe
imul
add
pop
mov
lea
pop
mov
push
push
push
push
push
push
call
arpl
cmc
push
imul
fs
jb
mov
addl
lea
cli
lahf
mov
addb
jae
xlat
add
push
xchg
add
push
add
fdivrl
add
add
add
mov
add
clc
mov
add
add
mov
lea
pop
xor
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
mov
add
add
cltd
repnz
mov
filds
mov
jae
add
add
lds
ret
imul
add
add
add
mov
mov
lea
pop
add
push
inc
shl
lea
pop
add
push
push
push
call
scas
out
pop
testl
loopne
push
mov
add
faddl
stos
add
add
les
fadds
add
pusha
fs
push
arpl
add
jmp
xlat
call
insb
js
add
xchg
add
add
mov
mov
in
in
addr16
lea
pop
push
push
push
push
lea
push
push
push
call
xchg
lods
out
add
sahf
movb
add
add
jae
mov
add
pop
xchg
add
push
stc
add
cwtl
add
add
sahf
fdivl
add
cmpsl
add
lahf
add
add
out
mov
mov
push
pusha
pop
mov
les
inc
adc
test
push
push
push
push
lea
push
push
push
call
cld
arpl
add
add
add
testb
mov
add
clc
add
pop
popf
pop
iret
popl
mov
jge
test
stc
push
cmc
add
add
fiadds
add
scas
add
add
add
icebp
add
out
aad
add
fistl
adc
enter
add
pop
add
add
bound
mov
lea
pop
xor
push
lea
push
lea
push
push
push
push
push
push
call
je
lods
js
add
add
add
pop
xchg
add
roll
mov
out
jbe
int
add
add
jo
shlw
pop
mov
add
add
add
add
pop
mov
arpl
add
add
movsl
popa
mov
cld
lea
pop
add
push
push
push
push
push
lea
push
call
add
add
fistps
mov
jmp
add
mov
mov
mov
pop
scas
leave
add
jge
cld
nop
jae
mov
rol
pop
stos
jb
incb
addl
xchg
ljmp
mov
lea
aad
js
idivl
add
add
add
add
mov
lea
pop
add
push
push
push
push
call
mov
mov
mov
add
jmp
int3
xchg
lds
add
popf
popa
add
add
add
add
fwait
xchg
loope
mov
add
jb
in
out
add
add
add
cltd
add
add
loop
add
out
cmpb
push
aad
sahf
data16
cltd
pushf
add
add
cld
lea
pop
pop
push
lea
push
push
push
push
push
push
push
call
addb
mov
add
add
mul
jecxz
add
insb
add
add
add
stc
add
fwait
add
into
stc
add
add
cld
add
cmpsl
add
add
shlb
add
lods
push
out
cmc
jbe
test
add
add
and
dec
and
pop
jae
push
push
push
call
movsb
arpl
push
mov
mov
bound
push
pushf
push
push
loope
xchg
mov
mov
data16
xlat
outsl
add
add
mov
cli
shlb
push
add
add
push
cmc
add
pop
add
push
notl
add
add
add
hlt
add
aad
add
mov
or
xor
push
push
call
add
int
pop
push
add
mov
mov
addb
push
add
add
xchg
add
add
add
nop
mov
pop
fldl
add
movsl
int
gs
add
imul
mov
mov
lcall
fwait
lods
add
jmp
aam
bound
pop
add
push
not
ror
pop
rep
mov
push
push
lea
push
lea
push
push
push
push
call
icebp
xchg
pop
add
xchg
mov
add
movl
add
add
add
push
add
add
add
push
jbe
lds
std
test
lret
add
js
icebp
push
add
add
mov
add
test
add
add
lods
js
add
add
add
arpl
popa
mov
lea
pop
xor
push
push
push
lea
push
call
add
mov
out
jmp
cwtl
lahf
add
add
push
xlat
pop
jecxz
push
ja
add
xchg
push
mov
add
add
add
push
mov
xchg
add
add
jae
add
add
add
cmpsl
pop
js
cld
lea
pop
add
push
shr
ror
pop
or
je
push
lea
add
pop
mov
push
push
push
push
push
push
push
call
iret
popa
add
add
fst
out
add
xchg
fadds
rcl
add
mov
add
jge
add
aad
add
push
scas
xchg
mov
pusha
add
add
add
jecxz
add
mov
jb
add
add
mov
lea
pop
xor
push
lea
push
push
push
push
call
add
add
mov
mov
mov
add
add
add
add
add
mov
mov
add
add
in
fadd
add
jo
add
mov
add
add
sti
fcomp
in
stos
jb
mov
pop
imul
data16
add
push
rol
pop
mov
push
push
push
call
idiv
movsl
add
ljmp
lods
add
negb
movsl
add
lods
pop
cmc
add
int3
pop
jp
arpl
add
add
iret
mov
scas
pop
xchg
in
pop
int3
add
add
mov
jbe
mov
lea
pop
xor
push
lea
push
lea
push
call
fildl
jne
add
filds
add
xchg
loope
add
fdivs
add
add
outsl
xchg
add
jecxz
imul
add
notl
add
add
xchg
scas
aam
aam
in
push
add
jns
push
add
add
add
push
mov
addl
xchg
mov
lea
pop
add
push
add
lea
lea
pop
add
push
sub
pop
add
push
dec
sub
add
pop
push
push
push
lea
push
push
push
call
divb
out
mov
pop
add
add
add
outsl
jecxz
add
addl
js
add
jle
fdivrs
mov
lods
int
jns
add
pop
mov
xor
push
push
push
call
scas
bound
add
add
add
xchg
add
add
xchg
add
pop
xchg
imul
ja
add
add
add
add
add
add
add
add
add
mov
popl
add
clc
ljmp
add
add
loop
add
add
xchg
add
pop
bound
pop
add
pop
push
inc
sub
pop
rep
push
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
add
test
add
pop
filds
add
addr16
add
add
add
push
jmp
xchg
mov
add
add
cltd
add
add
flds
in
nop
mov
mov
mov
aam
mov
rorb
xor
push
push
lea
push
push
push
lea
push
push
call
add
jecxz
add
test
int
lods
jne
mov
icebp
lahf
mov
imul
fdivp
add
roll
add
add
add
add
mov
test
push
add
jno
xchg
lock
pop
add
rolb
add
sti
fadds
fcmovnbe
add
add
add
js
mov
add
arpl
roll
sahf
rorb
pop
add
push
push
push
push
push
push
lea
push
call
mov
pop
fnsave
popa
mov
mov
ljmp
pusha
mov
pop
add
add
movw
incb
cmpsb
lea
jns
add
mov
push
ljmp
mov
add
pop
add
xlat
ljmp
repnz
add
add
add
add
mov
add
in
test
ret
add
aam
bound
or
je
push
push
call
mov
add
add
mov
iret
call
push
add
push
add
cmpb
mov
mov
faddl
sub
add
mov
addb
hlt
lea
pop
mov
push
lea
rol
shr
pop
add
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
rol
add
xchg
xlat
add
lods
mov
jne
lcall
mov
push
shrb
add
add
mov
hlt
cmc
add
std
faddl
bound
add
rcrb
ja
fwait
movsb
idivl
add
popf
mov
lahf
push
add
jle
lods
data16
outsl
add
hlt
lea
pop
add
push
lea
push
push
call
movsl
lods
mov
add
add
add
push
add
clc
add
push
fistps
add
mov
add
loope
add
add
mov
jle
add
jb
add
mov
pop
add
add
add
cmpl
add
add
add
pop
add
add
add
pop
rep
push
inc
xor
pop
pop
push
push
not
push
and
add
sub
sub
dec
inc
ror
pop
shl
sub
rol
pop
push
push
push
push
push
push
push
push
call
cli
add
add
repnz
jno
rolb
push
mov
fiadds
imul
jb
push
stos
add
mov
pop
adc
xlat
mov
add
mov
jmp
xchg
add
xchg
add
movsl
clc
add
pop
pop
mov
push
xor
pop
mov
push
push
push
lea
push
push
push
push
lea
push
call
add
cmc
mov
add
or
add
pop
pop
test
scas
fsubl
add
add
mov
add
insb
add
fldl
add
push
add
not
xlat
add
add
pop
addl
add
add
add
mov
add
mov
into
fadds
in
jnp
add
lea
pop
mov
push
ror
rol
add
pop
jmp
push
inc
xor
pop
push
push
lea
push
push
push
push
call
mov
add
add
add
mov
icebp
add
in
mov
add
add
negl
test
stos
pushf
fstl
add
les
clc
add
add
shrl
add
lods
xchg
jl
add
jmp
mov
lea
pop
mov
add
push
rol
sub
pop
push
push
push
push
lea
push
push
call
add
test
imul
mov
cld
jne
push
int
add
icebp
jae
icebp
add
add
sti
jae
hlt
mov
cmpsb
add
pop
add
lret
add
add
scas
add
pop
mov
add
add
add
add
aad
add
mov
lea
pop
push
push
lea
ror
not
pop
push
push
lea
shl
xor
pop
mov
push
ror
add
xor
pop
pop
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
cwtl
push
add
add
mov
out
cwtl
jb
popa
pop
add
sarl
jns
pop
ficompl
pop
arpl
jo
in
stos
jnp
add
jne
add
mov
add
push
mov
jbe
fdivs
rclb
lret
test
add
lea
pop
pop
pop
push
push
lea
push
call
clc
add
add
push
add
add
out
xchg
add
jae
add
in
add
xchg
test
mov
add
add
add
fadds
mov
mov
add
in
xlat
mov
push
push
jo
arpl
pop
xchg
add
add
add
push
lds
xchg
jmp
xorl
les
push
push
push
push
lea
push
push
push
call
mov
imul
enter
pusha
add
scas
add
call
mov
mov
imul
add
mov
std
cli
in
add
add
cmpsl
add
add
scas
cwtl
mov
je
add
add
add
popl
insb
out
lods
add
add
add
add
mov
lea
pop
ret
push
push
lea
push
lea
push
call
add
add
pushf
mov
fcompl
xlat
add
cld
xchg
sti
add
xchg
add
pop
fcoml
jb
push
add
add
mov
push
add
addb
hlt
loop
rorb
sti
std
xchg
add
pop
mov
add
mov
lea
pop
push
mov
push
rol
add
pop
add
push
inc
sub
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
pop
jecxz
stc
int
push
int3
fildll
mov
add
add
jbe
add
fildl
add
int
movb
pusha
pushf
roll
xchg
int
test
test
add
cmpsl
jne
mov
push
pop
mov
rcr
int
fmull
push
shl
add
shl
rol
pop
push
push
add
ror
pop
push
movl
push
push
lea
push
call
add
add
fistpll
out
rcrl
lahf
add
add
lret
mov
addl
call
movsl
faddl
pushf
ja
add
add
rcrl
add
in
add
fwait
mov
xchg
test
add
ljmp
add
aam
repnz
pop
addl
push
push
push
push
call
loope
add
pop
popa
imul
jge
pop
add
mov
add
incb
rclb
out
push
fbstp
sti
add
jl
jecxz
jno
jmp
add
clc
je
add
pusha
fiadds
fildl
add
add
add
add
in
out
lret
add
lea
pop
test
je
push
push
push
push
call
pop
add
shl
jle
jmp
test
add
add
insb
roll
add
add
add
add
pop
clc
add
sti
add
test
jle
xchg
movsb
mov
roll
mov
test
cmpl
enter
mov
jo
push
xchg
fmull
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
xchg
add
add
add
int3
mov
jp
mov
add
add
mov
movsl
call
pushf
add
add
add
add
scas
jbe
mov
add
addr16
enter
mov
pushf
in
mov
mov
push
leave
pop
add
add
popa
xchg
mov
sub
pop
push
shr
xor
add
pop
pop
push
push
push
call
fs
imulb
rcrb
add
jge
mov
in
jl
pop
xchg
add
mov
mov
push
add
mov
lea
pop
pop
push
sub
pop
leave
push
shr
add
pop
ret
push
push
push
call
mov
add
iret
add
add
add
addl
jp
add
ret
add
add
xchg
fstps
rolb
add
add
enter
addr16
jnp
mov
xchg
divb
rorb
or
push
push
push
push
push
call
add
cli
add
add
cmpsl
add
mov
mov
lock
int
test
jnp
jl
add
add
clc
xchg
add
add
add
add
lods
add
jecxz
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
push
add
add
jge
add
cwtl
add
rolb
sti
add
mov
add
call
add
add
jmp
add
mov
jb
add
add
mov
add
push
insb
jmp
aad
add
in
add
mov
pusha
sub
cld
push
push
push
push
push
push
push
push
push
push
push
call
scas
add
jecxz
mov
mov
sahf
add
fildl
stc
add
lret
hlt
lds
add
mov
mov
leave
lea
add
add
movsl
add
je
add
add
aad
jge
add
add
stos
add
xchg
add
add
cld
jo
in
add
out
ljmp
insb
add
pop
push
push
add
inc
pop
push
push
push
lea
push
push
push
lea
push
call
add
xchg
mov
mov
pop
add
lret
fisubrl
in
xorl
imul
imul
add
add
add
pushf
lahf
icebp
push
out
add
sbbl
add
add
pop
js
mov
push
lea
jns
mov
popf
add
cmpl
lea
pop
testl
push
pop
addl
push
push
lea
push
push
push
push
push
lea
push
call
ret
mov
lds
lahf
pop
test
pushf
add
les
mov
jb
mov
add
out
cld
xchg
jp
cli
in
bound
add
add
add
add
add
std
scas
icebp
in
lea
sub
cwtl
add
add
pop
call
push
push
push
push
push
push
lea
push
push
call
add
pop
cmc
testb
and
int
fwait
jnp
add
cld
push
mov
add
gs
int
add
int3
bound
add
add
jmp
out
mov
add
push
mov
bound
add
add
pop
mov
pushl
push
push
push
push
lea
push
push
push
call
jl
std
add
add
stos
add
mov
cld
push
add
add
mov
mov
stos
cmpsb
add
add
add
out
in
in
pop
add
add
movsb
out
add
add
stos
enter
add
cmpsl
add
xlat
hlt
mov
lea
pop
push
push
ror
add
pop
push
call
push
lea
push
push
push
lea
push
push
push
call
pusha
mov
stos
clc
add
fwait
mov
jbe
jbe
out
add
roll
mov
add
loope
fwait
mov
stc
add
ljmp
xorb
mov
stos
loope
hlt
add
add
add
xchg
clc
mov
lea
pop
cmpl
jne
push
lea
push
push
push
lea
push
call
pusha
popa
in
test
cwtl
add
stos
mov
cld
test
add
lds
add
mov
outsl
pop
nop
add
pop
fimull
mov
addb
add
push
add
add
mov
jns
cltd
push
cmpsb
fiadds
add
add
add
add
mov
lea
pop
pop
push
push
push
push
push
push
push
lea
push
call
mov
js
roll
lret
add
jl
jae
xchg
push
xchg
add
xchg
mov
aad
cmc
mov
add
int
mov
orl
shrl
add
mov
mov
mov
lea
pop
pop
pop
push
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
addl
into
rolb
mov
icebp
leave
mov
add
icebp
add
add
cmpsl
stos
mov
lahf
add
add
mov
mov
incb
test
scas
add
add
push
add
imul
jmp
add
icebp
lds
add
popa
add
sti
icebp
xorb
rolb
add
in
imul
pop
pusha
add
jmp
mov
lea
pop
leave
ret
push
push
call
rol
aam
bound
rcl
add
lds
in
xchg
xchg
mov
add
test
add
add
add
xchg
add
add
add
add
push
lret
movsb
in
push
aad
cli
out
add
pop
push
mov
push
lea
push
push
call
jl
add
add
jmp
std
arpl
add
jne
add
movb
cli
shl
add
out
jnp
xorb
cld
mov
push
add
add
add
lods
add
rolb
out
push
outsl
add
clc
add
add
lret
push
stos
add
fldl
ja
add
add
add
rorb
add
push
not
rol
xor
pop
push
push
sub
add
sub
rol
pop
push
push
push
push
push
push
push
push
lea
push
call
push
call
mov
add
mov
stos
jnp
xchg
add
out
add
lds
mov
sahf
test
ret
fldl
add
enter
add
jle
mov
or
add
add
jl
in
add
add
lcall
xchg
mov
mov
mov
push
add
add
pop
push
push
push
push
lea
push
call
movsb
shll
mov
push
add
iret
cmpsl
add
add
add
lods
add
imul
add
push
in
add
add
je
push
addb
add
test
mov
add
nop
mov
mov
iret
lea
add
mov
add
aam
bound
pop
push
push
add
sub
pop
movl
push
push
lea
push
push
push
lea
push
lea
push
call
mov
call
pop
loop
pushf
fadds
add
mov
jl
push
add
add
mov
popa
add
add
aad
fidivrs
iret
push
mov
add
adc
add
ret
ficomps
push
add
add
scas
fs
add
test
add
add
push
mov
lea
pop
call
push
push
push
push
push
push
lea
push
call
ljmp
out
add
add
mov
pop
mov
add
mov
add
push
mov
push
jecxz
mov
add
mov
lahf
add
jmp
mov
into
lea
ret
cltd
test
add
add
add
push
pop
roll
xchg
mov
jne
add
add
pop
pop
add
add
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
jae
push
enter
add
mov
aam
mov
add
sbbb
mov
into
add
mov
add
faddl
add
add
add
add
je
rolb
lahf
cmc
mov
pusha
push
add
in
mov
jecxz
add
in
add
add
add
les
add
jns
mov
xchg
add
mov
lea
pop
call
push
push
lea
push
push
push
push
call
add
test
add
test
mov
add
enter
popa
add
add
fwait
stos
lahf
mov
pop
mov
mov
add
mov
add
jbe
hlt
jl
xchg
mov
lea
pop
subl
push
lea
push
push
call
add
mov
sti
pop
sti
add
pop
sahf
add
pop
ljmp
mov
mov
add
add
add
add
testl
add
pop
add
jmp
mov
lea
pop
cmpl
jne
push
push
push
push
push
push
push
push
call
jne
bound
add
frstor
je
popl
xchg
xchg
movsl
movsb
add
popa
add
lods
cmc
xchg
add
popa
add
add
pop
mov
test
add
loop
in
jno
jmp
repnz
add
mov
fwait
repnz
jns
mov
mov
add
push
add
lea
lret
addb
push
xorb
lea
pop
pop
push
add
not
pop
pop
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
insb
mov
add
addb
out
add
add
fs
add
push
add
shrb
rolb
aam
jge
mov
outsl
add
movsl
mov
cltd
cwtl
ret
lods
add
mul
add
pop
imul
add
mov
jle
add
add
je
jle
add
lahf
add
mov
and
pop
push
inc
pop
leave
push
not
pop
ret
push
lea
not
xor
pop
push
push
push
push
push
lea
push
push
push
push
push
call
pop
add
add
in
add
popf
add
add
xchg
outsl
add
push
imul
add
mov
add
push
add
mov
lea
pop
mov
add
push
shl
pop
push
push
add
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
outsl
add
test
popa
lea
mov
testl
icebp
outsl
add
roll
add
test
add
lds
cmc
add
jl
add
addl
add
test
addr16
pusha
add
add
loop
push
add
or
add
add
lea
pop
push
push
rol
sub
pop
mov
push
shr
sub
pop
lea
sub
push
lea
shl
add
inc
pop
mov
push
lea
push
call
iret
rolb
push
add
xorb
add
fcoms
add
jge
xchg
fwait
add
add
add
imul
add
add
add
add
add
lret
imul
mov
int3
lea
pop
shr
push
add
shl
ror
pop
add
push
lea
pop
mov
push
push
call
mov
int3
cmc
lea
lret
add
lock
stos
cmp
pop
add
out
mov
movsb
pop
aam
add
add
pop
jnp
mov
fsin
stc
dec
rolb
mov
sub
les
mov
lea
pop
mov
push
ror
pop
add
add
push
add
pop
mov
push
lea
push
lea
push
push
push
lea
push
call
ljmp
add
sarb
into
addl
int
add
add
pop
push
add
mov
pop
add
jno
sahf
add
addr16
clc
add
stos
push
add
cmc
add
push
add
icebp
add
addb
addr16
add
add
push
scas
popa
mov
lea
pop
mov
push
ror
not
add
pop
cmp
jne
push
push
push
lea
push
push
push
push
lea
push
push
push
call
test
add
jno
fs
pop
popa
pusha
add
mov
add
add
sahf
pop
fwait
add
mov
jae
add
fdivl
add
stos
add
mov
stc
add
sar
pop
add
in
add
jbe
mov
test
mov
lea
pop
cmp
jne
push
shl
shr
ror
pop
mov
movl
push
shl
dec
pop
jmp
mov
push
push
push
push
push
call
add
add
add
jb
add
xchg
mov
add
cli
pop
add
in
imul
add
pop
mov
jne
xchg
add
cli
sahf
std
lods
add
mov
mov
mov
leave
roll
mov
push
loop
push
mov
add
jnp
jle
mov
lea
pop
mov
push
add
not
pop
sub
jne
push
inc
pop
mov
push
lea
push
push
push
push
push
push
push
call
mov
add
add
iret
add
mov
pop
shrb
add
push
fiaddl
testl
add
add
mov
mov
lahf
into
sbbl
enter
jmp
add
mov
and
add
add
push
push
push
call
ljmp
add
shr
lret
add
jge
xchg
pop
lcall
scas
add
add
add
add
add
mov
add
rclb
add
mov
jae
hlt
add
test
pop
jmp
mov
push
push
push
push
push
lea
push
call
add
jne
mov
jns
loop
push
mov
clc
lods
pop
std
mov
xchg
add
jno
xchg
push
mov
sahf
add
add
add
add
add
add
add
movsb
add
arpl
into
jmp
idiv
lahf
add
lcall
add
nop
fstpt
add
jmp
jb
add
sbb
nop
mov
add
cmp
jne
push
dec
shr
rol
pop
mov
push
push
push
push
push
push
push
call
add
gs
add
add
mov
add
add
push
add
add
mov
iret
pop
add
int
add
add
ror
mov
add
add
pop
movl
push
not
pop
jmp
push
rol
pop
mov
push
dec
xor
xor
sub
pop
cmpw
jne
mov
push
push
push
lea
push
push
call
mov
add
jmp
mov
stos
imul
mov
fwait
add
pusha
add
add
mov
add
add
add
jne
add
lret
scas
cltd
push
or
add
imul
add
test
std
mov
test
jnp
xchg
add
mov
test
mov
mov
add
loop
add
push
call
adc
movl
push
lea
push
lea
push
push
push
lea
push
call
add
cwtl
addb
pop
add
pop
repnz
jge
icebp
add
jae
jle
add
arpl
jbe
movsb
leave
add
push
add
xchg
xchg
add
jmp
rcr
add
mov
lea
pop
jmp
pushl
push
sub
add
add
pop
pop
mov
push
push
push
push
push
call
sti
mov
add
nop
add
add
add
pop
add
add
jmp
int3
push
push
jl
pop
push
roll
mov
lods
cltd
ljmp
scas
add
lret
lahf
in
add
pop
add
pop
mov
add
lock
jae
mov
jmp
mov
mov
lea
pop
mov
push
push
push
push
push
push
push
push
call
add
push
add
out
jp
iret
lea
add
ret
aad
add
jmp
int
clc
add
xlat
mov
loope
lahf
lahf
add
xchg
push
add
push
xchg
add
test
add
add
jmp
push
cmpsb
push
add
add
add
js
pop
add
mov
xchg
aad
add
push
add
xchg
out
lret
mov
rorl
and
push
or
idivl
not
push
or
not
add
dec
sub
add
pop
inc
pop
push
lea
push
call
mov
pop
add
cmpb
out
add
add
cmpsl
flds
in
add
add
fistpll
add
pop
in
fwait
mov
mov
fbld
loope
mov
jmp
add
add
insb
negb
add
mov
lea
pop
push
push
inc
pop
call
cmpl
je
push
push
add
shr
push
or
inc
add
dec
rol
sub
sub
add
add
sub
sub
pop
add
add
pop
push
push
push
lea
push
push
push
push
push
push
push
call
jbe
add
lcall
notb
mov
lods
pop
add
mov
pushf
pop
add
mov
jl
sti
add
subb
mov
add
lods
loope
mov
lea
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
push
in
gs
popa
add
add
jge
push
mov
push
add
xchg
movsl
add
pushf
add
in
in
fistl
jns
mov
ficoms
jbe
push
add
jb
fadds
add
pop
shr
add
out
add
scas
push
fstps
jle
lods
jecxz
add
add
sub
add
add
sti
mov
lea
pop
call
push
push
push
push
call
xlat
aad
add
jbe
pusha
add
mov
ljmp
movsl
roll
jecxz
js
add
ja
mov
add
jno
add
add
les
js
int3
fldz
ret
decb
add
push
push
shl
push
or
inc
add
shl
rol
dec
sub
add
pop
inc
sub
pop
push
ror
rol
pop
push
push
ror
add
sub
pop
call
cmpl
je
push
push
xor
dec
sub
push
sub
add
xor
inc
sub
not
dec
shr
pop
sub
dec
pop
push
not
lea
sub
pop
push
push
not
add
pop
call
cmpl
je
push
push
sub
lea
lea
shr
push
and
add
add
add
sub
rol
rol
shr
shl
pop
not
pop
push
push
lea
push
push
push
push
push
call
add
aam
jo
mov
mov
add
jmp
pop
add
mov
movsb
mov
add
cmpsl
mov
jns
add
push
xchg
outsl
fstl
movsb
mov
lea
pop
push
push
sub
shl
pop
call
push
push
call
shr
cmpsb
add
xlat
lods
add
add
add
hlt
lds
lcall
ret
add
ljmp
shrb
lods
add
pop
in
add
repnz
fists
mov
add
mov
lea
pop
cmpl
je
push
push
inc
sub
dec
xor
push
or
inc
add
sub
rol
add
shl
sub
shr
lea
pop
shl
rol
pop
push
rol
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
add
mov
out
add
js
xchg
jae
add
jno
jb
add
mov
imul
add
push
adcb
jae
pop
add
pop
call
push
push
push
push
push
call
mov
loop
add
pop
xchg
out
add
aad
rolb
add
add
push
fldcw
rorb
mov
fisttps
mov
lea
pop
cmpl
je
push
push
xor
push
sub
add
inc
rol
not
sub
add
shr
sub
xor
pop
lea
xor
ror
pop
push
push
lea
push
push
call
add
std
lcall
les
lock
add
xchg
xchg
add
into
add
push
add
add
xchg
add
add
test
pusha
les
mov
add
orb
push
push
lea
push
push
push
push
lea
push
push
push
push
call
xchg
push
mov
fbld
mov
test
add
add
add
jmp
add
into
lock
xchg
stos
aad
push
into
scas
add
xchg
lods
pop
add
iret
pop
mov
mov
add
add
add
in
add
pop
call
push
dec
pop
cmpl
je
push
push
ror
shr
shr
push
and
add
xor
sub
not
pop
add
lea
pop
push
push
push
push
lea
push
lea
push
lea
push
call
mov
outsl
mov
icebp
add
test
cmpsl
test
add
pusha
add
call
xchg
ret
pop
add
data16
fisubrs
push
test
push
add
add
push
add
cld
lea
pop
push
push
inc
not
shl
sub
pop
call
push
push
push
push
lea
push
lea
push
push
call
jo
add
lods
pop
mov
lahf
ljmp
imul
xchg
add
add
mov
add
add
jecxz
push
add
addl
pop
add
add
andb
popa
lods
add
add
jne
add
je
js
ficoml
add
mov
lea
pop
cmpl
je
push
push
inc
push
sub
add
add
sub
sub
rol
inc
pop
dec
xor
pop
push
push
push
push
push
push
push
lea
push
push
call
in
add
movsb
out
pop
out
loopne
add
jmp
jnp
add
add
mov
add
pop
roll
out
jno
xchg
add
pop
add
mov
push
pop
xchg
mov
pop
leave
add
out
leave
cmpsl
std
xchg
mov
cwtl
push
add
adcb
lods
in
fistps
mov
lea
pop
push
push
push
lea
push
push
call
cmpsl
mull
add
jle
stos
add
add
add
mov
in
icebp
mov
push
add
push
insb
mull
add
cmp
add
sarb
lea
pop
call
cmpl
je
push
push
add
lea
sub
push
and
add
not
sub
sub
sub
inc
pop
sub
dec
add
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
cltd
pusha
add
add
add
sarl
lods
xchg
test
jo
add
test
mov
pop
add
arpl
movsb
add
add
stos
insb
add
add
sti
jno
add
push
xchg
mov
test
shl
loopne
add
pusha
add
sti
add
add
data16
add
add
fmull
call
push
sub
dec
pop
cmpl
je
push
push
rol
not
push
push
pop
add
rol
ror
sub
ror
dec
pop
shr
add
pop
push
shr
pop
push
call
push
push
push
call
mov
add
lock
fistl
add
add
add
add
test
aad
add
hlt
popl
add
test
fadds
scas
out
lret
bound
jge
jl
push
iret
pushf
add
lahf
fstps
add
ret
xchg
add
add
mov
cmpsb
fiadds
add
mov
lea
pop
cmpl
je
push
push
not
ror
push
xor
add
rol
sub
xor
pop
add
dec
xor
lea
pop
push
dec
pop
push
call
push
push
push
push
push
push
push
push
call
add
js
add
sti
mov
pop
add
in
add
cmpsl
add
jb
add
addb
add
add
mov
test
cld
stos
pop
add
cltd
lcall
addr16
bound
pop
cmpl
je
push
push
rol
not
push
sub
add
sub
add
sub
dec
xor
xor
pop
shl
shl
pop
push
push
push
lea
push
push
push
push
call
incb
stc
leave
add
add
shrb
add
add
add
add
xchg
cmpsl
add
add
mov
stc
int
aad
popf
add
lahf
add
push
add
add
idivl
int
nop
mov
xchg
lcall
lret
pop
cli
jbe
mov
int3
lea
pop
push
call
push
push
push
push
lea
push
call
push
add
add
jl
call
imul
mov
xchg
mov
add
add
mov
mov
jb
in
add
xchg
rcrb
cmpsb
ret
mov
add
mov
lea
pop
cmpl
jne
push
push
lea
push
push
lea
push
push
push
push
call
add
jbe
add
add
out
jno
cmpsl
push
jne
add
stc
add
add
cwtl
jp
push
test
jnp
lret
aad
idiv
xchg
bound
add
add
jns
add
xlat
push
add
mov
xchg
test
fxch
pushf
xchg
into
loopne
xchg
mov
add
jecxz
add
pop
mov
push
push
lea
push
lea
push
lea
push
push
call
push
jae
roll
add
lret
jb
jbe
test
add
mov
pop
push
add
lcall
add
add
jmp
mov
clc
add
outsl
add
mov
cmpsl
loopne
xchg
pop
movl
jmp
push
sub
add
pop
xor
push
dec
xor
sub
pop
pop
push
push
push
push
call
call
stc
mov
scas
add
push
imul
jne
aad
mov
clc
imul
add
stc
scas
cmp
push
clc
push
add
add
add
pop
add
mov
lea
pop
pop
push
push
lea
push
lea
push
call
add
add
mov
add
into
add
add
sarl
add
fnstsw
mov
push
xchg
add
data16
jmp
mov
in
add
adc
pop
push
push
push
push
push
lea
push
push
lea
push
call
mov
mov
divl
mov
popf
pop
add
enter
mov
xchg
lock
add
mov
lea
add
add
lods
add
add
scas
add
fadds
add
add
lea
stos
push
stos
xchg
push
add
test
fmull
pop
leave
ret
push
add
rol
dec
pop
push
mov
push
push
push
call
in
add
add
test
in
add
jge
xchg
mov
fidivrl
add
lods
xchg
push
jl
add
jns
mov
out
je
mov
add
test
mov
add
push
imul
xchg
add
pop
test
xchg
fs
mov
stos
add
mov
addr16
add
push
not
add
rol
pop
cmpl
jne
push
push
shl
push
push
pop
add
sub
sub
not
lea
pop
add
dec
shl
ror
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
addr16
scas
neg
ljmp
mov
xlat
stos
add
mov
add
add
add
add
cmc
add
add
popf
mov
fldl
xchg
jb
addb
mov
popa
lock
add
in
push
add
enter
hlt
lea
pop
pushl
push
push
push
push
push
push
push
push
push
call
lea
std
xchg
loopne
add
pusha
add
add
mov
jecxz
add
pop
jl
sarl
aam
faddl
xchg
negl
loopne
pop
add
add
jns
in
mov
filds
fucom
add
pop
call
push
push
lea
push
push
call
add
icebp
add
push
rcll
les
add
faddp
add
add
fcmovnbe
add
mov
push
test
add
jae
add
jge
push
addl
cmpsb
into
xlat
lock
add
imul
mov
add
ja
hlt
lea
pop
call
push
inc
pop
jmp
cmpl
je
push
shl
dec
rol
add
pop
cmpl
jne
leave
push
ror
rol
sub
pop
add
push
sub
rol
shr
pop
pop
push
push
push
push
push
push
lea
push
push
call
mul
loopne
rolb
insb
add
data16
lea
add
in
lods
add
add
add
push
add
pop
add
jge
add
in
xchg
mov
outsl
add
mov
lea
pop
pop
push
rol
pop
pop
push
ror
pop
pop
leave
push
lea
push
push
lea
push
push
push
lea
push
call
jecxz
jecxz
outsl
jle
add
cli
add
push
add
pop
push
mov
cmc
addb
add
mov
push
cld
add
add
mov
enter
loop
add
add
lods
jns
add
push
add
add
clc
add
add
in
mov
pop
hlt
insb
add
add
add
add
add
jecxz
mov
lea
pop
add
push
shr
pop
ret
push
push
push
push
push
push
call
pop
jns
add
xchg
pop
clc
add
xchg
mov
add
add
movsb
xlat
mov
pop
addb
mov
add
add
add
xchg
add
in
jae
idivl
mov
icebp
int3
sarl
lea
pop
jmp
push
push
lea
push
push
lea
push
call
gs
cltd
aad
xchg
add
test
mov
add
in
add
mov
add
leave
lock
mov
pop
add
add
clc
mov
shr
add
loop
pop
add
add
scas
in
scas
out
ret
add
shrl
jo
loop
loop
in
jnp
add
outsl
mov
orb
cmpl
jne
push
push
lea
lea
sub
push
and
add
inc
add
shr
sub
sub
not
rol
lea
add
pop
inc
pop
push
lea
push
push
call
lock
lahf
mov
add
lods
ret
add
in
cltd
in
add
add
ja
bound
mov
rcr
add
pushf
add
stos
xchg
adcb
jmp
mov
lods
xchg
add
add
mov
fcmovnbe
imulb
add
aam
mov
lea
pop
pushl
push
pop
call
push
sub
not
pop
push
push
add
sub
lea
pop
call
push
inc
inc
add
ror
pop
jmp
cmpl
jne
push
dec
xor
ror
pop
mov
mov
push
lea
push
push
lea
push
push
push
push
push
push
call
add
jmp
add
lock
hlt
add
add
push
xchg
add
imul
popa
sarb
data16
scas
push
add
add
mov
leave
subb
lods
jp
test
addb
lret
mov
lds
add
movsl
add
aad
scas
movsl
pusha
xchg
add
imul
and
push
push
push
push
sub
add
shr
inc
sub
sub
inc
pop
add
add
add
shr
pop
push
sub
shr
ror
pop
pushl
push
not
pop
call
push
push
sub
push
and
add
sub
sub
shr
add
xor
pop
add
pop
push
push
push
push
lea
push
push
lea
push
push
call
xchg
xchg
lods
jno
jae
subl
pusha
xlat
pop
xchg
stos
enter
add
hlt
add
pop
mov
enter
add
fisubl
arpl
add
arpl
out
add
js
add
std
mov
lea
pop
pushl
push
push
push
call
insb
lea
add
xchg
jae
add
repnz
add
add
add
out
add
shlb
cltd
add
into
in
std
add
add
pop
call
push
xor
pop
call
push
push
rol
push
xor
add
sub
xor
pop
inc
lea
lea
pop
push
add
pop
pushl
push
push
push
call
add
scas
add
cld
add
add
mov
stc
add
pushf
int3
in
mov
fadd
scas
add
add
xlat
data16
xchg
testl
outsl
add
add
fbld
aam
xchg
jne
add
call
add
imul
pop
add
add
xchg
add
into
sub
mov
lea
pop
call
push
push
push
push
push
lea
push
push
push
push
call
add
push
iret
repnz
add
jns
mov
jbe
jae
iret
add
roll
loope
xchg
cmc
ror
movb
add
mov
push
jmp
add
lods
lods
add
cwtl
cmpsl
mov
lea
pop
call
push
push
rol
push
push
pop
add
ror
inc
rol
shr
sub
shl
ror
lea
pop
sub
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
xchg
add
test
testl
xchg
sar
mov
scas
out
aam
scas
icebp
aad
add
pop
add
cltd
push
mov
imul
test
insb
js
lcall
and
pushl
push
push
push
lea
push
push
push
push
push
call
mov
mov
out
add
add
add
mov
push
pop
xchg
cltd
add
mov
jmp
fwait
push
testl
push
cmpsb
add
xchg
rcrl
lret
add
add
addr16
jb
add
cli
cmpsl
add
push
lods
rol
add
icebp
add
mov
pop
mov
lea
pop
call
call
push
push
ror
ror
shl
shr
push
or
inc
add
ror
add
sub
sub
shr
pop
rol
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
push
pop
outsl
je
mov
mov
add
add
add
int3
fwait
add
loope
imul
scas
add
mov
fldcw
jnp
add
in
lods
add
fs
mov
lea
pop
pushl
push
sub
dec
pop
call
call
push
push
inc
push
or
not
add
not
add
shr
lea
sub
shr
sub
xor
lea
pop
ror
shr
pop
push
push
push
lea
push
push
push
push
push
push
call
xlat
add
sahf
stos
add
out
xchg
add
add
add
add
push
mov
add
add
sahf
add
jge
jmp
in
add
jns
icebp
add
fisttpl
mov
mov
xchg
test
int3
lea
pop
pushl
push
shr
pop
call
call
push
push
rol
push
or
not
add
sub
sub
add
inc
xor
pop
pop
push
pop
pushl
call
push
sub
pop
call
call
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
add
lcall
add
push
jl
in
ljmp
jl
jecxz
imul
test
pusha
lods
push
addl
nop
gs
or
add
in
add
enter
loop
add
test
pop
lea
push
push
ror
ror
push
or
not
add
sub
shl
pop
shr
pop
push
rol
add
sub
pop
pushl
call
push
lea
push
lea
push
push
push
call
mov
mov
pop
icebp
ret
je
repnz
xchg
add
arpl
lcall
mov
int3
add
cld
add
xchg
add
xchg
push
add
mov
lea
pop
push
push
push
push
push
call
xlat
add
into
lret
mov
cmp
rolb
xchg
enter
add
add
add
les
xlat
add
add
add
add
test
add
lea
xlat
arpl
fildl
add
add
mov
add
pushw
jp
push
loope
mov
add
pop
add
lea
pop
call
push
push
dec
xor
push
sub
add
sub
sub
not
sub
sub
dec
ror
pop
shl
pop
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
out
aam
pop
stos
fbstp
imul
add
add
add
addl
ja
add
sub
jo
add
jno
add
fstpl
loope
and
movb
pop
not
mov
testb
add
bound
mov
data16
add
outsl
js
cmc
push
add
ljmp
bound
pop
pushl
push
push
push
call
push
out
mov
mov
push
xchg
add
add
pop
push
xchg
add
add
pop
filds
test
add
add
mov
mov
add
add
cmpsb
add
test
pop
add
in
int3
lea
pop
call
call
push
push
push
call
add
push
xchg
add
ja
out
scas
mov
push
fcoms
iret
add
xlat
add
pop
xchg
shrb
mov
add
add
mov
loop
int
add
hlt
stc
add
ficomps
add
sahf
outsl
jp
mov
lea
pop
mov
push
push
xor
inc
sub
push
or
inc
add
sub
rol
pop
add
xor
ror
pop
push
push
push
lea
push
push
lea
push
push
push
call
test
rcrb
add
add
sahf
push
addb
iret
test
clc
mov
imul
aam
add
in
xlat
mov
add
push
add
add
into
cltd
hlt
out
add
add
pop
mov
aad
in
fiaddl
mov
add
clc
add
fiadds
notl
les
jne
push
push
lea
push
call
add
insb
add
ljmp
add
push
jb
mov
lahf
test
xchg
add
in
sti
mov
push
add
add
add
cld
pop
stos
xchg
add
or
call
push
push
add
pop
pushl
call
push
push
sub
push
xor
add
shl
rol
add
sub
shr
pop
pop
push
sub
xor
pop
pushl
push
rol
pop
call
push
push
not
dec
dec
push
or
not
add
add
sub
rol
pop
shr
pop
push
push
ror
push
sub
add
sub
rol
sub
dec
inc
ror
xor
pop
add
pop
push
xor
pop
call
push
push
shr
push
push
pop
add
rol
lea
sub
dec
shr
pop
ror
lea
pop
push
sub
pop
pushl
push
xor
add
shl
pop
call
push
rol
shl
xor
ror
pop
mov
push
push
push
push
lea
push
push
push
lea
push
call
add
push
add
cmpsl
add
les
add
pusha
iret
js
out
xchg
mov
sarb
push
add
pop
add
xchg
stos
add
add
mov
add
fcmovu
push
add
ficoml
repnz
add
pop
lea
push
push
push
call
movsb
push
aam
add
mov
call
int
pushf
mov
add
add
fdiv
adcb
xchg
lcall
out
xchg
mov
jns
jb
add
sti
jne
push
add
addl
jns
roll
aad
mov
lea
pop
lea
push
push
push
push
lea
push
call
push
jmp
std
stos
add
mov
push
shlb
into
ficomps
rolb
xchg
jae
add
ficompl
mov
add
mov
mov
mov
add
add
add
divb
pop
add
add
flds
add
pop
push
add
push
mov
pushf
in
jmp
add
add
push
add
cmpsb
hlt
add
addl
les
push
push
lea
push
push
push
call
ret
pusha
stc
mov
divb
lcall
shl
xchg
sahf
int
pop
fdivrs
pusha
mov
mov
push
mov
loop
cli
bound
add
jbe
add
mov
lea
pop
push
push
push
sub
add
pop
push
push
push
push
push
call
add
lahf
xchg
add
imul
xchg
mov
pop
imul
jmp
ret
xchg
idivl
push
fwait
add
add
sti
add
add
in
jmp
add
add
xchg
add
fwait
in
mov
cmpsl
add
add
mov
lods
add
add
add
stos
add
flds
mov
lea
pop
push
push
push
push
push
push
call
test
jae
jbe
rorl
incb
mov
add
jle
js
scas
add
test
add
les
loop
loop
popa
pushf
loop
add
aad
std
add
fidivl
int
popl
andl
in
mov
pop
fwait
add
adc
push
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
push
add
mov
add
push
mov
fdivr
add
fnsave
jnp
add
in
enter
pop
cli
out
mov
ljmp
mov
jbe
xchg
add
fs
add
ficompl
add
add
call
xchg
xor
mov
int3
lea
pop
pushl
push
pop
push
push
push
lea
push
push
push
call
push
add
rolb
icebp
mov
into
jge
mov
bound
add
loope
add
add
push
rol
mov
add
add
ja
add
loope
ror
add
pop
sarb
out
add
mov
add
hlt
addb
mov
add
scas
rcll
fiadds
in
fstpt
stc
add
add
pop
call
push
push
add
rol
push
or
not
add
dec
ror
sub
sub
sub
pop
sub
sub
shr
pop
push
dec
inc
pop
pushl
push
inc
pop
call
push
lea
push
push
push
push
push
push
call
out
push
aam
add
add
mov
in
jbe
mov
popl
add
add
mov
add
add
lds
lds
mov
fildl
aam
incb
jae
add
add
lea
pop
call
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
add
jb
lods
pop
xchg
pop
add
jne
rolb
out
repnz
add
add
insb
pop
add
push
movsl
movl
pushf
add
repnz
mov
add
loop
add
mov
add
roll
std
rolb
add
pusha
add
add
jne
arpl
mov
lea
pop
mov
push
push
push
lea
push
push
push
call
add
ljmp
add
out
pop
add
add
scas
add
add
jbe
add
add
out
icebp
enter
add
fwait
out
std
stc
jne
jmp
mov
add
add
stos
add
pusha
popf
add
push
rcr
push
flds
add
pop
pop
push
push
lea
push
lea
push
push
push
push
push
call
xchg
lret
lea
push
xchg
pop
add
add
push
fsubrl
fldl
addl
add
add
in
rol
add
add
pop
xchg
add
lret
add
add
fwait
scas
test
add
add
push
xchg
add
outsl
push
mov
add
in
stos
scas
stos
add
add
hlt
lea
pop
dec
jne
jmp
push
push
lea
push
push
call
data16
movsl
lock
pusha
add
push
out
xchg
xorb
addb
add
mov
ret
push
in
add
add
add
add
cltd
push
mov
mov
add
xchg
popf
mov
jmp
out
int
add
add
mov
testl
movsb
add
add
out
mov
mov
lea
pop
call
push
push
not
lea
inc
push
xor
add
add
add
sub
dec
pop
sub
pop
push
lea
pop
pushl
call
push
push
push
lea
push
call
add
in
je
out
add
xchg
mov
add
add
test
add
out
leavew
movsb
mov
mov
mov
fisubrl
addr16
jnp
mov
xlat
add
add
add
mov
mov
fmuls
pop
push
push
lea
push
push
push
lea
push
push
push
call
mov
add
cli
add
add
add
mov
add
mov
jae
mov
add
pop
add
add
imul
add
imul
add
jo
add
mov
add
add
in
adcl
mov
add
out
rorl
call
mov
push
add
pop
lea
push
push
dec
inc
add
push
sub
add
add
rol
sub
shl
shr
pop
dec
inc
pop
push
push
lea
push
lea
push
lea
push
push
call
mov
xchg
pop
xchg
loop
add
cld
add
aam
jp
push
jmp
add
scas
add
sahf
add
add
add
jae
add
cli
jmp
add
add
pop
add
pop
add
sahf
add
add
imul
add
add
mov
cld
lea
pop
pushl
push
push
call
subb
les
add
jmp
popa
add
js
add
outsl
add
stos
add
add
addr16
in
in
add
add
add
add
pop
call
push
push
push
call
push
add
pop
add
lcall
fadds
out
add
xchg
cmc
jmp
mov
add
out
in
fidivl
lods
add
js
add
jp
mov
lahf
mov
jl
fmull
push
push
push
push
push
push
push
call
out
add
lods
int3
mov
add
fstps
add
add
jle
push
mov
add
std
bound
gs
push
add
movb
jb
pop
add
add
mov
lea
pop
call
push
push
not
sub
push
or
not
add
add
sub
shr
ror
pop
sub
xor
pop
push
shr
ror
pop
pushl
push
push
push
call
add
test
add
add
add
arpl
xchg
hlt
add
add
sahf
add
popl
fbld
mov
fildl
add
les
add
add
add
lret
add
lods
lds
mov
lea
pop
call
push
ror
pop
call
push
lea
push
push
push
push
push
push
push
call
push
add
stc
lahf
add
mov
ljmp
pop
int3
repnz
fldcw
pushf
loop
add
into
add
iret
ret
cld
into
lret
mov
insb
sti
cli
stc
add
mov
mov
ret
je
jp
fstl
jmp
lcall
arpl
pop
mov
push
ror
pop
lea
push
push
xor
not
inc
push
and
add
xor
shr
add
sub
dec
pop
rol
pop
push
add
shr
pop
pushl
push
pop
call
lea
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
add
mov
test
iret
add
ret
add
add
add
fwait
in
jecxz
mov
add
jmp
add
loope
mov
data16
xlat
rolb
push
add
fidivrl
addl
test
aad
jecxz
add
jno
jle
test
pop
add
add
push
mov
jo
xlat
clc
add
loop
fmuls
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
in
sahf
loop
jmp
add
mov
add
into
mov
add
nop
pop
aad
xlat
add
mov
aam
jle
add
fwait
add
add
repnz
pusha
add
sahf
iret
add
filds
add
jno
cld
lea
pop
push
push
push
push
lea
push
push
call
add
xchg
xchg
movsb
movl
imul
sahf
pop
add
add
mov
fiadds
cld
add
jno
pop
hlt
add
add
lret
add
push
add
movsb
stc
scas
xorl
add
ret
add
in
add
pushf
push
add
add
pop
pushl
push
push
add
push
or
inc
add
sub
lea
sub
lea
not
pop
shr
pop
push
push
lea
push
lea
push
push
call
arpl
add
jae
jl
fcmovnb
mov
xchg
imulb
xchg
mov
mov
add
add
add
adc
pop
add
add
arpl
add
cld
lea
pop
push
push
lea
push
call
xchg
add
stos
add
les
popl
push
out
add
xchg
icebp
popf
std
test
mov
aad
enter
popf
add
lret
aam
in
imul
ret
into
add
mov
add
sahf
add
mov
movl
add
push
sarl
test
add
xchg
add
loopne
les
shrb
mov
in
push
dec
lea
push
push
pop
add
sub
inc
sub
pop
ror
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
arpl
sti
add
push
lcall
cli
mov
add
add
lods
jecxz
cli
add
jmp
mov
mov
stos
imul
add
add
add
add
test
add
enter
mov
add
lret
cld
lea
pop
pushl
call
push
pop
push
push
not
sub
add
pop
call
push
push
xor
xor
add
push
push
pop
add
not
sub
add
shr
xor
pop
shr
shl
pop
push
push
push
call
pop
ret
add
mov
add
lds
mov
jp
push
pop
add
xchg
mov
idiv
pop
lds
lcall
add
addb
add
xchg
add
add
mov
push
add
add
je
xchg
je
cli
mov
lea
pop
pushl
push
sub
sub
dec
pop
call
push
add
add
add
pop
call
push
push
push
push
push
call
push
add
loop
add
call
cmc
in
add
pop
jmp
stc
fcomp
imul
push
add
incb
add
lods
add
add
add
add
in
addb
add
fadds
mov
add
add
lods
rcrb
add
add
lcall
cli
mov
int3
lea
pop
jmp
pushl
push
push
push
call
fcmovbe
stos
movsb
test
jecxz
xchg
add
cld
cltd
stos
add
rolb
add
add
mov
jbe
add
add
test
lret
push
loop
add
filds
loop
add
push
data16
jne
jae
add
cld
lea
pop
mov
push
rol
pop
jmp
push
push
add
sub
push
or
inc
add
add
xor
lea
sub
dec
xor
sub
pop
not
inc
pop
push
shr
sub
pop
pushl
push
push
push
call
flds
out
add
filds
stos
gs
add
mov
imul
mov
cmpsl
add
mov
mov
roll
push
add
add
jecxz
bound
mov
in
enter
popf
mov
xchg
in
add
or
call
push
sub
add
pop
push
push
ror
not
pop
call
push
push
xor
push
or
not
add
rol
add
inc
sub
not
shl
sub
pop
shl
ror
pop
push
lea
pop
pushl
call
push
not
rol
lea
pop
push
call
push
add
sub
pop
leave
push
pop
add
push
xor
sub
pop
pop
push
push
lea
push
call
cltd
add
mov
jns
cmpsb
push
add
data16
and
sti
push
ret
add
add
add
add
mov
shr
add
add
mov
insb
add
add
fiaddl
xchg
stc
in
add
xchg
mov
xchg
add
pop
pop
push
push
push
call
mov
test
add
jmp
jge
movl
mov
jne
add
add
add
subl
add
aam
loopne
push
xchg
fistpll
in
mov
lea
pop
pop
pop
push
push
lea
push
push
push
push
lea
push
call
popf
arpl
scas
xchg
add
movsb
add
fldt
lea
push
scas
add
cli
mov
pop
leave
add
add
push
out
imul
xchg
add
mov
add
loopne
je
pop
mov
mov
add
add
leave
jns
hlt
lea
pop
leave
push
inc
sub
rol
pop
add
push
ror
pop
ret
push
shl
pop
leave
push
lea
push
call
add
add
shr
add
mov
add
scas
bound
shl
lret
sti
lcall
cmpsb
jl
mov
out
aam
insb
pop
jae
add
aam
bound
pop
ret
push
add
add
shr
pop
push
push
not
add
pop
mov
push
push
push
push
push
call
add
lock
pop
gs
add
jbe
out
add
add
scas
add
mov
add
add
hlt
addr16
add
mov
add
xchg
testl
or
add
push
pusha
std
add
iret
add
stos
add
add
push
mov
pop
xchg
shlb
int
jbe
loopne
add
add
mov
lea
pop
cmpl
jne
mov
push
xor
pop
jmp
push
push
push
push
push
call
add
add
cmpsb
mov
add
mov
add
add
add
xlat
xchg
mov
push
add
js
cltd
add
je
adc
add
shl
addb
mov
data16
mov
mov
add
ja
movsb
mov
pusha
add
jne
shrb
aam
bound
mov
and
push
push
push
push
lea
push
push
push
push
push
push
call
aad
loop
add
jl
mov
cmpsl
in
xchg
add
add
add
mov
sti
ja
cwtl
cmpsb
xchg
les
mov
test
ret
fiaddl
add
add
add
mov
enter
mov
enter
push
rorl
pop
xor
push
push
push
lea
push
lea
push
push
call
out
lea
xchg
into
add
mov
add
out
fucomi
add
push
push
add
shrb
mov
insb
fs
add
hlt
xchg
jb
pusha
rolb
add
pop
xor
add
push
push
push
push
call
mov
aam
mov
pop
add
pushf
fildl
hlt
fwait
add
sarl
add
pop
add
xchg
add
add
std
add
add
filds
mov
lea
pop
xor
dec
push
lea
ror
pop
sub
push
push
lea
push
push
push
push
push
call
nop
ret
leave
add
addl
add
push
lds
add
xchg
std
add
add
popa
add
movb
jecxz
add
jecxz
out
add
add
add
repnz
cmpsb
cwtl
add
mov
lea
ficompl
add
arpl
add
addr16
jmp
push
pop
sub
push
inc
ror
not
pop
pushl
push
shl
inc
shr
dec
pop
pop
push
sub
ror
sub
inc
pop
sub
push
lea
push
push
push
push
call
add
add
mov
add
xchg
mov
ljmp
add
add
leave
add
add
xchg
lods
add
xchg
mov
iret
shlb
aam
add
mov
add
mov
add
in
clc
std
pop
jno
mov
lea
pop
cmp
jne
push
push
lea
push
lea
push
push
push
push
push
push
push
call
jecxz
lcall
mov
into
xchg
mov
add
push
add
add
jecxz
scas
pop
xchg
add
add
rol
cwtl
add
int
imul
pusha
mov
add
mov
test
jmp
xchg
xchg
add
add
rcrb
push
pop
xchg
arpl
in
jp
loopne
add
pop
lahf
add
push
xchg
mov
lea
pop
mov
lea
push
push
lea
push
push
call
add
popa
add
add
sti
jns
fwait
jge
cmc
cli
xchg
add
mov
mov
xchg
add
add
add
testl
add
jo
mov
negl
xchg
add
xchg
add
add
int3
jns
lret
jecxz
add
xchg
xchg
mov
popa
mov
add
add
mov
adc
jmp
xor
jno
pop
mov
shr
push
add
sub
inc
pop
add
push
push
push
push
push
lea
push
lea
push
push
push
push
call
lods
add
scas
out
add
jge
add
mov
add
push
pop
mov
pop
int
je
roll
out
imul
add
add
add
rolb
test
jno
out
jl
mov
add
mov
add
loop
mov
lods
cmpsb
add
add
mov
add
add
mov
lea
pop
sub
pushl
push
shr
shr
pop
pop
push
add
sub
add
pop
shr
push
push
call
icebp
jle
test
int3
add
add
add
add
add
add
roll
add
add
cmpsl
add
add
stc
sub
mov
fildl
popf
fists
push
add
in
test
jbe
bound
aam
int3
lea
pop
and
sub
push
lea
push
lea
push
push
call
aad
cmpsl
ja
hlt
enter
test
add
addb
nop
pop
lcall
add
add
add
addr16
push
popa
rorl
add
mov
lea
pop
cmp
jne
push
sub
pop
leave
ret
push
lea
push
lea
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
pop
lock
fstpt
add
add
aad
lret
jp
andb
pop
add
pushf
add
addr16
push
add
aam
add
add
add
mov
clc
rcrb
add
add
pop
push
push
push
push
call
jne
stc
loopne
add
outsl
enter
add
mov
add
cld
movsl
fsubs
lock
add
add
gs
add
jae
xchg
cmpsb
pushf
mov
pop
add
mov
add
lods
jge
fcoml
addb
mov
cltd
popf
mov
add
clc
xchg
pop
stos
mov
bound
mov
mov
notb
mov
lea
pop
mov
push
push
call
add
shll
push
jns
loopne
mov
out
add
rcl
jmp
add
jmp
mov
test
add
cld
xchg
add
pop
push
lods
add
add
add
add
push
out
out
bound
rcrl
ja
outsl
add
arpl
add
add
add
loopne
imul
hlt
lea
pop
add
push
lea
push
lea
push
push
push
push
push
push
call
scas
add
fldl
add
add
add
mov
call
add
mov
rcr
add
jns
mov
test
in
cmc
add
add
push
addb
fdivs
test
add
hlt
lea
pop
push
push
push
shr
pop
push
push
xor
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
test
mov
adcb
add
cmpsb
lret
add
add
add
push
jmp
add
in
add
xchg
movl
lcall
mov
mov
add
pop
add
xchg
add
cld
mov
lea
pop
push
push
push
call
add
out
enter
mov
push
repnz
jle
add
std
mov
mov
scas
add
popa
js
stos
add
filds
xchg
fs
fcompl
rolb
add
add
jmp
insb
add
shlb
cmpsl
mov
add
or
pop
or
xor
jo
push
push
call
add
pop
neg
push
jno
icebp
add
add
faddl
add
cmpsb
cli
cmpsl
add
fwait
movsl
out
xchg
add
add
jp
test
cmpsl
add
addl
add
jle
out
mov
add
ror
push
mov
lea
pop
lea
push
push
call
mov
mov
popa
add
add
pop
mov
lods
icebp
mov
xchg
repnz
pop
xchg
fisubrl
add
out
add
mov
ljmp
mov
add
fildl
push
add
cli
ja
add
push
mov
fisttpl
add
pop
add
add
bound
pop
sub
mov
push
push
push
push
call
add
mov
add
stos
stc
add
add
xchg
in
add
lahf
fldl
loop
add
add
jo
add
add
add
leave
push
add
add
xchg
fstpl
jmp
fcom
addb
mov
mov
cltd
add
xor
add
addl
mov
in
or
pusha
add
loopne
add
js
mov
lea
pop
shr
push
push
call
pop
shl
push
add
in
add
add
add
add
in
jge
add
add
pusha
mov
add
ja
test
mov
add
add
mov
je
roll
add
push
add
add
push
add
pop
call
add
xchg
add
add
add
add
int
add
cli
add
lea
pop
add
mov
push
push
push
push
push
lea
push
lea
push
push
call
loopne
loop
add
clc
mov
push
notl
mov
outsl
clc
cmpsl
push
mov
add
xchg
roll
mov
mov
add
mov
add
jnp
ljmp
add
pushf
push
mov
lods
add
rclb
loop
arpl
add
add
push
roll
add
mov
mov
lea
pop
add
push
push
lea
push
push
call
shlb
shlb
xchg
mov
xchg
add
negb
popa
add
pop
push
mov
scas
mov
scas
jl
add
xlat
push
movl
jl
cmpsl
clc
add
hlt
lea
pop
mov
push
sub
pop
add
xor
push
lea
push
push
push
push
push
lea
push
push
push
call
ret
add
jl
add
je
test
ljmp
mov
add
fwait
pop
orl
fsubrp
mov
add
imul
pop
andb
add
add
add
pop
mov
push
ror
xor
pop
and
push
lea
push
lea
push
lea
push
push
call
in
add
mov
fs
add
add
add
int
andb
add
test
add
add
fwait
enter
cltd
lods
in
add
shl
add
out
add
pop
add
stos
pusha
fnstsw
loopne
lret
add
in
addr16
add
add
add
add
lcall
add
xchg
add
pusha
mov
lea
pop
rol
rol
push
push
push
push
push
lea
push
push
lea
push
call
add
lahf
leave
add
add
xchg
lret
pop
add
outsl
insb
mov
add
add
add
add
pop
add
pop
xchg
xchg
cltd
cmpsb
mov
xchg
mov
js
add
push
add
aad
ret
add
add
shrl
aam
arpl
stos
shrl
aam
bound
pop
xor
push
push
lea
push
push
call
popa
mov
xlat
add
add
mov
xchg
xchg
xlat
shll
ljmp
add
add
lea
add
cmc
pusha
add
sti
mov
add
mov
push
push
push
add
add
jle
cmpsb
add
sti
mov
lea
pop
inc
cmpb
jne
push
xor
add
sub
add
pop
add
cmp
je
push
lea
push
push
push
push
push
lea
push
push
push
call
lcall
out
fwait
pop
add
lret
add
popa
cli
aam
jl
push
add
mov
into
jl
mov
je
faddl
jb
loope
jge
add
ja
add
fdecstp
add
add
lods
push
push
add
add
mov
add
push
add
mov
push
add
add
arpl
pop
add
add
data16
loop
fmull
ret
adc
jnp
add
test
std
call
std
not
pop
xor
push
push
call
jne
loop
lods
add
fldcw
pop
test
add
icebp
test
mov
gs
mov
filds
add
add
xchg
cmc
fwait
enter
add
jbe
xchg
jle
add
mov
xchg
add
gs
movsb
add
movsl
movsb
std
je
add
add
pop
pop
pop
push
push
call
cwtl
lret
into
jbe
add
add
add
aam
add
mov
pusha
lcall
in
add
insb
add
add
add
clc
jmp
test
movsb
test
add
int3
lea
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
xlat
mov
add
add
in
add
add
addb
add
popf
add
xchg
rcll
add
add
mov
add
loopne
fndisi(8087
lds
push
cmpsb
into
mov
mov
mov
ret
mov
jbe
add
mov
mov
les
push
sub
pop
pop
push
push
push
push
call
add
add
call
fildl
add
jbe
add
push
mov
push
add
addb
add
push
std
add
jmp
testb
mov
add
pop
fstl
in
add
rolb
add
add
pop
fbstp
iret
jecxz
imul
add
notl
roll
jbe
add
addl
lea
pop
leave
ret
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
fstpl
in
add
add
add
mov
add
add
leave
push
add
add
out
jb
aam
xchg
add
mov
add
lcall
iret
add
mov
mov
fmull
push
adc
ret
push
or
fldcw
push
push
lea
push
push
push
call
hlt
cld
mov
add
xchg
xchg
lcall
add
push
pop
mov
add
add
jmp
add
add
imul
add
add
add
fidivl
out
push
xchg
jecxz
mov
addr16
add
add
add
add
add
pop
push
push
push
push
lea
push
push
push
push
call
add
add
add
popf
cmpsb
add
add
int3
lods
rcl
mov
add
push
mov
xchg
fildll
add
mov
add
jnp
mov
test
bound
add
shr
aam
bound
push
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
push
fsub
xchg
int
repnz
aam
jne
loope
popa
insb
mov
out
add
hlt
cli
push
add
pop
aad
jbe
scas
movsb
cmc
scas
add
lret
add
fdivrp
filds
movsb
shlb
add
add
leave
fwait
nop
negl
xchg
sahf
add
flds
add
add
add
add
int3
lea
pop
add
push
pop
mov
cmpw
push
pop
pop
pop
push
push
call
add
mov
xchg
add
movsb
gs
add
cmpsl
add
ljmp
pusha
enter
xchg
call
add
push
xchg
scas
lea
jb
test
lock
add
push
fildll
add
pop
popf
nop
stos
shl
out
pusha
add
add
add
add
pop
int
add
add
mov
lea
pop
mov
push
xor
rol
lea
pop
push
push
push
push
push
push
call
add
add
fiadds
mov
lahf
add
andb
jns
addb
incb
enter
fsubs
mov
loope
mov
add
add
cmc
faddl
add
add
fsubrs
ret
hlt
ljmp
addb
add
pop
call
xor
push
push
lea
push
push
call
add
nop
test
xchg
movsb
add
xchg
popa
flds
add
mov
add
addb
imul
filds
add
mov
addl
mov
testl
add
vpsrlw
ja
push
mov
mov
pop
fistps
mov
repnz
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
add
in
push
add
add
jns
add
gs
add
mov
movsb
fiaddl
out
jp
add
add
add
bound
iret
cltd
xchg
add
fwait
add
xlat
add
jnp
add
subb
mov
lea
pop
pop
push
sub
pop
pop
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
int3
add
add
fs
shll
sti
push
add
add
add
push
add
int
add
push
std
add
fimuls
sti
mov
mov
imul
rolb
icebp
push
cld
lea
pop
pop
push
push
push
lea
push
push
lea
push
call
ret
lahf
add
add
filds
in
add
add
repnz
jo
test
add
arpl
sti
out
pop
mov
add
mov
stos
fwait
lds
lret
add
add
mov
int3
test
jge
add
mov
add
pop
lret
push
jo
add
test
xchg
xlat
add
add
pusha
mov
lea
pop
leave
push
pop
ret
push
lea
add
pop
push
mov
push
inc
add
pop
add
push
push
push
lea
push
push
lea
push
call
add
pop
add
add
cmc
add
push
int
add
add
cmpsl
add
stc
add
in
add
lock
xchg
add
add
out
add
add
mov
pop
push
push
xor
sub
sub
pop
push
push
push
add
lea
rol
not
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
sbb
mov
mov
loop
xchg
add
add
add
xchg
js
mov
pop
add
ret
add
add
add
add
mov
add
fistpl
xchg
add
add
jno
add
lea
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
xchg
add
mov
add
fs
lahf
loop
pop
push
loopne
add
sbbl
push
add
lds
add
test
ret
lcall
add
push
pop
add
add
hlt
add
add
mov
add
mov
lods
testl
jnp
xchg
sbb
cwtl
add
in
push
lea
push
push
lea
push
call
cld
add
mov
popa
add
add
je
loop
movl
add
cltd
mov
add
out
jnp
add
add
pushf
jno
mov
add
add
add
mov
add
jbe
add
mov
int3
lahf
fstp
jo
fmull
push
sub
sub
pop
lea
push
push
call
divl
mov
add
push
add
lcall
pop
testb
fs
mov
int
add
add
add
add
add
add
add
add
in
add
pop
arpl
add
clc
pop
stos
mov
mov
mov
add
xchg
pop
jecxz
mov
pusha
or
ljmp
pop
shr
push
shr
pop
add
push
add
pop
mov
add
push
sub
not
pop
pushl
push
push
call
imul
repnz
jns
pop
add
fcmovnu
add
add
int
lret
xchg
sub
into
repnz
jo
jmp
add
movsb
add
add
jae
jo
add
sahf
lds
jp
mov
add
push
addr16
add
mov
lods
fimuls
add
lea
pop
popl
mov
push
lea
push
call
add
xchg
add
mov
add
fwait
int3
pop
mov
addl
push
out
add
jmp
lods
ret
add
jnp
je
xchg
iret
imul
out
add
add
xchg
test
pop
add
push
rol
sub
sub
pop
xor
push
push
call
lret
shll
add
jae
flds
add
mov
add
imul
add
add
popf
xchg
sahf
fsubrs
add
xchg
add
jb
cmpsb
fisttpl
pop
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
out
jbe
into
insb
add
push
rcrl
add
scas
outsl
cmpb
enter
lock
sar
cmpsb
add
add
add
mov
fidivrs
lea
pop
mov
push
ror
pop
add
push
lea
push
push
push
push
push
push
push
lea
push
call
jle
lock
xchg
stos
xlat
int3
into
les
mov
popa
add
jo
pop
pusha
jae
push
bound
popf
add
add
test
add
add
jmp
mov
lea
pop
xor
push
shr
xor
add
pop
rol
push
rol
pop
nop
nop
push
lea
add
pop
xor
push
sub
rol
lea
pop
nop
push
add
add
pop
nop
push
add
pop
inc
push
dec
pop
nop
push
push
push
lea
push
push
lea
push
call
add
add
add
add
int
push
ljmp
jmp
test
lds
addb
cmpsb
add
jno
add
cld
shrl
add
pop
nop
push
push
push
push
push
push
push
push
push
call
add
movsb
mov
cmpsl
add
test
add
add
mov
xchg
xchg
xchg
in
addb
mov
lds
jnp
add
mov
out
fnstsw
xchg
add
add
mov
add
add
add
aad
faddl
sahf
add
add
mov
lea
pop
cmpb
jne
add
push
push
push
push
push
push
push
push
push
lea
push
call
mov
push
fimull
loopne
add
add
jmp
incb
movb
add
xchg
add
add
add
roll
out
add
mov
rolb
add
lock
add
add
loopne
cmpsb
add
js
mov
fs
push
mov
mov
add
add
cmpsl
js
fs
xchg
add
rcl
cmpsb
out
mov
lea
pop
nop
nop
push
inc
ror
sub
add
pop
cmp
je
nop
push
add
shl
pop
nop
inc
push
shl
shl
sub
pop
nop
push
dec
pop
nop
push
push
push
push
push
push
lea
push
call
add
outsl
push
xchg
jns
lahf
push
sbbb
addr16
insb
add
add
pop
add
add
bound
add
fiadds
lret
add
in
add
cld
add
gs
test
add
mov
add
push
jns
pop
data16
add
mov
add
add
loopne
add
mov
add
jle
jge
xchg
mov
lea
pop
cmp
jb
push
push
push
lea
push
push
push
call
xchg
cmpsb
test
add
scas
enter
movsl
jae
hlt
add
in
mov
add
add
add
fstpt
shlb
add
nop
jmp
add
jecxz
pop
add
sti
mov
imul
push
add
add
pop
xor
push
pop
jmp
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
mov
stc
add
add
add
cli
add
add
push
fstpt
sbbb
add
add
cltd
fnstenv
add
scas
add
lods
add
add
add
mov
out
push
add
add
jmp
add
jmp
hlt
lea
pop
mov
add
push
push
push
push
push
call
mov
filds
push
lods
movsb
add
mov
mov
add
mull
push
jb
ja
add
mov
add
add
add
add
mov
mov
bound
jp
out
add
stc
jo
jb
pop
add
cmpl
xchg
sar
addr16
lea
pop
movzwl
push
push
lea
push
lea
push
push
push
push
push
call
test
add
xchg
iret
cmp
push
fistpl
test
add
stos
in
add
add
add
add
add
add
out
sbb
add
pop
in
enter
mov
lea
pop
mov
add
push
ror
add
pop
mov
xor
push
sub
shl
pop
xor
push
push
push
push
push
push
call
add
fiaddl
rolb
add
jle
mov
mov
push
pusha
jp
fstpt
pop
add
repnz
sbbl
push
fadds
cltd
add
mov
out
bound
add
jge
mov
add
add
xchg
lods
add
scas
cwtl
cmpsb
push
std
add
add
add
add
push
add
out
std
xchg
fildl
clc
add
add
xchg
mov
lea
pop
shl
push
add
dec
pop
xor
shl
push
lea
xor
pop
xor
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
mov
add
mov
add
add
add
clc
add
add
add
fildl
add
imul
add
je
pusha
faddl
mov
js
add
add
add
pop
lods
stos
add
add
lret
icebp
add
enter
jmp
mov
xlat
fidivl
mov
dec
mov
add
movsl
rcl
add
add
mov
lea
pop
shl
push
sub
pop
xor
push
not
not
shr
sub
pop
mov
add
push
ror
pop
pop
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
jnp
add
add
xchg
add
sti
push
jb
add
pushf
jbe
rcrl
add
jns
add
ret
add
cmp
add
add
fwait
icebp
add
sbb
mov
add
add
jne
add
add
jo
scas
movsb
add
xchg
push
mov
lea
pop
pop
pop
push
push
lea
push
push
push
lea
push
push
call
outsl
add
add
sahf
lret
mov
pop
lret
add
adcl
jno
xchg
fildl
imul
add
out
pop
lds
lret
add
idivb
add
pop
leave
ret
push
ror
pop
push
mov
push
ror
add
shr
pop
push
push
push
call
jne
fisubl
pop
add
notb
gs
add
add
xchg
pop
add
hlt
jo
pop
test
test
jmp
add
pop
lds
aad
add
hlt
loop
js
push
add
add
add
imul
enter
mov
mov
int
jns
in
push
jge
add
jge
cld
lea
pop
push
push
not
add
sub
sub
pop
push
push
lea
push
lea
push
push
lea
push
push
call
add
pop
add
add
mov
add
mov
pop
out
push
add
add
add
in
lea
pop
test
adcb
jo
in
mov
loope
popa
lea
push
je
add
push
add
int
jne
push
mov
add
mov
add
push
add
add
cwtl
mov
mov
lea
pop
push
push
push
push
push
lea
push
push
call
leave
adcb
add
xchg
add
mov
stos
add
jo
pop
fucomp
ficoml
add
cmpb
aad
lcall
add
add
jecxz
mov
testb
xchg
incb
arpl
fildl
add
sbb
dec
or
xor
dec
dec
shr
pop
mov
mov
push
ror
pop
test
je
push
lea
pop
mov
push
sub
add
pop
test
je
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
in
rolb
mov
add
movb
add
mov
scas
add
incb
add
add
add
xchg
je
testl
nop
add
mov
push
add
add
xchg
roll
mov
xchg
bound
jp
lock
add
add
mov
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
call
add
leave
jle
test
cmpsb
add
les
movsl
add
pop
int3
add
cwtl
int3
mov
in
ljmp
mov
mov
les
out
fmull
dec
or
push
lea
push
lea
push
push
push
call
add
pop
add
lods
fdivr
mov
add
mov
add
int3
mov
mov
mov
mov
popf
lods
rolb
xchg
outsl
push
xchg
les
scas
mov
int3
lea
pop
mov
inc
push
push
call
pusha
stos
add
add
pop
mov
add
ror
add
test
add
repnz
add
add
push
lods
add
cli
nop
add
jns
add
call
jb
add
jne
add
mov
lea
pop
cmp
je
push
ror
inc
add
pop
test
je
push
push
call
int3
mov
add
add
mov
add
in
add
rclb
fildl
push
add
ljmp
pushf
fcmovnb
mov
mov
jno
scas
add
rclb
add
push
movsl
add
mov
arpl
add
mov
lea
pop
mov
push
sub
sub
xor
pop
inc
cmp
je
push
lea
push
push
push
lea
push
lea
push
call
arpl
fs
add
add
add
popf
addb
add
add
push
divl
fidivrs
icebp
out
push
rolb
fcmove
ret
add
popl
mov
mov
arpl
pop
add
add
add
add
movl
addl
lea
pop
test
jne
xor
push
push
lea
push
push
push
push
push
call
je
movsb
cwtl
jne
pop
mov
mov
pop
jle
pushf
mov
mov
add
roll
outsl
add
cld
add
add
jne
fwait
push
mov
add
jecxz
aam
bound
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
xchg
neg
jae
enter
mov
roll
add
add
add
scas
mov
je
out
add
cld
jecxz
cmpsb
add
add
cmc
mov
in
in
add
cmpl
sub
push
push
push
push
push
push
push
push
call
xchg
xchg
pop
add
pusha
in
add
add
add
add
add
sbb
mov
mov
mov
add
add
add
mov
add
test
push
mov
mov
lea
mov
in
add
lcall
mov
add
add
shrb
add
add
pop
pop
push
not
rol
pop
leave
push
sub
rol
inc
pop
ret
push
push
lea
push
push
push
push
push
push
push
push
call
clc
imul
nop
add
add
cli
mov
cmc
testl
add
mov
ja
add
mov
add
lock
xchg
nop
sahf
xlat
add
fwait
mov
add
add
data16
lods
add
add
add
mov
jp
add
les
push
push
pop
inc
push
xor
rol
inc
pop
cmp
jne
lea
push
xor
dec
add
pop
mov
test
je
push
push
push
push
push
push
lea
push
push
call
xlat
lret
jp
fmull
add
icebp
jno
jp
jmp
add
mov
lock
in
loope
add
loopne
add
fwait
stos
jno
jns
mov
mov
lea
pop
mov
push
rol
pop
add
push
add
ror
pop
cmp
jne
mov
push
push
push
call
fadds
jne
xchg
shl
lcall
add
je
pop
mov
in
push
add
data16
add
jb
test
add
add
lock
jae
push
lahf
add
add
clc
add
addr16
add
jle
mov
add
add
arpl
mov
pop
add
mov
lea
pop
test
je
push
push
push
call
add
add
mov
shr
mov
imul
data16
movsb
add
mov
test
cmpsb
sarl
add
and
xchg
pop
rclb
in
mov
add
add
add
out
ja
add
data16
mov
add
push
sub
inc
xor
sub
pop
cmp
je
jmp
push
pop
xor
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
les
add
add
pop
incb
cmc
add
aad
add
test
mov
lea
add
add
add
arpl
ljmp
xchg
add
rolb
iret
enter
lea
pop
pop
push
lea
push
push
call
mov
mov
add
out
add
mov
cmc
stos
mov
push
in
add
add
fdivrl
add
add
test
add
mov
test
add
add
test
mov
test
add
movsl
insb
sti
mov
fadds
pop
add
pop
pop
push
push
push
call
filds
xchg
cmpsb
in
add
xchg
add
mov
add
add
xchg
pop
fnstsw
insb
add
add
add
add
push
cmpsb
xor
mov
add
add
loope
xchg
add
ljmp
stos
add
out
ret
add
mov
scas
js
mov
lea
pop
pop
push
shr
shr
pop
pop
push
sub
not
not
pop
leave
push
add
xor
shl
pop
ret
lea
push
push
push
lea
push
push
push
push
push
push
call
fst
add
pop
add
mov
in
add
add
add
xorb
push
mov
add
add
mov
pop
insb
jno
gs
add
fbstp
push
pop
mov
mov
add
cli
movsb
cmpsb
shlb
stos
add
nop
mov
int3
add
mov
add
out
fiadds
add
add
add
mov
lea
pop
pop
push
push
push
lea
push
lea
push
call
push
mov
add
add
movsl
add
lods
imul
int3
add
add
fdivrp
int
add
push
hlt
fsubrl
out
ljmp
mov
add
rcrb
add
cmc
rcl
mov
xchg
add
les
pop
push
lea
push
push
push
lea
push
push
push
call
mov
pop
roll
andl
add
add
add
insb
add
insb
add
pop
add
xchg
add
addb
add
gs
mov
add
add
add
add
add
push
imul
add
jl
movsb
pop
pusha
je
arpl
mov
lea
pop
pop
leave
push
rol
ror
ror
add
pop
ret
mov
push
push
push
push
push
call
ret
std
mov
add
iret
fidivl
add
std
xchg
mov
mov
add
lods
add
push
cltd
in
add
mov
xchg
cmpsb
add
mov
mov
add
fs
pop
jp
xchg
pop
sti
jmp
jbe
lret
add
cld
lcall
loope
pop
jbe
add
ja
push
pop
roll
push
add
lcall
add
mov
lea
pop
pop
pop
push
lea
push
push
push
call
mov
push
fmul
pop
add
push
addr16
add
fcoml
mov
mov
loop
mov
add
movl
cltd
cld
push
repnz
mov
add
add
fiadds
repnz
mov
add
mov
aam
bound
pop
pop
pop
push
shr
sub
pop
leave
push
push
push
push
push
lea
push
push
push
lea
push
push
call
nop
mull
mov
xchg
mov
mov
fsubl
pop
add
xlat
fmuls
add
addl
stos
into
mov
fisubrl
jno
add
add
add
add
jecxz
add
cwtl
rcr
mov
lea
pop
ret
test
push
test
jae
test
jb
mov
jae
scas
push
jae
test
jae
or
jb
les
adc
sbb
xchg
mov
push
mov
mov
jp
push
loop
dec
addb
fwait
inc
mov
and
xor
data16
pop
adc
inc
adc
jb
push
dec
imul
pop
sub
cli
icebp
lea
loop
xor
popf
pusha
cmp
pop
repnz
adc
mov
pop
sbb
mov
lret
inc
mov
pop
shll
and
lea
js
xlat
insb
in
popa
mov
push
xchg
xchg
push
scas
sbb
dec
leave
mov
in
and
je
pop
xor
fs
mov
mov
xor
inc
sbb
lea
out
stos
sub
mov
add
mov
xchg
loop
nop
inc
or
mov
pop
loope
adc
fdivrl
lods
sub
sub
and
lret
sub
and
adc
inc
and
sbb
popa
mov
mov
addl
inc
pop
repnz
or
or
scas
or
ret
shll
push
aam
lods
jecxz
movb
pop
imulb
jmp
scas
pop
fcmovnu
fsub
mov
dec
jge
int
jmp
lret
and
mov
pop
bound
repz
mov
pop
adc
mov
xor
out
or
imul
int3
pop
in
xor
sub
push
pop
cmp
stos
lods
push
jge
push
std
xchg
push
mov
jecxz
mov
fiaddl
cmp
adc
mov
cmp
push
xor
xor
pusha
sbb
xchg
frstor
sbb
jge
push
jge
sti
out
mov
pop
insb
lahf
jnp
inc
andl
cwtl
fs
jecxz
rol
movsb
jp
mov
ss
adc
mov
mov
push
adc
out
pusha
jnp
sahf
dec
add
scas
jne
adc
nop
add
push
movsb
in
adc
pop
ret
mov
push
das
xor
lret
pop
cmp
stos
dec
mov
int
jnp
and
ljmp
ds
scas
and
repnz
adc
pushf
iret
add
dec
jp
inc
into
out
and
lods
lea
mov
lcall
jg
push
mov
ret
sahf
push
lods
pop
daa
xchg
cmc
out
cs
or
sub
push
ja
add
mov
adcl
xchg
pop
mov
movsb
sub
scas
jno
and
nop
aam
in
out
daa
sbb
push
cmp
lret
or
stos
nop
movups
sar
shll
xchg
mov
andl
xor
xor
subl
dec
stos
pop
popf
sub
dec
outsl
mov
pop
bound
xchg
testb
jno
lahf
ljmp
or
pop
adc
cmpb
cwtl
decb
xchg
mov
mov
jns
sbb
lock
jo
jp
fsubrs
xchg
push
movsb
outsb
popl
cli
test
push
mov
sbb
push
hlt
or
pop
pop
call
inc
jne
les
rcrb
push
int3
push
cld
jnp
and
fldenv
mov
insb
ss
mov
cmc
push
pop
add
push
icebp
mov
cmp
or
testl
or
pop
inc
in
pop
pop
xchg
mov
sub
outsb
in
fmul
popa
out
fucomi
mov
jne
dec
sti
sti
and
adc
add
jmp
movsl
sbb
add
fimull
jle
decb
sub
xor
outsl
cmp
adcb
dec
or
sbb
jmp
int
jnp
and
jae
pop
pop
xchg
ret
mov
xchg
jp
mov
add
rcrl
pop
fldenv
fnstcw
pop
xchg
inc
mov
test
push
cmc
mov
sbb
int3
fmull
xchg
sarb
daa
arpl
in
jg
push
inc
fdivl
push
jg,pt
gs
inc
add
add
push
jecxz
jp
out
mov
pop
pop
push
pushf
pop
adc
das
mov
mov
mov
in
adcl
scas
jmp
sub
sbb
fmull
push
std
pop
mov
inc
sub
xchg
xor
out
imul
push
sarl
aas
lock
popl
pop
pop
jp
mov
cmp
mov
and
fs
inc
and
dec
adc
lods
add
ret
lahf
adc
mov
mov
dec
vcvtpd2psy
shrb
fistpl
icebp
lock
in
out
int
sbb
mov
sti
out
mov
push
jns
and
sub
sub
das
test
pop
out
push
xchg
icebp
xchg
push
sbbl
ficomps
mov
cmp
iret
popf
pop
das
repnz
shrl
fsubrl
and
repnz
inc
lret
adcl
and
xchg
out
lods
mov
leave
inc
add
filds
mov
dec
outsb
movsl
pop
ja
lret
js
xor
sbbl
rcrb
and
inc
das
ret
jl
leave
adc
xchg
sbb
xor
sbb
in
aaa
mov
mov
fwait
push
sbb
adc
sar
push
cwtl
sbb
xor
outsb
mov
ret
xchg
ds
jecxz
fs
jbe
das
in
sbb
js
cli
or
cwtl
ljmp
dec
lret
xchg
push
add
pushf
push
imul
out
xorb
nop
pop
scas
int3
sahf
cli
sahf
mov
int3
dec
jl
xor
xor
shlb
cmp
pusha
mov
rorb
mov
ds
inc
rcl
pop
out
icebp
sbb
hlt
add
leave
scas
ror
popf
inc
mov
movsb
dec
jno
add
shlb
sbb
mov
jp
pop
jo
inc
inc
rcrw
lahf
dec
ret
adc
fstl
mov
push
in
pushf
dec
sub
insl
in
hlt
insb
lods
adc
orl
add
mov
in
push
cwtl
rcll
fninit
add
sub
fwait
addr16
roll
mov
cmc
mov
and
repnz
xchg
loopne
aam
daa
test
push
mov
mov
pusha
push
jg
orl
push
xorb
hlt
inc
push
sub
mov
xor
in
jg
pop
xchg
mov
insb
outsl
or
mov
aaa
inc
cmp
mov
adc
outsb
in
repnz
sub
adc
mov
xor
mov
cmpsl
mov
int
lcall
mov
ja
add
mov
push
jns
push
into
jae
lea
mov
push
add
sub
jg
sbb
rorl
stos
jge
mull
mov
push
jne
sbb
push
fst
lods
movsb
dec
or
ror
outsb
inc
lret
add
lcall
fisubl
mov
cmp
js
push
ss
ret
mov
mov
cli
test
inc
push
andl
push
push
mov
inc
fstl
pop
mov
inc
lret
and
cwtl
or
cmp
shl
push
cli
inc
cli
dec
sbb
or
orl
scas
mov
lods
mov
xor
cmp
mov
adc
jae
test
rcll
push
inc
aas
or
or
outsl
pusha
ret
fs
inc
gs
mov
push
sub
and
dec
aad
adcb
jecxz
jnp
data16
pop
ss
cmp
xor
cmp
in
incl
jl
and
jge
arpl
dec
movsl
pop
cli
xor
repnz
xchg
add
mov
or
scas
mov
aaa
ljmp
loop
inc
sub
push
pop
sti
lret
mov
mov
insl
and
aad
fiaddl
xchg
lahf
mov
outsb
add
fists
push
dec
nop
jbe
shll
mov
ss
imul
inc
cmpsb
lea
cmp
cmp
jne
jo
sbb
aad
data16
inc
fcoms
pop
imull
cli
rorb
cltd
dec
add
xlat
dec
mov
mov
dec
les
add
test
stc
outsb
xchg
pop
subl
adc
jmp
lret
cltd
xchg
fisubrs
shrb
or
jb
lea
out
shr
mov
xor
cmp
fisubs
scas
insb
out
ret
jle
mov
inc
sbb
push
dec
in
test
notl
xchg
out
lcall
pop
and
cmp
out
shll
adc
test
outsb
jg
mov
repz
mov
cmpsl
stc
inc
xor
push
cltd
sbb
push
xchg
jl
imul
dec
subl
push
out
into
icebp
addr16
and
sub
in
movsl
dec
sbb
cmp
dec
dec
out
mov
mov
dec
cwtl
daa
cmp
jle
adc
fisubl
into
std
cmp
mov
xchg
addb
sbb
xlat
cmpsl
push
in
lock
sti
push
stos
jo
pop
loopne
push
idiv
or
aaa
mov
push
fdivl
lret
jo
hlt
and
fwait
outsl
ret
mov
jle
jno
mov
or
sbb
inc
lods
js
push
jnp
sti
clc
adc
scas
fadds
in
aam
or
xchg
mov
outsb
movsb
insl
pop
shrd
xchg
mov
ja
test
jae
xchg
xor
fdiv
mov
xor
das
in
imul
cmovp
jb
cltd
xchg
jae
in
sub
fs
or
pop
cmp
lahf
out
sbb
inc
rcr
mov
or
pop
and
movzbl
add
iret
add
jb
mov
sar
pop
mov
enter
and
mov
aaa
orl
dec
cmp
push
inc
clc
sbb
xor
mov
stos
lods
leave
fistpll
dec
hlt
inc
rcr
sti
js,pt
mov
sahf
jecxz
xchg
test
mov
fbld
xor
push
hlt
repz
loop
inc
out
adc
movsl
add
sbb
int3
adc
xchg
aaa
xor
mov
lret
fsubrs
movsb
sub
adc
mov
push
or
mov
mov
loopne
std
aam
repnz
fwait
lret
pop
test
pusha
cmp
ret
jle
shll
and
and
push
fbstp
mov
rorl
add
pop
lods
scas
jbe
mov
push
das
cmp
xchg
rcl
iret
in
repnz
movsl
dec
clc
dec
jns
ror
jmp
add
repz
test
jl
and
test
and
jb
hlt
ja
push
sbb
add
stos
lahf
jns
pop
outsl
push
inc
sar
sub
aaa
or
sub
mov
jp
in
je
sub
jno
xchg
mov
dec
leave
lcall
lock
pop
lahf
push
fdivrs
mov
mov
movsl
lahf
mov
xchg
shll
ret
mov
xor
jnp
fnsave
sub
lret
stos
pop
pop
mov
sub
lcall
xchg
push
rclb
es
or
inc
outsb
mov
push
daa
push
push
cmp
icebp
mov
pop
dec
dec
nop
fdivrl
lods
mov
lret
push
imul
sub
xor
pop
or
push
sahf
xchg
inc
push
mov
insb
xor
icebp
pop
imul
sub
test
jge
or
xor
lret
aaa
and
test
in
fmull
lahf
fbstp
hlt
pop
or
dec
fdivp
into
cld
shl
push
mov
xlat
or
arpl
orb
mov
or
and
mov
mov
cli
xor
cs
loope
punpcklwd
dec
adc
sub
outsl
jmp
nop
cmp
js
push
mull
and
pop
pop
in
mov
inc
int3
je
in
or
pop
in
mov
pop
xchg
or
out
aam
lret
mov
std
pop
insb
dec
cwtl
leave
jmp
xlat
mov
loope
sbb
lock
sysenter
mov
push
xor
pop
mov
outsl
xor
pop
jns
das
jl
ret
sbb
cmpsb
push
push
mov
pop
or
sub
cmp
pop
mov
sbb
or
jbe
shl
mov
pushf
adc
arpl
xchg
ret
lds
test
repnz
enter
cmp
scas
movsl
or
xor
sbb
imul
mov
jecxz
fsubs
bound
push
and
push
rcll
aam
mov
fdivrl
and
jmp
and
add
jns
sbb
mov
mov
add
mov
mov
fs
jge
sub
lds
and
jae
inc
xlat
imul
adc
cmp
jmp
xchg
jo
push
xor
outsb
or
mov
shl
ljmp
add
adc
xchg
dec
push
loopne
mull
pop
push
out
jnp
mov
pop
shl
popa
notb
jno
repz
mov
push
mov
adc
xor
hlt
jnp
add
xchg
cmpsb
das
xor
xchg
and
ret
add
mov
cmc
or
sbbb
mov
jns
cmp
adc
out
pop
outsb
mov
jne
hlt
sti
mov
sbb
adc
out
iret
fcomps
xlat
sub
sbb
dec
dec
dec
and
popf
lock
test
rorb
mov
out
insb
mov
bound
dec
dec
mov
rclb
loopne
add
andb
mov
lea
and
sub
push
dec
xchg
std
inc
jnp
dec
jge
add
out
inc
xor
pop
shlb
test
loop
mov
pop
mov
mov
shlb
arpl
orb
pop
jns
mov
and
aaa
les
jo
int
bound
inc
test
push
adc
jge
out
fisubl
jne
fldl
lods
sbb
gs
das
xor
xchg
in
nop
scas
mov
xchg
mov
addr16
sahf
mov
fdivrs
scas
cs
outsb
fidivs
sarb
pushf
in
ds
adc
add
mov
in
pop
rorl
repnz
push
cmp
ds
or
and
mov
xor
lcall
movsl
movsl
cli
fs
lea
ljmp
stos
test
imul
dec
pop
out
mov
mov
out
pop
imull
add
les
adc
lods
inc
iret
pop
cmpsb
pop
dec
movsb
cltd
pop
dec
sbb
xchg
push
dec
and
sbb
imul
xor
dec
enter
insl
pushf
stos
or
fisubl
adc
and
in
out
mov
xor
ljmp
cwtl
subb
add
divl
dec
js
repz
xchg
pop
jnp
push
or
add
movsb
inc
into
jmp
ret
jge
jecxz
out
dec
xlat
push
mov
xchg
insl
add
and
push
adc
inc
adc
cli
or
ljmp
mov
inc
push
mov
adc
and
xchg
jp
mov
shlb
adc
sti
out
mov
mov
fisubrl
pop
mov
cltd
jbe
sub
jbe
cmpl
adcl
sbb
push
jno
and
movsb
imulb
sub
sbb
mov
inc
clc
jbe
push
pop
push
pop
jmp
or
call
mov
stos
arpl
stc
xchg
inc
xor
ljmp
lea
in
iret
hlt
movsl
add
scas
cmpsb
xor
inc
and
xchg
jmp
mov
xor
fwait
rcr
ret
push
out
and
dec
mov
xchg
pop
popf
aam
repnz
cmc
mov
and
jns
dec
std
dec
mov
lock
and
xor
lea
shl
out
sbb
pop
or
mov
into
jg
push
xor
xchg
mov
push
jbe
cld
lret
and
inc
push
int3
sub
jnp
test
xchg
mov
dec
dec
outsl
add
pop
sahf
push
shlb
or
pop
loop
jl
pop
js
push
mov
pop
sti
jp
mov
mov
into
divb
jmp
fs
mov
lcall
into
inc
jo
clc
or
push
popa
pop
cwtl
xor
jno
xor
arpl
mov
inc
bound
rcrb
or
jecxz
or
push
or
cmc
mov
add
sbb
xchg
adc
imul
xchg
inc
jb
pop
dec
jne
cli
or
fucomi
mov
pushl
popa
aam
scas
out
sti
pop
aaa
fisubl
sahf
dec
fadd
call
clc
pop
xlat
jecxz
mov
ja
stos
fdivs
jae
jmp
and
aad
divb
int
adc
fildll
outsb
mov
adc
imul
lock
cmc
push
shll
or
mov
mov
cmp
adcl
dec
inc
xchg
adc
loope
xor
mov
pop
jge
mov
sbb
xchg
mov
in
xchg
movsb
sbb
ds
and
jbe
jae
int3
mov
test
inc
sbb
in
mov
ret
inc
sbb
sub
xchg
imul
sub
loop
cld
or
pop
add
imul
pop
jae
dec
mov
mov
insb
and
dec
out
loopne
es
dec
insl
pop
loope
jae
rorl
pop
lahf
insw
shlb
adc
and
mov
cmc
jb
fs
faddl
jmp
pusha
lret
jle
adc
mov
or
int3
sahf
cwtl
out
cmc
and
daa
aad
adc
mov
bound
pop
jne
nop
add
nop
sbb
sbb
cmp
mov
xor
pop
inc
sbb
sub
mov
mov
sbb
sbb
lea
mov
ret
cmpsl
das
decl
jae
mov
sti
cmp
mov
jne,pt
dec
lock
imul
hlt
sub
dec
repnz
dec
je
cltd
pushf
mov
mov
repz
pop
clc
jle
push
test
popf
out
loope
mov
rcrl
mov
stc
fdivrs
fsubr
mov
in
in
push
sahf
sub
sbb
sbb
xlat
pop
add
fwait
mov
cmp
icebp
inc
fs
adc
dec
mov
mov
je
aaa
pop
sbb
out
lods
enter
mov
dec
fstps
add
adc
div
lahf
push
mov
dec
dec
or
pop
xchg
fstpl
cmpsb
repz
pop
inc
les
sbb
aam
push
js
cmp
xchg
divb
mov
imul
stos
dec
je
push
insl
std
jno
cwtl
clc
in
dec
addb
subl
add
iret
and
xor
inc
jp
or
inc
in
adc
cmp
cmc
adc
cli
inc
or
dec
sbb
add
sub
mov
fwait
je
imul
push
test
mov
divb
push
in
push
aam
dec
mov
imul
jb
mov
stos
movsl
sarl
scas
mov
or
jecxz
out
mov
pusha
jbe
ljmp
push
loopne
jae
dec
sahf
mov
in
or
xor
adc
vmovsd
adc
inc
mov
xchg
xchg
xor
mov
push
rcll
and
int
and
xchg
jle
lret
in
leave
inc
inc
sbb
add
xchg
sub
xchg
sub
ja
xor
pop
sub
movsl
push
or
push
adc
movsl
rcrl
mov
xor
sti
fstps
mov
insl
xchg
mov
fwait
cwtl
pop
ja
aas
scas
pop
and
aaa
jg
in
jne
or
rclb
jecxz
fs
mov
fildl
nop
mov
add
popf
out
jb
push
lock
push
fmuls
or
sbb
dec
mov
dec
or
xchg
ret
pop
imul
xlat
gs
movsb
loopne
pop
repnz
in
xchg
xorl
cltd
lods
cltd
cmp
mov
inc
inc
gs
adc
cmc
int
jg
push
cmpb
mov
rorb
rorl
xor
mov
rolb
mov
push
jecxz
mov
icebp
lret
jmp
cwtl
mov
lods
xlat
adc
outsb
clc
arpl
ds
cs
das
js
push
andb
and
push
push
sbb
int3
cmpsl
lret
pop
gs
loop
xor
inc
mov
andb
fidivrs
jae
xchg
in
xor
insb
lock
ret
ret
cmp
sbb
pop
push
pop
faddl
xor
jnp
sbbb
mov
xchg
mov
mov
sbb
mov
rcr
pop
mov
push
enter
mov
xchg
lcall
in
xchg
insl
dec
jo
xor
or
cmp
and
mov
out
or
fildll
ret
dec
fcompl
movsb
nop
jmp
out
jl
out
fwait
lods
sub
mov
dec
lahf
mov
out
add
ret
int3
adc
mov
sbb
xor
xorb
dec
xlat
adc
punpckhwd
clc
fistl
dec
out
pop
clc
xchg
test
andb
ficoms
pop
out
out
std
jle
pusha
cmp
push
dec
sbb
loopne
aad
jb
out
push
sbb
fldt
decb
sub
dec
push
fwait
addb
mov
dec
cli
jge
and
xchg
testb
enter
jg
cmp
push
mov
add
push
stc
mov
test
xchg
or
mov
mov
pop
add
jo
adc
popa
add
aam
lods
push
sbb
testb
sub
inc
push
popf
add
aas
ds
pop
cmpsb
ret
add
xor
rcrb
mov
push
sub
jb
inc
nop
sti
xor
jns
sti
or
pop
and
sub
xchg
dec
faddl
add
and
push
pop
imul
rcll
loop
sbb
imul
jg
jg
fidivrs
mov
xchg
inc
in
mov
or
add
sbb
and
xchg
or
mov
je
adc
mov
stos
inc
scas
add
mov
inc
adc
arpl
aas
inc
loope
cmp
pop
pop
inc
out
mov
sahf
or
lcall
cmpsl
jmp
fsubs
repnz
inc
arpl
pop
push
in
xchg
aam
testl
inc
sbb
into
cmpl
aam
xchg
mov
aas
and
test
add
stos
ror
cmp
fucomip
dec
cmpsb
sahf
add
jmp
fstps
leave
arpl
clc
pop
dec
xchg
cmpsb
push
ficompl
dec
aam
ljmp
mov
lret
cs
cli
adc
jo
stc
dec
enter
and
insl
inc
mov
cmp
mov
shlb
rcll
adcb
pop
fisubl
mov
adc
inc
xor
stos
daa
mov
faddl
aaa
jle
jne
mov
lods
mov
mov
insl
cli
xchg
dec
mov
inc
rcrl
dec
jne
neg
aam
dec
xchg
pop
adc
out
and
shlb
xor
mov
push
dec
imul
cmp
xchg
in
push
mov
sub
dec
add
sub
pop
mov
mov
push
cli
inc
sbb
test
hlt
out
inc
jl
push
push
or
push
popf
addr16
mov
and
filds
in
mov
fcoms
call
jne
push
mov
lods
adc
cmp
push
dec
cwtl
dec
ss
cwtl
and
shrb
pop
and
test
sub
mov
and
push
shlb
xor
add
lods
pop
cmc
adc
insl
cmpsl
jno
mov
fisttpll
mov
int
mov
mov
mov
mov
sarl
xchg
cmp
fadd
jb
and
sub
mov
mov
popa
nop
in
mov
pop
cmp
and
fstl
pop
fldt
lcall
jecxz
or
repnz
inc
dec
sar
and
inc
sub
das
xchg
push
sbb
mov
data16
push
lahf
sbb
and
dec
js
add
popa
divb
aaa
fnsave
mov
int3
adc
xchg
out
enter
mov
scas
insl
mov
xchg
push
xchg
and
add
mov
enter
push
sbb
mov
cmpsb
and
xchg
and
stos
lods
shl
sub
or
jge
shl
das
dec
sbb
sbb
shrb
call
fnstenv
les
movsb
jno
out
mov
mov
int3
fldcw
pop
aam
inc
jecxz
mov
push
xor
cld
inc
mov
mov
pop
or
mov
sbb
cmp
mov
daa
int3
xor
imul
jl
jnp
jns
mov
sub
repz
popa
leave
sbb
sahf
out
pop
scas
sbb
sbb
loop
scas
ret
test
test
out
out
addr16
and
and
or
ja
inc
outsb
test
mov
and
fldpi
pop
pop
lret
and
sub
sbb
out
popf
add
je
jb
sbb
insb
pop
cmp
rcrb
push
xchg
dec
js
or
ss
cmp
mov
dec
testb
xorb
dec
call
inc
lds
inc
dec
les
incl
jne
lret
imul
repz
cmpsb
jae
in
mov
mov
push
std
imul
mov
sti
cs
cmp
xor
inc
sub
out
insb
ss
and
sub
cwtl
and
into
mov
sub
adcl
push
jl
mov
sub
pop
or
cmp
sahf
mov
pop
es
dec
bound
lret
insb
pop
jb
jbe
add
testl
sub
mov
mov
adcl
fimull
in
int
push
out
pop
mov
mov
insb
xchg
jge
cmpsb
rolb
pop
sbb
add
mov
lea
or
mov
cmpsl
and
into
repz
or
add
lcall
mov
enter
hlt
inc
insl
out
adc
inc
xor
test
add
sub
nop
and
mov
mov
jns
fsubrl
shl
in
mov
inc
push
sbb
xorl
lret
mov
neg
repz
cs
or
and
sbb
out
push
or
std
or
int3
hlt
add
jl
pop
cmpsb
addr16
or
sarb
xor
push
jnp
test
adc
aas
dec
pop
xor
fs
sbb
add
bound
xchg
mov
lds
add
xor
mov
xchg
lds
test
xchg
aaa
sbb
pop
and
mov
dec
pop
inc
lcall
push
pop
xchg
jb
lods
cs
xlat
addl
hlt
loop
rcrb
daa
leave
es
xor
ja
fwait
clc
out
daa
xor
mov
fistps
xchg
imull
std
cltd
lock
cmc
cwtl
iret
mov
xor
outsl
xchg
pusha
xchg
mov
inc
addr16
in
loopne
ror
adc
cli
adc
mov
cld
add
shrl
xlat
das
lock
mov
jns
xor
outsb
aaa
xor
ja
or
adc
xor
jne
addb
ret
clc
jecxz
scas
add
cmp
cmp
jecxz
cmpb
jae
ja
aam
adc
cmc
fidivl
cld
or
or
inc
add
jl
dec
lcall
xor
cmp
xchg
mov
imul
fwait
mov
icebp
loope
cmp
sub
jbe
mov
into
repnz
and
pop
mov
repz
lods
cwtl
aas
cwtl
sub
pop
outsl
or
pop
imul
jl
shll
cwtl
daa
outsb
sbb
movsb
daa
mov
jg
out
cld
leave
cs
bound
in
mov
push
push
das
mov
sub
sarb
xchg
sub
xchg
movsl
jns
jmp
xchg
fcoms
ljmp
jae
les
and
pop
fbstp
ret
in
sbb
pop
cli
or
pop
pop
mov
test
mov
add
fldenv
data16
cmpl
or
loop
mov
push
xchg
js
adc
orb
int
aas
jmp
jmp
mov
inc
popf
jge
mov
mov
push
pop
aas
dec
cld
cmp
stc
pushf
mov
popf
jno
out
arpl
or
pop
and
fs
or
pop
xchg
loopne
roll
xorb
mov
fiadds
call
loopne
aas
faddl
repnz
outsb
xor
movsl
cmpsb
adc
cmpsl
inc
in
lds
cmpsb
imul
insb
shll
es
sub
stc
xor
rorl
lcall
testb
sbb
mov
adcb
push
mov
rcll
test
test
loopne
int
fcomp
repz
sub
xor
out
dec
mov
sbbl
daa
mov
adcl
mov
jnp
leave
movsl
xchg
push
rcrl
repnz
mov
or
mov
sub
and
inc
cltd
or
das
mov
dec
aaa
arpl
xor
dec
add
cmc
loop
inc
cmpsl
ja
inc
decl
cld
ret
sub
test
out
mov
mov
cld
ja
and
ret
mov
imul
fists
push
sub
mov
jns
and
lea
scas
adcb
cmp
out
mov
pop
push
dec
jb
in
and
test
xor
cmp
addr16
or
scas
lods
lock
or
inc
enter
and
cwtl
adc
xor
mov
mov
and
into
sub
sbb
loop
xor
sar
rorb
mov
shll
sub
adc
popa
inc
inc
insl
cmpsl
aaa
imul
xchg
jae
imul
stos
int3
aam
cwtl
js
movsb
call
sub
push
cmp
adc
sbb
loop
clc
mov
pop
mov
xchg
inc
dec
into
sbb
test
ljmp
not
gs
xlat
lret
jp
jo
enter
mov
dec
lret
cmp
sub
rolb
xor
iret
sub
pusha
adc
outsl
dec
and
dec
jmp
ret
sub
xor
lahf
test
xchg
jl
pop
fs
jmp
dec
faddl
sub
cli
jmp
popf
pop
inc
pop
rcll
out
xor
scas
dec
pop
jg
enter
scas
mov
jl,pn
push
stc
daa
xchg
lods
testl
jo
or
mov
jae
daa
xchg
sbb
or
or
jmp
call
mov
pop
test
out
leave
inc
repz
mov
imul
inc
lcall
push
adc
es
add
xchg
addr16
decl
scas
inc
insb
lods
inc
subl
dec
scas
sub
test
sub
jbe
enter
mov
cs
outsb
jmp
movsl
int
rcr
pop
je
gs
je
nop
hlt
int
lea
pop
repnz
mov
cmp
jo
loope
adc
mov
insb
cmp
fnstenv
cmpsb
dec
push
sub
mov
scas
jae
fisttps
sbbb
dec
outsl
fcompl
adc
mov
test
adc
mov
jmp
jne
repnz
sar
out
mov
add
add
jmp
into
mov
data16
fnstcw
cmp
pop
sbb
or
mov
mov
mov
inc
lret
movsb
mov
mov
cld
jne
pop
lock
call
addr16
je
dec
jecxz
repz
jge
lcall
cmc
mov
aam
mov
jmp
pushf
sbb
shr
lods
outsl
cmp
or
mov
push
lret
jg
out
pop
pop
push
int3
or
ret
int
adc
stos
out
mov
outsl
scas
jp
pop
inc
or
push
adc
daa
pushf
xchg
mov
adc
cmpsb
and
and
mov
mov
cli
out
mov
testl
dec
enter
jae
add
test
jge
pop
or
pop
push
scas
dec
xlat
daa
and
push
pop
je
xchg
imulb
add
imul
lret
sub
sbb
call
shr
movsb
push
xchg
sub
mov
xor
mov
enter
jno
fadds
ficompl
xchg
sub
cmp
fldenv
add
add
dec
pop
cmpsl
test
push
mov
andb
movsl
in
or
adc
mov
cmp
loopne
fmull
iret
sahf
scas
sub
fidivl
add
jno
clc
sti
nop
push
mov
gs
dec
dec
mov
jns
jno
outsb
add
es
test
mov
imul
mov
mov
out
adc
stos
filds
or
orb
es
iret
jl
dec
cmp
mov
mov
inc
dec
test
cmpsl
push
pop
hlt
jb
into
dec
in
stos
and
xchg
movsl
fsubrl
fldl
scas
add
and
sbb
dec
pusha
les
add
inc
pop
push
in
leave
adc
mov
out
arpl
pop
sbb
cwtl
jns
fxch
rcr
call
lea
pushf
dec
xlat
int3
pop
xchg
jnp
lods
xor
xor
pop
mov
inc
sub
or
pop
push
xor
pusha
pop
sbb
in
pushf
test
xor
and
fs
pop
pop
pop
stc
pop
les
lahf
std
in
push
dec
cli
dec
pop
and
mov
push
lods
xchg
push
mov
adc
movsl
lret
pop
cmp
xchg
ret
out
dec
and
pop
shrl
mov
out
cmpsb
cmp
mov
lock
mov
sub
add
pop
incl
xchg
iret
mov
js
xlat
sbb
xor
add
bnd
and
or
stos
shl
cmpsl
or
popa
xchg
cmp
xchg
imul
jb
fldt
pop
push
and
sub
aam
cmp
loope
push
aaa
out
and
xor
adc
lcall
stos
adc
dec
lret
bound
test
mov
xor
sub
aas
or
pop
adc
sti
lea
xor
mov
xchg
add
loope
scas
pop
and
pusha
shlb
or
jg
mov
jge
mov
push
repz
push
jp
js
xor
mov
inc
pop
hlt
or
inc
stc
bnd
push
aad
push
mov
cmp
call
jns
cltd
sti
data16
stos
das
in
adc
aad
mov
jmp
pop
aam
xchg
mov
ficomps
mov
fsubl
or
mov
lods
std
push
sti
and
mov
inc
in
mov
cmp
mov
cli
push
fwait
push
or
cmc
inc
aas
or
pop
imul
push
push
add
sub
xchg
lock
pop
ljmp
jo
inc
mov
xchg
push
jno
pop
mov
mov
dec
xchg
sub
dec
dec
out
xor
xor
and
xlat
push
cmp
mov
or
in
push
out
ljmp
out
dec
cmc
imul
fsubrs
push
out
jmp
mov
adcb
push
push
aam
aas
xlat
mov
popl
mov
aaa
ret
sub
dec
xchg
xor
jg
cmp
xchg
adc
repz
jg
add
pop
rcrb
int3
xor
adc
and
out
jae
cli
xchg
cld
scas
mov
popa
sub
aaa
and
lcall
or
outsb
mov
sub
push
sub
push
push
test
dec
push
and
push
outsl
mov
xlat
push
les
jg
jmp
in
sub
sub
fisttps
aad
pop
cwtl
mov
jecxz
cmp
jne
imul
jmp
push
adc
cmp
lods
dec
inc
inc
hlt
mov
popa
push
cmpsl
clc
test
push
fistps
adc
insb
sbb
cwtl
mov
fisubs
scas
out
sub
sbb
push
pusha
lods
rcll
jecxz
add
dec
pmaddwd
jns
sub
test
lret
aad
sub
lret
aaa
add
aad
inc
xor
xchg
test
mov
les
mov
jbe
dec
in
bound
psraw
roll
test
out
xor
stc
mov
fnstsw
clc
je
push
or
add
cld
ss
jge
cmp
mov
add
sbb
mov
add
xor
in
aad
add
rcr
out
mov
mov
les
mov
ffreep
push
out
or
jne
lahf
mov
ja
ffree
xor
and
pusha
pop
shlb
sahf
cmp
cltd
popa
inc
adc
add
std
imul
loop
dec
push
cmp
mov
cs
orb
sbb
add
lods
xor
pop
inc
dec
sbb
inc
or
into
faddl
insb
rcl
aas
aaa
fcoms
aam
mov
xchg
outsb
jg
dec
mov
or
pop
testl
es
hlt
cmpsl
pop
dec
dec
xchg
fldl
outsl
in
stc
imulb
pop
xor
pop
or
mov
dec
outsl
pop
push
ror
popf
push
pop
shrb
dec
xchg
fbld
aas
out
mov
jns
loop
adc
das
cmpsl
lahf
dec
mov
mov
jo
mov
call
sarb
int3
mov
push
dec
cwtl
add
adc
push
clc
inc
into
push
cmp
mov
and
jns
dec
push
sbb
pop
inc
mov
movsb
or
mov
ret
repz
add
mov
jo
push
mov
lea
and
pop
hlt
xor
outsb
lret
jno
movsl
cmp
adc
roll
mov
jle
loope
leave
orb
add
or
enter
adc
imul
pusha
or
int3
lcall
mov
in
rcrb
xor
adc
sub
jl
dec
imul
cmp
xlat
jmp
jnp
dec
cmp
mov
in
mov
mov
in
push
arpl
ret
pop
pandn
dec
xchg
test
orb
xchg
pop
dec
jne
enter
add
hlt
sbb
imul
jmp
aad
mov
test
push
mov
xchg
cwtl
fisttpll
jge
dec
pop
lea
movsb
fiadds
lds
xchg
daa
out
out
and
loopne
dec
leave
xlat
andl
pop
notl
cmp
or
and
mov
es
push
xchg
loop
cmp
mov
das
daa
aam
fs
shlb
mov
outsb
mov
outsb
sub
mov
in
lahf
cmp
movsb
roll
daa
inc
mov
cmp
je
es
int3
xor
inc
cli
hlt
xchg
adc
sub
jp
pop
push
fiadds
cli
jo,pt
outsb
lods
and
inc
stc
sti
adc
daa
or
mov
je
testb
and
andb
xchg
sub
mov
jo
pop
jg
mov
mov
cmp
rcrl
jo
shl
xchg
add
push
inc
pop
pop
add
pop
loop
pop
mov
fildl
dec
pop
sub
lahf
cmp
ret
mov
push
cmp
test
mov
sub
sub
divl
gs
enter
stos
lods
jns
xor
shl
add
rolb
sbb
lret
dec
sbb
and
aaa
incl
mov
arpl
dec
shlb
mov
shll
push
push
mov
int
js
mov
and
movsl
sbb
add
bound
pop
push
imul
push
ds
pusha
daa
test
out
enter
testl
loop
mov
or
enter
mov
jmp
adc
xlat
aaa
ljmp
movsl
fiadds
xchg
iret
xchg
lods
adc
rorl
shll
or
lret
lds
sub
pop
pop
dec
fs
cmpb
sbb
jbe
lret
mov
push
xchg
std
clc
ja
bound
jg
fsubs
add
adc
jmp
fildl
sti
xor
xchg
daa
jbe
rorb
ret
icebp
sub
add
iret
and
lret
jne
iret
push
sbb
pusha
sub
xlat
in
xchg
xchg
fadd
cmpsb
adc
jns
jne
pop
and
mov
out
fisubrl
mov
lods
dec
adc
mov
pusha
pop
repz
mov
pop
stos
nop
cmp
and
mov
dec
outsb
jnp
push
jo
and
ds
out
cli
xchg
outsb
or
inc
add
sahf
and
cmp
cs
es
xchg
outsl
test
mov
dec
jmp
xlat
push
cmp
test
cltd
mov
and
movsb
pop
cmp
sbb
sbb
out
add
and
aaa
aaa
sub
mov
stos
popa
ror
movsb
pop
mov
dec
mulb
adc
pop
rorl
movsb
stos
ret
mov
in
cmp
inc
pusha
cld
mov
cmp
jg
or
nop
aas
insb
push
cmp
mov
and
inc
mov
dec
shl
mov
call
decl
jnp
lret
ret
and
cmp
out
xchg
mov
repnz
mov
leave
daa
cmp
push
lahf
push
sub
fisttpll
mov
ret
fsts
addl
fidivs
hlt
popa
inc
xor
pop
push
push
out
shlb
xor
jg
pop
pop
xchg
fwait
or
rcll
or
push
je
test
shrb
jg
pusha
mov
xchg
or
xchg
bound
pop
in
push
aam
and
lods
mov
out
xchg
cli
and
lds
push
mov
cmpsb
shrb
push
out
adc
in
sti
inc
xchg
jno
ja
adc
imul
lods
cmc
aad
push
xchg
and
mov
adc
mov
push
cs
in
jae
pop
mov
pop
mov
pop
movsb
jb
cmp
and
and
ss
aas
push
out
mov
mov
outsl
popf
retw
ljmp
adc
mov
cmpsb
sbb
dec
inc
xchg
sbb
sbbb
dec
mov
jne
cmp
xor
mov
scas
or
pusha
shll
sub
adc
sub
push
fcmove
xor
ljmp
imul
mov
mov
or
jle
cmp
clc
sbb
dec
jmp
fiaddl
dec
fs
stos
jge
pusha
sub
ret
ss
pop
adc
aaa
add
pop
icebp
sub
popf
adc
iret
rol
shrb
imul
fildll
push
das
mov
push
daa
sub
dec
repnz
ss
add
jno
mov
jg
push
add
into
test
adc
fucomip
lcall
mov
ljmp
sbb
cmpb
pop
xchg
cli
inc
cmp
ja
dec
push
ror
jg
cmp
out
lret
inc
pop
dec
lret
fidivrs
stos
adc
jnp
loope
mov
xchg
fs
daa
sbb
scas
loopne
and
lods
ficomps
add
shrb
ss
mov
outsl
cmpsl
dec
adcl
fildll
jecxz
insl
or
dec
xlat
dec
sub
shll
jnp
icebp
fisubrs
mov
sub
push
pop
jnp
inc
mov
ss
fstpl
insl
xorl
add
das
jp
mov
jp
sbb
jl
imul
jecxz
mov
out
sub
xchg
cltd
sub
mov
mov
repz
cld
into
add
sub
dec
sub
lea
aas
dec
test
inc
lods
int3
mov
mov
inc
pop
pop
icebp
popf
adc
add
adc
jbe
mov
mov
jge
aam
es
mov
outsb
loopne
sub
dec
mov
xchg
sbb
loop
aam
mov
xchg
and
fildll
xchg
pop
jnp
pop
rorb
inc
xor
mov
sbb
clc
mov
mov
leave
push
jmp
jbe
pop
icebp
push
cli
daa
int3
cmp
and
je
adc
aas
mov
cmp
shll
loopne
mov
jns
loop
adc
testl
insb
aam
inc
push
xchg
test
add
rorl
cmp
or
inc
pop
out
shlb
mov
xorb
mov
add
bound
lods
jmp
mov
or
and
push
sub
ficomps
mov
enter
jmp
mov
inc
mov
aas
outsl
sti
iret
jbe
insb
icebp
xor
xor
imul
loop
jecxz
push
dec
xor
out
mov
or
push
and
mov
arpl
jnp
mov
repnz
out
jo
mov
add
sbb
inc
sarl
push
or
ret
outsl
mov
mov
vpshlb
jecxz
in
lcall
and
adc
add
into
mov
adc
push
and
mov
sbb
cmp
js
cmp
or
mov
cli
std
pop
adc
iret
jb
ficompl
mov
push
or
jle
jbe
cmp
cld
cmpsb
rcrb
pop
cli
rcrl
dec
arpl
inc
jne
into
sbb
xor
jnp
mov
in
mov
or
inc
ffree
push
sahf
es
pop
add
push
push
subl
lahf
daa
xchg
xchg
leave
jl
xor
fcmove
and
adc
and
mov
adc
add
aas
std
mov
test
xorb
dec
mov
sbb
cmpsb
push
in
add
push
fistl
jmp
in
movsb
insl
sub
xchg
push
cmp
jge
jnp
add
ficompl
rol
or
mov
or
lods
sbb
cmpsl
inc
inc
add
outsl
leave
xchg
mov
xchg
mov
dec
sbb
pushf
pop
lcall
out
dec
cmpsl
adc
xchg
scas
jecxz
cmpb
adc
adc
jp
icebp
cmpsl
subl
jo
mov
inc
adc
push
cmp
adc
out
inc
pop
inc
push
mov
aaa
lahf
movsb
pop
sub
in
shr
add
mov
sbb
pop
adc
lret
sub
test
mov
mov
addb
push
jno
add
movsl
das
sub
xor
ljmp
orb
insl
ret
dec
xchg
or
mov
or
repz
push
int3
popf
xchg
call
insl
lret
sub
in
lcall
movsb
fs
lret
add
xor
push
adc
scas
mov
sub
clc
adc
mov
add
or
ds
je
inc
dec
mov
je
jnp
ss
xorb
and
and
inc
xchg
cmova
mov
pop
inc
jg
addr16
inc
stc
add
js
dec
subl
mov
arpl
stos
jo
and
inc
adc
pop
sbb
add
push
cltd
scas
loope
sbb
pop
pop
cli
lods
cltd
or
inc
jae
imul
dec
cmpsb
dec
leave
sub
mov
movsb
fisubrl
push
cmp
add
lea
adc
sbb
popf
inc
ret
stos
mov
mov
and
out
inc
std
out
sbbb
mov
push
in
cmp
stos
out
pop
or
cmp
mov
mov
lods
rorb
repz
jb
fimull
or
fdivrl
cwtl
lcall
or
pop
jge
xor
hlt
add
test
pop
push
pop
nop
repz
xor
jbe
dec
loop
imul
pop
aas
iret
ficomps
ljmp
dec
sbbl
test
or
mov
aad
mov
ljmp
cmpl
dec
imull
lea
dec
ret
jo
add
push
pop
movsb
popf
mov
pusha
sub
clc
iret
sahf
pop
decl
mov
dec
pop
inc
xchg
and
xchg
test
pop
xor
add
imull
xchg
addb
mov
and
add
xor
adc
pop
xchg
js
xor
and
adc
add
orl
scas
adc
lret
and
xchg
outsb
pop
stos
and
cltd
stc
test
sub
fisttpl
arpl
cld
mov
pop
mov
stos
cmp
fidivl
call
pushf
pusha
dec
mov
push
in
insb
inc
stos
cmpps
xchg
les
sub
loop
imul
xchg
sub
mov
test
cmc
add
leave
mov
sub
mov
mov
jmp
add
cwtl
cmp
inc
xor
shl
movb
fadds
popa
out
imul
dec
ret
std
mov
mov
mov
repz
cmp
pop
fucom
or
cmp
and
inc
push
and
repnz
xor
addl
mov
push
mov
jae
movsl
imul
cmpsb
xor
mov
mov
arpl
push
fnstcw
push
adc
es
dec
xor
gs
sbb
pop
es
mov
cmp
xchg
aad
pop
cmp
push
lods
xchg
pushf
or
inc
ljmp
cmpsl
cmp
aas
lret
cmpsl
pusha
push
jge
pop
push
les
sbb
into
inc
pop
or
sub
sar
bound
sub
pop
pushf
test
push
adc
subb
andb
adc
add
cmp
movsb
inc
nop
dec
pop
inc
and
test
sub
pop
cmp
jecxz
pop
jge
xor
insb
and
push
gs
jecxz
xchg
mov
arpl
cli
mov
out
stos
xchg
pop
cmp
jno
cmpsb
pop
add
pop
adc
adc
scas
ljmp
je
xchg
cmp
dec
std
aad
mov
pop
and
mov
cmpsb
hlt
sub
lcall
insb
adc
jge
add
xchg
cmp
push
shl
ffreep
sbb
movsb
scas
push
push
lcall
in
mov
xchg
int3
push
sbb
xor
sub
adc
in
fnsave
sub
addb
aad
mov
mov
xchg
insl
scas
sbb
inc
sub
es
cltd
mov
int
adc
insl
sub
add
lods
and
ret
stc
xchg
or
pop
sbb
xchg
cmp
lret
in
push
jnp
cmc
icebp
pop
jp
inc
sahf
push
xor
dec
aaa
out
xchg
lods
or
lods
or
pop
add
jge
mov
mov
push
rclb
out
loop
int3
call
mov
dec
stos
shrb
iret
popa
pop
mov
into
loop
dec
in
push
enter
mov
mov
in
or
adc
mov
push
lret
push
bound
xchg
test
xchg
fnstenv
dec
jae
inc
xlat
push
jne
cmpsb
imul
jecxz
stos
out
mov
mov
call
shll
fs
jmp
push
jne
cli
mov
sbb
decb
mov
pop
stc
call
popl
mov
or
je
mov
call
push
or
or
shll
xorl
jnp
jge
jno
adc
and
aam
aam
sbb
xchg
push
cs
cld
mov
ss
adc
push
xchg
mov
push
das
xchg
ficomps
cwtl
push
fistl
out
adcb
lahf
inc
add
add
push
cmp
jg
lods
sahf
fisubs
jmp
pop
jmp
sub
lcall
mov
cmpsl
xlat
mov
subb
test
add
ja
mov
int
cmpsl
rolb
inc
ret
xor
out
mov
shlb
test
nop
lcall
mov
mov
jg
cmpsl
fidivs
mov
xor
push
loope
mov
ret
test
adc
stos
dec
sub
mov
xor
out
cmp
push
cmpsl
movsl
jns
cmpb
loope
mov
hlt
sub
out
mov
mov
sub
and
adc
mov
outsl
or
adc
mov
cwtl
xlat
cmpl
mov
dec
sub
push
sub
lret
sub
or
movsl
or
imull
iret
add
mov
jge
cli
xor
fisubl
cmpsl
mov
sbb
mov
xor
lods
loope
mov
mov
add
or
mov
mov
adc
cmc
ljmp
aad
dec
push
adc
aas
fistps
fwait
ljmp
in
pop
jmp
mov
mov
std
cmp
stos
pop
mov
out
or
inc
mov
popa
add
sbb
sub
push
lock
shrl
jge
dec
mov
jne
leave
loop
xchg
loop
inc
or
pop
call
xor
xchg
mov
enter
cmp
repnz
jo
int
fnstenv
xor
xor
or
and
jne
int
scas
sub
cmp
adc
out
sub
lods
xor
das
sarl
rolb
push
xor
arpl
or
xor
in
sbb
push
lods
cld
ljmp
inc
je
or
push
sbbl
je
mov
xchg
add
inc
or
mov
push
sub
mov
loope
jp
lea
mov
lcall
xchg
test
fcompl
sar
adc
test
ja
ret
push
mov
int3
xlat
pop
pop
or
loope
pushf
jle
mov
ret
adc
and
mov
cmc
sub
fistpl
sbb
push
out
sub
and
cmp
jg
add
or
std
mov
fs
les
mov
dec
test
or
dec
xchg
insl
popf
sahf
cltd
movsl
out
mov
pop
mov
jb
xorl
or
mov
insl
call
out
stos
push
cld
xchg
xor
mov
pop
inc
popa
sub
or
adc
push
xchg
sbbb
inc
lds
pop
lods
jb
outsb
push
cli
pop
sar
cmpb
fdivs
jns
cs
mov
sbb
mov
jb
mov
fimull
scas
pop
movsl
stos
in
pop
lods
mov
icebp
pop
aad
in
shrl
pop
sbb
push
and
cmpsb
xchg
arpl
dec
mov
pushf
test
aaa
or
addl
pop
es
fiadds
ds
lret
adc
in
iret
mov
outsl
mov
outsb
std
mov
rcrb
into
test
outsl
fdivl
test
jno
aad
jne
and
mov
adc
je
imul
out
repnz
cs
leave
or
inc
and
loopne
jnp
jecxz
fadds
push
cmpsb
lods
jp
sub
ds
add
mov
lcall
ret
xor
xorb
loopne
loopne
mov
mov
cmpb
cmpsl
fdivrl
push
jne
mov
in
inc
das
mov
sbb
inc
dec
fiaddl
or
inc
inc
inc
hlt
mov
sbb
test
aam
movsl
enter
xor
shlb
jnp
arpl
or
push
fucom
pop
in
pop
mov
bound
leave
cmp
pop
lock
push
stos
sub
xor
xchg
push
push
testl
push
aam
mov
add
pop
movsb
mov
mov
jns
xchg
popf
and
gs
nop
jae
aas
inc
scas
mov
jg
and
adc
add
inc
lock
pop
sub
sbb
jecxz
mov
std
jg
sbb
shrb
mov
aas
ljmp
rcrb
mov
sub
pop
daa
loope
inc
cmpl
xor
sahf
lcall
mov
push
jbe
dec
aad
xchg
jl
cmp
ret
add
mov
std
xchg
push
push
mov
fwait
test
adcb
jecxz
xchg
sub
jle
aaa
cmp
jnp
xchg
cltd
pop
mov
xlat
insb
mov
adc
ret
mov
mov
into
dec
pop
daa
andl
adcl
ljmp
cld
rolb
rcr
sbb
cmp
ret
and
mov
mov
cld
mov
sahf
jg
jl
cs
lods
push
jae
mov
mov
cmp
inc
dec
jle
fs
pop
add
sbbl
into
cmp
mov
sub
add
lcall
push
or
xchg
jecxz
addr16
in
pop
fs
adc
or
inc
call
jns
cmp
sub
sub
push
test
sbb
fimuls
popf
jo
adc
adc
lock
fcmovbe
int3
sub
xor
push
clc
jb
or
jo
lret
ss
sbb
mull
inc
cli
mov
mov
and
negb
adcl
jnp
jns
js
enter
push
mov
dec
popa
stos
dec
or
cmp
xor
xor
jne
jecxz
xchg
test
or
sbb
aad
mov
aas
mov
cwtl
test
cmpsl
lret
popa
dec
pushf
sbb
sub
test
pop
imul
loop
mov
mov
rcrb
adc
jns
pop
dec
xor
pop
xor
repz
cmp
pop
cs
pop
out
cwtl
movsb
add
dec
adc
xchg
lret
dec
sbb
ret
in
negl
or
sbb
cmp
flds
das
clc
push
push
jl
mov
jne
pop
loop
inc
lea
or
test
mull
dec
in
imul
jp
adc
mov
jne
mov
xor
subb
imul
cld
pop
lock
shlb
rcr
push
pop
dec
lahf
fstl
sbbl
dec
xchg
daa
pop
cwtl
inc
mov
xchg
pusha
inc
cwtl
xlat
mov
inc
jl
pop
iret
dec
mov
pop
adc
je
icebp
movsl
or
shr
scas
sub
jns
sub
mov
test
xchg
mov
je
xor
dec
mov
hlt
loope
fstl
stos
imul
add
in
lods
inc
int
push
xor
fwait
mov
pop
mov
or
test
aad
pop
imul
cmp
fwait
dec
jmp
sbb
add
sbb
sub
push
inc
xchg
data16
dec
mov
cmp
mov
fistl
cmp
pop
out
jge
mov
imull
mov
insb
loope
xor
or
pop
insb
and
bound
jne
or
dec
sbb
insb
or
aam
lock
xchg
mov
add
orb
xor
js
nop
adc
mov
into
pushf
xchg
cmp
jno
aas
cmp
push
or
adc
jmp
sbb
shrb
nop
sub
mov
mov
dec
push
sbb
sbb
stos
jo
add
dec
cmp
inc
jb
xor
adc
mov
cmp
shll
cs
push
icebp
insl
in
in
repz
rolb
jmp
adc
popl
pop
mov
jae
and
stos
dec
pusha
xor
scas
mov
cmp
inc
add
mov
je
out
xchg
imul
and
xchg
dec
jl
sub
jp
pusha
push
mov
sbb
int3
movsb
lods
mov
xor
cwtl
sarb
shll
sub
subl
xchg
adc
aas
inc
out
sub
xchg
aam
lcall
data16
and
in
push
sub
cli
out
jnp
test
bound
cld
mov
outsb
cmp
dec
or
adc
pop
and
inc
fisttps
in
pop
inc
loope
cld
fst
xor
test
pop
jmp
cmpsb
popa
or
imul
fcomi
pop
xor
mov
and
xor
and
jne
ret
call
test
sbb
add
clc
xchg
mov
pushf
pop
mov
shll
xchg
jne
sub
push
ret
inc
xchg
adc
test
lds
sahf
pop
ljmp
das
add
orl
cmc
fdivp
mov
adc
push
cmp
sub
or
mov
aaa
adc
mov
ljmp
test
mov
mov
xchg
and
mov
sub
push
dec
adc
inc
jbe
rorb
lret
std
adc
adc
jmp
js
por
inc
add
inc
fadd
daa
mov
inc
push
mov
mov
pop
mov
aaa
mov
shl
jmp
fimuls
xchg
pop
sbb
mov
cmc
and
std
inc
repnz
mov
push
xor
xor
mov
pop
inc
fmuls
sahf
xchg
add
cmp
mov
mov
adc
aad
movsl
cwtl
insl
mov
lods
jns
jmp
lcall
scas
mov
addb
test
stos
repz
adc
sbb
pop
or
mov
inc
fnstcw
push
jp
js
mov
test
pop
mov
push
in
sbb
lcall
aam
inc
cld
and
push
inc
bnd
pop
repnz
push
imul
inc
mov
in
sbb
lea
dec
ds
cmp
shll
lcall
repz
cmp
out
mov
push
push
xchg
pop
lret
inc
sarl
jno
in
or
dec
mov
imul
clc
je
mov
pop
xchg
add
sbb
push
sarl
leave
lret
dec
push
or
out
push
pusha
es
or
pop
sub
fildll
aaa
mov
jmp
pop
xchg
into
pusha
lcall
jmp
adc
lret
jmp
lea
xlat
arpl
adc
cmc
ja
pusha
jmp
dec
xchg
or
dec
inc
inc
xchg
jns
dec
jo
inc
ret
or
lods
mov
push
insb
push
movsl
outsl
pop
mov
inc
movsb
xor
cmp
pop
jno
ret
test
add
int
mov
das
mov
dec
ds
shlb
pop
add
mov
jg
subl
add
sub
stc
mov
fisttpll
dec
fildll
into
adc
cmpsb
mov
stos
addr16
push
shrl
aad
sub
dec
pop
cmpl
stos
xor
aas
mov
add
jp
adc
sahf
popa
inc
xchg
push
pop
add
cmp
scas
adc
lret
jns
or
fnstsw
sub
xchg
js
cwtl
in
pop
stos
xchg
xchg
rep
lcall
mov
jl
stos
mov
sti
adc
cwtl
xchg
push
out
pop
repz
xlat
fcom
lret
lahf
sbb
lods
mov
push
mov
sub
cmp
das
outsl
push
adc
les
negb
sbb
popf
push
sti
jge
cltd
inc
xchg
mov
in
mov
dec
faddp
xchg
rcl
call
sti
push
loope
loop
mov
aad
out
loopne
adc
jne
or
fstl
add
call
pop
mov
aad
adc
out
mov
cmp
add
fisubl
jns
push
mov
inc
push
jo
lea
or
mov
testl
fcoms
jl
pushf
mov
jno
inc
dec
push
hlt
pop
xor
fnstenv
pop
int
sbb
push
js
dec
notl
or
lea
fisubs
mov
inc
add
cmpsb
mov
out
ficoml
sub
rcl
cmp
push
loope
cltd
nop
mov
in
lret
xchg
flds
loopne
setl
xchg
or
lds
mov
ljmp
jecxz
rorb
jmp
xchg
adcb
fidivl
inc
cmp
jmp
cmp
pop
sahf
lods
dec
add
inc
js
jbe
adc
mov
mov
loop
pop
xor
lea
sub
sti
dec
jp
mov
call
adc
inc
aas
lods
dec
sub
xor
imul
lods
mov
pop
mov
inc
xchg
sub
dec
repnz
xchg
fs
cli
mov
xchg
xor
scas
imul
shr
xchg
mov
add
xchg
insl
int3
leave
scas
push
and
cs
dec
das
sahf
dec
mov
xor
xchg
cmpsb
mov
inc
push
push
repz
stc
xchg
push
ret
movsb
icebp
adc
icebp
jecxz
jns
hlt
mov
repz
orb
movsb
call
adc
cmp
lods
add
xchg
stos
js
dec
iret
mov
popf
lds
ret
cmpsl
sbb
dec
inc
nop
popl
inc
jno
push
push
not
push
cmc
or
pop
pusha
sahf
pop
sahf
lahf
fstps
repnz
jg
mov
dec
sub
adc
xchg
sti
adc
xor
negl
sti
mov
add
lods
mov
sbb
push
ljmp
jo
imul
lret
sbb
orb
imul
add
ja
xlat
sbb
addb
lods
dec
and
push
adc
sbbl
ljmp
bound
add
popf
and
shl
fs
pusha
inc
xchg
sbb
mov
jg
pop
les
adc
loope
jbe
and
xor
aam
in
push
adc
shrb
cmpl
push
adc
stos
clc
dec
inc
lea
push
repz
shrb
fisubl
sbb
adc
pop
add
das
movsb
fimull
jg
mov
mov
xchg
sub
outsl
fisubs
sti
lret
lret
aas
add
repnz
xchg
dec
lret
ret
movsb
mov
dec
sbb
push
decb
lret
leave
adc
imul
fxch
add
sbb
movsl
mov
adc
mov
pop
xchg
int3
fmulp
jnp
fidivs
xor
inc
jo
and
jge
pop
out
mov
push
and
fidivl
stos
xchg
jae,pt
iretw
sarl
aam
push
sbb
mov
sub
mov
pop
or
fcompl
pop
add
inc
xor
repz
cmp
jns
lds
mov
xchg
lock
cmp
je
rorb
mulb
inc
xor
mov
movsl
adc
dec
test
sbb
add
ficoms
cli
jbe,pn
mov
dec
xor
pop
mov
adc
scas
and
cmp
add
add
outsb
outsb
or
add
sbb
mov
fcomi
push
sbb
sbbl
mov
lret
sti
mov
push
mov
xor
mov
lahf
gs
mov
cltd
xchg
cmp
pop
je
inc
fstp
push
les
push
or
int3
into
fwait
stos
addr16
adc
aam
sarb
xchg
cmp
pop
and
mov
rcrb
xorl
xor
jb
adc
pop
cmp
les
mov
lret
mov
mov
scas
data16
lea
fs
outsl
adcb
push
loopne
out
rolb
mov
insb
push
lcall
mov
jns
ja
lea
inc
or
test
rep
pushl
mov
mov
pop
pop
in
int
xchg
inc
dec
out
adc
add
xchg
repz
and
add
xchg
je
into
dec
shrl
lods
pop
and
and
or
popa
xchg
popf
mov
sub
dec
jecxz
aad
jns
jp
pop
fldt
xchg
outsb
call
ror
adc
pop
jo
dec
into
fbstp
cli
daa
jo
push
cmp
shrb
movsl
mulb
fs
aaa
js
or
loope
cltd
lcall
fcmovbe
mov
nop
in
in
mov
and
flds
insl
mov
cmp
xchg
loop
js
mov
jge
add
ret
mov
and
push
test
jp
dec
inc
mov
xor
aam
jge
std
jecxz
cmp
sub
jle
das
dec
test
cmc
push
mov
sub
lcall
jecxz
addr16
xlat
mov
jo
cmp
cmp
shll
and
mov
inc
rcrl
sahf
bound
mov
adc
mov
adc
dec
dec
mov
daa
std
cmc
out
adc
inc
getsec
sbb
add
mov
scas
pop
jnp
mov
adc
stos
inc
sub
lret
jp
jge
int3
addl
insb
dec
pop
pop
scas
je
imul
dec
test
fimull
les
jecxz
mov
cmp
cli
jbe
ja
subb
pop
pop
add
mov
ja
jae
lcall
notb
inc
cmp
das
orb
xchg
pushf
jno
andl
xchg
jge
in
andl
sbb
fidivrl
and
pop
add
jl
pop
or
xlat
lcall
cltd
sbb
scas
lea
sti
popf
mov
jno
pusha
popa
mov
test
xor
enter
dec
mov
mov
shl
les
and
fisttps
cmc
jg
rolb
cltd
into
cwtl
movsb
sahf
test
adc
adc
mov
xor
shr
shll
mov
outsl
dec
mov
fs
shll
sub
aam
push
hlt
pop
add
jg
mov
pop
sahf
out
loopne
cmp
push
xchg
cli
mov
arpl
ret
xchg
jp
cmp
aam
push
add
adc
sbb
mov
shl
lcall
mov
cmp
jmp
sti
into
dec
fwait
cld
pop
xchg
bound
out
shll
or
in
subl
cmp
push
add
sub
mov
stos
cmp
push
ret
dec
adc
int3
jl,pt
push
aas
aam
push
xchg
daa
mov
gs
push
cs
sbb
imul
jmp
cmc
rcl
push
fcomp
xchg
xchg
xor
adc
dec
cmp
ljmp
mov
push
pop
insl
add
cmp
movsb
and
inc
mov
xor
sti
jns
push
lret
pop
xor
mov
xchg
or
ficoml
jl
add
call
mov
data16
clc
ljmp
jle
jmp
out
imul
stos
mov
cmc
imull
das
mov
xchg
stos
js
es
mov
lock
lock
aad
rcll
push
imul
cwtl
daa
mov
daa
mov
shll
lock
cmp
inc
lea
loop
lcall
pushf
or
shll
stos
and
out
inc
outsb
je
and
or
movsl
outsl
repnz
xchg
push
jbe
mov
push
jmp
ficompl
mov
inc
xchg
jle
push
lret
xchg
cmpb
sti
pop
or
mov
sub
or
loop
xchg
test
pop
sbb
mov
mov
fimuls
cli
push
shlb
jg
push
and
repz
xchg
insl
fdivs
xchg
icebp
inc
mov
insb
lock
int
loopne
ljmp
js
or
add
push
divl
pop
fiaddl
fst
push
je
movsl
or
mov
fildll
xchg
ja
cmc
insb
xchg
lcall
dec
fmulp
aaa
dec
rol
adc
xor
push
mov
or
pop
push
jg
dec
jae
cmp
and
lds
dec
and
pop
mov
dec
mul
xor
loope
and
dec
cmp
sbb
jecxz
pop
js
mov
cmovl
ds
mov
pop
fidivs
push
decb
mov
iret
sbb
je
loope
icebp
out
into
adcb
insb
data16
jl
sbb
push
mulb
xchg
stc
xchg
mov
popf
jo
sub
mov
aaa
inc
outsl
mov
push
call
fimull
fidivrl
lods
movsl
add
movsl
shlb
xchg
jb
mov
or
jno
add
loope
jmp
sbb
or
xor
addl
aam
push
mov
ret
jb
loopne
fldenv
out
mov
mov
addr16
inc
mov
test
scas
inc
inc
dec
sar
subb
jmp
loop
aaa
adc
push
xchg
push
incl
and
lea
dec
mov
push
leave
mov
adc
cmp
mov
xor
int3
cmp
pusha
mov
sbb
jmp
pop
xchg
dec
xor
jge
insb
out
push
mov
in
dec
push
andl
mov
push
push
add
mov
jae
fisubl
call
or
add
add
or
mov
add
jb
js
int
push
mov
xor
or
xor
enter
cmp
icebp
loop
je
or
mov
xchg
fwait
addb
into
dec
loop
add
sahf
jecxz
sahf
mov
or
mulb
out
iret
lods
repnz
add
sahf
shl
out
out
cli
outsl
or
mov
jno
ret
jne
mov
aad
test
test
dec
filds
jae
in
cmpl
sbb
xor
mov
inc
jne
and
push
sbb
jmp
cltd
incl
mov
mov
ret
daa
fmuls
and
int3
addb
cltd
adc
pop
xor
pop
les
lret
jno
sahf
push
sub
les
nop
sbb
cmc
mov
loopne
adcl
sub
clc
jno
js
repz
int
cmp
xor
lea
mov
add
mov
or
jg
fidivrs
cmp
mov
stos
cmp
push
cmp
inc
clc
jl
fmuls
mov
cmp
testb
and
cmp
inc
pop
loopne
push
in
cmpl
add
cmpsl
fstl
mov
push
pop
cwtl
das
negb
and
add
ja
fs
in
int
lods
sub
mov
xor
lret
sub
or
jecxz
loopne
inc
shll
pop
inc
or
fbld
cmpsb
stc
cmc
aaa
push
stos
or
in
insb
test
push
cmpsl
popa
cmp
xor
mov
mulb
aam
cmp
nop
jb
pushf
or
mov
cmp
jp
hlt
add
sarl
enter
push
xorb
lock
jle
pushf
test
test
aad
dec
push
xchg
insb
lds
xchg
ret
jb
mov
jbe
dec
sbb
std
insl
xlat
cmp
push
in
adc
fs
sbb
in
mov
pushl
push
xlat
sbb
jne
or
push
in
and
xchg
pop
jnp
jbe
jnp
mov
lcall
push
sub
cmp
ret
insl
mov
mov
sub
adc
stos
push
push
out
stos
push
incl
pop
adc
sub
mov
dec
das
aaa
movsb
mov
jge
fildll
and
int3
pop
or
push
add
int3
lods
and
and
jg
mov
js
cmc
ficomps
fwait
jnp
scas
scas
clc
test
sub
dec
add
sub
push
jo
test
loopne
aas
sbb
pop
adc
push
into
push
xor
arpl
out
pop
ja
in
push
mov
pusha
jns
daa
add
push
jmp
pop
sbb
sahf
dec
cmp
pop
das
popa
xor
aad
insb
and
mov
sbb
test
std
in
and
pop
inc
push
mov
mov
mov
cmp
ss
insb
jo
cmp
sub
negl
xor
les
cmpsl
rorb
and
out
inc
sti
mov
push
imul
ds
scas
add
lahf
stc
fnstcw
jne
xchg
dec
lret
stc
mov
les
and
push
sbb
sbb
dec
mov
jge
mov
pop
inc
es
sbb
cmp
mov
stos
adc
movsb
sub
sti
add
pop
clc
pop
mov
sub
cs
imul
test
lahf
cmp
jnp
insb
cmp
or
xchg
and
mov
sbbl
cwtl
inc
mov
jmp
mov
dec
mov
ret
aad
add
mov
dec
scas
sahf
inc
sbb
dec
insb
jmp
or
test
fnstcw
repz
xor
inc
push
mov
fistl
jmp
push
test
std
fdivs
mov
cld
add
push
and
cmp
jno
and
add
sbb
jmp
movsb
inc
fistpll
out
jl
in
lahf
into
adc
insl
add
pop
insl
sub
in
pop
sbb
jns
mov
cmp
ret
xchg
js
mov
cmp
insl
cld
lret
insl
sbb
push
add
jbe
inc
jle
shlb
sub
aas
test
lds
lods
imul
mov
jbe
mov
add
pop
lock
or
inc
popa
push
adc
in
mov
fsubs
int3
gs
jl
into
or
xor
pop
mov
popf
icebp
push
inc
movl
push
cwtl
cmp
in
jne
sub
inc
or
mov
mov
lea
mov
jbe
mulb
pop
pop
mov
dec
pop
lcall
xchg
push
lods
jns
sahf
sub
stos
mov
fs
add
pop
rolb
stc
rclb
jp
mov
daa
jge
cltd
mov
pop
push
lock
xchg
sti
sbb
xor
cwtl
push
icebp
int
dec
popa
add
and
sbb
aaa
sub
pop
push
test
xchg
or
divl
add
jg
pop
in
jno
dec
aad
add
xchg
sbb
mov
sbbl
jne
lods
lea
icebp
xor
or
inc
mov
xor
adc
pusha
addr16
pop
jne
movsb
popl
dec
test
inc
insl
lcall
sbb
insb
imul
dec
cmp
mov
cltd
xchg
call
push
dec
pushf
sbbb
ds
ss
into
or
mov
pop
repnz
ja
or
lock
add
leave
cmp
and
shll
fld
out
enter
jns
mov
or
movsb
movsl
sbb
out
push
xchg
outsl
in
dec
jbe
pop
fsubrs
mov
fwait
sbb
lret
stc
push
mov
lock
push
xor
dec
in
je
mov
cmpsl
scas
mov
into
adc
sarl
jg
test
sbb
pop
or
ret
dec
lods
jns
decl
sub
mov
les
add
jle
jbe
pushf
lea
lods
imul
inc
add
ret
mov
dec
or
repnz
imul
push
scas
cs
jo
imul
std
xchg
lahf
insl
je
scas
test
push
push
fbstp
iret
xlat
scas
mov
xor
in
lock
iret
rclb
out
and
cmp
fdivr
xor
ss
loop
lahf
or
cmp
jle
push
and
mov
mov
dec
fbld
fsin
ja
fmuls
pop
inc
repz
call
ds
dec
popf
ffree
int3
xor
jl
insl
iret
das
sarl
fisubl
jl
fsts
push
inc
jmp
cmpsl
mov
movsl
adc
fcmovnb
ja
test
lahf
addr16
adc
or
shrb
arpl
sub
loopne
bound
cli
aam
mov
daa
out
push
and
xor
fidivl
popa
jnp
lock
je
jp
cmpl
jnp
popf
cmp
sbb
mov
lret
int3
lcall
jmp
or
popf
popa
pushf
mov
es
icebp
ret
cmpsl
push
cmpsb
mov
cmp
pop
jbe
dec
xchg
fwait
sub
cmp
xchg
test
out
imul
rorb
mov
mov
inc
jns
mov
cwtl
es
addr16
bound
and
sbb
cwtl
into
sub
add
repz
lret
bound
js
stos
les
jecxz
push
cmc
and
sbb
push
xchg
adc
mov
mov
or
adc
xchg
sbb
sbb
cltd
cmp
repnz
cmc
push
dec
aam
pop
push
and
mov
pusha
mov
movsl
jecxz
std
shl
mov
lahf
test
jmp
dec
shl
fbld
data16
inc
insb
dec
js
mov
es
fsub
cmpsb
sbb
pushf
and
mov
push
pop
cmp
or
sub
test
xchg
dec
sbb
pop
mov
ret
adc
stos
sahf
mov
push
movsl
sub
xor
mov
mov
arpl
lahf
sbb
lds
and
pop
xor
mov
daa
mov
sti
push
adc
jb
mov
xor
loopne
jb
mov
clts
ss
les
pop
and
gs
cmp
loopne
movsb
adc
sbb
rcll
push
adcl
jmp
stos
pushl
or
jg
ss
mov
xchg
outsl
xor
scas
push
sbb
popf
rcr
or
ja
je
xor
pop
jno
jns
rcrb
shll
daa
mov
xor
dec
test
pop
icebp
test
inc
sbb
jp
mov
mov
cmp
fsubrs
mov
sarb
stc
dec
pop
inc
pusha
dec
shll
pusha
pop
mov
inc
cwtl
enter
lods
insb
js
je
mov
aaa
push
out
lcall
mov
stos
push
xchg
or
fs
aas
sub
loope
cmp
daa
lea
movsb
fs
mov
loop
cmc
push
mov
inc
insl
or
scas
dec
sarl
push
cmp
mov
pop
sub
inc
xor
lret
jecxz
je
fdivr
fisubl
xor
int3
mov
int3
lahf
cs
xor
loope
or
or
rolb
popf
mov
push
push
test
stos
das
dec
stc
lds
jmp
clc
fs
fmul
subb
jno
mov
jbe
lods
andl
push
adc
in
hlt
in
push
shrl
sti
psubq
xor
inc
pop
movsb
sbb
add
in
pop
repnz
add
test
mov
adc
and
inc
ja
stos
pusha
adc
sub
fucom
add
out
les
inc
sti
jge,pt
mov
mov
fsubrl
push
fists
inc
mov
iret
pop
jle
push
inc
add
mov
lods
in
ret
mov
les
outsl
insb
pop
into
addr16
jno
mov
gs
push
int3
jp
shl
mov
cmp
mov
mov
ss
int
ss
das
stos
mov
in
dec
dec
cmc
scas
mov
arpl
jle
dec
xor
je
arpl
push
sub
jp
pusha
add
mov
push
mov
repnz
jg
xor
sahf
in
ljmp
pop
inc
sub
outsb
mov
adc
and
mov
out
sti
xor
cmp
jnp
jg
mov
push
pop
inc
stos
jne
lock
dec
aam
jl
xor
es
arpl
sti
fidivrs
dec
adc
hlt
push
adc
dec
gs
fidivl
xchg
je
inc
cltd
cmpsb
push
fdivrs
or
aas
and
ja
sbb
mov
ljmp
pop
test
add
iret
out
xor
cld
icebp
movsl
imul
push
mov
cltd
subl
arpl
adc
add
popf
sbb
add
andb
adc
lahf
lds
iret
sti
jb
add
sub
subl
sahf
mov
sbb
in
xchg
lock
xlat
jg
nop
cmpb
cmp
in
and
test
bound
xchg
or
les
add
jns
mov
arpl
jg
addr16
gs
call
int
js
or
pop
sbb
pop
cli
pop
jl
cwtl
xchg
xor
insl
stos
stos
mov
fimuls
test
lods
cmp
or
loopne
mov
jne
xor
aam
mov
pop
repz
cmp
push
sub
xchg
incl
xlat
scas
aad
repnz
adc
push
out
mov
insb
push
js
pop
sbb
je
mov
cltd
movsl
jnp
xchg
inc
dec
mov
scas
lds
xor
clc
in
dec
push
lret
mov
push
shlb
jl
scas
pop
xor
cmp
sub
out
push
cmp
pop
in
je
sub
sub
cmp
shll
jae
jbe
xor
std
out
out
mov
arpl
inc
push
pushf
mov
clc
xor
sbb
lcall
dec
in
fs
or
xor
or
adc
push
fiaddl
imul
rcrb
stc
insl
int3
gs
push
add
lods
dec
xorb
aam
mov
push
jnp
leave
hlt
pop
jnp
popf
sti
pop
adc
aas
xchg
push
je
int3
xchg
xchg
cmp
mov
ljmp
push
pop
cmpl
ja
testl
dec
ret
rcrl
mov
pop
cltd
mov
adc
rcrb
scas
lods
shlb
fcomps
xor
sub
mov
outsl
jg
iret
rolb
rep
xor
xor
mov
mov
add
lret
or
sbb
add
popf
cmp
dec
adc
rclb
jns
lds
adc
mov
or
pop
das
or
faddl
mull
or
add
jmp
dec
and
es
cmc
cmp
arpl
faddp
aam
outsb
push
mov
clc
sahf
mov
adc
enter
mov
cmp
lea
in
arpl
pop
xor
paddusw
mov
in
cmpsb
fsubs
cmp
adc
push
lahf
jno
repnz
cmp
hlt
sub
stos
in
fisubs
aaa
jecxz
aad
pop
mov
dec
dec
xchg
enter
out
mov
pop
jmp
pushf
jne
jmp
mov
movsl
shlb
jb
lahf
xchg
pop
pusha
jp
jo
push
mov
sub
sub
pop
dec
adc
das
dec
jle
push
test
mov
fdivl
jb
lods
mov
mov
out
cwtl
movsl
iret
cmp
sub
outsl
pop
fidivrl
ret
cli
mov
inc
fidivrl
ss
push
aam
iret
xchg
cltd
sbbb
pop
add
lock
lds
jge
mov
pop
leave
and
mov
dec
mov
mov
pusha
hlt
adc
cmpl
xlat
mov
lods
nop
add
pusha
push
sub
sarl
nop
in
enter
data16
inc
test
fwait
dec
imul
add
enter
mov
pop
xchg
or
cwtl
sbb
std
pop
jmp
or
mov
insl
push
mov
cmc
or
inc
cmp
add
leave
mov
addr16
sbb
inc
addr16
mov
lret
rclb
or
inc
push
pushf
je
cmpsb
cmpsb
lea
mov
or
inc
ss
lds
dec
pushf
repnz
loop
add
jle
filds
testb
int
sbb
sarl
fcoms
add
push
xchg
push
rcrb
jl
les
mov
or
add
pop
icebp
roll
xchg
cmp
push
xchg
dec
push
inc
mov
dec
push
and
into
leave
pop
je
inc
dec
clc
cmp
mulb
bound
push
push
jmp
dec
lods
sbb
jle
push
pop
out
push
cmp
addr16
pop
fs
pop
lret
adc
and
xchg
jno
rolb
lds
jae
mov
push
repnz
pushf
movsb
push
pushf
mov
dec
and
lock
enter
jb
jl
mov
scas
lret
mov
push
lods
lods
sub
addr16
std
test
sub
cmpsl
outsl
fstpt
lret
xchg
xchg
pop
negb
shrl
dec
mov
or
imul
popf
jle
and
push
or
and
rol
xchg
dec
insb
pop
cmp
in
rol
dec
dec
negb
mov
orb
xor
pop
andl
xchg
push
shr
xor
shll
sahf
cmp
dec
andb
mov
lahf
lods
adc
xchg
nop
data16
jae
xor
jmp
inc
scas
dec
or
push
int3
xchg
mov
sub
ret
inc
jbe
fdivl
add
or
shrl
std
and
cli
test
iret
jo
outsb
stos
sbbl
xor
xchg
lret
cmp
ds
mov
je
js
jmp
js
movsl
bound
lret
dec
mov
lcall
mov
fwait
xor
nop
fstp
lcall
repnz
movsb
in
loop
or
out
jmp
add
jo
fdivrl
repz
lcall
sti
or
pushf
enter
or
pop
mov
int3
test
inc
cs
repz
lds
repnz
fdivl
mov
int3
leave
insb
lret
xchg
xor
out
cmp
stc
pop
push
add
sub
adc
idivb
das
pop
sub
dec
repnz
jbe
push
fdiv
mov
xlat
push
lods
in
adc
mov
adc
lds
mov
dec
push
roll
or
or
outsb
jb
mov
sub
mov
mov
cs
push
adc
test
cmpsl
xor
ljmp
sub
loopne
push
and
repz
and
xchg
fiaddl
mov
add
xchg
or
inc
push
sbb
enter
cwtl
mov
leave
xchg
adc
jp
call
cmp
popf
repnz
pop
push
push
fs
mov
decb
sbb
sub
dec
inc
mov
xlat
test
xchg
mov
imul
arpl
test
js
ret
mov
sub
mov
rcrl
xchg
dec
push
mov
addl
xchg
xor
fisttpll
lret
inc
inc
mov
xor
cmpsl
mov
repnz
fnstenv
ja
inc
push
test
cltd
fs
aas
testl
scas
or
jb
pop
shrb
mov
je
movsl
add
jne
xchg
clc
push
xchg
ret
stos
jge
mov
or
into
and
pop
sub
ja
cli
aam
dec
in
daa
lcall
and
xor
ret
inc
stos
negb
rcl
out
mov
mov
or
or
inc
daa
mov
mov
pop
enter
push
mov
mov
xor
add
ret
dec
in
sub
mov
mov
pop
mov
mov
jg
pop
jmp
xchg
cmp
idiv
movsl
fcoml
xor
dec
push
or
mov
movsl
in
test
xor
in
inc
aam
mov
or
lcall
and
mov
int3
insl
aaa
fst
and
sbb
ret
adc
pop
xchg
adc
sti
gs
xor
push
cmpsl
aas
adcb
fsubp
jge
jmp
pop
dec
or
ret
fs
imul
je
xor
inc
out
out
xor
leave
jp
test
lods
lods
cli
in
arpl
mulb
xchg
movsb
push
ret
outsb
pop
jp
insl
test
mov
cmp
sbb
pop
iret
jecxz
sbb
or
arpl
sbbl
cwtl
fs
jns
pop
ficoml
iret
mov
imul
cld
and
idiv
lds
clc
test
adc
nop
xorl
jmp
mov
ds
pop
dec
lcall
inc
stos
pop
adc
inc
mov
xlat
inc
movsl
mov
stc
loop
in
lock
jmp
loopne
mulb
xchg
push
cmp
sub
xor
lds
rcrb
mov
xor
push
mov
cmpl
jbe
push
jns
push
lock
cmp
push
sub
dec
and
in
jno
std
mov
pop
inc
cmp
decl
stos
or
adc
adc
add
mov
lods
nop
rcrl
scas
cmp
push
inc
mov
mov
repnz
shlb
cmp
inc
jp
fwait
movb
xchg
lods
enter
lcall
push
test
aaa
sbb
or
negb
inc
stos
sub
cmpsl
sbb
pop
data16
daa
rclb
dec
xchg
lret
mov
fstl
mov
mov
and
out
lahf
sbb
mov
pop
mov
xchg
xchg
dec
pop
cwtl
cmp
stos
pop
gs
sbb
mov
xchg
jge
xor
in
jge
test
jnp
data16
sub
inc
cmp
in
inc
adc
cli
and
inc
cmp
jmp
divl
shr
or
shl
xor
inc
lds
mov
pop
sub
neg
cwtd
or
in
pop
out
ja
clc
leave
jp
es
imul
sub
mov
rorl
pop
cmc
adc
or
movsl
insl
aaa
sbb
jle
insb
sbb
and
inc
jne
inc
sbb
ljmp
and
xchg
add
push
jecxz
mov
loopne
xchg
stos
test
push
out
mov
out
jecxz
add
inc
jmp
pop
pop
sub
xchg
cmp
push
imul
mov
lcall
or
subb
push
aam
inc
outsb
test
into
dec
sar
dec
jnp
ret
insl
fists
stos
mov
shll
pop
fucomp
imul
shrl
or
adc
push
mov
scas
xchg
jbe
sbb
xchg
or
ds
arpl
jae
ljmp
js
sarl
push
pop
jg
dec
inc
jg
sub
cbtw
cmp
int3
inc
push
mov
jmp
push
fsubs
es
pop
mov
mov
icebp
and
jae
push
ljmp
mov
mov
outsl
jo
fldl
and
jl
and
scas
leave
bound
jbe
negl
cmp
inc
aad
mov
lods
les
add
jp
out
xchg
mov
out
inc
cmp
aaa
lret
mov
popf
jo
xor
lret
loope
push
xchg
leave
sub
sub
mov
push
xor
push
dec
in
mov
lcall
loopne
sub
enter
or
dec
add
std
adc
mov
ljmp
mov
insl
pop
push
fbstp
or
imul
in
inc
pop
xchg
push
pop
icebp
push
dec
push
shll
push
cmp
daa
ficoms
xchg
inc
inc
xorb
movsl
pop
jns
pop
shl
aad
divb
out
test
mov
jge
mov
sub
dec
imul
fidivl
fwait
popa
sti
in
push
dec
lods
fists
xchg
cmpsl
or
shr
lret
xchg
cmpsb
push
popf
push
pop
jno
pop
cwtl
sbb
mov
rcll
andb
jbe
pop
push
mov
adc
pop
ss
jmp
ja
aad
sub
cmpsb
cmp
mov
or
lods
ret
mov
pushf
aad
mov
sub
dec
inc
cli
lea
or
lret
aam
jle
inc
mov
adc
xchg
data16
jmp
and
xor
cmp
or
call
or
pop
push
pop
fwait
pop
xor
out
or
sbb
mov
xor
cmp
dec
das
daa
lds
adc
jge
mov
lods
iret
jno
inc
push
jne
addr16
es
stos
mov
sahf
cltd
sub
imul
dec
mov
jmp
push
or
and
repz
rcrl
adc
pop
add
fwait
and
lea
adc
cmc
xor
stc
lock
jle
movsb
sub
fstps
lock
and
xchg
jmp
sub
fcmovnu
loope
gs
in
dec
fsubrs
jo
jmp
mov
fs
dec
jp
or
pop
cmpsb
xor
or
shlb
lds
inc
jb
push
mov
mov
push
test
or
fwait
add
mov
dec
sub
add
push
fucomip
js
push
dec
pextrw
jno
test
outsb
addr16
xchg
adc
lods
sbb
cmpsb
dec
add
fcmovnu
xor
in
pusha
cmp
and
xor
push
push
fst
out
cvttps2pi
scas
cmp
daa
add
sub
dec
into
and
mov
fldl
insb
das
xchg
pop
sbb
gs
xchg
inc
lahf
das
jo
rcl
popa
sbb
loop
mov
stos
imul
sub
pcmpgtb
inc
xor
shll
mov
pop
es
xchg
out
loop
sbb
mov
fisubl
xchg
push
mov
es
cmp
bound
inc
popa
dec
sub
lret
xchg
jno
in
adc
mov
testb
out
out
push
adc
ret
cmp
jae
loopne
mov
imul
stos
xor
lret
xchg
sub
imul
jb
add
ss
in
pop
mov
arpl
mov
push
inc
mov
insb
pop
fadd
or
mov
jg
loopne
test
xchg
jmp
out
movsl
jne
add
jae
ret
cmpsb
lds
stos
repnz
pop
sbb
sbb
and
dec
cmp
imul
mov
sub
mov
jnp
cltd
loopne
addps
sub
push
and
aaa
push
outsb
xchg
pop
in
xchg
jb
cmp
xchg
fdivr
mov
add
cmpsl
inc
in
push
sbb
lock
sar
out
or
adc
mov
int
aaa
scas
cmpb
lock
dec
jns
add
shll
in
sti
or
xlat
or
test
xor
inc
push
mov
insb
jo
mov
jle
inc
lcall
add
xchg
jns
xor
mov
sbb
or
movb
iret
add
dec
adcb
popa
jo
cltd
jl
mov
add
test
xor
cmpsb
movsb
push
pop
popf
pusha
mov
test
testb
and
call
std
dec
pop
xlat
or
popf
rclb
inc
sti
popa
adc
sbb
lret
cli
mov
imul
lret
cmp
inc
bound
pop
fcmovne
cs
cmp
pop
jl
mov
xchg
jp
enter
cmp
push
nop
cld
loopne
rclb
fldcw
in
sub
fisubrl
jne
adc
pop
dec
jle
aam
loope
jne
iret
iret
lock
jecxz
sub
repnz
mov
iret
xchg
jp
lods
repz
inc
enter
or
and
aad
das
ficomps
stos
add
std
dec
in
push
in
xor
cld
adc
lahf
pop
pop
adc
test
adc
mov
subb
mov
aam
popa
in
scas
and
sahf
aad
repnz
arpl
pop
mov
dec
xor
jae
mov
test
daa
xor
or
ja
inc
mov
mov
sub
mov
lods
ja
in
dec
sbb
repnz
notl
push
pop
mov
sub
gs
add
cmc
or
daa
inc
pop
outsb
push
sub
push
rorb
cmpsb
lods
imul
scas
adc
data16
lea
in
xorb
mov
je
jg
fmuls
xor
scas
movsb
scas
and
xchg
xchg
fdivrl
movsl
mov
sub
enter
and
add
mov
pop
test
aaa
pop
jne
xchg
mov
mov
mov
cmc
cli
pop
xchg
es
mov
repnz
subb
outsb
aaa
sub
std
sbb
cmpb
scas
scas
jl
sti
hlt
jmp
imul
cmpsl
push
jecxz
cmp
push
insb
jb
inc
mov
mov
ds
imul
cmp
mov
sti
xchg
leave
jnp
jnp
mov
cld
mov
cltd
test
push
stos
adc
cmp
push
and
daa
sbb
ljmp
xlat
movsl
inc
sbb
cmp
test
icebp
es
fistl
aam
les
aam
mov
in
sub
fcoms
sub
loop
icebp
add
cmp
pop
push
push
adc
inc
adc
cld
lret
lahf
pop
mov
xor
test
xchg
and
xchg
push
mov
mov
imul
loope
or
std
dec
jo
push
rorb
sbb
jp
out
jg
scas
xchg
or
jae
or
outsb
sbbl
mov
fmul
aas
sub
push
sbb
lret
push
fstl
into
adc
idivb
cmp
or
es
mov
dec
lea
insb
ds
pop
jnp
dec
lcall
add
and
imul
loopne
dec
imul
or
stos
mov
gs
imul
test
sahf
push
or
leave
xor
push
ljmp
xchg
orb
sbb
test
or
loop
mov
push
push
pop
mov
shll
and
xlat
fbld
mov
add
cmp
movsb
dec
mov
cmc
inc
jo
xchg
mov
jg
or
pop
or
rcll
mov
fsubr
dec
ficomps
sub
push
jmp
lods
fmull
fcoml
shrb
insl
inc
pop
test
cmp
xchg
loop
mov
shll
mov
int3
cmp
addr16
inc
int
insb
mov
mov
xchg
lret
ss
sub
testl
sub
ja
push
aaa
push
dec
dec
push
jb
fs
dec
add
inc
pop
insl
loopne
cwtl
es
movsl
hlt
mov
rcrb
mov
lock
adc
pop
and
out
push
mov
dec
or
adc
je
jno
mov
and
xlat
data16
inc
jo
pop
add
or
dec
in
dec
fcompl
mov
fistps
movsb
lods
sub
sbb
push
or
call
jnp
lahf
je
jo
sbb
adc
pop
dec
nop
sarl
mov
pop
mov
pop
jae
mov
sub
js
nop
fdiv
mov
rcrb
push
sub
push
add
cmp
stos
mov
int3
pushf
insb
sahf
insl
aas
adc
mov
lcall
mov
mov
shl
cmp
lock
xor
add
orl
inc
sbb
nop
or
pop
outsb
xor
inc
pop
rcr
pop
ss
inc
addr16
or
lea
inc
pop
inc
subb
mov
je
or
mov
xchg
inc
stos
repz
adc
and
xchg
ljmp
in
in
clc
lret
push
je
cs
mov
sub
lahf
fdiv
mov
dec
jb
lea
addr16
push
imul
ret
mov
imul
outsb
mov
add
cmpsl
mov
pop
lahf
adc
loop
subb
xchg
pusha
stos
js
aad
jmp
fisttps
loopne
pop
scas
add
fnsave
cld
test
adc
adc
add
ljmp
or
mov
iret
aad
movsl
push
and
mov
sub
xchg
nop
in
mov
js
sub
xor
in
or
call
cmc
aaa
clc
push
lret
imul
and
or
sahf
pop
dec
inc
lahf
xchg
cltd
or
mov
in
fwait
pop
cltd
add
jecxz
adc
orl
jb
add
popa
iret
shlb
pop
jle
sahf
negl
mov
daa
addl
out
and
mov
or
test
xchg
js
insb
lahf
pusha
mov
mov
cmc
cmc
fsubl
sahf
xchg
mov
rcll
scas
jle
test
roll
pop
shll
movsb
in
cmp
out
rcl
push
or
xlat
push
je
and
rorb
lret
les
mov
aaa
mov
mov
mov
mov
dec
stos
add
cmpsl
inc
lea
inc
sub
imull
int3
leave
xlat
xchg
flds
lods
or
loop
jae
jns
shrb
std
movsl
mov
insl
fs
xor
sub
jnp
lods
scas
test
insb
test
hlt
sbb
or
sub
dec
mov
push
or
test
and
fwait
lock
dec
stos
fildl
clc
pop
out
jb
mov
daa
jmp
ds
loopne
and
pop
cmp
inc
inc
fdivl
cmc
or
mov
leave
stos
push
push
add
stc
loop
cmp
mov
inc
xchg
fidivs
and
testl
pop
or
dec
movsb
bound
dec
lret
push
mov
dec
dec
sbb
popf
inc
sahf
add
js
jl
jl
arpl
enter
sbb
mov
popa
pop
pop
sbb
mov
shll
pusha
hlt
cmp
push
lret
and
scas
xchg
adc
test
mov
xchg
or
mov
aad
sub
mov
dec
mov
insl
ror
sub
mov
mov
dec
pop
pop
mov
mov
adc
xor
cmc
xchg
xor
pop
xchg
sahf
rcrb
jmp
sarb
jne
ret
in
mov
sub
push
cmpb
outsl
rorb
sarb
out
xchg
xchg
movsl
test
jae
adc
pop
pop
mov
scas
mov
sub
imul
xchg
popf
mov
push
dec
inc
jns
iret
lret
leave
cmp
hlt
js
add
mov
popf
stc
dec
lods
adc
les
add
enter
andl
pop
xchg
dec
inc
sbb
jmp
xchg
sbb
xchg
pop
jne
data16
insb
nopl
push
cs
sub
sbb
mov
jo
aas
xchg
mov
and
pop
inc
lods
sub
inc
mov
psubusw
pop
add
fwait
adcl
in
movsl
xchg
inc
int3
mov
and
push
sarb
pop
sarb
push
pop
dec
jl
inc
dec
bound
lcall
insb
lock
jnp
stos
fnstcw
push
es
mov
sbb
cli
pop
fdivr
sub
out
ret
mov
jg
jmpw
cltd
scas
pusha
pushl
adc
cmpsl
adc
outsl
or
test
pop
xorl
std
add
in
aaa
pusha
adc
subl
xchg
mov
in
sbb
inc
cmp
xor
xchg
shll
pop
adcb
fstps
test
aas
mov
clc
mov
std
or
add
scas
dec
int
pop
xchg
mov
mov
lods
cmp
inc
inc
pop
xor
cmp
ffreep
xlat
pop
arpl
push
in
xor
mov
push
inc
pop
loop
test
pop
movsb
scas
or
add
adcl
push
push
rorb
popl
dec
movsl
or
jnp
xchg
dec
dec
pop
mov
insl
arpl
xchg
or
mov
sub
inc
pop
cs
in
mov
insl
and
nop
xchg
lcall
jns
out
leave
xchg
out
and
xchg
cs
jne
imul
mov
push
rcl
jne
int
mov
inc
jns
cli
pop
fs
or
or
lds
push
push
mov
cmpsl
mov
jae
testb
stos
fistpl
push
push
insl
scas
mov
ljmp
dec
mov
nop
lods
scas
xchg
mov
cmp
mov
popl
sbb
test
mov
adc
xor
cmp
test
xor
xchg
cmp
inc
outsl
add
cmp
lea
xor
fdivs
sbb
enter
jns
add
lods
jg
out
dec
es
push
push
add
push
gs
jnp
pop
and
push
xchg
adc
xchg
ds
mov
xorps
shl
adc
pop
inc
sbb
out
adc
sti
pop
repnz
and
icebp
bound
je
inc
adc
sti
mov
lret
into
fisttpll
mov
inc
pop
test
test
sarb
scas
fildll
dec
push
xchg
ss
lret
int3
lods
movsb
or
mov
push
out
cmpsb
aas
shlb
xchg
ss
cmc
addr16
aas
dec
dec
sub
enter
adc
scas
popa
cwtl
or
les
mov
gs
enter
mov
cmp
pop
js
jbe
icebp
dec
xchg
pushf
dec
shrl
les
data16
je
cmp
xchg
loope
xchg
or
mov
jno
test
cs
js
idivl
pop
out
je
add
fsts
cmp
mov
jae
dec
xchg
sbb
idivb
mov
div
lods
push
andl
js
add
pop
xor
aad
mov
scas
add
loope
out
shrl
jbe
cs
lds
or
imulb
movsb
fwait
mov
push
loope
xlat
mov
push
icebp
cli
cld
xchg
or
aas
mov
cwtl
cmp
jno
lret
loope
lea
scas
sub
or
mov
dec
dec
pushf
dec
fdivr
xchg
sub
fistpll
xchg
shlb
pusha
mov
fiaddl
or
pop
cwtl
scas
ds
push
data16
mov
pop
dec
daa
xor
add
inc
jns
mov
popf
jbe
dec
insb
lahf
in
stc
lock
mov
xchg
mov
mov
mov
inc
or
in
int
xchg
lds
daa
fcoms
cmp
sub
adc
mov
pop
out
xor
daa
fnstsw
shr
jp
sub
and
insl
pop
rcll
and
inc
pop
sub
push
ss
ds
sbb
mov
push
test
stc
nop
loope
xchg
lods
mov
push
cld
dec
pop
out
push
decb
push
shlb
mov
xchg
fistpl
mov
sub
int
cltd
xchg
loopne
xchg
mov
shrb
pop
dec
mov
fsubrs
out
pusha
stos
clc
mov
jge
orl
out
aad
xor
mov
mov
push
sbb
icebp
dec
daa
aaa
add
jmp
pop
call
es
ja
push
pop
pop
mov
leave
mov
ljmp
cmp
in
jns
xchg
sbb
jg
aas
js
aas
mov
sahf
popa
push
mov
daa
out
cmp
and
icebp
test
xchg
mov
leave
jmp
insb
jl
dec
mov
xchg
push
inc
aas
push
roll
test
pop
cmp
aad
and
out
xchg
decl
inc
inc
push
ds
adc
aad
in
shl
dec
clc
nop
cmc
mov
xchg
pop
push
xchg
scas
and
or
dec
insl
cmc
or
mov
sahf
sti
scas
and
push
inc
mov
sbb
pop
cmpsb
mov
xor
dec
rcr
test
stos
push
daa
cmp
jbe
xchg
or
orb
shl
sbbl
enter
stos
fcmovb
loope
enter
mov
push
cmpsl
cmp
cmp
lods
rcrl
ja
idiv
mov
leave
pushf
and
mov
int3
push
pushf
icebp
xchg
pop
sub
fndisi(8087
fldcw
sub
jne
aas
test
popw
rol
push
push
push
sahf
scas
xor
in
icebp
inc
ds
out
hlt
fwait
xchg
iret
pop
mov
sub
pushf
and
shrl
xchg
or
clc
mov
shll
inc
rolb
and
xor
iret
xor
decl
hlt
ret
mov
das
inc
test
sti
out
adc
mov
and
push
lods
pop
addr16
jne
push
imul
shl
or
xchg
pop
or
xor
outsb
pop
xchg
or
dec
cmp
and
shll
int
sti
sti
adc
stos
push
and
orb
out
pop
mov
dec
repz
and
rcrb
pop
jmp
clc
dec
sbb
jle
push
fs
mov
cs
add
sub
adcb
repnz
sti
aad
jmp
call
jae
aad
push
lret
jo
add
daa
jle
into
out
ja
or
inc
aad
jg
xchg
movsl
test
nop
push
jmp
or
push
mov
jnp
jnp
daa
add
or
push
fsub
out
aaa
jns
test
add
rcl
cmpsl
into
ret
cwtl
dec
push
and
mov
shrl
cmpsl
out
loopne
push
push
lret
cmpsl
lret
in
call
repnz
nop
dec
cmp
cmc
iret
cmpb
shlb
and
cmp
fisttpll
mov
in
mov
cmp
in
bound
shrb
stos
shlb
das
out
leave
add
mov
fdivrl
in
stos
hlt
enter
dec
iret
int
imul
sub
fildl
aaa
add
inc
bound
sbb
xlat
lret
mov
cwtl
jg
out
push
aaa
jecxz
out
pop
jle
xor
cmp
test
cmpsb
pop
push
fldcw
dec
dec
pop
and
and
xorl
or
mov
pop
scas
pop
adc
add
sbb
add
pop
ljmp
jns
dec
adc
stc
mov
daa
sbb
and
mov
jl
in
add
ret
jmp
int
xchg
stc
pushf
mov
pusha
dec
sahf
or
sbb
scas
je
shlb
cmpsl
dec
cli
dec
mov
inc
repnz
cmp
ret
mov
sbb
mov
dec
imul
xor
lods
fsubr
mov
mov
cmp
sbb
loop
std
mov
xchg
mov
repnz
xchg
push
sub
xor
pop
and
mov
movsl
sysret
cwtl
sub
cmp
xchg
fsubp
mov
cmpsl
aas
mov
adc
cmpsl
sbb
shl
fistpll
jo
lods
out
push
and
addb
lret
stos
mov
mull
dec
adc
push
sahf
jecxz
test
jno
mov
xchg
cmpl
dec
sub
pop
test
or
loope
mov
jnp
xor
outsb
xchg
xchg
xor
js
mov
cmpsl
jae
and
movsl
lods
call
sub
imul
lods
lea
mov
pusha
pushf
stc
jle
cmp
xor
popa
pushf
je
xor
cltd
add
inc
jmp
sbb
stos
mov
leave
mov
scas
xor
inc
and
aaa
sub
js
dec
aaa
pop
sub
cs
jmp
sahf
cld
lret
xchg
pusha
cmpsl
std
or
inc
pop
in
ss
mov
push
das
sub
fmul
dec
mov
mulb
and
mov
aas
pop
out
pop
ja
xchg
push
testl
daa
cwtl
mov
dec
cs
sbb
push
xchg
sbb
aas
push
xor
test
mov
xlat
mov
loop
lods
scas
mov
ret
ds
or
pop
cmp
xor
shlb
inc
scas
cmp
popa
inc
cmp
push
mov
or
inc
mov
mov
bound
mov
mov
inc
lods
lods
sub
imul
mov
sub
and
lret
adc
push
push
fwait
mull
pop
lcall
cmpsb
in
adc
mov
es
loopne
xchg
sbb
or
outsl
add
lds
jae
lock
jl
cwtl
test
cld
insl
push
mov
lods
sbb
dec
pop
jecxz
sar
xor
add
out
and
jl
pop
out
sbb
push
hlt
jbe
fs
mov
xor
lcall
adc
cmp
adc
lcall
xchg
xchg
jno
fcmovnu
loop
jb
sti
stos
mov
jnp
sbb
push
mov
in
push
addr16
pushf
clc
xchg
psubusb
dec
lea
mov
ljmp
aas
ds
mov
aaa
scas
aad
es
gs
sti
arpl
sti
and
dec
jmp
into
cmp
imul
stc
orl
loop
movsb
fcmovu
push
scas
push
mov
pop
out
pop
loop
je
stos
jmp
pop
insl
or
out
jecxz
xchg
push
sub
sbb
bound
inc
sub
jo
imul
ja
sti
adc
adc
dec
xchg
in
fstpl
lea
in
or
add
sub
mov
lds
xchg
mov
cmpsl
or
repnz
adcl
out
mov
test
test
cltd
jmp
add
mov
sub
sub
mov
xchg
mov
daa
mov
inc
negl
xor
dec
and
ss
rcrb
jg
in
push
fcoms
pop
pop
les
xchg
push
les
mov
ss
imul
push
ja
pop
xor
xor
sar
je
pushf
lock
adc
insl
punpcklbw
pusha
adcl
pop
dec
scas
fisubrl
ret
mov
movsb
cmp
or
stos
rolb
lret
popf
scas
mov
popa
mov
inc
xchg
lods
icebp
into
out
fwait
iret
pop
incb
pop
ds
jg
ficoms
mov
cwtl
cmpsb
jecxz
jl
stos
test
outsb
popa
popf
mov
fisubs
xchg
inc
mov
mov
mov
or
imul
push
out
pop
add
lcall
push
imulb
pushf
in
inc
push
jb
rol
aas
rorl
in
cmp
jge
dec
jns
cmp
jp
sub
dec
sti
xor
mov
ret
jp
jnp
sub
cli
push
xor
cwtl
add
mov
and
mov
rolb
outsl
mov
in
add
test
lods
cs
stos
mov
cmp
or
jp
push
push
sbb
je
jae
icebp
repz
orb
clc
mov
outsb
jmp
out
mov
nop
scas
mov
dec
adc
ficoms
jo
fwait
scas
repnz
sbb
push
push
ret
jge
push
mov
loope
cmp
xchg
jmp
push
rorl
cmp
and
jmp
data16
aam
addl
mov
dec
aam
popf
dec
mov
inc
mov
pop
xor
pop
lea
sbb
inc
lods
xor
mov
mov
mov
in
mov
shll
lahf
fmull
and
dec
jl
push
popa
jb
add
mov
push
sti
mov
popa
pusha
sbb
sbb
repnz
xchg
jbe
push
push
mov
push
cmp
shrb
inc
int3
mov
addl
mov
pop
rol
and
leave
xor
popa
lcall
ss
fs
xor
jmp
iret
bound
lcall
je
ret
fsubrl
mov
out
cmp
ljmp
mov
sahf
and
es
or
test
fisubrs
mov
test
xor
and
inc
sub
clc
mov
imul
imul
mov
outsl
and
lcall
jo
mov
jmp
ret
js
cmpsl
push
adc
or
sbb
popf
or
out
nop
dec
les
pop
fwait
add
push
and
movb
fstl
pop
or
out
rorl
pop
imul
lock
push
ret
shll
xchg
or
and
mov
mov
rcrb
aas
ficoms
bswap
sarb
and
fcompl
repnz
clc
xor
mov
hlt
jns
callw
sti
jnp
sbb
ja
dec
xchg
xchg
ss
mov
or
push
fs
popa
imul
out
fwait
sbbb
cmp
arpl
jno
sbb
dec
jno
js
stos
stos
test
add
add
dec
lret
rorb
xchg
enter
and
daa
add
xchg
daa
mov
add
inc
aas
push
xor
adc
imul
ds
jmp
in
mov
adc
dec
pop
das
push
stc
aaa
pop
and
adc
aas
shl
aam
jno
pop
lods
icebp
mov
pop
sbb
lods
pop
mov
xchg
fwait
das
ret
aam
mov
popa
out
pop
pop
pop
sti
jmp
test
shr
lods
mov
stos
mov
out
sbb
mov
pop
test
adc
xchg
cltd
cli
push
sbb
dec
imul
xchg
xor
and
dec
xchg
sahf
mov
pop
push
shll
ss
or
mov
mov
sti
jmp
fs
out
stos
dec
pop
mov
pop
lret
test
es
aas
cmpsl
int3
fnstsw
dec
xor
sub
xor
sub
lret
std
into
mov
repz
push
in
and
dec
adc
xor
xchg
imul
sbb
mov
mov
adc
scas
jnp
mov
jge
jb
outsl
jmp
cltd
outsb
fcoml
repz
dec
push
sbb
out
jo
mov
add
fwait
mov
inc
sub
pop
cmp
scas
jge
es
xor
inc
in
push
mov
pusha
icebp
aad
xchg
insb
cmp
outsb
mov
test
pop
or
cmp
rolb
xor
in
gs
or
pop
dec
stc
sub
pop
iret
push
std
outsl
xchg
cmpsb
mov
outsl
and
dec
push
and
cmp
cmp
nop
or
test
out
inc
push
inc
notb
sbb
adc
jmp
dec
roll
push
fnsave
sub
cli
and
fs
shrb
jmp
fdivl
xor
pop
lahf
and
pop
push
xchg
adc
xchg
dec
lock
out
ror
aad
popf
pusha
test
dec
in
mov
jnp
lods
jne
lock
enter
test
add
lahf
mov
les
lcall
xchg
loop
lods
mov
sub
add
cld
scas
dec
dec
js
xchg
pop
in
xor
arpl
mov
jns
mov
leave
push
lahf
pop
rorl
loop
add
enter
sub
cld
or
ret
inc
fwait
or
push
inc
sub
lock
lea
popf
ljmp
ds
jle
push
nop
aaa
daa
jo
lea
cwtl
xchg
add
xchg
into
and
inc
jns
cs
add
stos
popa
repz
aaa
int3
fidivs
adc
ret
fisubl
in
xlat
cmpsb
bound
lock
adc
arpl
cmp
pop
std
jl
mov
call
outsl
popa
mov
sbb
and
imul
sub
ljmp
lret
adc
mov
or
jae
mov
add
inc
mov
mov
mov
call
das
cmp
std
adc
mov
xorl
xchg
imul
js
into
mov
cmp
mov
stc
xchg
jno
add
popf
sbb
mov
pop
pop
sbb
je
sbb
nop
jne
xchg
rcll
adc
jg
adcb
in
int3
push
mov
jnp
mov
xchg
mov
mov
popf
add
mov
test
inc
movsl
push
pavgb
cs
daa
add
jb
sbb
mov
hlt
insl
jg
dec
jbe
in
es
call
xchg
adc
sub
mov
sbb
dec
or
jecxz
push
divb
or
jge
fwait
and
sahf
xor
cmp
adc
lahf
mov
cmpsl
psubw
mov
cs
pop
pop
or
mov
loop
out
movsb
insl
out
ret
pop
imul
xchg
xchg
fdiv
jmp
popf
stc
mov
in
push
adc
add
xlat
mov
lahf
test
cmp
jmp
adc
inc
fstl
frstor
adc
mov
cwtl
ljmp
popf
and
leave
mov
xchg
icebp
adc
dec
xchg
pop
jno
push
lock
scas
xchg
cld
xchg
xchg
repz
shl
lock
and
test
ds
adc
pop
mov
outsb
jne
sub
lret
push
rcrl
fwait
sub
sub
and
mov
popa
mov
sbbb
cmp
dec
inc
pop
sbb
pop
push
mov
ret
not
movsb
cmp
cmp
dec
out
pop
ret
cmpsb
mov
inc
mov
lcall
subb
mov
ljmp
inc
stc
dec
push
xlat
pop
adc
mov
push
xchg
inc
and
adc
hlt
rcr
mov
pop
unpckhps
cmp
shlb
jp
stos
or
cmp
or
pop
jmp
sub
add
mov
mov
out
push
pushf
xor
leave
stos
addl
xor
add
repz
add
cs
cmp
pop
pop
xor
mov
arpl
add
or
ret
jb
es
bound
push
or
inc
push
cmpsb
les
push
jmp
mov
push
popf
lock
dec
popf
mov
add
aaa
mov
jbe
dec
sub
or
inc
je
and
adc
mov
les
lcall
icebp
sarl
sub
mov
lahf
jno
jecxz
pop
push
sbb
add
shlb
sub
jb
mov
mov
nop
js
pop
in
out
pop
scas
xchg
inc
je
xchg
and
push
pop
jb
incb
lret
or
sti
enter
mov
xlat
mov
pop
cmpsl
addl
cmp
push
stc
push
or
sbb
xchg
ret
pop
fdivl
push
jp
mov
sarl
aaa
je
cld
add
fwait
dec
mov
cmp
insb
and
mov
xchg
fnsave
int
jbe
adcl
inc
enter
push
xor
mov
inc
push
in
int
pop
mov
ret
cld
sbb
int
into
mov
test
in
aas
je
push
push
out
sbb
ja
cmp
daa
inc
xchg
mov
add
scas
push
in
daa
fcomp
shlb
dec
sub
daa
cld
push
xor
mov
mov
xor
sub
vmwrite
pop
sub
rorl
inc
test
fsub
rdtsc
xchg
xor
cmp
and
xor
and
std
daa
mov
test
pop
stos
sahf
inc
mov
push
jmp
ja
clc
call
jo
xor
dec
pop
popa
sbbl
inc
aam
pop
push
adc
xchg
fsubr
mov
pop
es
repnz
flds
adc
add
push
add
adc
lds
xlat
cmp
mov
push
sub
adc
or
mov
pop
push
jmp
dec
and
jmp
aad
fildl
mov
icebp
shl
sbb
dec
mov
xchg
loopne
adc
dec
jl
mov
inc
mov
imul
dec
ljmp
xchg
or
jno
xchg
les
mov
mov
test
jne
div
lahf
bsr
and
movb
js
push
pop
mov
gs
and
lea
movsb
enter
mov
jge
mov
ljmp
es
cmp
popf
xchg
fsubs
xor
loopne
imulb
mov
cs
jne
sub
insb
xor
js
add
popf
add
pop
mov
adc
pop
sahf
test
inc
xchg
jp
repnz
fisttpl
addr16
scas
adc
mov
add
enter
add
sahf
addr16
cmp
sarl
lods
lret
aas
inc
inc
dec
test
or
mov
add
inc
jae
out
in
jns
das
and
fimuls
jb
cmp
popf
in
incl
push
push
outsb
fisubl
test
push
sbb
pop
mov
and
shr
loop
in
test
stos
or
and
jmp
testl
roll
cmp
adc
stos
out
jl
add
mov
add
push
xor
inc
loope
sarl
outsb
gs
dec
sbb
mov
pop
jp
jle
ljmp
shrl
or
cmp
test
mov
arpl
ljmp
mov
aad
cwtl
push
loopne
paddusw
jbe
cwtl
xor
or
aas
lahf
loope
jbe
call
mov
movsb
or
call
push
mov
or
push
adc
sub
push
dec
cmp
cmpl
push
lcall
cld
cmp
add
pushl
inc
push
imul
std
ja
push
subl
and
cmpsl
sbb
pop
push
add
push
jecxz
js
lret
and
into
aas
fwait
or
and
cmovo
mov
jb
sub
push
cmp
lret
push
lcall
cmp
push
aaa
mov
aas
test
test
mov
shlb
cwtl
shlb
rol
mov
bound
repz
push
push
das
push
fsubp
movsb
pop
jl
test
in
inc
rol
shl
xor
rol
mov
pop
sbb
into
xchg
pop
pop
addr16
dec
into
cmp
das
movsb
jmp
pop
push
dec
int3
ss
pop
fnsave
cmp
lods
lods
cwtl
icebp
mov
cmpsb
inc
add
xchg
jno
push
leave
push
stos
xorl
adc
push
xchg
lods
imul
repnz
pop
aas
push
inc
push
out
call
test
push
mov
adc
xchg
mov
inc
gs
es
xorb
popf
mov
lock
or
xor
inc
push
inc
or
and
aam
mov
pusha
lods
bound
xor
xchg
scas
pop
mov
jmp
icebp
test
lods
into
sub
movsl
stos
fs
dec
inc
fwait
push
xlat
mov
data16
xchg
xchg
ret
pop
sub
sub
leave
pop
pop
sbb
sbbl
insb
fwait
jbe
loope,pn
std
adc
and
cwtl
insb
sbb
fildll
ss
aam
aas
hlt
xchg
push
jl
ficompl
cmpsl
inc
and
jns
divb
jg
pusha
hlt
and
pop
xor
adc
pop
stos
arpl
nop
jecxz,pn
in
test
sub
rorb
lods
mov
mov
out
fiadds
push
xchg
mov
sub
cli
hlt
push
dec
sub
cmp
movsb
xor
pushf
pop
ljmp
cmp
jge
mov
int3
mov
popa
sub
stc
mov
xor
and
mov
mov
jns
dec
jmp
push
jne
jne
int
pop
out
loopne
pop
aas
jb
adcl
test
out
cs
sbb
pop
imul
push
out
push
fsub
fwait
push
mov
sbb
outsb
push
adcl
xor
out
mov
mov
lock
add
dec
mov
xchg
mov
adc
ds
dec
outsb
pop
xor
xchg
inc
jbe
jp
std
pop
shl
jmp
cmp
mov
iret
cmp
out
adc
jae
fwait
xchg
lret
dec
loop
clc
adc
cmp
and
test
pop
jnp
push
inc
push
mov
and
mov
and
adc
mov
pop
jo
xor
sub
pop
mov
pop
xlat
outsb
mov
mov
in
imul
loopne
jp
push
scas
in
cmp
lahf
scas
and
sub
stos
mov
dec
shll
jmp
adc
sarl
cs
bound
bnd
pop
hlt
mov
xchg
adc
divb
cmp
cmp
into
mov
das
push
fdivrl
sbb
loop
dec
lret
rcrb
dec
into
dec
pop
xor
push
cmc
jge
shll
or
mov
push
imul
sbb
test
cmc
adc
add
mov
adc
jne
xchg
es
jl
or
push
lahf
movsl
dec
jl
daa
ds
ds
cmpsb
aas
xchg
add
imul
jmp
mov
sub
push
push
push
dec
ret
roll
jge
in
pop
adc
push
dec
mov
inc
loope
mov
insb
jmp
pop
pop
imul
or
aad
repz
mov
sub
loop
pushf
cmp
in
cmpsl
sbb
jge
dec
push
lock
or
andb
je
jl
in
mov
or
bound
mov
jp
push
cmp
sbb
imul
push
cmp
bound
pushf
outsb
into
mov
xor
adc
mov
sbb
mov
das
ja
popf
int
jnp
mov
push
and
sub
xchg
cmp
add
loopne
in
push
jb
mov
xchg
sbb
aas
lods
xor
jne
xorl
ret
adc
mov
out
cwtl
push
negb
mov
sub
xchg
imul
in
mov
cmp
sbb
and
xor
lds
repnz
rcrb
stos
pop
mov
sti
or
es
negl
adc
xchg
adc
in
push
inc
pop
xchg
cmpsl
loope
fstpt
lods
jmp
fnstcw
inc
push
dec
push
push
jge
lcall
inc
fcmovbe
xor
adc
loop
ja
fsubl
pusha
mov
jmp
pop
std
xor
pop
sahf
jmp
sbb
or
xchg
sbb
adc
testb
add
add
push
push
rorb
dec
andb
cmpsb
sbb
mov
cmp
and
adc
in
dec
sub
je
daa
inc
mov
out
jg
inc
imul
and
sti
hlt
mov
jae
sbb
ror
rolb
lret
aaa
idivl
push
lods
inc
nop
xchg
sub
lahf
fnstsw
fs
shlb
neg
pushf
in
lcall
cmpsb
in
pop
pusha
shll
add
xchg
mov
xlat
xchg
fsubrp
lcall
orl
mov
jg
lea
push
outsl
cmpsb
aaa
push
xchg
mov
icebp
dec
and
xchg
hlt
push
pop
aas
pop
out
dec
jno
clc
inc
scas
nop
ljmp
xchg
cmp
int
fs
daa
mov
insb
rcr
iret
lcall
pop
jo
jge
cmpl
xor
into
add
sub
cmp
out
or
and
incb
cli
pop
gs
push
inc
fs
xlat
mov
cmp
inc
cmpsb
loop
adc
pop
fwait
out
push
push
mul
rcrb
divb
aam
jae
jl
xchg
iret
pop
pop
mov
test
xchg
mov
ss
and
lds
inc
jne
add
add
leave
adc
hlt
sub
ret
fsts
enter
mov
adc
mov
mov
mov
aad
mov
jno
scas
dec
sahf
cmp
sub
outsb
push
ljmpw
iret
push
out
jne
in
movsl
aad
push
mov
mov
inc
push
roll
stos
inc
and
mov
mov
subl
vsubsd
test
in
or
pushf
aas
leave
test
jg
push
test
or
mov
call
jmp
sbb
test
mov
popa
stc
gs
ja
jl
cwtl
stos
cs
imul
ja
clc
rcr
clc
jo
xor
mov
xor
xchg
fmuls
fisubl
mov
out
arpl
lods
es
or
sahf
inc
cmp
test
and
cmp
jmp
push
cmpl
mov
fldcw
sbb
inc
out
push
test
stc
addb
stos
mov
jbe
out
fnstcw
cmp
gs
jae
pop
out
loop
cmp
xor
mov
jp
adc
sub
xor
xchg
int
lret
and
mov
inc
dec
lods
xchg
pop
mov
or
les
rcll
inc
loopne
inc
sti
not
hlt
sbb
out
call
fmull
dec
mov
mov
ljmp
pop
mov
loope
stos
mov
xor
mov
adc
int
pop
jns
jmp
jle
jo
adc
outsl
sarb
mov
dec
pop
daa
pop
push
inc
lock
jmp
pop
inc
xchg
fisubs
jb
shrb
jmp
decl
ret
push
ja
daa
ret
mov
sub
aad
aad
std
ja
inc
push
pop
jno
xor
mov
pop
mov
jl
push
sub
add
insb
fstpl
rclb
cmp
lret
in
pop
aas
ja
aas
aam
mov
mov
ret
outsl
mov
cli
enter
mov
jmp
jno
xchg
out
pop
scas
lods
arpl
or
xchg
ja
push
lret
cltd
push
in
sbb
movsb
adc
sub
enter
mov
imull
lahf
add
push
jo
add
push
mov
adc
pop
sbb
lds
cld
data16
fxch
movsb
fs
pushf
or
inc
movsl
jne
int
adc
aad
adc
and
sub
sbb
iret
xor
mov
aas
stos
fwait
subb
jbe
sarl
push
pushl
in
loop
loop
leave
xor
mov
enter
bound
rcr
mov
sbb
rcll
popa
add
pop
in
fnstenv
cwtl
js
or
data16
add
add
test
into
iret
xorl
idivl
faddl
inc
out
inc
and
add
icebp
xchg
stos
mov
or
and
mov
adc
inc
sbb
shrb
xchg
daa
lds
adc
loopne
shrb
test
ds
pop
xchg
sbb
push
adc
jo
scas
repz
or
xchg
popf
dec
jo
repnz
push
xlat
bound
xchg
xchg
xchg
pop
ja
cmc
out
hlt
cmp
push
xor
dec
aas
enter
lods
add
mov
dec
push
xor
and
dec
fsubrs
sbb
cmpsb
mov
and
scas
adc
cs
gs
jg
je
rclb
mov
sbb
xchg
mov
lods
xchg
pop
xor
test
jbe
mov
shrb
mov
jmp
aam
sub
divps
xor
call
inc
push
add
cmp
xor
jl
mov
xchg
lds
fisttps
mov
iret
inc
xchg
insl
aad
popa
and
add
cltd
jae
adc
xor
iret
out
inc
fwait
mov
addr16
pop
cwtl
and
repnz
jp
jl
pusha
vrcpps
inc
in
cmp
sub
and
mov
je
repnz
cmp
lret
dec
jae
movsb
ret
push
push
dec
rolb
in
fidivrl
outsb
maxps
sarl
push
push
add
xchg
jne
pop
mov
push
imul
add
xchg
pop
mov
xchg
or
mov
mov
xor
out
dec
aaa
rcl
mov
or
xchg
dec
test
mov
clc
sub
inc
push
sbb
mov
dec
call
loope
sub
push
loop
adc
fdivl
out
insb
stos
jnp
loope
clc
shll
mov
in
sti
fcompl
mov
pop
mov
sti
cmp
scas
jbe
push
movsb
fcmovb
leave
cmp
inc
mov
js
ds
push
adc
mov
add
gs
nop
cltd
mov
cwtl
imul
ljmp
and
jbe
and
test
ja
inc
inc
and
mov
sbbl
push
lods
sub
rcl
lcall
pushf
adc
pusha
rolb
aas
aaa
or
pminub
es
adc
jge
in
aaa
outsl
fcom
mov
inc
sbb
xor
bound
sbb
push
jmp
or
dec
repnz
mov
dec
jne
adc
adc
mov
stos
or
add
add
mov
fdivrl
or
push
aaa
inc
or
sbb
cmp
dec
mov
out
push
cmpb
insb
scas
fldenv
mov
adc
test
stos
cmp
lret
int
lahf
pop
push
inc
lea
aam
andb
push
loopne
fimuls
sarl
addr16
orb
adc
and
pop
inc
call
push
insb
and
sub
fwait
pop
mov
sbb
cli
rorl
mov
push
pop
imul
pop
lret
lea
or
adc
lea
jmp
dec
lock
je
cmp
imul
cltd
cli
dec
das
enter
xchg
call
gs
mov
sub
imul
gs
shlb
and
aam
movsl
popa
fwait
add
mull
mov
cmp
out
xchg
xchg
sub
mov
outsl
scas
jne
cld
inc
lods
pop
xchg
iret
push
fisubl
or
les
dec
cmpsl
mov
jb
inc
sbb
push
inc
adcl
in
jecxz
out
cmc
xor
adc
xor
sbbb
xchg
scas
lock
mov
sub
inc
xchg
insb
push
push
jns
add
inc
in
xor
std
sub
js
cmpsl
enter
out
jae
xlat
into
call
enter
sbb
and
sbb
add
and
xor
mov
bound
test
shll
enter
jae
in
xor
das
testb
cmp
rcr
xor
inc
xchg
insb
fwait
int3
add
pop
dec
inc
ret
mov
test
xlat
add
fisttpll
xchg
mov
sbbl
cmp
mov
xor
inc
scas
adc
lods
rclb
outsl
mov
inc
mov
push
data16
pop
mov
push
ret
test
ret
ficoml
jmp
insb
jns
stos
into
stos
call
pop
pop
adc
xor
insb
xchg
inc
push
stc
add
out
lods
cmpsl
inc
inc
hlt
fcompl
pushf
inc
inc
push
mov
ds
into
jge
bound
push
daa
addr16
psubb
or
popa
add
adc
or
cwtl
sbb
and
inc
clc
jno
push
and
shll
jmp
rcl
leave
ds
xor
lahf
lret
jecxz
in
jns
insl
out
sbb
mov
popa
pop
lock
mov
adc
pushf
sbb
push
test
int
fdivl
imul
push
fistpl
push
mov
pop
js
or
and
mov
add
pop
and
ret
cmpsw
aas
mov
mov
aad
xor
xchg
jns,pt
aam
in
rolb
sbb
push
and
mov
fldl
popf
push
jbe
popf
mov
cmp
je
cmp
inc
fwait
loope
inc
fsub
sarb
mulb
xor
cmpsb
and
xchg
sbb
es
mov
cli
xlat
out
inc
mov
jae
inc
imul
pusha
fnstcw
sub
ret
sarb
test
mov
sbb
adc
pop
aad
add
pop
popf
add
push
test
into
push
pop
fcoms
pop
pop
lcall
push
fwait
push
sahf
cmpb
jb
jge
ja
cmp
loopne
lock
stc
and
test
xor
pushf
mov
call
dec
push
inc
sbb
dec
xor
adc
adc
sub
dec
cmp
mov
nop
iret
push
lods
ds
push
mov
sub
sbbl
sarb
and
incl
push
mov
dec
add
popa
in
imul
push
or
sub
fsubrs
mov
mov
sub
mov
outsl
push
int
xor
ljmp
adc
mov
add
xchg
enter
sub
cmp
fdivrl
stc
movsb
jg
mov
pop
into
push
clc
lahf
xor
jae
push
adc
xchg
hlt
push
insb
adc
lock
scas
and
data16
and
adc
mov
mov
int
push
lret
leavew
xchg
or
sub
push
cmpsb
sub
push
dec
push
mov
xor
in
dec
lods
dec
inc
bound
jno
sbb
push
test
sbb
imul
repz
fwait
adc
iret
mov
inc
dec
dec
imul
dec
arpl
or
xchg
dec
scas
cld
jge
lock
imul
cmp
fistps
adc
add
in
mov
fs
les
push
and
lahf
mov
stos
xorb
mov
jo
sub
mov
data16
test
pop
cmp
push
imul
in
sbb
jne
ja
adc
cltd
jbe
push
test
dec
sub
add
dec
mov
sbb
js
inc
pop
sete
inc
scas
adc
mov
test
and
or
jecxz
icebp
and
das
xlat
shll
mov
jle
cmc
or
jecxz
ja
movl
xor
or
imul
ja
xchg
xchg
inc
jp
mov
loop
and
and
dec
add
push
outsl
mov
pusha
imul
jae
lret
xchg
pop
add
ret
sub
add
clc
ret
call
jmp
fistl
cmp
hlt
out
loope
into
mov
shlb
sti
xchg
push
push
jo
cmp
lods
xchg
js
clc
pop
or
pop
xor
shrd
lcall
test
adc
cmp
push
addr16
sub
sbb
jl
sub
std
or
loopne
dec
xor
mov
fsubl
xor
enter
daa
push
pop
movsb
xor
dec
in
ret
push
lret
inc
jnp
stc
outsl
mov
dec
test
outsl
pop
mov
fdiv
ss
dec
mov
arpl
adcl
sub
pop
sub
mov
lret
mov
adcb
in
je
mov
xchg
xor
je
jns
cmpb
sbb
in
ss
movsb
imul
sub
jge
sbb
mov
pusha
push
lods
loop
aas
xchg
mov
imul
jb
mov
lods
mov
fimull
jo
fs
push
daa
mov
int3
pop
lret
ss
jge
or
push
jecxz
cmp
dec
hlt
jl
jbe
sti
pushf
call
cmp
pop
out
mov
fisttps
add
pushf
out
sbb
push
test
xchg
outsl
dec
aam
hlt
mov
pop
sub
jo
cmp
mov
fnsave
in
ss
sbb
pop
xor
aad
xchg
sbb
fsubrl
mov
cmp
mov
cli
push
mov
jne
fs
mov
rcll
push
into
cli
stc
test
mov
loopne
loope
popa
xor
mov
scas
jge
push
push
fisubl
jns
and
fwait
adc
dec
cmp
mov
int3
subb
test
dec
dec
js
mov
jno
std
mov
pop
and
pop
xchg
add
adc
cmp
fstps
outsl
inc
mov
push
sub
adc
pop
dec
jne,pt
push
jmp
lahf
push
and
mov
addr16
adc
jge
pop
sub
add
shrb
xchg
popa
shrl
hlt
mov
icebp
push
adc
daa
iret
popa
jp
sar
pop
push
testb
popa
push
xor
rol
ret
dec
in
movsl
jl
stos
mov
hlt
sub
and
je
negl
jg
mov
pop
adc
adcl
pop
ja
pop
data16
add
pop
pop
xchg
mov
and
test
pushf
insb
sub
inc
inc
mov
insb
pop
rorb
iret
pop
aam
enter
sub
in
out
test
lahf
lcall
sti
stos
push
fbstp
sub
cltd
adc
into
jmp
xchg
sbb
movswl
pop
sbb
cmp
xchg
jb
popa
dec
xor
mov
cltd
shrb
mov
jne
int
and
add
mov
inc
lret
cmc
sbb
int3
pop
or
in
dec
dec
mov
std
jno
jne
rcll
inc
outsl
inc
jae
pop
sub
mov
sub
mov
xchg
cli
sbb
fimull
mov
jno
add
or
out
and
push
pop
fcoms
mov
mov
orb
popa
or
ret
push
add
or
mov
mov
ret
in
cmc
or
testl
popa
pop
andb
scas
call
sarl
ljmp
xchg
push
mov
dec
xor
mov
ss
iret
sbbl
mov
or
dec
sub
pop
mov
les
aad
sti
pushf
pop
out
pop
jl
loope
cmp
sahf
es
test
jb
or
cs
addr16
nop
xlat
jno
fisubrs
out
push
sub
clc
mov
lods
aad
mov
mov
adc
jg
les
pop
pop
or
mov
fwait
xchg
pop
lret
cli
jmp
jns
cmp
pop
call
pop
dec
push
test
sub
lcall
jno
lea
push
mov
cmp
dec
pop
mov
fs
dec
out
mov
sbb
push
cltd
adc
scas
pop
jns
mov
outsl
stc
pop
cmp
xor
sbb
jmp
jp
outsl
popa
int
xchg
lahf
and
mov
adc
mov
fstpl
fadd
sub
loopne
cmp
mov
mov
cmovs
dec
dec
fldcw
or
add
and
fstl
inc
ss
test
or
out
fld
pushf
rcrl
or
mov
pop
jb
mov
adc
movsl
int
push
sbb
or
dec
mov
add
cmp
cmpsl
or
shll
dec
add
or
jmp
insl
push
inc
imul
pop
xchg
pop
mov
mov
or
outsb
ror
xchg
shll
cwtl
nop
fldenv
cltd
cmpsl
iret
adcb
les
adc
inc
mov
xor
push
xor
mov
insb
scas
and
adc
retw
push
inc
in
jnp
inc
xor
stc
add
test
test
je
push
jnp
adc
adc
mov
iret
jecxz
adcl
int3
push
inc
jge
mov
push
test
test
push
outsl
and
and
lods
pop
adc
bound
mov
mov
outsl
dec
sub
adc
fs
mov
out
sbb
mov
push
adc
sbb
aam
jmp
rolb
dec
clc
cltd
add
loop
cmp
sti
lds
sbb
test
daa
es
js
push
jge
lods
movsl
pop
arpl
pop
sub
testb
add
jb
inc
and
mov
andb
loopne
xor
mov
adc
aad
push
mov
mov
nop
cwtl
out
push
lcall
mov
mov
stos
sbb
jo
in
js
ficomps
push
sti
mov
push
xchg
adc
inc
repnz
dec
cmpsl
fistl
hlt
or
fdiv
sub
mov
jno
add
fidivs
sahf
push
ja
bound
mov
int
imul
pop
xchg
dec
jl
stos
orb
cmp
xor
adc
push
fcoml
push
sub
sbb
inc
aad
inc
mov
push
inc
push
push
inc
pop
call
mov
lahf
add
clc
mov
and
mov
shll
dec
mov
xor
push
sbb
cmp
mov
in
sbb
in
or
xchg
jb
idivl
sahf
cmp
mov
test
pushf
mov
xor
sub
and
aaa
into
add
inc
xchg
sub
sahf
loope
rorb
mov
outsb
test
arpl
adc
xor
bound
fcomps
lret
ffreep
inc
aad
imul
add
pushf
xchg
scas
pop
nop
out
in
rorb
dec
or
ljmp
stos
mov
mov
or
rcrb
push
cmp
xchg
cmp
lds
shrb
stos
adc
pop
cmp
pop
ljmp
shll
xchg
aas
mov
adc
ret
sbb
pop
mov
add
mov
inc
add
call
insl
cltd
leave
push
addl
or
lcall
dec
jg
arpl
loope
aad
roll
and
and
pop
aas
mov
popf
or
jl
daa
sbb
es
inc
outsb
dec
push
mov
adc
mov
pop
sbb
es
in
xchg
jmp
call
mov
aaa
adc
or
cld
xor
imul
lock
jne
jo
or
xchg
into
pop
movsl
jecxz
hlt
ja
push
mov
jnp
dec
mov
cmp
pop
xchg
and
fcompl
aad
mov
push
sub
stos
mov
sarl
xchg
ds
xor
stc
and
es
leave
rolb
pop
pop
cmp
sbb
mov
xchg
push
pushf
jp
fcomps
xchg
std
xor
add
les
cli
or
flds
out
jecxz
test
and
repnz
ret
jae
cmp
push
lea
inc
xchg
sbb
mov
fs
out
push
mov
popf
sbb
scas
adc
xchg
mov
mov
jmp
sbb
pop
call
mov
mov
jnp
adc
testb
adc
dec
dec
cltd
es
jecxz
pmuludq
ds
push
mov
test
sbb
das
out
mov
addr16
mov
sbbb
xchg
jge,pn
or
inc
xor
imul
pusha
das
cltd
les
cmpsl
xchg
or
test
and
push
out
mov
mov
add
pusha
xor
test
out
jb
mov
mov
push
xchg
or
shll
dec
pushl
mov
push
sbb
dec
jmp
pop
arpl
rcl
flds
call
fnstsw
lret
ds
sbb
jecxz
stos
mov
aad
or
fildl
mov
cwtl
mov
xor
xor
dec
repnz
and
xor
sub
dec
and
popa
mov
stc
jecxz
test
das
inc
mov
adc
sub
xchg
cs
xor
frstor
adc
inc
lcall
daa
dec
scas
pop
outsb
push
sbb
cmpsl
mov
jne
and
mov
scas
mov
adc
push
inc
sbb
inc
ret
cmp
mov
add
push
dec
mov
xchg
cmp
ret
sete
into
xor
addr16
mov
int
pop
adc
dec
inc
fmull
out
out
pushf
ja
outsb
mov
movsb
daa
or
pop
push
repnz
and
inc
add
cmp
pop
xchg
pop
lods
loope
movsb
shll
mov
pop
mov
ret
lods
inc
insl
adc
mov
inc
jo
mov
outsl
mov
ljmp
es
push
push
sub
and
fisttpl
lcall
and
rcrl
or
mov
adc
lds
add
or
cld
inc
lods
xchg
js
popf
mov
add
icebp
ret
adc
cmp
mov
add
inc
cwtl
inc
dec
inc
leave
cmp
fwait
in
dec
sbb
mov
sub
leave
mov
push
into
mov
xchg
push
pop
pop
push
jae
pop
pop
dec
cmp
jmp
cmc
and
nop
inc
sbbb
outsl
inc
fdivp
push
jno
jp
fldt
cmpsb
cs
sahf
mov
push
ss
adc
sbb
fcoml
jae
adc
jmp
fs
in
sarl
cli
fldenv
or
mov
dec
xor
pop
dec
ss
sbb
aad
in
cmp
mov
cli
and
pop
out
js
mov
add
cmp
divb
cmp
in
mov
lcall
xorb
or
mov
jge
ljmp
pusha
pusha
aas
jmp
loopne
add
and
into
fwait
lahf
fdivl
daa
add
je
add
xchg
sbb
cltd
stos
push
fwait
push
jno
flds
xor
xor
xor
in
sub
mov
mov
jmp
subl
dec
mov
bnd
popa
pushf
fcompl
stos
bound
pop
scas
pusha
pop
dec
cmp
ret
push
jge
addr16
xor
mov
int
cli
mov
add
xlat
out
scas
pop
popf
jb
fisubs
push
in
jae
lret
lea
and
and
push
out
cmp
aad
dec
jb
dec
xchg
push
ror
adc
in
push
xor
movsb
cmc
out
mov
scas
push
adc
push
lods
sbb
stos
pop
adc
in
stos
push
mov
sub
sbb
push
add
pop
fbld
lods
divl
rclb
decb
movl
out
lods
mov
cld
or
mov
sbb
push
jp
mov
jnp
adc
pop
jo
jmp
test
les
adc
sbb
or
call
sub
ja
jl
mov
cmpxchg8b
outsb
mov
pop
or
adc
imul
cmpsb
fwait
imul
mov
xchg
popf
ja
cmp
pop
das
lods
push
inc
jl
bound
jnp
xor
ss
rcl
adc
in
mov
mov
fldt
dec
pop
fcoms
fistl
mov
mov
adc
cmp
movsl
push
sub
add
ss
xor
clc
jo
fadds
notl
cltd
loop
movsl
jae
xlat
xor
sar
movsb
lret
cli
pushf
inc
mov
jmp
jg
int
sub
in
test
pop
push
lcall
adc
nop
mov
popf
sub
test
test
jl
dec
add
push
sub
add
rolb
inc
ret
rcl
sahf
stos
ljmp
add
mov
xor
pop
xor
movsb
cwtl
scas
add
or
xor
xlat
je
jo
or
or
movsl
xchg
cmp
add
xor
daa
mov
subb
stos
pop
inc
lret
jo
loopne
mov
out
fs
cmpb
mov
pop
and
add
add
adc
inc
jnp
jns
movsl
xlat
push
lcall
js
rorl
inc
adc
jmp
mov
icebp
mov
mov
dec
jle
leave
xchg
push
in
mov
xor
mov
xor
xor
pop
popa
aad
xchg
xchg
outsl
mov
fldt
and
xor
jnp
test
dec
iret
pop
loopne
fs
push
mov
and
jb
xor
les
push
idivb
dec
js
jge
cwtl
fisttpll
in
adc
cli
aaa
lahf
sub
cmc
jne
sub
mov
xor
mov
jae
jg
fwait
lret
sti
lea
push
cmpsb
jnp
xlat
add
inc
push
jb
addr16
push
xor
mov
pop
push
andl
push
pop
adc
mov
fistpll
jp
or
inc
pop
add
lods
cmp
or
xor
sbb
mov
es
out
imull
add
xchg
lahf
add
push
push
pop
cmp
or
mov
hlt
outsl
das
insb
mov
insl
jmp
into
js
mov
sbb
jle
test
mov
or
mov
dec
push
xor
enter
lds
rcr
cmpb
int
insl
mov
adc
dec
cli
inc
pcmpeqd
int3
mov
mov
mov
adcb
test
jmp
test
pop
mov
mov
mov
bound
std
sahf
ja
inc
xchg
nop
cltd
enter
clc
sbb
lret
popl
mov
xor
ljmp
pop
cs
jge
jns
jg
adc
test
inc
pop
add
and
add
xor
sahf
sub
adc
out
inc
mov
push
cs
dec
pop
jns
adc
adc
pop
inc
daa
nop
pop
xor
adc
cmpsl
mov
add
push
mov
pop
lods
sub
inc
jmp
adc
sbb
insl
sahf
add
cltd
ret
mov
mul
fwait
push
stos
adc
fs
ja
into
pop
xchg
inc
xor
jne
push
jecxz
roll
and
inc
push
pop
ficompl
fxch
in
and
add
pop
test
push
add
push
loopne
push
lods
lds
jnp
ret
dec
sbb
mov
test
call
dec
add
cmp
jns
sbb
jg
les
ret
mov
aaa
out
mov
or
inc
xchg
sbb
push
push
ret
iret
and
loopne
push
sarb
subl
pusha
es
xchg
push
js
sbb
inc
ljmp
dec
dec
fidivrs
mov
stos
lods
push
jb
pop
push
arpl
inc
mov
movsb
insl
cmp
push
pop
jl
fisubs
loopne
test
sti
je
mov
fsubl
pop
call
jbe
out
mov
fs
ja
adc
es
loop
and
js
or
dec
cmp
jo
cmc
sahf
cmc
cmpsb
mov
add
fcoml
pusha
mov
jo
lret
push
mov
adc
loopne
xchg
scas
aad
jo
nop
decl
loope
or
stos
ret
icebp
mov
mov
add
loop
jle
mov
das
mov
clc
arpl
dec
push
out
outsl
dec
xor
aaa
inc
fwait
add
lret
jp
mov
jo
push
sub
daa
lods
outsb
jg
or
mov
xor
xchg
adc
pusha
imul
jl
shl
xchg
pop
mov
mov
push
outsl
cs
inc
adc
mov
xor
dec
mov
mov
and
mov
loopne
daa
int
mov
cmpsb
mov
shlb
enter
sbb
pop
outsl
dec
and
in
mov
jl
xchg
add
loopne
push
scas
push
cli
and
and
lcall
xchg
jge
cmp
pop
ret
mov
pushf
sub
push
aas
xor
mov
mov
fbld
xchg
inc
sub
push
jl
mov
andl
stos
iret
jb
mov
scas
adc
push
cwtl
cltd
icebp
adc
nop
dec
imul
jne
xchg
mov
sar
clc
jo
test
push
inc
icebp
insb
and
out
add
mov
mov
pusha
dec
out
movsb
cltd
lock
push
mov
aam
pusha
sub
jno
movsb
cmp
lods
std
push
or
push
xor
mov
lret
sbb
mov
fldenv
jbe
mov
mov
mov
xchg
push
movsl
cli
push
movsl
incb
mov
adc
pusha
adc
and
xchg
xor
pusha
dec
das
and
aas
call
iret
jo
aad
cli
outsb
lahf
mov
enter
mov
insl
jp
push
sti
mov
xor
pusha
repz
bnd
and
xchg
pop
mov
adc
jbe
fdivl
fidivs
cmp
fsubs
pop
clc
add
mov
pop
out
adc
mov
mov
in
dec
and
jno
add
les
out
mov
and
ret
push
aad
data16
xor
sub
add
mov
or
mov
cmp
mov
scas
out
out
sbb
and
jecxz
icebp
pop
hlt
jmp
xchg
jbe
adc
add
add
mov
ret
sub
jns
pushf
std
pop
mov
std
rorb
rcll
icebp
mov
fildll
sbb
cs
cmpsl
or
sarl
cld
xchg
lret
pop
mov
ret
pop
clc
enter
pop
cmp
push
fistl
jne
xchg
aad
dec
jmp
or
adcb
pop
pop
xor
lahf
jg
jmp
sti
aaa
xor
ret
lods
jle
pop
sbb
jo
call
sub
sub
aas
or
daa
pusha
movsl
jb
les
dec
cmc
clc
sub
pop
mov
mov
bound
and
mov
repnz
sub
js
aas
fcomip
jbe
pusha
test
lret
std
call
jmp
cltd
iret
jl
add
dec
ja
adcb
imul
fistl
stc
insl
sbb
movsb
sbb
pop
pop
repz
cmpsb
xchg
sub
popf
or
repnz
pop
push
push
mov
mov
xchg
cmp
xor
and
je
xor
jns
in
int
add
js
inc
rcrb
pop
enter
nop
cmp
out
push
or
and
lds
outsb
stc
inc
ds
cltd
cmp
mov
push
mov
daa
lret
psubd
and
rolb
xor
sub
jecxz
outsl
sti
stos
ljmp
fisubs
cmp
cmpsl
ja
push
or
ret
imul
dec
mov
js
push
ret
or
pop
pop
insb
loopne
daa
pop
gs
movsl
std
push
ret
mov
outsb
mov
pop
pop
xchg
xor
mov
pop
pop
aad
cmp
jns
mov
inc
inc
adc
or
repnz
and
adc
popa
push
lods
pop
mov
dec
mov
aaa
iret
test
push
je
aas
cmp
test
xchg
adc
push
sbb
and
mov
in
push
sbb
js
xlat
xchg
xor
cmp
mov
jno
in
es
sbb
cmc
insb
movhps
xor
in
inc
sti
mov
sub
push
xor
pop
jb
sarb
stos
addr16
add
out
outsl
stc
ds
and
add
lret
bound
fs
xchg
adc
sub
xor
shlb
mov
loope
mov
clc
jo
pusha
add
mov
xchg
inc
jne
andb
pushf
call
hlt
jecxz
iret
fisubs
in
out
cli
enter
fwait
rcrb
jge
decl
dec
repz
cmp
push
mov
cli
cmc
adc
mov
inc
mov
rolb
pop
daa
or
xchg
leave
faddl
xchg
xchg
aaa
mov
jp
stos
inc
ljmp
add
sahf
or
mov
mov
outsl
pop
loopne
jno
inc
mov
inc
aad
iret
cmp
jns
jo
sbb
aam
out
leave
or
pop
jge
daa
cmp
mov
mul
fldl
xor
pop
lea
pusha
frstor
imul
xor
cwtl
outsl
ja
mov
xlat
mov
dec
mov
pop
adcb
sub
xchg
into
into
into
scas
cmpl
rcll
mov
aad
data16
cmpsl
sub
popf
call
push
and
or
ret
dec
adc
sub
adc
popf
and
lcall
xor
je
imul
imul
mov
es
mov
in
xchg
movsb
int3
fwait
call
and
adc
sbb
fcomp
xchg
xor
ficomps
ret
or
movsb
add
adc
sub
bound
mov
push
repz
xchg
or
loop
xor
pushf
jns
dec
push
push
cmp
dec
or
ljmp
lcall
incb
mov
adc
imul
fadds
dec
test
xchg
lahf
aas
mov
lcall
aad
sbb
mov
xchg
push
ret
repz
push
mov
mov
push
aaa
pop
sar
sub
mov
cmp
lret
inc
or
sarb
pop
idivl
or
vcmpss
or
gs
jg
sub
and
jne
js
jmp
nop
aam
jnp
repnz
movsb
mov
xchg
ds
enter
outsl
out
jb
testb
xchg
sbb
mov
addl
mov
dec
sub
aaa
inc
mov
pushf
adc
mov
pop
cmpsb
gs
stc
add
int3
cmp
mov
scas
filds
inc
xor
int
inc
adc
loope
pop
aaa
in
add
popa
mov
out
cltd
or
ret
movsb
inc
sub
rcrb
nop
add
and
inc
jne
aad
popa
enter
jmp
inc
jg
and
cwtl
mov
mov
xchg
dec
insb
dec
aad
dec
xchg
xchg
sbb
out
rcrb
rol
bound
stc
movsl
cli
jmp
addr16
divl
fisubrl
jno
pop
loop
push
xor
testb
jecxz
xor
ljmp
loope
pushf
cltd
sahf
pusha
nop
adc
cmpsb
sbb
mov
lea
addr16
mov
stc
nop
or
shrb
push
xor
or
fidivs
xchg
pushf
scas
test
aaa
pop
das
addr16
sub
jl
dec
mov
push
loopne
je
and
jno
ljmp
push
pop
ret
clc
outsb
test
roll
insb
out
repnz
dec
mov
jle
je
shlb
sbb
fidivs
inc
mov
in
adc
fbld
jmp
xor
xor
sub
push
mov
adc
scas
inc
fists
push
mov
xor
insl
fldcw
cli
pop
sub
cmp
xor
movsb
and
lret
pop
dec
js
jg
pop
jmp
mov
lods
cmp
stos
dec
out
mov
mov
or
data16
icebp
sbb
sar
or
lea
xchg
outsb
pop
cld
mov
std
cld
test
cltd
rorb
jns
cmpsb
sahf
test
jo
dec
adc
scas
gs
test
pop
mov
dec
xor
cmp
js
loope
mov
dec
dec
iret
inc
movsl
pop
imulb
sbb
rolb
mov
mov
daa
stos
imul
les
std
mov
pop
in
adc
lods
enter
cmp
cmp
js
inc
idivb
dec
inc
sahf
or
mov
fs
jae
jnp
sahf
xchg
xchg
call
lock
jmp
sbb
sbb
out
mov
lods
iret
adc
fnstenv
movsl
sub
lods
mov
lea
sti
stos
scas
fsts
pop
mov
stos
xchg
divl
xchg
ja
jmp
mov
int
out
ljmp
dec
dec
ret
test
mov
mov
mov
and
jmp
mov
popf
jno
cld
dec
pop
push
in
nopl
movsb
cmpsb
scas
in
lret
sub
jns
jle
or
das
lods
xchg
bound
scas
jle
sbb
mov
mov
inc
lahf
insl
scas
je
mov
jo
aaa
pop
xchg
mov
inc
mov
sbb
cmp
mov
and
push
mov
jb
imul
addr16
in
xchg
std
aad
jne
mov
lods
imul
xchg
loope
std
push
int3
clc
aam
in
out
pop
icebp
fidivrl
and
dec
stos
fsubrs
adc
jg
jl
ja
rcr
loopne
push
nop
push
lds
inc
cwtl
pop
inc
or
or
mov
hlt
pop
adcl
cmp
out
and
dec
sub
dec
fbstp
sbb
lret
and
clc
ljmp
cmp
sbb
insb
or
pop
ficoml
iret
jbe
ret
cmp
rcrb
xor
daa
mov
mov
jecxz
and
jo
push
mov
scas
es
lock
pop
fists
popf
xchg
sbb
xor
addl
adc
sbb
ss
int
scas
push
enter
jno
fs
sbb
sub
out
popf
mov
movsb
mov
ror
cmp
cltd
pop
cmpb
jge
fsubrs
nop
rcr
dec
loop
mov
inc
mov
mov
adc
nop
stc
jp
sahf
and
aaa
ja
js
cmp
cs
xchg
cmp
inc
jno
movsl
xor
inc
scas
ss
push
imul
mov
andl
sub
pop
int
frstor
or
rol
mov
sub
ljmp
mov
ret
jo
and
cmc
pop
xchg
cmp
mov
mov
mov
or
pop
push
je
adc
ret
push
pop
sti
adc
add
push
xor
iret
jns
or
fldl
push
outsb
and
pusha
cmp
push
test
into
xor
add
mov
das
mov
enter
aas
repnz
leave
add
scas
push
mov
cmpsb
movsl
test
iret
fisttpll
insb
xchg
inc
xchg
xchg
pop
sahf
cmp
mov
push
xchg
cmp
dec
pop
inc
xchg
pushf
dec
dec
testl
stos
mov
in
cmpsl
out
je
sbb
test
lcall
sbb
and
lahf
sahf
movl
pop
push
push
push
cmp
adc
iret
adc
jl
pop
mov
cmp
adc
int3
dec
ret
sub
inc
popa
filds
mov
xor
popf
xchg
iret
frstor
cmp
add
push
scas
cmp
repnz
sub
xor
add
add
fwait
pushf
cmp
xlat
scas
sti
pop
mov
stos
imul
gs
fbld
xor
fdiv
or
or
and
inc
push
sub
shr
ret
jbe
es
or
jne
adc
push
xchg
dec
ror
imull
cmp
or
insb
lret
fwait
push
adcb
push
lods
mov
es
in
jb
pop
roll
xor
insl
lods
loopne
es
push
xor
data16
cmc
std
xor
nop
jmp
nop
daa
xchg
cmp
dec
push
dec
and
sbb
ja
xchg
sub
jecxz
lret
int
cld
pop
pop
notl
or
push
jmp
test
arpl
inc
add
push
imul
push
out
into
cltd
ljmp
or
aad
shl
daa
adc
pusha
push
push
dec
in
pop
sbb
inc
pushf
mov
push
pop
jnp
jmp
mov
scas
dec
inc
std
out
cmp
xchg
ret
push
pop
mov
push
addr16
push
divb
scas
lahf
jg
daa
mov
ret
jbe
icebp
bound
cld
icebp
pusha
jnp
mov
stos
sbb
pop
mov
repz
jmp
jl
jns
mov
test
subb
lcall
subl
adc
or
mov
jp
ljmp
jmp
push
xchg
lock
pop
pop
das
mov
mov
les
cs
imul
gs
xchg
mov
inc
or
sub
pop
in
test
into
push
es
push
sbb
pop
mov
movsl
push
pop
test
push
insl
inc
sub
jb
sub
cmp
jmp
nop
push
inc
ret
mov
mov
testb
xchg
lods
inc
mov
pushf
mov
out
nop
add
scas
mov
sbb
in
fldenv
es
arpl
and
bound
inc
and
sub
pop
inc
fistl
dec
hlt
or
aas
movsb
jnp
xchg
jge
std
mov
inc
dec
les
sub
sbb
dec
sarl
test
mov
xor
or
or
mov
mov
aad
scas
push
sti
movsl
mov
in
test
in
push
or
nop
roll
iret
xchg
fnsave
cmp
xchg
push
les
jns
int
inc
cli
sub
push
cmp
in
lret
fcompl
pop
or
xchg
push
xor
jmp
mov
sub
or
dec
in
dec
inc
sbbl
jge
mov
test
xorl
or
jge
and
or
loop
les
mov
sub
xchg
pop
mov
mov
leave
hlt
out
dec
xchg
lahf
xor
shrb
inc
mov
outsb
jns
add
xchg
mov
fwait
jnp
dec
push
xchg
and
sub
xchg
int3
scas
xchg
cli
push
mov
dec
inc
loope
into
lcall
add
out
add
mov
pop
inc
and
add
pop
testl
dec
dec
push
push
inc
add
and
mov
mov
and
jg
roll
inc
nop
js
fimuls
pop
or
mov
es
cli
fmuls
sub
hlt
xor
arpl
clc
adcl
jmp
addr16
mov
xlat
mov
jne
lock
mov
test
iret
mov
gs
imul
dec
test
lret
jg
mov
jns
mov
je
call
scas
push
notl
lods
push
jmp
mov
es
daa
push
xor
or
ja
pop
push
loop
pop
xor
jecxz
jne
call
dec
scas
jg
in
push
sub
movsl
sbb
stos
les
cmp
andb
stos
fisubrs
xor
sub
jns
aas
test
fistl
loopne
xchg
dec
fcompl
aas
jmp
sbb
mov
sahf
cmp
pop
ficoms
xchg
mov
shld
ret
fs
adc
add
lcall
jo
loope
or
in
repnz
imul
mov
or
rcll
mov
xchg
in
mov
fdivrl
outsb
jno
pop
imul
push
test
xor
fsts
jno
xchg
cmp
mov
movsb
fs
outsl
cltd
jmp
imul
push
in
sub
adc
lock
ja
inc
int3
adc
ja
cmp
repz
fucomi
pop
je
icebp
outsb
scas
adc
testb
lret
jo
and
ds
jmp
popa
xchg
dec
call
ret
fstl
inc
and
fdiv
fnstenv
sbb
daa
sbb
pop
loope
sbb
outsl
mull
movsl
pop
bound
cs
push
cmc
fstl
jmp
dec
jbe
sarb
aas
pop
dec
cli
mov
push
shlb
pop
popf
adc
xor
add
sbb
push
xchg
mov
pop
int3
nop
mov
subl
out
rcl
nop
pop
add
add
cld
xchg
and
jp
mov
inc
jo
or
cmpsl
fimull
cmp
inc
cmp
inc
fadds
mov
jg
and
dec
out
and
out
push
pop
jmp
and
testb
inc
decl
cs
sahf
push
xor
lret
cmpsl
add
hlt
mov
sar
lea
inc
sub
jl
push
push
push
push
outsb
fmul
ds
mov
pusha
roll
sbb
lret
push
xchg
mov
loopne
fiadds
mov
imul
shll
icebp
xor
pop
clc
icebp
ret
xchg
mov
adc
mov
dec
cmc
jmp
ja
sbb
cli
xchg
stc
cs
inc
mov
outsb
adc
in
lods
mov
cmp
xorb
cld
rcll
mov
and
sbbb
jle
cmp
aaa
insl
cmp
popa
push
daa
inc
sub
cmp
js
jge
push
test
mov
push
loop
sbb
cld
clc
mov
xlat
pop
arpl
fimull
movsb
scas
dec
xchg
pusha
and
pop
bound
cmp
or
rolb
ret
test
fstps
xor
icebp
dec
stos
mov
mov
and
mov
repz
and
mov
stos
addl
cmp
pop
add
push
jne
aaa
cmp
pop
call
push
rcrl
pop
add
std
and
jge
inc
ror
jno
and
mov
fwait
xchg
add
pop
add
jnp
fwait
loope
jo
push
fnstenv
aaa
clc
or
mov
lret
or
mov
icebp
icebp
ficompl
inc
inc
lea
pop
stc
or
push
push
in
push
dec
mov
push
cmp
sbb
xlat
jg
dec
adc
mov
or
stos
mov
jns
jge
aas
mov
mov
enter
fidivs
aaa
adc
mov
rcrb
push
jbe
testb
pop
fs
cmpl
or
push
andb
idivl
add
imul
dec
lods
dec
out
mov
iretw
xor
inc
sahf
inc
xchg
mov
repz
pop
enter
call
or
dec
jle
stc
jns
sbb
loop
lock
repnz
rorl
mov
pop
roll
mov
jl
les
movsb
lods
daa
jge
jp
cli
cmp
jae
in
mov
int3
cs
out
pop
and
bound
mov
imul
mov
insb
mov
dec
cmp
hlt
test
outsl
int
push
pop
bound
movsl
cmp
mov
or
call
add
sbbb
sbb
add
sahf
jle
inc
test
outsl
in
fwait
shrl
xor
xchg
cli
out
lahf
in
jmp
iret
xchg
add
js
xchg
mov
fldlg2
test
in
incl
imul
pop
push
cmp
stos
popf
pop
fdivr
push
or
mov
loope
and
mov
aad
sub
int
xchg
call
inc
cltd
es
enter
shrl
xor
scas
fisubrs
jne
inc
jae
and
add
test
movsb
rolb
int
out
adc
cs
xlat
and
int
push
xor
ret
je
into
icebp
pop
and
xor
jbe
mov
out
hlt
lods
sahf
rorl
sub
loop
movsb
push
xlat
xor
mov
jb
arpl
test
jmp
arpl
je
or
stos
mov
gs
lcall
push
add
in
imul
scas
mov
or
fiaddl
cmp
shlb
adc
adcl
mov
and
pop
jl
add
xchg
in
idivb
dec
mov
mov
push
scas
outsl
or
sbb
xor
xchg
cltd
push
sbb
inc
sbb
in
jae
push
imul
sub
push
lock
ljmp
inc
pusha
das
push
cmp
push
push
int
aam
inc
js
or
mov
and
pop
sbb
mov
jmp
fdivl
xor
mov
outsl
mov
mov
je
jecxz
fwait
enter
js
clc
mov
in
jg
xchg
jbe
or
pop
adc
bound
xor
cltd
gs
adc
add
xchg
adc
loope
in
add
xor
rclb
int
dec
pop
pop
jp
xchg
fwait
je
rcrl
jb
out
jbe
sbb
mov
push
jle
jle
fsubr
lcall
pop
jmp
xchg
dec
aad
js
negb
fists
ss
dec
pop
leave
inc
jecxz
dec
sub
outsb
mov
sub
mov
adc
enter
insb
and
mov
aaa
fisttps
mov
or
push
in
test
aam
aam
mov
jnp
rcrb
loopne
mov
cmp
pop
bound
orb
stos
imul
xchg
and
jecxz
lock
adc
mov
in
pushf
inc
adc
jge
sbb
clc
push
nop
iret
pop
std
insb
inc
ja
lods
sti
cmp
movsl
mov
ljmp
sub
dec
in
and
xor
imul
arpl
lods
mov
out
mov
bound
sbb
push
push
or
xchg
and
pop
dec
sub
push
mov
lret
xchg
pop
mov
jmp
xchg
pop
add
lret
push
xor
pop
adc
mov
jge
mov
adc
fsubs
lcall
cmp
sbb
push
mov
loope
fists
inc
aam
xchg
jo
or
repnz
jg
inc
jmp
pop
hlt
stos
push
cmp
inc
stos
movsl
inc
xor
cmp
pop
movsb
or
add
adc
inc
pop
cs
lods
jnp
push
repz
bound
or
add
push
pop
sbb
out
sti
shlb
roll
dec
in
cli
inc
xor
add
scas
sti
scas
fldt
cmp
pushf
outsb
sbb
scas
in
fnstenv
idivb
inc
and
add
cmpb
mov
loop
xchg
inc
mov
es
adc
je
cmp
loop
cmp
iret
mov
xorl
addr16
mov
mov
xor
js
or
int
jnp
gs
mov
imul
dec
lahf
mov
xchg
and
pop
sbb
cmp
shlb
jbe
push
pop
mov
daa
mov
adc
or
mov
add
stc
adc
inc
div
imul
hlt
cmpsl
jbe
imul
lret
js
lock
out
into
inc
sub
pop
mov
lcall
es
mov
inc
sub
pop
adc
lock
mov
addr16
cmc
decb
ds
std
mov
es
gs
movsl
add
rorl
stos
cmp
or
pop
test
and
in
xor
mov
fucompp
movq
pop
inc
loope
insb
iret
inc
xchg
mov
mov
pushf
fcoms
sbb
lcall
sbb
aam
in
fldcw
pushf
dec
add
push
cmp
pop
into
adc
lcall
lahf
shl
fcompp
sbb
out
mov
inc
bound
inc
jmp
notl
cwtl
or
js
cmp
packssdw
mov
lods
jbe
mov
xchg
xchg
ret
f2xm1
mov
int
xchg
lods
add
inc
in
inc
repnz
insb
cmp
jns
in
aaa
fiadds
push
dec
mov
imul
ret
icebp
xchg
addl
mov
xor
mov
mov
mov
mov
pushf
int3
pop
xor
enter
or
xor
dec
jecxz
pop
push
dec
mov
push
xchg
sbb
cltd
mov
test
lock
cmp
pop
xchg
pusha
inc
mov
sbb
stos
insb
stc
inc
mov
xchg
in
cmp
int3
mov
pop
movsl
lcall
std
pop
cmp
mov
sar
out
fildll
jne
jmp
jne
rcrl
sbb
shrl
pop
loopne
imul
and
cmp
js
outsl
adc
jge
or
lock
push
pop
xor
ljmp
push
jns
sarb
out
in
cmp
push
sub
push
aad
adc
or
add
inc
sbb
sub
scas
cmp
adc
movl
in
inc
aad
fsts
inc
adc
mov
jle
pop
popa
cmp
push
xlat
mov
or
adc
adc
add
fdivl
jmp
jp
fisttpl
xor
sub
adc
mov
lcall
jle
stc
push
pusha
xchg
xchg
pushf
outsb
sbb
dec
lea
cmp
in
pop
lea
or
inc
pop
push
push
popa
aaa
xchg
data16
movsb
movsb
adc
ss
das
shr
clc
add
sbb
xchg
mov
dec
mov
adc
mov
dec
nop
cmp
xor
mov
mov
ljmp
push
testb
insl
mov
or
mov
pop
push
mov
adc
mov
dec
add
adc
idivl
pop
mov
xchg
mov
mov
cmp
cld
ja
sub
cmp
pop
dec
adc
and
lods
fcomps
sbb
mov
gs
cmpl
pop
fwait
je
mov
cld
scas
loop
cld
mov
in
test
cmp
mov
bound
lahf
out
shl
loop
inc
into
pop
pop
mov
js
mov
xor
call
sub
lret
sarl
add
xchg
mov
mov
adc
dec
inc
pushf
sbb
mov
ss
push
adc
test
lcall
mov
dec
xchg
pop
add
ja
adc
jmp
shr
add
std
dec
clc
add
pop
add
nop
sub
ja
clc
ror
and
xchg
fnstenv
jg
inc
adc
adcl
cmpsb
push
fisttpll
int3
mov
cli
xor
jmp
xor
sub
adc
add
scas
sbb
std
mov
movsl
test
xlat
popf
xchg
imul
insl
pop
icebp
mov
push
out
cmp
xor
ja
scas
push
lods
and
inc
ja
sbb
xor
fcomip
add
addl
add
aas
dec
fidivrs
mov
mov
stos
in
lea
cmpsl
leave
fsubr
out
gs
fisttpl
sbb
leave
loopne
xchg
vmovlps
ja
inc
insb
and
or
inc
and
lahf
dec
popa
mov
orl
out
pusha
lds
xchg
add
pusha
pushf
jb
ja
xchg
stc
cli
sti
aaa
sahf
jle
cmp
aam
lret
aaa
insl
sti
cmp
jecxz
cltd
pop
leave
xor
pop
add
test
dec
imul
push
lret
and
testl
in
push
fisttpl
test
lods
scas
inc
push
xor
mov
int
jmp
jo
lock
addl
cmp
adc
nop
mov
jl
stos
or
ds
int
std
sbb
out
in
pop
inc
cld
jmp
orl
or
sti
repz
inc
sbb
inc
inc
and
mov
bound
insb
jecxz
icebp
inc
inc
test
add
sbb
mov
xchg
mov
bound
sbb
or
out
cmpsb
int3
cwtl
fisubl
sti
sarl
pop
cmp
sub
repnz
es
insb
dec
sti
add
test
mov
loopne
adc
push
js
cmp
and
sahf
in
xchg
pop
pop
lods
add
repz
mov
outsl
jp
cmp
clc
nop
scas
jge
sub
cli
push
add
shlw
inc
jo
or
mov
push
loopne
outsb
jb
lock
ffree
outsl
icebp
leave
mov
lahf
dec
cmp
pop
clc
lods
movsl
cmp
ljmp
mov
inc
in
imul
pop
mov
xor
aaa
dec
aaa
pop
jmp
loopne
adc
fwait
out
dec
in
test
mov
mov
aad
sub
mov
outsl
pop
xchg
fdivr
adc
dec
pop
orl
dec
movsb
add
adc
xchg
and
sbb
adc
cmovno
shrl
inc
gs
pushf
cltd
lea
xchg
xlat
and
insl
fstpl
ja
adc
stc
mov
sahf
pushw
sub
int3
fistpll
mov
jge
lods
jg
mov
repnz
test
cli
mov
adc
divb
in
mov
out
adc
or
mov
test
test
lods
in
xchg
insb
inc
and
stos
pop
or
pop
outsl
loop
sub
int
bswap
and
cmpsl
mov
mov
cld
insl
jecxz
shlb
psubq
cmp
jge
or
xchg
fldt
push
mov
loopne
push
mov
scas
sarb
pusha
fwait
xchg
movsl
cmp
popa
mov
lcall
mov
stc
jl
jns
inc
jnp
rolb
mov
xchg
in
fdivrl
imull
jg
lcall
jbe
test
pop
das
push
gs
loop
frstor
or
add
repnz
mov
push
push
push
sarb
jge
push
push
mov
imul
lea
xchg
sbb
adc
loop
out
fcmovb
aaa
adc
int
xchg
inc
xchg
jle
les
sbb
ja
or
icebp
and
mov
cwtl
xor
faddl
imul
jg
daa
sub
xor
pop
ss
out
leave
in
fistps
sub
or
xchg
or
adc
dec
int
outsl
jns
cmp
adc
push
and
es
mov
repz
sub
xchg
pop
mov
mov
dec
push
js
lret
call
stos
inc
rcr
test
popf
xor
adc
mov
sbbb
xchg
pop
sbb
lods
stc
push
or
xchg
loopne
add
imul
push
inc
push
pushl
fwait
andl
rcrl
or
data16
dec
mov
add
adc
push
mov
add
pop
je
aad
sub
xchg
mov
xor
pop
xchg
inc
jecxz
jmp
mov
pushf
cmp
mov
inc
icebp
pop
xor
je
mov
xor
scas
cmp
push
add
xor
int
jecxz
jo
jb
lcall
daa
jmp
xchg
sbb
xchg
dec
xor
mov
xchg
mulb
cmpsl
xorl
loop
push
or
mov
outsl
push
in
imul
fisubs
mov
add
push
or
inc
test
sub
es
jae
inc
aam
and
imul
push
lret
push
lcall
out
cld
aaa
mov
mov
and
mov
pop
test
scas
adc
adc
sub
mov
aam
ss
dec
inc
add
and
fldl
mov
data16
mov
sbb
lods
add
push
mov
cmp
sbb
addb
push
icebp
dec
xchg
cld
sbb
cmc
mov
mov
pop
mov
repnz
mov
xor
inc
or
push
ds
mov
push
mov
das
pop
in
jae
scas
rcrl
mov
mov
sbb
add
xchg
cmp
push
add
sub
jae
stos
jecxz
cmp
mov
rcrb
fisttps
aas
jmp
dec
lods
dec
rclb
push
cmp
sub
out
iret
jl
test
ret
aad
mov
out
jmp
sbbl
daa
loopne
adc
pop
xchg
fisttpl
cld
sub
insl
mov
and
xor
out
scas
testb
sbb
rol
movsl
push
adc
inc
sub
sti
test
fmull
mov
scas
repz
addr16
sbb
xor
call
mov
mov
push
sub
leave
es
jb
push
xchg
add
xorl
mov
out
fisttpll
mov
adc
jae
mov
jae
ret
or
movsl
xchg
ror
inc
fimuls
pop
in
mov
jne
inc
fcoms
mov
aas
hlt
cli
sbb
xchg
mov
into
adc
mov
arpl
in
sbb
jle
mov
icebp
lea
dec
jle
aas
lods
sub
push
mov
stos
pusha
dec
xor
das
push
push
cltd
pop
jmp
in
jle
pop
mov
shrb
inc
repz
lret
pop
fldt
jae
jecxz
addb
push
lcall
push
lret
cmp
test
mov
cmpsb
sub
pop
test
and
das
dec
dec
call
push
xchg
aad
lods
fsts
sbb
cld
push
push
bound
iret
icebp
loope
mov
int3
mov
fwait
push
leave
inc
outsl
js
cwtl
xchg
popa
cmc
lcall
pop
test
adc
and
jbe
dec
pop
or
rep
add
pop
mov
mov
lea
fstps
mov
test
pop
pop
cltd
pop
enter
mov
push
mov
xchg
jbe
sub
iret
mov
jecxz
jmp
or
adc
lahf
clc
sbb
inc
test
jae
ss
mov
pop
scas
fists
insl
pop
cmp
mov
movsb
jle
pop
movsl
xchg
mov
jnp
aaa
les
fwait
and
xchg
test
ror
xchg
push
fistl
repnz
xchg
xor
lds
cmp
pop
aad
adc
push
outsl
mov
sbb
repz
xchg
aam
or
int
dec
cmp
test
adc
push
push
push
mov
iret
and
cmp
pop
lods
and
inc
jo
popf
push
cwtl
es
sbb
in
stos
bound
xor
imull
xor
ret
cs
aad
leave
xchg
icebp
add
das
pop
rorl
cmp
repz
pop
cmpsl
xor
jno
inc
iret
jmp
test
fwait
arpl
lahf
lea
and
clc
xor
xor
xlat
pop
repz
xchg
add
dec
stc
and
cmp
and
dec
jge
imul
shl
aas
push
scas
cs
loope
push
cmp
lahf
mov
in
movsb
test
aaa
aas
mov
or
in
jp
sbb
les
lea
test
dec
daa
xor
fs
icebp
dec
dec
inc
xor
sbb
xchg
in
arpl
mov
or
jmp
bound
data16
adc
nop
ret
movb
push
mov
rcrl
ret
jo
mov
movsb
pop
mov
xor
mov
mov
into
pop
orl
notb
sub
xchg
mov
add
mov
pop
ljmp
shrl
add
mov
inc
dec
adc
xchg
or
and
xchg
inc
sub
arpl
movups
ja
push
into
sub
jle
shll
cmpl
sub
das
fisubrl
pop
insl
punpcklbw
das
push
icebp
xchg
arpl
sbb
scas
mov
dec
inc
sahf
and
cltd
ds
xchg
mov
iret
mov
in
out
pop
ljmp
jl
mov
sub
cmpsb
fbld
and
push
or
xlat
fnstsw
pusha
mov
sbb
cmp
int
inc
pop
pusha
cli
aam
sbb
adc
lret
or
in
mov
mov
addr16
repz
push
aas
arpl
mov
popa
xchg
jg
test
fcoml
clc
or
and
and
scas
and
xchg
dec
das
jbe
add
xchg
iret
push
or
jecxz
mov
out
mov
ljmp
jo
xor
ds
stc
arpl
sbb
mov
mov
cmp
hlt
icebp
shll
pop
jmp
js
clc
sbb
stos
aam
xor
add
out
test
sub
mov
add
pop
sub
jl
scas
popf
les
mov
pop
jb
pop
insb
sbbb
inc
or
inc
lds
cmpb
and
mov
mov
mov
xchg
out
push
mov
pop
inc
mov
push
sahf
xchg
xchg
stos
popa
imul
sti
mov
jge
lea
ljmp
lds
xchg
in
sbb
dec
push
fsubrs
or
cmp
or
test
jmp
jbe
pusha
xor
test
ss
mov
ret
fdivrl
fldenv
out
mov
enter
mov
sub
clc
fcomip
mov
dec
loopne
xlat
scas
or
mov
in
mov
push
sub
cmp
mov
out
ds
pusha
aas
ljmp
mov
dec
cmp
int
sti
shrl
leave
daa
xchg
sti
and
call
ja
addr16
loopne
inc
push
sbb
gs
xchg
cs
push
mov
pop
fcomp
jecxz
dec
add
fbld
push
lods
and
add
add
inc
into
sbb
or
fdivrp
cmp
mov
outsb
nop
xor
pop
push
jno
mov
shll
mov
aad
test
pop
rcll
sahf
push
ja
dec
sub
push
cmp
sbb
cli
xchg
cmp
lods
inc
pusha
xchg
mov
jmp
pushf
xlat
jecxz
xor
jg
out
and
mov
xor
loope
pop
sbb
inc
push
push
mov
aas
pop
mov
sub
push
inc
scas
and
cwtl
cmp
test
mov
test
push
and
sub
adc
mov
scas
push
adcl
mov
mov
daa
pop
fisubrs
and
rcr
mov
sub
daa
mov
push
cmp
pop
sti
movsb
mov
jbe
int
loope
sbb
nop
adc
insl
mov
lret
pop
jne
jbe
and
add
dec
or
cmp
nop
jmp
ror
popa
mov
sbb
lret
es
xchg
xlat
pop
xchg
push
inc
and
xor
data16
sar
imul
fisttpl
push
cmp
xor
fisubl
mov
jno
xchg
scas
bound
lret
or
scas
sbb
xchg
sbb
leave
push
and
mov
and
pop
repz
and
in
fwait
cmp
and
mov
and
repz
sub
jns
frstor
push
repnz
mov
mov
jecxz
pop
add
and
mov
scas
daa
sub
stc
inc
jno
repz
pop
add
nop
ljmp
sub
inc
les
pushf
enter
mov
aaa
fidivrl
lcallw
inc
cmp
popa
in
test
mov
mov
add
mov
pop
jns
xchg
sub
and
inc
rcl
out
int
ss
jno
rorl
dec
cmp
pop
lret
dec
sbb
lret
cmp
lret
ror
push
mov
clc
xor
mov
cmpl
or
out
cmp
scas
aas
cld
pop
jecxz
test
sbb
push
daa
lret
add
popf
hlt
xchg
lods
xor
sbb
or
cmpsb
popa
aam
fwait
lret
push
stos
mov
add
mov
push
lods
cmpsb
es
jp
idivl
sub
cmpsb
les
cmpsb
pop
in
dec
call
pushf
inc
stos
xor
pop
std
cmp
cmp
out
out
push
adc
xchg
cmc
sbb
or
orl
sub
stos
sar
xchg
icebp
adc
xorb
sub
frstor
loope
in
or
xor
inc
test
or
insl
dec
dec
stos
das
scas
xor
clc
popa
push
scas
ljmp
xchg
xor
daa
insl
push
enter
shll
xchg
push
cmpsb
ss
sahf
imul
jnp
push
test
in
pusha
popa
cmp
xorl
cmp
xor
sub
or
lret
jl
dec
test
test
sub
outsb
mov
arpl
rcrb
cltd
nop
cld
or
jmp
and
inc
icebp
fstps
shlb
cmp
dec
fmull
in
mov
pop
mov
dec
mov
ja
fbstp
aaa
xor
sub
les
pop
xor
inc
mov
xchg
loopne
pop
test
out
xchg
neg
adc
pusha
mov
lods
cld
sti
mov
add
xchg
jg
add
jg
push
sub
or
push
ret
pop
imul
cld
inc
in
or
sahf
pop
adc
cmp
pop
mov
stc
cmp
outsb
mov
ret
mov
sub
lret
sub
cmp
and
imul
sub
dec
lret
addb
cmp
push
sub
xor
sub
stos
aaa
mov
aad
fnstsw
insb
cmp
fisubrl
loope
or
fs
pop
sub
and
dec
adc
inc
xor
scas
push
out
mov
push
jl
mov
pop
mov
lds
jl
popa
or
jge
movsl
add
pop
push
cmp
out
lods
not
out
int
and
or
test
push
add
push
in
mov
pop
nop
iret
adc
movsl
sbb
adc
fidivs
push
push
mov
inc
lods
add
cmp
test
pop
lods
xchg
pop
xchg
mov
sub
or
xchg
mov
or
decb
ss
xchg
fcoml
out
dec
ja
xchg
sub
cltd
xchg
mov
cmc
mov
aad
test
push
lcall
cli
shrl
sub
int
cmp
jle
push
fldl
sub
in
push
and
mov
xor
jmp
adc
xchg
aam
jae
pop
add
jae
dec
xor
cmp
mov
mov
shll
loopne
jle
pop
flds
mov
roll
mov
rcrl
mov
add
xchg
aam
pop
add
mov
adc
dec
fwait
jge
js
cmpb
lods
stos
xchg
xor
mov
loop
fmull
push
xor
clc
lea
push
sub
push
jl
std
push
cmp
push
xor
insb
cld
loope
scas
dec
mov
leave
xor
xchg
jne,pt
sbb
fsubl
cmp
mov
or
xor
add
int
scas
dec
leave
push
jnp
mov
int3
aas
xlat
adc
mov
stos
xchg
cmpsb
push
lods
aaa
lret
lcall
add
cs
out
aad
mov
test
sbb
add
pop
xorl
frstor
mov
popa
pop
dec
test
cs
clc
ljmp
shr
test
mov
xchg
test
jb
cmp
xchg
movsl
into
int
inc
jae
jl
xchg
cmp
into
push
in
mov
aas
adc
pop
shrl
addr16
sub
sbb
popw
cld
inc
mov
mov
in
movsb
nop
les
data16
sub
adc
aaa
jle
adc
lret
jae
decl
xor
ss
addb
jns
lods
das
mov
cltd
pop
cmp
push
mov
mov
dec
add
lcall
jl
sub
fs
into
adc
push
daa
mov
mov
fs
pusha
outsl
sahf
push
mov
inc
mov
or
iret
jp
sbb
ret
mov
lods
push
jno
add
push
jmp
insb
addr16
into
jnp
pop
jbe
fdivrs
push
in
popf
fninit
lret
std
pop
fistl
in
rorl
gs
in
cli
inc
adcl
arpl
fucomi
inc
jecxz
mov
cmp
loop
lds
cmp
popa
pop
xchg
add
push
stos
mov
fbld
inc
cld
cmc
or
xchg
dec
mov
sbb
inc
jmp
mov
int
orb
push
push
jb
pop
or
mov
or
push
xchg
scas
adc
aaa
xor
jne
mov
sub
mov
sbb
push
pop
xor
dec
xchg
loopne
and
andb
mov
xor
push
mov
xorl
mov
xor
push
mov
jno
rep
out
loopne
jo
je
push
rol
les
in
add
or
outsb
mov
mov
push
lahf
inc
sub
roll
sub
inc
sbb
pop
popa
out
ljmp
iret
sbb
seto
idivl
mov
jbe
inc
mov
int3
fs
jo
mov
fldcw
insl
sbb
cmp
into
addr16
lahf
fstpt
js
cmp
push
inc
jp
adc
outsl
and
jbe
data16
fisttps
cmp
in
bound
pusha
movb
pop
aam
das
or
addb
iret
pop
aam
jecxz
adc
and
cld
mov
push
rorl
mov
rcrb
movsl
dec
mov
sub
fs
inc
enter
movsb
lret
lea
push
push
das
sarb
push
leave
stos
push
dec
dec
cmp
cmp
loopne
mov
xor
fstps
mov
out
fdivrs
leave
xchg
or
dec
push
scas
sbb
mov
dec
and
inc
lock
push
fs
fistpl
aaa
inc
loopne
cwtl
push
cmpl
ds
sub
in
mov
mov
xchg
cmp
jmp
mov
inc
mov
scas
push
call
stos
mov
std
daa
pop
sub
sahf
adc
dec
shll
dec
sub
je
pop
fcmovne
jae
mov
mov
nop
mov
cmc
dec
aas
add
jo
jno
dec
mov
or
mov
inc
xchg
lods
jge
jp
sub
push
out
pop
add
stos
lret
inc
pop
je
xor
lcall
xor
hlt
iret
int
push
aam
cmp
push
out
mov
repz
push
cs
movsb
ds
and
addr16
push
jg
xchg
out
push
fisubrl
jnp
leave
pop
inc
lock
inc
or
xor
rcrl
or
repnz
addr16
xchg
enter
mov
cmpsb
aas
roll
loop
sub
rorl
adc
cmc
mov
insb
arpl
and
dec
outsl
xor
add
mov
and
das
push
or
aam
test
mov
inc
dec
and
stos
pop
les
out
bt
pop
push
mov
jg
push
movaps
xchg
xchg
xor
adcb
jg
ret
insl
popa
aas
in
sub
shr
stos
icebp
outsb
cmp
jg
cmp
xor
mov
sbb
shrb
mov
pop
movsl
addl
sub
in
mov
insb
mov
add
fimull
add
movsb
ficoms
clc
add
mov
dec
pop
xor
daa
pop
or
call
jl
add
lret
ficompl
lea
jb
int
xchg
scas
dec
inc
pop
out
xchg
and
mov
push
int3
es
iret
clc
sbb
clc
mov
mov
xchg
xchg
bound
test
inc
mull
je
xor
int3
lcall
loopw
imul
and
inc
mov
jp
sti
sub
xor
mov
loopne
ja
ret
push
pop
aad
stos
push
call
or
or
addb
sub
jo
adc
and
pop
out
push
jne
jg
daa
push
stos
test
loop
jae
sahf
test
in
std
addl
mov
mov
mov
mov
mov
cmpsb
insl
testb
inc
mov
in
push
jno
lcall
fcmovnb
lock
into
add
out
pop
sub
fcompl
mov
mov
addr16
mov
mov
movsb
add
ret
ret
icebp
mov
or
sti
addb
cltd
or
mov
cli
mov
sbb
std
test
cmpsb
add
xor
lret
aas
fistps
cmp
lret
or
dec
jne
aas
pop
je
insl
and
or
xchg
pop
sub
sbb
popa
movsb
xchg
pop
jecxz
adc
rcrb
insl
push
fisubrs
mov
fdivrs
pop
in
xchg
stc
mov
jb
ljmp
and
in
and
sahf
icebp
lods
test
fcompl
push
pop
fnstenv
mov
dec
push
pop
and
pop
xor
stc
lods
and
out
data16
scas
pop
in
mov
mov
inc
push
mov
mov
sub
lods
push
rcrb
idivl
sbb
imul
mov
fcoml
jmp
popa
push
pop
dec
jne
push
push
addr16
movmskps
mov
mov
cmp
push
int
add
cmp
xchg
sub
jno
add
sbb
into
aam
sub
js
push
push
lret
popf
pusha
in
ljmp
cmp
xchg
cmp
stos
jl
je
in
icebp
jnp
loopne
and
xchg
jl
pop
js
cmp
imul
imul
ljmp
shrb
mov
add
sbb
inc
adc
push
adc
xchg
hlt
sarb
jmp
fwait
das
xor
sahf
es
scas
insl
call
sub
std
push
xchg
sbbb
cmc
adc
hlt
mov
mov
or
decl
mov
mov
fisubrs
mov
imul
or
pop
adc
or
mov
lcall
std
int
cmpsl
cmp
lock
jns
icebp
xchg
xor
or
insb
in
push
insb
mov
sbb
cmp
cmp
mov
and
fsubr
or
xor
or
dec
mov
nop
cmpsl
pop
xchg
bound
je
test
cmp
cmp
cmp
xlat
daa
adc
xchg
push
lahf
and
inc
push
and
repz
lahf
xchg
or
push
sbb
jp
inc
jb
or
jl
mov
dec
jle
jl
movsl
in
xchg
movb
sbb
jbe
in
fisubs
sub
xor
cmp
out
adc
xlat
imul
lds
push
jecxz
leave
mov
pushf
les
jne
lret
movl
jb
xchg
xchg
add
loop
inc
jge
push
xor
dec
mov
cmc
adc
call
js
adc
jnp
jmp
sub
pop
ret
cwtl
fsubp
movsb
movsl
pop
shrb
fisttpll
jnp
xor
dec
jp
ss
rcrb
and
add
cmp
lea
mov
test
xchg
jne
lret
repz
add
push
lret
cmc
adc
inc
cmp
mov
mov
stc
mov
mov
sub
mov
inc
sbb
je
jae
sbb
movsl
jns
pop
push
jb
mov
aas
test
cmp
outsb
or
or
dec
pop
add
ljmp
push
daa
dec
into
inc
mov
aas
and
mov
sbb
inc
adc
jb
notb
jne
js
lret
sbb
popf
jl
push
mov
push
ficomps
mov
sub
mov
inc
sub
mov
loop
and
mov
dec
adc
in
call
xor
lea
bound
pop
lret
arpl
inc
aam
or
iret
or
push
xchg
js
or
mov
and
ja
sbb
or
movsb
jno
inc
ret
fsubs
movsl
fcomps
mov
pop
enter
add
mov
ret
out
ljmp
xchg
idivl
sub
push
aaa
lods
aas
test
sub
fiadds
ja
mov
adc
xchg
gs
imul
jmp
in
sub
jae,pn
xchg
add
sub
pop
aam
pop
push
sbb
inc
push
cmp
jae
rcrl
in
test
ljmp
or
jmp
sub
rcl
dec
lcall
enterw
mov
mov
lds
mov
aaa
cmp
cmp
xchg
imul
and
xor
js
push
jle
adc
and
das
push
jns
xor
xor
dec
dec
loope
or
adc
xor
xchg
pop
dec
sahf
mov
movsl
inc
mov
dec
clc
mov
inc
aaa
adc
in
jbe
mov
adc
jbe
mov
cmp
push
inc
sub
outsl
aam
clc
mov
or
insl
call
pop
aas
mov
jb
and
imul
js
and
cli
push
out
cld
mov
inc
out
or
sbb
mov
mov
movsl
popf
or
dec
hlt
sbb
aam
pop
inc
mov
push
loope
or
lods
xchg
mov
dec
dec
mov
sahf
fldl
rcrb
jle
bound
lds
pusha
dec
rorb
dec
jnp
subb
xchg
ror
jle
inc
sahf
cwtl
push
ss
push
push
fucom
cmpsb
repz
cs
enter
lret
adc
dec
outsb
mov
sbb
aam
dec
test
xor
lods
mov
adc
ret
xchg
dec
mov
mov
shr
leave
cltd
icebp
rcl
jns
mov
mov
in
inc
out
imul
jns
imul
lret
bnd
pop
dec
pop
les
ds
cmpsl
push
test
jne
or
mov
aad
inc
rorl
adc
das
inc
movsb
add
jae
movsb
mov
out
gs
lock
sbb
inc
jo
jge
jmp
fmull
lcall
cld
mov
jg
sbb
inc
movsb
lods
xchg
sbb
xor
add
push
or
orl
bound
mov
pop
mov
clc
push
dec
push
test
popa
mov
add
sub
cmc
adc
clc
xchg
cmp
imul
dec
shlb
std
ds
out
lahf
jns
ret
xchg
pop
gs
rcll
sub
mov
push
addl
jmp
adc
cli
popf
out
int3
leave
cmp
test
es
les
stos
insb
sbb
daa
mov
fsubr
stos
shlb
fsubrp
fnstcw
cld
mov
or
mov
mov
test
jecxz
lret
cmpsb
sub
or
scas
xchg
cmp
mov
and
xchg
repnz
sti
fnsave
sub
xor
jnp
mov
or
in
cwtl
je
ret
jae
mov
mov
add
jnp
push
and
pop
test
out
jecxz
gs
je
pop
lret
dec
arpl
xchg
test
fldt
nop
or
call
mov
fnsave
mov
xor
push
lret
sti
fwait
push
and
imul
push
xchg
push
outsb
mov
mov
daa
adc
fildl
in
pop
outsl
insl
scas
adc
es
hlt
mov
clc
mov
xor
push
adc
fstps
outsl
mov
rolb
adcb
push
mov
push
js
ficomps
xchg
fcomi
arpl
into
xchg
sbb
loop
mov
fiadds
cmp
push
ret
gs
pusha
loopne
cs
sub
add
ucomiss
push
mov
jecxz
incl
jno
popf
std
mov
push
push
test
cli
lret
in
ret
pop
jnp
movsl
dec
shll
xlat
loope
fiaddl
aaa
jecxz
add
inc
dec
adc
sub
insl
fidivl
jo
cs
inc
repz
test
mov
out
push
mov
dec
and
pushf
scas
test
xchg
mov
stc
loope
repz
out
mov
adc
stc
and
sahf
xchg
das
jnp
lods
cmp
pop
pcmpeqb
mov
cmp
dec
inc
outsb
sbb
lods
test
jge
and
int3
test
incb
cmp
rcll
test
sbb
pop
inc
inc
ja
xchg
mov
mov
loop
jb
cli
pop
jg
sbb
jp
mov
insl
ja
lcall
hlt
gs
lret
jg
js
pusha
jge
or
fsts
mov
sub
jmp
xor
dec
sbb
and
xchg
int3
dec
test
adc
pop
rcll
fisubrs
mov
test
test
out
shlb
dec
or
jns
mov
dec
mov
js
pop
inc
or
aam
insb
fsqrt
cmpsb
jbe
test
lods
pop
jecxz
mov
out
lret
cli
jne
mov
adc
add
js
dec
je
jno
lods
in
xor
in
aam
lret
inc
push
fiadds
fdivs
lods
sbb
mov
inc
and
les
sbb
cmc
add
add
fcoml
mulb
std
xchg
popa
shr
push
push
fistpll
fcomi
pop
ficoms
jge
xchg
out
enter
shll
xchg
dec
mov
ljmp
ljmp
mov
and
mov
add
sbb
inc
inc
mov
sahf
sti
daa
mov
mov
das
loop
mov
ret
xor
les
insl
pop
into
ror
ret
mov
mov
add
mov
jecxz
jo
dec
icebp
add
fdivrs
popa
mov
enter
sbbb
pop
cmp
push
adc
xchg
jnp
push
loopne,pn
mov
inc
mov
xorl
repnz
stc
pop
cmp
fcomip
add
and
xchg
ja
pop
push
movsb
mov
adc
test
mov
xchg
repnz
mov
icebp
aas
int3
cmp
mov
bound
fiadds
xlat
cwtl
mov
roll
push
push
lret
daa
jo
icebp
lret
rcll
xchg
cli
sbb
dec
lret
lret
xor
push
xchg
mov
xchg
sarb
sbb
ljmp
xor
xchg
mov
inc
lret
xlat
popf
into
push
sbb
bound
test
out
out
shrb
mov
js
enter
subb
fwait
xchg
dec
inc
lock
loope
in
out
shlb
lcall
fcmovnb
popa
xor
sub
jne
adc
gs
xchg
pop
rol
or
leave
inc
and
repz
fistl
aaa
mov
pop
fldpi
xor
mov
dec
ficompl
mov
push
sub
mov
movsb
popl
mov
adc
add
loop
les
je
out
push
pop
mov
jge
xlat
ss
js
jecxz
xchg
sub
outsb
nop
call
pop
pop
push
push
jo
pop
pop
lods
testb
jle
test
je
fdivs
stos
icebp
fsubrp
lcall
add
push
xor
jo
nop
adc
pop
lods
out
fwait
xchg
xor
fisttps
mov
xor
enter
xchg
cmp
int3
dec
call
insb
fs
je
add
pop
push
lret
lock
push
lcall
pop
cmp
es
fiadds
mov
rol
repnz
movsb
mov
inc
ss
int3
xlat
and
out
cmp
sub
sub
xlat
repz
mov
fwait
xchg
jg
aaa
jl
xchg
xor
orb
xor
push
sub
xor
inc
divl
iret
dec
es
das
out
jp
cld
fmull
lods
mov
ret
mov
sub
jns
adc
fs
pop
lock
push
adc
jbe
sub
insb
sub
enter
jbe
mov
and
sub
jae
mov
popf
xchg
test
mov
mov
add
pop
mov
dec
dec
or
invd
cltd
ret
je
and
mov
sub
push
setg
ror
loope
push
cmp
call
add
inc
fs
test
je
ja
push
sub
mov
mov
add
mov
mov
jle
jno
mov
iret
xor
fildl
mov
movsl
and
pop
vaddsd
dec
clc
daa
dec
aam
mov
xchg
pop
ret
jns
jns
imul
and
inc
int
mov
ffreep
xor
and
icebp
cmp
stc
adc
movsl
sub
call
mov
subb
je
sbbb
aad
hlt
hlt
int3
xor
sub
stos
sarl
movsl
mov
dec
das
orb
call
dec
les
adc
clc
mov
xchg
sub
jne
jnp
push
cltd
in
negl
repnz
dec
add
xchg
sbb
repz
addr16
add
adc
outsl
xchg
xchg
jbe
mov
stos
and
jbe
push
cmp
stos
popf
lret
pusha
add
xlat
in
mov
cmp
adc
out
lods
xchg
hlt
jle
bnd
cs
mov
cltd
adc
lcall
das
ficoml
les
clc
jae
sbbb
inc
movsb
loopne
inc
mov
ficoml
frstor
push
add
xchg
dec
fwait
jo
out
dec
xor
aas
lods
cmp
int3
inc
dec
xchg
orl
xor
mov
adc
mov
ret
or
sbb
lcall
ret
imul
push
xor
adc
mov
pop
adc
inc
jp
test
lock
add
or
out
jno
inc
jmp
fidivrs
dec
ja
lods
je
gs
pushf
in
cld
inc
mov
mov
test
xchg
jmp
jge
mov
fidivrs
pop
bound
popf
shr
pop
dec
pop
add
xor
sub
pop
jmp
lret
cmp
inc
mov
ffree
and
or
cwtl
xor
daa
pop
push
pop
push
cmpsb
jno
push
iret
mov
and
aaa
jb
aad
movswl
sarl
bound
lret
push
test
xor
add
out
inc
push
sub
jecxz
pop
add
xchg
mov
dec
push
inc
mov
dec
and
lret
popa
mov
stos
push
inc
mov
iret
stc
aaa
pushf
aad
jnp
in
cmpsb
mov
jbe
inc
or
sbb
cli
fdivrp
xchg
lds
add
das
push
ss
push
cld
and
rclb
sbb
hlt
outsb
mov
jno
sbb
movsb
or
sub
and
andl
xchg
sti
mov
jg
roll
xchg
mov
fists
sub
xchg
idiv
and
adc
sti
push
xchg
xor
xchg
mov
test
in
pop
mov
pop
popf
iret
dec
ret
mov
xchg
bnd
add
enter
hlt
sbb
andl
pop
pop
cmp
mov
out
sub
lret
pop
sub
cli
inc
lret
inc
test
mov
xlat
in
pop
cmp
jno
jmp
dec
xor
std
aaa
cs
imul
loope
insl
testb
add
les
sbb
fwait
inc
clc
sbb
adc
es
xchg
aad
loope
dec
adc
or
add
jbe
push
xchg
nop
xchg
ret
mov
rcr
and
inc
data16
push
dec
add
aam
cmpsl
and
loopne
cld
inc
std
and
cwtl
add
repz
and
idiv
or
cmc
and
fldt
mov
push
adc
movsb
enter
sbb
cmp
js
fisttpl
bound
or
hlt
popf
cmc
mov
or
repz
adc
mov
outsl
xchg
frstor
jnp
je
dec
test
adc
stos
mov
test
cmp
out
mov
jns
popf
out
movsb
mov
adc
mov
outsl
dec
pop
add
pop
push
repz
aas
loopne
call
xchg
push
jmp
push
hlt
dec
jo
das
inc
cmp
jl
loopne
insb
cmp
xchg
sahf
bound
pop
jae
sbb
fmuls
addr16
sub
lods
int3
sub
test
in
loopne
clc
loop
fdivl
fs
push
hlt
pop
rcl
stc
and
test
shll
xor
mov
ret
mov
jmp
je
loop
mov
in
pop
imul
sub
or
add
sti
xchg
mov
inc
movsb
out
sub
sarl
mov
xchg
fs
pop
lods
aaa
mov
lret
push
repnz
call
movsb
cmpsl
in
pop
jb
dec
and
inc
or
cmp
cmpsb
stos
xchg
jbe
or
fildll
cld
leave
pop
jo
nop
xor
xor
lret
inc
cmp
nop
inc
cs
aas
xchg
scas
fisubs
xor
cmpsb
ret
stos
shl
xchg
and
aas
xchg
in
adc
push
test
jl
jmp
dec
mov
sbb
and
cmp
test
add
dec
cmpsl
lret
xchg
sub
bound
nop
cld
pushf
bound
mov
pop
push
lret
sub
add
lds
out
jg
pop
ret
call
cmp
popf
and
cltd
loopne
push
push
popf
out
out
cltd
and
add
shlb
and
mul
rorl
mov
jae
mov
mov
mov
pusha
xor
les
ret
dec
push
mov
and
neg
or
dec
insl
insb
mov
cmpsb
jp
aas
ret
std
jmp
jge
adc
cmp
adc
inc
push
add
inc
loope
inc
mov
jle
stos
pop
xor
cmp
fcoms
cli
sahf
mov
popa
pop
aas
mov
or
xchg
dec
in
dec
out
xchg
outsb
mov
cmc
or
jne
jb
xor
out
push
push
cs
stos
jb
outsl
scas
leave
lcall
lret
and
sbb
mov
mov
jb
rorb
or
ret
dec
div
cmp
clc
incb
or
add
sar
rcr
or
aad
pusha
or
movsb
cmp
std
sar
lea
ss
scas
push
psubsw
mull
loope
cmpl
xor
sub
dec
mov
jge
sub
ret
pop
in
sub
subl
icebp
in
jge
jmp
xchg
and
pop
push
cmpb
mov
fstps
cmpsb
push
out
adcl
mov
cmpsb
mov
jno
xor
mov
sbb
pushf
lret
int3
iret
gs
xchg
shlb
sbb
test
cmp
nop
shlb
insb
sub
cld
inc
jp
dec
adc
pop
cmc
fildll
and
sarb
out
iret
jns
sub
pushf
sbb
js
jns
lret
jns
push
dec
xchg
lea
fincstp
adc
ja
push
gs
lods
lea
ret
xor
fistpl
mov
cmc
ja
and
data16
xlat
aas
sub
popf
cmp
das
roll
cwtl
insl
dec
sub
or
fidivs
aam
cmp
pop
loop
ret
adc
xor
add
dec
int3
gs
pop
std
and
subl
dec
movzwl
sub
push
push
mov
mov
pop
loope
rorb
xor
add
mov
cs
testl
push
rolb
mov
pop
and
adc
mov
insb
mov
imul
sub
add
cmc
dec
test
xchg
mov
lret
xchg
cltd
xchg
out
add
fs
push
push
mov
add
data16
loope
mov
test
mov
xchg
popa
test
cld
test
jnp
ret
push
into
push
push
sub
jge
dec
loopne
mov
fisttpll
sub
jae
or
and
sub
fs
movsl
inc
xchg
inc
fildl
dec
cmc
sub
pop
in
in
das
add
inc
pop
test
gs
inc
fs
xchg
gs
xchg
leave
lds
in
sbb
mov
sarb
std
push
fwait
xor
out
in
rolb
out
adc
cld
cmp
push
mov
loop
int3
fildl
mov
mov
notl
mov
or
sbb
div
sub
xchg
aas
cmp
out
jmp
jns
jl
dec
shrl
scas
cli
fnstenv
mov
not
shll
adc
repz
addr16
sarb
inc
xchg
ficoml
ljmpw
aam
xchg
or
sbb
notl
sbb
push
pusha
push
imul
ret
jp
in
repz
jmp
sub
notb
hlt
jbe
je
fwait
push
sti
push
cmpsl
ret
loope
sub
mov
loopne
cmp
out
int
test
fadds
mov
bound
outsb
addb
lods
xchg
push
and
cli
cmp
call
cmp
xor
out
xor
sarb
jo
pop
xorl
pushf
cmp
xor
jae
push
les
enter
inc
cwtl
test
icebp
push
mov
lock
mov
and
mov
mov
adc
stc
sub
or
outsb
fsubrs
or
movsl
rcll
mov
in
incl
adc
mov
es
mov
rcl
sahf
test
mov
clc
outsl
shlb
mov
xchg
push
cmp
pop
sbb
sbb
sahf
push
les
lahf
or
cmp
cltd
decb
mov
int
mov
and
mov
stc
sti
jl
fistpl
adc
in
icebp
hlt
dec
dec
mov
fdivrl
and
add
mov
xor
fdiv
cmc
and
inc
mov
das
mov
clc
and
push
xor
imul
pop
insl
lds
mov
or
mov
icebp
cmp
push
scas
or
inc
cmc
cmp
push
adc
outsb
imul
mov
pop
fcmovnu
ret
insb
dec
imul
sbb
das
adc
sbb
sarb
dec
imul
push
sbb
lds
xchg
push
shlb
cmpsb
mov
push
mov
mov
filds
mov
loopne
flds
int
sti
inc
aam
arpl
clc
pop
pop
sbb
jo
sahf
pop
inc
pop
into
add
push
js
int3
in
sbb
add
mov
aaa
or
andb
xchg
mulps
ss
xchg
xor
xor
mov
ret
hlt
mov
out
mov
ret
sub
stc
xchg
loopne
test
inc
pushf
ret
arpl
add
lock
leave
pop
pop
push
in
jl
clc
cld
insl
push
out
int
mov
pushf
cmp
shl
adc
and
mov
iret
arpl
arpl
lods
mov
mov
jae
xchg
out
or
adc
popf
arpl
inc
xchg
pop
jb
in
out
xlat
popa
mov
cmpsb
pop
adc
in
enter
clc
fsubs
in
imul
int3
sbb
xchg
mull
fidivrl
jbe
jecxz
inc
push
mov
ror
mov
push
insl
sbb
testl
cmp
mov
out
sub
dec
les
ss
add
hlt
ret
jbe
lods
mov
clc
pop
rorl
scas
movsb
loopne
mov
and
mov
or
out
sbb
xor
or
stos
sub
sbb
ret
cmc
adc
xchg
sub
sti
scas
lret
sub
push
cld
scas
arpl
push
fsubs
into
and
jl
xchg
std
fwait
inc
adc
addr16
int3
add
xchg
mov
fstpl
sub
test
sahf
pop
arpl
sub
loopne
je
mov
mov
ret
insb
xchg
push
lcall
ret
fisubs
lods
mov
jbe
mov
mov
or
loopne
add
fstpl
xor
add
sbb
pusha
mov
pop
xor
pop
jle
cmc
jp
popf
jne
dec
push
mov
push
cs
ret
mov
shlb
test
lret
movsb
bound
pop
shlb
xchg
mov
sub
movsb
call
push
addb
test
xchg
fstpl
or
adcl
sub
test
xchg
in
pushf
mov
pop
pusha
fisubrs
mov
mov
stc
adc
mov
popf
xchg
or
inc
mov
ljmp
popl
call
sarw
lock
arpl
scas
out
mov
loop
pop
bound
movsb
jmp
mov
popf
push
outsb
and
xchg
sbb
out
loopne
and
in
test
es
sahf
or
movsl
and
adc
repz
sahf
mov
subb
mov
xlat
je
jmp
fdivrs
out
rcll
arpl
pusha
pop
mov
popa
push
stos
lds
pop
adc
adc
dec
adcl
xorl
cmp
repz
xchg
mov
mov
inc
pushf
pop
push
out
mov
sub
pop
out
jne
jne
aad
xchg
xchg
xor
cmp
pop
gs
jne
adc
fwait
loop
ja
push
mov
aad
cmp
lds
mov
ss
xchg
and
ret
xchg
inc
add
outsl
cmp
fistps
daa
inc
pop
push
add
jbe
sar
rcrb
mov
lahf
sub
jo
fmull
xchg
mov
cmp
pop
aas
das
sub
jmp
popl
bound
mov
mov
scas
pop
xchg
int3
aam
enter
outsb
cmpsl
gs
inc
test
loopne
jl
push
mov
out
mov
adc
pop
adc
xor
xchg
leave
sahf
push
outsb
fwait
pushf
icebp
hlt
or
lea
int3
cmpb
in
mov
loopne
mov
out
lds
into
pop
cmp
pop
push
push
lock
xchg
lret
rcl
fistpl
sbb
into
fsubs
shlb
sub
adc
mul
xchg
adc
adc
sbb
inc
repz
enter
mov
divl
mov
rolb
push
jle
ja,pn
mov
sub
pop
cmpsb
sub
ds
inc
mov
popf
out
add
or
call
pcmpgtw
clc
add
and
adc
xor
adc
jg
imul
dec
stos
mov
pusha
stc
lahf
fsubrs
test
lea
lret
adc
push
dec
les
dec
cmpb
jns
push
stc
fbstp
aas
xor
pop
stos
fnstenv
add
or
sbb
lds
adc
mov
pop
or
fisubl
cmp
xchg
mov
lods
repz
xchg
add
lods
mov
aaa
jo
enter
xor
lret
mov
jb
inc
scas
enter
cmp
mov
mov
icebp
ficomps
stos
repnz
mov
inc
cs
clc
push
mov
negb
cmp
jne
iret
adc
pop
or
cld
sbb
and
or
ljmp
mov
mov
in
mov
imul
repz
dec
xor
xchg
loop
fisubrl
dec
in
sbb
outsb
cmp
sbb
leave
ret
mov
adc
ja
jo
xchg
lret
push
hlt
imul
cmp
and
cmp
into
dec
js
ds
dec
sub
les
and
pop
loopne
data16
test
jmp
js
add
push
int
pop
das
outsl
scas
xchg
inc
jecxz
ror
rcll
mov
xchg
push
inc
xchg
outsb
jae
fnstcw
cmp
push
sbb
daa
mov
lcall
hlt
adc
test
fs
int3
or
mov
dec
pop
pop
mov
xor
inc
adc
ss
mov
lahf
lret
les
icebp
sub
mov
xor
clc
faddl
jp
jno
lret
popf
pushf
addl
xchg
imul
cli
in
outsl
jg
dec
xlat
mov
lods
pusha
xorb
jb
in
push
cwtl
scas
sub
push
lea
sub
inc
jae
fimuls
repnz
xor
cmp
aam
pop
out
sti
add
mov
aas
mov
pop
xchg
test
outsl
lds
xchg
pop
pop
out
push
mov
pop
xchg
xlat
ret
ss
cs
xchg
add
cmp
es
adc
out
std
mov
loop
ljmp
jp
sbb
in
iret
jmp
mov
mov
xor
xor
shlb
sub
std
lds
mul
scas
clc
das
nop
rcr
call
and
cwtl
flds
sbb
leave
dec
mov
in
jle
ret
xchg
dec
leave
insb
test
les
in
es
enter
in
dec
pop
mov
cld
test
aaa
dec
mov
pop
push
sbb
in
nop
fadds
mov
pop
movsl
push
push
and
jmp
mov
test
fs
cmpsb
outsl
aam
jns
sbb
dec
fdivrl
push
inc
je
cmpsb
test
je
jo
push
divl
push
xor
jne
xor
xor
imul
cmp
jg
xchg
lcall
stos
rcll
mov
jo
sbb
adc
push
inc
mov
dec
hlt
xlat
lret
adc
js
mov
bound
jge
pop
lds
out
loopne
xor
mov
xchg
mov
xor
lds
sahf
add
xor
lret
fiaddl
push
or
pop
in
notl
sbb
das
sbb
sub
daa
sub
daa
mov
aad
adc
mov
stos
fnstenv
pop
jbe
push
inc
xor
daa
add
mov
push
jecxz
repnz
xchg
sbb
fldenv
push
sub
aam
into
aam
lods
test
cmp
sbbb
inc
mov
nop
sub
hlt
pop
pop
nop
sarl
jg
xor
jmp
es
xor
or
push
or
cmp
xchg
test
mov
cmp
fisubs
icebp
sbb
mov
dec
jle
cltd
jge
rorb
rolb
xor
fisttps
das
jle
testb
push
je
aam
lods
out
lods
mov
xchg
add
jns
lock
adc
inc
lds
popf
sub
mov
das
jmp
les
cs
pop
decl
outsb
sbb
ja
into
jl
shll
xchg
add
das
mov
or
mov
cltd
outsl
jae
pop
mulb
dec
jo
lcall
arpl
sbb
mov
daa
fcmovu
xor
ja
mov
fwait
stc
sahf
xor
push
cli
pop
popf
xor
cmpl
add
fs
lcall
jg
xchg
lahf
and
pop
hlt
and
notb
leave
in
faddl
ss
pusha
pop
cmpsb
mov
sbb
daa
xor
sub
mov
lcall
lcall
mov
negb
and
js
cmc
lret
inc
push
mov
adc
cmc
into
jbe
mov
push
mov
ret
or
push
shr
repz
cs
jnp
xchg
sbb
and
mov
loopne
adc
mov
and
sbb
jmp
imul
push
pop
je
hlt
js
xchg
dec
xchg
inc
fisttpll
rcll
std
xchg
movsl
lods
add
fst
xor
or
mov
lods
adc
pop
inc
and
outsl
stos
das
ds
lret
loopne
stos
mov
add
jmp
xor
adc
gs
fwait
or
aam
pusha
cmp
ret
in
push
cmpsl
dec
push
mov
sarb
pop
pop
mov
out
xor
ljmp
movsb
pop
push
mov
xor
sub
in
push
and
xor
rolw
xchg
sti
sti
fdivl
rclb
leave
call
mov
jmp
cmp
push
outsb
aas
testl
mov
jl
and
sub
je
push
outsl
xor
jg
xor
popa
aaa
sbb
mov
xor
lret
test
cli
xchg
js
lret
outsb
xchg
and
inc
imul
fildll
adc
fistps
push
ds
clc
daa
outsb
fwait
adc
stos
mov
and
gs
movsl
filds
jo
ds
xlat
cmpl
mov
mov
and
sub
add
in
bound
pop
repz
cli
and
push
lods
mov
pop
test
ret
xchg
jno
mov
ret
nop
xchg
mov
dec
cli
dec
lret
inc
leave
or
lcall
movsb
adc
sbb
and
mov
mov
adc
cltd
mov
test
clc
aaa
cs
movsb
ds
sub
mov
shl
and
add
test
fldcw
mov
stc
clc
xchg
nop
sbb
rorl
and
shll
pop
cltd
leave
ja
jmp
sub
sti
pop
sub
loope
and
cmp
sbb
mov
jecxz
sahf
das
cmp
cmp
mov
rcr
sbb
cmpsb
jp
fcompl
out
jle
cmpsb
daa
pop
in
xchg
in
mov
adc
cltd
mov
jns
fnstenv
outsb
xchg
stc
cmp
pop
sub
add
dec
dec
lock
dec
repnz
cltd
scas
rcr
mov
push
cmp
movsb
pop
loopne
inc
push
adc
stos
imul
testb
mov
stos
sub
push
js
jp
jo
mov
faddl
pop
jp
cwtl
aaa
nop
adc
pop
xor
decb
leave
adc
in
sub
adc
rcrb
or
pushf
push
xchg
popa
pop
inc
mov
punpckhbw
aam
jno
pop
dec
ret
or
imul
std
shll
std
push
sub
hlt
dec
or
or
xchg
repz
mov
xchg
ja
notl
ficoms
ja
push
dec
xor
aad
sbb
ret
adc
out
rorb
divl
inc
cmpsb
ret
sub
push
push
stos
push
leave
int
mov
in
int
mov
mov
call
cmp
das
pop
test
xchg
jecxz
or
in
lods
mov
and
inc
addr16
dec
rorl
push
dec
enter
inc
and
fs
adc
stos
call
or
call
dec
call
ret
push
clc
jns
test
mov
dec
sar
adc
xor
sub
dec
mov
adc
enter
mov
xlat
jnp
andl
cmp
fwait
mov
dec
imul
std
ror
gs
pop
int
and
adc
add
fs
std
push
mov
push
cmpsb
mov
adc
push
loopne
push
add
popa
data16
or
sub
jno
ret
sub
xchg
xchg
push
sti
and
xchg
adc
cwtl
or
jge
shll
mov
rol
inc
xchg
add
xchg
mov
ret
mov
mov
cs
push
push
jnp
iret
xchg
xor
rcrl
cmp
paddsb
pushf
xchg
and
stos
push
dec
mov
js
jmp
sub
iret
push
cmc
les
lret
popf
gs
push
jmp
sbb
adcl
dec
repnz
sub
cmpsb
pop
std
icebp
add
mov
les
sbb
xchg
into
cmp
xchg
ja
sub
fs
bound
sub
test
or
mov
es
fs
xchg
or
xor
lahf
and
inc
xchg
sbb
push
dec
jb
imul
inc
aas
scas
movsb
cmp
or
sti
xor
jbe
fstps
cmc
inc
or
test
inc
nop
push
mov
push
gs
adcl
lea
xchg
jp
mov
sub
xchg
jecxz
or
push
les
outsb
pop
pop
mov
push
and
push
arpl
pop
lcall
cld
pushf
xchg
cmp
inc
sub
test
jne
push
and
orb
xchg
mov
sbbl
mov
jo
xchg
loop
or
adc
loopne
pop
fidivrs
stc
lret
out
lods
loope
addr16
jbe
dec
push
push
jle
jecxz
mov
pop
in
sbb
fnstenv
sbb
dec
dec
cld
jnp
push
mov
fildll
xchg
push
leave
adc
out
cmp
push
fstl
and
adc
repz
les
repnz
jne
test
loop
mov
and
mov
jge
imul
fistl
inc
mov
testl
int
xor
je
rol
mov
fs
adc
jp
jnp
scas
sarb
insb
enter
pop
push
and
sub
xor
sub
mov
fidivl
push
xchg
out
and
scas
pop
jmp
nop
je
scas
std
ja
or
mov
dec
jns
js
mov
add
inc
pusha
dec
push
fnsave
jne
adc
pop
cli
scas
sarl
inc
out
xchg
inc
xor
pop
mov
in
es
into
and
cli
push
outsl
mov
out
pop
fwait
cmpsl
jbe
pusha
lea
mov
adc
aaa
jl
leave
adc
sub
int
push
pop
adc
push
sti
rcrb
jmp
xor
jbe
mov
dec
jo
out
xor
lret
mov
pusha
adc
jb
lds
std
int3
enter
mov
inc
lret
int
add
insb
inc
and
cwtl
sub
pusha
mov
daa
mov
shll
pop
aad
sub
icebp
scas
in
addr16
xchg
sub
inc
xchg
mov
sbb
lcall
nop
ficoml
roll
sbb
sbb
fsubrl
daa
icebp
js
xchg
inc
or
fldz
ja
daa
and
fnstsw
dec
push
push
popa
movsb
or
outsl
mov
pop
push
xor
popf
ja
loop
out
popa
push
out
das
dec
dec
in
sub
push
mov
pop
aad
and
enter
lcall
and
jo
arpl
sub
xchg
nop
pop
xor
jno
xchg
xor
cwtl
dec
iret
sub
popf
add
mov
stc
cmpb
mov
daa
in
lcall
pop
nop
pop
stc
mov
insl
inc
int3
mov
mov
in
daa
mov
push
std
xchg
pop
scas
add
rcr
push
pop
leave
mov
mov
pop
mov
dec
mov
neg
mov
cmp
dec
nop
rcrb
popa
xlat
outsl
in
add
mov
sub
std
xlat
bound
jg
xor
mov
xchg
dec
push
ja
imul
mov
fcmovnbe
mov
mov
dec
imull
iret
adcb
mov
xor
push
push
jmp
jle
sub
dec
pushf
incl
bound
xchg
mov
fisubrl
aam
adc
stos
pop
das
and
mov
mov
mov
xor
stos
sti
stos
pop
sbb
push
or
or
aad
jne
movsb
cmp
jmp
sub
sbb
clc
mov
mov
subb
stc
imul
or
mov
into
dec
xor
cwtl
push
mov
jne
sub
loop
or
inc
scas
jmp
and
sbb
test
mov
lret
jl
addl
lret
push
pusha
fildl
jmp
sbb
mov
in
outsb
fldl
adc
inc
ficoms
int
fistpl
sub
add
lea
or
and
pop
iret
xorl
fistps
pop
xchg
jns
push
les
mull
jb
xor
movl
pop
lock
sbb
js
pusha
inc
loop
xchg
sahf
xorl
in
cwtl
imul
cmp
leave
and
adc
jae
pop
push
lods
mov
lret
cmp
fwait
shrw
dec
pop
cmpsb
and
orb
mov
xchg
cs
sbb
sub
sbb
cli
cli
mov
pushf
add
xchg
xor
mov
pop
xor
sbb
leave
lcall
push
icebp
xor
add
mov
imul
popf
xor
sbb
add
insl
adc
sub
and
xor
rclb
jp
mov
les
xchg
popf
out
sub
das
sub
loop
imul
push
mov
dec
xchg
in
icebp
dec
imul
pop
fcomps
mov
stos
push
and
cld
xchg
push
and
pop
cmp
jge
iret
sub
cmpsl
cwtl
sbb
xchg
in
inc
stos
dec
lcall
int3
xor
addr16
push
icebp
lods
rol
inc
stc
repz
cltd
ret
inc
xlat
mov
push
xor
icebp
sub
mov
lods
ds
mov
adc
inc
cltd
data16
mov
adcb
add
rclb
pop
push
fdivl
pop
cmp
sub
les
jle
jne
xchg
jge
mov
sbbb
movsl
sub
push
int
and
mov
pop
xor
and
sbb
loopne
hlt
push
data16
fldcw
and
and
int
adc
or
in
add
fists
icebp
cmp
xor
mov
jae
or
lret
addl
pop
or
out
push
and
sub
dec
mov
mov
inc
sub
lock
vrcpps
adc
dec
repz
leave
scas
std
insb
adc
jl
push
add
insb
pop
mov
out
popf
xchg
inc
repnz
fs
int3
mov
xor
inc
into
jp
in
scas
pop
jnp
or
mov
lds
es
test
inc
test
and
ljmp
movsl
jl
jno
sbb
hlt
cmp
cmp
test
add
insl
pop
xor
mov
test
push
adc
dec
scas
or
jne
mov
sub
out
jne
jae
mov
jge
dec
shlb
jne
sbb
movsb
cmp
mov
sub
adc
sbb
lahf
inc
test
mov
fadds
clc
shlb
std
xchg
xchg
sbb
inc
loopne
sbb
push
out
jl
xchg
movsb
pop
fcompl
cltd
sub
mov
xchg
loop
shrb
sbb
cld
je
xor
adc
pushf
sbbb
cmp
dec
mov
jno
call
fwait
cmp
aad
lods
pushf
push
inc
scas
add
push
arpl
mov
mov
mov
sub
fnsave
mov
call
in
dec
jbe
sub
pushf
inc
jmp
clc
sub
stos
lahf
cmpsb
fisttpll
mov
popf
in
xchg
sbb
sub
or
pop
cld
xor
cmp
push
insb
fsub
add
imul
ret
out
jmp
stos
out
push
cmpsb
mov
das
repz
mov
pop
pop
or
cmpsb
fadds
outsl
or
test
push
ss
stos
mov
jg
jb
aam
xchg
icebp
fnstenv
jbe
inc
xor
notl
rcrl
cmpsb
imul
sub
shr
scas
enter
mov
xchg
cmpsl
les
bound
fstps
xor
mov
jg
lea
add
pusha
call
sti
dec
mov
stc
fisubrl
and
or
inc
out
arpl
fucomi
fnstenv
loopne
fisubs
icebp
xor
sbb
jle
mov
fwait
insb
mov
sub
lock
pusha
icebp
xor
popa
cs
movsb
hlt
or
pop
mov
dec
fsubrs
or
jbe
sahf
sbb
jne
rol
push
xor
mov
lds
xchg
mov
out
rcll
fs
cmp
stos
mov
iret
fwait
call
outsl
shll
test
jb
jle
pop
icebp
in
xchg
scas
dec
cmp
decb
sti
dec
add
and
setge
or
jge
cmpxchg
dec
ror
mov
std
daa
and
pop
not
adc
test
icebp
cmp
push
and
insl
mov
adc
repnz
cmpsl
js
jge
pop
mov
ja
lock
iret
pop
xor
out
jl
sarl
call
adc
ja
xor
decb
in
std
xor
fsts
orb
jo
dec
out
repnz
cmpsb
pop
sub
jae
and
mov
repnz
std
push
pushf
mov
mov
loop
jbe
sbb
aad
in
incl
popa
inc
imul
mov
dec
je
pusha
push
cmp
push
adc
ror
ror
sub
leave
jge
jb
dec
sbb
int
iret
mov
lock
inc
fstpl
and
mov
divb
lret
mov
jae
ret
rclb
aad
push
ret
sahf
add
int
popa
in
dec
mov
xchg
mov
cwtl
shlb
int3
push
inc
and
pop
inc
mov
inc
cs
xor
mov
dec
js
push
inc
pop
pop
or
xchg
cmc
push
sub
add
jle
mov
sub
pop
je
pop
add
add
jbe
jge
inc
popl
mov
icebp
lret
sub
push
das
mov
repnz
scas
push
cld
pop
mov
jmp
ss
mov
push
add
pop
mov
pop
sbb
xor
xchg
dec
sub
mov
aad
push
filds
push
dec
mov
imul
sar
push
mov
clc
pop
aad
mov
pop
mov
in
in
mov
add
lds
in
jbe
pusha
shrb
std
popaw
xchg
out
xor
inc
push
mov
add
mov
fcomi
pop
cli
push
jp
dec
push
or
pop
mov
xchg
popa
ror
test
xchg
push
jecxz
cmp
jp
das
clc
add
mov
inc
or
jle
dec
jb
sbb
inc
insl
repz
insl
xchg
mov
pop
cmc
leave
push
xor
xchg
loopne
out
sbb
jnp
add
inc
adc
cld
mov
mov
add
lods
cmpsb
std
mov
inc
dec
out
test
sbb
gs
in
iret
into
popf
int3
ja
push
xchg
add
jnp
mov
out
xor
loop
cmpb
push
mov
clc
int
fwait
mov
or
xchg
mov
cmp
lock
test
push
cmpsb
pop
xor
pop
int3
iret
cmpsb
test
xor
bound
aas
inc
pushf
push
aaa
cld
nop
mov
in
xchg
stos
xchg
pop
and
mov
pop
push
or
push
outsb
cmp
insl
sub
stos
rcrb
jns
xor
or
in
inc
loopne
inc
test
in
xor
stc
rclb
mov
fsubs
xchg
andb
repnz
jle
xor
push
jns
push
jo
fs
cmc
lock
jmp
popf
enter
cltd
xchg
mov
add
xchg
bound
push
lods
call
pop
cmp
push
cmpsl
icebp
addr16
fbld
cltd
add
clc
in
xor
mov
sbb
cli
mov
lods
push
or
fs
ljmp
mov
xor
scas
add
cmp
dec
out
push
mov
mov
or
inc
push
in
sub
popf
mov
in
ficompl
iret
add
xchg
in
mov
mov
sub
clc
push
roll
add
push
insb
movsl
xor
sub
push
mov
inc
push
and
mov
xor
in
xchg
or
pop
jmp
aam
fstps
into
lds
push
in
out
mov
lahf
or
ja
out
iret
hlt
stc
cmp
cltd
fcompl
jmp
neg
fs
jge
cmc
gs
test
xchg
jne
mov
xlat
dec
fnstsw
push
out
cmp
mov
enter
and
pop
ja
cmp
xchg
add
int
xchg
jo
data16
or
pop
scas
sub
xchg
loop
xchg
push
je
fistl
sbb
pop
or
mov
popa
sub
mov
fs
ds
into
es
loopne
repnz
or
cmp
mov
and
rcrb
arpl
dec
mov
dec
xchg
adc
jnp
gs
pop
js
pop
ss
mov
js
in
les
add
ror
stos
jge
icebp
sbb
dec
dec
cmp
in
arpl
gs
cli
pop
in
cmp
jmp
push
sub
sub
jle
sub
pop
pushf
sbb
inc
in
mov
xchg
push
cmp
dec
pop
out
adc
in
in
fcoml
cmpsb
bound
data16
mov
lock
cmp
fistpll
inc
xchg
arpl
sbb
and
orl
addr16
ss
js
and
mov
fisubrs
cmp
imull
sbb
int3
or
add
inc
es
ret
push
adc
pop
test
push
push
xchg
cmp
ja
xchg
cmp
lcallw
or
test
loopne
pop
cpuid
mov
mov
xchg
test
push
jmp
push
jo
mov
push
lods
dec
pop
shl
insl
mov
shl
ret
pusha
movsb
cwtl
imul
ret
push
mov
or
aam
add
cmp
mov
shrb
and
xor
xor
repz
sbb
stc
or
inc
sub
mov
imul
test
add
mov
jl
and
ds
test
dec
sbb
lds
cmpsb
sub
pusha
sbb
inc
adc
push
push
jl
adc
add
cmpl
loopne
ret
cltd
std
stos
mov
xchg
add
mov
mov
pop
enter
pop
ret
lret
mov
in
cli
dec
lret
or
ss
lods
js
or
pop
add
jnp
cmp
out
mov
mov
mov
pusha
jg
int3
mov
xchg
ret
cmp
dec
ficoms
xor
cmp
shrl
in
push
jecxz
or
xor
mov
jmp
dec
mov
or
jp
shll
fwait
push
xchg
test
scas
lea
adc
xor
sbb
leave
adc
or
cmp
out
lds
imull
outsb
cmp
xor
outsl
mov
daa
mov
stos
jl
jae
fsubr
aad
out
push
aad
jae
mov
adc
dec
fstl
adc
push
and
adc
dec
out
mov
inc
fstpl
sti
sub
movsl
add
mov
je
and
movsb
ss
xchg
inc
mov
jmp
jmp
rolb
and
shll
pop
dec
loope
push
mov
cld
cmp
jmp
mov
je
data16
pushf
imul
lods
movsl
dec
mov
aad
shrl
add
and
pushf
mov
fistl
jno
test
lret
pop
pop
inc
mov
outsb
ficomps
push
xor
leave
jo
aaa
sbb
dec
adc
cld
xor
cltd
mov
cwtl
push
rcll
xchg
imul
xchg
pop
mov
xor
xor
popf
adc
lret
ret
lahf
test
mov
ljmp
adc
lock
jb
xlat
inc
pop
fisubl
arpl
out
mov
js
jo
pop
scas
out
int
xor
sbb
cltd
fwait
mov
insl
lret
repnz
aam
aad
lahf
and
scas
out
jo
call
mov
scas
pop
movsb
in
cli
fwait
test
adc
lea
dec
and
dec
add
ja
lods
repz
iret
push
cs
push
ret
movl
inc
xor
imul
mov
ljmp
lahf
fstpt
out
pop
pusha
mov
add
out
test
adc
dec
or
or
pop
sti
xor
lds
pop
movsb
cmpsl
mov
imul
xchg
aad
adc
repz
gs
sub
mov
mov
or
xor
pop
aas
mov
int3
leave
out
cmp
and
mov
cs
pop
loopne
pop
adc
loope
scas
pop
cmp
sarl
cltd
add
jns
je
add
add
loopne
dec
jae
adcl
in
loop
mov
mov
rol
shrb
mov
ja
and
lfs
mov
push
movsl
sahf
mov
popa
mov
xlat
cmp
int
adc
sbbb
add
dec
loop,pn
lods
cmpsb
mov
movsl
scas
shll
xchg
fadds
nop
lods
xor
andl
xchg
fsub
fs
dec
cld
das
lock
push
cmp
aad
fwait
mov
mov
jns
pop
mov
push
pushf
cmp
adcl
sub
enter
mov
iret
xchg
push
es
xchg
or
push
fildll
dec
cmovge
push
icebp
shlb
xor
adc
xchg
push
leave
push
outsl
xchg
jae
mov
xchg
dec
arpl
dec
mov
mov
hlt
mov
fbstp
cmp
arpl
mov
loop
xchg
pop
clc
push
jo
cmc
or
dec
or
mov
xlat
push
je
movsl
ds
pop
lret
mov
in
jg
test
fwait
mov
push
lea
pop
fs
loope
lret
pop
and
mov
iret
pop
arpl
adc
push
leave
jmp
sub
imul
mov
pop
mov
sbb
inc
jp
push
or
arpl
out
aam
xchg
mov
sub
into
fdivl
das
pop
jb
inc
cmpsl
fcom
xchg
cmp
fwait
jo
mov
pusha
fnsave
cltd
adc
ljmp
mov
hlt
outsb
cld
pop
jl
pop
pop
dec
js
sub
dec
and
mov
inc
xchg
icebp
jle
pusha
add
mov
cmp
ficomps
lds
xor
lret
cmc
inc
pop
movsb
adc
mov
xchg
push
test
je
and
cmp
sti
xor
test
inc
out
lahf
jo
arpl
inc
ret
scas
jae
pop
adc
xor
mov
mov
cmp
add
pop
pop
daa
jnp
cmp
push
mov
in
add
mov
push
jns
out
mov
out
cli
or
aas
sti
sbb
mov
push
je
add
mov
inc
sub
sub
or
cmpl
add
cmpsl
mov
ror
sub
outsl
fdivrl
in
sbb
pop
xor
je
ds
sub
cmp
int
pusha
stc
loope
push
cli
ret
push
fcoml
inc
lock
inc
pop
push
nop
fs
push
fists
movsb
cld
inc
popa
stc
jno
sub
adc
inc
out
cmp
add
mov
fbstp
mov
xlat
xchg
inc
mov
in
shl
lods
mov
iret
out
xor
idiv
dec
and
sbb
cltd
xchg
dec
aaa
sub
repz
mov
cmp
inc
mov
mov
jne
ficoml
mov
mulb
adc
mov
adc
lods
cmpb
xor
jge
hlt
das
fsub
cld
cs
stos
pushl
xchg
inc
scas
xchg
mov
lods
sub
ficoms
or
inc
out
adcb
dec
adc
adc
shlb
sbb
push
test
inc
mov
and
stc
rcrl
roll
mov
popa
cmpsl
mov
add
cmpsl
mov
lahf
dec
pushf
or
loope
adc
dec
cmc
lock
outsl
jnp
inc
dec
fimull
jg
cmp
imul
inc
dec
les
mov
stos
dec
call
jmp
fdivrs
mov
push
mov
fstp
jmp
lret
mov
adc
out
imull
popf
mov
push
inc
and
dec
divl
ret
push
jmp
test
mov
rclb
xor
mov
xorl
imulb
cmc
xchg
mov
popa
push
lea
dec
icebp
aam
mov
sar
inc
jge
xchg
xor
adc
inc
incl
mov
mov
ds
jge
sbb
aad
pop
pop
xor
call
or
lods
rcr
dec
movsl
push
test
dec
rol
adc
jno
sub
jne
mov
inc
mov
pop
mov
cs
adc
xor
loope
add
outsl
loopne
hlt
xor
movl
in
test
dec
scas
sub
mov
sub
inc
mov
out
outsl
jnp
cli
bound
mov
and
ja
test
pop
fldl
mov
adc
fwait
int
and
sub
iret
pop
sbb
push
cwtl
loopne
mov
inc
and
cltd
insl
sbb
adc
mov
mov
sbb
xchg
or
lahf
push
pop
adc
adc
xchg
xchg
sub
addr16
push
stos
mov
cmp
enter
aam
hlt
push
pop
cmc
rcrl
push
jns
dec
push
mov
dec
and
jp
cmp
mov
cmpsb
int3
push
in
testb
cs
sbb
xor
loope
out
cmpsb
ljmp
push
pusha
pop
inc
jg
lahf
iret
pop
ficoms
dec
or
dec
insl
nop
cmpb
xchg
mov
es
and
push
and
addl
movsw
outsb
dec
inc
sub
insl
fdivrl
call
cmp
mov
mov
pusha
xor
add
cmpsb
dec
in
in
mov
mov
repnz
pop
push
andb
and
push
push
loop
jns
adc
add
mov
pop
xor
out
push
push
inc
sbb
mov
and
out
subb
call
xchg
mov
and
sbbb
sbbb
or
mov
pop
jl
xor
mov
insb
stos
andl
pop
stos
orb
lods
daa
adcl
adc
or
aad
mov
insl
pop
mov
cltd
cli
mov
lods
jle
leave
or
lock
lds
cmp
xor
int3
sub
sarl
addr16
xchg
ljmp
adc
ror
das
inc
lock
idiv
leave
and
sub
enter
push
fidivl
lcall
sbb
mov
out
adc
push
push
dec
cmp
cmp
mov
jg
xchg
out
andl
push
addr16
jbe
cmp
dec
jmp
fbstp
pop
scas
imull
clc
je
repnz
push
cmc
or
push
cltd
mov
ret
mov
cs
shr
in
push
movsl
inc
inc
fcmovne
xchg
cmp
ds
repnz
xlat
hlt
inc
sub
scas
leave
repz
sub
mov
mov
push
outsl
and
idivl
and
loop
jmp
jge
ja
mov
pushf
pop
cli
std
and
cs
or
mov
jmp
xlat
outsb
outsl
lods
roll
mov
jl
lret
xlat
ja
bound
xchg
test
aam
push
in
in
iret
cli
jecxz
mov
pop
xlat
stos
xor
xchg
cmp
push
lds
inc
fstps
int3
loope
es
test
movaps
push
adcb
je
movsb
sbb
xor
hlt
scas
fidivrs
fs
fstpl
push
dec
jo
ds
mov
cmp
inc
rol
xorb
dec
aad
pop
jne
adc
jno
imul
fwait
push
add
inc
push
rorl
pop
jmp
out
cwtl
adc
pop
mov
mov
call
or
dec
add
mov
push
sub
int
call
pop
add
ret
ja
dec
icebp
rcr
xchg
pushf
fstl
push
stos
xor
push
aas
roll
stos
jge
out
add
push
inc
ss
push
sub
inc
mov
inc
dec
pop
lea
jmp
addr16
into
push
mov
sbb
mov
arpl
mov
sub
fsubrs
cmp
or
jnp
int3
bound
dec
mov
xchg
gs
jbe
sub
es
inc
dec
pop
jmp
xchg
pop
jns
mov
and
cmp
int3
xor
ret
stc
push
out
or
ds
mov
mov
popa
mov
pop
and
loop
adc
inc
inc
lds
adc
sbbb
mov
fildl
xchg
cwtl
dec
jae
fldcw
stos
cmp
js
clc
std
jp
mov
psubusb
mov
inc
xchg
and
pop
iret
loopne
std
xorl
dec
xor
mov
push
sub
fidivl
lcall
cli
mov
movsb
mov
arpl
add
cmc
dec
or
push
mov
and
outsl
add
int3
ret
and
in
mov
xlat
addr16
maskmovq
call
pop
fistpll
ret
pop
aaa
scas
dec
les
sbb
dec
and
mov
stc
dec
into
mov
loope
mov
adc
int
fistps
sahf
mov
jl
inc
cmc
pop
dec
push
icebp
or
push
xor
xchg
arpl
push
pop
fistps
lods
mov
pop
aam
xor
sahf
shl
les
repnz
and
test
je
xchg
in
xor
repz
mov
gs
jo
cmpsl
insl
xor
xor
add
sub
rolb
push
push
int3
into
or
pop
testl
xor
test
mov
mov
popa
jle
jecxz
pop
adc
lods
mov
xchg
gs
aam
cli
in
dec
mov
pmulhw
test
sbb
push
shll
popf
xchg
insl
mov
push
inc
push
dec
xorl
lods
jb
in
jmp
jbe
sbb
xor
xchg
mov
in
por
ss
push
out
lahf
rorl
mov
lret
mov
gs
dec
lea
cmp
lcall
pop
lret
and
pop
mov
lds
std
repnz
push
dec
es
out
jno
mov
and
lock
and
lahf
fwait
push
out
cmp
ficoms
sub
sbb
and
add
fsts
js
lds
pop
pop
sub
cmp
mov
add
insb
jb
jnp
xor
and
mov
cmp
xchg
jl
jecxz
adc
insl
sbb
insb
mov
mov
push
daa
arpl
stc
popf
mov
pop
cmp
fisttpll
fdivl
aad
or
fbstp
mov
jns
repz
pop
bnd
mov
mov
aam
mov
repnz
or
ljmp
scas
xchg
mov
enter
movl
clc
lock
shrl
dec
popa
dec
sbb
mov
sbb
test
push
iret
pop
cmpsb
mov
push
inc
cmc
dec
movsl
adc
mov
mov
xchg
negl
in
dec
std
inc
lock
add
movsb
nop
push
jecxz
xchg
jle
jae
dec
jge
aam
iret
xchg
insl
adc
aas
jb
inc
ret
sub
push
xchg
jb
mov
mov
ret
nop
sbb
jecxz
mov
mov
xchg
xchg
adc
sbb
mov
and
mov
pop
lock
ljmp
das
xor
sub
call
lock
adc
xchg
sbb
xor
in
adc
aad
scas
sbb
and
lahf
mov
mov
das
xor
xor
pop
pop
dec
adc
fcomps
mov
imul
jmp
lret
adc
cltd
lods
or
test
jne
sarl
les
pop
xchg
add
xchg
mov
jae
fwait
aaa
sarb
jg
push
popa
lahf
faddp
mov
sub
jmp
xor
test
test
pop
sub
adc
leave
mov
and
or
lret
adc
aam
in
push
dec
xor
call
xor
xchg
adc
repz
js
loop
scas
pusha
xor
cmp
push
jg
lea
dec
adc
call
pop
xor
cli
outsb
adc
mov
loope
xchg
mov
in
jg
add
lock
inc
das
jo
add
xchg
ss
jnp
cld
ret
out
int
out
jmp
add
pop
enter
xchg
dec
pop
dec
mov
cmp
cmp
pop
jne
les
cs
fsubrl
adc
out
in
enter
mov
xchg
daa
mov
lds
jns
jb
mov
pop
sub
ja
cmc
add
bnd
sbb
sbb
mov
in
mov
subl
mov
xchg
mov
icebp
and
fldt
ret
adc
xor
xor
shlb
mov
repz
ds
mov
mov
add
inc
movsb
std
push
sbb
add
adc
cmp
mov
jbe
cwtl
sbb
push
pushf
xchg
rclb
mov
inc
pop
inc
mov
pop
jo
fwait
mov
cs
push
fisubrs
xchg
jge
movsl
rcr
mov
mov
lret
inc
xchg
inc
or
fstl
into
scas
lods
addr16
pop
mov
jecxz
lock
adc
push
loop
or
mov
ret
lods
mov
fs
aam
aam
and
xchg
insl
aam
adc
vsqrtpd
rclb
jge
mov
outsb
outsb
dec
out
pop
push
in
xchg
arpl
test
xor
lea
lods
addr16
ficompl
push
test
dec
test
insb
jmp
dec
in
jae
add
out
inc
dec
push
adc
lods
mov
push
inc
aas
add
lea
lret
js
pop
pop
add
jne
xchg
and
in
inc
fcmovbe
jbe
outsb
pop
mov
clc
sbb
adc
push
mov
and
cmpsb
imul
dec
sub
rcrl
rolb
push
test
inc
orps
push
loopne
test
rclb
cld
rcrb
inc
inc
out
outsl
rcrb
push
dec
mov
scas
xchg
jecxz
mov
jg
adc
lcall
shlb
fimull
mov
loope
dec
mov
inc
push
sbb
mov
add
pop
cmpsb
outsl
jl
dec
and
fcompl
push
jbe
sub
clc
pop
jge
jne
jno
mov
call
sub
xchg
dec
movsb
xchg
xchg
mov
push
dec
repnz
enter
xchg
inc
std
je
popa
push
jo
lods
dec
pushf
pusha
dec
jge
jecxz
jl
jae
ja
push
cli
sahf
jl
sbbb
sub
iret
jle
cmp
jl
inc
cmpsl
pop
xchg
test
testb
dec
je
clc
pop
sub
fistps
stos
test
decb
lea
adcl
pop
fwait
mov
mov
or
fsubl
xor
lock
je
pushf
push
cld
clc
in
testl
sub
ds
rclb
ds
ljmp
jo
cwtl
fnstcw
into
or
stc
pop
cmpsl
push
cltd
adc
sahf
das
enter
ret
jbe
xchg
cs
fbstp
mov
jae
mov
mov
xchg
push
dec
popf
in
lea
inc
mov
pop
jnp
push
adc
cmp
aas
insb
push
push
out
cmpsb
ret
fldcw
push
das
loope
sub
push
insl
pop
lods
sub
shlb
xor
jle
loopne
jge
jp
cwtl
lahf
sub
je
ja
outsb
dec
mov
out
inc
aaa
inc
aad
add
subl
fimull
inc
aad
ret
adc
add
test
push
or
inc
or
add
fnstenv
mov
sahf
mov
fisubl
enter
rcll
pop
cwtl
test
insl
pop
add
pop
leave
daa
cmp
push
das
jl
xor
push
and
ja
push
loope
or
sahf
push
cmpsb
repz
dec
cmpsb
clc
lods
pop
inc
out
jg,pt
aam
ret
xchg
data16
jge
cld
fs
pop
jp
stc
jecxz
ret
mov
pop
es
pop
loopne
add
pop
hlt
out
popl
xor
out
inc
pop
arpl
notb
push
sahf
mov
dec
add
add
ljmp
pushf
and
jle
xchg
cmp
testb
dec
aam
lcall
jle
bswap
mov
cld
arpl
sbb
sbb
int
pop
call
subb
leave
xor
sbb
cmp
outsl
mov
iret
addr16
or
dec
and
pop
cmpl
pop
roll
and
cmp
or
jae
mov
mov
test
sbb
leave
xor
dec
mov
mov
jbe
iret
outsl
xchg
push
pop
pop
lret
xchg
adc
pusha
vdivsd
push
and
mov
xchg
les
sbb
enter
and
sbb
push
add
jae
pop
mov
in
mov
mov
mov
test
cmp
pop
sti
mov
push
popf
xor
push
cmpsl
xchg
leave
jnp
ja
jbe
pop
repnz
pushf
push
cld
stos
inc
imul
aaa
bound
es
jae
add
fidivl
ret
mov
xor
out
sbb
add
test
mov
inc
lcall
mov
mov
pop
loope
lret
xor
rolb
loopne
mov
jne
cld
mov
push
ljmp
sbb
lcall
adc
mov
jns
stc
ja
fsubl
xlat
mov
enter
sub
test
fildll
mov
jo
fmuls
jae
movsb
les
movsl
lret
add
push
mov
mov
movsl
rcrb
jae
xchg
lcall
add
clc
sub
leave
stos
in
out
les
hlt
loope
pop
inc
dec
daa
testb
mov
sub
xchg
lds
repnz
test
in
cmp
inc
rol
pop
mov
arpl
arpl
bound
ja
xor
mov
cmpsb
xchg
mov
sti
and
fisttpl
ljmp
jne
cmp
and
sub
pusha
int
mov
sbb
push
mov
or
ret
xlat
fdivrl
lock
ret
mov
in
dec
lods
push
repz
mov
stc
dec
add
pop
sub
lret
ljmp
push
mov
sub
in
xor
std
hlt
sbb
fisubrl
adc
cmp
mov
stos
das
inc
enter
aam
das
xchg
mov
cwtl
jne
push
or
jmp
sahf
push
xor
int
incb
stos
lret
sub
mov
sbb
imul
push
dec
sbb
les
pop
jl
lret
cmc
sbbb
mov
add
pop
out
sub
or
xchg
add
sarb
mov
arpl
lods
ret
lret
es
sbb
cmp
jne
pop
int3
ja
mov
cmp
adc
jae
and
inc
mov
xor
enter
std
imul
pop
and
pop
inc
sub
jae
jle
leave
in
and
mov
lret
push
lret
outsl
test
pop
mov
cmpsb
push
dec
mov
dec
jnp
inc
jecxz
les
xorl
ret
fildl
ret
fidivl
push
bound
pop
pop
xchg
adc
popf
aam
xchg
insb
ds
sub
ss
push
cmc
and
inc
mov
cmc
fcomi
mov
rcrl
repnz
repnz
xchg
dec
jno
dec
cmp
cmp
or
or
xor
sbb
jae
inc
call
sub
in
int
fcoms
mov
pop
movsb
mov
pop
hlt
xchg
sbb
add
loope
fidivl
xchg
lods
cmpb
sti
dec
cmpsl
hlt
adcl
xchg
push
arpl
ret
out
mov
and
xrelease
push
and
push
mov
xchg
inc
and
pop
or
fcompl
test
inc
aas
lret
ljmp
inc
stos
pop
movsb
xchg
inc
cld
cld
rclb
test
aad
mov
sbb
cmpsb
cmp
popa
js
jno
add
push
mov
mov
mov
insl
jno
pop
arpl
mov
push
test
mov
push
scas
mulb
xlat
ds
sbb
push
repnz
add
or
out
sbb
lds
jbe
in
les
sub
dec
jae
inc
mov
cmovno
cmp
adc
jb
es
lds
popl
movb
xchg
sar
sbb
fdivrl
clc
dec
inc
and
ja
shll
js
jnp
push
jle
jnp
shll
aam
repz
test
enter
js
cmc
shlb
pop
sub
jbe
push
add
jmp
call
adc
push
pop
sub
cmp
lods
fisubrs
jl
into
xchg
stos
es
scas
mov
xchg
cmp
add
mov
xorl
shlb
in
fstpt
adc
ror
std
int3
pop
inc
cmp
add
cld
mov
sbb
push
popa
mov
push
cld
jnp
ffreep
cmp
ficoms
mov
stc
adc
movsl
int
pop
xlat
lret
cmp
aam
push
add
mov
xor
xchg
pop
les
xchg
in
mov
in
shr
loope
sub
push
fstpt
jns
cli
stc
push
and
and
rorb
add
into
icebp
das
int
xor
icebp
nop
pop
push
cmp
subl
loope
aas
cmp
pop
mov
push
push
js
inc
sbb
adc
es
sbb
sub
and
mov
fdivrl
outsb
mov
add
lea
lods
stos
jle
es
in
out
popa
mov
aam
test
mov
mov
adc
stos
xchg
mov
cmp
out
xor
les
out
adc
test
clc
fwait
or
sub
aaa
push
cmp
pusha
jbe
sub
hlt
mov
adc
cmpsb
arpl
dec
push
pop
xor
outsl
fnstsw
addr16
pop
hlt
fistpll
mov
push
cmovno
rep
enter
arpl
dec
iret
pop
mov
xor
hlt
mov
mov
push
push
rcll
dec
aam
adcb
dec
jno
insl
or
inc
lods
push
stc
dec
adc
xchg
sub
mov
push
cmpsb
iret
jge
xor
pop
xchg
dec
jo
sbb
xlat
adc
pop
inc
int3
dec
shr
mov
es
dec
push
jbe
je
pop
and
xchg
popf
je
mov
js
jge
add
mov
cmpsb
int
sub
push
mov
pop
mov
das
fs
mov
adc
push
xor
xchg
inc
scas
into
out
outsl
mov
repnz
fistps
insl
out
cmp
and
addr16
pushf
ret
and
shll
int3
xlat
test
jp
push
lods
or
or
xchg
inc
add
and
push
cltd
and
bound
testb
es
ja
movsb
movsb
dec
pop
sub
mov
bound
mov
imul
jns
aad
mov
pop
sbb
push
shll
sti
std
call
mov
mov
gs
pop
cmpl
push
push
add
cmp
hlt
out
pop
mov
outsl
xchg
and
inc
jg
ret
aam
ficoms
mov
mov
loope
pop
repnz
fiadds
pop
cmp
negb
data16
in
imul
pop
adc
dec
mov
lcall
into
mov
and
jmp
mov
xor
fisubl
xchg
in
fadds
pop
sbb
popa
mov
call
xchg
mov
push
dec
dec
mov
lret
pop
fistps
outsl
mov
adc
rcrb
push
ret
dec
dec
imul
stos
fidivl
in
enter
addr16
ss
stos
sarb
cmpsl
ss
mov
dec
icebp
cmp
xchg
xchg
pop
or
loop
sub
pop
sub
cmpsl
sar
and
sbb
clc
sub
mov
in
dec
stc
mov
loope
mov
iret
in
sbb
es
push
pop
imul
sub
pop
rolb
pop
fwait
repnz
lahf
sub
dec
or
or
pop
popf
mov
lahf
cmpsb
mov
out
jo
in
mulb
mov
jno
imul
dec
notl
mov
outsb
sti
sbb
mov
ja
dec
sbb
xor
testb
shll
pop
cwtl
aam
gs
call
pop
fidivrl
cmp
inc
aam
pop
insb
inc
xor
jbe
popa
adc
push
fstpt
pusha
je
repz
loop
push
das
push
and
fsubr
out
mov
pop
movsl
aaa
das
fsubrs
mov
sti
ss
std
adc
dec
sbb
or
xor
xor
loop
sub
add
pop
xor
in
inc
in
sbb
insl
xchg
cmpl
or
scas
xlat
add
xor
push
jle
movsb
jns
cs
cld
repnz
fimull
pop
outsl
lcall
mov
out
imul
cmp
cmp
or
adc
mov
xchg
sbb
fistps
sub
jg
dec
loope
loop
jnp
hlt
mov
in
jns,pt
nopl
or
loopne
je
or
mov
xlat
adc
and
push
jmp
popf
pop
inc
cwtl
sub
in
outsl
sub
adc
xor
insl
in
pop
sub
jb
out
mov
jae
jecxz
sti
dec
out
ss
in
pop
push
cwtl
mov
in
push
mov
cmp
mov
test
movsb
xchg
test
xor
jns
fnsave
ljmp
pop
jp
and
out
mov
call
aad
dec
dec
add
ficoml
jne
aad
inc
xchg
mov
jmp
test
stos
fists
daa
mov
jg
ror
inc
lahf
fs
int3
rorb
clc
fwait
xchg
movsb
ja
outsb
out
ljmp
xor
data16
adc
loopne
sub
or
mov
mov
int
jo
dec
pop
into
data16
or
xor
mov
ret
sub
out
fsubrp
fistps
rcrb
add
test
cmpsb
mov
out
and
fstp
int3
xor
jne
dec
cmp
loopne
dec
add
mov
inc
and
cs
outsl
xabort
sub
sub
fcoms
ret
ss
mov
insb
jb
inc
popf
sub
fwait
lea
xor
cmp
nop
in
jns
out
test
movl
shl
push
test
jbe
repz
ficoml
dec
jecxz
mov
hlt
add
test
into
mov
aas
cmp
popa
out
cmp
outsl
adc
sub
jnp
aaa
outsb
icebp
mov
addr16
add
mov
inc
cmp
or
movsl
xchg
cld
jl
aad
cmp
out
rol
scas
sbb
test
xor
cli
pop
dec
test
mov
cltd
cmp
test
xor
shrb
scas
cs
cmp
dec
cltd
sahf
pushf
pusha
jle
and
xor
fildl
push
popa
pop
pop
es
or
cmc
or
arpl
mov
call
inc
stos
out
inc
push
lahf
arpl
xchg
push
mov
cmp
outsb
jmp
daa
clc
jg
inc
pusha
test
xchg
sub
addb
xchg
mov
fbld
xor
inc
mov
cmpsl
lods
mov
rorl
popf
loope
cmp
or
or
arpl
mov
cmpsl
data16
add
js
inc
add
cmp
xor
mov
cmp
loope
dec
lret
scas
and
aas
test
aaa
or
or
repnz
dec
into
push
pop
lahf
lret
loope
arpl
in
pop
pop
sub
insl
xor
jge
ret
loope,pt
sub
jo
mov
not
pushf
mov
add
adcb
adc
pop
in
jbe
mov
push
sub
and
mov
inc
and
sbb
cmpsb
sub
loopne
or
adc
loope
or
mull
xor
dec
mov
xor
repnz
in
cmp
dec
xor
jbe
mov
fcoml
jl
loope
aam
in
inc
inc
sahf
jne
jb
xchg
insb
cmpl
and
inc
jecxz
gs
adc
inc
filds
lods
repz
mov
rol
mov
pop
push
cmp
cmp
mov
daa
je
imul
jb
adc
dec
adc
popf
mov
adc
mulb
cli
cmp
inc
mov
xor
dec
sbb
imul
push
jbe
mov
xlat
xchg
and
mov
mov
sub
andl
add
mov
or
test
inc
sbb
in
push
jns
and
loop
sbb
xlat
in
cld
adc
loope
inc
popa
and
sub
mov
jle
mov
mov
stos
incb
dec
roll
nop
pop
repz
pop
pop
and
mov
inc
cmp
mov
xchg
loope
add
xor
fnstsw
incb
test
mov
mov
repz
repnz
in
push
add
int
sahf
fstl
out
sahf
push
cli
pop
pop
pop
rcll
movsb
ja
fdivs
lret
in
stc
loope
adc
imul
test
ss
sbb
sub
jl
inc
jne
std
pop
outsb
mov
dec
dec
jae
sbb
cmp
int
popf
sbb
gs
jmp
lret
sbb
aaa
inc
aas
ss
cwtl
lock
mov
sbb
adc
aas
add
pop
in
jl
cld
imul
out
jne
ljmp
jae
mov
jnp
jmp
sub
xor
das
jns
inc
stc
shll
or
pop
inc
ljmp
mov
loop
xchg
test
cld
mov
jecxz
dec
pushf
cmp
es
sbb
imul
mov
pop
call
xlat
stos
sbb
shlb
pop
leave
jo
loopne
xchg
and
cld
ss
pcmpeqw
fldenv
addr16
push
call
xor
mov
or
lahf
or
scas
imul
scas
aad
insb
fldt
xchg
push
aam
add
xchg
inc
or
cmpsb
subl
nop
mov
ja
fldcw
sub
sti
mov
dec
mov
push
cli
fnstcw
gs
in
xor
mov
sarl
sahf
sbb
inc
add
vrcpps
jle
sbb
push
jg
rorl
sub
xorl
mov
mov
fmull
sub
cmp
xor
movsl
mov
cmpb
fldenv
test
jmp
push
sub
inc
adc
xchg
sbb
dec
loope
xchg
sub
jne
inc
pop
or
jmp
mov
cwtl
inc
int3
jbe
sbb
enter
and
fsubs
or
inc
push
loopnew
push
dec
cmpsl
cmc
and
int3
add
or
in
jo
xor
pop
call
fstpt
xor
add
ret
lahf
xchg
or
shlb
mov
jmp
mov
mov
test
xor
jo
sub
dec
lahf
loopne
insl
stos
adc
xchg
nop
les
insl
xchg
nop
out
pmaddwd
xchg
push
or
inc
add
and
push
cmp
sub
jle
lods
pop
cmpsb
push
sub
push
adc
in
fs
fcomp
pop
mov
sub
dec
sbb
fdiv
outsl
push
gs
mov
ja
push
rep
xchg
int3
dec
shl
outsb
fisttps
enter
push
test
sbbl
dec
je
movsl
mov
or
push
jmp
push
push
sar
cmp
or
mov
rcrl
cmpsb
push
sub
cltd
pop
fsubrs
subl
cmp
push
fisubrs
stos
push
fldcw
out
repz
sbbl
push
shrb
xor
jle
push
pop
cmp
cmp
xor
push
jmp
les
adc
cwtl
es
push
push
pop
mov
mul
add
or
push
cld
aam
add
dec
ljmp
ss
cltd
repnz
out
xchg
pop
mov
movsl
or
push
cs
inc
arpl
in
mov
inc
in
rorl
sub
push
inc
in
mov
mov
pop
cmp
idivl
xchg
setl
popf
pop
jge
xchg
push
pop
pop
je
repz
das
movsb
push
and
or
pop
addr16
pop
imul
dec
or
or
loop
sub
shl
and
add
xorl
dec
cs
imul
mov
mov
or
sbb
divb
or
int3
xchg
xor
les
mov
push
or
into
ret
fwait
mov
lret
cmc
ret
mov
loopne
call
mov
mov
jmp
test
aaa
mov
ss
daa
xchg
sbb
in
lret
mov
mov
ret
sbb
jb
aas
outsb
pop
jnp
sub
sbb
frstor
push
push
ss
outsb
and
jmp
cli
je
in
and
js
xchg
js
pop
aad
enter
int3
cmpb
jg
les
jmp
pop
shll
pop
mov
int
inc
mov
and
pop
jecxz
loope
sub
shr
mov
leave
inc
insl
fs
insb
cmp
outsb
lea
push
dec
clc
xchg
popf
xor
cmp
sti
push
jmp
pop
rorl
jg
ja
fdivr
xchg
and
mov
aad
stos
cs
das
aad
in
mov
dec
xchg
mov
bound
and
cltd
jl
lods
dec
pop
pop
out
scas
mov
fs
xlat
mov
cmp
mov
rolb
pop
lret
cs
dec
add
enter
fs
out
negb
ja
xchg
mov
jmp
pop
adc
sub
mov
ret
cmp
push
cmc
mov
lahf
xor
cld
add
adc
dec
dec
and
jae
or
adc
test
mov
mov
xchg
out
and
femms
inc
or
or
mov
jle
jbe
out
iret
dec
bnd
jnp
push
rcrl
aaa
xchg
js
pop
mov
dec
add
call
fstpl
xchg
jecxz
je
loope
in
mov
js
test
and
shr
aas
test
sbb
pop
jp
mov
jl
push
lock
pop
in
and
jg
jo
gs
pop
aam
jl
cs
push
xchg
push
inc
jecxz
jmp
xchg
mov
mov
push
jg
stos
ret
pop
lods
xchg
cli
mov
xchg
mov
stos
je
dec
cmc
sbb
push
jmp
jno
ret
fcos
jno
out
push
and
scas
xchg
mov
or
aas
mov
mov
cli
xchg
pop
cmp
mov
jp
imul
iret
cmp
push
pop
adc
daa
sbb
adc
loope
fisubs
clc
xchg
cs
pusha
jno
cmp
xor
sub
jl
mov
mov
cltd
or
inc
adc
mov
xchg
addr16
mov
scas
ja
sbb
xor
push
stos
pop
jnp
aam
fistl
mov
in
mov
lock
mov
push
enter
aad
subl
inc
std
pop
jp
adc
dec
jecxz
sbb
das
mov
or
push
or
lock
iret
fnstsw
dec
push
int
jl
insl
push
fsubrs
pushf
cmp
push
fdivrl
mov
mov
pop
add
cs
es
sbb
xchg
inc
outsl
subb
popa
xchg
in
test
aaa
out
fwait
pop
hlt
and
pop
ljmp
nop
mov
int3
jnp
cmpsb
pusha
and
mov
adc
mov
jle
pop
jmp
and
mov
popf
gs
xchg
inc
sbb
repnz
inc
mov
out
out
pop
mov
jo
sbb
sbb
jle
mov
ja
cmpb
scas
je
subl
gs
push
jbe
in
lahf
ret
inc
mov
clc
sbbl
faddl
pusha
dec
adc
push
push
pop
loop
xchg
lea
cld
xlat
pushf
ds
add
mov
jecxz
ja
inc
sub
in
jp
jo
pop
rcrb
cwtl
lods
xor
ss
inc
mov
jne
arpl
out
mov
mov
lds
cmp
pusha
pop
push
loop
mov
test
adcl
outsb
jg
lods
cmp
test
sbb
jbe
push
mov
inc
fwait
jg
dec
xchg
jnp
inc
mov
cmc
loope
loop
cli
out
jmp
xchg
sbb
into
loope
jmp
cmpsb
xchg
stos
popa
inc
mov
fwait
cmp
jb
push
cmp
out
stos
scas
pop
xchg
cmc
pop
ret
xor
cltd
and
sub
roll
dec
loop
orl
push
shll
pop
xchg
loopne
adc
and
xor
out
dec
lcall
les
push
mov
daa
outsl
and
sahf
cwtl
mov
mov
stos
mov
dec
add
mov
mov
sbb
fdivrs
sbb
lahf
leave
mov
mov
sbb
loopne
movsb
adc
imul
arpl
sub
movsl
insl
sub
je
mov
or
lds
ficoms
xor
jb
jg
fwait
push
lret
fs
sub
add
mov
xchg
mov
dec
pusha
cmp
inc
mov
loop
and
popf
sbb
xchg
sub
inc
push
fnsave
cmp
cmp
loop
xchg
mov
testl
jmp
jg
jmp
lret
jnp
cmp
pop
inc
pop
imul
mov
and
xlat
pop
pop
lret
jge
sub
xchg
std
jle
dec
lea
addr16
leave
xchg
sbb
or
ss
sub
shll
in
stos
jns
or
dec
fisttps
and
push
cmp
push
push
mov
mov
push
repnz
dec
dec
sub
lret
sbb
js
or
dec
enter
push
test
pusha
sbb
stos
dec
and
les
orb
cmc
dec
mov
inc
popa
mov
pop
adcl
or
fsts
xchg
or
cs
mov
pop
or
pop
push
icebp
cli
jecxz
cmpl
shll
in
or
cmpsb
rclb
gs
sbb
dec
test
test
into
sub
daa
mov
cmp
cmp
mov
cltd
sbb
mov
movsl
push
sub
mov
dec
imull
gs
jl
xchg
adc
fldcw
dec
push
xor
mov
push
sbb
loopne
mov
iret
sub
sub
iret
xor
xor
or
adc
icebp
arpl
xchg
outsl
mov
out
adcl
cmp
xor
pop
out
ficoms
movsb
data16
out
jae
jge
jmp
scas
inc
and
adc
adc
fistl
loopne
cwtl
into
jno
jmp
sbb
xlat
and
cld
fwait
xor
inc
and
pop
jne
and
mov
cli
insb
popa
or
sub
popa
xchg
or
enter
das
mov
in
mov
and
sbb
xchg
faddl
jecxz
sub
cwtl
push
xchg
cmp
and
jg
mov
pop
jb
dec
jmp
ss
xchg
adc
fnstcw
in
outsl
xor
xchg
lret
xchg
rolb
mov
adc
sti
mov
cmpl
xchg
mov
pop
test
mov
mov
push
sbb
push
rorl
sub
jecxz
out
ss
add
cwtl
push
mov
das
shrl
rcrb
and
sub
dec
sbbb
ret
jbe
jl
hlt
cmp
push
hlt
sub
pop
in
arpl
mov
inc
xchg
push
mov
icebp
adc
mov
pop
pusha
cmc
scas
and
add
inc
jo
cmp
mov
mov
xchg
jo
jmp
sbb
cmp
push
push
dec
push
pop
gs
mov
dec
xor
mov
or
loope
jl
cwtl
iret
mov
test
sbb
std
aam
subb
lret
test
add
aas
jle
mov
into
adc
ds
out
and
cs
in
fsubrl
popa
xlat
cmc
add
and
jnp
xor
ror
add
mov
xor
xchg
pop
jl
aaa
out
js
dec
pop
sub
das
or
loop
cmp
mov
pop
stos
jae
and
pop
out
mov
inc
ror
test
std
gs
leave
test
inc
movsb
sub
mov
loop
mov
jl
mov
fldcw
dec
cltd
mov
push
lahf
inc
sbb
andnps
mov
mov
fistl
pop
cs
stc
repnz
ss
jmp
pop
test
sub
xchg
and
outsl
mov
in
in
cmp
push
lcall
pop
leave
mov
bound
push
cli
negb
mov
xchg
xor
add
xchg
sahf
add
lods
sub
in
or
out
adc
pop
outsb
mov
push
pop
insl
cli
dec
dec
outsb
mov
fnstenv
ret
or
dec
packsswb
sti
mov
jle
adc
mov
call
sti
imul
ret
jb
insb
mov
jp
or
cmp
std
and
rorb
sub
fisttpl
stos
fiaddl
fistl
jne
sub
xor
jg
rcll
cmpsl
xor
out
nop
and
sub
dec
adc
mov
rcll
sbb
lds
pop
xchg
out
stos
mov
ja
add
jae
push
mov
cmp
into
add
pushf
jp
xor
pop
cs
mov
hlt
xchg
movsb
mov
xchg
stos
pop
sub
outsb
jmp
jb
jae
xchg
mov
push
cltd
inc
int
xor
xchg
aad
mov
andb
aad
pop
fiaddl
repnz
clc
lahf
sub
flds
testl
adc
inc
sub
aaa
push
jecxz
add
jno
jmp
repnz
push
aas
mov
and
inc
dec
dec
jmp
pop
psubb
scas
mov
imul
pop
push
js
sbb
cwtl
test
mov
mov
mov
arpl
repnz
mov
mov
lahf
and
pusha
jecxz
dec
cmpb
daa
aas
loope
aad
inc
pushf
aam
icebp
and
mov
add
pop
cwtl
pop
adc
mov
mov
popa
jle
cmp
push
xchg
enter
push
mov
stos
xor
insl
dec
enter
enter
sbb
cmp
pop
adc
outsl
call
mov
jno
sbb
in
cmp
leave
test
push
sbb
jns
jae
adcl
lods
enter
loope
popf
dec
mov
mov
push
inc
das
mov
and
pop
mov
push
js
jmp
lods
jae
insl
test
inc
rorl
popf
int3
ljmp
pop
jnp
rcrb
outsb
fcompl
loopne
bound
mov
lods
sbb
push
lret
dec
fs
sub
or
pop
and
andl
push
popf
mov
clc
pop
test
int3
mov
ds
in
inc
push
rolb
sub
xchg
jo
scas
mov
lds
movsl
fs
xchg
test
mov
lods
and
cmp
sbbb
mov
nop
jge
inc
push
mov
jge
adc
lret
jp
or
aaa
mov
lret
sbb
cmp
pop
mov
aaa
pop
add
mov
sub
sbb
inc
sbb
or
mov
inc
and
adc
jb
lock
clc
inc
adc
popf
jnp
movsl
jmp
jae
lock
push
adc
aad
jbe
adc
inc
cmp
out
scas
lods
push
and
lods
test
xchg
movsb
ret
mov
fnstsw
xchg
jb
and
mov
xchg
fldenv
push
mov
in
daa
dec
jno
cmp
and
addr16
inc
out
push
sbb
mov
cwtl
rcr
adc
xor
xchg
repz
sbbb
pop
add
mov
inc
mov
cmpsb
inc
inc
pop
testb
outsb
jecxz
adc
dec
and
daa
jo
lret
outsl
ljmp
adc
mov
ret
push
repnz
push
xlat
test
pop
cmp
xchg
fisttps
btc
cmp
imul
push
cmp
adc
push
pop
lret
xchg
mov
mov
add
daa
jnp
insl
inc
fs
mov
add
adc
pop
cmp
cmpsl
std
ret
out
xor
and
out
cmp
inc
jmp
loopne
inc
ljmp
push
xchg
fs
add
or
fcmovnu
or
mov
aaa
xor
push
mov
mov
jbe
xor
xchg
movsb
mov
insb
cli
sub
loope
cmpsb
lret
data16
pop
stc
dec
into
std
decl
aad
mov
addr16
jne
std
or
pop
or
out
xchg
stos
or
cmp
je
push
mov
daa
ss
lea
cmc
daa
rclb
hlt
jl
xchg
stc
icebp
mov
lcall
mov
push
dec
xor
xchg
sbb
fcos
sub
push
xor
sub
sahf
mov
inc
iret
jne
jb
jbe
out
imul
jp
add
xchg
stc
or
xchg
pop
jne
fcmovne
dec
das
add
out
adc
repnz
mov
cmpsb
xchg
jp
sub
int3
xchg
cmp
popf
adc
inc
push
std
hlt
sbb
lret
cs
mov
repnz
mov
and
inc
jecxz
inc
jbe
js
enter
jle
jae
scas
sub
cmc
or
xor
inc
test
inc
inc
fwait
mov
sbb
sti
js
mov
insl
dec
inc
iret
mov
and
sbb
push
inc
scas
pop
cmp
cwtl
cmpsl
mov
sub
jo
sub
xchg
pop
xchg
and
sbb
cmp
add
fldenv
ljmp
daa
dec
test
lahf
in
pop
push
dec
sub
push
push
fstpt
es
adc
nop
and
mov
call
pop
faddl
push
cmp
iret
xchg
pop
addr16
xchg
pop
nop
push
movsb
repz
push
push
enter
aaa
aaa
shl
push
mov
pop
scas
lea
jb
or
xor
arpl
jns
mov
jg
jmp
insb
sub
and
sbb
enter
stc
xor
pusha
jmp
push
sub
dec
jl
mov
inc
cmp
lods
push
je
int
cmp
dec
nop
pop
in
or
in
push
dec
pop
dec
es
test
rorl
push
xchg
jmp
inc
sbbl
adc
adc
repz
mov
jns
and
xchg
xor
mov
push
push
lret
xchg
ja
or
inc
push
cmp
mov
xor
in
mov
sub
push
jecxz
sbb
fisttpll
inc
jnp
inc
popa
sub
int3
stos
xor
mov
daa
test
stc
lods
iret
cmp
imul
lods
out
add
scas
and
jo
or
fdivs
out
popl
push
ss
loopne
mov
add
sub
jmp
mov
ficomps
jno
mov
cmc
xor
jg
enter
outsl
lock
jle
sbb
xchg
jae
out
xchg
lods
rorb
lcall
and
fstpt
jecxz
scas
sub
rol
int3
lret
sub
mov
arpl
inc
add
pop
sti
cmp
imul
pop
sbb
fidivs
dec
cmp
aas
fwait
stc
push
popa
fistl
pop
lret
pop
sub
xor
imul
push
mov
adc
xor
mov
mov
mov
and
sarl
int
inc
jne
cmp
std
adc
pop
pop
pusha
ja
rclb
inc
sti
mov
pop
adcl
ljmp
icebp
mov
jns
mov
xor
inc
and
mov
pop
jecxz
lods
cmpsl
or
aam
push
mov
sub
cmp
jl
jns
xchg
jge
fdivs
pop
in
lods
out
inc
repnz
test
das
cmpsb
lods
pop
fists
dec
aaa
push
std
jae
dec
negl
cmp
stos
xchg
xchg
jle
mov
mov
rclb
aad
dec
cld
dec
mov
insb
push
iret
nop
xor
mov
pop
cmp
sub
je
mov
push
fdivrs
nop
sub
fwait
fwait
andl
aam
add
xchg
pop
insb
dec
pop
addb
pusha
aam
sbb
xor
aaa
jl
xor
outsb
jp
xor
and
icebp
cmpsl
mov
mov
pop
sbbl
mov
aad
mov
stc
pusha
xchg
cltd
or
xlat
xor
lahf
fcoms
lods
aad
fcos
bound
int3
fwait
movb
adc
lret
and
pop
outsb
hlt
fwait
neg
mov
cmp
sbb
iret
arpl
xlat
or
sti
stos
lahf
sbb
xor
xchg
push
movl
arpl
adc
cld
cmp
xchg
add
push
test
test
adc
adc
xlat
fcomps
adc
fistl
scas
jo
ret
xchg
lock
fucomip
and
mov
push
ret
mov
mov
xor
lock
repnz
clc
adc
es
rol
lods
aas
dec
ss
stos
ja
mov
jl
lret
xrelease
mov
cmp
sub
inc
mov
inc
sar
or
push
loopne
fs
pop
lahf
dec
rcrb
sti
cmpsb
lock
xor
stc
sub
push
inc
mov
mov
fcmovbe
pop
shlb
loope
mov
mov
inc
jle
daa
jg
add
push
or
push
fmuls
xlat
stos
pop
int
stos
in
add
dec
dec
cmp
sbb
and
mov
clc
cmc
loopne
cmpsl
stc
stc
pop
fimuls
pushf
push
mov
dec
aad
mov
xchg
test
mov
aad
fdivrl
and
pop
cmp
scas
inc
sub
pop
mov
loope
negl
test
sub
mov
nop
xchg
lods
jne
adc
push
xchg
in
ret
jl
jmp
jbe
sub
mov
add
hlt
lods
sub
or
xor
pushl
pop
inc
and
mov
xchg
mov
mov
popf
pop
mov
pop
movl
or
aam
sub
jmp
ret
fcompl
mov
test
stos
frstor
repz
pop
cmp
dec
stc
inc
js
cmpsl
xchg
jl
dec
adc
iret
add
push
xor
dec
adc
lea
ss
jns
xor
ss
xor
outsb
jne
sbb
or
dec
test
jns
repz
bound
jb
adc
push
fidivl
outsl
push
stos
repz
pop
xor
push
das
add
outsl
push
out
in
out
dec
jge
dec
sub
inc
adc
jg
sbb
int
push
js
fcmovne
sub
add
mov
mov
imul
pop
insb
jge
inc
les
adc
rol
frstor
insl
adc
insb
dec
insl
scas
stos
mov
and
jl
in
shrl
pop
test
gs
lahf
inc
or
or
pop
xchg
adc
loop
sti
test
xor
mov
fnstcw
cmpsb
arpl
adc
repnz
ds
dec
shl
cmp
lret
mov
and
sbb
arpl
mov
int3
jns
cwtl
out
adc
mov
cmp
mov
fsts
xor
add
inc
in
movsl
ja
mov
or
or
inc
mov
xchg
leave
out
pusha
xor
aam
dec
lods
or
jge
flds
stos
and
mov
bound
jbe
lret
push
pop
push
or
and
dec
mov
mov
jg
or
dec
or
pop
test
movsl
lods
ds
cmpsl
inc
sub
inc
icebp
or
adc
pop
repz
jbe
sti
push
and
pop
dec
lahf
cmpsb
bound
dec
andl
dec
cltd
jmp
mov
mov
push
fucomi
dec
lret
adc
out
lods
stos
add
xor
cmp
test
out
or
lahf
cmp
and
sub
inc
call
test
lock
movsb
les
mov
jle
out
insb
cli
jbe
cmpsb
cltd
sub
xchg
sub
adc
xor
enter
dec
es
movsb
jmp
std
loop
and
sbb
lds
push
mov
cs
movsb
daa
dec
iret
push
das
mov
popa
add
pop
sub
mov
pop
xor
jae
dec
pop
dec
scas
inc
pop
sub
dec
fs
or
jo
outsl
push
movsb
test
jbe
adc
mov
or
sbb
in
in
sub
pop
sub
add
in
aaa
std
fnstenv
adc
sub
xchg
dec
push
insl
sbb
rcrb
and
add
xor
dec
xchg
inc
pusha
adc
mov
ret
bound
out
test
orb
mov
push
cltd
jnp
xchg
jnp
jbe
imul
lea
push
xor
leave
xchg
mov
int3
adc
loopne
adcl
and
adc
dec
iret
leave
mov
xorl
xlat
dec
pop
sub
xchg
loop
add
dec
sbb
jo
dec
push
cmc
int3
and
dec
sub
ljmp
addl
mov
test
shl
fsubr
cmp
out
sbb
ss
hlt
mov
dec
jb
xor
shlb
mov
addr16
sbb
adc
and
sub
ja
push
sub
push
fs
jo
sub
push
pop
or
in
mov
push
push
sbb
decb
lret
sbb
idivl
mov
andl
movsl
sti
lods
dec
inc
test
or
sub
icebp
or
not
pop
loope
or
into
cmp
je
or
inc
xchg
out
dec
push
aas
xchg
and
mov
mov
cs
bound
xor
ficoms
jg
dec
std
imul
mov
decl
pop
out
daa
add
dec
scas
iret
mov
add
add
adc
pop
mov
mov
xchg
notb
stos
arpl
imulb
popa
jbe
and
movl
lock
adc
test
or
cmp
and
rorb
jnp
test
cli
mov
xchg
push
lea
fcmove
pop
lods
adc
fdivl
sub
pusha
mov
pop
cs
stc
adc
mov
jnp
xchg
lahf
les
movsl
in
sub
aam
adc
or
imul
dec
jg
mov
add
ret
cmc
lahf
popa
adc
cmp
int
lods
dec
jo
xchg
mov
push
xchg
xchg
or
push
inc
nop
pop
in
bound
gs
pushf
leave
imul
adc
dec
sub
xor
sub
lret
fcoml
xchg
fildl
jmp
xchg
mov
xor
mov
test
fistpll
cld
cmp
sub
cmp
sbb
repz
fiadds
fistpll
sbb
pcmpgtd
and
loopne
in
mov
mov
insl
dec
fwait
sub
iret
aas
cmpsl
push
cmp
lahf
call
loopne
stos
push
bound
jno
add
cmp
loopne
aad
push
call
or
xchg
fisubrl
popf
hlt
xchg
movl
sarl
pop
test
fmuls
pop
pusha
add
or
xor
outsl
jge
xchg
repz
inc
xchg
outsl
movsb
xchg
repz
mov
dec
dec
mov
push
push
xchg
sarl
jno
mov
dec
dec
mov
gs
rcrl
push
clc
mov
pusha
aam
xlat
pushl
pop
jecxz
subb
sub
jne
std
test
imul
cmp
jmp
mov
shlb
mov
jno
or
rorb
xchg
jl
or
inc
or
loope
mov
xchg
jecxz
int
mov
add
adc
push
push
pop
mov
dec
repnz
add
icebp
cld
out
push
mov
pop
jl
rorl
jmp
je
sbb
data16
imul
mov
xor
or
cltd
test
popf
sbb
fmull
mov
xor
ss
inc
push
mov
jge
push
outsb
and
fidivl
movsl
addr16
adc
jne
int3
aaa
into
inc
cmpsb
push
orl
cwtl
sub
pop
aad
hlt
lods
into
gs
sub
shll
xchg
in
lahf
add
fxrstor
daa
or
pop
mov
pop
aam
fcomps
loop
andb
xor
sahf
repnz
xchg
aad
push
push
andl
int
push
lret
repz
std
data16
jb
jle
or
mov
repz
fistps
cmp
add
inc
xchg
lds
sbb
and
add
sub
das
inc
push
xor
or
test
add
sub
adc
jmp
aas
dec
aaa
cmpsb
jmp
or
mov
xor
scas
or
add
sbb
clc
sbbb
mov
mov
dec
sbb
lret
jne
in
xor
fdivl
jg
stc
pop
sbb
pop
popa
repnz
stos
in
cmp
aad
mov
lcall
jmp
sub
adc
je
inc
jecxz
out
mov
mov
lcall
mov
lds
add
xor
sub
out
lcall
xchg
pop
nop
inc
loopne
push
js
cli
icebp
fs
jp
std
aaa
or
add
xchg
and
and
test
ljmp
aas
jecxz
das
sbb
mov
aaa
arpl
ds
cltd
cmpsb
das
out
and
sbbb
adc
dec
cld
lea
xchg
mov
movsb
pop
or
and
aam
rclb
loope
call
iret
stc
and
cld
sbb
fwait
push
inc
mull
sub
mov
je
js
in
xor
addr16
test
iret
aaa
xchg
dec
dec
faddp
mov
dec
scas
jle
mov
pop
test
mov
mov
push
cs
inc
out
out
mov
sub
push
mov
sbb
sub
jl
repnz
dec
dec
popa
cltd
mov
inc
rol
repz
xchg
daa
es
inc
loopne
shll
cmpb
lods
scas
xor
into
or
lods
pop
push
or
hlt
mov
pop
dec
sbb
push
stos
fld
cmp
insl
dec
push
scas
xor
rcrl
popa
repnz
popa
sub
fldl
cmp
es
cmpsl
add
xchg
pop
sbb
xorb
pushf
lea
mov
dec
xchg
or
jl
add
jne
test
into
mov
arpl
fmull
or
and
pop
pop
push
jle
push
mov
les
icebp
sbb
xchg
sub
mov
and
daa
dec
push
pop
test
inc
and
das
dec
add
aad
pop
aad
lock
sbb
arpl
dec
sub
scas
fists
adc
mov
fidivl
movsl
popf
cmpsb
jo
mov
inc
fiaddl
cmp
test
cld
push
int3
jnp
outsb
or
iret
xor
daa
jne
mov
ljmp
xchg
add
movsb
sub
and
jne
dec
xor
sbb
outsl
mov
push
dec
shl
insl
stc
mov
testb
jmp
and
adc
aas
scas
lods
daa
mov
icebp
cmp
xlat
lret
dec
mov
pop
mov
sub
pop
arpl
sbb
std
adcb
ffreep
sub
push
fcoms
shlb
cld
insb
rol
push
push
ja
xchg
aaa
push
jp
mov
push
cltd
aam
insl
xchg
call
add
stc
aam
mov
xacquire
xchg
int
lahf
cli
mov
and
idiv
loope
stc
push
adc
jno
push
std
out
add
pop
out
pop
lds
rclb
xor
fistl
add
jb
arpl
inc
shll
inc
mov
mov
lahf
jb
mov
mov
test
outsb
adc
test
cmp
into
sub
insl
or
out
pop
push
cltd
mov
stos
mov
fidivrs
xor
orl
mov
ja
cmp
iret
fstps
ds
and
cmp
xor
sarb
cwtl
stos
cmp
cmpsb
cs
xor
mov
pop
lret
mov
sbb
loopne
mov
in
jb
lock
xchg
jle
subl
enter
pop
mov
pop
pop
scas
pop
and
and
cmp
aad
fldt
fsub
jo
cmp
push
mov
mov
cmpsb
ret
sahf
add
cs
xchg
in
add
test
inc
jmp
cmpsb
mov
aas
mov
int3
sub
clc
add
repz
cmc
loop
dec
outsb
aaa
push
lods
and
xor
jae
les
pop
and
mov
push
pop
mov
pop
mov
mov
push
pop
inc
into
gs
test
inc
movsb
aam
and
ljmp
popf
push
push
outsl
icebp
inc
jns
xchg
in
in
add
pushf
mul
std
sahf
pusha
pop
sbb
das
loopne
mov
es
adc
shll
push
daa
mov
and
dec
mov
aam
ja
mov
push
inc
inc
test
jmp
hlt
pop
int
nop
cmp
jmp
mov
dec
xchg
repnz
nop
aaa
cmc
sbb
dec
rcrb
call
sbb
xchg
mov
cmc
dec
and
xchg
popa
daa
cmp
add
or
add
mov
inc
mov
arpl
sbbl
add
divl
xor
dec
in
pause
pop
fwait
pop
pop
and
fcmovb
mov
push
aaa
sbb
push
std
mov
sbb
sub
jl
mov
mov
jno
xchg
cmc
call
fdivrs
or
xchg
inc
or
repz
pop
push
mov
push
ror
clc
add
xchg
movq
loop
inc
sbb
cltd
sub
aaa
out
in
nop
jne
aaa
les
sbb
aad
mov
jo
arpl
pushf
inc
or
add
xor
pop
dec
dec
out
jl
lret
cli
call
cmc
mov
sbb
pop
jecxz
jbe
push
jle
add
subl
mov
inc
into
add
mov
mov
insb
push
dec
fnsave
pop
mov
out
pop
cmp
in
lea
push
sub
in
and
loop
push
lcall
in
pop
xor
sub
xor
stc
jb
sbb
mov
in
mov
sbb
and
mov
jl
ret
push
fstpl
outsl
pop
inc
xchg
dec
rcrl
and
pop
in
cmp
sub
xor
test
into
enter
add
push
test
xor
pop
push
push
inc
push
fsubr
add
sub
enter
push
fistpll
shrb
inc
sti
lcall
sarl
xchg
cmpl
mov
insb
dec
out
das
cmp
fsubs
shrb
xchg
movsb
lods
sub
push
out
rclb
orb
jns
outsl
pop
fs
loopne
push
dec
sti
mov
xchg
mov
lock
push
adcb
jmp
ljmp
movsb
fwait
or
pusha
push
pop
dec
push
sbb
pusha
ljmp
jle
fiaddl
sub
and
repnz
cld
sub
or
jno
jns
call
fldt
sbb
imul
std
pop
cmp
xchg
je
scas
mov
std
cld
mov
cltd
fcoms
push
out
sti
mov
mov
pop
mov
out
mov
and
jno
lea
in
cmp
and
push
clc
jo
in
arpl
mov
jg
cmp
cmp
sub
cltd
out
cwtl
mov
jne
insl
adc
add
or
and
pusha
outsb
jns
adc
mov
stos
out
sbb
sbb
cli
jno
into
shrb
in
mov
movsl
dec
mov
inc
jp
xor
push
adc
arpl
or
xor
push
cld
rorl
lods
fs
rcl
push
rcl
in
pop
adc
mov
shrl
jbe
jp
int
pop
mov
aas
cmp
jae
mov
stos
push
fnstcw
inc
xor
sub
cmp
enter
lahf
push
leave
jmp
mov
jg
leave
and
push
fsubr
std
iret
mov
mov
mov
addr16
imul
xchg
jp
rolb
and
popa
lahf
lret
cltd
call
xor
adc
xor
push
aam
push
insl
jae
enter
sbb
inc
inc
add
cltd
divb
dec
cs
adc
add
cmp
xchg
sub
inc
sub
lahf
mov
pushf
ret
lret
push
sub
mov
cmpsl
xchg
push
or
cmpl
dec
gs
ret
lds
outsl
sbb
and
push
inc
or
decl
out
xor
sbbb
xor
js
or
sub
movsl
loop
jp
inc
jmp
stos
push
filds
cmp
jl
cmpsl
xor
insl
stos
add
rcll
pusha
add
pop
mov
adc
fwait
in
push
and
adcl
cmpsl
push
pop
loopne
mov
jb
andb
xchg
scas
js
out
pop
sidtl
add
iret
call
fldenv
jnp
out
hlt
mov
adc
incl
inc
loop
pushf
lahf
add
cmp
dec
jecxz
or
xor
add
xchg
nop
mov
pop
xchg
mov
leave
pusha
andl
and
pop
cmp
inc
inc
add
dec
xor
pop
movsl
aam
lea
mov
mov
in
outsl
cwtl
call
lret
pop
psraw
jns
mov
push
adc
dec
hlt
jl
test
jne
in
imul
pop
push
and
dec
in
test
fdivp
pop
xor
shlb
mov
out
ret
rol
subl
cmc
adc
sbb
jp
inc
lods
and
push
fucomi
fimuls
mov
stos
int
mov
repnz
out
ja
je
mov
mov
out
fstpt
push
push
mov
out
adc
lock
iret
xchg
or
fsubrs
adc
xchg
call
push
pop
cmc
dec
xchg
leave
sub
mov
adcl
lret
ljmp
lock
or
cmp
cmp
outsb
leave
lock
dec
pushf
add
push
out
iret
inc
js
inc
lods
mov
fsts
loope
push
sarb
xchg
jecxz
dec
out
fsubr
leave
cmp
pop
add
lret
inc
popa
sbb
jl
dec
push
inc
mov
dec
xor
outsb
daa
lds
xchg
test
adc
jmp
bswap
lcall
jb
clc
jb
js
sbb
mov
or
mov
out
mov
outsb
mov
call
sub
test
into
lds
mov
xor
test
add
test
add
and
mov
and
xchg
push
xor
sbb
lds
mov
mov
inc
not
xchg
lea
mov
dec
mov
push
das
out
xor
cmpsb
push
cmc
rorl
jno
xor
mov
lock
mov
pop
xor
enter
mov
subb
idiv
push
in
and
mov
and
cmpxchg
mov
mov
pop
fnstcw
loope
xchg
in
out
cs
cmp
xchg
jns
mov
roll
in
sub
mov
and
dec
insb
mov
sbbl
in
jnp
or
jle
sti
je
mov
mov
and
hlt
cs
test
and
add
pop
nop
adc
add
loop
inc
cmp
ljmp
mov
cli
add
movl
sbb
fldl
push
idiv
pushf
dec
pop
pushf
add
push
inc
jp
inc
std
mov
adc
pop
sub
test
add
pop
adc
xchg
mov
dec
xchg
mov
cmp
mov
fmuls
xchg
repnz
movsb
jne
adc
loopne
cltd
pop
add
sub
jae
mov
and
jmp
push
arpl
lds
pop
add
ljmp
push
xor
sahf
mov
cmp
shrb
mov
lock
adc
fs
fsubs
dec
dec
push
rcrb
adc
int3
pop
je
dec
pop
sub
mov
jl
jp
es
rclb
in
frstor
retw
loope
pop
or
addl
insb
jmp
jp
mov
aas
popa
push
push
mov
cmp
lods
mov
cmpsb
cld
lea
push
nop
gs
stc
xchg
insb
fstl
mov
push
mov
sub
dec
fimuls
sub
add
fdivs
xor
in
arpl
mov
dec
fnsave
fisttps
nop
sub
xor
es
pop
div
or
push
cmpsb
fstp
xchg
icebp
decl
dec
imul
jecxz
jmp
xor
cmp
dec
cmc
pop
cmp
push
mov
testb
scas
fstps
mov
into
dec
repz
pop
lea
add
lret
pop
pushl
insb
jl
in
mov
mov
mov
mov
mov
push
or
jmp
pusha
mov
dec
dec
push
mov
xor
add
sub
les
mov
jb
test
arpl
fsubs
mov
cwtl
pop
cltd
xchg
std
sbb
push
outsb
jg
aad
js
ja
mov
sub
fcompl
pop
std
sahf
shl
fs
insb
jp
call
pop
imul
out
lds
jmp
pusha
sbb
je
loopne
cmp
cmc
mov
mov
sbb
hlt
in
jp
lds
xchg
inc
fsubrl
cmovl
aam
pop
lods
pusha
push
mov
aad
push
inc
xchg
jmp
out
fwait
and
data16
ja
xlat
adc
adcb
push
xchg
ret
aad
add
push
icebp
dec
jge
aad
fdivrs
and
jecxz
xor
cmp
in
popf
jb
insl
xor
andl
cmp
aad
xor
cmp
scas
xchg
mov
fwait
push
fdivr
divl
inc
xchg
cmp
push
pop
ds
cwtl
jb
int3
loop
pop
inc
in
and
jmp
jb
mov
push
xor
int
sub
lcall
sar
mov
mov
xor
cmpsb
push
cmp
jno
mov
and
scas
cmp
or
push
cmp
lret
jno
pop
in
jnp
xchg
scas
dec
repz
cs
push
leave
stc
add
cli
addr16
inc
mov
xchg
fsubrs
jle
nop
pop
out
scas
filds
xlat
push
mov
fnstcw
movsb
pop
loopne
lret
mov
jmp
aam
and
sahf
orl
or
dec
push
imul
xlat
imull
mov
jae
pusha
scas
cmp
imul
es
dec
pop
push
repz
push
cmp
jnp
sub
ficompl
dec
loop
addb
bound
dec
lret
cmp
xlat
fcmovnbe
jp
lret
orb
mov
xchg
pop
mov
mov
cli
xchg
add
inc
cmpl
orl
adc
ss
mov
clc
stc
cs
vpermil2ps
mov
subb
mov
push
js
dec
mov
add
add
movsl
int3
inc
dec
or
aad
cmp
popf
or
push
lret
push
dec
jmp
jne
pushf
adc
sub
js
inc
jne
mov
jbe
in
xor
fs
and
std
ss
sbb
stc
xchg
dec
push
push
fwait
andl
xor
icebp
inc
inc
bound
add
out
in
rcll
cmp
out
dec
cmp
pop
sbb
shll
andb
or
loopne
or
ret
clc
pop
mov
pop
ss
fistl
sbb
out
lock
xor
jo
into
fcoml
push
test
pop
sbb
das
ret
xor
das
das
addl
insb
arpl
push
jno
xchg
lock
fdivl
shl
mov
mov
xor
mov
pop
push
scas
xchg
or
stc
ret
pop
cmp
andl
fmull
mov
xor
ffreep
pop
mov
xchg
aad
push
in
hlt
push
das
popf
cmp
cmp
mov
push
ds
testb
push
in
add
sbb
mov
add
dec
fstl
fimuls
fdivrs
movsb
andl
imul
mov
gs
sbb
imul
in
add
push
adc
in
sbb
mov
in
jae
mov
xchg
data16
mov
loopne
and
sub
inc
stos
shl
scas
cld
add
lret
aaa
mov
rorb
lcall
dec
add
push
xchg
xchg
pop
in
or
dec
movsb
sbb
jb
pop
xor
dec
decl
mov
stos
shrb
and
loopne
movsb
xorl
mov
pop
sahf
loop
jae
mov
add
orl
out
fidivl
jecxz
adc
popa
or
sbb
sbb
imul
fldenv
pop
leave
or
subl
out
fsubrl
push
stos
lds
adc
jo
xchg
add
or
add
adc
lret
stos
lods
adc
mov
into
rep
sbb
xor
mov
mov
pop
ja
ret
and
dec
cmp
push
int
into
notb
imul
shlb
xchg
clc
jecxz
mov
pusha
adc
lds
lods
pop
jo
outsb
jae
movsl
rcll
sbb
xlat
cmc
mov
jmp
sub
xor
push
cmp
mov
faddl
mov
outsb
and
add
jmp
lret
loopne
mov
je
insl
lahf
hlt
adc
mov
mov
mov
fdivrs
add
subl
pop
xchg
push
xorb
pop
pusha
bound
ss
xor
rcl
inc
mov
cwtl
inc
add
mov
rcrl
sar
mov
ret
push
sbb
jbe
cmc
mov
in
xchg
pop
pop
mov
mov
test
iret
adc
dec
xchg
pop
jo
mov
das
adcl
mov
lods
add
movb
xchg
and
mov
pop
rorl
push
aas
sbb
in
daa
inc
test
cmpsl
dec
jecxz
addl
fldcw
pop
sbb
popf
fisubrs
jbe
mov
pop
pop
and
pop
sub
push
or
dec
dec
dec
jo
inc
inc
dec
lock
xchg
inc
pop
inc
jge
mov
and
pusha
cmp
lret
adc
lods
rorl
inc
add
setns
popf
mov
push
lock
fidivl
lods
repnz
mov
fs
and
popf
push
and
in
or
mov
jg
movsl
daa
sub
lahf
cli
cwtl
aad
sub
mov
lock
mov
ret
mov
call
bnd
sbb
lcall
shlb
out
in
sbb
sahf
mov
pop
cli
mov
jle
pop
xor
xor
add
lea
pop
dec
hlt
inc
cmc
orb
jl
stc
pop
gs
stc
out
add
or
dec
imul
cmp
jg
dec
pop
aam
test
pop
loop
or
imul
xchg
jns
adc
xlat
js
adc
jge
dec
or
mov
imul
mov
push
sbb
or
xchg
in
fcoml
ljmp
addr16
jge
clc
pop
in
jbe
xchg
lcall
mov
mov
xorl
push
cmp
jne
dec
mov
test
mov
int
js
push
mov
lods
cmp
sub
sub
loop
adc
jl
fadd
in
cmp
jle
cld
and
mov
jno
mov
ret
test
loopne
and
notb
sub
push
mov
and
mov
sbb
mov
pop
adc
shrb
cmpsb
fwait
push
gs
clc
shl
fdiv
or
jnp
mov
xchg
cmp
mov
mov
lret
and
pushf
lea
add
inc
ja
pop
ljmp
inc
push
jne
cmp
add
push
lea
in
and
leave
into
mov
sub
popf
mov
adc
in
stos
xchg
in
fsubrp
in
popa
mov
scas
sbb
test
incb
and
call
or
pop
icebp
std
movsl
pop
out
sbbb
and
fidivl
arpl
imul
in
sahf
add
xor
out
dec
cltd
stos
push
lret
subb
pushl
test
adc
jl
mov
scas
push
xor
pop
jno
out
sbb
ret
mov
jl
test
scas
pusha
les
lret
inc
leave
mov
in
or
lret
dec
retw
or
mov
div
xor
sti
mov
lret
and
scas
sbb
dec
jecxz
or
out
int
xchg
insb
jbe
xor
int3
cltd
shrb
popa
push
aad
add
lds
sti
fsubs
mov
inc
outsb
fcmovnbe
jno
dec
xor
and
jne
jbe
ds
cld
and
mov
dec
lods
cmc
outsb
xchg
sub
add
inc
aaa
int
pavgw
adcl
mov
pop
or
jp
or
movsl
mov
and
ret
icebp
xchg
cmc
jmp
mov
add
add
push
dec
popf
add
jp
jle
aad
in
call
int3
int3
push
pop
in
rorl
lret
insl
outsl
xchg
aas
enter
cltd
dec
xchg
cltd
enter
cmp
out
mov
mov
xlat
fnstenv
cld
jge
add
fistpll
xlat
sub
or
push
xor
loopne
scas
cmpsb
mov
lsl
xchg
arpl
push
dec
push
rcl
mov
fs
inc
adc
dec
fadds
and
repnz
push
daa
sub
lods
call
pop
mov
inc
jne
pop
xchg
cmpsl
push
push
pop
pop
adc
in
cmp
fst
pusha
pop
lds
test
movsl
or
dec
inc
mov
cmpsb
mov
shl
rcrl
cld
mov
xchg
and
sub
jae
push
sarl
jnp
jns
xor
dec
mov
setle
cmc
cld
decl
stos
adc
cwtl
fiadds
rcl
loop
inc
inc
ret
loopne
add
or
mov
call
xchg
sbb
hlt
cmc
jmp
arpl
mov
xchg
mov
xchg
jb
icebp
leave
lods
ja
dec
mov
add
imul
fs
cmc
jle
jp
cld
pop
add
imul
cs
mov
xor
sub
jbe
add
outsb
xchg
jnp
into
outsb
xchg
negl
push
cwtl
mov
ror
out
inc
sbb
out
cltd
push
dec
or
in
imul
push
decb
mov
xchg
stos
enter
mov
lea
insb
cmc
dec
incb
jno
int
add
pop
dec
lea
addr16
notb
or
mov
adc
movb
mov
mov
iret
mov
or
dec
mov
pop
adc
pop
stos
mov
push
scas
jbe
fnstsw
xchg
cmp
pop
fiaddl
mov
outsb
inc
sbb
cmp
popf
lcall
idivb
mov
push
fcoml
loope
add
lods
scas
inc
jnp
loope
mov
pop
mov
push
xlat
aaa
cmp
stos
rorb
pop
pop
shl
outsb
dec
loop
pusha
push
leave
repnz
scas
jl
adc
iret
iret
mov
pop
pop
in
lock
or
insl
andl
inc
fidivrs
int3
aaa
lea
pop
out
jb
inc
sub
lds
xchg
dec
clc
and
or
dec
or
imul
pop
or
std
inc
out
add
dec
xchg
pusha
jmp
or
std
add
fdivrs
scas
pop
loope
or
inc
fidivs
push
dec
ss
out
daa
dec
pusha
pusha
adc
mov
inc
repnz
push
inc
push
jmp
and
mov
adc
daa
xor
ret
loope
fsubr
push
dec
inc
xor
shll
test
jns
pop
mov
insb
xchg
dec
sub
loopne
pop
lea
cltd
cmp
mov
jle
sub
call
popa
xchg
add
cmp
in
sub
sub
iret
ficoml
scas
and
push
aad
lret
out
cmc
test
mov
xchg
inc
shr
sub
xchg
pushf
cmc
xor
in
fs
int
insb
sbb
cltd
repnz
test
push
lods
sahf
insl
in
xchg
stc
dec
jbe
cld
lods
int
dec
sbb
rorl
push
adc
pop
xchg
mov
pusha
lahf
pusha
jb
bound
scas
call
lahf
and
cwtl
lret
inc
sub
in
cmp
dec
mov
mov
pop
fwait
cld
loopne
cltd
lcall
inc
xchg
xchg
sbb
mov
call
in
enter
pop
or
bound
faddl
les
adc
cmp
fadd
jge
in
outsl
test
addr16
sub
mov
inc
add
leave
inc
icebp
sbb
fisttps
addr16
mov
fs
jmp
fsubl
gs
in
jmp
repz
mov
xchg
or
mov
mov
andl
mov
cmp
ja
out
imul
and
mov
jb
jp
lods
inc
push
push
shrb
adc
xchg
hlt
adc
ja
js
cmp
pushf
fsubrl
xchg
xchg
mul
add
push
push
jne
inc
ja
fst
mov
mov
and
mov
xlat
imul
xor
addr16
cmpsl
and
lret
add
insb
jne
mov
arpl
pop
cmp
in
dec
ret
cltd
mov
shll
int3
jecxz
adc
mov
push
mov
mov
mov
xlat
pushf
outsl
dec
scas
int
and
or
int3
mov
jle
and
call
in
pop
popf
cmc
mov
aam
inc
data16
adc
insb
fsubs
or
jmp
das
pop
dec
xor
imul
imul
nop
stos
insl
mov
push
jle
cmp
gs
push
pop
cmpsl
test
in
adcl
enter
int3
add
test
or
clc
test
std
xor
jns
bound
push
mov
enter
or
cmp
repz
adc
outsb
mov
add
pop
in
subb
arpl
daa
fisttpl
push
adc
jp
mov
movsb
adc
push
xor
icebp
dec
imul
sub
xchg
movsb
ljmp
jns
pop
cmp
mov
mov
inc
and
xchg
inc
test
cmp
push
mov
sbb
push
adc
sub
mov
pushf
stc
jbe
int
int
std
lret
cmp
negb
sub
mov
push
mov
inc
test
push
adc
or
or
das
inc
pop
ss
push
adc
xchg
and
sub
and
inc
sbb
xor
lods
std
outsl
add
add
xchg
mov
add
lock
adc
add
popf
pop
push
pop
sub
fwait
insl
mov
mov
cmp
loop
ss
mov
xchg
sub
loope
push
imul
lahf
adcl
mov
jb
loop
out
pop
mov
repz
lcall
cmp
sub
ja
data16
cmc
daa
cmc
and
out
aad
fstp
mov
out
cmpsl
divb
mov
add
outsl
addr16
repnz
jbe
add
push
lods
sub
dec
dec
xor
or
sbb
shll
fisubrl
xor
mov
pop
xchg
rcll
sbb
mov
mov
lcall
sti
and
fwait
mov
or
mov
xchg
sti
jle
pop
cld
ds
flds
cld
jl
aam
lret
add
inc
loop
aas
push
shl
sbb
adc
jle
aad
outsb
in
pop
loop
mov
mov
adc
jbe
dec
mov
popl
leave
mov
ljmp
hlt
out
xor
cmp
cmpsb
dec
scas
and
push
mov
jo
cli
cmp
loope
je
test
repnz
sti
and
jbe
rcrb
loope
int3
aam
js
or
call
pushf
xchg
aaa
ss
and
inc
daa
add
shlb
push
fists
sbb
iret
and
cmpsl
std
sbb
fs
adc
cmpsl
mov
stc
add
sbb
shll
xorb
nop
gs
mov
inc
fnstcw
mov
cmpsb
movsb
leave
mov
loope
mov
adc
ret
aas
popf
pop
test
dec
loope
outsl
lahf
negl
mov
imul
aam
cmp
pop
cmp
fstpt
dec
outsl
popa
sbb
push
ljmp
inc
cmp
in
adc
loope
mov
xchg
cltd
sbbl
out
inc
push
fldl
shrl
mov
stc
mov
xor
arpl
popa
pop
dec
push
mov
jne
sub
insl
dec
jns
jecxz
cmpl
jecxz
xchg
or
adc
addr16
shrl
es
xchg
fisttpl
and
xor
sub
mov
add
je
add
cli
lcall
das
fmuls
adc
inc
enter
pop
sub
fcompl
lods
or
les
push
loope
or
mov
jnp
inc
xchg
add
mov
mov
in
jb
push
or
sti
pop
adc
fldl
push
xor
xor
xor
pop
shll
or
xchg
andl
dec
pop
stc
test
int3
into
sti
gs
jae
add
lcall
shll
loopne
jb
xchg
lret
push
outsl
loope
xor
rol
push
sub
mov
xchg
pop
ds
cmp
adc
in
dec
and
dec
mov
mov
adc
xchg
cltd
in
inc
pushl
movzbl
mov
lret
xchg
or
or
popf
fnstcw
mov
or
dec
jecxz
pop
cmpsb
xor
test
cmovl
xchg
cmp
mov
ds
pop
pop
pop
dec
test
add
cld
mov
sbb
std
jp
sbb
pop
mov
inc
or
mov
inc
or
je
sti
inc
mov
pop
xor
sbb
ficomps
jne
mov
in
adcb
lea
cmc
push
hlt
aam
add
imul
adc
dec
lock
adc
aam
pop
xor
pop
dec
test
and
sub
push
popa
add
in
jns
push
idivl
stos
jl
cs
sbb
fs
ret
movsl
add
js
push
rolb
inc
mov
jns
mov
cmp
sub
sbb
addr16
mov
imul
lea
push
lods
add
mov
fcmovu
in
movsl
test
xchg
repz
xchg
xor
test
push
cmpsl
lahf
mov
hlt
shrb
test
out
call
sub
xlat
push
push
push
gs
sbb
rorb
lahf
adcl
sbb
pop
in
cmp
or
sub
cld
adc
int3
jae
inc
inc
push
into
and
aaa
push
mov
sti
adc
lret
sbb
hlt
sbb
mov
push
decb
cmpb
cli
faddl
xchg
fistpll
push
mov
js
push
test
ljmp
xor
adc
and
jno
sbb
setbe
testb
inc
lods
push
cmp
xchg
ja
sub
lret
push
out
jbe
outsb
mov
lods
aam
mov
lret
aas
sbbb
cmpsb
into
dec
iret
cltd
in
mov
sbb
lods
push
and
ffreep
in
pop
or
jne
out
push
enter
lea
jb
xorb
xor
test
scas
pop
aaa
inc
cltd
pop
movsl
shll
jle
insl
push
lds
push
push
and
sub
or
scas
loope
enter
sub
out
out
or
mov
out
pop
push
sbb
pop
push
pop
mulb
shll
mov
adc
aaa
jns
lods
icebp
je
push
cmpsl
push
cmp
xchg
mov
sub
mov
insl
roll
pop
scas
adc
rcll
int
ljmp
es
incb
xor
out
je
dec
xchg
mov
adc
scas
mov
mov
jne
lods
flds
xchg
or
add
lret
and
out
pushl
outsl
adc
lcall
test
lret
add
mov
and
int
cmpsb
gs
scas
stos
xor
xchg
adc
mov
and
jecxz
clc
xchg
or
xchg
cli
aaa
adc
xor
lock
pop
push
mov
or
arpl
push
cmpsb
dec
jle,pt
cmp
ret
or
mov
or
pop
add
outsb
test
add
out
cs
jae
sahf
mov
dec
loope
adc
sub
xchg
andl
fucomip
mov
mov
pop
arpl
lcall
push
mulb
jnp
xchg
xchg
std
dec
cmp
sti
cmpsb
icebp
push
popa
jmp
push
xor
lock
iret
fs
ret
jmp
outsl
jns
arpl
pop
jg
jbe
mov
pusha
fiadds
mov
mov
cmpsl
scas
leave
xchg
cmc
cmpsl
es
das
lea
xor
inc
imul
mov
inc
mov
cmp
push
or
scas
dec
imul
in
sub
add
gs
jl
jnp
push
pop
jne
mov
sub
push
pop
addr16
mov
sub
mov
jb
aaa
xchg
bound
jge
xor
outsl
inc
fbld
cmp
add
mov
scas
push
jle
aam
mov
out
sub
popa
or
cwtl
sub
adc
mov
or
add
mov
sbb
stos
push
pop
hlt
sbb
orl
push
cli
cmp
mov
push
fidivs
lahf
mov
lods
or
daa
jns
arpl
cli
push
arpl
xor
pop
xchg
mov
sbb
out
pop
sub
repz
fisubs
cltd
ds
popa
icebp
sub
push
adc
push
test
jg
call
test
jb
mov
add
sbb
nop
jmp
mov
jg
push
push
jg
inc
aam
cwtl
xor
ret
inc
adc
loopne
pop
inc
xor
jge
add
sub
popl
jns
pop
pop
xor
outsl
sbb
mov
add
add
mov
xor
jns
call
mov
push
lea
add
popf
and
cmpsl
mov
xchg
pop
f2xm1
insb
inc
lock
sarb
sub
adc
inc
std
inc
fwait
mov
bound
push
imul
jle
fnstcw
insl
shll
movsb
lret
lds
test
jg
lods
scas
repz
aad
cmp
push
xor
repnz
xchg
cmp
fst
inc
sbb
cld
and
pop
fisubl
jl
push
out
mov
adc
ja
and
es
leave
into
inc
icebp
cwtl
mov
mov
mov
push
adc
adc
cmpsb
fstpt
sarb
ljmp
mov
idivb
sarb
and
aam
out
pushf
push
sub
fmuls
lock
mov
push
cwtl
dec
into
notb
clc
out
into
stos
cmpsb
mov
mov
fisubs
xchg
xor
loop
pop
mov
ds
add
aam
cmp
fs
mov
fwait
insb
pop
in
jge
ret
add
sbb
cmpsl
adc
fildll
and
or
xor
jmp
pop
sub
sub
inc
xchg
xchg
das
sbb
fidivrl
push
movsl
mov
fstp
push
iret
push
repz
or
or
cmp
xchg
adc
sub
fsubrl
push
rcll
dec
and
rcr
push
jecxz
inc
cmpsb
rol
push
pop
std
xor
xor
push
icebp
push
inc
mov
stc
mov
aaa
mov
test
and
pop
push
jmp
shl
bound
outsb
mov
mov
mov
or
pop
imul
cmp
pop
shl
add
lods
addb
mulb
aas
fs
mov
ret
sarl
mov
daa
test
outsb
push
push
xchg
loope,pn
xor
mov
jle
loop
das
outsl
jle
sbb
in
dec
jns
out
add
jle
test
sbb
fwait
inc
vpaddsb
sbb
mov
jmp
mov
inc
add
mov
and
in
mov
mov
ss
jle
pusha
loopne
push
inc
jnp
jecxz
xchg
or
ja
shll
lock
out
dec
adc
ficoms
js
xchg
andl
adc
sbb
popl
xlat
je
mov
dec
jmp
xchg
dec
pop
adc
daa
das
xor
xchg
icebp
cmp
cmp
or
and
es
and
or
pandn
mov
addb
adc
movsb
insb
cmp
sbbb
pop
mov
sbb
aam
lea
out
mov
and
add
aas
notl
lds
and
jecxz
pop
lcall
adc
jecxz
mov
inc
inc
jle
jmp
push
adc
out
call
push
or
inc
sub
xchg
fsubl
xchg
jns
sbb
icebp
daa
int
inc
cmp
jge
cltd
jp
movsb
jo
scas
addb
cmp
and
jle
not
cmp
or
mov
call
xorl
sbb
nop
jp
repnz
jae
sub
movsb
jb
sarl
rorl
mov
repnz
pop
dec
adc
lea
pusha
shll
fcmovnbe
jmp
test
outsl
mov
test
gs
loope
mov
mov
lods
xor
mov
mov
mulb
adc
pop
and
es
fimull
int
pusha
leave
jmp
inc
jnp
sbb
das
leave
mov
popf
jp
aaa
add
or
mov
std
mov
push
ss
subb
stc
insl
inc
sbb
and
aad
add
xchg
cmpsb
adc
dec
popl
cmp
add
dec
fwait
sub
test
mov
cmp
push
sti
dec
sbb
mov
nop
loop,pn
or
sbb
sbb
lods
int3
sbb
or
push
sub
aad
push
cmpsb
jl
sub
pop
sub
dec
jmp
and
xchg
push
iret
xchg
outsl
loop
sub
mov
jge
push
ljmp
mov
xor
pop
imul
sub
popf
clc
add
adc
in
jb
call
and
icebp
fidivl
rorb
sub
inc
ljmp
xor
mov
push
std
repz
cmp
xchg
xor
and
test
call
mov
xor
cmpsb
call
xor
cmpsl
in
cmp
push
adc
mov
push
jb
mov
mov
fwait
movsb
or
lods
pop
mov
xor
xchg
pushl
out
sar
push
std
xlat
out
adc
and
popa
inc
insl
and
or
call
loope
xchg
push
das
or
sbb
movsb
movsl
cmp
gs
push
push
mov
jmp
dec
in
enter
xchg
pop
sub
pusha
mov
sbb
sub
mov
in
xorb
xchg
and
jae
jl
stc
xor
mov
push
sbb
or
cmp
and
xor
inc
addr16
and
loopne
sahf
mov
fwait
arpl
sub
pop
push
nop
outsl
push
mov
sub
iret
dec
stc
clc
dec
clc
add
jmp
sub
insl
adc
push
sahf
push
or
cmpsl
pusha
push
stos
and
or
aam
pop
ss
ja
in
cmpsb
jnp
or
imul
arpl
and
loop
mov
es
xchg
setg
shl
addl
pop
sbbb
sbb
jle
cmp
jecxz
add
mov
and
sbb
jne
fiadds
scas
jnp
dec
ret
xchg
fadd
ret
xchg
sbb
push
loopne
daa
jl
sub
cmp
mov
in
xor
aas
xchg
mov
push
lea
lock
xchg
xchg
adc
das
dec
add
and
push
push
mov
pop
js
or
ss
movsl
testl
les
cmp
jne
ljmp
in
sbb
add
int
into
clc
aad
fstpt
popf
jbe
jae
mov
pop
inc
jmp
dec
cmp
xchg
dec
mov
inc
add
lret
loopne
pop
jmp
add
inc
dec
sub
add
or
sbb
sub
cmp
repz
pop
test
cmp
ret
or
lods
mov
adc
out
outsb
gs
sahf
or
pop
pusha
dec
lds
jb
or
add
xchg
or
jb
inc
ficoml
aaa
pop
xchg
mov
or
dec
mov
adcl
ljmp
shr
or
mov
cmp
mov
test
fwait
pop
jmp
arpl
ljmp
push
or
pop
std
xor
xor
jns
aaa
iret
ret
orl
shll
loopne
sub
adc
leave
or
addb
lret
inc
cmp
into
xor
fadds
movsb
test
arpl
add
nop
mov
adc
xchg
cwtl
mov
jg
call
lock
adc
cs
mov
sub
sbb
rcrl
lcall
in
pop
mov
lock
scas
icebp
cwtl
dec
mov
test
imul
int
mov
push
jae
cmc
xor
lods
push
cli
aaa
stc
mov
sbb
mov
cmc
out
jg
insb
cs
out
adc
jmp
out
jecxz
inc
lods
mov
imul
imull
andl
push
push
les
dec
mov
pop
pop
jo
mov
jmp
xor
mov
mov
or
add
pop
push
fstps
out
mov
jle
mov
jge
mov
pop
insb
outsb
enter
jle
and
shlb
popa
jmp
sbb
scas
fstps
cmpb
sub
adc
lahf
mov
cs
in
mov
sub
sbb
daa
lods
dec
inc
ficoms
inc
std
mov
cltd
loope
hlt
inc
or
and
cmpsb
push
dec
push
fs
lock
sarb
lock
pop
aaa
cltd
int
mov
jp
sbb
push
scas
mov
and
adc
pop
hlt
add
sbb
outsl
sub
and
adc
sub
test
cmpsl
aam
ret
outsl
dec
testl
or
into
out
sbb
imul
in
jnp
das
out
jp
pop
mov
jp
shll
push
fwait
cmp
filds
out
js
repnz
adc
xchg
ret
lea
mov
mov
fwait
mov
jmp
out
sbb
push
add
mov
jle
testl
mov
mov
fnsave
pop
push
mov
adc
loope
xchg
jle
mov
push
dec
outsb
cmp
divb
dec
and
xchg
adc
mov
outsb
jae
dec
ficomps
dec
cmovno
sbb
sbb
push
cs
pushf
sub
pop
push
push
pop
loope
pop
mov
fcomp
movsl
xor
dec
push
rol
sbb
adc
sbb
aad
push
es
imul
aaa
cmp
adc
adc
push
cmp
mov
dec
lods
fwait
lea
jns
mov
aam
xorl
mov
in
bound
add
cld
lcall
out
cmp
ja
mov
icebp
movsl
gs
std
push
mov
mov
and
cltd
loop
push
flds
clc
mov
xor
in
cmp
test
cmp
loop
outsb
mov
jmp
inc
imul
xchg
sub
mov
or
pusha
negl
sti
xchg
xor
and
push
sub
xchg
add
ror
mov
inc
into
inc
xorl
iret
xchg
and
loope
test
lds
enter
lods
pushf
lock
inc
sub
xor
lods
xor
cmp
lods
mov
jb
jb
jnp
int3
jbe
inc
orps
fldt
adc
push
int
xor
and
push
xchg
mov
daa
mov
sbb
pop
lea
dec
fisttpl
lock
cmp
adc
mov
jnp
sarl
int
xchg
ljmp
mov
repnz
incl
js
push
test
daa
mov
sub
jle
pusha
loop
adc
loop
jae
not
mov
dec
sub
sbb
ljmp
into
dec
jg
push
mov
mov
lret
adc
rcrl
jo
pop
mov
push
and
xchg
enter
lods
adc
loop
push
jne
dec
gs
push
scas
pushl
or
int3
mov
mov
mov
ret
mov
add
cmp
stos
dec
push
lahf
stos
pop
mov
push
sbb
cmc
dec
test
fmul
pop
cmp
cmp
lcall
pop
mov
rcrl
push
scas
inc
ja
mov
pop
mov
sbb
jne
aaa
jecxz
es
push
pop
cwtl
mov
cmp
iret
int3
filds
cmp
loope
cmp
xchg
ret
xor
mov
mov
popf
es
addr16
mov
lahf
jmp
testl
or
in
pop
mov
mov
jmp
push
xor
or
outsl
dec
stos
dec
clc
xchg
sub
data16
testl
mov
jne
jmp
add
enter
xchg
cmp
int3
test
cmpsb
loope
aam
ret
out
sti
inc
cld
rolb
cli
daa
shr
sub
iret
mov
add
idivb
jecxz
loopne
push
adcl
dec
fistl
cmp
loopne
add
add
icebp
mov
mov
sub
mov
fists
push
dec
jl
or
fidivrs
test
testb
popf
pop
jecxz
dec
ds
fldcw
cmpsb
lds
and
jge
hlt
jbe
clc
pop
test
enter
jo
xchg
adc
mov
adc
push
fldcw
out
jecxz
int3
movsl
pop
mov
aas
cld
ret
subl
mov
shll
iret
rorb
cmp
xor
in
out
dec
popa
shr
gs
xchg
notl
dec
dec
stos
mov
adc
xor
rolb
movsl
shl
pop
mov
fwait
adc
mov
into
pop
dec
xor
cmp
and
mov
mov
sbb
or
xchg
jge
js
adc
lahf
xor
cmp
xchg
cmp
popa
outsb
jne
fwait
jge
sbb
fs
mov
ffree
cmp
sbbb
lahf
xor
sbb
inc
outsl
pop
jle
and
and
inc
or
pop
pop
loope
gs
nop
jno
xor
hlt
sbb
jbe
inc
mov
repz
loope
mov
lret
test
xchg
mov
and
push
xlat
sbb
fst
sbb
mov
lahf
scas
push
daa
sub
cwtl
fs
sbb
test
pop
aaa
inc
aad
andb
aam
ds
out
mov
jns
and
fdivl
ss
cs
cmp
sbb
lahf
popf
addr16
mov
in
fistps
push
add
sub
xchg
jecxz
shrb
imul
add
mov
arpl
shl
push
imul
xor
and
cmp
stos
push
cmp
xor
pop
in
lahf
jo
push
cmp
ja
xorb
fidivrl
cmp
lret
and
icebp
or
dec
imul
push
loope
pusha
add
and
and
jmp
mov
mov
rcl
add
hlt
sarl
les
cmp
cld
imul
les
and
sub
movups
cmpl
xlat
sub
xor
sub
and
adc
addr16
stos
mov
dec
inc
into
movsl
mov
adc
sub
dec
in
mov
clc
lods
or
aad
jne
fucom
mov
stc
jl
fisttps
ficompl
das
and
dec
jbe
or
inc
sbb
push
out
jb
push
inc
or
loope
push
rcll
pop
xor
adc
addr16
inc
fwait
or
pop
rcrb
mov
test
daa
pop
in
cmp
pop
push
jle
popf
mov
popa
fmul
outsl
push
fldt
and
out
push
sbb
sbb
adc
mov
insl
enter
leave
bound
push
jno
xor
cmpsb
subb
loope
int3
jae
fiadds
mov
sbb
add
push
mov
repnz
aam
adc
imul
inc
repz
in
xchg
xchg
push
pushf
push
sub
jnp
in
andl
lret
adc
jle
mov
mov
sbb
sbb
out
iret
scas
lock
add
mov
jge
push
in
pop
cmp
loopne
ds
inc
aas
leave
adc
mov
add
mov
push
or
lods
or
mov
outsl
in
arpl
xchg
es
out
mov
mov
int3
jmp
lahf
fldpi
pushl
xchg
xor
sub
fisttps
enter
jmp
xor
push
mov
pop
out
int
popf
js
jge
imul
sub
fsubrl
popa
or
pop
js
pop
mov
mov
dec
lcall
pop
stc
xchg
jae
inc
pushf
pop
pushl
sub
cmp
push
push
or
imul
and
in
cmp
pop
pop
enter
push
lods
arpl
fbstp
mov
xor
dec
push
adc
pop
ja
xchg
insl
pop
scas
lds
aas
or
mov
lds
test
outsl
call
popf
add
sbb
aaa
sbb
sub
es
das
mov
xchg
insl
mov
cmp
adc
js
dec
inc
mov
sti
mov
mov
inc
adc
cmp
pop
or
stos
push
xor
push
mov
test
inc
fisubrs
sub
int
cmp
mov
and
daa
lds
out
dec
lods
and
mov
adc
jno
mov
loopne
insl
add
or
lds
arpl
cmp
pop
fcomi
jl
jmp
xor
out
jge
lock
mov
xchg
mov
fscale
push
mov
jno
sbb
xchg
call
push
mov
int3
jp
iret
cltd
outsl
jl
popf
cmpsb
pop
mov
and
mov
lcall
mov
jge
movsb
icebp
scas
push
fistpl
fwait
xchg
jle
mov
mov
xor
and
push
jp
add
js
lcall
loopne
jmp
sub
ss
bound
inc
jmp
fcmovne
sbb
sbb
push
pop
jno
pop
and
repz
iret
mov
mov
repz
push
hlt
jnp
das
jbe
mov
cmpsl
sub
sti
sub
sbb
inc
xor
lret
add
repnz
mov
test
add
inc
fidivs
je
fsts
sti
lret
or
insb
or
xchg
insb
int
adc
ljmp
rcrb
popl
lret
in
idiv
data16
cmp
mov
mov
dec
mov
pop
cmovbe
das
jno
add
nop
lret
push
outsb
mov
xchg
sub
inc
arpl
mov
pop
push
or
call
or
pop
xchg
es
jno
int3
rclb
sbb
ret
frstor
arpl
xor
popl
adc
rolb
lock
push
nop
pop
xor
push
xchg
into
sub
cmp
pop
and
lock
xor
cs
leave
pop
je
mov
mov
jo
cmpsb
dec
test
inc
sbb
ljmp
rdtsc
jnp
pop
pushf
fstpl
xchg
iret
sbb
cwtl
jmp
add
add
pushf
dec
sbb
das
xchg
sub
jnp
dec
mov
push
jecxz
in
and
add
rcrl
imull
mov
or
test
in
add
and
in
js
cmpsb
mov
jae
inc
out
mov
jns
ja
sub
and
add
and
testb
xchg
xchg
aad
fdiv
sub
rcl
stc
mov
outsw
jns
loope
rclb
push
shrd
pop
jecxz
jl
shll
out
sahf
es
pop
dec
lcall
or
leave
mov
leave
pop
push
add
mov
fnsave
insb
lahf
int
dec
mov
and
lods
push
xor
pop
push
mov
test
inc
cwtl
movsl
int3
or
push
push
xor
lret
cld
clc
sub
jbe
xlat
mov
jmp
push
in
mov
cmp
mov
pop
dec
arpl
jmp
ss
pop
dec
mov
xor
aaa
test
cwtl
inc
andl
test
xor
cli
push
ljmp
jns
sti
and
xchg
xor
rclb
lock
or
in
push
paddusb
mov
std
leave
mov
hlt
fbstp
mov
jl
add
outsl
cwtl
push
xchg
jge
sub
stos
test
rcl
into
bound
bound
and
lahf
aam
sahf
xor
cld
rcrl
sbb
ja
iret
jnp
sarl
stc
sar
jp
or
insb
hlt
or
pushf
aam
ror
pop
pop
lods
mov
popa
scas
cmpsl
jae
mov
lods
pop
ljmp
adc
out
xchg
call
imul
mov
push
dec
nop
out
pusha
ss
dec
dec
mov
or
sub
jp
xor
lock
fxch
shrb
les
pop
arpl
iret
jg
ret
sub
pop
mov
xor
leave
in
js
and
push
mov
sti
ret
pop
mov
xor
imul
xchg
mov
xor
mov
inc
imul
idiv
inc
mov
int3
test
xchg
jnp
jae
mov
mov
aad
or
lcall
fistps
push
and
popa
cmp
cmpsl
popf
pop
push
and
rol
fsubrs
push
pop
xor
and
jns
pusha
aad
sbb
jnp
mov
mov
sahf
xlat
dec
das
rorb
arpl
stos
int
insl
dec
add
xor
rcr
xchg
mov
mov
call
jle
cmpsl
xor
sbb
mov
push
cmp
and
inc
mov
mov
ret
lea
and
add
jg
jmp
and
adc
pop
or
and
or
popa
loop
cmc
jnp
mov
lret
pop
js
lds
xchg
mov
push
push
mov
imul
mov
xchg
xchg
jno
imul
out
inc
dec
push
in
mov
stc
mov
in
jne
fs
xor
je
inc
rclb
cltd
loop
bound
in
mov
push
or
icebp
mov
nop
cld
push
lock
inc
test
es
stc
divl
jae
xchg
imul
push
add
add
and
xor
cmpsb
int
push
arpl
popf
sub
mov
adc
jnp
push
pop
pop
adc
and
aaa
jmp
andb
in
jns
pusha
stc
sub
lcall
outsb
dec
pop
cmp
inc
iret
pmaxub
pop
or
sarb
int
pop
adc
mov
in
frstor
jb
sahf
test
or
add
jns
cmp
xchg
call
test
sbb
or
shrl
pop
jns
jne
lods
mov
add
or
lods
cmpsl
int
cmpsl
cmp
idivb
adc
lods
pop
xor
mov
loopne
xchg
dec
push
lcall
mov
cli
push
jp
fmull
cmc
sbb
stos
aas
xchg
xlat
push
cli
lret
ljmp
cmp
mov
fwait
dec
xchg
dec
and
mov
xchg
scas
xlat
sbb
inc
dec
mov
int
xor
loop
push
movsb
out
adcl
push
or
mov
mov
sub
mov
adc
jmp
inc
dec
in
and
xchg
mov
xlat
cmp
add
popf
adc
and
jle
sub
ret
and
mov
ljmp
popl
jo
test
push
xor
inc
jmp
inc
in
push
arpl
add
js
ljmp
and
imul
test
iret
fst
cmp
imulb
mov
mov
or
ficompl
stc
jl
cmpsw
mov
dec
push
out
inc
daa
sub
lods
mov
cwtl
ds
lock
mov
sar
mov
xchg
in
aas
adc
repnz
inc
in
inc
dec
xor
push
add
xchg
out
icebp
push
fmul
out
gs
and
ret
das
imull
adc
dec
dec
das
in
enter
shl
lret
loope
mov
sub
push
mov
sub
arpl
sbb
imul
fsubs
adc
fbld
and
xchg
and
into
popa
cmp
pop
and
inc
mov
xor
jae
leave
adc
loope
test
aad
jno
xor
in
inc
inc
adc
sbb
cmc
cmp
dec
pop
jecxz
jmp
jne
out
in
ret
inc
cmpl
repnz
enter
sahf
icebp
mov
pop
or
push
adc
push
xor
pushf
popa
clc
mov
les
std
mov
stos
jne
push
add
and
pusha
or
lods
push
lods
insb
adc
into
sti
mov
mov
mov
loopne
iret
fs
popa
dec
sbb
or
fucompp
pop
jmp
sub
out
mov
xchg
sub
in
sub
out
pushf
jns
adc
dec
stos
mov
add
cmp
and
out
bound
ljmp
mov
push
adc
pop
movsl
hlt
xor
gs
fisubrl
leave
lods
outsb
repnz
jbe
ljmp
pop
sbbb
test
out
leave
cmp
pop
out
cld
repz
repz
out
mov
cmpsl
mov
mov
xchg
dec
pushf
xor
inc
mov
mov
in
cwtl
nop
std
scas
test
cmp
add
icebp
xor
sahf
lea
std
push
stc
and
dec
into
xor
fbstp
inc
lea
mov
movsb
add
jecxz
mov
rorb
inc
outsl
mov
jmp
cmp
inc
aad
cpuid
add
push
xor
mov
xchg
jo
jne
int
gs
in
mov
xchg
or
je
push
sarl
xchg
add
test
lea
movsl
movsb
idivb
int3
ds
out
call
sarl
xchg
cmp
xlat
insl
inc
sbb
jns
lret
fstps
hlt
gs
push
out
movsl
lret
mov
adc
lods
shr
xor
movsl
fisubrl
fisttpll
mov
ds
add
sub
push
push
mov
imul
aad
jb
pop
loop
rclb
mov
fucomi
dec
cmp
pop
xchg
shrb
sub
sahf
pop
or
add
leave
mov
cmp
jecxz
pop
jg
dec
xchg
dec
fwait
or
jne
xor
push
addr16
xor
dec
jae
mov
push
bound
mov
xchg
movsb
push
bound
fnsave
lods
push
xor
jb
int
aaa
mov
xchg
mov
inc
arpl
imul
iret
dec
lret
add
cmp
jae
lods
je
cltd
hlt
mov
lcall
mov
or
mov
adc
dec
ljmp
insl
and
movsl
cmpsb
sti
sbb
loope
or
mov
cwtl
jbe
sbb
jns
sahf
sar
gs
ret
or
add
pop
addr16
adc
mov
dec
es
arpl
xchg
mov
lret
pop
push
aad
js
in
xor
mov
movsl
loopne
scas
sub
adc
dec
push
fisubrl
push
jno
mov
lock
xchg
sub
aam
mov
pop
in
jne
addl
adc
xchg
dec
leave
scas
popf
cs
cli
aam
dec
add
sti
enter
push
sub
add
call
test
push
outsl
vpunpcklwd
cmpsl
jle,pt
stos
sub
scas
cmp
sub
jl
xchg
test
xorb
mov
aaa
jo
jecxz
outsb
add
mov
out
sbb
mov
mov
sbb
or
mov
dec
js
in
cli
inc
cli
int3
rcr
cmp
aas
mov
mov
cs
adc
testb
jo
fwait
pusha
repnz
xor
aad
repz
arpl
test
pop
mov
cli
cld
sub
and
repnz
pop
or
adc
sbb
inc
lret
aam
xchg
pop
jecxz
push
icebp
xchg
nop
repz
dec
es
loop
mov
mov
jmp
ret
cwtl
mov
fnsave
inc
cmp
das
leave
mov
xchg
int3
das
test
test
dec
push
push
scas
adc
or
roll
pop
cwtl
sub
push
inc
xchg
mull
in
test
dec
sub
mov
mov
in
loope
adc
test
and
adc
lock
unpcklps
fldt
or
or
les
adc
cli
mov
data16
movsl
es
mov
jg
or
jecxz
call
or
in
sub
jmp
xchg
roll
xor
xlat
cli
cmp
add
and
mov
jns
jno
inc
aad
cwtl
testl
aas
fnsave
xor
scas
shlb
mov
mov
xor
lcall
push
testb
sbb
test
xor
bound
je
xchg
scas
xchg
cld
mov
jne
xor
cmpsl
xor
mov
in
cs
xchg
ja
push
mov
push
and
and
mov
ds
lea
bound
inc
cmc
in
leave
fstps
outsb
roll
jg
imul
inc
fwait
jg
xchg
push
call
mov
fisttps
stos
sbb
adc
jmp
xchg
xchg
and
out
adc
ljmp
repnz
xor
addr16
mov
xor
fnstsw
fstps
xor
cmpsl
add
scas
cli
lds
add
sbb
xor
dec
imul
or
lea
test
inc
and
push
mov
adc
adc
adc
jbe
out
or
lahf
pop
shufps
and
scas
psrld
popf
popf
push
stc
push
lock
mov
xchg
ret
sub
mov
in
xor
adc
cmp
cmc
adc
pop
jge
push
mov
cmp
pop
dec
mov
jne
movsl
and
dec
lret
add
push
icebp
mov
adc
xchg
mov
inc
lret
push
fisubl
or
in
xchg
int3
jl
sub
fmull
add
shll
pop
xor
repnz
in
jae
and
ret
outsl
sbb
das
sbb
div
ja
loope
mov
jg
cld
xor
lahf
popa
rcrb
sbb
inc
and
pop
cmp
jge
and
fsubr
adc
pop
pop
stc
loop
dec
push
roll
ds
popa
push
inc
lret
loop
xlat
push
cs
dec
ror
xchg
addb
pop
js
inc
pop
daa
xchg
cltd
in
mov
jge
dec
lret
call
mov
rcll
sbb
push
ja
iret
subl
lahf
mov
shll
mov
xor
fildl
mov
and
jnp
fldt
in
stos
out
test
xchg
xor
es
cmc
jl
addb
pop
xchg
cmp
xlat
fwait
cmpsb
and
sub
cmp
xchg
sub
enter
xchg
lods
lods
sbb
dec
cmp
jmp
mov
les
fiaddl
and
jmp
push
push
stos
sub
pop
out
cmp
push
jg
xor
sub
sbb
lret
pop
imul
add
arpl
add
repnz
and
in
outsb
push
test
add
enter
push
out
xchg
loopne
test
scas
repz
inc
jl
adc
jno
lcall
dec
dec
aaa
icebp
pop
push
ret
out
mov
xor
movsl
sbb
iret
in
lods
xor
push
mov
adc
loop
loopne
outsl
iret
add
or
in
inc
out
mov
inc
mov
add
fisubl
shlb
jecxz
test
inc
pushf
jp
test
dec
mov
mov
adc
insl
imul
daa
fistl
mov
xor
sub
in
mov
jb
rolb
call
push
mov
mov
ss
insl
jo
or
int3
call
jg
stc
lods
jmp
lods
pop
sbb
sbb
pop
push
pop
sub
ficompl
adc
cld
and
mov
xchg
dec
sub
add
pop
cmpsl
into
add
mov
sub
insl
ret
mov
dec
mov
les
push
cmp
mov
leave
cmp
iret
mov
jne
clc
jge
popa
sub
lret
lcall
dec
cmp
ret
test
sub
in
popa
xchg
push
cmc
and
popa
mov
sahf
dec
clc
rcll
or
xchg
cld
add
push
dec
jnp
lods
mov
in
cmc
cmp
xor
xchg
cmp
nop
pop
lahf
fcmove
xor
loope
data16
bound
hlt
and
fs
je
push
fsts
xor
loopne
mov
sbb
mov
movsl
subl
fiaddl
scas
insb
out
rorb
out
push
clc
outsl
push
jecxz
ja
roll
aad
add
jl
inc
jg
add
testb
push
dec
and
xor
popw
xchg
dec
fidivs
and
mov
imul
es
push
ss
insb
sbb
gs
xor
and
xlat
jp
sub
add
movsb
push
ja
and
mov
vshufps
inc
dec
cmpsb
scas
push
mov
mov
cmp
pushf
xlat
iret
frstor
loop
mov
lahf
movsb
lcall
add
es
cmovg
in
inc
add
dec
cmp
jg
gs
ret
xchg
clc
xor
loope
inc
out
push
cld
jmp
cmc
lock
pusha
add
insl
xchg
jl
das
fsubs
repnz
bound
in
mulb
push
jecxz
iret
cmp
or
pop
lcall
les
and
adc
add
aaa
imul
lea
push
addr16
push
xchg
push
sbb
cltd
dec
out
sti
aaa
out
loope
and
jo
jno
dec
popa
fildll
push
cmc
fcmovne
xlat
pop
add
aad
mov
ret
push
push
addl
push
push
jge
sub
push
cmc
push
fdivs
inc
or
sti
mov
mov
testl
adc
aam
xchg
push
pop
aad
push
fcmovb
push
in
xor
enter
sbb
pop
call
repnz
ud2
cmp
mov
pop
xchg
dec
fnstcw
sbb
je
xor
fcmovne
cwtl
stos
jmp
xor
mov
xchg
mov
lds
push
std
adc
sbb
cli
test
add
sbb
pop
push
out
and
outsb
rcll
andb
ds
lcall
sbb
xchg
shlb
out
cmpsb
pop
inc
cmp
repz
lods
movsl
cmpb
cmpsl
and
inc
and
mov
mov
aas
repz
out
jne
and
adc
xor
mov
movsb
inc
testl
stos
xor
sub
lods
xchg
subl
test
push
stos
rcl
aaa
mov
mov
add
add
int3
sub
pop
test
testb
xchg
push
mov
mov
inc
test
es
cmp
push
jae
or
imul
outsl
mov
mov
daa
xor
xor
imul
mov
mov
xor
fistpll
fs
push
xlat
fists
movb
pop
mov
jecxz
push
jae
ljmp
pop
xchg
in
and
or
cmp
movb
push
add
lahf
lahf
nop
xor
push
push
mov
ss
in
clc
cmp
push
mov
push
fbstp
popa
sub
jno
dec
xchg
in
xlat
adc
and
mov
es
pop
pop
cmp
sub
out
pop
shll
dec
data16
dec
push
cli
imul
dec
xchg
xchg
cmp
scas
or
decb
cmp
mov
sarl
scas
cmp
imul
aas
cmp
scas
ja
outsb
add
out
and
loope
inc
pusha
lods
and
add
mov
jecxz
xchg
jb
fnsave
and
adc
mov
out
mov
or
js
mov
sub
loope
test
push
mov
mov
loop
lods
lcall
mov
leave
std
stos
mov
mov
fnsave
inc
js
or
jbe
or
inc
fptan
enter
js
inc
nop
lret
lahf
fs
adc
ss
lea
cmpsl
divb
and
test
cmp
sahf
inc
pop
int
jl
dec
jae
std
mov
ss
push
and
jmp
cmp
out
in
outsl
jbe
dec
jo
out
jmp
lods
clc
movsb
stos
xchg
fcoms
xor
imul
lods
add
push
xor
in
xor
mov
cmpsl
sbb
aad
jle
mov
movsb
insb
lcall
scas
mov
int3
jp
xchg
jbe
adc
push
pop
dec
xlat
lea
dec
fwait
dec
ljmp
push
add
sub
cmp
sti
mov
xchg
jmp
sub
cmp
sarl
inc
or
jae
mov
das
sub
pop
iret
arpl
test
movsb
push
add
push
or
enter
pop
cmp
bnd
test
nop
addl
aas
idivb
jns
leave
adc
pop
arpl
je
sub
repnz
cld
add
and
shrl
jbe
adc
pop
mov
aaa
pop
ds
lock
and
xor
inc
inc
mov
mov
stos
jo
push
es
shl
imul
movsl
gs
sub
cmc
push
aam
xchg
xchg
jns
adc
sub
fcoml
shr
adc
push
mov
gs
jnp
add
push
cmp
ja
adc
jg
sbb
jg
cmp
daa
fidivl
xor
cmp
fsub
mov
mov
rol
insl
jbe
cli
mov
pop
pushf
pop
clc
lea
inc
cmp
push
dec
das
adc
inc
cmp
dec
push
or
das
popf
ret
lock
loop
jle
or
mov
testl
pop
mov
xor
repnz
jl
lahf
dec
mov
cs
stos
or
xchg
pop
decb
in
sub
jae
fdivs
loop
push
pop
dec
pusha
imul
imul
add
outsl
adc
js
or
sub
cltd
inc
es
lcall
mov
negl
inc
cmp
jbe
lds
sahf
inc
insl
inc
push
outsb
ljmp
fcompl
dec
and
sbb
jg
imul
mov
arpl
pusha
sub
jb
xor
repnz
mov
movsb
mov
mov
ds
in
mov
push
scas
shll
out
mov
movsl
hlt
mov
xchg
push
je
sub
sub
and
or
test
sbb
gs
loopne
fs
pop
jbe
imul
rcrl
movsb
add
std
lcall
lods
or
push
dec
pop
mov
fnstcw
pop
cmpsl
mov
mov
lods
cmp
add
or
cltd
inc
sub
push
pop
xor
test
xchg
jg
push
cmp
pop
pop
in
fisubrs
sarb
fnstenv
mov
loopne
in
or
sahf
add
mov
mov
out
mov
outsl
sub
xchg
ficompl
aad
mov
aad
jle
sbb
aam
scas
dec
pop
packssdw
adc
cli
cs
imul
xchg
ret
xchg
or
ja
add
incb
or
or
xchg
in
fs
dec
pop
mov
jne
and
roll
inc
adc
and
aas
jg
inc
aam
mov
clc
daa
inc
mov
cmpsb
ror
in
ficompl
int3
jne
xchg
inc
xchg
and
inc
fmuls
add
mov
stos
xchg
push
sti
mov
pop
in
sbb
pop
xchg
enter
fucomi
sub
dec
xchg
sbb
fbld
mov
insl
inc
sahf
jecxz
xchg
mov
mov
xorb
imul
dec
fisubl
ficoms
ja
mov
mov
cltd
lock
sbb
ror
jmp
sbbl
inc
and
divl
je
out
out
out
ljmp
icebp
push
add
sbb
lods
leave
and
jg
movsb
lcall
xchg
imul
and
es
in
cld
popf
ret
xchg
xor
push
aaa
fsub
rorb
xchg
inc
xchg
fmul
cmpsl
out
or
push
mov
pop
push
inc
and
lds
push
jle
jbe
std
xor
pop
mov
adcl
shlb
imul
inc
dec
cltd
push
aas
jno
cmp
sbb
lea
mov
mov
mov
fwait
lret
cli
ljmp
dec
int
inc
rcr
mov
ffreep
cmp
scas
adc
mov
mov
or
push
pop
fs
frstor
jge
xor
dec
popl
xor
std
addr16
lds
push
add
sub
xchg
pop
test
stos
pushf
sbbl
xchg
enter
scas
jae
mov
mov
pop
test
or
inc
sub
sti
loope
jecxz
lods
stos
stos
movsl
ret
push
pop
sbb
ficoms
outsb
icebp
and
addr16
push
jne
sub
out
test
jo
jge
popl
mov
daa
push
ret
fildll
adc
pop
iret
sahf
rorl
xchg
enter
mov
xchg
insb
dec
jg
jae
notl
stos
xor
sbb
fsubl
push
xchg
shr
and
push
lds
rcrl
loopne
dec
cld
mov
mov
hlt
mov
ss
in
xor
pusha
sbb
ljmp
das
mov
xor
cltd
je
sub
sbb
push
es
xchg
es
or
out
cmp
and
jl
mov
push
pusha
rclb
dec
pushf
xor
mov
js
test
adc
aas
inc
mov
and
fstpt
outsl
push
popa
movsb
andb
and
dec
mov
popa
adc
dec
fisttps
shr
mov
jb
dec
push
in
sahf
inc
insb
iret
xchg
cmp
and
jb
cmovns
sbb
sbb
mov
addr16
int
leave
mov
xor
ror
repz
aad
xor
lret
outsb
xchg
adc
je
mov
mov
mov
mulb
cs
mov
fdiv
shlb
dec
int3
jo
add
test
lret
dec
cmp
add
hlt
mov
sarl
push
xchg
and
insl
filds
add
adc
outsl
pop
cs
mov
sahf
add
dec
jle
jnp
inc
sbb
iret
xchg
icebp
mov
push
test
mov
and
shll
hlt
shlb
jo
lods
lret
jnp
add
lret
mov
or
in
jg
lahf
and
push
ficompl
and
push
add
and
clc
std
aad
jo
dec
stos
shlb
sbb
fidivl
mov
lahf
in
and
xchg
jle
push
push
cmp
push
adc
mov
pop
inc
in
lahf
inc
fistps
iret
mov
inc
pop
shl
loopne
mov
inc
cs
fs
stos
and
loopne
xor
lock
inc
andnps
sbb
mov
popa
add
pushw
out
mov
sub
push
stos
stos
dec
ret
decb
cmp
clc
mov
and
in
js
pop
call
adc
mov
jecxz
sub
xor
dec
stc
sbb
hlt
faddp
lods
lock
push
push
pop
fwait
lahf
in
neg
inc
cmp
cmp
in
mov
inc
cmpsb
cmp
out
jmp
gs
mov
pop
pop
cli
inc
push
dec
dec
enter
enter
pop
xchg
push
mov
mov
dec
push
sti
pop
addb
pop
mov
xlat
lret
aam
loop
lret
idivl
xor
dec
push
xor
out
jp
push
and
jb
sti
arpl
sar
loope
jp
push
inc
mov
push
mov
sub
jg
xlat
xchg
ret
mov
sub
jp
sub
lods
cmp
lock
dec
pusha
mov
mov
imul
xor
decb
push
fwait
push
jg
pop
mov
repz
xchg
jp
inc
add
loop
clc
shlb
pop
push
pop
incl
sahf
arpl
and
insl
sub
jns
lret
scas
inc
add
sbb
push
push
shll
ficompl
jo
inc
lret
mov
push
push
add
mov
cmp
lods
dec
pop
imul
into
pop
pop
xrelease
adc
sub
mov
stos
pop
xchg
sub
fsub
jp
push
cmp
test
mov
push
cwtl
mov
subl
or
jl
push
lret
cmp
and
fmul
pusha
xorl
stos
add
pop
jmp
clc
fwait
push
sbb
jne
pushf
orl
sbb
je
sbb
cld
or
outsb
jmp
jbe
mov
fbstp
sub
stc
push
xchg
cmc
mov
push
mov
sbb
ja
lods
ret
xlat
inc
fisubs
and
test
inc
cmp
test
inc
cmp
out
mov
movsl
fildl
lret
xchg
mov
pusha
dec
iret
xchg
or
fwait
or
push
pushf
xor
jns
mov
pop
sbb
xor
arpl
dec
push
sub
popl
out
cld
pop
or
es
and
and
cmp
leave
lods
xchg
mov
loop
mov
add
cmp
mov
or
nop
xchg
daa
pushf
aad
sub
gs
xchg
icebp
xchg
stc
fninit
lds
push
jmp
clc
jmp
xchg
sbbl
sahf
jp
mov
push
add
xchg
mov
outsb
xchg
xchg
lea
and
stos
sbb
mov
ret
or
cmp
cld
lods
or
fldcw
pushf
in
add
push
mov
stos
sbb
test
dec
cwtl
stos
js
pop
dec
es
jmp
adc
mov
push
xchg
mov
jle
mov
inc
adc
mov
pop
fdivrl
cld
and
sbb
out
insl
sbb
loop
xchg
mov
xor
in
loop
jae
sar
movswl
lds
test
cld
nop
adc
cmp
fs
inc
call
out
test
pop
and
xor
leave
jmp
test
fists
ret
cmp
stos
out
dec
cmpsl
ljmp
push
ljmp
movsb
ror
mul
es
xor
jl
shll
and
movsl
repz
icebp
fiadds
mov
jecxz
push
and
add
mov
adc
jb
or
and
lods
inc
mulb
cwtl
pushw
out
cmp
and
add
cmp
fildll
rol
cltd
inc
mov
cli
call
xchg
bndstx
sbb
mov
sbb
sarl
or
scas
enter
push
fcompl
add
nop
filds
mov
xor
outsb
xor
or
cwtl
das
push
jmp
ljmp
and
inc
mov
cli
add
add
sub
stos
push
adc
pop
mov
and
imul
push
inc
enter
push
sahf
test
out
cld
stos
popa
insl
xlat
gs
jp
loopne
pusha
pop
push
test
pop
mov
pop
mov
das
mov
data16
fdiv
lds
je
mov
adc
out
pop
xor
sub
cmp
frstor
in
insl
call
fwait
cli
push
mov
popa
push
xor
jge
mov
fmull
js
jo
scas
icebp
icebp
in
push
sbb
fs
lcall
lds
lock
inc
int
ljmp
mov
xor
add
adc
in
lock
jno
xorl
rorb
cwtl
pusha
pusha
out
out
imul
pop
cmpsl
aaa
pop
ds
jge
sbb
lret
push
mov
out
fcmovu
inc
cmp
pop
add
dec
lret
movsl
addr16
dec
out
jne
adc
xor
fldt
mov
mov
jae
inc
pop
in
jmp
inc
out
movsb
sbb
mov
xchg
dec
insb
mov
out
adc
comiss
jno
insb
ljmp
loop
lock
popa
outsb
sbb
pop
inc
mov
add
arpl
stos
std
push
lods
fldt
push
psrlq
rclb
fs
add
xchg
push
test
mov
stc
out
push
cmpsl
inc
dec
push
outsl
cmp
pop
out
sbb
sahf
mov
xchg
sbb
sbb
sahf
xchg
cmp
call
mov
imul
mov
outsb
ja
pop
je
out
icebp
cmp
push
push
nop
bound
cmp
lods
mov
repnz
and
aas
pushw
shrl
std
scas
or
jo
in
insb
dec
shrb
xchg
in
mov
add
lret
in
jmp
cmp
mov
and
xchg
addr16
sti
pop
cmpsb
shrl
scas
mov
rcll
nop
sub
test
cmp
pusha
adcl
in
jge
inc
popf
cwtl
sub
pushf
adc
rcr
mov
inc
push
sub
dec
int3
das
and
push
subl
enter
mov
sbb
inc
pop
ds
loop,pt
aaa
scas
add
and
jo
dec
cmp
inc
hlt
dec
mov
xchg
adc
lret
je
sbb
jecxz
dec
fucomip
lret
les
sbb
test
enter
mov
mov
jmp
stos
hlt
lret
inc
jecxz
mov
popf
popa
mov
les
add
mov
jmp
sbb
mov
mov
adc
sub
jmp
sar
call
push
push
decb
jg
mov
and
push
out
and
xchg
clc
inc
adc
cwtl
leave
xchg
mov
push
push
adc
aad
jne
xor
push
mov
in
data16
enter
dec
in
jmp
mov
mov
xchg
xchg
icebp
pop
dec
scas
ss
sbb
lcall
es
leave
sub
dec
pop
cvtpi2ps
or
sbb
mov
jne
addr16
jno
xchg
dec
mov
xor
xlat
icebp
sub
pop
xchg
imul
pop
cld
test
mov
lods
push
inc
movsb
movsl
out
jo
sbbl
sub
push
pop
xor
fisubrl
adc
lods
out
mov
cmpsb
pusha
into
push
pushf
push
test
call
cld
adc
outsl
fsts
clc
cs
sbb
ret
out
jge
pusha
mov
pop
loop
fisttpl
loope
enter
mov
scas
neg
clc
movsl
cmp
pushf
xor
mov
out
outsl
dec
cmp
cwtl
leave
or
pop
rolb
xorl
test
hlt
dec
jecxz
mov
or
mov
jnp
mov
cmp
mov
sub
movsb
rclb
test
add
loopne
add
test
dec
jmp
mov
std
mov
rolb
or
sub
pop
repz
mov
mov
loop
dec
cli
mov
inc
out
xchg
xlat
or
dec
dec
jle,pt
inc
stos
jg
adc
inc
les
rorl
adc
xlat
xchg
ret
lret
mov
fsubr
fwait
dec
std
shlb
outsl
xchg
cs
cmp
sbb
mov
scas
inc
lods
mov
xchg
push
out
imul
les
leave
imul
mov
aaa
mov
cmpsb
out
mov
daa
mov
lds
ds
adc
jb
inc
subl
dec
mov
xor
inc
test
lea
xor
mov
outsb
pop
cmpb
ds
inc
add
lcall
sbb
jg
jg
popa
sub
daa
dec
das
fimuls
adc
mov
jle
lret
call
cwtl
cmc
data16
or
aaa
lret
mov
loope
push
out
push
aad
dec
push
push
arpl
mov
sbb
xchg
dec
je
mov
jp
rdtsc
sahf
jmp
mov
hlt
lea
jae
jmp
arpl
pop
dec
popf
fdivrl
cmp
sahf
out
pop
cld
push
std
in
cmp
ja
icebp
push
mov
notb
rorb
inc
jmp
test
mov
mov
jp
lds
scas
mov
and
sti
pop
mov
stos
pop
mov
cld
xor
sbb
mov
inc
insb
das
xlat
movsl
fstpt
insl
adc
ss
cmpb
stos
shrl
shlb
lcall
mov
xchg
lea
addb
in
xor
pop
sub
pop
pop
call
les
push
lds
popf
lods
repnz
push
jo
scas
sub
mov
push
je
int
scas
pop
outsb
sub
call
mov
mov
sub
pushf
ljmp
jecxz
orb
cli
inc
das
ljmp
mov
jno
inc
xchg
fisttps
lods
and
gs
inc
imull
outsl
or
mov
fnsave
nop
ret
cli
push
cmp
mov
mov
jle
push
xor
fidivs
jmp
lret
fcmovne
xor
push
inc
mov
mov
addr16
jne
lock
ljmp
jbe
pop
mov
inc
push
test
and
test
cmc
das
js
mov
cld
mov
push
mov
cwtl
adcl
or
mov
mov
mov
or
dec
sti
popa
fsubl
dec
adc
inc
ljmp
pop
push
push
jo
iret
daa
push
lds
movsl
in
push
jg
mov
divl
fldt
in
push
pop
das
out
inc
mov
loope
les
outsl
ds
dec
fidivs
jno
pop
idiv
arpl
pop
mov
push
lds
mov
add
jmp
aad
sbb
aad
pop
xchg
test
cmp
es
sbb
rorl
mov
inc
push
sbb
mov
pop
sub
mov
imul
pushf
sbb
stc
ret
mov
test
insl
cli
adc
adc
push
pop
stc
or
add
pusha
fildl
clc
cmp
and
mov
mov
cmp
in
pop
jns
in
aam
mov
jno
cld
mov
or
pop
dec
mov
divb
mov
add
inc
xor
std
jbe
outsl
nop
movb
jnp
pusha
xchg
fiadds
lds
ds
inc
jl
mov
iret
sub
ret
cwtl
push
mov
leave
imul
in
fisttps
dec
cmpsl
loopne
comiss
xor
sub
cmc
es
jmp
scas
adc
or
mov
call
fld
add
sarb
fbstp
cmp
xor
arpl
inc
and
ds
cmp
icebp
mov
outsb
xor
clc
mov
pop
jno
mov
mov
adc
adc
clc
imul
cmpb
jae
jecxz
into
movsl
cmpl
adc
icebp
call
repnz
add
cmpsl
popa
mov
ret
push
std
shr
fwait
scas
repnz
xorb
insb
test
icebp
sahf
cs
pop
cmp
in
cmp
xchg
push
mov
popf
xor
ret
inc
cwtl
pusha
jnp
call
xchg
jge
jae
loopne
sbb
sbb
mov
in
sbb
sub
or
jnp
xor
insl
icebp
jb
stc
lds
sub
cmp
pop
jle
out
push
jecxz
cmp
mul
sbbl
loope
sub
outsb
dec
pop
xor
icebp
add
stc
fbstp
add
jle
mov
xorb
adc
daa
fiaddl
outsl
fldcw
sub
sub
push
div
jnp
insb
lahf
cld
sti
je
movsl
and
jg
sbb
aam
call
enter
lcall
dec
stc
ror
ret
popa
push
xor
out
bound
jae
fists
arpl
fiadds
lret
inc
ljmp
ljmp
sbb
jae
cmpsl
mov
and
jg
dec
das
sub
xchg
insb
mov
cmp
pop
fwait
xor
dec
add
mov
pop
fists
lods
popa
mull
xor
mov
add
clc
push
lret
inc
sub
inc
aas
out
jge
scas
outsb
sub
xchg
cmpsb
out
nop
daa
ds
pop
mov
jns
outsl
sub
insb
and
and
fwait
cmpsb
pop
xor
ret
add
pop
xchg
or
into
inc
jnp
jo
sub
int3
shlb
add
pop
xchg
inc
push
data16
inc
mov
add
gs
and
stos
xor
rclb
adc
cmpsl
mov
sbb
mov
lods
sub
movsb
mov
pop
into
ljmp
lret
adc
les
pusha
ljmp
mov
fcompl
mov
test
jnp
nop
pinsrw
lods
mov
mov
sti
ja
test
mov
mov
inc
jmp
out
clc
add
push
mov
scas
cli
repz
xchg
xchg
sbb
xlat
xchg
out
je
je
xchg
dec
jge
mov
outsb
adc
dec
test
cmp
out
sub
cmp
dec
sbb
dec
jp
ret
clc
movsl
ja
scas
add
add
lds
imul
dec
addr16
jp
mov
mov
sub
dec
aad
mov
adc
mov
popa
outsb
outsb
call
inc
fistpl
mov
cli
out
cmp
push
add
jne
aam
pop
lret
mov
test
es
mov
sahf
adc
pop
pop
inc
jle
jmp
imul
inc
pop
pushf
fldl
les
sbbl
repz
stc
pop
mov
aad
sbb
mov
ret
add
mov
inc
fisubl
mov
lods
sbb
mov
aam
jl
or
add
lods
sub
mov
or
inc
movsl
xor
xchg
fmul
je
push
push
lret
or
lock
lret
ret
outsl
in
mov
dec
outsl
jecxz
add
aam
fucomi
xor
jno
mov
mov
sbb
std
test
sub
mov
aad
push
sub
cmpsl
push
shll
test
rorl
cwtl
mov
xchg
and
es
lret
loope
out
or
test
pop
icebp
pop
aam
inc
xchg
fs
mov
jmp
out
push
jnp
xchg
pop
cmp
mov
iret
inc
push
ds
int3
mov
add
and
xchg
test
cld
into
jns
cmpsl
push
shrb
dec
xchg
cmpsb
xchg
sbb
dec
add
push
xchg
dec
aam
dec
insl
ret
ds
add
mov
sub
cwtl
dec
adc
add
sbb
mov
jl
rcrb
dec
adc
lods
adc
test
xchg
adc
jp
push
shlb
inc
ret
jne
cltd
xchg
inc
sub
and
dec
mov
popa
jnp
push
aaa
xchg
xchg
outsl
bound
push
stos
xchg
mov
mov
popa
popa
aas
pop
cmp
add
xor
xchg
pusha
ret
addb
scas
pushf
out
test
dec
sbb
jb
in
int3
pop
cmpsl
mov
cmp
mov
loop
xchg
jmp
mov
push
and
aaa
fldcw
outsb
arpl
or
push
mov
aas
aaa
call
adc
ja
adc
out
or
popa
in
inc
fadds
ja
lock
insl
jb
mov
xchg
add
inc
push
sub
icebp
cmp
insl
dec
jg
ficomps
or
loopne
xchg
hlt
push
movsl
adc
xchg
insb
incl
cmp
and
dec
cwtl
int
or
inc
ret
sbb
dec
lea
out
push
inc
leave
loope
in
jnp
push
aaa
subl
sbb
ds
mov
or
push
into
mov
inc
in
sbb
push
or
push
pop
inc
cmp
in
mov
es
pop
sbb
xor
mov
es
aad
int3
sar
cmp
lods
test
dec
or
pop
rclb
pop
fwait
mov
dec
and
mov
xor
xor
fs
dec
sub
nop
sub
dec
fsubr
scas
ds
das
sbb
testl
aam
adc
dec
mov
mov
xchg
jne
mov
mov
bound
cmc
xchg
ljmp
adc
and
xlat
xchg
adc
mov
arpl
sti
dec
or
push
sahf
sbb
in
aaa
mov
xor
cmpsb
push
mov
sbb
loopne
push
or
pop
push
push
push
movsb
jge
pop
mov
shlb
cwtl
xchg
jle
icebp
lret
sahf
pop
aas
add
out
sub
shl
add
lods
push
pop
insb
pop
mov
pop
cmc
imul
ss
pusha
jb
addr16
inc
stos
stos
cmp
or
mov
mov
pop
mov
sti
nop
mov
stos
xlat
xlat
mov
js
pop
mov
mov
fisubs
add
dec
add
push
or
fists
out
xor
mov
ss
or
sbb
xchg
pop
xorl
sub
lock
pusha
inc
ja
cmp
mov
add
or
and
fs
inc
jo
mov
push
sub
data16
pop
xor
pop
dec
outsb
std
lret
xor
or
dec
repnz
cmpsb
rcll
lods
dec
sbb
daa
jno
jnp
fstl
stos
enter
jbe
mov
mov
xor
pop
or
cs
sti
xchg
pop
or
lock
sub
outsl
sahf
cmp
mov
pop
push
lahf
js
bndstx
jmp
inc
lods
clc
test
into
push
pop
xchg
loopne
xchg
pop
ljmp
fstpt
jnp
xchg
adc
xchg
mov
pop
jb
sub
dec
push
mov
cli
cmc
out
mov
test
add
cmp
xchg
shrb
fwait
repz
test
notb
jb
xchg
lods
out
nop
fcoms
lcall
insl
mov
das
adc
mov
add
icebp
clc
lods
repnz
orb
mov
cmc
add
mov
popa
fdivl
leave
pop
cmp
shlb
sahf
jno
icebp
movsb
nop
jbe
cld
adc
repz
repnz
dec
cmp
mov
dec
adc
push
pop
outsb
mov
lods
je
mov
jb
and
dec
inc
jo
call
js
adc
pop
xorb
push
cmpsb
cmp
mov
xchg
push
popf
xchg
cmp
jnp
shlb
mov
shll
lock
jl
xchg
dec
test
retw
in
xor
and
sbb
fsubrp
into
pop
jnp
add
mov
fsubrl
jo
loope
dec
pusha
arpl
in
outsl
mov
leave
push
add
inc
mov
rolb
mov
dec
sbb
mov
adc
jecxz
dec
sbb
pop
mov
dec
imul
rcll
mov
xlat
and
mov
mov
cmpsl
out
popa
movsb
dec
add
adc
ficomps
mov
pop
xor
enter
nop
inc
nop
int3
movsl
and
into
adc
stos
mov
push
inc
mov
out
xchg
fs
jno
and
repnz
add
sub
icebp
or
xchg
shll
xor
test
add
jnp
dec
dec
enter
out
into
arpl
fsub
jbe
in
aaa
xchg
cld
int3
fld
xchg
pop
and
fsubrl
mov
jmp
mov
push
cwtl
mov
movhps
or
lret
dec
mov
pop
pop
out
dec
mov
insl
aaa
cltd
cmp
dec
outsl
xchg
aas
or
mov
mov
push
inc
loopne
lret
ja
mov
sub
fnstcw
aad
icebp
push
sahf
je
xor
out
lret
scas
mulb
pop
push
ds
lods
test
mov
jae
dec
mov
inc
xchg
js
jl
sbb
pop
mov
hlt
fcoms
daa
push
pop
cli
cmp
addr16
jns
loopnew
int
mov
icebp
pusha
sub
inc
jae
test
or
stc
fs
inc
mov
les
inc
ror
lret
push
std
pop
dec
adc
jno
xchg
mov
and
pop
push
into
lods
out
and
aaa
dec
dec
add
rcll
pop
andb
ret
aad
inc
in
enter
mov
push
pushf
dec
fildll
imul
call
or
bound
lods
adc
mov
adc
cmp
int3
mov
repz
adc
mov
scas
xlat
ret
jle
xchg
xor
mov
rolb
push
arpl
mov
mov
popf
inc
add
mov
pop
mov
lcall
ds
std
sub
mov
in
mov
int3
mov
and
mov
sbb
pusha
stc
adc
icebp
je
push
inc
cmp
push
cmp
adc
int
call
scas
mov
paddsb
mov
pop
pushf
lds
scas
int
jg
testb
addl
imul
scas
ss
fisttpll
iret
jns
mov
lods
jns
lret
xchg
int
int3
bound
cmp
adc
adc
int
mov
add
out
inc
aam
and
jle
inc
and
lcall
pushf
pop
push
shl
jnp
push
rcll
push
pop
xchg
mov
fistpl
xchg
add
pop
inc
dec
xchg
pop
jb
inc
push
frstor
mov
dec
xorb
movsb
sub
inc
inc
insb
jnp
test
xchg
xchg
rcrl
fcompl
sub
mov
fnstenv
sbb
dec
cld
and
movsb
push
flds
push
mov
movsb
mov
sti
lods
popf
rclb
pop
ja
lcall
fmuls
mov
pop
xor
ret
sbb
or
mov
mov
inc
push
add
lahf
cmp
leave
fdiv
cltd
aad
js
std
leave
mov
scas
sbb
filds
mov
test
pop
mov
xor
xor
lcall
sbb
mov
and
mov
inc
imul
mov
stos
shr
idivb
lock
sub
pop
pusha
push
add
fistl
mov
xor
pop
out
fwait
cwtl
cmp
pop
cmpsb
cli
dec
adc
and
lret
fnstsw
sub
clc
sub
clc
out
in
mov
pushf
dec
subb
aad
inc
pop
lds
jno
pop
daa
out
inc
jmp
jns
xchg
cmp
pop
lock
out
test
aad
inc
iret
mov
aas
sbb
insl
xchg
push
jb
cmp
xor
or
insl
jmp
jmp
jge
or
rcrb
jne
sub
test
or
mov
lods
cli
loop
pop
lea
sbb
sbb
cmp
imul
sbb
aaa
and
push
mov
nop
cli
out
cmpsb
adcb
rorl
das
mov
mov
imulb
and
push
fldenv
in
pop
mov
vhaddpd
xor
and
in
movhps
enter
mov
jl
xor
xchg
push
add
icebp
rcrb
loop
add
bound
or
xor
shll
push
push
sbb
push
jle
fistpll
jl
lea
sub
rorl
test
pop
fs
mul
and
xchg
cwtl
push
test
jbe
ret
mov
ficompl
movsb
pushf
pop
call
mov
fdivrp
das
push
adc
gs
repnz
ret
xor
fldl
icebp
adc
inc
jno
fwait
lods
stos
in
