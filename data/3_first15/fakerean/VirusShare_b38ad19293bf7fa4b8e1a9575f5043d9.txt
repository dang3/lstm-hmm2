push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
lods
cmovae
inc
and
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
iret
pop
inc
add
push
lea
sub
mov
xor
mov
inc
push
inc
add
dec
or
dec
js
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
lret
add
int
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
testb
xor
testb
std
inc
add
add
rorb
int
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
add
add
cmp
shrl
cmp
das
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
xchg
or
add
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
or
js
push
lea
mov
test
je
cmp
adc
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
fisttps
inc
add
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
adc
inc
add
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
jo
inc
add
add
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
add
or
leave
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
mov
adc
call
mov
lea
call
add
leave
ret
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
test
jne
xor
inc
jmp
call
jmp
push
mov
push
push
push
push
mov
mov
xor
cmp
push
jne
mov
cmp
jne
mov
cmp
mov
jne
lea
movl
lea
push
push
push
movl
mov
call
push
push
push
call
add
add
decl
jne
lea
mov
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
cmp
jge
xor
xor
cmpb
jne
add
add
cmp
jb
mov
ret
cmp
jne
jmp
mov
sub
je
sub
je
sub
jne
in
sbb
inc
and
push
call
jmp
push
mov
sub
push
mov
push
mov
push
push
pushl
call
test
jns
push
xor
cmp
ja
movzbl
mov
jmp
movl
jmp
push
lea
push
push
push
movl
call
movzbl
and
mov
mov
pop
pop
pop
leave
ret
movl
jmp
mov
movl
jmp
call
jmp
mov
jmp
mov
movl
jmp
movl
jmp
call
neg
sbb
inc
jmp
push
mov
call
test
jns
jmp
mov
jmp
mov
jmp
push
call
add
mov
push
adc
roll
adc
roll
adc
aaa
aas
adc
aaa
aas
adc
rolb
adc
push
adc
aaa
aas
adc
aas
adc
aaa
aas
adc
aas
adc
push
adc
push
adc
push
adc
push
adc
roll
adc
aas
adc
aaa
aas
adc
rolb
adc
push
adc
roll
adc
add
add
add
pop
add
or
or
movups
adc
adc
inc
and
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
push
push
mov
mov
mov
mov
call
test
je
cmpb
jne
mov
mov
call
cmp
je
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
movb
movb
fildl
xor
cmp
fidivl
push
setne
mov
fstpl
call
test
pop
je
flds
lea
push
lea
push
movzbl
push
push
movzbl
push
push
fstps
pushl
fldl
push
push
movzwl
fstpl
push
movzwl
push
movzbl
push
mov
call
pushl
mov
push
mov
mov
push
call
test
je
incl
mov
test
mov
jne
mov
mov
call
cmp
pop
sbb
pop
and
pop
leave
ret
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
flds
lea
fstps
push
lea
push
call
add
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
push
mov
movl
jne
mov
push
call
add
testb
movl
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
xor
cmp
je
mov
mov
cmp
jne
cmpl
push
mov
movl
jne
mov
push
call
add
push
movl
call
add
pop
mov
mov
pop
pop
pop
ret
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
xor
sub
cmp
je
cmp
je
push
mov
cmp
je
mov
cmp
mov
jne
mov
mov
push
lea
lea
movl
mov
call
mov
pushl
mov
mov
push
pushl
push
call
lea
mov
call
mov
pop
leave
ret
push
mov
mov
sub
test
je
andl
push
push
push
mov
mov
mov
test
jbe
andl
movl
mov
mov
mov
test
je
andl
push
lea
call
mov
test
mov
je
mov
push
call
mov
lea
push
pushl
push
call
cmpl
jne
lea
call
incl
addl
cmp
jb
pop
pop
xor
pop
leave
ret
mov
mov
mov
push
call
lea
call
jmp
push
mov
sub
push
mov
orb
xor
cmpl
push
sete
andl
push
push
push
mov
mov
mov
lea
push
call
test
jne
lea
call
jmp
mov
call
test
jne
push
inc
mov
call
test
je
push
call
test
pop
je
andl
andl
mov
pushl
mov
push
push
call
test
jne
or
inc
add
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
cmpl
jne
lea
call
mov
mov
shr
lea
lea
xor
and
inc
shl
or
cmpl
je
lea
call
andb
xor
inc
pop
pop
pop
leave
ret
push
mov
mov
test
je
mov
cmp
jne
mov
mov
mov
xor
pop
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
lea
push
push
xor
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
orl
and
mov
call
add
test
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
push
xor
lea
call
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
push
call
mov
pop
add
mov
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
jne
mov
cmp
jne
mov
test
je
add
mov
pop
xor
pop
ret
cmp
je
cmp
je
mov
mov
call
test
jne
mov
mov
call
test
je
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
cmp
push
call
mov
add
add
add
add
push
jle
add
pusha
in
mov
pop
add
mov
fiaddl
add
jecxz
pop
cmc
mov
add
in
popf
test
add
addr16
add
pop
imul
add
lods
shrl
les
add
cltd
iret
mov
lds
jmp
add
push
push
lea
push
push
call
roll
arpl
mov
cli
in
outsl
jns
push
lds
add
andl
int
mov
fcmovu
popf
loop
mov
leave
jo
add
jp
add
lret
lahf
push
fldl
popa
add
add
mov
mov
pop
add
mov
lea
pop
popl
push
push
push
lea
push
push
push
push
push
push
push
call
mov
lahf
mov
test
add
add
add
add
add
lret
addb
cmpsl
imul
testl
add
addl
add
mov
lea
pop
push
push
push
push
push
push
call
add
filds
mov
add
add
add
in
movsb
add
mov
sahf
jb
pusha
divl
add
roll
add
mov
out
out
mov
mov
lea
pop
push
push
lea
push
push
push
lea
push
push
call
add
cld
pop
add
add
add
fsubp
add
add
add
push
add
pushf
in
pushf
add
add
add
int3
lcall
mov
add
push
call
pop
mov
add
add
mov
vmovmskps
add
add
mov
lea
pop
push
push
lea
push
push
push
push
push
push
call
add
add
cld
les
push
mov
cmc
add
insb
push
add
add
mov
add
lcall
call
add
add
add
scas
lds
lret
mov
add
stc
fsubs
test
add
add
jecxz
gs
add
pop
push
call
push
push
call
hlt
add
cmc
outsl
add
push
pushf
loop
add
jge
arpl
fwait
test
movl
jge
fbstp
stos
add
add
add
add
add
fimull
aam
bound
pop
call
push
push
push
call
jmp
add
xchg
add
mov
add
sahf
xchg
test
mov
lcall
add
pop
sti
add
rcll
call
add
xchg
loop
pop
add
fidivl
add
add
pop
push
call
push
lea
push
push
push
push
push
push
push
call
add
add
flds
icebp
mov
add
add
add
add
jge
add
add
mov
add
rcll
lahf
cwtl
add
add
add
add
mov
imul
jmp
push
lea
push
push
push
call
mov
testb
add
add
add
filds
filds
call
mov
shl
add
add
jle
fildll
mov
add
add
clc
add
bound
add
int3
lea
pop
ret
push
push
push
call
pop
add
add
xlat
add
lds
add
add
add
push
mov
lret
pop
add
cld
jne
aam
shr
cltd
loopne
add
add
add
loope
add
and
cltd
lods
imul
add
incb
add
add
add
out
roll
arpl
arpl
mov
push
push
call
add
pop
fistpll
addr16
add
add
out
je
cmp
add
jp
add
sub
out
clc
scas
add
add
lock
movsb
arpl
les
add
cltd
stos
fwait
insb
mov
rolb
bound
add
add
jns
mov
add
add
add
add
mov
lea
pop
mov
add
push
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
mov
add
addl
sahf
xchg
add
xchg
je
aad
add
jge
data16
outsl
mov
fistl
bound
add
add
in
add
stc
add
add
add
add
jne
addr16
lea
pop
add
push
push
push
push
call
add
xchg
add
jnp
lock
mov
iret
mov
add
add
popa
add
scas
stos
roll
icebp
scas
add
add
add
repnz
add
add
add
jmp
xchg
call
jno
stos
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
jbe
mov
xchg
add
data16
pop
test
stos
pusha
mov
mov
xchg
sahf
ficoml
rcr
repnz
fldl
rolb
push
add
fwait
mov
rcll
add
popf
add
cltd
clc
add
out
add
add
sub
pop
add
repz
push
sti
sahf
lods
push
push
or
inc
add
ror
sub
rol
not
pop
inc
inc
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
call
add
cmc
mov
mov
scas
xorb
push
into
pusha
rolb
add
mov
loop
add
mov
shlb
test
add
test
fdiv
pop
jno
add
lods
les
andb
push
leave
add
mov
scas
mov
mov
lea
pop
pushl
push
push
push
call
add
ljmp
in
in
pop
add
ret
xchg
fildll
sti
pop
add
test
adcl
fwait
add
add
pop
add
fadd
push
add
sahf
jbe
lods
aad
ljmp
lret
movsb
jbe
pop
in
push
adcb
add
add
jns
xchg
add
mov
lea
pop
call
mov
push
push
push
push
push
push
push
push
push
push
call
rcr
mov
scas
cmc
push
loopne
add
add
mov
popf
lahf
add
add
pop
imul
mov
xchg
sahf
pop
test
mov
add
lea
cli
movl
cmpsl
ljmp
add
test
jns
pop
pop
rolb
add
fldl
push
enter
mov
lea
pop
movl
push
push
lea
push
lea
push
push
call
add
add
ljmp
add
cmpsl
xchg
scas
lret
out
add
add
jl
add
jmp
test
add
loope
fistps
in
xchg
add
add
cli
into
add
xchg
fidivrs
cmpl
mov
add
add
add
add
add
je
aam
bound
lea
push
lea
push
push
push
call
add
arpl
repnz
push
add
mov
add
jbe
mov
add
scas
cmpsl
add
push
add
data16
mov
add
std
add
add
fadds
jl
add
add
sahf
push
add
add
pushf
add
add
xchg
add
in
add
mov
jle
les
pushl
push
lea
push
lea
push
lea
push
push
call
jl
mov
add
add
insb
add
ret
add
push
int
add
mov
add
add
add
add
nop
ja
add
movl
mov
xchg
add
icebp
add
mov
fmull
jne
push
push
push
push
push
push
push
lea
push
call
sahf
add
lahf
data16
popf
xchg
add
add
add
jbe
add
je
movsb
enter
aam
pop
add
add
idiv
cld
jge
add
add
add
outsl
lret
jne
add
jno
jecxz
add
add
add
test
mov
int3
lea
pop
call
pushl
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
xchg
rolb
add
mov
push
xchg
cltd
add
pusha
mov
add
add
push
pop
jge
add
cld
push
push
mov
lods
add
add
add
out
mov
add
add
mov
push
mov
aam
mov
xchg
aam
add
pop
in
popa
pop
add
mov
add
cld
add
pop
pushl
push
push
lea
push
push
push
lea
push
call
pusha
add
add
add
pop
mov
aam
add
ret
mov
jl
mull
add
out
add
add
jl
mov
add
stos
add
bound
pop
call
push
push
shr
push
or
not
add
add
not
sub
add
pop
sub
not
pop
push
push
push
call
out
lret
jo
xchg
sahf
mov
add
stos
pop
mov
in
cmpsl
xchg
add
add
add
add
add
pusha
add
xchg
mov
add
out
enter
add
movsl
add
pop
xchg
jecxz
sarb
push
xchg
add
xchg
sahf
pop
xorl
call
add
scas
add
or
pushl
call
push
push
push
lea
push
lea
push
push
call
out
shlb
out
je
fildl
scas
add
jns
je
add
xchg
test
add
testl
add
add
add
data16
add
add
add
xchg
add
xchg
mov
add
mov
in
add
ja
add
loope
pop
mov
mov
iret
mov
mov
mov
lea
pop
push
push
push
shl
sub
lea
push
sub
add
inc
not
xor
sub
lea
dec
pop
ror
ror
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
add
int3
jmp
lret
add
pop
add
data16
mov
addr16
mov
add
test
insb
mov
mov
add
fildl
mov
add
int3
lea
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
loope
imul
lret
add
jbe
test
push
add
add
jecxz
add
out
jmp
fadds
pop
cwtl
hlt
add
test
pop
stos
xchg
push
add
mov
add
mov
lea
pop
push
call
push
push
push
push
push
call
jbe
push
add
mov
add
jge
mov
out
int3
clc
add
loop
add
aad
stc
mov
jne
add
add
push
mov
sti
add
movl
add
test
ja
add
mov
testl
clc
push
lea
push
push
push
push
push
call
add
mov
roll
add
fiadds
lcall
ficoms
stc
pop
shl
in
mov
jno
add
add
add
popa
jne
mov
sbb
pop
and
push
add
jo
mov
mov
add
add
add
scas
add
out
andl
lea
pop
push
push
push
push
push
push
call
add
add
add
pop
loop
add
add
add
pop
mov
gs
hlt
ja
lret
shll
jbe
mov
add
data16
add
add
mov
lea
pop
push
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
scas
mov
add
add
lret
add
fsqrt
gs
fildl
cld
fucomp
cli
add
addr16
jecxz
jl
fiadds
add
jecxz
adcl
add
xchg
mov
jno
add
xchg
std
stc
je
add
cmpsb
lahf
mov
add
push
add
mov
pushf
add
cltd
mov
pop
add
mov
lea
pop
add
push
push
push
push
lea
push
push
call
push
call
bound
mov
mov
jp
add
add
int3
lea
mov
add
fiaddl
add
nop
add
in
mov
add
fcmovbe
push
add
fsubrp
add
xchg
cmpsl
data16
add
add
fadds
fucomp
add
idivb
sar
add
push
add
repnz
roll
mov
mov
lea
pop
add
push
push
push
push
lea
push
call
jl
mov
mov
add
lcall
push
pop
add
loopne
in
mov
pop
pop
cmc
mov
add
roll
roll
add
cmc
mov
mov
hlt
lea
pop
add
push
push
push
call
popf
xchg
cwtl
movsl
data16
jb
mov
add
add
add
flds
add
add
pushf
jbe
add
add
stos
push
xchg
mov
add
add
add
add
add
add
lahf
fldcw
add
clc
add
mov
ja
add
or
mov
push
push
push
push
push
push
push
call
jbe
push
cld
jno
add
faddp
add
mov
jmp
pop
add
roll
pop
pop
out
mov
pushf
mov
lcall
add
add
pop
test
push
push
test
notb
popa
sbb
xor
push
lea
push
lea
push
push
push
push
lea
push
call
push
add
ja
out
mov
jl
imul
rolb
add
mov
jmp
in
push
rolb
add
add
cltd
add
fiadds
out
cmpsb
popa
jecxz
add
stc
mov
lea
pop
add
push
lea
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
test
loop
add
push
add
lock
lcall
add
add
mov
push
xorl
mov
xchg
add
add
testl
std
jae
loopne
add
push
add
mov
add
add
jge
fs
add
add
mov
outsl
enter
add
cld
lea
pop
add
push
push
push
push
push
push
push
push
call
je
add
jnp
add
add
rolb
add
loope
lock
add
mov
mov
mull
add
cld
add
add
faddl
cli
add
sahf
fwait
push
add
adcl
sahf
add
add
push
js
ljmp
rolb
pusha
add
addr16
mov
push
push
push
lea
push
push
call
testl
add
movsl
pop
nop
add
int
jne
roll
enter
flds
movl
imul
add
ljmp
add
xlat
mov
lea
pop
xor
push
push
push
call
shll
jnp
add
add
faddl
cmpsb
lahf
sbb
cmc
popa
out
lcall
add
add
jno
add
push
roll
add
movsb
add
mov
lea
pop
add
push
lea
push
push
push
push
push
call
xchg
movsb
fldenv
jbe
add
add
add
mov
add
add
incb
lahf
out
shlb
lods
loop
rolb
add
add
add
mov
cmpsl
clc
cwtl
add
stos
add
sarb
add
pop
bound
mov
hlt
lea
pop
add
push
lea
push
push
push
push
push
lea
push
push
push
push
call
mov
addr16
fimuls
add
in
add
add
jb
add
mov
add
xchg
add
ret
stc
jno
imul
add
mov
add
hlt
add
mov
add
jae
xchg
xchg
add
pop
pop
push
push
lea
push
push
push
push
call
add
outsl
bnd
popf
add
xlat
div
roll
or
sbbl
leave
sarl
jmp
add
add
add
add
add
test
aad
mov
jnp
add
insb
mov
test
fmul
pushf
add
repnz
ror
add
mov
cmc
push
jge
add
pop
mov
push
push
push
push
lea
push
call
add
add
add
add
add
outsl
add
rcll
add
int3
add
add
fcoml
add
cmpsl
push
add
popf
pop
add
lods
rorl
add
in
lret
pop
add
test
add
mov
roll
add
stc
arpl
add
add
mov
arpl
pop
xor
push
push
call
lds
lcall
add
fwait
js
pop
add
sahf
add
add
pop
pop
add
into
out
push
imul
outsl
aad
mov
lea
pop
add
push
push
lea
push
push
push
push
push
call
pop
in
enter
pop
pushf
popf
push
add
sti
add
mov
mov
add
add
add
add
jl
lods
bound
cwtl
cmpsl
add
add
in
cli
scas
stos
mov
lea
pop
push
mov
push
push
push
call
movsb
xchg
in
add
add
xchg
xchg
add
js
rcr
add
ftst
add
add
out
popl
fildl
loope
jecxz
mov
add
add
add
add
mov
xchg
bnd
imul
lahf
add
add
js
in
mov
lea
pop
xor
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
clc
stos
insb
loop
mov
add
add
cld
add
mov
idivb
bound
add
add
pop
add
xorl
xchg
add
mov
lea
pop
add
push
push
lea
push
push
call
mov
add
add
add
aad
arpl
add
cmpsb
add
add
add
out
add
add
mov
bound
add
mov
lea
pop
sub
pop
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
rolb
add
add
add
cwtl
jns
mov
mov
add
jb
out
mov
add
lea
mov
mov
lds
add
mov
stos
lret
roll
ljmp
xchg
loopne
add
lcall
add
push
add
rorb
rep
pop
push
push
lea
push
push
push
call
leave
add
movsb
roll
fiaddl
add
arpl
stos
add
pop
rolb
add
mov
add
popa
add
add
ret
hlt
sti
pop
hlt
arpl
stc
jb
mov
mov
add
add
in
add
xchg
fldl
loopne
rolb
pop
shl
add
add
mov
xlat
add
add
mov
aam
bound
mov
add
push
push
push
push
lea
push
push
call
add
out
add
testl
add
int3
push
ficompl
add
shr
jae
pusha
int
add
push
les
add
hlt
add
add
mov
add
add
ljmp
xchg
stos
jle
clc
hlt
push
add
lret
sti
mov
out
mov
lea
pop
add
push
dec
shr
pop
add
mov
xor
push
not
shr
xor
add
pop
mov
xor
push
push
lea
push
push
push
push
call
sahf
movsl
ljmp
add
add
add
ljmp
add
add
fwait
mov
add
add
add
filds
in
lcall
popf
ja
add
fadds
lods
iret
add
test
les
dec
sub
jb
lea
sub
pop
add
add
push
dec
pop
mov
push
push
dec
ror
dec
push
sub
add
sub
not
ror
sub
sub
not
pop
lea
pop
push
not
pop
pushl
call
push
xor
not
lea
pop
push
push
push
sub
ror
ror
lea
push
or
inc
add
rol
not
sub
inc
pop
rol
pop
push
push
push
push
push
call
mov
mov
cmpsl
add
pusha
xchg
add
fwait
add
out
mov
add
imul
mov
add
add
add
pushf
test
test
pop
ljmp
pop
push
push
push
not
pop
call
push
push
push
call
push
add
add
jmp
add
stos
pop
pop
add
pusha
popf
pop
add
mov
add
push
jne
lahf
add
add
shrl
incb
pop
testl
add
add
add
add
add
mov
mov
sub
scas
add
add
mov
lea
pop
mov
push
ror
pop
push
push
push
lea
push
lea
push
push
call
xchg
mov
xchg
lret
jbe
cltd
add
in
jb
add
add
lret
push
pop
add
jl
iret
add
test
in
add
lcall
add
add
mov
push
xchg
add
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
imul
add
leave
cmc
add
add
sti
add
xorb
orb
add
xchg
loope
add
jbe
mov
lea
pop
mov
push
add
add
pop
add
push
pop
add
push
rol
pop
add
mov
xor
push
inc
pop
add
push
push
lea
push
push
lea
push
lea
push
call
sti
add
jns
add
add
add
add
jno
mov
mov
add
hlt
movsl
pop
addr16
mov
add
aad
out
addb
mov
pusha
loopne
push
std
push
movsb
add
add
pop
add
add
jecxz
add
les
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
jne
bnd
add
jae
add
xchg
test
xchg
cli
mov
lcall
jbe
mov
ror
lcall
icebp
add
push
stos
mov
add
pop
cltd
mov
add
lahf
cmc
lcall
out
add
stos
clc
mov
rolb
lods
pop
mov
cmpsl
rcr
add
mov
sub
add
push
lea
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
mov
scas
mov
int
add
add
mov
imul
add
add
iret
add
add
add
addr16
mov
fadds
push
add
mov
fiaddl
xchg
mov
lea
pop
add
push
not
ror
pop
add
push
push
push
lea
push
push
call
sbbb
pop
add
xchg
add
xchg
add
in
movsb
add
add
push
add
add
add
jl
mov
in
pop
add
out
mov
adc
pop
push
add
pop
mov
xor
push
push
lea
push
push
push
push
push
push
call
jecxz
add
mov
js
mov
call
add
pushf
movsb
fsubrs
lods
pop
popf
lock
fiadds
jp
push
add
add
add
xchg
add
popa
add
lods
mov
imul
rep
mov
push
push
push
lea
push
push
push
call
ret
mov
push
add
add
movsl
out
std
mov
lods
xchg
mov
stc
enter
int
xlat
xchg
push
pop
shr
cmc
jp
mov
loopne
add
add
add
out
mov
lea
pop
xor
push
lea
push
push
push
call
jge
je
xchg
xchg
into
jns
cmc
hlt
add
aad
add
add
add
add
add
mov
iret
lods
jmp
cwtl
fldl
mov
lods
fldl
add
add
add
gs
jo
add
movsb
mov
jo
mov
add
popl
mov
add
add
jle
into
xchg
jl
add
nop
add
idivb
out
push
popf
add
int3
lea
pop
add
push
ror
shl
add
pop
or
je
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
xchg
mov
mov
mov
add
fcomps
add
in
add
add
mov
out
addb
add
test
add
mov
push
add
testb
hlt
push
rorb
loopne
add
in
int
test
mov
xchg
std
add
data16
mov
xor
push
lea
push
push
push
call
add
add
push
xchg
arpl
repnz
add
add
pop
jl
push
insb
loopne
ja
movsb
add
out
sti
jne
add
jge
stc
add
ret
test
jnp
clc
jp
aam
add
add
add
pop
lock
jmp
jae
add
lds
add
xchg
aad
add
lea
pop
mov
push
push
push
lea
push
push
push
push
push
call
add
push
insb
lahf
mov
out
xchg
add
mov
add
add
into
pop
add
into
and
ficomps
add
jle
xchg
mov
call
test
jns
add
sbbb
pop
mov
xchg
lcall
out
add
add
push
in
mov
rolb
mov
jecxz
add
xchg
in
lea
pop
xor
push
push
push
push
call
pop
add
add
popa
imul
mov
xchg
add
mov
rcl
add
add
add
push
mov
frstor
mov
add
out
in
mov
add
shlb
mov
add
add
ljmp
mov
add
andb
jle
lods
into
add
out
add
scas
add
pop
mov
adc
les
add
push
inc
dec
pop
add
add
push
shr
lea
sub
pop
push
push
push
push
push
call
test
mov
add
add
add
jne
add
int
jle
pop
mov
add
shl
shll
mov
add
mov
shr
add
fs
fs
add
add
xchg
icebp
push
ja
add
xchg
lea
add
add
add
adc
inc
or
jb
lea
push
push
push
call
add
add
outsl
add
arpl
push
mov
jmp
test
add
ffree
loope
add
add
fisubs
fistl
add
js
ljmp
add
add
cwtl
movsb
sarl
addr16
xchg
pop
insb
mov
add
pop
pop
mov
add
pop
jmp
scas
aad
movsl
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
call
jmp
add
jge
aad
xchg
mov
add
pop
sahf
mov
add
add
ljmp
je
into
in
mov
mov
add
mov
push
andl
into
mov
aam
bound
pop
pop
push
ror
xor
pop
rep
push
push
push
lea
push
push
push
lea
push
call
fsubs
fcoms
add
add
push
faddl
add
add
add
add
movsl
add
fisubl
jae
pop
xchg
add
cmc
jge
add
mov
add
popa
add
enter
hlt
lea
pop
mov
xor
push
shl
sub
add
pop
or
je
push
add
shr
pop
mov
push
rol
pop
add
add
push
push
push
lea
push
call
add
add
cmc
add
add
test
lcall
ljmp
push
orl
add
shrl
add
jb
add
pop
rep
pop
push
push
not
dec
push
or
not
add
add
inc
sub
sub
shr
inc
pop
shl
not
add
inc
pop
push
lea
push
call
add
add
cmpsl
add
add
add
mov
enter
pop
xchg
addl
in
arpl
fiadds
jmp
enter
icebp
add
add
add
add
ret
add
lahf
mov
mov
int3
lea
pop
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
mov
mov
bound
add
xchg
push
add
lret
mov
mov
shll
mull
add
ja
addl
mov
hlt
lea
pop
mov
push
xor
pop
mov
push
shr
dec
inc
add
pop
mov
jmp
push
inc
ror
inc
pop
push
mov
push
push
push
push
push
push
push
push
call
add
mov
in
roll
xchg
lods
add
add
lret
add
add
js
addr16
xchg
add
mov
popa
fimuls
iret
jle
fnstcw
jbe
add
jns
pop
add
add
add
add
mov
add
add
in
scas
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
jp
add
add
mov
mov
lahf
out
ja
add
add
add
push
imul
mov
add
rcrb
add
cld
add
mov
mov
add
jnp
add
mov
add
add
push
add
bound
cwtl
call
lret
bound
lea
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
mov
ret
jmp
enter
mov
add
test
in
add
ljmp
add
jmp
add
hlt
out
add
add
sahf
add
add
jb
out
mov
loopne
test
outsl
mov
add
pop
push
push
push
push
push
lea
push
push
push
call
in
add
jecxz
add
add
add
loope
mov
stos
cmpsb
out
sti
clc
push
loop
add
add
enter
into
fiaddl
movsl
mov
add
loop
sahf
add
lods
out
add
outsl
push
add
add
hlt
movb
sti
rol
add
jmp
add
add
lret
inc
add
rorl
push
mov
push
push
push
lea
push
push
lea
push
call
stos
add
aam
shll
add
add
add
add
stc
cmpsl
cmc
add
push
add
lahf
negl
repnz
add
mov
add
pop
add
cmpsl
mov
jp
add
add
loope
cmpsb
push
mov
add
clc
push
faddl
fwait
cwtd
mov
add
add
add
lret
filds
add
pop
pop
pop
push
push
push
push
push
push
push
lea
push
push
call
testb
lock
cltd
int
jnp
add
mov
cmpsl
xchg
add
lret
in
addl
add
jno
cmc
add
add
outsl
mov
lcall
mov
add
and
pop
pop
push
shr
add
sub
pop
leave
push
dec
pop
ret
push
shl
pop
push
push
push
call
add
movsb
jecxz
cld
into
add
or
xchg
add
je
push
add
add
add
int3
add
fsubr
bound
mov
add
add
insb
jle
add
add
mov
lea
pop
mov
push
inc
pop
add
push
push
push
push
lea
push
lea
push
call
sahf
jmp
add
add
xchg
mov
add
lret
add
jne
add
add
add
add
add
jno
add
add
add
clc
mov
test
lods
mov
lea
pop
push
push
push
dec
pop
push
push
push
push
lea
push
lea
push
call
add
add
add
stos
add
in
in
add
xchg
test
lret
flds
add
test
mov
arpl
scas
sarb
mov
scas
fiadds
add
rolb
add
nop
pop
mov
add
mov
pop
mov
pusha
insb
jl
xchg
lret
je
fmull
pop
push
push
shr
pop
movl
addl
push
push
lea
push
push
push
call
add
xchg
aam
pop
mov
add
add
add
add
fsub
lret
mov
add
lds
add
imul
add
pop
stos
push
add
add
call
int
mov
outsl
mov
loope
add
in
fldl
cld
push
addb
add
repnz
sti
jae
add
mov
test
mov
lea
pop
test
je
push
lea
push
call
add
roll
add
add
addl
add
pop
push
insb
mov
add
add
add
fdivrs
mov
rol
push
add
lcall
lea
pop
mov
push
sub
shl
pop
pop
push
shl
pop
pop
pop
push
lea
push
lea
push
push
push
push
call
mov
sbbb
add
shrb
fsub
loope
scas
icebp
out
addr16
add
cltd
mov
mov
add
mov
add
mov
xchg
in
add
mov
add
add
add
xchg
add
add
loopne
add
mov
add
pop
mov
lea
pop
pop
push
push
push
push
push
push
push
push
push
call
add
xchg
add
add
movsl
in
add
mov
incb
add
int3
add
iret
add
add
incb
add
add
jmp
pop
filds
in
add
adcb
sar
add
mov
mov
mov
push
mov
add
add
jmp
mov
lea
pop
leave
push
pop
ret
push
push
xor
pop
mov
push
sub
pop
add
push
lea
push
lea
push
push
lea
push
lea
push
push
call
cmpsl
jge
add
add
movsl
push
add
add
shr
outsl
mov
pushf
aad
jbe
add
xchg
in
xchg
pop
ja
add
add
loope
add
outsl
xchg
lds
pop
popa
hlt
enter
mov
data16
push
push
push
sub
rol
xor
not
pop
push
push
push
lea
push
push
push
push
call
movsl
add
add
add
mov
flds
test
jo
add
test
fdivr
lods
add
add
hlt
mov
mov
add
int
add
mov
in
lds
rcrb
loopne
mov
add
in
jno
add
fldenvs
add
pop
push
push
lea
pop
testl
addl
push
push
push
push
call
ja
jge
jmp
mov
mov
mov
pop
mov
add
mov
mov
mov
add
in
add
lds
add
or
add
add
jmp
mov
lea
int3
jp
mov
loope
rcrl
add
push
mov
out
test
jcxz
pop
mov
adc
add
dec
sti
call
add
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
add
int3
jle
xlat
add
pop
add
pusha
in
arpl
enter
push
cli
arpl
add
add
fldl
pushf
adc
out
jnp
stos
mov
add
cmc
cwtl
rcll
in
add
mov
add
jge
mov
lea
pop
pushl
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
loope
add
add
addr16
test
push
fcompl
add
mov
add
mov
add
push
add
add
add
add
add
ja
add
xchg
add
xorl
mov
scas
stos
xchg
aad
std
les
add
scas
mov
mov
lea
pop
push
push
lea
not
pop
call
cmpl
jne
push
ror
add
pop
pop
push
lea
push
push
push
call
lea
popf
add
cmpsl
add
add
add
add
jmp
add
mov
add
sar
jb
mov
pop
add
add
add
cld
imul
cwtl
mov
add
push
jo
mov
add
popf
mov
add
add
xchg
jb
loopne
add
icebp
add
cmpsb
repnz
lea
pop
pop
push
push
lea
push
push
push
push
call
in
add
pop
add
xchg
push
add
lea
in
pop
mov
xchg
jle
loop
add
add
cltd
loope
sti
add
add
add
add
cli
mov
add
xchg
fildl
add
loopne
add
mov
pop
jl
jmp
loope
add
xchg
loope
add
shr
mov
mov
lea
pop
pop
pop
push
push
push
push
push
push
lea
push
call
ljmp
add
out
stos
insb
pop
mov
xchg
mov
hlt
pop
mov
movsb
add
stos
arpl
push
push
fwait
mov
add
scas
hlt
pusha
testl
out
add
sbb
leave
ret
push
not
pop
push
push
lea
push
push
lea
push
push
call
mov
add
mov
je
jo
add
into
mov
add
add
add
add
add
fwait
push
add
cmc
jnp
frstors
jnp
fs
cld
xchg
add
addr16
cmc
add
fmull
jge
add
mov
adc
mov
add
push
inc
xor
ror
pop
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
imul
movsl
mov
lods
add
add
mov
jle
mov
imul
mov
pop
fadds
mov
add
pop
push
add
add
mov
add
mov
add
add
in
add
pusha
and
push
push
inc
shl
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
bound
pusha
je
mov
add
mov
lcall
push
js
mov
sbbb
loop
pop
je
ja
add
pop
enter
fucomip
movsb
out
in
add
add
push
add
iret
cwtl
test
pop
add
xchg
add
add
jl
jae
sbbb
jno
pop
leave
add
add
addb
in
sarb
lock
lea
pop
push
movl
push
ror
lea
ror
lea
pop
push
call
push
inc
sub
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
lods
in
pop
cmpsl
pushf
int
add
les
cwtl
add
sub
xchg
xchg
test
int
ljmp
mov
js
popa
cmpsb
add
lds
js
add
push
pop
movsl
lahf
jecxz
jbe
add
add
lret
icebp
cwtl
rolb
in
enter
outsl
mov
pushf
add
fildl
iret
xchg
repnz
mov
lea
pop
call
push
inc
not
pop
subl
cmpl
jne
push
add
ror
ror
pop
pop
push
add
sub
pop
pop
pop
push
lea
push
push
push
lea
push
call
pusha
lret
xchg
jae
mov
data16
add
popf
jbe
arpl
jecxz
xchg
add
add
add
add
pop
shr
add
movsb
jp
add
iret
mov
shl
mov
add
ljmp
add
add
addr16
pop
leave
push
push
push
push
push
push
push
push
push
push
call
fldt
fnstenv
add
cmpsb
jl
out
xchg
add
add
add
add
test
in
clc
cmpsb
add
add
loopne
pusha
xchg
ja
sahf
lds
cwtl
add
add
add
jno
mov
add
rcr
add
push
rorl
mov
arpl
mov
lea
pop
ret
push
sub
pop
push
mov
push
sub
ror
pop
add
push
push
push
push
push
lea
push
call
std
add
add
mov
add
add
addr16
xchg
mov
add
add
add
push
testl
mov
shll
add
test
mov
lea
pop
push
push
shr
sub
pop
push
push
push
not
sub
pop
push
push
rol
pop
mov
lea
push
add
xor
lea
pop
sub
mov
push
shr
inc
pop
shr
push
add
rol
rol
sub
pop
add
push
lea
push
push
lea
push
push
push
lea
push
call
rorl
fadds
xlat
mov
leave
mov
add
mov
add
add
mov
pop
lret
jmp
shl
add
loopne
add
arpl
add
push
add
add
cmpsl
mov
pop
mov
lea
pop
mov
push
push
push
push
push
call
add
jl
add
add
ljmp
arpl
into
lret
add
add
jle
mov
jle
add
fsub
scas
add
xchg
addb
js
stc
add
mov
lea
pop
mov
push
sub
add
sub
sub
pop
add
add
push
sub
lea
sub
pop
mov
mov
push
not
pop
cmp
jne
cmp
jne
push
xor
add
inc
pop
mov
movl
push
rol
not
pop
jmp
mov
push
sub
pop
mov
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
rorl
data16
mov
fadds
popa
add
cltd
pop
add
add
add
mov
fbld
add
mov
jns
subb
add
nop
add
loop
cld
lea
pop
sub
jne
push
push
push
push
lea
push
push
push
push
push
call
mov
add
add
add
testb
add
mov
out
add
mov
aam
xlat
shlb
add
pop
lods
cmpsb
jp
add
add
mov
lea
pop
mov
movl
push
push
push
push
push
push
push
call
xchg
scas
leave
cld
add
add
add
loopne
push
loopne
add
pop
add
pop
xchg
add
add
jecxz
push
add
add
clc
shlb
mov
add
add
add
mov
fsubr
cmc
push
mov
xchg
add
cmp
addl
aam
bound
jmp
push
lea
xor
pop
mov
mov
push
push
lea
push
lea
push
push
push
push
call
add
rol
add
add
jge
mov
insb
add
mov
add
out
in
pop
gs
test
pop
xlat
add
hlt
add
fidivl
mov
mov
add
pop
mov
sahf
add
add
add
add
pop
jle
xlat
fsubrl
add
add
mov
mov
mov
add
sti
add
pop
jecxz
mov
lea
pop
cmp
jne
mov
push
dec
sub
rol
pop
movl
jmp
push
push
push
lea
push
push
push
push
push
call
mov
cli
fcomps
out
cmc
push
mov
in
add
xchg
fnsave
push
adcb
add
add
jecxz
pop
xchg
add
lret
subl
jae
ljmp
fildl
add
add
cmc
add
pop
jne
ret
rolb
in
add
add
add
add
add
jl
cld
lea
pop
mov
push
inc
lea
ror
pop
cmpw
jne
push
xor
add
pop
mov
push
sub
xor
pop
movl
jmp
push
lea
push
lea
push
lea
push
push
push
push
push
call
test
cld
add
nop
sahf
aam
push
add
add
jno
ja
add
clc
push
add
add
push
add
add
lahf
add
push
addr16
add
xlat
add
add
add
lods
mov
add
add
roll
addr16
mov
mov
add
fisubl
lcall
popa
and
pushl
push
push
push
push
call
popf
iret
add
sar
lods
lods
add
add
jge
add
mov
mov
add
leave
add
repnz
mov
adc
add
add
ficomps
test
pop
data16
push
xchg
add
gs
mov
xchg
xchg
add
ror
jnp
movl
jne
arpl
clc
add
lea
pop
pop
push
not
inc
pop
mov
mov
push
push
push
push
call
add
add
add
add
pop
lods
popf
jno
jge
fs
lock
lods
add
test
sti
fsubrl
aad
scas
push
je
push
add
enter
add
insb
add
out
test
add
cld
lea
pop
mov
push
push
push
or
not
add
lea
add
add
sub
sub
add
pop
shr
pop
push
push
lea
push
push
push
push
push
call
add
add
movsl
mov
add
movsl
add
add
add
jp
add
std
scas
mov
lods
test
add
jne
outsl
add
mov
add
add
add
push
loopne
mov
rorb
out
add
scas
pop
ja
cltd
popa
leave
mov
lea
pop
push
call
push
not
shr
not
not
pop
cmpl
je
push
push
add
inc
shl
push
or
inc
add
shr
ror
ror
sub
inc
pop
shr
pop
push
push
push
push
push
lea
push
push
push
push
call
add
jp
pop
les
mulb
add
add
jmp
jp
mov
cli
mov
addr16
loope
mov
scas
xchg
xchg
add
pop
push
call
push
sub
pop
cmpl
je
push
push
lea
add
sub
push
sub
add
sub
not
sub
shl
pop
ror
lea
lea
pop
push
inc
shl
xor
pop
push
call
push
push
push
lea
push
push
push
lea
push
push
call
test
filds
pop
add
mov
fiadds
mov
add
cltd
add
xchg
pop
add
mov
imul
add
xchg
mov
lock
ror
stos
test
add
add
jle
add
lods
fiadds
mov
imul
add
int3
lea
mov
mov
cld
lea
pop
cmpl
je
push
push
dec
xor
push
xor
add
sub
sub
pop
add
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
xchg
add
add
imul
mov
jecxz
test
roll
fstpt
aam
add
add
div
shl
add
pop
add
add
mov
shl
xchg
popf
mov
lea
pop
push
call
push
push
push
push
push
push
push
call
xchg
mov
mov
outsl
add
add
addb
addb
mov
add
int3
mov
mov
add
jae
mov
add
insb
mov
pop
add
add
sarl
mov
jnp
movl
pop
addb
lret
cwtl
int
fmull
cmp
test
push
add
push
push
ror
shl
add
push
or
inc
add
sub
add
sub
sub
not
rol
lea
pop
rol
dec
pop
push
sub
ror
pop
push
push
xor
shr
rol
inc
pop
call
push
xor
dec
sub
pop
cmpl
je
push
push
rol
push
or
inc
add
rol
sub
pop
add
rol
pop
push
lea
sub
pop
push
push
rol
inc
shr
pop
call
push
ror
sub
pop
cmpl
je
push
push
inc
push
push
pop
add
shl
add
shl
sub
lea
ror
xor
pop
add
rol
pop
push
lea
push
lea
push
push
push
push
lea
push
push
call
leave
lahf
insb
test
arpl
loop
xchg
movb
out
add
add
jb
add
pop
popl
add
iret
add
mov
jo
hlt
add
add
add
mov
add
fcoms
add
cli
fadds
add
in
add
add
add
add
enter
popa
mov
jmp
mov
lea
pop
push
call
push
rol
sub
pop
cmpl
je
push
push
inc
lea
sub
push
sub
add
sub
pop
add
dec
inc
pop
push
push
push
push
lea
push
push
push
call
add
add
add
bound
add
add
jno
cli
add
mov
mov
jl
add
push
bound
mov
sarl
shrb
addr16
push
call
push
push
push
push
push
push
call
enter
mov
pop
pop
inc
lds
in
xchg
nop
loopne
test
add
mov
pop
add
js
in
push
xchg
add
mov
shll
cli
push
js
mov
add
mov
add
add
jnp
add
js
lret
mov
out
xchg
pop
mov
imull
add
gs
scas
mov
lea
pop
cmpl
je
push
push
ror
inc
sub
push
sub
add
shl
not
sub
inc
pop
not
pop
push
dec
shl
pop
push
push
dec
ror
sub
pop
call
push
xor
add
add
pop
cmpl
je
push
push
xor
push
and
add
shl
sub
sub
shr
shr
add
pop
xor
ror
shr
pop
push
push
lea
push
push
push
call
lds
add
add
in
pop
test
add
add
mov
jl
test
mov
add
jns
add
cmc
fstpl
xchg
cld
imul
icebp
add
add
xorl
lea
pop
push
push
sub
shl
ror
pop
call
cmpl
je
push
push
ror
inc
push
xor
add
sub
sub
not
shl
sub
pop
add
inc
pop
push
push
lea
push
push
call
fcomps
add
add
idivb
push
add
int
outsl
pop
add
add
add
lret
add
and
mov
nop
add
xlat
add
rclb
fwait
add
mov
mov
lea
pop
push
call
push
push
push
lea
push
push
push
lea
push
call
add
xchg
outsl
out
push
add
pushf
test
add
add
push
rcrl
add
ljmp
rcl
add
nop
add
add
add
add
outsl
mov
push
add
into
roll
add
add
pop
loop
bound
lea
pop
cmpl
je
push
push
rol
push
push
pop
add
shr
xor
xor
sub
shr
pop
pop
push
push
lea
push
push
push
call
mov
push
stos
add
jecxz
add
add
frstpm(287
fisttps
add
add
xchg
add
jl
std
jno
jle
std
jp
fdivs
xchg
mov
add
add
mov
test
adc
push
push
shr
lea
lea
pop
call
push
add
pop
cmpl
je
push
push
shr
shl
dec
dec
push
sub
add
add
rol
sub
rol
add
add
shl
pop
lea
xor
sub
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
scas
movsl
jno
add
add
add
pop
add
add
cwtl
cwtl
mov
mov
add
mov
popf
add
add
lret
cld
add
pop
test
add
test
mov
je
add
xchg
add
add
jnp
jge
mov
fldl
add
mov
mov
lea
pop
push
call
push
rol
pop
cmpl
jne
push
not
dec
sub
pop
mov
push
sub
add
pop
movl
push
not
xor
pop
jmp
push
rol
sub
add
shl
pop
xor
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
clc
add
add
add
push
xchg
movsl
mov
add
clc
out
push
add
scas
mov
add
push
stc
xchg
out
add
add
fildl
imull
xchg
in
pop
jbe
fisttps
pop
pop
push
push
push
call
pop
mov
mov
xchg
insb
xchg
add
addb
mov
add
push
cmc
fstpt
add
cli
push
loop
jno
lods
ja
arpl
addb
add
outsl
xchg
pusha
mov
lea
pop
pop
push
dec
rol
inc
pop
pop
push
push
lea
push
push
call
jb
add
int3
add
lods
add
nop
enter
push
mov
add
lea
add
add
ljmp
add
add
lods
push
mov
mov
lret
mov
lahf
fs
mov
add
cld
lea
pop
leave
push
push
call
add
add
add
gs
add
xchg
loop
add
add
add
cmpb
jle
shlb
sahf
out
imul
sti
add
pop
data16
add
jb
mov
mov
add
add
addl
add
add
add
add
jns
add
add
nop
add
add
lret
add
ja
add
mov
or
or
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
out
add
cld
add
push
add
mov
mov
cli
mov
add
push
xchg
mov
add
push
add
add
insb
into
jmp
add
cmc
add
add
jb
push
popl
add
jo
add
test
lcall
jb
add
add
add
fadd
test
cld
jns
mov
lea
pop
mov
push
shl
rol
lea
pop
add
push
shr
not
shr
pop
cmpl
jne
push
push
lea
shl
push
and
add
ror
not
ror
sub
sub
pop
shr
sub
not
pop
push
push
push
lea
push
push
lea
push
push
call
add
popa
out
add
add
add
insb
add
add
mov
jo
push
mov
icebp
in
mov
jmp
popf
add
mov
lea
pop
pushl
push
push
call
add
test
xchg
aad
jae
mov
into
pop
add
add
xchg
gs
fadds
mov
add
lret
add
push
fs
call
ja
add
mov
out
fdivrl
test
add
jne
mov
add
lds
add
push
mov
lea
pop
call
push
ror
add
pop
push
push
push
push
call
data16
push
mov
out
add
cmc
sahf
aam
lcall
subl
rolb
aad
add
add
add
xchg
mov
jge
add
int3
add
into
mov
add
add
add
xchg
add
movb
hlt
lea
pop
call
push
pop
jmp
push
xor
ror
pop
cmpl
je
push
push
push
push
lea
push
push
push
push
push
call
notl
mov
add
incb
js
add
hlt
add
imul
lcall
xchg
jns
enter
faddl
mov
fwait
add
add
imul
add
mov
std
jp
add
add
add
test
xchg
push
add
xchg
xchg
jbe
jae
les
jge
add
add
push
push
push
push
push
push
push
push
call
pop
add
clc
push
repnz
shlb
add
orb
add
push
add
pop
cli
add
pushf
sarl
mov
mov
lds
jecxz
mov
jb
pop
add
add
mov
loop
bound
add
push
out
out
push
rclb
push
add
add
fistpl
add
add
mov
lea
pop
leave
push
push
push
push
push
push
lea
push
call
add
flds
gs
andl
fiadds
mov
sarl
mov
imul
je
add
out
add
push
add
outsl
add
pop
add
push
push
push
push
lea
push
push
push
push
call
mov
add
add
into
add
add
push
add
ja
xchg
add
clc
add
add
add
scas
mov
jle
add
je
add
add
xchg
lock
lret
xchg
add
add
loop
add
add
incb
add
int3
lea
pop
pop
pop
push
push
push
push
push
push
push
call
cwtl
jmp
lock
add
fdivrl
push
test
mov
jns
aad
movsl
test
fmul
loopne
test
add
add
add
mov
addr16
push
pusha
out
loope
add
jle
add
aam
sahf
arpl
fxch
add
add
add
mov
mov
arpl
pop
push
add
shl
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
arpl
add
add
stos
add
add
bound
test
add
add
loop
mov
mov
add
cmc
add
add
add
add
sahf
cmpsb
jb
mov
add
popa
add
add
test
mov
je
rcll
add
add
pop
leave
add
push
dec
sub
pop
ret
push
rol
ror
pop
jmp
push
shr
pop
cmpl
jne
push
push
xor
inc
not
push
and
add
add
shr
sub
add
sub
pop
dec
dec
dec
pop
push
sub
pop
pushl
push
add
pop
call
push
lea
push
push
call
mov
add
add
add
xchg
add
movl
loopne
ljmp
lret
clc
movsl
mov
stc
lret
pop
hlt
jge
or
xlat
mov
flds
add
in
mov
add
push
add
xchg
mov
add
fsub
add
call
lea
pop
push
call
push
add
sub
pop
jmp
push
push
push
push
push
push
push
push
call
add
add
test
arpl
add
call
scas
add
add
pop
xchg
out
add
shlb
xorb
pop
fisubrl
nop
mov
mov
jecxz
nop
popa
call
add
add
add
add
out
mov
pop
cmpl
jne
mov
push
not
add
shl
dec
pop
mov
push
push
push
add
push
or
inc
add
sub
pop
not
rol
add
pop
push
add
pop
pushl
push
xor
pop
call
push
push
call
cltd
int3
pop
add
xlat
add
js
out
loope
jle
add
pop
add
nop
add
imull
test
add
jmp
add
ret
add
add
mov
leave
add
add
pusha
add
scas
xchg
add
add
add
jp
mov
jbe
add
stc
ja
jmp
add
mov
lea
pop
push
push
sub
shr
pop
call
push
push
ror
lea
inc
push
push
pop
add
sub
shl
sub
pop
rol
lea
not
pop
push
add
pop
pushl
push
push
lea
push
push
push
call
js
xchg
add
add
lcall
jbe
fnstsw
add
push
add
hlt
imul
mov
hlt
add
jl
cli
add
jne
add
fldpi
scas
add
test
fsub
cltd
in
add
negb
xchg
mov
mov
add
add
lea
pop
call
push
push
push
push
push
call
add
add
jo
add
les
add
add
add
out
add
add
ja
cli
lods
add
add
add
add
mov
mov
gs
add
bound
call
push
push
rol
rol
inc
push
xor
add
sub
sub
ror
sub
sub
ror
not
pop
lea
pop
push
xor
shl
pop
pushl
push
lea
push
push
lea
push
push
call
add
add
out
add
add
shll
int3
ret
add
mov
xchg
add
mov
ja
jle
jns
lods
mov
jge
fidivs
add
push
iret
jae
arpl
cmpsl
pop
add
mov
push
push
push
add
jo
into
test
data16
call
call
push
inc
pop
lea
push
push
shl
push
push
pop
add
shr
sub
sub
sub
lea
pop
rol
sub
xor
pop
push
sub
not
pop
pushl
push
rol
sub
ror
pop
call
push
ror
pop
push
push
push
push
call
repnz
aam
add
pop
push
push
pop
xchg
jne
jb
add
mov
in
fdiv
mov
mov
add
jne
into
add
mov
orl
data16
jge
add
mov
add
add
pop
cwtl
incb
stos
mov
int3
mov
lea
pop
call
push
push
dec
lea
dec
push
xor
add
lea
shr
sub
shr
not
add
pop
add
pop
push
push
call
push
add
data16
in
add
add
add
add
mov
mov
call
add
jnp
push
les
mov
ror
stos
stos
popa
add
mov
popf
repnz
add
mov
lea
pop
pushl
call
push
push
push
push
push
call
add
add
jns
xchg
pusha
in
nop
add
xchg
add
lea
add
mov
pop
add
mov
popl
loopne
add
add
nop
push
mov
mov
add
stos
mov
lea
pop
call
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
aad
add
add
push
pop
pop
add
add
xchg
roll
lret
lret
add
scas
cli
js
push
add
lods
push
add
ficoml
clc
scas
fiaddl
add
add
rcl
adcl
lods
movsl
add
add
rolb
scas
add
mov
lea
pop
mov
push
push
inc
not
shl
xor
push
and
add
xor
rol
shr
add
sub
shl
ror
pop
inc
shl
pop
push
lea
push
lea
push
lea
push
push
push
push
call
jnp
ja
int3
add
js
int3
cmc
mov
arpl
mov
arpl
jmp
pushf
add
movsb
iret
jbe
jmp
jae
add
mov
add
add
add
mov
lods
add
arpl
add
add
ljmp
add
mov
lea
pop
pushl
call
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
jns
add
flds
fwait
add
xchg
int3
std
ret
add
jno
jp
mul
xlat
sahf
enter
mov
add
pop
sti
add
pop
call
add
add
int3
pop
cltd
push
jp
add
test
shrb
add
fs
mov
cmc
leave
in
xchg
add
mov
jnp
cmpsb
pop
fnstcw
add
sub
add
icebp
pop
call
push
push
sub
not
xor
push
xor
add
add
sub
pop
rol
pop
push
lea
push
call
pop
lahf
add
stos
add
mov
xchg
pop
gs
les
out
add
fcoms
cli
lods
add
fadds
cld
add
repnz
add
add
add
cwtl
ja
cmpsl
jge
out
xchg
les
pusha
or
jne
push
ror
pop
call
push
push
push
call
add
mov
mov
add
mov
leave
test
jae
add
in
pop
xchg
add
loop
movsb
hlt
adcb
add
add
add
add
movb
mov
add
roll
repnz
add
add
out
loope
xchg
subb
nop
add
jnp
enter
fmull
jne
call
push
push
dec
push
xor
add
dec
sub
sub
pop
not
shr
lea
pop
push
add
lea
ror
dec
pop
pushl
push
push
call
add
add
fadds
push
add
mov
add
movsb
jmpw
lret
add
add
add
add
mov
repnz
scas
fiaddl
cmpb
jnp
push
mov
mov
pop
std
rol
test
push
lahf
add
add
add
pop
rorb
pop
call
push
push
add
push
push
pop
add
xor
sub
inc
sub
shr
pop
shr
add
shr
pop
push
push
inc
add
push
or
not
add
add
sub
rol
pop
inc
lea
add
pop
push
dec
inc
pop
call
pop
push
dec
pop
dec
jne
push
lea
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
xchg
add
add
icebp
adcl
iret
out
shl
cld
loope
jge
popf
loopne
add
stos
fldl
pop
cltd
fdivs
add
pusha
add
addb
pop
add
jae
arpl
add
add
fcoml
pop
lds
int
add
leave
gs
add
adcl
add
outsl
add
add
add
add
add
ret
js
cld
lea
pop
call
jmp
push
add
pop
call
push
push
rol
shl
push
xor
add
lea
not
add
sub
inc
pop
dec
pop
push
add
pop
pushl
push
push
push
push
push
lea
push
push
call
add
leave
add
add
add
add
int3
cld
loopne
push
add
add
add
push
cli
mov
pop
add
loopne
add
add
xor
ja
add
mull
add
fldl
add
in
add
hlt
lea
pop
call
push
push
call
mov
add
pop
data16
mov
mov
jecxz
jle
add
add
mov
cmpsl
add
add
add
decb
insb
mov
aam
bound
xchg
xchg
add
scas
mov
int
hlt
mov
negb
movl
jecxz
imul
add
in
add
add
pusha
add
mov
insb
mov
lea
pop
push
call
push
shr
pop
mov
push
rol
xor
pop
lea
push
push
ror
not
push
or
not
add
inc
lea
shr
sub
sub
lea
pop
pop
push
inc
pop
pushl
push
dec
pop
call
push
xor
pop
push
call
push
push
rol
push
sub
add
sub
sub
sub
rol
ror
pop
not
lea
pop
push
lea
push
push
push
call
filds
add
hlt
js
imul
mov
aad
in
add
mov
add
lret
call
out
mov
add
jne
push
xchg
movsb
add
lahf
add
add
stc
add
xorb
push
adc
jne
call
push
push
call
mov
mov
pop
add
mov
add
out
xlat
add
loope
popf
jae
popf
xlat
add
aad
jne
add
hlt
add
insb
movsb
add
leave
hlt
stos
mov
icebp
mov
ljmp
stos
mov
testl
inc
cld
push
ror
add
pop
lea
push
push
add
add
push
push
pop
add
shr
sub
lea
rol
pop
rol
sub
ror
pop
push
sub
pop
pushl
push
push
push
push
push
lea
push
push
call
shrl
add
xlat
test
add
out
xchg
scas
jnp
add
jno
test
popf
add
xchg
mov
xlat
add
lods
clc
xchg
add
addr16
add
add
out
mov
clc
stc
shrb
add
out
scas
add
testb
push
jle
jmp
cmpsl
add
imul
fwait
add
add
sahf
cmpsb
mull
mov
lea
pop
call
push
lea
pop
lea
push
push
sub
xor
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
fsubs
add
jns
add
cmpsl
mov
add
add
lods
loopne
sti
roll
stos
mov
add
add
ret
scas
test
out
jmp
add
xchg
loope
add
cli
mov
add
add
in
add
add
jne
jb
add
add
add
add
add
out
add
ljmp
pushl
push
push
ror
add
not
push
xor
add
sub
xor
rol
pop
dec
lea
rol
ror
pop
push
sub
pop
push
push
push
push
call
mov
add
xlat
aam
movsb
popl
aam
add
add
add
jge
call
popf
add
add
roll
mov
add
cltd
add
xchg
pop
in
stos
mov
add
sbbl
in
faddl
add
fiadds
scas
icebp
add
pop
jno
jnp
fiadds
mov
cmpsb
cmc
add
stos
add
loopne
push
jmp
add
xlat
rolb
jno
add
add
mov
lea
pop
call
push
push
not
add
add
push
xor
add
rol
dec
not
not
sub
inc
dec
pop
pop
push
lea
push
push
push
lea
push
push
push
push
call
mov
jo
hlt
out
int3
add
add
ja
mov
lds
add
add
rolb
rolb
add
xchg
in
pusha
mov
lcall
ljmp
sarl
aam
bound
pop
pushl
push
push
push
push
push
push
push
push
call
jae
add
add
xchg
ja
cltd
adcl
add
xlat
lret
pushf
add
test
xchg
add
popf
push
outsl
std
iret
je
arpl
add
add
add
mov
ljmp
fdivrs
bound
pop
call
push
push
push
call
add
pop
addb
add
add
cltd
add
add
popf
jne
add
add
add
add
mov
add
add
add
add
add
test
leave
mov
push
lea
pop
push
push
push
push
call
add
lret
add
add
scas
mov
lea
cld
add
add
addb
lods
sahf
add
insb
mov
add
add
sarb
leave
push
pop
add
add
loope
lret
je
mov
add
add
add
into
out
lret
fstp
jb
mov
lea
pop
call
push
push
inc
push
or
inc
add
xor
sub
sub
pop
sub
pop
push
lea
inc
shr
pop
pushl
push
lea
push
call
jmp
cld
stos
lea
push
add
add
add
add
imul
jmp
lods
add
add
add
push
push
add
lret
js
mov
pop
mov
pop
popa
cli
lahf
pop
add
or
xchg
push
inc
pop
jmp
pushl
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
stos
add
add
out
aad
cld
pushf
add
add
out
xchg
xlat
push
popf
pop
roll
test
mov
add
ljmp
repnz
shl
pop
mov
add
js
add
push
hlt
add
scas
call
mov
add
fnstcw
mov
add
add
add
les
pop
mov
push
push
push
push
push
push
call
loope
icebp
mov
add
stos
imul
mov
add
mov
pop
add
pop
jmp
shll
add
add
add
xchg
mov
add
add
jge
adcb
mov
mov
lea
pop
jmp
push
push
sub
push
and
add
sub
inc
sub
sub
rol
pop
dec
xor
ror
pop
push
inc
shr
shl
shl
pop
pushl
push
push
push
push
push
push
push
push
call
add
add
jno
scas
movsl
add
add
cmc
negl
jl
mov
popa
out
stos
stos
cmpsb
jo
add
test
add
jb
mov
push
add
add
mov
in
add
add
icebp
jno
add
add
notb
cltd
test
add
add
add
addr16
test
lret
lea
pop
call
push
push
push
call
arpl
add
popl
add
jae
push
add
jmp
aam
xchg
pop
ret
add
push
xchg
loope
shll
mov
int
into
popa
xchg
test
add
add
add
add
lods
incb
xchg
ja
add
add
stos
add
nop
add
jo
add
mov
repnz
mov
lea
pop
call
push
push
xor
shr
not
push
push
pop
add
xor
sub
dec
not
pop
sub
sub
ror
pop
push
rol
xor
pop
pushl
push
lea
push
call
lock
int3
mov
int
out
xchg
je
fildl
add
add
xchg
mov
jno
rolb
faddl
pop
lret
out
jecxz
mov
add
ja
jne
xchg
pop
add
movsb
popa
add
pop
xchg
xchg
mov
addl
add
popa
or
movsl
adc
add
rcrb
call
push
lea
push
push
push
push
push
push
lea
push
call
addl
add
cmc
ret
cmc
xchg
add
jns
add
popf
faddl
in
mov
call
pop
jns
add
add
add
mov
add
mov
add
addl
pushf
add
jp
add
rcll
mov
add
out
sbbl
add
in
add
mov
lea
pop
leave
add
push
push
push
push
push
push
call
insb
lock
lret
loop
mov
int3
pop
cwtl
out
add
cmc
add
add
mov
scas
add
hlt
add
ror
mov
xchg
push
pop
add
add
add
add
mov
lea
pop
pop
push
xor
inc
shr
pop
pop
push
lea
dec
lea
dec
pop
pop
push
ror
add
xor
pop
pop
push
push
push
push
push
call
xchg
mov
jbe
add
arpl
add
cmpsl
add
push
jecxz
mov
cmc
stos
pop
int3
push
fiadds
add
repnz
mov
add
out
subb
add
add
add
lds
add
call
aam
bound
leave
add
push
add
dec
pop
ret
leave
push
push
lea
push
push
lea
push
push
push
lea
push
call
cmpsb
lods
cli
pop
jle
int
add
add
cwtl
add
add
movsb
add
add
shlb
xlat
add
testl
jmp
add
pop
jecxz
loopne
add
mov
in
add
mov
out
movsb
xchg
lret
loope
addl
add
scas
add
mov
push
jle
test
mov
movsl
roll
in
push
hlt
lea
pop
ret
push
add
pop
push
mov
push
ror
add
pop
cmpl
jne
push
push
call
add
hlt
add
rolb
add
add
mov
test
add
add
jo
int3
add
lods
mov
in
insb
mov
arpl
test
add
lock
add
movb
add
add
add
mov
fldl
iret
jae
add
scas
add
add
add
add
push
add
pop
mov
int3
lea
pop
mov
push
add
inc
ror
pop
jmp
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
leave
mov
std
add
rol
add
leave
aam
cwtl
add
xchg
add
popa
je
aad
shll
cmpsb
ret
out
incb
cli
in
int3
sahf
mov
lds
add
add
jmp
cld
lea
pop
mov
and
push
sub
inc
add
pop
xor
push
sub
pop
xor
push
lea
push
push
push
push
push
push
push
call
add
fadds
add
sti
std
mov
into
loopne
aad
mov
add
add
fcoms
imul
add
ljmp
jo
add
add
fsubrs
popa
and
rolb
push
push
call
test
out
add
add
push
add
push
fnsave
xchg
mov
add
into
mov
add
subl
add
add
fbstp
add
repnz
add
mov
xchg
stos
mov
repnz
add
lea
pop
xor
dec
push
push
lea
push
push
call
pop
mov
movsl
ljmp
test
lock
add
mov
jno
xchg
lods
push
pusha
add
push
add
mov
imul
loop
loopne
cmc
fadds
add
pop
add
je
fs
jae
popf
cli
xchg
out
mov
jmp
add
add
int3
lea
pop
sub
push
add
pop
jmp
sub
push
lea
push
lea
push
push
call
jle
fcoms
add
add
scas
add
add
mov
stos
mov
add
add
jp
roll
add
add
scas
add
add
out
imul
jecxz
popf
add
movsl
add
add
add
lea
pop
pushl
push
push
push
push
push
lea
push
push
push
push
call
mov
in
stc
push
clc
ljmp
add
add
fs
movl
mov
lret
add
rolb
xchg
add
add
outsl
add
movsl
lea
xchg
mov
add
add
add
add
xchg
movl
mov
lea
pop
pop
push
push
lea
push
push
push
push
push
call
jmp
add
popa
fidivs
mov
add
mov
add
add
jbe
iret
mov
xlat
out
cmpsl
add
add
xchg
mov
mov
lea
pop
sub
cmp
jne
push
push
push
push
push
call
mov
mov
add
mov
mov
xchg
mov
add
add
bound
sarl
mov
push
add
in
aad
mov
add
mov
lea
pop
mov
push
push
push
lea
push
push
push
call
add
add
add
pop
mov
shl
ljmp
add
jle
add
add
add
shr
rcl
add
add
jmp
data16
xchg
mov
lea
pop
lea
push
push
push
push
push
push
push
push
call
mov
add
fistl
add
cmc
add
in
ljmp
in
push
je
mull
aad
lret
pop
lds
push
imul
add
mov
lea
pop
sub
push
push
push
push
push
lea
push
push
push
call
pop
mov
add
add
jae
lret
add
pushf
mov
add
add
add
popa
je
fwait
mov
mov
add
add
pop
jge
mov
add
pusha
add
add
test
pop
add
add
cmpl
jbe
popa
mov
lea
pop
mov
shr
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
cmpsb
mov
test
mov
cwtl
iret
add
xchg
jb
add
in
add
xchg
imul
js
mov
repnz
mov
cmpsl
mov
add
add
add
cwtl
ror
frstor
push
fdivl
sahf
clc
insb
add
and
enter
push
pop
pushl
pop
push
rol
xor
pop
shr
and
push
inc
add
pop
sub
cmp
jne
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
add
pop
mov
add
mov
add
push
add
int3
add
addr16
stos
div
add
add
add
jmp
jno
movsl
loopne
clc
cld
lahf
add
add
in
fdivrs
out
add
add
orb
leave
ret
push
push
call
mov
add
mov
fwait
scas
loopne
outsl
pushf
xchg
pop
mov
mov
push
xchg
add
add
add
fwait
mov
mov
add
add
mov
add
add
loopne
lret
test
test
int3
add
add
lcall
push
mov
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
jb
jnp
add
pushf
push
add
addb
std
add
jmp
add
add
loopne
insb
sti
sub
add
add
add
add
popf
pop
add
roll
movl
lock
pushf
or
add
insb
xchg
cmpsl
add
add
mov
lea
pop
add
push
ror
xor
pop
push
push
push
inc
add
add
ror
pop
push
push
push
push
lea
push
push
push
push
push
call
jo
popa
add
arpl
test
mov
pop
pop
out
leave
les
filds
clc
ror
add
stc
out
pop
jo
add
add
out
lret
jp
jmp
add
xchg
add
lea
pop
push
push
lea
push
push
call
add
out
mov
add
jnp
add
add
mov
add
test
jbe
add
cwtl
stos
scas
push
movsb
pop
add
imull
in
mov
fistl
add
pop
add
push
add
in
add
test
add
testb
add
in
add
jmp
add
into
nop
addl
fwait
pop
arpl
mov
add
pop
mov
push
lea
push
push
push
push
push
push
push
call
add
push
cli
scas
add
insb
cmpsb
fxch
jbe
push
ja
mov
aam
fidivs
mov
add
mov
add
add
add
add
jns
add
add
mov
jmp
add
mov
lea
pop
lea
sub
push
lea
push
push
call
mov
addb
mov
add
outsl
mov
icebp
sahf
int3
ja
add
add
aad
add
incb
cmpsl
xchg
fiadds
add
push
mov
add
add
pop
add
les
adc
incl
std
shr
pop
shr
push
sub
pop
add
push
not
not
add
pop
mov
push
not
dec
pop
add
mov
push
pop
add
xor
push
shr
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
lcall
cmpsb
push
xchg
movsl
add
add
jo
lret
shl
loopne
mov
lds
add
addr16
jecxz
jo
xchg
roll
out
add
add
add
roll
push
mov
jl
add
add
test
mov
add
fldl
mov
lea
pop
and
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
add
add
add
add
out
jo
call
add
add
lds
add
add
mov
into
jb
xchg
std
add
mov
add
pop
add
add
mov
loop
mov
call
movl
aam
bound
pop
rol
push
rol
pop
rol
push
inc
not
pop
xor
push
shr
sub
lea
pop
inc
cmpb
jne
push
push
lea
push
push
push
call
add
jmp
hlt
out
add
add
incb
cli
add
mov
mov
cmpsb
add
jecxz
loop
add
push
pop
loop
add
in
add
xchg
mov
call
jno
mov
les
inc
pop
ss
push
inc
ror
pop
cmp
je
push
push
call
cmpsl
ror
ja
negb
roll
add
pop
hlt
pop
jmp
aad
lds
add
add
jns
jge
pop
add
jns
add
mov
ja
add
add
rolb
mov
lea
pop
add
push
not
shr
lea
inc
pop
cmpl
jne
push
push
push
lea
push
call
les
mov
ljmp
lods
loop
movb
add
data16
cmpsl
mov
mov
xlat
int3
call
in
add
add
stos
add
jnp
add
lcall
xchg
add
add
add
add
mov
adc
rclb
sub
leave
mov
pop
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
jle
add
add
mov
pop
add
add
pop
loopne
add
enter
call
add
mov
xchg
roll
add
xchg
add
aad
jb
add
add
stc
movl
cltd
fwait
add
pop
jae
mov
shr
add
add
jbe
xchg
imul
add
pop
pop
push
add
ror
sub
pop
pop
pop
push
lea
push
push
push
push
call
mov
mov
push
mov
jmp
je
push
push
iret
jnp
into
add
gs
stos
cmpsb
add
mov
cmc
jl
fcompl
add
rcll
xchg
mov
lea
pop
pop
push
sub
pop
leave
push
sub
ror
add
shl
pop
ret
push
add
not
pop
mov
push
add
inc
pop
add
push
shl
sub
not
xor
pop
push
push
lea
pop
push
push
xor
add
pop
add
xor
push
push
push
push
lea
push
push
push
push
push
call
mov
add
imul
jle
add
push
add
add
into
add
mov
mov
add
mov
xchg
nop
add
xchg
add
pop
mov
movsl
rolb
jecxz
sti
add
imul
cld
add
pop
mov
mov
xchg
mov
jbe
mov
add
lods
mov
add
mov
lea
pop
add
testw
push
inc
pop
pop
pop
push
push
push
lea
push
lea
push
push
push
push
call
jae
add
roll
add
add
into
add
cmpsb
add
add
pop
mov
add
mov
mov
add
repnz
mov
pusha
add
fldl
add
add
pop
add
add
add
lret
mov
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
pop
add
pop
mov
mov
add
add
push
mov
stc
fadd
into
cltd
mov
lret
int3
add
add
add
add
mov
aam
xchg
add
add
add
lock
in
mov
lea
pop
call
push
push
call
add
popa
add
faddl
call
add
lods
mov
cwtl
flds
out
int3
scas
push
stc
add
mov
mov
mov
addb
xchg
lahf
jne
out
add
test
loope
add
add
mov
addb
mov
mov
cmpsl
std
loop
mov
pop
iret
add
bnd
add
pop
xor
pop
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
nop
add
sti
cli
sarl
pop
add
imul
mov
mov
add
push
add
add
call
fwait
add
incb
add
stos
xchg
fistl
add
mov
pop
push
push
stc
repnz
add
mov
add
jae
jbe
lret
add
movsb
add
add
cmpsb
add
add
add
mov
lea
pop
pop
push
add
not
sub
pop
pop
push
shl
dec
xor
pop
pop
push
lea
sub
pop
pop
push
shl
sub
pop
leave
push
push
lea
push
push
push
lea
push
lea
push
call
pop
mov
add
fcoms
call
jns
mov
test
vpcmpgtw
lock
fiaddl
fiadds
add
iret
add
add
add
add
mov
add
jae
aad
xchg
add
pop
mov
cmc
mov
add
add
add
xchg
add
mov
lea
pop
ret
push
push
lea
push
push
call
lds
add
jbe
sarb
add
add
lret
add
add
call
data16
in
add
add
jne
fists
add
add
pop
add
ffree
add
repnz
pop
int3
popf
add
add
add
xchg
add
out
mov
lea
pop
mov
push
not
rol
pop
add
push
push
add
lea
inc
pop
push
push
inc
xor
ror
inc
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
fwait
shll
add
add
cltd
add
int
push
add
add
add
xchg
add
js
add
add
add
add
mov
lea
pop
mov
push
push
push
call
add
fs
pusha
popf
call
add
jl
add
add
add
jbe
sahf
in
sti
add
add
cmpsl
add
xchg
ja
xchg
add
insb
cltd
sub
addr16
xchg
xchg
cltd
push
test
xchg
cld
into
call
add
add
lods
stos
pop
add
pop
pop
push
inc
pop
lea
push
lea
push
push
call
in
lods
popa
pop
add
pushf
add
lahf
roll
add
mov
sti
pusha
xlat
add
add
jae
xchg
icebp
add
test
add
loop
cmpsl
pop
add
mov
add
nop
add
je
andb
add
cltd
add
mov
pop
insb
add
flds
fsubr
xchg
mov
lods
add
xchg
int3
xchg
add
add
mov
pop
sub
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
loop
cmc
imul
mov
pop
lret
add
add
add
add
add
enter
xchg
sar
jmp
jl
add
mov
add
int3
add
pop
add
add
add
add
mov
lea
pop
mov
push
lea
push
push
push
push
push
lea
push
push
push
call
gs
lock
je
add
add
add
pop
xlat
mov
jl
rcrb
add
xchg
add
push
add
mov
negb
push
add
stc
push
add
fmul
testl
jp
mov
sti
cld
add
add
cli
push
and
shr
push
lea
ror
shl
pop
add
mov
push
dec
pop
add
push
push
lea
push
lea
push
push
lea
push
push
push
call
pop
add
mov
add
add
add
add
js
pop
mov
out
add
mov
les
mov
out
les
add
add
xorl
xchg
adc
add
add
call
xchg
scas
or
pop
add
div
nop
mov
add
add
mov
lea
pop
pushl
push
push
push
call
push
mov
repnz
add
add
add
add
leave
add
jne
stos
push
add
add
mov
add
add
add
add
out
pusha
pop
xchg
mov
lea
pop
popl
push
shl
ror
pop
mov
add
push
inc
xor
pop
xor
push
ror
sub
xor
add
pop
lea
push
ror
shr
pop
mov
push
add
ror
pop
add
push
lea
pop
xor
push
shl
pop
rol
nop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
rolb
push
aad
add
stos
push
jo
sahf
add
mov
mov
pop
add
add
add
xlat
add
xchg
add
xchg
add
pop
pop
ja
add
test
movsb
add
mov
mov
add
stc
rolb
imul
js
mov
xchg
pop
nop
xor
push
xor
rol
dec
ror
pop
nop
push
dec
xor
shr
pop
nop
push
add
pop
inc
push
push
push
lea
push
push
push
push
push
push
push
call
out
jp
add
add
mov
add
add
add
popa
incb
mov
ret
into
push
jmp
push
add
lret
add
cmpsl
add
stc
into
jae
mov
mov
add
mov
lea
pop
nop
push
inc
pop
nop
push
push
push
push
push
push
push
push
call
xchg
mov
fwait
add
add
sub
push
cmpsl
ret
popl
ljmp
add
fiaddl
jmp
stos
mov
add
add
add
sahf
pop
loopne
add
pusha
xchg
add
shlb
fmull
cmp
jne
push
shl
rol
pop
add
push
not
pop
nop
push
not
pop
nop
cmp
je
push
not
ror
xor
pop
nop
push
sub
ror
lea
pop
nop
push
add
add
add
pop
inc
push
push
push
lea
push
push
push
push
call
add
push
add
loope
add
jo
add
add
cmc
mulb
icebp
bound
insb
xchg
push
out
add
jne
add
add
jge
aad
add
scas
add
pop
movsb
xlat
imul
xchg
pop
pop
add
lret
mov
stc
push
fiaddl
lods
add
in
jmp
mov
sbb
nop
nop
push
inc
rol
pop
cmp
jb
xor
push
sub
pop
jmp
push
push
push
push
push
push
call
scas
xchg
push
mov
add
xorb
mov
add
add
mov
arpl
cld
mov
push
push
test
iret
mov
mov
jl
divl
add
lcall
fs
hlt
add
add
add
mov
lea
pop
mov
add
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
jns
imul
add
popa
cli
divb
flds
add
add
xchg
mov
loope
jae
add
cwtd
pop
incb
pop
in
in
test
out
mov
lea
pop
movzwl
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
add
mov
push
push
add
pop
add
jnp
add
jo
out
xchg
add
add
add
xchg
ljmp
rolb
sti
mov
add
add
add
ficoml
pusha
sub
inc
sbb
lea
push
push
lea
push
push
call
lcall
test
mov
outsl
add
add
add
jmp
stos
add
add
jns
loopne
xchg
add
add
fistl
lahf
cld
aad
fucomp
xchg
mov
push
add
add
add
jnp
lods
incb
fnstcw
add
add
pop
mov
lea
pop
add
push
sub
add
rol
pop
mov
push
shl
add
sub
pop
xor
xor
push
push
push
push
call
mov
add
outsl
jecxz
push
add
les
add
cwtl
add
jl
add
aam
mov
mov
jae
addb
add
shlb
jb
int
add
lea
pop
shl
push
xor
pop
xor
push
shl
add
pop
shl
push
push
lea
push
lea
push
lea
push
call
lcall
mov
xchg
jp
pop
pop
add
roll
xchg
mov
add
loopne
add
addr16
out
roll
add
add
add
arpl
mov
lea
pop
xor
shl
push
push
push
call
add
push
fidivrs
add
in
into
clc
push
add
add
add
mov
in
data16
stos
add
testb
pop
jmp
pushf
add
sti
mov
lret
mov
pusha
add
pop
shr
pop
push
cmpsl
add
popa
insb
out
shl
add
movsb
add
mov
pop
xchg
test
mov
add
pop
xor
push
push
lea
push
push
call
mov
add
jp
lods
jge
cmp
add
push
cmpsl
cld
fwait
mov
add
loop
add
mov
xchg
add
pop
xchg
add
lret
add
mov
add
arpl
lret
jge
mov
add
stc
add
add
sbbw
push
test
fldl
add
call
lea
pop
mov
push
push
push
push
lea
push
push
call
add
stc
add
push
add
aam
sarl
test
mov
bound
divl
js
push
add
mov
mov
roll
pop
scas
add
add
mov
add
clc
nop
xlat
mov
mov
aam
bound
pop
add
pop
push
push
push
push
push
push
push
call
add
add
add
add
add
add
add
push
std
jge
push
mov
add
add
lods
add
add
mov
ljmp
fstpt
mov
add
add
cmpsb
insb
jnp
into
add
rcll
bound
cltd
jmp
add
add
push
push
mov
lea
pop
pop
pop
push
xor
dec
shr
pop
pop
leave
push
dec
ror
pop
ret
push
push
push
call
cmpsb
add
cwtl
add
add
mov
popf
add
iret
lods
add
lock
xlat
add
testb
add
icebp
mov
add
xchg
cltd
mov
pushf
add
add
add
mov
icebp
movsb
xchg
push
jmp
bound
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
cwtl
js
add
ja
mov
into
loope
lret
divl
jns
sti
add
add
mov
add
stos
mov
add
cltd
add
add
add
add
xchg
cli
rcrb
dec
add
pop
push
push
sub
dec
inc
pop
push
push
push
call
add
mov
in
mov
jge
mov
mov
add
ret
jmp
std
mov
mov
add
mov
enter
mov
add
push
hlt
push
add
cld
pusha
mov
push
stc
movl
jno
add
pop
add
testb
add
testb
mov
lea
pop
push
push
shr
sub
shr
pop
mov
push
lea
push
push
push
push
push
push
call
lahf
into
add
add
push
lret
add
test
add
fadds
mov
add
xchg
mov
add
xchg
jmpw
shll
loope
aam
cltd
jb
xchg
add
add
add
jp
mov
mov
sbb
mov
push
not
pop
mov
push
inc
not
add
pop
test
je
mov
push
inc
pop
test
je
mov
push
inc
rol
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
add
add
add
fsub
xchg
mov
add
xchg
add
mov
fadds
add
add
andb
push
in
add
add
mov
lea
pop
mov
push
add
sub
xor
add
pop
inc
push
pop
cmp
je
test
je
push
lea
dec
pop
mov
push
lea
push
lea
push
push
push
push
call
lds
add
add
mov
add
add
add
mov
mov
push
imul
add
add
popf
cmpsb
mov
cmc
loope
xchg
jne
add
popf
pop
add
mov
jle
outsl
add
mov
mov
add
add
push
loop
mov
lea
pop
inc
push
not
add
not
pop
cmp
je
test
jne
push
shr
shl
pop
xor
push
add
sub
sub
pop
pop
push
push
lea
push
push
lea
push
call
add
ja
add
pop
add
mov
add
add
mov
enter
add
call
add
push
mov
insb
ret
out
add
add
add
les
xchg
mov
fldenv
mov
lea
pop
pop
push
push
push
lea
push
call
add
lret
push
cli
pusha
add
movsl
cli
add
cmpsl
add
int
stc
add
add
imul
add
lods
add
subl
add
fildl
add
cmpl
mov
ja
testb
popa
lods
mov
in
mov
lea
pop
pop
pop
push
ror
shl
inc
pop
leave
push
push
push
push
call
add
add
je
lret
add
pop
add
add
movsb
add
bound
fcoms
sti
add
add
test
push
add
xlat
add
jp
add
add
xchg
add
add
xchg
add
jl
lods
xchg
jp
jae
push
shll
roll
add
gs
nop
test
add
pop
ret
mov
push
not
pop
inc
push
pop
cmp
jne
push
pop
lea
push
dec
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
add
rolb
add
mov
add
int
add
shrl
hlt
add
add
fdiv
mov
mov
add
add
mov
fsubr
add
pop
test
je
push
inc
dec
add
shr
pop
mov
push
shr
pop
add
push
push
push
push
push
push
push
lea
push
call
add
add
add
aam
mov
test
add
add
add
ror
push
jle
add
ljmp
cld
mov
mov
rcrb
fdiv
mov
lea
pop
cmp
jne
push
lea
push
push
call
outsl
add
lcall
mov
roll
loopne
add
lahf
add
push
jnp
mov
add
stos
jns
add
add
add
pop
add
add
cld
lods
add
add
jo
xchg
pop
add
mov
lea
pop
mov
test
je
push
xor
lea
pop
mov
push
rol
pop
add
cmp
je
push
push
lea
push
push
push
push
push
push
push
push
call
out
jmp
jbe
add
add
push
add
je
mov
mov
add
data16
add
jecxz
popf
mov
add
add
add
add
jmp
in
pop
popf
add
jno
add
mov
mov
add
aad
mov
lea
pop
jmp
push
push
lea
push
push
push
push
push
lea
push
call
loopne
pop
add
clc
jmp
add
add
cld
mov
clc
push
addl
xchg
scas
add
jno
add
pop
mov
scas
add
xlat
add
in
add
sarl
jns
add
add
and
rclb
pop
push
lea
push
call
jne
add
lret
push
mov
gs
int3
mov
add
jecxz
add
mov
add
rcr
pusha
repnz
lahf
xchg
sub
jge
scas
pop
les
add
jo
mov
lea
pop
pop
push
shr
not
pop
pop
push
push
push
lea
push
push
lea
push
call
mov
add
cmc
push
lods
in
popl
xchg
add
add
mov
add
add
popf
add
or
add
in
cmc
mov
mov
add
add
les
loope
movsl
scas
mov
xchg
gs
pop
add
xchg
add
pop
pop
leave
push
ror
rol
sub
pop
ret
lea
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
jno
add
add
add
fisubrl
into
jle
add
cmpsb
pop
add
mov
pop
add
add
pop
add
lods
into
iret
andb
xchg
add
mov
add
outsl
add
scas
mov
mov
add
pop
pop
push
inc
ror
ror
pop
pop
push
push
call
fwait
outsl
jecxz
add
loop
add
je
filds
addb
roll
lret
add
out
stc
add
cli
in
jmp
cld
add
add
rorl
add
add
shlb
call
add
lret
jae
push
add
add
ret
sarl
lds
push
ljmp
pop
pop
pop
push
lea
push
push
lea
push
push
call
test
imul
push
movsl
icebp
mov
mov
add
mov
add
add
iret
add
mov
test
test
les
add
fiadds
mov
add
add
add
iret
les
mov
aam
bound
leave
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
incb
mulb
push
testl
cli
lret
xlat
pop
add
lds
add
fimuls
add
add
xchg
add
add
mov
add
add
stc
mov
imul
add
add
mov
cmpsb
push
mov
add
cmpsb
xchg
iret
popf
pop
out
add
enter
les
lea
pop
ret
push
lea
push
lea
push
lea
push
call
mov
add
jnp
std
std
pop
add
lds
push
pop
pop
fisubl
lds
add
stos
add
addb
cltd
jno
testl
loopne
fwait
popa
add
test
outsl
stc
rolb
push
add
mov
add
add
add
mov
add
aam
movsb
mov
rolb
add
arpl
jp
mov
push
mov
adc
pop
push
shr
pop
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
scas
mov
jne
add
xorl
jecxz
sahf
jle
movsl
nop
xlat
lret
pop
aad
stc
mov
mov
add
mov
mulb
add
aad
mov
cli
lock
int
add
mov
pop
pop
pop
push
push
push
push
push
call
int
add
add
push
out
sahf
xchg
fcmovb
add
int3
std
add
js
je
add
jnp
jge
add
mov
fdivp
imul
add
add
mov
lea
pop
leave
push
push
push
push
push
push
push
push
call
test
nop
push
xor
clc
addr16
rolb
add
add
add
fwait
add
jecxz
jle
jge
mov
mov
lods
les
add
add
movsb
jl
add
pushf
test
add
add
icebp
xchg
add
sti
add
in
imul
mov
add
pop
add
mov
add
int3
lea
pop
ret
cli
cwtl
pop
jb
test
jb
push
pop
jb
fcomps
sub
hlt
push
pop
jb
pop
pop
jb
out
pop
jb
xchg
pop
jb
imul
pop
jb
add
add
and
cltd
mov
cli
es
push
inc
mov
pop
in
imul
out
sub
std
pop
xlat
sti
iret
jb
insl
mov
push
mov
lods
add
out
adc
imul
aad
mov
and
or
fsubrs
scas
mov
repz
iret
or
mov
outsl
push
movsl
mov
je
sbb
jmp
test
jmp
push
out
movsb
xor
pusha
movsl
push
int3
xlat
repnz
iret
push
xchg
cmp
push
sahf
cld
mov
cmpsb
int
icebp
fidivl
out
adc
jne
push
push
movsl
add
and
mov
cwtl
push
dec
jle
xor
mul
xorb
inc
pop
mov
shl
imul
movsl
ds
fs
jbe
jns
imul
dec
or
mov
jp
inc
jne
inc
xchg
fxch
sbb
dec
in
mov
xor
jne
cmc
int
mov
cmpsl
lahf
fnsave
outsl
outsl
and
lock
jo
cmp
in
or
aas
lock
pusha
popa
pop
xchg
fsubs
mov
or
stos
cmp
adc
das
fcmovne
lds
in
rcr
xchg
daa
icebp
stc
sub
iret
aam
cmpsb
jns
into
mov
jg
inc
pop
dec
xsha1
cmpsb
mov
mov
mov
call
das
mov
ret
xchg
int
inc
js
push
add
xlat
into
cmp
leave
je
rorb
hlt
test
and
cs
pop
pop
fdivs
stos
push
lcall
xor
inc
stc
push
mov
push
cmpsl
ja
pop
daa
pop
cltd
adc
ljmp
dec
sahf
jno
ss
addb
daa
jno
jl
jo
sbb
xor
push
loop
jp
test
ss
mov
sbb
mov
ljmp
sbb
cmpsb
cwtl
cmp
cmp
sub
cmovns
lds
je
or
int
xchg
lcall
push
or
fadds
sbb
ror
add
jo
mov
arpl
leave
jb
iret
rorl
arpl
fucomi
lock
das
icebp
imul
movsl
pop
cmc
inc
or
stc
mov
pushf
call
adc
aas
aad
fiadds
mov
mov
mov
mov
cltd
mov
or
outsb
and
loopne
and
mov
in
rclb
icebp
ljmp
mov
xor
mov
subl
xor
add
cmp
pushf
cwtl
and
shlb
outsb
clc
popf
clc
iret
jge
jle
lahf
xchg
fsub
es
lds
pop
aad
fstps
push
nop
repnz
pop
cmp
out
in
ret
dec
bound
inc
pop
scas
sub
adc
fadd
je
daa
mov
dec
jae
add
faddp
mov
push
sub
lea
push
mulb
mov
mov
sbb
out
fimuls
adc
cmp
push
cmp
and
xlat
mov
push
mov
cld
dec
jbe
lea
ss
mov
test
rcl
jle
jp
fwait
or
pop
mov
out
in
cmp
cmp
dec
in
sti
mov
bound
cmp
jb
mov
ljmp
adc
jne
jl
sub
xchg
jge
mov
movsb
mov
je
ret
mov
fmulp
adc
xor
jae
mov
xor
hlt
mov
pusha
xchg
pop
jnp
inc
xor
aam
lahf
dec
dec
pop
or
xchg
fnsave
dec
jae
add
rorb
test
pusha
or
popa
divl
addb
es
fisttps
enter
jge
mov
jae
or
cltd
nop
lock
popf
les
out
mov
icebp
pop
xor
add
cwtl
mov
cli
test
add
pop
mov
in
call
cmp
dec
test
clc
push
rolb
int3
ljmp
or
scas
or
dec
jmp
fs
cmp
sub
into
pop
xorl
lods
cmp
divb
mul
ret
add
xchg
nop
lret
push
loopne
cmpl
cwtl
mov
adc
ror
xchg
mov
mov
inc
cld
pop
loopne
and
pop
or
mov
pop
pop
adc
push
cmp
icebp
cld
cmpsb
and
lods
popa
test
mov
out
insl
test
inc
aam
adc
repnz
out
push
fdivr
mov
mov
xchg
cmc
inc
or
fdivp
adc
imul
aaa
sub
cmp
ret
fwait
cmpsb
xchg
sub
ja
jge
or
push
into
jns
loopne
testb
sub
fistps
pop
loopne
repnz
or
stc
shlb
stos
xor
sbb
mov
dec
add
stos
sbb
cwtl
lcall
fisubl
pop
mov
subl
cltd
hlt
push
scas
dec
push
inc
std
sti
incl
in
or
mov
cmpsl
add
or
pusha
mov
insl
and
push
loop
jl
cmpl
mov
xor
mov
and
ja
sub
adc
xor
push
movsl
lods
gs
mov
iret
aaa
mov
into
out
inc
dec
xor
jp
clc
lahf
gs
adc
fsts
pop
xchg
push
mov
scas
shll
rorl
rolb
aaa
ja
and
mov
repz
xchg
push
test
mov
outsl
je
in
xlat
fldl
jmp
push
lods
out
pop
pop
loopne
ret
mov
pop
xchg
jnp
rcl
mov
aas
jno
iret
add
mov
into
xor
bound
fsubl
es
push
pop
dec
testb
pop
dec
daa
fisubl
or
repnz
cmc
fstl
lods
push
out
loopne
add
test
cli
stos
rcrb
insl
pop
shl
clc
cmpsb
addr16
push
mov
loope
dec
stos
mov
jg
cmp
fs
cmp
jle
sahf
mov
shll
js
or
xor
sbb
in
popf
shrl
mov
pop
imul
pop
pop
int
imul
out
mov
fisttps
fnstsw
shll
adc
cmp
outsl
inc
shlb
dec
cmpsl
aad
jne
mov
xchg
mov
lret
fmull
xor
enter
mov
push
jnp
xor
jb
push
cmp
sbb
mov
jnp
or
inc
mov
stc
jg
mov
rcl
je
ret
mov
inc
ret
iret
pusha
add
or
andb
and
ret
pop
sub
mov
pop
into
jae
add
push
repz
ret
jmp
neg
jno
xchg
add
or
ds
movsb
xchg
add
xchg
ja
inc
push
test
cmpsb
loope
inc
xchg
pop
out
negl
scas
iret
xor
add
dec
rcrl
cmc
out
and
cmpsl
fs
xor
jne
mov
mov
repnz
popa
das
iret
jmp
ljmp
inc
pop
outsl
pop
xlat
xor
or
into
roll
sub
pusha
or
lods
fsub
mov
in
repnz
pop
ret
or
push
sub
sub
jns
stos
outsl
mov
and
and
dec
xchg
and
fbld
fs
cli
xchg
add
or
ret
xchg
in
and
stc
nop
mov
mov
loopne
pop
push
and
add
repnz
repz
dec
pop
jno
addb
fbld
xlat
stc
xlat
movsb
inc
or
push
rol
xchg
or
enter
mov
sbb
dec
mov
fs
jp
mov
arpl
inc
std
dec
mov
lock
rcrb
pop
faddl
and
xor
jns
push
jnp
stc
and
mov
int
jnp
or
xor
or
mov
inc
shlb
mov
cmp
sarl
cmp
testw
js
insl
sbb
movsb
lcall
insl
into
sbb
out
mov
test
jmp
push
mov
inc
jge
xor
adc
jbe
xlat
ror
sub
cmpsl
fistl
pop
pop
in
bound
or
sub
push
adc
mov
pop
push
mov
ret
mov
xchg
icebp
aam
test
cld
popa
out
arpl
shlb
mov
mov
xor
cs
sub
aad
mov
xor
mov
movsb
or
ja
push
repz
jp
xchg
ljmp
sbb
movsl
and
push
test
into
pop
or
inc
jb
mov
std
je
sbb
pop
cltd
test
push
shlb
dec
push
insl
lock
in
lds
lods
sti
loop
jge
inc
mov
push
push
fxch
lahf
faddl
inc
aad
mov
es
pop
inc
insl
pop
pop
aam
cmp
int
mov
repnz
dec
sti
movsl
addr16
fsubrl
mov
pusha
jb
pop
loop
cmp
andb
lds
dec
lods
mov
fwait
dec
arpl
push
ret
pop
inc
and
xchg
call
mov
dec
sub
dec
push
inc
std
into
hlt
xlat
rclb
fstl
out
iret
fdivrs
loopne
pop
fs
mov
sbb
dec
int
test
pop
orl
repnz
pop
xchg
test
aam
lods
test
shll
lock
or
push
push
add
sub
dec
fucom
mov
mov
loop
mov
movb
int
or
push
add
fcmovb
pushf
cs
ja
dec
mov
jae
cmpsl
xor
ss
and
lret
jne
jbe
lret
pushf
aam
aad
addr16
jmp
pcmpgtb
adc
dec
xor
in
mov
lcall
icebp
inc
test
pop
adc
push
mov
inc
add
daa
xor
sub
pop
push
and
out
sub
movsb
sub
das
mov
mov
mov
jae
cld
in
out
sbb
cmc
idivl
add
gs
aam
and
mov
push
stc
inc
pusha
js
test
shl
cwtl
jbe
fsubs
push
sbb
xor
pop
sbb
into
mov
mov
mov
xor
and
or
add
pop
mov
add
jnp
inc
inc
inc
loop
push
adc
push
or
shll
ficompl
dec
or
mov
push
out
push
cwtl
pushf
je
pop
outsb
je
mov
aad
mov
lds
movsb
push
mov
call
cmp
fstps
insl
jnp
and
push
sub
outsb
push
aaa
sub
and
lret
scas
cmp
cwtl
dec
mov
jle
movsb
mov
pop
mov
jl
ljmp
pop
imul
dec
jp
mov
cmpsl
or
sub
fcompl
sub
or
mov
inc
adc
and
jae
testb
je
sub
outsl
call
xor
subb
decl
adc
xchg
push
lea
xchg
sbb
imul
fbstp
pop
add
inc
pop
aam
xchg
mov
fnstenv
lcall
inc
popa
out
aad
clc
xchg
sti
sti
test
and
aaa
out
sbb
leave
adc
mov
xor
sarl
mov
int3
push
es
pusha
or
jp
repnz
mov
and
jl
das
jo
stos
mov
addps
fidivrs
xchg
jbe
xchg
nop
lcall
adc
xchg
or
inc
mov
dec
sub
pop
pusha
inc
out
xchg
dec
mov
mov
arpl
shl
hlt
inc
push
int
in
stos
scas
icebp
fsubl
ret
xchg
xor
out
or
repnz
pop
das
mov
xorl
shlb
mov
popa
or
cmc
pop
out
cmp
xor
cmp
or
mov
push
iret
inc
outsb
inc
jo
popf
orb
pop
adc
xor
clc
fwait
les
fdivs
pop
cmpsl
sub
xor
mov
pop
add
fwait
or
push
sbb
and
jge
fstl
leave
je
dec
adc
inc
push
sub
push
jmp
loop
pop
mov
mov
jmp
add
xor
int
fisttpl
mov
ja
movsb
icebp
je
das
push
cmp
stos
lret
sbb
xchg
xchg
pop
fwait
mov
push
adc
and
adc
xor
push
sub
sub
push
sub
jns
popf
pop
nop
stc
sti
adc
sbb
xchg
nop
or
xor
sub
adc
ror
orb
sbb
add
je
scas
inc
sbb
call
mul
sub
int3
stos
mov
push
push
push
fimull
movups
push
mov
mov
les
adc
rcll
xlat
dec
fiadds
mov
pop
bound
jl
sbb
adc
add
jns
rorb
jbe
dec
sbb
loopne
dec
aas
jo
pop
popf
cmpsl
mov
xchg
fisttpl
mov
in
pop
clc
fidivs
pop
push
sub
lds
mov
je
xchg
out
sbb
push
aam
add
inc
cltd
xorb
adc
scas
fldt
pop
je
or
test
and
sub
lret
push
sbb
clc
xchg
mov
gs
dec
mov
cmp
sbb
movsb
push
imul
inc
sub
popl
jecxz
mov
mov
jle
add
mov
loopne
xchg
arpl
xor
mov
fidivrl
mov
bnd
fistpll
int
jnp
loope
inc
clc
lahf
mov
xchg
cmpsl
stos
cmp
shrb
sub
es
mov
dec
je
jg
icebp
std
mov
into
cs
jmp
lahf
or
xor
mov
lcall
jbe
cld
xchg
sub
iret
mov
shll
mov
xor
jp
outsb
sti
add
imul
aaa
frstor
mov
aaa
jmp
adc
sub
add
sar
adc
loope
mov
mov
out
in
test
and
filds
adc
idiv
mov
add
xor
push
mov
test
popf
inc
mov
inc
add
cmpsl
jmp
sub
out
insl
pop
push
push
sbb
pop
pop
mov
and
loopne
mov
test
jns
pushf
in
xor
test
mov
out
orb
int3
movsb
dec
fwait
push
pop
jge
gs
add
push
cli
ds
push
lret
jnp
loopne,pt
incl
decb
inc
sub
fisttpl
lods
addr16
inc
push
inc
xchg
push
cmpsl
scas
flds
popf
sub
addb
add
mov
sahf
int
add
imul
push
test
popf
lret
in
hlt
pop
lds
adc
or
pop
push
xor
cld
imul
cmp
adc
xchg
rcrb
push
pop
add
mov
rolb
cmpsb
sub
std
in
mov
popf
jbe
scas
jg
sub
push
mov
into
repnz
cmpsb
push
mov
cmp
inc
dec
lahf
inc
enter
and
sahf
xchg
or
mov
repnz
cs
xchg
mov
sbb
mov
orl
stos
dec
dec
dec
aas
and
sbb
xorl
mov
add
inc
sti
shll
push
repz
pop
jmp
ret
fnstcw
lahf
mov
xor
adc
pop
pop
xor
xchg
test
ret
jge
mov
jno
mov
int3
loope
xor
push
xor
stos
popf
mov
int
xchg
mov
ret
mov
jno
repnz
bound
ret
ret
in
out
insb
and
dec
xor
xor
dec
or
xlat
and
adc
or
jb
imul
push
add
aaa
mov
xchg
ljmp
pop
xrelease
sbb
push
imul
jl
leave
fmull
es
or
push
xchg
test
es
out
ficompl
inc
adc
iret
xor
fs
cli
lds
sbb
xor
push
mov
mov
pop
mov
ficoml
test
add
xchg
add
stos
inc
in
test
test
inc
icebp
sbb
out
fistl
jbe
sbb
mov
incb
push
jle
int
jg
loope
sbb
dec
cmp
das
mul
movb
cmp
int
rcll
cmp
mov
cs
cld
fcompl
rorl
add
mov
cmpl
dec
sub
mov
push
sub
sub
and
mov
aad
arpl
inc
les
add
mov
mov
mov
push
jecxz
ror
xchg
push
mov
insl
adc
in
or
or
and
xor
add
jg
leave
fadd
divb
lods
hlt
test
xchg
mov
rolb
jno
mov
fwait
add
fidivl
test
sub
pop
jo
dec
jecxz
sub
xadd
sahf
mov
mov
dec
jg
inc
cmpsb
sub
inc
jne
int
aam
jle
inc
outsb
dec
test
jbe
adc
pop
test
lret
scas
mov
js
icebp
les
rcll
push
stc
and
push
movsl
fwait
mov
push
out
push
mov
mov
xor
jae
or
pop
push
mov
aas
ljmp
pusha
mov
ja
pop
mov
push
dec
outsb
jae
fwait
push
add
mov
inc
xchg
pop
psubb
js
fnstcw
cmp
es
hlt
mov
roll
push
jg
xchg
sti
xchg
aad
adc
lahf
roll
mov
adc
mov
out
test
add
inc
jae
push
xor
insw
lret
ljmp
lret
mov
mov
dec
add
shlb
push
lods
loop
js
imul
xlat
xchg
js
call
idivb
leave
out
push
jmp
push
xor
leave
rcrl
jbe
pop
dec
cmp
mov
cmp
and
adc
inc
push
mov
xchg
mov
fnstsw
and
into
sti
addr16
dec
jno
stos
inc
mov
cwtl
cmp
mov
or
cmpsl
fisubl
mov
std
imul
cltd
fs
adc
jo
adc
clc
ljmp
in
fisttpll
mov
xor
popa
pop
dec
movsb
aaa
and
jae
mov
sbb
jmp
xchg
dec
xchg
mov
adc
sub
emms
sub
adc
roll
mov
js
dec
into
in
bsr
loopne
mov
lods
or
cmpsl
dec
jne
push
jns
iret
lock
sbb
adc
mov
xlat
aas
fldt
sbbl
lret
shlb
enter
mov
push
rorb
pop
jmp
arpl
push
inc
jg
adc
push
jecxz
push
lcall
popf
call
push
mov
push
push
mov
dec
add
repnz
jg
ret
sarl
movsb
dec
stc
dec
mov
add
lea
xor
daa
and
mov
pop
fcoml
testb
pop
aas
jnp
push
lret
sub
adc
push
jmp
insb
daa
insl
dec
inc
lret
loopne
cmc
and
ljmp
out
push
xchg
dec
mov
inc
lods
mov
in
sbb
push
or
push
cmpb
cmp
jns
flds
mov
fwait
insb
call
and
jp
sub
inc
cmp
imul
fcmovu
mov
movsb
pop
or
clc
test
cmp
inc
idivl
std
dec
pop
sbb
das
jo
mov
inc
add
mov
popa
flds
pop
lds
call
jne
dec
mov
or
dec
or
in
xchg
popa
pop
dec
push
in
out
mov
fwait
pop
je
addr16
add
sbb
test
fcoml
cmc
mov
pop
data16
mov
out
jb
mov
xor
lods
cld
outsb
mov
dec
jp
jnp
jnp
in
sahf
cltd
cmp
fwait
rcrb
pop
jecxz
or
mov
cli
out
lods
push
aas
mov
mov
outsl
inc
adc
loopne
mov
sbb
sub
call
sbb
push
scas
inc
ds
add
mov
jns
dec
bound
lods
mov
nop
data16
sub
dec
push
inc
shl
sbb
mov
xchg
xor
addr16
in
scas
mov
into
jge
xchg
sbb
cmp
shll
ret
sti
push
push
stos
mov
fisubrl
push
addr16
ret
inc
mov
imul
mov
mov
sub
mov
xlat
pushf
ja
pop
dec
mov
cmp
clc
sbb
mov
pop
shlb
mov
dec
ret
mov
pop
out
out
mov
out
and
mov
inc
cmp
jne
andl
sahf
clc
lods
mov
int
mov
pop
cmpsl
or
hlt
outsl
add
jo
lock
movsl
jae
dec
cmp
mov
mov
lea
lret
xor
imul
adc
leave
mov
sahf
pop
pop
sbb
scas
ja
xor
bound
pop
js
inc
scas
repnz
js
cmp
cmpsb
test
cmp
mov
jle
adc
outsb
mov
packssdw
mov
xchg
test
sub
lcall
bound
roll
loopne
inc
fdivl
adc
or
icebp
adc
ret
mov
std
test
int
test
sub
lock
into
int
shr
dec
stos
roll
mov
dec
shr
pop
mov
outsb
xchg
mov
mov
xchg
mov
fstpt
ds
and
dec
fisubl
dec
push
sub
or
and
cld
mov
mov
repnz
out
lods
stos
xchg
pop
das
add
inc
into
testl
out
leave
repz
lret
add
fwait
dec
mov
mov
in
shrl
add
mov
dec
or
stos
sub
push
cmp
rcll
ret
gs
sub
sti
jne
lds
dec
aas
mov
mov
ss
push
test
popa
in
dec
cmp
jno
out
scas
mov
push
xchg
arpl
andl
and
push
mov
nop
xchg
stos
fimull
adcl
inc
jns
mov
repz
fdivs
push
sbb
push
pop
aad
imul
lret
xchg
sub
jecxz
aas
sahf
push
nop
sbb
mov
xor
insl
push
xlat
mov
add
xorl
stos
data16
mov
pop
stc
and
push
inc
sub
stos
jns
push
mov
inc
cmp
fisttpll
sbb
inc
pop
push
dec
pop
stc
inc
shr
lahf
rol
fbld
in
sahf
mov
out
rcl
sub
dec
jmp
shrb
pop
test
std
mov
adc
je
push
inc
scas
xchg
loop
xor
dec
xor
add
push
pop
push
mov
adc
fstps
jecxz
inc
xlat
loope
jno
jmp
xchg
sarb
imul
xchg
sbb
mov
adc
xchg
das
sbb
dec
add
pusha
and
cmp
scas
add
daa
add
inc
loop
shlb
xor
jae
push
mov
shl
stc
jmp
jb
dec
xor
aad
push
and
mov
jae
gs
add
shlb
and
orb
adc
xlat
mov
rol
loope
nop
inc
adc
mov
xchg
mov
cmp
pop
subb
xacquire
inc
pop
test
mov
loope
push
scas
ljmp
fldenv
push
imul
cmp
clc
daa
pusha
mov
xrelease
stos
arpl
cltd
push
sbb
add
filds
jns
divb
push
rclb
sub
js
rolb
insl
js
aaa
mov
loope
xchg
lock
pusha
pop
jbe
loopne
add
into
mov
push
add
pop
cmpsl
sub
pop
clc
negl
jno
sub
mov
cmp
sub
mov
jmp
movsl
ljmp
pushf
jb
dec
or
jae
mov
add
inc
xchg
jecxz
xlat
ret
pushf
inc
xchg
push
sbb
pop
fcomip
fwait
add
mov
adc
nopl
out
inc
mov
test
filds
ret
pop
leave
sbbl
pop
or
adc
ret
sub
add
mov
outsl
mov
cmpsl
adc
mov
imul
jb
roll
cli
xor
enter
rcrb
jmp
fiadds
adc
negl
sub
add
or
das
dec
inc
out
movsl
mov
nop
arpl
pop
std
call
sahf
sub
jns
xor
ljmp
aad
push
js
fdivl
fistps
fldt
ljmp
cmp
fcomps
in
mov
mov
sub
mov
js
in
cwtl
mov
and
mov
or
sbb
or
push
mov
aam
pop
pop
xor
inc
iret
inc
and
lds
out
mov
cmp
xor
or
out
je
mov
leave
mov
sub
mov
outsb
in
std
pop
imul
sub
add
lea
scas
sti
lea
pop
sbb
test
rorl
mov
movsl
pop
scas
das
movsb
icebp
std
xlat
repnz
es
ja
pusha
jbe
in
push
mov
pop
xchg
das
sbb
xorb
mov
movsb
pop
dec
out
cmp
rorl
insb
js
mov
in
push
jno
sarb
pop
ljmp
cmpb
xchg
inc
and
jp
cmpsl
mov
sub
stos
inc
hlt
sbb
shlb
cmc
icebp
sub
inc
or
test
call
xorl
and
in
int
xchg
pop
sahf
cli
shll
mov
insl
loopne
ficompl
iret
lock
je
dec
mov
add
push
in
dec
lcall
sub
pop
adc
lods
jae
outsb
test
clc
dec
pushf
sbb
mov
push
insl
cmp
in
repnz
sub
and
fsubl
gs
ss
jo
divb
stc
or
test
push
jmp
daa
test
mov
addb
aad
cs
loop
mov
notl
mov
ret
call
sbb
in
mov
mov
sti
sbb
dec
sub
bound
mov
jle
hlt
cmp
mov
stc
or
push
push
xchg
outsb
adc
inc
jnp
push
insl
cmpsb
ss
dec
fmul
shll
pop
iret
mov
aam
imul
jns
repz
imul
xor
push
lock
js
mov
out
lods
jmp
jo
and
stc
fwait
adc
adc
iret
push
xchg
jnp
dec
xor
lods
push
dec
mov
fnstcw
scas
js
mov
scas
xchg
repz
cli
cmp
ss
dec
push
pop
aad
xor
test
pop
jbe
aam
stos
subl
sbb
call
clc
bound
mov
daa
lret
fisubl
and
es
push
insb
dec
sbb
push
sbb
test
dec
cld
in
in
push
sub
sti
jbe
shrb
ja
dec
gs
idivb
add
push
jecxz
outsb
jge
loopne
mov
scas
pop
mov
cmc
adc
ljmp
xlat
add
shll
xchg
fs
ficompl
das
mov
adc
or
cmp
fadd
cmpsl
test
mov
mov
or
test
or
dec
or
push
and
dec
in
and
jnp
loopne
daa
pop
mov
dec
stc
jle
jg
outsb
aas
shlb
imul
cmpsl
repz
or
les
and
xor
cli
cmpsb
repnz
aam
pop
sub
aas
mov
jge
add
and
fldcw
bound
movl
imul
and
xor
lock
imul
js
xchg
add
pusha
push
xchg
push
adc
inc
jmp
xchg
mov
pop
in
adc
mov
cld
dec
xchg
mov
sbb
jns
pop
scas
or
mov
jnp
cs
mov
jmp
aad
test
xchg
inc
xor
pop
mov
insl
and
add
test
xchg
cld
out
lahf
adc
adc
loop
pop
adc
jp
loopne
lock
push
enter
inc
stc
pusha
xor
push
add
or
testl
fisttpl
loopne
roll
repz
mov
add
shlb
and
add
sub
mov
push
in
pop
adc
hlt
dec
or
sub
sarl
js
dec
push
cmp
jne
inc
or
xchg
inc
jno
adc
pusha
mov
sti
and
xchg
jo
cmp
jle
cmp
sbb
push
addr16
stc
mov
pop
das
push
mov
jmp
jl
pop
adc
mov
sbb
loop
or
pop
nop
fdivr
notl
jb
test
pop
mov
popa
dec
mov
loopne
mov
andl
lods
lahf
and
insb
or
arpl
mov
xor
cmp
movsl
adc
push
andl
popf
pop
jge
cs
mov
push
in
jae
enter
xchg
dec
repz
add
add
push
test
sbb
mov
push
sti
jae
dec
dec
dec
ficoml
jno
sbb
cmp
inc
les
push
inc
dec
adc
mov
xchg
out
mov
je
lcall
and
add
gs
xorb
push
xchg
dec
in
mov
mov
push
out
jge
cmpsb
out
lret
scas
add
cmp
pop
aas
hlt
jnp
xorb
xlat
mov
stos
xchg
or
subb
mov
xor
xchg
scas
adc
sbb
call
fidivl
sbb
ss
adc
lahf
pop
fwait
in
hlt
add
dec
repnz
adc
aas
inc
data16
and
in
lods
xchg
cmp
in
pop
mov
fcoml
mov
jecxz
cmpsl
cs
sub
lods
cli
fcompl
and
xorb
sarl
fldcw
dec
aaa
sbb
ss
jge
xchg
pop
fucomi
jle
or
sbb
lret
mov
pop
into
in
das
enter
in
pop
pop
stos
pop
adc
int3
jno
orl
ja
repz
sub
aas
mov
outsb
add
loope
lock
rorb
push
sti
leave
inc
xor
lea
jae
dec
pusha
sub
pop
ret
int
pop
ljmp
ret
insb
outsl
pop
xchg
dec
leave
iret
jb
dec
add
loop
repz
ret
ret
push
lods
xor
sbb
roll
jp
push
push
sbb
lods
aad
sub
jbe
mov
dec
xor
stos
push
pop
dec
mov
dec
js
jge
inc
cmpsb
cmp
rorl
data16
push
xchg
cwtl
mov
repz
mov
sbb
mov
rol
test
aaa
mov
iret
insb
int
adc
loope
aam
fdivs
lods
or
hlt
and
icebp
or
imul
xchg
fnstcw
aas
lds
sti
pop
add
pop
lock
and
icebp
cmovl
push
dec
and
pop
or
popf
ss
xor
dec
lods
and
repz
aaa
mov
clc
mov
jl
xchg
sub
rcll
lea
popf
movsl
jmp
pop
or
cld
mov
xchg
icebp
pop
in
jns
data16
adc
adc
adc
gs
mov
pop
xor
ss
fs
add
into
js
pop
push
lret
cmp
inc
and
inc
xor
ret
stos
add
in
add
jg
das
dec
add
das
clc
pop
out
or
ja
or
or
push
jo
mov
jno
jnp
je
aam
and
test
es
sbb
dec
fs
inc
clc
outsl
outsl
mov
arpl
jno
fs
jo
fnstenv
mov
jle
fildll
pop
mov
xchg
addl
test
fstp
mov
adc
add
loopne
insl
xchg
add
andl
ja
stos
lret
mov
js
push
adc
sub
jae
pop
movsl
icebp
or
cmp
aad
cmp
or
jmp
andb
cmp
sahf
inc
fwait
jmp
jle
dec
sub
stos
movsb
test
sbb
fwait
ja
lods
imul
int
ja
adc
sub
mov
daa
dec
fcoml
aad
push
addb
jp
lds
mov
push
mov
cmpsl
subb
nop
push
xor
daa
xchg
stc
pushf
add
xchg
rclb
sub
and
or
sub
sbb
rcrb
aad
jg
rol
or
inc
popf
outsl
and
inc
mov
negl
xor
das
jnp
fldcw
pop
pop
int3
pop
jns
inc
test
xchg
in
sub
add
dec
lcall
lahf
cmp
mov
test
cs
sbb
cmc
out
and
push
lods
cmp
pop
and
bnd
inc
les
arpl
lret
mov
int
jmp
push
mov
fld
lret
mov
inc
add
imul
loope
sahf
ss
xor
jmp
pop
notl
add
lock
mov
adc
cld
adc
mov
cmc
adc
dec
out
jg
fs
mov
dec
and
sbb
xor
push
mov
cmp
movsb
cli
mov
push
inc
pushf
sti
xchg
push
inc
sub
mov
or
jle
lahf
add
gs
mov
imull
or
push
out
dec
repz
sub
outsl
fildll
std
loopne
mov
mov
imul
ret
fildll
jno
cmp
mov
sbb
mov
jl
pop
mov
sub
jbe
movsl
imull
pop
add
repz
clc
sbb
xchg
ss
stos
mov
lret
pop
mov
dec
xor
out
or
sub
dec
cmp
pop
pop
push
jns
inc
inc
or
stc
sarb
xchg
jno
cmp
add
je
mov
push
xor
dec
xchg
jmp
jge
xor
ss
xor
iret
mov
mov
cwtl
cmpsb
sub
imulb
or
and
dec
fstpt
or
or
xchg
in
lds
add
in
int3
sbb
in
push
call
sti
dec
add
xor
pushw
pushf
dec
or
into
repz
les
xchg
jecxz
mov
movsb
mov
out
insb
fisubs
dec
push
mov
mov
or
dec
push
cmc
mov
mov
add
cmp
test
jg
adc
out
cmp
mov
fiadds
or
adc
xchg
sbb
sub
je
enter
pop
fwait
push
lret
popf
add
jns
test
repz
out
xchg
or
fsqrt
in
jae
test
or
mov
and
and
sbb
cld
inc
sbb
mov
scas
inc
inc
lock
jae
insl
inc
inc
or
fwait
subl
jo
mov
xor
push
jl
sbb
cmp
and
pop
jmp
mov
in
lret
adc
jmp
xor
or
add
cmp
stc
inc
jp
in
dec
mov
popa
fwait
lods
sbb
pusha
test
mov
movsl
in
push
mov
int3
xor
mov
xor
shr
call
xchg
cmpsb
ret
and
scas
inc
xor
mov
xchg
scas
mov
xchg
test
xchg
fwait
in
das
imul
je
or
mov
loop
dec
ficompl
in
stos
and
jg
mov
push
dec
test
inc
iret
mov
je
sub
loopne
aam
mov
dec
and
mov
mov
xchg
enter
dec
lds
xor
les
xlat
inc
inc
cltd
add
sahf
dec
sahf
repz
out
add
arpl
fwait
adc
fldz
mov
sbb
mov
mov
push
lods
addps
shll
jae
and
jne
add
dec
cmp
outsb
sarb
sbb
sbb
mov
out
nop
sbb
fbstp
cmp
fisubrl
xchg
into
pop
xor
inc
mov
jnp
rorl
mov
lahf
mov
or
and
cmp
xchg
test
shll
ret
aas
shl
mov
push
scas
repnz
cmp
push
inc
add
sub
xor
sub
pop
lea
orb
insl
push
jne
jae
rolb
fcomps
or
sbb
incl
jge
daa
insl
fcoml
dec
insb
push
inc
cmpb
adc
sub
jb
xorb
adc
push
loop
ja
test
fcompl
aas
stc
xor
test
pop
jns
lret
dec
push
xor
aad
rcll
scas
cwtl
pop
jo
les
int3
jge
or
mov
fnstcw
mov
sar
mov
fcmovnb
push
js
dec
sub
mov
inc
mov
arpl
out
es
mov
cmp
cmpsb
add
pop
lds
in
clc
sbb
cmp
or
lock
iret
inc
rol
sub
jo
jecxz
jbe
pushf
jne
push
scas
mov
aas
push
imul
pop
inc
les
movsb
rorl
adcb
out
add
es
mov
mov
mov
xor
xchg
mov
icebp
ret
cmc
mov
cmp
add
push
data16
push
cmp
ljmp
pop
xchg
aas
sahf
push
fldl
add
das
dec
scas
imul
adc
out
lods
in
test
cmp
pop
push
inc
mov
mov
mov
or
sbb
jle
cmp
adc
push
xor
enter
inc
dec
or
push
sti
icebp
lods
push
aaa
mov
fcoms
mov
adc
fwait
sub
lods
out
dec
fisttpl
imul
push
jecxz
insl
pop
jmp
pushf
data16
lds
int3
mov
or
jp
push
loop
dec
aas
jne
ja
stc
xchg
mov
and
cmp
stos
jecxz
mov
jecxz
outsl
mov
movsb
fdivl
insl
dec
add
xlat
xchg
clc
movsb
push
fisttps
jo
pop
fnstsw
fld
ds
loopne
jmp
push
lods
pop
mov
repnz
out
jp
mov
js
cmp
mov
call
inc
mov
cmp
push
jae
outsb
daa
movsb
inc
xor
pop
lods
mov
arpl
lods
mov
mov
inc
jp
out
xchg
cmp
scas
jp
inc
sub
cmp
cmpsl
sbb
xchg
int3
insl
cmp
loope
stc
lret
xchg
and
faddl
iret
mov
inc
ljmp
jl
sub
xchg
outsl
int
cld
pusha
inc
shll
add
mov
ret
pop
jno
out
adc
pop
pop
bound
daa
or
rol
and
jp
jae
inc
repnz
jno
cmpsb
push
lods
popf
add
rcrb
out
insl
je
cld
cmp
rcr
jnp
repnz
cltd
and
rcrl
sti
sub
xchg
adc
popf
pop
sbb
fmuls
push
pop
es
dec
dec
or
ds
ja
mov
movb
cmp
dec
ret
movsl
test
mov
fdivrp
and
lcall
test
sub
pop
ja
aas
mov
dec
dec
or
ret
daa
scas
shll
mov
xchg
inc
mov
lret
xchg
mov
loopne
pop
rcr
in
pusha
cld
push
clc
je
mov
sbb
rol
hlt
repz
call
popa
xor
xor
xor
mov
sub
add
outsb
jmp
fcomps
lock
inc
fldcw
hlt
shr
insb
mov
xor
leave
ljmp
notb
out
loop
movsb
cmp
loope
fwait
adc
mov
ja
mov
adc
push
adc
lcall
aad
xorl
sub
adc
mov
stos
negl
xlat
jae
hlt
or
add
cmpb
insb
repz
mov
shlb
sbbb
mov
decl
seta
jge
ja
cmp
rcrl
xor
or
push
cmp
jne
xchg
inc
inc
mov
repz
addr16
adc
xchg
arpl
out
divb
xor
push
mov
cmp
cli
mov
inc
repz
xchg
enter
scas
xchg
fdivrl
clc
or
in
jns
adcl
dec
sbb
jb
outsb
fnstcw
das
mov
adc
pop
push
imul
jno
fbld
negl
inc
xlat
cld
inc
enter
mov
or
mov
add
cmpsl
in
add
mov
add
jmp
imul
inc
push
pop
push
xchg
jmp
clc
push
or
insl
sub
push
inc
out
pushf
testb
sti
push
pop
dec
cmpsl
jno
lret
cwtl
push
loope
fwait
cmpsb
add
cmp
and
roll
sti
or
fs
mov
jmp
pop
or
loopne
push
dec
sbb
fisubl
pop
or
notb
push
testb
mov
push
iret
rorb
and
pop
dec
adc
jnp
and
fs
cmp
cmpsb
sarb
scas
inc
bound
mov
and
scas
aaa
fs
mov
inc
enter
test
into
jns
pop
or
jle
cmp
test
dec
xlat
and
jae
xchg
adc
std
xchg
mov
rcl
inc
scas
imul
mov
dec
aam
adc
mov
dec
int
jle
add
add
in
pop
fadd
xor
jp
ret
fnsetpm(287
insb
sahf
push
dec
mov
push
mov
mov
repz
mov
mov
clc
push
sub
ss
mov
in
mov
clc
xchg
ret
cltd
ret
popf
pop
pop
push
test
adc
mov
ja
or
test
xor
and
jnp
aam
lods
outsb
xchg
adc
add
fisubs
mov
inc
je
xchg
ret
sbb
fwait
jge
or
movsb
repnz
out
insb
mov
cli
dec
mov
test
hlt
lahf
cmpsb
xor
cmpsl
xchg
and
std
out
mov
dec
pop
inc
pushf
mov
jge
sub
pop
xor
add
and
inc
mov
inc
push
jnp
xor
cmp
daa
cmc
xchg
cmp
cltd
cmp
stos
xchg
push
movsb
add
pushf
jne
cmc
cmp
fwait
mov
dec
addb
fadds
mull
pop
ret
or
scas
out
mov
dec
mov
aam
cmp
ljmp
movl
add
inc
scas
cmp
mov
popf
sub
mov
xchg
mov
mov
jns
adc
ficoml
nop
out
in
push
xchg
xchg
sbb
sbb
xor
sub
cli
cmc
adc
mov
fstpt
pushf
mov
addr16
jae
mov
xor
mov
pop
mov
ret
mov
aaa
negl
movsb
scas
mov
inc
add
test
data16
and
fisttps
inc
mov
and
mov
xchg
or
lods
testl
imul
imul
mov
inc
mov
adc
les
test
fisubrs
punpckhwd
ret
and
divl
mov
mov
in
add
cwtl
cmpsb
in
pop
test
ret
mov
arpl
and
dec
fcoml
jge
add
jp
bsf
fsubrp
cmpsb
aas
xchg
rolb
sbb
push
jo
aas
push
dec
fsubs
or
lcall
aas
xor
push
inc
movsb
dec
and
xchg
push
push
mov
lss
lods
lret
and
aaa
dec
xor
mov
in
add
jg
jge
outsb
fisubs
test
in
aas
sub
scas
hlt
push
fcmovnb
add
int3
push
xchg
xor
ljmp
jb
mov
es
lock
pusha
aad
xchg
cmp
jp
rcr
movsl
ljmp
es
aam
lret
jb
dec
ljmp
xor
nop
fnstsw
inc
leave
pop
or
inc
jle
test
cmp
jns
test
int3
or
xor
xor
and
mov
mov
inc
arpl
movsb
out
inc
adcl
ss
int
in
pop
inc
leave
push
roll
mov
jae
outsl
pop
fs
sbb
testl
ds
or
inc
repnz
sti
cmp
xor
pop
lea
push
sub
push
cltd
or
adcb
mov
pop
add
adc
pusha
add
shll
sbb
repz
iret
jl
fsub
mov
shll
iret
das
pop
xor
les
push
pop
inc
je
fmul
push
insb
xor
addr16
movsl
cmp
dec
popa
cmpsl
leave
pop
add
jl
push
xchg
mov
lds
and
cmpsl
fwait
shll
and
fisubrs
les
movl
mov
aas
and
hlt
cld
cmp
cli
incb
jns
out
and
inc
mov
fnstsw
pushf
xchg
std
in
mov
sbb
rcrl
inc
xor
test
adc
stos
test
push
push
cmp
mov
data16
adc
sti
int
inc
movsb
mov
push
jl
mov
stc
or
mov
lahf
cmp
jge
jg
sti
or
les
test
ret
inc
add
sub
orb
dec
lea
and
xor
push
push
aas
sub
inc
mov
xor
pop
mov
fucomip
mov
mov
lods
imul
push
mov
or
xor
fstl
gs
push
sahf
add
and
mov
xchg
cmp
xchg
mov
inc
je
add
ret
call
imul
cld
xchg
rcll
int
jecxz
cmpsb
xchg
jecxz
daa
gs
mov
and
push
jecxz
insb
cmpsl
or
jnp
cld
xchg
xor
push
jne
neg
ss
sub
lret
jnp
xlat
loop
in
imul
sub
popf
les
pop
mov
cmp
lock
sbb
jno
dec
addb
xchg
push
out
inc
xor
in
jl
hlt
out
shll
sub
ror
dec
sbb
je
shll
push
es
inc
mov
dec
add
shrb
pushf
inc
add
add
mov
dec
mov
push
pushf
dec
jns
mov
xchg
cmc
sub
mov
in
hlt
sub
mov
test
stc
inc
xchg
mov
mov
imul
pop
adc
mov
lea
cmp
cmpsb
inc
es
cmc
mov
arpl
push
mov
loope
mov
cmp
jmp
iret
iret
movsb
adcb
movsl
or
add
das
repz
pop
cmp
imul
xchg
stos
in
and
les
aad
popa
pop
sub
dec
adc
dec
outsl
pop
or
cs
xchg
and
cmp
stc
cmpsb
or
fadds
test
shll
add
lahf
frstor
jp
dec
push
test
insb
out
adc
mov
lahf
sbb
je
mov
imul
fisttpl
es
stos
rcrb
shrl
aad
cmp
popf
aaa
mov
lds
pusha
mov
movsb
mov
xorps
or
pop
in
push
and
test
xchg
insb
repz
sub
scas
or
pop
clc
addr16
icebp
jb
push
push
sub
or
jo
push
adc
or
movsb
test
cmp
sti
dec
pop
pushf
test
pushf
jp
not
pop
mov
cmp
mov
mov
xchg
clc
pushf
xor
or
mov
cld
lock
lea
jns
popa
arpl
push
out
repz
jg
mov
sbb
mov
insl
icebp
sub
dec
cmpl
or
mov
mov
mov
stos
cmp
mov
xor
repz
mov
mov
nop
push
push
sbbb
dec
lods
popf
test
stos
and
xchg
inc
iret
stc
shll
pop
mov
scas
iret
sti
sbb
jae
jbe,pt
xor
flds
sub
incb
adcb
sub
std
popf
out
in
pushf
cmc
inc
mov
xchg
loop
pop
fcoms
jg
aam
ds
xchg
insl
cmp
jg
nop
and
lret
int3
outsl
lea
sub
jns
pop
mov
sub
inc
mov
or
in
int3
pop
ss
fs
addr16
inc
mov
cmpsb
mov
add
repz
les
xor
xchg
dec
jb
pop
fistpll
cmp
jno
jb
sub
in
ljmp
neg
in
pop
testl
xor
aas
andl
fcmovnbe
mov
out
int3
mov
sub
fxch
idivl
jg
out
in
scas
jno
ss
in
addr16
call
mulb
mov
cmpsb
dec
or
sub
inc
cltd
out
cmp
push
jecxz
pop
mov
dec
jle
push
pop
lahf
push
arpl
jno
stos
pop
insb
nop
xchg
cmp
inc
jg
mov
mov
je
jb
ja
gs
mov
mov
and
in
lods
and
mov
cmp
sub
jg
jbe
ds
jno
inc
ljmp
enter
cmp
aas
das
call
fadds
mov
idivb
ret
cltd
sahf
mov
in
imul
xchg
dec
inc
js
mov
pop
inc
mov
daa
sub
and
jl
xchg
cs
and
dec
divb
bound
hlt
call
xor
lret
shll
mov
shrl
pop
push
mov
shll
sbb
cmpsb
jle
cmp
in
shrb
inc
lea
outsl
add
stos
dec
iret
imul
lods
adc
sub
jmp
mov
adc
sbbl
insl
jmp
std
jle
adc
adc
mov
or
xlat
mov
push
sub
sti
mov
pop
sub
adc
cs
inc
mov
aaa
jns
shr
test
push
cmpsb
cmp
xor
into
cltd
mov
ret
fsts
mov
repnz
adc
out
insb
lods
fsubl
add
dec
into
orl
stos
fwait
cmp
in
icebp
fidivrs
jbe
inc
cltd
mov
mov
xchg
scas
and
cmp
loopne
xor
and
jg
lret
mov
mov
in
cmpsb
jl
xchg
mov
int
aad
into
test
or
pop
cld
xchg
aas
push
sub
test
ljmp
inc
sub
pop
pushf
jecxz
popf
int3
ret
cmp
pop
cmp
xchg
aad
adc
sahf
sti
or
mov
jo
adc
andl
push
cmpsb
fmuls
movsb
loopne
cli
aaa
pop
adc
fptan
bound
loop
js
out
fwait
mov
in
mov
dec
sarb
lods
push
outsl
jno
pushf
fsts
ljmp
mov
sub
xor
sub
mov
sub
jle
lahf
bound
orb
jnp
test
mov
push
arpl
adc
fdivl
jl
or
jmp
mov
sub
xor
stos
add
cld
repz
nop
cmc
and
arpl
test
jge
pop
mov
mov
sub
in
mov
imul
mov
cmp
pop
idiv
icebp
scas
imul
or
cmp
xor
adc
adc
stos
sub
push
sarl
addb
ja
sbbl
stos
ficompl
aad
cli
sbb
jns
test
daa
pop
movl
int
lahf
pop
clc
add
inc
movsl
pop
xchg
cli
lea
nop
mov
scas
mov
and
add
xchg
out
aam
push
lea
push
icebp
outsl
mov
repz
ljmp
cmp
repnz
push
fstl
lea
movsl
mov
dec
xchg
insb
jno
hlt
and
sub
cltd
fcmovb
push
jo
cmp
lea
push
shl
leave
iret
cmp
and
stos
aaa
cmp
lcall
xor
das
aaa
xchg
test
aaa
sub
fwait
sub
lret
adc
scas
pop
push
jb
mov
mov
into
cwtl
ja
icebp
xchg
pop
insb
rcl
mov
in
adc
notl
cs
mov
pop
pop
inc
aam
mov
mov
xor
lahf
test
lock
cmpsl
cld
jge
mov
and
fcomip
lret
sub
add
bound
call
jnp
insb
icebp
add
outsb
frstor
popf
ficoml
xor
scas
aam
dec
cmp
lahf
sbb
mov
cltd
jae
dec
pop
push
jecxz
and
adc
adc
lcall
sub
lret
mov
fiaddl
cmp
scas
popa
cmp
and
lcall
mov
or
adc
cld
jmp
mov
ja
cmpsb
pop
adc
out
adc
cmpb
data16
mov
out
mov
lods
xchg
xor
cmpsl
push
sbb
push
ret
pop
or
or
xchg
push
push
lahf
add
imul
pop
dec
cli
pop
mov
test
jmp
xor
dec
push
out
mov
mov
jb
dec
xchg
pusha
loop
or
outsb
lret
imul
lcall
mov
sub
xor
mov
xor
in
lods
clc
pop
push
sar
cmpb
insl
sbb
ss
inc
sbbb
sub
mov
inc
pop
int3
sarl
lret
jle
mov
cmp
mov
outsb
mov
add
repnz
pusha
jo
cltd
cltd
mov
jg
push
hlt
jp
add
xor
cmpsb
pop
or
ds
das
pop
xor
mov
cmp
shll
in
clc
imul
jae
jae
xchg
mov
es
sbb
xchg
inc
mov
out
lcall
add
movsl
xor
dec
pop
jmp
lcall
jmp
adc
shrb
mov
stos
pop
jmp
aaa
cwtl
test
shr
inc
mov
dec
push
dec
mov
test
push
roll
iret
xchg
lret
imul
pop
or
bound
addr16
pusha
pop
jmp
adc
push
ds
or
adc
cmp
jb
xor
push
push
mov
test
cmp
je
ljmp
mov
int3
std
call
subl
mov
mov
mov
xor
daa
pop
adc
jle
je
daa
dec
data16
int3
roll
lea
cmp
or
je
in
mov
inc
lahf
and
dec
add
stos
fimull
fst
iret
xor
xchg
mov
cmpsb
ja
pop
dec
mov
movsl
rorl
pop
push
mov
lock
scas
lret
lods
pop
pop
add
dec
dec
cmc
jnp
rcl
bound
outsb
push
iret
loope
test
push
mov
arpl
fstpt
lods
cmpsb
and
dec
scas
inc
sti
stc
test
mov
cmp
mov
icebp
sub
test
jbe
inc
hlt
mov
cmp
cmpsl
outsl
sti
sub
dec
es
fstp
push
cmc
sbb
daa
jb
js
adc
ds
fmul
dec
loope
addb
popf
xor
into
imul
and
adc
xchg
addr16
xchg
inc
inc
inc
popa
ror
aas
mov
leave
sahf
lahf
push
adc
xchg
hlt
or
imul
sbb
cmc
sarb
push
xchg
fwait
pop
cli
bnd
ja
sbb
cmp
xlat
insl
mov
or
addr16
push
cmpsl
pusha
push
add
mov
fildl
adc
inc
mov
push
pop
ja
mov
icebp
and
addl
repnz
sub
pop
inc
lahf
push
inc
xchg
adc
xlat
jg
xor
jnp
fcmovnb
push
mov
inc
in
cli
cwtl
imul
mov
dec
test
jae
in
jecxz
std
mov
cwtl
push
daa
mov
and
xor
pop
es
xlat
subl
ja
test
jl
jle
test
cmp
repnz
pop
push
sbb
adcb
jmp
add
pop
inc
or
pop
push
lret
stos
xchg
insb
out
and
mov
inc
pop
or
adc
and
pop
mov
mov
or
push
cld
mov
and
push
or
subl
xor
fmuls
adc
test
cwtl
dec
outsb
push
and
mov
jbe
inc
fxrstor
mov
and
mov
std
pop
inc
les
pop
lods
shr
fldenv
sbb
pushf
dec
dec
mov
and
enter
sub
lea
in
leave
paddq
out
push
filds
stc
or
mov
leave
adc
sub
fsubrp
fnsave
adc
push
fsubs
test
ror
mov
push
mov
enter
ds
shlb
sbb
dec
popf
scas
jmp
and
nop
loopne
mov
js
xorl
or
lahf
mov
mov
sbb
adcb
in
mov
testb
pop
cmp
sbb
iret
or
shl
sbb
les
inc
scas
mov
cmp
fincstp
inc
jmp
mov
or
into
test
pop
out
pop
mov
test
sahf
lods
mov
xlat
ret
leave
push
lea
mov
fs
jg
push
xor
cld
push
clc
fwait
adc
jae
cmp
test
mov
sub
or
stos
test
mov
jns
inc
adc
sub
pop
jp
outsb
add
popa
jns
ljmp
popf
cwtl
outsl
inc
adc
stos
cld
fistpll
insb
mov
mov
mov
out
std
push
inc
mov
sub
pop
das
cli
shrb
mov
mov
outsb
add
movsl
mov
int
push
cmp
jg
inc
sub
scas
and
adc
add
mov
aam
sbb
inc
mov
mov
fwait
incw
xor
adc
stos
mov
test
dec
frstor
outsl
mov
dec
stc
mov
mov
nop
mov
or
xor
sbb
xor
lods
mov
lods
lds
jae
cld
outsl
sub
in
mov
lods
sbb
xacquire
int
in
xor
mov
data16
adc
and
dec
cmpsb
cmp
dec
mov
imul
loope
repz
stos
mov
out
icebp
fisttpl
dec
or
or
and
fisubl
ss
in
push
pop
test
mov
insl
repz
push
or
mov
js
jb
push
stos
mov
cmc
sbb
xor
xchg
jmp
scas
mov
pop
adcb
inc
out
ret
cmpl
sbb
dec
sbb
or
xor
int3
or
adc
gs
rorl
dec
mov
xor
movsb
and
mov
pop
sbb
fldl
dec
cmp
xchg
fs
pop
and
in
icebp
mov
sbb
pop
cmc
mov
push
and
lret
movsl
pop
les
sub
adc
sub
out
sbb
std
mov
push
outsb
sti
add
push
sub
cmp
icebp
dec
jns
arpl
add
div
jno
negl
push
xchg
cmp
aas
insb
mov
pop
cmp
jae
jnp
pop
mov
cmp
stos
insb
outsl
push
mov
sbb
fists
aam
inc
xchg
push
mov
push
sub
jns
test
in
jge
rorb
dec
adc
lods
push
jbe
or
stos
enter
dec
cli
cmp
lret
test
dec
lods
outsb
ljmp
mov
mov
dec
push
jge
loopne
mov
in
pop
mov
xor
mov
and
test
orb
bound
fsubl
leave
dec
xor
adc
and
stos
push
add
pop
or
scas
push
inc
mov
fadds
push
cmpsb
push
push
mov
mov
aad
add
adc
cmp
lahf
lds
push
test
or
arpl
mov
imul
pop
or
or
xchg
cmp
shll
xorl
sbb
jl
or
mov
outsb
into
mov
mov
jg
rcr
pop
fsubs
and
fsubs
ficomps
mov
imul
daa
insl
push
push
mov
mov
mov
dec
jmp
lret
fisubrl
jg
fimull
lea
add
pop
sbb
mov
stos
test
mov
inc
cltd
push
leave
add
mov
aaa
std
cwtl
movsl
hlt
pop
pop
stos
dec
or
sti
std
pop
insl
xor
lods
pop
push
and
inc
cwtl
mov
inc
std
and
shll
jle
jp
es
xchg
pop
mov
add
sub
mov
prefetch
and
enter
imul
inc
push
test
xor
xchg
lret
pushf
xor
mov
add
pop
insl
xlat
scas
xlat
bound
stos
push
push
mov
inc
iret
mov
mov
mov
jb
test
adc
inc
sbb
xor
mov
jno,pn
sbb
movsb
xchg
mov
cmpsl
cmp
lds
sub
or
cmc
jns
rolb
into
aaa
fdivrl
movb
aad
stos
cmc
fisubrl
mov
mov
rol
mov
pop
out
pushf
adc
sahf
jecxz
sub
out
shll
pop
mov
testl
xor
cmpsb
add
lcall
decb
mov
dec
test
pop
outsb
aaa
call
and
dec
jns
jns
push
int3
mov
mov
nop
dec
test
adc
mov
dec
xchg
mov
xchg
xor
mov
aad
and
test
or
pop
or
enter
int3
insl
sbb
lcall
sbb
mov
in
xchg
pop
movsb
mov
jge
inc
mulb
push
xchg
push
stos
lock
sub
aad
ja
jge
fwait
mov
push
aaa
cmp
ljmp
lret
test
xchg
xchg
fisubl
and
and
les
fistl
add
sub
sahf
mov
fwait
inc
xor
in
or
mov
sbb
jnp
in
cmp
in
sub
or
cmp
sbb
cli
sti
outsl
imulb
jbe
mov
daa
or
and
sub
lea
fwait
jno
cmp
gs
mov
xorb
push
sbbb
sbb
mov
fdivrs
adc
or
test
popf
lds
push
jecxz
les
les
outsl
mov
notb
xor
dec
mov
xor
out
cld
mov
gs
test
adc
mov
and
rcr
scas
in
push
gs
jnp
out
sub
leave
dec
stos
pop
push
xor
in
stos
outsl
push
es
pop
inc
fstpt
push
test
mov
push
dec
and
mov
fwait
push
mov
mov
insb
adc
test
mov
xlat
or
push
or
call
clc
sbb
jae
stos
dec
push
das
lahf
or
adc
dec
stos
les
push
mov
adc
jp
sbb
lret
imul
lahf
or
mov
loope
sbb
dec
clc
test
jl
push
jae
sahf
cltd
arpl
popa
xor
sbb
or
push
cmp
pop
dec
add
xchg
ficomps
rorb
cmp
mov
jns
enter
stos
fmul
jb
movsl
hlt
or
mov
pushf
rcll
xchg
dec
jmp
out
call
cmpsb
and
and
cwtl
arpl
jnp
les
inc
loope
out
sub
scas
shl
daa
hlt
loopne
stc
aaa
int3
mov
adc
pop
pop
dec
ffreep
lahf
jecxz
scas
pop
hlt
fdiv
arpl
cmp
loope
ret
pop
setne
es
aas
daa
mov
or
xor
or
or
pop
in
or
stc
inc
jg
mov
lods
push
jns
dec
and
sbb
hlt
sbb
pop
xor
sub
mov
xor
ret
push
pop
stos
sub
add
sub
aad
je
test
sub
xchg
sbb
pusha
xchg
jno
popf
xchg
jl
pop
loopne
jge
mov
sbb
testb
xlat
cs
pop
dec
or
hlt
loopne
pop
shll
mov
jmp
inc
mov
pop
inc
sahf
jmp
jb
mov
adc
daa
bound
bound
push
mov
push
inc
add
xchg
sub
xchg
jbe
xor
cli
stos
in
mov
lahf
sarb
in
outsl
ljmp
sbb
or
lods
das
mov
xchg
jmp
jecxz
js
test
rorl
decb
aad
sbb
sub
inc
push
jp
setg
mov
cli
push
movsl
jnp
add
adc
leave
adc
out
iret
push
sbb
or
pop
scas
test
bound
int3
dec
cmpsb
xor
test
sub
pcmpgtw
sbb
lea
mov
inc
loop
and
dec
test
mov
das
mov
push
pop
xlat
sub
adc
repnz
addr16
xor
pop
pop
or
xor
popf
cs
jge
iret
mov
xchg
xchg
mov
je
inc
mov
jp
mov
out
js
and
movsb
and
jp
in
mov
or
jecxz
cmc
test
mov
ret
sub
test
jns
faddl
movsb
stos
loopne
pop
xchg
inc
sub
fbld
sbb
inc
sbb
cs
jae
insb
and
jns
daa
pushf
sbbl
jnp
add
jbe
cmp
xor
rorl
test
jmp
jmp
and
ds
xchg
mov
outsl
push
je
daa
jg
roll
loope
cmp
cmpsl
mulb
adc
push
mov
mov
aas
or
mov
int
and
bound
mov
popf
movl
jns
loop
data16
mov
repnz
xor
fsubs
rcrl
or
mov
in
aad
add
outsl
movb
stos
lods
pushf
fwait
mov
sbb
pop
jbe
test
and
pop
daa
add
xchg
mov
adc
xor
mov
daa
adc
mov
inc
int
jp
rclb
fisttps
jbe
cmp
ds
jp
and
push
mov
enter
adc
filds
cltd
int
xchg
add
pushf
inc
mov
lcall
pop
inc
das
pushf
js
jge
pop
inc
jp
xchg
add
imulb
mov
inc
or
gs
or
rcr
mov
pop
scas
jns,pn
cmp
adc
jne,pt
loop
cmp
xor
or
dec
xchg
mov
push
cmp
dec
into
shll
mov
sbb
xor
sbb
das
fisttpl
fwait
sub
push
sbb
mov
jl
pop
nop
imul
shl
std
mov
jg
jl
inc
pop
std
loop
sbb
scas
pop
das
xchg
push
lods
and
mov
es
xchg
mov
cwtl
push
push
ret
adc
push
loopne
int
sbb
insb
jno
sbb
adc
pop
lret
pop
inc
addl
dec
fld1
sbb
mov
mov
ret
cld
fisubrl
shlb
or
scas
and
aad
xchg
pop
sub
es
test
xchg
loop
xorb
jmp
or
out
or
add
push
rorb
cmp
push
in
clc
inc
ds
shl
sbb
fbstp
jg
leave
scas
jge
jbe
insb
jo
xchg
push
outsb
or
call
stos
in
lret
sti
or
test
outsl
xor
jecxz
push
cmp
cltd
fs
push
inc
stc
adc
lods
mov
sbb
divb
adc
stos
dec
mov
daa
jb
or
jecxz
xchg
cwtl
pop
inc
pusha
mov
movsb
or
inc
insl
in
rclb
je
shl
add
and
sbb
sub
mov
mov
arpl
aas
xor
les
fistpll
or
das
leave
and
lret
pop
sbb
gs
frstor
jge
loopne
fwait
movsb
lret
test
gs
mov
adc
aaa
xchg
jecxz
sbb
inc
dec
xchg
nop
pop
js
loop
sbb
inc
pop
in
or
sbbb
cltd
mov
and
xchg
push
jle
pushf
lods
js
xor
cli
shll
mov
inc
popf
daa
fdivrl
and
movl
jmp
jecxz
test
push
shlb
cmovne
dec
jl
adc
push
js
push
dec
sbbb
test
and
add
cwtl
sub
add
cs
mov
test
insl
imul
out
inc
jmp
inc
outsl
jle
mov
cltd
pop
push
mov
gs
mov
ja
sbb
into
sub
ror
adc
or
imul
stc
mov
jp
xor
inc
or
lods
cwtl
push
xor
cmc
xor
insb
jo
xor
rolb
xchg
add
int
ljmp
mov
mov
sarb
mov
xchg
adc
lcall
ret
jne
jl
push
xchg
mov
insb
mov
idiv
push
sbbl
fisubs
cltd
sub
dec
mov
jne
push
rorl
pop
int3
push
ret
inc
jae
lret
sub
or
jecxz
sbb
movsl
push
lcall
xchg
cmp
inc
pop
dec
inc
push
sahf
fistpll
add
sbb
cltd
icebp
out
out
xor
jno
cmc
or
mov
xchg
dec
insb
cmp
xchg
test
cld
cs
dec
iret
cmp
ja
notl
mov
sub
fisubl
add
rclb
ljmp
jge
inc
inc
xchg
xor
dec
adc
sub
les
lods
pop
cmp
call
xchg
lock
mov
push
test
mov
and
sub
mov
js
iret
jl
mov
in
xor
xor
push
popl
mov
adc
jge
in
mov
je
test
and
punpcklbw
sti
cwtl
adc
adc
inc
in
aaa
ss
mov
inc
adcl
test
int3
mov
out
pop
addr16
add
jmp
jae,pt
push
or
icebp
xlat
pop
adc
mov
aaa
jg
ret
xchg
mov
dec
leave
sub
hlt
pop
popa
xchg
mov
push
bound
out
sahf
dec
outsl
addl
mov
mov
and
jge
stc
scas
mov
dec
mov
jno
ja
jae
in
push
adc
out
inc
sub
sub
fs
cmc
jmp
test
push
js
gs
test
mov
push
lret
xor
test
dec
mov
movb
xchg
sti
push
es
imulb
sub
mov
mov
in
mov
lea
mov
mov
push
lret
jle
push
sub
cltd
cmp
pop
mov
mov
sbb
push
or
add
inc
test
shrb
mov
pushf
out
or
aad
jns
mov
retw
popa
das
push
stc
push
sbb
xor
add
mov
pop
push
sti
xor
jp
push
aad
sbb
sahf
int
out
fucomi
jecxz
adc
sub
iret
fsubl
call
lods
push
and
and
pop
nop
dec
xchg
mov
dec
movsl
movsl
xchg
inc
push
psubusb
push
xor
lret
into
and
imul
pop
push
hlt
adc
jns
mov
ss
fisubrl
scas
push
and
pop
test
mov
cld
xchg
test
push
fwait
xchg
add
push
dec
add
xchg
mov
mov
in
out
pop
mov
icebp
xor
adc
rclb
jns
jnp
mov
push
fidivs
mov
or
lret
xchg
pop
xchg
xor
or
pop
cmp
dec
mov
mov
out
test
jbe
aad
push
and
repz
pop
cmc
cwtl
lret
imul
ljmp
jo
scas
jns
outsl
push
rcl
jg
adc
mov
xchg
lock
les
add
ficoml
sub
jl
jae
xor
jbe
push
jg
jo
mov
nop
test
jp
adc
jl
mov
addr16
arpl
aad
and
dec
adc
test
daa
imul
xchg
xchg
leave
std
and
jge
adc
inc
jbe
fmulp
in
jecxz
fnstsw
jae
sub
pop
push
inc
and
bound
xor
out
xchg
add
cmpsl
sti
cmp
popa
int
leave
rcrb
jo
mov
testl
adc
outsl
rol
add
mov
and
ret
jno
add
jl
jge
ljmp
in
icebp
pushf
pop
testb
sub
add
sahf
lock
fs
sbb
pushf
into
lahf
inc
outsb
lret
xchg
clc
out
xlat
lret
iret
push
pop
pop
jecxz
or
xchg
add
push
dec
inc
das
sbb
dec
and
xor
aam
dec
flds
push
mov
xchg
fcmovbe
adc
pop
lret
mov
sub
jns
movsl
xchg
jae
or
stc
pop
rcll
dec
rcll
jge
mov
adc
cld
enter
push
inc
cmp
mov
icebp
xchg
arpl
aam
pop
or
add
fsubrl
jp
repz
repz
cmp
leave
jo
jg
cmpsb
jne
aaa
pushl
shld
and
pop
shll
mov
outsb
daa
sub
daa
adc
pop
and
pop
lods
fucom
out
outsl
jae
popa
cmp
shlb
mov
dec
push
push
jae
sbb
adc
pusha
fcoms
pop
add
jno
add
sbb
xor
mov
cmp
pop
mov
mov
in
adc
cmp
sti
fbstp
sbb
mov
jge
shll
testl
and
ja
or
cmp
data16
xor
test
out
pop
loop
fnstenv
subl
cs
adc
mov
ljmp
xchg
push
adc
punpckhbw
popa
js
sti
jo
nop
pushf
cwtl
out
cltd
mov
and
pop
sbb
not
jne
add
mov
test
sub
push
sub
cmp
push
and
adc
mov
mov
xchg
jnp
inc
inc
inc
pop
repz
dec
sbb
ss
mov
push
imul
mov
aam
jle
repz
out
xor
mov
fwait
pop
testb
repz
movsl
xor
fs
xor
fisubrl
test
lods
or
icebp
push
lcall
pop
ficoms
xor
cmc
stos
xchg
xchg
pop
in
pop
gs
push
mov
xlat
movsl
imul
mov
mov
adc
xor
push
mov
or
and
mov
or
mov
icebp
or
pop
cmpsl
ret
dec
into
into
adc
loope
js
fdivl
out
add
mov
xor
jb
cmp
int3
dec
shll
test
mov
cmpsb
push
aam
jmp
pop
cwtl
cmpb
sbb
out
aas
push
fisubl
dec
fildl
mov
inc
ret
das
aaa
xor
lcall
movsb
adc
fiadds
xchg
pop
enter
cmpsl
mov
mov
xor
adc
ljmp
push
adc
aas
or
jecxz
jmp
pop
push
xchg
daa
cmc
out
sbb
cwtl
add
jno
cmp
jmp
jne
pop
push
movsl
inc
cmp
dec
inc
lret
dec
xchg
mov
adc
mov
pop
mov
and
jno
xchg
pushf
popa
add
xor
in
in
sbb
jbe
inc
and
frstor
or
push
les
mov
mov
out
mov
xchg
xor
ljmp
repnz
stc
fdivl
enter
popa
and
pusha
pop
cmc
xor
rcl
jns
insb
stc
sahf
gs
cmp
shlb
and
jle
cmp
int3
sbb
mov
and
repz
inc
fildl
iret
xchg
sbb
lret
pop
cmp
insb
adc
aas
arpl
sub
sub
mov
mov
lea
iret
dec
cltd
mov
sarb
in
in
sbb
call
mov
in
add
lcall
jno
jle
mov
dec
jae
loop
push
inc
ret
xchg
mov
pop
add
push
mov
pop
sub
mov
add
or
cmp
sbb
fcomi
clc
imul
inc
xor
and
inc
cwtl
push
shll
dec
push
mov
lahf
mov
pop
add
mov
in
add
sbb
push
xor
das
pop
xor
stc
push
sub
andnps
jo
xlat
lret
push
sbb
cmp
rorb
nop
mov
sub
imul
fistpl
decl
sbb
bound
in
adc
cmp
inc
in
lret
clc
out
pop
jno
lods
cmp
pop
or
imul
aam
lods
cmpsl
jp
leave
test
or
sub
pinsrw
or
mov
inc
iret
xor
pop
nop
cli
aas
in
int
call
mov
push
int
xor
daa
popf
dec
xor
loopne
sub
jge
dec
insb
mov
mov
andl
jb
sar
call
jg
mov
cwtl
es
aad
xchg
mov
ja
mov
jns
repnz
sub
or
mov
mov
mov
in
popa
sub
jbe
aas
lret
add
shl
mov
mov
push
mov
and
cwtl
out
xor
mov
lcall
cwtl
jle
fs
xlat
dec
outsb
in
push
bswap
jle
xor
inc
xchg
push
addr16
add
add
xchg
inc
jbe
and
sbb
inc
movups
add
add
mov
xor
arpl
mov
into
lods
mov
repz
stos
out
cli
xlat
pop
inc
jb
sub
mov
pusha
fs
stos
ret
mov
lea
sub
iret
or
jp
adc
push
mov
pop
add
subl
mov
les
iret
das
xchg
sub
stos
repnz
loope
sbb
jns
scas
sbb
sbb
lcall
and
jl
lahf
clc
mov
stc
inc
add
adc
mov
push
mov
iret
cmp
add
mov
dec
pop
push
fnstenv
push
lods
or
test
sub
mov
inc
jne
insb
xchg
mov
add
pop
test
js
dec
push
js
inc
ret
pusha
aam
pop
cmp
pusha
inc
jns
and
outsl
nop
fsubp
aad
mov
or
roll
call
sbb
in
cwtl
xchg
popa
dec
sbb
ds
pop
mov
inc
push
push
leave
icebp
xchg
cwtl
inc
xor
jle
mov
in
sar
lret
call
popa
push
mov
adc
nop
scas
jno
push
sub
mov
pop
std
adc
stos
xchg
fs
es
sub
std
xchg
subb
cmc
lahf
cmc
in
mov
scas
pop
sti
or
test
or
in
call
jb
jae
push
jno
add
mov
jb
rcpps
xor
adc
in
jmp
or
xor
xchg
sbb
in
cmp
adc
das
gs
lods
fldcw
and
fbstp
in
mov
mov
mov
adc
call
popf
mov
shrl
fwait
in
jg
xor
sbb
mov
popa
sbb
lret
fsubl
out
jmp
mov
fstps
lock
mov
xchg
xchg
loopne
popa
or
scas
imul
add
test
mov
or
int
fcmovbe
in
dec
stos
sub
and
xor
add
jns
add
jp
fists
lret
sub
sub
fnstenv
fadds
testl
xchg
push
outsl
add
push
jmp
cmp
xchg
imul
cmpsl
out
pop
mov
in
xor
or
lret
mov
cmpsl
add
popa
or
shrl
lea
add
loop
sbb
stos
mov
clc
mov
ljmp
xchg
sahf
mov
push
push
jae
subb
test
add
das
std
jl
xlat
mov
lret
push
dec
sub
push
inc
insb
ficompl
xor
cmp
shrl
pop
xchg
push
push
add
xchg
cmp
fcomps
cmp
xor
movsb
fmull
jae
rcrb
mov
testl
in
or
sub
xor
cwtl
aam
sahf
pushf
shlb
ret
fwait
test
shlb
ljmp
mov
imul
shll
or
jne
repz
outsb
pop
ja
les
dec
mov
lret
test
roll
cmpsl
mov
cmp
lds
and
cmp
pop
cmpsb
and
xor
mov
arpl
test
out
sub
jecxz
shr
add
lods
mov
cmp
jne
stos
add
and
inc
push
sub
arpl
push
or
jp
adc
pop
mov
aas
stc
in
out
negl
imul
mov
loope
jmp
jge
imul
aas
mov
or
mov
jg
arpl
xchg
loop
xchg
sbb
in
fstl
aam
fdivrl
push
loopne
and
sbb
or
in
int
addb
push
mov
jo
ficoml
loop
mov
or
mov
pushf
sub
roll
repz
js
imul
inc
imul
cmc
xor
std
add
lock
insl
mov
mov
sahf
mov
insl
jno
ret
insb
loop
fiaddl
shlb
mov
jb
ss
mov
cmp
xchg
movsb
imul
cmp
and
adc
inc
fidivrs
loop
xor
out
dec
push
jl
pop
push
jns
iret
aad
cwtl
loop
sbb
jmp
jbe
push
in
lcall
sbb
std
insb
inc
mov
outsb
add
dec
in
lea
fldl
cmpb
inc
jbe
jmp
in
cmpsl
mov
adc
inc
inc
insb
cwtl
xlat
xchg
cmp
je
pop
repnz
pushf
sbb
jle
adc
mov
jmp
int3
pusha
mov
arpl
pop
popa
add
mov
idivl
mov
bound
dec
arpl
mov
shrb
xchg
repz
and
sub
pushw
loope
sarb
mov
and
push
mov
xchg
aam
orl
aas
dec
out
adc
std
dec
std
lahf
popl
mov
jle
test
add
aad
ss
and
imul
push
mov
lea
push
int
inc
lret
jns
inc
jp
jg
xor
inc
ficomps
mov
mov
leave
leave
jmp
push
mov
inc
mov
in
jbe
and
and
cmpb
icebp
lds
xor
mov
outsb
leave
and
sub
fnstcw
adc
arpl
push
imul
fldcw
cltd
push
sbb
or
mov
cld
lret
or
scas
into
push
push
jmp
push
cmp
mov
xor
in
dec
aad
sub
cmp
rol
fsqrt
jno
sub
pop
and
shlb
mov
jno
add
xchg
adc
lds
pop
xchg
dec
daa
and
adc
add
lret
push
pop
leave
out
ret
xchg
push
xchg
push
lds
ljmp
or
jp
call
pop
xor
jns
push
mov
ror
or
mov
push
cmpl
push
or
test
push
jbe
push
jge
xchg
inc
je
and
sbb
sub
outsl
pop
cltd
sub
adc
add
add
test
or
out
adc
aad
mov
cmp
mov
sbb
or
shl
imul
stc
idivb
mov
stc
lcall
adc
jg
cmp
inc
ret
scas
test
enter
in
or
mov
sbb
mov
into
sub
movnti
push
repz
pop
test
int
and
addl
xchg
daa
stos
test
or
lahf
push
repnz
pusha
sarb
xchg
dec
sub
jmp
cld
mov
sub
mov
adc
and
das
mov
cli
pop
inc
dec
fdivs
jae
pop
fs
mov
inc
cmp
mov
ret
xchg
pop
outsl
dec
fdivl
adc
push
jp
cwtl
loop
dec
dec
adcl
xchg
cmpsb
flds
pop
xchg
push
scas
jnp
fcmovu
fidivl
out
xor
xor
fdivrl
fcomi
jmp
aaa
cmp
lcall
nop
ss
jl
mov
dec
idivb
push
pop
int3
xchg
dec
ss
push
pop
lods
in
in
push
ret
ret
ret
sbb
xor
xchg
clc
mov
mov
data16
data16
mov
jecxz
mov
xchg
jns
mov
imul
loop
je
imul
xchg
aad
mov
jbe
scas
sbb
cmpsb
cmp
jne
dec
cmp
imul
cmpsl
xchg
or
repz
and
fcmovne
pop
mov
sahf
rcr
cmpsl
mov
repz
mov
fdivl
gs
popa
mov
push
adc
lahf
sub
push
dec
fcoms
idiv
push
add
xchg
sbb
gs
adc
lret
cmpsl
mov
xchg
in
sub
bswap
sbb
xor
ja
sbb
add
and
push
push
stc
ds
add
add
dec
jns
icebp
fs
out
add
lret
push
bound
push
add
push
popf
cmp
xchg
jle
push
stos
iret
adc
pop
scas
adc
imul
push
push
xchg
push
or
jb
dec
sahf
inc
add
mov
fdiv
xchg
jl
lods
lods
cmpsl
sarl
stc
mov
rcrb
fwait
std
out
outsb
or
in
mov
fildl
ja
ljmp
inc
mov
loope
adc
dec
sbb
xlat
pop
xlat
mov
and
cltd
int3
or
bound
xor
cmp
inc
int
imul
sbb
pop
mov
out
xchg
dec
mov
movsl
mov
lahf
repnz
mov
popa
aaa
sbb
les
cmp
in
mov
addr16
inc
mov
pop
mov
icebp
jge
mov
arpl
call
icebp
xchg
sub
adc
test
push
lds
ds
sahf
outsb
outsl
outsl
int3
add
das
xchg
fstps
mov
mov
lret
add
outsl
arpl
and
iret
sarl
jl
sbb
outsb
xlat
bound
cmp
dec
out
inc
pop
pop
xchg
dec
push
or
lods
cli
cld
jl
lods
jecxz
inc
and
jg
and
adc
mov
dec
sub
sti
dec
pop
iret
pop
test
mov
test
push
mov
inc
lahf
sub
adc
bnd
mov
xchg
idivl
cmpsb
loopne,pt
push
cld
push
lods
xor
scas
arpl
es
adc
lret
or
push
icebp
xor
xchg
clc
push
push
add
std
pop
sbb
jns
ja
divl
repnz
std
cwtl
sub
inc
adc
xchg
int
nop
mov
and
pusha
push
test
popf
repz
adc
stc
mov
mov
add
push
sub
xchg
in
sbb
mov
mov
add
mov
push
mov
jns
in
inc
scas
gs
stos
repnz
test
incb
or
push
sbb
and
cmp
mov
xchg
int3
rcrl
adc
insb
xchg
xchg
pop
mov
fmul
jg
push
mov
dec
dec
xchg
ret
leave
gs
aas
inc
popf
jae
xlat
mov
popf
push
xchg
xor
xchg
std
shll
fsubs
inc
aaa
xchg
add
repnz
pop
loope
lret
jne
push
or
test
pop
mov
inc
adc
mov
and
movsb
in
shrb
leave
cli
lock
or
addr16
cwtl
mov
aaa
add
sbbl
outsb
nop
insl
sbb
fdivl
add
shll
js
cmpsb
movsl
js
movsl
icebp
sbbl
outsl
jg
push
stos
lods
dec
sti
and
push
mov
add
fcom
lods
mov
add
mov
xor
xchg
jb,pt
lahf
jbe
fisubrl
adc
mov
pusha
aad
and
xchg
outsb
lcall
das
nop
mov
js
push
fistpll
es
mov
cli
mov
cltd
dec
mov
adcb
mov
fwait
xor
xchg
or
mov
outsl
jne
mov
add
fnstcw
sti
xor
aad
ds
mov
stos
into
scas
cmpsl
or
push
lds
test
ja
jbe
sbb
xor
imul
jle
movsl
fwait
int3
adc
add
scas
jne
scas
lcall
inc
lret
pop
and
popa
or
stc
xchg
shlb
jg
out
rclb
jle
lret
cmpsl
out
mov
stos
xor
dec
test
push
xor
jle
inc
mov
cmp
fnstcw
aam
add
pop
out
dec
adc
movsb
insb
ret
fstps
mov
mov
cmp
xor
or
adc
inc
int3
xor
mov
xor
adc
jae
ds
xor
push
cmp
and
add
fwait
in
lret
jle
sarl
int3
dec
divb
push
add
pop
add
loopne
sbb
test
mov
imul
jnp
js
imul
push
mov
xor
mov
inc
pop
lods
xchg
pop
cmp
mov
push
gs
push
xchg
sbb
mov
and
leave
or
iret
lahf
loope
cmc
out
aad
pop
movsb
xchg
insb
pop
fldt
fwait
mov
dec
jecxz
push
hlt
ljmp
push
lock
xor
mov
mov
clc
and
xchg
pop
sbb
mov
cmp
mov
sahf
adc
aam
lea
leave
sub
das
jge
cmp
or
push
mov
cmp
inc
mov
inc
subb
daa
pop
les
mov
push
pop
mov
jo
outsl
jle
scas
push
fisubs
testb
pop
incl
lea
xchg
sbb
xchg
add
mov
mov
pop
sahf
lret
bound
mov
sub
jge
push
mov
rcll
mov
repnz
cmpsl
adc
adc
fidivrl
loope
out
push
insb
jae
mov
jmp
pop
les
scas
dec
loope
jg
std
mov
sub
fucomi
loop
sti
ljmp
ret
jns
cmp
and
mov
ret
inc
lods
xchg
mov
and
rcrb
mov
or
pop
cmp
pop
add
inc
xchg
fisttps
imul
cmp
jne
std
mov
bound
shll
pop
adc
rorb
mov
inc
nop
sbb
xchg
pusha
push
dec
out
scas
add
jo
mov
test
push
xchg
pop
pop
pop
inc
xchg
lods
sub
jbe
sbb
test
sahf
inc
iret
push
aad
pop
xchg
jmp
pop
into
lcall
stc
xchg
outsb
inc
fdivr
xorl
js
push
lods
cmp
xchg
jne
cmp
in
push
out
mov
cwtl
mov
int
sbb
sub
out
cmp
fmuls
jb
cmc
inc
idivb
ds
cmp
stc
cmc
xchg
adc
add
ret
jae
lcall
add
inc
popa
std
hlt
or
outsl
cld
pop
cmp
xchg
shll
js
mov
aad
je
divl
sub
push
pop
xor
into
pop
orl
inc
call
push
fadd
fmul
loopne
aam
nop
arpl
mov
and
and
bound
adc
call
xor
mov
int
inc
jp
outsb
bound
jg
mov
outsb
jae
ja
daa
dec
jecxz
es
std
scas
pop
dec
outsl
pop
adc
dec
jmp
lcall
out
out
mov
or
dec
shll
lret
mov
popf
mov
ficompl
scas
cmp
xchg
pop
add
pop
loopne
or
insb
xchg
sub
pop
fdivrs
mov
inc
fwait
daa
pop
mov
aas
and
outsb
lcall
cmp
or
cli
fcomi
sub
enter
ljmp
out
mov
inc
mov
fisttpll
xchg
xor
int3
mov
sbb
jb
pop
inc
repz
add
das
mov
cmp
fiadds
movsl
les
mov
outsb
daa
sub
test
clc
xor
and
and
fdiv
push
sub
and
mov
mov
jno
repz
xor
enter
std
outsb
pop
cltd
mov
punpckldq
jb
lea
mov
pop
cmpsb
jge
add
mov
out
xor
std
stos
cmpsb
add
adc
out
out
xorl
popa
stc
jecxz
mov
pop
sub
jle
filds
pop
pop
inc
int
jl
add
lret
scas
out
pop
dec
push
stos
push
mov
dec
iret
push
add
push
andb
ficoms
in
pop
mov
inc
mov
shlb
dec
iret
aas
loope
and
cltd
jne
ja
sbb
xorl
sbb
arpl
pop
cmc
inc
push
dec
scas
jo
in
aas
push
int3
dec
shrb
imull
push
ret
pop
arpl
rcr
xor
loop
pop
ret
add
mov
imull
pop
nop
in
shrb
xchg
scas
mov
scas
cmp
test
xor
cmp
jno
pop
inc
adc
sub
dec
lret
dec
mov
lahf
loopne
pop
imul
inc
sbb
lea
add
into
mov
mov
lock
jb
xlat
mov
mov
aad
jecxz
mov
cld
xchg
ds
cmp
aad
push
cmp
or
in
adc
push
xchg
and
outsl
mov
shlb
xchg
jle
xorb
lcall
popa
mov
rolb
test
lds
jo
inc
pop
dec
out
sub
or
movsl
mov
mov
icebp
imul
js
jle
call
andl
fdecstp
lcall
add
xchg
or
adc
xor
jge
push
xchg
inc
cmpsl
mov
test
leave
out
hlt
add
int3
das
lcall
push
sub
repz
inc
out
adc
test
sbb
adc
stc
jnp
mov
jns
jp
pop
inc
scas
cmpsl
pop
scas
sbb
inc
repnz
push
negl
adc
push
lcall
jecxz
inc
popa
call
cmpsl
or
loope
mov
sbb
lcall
out
adc
add
jle
into
push
faddl
loopne
xchg
and
out
sub
dec
fdivs
outsl
test
xor
lock
cmpl
ljmp
push
lods
test
sbb
pop
mov
sub
cmp
adc
loop
push
notl
adc
mov
push
push
dec
xor
test
shlb
adcb
dec
push
pop
cmp
mov
mov
fbld
mov
imul
test
sub
xchg
xor
push
xorl
das
adc
mov
xor
shrl
cmp
and
push
in
xchg
test
les
in
arpl
shll
lret
dec
or
sahf
sbb
rclb
pop
ds
dec
sub
xchg
mov
cli
and
sbb
sub
mov
imul
ret
lods
fcomps
je
add
inc
push
jmp
lret
mov
outsb
imul
out
mov
sbb
repz
cld
jne
sub
pcmpeqd
jno
or
sub
mov
sahf
int3
test
aad
int3
rorb
in
inc
pop
mov
scas
shrl
and
jg
jns
gs
scas
test
or
push
and
fistpl
push
ret
xchg
ds
lods
and
push
add
sbb
cmp
lret
sti
ret
lret
inc
sub
call
xor
jmp
inc
movsl
dec
xor
inc
lret
push
aad
jno
inc
or
repz
das
push
adc
ss
mov
aad
inc
lahf
lock
xchg
pop
and
nop
addr16
dec
sub
pop
xchg
jo
aam
mov
sub
movsb
scas
ss
lret
sub
inc
mov
cli
popf
jecxz
inc
in
mov
outsl
mov
sub
test
push
inc
jne
and
aas
adc
xchg
inc
sbb
cmpsl
mov
cmp
shll
shll
pop
outsb
daa
xor
mov
add
addr16
dec
cmp
std
aad
shll
mov
out
or
xchg
jp
in
ljmp
js
cmp
inc
sbb
ds
mov
testl
mov
inc
insb
mov
aam
dec
mov
mov
int3
cs
outsl
icebp
dec
and
adc
jno
insb
cmp
mov
cwtl
adc
out
iret
mov
xor
fwait
adcb
mov
lock
addr16
outsl
mov
es
pop
repz
mov
stos
sub
pop
stc
mov
out
jns
ficoms
sub
mov
pushf
subb
pushf
test
pop
jne
arpl
and
sbb
pop
in
mov
xchg
cmp
inc
outsb
mov
cmp
pop
jge
inc
fistpll
pop
sti
lret
mov
adc
or
lock
cmp
bound
cmp
mov
hlt
adc
pop
dec
test
lahf
out
jne
ds
int
insb
mull
xchg
mov
test
cs
adc
sbb
or
repz
ret
mov
std
mov
lcall
xchg
xchg
pop
cld
mov
mov
xor
in
icebp
test
cmpsl
adc
push
mov
or
in
xor
mov
cs
inc
jl
into
push
test
sahf
arpl
les
test
lods
inc
js
dec
add
imul
push
mov
ljmp
or
lea
iret
movsl
adc
mov
inc
sbb
push
aam
xchg
xrelease
fistpll
sti
lcall
dec
cmp
inc
mov
lahf
dec
or
push
clc
stc
jmp
loope
orl
cs
ljmp
mov
fildll
jb
stos
mov
int
pop
iret
fiaddl
jge
jae
xor
or
pusha
movsb
lods
dec
enter
repz
inc
mov
shlb
enter
adc
jo
xor
lods
cmc
mov
data16
insb
inc
sbb
inc
pop
dec
push
imul
orb
shrl
out
mov
in
popa
push
mov
push
push
std
sub
mov
test
imul
jg
out
aaa
aad
pop
mov
in
arpl
adc
dec
clc
jl
fistpl
mov
movsb
out
dec
sub
mov
inc
lock
movsl
xchg
pop
mov
mov
aam
rcrl
push
data16
cmpsb
adc
mov
push
push
push
push
int3
cmp
xchg
mov
sbb
xchg
pushf
and
mov
add
repnz
jnp
add
rclb
shll
jns
imul
ret
sbb
mov
xor
sub
inc
xchg
dec
mov
icebp
add
imul
negl
inc
cmpsl
dec
and
les
jg
mov
adc
nop
pusha
inc
sbb
pop
cmc
push
mov
lods
adc
push
fcmovnu
pusha
and
xchg
iret
xchg
pop
repz
xor
and
sbb
jecxz
fimuls
dec
push
out
xor
outsl
xchg
mov
aas
nop
mov
lods
push
aam
push
mov
bound
idivb
mov
sbb
idiv
adc
test
mov
loope
add
inc
mov
xor
push
mov
inc
add
int
pusha
adc
je
hlt
mov
push
lahf
pop
pop
push
and
stc
pop
sub
fucomp
jp
add
inc
mov
push
xchg
pop
sbb
dec
insl
sti
fwait
out
imul
mov
and
inc
cmp
std
pop
add
cmp
mov
insb
rcr
lret
mov
fistl
jno
and
out
loope
pop
les
bound
xchg
cltd
hlt
icebp
pop
shrl
add
xchg
in
mov
je
cmp
std
inc
mov
inc
shrb
cmp
mov
movsl
jae
jmp
outsl
xchg
js
push
in
pop
loop
movsb
fs
cli
testl
jne
sub
jg
nop
not
mov
sbbl
pusha
jle
int3
out
inc
into
push
aas
inc
xorb
jbe
push
pop
xchg
mov
xlat
cs
dec
movsb
xor
and
addr16
insw
icebp
add
adc
les
imul
rclb
xor
jecxz
popf
fsubrl
fisttps
sbb
fwait
add
cwtl
jbe
ficompl
or
push
push
cmp
push
or
in
fistpl
xor
jmp
scas
pop
bound
imul
lds
dec
dec
popa
shr
fcmove
nop
jbe
cld
stos
inc
add
push
mov
pop
jp
cwtl
in
mov
out
ficoml
add
lret
lock
str
inc
mov
std
movsl
cmp
fcmovnbe
mov
jg
sub
push
daa
into
insb
movsl
xchg
xorb
popf
inc
cmp
sbb
aad
mov
sti
adcl
pop
lock
push
cmp
hlt
test
sbb
jmp
mov
cmp
stc
mov
mov
mov
fistps
sub
cmc
hlt
inc
popf
hlt
cmpsb
cmp
jg
jo
push
pop
sbb
fbld
sarb
aas
sub
jg
faddl
adc
inc
mov
movl
ds
push
cmp
je
pop
push
mov
scas
mov
pop
daa
mov
push
fidivs
data16
iret
jg
int3
loopne
or
shll
int
imul
lret
xchg
xlat
lock
mov
fisttpll
xchg
mov
mov
mov
push
stc
inc
and
loope
xor
inc
dec
pop
push
xor
and
cmpsl
imul
xchg
aaa
frstor
pusha
les
das
test
pop
inc
dec
jo
inc
or
idivb
xor
js
add
mov
jmp
push
repz
les
repnz
xor
push
mov
fistpl
dec
stos
sub
in
mov
popa
es
add
xor
pusha
pop
and
insl
ljmp
insb
dec
and
xchg
rcrb
scas
pop
mov
aad
ret
or
and
call
aaa
push
push
loop
dec
shr
rol
mov
fsubl
out
fucomp
lods
mov
add
pop
scas
scas
add
ret
adc
rcrl
cmp
outsb
and
fnstenv
mov
jmp
lret
ret
pop
and
aas
or
xchg
loop
test
push
push
int
test
cmp
sti
ret
jle
push
mov
lret
sub
pop
dec
xchg
push
xchg
sbb
call
imul
inc
inc
jmp
adc
out
adc
or
mov
or
lock
clc
or
test
mov
mov
lahf
add
xchg
iret
add
lret
push
cmc
add
pop
js
aad
stos
pop
stc
mov
lods
mov
orb
cld
daa
lods
jb
nop
loop
or
leave
sub
in
mov
pop
or
adc
leave
inc
xor
mov
cmc
popa
cmovs
rcrb
mov
xchg
std
xor
pop
cwtl
push
add
and
xor
scas
std
incl
into
adc
or
sbb
repz
int
pop
lret
mov
inc
mov
lock
mov
test
inc
out
cmpsl
inc
add
popa
inc
stos
xor
jg
sub
pop
mov
addr16
cmpsl
shll
sbb
jo
js
inc
or
sahf
ss
push
dec
sub
aam
xor
or
push
repz
std
insb
hlt
lds
test
daa
cmp
jae
sub
out
mov
cmpb
mov
pop
push
iret
imul
ja
cmc
int3
scas
mov
inc
loopne
pop
arpl
fcmovb
adc
mov
xchg
shrb
pop
pop
mov
wbinvd
popf
jle
mov
and
ljmp
fs
mov
pop
lret
rorb
dec
ror
test
bound
pop
jle
push
push
loopne
mov
jbe
unpcklps
int
lock
dec
add
xchg
adc
imul
stos
jb
push
add
daa
cmp
push
lods
lret
out
inc
imul
xchg
xchg
xlat
inc
adc
jbe
push
lods
ja
inc
lock
cmpb
lret
shlb
popa
sub
xlat
fldcw
andl
pop
mov
pop
push
mov
in
popa
jnp
stos
clc
dec
and
xor
mov
dec
xchg
lahf
jae
pop
xchg
notb
sub
inc
cmpsl
loop
bound
daa
jns
sbb
push
and
test
cs
daa
mov
jo
mov
aam
cltd
cmc
das
sti
mov
cwtl
je
pusha
mov
dec
or
or
mov
mov
add
testl
mov
fstpt
pop
cmp
neg
dec
push
testl
mov
jnp
add
push
test
add
mov
imul
jns
inc
lret
pop
sub
lret
xchg
jg
adc
mov
scas
cmc
lret
cmpl
ret
clc
sbb
adc
add
cmp
mov
adc
or
fbstp
fildll
cmc
xchg
dec
or
jmp
jb
dec
jae
lea
ss
mov
repnz
into
out
adc
bound
adc
ret
ja
sub
mov
fldenv
xor
aad
mov
ljmp
popf
clc
fs
stc
je
loope
xchg
jl
lcall
jns
orl
lods
add
test
sub
pop
cmc
and
pop
jnp
sbb
xchg
mov
mov
cld
call
push
js
inc
movsb
pushf
xor
mov
jae
or
jecxz
pop
xchg
fistps
sub
sbb
pusha
jns
shrl
cmc
cltd
jae
inc
lret
cmp
pop
loop
mov
lds
ljmp
mull
cmp
sbb
fcoml
mov
lock
out
or
lret
sub
jecxz
pop
push
mov
pop
loop
pop
out
sbb
mov
insl
pop
jno
mov
insb
or
rclb
setbe
sarl
ds
mov
lea
daa
loope
stc
pop
mov
mov
push
bound
or
pop
loope
out
fdiv
repz
jl
test
adc
sbb
mov
jae
out
jecxz
sahf
mov
mov
cmpsb
or
pop
test
into
xor
pop
out
in
mov
or
aaa
sbb
arpl
loopne
adc
cmp
pop
in
adc
jl
jno
lods
mov
pop
pop
call
jb
es
jmp
add
xor
cltd
mov
test
inc
cwtl
jmp
add
test
add
outsl
adc
testl
jnp
cwtl
rorb
dec
dec
sahf
and
xchg
shll
xchg
lock
out
jl
iret
jbe
cmp
mov
mov
jb
jmp
dec
scas
scas
jle
sbb
push
sub
add
adc
fistpll
scas
sbb
jge
pusha
adc
int
and
cltd
fsubl
xchg
xchg
stos
sub
push
xor
scas
inc
popf
je
and
insl
fsubrp
push
outsl
adc
sarl
lds
jg
mov
sbb
test
and
adc
dec
dec
mov
lds
or
cmp
and
adc
fimull
mov
outsl
pop
nop
push
nop
out
mov
lods
movsb
scas
enter
test
arpl
out
out
jg
in
and
daa
mov
cmpsl
add
mov
dec
adc
pop
into
jle
std
call
jns
shl
add
test
sahf
lahf
xlat
mov
in
adc
jl
mov
sti
or
jmp
es
xchg
stos
add
out
ficomps
enter
xchg
out
cmp
push
dec
xchg
push
xor
mov
inc
outsb
insb
xchg
push
cmc
mov
sub
mov
loop
into
mov
pop
jg
fisttpll
xchg
enter
aaa
mov
in
sub
or
jns
ds
sub
jo
mov
sbb
std
jecxz
rolb
sub
mov
ljmp
ja
and
or
xor
arpl
fidivrs
jns
pop
mov
mov
out
inc
imul
xchg
pop
pop
jmp
ja
repz
cmc
jno
mov
jl
call
xchg
cmp
push
mov
dec
lret
je
mov
shl
push
lret
popf
pop
hlt
dec
mov
rcrl
add
out
mov
xor
scas
mov
sbb
mov
cmc
cmp
xchg
xchg
mov
cmp
pop
xchg
push
jmp
push
sbb
mov
push
movsl
into
inc
pop
rclb
pop
mov
dec
mov
jbe
enter
push
std
sbb
mov
popl
xor
pushf
in
in
sahf
cltd
out
repnz
pop
sar
inc
data16
xchg
jno
addl
imul
mov
lods
add
xor
cmp
add
cs
cwtl
ja
stos
inc
rorb
jbe
stos
xor
push
mov
fdivl
push
xorl
cmc
flds
lahf
mov
push
mov
paddw
andb
fwait
jg
dec
cmp
inc
bnd
xchg
xor
aas
outsb
lods
and
adc
mov
sarl
inc
dec
jne
lds
mov
aad
dec
xor
push
mov
clc
ret
mov
adc
ljmp
out
mov
dec
outsb
jg
arpl
mov
push
imul
push
add
dec
push
out
xchg
sub
stos
xor
jne
cmp
icebp
enter
cmp
push
push
push
or
daa
mov
push
sbb
mov
cmp
mov
int3
sub
fmull
mov
test
pop
pop
cmp
outsl
cmpsb
xor
push
push
es
popf
push
dec
fistps
cli
pop
sub
icebp
and
or
sub
push
cld
mov
mov
adc
aas
push
insb
dec
negl
movsl
or
ds
mov
adcl
xor
mov
jl
std
incl
jae
divb
out
add
nop
jg
in
jne
ret
sub
rol
rcrb
fists
and
jmp
and
dec
es
ret
push
inc
imul
sbb
add
cwtl
jb
pop
jmp
add
xor
adc
cli
adc
inc
sahf
mov
inc
add
mov
leave
add
dec
mov
mov
lods
or
cmp
push
imul
out
and
xor
negb
push
call
mov
add
pop
mov
nop
cmp
pop
popl
jg
jo
les
testl
add
js
dec
cmp
sbb
pop
in
pushf
pop
sbb
adc
movl
pop
out
pop
mov
ret
lds
out
into
xor
cld
mov
aad
imul
std
cmp
lds
pop
pusha
xor
sub
cmp
int
dec
xorl
mov
mov
xcrypt-ctr
cmpsl
sbb
dec
pop
pop
dec
out
test
sti
xor
test
addr16
aas
xlat
jecxz
push
icebp
mov
cmp
dec
mov
push
divl
gs
cmpsb
dec
into
mov
insb
faddl
push
add
mov
fdivrp
mov
sahf
sbb
frstor
push
repnz
mov
inc
pop
stos
sbb
into
sub
ret
pop
loope
int3
in
jnp
dec
jmp
hlt
jne
and
in
jae
mov
cmpsl
mov
movsl
push
xlat
xor
xchg
gs
fdiv
add
insb
shl
mov
mov
in
push
data16
xchg
scas
dec
xlat
inc
les
scas
mov
in
mov
push
cmp
iret
push
rorl
pushf
pop
rcrb
ss
jle
inc
repnz
add
or
testb
adc
in
ss
mov
in
xchg
sub
add
mov
cli
adc
inc
pop
cmpsb
cli
pushl
icebp
cmp
mov
adc
dec
push
push
xchg
imul
mov
push
popf
rcrl
sbb
pop
sub
and
popa
stos
mov
jg
testb
out
movsl
fnstenv
mov
mov
lret
jl
jnp
sub
dec
out
sarl
dec
insl
cmp
mov
fildl
loop
movsl
lods
or
movsl
push
adc
fs
testl
push
pusha
cmp
mov
xchg
mov
pop
and
lcall
fldl
aad
fimull
add
cli
jns
clc
frstor
and
jns
loopne
adc
and
dec
int3
flds
inc
gs
inc
inc
mov
jns
or
lret
pop
jl
into
sbb
sub
fldcw
shlb
ret
inc
adc
push
pop
jle
xor
push
xchg
fwait
aaa
outsl
mov
inc
and
dec
int3
lcall
jg
hlt
nop
ret
bound
movsl
mov
mov
dec
sub
js
and
mov
sbb
adc
es
xchg
xor
imul
lods
and
adc
es
xlat
leave
xchg
ficoml
fimuls
ret
cmpsl
or
mov
scas
imulb
arpl
cmp
jmp
test
aaa
ja
ret
adc
adc
mov
test
jl
mov
or
rep
inc
sbb
dec
test
insb
and
push
adc
dec
ljmp
movsb
incl
jp
and
or
aaa
enter
rorb
xor
jg
jb
lea
pop
imul
jge
shll
ret
mov
mov
pushf
test
xor
adc
jnp
mov
jge
inc
dec
inc
sub
inc
mov
imul
in
pop
pop
icebp
sbb
jne
insb
aad
mov
push
cld
lcall
mov
mov
cs
pop
mov
ljmp
insb
cld
sub
inc
lods
push
std
insb
lret
mov
push
push
in
aas
pushf
decl
aam
and
jns
sbb
inc
loope
adc
in
mov
lret
in
lds
sbbl
out
and
aad
outsl
fistl
xchg
mov
addl
out
stos
xchg
mov
push
dec
adc
insl
mov
imul
nop
add
xlat
add
lret
cmpsl
mov
and
lock
cltd
repz
push
ror
jb
clc
sbb
pop
mov
ljmp
dec
arpl
pushf
dec
mov
icebp
outsl
inc
sub
jge
stc
mov
add
xchg
sarl
dec
sub
xor
jno
cmp
and
scas
pushf
pop
scas
dec
cmc
sub
test
mov
pop
mov
mov
mov
mov
js
push
push
adc
mov
lahf
xor
pop
mov
sub
jae
push
mov
call
nop
cli
sbb
push
lock
inc
jae
das
xor
lret
mov
fmul
test
mov
jg
test
insl
mov
adc
mov
sub
fiadds
xor
ljmp
aas
lds
out
cmp
xor
push
mov
push
mov
mov
or
cmpsl
xchg
mov
dec
emms
pop
dec
outsl
add
fcompl
pop
jns
xchg
jge
adc
sbb
insb
adc
repz
mov
cmp
xchg
out
dec
sbb
xchg
js
mov
dec
data16
jl
mov
int
xor
sub
fidivrl
test
inc
or
mov
jo
aam
push
xchg
call
jle
call
push
mov
jo
lret
bound
sbb
mov
and
mov
or
aaa
roll
call
cmp
cmp
xchg
cmc
dec
xchg
pop
dec
arpl
out
cmp
sub
inc
xchg
adc
mov
cmp
out
and
lret
ret
mov
das
scas
into
stc
mov
push
stc
stc
and
or
push
dec
jo
pop
cmp
cmp
cmc
jecxz
sub
cmp
lahf
dec
std
fs
mov
loopne
add
inc
xchg
outsb
inc
pop
fbld
mov
mov
test
insl
out
jecxz
fisubl
or
imul
mov
mov
push
mov
sahf
add
jnp
lods
mov
mull
and
mov
lds
jg
bnd
sub
or
jl
pop
xlat
stos
enter
roll
push
outsb
mov
dec
mov
jmp
sbb
ret
cs
push
aaa
adc
hlt
xchg
pop
sub
jae
lahf
arpl
aam
js
mov
roll
xchg
cwtl
push
jae
pop
mov
push
cmc
dec
in
inc
mov
mov
inc
out
fs
ja
push
mov
push
xor
xor
lahf
repnz
mov
test
sbbb
dec
jns
push
jp
mov
inc
out
xchg
out
sub
and
shr
jg
lahf
mov
rorb
lods
inc
inc
add
inc
adc
jns
mov
pop
out
pop
push
orl
mov
lods
bound
jb
mov
scas
loopne
lret
push
mov
or
nop
gs
mov
cmp
mov
outsl
icebp
dec
movsb
dec
mov
rorb
xor
sbbl
test
insb
rorl
xchg
adc
mov
icebp
add
mov
pop
cwtl
jns
repnz
cmp
dec
push
neg
cmp
inc
pop
movl
loop
movsl
or
cmp
mov
test
dec
orl
movsl
jno
movsb
repz
rcrb
addr16
in
mov
jae
lods
jo
lret
cmp
sub
sbb
adc
rolb
xchg
push
leave
shlb
sbb
xchg
cmp
lds
fs
pop
sub
repz
mov
inc
stos
icebp
sub
inc
sbb
scas
inc
cli
dec
push
jp
add
sti
pminub
jp
fnsave
mov
xor
or
lea
xor
ror
ljmp
movsl
adc
mov
fs
shll
push
xor
aas
out
mov
jno
andb
jo
outsl
inc
inc
js
lahf
mov
fdivs
scas
dec
imul
dec
adc
inc
movsl
inc
enter
sahf
nop
sub
fimull
dec
in
jno
in
dec
cwtl
add
pop
xchg
inc
cli
add
sarb
int
inc
cld
cmp
cmp
jmp
or
roll
mov
popa
out
enter
or
sti
sbb
inc
fldl
push
xor
js
jmp
push
cmpsl
cmp
lretw
xchg
movsb
jne
test
dec
scas
pop
inc
into
xor
or
dec
jmp
idivl
loope
out
adc
lahf
dec
scas
xchg
scas
movsb
sbb
cmp
jae
pop
gs
into
rcll
ljmp
add
xor
cld
ficoml
fwait
cmp
enter
cmc
in
xor
jnp
xor
push
sbb
cmc
push
mov
cli
inc
or
push
and
stos
shll
push
adc
adc
xchg
imul
dec
xor
cs
bound
in
sub
or
lock
mov
xor
aad
dec
mov
mov
iret
into
call
xor
inc
xlat
mov
aad
mov
mov
xor
push
out
loopne
aaa
imul
mov
sbb
cmc
test
hlt
ret
int
insl
and
icebp
sbb
mov
adc
add
jp
in
add
and
sub
add
adc
jg
addr16
dec
je
add
les
add
mov
jne
mov
iret
in
loopne
jmp
daa
xchg
aam
imull
sub
add
adc
mov
xor
out
xor
pop
dec
out
and
pop
add
fsubl
cli
mov
fpatan
jo
mov
insl
into
and
add
pop
aam
mov
rcr
or
and
mov
ss
dec
sbb
xchg
add
lahf
lahf
adc
out
mov
cltd
je
cld
xchg
cs
push
push
mov
mov
outsl
or
in
jae
mov
popf
mov
add
rclb
in
mov
scas
pop
xchg
jecxz
xchg
scas
sbb
mov
in
in
and
outsb
pop
xchg
xchg
mov
mov
inc
out
dec
inc
insb
in
fimuls
fwait
movsb
pop
mov
xchg
push
mov
xchg
icebp
push
sahf
mov
jo
call
cmpxchg
daa
addr16
roll
xor
push
aaa
shrb
push
cs
lret
adc
cmpsl
sbb
je
out
cmpl
in
xchg
lret
aas
jge
les
inc
xor
les
scas
push
jl
or
in
mov
or
pushf
mov
xchg
dec
and
push
ds
scas
jecxz
dec
or
sub
dec
adc
ja
mov
xor
lcall
push
inc
mov
or
dec
aas
jecxz
call
fisubl
aas
jne
fsubs
or
pop
cmc
ja
pause
sbbl
in
cmc
lea
das
or
in
call
cmpsb
adc
push
sub
popf
xor
jae
push
scas
imul
xor
dec
pop
mov
xchg
add
pcmpgtb
dec
or
sub
fs
cmp
sbb
cwtl
pop
aaa
mov
out
adc
orb
mov
xchg
ljmp
xchg
mov
mov
dec
xor
aad
pop
jge
xor
and
lock
lcall
ret
add
aas
in
jae
int
push
add
jl
repnz
jo
add
xchg
add
sbb
cs
jmp
paddusb
in
cmovbe
mov
jne
mov
or
test
faddp
pop
dec
mov
arpl
cld
jge
sub
xchg
ficoml
inc
push
dec
and
sub
cmpsb
outsb
lret
popa
addr16
or
js
clc
fwait
pop
imul
add
or
stos
or
push
fwait
push
inc
and
leave
mov
ffree
and
insl
scas
insb
cmc
push
dec
jb
hlt
sub
mov
lea
nop
fsubrs
dec
push
fldl
jmp
nop
push
dec
aam
insl
pop
movsb
cmpsl
leave
mov
repz
jecxz
inc
jb
xor
out
xor
mov
lcall
mov
cmp
out
sti
push
mov
stos
movsb
lods
out
out
or
cmpl
push
and
add
sbb
inc
push
movl
call
test
insl
and
or
adcw
int3
push
sti
loopne
sahf
adc
pop
dec
lea
push
mov
jp
mov
cmp
sbb
decb
mov
xor
xchg
push
cltd
push
lret
pop
stos
gs
mov
or
mov
aas
add
roll
dec
pop
ror
cmp
pusha
dec
xchg
popf
movl
xchg
lahf
jge
xchg
les
in
and
inc
mov
arpl
icebp
jge
nop
int3
push
jg
test
aaa
test
xchg
or
sbb
sbb
daa
pushf
fistpll
push
lahf
imul
pop
lahf
xchg
and
push
adc
repnz
scas
xchg
mov
mov
dec
icebp
ss
adc
push
cmpsb
fsubrl
clc
mov
repz
cli
inc
adc
cld
lds
icebp
xor
sub
inc
aaa
pusha
ds
xchg
in
fcompl
xor
in
jne
pop
push
in
scas
inc
jne
shlb
add
aaa
lret
pop
dec
rcrb
push
xor
adc
sbb
daa
inc
loopne
popf
push
rep
fiadds
sbb
inc
sbb
push
cmp
stos
dec
jns
jnp
jo
jbe
xchg
jecxz
add
push
lock
mov
jnp
repz
push
mov
push
out
loop
aas
int3
out
dec
in
cmc
jb
cmp
jg
mov
fstpl
mov
daa
in
lea
fidivl
sbb
loop
and
fs
cmpsl
jmp
add
sub
mov
pop
jle
sbb
sub
mov
adc
sbb
loopne
call
inc
aas
icebp
clc
js
movsb
sbb
or
adc
sbbl
adc
jns
mov
mov
lods
push
out
sbb
repz
push
jae
pop
pop
aaa
bnd
fildll
fadds
cmpsb
inc
cmp
rolb
loop
jae
and
xor
sub
loop
sbb
sahf
cltd
das
and
insl
and
xchg
aam
mov
dec
js
sbb
stos
jno
movd
mov
in
dec
stc
jo
mov
cmp
lock
cmpb
sbb
arpl
push
and
cltd
rolb
push
mov
mov
ss
cmpsl
fwait
pop
pop
or
pop
test
xor
or
push
xlat
sbb
mov
mov
out
fnstenv
mov
inc
xor
jmp
pusha
add
mov
aad
fdivr
dec
mov
pop
add
pop
dec
cs
cmp
mov
insl
test
or
sbb
pop
add
into
push
jp
jmp
cli
cltd
pminsw
dec
sbb
xor
pop
adc
and
add
inc
ret
loopne
push
mov
test
xchg
dec
add
dec
xor
mov
lcall
and
dec
mov
fisttpl
shrl
pop
add
pop
or
jne
jmp
sub
pop
lock
cmp
push
add
test
in
mov
imul
scas
outsl
adc
push
iret
jno
ja
bound
sbb
lds
mov
dec
cli
int3
mov
xor
arpl
push
mov
daa
cmp
lret
push
loop
push
sub
inc
lods
sbb
mov
pop
in
loope
mov
movsb
xchg
mov
adc
ljmp
std
out
movsb
push
mov
cli
insb
mov
xor
out
ret
repnz
sbb
push
push
inc
into
xchg
shll
sbb
fwait
cmp
inc
ss
insl
rcl
leave
sbb
aam
push
in
nopl
jns
adcl
hlt
inc
out
jle
or
and
clc
jns
push
mov
add
mov
outsl
out
mov
jge
dec
sub
scas
aad
aam
je
xlat
add
and
mov
jnp
jb
jb
pop
sti
nop
jae
add
test
or
icebp
jne
xchg
cwtl
mov
mov
cs
imul
insb
fadds
sbb
adc
in
in
xchg
sahf
or
and
mov
xchg
jg
push
push
push
pop
push
fisttpl
aaa
sbb
add
cmp
icebp
inc
inc
jne
push
mov
mov
xchg
test
lret
push
stos
add
lret
rep
les
paddusb
scas
inc
adc
fidivl
mov
test
mov
cmpl
fimuls
sub
repz
jne
cli
sbb
xchg
adc
sbbb
pop
mov
test
xchg
pusha
inc
push
hlt
cmp
mov
mov
xchg
sbb
shl
pop
aad
outsl
sub
inc
mov
mov
add
or
gs
fisubrl
cmp
sbb
int3
subl
pop
jbe
inc
xlat
xchg
add
push
pop
mov
cs
sti
fs
xchg
call
dec
mov
repnz
cmp
inc
inc
iret
inc
mov
xchg
sub
cmpsb
stc
cmp
and
sub
lahf
cmpsl
cmp
fsubrs
bound
repnz
ljmp
negb
sub
test
out
xor
pop
lret
jno
jbe
jo
cmp
icebp
xor
inc
add
xchg
jge
pop
rolb
jo
test
add
lds
je
cmpsb
mov
lea
mov
sub
pop
addr16
sub
sbb
pusha
insb
mov
xlat
jmp
jo
inc
xorb
icebp
xlat
cmpsb
adc
add
mov
mov
pop
push
sub
mov
icebp
test
lods
cwtl
jmp
aas
cltd
dec
xor
iret
sub
pushf
rcl
sub
xchg
or
sub
and
addb
inc
mov
cmpsb
testl
test
push
xor
inc
push
mov
fwait
leave
mov
jge
cmp
dec
or
or
add
mov
jmp
insl
mov
shlb
or
scas
aas
xchg
add
pandn
jecxz
mov
pop
adc
jo
sub
inc
cli
cmp
stc
fiadds
xor
mov
cwtl
dec
rcr
lods
inc
dec
xchg
jg
xor
or
pop
dec
and
push
popl
sarb
mov
std
cmovg
jnp
mov
mov
std
outsl
sbb
pop
outsb
sbb
push
cltd
cmpsb
pop
push
mov
cmp
sub
ret
sub
push
clc
xchg
mov
jbe
std
pop
add
sarl
out
out
stc
and
inc
std
loopne
daa
inc
jae
aas
mov
mov
pop
sub
cld
jbe
sub
enter
test
mov
shrl
sbb
sbb
dec
jbe
inc
jbe
stos
sbb
add
aaa
mov
shlb
xor
mull
push
jecxz
mov
shll
and
xor
stos
cmp
outsl
fisttpl
test
push
aas
scas
cmp
orl
iret
or
sub
dec
outsb
data16
std
mov
push
pop
mov
jg
ja
rcr
xchg
add
lcall
loopne
lea
cmp
cmpsb
add
jg
mov
push
stos
movsl
aad
pop
jne
in
cmc
lds
jg
mov
pop
ret
mov
mov
imul
dec
xchg
ret
push
sub
loopne
mov
cs
xchg
xor
push
xchg
nop
popf
bound
aad
rorl
inc
cmp
loope
icebp
jle
fsubrl
jo
xchg
jle
leave
cmpsb
xchg
imul
cwtl
push
and
fnstsw
scas
or
xchg
icebp
inc
fiadds
fisttps
push
clc
cmp
insb
movsl
int
test
jne
mov
or
jmp
mov
push
sbb
fbstp
pop
repnz
pop
jb
xor
inc
jecxz
pop
lods
popa
cld
sbb
mov
sbb
mov
sbb
imul
push
or
mov
scas
push
cwtl
xor
arpl
ret
lcall
idiv
dec
je
mov
mull
xor
mov
adc
pop
mov
push
out
pusha
dec
or
adc
push
dec
or
mov
out
ds
clc
insl
push
inc
std
lret
add
adc
cld
sub
in
sbb
andl
int
pop
leave
xor
fldt
out
pop
cld
jle
push
sbb
lcall
outsl
xchg
aas
adc
adc
ret
push
sbb
sbb
les
pop
pop
ret
xor
scas
mov
sbb
out
rcrl
pop
outsl
lds
and
imul
and
mov
icebp
and
jnp
sahf
mov
inc
xor
insl
xchg
inc
rorb
sub
xor
ss
enter
adc
xor
push
out
lods
fdivr
jl
out
dec
sbb
pop
dec
pop
out
enter
imul
and
roll
lret
into
mov
push
xchg
xor
push
pop
pop
out
cmp
int
push
jle
leave
push
add
sti
cmp
jnp
shrb
test
popa
sbb
cmp
pop
and
mov
inc
rolb
mov
imul
sub
inc
mov
fs
in
sti
inc
xchg
push
out
pop
adc
shrl
push
cmp
shrl
mov
je
cmp
mov
mov
insl
pop
push
inc
popa
fiaddl
pop
imul
inc
mov
sub
xor
push
mov
add
push
xchg
loope
and
call
mov
push
outsl
inc
xchg
cwtl
dec
leave
rcrl
shlb
aad
jecxz
push
mov
cli
mov
aas
inc
xchg
pop
das
mov
sub
mov
clc
lret
jle
mov
inc
call
ds
movsb
loope
nop
fcmovnu
out
cmc
mov
xorl
outsb
test
pop
es
lock
ret
and
ja
fisubrs
inc
sbb
inc
stos
ret
icebp
and
cmc
sub
sahf
inc
cmc
lret
cmpsl
pop
movsl
add
sub
ret
dec
push
push
cmp
and
cmpsl
xchg
rcr
and
mov
mov
pop
xchg
mov
push
out
dec
xchg
push
cmpsb
xchg
xchg
pop
into
jl
lcall
repnz
shll
push
inc
repz
ret
cli
mov
cltd
outsb
sbb
jp
and
jg
dec
push
xchg
movsl
jle
push
add
or
std
adc
sbb
ja
sarb
sub
fs
sub
arpl
pop
clc
cmpsb
dec
into
xorl
mov
mov
pop
dec
mov
mov
into
or
xchg
jl
stc
mov
popf
mov
clc
stos
mov
ja
in
in
dec
test
imul
sbb
sbb
rcrb
mov
mov
jmp
push
gs
lahf
inc
fwait
fs
adc
mov
mov
jae
mov
cmp
fmuls
inc
ret
jo
jmp
popf
in
test
pop
and
test
add
mov
pusha
stos
aad
popf
sti
ret
ror
fwait
mov
pop
dec
stos
pop
adc
insb
shll
pop
inc
dec
ja
fwait
stos
xor
push
jae
cli
push
ret
jnp
mov
add
add
dec
jmp
cwtl
push
not
pop
iret
mov
lea
loop
out
js
ss
inc
or
dec
jge
clc
pop
pop
dec
mov
stc
ss
jbe
int
inc
dec
mov
push
subb
push
ja
cld
aaa
popf
into
sbb
cmp
out
adc
dec
xor
fs
add
fdivrl
ror
jnp
jnp
push
int3
xor
outsb
aam
inc
push
cld
add
jb
clc
xor
pusha
xchg
cmp
xor
movzbl
jl
daa
imul
jnp
out
into
cmpsl
repz
jne
repnz
arpl
std
xor
mov
std
xlat
jnp
out
call
xchg
cmp
addl
pop
repz
sbb
push
adc
popa
xor
lods
mov
push
fwait
push
add
push
int3
rcrl
cmp
mov
xchg
test
gs
sbb
cs
push
inc
cmp
push
add
or
dec
lock
add
push
push
fadds
rclb
sbb
push
out
push
adc
cwtl
adc
mov
popa
cld
loope
push
out
adc
out
and
insb
inc
out
push
push
popa
imul
pushf
cltd
inc
sar
clc
fnstcw
insb
xchg
push
nop
add
mov
xchg
in
fdivrs
fidivl
sub
jl
test
mov
icebp
sub
fcomps
shll
xor
mov
mov
and
cmpsl
mov
incl
aaa
push
daa
mov
pop
sub
rcrl
imul
or
pop
mov
cmp
fcomps
sbb
jg
adc
add
lret
add
adc
add
adc
add
addl
dec
adc
push
rclb
dec
insl
enter
mov
mov
jne
xor
int3
push
lods
mov
hlt
mov
pop
sarl
pop
addl
js
or
xchg
jp
xor
arpl
and
inc
mov
daa
push
or
les
mov
es
jge
mov
pop
inc
mov
cwtl
stos
xchg
pop
xchg
cmp
das
xchg
and
jbe
push
clc
lea
sub
roll
and
sbb
dec
insl
xor
movsb
adc
mov
iret
push
out
cmpl
rcrb
adc
js
into
aas
stos
xor
popa
or
negb
cmp
and
jns
jmp
rcll
dec
icebp
negb
mov
pop
pop
push
bound
mov
cmpsl
sbb
xor
and
ficoms
inc
negl
xchg
push
call
pop
mov
xor
insb
sub
mov
imul
fnstenv
out
fidivs
sti
int
repz
into
dec
clc
jns
lret
cmc
out
jmp
or
add
test
scas
sbb
jne
and
push
sub
xchg
push
arpl
ja
roll
sub
movsl
ret
xor
add
pop
ficoms
cmc
add
neg
sbb
dec
add
xchg
sub
add
add
mov
cmpsl
or
jmp
inc
fidivrs
mov
mov
mov
mov
mov
orb
lcall
jb
jecxz
fisttpl
in
add
in
cmp
cmp
lea
lods
cmp
cmpsl
test
mov
inc
iret
adc
push
push
sbb
cmp
outsl
cmp
mov
xor
sub
in
rcr
xor
dec
ljmp
cmp
stc
jl
pop
mov
and
add
jns
stc
scas
xor
in
inc
lock
iret
cld
gs
fcoms
jmp
rcrl
lahf
in
cmpsb
mov
adc
or
cmpsl
stc
sub
sub
mov
loope
adc
dec
and
dec
aam
and
es
sbb
add
je
jbe
cs
mov
pop
flds
ret
into
jg
sub
test
or
and
bound
outsb
xorb
leave
shll
sti
out
int3
push
sahf
jp
test
outsl
sbb
imul
jge
xchg
or
add
inc
in
or
jbe
jmp
add
popw
pop
mov
addr16
pop
imul
sbb
insb
mov
or
aam
dec
push
enter
loop
out
in
pop
insb
add
jnp
jp
imul
push
inc
cmp
cltd
sbb
inc
lea
cmc
inc
cmpsb
push
cwtl
xor
xchg
mov
rcll
movsl
sub
cmp
mov
and
mulb
ss
insl
int
in
adc
aam
lret
xchg
icebp
lret
lock
lret
inc
call
jbe
inc
lahf
call
insb
xchg
insb
inc
adc
loop
outsb
or
call
jmp
imul
out
adc
jnp
adc
cwtl
jb
pop
adc
ret
mov
mov
cmp
pop
aaa
ret
in
cwtl
push
aad
push
pusha
mov
pop
pop
in
pop
inc
addr16
pop
mov
adc
sub
lahf
clc
cld
or
stos
mov
aaa
fistpl
adc
or
inc
pop
mov
fbstp
jmp
dec
test
xchg
jmp
outsl
fmull
js
sbb
nop
insb
push
add
insl
sbb
jnp
push
fdivl
sbb
into
insb
or
xchg
js
je
push
mov
clc
fcomps
push
aaa
push
insb
xor
jl
and
std
xlat
or
pop
roll
xchg
mov
or
rcr
insl
cmpsb
sbb
pop
fstpt
and
lcall
inc
adc
cmpb
mov
cmp
es
add
mov
mov
dec
ljmp
or
xor
decb
movsb
xchg
mov
icebp
pop
fisttpl
insb
out
cmpsl
jmp
adc
mov
pop
imul
inc
inc
fisttpll
pop
lcall
mov
inc
fisubs
xchg
insb
das
imull
dec
das
stos
sbb
inc
and
jp
popa
xchg
scas
bound
ja
inc
ror
dec
cld
dec
xchg
xorl
inc
rcrb
push
movl
mov
pop
popf
arpl
ds
out
jl
repz
cmp
sub
adc
xor
fldcw
movsl
in
pop
ljmp
push
add
push
call
std
clc
mov
movsb
inc
jbe
and
out
xchg
cmp
adc
into
dec
orb
je
jmp
ficoml
testl
add
and
mov
jle
dec
push
mov
pcmpeqb
imul
xor
and
addr16
arpl
into
push
test
fsubrl
push
das
dec
scas
sahf
sbb
dec
imull
xchg
mov
sub
inc
rorb
xabort
negb
loop
xor
das
sub
data16
sbb
dec
xchg
iret
sbb
mov
shlb
in
mov
add
stos
pop
and
jnp
and
clc
cmpsb
jle
add
mov
cwtd
stos
mov
xchg
std
arpl
cli
jle
xorb
add
not
ficoml
je
sub
jge
into
aaa
xor
addr16
mov
sbb
iret
mov
jge
pop
dec
clc
add
fwait
pop
mov
mov
pop
push
addb
fbstp
ret
sub
shlb
fadds
ljmp
or
cmpsl
das
mov
lahf
js
adc
jecxz
aas
fidivrl
imulb
mov
lret
jns
subb
sub
push
push
push
jnp
sub
je
fnsave
addr16
rcrl
pop
movups
push
push
push
xchg
xor
dec
adc
pop
lds
xor
iret
bound
pop
ret
lret
pop
hlt
dec
cs
push
int3
cmp
cwtl
push
adc
dec
adc
jnp
mov
push
cltd
mov
cmp
cmp
inc
pop
cs
dec
clc
in
dec
sbb
mov
repnz
repz
mov
pop
stos
jl
lea
inc
inc
mov
les
xchg
sahf
jns,pn
cmp
mov
call
fbstp
enter
jg
mov
loop
ds
jne
sub
mov
jecxz
jmp
pop
jmp
add
push
sub
cmp
xlat
inc
mov
js
xor
inc
add
scas
lock
push
aad
and
notl
pop
or
lods
push
jnp
les
or
shrl
popa
adc
pop
jb
sub
and
leave
popa
mov
pushw
jle
mov
lods
sub
loope
mov
out
mov
add
jns
jmp
lds
sti
roll
iret
push
or
dec
push
or
aas
dec
shlb
fildl
jne
push
jecxz
sahf
imul
lods
loope,pn
or
daa
pop
push
test
dec
stos
stos
fld
jmp
imul
sbb
cmpsl
test
mov
push
sub
sarl
mov
cwtl
pop
int3
inc
add
cld
or
fcompl
popa
lds
fcoml
cmp
sahf
idivl
cmpsl
call
aam
addl
fadd
jge
jle
inc
jmp
push
lds
cld
adc
and
adc
and
movsb
aam
pop
lock
xchg
out
hlt
mov
test
sub
xor
jns
add
imul
adc
push
fdivrl
xchg
and
xor
aaa
push
fwait
dec
movsb
es
jl
mov
aad
mov
aad
xor
lods
mov
ret
ret
es
jnp
fcoml
dec
jno
fcmovne
inc
inc
pop
negb
mov
je
out
clc
add
pop
dec
add
data16
or
adc
imul
dec
push
lcall
ja
add
push
jg
loope
add
fwait
mov
pusha
inc
incb
adc
and
fdiv
push
cmp
dec
or
nop
lret
add
imul
lods
cmpsl
pop
scas
movsb
fstpt
lcall
shll
ret
xchg
jnp
fcomi
push
add
jne
fsts
loop
ja
fsts
cmpsl
mov
jmp
cmc
sti
lods
lods
mov
adc
aad
inc
and
pop
movb
push
imul
les
lea
mov
pop
xor
add
fcoms
xor
pop
enter
loop
aam
pusha
stos
callw
mov
inc
dec
and
loopne
mov
shll
pop
lods
je
xor
arpl
add
mov
mov
mov
pop
cmp
mov
jo
cld
push
pop
dec
xchg
dec
dec
imul
jecxz
andl
or
iretw
xchg
push
and
addb
or
call
inc
cmc
imul
xchg
mov
mov
inc
addl
pop
jl
adc
xchg
popf
inc
cmp
mov
cwtl
push
lahf
roll
daa
mov
cmc
inc
nop
push
push
dec
cltd
mov
ljmp
dec
repnz
pop
add
int3
push
xchg
pop
dec
bound
mov
int3
fbstp
mov
insl
pop
or
int
shrb
out
pop
ds
jae
inc
push
xchg
jo
andb
push
xchg
fimuls
cmp
outsl
xlat
mov
jbe
ljmp
mov
scas
pop
push
sar
subb
mov
xlat
dec
mov
inc
sub
inc
lock
loopne
subl
jle
mov
pop
inc
ficompl
cmpl
pop
and
xchg
sbb
outsb
xor
mov
das
inc
std
arpl
shr
rorb
and
cmp
repnz
fsubrl
lods
pop
inc
mov
sar
fdivr
loop
adc
jge
ficomps
loope
sysexit
stc
mov
jno
icebp
push
out
cmp
aad
cltd
rcrb
mov
mov
fwait
dec
insb
pop
pop
lods
lea
loop
cmp
nop
out
out
jo,pt
cs
adcl
lret
cmp
push
dec
mov
nop
jle,pt
lcall
inc
jno
pop
inc
jne
mov
jp
xchg
cmc
imul
mov
imul
jge
or
xchg
and
rcl
outsl
dec
icebp
mov
push
ds
fwait
pusha
enter
sbb
jns
push
ljmp
arpl
jae
xchg
nop
repnz
xchg
mov
inc
or
jns
ss
fsubl
inc
stos
rcll
out
xchg
dec
sbbl
mov
aam
cli
mov
fiadds
mov
ds
xchg
sti
out
cmp
mov
incl
mov
lret
inc
repz
sub
repnz
in
push
and
jmp
test
out
inc
cmp
mov
add
xchg
push
push
pop
inc
hlt
xchg
inc
push
addr16
insl
or
jb
fstpt
jo
push
notl
iret
and
rclb
data16
sahf
nop
jle
and
ljmp
in
cmpsb
lret
fwait
push
xor
sub
ss
mov
dec
fmull
in
ret
pop
xor
imul
es
sbb
clc
inc
sbb
stc
mov
rcr
outsl
add
mov
xchg
xor
out
inc
pop
and
mov
out
mov
sarl
xor
call
pop
out
les
jg
xlat
leave
dec
jb
out
pop
adc
cmp
std
fcoms
test
shl
pmaxsw
xchg
xor
lret
je
mov
xor
dec
adc
leave
xchg
pop
lods
lret
das
push
mov
jge
cmp
lods
fwait
cmovne
fldt
popf
test
dec
sbb
leave
cmp
lret
out
and
pusha
loop
lods
lds
add
icebp
mov
jne
shrb
mov
ss
xor
out
stos
shll
daa
mov
adc
pop
mov
neg
add
call
adc
stos
cmp
push
jbe
into
roll
sbb
pushf
jbe
ljmp
into
mov
pop
pop
stos
fcompl
out
data16
divl
les
jae
int
pusha
sub
fwait
xchg
clc
fwait
mov
xchg
cmpsb
adc
push
or
add
daa
shll
cld
ds
shlb
popa
iret
inc
push
add
and
mov
dec
sbb
insl
test
repnz
inc
sub
rcr
rolb
pop
out
in
pop
xor
xchg
mov
orb
or
cmp
cltd
push
orl
insl
add
push
inc
cmpsb
xchg
sub
adc
cwtl
mov
nop
stc
dec
xchg
dec
or
mov
add
aaa
xchg
mov
data16
adc
lret
pop
pop
cmc
pushf
jecxz
stc
mov
fidivrs
add
stos
mov
or
arpl
insl
loope
mov
xor
push
mov
lcallw
aad
jb
mov
in
lret
mov
stos
jmp
out
out
cmp
ja
xor
sub
dec
add
push
pop
ja
out
mov
leave
dec
testl
mov
xchg
fcomi
add
jns
enter
mov
push
daa
jg
inc
mov
leave
mov
insb
divl
mov
fsubs
jno
pop
cmc
jmp
jl
repz
popf
mov
sbb
push
test
jmp
jns
mov
lock
or
jecxz
test
mov
pop
fisubl
pop
arpl
in
or
mov
call
ret
inc
fnstcw
fwait
push
cmp
cltd
lahf
xchg
jno
cmp
mov
rcrl
cmp
inc
std
test
jl
cli
dec
cmp
fs
scas
cld
jns
mov
test
lods
cmc
and
add
mov
jo
xchg
xchg
inc
xchg
test
ja
xor
sub
fildll
les
cmp
negb
mov
push
scas
rol
jo
mov
mov
add
pop
daa
mov
imul
push
clc
push
iret
faddl
clc
sbb
ja
pushf
in
sbb
sbb
xor
sahf
fadds
sub
xor
lahf
sub
pop
dec
shll
es
mov
repz
dec
cwtl
stc
ss
cmp
xor
es
lcall
lods
jecxz
dec
cmpsb
cltd
push
scas
mov
cmc
jns
xchg
inc
jnp
dec
push
rcrl
cmpsb
or
jae
inc
xchg
fwait
call
xor
jne
jl
adc
pop
sub
lods
and
test
mov
lods
or
cmpsb
mov
gs
dec
pop
cmp
mov
in
dec
xlat
out
mov
inc
push
dec
ljmp
push
jp
mov
gs
subb
incb
push
jle
push
stos
dec
mov
push
mov
lahf
lret
repz
loop
iret
mov
mov
cmp
imul
movsb
fsubrp
shrb
mov
mov
aaa
jnp
sti
aam
jge
aaa
inc
aad
sti
pop
icebp
xlat
into
add
pop
repz
sbb
sub
jg
push
arpl
stc
inc
adc
das
and
pop
xchg
inc
mov
pop
push
loop
or
mov
insb
aas
aaa
ss
push
push
out
sub
fldenv
pop
stos
js
dec
inc
add
cmp
mov
mov
lcall
inc
push
ds
out
pop
pusha
sbb
push
push
and
push
outsb
aad
sbb
clc
iret
mov
fcmovne
jmp
jb
jo
mov
popa
sub
pushf
push
pushf
pop
in
call
xor
test
push
int3
xor
xorl
test
orl
lret
jbe
in
lds
std
push
cmp
lahf
or
imul
lahf
outsl
jae
cmc
mov
mov
jecxz
sbbb
jecxz
stos
movsl
js
js
shlb
jo
scas
roll
and
inc
mov
test
fcomi
leave
lcall
push
repz
cli
shlb
aad
sbb
scas
mov
sbb
dec
xor
scas
mov
adc
cmp
dec
pusha
imul
out
inc
jecxz
sbb
jp
bound
or
popa
jl
popa
shll
rolb
sub
mov
mov
cmp
sub
pop
pmulhuw
xor
pop
dec
ret
test
mov
imul
aam
jg
and
movsl
adc
sbb
nop
or
or
xlat
aaa
jnp
insl
mov
cltd
sbb
sbb
jle
fidivs
mov
arpl
sahf
cmp
xchg
scas
ror
imul
in
jg
je
int
jecxz
call
mov
test
sub
mov
out
and
aaa
push
shlb
mov
in
mov
pop
sbb
xchg
test
cwtl
lds
xlat
push
test
sub
lahf
jmp
sub
daa
imul
imul
push
mov
pop
loop
push
pop
fldcw
pushl
xchg
cmp
ret
pop
fsubl
ja
repz
xchg
testl
cli
lds
jmp
mov
push
out
pop
or
repnz
inc
cmp
cmpsb
jge
sbb
xchg
popa
pop
sar
ret
jne
mov
insl
les
push
bound
or
call
adc
pop
test
and
push
or
jno
lds
xlat
loop
mov
aas
in
push
icebp
dec
fcompl
mov
mov
push
sub
fdivr
mov
jo
add
repnz
lcall
in
mov
pop
movsl
inc
mov
addr16
mov
lret
data16
add
fidivs
in
cmp
iret
aaa
mov
inc
mull
lret
sub
and
or
add
adc
aad
sub
fisubrl
or
or
jo
fwait
push
arpl
sbb
sbb
sbb
or
cmp
rcrb
mov
cmp
push
lret
pop
mov
sarl
sub
or
xor
dec
mov
adc
aam
xchg
bound
mov
dec
outsb
filds
daa
mov
sbb
add
and
mov
aad
negl
movsl
jns
bound
fisubrs
out
lea
dec
fadds
push
mov
loopne
push
mov
mov
pop
jl
add
in
sbb
arpl
push
cltd
mov
sub
lcall
subl
mov
push
mov
jl
out
scas
test
xor
mov
sahf
add
push
out
aas
outsb
and
imul
dec
adc
mov
fninit
fs
mov
xchg
leave
in
loop
sbb
add
aas
nop
adc
pop
mov
aaa
into
pop
aad
add
lock
int
ret
shlb
pmuludq
out
and
popa
xchg
push
lock
aas
cmp
mov
movsb
movb
mov
leave
inc
fildll
cld
addr16
jecxz
xchg
gs
test
ret
stc
rcl
lock
push
mov
dec
jp
mov
push
je
aas
pop
cmp
popf
xorb
push
and
scas
mov
mov
push
fistpll
cltd
in
xchg
xchg
lock
insb
or
orb
pop
pop
sbb
push
inc
enter
andl
add
pop
shlb
lock
les
or
test
xchg
mov
test
mov
fldz
and
jno
out
rcr
xor
icebp
mov
jl
inc
lret
enter
pop
sbb
es
inc
push
aad
push
jp
mov
clc
ficoml
pushl
or
pop
movsb
outsb
testl
jb
inc
sub
int3
sub
dec
clc
inc
mov
inc
pop
sub
cld
xchg
out
mov
sub
adc
popa
jmp
xchg
fcomp
push
in
std
cmp
jl
lret
xchg
mov
mov
test
les
mov
inc
test
and
movsb
sbb
xor
ss
mov
mov
aam
shll
stos
fs
or
push
jns
pop
insl
ja
fisttpl
daa
mov
lods
xchg
in
movsb
mov
jae
gs
lds
mov
lods
mov
in
cmpsb
mov
bound
call
mov
add
inc
mov
push
adc
fs
enter
adc
push
cwtl
js
jbe
xchg
push
jmp
push
dec
mov
imul
or
lea
mov
or
push
dec
repz
es
aas
in
jae
aas
sbb
in
movsb
lcall
scas
inc
cmp
imul
mov
mov
ret
and
jno
arpl
out
or
test
or
daa
mov
dec
scas
lret
xor
mov
xchg
dec
hlt
repnz
sbb
mov
and
or
inc
xchg
jne
out
add
mov
dec
xor
lock
repnz
pop
mov
adc
xlat
mov
mov
outsb
jno
mov
clc
xchg
mov
cwtl
mov
ret
negb
xchg
mov
pop
shrb
roll
mov
mov
cs
scas
pop
fsubrs
fnsave
into
outsl
jmp
mov
ja
fldl
sub
xlat
add
cmp
xor
mov
add
rcll
popf
gs
push
mov
push
ret
in
sbb
sti
repnz
je
mov
in
aaa
mov
test
int
add
and
scas
pop
fisttps
ljmp
inc
or
xor
sti
rcl
dec
inc
cmp
xchg
das
fsubrs
sbb
insl
fists
mov
stc
jbe
ljmp
out
push
pop
or
orl
cltd
je
addr16
sub
in
gs
cmp
mov
inc
jns
stc
push
movsb
mov
and
insl
pop
mov
ja
aam
lods
aas
repz
les
and
jl
push
mov
lcall
push
inc
dec
dec
mov
pusha
inc
test
outsl
pusha
mov
nop
ljmp
push
mov
int
cs
or
shlb
jp
inc
fdivrp
jl
sub
fimull
call
rolb
shr
out
add
pop
fsubs
cmp
sub
dec
es
fdivl
mov
mov
push
jnp
nop
popf
cmp
aas
adc
cmp
adc
xchg
lret
fcomip
push
mov
adc
cmp
sbb
push
or
or
mov
add
insb
pop
add
inc
mov
movsb
in
ds
inc
outsb
adc
je
in
sbb
ret
enter
xchg
enter
js
scas
sbb
iret
loop
out
int3
sbb
fimuls
xor
push
sbb
push
mov
leave
push
jle
dec
mov
lods
jbe
xor
into
add
sidtl
pop
fcoms
lret
fisttps
repnz
fcoms
add
add
test
mov
test
cld
jmp
sbbb
pop
rolb
daa
mov
fisttpll
popf
je
sbb
cmpsl
bound
add
hlt
cmp
jns
xchg
rcl
repz
mov
scas
cwtl
dec
in
sahf
bound
mov
xor
pusha
xor
jae
xchg
push
lcall
cli
xchg
xchg
out
xor
lret
adc
sbb
leave
mov
repnz
push
imul
mov
rclb
aam
mov
ja
inc
sarl
lds
fnstenv
popa
imul
cli
insl
rcrb
test
push
jg,pt
and
sub
arpl
xchg
hlt
imul
rcl
pop
jmp
call
aam
repnz
sar
scas
pop
jp
mov
xchg
inc
sub
movsl
cmp
xor
push
test
push
sahf
popf
push
and
xchg
pushf
in
xor
sub
mov
sub
mov
cmpsb
scas
xor
mov
mov
jp
loopne
inc
sub
sub
cwtl
lret
pushf
inc
lods
xchg
xchg
and
data16
popa
dec
aas
cltd
xchg
xlat
repnz
mov
mov
out
gs
mov
push
mov
in
idivl
xorb
test
jl
add
fsubl
adc
xchg
outsl
lret
sbb
out
mov
sti
int3
fisubl
cli
sbb
push
les
or
xchg
gs
jne
dec
rcr
sbb
movsl
mov
mov
push
sarl
es
outsl
inc
test
lret
hlt
inc
outsb
dec
push
shll
pop
data16
xchg
orl
in
pushf
ret
lock
sbbl
pop
pop
xor
inc
cmpsl
fists
mov
xchg
into
aad
clc
xchg
lds
call
test
or
xor
cmp
push
ret
jle
cltd
dec
push
cmp
jns
shlb
lods
adc
jmp
lds
dec
js
iret
push
mov
pop
pop
pop
sbb
mov
add
mov
dec
mov
mov
dec
fistps
ja
orb
movsl
pusha
xchg
inc
outsb
cmp
fldt
cli
rcrb
iret
sbb
or
ja
lret
jnp
adc
xor
insl
sbb
ret
sarl
adc
int3
cmp
or
or
xchg
dec
mov
or
or
xchg
popf
dec
mov
lods
push
pop
cmp
add
add
fdivl
les
inc
mov
sub
jae
sub
lcall
dec
cmp
jg
out
incb
lea
das
xor
scas
xchg
jecxz
test
xor
jg
jno
sbb
pop
arpl
clc
cmp
add
pop
stos
insb
inc
and
lret
mov
adc
hlt
cmc
out
fisttps
sbb
jo
mov
int
mov
pusha
lret
std
and
fs
not
test
cmp
loop
mov
xor
xor
std
jae
jp
push
sarb
jno
scas
mov
and
test
data16
lcall
sbbb
repz
jge
jbe
pop
cmpsl
mov
add
sbbl
dec
arpl
mov
push
jne
lret
ret
pop
lahf
pop
ja
mov
add
loop
enter
lcall
cmp
or
mov
imul
sub
pop
bound
fucom
push
sub
dec
pop
scas
pop
pop
mov
jb
bound
stc
stos
add
outsl
lea
imul
sub
push
sbb
out
les
sub
inc
cs
mov
imul
fdivrs
outsl
into
cli
stos
sub
push
inc
loopne
or
lock
jnp
in
fistpll
and
pop
out
mov
sub
mulb
das
jge
mov
repnz
loop
sub
xor
nop
cmp
pop
mov
or
sarl
and
mulb
pusha
sbb
and
cwtl
sub
fadds
in
aas
push
xchg
or
cwtl
or
shr
and
scas
pop
xorb
push
lea
mov
bnd
mov
or
pop
stos
adc
cmpsb
in
sub
mov
sbb
and
out
hlt
insb
or
aaa
in
dec
and
mov
or
jmp
xchg
jmp
adc
push
dec
dec
sbb
outsl
aas
pop
xchg
ss
pop
inc
insb
lret
outsl
ds
rcl
daa
and
xchg
in
cmp
jb
call
dec
push
gs
mov
stos
mov
mov
pop
mov
movsb
mov
xchg
mov
mov
test
movsb
mov
push
bound
aam
addr16
je
scas
xchg
fnstsw
add
mov
mov
ljmp
outsl
test
movsb
pop
out
nop
push
loope
cmp
inc
pop
xchg
insl
rcrl
or
mov
inc
adc
dec
fdivrs
popa
or
je
mov
sahf
insb
mov
pop
lds
mov
push
mov
sub
out
lcall
es
ficoms
or
inc
push
jbe
loope
ja
jo
cmp
fcomps
mov
pop
pop
xor
xchg
out
js
leave
scas
xor
daa
mov
adc
cmp
mov
add
insb
pop
aas
dec
mov
inc
gs
cmp
push
jge
xor
test
scas
testb
cmc
shll
loop
rolb
mov
bound
popf
push
into
xchg
imul
xchg
xor
scas
stos
notb
scas
mov
in
sbb
cs
sbb
mov
mov
insb
xchg
ficompl
push
inc
out
inc
pushf
in
inc
popa
xor
mov
ljmp
mov
ja
cmpsb
les
mov
push
sub
ja
sti
inc
cmp
pop
loop
push
test
icebp
loope
out
jecxz
or
mov
xor
lcall
leave
pop
push
or
lds
push
dec
lcall
mov
imul
in
imull
mov
pop
jbe
and
dec
repnz
rolb
dec
pop
leave
push
imulb
inc
xchg
jb
data16
xchg
mov
xor
cld
aaa
mov
sub
pop
fwait
sbb
movsb
and
cmp
jbe
cwtl
push
mov
loope
in
push
int3
out
outsl
adc
in
fwait
movsl
push
cmp
out
inc
pop
in
cmp
sub
cmpsb
hlt
mov
sbb
and
out
popf
flds
fbstp
and
leave
or
xor
mov
jg
push
pop
test
sub
sbb
and
cmpsl
pop
pop
dec
aaa
cmp
das
inc
dec
or
xchg
sbb
pusha
pop
sarl
pop
cmc
inc
cmc
and
xor
loope
ret
pop
je
sbb
adc
pop
iret
adc
movsl
les
push
cmp
push
and
xor
movsl
notb
or
adc
or
lds
dec
and
xchg
in
cmpsb
in
push
sub
sub
inc
arpl
xchg
iret
sub
dec
add
movsb
andb
data16
xchg
mov
xlat
loope
jae
fdivrl
pop
aaa
lahf
mov
fldt
std
jae
pop
pop
lds
sub
pop
test
cmpsl
push
icebp
and
sbbl
mov
add
fidivrl
fldt
xor
stos
dec
imul
popl
scas
vpmacsswd
push
fmul
push
daa
ss
inc
shll
push
xchg
stc
push
xchg
ja
mov
add
pop
mov
sub
sbb
add
adc
mov
pop
jno
daa
int3
shll
inc
mov
mov
cmc
sbb
inc
es
and
jmp
adc
shl
fsubs
stos
xchg
push
ja
mov
subl
sbb
jg
aaa
jbe
xchg
mov
add
push
sbb
cmpsl
divb
jp
push
pop
dec
cmp
add
or
icebp
add
shlb
or
mov
into
mov
xor
or
je
adc
sbb
push
jge
jns
testl
imul
push
test
xchg
fwait
popa
pop
call
xchg
lcall
xlat
insb
pop
and
cmp
daa
dec
and
movsl
iret
int3
push
popf
testl
pop
jl
dec
xchg
jmp
leave
mov
or
jp
mov
stos
pop
cmp
clc
roll
scas
jbe
pop
push
int
pop
cld
test
sub
in
leave
fcoml
mov
loop
add
lock
out
dec
mov
movsb
mov
push
push
adc
pop
ss
fcomi
xor
mov
mov
popa
test
dec
sub
push
shrb
mov
or
mov
pop
or
jns
xchg
dec
mov
lcall
mov
popa
mov
out
aaa
test
dec
jbe
sbb
scas
cmp
xchg
sub
fcoml
sbb
rorl
pop
or
notb
xchg
jmp
js
add
dec
nop
mov
je
fwait
push
or
cld
and
inc
int3
pop
jecxz
push
mulb
push
pop
rcll
insb
xchg
fisubrs
cs
add
shlb
mov
dec
mov
mov
add
mov
add
xor
out
shlb
xchg
pop
ljmp
pushf
cmp
add
ret
ja
fidivl
jb
movsb
cmp
je
iret
fadds
push
jg
repnz
mov
cltd
pop
ja
cmp
xor
pop
fimuls
lock
jnp
andb
lock
and
push
pop
mov
push
mov
push
add
add
aam
popf
fs
push
sub
mov
inc
icebp
sbb
dec
adc
outsl
push
movsb
nop
mov
js
hlt
in
gs
icebp
mov
fbstp
lods
sbb
imul
jmp
pop
rcr
fistpl
lahf
jnp
adcl
mov
dec
imul
inc
insb
rorb
lcall
add
mov
push
and
int
sub
outsl
out
daa
stos
jp
dec
jae
out
push
dec
pop
dec
xchg
inc
sbb
push
decb
insb
jl
xchg
sbb
jns
ja
bound
push
push
dec
out
mov
or
inc
mov
ja
outsb
in
and
outsb
pop
xabort
inc
into
fwait
adc
or
cltd
push
shll
stos
test
mov
jg
mov
xor
dec
in
clc
addr16
test
out
out
mov
mov
shrl
frstor
ss
mov
push
cltd
test
subb
mov
xchg
in
in
outsl
push
out
mov
lcall
std
jno
jno
lods
mov
idivl
mov
testl
dec
xor
sbb
stc
and
sub
dec
dec
cmc
adcb
xchg
les
and
and
and
stos
loope
icebp
jge
js
adcl
jecxz
or
js
xchg
mov
adc
xor
mov
jno
cs
jbe
dec
sbb
mov
mov
add
sub
dec
pop
xchg
clc
push
push
dec
xor
icebp
xchg
rcr
pop
in
lock
jecxz
mov
sbb
sbb
and
std
xor
pop
mov
sbb
mov
lods
and
sub
movsl
sub
gs
icebp
jbe
outsb
leave
and
jecxz
ja
stc
bound
and
push
pop
xlat
mov
test
add
sub
imulb
sub
sti
repz
cmpsl
mov
in
xchg
jg
pop
jmp
pop
or
test
js
sbb
aas
fsubr
es
push
cmp
pop
andb
push
mov
add
cwtl
pop
or
in
push
leave
cmp
jb,pt
mov
and
mov
dec
or
outsl
inc
mov
pop
mov
imul
out
and
jns
stos
adc
fyl2x
inc
cs
adc
sbbb
mov
add
cmp
leave
add
add
enter
psadbw
inc
mov
push
fdivrl
fiadds
fwait
add
test
xor
cli
push
testl
sub
jp
in
ret
hlt
inc
mov
cltd
shrb
mov
rorb
mov
sarb
inc
inc
test
incl
add
in
fxch
or
sbb
jne
push
mov
mov
into
ds
pop
sbb
push
ficomps
cmc
xchg
icebp
in
add
xor
daa
daa
pop
sub
adc
idivl
je
jge
test
aas
in
pop
xor
out
mov
jmp
outsl
iret
clc
pusha
inc
adc
pop
xor
arpl
mov
aas
aad
or
rcll
pop
xchg
jne
jp
cltd
movb
cs
sbb
xor
jecxz
pop
shl
ret
add
jmp
jg
lods
enter
inc
fstp
add
push
pusha
xchg
nop
jmp
jp
mov
dec
mov
jmp
mov
fistpl
push
scas
jne
dec
xor
dec
adc
stos
pop
xchg
in
dec
jle,pn
mov
dec
ret
jnp
pop
xchg
add
push
xchg
mov
add
push
sahf
std
lods
cmc
and
push
scas
int
inc
jb
adc
ret
xchg
into
cmp
inc
pop
push
dec
nop
mov
dec
xchg
int
mov
cltd
inc
pop
pop
pop
inc
xchg
in
and
inc
jp
in
adc
mov
mov
xchg
mov
into
fildl
cs
es
shlb
hlt
sbb
jl
inc
push
dec
mov
jnp
call
arpl
leave
jle
inc
inc
and
test
andl
xchg
jmp
xchg
push
push
pushw
pop
lock
xor
ror
add
roll
push
mov
pop
les
std
and
push
movsl
rcll
lret
sbb
push
js
push
push
fs
inc
ror
jmp
pop
andb
mov
sbb
bound
mov
insb
mov
mov
lahf
mov
pop
mov
inc
icebp
imul
in
mov
das
sub
inc
inc
xor
popf
fs
jae
sub
icebp
leave
cmpsl
ja
sahf
insb
fdivl
mov
stc
jo
test
jp
jl
clc
sbb
shrl
loope
cld
adc
pop
stos
movsl
and
dec
mov
xchg
ljmp
int3
outsb
dec
or
in
add
jb
fistpl
mov
xor
xchg
jo
lds
icebp
jbe
fwait
sbb
pusha
rclb
lcall
ss
xor
out
jne
in
push
in
inc
cmpsb
loop
sub
xchg
and
stos
jbe
cltd
nop
pushf
neg
and
out
iret
add
cmpsl
push
or
and
push
or
mov
test
cmpsb
negb
xchg
nop
rorl
and
cmp
jb
dec
add
das
push
push
call
jae
push
addl
xor
mov
rcrl
sub
dec
fadd
enter
jbe
sbb
add
into
xor
bound
scas
jl
in
mov
scas
add
pop
loopne
call
cld
out
jns
add
outsb
sbb
and
int3
cmp
mov
mov
in
mov
xchg
lea
inc
bound
pusha
mov
shlb
enter
out
mov
int3
cmp
sub
xor
add
add
and
movsb
rcrb
add
les
jl
mov
mov
adc
sarl
jae
push
scas
sbb
inc
fsubp
pop
cli
add
lahf
mov
push
daa
leave
stc
ljmp
sub
xchg
mov
sub
jo
jge
cli
push
insl
or
adc
shrb
lret
movsl
std
dec
pop
cmp
and
iret
ffreep
adc
loop
mov
mov
into
fwait
ret
jecxz
fimuls
push
and
pop
add
mov
repnz
mov
icebp
mov
shl
push
enter
sub
popf
subl
push
gs
into
push
sbb
loope
jmp
adc
into
shll
mov
add
push
pop
push
dec
mov
jo
jo
gs
pop
int
stos
out
inc
inc
push
fs
pop
inc
jmp
data16
jge
bnd
clc
sbb
hlt
sbb
sbb
and
fcmovnu
movsl
jbe
push
jmp
leave
xor
aam
inc
adc
stos
dec
shrb
clc
orl
ret
xchg
int
insb
pop
fstps
push
shll
add
cmp
out
nop
mov
andl
sub
xchg
jmp
jns
push
inc
add
sub
sub
mov
jle
cmp
inc
stc
cmp
sbb
in
adc
fcompl
stos
xchg
unpcklps
mov
movsl
fistpll
rclb
xchg
leave
xchg
lret
add
xor
add
addb
das
cmp
inc
mov
push
jne
jne
cmpl
rclb
mov
inc
inc
stc
mov
lret
jbe
jae
xchg
test
push
cmc
lret
call
out
mov
mov
jne
into
lahf
clc
nop
mov
xchg
hlt
cli
sbb
imul
test
cltd
cmpsl
cld
dec
outsl
xor
cmp
shrl
xor
shlb
iret
push
lcall
xchg
lahf
jmp
dec
int
xchg
hlt
jae
mov
push
insb
imul
adcb
in
mov
add
outsb
xlat
popf
dec
pop
sub
or
jl
rcrb
mov
fdivs
or
adc
xor
imul
cltd
mov
pcmpgtw
jns
cld
sbb
inc
or
push
js
addl
pop
in
jnp
in
mov
sub
sbb
mov
adc
pop
clc
mov
mov
fnstcw
mov
aam
imulb
fstpt
stos
rcrl
jo
je
mov
mov
and
subl
mov
pop
xor
xchg
pop
lock
cmpsl
push
push
scas
mov
and
pop
sti
jmp
push
pop
sub
mov
cld
lds
je
mov
outsb
daa
dec
arpl
xchg
icebp
mov
insb
cmove
dec
or
pop
jns
sub
sbb
test
shr
sbb
ret
cmpsl
leave
and
es
repnz
insl
into
imul
lods
cmpsl
daa
bound
rorb
sar
push
les
or
hlt
sbb
xlat
ror
imul
pop
and
jmp
ljmp
sub
dec
mov
ljmp
or
daa
inc
cmp
je
or
insl
std
mov
in
xchg
fidivl
xlat
lret
repz
ljmp
add
cmp
fimull
adc
mov
iret
icebp
int3
pop
mov
ljmp
daa
push
sar
pop
repnz
outsl
xor
or
cmpsl
int
mov
inc
mov
pop
pushf
xchg
push
push
lret
xchg
cli
jo
ss
test
fistpl
rorb
dec
add
inc
inc
jo
push
xchg
jge
das
or
inc
fadd
fimull
scas
testb
xchg
fcmovb
fbld
lods
sub
lahf
jle
mov
and
and
ret
jg
sub
ljmp
xacquire
ficompl
sbb
paddusb
fsubs
xchg
jecxz
mov
aam
shll
popa
mov
andb
xchg
mov
mov
rorl
jl
int3
push
push
or
out
ljmp
repz
pop
jecxz
or
sbb
pop
add
pop
pop
adc
mov
adc
mov
inc
xchg
xor
lock
sub
dec
pusha
loopne
inc
xchg
jg
mov
scas
pop
and
out
or
sub
dec
mov
sbb
pop
sub
lahf
jmp
mov
push
jne
movsl
or
repz
dec
sbb
test
xor
pop
decb
stos
pop
mov
xchg
das
je
loope
jae
sarb
sub
sub
mov
pop
cmpsb
iret
in
int3
mov
mov
inc
sub
pop
aam
or
fistpl
js
mov
mov
mov
add
and
dec
fwait
shlb
idivb
xchg
xor
add
xor
inc
imul
pop
aaa
das
sbbb
mov
mov
cld
push
fstpt
div
pop
inc
adc
pusha
stos
das
and
aam
pop
imul
mov
mov
mov
xchg
push
cltd
je
jmp
aaa
loopne
fwait
daa
nop
mov
stos
xor
mov
push
ljmp
fisttpl
inc
in
shll
iret
dec
xor
xchg
movsl
test
mov
cmp
js
add
cmp
fsubl
or
adc
xchg
std
lds
rcrl
fdivs
adc
xor
mov
addb
mov
mov
sbb
mov
mov
mov
pop
inc
jnp
dec
iret
cwtl
dec
mov
push
xchg
sbb
popf
mov
sub
sahf
and
sub
mov
push
inc
sbb
mov
xor
gs
jnp
stos
orl
scas
pop
and
cmp
and
ss
test
mov
mov
cmp
mov
sub
add
inc
pop
push
cmp
push
mov
loop
repnz
inc
push
dec
jae
testl
push
pop
mov
and
shlb
mov
jne
jne
arpl
inc
add
jle
mov
jmp
mov
cs
push
push
jno
addl
sub
add
arpl
adc
or
clc
gs
cmp
orb
sarb
into
push
in
jns
and
stos
cmc
icebp
or
cltd
cmp
or
fisttpl
pushf
test
inc
movsl
adcl
cmp
sahf
in
mov
cld
cli
mov
cld
push
pusha
and
insb
cltd
loopne
cld
inc
push
cli
rol
cmc
mov
xor
mov
pop
rolb
bound
dec
mov
outsl
int
aad
and
mov
incl
aad
das
addl
movsl
jmp
xchg
cmc
out
in
push
filds
mov
sub
or
adc
sbb
call
aam
mov
push
sub
mov
cs
mov
pop
inc
pop
dec
adc
add
mov
scas
jp
lock
sbb
push
lock
test
shll
mov
xor
inc
bound
sub
lods
xor
outsb
xor
loopne
jg
push
rolb
mov
dec
push
daa
in
ljmp
and
cmpsl
fs
lfs
mov
sub
push
hlt
sub
fsubrs
dec
daa
push
or
and
clc
xchg
insl
movsb
jl
mov
orl
dec
push
call
mov
mov
sub
xorb
sahf
xchg
jne
or
sub
stos
push
cs
mov
inc
fiaddl
imul
add
mov
sub
out
cmp
std
sbb
or
sti
mov
adc
xorb
xchg
repz
dec
rcll
fiaddl
mov
cltd
or
insl
push
xchg
cmp
pop
insl
pushf
cmc
pminub
jp
or
xlat
sub
sub
sub
dec
mov
jge
bound
jbe
cmpsb
pop
jge
loopne
cmp
lret
and
test
syscall
cltd
icebp
ret
sbb
jge
dec
cltd
stos
sbb
sub
pop
es
sbb
and
pop
bswap
mov
and
scas
sbb
lret
out
or
stos
jno
xchg
mov
aaa
std
jbe
sub
into
sbb
inc
or
stos
outsb
call
into
mov
sub
daa
fistl
repz
mov
dec
push
xchg
and
mov
sub
mov
ja
pusha
scas
js
add
push
addb
call
lret
or
fists
xlat
sub
fsubr
testl
cltd
out
lret
sub
push
adcb
sbb
mov
pop
les
cmp
and
jns
or
sbb
orb
sar
jge
lret
call
in
stos
dec
test
pushf
jae
popa
lock
fldenv
lahf
scas
pop
outsb
mov
and
pop
imul
push
fstpt
cltd
loope
pop
in
cmp
inc
sbb
push
lock
into
add
les
adc
in
repnz
adc
js
xchg
and
cmp
movsl
pop
cwtl
pushf
dec
clc
fcompl
pop
cmp
fs
leave
movb
xchg
mov
cld
or
inc
mov
adc
jg
fld
mov
adcl
stos
push
inc
scas
lahf
fidivs
and
mov
and
dec
in
mov
xor
add
push
push
lds
dec
aaa
mov
mov
std
sub
mov
in
xchg
es
push
sarl
pop
xor
lock
mov
dec
push
insl
stc
scas
xor
pop
sub
jns
and
sti
adc
aad
clc
ret
sbb
dec
shll
int
test
cmp
push
jp
nop
push
int3
rcrl
jecxz
xchg
jns
sub
add
push
mov
cmp
iret
in
mov
stc
mov
adc
iret
in
fsubrs
mov
repz
sbbl
loopne
sub
dec
xchg
dec
cmpsb
and
enter
fnsave
int
mov
rcrl
hlt
fdiv
inc
test
int3
out
es
ds
in
push
into
mov
mov
in
pop
out
decb
dec
or
push
lods
xlat
mov
sarl
push
cmp
inc
xchg
testl
or
divb
mov
lret
popa
shrb
outsb
icebp
out
add
push
adc
rcll
push
or
push
jecxz
test
xor
mov
or
movsb
roll
cltd
notl
sub
test
int
xchg
mov
pop
jmp
fwait
add
pop
inc
and
hlt
jg
fwait
or
or
into
mull
int
adc
mov
xchg
mov
call
inc
sub
repnz
jb
sub
bound
xchg
add
inc
push
and
aad
sbb
and
into
add
mov
fstl
dec
pop
inc
imul
shll
not
push
mov
mov
xchg
jmp
jae
insl
inc
mov
pusha
stos
and
das
mov
cmp
scas
mov
std
aas
and
xchg
lods
jg
fnstcw
and
sbb
int
inc
cmp
leave
or
rcr
xchg
mov
and
fildl
dec
sti
sbb
pop
push
out
sbb
bound
and
test
cltd
mulb
mov
and
cmp
lahf
or
ss
cmp
insb
push
xchg
adc
xor
aas
inc
xchg
std
fldenv
ljmp
testb
cmp
pop
out
sub
xchg
adc
dec
aad
cmp
xchg
icebp
call
mov
jg
lret
fcomip
test
out
pop
adc
push
out
pop
lret
lea
shrl
hlt
out
std
fs
fmuls
je
rorb
repz
or
push
sbb
fstl
pop
mov
aaa
cmp
jle
pusha
or
jo
add
rorb
ja
jmp
sbb
enter
leave
test
push
hlt
rorb
addr16
orl
and
out
jno
sbb
ror
es
sbb
mov
cmp
iret
lahf
test
mov
insl
popa
aas
out
sub
stos
jb
loopne
dec
in
cmp
jmp
xchg
dec
fs
inc
add
jl
movsl
xchg
mov
jnp
xchg
push
pop
mov
flds
push
mov
fwait
xchg
push
sbb
jbe
xchg
lcall
ss
les
in
dec
jecxz
push
mov
add
dec
scas
mov
or
test
cmpsl
mov
inc
pop
jg
hlt
push
xchg
repz
out
int3
orb
ss
inc
cmp
outsl
mov
fs
test
bound
cwtl
jo
jb
shrb
test
lods
inc
js
vmwrite
clc
in
xchg
add
dec
test
mov
sub
sub
xchg
js
ja
push
sub
xchg
in
incl
or
shrl
data16
lods
hlt
mov
sub
mov
mov
inc
xor
lret
loopne
out
or
sbb
sarl
push
mov
ljmp
test
mov
cmp
add
sbb
lea
jl
movsl
fiadds
in
bound
jmp
push
pop
xchg
mov
lods
cmpsb
incb
addb
mov
loop
sub
mov
push
or
inc
mov
jno
ljmp
ret
mov
push
mov
test
jb
fsub
adc
addr16
ror
xor
std
ret
mov
addr16
jae
jl
adc
test
scas
fists
in
lods
fs
xor
addb
mov
pop
mov
cmp
mov
dec
cmp
sar
bound
mov
out
idivb
call
mov
jecxz
std
sub
dec
test
push
or
les
jbe
sbb
mov
cmc
sub
mov
in
mov
mov
inc
out
mov
adc
dec
out
pusha
iret
xor
test
jne
in
insl
cmp
sbb
jo
add
pop
fs
xor
ds
mov
jo
shll
imul
sbb
jge
sbb
movsb
push
inc
add
into
adcb
std
add
je
in
push
sbb
dec
fisubs
sbb
leave
icebp
xor
aas
or
xchg
sub
stc
cmp
push
arpl
mov
xchg
insb
int3
jg
or
xchg
cmp
jae
sbb
mov
pop
mov
outsb
clc
push
xchg
pop
pop
lcall
sahf
add
frstor
popf
cmp
enter
cs
jno
sahf
clc
ss
popfw
pop
popf
in
pop
dec
and
xor
xchg
cld
int
xchg
dec
movsl
adc
cmovns
and
sub
in
adc
lcall
push
mov
mov
sbb
pushf
xchg
push
mov
aam
icebp
pop
mov
push
mov
pop
jg
outsb
mov
xorb
fistpll
add
mov
in
das
leave
cmc
fyl2x
fimuls
mov
push
dec
sahf
sbb
cwtl
cmp
cmp
fsubrs
in
inc
sbb
cmp
adc
push
lcall
cmp
getsec
enter
popw
and
scas
pop
add
test
addr16
popf
or
sub
out
decb
fnstcw
dec
incb
fists
pop
and
bound
ljmp
sbb
es
es
pop
dec
cltd
pop
adc
dec
mov
int3
push
lret
out
data16
stos
pusha
dec
cmc
lods
jg
inc
sub
sahf
int3
sbb
mov
jg
movsb
xchg
jo
out
xchg
fldenv
or
addr16
cmp
pusha
pop
mov
push
ret
sbb
lods
mov
movsb
sub
jp
movsl
lea
push
push
sbb
movsl
cmpsl
les
pop
mov
cmpsl
inc
sbb
xchg
dec
xor
or
sub
aam
xchg
iret
cmpsl
rorl
and
iret
fnstenv
arpl
test
push
mov
inc
jecxz
insb
sbb
cmp
lock
lock
cs
and
rorb
test
sbb
jne
jl
xchg
cwtl
rclb
pop
cs
test
xchg
and
jl
mov
lds
pop
cmc
mov
add
xor
xchg
int3
adc
and
insb
movsb
aam
cmp
sti
pushf
pop
repz
dec
sti
sub
je
mov
lret
or
dec
lea
rolb
cld
fcomps
cmpsb
cmp
stc
shrl
je
loopne
mov
loop
shlb
inc
push
or
into
aam
sbb
adc
dec
loope
jecxz
in
in
mov
add
cmp
lds
sahf
rorl
ficomps
pop
fldenv
jle
cmp
pop
scas
add
lret
or
cwtl
jb
sbb
xchg
pop
jg
sbb
rcr
pop
lret
push
cs
into
out
arpl
dec
dec
imul
adc
fdiv
push
xor
xor
pusha
mov
stos
scas
jo
or
jb
cld
rolb
inc
and
xchg
cmp
xchg
xor
jae
es
and
addr16
jno
jbe
mov
les
repnz
add
and
movsb
mov
test
ret
mov
in
lret
js
shll
lret
ljmp
insb
js
mov
sub
ja
shll
or
rcrb
icebp
push
shlb
int
insl
add
and
jo
mov
pop
es
cmc
mov
mov
adc
test
repz
loope
jg
cs
insl
push
mov
dec
push
or
clc
std
pop
loop
adc
xchg
push
push
xor
jns
insb
mov
lahf
repnz
xor
jp
jmp
and
mov
lahf
mov
push
jmp
sbb
jmp
in
add
push
adc
dec
cs
add
fisttpl
test
xlat
lret
inc
repnz
fs
test
rorb
lock
xchg
cmp
cmp
sub
xor
ja
mov
loopne
push
inc
fisubl
movsl
orl
or
outsl
mov
sub
adc
xor
mov
inc
or
nop
pop
push
icebp
inc
jmp
or
jle
mov
rolb
imul
aam
cltd
mov
lret
push
shrl
loopne
fists
jae
xor
cmpsl
add
pop
pop
and
aam
jecxz
js
add
push
mov
and
cmp
or
jl
push
or
enter
xor
gs
adc
and
out
dec
mov
in
adc
or
jns
jo
dec
fs
adc
mov
scas
push
insb
aad
push
sbb
sub
inc
enter
mulb
mov
jns
js
and
inc
adc
std
hlt
pop
lods
addr16
call
xor
adc
data16
dec
stos
les
mov
xchg
pop
and
xchg
ljmp
sahf
imul
lods
fisttpll
iret
daa
pop
fistpll
pop
xor
fsts
cmp
outsb
outsb
cmp
aam
or
fcoms
shr
mov
adc
mov
dec
jle
mov
int
pop
xor
inc
sub
test
dec
jg
outsl
or
mov
add
repnz
push
pop
out
shlb
cmp
xchg
cmpsb
lds
xchg
adc
inc
out
xchg
jmp
and
pop
mov
arpl
jecxz
daa
inc
sbb
cmpsl
sbbl
in
dec
insb
adc
sub
jns
xchg
fistpll
or
sbb
loop
dec
add
jb
ja
xor
xor
inc
in
fists
and
push
loopne
ret
out
out
sbb
daa
sub
lret
popf
cld
loopne
xor
inc
sub
test
sbb
lahf
mov
int
mov
ficomps
stc
sbb
andb
dec
dec
push
ret
mov
sbb
es
pop
add
dec
xor
sub
or
jmp
jle
out
rcl
adc
adc
inc
in
sti
lds
mov
adc
hlt
xchg
loopne
or
mov
cmc
push
arpl
call
cmp
imul
sub
pop
fcompl
mov
clc
les
sub
xchg
sub
movsb
mov
repnz
jg
mov
dec
hlt
jo
cmpsl
lods
loope
adc
and
or
lock
dec
fcmovnb
popa
outsl
rcr
mov
add
movsl
lret
push
addb
loopne
shlb
outsl
sub
mov
fistpl
dec
pushf
cmp
ss
adc
push
repz
adc
lahf
sahf
addr16
jp
jl
lock
or
sub
cltd
xchg
push
lock
cltd
insl
inc
lahf
add
leave
mov
add
cmp
dec
out
inc
push
scas
push
adc
or
xchg
adcb
incb
jae
test
pop
lods
faddl
and
mov
ret
mov
mov
and
lods
pop
sub
fwait
jns
sbb
mov
mov
push
in
xchg
push
adc
add
fisttpll
sbb
aaa
dec
cmc
jnp
movsl
aas
and
fcompl
add
dec
dec
imul
aad
subb
out
ljmp
and
sub
sbb
xor
push
jae
mov
mov
mov
fwait
jo
test
shlb
xchg
enter
sarl
pop
scas
sub
adc
ds
loop
out
std
repz
cmp
in
or
jnp
push
push
xor
test
ja
stc
out
pop
ja
inc
mov
popl
jg
dec
addl
pop
lock
jae
mov
test
cmc
xchg
adc
cs
or
ds
fwait
mov
movsl
jmp
dec
jne
xor
jl
je
jo
dec
xorl
insb
or
or
mov
ret
shl
subb
jecxz
jp
lret
mov
int3
sar
dec
dec
jno
mov
mov
je
push
mov
ret
arpl
mov
shl
cli
jl
xchg
movsl
addr16
sbb
data16
das
in
mov
sbb
mov
jle
adc
dec
inc
mov
xor
jle
sar
loopne
sahf
mov
jecxz
push
pop
lret
ret
fwait
dec
sub
enter
lcall
adc
push
ljmp
stos
gs
mov
loope
ret
xor
xchg
aam
push
in
sub
jne
cmp
icebp
lock
push
scas
or
or
out
ss
push
jno
loop
xchg
call
sbb
inc
test
and
lret
cmp
loope
pop
lret
mov
or
add
inc
ret
xchg
sub
inc
daa
insl
cli
xchg
testl
mov
pop
sarl
scas
sub
arpl
and
or
pop
insb
pop
int3
fwait
add
inc
or
mov
xlat
sub
call
xorb
add
roll
mov
jns
sbb
cmp
loop
rclb
aam
add
shlb
clc
pop
and
sbb
pushl
aam
and
das
nop
push
aaa
pop
pop
mov
add
and
cltd
jno
test
stos
jg
mov
cmp
pop
xlat
loop,pt
test
insl
cs
call
clc
ja
pop
mull
mov
rorb
pushf
test
sbb
mov
and
out
push
jg
pop
sub
or
xchg
stos
mov
shl
fsubrp
mov
lret
imul
lea
out
cwtl
mov
push
repz
sahf
mov
jle
pop
xchg
cmp
es
jns
fisubs
push
lods
shl
and
loopne
mov
fsubp
xchg
scas
shrb
cwtl
hlt
and
pop
mov
pusha
mov
mov
push
out
sbb
fyl2x
push
xor
aas
cmc
cli
adc
jle
jbe
int
mov
sub
fcmovnu
mov
fdivr
cmpsl
loope
dec
lahf
sahf
mov
xchg
in
mov
cwtl
cmp
popf
loop
pop
sub
adc
or
lods
and
push
mov
dec
jae
pop
sbb
mov
flds
mov
dec
shll
pop
cltd
cwtl
les
int
mov
nop
mov
mov
push
push
mov
or
repnz
xchg
mov
in
loop
push
stos
add
sbb
jne
push
fsubs
out
pop
stos
fisttpl
mov
mov
adc
pop
aad
sar
xchg
jl
add
adc
xor
xor
mov
repnz
mov
add
dec
pop
out
sbb
cmpsl
dec
cmpsb
push
cmc
sbb
fists
jne
nop
mov
mov
sbb
xlat
repnz
fadds
inc
dec
outsl
lret
sub
inc
push
aad
ret
mov
icebp
lret
or
inc
out
dec
push
into
pop
fstl
jle
test
sbb
repz
dec
dec
xchg
notl
lahf
enter
lods
pusha
bound
push
pop
xor
lret
lea
inc
push
dec
ret
mov
xchg
ja
adc
sub
sub
pop
and
movsl
pop
fcoms
test
mov
xor
sbb
mov
cmp
cltd
jo
jae
insl
js
std
ret
jg
dec
int3
or
mov
in
mov
jns
ret
xchg
mov
adc
add
cs
add
outsb
mov
pop
and
loope
sub
lret
push
mov
mov
rcl
int
jno
xchg
adc
ret
popf
sbb
sbb
movzwl
repnz
repz
sbb
xchg
adc
out
lahf
cli
lock
mov
cs
hlt
fistps
lahf
rcr
fnstsw
sub
fisubrs
rorl
mov
and
mov
mov
test
add
jbe
inc
xor
repz
mov
sti
shr
sbb
jg
adc
cmpsb
pop
xchg
pusha
lods
lcall
dec
bound
jl
out
test
or
adc
call
mov
mov
sub
mov
cmp
jbe
jecxz
mov
sub
cmp
cwtl
mov
mov
je
lcall
int
orl
bound
in
shrl
cmp
syscall
xchg
pop
stos
sbb
xor
sbb
mov
adc
jle
mov
scas
add
sub
pop
push
hlt
rcrl
mov
into
cmpsl
pop
lods
test
test
or
cmp
add
xorb
pop
mov
js
inc
add
push
jno
inc
jns
rol
and
mov
dec
push
js
sbb
flds
ret
or
push
movl
and
adc
in
mov
inc
test
jns
jl
mov
fimull
and
push
and
mov
loope
mov
sarb
inc
movsl
icebp
ret
dec
mov
adc
push
js
dec
xchg
in
aaa
add
scas
notl
jo
inc
mov
dec
or
jp
inc
in
xor
add
pop
add
mov
pop
inc
xlat
mov
jbe
test
and
scas
push
cmc
enter
mov
popf
lcall
or
outsl
xchg
mov
sbb
ja
loop
jns
insb
in
push
jp
sub
mov
push
sbb
adc
aad
jp
push
jne
adc
mov
push
repz
sbb
jnp
adc
test
jmp
jb
jb
ds
jb
lahf
mov
stos
mov
in
sub
push
je
lods
add
js
adc
inc
fidivrl
call
cmc
aad
stc
push
or
jae
xor
sub
shlb
sub
xchg
pusha
imul
dec
aaa
pop
pop
in
out
mov
shll
rcrl
add
xchg
xlat
xchg
fucomp
clc
inc
iret
cltd
xchg
rolb
mov
loop
fsubrs
add
cltd
sbb
fsubrs
int
ja
mov
cli
movsl
in
jmp
outsb
stos
dec
push
xor
mov
ja
mov
jmp
inc
xor
mulb
jmp
je
sarl
mov
and
testb
sar
jle
lds
loopne
or
push
mov
bound
dec
fsubrp
cmc
das
jb
loop
jle
add
push
movsl
push
mov
js
sub
aas
pop
cmc
xor
or
add
pop
das
divb
fildll
popa
push
hlt
loopne
arpl
mov
xchg
xchg
dec
fimull
mov
mov
fadds
mov
sti
fucomip
imul
fs
dec
adc
clc
jmp
pop
xchg
jns
and
cltd
and
sub
mov
lahf
fdivrl
loope
jo
test
cmp
push
xor
mov
dec
xchg
sub
notl
mov
js
out
push
mov
testl
insb
adc
adc
rorl
insl
xchg
lds
sbb
jb
cs
xlat
inc
outsb
mov
rol
push
add
dec
sbb
lea
dec
insb
aaa
adc
les
addl
jge
cli
jl
ss
cmp
dec
xchg
cmc
sbb
shlb
add
push
or
out
fistpl
fidivrl
sbb
xor
jge
inc
pop
lret
push
fdivrl
and
mov
mov
in
je
push
cmp
popa
push
mov
mov
jle
xor
pop
sub
push
andb
loop
sbb
ss
adc
outsl
in
hlt
sahf
sahf
insb
icebp
xchg
inc
movsl
fneni(8087
jl
jns
dec
cmp
popf
inc
pop
insb
idivl
lods
cmp
jnp
daa
jecxz
pop
xchg
mov
add
stos
js
dec
dec
xchg
adc
imul
or
sahf
and
mov
xor
leave
aam
cmp
test
push
rclb
mov
sub
or
xor
ret
dec
or
xchg
je
jb
xchg
xchg
nop
dec
add
jecxz
mov
arpl
scas
xor
xlat
aaa
popa
or
int
out
and
xchg
push
leave
pop
mov
incb
movsb
dec
fsubrs
sahf
cwtl
mov
pop
mov
clc
test
push
xchg
dec
inc
dec
sarl
add
cmp
fidivrs
outsb
pop
inc
out
imul
xor
jae
mov
sub
shll
dec
jl
or
loop
cs
into
xchg
iret
cmp
in
lahf
cmp
push
into
mov
test
mov
sub
pop
leave
in
push
mov
mov
fldlg2
in
data16
push
aad
lock
xor
xor
pop
lods
or
push
or
sub
fs
dec
inc
xchg
mov
xor
mov
imul
ds
xchg
pop
out
es
out
adc
add
sub
dec
mov
lahf
adc
jge
rolb
push
mov
sub
sub
sahf
mov
aaa
cmp
jl
test
xor
test
loop
aam
xor
xchg
sbb
sub
or
cmc
rclb
lahf
fimuls
push
mov
xorl
fldt
xchg
popf
pop
push
cs
add
mov
test
lods
xlat
inc
inc
lahf
imul
pop
fwait
movsb
fs
in
jnp
adc
mov
xor
jmp
call
aam
jle
test
and
jb
xchg
sbb
xchg
mov
xor
popf
popa
mov
in
xchg
mov
xchg
mov
gs
pop
repz
es
add
and
xchg
divb
aaa
hlt
in
aas
lahf
test
call
ds
sti
mov
test
inc
ja
ret
not
bound
jo
popa
lods
add
das
inc
out
filds
pusha
adc
cmpl
bound
sub
imul
xor
adc
dec
ja
shll
mov
dec
aam
add
add
cmp
fldcw
xor
xchg
add
stos
dec
push
mov
call
jmp
mov
inc
into
movsb
sahf
popf
pop
jns
cs
imul
cltd
stos
fwait
scas
lods
enter
int3
inc
addl
pop
lahf
into
fs
sub
inc
scas
pop
sbb
push
test
add
cmpsb
test
lods
xor
push
test
rorl
or
in
jns
add
mov
add
mov
loop
lcall
push
cwtl
cmp
sbb
push
push
fildll
push
dec
aaa
idivb
cltd
mov
push
movsb
cs
mov
je
cmp
add
mov
rcrl
push
adc
adc
and
mov
cwtl
ret
mov
or
fiaddl
xchg
add
xorb
mov
lret
dec
pop
mov
gs
test
cmp
jno
outsb
jne
lahf
xor
xchg
mov
aad
pop
or
xor
ja
sub
into
popa
sub
jo
push
mov
int
inc
pop
cltd
shlb
add
pop
cwtl
push
test
testb
dec
mov
dec
inc
pop
mov
adc
pop
push
push
int
xor
and
mov
xchg
es
test
and
add
rcll
jo
mov
inc
cmp
sbb
shlb
fidivrs
imul
inc
sbb
subb
test
ljmp
div
cmp
in
hlt
gs
negb
shrl
test
pusha
in
pushf
fstpl
cmp
add
dec
iret
lahf
lock
inc
and
dec
inc
mov
aam
fwait
add
jno
mov
in
sar
fdiv
cmpsl
shrb
mov
fwait
mov
cmp
xchg
jg
pop
lcall
nopl
mov
stos
and
push
mov
or
test
pop
jne
lods
cmpsl
push
xor
clc
aas
xchg
dec
repnz
adc
add
lahf
aaa
cmp
into
repnz
out
push
or
pushf
divl
loopne
daa
xor
push
or
push
insb
mov
imul
and
xor
xchg
mov
sub
push
sarl
xchg
leave
xchg
cmp
cmp
cwtl
pop
repz
adc
mov
rorb
out
ja
inc
cmp
cmc
mov
jg,pt
ffree
xchg
sub
seta
fcomp
in
clc
out
shlb
or
inc
outsl
out
sbb
in
sarb
pop
jo
inc
xor
gs
push
rcll
int
dec
inc
dec
mov
std
cld
mov
or
adc
push
dec
push
mov
or
loope
sub
adc
cmp
jp
inc
fimull
insl
inc
in
push
mov
mov
lods
dec
pop
mov
inc
sbb
clc
call
adc
or
or
xchg
mov
movhps
add
shll
dec
xor
repnz
inc
jp
dec
stos
sub
xor
mov
int
std
jecxz
loop
out
scas
cmp
xor
push
jo
mov
pop
cld
mov
jmp
pop
and
stos
leave
dec
int3
push
fstpl
xchg
arpl
and
cmp
fucom
outsl
sub
in
mov
incb
push
jno
outsb
sbb
pusha
jno
pop
aad
sbb
mov
pusha
in
out
inc
into
rep
test
pop
nop
insb
lods
mov
sub
jp
adc
popf
clc
inc
mov
xchg
lret
lods
in
js
adc
minps
imul
cltd
inc
lahf
daa
xor
dec
icebp
cmc
nopl
mov
fcompl
gs
out
sbb
ja
dec
pop
in
xor
jp
jecxz
add
std
and
loopne
mov
stos
popf
lret
adc
scas
mov
int
adcl
xchg
movsl
lods
sub
pop
adc
sbbl
mov
loope
ret
sar
fists
test
jo
sarb
ret
dec
push
cmp
add
push
jo
lcall
cli
xchg
mov
push
addl
test
clc
xchg
and
rcl
push
jp
les
ja
sarl
sbb
fisubrl
aas
xlat
or
outsl
push
es
dec
les
lock
inc
jmp
and
roll
es
mov
mov
fidivrl
or
aam
int3
and
sbb
jo
hlt
adc
sti
and
jae
xor
push
je
stc
frstor
enter
test
mov
call
testb
and
push
jns
mov
je
lock
dec
dec
jge
ds
outsl
test
pushf
jo
fbld
jno
cmp
lcall
ds
inc
scas
repz
adc
lds
adc
pop
in
mov
push
mov
fsubrp
jecxz
out
mov
cmp
xchg
test
movsb
fs
test
test
sbb
jg
push
dec
jno
mov
sub
je
adc
rol
lcall
std
loope
xor
lret
push
out
jecxz
pop
pop
jae
and
or
sbb
repnz
daa
xchg
and
in
sarb
sbb
xor
sbbl
shrb
lret
insb
mov
ficomps
imul
in
stc
adc
push
test
or
rolb
ljmp
in
out
push
cmp
jb
or
das
inc
jg
out
popa
xor
out
leave
pop
inc
inc
inc
scas
test
iret
ljmp
or
pop
fldl
pop
mov
cld
jl
das
lret
icebp
sub
pusha
jae
test
popf
stos
push
popf
movhps
loopne
inc
call
inc
cmpsl
dec
outsb
int3
push
and
and
jmp
mov
sbb
inc
xchg
jmp
push
and
ss
or
stos
cli
jne
xor
jae
mov
int
out
fcmovb
repnz
test
dec
sbb
lods
lods
cs
outsl
cmp
and
push
mov
aam
push
pop
ss
rorb
and
nop
ds
ret
int3
insl
icebp
cmc
enter
arpl
mov
leave
aam
in
scas
pop
insl
or
mov
push
mov
xlat
pop
jl
push
orl
pop
jmp
mov
push
cwtl
push
jb
sbb
popa
cwtl
cmp
scas
pop
in
pop
into
jmp
sub
mov
inc
iret
mov
inc
divl
stos
test
lahf
into
fmull
lds
bound
xchg
cmp
fwait
sbb
add
data16
cmp
lret
mov
add
fistpll
jo
pop
movsb
sub
rorb
fadd
out
xor
adc
std
pop
pop
insb
clc
sti
jb
jne
iret
dec
test
pop
mov
lret
inc
lret
push
out
lret
movb
jge
js
cmc
inc
inc
std
jb
rorb
mov
xchg
push
pop
push
sarl
leave
repz
je
mov
push
int
call
mov
dec
pop
leave
adc
popf
flds
adc
dec
testb
outsb
sbb
inc
xchg
adc
cltd
dec
mov
imul
hlt
mov
mov
ret
cli
insl
sti
cmp
clc
push
in
dec
insb
out
or
or
push
inc
cmp
sub
lods
push
sub
mov
out
lea
cmp
xchg
push
mov
xchg
cltd
sub
sbb
or
test
xchg
xchg
out
call
insl
mov
mov
or
xor
xchg
sbb
dec
sub
in
aas
rorl
and
arpl
jae
gs
push
nop
repz
hlt
and
data16
leave
mov
mov
lock
xor
loop
ljmp
bound
idivl
mov
in
fildl
dec
repz
fwait
inc
sahf
test
jg
test
ret
bound
pop
push
mov
cli
fs
js
pop
mov
xchg
sbb
leave
scas
lds
flds
lcall
pop
pop
fwait
jnp
xchg
js
push
movsl
clc
xlat
loope
sbb
fnstcw
adc
ss
jb
push
movsl
mov
lret
xchg
mov
inc
xchg
js
mov
dec
pop
stos
popl
adc
decl
push
pop
outsb
or
sti
popf
shl
sarl
jae
subb
sarb
xor
jne
push
sub
movsl
pop
adc
iret
jge
jb
cwtl
leave
add
add
fsubrs
dec
popf
into
icebp
arpl
loopne
pop
or
in
loope
cmp
push
movsl
lcall
lock
outsl
or
ljmp
jae
xchg
sbb
push
xor
aad
shll
fwait
outsb
jno
iret
lods
jno
jecxz
fmuls
mov
scas
sbb
sub
xchg
ss
shl
xor
xor
sub
out
fmuls
lcall
sti
in
test
mov
cmpsl
fwait
adc
inc
sbb
aad
mov
insb
int3
cmc
sbb
xchg
dec
out
cmpsl
inc
sti
sbb
ret
push
stos
adc
pop
int3
aad
fidivrs
xchg
adc
std
shr
lahf
adc
and
add
ret
mov
adc
mov
cmp
aas
outsl
cwtl
xor
imul
inc
repnz
sti
into
xchg
jp
daa
in
jl
push
sbb
int3
insl
dec
arpl
pop
mov
fsub
arpl
pop
pop
arpl
push
push
jge
cmpsl
sbb
arpl
call
aaa
lret
cld
xchg
js
dec
mov
jge
mov
cmp
out
leave
pop
int
repz
and
mov
mov
and
mov
mov
int
jbe
fdiv
or
cmp
sbb
imul
jp
sbb
fildll
hlt
loope
fsubr
loopne
lret
test
mov
adc
rcrb
js
dec
sbb
out
sti
sbb
cmp
jmp
gs
or
pop
fisttps
adc
xchg
cmc
cltd
loop
cwtl
mov
push
cs
fisubrl
lret
dec
insl
adc
ja
push
ljmp
xchg
mov
jns
jg
gs
insl
xor
cmp
push
pusha
rclb
cmp
test
cld
push
je
jge
ja
mov
inc
inc
xchg
fwait
test
push
lock
test
sub
std
add
aad
mov
stc
xchg
xchg
mov
cwtl
into
xchg
sti
popa
les
push
js
cmpsl
stc
popa
add
fcmovbe
cmpsl
mov
mov
inc
dec
jle
mov
jle
push
imul
or
out
push
test
push
sub
movsl
sbb
inc
pop
das
jo
sub
pop
pop
shlb
mov
mov
cmpsl
int3
movsb
icebp
adc
lea
mov
mov
xorb
leave
lock
push
into
and
mov
roll
ss
xor
jno
mov
test
call
je
push
call
xor
mov
mov
add
sub
gs
outsl
xchg
arpl
xchg
lea
std
mov
daa
push
shrb
std
popf
mov
inc
mov
rolb
sub
mov
mov
push
imul
test
sbb
xor
pop
xchg
lods
test
iret
test
xor
bound
mov
sub
mov
cld
cmp
gs
pop
lahf
adc
jp
mov
xlat
xor
sub
lds
mov
aaa
rorb
push
xchg
shlb
sbb
test
xchg
rorb
fmuls
and
mov
daa
mov
iret
sbb
mov
ss
das
js
xchg
in
cmpsb
lret
inc
aam
fsubrs
cmc
pop
dec
insl
mov
jmp
and
mov
cli
dec
or
sub
cmp
jle
shll
fisubs
xor
adc
lods
dec
adc
mov
cs
push
push
hlt
popf
les
sub
vpunpckldq
call
adc
mov
sarb
fdivrp
xor
dec
pop
add
out
lds
sbbl
inc
outsb
lcall
cmp
and
es
mov
mov
popa
cltd
sub
pushf
loopne
data16
lds
daa
or
imul
inc
mov
adc
notl
mov
jo
add
xchg
xor
cltd
mov
call
outsb
pusha
lea
mov
std
xor
dec
xor
mov
sahf
in
push
iret
jo
popa
xchg
jmp
bound
inc
aam
cmp
ljmpw
xchg
shlb
leave
and
mov
and
adc
and
cmp
jbe
pop
cmp
inc
ret
adc
sbb
jbe
dec
imul
inc
ljmp
and
andl
rcll
les
inc
mov
addr16
mov
pop
shlb
int
popa
sarb
es
repz
cli
adc
lret
imul
stos
push
dec
es
xor
roll
jne
out
cmc
add
jg
xchg
xchg
jmp
xchg
cltd
mov
gs
mov
inc
xor
pop
dec
jb
test
or
outsl
sbb
movsl
repnz
lcall
xchg
cmp
insb
popa
pop
pop
int
inc
push
mov
adc
mov
idiv
jl
loope
lcall
jmp
sub
cmp
in
scas
and
push
xchg
xchg
pop
push
test
pop
aad
pop
pop
mov
mov
xor
jge
xor
fsubrs
cmc
mov
dec
rcrb
iret
insl
mov
lea
mov
xlat
ljmp
push
sub
sbb
cs
xchg
mov
sbb
and
loop
pushf
pop
sti
test
cltd
sub
mov
cmpsb
cmp
ds
repz
ror
pop
adc
out
sbb
loope
sbb
cld
xchg
insl
test
and
sar
fldt
mov
lahf
mov
cmpsb
mov
gs
nop
insb
and
scas
mov
and
adc
ret
jle
divl
cmp
andl
add
fwait
cmp
mov
test
leave
cmpsl
hlt
pop
stc
pop
ret
pop
ljmp
push
insb
cmpsl
mov
lahf
jns
stc
cmpsl
jne
adc
fsubrl
ljmp
lcall
jecxz
pop
lcall
rcrl
cmp
fildll
test
mov
mov
loop
js
adc
push
push
iret
fisttpl
add
stc
cltd
es
cmp
cs
add
sbb
adc
ss
sbb
fisubrl
daa
stc
sbb
or
pushf
cli
or
out
sub
xlat
and
aam
xor
jnp
fstpl
sbb
pop
data16
out
je
and
ret
add
sbb
outsl
lock
xchg
loopne
imul
addl
or
xchg
jo
inc
iret
scas
dec
jb
jb
mov
add
jnp
xchg
lcall
sub
nop
in
scas
popf
or
mov
cltd
shll
push
xchg
ja
insb
lahf
cmc
std
rcl
sti
repnz
sbb
add
mull
dec
xor
movsb
fwait
push
and
add
xor
and
push
adc
fcmovb
out
in
mov
enter
std
fiadds
incb
sbb
xor
and
xlat
aas
shll
mov
mov
pushf
mov
and
add
lods
sbb
call
sarb
inc
aam
cltd
or
outsl
xchg
outsl
in
je
sahf
ret
sbb
popa
lods
fsubp
mov
pop
test
xor
push
cmpsb
sbb
sbb
aas
out
gs
faddl
sub
pop
cmpl
shrb
push
xchg
push
lret
shl
mov
fwait
xor
fs
push
cmpsb
mov
adc
enter
hlt
sub
add
sub
sbbb
insb
xchg
pop
cwtl
and
mov
mov
push
pop
in
cmpb
mov
aas
and
push
imul
push
aam
mov
js
lret
negl
sbb
pop
inc
outsl
add
je
lret
mov
repz
movsl
incl
lahf
int3
rcrb
addb
pop
aas
daa
test
pop
dec
test
pop
mov
rolb
jecxz
inc
add
dec
jecxz
ss
xor
cmc
or
jecxz
loop
sahf
clc
xchg
mov
outsl
pop
sub
mov
add
jns
int
push
aad
fisttps
fisubs
xor
push
push
loope
sbb
jg
fmuls
lahf
test
faddl
pop
push
dec
data16
xorb
rol
nop
xlat
mov
daa
jno
inc
push
mov
fdivl
ljmp
lods
scas
push
cmpsl
add
or
in
mov
xchg
xchg
pop
or
enter
ret
cmp
rclb
aad
xchg
or
sub
cmp
enter
scas
push
sub
pop
aas
dec
lock
mov
ret
xor
repnz
fbstp
cmp
clc
rclb
pop
daa
adc
xor
cmp
pop
xchg
xchg
into
js
sbb
and
test
push
jb
and
mov
imul
addl
push
jmp
xor
adc
scas
mov
xor
dec
mov
xchg
jb
divb
sub
mov
jnp
jecxz
jl
mov
mov
cltd
jg
loopne
mov
lret
add
dec
rcrl
stos
cmp
outsl
scas
add
cmpsb
add
xchg
sbb
in
xor
mov
sbb
cmp
jg
cld
push
xchg
fnstsw
push
sub
push
cmpl
movsl
or
repz
pusha
imulb
sbb
pop
pusha
jle
jmp
fyl2xp1
push
loop
dec
mov
jae
test
ficomps
in
or
push
rcl
in
push
mov
test
jo
icebp
inc
inc
mov
sub
mov
pop
adc
loope
pop
das
jmp
push
fld
mov
add
les
jmp
repnz
pop
iret
dec
mov
add
lret
call
push
jg
mov
adc
cmc
fs
in
mov
notb
or
stc
mov
dec
int
pop
fwait
pop
mov
jns
adc
aas
test
in
or
repnz
jo
push
test
leave
popa
mov
mov
loop
and
add
and
gs
inc
jb
loopne
lds
xor
test
inc
mov
ja
sbb
jecxz
mov
icebp
rclb
jecxz
inc
shll
stos
mov
test
loop
xchg
outsl
xchg
xchg
sub
in
pop
in
jl
imul
and
fidivl
push
cwtl
adc
faddl
in
bound
aas
push
mov
leave
fstpt
je
sbbl
and
mov
mov
cmp
push
aad
aaa
in
fucomip
daa
sbb
fmuls
jge
aaa
dec
sub
rcrb
and
pop
jo
adc
dec
xlat
dec
mov
imul
insb
es
fadds
adc
or
sbb
lods
mov
push
jmp
sbb
pop
in
sbb
cwtl
xor
mov
jl
push
xor
mov
cmp
mov
xchg
leave
pop
adc
int3
and
mov
outsb
and
cli
xlat
jnp
iret
test
fdiv
in
fiadds
inc
gs
lahf
in
outsl
sbb
pop
stc
les
adc
add
sbbb
aad
xchg
fs
lea
repz
sbb
push
mov
add
ret
jl
cltd
lods
push
test
and
lods
loop
sub
leave
jmp
bound
jp
int3
addr16
mov
pop
outsb
mov
sbb
add
imul
pop
push
outsl
cmp
addr16
sahf
andb
insb
or
xchg
cld
dec
mov
imul
pop
dec
arpl
adc
in
mov
add
push
ljmp
inc
mov
sbb
rcr
int3
scas
or
adc
in
pop
ret
mov
std
cmp
stos
xchg
enter
push
inc
jge
push
push
int3
jbe
aaa
shrb
out
fimull
icebp
xor
push
push
cmpsl
dec
fimuls
addb
or
pusha
cmp
mov
js
ret
adc
jge
and
mov
push
aam
jne
push
in
jl
daa
aam
and
xchg
daa
in
movsl
mov
jmp
test
out
mov
mov
mov
cmpsl
stos
inc
rcl
gs
cmp
push
inc
mov
bound
push
fnstcw
vsubpd
and
pop
mov
push
stos
jl
sub
popf
inc
in
adc
cld
ret
cmp
and
fisttps
mov
lret
rol
pop
or
popf
and
sbb
clc
cltd
gs
or
in
in
out
jo
inc
push
out
add
add
fldl
cs
iret
adc
lret
push
out
sbb
push
cmp
clc
push
adc
add
iret
pushf
push
or
es
jp
lret
lods
push
mov
jns
scas
lret
icebp
xchg
inc
and
stos
lret
bswap
shr
or
movsb
gs
push
icebp
mov
mov
jae
sbbb
xchg
in
jnp
js
stos
adc
sub
mov
xor
mov
mov
or
enter
js
ret
pop
sub
daa
add
cld
push
fcmovne
inc
aas
mov
adc
xor
sahf
adc
cli
jnp
aam
inc
jnp
or
inc
gs
pop
sbb
push
out
sahf
xlat
rcrl
add
dec
fnstcw
mov
cmc
hlt
aas
cld
popf
xlat
lahf
pop
std
or
dec
jmp
popf
popf
pop
mov
cmp
cld
mov
iret
clc
ss
ljmp
roll
aaa
bnd
mov
jecxz
cmp
shl
mov
mov
cmp
cld
incb
out
ja
sti
mov
sbb
test
loopne
ret
pop
push
push
inc
xor
push
xchg
lcall
or
lods
dec
ja
add
mov
inc
cmp
add
daa
fnsave
addr16
xchg
push
adc
cmp
std
repz
rcrb
jae
xlat
jns
xchg
and
dec
call
pop
inc
push
sub
nop
xchg
cmc
dec
ss
mov
mov
out
imul
femms
repz
sub
test
rcrl
or
stos
movsb
jmp
sub
in
imul
xchg
dec
cwtl
mov
sbb
addr16
add
xor
in
sub
testl
ds
mov
mov
cmp
test
outsl
sub
xchg
imul
xchg
and
mov
sub
cmp
outsl
jg
sub
jbe
inc
notl
or
lds
xchg
popf
mov
jbe
or
fcomp
cmc
aas
je
ds
cltd
pop
movsb
pop
cs
mov
mov
pop
call
xchg
lock
lret
cmc
movsb
jnp
dec
xchg
cmp
mov
cmpsl
cmp
or
xchg
es
rep
adc
mov
adc
insl
aas
mov
nop
mov
xchg
push
pop
das
jl
jbe
pop
adc
mov
cmpsb
dec
sub
mov
loopne
mov
mov
inc
mov
or
arpl
sbb
data16
sbb
movsl
nop
test
arpl
lcall
sbb
icebp
push
fucom
cmp
dec
shl
pop
movsb
dec
add
xchg
cmc
ficoms
into
mov
andnps
jmp
mov
cmp
je
sub
lods
inc
rol
adc
add
and
enter
mov
outsl
popf
xor
and
outsl
xchg
test
push
mov
or
outsb
popf
pop
in
fdivs
jge
ljmp
clc
lcall
inc
loop
add
testb
js
in
ficompl
lods
fisubrs
call
jnp
cmp
xchg
jecxz
mov
inc
add
aad
scas
xchg
push
je
frstor
xchg
adc
andl
inc
fidivs
sbbb
push
lock
pusha
xchg
xor
test
mov
cmp
xlat
lods
insl
mov
dec
inc
lods
push
jle
mov
cmpsb
outsl
jns
js
frstor
sti
subps
notb
daa
test
mov
lods
lods
push
xorl
shr
lret
ret
pop
subl
mov
daa
add
ret
pinsrw
dec
add
lods
icebp
cs
push
sbb
push
addr16
jmp
sub
sub
push
sub
mov
dec
outsl
movsl
iret
and
enter
mov
dec
adc
ffree
lret
cmp
push
movsb
loop
movlps
push
xor
inc
xor
enter
mov
or
mov
jno
xor
int
add
pop
cmp
cltd
mov
shll
popf
outsb
add
imul
jno
cmp
dec
cmp
lcall
mov
sarb
out
xor
pushl
sbb
ficoms
adc
imul
sti
push
pushf
popa
mov
adc
sub
idiv
idivl
mov
loop
rorl
adc
cmp
mov
fsubl
lock
out
aas
add
stos
lods
cmpsb
movsl
jp
sbb
mov
sarl
sbb
loopne
pand
mov
dec
dec
js
fsubrs
fdivr
stos
dec
fstps
sbb
sbb
js
dec
out
rcrl
xchg
pop
xor
jns
scas
pop
or
add
mov
addr16
mov
add
adcb
nop
out
inc
lods
pusha
fldenv
out
scas
loope
or
xor
test
je
inc
add
ljmp
test
xor
mov
xchg
sub
pop
push
fs
testb
and
outsl
push
negb
in
push
shr
not
add
add
filds
xor
imul
sub
mov
pop
sahf
cmp
pusha
lock
xchg
sbb
loop
mov
mov
mov
push
cmp
imul
mov
dec
test
pop
fdivrs
xchg
push
add
add
ret
pop
and
sti
les
in
mov
shl
loop
faddl
dec
fidivrs
dec
dec
test
rcr
icebp
lods
inc
iret
shll
idiv
ljmp
int3
bswap
out
lods
or
mov
fmul
jns
pop
push
cmpsl
jne
scas
fwait
out
sbb
adc
mov
idivb
and
jbe
ret
dec
bound
pop
stc
popf
sub
xor
pop
jae
jb
xchg
pop
iret
inc
mov
fcmove
sahf
pop
shrb
cmp
lcall
insb
icebp
cmp
hlt
inc
fadds
xor
or
ret
es
daa
pushf
pop
pusha
inc
push
and
mov
sub
cmpsb
into
cmp
dec
mov
lock
icebp
sub
mov
shlb
fwait
cld
iret
sbb
inc
dec
scas
mov
popf
xchg
dec
mov
shlb
push
shrb
or
xor
adc
movsl
jns
outsb
push
dec
cltd
jns
inc
mov
ljmp
and
leave
test
dec
pop
data16
movsl
int3
jg
inc
clc
pop
add
data16
pop
mov
push
mov
xchg
outsb
xor
pop
and
mov
jb
adc
out
mov
test
or
test
sbb
icebp
or
push
or
mov
leave
inc
cmp
cmc
in
fucomp
bound
test
mov
movsb
jp
mov
bound
xor
mov
sarb
or
int3
cmp
jno
cmpl
pop
xchg
or
out
in
fwait
dec
push
je
mov
sub
imul
gs
test
push
sub
cmp
xchg
enter
jns
mov
xor
pop
rclb
or
js
cmp
leave
or
mov
mov
leave
mov
push
pop
insl
push
jle
pushf
inc
fbld
ljmp
idivl
cli
inc
or
orb
mov
nop
jnp
sub
sbb
lahf
jns
imul
in
stc
cmp
fsubrl
sarl
cmpsl
mov
mov
push
pop
pop
scas
pop
shrl
inc
jbe
pushf
lds
jmp
cmp
test
sub
xchg
sahf
mov
push
les
jecxz
dec
dec
inc
popa
add
push
jge
cmp
dec
scas
fwait
mov
lods
xchg
ret
clc
cmp
testb
cmp
ljmp
sbb
adc
sub
pop
pop
fcompl
or
popa
sbb
push
scas
mov
lds
or
sahf
mov
xchg
aaa
pop
aad
cmp
rclb
inc
inc
imul
loope
shll
test
add
adc
jp
in
jnp
cmpl
aas
je
and
in
dec
push
sti
fmuls
sbb
std
push
jmp
jle
cmpsb
mov
dec
and
ljmp
inc
aad
jo
cli
xchg
dec
test
dec
jns
mov
pushw
arpl
adc
insb
shll
cmc
xchg
inc
fs
xlat
cs
sub
test
inc
iret
ror
outsb
or
shll
shl
lret
mov
out
cmc
enter
push
adc
jo
out
push
mov
jl
in
cli
and
cs
mov
jecxz
fimuls
xor
ret
cli
popf
iret
add
inc
stc
sub
lret
fbstp
xchg
mov
cmpl
mov
mov
and
sub
inc
stos
je
and
mov
ret
pop
in
ljmp
or
xchg
imul
xlat
xorl
out
push
lahf
iret
add
xor
jmp
sbb
loop
sbb
popa
mov
mov
cmpsb
sbb
stos
inc
jne
mov
jnp
sub
and
aas
cwtl
das
pop
dec
test
xchg
rorb
push
in
mov
in
pop
jle
lods
adc
xchg
bnd
mov
rcrl
sti
lods
mov
xchg
cmc
nop
dec
xor
loopne
lods
int3
sub
out
js
ja
leave
adc
scas
lea
out
xor
jno
mov
mov
addl
lods
das
push
cmpsl
inc
js
sub
repz
cli
mulb
pusha
mov
lock
pop
or
adc
ja
add
lahf
lcallw
int
push
pushf
sub
mov
lds
sub
xor
xchg
scas
dec
loope
jne
insl
pop
mov
insl
pop
dec
daa
das
sbb
jl
movsb
mov
adc
cs
sbb
pusha
outsb
test
mov
xor
jbe
arpl
mov
clc
scas
aaa
mov
pop
push
mov
xchg
imul
sub
jle
pop
push
mov
pop
mov
add
aas
ja
lcall
gs
jmp
loopne
add
pop
jo
sbb
les
rolb
xor
and
sub
shrl
pop
repnz
push
push
pop
mov
mov
pop
dec
jae
fcomps
testb
lea
mov
in
lods
dec
in
fwait
push
cmpsb
aad
sbb
sbb
mov
mov
pushw
or
pusha
rcrl
inc
inc
adc
popa
sub
xor
stc
es
xchg
jg
push
push
cmpsb
aaa
push
or
fnsave
shrl
xor
imul
popf
shrb
dec
shl
pop
jmp
mov
cmc
mov
out
xchg
xchg
or
inc
dec
enter
mov
push
movsb
mov
mov
xor
pop
insl
inc
pop
adc
fldl
sub
pop
or
xchg
push
xor
mov
cmpl
xor
fnsave
push
inc
inc
mulb
xor
cmp
adc
es
push
shlb
aad
out
jbe
lahf
push
fadds
push
fisttps
imul
mov
ror
push
mov
jg
sbb
aaa
pop
sub
xchg
xchg
in
xorb
rcl
or
test
sub
push
mov
xorb
dec
fistps
ret
sbb
iret
and
dec
jle
pop
cmp
mov
std
sbb
inc
loop
mov
aad
test
mov
incl
frstor
js
std
loope
hlt
loop
nop
xchg
mov
ror
mov
mov
add
cmp
sub
sahf
out
inc
iret
add
dec
mov
xlat
sti
shl
sbb
push
dec
xchg
adc
xchg
movups
mov
and
das
in
mov
mov
mov
stos
mov
mov
rcrb
in
mov
inc
push
push
mov
sbb
std
filds
add
pop
mulb
adc
inc
lret
mov
insl
icebp
daa
das
aas
int3
mov
jbe
mov
fistl
cmpsl
dec
or
sub
dec
scas
sbb
push
icebp
jge
add
inc
push
sub
adc
or
inc
int3
test
mov
popa
sub
dec
arpl
pop
mov
std
ss
and
pop
aad
icebp
icebp
pop
mov
xor
pop
add
das
xchg
xor
jle
and
call
xor
cmp
xor
iret
push
pushl
adc
mov
in
add
xlat
pop
jo
dec
jbe
ss
lods
jecxz
and
inc
pop
jle
addl
popa
jno
sub
mov
daa
cmpsb
es
ja
je
ja
popf
bound
dec
push
popf
pop
push
stos
stos
mov
jae
popf
cs
mov
push
xchg
sahf
insb
out
lds
push
shll
addr16
xchg
shll
imulb
xchg
aam
roll
adc
and
ret
push
adc
mov
mov
jb
mov
sub
pop
jnp
je,pt
and
sbb
jo
inc
cmp
int
fidivrl
mov
das
leave
or
mov
jmp
push
mov
sbb
cs
mov
adc
aas
sahf
cli
aad
cmpsb
sub
aaa
push
pop
jge
dec
fdivl
add
or
out
mov
fsub
fimull
pop
xchg
or
cmp
pop
push
adc
push
repnz
mov
sbb
push
test
les
xor
je
orb
ret
sbb
test
shrl
lret
rcrb
cmpsl
mov
push
mov
ja
call
lods
mov
incl
xchg
aam
in
cmp
mov
xor
xor
das
mov
xor
shrl
pushl
cmp
out
fsubl
scas
adc
pop
outsl
lods
loop
scas
ja
inc
and
sbb
mov
mov
in
pop
dec
setp
int
mov
loopne
addr16
push
adc
mov
mov
lret
mov
mov
jle
pusha
mov
sahf
mov
pop
add
pushf
jg,pn
mov
decb
sbb
add
pop
dec
xor
and
inc
and
movsb
adc
imul
adc
push
mov
push
sub
sbb
jo
push
push
or
arpl
sbb
inc
popa
xchg
sub
jns
pusha
fistpl
arpl
outsb
cmp
push
dec
outsb
xor
xor
mov
or
test
push
dec
ja
pop
pop
and
mov
stos
shll
xor
fcompl
lret
inc
ret
pop
pop
push
aam
xchg
mov
push
xlat
jbe
or
push
testl
in
aad
in
arpl
je
mov
mov
sbb
lods
stc
mov
movsb
shl
jb
das
lcall
stos
push
inc
jnp
inc
int3
pop
aas
push
dec
out
imul
loop
adc
jg
xchg
popf
sbb
ret
add
fadd
mov
lret
int3
out
push
mov
mov
les
cmpsb
aad
push
mov
repnz
stos
mov
and
out
into
nop
cmp
mov
aad
les
int3
mov
xorl
shll
xchg
xlat
xchg
cmp
add
lcall
xchg
fsubr
xor
lock
icebp
mov
mov
jl
jo
mov
shrl
ss
sub
sbb
scas
fucomp
iret
pop
sub
push
add
add
inc
mov
in
divl
aam
xor
cmp
xor
imul
dec
cmp
cmpsb
pop
inc
push
mov
pop
mov
and
rcrl
adc
ss
dec
and
jg
mov
jge
mov
icebp
xchg
ds
popa
test
xchg
fwait
lahf
dec
sub
test
lret
imul
cltd
xchg
loop
pop
imulb
xor
stc
hlt
pop
cltd
xchg
pushf
mov
mov
xchg
inc
xor
or
and
push
jl
jae
xor
sub
fdivrs
adc
or
rcl
negl
sar
out
mov
mov
add
sbb
dec
xor
clc
in
xchg
jl
out
mov
icebp
test
notl
mov
cmc
cs
and
sbbl
push
ror
fiadds
pop
xor
add
jmp
leave
mov
xchg
inc
test
popf
lods
jae
sbb
jnp
inc
fisubrs
fdivs
out
out
xchg
sbb
stos
and
pushf
and
pop
inc
pop
push
es
decl
sub
sahf
subl
dec
lds
or
imul
xchg
std
xchg
nop
cmpsl
inc
cmpsb
mov
adc
push
lret
nop
sub
jo
movsb
add
xchg
push
sarl
dec
xchg
mov
stos
push
leave
in
daa
in
mov
ret
dec
xor
mov
inc
adc
sbb
pop
test
repz
int3
mov
cmp
call
popf
stos
in
mov
scas
lret
shlb
mov
popf
pop
shr
pusha
pop
cwtl
jne
or
jl
mov
enter
stos
addr16
mov
incl
push
adc
insb
mov
sub
ljmp
push
bound
out
dec
iret
ret
js
or
push
fstl
mov
or
enter
push
daa
push
cmp
cmp
pop
aas
sti
into
xchg
push
mov
mov
xchg
bnd
jecxz
jbe
cwtl
lcall
jecxz
js
das
push
ficoml
aas
mov
xchg
lods
cmp
dec
xor
clc
test
sub
or
and
lock
inc
jnp
mov
cmp
loop
jp
popf
push
cltd
test
dec
aad
adc
cmp
aas
rolb
inc
jmp
sbb
or
or
sbb
imul
push
enter
cmp
xor
test
or
in
das
add
lcall
pop
adc
dec
leave
movsl
int
xor
lahf
lret
jmp
scas
insl
fs
icebp
insl
jno
pop
push
sub
mulb
rol
xor
pop
adc
into
bound
adc
scas
fsubl
out
test
or
jp
mov
lea
das
jo
push
inc
mov
adc
sarl
add
enter
push
sbb
in
aam
pop
pop
xchg
mov
sub
cltd
mov
adc
sub
test
add
sti
pop
cmc
pop
repnz
inc
repnz
notb
pop
jmp
cli
mov
jb
mov
and
movb
xchg
xchg
push
or
int3
cltd
and
ret
in
inc
xchg
fldcw
shll
arpl
cld
ret
or
mov
push
mov
xor
std
lock
push
pop
mov
push
fs
xchg
mov
push
ret
mov
in
cmp
push
in
imul
sbb
sbbl
push
scas
push
lods
xchg
repnz
movsb
ds
das
jecxz
insb
jle
imul
fldt
popa
cmp
mov
popf
push
pop
xchg
adc
jl
iret
stos
xor
mov
mov
add
jl
adc
filds
adc
push
das
std
push
ficomps
sub
pop
mov
decb
or
dec
outsb
int3
incl
stos
lds
je
xor
mov
mov
cltd
sti
dec
jo
and
into
in
es
out
xchg
pop
loopne
xchg
jl
dec
jbe
in
jnp
sub
dec
outsl
jge
xor
adc
pop
xor
movsl
call
popf
inc
sbb
sbb
repz
mov
pop
add
scas
xchg
jp
aad
int3
jecxz
mov
test
mov
sbb
stc
loop
fcompl
cmp
or
cltd
dec
ja
decl
dec
xchg
sbb
xor
jno
pushl
inc
pop
inc
inc
mov
dec
pop
mov
cwtl
aas
sub
orb
push
cmp
les
adc
cmpsb
xor
call
dec
repz
and
jmp
shlb
mov
jae
jno
inc
test
adc
js
inc
ret
mov
xor
or
xor
inc
repz
sub
fs
dec
mov
pop
xlat
inc
notl
leave
adc
xchg
in
or
add
xor
hlt
or
out
mov
cs
mov
cmp
sbb
pop
aam
push
bound
addr16
sarb
push
or
xchg
insl
xor
mov
aam
pop
imul
clc
cwtl
sbb
aaa
xor
jne
out
subl
sub
mov
sbb
pop
jl
push
push
movsb
rolb
cmp
lahf
push
cmpsb
enter
imul
outsl
rolb
push
cmp
sbb
cs
add
fisubl
inc
mov
mov
mov
daa
popa
xlat
test
sub
mov
inc
lock
cmpl
fs
lahf
sub
shrb
imul
pusha
inc
rcrl
adc
xchg
outsb
loop
movb
lds
imulb
icebp
insb
mov
jp
pop
enter
sbb
add
int3
test
fmull
ja
std
shrb
insl
imulb
sub
xchg
xchg
jns
inc
in
cltd
jmp
lahf
daa
add
pop
into
jns
subb
xorb
and
cmp
pop
cmp
dec
add
add
sbb
sbb
test
and
mov
pop
pop
int3
jbe
or
sub
addb
cli
test
es
pop
mov
arpl
divb
lock
cmp
pushf
rclb
xor
dec
and
fistpl
sub
shrb
cmp
lock
flds
jle
mov
add
enter
leave
and
and
jg
push
repz
adc
cwtl
mov
cwtl
mov
adc
xchg
inc
push
int
and
sub
adc
outsl
sbb
pop
incb
imul
in
mov
outsb
ljmp
lcall
cmp
adc
icebp
gs
mul
sarb
nop
inc
loope
stos
dec
xor
rorl
jbe
xor
lods
int
mov
jb
cmp
adc
hlt
dec
adc
inc
jmp
loope
cli
ljmp
dec
dec
inc
test
aas
test
es
rsm
mul
lahf
fwait
test
jb
scas
stc
fsts
cwtl
xchg
mov
sbb
out
into
movd
fs
pusha
ljmp
sub
or
cmpsw
subb
jl
cmpsl
jge
adc
xor
dec
push
mov
in
sahf
test
scas
lahf
add
or
fldt
mov
dec
cld
push
data16
stos
add
xor
sbb
insl
js
je
lds
jecxz
es
lret
sub
repnz
cmp
mov
lcall
outsb
jecxz
add
xchg
fdiv
push
enter
and
mov
push
mov
mov
mov
insl
and
lods
add
adc
mov
and
push
fisubrl
sub
pushf
es
notb
loop
inc
dec
push
jge
cmp
ret
mov
inc
xor
aad
cli
sbb
xor
bound
mov
mov
xor
inc
mov
xor
das
cmp
ss
inc
sub
and
mov
repnz
push
sub
repz
push
fdivl
xchg
dec
mov
or
test
outsl
sbb
or
and
or
inc
cmp
adc
div
mov
fildl
sbb
aad
pop
fcoml
je
cmpsl
lea
pop
aas
xchg
sbb
fidivrl
mov
flds
sub
or
mov
pop
outsl
push
xchg
add
mov
add
std
test
test
adc
frstor
sti
fidivrs
scas
cpuid
push
and
sbb
push
insl
xor
mov
pop
inc
sahf
loope
cmp
mov
fcompl
icebp
add
arpl
sti
cld
xchg
mov
mov
mov
loope
push
bound
add
mov
test
icebp
cmp
ret
cmp
and
xor
push
repnz
jbe
mov
xchg
daa
xchg
add
das
or
icebp
jmp
aaa
pop
stc
fcomp
jg
int3
mov
jb
sahf
sub
repnz
or
pop
push
inc
jecxz
loope
jno
movsb
mov
push
and
mov
cmpl
sahf
shll
test
xor
push
mov
xchg
out
and
jb
add
cltd
sub
and
fiadds
inc
imul
xchg
xor
pop
clc
xchg
jp
idivl
and
mov
insl
add
dec
jl
and
out
fmulp
aas
neg
mulb
out
xor
imul
cmp
sub
repz
sub
into
push
in
movsb
test
rcrb
and
inc
lock
jle
cmpsb
push
mov
pop
ret
jb
push
mov
inc
mov
mov
leave
stos
dec
stos
fidivrl
sub
orl
lcall
es
fsts
sbb
and
call
rcll
fiaddl
pop
jnp
push
or
mov
iret
jecxz
sbb
rorl
mov
std
out
pop
hlt
inc
pop
sbb
push
rcll
pop
add
std
dec
sti
rclb
mov
mov
mov
sbb
xor
adc
adc
add
daa
or
mov
in
ljmp
xor
push
inc
pop
cmp
cmp
mov
je
fidivl
cmc
mov
mov
leave
sbb
xchg
negb
mov
lds
and
pop
inc
adc
dec
popf
roll
sub
push
ret
push
aaa
repz
js
mov
adc
xlat
mov
xor
dec
mov
mov
pop
cs
pop
cmpsl
out
gs
pop
aaa
jnp
mov
xchg
inc
in
xlat
adc
out
in
jmp
lods
push
push
cmp
dec
out
push
sti
rclb
inc
lds
pop
andl
and
sbb
xchg
add
rolb
add
mov
add
addr16
fmull
inc
sub
repnz
js
pop
cmpb
xor
jge
jb
xorl
roll
loopne
xchg
push
push
xchg
stos
add
out
test
icebp
mov
push
fabs
and
jb
push
xchg
ljmp
cmp
mov
xor
call
dec
fwait
subb
pop
or
jns
or
loopne
mov
push
aam
ret
lock
pushf
add
mov
cli
aaa
dec
movsb
jmp
lods
je
adc
mov
stos
cmp
in
stos
mov
fwait
jl
mov
neg
fwait
xchg
xchg
sub
mov
out
shr
icebp
push
mov
ljmp
fdivs
sub
int
insb
inc
mov
into
or
mov
out
adc
xchg
add
sub
sbb
dec
lock
outsb
cld
cmc
xchg
cltd
rorl
xor
es
xchg
adc
sub
and
sub
hlt
push
and
xchg
into
mov
sbb
ljmp
jns
std
cld
dec
in
and
rcrb
xor
out
divb
push
jmp
mov
nop
jb
push
out
sbb
pop
mov
jae
push
shrl
ljmp
push
push
adc
adc
movsl
pop
cmp
xchg
loope
add
imul
pusha
in
xlat
cld
arpl
cli
fstps
mov
movsb
hlt
pusha
mov
adc
bound
pop
subb
mov
pop
inc
xchg
and
xchg
sbb
cli
testb
rcrl
icebp
jp
and
loopne
jno
js
pop
push
jo
and
int3
movsl
insl
xor
add
pop
lds
push
push
dec
xor
lock
es
ljmp
push
mov
out
inc
xchg
neg
sbb
pop
jns
cmp
js
movsl
dec
inc
and
pop
daa
xchg
jns
jne
pop
jle
lcall
out
mul
test
cli
sbb
shll
sbb
or
mov
shrl
add
xchg
adc
jle
rorl
adc
push
loope
jle
sarl
dec
cmp
popa
cs
sub
fistpll
popa
dec
mov
pop
and
sbb
dec
icebp
mov
mov
int
cmp
cmp
push
sbb
ret
mov
inc
or
add
and
cmpsb
pop
in
adc
insb
sbb
mov
or
leave
das
xor
aaa
mov
push
push
mov
popa
mov
loop
test
add
cmp
mov
decl
stc
sbb
pop
dec
push
dec
test
inc
int
aad
jns
xor
or
ret
iret
lret
adc
sahf
notl
mov
adc
scas
xchg
sbb
test
jecxz
call
fbld
in
sub
mov
or
jge
jnp
sbb
push
ret
insl
sub
or
cmp
ret
xor
mov
add
pop
ret
dec
mov
push
jae
xor
cli
insb
push
xchg
cwtl
fistl
pop
inc
icebp
xor
xchg
adc
div
into
adc
xor
dec
push
ljmp
pop
pusha
stos
push
inc
int3
jbe
mov
in
pop
pushf
movsb
mov
in
ret
xchg
cmp
dec
pushf
lcall
xor
push
push
hlt
jg
pop
orb
pop
rcrb
mov
sbb
cmp
adc
call
or
lock
mulb
mov
push
ljmp
lahf
mov
push
and
jno
mov
sbb
shrl
out
shl
mov
cltd
repnz
sar
jno
bound
cwtl
sarl
jno
add
aas
mov
out
dec
ss
push
push
popa
outsl
mov
xchg
push
cmp
mov
fsub
ret
inc
loopw
fbstp
cltd
xchg
xor
jge
pop
movsb
stos
mov
nop
sub
xchg
ss
imul
lret
idivb
push
icebp
mov
fsubs
outsb
adc
cwtl
push
jns
loope
dec
test
data16
test
lods
xor
aaa
call
pop
push
add
dec
shll
xchg
inc
dec
icebp
popf
jno
xchg
inc
jle
xor
cmovns
nop
fnstenv
cmc
mov
mov
mulb
dec
sub
aad
inc
mov
ret
out
mov
adc
sbb
sbbb
or
hlt
call
into
aas
xor
xor
add
fstpt
es
push
sarb
fsubs
lods
popa
int3
lods
rcl
stc
scas
sbb
sbb
xor
outsb
mov
cmp
adc
rorl
and
hlt
push
pop
in
push
ss
cli
mov
ret
xchg
jle
test
or
jmp
icebp
mov
mov
subb
rorl
xchg
mov
mov
movb
or
jns
popf
pop
out
fdiv
lds
push
movsb
or
adc
faddl
sahf
push
xchg
icebp
aam
das
xor
int3
sub
jnp
add
xlat
dec
loop
xor
sub
stc
call
push
arpl
testb
sub
adc
and
fistpll
mov
mov
out
xchg
fildll
out
add
push
mov
mov
xor
jo
cmp
cmp
push
insb
adc
cmpsb
and
inc
push
je
mov
mov
mov
mov
xchg
or
insl
sbb
stos
nop
xor
adc
lcall
or
add
push
mov
mov
lods
xchg
lea
sarb
fcmovne
push
mov
lods
or
xor
inc
dec
lret
mov
push
ficompl
xchg
lock
lods
xchg
xchg
pop
mov
inc
xchg
inc
jmp
sbb
xlat
sbb
loope
sti
dec
daa
inc
aam
cmp
movsb
cwtl
inc
sub
or
push
dec
bound
mov
loopne
iret
lods
insb
scas
dec
iret
adc
jl
mov
pop
repz
movsb
pop
xchg
pop
xchg
mov
adc
sbb
jge
push
dec
jbe
popa
std
repz
shrb
enter
xchg
loope
mov
pushf
xor
dec
lods
adc
knotb
xor
inc
ja
xchg
and
mov
movsl
xchg
xchg
sub
mov
xchg
pop
sbb
aaa
subl
into
lods
les
arpl
or
loop
push
pop
ret
in
fnstenv
inc
jecxz
icebp
sub
jo
xchg
xlat
add
sbb
mov
jns
push
cmpsl
push
jo
out
jg
adc
push
ljmp
xchg
jbe
subb
mov
and
mov
cmp
test
push
lds
nop
out
sbb
push
loop
inc
push
into
sub
push
cmc
sarl
pop
aam
lcall
daa
mov
movl
sbb
mov
mov
sub
shl
dec
int
popf
repz
push
xchg
in
mov
pushf
shll
push
inc
loopne
sub
pop
mov
xorl
push
jmp
mov
cld
adc
or
jmp
push
sub
fstpl
or
cmpsl
pop
sub
ret
adc
push
fildl
adc
in
jbe
jno
outsl
jg
push
rolb
repz
add
push
adc
out
stos
jo
stos
daa
leave
xchg
jl
testl
xor
pop
sub
xchg
pusha
jmp
sbb
psubd
nop
mov
fwait
cmc
jecxz
xlat
mov
out
mov
jbe
sub
jae
lret
cli
data16
lods
sbb
lods
ljmp
mov
mov
mov
test
int
push
sbb
inc
xor
mov
call
stos
cld
xor
aas
mov
scas
mov
adc
not
push
lahf
in
mov
flds
push
and
shr
cmpsl
or
test
ljmp
je,pt
fs
pop
shll
dec
add
sar
inc
xchg
or
bound
ljmp
dec
pop
sub
push
pop
pop
dec
adc
inc
pop
repnz
repz
xchg
gs
and
mov
sahf
pop
xor
mov
flds
cs
mov
test
sahf
rsm
inc
add
shl
icebp
xchg
lods
fists
adc
pop
jp
fstp
fdivrs
xor
add
adc
inc
push
rcll
push
addl
inc
icebp
clc
jl
adc
jmp
adc
sbb
jne
adc
mov
or
adc
xor
mov
jae
mov
ljmp
mul
sahf
sti
rorl
and
loopne
int
scas
in
ja
xor
pop
nop
push
or
lock
clc
inc
jl
int3
test
fidivrs
mov
cwtl
adcl
dec
ljmp
xchg
paddw
ficoml
mov
or
jmp
int
mov
and
shl
test
xchg
push
popf
lods
icebp
jno
dec
inc
mov
inc
ja
hlt
sbb
fidivrs
das
movb
dec
pop
ljmp
cvtps2pd
addr16
pop
js
gs
cmp
mov
or
ds
jmp
pop
loopne
insb
das
push
mov
xchg
adc
sub
outsl
sub
out
and
xchg
lds
mov
sti
mov
repnz
cld
out
hlt
clc
lret
or
inc
outsb
out
push
jne
jl
and
push
test
fisubrs
fwait
outsl
nop
push
sbb
out
jmp
daa
mov
and
xor
mov
test
in
xchg
imul
imul
imulb
jmp
sub
mov
movsl
ret
sub
shlb
sbb
loop
and
incl
icebp
push
cmp
inc
adc
push
data16
inc
rorl
add
pushl
loop
jb
push
xor
pop
fbstp
jb
jmp
pop
popa
dec
fs
call
xchg
stos
add
cld
pop
divl
jnp
mov
mov
test
pop
stc
pop
and
insl
cmp
sub
pop
dec
nop
clc
bound
fcmovnbe
push
das
mov
jno
jne
xchg
lock
inc
or
xchg
in
xor
stc
out
je
jle
cmp
test
ret
add
sub
and
rcrl
jmp
xchg
xchg
ja
mov
dec
arpl
pop
jg
sub
pop
inc
pop
test
movsb
popa
and
in
push
daa
inc
mov
dec
push
sbb
mov
rcrb
faddl
adc
jnp
popf
jb
imul
jb
ss
mov
scas
or
inc
mov
sti
xchg
push
or
loope
xchg
jo
push
dec
pop
mov
in
sbb
fdivl
shll
push
lahf
popf
dec
cmp
push
lret
arpl
stos
push
js
in
popf
jb
dec
pop
scas
cmc
out
lods
test
mov
in
or
and
inc
inc
das
or
and
jmp
int3
ljmp
sbb
mov
dec
ja
jo
xchg
notl
pop
push
std
push
outsl
adc
pop
mov
ljmp
ja
aaa
daa
jo
outsb
cmpsl
dec
push
mov
pushl
into
dec
mov
mov
or
cmpl
ficoml
nop
jbe
pusha
int3
dec
stos
outsl
cltd
out
push
into
std
and
add
sub
sub
int
inc
inc
mov
call
xchg
jl
sti
sbb
or
xor
iret
dec
push
ljmp
pop
mov
xor
inc
push
incl
stc
sti
loopne
cltd
cwtl
xchg
inc
es
xchg
stos
jp
popf
dec
lret
aam
sub
sbb
cmp
or
ljmp
out
loope
push
mov
in
sub
jnp
add
jg
arpl
insb
loop
jmp
cmp
add
test
test
and
jle
adc
je
cld
sahf
aas
outsb
add
int3
xor
test
inc
test
outsb
pop
pop
mov
and
into
dec
sub
int3
push
xor
xchg
movsb
or
fdivs
decl
pushf
iret
rcr
ret
sub
and
mov
xor
test
lods
loopne
in
or
aaa
push
in
adc
mov
or
mov
or
or
sub
pusha
sub
and
shl
xchg
mov
xchg
add
insb
mov
pop
scas
clc
lds
test
insb
mov
adc
je
add
es
sbb
jne
shl
lahf
and
push
test
icebp
fldpi
and
mov
mov
jmp
rol
jae
adc
mov
push
addr16
loop
sahf
sbb
sbb
loop
fsubr
gs
test
push
jmp
adc
lcall
adc
inc
cmp
cs
sahf
fadd
inc
xchg
outsb
or
cs
cmp
inc
pop
mov
in
sti
jecxz
popa
cwtl
addb
stos
int3
jne
adc
lock
push
push
mov
cmp
inc
out
xlat
inc
mov
mov
adc
dec
sti
mov
lcall
dec
dec
sub
and
mov
fisttps
jb
pusha
pop
or
push
cltd
pop
inc
inc
loop
xchg
mov
mov
rolb
xor
and
popf
add
mov
jo
mov
mov
lods
mov
dec
stc
enter
xchg
clc
mov
or
pop
outsl
inc
mov
fstl
aas
dec
insl
mov
pop
pop
inc
push
or
lea
mov
and
mov
shrl
and
inc
add
stos
clc
ja
mov
mov
jl
rcrl
cmc
shlb
and
movsl
divl
and
dec
xor
stos
sbb
xorb
lods
scas
mov
nop
push
vmovaps
lcall
rcll
sahf
aam
fcomps
ret
repnz
lea
in
adc
dec
pop
lods
movsb
inc
push
mov
or
imul
and
aaa
push
pop
js
pop
cs
adc
add
test
jbe
sub
call
dec
shll
push
push
imul
pop
xchg
dec
mov
repnz
cltd
mov
std
and
jbe
xor
inc
push
mov
mov
dec
fistps
outsb
or
lods
jmp
addl
add
xor
pop
push
and
test
mov
pop
pusha
or
pop
mov
sbb
dec
xor
push
enter
mov
pop
nop
sub
sbb
imul
mov
sub
sbb
cmpsl
jo
dec
jge
clc
jecxz
mov
xchg
pop
mov
cmp
jb
push
testb
or
sub
mov
mov
fs
sub
adc
sub
push
inc
jno
mov
push
pop
jge
mov
cmc
xchg
push
cmp
test
hlt
pop
imul
mov
xlat
scas
mov
fwait
add
push
pop
icebp
xor
lret
push
and
arpl
and
xchg
dec
jmp
pusha
andl
and
jl
mov
aam
add
and
jp
add
cmpsb
shlb
fsubs
gs
fldt
pop
roll
sub
sub
adcl
or
pop
faddl
push
and
std
sahf
mov
push
lahf
and
mov
pop
out
lds
cwtl
xor
and
pop
mov
rcl
cmpsl
int3
sahf
jo
test
and
aam
jno
pop
iret
push
sbb
repnz
xchg
add
inc
add
adc
and
imul
jg
into
cmpsl
push
cmpl
mov
je
das
mov
jp
jae
xor
or
and
push
ret
adc
imul
pop
lods
or
mov
pop
mov
sarb
push
lds
push
xchg
mov
cmp
js
jl
das
movl
sub
rolb
xor
aaa
inc
jecxz
mov
inc
idiv
pop
in
cmp
push
mov
pop
xor
pop
mov
cmpl
jbe
or
or
push
inc
jmp
ret
cmovbe
js
stos
or
loop
add
rcr
inc
jbe
xchg
dec
mov
pop
rorb
jp
fcomp
dec
adc
inc
cld
dec
bound
into
incb
fildl
xor
jecxz
add
jmp
dec
sbb
lds
mov
cs
jl
or
cltd
push
rolb
cmpsl
dec
les
loopne
dec
daa
lahf
mov
cmp
jbe
jle
push
xchg
sbb
jb
adcb
dec
mov
ljmp
xchg
bound
loope
flds
cmp
and
loope
into
ret
jnp
cwtl
xchg
ja
dec
push
inc
test
outsb
xor
xor
cld
or
jg
iret
into
add
sti
outsb
xchg
mov
test
sahf
cmp
mov
push
fstpt
add
lret
cmpsl
dec
sbb
mov
test
addl
dec
dec
and
pop
pop
or
mov
out
outsl
jge
pop
sub
lret
push
cli
movsb
jne
minps
sub
cmp
out
ds
push
inc
jge
fwait
pushf
sbb
cmp
jle
pop
cmp
jnp
inc
mov
clc
aam
add
add
or
dec
pop
dec
stc
sbb
test
scas
xor
ret
pop
loope
cmp
lahf
mov
jns
lret
jecxz
test
inc
mov
icebp
movsb
xor
faddp
jno
cs
sub
and
aas
sub
icebp
pushf
sub
fiadds
subb
push
inc
int
or
lcall
fwait
sub
je
sub
xchg
into
lds
aas
stos
sub
into
fwait
rorl
inc
xchg
fnstsw
sbb
jnp
push
cli
inc
mov
loopne
into
in
cltd
push
inc
push
sub
or
loopne
andl
jnp
mov
and
int3
xchg
cmp
pop
or
sub
xor
or
mov
insl
mov
cmc
xchg
cmp
cmp
jo
dec
push
sub
sti
sbb
inc
push
mov
data16
lods
test
xor
loope
inc
cmc
into
cmp
push
pop
lods
popf
aam
cli
aad
add
test
or
shrb
pop
addr16
jno
mov
adc
sarl
data16
mov
dec
call
push
ja
cmp
sbb
lahf
fcompl
stos
in
jmp
jnp
clc
fs
ss
enterw
lret
cmc
pop
or
js
iret
jge
cld
xchg
repnz
pop
xor
arpl
inc
dec
push
mov
or
pop
and
mov
mov
inc
subb
xor
incl
mov
les
aam
rcl
rolb
xchg
xor
push
dec
outsl
testb
testb
inc
mov
sub
call
jl
cmp
cltd
push
xchg
push
mov
mov
add
xchg
pop
inc
push
fsubrl
mov
test
cmovno
stos
xorb
out
scas
and
mov
push
aam
pop
sbb
adc
pop
testl
add
fiadds
or
out
shlb
movsl
xor
fsub
ret
xchg
push
mov
enter
fidivrl
cmpsb
int
in
jb
les
fsubl
gs
pop
movsb
or
aad
adc
ss
sahf
xchg
out
in
mov
fbstp
outsl
aaa
jns
xchg
jo
push
scas
adc
stos
pop
pusha
sub
and
add
inc
xchg
adc
mov
adc
roll
call
mov
mov
popf
xchg
adc
shll
mov
xchg
mov
lret
rcl
sbb
fwait
adc
sub
cli
xor
or
ret
hlt
ljmp
dec
jo
xlat
cs
mov
icebp
jb
fcoms
xor
dec
aam
mul
fadds
clc
data16
outsl
jno
arpl
push
and
cmp
push
outsb
mov
push
negb
jo
add
xor
sub
enter
ja
xchg
add
sbb
testl
xor
out
das
scas
push
add
pusha
ds
int3
inc
out
in
mov
aam
cmp
or
daa
sbb
xor
dec
add
pop
mov
aad
mov
pushf
cmpsb
fsincos
cmp
lods
shlb
and
mov
dec
inc
mov
rolb
ljmp
inc
mov
jge
cld
in
data16
jmp
test
ljmp
out
cmp
push
sarb
sahf
mov
icebp
cmpsb
push
fsts
adc
loop
cmp
mov
push
xchg
aad
jb
mov
aad
mov
cmp
mov
xor
xor
icebp
cmp
jo
pop
je
int
lret
fsubrp
fidivrl
ds
sub
imul
lea
add
test
outsl
fisubs
ret
in
push
xchg
pop
mov
scas
jb
push
mov
pop
and
das
jbe
data16
dec
shlb
push
mov
leave
shr
xchg
cmp
aaa
jae
jmp
dec
jl
arpl
adc
xorl
jno
sbb
xchg
orb
les
mov
shl
adcb
xchg
dec
xchg
stos
sbb
lret
fdivl
sub
inc
movb
loope
out
in
cmp
mov
cmc
ja
mov
push
insb
mov
bound
xor
rclb
shlb
mov
mov
xor
xchg
push
jo
or
ljmp
pop
pusha
inc
cmc
mov
push
xchg
push
jno
enter
insb
bound
add
push
jae
add
add
sub
iret
dec
mov
sbb
outsl
in
or
xor
and
outsb
push
outsb
aad
inc
xchg
loope
dec
roll
add
addr16
dec
sub
adc
sbb
stc
jecxz
mov
adc
inc
orl
sbb
push
add
or
insb
xchg
cmp
pop
fcoms
incl
bound
mov
adc
mov
mov
inc
cli
cmpsb
mov
jae
push
sbb
jnp
pop
iret
loopne
repnz
mov
out
jbe
mov
dec
inc
and
outsl
push
mov
in
cmp
loopne
lds
es
sbbb
pop
cwtl
adc
popa
test
popf
cmp
test
fsubrs
push
nop
push
shll
push
xor
mov
inc
pop
test
push
push
std
dec
test
push
jecxz
stos
cmp
aas
adc
clc
push
fimull
sbb
mov
into
movsb
ret
movsb
jo
dec
lods
cmp
push
shl
cmp
out
and
aam
sbb
jmp
dec
into
adc
in
mov
out
jg
jno
jns
sub
jns
bound
and
add
mov
aad
rorl
dec
jb,pt
push
sbb
imul
mov
hlt
sub
jle
imul
or
popa
fwait
jns
xchg
dec
pushf
mov
jo
insb
mov
in
push
stos
leave
out
pop
inc
push
iret
scas
mov
stc
xor
lds
mov
sbb
push
xlat
mov
xchg
fnsave
subb
das
loope
movb
pop
movsl
imul
jae
sub
int
fsubrs
cwtl
pushf
test
clc
in
cmpsb
push
sti
cmp
xor
stc
lcall
cmp
out
mov
inc
movsl
decl
or
add
jle,pn
jg
adcb
or
mov
xchg
cs
sarl
es
inc
and
push
out
xchg
adcb
fbld
xor
repz
sub
lret
inc
out
and
cmp
dec
insb
push
dec
fcmovu
dec
or
shl
iret
lcall
imul
push
repnz
aas
hlt
xor
mov
iret
test
loopne
xchg
mov
lds
aam
dec
call
es
pop
dec
stc
js
push
mov
mov
sub
mov
aad
mov
movb
fs
lcall
push
scas
push
mov
arpl
xchg
add
pop
mov
inc
cmpsl
adc
inc
call
and
int
sbbb
lods
int
cwtl
in
jmp
pop
xchg
cmpsl
mov
jb
push
add
aas
push
fidivl
mov
fwait
int
dec
cmp
sbb
lock
repnz
and
xchg
push
stos
cmp
pop
ds
dec
xor
mov
add
adc
mov
inc
xchg
push
mov
lock
push
aaa
cmp
outsb
sbb
sarb
mov
jne
adc
push
adc
pop
fisubl
mov
aam
shrl
dec
stc
jecxz
inc
xorb
xchg
fsubr
pop
mov
sarl
cli
mov
stos
push
lea
jnp
xor
jecxz
mov
cmp
outsl
pusha
jns
cmovle
push
lahf
mov
push
popa
add
fbld
dec
mov
or
mov
addr16
fs
cmp
mov
pop
stos
xor
out
repnz
add
or
lcall
in
xchg
popa
lods
xchg
push
sbb
adc
dec
push
imul
fsubrs
lahf
aam
and
add
mov
iret
mov
insb
pop
enter
pop
std
pop
es
mov
mov
xor
pop
jo
jbe
fisubrs
pop
push
jg
mov
jo
sbbl
mov
sub
icebp
movsl
adc
sbb
in
pminub
adc
cmpb
mov
xor
or
ss
xchg
in
sti
shll
gs
aas
sti
es
pop
pop
xchg
rol
sbb
mov
lock
sub
sbb
loope
fcoml
popf
je
insl
xchg
loopne
cmp
pop
xorb
bound
mov
out
mov
mov
mov
scas
inc
and
inc
jno
xchg
lcall
xor
js
push
mull
out
xchg
adc
dec
mov
mov
leave
stos
adc
addb
push
addr16
dec
xor
pop
movsb
adc
cmpsb
mov
ljmp
dec
not
imul
mov
test
xchg
push
inc
dec
add
js
test
add
or
sub
fildll
xchg
fidivl
mov
sti
jmp
add
loop
dec
jmp
dec
push
lds
or
packsswb
in
add
sbb
pop
xchg
leave
popa
sbbb
ja
fdivl
sbb
xor
push
push
fstl
xchg
lock
jne
testl
pusha
sahf
xor
mov
inc
add
jbe
push
xchg
sbb
in
imul
jmp
mov
mov
fcoms
push
cmc
mov
in
push
les
lcall
add
inc
mov
imul
lods
addr16
test
mov
pop
jle
gs
popa
sub
data16
or
xchg
loope
call
aaa
daa
ljmp
jnp
and
and
inc
xorl
daa
add
aas
push
mov
push
inc
sbb
loopne
sahf
mov
mov
xor
sti
jle
loop
mov
adc
jno
sub
hlt
xchg
adc
pop
push
imul
xor
out
cld
pop
adc
jecxz
sbb
es
push
mov
push
loope
in
ja
push
stc
push
mov
inc
mov
sbb
pop
add
notl
pop
adc
mov
test
sub
cmp
dec
stos
lcall
imul
lock
loope
sub
loop
out
xor
mov
sub
push
inc
xchg
dec
out
sub
push
mov
dec
testl
mov
or
adc
pop
push
jp
adc
out
lods
add
sahf
in
imul
push
inc
ret
dec
dec
pushf
fisttpll
pop
divps
inc
pop
in
scas
cli
aaa
sub
arpl
push
adc
movsl
dec
cld
in
outsb
test
cmp
xchg
cmp
in
popf
and
xor
xchg
mov
hlt
mov
ljmp
dec
push
ficoml
in
inc
xchg
push
mov
inc
jno
sbb
dec
lds
call
mov
xchg
inc
fwait
ret
stos
daa
lods
loop
inc
lcall
movsb
push
mov
sub
aas
aam
test
or
push
mov
adc
stos
pop
les
cltd
leave
roll
mov
nop
test
push
lcall
int3
dec
aad
or
jmp
jb
or
pop
cmpsb
sbb
sub
int3
dec
xchg
xchg
mov
sub
mov
out
sbb
pop
out
ljmp
mov
cmpsb
jg
dec
stos
ret
data16
ja
xchg
jns
pop
sbb
or
fs
mov
mov
dec
cwtl
ret
ret
in
in
add
push
xchg
mov
jns
sub
test
ja
or
or
add
jo
push
les
sub
popf
outsb
repz
push
mov
or
cld
inc
cltd
or
mov
leave
and
cwtl
stos
es
packssdw
sbbl
mov
mov
inc
aad
mov
idiv
mov
addr16
mov
jns
ljmp
jecxz
jno
pop
cmp
cmp
lds
mov
shll
fildll
movb
lcall
jl
out
mov
adc
out
loop
dec
dec
out
movzwl
fdivrp
les
ljmp
lods
lahf
and
sbb
cld
xchg
xchg
pop
or
and
pop
mov
out
hlt
std
mov
and
and
mov
push
xchg
div
js
sar
arpl
jb
pop
mov
pop
dec
xchg
mov
adc
xor
testl
cwtl
jns
hlt
inc
push
pop
lcall
mov
stos
ss
enter
jb
xor
jg
popa
mov
or
push
fmul
into
and
xor
sbb
sbb
and
adc
out
jecxz
jp
fnsave
fs
imul
pop
icebp
mov
jnp
mov
lds
sub
inc
jecxz
mov
fsts
aaa
sbb
xchg
cmpl
xchg
and
xchg
ljmp
mov
and
clc
jnp
fdivl
imul
mov
jae
xchg
xlat
lods
adc
aad
adc
sbb
add
or
lock
repnz
push
sbb
mov
mov
inc
into
pusha
imul
scas
dec
fwait
jmp
rorl
push
mov
cmc
pop
mov
xor
negb
mov
sub
lret
lods
subb
fisubs
loop
inc
in
shl
sbb
dec
stc
push
pop
xchg
sbb
jnp
out
popf
xor
cmp
adc
dec
pop
out
mov
pop
adc
inc
sbb
mov
jbe
sub
inc
cmp
cmp
xchg
sub
into
add
lcall
mov
cs
fnstsw
adc
sbb
fs
or
xor
adc
or
test
inc
jbe
mov
mov
jle
decl
pushf
aad
pop
cmpsb
mov
lcall
loop
and
add
jp
jne
dec
add
out
inc
fisttps
sbb
xchg
lcall
sbb
jno
push
add
insb
xlat
adc
inc
es
fisubl
sub
and
lret
jle
mov
mov
cs
shrb
jg
data16
into
stos
cmpsb
int3
sbb
push
aam
xchg
cltd
lock
xchg
and
cmpsl
popf
dec
inc
mov
cwtl
stos
jmp
popf
jnp
adcb
andl
and
adcb
addb
mov
sub
inc
xlat
stos
push
mov
xchg
sub
dec
mov
sub
arpl
xchg
xor
cltd
push
lock
jae
test
mov
out
pop
mov
addr16
mov
and
push
mov
mov
sbb
jle
out
cwtl
or
dec
jp
loopnew
jb
popa
sbb
ja
cwtl
enter
dec
loopne
dec
jb
arpl
ret
push
fcompl
adc
dec
jp
test
push
movsl
push
jp
imul
ja
pop
jp
aad
mov
adc
jno
les
mov
ret
push
push
mov
mov
and
aas
jl
or
or
or
xor
push
stos
xor
sub
cli
aas
mov
mov
arpl
sub
push
test
mov
dec
pop
xchg
rcl
xlat
sbb
adc
pop
pop
mov
pop
mov
push
mov
jnp
adc
xchg
fdivl
xchg
mov
sti
dec
outsl
std
jl
or
ljmp
jg
mov
push
pop
pop
int
arpl
mov
add
scas
dec
or
cwtl
jae
out
mov
frstor
sbb
out
test
dec
cld
andl
add
cmp
mov
test
cmp
jae
mov
fstpt
insb
push
sub
test
adc
mov
js
push
dec
inc
loopne
jl
lea
in
sbb
aam
mov
lahf
movsb
mov
push
and
ret
adc
ja
add
or
mov
mov
jmp
out
adc
dec
outsl
inc
and
inc
fadds
sub
pop
lods
and
push
lret
add
pop
les
mov
out
push
dec
mov
jl
mov
mov
adc
inc
jb
add
movsb
test
adc
mov
iret
inc
cmpsl
ljmp
cmp
jbe
sahf
cwtl
jp
push
add
xchg
sub
aad
shlb
jo
imul
cmp
out
push
pop
inc
rcl
xor
in
mov
and
shl
xor
push
scas
in
iret
xor
sbb
lahf
mov
sbb
add
imul
xor
jmp
ja
xchg
mov
dec
subb
fwait
push
mov
repz
mov
mov
ja
xchg
push
aaa
addr16
adc
popf
sahf
mov
cmp
sbb
jmp
shl
pop
shlb
in
or
mov
xchg
clc
push
loop
pop
insb
loope
jne
daa
sub
mov
fucomip
enter
push
dec
shrb
cmp
outsb
adc
xor
imul
fld
jmp
inc
orb
pop
xchg
flds
stc
pop
mov
add
jbe
add
fsin
inc
loope
lret
mov
inc
out
ds
loopne
xchg
testl
cld
fs
in
lods
shl
insl
pop
in
jge
fldenv
mov
cmpsb
sbb
sub
xchg
es
mov
ja
pop
lret
aas
cs
imul
sub
lret
sub
loopne
pop
dec
loope
or
dec
push
out
stos
or
dec
and
inc
inc
loopne
add
int
ret
adc
xor
fsubl
dec
jl
xor
ds
sti
cld
arpl
mov
pop
in
sbb
mov
xor
jo
xchg
inc
mov
daa
in
scas
std
add
pushf
addr16
insl
mov
call
psrad
pushf
cmp
incb
aam
pop
or
push
jb
dec
xchg
push
sub
dec
addr16
cmp
dec
in
inc
sub
mov
je
xor
repnz
fsubrp
fsts
test
push
imul
stos
xor
mull
cltd
pop
sub
sbb
paddsb
and
stc
pop
fsubrl
jmp
stos
daa
add
mov
sbb
inc
sahf
aad
pop
fwait
into
and
rcrb
xor
dec
lods
pop
cltd
adc
scas
push
push
aam
inc
sub
aaa
push
mov
push
je
lea
cmp
sub
dec
push
adcb
jno
mov
out
inc
ficompl
andb
sahf
cld
je
pop
ds
hlt
mov
mov
jnp
mov
sbb
movsl
mov
out
sbb
mov
pop
dec
jo
and
mov
fidivs
aas
mov
in
stos
sbb
mov
dec
pop
lret
xchg
outsl
cld
jns
cmp
iret
and
inc
mov
cltd
sbb
jge
mov
push
sbb
push
mov
cmpl
je
jns
cmp
xor
ds
lcall
add
jns
cwtl
ror
mov
incl
sbb
inc
adc
mov
lret
lahf
add
lret
shrl
aad
pop
and
jle
pushf
daa
test
pushf
xchg
inc
xchg
sub
add
jecxz
xchg
mov
dec
in
cmpsb
pop
fiadds
jge
dec
jo
lods
test
sub
and
das
xor
jno
xor
shrl
push
pop
xchg
aas
adc
lret
ss
je
mov
pop
mov
andw
jmp
iret
cmp
cmc
jbe
or
adcl
cmp
or
cli
xor
iret
insb
orb
pop
int
cmovb
aad
movsl
xchg
adc
nop
jne
xorl
and
not
nop
cmp
pop
mov
aad
ficoml
into
fsub
stos
fldenv
pop
daa
pushf
mov
shl
cmpsl
add
adc
push
cltd
sub
cmp
mov
lds
mov
arpl
in
outsl
les
loopne
xor
rorl
dec
in
and
out
mov
dec
test
mov
ljmp
mov
or
incl
jge
rolb
inc
xchg
ret
ss
mov
sbb
adc
or
inc
push
pop
mov
mov
scas
push
mulb
sahf
ret
xchg
nop
loop
push
cmp
repz
cmp
cvtdq2ps
jnp
loop
hlt
mov
cli
pop
imul
sbb
movb
dec
cmp
in
iret
jb
push
scas
mov
push
cmp
xor
mov
or
jo
stos
dec
ret
sti
pop
pop
push
mov
mov
es
daa
pop
fmuls
mov
into
mov
outsl
insb
sbb
aad
js
scas
pusha
addl
nop
es
pop
call
push
jle
mov
out
nop
sahf
gs
sbb
stc
mov
subl
lahf
mov
jmp
mov
and
nop
lds
stos
negb
scas
xlat
jno
mov
je
xchg
cli
inc
sbb
adc
js
sbb
sbb
hlt
arpl
leave
dec
sbb
inc
sbb
or
leave
mov
pop
sbb
in
mov
cmp
xchg
mov
adc
ret
xchg
gs
jae
insb
inc
sub
cmc
jp
ss
xchg
cmpsb
xchg
add
and
add
imul
xor
pop
icebp
pop
dec
mov
pop
xchg
jo
inc
push
dec
out
jge
int
jl
popa
daa
adc
dec
std
lea
dec
ret
fwait
aas
pop
inc
or
jge
jle
mov
cwtl
hlt
jle
adc
sub
lret
jnp
adc
and
jge
fisttpl
pop
jns
rolb
rorl
jbe
jge
inc
loopne
jl
mov
rolb
mov
pushf
iret
mov
mov
fstpl
bound
popf
enter
inc
add
xchg
in
sbb
pop
test
and
jle
sbb
and
cmp
xor
add
rolb
inc
sbb
push
xchg
pop
xlat
sar
in
ss
in
dec
int
cmc
sub
out
test
mov
out
inc
adc
jno
inc
xchg
inc
cli
adc
iret
shr
ja
jne
add
mov
dec
lods
fcom
or
pop
scas
fcmovnb
xor
dec
xchg
and
mov
lret
in
mov
jae
stc
in
repnz
fadds
mov
sbb
sbb
xchg
mov
pop
aad
scas
mov
lea
add
or
aam
sahf
or
mov
and
repnz
je
repnz
enter
and
arpl
ljmp
stc
js
enter
inc
test
cmp
repz
cs
xor
into
gs
lret
jp
xchg
mov
xchg
out
mov
imul
mov
push
in
cld
je
popf
jge
or
or
gs
insb
aad
ret
addl
inc
add
sub
add
cmp
cmp
add
in
jnp
sub
lret
jo
fisubl
xchg
fwait
and
cmpsb
adc
pop
push
adc
sub
outsb
mov
mov
pop
jbe
in
cmp
test
leave
dec
mov
xchg
fsubrl
jbe
cmpsl
cmp
push
fiaddl
popa
xchg
push
imul
in
xor
adc
insb
daa
repz
scas
stos
aad
xchg
push
out
rorb
mov
and
push
mov
es
stos
xchg
cmp
pop
push
add
xchg
inc
loopne
fsubr
cmp
add
sar
mov
xor
sbb
sbbl
lcall
jbe
pop
push
and
pop
inc
mov
and
xchg
shrl
and
aam
xchg
inc
pop
stc
fwait
push
stc
rolb
add
mov
push
adc
dec
ljmp
pop
mov
enter
add
xchg
sub
jnp
mov
mov
and
lret
cld
clc
adc
inc
ja
or
in
cmc
and
aas
xor
mov
enter
in
push
dec
xchg
mov
ds
loop
mov
cmp
cmp
mov
cs
icebp
in
andb
test
lock
call
rcll
ret
ds
sub
cmc
ds
xor
xchg
push
lea
sbb
sti
insb
mov
dec
or
clc
xchg
inc
pop
pop
jge
loope
mov
mov
repnz
mov
incb
lods
fcomps
jbe
inc
adc
clc
push
sub
mov
aam
and
jns
insl
and
push
imul
dec
std
rcll
in
lea
jl
sbb
aad
mov
push
fdivs
aad
mov
loopne
push
sub
adc
ret
mov
cmp
xlat
cmc
and
mov
lret
sbb
cli
dec
cmp
mov
jnp
or
iret
xchg
adc
pop
mov
pop
sbb
push
jnp
js
aaa
push
psubw
lds
imul
dec
and
fwait
xor
jns
jecxz
xchg
mov
in
std
aad
jae
push
adc
dec
mov
sbb
int3
stos
xor
rcll
jo
les
dec
sub
je
or
or
pop
mov
test
das
cmp
add
adc
and
push
sarb
std
inc
push
fstps
cmpsb
out
inc
jne
popf
push
cmp
jmp
pop
lds
insl
pop
insb
cld
mov
ds
idivb
cwtl
fisubs
add
jp
mov
or
add
add
out
subl
test
jbe
dec
dec
lods
mov
xchg
add
insl
add
mov
bound
sub
jbe
push
push
cmp
xor
sahf
and
pop
and
fdivrl
fcompl
scas
ds
mov
es
sti
les
jmp
fldt
and
int
dec
out
into
ror
sbb
inc
leave
rcr
sub
cltd
cvtdq2ps
pop
test
lea
out
adc
jns
icebp
in
mov
push
mov
jp
jmp
andb
mov
sarl
adc
call
inc
mov
fsubrs
lcall
and
add
dec
mov
jmp
loop
dec
into
js
cmp
sbb
sub
cmp
sbb
mov
jp
repnz
mov
pop
lret
stos
push
lret
sbb
loop
inc
iret
in
rcll
add
insb
jmp
cmc
enter
add
and
sbb
mov
les
hlt
outsb
push
dec
out
mov
adc
cld
ljmp
leave
inc
int
sbbb
jmp
in
mov
cmp
cmp
aad
clc
xchg
mov
sub
xchg
sbb
mov
jmp
and
sub
jecxz
xor
inc
cld
xchg
sbb
push
outsb
repz
shlb
push
aaa
xchg
push
or
and
negl
imul
out
divb
lods
inc
arpl
add
cmp
xor
int3
dec
cmc
sub
das
xchg
adc
push
subb
jle
outsb
sub
mov
adc
adc
adc
mov
ret
mov
arpl
test
pop
or
sbb
sbb
cs
sub
sbb
mov
stos
xor
test
movsl
or
ljmp
mov
push
pushf
out
sub
fiaddl
cwtl
test
nop
imul
push
add
out
lea
xor
hlt
aad
fnsave
je
addl
and
loopne
out
lods
mov
xchg
sbb
mov
pop
mov
call
je
movb
add
xor
or
jge
mov
addb
je
push
decb
pusha
push
inc
lret
mov
imul
sub
dec
loope
pop
add
sub
inc
ja
lods
lods
push
int
loop
movsl
int3
into
cmpsl
cmp
mov
pop
jns
popf
adc
mov
or
std
scas
mov
jl
add
push
lcall
mov
lods
fisttpl
push
jge
dec
or
push
or
test
ss
cmp
cmpsb
pop
popa
or
xor
mov
push
sub
addb
lret
inc
adc
dec
push
adc
lret
fwait
xlat
cwtl
cmp
and
imul
xchg
test
and
test
xlat
sahf
jge
dec
jnp
sahf
push
movsb
das
mov
or
into
ficomps
dec
mov
cmp
dec
neg
lret
and
loope
sarb
pop
push
lds
jmp
xor
xor
adc
jae
xor
in
les
dec
xor
cmc
xchg
adc
sbb
or
insl
fdivrs
leave
out
xorl
jb
inc
mov
cli
adc
data16
stos
movsb
mov
mov
jnp
mov
rcrl
inc
jns
mov
and
lods
aas
push
mov
fnstsw
nop
dec
sahf
int
test
ffreep
notl
push
mov
adc
shrb
stos
int
mov
dec
popa
les
enter
cmp
mov
jl
out
jo
jnp
xchg
pop
test
rorb
mov
add
call
popa
insl
in
lcall
inc
or
scas
mov
and
add
ja
mov
aas
ret
sbb
or
repnz
cmp
sbb
xorb
and
in
adc
push
data16
mov
inc
loope
in
jecxz
int
in
adc
jae
mov
pushf
and
sarl
xorb
movsl
repz
movsb
in
xor
sub
jp
pop
pop
lods
dec
xchg
ret
ss
dec
arpl
idiv
out
push
or
fidivrs
add
movsl
aad
shlb
pushf
jne
or
cmp
pusha
bound
fisttpl
inc
out
sbb
cld
in
mov
jle
rclb
push
and
or
xchg
cs
pop
cmpl
push
or
cmc
cmp
dec
cmp
sbb
adc
imul
mov
pop
inc
add
cmp
mov
aas
popf
icebp
push
ret
insb
pop
dec
dec
add
mov
xor
pusha
and
xchg
jae
dec
shrl
mov
mov
jmp
dec
push
rorl
cmp
xchg
daa
xor
imul
add
addb
mov
pop
scas
jmp
cmp
sub
mov
fildl
mov
filds
jo
xor
jmp
add
cmp
insl
mov
push
push
xchg
fs
sbbb
mov
outsb
lock
bound
test
xchg
xor
sahf
call
int
pop
jg
sbb
jae
mov
in
rcr
mov
pop
inc
lret
lahf
ret
fwait
sub
xor
add
inc
jl
pop
and
ds
fldcw
add
out
fsubs
int
pop
std
mov
data16
popa
insl
pop
ja
das
repnz
clc
sub
movsl
int
jg
push
push
dec
dec
scas
lock
or
dec
fcoml
pop
incb
decb
push
lods
roll
push
cmp
push
loope
or
popf
mov
push
dec
cmp
xlat
test
xor
and
xchg
outsb
push
xchg
insl
sbb
mov
and
or
loop
sub
neg
data16
icebp
jge
loope
inc
mov
adc
cmp
push
jb
pop
pop
cmp
lds
add
in
inc
jo
test
test
pop
pop
jge
push
ss
mov
insb
fstl
fisubrl
nop
cmp
sbb
mov
call
or
stos
shr
lods
pop
in
push
imul
push
cmc
sbb
in
pop
pop
into
sbb
inc
mov
cmp
push
mov
xor
subb
xchg
jp
cmpsb
cmp
out
pop
in
dec
fs
int3
mov
cmpl
repnz
cld
inc
popa
mov
inc
addr16
xchg
jb
lods
cmc
or
cmp
sti
aaa
insb
test
pop
jmp
adc
pop
jno
bound
mov
pushf
and
inc
cli
mov
add
mov
mov
pop
je
ror
xor
sub
push
push
push
and
cmc
xor
out
out
hlt
sub
push
dec
daa
dec
pop
xor
xor
outsl
imul
stos
mov
repnz
push
aad
cmp
jmp
test
jno
jae
xchg
or
dec
lahf
ds
out
sbb
fs
mov
xor
ds
mov
movq
std
mov
mov
dec
cmpsl
inc
shl
test
adc
add
jae
sub
push
ffreep
imul
mov
cmp
dec
in
pop
sbb
test
pop
dec
pop
mov
mov
int
inc
repnz
mov
adc
out
mov
or
in
inc
aas
dec
shll
scas
and
dec
jbe
jge
mov
test
rol
out
stc
loope
data16
outsb
jecxz
lahf
clc
inc
stos
pop
cld
test
lods
mov
sub
pop
or
test
push
mov
sub
insl
mov
jo
adc
aas
out
sub
sub
push
dec
xchg
leave
dec
mov
test
mov
lcall
and
imul
je
fadd
leave
in
shlb
movsl
sbb
and
mov
sub
jae
repnz
outsl
mov
shlb
xor
outsb
mov
push
mov
imul
sbb
push
out
sbb
into
repnz
adc
shll
sub
int
in
ret
pushf
std
pop
or
repz
xlat
imul
pop
sub
loop
pop
stos
das
sub
movsb
jb
loop
insb
lahf
jp
mov
dec
imul
popa
cwtl
adc
lret
adc
int
das
sub
cmpsb
fdivl
sbb
xchg
popf
mov
test
dec
lret
cmpb
push
out
in
mov
call
or
adc
cmp
xlat
cmp
outsb
test
fs
dec
jle
pop
fdivrp
lea
jge
mov
jne
cmp
dec
loope
incb
push
mov
arpl
mov
jnp
mov
mov
mov
in
jo
xchg
mov
negl
es
out
js
xor
xor
sbb
lock
lods
add
hlt
sti
mov
dec
or
repz
lret
fdivl
or
push
lea
icebp
and
sbb
mov
mov
jmp
xchg
inc
mov
cmp
jle
mov
popa
mov
stc
rcrb
sub
inc
mov
inc
nop
test
pop
int
outsb
lret
jnp
lds
out
pop
ds
jmp
pop
sbb
mov
scas
inc
or
mov
sub
sub
xlat
imul
cmpsl
fmul
and
int3
or
ficompl
push
inc
mov
incb
testb
fcmovne
push
xchg
pop
gs
fsubs
push
aad
sub
cmpsl
orb
lock
jo
add
ss
inc
or
sbb
xchg
push
push
ds
fwait
imul
sbb
mov
push
scas
fstps
push
jb
loope
popf
xchg
out
divl
scas
mov
stos
adc
jnp
adc
rcll
xchg
and
inc
sub
cmp
loopne
inc
mov
dec
hlt
addr16
ret
cltd
sbbb
sar
pushl
and
dec
sarl
sub
movsl
adc
pop
scas
jbe
lea
pop
jg
aam
jp
fdivl
xchg
sub
cltd
lea
movsl
mov
fstpt
out
out
inc
cmp
outsb
das
sbb
icebp
idivb
lds
sbb
xor
movsl
movsl
push
fildll
mov
lret
psllw
clc
sbb
add
insl
inc
or
in
lods
xor
data16
adc
das
repz
mov
cmp
nop
hlt
xlat
cmp
pushf
je
lds
pop
push
fiaddl
sbb
sub
leave
pop
pop
pushf
rcll
add
jnp
test
sbb
mov
fucomp
pop
fs
outsl
or
pop
int3
aam
pop
dec
pop
ret
mov
ss
incl
dec
roll
mov
sbb
and
outsb
mov
cmp
mov
mov
arpl
lea
mov
mov
mov
pop
lcall
mov
sub
sub
cmc
int3
sub
sub
ja
decb
insl
jne
and
cltd
cs
adc
rcl
imul
mov
push
rorb
scas
pusha
push
or
lock
mov
jle
or
sbb
scas
imul
mov
mov
jge
cmp
in
cld
add
mov
daa
or
test
dec
xor
call
test
xchg
sbb
push
aad
xchg
inc
adc
dec
and
add
xchg
push
adc
jae
push
sahf
jo
sbb
jns
movsl
dec
mov
popa
or
or
jle
aas
arpl
sbb
into
mov
mov
pop
sbb
clc
decl
sub
mov
stos
into
cmp
dec
dec
mov
pop
mov
xlat
sub
data16
mov
adc
out
sbb
aaa
pop
sbb
enter
lds
pop
mov
dec
pop
add
sbb
xor
and
lcall
jno
repnz
mov
pop
inc
sub
or
lret
mov
movb
aas
ja
jbe
arpl
stc
inc
xchg
xchg
cmp
mov
js
inc
iret
test
mov
sub
cltd
hlt
jne
dec
sub
mov
mov
mov
aam
xchg
adc
ficomps
jg
fistl
mov
cwtl
imul
mov
outsl
fsub
jns
add
into
icebp
int3
fnsave
xchg
movsl
insl
inc
inc
sub
es
sarl
pusha
test
push
pop
jbe
xor
mov
push
xchg
sbbl
cld
xchg
stos
mov
adc
stc
shlb
insb
fbstp
cmp
fidivs
xor
ret
sub
jno
dec
mov
pmulhw
pop
leave
or
mov
es
insb
popf
int3
mov
xlat
inc
lods
ret
adc
add
in
pop
lods
add
idivl
hlt
mov
ja
leave
add
jno
xor
cmp
add
int3
push
imul
daa
sbb
sbbl
pop
xchg
xor
fadds
mov
movsl
repnz
shlb
mov
or
xchg
dec
aas
movsl
fmull
popf
adc
das
cmp
xor
emms
out
dec
fldt
jne
and
sub
test
loop
pop
fisubs
xor
or
mov
push
mov
add
out
mov
mov
mov
add
ficomps
mov
lods
mov
mov
pop
stc
adc
xor
out
mov
cld
stos
cld
xor
int3
movsb
arpl
xchg
or
add
test
pop
jp
test
pop
xchg
loope
fnstsw
cmpsl
in
sarl
inc
ss
sub
loope
adc
sbb
sub
clc
fistl
lret
fs
out
popf
dec
pop
inc
cmp
jp
push
scas
clc
movsbl
inc
pop
jno
cmp
test
xchg
fcomp
sbb
repnz
sub
cmp
mov
pop
mov
sbb
cld
arpl
sbb
jnp
ja
and
add
inc
inc
xor
lahf
mov
stc
jne
ds
lret
ds
mov
iret
xor
xchg
out
dec
int3
scas
lahf
adc
arpl
insb
into
sub
out
pop
cmpb
fcoms
pop
add
ds
sbb
inc
stc
or
out
andl
xchg
adc
pop
std
ds
inc
pop
dec
push
or
mov
sbb
cmp
addr16
ljmp
or
cli
cmp
andl
icebp
js
xor
or
test
adc
add
scas
ret
incb
fistpl
jle
daa
xor
xorb
and
or
fildll
ljmp
leave
clc
movsb
dec
movsb
dec
ret
mov
mov
pushf
push
sub
lods
pop
pop
mov
mov
push
call
mov
pop
ds
les
flds
xor
add
cli
imul
pop
lahf
ffree
lret
mov
cmp
ret
mov
call
lods
es
lret
mov
and
cmp
cmc
sbb
sti
or
sub
fwait
sbb
ds
out
pop
lret
icebp
xor
adc
pop
dec
out
mov
mov
adc
pop
mov
ret
rcr
cmpsl
popa
sbb
aad
xchg
mov
outsl
dec
mov
mov
leave
and
cmp
insb
xor
sbb
popa
push
xor
jge
add
or
sbb
push
jne
inc
pop
pop
shll
jp
je
incl
push
adc
insb
pop
ret
lahf
adc
and
xor
xor
and
loop
les
dec
inc
or
xlat
sahf
xchg
sub
stc
dec
xor
cli
shl
sub
sbb
repnz
insl
sub
mov
aaa
and
mov
dec
push
push
ss
data16
sarb
mov
aam
sub
adc
and
fdivrp
lahf
and
adcb
mov
in
call
cmpl
stc
int3
pop
mov
and
outsb
das
inc
addl
and
dec
mov
sub
pop
pop
out
inc
xchg
xorb
xchg
ficomps
aas
in
push
aaa
or
or
loope
jb
test
sub
cmpsb
ljmp
sbb
xchg
cmp
pop
jge
jg
xchg
fistps
dec
xlat
add
cli
ficompl
loope
adc
xchg
mov
pop
jae
sub
cld
mov
mov
sbb
add
repz
cmp
pusha
icebp
scas
cvttps2pi
lret
icebp
xchg
xor
cli
lret
xchg
sub
das
mov
dec
insl
out
mov
test
aaa
or
lret
bound
out
pop
push
bound
mov
movsb
leave
mov
jecxz
popf
mov
testl
insl
incl
pop
xchg
mov
pushf
dec
out
cmp
ljmp
xchg
xchg
mov
mov
bound
add
jecxz
sbb
jns
nop
xor
dec
jmp
adc
push
mov
cmp
mov
imul
mov
daa
cmpsl
repnz
icebp
mov
jle
sub
roll
adc
pop
mov
xchg
js
mov
or
decl
loop
imul
icebp
sub
and
mov
hlt
mov
fsubl
pop
jo
or
cmc
in
push
iret
stos
cmp
cmp
arpl
or
xlat
cmp
or
add
jnp
repz
add
or
addr16
je
arpl
xchg
dec
mov
dec
push
icebp
shlb
cmpsb
xchg
jnp
and
call
cltd
pop
jp
mov
xchg
mov
insb
pusha
pop
dec
mov
lahf
imul
ret
push
popa
test
adc
je
in
pop
xor
jno
scas
cmpsl
fstl
mov
ret
cmp
aam
loop
insb
iret
lock
ljmp
jns
mov
xchg
xchg
adc
imul
add
sbb
imul
xor
xchg
mov
faddl
fsubl
jae
xor
mov
mov
cmp
daa
cwtl
jmp
sbb
and
outsb
std
fiaddl
inc
xlat
cmp
jb
mov
loop
pop
rcr
dec
add
hlt
shll
jmp
out
dec
mov
fwait
sbb
dec
mov
adc
lea
int3
arpl
dec
insb
ficompl
out
inc
fsubr
inc
push
scas
adcb
fiadds
xchg
pushf
sub
mov
pop
inc
mov
iret
jnp
mov
and
lret
rorl
es
mov
pop
jmp
iret
mov
lret
jae
push
cmpsb
lcall
sbb
xchg
add
mov
cmp
lods
aam
jle
mov
clc
inc
xor
ret
clc
sahf
push
rorl
mov
push
mov
xor
les
sub
test
dec
cli
pop
dec
pop
jp
sahf
jmp
dec
mov
cld
cmp
xchg
push
cld
jl
sti
push
repz
test
mov
std
or
sub
rol
adc
int
addr16
in
adc
xchg
outsb
xor
fdivs
push
jb
fs
andb
fcomp
xor
sbb
xor
aas
daa
adc
mov
push
add
inc
lea
test
repnz
sahf
pop
jmp
daa
pop
cmpsl
jecxz
add
out
xor
sub
ja
mov
jg
int3
jno
cmpw
scas
jecxz
hlt
xor
pop
dec
sbb
popl
push
outsb
inc
cs
inc
cmp
jl
push
cli
xchg
imul
rcrl
arpl
sbb
imul
inc
or
mov
xor
cmp
sbb
movsl
jge
out
mov
inc
movsb
fsubl
cmpsl
testl
ds
cmp
pop
fs
fnstenv
aad
outsb
popl
xor
jp
mov
stos
mov
push
stc
xchg
sbb
js
mov
in
jno
mov
gs
addl
imul
stos
out
push
pushf
leave
loop
add
ss
xor
scas
add
jmp
movsb
dec
testl
test
out
jae
fadds
push
pop
mov
push
adc
inc
add
lock
and
xchg
inc
adc
cmp
fwait
add
dec
push
xchg
jbe
icebp
add
movsl
outsl
pop
dec
popf
lock
pop
pusha
fidivs
lods
cmpsb
pop
mov
jne
cmpsb
mov
inc
sarb
nop
sub
xchg
sar
jns
mov
mov
dec
dec
iret
es
jns
mov
jmp
incb
fdivs
mov
icebp
lea
scas
adc
push
push
mov
outsb
sti
in
sub
fs
test
mov
int3
mov
sub
or
cmpsb
mov
nop
xor
dec
push
mov
roll
inc
pop
fadds
ljmp
fbld
das
test
in
and
fdivp
mov
int
ss
cmp
out
push
jb
jb
or
adc
daa
pop
pop
push
imul
or
insl
mov
cmp
mov
outsl
std
xor
jge
lds
cmc
jle
iret
jl
test
lds
mov
movb
push
push
and
aad
xchg
mov
das
or
mov
xchg
std
fwait
clc
repnz
xlat
push
cmp
dec
xchg
pop
jns
sub
and
fdivl
mov
or
xor
fimuls
lods
mov
mov
mov
mov
jb
ret
imul
sbb
out
and
sbbl
repnz
mov
cli
shlb
outsb
jl
inc
inc
push
stos
mov
pop
imul
std
dec
ret
jle
pop
sbb
sti
jl
lret
cmpsl
push
neg
dec
imul
jge
push
loop
fstl
or
aad
test
mov
das
mov
add
test
movsl
fisttps
inc
andl
daa
sub
out
lcall
outsb
cmp
sub
push
add
adc
add
ljmp
repz
aas
mov
hlt
pop
ds
stos
imul
out
cmp
lret
sub
cltd
xchg
and
test
push
xor
dec
in
push
lods
fisttps
aaa
clc
cld
push
cmp
or
mov
mov
dec
out
jbe
aad
mov
loop
sub
lahf
xor
sarl
arpl
push
xor
pop
sarl
sub
mov
rcl
or
int3
adc
jmp
add
and
jp
inc
xchg
ss
mov
mov
iret
rorb
pop
divl
mov
inc
and
shlb
add
sbb
int3
icebp
shl
movsl
xor
jnp
jno
out
and
adc
fdiv
aam
push
sub
cmpsb
push
and
mov
mov
ret
dec
out
sbb
mov
stc
cmpsl
pop
sub
dec
dec
dec
sub
cmp
sub
dec
icebp
fistl
pusha
sub
mov
das
xchg
cmpsb
data16
jl
and
inc
lock
xorb
sub
sub
mov
daa
movsb
or
inc
sub
pop
scas
push
xor
jne
xor
cmp
push
adc
insb
ret
cmp
or
push
sbb
push
mov
lods
inc
loopne
jp
xlat
sub
into
and
inc
mov
loopne
mov
mov
push
mov
dec
lcall
jle
fstpt
sti
or
xchg
add
cmp
jp
stc
inc
popf
cmc
xor
shlb
iret
loopne
adc
ret
lret
cmp
xchg
xchg
enter
cmp
mov
and
loope
mov
cwtl
sub
sub
test
sbb
pop
cmp
mov
and
sub
out
scas
fidivrs
cltd
push
jl
and
xchg
xor
cmp
mov
push
jns
psubsw
shlb
out
sbb
lods
sub
in
lds
cmp
imul
pop
xchg
fld
int
out
imul
scas
jnp
fwait
push
cwtl
xor
mov
mov
sahf
sub
xor
sti
dec
bound
inc
scas
je
xor
cmp
into
rcr
rclb
push
pop
iret
jl
inc
xor
pop
into
adc
xor
outsb
pop
mull
rorl
pusha
scas
sahf
add
mov
stos
outsl
sub
ret
sahf
pop
xor
cmp
cmpb
xor
xlat
jp
cld
dec
or
sub
jns
mov
mov
xchg
push
jbe
push
cmpsb
and
xor
jmp
xorb
iret
jecxz
jb
cmp
int3
cmc
aaa
js
int
jle
cltd
movl
jge
push
or
cmc
test
fstl
testl
push
sbb
int3
inc
push
out
test
mov
xlat
es
sub
ljmp
mov
flds
rclb
sub
lods
ret
inc
xor
or
xchg
mov
xchg
jns
fimuls
popf
call
das
mov
imul
jle
jns
mov
int
or
mov
lcall
mov
jmp
fimull
mov
icebp
xor
xor
inc
dec
adc
add
ss
mov
iret
mov
inc
aaa
scas
xor
or
stos
in
scas
imull
cltd
jg
aaa
loopne
ljmp
bnd
or
mov
adc
icebp
jns
or
sub
mov
dec
mov
xlat
add
divb
data16
es
xor
mov
jb
cmp
push
icebp
inc
and
add
jo
lret
mov
and
insl
inc
insl
es
fdivs
rolb
stos
in
dec
insl
and
sub
pusha
sbb
sbb
std
lods
jnp
rclb
push
sbb
cli
mov
insb
arpl
das
adc
push
adc
pop
or
fimull
pusha
jl
je
push
add
sub
sahf
fcmovnb
dec
push
mov
lds
movl
fucomp
or
loop
jae
rcr
test
aaa
add
xor
pop
rorl
js
repz
jp
je
xchg
mov
jecxz
out
out
lods
lea
or
and
loope
fcom
fwait
pop
ljmp
test
mov
jno
cmp
cmpsb
jle,pn
out
jge
repnz
push
mov
mov
mov
inc
arpl
int
dec
gs
push
jb
cmpsb
int
xchg
adc
ficoms
xor
in
jb
xchg
pop
push
shlb
outsb
jnp
push
jl
in
aaa
adc
xor
adc
out
adcl
xor
fcoms
scas
push
push
leave
cmc
aas
pusha
cmp
fists
mov
sbb
xor
pop
adc
insl
repz
and
mov
sbb
divl
mov
popa
test
imull
adcb
lcall
mov
arpl
hlt
jle
push
sub
rol
mov
fwait
inc
sbb
adc
sbb
daa
xchg
sub
iret
add
xchg
push
repz
sbb
cwtl
pop
sub
iret
xchg
pop
pop
mov
push
orb
fldcw
jl
push
outsb
sbb
das
lock
lcall
ja
sub
mov
inc
imul
or
sbb
lods
fnstcw
mov
es
push
adc
popa
in
cmp
xchg
and
fsts
inc
push
mov
xchg
cmc
cld
inc
dec
arpl
adc
in
jle
jne
jle
and
stos
call
fs
fwait
push
insb
fs
out
xor
adc
xor
jecxz
add
add
mov
inc
jo
and
or
pop
xchg
dec
sub
add
in
jg
mov
call
mov
repnz
fwait
pop
sub
hlt
jge
sbb
pushf
inc
loop
push
mov
add
pop
mov
xor
in
popf
lods
cld
adc
imul
adc
lock
scas
xor
in
stos
mov
mov
and
cld
rorb
mov
scas
jl
xchg
ret
xchg
xchg
scas
ret
xchg
dec
or
mov
jno
lcall
mov
leave
popa
mov
popa
or
mov
cmp
sbb
sbb
testb
mov
xchg
inc
sbb
insb
lods
sahf
mov
cli
insl
aas
scas
pop
mov
popa
cmc
mov
sbb
cld
sub
jb
dec
jl
addl
ljmp
or
inc
lret
jbe
mov
rcll
adc
jp
lcall
fsubl
mov
add
roll
xor
inc
mov
js
aas
clc
cltd
dec
push
push
js
in
outsl
push
in
jo
push
test
mov
push
test
hlt
cmp
adcl
xor
popa
add
das
out
subl
stc
sti
cmp
sub
fldcw
test
sbb
lods
or
sar
mov
lods
cmp
mov
shrl
adc
jp
out
movsb
std
jne
mov
jl
push
out
xor
psubq
rcl
dec
enter
adc
pop
test
jo
movsb
jmp
shr
dec
sbb
mov
dec
mov
fsubs
jl
push
test
mov
pusha
insl
sysexit
or
ret
and
sub
pop
lea
mov
mov
stc
push
inc
dec
jo
push
dec
xor
sbb
adc
aas
mov
aas
out
xor
cmp
in
push
sub
or
xchg
dec
and
inc
push
mov
push
and
mov
cltd
cmpsb
inc
mov
mov
sbb
mov
xchg
insl
push
pop
xor
sub
icebp
jl
rorb
push
jno
sbb
cmp
out
daa
xchg
or
out
lret
sbb
nop
push
jb
stos
js
dec
and
sti
cmp
sar
xchg
jb
mov
stos
xor
cmp
push
fstp
mov
test
mov
imul
fdivrl
sub
popf
fstpt
xchg
mov
or
sub
faddl
scas
jl
je
sbb
push
mov
sub
xchg
inc
cmpsb
mov
insl
pusha
mov
and
pop
push
jecxz
outsl
adc
fnstsw
jae
les
cmp
lods
xor
dec
jo
das
pop
xlat
mov
push
rcll
push
pop
test
mov
shlb
adc
rcll
push
fnstenv
movsb
sub
adcb
imul
test
xor
xlat
and
xor
sub
inc
imul
inc
sub
jno
fidivrl
test
cmp
cmp
sbb
adc
add
cmp
adc
addb
jo
cld
adc
dec
out
aam
lods
add
popa
dec
cwtl
cmp
jge
jne
xor
or
sbb
lret
in
xchg
pop
in
mov
sbb
mov
stos
inc
shl
insl
mov
idivl
pop
pop
adc
jl
mov
mov
mov
loopne
cmp
ja
sbb
xor
add
lahf
movsb
fistpll
jmp
jmp
mov
sub
cmpsb
repnz
jecxz
aas
push
jo
rorl
xchg
pop
ret
popf
jge
outsl
push
aam
mov
add
inc
sbb
loop
push
cli
repz
dec
mov
pushf
decl
roll
in
ret
mov
mov
pop
jg
xchg
scas
xor
jl
insl
xor
pop
inc
rcrb
cltd
xor
dec
mov
fcoms
push
iret
hlt
push
mov
cmp
jno
mov
xchg
sub
aam
mov
loop,pt
mov
imul
pusha
fsubrs
test
sahf
push
fmul
mov
cltd
mov
dec
lcall
cs
iret
int3
pop
pusha
loop
adc
push
push
data16
jmp
mov
sbb
mov
mov
call
mov
push
mov
call
pop
sub
or
push
and
jge
ds
outsb
jle
inc
leavew
or
sbb
out
in
repz
jg
jl
cmp
add
dec
aaa
lea
fisttpl
aad
mov
mov
cmp
int3
or
ja
outsb
sti
ret
loopne
hlt
gs
sbb
imul
negl
adc
dec
lret
or
mov
jns
pop
aam
pop
fidivl
loope
inc
enter
call
movsl
outsb
inc
and
pop
xchg
lock
out
cli
adc
sbb
sbb
or
ret
mov
out
push
ljmp
sub
outsb
je
loopne
lods
outsl
xchg
cmp
xchg
insl
push
push
in
popf
dec
pop
sub
movsl
jno
out
lret
andb
in
idivl
outsb
fists
mov
xchg
imul
daa
stos
sub
adc
popa
dec
ss
arpl
pop
jns
insb
inc
mov
movsb
ljmp
sub
inc
add
xor
sub
shl
pop
pushf
repz
jnp
adc
dec
repnz
xor
out
aas
jne
push
jo
in
push
cmp
scas
mov
cli
sbb
mov
add
mull
push
pop
shl
loop
sub
rolb
and
add
in
out
mov
fldt
inc
fsubs
sbb
icebp
jno
mov
jno
js
loopne
dec
scas
add
jecxz
mov
adc
mov
jle
or
stos
xchg
aam
lock
or
dec
sbb
dec
fwait
sbb
outsb
sub
mov
xchg
xor
pop
push
mov
adc
lahf
push
call
push
mov
push
add
jns
xchg
repnz
aam
in
and
mov
mov
push
out
jg
dec
cltd
bound
mov
mov
pop
jle
and
xor
xchg
int
mov
icebp
divb
scas
pop
mov
aaa
push
insb
cmc
xchg
jnp
and
rorl
mov
cwtl
push
sar
out
lds
and
dec
and
xorb
popa
mov
push
fadd
mov
and
stos
mov
rorl
mov
mov
mov
inc
hlt
adc
aas
xor
jecxz
adc
push
cld
jb
mov
pop
jp
xor
mov
sub
test
pop
das
mov
xchg
enter
je
or
js
jge
dec
xor
pop
push
dec
test
psubb
es
pop
xchg
out
sbb
repz
shrb
lret
jle
fidivs
cmp
sub
mov
inc
cmp
mov
mov
fcomi
or
or
mov
cmpsb
test
adc
insb
scas
fwait
jbe
mov
push
jge
in
dec
pop
pop
xlat
cmp
dec
ja
int3
push
in
insb
pusha
jle
dec
pop
sahf
pop
idiv
jae
sub
inc
nop
cmp
sub
inc
cli
bound
pop
rorb
cmp
fdivs
shlb
fimull
cmc
sub
jnp
sub
data16
xor
inc
divl
dec
cltd
jae
push
lock
ljmp
or
in
pusha
sub
adc
aad
cmpl
loopne
decb
xchg
adc
ret
push
mov
mov
jmp
jp
xchg
cmp
test
xor
pushl
push
ljmp
pop
cmp
and
sbb
ret
mov
mov
add
das
sbb
adc
int
dec
push
dec
jae
pop
popa
push
jmp
xchg
xchg
jo
sbb
push
cmpsb
scas
adcb
push
das
cli
movsl
insb
xchg
aaa
or
jns
out
cmpsb
aam
cli
sbb
fwait
mov
xor
pop
mov
pop
pushf
push
jmp
pop
dec
mov
mov
cmpsl
gs
into
xchg
out
lods
jns
lcall
dec
ret
push
lds
mov
mov
aam
hlt
out
lods
or
jmp
add
in
fld
xor
mov
push
mov
add
xchg
inc
repnz
inc
mov
inc
and
and
sti
or
pop
mov
xlat
lock
leave
cmp
dec
int3
movsb
xchg
ret
sbb
cmp
and
and
cwtl
pop
dec
cmp
jno
shlb
xchg
jg
mov
xchg
nop
icebp
pop
pop
jae
jno
xchg
mov
xorl
cmp
xchg
and
xchg
xchg
pop
lret
lret
loope
fisttps
bound
inc
jmp
je
lcall
iret
adc
fsts
dec
adc
cmpsl
ja
mov
dec
sub
aas
and
scas
bnd
outsl
pop
cmp
addr16
xchg
push
pop
dec
jae
mov
push
gs
mov
out
mov
inc
or
gs
xchg
xchg
jb
or
xor
dec
insl
push
mov
xchg
scas
xlat
js
int3
enter
arpl
xchg
fsubrp
cli
push
push
mov
fs
mov
push
or
jp
insl
or
hlt
movsl
adc
fdivrl
xchg
add
cmpsb
add
loope
xchg
adc
rcr
loop
mov
and
imul
dec
mov
lret
sbb
data16
out
xchg
jbe
lret
jp
xor
inc
scas
push
pop
rcll
jle
dec
push
in
movsl
fucomip
gs
mov
sbb
sub
pop
and
push
adc
or
cwtl
sti
cld
cwtl
leave
mov
cmp
das
cmp
cmp
add
shll
mov
and
pop
fistpl
stos
mov
jp
ja
es
push
cmc
filds
xor
xlat
jp
pminsw
mull
adc
mov
dec
jb
xor
mov
fst
out
leave
stos
daa
adc
sti
jge
cli
leave
cmp
cmp
imul
fwait
jle
cli
in
les
loopne
add
adc
mov
inc
es
xchg
rcrl
push
lods
ljmp
xchg
adc
and
cmp
sub
pop
mov
int3
mov
ret
ror
call
icebp
sub
xlat
in
icebp
cmp
rcrl
and
jge
cmc
dec
lahf
inc
push
cmpsb
cmp
repz
push
cmpb
stc
test
leave
xor
fdivrl
je
push
ja
cwtl
sub
outsb
and
adc
pop
push
lods
cmpsb
outsb
test
add
pop
lea
lahf
push
push
inc
xor
loope
jae
inc
outsb
pop
mov
adc
lcall
cld
mov
sbb
mov
and
adc
mov
cmpsl
sbb
leave
ror
xlat
cli
cli
mov
sbb
dec
sti
ss
leave
pop
stos
xor
mov
in
or
inc
lock
fcmovb
sahf
push
add
bound
mov
sahf
addr16
cmp
jno
ljmp
sbb
orl
subl
hlt
lcall
jl
scas
pop
arpl
mov
jecxz
xchg
lea
cmp
sbb
notl
pop
push
popa
fs
mov
or
push
inc
jbe
xor
sbb
insl
and
push
imul
dec
aaa
xor
xchg
lock
jne
scas
mov
xor
sbb
xchg
cltd
adcl
popa
dec
inc
inc
adc
add
jge
push
mov
movsb
cmp
ret
add
mov
aad
addr16
sub
iret
testb
mov
in
lret
mov
pop
cli
inc
retw
jnp
add
int3
dec
mov
clc
hlt
pop
into
mov
fldenv
or
sub
mov
leave
jl
bound
mov
sub
xor
and
xchg
mov
adc
xchg
add
lods
mov
into
xor
int
jl
dec
mov
insb
fnsave
dec
inc
pop
lret
filds
fldenv
repz
push
xchg
in
sbb
out
bound
bound
xlat
jo
fldln2
sub
out
rclb
cmp
cmp
lea
and
jns
xchg
enter
scas
fbld
std
mov
daa
xchg
add
lods
push
cmp
repnz
dec
cli
lock
test
in
jecxz
jns
stos
cli
xlat
pop
imul
pop
hlt
ss
mov
xlat
push
cmp
dec
jge
pop
insb
insb
fldenv
fcmovnb
push
mov
mov
outsl
xchg
pop
jo
and
cwtl
call
ds
xchg
int
inc
pop
xchg
mov
push
rclb
mov
arpl
mov
jns
push
xchg
sti
and
xor
adc
lods
cmp
dec
add
hlt
popa
jnp
push
lods
xchg
std
inc
sub
or
insl
add
cli
inc
sbb
add
inc
testl
lock
in
lret
shlb
inc
dec
shrd
bound
out
cmp
jns
roll
stc
ds
bound
cmpsb
mov
cmp
sub
jecxz
imulb
icebp
xchg
push
jb
and
data16
jp
xchg
mov
xor
mov
sub
cmp
sub
or
dec
inc
mov
in
sbb
ds
sub
cmp
pop
loop
imul
call
jo
imul
adc
jg
adc
lcall
icebp
cmpsl
lock
out
or
scas
dec
adc
test
mov
sub
cs
outsb
ret
loop
dec
test
ss
lea
loope
iret
rcr
fimuls
jae
sbb
lahf
int3
xchg
xchg
jl
xor
repz
mov
in
js
stc
mov
adc
scas
mov
xor
out
or
and
pushf
or
and
js
adcb
dec
xchg
inc
clc
mov
data16
push
gs
mov
aaa
cwtl
mov
addr16
mov
push
or
mov
cmp
mov
or
dec
js
adc
test
pop
sahf
add
pop
sub
lret
iret
faddp
or
loopne
addb
arpl
mov
mov
js
or
outsb
loopne
test
bound
jno
aad
lea
push
cmc
jle
repz
cmp
test
mov
add
orl
xlat
popf
or
in
push
cwtl
xchg
iret
clc
dec
xor
fistpll
jae
fcom
cmc
divb
mov
push
mov
mov
test
cwtl
mov
out
lahf
cmp
fstpt
cltd
mov
mov
cmp
lds
in
jo
loopne
pop
push
jge
mov
push
ss
lcall
hlt
adc
aaa
mov
hlt
rorb
cld
mov
inc
icebp
dec
sbb
into
shrb
mov
push
fsts
aas
pop
rclb
lret
cmc
pop
cmp
rep
sbb
mov
mov
adc
mov
push
in
or
dec
jg
push
idivl
sbb
roll
push
cmp
enter
lret
lret
loope
jl
dec
xchg
mov
insb
sbb
mov
aad
movsl
push
arpl
dec
popa
dec
enter
insl
or
in
jle
aas
cmpsl
stos
out
call
enter
int
in
fisubs
pop
int
fcmovnb
je
fsubrs
testb
aad
pop
mov
out
ret
cmpsb
jbe
hlt
outsb
sbb
xchg
stos
fidivl
dec
pop
aad
fwait
inc
shrl
stc
pop
xchg
popa
daa
scas
sbb
jo
adc
ljmp
in
mov
pop
das
pop
cltd
notb
pop
cs
inc
sub
xchg
jge
stos
xchg
and
sbb
cmpsb
dec
or
into
call
mov
outsl
pop
sbb
aad
pop
mov
imul
pop
data16
loop
sbb
cmp
stc
jl
pop
in
roll
pop
mov
and
mov
sub
lds
adc
jg
cltd
addr16
shlb
int
sbb
lcall
cmp
sub
je
and
pusha
push
push
in
rolb
ret
xchg
jg
pop
leave
xor
sahf
mov
clts
lcall
testb
add
dec
sarl
arpl
ret
cli
pop
xchg
push
xchg
push
scas
je
adc
pop
mov
aas
cs
mov
xchg
add
fnstenv
mov
mov
xchg
and
lcall
sti
xchg
scas
ffreep
shll
sbbb
and
and
pop
faddl
push
cli
nop
cmp
mov
jne
cmp
jle
and
shll
andb
mov
ss
movsb
add
scas
jns
or
and
mov
sets
push
ret
jl
addr16
fdivrs
je
xchg
cmp
sbb
outsl
pop
add
aaa
std
inc
leave
mov
test
adc
out
cs
push
sti
ljmp
fnsave
pusha
stos
cmp
fsubrs
mov
fadd
dec
in
and
lret
jmp
out
rcrb
or
mov
jbe
fstpt
jl
imul
insl
mov
cmpsl
repnz
not
fwait
movsb
mov
lds
pop
or
cmp
fadds
out
jae
xchg
bound
xor
xor
std
mov
stc
in
or
dec
jae
cmpl
jmp
dec
stos
xchg
iret
add
je
pop
outsb
das
sbb
lock
jp
addl
push
sbb
inc
mov
andb
xchg
pushf
jnp
pop
inc
mov
std
movsl
cmpsb
add
xchg
jno
cli
stos
pop
or
mov
fs
ds
sub
fmuls
clc
xchg
pushf
jmp
and
popf
mov
jbe
bound
dec
dec
push
pop
into
arpl
lds
fidivs
sbb
fildll
test
les
jbe
pop
pop
fwait
lock
insl
lret
xor
in
enter
scas
out
cmp
or
cmp
outsb
loope
ss
cmp
repz
push
xchg
lds
jl
dec
xor
mov
inc
mov
jno
mov
and
lcall
adcl
test
dec
fldcw
jecxz
out
inc
inc
imul
mov
push
lahf
push
inc
or
or
ds
mov
or
sbb
enter
pop
mov
les
icebp
fildl
lcall
cld
out
xor
push
lock
inc
xchg
test
cld
dec
lret
push
or
into
sbb
xchg
fstl
out
clc
add
jne
lock
mov
fidivrl
sarl
pop
rcrl
push
call
ds
pop
mov
fwait
xor
dec
jmp
loopne
mov
dec
xor
out
out
js
insl
jbe
insl
push
aaa
dec
mov
sub
gs
jnp
arpl
scas
cmpsb
jns
repz
lret
sub
std
dec
leave
sbb
inc
or
stos
in
test
xchg
xor
fwait
xorb
in
cmp
cmc
mov
arpl
jge
rolb
mov
rcll
push
jb
dec
fimull
pop
mov
lret
mov
pushf
inc
and
cmp
in
les
pop
scas
jg
test
fdivp
mov
mov
mov
dec
test
cmp
jl
xor
jmp
pop
inc
xlat
inc
inc
sbb
xchg
test
dec
pop
lock
inc
mov
push
imul
aam
jo
cmp
cltd
mov
or
xchg
add
push
nop
repnz
addr16
add
xor
mov
es
mov
add
and
push
ds
sub
loope
pusha
shlb
or
add
mov
mov
xchg
jns
dec
pop
in
xchg
pop
push
movb
xor
cmp
cmc
push
jb
or
cmpsl
fmul
inc
test
dec
test
cmp
lods
jl
pop
iret
pusha
movsb
pushf
jmp
outsl
fs
mov
adc
out
aas
shlb
test
dec
xchg
fiaddl
lahf
add
int3
and
hlt
sbb
xor
or
mov
lahf
ja
cmp
popa
mov
repz
add
inc
inc
add
push
idivb
xchg
and
iret
lds
daa
xor
mov
ja
add
call
push
cmp
and
daa
es
pop
jp
je
ret
roll
data16
iret
mov
enter
scas
jb
mov
scas
cmpsl
test
lds
add
and
ret
cltd
dec
xchg
ss
jge
add
cmp
jg
cmp
stos
negb
push
fidivs
ja
lret
mov
push
out
mov
stos
cmp
adc
pop
or
daa
sbb
add
dec
sbbl
hlt
cmp
pop
stos
cmp
icebp
dec
imul
xchg
fisubrl
sti
shll
sbb
stos
mov
iret
cmpsl
ja
pop
cld
das
out
mov
das
cmp
push
mov
jl
jo
cmp
or
cmpsl
bt
repnz
pusha
adc
fstpl
in
ss
add
leave
push
pop
mov
in
sub
and
outsl
adc
jmp
jno
adc
ret
dec
cmp
pop
sbb
cs
jle
mov
lahf
outsb
mov
jnp
out
loop
mov
push
inc
fmul
sbbl
dec
les
mov
sub
lahf
pop
mov
aas
sub
insl
fwait
pop
push
jge
jno
mov
pop
inc
push
out
jns
cmp
xchg
xor
cmp
mov
insb
shll
inc
imul
stc
sbb
dec
roll
and
or
xor
shl
jno
test
adc
les
add
jp
mov
in
sar
icebp
mov
inc
aad
les
mov
mov
adc
movsl
lcall
mov
test
push
mov
xchg
nop
or
lcall
mov
repz
imul
fsubrl
sub
in
stos
jg
xor
pop
push
mov
push
fcmovnbe
mov
xor
push
sti
int
xor
mov
test
xor
xor
fwait
jmp
and
push
cltd
adc
insb
adc
xor
pop
or
sbb
pop
icebp
shl
dec
imul
xchg
push
push
adc
dec
mov
fisttps
jo
jns
mov
mov
xor
pop
pop
pop
push
addr16
sub
aaa
int3
fadds
sub
dec
cmp
add
and
add
inc
out
inc
sbb
jle
adc
loop
or
add
jmp
sbb
push
push
cmpsl
ja
fistpl
or
jbe
inc
push
sbb
fldl
and
pop
icebp
push
in
inc
sub
jle
adc
mov
mov
test
rolb
lret
cmpsl
cmp
jae
icebp
ret
or
sysenter
orl
jmp
adcb
jecxz
mov
pop
mov
insl
jb
jmp
pop
push
stc
rolb
leave
arpl
pop
fiadds
and
inc
test
test
xor
fnstcw
and
cmc
test
outsb
or
mov
rolb
pop
push
repz
insl
aas
sub
enter
xlat
popf
insl
mov
or
data16
ret
es
mov
cltd
hlt
mov
mov
dec
adc
or
and
mov
dec
mov
or
shl
shlb
add
movsb
into
jb
adc
sbb
notb
je
enter
in
mov
loope
jbe
add
jno
test
pop
jno
mov
daa
jb
push
scas
jno
inc
fwait
xlat
aas
sbb
or
add
dec
dec
and
mov
aaa
pop
sbb
shl
dec
lcall
into
jo
loop
pop
xlat
sbb
jp
sahf
mov
int3
pop
sub
sti
sbb
push
add
movsl
jne
data16
dec
lods
jno
bound
xchg
xchg
cld
sub
xchg
jg
cli
mov
fs
dec
dec
push
sbb
movsl
sbb
jge
or
add
movl
repz
in
push
xchg
jns
sbb
lcall
scas
jno
adc
mov
mov
sub
mov
xchg
cmc
hlt
arpl
xor
stos
cmpsl
fcmovbe
and
push
lcall
pop
push
adc
or
mov
adc
and
lahf
xor
cmpsb
lret
xor
xchg
inc
fsubs
jnp
repz
testl
dec
adc
lea
lock
scas
bound
call
adc
xchg
test
repnz
and
stc
nopl
push
push
add
mov
aaa
dec
add
sbb
jle
sub
psubw
sbb
hlt
cwtl
fnsave
mov
in
and
imul
das
cmp
fs
jge
or
fwait
pop
dec
sbbl
mov
or
and
lcall
es
iret
or
mov
insb
aaa
out
dec
sub
pop
jge
mov
mov
loope,pt
lds
subb
cmpsb
aaa
fiaddl
inc
push
js
mov
ds
mov
leave
xor
imul
sbb
pop
mov
push
in
sbb
mov
rcrb
adc
notl
mov
cmp
stc
clc
jnp
mov
testl
jmp
cmp
cs
sbb
mov
shl
and
push
icebp
in
bound
jg
push
test
cwtl
jae
dec
mov
cli
test
loope
repz
pop
aam
es
and
pop
push
sti
pushf
push
pop
lock
sbb
pop
lock
fisttpll
sbb
push
sub
jne
xchg
ljmp
cmp
jbe
adc
mov
and
pop
fnsave
dec
xor
fisttps
xchg
pop
xchg
or
scas
adc
push
push
in
popf
cmpsb
nop
into
and
or
add
dec
sbb
mov
add
xor
push
das
push
fwait
push
test
sar
jge
roll
lock
call
bound
push
fwait
shrb
or
lret
test
in
mov
xor
add
inc
test
lock
jmp
pop
popf
and
sbb
out
je
push
push
fs
push
add
ret
push
dec
mov
mov
andb
mov
push
xchg
xor
inc
repz
sbb
push
push
cli
pop
adc
addr16
arpl
test
sbb
in
or
add
dec
outsb
repnz
popa
icebp
pusha
xchg
data16
push
xchg
mov
sbb
xchg
push
nop
pop
sarl
jg
addl
popf
xchg
sub
shlb
sbb
pop
push
mov
out
xor
loopne
cmpxchg
sbb
out
and
jmp
ja
bound
inc
fs
xorb
pushf
xor
push
push
shlb
dec
mov
repnz
push
cmc
lock
shrb
push
pop
iret
pop
mov
hlt
cmp
adc
or
pop
scas
add
and
icebp
ljmp
fcom
sbb
pop
pop
and
dec
mov
loope
xor
push
pop
mov
pop
mov
cmc
out
push
sbb
sti
fld1
adc
inc
xchg
or
cmpsl
loope
or
dec
rclb
pop
sub
ficoms
mov
stos
sub
mov
dec
mov
jb
test
inc
sbb
adc
mov
jo
push
mov
mov
jle
push
xor
mov
mov
jecxz
inc
ds
jno
xlat
xchg
add
into
shll
sahf
or
les
inc
fdivr
push
mov
inc
pop
pushf
cmp
dec
ret
dec
sbb
das
cld
fiadds
daa
pop
mov
push
ljmp
movsl
je
or
test
fsubp
fisubrl
adc
leave
add
or
gs
adc
fisttpll
cli
xor
cs
mov
sub
push
dec
push
adc
imul
stos
adc
jp
add
test
mov
int
adc
ds
xlat
js
adc
out
test
pop
jne
xchg
movb
ja
pushf
outsb
inc
fisttpl
stos
cmc
pop
push
push
jnp
sub
leave
inc
in
inc
arpl
xchg
jo
xor
aad
mov
into
cmp
popf
pop
test
int3
outsl
adc
add
adc
jno
mov
nop
mov
mov
inc
jge
call
sar
cmp
ret
sub
mov
and
mov
adc
mov
mov
mov
aas
clc
dec
js
add
cmp
sti
push
cs
cmp
mov
cmpsl
repnz
in
xchg
sbb
repnz
adcb
leave
insl
mov
stc
dec
mov
ss
out
xchg
fs
jnp
cmp
leave
or
rol
cmp
fmulp
fcoms
adc
fstps
xor
fwait
aas
jp
mov
fs
mov
aaa
cmpsl
or
xchg
icebp
aas
in
arpl
push
sbb
ljmp
pushf
cmc
insl
lcall
push
fisubrs
sbb
movsl
out
adc
cmpsb
shlb
popf
sbb
rcrl
sbb
jne
fstps
pop
mov
and
ja
fdivr
jo
jae
insl
mov
lods
and
jb
push
icebp
xor
movsl
pop
inc
insl
sub
and
test
xor
inc
sbb
out
rcl
enter
inc
pushf
loop
dec
inc
filds
aad
or
je
les
mov
pop
inc
lahf
mov
inc
rolb
mov
shlb
and
or
sbb
mov
cmp
mov
mov
cli
xchg
data16
cmc
jne
push
xchg
and
xor
dec
xor
push
mov
xchg
dec
sbb
add
js
test
push
test
and
jge
inc
cmp
mulb
cmp
iret
out
inc
sarl
fcoms
je
std
or
test
sbb
jnp
adc
out
rolb
loope
jg
ja
jbe
insb
pop
daa
or
adc
dec
cmp
lea
sbb
jl
mov
cmpsb
fistpl
xorl
js
pop
push
add
and
aas
pop
or
pop
subl
jbe
push
mov
sub
leave
adc
pop
out
cmp
pop
pop
icebp
adc
mov
int
push
popa
xchg
mov
enter
repnz
xchg
pushf
movsl
mov
clc
xorl
enter
sahf
jmp
or
enter
add
sub
dec
mov
sbb
int
hlt
sbb
xchg
fdivs
ret
push
mov
ret
ljmp
sbb
fnstenv
adc
mov
sub
ja
stos
lcall
out
pop
sbb
jl
inc
cltd
aas
xchg
pop
push
out
mov
call
movsb
pop
mov
fnstsw
push
mov
lods
test
sub
inc
adc
scas
sti
cmp
mov
cltd
mov
jno
adc
mov
and
int3
insl
pop
ja
mov
add
xchg
xor
decl
add
mov
pushf
aam
mov
xchg
inc
jge
inc
mov
popa
sarb
sbb
adc
xchg
sub
iret
lcall
or
xchg
test
scas
xchg
pop
and
push
pop
aam
inc
mov
insb
cmp
rcrb
push
push
adc
push
mov
mov
xchg
cli
cmp
stos
xor
dec
add
data16
add
and
jne
in
mov
lea
jae
lds
xor
add
or
sbb
sbb
xchg
ljmp
dec
cs
cs
inc
adc
pop
movl
addr16
rcrb
dec
cmpsb
scas
dec
mov
mov
add
in
and
outsl
lea
sar
enter
mov
dec
jmp
mov
mov
pop
pop
add
xchg
leave
jecxz
jns
popa
fdiv
mov
sbb
push
mov
andl
movsb
push
adc
std
push
mov
xor
push
and
inc
sbb
cli
pop
pop
push
ret
cmp
mov
outsb
fmuls
adc
push
jo
mov
mov
outsl
out
aam
mov
not
aas
movsb
pop
inc
sbb
inc
mov
adc
lret
lahf
scas
sbb
mov
add
cwtl
loopne
dec
mov
pop
pop
clc
push
int
mov
or
lea
push
cmp
pop
add
cmp
dec
inc
cmp
push
cmpsl
je
pop
in
ret
nop
jge
fcmovnu
and
jns
mov
sbb
sub
push
out
mov
cld
xor
jle
fstpl
je
adcl
mull
push
and
stos
imul
adc
inc
push
pop
clc
lahf
push
mov
and
stc
in
das
out
bound
mov
idiv
mov
inc
jb
popf
mov
mov
xor
outsl
and
xchg
js
adc
aad
fldt
popa
and
shufps
push
fstpl
xchg
in
data16
mov
xchg
insb
mov
enter
setno
in
bound
out
pop
pop
aam
push
jo
arpl
jb
ds
mov
sbb
dec
sub
rcrb
in
lods
mov
dec
xchg
imul
and
cli
pop
inc
pushf
sbb
aaa
cmp
or
adc
mov
push
shr
in
scas
fwait
iret
mov
inc
daa
lods
mov
lods
mov
test
or
cmpsb
andb
cmpsl
cltd
sbb
into
mov
loopne
imul
enter
cs
add
dec
cmpsl
cmp
stos
and
je
dec
gs
xor
imulb
sti
lret
mov
adc
push
push
push
pop
aam
jns
pop
stos
adc
cwtl
push
adc
loopne
out
fs
xchg
add
cmp
fsubrp
dec
out
jle
pop
icebp
insb
in
push
xor
scas
dec
mov
rep
lret
cmp
cmp
stos
dec
jno
subl
inc
xchg
adc
lcall
inc
aam
xchg
fs
inc
and
shrb
xor
cwtl
cmc
pop
push
je
sbb
xor
adc
loopw
fwait
pop
or
mov
sub
push
jle
jns
es
js
test
lret
jns
dec
dec
out
mov
add
mov
sbb
push
in
fstpl
out
xchg
outsb
mov
stos
into
add
inc
leave
cmp
push
mov
das
or
xor
pcmpeqw
push
dec
lret
push
inc
add
gs
or
in
daa
icebp
push
repz
insb
push
stos
xor
fbld
push
hlt
mov
fdivl
repz
mov
pop
js
push
lahf
pop
stos
cmp
repnz
lcall
jb
aad
push
mov
sub
arpl
jp
shll
ss
stos
sub
imul
pop
adc
movsl
arpl
jns
clc
sub
iret
adc
sub
mov
mov
outsb
cmp
cmp
ja
add
popf
addl
lds
mov
jecxz
pop
push
andb
push
stc
rclb
test
jb
pop
dec
sub
sub
lds
outsb
lods
mov
mov
clc
xor
scas
jp
sub
lcall
mov
jle
repnz
std
push
inc
add
xchg
jo
dec
add
jle
rclb
xchg
in
cmpsl
adc
lahf
jge
icebp
cmp
sbb
pop
adc
into
mov
loop
hlt
cmpl
fcmovnb
out
add
dec
cwtl
sbb
repnz
hlt
das
push
cmpl
xor
iret
add
fldenv
nop
sbb
les
loopne
or
jb
mov
loope
lcall
mov
dec
imul
dec
xor
xor
push
inc
adc
mov
in
and
das
scas
leave
add
cmpsb
pop
out
addl
mov
dec
jl
popa
decl
sub
sti
in
lret
sti
mov
adc
and
sbb
jb
pop
maxps
xchg
aaa
push
cmp
add
sbbb
mov
sbb
push
insl
test
cli
repnz
push
addb
dec
js
add
adc
scas
pop
xchg
lahf
in
adc
movsb
pop
xchg
test
jo
sbb
outsl
fsubrl
sub
clc
mov
mov
filds
ja
push
mov
outsb
adc
arpl
adc
cwtl
push
push
leave
mov
mov
jmp
jb
neg
jnp
scas
std
mov
testb
lret
out
adc
pop
lods
insl
push
lds
cmp
pop
pop
sub
mov
dec
pop
sbb
outsl
mov
push
hlt
jp
jae
imul
pop
std
or
in
ja
je
dec
xchg
ljmp
shlb
cs
xchg
pop
sbb
lret
mov
mov
adcl
fs
xor
inc
lods
adc
cwtl
iret
je
mov
mov
ficomps
jne
mov
cmpsl
sbb
and
adc
test
mov
shl
mov
push
fcompl
dec
enter
xchg
fld
clc
mov
mov
xchg
xor
pop
retw
daa
xchg
jno
or
mov
xchg
xchg
or
or
call
fistpll
sub
inc
dec
push
das
ds
pop
fcomps
push
scas
and
mov
sub
int3
mov
and
add
cld
icebp
iret
out
cwtl
cmp
xlat
inc
lds
or
jle
test
leave
jp
popf
lahf
out
dec
sub
pop
sbb
jno
lea
in
pop
xor
and
xor
leave
imulb
jle
add
pop
fld
sahf
and
mov
mov
ja
sub
adc
mov
andl
push
push
cmpsb
fldcw
pop
rcl
movsl
hlt
enter
stos
adc
push
pop
shll
mov
sbb
sub
mov
push
ljmp
mov
or
ja
movsl
push
inc
aad
push
fdivrs
dec
and
xchg
jmp
adc
xor
movsl
into
jp
cmp
push
das
xchg
adc
test
xor
xor
subb
or
movsl
movsl
or
pop
jbe
adc
leave
iret
jmp
jno
hlt
xchg
mov
add
mov
and
add
out
adcl
cli
rorl
scas
ds
xchg
dec
push
mov
xor
xchg
or
pusha
in
in
dec
das
cmp
pop
icebp
mov
xchg
mov
daa
inc
stos
xor
pop
jle
cmp
sbb
sbbl
pop
imul
int
mov
xchg
inc
push
push
add
lcall
jnp
jl
jnp
enter
mov
lock
cmp
mov
mov
mov
inc
icebp
mov
dec
jns
inc
icebp
mov
stos
xor
out
ret
push
cmpsl
or
mov
mov
jb
mov
insl
jne
mov
cwtl
es
leave
sti
rorb
shll
fcoml
push
rcl
dec
xor
fldcw
xor
xchg
setp
xchg
or
add
jo
sbb
xchg
inc
sub
orb
adc
xor
icebp
nop
aas
sbb
xchg
cmp
jp
xchg
repnz
mov
xchg
mov
pop
es
in
pop
xchg
push
mov
mov
mov
inc
aaa
sbb
jmp
hlt
ds
pop
aad
sbb
dec
adcb
aaa
mov
jmp
lea
insb
dec
cmp
xor
lcall
pop
or
cwtl
sbb
popl
mov
scas
aas
mov
outsb
mov
cwtl
inc
cmp
push
sti
hlt
mov
and
rorl
ret
xchg
mov
outsl
scas
scas
cli
addb
sarl
mov
out
loop
pop
lock
cmp
push
enter
mov
ljmpw
ret
xchg
push
rcr
dec
pop
iret
popf
sub
pop
je
daa
loopne
push
inc
cmc
jge
mov
addb
rclb
dec
int3
jle
pop
mov
nop
aam
inc
mov
and
sbbl
das
xchg
cltd
sahf
mov
loopne
int3
jae
loop
andb
ja
lcall
xor
movsb
push
jns
mov
dec
in
mov
test
sub
add
mov
sbb
inc
fisubrl
test
popl
ds
cli
pusha
scas
cwtl
or
lds
push
in
testb
fdivr
outsb
cmp
pop
aad
aaa
movsl
mov
lcall
inc
cli
cmc
xchg
add
and
jbe
mov
fiadds
pop
into
roll
in
cmovge
fnstenv
mov
jne
rorl
sbb
enter
in
jecxz
scas
in
mov
bound
xor
loope
shl
enter
cltd
pop
daa
inc
lret
pop
add
inc
into
lahf
sbb
loop
pop
push
fwait
sub
sub
mov
mov
mov
icebp
mov
sbb
pushf
in
push
aam
int
mov
fists
pop
sbb
mov
sub
mov
sti
xchg
popf
jbe
push
mov
sbb
testl
loope
and
xorl
mov
and
fdivl
ss
xor
lahf
bound
outsl
dec
cmp
inc
mov
in
inc
xchg
lea
call
mov
call
rolb
dec
stos
lret
xchg
push
push
inc
aam
mov
xchg
adc
movsl
xchg
xorl
test
popf
clc
jmp
mov
push
outsb
je
call
ret
push
dec
jae
imul
icebp
or
mov
push
daa
jg
stos
fimuls
sbb
cmp
mov
cmp
and
aad
xchg
mov
sbb
pop
xchg
cmpl
and
fwait
call
dec
aaa
cmp
or
xlat
mov
mov
push
call
jnp
xor
pushf
push
jo
dec
orl
cmp
sub
sbb
add
ss
ret
movsl
and
pop
ret
cmpsb
jo
leave
push
addb
arpl
jmp
sti
ljmp
and
adc
ss
or
inc
bnd
bound
jo
cs
sbb
dec
lahf
or
fsubrs
stos
shlb
push
add
test
out
in
jg
jo
inc
xchg
xor
inc
sarl
inc
je
stc
push
jl
xchg
pop
loope
mov
sbb
sub
mov
outsb
inc
mov
int3
sub
movsb
clc
inc
ret
xchg
xor
dec
das
lcall
push
mov
in
push
nop
cmp
fildl
xor
or
fstl
jmp
movsl
mov
in
bound
lcall
loopne
fsts
and
pushf
cltd
xor
jl
test
gs
fnstenv
aaa
outsb
dec
std
cmp
jne
jg
mov
jbe
add
mov
mov
fmull
les
clc
ret
test
mov
daa
shll
sbb
pop
scas
pushf
mov
je
push
or
in
and
push
loopne
jecxz
cmc
xchg
push
repz
push
and
inc
pop
dec
mov
xchg
xor
add
xchg
stc
sbb
aas
push
in
cmp
int3
pusha
jno
cmp
cmc
outsl
out
mov
pushl
hlt
andl
mov
add
mov
mov
movsb
mov
das
push
jae
sub
push
fimuls
test
sbb
das
out
lods
mov
sbb
mov
out
test
xchg
movsl
sub
dec
lret
pop
xchg
mov
xor
jecxz
sbb
cli
mov
in
and
aad
stos
mov
mov
and
icebp
adc
xchg
fidivrl
pusha
and
loopne
mov
dec
sbb
das
fsub
arpl
in
adc
and
inc
dec
jle
loope
cmp
clc
dec
pushf
push
shl
jecxz
jmp
pop
lods
push
shl
cwtl
and
test
dec
sub
cli
inc
stos
push
jne
mov
add
mov
add
and
xor
inc
mov
fistpl
sahf
and
mov
lds
ja
testb
je
ror
xchg
movb
ljmp
adc
push
aam
nop
sub
mov
aaa
sub
add
lock
ja
xchg
aam
adc
aad
dec
jno
aam
sti
jecxz
arpl
fildl
inc
sbb
mov
stos
fnstsw
repz
outsb
inc
jle
movsb
jmp
cld
loopne
push
mov
sub
lods
sarl
movsl
idivb
inc
push
jl
aam
jecxz
in
add
test
xchg
sbb
mov
mov
add
andl
push
push
and
add
or
repz
leave
mov
push
jo
fwait
jmp
add
subb
enter
out
dec
mov
scas
dec
mov
and
push
out
test
negb
sbb
andl
out
sar
icebp
push
test
rcr
lea
jg
ljmp
push
jp
mov
xchg
mov
test
sbb
mov
lds
mov
sub
or
inc
fidivs
fisttpl
mov
push
cwtl
and
or
jne
pop
inc
xchg
mov
fldcw
repz
outsl
ret
movsb
sub
cmp
sbb
adc
insl
adc
sbb
iret
lods
lret
inc
test
stc
jmp
stos
mov
xchg
imul
ja
movsb
cmp
movsb
and
jne
jg
sub
push
movsb
adcl
fwait
mov
add
sbb
mov
bound
in
mov
fdivl
mov
pop
sub
pop
mov
popf
aam
aad
sarb
mul
xchg
pop
call
imul
sub
andl
xchg
cmp
adc
divl
test
ficoml
jno
xchg
rorl
inc
xchg
xor
or
jo
adc
aam
js
fisubrl
mov
xor
cltd
aam
and
mov
pop
inc
adc
int
stc
fstl
sub
sbb
clc
dec
mov
adcl
sbb
pop
insl
mov
push
or
jp
inc
pop
jecxz
or
and
xor
aas
jne
popf
mov
into
lea
rclb
mov
nop
jge
jne
sub
fimuls
or
pop
sbb
mov
rolb
xchg
or
lods
push
dec
mov
pop
mov
orb
dec
aam
stos
cli
cmc
sub
mov
out
das
test
pusha
ret
rcl
nop
cmp
mov
mov
mov
popa
inc
das
les
lret
push
xchg
out
sarl
in
mov
ds
lea
frstor
scas
arpl
jg
stc
push
inc
inc
add
sub
mov
test
out
sub
dec
cmc
orl
mov
jno
xchg
in
call
pop
add
and
mov
mov
mov
or
arpl
sub
movsb
inc
outsl
or
sbb
add
out
mov
pop
and
nop
mov
fldenv
aas
cmp
push
clc
lea
arpl
inc
inc
cmp
xlat
enter
lock
lods
mov
push
dec
mov
int3
inc
cmpsb
into
ret
and
add
or
sbb
inc
jno
xor
xor
lcall
xchg
sbb
enter
test
jb
lods
jecxz
js
cmpsl
and
stc
scas
jne
cwtl
pop
dec
jae
call
xor
mov
push
fwait
int3
ret
mov
mov
push
pop
adc
xchg
push
test
sub
jle
idiv
sub
aad
sub
push
bound
push
dec
xchg
sub
jmp
inc
push
mov
jnp
xor
out
push
ss
xchg
dec
stos
mov
pop
cmp
insb
sbb
xchg
cmp
push
rorl
je
xchg
push
mov
push
sbb
mov
inc
imul
lods
outsl
lods
add
push
hlt
aam
pop
imul
stc
pop
jmpw
loop
jne
ror
jmp
test
insb
xor
nop
and
stc
sbb
push
imul
imul
cltd
testl
pop
iret
test
sbb
inc
push
mov
push
out
test
data16
sbb
int3
mov
outsb
add
and
insl
lcall
in
or
call
mov
cmp
xchg
cmpl
stc
mov
xchg
mov
lods
mov
frstor
insb
rcll
jmp
mov
mov
pop
ljmp
sub
sub
int
sub
mov
mov
xor
mov
mov
inc
test
and
lcall
icebp
fucompp
das
mov
mov
or
push
add
mov
sub
jae
dec
sbb
dec
inc
sub
or
adc
sbb
jl
cmp
inc
and
lock
test
test
lea
cmp
mov
iret
cmp
fdivs
push
and
lock
adc
ja
andl
dec
or
js
mov
or
js
mov
xor
cmpsb
in
sti
pop
mov
lods
add
and
repnz
testb
sbb
mov
loope
pop
and
xor
jp
jmp
sbb
push
mov
lea
jb
push
jae
jns
cmp
dec
xchg
test
pop
or
mov
inc
dec
xor
and
mov
push
or
cli
add
js
sbb
repz
mov
scas
mov
cmp
gs
in
iret
jb
stc
arpl
and
insb
xorl
fnstsw
pop
dec
addr16
out
cli
jnp
in
or
sbb
mov
push
pushf
jb
pop
in
jae
shll
repnz
adc
push
sub
pop
add
jge
std
mov
sub
dec
mov
rclb
xchg
aas
stc
icebp
fstl
movsl
mov
andl
fists
or
int3
cmp
icebp
xchg
or
and
fs
pusha
pop
mov
aam
aad
int3
jbe
jns
lock
mov
jae
test
inc
cmc
pop
mov
pusha
popa
dec
push
or
pop
dec
sub
ljmp
cmp
sub
mov
mov
int
orl
in
insl
ljmp
add
mov
test
cli
inc
jg
fwait
js
test
ret
sub
add
aaa
pop
nop
daa
inc
sub
mov
add
lds
adc
inc
xor
loop
cmpsb
lods
insb
dec
test
popf
pop
dec
mov
xor
push
inc
mov
insb
xchg
mov
cmp
cmp
fmul
push
stc
outsb
in
lock
or
pop
adcl
mov
shrb
out
pusha
dec
lret
dec
and
push
mov
iret
outsl
sbb
cltd
into
add
scas
int
es
and
jno
push
icebp
aaa
movsb
mov
cmp
loopne
cmp
addb
add
xor
cs
ja
sbb
pop
out
out
daa
mov
inc
pop
test
sbb
mov
mov
test
sbb
jb
leave
pop
mov
xor
mov
xor
je
test
xlat
mov
push
lock
xor
adc
or
push
or
sub
icebp
mov
push
into
fnsave
mov
adc
or
add
arpl
outsl
xchg
push
fwait
pop
xchg
addr16
dec
mov
mov
bound
mov
or
mov
outsb
push
mov
enter
pop
movsb
fstl
xor
xor
in
insb
mov
pushf
mov
jle
pop
mov
stc
repz
mov
cmp
mov
enter
daa
push
mov
dec
icebp
aad
sbb
xchg
stos
test
sbbb
notb
xor
jns
popf
fsubrp
adc
mov
aam
pusha
sbb
mov
push
aad
popa
call
mov
cmp
xor
adc
cwtl
mov
mov
mov
inc
cmp
mov
subb
lahf
cmpsb
aam
fmuls
push
or
cld
pop
sub
lods
repnz
insb
mov
shl
inc
dec
adc
leave
cld
adc
hlt
lds
adc
test
jle
loopne
insl
jo
push
xor
fstp
sbb
or
cmpsl
mov
xchg
loop
adc
mov
mov
jp
xchg
mov
mov
pusha
xor
jp
stos
rcrl
mov
rorl
push
out
cmpsl
popf
pushf
xor
dec
jg
jg
mov
xrelease
outsl
or
jnp
aam
hlt
test
aam
jnp
add
or
xor
xchg
into
sbb
pusha
push
sub
cmp
hlt
sahf
xor
push
dec
cmc
push
mov
xchg
xor
sub
push
popa
mov
sahf
aas
mov
inc
sbb
lods
mov
pop
dec
fidivl
rorl
in
inc
mov
lret
jno
ja
cwtl
popa
xchg
push
and
or
xor
cmc
mov
bound
je
in
and
xchg
lea
adc
addb
mov
sahf
jmp
push
mov
lret
stos
repz
xchg
pop
jns
in
pop
test
jno
sbb
or
test
les
pop
dec
adc
adcb
fldt
sbb
fwait
inc
and
xchg
fsubrs
pusha
cmp
ret
into
stos
push
icebp
ja
int
push
mov
pop
sbb
sbb
loope
pop
xor
push
repz
dec
mov
out
ds
out
stos
scas
mov
mov
movsl
xor
sbb
ficompl
rol
cwtl
jo
loope
push
ljmp
cmp
test
jl
inc
add
adc
add
mov
imul
hlt
inc
mov
call
popf
aaa
mov
pusha
jae
loop
aaa
add
lret
push
jnp
movsb
push
dec
cmp
cmp
fucom
std
mov
pop
cmpsb
out
lcall
add
sarb
insl
xchg
xor
jp
or
mov
call
lods
push
mov
pusha
jno
int3
dec
aad
movsb
inc
jnp
and
cmp
mov
imul
rcll
dec
ja
sub
xchg
adc
into
and
adc
ss
cmpsb
stos
outsb
sub
xchg
test
cmp
pop
fimull
cld
add
mov
adc
int
out
cli
jno
dec
add
push
int3
or
cmp
icebp
sub
test
jl
cmp
sub
adc
cmp
je
scas
xor
inc
jo
ja
sbb
xor
fsubp
mov
ret
fucomi
pop
sete
dec
jbe
test
push
mov
mov
pop
inc
jmp
or
dec
int3
test
pop
cli
lret
fsubr
cmp
inc
pop
scas
insb
xchg
xchg
xor
loopne
sahf
enter
cmp
data16
push
aad
jno
and
cmpb
jne
add
jne
jo
mov
and
xchg
xorl
adc
xchg
loop
rorb
pop
push
andb
mov
sbb
popl
clc
insb
pop
mov
outsl
or
jnp
out
adc
sub
lcall
sbb
nop
xor
rclb
jno
ret
mov
lret
push
jg
adc
out
and
or
mov
mov
stc
int3
out
inc
push
mov
push
test
lret
mov
inc
cwtl
mov
scas
pop
sti
or
mov
pusha
out
add
ja
mov
xchg
mov
xor
push
popa
dec
dec
mov
scas
inc
or
mov
cmc
mov
aas
aam
pop
xchg
addr16
jecxz
jns
pushl
jbe
call
addr16
out
sbb
jbe
and
or
add
mov
xor
xchg
stos
dec
adc
call
sbb
sahf
dec
dec
mov
push
push
ficoms
inc
aad
cmp
loop
insl
loopne
dec
add
in
push
loope
rcl
push
fidivl
mov
jne
push
repz
scas
jo
xlat
push
imul
jae
cmp
ffreep
sbb
and
or
mov
cmp
jnp
dec
adc
repnz
mov
sub
cmpb
sub
jg
jmp
adcb
loope
addr16
dec
push
outsb
repz
jnp
dec
mov
ss
or
mov
cld
lock
and
lret
rclb
out
scas
imul
loop
sbb
push
sti
inc
mov
mov
in
dec
sbb
inc
outsb
cmpl
dec
ret
daa
fwait
rcll
adc
mov
xchg
aad
add
ja
inc
shll
ds
in
or
hlt
push
shll
mov
mov
fadd
inc
js
xor
fldenv
sarb
pop
mov
aas
adc
sub
mov
xchg
into
xchg
mov
mov
ficompl
xchg
sbb
push
xchg
push
inc
dec
les
mov
fldcw
xor
or
cmp
jnp
aam
add
mov
popf
cs
in
test
repz
and
lock
aas
lock
pop
mov
icebp
adc
sti
fsts
push
pop
gs
cmp
out
into
repz
inc
roll
test
out
incb
jbe
sbb
add
in
jle
xchg
add
push
and
lods
nop
sbb
inc
fwait
xchg
lret
adc
int3
addr16
pop
pop
iret
js
mov
jecxz
mov
arpl
mov
pop
mov
jge
cmc
push
mov
out
mov
repz
pop
cmp
sub
push
aam
jo
inc
scas
cwtl
out
fs
xchg
icebp
test
aad
ffree
xchg
addr16
inc
jno
inc
les
xchg
and
xor
pop
pop
aaa
pop
dec
add
mov
leave
jb
or
addr16
cli
jo
and
out
ret
imul
and
out
ljmp
dec
iret
outsl
test
popa
fiadds
sub
jb
jb
sbb
xor
shrb
inc
or
xchg
inc
inc
jno
cmc
ds
push
fidivrs
sbb
jne
jmp
mov
loop
inc
data16
std
add
xchg
les
sbbl
add
rorb
mov
aad
and
sub
push
sbb
push
fimuls
negl
stos
ds
pop
sub
push
call
nop
adc
scas
sarl
fcomps
dec
rcr
sub
aas
sbb
mov
mov
stos
jge
insl
and
pop
cwtl
xchg
addr16
gs
pop
aam
mov
mov
or
fnstcw
sbb
sbb
push
hlt
mov
mov
fdivs
rcl
hlt
out
sarb
lods
inc
cmc
jecxz
lret
push
popa
aaa
out
std
mov
arpl
pop
dec
andl
je
pop
clc
xorl
outsb
lret
pop
imul
and
decb
out
mov
cmc
mov
orl
or
stc
sbb
or
and
shll
clc
stos
cld
pushf
push
sbb
jp
sbbl
xor
pop
and
das
sarl
sbb
or
ja
int
aam
xchg
sub
int
ja
shll
lea
sbb
aaa
pushl
mov
testl
adc
lock
sbb
inc
movsb
test
pop
test
popl
stc
mov
mov
in
adc
into
test
nop
pop
mov
mov
cmp
stos
gs
addr16
mov
or
adc
into
fists
dec
push
jmp
dec
popf
lcall
jns
cmp
sbb
inc
mov
pop
loope
cmp
adc
and
push
addl
stc
jne
fs
sub
scas
daa
pushf
mov
or
jns
ljmp
pop
and
mov
add
adc
adc
mov
xor
in
int
jae
loope
fmull
ds
add
add
sti
or
scas
pop
roll
cmpsl
orb
dec
pop
mov
test
adc
mov
mov
sbb
fwait
sahf
jecxz
mov
pop
sahf
cmpsl
in
imul
cmp
popf
mov
arpl
pop
sbb
mov
lock
idivb
adc
pop
or
adc
clc
inc
in
movb
pop
xchg
pop
mov
in
cmpl
repz
cmpsl
pop
and
orl
hlt
mov
inc
leave
and
insl
icebp
jp
mov
aam
mov
mov
sysexit
mov
xchg
inc
cld
stc
sbb
adc
push
dec
push
mov
cltd
and
pop
sar
adc
dec
insl
les
out
pop
retw
lret
je
aaa
or
mov
cs
bound
notl
pushf
inc
sub
sub
sbb
out
jmp
xrelease
movsl
es
lret
pop
cmp
scas
pop
sbb
cmp
sub
cmp
in
movsl
push
cmp
and
lods
cmpsb
fldl
cmp
mov
xor
xchg
inc
addr16
fstl
mov
jle
xor
jne
lahf
notl
fbstp
push
cmp
sbb
inc
out
into
adc
je
dec
sub
push
xchg
xchg
push
es
cmc
mov
dec
ret
cmp
push
test
sahf
sub
xor
test
and
enter
call
in
aam
test
in
iret
loop
int3
pop
and
cs
jnp
push
test
pop
cltd
scas
fwait
movsb
and
sub
jge
out
subl
pop
arpl
inc
and
mov
mov
outsb
call
fbstp
jo
in
jge
addl
clc
push
adc
push
cli
xlat
fwait
mov
dec
je
into
in
and
gs
sub
push
test
push
popf
mov
and
xor
lock
push
sti
pop
hlt
lods
mov
sbb
daa
scas
cmp
mov
cmp
or
fidivs
mov
call
mov
int
nop
push
fs
repz
xor
inc
in
mov
lods
and
js
fsubr
adc
gs
sub
add
xchg
popf
jl
cltd
dec
mov
xchg
xor
js
push
cmp
stc
add
repz
je
xor
aam
jnp
dec
std
je
dec
lods
cwtl
icebp
xchg
inc
pminsw
shl
cmp
gs
xchg
lahf
in
pop
cmp
jae
mov
pushf
shrb
out
push
stos
test
push
lea
shr
dec
not
aaa
movntps
repz
jl
xlat
test
dec
sbb
es
test
and
pop
jnp
dec
popa
pushf
jp
sub
jnp
xchg
scas
xchg
cmp
sub
sub
pop
xchg
repz
push
sbb
int3
mov
pop
movsl
mov
or
cmpsb
addl
aad
xor
mov
clc
lahf
mov
jnp
into
popa
sub
mov
icebp
imul
xchg
add
rorl
js
fldenv
je
mov
inc
dec
bound
mov
insl
sti
push
adc
mov
leave
popf
aas
fcmovne
sbb
inc
lcall
add
fldt
sbb
fisubrs
jg
aas
int3
mov
shl
cwtl
pop
pop
sbb
outsb
bound
inc
movsb
popf
push
adc
rol
mov
movl
lock
and
pop
sahf
dec
les
xchg
jmp
aam
mov
inc
mov
xor
jne
ja
mov
cltd
inc
pop
pop
cmp
xor
nop
stc
pop
cmp
in
pop
or
jmp
mov
lods
adc
dec
out
xchg
jp
nop
dec
lea
push
pop
xchg
ror
dec
push
and
mov
push
sldt
pop
adc
movsl
cmp
sub
pop
mov
das
dec
aas
push
add
fs
fucomip
xor
ja
scas
pop
pop
adc
jmp
xor
subb
push
and
inc
sub
mov
subl
or
or
sbb
xchg
add
ss
sbb
xchg
xlat
js
popf
mov
test
shrb
xor
adc
mov
pop
xchg
in
mov
repz
scas
or
mov
jo,pn
loope
das
cmp
test
dec
jno
shl
movsb
dec
sub
mov
push
inc
cmp
or
dec
or
mov
sub
movsl
jnp
push
fdivl
xchg
pop
mov
mov
xor
add
mov
les
shlb
add
inc
jecxz
pop
rcl
mov
popa
jg
shl
inc
cmp
jne
pop
jle
addl
int3
sub
pop
incl
sub
loope
push
mov
fisubl
movl
adcb
pop
sbb
loope
xor
out
xor
btr
loope
ja
sarb
lcall
pop
dec
movsl
loope
mov
or
sti
ret
shr
jae
hlt
out
or
js
add
out
lret
mov
out
lcall
stc
and
insl
and
xor
in
lcall
imul
int
imul
inc
sbb
movsl
ds
xchg
outsl
enter
fldcw
pop
cwtl
mov
mov
in
mov
in
sub
rclb
jmp
popf
sub
xor
push
incb
dec
pop
in
lock
and
mov
rorb
jg
std
popa
mov
or
pop
lret
dec
fs
sti
mov
pop
xlat
rorl
mov
lods
xchg
sub
mov
sub
sbb
push
sbb
inc
inc
add
sub
and
jg
ja
in
fisubrl
or
pop
cli
mov
cwtl
shll
icebp
les
cmc
fcmove
push
pop
jne
or
and
push
sub
dec
rolb
popa
leave
xor
out
xchg
in
mov
pop
filds
sub
sbb
and
mov
cld
mov
pusha
ret
ja
inc
pop
dec
movsb
dec
sahf
xchg
mov
rclb
jo
ljmp
xchg
xchg
fildl
or
dec
push
mov
stos
and
loope
lods
popl
icebp
cwtl
call
pop
xor
cmpl
fisttps
lret
cs
repz
outsl
ljmp
xor
push
inc
out
insb
jbe
cmpsl
cltd
pop
sub
cmpsb
xchg
adc
das
pop
int3
icebp
jecxz
adc
test
dec
aaa
mov
pop
vmovaps
jnp
andb
fisttps
dec
pop
cmp
rcl
jp
aaa
and
cmp
pop
call
pop
mov
loop
mov
xlat
inc
in
orl
inc
outsl
xor
aas
mov
sub
movsb
jae
and
push
stc
mov
xor
dec
pop
sub
sub
idivb
xchg
js
push
clc
sbb
mov
lret
js
and
out
or
rclb
in
test
ss
xchg
in
and
mov
imulb
int
add
das
fsubs
fnstsw
mov
mov
pusha
ret
xchg
bound
dec
mov
ljmp
adc
cs
daa
std
fs
jge
sti
fisttps
test
stc
lea
iret
sbb
movsb
dec
test
push
jl
dec
and
sub
ret
push
mov
mov
xchg
jnp
sbb
ja
dec
jle
cmp
mov
sub
outsb
pop
loop
out
pop
test
in
test
lret
jmp
xchg
or
mov
gs
lea
daa
adc
or
dec
lods
push
leave
rorb
push
stos
xchg
push
dec
adc
pop
dec
cmpsb
mull
pop
sbb
shrl
adc
xchg
pop
aam
ss
int
adc
inc
int3
adc
dec
stc
ss
ss
xchg
pop
adc
mov
aam
js
mov
sahf
repz
pop
dec
dec
cmpsl
cs
jle
jo
fstpt
inc
mov
dec
daa
or
fists
dec
mov
cmp
daa
int3
jno
imulb
adc
adc
and
xor
mov
inc
pop
ja
popa
jae
es
push
dec
push
adc
push
or
repz
sub
or
cli
mov
notl
aam
int3
ret
ljmp
inc
hlt
orb
rcrb
out
ja
loope
inc
adc
push
mov
and
cs
inc
rolb
mov
rcrb
push
pop
mov
popf
in
sub
in
call
in
push
mov
add
pop
jae
lret
xchg
add
imul
push
xlat
cmp
sbb
and
mov
into
ror
cmp
jno
mov
mov
push
adc
sub
xchg
hlt
push
mov
stos
inc
or
pop
into
mov
inc
and
pop
mov
mov
fildll
aaa
inc
inc
std
repnz
cmc
add
or
cli
outsl
jb
inc
out
mov
pop
pop
addr16
rcr
les
jb
es
inc
lcall
cmpsb
jae
adc
sub
sbb
mov
mov
xor
ja
loope
add
dec
std
sub
and
dec
and
push
mov
cmp
or
cmp
or
inc
sahf
shlb
rcll
je
hlt
dec
ss
mov
xor
addr16
dec
lahf
cld
dec
push
inc
stos
xchg
test
mov
push
mov
sub
movb
jb
pop
push
or
add
push
add
add
sti
nop
sarb
outsl
icebp
xchg
fldt
ficoml
push
mov
mov
les
lods
pop
sbb
push
mov
mov
fbstp
xor
jp
iret
in
mov
insl
es
pop
cltd
mov
jns
jecxz
sarl
pop
dec
jg
pop
sub
data16
mov
icebp
fmull
xchg
insb
xor
jo
pushf
and
xchg
test
ljmp
rorb
fisttpl
imulb
pop
lea
fiaddl
jb
je
rcl
hlt
mov
call
mov
jbe
push
jge
xor
push
sub
jl
int
add
add
pop
out
sbb
daa
test
sbb
pop
sub
into
jl
nop
xor
xor
aas
mov
add
aaa
scas
jmp
cltd
and
push
mov
adc
pop
jmp
cmpsl
jmp
xchg
gs
inc
addr16
add
insb
dec
pop
push
movsl
push
pop
pop
in
push
dec
cwtl
sahf
pop
movsb
lret
jecxz
hlt
lods
cmp
test
daa
jecxz
cld
push
inc
or
cltd
jb
popa
outsb
adc
sbb
fcom
lea
jno
sub
cmpl
mov
outsb
xchg
jmp
mov
mov
cmovp
decl
jbe
push
xchg
int3
push
andl
inc
add
aad
pop
fsubrs
push
rolb
jecxz
cmpsl
cmp
mov
mov
add
jnp
ficoml
and
imul
jno
jmp
mov
jmp
scas
dec
lret
rol
dec
pop
ljmpw
dec
cld
hlt
mov
push
push
mov
outsb
xor
or
mov
mov
jmp
popf
js
sub
mov
add
js
cld
imul
in
sub
mov
aam
fsubs
mov
xor
outsl
cmp
cmpsl
jnp
sbb
imull
mov
xor
pop
int
icebp
cwtl
cmpsl
stos
xchg
xorl
stos
loopne
dec
mov
sti
cmp
imul
or
ficomps
aam
add
pop
int
mov
jp
cld
int3
pop
xchg
sub
xchg
fisttps
movsb
repz
xor
add
aaa
repnz
sbbl
mov
mov
stos
es
xchg
or
dec
push
std
fistpll
lock
clc
xor
addr16
notl
push
adc
into
cmc
sub
sub
leave
gs
push
mov
xchg
repz
mov
sbb
sbb
pop
movsb
sbb
cmpsl
push
sbb
ljmp
addr16
lods
pop
lcall
inc
int3
addr16
cs
inc
icebp
pop
pop
adc
mov
or
add
mov
daa
add
lods
lret
test
sbb
test
test
adc
cltd
pop
pop
sbb
movl
ret
cmp
push
cmp
repnz
jmp
int
inc
rcll
cmpb
xchg
ret
popf
pushf
jp
jmp
jne
fwait
movsb
inc
shrl
data16
les
pop
insl
and
das
xchg
gs
int
xchg
sbb
mov
test
sbb
sbb
cli
xor
sbb
push
das
inc
and
int3
add
mov
jb
mov
andb
and
fcoms
cmp
inc
jae
mov
cwtl
pop
push
sbb
lret
xor
adc
dec
push
or
xor
or
inc
fcoml
orl
icebp
out
or
imul
and
out
sub
sub
out
inc
cltd
xchg
aam
add
xchg
lcall
xchg
aad
push
pop
xchg
xor
popf
daa
xchg
cmpsl
aaa
push
repnz
jl
mov
xchg
movsb
roll
aaa
iret
lods
clc
jo
sar
xor
add
stos
in
imul
repz
pop
xor
xchg
lods
cltd
loopne
inc
pop
mov
arpl
jle
mov
dec
test
imul
fistl
mov
sbb
jg
mov
dec
test
push
ss
stos
inc
push
inc
imul
movsb
cmpl
decl
shr
scas
mov
imul
dec
leave
or
cli
push
sahf
fcmovb
push
pusha
xchg
adc
dec
or
jecxz
or
ret
push
icebp
in
lret
jbe
test
aas
je
and
sub
das
into
and
test
aaa
mov
mov
adc
shll
mov
jle
dec
stos
std
mov
sahf
cs
or
cmovs
pop
in
pop
roll
icebp
mov
into
mov
gs
xchg
pop
test
and
fisubl
ljmp
ljmp
lds
orl
mov
imul
lret
arpl
push
jge
sbb
sub
dec
jns
imul
mov
dec
stos
lcall
sbb
leave
enter
int3
or
mov
pop
mov
and
adc
mov
movsl
jae
inc
push
nop
xlat
call
scas
pusha
nop
pop
pop
push
sbb
je
push
shrb
daa
jnp
in
jns
in
sbb
repz
fistpll
dec
mov
inc
xor
jecxz
lds
lods
mov
xchg
inc
and
test
jbe
loopne
imul
testl
add
xchg
push
bound
add
jb
jae
or
sbb
jbe
insb
orl
aaa
pushf
push
jne
adc
out
mov
fidivs
dec
js
aam
adc
xor
daa
lea
add
add
push
mov
fsubp
lods
fdiv
inc
idivl
pop
ljmp
repz
insb
add
out
insl
inc
xchg
sbb
or
push
lds
mov
hlt
xor
push
movsbl
adc
inc
repnz
push
lea
mov
dec
movsb
lods
ss
cmp
fwait
mov
mov
xchg
clc
mov
mov
fcoml
mov
stc
mov
pop
xchg
enter
call
stos
xlat
or
add
xchg
cld
das
push
dec
enter
popw
mov
fsubrl
iret
sub
aas
imul
gs
inc
dec
mov
in
sarl
dec
cmp
mov
sar
adc
fdivrs
mov
or
lcall
add
mov
pop
adc
and
sub
xor
push
add
ja
jecxz
xchg
add
frstpm(287
imul
aaa
test
aas
inc
test
in
inc
add
movsb
dec
fsubl
xor
rclb
in
sti
cli
outsl
or
dec
popf
pop
mov
bound
push
ljmp
and
jle
or
lock
scas
jo
mov
in
rcrb
pop
cmp
dec
cmp
aas
das
rorl
das
es
jnp
xor
dec
pushf
sbb
dec
pop
loopne
repz
in
sti
mov
js
mov
dec
cmp
pop
es
add
cmc
call
jb
lcall
or
add
dec
mov
or
pop
data16
lods
push
aam
jno
adcb
out
das
jmp
clc
ja
mov
xchg
and
push
out
sub
jne
mov
pushf
aaa
pushf
sub
jb
xchg
cmpsb
dec
cmpsl
pushf
adc
xor
aam
pop
sbb
andps
add
jne
mov
xlat
ret
inc
or
mov
adc
cmp
mov
push
push
les
sbb
iret
jecxz
cmp
jo
jbe
nop
and
cmp
mov
jmp
jl
inc
jp
jb
and
sbb
les
sahf
or
jl
je
and
fsubrs
movsl
fadds
in
int3
sub
jb
xchg
pop
jl
mov
pop
mov
or
dec
repz
sub
in
push
adc
dec
data16
and
std
push
pop
push
fcmovne
jg
mov
jmp
stc
lods
sti
fmuls
test
mov
ljmp
cmpb
push
js
adc
add
xor
shrb
pop
or
in
test
dec
push
mov
jae
sahf
jno
mov
loop
mov
jle
ret
cmp
into
adc
lret
or
or
lock
daa
arpl
imul
xor
mov
xchg
mov
pop
sti
inc
inc
fidivrl
mov
hlt
popa
sbb
lds
mov
add
pop
insb
xor
pop
push
movsb
adc
push
jne
aad
insb
mov
xchg
nop
lea
dec
push
fdivrs
cmpsl
repnz
add
clc
inc
xlat
test
and
inc
cmc
inc
mov
inc
aad
mov
cmp
jp
shr
pop
sub
pop
nop
icebp
and
xor
pop
push
repnz
insb
jle
nop
sti
imul
add
imul
test
sbb
add
inc
iret
add
lock
sub
cmpb
pop
sbb
cwtl
or
fists
and
les
outsl
adc
xor
into
push
nop
jp
jne
das
lahf
ds
dec
cltd
std
dec
pcmpgtw
lock
ss
lcall
push
add
shlb
xchg
or
outsl
cmpsl
mov
cmp
dec
outsl
out
xchg
lock
sbbl
mov
movsl
cmp
and
jne
outsl
xchg
jmp
daa
jge
out
adc
inc
movsb
lahf
lret
aad
leave
pop
jnp
orb
push
imull
rcrb
push
mov
mov
sbb
dec
push
sbb
adc
mov
shlb
pop
sub
xor
sbb
adc
aad
dec
mov
jmp
in
and
jg
add
fcmovbe
push
movsb
inc
fisubl
fxch
add
pop
mov
test
shll
roll
add
jge
js
or
cli
xchg
pop
lods
fnstcw
ljmp
mov
mov
add
mov
xchg
inc
mov
pop
pop
and
or
push
xor
lea
fbld
and
test
lds
cmp
sub
xor
jl
rclb
xchg
sbb
jl
mov
pusha
into
stos
stc
jnp
aaa
push
push
mov
int
jae
fcoms
test
ljmp
stos
mov
add
dec
jmp
lahf
push
inc
mov
gs
adc
mov
lods
inc
mov
mov
sub
int
inc
scas
shlb
fnstenv
sbb
aas
xor
dec
cli
add
adc
add
and
and
filds
jg
xchg
pop
add
jp
adcb
dec
xor
sbb
leave
int3
and
push
movsl
sub
fwait
adcb
push
int
or
inc
mov
sub
cli
mov
mov
movsl
jae
mov
jp
xor
mov
push
pushf
mov
hlt
and
add
stos
sahf
jo
cmp
jb,pt
into
lods
mov
add
add
dec
aas
rcll
sub
pop
in
fs
adc
add
not
pop
mov
test
mov
arpl
lea
insl
sub
mov
arpl
fwait
movsl
adc
movsb
aas
dec
dec
add
out
push
into
ficoml
push
inc
mov
jae
dec
dec
fs
fwait
out
addr16
daa
pop
test
test
jmp
adc
aam
dec
add
mov
mov
addr16
pop
fs
scas
cli
push
add
xchg
xor
nop
cmp
outsb
sub
push
in
in
push
cmp
or
and
xchg
test
adc
aas
in
fcmovnb
hlt
push
stos
inc
mov
stos
stos
daa
repz
out
imull
insl
and
test
and
sbb
ljmp
jp
daa
push
out
add
add
adc
inc
inc
shlb
aas
stos
sarl
hlt
mov
test
mov
pop
jne
shl
xchg
sub
js
jnp
lret
or
insb
mov
popf
push
lcall
cmpsb
in
sub
fcomps
pop
imul
enter
xor
dec
cmpsl
icebp
dec
outsb
lods
mov
shr
mov
sbb
call
adc
jle
cmc
ret
rorl
xchg
fiaddl
lock
shl
rolb
and
xchg
push
daa
adcl
jb
testb
movsb
push
pop
in
call
xor
fisttps
xor
std
pushf
icebp
jg
mov
push
call
loope
pop
cmp
adc
pop
xchg
fbstp
and
data16
out
stos
jecxz
mov
mov
push
fistl
mov
lret
pop
pop
jb
fs
pop
mov
adc
clc
std
or
mov
fdivrl
jns
adc
lods
dec
mov
iret
aas
add
jp
lret
aad
daa
outsb
jmp
outsl
cltd
adc
or
stos
pusha
cmc
jnp
push
orb
leave
pop
push
xchg
sub
sub
mov
dec
insl
inc
push
sbb
cmp
sbb
imul
aaa
cmp
or
inc
in
jecxz
pusha
cwtl
sbb
and
ds
xor
jecxz
push
rcll
push
add
fsubrl
into
dec
loop
xor
int
inc
lcall
xchg
adc
enter
inc
iret
inc
sbb
test
mov
push
or
shrl
rorl
cmp
xchg
cmp
cmp
mov
fisttpl
mov
or
ss
push
in
dec
adc
adc
cld
lret
push
sub
ret
add
pushf
mov
sub
js
mov
xchg
push
sub
xchg
or
inc
stos
xchg
xorl
aaa
push
rol
xchg
push
sub
fnsave
mov
xchg
push
xchg
push
mov
dec
divl
dec
and
jle
outsl
adc
fadds
mov
adc
cmpsl
outsl
push
sub
loope
xor
adc
insb
dec
arpl
cmp
cltd
push
pop
jns
int
leave
jbe
sub
push
lret
popl
jne
sub
jnp
pop
jmp
subl
daa
lcall
movsb
pusha
repz
pusha
pop
mov
scas
dec
inc
xor
or
add
stc
sbb
test
pop
sub
mov
cli
lods
out
rep
stos
shl
pop
pop
add
fnstcw
sbb
xor
fisttpl
out
scas
lock
push
dec
jmp
call
cwtl
test
das
sahf
mov
sub
inc
outsl
sbb
fcompl
or
jmp
stos
pop
or
icebp
shl
dec
aaa
inc
xchg
mov
aas
mov
loop
test
pop
sbb
out
jge
pop
imul
shlb
scas
inc
sub
mov
cmp
xor
mov
dec
cmpsb
jb
cmpsl
jno
and
xor
mov
repz
push
xchg
xchg
int3
dec
mov
notb
sub
loope
adcl
xor
es
cli
lods
sub
ret
xor
sbb
mov
in
jge
fadds
shlb
sub
jno
jnp
mov
addb
addr16
pop
xor
push
out
cltd
fisttpll
dec
cwtl
rclb
mov
mov
fcmovbe
add
hlt
ret
shl
ds
fcompl
xor
inc
lods
mov
mov
sbb
fcoms
mov
xchg
sub
mov
xor
sbb
mov
out
stos
or
mov
jmp
leave
test
lods
jnp
pop
sarl
dec
push
fistl
push
push
pop
out
sbb
cmp
rclb
dec
xchg
pop
js
mov
roll
mov
out
push
shlb
xchg
and
sbb
xor
inc
aas
xor
rcrl
xchg
jecxz
and
jmp
js
bound
mov
cli
jge
hlt
cmp
lods
rclb
mov
mov
mov
in
jnp
xor
iret
aas
adc
in
loopne
iret
arpl
jbe
cld
imul
inc
inc
cmpl
or
pop
mov
in
mov
das
cltd
notb
test
pop
add
push
rcll
cmp
xor
cmpsl
sub
scas
mov
adc
mov
sbb
mov
adc
xchg
ljmp
push
ss
andb
mov
and
lcall
pop
divl
xor
aad
ret
rorl
testl
aam
inc
fs
xorl
cmp
shl
and
fists
cmpsb
and
xchg
cmc
cmpl
or
fisubl
dec
xchg
sub
sbb
shlb
mov
adc
jp
repz
adc
dec
mov
xchg
inc
push
dec
mov
pop
scas
sub
out
loopne
mov
in
out
imul
imul
imul
test
push
or
mov
sbb
jecxz
mov
cmp
fmulp
nop
cltd
or
outsl
dec
mov
mov
inc
inc
sub
or
loop
fs
enter
mov
std
push
fidivs
xchg
mov
lret
pop
imul
rdpmc
add
jg
jns
shll
sub
addl
push
sahf
cmp
fs
adc
mov
daa
sbb
or
lods
bound
std
cltd
mov
sti
jl
enter
inc
pop
loopne
mov
or
idivb
outsl
add
nop
mov
insl
mov
push
sbb
lods
jno
cmp
pop
mov
dec
push
pop
pop
sub
adc
sbb
inc
pop
into
stc
dec
test
push
ds
das
fisubrs
lock
jns
bound
dec
dec
or
hlt
scas
sahf
in
insb
xchg
repnz
je
stc
jge
incb
out
dec
adc
insb
std
or
es
and
outsb
cmpsb
fmull
outsl
ja
lods
sub
out
inc
cbtw
jmp
dec
gs
xchg
xor
jae
shlb
push
dec
scas
jnp
int3
lret
fs
ret
cmc
cwtl
fnstenv
stos
inc
shlb
leave
out
dec
mov
out
popf
lock
mov
jne
jmp
push
jmp
push
bound
sti
mov
int
mov
inc
imul
shrl
mov
adc
mov
test
pop
inc
out
cmc
mov
add
nop
outsl
and
pop
push
icebp
add
lds
cmpsb
stos
push
cmpsb
in
cltd
ljmp
push
and
mov
arpl
bound
mull
cmp
xchg
pusha
push
popa
and
sar
sub
inc
push
push
push
sbbb
pop
dec
leave
xor
enter
cli
xchg
dec
mov
decl
pause
mov
adc
mov
bound
cwtl
push
lcall
jo
lods
jmp
adc
dec
mov
pop
sbb
int
push
push
insb
outsl
cmp
or
push
fisubl
dec
lock
dec
mov
stc
sub
push
in
dec
cmp
mov
ret
mov
pop
or
pop
cmp
stos
push
out
and
cmc
push
mov
xchg
cmp
lcall
pop
jp
sub
mov
cltd
xchg
cmc
and
iret
xor
mov
and
lea
std
decb
sub
xbegin
dec
dec
sbb
dec
dec
ds
pop
test
aaa
adc
mov
xlat
bnd
leave
fcoml
dec
test
addr16
loopne
in
add
sub
nop
xchg
pop
xchg
jmp
mov
jns
dec
or
mov
jg
mov
imul
push
leave
dec
inc
jmp
push
xchg
push
and
into
mull
adc
jno
mov
mov
cld
push
push
daa
lock
mov
push
aam
not
aam
cwtl
rorl
fdivl
aam
mov
setbe
iret
or
sbb
xor
jae
fwait
orl
es
leave
scas
in
or
cmp
fsubl
adc
pop
inc
aam
hlt
out
cmc
arpl
shr
xchg
movsb
cmp
rorb
stos
sub
adcl
inc
adc
in
pop
xor
aas
clc
cli
pop
pushaw
mulb
xchg
cmp
jge
mov
jp
xor
les
mull
popf
mov
scas
sbb
dec
outsl
and
sub
xor
out
rcrl
pop
iret
mov
lods
ljmp
insl
adc
xchg
cmp
decl
jg
add
hlt
pop
mov
mov
jne
fucomp
mov
mov
mov
mulb
enter
sub
imul
push
cli
ds
cld
in
cltd
js
in
cwtl
int
fwait
imul
loope
test
jle
movsl
pop
std
js
shlb
pusha
xor
jbe
sbbl
sarl
imul
out
mov
mov
in
xor
leave
sahf
mov
cmc
mov
test
sub
cmpsb
scas
inc
push
ss
test
arpl
dec
rolb
inc
fsubl
loope
xchg
push
aaa
repz
inc
jle
sbb
add
mov
and
xor
cmp
add
jbe
mov
clc
mov
push
gs
imul
lret
push
xor
mov
call
push
add
jmp
xor
loope
sbb
jp
push
arpl
sti
xchg
rep
aaa
scas
loope
sub
test
or
and
or
mov
hlt
outsl
loop
jmp
mov
subl
fwait
xor
mov
jno
test
rcll
rol
jp
rcrb
dec
outsb
cli
and
or
inc
std
xchg
adc
gs
and
mov
hlt
cltd
test
adc
pop
mov
in
into
push
stos
arpl
xchg
pop
neg
push
mov
fdivrp
sub
mov
and
adc
adc
mov
mov
and
and
popf
cmpsl
cld
mov
shlb
mov
dec
and
jae
add
jp
push
mov
paddq
jge
aad
dec
cs
cli
fmul
das
icebp
ds
rcrl
cld
xchg
int3
leave
sbb
bound
mov
popl
push
mov
pop
lds
inc
out
add
mov
test
sub
loop
shr
cmp
es
fsub
sbb
jns
lret
jg
jge
jb
in
mov
push
sbb
ror
sub
xchg
je
jg
sti
adc
xchg
xchg
das
test
xor
inc
cs
lea
inc
bndldx
mov
bound
ljmp
std
jle
cmp
xchg
stc
lods
test
pusha
nop
js
mov
or
fstpt
xor
cli
jge
sub
fildll
int3
push
sahf
icebp
stc
sbb
sbb
loop
aam
jl
mov
inc
adc
rclb
pop
mov
xor
mov
mov
ret
xor
js
in
mov
or
pop
cmp
int3
inc
je
mov
xchg
pop
mov
jle
lods
in
test
iret
loopne
xchg
dec
dec
xor
fs
outsb
mov
inc
add
shlb
xchg
inc
and
push
mov
adc
mov
push
mov
arpl
mov
jl
shl
xlat
cltd
cmp
in
std
addl
lret
mov
outsb
xchg
xchg
nop
and
or
call
sbb
pop
imul
pusha
in
test
jecxz
adc
cmc
mov
clc
testb
cmp
sbb
out
popf
scas
test
jp
pop
loop
jnp
dec
sub
aas
mov
sbb
sub
scas
test
addb
dec
sarb
jl
pushf
push
insl
popf
dec
xlat
push
addl
outsl
or
pop
js
mov
jge
lretw
xchg
pop
dec
jo
