sbb
add
mov
out
out
add
js
pusha
xor
cs
sahf
lret
sbb
push
lret
inc
xchg
jg
sbb
sub
in
sbb
sbb
outsb
mov
pop
push
pop
and
push
lahf
or
lret
imul
dec
invd
sub
stos
bound
addr16
jno
popa
aas
pushf
xor
dec
mov
cmpl
insl
jecxz
push
adc
fists
xor
mov
xchg
jecxz
mov
rcrl
mov
rorb
andb
daa
adc
or
in
sbb
dec
or
xchg
mov
clc
cmp
jo
pop
mov
cwtl
adc
mov
xor
sahf
stos
pop
add
aam
mov
pop
lret
pop
loopne
cld
and
jmp
test
sti
daa
dec
iret
rol
mov
and
xor
or
pushf
push
sbb
in
push
inc
cltd
or
jp
mov
ja
ficoml
outsl
cmp
enter
scas
add
fcmove
mov
xor
in
sahf
mov
aam
movsb
fldl
jge
mov
add
mov
in
shr
mov
rcrb
lods
mov
lds
bound
dec
mov
mov
ds
and
negl
push
fnstenv
fstl
sbb
cltd
jo
ds
mov
add
fmuls
adc
mov
jmp
js
xchg
adc
test
stc
pusha
outsb
adc
push
sub
popa
clc
ds
mov
push
and
in
into
or
call
inc
fnstcw
cmp
cld
cmc
in
imulb
dec
inc
sub
sub
es
aas
jmp
fldl
ljmp
cltd
sarl
fisttps
sbb
add
fiaddl
jecxz
and
mov
fnstenv
add
push
xchg
xchg
roll
ret
fcmove
jnp
icebp
inc
xchg
loop
dec
pop
sbb
fmulp
jge
pop
inc
push
ljmp
rcl
movsb
xor
fs
mov
inc
int3
mov
sbb
cli
shlb
or
call
test
inc
adc
pop
arpl
jns
sub
insb
mov
stos
stc
push
fstps
fs
out
loope
add
fxch
repnz
call
jp
test
leave
mov
fidivrs
or
push
push
inc
and
xor
movsb
fcoml
mov
sub
fs
push
jmp
and
xchg
xchg
xor
popf
adc
ret
sarb
mov
inc
test
push
jne
pop
xor
adc
mov
ret
jmp
mov
inc
jns
aas
rorb
imul
pusha
popf
je
add
jecxz
inc
lret
cmp
push
jae
in
mov
and
cmp
xchg
int3
stos
repnz
or
xchg
xor
inc
sbb
dec
push
adc
in
lds
inc
mov
adcl
sbb
in
mov
inc
cmpsl
mov
stos
adc
sbb
xor
test
leave
pop
inc
cmp
popa
mov
push
sub
stos
hlt
mov
cwtl
fcoml
out
jecxz
sub
sarl
pop
stos
jmp
pusha
xor
icebp
xor
xchg
in
sub
cmc
mov
inc
repnz
rcrb
add
in
dec
cmpsl
xor
adc
ja
push
cmp
cmpsl
mov
xor
pop
das
clc
mov
test
xor
sbb
loope
sub
adc
dec
or
daa
test
sbb
movsb
dec
ja
fs
xchg
fisttps
sahf
inc
inc
mov
cmpb
arpl
or
xchg
pop
mov
mov
mov
push
sbb
pop
lds
push
cmc
pop
rcrb
or
mov
sub
mov
es
roll
in
adc
jge
inc
dec
insl
inc
test
repnz
aaa
mov
add
push
lcall
mov
js
cmp
clc
in
push
cwtl
mov
push
fs
movsb
lods
sbb
outsl
sbb
outsb
sti
scas
add
fistps
insb
cmpsb
inc
mov
stos
ficompl
add
pop
pop
xlat
sub
jo
hlt
sub
dec
sbb
fisttps
in
push
and
jge
dec
cmc
rcrl
fcoms
sub
iret
sub
ja
push
jp
clc
sub
push
adc
je
inc
or
scas
in
mov
les
xchg
aas
loop
sahf
adc
scas
es
inc
aam
mov
sub
xchg
rcll
test
lcall
xchg
das
test
jge
addr16
inc
cmp
fsubr
and
outsb
or
xor
pusha
mov
and
fists
aaa
adc
sbb
adc
outsb
pushl
pop
jnp
push
icebp
outsb
call
sub
arpl
mov
repz
das
sti
ljmp
out
push
and
or
jae
out
jns
lret
mov
rorl
mov
insl
lahf
loopne
in
xor
adc
adc
dec
and
dec
dec
xor
lea
jns
sub
test
nop
mov
push
enter
sub
or
popa
jle
inc
insl
arpl
dec
jnp
subb
lcall
jecxz
and
xchg
loope
pushf
in
push
sub
jg
adc
push
adc
add
jae
jp
add
cwtl
sbb
loope
dec
cmpsb
andl
in
mov
aam
and
insb
mov
sub
mov
mov
in
fs
dec
pushf
push
mov
push
out
pop
lods
sti
and
movsl
hlt
cld
mov
std
mov
xchg
ret
push
inc
ficomps
jb
cmp
add
cmp
cmp
dec
in
loopne
icebp
rolb
dec
sub
push
inc
mov
imul
lock
js
lods
mov
scas
sarb
sbb
shll
xchg
sub
jmp
fistl
aam
add
shlb
mov
add
aaa
aas
xchg
in
test
xchg
sbb
cmpsb
xor
repnz
clc
sti
add
out
leave
test
repnz
mov
adcl
gs
mov
mov
enter
js
or
adcb
lds
out
loop
adc
sub
repz
movsb
fs
push
inc
out
int
sub
loopne
sbb
cmp
mov
sub
dec
jmp
movsl
push
lea
xor
pop
ret
pop
mov
pop
adc
pop
outsl
inc
insb
mov
fnstsw
aam
decb
inc
les
out
psllw
pop
jnp
and
rorb
ds
es
add
adc
xorl
and
mov
sub
inc
xchg
ja
mov
mov
mov
jns
mov
loopne
or
pop
stos
iret
lret
scas
inc
push
addr16
cmp
push
push
jb
ret
lret
mov
push
lock
mov
jnp
fildll
adc
clc
sub
lahf
in
lods
sub
mov
js
sbb
jbe
fnstsw
les
jnp
adc
jno
lods
fucom
loop
xchg
outsl
fdivrl
aas
dec
mov
das
push
mov
jnp
popa
sahf
enter
xor
sub
cmpsb
adc
movsb
mov
popf
in
jl
das
data16
cmpl
push
mov
stos
outsb
xchg
jecxz
enter
les
ss
jl
arpl
daa
jb
jno
cmp
std
in
sti
js
das
imul
cltd
lcall
mov
js
nop
rclb
jecxz
jo
out
je
scas
mov
pop
push
mov
xchg
sbb
xchg
inc
mov
aam
mov
test
in
mov
xorl
ss
ds
imul
ret
aas
cmp
add
mov
add
call
mov
div
cmc
mov
shll
ljmp
sub
pushf
dec
andb
addl
test
ror
cmp
jbe
dec
push
sbb
outsl
dec
adc
push
mov
mov
icebp
add
sbb
cld
out
push
jge
popf
lret
push
pop
pop
xlat
pop
dec
shl
sub
pop
jnp
mov
cmp
lcall
or
jge
push
cmp
mov
sbb
test
mulb
lock
cmpsl
lock
out
mov
mov
popf
inc
pop
push
lahf
sar
test
hlt
mov
push
loope
cmpsb
scas
fchs
nop
out
pop
scas
test
pop
adc
inc
jle
inc
jp
icebp
jg
push
jmp
jo
cmpsl
fistpl
stos
aas
cmp
push
cmp
sbb
xor
mov
ret
xchg
and
out
in
stos
mov
pop
jbe
sbb
xchg
lds
ss
cltd
popa
adc
xchg
cmp
pop
sbb
jns
push
mov
je
jae
pop
push
frstpm(287
ret
fs
out
cmp
sub
adc
or
push
popa
mov
pop
or
sbb
or
pop
mov
cmp
adc
dec
stos
dec
pop
push
pop
movsb
cltd
adc
mov
dec
fcoms
ljmp
cmp
inc
movl
sbb
and
xchg
and
popf
ret
ljmp
dec
mov
aas
mov
stos
scas
xor
fistps
or
scas
fsubs
das
scas
jnp
popf
fadd
das
stos
daa
repnz
jb
mov
lret
and
mov
mov
enter
xor
loopne
ljmp
cmp
jge
xor
test
fdivr
jp
add
les
sub
xor
jnp
in
mov
or
daa
xchg
lcall
mov
outsl
lret
mov
sbb
fidivrs
iret
cmp
ja
aas
lcall
and
or
cld
ja
pop
fiaddl
sbb
mov
jne
repnz
outsb
loopne
out
mov
push
cmp
fldl
dec
shlb
sub
mov
mov
shlb
jg
and
dec
fisttpl
jle
imul
out
push
jge
mov
in
sti
inc
mov
mov
cmpsl
out
mov
pop
lods
bound
cwtl
movsb
aad
call
inc
aad
ret
stos
stos
mov
cmp
xlat
pushf
decb
adc
xor
jnp
fwait
jmp
push
rorb
xchg
mov
outsb
neg
sub
pop
sub
cmp
cmpsl
test
outsb
fwait
popa
sahf
leave
xor
xchg
mov
pushf
insl
aad
scas
rcll
cmp
push
jge
mov
in
xor
loope
mov
push
bound
sub
int3
ss
daa
jge
push
xor
fisubrs
stos
adc
push
ljmp
mov
xchg
addr16
loop
adc
inc
mov
daa
test
in
ficoml
jp
sub
in
mov
js
and
lahf
cwtl
ljmp
scas
lds
fists
sbb
cli
imull
sbb
sub
cmc
xchg
rcll
dec
in
mov
jne
xor
or
xchg
test
data16
insl
mov
loope
jae
loopne
fisubrs
daa
cmc
imul
jne
mov
mov
arpl
and
or
push
add
in
mov
outsl
or
push
scas
call
hlt
mov
shrb
aam
push
outsb
and
sbb
xchg
mov
cmpsl
adc
dec
loop
adc
or
inc
enter
cmpsb
icebp
ret
roll
jmp
xor
mov
movsb
mov
pop
xchg
xor
pop
pop
stos
sub
mov
test
rcrb
mov
insl
inc
into
and
or
test
jb
je
mov
cwtl
cmpsl
mul
imul
cmp
lcall
aad
mov
stos
addr16
mov
lods
adc
sub
mov
shll
nop
iret
gs
push
in
andl
mov
outsl
stos
int3
jl
mov
out
or
jp
outsb
inc
ret
leave
push
xor
dec
push
mov
lret
idivl
andb
push
push
jl
leave
clc
pop
loop
mov
in
imul
stos
fmuls
pop
icebp
push
mov
xor
mov
push
mov
and
lret
imul
cmpl
mov
ret
cmp
sub
sbb
mov
imul
imul
and
mov
jae
inc
pop
xchg
in
mov
add
xchg
dec
or
add
out
outsb
add
cmp
xor
imul
push
jl
negl
pop
adc
or
push
stos
std
and
arpl
add
sub
pop
lods
insl
insl
cs
fs
nop
loopne
fwait
mov
dec
jno
add
xchg
push
adc
int3
shrl
fidivrs
cmpsl
sbb
push
lods
je
push
add
sub
sahf
xchg
sti
jae
aaa
int
cs
testl
sbb
cmpsl
mov
fnsave
adc
mov
pusha
faddl
adc
rcl
dec
xchg
push
ret
pusha
lock
test
sub
scas
loop
mov
ret
jl
xchg
mov
jns
lahf
out
popf
adc
mov
mov
sub
out
sbb
pop
jg
mov
adc
fldt
mov
dec
test
pop
les
mov
loope
and
xor
scas
jbe
mov
fmuls
inc
shrl
das
add
sub
cmc
sarb
mov
int
subb
js
mov
repz
fs
push
jnp
pop
lds
pop
mov
inc
ja
push
lret
mov
inc
dec
push
sbb
and
adc
pop
flds
adc
dec
adc
jb
push
adc
in
aad
add
movsl
fnstenv
mov
ficoms
loopne
lock
inc
lds
or
mov
sahf
jno
mov
cld
int
mov
cmp
sub
outsl
jle
out
and
mov
lcall
lret
test
mov
dec
in
ss
popa
hlt
test
pop
xor
add
ret
mov
rcl
pushf
je
jge
xchg
jns
sbb
cmp
unpckhps
test
in
and
mov
mul
jp
sbb
idiv
testb
stos
jl
ljmp
and
xor
popf
jns,pn
push
push
nop
dec
icebp
push
lds
jns
jp
sub
in
and
pop
xlat
push
xor
mov
je
scas
and
sbb
jecxz
ds
out
xchg
decb
sub
or
icebp
popa
jle
cmp
icebp
dec
test
sarb
outsl
mov
xchg
dec
int
movl
jae
jle
add
sbb
cmp
popf
stos
dec
fucomip
push
sbb
fs
scas
inc
icebp
mov
dec
and
mov
ret
cmpsl
sub
xchg
adc
ljmp
inc
xor
pop
shlb
jg
xor
and
pop
push
xor
push
cmp
xor
xchg
cli
shll
xlat
lods
int
inc
lahf
ljmp
push
push
fidivl
addr16
push
imul
rcrb
ja
lods
nop
stos
mov
andl
xchg
sub
cmp
rcll
movsb
lahf
xor
xor
dec
insl
arpl
xadd
mov
loope
cltd
mov
hlt
ljmp
add
pop
sbb
ret
loop
fstpt
mov
jmp
inc
ja
je
mov
mov
jno
mov
icebp
and
mov
sbb
daa
jb
sub
mov
xchg
inc
in
imul
fldt
add
hlt
icebp
ficoms
xor
les
arpl
out
mov
call
call
xlat
out
cmc
cmpsb
xor
jle
mov
push
ss
divl
fwait
lds
xchg
addr16
cmp
cmpsl
fcomps
dec
in
cmp
mov
or
fidivrl
push
dec
repnz
cwtl
loope
ret
fwait
ss
jns
push
js
aad
loop
pop
les
pop
push
adc
test
out
push
das
fstps
inc
jl
movsl
aam
push
mov
ret
frstor
xor
mov
or
dec
xchg
fsubrs
mov
push
xchg
orb
push
rolb
mov
pop
stc
fisubs
icebp
sahf
rorl
xchg
andl
inc
shl
pop
cmp
outsl
push
adc
movl
sbb
test
mov
mov
pop
jmp
fwait
cmp
sahf
xchg
add
xchg
clc
dec
sti
ljmp
aas
repz
fiaddl
rcl
sub
lahf
lahf
mov
dec
idivl
cmp
push
sbb
mov
rolb
add
in
and
notl
cmp
int
aas
inc
in
pop
cltd
cmp
add
pop
pop
mov
cmpl
and
out
inc
mov
adc
cld
sbb
adc
dec
rcrl
hlt
fneni(8087
pop
inc
int3
jg
dec
or
jg
stos
dec
dec
inc
les
jae
adcb
les
sbb
cmpxchg
add
aad
lret
out
jmp
ljmp
push
aam
in
dec
scas
cmpsl
arpl
lods
aad
push
out
faddl
mov
pop
mov
sub
cmp
stos
sbb
pushf
jne
dec
es
out
or
jae
or
clc
sbb
inc
or
and
add
mov
clc
loopne
lods
adc
sti
rcr
add
mov
or
cwtl
stc
outsb
mov
jb
imul
push
inc
pop
pop
mov
std
pop
jno
jo
lods
dec
in
fistpl
popf
mov
dec
addr16
add
test
xchg
xchg
add
mov
dec
mov
repnz
lods
lcall
cmpsl
jg
push
sub
lea
nop
data16
outsb
clc
neg
fwait
jg
fisttps
js
fildll
sub
mov
fbstp
mov
sub
push
sbb
mov
push
dec
dec
cmp
sbb
add
loopne
lods
repz
sub
xor
pushf
jns
cmp
iret
sub
int3
adc
andb
pop
cwtl
adc
and
je
xor
rcr
les
push
and
daa
cmpsb
cmp
dec
pop
pop
test
cs
push
je
push
stos
dec
stos
aaa
jl
dec
pop
and
push
mov
add
add
mov
rcr
add
dec
popf
xchg
and
inc
pop
sub
lds
dec
cs
jle
negb
push
inc
cmp
adc
jmp
sub
fs
fcompl
stos
adc
sub
cmp
mov
sbb
jb
xor
hlt
jl
xor
push
push
xor
std
mov
clc
fnsave
and
mov
sub
push
pop
stos
movsl
js
lods
loopne
jnp
stc
cltd
orl
aad
mov
jmp
adc
pop
xchg
pop
pop
adc
jp
mov
outsb
inc
inc
pop
out
mov
mov
xchg
into
xchg
sbbb
pop
mov
sbb
aam
in
fcomps
sub
addps
and
mov
xlat
ret
ficomps
rcrb
dec
xor
enter
movsb
inc
dec
mov
lock
mov
mov
push
xchg
and
test
or
lods
sub
pop
or
sbb
jb
or
repnz
movsb
scas
jnp
fcmovu
fs
inc
mov
hlt
insb
ja
xchg
sub
sbb
inc
gs
jl
das
das
or
roll
push
clc
cmpsb
aaa
mov
cmp
aad
shrl
and
or
jmp
xor
dec
mov
aaa
imul
rolb
lods
inc
outsb
jp
hlt
cmpsb
ljmp
xchg
sarl
mov
dec
iret
pop
cmc
mov
adc
cmpsl
leave
push
jle
adc
shl
pop
sub
in
xchg
js
pop
lcall
rcrb
outsb
fildll
idivb
scas
pop
call
adc
push
inc
pushf
pop
cmp
cltd
dec
scas
addr16
mov
mov
xor
inc
or
xchg
jbe
cmpsb
lret
or
arpl
je
pop
cmpsb
mov
xchg
out
outsl
fisttpll
jge
shll
rcrb
mov
test
xchg
pop
sahf
push
int3
mov
shlb
adc
stos
xor
sbb
outsb
xchg
and
push
xchg
out
xor
std
pop
shlb
sub
cld
sarb
xor
lods
rcrl
mov
in
test
ds
sti
mov
aam
cmp
cmpsl
push
outsb
pop
fidivl
hlt
fwait
xor
jo
push
andl
sub
call
mov
daa
int3
outsb
nop
sub
xor
gs
or
jmp
mov
inc
xchg
push
lods
jle
ss
fbld
dec
ja
mov
adc
outsl
jb
into
orb
push
jb
enter
jg
or
jbe
inc
jle
xor
shrb
ja
inc
dec
sub
and
mov
push
xchg
mov
push
loopne
out
popl
push
out
lds
pushf
iret
lods
jl
or
aam
jnp
jmp
ljmp
arpl
pushf
add
pushf
int3
movsb
shr
lods
faddl
lret
mov
fistpl
arpl
xor
cmp
xchg
scas
push
xor
sub
pop
int
loopne
sti
aaa
sti
stos
sahf
loopne
sub
jmp
shlb
loopne
scas
lret
adc
or
cmpsl
je
cmpsl
jg
in
sub
xchg
sahf
jge
scas
inc
jae
push
das
stos
inc
jns
mov
mov
jo
enter
rolb
ss
jo
sarl
aas
sti
loopne
dec
data16
pop
setns
mov
subb
orb
pop
xchg
call
jl
mov
add
jnp
out
gs
xor
test
aas
cmpsl
add
pop
decl
mov
xchg
jb
and
iret
out
jo
ja
enter
out
cli
popa
stc
add
jnp
rcl
mov
mov
repnz
fiadds
push
dec
jmp
adc
loope
xor
sti
or
pop
inc
imul
dec
in
inc
nop
inc
imul
jbe
mov
push
or
mov
ljmp
jl
mov
fildl
xor
rcll
mov
mov
sbb
push
inc
lds
ret
popf
in
and
data16
xor
sbb
push
inc
test
mov
xor
xor
inc
jecxz
iret
icebp
mov
pop
mov
insl
xchg
cs
jmp
cmp
outsb
andb
mov
jge
sti
sbb
inc
mov
insb
daa
or
dec
pop
clc
jae
fsubrl
mov
mov
scas
into
dec
cwtl
cmpsl
insb
inc
mov
movsb
mov
ret
xchg
std
sbb
xchg
mov
jae
jno
fldcw
pop
test
mov
mov
add
imul
inc
insl
aam
sbb
fsubrl
push
adc
jne
jb
rol
in
lret
sbb
loope
outsb
or
push
push
shrl
push
popf
fstpt
andl
bound
pop
ja
jmp
mov
pop
mov
mov
lds
test
outsl
xchg
loope
add
mov
fnstenv
loope
add
int3
dec
mov
adc
inc
sbb
mov
repz
dec
hlt
mov
inc
mov
jnp
lret
pop
jg
repnz
mov
int3
xlat
pop
call
aad
mov
dec
jb
js
int
mov
mov
imul
mov
or
mov
test
and
xchg
and
adc
cmp
lcall
adc
aad
and
das
pop
sahf
les
mov
xchg
push
push
cli
ret
mov
mov
imul
pop
aaa
xchg
mov
aaa
int3
shlb
push
sbb
push
push
and
in
adc
iret
jmp
imul
movsl
add
idivb
or
insb
or
aaa
dec
vzeroall
call
cmpps
push
loop
mov
stc
scas
movsb
or
rep
test
adc
mov
fnstsw
cld
or
mov
jg
sbb
lds
sub
cmp
jecxz
aas
xor
mov
push
mov
popa
int3
jno
xchg
leave
clc
mov
or
pop
pop
insl
adc
das
rolb
push
out
div
add
sti
mov
stos
xlat
xlat
call
or
into
mov
pusha
outsb
lahf
lcall
mov
outsb
sub
xchg
aas
inc
pop
mov
test
mov
cld
pop
stos
jno
fsubp
lea
jne
jno
rcll
jb
mov
popf
ret
lods
inc
arpl
or
insb
gs
daa
push
jbe
rorb
ret
pushf
cltd
push
daa
mov
mov
out
pop
int
cltd
sahf
scas
enter
outsb
or
in
push
pop
mov
sbb
sub
fs
dec
ret
sbb
jmp
nop
cld
dec
fsin
call
pushl
cwtl
mov
fcoml
push
sti
scas
jbe
mov
jmp
or
sbb
in
dec
mov
scas
jno
cltd
pop
sbb
xchg
cwtl
mov
inc
stc
leave
leave
call
sti
stos
ret
addl
loope
call
adc
push
fwait
dec
dec
fwait
inc
xor
sahf
je
fnstcw
int
xor
cmp
ss
imul
inc
arpl
cmc
stos
ss
push
js
pop
testb
sub
lds
xchg
mov
sbbl
out
je
test
mov
pop
shr
test
sub
sbb
push
adc
pop
push
adc
shl
jge
xorb
push
lods
fcoml
cmpsb
mov
pop
push
and
mov
pop
jb
subl
mov
fistps
add
or
sahf
or
sbb
sub
lock
mov
mov
test
xchg
and
sub
xor
jbe
cmpsb
sbb
test
mov
int
icebp
shl
stc
mov
mov
cmp
ret
xchg
jae
mov
adcb
je
push
outsb
les
push
imul
rcrw
mov
push
addr16
lods
in
sbb
in
out
daa
lahf
imul
imul
mov
xor
sub
cmp
push
xor
ds
loopne
inc
cwtl
lock
dec
or
lcall
sti
push
sub
push
int
loope
push
mov
imul
popf
xchg
leave
add
leave
mov
add
push
jmp
xorb
inc
xchg
xor
ffree
xor
push
cmp
push
push
cwtl
push
js
pusha
push
movsl
or
pop
add
push
ja
mov
leave
popf
loop
in
lahf
ds
lods
sub
out
repz
sbb
arpl
fwait
movsb
push
fnstcw
cmp
inc
dec
loop,pn
fstpt
xor
sub
mov
jne
testb
or
mov
cmc
cwtl
popa
cmp
outsb
rcl
xor
sti
sub
into
xchg
cld
inc
movsl
or
jp
lret
clc
add
or
mov
mov
test
inc
movsb
cmc
in
roll
lcall
icebp
mov
push
push
scas
je
mov
mov
test
mov
cs
test
push
cld
mov
cli
pop
cmp
and
test
sub
enter
repz
pop
ljmp
xor
mov
cs
push
dec
daa
test
add
daa
pushf
and
mov
cmpsb
imul
xchg
divl
mov
mov
lods
testl
outsb
rol
fisubrl
add
ret
rorb
hlt
fwait
xchg
popf
loopne
lahf
lret
pop
add
push
repnz
xor
aam
push
cmp
daa
loope
jne
dec
push
mov
xor
rolb
std
push
loop
mov
int3
addr16
xchg
imul
sub
inc
out
je
xor
loopne
scas
mov
mov
add
out
or
sub
out
test
fcmovu
test
cli
mov
jns
mov
sbb
ljmp
js
adc
xor
mov
dec
lahf
imul
jo
cli
jl
inc
je
fdivl
mov
shr
mov
cmp
xor
jecxz
cmpsb
dec
add
sub
mov
mov
inc
fnstsw
inc
aaa
repz
shlb
jge
movsl
pop
lret
mov
jbe
mov
xor
clc
xor
enter
movsl
xor
sub
xor
ljmp
icebp
sub
nop
add
inc
icebp
popa
fsubr
push
xor
mov
cmp
je
xor
stos
daa
sub
dec
xor
push
test
dec
push
out
dec
mov
push
jb
fstl
divb
adc
aad
xor
push
sub
inc
mov
dec
roll
imul
pop
pop
jge
cmp
cwtl
aam
xor
sub
aam
stos
insb
dec
popf
clc
dec
lcall
movsb
pop
xchg
movsb
mov
in
mov
cltd
imul
out
outsl
iret
push
in
push
sbb
sbb
aam
xor
cltd
insb
jne
and
fdivrs
mov
loopne
pop
xchg
jns
into
rcrb
mov
pop
push
addr16
push
hlt
sub
jo
mov
xchg
xor
pop
enter
insl
mov
push
dec
dec
sbb
dec
and
out
notl
xchg
lcall
nop
mov
pushf
xor
pop
lcall
adc
lret
jge
insl
jmp
xor
xchg
inc
adc
xchg
xchg
aam
push
lret
ds
insl
pop
add
add
sub
adc
mov
loopne
pop
outsb
sbb
stc
add
push
jns
js
push
sbb
pop
jo
or
push
xchg
stos
fsubp
jo
cltd
pop
cmpsb
popa
pop
scas
call
adc
shr
orl
dec
aam
cmp
ljmp
mov
mov
aam
jp
push
adc
das
cmp
mov
repnz
jae
ret
add
mov
shl
lret
jno
std
cli
bound
or
add
mov
sub
and
cmp
arpl
mov
cmp
fs
push
mov
mov
idivl
adc
pop
xchg
push
frstor
gs
imul
rcr
outsl
and
and
pop
loope
rclb
data16
mov
mov
inc
push
cwtl
mov
mov
lret
popf
push
bound
psubw
xor
pop
fildl
mov
repz
cmp
adcb
and
test
sbb
add
xchg
pop
jb
stc
inc
add
jecxz
daa
hlt
out
inc
lahf
repnz
ret
pop
push
mov
imul
test
cvtps2pi
dec
inc
xchg
mov
jmp
mov
ja
sub
push
inc
xor
fcomps
fisubrs
sbb
dec
stos
jl
inc
sbb
insb
and
mov
fwait
mov
lea
mov
lret
sarl
jno
test
int
fildl
xchg
pop
sbb
rcll
fs
icebp
mov
xor
ds
jl
imul
mov
jo
pop
sbb
add
icebp
outsl
inc
mov
gs
movsl
add
sub
ja
cmpb
pop
out
vmovsd
cmp
ret
pop
js
imul
stos
lea
xchg
sub
test
xchg
cmp
aam
lret
push
aad
movsb
es
xchg
sub
pop
aaa
out
pusha
jg
mov
test
mov
lcall
xor
mov
es
cmp
aam
sahf
lods
xor
stos
rolb
jp
cs
inc
and
mov
call
mov
inc
sub
mov
popf
cmpsb
add
cmp
outsb
test
push
out
or
arpl
pop
inc
lret
shlb
ss
lahf
adc
fs
cmp
mov
test
aas
out
push
push
inc
xor
pop
addr16
xor
push
xor
cmp
and
inc
sbb
inc
in
test
aam
xchg
mov
aad
mov
jle
adc
pop
inc
shrl
push
push
or
in
movsl
mov
jl
xor
push
aad
push
dec
pop
mov
jae
xor
inc
push
lcall
pop
inc
mov
jo
sub
sbb
in
mov
adc
cmp
nop
popa
xor
cs
push
cmp
inc
scas
and
inc
inc
sbb
xor
sar
fstpl
mov
and
adc
es
push
push
popa
add
pop
popf
imul
aad
nop
enter
cmp
or
lcall
fsubr
push
test
jne
push
mov
imul
push
lret
and
adc
jns
call
arpl
imul
adc
sbb
popa
imul
lahf
das
mov
cmpb
jns
mov
push
ja
mov
rorb
into
mov
add
push
mov
pop
jnp
test
push
test
sub
sbb
repz
add
cmp
xor
sub
push
cld
inc
addr16
jbe
pop
mov
jecxz
stos
inc
gs
mov
sahf
push
mov
in
sub
mov
sbb
xor
sti
sbb
push
andl
or
push
shlb
mov
shrl
into
jbe
repnz
or
outsl
negb
xchg
mov
mov
adc
mov
psadbw
xacquire
add
pop
sbbb
mov
adcw
adc
mov
xchg
push
icebp
dec
dec
into
mov
add
cmpsb
add
in
mov
rorb
lea
mov
stos
mov
mov
dec
cmp
xchg
outsb
out
mov
cmp
jbe
rolb
jge
xor
lock
mov
test
test
adc
or
push
pop
fldcw
cmp
lret
incb
mov
pop
mov
dec
pop
jmp
sarb
fbld
in
rcr
aad
frstor
outsb
pop
loop
sub
addr16
out
mov
fstps
mov
andl
or
movsb
insl
pop
ret
cwtl
decl
push
mov
dec
cmp
out
pop
dec
xlat
mov
cmp
shl
mov
push
in
jl
mov
jge
or
push
stc
outsb
jg
pusha
in
xchg
loop
cmp
mov
sub
xlat
inc
rorl
lret
ja
insl
mov
adc
lds
jg
stc
lret
fs
ret
jl
shlb
addr16
sub
andl
push
push
pop
cmp
push
or
add
and
test
cs
pop
adc
sbb
mov
and
in
dec
loopne
andl
cmp
fimuls
dec
mov
nop
jne
mov
out
push
outsl
cli
cld
aam
sbb
cmp
mov
mov
out
inc
cli
inc
loope
popa
pop
add
clc
xor
push
nop
lods
add
cmc
push
xor
xlat
mov
fnsave
sarl
xor
subb
out
push
ss
or
mov
sbb
mov
in
and
xor
lahf
xor
dec
sti
mov
mov
or
xchg
pop
xchg
cld
mov
fidivl
imul
mov
in
push
gs
pop
lea
imull
rolb
rolb
jmp
ficomps
rcll
xchg
dec
dec
sarl
dec
out
pop
out
mov
jp
mov
outsl
jne
cmpsl
push
mov
call
call
and
sarl
push
enter
add
cmp
jecxz
test
push
jle
daa
adc
daa
lahf
insl
inc
push
pop
sbb
movsl
js
ja
test
sub
pop
inc
aam
mulb
out
xchg
outsb
imul
mov
or
fisubs
cmp
scas
sub
test
push
push
inc
outsl
fldcw
hlt
hlt
push
mov
or
pusha
ds
xor
lods
jae
jle
js
mov
add
aam
testb
adc
adcb
xchg
push
add
mov
ds
xchg
xor
mov
push
jmp
xor
fcoml
mov
leave
jmp
push
andb
dec
int3
mov
clc
xor
adc
lods
aaa
lea
movsb
out
aad
dec
les
cmc
test
pop
xchg
pop
pop
fcompl
cmp
inc
lahf
mov
push
xchg
mov
aam
mov
and
mov
jbe
mov
mov
sub
inc
mov
mov
fs
sub
in
inc
inc
mov
sub
dec
in
lret
xor
fisubs
dec
repnz
addb
sub
das
xchg
lcall
les
jecxz
xchg
stos
iret
std
pop
mov
inc
push
out
pop
xor
cmpb
xorb
adc
call
int3
inc
outsl
addl
push
test
popa
hlt
or
mov
daa
insb
inc
mov
push
repz
outsb
sbb
data16
mov
inc
jecxz
ffreep
xchg
mov
mov
ret
sub
cmp
pop
jecxz
pop
jno
mov
xor
test
aad
js
clc
into
jnp
mov
adc
sub
aam
mov
xor
les
je
xlat
je
mov
cs
shr
jnp
xor
mov
aas
mov
sbb
push
dec
mov
inc
jmp
jno
shlb
dec
lret
ret
iret
ret
cwtl
pop
mov
dec
xor
hlt
out
xchg
pop
outsl
imul
inc
jae
adc
shr
lods
movsl
aam
cltd
pop
inc
mov
int
cmp
add
dec
dec
add
testl
ret
ljmp
push
push
push
mov
xor
call
mov
dec
adc
sbb
arpl
faddl
or
in
pusha
cmp
and
mov
fsincos
lods
clc
add
int3
ret
xchg
jbe
inc
adc
xorl
mov
or
add
dec
mov
mov
jecxz
js
cmc
pop
jne
lods
mov
sbb
outsb
inc
sbb
dec
jge
mov
mov
lahf
ljmp
repnz
test
or
jnp
pop
andb
aaa
nop
int3
cmp
or
sbb
xchg
pop
mov
adc
xor
arpl
jp
xor
mov
data16
xor
test
mov
inc
jp
mov
inc
adc
jmp
aas
jmp
shlb
jnp
arpl
dec
hlt
cmp
inc
push
je
and
je
jno
call
arpl
fdivp
cmp
jne
insb
imul
push
push
push
push
fsubrp
mov
scas
imull
push
shrl
push
std
dec
mov
scas
out
sbb
divb
test
cltd
mov
push
sub
orl
pop
lcall
in
cmc
mov
sub
aad
aas
jbe
sbb
imul
repnz
outsl
sub
sahf
lds
ljmp
fisttpl
dec
xor
xchg
lret
mov
and
test
ja
push
adc
in
push
inc
mov
jmp
imul
icebp
aaa
inc
xchg
pushf
int
sti
dec
push
sbb
out
add
jne,pn
jbe
pop
outsl
ljmp
xlat
outsb
cmp
pop
dec
test
enter
aam
ret
mov
push
cmpsb
loope
loopne
add
aad
aam
cmc
mov
mov
movaps
inc
xchg
lods
ss
cmpsb
adc
adc
sbb
mov
cwtl
mov
iret
inc
mov
lock
adc
adc
and
popl
outsb
inc
and
jl
cwtl
xchg
loope
scas
call
jbe
jno
pop
in
repz
mov
mov
sbb
js
enter
add
push
xor
inc
lds
adc
xor
xchg
imul
aas
mov
cmova
jecxz
daa
js
mov
jg
lahf
add
xchg
mulb
mov
lret
or
pop
sbb
cmpsb
xchg
scas
gs
out
adc
in
lds
mov
push
jo
loope
jmp
lods
addr16
lock
leave
jne
jecxz
adc
mov
inc
sar
pop
fwait
lock
cmp
test
jg
lahf
je
mov
icebp
or
sbb
dec
sub
xchg
pop
rorl
popf
cmp
popa
test
cmp
xor
cmp
inc
mov
inc
jae
insl
mov
and
mov
cmc
in
outsb
lret
test
or
jl
and
lret
and
pop
mov
fsubrl
testl
mov
test
mov
dec
mov
in
mov
adc
sbb
loope
stos
add
lds
in
mov
lcall
xchg
out
cwtl
je
sub
ss
cmc
mov
jnp
in
lods
subl
dec
ret
insl
cmp
insb
xchg
ds
ror
and
jp
outsb
movsl
in
scas
cmp
data16
pop
repnz
push
fsubp
outsb
dec
hlt
xor
dec
mov
mov
loopne
jp
dec
xchg
mov
loope
sub
dec
gs
jne
lret
cli
cmp
and
jno
xchg
and
ret
test
adc
mov
cli
test
push
cmp
jae
iret
or
popf
cmc
xor
lcallw
and
out
add
out
inc
cmp
mov
je
insl
mov
movsl
jle
sub
mov
lret
int
enter
lock
cli
mov
add
ret
and
jno
sub
xlat
sub
andl
xchg
scas
es
aaa
mov
mov
cmp
mov
mov
sub
stos
fisttps
loopne
jmp
push
inc
and
and
jg
int
mov
lret
in
dec
int
push
popa
mov
sbb
push
xor
xor
push
nop
int
cmp
sub
adc
push
cmpsb
testb
mov
sbbl
mov
push
or
xor
inc
push
stc
jmp
pop
add
xchg
push
add
fisubrs
pop
or
pop
inc
stc
dec
lahf
cmp
insl
iret
movsl
sub
pop
sbb
cltd
or
xor
pop
xchg
mov
and
into
mov
xchg
rcrb
jge
add
mov
push
xor
xchg
jle
pushf
shlb
mov
ds
push
mov
ja
scas
test
arpl
jmp
lea
fmulp
xchg
mov
jmp
mov
mov
mov
and
pusha
or
pop
out
adc
dec
jno
pop
in
jb
repnz
sub
out
aaa
adc
sbb
icebp
scas
add
out
and
pop
sub
mov
pop
adc
jge
push
adc
pusha
dec
push
mov
test
pop
fs
and
mov
xchg
sbb
lret
push
aad
mov
lds
in
pushf
xchg
cmp
rorl
ret
and
cmp
outsb
in
dec
call
dec
mov
jl
popf
dec
data16
and
adc
ret
in
sub
jl
outsl
inc
lcall
adc
pop
shll
sbb
push
les
cmpsl
xor
cld
or
add
adc
adc
push
mov
or
cmpsb
jb
mov
hlt
std
add
cltd
insl
fsubrs
push
fistpl
dec
xchg
add
aam
mov
fbld
cmp
sbb
pop
adc
xor
shrl
xor
xor
mov
int3
mov
popf
int
and
outsb
cmp
mov
or
cmp
xchg
or
adc
cld
adc
mov
iret
arpl
xor
in
test
sbb
xchg
fld1
loopne
dec
stos
xchg
pop
int
aad
and
push
add
rorb
sub
sbb
ret
push
add
mov
add
in
add
push
or
cmp
jg,pn
sub
xor
pop
mov
jb
push
sub
push
sti
imul
pop
pop
xor
int3
repnz
sbbb
push
repnz
jne
jbe
cld
push
push
fildl
jbe
lea
cltd
cwtl
lret
or
bound
outsb
int
mov
cs
pop
mov
loopne
and
int
out
pop
enter
xor
iret
xor
loopne
mov
dec
mov
jnp
mov
pop
cmpsl
das
scas
sarl
inc
push
lods
push
mov
xchg
in
fldt
pop
cmp
and
popf
mov
in
push
aad
mov
in
mov
mov
pop
out
inc
lods
or
jbe
and
divl
push
int
xor
mov
mov
inc
nop
adc
xor
std
dec
mov
sub
add
fisubrs
dec
repz
ljmp
pop
out
std
fstl
adc
imulb
or
sahf
adc
lret
dec
mov
out
mov
sbb
and
cmp
int
scas
hlt
jae
sub
adc
fnstenv
or
stos
fisttpll
lea
cmp
imull
push
dec
and
add
rcll
scas
xchg
pop
stos
mov
cmp
les
js
out
gs
pusha
push
std
out
jo
mov
cs
push
stc
xor
sbb
out
scas
pop
inc
in
adc
ds
jbe
cmp
enter
int
mov
lret
test
cltd
pop
cmp
fadd
je
mov
mov
mov
jns
dec
je
inc
popa
test
lahf
stos
imul
rcrl
fstps
push
mov
push
lret
adc
fbstp
mov
insb
ss
mov
jne
gs
fsubs
mov
aad
stc
mov
cmc
ret
data16
adc
out
leave
push
dec
iret
int3
or
cli
inc
inc
std
dec
xchg
push
cmp
pop
std
ljmp
fidivrl
iret
mov
mov
pop
and
rolb
push
mov
aas
in
inc
into
push
xor
mov
pushf
mov
lahf
sbb
mov
into
lea
in
inc
and
add
mov
pop
mov
jns
and
jns
push
lcall
jbe
fwait
loop
in
test
mov
movsb
fsubrs
cmp
mov
ret
jno
cltd
cmc
pop
xor
xchg
inc
xchg
hlt
mov
repnz
ror
sbb
shr
jp
jmp
ja
xchg
dec
push
bnd
cmc
fcomps
mov
cmp
and
inc
mov
dec
lahf
dec
jmp
lds
fnstenvs
lock
je
stc
ret
push
jo
jne
sbb
outsl
add
or
aam
push
dec
sbb
out
mov
cmp
adc
outsb
dec
adc
add
add
call
xchg
jmp
aam
lahf
sahf
ret
sub
cmp
ds
dec
loop
mov
ss
mov
or
or
repnz
xor
or
and
cmpsb
out
push
ljmp
pop
add
stc
das
pop
xchg
test
aas
into
fs
lock
lea
movsb
and
xchg
sti
xor
lahf
mov
mov
aad
sbb
push
lods
adc
in
fisubs
cmp
fldt
bound
sbb
aas
test
pop
sub
fists
push
movsl
in
pop
or
mov
xchg
bound
dec
or
xor
add
push
jno
cli
inc
sub
xchg
mov
mov
in
jae
es
sbb
inc
push
ja
stc
xchg
scas
dec
mov
mov
loopne
xor
pop
mov
jecxz
sbb
repnz
xchg
xchg
out
or
dec
push
das
jbe
mov
movups
sahf
add
hlt
mov
aam
in
adc
xlat
out
das
xchg
dec
xor
jp
xchg
pop
shr
testl
mov
sbb
enter
or
bound
arpl
cwtl
mov
out
aam
por
push
outsb
xor
push
into
sub
fadd
or
and
sub
and
jl
loop
clc
mov
inc
xchg
mov
xchg
cmc
adc
jo
fdivrp
lods
xchg
cmpsl
cmp
hlt
into
aas
subb
data16
enter
fsubl
test
clc
pushf
xor
xor
pop
lret
fs
bound
pop
jp
bound
and
xchg
out
mov
push
cwtl
insb
cmp
in
jle
hlt
fistpl
aam
add
dec
jb
testl
mov
cmp
pop
mov
xchg
pop
and
lods
outsb
add
aad
xor
pop
js
dec
out
dec
mov
pop
ficoms
sub
sub
repz
and
sub
add
stos
add
sbb
mov
je
pop
pop
mov
jp
sbb
mov
mov
int3
int
sub
jbe
mov
add
fbld
cwtl
mov
shll
imul
inc
out
fdivl
sub
fstpl
or
add
lea
add
mov
addr16
add
jo
sbb
cmp
into
dec
adc
clc
repz
push
mov
pop
dec
fdivl
or
and
gs
mov
divl
or
call
xchg
xchg
mov
fiaddl
inc
cwtl
fs
daa
mov
cwtl
xor
mov
mov
mov
sbbb
and
scas
mov
mov
cmp
and
push
xlat
sub
push
adc
jle
ficoms
push
mov
jle
xor
out
and
in
scas
mov
xor
cs
pop
mov
icebp
shl
lods
outsl
inc
push
mov
cltd
iret
clc
pop
int
in
lahf
std
out
mov
addr16
xchg
adc
mov
enter
and
pop
sub
shll
mov
repz
in
push
jno,pt
shlb
sub
jp
in
mov
pop
sahf
inc
adc
bound
inc
fmull
shlb
pusha
sub
insl
inc
pop
lahf
adc
push
sub
mov
pop
sub
jmp
popa
sbb
jecxz
fimull
pop
out
or
rep
repnz
dec
stos
jnp
loopne
push
push
xorl
pop
mov
pop
into
mov
jp
add
inc
push
jge
mov
pop
icebp
stos
or
and
pop
mov
sbb
cmp
push
in
mov
and
stos
lret
test
shlb
cld
dec
loopne
pop
inc
xchg
daa
lahf
xchg
dec
out
mov
sub
push
and
mov
mov
push
or
jmp
cltd
add
inc
inc
test
mov
xchg
adc
add
outsb
inc
push
and
outsb
xchg
icebp
sahf
notb
sub
adc
cmp
lcall
loopne
fildll
inc
cltd
mov
mov
dec
mov
mov
xor
mov
jne
into
push
insl
cmc
cmp
push
in
sbb
pop
cmpsb
ljmp
inc
mov
jg
and
and
aaa
push
inc
push
cwtl
jmp
sbb
out
addr16
xor
dec
inc
adc
lcall
ja
loope
lcall
imul
lea
xlat
xor
sub
pop
enter
imul
sub
xchg
sub
or
mov
outsl
test
pop
fdivrl
jecxz
cmp
sbb
fisttpl
or
rclb
ret
inc
int
and
push
xchg
sub
data16
mov
inc
mov
sbb
mov
cld
dec
mov
jp
out
sub
push
test
jge
pop
outsl
test
mov
lods
js
stos
call
push
adc
movsl
mov
inc
aam
adc
add
cmp
ret
jp
push
out
sbb
cmpsb
cmp
cmpsl
pop
test
sbb
add
test
jb,pt
add
xorl
out
lret
cwtl
and
mov
sbb
lock
incl
lock
push
cmp
jecxz
cmc
sbb
pop
outsb
pushf
dec
xor
into
and
and
lret
repz
test
stos
sbb
in
pop
imulb
sbb
loopne
adc
rclb
int3
ljmp
outsb
imul
sbb
leave
das
jp
enter
int
cmp
inc
call
cli
sbb
xchg
pop
push
cmp
ljmp
fidivs
pop
in
mov
xor
fbld
pusha
sub
xor
aaa
stos
loop
or
movsl
xor
or
ss
into
xchg
jno
daa
mov
addr16
pop
xor
xor
inc
mov
cmp
aaa
adc
xor
stc
dec
aad
add
lock
add
sarl
sub
mov
stos
add
outsl
push
dec
sub
cltd
mov
insb
ss
mov
adc
stos
ud1
jle
out
aas
sti
shll
adc
aam
push
or
insb
loope
mov
fnstenv
cmpl
fstpl
dec
adc
mov
or
pop
xor
ljmp
filds
aad
inc
sbb
in
inc
jnp
mov
inc
mov
jae
cmp
cli
sbb
adc
jo
xchg
mov
xor
enter
xchg
and
jne
inc
popf
pop
ljmp
pop
xchg
test
in
rolb
pop
call
subl
sbb
and
daa
pop
aaa
aaa
push
hlt
sub
sub
aaa
insb
mov
aas
out
popf
cmp
cli
loop
mov
pop
sub
cli
leave
imul
and
fwait
stos
test
fimuls
jne
aas
jne
scas
adc
fsub
jne
out
xchg
les
in
pop
movsl
fisttpl
mov
hlt
pop
pop
xchg
test
lret
enter
aaa
cmp
lahf
repz
mov
negb
outsl
jmp
ret
ss
movsl
mov
roll
ds
mov
mov
push
int
inc
testl
inc
cltd
xor
clc
and
lahf
pop
lds
sbb
xor
mov
or
aad
fcomps
sbb
lods
adc
div
cmp
fbld
cmpsl
call
jle
fucomi
loop
or
scas
xchg
mov
in
hlt
jle
mov
push
xchg
ret
clc
pop
mov
mov
adc
gs
iret
and
in
push
test
dec
add
insb
fsubp
lock
aas
dec
dec
or
adc
mov
xor
loope
and
mov
jo
pop
jo
adc
mov
sar
rorb
imul
mov
jecxz
push
test
sbb
cmp
cli
pop
push
xchg
ljmp
jbe
sbb
inc
cmc
fisubrs
lret
fcomip
cmp
pusha
js
hlt
or
xchg
ja
xor
fwait
mov
sub
push
xor
sbb
je
cmpsl
shrl
mov
add
mov
in
xor
and
mov
cmpb
shlb
cmp
mov
add
and
and
iret
adc
in
pop
cmpsb
cmp
xchg
mov
movsl
out
mov
ljmp
xorb
pop
ljmp
sub
add
test
mov
adc
sub
ret
out
dec
sbb
pop
imul
shll
pop
lret
mov
pop
scas
cmp
inc
clc
xor
les
cmp
aam
into
in
mov
in
stos
jne
inc
inc
notb
and
add
gs
bound
or
popa
push
mov
pop
adcb
nop
test
pop
popf
rcrl
mov
repz
dec
data16
inc
fwait
adc
sahf
sub
int3
hlt
sub
xchg
push
repz
xchg
dec
icebp
cmp
inc
sub
cwtl
arpl
cmpsb
lcall
dec
les
daa
data16
scas
lea
or
dec
sub
xor
insl
sti
movsb
push
les
test
adc
push
push
add
lahf
roll
mov
sarb
mov
in
loopne
pop
xchg
adc
push
adc
push
addr16
pop
int3
mov
and
arpl
mov
subb
rep
xor
push
icebp
inc
pop
gs
jo
rorl
mov
stos
bound
pushf
sbb
shll
insb
xlat
sahf
mov
shrl
inc
std
adc
push
jae
cmp
movb
push
push
test
fidivs
pushf
inc
das
lret
js
sub
in
aaa
push
and
rclb
xchg
xlat
dec
cmp
scas
jge
dec
out
dec
lock
push
jne
jne
pop
ficoml
or
cmp
or
sbb
sbb
lea
in
xchg
inc
dec
popa
adc
aam
cld
test
and
mov
ret
mov
cvtdq2ps
and
adc
call
mov
xchg
aam
add
jl
mov
int
xchg
notb
push
outsb
outsl
test
xor
das
loop
jno
push
cmpsb
push
inc
inc
movsl
xchg
pop
or
or
add
jnp
out
imul
cmpl
aad
sbb
adc
add
inc
xchg
cmp
repz
add
inc
mov
call
scas
pushf
es
dec
and
ss
and
cmp
and
push
push
jecxz
xor
sbb
pop
cmp
push
mov
or
gs
mov
test
sarb
jo
movsb
das
mov
scas
push
into
hlt
inc
xchg
js
into
faddl
bnd
out
out
shrl
jecxz
pop
mov
jb
xchg
mov
je
pop
fcoms
pop
arpl
jne
sbb
mov
dec
in
and
cmpb
add
dec
js
mov
je
jmp
aad
mov
loope
jb
out
xlat
outsb
insl
adc
sbb
aad
pop
cmp
cmp
insl
cwtl
mov
xlat
mov
dec
shl
push
jge
cli
push
stos
jl
mov
pushl
dec
and
pop
sbb
test
cmp
mov
shrb
ljmp
push
stc
insb
lods
sbb
jg
iret
cmpsb
pop
adc
adc
adcb
loopne
mov
jp
mov
mov
ja
cmp
movsb
and
mov
inc
pushf
xor
xor
sub
negb
adc
dec
dec
incl
je
push
add
push
ds
xor
cmpsl
test
pop
push
pop
daa
push
mov
jae
in
add
sbb
add
pop
mov
fs
mov
lds
mov
push
xor
or
loope
xchg
shr
pop
mov
rorb
cmp
jge
adc
sbb
sbb
js
int
adc
fisttpll
inc
test
mov
adc
push
pop
test
xchg
ret
sahf
das
sub
pop
fwait
pop
jns
frstor
shl
pop
popf
and
rclb
bound
and
mov
xchg
pop
inc
adc
cmp
xchg
in
cli
push
or
push
inc
pop
hlt
mov
gs
int
js
call
cmp
dec
lds
mull
or
cmp
cmpsb
movsb
enter
leave
test
push
cs
enter
xchg
popa
enter
movsl
bound
add
repz
inc
roll
out
or
sub
icebp
arpl
xor
sub
or
stc
popf
xor
sub
mov
les
mov
pop
jne
out
mov
insl
add
inc
mov
insb
push
enter
stos
xor
mov
movb
dec
call
lock
and
mov
mov
fcoml
xor
ss
insb
stos
aas
xchg
or
add
sbb
cmp
ss
or
sbb
movsb
stc
std
pop
lods
mulps
mov
dec
dec
popa
movsb
sbb
xor
out
ds
mov
out
sub
cmpsl
lret
sub
aam
pop
icebp
cwtl
add
bound
jae
enter
aam
push
lock
push
stos
mov
stos
inc
mov
fists
push
shll
mov
call
loopne
test
xchg
fdiv
clc
fcoms
and
cmp
mov
push
fcmovnbe
jp
mov
mov
es
pop
cli
pop
insl
bound
lds
addb
xcrypt-ofb
cmpsl
outsl
arpl
add
repnz
mov
aad
xchg
jbe
xchg
out
ret
hlt
nop
or
scas
push
ljmp
mov
insb
and
stos
adc
pushw
jmp
add
fwait
int3
out
iret
dec
lods
pop
int3
aad
xor
test
pop
int3
jae
int
ja
cmp
ds
or
pusha
pop
hlt
jne
rol
pop
aas
ja
and
add
int3
rolb
iret
xlat
pcmpeqb
cmpb
cli
out
pop
pop
adc
cmp
jno
sbb
sbb
and
adc
xor
sar
xor
inc
and
in
and
out
cmp
fs
adc
shlb
xor
and
jl
push
ljmp
cmpsl
and
lret
imul
je
inc
lahf
push
fadds
shrb
mov
and
xchg
nop
fists
fs
ja
pushf
shrb
stc
out
pop
inc
pop
into
inc
cmpsb
aaa
pop
pop
stos
repz
bound
cmp
cmp
das
int3
jge
cmpsl
lods
xchg
call
aad
dec
cmc
cmpsb
sti
xor
cmp
or
push
icebp
lret
enter
jno
in
pop
in
sbb
scas
mov
push
sbb
or
xor
testw
add
sub
shrb
mov
repz
push
dec
lahf
pop
mov
rcl
mov
movsl
rcr
sub
cli
dec
into
mov
sti
inc
mov
xlat
cmp
fldl
loopne
push
fdiv
fmuls
test
dec
out
in
dec
mov
into
mov
nop
scas
out
jb
inc
mov
inc
sbb
push
in
inc
cwtl
inc
xor
sub
je
es
ret
sbb
inc
ljmp
xchg
bound
push
cltd
sbb
cwtl
push
sbb
mov
push
cmp
sbb
mov
jo
push
aaa
mov
cli
inc
outsb
enter
or
loop
gs
lds
repz
jnp
mov
fisttps
ret
pop
mov
xchg
pop
clc
jmp
xor
xorl
sbb
leave
adc
cmp
jo
dec
or
mov
jo
mov
mov
je
fisubrl
pop
adc
dec
mov
push
mov
and
sbb
cmp
jno
xchg
jge
rclb
pop
and
or
dec
mov
sbb
cmpsb
imul
loopne
adc
pop
jmp
int
jp
adc
mov
add
aam
cmp
test
imul
cmp
jg
pop
fldt
cld
mov
ss
iret
gs
ss
mov
leave
shll
scas
mov
or
int3
out
shrb
cmp
add
mov
inc
in
pop
xchg
xchg
das
fdivrs
subb
out
adc
dec
fstpt
mov
dec
xchg
xchg
lods
push
stos
outsb
cmp
cmp
jmp
data16
dec
jp
and
aad
jle
andb
sarl
sub
dec
dec
int3
mov
fcompl
jge
rorb
and
add
and
xchg
insb
jecxz
sub
xchg
popa
push
mov
pop
fldt
push
pusha
sbb
arpl
insb
cmp
sti
aam
mov
adc
add
leave
jle
fcomps
sar
mov
jns
ds
mov
jne
pop
push
cmp
adc
fldcw
clc
test
sbb
push
ds
int
out
cmpsl
adc
outsb
test
mov
mov
ss
add
bound
test
je
icebp
jle
jecxz
add
jp
shrl
and
xchg
adc
cs
lds
movsl
sub
push
jne
mov
sub
loope
xchg
jp
xor
das
ret
ds
jns
sub
sti
scas
repnz
adc
loop
cwtl
movsb
ja
jne
in
fdivl
pop
dec
movl
fdivs
imulb
jbe
pop
dec
mov
push
lcall
mov
or
enter
aad
push
and
jnp
in
cltd
mov
cmp
pop
jb
inc
jbe
adc
fs
arpl
and
push
mov
dec
cmc
fistpll
insl
xorl
dec
xor
mov
xlat
fistps
lcall
adc
fwait
jmp
pushf
push
sti
or
mov
nop
mov
pop
fcomp
push
subb
sbb
mov
sbbl
mov
in
jge
inc
xlat
je
incb
mov
test
cmp
cmp
scas
ljmp
inc
cli
pop
sub
mov
mov
pop
cmp
pop
add
mov
mov
fistps
adc
dec
or
cmp
xor
popa
popa
icebp
cmova
dec
aas
xor
out
xor
fstp
xor
js
jmp
out
lea
test
insl
jle
add
push
pop
jecxz
mov
lods
mov
jb
mov
mov
add
aas
sbb
stos
stos
jno
lock
pop
or
mov
ret
push
xchg
jns
adc
test
inc
cs
sub
add
pop
fildl
daa
fs
cltd
leave
in
stc
sbb
subl
and
mov
lret
pop
mov
stos
push
mov
and
loopne
iret
sub
ret
pop
aas
adc
cwtl
out
not
test
mov
xchg
sub
pop
imul
jg
lret
mov
jl
sbb
clc
lret
pop
stos
mov
mov
pop
rorb
in
pop
mov
rorb
mov
add
mov
aas
cmp
test
or
or
int
mov
lods
push
jecxz
scas
xchg
lret
cmc
inc
inc
mov
ffree
mov
mov
outsb
cmc
int3
lds
pop
add
xchg
in
xor
in
add
pop
or
jns
imul
jae
sbb
xor
clc
push
cli
push
push
std
mov
push
push
aaa
jns
dec
xor
es
push
sbb
xor
pop
jb
inc
fdiv
dec
adc
test
stos
lock
in
xor
leave
in
dec
aad
add
iret
out
loope
and
aaa
mov
push
inc
scas
repz
or
iret
pop
xor
das
adcb
and
clc
and
mov
fpatan
mov
fstl
jae
or
jge
mov
fwait
sbb
dec
push
repnz
mov
stos
mov
dec
xchg
or
and
cmp
add
into
int3
sti
mov
cmpsb
sub
sbb
aad
mov
leave
pop
mov
pushf
fistpll
pop
push
jmp
push
and
addr16
loopne
je
fldt
orb
add
inc
cmp
xor
fwait
lods
out
jo
cmp
aaa
ror
or
imul
lret
mov
adc
fs
fnstcw
add
repz
push
add
aam
dec
push
pusha
xlat
js
jmp
loope
push
in
jb
xchg
push
ret
xor
lahf
in
push
loopne
sbb
and
in
pop
lods
fadd
push
mov
test
inc
and
lret
clc
call
jp
sahf
aaa
scas
lcall
inc
mov
stc
decb
push
jmp
fwait
clc
icebp
cmpsb
mov
adc
sbb
pop
popa
sub
pop
mov
mov
cmp
fs
test
in
jl
xchg
adc
xrelease
cmp
dec
cld
inc
cli
shrl
fisubrs
das
repz
mov
jge
or
cmp
or
mov
cmp
sti
imul
pop
add
push
mov
jae
dec
mov
xor
sub
int3
sbb
mov
xchg
xchg
ja
popa
or
cmp
push
loop
lds
adc
dec
adc
and
jns
cmp
jl
jge
dec
into
notb
stos
push
jb
out
imul
adc
fsubr
dec
in
mov
sub
mov
add
aas
mov
pop
outsb
cs
cmc
stc
jle
mov
es
or
add
push
mov
push
nop
je
ret
jmp
imul
into
cs
mov
test
push
xor
mov
dec
es
sbb
stos
xchg
mov
push
cmpb
out
icebp
jo
push
jno
mov
xor
movsl
andl
inc
mov
dec
xchg
push
adc
pusha
inc
int
in
sub
fisttpll
ret
add
mov
icebp
mov
aaa
out
jge
into
decl
fnsave
call
call
loop
cld
and
pusha
insb
or
movsl
pop
push
dec
pop
inc
leave
shl
push
xchg
into
mov
jmp
and
xchg
sahf
outsb
imul
push
out
jo
mov
cwtl
cmp
ds
fldcw
pop
mov
mov
movsl
mov
hlt
xor
push
sahf
or
mov
mov
cmp
push
jbe
daa
xor
pop
hlt
sub
jecxz
pop
xchg
ja
mov
mov
add
or
inc
mull
lods
or
xchg
gs
xor
std
xor
add
xchg
sub
mov
push
das
aas
mov
pop
std
out
or
icebp
movsl
fisubrl
mov
cs
dec
sbb
mov
fwait
cwtl
je
or
and
and
mov
jle
xchg
cmc
cld
fmul
hlt
dec
rclb
inc
inc
sar
mov
inc
sti
lods
aas
and
xchg
out
mov
push
andb
push
inc
inc
mov
lcall
cmc
sub
mov
and
pop
fistl
repnz
add
aad
orb
sbb
hlt
mov
lods
jmp
inc
nop
and
add
inc
pushf
inc
loop
or
xor
test
mov
mov
and
and
sbb
lret
es
shr
inc
inc
jle
enter
xor
daa
pop
je
or
arpl
adc
jns
dec
rorb
jo
movsb
test
xlat
iret
xor
loop
pop
leave
jl
mov
xchg
mov
into
pop
push
cmp
lahf
in
mov
dec
jp
pop
xchg
and
addl
aad
xor
scas
ds
aad
cltd
scas
jg
outsl
push
mov
adc
cs
stos
cwtd
mov
mov
pop
cli
out
mov
test
faddp
and
lret
push
mov
ljmp
add
fstpl
in
test
push
add
into
jb
pop
xchg
jo
stos
adc
std
cmp
jo
daa
xor
stos
cmpsb
adc
mov
pop
inc
popa
insb
out
xlat
mov
add
push
mov
sub
dec
pop
es
stos
dec
mov
das
loope
nop
int
hlt
xchg
push
hlt
ss
inc
pop
xchg
cmpsl
or
pop
mov
test
and
mov
test
cmp
stos
daa
lea
mul
insl
in
push
fwait
push
es
adc
icebp
repnz
aaa
jg
jmp
xor
push
les
out
jge
push
mov
jbe
cmp
das
mov
lahf
aas
lds
add
push
out
dec
addr16
sbb
scas
cli
add
or
jg
mov
ljmp
jne
ss
popf
int3
mov
bound
xor
or
xlat
pop
sar
lods
pop
mov
das
iret
sti
rcrl
jecxz
jns
mov
and
mov
repz
adc
aaa
xor
inc
mov
mov
loope
mov
mov
xlat
lds
pop
popa
notb
out
pushf
cmpsl
sahf
adcb
mov
jae
or
sbb
cmp
pusha
sahf
in
xchg
xchg
iret
mov
pusha
mov
push
fs
mov
mov
mov
shrl
xchg
sbb
shrl
cmp
inc
cli
rcl
jge
lock
dec
inc
mov
jp,pn
sti
or
jge
pop
notl
lods
loop
mov
mov
dec
dec
and
jmp
mov
gs
lahf
mov
add
lds
scas
mov
xchg
out
push
mov
imul
cmp
enter
ja
xorl
and
roll
imul
movsl
xchg
mov
imul
push
std
adc
mov
rolb
movaps
scas
pop
imul
mov
fs
sarb
xchg
xchg
pushf
cltd
xor
jecxz
clc
sbb
sub
sbb
dec
call
icebp
xchg
lahf
iret
inc
popf
das
lret
sbb
clc
mov
jl
or
mov
xor
pop
outsb
and
mov
xor
ss
lea
shlb
inc
xchg
or
adc
shlb
and
imul
sar
and
mov
pop
mov
out
insb
inc
sbb
test
and
int3
cmp
pop
ret
pop
xchg
loop
cmc
stc
je
push
cmp
int3
cld
int3
jg
fdivrl
orl
mov
jb
dec
out
xor
fisubrl
mov
jb
fbld
das
dec
rclb
fisttpl
imull
bound
sbb
jg
jo
std
push
mov
inc
push
adcb
repnz
in
xchg
in
mov
cmp
cmpsb
cmc
adcl
jl
mov
jecxz
jl
lahf
rolb
pop
aas
addr16
inc
inc
mov
xchg
pop
push
jg
lea
js
inc
je
lods
mov
sub
rclb
jl
adc
mov
je
lods
lods
jne
cmp
leave
sbb
push
fimull
mov
data16
xchg
adc
fnstsw
out
push
fstp
stc
sbb
adc
loope
ret
iret
data16
jecxz
pop
xor
sub
cs
subb
fcoml
push
xor
xchg
test
push
and
and
xlat
pop
adc
pusha
xor
in
shl
out
std
mov
dec
aas
loopne
or
int3
xor
fwait
notb
push
xor
cmc
and
push
mov
sar
movsb
fs
stos
dec
xor
lahf
cltd
mov
lea
mov
mov
mov
icebp
sub
movsl
aas
rcrl
aas
adc
dec
int
lea
pop
stc
and
mov
fidivrl
es
or
or
cmp
mov
insb
mov
in
push
sbb
or
ljmp
mov
mov
xlat
or
ja
and
xor
lods
sub
cmc
inc
cmc
xchg
sar
jne
adc
jp
js
sbb
push
and
xchg
daa
pusha
push
and
fisttpl
push
add
push
xor
nop
pop
xchg
pop
jp
orl
repnz
test
lcall
jo
loope
cmp
add
xor
mov
xchg
test
loopne
jmp
scas
scas
push
cwtl
add
idivb
sub
pop
ljmp
or
push
mov
cmpsl
ja
decl
shl
in
mov
pop
mov
cltd
lahf
testb
into
loop,pt
lret
xor
push
fldt
shll
in
insl
mov
inc
call
stos
ss
cmp
dec
stos
ret
push
fwait
pusha
cmp
mov
adc
xlat
popf
aad
pop
pop
add
inc
push
push
xchg
or
leave
ss
sbb
rclb
enter
loop
pop
shl
data16
jp
test
sbb
hlt
hlt
mov
push
dec
add
lahf
popf
or
pop
jns
jne
ret
lock
inc
frstpm(287
icebp
jp
std
pop
rclb
nop
mov
xor
loopne
inc
mov
cmp
push
xchg
cs
ss
dec
sub
lret
rcrl
cmpl
out
imul
fdivr
push
shlb
jp
dec
in
or
nop
dec
xor
lea
aam
mov
pcmpeqb
mov
fsts
cwtl
data16
add
ljmp
jmp
mov
pushf
pop
add
lcall
popf
scas
sbb
loopne
fbld
jae
lret
insb
jo
mov
dec
push
lret
leave
movsb
xchg
pushf
fdivrs
mov
outsl
enter
xor
and
sti
iret
aad
lock
out
push
jae
xchg
or
inc
pusha
push
aad
sub
into
nop
movsl
imul
xor
cvttps2pi
rcrb
jae
mov
loope
mov
testb
shlb
shlb
and
loop
divl
in
adc
int
pop
popf
inc
and
jns
leave
inc
sbb
das
xor
shrl
mov
add
lcall
sarb
ficomps
imulb
int3
add
ja
sbb
out
xor
sahf
xchg
int3
mov
inc
fstpl
xchg
fnstsw
int
mov
lds
jl
into
sub
jb
ret
mov
aaa
cltd
ja
adc
or
ljmp
roll
mov
or
aad
xor
xor
pop
xor
add
cmpsl
call
call
loopne
jae
sti
pop
push
xchg
ret
dec
clc
xchg
push
jmp
ret
inc
cmp
cwtl
ds
test
cmp
sti
in
push
cld
ljmp
inc
test
mov
out
cmp
adc
xor
cmc
sbb
dec
cmp
movsb
mov
dec
mov
ja
insb
xor
inc
ficoml
std
and
push
ret
fwait
xchg
inc
mov
fsubl
push
insb
dec
ret
mov
and
insl
out
xlat
in
fdivs
in
cmpsl
fldenv
ret
rol
pop
pop
loop
pop
movsb
cmp
pusha
aas
push
push
into
inc
pop
ret
adc
mov
sub
scas
jcxz
mov
pop
add
pop
loop
xchg
call
cmp
pop
jl
rorl
and
inc
movsb
jne
and
mov
push
leave
lcall
ret
sti
loope
sub
mov
les
xor
sub
stos
sbb
pop
sub
test
int
add
cs
inc
leave
loopne
scas
mov
movsl
data16
fidivrl
add
pop
pop
out
stc
inc
jno
insl
data16
mov
addr16
pop
mov
mov
or
les
add
cmp
fisubrs
fdivrl
movsl
iret
sahf
push
or
push
inc
repz
pop
adc
jns
scas
xor
pop
inc
loopne
test
push
ja
ret
mov
enter
adc
popl
inc
mov
xchg
int3
and
nop
xchg
jmp
pop
pop
jp
adc
mov
cmpb
popa
and
aad
daa
or
sub
into
xlat
fwait
loop
xor
fstpt
stos
sbb
push
push
pop
js
adc
mov
mov
mul
mov
adc
xor
aas
repnz
rcl
popa
mov
or
dec
push
js
sbb
xlat
jbe
mov
adc
cs
mov
addr16
test
movsb
xor
sbb
repz
dec
push
insb
or
fistpl
lock
mov
mov
sbb
jg
testb
jle
cs
jbe
adc
insl
fisubrs
pop
jbe
xchg
and
mov
popf
sbb
inc
stos
js
sahf
ss
cmc
insl
loopne
fisttps
adc
sbb
jmp
scas
adc
jb
mov
das
test
orl
sub
gs
xchg
mov
inc
xchg
or
fsubrs
popf
sbb
dec
jmp
mov
add
and
cltd
sahf
fabs
jo
insl
das
mov
cmp
sbbb
xchg
fiadds
add
lea
pop
xorb
xlat
mov
add
jl
leavew
jns
xor
shrl
test
push
xchg
loope
and
jne
inc
daa
ficompl
add
nop
jmp
add
cli
push
pop
popf
jbe
inc
mov
mov
pop
test
xchg
divb
out
fsts
push
into
stos
cmp
sub
adc
or
cli
lea
add
aam
pop
and
das
cmp
fistpll
dec
lock
jp
je
add
and
adc
das
fcoml
sub
cs
movsl
and
mov
push
movsl
call
push
jns
sbbb
icebp
add
mov
push
in
adc
xchg
repnz
add
mov
rorl
aaa
and
push
shlb
daa
mov
into
mov
push
lods
aad
outsl
aas
mov
cmp
aas
inc
pop
xchg
mov
cld
int3
out
cli
push
sbb
adc
adc
pop
lret
mov
movsb
dec
insb
cmc
push
or
xchg
das
fwait
push
xchg
inc
or
stc
bound
pop
out
add
xor
xchg
shlb
ja
adc
sbbb
or
xchg
notb
mov
add
int
int
int
cmp
mov
cld
push
je
jo
jo
dec
stos
mov
and
fistps
jne
mov
movsb
nop
ss
adc
mov
mov
adc
orb
jb
xchg
movsb
lds
xor
xchg
or
mov
inc
in
fistpll
sahf
add
sub
jmp
push
dec
icebp
enter
cmp
aas
outsb
lods
int3
xor
mov
rcrl
mov
iret
inc
shr
and
insl
xchg
xor
lods
add
inc
scas
dec
cltd
push
pop
jp
orl
cld
fwait
xor
cmp
cmp
cmp
sub
int
mov
push
lods
aad
cwtl
in
mov
insl
js
add
rcr
fcomps
jne
jg
fs
jge
popa
bound
adc
xchg
mov
out
daa
push
xlat
arpl
in
mov
and
in
test
cmp
pop
sahf
test
std
ljmp
rcrl
adc
jo
xchg
out
cmp
idivl
repnz
cmp
cltd
xor
push
push
mov
cmp
add
mov
lods
popf
popf
adc
repz
sub
jo
add
stos
inc
push
mov
mov
xor
sti
imul
xor
enter
push
insl
cmp
lahf
sub
pushf
call
movsb
mov
pop
enter
cmp
clc
cmc
packsswb
mov
jb
movsb
dec
gs
add
sbb
stos
ret
mov
push
movsl
xor
and
add
adc
adcb
fstps
mov
sub
insb
push
pop
add
push
call
loop
aaa
pusha
cmpsb
leave
inc
stc
xchg
mov
data16
call
inc
or
mov
xchg
dec
mov
mov
adc
or
inc
sub
aam
mov
clc
out
jp
mov
adc
jl,pt
addr16
iret
dec
jecxz
dec
addr16
jbe
rol
cmp
rcl
jo
in
mov
sbb
or
xchg
xor
imulb
movsl
scas
fldt
xor
mov
rolb
js
out
cmp
mov
adc
pop
lods
inc
mov
jecxz
jns
or
inc
mov
mov
data16
ret
pop
je
in
popf
call
mov
imul
movsb
addr16
pop
cmp
mov
pop
mov
adc
decb
or
aas
arpl
in
pop
adc
sbb
xchg
push
pop
and
and
cmp
jle
mov
sub
fwait
xchg
imul
shll
shlb
sbb
cmp
sti
dec
shlb
testl
add
sbb
jne
jo
jp
jp
icebp
dec
xor
popf
pop
pop
xor
push
cld
xor
ss
fsubs
das
push
and
jge,pt
cmpsb
pop
cli
inc
adc
and
xchg
out
sbb
aaa
push
xchg
fwait
lret
nop
outsb
test
out
mov
loope
imul
jge
js
out
jmp
inc
adc
insl
dec
xor
jge
jg
jo
pop
inc
out
lds
xor
test
cmp
push
push
bound
cmp
or
dec
xlat
dec
xlat
mov
cmp
js
and
sub
dec
lahf
sub
or
aad
jmp
cmc
ljmp
enter
movsb
jno
je
out
hlt
push
test
scas
lods
decl
mov
mov
mov
bound
cmp
push
mov
and
loope
push
incl
out
add
imul
rclb
xlat
sub
push
int
pop
inc
aaa
sub
adc
dec
cmc
cmp
sub
and
push
mov
lret
testl
xchg
dec
adc
or
sub
dec
adc
cld
mov
cltd
sahf
ficoml
out
ret
stos
adc
push
fstpl
mov
jb
xor
mov
lret
jmp
or
add
js
xchg
lcall
mov
orl
scas
or
in
movsl
push
push
jg
leave
scas
imul
xchg
clc
scas
js
mov
adc
fsubr
and
sbb
out
pop
sbb
adc
addl
stc
dec
mov
sbb
hlt
jbe
push
insl
push
sub
push
in
pop
or
and
add
pop
push
andb
xor
and
shlb
xor
orb
xor
repnz
test
lods
or
xchg
lahf
xlat
mov
outsb
fisubs
sub
insb
pop
mov
mov
sbb
icebp
mov
test
stc
xor
add
stos
loopne
dec
or
add
xchg
pop
test
mov
push
add
or
mov
and
mov
pop
out
adc
scas
xchg
and
sbb
pushf
dec
cmp
xchg
push
cmp
push
fwait
nop
cmp
push
mov
sub
cmc
dec
out
lods
cmc
mov
repz
mov
adc
out
loope
pop
es
or
inc
jbe
sub
imul
mov
lea
xor
cmp
sub
dec
ljmp
push
mov
xchg
mov
call
inc
push
in
rcr
add
shrl
ss
into
sarl
fsts
or
fnstsw
or
dec
pop
out
ljmp
and
cwtl
outsl
std
sbb
shlb
pop
fwait
iret
aaa
imul
push
push
mov
clc
sbb
jg
sahf
push
aam
mov
push
mov
push
push
and
push
xor
pop
jecxz
add
jae
shrb
jg
lods
or
add
xchg
shll
jmp
mov
iret
test
lahf
push
dec
into
jnp
sub
mov
jmp
outsl
inc
dec
mov
adc
mov
sbb
jno
inc
adc
xor
in
mov
dec
push
xchg
add
push
movsl
and
mov
mov
xchg
sarl
loope
ds
clc
int
dec
add
mov
popf
cmpl
outsl
or
inc
out
mov
insb
pop
fcompl
movsb
cmp
pop
ss
pop
aaa
leave
sub
rcrl
mov
push
sbbl
sbb
jp
sub
push
mov
pop
mov
xor
pop
std
ret
aam
mov
lods
repnz
dec
repnz
mov
adc
js
lahf
mov
mov
sbb
mov
inc
sub
fcmovnb
rcl
cwtl
and
loopne
sbb
mov
adc
xor
fidivs
mov
outsl
sub
or
repnz
loopne
outsb
or
mov
test
xchg
cltd
arpl
pop
jecxz
mov
out
sar
xor
push
cmp
lret
inc
aam
jae
incb
xchg
leave
mov
cli
aam
xor
push
clc
in
cmp
sti
loop
lock
pop
mov
pusha
jg
rcrb
add
mov
out
cmp
xchg
addr16
aaa
lcall
mov
nop
push
in
mov
out
mov
xor
push
ljmp
adc
iret
test
jmp
push
sbb
push
lret
lahf
cli
call
movsb
dec
adc
cld
hlt
mov
nop
mov
mov
mov
mov
add
fldt
mov
movsl
fmull
add
inc
dec
into
mov
jp
pop
or
jnp
pushf
xchg
enter
cmpsl
jne
and
jge
sub
orb
pusha
ret
jl
xor
dec
int3
jnp
mov
add
arpl
jg
mov
in
lret
sarb
shrl
mov
jo
fcmovnb
push
dec
fdiv
mov
jecxz
or
jno,pt
arpl
call
ret
outsb
jp
mov
dec
movb
jl
mov
dec
iret
fucom
lea
std
lds
pop
cltd
sub
js
ret
push
jge
add
ret
loop
ret
jecxz
std
jle
incl
or
jmp
lcall
lods
gs
inc
lea
test
lods
popa
dec
sub
inc
inc
cmp
inc
les
cmp
dec
outsb
lret
mov
test
ja
pop
movsb
adc
call
and
jmp
and
mov
cmp
xor
stc
add
push
mov
push
cli
fs
fdivrl
xchg
js
push
mov
fadd
sahf
dec
inc
jp
jmp
test
push
push
sbb
pop
inc
cltd
aad
fs
mov
adc
cld
or
sbbb
mov
push
nop
cwtl
divb
pop
inc
push
pop
jb
and
cwtl
ret
sub
inc
rcrb
jp
sbb
out
scas
mov
repnz
push
push
out
leave
imul
mov
adc
dec
xor
cmp
clc
test
jl
xchg
sbb
adc
stos
mov
lret
and
les
push
mov
pop
mov
mov
push
nop
dec
mov
subl
adc
das
adc
sub
xchg
ljmp
mov
mov
ret
mov
popf
xor
fcoms
inc
push
lcall
pop
rcrb
out
adc
mov
cmp
out
dec
sbbb
stc
ret
scas
std
stc
stos
xor
add
mov
xor
xor
bnd
roll
jno
stc
repz
aam
mov
aaa
icebp
in
mov
or
mov
mov
add
in
pop
fwait
dec
loopne
iret
xchg
mov
jg
or
mov
imul
jecxz
iret
mov
dec
sub
aam
in
jg
dec
stc
lock
inc
mov
outsl
mov
iret
cwtl
pop
push
jmp
nop
xchg
aam
xchg
fistpll
int3
inc
mov
xchg
xchg
push
and
insl
adc
jae
pop
fsts
mov
add
fcmove
jno
push
cld
sbb
int
stos
jge
xchg
sub
cli
and
jo
mov
icebp
scas
movsb
inc
cld
mov
xlat
loope
mov
pop
xchg
stos
bound
mov
cmp
hlt
testl
setno
sub
xchg
ret
scas
packsswb
mov
addb
sub
cmp
push
outsl
jno
cltd
pop
outsb
cld
fadds
mov
sbb
insl
fdivl
pusha
mov
push
mov
pop
nop
inc
cmpsl
cli
je
or
icebp
lods
pop
push
pushf
loope
test
jns
cwtl
jno
insl
in
out
xchg
sahf
xor
jbe
flds
fsubl
xor
cmovb
dec
shlb
pushf
orb
jge
adc
mov
inc
aas
inc
sbb
mov
inc
cltd
and
xchg
or
jmp
negl
in
inc
lcall
iret
mov
insl
jmp
sub
cmp
fistpll
jecxz
loopw
push
mov
jns
mov
out
adc
jg
fsubrl
xchg
push
rcl
jle
js
test
int
int3
pop
add
in
sarb
xor
insb
mov
dec
repz
push
daa
mov
pushf
jge
jle
mov
sub
lods
pop
hlt
es
aaa
insb
xchg
daa
enter
push
rorl
sub
imul
rcl
sbb
pop
xor
mov
lea
mov
hlt
cmp
dec
out
xor
push
js
fxch
and
pop
in
or
rep
lods
ds
in
les
mov
mov
popf
jno
loope
cmp
data16
cli
cmp
cwtl
inc
in
sbb
mov
inc
icebp
adc
mov
cmp
dec
sti
lods
cmpb
insl
dec
mov
mov
xor
iret
inc
js
int3
es
dec
pop
cwtl
test
cmp
into
lods
in
push
jo
rolb
sbb
flds
push
imul
xor
mov
inc
push
loop
xchg
jbe
push
bnd
push
push
xchg
lea
sub
jbe
jp
mov
in
push
ficoml
in
push
aas
adc
stos
imul
add
push
xchg
inc
cmpsl
sub
testb
gs
sbb
inc
mov
jmp
add
adc
push
cmp
mov
cli
jmp
hlt
sub
push
test
push
das
push
pop
jae
mov
lahf
jno
fcomp
dec
test
pop
cmc
test
cmp
and
mov
xor
xlat
aad
dec
add
xor
mov
mov
dec
add
or
pusha
mov
jl
pop
mov
lahf
outsl
pop
fcoml
inc
sub
iret
or
test
add
pushf
jp
cmp
inc
test
ret
sbbb
repz
dec
xchg
test
pop
mov
hlt
cmp
jmp
dec
cs
bound
cmp
fmull
mov
dec
xor
pop
movsl
dec
or
jg
and
mov
aaa
xchg
pop
out
inc
insl
shlb
in
aaa
pop
dec
sbb
sbb
cs
call
xlat
filds
leave
sub
idivl
out
ljmp
jbe
sti
ss
pop
cmp
stos
and
cmp
loopne
mov
addr16
inc
push
inc
pusha
inc
cs
push
popf
add
add
nop
mul
and
subb
inc
or
xor
sti
stos
iret
xor
ja
xchg
sbb
cltd
pop
push
out
jle
movsb
repnz
rclb
test
mov
mov
orb
mov
imul
cmc
shll
push
inc
mov
cli
cmpsl
cmp
bound
dec
pop
lcall
das
das
dec
add
sub
fsubrl
xor
inc
xchg
into
mov
adc
sub
es
inc
test
aas
dec
push
adc
ret
in
adc
outsl
xor
sub
dec
fwait
pop
push
nop
jl
mov
in
cmpsb
jmp
jg
jmp
ret
push
mov
fbld
xchg
xchg
xor
push
xor
leave
push
adc
pop
xor
mov
leave
xor
pop
in
xor
shlb
shlb
rorl
dec
jge
jle
lcall
jge
ret
mov
sbbl
pusha
dec
loopne
pop
pushf
lods
into
data16
fisttpll
mov
add
mov
cmc
sub
push
imul
dec
js
dec
cmc
ja
add
out
add
xor
jnp
push
cmp
xchg
cmpsb
test
sarb
jbe
pop
and
call
adc
andb
push
xchg
cmp
inc
sub
mov
dec
jno
or
and
out
insb
and
test
add
dec
inc
mov
leave
push
mov
fstps
mov
notb
xor
pushf
mov
bound
out
jb
in
out
aad
dec
test
inc
nopl
fsubrl
add
aad
xlat
push
push
stos
dec
or
cltd
push
std
fmuls
movsb
fs
fs
mov
push
xchg
sbbl
dec
push
mov
mov
imul
ud0
iret
sti
rorb
fnstsw
out
aaa
insb
mov
or
inc
mov
mov
fstpt
arpl
scas
shl
cmpsb
cmp
inc
jb
sbb
sub
jmp
mov
xchg
stc
pushf
scas
int
lret
sub
jae
clts
xor
and
cmp
addb
or
xor
sub
out
push
sub
push
sbb
pop
ja
or
pusha
cwtl
repz
cld
or
lret
mov
add
fidivrs
fidivl
add
push
popa
stc
cld
daa
addl
sbb
push
cmp
decl
mov
cli
shll
aaa
iret
rcll
xlat
leave
mov
ss
out
andl
in
jp
and
dec
inc
mov
push
xchg
inc
jg
or
and
dec
movsl
xchg
jmp
inc
pop
inc
jae
iret
jo
add
lods
fdivrl
sub
lods
or
push
cs
mov
dec
test
in
in
cmp
movsb
mov
shrb
lret
arpl
mov
insl
loope
cmp
data16
sub
cli
arpl
insb
or
daa
pop
jmp
sti
pushl
pop
inc
ja
mull
out
sbb
dec
ja
cmp
int3
sbb
mov
rorl
xchg
fwait
pop
jl
in
xchg
add
cmp
arpl
mov
sbb
jle
or
cmp
mov
jnp
or
mov
rorl
movsl
mov
loopne
mov
insb
cmp
fidivl
xorl
and
push
or
in
dec
lea
pop
negb
mov
les
cltd
mov
bnd
pop
notl
pusha
lds
sub
enter
mov
pop
cmp
dec
cmp
repz
in
dec
xchg
sbb
ljmp
xor
bound
mov
shll
lret
sbb
int
fwait
mov
sbb
fiaddl
stos
enter
or
add
les
cmp
add
add
sub
outsl
arpl
sbb
ret
cmpsb
repnz
cwtl
fstpt
mov
mov
jae
test
xor
mov
mov
addr16
mov
icebp
mov
test
imul
lcall
adc
cmp
mov
push
add
jle
adc
addb
sub
fisubrl
dec
cmc
push
hlt
xlat
je
mov
dec
fimull
pop
sub
mov
jg
imul
mov
roll
mov
sbb
push
mov
cmp
and
xor
dec
xor
out
ljmp
scas
stos
pusha
mov
jbe
inc
lods
aaa
pop
popf
shlb
xor
add
mov
rcl
sub
scas
and
dec
cmp
mov
add
icebp
adc
leave
lods
movsb
mov
xchg
xlat
cld
popf
test
int
jge
xchg
lret
call
sub
jnp
cmpsb
xchg
xorl
mov
cmp
pop
movsl
mov
fcompl
dec
stos
imul
fadds
lahf
jo
lret
mov
out
ljmp
imul
test
fstpt
shlb
test
aad
mov
or
lea
xchg
push
sub
aaa
mov
or
in
movsb
push
push
inc
or
push
addr16
iret
sbb
into
jbe
adc
mov
pop
xor
xchg
add
ret
sbb
stc
push
jecxz
jg
sbb
mov
icebp
push
xchg
cli
xchg
ds
dec
and
jecxz
push
ret
pop
adc
mov
in
and
jb
cmp
ds
sbb
mov
enter
jle
shll
cld
cmpsl
inc
push
lret
inc
xchg
loope
push
xor
test
or
test
adc
lea
cmpsl
test
es
imul
out
cmp
cwtl
sub
sub
sub
cmp
fnstsw
mov
lcall
mov
xor
cmp
ftst
lock
repz
pop
nop
js
or
xorl
push
or
xchg
push
lahf
hlt
adc
xorb
js
add
xlat
fs
shll
int
inc
fldcw
enter
sbb
pop
add
dec
mov
and
add
cmp
bound
dec
push
jb
cld
cmc
xor
out
out
movsl
ret
sbb
out
ret
mov
subl
or
dec
jae
sbb
shrb
fiaddl
aad
fs
pop
fs
push
fisttpll
jnp
mov
push
addl
into
nop
sub
adc
jae
cmp
int
mov
shl
fwait
and
inc
cmc
fucomi
adc
hlt
ljmp
aaa
pop
in
repz
or
jb
pop
mov
ja
fcoms
mov
mov
push
inc
sub
mov
or
mov
or
or
xor
imul
cmp
dec
out
add
sub
mov
pop
jne
stos
arpl
rolb
xchg
ja
sbb
mov
mov
push
sbb
inc
imul
sub
xchg
dec
sub
add
into
rclb
or
rclb
cmpsb
cmpsl
lods
mov
enter
or
inc
fidivrs
stos
push
cmp
sub
cmpsl
bound
je
sub
inc
test
adc
jbe
addr16
lahf
cmp
xchg
add
pop
lods
jb
or
cwtl
sbb
jmp
and
mov
dec
in
movsb
jo
insb
iret
das
cmp
push
push
rol
dec
in
add
lcall
mov
aaa
mov
jbe
iret
je
lods
movsb
mov
rol
out
iret
or
cmp
jmp
mov
cltd
stos
shrb
xchg
stos
inc
jns
in
sbbb
fistpll
imul
or
jo
hlt
jno
and
es
adc
push
jo
add
inc
xchg
mov
lahf
fdivrs
mov
movsl
je
jle
mov
mov
fstl
mov
adc
popf
js
cmp
nop
push
sbb
mov
jne
and
mov
add
outsb
ja
fldenv
sbb
mov
dec
cmc
sarl
pop
dec
repnz
and
mov
adc
cmc
sub
ror
popf
mov
lock
pop
stos
mov
lret
add
and
sti
xlat
stos
ret
movsb
pusha
hlt
mov
mov
adc
rorl
fdivrs
mov
rcrl
aaa
loop
in
mov
pop
push
xchg
int
push
cmp
mov
jb
cmc
inc
aad
sbb
addr16
ja
sbb
or
sbb
adc
jp
pop
pop
xchg
fadd
pop
cmp
push
ja
aas
push
add
andb
lcall
inc
ds
mov
push
mov
mov
adc
mov
stc
jns
and
pop
jge
gs
mov
inc
mov
ret
dec
clc
pop
pop
mov
popa
inc
dec
push
cmp
sub
jp
mov
pushl
xchg
xchg
xchg
xor
cmp
add
jmp
pop
pop
ds
add
loope
lcall
pushf
imul
orb
syscall
pop
xchg
push
xor
push
jo
icebp
push
sub
call
cmp
inc
imul
jp
jmp
fcoml
mov
jmp
mov
std
push
pusha
iret
dec
daa
xchg
xchg
xchg
fs
rcr
addr16
add
insb
xchg
jg
sub
xor
lret
jns
in
pop
xchg
jno
mov
fists
arpl
lahf
fisttpll
sub
pushf
negb
outsl
pop
jle
aas
sbb
cmc
fcoms
sbb
inc
mov
fs
rolb
inc
sbb
inc
push
es
dec
imul
mov
jbe
mov
xchg
pushf
movsb
mov
shrl
adc
pop
hlt
dec
mov
scas
movsl
or
xor
sub
mov
pop
mov
jmp
aaa
clc
insb
aaa
pop
sahf
cmp
sbb
out
fimull
inc
lahf
popf
inc
lret
pop
mov
out
imul
adc
lret
push
test
repnz
mov
scas
fs
push
or
imul
and
pop
lret
sahf
and
pop
scas
lods
cmp
mov
and
inc
jne
xlat
push
lea
andl
and
icebp
sbbb
dec
leave
and
sbb
in
inc
mov
sbb
insl
stos
mov
test
or
idivb
or
pop
sub
bnd
je
stc
sbbl
adc
jg
pop
mov
rcrb
pop
movsb
insb
dec
arpl
stos
stc
jns
sarl
bound
sahf
and
mov
push
arpl
test
push
cwtl
mov
pop
sbb
ljmp
sbb
jnp
dec
call
pop
mov
sub
inc
in
jl
data16
mov
and
bound
inc
dec
push
dec
push
push
and
inc
push
leave
add
pop
xchg
sbb
ljmp
in
push
cwtl
notl
pop
add
sub
cmp
stos
adc
and
fsubrl
adc
lock
cmpsl
shr
xor
out
inc
je
movups
movsl
das
dec
daa
popa
mov
xchg
add
pop
jecxz
and
loop
mov
insb
sub
sub
jg
push
xlat
andl
adc
xchg
xchg
mov
jb
and
jle
push
pop
aam
jno
sub
popa
sub
jns
daa
adc
sbb
sub
insb
test
mov
loope
ret
mov
jl
mov
js
fldenv
xchg
ljmp
int3
mov
ja
inc
daa
sbb
movl
sti
fstpt
cmp
es
mov
lret
sub
mov
inc
int3
cmp
push
sub
mov
adc
fimuls
into
mov
enter
cmc
arpl
dec
iret
nop
xchg
xlat
mov
divl
lock
jecxz
and
xor
in
not
inc
mov
fdiv
lahf
lret
mov
enter
js
subb
and
stc
jg
fwait
call
js
inc
pop
call
pop
mov
test
out
repz
roll
xchg
in
test
or
lds
fistl
jo
je
sbb
fstpl
push
xchg
add
nop
pop
push
and
xor
pop
jbe
pop
inc
enter
sbb
jne
mov
sub
adc
addr16
imul
mov
and
sbb
repz
bswap
mov
ja
lea
mov
pop
int3
cs
fmuls
cs
lcall
arpl
rorl
fwait
adcl
loope,pt
cmp
pop
dec
leave
mov
or
dec
aam
inc
dec
cvtdq2ps
mov
jae
into
clc
mov
cmp
mov
add
loope
outsl
mov
int
rol
dec
add
sbb
test
shlb
mov
int
cmp
std
mov
mov
sub
mov
xchg
fcoml
mov
orl
ficomps
sub
cmp
dec
das
rcrb
ss
ja
xor
fisttpll
xor
je
or
adc
test
fwait
idiv
cld
mov
push
mov
adc
and
xchg
bound
jp,pn
popa
movsl
add
lret
adc
insl
lods
push
adc
inc
lea
data16
into
popa
and
movsb
imul
add
loopne
and
ret
popa
mov
test
addr16
mov
push
cmp
pop
sub
dec
add
or
or
cmp
add
pop
and
ss
or
xchg
jb
or
cli
xlat
and
inc
or
ja
lds
and
ficomps
lods
dec
jne
xor
in
add
testl
mov
cmpsb
mov
ret
sbb
daa
mov
pop
imul
pop
lret
into
insb
jp
xor
ja
cmp
jg
push
jecxz
inc
add
xor
aad
add
xchg
hlt
scas
gs
lcall
nop
sub
sub
stos
push
clc
addr16
push
cmp
and
sub
cmpsl
push
add
cvtps2pd
pop
inc
push
je
stos
push
shll
and
and
jne
mov
and
or
jnp
mov
cmp
fdivs
jmp
xor
cwtl
popa
push
idivl
lret
adc
filds
sbb
cs
dec
push
add
mov
add
cmp
test
test
cmc
enter
lret
mov
adc
dec
cmp
sbb
lds
mov
sub
loopne
cld
sti
mov
jb
xor
mov
andl
sbb
add
mov
out
std
repz
lods
stos
pop
push
fwait
enter
cld
push
inc
pop
ret
mov
insl
negb
adc
addr16
fisttpll
shlb
sub
subb
clc
mov
out
scas
mov
inc
xchg
pop
sub
std
enter
cmp
jmp
js
pop
sub
int
popa
pop
arpl
sbb
mov
in
hlt
arpl
mov
cltd
cltd
sub
scas
aas
inc
inc
lret
sbb
bound
sahf
sub
jbe
dec
push
inc
mov
aas
cmpsb
sahf
leave
or
jmp
lret
dec
int
or
xchg
push
push
push
or
push
gs
sarl
xchg
jnp
cltd
shll
push
out
push
fnstenv
test
cmp
rorb
dec
mov
jne
mov
jne
and
mov
push
push
jp
imul
pop
hlt
mov
inc
jo
jne
test
int
lock
lods
adc
add
leave
mov
mov
ljmp
fstpt
andl
test
call
xchg
ret
jns
ret
mov
repnz
mov
add
nop
lahf
pop
and
cmpsl
dec
cmp
scas
je
push
icebp
mov
jl
sbb
mov
cmpsl
fistpl
mov
je
jge
dec
idiv
inc
je
aam
bound
cmc
or
mov
sarb
sbb
or
push
and
cmp
and
dec
fidivs
jmp
xor
and
mov
ds
xor
add
push
fwait
cmpsl
decb
shrl
mov
mov
sub
ljmp
push
inc
ret
pop
dec
mov
mov
repnz
gs
mov
cs
ret
push
pop
push
mov
adc
aad
xchg
cmp
in
and
je
xor
jns
data16
push
jbe
inc
inc
push
test
mov
sub
out
into
sub
add
testb
loope
int3
test
and
bnd
hlt
pop
xor
das
sbb
shll
adc
xor
orl
xchg
shr
stos
out
sbb
scas
rclb
addr16
pop
cmp
sub
stc
mov
lds
test
bound
xor
cld
xchg
cwtl
out
add
push
xor
mov
xchg
push
xor
ljmp
push
xchg
mov
pop
sbb
es
mov
adc
in
or
out
pop
lret
gs
arpl
mov
fildl
das
in
in
je
mov
movsb
adc
add
hlt
dec
xlat
fildl
insb
mov
sbb
out
inc
mov
push
lods
xchg
jge
pop
std
flds
pushf
inc
test
add
mov
out
movsb
sbb
sti
loope
jns
rorl
xchg
push
pop
out
dec
xorb
cmp
das
and
aas
test
inc
xlat
sub
scas
loopne
push
insb
popa
aam
addl
add
ss
arpl
push
mov
clc
push
cmpsl
stos
inc
push
push
lock
loope
cs
xchg
mov
jg
push
or
dec
int3
aam
js
hlt
testb
call
fsubl
xchg
jo
test
fcmovnu
adcb
test
pop
jae
jl
mov
cmp
mov
aam
push
mov
out
jle
in
int
or
pop
call
pop
mov
dec
xor
add
push
std
or
xchg
xorl
fbld
js
das
mov
jns
test
cmp
xchg
fists
sub
mov
sahf
xchg
xchg
testl
stos
mov
hlt
loopne
mov
arpl
test
jecxz
cmp
fsubrs
xchg
pop
pop
xor
les
rcll
aad
mov
add
push
int
sbb
je
add
scas
aas
sbb
sub
lock
add
mov
adc
sahf
cwtl
aas
loope
pop
stos
repz
das
xchg
outsb
ret
push
stos
push
out
jg
repz
xor
les
mov
roll
or
pop
pop
clc
imul
push
cmp
mov
clc
mov
hlt
xlat
jno
sti
adc
sub
lea
mov
out
repz
aad
xor
insl
ss
adc
cmp
sahf
fcoms
jmp
pop
insl
icebp
sbb
add
xor
jne
repnz
jp
xchg
mov
fidivl
and
imull
adc
adc
push
cmp
lahf
addr16
int
out
or
rol
mov
mov
dec
sbb
int3
pop
fsub
and
mov
std
inc
stos
daa
fisubl
sbbl
pushl
cld
mov
and
lahf
fildll
scas
or
mov
cmp
add
cmpsb
sub
mov
fwait
inc
inc
push
inc
jno
mov
xchg
jg
jle
and
inc
add
arpl
xchg
loope
xor
aam
inc
jae
dec
ret
add
xchg
std
add
adc
mov
inc
dec
xor
sbb
mov
movsb
lds
push
rorb
dec
dec
ja
jmp
mov
or
test
imul
mov
aad
pop
inc
or
fisubrl
dec
test
insb
dec
mov
mull
addr16
faddl
mov
cmp
add
cmp
imul
mov
cltd
dec
adc
sbb
imul
pop
pop
xchg
mov
lret
mov
shrb
sub
cmc
out
shll
pop
rcll
int
xchg
cli
aaa
sub
push
sub
jbe
cs
dec
out
push
jmp
nop
arpl
icebp
push
add
xchg
in
push
dec
sbbl
sbb
subl
cs
loop
mov
stc
es
sub
lahf
dec
push
and
testb
lods
in
inc
mov
roll
push
into
and
dec
cmpsl
pop
sbb
jmp
adc
fwait
inc
xor
and
pushf
nop
jne
lods
test
xchg
adc
sar
adc
xchg
outsl
sub
mov
and
out
cmpsb
outsl
sahf
inc
loopne
cmp
inc
in
pusha
fldenv
mov
cmp
mov
push
xlat
lahf
push
fistpll
pop
adc
mov
or
arpl
leave
sahf
mov
sbb
push
jmp
pop
loop
inc
clc
dec
mov
mov
sub
mov
xchg
mov
rcr
push
lret
hlt
pop
addr16
push
negb
jns
inc
jns
add
in
sbb
jnp
xchg
push
and
daa
mov
lcall
adc
push
sub
enter
ficoml
cmp
rcll
or
sub
out
shr
inc
mov
push
and
repz
xlat
lods
xor
and
sbb
cld
shrl
inc
or
ret
test
and
sub
in
movsl
jne
and
push
daa
int3
sub
cmpsb
adc
or
push
xchg
je
fcomps
add
es
and
mov
and
js
les
push
daa
test
mov
enter
jo
stos
orl
xor
pop
js
add
pop
outsb
daa
xchg
pop
cmc
jnp
sub
in
push
stc
subb
pop
fs
fisttpl
sbb
mov
sub
push
leave
call
fists
push
repz
add
imul
cmp
repnz
mov
fimull
cmpsl
iret
jl
cmpsl
int
push
loope
iret
mov
jg
sahf
mov
adc
orb
neg
dec
inc
mov
loopne
decl
mov
inc
add
xor
push
in
or
rolb
sbb
mov
dec
cmpsb
cmp
push
loop
xchg
shl
popa
sub
mov
dec
jecxz
pop
loope
sbb
push
jge
xor
lret
add
sbb
push
jbe
iret
pop
imul
and
lods
rolb
or
popa
add
add
sbb
or
jg
add
dec
rorb
dec
jp
xchg
imul
jge
mov
loope
popf
ljmp
or
dec
ret
xchg
and
test
addl
fs
popa
mov
stos
sbb
jno
outsb
push
outsl
inc
pop
mov
pop
imul
popf
imulb
and
cld
flds
dec
jo
mull
hlt
in
xlat
les
pop
mov
push
dec
scas
xchg
icebp
int
lea
repz
xorb
jns
adc
ficompl
jne
inc
jge
shll
iret
hlt
sub
mov
add
into
mov
jle
sub
and
leave
xchg
push
push
mov
ljmp
ret
or
sbb
jge
xchg
xchg
out
addb
arpl
or
cmp
sub
xchg
loope
add
inc
inc
cmp
popf
repz
jmp
outsb
cmp
push
dec
add
xchg
mov
cwtl
int3
or
jg
inc
test
out
andl
mov
push
dec
mov
test
xchg
xor
push
jl
mov
xchg
subb
jmp
dec
or
jno
sub
adc
rorl
rorb
mov
xor
incl
and
jns
adc
push
test
arpl
sub
sub
es
adc
sub
es
sti
pusha
cmp
shl
mov
push
lret
aas
icebp
mov
mov
test
inc
pop
dec
jno
in
ficompl
or
lret
rcll
xchg
scas
xchg
cli
xchg
in
mov
dec
jmp
test
push
or
pop
mov
int3
adc
or
out
fwait
xor
cmp
mov
sub
pop
fistpll
ret
fdivrs
sahf
cmp
ss
cmp
jle
insl
sbb
cmp
les
repnz
push
jbe
jle
xorl
or
push
sub
lods
and
out
es
mov
es
adc
xchg
lods
add
push
mov
jbe
lea
nop
mov
and
int
inc
or
das
push
add
int
cmp
push
push
daa
xchg
pop
sub
test
les
push
xchg
jmp
lret
pop
dec
cld
push
dec
pop
jmp
shll
ds
outsl
cld
ljmp
pop
loop
lods
orb
loopne
stc
ret
xor
adc
push
imul
lcall
push
inc
mov
mov
mov
xorl
inc
xchg
sub
and
scas
mov
sarl
mov
aas
inc
pop
sub
pop
aad
fucomip
fwait
ds
jp
push
out
sbb
or
es
popw
pop
dec
popa
sahf
mov
std
xchg
out
inc
mov
mov
jno
xor
adc
push
push
bndstx
sub
cmc
es
js
fucom
insb
dec
loope
sbb
adc
adc
mov
testb
stc
ds
mov
lcall
mov
sub
jno
scas
js
xor
hlt
mov
sub
fcomps
out
mov
icebp
cmpsl
outsb
lock
add
mov
fdiv
testl
mov
clc
out
jmp
xor
pop
sahf
mov
adc
mov
cmpsb
jmp
inc
mov
dec
cli
jbe
js
aaa
inc
clc
mov
adc
lahf
dec
xor
dec
in
orb
xor
repnz
mov
inc
cmp
idiv
into
add
adc
fisubl
adc
icebp
push
add
jmp
dec
addr16
in
pop
adcl
decb
push
lods
sbb
js
daa
iret
into
ret
cmovno
es
jmp
add
pop
or
clc
mov
push
mov
dec
fcomp
cltd
mov
das
pushf
mov
js
js
test
mov
push
push
out
call
mov
outsl
mov
fwait
xor
lock
mov
dec
mov
out
data16
jne
test
cmp
aas
inc
push
xor
adc
or
iret
inc
push
adc
mov
and
mov
sbb
data16
and
cmc
mov
or
pop
jb
push
ja
jg
pop
cmpsb
aaa
cmp
cmp
mov
xlat
push
push
js
arpl
xor
adc
adc
cmpsb
mov
push
jne
cmp
mov
ljmp
or
push
repnz
push
gs
push
addr16
add
sar
imul
mov
outsb
aam
daa
movsl
pop
mov
in
aad
xchg
inc
lock
dec
cli
add
jno
fwait
neg
movsb
outsl
fwait
xor
jno
in
in
inc
imul
sub
push
or
pop
and
test
sub
sub
dec
cmpsb
cmpsb
push
sub
fdivs
imul
jae
leave
repz
mov
std
push
cmp
negl
es
and
adc
fwait
ret
sbb
or
mov
clc
cmp
mov
jmp
xchg
shrl
push
push
and
data16
je
dec
aaa
call
pop
xchg
popf
ja
sub
xchg
into
nop
inc
xor
mov
in
ret
lds
mov
adc
in
add
in
int3
xor
and
in
or
pop
pop
ret
jnp
sbb
xor
sar
int3
ret
xor
lea
or
adc
jg
mov
cli
les
cmp
mov
hlt
outsl
and
push
jns
cwtl
aad
cmpsb
sti
pop
cwtl
cli
xor
xor
lock
test
lret
cmp
xchg
orps
mov
sub
mov
lahf
lcall
xchg
testl
cmp
popf
sbb
xchg
or
iret
adc
jle
mov
sbb
sub
adc
mov
mov
jp
nop
xor
lahf
add
idivl
pop
test
sti
out
push
jno
popa
and
or
adc
adc
cmp
jo
not
loop
enter
sbb
roll
jecxz
stc
sbb
cmp
or
xchg
or
adc
or
or
stos
or
fstl
test
add
test
fwait
push
js
shr
mov
in
push
sbb
lea
mov
leave
mov
movsl
add
mov
jle
cmp
mov
daa
sbb
outsb
adc
cmpb
shl
lock
shrb
push
xchg
lds
adc
sahf
sub
movsb
rorb
cld
inc
pop
mov
fisttpll
sbbb
and
cltd
sub
or
add
fdivrl
sbb
dec
or
jbe
push
lahf
sub
push
fmul
mov
mov
aas
dec
mov
repz
pop
sbb
loop
jo
push
lret
gs
iret
movsb
into
sarb
pop
cmp
test
xlat
fildl
sbb
mov
mov
lods
int3
xchg
call
jae
stc
hlt
sub
mov
aaa
inc
adc
adc
std
xchg
test
xor
aad
scas
dec
std
ss
in
jl
mov
int
mov
xor
mov
xchg
leave
sub
into
mov
xor
loop
mov
roll
mov
push
shrb
cmp
mov
jl
in
mov
push
cmp
imul
sbb
addl
aas
cmovnp
test
xchg
dec
sahf
sarb
addl
mov
fisttps
or
dec
xor
icebp
or
cli
pusha
inc
pushf
in
shll
sbb
mov
rolb
mov
push
dec
xchg
push
in
xor
mov
pusha
sbb
add
outsb
push
imul
cmp
cmpl
sub
cmp
in
ror
rclb
lods
stc
jmp
mov
mov
push
jecxz
addr16
mov
jmp
dec
push
js
dec
adcb
popa
jo
dec
mov
xchg
pop
sbb
mov
aam
mov
roll
movsb
lcall
mov
in
jb
push
ret
xchg
ror
cmp
jle
mov
lahf
popa
xchg
call
orb
xchg
lret
popa
int
sbb
xchg
mov
inc
addr16
dec
jnp
testl
fsub
add
mov
popa
cwtl
mov
out
dec
and
or
pop
movsl
xchg
idivb
dec
add
imul
insb
push
lods
and
rcll
or
loop
roll
nop
or
inc
test
cmpsb
fsubl
icebp
add
jbe
inc
xor
cmp
scas
rolb
pop
out
xor
sbb
pop
jg
xchg
cmc
mov
les
hlt
mov
js
cli
fstpt
xor
cmp
inc
jp
or
xchg
fistps
je
jnp
add
sub
nop
out
imul
hlt
jae
pop
cmp
inc
pop
roll
xchg
into
iret
int
pop
push
or
mov
popf
fwait
or
aad
mov
dec
dec
in
sbb
xor
dec
sub
in
int
in
and
sbb
popa
fbstp
adc
es
les
cs
pusha
stos
mov
mov
jns
push
mov
mov
aad
divb
push
fadds
pop
push
inc
jns
mov
repnz
xlat
xchg
repz
xor
outsb
mov
test
inc
cmpl
add
rcl
js
dec
repz
pop
xor
outsb
out
or
xor
fstpl
fldenv
and
or
xchg
sub
pop
das
pop
add
push
mov
or
pop
cmp
testb
insb
and
ja
inc
inc
dec
mov
nop
add
loop
xor
std
xor
out
or
and
push
cltd
lds
cmpsb
je
aad
sbb
shlb
mov
movsb
or
xchg
adc
popa
push
xchg
lods
lods
test
push
imul
js
adc
lds
fwait
sub
jmp
mov
les
xor
addl
mov
and
les
fs
push
rclb
jne
sarb
push
in
dec
sub
call
scas
cmp
mov
jae
popa
jmp
mov
mov
mov
xchg
push
push
push
mov
imul
or
dec
shll
jl
add
mov
lds
pop
push
or
shlb
test
test
ret
inc
dec
fdiv
mov
insl
ja
mov
cli
pop
fcmovbe
mov
push
ljmp
movsb
and
decb
jns
xor
mov
mov
sbb
jp
mov
cmpsb
push
enter
fs
sub
fldcw
push
lret
jb
mov
mov
cmpsb
popa
jl
mov
sti
and
cmp
lods
jp
adc
test
sub
ret
in
sub
cmpb
push
inc
mov
repnz
jg
js
pop
mov
xchg
rorl
shlb
push
push
out
mov
jl
loopne
std
cltd
jae
dec
cwtl
and
and
addb
stos
dec
dec
dec
dec
ss
sub
or
add
rorl
pushf
inc
repnz
mov
mov
adc
cmc
sub
aas
pop
std
clc
push
cltd
dec
xlat
push
mov
ret
mov
jae
pop
xchg
push
out
je
movsb
leave
imul
loop
into
jp
inc
xchg
pop
xlat
push
adc
mov
mov
arpl
repz
fldt
cmp
aaa
push
push
push
add
cmp
sahf
add
lods
inc
filds
dec
jns
and
movsb
inc
xor
jge
jo
aaa
cwtl
test
mov
stc
sbb
mov
jae
mov
jbe
xchg
and
xchg
mov
inc
ja
dec
pop
aam
and
dec
cmp
ds
insb
mov
sbb
int
xchg
cmp
xchg
adc
lods
xlat
repz
mov
fsubl
and
dec
or
inc
cltd
mov
movsl
mul
repz
daa
mov
aad
mov
pop
jae
pop
dec
pop
lods
lea
sbb
insl
scas
xorb
jnp
add
mov
dec
cmpb
jge
sbb
mull
stos
xchg
jmp
subl
mov
mov
sbb
pop
sub
add
inc
leave
jp
aaa
adc
in
mov
xchg
inc
sarb
mov
push
mov
mov
inc
mov
nop
or
sub
call
pop
push
add
insl
scas
pop
mov
mov
xor
mov
lods
mov
inc
add
sbb
adc
inc
fadd
adcb
icebp
clc
fwait
je
mov
dec
jge
loopne
push
sbb
dec
repnz
xchg
scas
gs
jbe
push
xor
and
sub
pushf
mulb
pop
fs
stc
pop
adc
leave
or
mov
xchg
push
data16
mov
dec
mov
jae
icebp
imul
stc
insl
xchg
imul
stc
and
insl
push
sub
cmp
or
and
std
leave
cmp
dec
cmp
push
adc
stos
cmp
movsl
lea
les
mov
cmc
cmpsb
push
mov
dec
pop
cmp
sti
int3
popf
movsl
out
mov
lret
js
sub
out
fdivl
xor
mov
insl
sbb
pushl
cmpsb
sub
dec
cltd
jno
mov
or
inc
push
inc
imul
out
loopne
and
fldenv
sti
leave
jbe
cltd
jnp
and
push
xchg
movsb
jnp
stos
cmp
inc
inc
test
lds
nop
mov
ljmp
pop
xor
xchg
mov
mulb
stos
and
mov
xchg
inc
xor
push
adc
mov
xchg
sub
cmp
dec
jmp
out
xor
push
aaa
rorl
cmpsl
mov
xor
sub
aas
xchg
sbb
mov
insb
cmp
jbe
dec
sti
sti
dec
int
push
test
popf
xor
add
dec
sbb
call
stc
push
or
and
outsb
adc
cmp
xchg
mov
in
gs
fisubrl
arpl
test
in
fldenv
mov
lea
imul
data16
scas
or
inc
int3
sub
in
lahf
jp
fisubs
cltd
aad
aas
sbb
cld
mov
lret
or
pop
lds
adc
rorb
scas
subl
and
sbb
mov
jo
fidivl
and
pop
inc
je
cmp
leave
cltd
mov
and
shrl
mov
xorb
cmp
lock
add
repz
je
lds
pmullw
xchg
cmp
mov
xchg
xchg
cmpsl
imul
cld
cmp
jns
adc
sahf
push
sti
fildl
mov
stos
xchg
push
cmp
mov
dec
jae
mov
test
jns
inc
lahf
add
or
in
or
mov
mov
pop
iret
jg
sub
arpl
xchg
lods
pop
dec
out
push
aad
mov
pop
jne
lahf
cmp
cmp
leave
sti
xor
cmp
jecxz
sbb
dec
push
ficoms
lds
adc
and
jns
pop
je
mov
push
and
pop
imul
fs
leave
dec
sub
push
mov
mov
pop
xor
std
lods
stos
inc
and
mov
ja
push
aad
shlb
lods
mov
mov
xchg
xchg
dec
aam
dec
xchg
lds
mov
mov
mov
dec
rclb
sbb
fcomip
push
inc
or
xor
cmovno
sbb
lods
jno
repnz
xor
dec
push
inc
lea
jg
and
cmpsb
push
inc
fidivs
fchs
add
cld
dec
scas
fists
inc
fnstenv
enter
cmp
in
clc
or
push
pushf
je
clc
lcall
andl
mov
dec
test
inc
jb
and
movsl
mov
push
ret
mov
mov
daa
test
mov
pop
inc
out
dec
lcall
arpl
shrb
ja
push
in
push
sbb
mov
and
cli
lahf
or
cmpsb
fnstcw
aad
xchg
push
lods
out
incb
mov
nop
or
rol
add
sbb
hlt
push
xchg
nop
sbbb
fdivp
xor
push
test
and
std
fsubrp
dec
imul
stos
fcomps
mov
jne
inc
pop
insb
add
add
lock
dec
jp
inc
dec
xchg
pop
fsubl
imull
pop
loope
test
jg
icebp
je
gs
negb
mov
fists
sti
push
push
in
xchg
in
cmp
fisubs
mov
movsb
sti
dec
lods
idivb
test
or
out
mov
jno
push
mov
adc
notb
cltd
idiv
cmpsb
fcoms
jmp
ret
jo
inc
dec
xlat
cmc
shll
add
mov
cltd
fcompl
and
xchg
ja
cltd
cltd
filds
aas
inc
out
pop
lds
jae
mov
fdivs
popf
iret
pop
bound
in
scas
std
push
lcall
fnstcw
dec
jecxz
xchg
jle
iret
sbb
ja
test
test
cmpsb
cmpl
movsb
out
xor
mov
hlt
out
pop
mov
repnz
subl
jmp
lods
in
xchg
or
fdivrs
inc
push
inc
stos
shrl
dec
xchg
mov
movsl
pop
lcall
sarb
xor
nop
jg
mov
movsl
xlat
nop
sbb
xor
cmp
cli
pop
pusha
sub
icebp
iret
lods
pushf
sbb
inc
xor
lret
fcompl
fwait
push
xor
popf
aam
xchg
jle
enter
cmp
mov
ja
or
rcll
adc
cmp
push
push
push
push
mov
push
sub
jno
fdivl
push
mov
in
sarb
loop
daa
test
jl
adc
lcall
sbb
xchg
rcrl
add
enter
mov
lret
cmp
stc
fsubs
dec
push
jne
or
adc
sbb
dec
and
mulb
fimuls
and
mov
addl
lahf
nop
nop
mov
xchg
cmovns
call
lods
test
sbb
movsb
mov
shll
mov
mov
stos
aaa
pop
jno
in
cmp
stos
push
and
mov
not
mov
lahf
sbb
inc
dec
mov
push
mov
je
sbb
push
rclb
mov
pop
data16
push
sahf
xor
pop
mov
lcall
aas
lret
test
xchg
lods
jl
mov
call
fsubl
push
add
push
jns
xor
xor
mov
fidivs
test
jl
fs
fstl
xchg
mov
dec
jb
add
adc
sbb
pop
movsl
pop
add
in
push
fnstenv
or
std
adc
xor
fwait
dec
movsb
cmp
sub
cmpl
iret
mov
aaa
mov
mov
les
cmp
xchg
xchg
or
fistps
push
jb
and
int
out
adc
rclb
pop
push
inc
stos
out
push
arpl
fisubrs
mov
hlt
mov
out
cltd
sbb
mov
xchg
jge
or
ljmp
rcrl
mov
out
or
inc
xchg
mov
cmp
push
shrb
pop
fstp
dec
push
and
xor
lahf
mov
repnz
repnz
in
movsb
fs
jmp
gs
jne
hlt
adc
mov
pop
mov
loop
jae
push
daa
test
cli
mov
mov
mull
xor
xor
xchg
lds
call
scas
ror
xchg
cmc
mov
sti
pop
mov
loopne
xor
aad
outsl
test
imul
sarb
in
or
cmpsb
jp
push
pop
repnz
adc
inc
or
addr16
xchg
loop
adc
jns
jecxz
out
adcb
mov
cli
lcall
int3
repz
in
jl
pushf
popf
lods
push
push
pop
insb
jmp
cwtd
fdivrl
inc
jmp
outsl
mov
ret
scas
xchg
push
sbb
lahf
cwtl
push
mov
cmp
sub
insb
aam
sbb
movsl
hlt
ret
mov
movl
mov
movsb
adc
or
call
mov
inc
cmc
inc
add
jbe
jae
mov
popf
push
jno
enter
sbb
add
mov
outsl
push
xchg
mov
push
sub
movsb
xchg
xlat
sbbl
movsb
movsl
mov
lret
mov
xchg
and
movsl
fwait
add
pop
inc
data16
add
jae
dec
xor
in
lahf
addb
icebp
mov
lock
mov
dec
mov
out
sbb
push
popf
mov
hlt
cmp
jge
add
aaa
pusha
xchg
aas
push
sub
lcall
jnp
aam
push
addl
xchg
shl
sbb
add
xchg
lods
lahf
enter
cli
sbb
mov
in
xchg
push
pop
aam
inc
xor
inc
test
mov
rol
push
add
nop
dec
popa
or
dec
or
icebp
outsl
mov
sub
ror
dec
sti
test
aaa
or
push
and
cmp
sub
je
bound
xlat
shl
pushf
clc
js
xchg
out
outsl
repnz
repnz
sub
stc
sahf
inc
sbb
aam
fsubrl
lcall
xor
or
inc
pusha
xchg
in
or
pop
popf
dec
ss
xchg
test
xchg
lcall
aaa
inc
jb
cmp
pop
stos
xor
cmp
jne
das
dec
in
push
in
xchg
mov
leave
sub
pop
movsl
addr16
cwtl
inc
sbb
jb
xor
mov
inc
aam
fsubrl
into
mov
fmul
ret
mov
cmp
test
into
ret
xor
mov
pop
lret
mov
mov
inc
dec
mov
jle
dec
int3
pop
xor
xor
cltd
outsl
lcall
sbb
inc
or
shrb
push
jb
sbb
imul
jns
sub
imul
mov
mov
ljmp
add
jmp
push
mov
mull
jns
loopne
lret
call
mov
or
mov
xor
push
jno
test
cmp
lret
inc
ja
mov
leave
fcompl
sahf
xchg
mov
fistpl
sbb
jns
push
inc
fnstcw
or
push
addr16
lea
jp
push
or
rolb
cmpsb
pop
jecxz
xchg
pop
xor
inc
or
sub
pop
sahf
xor
in
vpextrw
lds
dec
jo
mov
jl
add
les
mov
fldl
orb
mov
xchg
mov
add
into
test
pop
xor
lret
push
rorb
out
inc
rcll
and
inc
mov
scas
or
dec
insl
fmull
cwtl
and
pusha
xchg
fdivs
cltd
pusha
aad
dec
cmpsl
out
jnp
cmc
sub
push
out
jb
mov
mov
leave
sub
out
mov
das
jmp
mov
and
popa
adc
sub
mov
sub
xor
inc
add
outsl
xor
movsb
js
dec
inc
or
stos
sub
pop
addb
push
ficoms
ds
cmp
cmp
sbb
dec
cmp
inc
mov
dec
jmp
cmpsl
push
xlat
pop
aad
push
sub
das
cmp
jo
jmp
cmp
mov
popa
and
aam
lret
into
and
inc
in
jb
rcrb
push
imul
fldz
imul
aad
xchg
fsts
push
xor
mov
and
aaa
fisttps
add
aaa
dec
fwait
jnp
xchg
pop
popf
pop
ds
out
lods
jo
pop
les
add
xor
lds
jo
pop
es
xorl
je
cmp
or
jnp
aad
faddl
jge
dec
inc
in
push
dec
pmulhuw
clc
add
mov
ljmp
lods
daa
push
lds
call
bound
and
rcr
xor
or
jmp
arpl
out
lods
shrb
xorl
ljmp
shrl
push
addb
test
push
ja
fdivrl
sub
cmp
outsb
mov
push
out
xchg
popa
inc
adc
ja
pop
jmp
mov
gs
jns
xlat
ljmp
shlb
rclb
ja
ja
in
and
dec
daa
lret
aam
std
inc
xadd
jns
fcom
addr16
test
push
arpl
stos
outsb
stc
nop
loope
fildl
mov
ja
cltd
mov
sbb
insl
insb
decb
push
pop
std
lods
sub
sub
mov
rorl
inc
inc
add
mov
add
popa
daa
mov
fldcw
int
ret
fwait
cmp
mov
stos
push
mov
mov
sbb
int
rol
popa
je
mov
insl
cli
arpl
lcall
add
push
jmp
mov
rorb
xchg
add
pop
dec
jp
std
pop
lret
in
test
mov
fcoms
rclb
xchg
push
loop
test
or
and
add
js
fists
mov
fcoms
cmc
and
xlat
pusha
icebp
cmp
or
pop
xor
cmp
sti
lds
mov
cmc
sub
or
xor
rorb
xchg
stos
sbb
sbb
sahf
xor
pop
cmp
in
lret
push
fwait
scas
shl
adc
sub
jo
mov
lret
mov
outsl
cmpsb
mov
inc
mov
sbb
cli
inc
fcmovne
fistpl
stc
shlb
scas
xchg
popf
test
sbb
loopne
dec
jno
adc
and
das
rclb
jns
scas
mov
mov
jmp
lret
lods
outsb
setle
in
mov
rcrl
dec
lea
hlt
fisubrl
jecxz
push
mov
lcall
push
shlb
jno
jmp
xor
mov
and
subl
sbb
or
leave
orl
mov
push
push
cmpsb
mov
xchg
stos
xor
ret
lea
inc
push
adc
loopne
pop
mov
add
mov
shll
test
popf
cld
push
fldcw
mov
call
xor
adc
scas
jmp
dec
in
and
mov
stos
imul
sbb
ret
mov
aad
pop
cmp
add
jmp
xor
dec
ja
cmp
xchg
dec
cmp
jecxz
fcmovbe
xchg
loopne
or
rorl
adc
mov
ja
out
mov
outsl
cli
pop
cmpsb
popa
stc
imul
sub
test
or
lock
jnp
jmp
jbe
aad
aad
ror
stos
add
movsl
mov
call
fs
add
or
push
xchg
sahf
stc
push
dec
jae
push
sti
movsl
outsb
jmp
xor
aad
lahf
jbe
mov
out
out
inc
popf
arpl
inc
xor
xchg
fistl
rcrb
cmpsl
inc
test
fildll
mov
mov
lret
out
decb
jecxz
mov
sbb
loop
xchg
cmp
rcll
lahf
fs
rcrb
dec
pop
cmpsb
sbb
popa
jb
mov
add
xchg
jnp
mov
adcl
leave
push
and
sbb
ljmp
out
xchg
mov
fwait
mov
cmovo
repnz
add
jno
stos
insl
test
xlat
add
sbb
mov
dec
test
xorb
mov
add
gs
adc
mov
xor
sbb
mov
les
into
jae
xchg
loop
inc
fs
pop
pop
push
mov
sub
popf
lods
push
jecxz
xchg
mov
mov
sbb
out
dec
popf
push
push
xor
sub
fldt
push
jnp
lret
xlat
dec
sub
dec
outsb
leave
lea
pop
ficompl
or
xlat
cmpsb
xchg
mull
mov
cli
in
sub
mov
fs
add
and
jnp
lds
pop
insb
in
cli
in
push
iret
jp
adc
out
aaa
mov
pop
sbb
cli
inc
sbb
mov
rcrl
mov
xchg
popl
cmpsb
mov
cmpsb
ljmp
pop
mov
nop
lods
aad
add
xor
jnp
mov
xchg
scas
les
leave
pop
sub
sti
gs
insl
arpl
jmp
ffree
ret
sbb
sub
dec
push
loop,pt
std
mov
sub
pop
add
sub
orl
aam
int
ss
lret
xchg
loop
or
loop
pop
jecxz
rcrl
mov
pop
ret
fdivrl
mov
mov
push
pop
jge,pn
push
ror
sub
aaa
pop
dec
movsb
fs
dec
enter
jo
sbb
and
jae
push
test
inc
into
xchg
sbb
sbb
add
pop
movsl
pop
or
mov
mov
adc
pop
adc
roll
jno
pop
pop
neg
shrb
adc
sub
test
cli
jmp
mov
jp
pop
inc
js
mov
out
jg
xchg
inc
push
ja
cmp
pop
or
je
in
ja
iret
xor
ret
lahf
pop
pop
rorl
xchg
xchg
into
shll
lret
pop
inc
pop
pop
ret
dec
jne
into
or
shll
mov
popf
leave
enter
add
dec
les
inc
test
aad
js
xchg
mov
out
mov
sbb
ljmp
xchg
pop
mov
mov
jo
fsts
sbb
sbb
push
jae
and
and
or
clc
jl
inc
dec
xchg
je
rorl
jbe
daa
mov
xor
andb
std
sbb
add
fadds
es
out
mov
and
stos
jnp
push
mov
xchg
ds
mov
sahf
mov
xchg
cmp
xor
sub
subl
jbe
std
les
push
jp
mov
mov
pushf
xchg
jne
mov
stos
cltd
sbb
out
loop
int
out
sbbb
jo
and
fsts
scas
int3
xlat
mov
mov
pop
dec
add
mov
push
push
inc
jo
cld
or
ror
xchg
fsubrl
fimull
pop
jl
mov
sub
out
add
add
mov
ret
cmp
sbb
inc
cli
xchg
repnz
in
mov
shll
sub
and
xor
nop
adc
sub
xchg
pop
call
sub
mov
mov
or
fisubrl
xlat
scas
lea
xor
daa
cmc
push
bound
pop
bound
mov
sarl
cs
rorb
stc
lds
or
and
in
fiadds
mov
cmc
out
test
stos
insl
daa
push
add
mov
jo
adc
pop
inc
jb
lock
mov
popa
je
mov
and
mov
jecxz
add
out
sub
dec
divl
xchg
sub
jnp
test
adc
and
push
jmp
shll
orl
jle
mov
cmp
push
insl
leave
sti
dec
xchg
inc
cmp
int3
insl
inc
sub
aaa
add
cmp
pop
int3
sbb
pushf
mov
jecxz
jnp
xchg
sbb
fcompl
mov
jecxz,pn
push
sbb
pop
hlt
xor
and
push
gs
mov
add
in
stos
lods
movsl
and
rcl
and
mov
lret
dec
sub
fwait
gs
loope
inc
enter
iret
mov
pop
jp
lret
inc
mov
leave
in
xor
jle
mov
jbe
or
add
test
in
repnz
lods
jg
push
sbb
out
inc
aaa
sbbl
in
xchg
shl
mov
xor
loope
sub
adc
sbb
jp
push
popa
jbe
mov
mov
adcl
add
gs
ds
cmc
push
jb
in
inc
or
inc
mov
jg
xchg
xchg
and
push
out
aam
flds
roll
adc
or
xchg
pop
cmp
js
cmp
fmulp
test
fwait
xchg
mov
test
mov
fsubl
outsl
sbb
xchg
jp
pop
lds
or
ret
sbb
pop
cld
inc
sub
inc
call
xchg
or
sub
and
lock
sar
call
inc
aas
es
fnstsw
call
jns
mov
push
and
gs
fisttps
mov
xchg
jle
inc
xor
xor
fistpl
pop
jo
mov
mov
mov
test
daa
add
stc
mov
sbb
push
and
movsb
rorb
fs
pop
dec
cmp
scas
arpl
pop
mov
fcomps
mov
push
fs
fidivl
jae
jl
fs
jo
xor
sub
mov
aad
add
cmp
les
sbb
shll
pop
pusha
and
shll
out
aam
lds
add
dec
adc
rorb
bound
imul
clc
into
fbld
jp
add
pusha
insb
dec
pop
test
movsb
insl
pop
out
sbb
stos
mov
mov
inc
cmp
addr16
mov
jne
pusha
cmpsl
or
pop
stos
xchg
int
cmp
push
xchg
aam
and
sub
xor
pusha
rcrb
lret
out
test
testl
mov
cli
ljmp
pop
test
add
mov
clc
sbb
jmp
out
sahf
arpl
inc
shlb
test
xchg
sub
pop
mov
sbb
add
ljmp
es
xor
pop
hlt
fcoml
fistpl
xchg
lods
mov
add
sub
jmp
pop
inc
in
hlt
nop
fidivl
cli
popf
mov
imul
aas
sahf
sub
aas
jge
sub
test
sbb
int
imul
mov
clc
rcll
or
outsb
dec
add
lds
sub
pop
and
cld
cli
jle
sbb
add
mov
lahf
cmpsb
lds
leave
incb
testl
inc
and
adc
and
xchg
push
push
scas
hlt
popf
ret
add
pop
mov
lods
pop
sti
cli
jg
pushf
mov
aad
jnp
add
adc
xor
mov
ss
or
cld
push
addr16
xor
es
cld
mov
mov
inc
sub
mov
aas
cmpsb
leave
bound
rcr
jns
xchg
pushf
jae
test
mov
ficompl
xchg
mov
sarb
mov
jno
mov
lret
xchg
fdivs
cli
mov
sub
gs
push
cli
push
lods
bound
jb
out
pinsrw
sarl
mov
sub
adc
mov
xchg
test
mov
outsl
shll
lods
in
xor
mov
mov
addl
out
loope
or
cld
mov
rol
mov
adc
jg
inc
and
cmp
popa
lcall
jns
sarl
pusha
mov
mov
sub
sub
lea
mov
test
xlat
ret
xor
testb
lret
sbb
repnz
cwtl
mov
sub
in
add
idivl
ja
or
testb
jo
repz
aad
lea
xchg
scas
testl
adc
add
mov
dec
mov
or
inc
ss
stos
mov
push
aaa
xor
adc
mov
push
imul
push
dec
pusha
mov
jge
jle
lcall
mov
mov
dec
mov
lcall
cmpsl
sbb
and
and
das
test
push
push
jecxz
inc
call
xlat
iret
ret
sbb
mov
das
push
and
sbb
fsubrl
mov
ret
mov
sub
inc
pop
cmp
fsubp
cld
iret
ljmp
test
push
pop
lcall
mov
in
and
aad
je
decb
and
mov
dec
push
mov
mov
mov
insl
stc
dec
pop
enter
sbb
pop
push
je
pop
test
shrb
xchg
repz
in
xchg
out
test
dec
addr16
das
lret
daa
and
mov
and
jl
inc
and
stos
mov
or
rol
mov
cmp
int
inc
xchg
stc
and
mov
lret
adc
jp
xor
xchg
in
lcall
xor
lods
lods
adc
push
shll
loope
mov
rcrb
sub
mov
ds
mov
jmp
xor
cli
imul
mov
and
jno
shll
push
movsl
lret
mov
push
or
dec
mov
and
imul
sub
stos
sbb
push
stos
xchg
push
pop
je
outsb
mov
ja
sub
cmp
or
dec
repz
push
and
pusha
test
out
out
fincstp
mov
int
icebp
scas
jo
in
bound
divb
mov
mov
inc
jecxz
shlb
cwtl
dec
popa
mov
mov
push
jns
stos
mov
inc
ss
pop
nop
call
fdivrp
divb
cmc
aad
sti
icebp
sbb
jg
push
mov
lods
add
push
xchg
xchg
pop
xchg
cs
repnz
add
daa
rol
lods
xchg
mov
cltd
ror
sub
mov
or
mov
inc
inc
cmp
arpl
jnp
xchg
xlat
test
sub
push
shl
stc
fwait
dec
adc
and
push
add
mov
mov
dec
jno
pop
test
mov
jae
ret
std
pop
cmpb
dec
outsb
xor
mov
dec
lret
cmpsb
or
mov
dec
sarb
pop
lcall
ds
nop
ror
in
mov
push
test
pop
clc
shlb
adc
lds
das
fstl
xor
jno
dec
popf
sbbb
xor
sbb
lea
mov
aas
add
jmp
inc
sbb
rcl
pop
sbb
xor
pop
out
mov
and
movb
jmp
clc
lock
stc
insl
jb
inc
pushf
test
fldcw
pop
lock
mov
push
stos
inc
xor
sub
fxch
das
gs
cmp
addb
lea
mov
and
in
pop
iret
jle
je
or
fwait
rclb
cmpsb
daa
sub
and
push
sbb
dec
mov
or
sub
pop
jl
or
popf
jae
movsb
lret
sbb
mov
sub
or
xchg
sahf
je
getsec
jnp
mov
mov
inc
sbb
rorb
or
xor
lea
jmp
insb
rolb
iret
inc
jecxz
mov
inc
cmp
pop
jns
mov
addr16
sbb
stos
mov
xor
insb
loope
adc
pop
sbb
cltd
jp
test
sbb
mov
xor
clc
mov
ljmp
nop
outsl
in
jne
xchg
sbb
jl
push
hlt
push
inc
shlb
mov
and
jg
shll
pop
sub
pop
or
divl
dec
inc
push
subb
clc
adc
xor
sub
add
shrl
sub
jno
movsl
dec
subl
xchg
sbb
mov
sbb
cmp
jge
popf
scas
dec
sub
enter
aam
hlt
lods
loope
adc
mov
pop
es
jle
xchg
outsb
ds
cmp
in
test
xchg
jae
lock
mov
add
add
cwtl
fcompl
mov
fldcw
dec
lcall
fstps
or
in
imul
mov
inc
mov
jg
lahf
push
xchg
adc
shll
mov
mov
xor
out
pusha
ss
loope
push
add
jb
jnp
and
pusha
cmp
imul
dec
push
ss
dec
into
repnz
push
or
sti
les
jl
ficoml
adcl
mov
dec
enter
xchg
aad
mov
fisubrs
lea
pop
fwait
add
sub
jo
pop
jle
fcoms
aas
outsl
push
aad
xor
or
pop
add
or
cmp
cli
popf
pop
jle
cmp
or
jle
push
and
jno
ljmp
loope
cld
mov
cs
sub
xor
insb
shlb
fildl
aad
daa
pop
pop
mov
mov
jns
pop
out
mov
lds
out
test
dec
adc
jbe
mov
or
xor
jno
pop
add
dec
jle
in
jecxz
xchg
aas
cmp
lods
adc
or
push
loopne
cwtl
sbb
xor
xlat
mov
mov
ja
out
jp
xchg
test
call
insb
ljmp
inc
and
cmp
pop
dec
cld
mov
sti
push
mov
imul
vpmulhuw
sbb
ret
mov
cltd
and
les
add
shll
mov
sbb
push
add
test
inc
divl
out
and
push
and
ljmp
mov
jg
push
inc
mov
ja
and
xor
jo
cmpb
xchg
mov
repz
repnz
and
jno
cmp
in
cli
jmp
push
adcl
inc
pop
jecxz
sub
inc
neg
cmc
xor
pop
sbb
and
pushf
lcall
lret
inc
xorb
gs
cwtl
lcall
std
cmpsl
xor
push
mov
movl
pop
test
ficoms
lcall
dec
popf
mov
bnd
or
hlt
push
enter
push
push
mov
cmpsl
or
jp
sub
inc
leave
cmp
ds
jnp
push
orb
shrb
dec
add
pop
mov
xchg
sub
jge
cmp
adcb
sbb
notl
jmp
stos
and
out
rcrl
inc
in
jl
cmp
ret
rcrl
je,pt
adc
iret
jae
js
add
cmp
stc
ficoms
mov
lahf
out
push
lea
jo
fdivr
jmp
push
call
das
lock
fstpl
fsubr
add
xor
sbb
jle
mov
sub
rolb
mov
push
pop
mov
out
ja
or
jb
xchg
aad
in
int
jne
xlat
icebp
xorb
mov
movsb
adc
cmpsb
hlt
repz
testl
push
into
cs
outsl
fwait
imulb
cmpsl
push
sub
sti
xchg
insb
and
and
push
sbbl
xchg
and
add
sub
mov
flds
insl
repnz
test
mov
sarb
mov
push
inc
mov
test
jmp
gs
sub
lahf
cwtl
mov
pop
jae
pushw
js
mov
test
sahf
shlb
dec
js
aad
gs
sbb
mov
mov
in
mov
test
add
mov
push
popa
das
pop
call
and
jnp
test
cltd
mov
pop
xchg
jae
rcrl
call
fstps
fistps
mov
aam
push
rorb
cmp
xor
mov
call
adc
cmp
jns
mov
sbb
sub
xchg
adc
addr16
in
out
adc
popf
mov
dec
or
test
loope
dec
cmp
sub
imul
sub
lret
mov
ljmp
loopne
lds
std
xchg
add
mov
cmp
call
inc
iret
in
test
loop
jae
dec
adc
mov
scas
or
dec
inc
jae
jno
lret
pop
test
sub
cmp
push
lahf
pop
sbb
or
inc
lahf
lahf
imul
pop
out
mov
arpl
test
ds
cwtl
jge
pop
ficoms
xchg
ret
inc
jp
and
ror
jb
shlb
fisttps
std
pop
pushf
dec
in
mov
addr16
jae
mov
sub
frstor
roll
xchg
xchg
push
loop
adc
sti
stos
dec
mov
into
out
pop
mov
push
lock
push
dec
and
in
adc
ljmp
call
xchg
popl
mov
mov
ja
jp
jo
enter
mov
mov
pop
inc
or
pop
in
mov
cmp
inc
adc
insb
iret
movl
jb
add
shrl
rorl
pop
xlat
fucomip
mov
pop
and
sub
out
dec
orl
mov
push
push
cmpsl
das
push
mov
ss
ret
sub
sarb
push
pop
dec
fildll
mov
mov
xor
cli
pop
and
subl
pop
xchg
testl
daa
jnp
pop
push
mov
cmp
xchg
pop
cmc
xchg
ss
out
mov
cmp
adcl
fmul
movsb
mov
fiadds
inc
inc
add
les
movsb
mov
les
shr
loopne
es
xchg
imul
call
jmp
sbb
in
xchg
das
subl
ljmp
gs
cmp
pop
add
xchg
inc
shll
inc
xchg
pop
loopne
inc
cli
lea
and
imul
or
mov
pop
mov
or
or
ljmp
sti
pop
and
jno
pop
mov
rclb
xchg
and
inc
add
mov
in
mov
push
test
cmp
call
es
js
mov
pop
repnz
sti
or
cs
inc
jae
test
xchg
push
fistpl
and
fistl
push
jne
lock
das
ljmp
imul
sbb
in
aas
mov
or
test
xor
sbb
jae
ret
xchg
mov
xchg
int3
xchg
jae
fisttpl
enter
movl
js
mov
dec
out
test
in
xchg
in
jg
mov
push
inc
xchg
xchg
mov
mov
sub
cmp
sub
insb
dec
mov
mov
or
stc
icebp
and
vcvtpd2dqx
rclb
jp
fidivs
jae
movsl
adc
data16
sbb
push
shr
adc
pop
cmp
lahf
push
xchg
mov
jns
cmp
mov
pushf
popa
adc
arpl
and
ljmp
ss
test
in
push
xor
es
jns
fcom
jns
aad
and
mov
cwtl
sbb
mov
lods
test
xchg
ret
and
push
add
add
xor
pop
nop
stos
xlat
jnp
mov
sub
call
orb
stos
add
xor
ret
scas
pop
mov
aad
push
stos
mov
insl
xchg
stc
enter
xchg
out
or
mov
pop
adc
add
pop
aad
push
imul
dec
test
test
jo
sbb
jge
push
dec
xchg
pop
scas
loopne
jmp
gs
lahf
fildl
les
pop
fnstcw
adc
sbb
xlat
inc
cmc
repnz
add
or
jae
sti
in
out
jmp
hlt
fisttps
int
or
test
mov
sbb
stos
in
push
aas
shrl
push
jl
jle
cmp
je
dec
pop
dec
mov
ret
add
push
sub
dec
mov
xchg
sbb
dec
clc
cs
push
mov
add
sbb
xchg
jle
mov
pop
scas
fsubrp
pop
or
sbb
lds
rcrl
movsb
getsec
and
and
jbe
sub
repnz
sarl
clc
fdivrl
cmp
or
jno
push
out
pop
cwtl
jmp
filds
jmp
scas
and
repnz
mov
mov
jns
xchg
mov
cmp
into
or
add
pop
xor
push
in
cmp
xchg
inc
or
xor
out
pshufw
movsb
jmp
testb
xchg
inc
sahf
push
call
out
and
aaa
insl
push
hlt
notb
nop
orb
icebp
out
mov
and
mov
mov
and
sbb
xchg
pop
xchg
add
aaa
dec
insl
mov
pop
gs
outsb
in
pop
inc
mov
sub
stc
out
pop
push
mull
cmpsb
push
add
jae
out
jg
jge
outsl
test
rol
dec
jno
addr16
mov
shl
xchg
sahf
bound
xor
xchg
rolb
pop
pop
pop
pop
inc
stc
aad
andl
cmp
mov
lods
lods
mov
add
test
imul
sub
aam
and
fs
rolb
xchg
xor
mov
lods
dec
repz
add
aaa
mov
andl
repz
pop
and
jno
push
push
add
push
rorl
imul
fbld
insb
sub
std
in
push
push
pop
lahf
and
ret
cwtl
add
and
pop
cmp
and
movsl
ret
mov
xchg
out
lahf
push
pop
mov
pushf
mov
jmp
aas
mov
into
xor
mov
sub
xchg
inc
scas
jae
cs
mov
loope
test
adc
data16
lods
push
out
outsb
ljmp
test
and
ljmp
pop
cmp
jmp
std
shlb
int3
mov
idiv
leave
call
fcomps
mov
enter
xchg
cmpsl
jmp
das
imul
cmc
and
cmp
sarl
cmp
xchg
push
ds
sbb
out
pop
stos
push
xor
jno
int
jl
xor
cmc
ficompl
sbb
dec
add
insb
push
mov
popf
andl
jbe
sbb
ss
jno
pop
xor
fwait
jns
scas
mov
imul
fstps
shlb
cmpb
test
dec
cmp
insl
mov
xor
push
ret
in
leave
mov
ss
push
mov
frstor
mov
xchg
add
xor
loopne
and
das
aam
shlb
scas
aad
lahf
pop
dec
sub
mov
inc
in
and
pushf
test
es
sbb
outsl
in
xlat
sbb
inc
lcall
divb
test
in
sub
and
lea
or
div
scas
sub
insb
mov
pop
stos
push
pop
lahf
cs
jae
ss
test
xor
shl
push
cli
rep
scas
sbb
pop
sub
pusha
mov
dec
inc
jmp
js
add
lret
mov
fwait
nop
pusha
cmc
add
loopne
es
je
cmp
and
mov
rcrb
lcall
cmc
in
rol
mov
into
mov
or
stos
je
sbb
or
mov
shll
mov
test
sti
sub
ja
jnp
dec
out
pop
xor
sub
stc
mov
push
jl
test
aam
daa
pop
push
inc
add
add
in
loopne
ss
mov
mov
fcomip
sub
nop
sub
pop
dec
imul
aad
pop
xchg
ljmp
pusha
mov
jl
pop
test
cmp
mov
fwait
mov
enter
jbe
pop
shl
sbb
add
ds
leave
mov
mov
pop
pop
mov
jl
imull
xchg
push
cs
ret
js
jns
outsb
test
test
outsl
sbb
and
mov
fnstcw
cmc
jo
out
push
test
cmp
dec
push
jge
add
dec
cmpsl
xchg
pusha
push
xchg
js
cltd
sub
or
arpl
xor
test
mov
sbb
xchg
pusha
int
mov
es
adc
ds
mov
or
add
stos
mov
jg
loope
lcall
cmpsb
repz
repz
pop
aas
data16
sub
repnz
jle
mov
aad
dec
sti
lods
js
jge
sti
add
xchg
ret
test
jne
mov
xchg
sub
sbb
out
je
lahf
sub
sub
mov
test
mov
mov
repnz
xchg
push
into
push
cli
jo
add
and
lahf
mov
and
dec
push
dec
scas
mov
pop
push
xor
mov
out
loope
mov
aaa
adc
outsl
mov
sbb
inc
cld
lods
push
outsb
and
test
cld
cld
jmp
ja
outsl
mov
adc
dec
fsub
test
nop
fidivs
mov
xorl
or
jae
add
sub
mov
mov
inc
lock
push
mov
icebp
scas
and
mov
fstpl
mov
sub
sub
add
mov
out
fucomi
push
cmp
addr16
jnp
adc
push
mov
or
dec
imul
outsl
xchg
dec
mov
pop
decb
adcl
dec
mov
jb
dec
or
lods
xchg
xchg
cli
sbb
outsl
mov
iret
mov
or
inc
pop
pop
push
mov
fs
mov
dec
push
mov
daa
sahf
push
mov
push
mov
mov
lock
inc
xor
popf
dec
test
sbb
push
and
cmp
sub
fwait
lret
sub
mov
push
cmpsl
adc
stos
test
mov
adc
jge
inc
daa
aad
mov
inc
xor
mov
popa
dec
loop
jo
mov
cmpsl
sbb
inc
jno
divl
movsl
or
sbb
ljmp
ljmp
adc
adc
sbb
pop
leave
fimuls
xchg
jge
lret
inc
enter
cli
fists
xchg
xchg
lret
push
and
fwait
cmp
jmp
lods
shlb
adc
scas
inc
sbbl
dec
movsb
aam
push
adc
cmpsl
push
es
fldl
mov
xor
or
mov
ja
cmp
push
pushf
push
jbe
ds
xchg
push
jne
aam
scas
xchg
push
test
outsl
add
dec
je
dec
leave
pop
idivl
xorb
jle
mov
mov
hlt
pusha
add
fwait
add
mov
jle
add
int
jp
add
ror
mov
aaa
push
mov
js
leave
je
cmc
push
fisubrs
add
fsts
jp
mov
int3
xchg
dec
incl
pop
adc
lds
pop
adc
jmp
shr
loop
xlat
mov
std
pusha
jnp
xor
mov
ss
adc
jbe
repnz
outsb
pop
pop
xchg
mov
fwait
adc
sbb
loopne
repz
ficoms
xchg
jb
push
dec
loop
sub
inc
push
jl
cmpsl
dec
mov
outsb
dec
mov
addr16
movsb
loopne
pop
ret
in
sub
dec
pop
mov
std
jle
sahf
outsb
lds
lock
in
sub
push
daa
cmp
mov
and
pop
xchg
mov
arpl
dec
push
dec
call
scas
cmp
mov
into
mov
std
push
xor
push
shlb
mov
sub
mov
pop
xor
and
cmp
push
xor
inc
in
xor
mov
cli
test
add
push
push
sub
pop
cld
rorl
xor
lds
inc
mov
and
call
mov
imul
pop
push
scas
jbe
or
clc
loop
cltd
negl
jne
lock
aam
cli
dec
sbb
mov
cmovs
and
out
adc
jns
and
add
jae
iret
dec
leave
cld
dec
and
xor
mov
xor
mull
dec
or
xlat
addr16
dec
push
call
mov
add
sbb
dec
loope
add
sarb
adc
xchg
lcall
and
pop
decl
rcl
test
test
push
adc
pop
dec
mov
lea
mov
sti
pop
add
mov
imul
dec
ds
roll
imul
lods
xchg
cs
sub
data16
out
inc
mov
js
mov
xchg
push
xchg
mov
inc
push
popa
mov
test
stos
mov
push
xchg
lahf
sahf
jb
inc
or
inc
add
xor
aaa
add
dec
sahf
mov
xor
dec
fstpt
inc
pop
incl
jo
push
movsb
dec
or
test
cmp
mov
insb
cmpsl
pop
aad
das
xchg
inc
sub
int3
push
je
mov
imulb
sbb
aas
int3
xchg
shlb
mov
das
or
inc
test
cmpsl
xlat
add
mov
sub
mov
loop
shrb
xor
pushl
sub
xchg
cmp
and
incb
and
aad
outsl
ja
pop
xchg
lcall
stc
add
lret
ljmp
adc
and
add
sub
cmpsb
movsl
adc
xor
lret
pop
jmp
jo
inc
pushf
shl
mov
mov
popa
ljmp
ljmp
adc
mov
nop
jbe
fiadds
xchg
adc
xchg
inc
repnz
sub
jp
or
inc
and
add
in
xchg
cmp
inc
daa
fcoms
mov
js
xlat
xor
xor
int3
xchg
pushf
or
sarl
ljmp
insl
push
sbb
mov
or
cmp
outsb
lcall
aaa
imul
cmpsl
clc
in
sti
test
out
dec
int3
inc
jmp
jbe
popf
and
mov
inc
sbb
xchg
icebp
iret
clc
add
jb
cwtl
xor
fwait
arpl
bound
test
push
cmp
or
pushf
jb
mov
xorb
fstl
cmpsb
lret
sub
mov
xchg
xlat
daa
shr
push
test
mov
mov
subps
cmpl
ret
out
lahf
inc
cmp
daa
je
cmp
in
out
mov
bound
sti
or
dec
rolb
rorb
sti
mov
push
push
outsb
rol
out
ljmp
xor
enter
inc
or
fmulp
in
mov
fwait
cwtl
loopne
add
subb
daa
fmull
jl
fisubrl
mov
fsubr
push
or
cli
lcall
xchg
pop
insl
inc
bnd
lock
inc
dec
lea
ljmp
fucomi
mov
fstl
cli
in
lods
jns
scas
and
cli
out
sub
xor
sub
imul
sar
dec
incb
add
data16
rcrl
cmp
dec
jb
sub
rorb
adc
add
jno
mov
cmp
ljmp
pop
inc
xchg
les
or
repz
xor
pop
lea
insb
jnp
sub
mov
lret
rcrb
fildll
in
addr16
push
outsl
pop
jp
andl
mov
lock
stos
call
jno
out
sub
int
and
leave
stos
adc
dec
out
mov
mov
mov
add
lock
or
popf
mov
push
fcomps
dec
inc
int3
test
mov
mov
jl
dec
fimull
jg
cmp
lea
and
pop
in
xchg
pop
adc
jnp
cli
adc
mov
inc
stc
mov
mov
adc
xchg
idivl
mov
or
cmp
cmc
in
xor
sub
pop
call
push
xchg
pcmpeqd
push
ss
mov
pushl
push
iret
mov
loopne
inc
mov
mov
cmp
jge
mov
cld
sbb
mov
stos
sub
addl
mov
dec
pop
cmc
lods
xor
cmp
mov
out
into
mov
subb
aas
divl
clc
jae
push
cs
jle
inc
out
fcmovnb
xor
je
pop
repz
fidivs
sbb
mov
shrb
add
adc
sti
negb
addr16
cli
adc
fldcw
inc
mov
or
xor
aam
or
pop
imul
cld
adc
ds
push
in
push
jmp
add
out
arpl
pop
push
arpl
mov
movsl
mov
addr16
mov
xchg
add
mov
or
mov
inc
repnz
idivb
lods
mov
xchg
lahf
imul
divl
stos
call
bound
pusha
inc
popa
cmpsb
test
sbbl
push
mov
and
lahf
fcomi
mov
or
mov
lret
xchg
mov
popa
das
push
repnz
in
dec
dec
aas
icebp
cmp
jo
adc
popa
test
sub
adc
dec
pusha
vmovlps
lods
cmp
inc
mov
xchg
pop
and
adc
lods
jno
cmpsl
lods
jne
rolb
or
test
or
aam
lret
hlt
xchg
sbb
into
scas
pusha
lods
pop
nop
or
test
add
mov
xor
scas
jl
out
jge
rcl
jge
aad
ret
fcmovnbe
fwait
pushf
xchg
mov
jg
bound
fldenv
xor
jmp
pop
or
int
push
sub
cwtl
les
cmpsl
xlat
lods
and
mov
ja
mov
push
xchg
cmc
call
add
mov
add
mov
push
data16
adc
xor
mov
out
mov
lods
dec
mov
mov
push
jge
cli
sti
jae
arpl
js
jp
mov
std
aas
test
sahf
pop
mov
pusha
pop
loop
xchg
jnp
and
sbb
es
and
push
pop
rcrb
and
repnz
add
stos
cmp
dec
cmp
cmp
lret
scas
mov
out
inc
iret
or
ret
cmpsl
aam
mov
jg
aad
cwtl
outsb
jbe
out
adc
es
push
cmp
sub
mov
xchg
xor
test
pop
mov
std
fadds
or
in
mov
pop
sbb
pusha
cmp
into
adc
imul
and
imul
out
out
je
jbe
and
xorl
lods
mov
popa
fsubrl
scas
push
ljmp
sti
insl
fnstsw
movsb
xor
out
hlt
out
enter
outsl
incl
mov
mov
mov
inc
imul
out
cli
add
cltd
iret
fdivl
cwtl
negl
push
mov
jno
add
push
cmp
sub
out
sbb
mov
shrb
insb
cmc
dec
dec
and
andb
push
cmp
inc
cmpsl
pop
or
repnz
cld
js
push
in
dec
push
and
pop
test
cmp
xchg
jg
std
fcoml
pop
dec
mov
pop
push
xchg
hlt
cmp
and
pop
imul
xchg
jne
enter
lds
scas
in
aaa
int
stos
push
cs
sub
cmp
sahf
and
jnp
in
inc
inc
pop
xor
je
or
adc
bound
jbe
xor
jbe
enter
test
test
jg
jnp
push
pusha
sarl
adc
aas
push
ret
jg
aam
mov
jne
sti
jecxz
jp
ret
inc
mov
ret
mov
mov
push
jne
inc
call
fdivrs
cmp
test
movq
call
push
sahf
jmp
das
int
add
xor
mov
mov
rsqrtps
test
nop
jbe
mov
pop
mov
sti
mov
shrl
adc
and
lods
addr16
inc
inc
mov
icebp
adc
push
lahf
adc
pop
mov
mov
add
and
sub
mov
iret
cmp
idiv
mov
mov
adc
loopne
xchg
cmc
enter
or
xlat
sbb
jecxz
jnp
and
inc
cld
stos
push
mov
cld
shr
bound
mov
mov
pop
fbld
lahf
loope
notb
mov
mov
xlat
or
mov
in
add
mov
out
lds
daa
rcll
sbb
mov
and
cmp
fs
jmp
mov
pop
mov
repz
xsaveopt
adc
jmp
adc
jg
xchg
dec
lret
in
inc
mov
dec
sub
inc
ljmp
rcl
aad
lea
clc
std
stos
and
pop
dec
mov
cltd
jle
cmp
cmp
rcll
adc
lds
push
dec
out
pop
js
fbstp
xchg
xor
lods
push
jo
frstor
cld
outsb
dec
fwait
jbe
mov
or
mov
mov
into
in
mov
push
add
jecxz
jno
jnp
adc
jge
pushf
mov
dec
cmp
sbb
push
lea
pop
inc
std
mov
jb
jbe
xor
stc
push
xchg
sbb
enter
lret
pop
jmp
in
stos
mov
inc
jmp
cmp
push
push
mov
pusha
cld
andl
mov
adc
mov
inc
dec
xor
mov
and
popa
xor
popl
das
loope
ss
mov
lahf
pop
jne
fcoms
jmp
dec
mov
sub
sti
out
xchg
scas
and
in
pop
sub
push
jp
outsl
int3
adc
xchg
shlb
pusha
les
sub
mov
enter
bnd
xor
sbb
inc
pop
pop
sbb
leave
inc
hlt
fmuls
push
pop
cwtl
jecxz
icebp
sti
inc
popa
lods
sub
mov
es
push
xlat
data16
adcb
clc
aas
xor
push
sbb
sub
or
and
sbb
bound
mov
mov
xor
or
pop
nop
cltd
addb
negl
mov
push
adc
decl
out
xlat
add
addr16
mov
cs
sub
cmp
shlb
pop
jae
and
loopne
aam
push
xor
mov
cmp
out
je
pop
idivb
adc
mov
ja
rcll
push
outsl
dec
sbbb
out
jge
loopne
or
les
sbb
fs
das
add
shlb
sti
in
aas
cmp
add
fsubrl
inc
jle
xor
push
add
jae
ficomps
mov
js
xchg
cmp
gs
stc
int3
movsl
push
les
sbb
mov
icebp
ret
adcb
mov
pushf
push
stos
push
data16
pusha
push
adc
adc
pop
lret
push
fcompl
addb
mov
cvtps2pd
scas
cs
repz
xchg
push
fdivrl
sbb
stos
lock
psrlq
mov
pop
jmp
cmp
or
mov
scas
ja
stos
jecxz
mov
ljmp
xchg
xchg
in
test
out
inc
test
push
data16
add
mov
xlat
dec
add
cmpsl
inc
jno
int
mov
adc
sbb
call
sub
cmpb
or
push
mov
inc
inc
test
pop
fwait
mov
pop
enter
add
mov
push
test
push
mov
mov
and
push
mov
adc
mov
push
lcall
mov
cltd
mov
push
push
in
into
adc
add
mov
mov
and
mov
mov
add
push
std
fisttpl
mov
adc
out
fisubs
jnp
loope
jge
sti
dec
pop
pusha
mov
adc
jp
cltd
pushl
test
out
rol
aas
fs
cmpsl
jns
dec
out
push
xchg
nop
lret
lods
jne
cld
xor
ds
ljmp
dec
mov
push
sahf
or
jmp
ja
int
cmp
stos
inc
or
call
lock
jp
sti
ljmp
lahf
call
in
sub
mov
in
cmp
add
inc
imul
mov
cmpsb
jmp
and
and
ficoml
push
push
fs
mov
mov
stc
cmp
adc
std
xchg
mov
not
nop
dec
jp
pop
sti
aad
fcompl
inc
lahf
ss
int
in
fnstsw
imul
jmp
jo
clc
sub
mov
out
sahf
adc
cli
enter
and
or
mov
les
std
jno
test
or
inc
lods
gs
jns
push
mov
testl
aas
dec
rclb
lret
dec
xchg
mov
jnp
jo
lahf
into
inc
dec
mov
fsubrp
adc
aaa
sbb
bound
pop
adc
shll
mov
cmp
les
lods
or
jge
leave
je
mov
jno
mov
cld
xor
sbb
in
mov
test
mov
and
shll
out
fcmovb
sarl
push
jno
dec
add
mov
inc
test
mov
pop
out
xchg
aas
outsl
imul
xor
add
jg
sub
fstpt
ficoms
addr16
out
sbb
stos
mov
clc
out
in
insl
and
mov
xchg
sub
xlat
dec
push
insl
mov
xor
fs
sub
imul
inc
test
add
shl
mull
or
shlb
das
push
cmp
fnstenv
stos
in
rcll
rcrl
pop
pop
push
in
or
cltd
inc
sbb
lds
fsub
std
mov
mov
lods
aaa
jbe
mov
adc
fldl
inc
enter
icebp
cmp
lahf
jle
sbb
jl
std
sti
pop
mov
test
cmp
loop
push
shll
rcll
jp
dec
rclb
mov
test
sub
mov
pop
ljmp
test
fs
mov
xor
jge
mov
xor
xor
push
ss
sub
jp
scas
loop
addr16
xchg
push
outsb
sti
das
mov
dec
lcall
xor
mov
xchg
mov
loope
mov
daa
aad
fdivrp
xor
sub
in
or
aaa
clc
aad
insb
rclb
sub
xchg
inc
cmp
cmp
cltd
add
mov
xor
fwait
xchg
xchg
push
mov
lods
mov
xor
out
jne
cmp
loopne
testl
cmp
loopne
arpl
dec
pop
xchg
je
xor
mov
subl
repnz
les
icebp
jno
fsub
jg
into
imul
jne
loope
cli
push
sub
loope
sbb
or
repnz
jge
mov
xchg
sbb
push
push
rcrb
sbb
push
fwait
dec
jmp
xor
push
mov
lret
xchg
fsubr
jp
imul
adcb
sbb
pop
xchg
ret
je
xchg
mov
ret
mov
subb
lret
out
add
cmp
push
add
xlat
out
vmread
xorb
popa
icebp
repnz
pop
imul
cwtl
inc
loope
movsl
inc
dec
fnstcw
jae
ljmp
shrl
mov
xor
inc
sub
xorb
jbe
xchg
mov
stos
loopne
push
pop
or
push
ja
mov
adc
mov
dec
push
orb
loope
xor
and
ficoms
mov
and
and
shlb
mov
insb
dec
jb
jle,pn
push
adcl
call
shrb
in
mov
clc
dec
cwtl
pop
mov
into
and
mov
mov
pop
dec
scas
jp
int
int3
in
inc
mov
call
inc
into
mov
fstl
push
mov
push
orb
jns
mov
dec
div
cmpsl
push
jp
rcrb
inc
dec
mov
add
inc
adc
mov
sub
fildl
rorl
pushf
in
mov
test
pop
add
aad
adc
pop
rcr
test
hlt
ret
push
leave
lcall
and
ja
cwtl
pop
pop
lahf
push
pop
cmc
out
and
xor
mov
aaa
or
call
pop
jecxz
pop
out
mov
jb
divl
lret
ret
popf
mov
in
cli
into
into
ficoms
mov
ret
out
ss
mov
test
filds
insl
in
cmpsl
push
lcall
jle
pop
aaa
mov
adc
stc
jg
fxch
loop
cli
scas
cmp
xor
cmc
mov
mov
leave
sbb
test
pop
mov
mov
xchg
lret
sub
lock
add
into
jbe
loopne
inc
gs
arpl
pop
mov
mov
fdivs
mov
enter
int
outsl
popa
xchg
ret
mov
xchg
std
mov
in
jmp
bound
sahf
loopne
push
and
or
insb
stos
je
int
sub
test
test
stos
xchg
xchg
add
ds
inc
add
lock
test
adc
mov
ds
mov
cmp
lods
testb
mov
lret
adc
add
jbe
sarl
shlb
mov
and
imul
or
jne
and
xchg
insl
fldenv
insb
mov
shlb
adc
hlt
repnz
in
jnp
push
movsb
sub
out
repnz
push
jecxz
jbe
lea
push
and
or
frstor
push
jg
mov
dec
jne
call
mov
mov
in
xor
daa
es
je
xchg
pop
push
pop
adc
data16
and
pop
jle
add
std
stc
jo
xchg
stc
xor
pop
adc
pop
lds
cmp
int
sub
mov
loopne
out
call
push
pop
sub
push
mov
mov
mov
in
cld
rcll
daa
outsl
push
mov
pop
xchg
pushf
testb
adc
mov
jae
loop
fdivrp
inc
mov
xor
dec
out
call
xchg
enter
sub
data16
jne
fsubrl
lods
cmpsb
pop
mov
and
add
je
addr16
xchg
push
xlat
mov
out
rcr
dec
popa
setne
ret
jle
add
movl
pop
pop
add
xorl
sub
mov
xor
sbbl
int
int3
aad
xchg
push
jl
push
mov
push
inc
roll
xlat
out
push
xchg
bound
jae
add
stc
push
aaa
es
inc
cltd
jbe,pt
xchg
aam
pop
sbb
lahf
mov
jg
fsubrl
jnp
cltd
and
sahf
xor
data16
movsb
int
fldcw
repz
inc
ds
adc
notl
dec
fadds
jno
shrb
pusha
call
or
xchg
js
cmp
xor
pop
aam
xchg
filds
or
daa
xchg
lods
xchg
int3
jb
jno
fdivr
mov
mov
and
add
scas
and
xor
stos
leave
int
xchg
roll
inc
iret
push
push
xor
mov
test
iret
leave
sbb
pop
imul
sti
orl
es
test
and
dec
enter
ret
dec
mov
inc
mov
mov
xchg
pop
iret
or
jae
out
and
insl
jge
popa
sbb
clc
ret
mov
lcall
in
jbe
test
clc
cmpsl
push
jmp
test
push
mov
lea
call
mov
push
sub
arpl
or
mov
sbb
pushf
push
and
sti
test
cwtd
out
mov
jecxz,pn
dec
cmpsl
xor
pop
cmp
mov
fstpl
xor
cmp
out
add
mov
scas
stos
sub
in
cmpb
pop
das
ret
or
pop
rcll
cs
dec
nop
arpl
jb
das
out
mov
jne
mov
jp
sbb
les
dec
add
leave
incl
and
mov
sbb
push
pop
cmpsb
mov
inc
xchg
inc
push
andb
jge
xlat
add
pushf
je
push
in
mov
in
xlat
mov
mov
std
rcr
inc
mov
mov
xchg
or
mov
xor
push
addr16
hlt
cmpsb
and
ljmp
pop
jmp
ja
addl
je
inc
mov
fcompl
push
and
mov
cmp
outsb
sub
mov
out
push
imul
jnp
dec
lahf
out
cmpsb
out
icebp
sbb
clc
orb
cwtl
arpl
shl
in
add
sbb
adc
in
lods
ret
push
inc
mov
jno
daa
xor
jns
inc
push
dec
jmp
mov
add
nop
xor
loopne
subb
xchg
stos
pop
and
js
arpl
scas
lret
mov
xchg
mov
mov
xchg
mov
rolb
jg
mov
mov
inc
jl
mov
sub
push
andb
loop
lock
pop
repz
xchg
leave
insb
ret
loop
and
jl
rorb
mov
cmp
test
out
dec
pop
mov
mov
cmp
mov
mov
insl
adc
outsb
pop
jp
sbb
mov
sub
insb
int
in
fucomip
lahf
lcall
cltd
jno
mov
fcoms
sub
sti
movl
fnstcw
fiaddl
stc
std
mov
sbbb
repnz
sbb
into
stc
imul
cmpb
mov
mov
push
repnz
aas
sbb
xor
sbb
aas
iret
pop
testl
stc
sub
lcall
out
mov
push
jne
push
jmp
outsb
imul
pop
xchg
repz
aam
push
dec
lods
xchg
adc
ds
pop
pop
call
lods
xor
push
or
rclb
sarl
insb
xor
xchg
jmp
test
imull
stc
xor
xor
lock
push
cmp
fsubrs
cmp
inc
adc
xchg
pop
iret
jno
insb
inc
and
pop
xor
test
cmp
ffree
sub
add
dec
shlb
lcall
cmp
sub
lock
pop
mov
cmp
iret
stc
pop
mov
mov
out
pop
stos
aas
push
mov
inc
mov
lods
mov
fstps
xlat
data16
mov
das
mov
scas
mov
fldenv
adcl
sbb
inc
mov
jnp
loopne
fs
int3
pop
jg
cwtl
dec
sbb
xlat
out
mov
pop
adc
jb
add
shl
pop
out
and
sbb
and
clc
cmpsl
test
aam
jne
xchg
xchg
lock
out
cmp
mov
int3
repnz
imul
in
push
pop
inc
ja
imulb
xchg
mov
ljmp
mov
jb
out
lahf
bound
bound
in
rorl
push
pusha
cli
je
sbb
push
inc
scas
in
cmp
in
lahf
test
insl
lea
jmp
xchg
gs
xchg
out
mov
sarb
push
lds
mov
lods
std
cmp
pop
sti
jbe
stos
mov
dec
fcmove
mov
mov
cmc
pop
movsl
sbb
and
pushf
inc
push
cli
mov
xchg
mov
fnstenv
cli
addr16
push
fisubl
jecxz
inc
mov
pop
nop
push
lahf
sbb
cmp
and
xchg
pop
out
inc
xchg
ljmp
shlb
lock
pop
xor
xor
pop
sbb
mov
das
jo
inc
bound
add
cmp
dec
out
xlat
pop
sbb
aas
dec
loop
test
cli
pop
outsb
inc
fsubs
arpl
inc
lock
sub
jge
cmp
adc
xor
sbb
addr16
push
fwait
jle
out
xchg
fistps
iret
fdivl
mov
dec
push
sbb
in
lret
das
fs
jnp
enter
test
int
cld
dec
fidivs
cld
addl
pop
pop
ljmp
outsb
ja
cmp
mov
inc
js
arpl
and
push
flds
mov
push
out
je
or
sub
jecxz
mov
mov
pop
lods
lahf
decl
pop
iret
inc
sub
inc
in
and
mov
jmp
xor
int
mov
xor
scas
mov
xor
dec
je
sub
push
out
mov
xchg
in
lret
aaa
cld
mov
in
sbb
jge
push
int3
hlt
int
scas
dec
dec
adc
adc
int3
in
faddl
adc
push
in
lds
mov
ljmp
ja
shrb
or
aad
jns
cmc
jle
popa
push
cmp
jl
out
pop
int3
addb
cli
or
inc
in
jae
aaa
fmull
jbe
adc
inc
lret
movsl
inc
nop
jno
add
ficoms
sub
mov
out
addb
jle
fsubr
xchg
pop
or
loopne
loope
and
jmp
cli
push
fs
nop
dec
push
sbbb
cli
jge
pop
or
je
fiadds
and
adc
xchg
pop
dec
or
addr16
inc
push
ret
fmuls
filds
cmc
fsts
push
lahf
fstps
in
adc
clc
fucomi
lcall
lret
shr
arpl
fiadds
repz
jg
les
dec
adc
push
adc
inc
push
dec
jle
ret
cmp
test
cmp
into
adc
insb
int3
mov
dec
adc
mov
mov
adc
adc
xchg
inc
cmp
add
add
xlat
jb
mov
shrl
push
or
sub
mov
push
cmpsl
push
mov
cwtl
jae
jg
pop
and
add
mov
fldl
or
testl
or
mov
pop
subb
enter
or
lods
dec
int3
jbe
movsb
sbb
inc
js
mov
xor
pop
mov
jle
add
cwtl
and
mov
test
fstps
jo
mov
xchg
call
js
subl
dec
dec
divl
push
gs
mov
scas
fwait
daa
enter
jb
mov
mov
das
pushf
leave
push
test
jns
lcall
popf
cmp
xor
cmp
cltd
pop
jp
test
pop
test
jg
mov
inc
cmp
pop
and
sbb
push
jl
cmpsl
bound
adc
hlt
jecxz
xchg
jg
loope
pop
push
out
lds
int3
test
shll
and
push
xchg
jne
lret
clc
adc
ret
sub
mov
adc
dec
insb
add
mov
stc
cmpsb
aad
scas
mov
sarb
in
dec
data16
adc
mov
sahf
adc
and
add
jae
bound
or
std
xorb
xchg
mov
fstpl
dec
adc
cwtl
andb
add
fsubrl
in
les
dec
push
mov
add
sub
scas
xor
pop
jmp
sub
mov
jnp
cmp
or
cmp
movsb
jo
mov
jnp
arpl
push
push
mov
inc
push
loope
and
std
and
in
mov
jno
stc
pop
pop
or
pop
js
stc
rcrb
xor
xor
movsb
add
repnz
pop
inc
fadd
insb
xchg
data16
jmp
enter
cmp
out
jmp
inc
es
adc
add
push
pop
sub
pop
ljmp
repz
inc
int
mov
add
lret
adc
lret
cwtl
imul
xor
lock
add
push
xchg
repnz
popa
mov
jbe
in
adc
mov
jns
pop
fstl
add
repnz
test
sbb
testb
mov
popf
iret
lock
jnp
sbb
sub
test
fsubs
xchg
jne
shrl
ret
sub
adc
cltd
and
enter
scas
hlt
rcr
dec
sub
pushf
xlat
cmp
or
and
mov
mov
jle
cmc
jno
test
mov
dec
mov
xchg
aas
mov
scas
jnp
inc
xchg
int
sub
cmp
xor
add
rorl
xor
or
mov
cmpsb
fldl
mov
fnstenv
mov
cmp
das
jp
rorb
xchg
xchg
jae
adc
ds
insb
fldl
das
push
pop
push
or
imul
jg
imul
xlat
sub
push
bound
sub
sbb
push
push
and
xchg
hlt
in
sbb
fsubrp
out
cltd
fwait
cmp
lea
pop
cs
xchg
lods
pop
aaa
and
imul
pop
lods
int3
push
clc
cwtl
lret
pop
sub
xchg
cmp
push
cli
jl
mov
xchg
test
jns
out
cmp
dec
push
or
and
inc
pop
or
cmp
lret
mov
les
push
sar
fs
mov
and
dec
mov
xor
jmp
adc
jecxz
fcoml
sbb
push
hlt
push
sub
rcll
sub
mov
stc
jae
je
aaa
roll
cmp
mov
lds
pop
out
mov
sti
lahf
call
idiv
outsl
fiadds
pushf
add
jp
dec
fistps
mov
fsubl
decb
scas
pop
in
out
sahf
lcall
xchg
shr
sub
scas
es
cmp
lock
repz
mov
add
pop
lahf
pop
dec
das
rcrl
pop
jge
push
cmpsb
test
inc
orl
sub
rcl
push
push
sbb
mov
sarb
adc
mov
xchg
push
and
lock
mov
and
imul
mov
in
test
fmuls
lods
mov
les
es
cltd
mov
out
cmpl
loope
ljmp
nop
add
pushf
xor
pop
inc
lods
inc
cltd
movsl
adc
jl
push
mov
dec
sub
imul
loope
sti
ret
mov
add
mov
push
jns
sub
cwtl
popf
aaa
cmp
cltd
stc
mov
sarl
pusha
push
sbb
std
pop
mov
xchg
lahf
push
call
test
clc
fdivl
mov
in
xor
hlt
adc
divl
sub
inc
mov
mov
imul
sub
mov
std
lahf
sbb
sub
xchg
mov
fdivp
dec
rorb
sbb
lock
and
scas
in
mov
sub
xchg
adc
and
imul
push
aam
mov
pop
scas
mov
sti
cltd
mov
fmul
stc
jg
xchg
lret
mov
adc
pop
sbb
loop
dec
mov
or
fnsave
shlb
push
cmpsb
sbb
lahf
jbe
int
dec
fnstenv
nop
adc
dec
mov
shrb
leave
or
arpl
push
sbb
js
stos
and
cmp
jmp
cmc
mov
mov
xchg
pusha
cwtl
popf
ja
add
cwtl
icebp
push
mov
in
push
nop
test
or
pushf
aam
lds
sbb
add
clc
sbb
enter
idivl
and
jno
ds
sahf
sbb
sub
xor
incl
jo
jl
pop
pop
adc
lods
rcrb
out
xor
nop
mov
pop
xor
lret
add
addr16
mov
int3
jg
push
bound
test
jg
mov
push
xor
aam
outsb
ja
dec
sbb
lahf
scas
mov
rorb
cmpsb
sti
and
and
jne
xor
sbb
push
add
cmpsl
das
adc
and
iret
or
call
lods
mov
test
data16
sub
mov
mov
xor
adc
loope
les
sahf
push
add
mov
jge
jbe
pop
loop
aaa
dec
mov
inc
adc
int
insb
sbb
xchg
ja
adc
inc
xchg
pop
ja
jae
and
xchg
jle
cmp
ljmp
movsl
pop
xor
sahf
cmpsl
pop
adc
add
mov
xlat
cmpsl
mov
mov
loope
jae
ljmp
push
std
mov
or
sti
xorb
adcl
rcll
dec
jecxz
mov
cmp
and
add
jo
dec
jo
pop
jge
mov
dec
inc
or
outsb
das
xchg
pushf
sbb
aam
cmp
stc
mov
lret
xor
inc
test
cmpsb
pop
sarl
dec
mov
pop
sbb
push
add
enter
mov
and
pop
sbb
jmp
imul
mov
mov
cmp
jle
aaa
cld
jle
jo
jl
mov
icebp
dec
pop
rep
push
dec
cmp
pop
dec
loope
pop
sbb
in
inc
push
rcl
jmp
fisubrl
std
mov
mov
rolb
xchg
fistps
test
test
and
add
fucom
ret
cld
adc
mov
mov
and
hlt
bound
pop
cmp
or
je
fnop
fs
lods
cltd
add
pop
arpl
out
mov
and
sub
adc
loopne
sub
sbb
cmpsb
lret
bound
clc
cld
roll
rcrl
scas
push
inc
lods
imul
ficoml
popf
xchg
cmp
test
jo
outsl
inc
mov
xor
inc
mov
das
jge
jns
mov
outsl
jae
rorb
mov
out
mov
xor
cli
add
mov
ljmp
xor
mov
outsl
les
in
push
hlt
add
pop
xlat
cmpl
mov
stos
inc
frstor
mov
loop
xchg
cmp
fldl
xor
jnp
pop
test
mov
jmp
pop
xor
lcall
ljmp
rolb
call
or
sbb
imul
sahf
and
cld
or
push
repz
xor
cmpsl
adc
lahf
les
cmp
test
push
push
sub
insb
xchg
adc
inc
pop
sbb
push
cmp
out
dec
lods
inc
lods
sbb
mov
inc
pusha
icebp
or
scas
jbe
push
popa
loopne
mov
test
push
mov
hlt
in
xor
dec
push
mov
xchg
notl
lahf
out
lret
cs
in
nop
pop
pushf
sbb
xor
pop
andb
dec
mov
mov
cmp
inc
adc
ret
mov
push
push
notb
jle
daa
xor
shlb
mov
xor
add
mov
cltd
test
dec
pop
sbb
or
push
outsb
xchg
add
pusha
inc
fs
cmpsb
cmp
cwtl
jae
sub
sbb
mov
xchg
int3
pop
jge
mov
cmpsl
xor
mov
inc
adc
inc
add
pushf
xchg
lock
and
les
loopne
xchg
gs
enter
icebp
mov
popa
sbbl
out
and
jecxz
js
mov
mov
dec
mov
xor
mov
arpl
gs
mov
aas
outsl
ret
lods
push
negl
and
testl
mov
push
outsb
xchg
mov
addr16
aaa
inc
stos
sub
testl
cmp
fmuls
or
je
sbb
xlat
adc
ds
es
jle
into
stos
sbb
ja
pop
dec
ficompl
repz
int3
mov
xor
cmp
add
mov
pop
sub
mov
adc
jg
or
xchg
aad
shlb
mov
mov
pop
fnstenv
jno
jl
dec
cmp
loopne
jecxz
cmp
mov
aam
lock
inc
xor
sti
push
ret
shll
sbbb
inc
lret
or
pusha
adc
jge
or
pop
inc
mov
jns
or
xchg
xorb
push
cli
mov
xchg
leave
lea
dec
in
lds
jecxz
xchg
and
dec
je
push
mov
mov
push
repz
sahf
sub
and
xchg
incl
pushf
movb
jle
stos
loop
adc
adc
mov
test
imul
sub
cwtl
cmp
push
cmp
xchg
std
mov
ljmp
cmp
inc
jge
fcomp
mov
and
add
roll
imul
syscall
inc
and
fs
shll
push
lds
movsl
subb
lahf
inc
pushf
jecxz
jnp
insl
inc
adc
push
jg
xchg
push
jbe
in
clc
lock
adc
lods
add
outsb
lcall
ja
sbb
dec
lds
imul
dec
ja
sub
xchg
ljmp
jbe
jno
inc
addr16
stc
push
ret
and
aad
cmp
xchg
jns
movsl
dec
dec
sbbb
adc
xchg
in
insl
mov
inc
rcrb
faddl
xchg
push
and
std
add
add
push
test
icebp
jmp
xor
pop
movsl
xlat
add
std
test
cmpsb
mov
in
xchg
sub
sbb
jl
push
mov
mov
dec
jl
sti
in
ret
cmp
adc
filds
mov
mov
mov
rcll
stos
add
push
fdivl
push
or
xor
int
or
pushf
stos
push
sbb
imul
xor
fadds
dec
push
inc
jb
popa
movsb
jmp
sbb
icebp
loopne
leave
pop
inc
push
mov
or
ja
adc
push
test
push
dec
and
xor
add
into
cs
mov
leave
cmc
mov
data16
sbbl
adc
mov
pop
jbe
fxch
fimull
jbe
adc
out
aaa
subb
roll
mov
mov
push
shrb
insb
mov
xchg
adc
ret
xchg
les
ljmp
or
cwtl
ja
or
sub
popa
inc
sahf
jl
std
in
mov
jno,pn
adc
es
and
dec
aaa
int
int3
add
sbb
jge,pt
xor
xor
jnp
jp
pop
jmp
jge
into
test
lcall
jno
popf
sub
pop
dec
and
dec
rorb
sub
lret
add
mov
mov
and
sub
cwtl
pop
xor
mov
daa
mov
xchg
adc
adc
movsb
lds
mov
outsb
hlt
mov
push
xlat
idivl
fucomip
push
xor
imull
mov
daa
xchg
out
into
decl
sahf
gs
fcmovnu
mov
movsb
pushf
stos
mov
xor
sub
sub
lret
push
mov
call
outsb
fidivrs
test
pop
xchg
push
mov
test
xor
stc
pop
push
push
imul
sbb
scas
scas
and
push
loope
xchg
xor
push
mov
in
ds
in
in
stc
test
jbe
add
xchg
xor
std
mov
scas
xchg
fs
je
clc
js
inc
rorb
dec
shl
push
shr
cld
jno
ljmp
lret
mov
in
push
jle
in
push
jnp
jmp
into
icebp
pop
adc
sti
xor
cld
fwait
adc
lea
mov
cmc
or
dec
in
mov
dec
insb
inc
testb
ja
xor
call
std
jns
mov
mov
push
cmp
pop
dec
jns
sub
shll
cmp
cmp
cwtl
mov
mov
je
lock
and
lahf
jp
adc
mov
mov
xchg
pmulhuw
adc
test
xor
adc
sti
inc
lock
add
push
cmp
add
loop
xchg
cs
jne
and
mov
mov
cmc
push
mov
jl
mov
fistpl
addb
subl
push
mov
sbb
out
mov
jg
sub
adc
cmp
aam
in
outsl
adc
mov
dec
bound
bound
pmulhuw
push
dec
pop
xchg
adc
aad
lods
lcall
push
xchg
subl
loope
jmp
pop
test
sub
mov
push
shr
ja
push
cld
mov
daa
mov
xchg
cwtl
xchg
jbe
cwtl
or
mov
shlb
sub
dec
sbb
mov
outsb
push
mov
ret
mov
xchg
xchg
ja
addb
js
scas
addr16
mov
xchg
daa
mov
add
in
in
jmp
inc
lods
test
sub
cmp
jecxz
lock
adc
iret
sbb
test
jmp
rclb
dec
rorb
jnp
lret
out
test
repz
jns
pop
test
lret
adc
fisubrs
ret
or
push
xchg
pop
aam
pushf
xlat
cmp
out
cmp
jl
popa
iret
in
ret
or
out
jno
push
add
sarl
loopne
mov
cmp
push
inc
dec
xor
clc
pushf
out
adc
adc
adc
inc
test
adc
and
and
xor
push
xchg
fsubrl
mov
inc
gs
cmp
mov
xchg
jle
jbe
push
fdivr
lcall
test
leave
cltd
xchg
lret
ja
nop
pop
cmpsl
dec
sbb
fwait
mov
push
mov
in
mov
mov
jle
lds
cmc
fstps
add
jp
lea
mov
divb
xor
push
xor
mov
out
inc
push
mov
daa
shrl
ds
or
sbb
pop
xor
stos
mov
mov
rclb
jecxz
mov
cs
jge
mov
nop
cmp
inc
stc
inc
cmp
lret
mov
int3
lahf
sbb
mov
xchg
repnz
mov
aaa
pop
pop
adc
pop
lock
xchg
jge
cmc
xor
testb
xchg
and
ss
out
pop
sub
out
rcrb
xchg
jle
push
pop
lds
movsl
aaa
inc
not
push
pop
or
and
or
add
iret
jno
pop
mov
sahf
lods
outsl
inc
sbb
xor
cwtl
movsb
add
pushf
cmp
in
hlt
xor
push
jle
and
pusha
sbb
mov
ja
and
add
add
sbb
loop
lret
scas
adcb
movsl
fsubs
or
mov
lds
inc
fisubl
lds
fmuls
cmpb
ret
lret
shrl
test
stos
in
sbb
dec
or
orl
sahf
cmc
lods
xor
rorl
sbb
jns
mov
mov
xchg
inc
leave
or
mov
ljmp
mov
lret
fs
movsl
mov
lds
test
in
fwait
ret
cmpsb
xor
dec
sti
push
aas
mov
xlat
std
or
xorb
pop
mov
mov
popf
aam
add
fbstp
xchg
adc
mov
inc
jbe
add
pop
mov
xor
jno
inc
lds
das
daa
out
sbb
icebp
mov
pop
imul
int
xor
int
repz
ret
and
jne
rorl
adc
dec
andl
mov
cmpsb
mov
xchg
arpl
pop
movsb
push
push
jnp
lret
mov
xchg
mov
cmp
jmp
clc
leave
mov
jmp
pop
mov
fdivr
mov
cld
clc
mov
nop
sarb
pop
inc
testl
adc
xor
jmp
mov
cs
xor
test
sarb
pop
roll
dec
mov
push
hlt
jg
sub
sti
or
jnp
scas
loopne
sahf
pop
mov
sub
cmpsl
cli
clc
aaa
rorb
mov
adcl
lret
mov
jns
lcall
pop
pop
lahf
dec
xchg
imul
aad
inc
popf
cmpsb
int
xor
in
popf
lahf
cmp
sbb
icebp
les
push
push
mov
lods
std
stos
cli
sub
and
aaa
pop
out
adc
ss
fnstsw
sbb
add
xchg
les
xor
mov
add
jecxz
mov
insl
gs
in
mov
outsl
pop
in
pop
lret
xor
lods
xor
aas
push
jmp
adc
gs
cwtl
pop
call
std
aas
cmp
add
cmp
and
call
adc
pop
es
loopne
mov
sub
movsl
sbb
xor
cmpsl
fidivl
xor
dec
pop
cmpsl
ljmp
mull
jns
xor
shl
mov
mov
mov
ss
nop
jnp
testb
lahf
and
lret
cltd
clc
fimull
rcrl
dec
xchg
mov
pop
or
cld
inc
xor
js
popa
insl
outsl
or
std
popf
in
jmp
jnp
pop
cmp
pop
mov
in
scas
sub
movl
add
int3
lahf
fwait
call
ds
cwtl
lods
push
add
imul
push
xchg
dec
push
enter
inc
pop
pop
sti
push
inc
mov
ds
mov
mov
add
aad
mov
mov
cmp
fwait
push
mov
aas
arpl
pop
or
and
jb
sub
jb
lock
lret
xchg
push
mov
lea
faddl
mov
lock
ja
dec
movsb
mov
or
fwait
jg
fsubs
mov
mov
mov
pop
jne
mov
lea
push
jg
rclb
cmp
leave
in
loop
ss
stos
mov
cmp
sub
cmp
test
jmp
loope
dec
xchg
jns
jne
rclb
cmp
popa
xor
adc
loope
inc
test
sub
in
jns
cmc
pop
jno
mov
addr16
mov
not
lods
hlt
int
or
imul
cmp
dec
inc
sub
stos
or
ret
sub
cs
rcrl
lahf
dec
dec
inc
cmp
or
jns
or
rclb
jp
jg
aas
and
rorl
testb
js
add
pop
sub
adc
fcompl
cmp
xchg
cmp
jnp
jne
xchg
mov
xor
mov
jnp
ja
ds
cmp
xlat
sub
inc
inc
adc
insb
mov
push
cmp
xchg
aaa
mov
lds
add
cmc
sub
mov
or
les
xor
in
adc
je
push
inc
loope
mov
mov
pop
mov
mov
mov
andb
adc
add
push
outsl
mov
mov
int3
xor
adc
sbb
cmp
or
stos
ds
ds
out
cmc
pop
sub
rcr
rcll
sbb
popa
sbb
loopne
test
push
outsb
xor
add
cmp
adc
and
loope
sbb
and
aam
les
loope
xor
das
hlt
pop
inc
adc
jecxz
sub
fiadds
ss
push
jge
cmp
lods
add
push
testb
push
jmp
xor
lahf
ret
jp
int3
popa
jne
mov
test
add
jle
icebp
rol
ljmp
cs
rclb
xor
mov
les
dec
inc
push
mov
daa
sub
inc
fwait
or
fdivrl
xor
cmp
adc
mov
push
addr16
jb
outsl
sti
adc
jl
mov
mov
sub
lahf
push
fmul
jg
cmpsb
cmp
mov
sarl
adc
in
or
sbb
jmp
jg
mov
xchg
and
ret
clc
jp
je
andb
lret
cmp
jg
popa
dec
cli
aam
js
mov
clc
cmp
sub
inc
pushf
cli
repz
jle
cmp
or
ja
adc
or
pop
pusha
lret
or
jg
mov
sub
sbb
jmp
pop
add
sub
mov
loopne
rcl
dec
out
addr16
addr16
pop
add
jg
clc
xchg
pop
cmpsb
cwtl
sbb
lods
mov
xchg
sbb
fs
in
push
add
or
xchg
add
hlt
jne
jmp
ds
outsl
pusha
add
ds
js
fldt
out
add
mov
xor
push
scas
xchg
movb
cmp
or
sbb
ds
jnp
mov
xchg
add
inc
inc
sub
pop
addb
rcrl
xor
mov
push
sbb
pop
mov
mov
mov
or
cld
mov
pop
jl
cmp
pop
loopne
mov
push
fcoml
mov
testb
loopne
push
and
mov
fdivs
lock
cmp
mov
es
and
push
sahf
bound
ror
xchg
cmpl
mov
cmc
out
repz
inc
push
jecxz
test
mov
sub
or
out
popl
sarl
sub
lcall
movsl
mov
dec
movsl
add
pop
cmp
mov
clc
jl
jo
icebp
int
mov
mov
in
jns
sbb
sub
popa
push
mov
lods
sub
adc
ret
cli
in
mov
lods
mov
add
cwtl
inc
lret
pop
add
add
fisubrs
pop
rclb
and
out
cmpsl
lea
gs
pop
sub
mov
pop
bound
pop
imul
fstpl
lods
sbb
jle
dec
xchg
sti
sbb
arpl
cmp
jnp
xor
repz
je
in
aaa
push
lahf
paddusw
loopne
sbbl
lea
mov
mov
or
enter
nop
imulb
add
mov
xor
mov
scas
or
sbb
loop
mov
stc
sub
out
stos
out
filds
lret
push
std
mov
push
lret
call
ss
sahf
mov
mov
leave
es
ds
shrl
insl
cmp
mov
mov
or
sahf
add
push
sbb
or
ficompl
inc
xchg
add
ljmp
inc
iret
lcall
push
fldcw
leave
movsb
pop
cwtl
sbb
adc
decb
into
pop
xchg
les
inc
out
dec
imul
xor
adc
hlt
push
mov
add
mov
mov
sbb
sbb
push
sbb
outsl
mov
pop
mov
pop
leave
dec
and
jo
push
adc
push
shl
push
dec
hlt
hlt
call
mov
pop
sub
inc
jns
or
mov
sbb
inc
rcr
and
unpcklps
jge
movsl
add
mov
xchg
out
mov
les
jne
jns
mov
sbb
ret
fcmovnb
add
mov
js
ja
fwait
mov
rcr
push
mov
in
xchg
ljmp
insb
dec
push
shll
sub
repnz
shrb
dec
sbb
cld
jecxz
pop
lods
and
or
outsl
repz
aaa
ret
fcmovnb
sub
xchg
sbb
adc
lret
push
out
imul
push
inc
jb
and
rcr
xor
xchg
sarl
mov
rol
or
out
dec
push
mov
dec
cmp
in
int
aad
sti
mov
mov
ret
fldl
and
pushf
and
jle
mov
adc
xor
mov
icebp
movsl
sub
mov
int
jne
cmp
out
out
aam
fidivl
sub
or
movsb
push
test
jmp
cmp
sarl
push
movsl
dec
mov
dec
cmp
mov
mov
lahf
mov
add
mov
sub
push
add
gs
or
imul
push
cwtl
adc
mov
cmp
stos
enter
adc
jae
imul
or
in
adc
sub
mov
jle
fsubrs
aad
pusha
push
xchg
inc
scas
addr16
notb
es
dec
lods
orl
sbb
fwait
push
sub
jno
rolb
shlb
and
xor
pop
cmpb
rcl
shll
mov
je
sub
sahf
subb
mov
xor
lret
mov
movsb
pop
mov
in
hlt
dec
push
xchg
sbb
or
pop
daa
femms
sub
fisttpl
sub
or
dec
xor
mov
push
push
cmpl
arpl
popa
adc
bound
fidivl
mov
xor
mov
inc
sub
mov
imul
lahf
mov
sub
testl
pushl
mov
fcomps
test
push
call
bound
scas
inc
dec
xchg
stos
jmp
xor
bound
or
mov
mov
lcall
movsb
cmpsb
pause
fs
add
pop
test
test
sar
inc
dec
pop
cmp
push
xor
aam
jl
xor
adc
mov
add
inc
pop
jne
cmpsb
pop
cmp
sbb
negl
push
cmc
sbb
pop
lea
xlat
cmp
and
pop
mov
popf
mov
push
into
mov
imul
mov
xchg
cmp
test
lcall
sub
bound
and
andl
dec
iret
hlt
pop
or
sbb
push
mov
push
in
inc
dec
sti
int3
aas
jp
jecxz
inc
jae
sub
add
fldenv
sbb
cli
frstor
cmpl
out
mov
sub
jns
inc
and
push
ljmp
xor
xlat
pushf
sbb
cs
and
jo
sub
xor
sbb
mov
pop
sbb
pushf
dec
mov
push
sbb
cmc
inc
in
xchg
push
mov
addb
iret
dec
in
mov
mov
das
aaa
jns
ret
clc
popa
xchg
and
shll
xor
jge
xlat
mov
push
call
jg
dec
stos
jmp
fld
fcompl
test
xor
mov
ja
or
movsl
stc
movaps
or
out
addr16
es
pop
inc
xchg
mov
and
icebp
lret
pop
insl
loopne
xlat
int
pop
and
inc
sub
or
mov
xchg
dec
mov
inc
jne
mov
enter
pmulhuw
inc
mov
scas
dec
cmp
cmpsl
mov
xor
ret
and
adc
mov
xor
loopne
icebp
mov
adc
push
je
xchg
orl
inc
mov
cld
sarl
mov
cmpsl
cmpsb
movsl
shll
rorb
insl
dec
sub
sbb
loopne
fsubrp
dec
push
xchg
int
insl
mov
push
mov
fs
mov
fnstenv
sbb
adc
ss
lods
fs
push
and
mov
mov
inc
gs
dec
repz
mov
inc
mov
in
mov
push
ja
add
mov
call
jo
add
mov
push
out
cmp
mov
movsb
add
adc
into
add
enter
scas
inc
inc
jbe
aad
jb
outsb
sti
cli
mov
inc
push
jne
dec
push
into
leave
mov
inc
push
push
dec
pop
inc
sarb
or
dec
pop
mov
jae
add
das
sub
lahf
sub
add
loope
movsb
add
and
movsb
add
push
sbb
fidivs
stc
cmp
inc
push
dec
xor
stos
andb
cwtl
sbb
sarl
hlt
div
push
jnp
sub
lcall
aam
cmp
pop
dec
lock
orb
jbe
xor
pop
mov
outsl
hlt
je
mov
mov
fisubl
add
and
cmpsb
sub
and
lcall
sub
dec
pop
jns
inc
cltd
xor
loop
jp
xor
sbb
ret
fadd
add
dec
sub
cmpsl
ret
mov
mov
repnz
in
dec
cmc
push
jmp
jns
xchg
mov
pop
pop
rcl
mov
or
or
mov
mov
cs
push
jnp
lcall
or
mov
outsl
push
dec
mov
mov
imul
arpl
and
jmp
sahf
mov
sub
mov
lock
and
aas
int
gs
test
xor
and
js
inc
addr16
in
dec
fimuls
adc
adc
ja
iret
xchg
pop
sbb
xor
int3
mov
stos
mov
ret
ret
sbb
dec
sub
aas
mov
push
out
mov
push
js
sbb
lea
mov
add
sub
test
movsb
es
jae
popa
inc
xor
xorl
loop
aas
stos
inc
xorl
mov
in
cmp
inc
jo
cwtl
lock
lret
jge
mov
fdivl
or
fldln2
inc
push
mov
lock
inc
fistl
push
fucomip
inc
pop
inc
daa
out
xor
dec
xchg
aas
std
jb
xor
mov
cmp
in
stos
push
ja
pop
sub
jbe
jno
sbbl
les
repz
dec
jge,pt
outsb
outsl
sbb
add
add
fisubl
ss
call
inc
adc
push
inc
xor
xchg
out
push
test
negb
nop
in
mov
jbe
ljmp
ljmp
dec
push
fistps
cmp
adc
pop
mov
in
enter
f2xm1
lret
stos
pop
lods
jns
mov
lahf
cld
rorb
xor
pop
in
dec
and
popa
jmp
icebp
aaa
sbb
shll
fidivs
and
and
addr16
jmp
mov
xor
divb
sbb
cmpsl
mov
inc
jne
add
cmpsl
hlt
nop
jecxz
pop
lea
dec
fs
iret
inc
push
dec
push
aas
jmp
subb
mov
outsl
fcmove
adc
mull
outsb
call
mov
ret
add
fsubrs
pop
dec
xlat
cmp
mov
loopne
pop
xchg
lahf
mov
insl
aad
inc
mov
movsb
mov
adc
sub
push
adcb
loope
int
test
mov
fnstenv
cmp
xor
jb
outsb
mov
jmp
mov
jge
into
test
and
jmp
pop
push
lods
jmp
mov
mov
mov
dec
pop
push
mov
popa
cmp
mov
div
hlt
ja
outsl
test
fbld
jge
lods
push
mov
mov
jne
cmp
icebp
out
iret
pop
out
or
cmp
add
or
lea
push
sub
ja
pusha
popa
jge
and
add
dec
iret
dec
shll
mov
and
mov
mov
xor
ficompl
mov
daa
iret
lea
test
sahf
push
mov
sahf
movsl
mov
sbb
add
mov
push
sbb
adcb
mov
dec
push
repnz
push
mov
int3
cli
inc
shll
loope
cwtl
inc
mov
pop
lret
cmp
gs
insb
pop
mov
dec
lcall
int3
loopne
xlat
mov
inc
sbb
shrb
add
inc
jge
lock
bound
sub
dec
cwtl
fs
or
into
or
mov
jge
cld
mov
or
add
ficoml
cmpsl
lret
mov
and
pop
ja
in
jge
ljmp
in
ficomps
dec
push
imul
mov
jo
out
daa
fisttpll
pop
les
adc
popa
pusha
xlat
sbb
mov
mov
insb
ret
push
cmpsb
push
xchg
xor
push
rorb
adc
outsb
andl
addb
sti
pop
test
pop
call
into
and
out
sub
mov
cwtl
sub
cmp
inc
or
xchg
sbb
push
mov
je
mov
scas
xor
in
add
orl
jbe
pop
imul
lret
or
xchg
lock
sahf
mov
into
out
pop
faddl
add
cmp
stos
adcl
lock
and
dec
cmp
shl
jecxz
gs
add
sarb
push
bnd
fcomps
jne
xor
mov
push
faddl
cld
outsl
stc
push
inc
cmpsb
enter
stos
sub
mov
aam
sbb
popa
or
das
mov
jecxz
xchg
sti
enter
jo
sbb
sbb
rcr
lret
add
xor
test
pushf
mov
andb
pop
sbb
or
aam
movhps
sbb
aad
mov
in
pop
jno
push
inc
inc
fbld
sub
ljmp
ljmp
rorl
daa
ror
inc
bound
cmp
addb
mov
push
lock
sub
inc
dec
or
mov
int3
imul
imull
orb
add
xor
jno
insl
fs
adc
or
ror
outsb
scas
fdivrs
iret
iret
jne
mov
xor
std
or
sbb
jb
xchg
mov
test
inc
sbb
aam
jp
add
jmp
lahf
sub
mov
or
jmp
and
and
mov
sbb
mov
push
inc
xchg
inc
jae
mov
sbbb
ljmp
jl
lock
lahf
and
xchg
inc
stos
hlt
imull
mov
adc
mov
lcall
pop
sub
sbb
push
out
std
cmpsl
sub
inc
ret
icebp
pop
hlt
shl
scas
inc
pop
xor
repz
bound
mov
insl
sbbb
mov
nop
sahf
fistpl
repnz
adcb
loopne
mov
push
inc
mov
mov
and
sbb
push
mov
mov
insb
xchg
sbb
jmp
pushl
pop
sti
data16
add
pop
sbb
or
inc
jb
cs
leave
or
add
call
mov
in
and
push
popf
mov
test
and
mov
inc
cmp
xchg
sub
loope
loop
dec
or
clc
pop
jnp
fsubs
adc
hlt
sbb
shl
pop
jl
jnp
fcomps
movsb
jge
movsl
ss
outsl
adc
daa
ja
xlat
fdiv
push
jge
xorl
pop
mov
and
aad
imul
cwtl
xchg
fisttpll
je
sub
jo
mov
sbb
mov
push
roll
push
testl
xchg
scas
pop
mov
fnstsw
jo
ljmp
test
jmp
pop
in
inc
xlat
ss
mov
or
and
mov
and
and
jp
or
push
add
push
and
mov
push
adc
int3
lcall
int
jne
pop
popf
pop
call
ficoml
push
in
scas
or
js
dec
pop
inc
jns
mov
out
cs
cmp
ret
stc
outsl
push
fiaddl
sbb
and
aas
in
sub
fistpl
push
sti
out
sbb
jle
dec
andb
adc
out
filds
lret
loop
xchg
add
jge
test
xchg
gs
out
cmc
stos
repz
lock
xor
jne
int
stos
jp
jae
loopne
or
mov
cmp
int
push
xchg
bound
fidivrs
cmc
mov
mov
adc
push
mov
ss
and
es
jae
jns
fistpl
subl
leave
inc
push
lds
outsl
je
iret
jnp
mov
xchg
mov
ret
mov
xchg
movsl
cli
movsl
scas
stos
fucomi
clc
and
add
mov
sbb
loope
jp
xor
pusha
sbbl
xchg
lods
mov
push
inc
inc
ljmp
cmp
and
pushf
xor
cwtl
cs
push
mov
mov
subl
and
xlat
stc
sahf
inc
out
cmp
stos
dec
xchg
mov
sbb
jbe
xlat
shlb
cs
fcoml
mov
pop
lds
lods
jg
lret
adc
in
mov
mov
sbb
lods
fcmovnb
int
dec
fsubrl
imul
leave
pop
sbb
jge
mull
xor
mov
adc
ds
pop
vmovshdup
add
es
inc
add
mov
popl
jne
shl
adc
lahf
lret
leave
pop
mov
jp
xchg
orb
sub
inc
mov
pop
xchg
fists
jno
les
insl
fs
add
jl
mov
sub
push
mov
and
dec
mov
dec
cmpsl
xor
imul
pop
out
jge
xchg
jle
lcall
mov
jp
inc
cmp
xor
xchg
cmp
push
inc
cmpsl
mov
mov
js
cs
lret
xchg
cmp
in
jl
fdivrs
pop
stos
imul
jp
mov
ficoml
enter
mov
pop
sarb
mov
sub
leave
dec
lock
sbb
mov
sbb
jp
mov
lret
lods
rclb
mov
adc
mov
push
mov
sarb
ret
push
mov
pop
adc
hlt
loope
jecxz
std
add
out
mov
loop
jecxz
sub
add
pop
fisttpl
inc
lea
mov
fiaddl
push
xchg
or
jbe
pusha
les
mov
add
fildll
shll
inc
jbe
bound
fdivs
testl
lods
xchg
loop
cmp
inc
jns
xor
icebp
pop
out
sub
shll
or
mov
out
mov
cs
in
adc
gs
mov
sti
push
pop
sub
testl
or
loopne
jne
fnsave
push
adc
cmp
add
test
push
test
xchg
mov
sahf
std
enter
xor
adc
ret
xchg
mov
aaa
cmpsl
ret
stos
mov
adc
cld
mov
jno
jecxz
aaa
cmp
jle
adc
inc
xchg
inc
repz
mov
cmp
fidivs
lcall
sub
pop
push
jle
adc
rorl
or
les
ss
es
mov
cmp
and
xorl
inc
mov
idivb
or
dec
add
scas
test
leave
mov
sahf
mov
mov
dec
in
les
mov
xrelease
pop
das
stc
mov
xchg
adc
bound
lea
clc
cmp
cmpsb
cld
xor
cmp
aad
sti
jno
inc
sub
mov
xchg
push
xchg
or
iret
cmp
lock
jns
mov
les
mov
mov
insl
sahf
dec
in
mov
lahf
mov
dec
cmove
int3
cli
mov
fcmovbe
inc
mov
neg
and
pop
dec
xor
hlt
test
in
test
in
cmpl
flds
xchg
push
mov
sbb
jb
adc
popf
push
adc
icebp
xor
fucomip
inc
jl
rclb
in
mov
insb
cmp
jmp
lret
popa
ja
mov
es
inc
mov
add
mov
sbbb
mov
inc
pop
xchg
rorl
nop
insb
jle
mov
imul
xorb
bound
scas
sbb
inc
imul
xchg
stos
aas
and
lahf
sti
out
cmp
in
jg
adc
push
push
and
lahf
push
add
sbbl
lds
fsubp
rcpps
sub
icebp
mov
mov
shld
shrb
addr16
push
mov
push
mov
xchg
jg
xor
adc
or
lock
cmpsb
sbb
mov
sub
cmpsl
push
sarl
xor
cmp
je
test
jo
mov
js
mov
int
mov
loopne
fisubrl
mov
mov
sti
into
sub
pop
dec
into
rorl
rol
fcomps
shl
test
scas
mov
test
daa
jmp
enter
stos
jae
xor
dec
xchg
add
sbb
sbb
lea
lods
aaa
push
sbb
sahf
cmp
add
jno
repnz
or
push
ds
out
pusha
xor
pusha
int
imul
cmp
push
mov
adc
push
cmp
sub
faddl
jae
dec
call
lret
mull
xchg
xchg
mov
mov
outsb
les
push
mov
inc
cmpsb
test
dec
and
push
add
repnz
sarl
icebp
std
fnstcw
aam
call
dec
andb
sbb
lods
pop
mov
lock
lahf
je
inc
in
inc
jge
nop
fildll
out
jb
mov
add
imul
inc
andl
lds
mov
dec
sub
stos
insb
dec
mov
pop
adc
jo
add
lods
jo
movsb
xchg
fsub
mov
pusha
popa
and
stos
or
lret
enter
mov
adc
arpl
mov
push
faddl
pop
test
addr16
sbb
hlt
jle
adc
jb
int
sub
aas
pop
addr16
leave
das
lcall
pop
pop
loope
aaa
lds
outsb
jne
std
out
cld
add
adc
test
and
or
sbb
push
mov
mov
adc
sbb
sbb
test
andb
shlb
cmp
fst
ret
lret
and
push
ja
bnd
mov
mov
sarb
and
sbb
mov
cmp
adc
sbb
adc
loope
xchg
cmp
mov
or
cmpsl
lods
into
int3
cmpsl
xchg
std
push
fidivl
mov
sub
cmp
out
push
xchg
mov
push
int3
push
sbb
test
mov
out
inc
xchg
dec
adc
shr
inc
insl
insb
addl
rcrl
sub
call
mov
jne
cwtl
pop
push
dec
rol
outsb
mov
mov
xchg
xor
fwait
inc
and
and
dec
clc
arpl
neg
or
jmp
dec
ficompl
ljmp
bound
inc
or
jnp
das
jb
int
mov
scas
fldenv
mov
pop
dec
gs
fld
xor
ret
or
xlat
inc
pop
push
and
add
popfw
inc
das
mov
sub
cmpsb
fists
dec
shlb
push
mov
addr16
int3
dec
sub
jno
jnp
push
adc
bound
das
jae
lret
cmpsb
shr
mov
fiadds
push
cmpsb
stos
pop
pop
pop
scas
sub
and
sub
jbe
push
add
popf
lcall
cld
cmp
jle
rcll
in
inc
cmp
adc
or
adc
cmp
shlb
into
in
dec
iret
es
popa
adc
jmp
sbb
dec
xor
scas
xchg
push
jmp
es
shl
out
inc
rcll
jo
add
fs
pop
lret
push
adc
mov
mov
adc
fldl
cmpsl
fwait
inc
mov
bound
aaa
call
je
mov
mov
in
add
or
xchg
push
pop
fstpt
loopne
ficoml
test
test
gs
ds
test
sbb
mov
adc
lcall
xchg
inc
stos
lds
in
or
lea
push
shrb
xor
mov
push
pushf
xor
enter
lcall
mov
cmc
xchg
repnz
cmp
dec
add
insl
outsb
mov
and
shl
in
ret
ficompl
xchg
jl
and
out
cmp
jno
xor
cmp
jmp
pop
add
popf
incb
cmp
scas
inc
push
out
xor
div
sbb
mov
inc
push
popf
ja
mov
sar
jb
inc
xor
push
arpl
ds
sub
imul
dec
xlat
sub
or
lds
push
sub
jo
fisttps
pop
jne
or
xor
push
xchg
mov
popa
pop
xchg
xchg
inc
push
mov
aad
cli
xor
mov
cmc
es
cltd
out
mov
pop
cmpsl
or
or
call
push
shrl
or
push
mov
insb
fildll
sar
ret
sti
mov
popf
adc
push
xor
lea
ljmp
daa
fists
and
shll
cmp
mulb
aam
cmp
mov
aaa
lock
sub
and
cs
call
mov
sub
enter
jmp
inc
fists
les
psrad
mov
loop
xlat
dec
inc
xchg
sarl
push
arpl
push
cmp
inc
mov
rclb
addr16
cmpsb
stos
iret
in
jl
enter
and
nop
ret
mov
add
pusha
outsb
mulb
lods
outsb
movsb
and
xchg
cmp
pop
icebp
arpl
imul
loop
sahf
sbb
pop
ja
fwait
cmp
inc
outsb
mov
cmpb
stos
test
cld
jbe
and
fimull
lds
outsb
lcall
sbb
movsb
rcr
mov
pushf
pusha
cmp
lret
and
dec
pop
push
repnz
cmp
pusha
xchg
jp
icebp
ja
in
or
jp
dec
xchg
js
xor
xor
sar
push
roll
outsl
movsb
sarl
push
push
sub
mov
icebp
bound
jge
and
ficomps
pop
fmull
pop
in
jbe
sbb
out
inc
gs
call
je
sub
mov
cmpsb
out
in
dec
loopne
pop
adc
sub
push
jle
test
cmpsb
mov
mov
repz
cs
sub
fcos
ret
add
cwtl
ja
dec
stos
mov
cld
stc
imul
in
mov
mov
divb
ss
clc
call
and
outsb
mov
mov
push
sbb
enter
jno
fs
mov
cmpsl
cmc
out
out
lock
mov
hlt
lods
jmp
nop
scas
fistl
jns
push
mov
lods
push
into
pushf
inc
mov
lret
std
mov
test
loop
loop
ljmp
les
std
addr16
mov
dec
mov
in
ljmp
iret
ret
or
jbe
fildll
or
and
xor
js
jle
and
inc
push
gs
sbb
pop
mov
xchg
das
std
cltd
daa
mov
adc
adc
sahf
mov
ds
imulb
lds
adc
cwtl
push
fdiv
cmp
push
and
repnz
daa
shlb
jnp
sarb
jbe
mov
xchg
sub
mov
mov
adc
test
hlt
mov
mov
push
not
test
xchg
rcrb
rcrb
xchg
cmp
js
leave
xorb
cmp
fimull
mov
je
repnz
lahf
ror
rcrb
aas
testb
xchg
pop
add
int
ds
sub
nop
push
mov
or
xchg
push
andl
cltd
mov
dec
rcll
mov
stos
jp
adc
mov
fdiv
and
pop
orb
subl
lahf
sub
xor
mov
sbb
int3
gs
mov
popf
mov
ret
movsl
repz
push
pop
xchg
loope
cwtl
jg,pn
xor
cs
jo
lock
pop
call
divl
mov
ror
int3
sub
sbb
les
scas
mov
xchg
jl
movntps
and
inc
aaa
cmp
sub
push
cld
mov
fsubrl
jne
or
inc
and
loopne
ret
add
mov
cmpsl
push
or
push
loope
pop
rorl
adc
in
inc
xor
andl
inc
jbe
sbb
sbb
mov
mov
mov
xor
dec
ljmp
adc
insb
loope
xchg
xchg
sub
xor
subb
push
xchg
jge
in
cmpsl
cld
jecxz
lcall
inc
xor
hlt
inc
cmp
repnz
jbe
fdivl
lret
adc
or
je
inc
js
ficomps
jnp
in
jge
mov
xorb
out
filds
adc
sahf
test
mov
mov
xchg
stc
jg
mov
xchg
cmp
cli
nop
inc
add
mov
in
test
addr16
notb
and
push
ljmp
insl
xchg
lret
das
and
add
bound
pop
pop
dec
jno
fisubs
jbe
pop
js
pop
and
cs
inc
outsl
xchg
loop
int
pushf
add
and
cmp
ds
fcmovne
mov
cltd
nop
push
andl
mov
dec
inc
aam
xor
lods
and
inc
rcrl
and
jbe
sbb
popf
sub
jae
cmp
mov
pop
add
negb
adc
cmp
aaa
rclb
push
outsl
gs
imul
loopne
add
adc
xchg
mov
imul
sub
inc
jns
iret
xchg
add
loope
stc
icebp
pop
mov
or
pushl
movsl
sub
push
insl
out
test
test
notb
or
je
and
push
xor
pop
push
and
movsl
dec
mulb
cmp
jno
fisttpl
pop
push
xor
iret
xchg
sti
mov
call
bound
mov
aam
aas
test
ss
sub
pop
fmuls
push
std
test
mov
rcl
scas
call
cmc
mov
xchg
mov
xchg
push
dec
push
gs
sub
pusha
scas
pop
stos
mov
les
pop
lods
jl
pop
stos
aad
add
add
lock
push
mov
xor
in
add
cld
push
mov
aad
aas
into
lock
adc
xchg
insb
xor
out
mov
mov
filds
jne
in
cmp
xor
jmp
stos
adc
inc
cli
cmp
jecxz
into
insl
jecxz
lods
cmc
shll
sarl
sub
not
push
iret
and
push
shrb
cmp
jno
or
dec
std
add
mov
mov
xor
lods
icebp
lahf
push
test
mov
repz
leave
inc
sbb
stos
inc
adc
add
and
leave
loope
dec
pop
imul
mov
sub
and
fs
or
jno
mov
outsl
push
repnz
cmc
push
fstps
scas
xchg
or
inc
movsl
mov
fbld
and
cmpsl
mov
xchg
inc
test
inc
or
scas
dec
xor
into
cmp
test
fsubp
xchg
iret
sbb
dec
cmp
xor
fwait
stos
fs
enter
xchg
inc
cmp
mov
mov
jnp
out
das
call
jae
ret
aas
cltd
mov
in
mov
cmpsb
loope
sbb
adc
jno
cld
add
ja
and
cmp
repz
jecxz
scas
jge
aad
cmp
movl
sti
jl
dec
sbbb
add
xchg
jo
repnz
pop
adcl
movsl
pop
lea
daa
mov
arpl
lock
fucomip
int
xor
popa
pcmpgtw
and
outsl
cmp
add
adc
cmpsl
daa
mov
rol
jno
outsb
stos
cld
xchg
fidivrl
addr16
mov
nop
lret
inc
in
rcrb
inc
pop
xchg
out
push
sahf
leave
aas
rorb
outsl
xchg
lcall
push
daa
xchg
push
inc
jnp,pt
xor
lahf
mov
xchg
push
loope
fisubs
movsb
cltd
pop
or
inc
lret
test
xchg
repz
dec
mov
fwait
push
xchg
imul
sub
xchg
mov
xchg
es
mov
pop
fbld
add
insb
ret
enter
mov
sub
rorl
or
adcb
scas
pop
adc
std
sub
sub
fcoms
mov
movsb
popf
loop
sub
pop
mull
idivl
test
adc
enter
sarl
sar
or
add
cli
xor
aam
pop
mov
fldt
push
clc
jge
mov
xchg
push
insb
orl
jo
bound
push
rorl
into
push
xchg
mov
mov
int3
in
jl
pop
addl
outsl
jae
dec
adc
orb
cmp
addb
mov
sbb
adc
lcall
in
pushf
and
sbb
lcall
test
aam
sub
lret
xlat
mov
ret
xor
lods
pop
pop
stc
shrl
rcr
pop
clc
stos
sub
or
pop
pop
imul
lods
data16
mov
fs
shll
pop
and
pushf
cmpsb
jae
in
dec
push
int3
push
cltd
xor
and
ret
shl
sbb
mov
out
inc
lock
push
mov
push
cmpsl
lock
cmpsb
lcall
dec
jmp
pop
dec
loopne
jmp
enter
sahf
inc
mov
xchg
mov
push
subb
xchg
add
dec
inc
cmp
or
in
push
aad
mov
mov
mov
repz
sahf
sub
or
pushf
xchg
dec
jo
aam
cmp
mov
jno
or
xlat
fists
movsb
jne
and
add
stc
sub
cwtl
scas
das
in
and
cmpsl
test
repz
cmpsl
cs
and
fsubrs
fs
jp
inc
xchg
out
mov
lds
lea
xor
loope
jle
ret
mov
pop
js
xlat
xchg
cmp
mov
notl
shrb
out
mov
scas
or
adc
and
pop
inc
cmc
mov
xchg
pop
test
and
pop
sub
lret
xor
jne
push
sub
pop
push
sub
and
jo
cmp
xchg
dec
fcompl
repz
jecxz
fdivl
imul
sbb
cs
insb
loope
xor
push
xchg
lods
jmp
mov
pushl
in
popf
dec
or
lods
imul
mov
cld
mov
push
cmp
and
lea
cmp
lret
andb
popa
ss
xor
or
imul
into
and
inc
in
das
je
mov
aaa
sahf
sahf
movsl
pop
mov
mov
mov
imul
int3
and
jnp
es
cli
jo
mov
adc
and
lret
mov
int3
mov
in
mov
lcall
dec
imul
lcall
adc
cmp
and
dec
mov
or
clc
into
scas
js
or
aad
xor
js
jo
lods
cmc
and
mov
mov
mov
jae
mov
adc
and
js
and
inc
fs
ret
pop
addr16
mov
xchg
ret
cmp
adc
gs
cmp
or
sub
rolb
push
mov
mov
adc
sarl
imul
js
fidivl
cmpsl
inc
inc
jne
mov
js
cmc
repz
lret
add
jecxz
pop
aad
mov
jo
sahf
shl
pop
pop
arpl
push
pusha
inc
ljmp
pop
xchg
or
and
cmp
xchg
lods
lock
mov
jnp
mov
sti
push
loop
sbb
mull
add
add
call
and
jae
scas
pop
mov
jmp
sub
bound
movsb
das
push
sbb
pause
xchg
cmp
add
sti
lret
std
ret
repz
lcall
push
fisttps
aas
jbe
or
js
sti
sbb
rep
mov
loop
add
xor
loop
mov
ja
out
mov
ret
mov
pop
scas
mov
xor
out
mov
js
lret
pop
in
fstpl
leave
ds
mov
mov
jecxz
out
jns
xchg
dec
jmp
test
pushf
sbb
inc
sub
sbb
mov
enter
sti
in
cmp
dec
imul
inc
lods
mov
test
pop
sub
push
loope
mov
flds
ss
xor
cmpsl
mov
sub
or
mov
shr
dec
decb
int3
int
out
insb
daa
xchg
pop
cli
call
sub
sahf
aam
dec
jb
mov
xchg
push
inc
pop
xchg
dec
cs
test
sub
fisttpll
rorb
icebp
cmp
stc
dec
adc
loopne
add
xchg
dec
aam
mov
adc
cmp
push
shll
leave
ret
aas
pop
outsl
xchg
int
cmp
mov
jge
add
xchg
mov
daa
cmp
test
daa
cli
cmp
or
addr16
add
add
push
push
and
or
xchg
loop
inc
ja
jle
test
xchg
sti
sti
roll
jne
das
push
inc
dec
fimuls
in
das
push
rcrl
add
adcl
mov
bound
mov
outsb
mov
pop
fs
fs
jmp
lret
push
jnp
js
mov
sub
daa
popa
jle
test
data16
stc
push
push
push
jbe
adc
adc
push
jecxz
mov
movsl
enter
stos
mov
fsubs
pushfw
jmp
add
scas
cmp
push
adc
mov
sbb
mov
stos
shlb
dec
lods
inc
jbe
pop
or
and
arpl
jns
add
add
sbb
popf
push
lret
flds
jb
insl
xor
popf
mov
mov
xchg
loop
push
ret
pop
pushf
add
pusha
push
xor
add
jl
dec
inc
iret
xchg
cwtl
push
in
clc
pop
mov
push
push
pop
fistl
ret
cmpsl
mov
xchg
mov
daa
adc
xor
pop
adcl
mov
or
in
push
aaa
xchg
bound
sub
popa
arpl
adc
pop
and
push
xchg
jno
test
push
jno
inc
cs
cmp
test
sbb
dec
inc
adcl
mov
or
or
jae
daa
jo
inc
sub
or
fcomps
xor
sbb
lods
adc
imul
in
rcll
idivb
insb
dec
stc
or
add
int3
sahf
cmp
pop
cmpsb
inc
rclb
fnstenv
mov
pop
pop
or
jno
xchg
les
add
pop
repnz
mov
jg
mov
pop
adc
jb
mov
ret
outsb
fpatan
mov
push
mov
inc
stos
mov
sbb
int
mov
pop
sbb
cwtl
jbe
inc
mov
pusha
adc
cmpsb
stos
int3
adc
inc
inc
xlat
int3
mov
xor
and
arpl
popa
push
mov
out
push
push
addr16
xchg
repz
lcall
neg
data16
rcrb
inc
sub
lea
test
mov
xor
pop
adc
xchg
inc
cli
out
js
dec
push
or
jp
sbbb
lcall
pop
js
sbbb
sub
mov
clc
pop
or
adc
stc
repnz
jmp
pusha
jp
clc
pop
pusha
xchg
pop
bound
cmpsb
jo
pop
mov
or
lret
xor
cmp
cwtl
pop
push
rcrb
cli
cmp
pop
aad
sub
xor
lret
imul
ja
aam
xchg
mov
lret
dec
pavgb
fsub
cmp
xchg
push
mov
xor
jnp
addr16
adc
xor
jae
and
gs
les
adc
aaa
push
mov
aaa
xor
arpl
mov
dec
lds
arpl
cmpl
mov
cli
inc
mov
cld
fbld
add
xchg
xchg
dec
jbe
lret
inc
iret
shr
das
dec
cmc
cmp
mov
xlat
int
or
mov
add
pop
fcoml
or
outsb
pop
inc
jecxz,pn
mov
sub
sti
cmp
sarl
das
xchg
jbe
or
jbe
inc
push
inc
filds
xor
inc
pop
push
mov
mov
jecxz
ja
out
xlat
adc
sbb
fldcw
mov
xchg
subl
push
push
cmp
xor
mov
or
ljmp
cmpsb
mov
jns
in
add
in
push
std
cmpsb
jmp
xchg
roll
mov
insb
bound
mov
out
pop
andb
aaa
je
stos
mov
bound
daa
inc
call
rcll
jbe
dec
push
and
ror
dec
xor
push
sbbb
mov
test
push
add
test
pop
js
pop
cmc
sbb
sub
mov
mov
imul
lcall
sti
fiaddl
lods
mov
fdivrl
jne
inc
jge
rep
cmpsl
or
mov
scas
jg
push
int3
adc
sbb
cmpsl
jl
or
imul
jecxz
rcrb
and
bswap
or
cmp
xor
inc
movb
cmpsl
test
test
scas
fstpl
sahf
popf
sahf
and
roll
jbe
fadds
mov
movsb
loop,pn
cmp
push
inc
push
or
pop
jae
jg
push
or
jo
jmp
sbb
bound
pop
lock
aaa
rcr
in
sbb
rorl
and
arpl
enter
cmp
jecxz
mov
inc
pusha
add
rorl
test
xchg
int3
sub
mov
adc
fwait
sbb
leave
inc
cmpsb
and
add
mov
sti
stos
es
sbb
xor
push
cltd
repz
inc
cmp
ds
xchg
sbb
into
aaa
and
aam
in
stos
jns
in
push
jno
leave
pop
mov
push
mov
inc
pop
arpl
jg
inc
mov
adc
mov
dec
add
hlt
es
jae
push
int
mov
sbb
add
aaa
repz
xchg
or
xchg
sbb
repnz
dec
mov
in
dec
cmc
cli
dec
add
inc
cld
adc
in
and
dec
xchg
push
or
repnz
imul
in
xchg
xor
pop
dec
mov
mulb
fs
jne
idiv
push
xor
bound
mov
push
push
jge
adc
push
xchg
rcr
aaa
mov
lock
out
xchg
push
out
and
negb
fadds
mov
sub
into
ljmp
inc
pop
cmp
mov
and
icebp
cvtdq2ps
sbb
adc
adc
stc
xchg
call
pop
nop
out
mov
aas
xchg
inc
out
push
iret
imul
push
jne
jecxz
lea
push
test
rclb
aaa
cli
xor
lret
pop
in
les
xchg
dec
xchg
lahf
clc
xchg
fs
jne
lds
sub
mov
add
lcall
movsb
icebp
xor
dec
insl
and
imul
fnstenv
stc
or
call
insb
sbb
fistpll
fcoml
outsb
popf
mov
add
dec
arpl
sbb
mov
or
inc
mov
mov
push
nop
clc
adc
push
inc
bound
fimull
xchg
push
jb
loopne
inc
int3
pop
call
mov
mov
adc
dec
pop
dec
fwait
adc
pop
jae
mov
aam
or
cltd
adc
pop
fimuls
xchg
daa
cmc
in
inc
jge
icebp
push
pop
cmpb
or
enter
xor
cmp
je
jp,pn
rclb
pop
rcrb
rcrb
mov
aas
cmc
or
xor
xchg
adc
push
sbb
xchg
inc
cltd
cli
jg
xrelease
xor
popf
push
jmp
dec
sub
mov
xchg
mov
jb
test
add
or
sbb
js
xchg
dec
mov
and
or
out
cmp
ret
jmp
dec
sub
xlat
mov
mov
adc
inc
push
sub
push
lock
fisubs
jo
add
cmc
mov
or
pop
ficomps
or
shrb
cwtl
shll
jne
adc
xchg
jne
inc
cmp
mov
fadds
mov
cmp
inc
loope
jl
jns
mov
xlat
imul
lahf
push
cld
call
shrl
pop
lahf
int3
sub
push
daa
xchg
inc
dec
pusha
xchg
es
sbb
adc
mov
sub
mov
pop
mov
lcall
inc
stos
pop
mov
or
es
aas
enter
cmp
cli
rol
jle
jl
mov
xchg
pop
xor
cmpsb
aas
pusha
mov
mov
hlt
insb
fwait
inc
inc
and
fsubl
sbb
xchg
movsl
fucomp
in
outsb
pop
or
xchg
mov
cltd
mov
test
and
jnp
icebp
call
rcrb
sub
lods
add
add
std
push
inc
push
mov
dec
fwait
loope
xor
scas
fbld
jae
sbb
call
fs
dec
sbb
mov
inc
aam
jp
sahf
in
cmp
mov
in
arpl
or
cmp
or
out
outsl
sub
cwtl
movsb
loope
or
mov
adc
jo
jp
cltd
ljmp
mov
leave
or
pop
mov
sahf
jbe
pop
push
cmpsb
movsl
mov
mov
add
mov
faddp
fnstcw
es
sub
push
das
xor
cmpb
dec
addl
fnstenv
fcom
in
mov
sub
sbb
shll
call
lcall
call
xchg
sbb
dec
popw
mov
mov
dec
lds
adc
xor
cltd
jmp
pop
jp
adc
push
xchg
and
xchg
in
inc
or
mov
lods
xor
or
outsb
xchg
or
scas
mov
data16
es
call
sub
add
dec
pop
nop
sub
push
xor
jl
addb
adc
mov
in
shll
in
xchg
int3
lods
lods
arpl
cmp
mov
mov
je
add
fisttps
repnz
or
imull
dec
mov
js
jne
inc
stos
inc
stc
icebp
dec
fsubrs
ja
inc
jo
lds
pushf
xlat
addr16
cli
sbb
arpl
std
enter
out
add
in
jne
testb
mov
out
adc
add
xchg
ds
or
inc
sbbb
dec
out
rcrl
pop
scas
jle
mov
mov
lea
cmp
and
dec
scas
pop
mov
xor
enter
stos
cmpsb
insw
pop
jmp
jg
scas
sbb
popa
lock
push
push
sub
mov
mov
aad
inc
and
popa
mov
cltd
dec
sbb
fcoml
push
xorb
jmp
push
push
cmp
or
mov
adc
jbe
leave
push
push
dec
es
dec
jg
je
xchg
inc
repz
fsubrl
push
push
js
mov
cmp
push
pop
fidivs
fcoms
adc
pop
rorl
popfw
jne
add
pushl
jmp
fnstsw
jecxz
jl
mov
push
stos
insl
adc
aaa
or
push
inc
inc
in
in
mov
mov
add
les
mov
push
mov
add
rol
daa
sub
js
dec
popa
jp
sbb
lret
cmp
push
stos
lret
lods
imul
test
mov
adc
inc
cmp
or
mov
movsb
cs
adc
mov
mov
jno
gs
mov
mov
jecxz
loope
inc
sub
jnp,pt
popf
sbb
dec
mov
push
mov
cmc
testb
rol
xchg
xchg
dec
sarl
or
movsl
repz
pop
mov
loope
and
mull
adc
cltd
cmovbe
adc
shrb
mov
mov
ss
subl
nop
inc
xlat
push
ss
sbb
lock
sbb
imulb
inc
sub
sbb
xor
mov
xchg
inc
push
shrl
jle
ret
sbb
xchg
mov
bound
dec
xchg
in
pop
mov
pusha
add
test
jno
js
jge
and
or
jbe
xchg
jg
fs
jecxz
pop
fbstp
lods
sbb
mov
stos
aam
testb
mov
mov
aad
movsl
xchg
cmp
dec
xor
call
pop
or
jmp
ljmp
or
add
push
jle
shr
and
push
cmc
lea
scas
aad
jae
mov
inc
js
loop
test
cmp
jle
jae
sbb
popa
js
stc
add
stos
sbb
mov
or
rcrl
scas
pop
sub
mov
fnstsw
cwtl
inc
push
scas
aas
adc
aad
test
xchg
dec
mov
push
cmp
test
cmp
cmp
lea
mov
dec
rclb
mov
mov
fadds
push
stos
inc
mov
fwait
mov
sbb
push
call
and
jnp
xchg
and
and
pop
mov
idivl
xor
lock
aaa
clc
jb
inc
imul
lahf
jl
sbb
cmp
loop
push
ss
jmp
repz
jae
fstps
lods
mov
jno
fwait
aad
cmp
loope
jns
in
push
cmp
push
mov
jp
jae
adc
add
fists
fcomp
sbb
and
fcomps
call
insl
pop
mov
mov
imul
stc
inc
int
lods
mov
cmp
adcb
fwait
ds
inc
mov
xor
push
push
mov
cmp
mov
imul
jo
sti
cwtl
sbb
push
mov
lret
mov
mov
mov
lcall
mov
mov
cs
and
sub
dec
xlat
jmp
push
leave
int3
fs
push
xor
mov
sub
pusha
fstpt
scas
xchg
in
aad
dec
adc
sub
jbe
icebp
insb
jnp
lret
or
dec
stc
adc
and
in
fisttps
jl
cli
sbb
nop
stos
lcall
pusha
inc
in
je
push
lahf
cmp
insl
dec
sub
adc
jl
cmp
mov
loope
add
xor
mov
popa
rolb
add
mov
jb
notb
push
data16
xchg
test
mov
add
push
inc
mov
insb
sub
cmc
cmp
sarb
mov
jmp
mov
add
sbb
push
daa
xor
sub
adc
sub
jle
pop
cld
mov
rep
clc
stos
pop
fstpl
stos
arpl
fmull
jae
cmp
xor
popf
sub
xchg
mov
push
icebp
test
or
jbe
pop
inc
adc
xlat
inc
sub
cmpsb
lock
push
pop
out
mov
ficompl
cmp
pop
imulb
jo
and
xchg
movsl
fsubs
imul
lock
xchg
xlat
or
xchg
push
cmp
or
outsb
icebp
out
outsl
ret
aaa
inc
dec
inc
stos
mov
sbb
sub
pop
std
imul
add
in
jns
subl
add
repnz
and
in
fdivrs
mov
das
and
push
inc
xor
pop
stos
iret
mov
adc
xor
scas
test
xchg
lret
cli
pop
inc
sbb
mov
rol
or
xchg
subb
movsb
popf
jl
dec
icebp
leave
and
inc
push
mov
mov
scas
dec
add
imul
or
push
jne
mov
inc
cmpsb
scas
inc
enter
and
sub
cmp
jno
int
push
pop
test
out
xchg
nop
out
push
cmpsb
pop
nop
daa
out
sahf
or
pop
js
push
jbe
jbe
out
or
daa
cli
pop
xchg
add
mov
je
stos
xchg
inc
mov
jmp
sbb
adc
insl
or
mov
call
inc
or
and
out
mov
mov
out
or
lds
adc
iret
sbb
in
mov
aaa
or
icebp
inc
push
xor
pop
lret
nop
push
lret
movsb
les
ljmp
pop
xchg
sbb
cmpsl
inc
sub
loope
lret
bnd
mov
mov
fsts
mov
jl
push
dec
inc
and
add
nop
dec
adc
lods
jb
mov
repz
call
test
pop
sbb
stos
pop
std
mov
cmp
dec
cmp
shll
es
popf
popa
fwait
jnp
lcall
cmp
sahf
ljmp
dec
dec
shll
repnz
cmp
dec
fiadds
add
and
push
adc
mov
pop
test
dec
xor
rcr
insl
andb
inc
outsl
xchg
outsl
push
dec
push
xor
pop
mov
add
sub
ret
shll
sub
dec
xchg
mov
fisttpll
jnp
mov
push
hlt
and
jge
lods
imul
mov
loope
lret
movsb
lcall
or
paddb
xchg
cmp
xor
je
cmp
scas
and
push
loopne
pushaw
ja
mov
jbe
inc
xchg
xchg
jbe
push
outsl
xchg
arpl
pop
fs
outsl
xchg
xchg
les
pusha
xchg
sbb
xchg
or
aaa
mov
or
lods
adc
cmp
out
repz
fisubrs
cld
mov
mov
inc
mov
addr16
stos
xorl
mov
sbb
lock
xchg
fldenv
mov
sbb
sub
lretw
mov
shll
into
xor
iret
jmp
jmp
retw
sti
das
daa
cmp
add
cmpsl
push
sub
rcl
mov
jnp
frstor
pusha
mov
les
xor
jns
or
sub
inc
pop
mov
fstl
push
test
jne
mov
push
loop
xchg
xchg
repz
stc
sub
adc
movsl
iret
or
fadds
xor
sbb
divl
sbb
pop
jmp
fldcw
push
push
inc
sbb
jo
cmp
pusha
filds
sub
inc
jnp
out
add
sbb
push
das
jmp
arpl
mov
mov
push
xchg
mov
fisubrl
xor
push
loope
inc
or
mov
loope
loop
imulb
bound
sub
movsl
movl
je
dec
mov
sbb
clts
aam
outsl
insb
pop
lahf
cs
addr16
sub
insb
rcl
lret
ret
xor
jb
incb
sbb
and
lods
pop
dec
out
out
push
add
fldt
lods
ds
cmc
andb
outsl
push
popf
ror
subl
adc
jb
loopne
rcll
aas
shrl
popl
sub
pop
sbb
xchg
aaa
sub
mov
add
and
pop
clc
cld
lret
and
notb
int
lret
cmp
mov
out
or
or
xor
pop
shrl
cmp
stos
mov
and
cmp
pop
insb
sub
or
add
xor
or
xlat
mov
or
lcall
add
jbe
and
aas
mov
mov
sub
inc
dec
fwait
scas
lahf
popa
adc
popa
mov
mov
out
push
mov
sbb
jne
dec
add
push
sbb
pop
adc
inc
inc
das
mov
cmp
daa
in
jae
xor
stos
and
in
lods
xorb
pop
ja
inc
rclb
mov
and
push
mov
test
xchg
xor
pop
fnsetpm(287
lahf
xchg
pop
hlt
mov
fidivl
mov
add
jmp
mov
jo
call
pop
lea
mov
jle,pt
sbb
std
or
dec
out
and
das
cld
fdivl
mov
into
add
or
outsl
lcall
cmp
int3
and
dec
cmp
dec
xor
mov
cmp
sbb
insl
das
lds
push
inc
mov
stc
jge
and
mov
cs
jp
jp
js
xchg
mov
xchg
or
icebp
jmp
stos
sbb
stos
or
pop
adc
or
dec
push
in
pop
jns
mov
mov
in
mov
dec
xor
dec
pop
pusha
dec
jmp
fadds
popa
arpl
adc
mov
xchg
push
xor
pop
pop
orl
xor
out
fstpl
ss
or
or
xchg
mov
xchg
mov
popf
add
mov
xor
sub
sub
loopne
push
cld
je
fsubl
jecxz
pop
filds
mov
and
sbb
xor
aam
insb
int3
or
outsl
ljmp
push
cmp
test
mov
div
stos
int
sbb
xchg
xor
add
mov
mov
aad
movsl
les
lret
pop
jns
jmp
in
mov
ljmp
out
and
cltd
mov
inc
xor
or
hlt
stc
ficomps
outsl
scas
pop
nop
iret
mov
sti
popf
ds
mov
mov
sahf
stos
div
rcll
or
lahf
cmp
int3
sahf
js
push
sub
xchg
ljmp
ljmp
add
daa
lret
push
add
sub
push
sub
pusha
push
lret
mov
push
cmp
add
or
enter
lods
or
popa
or
lea
cmc
insb
and
push
xchg
in
sub
inc
mov
test
adc
cmpsl
arpl
lock
les
jo
dec
pusha
xchg
fdivl
sahf
xor
dec
mov
in
mov
cmp
dec
xchg
xchg
test
fnstenv
pop
mov
adc
sub
fmull
cmp
repnz
mov
out
xchg
mov
mov
push
pushf
std
add
add
mov
xchg
and
lcall
cmc
add
mov
lcall
xchg
jg
addb
mov
shrl
idivb
cmpl
test
fisttps
mov
mov
xor
cmc
pop
aad
stos
gs
gs
nop
cmpsb
sub
fistl
int3
or
mov
pop
sti
sbb
dec
rcrb
mov
cmp
dec
pop
outsb
pushf
roll
mov
in
adc
xchg
sbb
jg
sahf
push
add
and
addr16
js
insb
pop
iret
pop
and
pushf
loopne
shlb
push
jecxz
clc
inc
test
minps
insb
lock
ds
imul
leave
shrl
jb
mov
fnstcw
adc
insl
adc
xor
and
sbb
shrb
fldenv
ss
sbb
adc
cmp
pusha
push
inc
pop
cmp
adc
or
pushf
enter
cmp
cld
xor
cli
fistpl
pcmpgtw
sbb
mov
insb
icebp
notb
outsl
les
fstl
pop
dec
fcomp
dec
inc
xchg
dec
pushl
sahf
in
popl
add
xchg
fdivl
nop
clc
jbe
push
pop
mov
arpl
leave
dec
out
or
xlat
imul
push
repz
jb
outsl
insl
add
sti
sbb
dec
fisttpll
bnd
sub
jmp
mov
je
ret
dec
out
sbbl
push
outsl
sbb
mov
lods
sbb
sbbb
dec
and
cld
fstpt
mov
mov
sub
lods
jle
scas
mov
or
insb
or
dec
sub
popf
scas
add
sub
mov
mov
mov
iret
sbb
pop
jno
fwait
in
sahf
adcb
das
push
sarl
cmp
add
in
inc
loope
int
xchg
bound
leave
sarl
xlat
push
mov
ja
mov
jns
push
pop
jno
mov
xor
pop
aam
jp
push
js
ljmp
mov
sub
mov
daa
pop
sub
popa
or
or
lret
adc
insl
loope
jbe
pop
mov
cmp
rcr
out
mov
imul
arpl
gs
sti
shrb
repz
pop
sub
aam
xor
jecxz
mov
mov
add
xchg
enter
mov
sahf
sub
sti
and
xchg
movsb
clc
adc
xor
aam
sti
stc
fisubs
cmc
lahf
dec
stos
push
xchg
pop
push
mov
insb
scas
cmp
pop
push
inc
aam
mov
psubb
pop
mov
fsubl
out
push
scas
fsubrs
pop
into
jmp
sub
dec
imul
or
adc
enter
pop
pop
fs
test
adc
xlat
or
pop
dec
inc
sbb
push
out
add
fisttps
enter
sbb
decb
mov
lods
es
sub
mov
cmp
mov
mov
xor
fistpll
fdivrl
mov
cld
btrl
in
lods
or
lret
mov
ja
notl
mov
ja
mov
lds
daa
ret
inc
push
xor
loop
sbb
xchg
stos
insb
orl
xlat
gs
inc
inc
cmpsl
leave
add
stos
mov
aad
and
pop
push
sbb
pop
clc
fdivrl
clc
sbb
es
nop
mov
addb
sbb
xor
pop
imul
sub
sbb
nop
or
pop
xor
fwait
stos
mov
add
rdmsr
andl
aam
lcallw
jecxz
jbe
insb
ds
adc
scas
call
push
idiv
bound
mov
in
arpl
jno
call
hlt
or
enter
push
idivl
pop
and
mov
mov
lahf
or
jl
jae
push
in
and
mov
add
lods
lock
outsl
push
mov
dec
push
scas
inc
orb
hlt
mov
jl
in
push
mov
fdivrp
out
xor
pop
mov
int3
fmul
sub
inc
fsubr
sbb
push
out
cld
addr16
sahf
lock
cmp
stc
sbb
fwait
sub
xchg
pop
push
or
mov
fdivl
ficompl
sbb
sub
pop
lods
into
jle
mov
xchg
jl
sbb
mov
jae
stos
mov
clc
inc
xor
and
and
or
or
aas
js
stc
mov
shlb
cmp
ret
sbb
sbb
cli
push
lret
inc
test
int
pop
mov
scas
jb
test
stc
mov
adc
or
cmp
cmpsb
loope
insb
add
add
popa
mov
or
notl
or
icebp
mov
mov
and
mov
mov
iret
pusha
cli
dec
push
shrl
insb
inc
mov
mov
rclb
sar
sarb
flds
xchg
jno
insl
or
add
faddl
repnz
xchg
rorl
hlt
cwtl
notb
mov
jmp
xchg
insl
jl
jmp
add
test
push
mov
int3
insl
jo
shrb
add
ret
dec
xor
adc
adc
mov
loope
ss
add
imul
cmp
xor
pop
sub
aas
push
cs
xchg
mov
push
xor
iret
popf
cmp
push
cmp
call
mov
fs
cld
dec
mov
xor
cmp
sub
and
mov
dec
dec
mov
sub
or
push
adc
or
repz
add
xor
mov
and
mov
dec
dec
xchg
movsb
adc
xlat
das
aaa
cmc
ljmp
cmp
lret
or
mov
add
push
incb
test
sbb
jne
add
out
scas
add
inc
inc
stos
mov
fcmovb
bound
movl
js
popa
mov
cmc
inc
mov
and
add
cwtl
call
xor
sbb
cli
or
dec
outsb
ret
xchg
cmp
push
subb
dec
jnp
repz
dec
sti
movb
xor
inc
dec
popf
sub
popa
loop
mov
jp
sub
and
mov
sahf
mov
jb
pop
jb
push
mov
inc
pop
loop
mov
push
pop
add
sbb
es
pushl
jne
and
cltd
add
mov
call
and
mov
sub
jns
adc
rcrb
mov
idivb
in
in
scas
outsl
lahf
add
loopne
hlt
xchg
adc
add
or
scas
add
inc
fldl
in
or
jns
sub
push
js
imul
xchg
sarl
fmulp
adc
fs
mov
push
mov
shl
jns
pop
dec
dec
push
add
int3
inc
addr16
outsw
stc
push
add
clc
leave
inc
add
nop
xchg
fimuls
imul
push
pop
mov
clc
scas
mov
pop
sbb
pop
xor
sbb
adc
js
fpatan
in
push
sub
jbe
cwtl
out
or
clc
into
mov
sbb
xor
insb
iret
dec
inc
loop
jle
push
int
sbb
jl
mov
jl
clc
xor
mov
or
xchg
popa
pop
cmp
stos
inc
mov
mov
mov
nop
cld
dec
stc
movsb
out
clc
in
es
mov
out
jo
leave
inc
and
fwait
rcll
mov
scas
lods
pop
jecxz
push
adc
sub
hlt
bound
lock
mov
or
movlps
fsubl
adc
out
xor
xchg
js
adc
mov
xchg
ljmp
push
aad
movl
mov
mov
popf
out
cltd
fimuls
jmp
pop
lods
loope
call
imul
lcall
js
sbb
into
test
ficomps
mov
ljmp
xchg
sbb
xchg
outsb
movsb
push
int3
bound
lds
jno
repz
inc
imul
stos
mov
jge
sbb
xchg
leave
aas
dec
push
fwait
xor
aaa
xchg
dec
cmpsl
dec
js
repnz
pop
ret
das
dec
sub
mov
popf
lcall
out
decb
cld
das
jge
mov
in
fsubrs
xchg
mov
jmp
pop
scas
mull
gs
outsb
cmc
or
jno
fldenv
mov
repnz
jae
lcall
ret
jp
dec
data16
adc
xchg
sub
in
pop
ja
cld
in
repz
or
and
pop
aas
jbe
add
adcl
and
dec
adc
mov
and
or
cmp
sub
jmp
xor
inc
and
cmp
fcompl
inc
test
sahf
xchg
pop
and
mov
test
jno
mov
xchg
dec
mov
jns
mov
or
cmp
imull
sub
fdivrl
mov
mov
fcoml
lahf
inc
retw
sub
pop
xor
fbld
imul
insb
stos
lret
cmp
loopne
add
push
shr
ljmp
jb
dec
sub
jge
or
and
push
inc
popf
push
mov
sub
out
mov
cmp
cmp
push
out
fistl
jmp
add
mov
mov
imul
les
ja
add
js
addl
mov
and
cmp
fcomi
and
mov
adc
push
mov
leave
or
test
cmp
fsubrp
in
pop
repnz
jecxz
sub
sahf
test
pop
xchg
iret
jp
or
pushf
stos
stos
xor
fxch
xchg
sub
mov
add
sbb
iret
lock
test
popf
sub
mov
repnz
jp
xchg
lret
fcompl
test
sub
add
fstp
and
xchg
ret
lock
test
mov
xchg
jno
add
pusha
std
jmp
jnp
push
das
andl
test
ret
and
sub
stos
icebp
jecxz
sbbl
lahf
cmpsl
lods
pop
loopne
dec
or
in
icebp
aas
int3
and
pop
cmp
xchg
mov
pop
lock
sub
bound
inc
pop
and
cmc
sbb
icebp
lea
push
cli
sbb
iret
insb
lds
xchg
rcl
arpl
push
dec
fldl
and
movsl
cmpsb
jae
xchg
sub
adc
xchg
orl
and
xchg
repnz
imul
pop
push
inc
std
inc
ficoms
fisttpll
fdivr
cli
dec
add
loope
fstps
or
jae
repz
gs
les
outsb
ljmp
daa
adc
pop
mulb
add
and
inc
inc
cmp
cmp
jecxz
stos
xchg
lea
add
les
jne
jmp
push
sbb
frstor
fwait
xor
nop
sub
hlt
std
mov
movsl
or
js
inc
mov
imul
addr16
out
pushf
dec
mov
xor
sbb
andb
mov
push
mov
xchg
fmul
jl
mov
inc
add
in
xor
mov
mov
xchg
mov
mov
out
xor
inc
pop
lahf
aad
popa
xchg
nop
test
lods
mov
pop
out
mov
stos
pop
sahf
call
clc
in
nop
or
and
enter
sub
sub
lods
cmc
in
sub
cmp
pop
add
mov
ret
rorb
test
lcall
es
popa
add
inc
adc
pop
arpl
mov
mov
cmp
add
cmp
jl
adc
jb
xor
les
ljmp
pop
sub
sahf
jnp
loop
stos
sahf
jg
repnz
lcall
test
sbb
xchg
fildll
dec
inc
or
cs
mov
cmp
inc
test
les
push
dec
sub
ret
sub
int3
jecxz,pn
das
xor
xor
dec
push
es
das
dec
jmp
lahf
ficoml
mulb
fisubrs
cmp
outsl
test
scas
fnstenv
addl
pusha
push
pusha
out
xchg
sbb
dec
stos
inc
test
or
sbb
test
or
outsl
stos
cli
cld
mov
in
jns
sbb
sub
adc
sub
das
xchg
scas
push
mov
jle
mov
xchg
imul
jg
es
push
push
gs
lock
je
inc
cli
hlt
into
ds
or
jg
or
mov
int3
dec
adc
lret
xor
jle
loop
push
push
scas
notb
jg,pn
scas
cmc
jle
les
stos
repz
adc
sbb
les
mov
adc
inc
or
fcoms
pop
pusha
sbbb
jae
mov
lods
and
sub
aam
mov
add
and
aam
in
lret
add
loope
cmp
jecxz
cmp
loope
test
stos
daa
ss
insb
and
xorb
insb
pop
cmpsl
lea
sub
fldenv
adc
imul
push
test
sbb
push
xchg
repz
sub
cltd
prefetcht1
or
aam
jle
jecxz
sti
pop
xchg
nop
mov
jno
push
fxch
inc
xchg
call
stos
int
xlat
into
cmp
lods
pop
jle
inc
inc
or
popa
movsb
pop
cltd
out
movsb
mov
rcrl
inc
test
call
xor
ret
insl
xor
nop
or
adc
cmp
out
inc
cmp
cmpsb
jp
dec
jno
orb
mov
add
and
mov
xor
fstl
mov
mov
scas
enter
push
sub
xchg
push
push
cltd
pop
repnz
xchg
adc
dec
call
ja
fsubrl
mov
sub
insl
and
int
jne
jl
xor
stc
ss
out
aad
mov
sbb
push
js
data16
cmp
pop
outsl
or
xor
push
aad
push
loop
push
pop
adc
scas
mov
inc
adc
and
pop
aam
ret
cmp
popf
out
repnz
cs
dec
insl
mov
jo
sub
dec
es
mov
jl
sub
test
cli
inc
loop
repnz
aad
xchg
jmp
push
shrl
int3
or
loopne
sub
incb
jo
testb
ret
mov
stos
lea
inc
test
cmp
fidivs
xchg
sbb
fwait
fwait
pop
sbb
out
aam
scas
xchg
sbb
xchg
fistpl
inc
scas
and
in
cmp
dec
mov
rolb
js
test
add
aam
bound
sbb
jecxz
arpl
mov
int
xchg
mov
and
test
xor
mov
mov
out
sbb
sub
popa
push
xchg
jp
jl
in
lods
sbb
sub
fcoms
popf
mov
fs
cmp
outsb
mov
mov
sub
cmp
pop
mov
adc
pop
sbbb
push
mov
mov
rcrl
inc
das
mov
adc
test
in
stc
sbb
mov
int
sub
push
je
push
mov
sti
aas
pop
pop
sbb
sbb
push
pop
shl
xchg
daa
lds
aam
inc
fisubl
mov
push
inc
or
and
jge
pop
in
andl
push
pop
cmpsl
inc
sbb
mov
iret
dec
xlat
adc
pop
add
push
mov
pop
push
lahf
push
inc
xchg
or
call
nop
adc
ret
xor
in
lret
pop
lahf
mov
dec
insl
clc
pop
scas
add
out
pop
outsb
jge
outsb
cld
jmp
mov
pop
std
insb
imul
xchg
mov
pop
in
mov
mov
lods
jle
jp
cwtl
inc
cmp
jecxz
loope
mov
mov
jge
jge
shlb
arpl
dec
in
push
sbb
out
add
aad
fwait
pop
loope
in
jl
lea
push
sahf
adc
data16
mov
add
insb
in
and
pop
aam
loopne
movsl
stos
sub
jno
cmp
lods
mov
aad
jno
mov
pop
adc
arpl
cmpsb
mov
push
movsb
lahf
or
push
mov
or
aad
ljmp
jecxz
xor
sub
hlt
xor
hlt
fidivrs
nop
sbb
scas
push
int3
and
or
rolb
push
mov
inc
iret
and
js
push
mov
mov
stc
jo
leave
xor
mov
xor
mov
jno
mov
das
xor
mov
xor
pop
leave
xchg
xchg
mov
mov
mov
and
cmp
sub
stc
leave
lahf
inc
out
cmp
scas
xor
mov
mov
pushf
imul
es
jae
shl
and
xchg
enter
pop
incl
push
out
mov
leave
das
sahf
sub
shlb
cs
xor
xchg
and
or
idiv
xchg
add
xlat
xchg
inc
inc
cmp
lcall
movb
fimull
orb
lock
rcrb
std
push
pop
inc
fdivl
dec
dec
cs
ret
sbb
movsl
and
test
xchg
mov
jae
lret
popa
test
test
dec
adc
add
push
sbb
jae
mov
inc
loopne
mov
and
mov
jbe
dec
sti
pop
push
test
mov
jno
xchg
xor
dec
jb
stc
mov
inc
add
jg
negl
kaddw
mov
incl
std
es
pop
mov
mov
arpl
and
and
mov
xchg
movsb
push
push
dec
xlat
xchg
and
mov
mov
ds
add
cmc
mov
stos
dec
xor
ljmp
cmp
imul
lea
pop
lcall
fisubrl
push
fcmovnb
imul
mov
push
add
mov
mov
xchg
dec
daa
movsl
cli
enter
lods
fcom
sbb
in
out
or
push
in
xchg
loopne
mov
jo
cmpsl
push
mov
add
push
loopne
jmp
push
xlat
js
mov
nop
push
xlat
insb
pop
lahf
mov
lods
imul
adc
mov
outsl
push
repnz
in
cld
out
jle
pusha
out
pop
cwtl
mov
lock
addl
push
cmpsl
cmp
out
and
fbstp
aad
cmp
in
push
lods
jnp
fs
inc
add
int
jl
nop
inc
mov
aad
xchg
or
mov
ds
inc
dec
in
sub
out
mov
es
cmpb
cmc
adc
arpl
aas
outsb
push
pop
cmp
mov
cmp
fldl
and
mov
xorb
add
fisttpll
fs
or
cmp
lret
push
push
inc
xchg
jae
lods
dec
nop
pop
mov
push
test
scas
sbb
inc
mov
cmp
insl
cltd
in
or
sbb
fildll
cs
cmpsb
fs
jp
fbstp
call
push
and
icebp
mov
stos
xlat
xchg
cmp
or
scas
mov
xor
push
xchg
or
into
mov
test
aam
outsb
leave
hlt
cs
jne
xor
loopne
sub
cmp
icebp
pushf
addl
xlat
dec
dec
adc
xchg
cli
mov
sub
sub
ljmp
sub
mov
adc
and
jmp
gs
xchg
fwait
ja
add
je
inc
mov
adc
xor
or
pop
jecxz
test
xor
sub
test
jmp
dec
jnp
mov
mov
out
pop
xor
and
dec
aad
xor
adc
pop
adc
repnz
in
and
xor
data16
adc
jb
mov
jb
and
outsb
data16
mov
scas
fldenv
test
ret
mov
dec
cmp
and
xchg
into
jbe
pop
out
add
loopne
jmp
rol
dec
arpl
fwait
scas
jle
adc
fnstenv
mov
sbb
mov
dec
test
adc
es
fmull
pop
mov
xchg
in
push
xlat
pop
aam
jl
repz
ss
std
xchg
fcmovnu
loop
mov
in
sub
shll
dec
adc
das
dec
test
out
mov
repz
adc
aas
sbb
imul
push
xor
and
loop
inc
out
imul
xrelease
test
add
insl
push
or
daa
dec
outsl
imul
jecxz
adc
lea
popa
lods
dec
fsubrl
add
js
idivb
xchg
mov
pop
adc
imul
dec
test
mov
fwait
lock
and
cltd
and
jno
data16
es
movsb
inc
fucomip
and
repz
inc
adc
sub
dec
insl
mov
add
stc
rclb
or
jbe
mov
insl
imul
in
mov
mov
xchg
decb
leave
mov
popl
xor
jbe
ret
add
xchg
and
leave
es
sub
mov
lcall
cld
in
xor
les
in
push
cmpsl
mov
sub
and
idivl
jo
fadds
xchg
sbb
sub
and
cmp
lock
in
enter
cwtl
jbe
cld
push
jmp
lret
scas
xchg
dec
movsl
outsl
mov
pushf
pop
sub
push
inc
lcall
stos
add
das
ljmp
xor
jns
stos
nop
inc
daa
xor
inc
inc
test
cs
pusha
cmp
cwtl
shrb
out
xchg
out
jne
sahf
out
jp
enter
imulb
nop
push
ss
pusha
adc
dec
lret
ficoml
and
push
or
mov
repnz
xchg
push
or
dec
out
std
adc
jno
sbb
repnz
mov
int
xchg
faddp
jecxz
shlb
arpl
cmpl
out
ljmp
jp
jmp
test
push
movsl
aas
cmp
pop
sbb
xchg
inc
sbb
adc
mov
and
jl
sub
push
data16
xor
stos
xchg
popf
iret
sbb
push
mov
aas
test
jmp
xor
mov
jae
jmp
mov
in
inc
andb
sbb
mov
xchg
in
sbb
dec
stos
fs
out
negb
pop
daa
lea
lock
xor
in
aas
ret
mov
jl
orl
xor
sahf
push
dec
call
push
push
pop
rorl
movsl
repnz
loopne
and
popa
adc
in
mov
test
mov
dec
push
and
inc
ja
dec
aas
cs
imul
adc
mov
push
mov
inc
lea
mov
lock
pop
xor
clc
pushf
lock
xor
lret
inc
mov
lahf
arpl
fsubs
jecxz
ljmp
mov
pop
jae
or
mov
jmp
je
jp
ret
sbb
push
inc
push
and
mov
sub
dec
gs
pop
insl
lods
loope
iret
insl
or
pushf
inc
cmp
xor
fldl
in
fimuls
jp
mov
outsb
notl
adc
push
dec
mov
pop
lret
dec
mov
lods
in
mov
push
pop
popf
andb
movl
or
pop
lcall
cmp
cmp
adc
adc
jmp
xlat
fistl
sbb
pop
shl
mov
add
int3
shll
xchg
lcall
fsubrl
dec
ficompl
das
call
xor
sbbb
sub
and
insb
push
lcall
inc
sahf
push
cwtl
push
inc
mov
push
pop
mov
and
std
sbb
pop
mov
js
adc
aad
orl
mov
nop
movsb
push
cli
sub
dec
push
ficoml
movsl
dec
in
mov
pusha
call
dec
lods
or
xor
jb
push
test
dec
cmp
pop
addl
mov
in
popf
rcrb
imul
xlat
setno
movsl
mov
add
movsb
faddl
mov
pop
sub
xchg
jb
outsl
jno
cmp
push
int
repz
iret
dec
jmp
pop
sub
jne
and
xchg
das
ret
pusha
xchg
int
jnp
jae
setp
or
loopne
jecxz
scas
movb
jge
cltd
and
xor
xor
pop
and
sbb
dec
xchg
scas
sbb
movsl
addr16
push
flds
pop
iret
inc
cltd
cli
pushl
jmp
test
enter
scas
and
enter
mov
jmp
dec
jae
jnp
inc
mov
lret
std
je
sbb
es
cmpsl
mov
xor
pop
xchg
pop
push
mov
jg
imul
push
pop
cmc
pop
sbb
mov
scas
test
jae
dec
inc
shll
and
or
in
add
mov
icebp
cmpsb
or
mov
jp
inc
pop
cmp
das
ds
jb
pop
jno
xor
test
daa
movsl
inc
test
xchg
shrl
jge
jns,pt
jle
mov
jnp
fldl
ret
inc
adc
mov
ja
out
push
movb
push
xchg
pop
dec
xor
ror
push
fstps
push
aas
lcall
mov
sub
pop
js
incb
out
into
sub
add
lds
test
push
jno
dec
add
lods
mov
hlt
sbb
out
cmp
data16
mov
fiaddl
cs
add
aaa
mov
fists
not
sbb
cmp
jg
inc
sahf
rol
add
mov
enter
add
sub
push
cmc
lods
sub
xor
and
cmc
stc
xor
arpl
loope
xchg
je
cmpb
or
xchg
mov
pop
stos
mov
sbb
cli
shrb
outsb
or
js
inc
inc
popf
jne
mov
andb
sbb
mov
out
fs
push
push
push
pop
push
sar
or
int
or
add
fs
push
mov
pushf
das
notl
vmread
jle
shr
aas
mov
movsl
pop
jno
divb
xchg
lods
sbb
sbb
mov
pop
in
adcl
ja
push
outsl
mov
lret
std
ret
inc
sti
or
inc
pop
jb
jo
pop
cmp
xchg
cmp
lret
out
xchg
test
imul
lods
add
stc
inc
adcb
mov
adc
sub
dec
sahf
cmp
pop
mov
insb
sub
mov
push
pop
aam
ljmp
unpcklps
inc
pop
or
dec
sahf
out
jp
ret
shlb
mov
sti
cmp
pop
nop
mov
mov
je
dec
inc
and
mov
jne
lds
dec
and
xchg
push
cmp
rcl
popa
pusha
xor
test
xor
cmc
adc
dec
cmc
xchg
jae
and
inc
or
hlt
mov
add
je
jecxz
mov
inc
int3
mov
icebp
lret
mov
mov
inc
add
cmp
cli
cmpb
int3
push
sub
sbb
add
dec
rcr
xorb
dec
std
cmp
das
push
push
jo
faddl
cmc
rcrb
xor
cmp
stc
inc
mov
cmp
int
imul
push
mov
inc
inc
ljmp
mov
and
sbb
flds
mov
mov
lock
inc
xor
dec
add
mov
and
mov
pop
int3
and
and
jmp
sbb
jl
hlt
fidivrs
ds
pop
data16
clc
push
stos
lods
push
mov
or
fildll
ret
and
aas
loopne
outsl
pop
adc
pop
aad
bound
imul
and
leave
cmc
adc
add
push
lods
mov
imull
insl
pop
aad
movsb
mov
out
std
dec
shlb
mov
dec
fildll
lods
push
cmp
rcl
mov
pop
sbb
imul
or
cwtl
mov
test
push
push
int3
pop
int3
pop
icebp
fadds
hlt
mov
lods
inc
stc
ret
pop
jne
js
imul
xchg
push
hlt
push
lea
hlt
cmp
jge
call
leave
add
idivl
jae
lcall
test
aad
call
push
cmp
or
adc
mov
iret
mov
pop
mov
xchg
popa
daa
jle
int
xchg
jle
stos
mov
stos
aaa
mov
push
inc
loop
dec
pop
andl
push
dec
and
ja
js
sbb
shl
test
and
dec
addr16
add
dec
mov
pushf
cmp
sbb
loop
mov
lods
sbb
cli
push
xor
into
adc
hlt
xchg
adc
test
dec
cmp
inc
int3
mov
jno
enter
adc
add
mov
out
cmp
mov
push
inc
out
aad
or
iret
ss
int3
lahf
shlb
or
jns
dec
int
in
sarb
into
sub
loopne
mov
shrb
jnp
jg
out
js
add
or
shrb
mov
xchg
jno
sbb
jge
dec
aas
mov
xor
xor
mov
mov
push
pop
arpl
rorl
cwtl
neg
pushf
or
fistl
test
imul
xchg
add
sbb
cmpl
pop
imul
adc
pop
dec
jg
fdivrl
fcomps
fistps
mov
pop
mov
stc
push
mov
rorl
out
imul
out
mov
jae
es
fldenv
push
ror
pop
outsb
sbb
loope
or
fsubrs
sbb
loop
mov
fcomp
je
pusha
xor
jle
out
push
in
jge
pop
dec
cmpsb
mov
movsb
pop
xor
rcl
pushfw
pop
ja
mov
adc
lods
jge
sub
push
mov
and
pop
and
arpl
pop
test
cmp
in
stos
mov
mov
loopne
jno
leave
push
in
test
aam
out
adc
jl
or
sbb
adc
adc
pop
enter
icebp
das
addb
outsl
sbb
push
shl
xchg
cmp
jle
outsl
das
out
shr
push
je,pt
pop
subl
mov
and
int
nop
sbb
push
sahf
inc
dec
js
cmp
and
in
sub
mov
sub
aad
nop
xor
mov
int
jge
sbb
sbb
jbe
loope
insb
add
je
out
cmp
test
or
xor
into
xor
mov
sbb
dec
cmp
or
ss
xor
test
xchg
jo
orl
test
sbb
insl
scas
insl
xor
ds
adc
cmpsl
xor
xor
ds
push
push
mov
rcll
sbb
sub
or
or
cmp
sbb
and
sbb
es
pop
pop
lods
or
mov
mov
push
xorb
ret
movsb
and
and
rcrl
sub
push
out
pop
and
xchg
pop
or
jns
jmp
dec
and
pop
loope
ja
into
xchg
mov
pop
push
xor
inc
movsb
int3
or
repnz
jg
dec
mov
pusha
mov
lods
jbe
mov
jmp
mov
xor
push
gs
shlb
subl
sbb
int
test
test
nop
xchg
push
ret
aad
loope
or
cmpsb
add
iret
push
in
pusha
cmp
pop
jb
cmp
cltd
cmp
mov
xchg
jb
insl
cmpl
movsl
adc
aaa
clc
dec
adc
shrl
inc
fisttpll
dec
jae
or
jl
mov
pop
mov
pop
out
jg
daa
mov
mov
push
mov
int
nop
dec
mov
sbb
sbbl
lea
jae
xchg
popa
dec
dec
pop
insl
xchg
clc
iret
cs
aam
rorb
push
shrb
and
sahf
pop
jae
pop
fwait
ret
mov
mov
fucomi
lahf
or
sub
repnz
andl
decl
mov
adc
popa
pop
xor
sub
fnstcw
arpl
and
mov
into
xor
fs
push
and
or
cmp
jne
push
sub
and
cmpsl
loop
fiaddl
adc
aam
mov
sbb
cmpsb
stos
mov
jo
or
loop
push
lods
or
adc
push
int
xor
inc
and
xchg
sbb
out
roll
mov
mov
repnz
mov
adcb
mov
mov
xchg
sbb
jl
jg
xchg
mov
pop
imul
int3
fs
cwtl
je
lcall
lahf
mov
cmp
test
stos
jns
das
or
inc
aad
inc
int
popf
jb
leave
xchg
push
cltd
xchg
arpl
iret
mov
pop
cmpsl
push
dec
mov
inc
push
fucomip
mov
push
inc
jno
and
inc
or
out
loopne
insb
xchg
pushf
jo
hlt
and
ljmp
or
mov
adc
ret
pop
arpl
popf
test
ret
cmp
pop
xchg
lea
push
cwtl
shll
aam
mov
dec
xchg
add
pop
xor
sbb
pop
inc
jmp
shrb
fisubs
aam
or
outsl
add
pop
cmpl
mov
cmpb
iret
mov
mov
and
in
gs
mov
aaa
stc
outsb
add
cmp
in
pop
cli
shl
xchg
pushf
mov
jo
jg
inc
rcrl
pop
dec
aad
cmp
scas
sbb
sub
hlt
imul
or
xchg
pop
cltd
movsb
jo
jge
adc
sub
int
fcoml
in
stc
cmp
in
fwait
mov
and
xchg
sbb
test
data16
push
popa
dec
jns
inc
xor
aaa
scas
je
jge
mov
clc
cmc
imul
into
aad
addb
dec
jo
rorl
mov
jg
sbb
daa
jl
sbbb
ja
dec
and
ja
adc
jne
lock
stos
test
mov
sbbl
fcomp
mov
outsb
jg
adc
iret
jl
or
and
sub
sahf
or
sub
stc
and
lret
cmp
lods
push
fld
pop
fwait
je
sub
add
adc
loopne
mov
cli
add
xor
inc
mov
and
loopne
mov
dec
jb
jns
xchg
cmc
xchg
adcl
ret
push
repz
nop
sub
pop
mov
or
adc
jbe
add
std
and
xchg
push
xlat
rolb
jbe
push
shrb
inc
mov
push
inc
movsl
sub
and
int
mov
cmp
clc
mov
adcl
arpl
jmp
cmp
push
inc
gs
inc
dec
out
das
sahf
clc
lds
imul
xlat
loop
mov
mov
xor
jp
sub
add
fsubl
out
je
test
rcrl
pop
mov
lock
mov
ror
xchg
leave
fildl
mov
adc
pushf
int
lret
cmpb
loopne
loop
xor
pop
js
xlat
clc
aas
push
add
shlb
es
sub
fldcw
xchg
in
mov
out
pop
dec
xlat
push
and
movb
xchg
push
sbb
dec
push
mov
insb
dec
or
ficoms
clc
cmp
lret
jge
pop
cs
sbb
dec
push
stos
sub
push
xor
mov
movsb
pop
mov
into
and
cwtl
jbe
lods
sub
dec
popa
cmp
dec
imul
pop
icebp
stos
mov
fcomi
mov
push
aam
aaa
push
int
in
jb
scas
or
mov
jno
das
mov
movsb
pop
movsl
xor
aas
shl
or
cli
movsl
clc
mov
sahf
ss
jne
sub
aaa
js
lock
sub
xor
jns
lret
test
addr16
scas
mov
in
and
dec
mov
inc
mov
adcl
mov
mov
dec
test
mov
mov
pushf
stc
cmpb
add
mov
mov
aas
rolb
sub
adc
jle
or
in
lea
gs
xchg
arpl
mov
xor
sub
fwait
jo
sbb
out
cmp
fwait
movsl
push
sbb
stc
out
xor
or
out
inc
subb
int
add
js
clc
adc
iret
push
push
mov
mov
pop
cmp
rolb
pop
jns
sub
sti
stos
pop
cli
icebp
in
or
enter
and
dec
jp
or
and
pmuludq
lret
push
insl
sub
jl
pusha
lahf
mov
loope
loopne
fsubr
xor
and
xchg
insl
xor
fmul
push
cs
xchg
adc
lcall
test
testl
xor
dec
mov
bound
push
dec
cld
pop
pusha
cli
mov
mov
and
pop
imulb
jecxz
pop
xchg
pop
fcoms
inc
outsb
bound
dec
sti
fimull
out
sub
push
cmp
lods
push
mov
aam
push
pop
or
pushf
pop
lods
cmpsb
cmp
test
iret
jmp
jmp
push
shrb
shl
xorb
jbe
jp
and
adc
cmp
test
icebp
pop
inc
cmp
mov
leave
jb
and
lgs
ljmp
xor
int
stos
pop
inc
arpl
outsb
mov
pushf
lahf
rclb
jne
dec
jb
cld
mov
push
imul
stos
std
call
mov
sub
imulb
adc
inc
fimull
or
jp
jbe
jge
sbb
jb
sub
ficoml
lret
out
push
rorb
xor
cld
aad
lods
push
sub
sbb
xchg
cli
inc
sub
mov
stos
cmp
push
xor
je
xor
pop
popf
das
je
lret
fucomip
sub
cmpsl
or
stos
mov
push
popf
dec
add
inc
nop
mov
and
jp
xor
jo
pop
mov
lahf
outsl
cmpsb
jecxz
cmp
imul
cmp
xchg
xchg
jo
shl
out
adc
mov
and
sti
insb
or
shll
push
sub
ljmp
add
xlat
ret
fsts
adcl
lahf
mov
ret
lods
jnp
loop
jecxz
mov
or
sti
stos
popf
pushf
push
ficompl
push
adc
mov
mov
and
cld
push
in
jns
addr16
mov
cmpsl
add
ret
clc
sub
xor
sub
xlat
into
push
sbb
sbb
fmuls
js
push
adc
in
fwait
aas
lods
mov
dec
mov
ds
pop
and
xchg
mov
or
icebp
pop
jl
adc
fsubrp
mov
cli
fcmovnbe
xchg
dec
dec
push
cmpsl
jge
xchg
pop
ss
mov
popa
and
mov
dec
mov
fmul
xchg
and
jno
or
xchg
divb
xchg
sbb
xchg
jl
and
lods
mov
test
ds
pop
out
sub
fdivl
jno
subb
lcall
movsl
stos
pop
mov
shll
push
sarb
addr16
push
dec
xchg
adc
addr16
xor
mov
inc
xchg
mov
xchg
inc
outsl
jle
jo
aam
movsl
mov
cli
inc
imul
cmp
cmp
sub
cwtl
and
cli
enter
mov
lcall
pop
or
ja
mov
xor
jl
push
adc
test
mov
int
dec
or
lods
mov
mov
adc
lock
lret
jno
pop
mov
cli
inc
nopl
js
jl
repnz
popa
xchg
imul
add
repnz
cmp
sahf
sub
mov
push
mov
mov
repz
sahf
xor
push
push
inc
lea
mov
mov
scas
icebp
sub
mov
mov
aas
mov
xchg
cwtl
pop
into
jno
stos
or
repz
mov
lahf
in
aas
mov
jns
testl
xchg
cmp
sti
lcall
test
add
mov
cs
mov
or
ljmp
mov
jecxz
cs
or
mov
loopne
rcrl
xchg
fldcw
imul
sub
cmp
xor
or
ret
push
fistl
mov
add
cmp
jecxz
rol
incl
mov
pop
test
scas
leave
fdivrs
rcrb
adc
std
jle
mov
fs
or
dec
add
lods
xchg
cld
subl
add
loopne
jg
popf
push
leave
add
xchg
or
cmp
imul
imulb
inc
push
outsl
imul
mov
ficoml
push
sbb
ret
and
enter
mov
fwait
mov
mov
sarl
inc
repz
inc
push
in
add
fbld
xchg
fwait
sbb
lods
addr16
daa
mov
xor
pusha
fs
sub
icebp
and
or
lahf
or
mov
and
and
mov
insb
xor
ja
push
in
loop
add
sub
imul
inc
add
xchg
ret
and
pop
jnp
mov
cmp
movsb
adc
mov
insb
clc
cmp
sub
mov
inc
jns
dec
popf
pop
push
adc
fsubp
jge
sub
mov
add
jle
jno
rclb
test
push
repnz
mov
mov
mov
inc
insl
imul
cltd
sbbb
jbe
lods
aam
push
lods
enter
sub
orl
adc
or
cld
sti
mov
arpl
xchg
xor
mov
xchg
lods
movsl
shl
movsb
push
adc
sar
inc
or
insb
pop
imul
repz
icebp
and
aad
ss
dec
mov
sub
in
pop
push
daa
dec
jo
popa
jne
divl
sub
dec
les
mov
cwtl
and
pusha
sbb
inc
call
jbe
insb
std
mov
sarl
cmp
mov
dec
jp
push
push
lods
bound
and
je
clc
pop
sub
rolb
hlt
hlt
ret
sub
xor
imul
pop
sub
jne
test
jnp
pop
std
mov
mov
test
or
hlt
add
notb
mov
loop
cmpsl
pop
idivb
cmp
int3
test
cmp
imul
push
neg
daa
ja
out
push
les
clc
cmp
in
pop
leave
call
pop
cmp
adc
inc
mov
or
adc
inc
mov
pop
sub
test
aam
pop
add
fadds
xor
int
outsb
mov
or
test
lret
addl
add
xor
inc
push
and
pushf
or
sbb
repnz
adc
loope
adc
pop
xor
loope
outsl
add
mov
jl
cmp
mov
std
mov
rcrb
add
icebp
jle
rcrb
cwtl
inc
stos
fcmovbe
enter
or
add
push
mov
dec
clc
sbb
fistps
test
aaa
sub
scas
dec
shll
cld
inc
lcall
in
into
in
sub
cmp
movsl
sub
xchg
cmpxchg
and
hlt
sbb
fstps
push
jmp
dec
int3
mov
ds
in
cmp
mov
je
add
mov
push
subl
sarl
cmp
pushl
or
inc
out
pop
cmpsl
out
push
jle
and
sbb
stc
mov
loop
fnstsw
push
in
iret
pop
stos
or
loope
inc
outsl
adc
mov
add
mov
push
out
pop
xchg
sbb
cmp
and
mov
adc
push
rolb
jns
das
mov
cli
mov
sti
inc
mov
mov
je
sbb
gs
or
xor
push
aas
cmp
je
cmpsb
mov
scas
push
push
pop
mov
cld
mov
and
das
pop
mov
es
mov
pop
fistl
addb
ss
repnz
jmp
inc
ret
mov
test
cmp
xchg
out
dec
adc
aaa
orl
add
bound
outsb
pop
xchg
xchg
pop
xchg
mov
imul
out
into
jo
sti
mov
push
lea
loopne
pop
jns
pop
stc
mov
std
mov
adc
aaa
cmp
outsb
mov
adc
enter
fwait
cmc
rol
das
push
in
xchg
inc
or
popf
mov
shlb
dec
sbb
call
or
mov
cmpsb
mov
jl
xor
mov
mov
adc
xchg
mov
cmp
fcos
hlt
cld
decb
pop
push
xchg
dec
ret
add
popf
cwtl
es
and
je
in
rol
mov
sbb
mov
inc
in
dec
add
sbb
xor
sub
sub
xor
mov
jnp
repz
test
pop
pop
sbb
and
inc
rolb
popa
push
test
gs
lcall
mov
rcrl
hlt
mov
shll
cltd
cs
and
les
jae
xchg
enter
xor
sbb
push
stos
adc
sbb
or
xor
mov
mov
fs
movsl
lea
std
push
ret
test
mov
ja
idiv
rcrl
inc
adc
jl
scas
aam
jecxz
cmp
or
js
adc
gs
sub
push
dec
xchg
aaa
mov
out
pushf
mov
pop
lcall
cltd
adc
out
adc
testb
popa
jne
add
ficompl
mov
pusha
test
stos
sub
adc
push
sbb
std
div
out
xor
sbb
roll
mov
leave
sub
repz
mov
and
mov
adc
mov
addl
add
sti
mov
or
dec
es
in
push
fwait
inc
fisubl
shl
jle
jne
push
into
jl
imul
rcrl
sub
jecxz
xchg
push
loope
push
jo
jl
mull
jno
inc
fisttpll
push
stos
test
adc
scas
popa
movsb
xchg
les
sub
xorl
jno
sub
ds
mov
add
call
icebp
fwait
adc
push
loop
cmp
jnp
dec
cmp
nop
xchg
ficomps
cmp
bnd
out
inc
pop
xor
es
test
and
les
clc
lods
pop
xor
mov
ljmp
cmp
mov
dec
leave
out
clc
and
jmp
stos
xchg
fimuls
movsl
fwait
xchg
mov
jno
arpl
push
mov
xlat
ja
inc
jnp
cltd
mov
int3
lock
jmp
pop
les
hlt
rcl
adc
jge
and
pop
mov
dec
loop
xor
leave
cmp
bnd
loopne
mov
insl
adc
cmpsb
jnp
jae
jl
mov
out
and
imul
test
mov
icebp
fs
push
mov
into
out
arpl
imul
sbb
fildll
sub
mov
push
in
outsl
mov
push
js
inc
fcomip
xor
pop
cmp
dec
xor
loop
pusha
sbb
test
mov
mov
mov
test
mov
popa
mov
cmpsb
js
pop
sub
icebp
js
cmp
push
fdivrs
and
ret
adc
test
push
sub
cmp
mov
jns
movsb
add
stc
test
dec
or
push
mov
push
aas
mov
xor
adc
jmp
loope
in
xlat
cmp
and
lcall
add
jl
add
cwtl
insl
xor
pop
add
das
lods
pop
cltd
jecxz
ss
adc
sub
rol
pop
mov
cmp
imul
lods
mov
xor
xchg
inc
mov
pusha
out
cltd
fidivrs
mov
inc
push
push
fs
ficompl
dec
mov
mov
sub
and
dec
pop
ss
test
pop
mov
inc
in
js
inc
rcrl
pop
lret
push
shl
inc
in
push
and
lods
aad
adc
ret
sahf
adc
in
jmp
insb
cmpsb
and
lods
pop
sbb
lret
xchg
rclb
scas
iret
or
cmpl
mov
sub
imul
push
shrl
stc
jne
aad
jnp
pop
nop
pop
sarb
push
out
xlat
xchg
stos
loopne
push
pop
cmp
mov
ret
or
xor
mov
iret
add
pop
and
jnp
in
xchg
push
lock
push
push
or
mov
sbb
testl
mov
addb
arpl
repz
and
mov
mov
std
dec
xchg
mov
mov
sub
popa
fs
dec
das
or
idiv
rclb
or
mov
lahf
inc
mov
popa
daa
or
jg
xor
pop
xor
sbb
imul
push
mov
pop
inc
jae
mov
out
int
aam
daa
stos
leave
sub
push
sarl
and
popa
mov
mov
je
mov
repnz
xor
outsb
jno
mov
pop
lea
jp
mov
sub
popa
out
cwtl
push
pop
jae
pop
pop
sub
pop
aas
mov
mov
or
pop
imul
aas
das
jecxz
arpl
jmp
movsl
and
inc
mov
mov
popa
div
sub
test
shll
cmc
mov
and
loope
pop
sahf
xchg
mov
stc
repnz
mov
bound
aas
push
inc
mov
pop
lock
mov
push
lahf
mov
xchg
das
cld
xor
mov
pop
lcall
js
nop
inc
data16
repz
cmp
push
inc
xlat
stos
pop
inc
insb
cmp
iret
sub
bound
imul
pop
pop
dec
test
mov
mov
pushf
repz
aad
in
push
cmpl
imul
pop
pop
in
sbb
std
cwtl
jmp
repnz
leave
fidivrl
repz
xchg
ss
jnp
jnp
dec
jb
push
movsb
sti
cwtl
fiaddl
ds
call
insb
cmp
inc
lea
sbb
add
in
cltd
stos
fdivrp
gs
jns
pop
mov
sarl
sbb
movsl
cmpsl
test
leave
mov
arpl
setns
loopne
xchg
ljmp
arpl
pushf
push
xchg
sbbb
scas
jecxz
cmp
in
xor
lret
inc
out
dec
mov
cmp
aas
call
cmpl
inc
add
fidivrs
int
into
cmp
adc
out
jns
dec
xchg
mov
add
addl
inc
mov
out
or
mov
hlt
dec
and
incb
cmp
push
fidivrs
mov
jo
pushf
or
je
or
sbb
push
mov
jno
add
scas
and
es
or
push
mov
sub
mov
dec
fnsave
jb
and
mov
dec
xor
or
jmp
or
mov
push
nop
sub
inc
iret
cli
stos
stos
or
xchg
ret
outsl
jecxz
stos
stos
add
les
mov
mov
insb
cmpsl
in
sti
xor
into
in
bound
xor
lods
and
fsubr
or
or
iret
jmp
push
or
xor
or
mov
or
int3
sbb
pusha
aas
pop
and
js
dec
das
jmp
das
xor
cmpb
pop
test
mov
sbb
imull
fcomp
push
dec
and
popf
jae
adc
mov
adc
scas
out
and
hlt
pop
or
ljmp
rol
dec
add
mov
inc
aaa
test
add
and
mov
aas
push
adc
add
sub
clc
fs
mov
or
mov
cs
sub
iret
setp
cltd
sub
or
ret
cwtl
fs
cmp
shll
lret
fnstenv
vpcmpgtw
ljmp
pusha
mov
sub
dec
out
inc
xor
fldenv
mov
test
in
dec
loope
imulb
lcall
insl
mov
shlb
pop
sbb
sub
stos
jnp
xor
mov
cmpsb
xorb
inc
pop
sub
or
lods
sub
ljmp
dec
mov
cmpsb
cltd
imul
mov
dec
and
outsl
xor
outsl
fsubrp
mov
sbb
aas
jg
cmpsb
jle
fs
addb
xchg
adc
cli
pop
xchg
adc
dec
leave
jmp
sahf
cmp
leave
pop
mov
ss
sahf
xchg
mov
push
dec
pop
idivl
ret
mov
out
jl
push
mov
sub
insl
adc
dec
insb
in
insb
jae
les
dec
or
sub
movsb
xor
outsl
sub
sub
sub
ja
adcb
dec
insb
mov
xchg
add
dec
es
pop
xor
call
fisubrs
popf
xchg
repz
repz
xchg
jle
mov
shrl
or
cli
int3
xchg
lds
dec
xor
add
mov
in
cmp
and
push
pop
adc
aas
pop
inc
push
sub
jnp
aad
addr16
adc
dec
bound
add
ss
inc
out
aad
xor
fistpll
sub
out
or
ljmp
fs
jno
pop
mov
add
jecxz
int3
imul
test
or
or
push
lock
adc
ja
aas
ja
jb
adc
sbbb
test
stc
xor
adc
in
std
sti
cmp
lock
xchg
sbb
cli
sub
lods
adc
js
pop
adc
jmp
insb
lret
andb
add
cmpsb
lret
xchg
arpl
aaa
lret
or
mov
aam
xor
mov
mov
cmp
add
add
xor
cmpsl
jp
cs
cwtl
mov
xlat
and
dec
lcall
jae
inc
inc
out
add
push
imull
mov
stos
out
sarl
push
cmc
and
ds
dec
movsl
cli
mov
push
lea
xor
mov
sbb
adc
shlb
outsl
inc
sbb
addl
jle
stc
clc
movsl
jne
and
movsl
fdivs
fucomp
or
movsb
sbb
pusha
xchg
loop
out
jb
fwait
les
jmp
inc
add
adc
dec
and
dec
out
jge
addr16
pop
fwait
add
fcompl
adc
mov
mov
lods
mov
roll
lahf
pop
int
adc
int
in
mov
bound
and
push
shrl
cmp
sbb
inc
xor
shrb
rcll
sar
clc
stc
xchg
std
or
push
dec
cmc
xorb
xor
dec
mov
adc
sub
mov
mov
addb
stos
loop
pop
data16
add
pushf
jne
aaa
lods
movsl
jns
jo
pop
inc
jmp
in
fiaddl
shll
jl
rcll
sbb
push
dec
outsb
xor
arpl
sbb
add
jp
adc
lods
imul
pop
sub
or
adc
cmp
dec
mov
mov
pop
pop
fstpt
mov
testl
push
sbb
pop
rcll
pop
xchg
mov
ljmp
mov
lods
addr16
sub
aad
or
dec
or
and
clc
push
mov
ja
enter
inc
add
pushf
xchg
pop
insb
pop
or
mov
mov
es
push
pop
out
das
cmpsl
mov
mov
jmp
testb
addr16
arpl
lds
test
in
jmp
mov
mov
add
mov
jno
outsl
leave
pop
jmp
insb
cmp
outsl
ret
xor
lods
pop
jbe
test
adc
adc
insb
jae
insb
xor
mov
stos
jge
daa
lret
rol
mov
jp
in
push
and
adc
jne
arpl
int3
flds
insb
xlat
inc
lcall
in
ficoml
cmc
movsb
out
pop
and
outsl
jge
push
inc
xchg
es
jo
fldl
adc
pop
lahf
inc
dec
fldcw
dec
decl
in
ret
je
push
push
cmpsl
aas
xor
out
aas
dec
ljmp
jp
jl
test
ja
and
add
sbb
mov
pop
mov
subl
xchg
push
mov
xchg
xor
cmp
sub
and
jp
out
out
sbb
pop
jle
xchg
pop
jbe
pop
xadd
push
subb
jbe
pop
cmp
mov
add
aad
loop
in
jnp
test
jle
pusha
mov
lods
add
xor
inc
pminub
jge
inc
sbb
sub
mov
aad
cmpsb
jb
sub
mov
xchg
jle
mov
push
adc
sbb
gs
dec
stos
adc
jle
xor
mov
cli
loope
into
enter
dec
jl
andl
jns
pushl
mov
sbb
xor
fstpt
jecxz
daa
inc
rorl
push
mov
adc
in
cmc
rcr
fdiv
xor
jno
jg
out
push
mov
outsb
jle,pt
xchg
and
xchg
stos
mov
cmpsw
lcall
push
xchg
xchg
leave
mov
dec
out
dec
sub
mov
pushf
inc
stos
gs
jp
sbb
add
sbb
ljmp
xor
rclb
int
sbb
iret
mov
rcrb
add
xor
rcrb
es
rclb
out
jo
adc
ljmp
pop
and
mov
jg
sub
insl
sbb
xor
push
mov
andb
push
scas
inc
rol
jl
sar
scas
push
pop
std
mov
mov
inc
jae
les
mov
hlt
imul
test
lods
cld
mov
mov
and
jge
enter
sbb
jno
and
int
mov
call
addl
mov
cmp
jecxz
dec
int
ficomps
mov
leave
mov
mov
add
in
sub
mov
test
push
fisttps
mov
jmp
cmp
fxch
sub
lret
jns
mov
mov
or
out
mov
jo
cmpsl
addr16
cwtl
int3
mov
or
or
arpl
cli
xor
pop
out
dec
jge
pop
loopne
xor
ret
xor
mov
icebp
in
inc
rorl
mov
movsb
sti
push
sub
pop
adc
ljmp
or
lods
mov
push
aam
test
add
add
mov
adc
icebp
and
jbe
scas
xor
xchg
ds
bound
inc
xchg
das
cmpsl
add
or
cld
sbbl
call
fistpl
aam
popf
hlt
sub
dec
pop
sarl
fdivr
iret
pop
and
lea
repnz
ret
scas
lock
pop
lret
xchg
add
movsl
cltd
mov
popa
hlt
mov
cld
push
stos
es
sbb
popa
or
push
jg
loop
outsb
mov
aaa
jno
cmp
dec
dec
or
std
xchg
pop
in
mov
jbe
mov
pop
test
ja
cltd
add
mov
imul
push
orl
pop
adc
shrl
vfmsubadd132pd
orb
jg
mov
addb
int3
stos
icebp
movb
jmp
pop
mov
lods
fstl
sahf
jmpw
xchg
push
or
dec
das
and
subb
pop
adc
sti
adc
scas
adc
add
lcall
pop
pop
mov
ret
repnz
idivl
fsubrl
inc
out
jb
pop
movsb
lcall
std
cmc
scas
inc
adc
mov
movsb
aaa
test
lea
push
mov
mov
cmp
jmp
mov
sub
ds
push
or
sbb
jbe
xchg
pop
add
lods
xchg
ret
pop
jp
idivl
adc
jns
imul
repnz
in
fs
adc
mov
popa
cmc
out
lret
idiv
aas
mov
dec
mov
sub
aam
lock
enter
int3
test
lcall
mov
pop
stos
js
out
jns
decb
adc
aad
mov
shrb
enter
js
popa
mov
aaa
out
ss
mov
outsb
push
pop
stos
loope
ljmp
nop
pop
inc
lods
lret
mov
sub
lock
enter
cli
dec
dec
jp
lret
int3
stc
add
fs
fisubs
push
jae
fsubs
inc
cmp
test
das
mov
jb
mov
add
out
add
hlt
nop
pop
lea
stc
mov
adc
sub
push
inc
in
jl
mov
lcall
jmp
or
aas
sub
std
or
sub
xchg
xlat
push
or
push
pop
inc
fiaddl
sub
lods
jmp
jns
xchg
sbb
das
stos
das
int3
push
xchg
imul
fbstp
mov
aaa
lds
arpl
arpl
jb
ja
sub
outsl
subl
cmp
inc
aaa
jno
das
push
sbb
div
inc
sub
adc
inc
lds
pop
push
mov
dec
dec
je
test
les
ret
leave
jecxz
sub
aas
jno
xor
xchg
iret
cmp
jecxz
mov
adc
data16
rcrl
test
loop
dec
mov
mov
cmp
sbb
test
cli
mov
mov
cltd
shrb
sub
sbb
scas
mov
sahf
jge
call
lret
mov
push
add
mov
push
test
cltd
push
xchg
sbb
adc
dec
or
cmp
sti
out
jae
mov
push
js
rcr
pop
ret
mov
push
test
sbb
dec
adc
out
stos
fdivrp
scas
push
fnstenv
cmp
mov
sbb
out
in
mov
shll
dec
inc
xchg
push
add
and
loopne
jnp
sbbb
outsb
jg
mov
jae
inc
or
xor
cmp
hlt
inc
bound
scas
lahf
loop
in
cld
out
outsb
ret
out
xor
out
add
insl
sub
sub
sub
js
outsb
mov
xor
pop
adc
filds
pop
and
insl
fldl2t
test
out
mul
call
xchg
push
jb
jmp
out
loope
push
add
fdivl
cmc
sbb
data16
inc
pop
fdiv
loope
or
inc
fnsave
cwtl
add
repz
lea
and
fsubrs
sub
cmpsb
cmp
mov
jmp
xchg
out
or
int
mov
dec
jp
pop
int
call
sbb
mov
mov
je
jmp
adc
adc
ljmp
ret
stc
int
xchg
outsb
int3
dec
jecxz
xor
repz
add
or
pop
jmp
mov
jb
inc
and
insb
sub
mov
imul
xchg
push
mov
inc
pop
sbb
jae
sti
and
test
jnp
sbb
rorb
xchg
push
orl
filds
imul
lock
hlt
push
js
mov
and
lcall
sub
sbb
fcomps
or
cmp
xor
repz
adc
adc
adcb
pop
scas
fcompl
cmp
repz
fcoms
lahf
and
movsl
jle
loop
push
popa
add
xchg
xchg
jbe
cwtl
repz
dec
inc
aaa
inc
es
div
cmp
inc
mov
mov
mov
out
data16
ss
cmpsl
test
jmp
out
xor
ror
adc
sbb
scas
testl
mov
mov
or
push
jns
pop
pop
jmp
mov
or
loopne
aam
mov
or
imul
dec
sub
push
push
fcmovne
cld
cmpsl
dec
lea
jge
in
cmp
fcomp
addl
aaa
mov
pop
divl
xchg
mov
push
test
push
stos
xor
loope
aam
and
mov
sub
adc
loopne
in
scas
jae
into
popf
outsb
xor
inc
pop
sti
popf
xor
cmp
add
insl
or
push
push
sub
mov
jb
xor
lret
lea
xchg
test
mov
mov
mov
fwait
adc
test
enter
out
mov
pop
dec
ja
arpl
push
cmp
or
xchg
lcall
pop
scas
jne
jae
jo
push
push
outsb
icebp
lods
adc
popa
mov
dec
push
jl
aaa
adc
shlb
rol
aas
adc
sbb
sub
dec
pop
js
out
je
mov
push
icebp
out
aaa
fwait
cmp
daa
mov
popf
shufps
int3
sub
cld
adc
push
notb
popf
fcomip
rorb
mov
mov
mov
imul
or
push
lea
mov
cmp
ficompl
dec
fsubrl
inc
daa
popl
ja
jmp
inc
mov
adc
adc
push
out
jae
jnp
nop
dec
lods
sbbb
stc
cmp
mov
xor
cmp
pop
insl
dec
outsl
fldt
or
fldt
cld
movups
int
lahf
ror
enter
xchg
cmp
xor
mov
insb
into
add
and
lock
ficompl
push
insb
shlb
js
adc
adc
mov
xor
dec
push
push
sub
aaa
lcall
cwtl
pusha
loope
sbb
xchg
dec
shlb
cltd
mov
adc
mov
icebp
sbb
push
mov
leave
enter
xchg
std
ret
dec
mov
hlt
push
scas
inc
cmp
in
mov
mov
or
pop
sub
pop
rolb
jns
hlt
pushf
sbb
adc
cmc
xchg
dec
leave
pusha
pusha
dec
int3
lock
insb
lcall
sbb
js
std
movsl
jecxz
push
mov
in
fimull
in
cli
shll
sbb
push
pop
inc
pop
js
mov
or
cmp
sti
fs
lock
dec
stos
inc
jge
pop
push
and
mov
scas
movsb
ret
push
sub
out
mulb
dec
pop
in
mov
cmpsb
pop
sbb
dec
ljmp
int3
push
sub
or
xor
xchg
and
mov
xchg
lds
ret
in
mov
leave
inc
frstor
or
fidivs
addr16
add
ficoml
cmp
enter
pop
jmp
lods
jns
xchg
shrb
dec
mov
fisubs
adc
cmp
mov
push
jecxz
pop
out
cs
mov
and
loop
jae
inc
mov
mov
pop
mov
push
sarl
je
jo
pop
or
jmp
int3
lea
loop
aaa
mov
inc
cld
repnz
xchg
adcl
dec
cs
loop,pt
das
negl
pop
pop
push
sub
insl
push
pop
and
dec
inc
inc
xor
adc
jae
xor
add
inc
ror
out
scas
fisubl
mov
mov
inc
push
into
and
ret
pushf
andb
pop
jg
fidivrl
popf
push
stos
xchg
iret
lcall
fwait
xchg
ljmp
lods
popa
push
mov
push
xchg
int3
ret
add
inc
sti
sbb
pop
scas
lret
ljmp
pop
push
shll
fdivrs
inc
rcr
stos
in
sbb
fstpt
lahf
nop
stos
lock
xor
int3
xchg
in
bound
dec
xor
xchg
inc
adc
adc
lds
cmpb
mov
imul
or
xchg
jecxz
negb
xor
cmp
xor
test
std
fcmove
cmp
in
pop
push
fsubs
jge
xlat
xor
add
cmp
xchg
push
mov
cmpsl
std
in
inc
and
fstps
xchg
mov
icebp
sub
mov
pop
sbb
xor
xchg
mov
dec
ret
loop
sti
imul
fs
and
xor
out
pop
subl
adc
je
adc
push
jmp
pop
js
sub
ja
mov
and
xlat
xchg
cwtl
pop
aad
and
leave
jo
test
mov
or
aam
jp
push
push
cmpl
push
movsb
ret
mov
loop
mov
add
lret
xchg
daa
in
dec
test
ret
and
dec
lcall
icebp
mov
mov
cwtl
fs
fisttps
dec
rolb
dec
outsb
jmp
test
cmpl
mov
enter
movsl
mov
and
inc
sub
jle
mov
add
sbb
and
push
aaa
dec
push
pextrw
pop
xchg
pop
ret
mov
mov
mov
mov
mov
mov
fcomps
ffree
out
out
popa
and
inc
popf
sti
sbb
mov
movsl
xchg
imul
cltd
or
jp
mov
rorb
cwtl
cwtl
mov
stos
test
mov
fistpl
faddl
test
add
out
mov
pop
shll
push
adc
sub
adc
dec
sub
je
jae
ds
data16
sbb
inc
fwait
add
dec
fcompl
loop
adc
hlt
adc
jmp
xchg
cmc
inc
in
and
and
arpl
in
xchg
adc
movsb
mov
fdivr
xor
xchg
pop
fildl
outsl
sarb
pop
push
push
pop
std
icebp
hlt
call
sti
out
in
cmp
pop
movsb
nop
loopne
push
xor
xchg
ret
fs
imul
sub
mov
mov
jne
ds
outsb
mov
jmp
and
inc
xlat
idivl
in
aam
das
scas
sub
xchg
fdivs
mov
cmp
push
and
jg
loopne
mov
xchg
mov
sbb
lods
out
test
mov
dec
arpl
inc
test
mov
fmul
xchg
in
or
les
iret
ret
jbe
outsl
scas
mov
bound
lock
cmpsb
jnp
lds
out
mov
sahf
ljmp
cmp
jmp
cmp
jno
xchg
xor
pop
es
sub
dec
ja
in
neg
jp
xchg
mov
adc
shr
rcrb
lea
push
mov
and
ficompl
xlat
push
and
popa
test
fs
fs
loopne
jae
pushl
or
and
lret
scas
insl
jbe
mov
rorb
pop
cmp
mov
mov
sub
dec
cmp
jecxz
out
test
jmp
setg
mov
inc
lret
cmp
or
outsb
add
jns
mov
lods
adc
cwtl
shr
popa
dec
cmp
orl
jg
and
fwait
push
push
push
dec
out
jns
mov
adc
xor
je
es
mov
outsb
out
ljmp
test
mov
or
fxam
pop
int3
jne
lods
pusha
xor
pxor
enter
imul
fldcw
inc
fs
xchg
or
ret
ss
mov
inc
sbb
sub
rcll
jg
mov
mov
dec
int3
fmulp
push
xor
cld
test
insb
int
ss
ljmp
mov
fdivrs
lods
push
repz
push
ret
dec
push
sbb
xchg
and
fbstp
sbb
sbb
push
cmc
lods
and
pop
or
out
push
add
jle
in
xchg
inc
dec
into
lret
fcmove
aam
out
lahf
jb
add
imul
int3
outsl
push
dec
lds
jbe
test
jnp
fnstenv
inc
and
into
cmp
ljmp
aaa
pop
andb
dec
mov
sub
mov
xor
mov
lret
insl
fiadds
xlat
shll
test
ffree
and
mov
xchg
frstor
pop
push
or
lahf
loop
xchg
leave
jle
push
pop
jb
pop
cmp
jmp
das
inc
orb
and
sbb
xor
pop
xor
in
and
loope
xchg
fisubrl
arpl
jae
mov
cmp
cli
cmp
cltd
xor
add
mov
rol
rorl
stos
push
lods
xchg
fsubrl
or
and
mov
sub
adc
imul
stc
repz
in
mov
fcoml
sub
sbb
mov
or
out
icebp
out
cltd
shr
jle
jne
shrb
pushf
cmp
sbb
repnz
mov
psubw
mov
loop
lcall
popa
pop
loop
cmp
pop
pop
jge
stc
cwtl
dec
push
mov
xor
addr16
cltd
loop
test
jmp
cli
inc
adc
xchg
cmpsb
lock
mov
pusha
pop
movsb
inc
test
int
push
sub
xor
out
jecxz
mov
cmpsb
xchg
lds
loop
mov
addr16
repz
addr16
cli
mov
pop
xlat
aad
stc
std
sbb
xchg
sub
push
js
adc
inc
xchg
pop
dec
imul
push
dec
in
popa
sub
and
jae
call
mov
inc
jno
shrl
pop
mov
xor
ja
stos
push
test
add
jne
sbb
dec
sbb
xorl
lret
add
push
lcall
push
repz
push
lret
jecxz
jg
stc
xchg
ret
lret
xchg
stos
subl
mov
fstps
cmpsb
cmc
sbb
fimuls
pop
mov
mov
popf
mov
out
loope
notb
dec
push
sub
cli
dec
loope
sbb
pop
mov
mov
mov
jnp
xchg
lods
js
cmp
and
push
cmp
jmp
jnp
in
fildl
aas
sub
cmp
push
xchg
popf
dec
sub
add
push
repnz
sub
scas
int3
mov
add
mov
cwtl
aad
inc
stc
pusha
stc
pop
aam
sub
sbb
push
xchg
adc
notl
mov
cmp
or
imul
dec
icebp
cmp
inc
ret
xlat
pop
dec
loope
hlt
cmp
rcrl
and
lods
jle
incb
leave
inc
xor
aad
jno
sahf
iret
sbb
sub
fmul
inc
mov
shrb
shr
inc
dec
cmp
lcall
jbe
dec
ret
cwtl
mov
add
out
mov
jb
mov
popl
test
add
mov
and
stos
jge
pop
test
test
mov
outsl
aaa
repnz
loopne
lea
push
jnp
xchg
push
mov
lret
cmp
pop
adc
shr
ret
jnp
jecxz
sub
adc
jmp
fcompl
fstl
scas
out
cs
mov
divb
pop
movb
rorb
and
sub
adc
or
in
aam
mov
and
lret
cmc
fwait
pop
filds
stos
mov
mov
movsb
ret
sbb
lock
jns
daa
inc
ret
scas
scas
stc
addr16
dec
xor
mov
in
lods
jl
mov
fdiv
filds
adc
xor
rolb
mov
int
or
jl
insb
push
imul
dec
and
lods
and
roll
or
scas
enter
repz
jmp
jno
std
push
and
leave
jg
sub
sbb
xchg
adc
mov
jle
mov
xor
jbe
add
out
idivl
lcall
ds
stc
out
lahf
cmp
pop
sbb
sbb
shll
scas
daa
mov
ja
inc
pop
das
adc
xor
xchg
and
cmp
ror
sbb
popa
repz
out
mov
pop
pop
shrb
movl
sub
rorb
cli
imul
mov
nop
fsincos
jl
pop
jecxz
adc
cmp
sub
xlat
adc
leave
cmp
add
add
xlat
aam
and
pop
outsl
imul
pop
les
jp
arpl
lcall
jl
dec
xchg
pushf
aad
adc
negl
dec
les
cmpsl
ja
repnz
sub
jecxz
das
mov
pop
in
repnz
sarl
cmpsl
sbb
out
push
or
les
shlb
sub
adc
fwait
es
and
shll
adcb
gs
mov
jo
mov
and
dec
aam
repnz
leave
cmpsl
scas
repnz
jnp
imul
sbb
adc
stc
rolb
in
enter
mov
mov
pop
popf
sahf
and
jecxz
xchg
and
cmc
sbb
jns
call
aas
movsl
lret
pmulhuw
push
cmp
jnp
jl
lea
jmp
inc
pop
divb
cmp
pushf
insl
fucomp
iret
mov
xor
sbb
andb
push
ret
mov
jbe
iret
or
rclb
xor
xor
mov
fidivl
out
sbb
mov
or
es
je
jne
mov
adc
into
clc
out
xor
inc
cmp
mov
out
repnz
pop
pop
cmp
into
pushf
call
dec
ret
int3
outsl
and
xor
aaa
cltd
or
out
jecxz
imul
inc
jp
jge
ficoms
cmpsb
ja
mov
or
mov
mov
dec
cmp
jns
pop
mov
jle
xchg
out
jl
push
aam
dec
pop
ljmp
cli
or
dec
aaa
dec
loope
popa
mov
loope
adc
clc
jmp
addb
pusha
fnstcw
rorb
cli
daa
mov
adc
lahf
rcrl
imul
xor
das
mov
inc
das
xchg
inc
loopne
fcompl
adc
push
mov
adc
mov
sub
cmp
aaa
test
stc
mov
scas
leave
cmp
out
mov
mov
cmp
xchg
push
adc
iret
std
shlb
sub
inc
cltd
es
xor
xor
les
fwait
test
ss
ret
mov
mov
insb
std
sbb
insb
rolb
xor
xchg
scas
scas
int3
add
cmpsl
lea
push
pop
leave
dec
stc
mov
in
imul
stc
loope
push
push
push
push
sub
enter
mov
mov
dec
push
call
fwait
out
ja
pop
imul
mov
sbb
icebp
gs
es
mov
iret
rcl
xchg
inc
or
pop
mov
add
rolb
sub
test
mov
and
add
mov
fcompl
cld
js
rcrl
cmp
sbb
ret
fucomp
xor
mov
sbb
sub
add
into
sbb
add
or
adc
roll
jnp
outsl
sub
movsb
mov
pop
ljmp
fwait
add
movsb
aas
aas
shll
push
cmp
mov
aad
lcall
mov
out
mov
adc
aaa
scas
scas
dec
mov
insb
lret
je
int
fwait
cltd
daa
cmp
sbb
push
int
xchg
test
cmp
xlat
dec
loopne
sub
inc
insb
pop
push
hlt
mov
xchg
test
cmpsb
xchg
sahf
cs
scas
cmp
mov
or
or
outsl
add
xchg
fidivl
nop
cmp
call
sub
scas
pop
and
mov
gs
addr16
sti
mov
fisubs
sub
sub
xchg
or
mov
sbb
inc
cmpsl
jns
dec
inc
add
insl
cmpsl
pop
sbb
lahf
jb
cmp
in
jmp
cmp
iret
inc
jge
sub
popf
mov
push
popa
scas
xchg
dec
inc
repnz
sbbb
fs
push
cld
jnp
adc
cmp
pusha
and
dec
and
pop
fistps
pushf
pop
addr16
icebp
fdivrp
pop
cmc
imul
push
xor
fisubrl
lcall
jae
mov
mov
lcall
pushf
xor
jne
cwtl
jp
mov
push
push
xlat
cwtl
leave
mov
pusha
jmp
and
lock
cld
movsb
hlt
jnp
pop
push
xor
mov
fdivl
fcoml
movb
xchg
sub
xor
and
or
mov
adc
dec
and
xchg
lcall
jmp
js
xstore-rng
cmpsl
inc
ror
pop
mov
lcall
inc
lds
add
in
sbb
add
adc
pop
lcall
sar
into
sbb
pop
pop
add
bound
fiaddl
jbe
xchg
or
adc
lret
push
nop
pop
pop
cld
mov
iret
andb
les
lea
mov
fcomp
inc
pop
add
notb
mov
subb
mov
arpl
shll
xchg
mov
mov
movsl
sub
mov
out
int3
or
ss
inc
add
jnp
scas
and
add
mov
cmpsb
fstl
mov
pop
sub
jmp
cmpsb
inc
lods
js
sbb
adc
repnz
inc
dec
repz
mov
xchg
sub
mov
sbb
jnp
lods
dec
inc
pop
setb
hlt
lods
fwait
xor
xchg
les
leave
cwtl
dec
or
jmp
hlt
pop
jmp
add
outsl
jecxz
popf
daa
mov
mov
cmc
ficomps
repz
jns
pop
sti
jg
xor
js
cmp
sarl
mov
add
std
jg
popa
fst
loope
pop
lret
mov
lahf
rcll
push
shll
xchg
push
pushf
mov
iret
hlt
addl
add
and
fiadds
mov
inc
int
adc
mov
lock
inc
jbe
aas
mov
push
rcrl
movsl
pop
push
test
inc
dec
or
mov
dec
xchg
and
imul
sbb
and
push
in
mov
std
mov
fmulp
fsubrl
xchg
xchg
fisubrl
fildl
movsb
dec
mov
mov
imul
and
movsb
loopne
mov
orl
loope
into
icebp
scas
push
mov
scas
loopne
adc
in
fildll
outsb
bound
or
lret
lret
ljmp
nop
ud2
push
add
xchg
lret
mov
fcompl
fmuls
or
mov
xchg
insl
dec
jno
test
loop
sub
nop
pop
mov
cmpsb
xchg
push
scas
mov
nop
pop
loop
call
aam
dec
mulb
add
stc
fcmovnbe
mov
jb
arpl
idiv
push
call
mov
out
sbb
cli
imul
adc
xor
pusha
sub
test
sub
adc
sub
fcoml
lods
cmp
mov
jno
enter
ljmp
ljmp
repz
xor
in
inc
leave
scas
in
inc
das
push
je
movsb
xchg
jbe
daa
pop
dec
sub
xor
in
pop
shlb
cmp
or
bound
pop
xchg
push
in
sub
dec
je
mov
cmp
and
lahf
pop
jecxz
sbb
push
les
bound
dec
mov
in
gs
rclb
mov
sbb
push
sub
mov
decb
insb
mov
jle
movsl
cld
ficoml
shlb
pusha
scas
or
aam
int3
jnp
push
aad
dec
jle
mov
push
jle
inc
ss
inc
push
pop
cmp
push
or
inc
sbb
mov
pusha
arpl
jle
pop
or
push
adc
or
jge
nop
cmc
fcoms
or
or
mov
xlat
mov
or
dec
sub
jmp
sbb
push
inc
pop
sub
and
inc
loopne
int
jo
mov
ljmp
sahf
test
icebp
jnp
mov
sar
ljmp
mov
add
adc
xchg
or
popf
or
shrb
xchg
mov
adc
jg
sub
lds
sahf
mov
cmpsb
cmp
iret
or
sub
inc
cltd
jmp
cwtl
pop
out
addl
pop
jae
in
in
in
pop
mov
fisubrl
sbb
cli
pushf
xor
roll
fadds
imul
pop
aam
cwtl
in
repnz
cmc
inc
mov
push
test
rcrb
scas
out
or
inc
mov
divb
dec
cmc
aas
insl
inc
cmpsl
xor
std
pop
mov
jmp
add
ficoml
loopne
leave
push
cmp
movsb
insb
mov
xchg
ret
mulb
insb
cmp
or
and
dec
mov
add
andl
insb
inc
push
movsl
aas
mov
mov
clc
mov
jl
xchg
jb
ljmp
cmp
ds
cmpsl
inc
mov
push
pop
push
add
mov
dec
in
sub
out
mov
xor
dec
stos
test
lret
xlat
int3
pop
leave
lret
cmp
data16
and
fldenv
xor
mov
inc
sbb
es
and
cld
sub
fidivrl
aas
lret
int3
orl
push
ss
lods
jp
loopne
lcall
std
fidivs
xchg
xchg
mov
fwait
pop
sti
scas
aas
idivb
inc
xor
xor
test
addr16
stos
sub
jo
loop
ljmp
out
push
call
ds
mov
leave
mov
ret
pop
dec
jge
je
add
cwtl
jns
cld
cmpb
lcall
add
push
lock
lods
imul
dec
push
addr16
dec
mov
dec
sahf
movhps
insl
jl
pop
mov
xchg
jne
cs
dec
cwtl
fs
cs
xor
flds
push
loop
jne
cli
xchg
add
add
lcall
sti
in
and
mov
leave
inc
adc
push
fdivs
cmpl
adc
jmp
mov
dec
mov
cmp
jmp
add
cmpsl
test
aas
into
mov
jae
adc
cmp
leave
or
xchg
comiss
and
punpcklbw
test
call
sub
mov
mov
fmull
adc
push
sub
repnz
bound
inc
fnsave
addb
sub
sti
xchg
gs
popa
pop
sub
nop
mov
add
xchg
sbb
or
subb
jae
stos
jno
aam
outsb
das
mov
inc
stos
cmp
frstor
xlat
scas
fbstp
je
loopne
and
add
inc
out
lds
mov
ja
dec
cmp
dec
jbe
mov
clc
fsts
jmp
das
cmc
sahf
ss
pop
sarl
xchg
fcmovbe
inc
add
pop
jle
imul
fcomip
pop
cmp
and
xchg
push
rorl
push
int3
push
mov
int3
dec
xchg
add
xor
pop
cmc
fisubs
push
sub
cmp
jns
pop
mov
adc
cwtl
mov
pop
repz
imul
bound
inc
dec
push
mov
test
pop
xchg
imul
add
jl
add
neg
int
xor
mov
ss
rclb
aaa
sbb
cwtl
sub
fistps
pop
out
rorb
nop
aas
jge
adc
ljmp
sub
gs
out
iret
fwait
imul
fistpl
or
mov
jne
fimuls
xchg
call
inc
fsubr
fsubrl
sbb
pop
pop
and
push
test
push
stos
inc
push
or
ret
xchg
stos
es
or
lods
into
ss
leave
push
clc
repz
aaa
mov
add
daa
ljmp
out
adc
out
mov
arpl
stc
mov
aam
cmc
sahf
sub
push
cltd
lds
pop
mov
mov
ljmp
cmovne
stos
movsl
push
int3
hlt
jl
orl
movsl
test
idiv
cld
dec
shlb
cmp
mov
dec
cs
push
adc
popa
aam
jno
pusha
fistpll
mov
jbe
mov
ds
iret
adc
dec
cmpps
ror
add
ret
xor
cmc
int3
icebp
in
fisttps
dec
push
out
pop
leave
ja
jge
jbe
sub
es
ss
pop
popf
scas
subb
rcrl
loope
sbb
stos
jnp
fdivrs
jle
movb
xor
push
xchg
insl
jp
push
enter
imul
fcomps
data16
das
in
xor
jbe
adc
das
or
jle
jle
aad
push
mov
jge
mov
mov
ret
push
cs
dec
xchg
sahf
ret
stos
aad
mov
stos
das
adc
adc
incb
push
add
pop
and
sbb
jge
adc
sbb
insb
movsb
ret
jb
popa
fwait
test
repnz
ficoml
aad
mov
int3
and
jb
inc
mov
add
andb
dec
pop
add
inc
push
inc
arpl
xchg
jnp
xorl
shr
mov
mov
stos
lret
xor
test
test
push
add
shrb
enter
pop
and
and
push
dec
ret
jecxz
xor
xchg
add
out
jmp
repz
sbb
inc
lock
mov
int3
xchg
inc
repz
and
sbb
out
adcl
stos
lret
fs
das
dec
outsl
stos
mov
cmp
mov
sbb
lret
sbb
cmpsb
arpl
pop
mov
in
push
xor
aad
dec
arpl
and
imulb
pop
leave
mov
aam
popf
jnp
movsb
push
roll
adcb
insl
insb
scas
mov
dec
fwait
cli
dec
ja
lock
fimuls
pop
mov
cltd
pop
sub
push
pop
clc
push
je
aad
es
push
sbb
jae
rorb
insb
nop
lods
inc
push
pop
push
addr16
add
mov
add
xor
mov
outsb
pop
mov
push
cmpsb
outsl
mov
fcom
sub
cmpsb
out
push
sbb
or
nop
xor
xchg
cmp
xor
pusha
stos
aas
cmp
dec
int
and
cmp
repz
pop
mov
sahf
shrb
and
imul
scas
mov
mov
xchg
pop
stos
or
fs
push
sahf
jl
and
jmp
pusha
jmp
aad
faddl
mov
cli
push
addl
and
scas
xor
push
mov
nop
push
lcall
pop
or
xor
xor
popl
mov
add
scas
sbb
sti
pop
fdivrs
push
std
or
clc
cmp
gs
and
push
ljmp
pop
sbb
int
push
jg
adc
dec
scas
cmp
fwait
aam
cmp
rorb
and
in
bound
cltd
std
mov
jbe
adc
dec
loopne
das
pop
fsubrl
cmp
out
mov
mov
pushw
push
xchg
xor
cmp
jmp
imul
sbb
mov
inc
lds
cmpsl
sti
push
inc
push
scas
cmp
gs
or
push
pop
mov
jns
cmpsb
loope
aad
lods
and
paddd
addl
cld
cmp
xlat
xlat
mov
outsl
xlat
jae
and
jnp
jae
or
cmp
cmc
mov
mov
lock
iret
ficoms
jnp
sahf
xlat
sbb
subb
pop
dec
adc
jno
push
pop
xchg
fdivrl
mov
sbb
notb
les
in
sbb
xlat
sub
inc
sub
cmp
test
inc
iret
sub
inc
sbb
fdivp
inc
shrl
add
push
push
xchg
sbb
std
fistps
xor
push
fidivrs
inc
and
jl
sub
jge
out
stos
add
xchg
add
jmp
adc
mov
enter
jp
dec
incb
sti
orb
cld
loope
lret
or
jge
add
adc
mov
jbe
clc
cmc
leave
stos
jg
and
xchg
jle
out
stc
iret
jp
dec
adc
mov
sbb
das
test
addl
xchg
jecxz
mov
mov
mov
jae
std
sub
dec
test
test
dec
pop
add
xorb
icebp
stos
xlat
ja
pop
mov
pushf
pop
cmp
mov
ret
pop
pop
adc
inc
bound
popl
iret
shr
jmp
jl
inc
and
aaa
dec
mov
sti
je
mov
or
movsb
aam
xor
ss
popf
cli
push
inc
xor
mov
out
fst
push
mov
mov
aam
notl
fdivl
pop
in
sbb
fs
sbb
iret
jp
lret
mov
popf
mov
shr
add
sub
or
cwtl
ret
pop
dec
pop
mov
das
ja
ret
add
pmulhw
push
cmp
es
sbb
pop
xchg
call
inc
repz
pop
add
or
lret
xchg
test
inc
repnz
je
jnp
push
decb
sub
and
lret
jge
jle
sbb
xor
loope
xor
movl
mov
xor
fidivs
fcomp
aaa
mov
cmp
fstl
popf
fwait
cmp
test
add
mulb
xor
dec
dec
leave
pop
sub
pop
inc
jne
pop
adcl
cmp
push
insb
ljmp
lahf
lret
in
test
pop
repnz
imul
roll
jmp
ss
cmp
adc
dec
push
jge
dec
rcrb
cmpsl
fsubrs
scas
dec
jnp
push
pushf
leave
ret
aas
stc
rolb
shll
lahf
ss
mov
dec
shll
sbb
int3
push
jmp
sbb
push
je
mov
inc
mov
jns
and
xchg
out
shlb
bnd
clc
mov
xchg
js
cmpb
pop
mov
mov
inc
js
lock
xchg
mov
inc
inc
and
je
mov
sub
cld
xchg
xchg
or
xor
mov
loop
xchg
outsl
xor
movsl
ljmp
and
dec
jne
mov
add
outsl
jbe
push
fisubs
dec
jp
out
shl
pop
push
and
or
ret
xlat
pop
addr16
push
test
push
aaa
adc
in
add
mov
cmc
add
cs
adc
dec
adc
or
je
adc
sub
nop
addr16
push
inc
scas
pushf
js
sub
insb
cld
mov
das
cli
cmp
lret
into
fadds
jge
cli
adc
inc
xor
test
lds
xchg
mov
jmp
mov
xor
mov
movsb
fisttpl
adc
test
stos
mov
das
jns
xor
and
sub
jp
lods
jns
in
dec
mov
ja
movsl
cmp
xor
dec
or
insl
movsl
pop
popa
mov
fbstp
push
mov
rcll
mov
mov
clc
lock
cltd
sub
sbb
aam
data16
out
jecxz
push
icebp
scas
push
fwait
push
push
test
xchg
cmp
jp
out
xorb
stos
add
into
lds
lods
aad
mov
movsl
std
jb
xor
ret
or
pop
js
jbe
cmp
inc
mov
test
xor
cs
call
and
adc
pop
push
or
nop
push
stc
jae
imul
xor
idivl
fidivrs
out
orl
lahf
test
sbb
insb
pop
sub
sbb
aam
pop
mov
je
pop
cwtl
push
rcr
add
xor
cmp
sub
mov
movsl
lea
push
inc
pusha
add
je
mov
mov
pushf
aas
pop
rclb
inc
std
adc
ljmp
sbb
repnz
pop
dec
sbb
cld
cmpsb
lret
inc
dec
adc
les
cmpsl
mov
xchg
cli
sub
movsb
or
pushf
jp
out
mov
mov
pop
jmp
xor
clc
sbb
mov
push
sub
sar
push
inc
pop
lea
lods
or
in
jne
adc
cmp
cmc
es
rclb
xchg
lret
jbe
call
mov
arpl
add
dec
mull
cmpsl
mov
loope
outsl
lahf
addr16
dec
cmp
insb
mov
je
cmp
hlt
dec
cmp
fisttpl
imul
push
loopne
iret
dec
out
cmp
adc
pop
or
jno
insb
lret
andl
jae
in
mov
lea
cmp
gs
out
mov
adc
out
bound
xor
xchg
inc
outsl
mov
out
scas
cmpsl
xlat
mov
das
fildll
inc
icebp
cmp
mov
notb
pop
xchg
sub
xor
pusha
arpl
mov
cmp
jle
sub
adcb
fstpl
mov
push
mov
andl
fs
xchg
aas
out
pushf
mov
imul
je
popa
push
ss
jae
dec
imul
je
xchg
aam
and
aaa
pusha
js
fs
out
jnp
mov
testb
stos
mov
jae
stc
sub
mov
cltd
and
xchg
repz
jns
dec
sbb
xchg
sahf
pushf
idivl
add
adc
inc
cmp
shrb
push
xchg
arpl
or
push
xchg
js
and
xchg
mov
pop
lcall
sub
mov
scas
lods
pushf
out
cmp
sbb
enter
xchg
cld
jbe
insb
ret
sub
push
mov
or
xchg
inc
dec
mov
pop
push
cld
lods
imul
push
mov
jae
or
fisubrl
mov
lods
fdivs
jb
mov
adc
sbb
jo
push
stos
pop
sub
jmp
scas
loop
repnz
test
scas
add
push
jl
jle
in
pop
arpl
adc
sahf
xor
push
sub
sub
insl
insb
add
push
mov
repz
mov
cs
xchg
push
loop
test
shll
subl
enter
scas
int
ficompl
mov
and
adc
out
adc
ret
xchg
test
adc
repz
cmp
dec
stc
or
rolb
lods
inc
enter
mov
icebp
mov
add
stos
in
je
pop
sbb
int
dec
pop
cmp
iret
fs
cld
or
lods
add
enter
jp
pop
imul
push
jg
cmp
xor
bound
pushw
mov
mov
sbb
dec
inc
jecxz
pop
mov
mov
fcoms
in
pushf
xor
ds
jg
out
jg
lock
sbb
or
pop
or
push
cvtps2pi
int
clc
cmp
cmp
in
stos
lock
adc
xchg
and
push
add
movsl
sub
pop
push
and
sub
xor
adc
call
or
and
sbb
in
jg
lock
lret
hlt
jno
pop
ljmp
push
cvtpi2ps
int3
add
add
push
dec
and
push
or
push
dec
cmpsb
aaa
sbb
sub
push
je
inc
mov
mov
bound
xchg
pop
das
adcb
dec
push
daa
cmp
rcrl
sbb
bound
xor
pop
xor
notb
lock
xor
test
insl
pop
mov
cltd
jp
xor
sbb
xor
incl
dec
xchg
fcompl
out
sbb
hlt
push
jmp
movsl
push
mov
scas
and
loop
and
inc
addl
aam
dec
cmp
mov
fstpt
arpl
jae
inc
inc
insb
xchg
dec
rcll
sti
movsl
cld
xor
push
pop
fldl2e
or
les
popl
es
mov
pusha
xchg
lock
jg
jnp
push
insl
iret
loope
loop
and
jo
arpl
pop
and
mov
xchg
mov
add
nop
clc
aad
pusha
add
jmp
or
in
cmp
into
mov
cs
stos
cmp
fildl
push
stos
sub
fmull
scas
arpl
sub
inc
movsl
pop
enter
xorb
jmp
nop
and
jge
in
mov
cmp
fucom
mov
xchg
and
into
sahf
push
popa
push
push
sbb
rol
cli
adc
rcr
or
lds
add
int
das
pop
loope
data16
inc
dec
cmp
rorl
pop
jp
dec
pushf
orb
enter
clc
push
pop
jb
nop
sbb
lahf
xor
out
daa
cltd
out
and
les
push
out
sub
xor
popf
adc
or
inc
inc
ret
ds
and
popl
pop
push
rcrb
iret
std
inc
fsubs
call
mov
loope
ss
mov
sbb
out
and
jb
movsl
dec
xchg
lcall
sbb
pop
lret
xchg
cmp
push
cmp
inc
sub
ja
mov
repnz
aam
inc
scas
clc
cmp
cltd
sbb
mov
push
pushf
jno
loope
dec
shlb
and
in
insl
hlt
pop
inc
pop
push
je
sbb
fucomip
insl
out
outsb
xchg
ret
lret
cmp
int
movzwl
xchg
mov
dec
mov
xor
dec
or
into
xchg
popf
and
pop
dec
jne
or
fidivl
adc
loopne
xlat
roll
mov
adc
repnz
aaa
jne
xor
mov
daa
fdivl
add
push
stc
orb
xor
out
icebp
ss
sarb
ja
into
adc
test
inc
jbe
jmp
in
dec
mov
arpl
adc
sub
jp
test
jp
sub
push
mov
dec
bound
push
cmp
test
xchg
cmp
arpl
or
lret
test
and
sub
ret
sbb
adc
loop
push
aas
or
pop
pop
sub
dec
inc
or
nop
out
sub
mov
or
sbb
jns
push
hlt
sbb
xor
sbb
push
dec
ja
or
fsubs
call
adc
lods
test
mov
or
mov
mov
ljmp
pop
adc
pop
das
xor
cmp
testl
add
aam
jg
in
inc
and
dec
dec
mov
jg
pop
push
repz
jns
enter
scas
inc
pop
std
data16
pop
xchg
xchg
daa
pop
mov
dec
adcb
cmp
enter
hlt
inc
test
adc
push
ljmp
xor
cmpsb
mov
xchg
rolb
movsl
aaa
mov
jmp
testl
call
fisttpll
and
mov
sahf
mov
fwait
rcr
lret
cwtl
xor
jl
cmp
pop
cvtps2pi
pusha
xor
cmp
jnp
daa
lods
insb
clc
pusha
add
test
xchg
sub
daa
sarl
xchg
cltd
sub
cmpsb
adc
mov
dec
pop
pop
es
and
ja
push
sub
dec
ja
lea
push
xor
mov
push
dec
pop
and
lcall
out
repz
inc
pop
in
push
inc
jg
cmpb
in
mov
pop
xchg
cs
mov
aad
inc
sub
ja
or
xlat
ret
pop
inc
pop
ljmp
inc
sub
fcomps
and
mov
adc
nop
pop
push
push
and
imul
ret
faddp
or
or
aam
js
and
sbb
movsl
ljmp
xor
push
jl
inc
repnz
es
iret
pop
lds
daa
and
imul
fnstenv
xchg
fwait
jae
in
movb
push
ja
and
repz
jo
xchg
add
mov
lods
testl
in
fcomi
xchg
imul
test
cwtl
mov
subb
es
stc
insl
dec
inc
in
in
iret
mov
mov
scas
jmp
adc
push
dec
icebp
sub
mov
cltd
dec
sbbb
dec
mov
mov
mov
fsubrl
pop
push
jle
loope
add
sub
dec
fcmovbe
sti
xchg
xor
loopne
rclb
adc
aas
jp
dec
gs
pop
idivl
cmp
int
mov
shll
rclb
jo
mov
lcall
push
mov
cmp
pop
lret
fwait
lods
xchg
inc
cmpsb
xchg
xchg
lea
xchg
arpl
xchg
jb
ds
push
addb
sti
mov
sub
add
adc
jo
jnp
jmp
int3
or
xchg
xchg
jge
pop
add
std
in
into
inc
fcmovb
jmp
adc
pop
mov
adc
xchg
pandn
push
jmp
push
fidivl
movsbl
gs
scas
mov
sbb
cmp
iret
and
divb
pop
in
scas
out
and
out
or
subb
add
notl
repnz
pop
in
sub
or
sub
jl
fs
jecxz,pn
jbe
insl
mov
out
call
insb
in
stos
pop
xchg
push
add
dec
pop
lods
jg
clc
or
jb
and
pusha
dec
in
jl
add
jmp
mov
jmp
push
daa
inc
push
push
and
xor
pop
je
fimull
dec
inc
loope
vcvtss2sd
sbb
mov
js
cld
inc
jno
stos
gs
jns
xchg
push
dec
xchg
cs
dec
test
aaa
xchg
cmp
pop
cltd
push
test
mov
cltd
pusha
pop
mov
inc
pop
lock
mov
jmp
add
xchg
sbb
mov
xor
js
faddl
leave
xor
jmp
ret
mov
or
subl
dec
adcl
cmpsl
or
dec
sbb
stos
lahf
xor
mov
mov
inc
pushf
jb
fists
sub
inc
mov
sbb
cli
mov
js
cli
mov
das
repnz
lods
test
jecxz
or
push
int
cmpsl
int3
aaa
lret
and
test
cmp
mov
fs
adc
sub
and
cmp
sbb
shlb
cs
mov
lret
std
pop
jg
data16
jp
mov
fimull
mov
mov
incl
enter
inc
ds
bound
fidivs
cld
mov
add
sahf
xor
pop
mov
imul
add
inc
dec
mov
stos
add
mov
lahf
pop
loopne
cmpsb
sub
mov
pop
rol
in
cwtl
out
cmpsl
pop
dec
and
jl
cmp
xorl
addr16
push
fs
call
xchg
scas
push
pop
sub
out
or
dec
mov
and
sub
or
incl
mov
out
daa
add
sub
inc
fistps
mov
aaa
iret
aaa
cmp
mov
sbb
sbb
mov
addl
push
imul
inc
push
xchg
xor
jl
sbb
in
scas
cld
mov
imul
inc
xor
adc
ret
inc
cwtl
shll
add
ds
fbld
gs
lea
mov
xchg
out
push
cmc
aam
inc
xor
fdivp
inc
das
dec
and
lret
lds
in
aad
adc
fbstp
mov
xchg
pop
or
sahf
mov
inc
jle
insl
lds
fbld
cmp
xchg
lds
ja
ret
xor
inc
pxor
daa
clc
mov
insb
or
mov
scas
fisttpll
dec
sub
xor
mov
fsubs
xor
movsl
mov
inc
or
jge
divl
jle
outsl
cltd
dec
int
dec
ffreep
and
mov
nop
out
or
gs
testb
push
dec
addr16
test
aam
repz
lret
mov
imul
inc
test
in
sbb
dec
imul
inc
pop
jecxz
lds
fidivl
mov
push
jp
repnz
dec
test
outsb
sub
int
jecxz
ja
negb
cmpl
cli
les
scas
sti
xor
cmp
test
outsb
fdivs
lcall
mov
pop
adc
outsl
orb
jb
dec
fwait
mov
stc
xor
mov
vrsqrtps
sbbb
mov
dec
repnz
out
dec
and
adc
add
shl
and
xchg
add
fwait
jbe
cmpsb
insb
sti
stos
xchg
sub
test
mov
sub
pop
test
pop
adc
ljmp
lods
pop
and
insl
and
xchg
cmpsl
mov
mov
pushf
fcmovb
jmp
inc
pop
push
lcall
inc
filds
lds
xchg
ficompl
lret
and
hlt
jle
loope
mov
loop
cmpb
sbb
sbb
or
popf
inc
cld
mov
jl
xor
test
mov
jb
lock
out
in
xchg
or
test
xchg
or
out
add
mov
sub
push
xor
push
xor
dec
push
xchg
push
jmp
sub
lcall
push
mov
stos
push
cmp
je
sbb
inc
mov
jns
mov
dec
xor
push
mov
nop
cld
and
in
inc
jge
call
mov
mov
inc
sub
push
insb
push
sbbl
lds
fbstp
lds
in
data16
sub
leave
push
gs
stos
pop
dec
aad
enter
ds
repnz
inc
shl
ret
cli
out
les
jecxz
pusha
int3
push
addb
mov
inc
jmp
outsl
xor
hlt
push
push
inc
or
imul
xor
mov
pop
pop
mov
mov
push
push
sahf
enter
fxch
loop
push
jb
loop
test
sub
pop
je
in
shll
sbb
out
sub
lods
inc
imul
dec
jle
jp
lcall
sbb
mov
subl
and
mov
mov
dec
aad
xchg
xchg
cmp
inc
xor
jno
pop
mov
je
inc
xlat
test
mov
xchg
add
mov
lds
arpl
cmp
bsf
jns
lahf
lahf
adc
mov
call
test
movsl
rorl
xchg
insb
add
out
loope
add
jle
lcall
loope
rcrb
xor
sarl
jecxz
xchg
mov
rorl
sbbb
mov
call
pushf
mov
mov
aas
ficomps
mov
dec
or
xor
jbe
inc
es
arpl
mov
add
inc
ds
out
subb
imull
cld
push
pop
dec
cld
popf
mov
addr16
adc
sub
and
ja
push
pop
push
xchg
out
lret
xchg
lods
xor
mov
and
out
inc
cmp
pop
xchg
lds
add
ds
std
decl
pop
cmp
scas
pop
jle
int3
mov
js
lock
test
sbb
push
inc
out
lods
jb
cmp
mov
pushf
dec
adc
int
imul
aas
cmp
mov
mov
cmp
sub
add
hlt
adc
cwtl
xchg
fldl
out
dec
movsl
push
sti
adc
fs
sti
out
dec
bound
and
mov
movb
cwtl
add
add
or
xchg
jge
adc
in
mov
mov
mov
out
mov
add
mov
and
xor
insb
cmc
out
cmp
ljmp
pop
cmpl
fidivrs
mov
nop
jae
mov
iret
lods
lods
sub
adc
lahf
inc
cltd
push
leave
iret
into
ljmp
mov
xchg
mov
add
rcrb
out
hlt
cmp
loope
sbb
arpl
push
in
xchg
dec
cvttps2pi
ficoms
jno
gs
pop
lret
pop
clc
leave
cmp
bound
movsl
xor
xchg
mov
roll
dec
addr16
cld
pushf
mov
inc
jne
mov
ljmp
roll
movsl
jo
inc
sti
jo
pop
mov
in
not
inc
lea
pushf
cmpl
push
bound
mov
lahf
aam
jne
jg
xchg
xor
pop
adc
mov
mov
es
ljmp
add
lret
xchg
cs
adc
cmp
xchg
push
lcall
pop
leave
or
push
lds
shrb
push
mov
mov
loopne
addb
xchg
cwtl
in
mov
and
cmp
mov
xchg
inc
push
leave
rol
sub
repz
mov
imul
pop
adcl
jnp
insb
sahf
mov
xor
jno
push
and
fs
call
push
scas
subb
divl
sub
xchg
divl
addr16
mov
mov
iret
imul
fstl
movsl
je
pop
insl
addr16
lahf
mov
repz
cmc
mov
inc
mov
ljmp
mov
pop
ret
clc
daa
mov
push
sbb
int3
pop
lods
addb
fcomps
add
push
das
lretw
pushf
sahf
and
push
fs
sub
shlb
pop
hlt
in
adc
dec
cld
mov
lods
std
dec
mov
jnp
mov
inc
and
jno
into
lret
lds
popf
testl
xchg
and
bound
fcmovbe
pop
jb
jp
pop
js
cmpsb
xor
sahf
inc
jle
sbb
mov
lahf
loopne
mov
xor
add
dec
aad
push
bound
inc
add
notb
outsl
jp
mov
mov
pop
jb
jmp
and
mov
popa
pop
subb
fldenv
insl
mov
popa
mov
dec
sub
addb
or
adc
jp
and
and
fstl
xchg
cmp
not
xlat
into
dec
insb
adc
pop
shl
xor
and
sbb
in
in
and
je
stos
std
inc
mull
pop
loope
das
push
pop
jle
mov
bound
icebp
push
or
ljmp
xor
jae
into
mov
out
out
adc
sub
add
mov
sbb
push
lret
xor
dec
insb
insl
cmc
inc
push
xor
frstor
cwtl
mov
ret
cmp
dec
shl
mov
bound
mov
jae
dec
cwtl
sbb
mov
out
or
or
or
out
test
pop
aad
jb
es
loope
add
mov
sarl
movsl
jbe
fdivl
inc
insb
shl
jns
je
loop
cmc
int
repz
or
xchg
mov
push
test
loopne
mov
add
inc
sub
cmp
mov
fnstsw
xchg
ret
rorb
xchg
fstl
adc
push
inc
dec
lock
jg
sbb
shlb
push
leave
into
ss
pop
lock
mov
pusha
es
andb
pop
or
aas
mov
lods
xchg
push
mov
das
xor
mov
adc
lcall
or
cmp
out
mov
rclb
and
les
in
gs
xor
icebp
lock
cld
push
lret
xor
or
jno
inc
incb
gs
push
fists
pop
clc
outsb
jne
cli
xor
test
test
jne
push
mov
push
push
inc
push
popf
pop
leave
cmp
cmc
push
adc
mov
sbb
addr16
aad
jl
xchg
jl
bound
mov
ljmp
jbe
xor
arpl
out
adc
fs
aaa
and
cld
shll
inc
fidivrs
jmp
lret
xor
arpl
aam
ja
idiv
mov
and
sbb
imul
ret
pop
push
in
pop
int3
and
cwtl
cmc
int
iret
adc
xchg
dec
lods
and
sub
sub
sub
cmp
or
cmp
fisttpl
hlt
cs
or
outsl
popf
rclb
sub
cmpsl
pop
hlt
push
cltd
outsl
incl
cli
cmp
les
inc
loop
jbe
mov
adc
xchg
sti
push
push
mov
stos
xchg
std
adc
notb
loopne
js
and
shrl
mov
adc
sti
imulb
cmp
or
jle
cmpsb
dec
aam
icebp
dec
sub
pushf
hlt
xchg
mov
add
and
aas
iret
jb
cmp
mov
lea
arpl
xor
into
mov
lret
fsubl
not
or
adc
lret
int3
mov
or
inc
pop
adc
call
cmp
or
orl
mov
jbe
roll
test
sti
cmp
jmp
and
push
adc
push
add
aaa
and
jae
jae
rcrb
pop
mov
add
neg
cmp
stos
mov
pop
adc
cmpsb
or
jb
inc
and
push
sub
pop
int3
or
repnz
push
mov
or
lahf
leave
xchg
outsb
cmp
xchg
mov
mov
xchg
scas
adc
call
mov
and
repz
in
xchg
mov
pop
je
xchg
jbe
sub
cld
sub
pop
pop
cld
add
cwtl
add
jns
loopne
or
iret
ja
lea
out
fstpt
cltd
xrelease
in
shll
mov
inc
iret
dec
rcrb
enter
stos
sbb
andl
mov
add
push
pop
outsl
mov
pop
dec
test
or
imul
movhps
inc
jb
dec
xchg
orb
aas
imul
cmp
lods
cs
out
xchg
sbb
cwtl
mov
rclb
mov
fucom
jb
dec
jo
and
rolb
daa
cltd
test
jl
jne
cmp
in
hlt
sub
sub
mov
xchg
cltd
pusha
ja
ja
sub
cmp
push
shll
xchg
int3
stos
dec
mov
sub
add
xor
cmpsl
addr16
data16
lods
mov
pushf
cmpsl
movsl
outsb
mov
leave
mov
nop
shlb
sub
xchg
lret
xchg
imul
jmp
mov
mov
xchg
mov
popa
push
ds
inc
inc
nop
xor
pushf
and
mov
test
and
sub
mov
pop
pop
jmp
fdivrl
fcomps
mov
and
push
sbb
lret
jnp
jp
jae
fldcw
fldcw
push
xchg
xchg
cmp
cmpsl
int3
push
imul
mov
test
jb
xchg
test
dec
fistps
push
test
pop
pop
xchg
sub
inc
mov
fwait
mov
into
jg
add
sti
jg
and
push
sbbb
test
loope
jo
mov
nop
dec
mov
jecxz
ret
pop
leave
enter
mov
adc
pop
jno
or
xchg
jle
xchg
aaa
jae
push
sbb
enter
or
pushf
sub
cmp
scas
lds
mov
testb
sbb
xchg
jnp
enter
into
xchg
addr16
arpl
cwtl
pop
cli
cmp
cltd
mov
add
rol
pop
lret
pop
out
mov
addr16
cli
xor
loope
push
xor
mov
cmp
js
mov
mov
add
push
adc
push
cwtl
mov
adc
xchg
bound
stos
cmpsb
mov
mov
push
cmp
inc
dec
and
inc
jae
push
mov
inc
int
xor
lret
mov
sub
mov
in
xor
in
daa
popf
push
cmp
jns
add
imul
lods
imul
fcmovbe
cmpsb
leave
movl
dec
and
mov
aam
shl
pushf
aad
pushf
or
cld
mov
insl
jb
notb
push
or
xchg
repz
and
movsb
push
jmp
je
xchg
test
aas
xor
bound
cmp
cld
movl
and
inc
cmpsb
dec
imul
sbbl
or
popf
mov
pop
jbe
int3
stos
mulb
pop
ret
adc
inc
dec
jo
cs
lods
decl
shrl
into
mov
out
push
adc
sub
les
data16
insl
int
imull
or
xchg
fiadds
pop
repnz
cmpb
sub
or
add
icebp
mov
xchg
pop
adc
mov
mov
xorb
scas
inc
mov
repz
aad
mov
push
or
adc
leave
xchg
adc
sbb
jmp
aam
push
into
test
in
leave
icebp
xchg
movsb
push
outsl
dec
out
add
jl
jmp
jnp
push
xlat
stos
and
testb
clc
xor
cmpsl
inc
loope
add
sub
pop
mov
icebp
sbb
popa
hlt
mov
test
jae
mov
mov
arpl
js
sub
stc
or
ret
ficoms
push
rcrl
popa
scas
and
rcll
stc
rcll
cmc
imul
lret
pop
into
repz
push
mov
jne
dec
dec
or
add
push
mov
rclb
xchg
add
sbb
fildll
push
cld
xchg
repnz
clc
cmpsl
stos
mov
mov
sub
popf
iret
cmp
mov
or
mov
jne
clc
xchg
int3
mov
shrb
cli
inc
testl
pushf
and
test
sbb
adc
adc
insl
ds
cmpsl
mov
push
int
in
jne
ret
add
rorl
inc
jae
outsb
or
mov
fstpt
mov
aas
pop
dec
cmp
jmp
in
ret
sub
push
mov
ds
xchg
pop
pop
jno
inc
mov
dec
int3
jmp
ja
xor
sub
addr16
mov
mov
push
sub
mov
pop
popa
adc
das
sarb
testb
out
test
test
and
xor
sbb
shl
jb
test
xor
fdivp
mov
test
je
pop
clc
inc
lcall
cld
cwtl
add
xchg
aaa
ficompl
imulb
mov
rcll
xor
mov
and
cmp
mov
ret
lock
add
lods
sahf
push
stc
mov
scas
add
jae
inc
jns
inc
insl
dec
push
push
push
ret
xor
ja
notl
sbb
out
aad
ret
mov
add
scas
xchg
or
loop
sub
cmc
fs
and
or
in
xchg
leave
sub
inc
bound
xchg
pop
dec
fwait
add
rcll
mov
addr16
push
out
mov
hlt
leave
fcoml
jns
arpl
pop
fcoms
idivb
xchg
lret
mov
and
int3
pandn
dec
int3
mov
mov
or
stos
push
push
stos
jo
push
mov
mov
jmp
mov
test
sub
or
fsubrl
add
or
jecxz
dec
xchg
jnp
fcmovb
lcall
orl
ret
mov
cmp
mov
push
mov
addl
cmpsl
inc
sbb
jp
es
jmp
mov
loop
inc
sub
cli
inc
add
repz
pop
stos
mov
xchg
or
mov
pop
stos
stos
std
jmp
dec
mov
into
mov
das
or
arpl
pop
insb
sti
sub
in
cld
lds
push
movsl
mov
scas
lcall
and
sbb
testl
ficoml
cmc
sahf
adc
shrb
xchg
sub
and
jno
or
pop
js
inc
sti
cltd
push
sbb
sbb
pop
add
stc
xchg
shlb
cmp
mov
add
xor
adc
push
arpl
adc
ret
sti
jp
fisubl
cmp
push
out
fcompl
mov
stos
jl
pop
adc
les
sarb
push
inc
push
cmc
int3
sub
int
call
sti
in
jp
sahf
jmp
pop
aad
aad
enter
in
sbb
xchg
mov
or
fsub
clc
cmc
or
sub
sbb
cmp
ret
repz
aam
pop
dec
xchg
pop
das
lods
out
jb
mov
je
test
sahf
mov
orl
dec
cmp
addr16
xchg
jo
mov
arpl
lret
add
jp
lahf
dec
add
repz
push
add
scas
test
adc
push
pusha
in
cmp
jmp
inc
lcall
jg
and
ljmp
popa
rorb
pop
jge
int3
frstor
into
fisubrl
jl
mov
int3
sub
enter
add
mov
pop
ds
sbb
decb
enter
int3
sbb
aas
aam
pushf
ja
adcl
pop
xchg
aad
sbb
mov
dec
pop
jns
xor
push
push
cmp
add
movsb
push
add
lock
add
add
call
adc
jg
pushf
fidivrl
inc
arpl
cmp
sub
add
mov
or
cmpsl
xchg
xlat
pop
cmpl
test
out
mov
dec
cmp
fsubs
jbe
fsubrs
stos
dec
scas
xchg
xor
push
ja
clc
jecxz
cmp
sbb
mov
decl
jnp
hlt
test
jl
and
sub
jae
push
fldenv
test
ret
int
mov
push
cs
test
in
lcall
rolb
inc
cmpsl
or
int
lock
bound
movsb
outsl
dec
dec
fidivs
mov
mov
jne
inc
cmpsb
push
es
cmp
jae
int3
or
idivl
lods
xorb
subb
mov
mov
mov
lret
cltd
or
pop
mov
lret
movsl
cld
pop
stos
call
add
ja
inc
add
fisubrs
xchg
and
jle
or
and
mov
and
or
movsb
sub
or
or
clc
mov
shl
roll
out
xor
push
lods
and
and
xchg
js
add
inc
int3
or
xchg
outsb
pop
sarb
nop
aam
dec
pusha
xchg
xor
das
aam
jl
fsubs
cmp
dec
icebp
xchg
jp
adc
aam
jmp
into
cld
xchg
push
aas
clc
lcall
pop
repz
pop
and
lods
jecxz
jp
add
fwait
enter
stos
call
mov
push
jb
aam
mov
pushf
xchg
or
cli
scas
dec
insl
mov
out
push
xchg
jecxz
jns
jp
sub
sahf
stos
mov
jl
cmp
movsb
sti
pop
mov
pusha
jbe
test
jp
push
fdivrs
mov
lea
add
push
push
xor
or
xchg
sbbb
aad
sub
imul
and
ret
fdiv
push
pop
jns
fwait
out
test
jno
aam
std
mov
pop
dec
imul
stos
imul
in
jp
pop
push
or
bound
and
pop
out
cmp
popf
popf
pop
scas
cmp
xor
arpl
and
mov
pop
add
dec
pop
mov
sbb
inc
lret
nop
push
ss
sti
xorb
arpl
faddl
push
jmp
fs
cmpsl
int3
fstpl
shll
xor
jmp
add
rol
dec
pop
movsl
cmp
enter
lret
dec
lret
sbb
or
lods
sbbb
test
cs
mov
js
and
sbb
hlt
mov
aaa
jle
xchg
jmp
sub
push
call
nop
pop
pop
pop
mov
xor
xor
adc
sub
inc
push
repz
lret
mov
add
mov
mov
fadds
dec
in
aaa
rclb
aam
add
push
push
divl
adc
pop
add
jnp
xchg
sbb
xor
jo
mov
mov
adc
sbb
adcb
cmp
insb
mov
pop
pop
out
out
leave
jo
into
push
dec
lea
push
hlt
mov
cmpsl
loopne
adc
adc
test
jle
fcoms
cmp
mov
sub
push
inc
daa
test
xchg
flds
inc
push
push
pop
or
sub
push
std
cmp
pop
nop
fidivrl
insb
inc
loop
lret
bound
imul
jbe
mov
add
test
push
scas
dec
xor
mov
aam
push
ret
jle
icebp
int
push
pop
pop
out
pop
mov
dec
cmp
imul
or
scas
shl
push
mov
push
dec
fwait
mov
sbb
gs
xor
lock
jle
mov
mov
fmuls
sbb
adc
push
loop
shl
je
mov
lret
inc
out
push
out
int3
out
pop
push
mov
aaa
loopne
js
aas
push
xchg
push
adc
mov
inc
lock
cwtl
ret
add
out
sahf
sbb
xchg
adc
sub
xchg
movsb
jecxz
push
outsl
lock
pusha
adc
fnsave
js
mov
pop
lea
push
mov
push
inc
xor
bound
lret
or
jnp
and
cmpsb
fisubl
mov
push
add
test
push
insl
sbb
loopne
mov
pushf
fdivs
xor
xchg
sub
daa
jg
test
mov
push
cmp
jne
aaa
int3
shll
out
cmc
lret
jno
xor
pop
sub
js
lods
or
push
push
int
jmp
mov
ss
add
inc
sub
push
mov
add
sbb
loopne
jmp
lock
cmp
leave
xchg
and
sti
dec
mov
outsl
out
mov
sbb
lahf
scas
and
mov
fistps
loopne
inc
in
inc
in
cmpsb
imul
push
adc
or
push
mov
push
mov
push
stc
dec
xor
push
add
hlt
sub
insb
fcomp
loopne
in
das
and
jb
movsb
ljmp
fsubs
mov
cmp
leave
arpl
mov
mov
int3
push
push
mov
mov
mov
cld
mov
mov
push
mov
pop
push
lods
adc
arpl
idiv
daa
mov
and
sbb
dec
lods
cmpl
push
or
add
repnz
fwait
lret
shrb
test
mov
cld
lods
iret
push
lahf
sbbl
sahf
pop
cwtl
and
arpl
cmp
mov
das
inc
push
pop
push
mov
dec
jne
call
add
mov
mov
push
adc
mov
and
arpl
mov
aaa
dec
sub
push
ds
outsl
addl
and
sub
xorb
lods
insb
mov
and
mov
cmc
sarl
mov
orb
inc
xor
idivb
jge
inc
test
jg
sahf
xchg
mov
jl
xchg
mov
shl
mov
pop
loopnew
repz
jle
mov
lea
add
dec
outsb
aaa
add
jno
and
sub
and
orb
xor
nop
sub
cmp
enter
inc
aaa
pop
je
stos
pop
xchg
mov
aas
push
lods
js
insb
mov
loopne
cmpsl
jnp
push
stos
or
mov
dec
dec
sub
cmp
jg
sub
sbb
or
dec
inc
xchg
mov
into
and
in
testb
je
test
dec
xchg
lds
in
push
and
cwtl
xchg
cmp
sub
cmpsb
lds
loope
loope
push
fcmovnb
adc
cld
xchg
or
mov
pusha
incl
loope
mov
dec
sub
cmc
or
push
sbb
rcl
aad
cli
mov
data16
sub
push
jl
out
adc
fdivrs
cmp
sub
orb
mov
dec
xchg
mov
lea
out
mov
and
mov
pop
mov
mov
cmpsl
xchg
sbb
and
add
addr16
hlt
inc
push
inc
mov
sbb
jns
xor
in
pop
push
or
imul
pushl
xchg
sarb
movsb
xor
les
iret
popf
rorl
and
mov
out
movsl
dec
aam
push
inc
push
fnstcw
dec
gs
fistps
bnd
leave
or
sub
adc
cmp
sub
pop
std
cs
daa
bound
pop
inc
fndisi(8087
sub
popf
divb
popa
adc
repz
pusha
mov
insl
xchg
mov
cmp
xchg
cmc
fldenv
into
xchg
stos
fstpl
adc
xchg
mov
push
xchg
bnd
ja
mov
das
outsb
cmp
ljmp
sbb
push
and
mov
ficoms
fs
je
cwtl
mov
cmp
adc
dec
sub
fisttpll
xchg
inc
pop
mov
je
push
lds
or
cmp
call
lea
mov
cmpsb
mov
jo
cmp
push
stos
js
sub
fisttpll
adc
jnp
movsb
lret
mov
movsb
inc
xor
gs
movsb
les
ret
in
bound
mov
test
movsl
pop
mov
inc
or
lahf
mov
insl
xchg
adc
pop
repnz
sub
lea
sbb
addl
adc
cmpsl
cmp
xlat
jns
into
xor
rol
data16
cmp
data16
add
ficompl
je
xchg
push
inc
add
mov
shll
cltd
loop
mov
mov
ret
lcall
fstl
pop
mov
aas
and
cli
and
lret
fisttps
jg
loop
push
lcall
iret
pop
add
sarl
adc
xlat
inc
lcall
ljmp
arpl
dec
es
push
sub
sub
test
jo
and
adc
in
sbb
setge
lods
jp
ss
ret
mov
mov
dec
ss
xor
nop
insl
mov
jmp
or
stos
cs
ret
fcoml
sub
cli
and
rclb
ret
decb
mov
test
xor
push
lcall
jnp
mov
push
xchg
jb
orb
and
sbb
sbb
inc
neg
push
data16
pop
je
xchg
test
je
aam
xchg
push
sarl
scas
jecxz
mov
les
imul
mov
mull
out
fsin
add
inc
dec
pop
fisubs
out
inc
nop
jp
inc
rorb
mov
jge
push
sarb
cld
jo
ret
xor
mov
inc
out
in
inc
in
push
sti
mov
xor
cmp
inc
daa
xor
adc
fucompp
mov
mov
mov
pop
scas
inc
stos
inc
popf
lret
jno
dec
cmp
pop
inc
movsb
pop
fs
xor
adc
push
mov
jnp
inc
adc
fwait
pop
in
xchg
xor
sbb
sub
lret
frstor
loope
mov
sbb
aas
fists
mov
ljmp
jae
and
or
mov
fwait
xor
push
in
or
mov
addr16
fwait
mov
jecxz
bound
cmp
es
adc
or
mov
mov
xchg
adc
cli
dec
xchg
cmc
mov
lods
mov
and
negb
int3
and
cmp
xchg
jae
cmp
jne
test
mov
adcb
mov
lods
add
xchg
in
lahf
jecxz
or
add
scas
mov
sub
push
jp
jno
lock
cs
aaa
sub
and
pop
ret
into
pop
rcrl
xor
ret
jae
ja
adc
pop
jecxz
fdivl
insb
sbb
fwait
sub
add
leave
iret
lock
sarl
or
lods
inc
jns
mov
push
pop
repnz
jg
push
adc
aad
pushf
xchg
sbb
repnz
adc
jae
cmpl
mov
adc
pop
lods
sti
cltd
xchg
inc
jle
cmp
dec
jmp
pop
push
stos
dec
dec
cmpl
sar
fisubrl
cli
rclb
push
dec
sti
ljmp
add
push
sub
cmp
pushf
std
mov
jecxz
xchg
jge
int
mov
dec
testl
and
lahf
xor
je
xchg
push
sbb
sbb
mov
sarl
inc
lock
or
roll
add
xor
adc
push
nop
int3
aaa
pushf
add
adc
test
incb
adc
dec
inc
icebp
mov
xchg
shll
jbe
movsl
cltd
xchg
cmc
add
adc
inc
cmp
push
mov
mov
jmp
in
mov
mov
es
push
out
dec
mov
das
andb
lds
mov
jl
dec
and
into
pop
fistpl
les
das
mov
adc
sbb
fldl2t
or
scas
daa
ds
daa
pop
xchg
jb
pcmpgtw
jns
xchg
ljmp
lret
mov
inc
data16
pop
movsl
or
pusha
cmp
mov
lcall
mov
flds
je
loopne
cmc
xchg
adc
lea
sti
push
shll
les
push
xorb
jle
adc
add
nop
xchg
test
push
fisttpl
ret
mov
cltd
insb
pop
loope
inc
shl
jg
push
mov
xchg
lods
ds
and
imul
xor
out
lods
jns
add
enter
fsubrs
inc
hlt
inc
inc
inc
sbb
sbb
in
insl
add
hlt
jae
cld
rolb
in
mov
pop
xchg
dec
push
lahf
ret
pop
ja
xchg
cwtl
dec
sar
jb
pop
jns
loopne
sbb
add
enter
mov
stos
mov
aas
add
mov
cli
xor
jns
cmp
push
out
inc
jl
jae
add
dec
aam
and
xchg
imulb
imul
or
inc
iret
cld
push
mov
std
xchg
mov
jle
cmp
faddl
mov
ljmp
pop
insb
cmp
sub
sti
ret
inc
xor
push
imul
scas
enter
out
mov
mov
sbb
dec
add
xor
mov
jp
iret
ret
vmwrite
mov
push
scas
pop
xchg
cmp
inc
inc
daa
ret
fwait
inc
cmp
fiadds
fstps
xchg
and
jp
dec
mov
pop
and
push
xlat
push
jecxz
pop
mov
jbe
test
and
ja
into
push
xchg
in
stc
and
adc
das
lods
ljmp
push
lret
inc
pop
xor
xchg
xchg
mul
jo
add
shr
fs
xor
fists
call
xor
jg
popa
pop
movsb
dec
mov
scas
aaa
push
jge
adc
lea
dec
dec
or
test
inc
xor
mov
shlb
adc
shlb
xor
lock
mov
pop
in
rcrb
xchg
aad
imul
movsl
add
jno
fdivl
xorl
mov
movsb
adc
sub
xor
or
fsubs
loope
call
pop
iret
rclb
popf
push
xchg
xlat
jns
ror
jne
xchg
fsubl
mov
dec
decb
test
jb
mov
inc
pop
pop
rcll
push
rclb
dec
sbb
sub
insl
sub
dec
inc
sbb
mov
jo
sub
clc
scas
in
jne
dec
sbb
shll
mov
mov
jge
inc
in
es
jmp
enter
dec
cmp
sub
mov
sarl
adc
inc
movsb
incb
sbb
mov
scas
insb
fiaddl
push
push
and
sub
movsl
inc
cmp
shlb
or
or
jae
or
imul
lret
test
cmp
les
je
dec
xchg
xor
cwtl
rcll
mov
mov
mov
mov
in
mov
mov
fs
cmp
mov
xchg
lea
cmp
sub
ret
push
stos
adc
insb
clc
inc
or
xchg
test
mov
fistpl
mov
into
nop
sti
mov
mov
dec
insl
xor
jge
or
push
out
dec
shrb
pop
hlt
in
out
ljmp
mov
pop
cmc
popf
cmpsb
test
jbe
xor
add
hlt
loope
xchg
pop
mov
xchg
in
adc
fsubrs
incl
push
sub
stc
jge
daa
xor
sbb
pop
in
cmp
stos
inc
lahf
pushf
mov
imul
pop
rclb
xlat
and
or
mov
mov
pop
pop
mov
test
movl
repnz
add
mov
mov
adc
stc
mov
std
mov
mov
in
in
push
pop
es
test
stc
or
fs
leave
adc
inc
enter
mov
dec
jp
sub
in
inc
ret
inc
call
iret
out
jmp
push
push
sub
mov
movl
out
adc
test
ljmp
lock
cmp
pop
sbb
adc
imull
out
sub
or
cmpl
xor
fcmovne
in
mov
sbb
pop
inc
fdivrs
into
clc
jne
add
jbe
mov
cmpsl
pop
ret
inc
push
iret
or
enter
push
ljmp
jne
pop
lret
fwait
test
add
and
outsl
adc
out
and
lds
call
mov
iret
mov
jecxz
mov
ffreep
into
inc
stos
adc
and
or
jl
push
push
jge
cmp
adc
scas
sbb
dec
lea
test
clc
push
ret
mov
sbb
add
cltd
inc
xor
cs
xchg
xor
fldcw
push
sub
ret
adc
push
cli
cmc
aam
test
xor
mov
push
pushf
or
enter
leave
sbb
mov
out
mov
mov
xchg
mov
rolb
insb
and
cmp
pop
add
and
test
mov
pop
adc
add
mov
add
in
pop
cmp
adc
xchg
aad
outsl
xlat
jmp
and
popf
test
dec
testl
mov
cs
inc
lret
lea
das
imul
sahf
mov
dec
lds
or
fdivrl
fcoms
mov
add
jno
push
mov
pop
mov
adcl
sarl
test
out
icebp
xchg
push
xchg
add
inc
js
lock
sti
sbb
jl
inc
data16
pop
cs
test
repnz
cmp
xchg
lcall
addr16
adc
lret
lret
fldcw
xor
xor
fiaddl
cmp
divl
mov
ror
sub
popl
ljmp
jnp
push
aam
out
add
dec
sub
fsubrs
pop
inc
mov
pop
out
out
and
sub
insb
jo
xchg
scas
test
movsb
or
aas
or
cmpsb
idivl
iret
jmp
jmp
push
jns
inc
sub
fisubrs
mulb
xor
nop
stos
iret
pop
cmp
lods
js
andb
mov
dec
cwtl
cwtl
aad
mov
pushf
mov
dec
fs
mov
es
lret
push
mov
cwtl
stc
loop
adc
adc
jmp
out
lret
mov
in
fisttpll
lcall
xchg
fisubrs
pop
std
xchg
jl
fidivs
ret
enter
jno
sbb
or
xchg
out
pushf
xchg
push
je
rcrl
pop
inc
adc
or
fnstenv
jne
push
stos
insb
and
cmpsb
loopne
dec
pop
jne
pop
and
xlat
mov
sub
inc
sub
add
xchg
inc
and
mov
dec
fiaddl
dec
mov
xorl
inc
insb
pop
in
fstpl
push
mov
or
xchg
xchg
sarb
fdivrl
sahf
pop
pop
push
or
shll
mov
sub
adc
mov
xchg
test
mov
icebp
scas
push
cmp
idivb
mov
xchg
inc
xor
sub
ja
aaa
inc
jp
iret
cmpsb
xchg
jb
fisubrs
adc
mov
in
pusha
daa
or
data16
rclb
stc
cmp
rcl
fcmovbe
push
jmp
sub
and
pop
cmp
lahf
sub
jae
mov
xchg
push
pop
add
mov
lds
mov
dec
sub
lahf
lea
mov
negb
popf
in
fisttpl
fs
mov
pop
movsb
mov
inc
mov
js
imul
out
push
cmp
sbb
out
pushf
sbb
jmp
cld
mov
mov
add
popf
lods
stos
adc
inc
das
or
lahf
jmp
test
gs
lret
lods
dec
sbb
cs
pusha
cli
push
push
dec
cwtl
in
dec
int
sub
pusha
add
popf
jno
and
xor
or
test
xlat
mov
fstps
adc
sbb
pop
mov
and
js
mov
push
js
nop
fnsave
cmp
jne
pop
stc
out
xchg
adc
jo
hlt
outsl
stos
pop
xor
mov
dec
or
movsb
js
mov
xor
inc
test
adc
add
mull
shl
in
adc
pop
das
xchg
hlt
sub
xchg
int3
jle
mov
dec
mov
cmp
popa
insl
cmp
sbb
in
cmc
jns
clc
xor
or
movups
inc
arpl
out
ja
inc
mov
js
xor
aad
lahf
xchg
jbe
dec
mov
cmp
cwtl
lret
dec
mov
das
data16
add
leave
pop
jnp
pop
xchg
outsl
adc
pop
sbb
cwtl
xor
jne
int
into
sub
dec
fiaddl
and
imul
or
lret
xor
mov
popa
or
addr16
pop
xor
sbb
inc
gs
in
aaa
test
mov
in
fiadds
push
xchg
scas
jno
mov
out
xchg
repz
cmp
and
sbb
fs
rorl
jbe
ret
cli
mov
les
icebp
inc
nop
jo
shl
orb
imul
fisttps
lock
xchg
push
daa
in
aad
cmp
test
test
stc
xchg
jns
sbb
hlt
or
mov
inc
hlt
sbb
cmpsb
addr16
stos
shrl
mov
xchg
jmp
xor
mov
or
sbb
repz
imul
push
ja
lcall
pop
insl
cmp
push
fwait
mov
pop
aad
mov
xchg
cmp
push
jnp
pop
add
and
pop
iret
or
movsl
shlb
pop
mov
push
mov
test
jl
pop
jbe
cli
adc
jle
mov
mov
fildl
jp
xchg
lock
xor
add
pop
cmp
lds
das
xor
cs
sub
inc
sub
pusha
cmp
mov
loop
outsl
mov
stos
loopne
mov
shll
cmpsl
pop
jg
es
stc
shr
sub
adc
loop
icebp
jp
mov
cmc
aad
and
fdiv
rclb
xor
pop
add
lcall
adc
repnz
xor
pushf
stos
and
dec
xchg
fucomip
daa
rcrl
push
sbb
loope
in
mov
negl
mov
mov
mov
push
cld
xchg
scas
push
xlat
xchg
sub
int
jge
or
jae
add
lahf
cmp
dec
sbb
xlat
or
test
loope
cmp
int
scas
sub
addr16
mov
fstpl
lcall
retw
ss
shrb
fwait
outsb
xchg
addr16
cltd
xor
dec
xchg
mov
sub
dec
lds
nop
hlt
cmp
xchg
and
jne
fwait
and
sub
mov
adc
sub
pop
mov
inc
aaa
jo
stc
sbb
or
adc
lock
push
mov
pop
fisttpl
inc
les
push
scas
mov
notl
xchg
movsl
pop
mov
mov
adc
outsb
ja
jle
mov
add
inc
stos
loopne
add
jae
push
sbbl
push
iret
add
bound
lods
and
xor
xchg
divb
pop
adc
stos
mov
fs
sub
adc
je
fsub
arpl
cmc
rep
pop
push
nop
shll
jbe
xor
fstl
or
ja
loope
and
sbb
imul
pop
push
out
std
or
lahf
xchg
inc
jae
jecxz
sahf
add
push
sbb
sbb
fwait
and
inc
push
sbb
dec
in
mov
pop
pop
lods
add
jno
xor
inc
push
jecxz
pop
cltd
popf
iret
xchg
repnz
pop
cmpb
neg
inc
js
fisttpll
jecxz
jb
push
jae
push
cld
dec
inc
mov
cmp
daa
stc
loope
ljmp
ja
shrb
pushf
cmpsb
fcmovu
shrb
pop
cld
repz
push
inc
mov
mov
and
sahf
dec
aad
in
and
mov
aad
push
or
sbb
int3
mov
scas
pop
pushw
jnp
addr16
lds
inc
ja
xchg
mov
fsts
ficoms
inc
andb
sub
push
rcll
loope
into
lahf
add
lahf
sahf
mov
mov
jns
movsl
add
add
mov
cli
in
jmp
push
dec
hlt
cmp
out
inc
ret
and
pop
mov
cmp
mov
js
inc
cmc
sub
leavew
push
aam
shl
cmp
jl
mov
enter
jg
dec
repnz
mov
adc
dec
in
aad
lds
mov
leave
or
sbb
and
std
inc
in
adc
mov
sbbl
das
fsubr
mov
out
cmpsb
js
and
push
sbb
nop
sub
jecxz
mov
lods
sbb
xchg
scas
adc
int
pop
xor
sub
inc
negb
jmp
aad
cmp
addb
js
cmp
sti
lock
iret
daa
mov
rorb
stc
cli
insl
fwait
movl
add
push
mov
out
out
push
jnp
mov
cs
jge
faddl
aaa
das
sub
outsl
fdivs
test
jbe
lcall
outsb
dec
and
mov
lret
xor
pushl
into
xor
jge
fstpt
mov
into
mov
or
in
mov
sub
popa
xchg
sbb
stc
pusha
mov
lret
or
add
aaa
sahf
lahf
jbe
sbb
mov
xor
shl
mov
mov
adc
fsts
int3
add
int3
and
pop
sbb
les
aam
adc
adc
ret
cld
enter
cmp
and
jmp
or
das
idivl
cmp
fistpl
sahf
mov
sbb
mov
dec
jp
ljmp
or
loopne
cmpsl
mov
inc
mov
cmpsl
xchg
ret
jo
out
pop
int
sub
xchg
roll
lods
pusha
lcall
jle
add
arpl
out
aas
push
and
pop
popa
xchg
aas
rolb
cltd
fdivrp
push
sub
inc
out
or
repz
les
jb
pop
lret
adc
or
or
pop
in
add
and
aaa
int
mov
push
and
push
pop
push
in
jb
sbb
xchg
clc
adc
test
pop
jnp
sahf
imul
cmpsl
and
jmp
stc
repz
shll
out
mov
push
mov
lret
push
or
std
cmp
faddl
notb
and
pop
mov
mov
sbb
inc
adc
add
scas
imul
mov
jecxz
xor
mov
cmpsl
cmp
sarl
dec
mov
pop
daa
or
cmpsl
arpl
cld
add
cmp
es
daa
jle
data16
mov
adc
push
sbb
lea
test
test
and
or
lods
inc
and
sub
dec
xor
repz
test
sahf
outsb
imul
sub
mov
mov
jbe,pt
mov
data16
pop
jl
mov
pop
dec
jecxz
jae
je
ds
dec
bound
and
xor
cmp
insb
aad
out
dec
mov
test
lods
mov
aam
jno
fwait
scas
sbb
or
jmp
push
xchg
or
ret
mov
add
ror
sbb
jne
cmp
movsl
fcmovbe
sub
dec
ficomps
das
dec
test
comiss
xchg
aad
pop
cmp
test
dec
sub
pop
movb
pusha
cmc
in
jb
in
and
sbb
lret
nop
adc
movsb
push
jp
jno
outsb
pop
outsl
xchg
inc
xchg
sbb
xor
cmpsb
enter
xor
or
addr16
rclb
push
push
repz
icebp
int
lcall
pop
int
lret
clc
jecxz
sub
xadd
add
mov
orl
cmp
js
push
pop
adc
loopne
jl
sbb
test
ds
dec
dec
cmc
mov
jne
lahf
cli
jae
rcll
dec
xchg
movsb
mov
inc
les
fwait
mov
xchg
dec
repnz
push
mov
rcrl
fmuls
inc
dec
xchg
bound
and
mov
xchg
xor
dec
xor
sahf
cs
js
sub
lods
dec
imul
add
pop
sub
xchg
insl
popf
mov
mov
testb
popa
iret
stos
andl
mov
and
or
or
adc
in
or
adc
cwtl
ret
or
inc
sarb
out
iret
sub
and
enter
je
imul
jge
notl
mov
xor
in
cmpsl
popa
jp
cmpsl
mov
or
jb
cmp
outsb
fs
stc
add
test
dec
dec
int
insb
dec
out
xchg
sbb
dec
mov
fs
test
add
clc
pop
loopne
stos
push
cmp
pop
idivb
jle
mov
inc
push
dec
inc
add
test
pop
mov
sub
inc
aad
mov
out
movsb
gs
mov
cmp
ret
gs
pop
adc
jp
rorl
xor
sbb
outsb
dec
fwait
adc
cmpsb
mov
inc
jo
add
test
repz
fistps
cmp
inc
lahf
hlt
loope
inc
fimuls
aas
add
pop
dec
mov
mov
mov
xchg
in
jb
pop
rcl
cmp
pop
out
sbb
pop
lods
pop
add
mov
loopne
inc
stos
ret
pop
ss
and
cmp
es
arpl
test
or
sub
int3
mov
ja
insb
dec
std
xchg
insb
icebp
fdivrl
in
mov
ficoml
ds
jmp
hlt
push
pop
or
fwait
gs
add
mov
add
xor
in
lods
gs
mov
or
cltd
lods
imul
cmpsl
jno
filds
shll
arpl
or
cs
jmp
pop
ror
inc
push
dec
cltd
push
pop
shlb
out
mov
or
in
inc
jbe
mov
addr16
push
xor
test
testl
adc
add
rolb
sub
out
mov
aad
enter
adc
cmp
inc
xor
dec
sbb
cmp
mov
jbe
inc
test
mov
mov
or
or
push
xchg
jb
nop
add
mov
imul
push
xor
inc
lods
scas
rorl
stos
push
mov
adcb
sbb
mov
aad
mov
ficompl
out
rcl
cld
mov
test
fldl
pop
xor
cmp
cmp
sbb
push
repz
pminsw
fcompl
pop
out
dec
mov
mov
ror
dec
das
lahf
or
scas
inc
shll
rcll
inc
xor
inc
call
mov
outsb
sub
cmp
insl
xor
pop
jno
loopne
cwtl
pop
bnd
push
sar
sbb
enter
jp
push
insl
leave
adc
test
loopne
sbb
shll
xchg
mov
movsl
in
and
pop
lock
int
scas
jmp
adc
mov
push
push
add
int3
pop
std
insb
dec
xchg
negl
cmp
in
jmp
cmpsl
pop
fdiv
mov
push
and
in
movsl
jmp
lcall
into
xor
fistpll
test
aam
ss
pusha
loopne
fisubs
push
in
out
sbb
or
pusha
mov
xchg
and
imul
sbb
mov
cld
loope
and
mov
sti
push
cmp
and
sub
test
mov
arpl
pop
ds
sbb
xor
push
cmp
idivl
push
fmul
push
shll
popf
loopne
xor
add
lret
sub
inc
jb
leave
push
mov
xchg
sub
cltd
xor
adc
roll
inc
std
pop
scas
xchg
popf
test
push
inc
out
cmp
dec
rcrb
pop
jo
jbe
ficomps
icebp
aaa
hlt
jae
aad
jmp
hlt
inc
out
sbb
adc
repnz
out
test
lods
pop
fs
inc
mov
es
loopne
pop
rcr
and
pop
jge
ja
sbb
push
sbbl
out
outsb
iret
push
imul
mov
inc
je
inc
add
pop
mov
cld
xor
pop
or
cs
pop
add
rclb
jb
sub
push
push
andl
addr16
test
dec
xor
out
jne
xor
aas
sub
jmp
movsb
mov
xchg
inc
fsts
add
in
or
adc
lods
push
ret
push
sbb
rcrl
lcall
movsl
out
or
pop
rcll
pushf
pop
or
push
int3
int
repnz
fldcw
or
pop
and
jns
hlt
fcoml
sbb
shrl
daa
xchg
jge
xor
insb
dec
test
ficomps
sbb
mov
lds
cmpsl
push
push
sarb
lods
dec
loop
inc
sbb
inc
icebp
mov
imul
push
lret
rolb
pop
outsl
mov
inc
dec
das
mov
rcr
loop
scas
in
adc
xor
insb
insl
xchg
stc
sbb
inc
test
lea
cltd
add
pop
lahf
orl
int3
out
aaa
xor
iret
dec
xchg
mov
scas
pop
xchg
mov
mov
pusha
sahf
cmp
nop
pop
insl
or
xchg
mov
loopne
test
and
mov
cmp
cmp
mov
lock
cmc
or
jmp
push
aaa
shrb
mov
clc
daa
loope
pop
mov
xchg
gs
fsubl
xor
mov
nop
xchg
inc
out
dec
idivl
xchg
dec
inc
imul
lds
and
fwait
fs
adc
sbb
in
inc
loopne
mov
test
xor
inc
fmulp
xor
or
mov
mov
arpl
cmp
xchg
mov
pop
or
neg
adc
pushf
outsl
mov
imul
lahf
mov
mov
mov
test
insl
sbb
daa
notl
pop
loopne
mov
mov
fadd
bound
outsb
xor
into
jnp
add
dec
jnp
lea
or
mov
insb
mov
arpl
enter
pop
and
lea
sub
movsl
std
mov
or
jp
lahf
xchg
mov
adc
adc
push
leave
and
dec
xchg
cmpsl
push
mov
ret
push
jmp
jnp
pop
xorb
and
or
mov
inc
jmp
fprem1
out
inc
cld
test
aaa
dec
xchg
push
xchg
repnz
daa
xchg
mov
sbb
test
cmpsl
sub
ja
jecxz
scas
pop
addr16
pop
mov
jg
add
mull
mul
insl
xchg
pop
xchg
out
push
mov
mov
add
ss
outsl
fwait
and
popa
fbld
xchg
sub
in
int
mov
nop
push
bound
in
sbb
fwait
mov
aas
in
sahf
pop
push
mov
push
inc
imul
adc
pop
call
push
adc
out
adc
maxps
fucomi
fwait
mov
jb
out
mov
fnstsw
mov
sbb
pop
and
adc
icebp
fistl
mov
cmp
addb
sub
add
jecxz
cmpsl
rol
loopne
inc
enter
test
sub
add
lea
loope
sahf
mov
insl
adcb
sbb
das
test
dec
lea
mov
adcb
inc
jg
cmp
or
sbb
inc
dec
cli
jno
int
sti
stos
cmp
iret
call
mov
orl
sub
fnstsw
popa
mov
mov
fsubl
mov
in
jge
fdivs
mov
in
jb
jmp
inc
adc
adc
inc
pushf
arpl
hlt
jno
es
xchg
scas
repnz
rcrb
lahf
testl
movsb
xchg
add
jg
xor
cli
add
ja
test
ret
aam
lret
mov
lret
mov
xor
jmp
lret
and
and
fisttpl
es
daa
jnp
addr16
xlat
cmpb
inc
pop
dec
xchg
mov
push
mov
sbb
push
cmp
jns
mov
imull
shrb
pusha
std
test
aad
les
icebp
int
jae
xor
les
and
push
mulb
dec
push
mov
pop
out
mov
pop
push
test
mov
stos
adc
sbb
mov
or
xchg
sahf
mov
jecxz
xor
lea
lock
iret
insl
imul
pop
adc
push
rorb
add
mov
sub
dec
jge
push
pop
push
jl
pop
int
loope
sbb
aad
xchg
fisttps
fs
or
icebp
xchg
push
in
arpl
shll
ljmp
jecxz
rclb
sahf
ss
filds
jl
adc
shlb
sbb
lret
mov
lods
or
sti
and
dec
dec
rorb
sbb
mov
dec
movb
dec
stos
ss
xchg
test
lcall
xchg
push
data16
push
xlat
jl
into
addr16
push
fs
cwtl
aam
or
push
xchg
cmp
dec
mov
adc
test
pop
in
dec
ja
pop
divb
scas
xchg
cmp
cmp
inc
xor
test
adc
push
sbb
jecxz
addr16
and
jnp
pop
and
lahf
mov
addr16
add
lcall
adc
scas
mov
cmpsb
test
inc
push
pop
add
stos
lcall
push
push
sub
mov
mov
push
push
or
dec
imul
mov
bnd
dec
icebp
adc
fs
decl
and
xchg
or
xchg
lods
or
ja
sub
fldpi
mov
stc
in
in
out
stos
test
adc
pop
outsb
inc
or
outsl
mov
cmp
pop
ss
mov
pop
loop
cmp
aam
inc
ret
pop
int3
push
inc
movsl
push
mov
mov
fstpl
xchg
sub
xchg
mov
leave
lahf
mov
and
push
aas
ror
les
repz
das
or
cmpb
aas
jecxz
jecxz
sub
add
imul
cmp
push
cmp
mov
mov
push
stos
imul
push
inc
gs
inc
sub
pop
imul
fdivrl
pop
xlat
push
or
jne
inc
mov
and
and
xchg
test
fucomp
test
and
movsl
adc
mov
ds
mov
icebp
xchg
call
jb
repnz
push
pop
jne
mov
aam
xchg
scas
in
cld
pop
mov
mov
mov
aas
xor
out
xchg
js
dec
gs
xchg
or
mov
pop
push
imul
movsb
jge
lahf
jge
mov
pop
aam
fwait
jo
out
nop
pop
ljmp
dec
repnz
push
pop
sub
mov
pop
xchg
xchg
loop
push
jmp
jecxz
mov
push
push
push
insl
cwtl
mov
outsb
pop
cmc
or
add
sub
sbbb
xor
xor
adc
aaa
cmp
adc
adcb
mov
cmp
mov
ds
mov
add
mov
icebp
out
inc
mov
mov
sbb
stos
mov
dec
pop
jne
popa
leave
nop
inc
sub
sahf
cmp
mov
movsb
sub
loop
aas
inc
and
sti
and
fwait
ljmp
add
inc
adcl
pop
and
and
jle
outsb
mov
or
sub
shll
fnstsw
jns
dec
add
mov
or
rep
out
fwait
jb
int
dec
xchg
add
nop
jecxz
jle
xchg
fistl
push
inc
leave
out
mov
sub
xchg
addr16
pop
mov
push
adc
pop
adc
push
lahf
xchg
inc
mov
pop
jmp
cwtl
cld
pop
jl
lods
cmp
or
fisttps
lock
enter
mull
mov
pop
cwtl
xchg
outsl
movsb
inc
les
aam
push
jp
ja
pop
pop
repnz
divl
adc
and
push
lods
and
push
sub
inc
or
mulb
xchg
call
mov
adc
lods
ds
pop
xor
sub
or
push
pushf
sbb
ret
psubq
leave
pop
cs
lret
sub
addr16
pushf
cmp
mov
add
movsl
mov
arpl
dec
cmp
add
pop
jp
jnp
sarb
je
and
clc
fwait
ss
adcb
xor
mov
mov
fsubrl
into
std
inc
ds
pop
sti
mov
lret
nop
mov
ja
lods
mov
fucomi
push
inc
mov
lods
mov
popa
add
jmp
push
cmp
jl
pop
push
mov
sti
rclb
arpl
rcl
cwtl
add
das
fdivl
imul
dec
stos
push
mov
enter
jbe
jns
iret
xchg
in
push
nop
add
stos
and
mov
mov
sbb
ficompl
or
outsb
in
adc
dec
add
lods
mov
mov
jp
mov
dec
outsb
into
hlt
or
and
jmp
movsl
cli
es
adc
pusha
sub
cs
dec
dec
fists
sub
cs
mov
mov
shll
xchg
add
sub
push
and
aad
into
mov
mov
pop
mov
xchg
jne
inc
vpavgb
sub
adc
and
in
pop
or
ret
push
shrb
sti
lret
stos
mov
enter
ds
mov
and
out
push
sbb
mov
ret
push
dec
inc
aaa
fwait
pusha
adc
and
push
add
test
cmpsb
ljmp
dec
pop
test
daa
mov
out
cwtl
adc
xor
sbb
ficoms
cld
pop
ss
gs
adc
inc
pop
or
pop
xchg
jne
cmp
push
fisubrs
pop
adc
push
mov
cmp
stos
lea
mov
insl
test
leave
add
mov
outsl
mov
or
stos
in
popa
icebp
arpl
jmp
insb
cmpsb
jbe
rcrb
xor
mov
daa
mov
ja
out
insl
dec
out
sbb
mov
leave
sub
xor
and
inc
pop
mov
xor
push
repz
lret
mov
cmpl
je
pusha
rcrb
pop
pop
jnp
icebp
push
into
mov
cli
mov
mov
jle
jmp
icebp
pop
movsb
adc
out
mov
les
jae
shrb
popa
cltd
lods
cmpsb
sub
pusha
add
outsb
int3
enter
sbb
xor
mov
push
push
fsubl
scas
cmp
subl
hlt
lret
outsl
mov
fwait
movsl
ret
insl
into
push
dec
lret
movsl
pop
pop
cld
lds
sub
xchg
xchg
dec
data16
cmpsb
clc
inc
dec
pop
ja
jbe
push
xchg
rcr
xchg
pop
adcb
cmp
jmp
insb
xor
mov
sbb
fsubs
stos
xchg
mov
dec
pop
roll
jecxz
adc
imul
rcrl
stos
stos
insb
test
xchg
je
leave
mov
push
mov
fcmove
jg
jnp
push
sbb
mov
fdivrl
dec
push
xor
imul
sub
dec
daa
js
xor
sbb
sbb
aad
not
push
cmp
fidivs
jecxz
loope
xlat
stc
cmpsb
out
mov
xor
inc
dec
adc
cli
sti
mov
cmpsb
das
enter
mov
sbb
mov
xchg
sbb
lcallw
sti
test
insb
inc
daa
push
mov
sub
inc
adc
fndisi(8087
rcrb
sbbb
xchg
sti
mov
fsub
xchg
or
fcmovnu
sbb
icebp
xor
jnp
jns
adc
push
xchg
push
push
std
popl
rolb
orb
jg
outsl
push
popf
into
aad
cmpsl
xor
mov
icebp
mov
stc
sarl
push
mov
popa
call
push
adc
jns
sti
and
outsb
adc
repz
cmc
or
aaa
pop
ds
jno
jns
out
loopne
clc
in
xchg
das
mov
sbb
or
xor
int3
ja
inc
ljmp
hlt
loop
nop
orb
sub
sub
into
push
jl
push
out
mov
jle
popa
xor
jp,pn
sub
in
scas
sub
xchg
inc
inc
outsb
xchg
jnp
jo
test
test
lcall
ss
sub
push
push
stc
lods
rcrb
xchg
mov
test
mov
sub
adc
das
mov
aad
cmp
jmp
out
imul
ror
popl
call
mov
cmc
aas
add
xor
cltd
repz
push
and
out
inc
or
nop
jae
jbe
push
cmp
jecxz
and
mov
out
xor
clc
je
mov
stos
aam
jns
pop
inc
xchg
adc
ja
mov
or
push
dec
cmpsb
xchg
mov
or
mov
adc
movsl
mov
clc
test
shll
mov
jns
dec
jno
pop
jle
inc
enter
movsb
xor
mov
xchg
push
repnz
cltd
arpl
inc
lods
lock
jl
or
xchg
movsb
or
dec
imul
jae
fwait
dec
cmp
inc
pop
out
in
xchg
rol
fisubrl
pusha
enter
testb
xchg
fsub
repz
rclb
inc
loope
loop
xchg
mov
adc
lret
jle
push
xchg
jle
nop
cli
mov
dec
shrb
sbb
andl
jbe
dec
es
in
cmp
fwait
sbbb
sahf
rcll
sub
adc
outsb
or
jge
sti
mov
jb
cmpsb
in
nop
and
pop
aam
leave
sbb
mov
add
xor
push
cmp
cmp
lock
mov
mov
pop
mov
mov
fadds
push
cmp
add
imul
sahf
pop
push
jb
sub
or
and
jecxz
mulb
dec
out
pop
sub
jecxz
loopne
pushf
sar
add
bound
mov
adc
out
xchg
mov
xchg
aaa
mov
repnz
mov
fsubr
xor
and
popa
mov
mov
in
pop
rcr
ljmp
adc
inc
inc
gs
dec
ret
adc
mov
cltd
lcall
leave
mov
sub
lret
push
out
dec
iret
in
test
mov
aad
adc
and
repz
fmull
sbb
dec
push
adc
std
push
lods
es
push
mov
mov
sarl
cbtw
movsl
sti
cs
mov
adc
mov
lds
xlat
repz
add
add
loope
syscall
imul
sbb
out
nop
stos
out
ret
call
mov
xchg
scas
lea
and
in
sbb
sub
jb
jbe
jge
sbb
pop
xor
jle
xchg
or
int
jbe
push
mov
xchg
sbb
rolb
sub
lret
lcall
pop
cmp
repnz
cld
sbb
outsl
loopne
les
xchg
sbb
push
gs
sub
mov
push
mov
in
jae
stos
pop
pop
dec
xchg
out
jbe
adc
push
ret
xlat
add
ror
push
jae
sbb
xor
mov
mov
xchg
jo
mov
lret
push
fstpl
push
mov
sub
hlt
sbb
dec
lock
iret
or
aas
pop
inc
sbb
scas
les
outsb
gs
shlb
mov
inc
iret
xlat
cmpsl
popf
shlb
push
mov
shrl
fbstp
jmp
dec
test
inc
scas
xor
mov
mov
jg
ljmp
lcall
cmc
rcr
cmp
and
add
lock
or
negb
ret
lret
in
ret
ficoml
repnz
sub
lret
and
fucom
roll
push
js
out
cli
scas
sbb
dec
xchg
popf
in
dec
mov
mov
xlat
mov
int
rclb
and
stos
push
mov
leave
or
inc
je
xchg
inc
js
out
icebp
pop
out
insb
mov
adc
jmp
xor
lret
mov
jb
in
fists
in
test
call
clc
push
shlb
scas
test
xor
add
mov
pop
test
and
out
test
pushf
in
sub
insb
cld
orb
pusha
lcall
push
push
arpl
es
add
push
and
data16
adc
push
je
mov
lahf
cmc
push
inc
push
mov
xchg
mov
mov
sbb
popf
repz
sbb
testl
mov
rol
xor
xchg
adc
sbb
into
xchg
jno
fldl
mov
mov
sbb
xor
jno
push
sub
push
shll
push
xor
imul
out
dec
outsl
fs
cltd
sub
int3
adc
xor
cs
sbb
shrl
mov
adc
hlt
push
dec
or
shll
cwtl
sub
xor
push
inc
mov
das
jmp
fdiv
mov
xor
push
decb
push
pushf
add
aam
jecxz
std
xlat
in
cld
mov
mov
lcall
xor
je
das
ljmp
dec
adc
pop
cltd
insb
sub
sbb
loop
or
cli
stos
or
testb
in
xchg
dec
in
dec
mov
xchg
insl
add
insb
mov
in
lods
mov
sub
and
fs
jb
or
dec
dec
das
clc
xchg
fcoms
add
add
mov
and
mov
sbb
mov
jmp
dec
mov
scas
icebp
or
sbb
pop
aam
or
pop
mov
pop
xchg
cld
mov
mov
and
out
lods
add
ss
stos
jo
cmpsb
mov
out
jne
outsb
call
int
add
mov
lahf
mov
cmpb
inc
rcl
in
stos
xchg
shr
fistl
jae
sbb
and
mov
scas
scas
mov
add
loopne
mov
dec
and
push
in
popf
call
sub
inc
enter
lea
inc
or
dec
sbb
mov
mov
movsl
sbb
rcrb
jl
cmp
sbb
je
aam
jle
pop
rcrl
out
cmpsl
rorb
push
push
data16
mov
in
aam
cwtl
jno
repz
mov
lahf
sub
mov
dec
test
mov
mov
pop
aaa
or
add
es
sub
sbb
dec
add
sbb
shll
es
sub
movsb
sbb
mov
or
or
mov
xchg
stc
aaa
js
cltd
jo
sti
cmpl
dec
jmp
aas
ja
sbb
call
xor
cmpsb
fucom
fwait
adc
mov
jmp
jo
sbb
cltd
adc
fwait
shrl
or
div
jmp
shrb
jecxz
cmp
xbegin
xchg
mov
and
mov
std
sub
lods
dec
cmp
jl
mov
fcmove
sbb
pop
mov
test
jbe
inc
jl
es
testb
jg
test
je
mov
push
lock
stos
xchg
and
arpl
xchg
int3
insl
fists
and
or
aas
popf
pop
insl
push
pushf
xchg
xor
fstl
mov
jb
cmp
inc
push
sti
sahf
sbb
adc
rcrl
jo
lods
jl
mov
je
repnz
or
mov
push
les
or
jne
loope
lfs
push
inc
das
pop
leave
cltd
clc
ds
lods
stos
cmpsb
mov
and
mov
aad
inc
jle
vpmulhw
lret
jecxz
xchg
sti
test
jg
std
clc
inc
cmp
mov
jg
sub
jo
divb
push
aas
test
rcrl
adc
add
into
addl
xlat
and
das
xor
loope
fucomp
movsb
push
adc
mov
in
pusha
call
or
incl
xchg
jne
imul
call
jg
sarl
lret
mov
mov
push
xchg
xchg
inc
sbb
sbb
rorl
inc
add
jno
mov
scas
out
add
aam
fdivrl
cmc
adc
dec
push
adc
lods
and
jle
sub
mov
xlat
mov
imul
clc
dec
fnstsw
aam
xor
pushf
fcmovnb
ds
jge
mov
lods
testl
mov
and
out
popa
jne
call
rorb
add
dec
fs
jge
xchg
into
fs
cmp
inc
outsb
popf
lock
and
adc
aaa
call
xorl
mov
inc
into
shl
pop
scas
int3
mov
enter
inc
out
jmp
mov
xchg
andb
pop
push
test
sub
pop
jmp
add
sahf
xlat
insb
sbb
mov
cmp
mov
out
or
shl
popf
das
push
fcmovbe
rcrb
cmp
mov
mov
push
shl
mov
fcomps
movsl
push
popf
mull
rep
movsb
pop
mov
das
add
aad
mov
and
and
call
movsl
rcr
xchg
leave
icebp
xchg
mov
xchg
mov
inc
js
decl
andl
cmp
mov
xchg
mov
adc
lahf
enter
push
daa
inc
jne
sbb
fdivl
mov
lods
in
jae
scas
jnp
sub
pushf
mov
mov
cmp
push
or
inc
cmp
and
dec
outsl
dec
adc
sbb
fidivl
cmp
imulb
xorb
or
pop
sub
enter
sti
lret
inc
pop
push
mov
xchg
paddusb
cld
popf
pop
shlb
sub
clc
fmul
dec
push
xor
mov
pop
test
mov
cmp
jl
daa
fdivrs
test
std
jg
cmp
sub
in
stc
jp
into
into
jns
lret
enter
push
jnp
faddp
inc
sbb
std
adc
sbb
adc
inc
jnp
in
add
inc
jb
or
mov
jb
std
clc
sbb
insl
ret
adcl
xchg
movsl
cmpsl
arpl
popf
mov
mov
scas
sbb
cmp
push
xchg
add
mov
add
cmp
add
icebp
pop
icebp
int3
in
lods
mov
mov
and
dec
dec
sbb
add
call
jmp
pop
inc
iret
std
jnp
xor
int3
push
mov
add
test
insl
int
hlt
stc
pop
sub
jge
test
jl
push
xchg
lock
dec
dec
jno
ljmp
mov
sbb
lods
movsl
icebp
dec
insb
mov
sti
xchg
cmp
adc
stc
arpl
iret
xor
adc
and
adc
mov
out
ss
imul
jae
mov
out
shrl
cmp
bswap
mov
adc
push
pop
fbld
lahf
cmp
dec
fcmove
inc
lods
leave
inc
push
shlb
aad
out
popf
hlt
mov
pop
sbbl
js
out
and
mov
mov
aas
and
pop
lahf
fistpl
shl
call
enter
sbb
dec
jp
inc
fs
insl
es
dec
ss
mov
jle
sti
inc
fdivrp
mov
push
sub
dec
ret
inc
ljmp
cmc
inc
dec
rclb
mov
ret
les
mov
fstpl
mov
sub
jge
imul
minps
es
mov
sbb
cld
mov
mov
ds
mov
hlt
aas
mov
lahf
nop
mov
jge
mov
and
jbe
sbb
in
mov
shll
adc
add
sbb
mov
xchg
jb
cwtl
mov
lret
adc
sub
or
and
sbbb
cmpsl
dec
sbb
xor
sbb
pop
and
xlat
or
add
mov
jp
dec
mov
mov
mov
fdiv
cmp
pop
sub
mov
sbbb
dec
in
mov
bound
mov
sarb
adc
stc
in
test
lret
mov
jecxz
inc
ficomps
cltd
int3
fmul
test
mov
or
mov
imul
mov
js
int
scas
iret
sub
cmp
and
ja
add
mov
pop
jecxz
push
scas
je
test
pop
mov
mov
and
clc
loope
mov
fisubrl
ret
mov
jl
faddp
dec
mov
int3
outsl
mov
fnstsw
push
mov
outsb
pop
inc
movsb
std
fildl
jg
loopne
mov
xchg
bound
mov
mov
or
fldl
xchg
cmp
into
jle
mov
sub
cmp
fisttpll
pushf
xor
test
dec
out
mov
inc
adc
xor
loop
push
mov
xor
jae
ljmp
jp
test
cmc
or
push
and
shrb
fdivrl
jp
cmp
fs
cltd
dec
dec
xor
out
add
mov
repnz
rorl
stos
push
ret
dec
and
sbb
pushf
pminsw
aaa
in
add
mov
fwait
mov
lds
or
movsl
fnstenv
mov
xor
pop
bsf
dec
xor
shrl
jmp
inc
mov
adc
cmp
das
mov
cmpb
fcoml
mov
daa
mov
in
test
pop
lahf
test
repz
in
mov
orb
cltd
aaa
xor
xchg
mov
dec
cmc
insb
push
jae
push
cmp
cmp
test
sbb
mov
insb
mov
stc
mov
rcrb
cmc
inc
int3
sub
test
int3
out
sbb
xchg
in
pop
cmp
rcll
cli
mov
es
out
cli
pop
outsl
lods
xchg
mov
push
dec
pop
test
sbb
xchg
pop
ss
push
mov
sub
ret
test
in
sbb
add
popa
fwait
scas
jmp
sub
aas
sub
push
test
ja
aad
jne
lea
sub
or
mov
dec
mov
push
outsl
xchg
call
stos
dec
mull
mov
mov
adc
shll
cmp
and
insl
adc
aaa
ja
test
out
cmc
sub
repnz
jg
insb
and
test
mov
xchg
add
out
sub
cmp
pop
add
cmc
xchg
dec
xor
test
push
pushf
cmp
rolb
sbb
jle
lea
sahf
leave
mov
xchg
cmp
and
push
sub
cmp
and
mov
mov
lret
scas
cwtl
xchg
inc
dec
pop
stos
or
dec
dec
lret
and
push
stos
aad
adc
add
jae
xchg
push
jmp
dec
push
hlt
addr16
mov
xchg
aad
mov
push
movsb
fsts
sbb
and
sub
rcll
subl
cltd
imul
iret
inc
out
mov
movsb
cltd
or
ret
sub
jae
xor
push
les
xchg
stos
xchg
adc
cmpsb
cmc
mov
sbb
mov
cmp
push
mov
cmpsb
add
jns
mov
pushf
aad
gs
sbb
test
sub
fiaddl
and
pop
fs
xchg
sarl
pop
push
jp
sarl
mov
sub
loop
scas
in
fcmovbe
mov
cmp
xor
adc
daa
pop
xor
jmp
stos
mov
jnp
mov
cmp
shrb
sbb
iret
adc
jp
pushf
pop
insl
mov
cmpsb
sub
mov
cld
xor
cmpsb
or
leave
hlt
push
xor
jp
stc
or
insb
pop
dec
ret
repz
pop
in
fstpl
imul
add
mov
je
sahf
rorb
and
enter
mov
push
push
imul
jns
inc
jl
jno
jecxz
cmp
test
and
mov
xorb
stos
mov
inc
fmuls
imul
mov
mov
out
daa
cmp
pop
ret
popf
sahf
mov
push
scas
adc
push
adc
mov
scas
mov
and
insl
ror
mov
sub
hlt
jno
sub
add
repz
pop
jno
mov
call
jle
ret
out
movsb
sbb
outsb
or
scas
test
cmp
lret
fcoms
aaa
fildl
ljmp
or
mov
stos
jb
aaa
sti
push
push
call
bound
cs
out
out
ja
cmp
outsb
test
mov
xchg
mov
xchg
test
add
nop
flds
cmpl
mov
inc
cmp
inc
rcl
dec
jmp
cwtl
and
inc
fimull
fadds
xor
divl
stos
mov
mov
insb
scas
stos
leave
inc
dec
xchg
fdivrp
loop
dec
mov
xor
mov
ss
xlat
stos
mov
ret
lods
xchg
call
dec
inc
sbb
xor
js
push
fsts
add
cmp
and
fisttps
ja
sub
adc
cmpsl
lock
and
stos
push
lock
sbb
lock
or
cmp
fsubrl
je
clc
imul
rorb
mov
fnop
push
notb
cmp
mov
push
pop
push
sarl
test
ja
faddl
adc
aaa
sub
ljmp
add
in
add
ror
mov
das
rcll
add
xchg
push
ror
adc
movsb
jl
xchg
mov
or
jo
jmp
ficoml
fimuls
fidivrs
mov
add
lea
nop
jge
xchg
add
or
loope
cs
xor
and
mov
ret
mov
inc
jl
adc
dec
lods
cmpsb
negl
lret
mov
insb
or
and
mov
out
stc
and
or
and
notb
notb
jns
ficompl
mov
add
jo
xchg
sub
mov
xor
ds
imul
ja
icebp
sub
cmpl
add
lds
sahf
cmpl
imulb
js
dec
xchg
add
jb
test
push
into
and
xchg
insl
xchg
shlb
adc
aas
loope
mov
dec
mov
dec
cltd
mov
ljmp
xchg
sub
cmpsl
scas
insb
test
inc
mov
movsb
lcall
jno
test
jecxz
sbb
push
ds
clc
sub
flds
rcrl
cmp
jno
jnp
hlt
fisttps
and
adc
nop
mov
jmp
shlb
jmp
icebp
insl
push
out
add
insl
addl
ret
cmc
adc
pop
aas
mov
adc
or
sbb
mov
imul
rorl
jne
and
mov
jbe
or
imul
inc
sub
dec
cmpsl
xor
out
jge
jecxz
adc
lds
jp
cmp
sub
lods
int
nop
adc
jb
popf
cltd
xor
aaa
inc
imulb
and
xor
shl
sbb
lock
daa
pop
sub
rcrb
in
out
popf
push
enter
adc
pop
add
or
jl
jbe
or
xor
mov
jns
ja
mov
push
and
pop
cmp
es
popf
push
loope
sub
repnz
add
ss
jb
stos
iret
jp
or
fnstsw
push
xor
ja
fdivrl
xor
enter
mov
fdivrs
jge
xchg
xchg
mov
or
in
or
push
jecxz
paddq
movsl
daa
cltd
cmp
inc
aad
or
and
mov
filds
sbb
mov
sbb
cmp
xchg
lods
fildl
in
adc
into
cli
int3
leave
add
xchg
pusha
je
das
adc
pop
pop
daa
hlt
mov
mov
leave
and
filds
dec
jmp
or
dec
sti
imul
fwait
test
imull
or
sbb
xchg
pop
aam
out
sbb
in
or
aam
mov
jns
push
nop
lock
mov
sbb
cmp
pop
int
dec
jl
inc
pushf
push
cmp
dec
sub
pop
out
pop
les
sbb
movsb
fmuls
cld
push
inc
adc
cmpsb
cmp
shrl
insl
mov
and
mov
ret
jo
xor
xlat
ret
icebp
cmp
jmp
jl
inc
outsb
xchg
adc
lods
imul
jne
nop
adc
xchg
stos
jnp
push
and
xchg
cmp
inc
pop
pop
inc
js
jp
sub
jl
push
push
popa
or
adc
pop
xor
ja
and
das
lock
adc
sbb
adc
xchg
cmpsl
in
hlt
scas
mov
sbb
cltd
dec
inc
loopne
adc
push
sbb
ret
daa
mov
xor
in
xchg
or
out
out
jle
mov
mov
mov
ficoml
jle
push
fidivrl
push
push
aaa
negb
jo
jecxz
movsl
aaa
mov
insl
push
scas
jb
adcb
mov
jnp
dec
push
inc
out
mov
add
test
jmp
pop
jo
and
leave
inc
mov
out
clc
vcomisd
fsubrl
dec
cmc
fcomp
insl
pop
popf
ret
gs
ror
xchg
iret
cs
repnz
imul
mov
cltd
mov
mov
mov
xchg
and
les
adcl
mov
fsubl
dec
push
mov
pop
add
mov
cmp
pop
xchg
lahf
pop
cmp
inc
or
out
in
cmp
fcmovu
in
pop
sti
insb
notb
in
and
mov
imulb
loop
lahf
cmp
in
idivb
adc
mov
mov
or
and
cmpsl
or
adc
sub
cmpl
push
push
ret
mov
fcoml
adc
cwtl
jno
xchg
pop
out
dec
stos
popa
popa
inc
fidivl
icebp
loope
shl
mov
and
lods
pushf
or
and
fisubs
in
inc
push
jmp
cmp
flds
cld
repz
xchg
loope
ds
and
cmpsl
sub
jg
pushf
callw
js
pushf
incl
and
and
ficompl
add
outsb
aas
test
in
in
or
mov
add
lret
stos
fmul
pxor
insl
or
aas
inc
movsb
jge
mov
popa
lods
add
out
rep
or
pop
dec
push
mov
jb
outsb
mov
mov
cs
imul
inc
xchg
lahf
add
test
adc
sahf
xor
xor
jo
in
dec
mov
lds
lock
pop
mov
xchg
aaa
inc
cwtl
inc
scas
mov
xlat
xchg
jle
and
sub
cwtl
repnz
ljmp
xor
mov
cmp
ret
pop
dec
xchg
into
cs
fadd
or
loopne
mov
jne
add
jmp
mov
aas
push
cld
aaa
sub
movsb
shll
sbb
lahf
jg
push
xorb
pop
pop
inc
push
push
js
mov
test
and
push
xchg
add
mov
sar
cmpsb
lcall
mov
movsl
push
daa
test
cltd
push
xor
mov
sbb
mov
or
in
mov
dec
jno
jecxz
inc
adc
mov
out
sarl
lret
test
ja,pn
fmuls
ficoml
outsb
cld
lods
inc
repnz
xor
adc
andb
dec
movsb
dec
andb
mov
adc
sbb
pop
sahf
scas
or
cltd
dec
adc
xchg
inc
fldt
mov
or
and
mov
inc
test
shll
dec
pop
pop
mov
push
test
mov
cs
cltd
ja
lock
lea
scas
out
mov
vandnps
push
xor
pop
and
mov
pushf
xchg
cmp
mov
xchg
mov
push
fcoms
or
rorl
xchg
push
xor
mov
shlb
adc
test
xlat
cs
jb
imul
cmpsb
xchg
or
loopne
cmp
and
pop
sbb
bswap
xor
cmpsl
or
cmpsl
sbb
adc
shlb
push
jb
xor
xor
jecxz
xchg
jb
loope
test
mov
sbb
inc
pop
dec
cmp
rcr
dec
int3
arpl
and
mov
sbb
sbb
popf
fistpl
pop
insb
lods
jne
pop
jp
shlb
addr16
xor
lret
lods
pop
sub
add
roll
mov
mov
push
mov
jo
add
xor
inc
pop
repz
mov
adc
dec
ja
insl
mov
in
fnstsw
cmp
repnz
lods
push
xchg
or
bound
ror
mov
test
pop
adc
mov
out
arpl
push
pop
fistpll
and
push
and
jmp
and
bound
jg
in
inc
pop
pop
pop
popf
fstpt
shrb
bound
push
mov
xchg
push
stc
repz
insl
lock
jno
cli
inc
nop
xor
cld
in
das
fisubs
mov
callw
pushf
xor
cmp
data16
inc
sub
mov
pop
cld
xor
out
jmp
inc
fdivrs
inc
int
and
jmp
mov
dec
ret
stc
out
loope
addr16
ja
stos
lods
xchg
pop
pop
mov
ds
or
sbb
dec
or
pop
pop
cmp
aam
outsb
jecxz
xchg
xor
hlt
sbb
inc
mov
movsl
mov
dec
pusha
aam
std
jne
jmp
ret
sti
lret
mov
xchg
out
push
roll
adc
arpl
mov
jae
xchg
lcall
mov
lret
scas
aad
add
out
loop
mov
jmp
and
daa
testl
push
std
fs
pusha
fmulp
stos
mov
inc
getsec
xor
jle
or
lret
cmp
mov
sbb
ljmp
insb
mov
testl
or
ja
addr16
mov
push
push
and
push
lods
call
idiv
jmp
sub
hlt
mov
call
xchg
aam
mov
sub
popl
lcall
repz
clc
sub
mov
push
xchg
sarb
xchg
push
jns
out
push
sbb
xchg
into
sub
mov
or
jecxz
ss
xchg
repz
pop
inc
xor
in
mov
mov
scas
jp
push
adc
imul
or
repnz
mov
sahf
and
int
clc
in
inc
cmp
fsubrl
sbb
rclb
dec
jle
fsts
xor
or
leave
or
jmp
sar
sub
or
mov
mov
decb
testl
and
pop
jge
pop
and
cmp
shrl
mov
scas
ds
adc
xor
fcmovnbe
jno
std
fcompl
scas
jns
jl
int
xchg
inc
cmpsb
push
xor
bound
mov
adc
inc
push
fs
addb
sbb
jecxz
lcallw
xchg
and
mov
in
testl
daa
mov
inc
icebp
push
je
pop
pop
dec
cmpsb
dec
jne
jmp
repz
movsl
je
or
jno
int
lcall
xor
xchg
rorl
cmp
popf
into
and
dec
add
push
jo
nop
xor
fs
mov
fnsave
adc
mov
shlb
clc
out
cmp
test
frstor
mov
call
jp
es
inc
aaa
lods
mov
sbb
inc
sbb
mov
and
adc
adc
dec
ret
add
push
or
incl
cmp
scas
dec
orl
inc
mov
mov
mov
inc
loope
fldl
sub
arpl
push
push
adc
dec
or
adc
cli
adc
xor
pop
push
cmp
in
loop
add
loop
adc
test
lods
int
pop
fisubs
bound
pop
xchg
lret
jb
repz
xchg
mov
add
bound
mov
xchg
in
sbb
rep
and
xchg
stos
lret
dec
lods
push
lods
stc
xor
adc
outsb
mov
jae
movsb
jno
lret
gs
out
sub
ja
rcrl
lahf
lret
mov
ja
outsl
jns
ficomps
mov
bound
add
mov
mov
stc
and
shll
push
and
loope
fldt
rep
xor
push
push
cmp
mov
push
jnp
clc
dec
and
sahf
outsb
mov
mov
push
stos
filds
sahf
ror
xchg
sbb
ret
in
cwtl
jb
adc
jmp
sahf
pop
lretw
loop
fstps
ja
and
out
jl
add
rcrl
stos
fsubs
mov
outsb
stos
aaa
pop
loop
add
sub
fld
rcr
out
jmp
bnd
leave
mov
sbb
cmp
ja
mov
and
inc
xchg
and
in
mov
cmp
adc
in
or
or
ljmp
setns
cltd
dec
mov
int
imul
verr
int
stc
rclb
outsl
pop
fs
push
xor
and
mov
mov
lret
mov
fidivrs
iret
jmp
test
push
orl
movsb
clc
push
xchg
lea
mov
sub
je
ror
mov
in
jo
mov
lret
xchg
push
jmp
arpl
fdivrs
jns
orb
xor
rolb
andl
rorb
jl
popa
mov
test
loopne
dec
jae
dec
xchg
push
mov
or
cs
or
imul
sub
push
jns
jmp
sub
mov
inc
insb
std
ficomps
fildl
inc
xor
push
orb
leave
mov
inc
fidivrs
add
jmp
pop
cld
mov
sbb
fcmovnb
jecxz
sbb
inc
fsubr
add
xchg
lret
je
mov
and
movl
paddb
ja
mov
jp
adc
pop
int3
add
push
subl
cmpsb
dec
jle
das
es
js
push
and
mov
test
pop
cli
in
and
cld
inc
mov
and
or
dec
outsb
lahf
sub
mov
inc
loope
nop
push
mov
pop
test
xor
mov
pop
gs
nop
sub
shr
cmpsb
pop
out
outsb
shlb
xchg
push
jl
or
scas
sahf
test
sbb
popf
xor
xor
dec
sub
pop
mov
jnp
xlat
push
inc
lock
xchg
test
and
adc
xorl
and
push
xor
jecxz
mov
sbb
lcall
add
jmp
xchg
pop
xchg
xor
adc
in
fsubrp
dec
xorb
mov
test
mov
mov
push
es
outsl
call
ret
mov
cmpsb
mov
mov
mov
lret
in
xor
jecxz
inc
int
jge
clc
jmp
ror
mov
pop
xchg
adc
inc
cmp
mov
sub
addr16
pop
or
xor
xor
into
ja
dec
sahf
fcompl
pop
lret
add
mov
into
xor
adc
cld
pusha
idivb
cmp
or
fwait
xlat
add
je
roll
por
mov
std
ljmp
shl
dec
nop
mov
outsb
insl
inc
fucomip
testb
or
mov
rolb
sahf
xor
daa
jb
push
std
ds
clc
mov
std
push
testb
inc
or
adc
rclb
subb
lds
rcrb
pop
aaa
mov
jo
jmp
cmpsb
and
jge
stos
sbb
rcrl
icebp
ret
shll
xchg
adc
out
das
pop
in
imul
adc
add
dec
sub
mov
pushf
shl
into
lods
adc
xor
adc
mov
xchg
pop
add
lds
add
es
mov
sub
shrb
pop
pop
mov
clc
fimull
or
adc
fs
cli
aam
adcb
add
clc
popf
sti
dec
call
fiaddl
dec
xor
test
mov
aas
rolb
jle
sbb
jg
out
add
mov
dec
dec
sahf
xor
cmc
out
sbb
iret
and
test
cli
fisubrs
imul
lret
clc
push
sbb
daa
sub
pop
cmp
sbb
adc
aaa
add
fldcw
lret
pop
jl
jmp
xchg
rolb
or
jno
push
xor
jmp
in
sbbb
daa
lea
or
sbb
pusha
les
movsb
shr
cmp
sbb
testb
push
sti
push
push
jo
xchg
notb
aad
nop
sub
subb
push
mov
shll
fmull
sti
sub
and
cmpsl
fisubrs
xchg
stos
ja
ds
int3
sar
inc
pushf
push
push
sbb
sub
aad
inc
push
jne
inc
inc
in
inc
mov
push
mov
cli
in
and
push
inc
xchg
bound
push
inc
fldenv
sti
enter
adc
insl
mov
mov
testb
or
add
outsb
ja
sahf
bound
mov
pop
lcall
aam
jge
mov
cmp
lcall
rcrb
sahf
loop
push
add
push
addr16
push
out
and
cld
dec
gs
pop
ficoml
fisubrs
jle
jmp
fistps
mov
rorb
imul
in
imul
repz
fdivs
imul
in
dec
outsl
clc
mov
imul
lds
enter
lret
mov
es
fstpt
pop
jl
js
xchg
sub
das
mov
xchg
sbb
inc
push
and
push
sbb
inc
nop
pop
daa
fcomi
ss
arpl
cmp
jae
les
and
mov
cmp
add
mov
das
push
pop
lock
sub
fucom
loopne
push
sbb
pop
push
sub
jge,pt
and
inc
push
in
dec
lds
inc
and
lea
test
sub
dec
stos
fcmovbe
mov
mov
test
xchg
mov
jmp
repz
add
adc
repz
in
push
dec
je
shr
test
push
in
bound
sbb
and
jb
sub
push
add
sub
sar
mov
add
pop
loopne
insl
test
ljmp
imul
les
push
sub
sub
insb
in
mov
cmp
cmc
iret
fwait
sti
popa
sub
adc
rclb
jae
push
dec
lret
push
mov
lea
inc
aad
adc
cwtl
pop
mov
in
aam
popa
jl
push
pop
and
imul
add
repz
out
adc
aas
mov
arpl
jnp
add
mov
push
or
imul
inc
add
cld
lcall
push
pop
loopne
sub
repnz
xchg
mov
adc
int
and
arpl
cmp
aaa
arpl
lds
mov
and
push
sub
clc
lret
sub
xor
push
mov
xchg
and
jno
jns
push
add
scas
jg
pop
mov
push
in
jbe
bswap
mov
fcmovu
push
iret
negb
mov
out
stc
push
adc
mov
aad
mov
add
mov
xchg
mov
repz
push
inc
mov
outsl
bound
and
leave
push
push
pop
mov
add
movsb
add
imul
call
jle
int3
inc
sub
jo
xchg
sbb
into
ret
std
sbb
ljmp
les
sub
add
shl
in
test
dec
and
push
pop
and
fdivs
sbb
adc
into
mov
fwait
popf
xchg
out
adc
lds
shlb
js
rclb
inc
sub
cmp
adc
sti
daa
pop
insb
push
add
push
mov
cmc
lfs
adcl
je
mov
xchg
das
pop
ret
jge
clc
xchg
shr
dec
push
shll
addr16
push
in
inc
je
pop
and
mov
pop
aad
push
mov
movsl
or
inc
sbb
sbbl
pop
inc
aam
in
daa
add
ss
xchg
pop
rorl
dec
mov
pop
push
shrl
inc
repnz
pop
mov
stos
jne
and
lock
inc
pop
cmp
inc
aam
push
jg
pop
inc
data16
jg
mov
outsl
out
je
add
inc
mov
mov
cmp
mov
fnsave
pushf
dec
ljmp
jb
ds
imulb
into
xchg
inc
and
cvtps2pi
sbb
xchg
mov
xor
xchg
rclb
pop
faddl
pop
add
in
inc
aad
cmpsl
xchg
into
dec
dec
stc
xchg
pusha
and
pop
xor
push
xchg
mov
fldcw
les
std
dec
rolb
pop
xchg
rdmsr
and
lret
outsl
inc
jmp
fucomp
dec
or
push
js
call
ds
or
repz
dec
fwait
repnz
fwait
outsl
xor
cmp
shll
sti
and
mov
cs
mov
shlb
fldcw
shrb
repnz
pusha
inc
mov
cltd
mov
repz
imul
mov
or
add
xchg
out
ja
mov
xlat
cmp
or
stos
sbb
jnp
shll
push
inc
jno
imul
hlt
lods
mov
xchg
int3
pusha
aas
enter
outsl
inc
cltd
mov
or
sti
push
sub
xor
sub
push
iret
js
bound
daa
punpckhbw
xor
je
push
jl
add
out
push
mov
push
sub
sbb
or
out
movsb
inc
xchg
xor
mov
shlb
pop
shll
ljmp
and
lahf
mov
mov
push
xchg
mov
mov
dec
add
call
es
or
aaa
jne
leave
cwtl
movd
mov
mov
mov
pop
subl
sub
xor
in
popa
mov
add
mov
sub
aas
stos
mov
mov
jecxz
sbb
nop
shlb
outsb
mov
sbb
mov
mov
dec
dec
leave
jns
sahf
jmp
jae
pop
aad
outsl
js
sub
out
pop
out
adc
rclb
sub
mov
in
test
sahf
fnstsw
mov
xchg
push
push
xchg
ja
sub
aaa
idivb
rcrb
test
sbb
mov
pop
pushf
lret
std
push
push
loopne
sbb
mov
xchg
jmp
pusha
mov
cmp
frstor
imul
mov
fs
nop
jbe
outsb
xchg
xchg
int3
ja
sub
dec
adc
ret
jle
sbb
pop
sub
pop
jg
xchg
enter
push
lret
sarl
hlt
jg
pop
mov
adc
sub
push
ret
ja
push
mov
aad
mov
mov
jmp
sub
in
stc
adc
inc
iret
dec
jne
mov
add
cmp
mov
imul
loope
cmpsl
xchg
sbb
in
mov
xlat
nop
ss
mov
cmp
rorb
pushw
mov
sub
lret
iret
rcl
mov
in
push
pushf
test
sbb
inc
cmp
std
sbb
loopne
pop
cmpsl
sub
jg
outsl
adc
test
int
popa
cmp
jb
fldt
mov
add
xorl
pop
dec
adc
sbb
mov
mov
ret
adc
out
add
or
push
sub
cmpsb
outsb
shl
sbb
lods
jle
cli
xlat
test
push
dec
insb
push
fmulp
xchg
hlt
xor
mov
xchg
mov
test
dec
jbe
lcall
add
fstps
andl
mov
int
scas
sub
aaa
lret
stos
xchg
push
movsl
je
jno
in
adc
xchg
in
inc
jnp
xchg
xor
iret
sbb
jbe
mov
jp
jnp
lret
cmpsl
or
cltd
int
repz
push
inc
iret
mov
push
xchg
inc
xchg
cli
pop
xor
cmp
arpl
repz
or
int3
xor
aas
nop
xchg
mov
rcr
add
cmp
pop
int
int
and
in
stos
xor
lahf
popa
push
nop
js
push
call
sbb
add
inc
jg
mov
cld
lret
out
jmp
jo
je
adc
add
or
leave
add
adc
ret
xlat
mov
xlat
cmp
dec
add
cmp
imul
icebp
testl
push
and
inc
pop
sub
mov
pushf
pop
lret
aas
ds
mov
add
sahf
jl
xor
jecxz
inc
test
jbe
or
inc
pop
inc
hlt
out
out
push
add
fdecstp
adcl
lea
sahf
into
aas
add
push
cmp
ret
jno
cmp
dec
push
sub
mov
fisttps
aaa
ret
sbb
cmp
push
cmc
jmp
pusha
xchg
xor
repz
mov
cmp
mov
stc
mov
mov
aas
mov
jge
gs
adc
shrb
xchg
fstps
mov
and
mov
mov
aaa
fiaddl
mov
mov
test
or
int
mov
mov
sbb
in
xor
jmp
pop
jg
outsb
call
pop
in
xchg
xchg
addb
adc
sbb
out
idivb
mov
fwait
lret
in
inc
into
cs
jle,pt
jnp
stc
push
mov
outsb
call
jne
ret
sbb
ret
cmp
outsl
in
mov
or
jmp
pop
popa
inc
scas
aas
cld
stos
test
xchg
or
clc
jmp
mov
xchg
mov
outsl
xlat
push
push
jecxz
dec
mov
or
je
sbb
jbe
jmp
mov
scas
and
inc
push
std
pop
adc
push
test
mov
jge
adc
outsl
daa
es
push
or
mov
cld
mov
cmp
xor
cmp
jbe
xchg
sbb
xor
sahf
ds
je
jne
xor
cmp
int3
pop
outsl
imul
stos
ret
in
add
or
je
inc
add
ds
testl
sahf
aad
mov
rcrl
sti
movb
mov
mov
dec
loopne
jb
loope
in
adc
dec
enter
rcrl
dec
shrl
arpl
movsl
xor
and
cmp
and
sbb
rcrb
cmp
loopne
sbb
mov
push
repz
shl
test
aas
lods
lret
sti
fists
gs
test
mov
mov
notl
xchg
jnp
mov
adc
test
and
test
sbb
dec
push
jns
enter
mov
sahf
pop
sbb
cwtl
and
dec
aad
sub
jmp
popf
scas
or
pop
jae
repz
in
les
jge
pushl
pop
pop
movb
pop
in
add
mov
add
add
lret
cmpsl
sub
jno
popa
mov
xor
and
in
jae
push
dec
aad
imul
rcrl
sub
enter
xchg
add
mov
cmp
xlat
mov
mov
sub
dec
mov
dec
inc
jl
push
inc
add
subb
or
nop
adc
repz
out
push
das
sbb
sub
dec
test
and
mov
xchg
out
xlat
add
inc
iret
adc
fdivrs
or
sbb
mov
xchg
imul
cld
fld
cmp
out
std
scas
dec
pop
cmc
bound
push
divb
mov
cld
or
cmp
add
arpl
int
movsl
mov
sahf
repz
lahf
cmp
movsb
pop
addr16
jp
out
cmp
mov
insl
add
sbb
leave
inc
mov
daa
inc
call
xchg
add
fisubs
ljmp
jae
mov
sub
push
jbe
fnstsw
jg
adc
or
mov
inc
enter
jmp
in
and
or
test
adc
jne
inc
dec
aam
inc
lcall
pop
cmpsb
imul
into
ret
fmuls
cmpsb
stc
shrb
cld
lock
add
cmp
out
push
mov
pop
mov
add
mov
xlat
mov
data16
sub
in
sbb
jbe
pop
les
mov
jl
sbb
mov
adc
or
fcmovnbe
daa
test
jae
or
sbb
imul
stos
shr
xor
scas
mov
push
lods
je
in
mov
fistps
data16
pop
inc
mov
jp
push
add
xlat
cmp
jno
in
mov
ret
jno
push
pop
xor
mov
mov
push
sbb
dec
push
push
xor
push
mov
xchg
mov
icebp
mov
inc
adc
jae
pop
icebp
inc
sub
mov
xor
cmpsb
in
jmp
cmp
xor
sbb
inc
icebp
popf
cmp
xchg
sub
sbb
ret
lock
mov
sbb
cs
lret
xlat
xor
lahf
dec
orl
in
clc
jmp
pop
out
xchg
lahf
arpl
loopne
hlt
add
and
daa
mov
jge
fsts
call
cmpsb
stos
push
or
movsb
push
mov
out
aad
psubd
lret
xor
daa
and
subl
pop
cmp
nop
xchg
popa
les
mov
ja
rcrb
cmp
sbb
xchg
mov
mov
insb
inc
jno
stos
fistpll
mov
mov
scas
sub
xor
rcrb
jae
inc
jbe
dec
push
dec
fucomp
mov
stos
aad
in
rcl
sub
add
or
add
daa
jp
rcrb
push
pop
std
scas
or
inc
cmp
fs
inc
leave
fsubr
dec
out
pusha
mov
add
int3
pop
std
cmp
mov
stc
shll
popa
and
imul
add
lods
cld
mov
test
sbb
mov
enter
pop
lret
rolb
xorb
data16
pusha
mov
incl
shrl
and
repnz
in
aad
shrl
inc
jge
lods
test
pop
lcall
sbb
inc
add
loopne
decl
jno
mov
pop
inc
rcrb
int
cmp
loop
push
pop
inc
int3
push
sub
add
lods
push
push
mov
jns
data16
push
lahf
popf
and
xor
outsl
outsb
mov
adc
inc
push
lahf
mov
push
xlat
scas
sbb
mov
jp
daa
in
cltd
loope
mov
sub
cmp
adc
dec
je
out
push
movsl
sti
mov
testl
mov
into
and
repz
pushf
ja
mov
in
cmp
sub
pusha
xor
popf
and
ljmp
lds
ret
xchg
pop
test
lds
ficoml
test
mov
xchg
and
jl
mov
mov
sub
js
movsl
test
or
and
add
out
xchg
sahf
xchg
stc
xor
mov
pop
jbe
leave
dec
aas
notb
add
add
leave
pop
inc
daa
mov
scas
add
and
repnz
add
push
fdivs
cmp
sbb
cmp
cwtl
push
sub
loopne
and
jo
int3
inc
pop
xchg
imul
pop
or
xchg
subl
mov
icebp
cmp
pushf
inc
shrb
inc
lret
lock
sub
pushf
insl
out
test
out
lret
test
imul
cs
ljmp
aad
xchg
lds
rcrb
push
inc
sbb
inc
or
cmp
push
lcall
jecxz
cmpsb
int3
mov
or
pusha
jmp
xlat
and
notb
int3
xchg
adc
inc
add
lea
je
and
adc
jb
in
inc
aaa
xor
repnz
inc
xchg
xor
addr16
push
divl
call
pop
std
cwtl
inc
mov
mov
sbb
fcmovbe
jge
popa
pop
fisttps
lds
outsb
les
ljmp
aad
sbb
push
add
mov
scas
mov
sbb
cs
subb
mov
and
mov
outsl
call
or
out
imul
mov
xor
mov
dec
jae
adc
sub
adcb
insb
scas
inc
out
mov
inc
xchg
dec
loopne
call
hlt
mov
out
leave
cmc
arpl
addb
cmp
and
stos
lret
dec
repz
add
mov
mov
enter
sub
daa
mov
wrmsr
push
loop
push
jb
mov
mov
aas
popf
int
jns
mov
jnp
adc
arpl
fidivs
xchg
jnp
mov
mov
test
mov
lock
cmp
dec
pop
jecxz
mov
mov
dec
xchg
pushf
out
clc
movl
cs
test
cmc
fmull
popf
fs
ljmp
adc
cmp
aam
xor
test
enter
aad
subl
push
iret
cmc
adc
or
int
pusha
fmuls
enter
movsl
add
and
mov
and
add
xor
jge
jne
data16
xor
inc
stos
imul
loope
aaa
jnp
loop
jbe
sbb
lret
dec
add
iret
dec
fmull
xor
mov
cmc
pop
test
pop
and
mov
jmp
scas
stc
popf
push
std
into
mov
lds
xchg
pop
lret
cmp
lret
sub
cmp
cmpsl
std
repz
out
int
dec
adc
out
xchg
adc
add
lods
mov
lea
ss
adc
test
pop
or
sub
prefetch
push
dec
addb
rcrb
je
rcll
or
mov
test
outsl
das
or
add
and
std
into
xchg
sub
dec
stc
sbb
and
dec
or
push
mov
adc
or
icebp
jg
hlt
iret
pop
pop
ds
cmp
ffree
dec
mov
ret
cmp
xlat
jbe
push
popf
test
jns
ret
daa
adc
mov
sub
fistpll
push
insb
pop
dec
lea
call
add
jle
jo
testb
or
add
imul
test
cs
xchg
cmpsl
aad
dec
cmp
and
mov
dec
lret
push
popa
mov
mov
aaa
mov
lock
push
push
inc
and
shlb
test
in
jle
call
bound
iret
stc
xor
mov
fistl
test
cwtl
jmp
arpl
aas
mull
pop
and
scas
pop
inc
call
inc
es
jo
dec
or
push
aaa
add
iret
pop
or
or
outsl
mov
mov
insl
in
aas
push
ja
xchg
add
rorb
mov
stc
pop
mov
adc
mov
loop
mov
jo
and
icebp
in
inc
jns
cs
sbbb
mov
fstps
mov
dec
mov
lds
mov
lock
pop
imul
test
arpl
push
scas
hlt
ret
mov
daa
shlb
out
adc
daa
iret
and
sub
cmp
cmp
stos
sti
or
stc
pop
pop
push
pop
loop
out
ds
inc
lcall
jbe
iret
pusha
sbb
lahf
cltd
xchg
xor
aam
push
int3
dec
sub
lea
sbb
data16
adc
dec
stos
rcl
and
or
inc
out
daa
test
call
mov
in
xlat
js
mov
add
fs
push
pop
sub
push
xorb
xchg
fnsetpm(287
dec
push
xlat
push
push
jno
addr16
pop
push
cwtl
jge
mov
ljmp
jne
pop
pop
or
push
out
mov
pop
xor
popa
pop
xchg
adc
adc
sbb
mov
xor
xchg
cli
inc
andl
rol
mov
xor
outsb
in
clc
cwtl
push
ret
dec
xchg
adc
test
sbb
rolb
sbbb
mov
ss
push
test
sti
jne
push
mov
adc
roll
in
pop
movsb
cmpsb
cld
out
into
test
cs
rorb
shlb
inc
push
ja,pn
lret
fxch
fidivs
test
adc
lret
add
mov
aam
and
stc
mov
test
push
lods
ja
pusha
dec
cli
pop
mov
stos
aas
movsl
inc
inc
push
push
adc
xor
mov
push
push
mov
nop
pushf
idivb
push
sub
pushf
addr16
daa
stos
clc
incb
and
jecxz
repnz
call
sti
rorl
sbb
cwtl
negb
add
inc
mov
bound
imul
sarl
icebp
mov
mov
push
cmc
rcrb
or
add
push
sbb
out
add
jns
dec
psrld
pop
sbb
adc
test
lret
test
push
lcall
in
adc
and
jmp
and
lods
cmpsl
int3
dec
and
push
movsb
jns
pushl
add
xlat
in
loope
fwait
jg
lahf
and
ss
inc
jns
mov
popf
test
mov
add
cmpsb
or
dec
imul
inc
les
sbb
mov
and
and
push
imul
jbe
fstpl
jbe
movsl
pop
push
cmp
lret
push
je
dec
lahf
daa
and
jl
mov
test
push
insb
sub
inc
cmpsl
dec
dec
imul
daa
mov
adc
dec
sahf
add
int
add
ss
in
std
and
rol
pop
jns
push
notl
sub
adc
jmp
and
mov
push
pop
sub
movsb
je
xor
mull
ret
arpl
cld
cmp
xchg
sti
lods
sbb
js
jns
lcall
mov
fs
roll
call
das
aam
mov
pop
jbe
stos
xor
mov
mov
lods
push
loope
dec
das
stos
int
inc
fisttpll
lcall
stos
popf
inc
push
jecxz
inc
mov
stc
dec
cmp
xor
fwait
into
out
cli
das
xor
dec
push
add
lret
push
jecxz
pop
push
pop
xchg
and
outsl
push
call
jge
pop
inc
fistpl
pop
pop
and
push
inc
outsb
std
xchg
addb
push
sbb
dec
aas
movsl
mov
es
or
sti
subb
jmp
das
cs
cmp
leave
mov
inc
cld
jbe
cld
out
or
jle
repz
movsl
repnz
adc
lahf
repnz
mov
popa
stos
mov
xor
aad
or
and
lea
push
dec
frstor
js
jnp
push
sbb
xchg
hlt
popa
leave
mov
push
mov
int3
popa
arpl
jmp
gs
xchg
imul
sbb
jns
inc
popf
jae
loopne
je
in
adc
shrb
adc
and
and
mov
and
or
xchg
or
mov
mov
xor
hlt
jp
push
mov
ja
cmpsb
mov
insl
ret
jno
and
add
pop
add
xor
aam
out
sbb
adc
imul
pop
cmpb
in
inc
test
sahf
ds
xchg
flds
mov
aad
loop
in
or
push
inc
loop
and
push
mov
hlt
cmp
mov
lcall
popf
pop
cs
or
jb
mov
pop
enter
jge
aam
cwtl
insb
shrl
fwait
xchg
adc
repz
mov
or
in
cmp
lret
pop
inc
pop
adcl
fiadds
xchg
ds
inc
jecxz
test
cwtl
stc
sbb
test
ja
out
jns
aas
sbb
cmpsl
xchg
mov
dec
mov
add
sbb
ret
pushf
jnp
bound
in
gs
push
fbld
mov
push
test
mov
add
lock
int
push
push
dec
cmpsl
or
loop
ja
jae
jl
rcll
mov
mov
pop
cld
ljmp
mov
aas
pop
lds
gs
shr
sbb
lcall
jl
cld
popf
stos
push
je
inc
imul
dec
dec
jnp
push
xrelease
or
sbb
cmp
andl
aaa
mov
pop
mov
ss
test
lock
xor
inc
xor
sub
adc
repnz
sub
push
in
cmpsl
std
cs
mov
mov
xlat
inc
sarl
inc
mov
loope
and
ljmp
cmp
jne
into
and
clc
or
mov
popa
adc
mov
lret
mov
test
push
jmp
pop
xor
cmpsb
mov
and
call
dec
pusha
add
push
sahf
mov
movsl
dec
test
pushf
sbb
cmp
fcoms
ficompl
dec
sbb
subb
repnz
adc
fiadds
cmp
shll
jae
mov
mov
pusha
adc
repnz
inc
mov
and
jne
cmp
jg
add
pop
pop
adc
dec
fs
sbb
pop
cmp
mov
dec
jne
aad
pop
push
add
ret
push
cli
pop
add
imul
xchg
jae
jmp
iret
pop
hlt
out
push
in
loop
daa
adc
andl
add
xor
gs
and
sbb
inc
xchg
rcrb
push
cmp
sbbl
sbb
mov
fsts
lret
cmp
jmp
pop
inc
imul
aaa
mov
mov
and
dec
in
xor
dec
jmp
jecxz
ja
xchg
and
in
insb
incl
add
mov
mov
cmp
pop
mov
mov
addr16
cltd
dec
imul
and
sbb
in
push
xchg
jge
jg
shrb
dec
das
and
fistpl
movsl
enter
adc
or
nop
scas
inc
mov
mov
dec
dec
sub
mov
test
pusha
daa
jp
andl
fbstp
das
sbb
ss
out
sti
xchg
mov
hlt
js
cmpsl
pop
fwait
scas
leave
xchg
mov
int
cmp
xchg
mov
sub
mov
outsl
pushf
notb
mov
dec
dec
xor
or
fstpt
add
bound
bound
xor
lds
fwait
jns
inc
push
xor
call
or
mov
push
int
push
xor
andl
dec
mov
mov
stos
icebp
mov
addb
jnp
cmp
push
jp
hlt
daa
lcall
xchg
sbb
mov
dec
mov
adc
cmp
pop
inc
pushf
sbb
jge
sarl
push
and
dec
test
inc
mov
inc
jg
mov
cmp
pop
add
das
pop
cwtl
or
inc
mov
mov
push
insb
ss
xchg
lods
and
ret
ljmp
dec
mov
pop
cmp
push
divb
sbb
gs
popf
jg
sub
lret
mov
icebp
mov
sbb
pusha
sbb
add
hlt
cmp
jg
mov
fsubs
adc
cltd
add
push
add
and
lahf
sub
pushf
xor
popf
mov
sub
pop
lods
or
mov
das
push
lods
mov
cwtl
mov
mov
adc
cmpsb
mov
or
lahf
adc
sub
testl
cwtl
call
inc
insl
test
xor
out
xor
stos
cwtl
inc
sbb
ss
int3
and
ljmp
mov
mov
push
jmp
iret
xchg
xchg
and
popa
push
aam
adc
rcll
sub
mov
cmp
iret
add
jo
xor
and
in
js
rolb
mov
xor
daa
mov
mov
xor
dec
adc
ret
cmp
fsubrs
imul
xchg
push
into
xlat
or
add
cli
sub
iret
cmc
add
cltd
jge
dec
mov
or
push
movsb
test
pop
dec
xchg
popf
mov
xchg
outsb
rcl
adc
out
jge
sub
sub
pop
dec
fldt
inc
stc
xchg
neg
and
test
test
iret
gs
inc
mov
mov
inc
adc
mov
pop
adc
pusha
pop
test
mov
repnz
loop
dec
roll
loope
in
jmp
dec
mov
jo
sarl
ret
lds
or
xchg
outsl
or
pop
mov
daa
movsl
pop
sbb
xor
xor
sbb
repz
push
push
adc
add
cmpsl
stos
mov
nop
adc
testb
int
addr16
out
ret
pop
mov
pop
cmp
xor
fcomps
shlb
addr16
sbb
icebp
stc
xlat
jbe
jne
mov
pop
ss
add
dec
sub
inc
adc
dec
ljmp
xchg
push
fcoml
lret
inc
fdiv
add
xchg
out
call
leave
loop
enter
mov
dec
loop
adc
or
mov
sub
sti
dec
pop
push
inc
fwait
mov
aas
jl
adc
ret
aaa
cmp
add
popa
inc
or
sbb
push
insb
push
repnz
mov
not
xor
push
mov
outsl
add
enter
xor
mov
cs
movsb
mov
adc
and
mov
lea
lcall
aas
mov
sbb
bound
shl
mov
test
movsb
mov
jnp
scas
pop
mov
and
and
stos
repz
add
loop
mov
int3
dec
sub
sbb
or
sbb
test
int
ret
push
jne
dec
add
mov
aaa
call
dec
das
pop
mov
arpl
lret
xchg
test
jp
insl
in
ret
insb
das
test
insb
nop
add
push
popf
sahf
lret
out
out
insl
cmc
jnp
cmp
imul
je
pop
cld
xor
pop
jmp
push
test
adc
cmp
in
faddp
clc
add
mov
shll
rcll
ss
mov
loopne
inc
xor
jp
cmpsl
out
xchg
sub
into
lret
add
or
fcmovu
add
pop
jnp
add
pop
mov
cs
aad
pop
lahf
testb
add
adc
cmc
lds
js
or
pop
mov
mov
pop
jno
xchg
xchg
mov
push
mov
rorl
aad
mov
mov
pop
imul
dec
push
pop
inc
fldl
xor
jl
jecxz
cmp
jne
rcrl
adc
mov
sub
cli
mov
int3
jge
add
test
dec
xchg
or
dec
ss
xchg
or
pop
cs
adc
xchg
cwtl
jnp
lret
xchg
je
aas
sub
add
ljmp
lahf
in
inc
mov
push
stos
lcall
mov
jecxz
push
cltd
faddp
int3
aaa
push
adc
xor
psrlq
arpl
mov
dec
push
es
adc
and
orl
lods
dec
dec
mov
sub
jecxz
in
js
imul
mov
xchg
xor
fisubs
push
test
mov
push
test
dec
mulb
jns
sub
or
ja
ljmp
add
pusha
lret
cmc
mov
enter
mov
aas
pop
jb
imul
test
test
mov
mov
push
jb
int3
std
push
arpl
fisubrs
lods
jae
push
ljmp
sbb
mul
pop
xchg
cmp
xor
sub
mov
push
test
add
inc
loope
add
ret
xchg
push
repz
pop
push
push
xchg
mov
int
loopne
jp
sbb
shrl
pop
mov
insb
jnp
cli
movsb
and
push
notb
xchg
jmp
adc
push
ds
sahf
lock
lahf
xor
cmp
rorb
xchg
int
ss
out
comiss
lss
cmp
push
lods
cmpsl
in
cmp
fcomi
fdivrp
mov
dec
jle
outsb
add
jl
out
in
int3
rorl
scas
mov
sub
rolb
xor
iret
mov
push
scas
clc
jns
pop
and
ret
inc
pmulhuw
inc
outsb
jl
stc
addr16
dec
fadd
xchg
or
ret
mov
int
lcall
test
adc
dec
adc
push
lret
cwtl
shll
std
xchg
sub
jno
mov
and
and
int
push
sub
push
aam
aad
std
sbb
inc
hlt
loop
jl
inc
andb
repz
and
fxch
sar
inc
dec
xchg
mov
mov
add
mov
shrb
adc
mov
jnp
adc
aaa
adcb
pop
aaa
adc
jb
lods
jno
dec
or
imul
cmpsl
in
jle
out
cmc
ss
mov
test
loope
test
test
scas
mov
mov
mov
push
fisubs
cltd
mov
pusha
or
rcll
pop
dec
iret
push
lock
addl
xor
mov
pop
sbb
aam
js
xor
sbb
je
fsubr
adc
inc
mov
xchg
bound
enter
shlb
scas
into
jl
pop
out
push
push
jns
cld
xlat
adc
sbb
or
mov
jmp
stc
stc
jmp
xchg
sub
sahf
js
test
and
jge
adc
jae
adc
adc
push
fcmovnu
mov
es
mov
xor
fldt
jne
insl
out
bound
pusha
movsb
xchg
sub
or
xchg
stos
add
das
fbld
adc
sub
in
mov
pop
xchg
jnp
sti
es
fsubl
data16
fcompl
test
lea
mov
mov
in
orb
outsb
push
fidivrl
push
xchg
xlat
lcall
or
ror
test
lahf
adc
xchg
push
test
enter
inc
xor
inc
popf
in
sbb
xchg
pop
inc
adc
mov
movsl
mov
mov
pop
sub
cmp
int3
icebp
add
xor
cmp
test
or
sbb
adc
lods
sub
out
sub
add
stc
cli
stos
or
bound
cmpsb
loop
icebp
psadbw
jbe
mov
js
xor
xchg
pop
in
mov
adc
sub
dec
stc
insl
push
lret
pop
dec
cwtl
mov
push
imul
clc
mov
fldcw
das
dec
dec
mov
ds
pop
aas
fsub
shlb
fsubrs
xchg
repz
mov
loopne
or
fiadds
mov
bound
push
shlb
js
jb
or
dec
jae
cmp
cltd
cmp
sbb
aad
xchg
jg
test
dec
xchg
ljmp
cmp
xor
push
xor
mov
jne
call
je
out
out
test
stc
repz
icebp
xor
add
or
in
xor
dec
mov
mov
in
xchg
mov
pop
xchg
popa
sub
jae
pop
aam
int3
xor
xchg
rclb
notl
test
dec
xchg
and
sub
dec
outsl
iret
data16
mov
fisttpll
mov
xchg
mov
push
mov
insb
add
dec
jnp
jbe
jle
mov
insb
jecxz
cli
test
xlat
sub
arpl
mov
test
mov
adc
je
jnp
push
mov
cmp
aaa
negb
test
xlat
mov
jge
cmp
insl
loope
shl
xor
cmc
cmp
jmp
div
mov
xchg
nop
rclb
decl
in
outsl
fisubrs
loopne
mov
stc
sub
loop
stos
scas
test
and
rcrl
aaa
xor
pop
push
in
push
push
cwtl
ljmp
inc
jmp
hlt
dec
pop
xor
adc
ja,pn
xchg
sti
dec
rclb
push
cs
xchg
mov
push
lret
add
lret
xchg
jge
inc
in
cmpsb
xor
enter
and
dec
add
subb
jbe
push
popf
aad
xor
sbb
sub
es
or
jg
ljmp
pop
xlat
roll
cld
pop
out
push
xorb
imul
rorb
ljmp
ret
jmp
dec
sbb
std
in
mov
sbb
insl
push
push
js
jo
test
in
inc
or
cli
sbb
xor
hlt
pop
cmp
push
fstl
lsl
cmpsb
stc
jg
mov
addr16
xor
inc
sbb
jg
xchg
pop
cmp
adc
push
push
ret
pop
lods
fcoms
loope
pop
add
pop
test
or
mov
fdivs
out
in
dec
push
bound
lea
jecxz
mov
mov
mov
push
stos
push
addl
ficoml
adc
andl
ret
cltd
test
lcall
mov
scas
or
dec
stc
xor
int
call
in
cmp
sub
pop
call
and
push
std
ffree
cmp
inc
inc
dec
popa
jne
adc
pop
shlb
mov
xchg
js
mov
mov
mov
loop
xchg
add
mov
pop
into
lock
jg
in
jns
popf
jnp
and
in
pop
and
push
jbe
into
mov
cmp
or
jmp
mov
cmp
daa
jge
fldenv
fldt
add
jmp
xor
add
pop
xchg
push
les
or
pop
notl
or
mov
int3
shrb
shrb
imul
lret
fcoml
sbb
out
sbb
pop
ss
les
std
insl
adc
jae
push
adc
outsb
mov
divb
aaa
pop
int
pop
call
xchg
fists
mov
pop
insl
pushf
mov
mov
mov
sub
push
mov
mov
outsb
xor
mov
dec
xchg
lcall
xchg
dec
and
push
cltd
and
mull
gs
jno
stc
jae,pt
aad
jecxz
xchg
xlat
push
xchg
mov
and
xor
sti
dec
verr
loop
sbb
aaa
fildll
xchg
enter
mov
xchg
lds
aad
inc
sub
mov
jle
add
lods
lea
mov
pop
add
je
insl
push
adc
add
cli
sahf
lods
pop
and
pop
sbb
cmpsl
insl
jmp
icebp
lea
xlat
xchg
outsb
ret
inc
iret
outsb
pop
mov
ja
mov
mov
xor
or
xor
inc
push
data16
repz
dec
mov
scas
imul
movsb
mov
add
inc
dec
sbb
je
inc
lret
cmp
or
aaa
les
and
in
loopne
popf
xchg
dec
xchg
cwtl
andb
out
dec
arpl
and
popa
xchg
jmp
push
movsl
dec
mov
popa
push
rcrl
push
ljmp
push
lods
or
mov
movsl
icebp
push
pushf
addr16
popa
cmp
je
popa
sbb
xor
mov
ret
sub
push
pop
fsubrs
les
loope
repz
movhps
rclb
sbb
push
sbb
jg
cs
in
arpl
mov
imul
pop
xlat
pop
addr16
mov
test
rcrl
inc
xchg
movsb
xchg
jae
inc
mov
call
std
cwtl
aaa
xchg
fs
jp
mov
sub
dec
imul
insl
mov
and
xlat
xchg
test
fdivrp
pop
ss
push
cli
push
xchg
xor
fstps
inc
test
mov
ljmp
aad
sbb
repz
or
sbb
inc
add
popf
push
push
fmuls
notl
jns
sar
fdivrs
inc
mov
insb
shlb
pop
xchg
mov
popf
aas
jo
sti
adc
in
arpl
leave
and
jmp
xchg
xchg
cmpb
fcomp
gs
imul
mov
pop
test
lcall
or
orl
cmp
fildl
fcmovb
pop
movd
mov
ucomiss
pop
xchg
loope
movsl
iret
add
outsl
imul
xchg
lock
lea
xchg
mov
or
xor
xlat
xchg
lret
inc
jnp
addb
mov
lret
jg
repz
sbb
aam
stos
aam
dec
xchg
push
and
xor
dec
pop
add
mov
mov
sbb
ja
push
push
push
inc
mov
lds
adc
push
mov
aam
jecxz
and
outsb
repnz
xlat
adcl
pop
dec
stos
sbb
or
fisubrs
mov
mov
pop
aam
xor
pop
adc
push
imul
cmc
fidivrs
cwtl
xor
xor
inc
mov
add
adc
movsb
cmp
add
inc
popf
inc
hlt
mov
mov
mov
lret
scas
mov
std
scas
adc
sbbl
data16
xchg
jo
cmp
push
lret
mov
ja
adc
sub
mov
adc
lahf
scas
test
roll
dec
test
xchg
cwtl
mov
sti
js
ja
xchg
push
stc
push
xchg
clc
int3
sbb
sub
ret
push
arpl
xchg
js
int3
xchg
sub
inc
xchg
push
idiv
adc
mov
add
jb
adc
pop
jns
add
lods
xchg
ss
add
push
inc
cwtl
mov
gs
or
jmp
mov
mov
cmp
rclb
je
rcll
push
mov
jmp
test
dec
testl
or
push
aam
mov
mov
je
dec
dec
adc
sti
mov
pop
and
mov
dec
scas
cmpsl
pop
inc
jl
and
loop
aas
das
loopne
adcl
subl
lods
add
xorb
int
cs
push
mov
mov
adc
add
scas
loope
lea
mov
jmp
out
and
xor
call
xorl
mov
xlat
movsb
icebp
fildl
pop
testl
mov
mov
jnp
cs
xchg
cmp
lret
decb
enter
leave
ss
cmp
bound
push
out
insl
adc
cmc
lds
push
js
repz
inc
pop
fnstsw
add
dec
adc
pop
add
xor
adc
add
dec
pop
test
dec
loopne
mov
shll
jae
mov
mov
xor
shll
imul
fldt
add
pop
lret
jge
fs
std
sub
imul
push
shlb
push
or
xor
push
xor
sarb
adc
jecxz
sub
iret
add
jecxz
sub
mov
shlb
sbb
js
mov
mov
or
pop
ds
jge
daa
lods
bound
fdivl
jl
xchg
adc
test
lea
lret
sub
out
in
data16
or
les
mov
push
sti
addr16
pop
mov
lcall
adc
inc
push
cmpsl
int
add
adc
inc
dec
inc
push
ss
ret
ret
dec
inc
loop
cmpb
mov
dec
mov
mov
je
sub
arpl
das
lods
fdivl
and
test
jae
pop
outsl
mov
cli
mov
sub
fucomi
daa
in
pop
xchg
clc
js
aam
fidivl
mov
ja
mov
fstpl
xchg
cwtl
inc
clc
or
mov
add
fwait
add
lds
cmp
jg
mov
cmpsb
mov
roll
dec
mov
mov
xchg
inc
push
push
mov
push
adc
lahf
fdivrs
cld
jnp
pusha
stc
pop
cmp
outsb
cmp
fisubrl
xor
clc
stc
outsl
jo
fcmovnb
adc
or
or
rorb
pop
pop
test
push
push
lea
test
imul
cmp
mov
mov
xchg
xchg
cwtl
test
cmpsb
lret
cmpsb
jge
std
pop
push
cld
lcall
in
jns
adc
lds
popf
sbb
std
fistpl
sti
aas
xchg
imul
xchg
cmc
inc
std
into
addr16
add
in
xchg
bound
outsl
js
je
dec
sbb
xchg
mov
cltd
mov
mov
push
push
les
lcall
rorb
and
xchg
mov
outsb
or
xchg
movsl
push
outsl
push
mov
jbe
fidivrs
nop
lcall
out
dec
xor
mov
cmp
out
cli
push
cld
out
adc
push
popa
aas
pusha
cmp
lock
out
mov
aam
aas
pop
cmp
out
aam
or
push
push
stos
movq
lds
mov
arpl
xchg
jns
scas
cltd
scas
jae
add
fstl
sub
mov
cwtl
arpl
mov
dec
sbb
loop
les
cmp
roll
fdivrs
in
jns
imul
cmp
sbb
inc
xchg
into
jo
ja
sbb
pusha
rol
and
and
inc
and
xchg
sbb
mov
icebp
pop
pushl
sub
pop
mov
ret
or
fildll
scas
dec
shrl
xor
cmp
sub
sbb
lcall
push
out
adc
dec
je
and
sbb
or
outsl
mov
int
add
push
jmp
jns
or
stos
lahf
lods
inc
lock
addl
jno
add
frstor
out
pop
xor
mov
jnp
xor
xor
cmpsb
sub
xor
lret
nop
push
js
mov
pusha
ret
sub
shrb
ss
scas
notl
mov
add
clc
test
je
pop
pop
xchg
insl
jg
fdiv
ficoml
jo
inc
xor
jb
push
in
xchg
cld
loopne
xor
lods
dec
adc
stos
fildll
test
in
loop
data16
ss
test
hlt
jo
leave
dec
icebp
lahf
imul
xor
push
dec
cmp
daa
out
pop
or
lcall
or
pop
mov
mov
mov
mov
sti
int
and
stos
testb
jo
fistps
iret
jecxz
dec
jae
stos
cmovns
mov
sahf
stos
or
insb
scas
xabort
add
dec
cld
push
pop
lock
mov
sbb
shlb
xor
into
xchg
shrl
lahf
rcrl
rcr
mov
xchg
std
shll
mov
enter
push
cmp
pusha
pop
lock
push
mov
stos
lock
add
or
fmull
adc
stos
pop
daa
mov
scas
pushl
fisttps
add
mov
xchg
or
mov
mov
jne
cmp
add
xchg
mov
sarb
inc
aad
adc
scas
shrl
adc
mov
mov
xor
jmp
jp
jo
push
dec
leave
add
aam
xor
sub
mov
mov
mov
pop
aad
push
ftst
enter
mov
push
lock
fmul
icebp
nop
pop
sub
fmulp
or
xlat
push
and
loop
jle
stc
repz
jp
test
mov
in
aam
repz
mov
xor
jne
movsb
aad
xor
or
dec
xchg
pusha
adc
sub
pop
loope
ret
xchg
idiv
sbb
icebp
cmc
xchg
js,pn
stc
and
pop
jg
testl
xor
or
inc
test
mov
adc
inc
jae
mov
popa
mov
test
popf
or
cmp
stos
jg
sbb
fxch
dec
mov
stos
iret
cmp
add
cltd
inc
rcrb
adc
insb
icebp
fisubl
fdivr
mov
dec
inc
stos
out
ljmp
push
ja
xchg
sahf
dec
into
test
mov
cld
mov
rcll
into
sahf
dec
int
mov
cmp
test
mov
fxch
call
cmp
jne
js
arpl
in
jb
mov
mov
or
outsb
lcall
mov
imul
rol
or
in
fs
jns
sarb
cmpsl
jns
mov
enter
mov
mov
ficomps
mov
inc
dec
into
mov
lret
int
cltd
mov
pusha
xor
roll
xchg
les
ror
stos
or
push
inc
es
mov
adc
push
dec
or
jae
mov
clc
cmp
popa
inc
pop
pop
push
pop
push
lahf
aad
adc
je
pop
enter
into
push
fisubrl
add
mov
push
mov
mov
inc
xor
faddl
inc
add
shrb
push
lea
add
test
xchg
loopne
xor
mov
dec
mov
shlb
daa
inc
pop
push
mov
mov
mov
dec
add
mov
dec
push
pusha
loopne
jg
sub
jl
add
adcl
xchg
lock
inc
mov
mov
xchg
call
jecxz
push
dec
daa
cmp
test
xchg
scas
subb
fistpll
dec
pop
cwtl
sub
sarb
cli
mov
fldcw
adc
stc
ficomps
jg
jmp
into
jecxz
outsl
int3
cmp
ds
lret
sbb
jno
bound
cmc
repnz
ds
repz
rcll
push
or
sub
pusha
repnz
mov
mov
and
xchg
cmp
jo
insb
lcall
mov
cmp
mov
add
cwtl
js
mov
mov
and
mov
fistpll
jecxz
xor
add
xchg
adc
ret
iret
aaa
jo
mov
cld
cli
syscall
lds
push
jecxz
push
les
shr
shl
in
jae
iret
ret
stos
not
ja
call
jno
sti
outsl
or
lret
je
rcrb
inc
cmpsb
mov
dec
xchg
sbb
xor
aaa
std
cmp
scas
mov
faddl
pop
pusha
cs
xor
dec
or
adc
add
dec
movsb
push
ret
cmp
inc
xor
mov
lods
inc
pop
mov
cmp
mov
mov
sbb
add
mov
adc
int3
loope
sub
ret
mov
ds
pop
hlt
jp
mov
or
gs
mov
lea
xchg
orb
lcall
xchg
mov
iret
inc
fwait
popf
in
pop
and
inc
dec
ret
cld
or
in
rcll
std
mov
icebp
icebp
testb
pop
loop
in
ret
cmpsl
mov
cmp
inc
mov
fcomps
test
mov
or
fldenv
adc
andb
mov
inc
adc
xchg
inc
hlt
andb
jmp
inc
cmp
push
pop
fucom
cli
mov
inc
cltd
xorl
mov
fistps
repnz
adc
mov
add
imul
jns
add
add
insl
loop
test
dec
xchg
xlat
fildl
xor
cmp
mov
add
adc
loopne
out
mov
leave
pop
negb
and
mov
icebp
jg
fyl2xp1
cli
mov
into
mov
dec
test
addr16
je
sbb
fbld
inc
sub
repnz
dec
cli
fwait
sbbb
es
xchg
sbb
gs
out
or
imul
xchg
cwtl
push
aad
test
inc
mov
iret
lea
push
in
inc
sbb
jmp
xchg
bound
ret
enter
test
ret
stos
cmp
xchg
jle
pop
pusha
rclb
pop
xchg
pushf
arpl
fisubs
pusha
xchg
mov
imul
scas
inc
aas
out
cmp
push
dec
insb
cmpsl
pop
in
fnstsw
andps
stos
gs
test
andb
mov
lock
stos
inc
ja
xchg
fisubs
dec
sahf
mov
mov
inc
xchg
divb
push
inc
int3
pushf
push
fbstp
inc
dec
movsl
jo
jo
mov
pop
fmull
repz
jl
and
mov
sbb
fidivs
mov
adc
stos
cmpsb
psllq
andb
push
mov
xor
add
enter
mov
mov
jae
lcall
cltd
inc
out
cmpsl
dec
push
push
sarl
xor
inc
inc
sub
sub
push
stc
daa
add
dec
arpl
cmp
add
jae
ja
push
test
bound
mov
mov
scas
popa
mov
cmpsb
arpl
jnp
mov
cmpsl
inc
add
and
rol
mov
jl
cs
inc
jnp
dec
mov
sbb
push
cmp
push
mov
sti
push
lahf
or
xor
adc
pop
loop
add
jl
out
popa
adc
out
roll
loopne
add
sbb
sbb
xchg
mov
popf
dec
push
and
mulb
mov
inc
incl
jno
push
in
mov
nop
mov
dec
dec
and
xor
or
daa
movsb
pop
mov
pop
jne
xchg
pop
xchg
add
mov
mov
aas
lahf
or
imul
js
int3
cmp
cltd
pop
inc
scas
fs
sub
xchg
mov
mov
xchg
xor
icebp
stc
insl
sbb
daa
sub
sbb
rcl
out
add
ljmp
ret
mov
dec
sbbl
jl
call
jge
sub
out
int3
jne
sbb
adc
add
into
fimull
mov
or
jmp
adc
and
mov
popf
test
sub
das
lret
xor
cmp
sbbl
dec
push
movsl
movsb
mov
jnp
ja
pop
mov
push
sbb
xchg
push
hlt
push
shl
les
mov
insb
iret
ds
xchg
outsb
rorb
loope
pop
repnz
pop
negb
inc
adc
xchg
into
sbb
push
scas
push
push
fisttpll
pop
shl
xchg
and
and
jle
sbb
xorb
cmp
in
mov
mov
or
lea
or
inc
outsb
rorb
in
data16
jo
sub
jmp
das
cmpsb
pusha
jge
gs
inc
mov
rolb
xchg
and
int
xor
adc
movsb
stos
pop
jne
fbld
sbb
mov
mov
mov
stos
cmpsb
inc
fstpt
lods
repz
leave
pop
add
mov
xchg
nop
sahf
add
roll
sub
mov
jg
popf
pop
pop
filds
insl
push
scas
cmp
cmpsb
sbb
mov
pusha
cli
sti
rol
addl
lret
fildll
or
inc
push
shl
leave
cmp
mov
rcrl
fs
push
xchg
adc
push
mov
xchg
ds
cld
cmp
les
pop
adc
push
cld
lods
outsb
pop
add
add
inc
sets
arpl
cmpl
cwtl
imull
into
out
lods
adc
xor
push
pop
dec
mov
cmpsl
and
sbb
pmaddwd
scas
call
add
or
mov
icebp
aas
add
fildl
cmp
insb
adc
pushf
add
repz
jno
and
cmp
lahf
lcall
inc
ret
pop
mov
dec
or
add
dec
fsubrp
sbb
adc
mov
mov
mov
iret
xor
jmp
arpl
push
cwtl
jg
jnp
sbb
cwtl
les
in
call
das
or
aas
push
mov
xor
js
pop
add
xchg
mov
add
jg
mov
or
ss
xchg
aas
push
pop
sbb
xchg
addr16
repnz
bound
jecxz
pop
mov
xchg
jp
lock
inc
movsb
lret
mov
int3
or
push
movsb
push
pusha
pop
mov
xchg
pop
shr
fwait
scas
out
dec
int
pushf
dec
cmp
mov
xchg
mov
push
xchg
rcll
sub
pop
loope
ljmp
mov
adc
fwait
imul
adc
rolb
cmpsl
outsb
rol
mov
push
xlat
or
out
pop
cwtl
popf
imul
mov
xor
add
fisubrl
adc
dec
jb
fimull
repz
hlt
lret
dec
aas
ret
jnp
adc
test
push
mov
jg
add
or
jmp
jo
pop
sbb
int
mov
in
nop
test
adc
negb
inc
out
and
stos
addr16
ljmp
aam
adc
mov
push
adc
or
jbe
ss
dec
dec
scas
xor
test
adc
pop
jmp
jo
enter
dec
hlt
xchg
push
sbb
push
repz
jb
cli
and
mov
mov
rorl
sti
or
push
mov
xchg
jl
sub
pushw
repz
sbb
ss
mov
add
cld
cmp
cli
or
push
scas
outsb
push
fisttps
insl
test
sti
push
mov
dec
mov
shrl
xchg
cmp
in
sbb
add
or
lods
push
lcall
cmp
push
aad
inc
cmp
ds
jle
stos
inc
out
cmp
nop
sti
sahf
jo
pusha
xchg
lods
jl
add
jmp
lahf
loope
inc
loopne
sarb
and
rolb
adc
aaa
je
ficomps
push
jnp
add
inc
mov
adc
ficompl
pop
jae
pop
ds
cmc
xchg
and
pop
aaa
dec
mov
cmp
mov
mov
xchg
loop
aam
add
ja
mov
sahf
fistpl
popf
cmp
mov
mov
outsb
jecxz
sbb
fcomi
mov
push
outsl
adc
xchg
idivl
xor
jp
dec
sbb
and
frstor
popf
lods
mov
stc
jnp
iret
pop
add
std
loopne
sti
xor
aam
and
jle
daa
aad
notb
fisubrl
lcall
mov
push
mov
stc
sub
shr
shrl
movsb
test
popa
cmp
and
out
popa
xchg
ds
xchg
in
addr16
mov
cmp
inc
adc
pop
aam
mov
mov
mov
test
cmp
mov
ds
inc
int
and
mov
cmp
mov
subl
insl
sbb
mov
cmp
mov
ja
shr
cmp
popf
into
or
jbe
fstpl
outsl
rorb
inc
sub
movsl
imul
mov
ss
lods
adc
xlat
mov
scas
dec
dec
dec
fsub
pop
xor
jnp
enter
mov
fxch
dec
scas
icebp
or
test
dec
cmpsl
addb
sti
ja
dec
test
inc
sbb
inc
imul
lds
lods
out
fs
jb
push
pop
mov
sbb
loopne
lcall
rolb
dec
mov
stc
test
test
arpl
add
sub
cs
inc
aad
mov
sbb
dec
imul
std
insb
les
popa
or
or
shr
sti
test
pop
loope
mov
bound
in
mov
aad
pop
js
int3
pop
repnz
xchg
adc
stos
dec
testb
gs
ret
mov
mov
mov
loope
inc
and
mov
or
mov
nop
sub
js
pop
inc
mov
outsl
xlat
arpl
pop
scas
and
sub
dec
icebp
push
jge
rorl
loope
idivl
clc
xchg
cmpsb
xor
jo
mov
test
jbe
jno
push
dec
and
enter
stos
pusha
sbb
jnp
test
jg
cli
inc
mov
loop
pop
bt
jb
ja
nop
daa
lods
mov
pop
out
mov
push
out
clc
sbb
mov
and
sub
ds
pop
dec
rorb
addr16
movsb
imul
popl
or
jg
add
mov
loop
inc
out
push
push
fadd
into
xor
nop
aaa
neg
and
jg
and
sub
sbb
inc
pusha
in
decb
sahf
out
cltd
clc
aam
cmc
hlt
mov
fisubrl
call
enter
fpatan
push
mov
push
mov
fdivp
push
es
cmp
mov
cmpsl
sbb
add
jns
jb
leave
out
dec
pmulhw
cli
clc
pop
sub
mov
idivl
jae
iret
add
cwtl
mov
mov
movsl
popf
cmp
cmp
gs
xlat
jl
dec
fistpll
ss
mov
cwtl
bound
or
xchg
xor
fcomps
popf
fcompl
lds
lcall
mov
jo
dec
ret
insl
leave
xchg
es
pop
ret
xchg
sbb
fcmovnu
dec
sub
lea
or
sbb
out
stos
into
jno
mov
outsb
popf
outsb
adc
mov
aam
imul
mov
test
xchg
adc
cmp
and
data16
jmp
je
mov
outsb
push
out
das
mov
aam
mov
jl
out
sub
stc
push
test
push
fwait
pusha
adc
sbb
stc
cli
repnz
pop
pop
shrl
pop
pop
notb
xorl
mov
pop
ret
std
fsubrs
jecxz
fldcw
rcrl
dec
arpl
dec
inc
pop
out
rcl
addr16
pop
push
fs
out
imul
cmp
mov
leave
add
dec
arpl
adc
add
or
pop
fcmovnu
popa
mov
add
xor
and
push
test
xorl
add
aad
jl
and
inc
jl
jecxz
clc
ret
mov
and
ljmp
repnz
sbb
dec
movsb
mov
vsqrtpd
out
jp
loopne
xchg
movsb
mov
sbb
scas
mov
xor
and
dec
mov
cli
lock
fs
xchg
cs
mov
mov
sub
cli
stos
ljmp
fcoms
pop
aas
pop
mov
outsl
popa
or
inc
adcb
icebp
add
pop
mov
xchg
gs
out
cmp
xchg
push
fiadds
cmpsb
cmp
mov
and
divl
lods
xor
in
in
jo
dec
movsl
push
cmp
mov
mov
ds
pushf
sbbb
push
jne
sub
mov
xchg
ljmp
inc
and
je
clc
dec
jge
outsl
icebp
or
push
cmp
mov
outsl
pop
lret
outsl
shrd
test
add
jo
clc
mov
add
enter
push
sbb
pop
push
je
dec
mov
mov
in
aam
mov
andb
add
jb
aas
jge
out
fiadds
jae
sti
adc
cmp
xchg
xchg
push
push
out
stc
mov
jp
mov
pop
repnz
xchg
and
into
into
push
mov
or
outsb
sbb
rcrb
jmp
mov
movsb
jns
mov
mov
dec
adc
mov
sub
dec
mov
nop
or
push
pop
subb
lret
iret
mov
jae
aaa
xchg
cltd
jnp
cmpsl
mov
mov
out
inc
cs
inc
pop
xor
inc
xchg
out
sbb
add
cmp
pop
push
mov
shl
repnz
aas
jg,pt
sub
sbb
jmp
inc
shll
insb
add
ret
cwtl
pop
cmp
sbb
or
scas
push
mov
mov
and
push
xchg
xlat
xlat
notl
cmp
leave
ljmp
fucomip
fldcw
stos
aad
dec
fucom
and
test
adc
aad
fldt
in
inc
call
jge
inc
sbb
insl
xor
or
add
rol
and
test
inc
cli
pop
jl
test
xchg
ret
rcrl
lret
fldcw
loope
lahf
pop
add
cli
pop
and
fistps
sbb
add
jl
cmp
es
add
andl
add
mov
es
mov
sbb
mov
rcll
mov
push
pushl
scas
fwait
loopne
cmc
mov
arpl
jge
jbe
mov
inc
cmp
icebp
mov
int3
push
mov
aad
mov
ljmp
push
mov
scas
and
cmp
mov
stos
mov
ror
scas
in
fxch
out
jl
stos
nop
lret
leave
fnstenv
shrl
xchg
enter
mov
push
sarb
cmp
jle
es
and
xor
test
cltd
in
mov
dec
aad
pop
jg
mov
ret
cmc
jnp
insl
push
lea
sub
movsb
rcrb
mov
ret
insl
mov
dec
cmpsb
cmp
loop
sub
aad
push
push
mov
int3
incl
sub
outsb
cmpsl
ds
jnp
mov
dec
fcoml
xor
dec
ja
cli
pop
push
adc
dec
or
inc
pop
jl
jmp
scas
fs
inc
jl
test
sbb
inc
sub
jge
jmp
mov
stos
push
sbb
in
adc
mov
leave
fcomps
lahf
rcl
mov
mov
lods
push
int3
test
sub
cmpsb
lcall
data16
push
xchg
stos
jecxz
pop
add
push
jo
or
lret
and
addr16
sbb
pop
mov
cld
or
scas
fwait
repnz
mov
into
les
mov
push
adc
mov
xor
add
xor
mov
pop
sahf
sbb
cmp
test
sbb
out
imul
mov
add
or
int3
outsl
addb
sbb
adc
cmp
repz
mov
test
push
out
and
data16
push
sub
inc
mov
add
sub
pop
push
pop
pushl
sub
call
mov
pop
adc
lret
std
arpl
stos
xor
in
mov
jb
arpl
stos
cs
pop
leave
ja
mov
pushw
mov
sbb
inc
add
pop
pop
out
fisubl
adcl
daa
push
cmpsl
dec
nop
stos
mov
mov
mov
xchg
jp
cmc
inc
ret
xor
fs
push
orb
enter
mov
dec
insl
mov
shll
inc
aas
lods
shrl
push
inc
inc
pop
xor
lock
mull
mov
out
aam
movsb
pop
sub
push
sub
data16
sbbb
mov
lea
jecxz
sbb
cmp
scas
adc
jecxz
pop
call
mov
sub
cmp
pop
lods
movl
pop
shrl
adc
adc
xor
in
jbe
add
xlat
push
push
shll
or
mov
inc
stos
or
jmp
and
add
dec
sbb
cmp
mov
in
sub
push
pop
mov
cltd
insb
push
push
push
mov
jae
scas
ret
notb
inc
push
arpl
incb
dec
ss
cmpsb
in
sub
in
jle
out
fidivl
cwtl
jge
mov
push
mov
pop
push
movsb
mov
xchg
shl
sar
fidivl
dec
mov
cs
notl
scas
jge
lsl
inc
in
cli
and
mov
xchg
repz
and
cmc
push
subb
mov
and
pop
or
dec
jne
dec
cmpsb
insl
int3
ljmp
xchg
cmp
sbb
jp
mov
xchg
pop
imul
jmp
or
pop
jg
pop
fstps
pop
push
mov
mov
jae
je
jns
or
dec
cs
aas
pushf
and
fiaddl
push
sti
adc
ds
xor
push
arpl
mov
mov
sub
ja
rcr
mov
push
mov
xchg
fldcw
xchg
pop
inc
aas
into
fwait
mov
adc
add
xorl
test
xchg
push
pop
movsb
pop
jmp
rorl
inc
cmp
xchg
jmp
lcall
scas
push
insb
mov
pop
jl
pop
xchg
fisttpll
and
dec
nop
lock
daa
icebp
xchg
iret
dec
les
aaa
lret
mov
and
mov
and
js
sbbl
jmp
cmpl
lret
lea
loop
add
or
cmpsl
xchg
cltd
jecxz
inc
ret
scas
xor
sti
adc
cmc
pop
lret
jge
call
inc
lock
mov
hlt
mov
sub
mov
leave
mov
and
push
inc
outsl
outsl
cmp
push
ja
fsubr
dec
hlt
insb
mov
arpl
sbb
mov
std
pusha
lods
in
test
lock
pop
sbb
cmpsl
test
icebp
inc
scas
shll
in
mov
inc
jbe
mov
xchg
pop
cmp
mov
sub
cmp
push
rorl
jmp
sbb
push
mov
in
mov
mov
enter
pop
cmpsb
inc
repnz
mov
xchg
popa
xor
data16
pop
add
clc
fmuls
mov
mov
stc
mov
mov
sbb
aam
into
sbb
fnstcw
rcll
enter
xor
in
push
sbb
clc
mov
pop
fstps
lcall
int3
icebp
std
cmp
lea
xchg
js
inc
nop
out
xchg
ljmp
pop
scas
push
ja
xchg
sub
mov
fwait
jl
sub
sahf
xlat
stos
sub
pop
and
and
aam
xor
jo
test
mov
ja
jae
xor
shll
mov
pop
imull
repz
push
push
test
jmp
fdivp
inc
cmp
icebp
jns
inc
jmp
add
arpl
nop
cmp
stc
iret
inc
popa
sub
ljmp
arpl
les
mov
mov
scas
pop
fstp
cld
mov
mov
adc
or
cmpsl
loope
lret
dec
add
repz
ja
add
xlat
lods
and
xor
sub
outsl
mov
out
stos
cmp
xchg
dec
repz
clc
mov
mov
mov
push
ja
shlb
push
in
fcompl
jmp
flds
call
push
repnz
or
movsl
div
jg
dec
dec
je
stc
xchg
in
pusha
push
push
mov
inc
mov
push
test
dec
nop
mov
inc
jne
mov
loope
sub
lds
mov
in
mov
push
push
pop
imul
xchg
fimull
repnz
xchg
dec
nop
adc
mov
mov
es
jnp
pop
ljmp
notl
outsb
fs
sbb
shl
cmp
dec
movsl
lods
cltd
mov
addb
cmpsb
lahf
lret
subb
lds
maxps
and
pop
add
sahf
and
push
dec
jmp
aaa
rsqrtps
xchg
aam
dec
sbb
fs
mov
das
xor
dec
out
movsl
jno
jle
shl
pop
mov
push
scas
mov
sbb
and
insl
clc
pop
xchg
jnp
mov
add
stc
pusha
xchg
push
jle
dec
popf
jne
cmpsb
cmpsl
and
push
hlt
leave
and
xchg
inc
mov
imul
fnsave
mov
lret
jne
fstpt
pop
outsb
outsl
imul
jl
mov
jae
jle
call
or
cmp
out
xchg
pop
adc
push
and
outsl
adc
mov
aad
les
inc
and
ret
pop
sbb
add
in
cmp
or
pop
mov
and
mov
imul
jecxz
xchg
xchg
icebp
mov
aad
add
test
stc
scas
or
jge
pushf
or
sahf
pop
and
adcb
adc
das
push
adc
ret
shrl
pop
into
les
push
int3
mov
sbb
or
rcrb
cltd
les
ljmp
mov
insb
cs
xor
pop
xor
sbb
pop
jecxz
adc
jae,pn
mov
add
aaa
mov
ret
cmc
in
or
into
std
mov
les
adc
mov
cli
mov
jge
lods
jbe
data16
mov
es
add
dec
push
adc
push
sbb
jo
inc
js
push
xorl
incl
xlat
rcrl
shrb
mov
cmp
adc
push
imul
xchg
pop
and
adc
and
fdiv
jb
scas
add
lret
ja
fwait
js
add
fwait
jge
sbb
cmp
lahf
adc
shlw
mov
cmp
sbb
lods
fimuls
inc
stos
bound
push
testb
jle
fs
inc
pop
gs
repnz
mov
inc
pop
mov
cmpsl
lods
notl
rcl
adc
loopne,pn
inc
scas
inc
cmpsb
insb
mov
data16
mov
sbb
push
xchg
lret
repnz
es
xchg
rcrl
xor
ja
sbb
pop
mov
cli
fwait
jne
jge
stos
xor
xor
jns
je
insb
adc
add
xor
or
std
dec
cmpb
nop
push
mov
mov
test
mov
lret
or
aam
fs
mov
add
mov
fldcw
push
or
hlt
mov
imul
fcmovnu
push
and
sti
dec
jge,pn
pop
cwtl
bound
orl
aam
scas
xor
ss
outsl
adc
shrb
sbb
lods
repz
adc
adc
adc
pushf
stos
xchg
cmp
nop
xor
iret
insb
sbb
fadds
pop
ret
ja
lock
es
jno
jbe
loop
push
jecxz
int3
or
insl
add
inc
inc
mov
outsb
fs
pop
inc
dec
lret
dec
imul
mov
mov
imul
incl
idivb
xchg
mov
sub
negb
adc
aas
and
lcall
sti
mov
mov
fucomi
adc
mov
iret
add
cmp
insl
mov
out
jne
pop
pop
leave
sbb
idivb
pop
adc
outsl
xor
fstpl
leave
js
adc
mov
jmp
dec
xchg
loope
sub
rcl
out
sbb
out
mov
push
rclb
jae
xchg
mov
push
pop
mov
mov
dec
rcl
loop
testb
add
and
je
popa
bound
and
nop
and
nop
inc
ffree
pusha
xor
fnstcw
mov
stos
inc
push
adc
test
pop
bound
loop
xor
sbb
ja
fimuls
push
or
sub
pop
push
test
insb
push
and
stos
and
cmp
jne
push
shll
fildll
jo
inc
out
inc
xchg
sarl
sub
xor
repnz
in
xchg
loop
testl
arpl
std
out
sbb
test
into
and
pop
outsl
inc
in
jl
and
pop
add
hlt
outsb
or
push
pop
bound
add
ja
or
and
pushf
mov
pop
mov
or
mov
sub
inc
inc
out
sti
push
lock
movsb
in
push
xor
or
pop
xor
out
mov
xchg
or
movl
and
int3
pop
jp
or
mov
jns
or
lds
inc
lds
faddp
sarl
adc
mov
and
lods
nop
lahf
mul
inc
mov
aad
andb
ds
push
std
sbb
add
xchg
cmp
aam
lock
movsl
mov
xor
xor
sbb
mov
sbb
inc
sarl
lea
or
xor
out
repz
push
test
arpl
jbe
mov
jmp
or
push
stc
cs
scas
testb
leave
pop
aaa
pop
add
sub
fs
rcrl
and
jnp
mov
adc
push
jo
pop
loope
lahf
mov
mov
sbb
adc
jp
sbb
push
or
sub
push
jge
cwtl
add
pop
dec
fbld
xchg
add
ss
ret
sub
inc
lock
mov
das
lret
and
mov
hlt
fistl
cmc
stc
in
es
gs
or
cwtl
jno
add
dec
test
in
fwait
sbb
inc
mov
push
out
aad
aas
enter
outsl
les
jno
xor
adc
jo
add
jle
mov
jnp
jne
mov
and
insl
push
jo
mov
out
jmp
cltd
sahf
test
lahf
cmp
cmp
std
inc
push
ss
lock
mov
dec
dec
stos
jecxz,pt
cwtl
or
mov
test
and
mov
das
inc
ljmp
jmp
or
sub
push
sub
or
sub
scas
inc
xchg
ucomiss
jno
negb
push
xor
push
ljmp
xlat
jb
mov
mov
push
mov
push
inc
adc
clc
loop
sub
add
add
add
mov
xorl
lret
jmp
jg
jecxz
push
adc
or
dec
pusha
fsubrp
mov
push
jle
gs
mov
fwait
or
aad
xchg
mov
fmull
xchg
cmp
cmpsb
adc
mov
dec
pop
cmc
and
inc
loop
lret
sbb
mov
sbb
inc
pop
loop
xlat
sub
shlb
push
nop
int3
xchg
and
mov
loope
bound
lcall
lods
jl
dec
ret
cmp
cmp
fdivrs
bswap
insl
mov
push
jle
mov
mov
loop
inc
outsl
outsb
or
outsl
push
out
ss
ja
out
icebp
dec
pop
cwtl
divl
dec
or
shll
push
cwtl
call
add
sbb
push
inc
fcoml
xchg
sub
pushf
jno
mov
push
fwait
push
mov
imul
mov
lods
fnop
rorl
xor
or
in
sub
jle
scas
xchg
pusha
cmpsl
icebp
add
pop
test
loope
and
adc
rclb
fildll
mov
sub
insb
pop
inc
sarl
xlat
aas
mov
adc
nop
cmpsl
mov
dec
enter
imul
leave
roll
fs
fsubl
mov
into
or
jae
adc
sbb
data16
dec
jno
mov
push
out
cmp
jae
outsb
mov
in
jne
mov
or
hlt
jl
shl
std
es
popf
xchg
cmp
xchg
pop
pop
jns
filds
inc
fldl
pusha
pop
pushf
xchg
pop
jb
loope
add
mov
int3
fmuls
xchg
xchg
push
jmp
xor
arpl
lock
loope
cmp
xchg
mov
js
xor
xlat
push
push
rolb
or
push
jecxz
xor
movsb
mov
lret
aad
sbb
lcall
aas
mov
push
xchg
and
test
rorb
call
cmp
idiv
or
mull
aam
push
fs
out
jecxz
imul
ret
ret
test
in
inc
pop
lret
add
test
mov
xor
in
test
loope
sub
mov
and
xlat
std
dec
gs
xchg
sbb
xor
adc
fcomip
jecxz
mov
lock
iret
enter
pop
daa
movsb
pop
cmp
jbe
out
inc
mov
inc
popf
pop
jne
mov
mov
adc
pop
inc
mov
mov
shlb
mov
lods
sarl
pop
inc
jge
aam
xor
mov
movsb
mov
sti
xor
pop
pop
lahf
ret
add
push
pop
xchg
sub
pop
cmc
add
push
dec
cmp
inc
cs
rcr
lahf
test
addl
mov
enter
lods
imul
cld
inc
incb
push
xchg
mov
dec
jne
loopne
and
addr16
sti
fcmovnb
test
aam
into
mov
mov
stos
dec
mov
orl
test
xchg
and
inc
push
sub
and
xor
push
loop
pop
mov
popa
int3
je
stos
inc
test
insb
cs
enter
cmpsl
push
scas
fadds
outsb
xor
pop
cmp
int3
cmpb
lea
push
sub
test
jae
imul
sub
dec
ljmp
cmpsb
sbb
sub
or
jmp
push
mov
sarl
or
jecxz
add
mov
ret
lock
sbb
rcl
and
sub
xorb
xor
aad
cld
mov
jns
cmp
jg
cmp
fs
out
mov
push
fwait
int
js
fst
push
mov
ss
loopne
push
hlt
or
cld
scas
mov
aam
jge
pop
cld
aas
or
je
xor
jne
rclb
mov
hlt
sbb
imul
pop
enter
test
jecxz
adc
test
sub
mov
or
mov
add
sti
and
pop
mov
sub
mov
and
jo
add
sysexit
adc
and
jbe
popf
adc
mov
test
clc
std
inc
and
bound
test
xchg
imul
shll
mov
push
pop
bound
mov
pop
insl
xchg
pop
mov
mov
lock
stc
dec
or
fidivl
or
aas
inc
mov
aas
sub
mov
lea
jns
or
aam
insb
push
scas
add
pop
popl
orb
ret
jns
pop
pop
fistps
mov
inc
aam
fdivp
sahf
cmp
data16
xlat
fs
lods
jl
or
sarl
int
jo
test
imulb
repz
loop
jge
insl
rorl
shrb
xor
sbb
stc
mov
or
inc
fucomip
jne
ret
test
xor
mov
jle
shlb
inc
and
push
push
outsl
pop
pop
scas
or
add
movdqa
fcmovu
push
sub
subb
mov
cmp
enter
mov
rcr
jmp
addr16
push
in
jge
inc
xor
sarb
sbb
cld
iret
jp
arpl
adc
fstpl
incl
movsb
ja,pn
test
test
mov
movsl
xchg
stc
aad
mov
mov
fistpll
pop
test
popa
mov
jmp
fwait
test
mov
jno
inc
stos
jnp
push
push
inc
ds
lret
inc
popf
jmp
xchg
sbb
push
and
data16
cmp
xchg
in
sub
fsubp
and
daa
cs
iret
add
test
adc
inc
and
cs
xor
or
arpl
xor
dec
gs
push
push
fcmovu
outsb
aad
les
andl
jbe
mov
adc
xor
aad
mov
nop
insl
fldl
test
in
shll
loop
jne
jle
sub
scas
adc
fsts
or
jne
movsl
sbb
mov
pusha
outsl
sarl
sub
xor
jo
mov
dec
cmp
mov
mov
push
push
and
mov
sbb
sbb
pop
lret
inc
lcall
sub
pop
in
andb
cld
add
jae
int
mov
stos
cmpsb
lea
xchg
inc
and
lret
mov
cmp
xchg
cmp
fidivrs
cmp
inc
out
jne
data16
pop
mov
mov
test
negb
or
add
cli
add
icebp
into
test
or
sub
adc
imull
jnp
add
subl
sbb
xchg
xlat
popa
mov
clc
repnz
in
push
out
popf
nop
fists
mov
jb
data16
cli
cs
int3
cmp
lods
push
add
sbb
cmc
pop
stos
rolb
clc
cmp
imul
push
movsl
xlat
js
ja
nop
iret
push
push
das
pusha
ljmp
inc
sub
leave
jmp
loopne
inc
lods
orl
cmpsl
mov
cmp
xor
xor
orl
mov
mov
pop
push
iret
out
cmc
mov
sub
scas
push
loop
hlt
test
fistl
xchg
fdivl
adc
push
add
add
nop
or
clc
mov
loopne
mov
in
insb
pop
adc
adc
cmp
push
in
stc
jo
loopne
mov
aad
loop
or
push
repnz
xchg
ret
jp
hlt
pop
leave
jge
pushf
movsl
mov
loopne
stos
adc
mov
mov
fwait
ss
push
sub
add
and
and
mov
loop
xor
mov
jl
rcll
or
push
cmp
out
int3
js
dec
daa
int
scas
dec
in
add
mov
adc
sub
mov
test
rcpps
sbb
pop
into
jge
sbb
out
and
int
inc
cmp
loope
mov
sbb
add
sub
add
ja
iret
mov
jmp
xchg
mov
fwait
lods
xlat
cmp
adc
dec
test
jl
or
mov
mov
mov
leave
std
inc
xchg
sub
inc
mov
std
movsl
jl
outsl
mov
mov
nop
out
jge
add
ljmp
mov
mov
mov
push
pop
test
or
leave
rorb
cmpsb
push
lods
call
pop
add
loope
pop
adc
push
cld
popf
xchg
xchg
add
nop
sbb
les
decl
push
push
ret
insb
lods
xchg
fwait
jnp
je
pop
or
xor
add
push
xchg
inc
adc
adc
jge
movl
cs
jns
push
xor
jo
mov
mov
xchg
sub
lahf
pusha
sbb
pop
xchg
dec
mov
iret
jle
loope
xchg
test
daa
sub
imul
mov
jg
ss
adc
cmpsl
add
outsl
lds
int3
lret
dec
enter
mov
jno
nop
sub
into
pop
mov
push
xor
sub
decl
mov
pop
cltd
nop
insb
xchg
scas
inc
xor
les
sub
add
imul
push
mov
push
dec
rep
and
fcoml
mov
inc
es
pop
repnz
mov
cmp
lret
xchg
push
pushf
insl
das
add
cmpsl
in
sub
popa
fdivr
insb
movsb
xlat
int
jne
xor
mov
sub
jo
int
jae
lret
push
add
jo
mov
es
jecxz
mov
fdivs
push
add
test
ljmp
sub
pop
mov
and
sbb
cltd
sbb
arpl
adc
int
xor
sbb
cmp
in
in
pop
push
loope
mov
sub
or
enter
adc
add
movsb
stc
pop
out
ss
inc
out
pop
stos
mov
ret
mov
sbb
je
push
pop
push
shrl
sub
pop
lahf
push
jmp
in
pushf
sub
daa
mov
xchg
lods
clc
cmp
mov
faddl
fsubrs
call
push
les
xor
ds
push
mov
dec
nop
jne
pop
pop
mov
cmp
test
out
inc
or
jbe
dec
dec
jne
arpl
enter
xchg
in
ja
rclb
jne
inc
lret
dec
dec
mov
xlat
loope
and
pop
lret
fldenv
cmp
push
in
and
sti
sti
push
push
scas
adc
lretw
xor
add
jmp
test
and
rcl
test
dec
ja
sarl
roll
mov
int3
mov
inc
and
mov
les
push
bound
call
or
xor
push
enter
mov
cmp
cld
rcrl
or
add
mov
rcrl
mov
shlb
dec
cmc
mov
jne
jmp
fidivl
push
pop
or
xchg
push
flds
jg
cmp
insl
jg
mov
popa
push
inc
cmp
ss
test
add
fisubs
and
addr16
arpl
addr16
mov
js
nop
dec
das
mov
cmp
cmp
adc
jb
orl
add
je
push
xchg
daa
jae
pushf
adc
xchg
loop
dec
in
test
mov
jo
inc
push
mov
pop
out
or
xor
sarb
xchg
jb
or
mov
push
xorl
insb
ret
shrb
orl
cmp
sahf
and
clc
stos
xchg
push
jmp
xor
and
int
ljmp
sub
test
xor
sub
scas
mov
dec
mov
xor
lret
les
sub
cmpsb
gs
sahf
in
lret
mov
cmp
dec
sarb
out
sub
ficomps
add
inc
pushf
xor
ds
cmp
sbb
add
loope
adc
adc
xor
mov
sbb
fstpt
imul
jmp
mov
xchg
push
mov
add
insb
inc
adc
shlb
stc
mov
dec
push
les
pop
pop
cli
adc
repz
insb
jnp
add
jl
add
aas
pop
and
push
sahf
test
aas
cmp
jge
xor
cmp
jl
clc
cltd
addr16
cmp
test
adc
dec
push
out
add
lods
lahf
sub
aaa
std
cmp
add
cmpsl
xchg
mov
fdivrl
jb
inc
mov
xchg
ja
sbb
inc
xor
test
cmp
pop
sahf
out
jb
pop
xchg
cmp
xor
mov
fisttps
add
out
fwait
sbb
jbe
imulb
flds
xchg
mov
mov
int3
aaa
movlps
roll
mov
ljmp
add
les
inc
out
xor
push
mov
jne
mov
and
push
popf
pop
and
or
sub
xchg
lret
pushl
dec
push
mov
mov
push
jno
add
testb
mov
popa
mov
mov
mov
int
scas
cmp
sbb
pop
push
mov
push
jne
pushf
jecxz
adc
inc
mov
cmp
mov
inc
cmc
push
out
mov
mov
sbb
pop
lods
xor
clc
ret
leave
jmp
add
shl
adc
lea
mov
movsl
scas
pop
fistl
adc
pop
pop
movsb
and
mov
out
mov
fs
mov
push
fidivrs
cs
jbe
xchg
hlt
fsubr
mov
rcl
lahf
add
outsl
mov
jne
jne
xchg
in
xchg
sub
movsb
jmp
xchg
pop
popa
fistps
pop
sbb
cmp
ret
pop
test
pop
sub
aad
rorb
dec
jae
std
scas
push
ja
sarb
ja
xchg
out
scas
fs
dec
insb
pusha
jp
push
es
lret
cld
mov
xchg
push
cmp
mov
mov
push
mov
mov
ja
sahf
cmp
sbb
push
mov
cpuid
push
sub
mov
mov
rcrb
imul
push
mov
sbb
lock
sbb
push
test
jne
jb
pop
xchg
jge
pop
shr
repz
loope
xor
sub
push
cli
jne
xchg
mov
std
cmp
out
in
jb
inc
rolb
jmp
mov
lcall
dec
cmp
push
mov
jne,pt
cmc
dec
dec
mov
jmp
rolb
adc
outsb
mov
ss
xor
movsb
jmp
sbb
test
es
mov
mov
or
jecxz
lcall
and
push
cmp
aam
mov
test
push
ss
pop
int3
iret
cld
lea
mov
inc
mov
pop
sbb
mov
cld
loopne
std
sub
insb
imul
jge
mov
scas
inc
gs
and
add
sub
rclb
mov
lds
mov
int3
mov
mov
repz
sbb
lahf
inc
cmpsl
ret
xchg
mov
inc
mov
xchg
cs
mov
outsb
mov
fldenv
pop
jmp
in
adc
lret
pop
lret
sahf
sub
jmp
test
mov
xchg
mov
int3
repz
outsl
mov
imul
in
add
push
pop
mov
sbb
imul
cmp
push
xor
add
int
mov
jo
loope
add
daa
push
fnstenv
mov
sub
push
sbb
and
hlt
sbb
movsl
psubusb
or
jecxz
adc
orl
cmp
orb
adc
imul
fnstenv
popf
ja
nop
imull
adc
xor
or
jp
push
jnp
xor
jae
or
sti
test
dec
icebp
cmp
fcoml
rorb
cmpsl
xor
sahf
push
lcall
stos
fbstp
cli
adc
lahf
stos
aaa
imul
aas
push
jl
mov
adc
outsb
repz
rcrb
movsb
data16
je
test
pop
call
add
push
push
imul
mov
add
lds
movsl
jnp
inc
or
leave
add
lods
stos
push
out
xchg
cmp
dec
call
lock
sub
scas
ja
into
in
lods
outsb
adc
aas
mov
lods
push
insb
sub
cmp
test
lods
inc
cmp
sbb
xchg
movsb
out
inc
xchg
mov
sub
mov
lcall
mov
paddw
bnd
loopne
fists
testl
jns
iret
adc
add
or
mov
xchg
dec
fstpt
cmp
nop
test
clc
sbb
xchg
or
jl
push
sub
shrl
pop
mov
movsl
mov
loope
mov
popf
inc
dec
cmp
mov
lods
lods
xchg
push
cmp
xor
imul
sbb
jno
jae
imulb
sub
sarl
dec
or
repnz
add
stos
xor
out
cmc
das
test
push
sbbb
inc
fwait
and
push
aas
push
insb
xchg
cmp
sti
insl
fcoms
rclb
lods
test
outsb
popa
dec
pushf
je
mov
xor
inc
and
sub
jge
insb
lahf
pop
js
adc
addb
jne
sub
pop
push
jmp
jbe
outsb
repz
shl
ficoml
addl
fucom
cmp
xor
inc
xor
lret
mov
or
dec
das
stos
add
andl
lahf
sub
and
data16
xor
clc
std
outsb
js
jg
mov
xor
rcr
xchg
add
mov
test
out
cmpsb
repz
add
arpl
jo
jbe
mov
fwait
cmp
or
into
cmpsb
das
mov
mov
je
push
lods
in
cwtl
leave
out
inc
xchg
loope
mov
xchg
xchg
xor
pop
ljmp
js
mov
in
inc
aad
pop
mov
dec
movsb
push
test
pop
pushf
sbb
rolb
pop
push
test
lahf
fnstcw
push
paddusw
mov
fistl
or
and
jb
sbb
inc
push
pop
scas
les
dec
adc
inc
roll
pushf
or
push
mov
and
sub
adc
movsl
dec
or
dec
jne
dec
mov
orb
pop
sarb
sub
sub
js
sub
pop
or
stc
test
in
call
push
jns
addr16
and
dec
inc
aas
leave
fistps
pop
shl
mov
les
scas
and
pop
push
push
js,pn
int
cmp
es
push
sbb
add
aad
add
mov
mov
popf
cmc
in
insb
xorb
push
adc
push
mov
mov
insl
push
mov
sub
adc
and
lret
cmp
lods
lret
push
mov
test
mov
push
aam
lods
ja
leave
dec
xor
mov
mov
aad
cmp
imul
jmp
or
nop
imul
test
fldcw
push
mov
stos
out
ljmp
loope
ret
jae
rcl
pusha
xchg
add
pop
stos
stos
sar
push
jle
inc
repz
push
ret
and
mov
addr16
mov
jge
sub
sub
imul
cwtl
push
dec
stos
adc
stc
sbbb
fdivs
sbb
mov
inc
mov
stos
xlat
lods
lahf
or
into
test
jp
push
or
adc
xor
enter
lcall
andl
mov
ret
arpl
mov
lods
rcr
sbb
movsb
sbb
dec
inc
mov
dec
shlb
pop
add
mov
inc
subb
sub
repnz
mov
pusha
out
jmp
inc
jne
outsl
add
bound
cmp
jg
cmp
into
xchg
movsb
mov
fadd
pop
dec
sub
pop
mov
jg
add
inc
push
mov
or
add
mov
int3
push
inc
xor
jo
cwtl
aam
adc
dec
or
pop
jnp
sbb
arpl
mov
xchg
jo
mov
cmpsb
cli
popa
repnz
mov
iret
lock
into
cmp
fwait
rorb
or
xchg
sbbl
push
scas
enter
dec
lcall
xchg
mov
ds
in
fbld
jecxz
lods
addr16
xor
adc
fimuls
loope
aaa
sbb
fucomi
pushf
pop
popf
mov
add
xchg
out
cmp
out
dec
jno
pop
mov
ret
push
cmc
repnz
lcall
xchg
adc
xchg
out
cld
call
out
cmp
in
pop
or
mov
mov
dec
imul
enter
mov
pop
push
cmp
sub
mov
push
xor
or
std
aad
enter
mov
out
es
hlt
sbb
xor
sub
jb
ficomps
add
lcall
dec
sahf
inc
loop
ss
and
pop
xchg
aaa
add
std
scas
loope
push
sbb
sub
dec
testl
pop
pop
jno
pop
loopne
mov
test
dec
aam
arpl
cld
imul
dec
pop
popa
adc
daa
xchg
ja
add
es
cvtps2pi
adc
and
fwait
mov
push
lret
aas
jmp
jmp
sub
lahf
mov
sub
sbb
pop
xor
dec
lods
lea
pop
enter
cmp
out
mov
arpl
push
scas
push
call
mov
dec
fwait
sarb
jne
push
jle
ret
repz
mov
pushf
or
bound
les
repz
push
mov
pusha
pop
inc
mov
cmp
pushf
push
xchg
adc
xlat
dec
orb
jp
or
adc
fldcw
rclb
lcall
shll
addr16
insb
cmpsb
dec
push
jmp
jg
adc
les
push
rcll
jb
pop
adc
jmp
lds
les
dec
iret
pop
push
test
outsl
cmpsl
in
dec
jg
mov
insb
sbb
mov
scas
pop
cmp
rcr
pushf
sbb
jnp
lcall
add
stc
pop
and
test
mov
insl
insb
cmp
adc
sbb
push
fistpl
sub
add
cltd
push
mov
lds
xor
clc
dec
pushl
xor
cmp
inc
push
out
shl
cmp
or
cwtl
or
data16
push
sub
jge
or
inc
out
cmp
movsl
scas
cmp
test
jne
pop
std
add
add
loop
xor
clc
push
jg
xchg
jl
and
and
push
scas
sub
loop
scas
into
sbb
in
push
hlt
xor
jne
xchg
lret
inc
and
xor
cmpb
mov
adc
add
sarl
add
xor
call
lods
and
fisttpll
push
lahf
push
cmp
fldcw
outsl
icebp
dec
xchg
cmp
dec
bnd
jno
sub
add
adc
cltd
jl
and
mov
rcrl
out
sbb
std
mov
cmpsb
sbb
add
data16
shlb
dec
dec
mov
or
lock
adc
push
and
pop
sbb
sbb
mov
hlt
pop
lret
jnp
inc
adc
insb
and
test
dec
repnz
push
cwtl
add
iret
les
pop
pushf
push
dec
fsubs
outsb
out
jmp
mov
add
jo
mov
movsl
int
dec
mov
sbb
cmp
push
mov
jle
mov
mov
fs
mov
andl
mov
lea
stos
loopne
insl
sub
aaa
adc
shll
dec
out
cmpsl
xacquire
int
popa
mov
mov
mov
aad
dec
int
mov
push
mov
fadds
ljmp
cmp
dec
repz
orb
sti
adc
cmp
sti
addl
push
sub
idivb
jns
fs
or
xor
cmc
lock
mov
mov
dec
outsl
nop
sub
xor
add
push
lahf
xchg
dec
mov
ret
and
inc
adc
xlat
int3
xor
scas
negl
pop
lods
xchg
jbe
insl
mov
adc
sub
test
mov
mov
cmpsb
loopne
fdivrp
fs
dec
mov
mov
pop
or
jmp
filds
out
js
rorb
pusha
stos
xor
mov
mov
in
ret
movsb
mov
call
aaa
scas
and
pop
ja
xlat
notb
mov
xor
adc
dec
push
pop
inc
lock
mov
xchg
je
xlat
xor
mov
push
jno
rdseed
push
mov
sbb
fstp
dec
sub
cmp
std
mov
arpl
bound
lret
jns
mov
jl
mov
jge
xor
sti
mov
testl
add
js
shrd
test
clc
ds
ljmp
mov
or
test
fwait
mov
enter
adc
fcoml
andl
jge
add
or
aam
std
nop
and
push
ss
jle
les
jg
sub
sbb
testl
and
xchg
adc
cmp
pop
mov
inc
bound
mov
movsl
add
jnp
jmp
sbb
inc
cs
test
pusha
dec
mov
pushf
test
mov
mov
pop
nop
movsb
outsb
add
daa
sbb
call
fimull
in
xor
nop
and
fstpl
shrl
sbb
or
mov
inc
stc
enter
push
in
std
jp
addr16
push
pushf
mov
popf
loopne
fimull
mov
xlat
and
xor
icebp
push
inc
hlt
and
mov
push
dec
pusha
les
les
cli
cmp
ss
jae
pop
imul
add
mov
push
cwtl
xor
adc
les
out
mov
jo
add
inc
lea
sub
push
addr16
insb
mov
cmc
xlat
leave
pop
push
adc
add
aam
add
mov
pop
jmp
sti
pop
cltd
and
mov
popa
sbb
dec
pop
aaa
mov
xchg
jle
flds
in
or
mov
mov
xchg
lret
daa
inc
cmp
test
jmp
jl
push
sbb
roll
mov
pop
jb
jne
hlt
mov
repz
pop
fcomps
cld
pop
out
jbe
inc
push
add
and
shrb
push
xchg
out
loopne
cmp
jmp
pop
lods
sarb
adc
adc
out
inc
adc
mov
mov
push
sbb
cmc
daa
scas
cwtl
pop
lahf
xchg
jecxz
inc
addr16
ret
mov
fs
popa
call
out
leave
inc
rolb
lcall
imul
mov
clc
push
nop
les
add
jmp
scas
or
int
push
and
inc
inc
cmp
incb
in
push
rcl
test
push
mov
jne
adc
pop
mov
push
insb
stos
cmp
sbbb
mov
jo
frstor
inc
pop
in
cmc
lods
leave
inc
jle
xlat
adc
or
daa
mov
cmp
out
mov
ret
andb
or
inc
xor
dec
xchg
clc
lret
jge
jmp
jmp
jmp
pusha
mov
jo
fmuls
jb
test
inc
mov
mov
and
loop
push
jbe
sub
inc
xor
imull
inc
push
leave
loop
iret
stos
das
and
insl
sub
je
cmp
push
imul
mov
and
fsubs
mov
jp
mov
mov
fxch
outsb
das
xchg
sbb
add
sub
test
outsb
mov
ret
xchg
lcall
mov
popf
imul
stos
pop
pop
or
push
std
sbb
aas
stos
popa
movsb
int
ficoml
addr16
jns
scas
shlb
xchg
pop
nop
and
pop
insb
push
cltd
jecxz
pop
lods
testb
mov
test
aas
xor
jmp
inc
movsb
adc
cmpsl
push
pop
xchg
mov
and
and
mov
jmp
mov
adc
popa
test
adcl
cmp
adc
cmp
mov
sub
mov
loopne
jecxz
aas
rorl
imulb
mov
in
std
pop
int
sti
fstpt
adc
clc
ljmp
pushf
mov
pop
xchg
mov
ljmp
mov
sub
cmp
mov
shr
mov
pop
pop
xor
jne
and
dec
mov
jo
int
scas
jne
cs
xor
movsb
dec
jmp
jnp
repnz
es
push
fsubp
xor
mov
xor
lock
mov
add
icebp
in
sti
mov
ja
xor
sbb
and
fidivrl
js
sbb
cmpsl
inc
dec
lods
cmp
mov
jnp
inc
jg
mov
bound
aad
jp
dec
xchg
cmc
dec
lretw
inc
lods
xor
cmpsl
sub
fs
cltd
mov
ds
mov
aad
mov
popf
in
punpckhwd
jo
dec
rorl
add
es
sub
sti
mov
xlat
clc
mov
xchg
pop
adc
jbe
pop
cmpb
xor
and
cmpsb
xor
adc
sub
jp
addr16
pop
fwait
dec
mov
repz
fwait
xlat
mov
js
out
aaa
int3
mov
ja
ja
inc
pop
xor
adc
bound
cs
or
mov
push
and
adc
dec
icebp
and
inc
add
jo
sub
xor
inc
dec
xor
shl
cmc
jecxz
sbb
sbb
fmul
adc
jmp
push
sbb
jb
cmc
mov
mov
stos
into
sub
dec
jne
jbe
ret
jl
cmpsb
xor
daa
mov
sbb
mov
sbb
pusha
mov
push
mov
push
xchg
or
or
xchg
out
and
rol
mov
add
pop
inc
cmpsb
fimuls
cmc
outsl
out
xchg
or
sbb
loop
push
in
jno
push
insb
adc
imul
fistl
fdivs
xor
data16
dec
cmp
fstpt
leave
xchg
filds
jb
adc
sub
dec
xor
in
popf
pusha
fidivl
ja
dec
pushf
adc
loop
test
dec
cmp
inc
ja
inc
clc
inc
xchg
mov
stc
mov
xchg
sbb
sbb
jne
stos
xlat
divb
test
mov
test
mov
adc
stos
sti
sub
adc
pop
fwait
test
add
imul
dec
mov
xchg
add
push
mov
mov
cmc
stos
xchg
mov
lods
pushf
iret
ficompl
mov
ljmp
cmp
icebp
and
cmp
dec
mov
push
cmc
xlat
mov
pusha
mov
cmp
or
mov
daa
jbe
push
dec
xor
popf
inc
inc
aaa
push
jb
mov
dec
test
aas
adc
test
int3
stc
in
fisubrs
jnp
lock
out
stos
bound
mov
jbe
or
loope
mov
leave
adc
test
inc
or
cmp
sub
pop
jl
xor
jo
push
and
adc
imulb
popf
push
ljmp
sbb
cli
xchg
jnp
rcr
mov
push
sbb
aaa
std
movsl
cmp
pop
xchg
rclb
pop
and
mov
xor
cmp
add
dec
jno
dec
inc
jo
xchg
es
adc
pop
jo
rorl
adc
jg
cli
pushf
pushf
xchg
push
and
je
and
push
sbb
dec
mov
inc
sub
push
mov
mov
imul
mov
repz
fistpll
pop
inc
or
nop
push
les
adc
inc
and
push
push
rol
repnz
xchg
sub
mov
mov
fwait
xchg
repnz
iret
xchg
pop
rorl
dec
add
adc
jge
and
fs
sbb
xchg
out
mov
js
jg
fnsave
fldcw
fcomps
jge
mov
mov
sub
lock
xchg
sub
cwtl
inc
repz
loop
push
insb
mov
fisubrl
dec
lock
scas
shll
xchg
sahf
mov
movsb
cmp
inc
sub
inc
repz
daa
add
daa
and
stos
gs
jno
xchg
pop
aas
out
sti
pusha
xor
inc
dec
jg
loope
scas
inc
sbb
push
enter
mov
jmp
outsl
dec
out
xor
pop
fucomp
xor
xchg
loope
mov
rorl
outsl
cltd
mov
icebp
scas
repz
mov
cwtl
mov
leave
in
jbe
loope
bound
ss
push
test
roll
inc
test
mov
ret
std
cmp
or
mov
scas
jle
or
out
les
jmp
push
sub
arpl
adc
push
adcl
pop
fisubs
and
dec
mov
inc
pop
les
shrl
adc
iret
ret
stos
lahf
pop
xchg
js
in
cmp
sti
push
lock
lret
nop
sbb
aad
dec
jnp
lea
jg
push
stos
sbb
mov
jg
mov
int
mov
jle
mov
fwait
dec
jmp
xlat
lea
xchg
mov
sbb
xchg
push
mov
mov
clc
cmp
dec
xchg
and
repz
mov
out
icebp
adc
ret
arpl
mov
mov
in
cmp
or
xchg
fwait
das
shl
pop
push
xor
inc
inc
jo
mov
push
and
and
jb
push
lds
cmp
imul
pop
outsl
call
sub
sbb
cli
and
out
sub
cmp
leave
mov
and
rcll
mov
push
or
push
imul
xchg
jb
xchg
xchg
leave
int3
pop
xor
in
xchg
pop
dec
fiadds
lock
jge
pop
mov
sub
jge
lods
insl
jg
pop
insl
lret
repnz
icebp
push
jnp
push
clc
or
fisttps
mov
data16
dec
jmp
xchg
loop
sbb
mov
pop
mov
cld
cmp
inc
push
xor
mov
jo
and
jl
jmp
ja
jb
dec
mov
and
add
test
imul
jmp
stos
aaa
jmp
call
jo
lock
testl
stos
lods
cltd
test
shlb
jp
into
divl
xor
lods
dec
cmp
lcall
add
adc
xor
cwtl
mov
mov
cmp
mov
add
push
mov
repnz
cli
adc
call
enter
xchg
ljmp
mull
fldenv
inc
pop
andl
dec
out
push
sarb
sbb
gs
and
jae
inc
push
push
push
add
test
sbb
push
mov
adc
sub
xchg
cmpsl
inc
scas
frstor
test
mov
cmc
cmp
pop
pop
cmp
or
js
hlt
test
test
mov
jl
lds
sub
xor
maskmovq
outsb
into
cmc
adc
hlt
sbb
xorb
pop
scas
movsb
cmp
and
lgs
mov
and
in
fistps
in
mov
push
pop
xor
sub
push
cmc
in
xchg
sbb
add
ljmp
ficoms
jmp
inc
mov
inc
imul
and
pop
cmpsl
xor
fists
ss
enter
inc
enter
es
lahf
jmp
test
test
inc
test
add
xor
sbb
jns
cltd
movsl
mov
ret
push
out
mov
sub
sbb
xlat
sub
mov
cmpsl
daa
pop
icebp
mov
iret
ljmp
in
test
add
xchg
hlt
inc
rclb
aas
lahf
xchg
jmp
aaa
dec
in
psubq
bound
inc
enter
iret
cwtl
adc
in
inc
cmp
mov
lea
or
popf
mulb
adc
loop
rorb
sbb
cmpl
pop
mov
xchg
clc
shlb
sub
xchg
scas
out
lea
inc
dec
in
mov
lret
in
rcll
push
push
inc
push
int3
aaa
mov
fs
inc
push
test
out
lahf
jns
push
sub
mov
jb
insl
outsl
imul
loop
mov
adc
out
pushf
or
or
inc
xor
orb
cwtl
xor
movsl
out
shll
sub
arpl
pushf
iret
jb
cmp
adc
jg
out
dec
aaa
pop
aas
adc
xchg
lcall
inc
dec
bound
lds
jnp
xor
mov
mov
aaa
repnz
hlt
jbe
pusha
iret
inc
mov
cmpsl
fidivl
lret
ror
adc
xlat
fstps
push
test
jae,pt
stos
push
dec
int3
mov
lahf
mov
add
and
xchg
popf
inc
and
rcr
icebp
xor
jecxz
jo
jp
iret
cli
adc
leave
jb
adc
fidivrl
xchg
lea
aas
lret
xor
movsb
fiadds
mov
test
lcall
repnz
leave
jmp
fbld
outsl
inc
dec
sbb
mov
pop
sub
pop
imul
lcall
ljmp
mov
mov
sti
sub
inc
and
stos
inc
notl
and
ret
or
xlat
stos
dec
mov
add
add
cmc
lcall
cmp
mov
shll
lcall
iret
inc
sub
aad
xor
add
add
push
pop
ret
popa
sub
clc
xchg
and
lods
and
dec
test
in
jno
cmp
shll
inc
jg
mov
lcall
test
iret
push
xor
fwait
pop
loope
loopne
or
xor
xor
fwait
push
cmp
mov
push
lret
sbb
movzbl
outsb
mov
sub
rcrl
jl
and
dec
cmpsl
pushf
loope
gs
scas
fisubrs
jns
mov
enter
cmp
fsubs
dec
rclb
and
xchg
adc
mov
jae
jns
mov
cmc
test
cmc
jne
pop
jns
out
ja
xlat
cmp
sub
inc
xor
and
stos
cmc
leave
movsl
push
idivl
mov
push
inc
adc
lret
and
cmp
mov
inc
jge
push
cmpsl
addr16
iret
loopne
mov
gs
pop
adc
mov
imul
sub
in
xor
jmp
stos
xor
mov
add
and
pushf
test
fldl
cmp
sbb
push
mov
mov
test
push
stos
rclb
inc
call
inc
popa
mov
repz
add
mov
leave
lods
pop
flds
and
add
add
adc
cmp
pop
negb
jmp
sbb
push
jl
dec
out
jae
ficoml
aam
mov
pop
std
arpl
cltd
scas
stos
cmp
pop
inc
cwtl
pushf
insl
cmpsb
mov
lahf
or
testl
or
and
stc
std
ja
push
inc
fiadds
dec
mov
int
aas
sahf
add
adc
xchg
inc
push
pop
adcb
icebp
push
in
lock
jge
mov
jne
push
je
lahf
sub
dec
cwtl
xchg
add
shll
mov
iret
lock
sbb
fnstenv
aas
js
aam
adc
jns
into
dec
test
add
or
adc
jo
pop
fucomi
jecxz
mov
fdivrs
xchg
lods
push
inc
fildll
inc
or
fsqrt
daa
xchg
in
mov
outsb
into
xchg
dec
xchg
lds
sbbl
jb
and
dec
int
xchg
inc
movsl
pop
into
js
add
negl
mull
jbe
test
aam
jge
dec
sbb
pop
cmc
fiaddl
stc
repnz
or
dec
sub
mov
xchg
inc
shlb
lret
sar
lret
adc
and
mov
cmp
push
subb
cmp
xchg
fidivs
push
lods
sbb
mov
test
and
mov
sub
add
push
cmpsl
or
and
inc
shrl
jmp
outsl
xlat
xchg
lods
adc
rcl
mov
or
pop
xchg
lahf
pop
jge
and
sbb
mov
pop
scas
xchg
neg
into
test
mov
aas
popf
mov
jp
sbb
mov
hlt
stos
lret
mov
cmp
sbbl
rcrl
push
sbb
lcall
movsb
divl
cmp
mov
lods
daa
insb
push
xor
push
mov
xchg
xchg
rcrl
enter
mov
or
push
and
andl
adc
popf
sbb
inc
mov
loop
fwait
xchg
pushf
jbe
cld
pop
mov
xchg
stos
les
pop
add
sub
pusha
mov
stos
cmp
popa
andb
cmc
mov
and
xor
ficoml
jnp
dec
es
dec
icebp
mov
and
dec
adc
jl
outsl
ds
loopne
clc
or
mov
adc
add
faddl
loope
inc
pop
fimull
cmp
loope
negl
mov
lret
pushf
cmpsl
push
push
imul
aaa
jp
popf
fwait
sti
stos
adc
test
rcrl
and
stc
test
mov
cmpsb
adcb
cmp
mov
cmp
and
lock
les
adc
cmp
stos
enter
sub
inc
stos
jb
dec
pop
mov
aas
cmp
mov
and
jge
frstor
lret
sub
sbb
jbe
push
mov
push
fsubrp
lahf
add
jae
neg
fistpl
pop
sbb
push
push
rorl
and
movsl
cmp
rcrl
dec
cmpb
adc
and
or
aas
pop
and
icebp
push
inc
shr
jb
lock
scas
movups
ret
mov
push
movsb
std
mov
pop
xchg
mov
cmpsb
mov
pop
pop
adc
aam
mov
adc
jle
fmull
mov
clc
pop
lret
push
sbb
popf
test
xor
xor
std
adc
inc
push
call
icebp
dec
and
inc
fsubrs
out
adc
mov
repz
ret
inc
fwait
xor
div
xchg
adc
or
aas
inc
popa
out
fldl2e
xchg
mov
movsb
jg
popa
add
pop
ljmp
cmpsl
push
adc
jle
push
aas
fsubrl
cmc
or
scas
mov
loopne
add
shl
adc
cmp
xor
dec
adc
fcoml
subb
rcrl
pusha
xor
fwait
sub
test
xlat
scas
out
inc
addr16
loop
mov
xor
sub
adc
xchg
push
mov
pop
sub
lods
mov
mov
or
cmp
fcmovnb
jmp
lock
xor
imul
or
mov
xor
punpckldq
call
je
enter
ja
mov
jne
push
repnz
das
sub
sub
icebp
std
and
pusha
mov
cwtl
sbb
jp
inc
sahf
mov
test
pop
hlt
clc
lock
sub
scas
out
outsl
int3
dec
jnp
mov
mov
jo
sub
sub
or
xchg
mov
arpl
push
out
mov
mov
mulps
ljmp
test
cmp
fsubrs
push
xchg
cmp
popa
insb
push
dec
sub
pop
hlt
dec
mov
xor
icebp
cmp
in
and
out
mov
add
mov
movsl
imul
xchg
push
cmp
inc
mov
insl
sarb
ret
sub
rolb
push
insb
mov
or
jae
in
out
mov
sbb
arpl
popf
or
mov
pop
pushf
cmpsl
icebp
push
sub
push
dec
mov
stos
dec
xchg
sub
mov
decb
add
and
dec
mov
push
xchg
bsr
cmp
mov
dec
repnz
rclb
bound
push
push
xchg
add
add
and
lret
pushf
enter
jl
mov
fucomp
dec
stc
lea
mov
cli
jmp
movsl
push
or
xlat
mov
into
jg
mov
or
mov
sub
inc
sub
je
cmp
mov
stc
test
mov
orl
adc
cld
aas
mov
mov
xor
xchg
in
or
fnstenv
mov
sbb
cmp
pop
shll
pop
add
push
jl
push
inc
repnz
dec
bound
insb
and
rclb
sbb
pop
aas
dec
cwtl
xchg
call
xor
inc
push
notb
shr
ss
cs
sbb
fs
pop
add
jbe
sar
dec
inc
in
gs
cmpb
mov
repnz
mov
cltd
cwtl
mov
popa
pop
std
mov
cwtl
daa
pusha
repnz
movsb
bsr
mov
bound
ljmp
jb
inc
ret
push
jmp
push
es
inc
cmp
cmp
jp
pop
inc
gs
lcall
test
sub
xor
pop
pop
bnd
jl
mov
jbe
sub
sbb
sub
int
mov
add
jns
or
and
xor
inc
inc
stos
aaa
mov
nop
movsb
mov
dec
mov
inc
cmp
subl
test
xor
mov
dec
mov
aam
xor
xchg
jmp
sub
mov
dec
gs
jo
xor
stos
emms
xchg
int3
inc
gs
mov
mov
enter
jge
dec
push
xchg
pop
jbe
xlat
pop
sarb
mov
enter
add
jge
xchg
cmp
popf
popa
lahf
and
dec
jecxz
adc
pop
mov
jo
jbe
push
or
jle
inc
fwait
jmp
xor
xor
mul
repz
out
jecxz
pop
cmp
mov
rorb
shlb
xor
rcrl
dec
ja
xchg
adcl
and
mov
addb
cmp
pop
test
dec
inc
adc
lods
mul
sbb
sahf
loope
rorb
jg
pop
mov
mov
push
inc
adc
sbb
dec
push
mov
je
push
dec
roll
or
push
aas
add
xchg
sahf
mov
dec
pushf
mov
cmp
dec
adc
sub
mov
enter
adc
jbe
cmp
or
pushf
movsl
or
inc
lods
out
ret
mov
pusha
loope
js
pop
pop
xor
out
bound
ljmp
lock
push
adc
inc
push
push
jge
mov
cmp
push
xchg
ficompl
roll
pop
fdivl
jbe
std
pop
inc
pop
sbb
add
xor
pop
je
xchg
push
lods
enter
inc
pusha
scas
cmc
and
or
or
mov
stc
in
fwait
mov
divb
jge
into
inc
lcall
outsb
xor
inc
inc
mov
and
test
cld
cmp
stc
add
mov
test
fcomps
dec
fimuls
mov
mov
cld
testl
clc
arpl
filds
push
movsl
push
dec
aas
fadds
jmp
jp
inc
inc
sub
fldt
leave
mov
int3
pop
dec
xchg
imul
iret
dec
das
ror
inc
push
sbb
or
hlt
inc
or
adc
std
xor
loopne
jg
inc
fisubs
sbb
cmp
xchg
mov
test
sub
sub
pop
pop
ficoml
es
push
aas
inc
aam
pop
das
roll
xchg
and
jns
lahf
mov
iret
lret
push
aaa
xchg
or
out
lods
cmp
out
cmp
mov
dec
movsl
sahf
bound
xor
inc
in
scas
popf
test
add
push
and
scas
jnp
pushf
repz
mov
in
call
lods
pop
dec
lds
arpl
les
lds
inc
mov
jl
aad
xor
popa
sti
fadds
jl
dec
dec
out
xor
push
lret
call
insb
int3
jns
sbb
mov
fucomi
jmp
in
nop
addr16
fistpl
xchg
and
push
out
adc
or
aad
inc
or
inc
jmp
pop
sub
cmp
lahf
or
and
in
push
mov
xchg
and
mov
mov
mov
xchg
test
fidivrs
and
outsb
not
cmp
lods
in
mov
into
stos
repnz
outsl
repz
adc
outsb
xchg
in
dec
mov
dec
mov
ror
jecxz
std
pusha
xchg
pop
xlat
xchg
add
call
cmpsb
adc
sbb
in
mov
shrb
insb
jno
es
xor
and
jns
jle
sub
addr16
out
sahf
inc
sbb
inc
xor
cmpsl
jns
add
hlt
icebp
mov
outsb
inc
and
bound
inc
mov
push
lds
push
jae
lret
xorb
fcompl
iret
out
dec
lds
or
push
push
sbb
xorl
mov
sub
push
in
ds
movsl
xor
inc
pusha
mov
pop
jp
test
jns
loopne
push
mov
and
les
call
jg
in
sahf
inc
movb
je
inc
xchg
push
xor
pusha
sub
xchg
push
add
and
xchg
mov
icebp
jl
jo
jmp
xor
xchg
in
cmp
jno
jmp
gs
fstps
mov
imul
ja
cmp
jbe
gs
lret
mov
xor
cmp
lret
xchg
push
insl
stos
push
lods
lock
mov
jnp
cltd
mov
push
iret
add
jbe
jb
ret
add
aam
push
lods
icebp
not
insb
mov
sti
or
jmp
xor
inc
repz
sbb
push
and
mov
in
cmpsb
xor
cmp
lea
or
pop
out
es
mov
cli
inc
dec
test
mov
fidivl
aaa
inc
or
and
xor
mov
or
cli
mov
stc
popa
dec
rorl
mov
dec
mov
enter
andb
cltd
jb
fiadds
jecxz
fisubs
jo
pop
mov
stc
cmpsl
cmpsb
sub
inc
pop
pop
cwtl
les
mov
cmp
push
inc
xorb
notl
rclb
imul
jle
jle
add
or
xchg
es
sub
jnp
push
sbb
xchg
pop
jl
xchg
sub
xor
pcmpgtd
adc
stos
ljmp
dec
scas
pop
lret
jbe
shll
xchg
mov
and
jns
adc
xor
sub
and
dec
jnp
push
lret
lds
lahf
daa
add
imulb
fcomps
leave
icebp
int3
pop
xchg
jo
sub
lret
mov
adc
mov
and
lahf
ja
xchg
jp
dec
cmpsb
push
sbb
mov
imul
aas
int
mov
push
xor
mov
mov
mov
mov
jne
and
push
add
movsb
mov
cmpsl
sar
ljmp
int3
lret
int3
scas
loope
xchg
xchg
xchg
xor
daa
mov
daa
sbb
lds
jno
rcll
mov
int
repz
xor
mov
adc
push
outsb
xor
pop
pusha
push
add
inc
cmpsl
jecxz
xor
sub
sarl
push
es
and
sbb
add
test
jmp
cmp
mov
out
adc
out
push
ficoms
dec
xchg
out
aad
mov
mov
cltd
xchg
loope
popf
sub
push
lcall
add
pop
cmpsb
push
imul
mov
filds
push
xorl
mov
mov
test
das
test
lea
xor
and
cwtl
enter
ret
push
push
cli
lcall
sbb
xor
xor
xor
push
adc
xchg
pop
loopne
jmp
cltd
mov
mov
int3
loope
adc
test
jmp
lea
aaa
js
inc
repnz
dec
ljmp
lea
sbb
mov
push
sub
lcall
cmc
mov
idivl
loopne
lock
lods
xorb
pushf
push
adc
inc
pop
loop
xchg
pusha
out
insb
dec
pop
sub
pushf
pop
sub
mov
iret
xor
push
shlb
jg
cmp
mov
jbe
rcrl
sub
cwtl
lods
arpl
pop
sub
mov
test
dec
andb
aad
push
jbe
jbe
push
mov
mov
rcrl
aad
inc
cmpsl
test
paddsw
or
vshufps
inc
lods
push
add
sti
sub
cmp
data16
imul
inc
push
jmp
in
dec
mov
push
pop
dec
sub
mov
std
jns
lock
and
xchg
int
loop
mov
xchg
pushf
push
jne
mov
inc
int
in
push
pop
movsl
pushf
fucomp
ds
sahf
mov
mov
mov
push
jno
cli
dec
mov
xchg
and
test
iret
rcrl
shl
xor
and
pop
insb
jno
and
out
mov
pop
subl
mov
mov
mov
cmp
mov
inc
pushf
mov
movsb
int
mov
jae
mov
lods
sub
insb
sti
jmp
lock
fidivrl
pushf
test
fnstsw
lea
jae
or
push
bound
mov
cmpsl
push
sub
jg
insl
xchg
push
dec
lret
jbe
sbb
flds
sub
and
orl
pop
sub
cmp
lds
js
js
outsb
fldenv
fwait
into
leave
mov
cmp
dec
loope
push
lcall
test
and
js
fdivrl
inc
loop
cli
fistl
or
addl
lret
das
or
cmp
insl
jle
mov
int3
sahf
xchg
in
push
mov
mov
aad
xchg
push
mov
xor
mov
rcll
int
pop
in
out
add
cmp
in
pop
jmp
xor
pop
push
inc
mov
jo
push
sub
push
inc
pop
push
pop
out
mov
fbstp
shll
mul
jp
or
jecxz
jae
addr16
addr16
shl
and
push
ret
out
mov
repz
subb
pop
les
movsl
or
scas
dec
jnp
movsl
mov
fildl
cmp
mov
mov
push
filds
mov
dec
cmp
mov
sub
dec
and
pop
sbb
cli
push
sub
test
test
inc
sbb
mov
inc
mov
mov
cltd
xchg
mov
aas
sbb
jb
push
mov
lea
or
mov
sub
cmpsb
fists
out
and
fldl
loope
mov
mov
inc
notb
sub
push
dec
pop
adc
cmpsb
mov
out
adc
adc
sbb
call
xchg
push
xchg
scas
xchg
push
sub
push
lcall
insl
cmp
mov
rolb
subl
sti
in
aam
sbb
jg
jl
shrl
adc
push
inc
jae
sbb
jg
mov
inc
and
test
adc
movsb
mov
flds
xchg
mov
sub
rolb
in
fdivrp
jge
loop
rorl
and
push
or
stos
or
test
or
jge
xchg
xchg
loope
out
rcrl
aam
or
loope
outsl
imul
lret
daa
xchg
add
flds
mov
and
add
and
mov
addr16
inc
outsb
cli
pop
cltd
stos
les
enter
lods
ja
add
and
clc
jo
or
gs
das
and
mov
rcrb
mov
pop
insb
xchg
and
and
dec
cmp
adc
pop
jo
or
xor
ror
sbb
and
add
in
dec
adc
sbb
repz
loope,pn
test
push
xor
fcom
fwait
aas
or
jmp
lcall
frstor
sbb
cld
xor
jns
inc
sbb
gs
mov
cli
cmp
add
add
mov
pop
xor
in
shll
inc
sub
call
xchg
idivb
bnd
push
out
or
js
mov
aam
jnp
add
jno
fs
sbb
dec
subb
gs
xor
fincstp
shlb
clc
xchg
iret
leave
pop
lret
aam
cmp
hlt
mov
mov
ret
xor
sub
aad
int
adc
movl
adc
sbb
lret
lret
sbb
in
xchg
jnp
das
mov
dec
lret
test
test
out
cld
adc
lds
bound
dec
lcall
push
imul
sbb
mov
add
sub
loope
mov
jp
bound
mov
mov
out
xchg
lahf
daa
inc
mov
adc
add
mov
ja
inc
dec
subl
add
orl
out
sub
push
sbb
or
cld
mov
mov
mov
inc
loopne
repnz
adc
push
xor
sub
adc
addr16
ljmp
adc
add
inc
out
push
xchg
inc
jne
add
dec
push
fmull
add
inc
mov
and
cmc
out
ja
frstpm(287
loopne
add
int3
pop
jo
cmp
mov
rorb
clc
push
test
or
mov
sbb
repz
pop
popf
push
jns
push
in
push
cmp
stos
pop
mov
xor
push
popf
pop
in
jmp
incb
cmc
ljmp
dec
jne
cmc
repz
out
sti
loope
mov
xchg
xor
jno
xlat
jecxz
and
jp
jne
xchg
dec
adc
lcall
out
add
mov
cwtl
loop
sbb
insb
aaa
mov
cli
movsl
inc
add
inc
ja
adc
cmp
mov
dec
adc
dec
mov
mov
jge
int3
imul
lret
sbb
pushf
mov
int
popf
cs
fisttps
sahf
push
enter
jmp
sbb
push
adc
pop
xchg
test
sub
shl
mov
xlat
xchg
out
cmp
mov
jp
dec
xor
mov
or
lcall
sahf
or
push
push
fwait
popa
add
arpl
ja
push
cs
fadd
fwait
arpl
jno
push
lahf
clc
mov
jb
sar
and
inc
or
adc
jbe
jne
xor
xor
cmpsb
mov
out
int3
push
movb
xchg
mov
inc
sub
gs
subb
mov
add
dec
cmc
aas
js
push
aas
std
lea
sub
mov
test
jge
sbbb
xchg
adc
aam
lods
push
aad
add
pop
mov
xor
movsl
fsts
jp
cltd
into
mov
lock
test
js
es
lret
jl,pt
int
jae
incb
and
and
xchg
sbb
insl
pushf
in
and
xchg
push
jbe
cld
int
enter
lods
decb
out
push
lea
push
xchg
push
sbb
hlt
int
dec
cmpsb
repnz
loope
outsl
shrb
fwait
adc
pop
loop
xorb
sub
nop
pop
cmp
popf
movsb
pop
pop
mov
rol
outsb
push
hlt
or
call
loope
call
outsb
out
add
sahf
shl
mov
pop
scas
mov
pop
sub
pop
repz
xor
xchg
mov
lock
sbb
insl
sti
seta
or
mov
fistpll
inc
sbb
call
bound
sub
dec
or
mov
fdivrs
fisubrs
dec
cmp
lret
outsb
pop
andb
pusha
or
shlb
pop
xor
or
add
shrl
icebp
xchg
pop
cmp
jne
xchg
into
cmp
fistl
imul
movsb
push
lret
rol
mov
cwtl
popa
int3
adc
jecxz
mov
inc
xchg
fidivs
mov
push
popa
dec
lcall
and
popa
adc
cli
enter
movb
jp
les
add
call
sbb
inc
movsl
popa
mov
fcoms
mov
jno
in
push
in
repnz
mov
push
lret
xchg
pop
xor
cmp
sahf
sbb
jp
or
fstpt
add
stos
in
bound
mov
outsl
insb
mov
xlat
test
sahf
jl
test
fistpll
loope
inc
jecxz
fwait
shlb
aaa
lret
fwait
jae
or
shrb
mov
imul
in
mov
mov
pop
jmp
add
push
dec
xchg
lcall
ret
dec
push
lock
mov
lret
cwtl
cltd
sbb
test
mov
or
or
xor
mov
mov
pop
and
dec
adc
inc
fucomp
pop
mov
inc
call
mov
out
sbb
pop
mov
fisttps
xor
adc
jbe
loop
aam
xchg
fsub
stos
mov
add
mov
mov
movsb
cmp
scas
dec
mov
xor
fnstsw
or
enter
test
ss
and
ja
cmp
or
insl
mov
in
adc
xchg
sbb
jo
ss
lds
adc
mov
ret
sbb
cmp
or
es
xor
pop
fisubl
or
lret
popf
jp
popl
mov
xchg
inc
popf
out
inc
or
pop
jns
sbb
out
enter
lds
pop
pop
movsb
inc
jmp
adc
movsb
push
xor
jb
pop
test
add
xor
int3
push
mul
mov
cmp
sarl
push
test
dec
mov
ret
js
adc
lea
or
aad
negb
sbb
mov
sbbl
cmpsb
sbb
out
inc
mov
xchg
out
imul
shl
cmp
xchg
sub
popa
jge
push
push
adc
jne
mov
xchg
cmp
sbb
jo
xor
hlt
push
mov
or
pop
xchg
mov
pop
mov
dec
sbb
fidivrl
pushf
jmp
out
add
es
push
pop
mov
lret
xor
xchg
xchg
sub
push
add
jns
mov
or
mov
pop
mov
jle
xor
call
jmp
sbb
mov
repnz
mov
faddl
adc
push
sbb
cmp
fisubl
xor
mov
cmc
xor
mov
or
cmp
mov
lcall
lret
cmp
movb
popf
shll
test
inc
decl
or
pop
mov
xchg
movsb
xor
jae
dec
or
mov
push
xor
cmp
add
imul
or
aaa
out
mov
cld
pop
pop
mov
adc
mov
mov
cmp
ds
rorb
sbb
enter
aaa
js
cmp
cmp
push
push
dec
es
ljmp
fldcw
repnz
push
loop
cmp
mov
fldenv
out
loope
aas
aas
adc
sub
aaa
cmp
stos
adc
jmp
push
and
int
mov
stos
out
and
adc
and
shll
adc
lods
lea
cmp
pop
or
test
mov
ja
in
mov
inc
lret
push
xchg
sbb
pop
jge
push
enter
sbbb
push
shll
rcl
cld
push
push
les
std
inc
inc
je
fnsave
cmpsl
cmp
jo
scas
push
pushf
cmc
fmull
sbb
ds
xor
aas
cmp
dec
outsl
scas
fsubrs
adc
mov
xor
sub
and
sub
mov
cli
popa
test
dec
pop
stc
push
data16
mov
xchg
cltd
ljmp
cmpl
dec
fildll
lret
cmpb
negb
mov
xchg
mov
jecxz
add
mov
incb
lea
adc
pop
sub
jecxz
rclb
adc
mov
adcb
cwtl
popa
sbb
jbe
and
dec
js
dec
mov
mov
not
mov
dec
adc
and
pushf
sbb
repnz
sti
push
popf
push
outsl
inc
mov
hlt
push
and
pop
mov
mov
mov
movsb
cmp
pop
clc
cwtl
pop
push
xchg
cmp
insb
add
mov
pushf
in
aas
scas
dec
jo
dec
sub
and
or
and
lahf
jmp
iret
cltd
and
shll
xor
pop
cld
jecxz
test
dec
push
or
pop
mov
push
pushf
sbb
jp
popa
sub
rorb
data16
add
mov
in
out
adc
repz
out
fs
and
lods
cmpsl
lahf
add
sbb
cmc
xor
mov
mov
fwait
fwait
sub
cmp
mov
in
inc
push
fldl
in
repz
pushl
in
push
lock
add
inc
dec
jae
pusha
inc
and
mov
cmp
arpl
cmpsl
xchg
fbld
insb
mov
rorb
fnstcw
push
ds
test
or
mov
add
adc
xchg
or
jmp
jno
or
fbstp
mov
insl
aam
sub
dec
or
repnz
xchg
lock
loope
dec
fwait
cmpsl
cmp
pushf
lea
jg
inc
out
pop
dec
jl
xor
lea
ss
dec
inc
int
mov
mov
mov
mov
jns
sbb
push
arpl
cwtl
dec
push
sub
dec
imul
fwait
cmp
lret
mov
xor
aad
xchg
das
popf
gs
jns
lds
lret
movl
mov
xchg
test
jmp
fstpl
cmp
int
loope
lods
movsl
add
xor
dec
ds
mov
insb
pop
inc
movsb
out
add
and
xor
xchg
mov
fildll
cmp
pop
imul
inc
mov
insb
jb
add
imul
test
mov
aam
mov
adc
cvtdq2ps
loop
lret
aad
es
sbb
or
sti
mov
insb
mov
imul
mov
sub
pop
cmp
adc
push
ljmp
inc
pop
push
lret
pop
dec
cld
fisubl
bnd
pop
call
in
out
xchg
out
pop
cmp
cld
xlat
pusha
shll
push
jnp
leave
or
jb
sbb
fwait
mov
pop
out
adc
xorb
gs
std
inc
stos
jae
nop
jb
cmp
in
push
push
dec
fdivs
sbb
test
xchg
inc
repz
dec
push
rcll
mov
adc
jge
push
mov
nop
repnz
jg
sbb
test
jle
in
jg
outsl
or
dec
sub
mov
jmp
or
fldenv
repnz
add
mov
mov
std
push
iret
cld
cld
dec
xchg
iret
sbb
mov
cld
and
out
and
sub
push
sub
add
addr16
rcll
mov
lock
stc
sub
mov
mov
pop
push
inc
js
ds
mov
enter
es
cmpsl
mov
pop
mov
sbb
or
ret
and
pop
jmp
mov
jbe
test
push
std
sub
sahf
sub
xorl
fdivrl
clc
mov
mov
xor
call
insl
aam
jg
nop
jo
xlat
loop
dec
xchg
dec
inc
pushf
loope
dec
or
pop
push
ja
cld
cmp
jns
adc
mov
jbe
jge
or
out
sub
bnd
mov
int3
jb
test
mov
cmp
lods
test
ror
jp
test
xchg
addb
fdiv
cmpsl
test
push
dec
sub
ret
push
dec
dec
mov
sub
adc
mov
sbb
fcoms
test
jbe
lds
jnp
inc
pop
ds
repz
xlat
lcall
aas
test
sbb
pop
rcll
jb
sahf
hlt
mov
push
jns
mov
pop
cmp
and
sbb
ss
into
xchg
push
lahf
xchg
jns
loop
negl
insb
push
dec
add
pop
pop
fnstsw
mov
jne
cmp
imul
inc
call
xorb
sbb
push
jnp
xor
std
mov
aam
add
out
mov
push
aad
inc
imul
mov
push
cld
and
dec
cvttps2pi
pop
mov
mov
adc
insb
add
leave
popa
out
sahf
fsts
lods
mov
mov
push
into
adc
or
add
and
lea
xor
fsubs
push
sub
stos
lret
addl
sbb
ret
outsb
loope
lods
add
mov
cmp
or
pop
add
movsl
jnp
mov
jle
add
add
data16
test
mov
xor
mov
mov
jbe
in
enter
aas
push
inc
xor
std
add
ss
xor
jl
cmp
mov
out
out
push
jmp
stc
sbb
out
sub
dec
shll
jno
or
adc
sub
and
adc
xorb
fwait
push
pop
mov
cltd
lock
call
fldcw
xchg
call
rep
sub
out
in
mov
insl
mov
cmp
and
xchg
pop
adc
imul
sahf
add
sub
sub
jne
fimull
mov
fs
push
std
icebp
push
jle
scas
mov
sahf
ljmp
cld
pop
jmp
clc
les
je
and
inc
or
jecxz
xchg
fcoms
test
cs
mov
test
sub
inc
and
mov
sub
mov
das
xor
fisubrs
xor
jnp
add
repnz
test
aam
and
pop
ds
and
mov
push
std
pop
push
les
cmpsl
pop
push
sub
pusha
pop
or
fsubl
pop
sbb
cmp
mov
pop
je
scas
pop
daa
mov
out
push
loop
jo
inc
or
enter
repnz
insb
mov
mov
dec
leave
popf
jle
inc
xchg
and
addb
pop
cs
insl
add
dec
cmp
sub
xlat
push
iret
in
xchg
mov
rolb
push
sub
call
ja
push
push
stos
sbb
adc
lret
and
iret
xchg
lock
clc
jmp
pop
movsl
repz
jo
adc
lds
xchg
jl
adc
jg
push
add
jecxz
cmpsb
es
test
test
push
mov
leave
std
imul
cmpsl
push
mov
jbe
jne
cmc
jae
or
das
push
pop
shlb
lock
pop
sub
cmp
pop
xchg
enter
xor
mov
push
jge
addr16
cli
or
inc
or
mov
xchg
insb
addb
scas
cmpb
jle
xchg
or
inc
aam
loope
jno
into
push
adc
scas
inc
imul
mov
add
in
dec
mov
jmp
jno
and
outsl
add
cld
test
stos
cmc
loop
sbb
push
xchg
in
std
test
outsb
jne
fisubs
sub
stos
insl
imul
inc
push
and
add
and
lcall
and
push
jb
inc
mov
push
jbe
scas
pushl
jae
fisttpll
dec
sbb
shll
jge
sub
cwtl
inc
inc
rcll
and
mov
mov
lods
cmp
repnz
and
jecxz
cld
rcll
add
pop
stos
push
adc
or
addr16
sub
mov
adc
push
icebp
jge
mov
xchg
mov
call
pushf
mov
dec
xchg
js
fldl
adc
xorl
xchg
add
outsl
mov
mov
movsl
sbb
add
sbb
inc
add
mov
jge
stos
shll
es
mov
push
nop
xor
out
in
in
sbb
jle
out
outsb
aas
les
jb
lods
lcall
mov
out
sbb
dec
cmovne
push
push
push
movsb
push
loop
int
loope
fidivrs
jp
add
push
sti
push
push
sti
mov
and
in
outsb
mov
enter
dec
dec
popf
out
iret
mov
add
xor
mov
outsb
mov
xor
cli
dec
cmp
xor
jle
out
or
test
mov
add
jmp
stos
xchg
mov
in
inc
or
adc
cmp
add
outsb
or
stc
test
mov
jnp
and
cmp
mov
xchg
hlt
scas
imul
sub
or
int3
ss
arpl
lcall
imul
sti
sbb
adc
fldl
nop
ja
or
pushf
sbb
lods
mov
jp
sub
mov
cmp
inc
iret
testl
test
mov
mov
outsb
lahf
pop
lret
ds
and
push
test
int3
pop
adc
push
lods
arpl
mov
xchg
repz
fsubr
jg
aad
testl
inc
and
mov
xorl
in
fsubs
loopne
sbb
lods
xlat
int3
jno
insl
mov
repz
jmp
add
push
outsb
cmp
adc
inc
lods
sbbb
xor
enter
cwtl
imull
in
jns
loopne
xchg
xchg
cmp
in
fs
xchg
xor
dec
jle
filds
mov
int3
movsb
cmp
jg
das
adc
and
insl
xor
in
int3
or
pop
pop
pop
pushf
in
mov
pop
and
aam
add
adc
inc
mov
ret
outsl
decl
shll
and
push
jne
sbb
mov
inc
nop
sub
rcrl
cmpsl
jp
mov
xchg
xchg
out
adc
mov
jecxz
pop
outsl
stos
test
push
dec
mov
xor
xchg
jae
nop
mov
les
in
pop
repnz
cmpsb
mov
data16
push
dec
lahf
and
sbb
adc
sbb
inc
push
push
add
or
pop
push
test
xchg
inc
mov
cwtl
add
jecxz
outsl
mov
lea
das
fisttpll
clc
dec
std
shll
add
jns
and
dec
mov
fs
xchg
dec
pcmpgtb
add
jb
push
and
cmp
movsl
mov
xor
shlb
addr16
mov
mov
xlat
jb
jno
mov
daa
dec
adc
xchg
btc
popa
or
mov
jne
cmpl
inc
fstp
getsec
into
lods
xchg
ja
dec
mov
sub
hlt
cli
dec
lds
js
or
sub
sub
mov
jbe
loop
cld
je
ret
jb
testl
fs
cmp
testb
xchg
dec
ret
jecxz
cmp
bound
movsb
push
and
iret
mov
or
test
xorb
and
mov
iret
movsb
and
adc
movb
push
ret
dec
ficoml
and
pop
sbb
ds
mov
ds
push
push
add
cmc
push
jmp
mov
data16
mov
ja
icebp
flds
mov
mov
lea
hlt
cmp
leave
jne
mov
and
je
cmp
inc
push
mov
lock
rcl
sub
aad
nop
lea
dec
nop
mov
hlt
cmpsb
popa
and
cmp
cld
cmc
adc
xchg
arpl
cs
ds
jl
add
arpl
mov
stc
jle
stc
cltd
xchg
nop
and
dec
sub
and
std
gs
stc
or
push
lret
inc
hlt
or
xor
fs
lods
push
ret
and
xor
jge
or
xchg
cmp
xchg
ljmp
lods
sub
imul
sbb
popl
jbe,pt
inc
lds
cmp
inc
xchg
aam
scas
push
mov
testl
jb
jno
cwtl
mov
sub
mov
mov
les
test
scas
mov
mov
int
sub
loop
pop
xchg
mov
loopne
mov
mov
lret
jmp
sahf
loope
cs
mov
dec
or
mov
inc
cmp
sbb
mov
popf
push
cmp
inc
rcl
sub
push
mov
sti
jg
sbb
lcall
shlb
ficoml
repnz
lods
pop
repz
jne
and
clc
lahf
xor
js
mov
out
popf
cmc
jge
addl
dec
xchg
xor
jbe
xacquire
or
mov
pop
sub
aam
cmp
pop
push
xchg
adc
fcoml
sbb
sub
addl
test
add
xor
inc
adc
cmp
pop
lahf
pop
call
rclb
loop
jbe
gs
pop
outsl
mov
icebp
sbb
sbb
out
sub
ss
add
pop
jecxz
add
mov
test
les
jns
inc
outsb
idivl
imul
test
push
cmp
aad
pop
js
inc
jbe
ret
mov
sub
cld
inc
aas
sbb
sbb
mov
rclb
cld
stos
xchg
das
lea
mov
ja
outsb
nop
jl
mov
jl
jb
sub
int3
int3
fdivrs
loope
jae
lock
clc
call
xor
out
out
pop
xor
or
inc
push
int
xchg
insb
push
inc
inc
or
out
sbb
int3
cmp
and
dec
adc
push
jg
clc
iret
push
mov
imul
movsb
mov
xchg
arpl
mov
sbb
jae
lret
mov
pop
dec
fildll
das
test
jmp
pop
outsl
in
out
xchg
dec
insb
pop
xchg
jae
lret
dec
add
inc
mov
mov
loopne
mov
or
in
pushf
adc
cli
push
cltd
cmp
test
fcomip
mov
scas
or
psubusw
mov
inc
outsb
jo
cmp
dec
mull
cmpsl
cmc
jns
cmp
pushl
sub
or
adc
das
insl
test
scas
mov
in
ret
mov
push
mov
hlt
stos
push
pop
mov
mov
pop
pop
pushf
into
or
mov
ret
mov
nop
push
push
bound
outsl
push
daa
or
loop
cltd
stos
push
dec
or
dec
inc
imul
mov
push
cmpsb
ljmp
xchg
push
addr16
stc
add
test
xorb
stos
adc
adc
js
in
dec
cmpsl
dec
int3
push
shl
pop
xor
stos
pop
inc
mov
cmpsl
sub
add
pop
pop
cmp
test
pop
outsb
jne
cmp
addr16
mov
or
push
xchg
inc
cs
adc
sbb
jnp
ret
divl
pushf
es
add
push
mov
add
xor
out
out
cmp
mov
movsl
stos
xor
ss
inc
inc
and
lea
or
dec
cmp
push
addl
inc
add
or
mov
mov
pop
lcall
jl
and
cmp
or
xorb
popa
jmp
inc
loope
scas
in
fisubrl
cmp
mov
lock
sbb
aaa
fistpll
or
stos
popf
scas
mov
xchg
test
das
rol
and
fcompl
incb
xor
cmc
fadd
jno
add
sub
lock
mov
dec
inc
pop
mov
in
clc
mov
dec
mov
clc
pop
mov
lds
pop
aaa
dec
jmp
xchg
xor
push
stos
jmp
jne
dec
cmp
pop
ret
popf
je
sub
xor
cmpb
mov
rep
jge
push
gs
stos
mov
mov
push
pop
insb
idivb
jns
jne
dec
pop
sbb
mov
xor
hlt
jb
cltd
std
mov
pop
bound
cmp
out
aad
outsl
push
xor
pop
add
mov
test
jae
jbe
leave
or
outsb
or
jbe
aam
repz
scas
xor
push
push
jl
int3
icebp
dec
add
push
aaa
jnp
sub
cmp
cmc
push
lea
fnstsw
dec
adc
push
cld
sbb
fcomps
sub
je
pcmpeqb
dec
pop
movsb
mov
bound
lods
jns
add
ss
lds
scas
xor
ret
cmc
pop
fcompl
imul
push
cld
dec
ja
hlt
lahf
and
rcl
adc
in
mov
inc
pop
movsb
mov
jb
fcmovb
dec
cld
mov
icebp
popf
sub
repnz
loopne
inc
xchg
jns
rcrl
sub
sub
jns
sbb
cltd
add
loope
js,pt
cmp
mov
jb
pop
mov
jge
jmp
test
fiaddl
sbb
incl
inc
lods
out
mov
inc
pop
jnp
call
gs
dec
push
or
and
cld
popa
orb
testl
hlt
sarb
fiadds
stos
lds
in
sbb
int
and
jmp
lock
imull
outsl
and
xor
ja
xchg
mov
or
jns
adc
push
int
enter
std
jmp
aaa
ret
push
cmp
lcall
mov
out
sbb
sub
xchg
sarl
sbb
test
call
ffree
ja
and
mov
dec
les
ja
sbb
mov
xlat
shl
inc
inc
out
ficomps
lods
cmpsl
pop
loop
mov
ret
call
sbb
cli
cmp
add
cmp
fwait
mov
sbb
hlt
add
push
mov
push
inc
std
mov
cmpsl
sbb
pop
jo
clc
ret
fsubrs
mov
pop
pop
sub
das
mov
cs
mov
imul
jbe
jbe
adc
cmp
inc
mov
dec
out
nop
mul
xchg
mov
imul
adcl
add
mov
rorl
int3
dec
cmpsb
roll
and
aad
imul
aaa
fnstenv
ror
arpl
cmp
and
ss
testb
dec
movsl
fidivrs
insl
shlb
mov
sub
jecxz
cwtl
cmpsb
and
mov
andb
lea
decb
lcall
stc
or
lret
rorb
dec
into
aam
pop
mov
xor
scas
rcrb
leave
insl
insb
test
push
push
and
xor
gs
lret
pop
cmc
js
mov
sbb
pop
sub
push
je
push
pop
fnstsw
cmp
aad
push
add
xchg
inc
dec
out
and
mov
outsb
and
testl
push
push
jb
xor
jnp
imull
dec
cmpsl
aaa
xor
ret
jmp
popf
cld
mov
aam
xchg
inc
stc
ljmp
xchg
lea
add
and
out
rcr
jge
or
mov
gs
in
cmp
cmpsb
or
inc
xchg
cmc
jb
push
out
sub
cmp
mov
mov
lahf
push
mov
sub
push
jmp
stos
pop
and
pop
inc
bnd
repz
jns
int
not
lds
adc
push
in
lahf
fwait
mov
dec
std
push
mov
lods
iret
push
xchg
shll
mov
cli
xchg
pminsw
xchg
mov
mov
shll
fistps
lock
push
push
add
mov
xchg
add
stc
inc
mov
lods
or
pop
add
mov
std
mov
inc
jne
mov
add
inc
cmpb
or
movsl
ret
in
xchg
lods
xor
mov
popf
adc
sbb
and
aad
pop
and
fdivp
mov
fcomip
or
xor
xor
xchg
aam
xor
int
mov
cmc
xchg
repz
jno
nop
jb
mov
mov
mov
mov
in
in
stos
addr16
jnp
fidivrs
out
pop
aam
movsl
cltd
push
jbe
mov
fadd
xchg
fcoms
xchg
pusha
push
adc
mov
lcall
add
jg
jmp
mov
stos
mov
in
add
rol
sbb
and
ficomps
or
xchg
std
pop
mov
mov
std
outsl
scas
push
cmp
push
inc
pop
inc
cs
push
mov
jmp
pop
mul
insb
inc
loop
loopne
inc
jmp
repz
js
xor
lock
div
jb
aad
inc
int
cmpsl
jo
and
jl
sti
inc
mov
mov
stos
jg
test
mov
lcall
jns
xchg
mov
bt
jbe
push
adc
push
stos
cmc
xchg
mov
push
mov
push
push
xor
add
add
mov
cltd
in
xor
xor
repnz
aaa
dec
or
sahf
ret
clc
test
jmp
insl
cld
out
lods
fcmovu
loop
xchg
mov
test
into
test
xor
test
mov
push
jo
inc
aad
mov
dec
sbb
dec
cld
cwtl
or
cltd
or
nop
dec
sbb
add
psubusw
mov
dec
adcl
arpl
notb
imul
add
push
test
xor
test
pushf
jae
or
dec
test
repnz
dec
pop
push
adc
dec
jmp
or
movsb
adc
outsb
xor
movsb
mov
sub
dec
and
daa
jno
fcoms
adc
ret
cmc
adc
mov
or
gs
loop
sbb
mov
stos
inc
mov
cmp
xchg
cmovle
jmp
add
nop
sub
inc
ja
cwtl
xor
inc
idiv
sub
outsb
or
repz
jl
imul
jg
dec
mov
adc
imul
sbb
idivl
repz
push
dec
aas
jecxz
fs
icebp
and
pop
or
ja
xor
cmp
and
aam
int
xchg
std
sbb
push
movsl
mov
cmc
push
icebp
cmpsl
loope
cmp
das
popa
mov
popf
sub
cltd
addr16
lret
das
push
fidivrl
cmpsl
mov
mov
pop
xchg
mov
daa
xchg
mov
lds
cmp
mov
out
mov
xchg
add
iret
add
lcall
pop
hlt
xor
jnp
adcl
inc
nop
out
fdivl
pop
or
mov
add
insl
rep
push
mov
movsb
rclb
adc
js
out
data16
bound
call
jnp
jp
mov
mov
js
je
mov
in
cmp
cld
std
clc
push
insb
cmp
jg
call
es
ss
xor
and
shll
ror
addr16
sub
push
ss
fwait
dec
fadd
or
or
sub
inc
insl
out
jp
dec
mov
push
mov
lahf
popa
andb
bound
inc
arpl
enter
fdivl
sub
xchg
pop
mov
hlt
repz
icebp
dec
xlat
cmp
or
lahf
notl
cmp
xchg
clc
lret
out
mov
stos
out
in
loopne
sub
and
ret
cmp
repnz
mov
jno
mov
pop
mov
mov
adc
rcll
int3
orb
push
or
and
adc
fimull
aam
add
sets
js
gs
pusha
add
mov
fistpll
rorb
mov
sub
or
repz
xlat
lcall
sbb
dec
mov
push
mov
mov
jmp
adcl
cltd
fistps
mov
aas
push
out
mov
mov
ret
push
push
iret
mov
inc
add
popf
pop
call
push
sbb
fistps
pusha
addr16
cli
sti
mov
cltd
orb
jmp
dec
outsb
and
mov
fs
sub
mov
push
push
call
test
ret
pop
aaa
roll
scas
ret
lods
sbb
rcr
pop
test
iret
mov
cmpsl
movsb
cld
xchg
and
push
mov
inc
popf
mov
cwtl
sbb
inc
in
xor
ljmp
fdivs
int3
cmpsb
mov
mov
xchg
data16
dec
imul
es
xor
fucompp
into
sbb
and
ret
mov
mov
jae
pop
push
sbb
data16
push
xchg
insl
pop
frstor
xor
fistps
ds
push
mov
pushl
daa
repnz
mov
mov
push
jle
pushf
add
jg
js
pop
inc
xchg
cmp
and
adc
pop
xor
inc
int3
jmp
mov
test
inc
dec
adc
rol
pusha
sahf
mov
jl
adc
inc
sbb
lds
cmp
mov
add
addb
pop
mov
jge
pusha
xor
jmp
dec
scas
add
sbb
out
lock
jo
add
je
outsb
xchg
pop
jne
add
jne
or
cltd
into
nop
movsb
jno
adc
aas
cmpsl
xor
ret
into
mov
cmp
int3
mov
mov
mov
stos
pusha
or
shrl
loop
outsl
jp
iret
or
in
jne
test
adc
cmp
enter
push
or
lock
add
cmp
mov
leave
adc
pop
or
dec
xchg
ds
adc
outsb
push
insb
call
adc
scas
into
add
mov
fcoms
cmpsl
jmp
in
adc
add
dec
imul
adc
fmuls
arpl
mov
and
addb
insl
push
mov
std
mov
xchg
inc
incb
and
aad
fs
xchg
and
out
mov
inc
adc
xor
mov
jae
mov
fs
ret
inc
sub
xchg
ficomps
pushf
push
test
sbb
push
icebp
into
or
pop
cmp
jbe
stos
cmpsb
cltd
xchg
push
add
hlt
nop
mov
or
or
xor
pop
out
test
lcall
push
adc
popf
hlt
pop
outsl
mov
push
subb
xchg
stos
ljmp
daa
das
hlt
pusha
neg
pop
xlat
push
jb
xchg
mov
pop
cmp
call
or
stc
push
inc
or
inc
mov
int
jns
jae
mov
jae
push
fst
jae
fs
xor
std
adc
ret
roll
shrl
push
mov
mov
movsb
push
int3
mov
and
sub
sub
mov
movl
inc
je
mov
std
push
outsl
add
jmp
or
or
and
stos
mov
arpl
jne
and
scas
jle
dec
stos
data16
mov
mov
js
sbb
xchg
movsl
popa
sub
dec
mov
fadd
inc
jecxz
pop
mov
lea
add
lcall
roll
icebp
shrb
or
inc
xchg
mov
idivb
outsl
std
jae
jb
mov
dec
mov
jl
sub
push
push
js
outsb
and
and
pop
inc
mov
call
cwtl
sub
sub
es
int
aaa
data16
les
lahf
sub
dec
bound
popl
push
xchg
adc
imul
xor
ret
mov
or
rcll
cmc
call
lea
cmc
mov
jl
mov
fcoml
push
clc
out
cmp
jno
pushf
andb
rclb
stos
jp
int3
adc
inc
or
inc
out
in
dec
sub
shll
test
cli
into
cmp
jle
pop
or
jo
in
xor
mov
sub
adc
out
cli
insb
mov
call
movsl
lds
pop
in
xchg
dec
cmpsb
daa
cmpl
out
imul
adc
mov
call
sbb
mov
add
xchg
shr
mov
mov
lds
xchg
or
stos
mov
mov
dec
sub
js
lock
dec
jmp
in
call
jle
xchg
in
dec
jge
lret
jmp
in
icebp
or
or
pushf
popa
les
pop
and
fldcw
sbb
outsl
mov
aad
out
addb
imul
lds
inc
enter
cmp
and
sbb
mov
push
jge
adc
inc
jmp
jbe
sub
pusha
popf
cmp
pop
adc
sahf
testl
mov
cs
repnz
orb
loop
cmp
stos
lret
inc
ss
jl
dec
dec
push
imull
push
pusha
loopne
pop
movsb
mov
rcl
nop
jnp
mov
cmp
iret
les
pop
ret
jl
sub
lods
sbb
pop
pusha
jge
fdivrl
int3
jmp
mov
loopne
scas
mov
cmp
cmp
push
lcall
fs
gs
cld
push
icebp
adc
iret
pushf
xor
jp
outsb
rclb
rclb
iret
cmpsl
adc
into
fs
sbb
sbb
mov
popa
sbb
mov
pop
push
out
stc
dec
fs
leave
mov
inc
movsb
notb
and
push
push
lret
pop
sbb
jne
adc
lahf
inc
xor
adc
mov
pop
lea
xor
imul
les
push
jae
scas
cmp
lahf
mov
orl
js
sub
bound
aad
scas
jge
dec
je
push
pusha
lds
pop
jle
insl
xchg
out
lock
push
cmpsb
movsw
push
sti
decb
test
lcall
push
jno
lods
mov
mov
in
mov
outsl
repz
sub
or
mov
inc
das
sar
stos
jb
sbbb
aaa
sub
xor
xchg
jmp
icebp
mov
cwtl
aam
mov
les
notb
ss
lods
in
clc
sbb
rclb
shlb
lret
xor
movsl
imul
add
jne
lret
or
fcompl
jl
cmpsb
inc
sbb
sub
jnp
shrb
sbb
sarb
out
das
xor
sti
mov
adc
pop
or
jno
cmp
or
xchg
int3
sbb
fdivrs
jp
xchg
bound
scas
andb
or
pop
add
cmp
sub
dec
aas
lods
mov
andb
cmc
sub
out
inc
adc
xlat
fstl
leave
js
scas
dec
repz
xor
mov
bound
inc
out
jae
sub
rcr
and
xchg
mov
sahf
dec
push
or
repnz
xchg
push
and
push
dec
stc
lds
jne
jle
pop
shrl
jle
xor
les
stos
je
loop
out
cli
es
jmp
outsl
ret
mov
in
and
cmp
push
js
es
dec
push
mulb
push
push
jge
insl
xchg
adc
int3
insb
je
mov
push
mov
xchg
push
ret
repnz
lcall
mov
or
mov
pop
xchg
scas
or
cmp
lret
ds
fidivrl
jmp
in
mov
aam
shlb
or
in
xor
inc
sub
aaa
call
fcompl
rcr
outsl
xchg
pop
or
jnp
in
add
cli
mov
push
pop
subb
add
ficompl
pop
pop
pop
rol
aas
inc
pusha
bound
push
test
insb
xor
mov
cmpsl
sbb
mov
cmpsl
scas
sbb
lahf
and
inc
shrl
push
sub
pop
xchg
cltd
lea
cmp
fidivs
scas
inc
adc
fprem
adc
cmp
lea
dec
jae
or
adc
out
pushf
movsl
imul
aas
insb
jl,pt
push
fmul
push
cmp
dec
in
in
push
sahf
psadbw
cmp
cs
add
cmpsl
lock
nop
inc
stos
inc
inc
jae
ficoms
xlat
mov
cmp
ljmp
sub
aas
mov
and
sub
mov
out
mov
cmp
lea
sbb
das
xchg
add
inc
adc
jnp
and
cmp
add
pop
jnp
push
mov
mov
mov
mov
int
orl
sbb
int
add
arpl
dec
out
xor
lods
xor
stc
leave
jns
mov
arpl
dec
in
jne
sbb
outsb
cs
ljmp
push
add
add
shl
aaa
xchg
pushf
arpl
jns
inc
cmpsl
cmp
jbe
adc
dec
enter
jg
and
mov
mov
mov
dec
lret
outsb
es
xor
mov
insl
mov
loope
aaa
push
mov
filds
aad
divb
clc
icebp
test
adc
gs
cmpsl
inc
sub
es
sti
push
mov
out
push
mull
test
lods
mov
lahf
mov
xchg
outsb
cmp
pusha
gs
pop
jnp
jb
or
and
js
add
cmp
dec
mov
push
sub
xchg
pop
ljmp
scas
mov
filds
scas
jle
int3
daa
cwtl
test
mov
mov
cwtl
adc
scas
sbb
mov
jmp
mov
mov
ret
popf
pop
jnp
mov
inc
data16
push
dec
sub
mov
xor
test
push
in
mov
push
out
stc
addl
jne
add
or
pusha
cmpsb
cmpsl
mov
adc
inc
aas
mov
push
mov
inc
test
xchg
jnp
dec
xchg
jp
push
dec
pop
mov
iret
fidivrs
out
pop
pop
pop
gs
adc
pop
inc
outsb
scas
fcmovu
xchg
push
sbb
stos
cmc
add
mov
cmp
jg
or
sbb
outsb
in
mov
lcall
sbb
dec
hlt
lock
scas
fidivrs
add
lods
cld
scas
inc
sti
lahf
movsl
push
addl
les
xchg
dec
or
mov
leave
aaa
mov
fstps
add
dec
adc
push
nop
inc
test
adc
daa
fstps
movsl
push
in
das
leave
push
les
shll
es
leave
mov
adc
jge
daa
int3
stos
insl
add
jge
sbb
xlat
je
mov
insl
in
scas
ljmp
inc
mov
mov
icebp
jmp
stos
dec
loopne
lret
out
loop
inc
lea
imul
je
pushf
add
stc
comiss
mov
mov
mov
insl
ret
imul
dec
scas
mov
dec
loope
push
add
mov
or
mov
and
or
mov
scas
push
addb
pop
push
insb
cmp
push
sbb
cmp
inc
fcompl
ja
mov
jbe
sbb
xchg
jl
loopne
scas
cmp
fisubl
push
sahf
push
das
xor
push
or
pop
mov
mov
and
rolb
icebp
setne
gs
hlt
repz
cs
mov
push
mov
and
ja
mov
fs
push
es
gs
xor
lods
or
mov
cmp
mov
movsb
pop
aad
jmp
repnz
push
fldl
in
pop
pop
dec
xor
clc
ja
sti
inc
dec
nop
fidivl
dec
jge
mov
and
cmovb
out
push
fs
inc
lcall
jge
setp
test
inc
push
int
dec
dec
das
cli
and
pop
xchg
sahf
aad
pop
mov
xchg
shrl
stc
adc
push
xorl
call
push
pushw
xchg
aad
lret
jno
jl
cmp
cmc
out
pushf
xor
xor
add
mov
sbb
fildl
add
mov
sub
mov
sahf
xor
and
mov
or
jle
xchg
sub
cmc
xor
inc
stos
sarl
iret
adc
pop
cmp
push
fadds
loopne
in
push
sbb
fsubrs
xchg
gs
adc
dec
out
movsl
and
je
stc
xor
pusha
out
sub
dec
imul
mov
mov
jmp
or
shl
jae
sti
pop
daa
insb
jp
cltd
mov
pusha
jl
sub
mov
fdivr
jnp
leave
push
inc
push
pusha
dec
mov
mov
lcall
adc
dec
add
push
mov
imul
popf
lds
nop
cmp
jecxz
loope
out
xchg
push
xchg
and
ret
in
mov
jp
push
mov
adc
orb
in
lea
fs
stos
sub
bound
mov
xchg
arpl
pushf
add
cwtl
add
push
sub
and
enter
inc
clc
int3
pusha
out
dec
movb
test
ljmp
pop
mov
imul
bound
daa
jo
scas
loopne
push
mov
repz
add
dec
out
cwtl
stos
adc
stos
pop
sub
and
popf
dec
push
lret
cmp
and
mov
xchg
adc
pusha
sub
cmpsb
ja
aad
aam
jge
insl
add
xchg
pop
cmp
int
and
stos
loope
jae
pop
push
pop
pushf
pusha
sub
xchg
cmc
xchg
or
xor
mov
cmpsb
movsb
mov
mov
jl
cmp
mov
jmp
xor
out
pop
cmp
shr
xchg
xchg
add
nop
xor
xor
cmp
pop
call
jp
pop
xchg
dec
push
bound
ret
pop
or
xlat
test
lods
imul
popl
movsb
mov
mov
adc
lahf
sbb
cmp
cmp
xor
rorb
mov
sub
xchg
cmpsb
mov
or
push
xor
fdivrs
cmp
repnz
inc
lea
add
jo
aas
pushl
push
sub
orb
dec
add
hlt
xchg
sbb
gs
cwtl
or
fcomip
push
add
push
shll
scas
inc
mov
cmp
stos
repnz
mov
sub
into
mov
mov
cli
cli
lods
pop
int3
mov
and
enter
in
sti
jp
jle
mov
push
sarb
and
adc
daa
mulb
lods
pop
outsb
xchg
push
cmpsb
imul
pop
jo
icebp
mov
dec
xchg
or
daa
in
mov
dec
test
add
negl
shll
push
cmpb
xor
xor
test
xor
leave
movsl
cli
or
mov
sti
mov
pop
jnp
ljmp
adc
int3
mov
filds
shr
push
dec
pop
adc
cmp
jnp
sub
lret
adcb
push
movsl
sbb
dec
xor
es
adc
pop
bound
icebp
sbb
out
stos
xchg
mov
jl
fs
test
int3
mov
adc
jp
ljmp
push
push
outsl
mov
stc
jno
mov
fiadds
stc
mov
xor
mov
jp
dec
adc
mov
or
call
push
xor
mov
and
push
xor
mov
cmp
adc
es
in
cmp
loope
cld
or
stc
lea
orb
push
stos
ss
xchg
mov
ss
push
push
mov
pop
cmp
add
sub
loope
stos
push
adc
pop
test
das
mov
mov
ficompl
inc
dec
stos
pop
repz
shlb
mov
xor
xchg
cld
es
pushf
lcall
lock
cmp
pop
stos
and
dec
pop
jl
lods
cs
add
xor
lret
jb
movl
dec
xor
mov
push
bound
adc
stos
nop
jno
pop
iret
addb
cld
fstl
test
repnz
and
or
mov
flds
push
push
add
fwait
push
jl
sbb
mov
and
add
cmp
xchg
push
pop
or
push
adc
in
loopne
jbe
xlat
lret
out
pop
pop
ljmp
popa
jl
dec
lods
cmpsb
enter
ficoml
cmp
inc
jcxz
push
push
inc
sbb
sub
pushf
jge
gs
andl
lcall
ret
mov
pop
xor
stc
ficoms
loope
push
xor
jne
jne
sbb
push
lock
xor
out
dec
push
and
adc
es
shrb
inc
mov
mov
xchg
xor
in
into
jo
xchg
jns
sahf
mov
pop
jnp
fxtract
lcall
vmread
leave
js
fstpl
cmc
jmp
stos
sar
or
push
sbb
lret
push
or
sbb
pushf
pop
rcr
add
cmpsl
cmp
dec
sub
adc
out
sub
lret
jns
cmpsb
in
cmpsl
xor
xlat
mov
std
iret
stc
lock
std
xchg
add
popf
or
cmp
push
mov
fstps
jo
sbb
jnp
stc
test
adc
sub
push
loopne
adc
dec
fs
fs
xchg
push
jno
push
fimull
dec
ficompl
xlat
ljmp
sbb
xor
scas
push
test
mov
mov
imul
inc
call
mov
out
cmp
cmp
sub
repnz
mov
inc
jle
cmp
aaa
les
hlt
imul
inc
push
jmp
cmp
jae
fbld
cmp
lahf
xor
push
jecxz
nop
mov
fstpt
cmc
pop
xchg
adc
pop
cmp
cmpsl
repnz
push
cwtl
int
jecxz
sbb
adc
xor
inc
cwtl
push
cmp
push
lea
mov
fs
mov
and
dec
push
pop
xor
in
push
leave
cmp
push
dec
mov
es
push
mov
mov
sub
rclb
mov
rol
dec
aaa
jne
push
jmp
cld
mov
lret
mov
sbb
dec
jno
jmpw
cmp
test
dec
or
add
in
mov
cmp
scas
xlat
adc
push
push
dec
sub
jne
mov
lock
inc
xor
test
push
mov
adc
mov
jp
jae
insb
repz
test
push
out
or
test
inc
outsb
ret
adc
adc
cld
std
mov
xchg
adc
test
mov
lea
data16
hlt
xchg
sahf
xchg
and
push
lahf
xchg
cmp
in
into
dec
fmuls
addr16
test
in
out
mov
fists
add
aas
icebp
cwtl
movsl
jno
dec
js
sbb
rcrb
mov
jle
cmc
inc
enter
dec
cmp
mov
fdivl
cmpsl
ljmp
xchg
cmc
les
push
idiv
shrl
aaa
jl
lcall
fwait
std
xchg
data16
jecxz
mov
lock
sub
stc
scas
inc
loop
jb
mov
pop
fmull
mov
roll
cmp
jb
xor
xchg
sub
iret
add
cmp
out
testb
ss
roll
inc
int
mov
mov
xchg
popa
aam
movsl
test
adc
testb
xor
jae
mov
sbb
add
pop
cltd
and
push
stos
xchg
xor
xchg
or
loope
and
ds
std
sbb
fldcw
pop
add
out
loop
pushf
movsb
mov
outsb
in
inc
mov
xor
pop
push
cmp
cmpl
mov
faddp
mov
ret
xor
jle
insb
mov
dec
cmpsb
pop
xor
mov
xchg
lret
in
insl
nop
fistpll
cmp
push
mov
jl
repnz
lods
sub
jo
push
cs
std
push
add
lret
add
rcl
cmpsl
insl
lock
jo
cmp
rolb
xchg
jp
out
mov
xchg
pop
xchg
js
std
mov
repnz
or
icebp
lods
inc
subl
fstps
loopne
fbstp
cld
pop
cmpsl
das
mov
repnz
or
scas
add
pop
dec
pop
fdivp
cmpsb
or
add
mov
mov
push
out
add
rol
mov
sub
fs
stos
lods
mov
cld
xor
addl
dec
cmp
repnz
test
cs
add
mov
dec
inc
mov
cmp
fbld
mov
mov
std
shrl
or
mov
nop
pop
inc
xor
in
dec
jge
or
popa
aad
leave
divl
and
inc
jg
jno
les
mov
lahf
jmp
or
sub
pop
push
pop
dec
outsl
mov
xlat
sbb
lret
add
jbe
xchg
icebp
xchg
pop
aad
jb
mov
enter
xor
push
jb
sbb
les
jns
fisubs
push
rolb
or
leave
ret
mov
inc
mov
pop
shl
mov
jg
data16
in
enter
inc
aas
loop
mov
bound
and
mov
xchg
nop
add
shl
daa
sahf
les
or
mov
dec
sbb
pushl
sub
shrb
aad
push
pop
pop
cmp
push
mov
sbb
fcmovbe
mov
mov
inc
and
call
in
mov
pop
cmp
pop
adc
out
in
cmpsb
xor
cmp
test
cli
out
out
cs
mov
aaa
inc
xor
sub
jae
mov
push
xchg
push
adc
adc
int
xchg
cli
add
leave
in
dec
dec
shlb
inc
xchg
popa
in
add
aaa
inc
add
mov
into
and
cwtl
mov
test
andps
inc
and
xchg
mov
out
out
cmp
lods
in
jle
dec
ja
fs
dec
dec
in
gs
imul
outsb
out
sahf
dec
or
cmpb
imul
imul
iret
mov
sbb
cltd
rcl
in
mov
adc
int
fcompl
dec
out
add
dec
lock
jnp
mov
sbb
push
inc
sub
sub
enter
jmp
xchg
jb
sarl
lret
call
adc
outsl
sbb
lods
movsb
pop
and
es
sub
mov
mov
adc
loope
xchg
clc
dec
pop
dec
or
mov
cmpsb
bound
push
mov
jp
dec
ret
jno
pop
fsubrp
pop
jb
mov
pop
stos
add
dec
das
scas
mul
adc
cmpsb
push
push
test
out
imul
mov
orb
push
mov
sbb
push
inc
shrb
in
add
jp
in
ljmp
movsl
sti
ret
cmp
test
lock
addl
and
xor
daa
cmp
xorl
shlb
fbld
jo
xchg
jmp
call
or
pop
lds
ss
push
hlt
bound
sbbb
in
adc
pop
dec
insl
sahf
ja
mov
mov
cld
push
dec
test
or
jne
js
lds
insl
lcall
stos
sub
fisubrs
sbb
stos
rorl
mov
stos
jmp
pop
sub
mov
push
sbb
or
dec
fs
pop
sbb
xlat
loope
arpl
loopne
jge
fwait
daa
icebp
jle
push
sub
adc
arpl
or
ss
cmc
cmp
xchg
cmpb
out
enter
outsb
loop
stos
dec
xchg
ja
and
in
and
jbe
mov
fcmovbe
and
mov
xchg
xlat
pop
arpl
dec
scas
sbb
mul
clc
addr16
sub
pop
xchg
pop
mov
jb
rcr
and
shll
mov
test
push
mov
dec
xchg
cwtl
out
dec
push
jg
into
cltd
iret
dec
hlt
xchg
xchg
stos
push
xorl
call
jp
push
mov
xchg
bound
rol
ja
or
xor
mov
addr16
inc
xchg
xor
cmp
pop
adc
jle
jp
and
mov
stos
dec
pop
push
mov
push
dec
xchg
je
or
jne
ficoml
jl
xor
pop
mov
cltd
pop
push
dec
push
loop
xchg
xor
leave
lock
cmp
ret
cmp
sub
inc
lret
mov
out
retw
inc
arpl
add
divb
pop
push
je
mov
clc
lods
inc
mov
pop
movsl
xor
mov
int3
addr16
pop
rcrl
ja
mov
cmp
or
ss
mov
add
mov
cmp
ficomps
push
mov
xchg
or
pop
cwtl
int
scas
hlt
sub
adc
pop
inc
adc
cmp
dec
add
cmc
stos
xchg
stos
jb
and
fcmove
inc
das
pop
inc
sbb
fs
lahf
jle
sbb
xor
add
push
je
add
nop
pop
mov
fidivrs
je
je
and
dec
out
xchg
add
push
outsb
xor
loope
rorb
mov
loop
cmp
rolb
lea
je
shl
push
aas
mov
and
test
repnz
in
sahf
fiadds
add
das
pop
and
lds
in
addl
fcoml
dec
js
cmp
imul
jge
fsubs
mov
shr
cld
push
in
pop
lods
mov
jle
dec
pop
xorb
mov
pop
ret
push
ret
lock
add
shll
or
or
sahf
pop
das
cmpsb
shl
xchg
cmp
xlat
mov
xor
jns
mov
dec
pop
icebp
rcr
jo
add
inc
inc
mov
jae
inc
dec
add
add
pop
gs
lods
xchg
lret
loope
imul
mov
cmc
leave
rorb
loope
dec
pusha
dec
in
and
jae
sub
inc
arpl
push
or
push
andl
inc
fnstcw
shrb
xchg
data16
les
push
adc
pop
loope
add
xorl
ficomps
xchg
loope
or
test
xor
pop
ret
jle
add
jno
add
pushf
lret
lea
dec
sbb
repnz
jnp
outsb
gs
sub
xchg
aas
lahf
test
dec
jecxz
ret
inc
sub
mov
xor
mov
outsb
mov
and
arpl
or
loopne
aaa
mov
and
mov
shrl
cld
push
xor
cmp
outsl
js
js
jo
xchg
inc
sbb
cmp
les
out
mov
icebp
xchg
pushf
add
lea
fiadds
mov
rcrb
sbb
cmovp
or
test
ds
mov
cmp
dec
jb
mov
inc
cld
ss
sub
std
idivb
rcrb
ret
fisubs
lods
addr16
js
cmp
insl
and
pop
jle
subl
outsl
inc
lahf
popf
repnz
out
pop
sub
xor
ficomps
xchg
imul
cwtl
xchg
data16
es
pop
mov
cwtl
fstpl
call
insb
inc
adc
mov
and
hlt
push
push
cmp
jns
inc
and
pop
adcb
pop
adc
movsb
insb
fists
xchg
jne
mov
sub
and
or
clc
aas
ljmp
into
xchg
or
adc
loopne
mov
and
loopne,pt
iret
jge
movsb
repnz
insb
int
loop
add
xchg
push
insl
adc
cli
adc
ret
popl
fmuls
or
es
cmp
stc
xorb
mov
ja
xchg
cli
inc
mov
push
cmp
stos
add
daa
dec
add
pop
nop
mov
add
mov
jns
ret
and
into
jns
mov
mov
mov
or
ja
push
mov
jns
out
lretw
xor
sub
xchg
les
push
mov
adc
add
lret
int3
ret
aaa
xor
movsb
jne
aam
mov
imul
mov
pusha
lcall
mov
cmp
mov
lods
and
mov
mov
nopl
mov
dec
icebp
out
or
pop
jl
push
gs
adcb
jmp
xchg
out
adc
sub
jne
push
push
push
mov
jge
cmp
insb
call
jo
dec
stc
les
mov
cmpsl
jb
and
in
jmp
pop
jb
xchg
sti
lcall
adcb
in
mov
fsubrs
dec
xor
xor
aam
jecxz
pop
xchg
shlb
test
pop
movb
and
dec
mov
test
mov
and
sbb
outsb
adc
notb
dec
or
pop
daa
sahf
jg
sbb
sub
lcall
xor
add
imul
xchg
aaa
mov
mov
push
adc
loope
lret
insl
adc
push
dec
adc
jl
scas
daa
shl
ficoms
pop
or
test
jmp
and
xchg
shlb
and
pop
mov
into
loope
or
push
lea
adc
ja
sbb
cmpsl
std
movsb
adc
sbb
and
mulb
aas
lods
inc
ret
out
push
sbbb
xor
ficoml
imull
mov
lds
pop
dec
dec
push
push
xor
jo
push
int
cli
pop
adc
jne
mov
stos
mov
jp
or
dec
push
enter
xchg
das
loop
push
push
pop
sbb
in
cs
jns
lods
xorpd
inc
add
aad
sbb
fs
mov
repnz
and
sbb
sbb
lods
push
push
cmpsb
rcll
push
push
leave
inc
inc
fiadds
fs
sub
adc
cmp
fstpl
add
stc
lahf
xchg
test
shlb
into
icebp
lret
xchg
add
sub
mov
push
pop
fwait
jle
data16
das
add
addr16
push
daa
xor
stos
lea
push
add
repz
jmp
sub
sub
pop
sub
dec
push
hlt
push
mov
inc
xlat
mov
es
jno
xchg
jns
sar
negb
das
cmp
mov
xchg
js
movsl
pusha
ljmp
test
lods
fdivrl
mov
pop
and
in
push
addb
mov
je
das
push
out
or
out
mov
je
mov
mov
push
scas
push
jmp
xchg
pop
rcll
xchg
sub
cmp
and
stos
xchg
loope
or
roll
scas
enter
dec
movsl
in
dec
scas
cmpsb
push
loopne
int
jno
stos
dec
iret
mov
xchg
scas
out
add
jg
pop
addr16
lahf
jp
adcl
dec
insl
sub
roll
mov
cmp
cmc
push
dec
pop
add
cli
fildl
jmp
filds
cmpb
dec
stos
jg
adc
arpl
pop
and
mov
sub
push
cwtl
js
inc
cltd
cmp
data16
mov
aaa
cmp
data16
jne
inc
and
dec
lock
cmpsl
es
addl
sti
cmpsl
xor
fcomps
lahf
sub
cmc
fists
and
testl
xchg
ficoml
stos
test
add
cli
xchg
roll
sbb
fsubrl
add
fdivs
add
call
push
loope
inc
cwtl
mov
je
call
test
pop
pushf
movl
xor
mov
pop
xor
jge
adc
mov
js
add
xchg
jb
into
adc
mov
cli
fcom
jns
push
dec
cmc
lock
dec
adc
push
mov
inc
pop
push
or
ljmp
adc
jnp
or
in
iret
daa
mov
dec
xchg
out
ror
enter
or
fwait
std
push
push
adc
out
and
pop
jnp
push
nop
sbbb
and
fwait
test
out
and
fisttpl
movsb
in
or
shlb
ret
push
sbb
push
fsubrs
arpl
xchg
orb
adc
ds
mov
shr
mov
jae
ja
cmp
xor
push
push
jns
or
int
lock
xlat
mov
pop
cli
xor
test
enter
mov
dec
clc
je
push
incb
mov
xor
dec
fs
lahf
or
leave
ss
iret
sub
cli
sbb
xlat
add
xchg
lcall
rcll
roll
test
add
cmp
andb
loope
sahf
jl
mov
clc
lret
insl
push
fiadds
xchg
hlt
loope
sbb
hlt
mov
jbe
ret
stos
mov
shlb
int
subl
xchg
fdiv
xor
mov
adc
push
rorb
add
cmp
jmp
cltd
jp
xor
rol
xor
in
fwait
roll
or
fdiv
pushf
jp
fldcw
push
mov
mov
mov
add
inc
inc
repz
inc
movl
push
out
lods
jnp
lret
or
popa
mov
dec
iret
push
and
pop
jmp
xor
rcll
addr16
mov
inc
sarb
sub
mov
push
or
adc
lds
ljmp
or
mov
imul
out
dec
mov
add
add
arpl
mov
cmc
outsb
jo
inc
ret
lcall
push
xchg
push
push
mov
add
push
sbbl
mov
mov
cmp
inc
inc
out
cmpsb
out
jmp
test
jle
xchg
pop
loopne
cmp
test
lds
mov
fwait
mov
aam
sub
inc
cmp
shl
insb
jg
imul
xchg
fidivrs
adc
cmp
test
inc
push
pop
ja
jnp
mov
dec
xor
insb
pop
imul
and
lcall
push
xor
scas
mov
pop
cmp
jle
pop
mov
cltd
ud0
xchg
sahf
shrl
cmp
push
xchg
and
fs
add
adc
loope
imul
addl
adcl
sbb
es
xchg
sbb
dec
pop
xor
pop
dec
mov
roll
xorl
pop
sub
xor
xor
int
int
cld
jno
leave
mov
jp
adc
pop
dec
push
cmp
add
dec
cmc
out
mov
fcomip
ds
bound
cltd
xchg
lea
push
xor
std
jae
jge
mov
loop
icebp
jmp
mov
push
pushw
adc
popa
cmp
adc
cmp
pop
or
or
pop
pop
mov
cmc
into
addr16
das
xor
test
jp
push
insl
arpl
popl
lods
pop
push
mov
aad
dec
in
pop
mov
xor
jmp
inc
inc
mov
pop
cli
outsb
mov
jnp
dec
adc
xlat
fnsave
add
nop
and
pop
mov
addr16
xchg
fmuls
das
adc
test
out
and
out
lcall
sub
push
dec
ljmp
push
pop
data16
std
push
sbbb
hlt
pop
ficoms
push
in
cmp
fisubl
test
and
xchg
iret
pop
repz
loop
mov
push
mov
or
in
scas
pop
jmp
ret
jmp
stos
inc
fwait
jecxz
int
stos
in
dec
adc
mov
adc
push
pop
mov
pop
fnstenv
pusha
xchg
shlb
inc
xchg
repz
and
fistl
pop
lds
scas
push
sub
movl
jge
rcll
adc
dec
popa
mov
inc
scas
sbb
mov
fstl
popa
testl
mov
out
jb
gs
mov
sahf
jo
into
xor
cld
mov
push
jp
add
adc
shl
jne
cmp
sysenter
fdivs
lret
mov
dec
dec
mov
sub
imul
movsl
jae
lahf
xchg
sub
pop
rcll
mov
les
mov
fwait
icebp
xor
rolb
or
mov
or
in
cmpsb
in
xchg
jge
mov
mov
clc
pop
mov
mov
int3
push
mov
dec
jbe
mov
popf
xchg
cmp
jo
or
sbb
lcall
outsl
mov
scas
sub
add
cmpsb
dec
fstl
rclb
outsb
out
ret
add
addr16
cmp
xor
inc
stos
daa
cmp
aam
mov
leave
je
loopne
mov
pushf
imul
and
bound
jo
mov
fs
hlt
jnp
sub
ficoms
js
pop
movsb
movsb
push
fnsave
imul
mov
or
cs
or
daa
cmp
shrl
popa
cmp
jg
pop
fcoms
mov
push
jb
xchg
pusha
pushf
jecxz,pn
dec
repz
stos
push
xchg
lcall
popf
pop
pop
xor
cs
cmp
rol
out
das
in
icebp
lods
arpl
pushf
xor
sti
subb
adc
jae
inc
leave
bound
fcomi
cli
jmp
addb
add
mov
fcomps
lea
loopne
arpl
push
cmp
pusha
repz
inc
pop
pop
sahf
mov
sbbb
xor
cld
shll
mov
out
push
xor
mov
jo
fidivrs
stos
or
icebp
cmp
xor
xor
push
inc
xchg
addr16
xchg
jecxz
in
std
mov
dec
cmp
dec
scas
clc
shl
sti
jbe
mov
add
or
sbb
notb
mov
arpl
adc
adc
adc
mov
xchg
mov
insb
mov
pop
push
push
push
cmp
fldenv
mov
xor
lcall
xor
shll
scas
fwait
dec
xor
aaa
cs
loopne
jne
adc
sbb
push
push
inc
mov
and
out
pop
jnp
inc
incb
mov
test
inc
add
or
sub
jo
outsl
repz
lret
ficomps
mov
es
fs
inc
ret
je
mov
fsubr
jnp
mov
rcl
int
cmp
mov
insl
dec
lret
pop
push
push
adc
xor
shl
stc
lods
jl
jne
dec
cmc
cli
push
int
pop
out
jb
push
in
mov
insl
push
inc
sub
movsb
mov
lods
lock
pop
mov
stc
xor
inc
ret
lcall
cmp
xchg
loopne
call
std
fstpl
dec
jae
xchg
dec
es
lahf
clc
xor
arpl
scas
in
xor
mov
test
pop
pop
dec
xchg
push
inc
jnp
aad
dec
adc
neg
pop
jnp
cld
call
dec
in
xor
hlt
repnz
sub
and
pop
call
roll
sbb
dec
sbbl
pushf
xchg
imul
jbe
in
and
test
pop
push
imul
rclb
fucomip
inc
xchg
push
xor
sbb
insb
and
ss
divb
leave
rclb
and
pop
pop
fs
es
clc
movsl
sbb
add
fsubl
mov
mov
jae
push
mov
nop
push
sbbl
dec
mov
cmp
push
cld
shl
lret
cltd
push
orl
aaa
and
add
loope
std
enter
sbb
pusha
cmp
mov
mov
and
mov
lahf
popf
arpl
jno
hlt
mov
cwtl
push
lret
or
lods
mov
push
mov
mov
sub
popf
xchg
xchg
sbb
jne
arpl
in
lea
hlt
pop
push
out
out
fnstsw
sub
and
or
adc
scas
mov
nop
je
addr16
and
or
push
call
push
jno
add
insl
pop
into
adc
fwait
sbb
popa
imul
fbld
aaa
cmp
cmp
push
jno
sbb
je
push
jne
inc
rol
mov
fdivrs
add
xlat
aad
or
movsb
in
sbb
sbb
pop
imul
iret
ljmp
shrl
aaa
or
pop
mov
jne
iret
push
loop
jns
jae
jns
das
fstps
inc
imul
imul
pop
add
imul
loop
shll
cmc
xchg
aas
xor
ror
adc
pop
roll
adc
and
pop
xor
sbb
or
popa
sahf
jno
sbb
add
test
test
aas
pop
pop
pop
mov
dec
adc
shl
push
push
ret
mov
es
xchg
mov
lahf
sub
inc
loop
cltd
xchg
inc
ja
test
repnz
es
idiv
fmull
icebp
not
ja
daa
cmp
inc
lahf
cmp
test
cmp
in
sub
out
movsl
lret
xchg
pusha
xchg
fcmovnb
cmpsl
push
xchg
dec
mov
push
pop
sbb
test
rclb
mov
stos
cltd
pushf
decb
xchg
adc
orb
push
push
pop
dec
sahf
adc
or
lods
push
lods
inc
add
clc
or
inc
popa
orb
mov
mov
arpl
stos
sbb
std
test
ljmp
aad
or
mov
push
fldlg2
leave
and
pop
fistl
mov
jae
rorb
or
xor
mov
addr16
inc
gs
cwtl
leave
pushf
add
or
addr16
adc
cmp
xor
bound
inc
jbe
jl
scas
or
mov
cmp
movsl
gs
test
iret
fxch
insb
clc
test
inc
dec
mov
pop
jo
in
mov
jo
and
cwtl
inc
mov
mov
jnp
ret
sub
add
or
and
fwait
inc
lds
sbbb
insb
mov
test
stos
fadd
add
push
out
jp
pop
jecxz
fisubrl
mov
ljmp
shrb
jmp
mov
pop
push
add
pop
sbb
push
fstpt
js
inc
mov
mov
mov
mov
scas
or
mov
xchg
jne
pop
ss
int3
pop
fisubrs
pop
sbb
stos
xchg
mov
repnz
inc
mov
sbb
mov
inc
in
and
pop
pop
and
mov
cmpsl
stos
fsubs
jmp
mov
xchg
daa
xor
icebp
scas
sub
mov
push
pop
inc
xlat
das
push
jb
mov
push
mov
mov
jle
pop
shll
or
sbb
test
ss
inc
jns
mov
leave
enter
std
cmp
into
fcompl
pusha
sub
sbb
sbb
jne
stos
xor
rorl
mov
push
dec
or
iret
test
mov
pop
aam
inc
sub
xlat
mov
dec
xchg
dec
cmp
sub
cld
xor
rclb
into
jp
enter
pop
ret
xor
mov
xorl
adc
cmp
xchg
dec
jmp
jne
xor
sbb
aad
sbb
gs
sbb
mov
adc
cmp
push
pop
xor
inc
xchg
in
aad
inc
mov
out
cwtl
adc
push
pop
and
shlb
les
xchg
cmp
jno
loope
out
or
push
pushf
dec
pop
and
pop
pop
icebp
out
mov
rorl
mov
inc
adc
in
outsl
jbe
pop
out
sub
jecxz
jno
pop
sahf
sbb
inc
mov
iret
ja
and
repnz
jmp
sbb
dec
lock
pop
lods
jmp
inc
pop
push
jmp
nop
cmp
mov
pop
insl
sbb
cmp
add
dec
cld
addr16
dec
and
out
sub
pop
popa
pop
hlt
pop
jbe
fisttpl
jno
adc
add
xor
rcrb
ret
and
mov
sub
adc
push
pop
jb
fnstsw
add
xor
or
xor
or
mov
out
mov
mov
add
xchg
and
add
in
scas
mov
add
sub
dec
sub
fwait
hlt
mov
jl
imul
in
and
jmp
and
inc
scas
je
inc
jecxz
adc
aam
pop
adc
addb
test
mov
clc
shll
mov
daa
movsl
enter
mov
cld
sahf
in
test
enter
adc
lock
pop
add
hlt
loope
xchg
pop
jns
aad
lock
push
enter
xchg
sbb
cmpsb
cli
dec
xchg
jae
xchg
lock
push
push
adc
aas
dec
dec
popf
orb
sbb
inc
jno
fistps
int3
imul
push
inc
mov
adc
or
and
fstpt
out
leave
in
sub
mov
shll
int
fmul
loope
aam
mov
mov
movsb
cld
cltd
add
dec
jecxz
push
inc
out
dec
or
or
std
jno
pop
cltd
mov
cmp
das
bswap
mov
loope
push
push
cwtl
ljmp
cmp
cmpsw
push
ja
ss
jmp
dec
sbb
loope
push
mov
sbb
in
mov
sbb
cmp
push
repz
xor
push
pop
rcrb
hlt
scas
test
pop
je
hlt
dec
aaa
add
nop
add
lahf
sbb
or
rcll
pop
ret
addr16
outsb
rolb
push
cmpsl
fmuls
mov
mov
mov
test
cmp
xchg
scas
or
and
mov
fiadds
inc
sub
addr16
sub
stos
push
mov
vprotq
aam
hlt
sub
sbb
xchg
fisttps
fstl
stc
orb
xor
and
ret
test
insb
sub
pop
inc
inc
adcl
inc
lcall
and
xchg
lret
dec
test
adc
lods
and
pop
out
xchg
inc
mov
in
push
inc
mov
shrb
movsl
adc
into
cltd
mov
push
loope
jb
add
push
pop
shlb
jp
fadd
or
lods
jl
mov
dec
sub
insl
mov
xchg
inc
jge
mov
jmp
icebp
cmp
fisttps
ds
lds
fdivl
rcrb
add
adc
adc
xchg
jg
and
int3
mov
jnp
inc
mov
sbb
xor
add
icebp
mov
push
test
sti
cmp
sub
inc
hlt
push
mov
mov
dec
push
aaa
and
pop
test
inc
xor
or
sbb
in
addb
sbb
push
popa
cmp
out
nop
sub
cld
pop
lods
lret
jbe
lea
xchg
jg
out
std
insl
mov
fxtract
or
cwtl
loopne
std
aam
jp
cld
shlb
stos
inc
dec
fs
mov
inc
shlb
cmp
imul
adc
mov
std
aas
or
xor
mov
cltd
icebp
or
cmp
pushf
jne
popa
sub
mov
xchg
scas
dec
pop
pushf
jne
insl
arpl
sbb
fistps
ret
push
sub
loope
clc
push
push
push
xchg
mov
inc
cmp
flds
mov
cmpsb
or
push
pop
jb
fs
push
inc
push
repnz
test
outsl
loopne
stc
dec
mov
xchg
sub
test
jno
aad
js
inc
js
mov
jp
mov
fadd
inc
push
insb
pop
bswap
add
clc
jnp
jns
stos
pop
sub
jb
out
xchg
mov
mov
scas
int
js
fwait
adc
loopne
cmc
pop
and
xchg
mov
ds
in
mov
jmp
lds
pushf
std
pop
or
stos
hlt
sbb
xchg
jno
movsl
iret
dec
in
ret
faddl
sub
cmp
lods
dec
cli
mov
sub
ds
xchg
inc
test
hlt
cmp
imul
mov
sbb
lods
push
sbb
cmp
inc
mov
or
and
clc
cmpb
or
sbb
out
lahf
repnz
and
mov
or
xchg
dec
popa
cmp
pop
xor
into
fwait
cwtl
xor
push
sbb
cmp
outsl
ds
cld
cli
pop
or
mov
mull
js
push
fists
add
adc
sbb
jg
mov
or
push
outsb
inc
pop
fcomps
cltd
jae
pushf
mov
pop
test
ds
and
jle
mov
arpl
addb
sub
push
into
bound
das
js
jmp
call
sbb
pusha
sbb
push
push
dec
xchg
movsl
pop
aaa
pop
add
mov
setbe
mov
sbb
orl
jle
fisubrl
cmp
movsb
mov
cld
out
mov
sarl
aam
inc
bnd
cmp
inc
add
push
int
push
jmp
repz
call
lret
fisubl
js
out
mov
shl
aaa
mov
lods
push
mov
ret
cmpsb
push
roll
xor
loopne
sti
push
mov
mov
fnstcw
sub
push
push
aas
fiadds
xchg
stc
adc
int
mov
test
push
cli
flds
mov
cmp
bnd
adc
jg
pop
mov
in
enter
fdiv
jb
mov
stc
mov
xchg
inc
xor
lcall
xor
xchg
xor
cmpl
fistpl
add
test
cmp
int3
inc
push
xor
sbb
arpl
cmp
adc
fnstenv
jnp
adc
cwtl
es
push
adc
sbb
fdiv
test
jb
das
mov
xor
or
pop
sub
imul
fs
pop
sahf
mov
stc
out
xor
fsts
mov
icebp
call
and
das
rcll
mov
lahf
js
or
sti
dec
dec
fimull
push
cmpsb
jbe
sahf
dec
test
popa
pop
popf
fldl
iret
in
shrl
jl
pop
xchg
cmp
or
das
cmp
pop
pop
push
xchg
fs
popa
bound
push
mov
pop
mov
sub
imul
mov
idivl
jae
dec
sbb
lock
mov
add
mov
add
ljmp
adc
aas
iret
or
mov
mov
or
enter
cs
cmp
ficoms
fistl
jb
sti
lods
jmp
mov
je
add
sub
jge
roll
mov
aam
dec
sar
in
inc
inc
or
adc
movsl
das
mov
int
pop
sub
popa
out
shl
or
mov
lds
fisttps
cmpsl
cmp
clc
fmull
jle
int3
loop
sub
out
cld
mov
out
xchg
xchg
or
sbb
dec
in
and
imul
xchg
push
sub
or
outsb
pop
rorb
cwtl
hlt
scas
adc
xor
and
sahf
lods
rcll
inc
mov
ss
shrl
push
inc
jne
push
lods
movsb
fcmovu
ficompl
mov
adc
mov
hlt
incl
mov
outsl
push
and
dec
mov
fwait
mov
arpl
mov
test
iret
or
jns
and
das
into
mov
adc
add
es
dec
adc
fsubrl
clc
aad
je
ljmp
sbb
test
mov
inc
sub
cs
dec
mov
add
sub
arpl
imul
hlt
and
or
roll
inc
js
pop
lcall
xchg
cmpb
mov
sahf
scas
clc
and
cmc
data16
pop
adc
outsl
mov
test
xchg
and
sub
lock
jb
hlt
jo
xor
and
mov
insl
jmp
and
clc
pushf
add
xor
sub
aas
enter
mov
ljmp
jecxz
pop
sub
mov
xlat
lods
adc
push
cmp
insl
fcoms
imul
test
ljmp
dec
push
and
or
arpl
pop
dec
jecxz
insb
je
mov
dec
xchg
xchg
mov
div
pop
add
push
nop
push
sbb
or
shr
dec
or
inc
add
dec
int
dec
cmp
xorb
pop
lods
nop
jns
mov
scas
sbbl
sbb
shrl
lods
dec
mov
fdivrs
fstps
sub
pop
xchg
les
rorl
sub
xor
mov
inc
sti
push
add
cli
xchg
dec
xor
or
fsubrl
xchg
push
mov
stos
out
das
inc
pop
mov
dec
leave
xchg
enter
xchg
cmpsl
jbe
out
add
jle
js
cli
in
inc
dec
lret
jb
je,pt
popl
lds
inc
xor
or
js
fdivl
dec
xor
push
lret
icebp
fbld
fcmovnu
data16
push
pop
loop
punpcklbw
or
sbb
sbb
filds
adc
xor
ret
jne
mov
out
mov
addl
adc
cmp
popa
xchg
imul
push
loope
out
out
xchg
mov
push
or
mov
xor
dec
cmpsl
adc
lahf
and
jge
mov
xchg
jno
je
add
and
sar
push
test
arpl
xor
dec
lcall
cmpsw
xchg
jne
jns
lret
hlt
daa
call
stos
sbb
adc
dec
jecxz
add
inc
sbb
insb
testl
add
scas
jne
mov
ja
cmpsb
push
mov
repnz
xchg
movsb
jbe
jmp
lods
or
subb
and
dec
lahf
sub
je
es
loope
dec
push
outsb
data16
aam
jbe
int
aas
adc
pop
jnp
popa
mov
bound
xor
mov
outsb
adc
lods
cmc
and
mov
sbb
mov
adc
inc
dec
mov
mov
fsubrs
sub
sub
shl
ss
repnz
rcrl
mov
jbe
xchg
inc
sbbb
push
in
mov
std
inc
or
push
fdivl
pop
pop
push
shrl
cmpsb
sub
sarl
rolb
test
fcoml
jg
mov
sti
lcall
pop
sti
adc
nop
cmp
and
ret
dec
imul
stc
push
dec
jno
add
xor
fst
cmp
out
xchg
test
arpl
int3
test
jl
stos
in
ljmp
push
in
out
mov
ret
ds
xlat
int
sbb
ds
adcl
mov
ficoml
lret
xchg
mov
push
scas
insl
das
cmpsb
mov
jecxz
repnz
adc
add
fisubl
call
cmc
outsb
jns
enter
dec
ja
dec
aad
lods
pop
jnp
enter
cltd
les
loop
aas
push
subb
pusha
sub
dec
mov
and
jnp
xor
divb
pop
repnz
or
pusha
inc
adc
sti
adc
ds
xchg
dec
je
aas
adc
xchg
xchg
sub
les
jg
jmp
jl
subl
adc
stos
pop
faddl
jnp
jg
pop
push
cwtl
movsb
push
pop
ss
jmp
aas
and
lock
push
and
xchg
mov
dec
add
pusha
sbb
mov
xchg
mov
divb
das
xor
jg
xchg
push
xchg
push
push
push
xor
jno
xor
fidivl
sub
cmc
ss
xor
pushf
mov
inc
pop
cmp
mov
cli
stos
mov
mov
jecxz
ffreep
loopne
xor
jg
xor
cmpsb
sub
movsl
xchg
dec
push
je
aaa
mov
xchg
lea
into
dec
lods
dec
jecxz
mov
test
mov
push
inc
pop
mov
jmp
mov
xor
sbb
mov
dec
out
inc
xor
addl
jb
mov
test
jne
inc
ret
xor
push
cli
outsb
xchg
sub
adc
pop
mov
in
cmp
out
sbb
mov
aas
imul
xor
dec
dec
push
xchg
lahf
movsb
sti
ficoms
add
ficomps
loopne
sbb
mov
stos
cli
test
pop
jmp
lods
ja
xor
movsb
pop
stos
shlb
mov
ds
inc
fdivs
add
xchg
int3
jmp
push
cs
cmc
daa
push
std
das
jns
jae
aas
mov
fnstenv
sub
addr16
sti
mov
rorl
sbb
cmp
cmp
inc
inc
add
dec
pop
mov
loope
lea
sub
fildll
add
xchg
xor
clc
pop
imul
or
fists
clc
fisubs
ret
inc
lock
adc
sarb
jle
dec
mov
test
cmpsb
mov
loopne
cld
rorb
aas
aam
sarb
mov
dec
and
int
icebp
inc
dec
pop
xchg
stc
call
xchg
lea
jg
nop
mov
push
xacquire
xor
in
xchg
lock
sbb
cs
push
pop
sub
test
dec
pop
push
mov
mov
mov
or
push
adc
loop
mov
dec
imul
mov
cmpsb
cmp
fidivrs
inc
jno
lods
fsubs
in
arpl
add
mov
inc
sbb
mov
sbb
xchg
mov
and
sbb
push
adc
in
test
test
cmovne
gs
jo
and
roll
shll
sub
lret
or
jb
cmp
xchg
lcall
and
nop
xor
sbb
in
and
aas
push
add
shl
and
in
dec
subb
int
mov
mov
adc
pop
inc
nop
inc
gs
nop
pop
sub
leave
fucomip
adc
lock
or
inc
ljmp
into
cmpsb
pop
jnp
ljmp
lahf
call
adc
or
les
mov
cmp
cs
mov
xchg
arpl
dec
negl
adc
or
mov
jp
mov
mov
pop
jb
xchg
imul
push
sub
movsb
inc
fs
xchg
ja
repnz
cmc
mov
test
cwtl
inc
mov
bound
lcall
jne
mov
jo
insb
insl
xor
stos
jb
imull
mov
fsubl
ret
cmp
sub
clc
imul
je
aas
fmull
data16
inc
pusha
push
mov
in
sub
xchg
lock
scas
test
sub
out
fs
mov
movsl
je
adc
mov
adc
aaa
jmp
roll
lret
xchg
loope
movsl
aam
sbb
jge
mov
aam
push
lahf
aas
inc
out
inc
add
je
and
fldcw
xor
dec
mov
fwait
icebp
pop
test
js
out
leave
push
xchg
sub
pop
xor
enter
cmp
ret
bound
and
stos
shll
mov
mov
xor
scas
sbb
insl
ficoml
iret
adc
push
jl
inc
mov
out
mov
dec
and
jo
lret
lcall
fcmovnu
xor
mov
and
ficompl
pop
mov
cmpsl
pop
rcrl
nop
mov
xchg
pop
or
xchg
aas
sub
and
or
out
pop
mov
and
hlt
mov
jmp
pop
cld
fimuls
nop
movsl
ret
loope
adc
pop
mov
test
add
mov
andl
lds
adc
inc
aaa
cmp
inc
pop
ds
daa
mov
jge
pop
sbb
stc
jbe
xchg
jp
xchg
les
je
dec
cmpl
dec
lods
lret
pop
xor
popa
push
fistps
push
push
mov
pop
pop
scas
add
xchg
test
jge
xchg
xorb
sub
pusha
jnp
inc
xchg
or
sub
aad
js
mov
cmp
icebp
pop
mov
stos
sbb
fs
or
in
push
inc
push
outsb
lcall
mov
jns
xor
cmp
inc
xor
pop
in
mov
adc
ret
es
inc
sub
adc
mov
jo
popa
mov
cld
mov
das
sub
pop
adc
scas
je
and
or
in
scas
flds
int3
dec
call
jl
shlb
mov
hlt
loop
repnz
rcrl
or
fdivr
out
jo
clc
pop
or
xchg
pop
icebp
sbb
sahf
das
scas
add
sbbl
and
xchg
lahf
xchg
pop
rcrl
mov
cmp
out
adc
aas
pop
cwtl
or
or
xor
cmpsl
fldl2e
sahf
sbb
mov
in
cwtl
lret
push
mov
push
shll
or
enter
mov
js
subl
xchg
push
pop
sbb
test
and
aaa
fisubs
xor
sti
lods
and
addr16
push
xchg
jle
add
or
psubq
fs
call
inc
sub
aam
push
dec
andl
mov
push
movl
lods
xchg
insb
sbb
cmp
xlat
jbe
aam
fiaddl
out
xchg
inc
les
out
pop
ds
xchg
out
sbb
jo
jmp
jecxz
or
into
mov
dec
popf
jae
int3
jg
pop
dec
mov
mov
lcall
push
scas
icebp
out
dec
pushf
jbe
xchg
ljmp
lods
test
nop
or
mov
push
sub
push
or
inc
outsl
dec
call
mov
inc
aam
mov
add
mov
out
mov
loopne
pop
jp
jo
iret
mov
mov
out
cmpsl
inc
idivb
mov
xchg
jae
insl
int3
mov
pop
mov
loop
test
sti
bswap
mov
test
pushf
in
cltd
imul
js
fnstsw
scas
hlt
aas
aad
mov
stos
scas
in
jno
ds
mov
sti
mov
xor
or
or
roll
fcoms
lahf
ret
je
and
pop
mov
dec
aam
popa
cmp
pop
pop
cmp
cmpsb
pop
add
and
sub
cmp
xor
mov
inc
inc
nop
sbb
stos
sar
sub
lea
shrd
and
stc
or
popf
loop
out
stc
ss
dec
mov
fidivs
lods
sub
out
dec
or
popf
ret
div
and
xchg
stos
mov
add
bound
mov
cltd
pop
or
lret
mov
sub
les
push
adc
sti
xor
popa
and
mov
ja
push
mov
mov
fistpll
mov
out
daa
mov
fucomp
enter
in
ss
mov
add
mov
mov
fwait
inc
cmpsl
stos
outsb
or
pop
shrb
aad
test
pop
xchg
imulb
mov
or
pop
clc
push
and
out
sbb
mov
jbe
jl
sbb
xchg
xchg
push
adc
push
add
mov
inc
pop
data16
or
ds
xchg
les
cwtl
mov
xor
gs
mov
shrb
data16
outsl
mov
mov
aam
jle
cltd
adc
int
sahf
dec
inc
loopne
inc
loop
pop
mov
ficoms
cmp
adc
std
dec
scas
fcomps
pop
push
clc
adc
popa
enter
into
push
and
jecxz
shlb
dec
and
iret
fcomp
add
scas
mov
mov
xor
push
outsl
std
ret
imul
mov
xor
jg
jno
aam
push
sahf
adc
fs
les
sbb
cli
adc
hlt
leave
mov
insl
hlt
rorl
add
xchg
test
xchg
pop
cmpl
xchg
popa
int
xor
add
or
push
aad
pop
push
push
addb
pushf
into
or
into
cmpsb
enter
and
js
inc
std
je
movsl
fsts
push
sub
in
insl
shl
mov
leave
push
xlat
adc
jge
pop
mov
les
jo
lock
setge
arpl
scas
bound
out
jp
xlat
in
sbb
int
popf
cmp
lods
xor
arpl
cld
mov
pop
dec
cmp
ret
xor
push
sahf
or
lret
or
inc
adc
cmp
and
pusha
jmp
push
push
pushw
sub
cs
cmpsb
adc
dec
mulb
xchg
or
fnstsw
mov
sti
aam
mov
popf
int3
mov
cwtl
jno
adc
ljmp
push
fcoml
cli
or
sahf
add
outsl
das
cli
mov
add
sbb
adc
scas
pop
pop
jmp
xchg
push
pusha
shrl
mov
push
addr16
iret
and
clc
push
test
shl
add
or
mov
push
mov
inc
xor
and
dec
aad
inc
arpl
ds
jae
popa
push
in
ds
or
scas
shlb
mov
sub
lret
mov
in
nop
imul
push
jl
xadd
dec
ljmp
fs
or
adcb
push
insl
push
pushl
sub
dec
pop
inc
test
jp
test
xchg
jns
mov
xchg
fisubrl
pusha
insl
push
push
ret
stc
in
jo
mov
xchg
xor
cmp
int
mov
leave
mov
or
sahf
fadd
push
push
inc
shlb
pop
xchg
push
out
inc
pop
sbb
jno
outsb
sbbb
orl
xchg
outsb
mov
and
adc
mov
jge
inc
jle
popa
test
push
jns
push
or
mov
jle
mov
cld
xchg
fs
subl
mov
je
push
sub
cmp
aas
in
push
movsb
xchg
mov
inc
push
mov
inc
jns
and
movsb
inc
mov
je
cmpsl
dec
lods
push
xor
mov
or
test
sar
add
add
or
lods
push
dec
jl
or
xchg
lock
dec
and
inc
shrl
mov
xor
mov
jle
sbb
or
packsswb
js
xlat
xor
jno
scas
pop
mov
cwtl
mov
out
cmp
xchg
popa
lock
test
jae
mov
pushf
dec
inc
push
nop
mov
lea
push
push
loop
push
cmc
cmpsb
pop
lahf
shrl
pop
fsts
sbb
xchg
cli
mov
xrelease
sahf
dec
shlb
add
int3
dec
loopne
enter
add
xchg
loop
cmp
pop
xchg
lret
loope
fstpt
stc
xor
mov
pop
sub
outsl
cmp
sti
outsl
adc
jbe
jnp
loopne
ja
stc
xchg
fbstp
mov
jbe
mov
jbe
mov
repnz
sub
fnstcw
push
call
std
daa
aaa
leave
sahf
sbb
adc
sbb
jge
fildll
rorl
outsl
scas
fwait
es
js
pop
jl
sahf
push
jnp
sub
insl
js
ret
dec
addb
mov
dec
mov
loop
sub
icebp
dec
ja
xchg
push
andl
outsl
xorb
mov
sbb
decb
ror
jmp
push
mov
les
xlat
jne
jle
in
loopne
std
cwtl
js
pop
inc
add
mov
push
push
fsubl
mov
or
ret
add
jne
jo
push
push
ds
js
imul
pop
test
aam
das
cmpsl
mov
sbb
mov
xchg
or
orl
mov
stos
shlb
or
and
mov
cld
lea
aas
ret
pop
jb
push
xor
test
and
in
push
mov
icebp
aam
repnz
and
sub
inc
arpl
pop
jno
shrl
jecxz
jne
sbb
pop
inc
cmp
into
cmp
or
add
cs
xor
stos
adc
pop
cmpsw
mov
push
lahf
repnz
dec
fucom
push
jp
popa
xchg
mov
push
loope
jo
int3
pop
jge
leave
cmp
sbb
enter
push
jns
and
cli
fstl
inc
sbb
mov
cwtl
pop
jp
arpl
leave
aas
ss
mov
mov
lock
lock
sbb
cmpb
fstl
pop
push
fcmovnu
adc
clc
fsub
xlat
sbb
cltd
sub
dec
dec
adc
pop
mov
mov
jbe
scas
incl
dec
lcall
or
cmp
xchg
in
je
repz
pop
arpl
or
ja
loope
sub
dec
sub
mov
loop
add
and
pop
enter
es
dec
and
add
push
mov
or
les
mov
and
and
out
cmp
cmc
lahf
pusha
scas
sbb
shll
aaa
cmp
in
arpl
lods
das
stos
and
fstl
jg
shll
add
sbbb
sbb
cmp
adc
icebp
dec
ds
jbe,pt
pusha
ror
jbe
lret
loop
push
cmpb
jle
clc
push
jmp
fcmovu
js
and
sahf
scas
jg
divb
in
les
stos
shrl
mov
repnz
mov
and
adc
dec
stc
and
push
pop
fildll
and
fcomps
jecxz
pop
gs
sbb
scas
mov
mull
or
out
cmc
ss
sahf
fstl
sub
mov
xchg
sub
xchg
stc
fisttps
mov
sti
and
jp
rolb
jp
xchg
push
jmp
fcoml
int3
dec
fld
dec
jnp
sbb
cmp
aas
test
cwtl
sub
loope
jl
mov
cmp
clc
cmp
sbb
fists
and
sub
lods
jl
sbb
mov
std
rcrl
ucomiss
xor
stc
lcall
sub
aam
rcrl
es
or
sub
jns
mov
fstpl
inc
adc
lock
imul
dec
aaa
jb
cmp
dec
mov
stos
and
push
jl
rorl
mov
xorb
cld
cmp
shlb
mov
and
mov
movsb
aas
repnz
into
inc
imul
jne
mov
insl
pop
imul
lock
inc
dec
cli
lods
test
inc
out
dec
mov
adc
jns
or
insb
sbb
inc
and
jne
leave
ret
js
arpl
pop
mov
aad
pushf
into
test
jns
faddl
ret
aam
fiaddl
xchg
push
bound
mov
push
lcall
and
jo
lods
shl
mov
add
out
xchg
shll
fsubrp
fisubl
push
inc
cs
orl
lods
lea
lret
es
mov
fimuls
jnp
outsb
aam
adc
jns
notl
in
xchg
jne
shrb
sub
pop
packuswb
mov
cmp
adc
mov
cmp
fdivrs
ss
pop
nop
inc
cmp
clc
popa
mov
in
aas
repz
and
cmpsb
aam
aaa
daa
lret
mov
and
test
das
lds
andl
dec
aas
mov
mov
ror
mov
fcomps
iret
lods
sbb
pop
insb
test
xchg
data16
cmp
mov
adc
scas
inc
mov
push
or
sbb
and
jl
pop
mov
and
push
jecxz
arpl
lea
push
xchg
or
mov
mov
cmp
adc
jne
push
jle
mov
xor
sub
inc
enter
cmp
out
lahf
mov
jb
dec
inc
or
iret
daa
jecxz
jne
das
push
fmul
es
rolb
sub
std
hlt
pop
xchg
jle
popl
push
repnz
adc
adc
loope
xor
in
mov
dec
xchg
faddl
add
xchg
xor
imul
dec
movsb
divb
rolb
inc
rclb
subb
push
arpl
arpl
push
mov
into
mov
mov
pushf
mov
data16
xchg
sub
out
arpl
movntq
pop
call
add
orl
clc
popf
add
popf
xchg
insb
in
repz
push
adc
mov
gs
mov
pop
orb
adc
js
push
adc
test
pop
mov
xor
mov
mov
outsl
jp
fwait
stos
lds
jge
ss
das
mov
inc
es
out
xchg
pop
into
sbb
ljmp
cmp
movsb
test
and
popl
jl
fcoml
lret
jae
dec
int
lds
loope
push
fwait
mov
rcll
cmp
andl
mov
lock
add
shrl
icebp
and
sbb
or
mov
cld
pop
xchg
xchg
jno
xor
int3
out
xor
shlb
stos
out
mov
outsb
loope
xchg
adc
aad
jb,pn
out
xchg
pushf
cmp
and
cmp
pop
lods
lock
mov
xchg
mov
fdivrp
xchg
insb
jnp
push
pop
pop
jno
adc
xor
mov
out
jae
pop
gs
bound
cmp
imull
andb
mov
ret
orl
stc
sarb
push
mov
pop
lret
sbb
test
lret
iret
cmp
inc
jl
es
xchg
repz
imul
loop
sub
pop
stos
add
lock
es
out
add
pop
mov
fildll
dec
lods
mov
sbb
push
hlt
jg
out
cmp
cmpsl
mov
fneni(8087
mov
scas
pop
repz
pop
mov
mov
and
stc
push
or
jo
rorl
mov
push
addb
and
dec
mov
leave
in
or
pushf
inc
sub
test
mov
xchg
xchg
or
loopne
nop
pop
mov
pop
imul
and
and
mov
int
jb,pt
mov
inc
leave
dec
scas
das
mov
jmp
mov
xor
lcall
loopne
repnz
push
lret
mov
and
adc
dec
ja
xchg
pop
jae
dec
sub
sub
les
aaa
add
add
or
lcall
test
jmp
adc
push
xchg
mov
cli
dec
pop
ljmp
mov
dec
add
mov
repz
neg
push
fisubs
xor
mov
lock
mov
aad
orb
or
das
push
cmp
and
movsl
push
xchg
fdivl
lods
pop
dec
fcomps
data16
jle
icebp
ret
jo
inc
nop
push
dec
js
adc
or
outsb
hlt
push
dec
test
popa
ror
xlat
fnstsw
adc
jnp
cwtl
push
andb
test
adc
cli
fcomip
xor
bound
adc
pop
mov
leave
mov
push
cmp
sub
xchg
popf
cs
xor
rorl
jmp
jns
push
cld
add
lret
test
xlat
lea
xchg
loope
jmp
stos
out
jg
add
dec
repz
movswl
inc
scas
adc
mov
arpl
jns
add
xlat
and
les
out
int3
cmp
in
cmpl
fldt
mov
out
scas
fimull
test
dec
push
mov
aam
js
decb
lock
mov
adc
dec
cmp
dec
mov
ret
add
fstl
int3
das
adcl
in
fistpl
imull
mov
dec
stos
into
or
loope
add
out
dec
mov
pop
or
dec
stos
xchg
cmp
and
adc
das
cmp
addr16
mov
cmp
shll
shrl
dec
push
testb
jns
add
pop
sbb
stc
in
scas
inc
jbe
jge
daa
or
insb
and
ljmp
mov
inc
jbe
in
or
cmpsb
enter
pop
ljmp
repz
jo
loop
sbb
mov
sbb
inc
lock
in
ret
xor
add
push
nop
push
shlb
push
or
xorl
xor
fnsave
jne
adc
jge
pop
xor
and
inc
and
out
push
out
mov
cmp
or
xor
popf
call
nop
outsl
loop
imul
inc
scas
mov
lret
inc
pop
xchg
mov
jecxz
imul
dec
adc
jns
imul
jge
push
mov
push
xor
notb
inc
or
xchg
pop
push
or
add
aad
sbb
mov
sub
insl
jp
aaa
jns
push
clc
xchg
popa
nop
std
test
mov
out
loopne
stc
loop
cmc
mov
mov
je
xchg
xchg
or
cltd
push
shll
push
clc
pop
hlt
mov
outsb
xchg
in
decb
mov
pushf
mov
dec
addl
xchg
xor
mov
cmp
ss
jb
outsb
inc
iret
xchg
stc
mov
and
outsb
mov
adc
mov
push
test
jg
repz
xchg
xor
mov
call
gs
pop
lea
fstl
cmp
inc
aas
fstpl
push
lret
mov
dec
insb
test
mov
popa
push
mov
cmpsl
sbb
pop
jp
cwtl
js
mov
int3
les
adc
jge
scas
xor
add
fistpll
cli
movsl
and
push
push
hlt
clc
inc
cmp
xor
xchg
out
in
inc
dec
nop
movsl
imul
call
out
mov
and
pop
pop
rcl
push
cmp
push
xchg
cmp
dec
loope
jne
sbb
jb
mov
push
inc
dec
push
mov
rep
or
xchg
jp
into
jmp
xor
fcoml
fcompl
push
jge
cmp
mov
inc
add
sbb
pop
aas
psadbw
mov
or
jle
enter
inc
and
add
mov
cmp
push
mov
repz
cltd
int
xchg
movsl
xchg
jb
dec
lods
shrb
mov
call
jecxz
mov
sub
jbe
cmp
out
cmp
and
xchg
pop
in
inc
imul
or
jp
jge
je
mov
dec
and
xlat
andb
cwtl
inc
scas
lods
out
rcl
call
add
xor
popf
xlat
jg
adc
xchg
int
mov
loop
sub
sbbl
scas
shrl
add
or
stos
bound
rep
mov
call
fldcw
jmp
inc
jo
ret
mov
jecxz
add
lods
inc
rcr
jnp
jo
into
dec
mov
cmc
push
fnclex
push
xchg
in
int3
adc
sarl
int
mov
or
pop
rcrb
push
cwtl
inc
ss
jns
jae
pmaddwd
hlt
js
sarb
movsb
add
ljmp
xlat
ss
pop
push
inc
hlt
jg
pop
push
ja
xchg
mov
nop
xor
es
cmp
jb
into
in
idivl
mov
pushf
ret
loopne
enter
sub
int
push
andl
popa
popf
adc
aam
lods
push
jmp
psubb
adc
sub
xor
test
adc
dec
xchg
pop
shl
js
jmp
adc
stos
sbb
and
mov
lret
int3
out
shrb
mov
pop
jno
test
pop
xlat
xor
ret
jg
xor
push
lahf
ret
shlb
int
inc
add
jno
fdivs
jge
out
add
pop
pop
mov
dec
push
push
cmp
inc
aas
push
into
and
clc
hlt
xorb
out
sbb
stc
hlt
pushf
sub
repnz
mov
fdivr
jp
dec
popf
sbb
pushf
sbb
mov
and
cs
cli
ds
imul
pop
sub
mov
and
xchg
icebp
icebp
outsl
hlt
fldenv
repnz
or
aaa
xor
add
mov
popa
lods
loope
sub
jp
ret
cmp
pop
loopne
loopne
xor
out
push
dec
repnz
jnp
lcall
adc
mov
fistps
iret
jo
aaa
cmpsb
xchg
unpcklps
cmp
in
insl
mov
and
jmp
jb
jns
out
inc
xor
out
bound
sbb
enter
or
jp
xchg
shr
add
lret
pusha
inc
mov
mov
inc
popf
and
imul
adc
stos
cmc
cmp
adc
inc
cmp
cmp
mov
cmp
mov
or
mov
and
mov
or
mov
jae
loop
cmpsb
icebp
add
mov
mov
sub
mov
mov
jae
jle
and
inc
sahf
push
flds
es
stos
movsb
aam
insl
mov
insb
cli
sub
inc
jl
or
nop
xchg
ja
cmpb
iret
in
cmp
enter
push
mov
sahf
out
push
aad
mov
push
orl
mov
idivb
fidivl
call
cmp
aad
lret
hlt
mov
sub
arpl
adc
ss
sbb
idiv
or
cmp
cli
sti
push
jge
pop
jg
mov
mov
jns
out
pop
inc
pop
adc
inc
xor
fcmovu
xchg
sbb
rclb
ljmp
sub
cltd
je
into
mov
jnp
jbe
sbb
in
fcoms
push
popf
cmp
cmpsl
cld
jle
cmp
popf
cmp
xor
or
jb
pop
jae
pusha
mov
jne
gs
xorl
sbb
std
add
dec
jecxz
pop
sbb
clc
add
pop
adc
xchg
inc
lret
mov
pop
mov
scas
push
cmc
pop
rep
scas
pop
cmpl
nop
rorl
xchg
ja
xor
dec
or
lds
stos
test
xchg
ret
imul
test
aaa
addl
mov
xor
fidivs
fucomp
push
jg
shlb
data16
add
sub
pop
mov
data16
test
das
dec
rcll
push
fdivrp
aam
cmp
jb
test
jge
test
outsl
test
pop
outsl
sbb
dec
mov
imul
xor
jae
fisubrl
dec
imul
mov
jb
mov
or
test
sub
inc
jb
xor
mov
les
loopne
push
test
ror
test
sbb
pop
jo
pushf
xchg
stc
lods
addb
test
cmp
js
cld
push
dec
push
add
gs
fs
jns,pn
jg
lret
sahf
mov
ret
ret
ret
lock
aaa
push
and
pop
and
nop
pop
popf
push
out
jns
pusha
mov
jle
fisttpl
aam
fcom
jo
fisubs
int
and
repnz
xchg
stos
jb
hlt
jbe
dec
dec
ds
cmc
sub
in
dec
xchg
arpl
notl
cmp
or
repnz
clc
xor
f2xm1
push
popa
imul
rcl
stc
outsb
add
add
std
cmc
xchg
std
jmp
or
mov
cmc
jno
cmp
xchg
ja
xchg
jg
pop
stos
sbb
mov
pop
inc
cmp
sbb
pop
sub
jl
test
mov
fwait
outsl
shrb
adc
xchg
mov
xchg
push
sbb
mov
lcall
aam
mov
or
orb
out
mov
movsb
clc
idivb
and
mov
in
lahf
pop
icebp
aas
aad
pop
mov
rcl
mov
gs
adc
pop
jne
cmpsb
mov
adc
lods
arpl
jecxz
sbb
std
stos
stos
xor
xchg
ss
add
int3
lahf
pop
scas
push
rcl
sbbb
adc
adcl
cmp
fcoms
cmp
cmc
outsl
sbb
adc
mov
pop
and
pushf
test
jae
outsl
mov
lret
lret
fwait
xchg
ret
inc
js
ret
idivb
pop
cwtl
push
add
insb
xchg
fstl
mov
push
mov
or
cmp
mov
mov
dec
cmp
and
outsl
add
add
icebp
jns
add
ret
loop
es
scas
sub
sbb
fisubs
test
jle
mov
sbbl
icebp
fnsave
mov
xor
inc
mov
test
in
cmc
sbb
jnp
in
dec
mov
clc
sbb
jle
jmp
ret
xchg
sbb
out
mov
repz
js
fstps
mov
movsb
inc
into
push
hlt
add
inc
jmp
pushf
cld
icebp
mov
fwait
lea
mov
lret
popf
jae
mov
and
js
push
fcmovnbe
gs
push
popa
push
dec
xchg
stos
bound
gs
xchg
movsl
sahf
sbb
fdivl
fldcw
push
and
fisubrl
in
psubb
adc
xchg
xor
jnp
adc
or
push
pop
dec
xor
mov
out
sahf
push
lods
add
adc
or
test
nop
sub
aas
add
xchg
cmp
mov
xchg
jo
cmp
push
mov
pop
mov
shl
add
jnp
cmpsb
bound
mov
pop
subl
and
enter
ret
sbb
mov
clc
imul
sbb
cmpsb
ret
cmp
test
xchg
xchg
mov
cmp
dec
jbe
bound
movsl
cmc
pusha
jp
cli
arpl
ss
cmp
rclb
icebp
out
sub
sbb
popf
pop
sub
fs
scas
stos
orb
cmpsb
sbb
sti
arpl
scas
and
xchg
and
stos
sarb
loop
adc
cmp
adc
pop
jmp
fcoml
mov
inc
inc
mov
cmp
mov
dec
mov
movsb
add
push
sbb
stos
xchg
xor
mov
test
imul
adc
shl
pusha
gs
inc
jnp
inc
out
cmp
pop
cli
add
inc
or
in
ss
hlt
movb
xor
sbb
popa
hlt
xor
jmp
sbb
push
dec
push
mov
and
xchg
in
ret
mov
scas
dec
xchg
pop
mov
jl
out
stos
sbb
adc
inc
dec
fnsave
lcall
sahf
pop
pop
sbb
cmp
mov
push
jnp
ret
lds
popf
mov
xchg
mov
addl
fdiv
sbb
adc
jae
dec
sub
loopne
add
jmp
xor
jge
adc
arpl
push
jg
mov
test
stc
mov
das
fwait
negb
enter
inc
shrl
pop
xor
jecxz
mov
clc
jmp
xor
pusha
push
push
jg
jmp
cmpsb
xchg
or
fcoml
mov
ja
cltd
arpl
popf
pop
push
pop
push
pop
jns
and
adc
enter
mov
roll
jns,pt
fwait
push
loop
pop
movsb
jbe
fsub
clc
cmpsb
data16
jmp
jne
rcrb
sub
xor
mov
js
cwtl
scas
push
adc
jne
jno
js
mov
dec
inc
fneni(8087
shll
xchg
dec
push
cmpsb
ds
mov
fdivrl
jo
stos
inc
jp
leave
xlat
mov
cs
nop
loopne
popf
flds
mov
pop
mov
mov
jle
repz
sub
sbb
lds
mov
lret
rorb
adc
dec
mov
aas
or
dec
movsb
mov
lcall
test
mov
xlat
sub
lods
jg
cmp
mov
add
cmpsb
fistps
push
mov
cmp
aas
sbb
xor
adc
push
and
jle
dec
pop
cmp
arpl
xchg
dec
push
lods
add
sbbb
sub
push
les
push
iret
imulb
mov
sbbb
insb
add
cmpsb
push
pushf
xor
pop
out
and
mov
xchg
je
in
lret
or
add
movsb
mov
shrl
xor
ret
lcall
dec
in
mov
push
insl
cmpb
jg
add
icebp
jns
lock
dec
ljmp
adc
jecxz
nop
scas
push
cmc
movsb
ss
push
stc
inc
test
ret
sub
mov
test
call
loop
adc
mov
adc
lock
lods
jge
ret
lahf
fs
xchg
data16
scas
repz
lods
test
inc
push
cmp
and
cltd
xor
adc
dec
enter
aaa
lods
fldcw
mov
xchg
push
pop
and
push
inc
pop
sub
clc
flds
mov
test
xchg
jae
iret
sub
out
test
inc
mov
jnp
cmp
sbb
gs
lret
js
loopne
jns
das
in
sub
cs
out
adc
or
leave
dec
xor
lcall
xlat
decl
xchg
scas
subb
arpl
jp
mov
xchg
cli
cwtl
mov
or
and
push
dec
fwait
mov
out
data16
xchg
fisubs
and
dec
inc
in
adc
xlat
pop
andb
pop
int3
lret
jne
pusha
sbb
les
leave
lea
mov
es
mov
cmp
sub
fisubrs
mov
mov
xchg
xchg
jnp
push
imul
bound
cwtl
push
mov
cmpsb
jle
jno
dec
push
sbb
cwtl
ficompl
hlt
fmulp
leave
ljmp
dec
pop
adc
adc
int
push
pop
pusha
lock
es
lcall
arpl
pushl
andb
pop
adc
icebp
ja
sub
lahf
push
or
and
lock
mov
in
adc
pushf
fs
movsb
dec
jo
push
lahf
mov
cmc
ljmp
in
mov
mov
inc
sub
mov
cmc
cmp
sbb
es
rorb
out
mov
out
mov
xor
cmp
mov
sti
fs
cmp
pusha
pushf
xchg
pop
das
pop
mov
imul
mov
push
scas
test
cmpb
js
xchg
mov
in
shlb
fwait
adc
addr16
dec
testb
pop
lret
push
inc
cwtl
test
inc
jbe
hlt
loope
ljmp
cmc
arpl
imul
sahf
in
inc
ds
decl
clc
stc
out
stos
shl
popf
xor
iret
and
sbb
xor
jnp
push
addr16
les
out
enter
cli
or
shl
sbb
push
add
push
push
adc
mov
xlat
rorb
sbb
mov
add
rolb
sbb
sbb
dec
and
or
mov
scas
pop
inc
call
xorl
clc
testl
and
push
lods
jno
clc
inc
jae
push
xor
pop
push
dec
add
lock
out
xor
lret
sbb
xchg
jle
jg
testb
fistps
mov
je
dec
jno
xchg
ja
ja
ja
andl
leave
sbb
and
mov
fdivrl
adc
add
inc
add
je
sbb
fiaddl
or
add
fstps
mov
daa
std
jl
in
xchg
out
mov
mov
and
cmp
gs
mov
cmp
in
inc
mov
fisttpll
pop
push
movb
stos
sti
sub
sbb
out
or
stc
pop
mov
mov
mov
mov
xor
pushf
in
lods
out
out
inc
roll
push
les
cmp
shl
sbb
xchg
out
pop
or
sahf
mov
mov
cltd
mov
cmc
push
and
loope
imul
dec
std
add
stc
stos
push
or
out
jns
mov
ss
add
clc
sti
pop
repz
sahf
add
and
fcmovu
mov
and
jnp
mov
mov
jle
push
and
or
or
push
mov
gs
sbb
pop
mov
js
out
fldl
in
mov
mov
shlb
push
pop
xor
rclb
add
cmp
mov
loope
xor
in
loope
xor
pushf
in
or
cltd
test
addr16
push
mov
or
sbb
sub
sbb
add
cmp
sbb
adc
jle
test
roll
inc
xchg
test
sub
xchg
sub
out
lret
incl
pop
jg
xchg
cs
in
jo
inc
pop
int
imul
or
xchg
imul
dec
aam
pop
pop
test
ljmp
jg
dec
mov
out
sub
sub
ds
push
xchg
es
lahf
int
inc
inc
in
dec
ss
movsb
cmpsl
jmp
sub
add
testl
sub
inc
xchg
pop
dec
pop
sahf
sbb
insl
or
scas
xchg
dec
test
sahf
xchg
jl
sub
inc
rclb
lahf
repnz
dec
lods
ljmp
aaa
xor
dec
stos
daa
mov
cwtl
dec
imul
aam
hlt
cmc
mov
adc
imul
mov
xchg
add
test
movsb
pop
or
in
das
xchg
arpl
cmc
test
fnstsw
in
jl
bound
adc
pop
lret
insb
mov
jno
mov
push
push
push
pop
cmp
xchg
ret
pop
pop
dec
add
daa
bound
xor
cmp
fsubr
out
mov
push
hlt
push
fnstsw
in
push
xlat
dec
pop
das
push
pop
addr16
push
iret
sbb
sub
dec
add
dec
jnp
dec
mov
sbb
sahf
loop
f2xm1
mov
rcl
pop
aam
mov
insb
mov
sahf
jl
pop
fcmovbe
mov
test
int3
lret
fs
cltd
popf
mul
lahf
adc
dec
out
inc
lret
popf
mov
lcall
cmpb
xchg
adc
push
into
sub
aaa
push
fdivr
jle
mov
aas
sub
pop
xchg
cmpb
loope
cmp
sbb
mov
int3
jge
repz
call
nop
cmp
ret
outsl
out
mov
mov
xor
xor
or
xchg
popf
stos
jl
mov
fcmovne
sti
sub
mov
jl
adc
push
xlat
xchg
jno
fchs
std
cmpsb
add
inc
jg
mov
push
roll
jo
push
lahf
inc
xchg
loope
into
dec
sub
int3
daa
xchg
cs
shrb
sahf
testl
push
inc
adc
stos
sbbl
push
cmp
aad
daa
xor
push
mov
enter
jns
jae
aad
sahf
push
ss
or
jmp
sbb
cmp
fisubrs
jp
popa
roll
mov
fsubs
mov
dec
xchg
in
loop
ds
loop
into
ret
shr
inc
bound
push
bound
xor
and
mov
xchg
fcomps
mov
ss
cmp
pop
outsl
int
mov
sahf
xor
iret
imul
icebp
dec
pop
sub
push
lods
pop
daa
cmpsl
jle
sbb
cmp
iret
pop
mov
out
jge
sbbb
push
mov
cld
push
mov
lds
mov
movsl
stos
insl
in
xor
sub
lret
movsl
cwtl
test
xchg
cmp
sbb
cmpb
xchg
mov
xchg
add
sub
push
pusha
popf
into
adc
cmpb
mov
and
ficompl
out
stos
rcll
dec
dec
xchg
out
leave
aaa
ret
sub
sbb
jp
out
cld
in
scas
clc
sbb
adc
gs
dec
jl
lea
mov
mov
jno
xlat
les
dec
mov
dec
inc
in
scas
and
fsubs
repz
sub
pop
cltd
push
testb
pusha
cmpsb
push
and
shrl
fsubs
daa
fisttps
lods
jne
frstor
fmull
adc
int
xchg
out
mov
lahf
bound
xchg
or
pushf
push
jecxz
pusha
loopne
adc
dec
cli
gs
jbe
mov
jecxz
cmpsb
push
pop
dec
test
fsubrl
jne
pop
jnp
sub
insb
push
mov
imul
xchg
jno
sbb
movsb
dec
mull
fcmovnu
stos
in
pop
je
jecxz
ja
jecxz
shll
insb
adc
and
mov
cmp
mov
mov
pop
push
mov
shrl
jns
nop
mov
or
mov
lea
and
das
cmp
lret
repnz
out
jg
cmp
jo
mov
push
jl
mov
rclb
dec
roll
push
inc
pop
mov
dec
pushf
into
aas
mov
sbb
mov
ret
stc
movsl
test
dec
mov
jge
roll
cli
sbb
shlb
pop
and
out
lahf
sub
aaa
xchg
loop
outsl
or
xchg
dec
test
dec
adc
xchg
test
int
scas
daa
mov
fnstenv
dec
sub
mov
pop
loop
ss
aas
jmp
xorl
dec
fildll
mov
mov
int
lret
adc
cmc
xor
lods
insl
je
test
shrl
insl
jb
mov
jmp
incb
add
daa
lret
jp
lret
dec
cwtl
test
xchg
xor
add
rep
mov
xor
scas
andb
inc
fiaddl
mov
mov
jecxz
jl
in
sahf
mov
xor
jge
inc
inc
inc
pop
cmpsb
xor
lods
dec
inc
in
sub
mov
scas
xor
or
add
ret
int3
roll
movsl
sbb
sbb
call
fdivrl
pushf
pop
aaa
out
cmpsb
enter
sbb
sahf
rcrl
cmp
je
cmp
mov
sbb
dec
fwait
lock
xor
add
ret
pushf
lods
cmp
fdiv
cmp
out
jg
xchg
ja
enter
stos
bound
cmp
test
adc
mov
insb
xor
shll
ja
insb
ficomps
or
lea
fmull
push
pop
or
push
cld
imul
loope
sti
xchg
sbb
jno
mov
inc
orb
or
daa
xchg
inc
icebp
mov
mov
mov
push
sbb
in
push
bound
inc
scas
adc
push
sbb
ret
scas
es
jl
insb
jge
mov
mov
in
mov
xor
test
lea
int3
enter
das
cmp
and
or
dec
pop
xchg
fnstcw
mov
add
inc
xchg
jns
popf
xor
adc
push
adc
push
inc
cmp
inc
outsl
cmp
in
sahf
and
inc
fiadds
ljmp
imul
sub
sbb
push
sub
cmp
and
pop
insb
dec
add
mov
jecxz
sbb
lahf
xchg
cmp
pop
sub
stos
cmpsb
movsl
pushf
mov
mov
push
and
loopne
mov
stc
fnstcw
sti
inc
or
xchg
shlb
jbe
pop
or
mov
subl
pop
inc
xor
dec
dec
inc
mov
pop
in
stos
xchg
insl
pop
imul
iret
in
pop
lahf
mov
ret
sahf
mov
in
push
mov
dec
jno
insl
sahf
daa
roll
pop
out
in
gs
adc
testl
subb
adc
leave
in
jae
cltd
pop
lods
sbb
inc
shr
shr
jle
push
lret
jne
je
add
dec
lcall
sbbl
hlt
pop
xor
aas
out
lcall
inc
adc
inc
jecxz
gs
pop
push
xor
mov
ljmp
dec
ror
subb
sbb
mov
popf
fsincos
shrb
test
mov
adc
aam
sbb
dec
dec
lret
cmp
xchg
pop
push
shll
and
xchg
pop
ja
dec
ljmp
rorl
fcomps
sub
adc
push
pop
or
jge
mov
and
sub
loope
push
fidivs
jno
les
jmp
sbb
flds
pop
inc
sbb
cltd
scas
test
ds
adc
mov
out
mov
xchg
push
push
push
jmp
sbb
pop
movsl
dec
push
subl
sbb
push
icebp
or
jle
pop
xorl
pop
and
jg
jg
mov
aaa
jnp
cmpsl
insl
fcomp
loope
inc
insb
xchg
pop
pop
frstor
or
xchg
movsb
sbb
out
stc
inc
sbb
int3
dec
mov
push
and
sbb
inc
dec
dec
mov
mov
adc
push
push
cmp
imul
cmp
inc
jno
sub
cli
xchg
cli
clc
dec
into
in
dec
stos
add
cmp
outsb
sub
stos
test
push
hlt
subl
test
shlb
dec
push
and
aaa
mov
outsb
cmp
in
std
in
in
mov
add
jp
outsb
fwait
pop
add
pop
negb
loop
inc
out
adc
mov
jns
xchg
push
xchg
movsb
jae
test
jo
push
sti
push
jo
out
pop
add
push
xchg
lret
sub
sub
loop
cmp
lds
fnsave
and
add
fnsave
cmp
mov
xchg
cmp
int
nop
fcomi
jp
testb
mov
lahf
push
leave
es
scas
popa
cmp
push
imulb
cmp
push
lahf
rcrb
lret
scas
or
pop
nop
fnstsw
shrl
in
insb
rcrl
bnd
mov
clc
adc
test
and
aad
movsl
sub
int
sub
jmp
sub
sar
mov
mov
jns
mov
clc
mov
mov
cmp
inc
outsb
cwtl
push
sub
in
mov
subl
movsb
dec
lahf
push
push
pop
movsb
xor
fwait
jle
sbb
dec
aam
mov
sbb
hlt
add
cld
fwait
popf
icebp
repnz
add
push
fstpt
jp
mov
out
enter
add
and
add
stc
in
in
push
ja
add
sub
mov
lock
in
cmp
outsb
dec
push
mov
jnp
push
stos
mov
add
stc
les
push
sbb
jno
jne
pop
pop
jns
push
stos
xchg
push
faddp
cld
lcall
inc
loop
xor
call
cmp
stos
loope
mov
arpl
in
sub
inc
js
xchg
and
add
imul
xorl
movsl
pop
scas
sahf
in
push
adc
add
je
jne
fisubrl
popa
push
pop
push
in
imul
jae
fiaddl
or
leave
and
js
sbb
int
add
cwtl
or
jmp
pop
sbb
sbb
test
ret
xor
add
push
test
sub
jb
cmp
mov
leave
lock
or
push
out
pop
lret
lret
cld
jbe
call
push
popf
xchg
or
mov
cli
dec
sbb
cld
pop
lret
out
movl
cmp
into
and
jmp
mov
movsb
xchg
push
out
or
mov
jmp
jle
xor
xor
dec
pop
sbbl
or
hlt
fisubl
cmp
adc
jns
inc
and
les
aad
xchg
jno
jg
pop
inc
mov
jb
into
std
stos
aam
roll
sub
outsb
push
test
mov
call
and
mov
das
lea
repnz
sbb
fisubrl
inc
mov
je
roll
inc
mov
push
daa
adc
push
push
and
rclb
lcall
lret
add
or
outsl
fdivrl
scas
and
mov
iret
xchg
ret
pop
mov
les
shll
xor
and
arpl
sub
mov
fdivr
frstor
mov
mov
dec
sbb
mov
push
ret
pusha
or
bnd
jge
add
mov
pop
ret
insb
adc
fstpt
clc
leave
fs
mov
enter
cs
fiaddl
or
inc
push
sbb
lahf
icebp
out
loop
xor
fistpl
lds
push
cmp
stos
push
adc
stc
ret
mov
jae
push
sahf
sub
and
roll
and
mov
xchg
mov
andb
and
lods
lods
cmpsl
dec
xchg
mov
and
je
ret
mov
mov
adc
xor
add
scas
and
test
push
add
pop
test
leave
mov
push
clc
and
mov
xchg
sti
ss
movsb
and
outsb
outsb
cltd
mov
mov
and
jge
cmp
inc
fsubs
movq
push
js
loop
enter
or
mov
lds
sahf
or
adc
rcl
lock
inc
push
xchg
mov
mov
aad
out
dec
cwtl
in
xchg
shll
mov
pusha
push
cmpsl
jno
fildll
imul
lahf
test
push
jge
cmp
gs
loopne
pop
inc
xor
xor
adc
lcall
out
mov
pushw
sub
inc
mov
leave
and
inc
lahf
lds
stos
js
sarb
int
add
sub
lret
loopne
ffreep
jae
inc
mov
jb
sub
repnz
fistps
jg
setle
andb
mov
inc
push
and
xor
add
bound
adc
ds
popf
out
js
jnp
lock
and
ret
mov
std
or
aas
sub
pop
xchg
xchg
ret
repz
add
xchg
iret
into
inc
mov
xchg
lret
xor
aam
cmc
daa
in
or
adc
mov
out
inc
fisttpl
outsl
or
inc
aaa
jne
aaa
inc
xchg
mov
insb
push
scas
mov
jmp
dec
mov
ja
push
inc
ds
icebp
jb
outsb
es
popa
insb
stc
mov
sub
js
insb
mov
out
lcall
mov
neg
dec
dec
movsl
outsl
cwtl
scas
jnp
xchg
jl
lods
mov
lret
adc
ror
or
push
out
stc
inc
lret
pop
test
arpl
dec
aam
ds
xor
and
mov
repz
rorb
test
mov
imul
mov
xchg
cld
jp
popa
cmp
orl
push
into
and
pop
xchg
cmp
jnp
pop
test
lret
inc
ja
cmc
mov
imul
mov
jns
arpl
mov
dec
sbb
and
mov
and
push
mov
or
inc
and
mov
push
aad
enter
xchg
stc
ss
dec
movsl
ja
or
lcall
jno
pushf
sbb
int
fs
roll
out
shrb
ret
outsb
dec
sarl
add
repnz
shl
mov
cs
mov
and
pop
in
jmp
xchg
lods
pop
or
xlat
fistpl
jno
call
jo
xor
ror
fsubs
mov
adc
addr16
and
pause
add
mov
in
movsl
cmp
or
sbb
in
sbb
pop
pop
rcl
or
cwtl
cli
sbb
inc
xchg
adc
and
das
jmp
xor
fisubl
pop
dec
inc
or
stos
sub
outsl
lret
cmpsb
adc
je
popf
loop
and
addb
stc
fwait
stc
lods
aad
push
movsl
imul
mov
mov
push
rcrb
lea
mov
aad
xchg
nop
lret
imull
adc
fsubs
aam
stos
fisttps
or
mov
or
jl
push
xchg
lcall
xor
mov
push
test
sub
push
incb
mov
cmp
dec
or
jae
cs
xchg
in
not
aam
jge
dec
sbb
pusha
push
test
ret
dec
mov
mov
ja
inc
pop
jbe
cmpsl
cmpb
xor
push
mov
ret
push
pop
iret
cmp
jns
ljmp
and
int
adc
push
add
jnp
push
dec
das
add
ret
stos
jg
cmc
dec
in
icebp
gs
dec
test
mov
push
pusha
sub
mov
adc
or
idivl
les
mov
jle
xchg
jmp
adc
into
cmp
stos
bnd
cld
pop
push
adc
out
pop
pop
imul
and
and
pushf
and
mov
lahf
fistpl
movsl
cs
addb
or
jbe
push
subl
rolb
out
test
fincstp
cmp
cld
inc
ror
jno
xor
es
jmp
test
lds
add
stos
and
mov
xchg
fbstp
lcall
fldcw
arpl
and
adc
scas
fcoms
jl
or
test
hlt
roll
out
adc
mov
and
leave
cld
cld
pop
je
lock
movb
stos
ror
push
popa
mov
sub
outsl
sub
es
lret
lock
inc
inc
idivb
js
out
repnz
js
dec
adc
fistpll
cmp
clc
mov
mov
sarb
cmp
mov
out
test
mov
and
les
iret
cmc
shrb
jo
scas
dec
jno
fisttpl
scas
test
arpl
in
imulb
jbe
sbb
pop
cmp
lods
fcmovne
mov
mov
int
dec
dec
push
cmp
push
enter
shlb
cmp
inc
push
lock
das
push
test
pop
stc
das
or
mov
hlt
mov
xchg
pop
fcoml
pop
or
enter
jae
in
or
fsts
enter
fs
pop
aam
repnz
cltd
loope
cmp
push
outsl
mov
cld
dec
and
mov
mov
adc
push
jmp
pop
cs
cmp
jo
mov
inc
adc
fnstsw
xor
sub
sub
stc
inc
imul
push
sbb
mov
cmp
sarb
loope
sbb
ljmp
jnp
inc
jno
mov
ds
jnp,pn
fsubr
xor
mov
xchg
daa
loop
in
cmpsl
icebp
jge
inc
inc
mov
lcall
iret
out
inc
iret
fdivr
test
or
jge
addr16
aad
mov
dec
and
sbb
js
add
hlt
xchg
jmp
mov
lods
dec
fiaddl
mov
test
jecxz
sub
sub
xchg
addb
arpl
mov
movsl
mov
mov
xchg
outsb
es
inc
dec
lahf
add
mov
push
xchg
mov
inc
xchg
and
aaa
aaa
addr16
pshufw
fsubp
mov
das
xor
stos
pop
sbb
pop
cmp
sub
das
or
or
stc
pusha
insb
and
xchg
jle
cmp
dec
sbbb
js
imul
and
jo
cs
in
jg
into
and
in
rolb
rcll
pop
dec
mov
test
sub
fnstenv
test
lret
add
jmp
mov
cmc
das
jbe
arpl
add
jno
adc
add
adc
sti
inc
subb
xchg
mov
lcall
movsb
mov
je
mov
sbb
rorb
cs
sub
sub
cmp
addb
adc
xlat
mov
shrl
adc
mov
mov
pop
dec
dec
fninit
stos
mov
jmp
in
pop
pop
lds
and
push
int3
push
insl
les
div
dec
lret
test
mov
es
orb
or
lahf
sbb
loope
rcrl
fcomp
pop
cltd
mov
sub
inc
cld
mov
cmp
inc
or
mov
xchg
lcall
jb
jnp
cltd
pop
xchg
pop
xchg
or
addl
das
int3
pop
imul
jge
mov
mov
sarb
out
mov
fwait
loopne
pop
frstor
pause
fs
dec
outsb
addr16
mov
stos
stos
ret
and
int3
aaa
mov
fistl
mov
xchg
ret
xlat
out
xlat
add
pop
in
or
testl
xor
pop
out
iret
mov
loope
loope
sbb
push
push
sbb
test
add
cmpsb
cmp
lock
inc
shll
pop
mov
cmp
pop
mov
fdivr
test
movsb
movb
cs
ficomps
push
clc
xor
in
xchg
out
test
mov
out
dec
or
mov
aaa
in
xchg
aam
cwtl
in
mov
jb
clc
mov
dec
fnstsw
in
enter
mov
sti
sbb
bnd
pushf
repz
jg
rcrl
js
cmp
inc
inc
inc
es
adc
mov
cmp
cmpsl
lret
mov
lods
imul
and
xchg
pusha
sub
and
lahf
lret
pusha
push
mov
fadds
jg
aam
imul
fcompl
mov
pushf
lcall
push
add
cmp
jne
sub
frstor
sub
pop
fs
jno
mov
sub
imul
les
in
xor
mov
pop
xor
or
pop
sub
adcl
shlb
mov
loop,pn
push
insl
push
or
lret
test
inc
pop
xor
bound
push
push
mov
xchg
mov
push
jle
shl
stos
and
push
lods
dec
dec
ds
loopne
inc
lahf
scas
sahf
stos
nop
xchg
push
mov
mov
sahf
ds
push
xor
push
mov
and
pop
stos
xor
cmp
cmpxchg
loop
xchg
push
cmp
pop
and
jne
xchg
sbb
xor
fsubr
dec
mov
xchg
sub
dec
mov
pop
xchg
test
inc
ret
and
sarl
inc
mov
xor
mov
mov
mov
sti
lahf
in
mov
or
mov
xor
or
push
push
mov
stc
mov
pop
insb
jmp
repz
fisttpll
sub
sbb
aas
sub
sbb
mov
and
or
lods
mov
in
sahf
vsubpd
add
pop
fcoml
mov
inc
or
aaa
les
fstps
sub
stos
cmpsl
jmp
test
shlb
fdivr
jns
adc
mov
mov
outsb
stc
enter
dec
pop
popa
fcomps
fsubs
or
lea
dec
sar
das
outsl
mov
sub
mov
mov
cmc
add
aaa
clc
sahf
arpl
pop
in
scas
adc
jg
adc
call
les
push
xchg
xor
loopne
mov
lcall
popl
cmp
or
cmp
mov
mov
mov
fldl
outsb
les
push
iret
enter
push
push
lret
mov
jp
test
iret
xor
orl
dec
adc
jmp
in
pop
adc
or
sbb
jl
enter
insb
fdivs
adc
xchg
add
aaa
stos
mov
je
mov
js
xchg
in
ds
loope
stos
imul
pop
sbb
xorb
sub
ja
push
push
enter
push
pop
sub
cmpsl
in
rcrl
orl
mov
add
inc
aad
jb
scas
loope
leave
pop
adc
xchg
nop
sbb
out
pop
xor
sub
in
shrb
das
sarl
cmp
push
xlat
lea
movsl
add
clc
push
cltd
jmp
cmpsb
loop
test
aaa
inc
push
ret
cmp
cmp
inc
xorb
mov
mov
dec
sbb
std
inc
sub
mov
in
lea
popf
nop
fidivrs
fistps
mov
aad
and
push
ljmp
imul
xor
xchg
jecxz
pusha
pusha
loop
sub
xchg
cmpsl
mov
ljmp
mov
jmp
mov
xchg
std
sbbl
pop
inc
add
jge
jge
pushf
aas
ss
bound
xchg
inc
ret
shr
sub
xchg
adc
cmp
and
in
mulb
push
sub
sub
stos
jne
sbb
dec
sub
mov
mov
or
and
fsubl
scas
sub
lock
fsubl
xorl
mov
outsb
scas
or
lock
mov
push
cmc
mov
inc
jp
mov
xor
movsb
pusha
pop
out
outsb
xchg
add
mov
or
ds
sahf
push
in
enter
lahf
dec
and
push
les
adc
push
sub
into
shll
xlat
call
aaa
pop
inc
andb
mov
fwait
in
stos
or
add
lcall
add
sub
lret
and
repnz
jl
jne
inc
add
mov
fisttpl
push
cs
out
pop
jecxz
or
add
mov
roll
lock
sbbb
push
xchg
clc
xchg
dec
sahf
pop
ss
in
scas
jbe
mov
and
or
jmp
sub
outsb
mov
fcmovne
rcll
xchg
jnp
out
test
mov
xlat
cmc
adc
stos
scas
push
or
in
jecxz
sub
mov
mov
push
jg
cwtl
push
lahf
inc
sbb
dec
push
testl
ret
ss
psraw
popf
pop
dec
xchg
stc
push
icebp
pop
cmp
dec
shrb
jp
jns
ljmp
icebp
movsl
stos
or
and
inc
add
sub
arpl
add
mov
mov
int3
lods
cmp
sahf
sbbb
jg
adc
movsb
sbb
sbb
enter
movsl
fs
xchg
in
cltd
adc
les
iret
sub
jecxz
push
adc
mov
nop
adc
xchg
leave
cmp
cmc
mov
add
lcall
mov
fcompl
mov
std
stc
shlb
mov
pop
cmp
push
xchg
bound
or
mov
pop
jle
lods
sub
xchg
cmpsb
popf
out
xchg
adc
sub
cmp
and
addr16
lret
and
bound
or
mov
lret
and
jecxz
cwtl
imul
pop
sub
mov
adc
pop
imul
fnstcw
mov
sub
push
cs
jno
jo
lahf
js
sti
and
mov
mov
aaa
loope
out
cs
or
cmp
imul
sbb
cmpsl
dec
stos
jg
insl
pusha
out
mov
xor
adc
push
lret
hlt
aas
lret
xlat
jl
or
xchg
hlt
xchg
xor
aad
pop
mov
aaa
pop
pop
xchg
xor
xor
out
inc
pop
mov
mov
test
sahf
jmp
xchg
xlat
sub
mov
mov
mov
js
fwait
pop
cmp
sahf
dec
movzwl
inc
xlat
fisttpl
dec
pop
insl
mov
stos
jmp
inc
popf
cmp
and
scas
xorb
mov
inc
std
add
daa
cld
inc
shll
ret
mov
in
mov
and
stos
or
pop
sub
test
lret
cmp
ljmp
mov
pop
mov
jecxz
stc
lods
imull
lret
mov
scas
lcall
or
adc
mov
cmp
or
std
or
in
enter
pop
clc
mov
add
int
mov
cli
pusha
push
jns
ljmp
jge
jne
sbb
pop
fbstp
rcrl
test
xor
daa
out
push
ret
movsl
inc
mov
or
mov
notl
out
aaa
or
test
cwtl
das
pop
mov
adc
ss
test
lcall
pushf
adc
test
xchg
jg
mov
xchg
rorl
dec
es
ds
popa
outsl
insl
inc
jg
pop
add
inc
jns
inc
sbb
negb
in
jge
cmp
mov
dec
jp
mov
in
xchg
test
add
insl
in
inc
cmp
in
icebp
cltd
aam
cmp
out
lods
mov
cmp
xchg
in
mov
push
add
pop
addr16
gs
jb
data16
jg
outsl
loop
or
incb
cmp
cli
inc
insb
push
xorb
xlat
test
pusha
pushf
addl
iret
lret
fcom
fiadds
add
mov
or
xor
dec
pop
push
push
sbb
mov
fwait
or
and
add
jmp
lahf
adcl
pop
inc
cmpsl
pop
mov
push
jg
mov
dec
ljmp
pop
or
loop
pushf
test
fwait
stos
xchg
pop
or
push
push
dec
shlb
lods
jbe
popf
cwtl
push
int3
pushf
xor
xor
sbb
mov
push
fiaddl
popf
out
xchg
aaa
push
adc
lahf
lock
ss
jb
out
stc
jmp
cmp
cmp
test
insl
cwtl
rorb
ret
mov
or
shlb
lea
push
ss
arpl
jp
call
mov
add
jge
pop
xchg
je
decl
ja
rcr
in
mov
out
pop
rcll
into
xchg
xchg
lds
ret
outsl
push
mov
push
daa
movsb
mov
fdivrs
xchg
push
pop
stos
nop
xor
xor
inc
aad
rcrl
test
cmp
insb
lcall
inc
mov
push
mov
movsb
gs
dec
inc
dec
xlat
jecxz,pn
cmp
add
imul
out
adc
stos
scas
or
sub
sbb
xchg
or
jnp
outsb
sbb
mov
enter
push
pop
inc
pop
cmp
testl
sub
xlat
mov
lret
cmp
mov
sub
pop
add
lcall
into
mov
fiaddl
sbb
in
ror
iret
mov
scas
xor
fs
xchg
or
cmp
lret
adc
in
rcrb
adc
mov
call
gs
xchg
gs
xor
pop
push
jnp
sets
es
sahf
pop
fdivr
dec
adc
sbb
mov
sub
xor
aaa
outsl
inc
into
xor
cltd
scas
lret
rcl
push
outsb
ljmp
sub
fwait
lods
inc
mov
xchg
and
add
in
inc
mov
ljmp
cmp
rclb
cmp
xchg
nop
loope
imul
mov
sbb
das
mov
clc
cmp
ds
daa
xor
dec
pop
clc
loopne
es
xchg
out
cmp
xchg
jo
add
call
push
inc
lds
mov
inc
xlat
es
stc
cltd
ficoms
adc
orb
lock
incl
ret
jns
ret
fistl
mov
and
mov
or
cmpl
push
xlat
push
xor
cwtl
movsb
ficomps
filds
dec
cli
xchg
dec
std
cs
push
popa
add
mov
and
mov
mov
jae
fstpt
popf
das
push
fwait
cltd
pushf
sbb
ret
jmp
or
fisttpl
out
and
stc
xor
sub
inc
dec
xor
push
cli
jecxz
and
cltd
add
or
push
jae
icebp
fimull
xchg
xlat
rol
cs
xchg
jp
xor
pop
pop
icebp
dec
pusha
mov
je
xchg
push
mov
inc
pop
mov
stos
sbb
test
xor
mov
repz
add
stos
fwait
lret
mov
cmpsl
sbb
fcoml
test
loopne
mov
push
mov
cmpsb
clc
ja
out
sub
inc
daa
int
bound
jl
shrb
imul
add
xchg
sub
stc
ljmp
ret
mov
fstpt
fstl
adc
dec
xchg
sub
hlt
or
xor
popa
adcb
scas
xor
enter
das
mov
lret
mov
mov
fnstsw
rcr
mov
jmp
test
fisubl
dec
outsl
push
push
xchg
fistl
xchg
cmp
inc
test
sub
fwait
stos
stos
fs
mov
add
ja
into
xchg
mov
lock
shlb
inc
into
mov
stc
ds
icebp
push
add
mov
inc
adc
mov
or
addr16
mov
je
sahf
sbb
xchg
mov
aam
mov
mov
pop
jns
cld
pop
xchg
sub
in
data16
gs
pop
nop
cmp
mov
pop
add
js
lcall
dec
xchg
cmp
and
mov
pusha
dec
mov
push
and
test
stos
jp
mov
sub
dec
ljmp
xor
push
jl
mov
imul
idivb
xor
and
loope
pop
mov
dec
inc
incb
popa
lea
mov
jg
test
sbb
aam
out
cmp
test
pop
mov
inc
pop
sub
ljmp
repnz
dec
sbbb
mov
mov
pop
adc
stos
fucom
sub
cmp
sti
jp
repz
das
xchg
subl
push
push
outsl
sarl
push
cmpsl
ds
sbb
cmpsb
addr16
jo
jae,pn
adc
pop
jb
and
lret
inc
jb
mov
stc
ret
push
cld
xor
je
jl
adc
dec
and
mov
sbb
mov
add
lcall
fsubrl
dec
mov
adc
and
int
adc
gs
stos
push
sbb
sub
lcall
cmp
inc
or
lcall
mov
ds
std
jns
inc
sbb
push
leave
adc
mov
dec
test
and
int3
pop
push
inc
adc
adc
jbe
icebp
fildl
cmp
or
in
icebp
inc
cmp
mov
mov
insb
fdivp
movsb
sbb
shr
xadd
lods
scas
mov
fldenv
int3
xlat
push
pop
jo
movsl
push
rclb
scas
rorl
out
ret
aam
jno
cmp
int3
andb
mov
adc
cmc
push
lret
insb
mov
dec
lcall
aas
in
cmp
push
xlat
imul
lods
cmp
jno
in
cmpl
stc
in
xchg
movsl
adcl
cltd
stos
aaa
fstps
lods
movsb
jns
mov
popf
push
enter
sti
inc
or
and
iret
out
pop
popf
ljmp
nop
jmp
aaa
clc
sbb
pop
cmp
imul
insb
adc
mov
dec
push
stos
andb
jge
pop
dec
jae
jmp
dec
pop
mov
push
ljmp
js
add
push
das
clc
loope
imul
jbe
rolb
xor
inc
in
in
mov
mov
xchg
add
sub
adc
xor
fsubl
mov
xchg
jns
pop
mov
mov
das
negl
adc
cmp
mov
incb
jno
rcrb
sarl
or
sbb
stos
pop
test
cmpb
lods
jo
lcall
fadd
cmp
push
mov
add
je
fildl
in
ret
mov
or
in
movsb
mov
movsb
mov
mov
cmp
sub
push
inc
sti
imul
push
pop
sbb
iret
int3
ja
mov
inc
shrb
ss
lods
mov
loope
add
jl
xchg
mov
into
xchg
das
repz
sbb
pop
sbb
test
repz
push
inc
call
mov
cmpb
sbb
ret
outsb
pop
lret
cmc
rcrl
xchg
stos
std
sub
pusha
mov
aam
push
inc
pop
jmp
ds
pushf
mov
in
lret
aas
fistps
sahf
mov
cmp
push
loopne
lret
cmp
mov
aas
cmp
es
aas
rclb
pusha
addb
push
sub
inc
cmp
sub
xorl
dec
adc
iret
fs
repnz
push
sub
icebp
mov
xchg
jl
iret
mov
xchg
fldl
cwtl
push
jne
push
mov
fidivrl
push
out
xchg
pop
gs
or
mov
dec
jbe
loope
arpl
jnp
and
mov
subps
movsl
mov
lea
mov
push
adc
jnp
push
sti
je
leave
xchg
cwtl
hlt
loopne
or
out
inc
fiadds
ret
div
push
inc
or
mov
mov
xchg
bound
lods
pop
push
fsubrl
fs
dec
ds
clc
iret
pop
xor
daa
add
pop
cmpsl
sbb
rolb
ficompl
in
fadds
repz
xchg
ljmp
or
fwait
jae
repnz
xor
mov
mov
mov
sbb
jb
cmpsl
insl
stos
aam
addr16
dec
sbb
lods
xchg
sbb
idivl
notb
enter
mov
scas
lods
push
je
mov
out
nop
mov
je
iret
add
mov
shll
out
out
divl
push
imul
adc
adc
shll
stos
dec
lds
mov
inc
sub
dec
test
sahf
dec
repz
mov
int3
cli
not
out
sub
in
cmc
mov
pop
out
ds
test
mov
shl
shlb
and
xchg
jae
or
out
cwtl
xchg
cmp
in
inc
pushf
pop
inc
and
std
xor
sbb
sbb
movsb
cmp
cltd
loopne
pop
mov
mov
mov
mov
mov
sub
scas
repnz
pop
cmp
ds
xchg
insb
in
xchg
stc
subl
push
sbb
sub
shlb
pop
dec
push
add
mov
inc
cmp
mulps
popf
and
lcall
xchg
or
shrl
dec
repnz
sti
and
sarb
out
push
ljmp
xchg
mov
and
mov
and
decl
aam
mov
cmp
pop
addr16
mov
inc
sbb
or
inc
test
pop
pop
ds
fdivrs
cmp
sbb
sbb
pop
mov
add
push
mov
les
jns
or
sub
aaa
aas
lcall
jmp
mov
push
addr16
xor
xchg
lock
rcll
xchg
ljmp
or
xchg
dec
stos
jle
fdivrl
and
bound
mov
js
dec
test
mov
jns
sub
test
dec
pop
ret
and
jne
lahf
mov
inc
ret
mull
out
sub
arpl
xor
jp
xor
sub
in
push
push
fs
or
jae
mov
ret
dec
ja
and
xor
mov
test
test
push
jo
imul
or
pop
push
xchg
cmpsb
sub
out
rcll
rol
mov
push
or
call
sbb
out
xchg
in
dec
shrb
or
xchg
loop
mov
cli
je
dec
out
sub
adc
jnp
ljmp
inc
es
aas
dec
test
jl
push
push
daa
test
cmp
call
sbb
dec
negb
jge
push
imul
adc
add
xor
enter
xchg
sarb
xor
dec
mov
mov
out
fsubrs
insb
pop
leave
add
std
dec
testl
andb
push
popf
push
lcall
lcall
mov
mov
cmpsb
pop
or
sub
ficoml
add
sbb
add
andl
and
out
mov
rorb
fstl
cmp
clc
mov
jg
push
jne
jge
mov
into
xor
add
iret
scas
mov
mul
inc
daa
xor
pop
mov
aam
mov
movq
jnp
aam
inc
mov
pop
loopne
lahf
pop
xchg
sub
or
and
out
cmp
pop
orl
inc
mov
mov
cmpsb
rcl
daa
sbb
sahf
mov
inc
sub
and
dec
mov
xchg
imul
test
mov
ror
js
push
in
xchg
loopne
jl
sub
jno
in
pop
iret
in
pop
imul
jge
subl
in
dec
xchg
jle
leave
je
sti
xchg
fcoml
out
mov
sub
int
popf
mov
in
and
lcall
sub
xorl
es
negl
jns
movsb
adc
and
mov
aaa
pop
xor
in
das
sub
hlt
scas
adc
add
fstp
fisubrs
pop
mov
test
test
aam
arpl
adcb
or
int3
push
push
shl
test
imul
or
fistpll
mov
cmpsb
and
es
xor
add
mov
cmp
icebp
push
push
dec
sar
lcall
cld
cmpsb
pop
lret
outsl
aaa
dec
hlt
sbb
enter
push
idiv
bnd
sbb
pop
sarl
pop
sbb
roll
push
rolb
jg
movsb
iret
jb
sub
je
repnz
mov
or
and
push
divl
int3
ljmp
pop
mov
xor
pop
mov
mov
or
lret
rorl
fwait
aaa
gs
mov
aam
mov
inc
aas
push
fnstcw
scas
inc
outsl
sub
add
push
push
les
das
adc
jl
addr16
add
or
pop
out
nop
dec
xchg
inc
movl
outsl
mov
xchg
push
sub
shl
fstl
dec
aad
sbb
sbb
pop
cli
sti
in
arpl
jbe,pn
mov
and
jge
xor
mov
sub
push
popf
mov
es
loop
mov
insb
mov
nop
popa
repnz
push
gs
inc
sti
xchg
mov
lods
hlt
rolb
arpl
clc
sbb
aaa
inc
dec
dec
and
push
mov
sbb
push
jge
pop
jle
cmp
xchg
test
xchg
pop
push
jl
out
mov
push
out
jne
cmp
lea
mov
add
ja
push
ja
aam
test
leave
bound
mov
xchg
gs
pop
cmpsb
and
stc
je
movsb
roll
pop
decb
push
repz
imul
loopne
ja
popf
lcall
adc
xchg
mov
fstpl
dec
dec
and
sbb
xchg
and
addb
inc
push
pop
subb
mov
loope
push
imul
and
test
adc
jmp
mov
movsb
add
scas
jb
cmp
xchg
std
xor
out
jecxz
jle
fs
test
mov
ljmp
cmp
jns
lods
insl
xor
loopne
push
sbb
cmpsl
in
mov
mov
add
lret
mov
jb
in
js
popf
jno
or
inc
addb
rorb
dec
pop
sahf
or
jno
add
cmc
sub
icebp
test
cld
mov
lds
into
jo
aam
fwait
lock
add
and
lahf
jmp
in
mov
into
mov
inc
pop
fadds
xor
dec
test
icebp
cmpsl
dec
mov
xor
adc
bnd
pop
push
aad
mov
mov
mov
pushf
mov
ficompl
stos
rcrb
pop
add
in
sahf
jg
stos
xor
ljmp
pop
jmp
stos
inc
sub
sbb
rcr
push
imul
sti
pop
call
fbstp
cmp
sarl
jg
adc
sbb
or
jle
jne
outsb
xchg
leave
out
lahf
push
add
sbb
test
mov
imul
mov
aam
add
push
xchg
jne
adc
xor
xor
xor
imul
or
stc
xchg
mov
fs
jne
mov
dec
add
into
xchg
and
pop
push
notl
sub
imul
sahf
ret
cmc
cmpsl
enter
lds
jmp
pop
test
jne
xor
sbb
jp
xchg
ds
cmc
mov
bndstx
pop
pop
mov
out
sbb
mov
fld
ss
push
add
and
inc
fcmovnbe
xor
mov
stos
sbbl
or
nop
mull
adc
lock
pop
mov
xor
enter
leave
inc
xchg
or
shll
ljmp
inc
mov
xchg
jecxz
jmp
dec
dec
insl
and
jnp
jp
mov
gs
int3
jbe
or
sbb
sbb
fdivl
inc
xor
sub
rclb
leave
mov
push
clc
sub
and
xchg
xchg
js
cmpsb
dec
fwait
cld
pop
mov
adc
lret
insl
sti
push
into
sub
stos
inc
xor
push
movsl
inc
jbe
sbb
mov
push
adc
hlt
or
mov
or
or
mov
ja
fldenv
mov
mov
add
out
dec
out
push
mov
cmp
fidivrl
cmp
dec
mov
pop
adcl
pop
data16
add
test
sbb
out
add
mov
std
lcall
movsl
mov
add
outsl
cmp
xchg
rcll
push
cmp
jle
test
ffree
dec
ds
fwait
insl
push
mov
pop
push
cmc
dec
jmp
imul
push
jmp
sub
pop
stc
push
imul
test
int
pop
ss
inc
mov
cmc
adc
mov
xor
or
xlat
mov
daa
mov
aas
das
cli
int
loopne
testb
out
adc
sbb
xchg
push
nop
push
jae
pop
push
shlb
test
lds
out
insl
cmp
mov
adc
es
mov
mov
addr16
pop
pop
adc
lahf
fdivl
repz
aam
shr
mov
sti
outsb
stos
mov
cmp
inc
fsub
loope
std
and
jo
lods
call
pop
cmp
fdivs
int3
bound
test
fdivrs
imul
or
mov
rcl
gs
push
arpl
xchg
lods
sub
adc
dec
test
sub
ljmp
stos
push
xor
jnp
bound
mov
and
gs
jo
pop
inc
jne
cmpsb
adc
mov
fists
mull
xchg
push
gs
pop
xorb
push
push
hlt
das
cld
rclb
and
sbb
shlb
jl
into
mov
aam
test
out
cmp
std
loopne
mov
xchg
sbb
and
sarb
inc
adc
inc
or
jb
mov
cmp
mov
mov
add
jb
jp
shrb
outsb
repz
int3
adc
je
test
cs
nop
add
jl
out
inc
jno
inc
inc
dec
or
call
insl
sbb
movsb
mov
dec
lds
push
push
mov
cltd
xchg
sbbl
ss
bound
enter
cmp
mov
jg
out
pop
mov
aaa
in
fimuls
jns
dec
daa
insb
test
xchg
cwtl
shlb
or
lods
shrl
push
jmp
popf
addl
pop
call
cmpsb
lea
adc
sub
scas
cmp
and
rcr
andb
adcl
mov
add
and
repnz
xor
or
popf
aam
js
sub
push
call
inc
xor
xchg
push
insl
mov
inc
adcb
mov
bound
inc
fbstp
xor
xchg
ds
in
shlb
in
mov
sub
ficomps
sub
les
ss
insb
sbb
pop
stc
sub
stos
movsb
pop
rep
jno
mov
daa
mov
pop
lods
push
pop
dec
add
xor
je
fwait
lret
test
ror
mov
div
enter
out
cld
enter
sub
leave
insl
stos
jnp
cmp
push
rcrl
pop
pop
push
sub
xchg
enter
mov
idivl
and
cld
mov
pop
or
pop
rorb
xchg
cmpsl
inc
jmp
adc
mov
stc
mov
lret
add
adc
notb
rolb
sub
outsb
jge
xorl
cltd
lea
and
movsl
pop
dec
pop
cmp
dec
jmp
arpl
lods
stos
lods
movsl
or
lret
fistpl
mov
jecxz
cmc
scas
sbb
std
pop
inc
int
cld
sbb
sbb
repnz
into
pop
les
sub
imul
mov
stc
and
fists
xlat
fbstp
inc
idivb
or
inc
pop
clc
in
or
jge
mov
popa
push
jne
pop
loop
loop
daa
mov
add
fistl
fdivrl
dec
leave
mov
cltd
adc
ficoml
cmpb
adc
lock
in
rcrb
mov
paddsb
dec
pusha
movsl
cmp
not
pop
push
and
sub
repz
mov
cmc
data16
inc
cld
out
repnz
je
cltd
idivl
je
push
movsb
hlt
or
subb
lahf
add
movsb
lret
arpl
fadds
xchg
jbe
out
push
add
lock
sub
pop
pop
adc
scas
mov
lods
data16
flds
and
mov
mov
int3
mov
xor
sti
subb
pusha
popf
movsb
fs
lods
adc
push
and
imul
jbe
mov
dec
mov
mov
sub
inc
sub
add
loop
jo
jo
add
add
mov
or
mov
lahf
inc
pop
mov
das
lds
inc
mov
orl
or
push
scas
rcrb
adc
repnz
pop
insl
pop
cld
mov
pop
push
sti
jle
out
sub
xor
scas
int3
out
lds
lcall
out
into
hlt
rcrl
sbb
jnp
and
addr16
sarl
inc
cmpb
jmp
stos
sub
dec
ret
addb
mov
pusha
lock
mov
dec
sbb
mov
subb
cmpsb
test
mov
insl
sbb
xchg
clc
jecxz
movsl
mov
sbb
or
mov
int
out
jg
lods
repnz
jmp
and
outsl
push
sbb
dec
je
out
and
push
sub
add
mov
cmp
insl
dec
sub
loope
daa
mov
subb
add
add
mov
cli
icebp
mulb
xor
rolb
mov
andb
sbb
dec
xor
xchg
rcr
mov
push
mov
cmp
fs
gs
mov
das
xchg
test
mov
sub
push
mov
adc
mov
jae
cmp
insl
push
call
inc
sub
adc
dec
scas
mov
mov
pop
jns
cmp
sarb
sbb
pusha
add
mov
test
stos
fs
jno
cli
push
pop
ds
jbe
iretw
sbb
lret
std
sbb
movsl
and
mov
mov
pop
adcl
das
inc
and
aad
mov
cltd
or
pop
inc
dec
mov
repz
js
lret
enter
aas
cwtl
pop
clc
adc
loop
dec
jnp
adc
add
faddl
adc
test
push
sbb
aas
mov
dec
loopne
ret
fisubs
aam
cmp
xchg
or
pop
fsubrs
push
and
pop
pop
ret
fwait
pop
pop
mov
scas
test
cmp
ds
out
cs
movsl
nop
cmp
dec
sti
out
out
insb
xor
pushf
mov
lar
inc
cmp
xchg
pop
sub
sub
imul
sub
lods
pushf
aam
cwtl
bound
inc
mov
fs
pop
cld
in
loopne
xlat
aas
xchg
cmp
mov
mov
cmp
sahf
sbb
and
mov
clc
sbb
sub
or
in
or
sbb
and
mov
gs
sbb
aas
gs
mov
xlat
out
and
int
movsl
loopne
cmc
and
push
adc
mov
sbbb
push
mov
sbb
ja
hlt
insl
lds
inc
in
call
outsl
mov
movsb
sub
out
lock
hlt
jnp
inc
jmp
sbb
insb
lret
inc
shrb
lcall
cmp
inc
cld
test
jp
insl
clc
int
and
scas
test
cli
test
add
jo
cmp
xchg
je
xor
sahf
loop
mov
add
sarb
popf
sub
cmp
je
lcall
add
sbb
add
fwait
int3
jmp
pop
jbe
lahf
in
in
jg
scas
push
fsubr
inc
popf
sbb
mov
das
js
mov
add
je
leave
mov
cmp
mov
pop
jnp
jne
cmp
int3
mov
lcall
ja
in
jb
pop
sbb
push
cmp
xlat
mov
shr
sarl
fsub
scas
add
pop
pop
lret
push
sbb
divb
mov
pop
mov
mov
mov
or
je
vxorpd
fcomi
lea
mov
cwtl
adc
ljmp
data16
xorb
fbld
push
out
jg
sbb
fsubrl
out
idivb
into
gs
rep
pop
inc
repz
sti
mov
enter
in
mov
xchg
subb
sub
or
push
push
jle
aad
and
mov
lcall
imul
lret
vorps
or
das
lods
lret
push
scas
cltd
pop
scas
lea
movsl
cmpsl
in
addr16
push
repnz
cmpl
stos
das
or
leave
data16
nop
imul
inc
orl
xorb
add
enter
loop
push
mov
hlt
movsl
adc
daa
adc
and
leave
add
arpl
fs
out
rorl
lods
test
cmp
mov
outsl
outsl
inc
stos
push
mov
out
or
int
add
jno
mov
cmpsl
sbb
xchg
sbb
lea
add
jecxz
test
mov
loop
adc
jae,pt
mov
xchg
xlat
test
or
cmp
mov
add
sbb
xchg
mov
gs
je
cmp
pop
out
or
nop
sub
adc
push
inc
inc
outsl
mov
imul
dec
xor
js
int
inc
adc
add
sti
rorl
pop
mov
cmp
dec
mov
sbb
cmp
repz
int3
lods
jae
stos
clc
ds
lret
rorb
or
pop
and
sbbb
sub
adc
popa
cs
cwtl
gs
mov
mov
pop
out
adc
loope
decl
mov
insl
lret
mov
sahf
sub
outsb
adc
lods
push
cmp
mov
daa
lret
push
cmpsl
movsl
push
nop
pusha
xchg
push
xor
dec
mov
cltd
test
lds
iret
mov
rcrb
cmpb
jp
cmp
lcall
hlt
or
inc
mov
cmc
pop
cmp
jne
pop
cmp
sbb
aaa
and
inc
mov
ljmp
xchg
jns
insb
fchs
jle
cs
xorb
pop
jae
into
mov
cmpsb
popfw
inc
lret
rcrb
jmp
dec
mov
push
pop
ret
xor
inc
and
daa
sahf
cld
movsb
fcmovnu
pop
xchg
insl
je
adc
dec
xor
inc
xor
cmpsb
sub
mov
and
movsl
sti
jp
and
cmpsl
cwtl
imul
dec
pop
pop
out
and
xor
mov
dec
and
sub
inc
mov
arpl
pusha
mov
inc
and
cmp
sbb
ljmp
fistpl
push
out
xchg
std
test
aad
lods
out
mov
jge
test
ret
xchg
addr16
xor
mov
adc
insb
test
adc
imul
mov
add
sbb
rcll
iret
xor
sub
daa
mov
fists
mov
movlps
pop
inc
adc
insl
xor
push
add
mov
faddl
das
std
or
out
loopne
mov
out
daa
pusha
mov
lods
imul
lret
mov
cmp
dec
repz
or
imul
mov
xor
push
pop
rcr
mulb
dec
add
mov
sbb
adc
xor
int
sbb
mov
sbb
std
fbld
and
sahf
cmpb
add
sbb
ljmp
movsl
inc
inc
add
mov
popa
mov
jle
mov
data16
imul
pop
xchg
pop
xor
shl
pop
push
popa
arpl
hlt
mov
lahf
outsl
and
imull
ror
cli
jo
dec
data16
xchg
cltd
mov
repz
sarb
shrb
in
std
jbe
lea
jnp
xchg
sti
xchg
fucomp
repnz
sub
xchg
push
stos
mov
pop
cli
out
push
lahf
sbb
add
adc
fisubrl
insb
lcall
mov
jne
and
daa
or
dec
or
jns
mov
aam
inc
test
or
cli
loope
mov
jp
xchg
mov
or
ds
xlat
lret
adc
call
adc
cmp
lret
lds
ljmp
fcompp
icebp
outsl
jl
fisubrl
push
dec
jg
mov
and
and
outsb
add
loope
push
nop
xchg
push
push
pop
leave
mov
sub
sbb
dec
jl
jno
loope
int3
cmpsl
int
stos
lcall
ret
repnz
not
rol
fiadds
mov
stc
sub
sbb
daa
popf
call
in
movl
xlat
xlat
cmpsb
mov
repnz
jne
xchg
or
xor
mov
imul
adc
lock
ret
mov
ljmp
ret
push
cmpb
inc
xor
inc
stc
lock
hlt
cli
negl
inc
das
jb
cmp
scas
cli
sub
aad
jae
pusha
bnd
xlat
push
dec
jl
js
insb
test
mov
mov
dec
test
lds
ret
mov
into
decl
cwtl
jecxz
mov
sbb
xchg
in
out
pushf
mov
push
pop
popa
fdivl
dec
stos
mov
jnp
ja
sub
and
jno
pop
inc
mov
out
sub
xchg
xchg
movsb
mov
jne
aad
fdivrs
sahf
repnz
mov
scas
inc
mov
adcb
xchg
enter
fiaddl
bnd
shrb
repnz
cmpsl
in
cltd
rcll
test
rol
push
sbb
inc
xor
pop
sub
jo
loopne
jg
js
xor
popf
cld
cmp
ret
jnp
fisubrs
loope
inc
xchg
inc
divb
hlt
xchg
dec
hlt
mov
push
cmp
sbb
mov
js
cmc
loopne
scas
xchg
sub
shlb
int
scas
lcall
aam
inc
mov
cmc
outsl
test
pusha
jmp
test
popf
mov
xor
pop
sub
push
jecxz
pop
xchg
filds
mov
cmp
jl
fiaddl
mov
or
outsl
xlat
jae
cmpsl
lahf
lods
push
je
cwtl
or
mov
mov
mov
xlat
orb
loop
jne
push
xor
fimull
ljmp
arpl
rorb
into
xchg
jno
sub
jo
push
and
or
xor
adc
add
mov
test
int3
jb
mov
push
test
push
sbb
mov
xor
jmp
shr
adc
js
sub
icebp
xor
push
pop
shlb
xchg
ret
pop
inc
xchg
leave
or
xchg
push
mov
push
or
xor
roll
out
jbe
insb
push
xorl
adc
fisttpl
ja
nop
inc
pop
inc
nop
lahf
or
les
test
push
dec
add
pop
roll
jmp
xor
insl
mov
inc
adc
sub
jle
mov
sbb
pop
js
dec
outsl
rorl
xchg
xor
push
sub
sbb
in
cmp
adc
xor
push
daa
fidivrs
dec
add
xchg
cmc
cli
mov
cmp
and
pusha
lock
es
push
mov
cli
fisubl
jge
sti
push
mov
and
inc
lcall
push
inc
add
loop
pop
add
hlt
out
mov
push
loope
lods
push
push
jae
jmp
xor
dec
and
xlat
push
sbb
leave
cmc
pop
pop
out
into
mov
fstpl
jae
rorb
addl
loope
or
dec
subb
or
lods
hlt
cli
rcrl
std
ret
outsl
or
or
xchg
or
insl
mov
arpl
jle
imul
dec
addr16
sbb
jecxz
fsubrl
xchg
mov
xchg
shll
and
dec
sbb
push
cwtl
mov
push
inc
dec
push
push
rcrl
ret
sbb
cmc
cmp
repnz
int
fcomps
test
jecxz
add
push
mov
pop
push
mov
out
dec
mov
jnp
jge
pop
xor
and
and
xor
daa
lock
jle
ss
nop
jb
fsubl
adc
sti
fwait
nop
stos
dec
push
jno
push
mov
ljmp
inc
and
pop
neg
dec
sbb
test
push
loope
sbb
inc
les
gs
test
js
in
outsb
inc
xchg
rcll
mov
andl
mov
into
stos
pop
sbb
decl
ja
arpl
aad
fwait
mov
fcoml
push
roll
cmp
idivb
sahf
xor
cli
cld
push
fs
clc
movsl
push
jp
push
or
loope
fmulp
sub
orb
les
and
adc
aam
mov
push
cs
dec
sbb
int3
or
xchg
jne
push
jns
lock
mov
or
les
dec
lea
sbb
mov
shrb
dec
das
jg
gs
cmp
rcrl
mov
xor
imul
sub
push
add
scas
sti
push
lahf
cli
sahf
cmp
cmp
or
pop
sahf
push
out
mov
stos
pop
int
and
jo
jmp
jp
or
outsb
sub
aam
push
imul
lea
in
fwait
dec
jge
mov
rep
aas
sbb
mov
inc
pop
jno
inc
pop
cs
sub
outsb
fndisi(8087
jo
dec
inc
cmp
jb
jo
outsl
arpl
pop
leave
gs
jg
mov
clc
jecxz
clc
pop
enter
js
and
nop
dec
push
sbb
pop
jns
xchg
and
xor
xchg
bound
mov
adc
scas
xor
push
outsl
push
int
out
cli
cmp
ljmp
jmp
lea
orw
inc
ljmp
dec
mov
in
cmp
in
ljmp
or
xor
test
jl
cmp
cmpsl
popa
aaa
enter
pop
inc
inc
xchg
mov
loope
jb
lahf
xchg
into
mov
stos
mov
xchg
test
stos
push
mov
orb
inc
mov
jns
rcl
sbb
outsb
adc
push
dec
loopne
mov
jno
jno
dec
subl
fnstcw
aaa
mov
add
jp
aam
stos
mov
dec
cli
icebp
jno
outsb
inc
sub
cmp
loop
das
mov
inc
jg
or
fistps
jg
into
imul
dec
push
pusha
popa
les
add
pop
ds
sub
call
cs
mov
mov
or
icebp
into
or
mov
add
push
or
dec
cmp
or
xor
sbb
rorb
aad
pop
mov
inc
inc
adcl
xor
test
in
call
mov
imul
aad
jno
pop
scas
xor
cmp
xchg
aad
jns
mov
jl
push
mov
push
xorb
dec
out
cmp
lcall
push
xchg
es
dec
push
pusha
push
inc
lcall
mov
fdivrl
xor
test
cmpsb
sbb
sub
in
xchg
test
fwait
int3
mov
pop
xor
idivl
jnp
js
ret
or
pop
or
repnz
shlb
xchg
iret
add
iret
ljmp
push
jne
push
xor
lods
fcoml
xchg
mov
inc
cmpb
ficoml
test
pop
pop
cmp
pushf
in
jb
adc
mov
cmp
mov
aad
mov
and
fcoms
mov
leave
int3
loopne
lret
pop
test
iret
hlt
mov
ficoml
push
jg
xchg
arpl
adc
arpl
loop
or
add
ror
jns
cs
pop
push
jb
leave
data16
and
mov
frstor
andb
jnp
les
dec
loopne
cwtl
andl
xor
sbb
mov
aad
jle
dec
mov
jne
dec
out
push
pop
jo
aas
push
jns
add
fs
adc
push
test
ja
sti
jge
sub
ret
mov
shlb
js
cmp
cmp
mov
xor
fadd
fidivrs
jns
cmp
mov
sbb
sbbb
popf
lods
xchg
push
push
popf
add
or
mov
fiaddl
inc
xchg
pop
dec
mov
mov
iret
xchg
mov
cltd
call
arpl
dec
test
sbb
xchg
lahf
fwait
cmp
adc
inc
and
adc
arpl
and
and
mov
roll
and
orb
sbb
jge
rcrl
fwait
push
cmpsl
mov
jae
push
popa
adc
push
addr16
xor
add
popa
add
loop
inc
lock
lcall
loop
sbb
or
popf
test
cltd
int3
out
jae
fimuls
cmp
or
push
mov
xchg
fcmovbe
push
inc
xlat
mov
jmp
popf
xchg
jbe
sub
pop
dec
mov
or
int3
stos
push
dec
mov
and
ja
das
adc
sbb
mov
in
cmpsl
lods
dec
jecxz
iret
call
pop
and
rorb
adc
and
arpl
fildll
inc
sbb
lds
lock
mov
loopne
push
pop
jb
lods
sub
sarb
rcll
scas
mov
inc
jl
fs
xchg
jge
or
add
leave
ja
dec
adc
negl
shr
test
sbb
pslld
loopne
xchg
cltd
mov
sbb
pop
rol
in
js
or
jnp
add
ret
cmp
cmpsl
in
hlt
shl
mov
popaw
xchg
add
mov
jno
outsl
test
inc
bound
dec
popf
or
or
pushf
jge
aaa
cmp
xlat
aaa
inc
hlt
inc
cmp
pop
imul
sub
xor
sbb
insl
es
rolb
fdivrl
popa
aad
inc
loopne
addb
mov
xor
cmp
sub
shlb
dec
cs
psubq
jmp
test
iret
pop
ret
mov
sbb
jo
mov
mov
fldcw
loope
movsb
and
or
out
pop
add
mov
jmp
pop
js
jp
add
loope
loope
aas
loope
mov
sbb
mov
cmpsb
lds
push
push
cmc
jo
sub
cli
es
mov
aad
xchg
lcall
mov
pop
icebp
stc
cmp
femms
fistl
into
stos
push
testb
jle
lahf
sarl
sub
mov
push
xchg
loopne
mov
pop
xor
fstl
add
ficoms
dec
pop
dec
out
int3
cmc
out
push
mov
not
nop
insb
xor
mov
push
dec
or
leave
jne
sti
inc
mov
add
mov
cs
rorl
sub
push
popf
pop
inc
pusha
and
xchg
les
xchg
add
sbb
mov
lret
mov
or
and
ret
inc
jge
inc
aas
icebp
pop
xchg
sbb
adc
cmp
jae
dec
data16
push
pop
mov
push
loopne
loope
sbb
lds
lds
jb
dec
sub
adc
sub
or
push
inc
mov
add
push
xchg
mov
out
xchg
mov
push
pop
and
nop
mov
je
or
sbb
out
dec
add
adc
push
inc
or
xor
scas
sub
xchg
into
andb
es
jp
xchg
pop
pushf
lock
mov
in
mov
js
iret
inc
hlt
out
cs
repz
je
mov
cmpsb
xlat
dec
iret
inc
cmp
pop
and
sbb
imul
test
ljmp
pop
mov
mov
adc
loop
repnz
jecxz
mov
adc
mov
dec
xor
mov
xor
and
aam
mov
inc
or
adc
pop
xor
cwtl
test
lock
lods
out
lcall
in
sub
lahf
add
cmp
and
add
lea
sub
pusha
push
les
add
das
cmp
sbb
mov
mov
popf
out
and
jp
aaa
jp
scas
jl
outsl
stos
pop
fmuls
add
mov
lahf
and
frstpm(287
xor
scas
pop
je
int3
mov
mov
mov
push
xor
xchg
pop
inc
xchg
jecxz
push
sarl
sbb
imul
mov
cwtl
jbe
lds
mov
cmpsl
add
stos
fcomip
movsb
sbb
rorb
pop
lret
pop
and
inc
xchg
jg
cmc
mulb
adcl
sub
test
mov
rclb
mov
sbb
or
add
xor
loope
js
jbe
mov
leave
sbb
clc
in
inc
test
das
xorb
jg
xor
lcall
cmp
lret
std
in
lcall
sub
xor
out
cmp
push
cmc
adcb
out
mov
aam
cmp
mov
add
dec
adc
lea
sbb
jne
push
popa
cmp
push
or
xchg
cmp
icebp
xchg
call
jmp
sbb
mov
pop
scas
xchg
mov
dec
pop
shlb
test
int3
inc
inc
xor
repnz
fidivs
or
mov
ret
pop
mov
xchg
mov
or
adc
jae
cmp
mov
shl
inc
push
jne
loopne
es
aaa
iret
dec
and
push
cmp
jg
arpl
cmp
mov
cld
ret
push
pop
imul
sub
dec
call
pop
hlt
sbb
jge
and
jp
mov
sub
pushf
test
cmp
cmc
mov
fstps
lds
in
mov
mov
inc
push
mov
sar
cwtl
dec
inc
sbb
in
pop
adc
pushf
push
inc
mov
scas
inc
rolb
ret
sub
or
pop
cmp
pop
test
mov
sarb
add
cmp
jp
mov
push
stos
repz
jbe
rol
scas
push
fisubs
mov
inc
mov
push
in
cmpsb
jne
lds
jp
mov
hlt
ss
fsubs
loop
lock
mov
cwtl
inc
test
das
sbb
push
mov
mov
push
in
pop
push
icebp
nop
or
shrl
shr
ljmp
jbe
mov
ret
ret
mov
and
ja
movsb
sbb
fistpll
inc
xor
pop
mov
jge
int3
inc
or
xchg
nop
das
push
popf
sbb
insl
xor
aad
xchg
cmp
lret
mov
call
and
sub
sub
mov
mov
ret
mov
adc
mov
adcb
xchg
cmp
sub
or
mov
mov
dec
sub
cmc
jns
push
and
push
movsl
sub
in
loop
lahf
push
push
iret
int
shll
push
jle
mov
add
mov
mov
fstl
and
popf
data16
test
insl
ror
or
lds
in
jecxz
ja
push
imul
cmp
jnp
xor
in
test
xor
in
ret
lods
push
mov
bound
inc
pop
add
nop
aad
cmp
addr16
pop
daa
jp
stos
jno
movsb
jl
idivb
stos
dec
pop
dec
rcll
dec
push
jb
sbb
cmpb
addr16
in
lahf
out
lret
mov
fwait
sbb
fstl
jp
add
cmp
and
in
and
dec
pushf
add
and
rcrb
xor
and
icebp
fdivrl
add
push
jns
jecxz
inc
lea
mov
xchg
lock
and
inc
pusha
pop
push
mov
sub
nop
test
rcll
popf
mov
push
fdivl
mov
adc
mov
jecxz
insb
push
test
inc
sbb
fdivl
jns
xlat
cmp
dec
lcall
loope
cmp
add
mov
popf
add
xor
js
or
js
push
push
cmpsb
mov
inc
insb
pushf
sbb
jl
hlt
sub
lods
lock
mov
fstpt
mov
repnz
jp
mov
lock
addr16
mov
sub
fs
or
mov
repz
js
addb
adcl
push
cmp
call
push
mov
mov
mov
js
xor
sbb
incb
cmp
sub
add
pop
ret
call
adc
fs
mov
jg
and
push
lods
add
sarb
shrl
lods
mov
xchg
sbb
or
fs
imul
sbbb
imul
xchg
mov
lods
sbb
inc
push
dec
or
push
popa
cld
mov
add
je
andl
test
test
lods
mov
jns
les
incb
stc
mov
lret
cmp
in
sbb
popf
mov
sub
jb
js
or
dec
inc
mov
pop
xor
enter
dec
in
test
pop
cmpl
mov
mov
and
mov
ss
mov
jl
clc
aad
jmp
inc
mov
sbb
xchg
rcll
inc
sub
dec
je
pop
loope
dec
clc
shr
jbe
adc
sar
mov
mov
inc
mov
les
mov
mov
adc
add
cmp
sub
mov
out
les
std
jbe
sbb
sahf
es
push
es
sub
test
sub
mov
insb
xchg
das
insl
mov
mov
stos
out
lret
push
or
adcb
inc
shl
out
fcmove
insl
mov
push
jmp
dec
test
and
xchg
shl
data16
imul
sub
test
pop
in
mov
dec
ret
sbb
scas
add
inc
mov
inc
sti
stos
push
pusha
divb
scas
adc
es
cmp
decl
mov
in
xchg
mov
rcrl
adc
arpl
inc
sti
push
mov
dec
pop
mov
xchg
cmp
inc
cmp
sub
jo
push
or
mov
movsb
cld
sub
ret
push
pop
cltd
adc
repnz
lret
xchg
cli
mov
inc
cmp
push
mov
sub
pop
mov
repnz
enter
xor
mov
sub
out
daa
and
add
xchg
ss
ror
or
jb
dec
ljmp
loope
push
jbe
test
xor
inc
pop
and
je
xchg
xor
addr16
mov
pop
sub
popa
add
daa
jmp
xor
lock
or
push
jae
dec
jl
xor
mov
nop
add
dec
aaa
rcr
xor
dec
mov
cs
and
jg
sbb
xchg
imul
add
mov
mov
ret
iret
or
cmpsl
sub
and
or
jo
push
mov
pop
mov
sbb
nop
lods
lret
es
dec
loop
and
dec
sub
fmull
jnp
dec
call
pop
loopne
inc
in
dec
clc
xor
fsub
xchg
pop
cmp
shlb
and
jb
sbb
outsl
int
sub
faddl
repnz
gs
sub
repnz
and
pop
data16
lea
and
call
rcr
sub
inc
mov
xchg
sub
sub
xchg
jmp
sbb
jl
push
shr
cmp
fsubrl
push
cmp
mov
aam
test
rcrb
jge
mov
pop
lret
test
popa
mov
mov
adc
ja
loop,pt
scas
push
inc
push
nop
jo
loop
sbb
fwait
push
inc
movsl
out
inc
add
inc
cmp
cli
cli
add
xchg
inc
or
xchg
fwait
or
popf
or
inc
hlt
sub
lsl
or
shrl
dec
jecxz
movl
jle
mov
or
sub
pop
add
out
lock
idivb
out
mov
sbbl
fdivrp
stos
das
xchg
ret
mov
sarb
sahf
jo
pop
gs
add
push
test
call
pop
int3
mulb
ds
mov
hlt
mov
int
push
jo
cmpsb
or
dec
addl
cmp
xor
int3
movsl
xlat
mov
cmp
mov
or
fisttpll
fs
xchg
adc
adc
inc
mov
into
outsl
lret
mov
and
add
xchg
cmp
mov
les
jb
adcl
inc
insl
test
fs
fisubrs
add
mov
int
jo
out
test
dec
fisubs
out
xchg
mov
adc
mov
jbe
xor
xor
jmp
ret
sub
cmc
add
loopne
dec
push
and
add
xor
ja
add
sbb
fldl
loopne
insb
pop
out
ret
mov
mov
cmp
into
test
mov
into
push
loop
cmp
add
cmp
xchg
popa
pop
shrl
pop
decl
fildl
or
push
ds
jle
stc
push
sbb
mov
sub
in
fcompl
pop
iret
lods
dec
notb
nop
cld
icebp
add
aaa
sub
popa
mov
jp
sbbb
mov
adc
je
add
push
enter
push
add
push
lea
xor
daa
jb
dec
dec
pushf
sub
nop
mov
jo
scas
xor
clc
jnp
inc
sbbl
insb
scas
pop
mov
xor
inc
fmuls
xchg
in
push
ss
adc
std
or
mov
mov
sub
cli
add
popa
outsl
out
inc
ja
outsb
gs
xor
inc
cmpsl
sub
dec
jns
pushl
adc
push
adc
mov
cmp
push
bound
mov
lret
xor
bound
lcall
sbb
scas
push
mov
mov
cmp
lock
jb
fildll
fistps
insb
in
mov
xchg
pop
ror
enter
xor
fisubs
sub
sbb
push
mov
or
inc
sbb
xor
fldt
cmpsl
sub
clc
outsl
movsb
fstp
mov
dec
lds
mov
adc
inc
sbb
xlat
mov
cwtl
cli
jmp
xchg
dec
sbb
loopne
push
mov
mov
lret
add
clc
in
cmp
or
popf
jo
js
addl
pop
xchg
xor
aaa
cmp
incb
xor
sahf
js
sub
cmpsb
pop
lret
adc
loop
xchg
or
pop
fmulp
pop
inc
push
dec
cmp
icebp
push
int3
lret
cmpb
or
nop
jns
push
in
or
lcall
pop
outsb
mov
cmpsb
in
enter
into
int3
popa
adcl
inc
mov
mov
nop
mov
cmp
aas
sbb
xchg
adc
jae
xor
sbb
les
mov
aaa
inc
sub
pop
popf
mov
mov
ljmp
mov
and
xchg
dec
leave
xor
push
push
add
mov
xchg
out
xchg
sahf
dec
mov
clc
aam
mov
clc
shrl
and
or
lock
pusha
cmp
mov
jne
and
push
rcr
in
popa
jno
rcrb
add
lods
int3
inc
pop
mov
inc
ret
ljmp
out
lret
push
and
loopne
or
and
mov
and
sub
jae
sub
or
sub
push
scas
inc
in
pop
mov
lahf
lds
ja
daa
je
dec
sub
imul
and
js
je
aas
stc
pushf
sub
cmp
loopne
in
jo
dec
inc
addr16
adc
test
imul
sub
bound
out
mov
push
fiaddl
xor
gs
shlb
add
jle
xor
sub
xchg
fs
sbb
sbb
imul
insb
cmpsb
inc
fistl
loopne
add
mov
fs
or
lea
and
rol
shrb
pop
cmp
cwtl
fwait
mov
bound
xchg
adc
gs
jb
cmp
cmp
add
jo
inc
sbb
addr16
jno
jecxz
push
add
adc
movsb
iret
or
in
sbb
adc
push
movsl
pop
mov
dec
xor
dec
push
stos
pop
mov
pop
mov
adc
lret
sub
xor
pop
sub
rol
sbb
xchg
rorl
jno
popa
inc
mov
imul
or
push
jge
inc
mov
pop
jo
fidivrl
scas
mov
out
or
push
testb
or
dec
das
jmp
faddl
mov
inc
int
aam
mov
mov
loop
test
aam
and
jle
sarb
cs
int
xlat
and
sti
int
imul
cld
jbe
mov
loopne
and
movsl
mov
cld
jl
mov
shl
icebp
add
das
pop
cltd
push
pop
inc
lds
push
or
repnz
xor
lcall
xchg
push
inc
out
ja
jae
sub
loope
pop
xor
icebp
xor
test
sbb
jae
roll
in
dec
rorb
fsubrs
sahf
int
jmp
cmpsb
xorl
in
ja
repz
mov
out
in
fwait
and
mov
jecxz
jle
das
and
mov
xor
pop
stos
popa
mov
das
xchg
lods
cmc
arpl
mov
jnp
jle
or
sbb
push
pusha
dec
aaa
lock
xor
mov
lds
cmp
xchg
xchg
aad
lea
xchg
xchg
jno
js
aad
jl
pop
mov
mov
xchg
inc
inc
rcrb
jp
cmp
pop
mov
pop
adc
call
neg
mov
cmp
repnz
shll
xor
loopne
leave
push
push
mov
lea
sub
outsb
scas
fsubrp
fidivrl
pop
lods
dec
mov
mov
sahf
mov
jmp
out
int
jle
fs
movsb
fbld
sub
mov
jns
xchg
xor
mov
fwait
inc
mov
mov
je
push
inc
cmp
popa
mov
pusha
aad
out
cs
jle
adc
sub
dec
adc
daa
dec
inc
repnz
push
out
dec
dec
movsb
pop
lock
popf
adcl
mov
sbb
ret
mov
ljmp
out
cltd
mov
lret
jmp
call
sub
das
xor
xchg
pushf
enter
mov
push
xor
pop
das
mov
out
xor
cmpsl
rcll
rcrb
mov
and
xchg
jb
mov
mov
pusha
fdivs
js
jle
orl
aam
adc
add
push
sbb
and
js
repz
pushf
inc
jle
mov
inc
dec
popa
in
das
aas
or
jg
dec
mov
ret
das
mov
xor
int
sbb
push
enter
sub
fwait
mov
sub
out
xlat
popf
popa
cmp
test
ret
jne
xor
out
enter
sbb
fadds
xchg
dec
inc
lcall
fstpl
lcall
xchg
add
cwtl
fcoml
mov
mov
mov
adc
mov
and
insl
test
sub
mov
andb
inc
xchg
mov
push
jb,pt
fcomps
out
xchg
dec
out
sbb
fsts
cmp
mov
cmp
arpl
mov
jb
push
xor
cmp
stos
jo
mov
xchg
fstpl
pop
stos
and
sbb
lahf
sub
pushf
add
fdiv
cmp
popl
mov
xor
movsl
pop
mov
xchg
mov
insb
dec
sti
or
insl
or
lds
push
fimuls
cmp
xchg
sub
pop
mov
push
or
inc
jae
sahf
dec
andl
es
inc
adcb
jmp
adc
xchg
mov
andb
imul
mov
ljmp
xchg
sbb
add
and
push
in
xchg
add
aam
jmp
sbb
or
nop
xchg
lods
movl
dec
sbbl
daa
mov
lahf
cltd
push
test
pusha
ret
and
xchg
dec
pop
push
rcrb
xor
mov
xchg
jl
popl
cmpsl
arpl
sub
arpl
mov
lock
lock
sbb
loop
andb
nop
add
jo
adc
fucomip
xor
cmp
std
roll
out
das
clc
mov
cmc
loope
imul
or
and
mov
jno
adc
mov
jne
nop
popf
sbb
rol
fistps
xor
push
fildll
int3
out
jbe
pop
push
sti
fs
pop
lret
mov
or
jl
lods
xor
fidivs
scas
outsl
cwtl
loope
dec
insb
sarb
adcl
cli
cli
sub
ljmp
cmpsl
mov
mov
inc
jae
cmp
mov
ss
gs
lods
fists
mov
ret
or
jg
adc
mov
dec
out
sub
mov
call
cltd
lea
jmp
mov
jnp
jecxz
xchg
and
subb
dec
jbe
mov
lahf
xlat
cmpsb
outsl
into
push
mov
das
xchg
shrb
repz
in
sub
adc
aaa
sub
or
adc
std
lods
jecxz
xchg
cmc
fimull
outsb
jnp
out
bound
push
jae
cmp
int3
shll
mov
cli
sub
cmp
lea
in
cwtl
movsl
sbb
aas
lret
ficompl
iret
cmc
sbb
cmp
ret
xchg
pop
xchg
cmp
jnp
or
les
flds
pop
cli
scas
mov
pop
adc
push
push
imul
ljmp
cmp
push
es
xchg
push
xor
fldcw
jns
cmp
arpl
mov
aam
aaa
xor
add
cmp
ret
in
pop
in
jge
sbb
cmpsb
ljmp
in
xchg
int
test
add
popf
outsb
mov
pop
push
push
dec
xchg
cmc
push
pop
push
sub
movsb
outsl
adc
data16
fbstp
or
js
daa
mov
bound
mov
dec
iret
xchg
inc
xchg
mov
jo
lods
xor
data16
fwait
sub
or
test
lods
mov
xchg
ds
into
adc
lcall
repnz
lds
out
adc
xlat
insb
and
jmp
inc
stc
xchg
mov
jecxz
les
xchg
aam
mov
lcall
out
test
sbb
fsub
data16
and
jbe
repnz
pop
cmp
loopne
int
or
or
ret
cmpl
outsb
lods
call
rcr
outsl
add
push
sbb
loopne
scas
es
fistps
mov
lods
mov
fidivrl
aam
shll
xchg
or
or
cli
add
xor
inc
mov
cmp
and
sti
or
neg
mov
bound
sbb
dec
ret
ret
int3
sarl
mov
cmp
ja
inc
push
lret
hlt
mov
sbb
testb
inc
mov
push
js
push
fstpt
pop
jns
dec
lods
sarl
loopne
scas
jmp
neg
les
xchg
icebp
bound
ja
sub
xchg
fstps
mov
loop
xchg
sub
jl
outsb
inc
push
ret
xor
jo
inc
mov
test
xchg
loope
popa
lret
dec
xor
ldmxcsr
fsubs
aaa
shrl
loop
nop
fadd
cli
jno
mov
or
or
daa
xlat
stos
in
push
subb
sbb
xor
push
pop
push
xchg
js
xor
sub
dec
rolb
test
adc
cmp
popa
lcall
or
test
mov
pop
inc
outsl
mov
incl
jecxz
jle
cmp
adc
or
pop
dec
imul
icebp
shlb
scas
xlat
sbb
jns
inc
mov
jo
xchg
aaa
fnstsw
ret
testl
int3
adc
adc
outsl
or
cmp
sbb
dec
pop
les
jne
or
or
jge
sbbb
out
adc
xorb
push
and
dec
pushf
call
xor
shrb
enter
sbb
xchg
stos
mov
lahf
lds
adc
div
mov
leave
pop
test
push
mov
stc
loop
pusha
push
bound
mov
jge
mov
insl
addr16
sbb
sub
ja
pop
idivb
stos
mov
clc
or
test
ret
dec
mov
xchg
pop
orl
inc
das
int3
xchg
mov
cld
sub
jle
popa
jb
aaa
mov
jns
or
sub
pop
jl
test
pushf
add
xorl
fildll
lcall
bound
call
popf
cmp
push
std
dec
add
cwtl
icebp
nop
sub
pop
cmpsb
mov
insb
in
sub
adc
int
scas
addl
pop
xchg
xchg
inc
pusha
insl
call
jnp
pop
loop
or
repz
aaa
fwait
inc
pushl
test
and
shl
decb
in
lcall
lods
dec
inc
jmp
ss
lahf
insb
es
mov
hlt
sub
je
mov
sahf
loopne
and
xchg
cmp
lret
mov
jecxz
jbe
dec
fwait
outsl
push
es
cmpsb
mov
lret
lea
test
jge
dec
dec
insl
div
cmp
xchg
jb
bound
dec
data16
sbb
in
loop
lcall
std
arpl
jno
arpl
xlat
mov
pushl
lock
inc
mov
adc
or
cld
fwait
mov
jno
mov
add
jl
fiaddl
ffree
cld
xchg
mov
push
inc
sbb
lahf
pop
or
and
xchg
or
mov
mov
out
popa
or
iret
dec
mov
imul
arpl
push
cld
cli
cmpl
adc
lret
loopne
ss
idivb
cmp
fadds
push
shr
mov
jg
xlat
std
jg
std
jb
pop
imul
xchg
xorl
insl
ja
xchg
push
xchg
les
jae
mov
jge
das
mov
ret
leave
pop
or
sbb
xchg
lcall
adc
pop
rcrl
or
cmpsl
push
js
lods
into
sbb
sub
in
add
popa
push
xchg
cli
xchg
sar
xor
insl
jl
pop
mov
movsl
mov
ss
lods
jb
lcall
cmp
and
jns
and
addr16
or
dec
xchg
call
fsubr
mov
imul
cmp
cmp
push
mov
mov
mov
insb
cmp
rcrb
addr16
sbb
mov
in
jl
jo
mov
stos
shrb
inc
ja
xchg
scas
aad
scas
sub
adc
fdivl
cmp
fnstsw
mov
sub
incb
push
sbb
sub
movsl
and
aam
lcall
fmul
stos
add
adc
movb
outsb
dec
cmpsl
dec
mov
mov
cmp
cmpsb
push
xchg
movsb
dec
push
js
out
add
sti
pop
adc
jno
jnp
lods
xor
mov
ja
rcrb
loopne
jo
xchg
sub
outsb
sbb
js
xchg
test
mov
xchg
mov
push
or
ret
jbe
stc
cmp
add
sbb
mov
inc
cwtl
pop
xchg
push
cld
arpl
xchg
push
sub
cltd
mov
dec
jne
pushf
or
push
xchg
cwtl
xlat
jns
das
jg
test
mov
stc
lret
xor
pushf
push
and
sbb
shll
movsl
fdivrl
roll
xchg
ss
push
jo
inc
add
jae
clc
adc
mov
and
mov
push
shl
idivb
hlt
mov
fwait
push
jno
push
sub
xchg
mov
push
pop
xchg
cwtl
fdivs
cltd
and
sub
xchg
pop
je
push
outsb
push
mov
jl
rorb
lret
movsb
nop
adc
xlat
ret
das
jb
popa
cmp
leave
push
adc
xlat
add
mov
loope
lds
clc
adc
xor
movsl
mov
in
data16
add
add
mov
mov
mov
aad
and
push
xchg
push
neg
push
sbb
lcall
je
adc
sub
fisubrl
loop
add
mov
push
cld
xor
das
insl
sti
pop
lcall
push
mov
mov
pop
dec
xlat
shl
xor
pop
dec
xchg
sar
mov
cmpsl
mov
lea
xchg
popf
push
cmp
gs
inc
or
xchg
dec
cmpsl
aam
fcmovnb
sbb
mov
pushf
or
rcrl
jp
imul
adc
sbb
popa
push
lret
adc
jae
xchg
jmp
mov
inc
nop
xlat
fbstp
mov
in
dec
lea
or
movsb
pushf
rorl
popf
mov
mov
xchg
inc
push
push
stc
sub
cmpsl
adc
shll
cltd
xlat
mov
push
push
add
pushf
lods
cmpsb
inc
cli
pop
add
popf
ret
ret
xchg
pop
aas
jo
inc
mov
push
mov
push
leave
jnp
stos
aas
jno
dec
jns
push
data16
pop
mov
and
call
inc
outsb
fwait
stc
cld
cmp
lahf
lods
fildll
push
push
add
sbb
clc
and
int
out
dec
or
inc
imul
fcoml
sub
test
loopne
mov
mov
dec
add
sbb
mov
clc
enter
mov
mov
push
scas
mov
sub
shl
mov
fst
repnz
dec
cld
dec
adc
fcmovb
out
pop
dec
pop
out
mov
and
cmpsl
xor
mov
mov
gs
loop
fs
dec
xor
xchg
jmp
dec
sub
lock
psllw
pop
mov
test
dec
adc
pop
push
add
lock
mov
sbb
xorl
popf
mov
dec
sbb
and
push
and
loopne
sub
loope
scas
dec
into
or
cmp
dec
add
ret
xor
sub
je
adc
mov
xor
popa
cmp
iret
cmp
push
call
adc
fidivrl
sti
mov
popf
lret
stc
or
scas
gs
mov
adc
rorb
sbb
push
lea
leave
mov
pop
jle
rcll
rorl
and
jno
adc
jno
mov
adc
aam
mov
fstps
push
push
sub
xchg
fdivr
mov
dec
cld
jae
lcall
xor
mov
call
test
jbe
out
cmpsb
xchg
mov
in
jmp
mov
in
stos
ds
cmp
movsl
jl
mov
sti
xchg
stc
sub
addr16
bt
popa
xchg
ret
rclb
js
or
inc
mov
sbb
xchg
dec
cwtl
je
scas
sbb
push
push
pand
pop
mov
popa
mov
inc
xor
js
leave
in
arpl
xor
cmp
push
int3
ss
mov
icebp
add
dec
fidivs
add
in
test
aaa
ret
push
add
jnp
aas
mov
sub
pop
xlat
dec
push
xor
mov
shll
mov
mov
add
fcompl
cwtl
cmp
sti
xor
js
pushf
push
xchg
ret
test
xor
and
inc
dec
push
xchg
or
mov
inc
pop
fdivrs
cmp
imull
movsb
mov
push
lret
inc
inc
dec
loop
cltd
push
in
and
pop
xchg
iret
xchg
cli
lsl
or
cmp
dec
mov
add
and
jl
add
add
ret
test
lock
cltd
inc
fwait
lds
inc
jl
mov
mov
sub
repz
rclb
push
inc
cltd
ja
adc
inc
sbb
lea
pushf
jle
rcrl
or
xchg
mov
mov
mov
add
mov
in
mov
sbb
stc
fiaddl
push
popa
dec
fwait
xlat
decb
sub
xchg
ds
rcrb
pop
sar
xor
and
cmc
xchg
ss
cmp
aas
stos
pusha
jl
or
fidivrl
jg
rcrl
mov
jmp
xor
jbe
xor
test
pop
cmp
xchg
and
in
or
aam
jae
inc
mov
fabs
push
in
in
out
cmpl
pushf
outsb
jle
dec
sbb
sbbb
fildl
test
jmp
push
or
iret
cmpsl
push
icebp
dec
ja
icebp
btr
push
jecxz
cmc
jnp
jecxz
mov
xchg
fdivs
nop
mov
mov
mov
lahf
and
jg
adc
add
ds
jmp
cmovno
push
jns
mov
cli
xchg
pop
xchg
jae
je
lea
popf
imul
jo
push
ja
xchg
cmp
dec
insb
mov
add
adc
in
data16
fs
fdiv
ds
shlb
aam
or
sbb
jmp
push
loope
outsb
xlat
mov
adc
xor
adc
mov
lods
push
pop
cwtl
mov
testb
or
test
pop
fcmove
into
push
pushf
enter
mov
mov
inc
std
jne
push
cli
cli
movsl
pop
jg
jnp
mov
cmpsl
mov
lret
cli
push
cmp
sbb
xlat
negl
sub
jl
ja
sbb
mov
rolb
jl
pop
adc
xchg
pop
xchg
cmp
add
cmp
lods
mov
insb
pushf
mov
xchg
jmp
push
sub
insl
sbb
int3
gs
xor
in
fsts
shlb
orb
inc
insl
pop
mov
cmp
fistpl
dec
js
push
pop
mov
xchg
xchg
insl
mov
data16
rcrb
push
mov
rorl
or
jne
adc
add
mov
ds
adc
repz
mov
or
sbb
jmp
cmpsb
stc
jne
icebp
xchg
ret
adc
push
dec
es
inc
mov
mov
ja
add
cli
adc
in
es
fwait
lds
iret
lcall
stos
jnp
dec
fsubrl
jae
mov
mov
ret
imul
sub
cmp
pop
ficomps
int
iret
sbb
pop
fistpll
mov
jns,pn
sbb
mov
stos
jg
push
or
mov
mov
out
push
aam
or
push
jmp
xchg
xor
js
push
roll
rcrl
fbstp
jmp
enter
lret
das
fwait
sub
and
sub
mov
decb
sub
cmp
fcmovbe
jg
inc
lock
add
mov
sbb
outsl
insl
pop
adc
pop
dec
test
inc
inc
cwtl
or
je
scas
push
or
add
std
pop
outsl
cmpsb
inc
popf
rcl
dec
mov
shlb
cmp
sub
and
fs
in
or
inc
aaa
jge
add
push
sbb
xchg
xchg
xor
roll
adc
dec
mov
inc
push
scas
fldenv
out
jecxz
mov
out
popf
pushf
add
das
fucomip
pop
dec
mov
cltd
or
imul
mov
xchg
jl
pop
fcoml
push
enter
cs
adc
pop
jg
xchg
sbb
sarl
dec
jecxz
cld
inc
cmp
ljmp
sub
cmp
es
xlat
push
xor
pop
clc
les
das
ss
into
in
out
or
pop
fimuls
aas
pop
inc
mov
mov
loope
into
mov
outsb
cmp
cmp
cs
pop
adc
cltd
sub
test
add
loop
mov
sbb
in
sti
add
loop
cs
daa
icebp
mov
sbb
or
fiaddl
fstpt
popl
mov
dec
or
fstpt
push
je
xchg
pop
add
das
pop
jns
mov
xor
sbb
push
leave
gs
xor
or
out
jns
rclb
mov
xchg
icebp
xchg
mov
pop
push
mov
xchg
sub
std
push
out
pushf
xor
mov
xchg
mov
adc
xchg
push
cmp
scas
mov
ljmp
xor
std
movsb
jp
cmp
pop
xchg
sub
cmc
push
mov
add
test
dec
in
adc
push
push
mov
shll
jo
cld
popf
addl
mov
sub
lret
sub
mov
shr
xchg
int3
je
jns
and
jae
daa
jbe
shlb
xchg
sbb
lcall
mov
ljmp
pushf
and
test
and
fchs
push
testb
inc
fidivrs
movsb
dec
pop
insl
push
popa
in
pop
int3
dec
sbb
scas
inc
lret
xor
xor
data16
jp
ljmp
sub
imul
inc
and
add
cmp
fisttpll
iret
push
test
xchg
popa
jge
test
fdivrs
daa
cmp
xor
mov
mov
popa
scas
inc
movsb
sub
test
leave
jb
mov
dec
xor
adc
scas
das
out
pop
gs
sbb
xchg
sti
insb
out
nop
fimull
pop
insl
xor
xchg
movsb
mov
in
sub
pushf
xor
in
mov
push
add
mov
vmread
or
data16
fisubs
push
push
sub
cmc
push
cmp
outsb
hlt
insb
in
xchg
movsl
iret
fldl
stos
in
or
lcall
rolb
ds
dec
push
in
add
in
mov
dec
rorb
jne
aaa
js
pop
pop
sahf
test
xor
fdiv
imul
dec
inc
adc
jge
cmpb
cld
mov
iret
loope
loopne
cmp
outsl
cmpsl
jg
xor
dec
push
int3
imul
outsl
and
ret
cmp
lock
into
jp
xchg
mov
xor
jne
rorb
xchg
jecxz
aam
mov
jl
sbb
sub
mov
push
mov
and
adc
and
stc
mov
and
and
rorb
je
aam
and
push
pop
pop
mov
push
fisttpll
mov
xor
mov
cwtl
out
mov
sbb
dec
add
lea
mov
int
mov
and
xchg
test
iret
mov
ficomps
je
andl
xchg
cmp
popa
mov
out
dec
cmpsl
loop
test
jmp
mov
sbb
sbb
jge
jp
jp
mov
inc
imul
test
lock
xchg
gs
cmp
dec
jae
cmpsw
fldt
cmp
or
stos
and
rolb
pop
fidivrl
or
xchg
add
jno
cmp
jne
xchg
and
inc
icebp
adc
aaa
xchg
aam
inc
inc
mov
push
jp
and
push
lods
pop
pop
inc
cwtl
hlt
sarl
mov
sets
mov
adc
ret
xor
enter
push
inc
sub
sub
out
daa
xchg
xchg
mov
sbb
and
shll
dec
xchg
lea
push
pop
les
lcall
or
and
aam
ficomps
hlt
es
test
cltd
js
cmp
xor
fwait
pop
and
mov
xrelease
or
rcrb
and
xor
pusha
ljmp
icebp
subb
lock
cmp
rolb
inc
xlat
adc
jl
mov
mov
int3
insb
nop
imul
dec
or
mov
ljmp
push
cmp
stos
jecxz
add
or
aam
jle
popa
and
or
cmp
clc
lock
stos
pop
les
aad
push
lock
push
mov
in
sarl
xchg
push
loope
test
sub
out
sbb
xlat
adc
enter
lods
xchg
push
in
andl
pop
cmpsl
shlb
xchg
es
mov
addb
cmc
xchg
shlb
aad
add
cmpb
mov
mov
sub
sub
outsb
insb
cwtl
mov
int
mov
jo
mov
jge
repnz
subb
mov
cmpsb
sub
cmp
lods
sub
pop
or
data16
add
lds
mov
push
xor
mov
push
loopne
inc
and
cmc
xchg
and
aas
sbb
lods
lea
xchg
push
lret
in
xchg
js
adc
int
sbb
push
rcll
cltd
mov
jbe
scas
icebp
mov
xchg
xchg
filds
int3
std
xchg
cmp
aas
arpl
in
int
cmc
das
and
adc
insl
scas
hlt
mov
sub
add
and
jmp
inc
jno
fcoms
push
test
jo
mov
ds
int3
and
cmp
cmc
adc
mov
fimuls
and
push
inc
xor
inc
out
sub
fistpl
cmp
mov
rorb
mov
jno
jns
xlat
rcrb
mov
cmc
mov
add
fcomps
insl
mov
cmp
mov
and
mov
mov
mov
xor
mov
cli
pop
push
cmp
sbb
inc
imul
inc
sbb
inc
pusha
arpl
cmp
outsb
mov
cmpsl
lods
sub
out
add
ror
icebp
sti
mov
aad
scas
mov
inc
rorl
cmp
loop
cmp
jecxz
sbb
and
and
cmp
cltd
sub
xor
mov
inc
stos
into
test
push
fcoml
adc
inc
mov
inc
fmul
dec
add
movsl
sbb
dec
movsl
jecxz
frstor
mov
stos
cmpsb
ds
je
scas
jb
orb
xchg
xor
adc
inc
outsl
cwtl
ljmp
dec
push
imul
xchg
mov
pop
dec
cs
and
and
jns
sub
loopne
call
xchg
faddp
mov
arpl
jns
test
pop
push
addr16
mov
lods
icebp
cmp
in
dec
mov
jns
cltd
ja
ds
xor
dec
inc
in
jl
fwait
jecxz
scas
aas
pop
pushf
fsubr
mov
scas
stos
cmc
cmp
adc
mov
mov
fwait
das
cmp
jbe
mov
inc
cld
sub
dec
sub
add
stc
cmp
cltd
pop
inc
inc
int3
leave
mov
leave
or
xor
rorl
sbb
dec
jbe
sbb
cmp
pop
jmp
and
icebp
test
xor
inc
lret
pop
inc
outsl
inc
push
icebp
repnz
and
ret
dec
sbbl
fmuls
xor
std
dec
adc
cmp
mov
sub
gs
dec
add
mov
sbb
ret
fwait
mov
stos
lahf
pop
push
enter
jmp
popf
int
cli
lahf
int
lahf
push
xchg
cwtl
les
arpl
loopne
adc
mulb
jmp
fsts
mov
stc
into
mull
fisubrs
mov
enter
xchg
cmp
mov
add
mov
push
sub
sbb
jle
lcall
outsl
lods
into
ficoml
in
iret
lods
in
lds
cmpb
lea
mov
stc
add
mov
mov
and
xlat
lods
inc
adc
pop
mov
sahf
cli
xor
cmp
xorl
inc
outsb
jg
cmp
in
in
sbb
cmp
xchg
lret
stc
and
repz
call
pop
lds
cmp
jmp
nop
scas
repnz
test
imul
inc
sbb
call
fnstcw
ljmp
jae
dec
into
out
arpl
cmp
pop
mov
push
mov
aam
or
lods
popf
aas
cmpsl
adc
lods
enter
adc
mov
xchg
out
sbb
je
sub
jb
in
mov
stos
subl
adc
cmp
and
movsb
mov
cmp
inc
in
or
add
mov
mov
jle
jbe
repnz
cmpsl
in
xor
adc
push
xchg
ss
js
hlt
fstps
aaa
out
test
hlt
cwtl
push
cmp
nop
mov
lret
fwait
mov
push
cmp
jno
outsl
lret
mov
jno
or
mov
xchg
mov
dec
dec
pop
hlt
push
mov
jl
rcrb
or
xor
loopne
push
sub
or
cmp
mov
mov
inc
sub
xchg
xor
push
adc
or
pop
dec
or
adc
lds
mov
add
gs
mov
or
sbb
and
adc
mov
lods
push
mov
sub
and
mov
loope
daa
xor
or
push
std
addl
sahf
xchg
jbe
cmp
lcall
aaa
mov
insb
add
jno
in
sbb
dec
in
sti
mov
test
sub
int3
aam
xor
addl
push
lods
shl
loope
aas
daa
adc
fisubl
pushf
mov
clc
mov
push
popf
mov
mov
shrb
lods
dec
xchg
lcall
loop
jns
cltd
and
repz
jmp
insl
ljmp
cld
xor
jo
mov
mov
and
cmp
mov
repz
sbb
ljmp
add
insl
or
daa
xchg
jae
jecxz
aaa
test
dec
and
adc
mov
adc
cmp
sti
std
pushf
jp
cmp
dec
mov
and
call
loopne
push
cmpsb
jle
fisubrl
in
dec
enter
in
inc
adc
testb
jg
jp
add
sbb
sbb
jecxz
and
cli
rcl
sarl
push
mov
inc
fcoms
pusha
jl
add
xor
add
insb
add
ljmp
iret
insl
push
jmp
or
imull
xor
mov
sti
mov
push
xor
in
ret
lock
add
and
sub
ret
cmp
mov
pop
mov
les
sbb
mov
pop
iret
jmp
push
inc
test
mov
icebp
and
pop
mov
dec
mov
ss
aaa
dec
dec
dec
pop
or
cltd
or
test
test
inc
sbb
lods
icebp
and
fs
icebp
enter
or
imul
mov
scas
mov
outsl
test
push
push
push
stc
sub
xor
sub
add
jae
ss
pop
clc
fs
adc
add
jle
cli
popf
push
clc
leave
fbstp
inc
xchg
and
jns
fists
into
call
inc
es
sub
mov
stos
aas
adc
xchg
test
loop
sarb
mov
and
mov
cli
in
insl
lahf
xchg
cmpsb
xchg
daa
int
xor
ss
cltd
lahf
lods
test
cltd
call
sbb
push
pushf
add
jg
cmpsb
add
cmp
je
xchg
cmc
mov
dec
push
jo
cmpsb
adc
aam
sbb
faddl
popf
rcrl
push
sub
call
inc
ret
nop
jne
inc
xchg
fwait
and
cmp
mov
push
lods
ljmp
cld
fcomps
mov
push
push
or
insl
fistpl
out
xlat
xchg
jae
xchg
mov
sbb
fnstcw
push
jg
adc
shr
sub
fs
mov
and
mov
repz
pop
cmp
sahf
sbb
stos
arpl
add
push
sub
push
or
scas
dec
fwait
or
mov
scas
jp
addl
or
stos
mov
out
adc
sbb
add
hlt
rolb
and
test
frstor
cwtl
lds
xor
js
push
hlt
xchg
xor
jg
sub
jnp
hlt
lds
dec
adc
imul
mov
int
cmp
filds
mov
xor
insl
sub
insb
das
sbb
ds
push
lcall
mov
dec
inc
adc
leave
push
mov
stos
cmp
and
cwtl
dec
sbb
mov
cmp
xor
out
jno
mov
cmpsl
cmp
push
lret
lcall
push
sub
negl
out
adc
add
adc
jecxz
pop
push
insl
xor
iretw
cmp
push
mov
lret
ja
aam
fsubr
pop
mov
rcr
fisttpl
adc
inc
jge
mov
out
inc
subl
mov
jne
xchg
xchg
push
rcrl
and
add
push
loop
sbb
push
psubsb
pusha
repnz
xchg
dec
lahf
push
mov
cwtl
mov
fwait
dec
mov
in
jo
mov
jo
jge
outsb
add
lcall
adc
and
add
xor
movsl
add
jb
xchg
push
sub
jmp
lods
sbb
push
cltd
pusha
jle
sub
loopne
pop
cmovns
stos
out
clc
stos
into
adc
inc
scas
cmp
or
int3
ret
lret
jo
inc
push
fstl
inc
mov
pop
jns
faddl
adc
cmpsl
stos
xor
lahf
icebp
ja
mov
and
movsl
int3
dec
lcall
out
pop
sbb
imul
loop
int
es
jns
mov
stc
in
repnz
jge
aam
movsb
rcl
dec
dec
cs
setg
dec
cmpsb
mov
mov
loope
mov
in
push
lods
mov
dec
sbb
jnp
jle
jo
pop
sti
pop
dec
je
jnp
stos
jb
inc
xchg
in
pop
out
in
mov
pop
call
add
scas
dec
jne
aad
shr
arpl
xchg
dec
mov
repnz
lods
mov
xor
add
xor
mov
out
rorl
dec
xchg
clc
sbbb
jp
mov
mov
out
arpl
test
adc
fstpt
mov
nop
push
clc
pop
les
push
lret
ret
into
push
sbb
jns
mov
mov
fadds
inc
sbb
pop
dec
dec
call
scas
xchg
sub
testl
sbb
add
pop
out
mov
shlb
das
add
stc
xchg
adcb
orl
cmp
test
lret
movsb
add
aam
inc
nop
test
subl
sub
xchg
in
push
inc
push
sub
xchg
jl
pop
cmp
ret
ret
imul
jns
into
push
inc
out
imul
pusha
outsl
enter
dec
jl
mov
jnp
and
clc
and
mov
icebp
mov
jo
jmp
ret
cmp
xorl
push
test
inc
cs
lahf
xor
mov
xchg
mov
shrl
xor
push
sub
adc
cmp
xchg
test
negl
sahf
cmpsb
push
loope
pop
lock
pop
cli
pop
xor
jp
repnz
jmp
ljmp
add
xchg
sahf
push
push
mov
ds
push
pop
mov
nop
sbb
mov
ds
sub
adc
pop
stos
gs
std
sarl
cmp
cmp
push
pop
mov
cmpsb
sbb
call
call
in
or
in
out
das
jmp
or
mov
scas
sti
xchg
xchg
clc
pop
or
inc
cmpsb
jnp
xchg
insb
xor
mov
push
aas
pop
or
mov
out
xorb
xchg
inc
bound
push
pop
adc
dec
dec
cmpsb
and
in
xor
call
sbb
adc
xchg
es
aaa
mov
fnstcw
stc
xlat
inc
xor
inc
add
stos
add
int3
xchg
or
dec
sti
sub
insl
hlt
es
ljmp
sahf
cmp
mov
sub
or
push
pop
push
mov
cmp
jl
sub
lahf
dec
push
addr16
pop
out
lea
jno
out
ret
dec
outsl
std
fsubr
arpl
dec
and
xlat
dec
inc
sub
and
xchg
shr
sub
jb
mov
lret
cld
out
test
iret
test
sub
pop
jecxz
das
shll
ret
je
adc
testb
jle
cltd
decb
sbbl
cmp
clc
mov
in
pop
pop
sub
pop
dec
xor
lcall
and
sub
mov
into
xor
pop
fidivs
inc
add
ljmp
xor
fidivrs
fdivrp
movsl
adc
test
rcll
nop
lock
xchg
push
and
xchg
cmc
enter
and
icebp
mov
ja
icebp
sbb
adc
mov
popf
sub
jmp
push
fnstenv
push
or
into
adc
cli
imul
mov
adc
sub
jb
fdiv
scas
gs
leave
into
dec
outsl
mov
pop
fists
popa
stos
xchg
scas
stc
repz
call
add
push
out
dec
shlb
aad
sbb
movsl
pop
sub
aam
and
inc
lret
daa
mov
ret
mov
cli
sti
mov
jmp
pop
inc
inc
pop
mov
mov
lds
popf
mov
movsl
pop
loopne
and
out
pushf
mov
xchg
lds
inc
out
sub
sahf
push
push
incl
arpl
push
shll
stos
mov
mov
clc
imul
imul
cbtw
outsl
subl
mov
pop
dec
jmp
insb
and
push
and
lahf
pop
mov
mov
out
lea
pop
ftst
xchg
int
in
pushf
in
or
rcll
mov
cmp
inc
inc
hlt
push
stc
inc
sbb
push
repz
push
sti
ffreep
fcmovnb
cmpsl
scas
mov
mov
jmp
jmp
fs
pop
dec
inc
xor
loop
sub
fidivrl
dec
pop
adc
cmpsb
xchg
lock
xchg
mov
and
mov
xchg
and
mov
outsl
sbb
mov
shlb
ljmp
in
pushf
ja
sub
fistl
and
push
gs
outsb
sub
mov
cmp
add
out
ljmp
xor
or
lds
shl
sub
orb
aas
xchg
je
xchg
pop
out
scas
push
lret
das
or
jb
add
push
lcall
cmp
incb
ret
fmull
xchg
or
popf
jmp
shrb
enter
popf
or
test
mov
sub
push
pop
outsl
fisubrl
add
jle
push
fsubrs
fsts
outsb
aad
cmp
imul
in
ficompl
mov
dec
popa
jl
cmp
fldenv
les
je
add
sar
mov
scas
xor
jno
pusha
mov
lret
inc
bound
fidivs
mov
into
push
xchg
adc
in
lock
cmp
add
iret
cmpxchg
pop
pop
and
imul
repz
aas
jp
cli
pop
pop
ret
push
out
push
jmp
push
mov
mov
scas
aaa
rclb
mull
loopne
jle
jecxz
test
test
insb
adc
rcr
mov
movsb
jmp
pop
or
into
sbb
xor
out
sub
cmp
push
jp
pop
mov
and
jno
jnp
mov
mov
push
mov
mov
stos
push
scas
sbb
popa
loop
xchg
outsl
cmp
cltd
lock
jnp
mov
lods
inc
cmp
daa
outsb
mov
loop
cmpsb
mov
cli
out
nop
scas
sub
sti
sbb
and
fcomp
mov
sbb
test
ss
xchg
and
test
fnstcw
and
jmp
push
and
jns
cwtl
test
addr16
js
fadd
xor
push
stos
mov
inc
mov
mov
push
push
adc
xorl
outsb
orb
xor
paddusw
add
cmp
or
stos
daa
test
stos
or
inc
xchg
sub
dec
mov
fldenv
inc
pop
movsb
movsl
fsubr
add
cs
sahf
cmp
dec
fstpt
ret
add
sbbl
inc
jmp
xchg
fstpl
jge
outsb
adc
adc
js
and
fidivrs
shrl
stos
xorb
pop
mulb
cmp
leave
arpl
mov
mov
jge
pop
push
ss
mov
mov
sbb
rorl
cmpsb
mov
lea
xchg
jge
cmp
in
and
xchg
and
add
inc
mov
mov
out
mov
loope
repnz
cmp
sub
xchg
repnz
add
popl
lods
rcll
loop
fucom
mov
in
in
insb
push
jg
mov
sbb
dec
fwait
out
push
dec
sbb
mov
xor
neg
enter
or
mov
repnz
mov
fcoml
sub
xchg
jno
add
lock
scas
cmp
mov
scas
xchg
and
push
cli
mov
cmp
in
push
sti
jl
arpl
mov
sbb
repnz
push
ret
cwtl
push
mov
pop
gs
sub
or
xchg
clc
pop
add
mov
ss
test
xchg
xchg
js,pn
rclb
sub
sarb
outsb
stos
mov
rcll
push
pop
inc
stos
std
xchg
mov
xlat
mov
daa
sbb
cwtl
mov
add
adc
or
and
loopne
pusha
jo
mov
sbb
popa
lds
sbb
push
movups
sbb
es
mov
pushf
jl
or
out
ret
das
iret
jp
push
push
pop
cld
xchg
imul
pushf
mov
mov
mov
sub
mov
xor
cld
cmpl
jg
dec
xor
stos
ja
mov
push
sbb
xor
jne
push
lds
sbb
inc
cmp
add
and
cmp
pop
outsl
sarb
cmp
jno
sub
lcall
xchg
xchg
inc
mov
loopne
lods
cld
sub
negl
mov
aas
test
outsb
daa
js
add
jnp
fsubrl
mov
push
mov
lret
sbb
je
mov
addl
pop
jno
pop
xchg
shl
xor
ja
lods
lods
xchg
and
sbb
pop
sbb
push
mov
test
sar
je
sbb
movsb
xchg
push
out
push
loope
mov
outsb
push
inc
push
xor
cmpsb
jle
in
fisubrs
mov
test
cmp
sarl
hlt
int
repnz
popf
sub
hlt
bound
inc
adc
nop
sbb
fbld
test
cmp
std
xchg
int3
push
fsubrl
mov
pop
sbb
add
mov
shrl
cwtl
xor
cmp
cmpsb
xchg
adc
jno
outsl
sbb
xor
jb
fisttpll
or
fisttpl
push
lods
push
mov
xor
xchg
mov
xor
ja
in
mov
icebp
aam
adc
lret
xor
out
shlb
add
mov
ficoms
mov
pop
stos
pushf
push
fcomp
xchg
in
loope
je
xchg
fisttps
cmpsl
cltd
sub
arpl
push
pop
push
subl
stos
movsl
adc
scas
pop
clc
xchg
fcomps
nop
jb
mov
adc
push
jbe
in
mov
mov
outsl
jnp
arpl
enter
sub
imul
in
mov
leave
clc
cmc
aaa
aad
stos
inc
push
dec
ret
cmp
mov
data16
insb
sbb
jmp
aad
add
and
push
mov
dec
inc
lds
pop
pop
or
daa
das
movsb
enter
pop
mov
dec
mov
out
push
clc
das
ss
adc
and
setno
testl
pop
pop
lea
test
sbb
push
xchg
int3
inc
push
rorl
aaa
push
mov
push
jmp
push
lea
pushl
nop
or
dec
xlat
sbb
in
ret
sub
sahf
leave
mov
aas
pop
movsb
mov
test
fstps
pop
shrl
test
or
ljmp
pop
cmp
or
outsl
xorl
mov
das
leave
mov
inc
jns
xor
outsb
scas
lahf
aaa
in
push
cld
push
arpl
xchg
inc
aam
movsb
pop
test
dec
into
movsl
xchg
cmpsl
or
sub
test
ds
inc
das
pop
sbb
xorl
adc
adc
es
shl
aaa
dec
cmp
sub
lret
jae
sti
dec
in
rcll
dec
mov
xchg
mov
adc
mov
loop
xlat
xor
fcompl
xchg
inc
fsubrl
jle
jle
pop
hlt
mov
rcll
add
jl
rorl
mov
outsb
sbb
xchg
xor
jmp
pushf
pop
fsts
dec
cmp
inc
add
ret
ds
mov
insb
jp
and
add
jne
ja
in
add
jp
push
in
fcomp
mov
push
adc
enter
mov
mov
ret
sub
xchg
out
push
in
cli
and
fidivrl
or
gs
mov
lahf
jns,pn
jno
xor
cmp
std
adc
inc
add
xchg
pop
loop
mov
es
hlt
mov
fcmovnbe
sahf
ljmp
imulb
add
sbb
mov
cmp
jecxz
mov
sbb
mov
clc
inc
cmp
cmp
cmp
cmc
lret
shlb
adc
mov
adc
out
mov
outsl
cmp
test
adc
aaa
push
fldl
xor
movsl
aaa
push
inc
sbb
and
std
add
fucomp
and
inc
jmp
cmc
mull
push
and
xchg
xor
mov
mov
xchg
das
std
decb
jl
jnp
sub
lahf
or
fcompl
inc
sub
xchg
mov
xchg
push
inc
xchg
int
jbe
inc
dec
aam
mov
push
inc
xor
mov
out
and
push
popa
outsl
xor
shll
or
pushf
hlt
push
adc
fiadds
adc
sub
enter
cmp
std
sarb
push
mov
in
or
push
adc
and
jbe
push
jae
push
stc
inc
jne
lds
mov
jle
leave
and
pop
and
lods
addb
mov
cltd
push
pop
pop
cmpl
bound
lcall
jae
loope
es
add
hlt
bound
mov
ret
mov
call
mov
test
loop
gs
sub
sub
mov
sub
daa
pushf
fcmovb
inc
mov
pop
jmp
das
cltd
pop
fisubrs
lods
cwtl
add
adc
sbb
ret
fs
imul
add
xchg
add
ljmp
and
inc
or
repnz
rclb
and
loop
or
mov
jmp
jns
sub
ss
hlt
data16
xchg
inc
and
xchg
out
mov
movsb
adc
mov
lret
movsb
stc
int
pop
jle
fs
mov
sub
jg
fdivrs
rcl
inc
insl
adc
lret
into
ret
jg
dec
pop
shrb
mov
pusha
dec
inc
adc
pop
cmpsl
clc
pop
mov
cmpsb
scas
and
jg
lahf
sarl
je
jb
fnsave
dec
sub
xor
ret
inc
add
aam
ds
add
dec
or
xchg
push
xlat
add
sbb
cmp
and
cs
dec
jno
sbb
inc
inc
stc
rclb
sbb
xor
mov
push
mov
ja
jbe
xchg
in
xor
mov
push
neg
or
jbe
pop
inc
fildll
adc
mov
and
or
mov
inc
mov
fs
mov
fcomip
pop
cs
arpl
xchg
sbb
aas
lea
mov
push
out
adc
and
out
xor
add
jge
mov
movsb
jecxz
ret
scas
dec
and
shrb
in
out
push
xor
and
lahf
and
or
aas
xchg
jge
inc
insb
fstpl
sub
xchg
loope
packuswb
pop
sub
test
sbb
dec
fbld
xchg
jp
aad
mov
xchg
sub
and
pop
sub
outsl
ja
mov
pop
mov
jecxz
or
stos
out
add
cmpsl
push
mov
lods
and
sbb
jo
jecxz
lahf
and
push
imul
mov
jecxz
lods
rorb
push
fdivrs
xchg
fiaddl
xchg
mov
sbb
cmc
subl
mov
aas
daa
add
fs
xor
test
cmp
sbb
jl
cmp
mov
mov
push
in
push
dec
outsb
xchg
movntps
mov
jecxz
xchg
mov
lock
fldcw
mov
hlt
jbe
or
pop
inc
jecxz
xor
and
movsb
add
fmull
js
adc
ljmp
inc
sti
mov
mov
cmp
and
imul
add
rorl
sub
outsl
cmp
gs
push
mov
test
iret
pop
push
enter
pop
add
jle
enter
adc
mov
dec
push
inc
jg
cmpsb
and
sbbl
cmp
xchg
pop
lret
stos
lods
jge
pop
inc
mov
or
inc
jle
push
cmpsl
sbb
and
addl
or
pop
inc
xor
cli
cmpsl
jg
jecxz
jg
cmp
xor
aaa
lahf
cs
stos
jg
push
pop
sbb
add
mov
lods
testl
xchg
je
push
mov
adc
insl
ffree
add
and
or
aaa
mov
stos
dec
jnp
shlb
fldenv
add
add
cld
scas
adc
lods
or
xchg
jno
ljmp
lock
push
out
jp
mov
mov
xchg
push
mov
inc
rclb
pop
sahf
or
add
mov
jbe
adc
test
push
mov
push
sbb
repz
in
jns
in
ljmp
sbb
add
jge
mov
dec
jge
pop
xchg
sbb
shl
and
mov
sbb
aaa
std
scas
cmpsb
outsb
insl
ret
push
js
shl
scas
inc
pop
adc
add
test
in
pop
outsb
hlt
out
popa
sarb
arpl
scas
add
clc
xor
aas
into
mov
enter
or
mov
push
xchg
sbb
or
pop
shlb
fxch
push
adc
lcall
imul
mov
aam
jo
cmp
mov
fnsave
mov
das
xor
cmpsb
add
call
out
and
add
into
mov
jne
jle
sub
fisubrl
rclb
inc
mov
dec
push
out
cmpl
xchg
jmp
push
jecxz
sub
stos
jo
ret
aaa
pop
out
pop
daa
gs
scas
je
cli
ljmp
adc
inc
aam
mov
cwtl
mov
idivl
lods
aas
inc
mov
cmpb
mov
xor
mov
mov
xor
dec
lret
outsl
inc
int
and
jns
jo
sub
adc
mov
adc
imul
cmp
sub
mov
ss
fwait
and
ljmp
push
pop
cmc
mov
push
rcll
sub
jo
push
negl
pop
pop
cwtl
sbb
jae
push
inc
lret
adcl
das
pop
sbb
dec
and
das
jl
aad
push
loope
push
inc
mov
sbb
cwtl
scas
gs
jae
pop
paddb
pusha
lods
insb
add
xchg
add
repz
aam
enter
lahf
xor
mov
push
push
xchg
das
adc
jp
popa
stos
movsb
sti
jge
inc
cmp
movsb
lds
add
xchg
fcompl
fists
and
addr16
loopne
or
mov
xchg
cmp
outsl
in
mov
clc
sarl
insl
mov
jno
aam
xor
and
lahf
repz
int3
or
orps
inc
adc
bound
cmp
sbb
test
add
inc
aam
movsl
mov
and
jns
stos
xor
jl
xchg
out
jo
push
dec
shlb
gs
jne
mov
aas
xchg
shrb
mov
jmp
push
sbb
mov
lds
cmp
pop
decl
cs
movsl
loop
popf
sub
int3
mov
push
or
ja
stc
nop
cmpsl
dec
or
insl
or
sahf
push
mov
jnp
push
and
dec
inc
inc
ret
lods
cmp
ja
push
push
jno
lret
fs
add
mov
cli
xor
fwait
jb,pt
push
and
or
testl
andb
sbbb
scas
std
sbb
pop
int3
cmc
sahf
xchg
sub
jnp
dec
cmpsl
dec
fbld
xor
mov
in
push
fisubl
sub
adc
loop
sahf
mov
sub
in
fidivrl
iret
or
fbstp
mov
bound
adc
add
mov
add
jns
loopne
ja
inc
inc
or
mov
loopne
sbb
mov
into
pop
push
xchg
inc
jne
pop
xchg
mov
clc
bound
sbb
push
fisubs
imul
gs
sbb
and
xor
adc
pop
hlt
pop
jmp
sbb
adc
add
cli
iret
sbb
dec
in
lret
into
sub
inc
bnd
adc
or
testl
stos
ret
xor
lcall
jmp
add
sub
test
add
sub
mov
leave
xchg
mov
jne
fstps
and
xor
lods
ffree
scas
insl
jmp
mov
mov
outsl
lret
sub
pop
aad
adc
mov
test
lods
jne
sbb
std
nop
and
sbb
jge
sbb
sub
ljmp
jmp
gs
or
add
subl
and
dec
leave
cmp
push
push
nop
movsb
pop
push
xor
xor
sti
or
xor
hlt
repnz
cmp
loop
sub
out
pop
and
jbe
out
imul
jno
adc
cld
xchg
mov
loopne
in
adc
loopne
mov
cmp
add
int
jg
repnz
pop
dec
push
enter
or
xchg
aam
leave
mov
cmpsb
push
in
xor
loop
sub
mov
lds
jb
bound
add
add
dec
mov
into
jne
cmp
mov
sbb
push
jg
mov
ds
popa
int3
out
add
imul
loope
jnp
std
xor
xor
adc
xchg
pop
xlat
shll
call
jae
call
call
mov
adc
test
pop
push
aaa
movsl
mov
adcb
pop
es
insl
pop
adc
xchg
in
adc
mov
pusha
push
stos
pop
out
movsb
mov
fdiv
xor
cmpsb
imul
jge
aaa
mov
ljmp
hlt
ljmp
xor
pop
jb
dec
xchg
mov
and
jg
enter
popa
mov
ret
add
and
lea
inc
andb
sbb
out
xor
jno
mov
or
sti
out
ret
outsl
faddl
push
movsl
je
clc
inc
jo
xchg
mov
pushf
xchg
popa
cld
mov
inc
xor
sub
dec
xor
dec
lock
sbb
pop
dec
xchg
idiv
push
and
mov
push
or
stos
jecxz
data16
outsl
pusha
mov
ljmp
in
xor
pop
jg
push
sti
xchg
int
setae
cmpl
pop
xchg
insb
mov
sub
jbe
scas
mov
stc
mov
jb
test
sar
inc
fists
dec
sti
minps
mov
idiv
pop
pop
inc
cmpsb
push
sub
cmp
pop
pop
dec
push
push
xchg
test
lcall
enter
mov
ds
bound
sbb
jae
std
jb
ljmp
lock
cmc
stos
ljmp
leave
movsl
xorl
mov
inc
insl
pop
push
daa
push
inc
dec
inc
xchg
jmp
stos
sbb
cwtl
mov
xlat
xchg
mov
rolb
adc
out
insl
aas
nop
ja
out
lods
inc
and
jne
push
js
clc
out
and
std
cs
xor
mov
xchg
sub
add
fdivr
popa
inc
mov
sub
and
push
fcmovb
fs
aam
or
ja
loope
cmp
mov
es
es
ljmp
and
mov
and
inc
enter
sub
outsb
or
xlat
and
das
jo
mov
icebp
hlt
lret
shrb
dec
push
xsavec
movsl
icebp
sub
leave
outsl
dec
mov
xchg
xlat
decl
hlt
cmp
and
xor
lods
mov
mov
xor
ret
cltd
adc
xor
ret
cwtl
out
dec
xchg
and
cmpl
push
inc
pop
test
dec
mov
and
cltd
pop
test
sub
xchg
and
xchg
lods
lahf
and
aad
adc
mov
and
mov
jle
leave
sub
lcall
lret
fstps
or
push
lods
ret
insl
jne
xchg
int3
les
mov
pop
jae
sub
fcmovb
sarb
ja
lret
cmp
or
sub
out
push
ss
dec
rcrl
mov
popf
mov
aam
dec
out
repz
mov
jae
jge
xchg
fwait
lock
imulb
std
lds
lods
rcll
cld
inc
inc
or
or
sbb
shrl
cmp
xchg
call
pop
or
jmp
push
xchg
pop
out
test
rcll
arpl
cmp
test
shrl
fcmove
sahf
icebp
ss
mov
movsb
fimuls
sahf
sbb
adc
fcom
push
push
fdivl
stos
xlat
pop
dec
pusha
aaa
mov
loop
dec
xor
insl
mov
mov
bound
sbb
jecxz,pn
out
in
adc
pushf
fsub
cs
xor
test
dec
cmpsb
xchg
mov
test
repz
loope
inc
jb
fmull
sub
adc
rcl
icebp
sub
shrl
xor
push
movsl
cli
dec
or
int
xchg
outsb
lock
in
jns
cmp
lods
pop
inc
out
imul
mov
es
out
out
adc
pop
xor
xchg
out
mov
pushf
sbb
mov
fbld
sub
stc
inc
mov
mov
inc
push
lods
lds
pop
sub
xchg
cwtl
lods
sahf
lock
mov
sahf
adc
dec
mov
scas
fstps
mov
out
adc
and
add
iret
sti
inc
xchg
jl
fchs
adc
xchg
jmp
inc
lret
loop
shl
inc
lahf
add
dec
hlt
jge
paddd
lret
cltd
jg
int
enter
mov
jo
sub
sarl
sub
sub
lods
aas
aad
ds
push
mov
xor
repz
inc
ret
xchg
cmp
xchg
mov
lcall
icebp
enter
out
mov
push
xor
pop
or
loope
mov
lods
out
jp
ret
mov
es
popf
stos
adc
insl
int
sub
cmp
cmp
neg
ret
cmp
ljmp
mov
cli
insb
push
pop
in
jle
sub
sbb
dec
pop
add
aas
sbb
xchg
leave
and
and
das
in
dec
dec
daa
fsave
fisttpl
sub
je
addr16
test
daa
in
into
or
pop
inc
outsb
mov
shlb
dec
fdiv
test
sti
dec
fsub
sbb
inc
mov
mov
test
sub
scas
xor
int3
sbbl
fstl
int3
pop
xor
xor
cmp
sbb
push
inc
rorl
pop
dec
pop
adc
iret
ss
cltd
aad
mov
movl
dec
push
fcomp
or
jbe
nop
gs
jo
xor
add
and
lcall
ja
pop
jecxz
xor
test
mov
js
pop
bound
mov
pusha
lock
ss
sbbb
xchg
and
cmpsl
cmp
popf
jo
out
jnp
dec
iret
jmp
test
ret
test
pop
jg
cmp
jbe
repz
cmc
pop
adc
out
cmp
movsb
ljmp
or
lahf
and
lret
clc
pop
sahf
test
xchg
jne
je
mov
shrl
xchg
shr
in
shl
pop
lods
inc
or
out
cmp
jmp
xor
das
repz
adc
sbb
pop
push
cmc
aaa
or
jle
shr
scas
xor
jl
xchg
ret
push
adcl
dec
loope
bound
sarl
xor
addl
ds
sub
or
loopne
xor
inc
std
int3
popf
sbb
addr16
add
push
cmpsl
test
push
sub
xchg
jno
xchg
jg
push
jmp
mov
fdivp
mov
mov
push
sbb
cmpsl
xchg
hlt
inc
clc
dec
rclb
xchg
int3
pop
adc
adc
ss
jle
pop
mov
arpl
push
inc
inc
xchg
and
cltd
in
xorl
clc
xchg
jns
leave
mov
test
pushw
mov
out
sub
pop
push
jo
mov
add
xor
mov
sbb
mov
insb
pop
mov
leave
aaa
aaa
jne
push
mov
xor
fldt
xchg
pop
stos
adc
xchg
rolb
mov
sbb
sbb
mov
ret
rclb
lahf
sub
pushf
ljmp
hlt
jb
mov
stc
outsl
jg
mov
push
cmp
dec
adc
pop
jb
jns
pop
push
jmp
insb
scas
push
mov
jmp
aad
lcall
outsb
cmp
jae
and
inc
cwtl
dec
stc
imul
jp
xchg
or
push
xchg
ja
jne
stos
or
jmp
jb
mov
push
jae
sub
imul
daa
lock
cli
mov
sub
loopne
leave
adc
or
addr16
out
pop
jno
xlat
sbb
xor
lret
push
movsl
push
pop
add
sub
push
and
out
rcr
popf
xorb
aas
stc
stc
push
cltd
xor
sbb
rcr
popa
stos
push
pushf
into
idivl
mov
pop
inc
mov
insl
add
in
dec
xchg
or
in
mov
dec
mov
aas
adc
pop
xor
sub
aad
call
sub
scas
in
mov
add
add
push
cmpsb
sub
and
mov
js
sbb
jno
push
xor
mov
shlb
adc
jg
inc
lahf
add
insl
addr16
mov
xchg
cmpsl
in
mov
popf
cmp
mov
cmpb
and
insl
repz
jbe
fsubp
xor
push
aam
mov
jo
ficoms
sub
into
jmp
ja
inc
sbb
lret
fisttps
and
and
and
out
cmp
test
mov
jle
lods
call
mov
or
sub
sub
push
or
mov
fucompp
mov
or
int
sub
push
xor
movsl
mov
popf
or
sub
nop
add
mov
push
mov
out
push
jne
hlt
jl
sti
arpl
mov
std
bound
loopne
mov
cmp
pushf
fidivl
sbb
pop
imul
inc
xchg
xor
jmp
scas
cmpsl
dec
lahf
pop
mov
sahf
js
sbb
push
sbbb
lret
adc
in
shll
fdivs
mov
inc
push
inc
loop
ret
xor
pop
cmp
cmp
mov
popf
pop
pop
xor
insb
jle
aad
pop
rorb
and
stos
add
iret
call
jns
xchg
push
outsb
xchg
das
mov
cld
sbb
xlat
cmp
pop
fxch
jns
pop
adc
loope
icebp
neg
mov
repnz
leave
sub
aad
jnp
dec
lods
xor
add
cli
and
pushf
add
inc
movsl
inc
sbb
dec
pusha
mov
xor
stos
ds
mov
lea
dec
xlat
fdivrs
cmpsl
hlt
js
rorl
lahf
repz
sahf
xchg
push
cmp
in
xchg
or
and
sbbb
lcall
sbb
xorb
jo
dec
movlps
jnp
mov
into
add
pop
es
mov
mov
push
test
sahf
gs
sbb
popl
sti
xlat
xor
fs
mov
xor
fwait
push
psubsw
xchg
xor
push
fwait
jb
pushf
add
inc
lods
nop
ss
lahf
add
sub
xchg
inc
or
in
jecxz
or
jp
or
jle
and
mull
fwait
xchg
dec
out
push
cmpsb
repz
ficompl
jne
andb
xchg
insl
mov
mov
rep
cmp
stos
adc
adc
repnz
insb
loopne
add
sub
ja
add
xchg
das
jns
cwtl
pop
mov
cld
shll
cmp
jae
push
cli
ja
cmpsl
sub
imul
add
divb
in
popa
sub
mov
xor
pop
and
xlat
fwait
push
daa
dec
pop
jmp
xlat
pop
lret
push
jae
jnp
sub
ja
add
sub
adc
aaa
adcb
loop
or
sbb
pop
cmp
add
jle
pop
mov
lret
mov
xchg
mov
aad
inc
push
and
fists
outsl
lret
lahf
sbb
jo
pop
hlt
and
sbbb
push
xchg
mov
push
rcrb
mov
incl
imul
jmp
dec
xor
stos
dec
orl
mov
out
icebp
sbb
and
mov
jge
fidivl
shrb
clc
mov
adcb
into
fcomps
adc
sub
or
jbe
push
or
inc
arpl
add
adc
inc
leave
or
repz
xor
jne
leave
lret
push
aam
pop
movsl
and
cmpsl
jmp
sbb
mov
aam
shrl
adc
dec
adc
adc
jg
dec
and
pushf
lds
adc
into
dec
addl
sub
popa
lods
aaa
mov
mov
dec
inc
ret
in
mov
call
xchg
cld
adc
push
pop
fsubrs
and
test
sbb
push
iret
nop
sub
mov
psubsw
ja
mov
jl
xor
fsubrs
mov
addl
jo
pop
inc
mov
std
xlat
call
add
cmp
xor
jle
xchg
sub
in
inc
xchg
push
int3
jecxz
pop
add
cmp
inc
fxch
jb
dec
shr
or
dec
lock
mov
cmp
xor
pusha
inc
clc
jl
and
mov
xchg
adc
fucom
xchg
push
add
fsubl
fs
addl
cmp
mov
mov
test
cli
add
push
inc
sbb
xor
jl
std
push
add
mov
cmp
push
scas
and
jns
scas
mov
jl
push
xchg
or
out
add
out
inc
movsl
adc
xor
repz
inc
jge
fcmovnb
aaa
adc
pop
xor
shl
enter
push
loop
sub
sahf
scas
xor
push
jnp
inc
clc
dec
jo
jns
ret
shlb
fs
mov
das
push
jno
mov
stc
jno
repz
xchg
xchg
jmp
mov
jb
mov
pusha
jae
clc
cmp
cli
aam
inc
les
add
pop
insb
ret
adcl
jo
shrl
std
rcr
sub
inc
loopne
cltd
incb
pop
paddsw
lock
dec
sbb
or
insl
movsl
aas
fsubrs
mov
lret
inc
adc
nop
xor
adc
sub
int
lcall
pop
fildll
add
xor
sahf
outsl
hlt
mov
jmp
enter
stos
stos
pop
adc
lret
shl
adc
push
out
add
mov
test
pop
sub
jo
pushf
in
mov
stos
fbstp
push
sarb
icebp
imul
mov
cmp
dec
or
add
stos
dec
xor
jo,pn
mov
out
pcmpgtw
push
jmp
pop
cmpsl
cmp
push
mov
push
add
sar
or
jbe
stc
xchg
stos
xchg
cmp
jbe
into
pop
js
movsl
stos
sbb
shll
test
xlat
xor
jp
popf
daa
insb
add
imul
lds
push
push
out
sbb
bound
mov
inc
mov
xchg
aam
jl
nop
ds
cmpsl
mov
jb
into
outsl
dec
aas
push
inc
and
mov
add
xor
cmp
leave
xchg
pop
repz
mov
std
mov
or
iret
loopne
pusha
push
adc
rclb
cltd
or
dec
cmp
dec
insb
stos
mov
std
sbb
incb
outsb
aas
gs
push
insb
dec
insl
or
jb
in
mov
popf
lods
lods
mov
test
loop
push
jmp
pushl
mov
mov
outsl
xchg
repnz
mov
mov
fnstsw
xor
add
adc
je
in
fnstsw
dec
out
inc
cwtl
add
cmpsl
jp
test
das
jg
lret
loop
cltd
or
sub
dec
and
notl
inc
xlat
repnz
pop
movsl
cltd
push
mov
cmpsb
ficoml
aam
cmp
jecxz
enter
and
stos
outsl
mov
fmul
pop
jb
in
jns
mov
sub
push
sub
pop
and
push
rcrl
test
jg
clc
es
adcl
add
add
dec
adc
xchg
insb
cli
outsb
or
out
ss
adc
shrl
jns
mov
mov
loop
push
mov
fs
add
mov
scas
sbb
or
sbbl
cmc
and
jno
sbb
xchg
les
xor
sar
js
leave
dec
jmp
mov
insb
push
mov
mov
fstpt
dec
inc
les
push
cltd
mov
xor
popf
mov
or
fstpt
jge
add
fisubrs
outsl
pop
enter
mov
push
xor
lahf
add
and
xchg
push
mov
aas
adc
push
pslld
in
sub
adc
pop
and
repnz
into
orl
insl
insl
mov
ret
cltd
inc
int3
and
ret
sub
sbb
xlat
jno
popa
rolb
aaa
insb
or
imul
inc
loope
sub
sbb
les
out
adc
rol
imul
pop
fists
fwait
imul
xor
inc
in
lahf
sbb
cmpsl
adc
test
shlb
mov
imul
jecxz,pt
outsb
arpl
xor
mov
xchg
jne
ss
loop
arpl
fs
std
aaa
aad
lock
or
shlb
dec
cmp
sub
sub
mov
int
push
mov
add
fnstsw
je
popa
mov
loope
jns
in
dec
pop
push
std
adc
mov
dec
jle
insb
ret
push
cmp
repnz
jecxz
inc
push
loop
xlat
cmp
inc
testb
lds
jle
pop
or
jl
push
add
push
and
mov
dec
ljmp
ret
cmp
jbe
loop
push
adc
cltd
test
sbb
pop
and
dec
jae
lea
dec
fnstsw
icebp
dec
or
imul
cmpsl
into
mov
lds
ret
mov
ss
stos
and
or
cmp
mov
mov
sub
xchg
roll
fistpl
mov
cli
mov
cs
xchg
movsb
pop
pop
inc
test
inc
xorb
push
cld
lahf
jg
mov
ds
mov
add
jle
xor
stc
xchg
insl
jge
inc
push
xor
cmpsb
vpacksswb
or
or
loop
sbb
loopne
mov
add
adc
ja
ror
jmp
aaa
mov
inc
sbb
movsb
fists
test
pop
xor
ds
push
inc
arpl
cmp
jae
sub
in
js
jp
sub
pop
push
sub
jno
sbb
rorb
into
test
mov
les
ss
test
xor
test
mov
ss
push
or
daa
fdivrl
in
push
xor
mov
mov
or
cmp
in
push
scas
inc
fs
pop
jnp
popf
jne
mov
out
gs
sbb
xchg
and
xor
jmp
mov
jmp
mov
cs
jbe
add
dec
arpl
xor
inc
jno
pop
outsl
popf
push
mov
jp
xor
aas
sbb
xchg
add
not
scas
xchg
jne
lcall
stc
mov
mov
cli
xchg
lret
pop
pusha
hlt
pop
jge
push
nop
pop
cmpsb
cmp
jl,pt
mov
and
add
mov
ljmp
std
dec
adc
shrb
test
xlat
mov
cmc
dec
fisubl
adc
mov
ljmp
sbb
sbb
cmp
notb
outsl
push
cmp
sbb
push
fistpl
sbb
xchg
mov
sbb
lods
lahf
repz
repnz
lret
dec
out
dec
in
jnp
je
js
mov
jecxz
ljmp
sub
push
and
xor
sbb
fidivs
xchg
push
push
pop
xchg
cmpsl
pop
inc
or
jmp
pop
ret
sub
xor
std
pop
mov
lds
repz
inc
loop
push
add
adcb
cmp
adc
inc
dec
cltd
loopne
mov
lahf
int
movsb
popa
mov
shlb
cmpsl
push
jle
call
xor
pusha
jbe
mov
jne
pop
jb,pn
jecxz
lahf
add
sbb
stos
mov
sar
push
or
ret
xchg
fisttpll
rcrb
xchg
imul
ss
js
mov
mov
outsb
call
mov
dec
rcrb
mov
insl
mov
mov
pop
xor
insl
test
add
movsb
leave
mov
sbb
or
xchg
xchg
mov
add
js
cmp
mov
mov
cltd
cli
or
mov
mov
imul
inc
shl
es
out
mov
fiaddl
add
and
dec
push
or
test
clc
jae
inc
add
popa
mov
push
repz
jecxz
push
stc
dec
fs
mov
sbb
mov
mov
mov
int
xchg
push
xchg
out
pop
pusha
push
xorl
fwait
adc
sbb
inc
aas
sub
outsl
sbb
push
lods
pop
int
adc
add
add
xchg
pop
dec
mov
sub
adc
mov
xorl
orb
push
jbe
arpl
adc
xacquire
xor
loop
js
scas
sti
xchg
test
xchg
insb
or
leave
jbe
mov
pop
xor
xchg
rorl
fldt
or
rclb
push
scas
jg
pop
cltd
xchg
xchg
mov
mov
repz
lret
pop
stc
aas
orb
movsb
jns
inc
adc
or
mov
mov
loopne
pushf
test
cli
mov
mov
add
ds
xchg
jp
in
mov
nop
adc
mov
or
cmpsl
test
dec
or
push
sub
cmp
arpl
push
out
pop
add
sub
insl
repz
pushf
test
cld
add
fsqrt
sbb
pop
movb
pushf
repnz
adc
xchg
loopne
and
data16
popf
adc
xlat
xor
ds
jle
mov
dec
aad
dec
iret
jo
es
fisttps
lret
hlt
pop
lahf
dec
lahf
sub
lock
aad
test
ret
jb
jae
fistl
lret
int
cmp
sbb
push
jae
movsl
pop
push
sbb
push
push
jmp
pop
sbbl
sahf
fwait
gs
popf
test
cmp
stos
sub
mull
xchg
push
xor
push
push
ds
jl
xchg
mov
rclb
mov
fs
cltd
push
sub
orb
mov
jno
mov
and
mov
inc
mov
rcrb
mov
out
xchg
sbb
jb
loop
pop
adc
cmp
fdivrs
push
xor
rcrl
adc
push
clc
insl
sbb
js
mov
imul
lret
repnz
sbb
ret
inc
add
inc
and
and
outsl
dec
inc
imul
and
cmp
xchg
push
sti
testb
and
or
inc
testb
sbb
inc
stos
fisubl
hlt
insl
loopne
jmp
out
dec
cltd
test
push
je
push
insl
popa
into
sarl
cmp
mov
mov
pop
xchg
sub
inc
cld
test
add
push
jl
aaa
sbb
aad
leave
lret
cmovbe
xchg
xchg
into
jns
sbb
dec
into
mov
jne
in
leave
mov
imul
push
pusha
arpl
pop
mov
dec
fisttpll
imul
cmc
cs
mov
popl
lds
xchg
xor
fisubs
imul
imulb
mov
pop
jo
jnp
into
shll
inc
pusha
sub
pop
ficomps
ds
mov
popl
cwtl
adc
inc
imul
lcall
out
sbb
divps
mov
pushf
ds
push
add
push
dec
mov
inc
or
pop
icebp
xor
imul
popf
push
jg
push
push
daa
sahf
push
outsl
sti
xchg
cld
push
sbb
dec
cmpsb
incb
lcall
cmpl
in
cmp
push
xchg
and
adc
fcomps
lret
movsl
pop
xchg
xchg
scas
sbb
clc
sbb
mov
lea
xchg
shrb
loopne
test
mov
fstpt
cmp
inc
aad
in
mov
data16
aas
sbb
or
inc
mov
test
test
xor
cltd
in
inc
movsb
call
je
push
sub
scas
jle
sahf
in
pop
insl
sti
sarl
push
clc
gs
clc
dec
outsb
dec
gs
ret
xchg
mov
cmp
mov
xor
push
movsb
movsl
and
adc
pop
dec
test
mov
jno
mov
loopne
clc
adc
lods
cmpsb
adc
outsl
aad
adc
mov
in
dec
or
cld
aas
push
mov
pop
loope
pushf
fs
leave
xchg
insb
sbb
or
or
or
lock
add
divl
xor
jle
not
lock
mov
pushf
sub
and
pop
xchg
out
mov
addr16
scas
cld
loop
insb
negl
scas
stos
mov
and
popa
popf
hlt
ret
add
dec
adc
shlb
lds
push
fwait
adc
mov
xor
sub
or
adcl
push
jne
cmp
les
jecxz
push
sub
sbb
mov
mov
inc
cmp
push
dec
add
xlat
jle
lock
test
jnp
inc
pop
xchg
leave
sub
outsb
adc
push
aas
fdivr
ds
xorb
adc
ljmp
lock
mov
inc
insl
push
xchg
mov
and
mov
mov
les
pop
xorl
adc
adc
or
nop
push
ja
cmp
mov
mov
cld
jbe
mov
scas
fiaddl
cltd
test
mov
ja
out
and
xchg
xor
rorl
pop
das
loop
pushf
mov
mov
mov
pop
aam
mov
push
or
aas
and
jmp
push
adc
dec
test
test
stc
out
xchg
icebp
lods
cmpsl
les
lock
mov
sub
mov
sbb
fnstcw
cmp
scas
adcb
roll
jne
cmp
sub
in
loop
rclb
hlt
out
ss
movsl
rcrb
adcl
cmp
sbb
cmp
stos
mov
fbstp
outsb
mov
jbe
ret
or
add
test
test
cltd
cmpsb
bound
test
out
sahf
stos
pop
push
dec
movsl
jp
daa
pop
or
das
mov
or
movsb
dec
inc
mov
in
lahf
int
gs
add
out
gs
cmp
lea
xor
test
loope
cs
scas
les
mov
frstor
pop
or
jg
add
test
lea
push
rclb
push
lret
lret
dec
iret
hlt
mov
mov
add
stos
adc
call
cmc
lret
popa
mov
pop
roll
into
out
orl
scas
cmp
testb
imulb
je
dec
ljmp
out
jne
sbb
sub
incb
filds
int
pop
mov
lret
jae
fisubrl
cmp
cwtl
cmp
repz
ja
pop
mov
cs
sbb
out
test
sbb
adc
jnp
scas
pushw
insb
dec
mov
mov
adc
enter
fistl
rolb
incb
repz
dec
sti
pop
xchg
jge
jno
push
outsl
testl
mov
outsl
test
out
dec
jns
dec
jmp
fnsave
out
push
inc
jl
pop
jb
fdivrl
std
cld
bound
inc
mov
adcl
bound
clc
ljmp
pop
ds
pusha
insl
fcos
orl
adc
mov
mov
or
idivl
ja
dec
add
push
inc
jno
jp
cmc
mov
cmp
pop
mov
xchg
call
pop
jl
cmp
cmpsb
cwtl
mov
in
call
xchg
pop
out
addr16
popf
ret
sbb
mov
sbb
pop
pop
pop
sbb
xchg
lret
mov
ret
and
clc
test
and
mov
and
and
repz
pop
cli
adc
fdivrs
loope
mov
fcom
inc
gs
mov
ret
imul
pop
push
stos
mov
inc
nop
cmp
pusha
inc
ret
cmc
sarb
test
ffreep
sbb
mull
push
mov
test
sahf
inc
push
mov
and
fldt
jbe
pop
lock
add
xchg
bnd
daa
mov
sbb
movsb
rolb
shlb
std
and
pop
sub
cs
int3
das
push
je
hlt
decl
mov
adc
mov
jb
sbb
adc
add
test
jmp
dec
adc
jmp
sar
cmp
ss
out
mov
aad
or
jnp
ja
jo
xchg
in
mov
mov
inc
cmp
pop
int3
loop
xlat
repnz
arpl
dec
inc
push
leave
data16
lea
rcrb
jecxz
punpcklbw
jge
in
decl
cmpsl
pop
sti
shll
imul
pop
rorl
pop
mov
jge
ljmp
add
dec
inc
jns
push
lret
bnd
jmp
frstor
or
cmp
bound
sbb
stc
pop
dec
sub
and
mov
jnp
pop
dec
add
in
and
mov
xor
jmp
push
mov
leave
shlb
stos
fwait
or
fisttpl
inc
fsub
xchg
jmp
in
push
sub
fistl
dec
cmp
pop
das
adc
arpl
sahf
scas
dec
lea
cs
into
cmp
or
cmp
stos
nopl
lret
test
loopne
cmpsl
dec
dec
aam
pusha
add
jg
stos
arpl
dec
not
fists
fcomps
push
lcall
xchg
mov
in
movsl
in
xor
enter
xchg
mov
add
mov
sbb
mov
aas
lods
jbe
mov
fdivrs
rorl
inc
push
cmpsl
cmp
popf
jl
jno
std
out
add
push
pushf
mov
add
adc
jge
mov
scas
add
ljmp
mov
xchg
lods
push
outsb
cld
dec
testb
aaa
lcall
cmp
fnsave
pop
jo
jbe,pn
xchg
stos
pop
adc
inc
mov
cmpsb
inc
dec
inc
cmp
lds
add
push
sbbl
mov
or
sbb
inc
jo
pop
js,pn
shl
rcr
insb
mov
cmp
dec
pop
movsl
mov
xor
stc
imul
jecxz
xor
cmp
xor
dec
fadd
out
mov
aad
pop
push
and
movsb
test
in
add
jmp
out
out
jecxz
and
mov
sahf
push
dec
jge
test
mov
aas
and
rcrb
pop
cmp
in
aaa
pop
test
cmc
mov
pop
rol
xor
int
repz
enter
std
mov
imull
mov
loope
fwait
aaa
mov
sbb
shr
sbb
icebp
mov
inc
lock
test
orb
sub
jne
adc
jae
ficomps
sub
xlat
out
testl
mov
cmp
testl
push
inc
daa
pushw
mov
add
and
lret
daa
shlb
mov
mov
rorb
jns
loope
sub
punpckhdq
loop
aam
sahf
movsb
ja
xor
xor
bound
mov
or
mov
nop
adc
inc
std
xchg
arpl
mov
mov
add
add
lds
jns
push
dec
push
inc
push
iret
add
jo
je
xor
lods
adc
add
cmp
shl
jo
xor
xorl
js
popf
inc
or
jg
xchg
out
sub
cmc
clc
shrl
push
arpl
es
andl
or
xchg
data16
repnz
mov
adc
jl
lock
jns
lock
jns
fs
mov
cmp
adc
sbb
xor
iret
pop
fs
imul
leave
jno
push
daa
push
cltd
fldenv
cmpb
rolb
cs
leave
push
mov
mov
pushf
ret
sarb
add
cmp
ja
stc
adc
fisubs
mov
jl
pop
mov
xor
fiaddl
aas
mov
jns
push
out
cli
cmpsb
scas
insl
cmp
test
cmp
loop
ds
inc
sub
inc
mov
popl
and
out
js
xlat
les
loope
or
cwtl
mov
add
pop
jb
out
sti
ss
pop
lea
out
cmp
icebp
pusha
testl
hlt
pop
dec
sub
rorb
push
push
test
nop
stos
lahf
jne
lahf
daa
dec
push
push
cmpsb
insb
lea
fwait
push
sbb
xor
and
sub
sarl
mov
mov
adc
sbb
cmpsb
cmp
stc
aad
inc
cltd
cmp
mov
jle
mov
xchg
add
add
insb
std
in
je
mov
sbb
iret
mov
sub
add
aas
test
inc
aad
xchg
hlt
xor
and
xor
les
sbb
repz
mov
ret
pop
inc
dec
rcl
xor
inc
imul
ljmp
xor
inc
mov
int
into
call
cmp
fisttpll
adc
mov
sahf
adc
addl
xorb
and
fcoml
out
fadds
xor
inc
sarl
cmpsl
cmp
test
inc
sub
cli
shrb
adc
xor
cltd
inc
dec
mull
xchg
test
ljmp
adc
rorl
cmp
adc
mov
mov
mov
xchg
cld
lds
and
mov
add
inc
lods
call
iret
cmp
mov
sub
mov
sbb
xchg
or
and
rclb
jle
out
movsl
or
xchg
sub
mov
mov
push
or
lcall
dec
flds
test
mov
cmpsb
inc
sbb
or
xchg
add
shrb
sbb
movsb
mov
gs
or
mov
jl
mov
subl
jae
inc
hlt
addr16
pop
cld
mov
push
inc
dec
js
and
not
xor
or
outsl
mov
fld
push
cmp
jp
xor
mov
push
or
es
pop
xchg
jge
push
jno
dec
movb
into
sbb
mov
cmp
sub
mov
ljmp
insb
jecxz
xlat
cwtl
call
pop
jno
scas
daa
inc
mov
rcrl
cmp
pop
jne
cmc
xchg
inc
mov
ds
inc
add
inc
addr16
sub
popf
aam
sahf
and
and
push
add
dec
jl
sbb
jno
jb
adc
or
jne
xchg
fsts
test
das
mov
cli
sub
test
je
and
test
sbb
loopne
lcall
mov
pop
ret
jae
adc
jne
movsl
outsl
lahf
scas
sub
or
mov
rorl
stos
sahf
or
lods
ja
stc
fldenv
and
dec
je
inc
mov
mov
dec
jo
cmpsl
push
sbb
dec
inc
bound
cmp
data16
in
xor
stos
test
dec
call
lea
pop
ss
addr16
mov
jne
sbb
out
movsl
shlb
in
movsb
fisttps
in
subl
in
out
ds
mov
mov
vmovd
jb,pn
jle
mov
jge
sahf
dec
xchg
pop
pop
lock
mov
movsl
lods
dec
inc
or
mov
iret
imull
outsb
in
ret
jo
clc
sbb
test
loope
addl
adc
sub
pop
cwtl
sbb
stos
nop
test
int3
inc
adcb
adc
push
or
fcomps
repnz
cmc
cmp
or
adc
lea
xor
dec
mov
cmp
pop
and
fimuls
jae
push
cmp
jno
dec
movsb
jge
adc
jns
in
xchg
lock
xor
mov
push
outsb
jle
out
cltd
nop
es
sub
lds
nop
adc
add
js
push
int3
sub
push
inc
xchg
or
xor
pop
mov
push
and
iret
icebp
pop
or
xor
inc
dec
decb
cmp
imul
jge
test
pop
cli
xchg
xchg
sub
les
pop
xchg
popa
xchg
pop
iret
addr16
in
pop
sbb
push
xor
fmull
ret
mov
inc
or
pushf
mov
shll
loope
stos
fisubs
xor
and
sbb
jns
sbb
pop
enter
mov
subb
sub
push
inc
es
push
je
inc
xor
dec
aas
lock
pop
hlt
fildl
xlat
jno
rclb
ja
clc
push
mov
out
and
jne
xchg
imul
aaa
push
and
jle
adc
popf
cmp
in
xchg
js
jecxz
inc
or
test
lret
daa
stc
sbb
and
je
adc
fs
adc
sbb
jge
in
cmc
lret
lds
cmp
pusha
and
test
and
push
jg
in
outsl
ja
and
clc
stc
fadd
movsb
in
imul
testl
dec
adc
nop
mov
shlb
mov
and
lret
mov
les
sbb
cld
clc
rcrb
inc
cwtl
pop
jecxz
mov
add
icebp
inc
xchg
cmp
popf
push
mov
lret
lcall
icebp
inc
jns
mov
xorl
stc
aaa
insb
in
mov
jbe
dec
ss
mov
add
mov
arpl
rclb
pop
in
test
sub
adc
cmp
sub
popf
mov
mov
pop
mov
insb
andb
inc
push
xchg
and
inc
push
adc
mov
into
jne
sbb
pop
pusha
jp
pushl
jmp
push
cmp
insb
xlat
mov
imul
cld
push
mov
add
mov
xchg
inc
pushf
cmp
sti
xorb
jmp
xchg
adc
sub
addr16
sahf
inc
mov
cmp
orb
sbb
lock
push
lds
mov
scas
pop
sti
stos
xchg
nop
outsb
sub
shlb
pop
or
adc
mov
push
stos
lret
int
insl
in
mov
ret
in
pop
pop
xchg
sbb
outsb
mov
push
rclb
int3
in
push
ljmp
ja
in
fnstsw
cltd
sbb
sbb
xor
test
jl
stos
sbb
fucom
sub
shrl
xlat
in
mov
rcr
mov
movsb
lods
cwtl
xor
push
int3
push
test
fmull
and
mov
jno
pop
dec
mov
dec
out
rcr
std
je
inc
sbbl
xchg
pusha
sub
mov
ss
push
push
add
inc
push
cmp
insb
push
mov
std
push
inc
cmp
fistpll
je
sub
leave
push
and
push
sbb
int
jns
ds
into
cwtl
fucomp
test
dec
test
jmp
int3
incl
pop
leave
jne
arpl
xchg
mov
sti
mov
stc
ret
jne
mov
sub
cmp
das
iret
add
mov
pusha
pushf
sti
push
iret
cli
cmp
nop
repz
aas
insl
fistps
out
popa
jbe
inc
mov
test
and
lods
mov
sbbb
orb
sub
das
bound
and
pop
into
lahf
push
ljmp
xor
mov
in
subl
push
inc
xchg
pop
cs
jo
loope
or
dec
jge
adc
mov
mov
sbb
jnp
std
xchg
jnp
sub
test
out
or
inc
mov
xchg
rclb
mov
aam
std
xor
and
lahf
inc
lret
mov
rcll
mov
in
insb
xchg
mov
xchg
data16
fldt
in
dec
jno
stos
cld
mov
dec
mov
mov
and
xor
data16
mov
addl
or
push
aam
sbb
sar
push
aas
mov
and
xchg
or
imul
sub
lahf
xchg
mov
add
xchg
iret
sar
sub
push
out
add
dec
out
lcall
xchg
mov
mov
cmp
mov
insl
sub
pushf
scas
fsts
xor
fdivrl
adc
mov
fucom
addr16
mov
inc
sbb
bound
sbb
push
push
push
mov
adc
sti
xchg
xlat
pop
lret
xchg
push
adc
jb
pushf
lret
mov
cmp
mov
leave
xchg
and
cltd
jmp
push
testb
mov
sti
jge
xor
dec
sbb
adc
insb
nop
loopne
and
int
inc
iret
cld
fnsave
stos
sbb
lret
imul
inc
lds
repnz
dec
push
subl
mov
mov
ss
gs
lahf
enter
mulb
test
aaa
mov
cmpsb
dec
or
shrb
xorb
ja
lcall
sbb
je
xor
and
lds
imull
xchg
adc
call
xlat
mov
jb
adc
scas
shrl
movd
mov
xor
mov
ret
jp
jns
int3
push
dec
cmp
jnp
push
jns
inc
popa
mov
movsb
pop
repnz
mov
inc
adc
cmp
popf
jg
pop
test
loopne
sub
or
xor
mov
test
fimull
push
inc
pusha
daa
ljmp
sbb
dec
mov
adc
stos
fdivr
sbbb
cmp
push
lods
xchg
stos
jmp
inc
mov
andb
cmp
movsb
jmp
pop
gs
adc
sub
mov
mov
mov
stc
mov
iret
fildl
xor
xlat
push
jne
xchg
add
mov
pop
inc
fwait
jo
mov
or
cmp
cli
inc
in
lcall
in
iret
xchg
enterw
cmovs
leave
push
aad
out
stos
aam
gs
aad
repnz
lods
loop
sbb
lock
scas
pop
inc
cmp
sbb
je
mov
dec
jae
sti
sti
xchg
and
pop
aas
push
retw
cs
mov
loop
int3
or
lret
dec
inc
xor
xchg
or
mov
cmpsl
xchg
pop
imul
jne
inc
int
adc
and
dec
ret
out
fldcw
push
insl
add
jnp
sub
sbb
movsb
jge
cmpsb
test
add
push
sbb
aas
cld
sbb
aas
or
and
push
mov
adcl
std
dec
add
push
inc
xlat
fs
jo
faddp
mov
scas
ret
add
or
cltd
jns
popa
cltd
xchg
int
sbb
shlb
fiadds
std
xchg
sub
xor
ja
clc
scas
int3
cmpb
mov
and
sbb
divl
and
dec
gs
in
inc
push
or
mov
sub
jb
cmp
das
cmp
push
or
scas
xacquire
cwtl
lahf
pop
mov
jne
cmp
fdivl
jmp
outsb
test
xlat
xor
push
fcomps
xchg
data16
aad
movsb
dec
pop
pop
xlat
cwtl
inc
inc
ret
loopw
mov
out
ret
loope
mov
mov
js
xchg
lods
cs
jg
sub
xchg
outsl
mov
out
daa
in
sub
xor
popa
pop
mov
dec
jp
xchg
stc
cmpsb
arpl
push
rcll
fsts
aam
inc
pop
push
popf
sub
insl
bound
sub
or
lock
cltd
dec
jecxz
push
cmp
adc
jbe
inc
out
arpl
mov
add
mov
cmp
xchg
and
mov
mov
push
mov
or
data16
sbb
dec
inc
rcrl
xchg
scas
xor
sbb
xchg
push
inc
repz
leave
stc
push
jmp
mov
sbb
ret
leave
push
lret
jge
fisttpl
push
aad
jnp
sti
in
aad
cmp
aaa
in
cmp
sub
sbb
cs
filds
lret
mov
mov
fcompp
mov
aas
notl
filds
add
cwtl
fistps
pushl
jbe
jb
js
std
nop
jae
loopne
mov
add
subl
jb
inc
push
jg
or
or
pop
in
sti
or
ficoms
arpl
jae
and
fnstsw
outsb
call
or
mov
pop
adc
sub
adc
jmp
adc
test
insl
xor
jne
rclb
add
pop
cmp
add
adc
adcl
xchg
mov
fmuls
out
fs
push
jl
mov
outsb
xchg
push
sub
dec
mov
out
add
mov
jmp
fnsave
dec
and
dec
push
mov
xchg
stos
jge
mull
xor
test
sub
pop
fistpl
mov
sbb
push
ljmp
in
push
imul
out
shrb
push
je
inc
add
cli
hlt
push
cmp
cwtl
add
imul
sbb
or
adc
dec
loopne
jb
and
rclb
or
sbb
xlat
cmp
les
jg
pop
addr16
pop
jmp
lea
imul
xchg
mov
inc
push
cmp
lods
loopne
test
dec
ds
or
sahf
movsb
lea
lock
loopne
mov
data16
xorb
loop,pt
fcomip
out
imul
aad
cld
xlat
outsl
aaa
repz
push
icebp
iret
stos
int
scas
adc
es
nop
pop
mov
jbe
fildll
test
mov
push
push
lock
loopew
mov
out
lods
lahf
icebp
mov
dec
cmc
gs
mov
adc
out
rcrl
xor
pop
in
out
adc
adc
cmc
rcrb
dec
rclb
daa
cmp
out
mov
bound
mov
sbb
mov
and
loope
rcrl
outsb
je
jns
int
jge
shrl
in
cmp
test
movsl
rclb
sbb
aaa
lahf
lcall
jno
out
push
xchg
mov
test
fstpl
adc
iret
int3
push
inc
sbb
push
jns
jne
lahf
fldl
mov
icebp
into
stc
mov
cs
mov
xchg
cli
and
mov
sub
shll
movsb
jge
bound
push
add
popa
clc
jl
cwtl
nop
mov
iret
rcr
mov
cmpsl
test
int
jle
stos
fldenv
gs
hlt
dec
test
lahf
or
cmp
sub
sbb
out
fadds
sub
js
sahf
insb
rep
pop
inc
adc
pop
daa
pop
outsl
adc
pop
sub
xchg
push
cld
addl
xchg
movl
mov
jge
fistpll
out
mov
lods
int3
cmpsb
lahf
xor
cli
or
addr16
xor
mov
add
mov
mov
or
bswap
xor
jecxz
xchg
and
stos
scas
or
ss
je
and
inc
and
fiadds
jge
mov
hlt
sbb
fdivrs
movsl
leave
or
and
pop
mov
add
lods
imul
stc
push
test
pushf
sti
lds
movsl
cmp
xor
and
in
bnd
dec
in
in
in
bound
inc
jp
out
cwtl
je
pop
and
popf
push
inc
xor
adc
sbb
shl
jno
push
inc
testb
xchg
loop
pop
icebp
out
orb
dec
popa
les
push
inc
cmp
fwait
nop
xor
ror
mov
mov
das
dec
movsb
sbb
sub
clc
imul
cmp
lods
loope
sub
aaa
stc
ja
lods
cli
sbb
dec
xchg
mov
jo
and
testl
mov
jg
jno
aam
mov
mov
xchg
or
pop
dec
nop
xchg
push
aad
out
pusha
add
mov
or
out
cmpsb
mov
pop
int3
popf
mov
jbe
pop
push
mov
insb
mov
inc
add
jae
mov
imul
int3
add
push
imul
adc
inc
stos
lock
add
stos
les
jecxz
mov
add
push
dec
jg
xor
loopne
fidivl
movsl
out
loop
pop
push
fcmove
mov
inc
push
js
sbb
pop
jl
enter
mov
pop
xor
in
ljmp
inc
std
hlt
sbb
cmp
fs
xchg
dec
bound
inc
andb
mov
pop
and
mov
jne
push
or
dec
mov
pusha
ret
sub
pop
es
test
cmp
mov
cltd
aad
xor
insb
sbb
push
mov
or
popa
dec
mov
aad
push
mov
lahf
pop
movl
jb
incb
push
mov
inc
push
iret
push
movsb
jo
cmp
mov
cld
lret
mov
or
out
lods
into
sarb
xchg
pop
pop
aam
sbb
inc
popa
out
push
lock
mov
sub
arpl
jae
dec
loopne
push
jmp
js
pop
fcmovne
sti
cmpsb
imul
adc
lahf
shrb
inc
sub
orl
pushf
lahf
shl
int
or
pop
insl
sbb
mov
mov
xchg
jecxz
jp
pusha
sub
int
and
mov
or
lret
aas
sub
or
adc
repnz
fldl
hlt
addr16
mov
lea
and
mov
sub
xchg
or
mov
fildll
adc
cmp
sbb
and
test
xchg
xor
ret
stos
jae
fmulp
cwtl
loope
mov
adc
add
xor
sub
pop
movsb
add
mov
insb
push
pop
pusha
xchg
jecxz
or
xchg
repz
mov
xchg
scas
xchg
xchg
lret
sarl
ret
lock
popf
sub
movsl
xor
mov
outsb
cmp
pop
insb
cs
mov
rolb
popf
dec
divb
mov
mov
icebp
ljmp
imul
into
les
scas
movsl
xchg
add
frstor
bound
mov
cld
lret
cmp
mov
adc
mov
int3
or
stos
sub
iret
xchg
push
or
bound
call
addr16
popf
adc
ja
les
push
lahf
adc
mov
sbb
mov
cmpsb
jl
fists
mov
scas
xor
or
inc
cmpsl
sub
xchg
sub
mov
push
pop
aaa
les
push
mov
xor
pop
mov
push
ds
int
jb
fcompl
jne
jno
in
xlat
in
ret
inc
repnz
xor
lahf
sub
or
xchg
add
pop
sub
mov
xchg
cmp
sbb
add
stc
aam
leave
pop
mov
jg
add
jbe
inc
mov
inc
lcall
xor
pop
dec
enter
push
ss
jo
cmpb
pop
rcrb
loop
push
fdivr
mov
vpand
orb
dec
push
shrb
out
mov
movsl
jno
rcl
and
xor
imul
mov
pop
inc
pop
mul
jle
add
rcrl
pop
and
mov
shr
cmc
xchg
stos
stos
dec
inc
mov
xchg
jb
pop
into
pop
mov
and
or
aam
mov
jbe
fisubl
and
dec
mov
aas
clc
dec
jae
mov
pop
mov
cmpsb
and
test
andl
dec
push
mov
out
imul
lret
call
rolb
movsb
dec
jae
loopne
decl
push
int
call
pop
shrb
in
lods
out
mov
aad
loope
xchg
cmp
insb
add
pop
push
jb
sbb
inc
xor
cmpsl
out
xchg
imul
rcrb
shlb
dec
jne
or
pop
lock
jae
pop
dec
scas
orl
ljmp
pop
mov
lahf
icebp
adc
jp
jl
mov
or
dec
cmp
mov
lret
jecxz
cs
mov
mov
outsl
mov
xchg
cs
aad
xchg
test
xchg
das
cmpsb
add
mov
cld
pop
inc
lods
and
mov
dec
aad
icebp
outsb
pop
mov
push
bswap
dec
and
dec
jns
pop
int
inc
mov
mov
and
std
jp
cs
pop
out
les
or
mov
rcr
iret
pop
jl
push
inc
and
xchg
jmp
fildl
outsl
pop
sbb
dec
fidivl
and
sbb
push
inc
push
adc
or
and
cmp
leave
insb
cmpsl
int
ss
fisubrl
adc
pop
pop
sub
call
mov
mov
sbb
push
lods
out
sub
inc
add
sub
pop
inc
adc
rcll
or
push
scas
add
je
movsb
push
outsl
or
and
nop
fistl
push
jno
sub
add
mov
adc
pushf
dec
add
xchg
popf
test
push
outsl
ljmp
push
pop
ret
divl
xchg
inc
mov
lahf
repnz
mov
ret
inc
sub
iret
movsb
mov
mov
dec
ret
cli
sub
lock
in
xor
fcomps
adc
cltd
adc
jnp
sub
dec
jmp
scas
in
jle
xchg
sbb
dec
call
call
jbe
dec
adc
inc
push
and
scas
stc
jg
inc
lods
out
mov
adcb
xor
adc
in
int
mov
jmp
data16
imul
bound
sbb
ret
fsubrs
dec
test
xor
xchg
fdivrs
test
sarb
cmp
adc
outsl
in
dec
sbb
nop
push
dec
cmpsb
cmp
add
cmp
shll
icebp
xorl
mov
jno
movsl
dec
jnp
or
jle
shll
jnp
ret
xchg
mov
jae
or
jp
add
mov
mov
cmpl
fimull
daa
arpl
pop
jmp
sbb
ljmp
jb
je
cmp
dec
xchg
shll
xchg
push
js
aaa
stos
cli
iret
push
out
cmp
mov
scas
jecxz
pushf
mov
jecxz
push
dec
cli
sbb
shrb
cmp
cmp
pop
mov
dec
dec
mov
std
or
outsb
push
movsb
daa
adc
cmp
sbb
mov
arpl
mov
jae
rcll
dec
sti
incl
mov
push
pop
stos
mov
fldt
xor
and
bound
fwait
jle
sti
test
jb
out
clc
push
rcl
cmp
adcl
das
pop
jno
loop
inc
lahf
sbb
gs
fisttpl
xor
mov
pop
jmp
push
andb
out
repz
or
mov
cmp
jo
fs
out
ds
data16
sub
stc
cld
push
outsb
mov
fdivs
nop
xchg
inc
repnz
jge
adc
mov
or
xchg
cli
hlt
jmp
push
ret
cmp
sub
xchg
ret
inc
fdivrl
or
ja
mov
ret
jnp,pt
adc
dec
mov
xor
push
sbb
or
mov
xor
leave
sub
mov
fs
and
add
loop
xchg
push
mov
into
mov
data16
mov
cwtl
or
or
loopne
jb
mov
pop
pusha
or
xchg
outsl
xlat
sub
into
xlat
push
stos
push
pop
and
pop
pop
hlt
cmpsb
and
pop
sbb
add
add
rclb
sub
dec
inc
adc
sub
test
push
fidivs
jmp
adc
add
aad
scas
test
cmp
push
outsb
jp
add
sbb
imul
outsb
fdivl
lahf
cmp
mov
aad
incb
lret
adcb
cld
pusha
stos
pop
jb
mov
int
in
loope
in
xchg
jae
out
leave
out
lods
mov
movsl
or
dec
xchg
shll
cli
sbb
les
xchg
xchg
cld
sub
dec
and
and
pop
pop
adc
out
fiadds
addr16
dec
jb
out
mov
dec
inc
sub
int3
pop
fimuls
das
lahf
mov
adc
subb
mov
jbe
cltd
mov
leave
sbb
sbb
insl
push
xor
ret
jl
dec
jl
xor
or
push
fchs
or
stos
pop
clc
or
mov
pop
cwtl
jmp
or
lock
pushf
scas
and
and
int3
insb
jmp
test
dec
imul
mov
loopne
aam
jo
lahf
xorl
jno
mov
popf
cmp
stos
xor
and
repnz
jecxz
int
pushf
xor
popf
pusha
cli
jg
fwait
outsb
xor
aad
inc
loopne
stos
mov
push
push
inc
enter
dec
xchg
push
fldt
mov
mov
sub
mov
in
inc
sbb
dec
cmp
or
mov
sub
addr16
and
mov
adc
push
push
xor
and
out
loopne
sbb
ret
push
adc
mov
xchg
mov
or
lahf
xor
addr16
fimuls
add
mov
jno
sbb
xchg
cmp
fmuls
pop
pop
xor
and
jbe
push
dec
add
jnp
imulb
out
push
add
add
adc
sub
ret
setns
daa
ret
lock
sbbb
sahf
inc
add
es
xor
dec
inc
nop
fnstenv
ss
xlat
test
ret
imul
sbb
sbb
pop
outsl
daa
nop
mov
lods
pop
pop
arpl
jo
sahf
jecxz
inc
sub
hlt
pop
dec
dec
add
xchg
mov
xchg
mov
pop
cs
int
and
mov
arpl
enter
jbe
fldenv
stos
pop
repz
in
cmp
imul
and
ja
andl
aam
insl
sub
iret
push
sti
idivb
sbb
call
call
sbb
rcrl
adc
or
ficoml
sub
cmp
xor
xchg
ror
xchg
dec
sbb
mov
cmp
cld
add
add
fisttpll
jmp
test
xor
cmpsl
imul
dec
pop
popf
cwtl
ja
mov
inc
adc
cmp
pop
ja
sbb
fcomi
cli
or
jle
mov
dec
or
jecxz
push
movsb
in
jno
cmp
mov
mov
adc
fimull
pop
notb
ret
nop
jae
jmp
loopne
add
and
xchg
mov
fdiv
shl
jne
xchg
dec
xor
sub
lds
cmp
data16
jnp
fxch
leave
jo
inc
push
sub
sbb
test
xchg
push
cmp
popf
ror
mov
jg
and
add
jmp
addr16
fsts
pop
sbb
dec
xchg
lods
and
mov
jbe
mov
jge
push
jns
sahf
sub
jle
rorl
xor
fwait
roll
jle
js
or
aam
adc
sbb
push
cltd
mov
xor
popa
iret
int
pop
mov
leave
jmp
loop
ficoms
xchg
fidivs
add
lds
fcompp
xor
fdivl
pop
sub
test
test
mov
inc
lahf
mov
in
sub
mov
ficoml
cmpsl
das
mov
cmp
adc
jp
add
dec
mov
xor
pushf
sahf
xchg
pop
mov
mov
cmpsb
xchg
scas
sub
push
pushf
rcr
cmp
mov
push
sub
testl
enter
adc
incb
popa
aaa
icebp
add
sarb
adc
subb
or
shrl
and
cmpb
pusha
imul
adc
loopne
enter
pop
ficoms
push
push
faddl
fistpl
xor
inc
cmp
dec
je,pt
dec
popa
maskmovq
mull
fsubl
ljmp
or
lret
movsl
int
test
mov
and
mov
jns
scas
leave
in
enter
jno
int
push
ud2
call
mov
sub
iret
mov
lods
sbb
imul
jl
dec
vpsllw
pop
sbb
push
add
adc
movsb
xchg
bound
mov
pop
shrb
mov
nop
or
loope
sub
mov
xlat
push
push
lcall
dec
outsl
mov
lcall
rcr
arpl
mov
subb
fcmovne
jnp
sbbl
movsl
mov
fists
arpl
add
cld
cmpsb
scas
cmp
lret
or
add
mov
and
mov
xchg
mov
jo
push
rorl
mov
ret
lret
movsl
stc
stos
xchg
roll
and
int
cmp
bound
or
dec
fstpl
icebp
dec
lea
movsl
mov
iret
mov
adc
add
mov
pop
insb
and
jecxz
xor
fs
add
xor
cmp
add
fcomip
pop
adc
loop
fstl
adc
cld
fimuls
ret
mov
jbe
or
inc
hlt
push
push
imul
xchg
std
pop
dec
jns
jle
sbb
in
xchg
es
adc
dec
xor
cs
into
dec
sbb
xor
popa
imul
mov
insl
lcall
inc
add
push
data16
pusha
cmp
mov
das
rcl
scas
mov
cld
outsb
inc
pushaw
inc
mov
rcrl
push
mov
sub
jmp
push
cmpb
ds
adc
mov
push
in
imul
jp
rclb
lods
mov
cmpsb
sar
xor
and
aaa
lahf
or
call
mov
lret
xchg
ret
pop
xchg
sbb
movb
pop
repnz
std
je
sbb
arpl
jecxz
lds
pop
lretw
xchg
pop
in
dec
mov
fwait
push
or
out
mov
mov
scas
xchg
hlt
mov
mov
in
xchg
shrb
cwtl
push
dec
jmp
mov
lds
fwait
loop
fmull
xchg
xchg
bound
push
ds
mov
push
mov
ret
mov
push
das
out
cwtl
fcomi
sub
mov
sub
xor
test
push
int3
shrb
jno
cmpsl
mov
jmp
imul
cmp
les
jge
cmp
cmp
jecxz
push
and
mov
sahf
xchg
and
jo
inc
xor
dec
and
cmp
xchg
outsl
mov
mov
xchg
fcompl
push
icebp
int
jl
add
add
in
and
xchg
sub
mov
mov
push
add
addr16
lret
add
cmp
js
pop
dec
xchg
jns
sub
ret
mov
insb
dec
mov
inc
and
mov
fisubrl
js
push
fbld
xor
loop
dec
cmp
mov
inc
fmul
cmp
xchg
into
aaa
fistpll
test
fcomps
xor
cli
cmp
xor
cld
cmp
push
out
mov
and
mov
xchg
inc
pop
fists
or
sub
gs
mov
mov
sub
push
pop
jbe
sub
pusha
outsl
sub
or
push
sub
jae
mov
je
repnz
push
fisttps
pop
scas
push
mov
xchg
out
push
cwtl
rorb
lea
adc
repz
clc
outsb
jo
das
jecxz
ja
push
enter
push
cmp
mov
bound
arpl
sti
and
and
dec
cld
inc
jnp
cmp
call
std
inc
push
xor
pusha
pop
push
rcl
add
inc
mov
rcl
inc
mov
roll
inc
adc
mov
adc
jge
inc
pushf
mov
dec
pop
daa
jmp
push
sub
iret
push
xor
fwait
jl
fwait
cld
mov
pop
notl
aas
sarb
xchg
pop
loope
jg
shrb
dec
and
psubq
push
cmpsb
mov
test
lret
xchg
sub
xchg
xchg
push
lret
les
hlt
loopne
cmp
xlat
adc
or
sub
cmp
test
sub
push
lea
push
iret
jecxz
cmp
dec
ss
fdivl
xor
jmp
xchg
mov
das
or
iret
iret
xor
test
jle
subl
add
enter
fs
dec
mov
pop
sahf
aam
sahf
ljmp
xchg
lods
test
pushf
pop
scas
xchg
ds
jo
sub
or
dec
test
std
push
xchg
xor
and
into
ja
xchg
inc
into
subb
lds
out
mov
sbbl
mov
sbb
jmp
adc
arpl
dec
lret
mov
add
sti
pop
pop
push
rorb
stos
mull
xor
adc
mov
cltd
in
dec
mov
movsb
xlat
mov
hlt
inc
mov
xor
cli
cmpsb
and
sar
repz
xor
and
adcl
sbb
sub
pop
mov
or
cmp
add
testb
push
std
adc
pop
lock
xor
sub
imul
pop
push
or
cmp
mov
jb
jmp
mov
lds
ja
cmpsb
out
movsb
xchg
out
pop
imul
mov
adc
push
nop
push
inc
xchg
inc
fcoms
xlat
fidivl
and
cmp
in
pop
mov
movsb
push
daa
or
xor
loope
cld
cltd
dec
cmpsl
imul
and
fidivrl
imul
mov
loopne
cwtl
fstpl
mov
push
mov
and
imul
or
fisttpll
pop
lcall
jl
sbb
repnz
fisttpll
inc
xchg
fbld
jnp
sub
adc
das
mov
inc
lret
mov
outsb
jae
into
pop
int
popa
sti
hlt
mov
pusha
pop
shl
cmc
or
inc
paddusb
push
sarl
jnp
push
cmp
incl
jae
push
mov
push
jne
jne
mov
push
add
leave
push
and
sbb
add
or
push
sbb
pop
gs
add
mov
rolb
inc
addb
cmc
dec
xchg
flds
call
imul
pop
out
std
fcoms
mov
xchg
into
pop
pop
loope
pop
mov
inc
xchg
scas
mov
dec
add
and
mov
mov
mov
std
icebp
orb
pop
sub
sbb
and
cmp
das
pusha
lret
in
lods
mov
and
dec
testb
fcoms
inc
and
mov
cld
ja
cmpsb
jbe
push
xor
push
lods
pop
insl
hlt
mov
test
jo
loopne
ficomps
sahf
mov
dec
cmc
xchg
sti
cld
in
push
iret
push
es
inc
out
dec
xchg
jmp
pushf
div
xor
loope
inc
adc
sbb
fnstsw
xchg
in
push
fidivrl
pop
jle
mov
out
pop
hlt
jmp
sub
inc
clc
icebp
dec
sub
adc
lea
adc
imul
sarl
mov
in
je
adc
popa
lods
jae
outsb
mov
aaa
popa
mov
or
sti
push
jge
daa
push
scas
out
shlb
and
mov
movsb
fldenv
call
aad
and
pop
inc
jl
and
mov
dec
dec
adc
mov
test
and
inc
xchg
jmp
xor
arpl
xor
or
or
jnp
movsb
adc
xor
pop
not
lret
jg
cmp
pop
mov
fimuls
insb
pop
jo
ljmp
and
push
xlat
jbe
inc
loope
mov
mov
adcb
fildll
mov
push
push
stos
jle
inc
pop
jmp
outsl
mov
add
push
mov
insl
or
pop
js
sti
xchg
int
mov
insb
ss
sub
popf
cmp
sub
xchg
xlat
cld
mov
mov
cld
popf
shl
subb
push
jmp
xchg
add
aaa
pop
arpl
repnz
pop
and
nop
clc
xor
addb
mov
jo
jle
push
pop
jne
or
scas
jl
sub
repz
mov
pop
dec
out
inc
adc
mov
fbld
cwtl
inc
xchg
mov
jle
cli
pop
xchg
and
sahf
shl
sbb
shrl
pop
out
in
mov
int
or
test
or
aad
xor
jmp
aad
inc
dec
mov
mov
add
out
sti
inc
enter
and
cmp
icebp
sbb
lock
insb
add
and
xchg
pop
sub
xchg
out
jns
enter
fidivl
xlat
mov
loop
dec
add
gs
ljmp
fildl
push
dec
iret
adc
addr16
push
int
lahf
lods
xor
adc
adcb
test
mov
out
cmc
push
fcmovnb
repnz
xchg
imul
bound
ss
mov
inc
popa
xor
adc
sbb
and
in
cmp
js
adc
rcrb
das
adc
ljmp
loopne
mov
inc
les
dec
fsubl
addr16
xor
test
add
dec
sub
mov
mov
mov
enter
mov
xchg
nop
mov
or
outsl
jecxz
xor
pop
adc
shrb
ss
in
popa
pop
xor
xchg
pop
push
mov
loope
sbb
pop
lock
into
pop
mov
mov
lret
jmp
arpl
push
aas
mov
je
inc
aaa
add
sub
cmp
add
out
xchg
mov
push
adc
cmp
es
jae
add
mov
sub
stos
cmp
gs
lods
jl
hlt
mov
in
pushf
cltd
jb
mov
in
or
shrb
fstl
and
decl
or
clc
in
adc
test
imul
and
xchg
aad
add
jae
adc
je
jmp
clc
xchg
lods
sbb
jmp
scas
push
shll
aaa
roll
and
shrl
mov
bound
jg
dec
push
pop
leave
popf
push
test
js
and
or
jecxz
xchg
pushf
inc
mov
shlb
or
mull
imul
int
filds
xchg
pop
cld
mov
cmp
fdiv
or
loop
adc
testb
movsl
test
insl
xchg
aad
in
inc
test
lahf
mov
cmp
mov
add
movsb
push
test
dec
pop
jmp
inc
lret
add
cltd
mov
sub
into
and
movsl
call
lret
jg
jle
hlt
jecxz
out
lods
mov
lds
mov
out
jmp
in
int
scas
cmp
fldcw
ja
iret
inc
rcll
push
and
popf
push
rol
add
hlt
adc
push
mov
pop
xor
push
add
cmc
addr16
les
xchg
data16
add
cmpsl
call
adc
mov
mov
add
outsb
inc
push
es
sbb
jmp
jg
pop
jo
insb
sub
mov
jo
add
sahf
int
xor
sbb
and
loope
mov
out
stos
test
cmp
movsl
in
rcrb
mov
or
movsl
lea
fmull
addr16
pop
inc
fstps
stos
and
jbe
fdivrs
push
dec
jl
fadd
daa
pusha
sbb
mov
sbb
inc
xchg
lods
iret
and
or
stos
push
pop
or
outsl
fwait
push
in
fstpl
adc
pop
ss
cmp
push
pop
popf
xchg
ss
cmp
sbb
ljmp
hlt
xor
cmpsb
pop
test
ljmp
popf
xor
or
mov
adcl
leave
hlt
loope
or
lods
dec
scas
cmp
sbb
sahf
lock
push
mov
cmp
pop
aas
cli
and
cmp
in
insl
or
leave
nop
xchg
sti
add
fadd
aas
jmp
pop
dec
or
loopne
test
aas
cmp
stc
dec
andl
movsl
fcomps
pop
daa
adc
or
add
cli
je
mov
adc
leave
cmp
cltd
dec
js
dec
int
mov
int
fsubp
mov
into
inc
pop
std
pop
adc
andl
or
popf
adc
push
xchg
sub
mov
cmpb
xchg
xor
push
pusha
pushf
cmc
adc
mov
mov
jo
mov
ja
stc
ljmp
dec
xor
dec
dec
and
xor
lock
jnp
push
insl
mov
cmpl
or
out
hlt
mov
fiadds
pop
movsb
push
mov
test
mov
enter
fistpl
xor
in
faddl
call
xchg
bound
mov
push
pusha
shlb
pop
cmp
sbb
sub
push
push
and
fisubrs
mov
xchg
and
push
insb
orb
sbb
cmpsl
add
sbb
and
cmp
ret
add
movsl
add
cmpsb
iret
pusha
cwtl
add
imul
frstor
cmp
filds
cmpsb
jae
repz
out
mov
xor
inc
gs
lret
dec
leave
ja
sarl
add
dec
jae
lret
lods
ja
out
mov
xchg
jmp
cmp
dec
add
xchg
cmp
push
sbb
gs
rorl
pop
jmp
cmpsb
repnz
or
xchg
xor
jge
sub
mov
ror
lock
in
sub
std
dec
push
inc
push
jmp
int3
inc
or
mov
dec
adc
adc
pusha
push
scas
lret
int3
out
leave
cmc
test
cmp
push
pop
jo
dec
push
push
mov
xchg
int3
cli
adc
sti
lods
pop
ret
mov
aam
add
imul
mov
and
fidivrs
push
sbb
push
gs
ffreep
imul
fisubs
and
push
push
imul
mov
popl
xchg
sbb
and
mov
adc
pop
mov
push
insb
or
or
fisttps
and
cmpsb
shlb
pusha
inc
int3
leave
jne
pop
lret
mov
inc
push
movsl
add
mov
or
pop
test
inc
fcoms
or
inc
push
push
adc
test
or
pop
insl
test
adc
loopne
repz
or
dec
andb
shlb
mulb
push
pop
nop
jo
xor
sti
in
cmp
xlat
inc
jmp
scas
xchg
fdivl
ffreep
mov
mov
lcall
add
adc
shlb
or
movsb
lds
lret
pop
scas
loop
arpl
adc
scas
out
in
outsb
pop
mov
daa
pop
push
jle
mov
test
and
aad
lds
movsb
pop
repnz
not
loope
fadds
and
xchg
jae
mull
sub
fwait
push
push
cmp
idivl
inc
lock
and
sbb
mov
pop
jns
jmp
dec
out
fidivrl
pmovmskb
push
fistl
jnp
sahf
or
test
imul
subb
push
xor
mov
add
inc
scas
cmp
jp
xor
jmp
and
mov
iret
test
or
les
or
xlat
xor
sahf
sub
aam
or
push
shlb
inc
sub
sbb
bound
jb
into
push
orl
sub
int
in
mov
popf
ret
or
push
or
and
div
mov
push
in
jge
sbb
cmp
shrb
cli
sub
fdivs
dec
popa
test
add
cmpsb
sub
or
imul
push
xchg
in
push
test
imul
mov
rolb
jecxz
and
add
or
jb
aaa
in
movsl
cmp
imul
sub
sbb
add
mov
bound
cltd
scas
arpl
shr
cwtl
mov
push
jl
push
sbb
jnp
xor
fidivrl
ficoml
add
cmp
cmp
rcrb
mov
jecxz
sbb
scas
and
popa
mov
sub
dec
push
je
icebp
mov
adc
mov
lcall
xchg
addr16
xor
mov
or
iret
in
popf
mov
xor
dec
adc
xchg
or
outsb
cmc
aam
mov
imul
pop
enter
inc
cld
add
lret
out
lds
xor
pop
stc
pop
subb
xor
mov
repz
clc
repnz
pushf
cmp
mov
loope
or
push
out
ljmp
gs
out
push
or
arpl
lahf
fsubl
pop
fstl
adc
mov
jmp
sub
arpl
jge
sti
pushf
ret
icebp
lods
jbe
cmpsl
cmpsl
in
loopne
add
sbb
adc
mov
inc
movsb
js
lcall
fmul
js
push
lcall
push
dec
and
rclb
out
test
jb
call
adc
das
push
xchg
sar
sub
stos
cli
adc
xchg
mov
cmpb
out
pop
loop
test
test
push
fbstp
dec
pushf
jae
shlb
dec
test
and
outsl
repz
push
mov
in
cli
sar
pusha
cmpsb
jne
sbb
pop
cmpsl
jmp
das
pop
je
dec
iret
pop
mov
push
das
mov
push
ret
xchg
lret
daa
pusha
mov
into
ja
add
adc
cmp
push
je
xor
push
dec
sub
xchg
adc
enter
pop
dec
rorb
negb
push
mov
pop
cltd
mov
pop
addl
push
mov
lods
in
adc
jae
or
enter
aaa
ds
dec
gs
xor
int
mov
cli
clc
push
xchg
push
xchg
imul
jge
mov
jbe
cmc
add
mov
int3
adc
inc
sbb
mov
inc
xchg
adc
gs
test
out
lea
rol
or
shr
sarl
aam
adc
test
in
ss
xchg
lea
xlat
mov
sub
or
or
sahf
mov
mov
dec
repz
sbbl
mov
inc
and
push
xlat
dec
leave
or
aad
pop
in
or
scas
mov
loopne
test
inc
loope
orl
jne
add
popf
fistpll
arpl
sbb
outsb
jecxz
outsl
mov
in
cwtl
push
push
daa
adc
push
jg
test
cld
test
out
sbb
inc
nop
inc
mov
lret
cmp
fwait
rclb
pushf
out
out
xchg
leave
mov
out
cmpsb
pop
and
jno
es
cmp
cmp
ja
lods
fdivs
mov
loope
xor
mull
cwtl
sub
stc
addr16
mov
fcoms
push
mov
inc
mov
add
out
call
das
lods
test
or
xor
aas
jb
push
push
cmp
nop
js
mov
jno
dec
fnstsw
shll
in
pop
sub
xor
loop
lods
dec
jns
xor
pop
cmc
lret
repz
aad
call
fld
stc
mov
mov
sbb
mov
mov
fisttps
pop
cmp
jmp
shrb
xor
or
push
aas
inc
add
pushf
es
push
cltd
inc
and
sub
pop
test
outsl
pop
repnz
pop
filds
inc
std
out
imul
adc
pop
shrb
decl
call
add
jo
pop
fs
dec
stos
scas
jns
sbb
jae
adc
outsl
jmp
cwtl
or
pushf
adc
roll
dec
call
cmp
fs
mov
pop
adc
dec
inc
inc
loop
or
sbb
xor
push
fisubs
rol
inc
rorl
pop
rolb
lods
gs
push
xor
xchg
cld
dec
inc
jle
iret
dec
fnstcw
pusha
xor
pop
and
mov
sub
aaa
push
jo
push
dec
mov
fsubl
xor
lret
xor
loopne
stos
and
loop
push
jnp
lahf
mov
mov
push
xor
add
in
sbb
dec
cmp
dec
repz
jbe
hlt
aas
sbb
into
xlat
xchg
push
test
lcall
cmpsl
das
mov
add
js
cld
sub
sahf
mov
leave
xchg
mov
ja
sbb
xchg
movsl
fimull
arpl
mov
xchg
sbb
pusha
push
pusha
add
inc
adc
sbb
seto
and
adc
sub
cs
filds
out
cltd
pop
pop
xor
inc
cmp
or
sahf
mov
int
xlat
jmp
ss
or
mov
or
sbb
orb
leave
mov
jns
push
add
pop
stos
push
dec
xchg
sbb
cmp
sub
adc
pop
rcrl
xor
xor
in
iret
ljmp
xchg
and
loopne
int
xchg
add
push
out
pop
jns
cmp
addr16
fidivrl
dec
lret
aam
imul
nop
pop
or
xchg
add
xchg
fisubrl
xchg
negb
xor
xchg
xor
adc
int
inc
dec
xlat
and
ds
xor
jns
inc
inc
outsl
cmpl
xor
flds
pop
negl
sahf
insl
jg
jnp
das
test
daa
jnp
push
and
int3
jb
mov
addr16
jecxz
inc
and
push
sbb
cmp
pop
out
inc
or
inc
imul
js
dec
or
dec
pop
pop
test
dec
cltd
mov
fstl
inc
adc
inc
jle
pop
adc
pop
popf
dec
bound
mov
cmp
push
rcrb
jl
mov
loope
fs
pop
pop
out
or
add
nop
aas
fcmovnb
mov
pop
dec
cmp
jg
sbb
div
jmp
mov
jl
iret
add
jmp
int
push
ret
sbb
loopne
out
insl
sbb
daa
mov
clts
sub
gs
mov
nop
loopne
cwtl
jne
lds
xor
xchg
dec
sbb
push
inc
add
cmpsl
gs
jmp
call
sbb
loopne
adc
popa
lret
cmpsl
in
xor
cmpsb
xchg
adc
sbb
or
cmp
or
sahf
cmpsb
dec
nop
push
xchg
cmpsb
cmc
outsb
jg
aam
add
pop
add
xchg
int3
fdivrs
lods
inc
fildl
dec
sub
out
mov
dec
repnz
mov
jno
inc
pusha
cld
mov
jl
adc
gs
pop
stos
xchg
testl
enter
outsb
inc
or
cmpsl
add
sbb
jo
repz
push
pusha
idivl
mov
xor
mov
mov
in
sbb
adc
ljmp
jg
movsl
loop
pusha
rcrb
mov
mov
shll
cmp
rolb
lret
dec
pop
dec
push
ljmp
add
popf
xchg
pop
jb
mov
ds
push
jl
jle
pop
push
dec
shr
xchg
push
adcl
repz
mov
push
out
daa
cmp
xchg
xchg
addr16
mov
jecxz
mov
mov
lods
fnstcw
push
fwait
loopne
push
xchg
xor
inc
and
push
xchg
pop
inc
cmc
adc
ja
mov
in
inc
dec
xchg
push
insb
pop
fisttps
repz
and
mov
cld
xor
stos
add
shlb
into
dec
lods
mov
mov
sbb
popa
adc
push
pop
lcall
jle
lret
das
test
sahf
push
cmpsl
ret
mul
adc
inc
cmp
adcl
loop
lret
push
mov
push
aad
shlb
add
lods
cmp
push
jecxz
enter
popa
add
adc
dec
mov
jp
jae
rorl
xchg
jae
sbb
jno
sub
pop
inc
pop
mov
mov
dec
dec
jno
xor
inc
push
push
or
sbb
imul
jo
or
xchg
es
decl
out
and
pop
push
jmp
ss
or
dec
out
xchg
imul
test
lret
sbb
iret
add
add
cwtl
push
jl
popa
nop
cli
in
cmpsl
pop
dec
lods
add
faddl
dec
adc
mov
xchg
jae
and
roll
sub
shr
mov
lahf
or
cltd
cld
mov
jecxz
sbb
enter
add
cmpl
in
xor
cmp
testb
ret
mov
inc
fs
mov
xor
stc
mull
cmpl
fldt
adc
ss
mov
scas
repz
sbb
cli
sbb
fstpt
mov
nop
out
iret
or
arpl
cmp
lcall
aam
mov
push
sbb
out
icebp
mov
sbb
pop
cmp
pushf
movsb
cmp
mov
jne
jge
lock
push
inc
add
fcomip
sbb
push
aad
loop
in
jb
or
sbb
sbb
int3
loope
fisttps
jns
out
push
mov
jae
push
push
pop
cmc
notl
and
sbb
push
das
jnp
jmp
inc
mov
je
add
dec
loope
or
outsl
mov
daa
xor
xchg
in
dec
sbb
cli
bound
mov
enter
or
aaa
loope
hlt
or
or
adc
lahf
push
mov
daa
xor
inc
mov
stc
xor
sbb
rorb
test
scas
popf
leave
hlt
cmp
pop
cmp
insb
xor
rclb
movl
adc
arpl
adc
inc
js
pop
push
jmp
popf
mov
aad
jae
jbe
mov
daa
xor
add
xor
es
and
clc
aas
fnstcw
out
lcall
jb
pop
subb
loope
mov
in
movsb
dec
xor
dec
sahf
pushf
add
mov
aad
inc
cmc
lock
ds
out
call
fiaddl
test
mov
dec
adc
pop
mov
or
lods
and
test
scas
mov
lcall
cmp
add
arpl
jle
pop
das
jb
sub
jge
cmc
in
cmpsl
fstps
jecxz
test
mov
mov
sti
cli
jmp
ror
pop
and
fistl
call
repz
loope
adc
dec
scas
xchg
cmp
add
xchg
mov
mov
sub
xor
dec
sub
stos
and
rorb
jae
pop
xchg
lds
sbb
jmp
bound
xchg
pop
out
testl
bnd
adc
push
jecxz
stos
cs
aaa
push
loop
icebp
cmp
das
xchg
and
int3
sub
negl
out
sbb
imull
xchg
fcoml
cli
xchg
lcall
adc
pop
arpl
mov
or
std
pushf
shrl
inc
stos
popa
inc
sub
mov
add
mov
jge
push
call
lods
imul
int
and
ds
mov
dec
gs
pop
inc
sbb
shrb
out
dec
bound
movsl
outsl
flds
ror
inc
dec
xor
std
test
and
mov
mov
cltd
arpl
mov
adc
es
cmp
and
mov
cmp
sub
les
push
ja
sti
into
cld
arpl
data16
mov
pop
lds
stos
and
xchg
xor
pop
ja
xchg
aad
adcb
nop
hlt
and
test
mov
mov
adc
les
jbe
sub
mov
adc
mov
mov
and
pop
jge
mov
dec
mov
aad
dec
mov
inc
out
xor
ds
xor
cmpsl
js
bound
mov
fs
shll
lret
or
or
mov
mov
fmul
out
popf
std
ret
ss
shll
fidivrl
movd
inc
scas
inc
pusha
sbb
mov
xor
lret
in
mov
incl
push
andl
fbstp
scas
jmp
push
das
stos
fs
cmp
jg
ljmp
pop
jbe
adc
xor
add
je
push
std
xchg
pop
jmp
fisubs
mov
in
repnz
enter
lods
xlat
and
mov
jns
mov
decb
pop
mov
sbb
and
fisubl
icebp
dec
shlb
push
addl
and
cld
fmul
add
popa
sub
and
ljmp
fldenv
mov
and
pushf
ljmp
out
cmp
sti
call
adc
add
mov
js
adc
cmp
add
pop
clc
jne
xlat
or
loopne
out
and
sbb
loope
popa
loope
dec
jg
test
in
loope
shl
mov
clc
jne
pop
das
outsb
stc
insb
mov
sahf
mov
cwtl
ret
and
jne
push
pop
sbb
enter
fdivl
test
add
lds
cltd
lahf
mov
mov
pop
sbbb
jecxz
xchg
sbb
in
inc
pop
dec
mov
das
mov
repz
dec
jo
add
test
call
sbb
mov
fidivs
sub
orb
mov
mov
xor
and
movsl
pop
adc
rcrb
mov
mulb
outsb
jp
cli
mov
sub
adc
movsl
adc
loope
mov
es
out
and
mov
movsl
mov
mov
jge
mov
jl
or
jg
movsl
adc
push
nop
addb
push
and
mov
adc
pop
lahf
jle
repnz
jp
mov
gs
leave
sub
rcrl
cwtl
and
imul
jmp
mov
cmpsl
xlat
addr16
aam
xchg
cli
fisubrl
cmpsl
nop
stc
jecxz
sbb
and
pop
sub
dec
pushf
sub
mov
aas
fwait
mov
mov
dec
dec
shll
xor
test
xchg
int3
add
add
fiadds
mov
ficomps
pop
dec
add
aas
mov
xor
je
mov
sub
sti
mov
sub
popf
int3
cmpsb
out
cmp
cmp
adc
pop
stos
dec
in
adc
and
push
call
mov
sti
xchg
xchg
pushf
and
jbe
xchg
jge
mov
inc
aad
stos
stos
dec
es
test
mov
ffreep
fcoml
pushf
incb
sahf
add
aad
fadds
mov
inc
in
divb
xorl
vpmacsww
mov
xchg
mov
ret
lcall
jbe
pop
mov
cmp
mov
nop
jge
ljmp
mov
pop
fsubrs
mov
push
sti
arpl
jge
movsb
sbb
es
mov
dec
aad
insb
mov
lods
lods
or
cmpsb
mov
cmp
cmpsl
xchg
enter
sbb
popf
sub
cltd
inc
jns
fs
call
dec
mov
cmp
xchg
jl
enter
into
xchg
pop
out
add
mov
aaa
cli
push
lods
icebp
inc
aam
mov
loope
xchg
adc
and
js
out
push
mov
add
sahf
cmp
and
pop
push
adc
push
xchg
jne
fadd
inc
lret
xchg
dec
test
adc
lods
push
les
mov
int3
inc
xor
lcall
inc
dec
sub
mov
imul
addb
sbb
and
dec
lret
and
mov
lret
std
int3
cli
mov
outsl
jae
aam
insb
ret
fbstp
mov
adc
nop
iret
inc
fs
in
jo
add
or
inc
jge
mov
push
inc
imul
enter
mov
pop
lea
je
pop
imul
xchg
loopne
mov
cmp
inc
and
pushf
out
notb
lea
push
xchg
xchg
pop
popf
out
cmc
add
or
xchg
shll
fisttps
push
mov
pop
movsb
jb
mov
pop
pushf
int
or
xchg
in
dec
je
loopne
dec
loope
aas
dec
mov
fiaddl
lcall
sub
imul
jle
pop
adc
lcall
inc
adc
jmp
dec
rolb
ret
cld
jecxz
in
xor
daa
xor
mov
js
dec
loopne
cmp
mov
push
lret
xor
inc
sbb
out
add
push
lret
roll
lret
push
ror
fisubrl
outsb
mov
aas
pop
sub
lock
push
cmp
lahf
repz
dec
scas
shl
adc
cmpb
add
add
push
scas
fsubrs
cvtpi2ps
mov
mov
sbb
in
pusha
movsl
push
popf
push
shl
dec
cld
or
lahf
repnz
test
cmp
in
ret
and
push
mov
and
adc
mov
iret
lods
mov
lret
mov
imul
cmp
leave
xchg
js
cltd
jle
mov
sbb
mov
in
xchg
mov
and
mov
out
mov
or
mov
adc
sub
pop
jbe
lock
push
pop
sub
push
sti
push
ret
daa
push
xor
mov
inc
inc
sub
out
cmp
daa
jbe
mov
andl
push
mov
popa
and
lods
dec
adc
arpl
jl
push
fisubl
inc
int3
mov
or
dec
fwait
cmc
loopne
mov
out
fidivs
or
jnp
dec
cmp
adc
cmc
inc
dec
aas
and
mov
mull
push
rcrl
sahf
or
nop
and
push
pop
cli
pop
push
inc
fstps
jbe
hlt
movsl
xchg
out
sahf
cmp
adc
push
add
movsl
std
xchg
mov
xchg
push
lcall
cmpsb
shrl
cmp
jbe
lods
enter
mov
rorl
pop
addr16
fisttps
stos
in
nop
aad
aaa
rcr
cwtl
pushf
mov
je
jbe
daa
cmp
adc
ljmp
popf
sti
dec
pop
sub
mov
jge
repnz
inc
into
xor
adc
lods
ja
jno
jno
in
int
add
mov
mov
xlat
test
cs
inc
lods
jo
outsb
fisubl
sbb
movsl
pusha
xchg
das
je
mov
out
cltd
mov
out
cli
stos
inc
jge
test
push
icebp
and
adc
fs
aad
cmc
jg
pop
test
adc
jb
add
dec
mov
add
inc
mov
jbe
pushf
add
hlt
mov
inc
and
lret
pop
sub
and
jg
jp
pusha
dec
out
push
das
jge
cmp
xor
xchg
adc
jl
xchg
js
aaa
shll
shll
add
das
lahf
mov
aaa
in
aad
mov
mov
jns
mov
or
aam
jo
adc
out
inc
push
push
fabs
push
xchg
aam
add
sahf
int3
and
jle
and
push
popf
push
clc
push
pop
push
push
xchg
inc
fisubl
cli
ror
jno
jmp
loope
or
outsb
mov
inc
add
leave
ret
cmpsl
inc
add
cmp
test
mov
shl
sbb
loop
iret
pop
adc
mov
pop
xchg
jge
or
scas
mov
mov
cwtl
in
push
cmp
adc
xchg
cmp
cmp
outsl
cld
add
sbb
mov
and
arpl
sub
pop
push
icebp
out
loopne
mov
mov
negl
cmp
cmp
nop
and
paddq
mov
push
das
ja
mov
xchg
adc
lret
cmc
sahf
inc
imul
xor
inc
popf
cli
push
jno
xchg
sti
add
lods
call
jmp
cltd
loop
in
dec
ljmp
insb
mov
fistl
stc
in
jg
shll
jl
dec
stc
movsb
dec
push
sub
push
dec
jno
scas
mov
popf
pop
xchg
stos
xchg
xchg
into
cmovbe
xchg
pusha
bound
fstps
popf
test
adc
push
ss
fwait
or
loopne
or
add
daa
mov
cmpsl
ja
inc
imul
push
hlt
push
daa
jecxz
inc
cmp
adc
fnstsw
dec
cmp
andl
repz
stos
mov
fs
data16
xlat
popf
std
xchg
loopne
dec
mov
out
xor
roll
loopne
sbb
movsl
movsl
or
aad
mov
inc
push
aad
ss
add
dec
push
xchg
dec
popf
jno
cmpsb
xabort
clc
in
cmc
inc
cmc
jl
movsb
jp
pusha
stos
loope
and
cmp
and
data16
lods
lret
dec
lods
hlt
xor
mov
push
test
addb
xchg
adc
pusha
mov
xchg
inc
jg
loop
and
lock
add
arpl
stos
jns
imul
jle
popf
call
add
paddusb
cltd
fstl
js
lcall
les
sbb
repz
andl
mov
xor
mov
pop
rclb
sub
pop
jg
cli
in
jg
pop
jge
test
rcll
sti
das
insb
xor
ja
jle
sbb
in
test
lds
and
push
mov
mov
add
imul
or
push
xchg
les
sub
out
fistps
lahf
mov
push
jnp
dec
xor
ljmp
jl
movsl
sub
cmp
sbbb
xlat
leave
lcall
add
sti
inc
daa
shrl
push
sub
jge
out
ss
in
enter
out
stos
push
testb
rcll
push
dec
adcb
fcomip
pusha
subb
rorl
iret
push
popa
arpl
mov
insb
xor
mov
sbb
xchg
fadds
fstpl
xchg
push
adc
dec
sti
pop
cmpb
insl
nop
iret
out
sbb
jb
mov
mov
xadd
ficomps
sti
cmp
dec
push
shrb
push
jmp
pop
jns
adc
jmp
les
scas
pop
mov
xchg
aam
xor
xchg
jne
xorl
sub
inc
push
cmp
jno
out
or
sub
ss
in
mov
lods
pusha
pop
adc
sub
mov
xchg
jae
adc
sbb
mov
pop
xchg
push
or
outsb
lret
xchg
test
pop
lods
mov
je
mov
xchg
fcmovnb
xor
loop
jnp
jnp
popl
pusha
sbbb
cs
loope
mov
jl
loope
jmp
adc
push
call
inc
mov
push
negl
and
ret
repnz
pop
push
mov
mulb
cmp
sub
jmp
jo
fidivrl
pop
lahf
scas
jnp
lret
mov
aad
and
xlat
push
xor
push
adc
pop
cmpsb
push
idiv
rorb
and
push
lahf
adc
shll
pop
shr
add
jae
sub
lods
icebp
fcoml
sbb
jo
rcl
mov
in
cld
push
imul
mov
popa
repnz
jle
jecxz
add
jge
adc
or
mov
xlat
mov
nopl
hlt
or
std
xchg
and
int
pop
out
mov
xchg
push
add
std
ja
dec
enter
out
xor
repz
jne
and
data16
mov
inc
mov
mov
mov
js
mov
iret
inc
cmc
ss
mov
hlt
or
fimull
jecxz
push
repnz
jb
negb
aaa
cmpsl
xchg
adc
mov
xchg
dec
inc
mov
lahf
fimull
rorb
fwait
scas
nop
push
gs
jae
mov
and
jne
xor
jnp
add
fdivs
fcmove
es
das
aad
scas
cli
push
dec
inc
les
push
cmp
cld
cmp
sti
or
scas
mov
lock
mov
test
lret
ret
inc
daa
inc
push
lods
popf
xorl
xchg
sub
lret
xor
xchg
sahf
mov
clc
adc
and
push
cwtl
lret
aas
push
cltd
movsb
std
xlat
fnstsw
dec
xor
and
outsb
arpl
inc
pop
fnstsw
mov
sahf
out
ret
shl
mov
dec
inc
cmp
je
aaa
mov
frstor
scas
call
pop
jne
dec
pop
inc
loop
adc
push
sub
mov
mov
mov
push
repz
lret
xchg
push
jbe
dec
jl
xorl
call
mov
pop
mov
leave
sbb
enter
sub
pop
es
cmp
mov
cmp
push
jnp
dec
rolb
scas
adc
scas
mov
xlat
subl
sbb
mov
fidivrl
gs
fsubrp
xor
or
inc
xchg
mov
cli
mov
rclb
addr16
sbb
xchg
cmpl
or
xchg
cmp
adc
mov
mov
mov
sbb
mov
in
sbb
mov
dec
insb
inc
hlt
sbbl
andl
jp
pop
jb
and
jns
mov
shl
lret
dec
flds
ret
mov
lret
mov
and
fstps
dec
mov
mov
xor
rcl
mulb
xor
mov
add
xor
adc
sbb
xlat
loopne
sti
out
jmp
push
xchg
mov
inc
test
jnp
pop
ja
into
cltd
jl
push
jns
fstps
flds
bound
sbb
push
iret
lahf
mov
or
adc
push
sahf
pop
ret
jmp
mov
sub
dec
cmp
and
mov
xchg
xchg
dec
insb
outsb
add
push
inc
push
lret
push
jmp
sti
test
fdivrl
mov
jecxz
mov
and
pop
out
cli
ja
data16
jae
and
loopne
jno
pop
lods
add
fs
into
sbb
pushf
sbb
into
cli
lds
andb
push
sub
sbbl
and
scas
xlat
sub
leave
pop
gs
sti
stos
xorl
inc
mov
in
sbb
lret
pop
xchg
aas
xor
test
lds
mov
xchg
sbb
sti
aam
mov
cmpsl
sarb
pushl
inc
arpl
in
mov
subb
mov
cmp
loope
orl
xor
push
push
push
xchg
jp
or
jle
mov
in
push
mov
out
test
sub
adc
pop
xlat
jle
inc
sbb
in
insl
imul
pushf
ficomps
ss
cmp
and
xchg
cmpsl
mov
mov
ret
push
testl
xor
test
cmp
not
lret
inc
push
dec
cmc
dec
and
leave
fsts
lods
dec
outsl
mov
push
jp
cmpsb
mov
insl
adc
xor
scas
cmpsl
gs
push
rcrb
sub
inc
mov
mov
test
cwtl
push
repz
in
icebp
sub
out
iret
pop
pop
push
scas
mov
pop
mov
std
jnp
icebp
jge
outsb
mov
mov
out
adc
aad
push
and
mov
push
ljmp
xor
jl
adc
mov
cmp
mov
mov
and
data16
loopne
mov
push
add
ret
add
sbbb
lds
lock
ficompl
push
mov
mov
jo
jmp
into
or
sub
and
aaa
mov
adc
stc
or
outsb
daa
xchg
call
sbb
sub
rcrb
test
and
add
stc
test
hlt
mov
mov
rcrl
adc
dec
aaa
cmpsb
call
test
and
lods
cmpsl
push
xor
or
adc
daa
and
add
sbb
adc
adc
lahf
mov
int
cmp
or
mov
ret
xor
repnz
into
leave
dec
jmp
test
sub
ds
nop
rcl
shl
shll
idivl
xor
pop
movb
clc
rcrb
jae
pop
jns
mov
int3
outsl
add
fwait
push
jg
data16
pop
test
in
jne
mov
sahf
rorb
ret
iret
pop
inc
fcmovnb
mov
int3
push
inc
xchg
test
add
imul
push
call
nop
movsl
sar
push
jae
repz
fdivrs
dec
or
js
stc
fisubrs
mov
fistl
jb,pt
shlb
xor
and
sub
mov
in
jle
jbe
adc
push
jp
sbbl
jae
sarl
inc
add
inc
xor
sbb
pusha
jge
lea
mov
mov
mov
jp
int3
arpl
imul
test
or
mov
into
pop
out
repz
faddl
lock
gs
and
sub
xor
xor
aaa
pop
hlt
jno
inc
hlt
sbb
pusha
in
sub
cmpsl
push
lock
xchg
movsb
in
fcompl
hlt
push
out
mov
mov
add
scas
mov
mov
out
andl
daa
loop
loopne
cld
addb
sahf
in
push
mov
outsl
xchg
fsubs
cmp
add
fisubrl
adc
and
aaa
xchg
orb
imul
ds
pusha
shl
jmp
and
or
cmc
sarb
fldt
push
or
leave
and
test
add
sbb
loop
mov
fstl
inc
icebp
fs
sbbl
aad
dec
rorl
test
cltd
mov
jns
out
into
inc
dec
xchg
or
cmp
push
or
inc
mov
pop
jecxz
mov
cmp
stos
rclb
or
mov
imul
fbstp
mov
xor
mov
mov
cmc
xchg
dec
pop
aas
sbb
sub
xchg
es
sbb
mov
inc
fldcw
out
jo
jl
roll
pop
mov
in
sub
aas
repnz
mov
jns
pop
jmp
add
mov
mov
fcomp
in
mov
mov
push
stos
out
sahf
test
arpl
dec
or
mov
ficompl
push
ss
push
inc
pop
je
gs
and
into
xorb
jecxz
jo
outsl
xchg
xchg
in
stos
adc
mov
lcall
dec
push
dec
pop
add
xchg
jae
pop
push
jl
inc
inc
icebp
pop
push
mov
inc
mov
pop
cmp
hlt
xchg
jno
xchg
mov
outsl
hlt
push
in
add
xchg
dec
call
jae
push
xor
jp
sbb
push
xchg
sub
imul
fsubs
das
insb
bound
cmp
std
lcall
shll
les
xchg
sub
sub
cld
punpckhwd
cmp
inc
decl
jo
lret
pop
dec
inc
jmp
xor
iret
or
jo
pop
cld
imul
fucomi
bound
bound
jmp
dec
shll
mov
xchg
pop
jne
jmp
cwtl
loope
cli
in
xlat
mov
xchg
mov
xor
gs
push
mov
gs
jg
ljmp
push
and
fwait
sub
stc
xchg
adc
jmp
or
inc
push
mov
and
cmpsl
ss
jp
push
sbb
lret
or
inc
jns
loopne
mov
inc
stc
xor
add
and
insb
dec
rorl
mov
je
adc
sbb
inc
dec
xchg
pop
dec
jb
mov
loopne
lahf
ds
jo
push
add
sahf
add
rcrl
pop
cmp
push
repz
out
mov
xor
adc
cmp
leave
repnz
js
push
jge
dec
xor
adc
jo
jle
sub
int3
daa
mov
movsb
cmpsl
std
mov
jb
leave
push
sbb
push
ret
call
pop
adc
aaa
fnstcw
rorl
or
xor
out
rclb
pushf
das
int3
imul
gs
fimull
insl
in
roll
into
mov
jg
sub
stos
mov
push
push
and
sbb
into
rolb
repz
adc
cld
data16
lods
jle
mov
lds
inc
mov
pusha
cmpsl
or
lret
mov
dec
pop
int3
and
jmp
pop
or
sub
push
scas
into
lcall
arpl
push
je
mov
jl
test
pop
mov
mov
cld
imul
adc
mov
and
or
jmp
lcall
adc
stos
lods
call
mov
cmp
jnp
push
lcall
mov
stos
mov
je
cmpsl
stc
test
aas
out
cmpl
sub
jbe
dec
call
lret
push
stc
stos
pop
jns
sub
inc
aad
adc
push
sahf
test
data16
out
push
imul
inc
sub
and
ja
ret
jg
ficoml
mov
fucomi
cmp
mov
js
es
push
gs
jb
or
nop
shr
pop
notl
repz
pop
shr
mov
push
jbe
xchg
mov
add
add
std
into
pop
pop
fsubl
inc
addr16
pop
inc
add
clc
mov
mov
mov
fxch
and
addr16
or
pop
imul
int3
sqrtps
aad
mov
mov
cltd
adc
mov
xchg
cli
cmpl
imul
popa
jno
mov
pusha
adc
call
pusha
stos
stc
popf
call
test
int
and
pop
or
mov
mov
push
popl
pop
fisubrs
inc
jb
popa
pop
test
call
jno
jno
fs
xchg
xchg
or
dec
rorl
aad
cmc
xlat
lods
cmp
or
test
jle
jmp
add
subl
xor
adc
mov
lds
cmp
mov
jecxz
cmp
or
mov
lea
sub
into
push
insl
add
dec
push
xchg
add
or
mov
and
subb
pusha
sbb
loopne
add
pushf
sbb
add
cmpsl
enter
add
sbb
cmp
adc
mov
jne
je
test
fwait
push
repz
ljmp
mov
mov
jp
insb
add
dec
dec
jle
dec
and
rclb
movb
mov
mov
xlat
aad
out
adc
pop
and
sub
inc
dec
mov
xor
int
outsb
loope
icebp
mov
xor
lods
aas
popa
dec
sbb
pop
sub
push
adc
hlt
repnz
mov
ret
stc
adc
or
pop
aad
lds
mov
mov
outsl
divl
xchg
pop
mov
shr
mov
mov
dec
jo
shll
sbb
clc
insb
pop
mov
mov
and
add
sub
stos
push
loope
test
insb
and
aas
xchg
faddp
pop
jecxz
test
mov
aaa
fs
das
scas
xor
xor
loopne
pop
pop
imul
nop
rorb
jbe
xchg
xor
jae
in
dec
test
ss
pop
cmp
rcrl
cmpsl
aaa
in
mov
insb
sub
ss
shlb
inc
call
jecxz
adc
test
cltd
dec
cld
and
xchg
fnsave
enter
jle
mov
mov
or
shll
addl
sub
test
popf
push
mov
shrb
push
imul
lahf
sar
in
cli
fucomp
arpl
jb
jmp
cltd
movl
add
push
mov
test
out
push
int
add
inc
xlat
push
sub
sbb
push
add
jl
sti
sbb
in
push
dec
push
aad
shrl
sbb
std
or
mov
jne
cmp
inc
std
movsb
jle
xchg
mov
divl
mov
test
fdivrl
ds
and
ret
sub
leave
xchg
sbb
xor
push
jmp
out
cld
iret
or
push
mov
jbe
xor
jmp
xchg
sub
and
add
cmp
cmp
sub
out
cmp
lods
mov
cmp
pop
aam
inc
outsl
sub
fcomip
out
iret
imul
outsl
stos
cwtl
call
adc
insb
sbb
lcall
loopne
sarb
mov
xchg
test
jb
loopne
rcll
lret
push
mov
inc
fnstcw
cmp
movsb
sbbl
ja
cmp
rcll
and
mov
ficoml
sbb
das
jno
adc
inc
mov
adc
stos
pushf
sub
mov
or
mov
push
cmp
mov
inc
icebp
push
xor
das
jle
mov
and
mov
mov
mov
jl
add
in
movsl
cmp
inc
fstl
sub
popa
lods
int3
cwtl
fdiv
adc
sub
fisttps
fstl
and
les
mov
test
sub
ds
xorl
xchg
fs
sbb
nop
fsubr
or
subl
imul
xchg
stos
and
gs
or
mov
sahf
mov
dec
cmpsl
sub
jno
push
fiaddl
sbb
push
hlt
jne
and
insb
fdivrl
fistpl
sub
outsl
adc
arpl
mov
in
cmp
pop
jnp
pop
xchg
mov
xchg
cmp
cmpsl
inc
adc
add
lahf
mov
jbe
jb
sbb
xchg
dec
xorb
test
jns
xor
ljmp
mov
fidivrs
push
mov
lods
pop
fcom
xchg
mov
sahf
inc
cmc
sub
push
add
push
mov
in
cli
bound
bound
jb
mov
aam
add
fdivrl
lcall
mov
sbb
lea
scas
out
addr16
pop
sbb
or
pop
fistps
sbb
mov
mov
mov
pop
jg
addb
icebp
lods
mov
jae
outsb
mov
jns
mov
out
pushf
insl
add
cmp
mov
add
fmul
and
ret
lret
push
push
stc
sub
mov
rcrl
push
loope
xchg
andb
pop
add
outsl
out
dec
addr16
xchg
or
fistpll
xor
in
pop
cltd
jl
mov
and
pop
mov
les
js
jbe
mov
push
push
xchg
sub
repz
mov
jae
movsl
movsl
push
sub
nop
scas
jno,pt
daa
sbb
push
ficoml
dec
xchg
shll
xor
scas
popf
sub
subb
repz
fcmove
adc
ds
xor
stos
or
sahf
sbb
mov
dec
push
mov
psubb
ljmp
mov
negb
xchg
sbb
push
mov
stos
xchg
outsb
pop
jnp
popa
dec
fimull
into
imul
lahf
paddsw
adc
and
fwait
cld
dec
lea
or
sbb
sbb
notl
cmp
sbbl
inc
dec
xor
pusha
iret
sbb
mov
sub
popa
push
sub
adc
fcmovnbe
push
das
fnsetpm(287
sub
iret
stos
test
add
push
testb
push
xor
stos
aas
data16
cmp
bound
mov
lea
ret
incl
inc
pop
int3
xor
sub
es
aad
bnd
pop
add
mov
sbb
outsb
test
cmpb
cs
dec
or
insl
sbb
repz
adc
mov
or
mov
sub
es
cmp
xlat
mov
inc
jg
andb
dec
lret
inc
aad
sub
pop
test
sbb
pop
jecxz
jmp
xor
inc
cmp
inc
test
idivl
add
out
or
cmp
mov
xchg
imul
je
shlb
fs
xchg
cmp
stos
pop
cmp
mov
pop
add
shlb
dec
jp
pop
std
sarb
push
push
push
test
imul
inc
xor
pop
shlb
cmc
aad
jle
andb
cli
jg
pusha
cs
leave
push
jp
sahf
or
or
nop
and
mov
loope
xor
cmpsl
inc
lcall
cmp
lods
mov
mov
ret
pop
lods
pushf
fs
mov
out
mov
mov
leave
pop
mov
cmp
pop
and
movsb
out
adc
lods
aas
or
movsb
stc
xchg
rolb
cmp
hlt
dec
xor
add
mov
mov
dec
pushf
dec
stos
mov
stos
decl
rsm
mov
sub
dec
mov
testl
pop
addr16
add
pop
jnp
js
xchg
fimuls
cmp
je
xchg
dec
lods
mov
cmp
gs
in
int3
cmpsl
fs
arpl
leave
mul
push
fisubrl
mov
sahf
movl
icebp
mov
mov
or
loop
lret
and
popa
in
or
add
lret
pop
aas
scas
mov
sub
xor
shr
mov
mov
je
mov
or
pop
cltd
out
js
loope
add
xchg
imul
pusha
stos
js
cmpsb
jne
loope
add
sbb
or
hlt
push
addr16
jmp
inc
loopne
jmp
shrb
inc
sbb
and
sar
insl
lock
jbe
lahf
pop
sub
mov
or
fs
xchg
sbbb
je
test
out
inc
sbb
cmc
dec
lret
mov
sub
iret
enter
add
inc
xchg
add
adc
je
sub
mov
add
stos
sahf
repz
sub
call
add
mov
leave
pushl
pop
jnp
aas
jecxz
sbb
pop
mov
out
aad
push
test
sbb
clc
test
movsb
test
aad
ret
fs
jecxz
sub
mov
and
jne
mull
add
in
push
mov
or
cmp
loop
dec
xlat
cli
dec
cmc
fs
lahf
ret
addr16
mov
mov
subl
push
insl
int
imul
fcoml
inc
sub
in
lea
dec
ret
adc
xor
inc
push
pusha
sub
sti
adc
adc
fmuls
jno
cltd
inc
dec
leave
out
test
gs
cld
sub
gs
into
es
dec
test
enter
movsl
inc
in
pop
push
mov
mov
xchg
loopne
out
test
sbb
dec
lcall
jns
xor
sbb
aas
mov
rolb
mov
ret
pop
roll
fsubr
mov
cmp
test
test
xor
fwait
xor
aas
or
subb
sub
es
cmp
mov
in
loopne
adcl
stos
adc
jl
inc
std
je
jne
pusha
lahf
xor
imul
lret
stos
lretw
pop
mov
scas
and
loope
daa
cmc
xor
shlb
iret
fs
lds
push
pop
pop
pop
xlat
pop
mov
mov
stos
push
scas
sbb
inc
outsl
lahf
push
push
xor
sahf
cmpl
loopne
out
pop
std
popa
lods
iret
jge
loopne
movsb
push
leave
cmpsl
rcl
jbe
mov
loop
mul
push
xor
jno
dec
mov
mov
pop
cltd
leave
adc
xchg
jg
or
int
mov
adc
pop
lret
xlat
rorb
cld
out
std
stos
aad
ds
inc
and
movb
sbbl
fwait
mov
lret
nop
dec
push
adc
jae
xor
push
shll
loop
xor
sbb
loop
adc
xchg
adc
fmull
inc
push
inc
dec
and
pop
movsb
lea
cli
es
mov
lret
std
pop
stos
jae
or
push
dec
xor
incb
adc
int3
jp
fildll
pop
into
xchg
sbb
xchg
insl
or
jl
lea
adc
ret
or
sti
shlb
fwait
mov
mov
sbb
and
mov
jnp
aaa
xor
lret
xor
dec
sbb
leave
dec
sub
sahf
mov
sbb
nop
sub
jecxz
inc
xchg
sti
jae
mov
ss
adc
inc
or
scas
loopne
adc
lret
mov
dec
rorl
lret
xchg
setnp
sti
push
inc
cmpsl
mul
xor
clc
add
jb
jp
jg
cmpsb
ja
mov
push
or
mov
outsb
push
sbb
cmp
lds
stos
popf
in
cmp
jmp
leave
ja
jb
jne
imul
cs
inc
fistpl
add
push
repz
cmp
idiv
nop
push
out
ret
cmp
mov
and
fldenv
or
sahf
adc
mov
cmp
js
push
mov
fidivrl
fmul
arpl
fcoml
mov
roll
push
add
cmp
bound
sbb
jne
rcrl
xchg
inc
fisttpl
xorl
xchg
mov
push
scas
sbb
xorl
pop
dec
mov
int
sti
lds
fxch
mov
pop
jge
push
bswap
test
shrl
call
jnp
test
cmc
mov
sbb
and
rol
test
loopne
add
aam
cmp
lods
shl
push
push
ljmp
fstps
push
test
clc
out
xchg
add
bound
dec
rolb
add
sbb
xor
jge
jae
mov
nop
test
sub
mov
inc
dec
cmpb
or
dec
push
roll
add
das
dec
cld
arpl
dec
and
mov
cmp
idivl
inc
cmpsl
or
push
out
push
lock
xor
mov
pop
outsb
test
pusha
pop
push
lret
lds
popf
nop
mov
shlb
sbb
add
jmp
lods
pop
sbb
cltd
or
cmp
sub
jns
stos
push
cmp
mov
les
mov
mov
sbb
in
push
ss
and
shr
fdivr
sub
and
cmp
popf
sbb
iretw
addb
mov
jnp
rolb
ja
mov
sarb
rcrb
aas
insb
pop
dec
dec
scas
scas
cli
lds
pmulhw
ret
or
push
mov
pop
imul
lock
pop
into
insl
lods
ror
dec
leave
pop
sbb
pop
dec
adc
lock
pop
jp
std
ja
sahf
mov
inc
mov
xor
sub
push
call
cmc
xor
mov
jp
add
push
fisubrl
imul
sub
in
inc
push
addr16
sub
shrl
lcall
insb
mov
or
lds
pop
sarb
inc
hlt
rolb
lds
add
repz
test
in
inc
mov
pusha
sbb
jo
dec
jmp
sbb
shll
mov
loop
mov
adc
adc
xor
dec
in
dec
xor
pop
sub
xchg
gs
add
enter
jl
push
jmp
inc
push
imul
test
adc
fs
xor
icebp
outsb
das
mov
in
scas
enter
out
jl
mov
insb
cmp
xchg
push
rcrl
pop
or
or
inc
ja
loop
ds
lods
sarb
xlat
test
inc
jae
test
imul
ss
ret
call
adc
xlat
inc
adc
outsb
mov
js
insb
mov
fwait
jb
adc
mov
imul
mov
jmp
and
ss
aam
test
mov
ljmp
in
mov
or
or
mov
lret
movsb
inc
shlb
fstl
mov
or
repz
sbb
mov
dec
jns
lds
subl
out
pop
call
mov
xlat
pop
les
ret
xor
mov
mov
push
or
inc
into
out
into
pop
adc
es
clc
xchg
dec
test
lock
cmp
sbb
or
sub
mov
rorb
add
or
jbe
ja,pt
lods
pop
aad
jge
xlat
test
fwait
je
jae
cmpsb
jb
dec
xchg
lods
sbb
jl
and
imul
push
cmp
in
push
cmp
out
mov
jb
mov
fsts
mov
mov
cmp
popa
pushf
mov
push
fidivrl
mov
insb
andl
aad
sbb
iret
dec
ret
sub
daa
inc
mov
inc
sahf
jno
ret
nop
push
or
push
in
pop
lods
fcompl
add
inc
ret
mov
popa
addr16
and
jne
js
outsb
ficoml
cmp
imul
repz
push
mov
jge
rcrl
add
ss
mov
mov
ret
lds
cmc
sub
jge
lods
dec
push
sub
lcall
das
xchg
pop
popa
inc
clc
sub
lret
cmp
or
inc
jne
mov
lret
xchg
pop
xor
and
sbb
push
mov
push
mov
xchg
aad
out
in
push
iret
mov
and
mov
mov
push
rcll
rcrl
sbb
sar
and
sti
mov
xlat
dec
and
sbb
push
jne
repz
hlt
inc
mov
gs
mov
js
shrl
push
loop
ljmp
in
test
sub
lods
xor
jg
or
sub
popa
ret
mov
fistpl
das
dec
mov
repz
xchg
mov
pop
daa
inc
cwtl
in
test
inc
int3
pusha
loopne
push
daa
sub
scas
fmull
ss
fscale
jmp
pop
jo
cmp
subl
int
enter
or
notb
mov
les
adc
sbb
sti
iret
mov
rcrl
aad
fcmovne
cmp
aam
iret
outsb
test
cld
out
push
sub
shl
inc
fimuls
cmc
cmp
jp
mov
sub
popa
ja
lahf
mov
adc
sbb
fs
jge
cli
mov
sub
xchg
movsb
cmp
pop
sub
sarl
outsw
mov
inc
pop
rcl
adc
sub
and
cmp
inc
push
adc
popf
popa
or
dec
inc
fs
andl
inc
jmp
or
sbb
mov
xor
sub
cmp
mov
dec
les
testl
or
pop
add
xchg
xchg
sbb
or
jle
ret
xchg
std
movsl
mov
push
push
sbb
mov
xchg
cmp
fs
push
inc
hlt
pop
mov
add
pop
pop
fldcw
push
and
pop
mov
ret
fildl
xorl
sbb
pop
cld
je
mov
inc
cmp
xchg
pushf
stos
and
mov
into
cmpl
icebp
jecxz
test
xor
insb
fcomps
pop
in
repz
mov
dec
shll
adc
mov
stos
jo
adc
jg
imul
cmp
mov
dec
cld
fldl
cmp
mov
out
xor
bound
jecxz
aad
lcall
xchg
cmp
xor
addr16
jo
bound
or
mov
xchg
arpl
es
add
inc
das
ret
rorb
cmpsl
ficoml
cmp
icebp
fisttps
xor
out
mov
sbb
outsb
mov
arpl
fsubrp
mov
inc
fnstenv
test
adc
movsb
pop
sub
pop
adc
add
adc
push
fimuls
or
test
push
cs
loop
addr16
jg
and
cmc
arpl
into
cwtl
ret
gs
sub
mov
repz
xchg
sbb
lcall
fstpl
test
lods
jbe
les
jns
push
ss
pop
rcll
rorl
icebp
test
lcall
push
adc
pushl
push
sbb
xor
rorb
sbb
push
fwait
mov
outsb
and
cmp
popf
enter
fistpll
mov
pusha
loopne
mov
nopl
or
data16
out
bnd
xchg
cmc
cmp
fdivs
add
loop
lea
into
imul
and
jecxz
stos
or
adc
push
or
sbb
sbb
rorl
popf
sarl
push
movsb
imul
leave
xchg
inc
jge
mov
ja
mov
adc
sti
in
std
xor
test
repz
sbb
lock
mov
mov
cmpsb
cmp
arpl
mov
inc
adc
and
fs
shl
mov
mov
shr
lods
and
xchg
insl
or
push
push
sub
mov
cmp
leave
sti
test
xor
or
loopne
cmc
push
sbb
ljmp
mov
ss
xchg
jmp
add
icebp
push
xor
cmp
cwtl
pop
or
fwait
cld
and
add
cmc
js
push
push
cmp
cmp
push
jae
jns
scas
lret
in
lcall
loop
dec
push
add
xchg
inc
nop
pop
push
xchg
pushf
adc
xchg
push
sbb
mul
mov
mov
lea
int3
or
jns
adc
dec
ret
cmpsl
stos
lcallw
cmp
dec
pop
iret
xor
aaa
arpl
sub
xchg
lods
jmp
mov
push
dec
cmp
or
add
int3
xchg
push
ret
and
mov
mov
loop
pop
xchg
out
jmp
pop
cltd
adc
je
adc
push
sbb
push
sub
xor
cmp
and
mov
jle
adc
aaa
out
cs
dec
xchg
push
pop
sub
jns
jl
mov
sbb
mov
fstpl
imul
xchg
and
adc
movl
cmc
test
sub
adc
push
cmp
dec
std
push
inc
popa
test
hlt
adc
das
cmp
lret
mov
iret
mov
iret
push
daa
and
iret
div
adc
imul
mov
addb
push
inc
js
lret
or
dec
in
mov
imul
mov
fs
mov
adc
gs
jbe
xor
mov
jae
shll
mov
lcall
frndint
in
cmp
dec
sbb
lock
ficoml
dec
in
push
je
lock
mov
scas
mov
or
jnp
test
mov
mov
adc
sub
mov
add
int
push
cmp
in
sbb
gs
loopne
out
jae
and
push
push
jns
jno
mov
call
sub
lcall
cli
mov
pop
lock
ret
shl
gs
sti
or
sbb
jns
push
inc
adc
pop
xchg
sub
aas
mov
pop
add
arpl
cmp
mov
fidivs
xorl
add
movsb
in
repz
xor
sti
adc
jge
lcall
cwtl
fistps
mov
stos
jle
addr16
iret
mov
movsb
xchg
jbe
and
jae
adc
movsb
cmp
sbb
insl
sbb
stos
ljmp
jl
pop
xchg
mov
orl
lods
pop
int3
mov
push
sahf
inc
jne
inc
sbb
pop
imul
pushl
cmp
fdivr
lods
cli
ss
cmp
inc
mov
shr
rcll
pop
stc
inc
dec
lret
mov
das
jbe
push
lret
insl
mov
ds
ja
inc
push
sbb
cmp
idivl
push
adc
lea
or
fdivl
push
sbb
jg
je
dec
add
pop
and
cwtl
mov
mov
test
xchg
dec
push
mov
or
pusha
sarl
sti
xchg
cmpsb
sub
aas
dec
push
inc
push
outsl
xor
cltd
push
mov
popf
bound
out
test
cmp
jae
mov
pop
xor
fisttpll
adc
test
mov
mov
or
cs
cmpsl
mov
sti
mov
aaa
lcall
sahf
sbbb
lods
call
sub
add
iret
mov
imul
bound
cwtl
add
inc
outsl
xchg
push
lock
dec
push
inc
pushl
push
inc
in
mov
hlt
lods
repnz
test
xor
dec
or
aad
pop
mov
push
dec
mov
mov
inc
scas
shrb
lret
jecxz
aaa
jmp
or
and
shll
xchg
mov
out
push
xor
nop
popa
push
js
stos
jne
in
xor
icebp
lahf
out
in
jl
js
shlb
int3
xchg
stos
mov
hlt
in
lods
push
or
out
add
adc
in
mov
mov
fs
rorb
mov
jmp
lock
in
jmp
push
movsl
push
je
setns
xor
pop
out
pop
xor
cmp
dec
or
mov
pusha
jmp
xchg
dec
es
and
addl
xor
int
inc
lds
xchg
or
mov
push
sub
cwtl
fdivrp
ret
push
or
push
jno
add
scas
sub
aam
adc
cmc
leave
outsb
insb
idivl
adc
movsl
lods
adc
pop
aas
push
stc
in
push
stc
outsb
pop
out
add
es
inc
imul
xor
lds
mov
adc
pop
fwait
loopne
jae
add
sub
ss
aas
dec
lcall
ja
push
jmp
inc
push
jl
jmp
adc
mull
sti
cmpsb
jno
sbb
loopne
call
ret
add
outsl
in
add
shrl
or
or
aad
mov
adc
xchg
out
pop
icebp
rorb
lcall
and
sti
mov
cmc
push
push
mov
sub
xchg
sub
lret
lea
mov
cmp
adc
pusha
mov
nop
push
pop
call
mov
out
sub
inc
out
lret
movsl
and
addr16
xchg
test
dec
xchg
lock
mov
loope
fildl
insb
jmp
subb
xchg
test
lahf
push
js
push
test
loopne
jp
sbb
lret
test
outsb
jns
sbb
rcll
idiv
mov
push
cltd
push
bnd
xor
pop
xor
scas
mov
add
add
add
test
outsl
sub
mov
lock
sub
in
iret
clc
sbbl
hlt
push
jle
jb
cld
or
adc
sbb
push
jbe
sarb
adc
outsl
and
leave
rclb
or
adc
cmp
dec
test
xchg
fdivrl
lea
subb
fldl
outsl
ljmp
dec
jmp
add
xor
ss
cmp
fists
xor
sbb
inc
je
sahf
add
jo
fs
outsb
lahf
sbb
mov
fmull
and
pop
lahf
add
pop
movsb
ret
fildl
test
test
jg
out
add
add
cli
mov
sbb
fs
rorl
dec
ss
adcb
push
loop
out
fists
popf
xchg
in
mov
mov
out
pop
mov
inc
xor
in
add
xor
jle
or
push
cmpsl
mov
pop
je
addr16
xor
xchg
or
pop
inc
je
xchg
adc
mov
cmpsl
push
repz
sub
es
pop
xor
shrb
xchg
ss
push
mov
add
push
ret
and
shll
or
popf
push
jno
adc
cmp
push
data16
or
pop
jle
lret
dec
shr
insb
mov
sbb
sub
push
push
popf
movsb
lods
cld
loope
les
pop
add
sub
xlat
and
ja
mov
mov
notl
hlt
aas
ja
adc
test
cmp
cmpsl
enter
out
dec
sarb
pop
std
sbb
push
or
sub
xchg
fcoms
daa
fsubr
mov
inc
sbb
jp
mov
mov
nop
sbb
pushf
jbe
sub
outsb
fldcw
xchg
add
pop
fisubl
int3
enter
mov
pop
push
fnstsw
cmp
sbb
lret
stc
xchg
in
test
lock
arpl
xchg
cmpsb
leave
rcrl
test
add
imull
ret
mov
push
jp
lds
in
dec
adc
pop
lods
bound
arpl
test
rcr
rcll
js
mov
fldl
lret
lock
adc
jae
dec
mov
in
dec
pop
cwtl
or
sahf
jge
adc
and
lods
rcrl
xor
into
aad
pushf
sbb
inc
int
xchg
sub
cmp
das
sbb
dec
and
imull
and
mov
xchg
add
mov
dec
inc
or
mov
dec
mov
rcrl
xor
sbb
dec
call
jle
mov
cmp
mov
into
mov
push
xor
std
addr16
aas
outsb
pop
aad
pushf
mov
sbb
push
jle
xchg
gs
inc
ss
or
lahf
xchg
outsl
daa
or
ljmp
insl
sub
shll
push
pop
sbb
mov
xlat
out
mov
popf
dec
pop
and
lret
into
sbb
jnp
sahf
loopne
add
hlt
inc
pop
addr16
sbbl
adc
arpl
cmp
int
popa
imul
clc
nop
popa
mov
or
sub
adcl
xchg
pop
jle
scas
mov
or
inc
clc
scas
sbb
inc
hlt
pop
cmc
loopne
mov
gs
shlb
add
std
add
mov
cmp
in
imul
or
cmp
dec
inc
sub
dec
xchg
je
fnstsw
cmp
xchg
and
xor
vsqrtps
in
pop
js
jmp
jo
loope
fwait
adc
mov
pop
mov
imul
fs
jne
mov
sub
lret
sbbl
pop
adc
mov
ret
shr
fwait
push
mov
mov
xchg
jns
push
pop
mov
inc
cmp
mov
pop
fnstsw
stos
or
push
fsubrs
aaa
clc
dec
xor
ret
cmc
testb
test
mov
insl
ds
inc
push
ror
xor
adcb
daa
cmp
mov
js
jge
jmp
cmp
sub
pusha
or
jmp
mov
loop
lcall
or
xor
inc
or
adc
xor
sbb
scas
aam
pushf
push
gs
lds
sti
mov
cmp
test
dec
xorl
cmpl
aam
jmp
jno
mov
add
mov
xchg
xchg
adc
mov
xchg
sbb
insb
pop
sahf
ret
mov
mov
test
sbb
pop
xchg
xchg
cmpsb
mov
call
pop
inc
mov
xchg
xchg
jae
in
sub
adc
rorb
dec
push
es
imul
jne
das
xor
add
jp
inc
xchg
push
adc
inc
xor
xchg
gs
ficomps
mov
negb
popa
pop
adc
addr16
into
cld
cwtl
jns
icebp
imul
and
sub
xchg
decl
das
rcll
outsl
xor
cwtl
mov
iret
pop
fwait
xlat
add
ljmp
inc
mov
cmp
mov
push
out
pusha
shl
loop
fsubrs
ljmp
or
into
fwait
mov
ja
subb
mov
ljmp
sbb
add
push
adc
rcr
insb
jbe
fbstp
lods
push
push
adc
dec
outsl
add
das
and
mov
push
xor
lods
dec
stos
dec
jle
nop
inc
fdivs
push
and
jmp
sti
orl
xchg
aam
push
mov
and
enter
lret
and
jmp
mul
dec
or
or
dec
adc
cld
dec
and
adc
add
loop
lret
movsb
mov
sub
cmp
cmc
jle
sub
lds
inc
cmpsl
int3
cld
cltd
push
outsl
pop
test
mov
enter
sub
jb
cmp
cmc
test
hlt
ret
movsb
in
lds
pop
leave
push
mov
add
loopne
aam
add
mov
loopne
jo
aas
lcall
leave
sbb
mov
into
push
das
fwait
push
sub
int3
mov
fldl
add
dec
or
rcrb
rolb
push
adc
leave
inc
sub
cltd
sbbb
mul
daa
shrl
and
mov
sub
mov
mov
lcall
push
mov
cs
cmp
pop
add
inc
divb
inc
mov
nop
stos
adc
ret
inc
pop
xchg
mov
push
int3
arpl
inc
in
mov
test
pushf
movl
add
mov
call
arpl
sti
imul
sub
mov
adc
inc
push
dec
xchg
sti
nop
addl
out
cmpsb
lcall
loop
jbe
clc
lods
mov
shrl
mov
inc
lret
call
inc
ss
pusha
xor
mov
loop
ficomps
fidivrs
lock
mov
cmp
shll
adc
add
sub
mov
add
add
pop
sbb
repz
ret
loop
int3
stos
fsubp
dec
cmp
and
sbb
loopne
cli
iret
or
imul
adc
das
repnz
jb
movsb
sub
xchg
lods
jo
mov
jo
lret
xchg
mov
ss
xchg
cmp
push
push
nop
leave
lea
es
jg
cld
xor
pop
dec
jo
mov
jae
les
int
add
repz
je
dec
add
imul
cltd
jb
lods
xor
test
pop
lcall
fiadds
mov
in
push
ja
or
cmp
shrl
and
in
jmp
test
mov
sbb
adc
addr16
pop
cmpsb
lcall
mov
adc
jo
scas
add
sahf
mov
xor
dec
mov
out
inc
pop
inc
adc
or
in
pop
lods
dec
jo
sbb
sahf
outsb
movsb
mov
pop
insb
pop
xchg
out
cmp
test
lods
inc
sub
jmp
aas
je
mov
xchg
in
jge
sbb
jle
jecxz
cmpsb
not
stos
lcall
aas
push
enter
ljmp
ljmp
mov
pop
negb
push
fcomi
fs
mov
push
jl
mov
int
push
inc
dec
pop
movsb
push
out
faddp
xchg
arpl
xor
addr16
sbb
pop
mov
es
xchg
or
testl
mov
lds
mov
popf
clc
xchg
push
xchg
xor
mov
xor
dec
fiadds
out
and
and
notb
mov
dec
pop
loopne
je
sbb
xchg
xor
in
ficomps
sub
jmp
test
leave
dec
inc
lods
lock
mov
xor
push
lds
pop
ja
mov
aam
push
push
push
in
daa
jmp
test
or
and
cwtl
addr16
repnz
in
ds
xchg
and
vaddsubps
mov
push
daa
lret
pop
cmp
inc
push
gs
push
inc
gs
cltd
dec
jp
cli
jmp
and
adc
lahf
mov
push
es
pop
sbb
into
cltd
mov
pop
or
and
loopne
int
sti
mov
sbb
inc
les
fsubrl
cmp
in
dec
rol
pop
adc
xor
xchg
pushf
mov
push
movsl
jge
cli
addr16
add
scas
jnp
hlt
push
xorb
xchg
loopne
push
outsb
test
cld
push
mov
xchg
mov
push
adc
les
mov
aam
sti
adc
mov
loop
push
add
lahf
push
jp
jle
cwtl
jns
or
shl
mov
fwait
aam
adc
cmp
xor
cli
inc
test
sbb
cmp
shl
outsl
mov
aad
xchg
int
fdivl
and
adcl
or
test
lret
nop
mov
fidivrs
mov
fwait
jb,pt
aas
repz
push
test
roll
dec
mov
fucomp
lock
adc
adc
sti
xchg
push
rcrl
pop
in
add
test
dec
mov
pop
jmp
mov
sbb
sbb
decb
test
jg
mov
out
mov
xchg
outsl
in
jle
pop
das
sbbl
stos
mov
loopne
cld
cmp
insb
shll
repz
lret
cmp
cmc
mov
mov
add
add
or
jo,pt
sbb
jo
push
test
dec
repz
jecxz
xchg
std
lods
out
fldcw
dec
cmc
repz
mov
pop
fldl2t
jl
sbb
out
mov
stos
pop
inc
cmc
mov
cltd
fsubl
das
roll
pop
mov
adc
popa
mov
in
sub
and
ja
fwait
shl
sub
and
inc
scas
inc
shll
dec
rcrb
arpl
in
dec
cmp
in
jb
push
test
sbb
test
mov
mov
aam
fimull
mov
dec
xchg
sbb
and
mov
inc
xor
fnstsw
imul
jmp
jp
pushf
add
fiaddl
movsb
rcrl
std
fisttpl
add
sub
pusha
adc
iret
popf
and
or
popa
xchg
int
mov
rcll
dec
daa
add
cmc
cmpsb
cmpsl
mov
xor
add
icebp
idiv
inc
ret
push
push
push
and
les
xor
pop
add
pushf
push
aad
dec
cwtl
test
inc
mov
cmp
jmp
push
cmp
add
scas
inc
popf
mov
loope
and
icebp
xchg
sub
fs
inc
sub
cmc
out
pop
xlat
push
push
in
fidivl
xchg
mov
jo
nop
cmp
add
xchg
dec
xor
add
jae
jae
insb
sahf
in
adc
leave
adc
push
push
push
jecxz
aaa
mov
sbb
or
push
pop
pop
xchg
inc
jne
jo
mov
cmp
outsl
cld
sarb
test
push
mov
xor
adc
cmp
lods
inc
mov
arpl
dec
ja
xchg
loopne
fisttpl
lods
into
lahf
out
lds
incl
adc
jmp
mov
insl
shll
xor
repz
aam
insl
jle
test
nop
fisttpll
leave
stos
xchg
jne
pop
add
adc
jg
fistpl
in
in
inc
shll
mov
sub
ja
mov
mov
fs
push
sub
test
dec
mov
jg
pop
cmp
pop
dec
gs
ret
xchg
adc
shrl
sub
cmp
xchg
out
call
ss
or
iret
mov
push
in
cltd
push
jle
jo
in
lods
clc
andb
fistpll
addr16
lret
or
push
mov
mov
daa
ret
or
sti
cmpsb
pusha
mov
xor
cld
cmc
sub
xor
jmp
pop
sbb
test
inc
sbb
movsl
sti
data16
jg
cmp
in
lret
or
jmp
pop
add
shrb
outsl
inc
jecxz
or
cmp
push
cmp
popa
cs
jecxz
clc
mov
jl
mov
mov
sbb
cmp
dec
rolb
sbb
sbb
jmp
sbb
inc
xor
repnz
mov
fsts
sbb
mov
cld
xchg
imul
int
cmpsl
fiadds
mov
inc
lods
fidivrl
andl
movsb
dec
inc
dec
cmp
addr16
mov
aaa
jmp
adc
or
or
je
and
adc
pop
inc
push
inc
adc
or
jmp
inc
test
dec
mov
sub
xor
push
cmpsb
in
decb
pusha
ret
sub
pusha
cmpsl
inc
push
pop
and
mov
stc
xchg
or
lcall
pop
leavew
or
enterw
cmc
xchg
mov
push
push
cwtl
test
cmovp
jl
cmp
test
sbb
inc
or
xchg
movsb
adc
loope
sbb
scas
out
addr16
adcb
js
sub
jo
cmp
sbb
and
icebp
mov
push
push
add
cmp
gs
popf
cmp
std
xchg
dec
pusha
lahf
lret
add
xor
test
sbb
mov
mov
fidivrs
dec
loopne
sub
jb
mov
ret
sbb
mov
push
mov
mov
push
movl
lret
sbb
xchg
mov
mov
es
imul
xor
insl
xchg
sbb
push
fcomps
xchg
sbb
lea
repz
nop
imul
out
rol
fdivp
xchg
shrb
cmp
mov
inc
test
aaa
push
lods
push
mov
hlt
xchg
lock
or
add
hlt
mov
lret
outsl
xlat
xlat
mov
dec
call
sub
mov
dec
gs
arpl
xchg
adc
add
ja
adc
or
arpl
lock
jle
pop
pop
inc
jae
xor
jg
pushf
cmp
or
mov
pop
cmp
fdivrs
shl
xchg
mov
sbb
or
lahf
in
lea
ret
inc
cmp
dec
xor
std
cmpsb
mov
mov
orl
adcb
mov
sahf
rcl
dec
enter
mov
out
cmpsl
jb
insb
sbb
cmp
pusha
cmp
cmp
jge
xlat
push
xor
pop
mov
shrb
mov
call
dec
xchg
sti
mov
ljmp
cli
sahf
jp
lcall
pop
daa
aam
jo
add
and
inc
sub
jmp
and
adc
fisubrl
repz
lock
lcall
adc
add
in
fwait
mov
pop
mov
adc
nop
xor
icebp
adc
cwtl
test
test
cli
mov
sbb
mov
sbb
lahf
outsb
mov
sub
scas
repnz
adc
push
push
mov
hlt
sbb
scas
or
jne
cmp
pushl
subl
hlt
ds
aas
roll
mov
sbb
ss
dec
sub
inc
stos
mov
stos
lret
mull
mov
mov
fdivr
or
in
mov
repnz
jmp
or
cmpsb
mov
outsl
mov
pop
jl
push
push
or
jno
lods
arpl
add
mul
imul
mov
popw
push
sti
subb
push
cmpb
xchg
imul
mov
mov
push
fwait
mov
in
mov
fucomp
mov
jns
imul
xchg
imul
cmp
xchg
push
jae
pop
cmpsb
xchg
jae
mov
lret
test
jle
push
mov
pop
mov
in
xchg
cmp
pop
add
pop
mov
add
adc
dec
mov
aam
mov
stc
add
xor
iret
jge
sub
dec
outsl
mov
jg
inc
repnz
cli
inc
mov
sti
es
pop
daa
push
fisttps
test
and
lahf
ljmp
sbb
dec
inc
cmp
pop
sarl
lret
dec
pop
mov
sub
and
out
push
jns
sbb
scas
mov
adc
dec
jmp
xor
mov
cmpsb
in
test
jnp
cmpsl
imul
enter
popf
jg
fidivl
outsl
mov
lods
jmp
xchg
or
sub
bound
sbb
push
cmp
cmp
or
data16
mov
sbb
loop
pop
jecxz
or
add
pop
out
jno
push
mov
push
lea
or
je
aaa
cltd
push
loopne
xlat
fisubs
sub
clc
into
push
mov
leave
ret
ret
or
inc
xchg
and
cli
leave
dec
loopne
sbb
pop
cmp
sbb
dec
pop
push
out
bound
scas
stc
aad
cmpsl
add
divl
outsl
call
aaa
cmc
lret
dec
or
mov
sbb
jecxz
mov
outsl
mov
lret
sahf
dec
xor
xor
sbb
in
xrstors
clc
out
fwait
jns
js
jbe
enter
pop
lods
sub
aad
cmp
push
pusha
fbld
xchg
adc
dec
dec
jns
mov
or
hlt
adc
int
stos
nop
fs
add
mov
pop
cli
ss
mov
pop
mov
xchg
cmp
cmc
jno
jg
lock
cli
filds
mov
ret
or
jge
push
or
adc
jns
popa
or
push
push
dec
mov
mov
mov
jmp
mov
push
pop
clc
or
inc
ja
loopne
clc
cmp
pusha
test
test
gs
call
popa
sub
js
jno
pop
ja
dec
cmp
outsb
xor
mov
mov
xor
lahf
add
lret
outsl
das
jge
adc
inc
dec
roll
pop
sbb
in
cwtl
cmc
mov
adc
pusha
arpl
or
stos
stos
pop
mov
aaa
and
mov
mov
and
dec
adc
xor
imul
fldcw
cltd
sub
jnp
roll
fidivs
jns
arpl
in
inc
dec
lret
loope
loope
cwtl
movsb
lcall
lcall
xchg
push
repz
cli
xor
xor
xor
xchg
push
push
mov
es
rclb
in
pop
sti
push
mov
insb
loopne
insb
dec
int
hlt
jecxz
mov
jae
mov
scas
or
imul
bound
aad
aad
and
gs
popa
mov
int3
mov
popf
inc
mov
in
mov
imul
inc
adc
pushf
pop
mov
std
mov
lds
shrb
js
repnz
sub
repnz
call
push
rcrb
or
test
repz
add
cmp
sbb
sbb
xchg
push
pop
daa
adc
lret
lods
cmp
mov
pop
daa
xchg
dec
push
lret
adc
cmp
scas
xchg
add
pushf
das
arpl
dec
test
jnp
in
mov
sub
enter
sub
jae
cmpsl
nop
cli
pop
push
sti
rclb
cwtl
mov
mov
jnp
jle
icebp
sbb
arpl
adc
aaa
jns
leave
mov
ret
pushf
xlat
enter
sti
ljmp
sbb
add
push
cli
movsl
mov
loope
outsl
inc
dec
cmp
xor
mov
xor
dec
pop
jecxz
nop
data16
sub
stos
lock
jge
aaa
lret
lds
fwait
push
subb
cwtl
jp
dec
cmpsl
sub
add
fistps
sbb
clc
mov
arpl
mov
fs
mov
and
icebp
lea
daa
xor
pop
outsl
jle
sub
dec
out
cmpsl
stos
js
push
sub
inc
sarb
push
xchg
jle
das
mov
rclb
lcall
jno
and
inc
sbb
pop
add
push
fstpt
dec
adc
sub
stos
testb
addr16
push
ficoml
outsl
mov
cmp
sti
mov
int3
add
loope
inc
push
mov
lds
adc
jp
sahf
jb
imul
shll
or
cld
insl
pop
pop
imul
mov
xchg
in
jmp
mov
out
mov
or
push
or
fimull
cmc
loopne
push
cmp
dec
inc
inc
lods
push
iret
je
in
lcall
pop
jge
outsb
and
xor
dec
pop
pop
cmp
push
sarb
adc
cmp
ss
insb
mov
mov
and
or
movsl
insb
das
mov
cmp
push
push
dec
sbb
and
mov
push
and
call
in
aas
jno
pop
xchg
imul
jmp
lret
adc
cmp
jns
push
jge
jnp
push
or
pusha
push
test
jl
int
pop
btc
adc
rolb
out
xchg
shrd
xor
cmpsl
and
push
sub
xchg
fdivrs
mov
jecxz
popa
mov
mov
sbb
or
push
mov
sbb
adc
icebp
das
push
xchg
pop
lock
ja
ss
addr16
divw
sub
sub
push
int
cmpb
push
leave
scas
mov
popa
jg
or
and
popl
jo
push
test
shlb
xorb
es
sub
cmpsl
sahf
jmp
push
ret
add
lret
push
arpl
lock
les
mov
xchg
mov
cwtl
repnz
loope
sarl
xchg
shll
ret
mov
test
ror
jle
and
sarl
lahf
xchg
icebp
mov
adc
insl
jnp,pn
pushf
mov
pop
andl
inc
movsb
mov
jmp
data16
daa
sahf
cs
jle
cmp
in
ret
mov
cmp
in
add
jnp
nop
add
mov
out
and
mov
sbb
add
roll
pop
pop
nop
arpl
movsl
xchg
mov
shll
stos
dec
subb
cmpsb
repz
jg
push
pop
push
mov
dec
or
inc
cmp
stc
aad
dec
loope
pop
stos
sub
push
movd
inc
clc
stos
movsb
fucomip
data16
add
rcrl
mov
lock
lds
xchg
das
in
mov
mov
popf
sbb
pusha
dec
or
push
or
rcl
adcl
sti
lret
addr16
out
fdivs
mov
or
xchg
je
pop
repz
ret
ljmp
cmp
adc
imul
lret
fsubr
pop
pop
loope
movswl
je
ret
mov
push
mov
test
arpl
sub
iret
scas
ret
mov
jge
repz
mov
shl
xchg
xchg
cmp
sti
or
mov
xchg
ret
test
rcll
inc
lods
pop
adc
jp
lock
cmpsl
fistpl
in
jp
mov
es
sbbb
es
leave
mov
addr16
insl
fistl
xchg
cmp
add
out
inc
push
scas
sbb
loopne
pop
sub
and
lahf
push
mov
mov
mov
jbe
out
xor
dec
hlt
cmp
ljmp
fsts
mov
adc
mov
out
out
pushf
mov
fucomp
jg
pop
pop
xchg
pop
hlt
pop
dec
xor
rcl
out
inc
sub
scas
arpl
notb
aad
inc
adc
mov
mov
daa
lods
xor
imul
push
xchg
ret
lret
out
popf
pop
xor
out
nop
rcrl
jb
fnsave
fcmovu
pop
cld
inc
mov
push
iret
mov
mov
movsl
lahf
std
fisubl
sbb
add
push
stos
pop
hlt
cmc
popf
call
adc
or
imul
mov
mov
jo
xor
jg
loopne
nop
leave
sbb
aas
sub
mov
dec
lds
and
shl
clc
mov
pop
mov
mov
jmp
jnp
xor
cmpsb
repz
iret
mov
xchg
call
mov
imul
dec
xor
inc
outsb
xor
cmc
or
add
test
js
cmp
add
das
test
cmp
outsb
movsl
out
jnp
or
adc
and
mov
lock
jb
mov
lcall
scas
pop
xchg
pop
cmp
lret
cwtl
out
cmp
out
inc
push
mov
ss
pop
ficoms
dec
cmp
xchg
shr
in
test
inc
pop
clc
or
jge
mov
cmp
lods
out
adc
gs
iret
mov
xchg
sahf
dec
or
mov
out
add
fsubrl
in
repnz
lcall
stos
adc
pop
add
push
lcall
push
cmp
mov
jb
mov
ja
jae
jmp
xchg
sub
imull
in
fsubr
jae
hlt
shlb
fcoms
xor
mov
cmp
mov
jle
jmp
dec
sbb
push
lock
xchg
pushf
adc
sahf
push
pusha
arpl
lds
push
jle
push
jo
cmp
ret
mov
pop
mov
rcrb
and
fisttps
add
out
push
pop
pop
in
or
rcrb
pusha
outsb
push
in
or
fwait
or
fs
jb
adc
pop
pop
jne
sub
ds
fs
jl
xchg
jmp
xor
sub
xorb
cmp
test
xor
loopne
xor
adc
pop
outsl
lahf
xor
cmp
adc
les
dec
lock
int3
or
sbb
sub
pop
out
cmp
add
xchg
outsb
or
xchg
mov
inc
out
pop
addr16
mov
lahf
mov
out
out
xlat
cld
popa
adc
pop
xor
shlb
dec
cmp
or
mov
pop
int3
mov
xchg
xchg
in
push
pop
jecxz
xchg
cs
sbb
leave
stc
push
bound
inc
scas
test
and
lahf
movsb
jl
mov
pop
insl
lds
mov
out
scas
mov
out
js
flds
jb
pusha
outsb
test
dec
cmp
sbb
sbbl
xor
loopne
inc
loop
pop
push
divb
mov
pop
push
xchg
jnp
shrl
sbb
imul
mov
int3
lahf
cltd
stc
es
test
insl
xchg
xor
lea
pop
fs
outsl
in
xor
fsubl
idiv
push
adc
roll
sar
out
test
js
jge
test
orps
repz
jnp
ret
sub
xchg
lods
test
cmp
dec
mov
fildll
pop
push
popf
push
cmp
sbb
lods
dec
pusha
xchg
mov
and
inc
xor
add
push
cmp
jmp
cli
les
data16
mov
xlat
popa
js
into
dec
mov
mov
sub
gs
fwait
push
or
shrl
inc
cmc
dec
push
pop
mov
pop
dec
out
iret
add
ds
push
repz
jecxz
mov
jo,pn
xor
scas
mov
or
js
or
push
lods
addr16
movsb
xor
repz
push
sub
push
stc
insl
mov
push
mov
pop
sbb
fidivl
call
cltd
cmpsl
cmp
call
dec
mov
cmp
push
pop
daa
mov
cltd
cld
inc
into
out
sbb
inc
or
xchg
in
push
lea
jg
and
add
fimull
cmp
sbb
nop
xor
out
push
clc
frstor
mov
int3
jno
dec
call
jmp
pusha
pop
sbb
paddsw
xchg
flds
and
inc
xor
cmp
arpl
xor
fimuls
mov
adc
inc
mov
jmp
push
test
and
cmp
push
sub
pop
lds
pop
jne
ret
inc
and
dec
mov
out
test
ljmp
jp
pop
jp
dec
mov
bound
sbb
sbb
je
dec
or
gs
aam
push
mov
jae
ja
dec
outsl
pop
inc
scas
xor
add
pop
js
ror
in
movsl
lods
iret
pop
xchg
push
addr16
insb
sbb
or
test
inc
push
inc
xchg
fidivrl
fistpl
push
pop
fsubrp
jmp
fsubl
mov
cli
mov
leave
inc
lods
mov
mov
test
inc
rcl
and
out
and
add
jl
in
lods
push
scas
xor
cmc
fmull
cmp
cmpsb
add
jle
sbbb
leave
pop
cmpl
pop
jge
inc
lock
test
cmp
out
mov
enter
les
pop
push
dec
lds
mov
cli
push
ss
xchg
cmpsb
std
xchg
dec
scas
sbb
adc
mov
push
mov
jge
cmpsb
test
data16
sbb
fwait
ljmp
push
push
out
jl,pn
test
mov
call
pop
insl
mov
movsb
push
test
jle
rcrl
jae
jo
enterw
test
repz
mov
mov
shlb
mov
ret
xchg
pop
mov
fadds
pop
inc
add
inc
mulb
aas
orl
xrelease
popa
sbb
or
adc
fdivrp
jo
loopne
mov
aad
outsl
and
push
stos
cli
inc
ss
mov
xor
jmp
dec
ficoml
push
add
mov
aaa
dec
loop
cmc
sar
push
lods
fwait
les
sub
push
hlt
push
sahf
aaa
cmp
cmp
mov
jae
adc
mov
mov
mov
xor
and
jo
xchg
sbb
stos
jnp
stos
in
mov
xchg
addl
sub
or
insb
es
and
cmp
stos
push
inc
mov
sbb
fisttpll
push
xchg
call
inc
sbb
xor
inc
mov
out
push
xor
out
es
jb
push
lcall
int
sub
scas
loop
cmp
dec
jp
addr16
and
popl
mov
add
xchg
mov
sub
cmp
daa
sbbb
imul
xchg
out
xor
dec
imul
xor
in
adc
outsb
arpl
dec
subb
std
andb
mov
iret
jl
mov
fwait
mov
sbb
add
imul
fwait
mov
mov
lods
ret
into
adc
xor
aam
in
push
mov
xlat
push
test
in
dec
jno
xor
xchg
pop
test
push
cmp
mov
cmpl
js
cmp
insb
lcall
test
inc
inc
pop
test
add
or
in
dec
lods
mov
clc
sbb
mov
jae
sbb
and
xor
xchg
es
scas
xchg
xchg
add
cmp
fwait
or
inc
or
cld
xchg
adc
xchg
test
dec
leave
nop
mov
push
icebp
test
lea
push
jmp
push
scas
pusha
cmp
or
popa
pop
dec
mov
jge
push
imul
xchg
add
mov
sysexit
lds
and
loopne
lock
add
inc
xlat
icebp
sbbl
cmp
pop
sbb
add
fnstsw
pop
add
pop
mov
or
and
mov
addb
dec
push
jno
jo
or
sbb
push
sub
xchg
daa
out
adc
in
jle
jns
insl
int
pop
fdivr
cld
push
xchg
test
pop
test
xchg
outsl
movsb
mov
cmp
adc
fcomp
iret
xor
sbb
sbb
hlt
push
sbb
cmp
mov
jge
cmp
xor
mov
mov
push
dec
xchg
or
or
dec
xchg
mov
fcmove
push
fnstenv
and
stos
cmpsl
and
fdivr
negl
xchg
std
sbb
aad
fistpll
pop
lea
xor
mov
jmp
mov
mov
push
idiv
push
mull
shll
cltd
out
xor
aaa
xor
xor
cli
push
scas
sbb
ds
insb
push
mov
adc
inc
cs
sub
mov
divb
inc
mov
flds
std
in
xchg
les
sti
cmp
and
push
adcb
fiadds
lods
out
push
xchg
pop
ja
mov
lahf
aam
ret
jmp
rcr
loope
jae
lcall
js
cltd
mov
xor
in
fs
stos
fcoms
mov
mov
jge
cwtl
pop
lods
sarl
aam
inc
fstl
popa
out
add
and
jecxz
or
fadd
dec
stos
lret
sub
pop
xor
add
scas
jns
lea
sbb
mov
pop
dec
push
movsl
in
cmpsb
lods
xchg
mov
sar
out
test
mov
pop
pushf
or
sti
addl
out
insl
fstpl
cmpsl
enter
push
daa
and
mov
cmpsl
hlt
xlat
out
loop
adc
sub
sbb
nop
push
fdivs
push
and
push
push
dec
cltd
mov
mov
outsl
push
shll
mov
or
xchg
mov
sub
cltd
enter
adc
inc
add
xchg
push
xchg
mov
in
inc
cltd
movl
mov
gs
and
and
sbb
jb
adc
es
ret
push
push
outsl
sub
xchg
out
roll
imul
and
pop
mov
or
mov
es
inc
gs
outsb
sbb
es
int3
xor
dec
in
mov
out
sub
inc
jbe
sub
jbe,pn
lock
das
or
ret
push
sbbl
pushf
data16
lcall
sbb
mov
arpl
jae
pop
mov
or
sarb
fcmovne
add
ljmp
rorb
cmp
sbb
mov
shr
daa
pop
dec
in
test
sub
aas
mov
add
ret
cmp
and
daa
lods
mov
mov
adc
xor
cmp
sub
cld
pop
pop
or
sub
jo
pop
inc
mov
push
cmp
mov
pushl
xchg
pop
movb
stos
insb
fsts
sbb
lods
jbe
imull
pop
aam
and
mov
outsb
push
adc
movsl
subb
fnstenv
fst
in
adc
mov
jecxz
push
aad
pop
inc
sub
daa
insb
dec
mov
dec
jmp
jle
lods
cmp
xchg
adc
inc
mov
mov
bound
imul
imul
mov
bound
mov
xchg
lds
inc
or
popf
cld
je
cmp
call
dec
lret
int
mov
div
fs
lea
mov
and
adc
sarb
sub
push
lea
ret
shlb
rcr
dec
addr16
jns
movsb
inc
push
inc
orb
add
aam
jge
add
xchg
pop
subb
mov
imul
ret
lret
lds
inc
pop
cmpsb
in
into
ss
mov
inc
jge
xchg
in
insl
xor
mov
pop
and
push
sarb
sub
pop
push
mov
lods
cmp
mov
daa
add
lret
jbe
fldenv
pop
pop
adcl
add
push
lock
jecxz
add
mov
add
fwait
mov
cmp
imul
stc
in
pop
pop
les
cli
xchg
orb
lock
jg
push
cmp
sub
pop
popa
fwait
lret
mov
push
add
adc
sbb
inc
lret
ret
pop
push
sub
clc
aaa
adc
push
mov
arpl
leave
outsb
movsb
stos
mov
sub
sahf
pushf
and
jo
sbb
inc
dec
add
inc
repnz
repz
or
add
sbb
call
xchg
lods
dec
inc
jnp
dec
lock
xchg
push
cmp
push
daa
outsl
nop
test
jge
dec
pop
bound
pop
push
out
or
xor
js
sbbl
mov
pop
mov
ret
mov
lods
scas
mov
push
stc
dec
add
call
mov
sub
pop
mov
jae
mov
ret
jle
inc
mov
xchg
mov
mov
push
or
ljmp
xchg
scas
mov
xchg
das
and
outsb
shl
mov
mov
or
rclb
out
sbb
xor
lahf
push
push
fucomi
idivb
mov
jge
xchg
lds
outsl
jb
cmpsl
fmull
dec
jecxz
aaa
jbe
or
mov
mov
out
lods
or
sub
into
sbb
jge,pn
imul
and
inc
inc
inc
sbb
rolb
push
push
out
cmp
add
not
hlt
and
mov
sbb
neg
ja
or
leave
mov
sbb
mov
mov
fbstp
lock
std
pop
lods
mov
push
xor
nop
test
ret
ds
adc
loope
lock
movsb
imul
xor
clc
aam
pop
sbb
js
scas
outsb
dec
jl
sbb
mov
icebp
into
lret
addr16
notb
add
js
mov
loop
or
jl
cmpsb
sahf
lods
fcomps
iret
div
fistps
mov
out
and
xchg
mov
lret
je
or
and
mov
sarb
pop
lahf
iret
xor
and
insb
mov
adc
jnp
mov
mov
jns
xchg
push
fcoms
xchg
rcrl
push
push
enter
orb
movntq
pusha
mov
cmp
enter
mov
mov
test
cld
cmp
pusha
outsb
aad
scas
scas
insb
and
inc
or
sar
mov
jo
outsl
jl
ds
jecxz
mov
addl
adc
cmpsb
xor
aad
or
inc
lret
cmp
dec
adc
repnz
aaa
adc
je
sti
jecxz
or
addr16
repnz
adc
stos
push
scas
aad
jle
aaa
lret
push
dec
xchg
cmp
sub
mov
xchg
fcoms
mov
sub
insl
movsl
push
sbb
leave
add
cwtl
aas
xchg
cmp
push
push
xor
inc
and
mov
repz
bnd
jae
pushf
xchg
loope
stos
mov
jp
test
jne
ljmp
or
mov
mov
cltd
int
sti
adc
push
bound
shll
inc
cld
jl
cmpsl
inc
outsb
pop
inc
popa
add
sub
ljmp
mov
inc
in
cmp
or
pop
stos
pop
call
inc
lahf
clc
les
sbb
rcr
or
cltd
sti
push
mov
mov
inc
mov
lret
arpl
jns
test
orb
push
xchg
adc
enter
repnz
pop
push
adc
andb
add
mov
sti
xchg
xor
incl
pushl
add
jl
mov
lock
mov
mov
xor
adc
movsb
and
adc
icebp
into
scas
sub
adc
adc
repz
mov
adc
sub
pop
sti
mov
mov
mov
xor
cld
push
outsl
dec
test
addr16
fiadds
ljmp
xchg
dec
mov
fiadds
mov
xor
in
push
cld
inc
fisttpl
aaa
xchg
mov
out
add
cmc
out
sahf
mov
stc
jmp
dec
and
dec
das
test
test
les
mov
xor
mov
pop
xorb
xor
sbb
mov
in
dec
shll
mov
lcall
dec
mov
and
push
mov
cmp
xchg
adc
adc
pop
mov
xor
xor
ljmp
xchg
shlb
pushf
lea
stos
je
orb
cmp
push
push
pop
lret
push
dec
sbb
mov
imul
xchg
push
shlb
std
and
xchg
cmp
pusha
push
iret
adc
call
in
les
popf
clc
inc
mov
pop
or
sbb
jnp
mov
aas
sbb
sbb
or
stos
sbb
add
inc
test
jle
sub
pushl
mov
adc
loopne
adc
cmp
and
dec
xchg
jne
xchg
sub
out
pop
and
int3
xor
daa
les
icebp
ds
cmp
mov
cltd
stos
cs
movsl
sbb
cmp
and
mov
decl
lahf
mov
dec
sub
mov
jl
in
shll
xchg
dec
pop
xchg
cmpsb
jb
scas
push
push
jp
ds
pop
mov
mov
add
xchg
cmp
lret
jnp
mov
jmp
or
bound
movsb
mov
push
or
xor
mov
leave
and
lret
fidivrl
test
push
and
push
hlt
mov
les
mov
mov
push
inc
xor
nop
add
aam
and
lods
rol
ljmp
js
sub
sub
mov
cli
aaa
popf
jb
mov
adc
int
fcompl
cmp
sti
faddl
inc
aaa
pop
ror
xor
jle
mov
xchg
arpl
iret
adc
cld
loopne
ds
sub
jl
out
aam
jle
sbb
test
xchg
cmpsb
jge
jo
mulb
mov
jnp
negl
pushf
xor
enter
fcompl
add
mov
loop
adc
and
clc
mov
add
dec
push
icebp
testb
push
or
pop
addb
std
lret
push
int
xlat
into
imul
popf
test
rcrb
outsl
mov
movsl
je
loope
adc
std
je
pop
sbb
clc
cmpb
jecxz
adc
mov
ret
pop
out
roll
fs
xchg
dec
mov
jbe
jle
aad
out
jmp
lahf
cli
and
mov
dec
shl
adc
lret
jno
xor
out
mov
lcall
xchg
xchg
fwait
mov
sub
push
gs
push
rcll
arpl
xor
sarl
scas
mov
cmpsl
sbbb
add
pop
xchg
cmp
in
in
aam
or
jns
mov
leave
jg
pop
and
push
xor
test
push
sarb
mov
jge
pop
xchg
testl
dec
push
fimuls
das
dec
mov
scas
loop
out
mov
sbb
or
mov
das
and
das
dec
in
aaa
add
orb
push
inc
into
pop
lock
and
inc
cmp
xchg
and
loop
cwtl
cmp
push
adc
imul
push
sub
fwait
out
cmp
cmc
fsts
pushw
rcl
inc
mov
ret
idivb
pop
pushf
stos
or
bound
in
dec
adc
pop
test
xchg
sahf
out
outsl
pop
loope
fistpl
cmp
adc
ss
movl
shrb
out
jmp
filds
jnp
into
xor
pop
mov
push
sbb
div
mov
add
sarb
add
xorl
cmp
adc
fs
add
leave
mov
icebp
faddl
sub
lret
push
add
mov
add
loop
add
cld
fwait
data16
sub
repnz
movb
js
mov
js
inc
popf
jle
pop
mov
in
pop
inc
mov
adc
xchg
aas
mov
data16
sahf
addr16
and
int3
in
jb
je
adc
push
inc
test
mov
lea
testb
mov
xor
scas
or
scas
xorl
call
cli
push
imull
in
fisubrs
dec
shlb
ficomps
ret
jge
cmp
out
mov
inc
cwtl
arpl
add
xchg
std
aas
xor
mov
sub
push
test
cltd
lock
xor
xchg
mov
jo
push
mov
xchg
pop
rol
cmp
dec
push
xchg
fdivr
sbb
and
xchg
in
stos
mov
shll
je
in
mov
dec
rol
pop
inc
fldenv
inc
inc
cmc
pop
out
pop
jecxz
dec
shlb
mov
mov
inc
seta
sub
pop
filds
mulb
jle
data16
ja
inc
add
movsl
test
sub
sub
inc
clc
cmp
push
outsb
cmp
jecxz
popa
andb
fiadds
mov
ret
pop
mov
ret
aaa
pop
fdivl
add
sbb
add
out
sarb
mov
pop
clc
arpl
test
adc
sahf
out
popa
sub
mov
push
mov
jmp
fiaddl
mov
dec
ffree
pop
and
decl
jmp
mov
adc
cmp
xor
pop
loopne
data16
lcall
jl
sub
push
mov
mov
xor
adc
loope
into
mov
out
sub
roll
adc
and
dec
lret
jge
adc
and
loope
lds
in
fnstenv
out
test
aad
sub
das
pop
mov
movsl
rcr
xchg
ljmp
pop
pop
addr16
into
mov
push
fucomp
in
pop
shlb
rcll
dec
insb
xor
add
cltd
sbb
into
mov
dec
dec
xchg
mov
pop
test
stos
movsb
adc
xchg
xchg
repz
pop
push
xor
mov
jl
dec
gs
js
lahf
rclb
popa
pop
or
insb
sub
mov
shrb
jl
add
sbb
sahf
add
iret
popa
fmull
mov
out
sub
js
pop
xlat
and
sbb
add
jbe
rcrb
outsl
mov
xchg
and
stos
xor
lea
and
mov
xchg
and
sahf
repnz
cltd
loopne
jno
sub
stos
sahf
xor
inc
mov
lods
jnp
adc
xchg
test
or
int
loope
inc
jle
lahf
push
paddusb
int3
push
sbb
movlps
popf
jmp
xchg
in
jge
mov
cmpsl
pop
fimull
shll
lods
mov
outsb
add
incb
pop
fstpl
mov
push
orb
push
fistps
lret
mov
jmp
jl,pn
rorb
mov
and
scas
jns
push
cmpsl
adc
jbe
pop
mov
push
pop
and
test
insb
int
int3
pushf
inc
mov
push
sti
xor
into
js
ljmp
sub
cltd
inc
imul
jae
add
bnd
es
rcl
cld
push
loop
mov
pop
mov
lret
add
pusha
cmp
sbbb
popa
push
mov
movsl
repnz
xlat
sub
popa
imul
lret
outsl
std
fcomps
and
push
pop
add
xchg
sbb
and
movsb
mov
into
lret
out
jmp
out
fsubrs
xor
dec
cmp
sub
ret
sub
mov
add
imul
or
dec
xchg
mov
xchg
xor
jno
lods
pop
add
inc
xchg
lods
and
nop
fsubr
aad
ret
je
aad
mov
out
enter
scas
jnp
jge
xor
jo
xchg
gs
mov
adc
xor
add
xchg
ret
push
push
and
dec
out
clc
cmp
sarb
in
pop
mov
dec
add
sub
cwtl
mov
inc
push
subb
mov
cs
rcrb
scas
jne
and
inc
lock
mov
or
lahf
pop
lahf
data16
jl
cmp
scas
sbb
jle
pop
dec
lret
imull
jl
jo
pop
std
pop
iret
repz
shll
add
push
fwait
inc
flds
std
bound
je
inc
aaa
lcall
add
shll
sub
jle
cmp
sub
insl
inc
jne
stc
push
shll
pop
jae
adc
in
jg
jbe
push
pop
lea
cmp
inc
int3
test
int
outsb
jp
mov
jecxz
inc
movhps
mov
mov
mov
sbbb
or
icebp
repz
or
xor
and
mov
mov
cmp
xor
iret
out
cli
mov
rolb
outsb
hlt
movsl
pop
orl
shr
hlt
xchg
mov
sbb
add
xchg
stos
outsb
sbb
mov
es
in
xchg
inc
aam
fdivs
movsl
adc
sarl
cmpsb
add
cmp
sahf
xchg
mov
xchg
sub
enter
std
mov
sub
xchg
repnz
lock
cltd
sub
mov
out
adc
cmp
mov
jle
or
cltd
or
fldt
daa
cmp
ja
push
push
arpl
dec
leave
pop
insb
inc
sub
add
and
mov
sarb
push
push
mov
xchg
test
test
jl
roll
or
enter
gs
jb
sarl
loope
pop
push
mov
cmp
fsts
push
mov
push
sbb
and
std
adc
mov
pop
data16
rcl
xchg
dec
jbe
cli
insl
jg
xchg
or
add
cltd
sahf
cmpl
sbb
mov
icebp
mov
or
aam
inc
xor
jp
and
lret
out
repnz
jo
xchg
data16
push
adc
mov
fimuls
sbb
dec
xor
movsl
test
inc
out
jns
adc
pop
test
inc
xor
and
test
adc
push
adc
add
adc
inc
xchg
dec
fwait
push
mov
mov
mov
inc
mov
shll
es
lods
mov
loope
adc
sahf
sbb
sub
pop
out
bound
mov
arpl
ss
xor
cmp
sbb
push
mov
cwtl
lods
xchg
inc
xlat
adc
test
lret
inc
jg
push
inc
mov
pop
into
out
sbb
pop
imul
sbb
filds
add
cvtpi2ps
lods
sti
mov
jae
or
pop
js
jle
loope
cmp
sbb
xchg
aas
ret
out
int3
fsubrl
or
int3
rorb
lcall
mov
insl
je
in
jmp
ret
mov
add
mov
pop
out
mov
mov
in
mov
xchg
data16
pusha
shrl
cmpsb
setle
mov
pop
hlt
in
adc
mov
adc
sahf
inc
mov
pop
fdivrl
sub
int3
fsubrl
jmp
adc
test
testb
movd
pop
adc
ja
fnsave
ret
and
cmp
lahf
push
jp
jne
fs
inc
xchg
jno
sub
arpl
rep
adc
cmp
sbb
xchg
subl
xor
mov
sub
mov
arpl
int3
dec
das
push
mov
or
mov
decl
sbb
ds
fisttpl
add
add
pop
movsl
iret
shlb
cmp
arpl
testb
aad
fiaddl
cmp
xor
gs
jnp
xor
call
subl
arpl
out
xchg
loop
push
push
rcll
mull
inc
stos
out
scas
push
add
xchg
loop
and
and
mov
cmp
xchg
push
xchg
call
xor
sahf
movsb
push
fstp
adc
xchg
fs
div
das
sub
mov
daa
xchg
xchg
lahf
fisubrs
push
jge
mov
xor
xor
sbb
mov
push
and
test
xor
sbbl
sti
jbe
dec
add
int3
test
mov
xchg
imul
insb
cwtl
or
fwait
mov
mov
lea
fistps
sbb
insl
mov
sti
cmp
popa
fildl
mov
adc
into
loope
inc
mov
call
insl
pushf
les
stos
lds
stos
shll
stos
lea
pop
add
mov
test
push
mov
cltd
mov
mov
mov
rcrl
jl
ljmp
adc
add
inc
xor
inc
aas
ss
jo
or
aam
inc
mov
sbb
cmp
enter
mov
xchg
orb
xor
sub
repnz
push
xorl
loop
in
cmpsl
aad
sbb
sub
push
inc
adc
mov
imul
xchg
adc
push
scas
lret
cwtl
cmp
in
jbe
pusha
or
movsl
adc
mov
jbe
pop
and
mov
cmp
inc
fistps
dec
mov
pop
pushf
pop
stos
in
fcompp
xchg
movsb
fwait
push
cmpb
pop
out
mov
or
shr
ljmp
mov
lahf
and
push
jae
iret
push
fdivrl
pop
mov
out
outsl
cwtl
pop
nop
aad
lcall
lds
adc
icebp
or
pushf
inc
adc
jnp
jg
icebp
pop
push
lahf
add
pop
xchg
mov
inc
icebp
fbstp
xor
pop
out
jnp
decb
repz
cmp
inc
xchg
les
mov
ret
pop
ret
or
cmp
or
xor
add
lods
xchg
shll
pop
add
sti
sbb
test
xchg
push
loopne,pn
sbb
push
or
xchg
jns
in
in
xor
cmpb
mov
sbb
dec
mov
fiadds
push
and
xchg
aas
mov
es
add
cmp
stos
popa
jo
fimuls
xchg
inc
dec
sub
stc
and
mov
xchg
inc
pop
push
lret
push
sti
mov
mov
ja
leave
int3
xor
hlt
sbb
xor
lret
test
cmp
mov
ret
add
mov
std
shll
test
jp
into
sbb
daa
fs
mov
pusha
sbbb
mov
out
and
xchg
lds
in
pop
mov
movsl
rolb
dec
cmp
dec
arpl
cwtl
mov
popa
adc
sbb
pop
fcmovnbe
dec
inc
inc
int3
ss
cltd
pop
test
test
sahf
push
sti
push
mov
iret
out
shr
lahf
mov
sbb
shrl
xor
sub
orb
loop
shr
addr16
popf
fwait
xor
stos
ljmp
mov
loope
in
pop
fldcw
push
sbb
sti
lds
cmp
inc
push
cld
push
add
fsubrs
adc
jmp
movsl
xchg
xchg
xchg
icebp
ret
sub
scas
sarl
xchg
adc
outsb
and
insb
leave
fiadds
mov
idivl
loopne
pop
dec
loopne
xor
pop
inc
and
pop
xchg
loop
dec
xchg
adc
fs
les
lret
movsb
mov
dec
inc
jo
ret
jge
sbb
pop
sub
mov
sub
sbb
sbb
jle
xlat
shrl
push
es
loopne
dec
js
jae
nop
jno
ret
push
xchg
or
push
inc
mov
negb
aad
outsl
rclb
adc
cmpsl
mov
insb
rol
pop
sbb
mov
mov
pop
mov
push
and
lea
shll
scas
test
aam
jns
add
sbb
and
daa
call
sub
adc
xchg
ficoms
xchg
push
xor
xchg
leave
or
xor
pop
sub
push
test
sarb
outsb
dec
in
add
xor
add
xor
out
xchg
or
inc
mov
fcomps
mov
mov
jnp
sbb
and
je
mov
fcmovnbe
scas
xchg
xor
mov
inc
jnp
add
repnz
xchg
in
add
mov
xchg
ss
dec
jmp
scas
aam
push
pop
or
pop
loop
dec
into
sub
push
out
repz
fs
out
xor
sbb
cli
add
cmp
in
pop
jo
popa
pop
leave
cmp
lods
xchg
stos
gs
fbld
arpl
fcmovnbe
mov
call
dec
jle
lock
icebp
and
adc
sbb
push
int
mov
stc
int
and
and
out
dec
es
jnp
push
pusha
xor
mov
jecxz
aas
sarb
adc
popa
xchg
push
xchg
addr16
push
fldcw
ja
shlb
fdivp
inc
shr
xchg
inc
pop
dec
in
jnp
or
mov
aad
insl
sub
mov
xchg
bound
dec
ljmp
push
iret
iret
cmpsb
mov
inc
jge
lock
out
aad
mov
in
dec
adc
fdiv
sub
aam
enter
mov
out
lcall
aas
add
arpl
dec
sub
pusha
and
lods
push
cmp
sub
ret
and
jo
push
jns
stc
xchg
rcr
add
leave
mov
mov
dec
sbb
xlat
daa
aad
jbe
enter
push
out
jg
sbbl
pop
aas
mov
int3
fidivrl
xchg
out
test
jno
data16
jo
mov
adc
mov
fsubs
sti
sub
mov
xor
gs
shlb
data16
mov
or
add
push
lret
mov
push
push
dec
outsl
aam
or
and
popa
imul
xchg
add
data16
int
sub
jns
scas
pop
adc
pop
and
popa
lock
clc
ficompl
ret
ret
aam
mov
and
std
jecxz
fimuls
movsl
cwtl
push
pushf
rep
pop
add
jae
xchg
movsb
pop
jmp
add
jle
ss
xor
pop
push
inc
leave
sub
or
cltd
xor
fwait
out
int3
aad
sub
into
mov
cmp
xor
xchg
push
mov
add
push
mov
mov
pop
sbb
dec
scas
jp
addl
ret
mov
lret
and
cmp
mov
lock
lds
push
sahf
sub
stos
jle
cwtl
sub
mov
test
ftst
les
insb
inc
cmpsl
sbb
test
gs
mov
repnz
and
and
push
pop
cmp
aad
in
adc
cld
ja
lds
xlat
add
xor
cmpsb
adcl
ficompl
fnsave
push
fiadds
lods
cs
mov
xor
cld
ds
test
xchg
lods
mov
mov
or
mov
ss
xchg
mov
test
sub
jbe
out
add
iret
cmp
mov
xchg
outsb
pusha
and
and
data16
maskmovq
testl
sub
cmp
movsl
add
or
dec
mov
and
adc
lret
in
subl
call
mov
jo
inc
push
push
stos
cmp
lcall
scas
adc
lock
jle
aas
mov
fdivs
imul
movsb
xor
neg
fimull
int
dec
add
fwait
adc
lea
add
adc
or
cwtl
psrld
stc
nop
mov
in
xchg
push
mov
pop
cwtl
cmp
xor
inc
mov
and
in
xor
adc
sbb
fnstenv
xor
mov
and
in
xchg
addb
test
dec
mov
mov
sbb
shlb
xchg
leave
int
jge
or
es
lret
stc
js
test
leave
mov
imulb
into
mov
xchg
notb
rcr
jp
aad
imul
mov
lret
mov
int
pop
addr16
icebp
icebp
shl
mov
xlat
dec
in
dec
inc
mov
inc
daa
je
dec
and
loope
movb
inc
cwtl
ror
push
cmp
jb
rclb
test
xchg
lret
pop
cltd
mov
mov
loop
inc
xor
jle
pop
jmp
ljmp
mov
aam
sbb
out
lcall
inc
mov
cmpb
punpckhdq
mov
sub
jb
fs
push
push
pop
sbb
jne
sbb
mov
xor
cmp
ljmp
cwtl
mov
rcl
aaa
fwait
aaa
pop
and
jmp
cmpsl
mov
rorl
sub
daa
xchg
lea
cmp
fadd
popf
movsb
popw
iret
mov
std
add
imul
inc
lcall
push
loop
sti
pop
in
push
pop
loop
or
pop
or
jnp
jl
cmp
cmp
int3
fstpl
in
dec
fldenv
insb
cmpsb
stos
stos
stos
pop
pop
mov
in
cwtl
call
std
mov
cltd
aam
and
mov
and
repz
mov
jmp
ror
push
and
test
popf
pop
mov
jne
lret
and
mov
xchg
dec
sub
in
mov
dec
pop
mov
inc
mov
fdivrs
sub
sub
sbb
adc
cmp
pop
jnp
mov
imul
stc
mov
cmc
mov
adc
sub
sahf
repnz
cld
cmpsb
int
pushf
xor
hlt
cmp
and
jno
xor
jne
inc
pop
cmp
jns
jno
xor
jne
out
decl
das
and
jl
jnp
nop
dec
daa
js
jb
or
stos
push
mov
and
sti
std
adc
pop
jle
pop
dec
clc
and
loop
pop
push
fsub
fdivrl
int3
aad
adc
adc
lods
idivl
jb
push
cli
jp
push
sub
inc
repz
pop
ja
cmp
push
mov
mov
fwait
push
mov
ret
sbb
testb
add
push
in
cmp
lds
mov
arpl
jg
dec
sub
add
outsb
jle
popa
mov
xchg
pop
icebp
xchg
cmc
bsf
mov
sub
ss
arpl
sub
push
jmp
lret
xchg
push
adc
pop
jnp
into
add
adc
sbb
jno
push
sub
loopne
mov
arpl
mov
dec
arpl
pop
sarl
mov
cli
rcll
jae
mov
cli
call
xlat
mov
adc
xor
jb
mov
add
jmp
or
mov
xchg
ds
xchg
or
aad
icebp
jns
addb
or
andb
push
das
xor
adc
or
cld
sub
hlt
jno
push
cs
or
pop
pop
xor
insb
bound
aaa
ljmp
sub
jl
ja
pop
imulb
stos
shlb
xor
mov
loope
jg
fs
mov
les
mov
fcmovnu
pushl
jp
mov
stc
jae
fidivs
scas
fcoml
lret
add
setp
fidivs
jg
push
sbb
movsb
arpl
push
mov
rcll
fcoms
cmp
jmp
lahf
cmp
addr16
add
int3
cmp
ss
and
jle
mov
jno
and
mov
iret
scas
cld
outsb
sbb
jno
xor
fsubl
ds
lods
jmp
fwait
cmp
scas
mov
mov
mov
adc
loop
mov
inc
incb
add
and
les
stos
xor
mov
daa
es
dec
in
scas
lds
xor
xor
loopne
adcl
push
sub
push
inc
sbb
ljmp
xorl
add
dec
scas
fucomi
or
inc
jp
je
sub
ss
mov
fldl
imulb
jecxz
mov
jne
cmp
ss
cmpsl
mov
rcrl
les
outsb
jns
into
cmp
xchg
mov
mov
fxch
jne
jnp
adc
adc
xchg
mov
jb
pop
scas
xlat
out
sti
mov
ss
sbb
push
mov
push
dec
and
jg,pt
cmp
pop
addb
sub
fld
or
xchg
mov
test
loop
pushf
lds
loopne
and
jp
add
clc
repz
jecxz
fldcw
or
mov
ret
nop
jnp
sbb
add
mov
and
mov
loop
movsl
mov
cmpl
xchg
imul
loope
andb
icebp
outsl
pop
movsb
jnp
add
stos
test
ret
pop
pop
or
enter
mov
pop
xorl
and
imul
sub
xor
bnd
or
mov
sub
pop
jg
cmp
shll
mov
imul
je
nop
pop
stos
sbbl
adc
mov
sub
pop
cmp
mov
fisubl
sub
rorl
fnsave
movl
mov
sbb
dec
sbb
add
pop
cli
stos
lcall
popf
mov
nop
mov
sbbb
or
cs
add
cmp
jl
or
xchg
or
inc
mul
mov
hlt
nop
fsubs
pusha
loope
stos
out
adc
xor
and
and
lret
mov
pop
pop
insb
cmp
bnd
inc
cmp
shlb
ficoml
pop
aaa
mov
add
jnp
xchg
paddusw
lahf
push
jo
subl
movlps
in
adc
addb
or
fnsave
or
mov
sbb
pop
cmc
call
shll
mov
arpl
ss
aaa
mov
adc
or
or
iret
inc
popf
daa
imul
add
sbb
mov
fsubl
jmp
or
dec
add
outsl
mov
scas
fdivrs
add
outsb
lock
adc
dec
dec
and
sbb
add
data16
cmp
push
xor
bound
lcall
mov
addr16
push
or
jmp
xchg
ja
bound
ja
inc
jno
jp
dec
imul
add
push
in
stos
test
sub
xchg
sub
push
xchg
insb
xor
dec
gs
jg
ljmp
daa
adc
pop
pop
shlb
movsl
fldt
cmp
or
jecxz
or
mov
fs
negl
outsb
mov
pop
iret
loopne
pop
les
cmp
test
iret
jge
or
movsl
dec
mov
mov
loope
and
sar
out
lock
mov
in
xchg
xchg
sub
outsl
push
jbe
mov
loopne
xor
fwait
cmp
sbb
std
sahf
and
jmp
aas
insb
movsb
push
clc
mov
mov
sbb
aaa
mov
pop
lcall
pop
pop
cwtl
nop
sub
hlt
lock
cltd
xchg
mov
je
mov
xor
xchg
rolb
mov
push
cmc
or
jmp
adc
or
repz
push
popa
jns
pop
subl
imul
pop
imul
fistpl
mov
es
lock
mov
and
out
roll
scas
iret
xlat
fmull
sbb
cmp
movb
pop
inc
push
cwtl
pusha
sti
dec
inc
lret
pop
dec
cmp
arpl
pop
test
icebp
mov
inc
xchg
mov
and
inc
inc
cli
sub
sbb
cmp
jns
push
gs
ljmp
in
mov
sahf
daa
imul
mov
loope
or
daa
outsb
xchg
push
add
pop
insb
push
es
xlat
daa
bound
and
outsl
inc
add
stos
mov
dec
mov
jmp
movmskps
and
fsubs
cmp
mov
jnp
aas
mov
jnp
insl
dec
xor
xor
mov
fidivrl
jl
mov
pop
add
mov
ss
xchg
sbb
cltd
mov
jle
add
addr16
fcmovnu
dec
jmp
or
add
jg
ja
inc
adc
dec
mov
add
xchg
and
or
sub
sub
lds
mov
push
lds
sbb
mov
lds
dec
ret
fsts
mov
sbb
adcl
repnz
jmp
cwtl
mov
add
movsb
in
stc
and
pop
mov
mov
push
test
cmp
daa
arpl
lcall
adc
ret
loopne
ljmp
out
cmp
jae
das
mov
push
dec
lret
sub
jo
add
sbb
fsubrl
stos
push
and
mov
test
arpl
fbstp
jg
sti
rorb
mov
fwait
in
cmc
fildl
pop
call
addr16
lea
cmp
sbbl
and
data16
aaa
enter
pop
ss
jle
cmp
mov
pop
fdivrs
pop
aas
fcompl
adc
add
xor
clc
xchg
push
out
push
inc
out
iret
xchg
daa
sbb
or
mov
jl
pop
clc
div
lods
mov
repnz
cmp
mov
xor
and
out
mov
dec
inc
bound
popa
adc
push
pop
pop
cmpsb
clc
sti
xor
repnz
je
leave
push
icebp
mov
rcll
add
test
pop
inc
and
cmp
jno
repnz
adc
xchg
aam
inc
push
in
outsb
pop
dec
int3
xchg
inc
mov
inc
jae
push
add
pop
scas
lea
xor
test
jb
jne
mov
jge
push
push
pop
std
sub
stos
lods
lods
mov
mov
sahf
xchg
aaa
notb
cmpsl
jp
push
movsb
addr16
pop
dec
add
scas
in
int3
jge
sbb
cmp
push
in
xchg
out
sub
pop
fidivs
aaa
pop
imul
xor
cmp
mov
scas
nop
cmp
mov
sub
lods
push
xor
xchg
stos
xor
pop
enter
xlat
adc
outsb
dec
xchg
inc
je
insb
jmp
push
jo
or
sub
jmp
mov
into
pop
mov
ror
shll
gs
jge
sarb
jp
dec
lret
lock
add
push
iret
and
mov
imul
out
jno
mov
test
movsl
shlb
pop
dec
imul
xchg
push
sbb
and
add
cwtl
popa
add
ret
and
addr16
mov
cmp
lea
and
inc
pop
cmp
ret
or
fsubs
inc
icebp
push
cmp
cmp
xchg
fcomps
mov
xlat
fidivrs
inc
fldt
pop
push
scas
or
jl
pusha
popf
push
adc
dec
fnsave
cmp
out
cmp
xchg
mov
cmp
xor
or
adc
mov
jle
sbb
inc
dec
int3
cmp
lret
ja
imul
movsb
movsb
xchg
dec
sub
fisttps
pop
and
cltd
lret
adc
add
cmp
sbb
xor
clc
mov
push
mov
mov
and
repz
sbb
sbb
fsub
lock
shrb
pop
xor
mov
out
andl
jge
std
inc
daa
pop
std
out
push
clc
pop
dec
das
xor
inc
jno
mov
sub
sbb
jmp
sti
sub
dec
adc
popf
hlt
pop
out
pop
sbb
adc
std
mov
rcl
cli
negb
push
ret
add
mov
test
pushl
mov
jae
sti
ret
xor
sub
xor
and
aad
imull
into
mov
jmp
out
fists
push
mov
dec
jg
jecxz
lods
or
imul
test
cmp
pop
cmpsb
insb
rcrb
mov
pop
fadds
out
inc
cmp
dec
sbb
sub
sarl
leave
and
cltd
xor
pop
shlb
mov
mov
loop
dec
mov
roll
push
or
fsubs
stos
xor
and
jmp
addr16
sbb
leave
sets
adc
sub
xor
pop
test
hlt
jo
ja
push
faddl
jno
adc
xchg
mov
or
mov
jge
pop
adc
ret
dec
js
shll
xor
and
xchg
lret
sub
dec
xor
push
ror
xor
test
dec
out
stc
mov
push
mov
rol
leave
sbb
js
cmp
nop
pop
cltd
xchg
dec
mov
jo
jb
and
adc
fnsave
andl
std
or
xchg
mov
cmpsl
pusha
mov
mov
arpl
cli
add
cmp
push
xlat
pop
push
addb
call
lods
cvttps2pi
pop
iret
jno
int
cli
adcb
lods
jns
sub
movsl
aad
fdivrp
je
mov
xor
dec
pop
adc
push
fisubrs
push
push
gs
or
test
xchg
xlat
or
add
push
xchg
jno
fidivrl
and
pop
push
or
jl
mov
fcoms
sbb
push
dec
mov
cwtl
pushf
pop
lahf
jb
jl
mov
mov
mov
notb
inc
jae
adc
iret
xchg
jns
lock
out
adc
in
vandpd
xchg
cmp
and
ljmp
mov
es
fdivs
sub
enter
or
in
mov
mov
inc
add
loopne
dec
int3
bound
jae
pop
js
idivl
lock
pushf
dec
pop
nop
lods
int
aad
add
sbb
addr16
sbb
ja
cmp
hlt
hlt
fcmovu
push
xor
fwait
daa
frndint
push
lock
mov
adc
les
int3
jle
xchg
mov
pop
mov
mov
mov
lret
cli
sub
cmp
imul
inc
out
mov
xor
repnz
adc
pop
cwtl
arpl
pop
push
push
pop
dec
mov
pop
mov
dec
lahf
repz
or
shlb
mov
push
xchg
push
jmp
xchg
scas
fcomi
ja
scas
jge
cltd
dec
loopne
mov
and
arpl
inc
or
add
sbb
sbb
movsb
call
fadd
out
enter
stc
scas
or
fimull
sbb
pushl
cld
push
jmp
hlt
jge
dec
adc
negl
push
in
rclb
jbe
iret
xor
fsubr
mov
inc
aad
sarl
out
testl
adc
mov
flds
clc
push
sahf
and
cld
mov
xchg
insl
imul
sbb
add
add
xchg
and
mov
add
dec
insl
sub
jge
inc
push
sub
shlb
jmp
call
mov
cs
test
lds
xchg
repnz
lods
imul
ss
jge
and
aam
cmp
mov
lcall
cmpsb
xchg
stos
sti
jecxz
int3
call
inc
jno
sbb
and
imul
repnz
xchg
sarb
lds
mov
addr16
push
lret
addr16
jb
sbb
ret
addr16
inc
inc
pop
imul
bnd
popa
aad
lock
push
daa
xor
mov
aad
mov
sti
pop
fbld
out
test
pushf
imul
cmp
aad
adc
sub
pop
lahf
data16
and
xchg
neg
mov
xor
jno
stos
data16
and
mov
mov
push
shrb
push
data16
mov
xlat
repz
andb
les
jp
push
push
jmp
test
aas
xchg
xor
movsl
imul
es
or
push
rclb
out
push
dec
outsb
jle
dec
pushf
aaa
cltd
scas
aas
inc
ficomps
adc
dec
icebp
flds
insb
adc
push
iret
fwait
cs
test
cs
cmc
out
aaa
inc
lds
jg
add
push
scas
jecxz
scas
mov
mov
push
xor
cmpsl
lahf
repnz
subb
push
out
or
inc
aaa
or
addr16
hlt
out
out
adcb
xchg
mov
sbb
adc
inc
push
cmpsb
lret
nop
mov
shll
adc
leave
cmp
loope
cmp
movsl
xchg
jecxz
loop
dec
popa
shrl
ja
fdivr
xchg
and
aam
sbbb
pop
cmpsl
shll
push
xchg
inc
add
sub
jle
ficoml
dec
cltd
mov
movsl
dec
and
sub
outsb
loope
xor
xchg
xchg
push
xor
sbb
cld
aas
popf
jnp
jae
jb
stos
daa
push
mov
or
test
out
jl
orb
loopne
dec
out
or
sub
mov
pop
lret
cs
mov
push
pop
dec
fucom
int
xorb
jae
cwtl
jne
xor
jg
pop
scas
jno
jbe
lret
cltd
xchg
insb
lea
cmp
pushf
sbb
xchg
or
movsb
in
dec
fidivrs
xlat
sub
loope
loop
xchg
mov
ljmp
push
aad
subb
scas
in
adc
mov
mov
hlt
rcll
pop
pop
clc
loop
or
ror
addr16
adc
in
bound
mov
sub
aad
add
and
and
push
inc
daa
fistl
loope
push
ja
andb
sub
push
push
das
sti
loope
loope
mov
lods
mov
lods
mov
and
or
xor
insl
mov
xor
outsl
and
js
lods
adc
pop
mov
testb
xchg
mov
adc
mov
arpl
mov
idiv
cmp
push
dec
cmp
pop
ret
sub
test
loope
mov
je
mov
push
dec
loope
pop
cmc
push
int
jne
mov
sub
cpuid
push
push
mov
pushf
lea
sbb
ja
xlat
xorl
leave
ja
pop
bound
xor
jb
xor
sbb
mov
mov
dec
or
ds
jl
out
sbb
gs
cmpsb
inc
xchg
ds
and
stos
dec
xorl
sub
cwtl
stos
add
push
inc
lahf
sbb
std
or
push
sub
sbb
scas
push
xchg
xchg
test
mov
pop
lret
mov
push
sbb
cmp
ljmp
shlb
and
push
xchg
adc
pusha
mov
cld
mov
fwait
mov
out
es
dec
sub
dec
jecxz
loopne
push
shrl
inc
ds
dec
or
dec
loopne
jge
mov
adcb
roll
into
or
push
fistpll
fimull
add
dec
cmp
sbb
imul
jp
cmp
fisubrs
vpandn
rolb
sub
xor
sbb
fistl
adc
repnz
cmp
mov
iret
inc
mov
insl
pop
das
inc
in
andl
data16
loope
outsb
icebp
mov
xchg
imul
repnz
leave
sub
int
push
repz
push
mov
loope
ds
cmc
shlb
nop
mov
fidivrs
or
jo
aas
mov
lock
dec
lds
mov
repnz
lods
mov
mul
repz
sbb
jb
insb
clc
inc
cmp
idivb
popa
addr16
pop
jno
sub
push
pop
sub
xor
jne
fiadds
out
or
jbe
xchg
pop
mov
inc
out
mov
inc
mov
or
push
pop
loop
cmp
and
ljmp
rcr
xchg
sbb
fcmovnb
fwait
push
je
ja
aas
stos
or
cmp
test
stos
cld
daa
pop
sbb
movsb
pop
in
mov
and
push
fisttpl
mov
test
fistpl
push
or
fwait
jnp
mov
push
loop
daa
sbb
push
incl
mov
enter
pop
jne
jbe
sbb
andb
jns
sbb
lock
inc
dec
je
aaa
inc
int3
jl
sbb
or
inc
mov
jecxz
sub
jmp
rcll
das
scas
sub
pop
scas
push
pop
mov
xor
stos
sub
or
outsl
movsl
in
xor
push
xchg
in
ja
adc
lcall
ret
or
mov
loopne
or
stos
mov
push
sub
cmp
jo
loopne
into
pop
dec
pop
in
jbe
cmp
cmp
and
das
inc
sti
jle
sti
repz
addr16
push
add
adc
push
add
pop
sub
call
jb
push
xor
xchg
insb
dec
cs
pop
shll
mov
mov
mov
ja
mov
add
ret
div
fsts
aas
or
bound
decl
mov
dec
jmp
mov
insb
xlat
jae
cmpsb
and
cmp
adc
repz
test
insb
rorl
testl
xor
scas
or
aaa
aaa
jbe
divb
xor
in
es
push
dec
adc
outsl
mov
jle
adc
pop
scas
adc
ds
add
aam
add
movsb
fisubrs
cwtl
outsb
mov
xor
dec
adcl
shll
dec
cld
mov
stos
repnz
inc
mov
or
icebp
mov
inc
and
cmpsb
nop
fstpl
push
add
mov
add
xor
into
movsb
rcrb
lcall
popf
repz
insl
loopne
mov
lods
je
inc
das
xor
xor
lret
ss
or
ds
dec
dec
inc
test
shl
xchg
xchg
cmpl
shll
jg
dec
out
add
jmp
lret
int3
dec
push
outsl
lea
repz
xlat
or
clc
rclb
xchg
and
dec
lahf
add
test
jg
scas
shlb
and
incb
mov
push
cmpsl
fstpl
pop
pop
hlt
sbb
jecxz
xor
and
cmp
lahf
sbb
in
sub
out
mov
add
test
sahf
aad
inc
loopne
and
inc
cltd
aad
adcb
pushf
in
push
movsb
xor
xchg
or
dec
add
insb
pop
mov
std
das
test
add
pop
xchg
cmc
fcmovnu
dec
adc
or
fcom
push
insb
adcb
in
cld
pushl
dec
test
hlt
sbb
mov
icebp
stc
dec
sbb
scas
out
int
in
mov
mov
outsl
xor
dec
pop
add
xor
mov
jbe
cmpsb
add
iret
dec
inc
push
jne
or
dec
mov
pusha
fildll
mov
cmpsb
dec
test
xor
adc
xor
sub
movsb
pop
mov
jnp
pop
hlt
and
nop
repnz
lret
xor
jo
xchg
inc
jo
cltd
cmp
ss
pushf
pop
xchg
cmp
dec
sahf
xor
jle
mov
es
stc
inc
es
mov
add
sub
fwait
out
push
ljmp
mov
adc
and
cmpl
push
ret
and
cmp
pop
cmp
inc
rorl
xor
ds
jae
push
insb
mov
lods
js
repz
jbe
jns
lds
outsl
pop
push
pop
or
xchg
cmp
mov
add
xlat
into
adc
and
jecxz
mov
das
scas
fists
cli
inc
dec
sbb
rcrl
imul
cmp
cmp
mov
jae
mov
shll
ret
lods
inc
popf
ret
lods
mov
sub
sub
leave
pushf
pop
pop
icebp
lock
xchg
pop
inc
and
outsl
int
or
xchg
inc
incl
mov
fwait
jno
sub
shll
sbb
aaa
mov
push
shrl
mov
outsb
bnd
inc
ss
jg
jb
xor
nop
mov
cltd
mov
mov
and
aaa
sub
fsubl
movl
pop
push
mov
push
push
mov
mov
dec
mov
frstor
push
mov
jae
movsl
scas
push
dec
xchg
add
movsb
mov
imull
mov
rcr
sbb
mov
in
es
xchg
push
push
lret
add
in
mov
xor
test
inc
enter
stos
jp
gs
mov
and
enter
loope
fidivrs
stc
dec
xchg
sti
mov
test
mov
outsl
je
in
add
data16
repnz
or
pop
push
sbb
and
pop
fsubl
repnz
pusha
test
in
lcall
pop
insl
jns
jecxz
out
xor
int
popf
cmp
jo
popa
iret
push
repnz
sub
inc
ret
cmp
push
outsb
shrl
jmp
scas
lahf
push
pop
sar
rorb
push
mov
jp
or
add
aas
imul
pusha
or
jne
sahf
loopne
jae
stos
xchg
aad
mov
mov
inc
push
and
or
pop
mov
movsb
adcl
cwtl
outsb
mov
fidivrl
stos
shll
lret
jle
es
jge
cwtl
push
mov
hlt
jle
push
pop
push
mov
sub
les
outsl
jbe
jg
popf
lret
cmp
mov
out
aam
inc
fnsave
mov
hlt
fnsave
add
cli
pop
adc
insl
ss
add
aam
not
jo
mov
ss
mov
sub
stos
stos
jne
rcr
xorb
rorl
dec
adc
mov
lret
divps
gs
jmp
ficoms
dec
cmp
je
mov
ret
jmp
xor
xchg
stc
movsl
cmp
sub
xchg
and
dec
mov
std
sbb
inc
repnz
adc
xchg
and
inc
ljmp
aaa
jle
aas
push
push
mov
pop
inc
sbb
imul
jns
add
or
push
xchg
push
jmp
jmp
mov
and
ret
push
and
adc
sbb
mov
lods
ret
jl
movsb
fisubl
or
mov
jbe
stc
test
mov
xor
insb
mov
mov
xchg
cmp
add
xor
xor
push
orb
xchg
mov
push
jae
sub
or
ficompl
push
dec
add
dec
sbb
jo
pop
adc
iret
les
mov
notb
add
or
jmp
sub
gs
nop
cmp
xchg
pop
les
lea
sbb
ss
dec
add
inc
outsl
repz
pop
test
jne
push
or
xor
dec
xchg
jb
dec
sub
mov
pop
dec
in
lods
fdivl
inc
fisttpl
andb
add
popl
lret
out
stos
and
inc
addr16
jp
stos
push
add
dec
add
push
daa
pop
sbb
lods
ret
push
dec
shlb
orb
scas
loopne
int3
sbb
pusha
outsb
mov
mov
dec
fisubs
fadds
cmp
inc
scas
fbstp
decl
fnstenv
jle
inc
fcoms
cmp
rorb
mov
mov
xchg
test
lds
push
lcall
cs
mov
add
test
cmp
lcall
hlt
cltd
xor
mov
es
adc
jne
sete
jle
mov
pushf
or
pop
lods
or
fistpl
call
mov
mov
cmpsl
xor
and
push
mov
xor
dec
or
mov
dec
push
notl
movsb
push
scas
sub
adc
sub
cwtl
push
jmp
outsb
mov
arpl
pop
ret
xchg
jb
lods
jo
mov
lods
xchg
test
add
push
inc
mov
push
sti
std
cmp
adc
add
movsl
lock
and
pop
movsb
sti
mov
orb
lcall
xor
mov
cwtl
and
cmpsb
dec
test
enter
out
mov
data16
lret
fidivrl
cmp
dec
rorl
xchg
mov
sub
in
lds
stos
mov
push
hlt
dec
inc
ds
xor
push
pop
xchg
bound
mov
inc
mov
in
or
pop
nop
rol
loope
rorl
add
into
test
loop
repnz
mov
filds
aam
pop
pop
fstpl
into
out
inc
xor
test
in
adcb
sub
int3
or
shrb
ss
adc
and
mov
pop
lcall
push
imul
mov
pushf
lcall
sbb
imul
ror
loopne
xchg
add
in
idivl
cmp
mov
mov
outsb
test
and
add
out
pop
ret
dec
mov
aam
dec
pushf
les
out
bound
mov
loope
jge,pt
andl
fs
xchg
pushf
pop
push
jns
mov
sahf
fildl
pop
popf
add
jl
pop
xchg
aas
cli
jp
repnz
in
out
lock
repnz
je
or
stos
mov
mov
cwtl
shrb
mov
rcll
xchg
or
fistpl
shll
dec
adc
popf
or
dec
jle
fs
sbb
mov
lcall
push
clc
loop
xor
sahf
push
mov
into
and
popa
subl
sbb
popf
pop
xchg
imul
xchg
pop
jle
sbb
pop
jns
push
jne
jo
inc
shrl
sub
jp
cmp
lods
sbb
daa
mov
pop
pop
jb
push
jg
xchg
push
lahf
cmp
mov
jl
adc
jno
sbb
stos
xor
inc
push
loopne
jne
push
rolb
mov
mov
mov
xchg
push
xor
xchg
xorb
ret
movsb
fsub
icebp
pop
fadds
xor
mov
loop
xchg
push
in
ret
lods
faddl
add
in
xlat
add
les
xor
ljmp
push
arpl
mov
push
pop
nop
cmp
or
mov
jg
fcmove
mov
cs
shr
icebp
leave
mov
mov
fs
repnz
int3
mov
jg
mov
movsl
xor
sbb
xchg
push
das
loopne
imul
inc
popa
frstor
bound
sbb
xchg
dec
ljmp
mov
jl
add
or
mov
ja
add
fistl
mov
iret
lret
cmc
test
test
repnz
dec
mov
pusha
cmp
dec
or
nop
add
mov
fadds
and
cmc
idivl
lea
add
push
aaa
sub
out
and
mov
aas
pusha
mov
xchg
std
clc
jns,pn
inc
pusha
div
shll
push
xchg
hlt
mov
out
dec
das
sbb
mov
pop
cmp
fildll
rcll
stos
mov
cli
pop
and
dec
sahf
sti
mov
push
out
jg
dec
xchg
out
or
lods
jecxz
pop
xchg
dec
add
test
pop
fs
jle
adcb
imul
mov
out
or
push
es
pop
mov
scas
mov
loopne
inc
orl
cmc
in
bound
cmp
cmp
sbb
shlb
pop
sub
mov
inc
push
adc
xchg
fiadds
nop
sbb
and
pop
mov
adc
add
pusha
push
loopne
push
dec
clc
bound
rcll
push
aad
fwait
test
pop
sbb
cltd
cmpsl
xchg
pushf
jns
inc
cmp
inc
and
out
mov
imul
inc
mov
add
test
and
pop
mov
das
dec
xchg
sbb
scas
mov
aam
test
xor
aam
roll
dec
mov
ss
mov
fwait
add
or
pop
mov
xchg
push
and
fwait
mov
or
js
pop
xchg
fnsave
rorb
out
pusha
stos
mov
fdivl
out
shlb
sub
ficomps
loop
adc
es
xchg
and
jmp
sub
or
test
into
jg
jbe
jl
cs
pop
sub
addl
pop
xchg
je
and
fcoms
and
mov
div
daa
lock
mov
out
sbb
fwait
mov
loopne
scas
jo
jp,pt
sti
and
inc
ss
fwait
push
aam
out
xchg
mov
dec
pmaddwd
jg
iret
stc
sub
xchg
pop
push
adc
lds
loopne
stos
les
mov
imulb
xor
xchg
in
xchg
xchg
mov
movsb
lea
mov
sbb
pusha
addr16
cs
mov
inc
pop
adcl
push
movsb
and
adc
in
mov
loope
mov
and
dec
sbbb
pusha
push
addr16
paddusb
sbb
or
mov
pop
cld
js
and
xchg
fcmovne
pop
or
jg
mov
imul
pop
inc
mov
fadd
outsl
xchg
push
or
cmc
fimull
inc
popf
or
pop
xchg
xchg
popa
mov
mov
mov
xchg
sbb
enter
xor
xor
sub
je
repz
leave
outsb
pop
cltd
adc
test
pushf
push
loop
cmp
dec
cli
pusha
and
clc
scas
dec
int3
pop
les
xchg
and
stc
jg
pop
imul
push
divl
push
mov
mov
je
cmp
arpl
fistpl
jmp
push
enter
adc
xor
cwtl
sarb
and
in
adc
imul
test
fwait
sub
rol
jecxz
nop
inc
push
movsl
dec
clc
or
and
mov
jecxz
mov
jne
xchg
dec
jg
aas
sub
jp
int
out
mov
pop
insb
push
jbe
add
dec
frndint
dec
jo
xchg
in
pop
mov
lods
in
xor
and
mov
insl
stos
pop
adc
jecxz
and
xchg
in
or
mov
mov
pusha
and
shrb
rcll
inc
pop
ds
or
mov
push
xor
enter
push
sarl
mov
push
sbb
outsb
or
iret
fwait
xor
jg
jecxz
push
inc
adc
mov
add
test
sub
jge
rol
mov
inc
movsb
inc
lods
lret
fcomp
stos
dec
movsl
sbb
adcb
sbb
jo
sbb
leave
xor
repz
pushf
and
mov
jne
cmp
ret
cmp
push
lret
into
in
jno
adc
jge
mov
mov
and
loop
fdivrs
repnz
inc
aaa
and
adc
and
jmp
adc
sbb
data16
out
jnp
aam
cmpsb
pop
jmp
fisttps
addr16
popa
mov
jmp
mov
mov
sub
jle
lret
push
or
mov
mov
mov
out
push
cmp
xor
dec
mov
jo
mov
ss
scas
cld
jo
cmp
mov
push
push
insl
testl
mov
push
xchg
into
imul
add
leave
icebp
sbb
fldt
stos
movsl
cmc
cmc
or
xchg
push
sub
shrl
sbb
mov
incl
cmp
dec
mov
fldenv
cmp
adc
insb
mov
bsf
inc
int
jle
inc
scas
mov
lea
insb
jl
or
sbb
pop
sub
subb
mov
mov
push
and
insb
fdivrl
in
enter
sub
or
add
xor
cmp
cmp
pop
push
movsl
int
mov
pop
lods
in
mov
push
cs
pop
pop
cmpl
mov
or
push
xor
cwtl
xor
inc
cmp
jnp
add
rorl
lahf
cmp
sbb
adc
insb
int3
and
sub
dec
cltd
jp
lret
and
mov
andb
mov
into
shll
lods
lods
faddl
in
xchg
jmp
sti
push
lds
cltd
inc
daa
call
or
loop
fadd
mov
int
jbe
hlt
cltd
dec
and
fidivl
repz
adc
scas
or
push
and
js,pt
adc
lds
mov
jmp
hlt
inc
jle
adc
mov
imul
sub
daa
mov
dec
imul
popa
mov
in
std
push
cmp
mov
sub
mov
inc
mov
jmp
mov
cs
dec
push
dec
out
ds
cmp
jb
shll
popa
jne
mov
popf
mov
jg
pop
inc
sahf
pop
or
rcr
aam
mov
xchg
cs
addr16
add
cmp
das
jecxz
in
mov
std
lret
dec
jnp
into
or
jb
fxtract
in
xlat
jbe
shlb
stc
loop
jbe
fadd
dec
xchg
xor
adc
mov
and
jns
fstl
cmp
pop
sbb
jle
out
push
icebp
sahf
gs
dec
sti
imul
cmp
dec
popa
cmc
jmp
and
xchg
repnz
int3
pop
movsb
dec
je
jl
mov
call
ret
mov
ret
out
mov
or
cmp
dec
pop
popa
je
fstpt
xchg
fdivl
mov
xlat
mov
movsb
shlb
mov
xchg
push
and
push
ljmp
pushf
test
push
cwtl
fisttpl
enter
push
std
cmp
mov
int3
ret
aaa
ss
mov
inc
xchg
les
pop
shrb
in
in
jge
jecxz
cmp
or
push
xor
add
jge
aas
adcl
and
cld
sbb
iret
cmp
pushf
shl
out
xchg
data16
cmpsl
aas
fisttpl
xchg
push
xchg
sahf
mov
decb
mov
sbb
and
in
add
xor
stc
es
jbe
and
sahf
sub
mov
les
adc
jnp
push
testl
ja
aas
mov
fs
addr16
xchg
add
pop
fisubl
addr16
pop
out
cmc
pop
sub
jmp
sahf
xchg
outsl
pop
aas
jmp
xor
int3
test
incl
enter
cmp
xor
push
nop
test
add
mov
js
pop
and
rcrb
daa
bswap
icebp
fmuls
add
filds
ljmp
lods
in
idiv
xchg
cli
sbb
adc
fbstp
pusha
and
sub
pusha
std
mov
mov
test
push
lahf
push
test
dec
pop
mov
mov
enter
fldcw
hlt
fisttps
addr16
cwtl
and
xchg
jp
pop
cltd
iret
ret
sub
jno
inc
lret
pop
jl
or
inc
enter
push
ja
sti
out
add
or
dec
add
stos
jb
push
ds
popf
fwait
adc
mov
add
xor
clc
ja
mov
jmp
mov
xor
and
mov
or
pop
mov
aaa
mov
sbb
pop
jno
sub
xchg
lahf
jmp
cmp
pop
leave
or
pushf
and
sub
movl
insb
jl
bnd
das
repz
mov
outsb
fwait
push
cli
cmpsl
aam
jno
nop
in
mov
xor
mov
aas
inc
test
pop
aaa
jae
repnz
dec
xchg
lds
cmp
das
out
in
mov
fucom
xchg
cmc
cmpsb
inc
in
mov
outsb
cs
or
int3
xchg
inc
mov
lods
xchg
sub
test
in
xchg
sub
in
mov
leave
jb
inc
movsl
je
mov
jb
xchg
ja
jo
arpl
sbb
mov
out
adc
lret
sub
mov
fs
insb
jmp
adc
lods
pop
int
mov
into
popf
mov
mov
jno
mov
sbb
fcompl
lcall
and
sub
xor
lea
pop
aam
and
push
sbb
cmpsl
pusha
jg
sub
cltd
and
in
inc
cli
inc
ss
repnz
rol
int
sbb
push
jl
aas
stos
inc
mov
mov
jle
jp
fisubs
cwtl
loopne
daa
mov
adc
jnp
adc
mov
data16
xor
xlat
mov
mov
clc
mov
push
add
pop
in
jge
cmpsb
negb
push
fisubrs
mov
sar
pop
outsb
std
jp
adc
in
and
and
dec
in
sub
iret
sub
movl
cli
sbb
in
cmpb
sbb
add
sub
int3
cmp
and
daa
cmp
cwtl
pop
pop
sbb
fucomi
xor
jl
fidivrl
or
dec
stos
int
loope
dec
sbb
mov
dec
in
adc
cltd
xchg
test
mov
out
cli
jecxz
push
leave
pop
pusha
inc
pop
lds
cmp
xor
and
mov
sbb
fimull
sbb
jge
and
sbb
jp
scas
xor
mov
aas
inc
or
push
jl
sar
sti
jb
shlb
push
and
movsb
xchg
xchg
cmpsb
adc
xor
mov
xchg
sub
cmp
fidivrs
jns
or
cli
and
popa
push
or
inc
xor
outsb
jmp
ljmp
dec
fwait
push
xchg
in
popf
push
xor
or
shr
xchg
cmp
adc
data16
sti
xchg
cs
out
hlt
outsb
mov
mov
push
test
and
int
dec
out
add
arpl
test
fistpll
cli
sub
and
or
pop
sub
testl
outsl
mov
inc
lahf
mov
pusha
mov
fisttpll
mov
or
call
mov
mov
jge
repz
mov
mov
push
adc
mov
fwait
jg
jbe
cmp
loopne
inc
imul
clc
out
ljmp
push
into
in
jg
enter
clc
xchg
sti
mov
cli
inc
push
pop
stos
adcl
nop
int
test
adc
pop
dec
xor
inc
call
sub
lea
jge
adc
jb
cmp
mov
dec
cli
add
dec
xchg
push
jl
mov
in
sub
xchg
or
mov
fbstp
and
sub
hlt
or
and
xor
sub
gs
dec
loopne
inc
dec
xchg
std
in
shrb
push
sub
icebp
scas
mov
jbe
jge
inc
dec
inc
push
lods
scas
ljmp
xor
stc
fnstenv
mov
xchg
sbb
and
ficoms
mov
push
xor
pop
mov
ds
leave
mov
mov
and
les
mov
insl
loope
sbb
mov
dec
mov
pop
ret
popf
or
sbb
int
lods
xor
ja
bound
xor
and
shll
sbb
mov
xchg
je
movsb
repz
lret
pop
mov
add
fst
mov
jg
xchg
shl
cltd
sub
or
sbb
movsbl
ds
jle
fsubl
pop
sbb
fs
jecxz
pop
pop
cmp
mov
cltd
jmp
xchg
arpl
cmp
sti
push
pop
out
out
mov
insl
addr16
jecxz
cmp
ds
mov
xchg
mov
and
test
push
sbb
jb
sub
test
xchg
fs
sub
loop
aad
sbb
push
cltd
pop
popa
movl
push
and
jo
imul
mov
pop
fs
ljmp
jecxz
push
scas
sbb
stos
addr16
loope
cmpsl
sub
shlb
mov
je
lods
lret
in
xor
push
ss
aad
dec
cwtl
imul
xor
loope
sti
inc
jb
leave
jg
fnsave
jne
sub
ljmp
jbe
movsb
jbe
push
popf
pop
in
mov
data16
jecxz
mov
call
jp
rcrl
int
pop
cmpb
sub
aaa
mov
testb
ja
in
test
stos
or
xchg
ret
push
jbe
nop
inc
and
icebp
mov
adc
imul
aad
dec
leave
sar
dec
xchg
push
test
adc
push
lods
pop
push
lods
adc
jno
outsl
push
nop
xchg
mov
pop
add
mov
jne
mov
or
pop
jno
loop
push
subl
mov
subl
sub
inc
lret
in
push
int
dec
lret
or
jge
scas
lock
cmovno
adcl
aad
lods
repnz
gs
das
jle
das
mov
arpl
and
cmp
sbb
inc
loope
mov
jne
in
add
jae
andb
rcll
jb
dec
xchg
dec
or
pop
into
mov
mov
pop
jnp
jmp
arpl
shlb
imul
imul
inc
sarb
call
shl
pop
test
daa
xor
loop
jge
and
rcrl
insb
sar
sub
adc
aas
xor
dec
or
out
inc
dec
mov
test
lahf
jo
xor
scas
push
xlat
fxch
push
mov
adcb
mov
jecxz
sub
mov
loopne
push
aas
movsb
lcall
cmc
pop
mov
loope
jl
fs
xor
sub
into
or
push
das
adc
sbb
stos
dec
fwait
jg
pushf
mov
pop
lock
dec
lods
sbb
sub
rorl
scas
pop
fnsave
fisttps
adc
sub
push
jl
cltd
mov
repz
das
in
pushf
aad
aas
shrl
addr16
gs
inc
pop
jo
cli
adc
mov
inc
adc
shl
or
cmp
xchg
xchg
dec
rcll
ficoml
idivl
cs
out
data16
fimuls
nop
mov
xor
scas
pop
inc
sbb
icebp
stc
and
sub
push
or
lock
shl
test
ja
jl
or
cwtl
pop
imul
adc
into
imul
js
jo
lahf
insl
mov
sub
insl
in
sbb
sub
add
cld
adc
adc
add
xchg
icebp
pop
mov
stos
cmp
out
push
jg
rcrb
negb
lret
or
shrl
sbb
sbb
popa
cmc
push
sub
jp
scas
inc
lcall
xor
mov
loope
and
std
lret
sbb
jecxz
push
jmp
push
mov
sbb
idivb
prefetch
bound
addr16
aaa
inc
add
jecxz
jo
adc
cmc
sub
arpl
rolb
add
ror
fldt
lret
sti
inc
cmp
mov
and
sbb
lret
push
jl
inc
jno
mov
mov
push
xlat
push
jecxz
lahf
pop
fsubrs
ret
xor
out
loop
pusha
push
push
bnd
in
lods
movsl
cmp
ret
inc
xchg
iret
pop
push
mov
inc
adc
cmp
cmp
jae
add
lcall
inc
cmp
test
cwtl
out
or
inc
xor
push
push
or
xchg
gs
jbe
mov
popa
imul
jnp
xchg
lret
xor
fisubrl
mov
insl
dec
push
sbb
or
in
jle
lcall
mov
mov
imul
pop
in
or
or
mov
je
jae
insb
loop
mov
out
loopne
sub
push
das
cmp
mov
inc
lret
pop
fwait
mov
repz
mov
xchg
push
std
pop
pop
lods
not
push
cmp
mov
push
and
call
addl
movsl
bound
nop
fildll
sub
fdivrs
and
pop
mov
ja
pop
dec
aaa
xchg
push
ja
mov
sarb
xor
sbb
iret
xchg
jne
dec
or
or
bound
in
scas
cmp
js
imul
jl
push
xlat
dec
pop
dec
pop
loop
jle
mov
jmp
lds
ljmp
out
adc
les
dec
mov
addr16
or
mov
cmp
add
gs
and
jge
mov
shl
xchg
nop
mov
push
xchg
xlat
cmpb
in
jle
push
subb
rclb
xor
pop
dec
or
and
fcomi
aad
scas
jge
sub
aas
fistps
out
or
pushl
out
mov
aas
lock
insb
test
in
or
sub
shlb
jne
jmp
or
movsl
icebp
test
aam
movsl
in
cmp
dec
or
imul
xchg
mov
loope
movswl
repnz
stc
jg
testb
cltd
push
cmp
in
rolb
xor
or
mov
add
jg
pop
push
push
ret
sub
push
ja
jg
in
incl
mov
xor
xchg
subb
pusha
inc
sbb
lds
sbb
mov
ret
xor
sti
movsl
dec
dec
jne
lods
imul
inc
mov
mov
stc
mov
pop
mov
cltd
mov
sarl
pop
inc
into
xchg
mov
iret
adc
ljmp
inc
sub
pusha
rcrb
xor
icebp
aaa
stos
pushw
enter
data16
fcoms
jg
add
lods
adcb
outsb
stos
inc
out
dec
cmp
stc
ljmp
and
in
mov
enter
fwait
add
incl
fs
pop
add
or
dec
scas
loopne
call
scas
inc
adc
cltd
arpl
mov
push
movsl
nop
jne
xchg
das
lret
sub
lcall
in
es
push
test
and
mov
xchg
inc
and
adc
iret
sbb
inc
inc
rorl
call
jl
sti
movsb
xor
stc
arpl
aas
test
pushl
xchg
add
js
mov
sub
sbb
inc
iret
rcrl
imul
jo
and
or
xchg
outsb
ret
addl
loop
mov
fistl
add
das
add
movsb
mov
test
imul
jmp
je
cmpb
mov
inc
xor
cmpsl
jp
outsl
sub
add
inc
push
inc
pushf
repnz
cmp
cmp
inc
aaa
pusha
sub
jne
scas
loope
and
jecxz
push
jno
fisubl
xlat
push
mov
cmp
cltd
orb
push
push
mov
xor
sti
lock
cltd
xchg
scas
or
sbb
jmp
pop
lods
mov
imul
mov
and
mov
sbb
inc
lea
jmp
iret
ficoms
rorl
test
sbb
sub
imul
int
shl
push
out
push
xlat
xchg
out
cmp
push
jae
xchg
mov
lret
pop
int
lock
sbb
mov
data16
mov
outsl
subps
adc
adc
lods
add
es
add
cmpsl
xchg
popf
mov
dec
std
insb
out
iret
mov
cwtl
xchg
ror
mov
mov
xchg
cmp
push
dec
push
shl
notb
ss
inc
or
lods
nop
and
sbb
cmp
stc
mov
je
test
push
mov
movsl
test
or
out
xchg
dec
push
xor
aaa
jmp
popf
fidivrs
mov
cmp
lret
and
sbb
nop
lds
push
orl
fwait
mov
fldenv
scas
add
mov
adc
loop
addr16
cmp
mov
cltd
out
popf
scas
xchg
mov
push
cli
and
cli
stos
in
mov
pop
lahf
jbe
sbbl
sbb
or
enter
jbe
add
push
mov
ja
inc
out
mov
scas
enter
scas
dec
and
dec
mov
pop
xor
pop
or
xor
lods
andb
mov
hlt
and
pop
mov
cs
jae
es
and
pop
out
inc
ja
hlt
sbbl
mov
dec
loope
in
and
pop
sbb
cltd
arpl
sbb
adcl
sbb
enter
sbb
adc
dec
in
xor
cmp
pusha
and
mov
ss
jmp
fdivrs
out
loopne
mov
mov
ret
loope
mov
lods
pop
jae
sbb
aam
pop
cli
and
insb
mov
sbb
cltd
or
push
or
in
mov
inc
and
iret
push
pop
push
out
insb
fcoml
sub
lock
inc
adc
hlt
push
pop
sbb
pop
jb
mov
cwtl
jb
ss
subl
sbb
rorl
sbb
or
push
loopne
jp
push
mov
push
adc
rcr
lds
xor
fnstcw
enter
adc
cld
lods
cltd
int
js
cmpsb
lahf
pop
mov
test
add
int
push
jb,pt
mov
mov
scas
push
ds
mov
xchg
scas
sbb
flds
pop
dec
int
push
into
push
xor
push
enter
rclb
add
mov
ljmp
mov
loopne
pop
or
hlt
or
lods
in
popf
sbbb
push
stos
lods
lret
stc
or
jno
mov
dec
jg
cmp
mov
mov
insl
xor
out
mov
cld
imul
imul
mov
pop
mov
decl
or
mov
lahf
imul
mov
jns
loope
push
pop
stc
sbb
or
lea
cmp
rcll
push
or
jmp
or
pop
call
je
jg
or
pop
fwait
xchg
cmp
mov
adc
inc
adc
test
std
lret
push
mov
les
mov
test
iret
subps
out
push
ret
cmpsl
mov
add
mov
outsb
das
ljmp
jne
push
mov
lods
idiv
lea
cmp
fdivrl
add
out
jl
dec
jp
js
add
push
pusha
push
jb
inc
add
popf
jl
pop
jns
pop
cltd
lret
push
mov
cmp
loope
arpl
sub
outsb
rcr
mov
jl
pop
enter
int3
jno
fisttpl
test
push
lds
test
addb
jmp
or
adc
and
jae
rcrl
fisttpl
rclb
das
je
out
xchg
movl
push
dec
sbb
sub
lea
arpl
mov
and
fwait
mov
dec
xor
jecxz
and
jb
mov
test
adc
push
xchg
jp
insl
or
jmp
leave
push
add
mov
fcoms
xor
mov
pop
sub
push
xor
test
sub
imul
push
jle
mov
enter
iret
cld
and
mov
cs
cmp
mov
nop
mov
shrb
out
lock
mov
mov
xchg
ret
sub
or
aaa
loope
mov
and
add
adc
push
xchg
scas
adc
xchg
bound
cld
insb
add
jo
pop
and
xchg
xchg
in
and
enter
arpl
mov
pop
lahf
sbb
cmpsl
jno
loope
inc
js
jmp
out
dec
aam
push
bound
mov
leave
cmpsl
jo
and
xlat
into
jno
mov
into
sbb
pop
push
jmp
cmp
ljmp
fisubrs
inc
out
es
or
adc
dec
arpl
cmp
addr16
xchg
pop
clc
mov
add
int3
xchg
pop
iret
sahf
push
ret
xor
out
out
dec
xchg
shl
hlt
xlat
pushf
or
xor
mov
imul
dec
add
fs
icebp
adc
add
dec
xor
in
testb
or
fildl
cmp
xchg
jns
or
lret
or
sahf
xor
adc
xchg
mov
hlt
test
cli
and
lods
pop
pop
sub
jns
jnp
fsub
js
inc
and
dec
cmp
or
add
sub
dec
ds
shl
dec
cld
adc
mov
pop
pop
push
outsb
lock
pop
lret
lods
lock
jecxz
hlt
jmp
inc
push
and
pop
mov
mov
push
arpl
adc
imul
les
mov
push
cmp
orb
push
and
shll
inc
push
bound
je
push
dec
roll
out
sub
sub
dec
sub
cs
cmp
push
pop
and
adc
inc
testb
pop
addr16
aad
adc
je
repz
push
jecxz
lock
bound
pop
lret
inc
dec
sbb
nop
inc
je
xchg
cmp
xor
sti
mov
push
cwtl
ret
cwtl
cmp
pop
insb
hlt
jg
jbe
push
add
movsl
lret
rcrb
pop
push
daa
fildl
push
outsl
mov
fists
cli
jecxz
push
fnstsw
xchg
adc
sbb
xlat
js
shrb
and
mov
sbb
inc
inc
lods
ljmp
sub
add
shrl
ja
dec
jl
jg
aas
mov
sub
fs
inc
mov
mov
mov
xchg
mov
mov
stos
sbb
mov
inc
outsl
pop
mov
inc
nop
out
cltd
mov
inc
lcall
add
push
pop
arpl
sub
adcl
leave
cmp
scas
xchg
or
xor
xchg
ret
xchg
push
sub
movsb
adc
mov
loope
int
je
cmp
cmp
adc
adcl
adc
lods
mov
les
hlt
out
call
into
add
xor
xchg
in
out
xchg
pop
sahf
mov
arpl
test
sbb
push
iret
mov
testl
xchg
lret
loope
push
or
pop
dec
sbb
addr16
int
sub
pop
fistps
push
jb
mov
data16
repnz
push
lds
outsl
cld
jb
dec
repz
pop
out
xchg
cmpsl
push
pop
sub
arpl
loop
jne
ljmp
jmp
out
mov
ret
xor
jne
iret
or
std
push
mov
jb
mov
out
add
leave
stc
inc
insb
push
sub
ss
rcrl
out
or
cmp
push
mov
mov
pop
xor
push
aam
cmp
stos
out
dec
lcall
pop
dec
push
shl
test
outsb
pop
and
aad
fistps
and
mov
popf
pop
pop
cmpsl
push
call
and
cmp
sub
dec
sub
or
nop
aam
das
negb
jmp
int3
sbb
push
shlb
in
ds
pop
nop
adc
jae
push
or
int
into
in
inc
cwtl
cmc
ficoml
repnz
adc
loopne
jecxz
jns
adc
fmuls
xchg
adc
mov
jp
or
lods
out
ret
test
fst
xchg
mov
sbb
sub
push
je
jle
ret
mov
cltd
or
movsb
loopne
push
push
sti
aad
nop
xor
inc
adc
ret
xorl
dec
ret
hlt
outsl
sbb
or
loop
pop
lods
movsb
test
sbb
rolb
mov
jns
push
sbb
pop
ret
mov
mov
andl
xchg
and
dec
scas
xlat
sub
test
pop
dec
pop
and
push
cmp
pop
adc
sti
fcomi
scas
mov
jle
shll
scas
clc
gs
cmp
xchg
leave
add
jo
sbb
or
xchg
nop
das
lock
insb
js
scas
or
xchg
fadds
sbb
jo
in
data16
jne
xorl
push
sahf
hlt
stc
xor
and
lods
arpl
ror
out
negl
pop
into
icebp
xchg
pop
mov
outsl
adc
mov
pop
push
inc
jecxz
jle
sub
inc
pop
loope
aaa
pop
mov
jnp
addr16
imulb
jmp
adc
in
in
mov
lea
loopne
cmp
sub
jp
sub
xor
pop
jmp
jmp
pop
xchg
cmp
data16
or
lahf
mov
in
mov
xor
scas
mov
lock
adc
mov
jbe
imul
lret
add
jle
adc
into
movsb
es
mov
das
aam
shl
jp
xor
fisubrl
shll
popf
or
cmp
xor
pop
ljmp
decl
inc
xor
pop
adc
mov
das
int3
sbb
xor
aad
jecxz
adc
lock
xchg
fidivrl
lods
mov
bound
mov
sbb
rcll
sbb
arpl
xchg
aad
add
and
pop
and
pop
nop
xchg
sub
pop
vandpd
adc
testb
popa
mov
and
jbe
rcl
lods
dec
mov
and
add
mov
add
orb
jmp
push
test
shll
inc
sahf
pop
mov
test
out
xor
pop
dec
jbe
push
icebp
les
cmc
xchg
popa
hlt
push
in
mov
inc
add
int
loop
cwtl
xor
push
and
andl
pop
jae
movsl
push
shlb
jmp
xchg
xchg
push
cltd
xlat
mov
sub
cmp
in
jp
jl
out
sbb
xlat
arpl
aam
incl
and
dec
aad
xor
xor
fisttps
mov
mov
dec
pop
xor
mov
add
mov
int
test
sbb
arpl
cli
out
je
out
fcom
mov
daa
xchg
sar
mov
ret
xor
mov
shrb
movsb
xor
adc
add
imul
lea
out
bnd
xchg
std
mov
js
cwtl
fdivrs
push
jecxz
mov
dec
xchg
ja
xor
mov
fldl
incl
push
sub
xchg
jg
fiaddl
mov
sarl
out
adc
divl
push
and
cmp
push
push
or
mov
push
xchg
push
imul
test
mov
es
xchg
pusha
call
aas
rcl
or
out
movsl
xchg
mov
jne
loop
dec
push
lock
inc
icebp
push
lret
rcrl
push
jbe
in
stos
orb
xor
xchg
cmpsl
bound
cmpsl
lahf
sbb
das
xchg
mov
icebp
addl
sub
scas
push
sub
inc
std
gs
pusha
push
fimuls
popf
les
jae
mov
inc
arpl
sbb
cli
mov
jecxz
in
mov
jmp
mov
leave
jbe
pop
push
fidivrs
push
pop
adc
stos
cmp
lret
or
push
imul
lods
mov
sub
xchg
es
mov
jp
pop
xlat
sti
insb
mov
dec
and
jno
sub
cmc
cmp
inc
cmpsb
outsl
and
inc
mull
jnp
cmp
pushf
sbb
mov
insl
lcall
dec
insl
ficomps
xor
sub
push
sbb
leave
lods
inc
loopne
push
and
ror
xchg
xchg
push
shll
test
lret
push
adc
push
mov
dec
cwtl
lahf
cwtl
addr16
popa
rorl
rcrl
outsb
adc
ja
pop
adc
rclb
insl
push
int
int3
or
fimull
and
push
or
imul
insl
idivb
ja
outsb
loopne
loop
jg
jnp
jle
int
call
cmpsb
sbb
cli
sahf
push
lods
subl
aam
dec
pop
cmc
mov
mov
sub
out
add
mov
dec
sbb
das
jo
jmp
loope
sub
mov
imul
gs
mov
int
dec
dec
into
adc
cmp
jge
inc
mov
sarl
dec
mov
cmp
out
xchg
insb
cmc
pop
push
sub
add
sbb
enter
add
mov
jo
sti
mov
sbb
js
adc
pop
inc
or
lock
dec
into
aas
push
fs
leave
sub
or
dec
mov
adcl
mov
ror
mov
inc
add
testl
add
mov
pop
repz
dec
or
or
std
and
sahf
push
mov
dec
out
push
mov
fcmove
mulb
dec
icebp
cmp
insl
nop
gs
sti
insl
movsb
fistps
or
dec
pop
pop
dec
subl
pop
mov
inc
jb
scas
and
lcall
add
mov
ret
xchg
push
mov
lods
mov
mov
into
mov
inc
pop
adc
rcl
in
call
loope
outsb
in
arpl
pop
push
push
shl
in
arpl
xlat
sbb
mov
adc
rorl
dec
fadds
sub
xchg
fcoml
les
or
mov
cld
leave
loop
ljmp
loop
rclb
lods
xchg
push
das
and
and
jecxz
jne
mov
leave
aaa
sub
cmpsl
ror
dec
or
push
leave
lret
mov
pushf
or
jne
mov
pop
leave
je
lahf
cmpb
mov
adc
int3
push
sbb
les
pop
and
xor
movsb
and
rorl
push
push
sub
adc
iret
popa
inc
stos
rorb
in
lods
iret
das
and
ret
sti
lock
jo
or
mov
sbb
in
jb
int3
sar
es
ret
into
ficomps
xorl
leave
dec
outsl
test
je
jae
pop
idivl
loope
lcall
ss
in
and
push
les
ljmp
and
outsl
inc
xor
pop
mov
sarb
das
dec
jl
mov
and
sbb
ret
mov
cmc
inc
aas
mov
and
xchg
cmovs
sti
aas
dec
xor
fistl
mov
xchg
and
cwtl
mov
or
enter
sbb
mov
xchg
mov
loop
data16
ficoml
dec
dec
adc
stc
mov
aad
or
push
ss
or
test
pop
in
pop
push
pop
mov
xchg
mov
dec
adc
imul
loope
sbb
mov
dec
xchg
scas
pusha
mov
in
out
lods
inc
jbe
shlb
out
sbb
rcrb
lret
adc
outsl
jle
gs
pop
inc
cmpsb
sub
jnp
or
inc
push
dec
dec
stc
mov
dec
mov
jae
stos
scas
adc
stc
push
test
inc
lcall
and
jl
addr16
jb
and
mov
and
jmp
mov
pop
jbe
jno
loope
mov
xchg
mov
ret
sub
vcmppd
cmpsb
push
xlat
insb
stos
daa
cli
out
push
pop
cmpsb
shlb
sbb
jne
roll
lds
adc
inc
cli
push
dec
add
lret
fiadds
fs
shlb
loop
push
add
mov
jnp
call
lahf
daa
cli
inc
push
sub
xorl
xor
mov
cmp
jae
pop
sub
pop
cmpsl
xchg
out
jae
add
test
pop
cmpsb
and
mov
icebp
add
out
jp,pn
rorb
xchg
insb
mov
lds
pusha
movsb
push
rolb
mov
enter
mov
lret
sarb
adc
push
adc
popf
stos
scas
pop
insb
sti
repz
sub
sbbl
mov
ret
shl
xchg
sbbl
sti
cmp
pushf
add
mov
not
sbb
lret
mov
jle
in
popf
ss
push
pop
push
pushw
mov
into
hlt
sub
leave
xchg
mov
dec
sub
xchg
scas
mov
insb
mov
inc
dec
xor
loopne
sbb
adcl
mov
xor
xor
xor
mov
inc
test
pop
mov
and
mov
pusha
nop
adc
xor
fiaddl
lret
sub
mov
adc
mov
shll
pop
cmp
repz
adc
fcoms
adc
mov
pushl
je
sub
push
movsb
mov
pop
push
fbstp
adc
cmp
xchg
loop
in
adc
jg
icebp
das
hlt
sbb
mov
push
mov
push
pop
mov
cld
ds
test
adc
xor
cwtl
pop
into
enter
push
cmp
sti
mov
add
jns
test
mulb
xchg
jb
cmp
divb
filds
movsb
push
mov
pop
jecxz
adc
pop
adc
mov
imul
ds
jno
aas
xor
shll
cmpl
and
xlat
inc
mov
dec
and
addr16
out
push
call
lret
xchg
cmpsl
cmp
je
xchg
push
cltd
xchg
pushf
push
and
je
ja
loop
cld
add
and
lock
cmp
adc
nop
imul
push
out
fdivl
dec
jle
cmp
nop
xchg
xchg
mov
sub
push
ret
xor
aad
inc
xchg
mov
nop
in
decl
or
inc
loop
lods
sbb
cs
not
dec
sbb
push
push
sub
nop
frstor
mov
popf
insb
aam
cltd
and
nop
jns
loopne
test
sub
imul
in
adc
mov
js
lret
xchg
pop
pop
cs
into
shl
sbb
or
push
mov
mov
lret
dec
jmp
add
clc
sub
push
xchg
add
fwait
jb
lds
arpl
xchg
xchg
and
jle
jecxz
aaa
neg
outsb
push
xchg
inc
push
mov
xchg
cmpsl
in
or
or
push
testb
pop
ss
adc
push
xchg
jecxz
or
pop
in
ja
je
ret
pop
mov
cmpsb
adc
sub
dec
jb
loope
mov
lret
mov
or
xor
rorl
dec
shl
cmp
add
dec
xchg
fcoms
add
xchg
mov
mov
pop
int3
push
adc
push
push
cltd
sbb
cltd
push
pop
cmp
or
or
cmp
inc
fstpt
stos
ficoms
push
dec
hlt
arpl
jno
pop
jge
inc
xor
stos
jne
scas
int
adc
or
inc
loop,pn
mov
push
adc
insb
insl
jae
sbb
jmp
std
cmp
jmp
fldcw
pop
call
inc
cmp
movsb
xchg
push
ret
pop
fadds
adc
xchg
outsl
das
mov
leave
xor
shll
jge
movsb
or
sub
mov
xchg
mov
cmp
int
gs
test
jb
daa
cmp
icebp
test
sub
pop
sti
outsb
lret
icebp
jo
into
js
aad
pop
and
rcrb
in
aas
scas
mov
sub
jne
push
idivb
jae
test
pop
popf
test
or
cmp
mov
sahf
addr16
lea
inc
mov
xchg
les
mov
jecxz
out
or
xor
repz
jnp
mov
movsb
sti
dec
jnp
out
loop
call
test
dec
lahf
cli
or
testb
mov
mov
ss
sar
push
push
pop
lea
out
sub
call
inc
cmp
lret
jae
push
fdivrs
mov
mov
mov
mov
mov
pop
xor
popa
out
divb
push
loop
pop
fs
jge
shlb
sbb
test
sbb
scas
jg
mov
andl
or
out
dec
fldcw
mov
xchg
jl
xchg
add
stos
inc
fmull
outsb
push
pop
in
mov
push
mov
or
clc
inc
bound
cltd
movsb
push
push
call
pushf
jg
sub
leave
inc
jo
push
fwait
int3
popa
inc
aam
add
mov
pop
fidivrs
pop
out
subb
cmp
mov
bound
adc
fs
enter
jne
push
pushl
sbb
jns
leave
sbb
cli
jl
sbb
inc
adc
test
push
mov
or
sbb
repz
mov
or
pop
rorl
jo
pop
mov
push
adc
pop
mov
js
xchg
ja
subl
test
xchg
xchg
pop
es
fadds
adc
sbb
in
roll
adc
test
adc
mov
cmc
mov
shl
xchg
fmul
fstl
test
or
stos
cltd
js
movsb
xchg
inc
dec
aaa
dec
jne
imul
sbb
out
sahf
movsl
pop
or
pop
lock
cmp
inc
nop
repz
add
cmc
mov
jle
movb
xchg
fidivl
shl
subl
and
daa
fstpl
call
and
mov
ljmp
stos
adc
inc
or
aam
enter
in
ret
xchg
mov
out
add
lcall
fwait
pop
decl
out
fimuls
sbb
xor
sub
orb
fldenv
out
imul
inc
mov
cmp
loop
and
popa
mov
cmpsl
je
pop
int3
jp
push
cmp
movsl
sbb
sbbb
jge
fidivrs
jge
mov
mov
sub
mov
cmp
subb
cmp
lret
pop
inc
repz
aad
sub
jg
test
push
ljmp
sahf
mov
xchg
mov
subl
sbb
hlt
jae
mov
adc
andb
or
sarl
mov
pusha
push
cltd
jmp
dec
add
mov
arpl
outsl
test
jmp
out
loop
xor
mov
mov
push
inc
sti
loope
addr16
aam
fisttps
mov
mov
lahf
rolb
outsb
xchg
rol
in
inc
shlb
jmp
cmpsl
mov
add
in
sbb
dec
adc
add
xor
cmpsb
addb
pop
lods
mov
adc
test
push
icebp
fistpll
or
sbb
mov
in
push
hlt
pcmpgtd
sbbb
outsl
push
xchg
mov
xchg
jbe
mov
comiss
enter
popf
or
je
iret
xor
loopne
pop
fisttps
push
xchg
enter
les
testb
rcrl
ds
sub
call
nop
adc
fwait
stos
inc
fnsave
jno
or
adc
push
and
push
arpl
push
ret
jl
sbb
cmp
testl
mov
add
jle
orb
pop
std
cmp
push
fucom
call
adc
jp
push
les
cmp
adc
js
lds
adc
fs
xor
sub
lock
sbb
insb
loop
ja
daa
push
lds
push
dec
and
adc
subb
in
sbb
cs
push
arpl
movl
pop
out
in
int
cmp
cvttps2pi
addr16
xorb
xor
nop
mov
ficoms
mov
cltd
cmpb
out
mov
fwait
subl
dec
mov
fidivl
lds
jno
jns
int3
insl
or
inc
xchg
popa
loop
pusha
xchg
jo
in
fildl
fcomps
lcall
jb
adc
int
mov
xchg
pop
addl
sti
mov
dec
mov
aad
popf
push
push
dec
insl
mov
mov
insl
push
cmp
or
jl
jae
in
hlt
lahf
pop
mov
mov
jb
or
flds
rcll
xor
sahf
pushf
xor
cmp
fsubr
jne
fidivs
xchg
mov
int3
sub
add
push
fs
mov
fbstp
pop
mov
imul
lods
bound
xchg
test
in
mov
cmp
popa
rol
xchg
push
push
sbb
and
pusha
and
fs
and
or
add
loope
mov
mov
and
dec
xor
int3
js
lret
mov
sbb
pop
sbb
xchg
push
leave
lcall
stos
nop
or
push
sbbb
sbb
push
movl
clc
jge
mov
add
jg
and
inc
in
mov
fcomps
adc
xor
fimuls
pop
adc
test
enter
in
test
inc
pushf
scas
rorb
cmp
loope
in
mov
mov
xchg
ss
and
call
sbb
push
dec
shr
pusha
jecxz
sahf
insb
xchg
and
sub
xor
and
ds
add
jle
pop
push
aaa
xchg
xor
pusha
inc
mov
int3
aam
mov
int3
pop
cld
int
xor
out
stos
mov
sbbb
push
jp
in
movsb
movsb
dec
shrb
lods
cmc
xor
mov
sbb
inc
mov
es
inc
pusha
cwtl
fdivrs
jnp
pop
jle
test
inc
jg
xor
mov
enter
ret
jns
jecxz
dec
rcrb
dec
push
and
call
sub
sub
lcall
add
sti
mov
or
push
cwtl
mov
adc
pop
fwait
iret
cli
cmp
sbb
push
or
insl
sbb
mov
add
inc
mov
movsl
dec
jne
test
outsb
inc
sub
rcll
inc
sahf
pop
add
outsb
cmp
pop
mov
ret
mov
inc
out
and
sub
or
sbb
fstpt
pop
stos
pushf
mov
movsl
lods
inc
mov
fs
jne
push
push
jle
loope
cld
jnp
add
popa
push
push
lods
mov
adc
dec
jecxz
jb
data16
mov
test
daa
cmpsb
and
sub
leave
mov
lds
push
lock
cmp
arpl
jno
lahf
sbb
aad
fucom
xor
out
lcall
sbb
sub
mov
cmpsb
nop
add
pop
loop
mov
movsb
pop
nop
mov
mov
outsl
jns
fs
push
loop
les
xchg
and
mov
xchg
mov
jg
pop
mov
mov
fldl
cmc
lret
in
xchg
inc
sahf
xor
lahf
push
mov
in
dec
inc
lret
inc
jecxz
pop
cmc
insl
sbb
into
pusha
iret
es
cs
fistl
inc
push
xor
jmp
mov
sub
lcall
sub
add
pop
inc
into
lods
lea
xor
cmpsb
dec
int3
rorb
jb
xor
stc
outsb
inc
insl
clc
mov
jecxz
cltd
sbb
jecxz
rcr
ljmp
enter
cmp
xor
inc
insl
orb
xor
in
mov
push
cltd
or
pop
jl
mov
mov
sbb
jne
int
sbb
into
rol
jo
inc
enter
stos
insl
jmp
jmp
push
xchg
or
imul
mov
and
dec
and
mov
xchg
sbb
shl
cmpsl
mov
mov
xchg
leave
fwait
xchg
sbb
mov
jp
imul
push
inc
in
sub
cmp
mov
inc
leave
sub
dec
ds
sub
push
xchg
push
lahf
sarb
or
xchg
add
and
sbb
inc
pop
lcall
add
dec
xchg
cltd
lret
mov
inc
jae
pop
in
adc
loop
sahf
lods
test
inc
jmp
insb
pop
mov
xor
mov
test
dec
pusha
cmpsb
repnz
test
cmp
cmp
out
or
leave
mov
mov
enter
cs
ljmp
ja
ss
xor
aaa
cmp
mov
rcl
aas
dec
xchg
call
repnz
add
mov
adc
xchg
xchg
das
push
xchg
push
dec
push
inc
add
add
out
jge
sub
pop
jg
cmp
mov
idivb
xor
sti
adc
dec
data16
push
mov
add
popf
out
incb
or
daa
clc
xor
stos
add
push
in
or
repnz
adcl
mov
int
fwait
das
cmp
std
rcl
dec
push
pushf
cmp
jmp
in
sbb
inc
loopne
or
pop
rcr
and
cmp
sbb
jmp
mov
lret
lcall
inc
pop
pusha
add
leave
adc
fisttps
daa
pop
arpl
mov
jnp
in
cmp
cmp
mov
and
mov
rclb
das
pushf
scas
add
in
dec
and
sti
repnz
pushf
ret
lret
mov
xor
es
sbb
dec
xor
repz
lcall
lahf
int3
rorl
mov
mov
cmp
cld
test
mov
stc
out
in
pop
jnp
mov
test
sbb
xchg
cld
lret
inc
xchg
push
mov
mov
inc
lea
jno
imul
pop
pop
rorb
mov
add
stc
nop
xchg
push
daa
pop
xchg
shr
jae
cmp
mov
jge
outsl
in
out
mov
xorb
sub
aaa
fucompp
jp
sub
jnp
ror
pop
ret
scas
xor
push
mov
adc
adc
cmpb
mov
cmpsl
in
xor
addl
add
fdivs
out
xchg
xor
jnp
sarb
out
fdivl
rclb
jg
inc
push
cmp
push
xchg
inc
add
lea
push
mov
lret
add
loopne
xchg
das
sub
jmp
out
andb
mov
push
cmpsl
movsl
jne
fcomps
jno
sub
push
andb
iret
leave
adc
and
sbb
or
push
ss
sub
mov
in
fucomi
in
and
cmp
das
insl
nop
cmp
lret
movsl
fldenv
pop
mov
call
out
bound
add
sub
lds
sub
nop
sub
cmp
inc
test
jle
cmp
movsb
adcb
movb
push
pop
pop
pop
in
jns
mov
xchg
jmp
sub
cmp
hlt
sbb
popf
xchg
adc
faddp
mul
jno
scas
stos
push
mov
insb
or
mov
mov
cmp
call
js
inc
mov
add
mov
jge
clc
mov
adc
add
or
in
add
mov
pop
adc
sbb
fwait
ljmp
negb
pushf
loopne
push
repnz
test
scas
push
lahf
rclb
test
pusha
fs
pop
insb
sub
aad
sahf
lcall
or
jp
pop
icebp
out
sbbl
test
xchg
cmp
jmp
inc
out
imull
ret
ljmp
mov
mov
and
fsubr
es
sub
sbb
add
xchg
jae
mov
xor
ja
xchg
fadds
xor
sub
adc
adc
mov
ljmp
mov
mov
lods
add
dec
adc
cmp
push
and
pop
inc
push
cmp
inc
stc
into
jg
and
shl
or
inc
in
dec
push
nop
pop
pusha
pop
or
or
mov
jne
es
inc
xchg
inc
or
out
mov
ret
scas
xlat
dec
fnstsw
cwtl
sbb
inc
in
cwtl
pop
pop
jmp
dec
roll
jbe
lods
ficompl
xor
mov
pusha
adc
inc
rol
in
push
inc
mov
and
or
call
lcall
push
mov
repz
outsb
into
aaa
inc
jmp
aaa
jg
pop
ds
mov
enter
test
movsl
and
jecxz
lahf
clc
jno
xor
dec
and
les
inc
jg
xchg
sub
stos
jp
mov
and
imul
hlt
dec
push
jmp
cmc
xor
xor
push
stos
add
mov
or
cmpsl
pop
cltd
cmp
cmp
jge
push
sub
jo
jp
cmp
das
iret
push
aad
adc
not
xor
sbb
xchg
jl
cmc
push
push
outsl
rcrb
cmpsl
sub
xchg
jne
fstpt
sbb
lret
out
jg
mov
outsl
xor
int3
or
outsl
pop
cmc
rclb
sbb
and
mov
cmpb
jns
hlt
jge
mov
cmp
xchg
or
ret
push
shll
adc
sub
addr16
mov
xchg
fwait
cmp
push
je
aam
cwtl
int
cmp
dec
mov
sub
ja
out
out
jne
sbb
mov
jecxz
pushf
mov
fimuls
cli
mov
mov
movsl
popa
xor
and
subw
insl
aas
sbb
shl
jmp
fmuls
xchg
sahf
in
sbb
pop
sub
xor
das
adcb
insb
and
aam
xchg
pop
and
pushf
pop
loopne
outsl
jg
sti
les
loope
adc
jne
rcl
stos
adcb
jo
and
push
mov
adc
lods
mov
std
aaa
jb
mov
adc
lret
pop
xchg
xchg
add
mov
movsl
mov
std
jp
xor
lods
sbb
pop
rorl
fldt
mov
xchg
push
mov
in
jbe
pop
xchg
lds
pop
aaa
xor
xchg
cli
test
jecxz
dec
iret
das
pop
leave
lret
push
and
aam
in
sub
aad
sbb
sub
cmovae
sbb
push
inc
in
out
mov
sub
test
xchg
ja
imul
xor
icebp
push
xchg
add
mov
mov
out
jl
pop
cmp
add
ja
mov
jl
scas
pop
in
xchg
and
hlt
adc
jl
adc
mov
je
inc
jge
aas
add
cmp
sahf
sbb
mov
ljmp
xor
mov
cltd
fnstenv
iret
sti
out
sub
movsl
imul
jge
in
aam
mov
sbb
push
jae
stos
ja
ret
ljmp
sub
jmp
mov
popa
push
jae
cmp
scas
dec
pushf
mov
inc
aas
lahf
or
fdiv
shll
cltd
xchg
cmp
idivl
and
adc
call
lahf
sbb
sub
or
mov
sub
arpl
fdivrs
test
dec
rcr
xlat
xchg
sti
lock
into
push
cwtl
mov
fmull
data16
push
pop
or
dec
sti
shll
jp
mov
mov
lea
jmp
aam
cli
cmp
ficomps
xor
sbb
rep
lret
pop
aad
inc
push
inc
test
in
mov
addr16
jb
shrb
push
fs
jp
inc
ror
mov
negb
or
pop
shll
cmpsl
cmpsl
out
scas
push
xlat
ja
fidivl
xorb
xchg
sbb
rcrb
and
sbb
xor
inc
xor
xchg
mov
push
sub
mov
add
mov
addl
lret
jns
push
dec
pop
xor
movsl
dec
pop
lods
xchg
jp
test
add
or
xchg
shl
rsqrtps
inc
out
insl
xlat
fdivr
out
mov
xor
shll
dec
pop
and
gs
inc
xchg
scas
jo
xchg
mov
int
xchg
inc
shlb
cwtl
addb
add
jno
sub
mov
out
pop
cmp
or
mov
sbb
push
test
adc
fsubs
push
insb
or
into
fdivs
cmp
je
and
or
jae
pop
inc
mov
fidivs
insb
ljmp
dec
add
xchg
dec
arpl
cwtl
xchg
adc
push
sbb
xchg
xchg
cli
stc
fstps
fiadds
push
loopne
movsl
ds
mov
out
mov
xor
or
mov
push
sub
xor
imul
popf
push
pop
mul
das
add
sub
out
mov
mov
shr
jecxz
rcrb
cmp
mov
test
inc
lea
push
cmp
arpl
sbb
outsb
jns
cmp
adc
push
int3
leave
jl
jo
sbb
or
jg
bound
sub
loopne
add
mov
jnp
pushf
add
jmp
mov
subb
test
xchg
cmp
push
inc
or
testb
pusha
popf
mov
mov
xchg
call
dec
sbb
inc
push
icebp
ss
idivl
loop
mov
popf
jne
clc
hlt
add
adc
aam
stos
jo
iret
or
pushf
movsb
in
cld
out
aaa
xchg
sbb
dec
es
imul
xor
cmp
inc
cltd
adc
or
cmp
mov
adc
xchg
push
mov
mov
adc
xchg
js,pn
mov
out
sbb
mov
lret
xor
adc
ljmp
leave
pop
rorb
ret
inc
inc
mov
ret
mov
lret
and
push
aad
mov
jl
dec
mov
jns
pop
sbb
xchg
mov
add
push
xchg
out
iret
fisubs
sub
cmp
pusha
dec
rcl
insb
and
cld
in
dec
adc
cmp
lea
mov
add
or
push
imul
scas
popa
jle
stc
daa
sub
inc
push
cmp
in
iret
ljmp
push
inc
cmpsb
call
push
pop
push
inc
jl
ret
pop
add
stos
pop
xchg
or
dec
dec
xchg
in
mulb
in
pop
and
add
cwtl
or
jnp
pop
jecxz
pop
ror
cmp
mov
jbe
mov
out
enter
inc
mov
cmp
ljmp
fistl
movsl
sub
in
lret
into
push
xor
dec
xor
inc
fisttps
lahf
inc
lea
shll
cmc
imul
ret
roll
adc
xor
xlat
mov
pop
out
add
gs
outsl
stc
mov
fadd
js
cmp
cs
fnstsw
mov
out
nop
das
ds
shl
lods
std
jb
repnz
mov
jbe
ds
xchg
call
xor
test
sub
sbb
ljmp
lcall
mov
dec
xchg
pop
adc
push
or
sbb
subb
sbb
hlt
push
sahf
and
push
stos
inc
cmpsl
adc
mov
fucompp
cmpsb
imul
dec
xchg
jl
jl
sub
xchg
ss
scas
inc
mov
adc
jl
and
mov
mov
movsl
icebp
jns
ficomps
popf
lret
les
inc
inc
clc
xor
hlt
daa
mov
cli
gs
mov
xchg
stos
lods
out
and
add
cwtl
jns
cmp
popa
and
fwait
sbb
push
xchg
aas
ljmp
sbb
push
and
lahf
imul
repz
inc
mov
mov
out
repnz
rorl
pop
mov
dec
stc
dec
fildl
shlb
sahf
ficoms
xchg
xor
cmp
pop
flds
call
adc
movsl
xchg
xchg
dec
mov
xor
fwait
jmp
cmp
ss
sub
aad
test
mov
pop
pop
sub
sti
push
sbbl
sbb
adcl
push
into
and
or
imul
scas
cmpsb
cwtl
xchg
and
inc
outsl
mov
xchg
popf
adc
stc
and
mov
lods
push
or
scas
ret
mov
and
mov
sbb
mov
aaa
lahf
xchg
or
loopne
adc
pop
cmc
add
rolb
mov
push
scas
xor
jge
andb
dec
lods
arpl
xor
add
sti
mov
push
xor
dec
and
ret
pop
push
popf
mov
cmp
or
pop
push
adc
fistpll
xor
loop
pusha
add
int3
aad
fsubs
mov
lock
nop
scas
hlt
dec
popf
fld
push
lds
xor
cmc
jp
idiv
push
mov
outsb
js
adc
mov
ret
fcom
sub
ret
clc
jmp
in
mov
sbb
loop
and
fsts
mov
mov
adc
mov
popa
inc
sbb
pusha
sbb
stos
loopne
jne
scas
rcrb
in
les
mov
idivl
cmp
pop
mov
aad
jmp
push
fdivrs
leave
sti
aad
mov
pop
cmp
ss
leave
sub
test
and
add
lds
lods
dec
cs
mov
push
test
and
xchg
addr16
or
mov
ficomps
aas
jne
sbb
inc
lods
inc
icebp
pushl
sbb
cmpsl
in
es
push
idivb
sti
sub
mov
push
adc
fmul
mov
inc
xor
imul
inc
or
jmp
int3
popf
cmp
mov
lahf
push
pusha
or
xchg
rolb
xchg
fcmovnbe
cmp
lcall
enter
adc
ficoms
outsl
push
adc
dec
mov
fwait
popf
in
ret
popf
icebp
or
push
mov
ja
pop
xchg
add
aam
xor
cmp
jp
or
mov
lcall
pop
add
call
mov
movsl
movsl
xor
cmp
and
mov
in
xor
cmp
stc
pop
jns
inc
outsl
xchg
mov
xchg
mov
std
fadds
and
pop
add
adcb
pop
jg
sbbb
xchg
lahf
mov
stos
into
xor
in
lret
out
add
pop
lock
jbe
mov
movsl
add
aad
or
xor
mov
or
jecxz
push
xor
int
jl
pop
sbb
test
lds
stos
xor
adc
insl
cwtl
ds
sbb
mov
insb
inc
rcl
sub
fnstsw
lea
adc
jne
pop
pop
sub
xor
enter
xorb
xchg
das
cmpsl
adc
rcrb
movsl
cmp
rorl
add
dec
inc
jp
fildl
test
xchg
jmp
push
sbb
cld
dec
jnp
cmp
loop
adc
push
pop
inc
or
test
adc
in
dec
inc
aas
loop
dec
into
xchg
fdivs
xor
mov
mov
in
mov
daa
je
inc
inc
and
pushf
jbe
out
test
pop
syscall
mov
enter
sub
insb
xchg
mov
pop
pop
push
adcl
int
pop
andl
iret
mov
push
hlt
pop
cmp
xchg
bnd
jp
ret
xchg
jg
icebp
movsb
cmpsb
xchg
mov
std
add
fs
mov
dec
hlt
sbb
cmp
jg
push
ja
loop
push
dec
push
xchg
pusha
jnp
repz
mov
mov
sbbl
push
iret
imul
sarl
rorb
push
dec
mull
xor
popa
push
insb
mov
pop
call
jp
pslld
cmp
push
cmp
out
push
sti
jne
stos
mov
cwtl
rep
mov
sbb
jecxz
shll
mov
or
cmpb
ljmp
sbb
fs
lock
pop
push
iret
inc
dec
aas
inc
ficompl
dec
outsb
popf
push
pop
and
lahf
pop
pop
xchg
xchg
fmuls
inc
jle
andl
int
cs
jecxz
repz
jge
ljmp
push
out
mov
mov
out
dec
jg
into
sbb
or
aaa
rcr
mov
insb
pop
mov
sti
mov
std
jne
fdivrs
cmc
adc
sub
add
and
cli
pop
xchg
ljmp
fidivrs
fsubs
inc
les
mov
inc
rolb
sbb
inc
mov
insl
inc
push
shl
clc
out
push
imul
es
dec
sub
maskmovq
testl
push
lret
adc
popf
into
xchg
cmovae
pop
and
imul
push
lock
mov
stos
je
pop
pop
push
cmp
gs
dec
in
jne
stc
push
fsubrp
test
and
fs
dec
orl
lea
cmp
rorb
adc
xor
mov
mov
sub
adc
xchg
xlat
xor
add
xchg
cmp
mov
dec
mov
jno
jge
inc
jb
sbb
xor
test
sub
lods
insl
cmp
data16
jecxz
or
jno
fnstsw
sti
pusha
jb
addl
pop
xlat
pop
hlt
insl
aad
popa
mov
arpl
jecxz
lret
nop
cwtl
mov
add
xchg
ja
iret
inc
jg
jmp
xor
push
push
adc
sarl
or
cmpl
cli
cmp
push
xor
mov
dec
mov
push
and
aam
pop
adc
jno
mov
out
xchg
xor
mov
aas
or
add
bound
push
loop
pop
jb
stos
lock
data16
mov
adc
enter
xor
xor
or
mov
pop
push
stos
and
dec
cmp
aas
testl
cwtl
or
mov
pop
inc
daa
mov
jmp
add
mov
sahf
ret
pop
jbe
outsl
push
pop
jnp
aas
fdivl
pop
mov
pop
xor
scas
xchg
xor
mov
mov
rdpmc
mov
les
cmpsb
xchg
das
test
mov
xchg
xlat
sbb
cmc
pop
scas
jge
outsl
mov
xchg
fimull
mov
movsl
jnp
subl
push
mov
pop
mov
xchg
fldt
shl
mov
xchg
xor
popa
out
and
jno
inc
push
fisubs
cmp
fistl
in
sub
mov
das
mov
mov
aad
adc
into
mov
inc
in
mov
sar
mov
fistpll
add
arpl
test
inc
and
jae
lea
hlt
mov
push
xrelease
xchg
mov
cmpb
pop
sbb
mov
cwtl
jns
shrb
sub
hlt
adc
mov
jge
inc
jg
add
mov
jb
sbb
out
sub
nop
xlat
lcall
inc
lds
data16
jae
cltd
add
cmp
addb
ret
jno
std
jae
xchg
add
je
mov
scas
in
fisttpll
cli
sub
mov
add
or
fnstsw
dec
sarb
pushf
stos
pop
xchg
pop
pop
jl
jns
mov
pusha
sub
jg
push
push
xor
imul
fcomip
int
fbld
mov
lock
adc
sub
jae
xchg
mov
testb
lcall
sbb
push
inc
dec
inc
push
pushf
icebp
dec
adc
xchg
nop
fdivs
movsl
dec
adc
dec
cmpsb
gs
int
pop
jmp
sarb
jg
xor
fnsave
lahf
push
addr16
sub
push
insl
aad
test
sar
push
inc
idiv
test
bound
filds
daa
out
push
push
push
jmp
les
xor
inc
inc
xchg
xor
inc
inc
dec
pop
adc
scas
aas
add
adc
add
icebp
fsubr
mov
pop
jp
popf
mov
xlat
fwait
or
imul
mov
roll
cs
push
mov
iret
rorb
cs
mov
push
aas
dec
mov
leave
addr16
mov
xchg
movsb
pop
mov
movsb
int3
lret
and
mov
lea
stos
sub
stc
sti
aad
xchg
mov
dec
sbb
rolb
lods
rcl
cmpl
push
lods
ret
mov
xchg
call
cmpsb
addr16
popf
ljmp
iret
jo
mov
xor
sahf
cli
addl
sub
ljmp
or
mov
clc
lea
sub
int
cmp
ss
adc
ss
dec
cmpsb
mov
sub
pop
jecxz
xchg
xor
pop
mov
cmp
jg
or
xor
xchg
mov
shrb
adc
xchg
push
mov
and
dec
mov
subl
sbbl
test
dec
loopne
cld
loopne
loop
or
gs
pushf
mov
inc
xor
jno
lods
test
or
add
stos
sub
sti
shlb
mov
mov
movsl
outsl
mov
adc
in
xchg
test
leave
push
cltd
and
xorb
sub
fucomi
xchg
cmp
cmpsl
loopne
lock
and
mov
shl
lods
popf
aaa
xlat
push
cli
out
adc
popa
negb
mov
imul
mov
js
inc
cmp
lcall
pop
sbb
and
mov
fsts
jmp
mov
pusha
lcall
push
push
in
js
jp
mov
stos
int
or
nop
jge
pop
xchg
mov
jae
dec
sbb
outsl
sbb
adcb
insb
loope
pop
std
mov
push
push
jo
mov
sub
bound
jle
loope
xor
mov
fadds
mov
lahf
and
out
add
or
jo
imul
and
in
or
push
xor
cmc
pusha
mov
add
loope
xchg
push
dec
push
mov
mov
mov
in
dec
add
hlt
and
sahf
pop
iret
dec
pop
pop
pushf
out
jno
shll
pushf
sub
cltd
sbb
cmp
jne
mov
inc
pop
jo
jae
shl
je
aaa
lea
adc
mov
dec
pop
cmp
fidivrl
cmpsb
push
aam
xor
sbb
add
jnp
mov
hlt
into
es
pop
inc
call
xchg
divb
inc
inc
mov
outsb
inc
icebp
cmpl
leave
sub
out
or
repnz
in
xor
xlat
outsl
movsl
loop
sbb
mov
sub
dec
xchg
lahf
mulb
or
mov
mov
loop
push
cmp
loopne
sahf
cmp
imul
mov
cli
mov
add
lcall
push
insb
dec
test
xchg
adc
pusha
ret
xchg
fsubr
leave
pop
fnstenv
mov
lods
adc
add
scas
leave
inc
idivl
mov
test
stc
stc
je
dec
dec
xchg
pop
lcall
xchg
leave
xchg
add
aam
mov
je
in
and
dec
sub
xor
pusha
cld
jl
push
adc
movsb
mov
xchg
mov
dec
int
dec
push
mov
loop
cmp
je
dec
cltd
sub
xor
pusha
inc
xor
push
jno
loopne
aam
fisubrs
push
leave
jmp
pop
sbb
cmp
mov
mov
dec
in
stc
and
adc
pop
adc
ljmp
enter
int3
jno
push
sbb
mov
lahf
addl
mov
jp
fcoms
fs
push
add
dec
adc
push
movsl
lods
xor
sbb
test
cmp
inc
sub
sbb
xchg
ret
sub
dec
push
add
ret
xor
adc
inc
shlb
mov
cmp
fwait
push
sar
lods
xor
cmpsb
stc
gs
cmp
sub
lea
out
push
faddl
shll
mov
lea
pop
cmp
push
jmp
xchg
or
stos
loop
mov
push
cmpb
fcmovu
xor
jecxz
dec
les
fistl
pop
xor
insb
sbb
scas
roll
dec
jmp
inc
out
inc
mul
mov
shlb
inc
rorb
test
neg
mov
mov
scas
xor
xchg
popf
adc
out
sub
popf
fmull
add
xchg
adc
sub
lahf
xchg
jp
push
mov
clc
push
cmp
xchg
ficomps
dec
xchg
outsb
dec
sti
push
mov
fsubl
sahf
inc
hlt
lods
in
sti
push
cmpsb
pop
cmc
mov
adc
movsl
add
mov
stc
mov
jge
or
cmpsb
mov
aad
call
rep
in
fimull
mov
cmp
adcl
push
jb
add
sbb
insb
into
adc
out
fsubrl
cmp
and
push
add
mov
ds
jnp
xor
sbb
jbe
jns
in
daa
cltd
xchg
cs
sbbb
mov
mov
adc
xchg
out
xor
mov
fs
ret
out
jl
subl
pushf
rep
aaa
dec
sbb
cmp
aaa
mov
jnp
jno
sbb
adc
cwtl
rcr
je
push
popl
movsl
data16
test
and
sbb
or
dec
arpl
shrb
cmp
dec
pushf
sub
xchg
int3
xchg
les
popf
xchg
test
xchg
out
lcall
and
out
mov
call
aas
push
and
cmp
ss
or
test
adc
popf
inc
lret
xor
test
test
sbbl
lcall
cmpsl
dec
inc
loop
inc
test
out
pop
daa
enter
lret
mov
cmpsl
fildl
xchg
pop
sbb
popa
pop
xchg
jns
push
jg
cmp
inc
mov
sub
adcl
sub
sti
jns
call
jnp
sub
je
popf
sti
mov
mov
push
stos
mov
js
push
sbb
and
loopne
mov
lret
or
or
iret
repz
xorb
enter
movsl
mov
adc
in
jge
aad
arpl
mov
cmc
mov
scas
jge
sbb
aad
xor
dec
aaa
adc
and
scas
xor
dec
in
pop
mov
pop
jae
push
pop
adc
xchg
popa
xor
fsubl
loop
stos
jmp
mov
stc
sbb
fsts
shlb
out
add
jno
sub
or
jmp
mov
push
fisubl
clc
push
jg
pop
cmp
test
and
nop
test
and
loop
sti
adc
imul
inc
imul
fists
jl
fs
cltd
mov
jo
pop
js
dec
xchg
cld
mov
xchg
xchg
sahf
pop
test
cltd
add
mov
scas
push
cltd
flds
nop
repz
push
int
les
fimull
mov
jecxz
or
lods
popf
and
inc
fldenv
sub
stc
cmpsl
fimull
cmp
lcall
jecxz
incb
mov
lcall
pop
dec
imul
push
lcall
mov
repz
sub
xor
les
rclb
xchg
je
inc
mov
dec
mov
add
or
pop
mov
arpl
jg
and
sub
push
push
in
dec
inc
rcrb
movsl
pop
mov
cwtl
mov
xchg
andl
movsb
add
pop
setbe
push
inc
lcall
cmp
das
mov
cltd
sub
push
lcall
cwtl
loope
std
loope
clc
push
dec
test
dec
cmpsl
rcrb
mov
and
sub
jg
mov
dec
push
xchg
jns
cmc
mov
outsb
mov
js
shlb
out
jae
mov
adc
mov
or
loopne
pushl
sarl
dec
inc
jb
sbb
dec
xchg
gs
dec
sbb
and
orb
jmp
jg
add
xor
loop
lods
mov
imul
int
out
inc
dec
lock
cmpl
dec
inc
cmp
fdivs
data16
mov
popa
gs
pop
xchg
cmp
pop
cmp
jno
shll
push
out
and
aaa
pop
sub
inc
pushf
loop
movsl
popa
mov
test
cli
mov
cmp
iret
ds
jl
xor
data16
and
aas
clc
test
inc
dec
or
bound
pop
or
fnstcw
pop
ja
cld
jmp
std
mov
bnd
out
cmpsb
stc
jo
in
mov
mov
ret
scas
dec
pslld
pop
andb
pop
mov
mov
leave
jno
sub
loopne
or
dec
cmpb
lahf
ljmp
out
lret
mov
bound
push
roll
cmpsl
sbb
rorb
xor
mov
testl
iret
jecxz
sbb
shlb
pop
dec
xor
call
push
mov
rcrl
rcrl
inc
das
add
or
jecxz
fwait
mulb
imul
pop
xchg
adc
fidivrl
shrl
cmpsb
mov
sarl
int
adc
xchg
jns
add
sbb
pop
mov
push
lock
cmp
andb
jle
jge
mov
add
movsb
shrb
hlt
push
ja
fbld
imul
test
leave
repz
jne
dec
mov
dec
int3
aam
ja
fdivs
addl
xchg
or
mov
shl
and
out
inc
subb
jne
pop
adc
ret
adc
adc
iret
mov
xchg
std
cmp
inc
shll
cli
xchg
add
aas
sti
cmp
add
sbb
ret
lahf
movsb
mov
or
xchg
nop
mov
in
repz
pop
jnp
cmp
push
test
xor
inc
lock
clc
adc
shll
lea
dec
xchg
rcr
insl
xor
mov
mov
pop
int
stos
xchg
bound
andl
add
clc
ret
test
push
add
imul
sbb
ja
xor
mov
std
sbb
dec
out
push
insb
jbe
xchg
dec
xchg
mov
shll
sub
jg
fwait
cld
mov
cmp
jnp
pop
sahf
das
test
cltd
mov
lcall
mov
push
push
cli
faddl
lahf
add
add
enter
sub
pop
mov
stos
sbb
xchg
sub
cmpb
lcall
push
mov
mov
in
mov
sub
outsl
rolb
mov
push
orl
cmp
repnz
inc
mov
sbb
out
imul
and
dec
imul
sarb
xchg
cmp
ret
mov
mov
inc
sbb
les
sbb
arpl
ret
pop
enter
and
in
sbb
je
adc
push
popf
xor
outsb
shll
cmp
ficoms
clc
mov
testl
stos
mov
pop
fs
fiaddl
les
pop
into
sub
adc
mov
daa
add
into
data16
into
xchg
iret
push
mov
sub
std
mov
pushf
push
cs
add
lret
push
xchg
adc
jae
nop
cltd
jno
sbbl
cmp
ja
bound
les
xchg
xchg
cmp
hlt
fistpll
aad
nop
fldcw
test
mov
jle
insl
push
push
adc
scas
je
jmp
mov
call
sub
mov
sbb
gs
pop
mov
scas
sub
push
imul
push
fbstp
in
fbld
das
and
xchg
test
cs
mov
out
insl
xchg
loop
pop
cltd
fidivrl
adc
ret
sub
add
in
into
clc
std
popf
sbb
aaa
pop
fsubs
cld
cmp
xchg
sahf
mov
adc
fcmovb
inc
cmpsb
mov
push
jl
jecxz
mov
cli
inc
xchg
fstp
aam
cmpsl
fnsave
stos
ret
mov
jnp
pop
xchg
adc
sub
pusha
sbb
jo
dec
mov
mov
pop
mov
loope
insl
inc
jecxz
push
mov
rorl
popf
xchg
sub
mov
rcrb
push
leave
push
shll
sahf
cli
or
adc
sbb
icebp
jne
into
pop
lahf
cmp
out
adc
add
les
int3
mov
das
mov
xchg
orb
xor
jae
push
pop
xchg
cmp
mov
enter
adc
mov
xor
jbe
lods
xchg
mov
xchg
out
xchg
repz
jl
stc
push
test
jne
dec
mov
inc
mov
mov
fwait
inc
movsb
jnp
and
aaa
jne
popa
mov
ds
sub
adc
enter
loopne
int
jmp
loope
xchg
loop
jae
cmp
add
cs
cltd
clc
aas
mov
inc
jnp
inc
iret
push
jb
mov
add
filds
mov
insl
lods
ret
adc
sub
out
xor
stos
pop
ds
or
aas
fdivrl
jno
hlt
pop
jp
xor
sbb
sahf
mov
adc
fwait
icebp
enter
adc
dec
push
mov
neg
sub
mov
dec
cmc
fisttps
cwtl
movsl
push
xlat
dec
inc
push
das
and
xor
and
or
sbb
cld
test
jl
fsubl
pop
adc
push
pushl
sbb
ret
inc
jae
leave
xor
dec
cmpsb
inc
jno
cmp
pusha
cs
push
out
mov
inc
dec
xor
xchg
add
jl
and
pop
and
pop
jmp
push
in
arpl
and
imul
pop
push
inc
cli
sarb
and
inc
imul
mov
xchg
pop
mov
mov
mov
lods
and
or
fs
mov
and
inc
sbb
out
push
mov
jbe
dec
adc
adc
lret
insb
sbb
stc
add
call
lock
in
or
clc
test
xor
lock
sbb
loopne
lret
cmpsb
je
ljmp
mov
pop
cs
movsb
fcmovbe
pop
popf
in
fucom
inc
mov
mov
dec
incl
out
adc
out
xchg
inc
xchg
popf
in
pop
cmp
sub
xchg
mov
add
inc
cltd
in
xchg
fwait
mov
mov
outsl
jbe
dec
out
lods
mov
sbb
mov
ret
and
dec
lock
sbb
mov
lret
rorb
call
push
mov
int
inc
cli
push
sub
sbb
pop
mov
subb
pop
into
sahf
mov
das
inc
shll
lods
js
ds
sbb
out
lcall
data16
lret
sbb
sub
aas
mov
inc
jae
mov
mov
jnp
jge
mov
ljmp
lds
out
push
pop
icebp
flds
aad
sub
xor
mov
inc
or
fsubl
pop
push
into
jae
fcmove
insb
ds
les
jl
leave
pop
xchg
jge
stos
cmpsl
pop
sub
pop
stos
out
shlb
shll
loop
cmpsb
mov
je
adc
mov
in
divb
cmp
sub
gs
aam
or
jne
jp
dec
pop
sbb
jbe
inc
push
dec
dec
jge
insb
or
movsb
fs
mov
cmp
xlat
and
or
bound
mov
adc
push
jmp
jnp,pn
inc
lods
sbbb
lock
shll
or
mov
mov
pop
adc
xchg
jb
dec
mov
pop
cmp
imul
adc
out
mov
sub
je
sub
ficompl
mov
dec
mov
inc
out
pusha
stos
clc
je
addr16
jp
fwait
cwtl
xchg
sti
push
mov
adc
dec
das
pusha
sbb
cmpsb
jno
das
add
push
nop
or
imul
inc
enter
mov
fcomi
mov
adc
fistl
in
jo
cmp
insl
add
in
mov
loope
cmp
shrl
cwtl
scas
int3
sub
mov
mov
gs
inc
jae
mov
and
fcoml
mov
dec
mov
sub
ja
jl
xor
stc
fwait
stos
loop
mov
loopne
movb
jbe
xchg
fsubl
out
add
loop
data16
jl
add
fdivs
jae
pop
and
push
xchg
xchg
inc
aas
jle
fs
or
rorb
sahf
jmp
pop
inc
js
out
pop
mov
sbb
addb
sbb
xchg
jg
push
lret
adc
les
mov
insl
sbb
push
fisttpl
gs
jecxz
mov
lcall
repz
mov
data16
dec
test
adc
mov
adc
cmp
jecxz
cmp
fs
dec
mov
or
xchg
xchg
nop
push
mov
mov
les
outsb
sbb
mov
ss
scas
xor
adc
pop
jle
push
xor
cld
dec
sbb
in
andb
lods
sbb
loope
pusha
ret
mov
in
mov
inc
push
jg
dec
or
sub
je
btr
push
pop
lods
movsl
jae
cmp
mov
xchg
push
cmc
loope
mov
jo
and
std
inc
inc
jl
dec
pop
pushf
je
adc
push
dec
sub
xchg
in
stc
ds
add
push
jns
out
jmp
sub
std
test
mov
pop
jge
cld
push
jp
jp
inc
ret
push
jns
jle
mov
push
cli
xchg
adc
push
sbb
dec
cmp
je
and
in
pop
mov
jl
dec
scas
test
imul
xchg
ds
mov
fs
sub
adc
xor
clc
xlat
fsubp
push
daa
imul
test
lods
inc
push
movsb
scas
fisttpl
sub
jae
addl
sbb
popa
adc
imul
testl
outsb
repnz
out
mov
xchg
jb
mov
xchg
daa
arpl
les
mov
ret
ss
xor
mov
lret
in
incl
pop
and
bound
inc
xor
fcompl
push
imul
adc
das
pop
push
xlat
lods
inc
into
jbe
and
mov
jecxz
sbb
jmp
add
xchg
sbb
or
hlt
ljmp
and
in
mov
sahf
mov
hlt
mov
std
ret
pop
xlat
pop
test
pop
lock
test
into
pop
or
sti
stos
pop
sti
xchg
mov
insb
decl
dec
sub
mov
rclb
dec
lahf
leave
push
xor
daa
negl
sbb
jge
clc
xchg
insl
pop
push
rorl
jge
movsb
fistpl
sbb
adc
jnp
pop
orl
imul
notl
into
and
ljmp
out
lods
fistpl
popf
lods
insl
cmp
jmp
das
addr16
paddsw
stc
pop
sub
js
lret
pop
adc
les
and
xor
stc
dec
mov
in
or
loopne
push
dec
lret
xor
xchg
push
add
cltd
mov
jp
in
jl
scas
mov
mov
ljmp
xchg
ja
in
mov
test
xor
jle
in
hlt
pusha
jmp
cli
mov
fidivl
pop
std
js
pop
movsb
pop
hlt
or
lcall
cmp
sbb
sub
sahf
adc
mov
xor
adc
pusha
out
icebp
pop
hlt
repz
sti
or
and
dec
insl
ljmp
lock
dec
mov
cmp
stc
cwtl
idiv
mov
add
push
inc
or
adc
lcall
jnp
test
xchg
adc
inc
in
sub
imul
out
cli
push
arpl
out
push
add
movsb
fcmovnu
xor
sub
sub
xorl
iret
dec
push
add
shl
pusha
rorb
mull
loopne
sbb
into
in
fwait
in
aas
pop
mov
pop
mov
sti
fistpll
push
inc
loope
fbstp
dec
adc
aas
add
lahf
or
ret
jle
filds
in
mov
sahf
xchg
mov
ret
xor
lret
and
daa
leave
std
stc
ss
adc
and
nop
pop
mov
xchg
xor
push
push
test
mov
pop
sbb
fisttpll
add
nop
pop
imul
mov
jmp
xorl
mov
mov
pushf
cmp
or
movsb
adc
adc
insb
mov
mov
mov
jp
aad
lock
pop
fwait
repz
dec
stos
or
call
push
push
mov
insl
pop
jb
push
lock
jne
pop
push
xchg
addl
xor
xor
inc
cmpsl
fisttpll
shl
sbbb
cmpsl
push
add
es
pop
xchg
loop
arpl
pushf
mov
inc
stos
add
mov
imull
xor
sbb
inc
jae
repz
aaa
mov
mov
je
sbb
push
or
ret
es
fwait
sub
addl
mov
xchg
aad
or
test
scas
int3
inc
xchg
mov
lods
arpl
sub
shr
push
rcll
mov
cmp
pop
fimuls
push
jp
mov
lea
or
lahf
jle
mov
inc
sbbb
add
daa
int3
xchg
xchg
hlt
xor
and
pop
or
aas
jecxz
dec
mov
mov
cmp
cmp
sub
insb
cld
lds
imul
mov
sbb
test
pop
ret
sti
push
out
imul
cld
mov
andl
dec
mov
cmp
cmp
mov
push
cld
mov
push
imul
mov
inc
outsb
xor
in
mov
xor
lcall
push
lea
and
sahf
and
insl
ljmp
insl
sbbl
sbb
and
mov
fs
mov
outsl
and
add
ficompl
pop
xor
adc
xchg
jp
dec
lahf
push
mov
mov
icebp
cmpb
cld
dec
loope
pop
jo
adc
out
fisubl
shll
or
dec
adc
sbb
pop
shlb
jns
outsl
or
adc
xor
orb
mov
inc
pop
fnsave
mov
fsubs
gs
fistpll
pop
lea
out
mov
inc
cmpsb
sub
and
fisttpl
test
test
loop
or
adc
sbb
pop
or
adc
inc
pushf
mov
mov
jo
mov
sarl
push
fcoml
mov
aas
sub
mov
js
xchg
mov
movsb
sub
movsl
sbb
int3
ret
jns
adc
fistps
das
adc
xor
mov
sub
sbb
mov
pop
sbb
gs
jae
xlat
into
scas
sub
sbbl
ja
movsl
test
jg
fchs
inc
jecxz
bound
test
dec
std
aam
arpl
mov
mov
out
mov
push
add
sbb
nop
xor
dec
gs
cmp
sbb
mov
xchg
pop
pop
xor
sub
jle
mov
ss
leave
inc
and
lcall
dec
xor
xchg
aam
movsl
mulb
into
dec
js
aas
sbb
push
les
popf
xor
sbb
adc
dec
movsl
jo
mov
scas
insl
test
push
outsb
sahf
jae
leave
aad
lods
lock
jne
xchg
lcall
inc
lcall
lret
mov
xor
enter
adcl
imul
js
dec
mov
loop
mov
js
gs
dec
ja
lods
jae
cmp
push
pushf
scas
enter
pop
scas
gs
outsl
push
jge
xchg
xor
aam
sub
pop
stos
jae
xchg
pop
mov
adc
stc
sbb
adc
arpl
lea
pop
out
jg
mov
or
aas
lret
push
std
and
rol
cmp
mov
cmpsl
push
mov
out
adc
nop
xorb
ret
cmc
xchg
mov
faddl
mov
push
sub
roll
xchg
inc
lcall
sbb
out
hlt
xchg
shl
dec
cltd
cmp
cmpsl
es
ja
cmp
imul
insl
stos
dec
insb
pop
mov
cmp
lods
in
ret
movsb
push
jmp
rcll
fwait
sbb
mov
add
imull
out
dec
xorl
push
popa
mov
inc
lods
ljmp
mov
jl
pop
dec
loop
imul
gs
and
popf
xchg
xchg
jecxz
pop
ss
arpl
int3
pop
in
cwtl
loope
mov
jmp
mov
icebp
ret
out
xor
loope
push
xor
aam
cmc
ret
lods
rol
jmp
bound
adc
push
xchg
sub
outsb
in
sbb
adc
and
lahf
push
dec
or
push
and
mov
sub
mov
aaa
das
nop
shl
int
push
ret
out
clc
xchg
mov
inc
sbb
lock
dec
ficompl
xor
cmp
pop
je
pusha
adc
push
loope
mov
jmp
mov
inc
repz
fs
mov
fs
mov
ret
cmc
sbb
std
iret
mov
out
push
adc
ss
bound
out
mov
sub
adcl
jbe
fistpl
pop
push
cmp
lret
mov
movsb
pop
xchg
sub
sbb
ret
mov
mov
in
int3
fwait
push
mov
hlt
ret
pop
or
mov
dec
lock
into
jle
adc
cli
sub
mov
inc
ja
gs
jg
mov
push
pop
jb
ds
mov
mov
xor
pop
pop
pusha
cs
xchg
jo
push
push
pop
ret
aas
jl
fwait
xlat
add
push
test
mov
es
xor
adcb
mov
stos
add
cmp
test
movsb
adc
stc
aaa
sbb
add
push
cmpsl
enter
mov
data16
sub
std
and
jnp
adc
or
push
mov
std
out
ljmp
in
pusha
dec
push
xchg
mov
fstpl
gs
dec
pop
in
sbb
aad
ret
mov
xchg
call
mov
test
mov
fadds
icebp
sbb
fisttpll
ror
sbb
outsb
imul
orl
loop
jp
inc
insl
mov
add
aas
sbb
dec
lds
cwtl
sbb
int
lcall
mov
movsb
bound
sahf
mov
dec
inc
shrl
inc
pop
pushf
movsl
mov
push
mov
jl
addb
les
stos
jl
push
insb
sbb
fldlg2
or
sub
xor
jmp
cltd
ja
imul
lahf
loop
push
insl
sbb
sbb
mov
test
fsubl
mov
leave
sbb
push
test
int
aas
cli
repz
jle
or
add
lock
pop
inc
icebp
aaa
ss
testl
ss
inc
repz
inc
mov
push
decl
cmp
faddp
push
or
mov
or
aaa
xor
scas
repnz
jl
gs
inc
pop
and
push
cmp
xchg
ja
pop
or
and
pop
push
mov
mov
or
pop
aaa
jns
mov
sub
xchg
into
cwtl
push
fisubrs
sub
mov
aas
adc
imul
icebp
mov
mov
push
xchg
int3
mov
lret
sub
xor
adc
pop
jnp
pop
jnp
sbb
dec
mov
sub
out
aas
dec
inc
inc
or
mov
jnp
test
inc
enter
aaa
pop
add
scas
enter
jp
push
lods
mov
xchg
push
imul
imul
lea
lods
jl
jo
fcomps
mov
cmc
nop
mov
adc
leave
cmp
pop
sub
dec
xor
inc
sbb
xchg
jae
mov
lock
mov
pop
mov
mov
xchg
push
clc
or
clc
mov
inc
adc
enter
scas
lret
add
pop
xor
jns
aad
or
lock
push
pop
add
cld
xchg
filds
inc
icebp
push
outsb
pop
cmp
scas
dec
mov
jl
mov
add
push
push
push
outsb
push
lods
pop
xor
insl
js
xlat
sub
ret
dec
out
lods
xchg
jp
pop
push
es
sub
dec
cmp
jo
fsts
xor
adc
mov
test
cmp
lcall
mov
cmp
flds
pusha
adcb
pop
ja
imul
imul
pop
inc
or
aad
sbb
clc
test
loope
jge
fcomi
jae
loop
pop
mov
aas
mov
iret
push
mov
insb
lods
cmp
cmp
out
cli
xor
xchg
mov
add
xor
jl
movsb
enter
adc
insl
outsb
mov
mov
in
adc
aad
adc
mov
or
sahf
sahf
mov
sti
mov
inc
push
clc
test
ja
mov
ret
mov
or
gs
pop
aas
inc
push
scas
mov
mov
int
es
sbb
pop
sub
jno
adc
and
sarl
jecxz
lret
lahf
xchg
pop
push
mov
jp
popl
loope
and
add
std
int3
outsl
or
push
xor
insb
test
push
add
shl
arpl
xchg
int3
xchg
adc
scas
shrb
hlt
push
in
mov
pop
add
mov
lock
mov
cmpsb
test
xlat
stos
sub
outsl
inc
push
sbb
push
mov
ss
pop
and
mov
mov
outsb
push
inc
add
lahf
jae
lock
push
push
insb
sbb
mov
inc
jbe
mov
pop
and
ljmp
sbb
sub
pop
xor
cmpsb
xor
ljmp
addr16
popf
jne
mov
pop
fisttpll
push
mov
ret
push
int
sbb
xchg
stos
ret
fiaddl
gs
cmp
popa
xor
sbb
neg
lcall
imul
mov
jp
sbb
ds
inc
and
sbb
xchg
xor
dec
cmp
mov
call
sub
adc
hlt
orb
jo
mov
pop
out
sub
adc
popa
bound
iret
loope
pushf
jnp
mov
jb
in
pop
cmpsl
push
in
fwait
cltd
dec
cmc
inc
xchg
lods
push
or
pushf
clc
pop
mov
mov
push
xchg
js
cmpsl
mov
and
mov
jg
test
xor
cmc
stc
lods
divl
and
push
test
fsubrs
cmpsb
cwtl
out
sub
add
into
mov
jecxz
mov
mov
mov
mov
dec
and
sub
mov
lea
das
jmp
test
and
loope
jg
in
rcll
rorb
leave
add
mov
test
aad
or
mov
scas
cli
pop
insb
mov
sub
push
in
repnz
dec
cld
mov
inc
call
pop
and
test
fwait
sbb
cmpsl
mov
test
sub
push
lret
call
or
cmp
addr16
repnz
in
adc
sub
dec
add
lcall
sbb
jns
fwait
lock
imul
jecxz
add
in
ds
adc
shll
and
enter
sti
ret
js
and
inc
stos
cld
jle
dec
gs
inc
jne
cs
and
fdivp
adc
jae
fwait
sbb
push
jg
les
imul
in
int3
jecxz
push
push
lret
into
xchg
push
xor
push
cmpb
mov
fwait
insl
cmp
fucom
jle
jne
dec
incb
pop
ja
push
fldenv
repnz
or
mov
and
cmp
cmp
ret
jne
or
inc
loopne
or
movsl
xchg
add
add
out
js
call
lea
pop
aas
clc
cwtl
popf
dec
lret
es
into
jb
popf
testb
cmpsl
bound
pop
or
stos
fildl
repnz
nop
and
out
hlt
mov
pop
daa
ljmp
inc
mov
fdivs
lret
fisubs
push
les
xchg
jae
and
jl
testl
dec
pop
cmp
mov
cmpl
mov
mov
inc
cwtl
pop
adc
cli
mov
loopne
push
push
ret
leave
lcall
push
cmpsl
xchg
or
mov
push
cmp
push
lods
dec
mov
mov
movsl
nop
imul
push
icebp
cltd
jo
or
push
pop
mov
rorb
or
inc
pop
jle
pop
sti
mov
bound
and
push
pop
cli
repnz
xlat
lahf
sub
xor
pop
adc
cmp
pop
ficoml
dec
pop
insb
adc
inc
or
cmp
addr16
adc
lcall
sub
pop
jle
iret
dec
pop
add
inc
push
xor
jg
sti
popf
popa
cmp
jge
push
dec
or
aam
pop
fldcw
cmp
mov
dec
mov
imul
inc
addr16
fldenv
stos
fimuls
sub
inc
mov
enter
ss
in
cmc
sub
les
inc
icebp
cmpsl
xchg
pop
iret
add
jns
adc
data16
cli
das
arpl
shlb
and
fmuls
sbb
mov
das
and
ljmp
sbb
rorl
fst
mov
mov
lea
xor
incl
imul
stos
addb
cmp
sub
xchg
mov
add
pop
cwtl
and
adc
sahf
inc
pusha
ret
jmp
or
pop
xor
xchg
dec
push
lods
mov
into
jg
fwait
lret
jns
inc
jae
inc
cs
cmp
add
add
cwtl
aas
mov
pop
dec
sbb
jle
sti
jmp
or
fimull
loope
xchg
dec
gs
cmp
addr16
sbb
mov
dec
cltd
ja
ret
jnp
mov
in
push
sbb
lea
pop
dec
mov
sub
mov
sbb
aas
sbb
sbb
adc
add
sahf
sti
lahf
mov
mov
loope
dec
hlt
add
ret
sti
jnp
addb
mov
addr16
push
mov
in
sti
xor
xchg
jle
or
call
mov
push
out
or
mov
fs
into
mov
inc
dec
mov
sahf
sbb
xchg
mov
push
xor
mov
arpl
shlb
push
pop
movsb
testl
cwtl
insb
cmp
cmpsl
jl
jbe
or
push
pop
xchg
outsb
xchg
sbb
ja
mov
jecxz
push
sub
sub
arpl
jae
shll
arpl
cmp
flds
mov
jp
xor
xchg
and
cmpsl
dec
mov
jnp
cltd
std
cld
mov
sbb
sbb
mov
nop
out
mov
inc
mov
jmp
stos
lods
aas
inc
imul
mov
add
arpl
adc
fisttps
inc
cmp
cmpsb
outsl
imul
std
lock
ss
jne
stos
fimull
punpckhdq
inc
xchg
in
xchg
aam
push
jl
lea
mov
mov
adc
mov
mov
xor
rorb
cmpsb
inc
add
nop
lods
pop
or
mov
mov
add
addl
add
stos
push
bound
jge
enter
aam
mov
repnz
in
xor
pop
dec
iret
xchg
cld
mov
sbb
xchg
ds
mov
sub
and
add
mov
repz
pop
pop
lds
push
iret
lret
adc
enter
mov
stc
push
cmpsb
lcall
loopne
cli
jp
push
pop
aam
lret
call
gs
adc
cli
leave
lds
fsts
pop
mov
adc
repnz
or
out
rcll
jge
cld
enter
call
adc
pop
xchg
testb
lahf
adc
jo
fstl
inc
mov
cli
xchg
inc
cmp
adc
movups
mov
pop
mov
stos
jmp
cmp
sub
jnp
push
cltd
dec
and
mov
cmc
sub
fisttps
pop
sub
arpl
mov
pop
dec
out
mov
mov
fbld
adc
flds
cmpsl
nop
out
mov
mov
mov
adc
iret
sahf
pop
inc
scas
xor
ror
inc
pop
pushl
aaa
cmp
cmp
in
adc
orl
inc
lahf
push
dec
rorb
in
in
inc
shll
mov
aas
int
inc
daa
push
add
sti
mov
or
jg
shll
push
push
push
sub
stos
inc
inc
jle
dec
rclb
pop
mov
pusha
pop
sub
pop
cmpsb
icebp
lods
mov
les
aas
push
repz
sub
arpl
lcall
lea
dec
jmp
sbb
dec
adc
out
lret
or
hlt
mov
arpl
ds
bound
lock
lret
mov
mov
pushf
mov
lds
adc
pop
jae
aad
mov
jecxz
mov
cmp
insl
in
cmp
mov
push
mov
popf
lcall
fcmove
fs
jmp
push
mov
lcall
push
cmp
push
pop
aam
enter
dec
dec
mov
gs
push
adc
pop
in
imul
icebp
repnz
cs
cmp
lret
jge
or
xor
enter
push
daa
decl
outsb
push
or
icebp
push
les
cpuid
fs
mov
and
cmpsb
fwait
inc
push
adc
adc
and
pop
push
mov
sbb
xchg
mov
pop
je
cmp
jbe
les
sub
imul
cmp
or
xchg
rcll
mov
mov
push
into
and
ja
cmpsb
cmp
mov
popf
int3
sbb
dec
cli
cmc
or
or
cmp
add
sub
lods
std
or
lcall
pop
movsb
cmp
push
sub
mov
pushl
dec
ds
add
clc
mov
pop
ljmp
out
mov
inc
xchg
adc
repz
xchg
or
sbb
bound
mov
sbb
out
adc
push
hlt
cli
test
lods
dec
lea
cltd
adc
lret
imul
sub
and
in
jnp
outsl
cmp
or
ret
daa
cli
push
aad
es
xchg
and
pop
jge
cmp
out
mov
mov
and
aad
push
ja
push
pop
hlt
xchg
pop
xchg
lret
pop
test
mov
sub
sub
mov
loopne
jecxz
push
mov
pop
jg
add
ja
xorb
or
mov
push
jl
dec
loop
push
or
sub
repnz
pusha
and
loop
sub
lret
incb
pop
mov
lahf
pop
pop
jno
jp
out
adc
push
pop
and
in
pop
jge
push
jae
into
lea
jne
mov
pop
stc
add
xor
pop
enter
and
test
fwait
or
out
ds
pop
push
mov
jg
xor
and
aam
jne
mov
jle
mov
mov
daa
loopne
fucomip
mov
repnz
add
add
jnp
dec
push
lea
into
mov
inc
inc
in
cmp
or
mov
hlt
lea
adc
xchg
movsl
lods
sbb
sub
out
loopne
sbb
loope
dec
push
xchg
or
ja
pop
inc
inc
ljmpw
add
mov
inc
push
gs
out
in
rolb
int
inc
jmp
roll
jne
arpl
ret
add
cmpsb
jns
stos
ja
outsl
leave
adc
cli
imul
inc
std
push
mov
inc
cmp
mov
rcll
repz
sub
jne
divl
xchg
cld
dec
rcr
jecxz
enter
and
add
xchg
dec
mov
lea
jo
jnp
sbb
pcmpgtw
push
and
es
add
lret
lock
cmc
icebp
mov
mov
dec
out
or
jne
mov
int
add
mov
cwtl
lock
dec
lahf
popa
or
test
inc
jno
mov
repz
movl
fstp
out
or
insb
cmpl
dec
or
fisubs
jne
jns
ret
jbe
mul
push
mov
xor
std
clc
aam
and
cltd
mov
roll
clc
scas
push
pop
push
aas
dec
insb
hlt
xchg
iret
stos
cmp
lea
test
mov
popf
xor
add
aam
cli
and
pop
dec
pusha
loope
sub
dec
jno
xchg
or
imul
fisubrs
cmp
es
scas
jecxz
or
mov
mov
push
mov
cld
mov
adcl
je
adc
add
push
add
fnstcw
and
cld
lret
fsubp
movsl
cmpsb
or
sbb
add
popa
ja
inc
cmpsb
cmpsb
test
mov
insb
in
adc
jle
and
sbb
adc
cmc
mov
je
in
push
cmc
pop
push
lods
sbb
add
inc
outsb
jno
and
in
shlb
mov
ja
jg
movsb
sbb
out
dec
jl
pop
nop
pop
fcom
orl
inc
mov
or
roll
aad
loope
arpl
jno
repz
ja
add
jl
add
ds
jns
ljmp
fisubs
mov
mov
loopne
mov
push
push
sub
fsubrs
fisttpl
es
andb
mov
aas
or
lea
pop
mov
xchg
orb
xchg
bound
pop
fisubrs
lea
mull
pop
jb
inc
pop
testb
pop
mov
cmp
aaa
sbb
xchg
add
psrlq
sub
dec
xchg
xor
mov
data16
sub
push
and
pop
pop
aas
dec
pop
int3
cmp
test
maskmovq
divl
sbb
clc
or
fmuls
lahf
cmp
cld
sub
lret
faddl
icebp
addr16
cmp
imul
dec
xor
int
cltd
movsl
jno
inc
xor
sub
jecxz
fisubrs
mov
jns
aam
pop
loope
aaa
inc
hlt
fisubrl
out
and
xchg
pop
daa
and
xor
fidivs
xor
gs
movsb
sti
mov
daa
mov
loop
adc
unpcklps
js
cmp
sub
pop
lahf
xor
and
cmpsl
cmp
sahf
into
call
xchg
pusha
ss
pop
sub
fbld
aas
jle
rcll
stc
sbb
icebp
xchg
mov
jno
stc
xor
repz
ja
ret
pushf
adc
or
and
sti
dec
pop
and
add
test
mov
outsl
sub
imul
sub
mov
xor
push
inc
data16
mov
pushf
call
bound
jp
js
jmp
push
cltd
pop
imul
pop
pop
jg
xlat
lahf
cltd
hlt
mov
jae
lock
jbe
testb
xchg
mov
aad
mov
or
adc
xor
and
jl
outsb
ja
addr16
addr16
or
test
mov
cli
pop
mov
nop
pushf
outsl
xor
cmp
push
mov
or
cld
je
mov
jb
inc
in
lcall
xor
mov
shlb
mov
jo
mov
sbbb
inc
cmpsl
mov
cmp
and
cmp
test
cmc
in
bound
xchg
cmpsl
dec
mul
sti
add
cmpsb
shrl
subl
mov
and
mov
pop
loop
xor
ja
push
push
xor
loop
ja
xor
pop
in
pushf
push
ja
push
movsl
mov
sub
xchg
stos
mov
sbb
push
ja
jmp
int3
int
mov
sbb
push
ja
sbb
mov
test
xchg
in
mov
lret
pop
cmp
je
and
movsl
icebp
push
fucom
icebp
add
sub
or
add
dec
dec
ret
adc
mov
mov
mov
roll
aad
movsb
xor
lea
adc
aam
jmp
xor
test
fists
xor
mov
hlt
cs
xchg
imulb
das
arpl
inc
in
xor
push
add
cmp
enter
cltd
or
enter
test
in
mov
inc
lods
xor
cltd
jmp
fdivs
jp
push
pop
cmc
adc
nop
push
mov
pop
mov
loope
pushf
mov
xchg
js
hlt
or
or
sti
add
inc
inc
cmp
shlb
leave
andl
pop
test
cmpsb
popl
cmpsl
lahf
mov
test
lcall
push
loopne
cmpsl
cwtl
mov
mov
hlt
pop
add
jne
dec
leave
mov
aaa
int3
mov
dec
aaa
dec
add
adcb
inc
and
lahf
mov
ss
lcall
out
in
loop
out
pusha
sub
stos
dec
leave
push
lods
in
push
insl
push
mov
pop
iret
mov
mov
cmp
lds
xor
sbb
shlb
ficoms
fdivrp
mov
jmp
outsb
stos
imul
les
pushf
pop
inc
shrb
lock
sbb
lcall
push
mov
arpl
in
ljmp
ficomps
jle
lret
xor
jnp
into
pop
roll
pop
aam
push
xchg
sarl
cmc
cmpsl
in
sub
lds
arpl
or
mov
sbb
popf
sarl
call
mov
dec
je
iret
dec
aam
xchg
push
test
mov
nop
int
aaa
cmc
mov
mov
and
mov
or
push
ja
fnstsw
or
shrl
cltd
add
xor
jle
repz
push
repnz
ss
repnz
icebp
mov
outsl
jecxz
js
mov
popa
add
sbb
inc
movsb
xchg
into
mov
in
mov
lods
dec
jmp
sub
lods
outsl
je
fadds
lahf
jecxz
xor
fs
push
push
pop
sahf
sbb
dec
lcall
popa
in
insb
les
pop
pop
jne
shrl
push
inc
lods
lea
push
daa
push
movsl
loope
cmp
sub
insl
inc
mov
insb
or
nop
mov
xchg
icebp
push
mov
xchg
imul
dec
mov
push
jo
test
pop
cs
mov
push
add
ret
mov
shlb
dec
arpl
sub
xor
lods
dec
dec
sub
jo
pop
fwait
orl
in
test
dec
movsb
pop
stos
out
dec
jle
cld
add
je
push
dec
dec
dec
or
insl
arpl
cmpsb
xchg
daa
jg
push
enter
sarl
mov
inc
or
sub
int3
and
dec
cmpsl
pop
fwait
int
fildll
aam
jmp
pmullw
rcr
je
add
pusha
mov
in
mov
ret
insb
sub
pop
subl
and
cltd
arpl
or
gs
lahf
lds
cmp
ljmp
lock
mov
push
in
cmp
xor
andl
int3
dec
xchg
gs
xchg
add
shlb
out
icebp
gs
or
or
jle
fdivl
or
pop
je
int3
and
lret
cmp
jns
pop
fstpt
push
mov
enter
xchg
xor
nop
xchg
cmp
inc
jo
shlb
mov
and
sub
jg
push
shll
jle
into
adc
dec
cmp
in
jne
ret
add
lods
outsl
rol
lods
loopne
movsb
or
ret
pop
ret
lea
mov
lods
mov
jl
and
xchg
mov
inc
push
cmp
cltd
pop
ret
or
mov
pop
inc
jl
sbb
fisubrs
repz
stos
sbb
fidivrs
lfs
scas
daa
in
or
div
movsl
dec
test
xchg
lods
xchg
dec
sbb
dec
aam
dec
xor
mov
mov
pop
jg
add
add
add
jle
sbb
cli
jns
out
mov
mov
lret
in
sbb
stos
subl
lock
lods
or
xor
jecxz
loop
xor
daa
sbb
test
cmp
add
fcmovb
sahf
mov
orl
xchg
mov
fcmovnb
push
nop
cmp
or
jg
fsubrs
adc
js
mov
push
inc
sub
aas
sahf
push
test
loop
mov
movsb
je
mov
mov
inc
mov
sub
cwtl
xchg
sbb
js
sub
mov
jmp
push
pop
rcll
mov
add
mov
adc
int
movzbl
mov
mov
hlt
sub
js
ja
cmp
ljmp
in
or
sbb
outsl
sub
aas
jg
pushf
imul
pusha
pusha
and
shrl
ficoms
repz
stc
cmpsl
cmp
idivl
rcll
stos
add
mov
xor
mov
stc
mov
inc
aam
incl
ljmp
sub
daa
jg
mov
dec
into
push
aas
adc
mov
mov
inc
les
inc
cli
shlb
in
and
addr16
out
jne
das
out
cmc
repnz
ret
int
enter
xchg
sarb
pop
popa
test
dec
jno
push
test
inc
rolb
rolb
inc
aas
filds
dec
loop
lret
fcmovu
jbe
in
add
shrl
je
movsb
or
mov
loope
mov
stos
lcall
or
stos
repz
rclb
jb
mov
cs
push
sbb
push
add
or
iret
xchg
push
sub
mov
push
push
dec
xchg
mov
sub
testb
outsb
hlt
in
sbb
adc
xor
inc
sbb
scas
lea
or
ja,pn
aad
out
fld
movsb
or
sub
xor
push
or
dec
jb
or
inc
or
cmp
movsb
dec
je
fwait
cmp
xor
out
dec
sub
adc
push
pop
inc
inc
mov
cmp
xor
ds
sahf
aam
in
ret
add
aaa
popf
xchg
js
in
and
sbb
jmp
jge
aaa
lock
cmp
jg
sti
push
adc
xor
and
in
xor
sbb
sti
cmp
or
popa
pop
sbb
lods
cld
jnp
dec
cmpsl
test
inc
jl
out
cmpsl
ds
ret
fwait
pop
push
fs
inc
cli
push
cli
and
mov
popl
xchg
jns
sbb
mov
pop
mov
mov
aas
movsb
fstpt
push
shrl
cmp
out
sub
xchg
cmpsb
jno
std
xchg
fcmovnbe
inc
push
test
out
pop
out
pop
adc
dec
movsb
lcall
pop
jge
and
mov
lods
gs
cltd
mov
mov
mov
mov
dec
or
xchg
mov
push
jge
pop
icebp
testl
adc
out
mov
sub
mov
gs
and
test
mov
jl
adc
mulb
in
pop
testl
dec
and
ficompl
or
mov
pop
sbbl
mov
imul
mov
imul
push
daa
jnp
add
out
dec
or
xchg
shll
mov
push
repnz
mov
mov
adcb
fdivrs
lock
xor
fcoml
pop
mov
loope
pop
sbb
xchg
gs
scas
imul
inc
sub
daa
jp
dec
mov
jg
push
sbb
or
inc
jno
movsl
inc
lahf
mov
inc
rolb
lahf
ss
add
data16
cmp
test
mov
arpl
popa
xor
pop
outsb
insl
stc
push
scas
xchg
lock
xorl
push
xchg
cmc
repz
add
adc
cmp
outsl
test
out
ret
cld
dec
xlat
icebp
sahf
push
hlt
iret
dec
lret
inc
jne
xchg
sarl
dec
stos
outsl
push
movsb
call
pushf
or
cmp
movsl
lods
and
into
add
neg
sar
lret
fldl
and
and
push
sahf
lock
push
loope
jge
xchg
sbb
div
ret
mov
xchg
bound
pop
cs
out
add
sahf
insl
pop
sahf
mov
repnz
ljmp
pop
push
roll
adc
pop
insb
mov
push
pop
push
and
mov
cwtl
movsb
scas
clc
aad
lret
pop
xlat
inc
jbe
and
fsubrl
into
push
ret
cs
iret
jns
out
pop
notb
dec
movsb
in
xor
pop
pop
adc
adc
movsb
aad
mov
enter
cmp
insl
mov
iret
pushf
lea
or
mov
sbb
mov
div
jno
cmc
outsb
cli
pop
dec
aam
ret
jne
adc
add
es
lock
into
out
sbb
loop
sbb
mov
mov
stos
inc
sbb
inc
loopne
adc
mov
pop
call
pop
aaa
mov
cmp
cmp
fs
and
sbb
cld
sbb
mov
xchg
adc
fsubrp
mov
inc
bound
add
push
lds
jnp
push
out
add
pop
push
mov
mov
or
push
leave
xchg
fnstsw
push
cmpsb
pushf
jp
pop
pop
notl
mov
jecxz
and
xchg
add
imul
adc
xlat
jne
pop
fs
jge
mov
inc
sbb
mov
fs
jl
pop
js
or
cltd
lea
xlat
ficomps
lahf
push
xlat
or
xlat
mov
mov
xchg
push
adc
ss
add
dec
xchg
out
and
mov
push
and
add
scas
pop
fimuls
mov
pusha
loopne
mov
jne
push
pop
mov
mov
scas
imul
mov
adc
xchg
imul
sub
push
enter
popa
mov
mov
push
ret
test
cmc
xchg
je
lret
in
arpl
adc
dec
aas
shrl
jl
dec
push
iret
sub
mov
jmp
roll
pop
cmpsb
test
repnz
stos
inc
xor
cmpb
iret
roll
hlt
movsl
aaa
or
dec
push
push
or
aaa
inc
cmp
mov
idivl
pop
jo
out
xchg
push
pusha
call
sbbl
dec
inc
out
bnd
adc
inc
mov
and
fisubl
cmp
call
scas
mov
movsb
icebp
inc
dec
jp
arpl
add
fs
daa
pop
xchg
and
out
xchg
lock
aam
pop
mov
sahf
pop
movsl
and
in
popa
push
clc
icebp
push
push
in
adc
iret
int
fs
pushf
xchg
xchg
mov
notl
pop
subb
sbbl
mov
repz
or
adc
add
dec
lret
sbb
mov
cmp
jge
pusha
sbb
idiv
pop
out
daa
or
popf
outsb
inc
xchg
mov
dec
cmp
mov
incl
mov
mov
xchg
mov
dec
cmpsl
icebp
pop
and
roll
or
pop
push
imul
push
in
push
and
push
fs
inc
or
je
sbb
mov
ficompl
loop
daa
mov
fcmovu
push
sub
mov
sub
inc
add
cmp
insb
mov
add
in
sbb
mov
ljmp
shrl
push
lods
inc
insb
xor
in
mov
dec
aad
jmp
cmp
cmp
and
jge
ds
or
or
popa
addb
popa
cmp
leave
mov
testb
mov
into
add
ljmp
inc
ret
xchg
mov
cltd
aam
add
mov
jnp,pn
sbb
xchg
in
aaa
je
mov
xchg
push
mov
mov
mov
xchg
aam
pop
into
mov
jp
cmpsl
scas
lods
or
or
imul
ja
push
pop
pushfw
xchg
dec
push
aaa
and
fbld
stos
lods
mov
imul
add
ffreep
lcall
rolb
fnstcw
mov
and
hlt
out
cmp
test
fst
or
cwtl
test
insb
mov
shlb
popa
add
or
jbe
repnz
xor
out
jle
fcomps
lock
and
mov
mov
cmpsl
inc
xchg
fwait
pop
add
xchg
or
shrl
out
repz
jg
pushf
les
pop
xchg
mov
fnstenv
mov
mov
mov
sub
xchg
das
mov
push
adc
sbb
mov
jne
mov
popl
jae
jmp
shrl
repnz
out
jmp
add
leave
loopne
repnz
pop
inc
clc
xchg
inc
incl
lods
xchg
sti
enter
mov
lods
test
adc
ss
aam
cmp
movsb
int3
xorl
clc
outsl
and
cmp
lcall
pop
js
add
sbb
test
aaa
jle
inc
cmpsl
or
mov
jne
sbb
mov
and
and
xor
and
out
add
les
cmp
add
push
cmpsb
mov
clc
sub
leave
stos
test
and
pop
ja
jne
pop
dec
je
imul
sub
mov
stos
push
mov
cmp
sub
imul
jl
cmpsb
add
xchg
jo
into
cmp
push
fidivs
sti
jp
lahf
aas
psubusw
fwait
xchg
mov
mov
shrb
mov
ss
sbb
fsts
ret
sub
xor
pop
int
xchg
push
xor
cld
jl
adc
fistl
stc
jb
aam
jo
and
scas
pop
fsubrs
stc
rcll
mov
inc
es
lea
xchg
stc
xchg
dec
mov
test
adc
faddl
insb
fnsave
adc
xchg
test
dec
push
jns
push
hlt
xor
xor
or
jno
lea
cmp
pop
xchg
addr16
xlat
xor
es
adc
cmp
and
jne
int3
dec
pushf
sarl
scas
mov
fwait
stos
pop
pop
mov
jle
and
mov
pop
push
test
and
insb
mov
in
and
mov
fst
cwtl
xor
ret
in
fidivl
fs
pop
outsl
scas
pop
or
rcrb
das
fbld
arpl
int3
push
pop
scas
lea
sar
js
xor
in
mov
xlat
xchg
dec
lods
add
xchg
iret
xchg
sub
cmp
mov
push
gs
push
jo
xchg
mov
jle
decl
jo
popa
push
cs
int3
enter
dec
dec
add
pusha
js
adc
cwtl
loope
repz
push
mov
test
mov
add
xor
lret
test
frstor
orl
call
sbb
ljmp
insb
cld
or
lahf
xlat
mov
jl
push
adc
sbbb
push
mov
cwtl
je
insl
and
adc
js
ficoml
ret
jbe
cli
lret
sub
xor
sub
pop
rorb
add
inc
jbe
int
inc
mov
xor
sbb
iret
mov
sub
or
jge
xchg
mov
mov
int3
mov
and
sbb
mov
or
test
cli
sbb
jno
adc
cmp
lock
out
jno
push
or
jecxz
mov
iret
sub
popa
in
scas
nop
sbb
mov
ja
shrb
mov
ja
xor
add
popa
push
inc
mov
in
jp
inc
int3
loope
in
dec
and
lods
xor
mov
xchg
mov
fcom
pusha
adc
or
cld
test
sub
ret
aam
and
dec
add
loope
subb
cmpsb
clc
push
int3
push
sub
clc
into
loope
inc
sbb
jns
fdivp
lret
fldt
shrb
adc
adc
push
mov
orl
xchg
add
outsb
mov
jae
aam
popf
mov
repz
and
mov
adc
xchg
mov
xlat
add
jnp
jae
popa
mov
dec
or
das
jl
lods
inc
sbb
push
jle
dec
mov
std
sub
cmp
fstpt
or
test
adc
adc
in
jne
push
adc
add
mov
outsb
repz
push
test
fstps
pop
das
xchg
lds
sbb
push
imul
cmp
inc
inc
pusha
cmc
jno
fwait
aam
mov
loope
add
iret
bound
xchg
add
es
push
inc
rcll
xchg
fs
add
cmpsb
clc
inc
or
jmp
mov
in
lods
add
int
rol
popf
mov
jg
cld
xchg
sbb
fnstenv
lea
add
jns
pop
movsb
testl
or
into
insl
movsb
int
mov
lea
aad
hlt
sbb
pop
dec
xchg
addr16
adc
sub
arpl
cld
jbe
xor
mov
and
arpl
mov
stos
js
xchg
stos
push
push
push
js
adc
adc
stos
adc
je
leave
and
call
scas
mov
add
sub
xchg
or
stos
adc
xlat
jmp
and
add
mov
loope
cs
or
xchg
pop
popa
adc
stos
shrb
mov
iret
test
popa
mov
xor
mov
pop
inc
xchg
xor
pop
pop
test
mov
loope
xor
jmp
ds
push
or
insl
push
jmp
bound
aas
push
jp
clc
std
sahf
dec
push
adc
testb
sub
push
mov
stc
jae
push
cmc
jns
inc
in
test
pop
xchg
je
imul
pop
jns
loopne
pop
add
fisttpll
pop
cmp
cmpb
nop
push
jecxz
xorl
out
xor
push
pop
pop
cmp
add
out
cmp
out
mov
jg
xor
cmp
pop
or
inc
bound
cmp
fwait
icebp
or
out
into
fsub
xor
fcom
rcrb
sbb
orb
jne
inc
jbe
cltd
and
fnstcw
push
xchg
call
sahf
inc
fimull
ljmp
orl
push
or
jbe
in
xchg
xchg
xchg
dec
mov
mov
inc
add
cmp
add
push
orl
popf
test
shl
nop
sbb
sbb
sbb
sbb
push
sti
loope
scas
or
jbe
xchg
inc
rcl
jo
adcb
outsl
xor
sbb
sarb
xchg
inc
pop
fdivr
movsb
xor
mov
lahf
xor
inc
cmp
icebp
pop
cmp
js
or
cwtl
mov
inc
std
aas
mov
mov
aaa
in
sbb
fucomip
add
dec
push
stos
inc
lret
mov
repnz
mov
insl
icebp
cmp
ja
sub
rcl
ljmp
fidivrs
stos
arpl
add
ret
call
add
fistpll
pop
mov
imul
push
outsb
adc
roll
and
xor
ss
mov
stc
xchg
enter
addb
scas
in
fsubl
fmull
outsl
push
hlt
adc
cs
jmp
lahf
adc
fdiv
mov
add
and
loope
mov
test
xchg
shrb
adcb
sbb
inc
inc
cmp
inc
stos
mov
and
mov
mov
inc
in
aaa
mov
lea
and
xchg
and
shlb
cwtl
sbb
add
pop
push
mov
cmpsb
add
lret
rorl
cmp
movsl
stos
fadd
push
jns
loopne
inc
xchg
test
adc
adc
xorb
inc
bound
lock
or
xchg
adc
cmp
mov
push
int
ja
lahf
pop
mov
mov
scas
out
or
cmp
lds
pop
fimull
mov
mov
pop
or
pop
pop
and
in
push
jecxz
fimull
mov
sbb
ss
fistl
jg
mov
mov
out
jnp
push
jb
outsl
das
jae
lods
iret
sbb
mov
jp
imul
js
scas
clc
xor
adc
mov
int
icebp
push
and
mov
mov
lcall
push
pop
popa
or
pop
addb
jnp
push
jle
mov
call
sbb
pop
addl
sub
stos
aam
icebp
dec
aam
nop
jae
test
es
lods
loopne
fsubr
cmp
mov
xor
nop
lahf
mov
mov
stos
xor
mov
enter
mov
pop
jp
and
je
fnstenv
jge
mov
lret
sub
adc
pushf
test
xor
aam
mov
push
in
jge
enter
mov
div
dec
hlt
cld
pop
sarl
test
pop
cmp
sub
stos
pop
pop
enter
aas
lahf
xor
daa
sbb
inc
test
xor
push
push
fisubs
ret
pop
in
xor
jge
lock
sbb
gs
and
jg
dec
add
fldt
push
pushf
idivb
pop
fs
jmp
pushf
xor
and
cmp
notb
insl
es
repz
std
xchg
in
adc
in
jb
int
push
pop
jo
shl
sbb
scas
push
divb
into
jne
hlt
add
push
xchg
or
pop
or
shll
mov
lods
jnp
mov
push
stos
fistpll
filds
mov
or
add
repz
in
popf
lods
push
ljmp
addr16
add
and
or
lds
and
cld
repnz
cmp
mov
cmp
popa
inc
aaa
inc
imul
jns
lock
aad
roll
sub
xorl
mov
nop
mov
xchg
jb
ficompl
xor
imul
rcrl
xchg
dec
cmc
jae
or
sub
bound
data16
sub
loopne
sbb
jns
insl
testb
int
std
rcl
push
dec
xlat
push
test
adc
inc
dec
cmp
mov
not
ja
sub
adc
flds
inc
subb
push
and
dec
inc
leave
rorb
mov
cli
or
leave
and
and
mov
and
clc
sub
paddsw
push
in
add
inc
shrb
mov
aaa
out
add
inc
jg
enter
ret
imul
sbb
inc
inc
mov
xchg
sbbb
roll
mov
ror
xchg
lahf
mov
adc
in
dec
leave
lock
xchg
mov
dec
shlb
rcrb
sbb
push
jge
leave
movsb
lret
xor
push
dec
decl
sbb
mov
xchg
inc
dec
sub
ds
popa
xchg
xchg
addr16
ficoms
push
testl
push
cmpb
and
pop
das
dec
mov
cwtl
sbb
pushf
clc
mov
les
xor
pop
jle
mov
xchg
mov
xor
nop
jl
ret
and
sub
pop
dec
outsb
imul
idivl
push
shll
xchg
insl
cwtl
std
js
sbb
xor
sbb
mov
into
pop
loopne
aam
stc
ds
sub
pop
mov
sbb
aad
popf
xor
add
push
divb
lods
negb
pop
push
cs
lret
jnp
xor
fists
repz
loope
sbb
pop
filds
mov
jns
cmc
add
dec
lea
adc
and
mov
addr16
and
xchg
mov
add
push
sub
pop
pop
xor
jmp
hlt
lcall
sub
cld
and
out
rol
mov
inc
cmp
or
adc
lcall
sti
mov
ljmp
sbb
adc
push
add
int
add
outsb
or
mov
sahf
shll
std
sub
shll
insb
push
sbb
popl
popa
and
insb
and
mov
je
negl
lds
mov
mov
loope,pn
scas
nop
test
dec
sbbl
sbb
push
lods
jmp
or
mov
mov
and
pop
into
push
xchg
std
cmp
xchg
test
sbb
push
out
cwtl
cmp
xchg
adc
das
jle
adc
enter
adc
stos
jne
mov
adc
jg
rcrl
aas
ljmp
adc
xchg
ljmp
test
test
js
jb
mov
xlat
jb
outsb
adc
and
and
inc
ljmp
xchg
adc
jl
fisubl
xor
pop
add
add
out
je
xchg
mov
inc
jno
xlat
dec
sub
jp
mov
rcrb
cmpsb
sbb
xchg
xchg
aad
and
aad
jmp
and
les
sub
lret
jno
ret
iret
aas
mov
lods
fldl
or
dec
rorl
ds
add
adc
test
rcr
mov
and
scas
stos
push
mov
call
test
mov
mov
data16
in
ljmp
fs
out
vmrun
inc
add
call
add
rorb
data16
mov
iret
dec
sahf
and
ret
dec
mov
insb
inc
cld
mov
adc
dec
arpl
loopne
pop
sbb
clc
inc
mov
in
adc
inc
stos
repnz
stos
sub
dec
repnz
mov
aad
es
xor
add
pushw
daa
adcb
xchg
push
push
mov
int
xchg
mov
mov
or
add
cmp
add
sub
push
bound
popl
or
lods
push
mov
jo
call
pop
jmp
jno
fdivrl
jecxz
jnp
mov
dec
outsb
or
cmc
jle
bound
pop
mov
aas
pop
jne
jge
sahf
sub
js
push
mov
decl
push
jmp
into
push
sbb
jbe
push
push
xchg
push
jno
dec
and
adc
stos
pop
jge
aam
sub
loope
sbb
adc
sub
dec
sbb
imulb
and
subb
sbb
loopne
jb
jbe
and
fisubrl
cli
mov
mov
in
frstor
cmc
dec
sub
mov
xchg
push
mov
dec
scas
addr16
das
push
mulb
icebp
sub
mov
loop
jb
cmc
jne
outsb
pop
jno
or
fstpl
je
jp
mov
mov
pop
jl
xchg
dec
arpl
mov
jp
fnstcw
out
or
mov
mov
pop
adc
inc
lock
cld
call
sahf
cmp
push
xchg
xor
fs
sub
dec
ss
sbb
inc
sti
aaa
shll
pop
stos
inc
jo
xor
dec
pop
loop
jecxz
push
push
enter
push
add
and
call
movsl
bound
lds
dec
add
xor
xor
mov
clc
and
clc
sub
xor
ja
jecxz
pusha
popf
pusha
loop
repz
or
cmp
insb
lea
inc
or
sti
mov
fst
in
in
jns
stc
add
sbb
inc
and
sub
xchg
xchg
scas
sbb
lock
pop
adc
mov
enter
mov
outsb
sahf
push
fcoml
cs
loop
dec
xchg
lret
cltd
sbb
sarb
push
pusha
sub
pushf
xchg
cmp
dec
inc
xchg
jge
inc
jmp
sub
and
cld
cltd
inc
push
pushl
int
mov
jmp
insb
mov
mov
pop
jmp
hlt
rorb
cmp
dec
fistpl
xor
ret
inc
cli
fnstcw
adc
insl
pop
pop
daa
lret
sub
clc
sub
jo
sbb
xchg
pop
mov
movsl
popa
in
inc
xlat
inc
jecxz
sub
mov
int
adc
imul
test
and
jo
add
mov
imul
cmp
mov
cmp
lcall
sbb
iret
add
inc
loop
cmp
mov
imul
lods
lret
fwait
shlb
sub
imul
test
imul
xchg
inc
jle
es
push
into
movsl
dec
push
inc
or
inc
daa
xchg
lods
aaa
ljmp
pop
sbb
mov
std
into
add
aas
callw
dec
hlt
lods
cld
loope
loop
lock
into
jnp
dec
and
cli
or
pusha
pop
cltd
mov
pop
je
jne
pop
repnz
and
jnp
fwait
outsb
dec
divl
fldcw
gs
mov
stos
das
jns
inc
inc
mov
out
pop
in
decl
lcall
test
cmp
sub
or
stc
gs
and
lret
cmc
jne
bound
sbb
inc
ds
mov
call
stc
sbb
mov
into
cmpb
sahf
add
lahf
inc
jp
xor
decl
sub
int3
and
stos
jp
sarb
push
jmp
mov
adc
cmp
int
jp
leave
movsb
notl
fstps
fists
push
mov
inc
pop
inc
add
shl
out
aad
xchg
xorb
sti
push
pop
clc
dec
pop
popa
ja
jge
int3
lret
imul
pop
sub
push
dec
cld
aas
std
pop
mov
sahf
cmpb
push
mov
cmpsl
popf
pop
js
jnp
dec
stc
data16
test
add
fs
mov
add
add
int3
ds
inc
cmp
das
aam
je
insl
sbb
stc
std
sahf
dec
xchg
out
call
dec
pop
outsl
push
stos
jno
sub
int
mov
jno
or
dec
mov
scas
fimuls
xchg
cltd
or
or
xchg
std
aam
xchg
cmp
mov
mov
rcrb
scas
jecxz
inc
push
lods
add
push
clc
lcall
ds
lds
cmp
mov
pop
push
jecxz
or
sub
nop
cmp
xor
aaa
ret
inc
dec
xchg
fwait
sub
mov
das
add
lock
fstpt
sub
loope
shrl
pop
pusha
jle
movsb
sub
pop
adc
mov
leave
and
std
jp
pop
mov
dec
pop
add
xchg
pop
in
pop
out
ljmp
pop
fstps
xchg
pop
cmpsl
jle
subl
int3
lret
mov
pcmpeqw
jne
push
xor
dec
xchg
mov
push
and
ret
ret
lds
ret
xor
mov
cli
int3
je
pusha
mov
and
jne
pop
fisubrs
pop
test
fadd
jg
sti
data16
scas
pop
mov
enter
inc
shl
outsb
lcall
xchg
sbb
aas
sti
push
adc
sub
test
jno
or
adc
mov
jmp
jmp
adc
lds
adc
addl
pop
shr
ret
jmp
leave
xchg
jnp
or
push
mov
out
stos
fbld
mov
xor
ret
test
fmuls
push
ds
and
out
push
jb
or
movsl
rorl
out
vmptrld
push
mov
push
daa
and
fdivr
pop
cmp
fdivrs
scas
ss
lcall
mov
cwtl
movsb
fcmovbe
sub
lds
add
mov
or
lods
add
into
popa
inc
outsl
imul
lret
mov
insb
push
mov
jecxz
mov
mov
push
sbb
mov
rcrb
push
fidivl
push
fldl
mov
std
in
in
dec
jle
int3
inc
lock
out
push
jns
vpshuflw
push
inc
mov
cmp
pop
or
ljmp
cwtl
jbe
push
call
mov
fldenv
outsb
sub
dec
sbbb
clc
xorl
mov
mov
cltd
push
inc
test
mov
int
bound
jmp
lds
add
push
lcall
jmp
cmp
ljmp
jge
jmp
sarl
pop
pop
inc
pop
mov
mov
je
push
push
add
rcrl
push
fs
loop
stos
jo
jno
mov
mov
cmp
jl
adc
popf
add
mov
dec
sbb
fmuls
mov
or
mov
push
inc
enter
cmpsl
cmp
xchg
pop
jge
daa
mov
lret
dec
add
and
lcall
shl
ljmp
fimull
and
mov
push
xchg
stos
test
mov
mov
movsl
ja
fbstp
xorb
out
fcomi
nop
xor
and
test
push
fcmovbe
jg
addb
mov
cltd
and
mov
in
loopne
outsb
addr16
mov
push
lcall
and
pop
rol
jle
mov
adc
mov
dec
fnstsw
lds
cmpsb
mov
jl
pop
and
push
stc
clc
stos
dec
fwait
xor
cmp
sbb
lock
ss
or
xchg
int3
fs
orl
push
call
inc
lea
mov
popf
clc
ljmp
mov
orb
inc
ja
and
xchg
test
jbe
pop
in
dec
cmp
sub
cltd
stos
or
xlat
cltd
fisubl
in
xor
sarl
jne
in
pop
sub
dec
inc
sbb
jecxz
js
imul
add
cmp
xchg
ss
popf
push
or
mov
lods
fs
mov
mov
shll
out
stc
std
lret
adc
fs
mov
or
enter
lret
jp
lcall
mov
arpl
pusha
inc
clc
idivl
daa
dec
xchg
sub
sub
mov
or
addb
cs
adc
loopne
pop
dec
push
jp
push
in
test
push
mov
stc
mov
inc
mov
movsl
push
mov
lea
test
add
movsl
lods
and
inc
dec
jae
movsb
inc
cmp
repnz
or
push
scas
stc
out
lds
cwtl
gs
shlb
rolb
cmp
mulb
orb
inc
adc
mov
sbb
inc
dec
cmc
aaa
mov
sub
jns
or
in
xchg
scas
icebp
mov
xchg
repz
sbb
dec
mov
pop
aam
iret
loop
dec
js
sub
rolb
je
inc
cmp
adc
or
dec
xor
or
bnd
pop
popa
and
bound
mov
hlt
xlat
xchg
add
sahf
rolb
ljmp
dec
inc
leave
sbb
and
divb
sbb
pop
icebp
dec
rorb
add
mov
int
loop
xor
dec
cmp
mov
ficomps
pop
or
jnp
mov
outsb
pop
jae
push
mov
and
popf
es
das
mov
arpl
dec
adc
jnp
ljmp
hlt
pop
jle
xor
pusha
push
adcb
fld
jmp
stc
out
mov
mov
sbb
jmp
addr16
sub
sub
adc
jmp
fcomi
popf
add
lret
fsubr
arpl
loope
cmp
inc
cs
push
adc
and
stc
mov
mov
mov
lods
or
mov
jo
and
mov
int
push
jae
and
xchg
cmp
jmp
fisubs
ss
inc
ret
lods
push
popf
fidivs
mov
jne
and
jne
cmpsl
fiaddl
loope
sub
mov
cmpsl
ficompl
push
xchg
xor
push
out
pop
inc
aas
xlat
cmp
mov
inc
mov
dec
cmp
cmp
push
cld
sub
adc
or
mov
movb
xchg
mov
sbb
lods
js
rcl
push
mov
dec
neg
jae
jle
mov
xlat
data16
clc
mov
cmpsb
or
outsl
inc
mov
das
outsl
sub
and
mov
mov
push
or
lret
push
stos
adc
mov
mov
cmp
fnsave
pop
pop
lret
push
fdivl
shlb
aam
xchg
fstpl
aam
outsb
aad
xor
ja
mov
mov
in
int3
mov
test
xchg
jmp
xchg
cmpb
push
or
mulb
push
xchg
xor
ds
inc
stc
data16
outsb
adc
xor
and
add
inc
push
out
jg
sbb
sbb
and
xor
xchg
test
lock
test
outsb
fwait
test
cmpsb
enter
stos
jmp
loopne
xchg
lods
jge
imul
fidivs
lock
pop
mov
fucomp
cmp
jg
inc
subb
loope
inc
loopne
das
rcr
popf
outsb
inc
mul
jl
fwait
pusha
xchg
xor
xchg
inc
pop
hlt
inc
arpl
nop
bswap
push
subl
pop
or
lahf
shll
or
or
mov
nop
jns
vdivps
sbb
jno
inc
cltd
xchg
loopne
or
inc
loope
lret
ret
jae
out
push
ds
adc
push
push
into
loope
mov
ret
shrb
and
das
mov
jmp
dec
scas
fsubl
insl
out
stos
mov
jp
adc
imul
lcall
rep
int
push
cmp
mov
scas
clc
popa
cmp
in
lret
movsl
ret
out
dec
movsl
sub
cmpsl
fs
fistl
mov
mov
or
push
xor
mov
or
sbb
and
push
cmp
es
dec
dec
lret
jg
test
lods
rorb
sub
iret
jmp
hlt
pop
ja
adc
or
dec
rol
sbb
xchg
cmp
ret
push
repnz
jbe
xor
jno
inc
sbb
dec
xor
sbb
add
aaa
lret
dec
movsl
imul
dec
dec
ret
lods
mov
add
pusha
inc
cmp
call
and
sbb
adc
adc
jno
mov
orb
mov
leave
or
std
das
cmp
push
add
xor
adc
sub
push
and
xlat
adc
dec
and
cmp
mov
sbb
cli
pop
movd
lahf
push
outsb
push
xchg
sub
sbb
jle
fistl
rcrb
aaa
js
stos
push
and
xchg
sti
push
add
jmp
pop
inc
mov
jecxz
and
jmp
into
pop
inc
mov
test
mov
repz
xor
adc
fmuls
mov
leave
or
jg
sub
mov
or
out
ja
addb
dec
and
mov
int
fidivl
xchg
cmp
xor
addr16
out
inc
int3
and
inc
mov
addr16
pop
cmp
js
xor
into
cmp
outsb
sahf
pop
out
popf
fldl
aam
dec
daa
sub
cs
lods
xor
fwait
inc
push
adc
and
dec
mov
in
mov
aam
push
mov
into
adc
inc
movsb
push
int3
stc
je
sub
push
mov
les
cmp
scas
adc
mov
aad
add
add
decb
add
mov
xlat
shrb
cmp
aad
sub
lahf
fiaddl
inc
fisttps
pop
mov
inc
xchg
pop
add
fneni(8087
fadd
or
pop
rolb
and
xchg
mov
mov
icebp
or
ja
cltd
in
idiv
in
fsubs
sbb
enter
lret
or
xchg
ja
xchg
pop
jl
push
fs
scas
xor
xor
jnp
push
loopne
sub
or
fnsave
aad
sub
push
xor
push
pop
jo
mov
mov
pop
adc
lods
cs
faddl
push
out
fimull
movsl
jne
ja
xchg
adc
aas
mov
push
pop
shr
mov
adc
add
lds
pop
jle
ljmp
dec
jae
aam
jbe
adc
adc
pop
push
pop
mov
or
scas
lds
xor
testb
xor
push
inc
imul
xor
push
jbe
cltd
mov
add
data16
leave
hlt
out
cwtl
shll
dec
mov
xchg
imul
negl
cmp
mov
pop
add
push
jb
loop
cltd
cli
jnp
xchg
test
inc
insb
cmp
and
fs
lahf
mov
jg
sub
mov
mov
mov
jle
xchg
sbb
pop
shll
sub
dec
push
jne
aas
push
mov
movsl
sub
jmp
enter
das
xchg
cli
out
roll
outsb
or
rcr
pop
lcall
pop
push
push
mov
mov
jno
push
stos
iret
mov
inc
js
lds
push
aaa
dec
lret
mov
xlat
and
int
dec
dec
sahf
sbb
mov
lret
int3
pushfw
subl
push
xchg
jle
lcall
jg
mov
outsb
ja
cmp
sub
push
jg
lcall
mov
pop
lods
sbb
pop
pop
clc
xchg
loop
add
in
shrb
xlat
cmp
fcompl
jns
outsl
stos
das
jecxz
mov
dec
lds
dec
lock
inc
jmp
xchg
test
test
pop
cmp
mov
add
inc
cmp
das
or
pop
or
xlat
inc
cmp
xchg
test
jnp
aam
sub
push
adc
scas
jp
pop
insb
sub
int
pop
scas
mov
movsb
sti
fwait
aas
gs
loope
enter
fwait
loopne
xor
xchg
int
add
dec
sub
add
lods
mov
jp
adc
cmp
mov
jmp
rclb
mov
icebp
add
mov
pop
dec
inc
sub
popf
sbb
cld
enter
jae
jae
jo
rorb
sbb
cmp
push
stc
imul
pop
repz
inc
sub
jns
xor
movntps
mov
push
cli
das
popf
hlt
or
shrb
loopne
cs
jb
add
lock
daa
repz
jae
sbb
and
jecxz
jo
jg
fstpt
les
sbb
sarb
ja
dec
sahf
push
push
push
cli
or
pop
fs
cmpsb
sarl
ja
xor
xor
cmpsb
shrl
pop
jg
sub
fwait
xchg
pop
add
jle
popf
loop
mov
daa
pop
cwtl
cwtl
mov
or
xchg
xor
add
cmpsb
push
mov
scas
dec
push
ret
aad
hlt
imul
add
cmpsl
lahf
xchg
xchg
incl
mov
inc
push
jbe
mov
jl
rorb
scas
sbb
xchg
mov
mov
mov
daa
dec
std
lcall
lahf
jle
adc
loopne
push
or
inc
add
ja
cmp
sbb
mov
hlt
in
lret
cmp
in
jo
sub
mov
push
out
jl
gs
lret
and
int
xor
xchg
ss
aas
lock
call
inc
jle
clc
mov
das
mov
js
jo
insb
sbb
jge
clc
add
dec
out
adc
addr16
fistpll
jmp
dec
stos
adc
scas
scas
aaa
jb
mov
dec
mov
aas
jb
rclb
clc
std
cs
mov
hlt
jo
mov
push
sbb
mov
jne
cmpsl
push
push
xor
aam
xchg
rorb
das
push
addr16
xor
lret
cwtl
loope
pop
dec
and
dec
mov
mov
push
dec
cmp
sub
mov
xor
cmpb
out
dec
xchg
push
test
xor
push
dec
sbb
faddl
cmpsl
jae
mov
mov
sbb
loopne
pop
push
inc
jmp
xchg
out
inc
aad
popa
clc
test
scas
popf
insb
outsl
adc
adc
enter
sbb
shl
push
cmc
fcmove
jp
jle
adc
adc
and
sub
addr16
rolb
cmp
sarl
leave
insb
ret
aas
scas
mov
int3
and
mov
push
pushf
cmpsl
jo
pop
adc
movsl
sahf
ds
add
jae
xlat
mov
cmpsb
cmpsb
adc
test
lcall
fnstenv
aas
cltd
push
jmp
jge
xchg
lock
aas
inc
dec
sub
xlat
aas
xchg
mov
repz
jp
dec
push
or
stos
or
lret
jp
es
aam
mov
push
push
and
mov
pop
lock
shr
pop
xchg
dec
cmpsb
insb
insb
pop
pop
dec
cmp
push
out
and
fadd
add
dec
fcos
pop
punpckhdq
dec
lods
repz
int
out
fmull
int
rorb
sub
mov
jno
js
in
scas
or
mov
vmwrite
scas
sahf
lods
loope
jns,pt
push
std
sbb
mov
adc
sbb
push
dec
xchg
sbb
pop
add
sub
xchg
iret
enter
dec
imul
sbb
mov
push
jge
or
orb
and
arpl
or
cwtl
mov
jecxz
test
or
enter
mov
xor
loopne
and
mov
push
pop
push
jmp
add
xor
mov
insl
sbbb
das
mov
sar
hlt
lret
fnstenv
imul
addr16
adc
jne
mov
jl
int
imul
add
shl
fdivs
repnz
sti
jbe
sub
pop
mov
cmp
adc
shl
mov
inc
scas
imul
or
iret
dec
push
test
aam
out
in
sahf
mov
int3
add
add
dec
sti
adc
out
into
mov
movsl
movsb
stos
mov
ja
popf
addb
or
mov
insl
mov
mov
popf
orl
xor
inc
xchg
pop
lock
fiadds
adc
add
dec
pop
mov
or
mov
fsubl
clc
jns
mov
fcompl
ss
xor
enter
inc
sbb
inc
ret
pop
ds
popf
gs
add
je
and
mov
imul
cmc
dec
sbb
cltd
push
jno
or
jbe
push
adc
jl
cmp
mov
imul
les
sub
push
mov
cmp
mov
js
dec
push
inc
in
and
outsl
cmp
xchg
cwtl
inc
cmpb
int3
pop
or
add
stos
les
sbb
sti
inc
xorl
aad
pop
loop
movb
inc
aam
leave
pop
repz
enter
xor
inc
out
arpl
xchg
sub
mov
iret
shrl
cmp
push
inc
mov
into
fs
lock
inc
leave
xchg
mov
sub
sub
jl
adc
inc
dec
sbb
push
xchg
mov
test
inc
push
adc
sub
ds
push
pop
pop
xor
jmp
mov
pop
lret
sub
les
clc
or
js
push
xchg
adc
jmp
daa
jns
ficoml
pop
sti
mov
or
mov
jecxz
inc
xchg
pop
inc
adc
and
xchg
push
cmc
dec
test
out
cmpsb
dec
mov
cmp
jmp
cltd
cmp
jno
mov
dec
cmp
pop
xlat
inc
push
mov
call
inc
sbb
clc
out
sti
mov
mov
xlat
stos
mov
jecxz
xchg
call
push
call
and
mov
inc
mov
jnp
ret
nop
stos
ja
mov
or
jmp
pop
cmc
fldcw
je
pop
pop
fstpl
inc
add
jne
lahf
and
xchg
inc
mov
mov
xchg
call
sahf
and
roll
and
imul
aad
pop
das
pop
call
data16
xchg
inc
popf
out
aad
out
lock
adc
mov
mov
or
and
sti
push
lret
xchg
pushf
aam
pop
and
add
out
addb
jp
adc
insb
xchg
push
mov
cmc
xchg
bound
out
pop
shlb
xor
out
sbb
js
xor
sbb
mov
push
insb
xor
jns
mov
push
in
adc
mov
aam
clc
insl
lret
cmp
out
scas
adc
fwait
js
xor
psubusb
mov
les
adc
jmp
and
aam
in
pop
aaa
popf
adc
test
cld
sbb
mov
push
jns
push
leave
cwtl
repnz
sbb
jmp
outsb
into
jl
test
outsl
xor
lds
and
std
sub
shl
mov
aam
push
or
or
sbb
mul
fisttps
and
fsubr
add
inc
insl
xchg
sti
nop
lret
xchg
mov
dec
sbb
mov
xor
sbb
push
js
pop
dec
push
imul
jl
loop
andl
pop
xor
jbe
insb
pop
call
and
faddl
cs
clc
pop
sbb
inc
test
std
pop
mov
loop
arpl
scas
sarb
pop
jmp
jmp
xor
std
jno
push
xchg
jbe
mov
jns
add
outsb
mov
ret
std
pop
sub
sti
mov
mov
mov
and
testb
outsb
sub
dec
fstl
cmpb
add
lahf
jle
daa
pusha
out
rcrl
xlat
outsb
mov
xor
idivb
out
sti
popf
push
jge
in
nop
mov
fmul
orl
int
xchg
sub
cmp
sub
rcll
in
mov
les
pop
subb
sub
push
mov
mov
ss
leave
push
and
icebp
cwtl
mov
sarb
inc
ret
test
xchg
cmpsb
dec
cs
frstor
leave
icebp
lods
les
dec
pop
leave
push
jbe
loop
and
cmp
mov
data16
movq
xchg
scas
out
bound
repz
cmp
data16
fmull
and
aad
fdivrs
fst
out
pop
lcall
pop
push
imul
and
lds
cli
popf
sub
push
ret
sbb
jl
add
mov
lcall
fldenv
ljmp
and
push
into
hlt
cmpb
push
scas
adc
lret
sub
jg
jne
mov
mov
fstps
popf
decl
and
scas
or
and
pop
add
dec
rorb
rcrl
cmp
jl
mov
ret
outsb
pop
xor
leave
aad
scas
int
pop
lods
xlat
cmp
movl
push
mov
aaa
notb
enter
cmp
outsl
lcall
dec
adc
movsl
sbb
inc
inc
mov
insl
mov
in
fcoml
push
outsl
pop
pushf
mov
add
jmp
in
mov
dec
out
incl
aas
xor
xchg
cmp
stos
mov
adc
jno
adc
ror
xchg
xchg
cwtl
fsts
push
or
inc
mov
ja
es
in
xchg
loopne
adc
leave
jbe
xor
xchg
pop
aad
push
cmc
sarl
xchg
sub
imull
add
cmc
sti
scas
ret
or
pop
aam
fimull
repz
or
movsb
sub
push
lds
pusha
test
out
or
pop
push
popa
dec
dec
addr16
mov
mov
lods
aaa
xlat
inc
sub
dec
rclb
push
push
test
cmp
xchg
add
mov
push
or
cmp
dec
pop
pop
cli
repz
imul
inc
mov
ret
out
test
aam
xchg
mov
ret
hlt
dec
push
xchg
lods
jle
cmp
push
sbb
jmp
mov
fcompl
cmpsl
das
adc
ds
out
sub
in
aaa
cmp
iret
ds
movsl
xchg
xlat
es
dec
aam
sahf
repz
dec
jno
shl
sbb
dec
rep
cmpsb
lods
xor
insl
ds
std
outsl
notl
iret
jp
lods
and
mov
inc
and
mov
inc
inc
push
fisttpll
out
and
adc
push
mov
sbb
xchg
mov
lcall
add
mov
sub
jb
push
out
adc
pop
rolb
mov
jb
xchg
sbb
test
inc
cmp
or
sub
idiv
popf
stc
daa
call
jge
aas
mov
cmpsl
dec
lcall
test
xlat
mov
lods
or
mov
rorl
sub
sbb
pop
test
cli
pop
pop
jmp
rcll
data16
mov
cmp
les
dec
mov
mov
jp
sbb
xchg
or
pop
adc
in
add
js
or
pop
fidivrl
jg
sub
jb
clc
movb
fsincos
rcll
out
xor
mov
sti
daa
jecxz
sarb
ds
sub
jae
inc
popf
test
sbb
and
ds
or
pushf
pop
and
pop
add
out
cmp
shl
out
movsl
jl
jg
shlb
mov
xor
fwait
aaa
pop
or
sub
jae
add
icebp
push
xor
inc
push
test
in
inc
es
js
or
outsl
ret
push
dec
push
cmc
and
and
push
rcll
mov
daa
jecxz
into
insl
adc
fstps
sti
in
jnp
sti
lods
and
call
pop
aaa
data16
lods
je
adc
fadd
jns
fwait
xchg
inc
stos
xor
std
xorl
mov
shrb
jmp
xchg
and
lea
jb
or
in
int
fisubrl
out
inc
ret
jmp
sub
add
xor
lods
popf
push
and
and
mov
push
xor
outsl
mov
lcall
mov
xchg
xor
jg
push
xor
jmp
test
cs
push
and
daa
sub
jl
jo
dec
aad
xlat
mov
mov
xlat
pop
adc
fdivrl
shlb
in
mov
in
or
int
mov
sbb
sub
dec
and
jns
mov
and
dec
push
decb
mov
xor
cmp
mulb
mov
cltd
movsl
aam
jbe
call
jmp
js
andb
push
popa
or
bound
dec
stos
stc
jae
imul
lahf
sbb
dec
mov
adc
xor
lret
sbbb
out
out
iret
insl
test
jle
out
push
fistpl
fcomip
cmp
push
pop
shl
bound
lret
xlat
sbb
push
repz
in
push
mov
in
insb
xor
into
lret
nop
xchg
ffreep
ficomps
push
adcb
aaa
push
mov
and
test
imul
hlt
jns
xadd
es
movsb
cmp
dec
xchg
loopne
aam
push
mov
sbb
inc
jns
pop
stos
add
jge
sub
pop
jbe
aaa
pop
cmp
aam
mov
pop
pop
arpl
aad
add
pop
aad
enter
cmp
xchg
stc
cli
popf
sbb
lds
cmc
dec
scas
and
adc
jg
pop
jb
pop
shll
call
sub
jge
fwait
daa
in
std
clc
push
out
imul
popf
push
loope
lock
shl
fsub
mov
and
out
jl
ds
popa
fimull
mov
mov
imul
enter
int
jmp
hlt
popa
addb
out
sub
fs
lock
push
ret
rclb
adc
push
fistps
out
dec
mov
scas
ret
adc
xchg
inc
test
outsl
les
shll
pop
xlat
cmpl
xchg
cmp
sbb
dec
jae
sub
into
std
out
dec
or
push
fwait
or
loop
jne
stos
dec
mov
arpl
push
out
fldenv
out
pop
outsl
imul
test
lods
movsb
orl
pop
imul
sbb
pop
addr16
adc
xlat
out
sub
es
dec
in
int3
mov
sub
outsl
pushf
jno
mov
ror
xchg
hlt
in
je
stos
stc
cmp
cmpb
mov
mov
push
jge
sbb
das
dec
dec
sbb
adcl
adc
mov
int3
imul
or
sbb
arpl
dec
dec
pop
or
or
inc
sbb
jbe
loope
leave
jne
cmc
push
and
xchg
and
les
lcall
cmp
lcall
fldenv
adc
jmp
push
push
test
push
mov
sbb
icebp
mov
addr16
imul
rcr
cmp
xchg
mov
jo
mov
int3
jle
sbb
ror
idivb
cmp
int3
and
sbb
lea
aad
cmpsl
dec
inc
jmp
mov
outsl
out
xchg
imul
stos
movsb
xchg
dec
icebp
movsl
cmp
push
inc
push
mov
sub
pop
fstps
aad
jno
push
popl
data16
pop
in
push
adc
add
pusha
rolb
scas
int
jg
mov
test
fdivrs
xor
inc
pop
nop
or
adc
sub
sbb
lock
nop
xchg
xchg
icebp
mov
ds
xor
jb
sbb
and
fstpl
add
bound
adc
or
dec
sub
or
jmp
jbe
outsb
lret
shll
and
xchg
sub
test
adc
andb
rclb
aaa
pop
jbe
arpl
push
sbb
cmp
cmp
test
in
dec
ds
clc
sti
mov
inc
shrl
mov
add
or
and
sub
push
jecxz
inc
cmp
icebp
mov
imul
jge
cmp
sbb
out
gs
cmpsb
roll
jae
xchg
out
mov
xchg
sub
jbe
leave
pop
dec
adcb
jle
xlat
adc
fcoms
jg
sti
mov
jmp
psadbw
pop
outsl
jbe
stos
sti
fstl
jmp
inc
mov
mov
dec
push
dec
filds
rolb
ret
outsl
sbb
lcall
push
jne
imulb
jle
cwtl
add
mov
shr
sarb
push
stos
sub
push
xor
pop
lret
arpl
stos
jecxz
stos
cmp
rcl
cmp
enter
inc
pop
out
mov
in
and
jp
lret
stos
out
xlat
adc
dec
shll
adc
mov
stc
jle
mov
pop
mov
or
and
test
cwtl
and
xchg
jl
sub
sub
pushf
testl
jmp
dec
mov
pop
push
mov
xchg
push
mov
sbb
test
add
xchg
in
dec
adc
jno
loopne
pop
and
cmp
mov
ja
arpl
imul
dec
sti
pop
fwait
out
int3
test
pop
jnp
enter
mov
iret
push
mov
loopne
fsubl
cltd
repz
pop
adc
mov
in
push
scas
pop
ds
cmpsb
ja
fwait
pop
fisttpl
mov
xor
mov
inc
xor
xor
mov
pop
aaa
mov
pushf
add
push
in
mov
in
paddb
repz
inc
push
cwtl
adcl
sti
outsb
and
add
sub
lcall
pop
mov
imul
xor
data16
inc
xor
mov
sub
cmp
ljmp
inc
xor
cltd
add
int
loope
scas
sbb
pop
sub
mov
movsb
jns
test
push
fs
xor
enter
jo
push
ret
outsb
enter
popf
mov
or
in
jbe
shll
mov
xchg
fistps
lcall
shll
in
aaa
bound
dec
out
lock
dec
repz
std
gs
decb
jl
aam
cmovnp
fsubl
outsl
push
inc
dec
repz
push
inc
int3
mov
mov
jge
pushf
insl
or
loopne
xor
and
clc
popl
xchg
int3
sub
xor
sbb
aad
jmp
std
stc
fcmovbe
xchg
loopne
lret
in
aad
mov
sbb
jo
shl
jge
lahf
mov
rcl
in
push
pop
inc
mov
in
jg
hlt
pop
cs
or
lods
pop
adc
mov
mov
jle
xor
dec
cmpsl
and
testb
inc
adc
or
sbb
cmc
arpl
push
repnz
cmp
aam
ret
sahf
es
arpl
pusha
and
addr16
imul
sub
adc
mov
mov
lds
mov
gs
in
rorb
and
lods
jg
sub
inc
icebp
fwait
cmp
sti
mov
cld
repnz
loop
cmp
mov
aam
pop
push
cld
insl
lahf
sti
push
sbb
repz
cmp
dec
std
daa
mov
dec
ljmp
sti
dec
cmp
es
cltd
stos
rdpmc
sub
push
cmp
push
ret
scas
and
mov
ds
cmpsl
add
incl
push
cs
add
mov
jecxz
mov
clc
mov
into
lods
sahf
push
inc
sahf
xchg
aam
sub
xlat
cmpsl
fcompl
dec
jle
cmp
sbb
shr
aas
cli
and
adc
mov
sbb
inc
cmpsb
adc
hlt
sub
test
xlat
add
enter
dec
mov
shl
pop
lds
jmp
out
fcmove
mov
lahf
dec
mov
pop
xchg
popl
cmp
sub
jno
cmp
xchg
or
push
or
or
jmp
fdivs
sti
jle
sub
dec
cld
fsubrl
outsb
add
mov
jp
aaa
fisubs
je
arpl
in
add
and
orb
std
mov
xor
popa
pop
inc
sti
jmp
lock
inc
dec
sar
fs
cmp
xchg
dec
add
es
mov
sbb
pop
or
cwtl
push
fxch
lods
js
pop
adc
cmp
test
repz
cli
jbe
lods
aas
adc
insl
dec
and
cmc
ret
sbb
xor
insl
lods
movsl
pop
popa
or
inc
nop
add
notw
sub
push
je
mov
mov
ljmp
add
jb
dec
addr16
add
mov
subb
and
inc
or
xchg
mov
aaa
mov
pop
sbb
sbb
imul
pop
push
push
sub
daa
xchg
add
popa
enter
sub
lock
sbb
enter
xor
pop
jge
mov
stc
in
or
mov
pop
jno
and
cltd
dec
int
pop
push
ret
repz
lret
sbb
mov
jmp
push
icebp
lret
setge
iret
mov
mov
and
aam
out
mov
enter
jmp
in
xchg
pop
pop
add
mov
mov
call
nop
aam
leave
movsb
dec
out
push
fwait
leave
xor
addr16
push
pop
inc
sbb
or
pop
jae
or
aaa
and
fisubrl
mov
inc
mov
repnz
adc
out
cmpsb
cmc
adc
fmuls
mov
jg
xchg
xchg
xchg
aam
lods
push
mov
leave
xchg
push
xchg
stos
mov
mov
adc
mov
jmp
or
mov
xchg
rcrl
or
pushf
andb
inc
jb
jp
mov
jmp
cmpsb
jnp
sub
fucomp
outsb
mov
popf
xchg
xor
loope
int
jae
pushf
dec
flds
mov
cld
std
bound
mov
pop
lods
jnp
idivl
jns
xchg
xor
stos
adc
les
and
fxch
or
fstpl
popf
cmp
pop
push
pop
xchg
es
or
stos
mov
add
test
and
mov
sub
adc
ret
out
rcl
push
cltd
cmp
ret
add
gs
sahf
dec
lret
divl
mov
and
movsl
pop
xchg
xor
sub
sub
andb
popf
fsubs
xor
insb
imul
push
xchg
fsubl
and
xchg
adc
lcall
mov
sub
repnz
negb
inc
push
repnz
dec
inc
mov
rcrb
mov
negl
inc
insb
scas
dec
mov
insb
adc
mov
jg
js
xor
mov
cmpsb
shll
mov
into
jp
cmp
hlt
lds
ret
lcall
adc
mov
push
dec
xchg
stos
mull
inc
pop
jb
mov
lahf
mov
icebp
sub
mov
and
lock
das
fcoml
xchg
sbb
or
mov
test
push
mov
sbb
push
sbb
push
xlat
mov
data16
add
outsl
int3
pop
mov
xchg
mov
jo
cmp
mov
cmp
js
outsl
sub
mov
inc
jb
mov
jge
pop
push
cmc
movsb
cmp
sub
call
fcmovu
in
push
jl
inc
jecxz
dec
ljmp
dec
ja
pushf
mov
push
nop
or
lods
out
add
int3
push
cld
push
ret
movsb
push
inc
xchg
mov
sub
push
or
pop
data16
ljmp
int3
in
outsl
xchg
add
movsl
test
push
aam
xor
cmc
fs
pop
push
dec
mov
pop
popf
cmp
pop
psllq
lock
addr16
shlb
fcomp
adc
repz
nopl
stc
loopne
pop
cmp
add
pop
fiadds
insb
imul
xlat
pop
sub
leave
je
adc
aam
push
movsb
xchg
loopne
int3
daa
repnz
insl
and
int
popf
or
pushf
pop
je
xlat
test
ret
add
pop
mov
and
xor
je
je
push
loop
dec
push
cmp
cmpsb
mov
mov
sub
jg
add
cmpsl
cmp
lock
out
nop
and
das
sbb
mov
addr16
push
in
and
test
and
mov
mov
sub
inc
push
xchg
dec
inc
lock
adc
or
sub
sub
fstpt
jle
jle
push
mov
dec
test
mov
fucomi
popa
setbe
imul
add
xchg
mov
inc
xchg
push
pop
dec
mov
sub
pop
addr16
xor
push
inc
add
mov
das
testb
lcall
xchg
xor
jnp
aad
arpl
aam
add
sbb
mov
fidivrl
int3
or
cmp
sbbb
bound
int3
shr
lahf
xchg
xchg
dec
std
sar
sub
sahf
inc
mov
and
mov
pop
test
dec
dec
ds
mov
xchg
insb
mov
inc
add
les
sahf
call
in
add
jbe
sub
ja
outsb
mov
jbe
fcmovnbe
stos
cmc
stc
or
leave
mov
lock
ret
or
add
push
fdivs
push
or
add
or
sub
jmp
push
jne
pop
aaa
jg
push
scas
ret
scas
dec
sbb
pop
fisttpl
outsb
lret
roll
dec
dec
in
dec
or
xor
sbb
xchg
in
mov
scas
dec
stos
pushf
out
out
cld
sahf
cmp
imul
dec
push
xchg
addr16
jnp
insb
push
hlt
mov
sbbl
mov
dec
insb
inc
rcr
popf
pop
sbb
sub
filds
push
adc
aas
add
xor
fdivs
push
and
bound
push
inc
pop
in
mov
jno
ds
mov
cld
imul
xor
fs
aad
fcoml
sbb
sti
scas
sti
std
mov
fidivs
jle
push
mov
mov
cmp
bound
dec
roll
js
into
jl
pop
pop
mov
push
xlat
mov
je
lcall
sbb
pop
dec
add
push
fsubp
test
xchg
leave
inc
mov
jo
jl
mov
push
aaa
cmpsl
xchg
add
movl
xchg
sub
dec
inc
dec
lret
cmp
test
rclb
inc
outsb
call
mov
stos
mov
push
inc
shl
cmpsl
arpl
into
pop
pop
inc
loope
pop
pushf
les
les
xchg
pop
pop
divl
stos
cltd
pop
mov
pop
xor
cmpsb
shlb
repnz
lcall
popl
mov
push
rol
xchg
xchg
add
jae
stos
jae
pop
inc
sub
mov
mov
pop
xor
lea
lret
cmpsb
rcrl
arpl
mov
das
aam
arpl
rcll
aad
arpl
rorl
lods
cs
xchg
jns
faddp
jg
loop
sbb
in
add
ljmp
xchg
inc
clc
mov
outsl
bound
xor
adc
pushf
dec
or
cld
lea
xor
leave
test
sub
or
sub
jnp
jmp
jnp
ja
dec
pushf
std
cmc
loopne
sbb
lds
repz
pusha
mov
sbb
outsl
shll
cmp
mov
mov
cmp
scas
loop
mov
mov
mov
cmp
cmp
mov
jae
xor
decl
mov
cld
jp
pop
xchg
addr16
push
xchg
cld
repnz
xor
daa
and
mov
jle
into
std
hlt
mov
and
shll
mov
sbb
dec
mov
imul
pop
sub
lcall
push
pop
sbb
adc
cli
cwtl
adc
out
add
inc
push
mov
sub
jb
sbb
mov
cmp
pop
and
outsl
and
or
cmp
add
cltd
icebp
mov
sbb
pop
adc
jl
insl
ret
jnp
or
loop
lods
stos
shlb
mov
mov
pop
push
push
push
out
imul
es
bound
aam
jmp
movsl
pop
pop
shl
lea
lods
adc
and
and
pop
pop
fcoms
out
pop
pop
push
mov
add
mov
fneni(8087
ja
mov
iret
cmc
idivl
xor
jle
jnp
xchg
mov
ljmp
push
cwtl
mov
inc
dec
mov
sbb
loopne
pcmpgtb
or
mov
push
cs
push
mov
ret
mov
add
in
sbb
and
xor
jl
adc
push
mov
lods
jbe
mov
outsb
xor
icebp
rcrb
inc
jbe
cmp
add
and
push
adc
rcrb
push
pop
or
fldl
sbb
nop
dec
in
pop
mov
aam
popa
das
shrl
scas
cmp
mov
sbb
scas
push
pop
adc
lods
pop
pop
and
sbb
mov
mov
push
or
sbb
stos
xchg
das
and
leave
pop
ds
add
adc
repnz
push
pop
movsb
push
insb
lcall
in
sbb
jb
shlb
ljmp
xchg
hlt
in
mov
test
sbb
sub
outsb
dec
xor
cmpsb
aad
loopne
or
in
rorb
mov
mov
fadds
adc
fdivs
scas
lcall
mov
idivb
ret
sarb
mov
mov
dec
and
push
push
adc
dec
in
pop
lock
test
and
cmpsl
add
int
test
push
or
mov
mov
ljmp
xor
jae
loope
movsl
or
int
pop
and
adc
xchg
fildll
cmpsb
xchg
call
div
lret
ja
jg
xchg
add
and
jg
push
jo
outsb
popf
insb
push
push
mov
les
adc
xor
or
cmpl
aaa
adc
mov
pop
out
cmp
pop
cmp
push
ss
ret
movsb
mov
jns
push
xlat
sub
adc
mov
xchg
int
dec
lods
lds
stc
sbb
test
push
mov
cmp
scas
cmp
jl
mov
or
loopne
sbb
sub
test
icebp
push
or
das
cltd
js
and
adc
or
pop
push
cltd
mov
adc
mov
inc
push
pusha
flds
mov
shll
dec
sub
aam
push
push
loopne
out
cli
icebp
mov
fnsave
inc
mov
mov
seto
jmp
cmpsl
movsl
fcompl
jae
ljmp
ret
mov
and
sub
decb
xchg
ficoms
lret
push
lock
mov
mov
add
or
or
sub
and
sub
cmc
mov
popa
dec
rep
loopne
sub
dec
dec
mov
jg
or
sub
pop
leave
inc
clc
mov
dec
sbb
int
loopne
loopne
xchg
mov
jg
xor
fmull
adc
js
lods
mov
and
pop
int3
scas
or
loopne
mov
clc
insl
aad
sbb
iret
clc
mov
sbb
das
mov
and
pop
jp
or
mov
scas
sbb
mov
dec
fildl
push
lcall
outsb
imul
mov
sti
add
lahf
inc
and
xchg
in
cmpsl
jle
test
dec
adc
out
int
dec
sahf
enter
dec
les
xchg
xchg
orl
inc
xchg
jnp
aad
loopne
dec
or
loop
movsl
inc
dec
andb
pusha
or
imul
xor
ss
xchg
loop
cmp
dec
fstps
sub
int3
xchg
mov
scas
push
mov
imul
div
mov
cltd
jecxz
sarl
sbb
xacquire
cld
xchg
test
es
add
aaa
jbe
mov
pusha
lock
adcb
sbb
add
adc
int3
in
fcomi
xor
mov
scas
adcl
mov
pop
mov
push
aas
insb
fucomip
sbb
add
imul
push
sub
sub
into
xlat
ficoms
lds
add
daa
cmp
mov
mov
sbb
sub
pop
je
sti
enter
rcr
ret
dec
sub
into
test
es
imul
sub
mov
sub
cmp
js
mov
aam
arpl
and
dec
rcr
adc
lods
loope
mov
cmp
add
jp
mov
jae
push
into
loop
pop
cmc
int
add
roll
daa
test
sbb
push
add
mov
cmp
lock
roll
out
shll
iret
add
or
into
jno
cmp
lds
pop
popf
movsl
cmp
add
mov
or
sbb
adc
add
push
jmp
out
mov
adc
test
std
bound
loopne
int
loop
or
fwait
movsb
jnp,pn
adc
pop
leave
add
mov
fs
fidivs
mov
enter
adc
mov
pop
xor
and
mov
xchg
out
mov
rorb
sbb
pushl
xor
aaa
testl
bound
sbb
aam
jecxz
sahf
or
out
mov
movsl
es
sub
xchg
push
das
rep
jo
mov
push
fsubrl
test
pop
test
outsl
loope
mov
dec
push
ja
cmc
cmp
test
mov
fs
shll
mov
xor
ds
cmp
mov
pop
ret
out
adc
cmpsl
push
repnz
jmp
xchg
sub
jo
jo
lods
inc
movsl
out
push
xchg
or
mov
sbb
lds
lea
jo
repnz
insl
mov
jle
mov
dec
xchg
xor
shrl
lea
loop
and
fsub
mov
jecxz
inc
in
mov
outsb
and
sbb
mov
mov
neg
add
mov
pop
push
jb
pop
lods
sti
loop
inc
aaa
hlt
pusha
mov
mov
sub
xchg
or
addr16
repz
enter
and
iret
pushf
mov
xchg
sbb
mov
into
loope
xchg
dec
inc
scas
subl
xor
lret
sbb
sub
mov
xor
lock
dec
push
lea
push
xchg
xchg
push
xor
rcl
and
repnz
mov
mov
notl
dec
call
cmp
inc
ja
mov
cltd
jo
jne
push
testb
mov
or
push
push
test
shll
mov
sub
je
cmovg
jmp
mov
mov
pop
call
inc
mov
and
add
fs
cltd
cmp
and
leave
lods
sub
das
lret
push
adc
sahf
push
cmpsb
and
push
in
dec
xor
clc
out
push
rolb
dec
jge
dec
fdivrp
xchg
pop
mov
add
inc
lcall
pop
jge
leave
dec
aas
pusha
cli
xorb
cmp
aad
pop
push
jmp
fwait
lcall
jle
fsubl
ss
jecxz
lahf
jg
mov
insl
test
sub
shlb
fcoml
push
xlat
jmp
xchg
mov
les
mov
mov
sti
cmp
pop
push
sub
mov
iret
fs
mov
or
xchg
xlat
out
cmp
rcl
dec
mov
jnp
mov
inc
lea
out
cmp
push
je
imul
cmpsb
mov
imul
negb
xor
xor
out
add
xchg
loop
jb
xchg
scas
jecxz
icebp
sbb
pop
mov
adc
cmpsb
inc
bnd
adc
fimuls
dec
dec
jle
jb
mov
cmpsb
push
aas
mov
enter
xor
sub
add
pop
cmpsb
arpl
pop
popl
xchg
jne
jmp
lcall
std
jno
leave
and
push
dec
repz
in
xchg
pop
cmc
xchg
mov
jno
dec
pop
cmp
test
mov
mov
xchg
inc
in
pop
cmp
jmp
loopne
push
pop
xor
pop
subl
sub
out
outsb
call
pop
movsl
mov
xor
ret
xchg
fwait
insl
push
roll
das
frstpm(287
rclb
adc
addb
aaa
mov
push
mov
cmp
adc
sub
bound
pop
add
or
jb
dec
lahf
mov
cmpsb
push
push
mov
aad
ss
daa
movb
arpl
in
xchg
pop
pop
fcmove
inc
dec
pop
push
cmpsb
mov
adc
pop
call
xor
mov
loop
xchg
sbb
and
jl
test
xor
stos
pop
inc
bound
adc
xchg
outsl
test
mov
imul
dec
shlb
cmc
jle
scas
inc
jae
push
add
xor
and
adc
jnp
push
cmpsl
out
cmp
lods
pop
mov
pextrw
push
stos
fiadds
mov
testl
addr16
adc
lcall
sbb
out
or
aam
insl
fucomip
jo
sub
xchg
fsubs
daa
mov
push
and
adc
outsl
push
daa
sub
lds
or
mov
xor
sbb
inc
and
dec
jle
test
repz
pmuludq
sbb
sub
xor
inc
into
mov
push
ljmp
stc
mov
sub
jae
mov
add
jo
xor
stos
cli
cmp
xchg
rorl
cmp
sti
jno
add
lock
jne
xor
lea
dec
jge
push
push
leave
cltd
stos
decl
lret
jmp
lret
mov
mov
push
fsubl
outsb
xchg
cltd
stos
cmpsb
pop
lods
mov
xchg
jge
ja
and
xchg
outsb
mov
das
jae
xchg
sahf
pushf
cli
mov
xor
jge
loope
push
sar
xchg
stc
jne
and
or
repnz
jae
sub
adc
inc
mov
push
push
pushf
lods
aam
mov
cli
sbb
mov
jnp
imulb
jl
not
lret
dec
movsb
shll
pop
and
inc
jnp
dec
xchg
cmpsb
cmp
out
dec
imul
mov
leave
imul
add
mov
mov
ret
sub
sbb
pop
pop
rclb
mov
lret
cmc
pushf
cmpsb
insl
call
cs
dec
ffreep
xchg
pop
sub
add
cmp
int
in
inc
in
mov
add
mov
mov
rcl
push
loope
jg
cwtl
xor
pop
jg
int3
sub
repz
mov
xchg
cmpsl
aad
ljmp
or
xor
fs
cmpb
pop
push
xchg
and
cmpsl
push
pop
and
fwait
lods
sbb
in
xor
cmpsb
jg
sbb
adc
shrl
jmp
icebp
movsw
jnp
shlb
xchg
or
inc
in
mov
lahf
push
push
vmwrite
ja
clc
jnp
inc
int
in
sahf
test
cli
fimuls
jle
mov
jb
mov
aad
sbb
pop
xor
testb
lret
jae
or
shlb
orb
out
lea
out
mov
mov
cld
push
mov
test
or
imul
loopne
in
lret
gs
roll
fiadds
xchg
popa
in
mov
repz
cmpsl
mov
ret
call
popa
clc
dec
cld
jg
movsl
movsl
cmp
xchg
sub
jg
es
cli
repnz
jns
insb
or
out
aad
and
add
sub
push
call
fsubs
in
js
adcl
fnstcw
orb
enter
pop
pop
fstl
add
xchg
mov
xchg
mov
hlt
stc
inc
inc
adc
out
xchg
cmp
or
xchg
or
xchg
enter
dec
in
pop
testl
xor
add
sbb
pop
push
push
std
leave
fs
and
mov
insl
jecxz
jecxz
mov
decb
lock
and
or
mov
fimuls
ret
int3
les
in
or
push
lahf
rcrl
out
cwtl
cwtl
mov
xor
addr16
cmp
mov
adc
or
movsl
xor
pushf
push
push
outsl
pusha
cmc
jg
andl
push
pushf
mov
mov
outsb
mov
push
rcll
pusha
lret
xchg
or
mov
mov
push
mov
push
ja
mov
inc
ds
mov
jns
shll
xchg
dec
out
mull
mov
xorl
repnz
add
outsb
ret
mov
mov
adc
dec
ds
dec
or
int
or
pop
inc
xor
add
or
pop
out
outsl
push
mov
test
cld
aad
xor
mov
ret
test
mov
lea
sbb
add
out
fidivrs
mov
addps
fdiv
movsl
or
cld
call
arpl
data16
shrl
xlat
sub
adc
out
out
mov
push
inc
mov
jmp
xchg
cmp
xorb
and
push
cmp
and
mov
inc
pop
xchg
lret
addb
xchg
push
lods
fmul
push
sub
jne
sub
call
xor
or
push
iret
cltd
sti
dec
movsl
repz
fsubs
fisubs
sbb
mov
fildl
fs
orl
outsb
add
push
lods
xor
push
mov
mov
int3
sub
adcb
mov
xchg
bound
adc
mov
jbe
sbb
and
mov
sbb
fdivrs
repnz
pop
btc
ja
mov
mov
push
push
mov
sbb
test
inc
pop
cmc
arpl
mov
bnd
jle
fmull
lea
icebp
jg
mov
jb
sbbb
xchg
ss
dec
imul
loope
or
or
int3
das
nop
pop
out
je
add
idivl
push
outsl
daa
mov
pop
iret
popa
xor
xchg
or
fadd
mov
jne
nop
out
sti
jnp
mov
lock
push
loopne
icebp
lret
pushl
xchg
iret
xor
insb
mov
jne
lcall
pop
push
mov
jbe
fldt
xchg
mov
cmp
inc
out
adcl
jne
jns
dec
aam
adc
fadds
out
sbb
xor
push
movsl
mov
test
sbb
int
mov
movsl
jo
fimull
es
std
xor
xchg
dec
ja
ret
stc
cmp
xor
icebp
sahf
pop
or
mov
cld
les
push
fwait
xchg
ret
adc
push
push
push
in
dec
jmp
sub
push
arpl
insl
mov
add
imul
cs
xlat
addr16
outsl
lock
rorl
sbb
fidivs
xchg
jp
arpl
mov
nop
xorb
push
xor
in
inc
aam
cmc
sbb
imul
adc
cmp
jmp
call
insl
xlat
in
jne
je
or
rol
lcall
mov
xchg
mov
ficomps
and
in
notl
pop
gs
rcrl
stos
jle
cs
xlat
iret
sub
xor
and
aas
lock
call
add
rorb
mov
jp
push
lret
sbb
stc
and
divb
pop
aam
mov
mov
pop
les
and
aaa
jns
int
dec
mov
pop
int
pop
sbb
jmp
inc
pushl
or
push
out
fxsave
mov
pop
ljmp
out
mov
push
lock
add
mov
inc
out
test
mov
pop
outsl
mov
mov
mov
pop
and
xchg
xlat
xchg
popa
test
arpl
ljmp
xor
test
xor
aas
or
cmpsb
popf
dec
loopne
shl
add
packuswb
xchg
loopne
icebp
lret
das
adc
inc
movsl
dec
mov
leave
int
push
insb
ret
call
pop
mov
out
fstpt
inc
dec
xchg
in
inc
loop
lret
shrl
pop
cmp
into
ss
lods
test
in
xor
add
push
push
sarb
fdivrl
inc
dec
pop
push
or
int3
cmp
and
xchg
cmp
sub
jl
mov
imul
push
lds
fs
cmp
icebp
jo
sahf
imul
and
insb
inc
dec
mov
mov
aam
rolb
xlat
inc
mov
push
je
hlt
sbb
jle
jmp
cmp
push
jge
mov
fs
jbe
mov
adcb
cmc
jo
cmp
push
stos
int
dec
mov
xchg
pusha
add
imul
aam
rolb
gs
jb
dec
cwtl
repz
incl
test
lret
lahf
add
daa
mov
subl
xchg
sbb
es
scas
and
cmp
test
mov
xlat
imul
sub
inc
out
add
iret
or
test
push
bound
insl
mov
call
adc
mov
icebp
mov
push
rcl
dec
jle
xor
xchg
rclb
push
jmp
xchg
arpl
cmpb
add
push
sub
movsb
rcr
fwait
adc
decb
mov
fs
bound
sub
adc
xchg
lock
fcompl
sub
push
inc
out
in
lsl
pushf
dec
popf
push
adcb
push
mov
push
jecxz
sub
push
mov
imul
and
jno
dec
mov
cs
aam
loop
leave
push
orl
clc
xchg
nop
int3
cs
push
cmpsl
sub
mov
adc
dec
sub
mov
ret
mov
adc
gs
ljmp
pop
sub
xchg
and
mov
push
lret
jbe
sbb
fisubl
into
fisubrs
insb
xchg
xor
idivl
push
loope
popa
lahf
std
addr16
push
jns
fwait
pop
add
push
xchg
loop
je
test
int
cli
push
push
mov
mov
mov
in
jge
mov
push
in
jbe
in
hlt
add
mov
sbb
sub
jnp
lods
bound
data16
push
inc
mov
sub
fbld
addl
xchg
fwait
leave
xchg
push
test
adc
inc
jmp
inc
mov
jg
inc
pop
loope
jge
and
cmpsl
aad
fcoml
fcompl
jne
pusha
cltd
stos
inc
cmc
aaa
mov
pop
mov
pop
mov
inc
jle
out
stos
cmp
lcall
and
dec
shll
mov
in
mov
data16
int3
xchg
ret
popf
mov
sbb
pop
mov
mov
mov
sbb
push
xor
xchg
inc
andl
mov
stos
xor
mov
jg
xchg
cltd
mov
sub
lods
popa
cld
orl
xchg
mov
addr16
or
jno
movsb
add
mov
or
dec
imul
rcl
cli
in
enter
dec
xor
in
addb
sub
lods
pop
cmpsl
or
xor
lods
mov
fsubr
sahf
stos
fwait
test
push
call
mov
sarl
mov
lods
adc
pop
xor
mov
int
xchg
sub
int3
inc
lret
push
test
sahf
jns
jo
jno
mov
mov
cltd
les
cmpsb
jnp
sub
shlb
sbb
dec
pop
mov
adc
test
push
gs
sub
mov
into
jp
sub
dec
jecxz
push
mov
nop
mov
xchg
jbe
imull
outsb
loope
fistps
mov
xor
scas
add
sub
xor
fbstp
lea
xlat
movsl
loopne
es
nop
scas
and
inc
jmp
repz
aas
xchg
adc
test
jl
inc
adc
sbb
mov
aaa
add
fdivl
mov
and
mov
adc
mov
lock
mov
aaa
stos
push
pop
out
dec
xor
jge
lahf
mov
push
mov
test
push
mov
add
std
es
sti
mov
mov
jl
ret
subl
icebp
lods
andl
sbb
mov
inc
jl
pop
inc
jecxz
pop
out
xchg
xchg
cs
xor
dec
xchg
jp
fsubl
cmp
mov
addr16
jmp
icebp
xor
or
gs
shr
mov
and
xchg
into
push
jb
fisubl
sti
lea
pop
lock
outsl
outsl
lret
scas
fmull
jmp
mov
xchg
ds
cs
sbb
int3
lret
out
mov
or
popf
in
shlb
mov
xchg
jp
daa
jle
jo
mov
ss
inc
orb
into
jge
pushl
sub
jnp
scas
xor
fnstenv
xor
push
xor
in
mov
and
loope
fdivrs
push
or
pop
sub
jge
sbb
lcall
xchg
ret
jg
ljmp
xchg
roll
sub
jnp
hlt
sbb
cmpsl
into
je
pop
test
mov
push
fs
xchg
xchg
ret
in
mov
lock
and
mov
and
int
in
or
hlt
aaa
push
push
aad
mov
neg
xchg
mov
enter
aaa
mov
sbb
pop
jl
mov
xlat
xor
fisttpll
cmpsb
cmovg
mov
daa
faddl
or
mov
jb
xchg
inc
adc
imul
mov
pop
push
jae
push
cld
xchg
add
adcl
mov
in
pusha
and
sbb
mov
push
and
lea
jo
jmp
or
xchg
cs
pop
insl
mov
pop
repnz
inc
push
fmulp
jp
add
push
add
mov
insl
aad
bound
ja
cwtl
add
jl
pop
lret
pop
lock
sub
pop
ret
cs
adc
xor
ret
mov
sbb
dec
dec
adc
cwtl
add
or
xchg
sub
sbb
cld
pop
cmp
cmp
push
repnz
leave
notb
xor
add
xor
inc
push
xor
call
ret
jecxz
iret
fucomp
sbb
push
fistps
lods
jl
pop
adc
pop
pop
inc
loopne
cmp
das
xchg
aad
or
and
add
sbb
mov
mov
jbe
enter
clc
push
aaa
adc
jmp
xbegin
dec
and
lcall
rcrb
in
push
jbe
xchg
clc
orl
divl
cmp
lcall
adc
jg
cmpsl
push
push
mov
pushf
add
jl
fsub
daa
mov
xchg
lods
xchg
mov
and
xor
jne
rcl
xor
pop
lods
je
cmp
insl
inc
add
roll
mov
iret
out
stc
fidivrl
xchg
dec
bound
or
mov
insb
jnp
les
cld
sub
sbb
sub
mov
jo
insb
mov
pop
push
xchg
test
cmp
jg
arpl
daa
arpl
cmp
pop
adc
popf
imul
adc
mov
data16
je
sti
sarl
jns
stc
aam
bound
mov
adc
test
repnz
mov
mov
filds
or
mov
jae
ss
jle
add
mov
pop
sti
add
xchg
push
sbb
push
add
push
mov
xor
lret
sbb
cmpsb
jge
dec
xchg
lods
outsl
nopl
lret
test
clc
add
jno
mov
outsb
ret
fsts
inc
xor
sub
pop
out
icebp
add
xchg
inc
add
and
add
mov
aaa
mov
js
jle
pusha
mov
orl
out
mov
shll
loop
sub
lahf
xchg
mov
loopne
mov
je
scas
ficoms
orl
mov
dec
and
jp
mov
movsl
mov
xor
pop
adc
push
cwtl
mov
xorb
int3
ljmp
roll
add
add
jo
sbb
sar
hlt
stos
inc
pop
ds
cli
xlat
inc
rorl
out
popa
jge
pop
and
sub
add
aad
out
mov
test
xor
push
subl
fsubp
sub
mov
outsl
fidivrl
out
mov
cmc
cmp
loopne
sub
mov
int
mov
sub
sbb
jae
push
push
and
dec
jae
iret
fadd
mov
xor
sub
pusha
inc
stos
push
loopne
and
jg
pop
pushf
clc
sahf
in
pop
sub
js
enter
cmp
and
sub
hlt
daa
inc
push
inc
arpl
in
test
aaa
xor
stos
fwait
xchg
fistps
push
std
pop
roll
int
ret
and
jo
hlt
sbb
fildll
pop
mov
inc
lock
mov
and
aam
push
add
mov
xchg
fs
or
movsl
enter
fsubl
jp
imul
mov
cmp
mov
mov
je
add
and
dec
add
enter
pop
dec
push
pusha
xchg
xor
fucom
push
fs
add
and
addr16
and
adc
mov
or
mov
fcmovb
fnstcw
jnp
or
popa
lret
jecxz
js
fistpll
arpl
arpl
mov
push
add
xor
jle
imul
mov
jae
push
jae
aas
jns
or
mov
mov
stos
sbb
rcrl
inc
jecxz
mulps
mov
imul
in
ffreep
ljmp
test
scas
out
sarb
enter
jecxz
mov
out
pop
fimuls
call
out
inc
testb
or
iret
mov
mov
cmp
jns
decl
xor
enter
sub
pop
push
jle
rolb
rcrb
jle,pn
gs
leave
mov
aaa
ret
mov
push
into
mov
mov
lahf
ret
cli
or
jmp
mov
roll
nop
xchg
orb
or
xchg
icebp
aas
stos
ja
inc
dec
mov
test
mov
mov
add
pop
mov
pop
loop
or
cmc
mov
adc
sub
sbb
fdivrl
loop,pn
or
cmp
and
pop
movb
pop
fdivrp
xor
divw
add
orb
jecxz
ja
push
push
cmp
mov
and
mov
in
int
testl
pushl
lods
aam
push
sti
jno
lea
push
mov
inc
cmp
repz
dec
pop
jno
inc
jae
dec
in
or
mov
mov
andl
out
or
data16
lds
cltd
and
outsb
fsts
ret
dec
mov
popa
xor
adc
bound
mov
les
sub
nop
mov
dec
jecxz
lods
iret
testb
shll
mov
adc
xor
lcall
out
lret
jg
lods
call
stc
pop
outsl
jmp
xor
push
out
adc
mov
je
repz
stos
cmp
xchg
out
mov
enter
sbb
push
lcall
in
sub
popa
add
sub
inc
sahf
xlat
jb
pop
and
and
mov
pop
shrb
xchg
and
fdivp
pop
mov
out
dec
xchg
mov
and
popa
or
insb
lret
into
lock
pop
lods
jl
and
scas
shr
inc
fs
sbbb
shl
push
ror
roll
shr
jl
push
mov
arpl
mov
or
imul
rcrl
push
mov
shl
jne
pop
stos
mov
cmp
stos
xor
jg
loopne
mov
inc
scas
push
mul
pusha
dec
mov
xor
sti
and
pop
sbb
cmpsb
repnz
aad
cmpsb
adc
jp
movsl
cwtl
mov
pop
mov
and
adc
jmp
adc
movb
mov
imul
pop
out
jp
push
imul
sub
rolb
xchg
cs
xchg
xlat
push
pushf
xchg
xor
ss
cli
es
int
in
iret
shll
jnp
inc
dec
cld
movsb
add
fldl
aaa
cmp
xchg
mov
inc
sbb
into
push
and
ds
mov
rolb
inc
inc
out
repz
aaa
adc
out
mov
push
adc
xchg
mov
mov
sub
push
leave
mov
sahf
push
push
push
js
push
jae
xor
mov
lock
add
jl
in
mov
xchg
js
cs
inc
lds
lret
mov
dec
faddl
adc
into
xor
sbb
repnz
xchg
push
rcrl
fbld
lock
leave
or
dec
mov
xor
xor
dec
lods
lret
rcrb
lods
int3
pop
sbb
daa
push
dec
push
shl
inc
fistpll
sbb
fs
mov
xor
or
cmp
cmp
pusha
iret
in
sbb
lea
in
mov
cmp
jns
sub
jbe
stos
or
dec
or
dec
dec
test
mov
movsb
pop
jns
shr
js
cmpsb
cmpb
ret
mov
scas
fldt
jge
arpl
sbb
sbb
jge
test
jg
stos
pop
outsl
jbe
sub
sub
or
data16
out
inc
dec
xor
pop
or
push
jne
mov
sub
sbb
lds
in
push
incl
popf
mov
les
mov
xlat
inc
add
dec
fiadds
add
mov
jp
mov
sti
jmp
jnp
jl
fisubs
push
cmp
in
mov
push
cmp
pop
sbb
xlat
push
lret
push
jge
mov
leave
xchg
adc
aam
sti
adc
stos
fmuls
adc
fwait
insl
insb
icebp
cs
xlat
nop
jg
pop
jae
sbb
gs
dec
lods
sti
aad
ret
xchg
data16
dec
pushf
xchg
xor
push
cmp
testb
xor
hlt
jg
jp
push
test
add
push
pop
or
mov
or
xor
sbb
jb
je
rcl
mov
pop
push
dec
sar
orl
lahf
add
inc
sbb
pop
pop
sub
or
xchg
fwait
sti
sbb
mov
inc
dec
mov
fisttpll
mov
cmp
sbb
mov
inc
inc
sub
jle
dec
lds
mov
push
jmp
jne
jp
add
daa
repnz
leave
adc
jno
jo
sti
ret
jle
sbb
lret
jb
sti
sub
ret
insb
imul
data16
stc
int
jmp
lahf
fs
sahf
mov
mov
or
push
pop
add
mov
loope
cmp
push
test
and
inc
push
or
cmp
repnz
mov
sub
call
out
push
pop
pop
xchg
mov
mov
or
sbb
add
lret
inc
sahf
lds
xor
add
sub
fdivl
pusha
jge
aam
pushf
insl
xchg
sahf
dec
mov
xchg
sarb
icebp
dec
xchg
sbb
cltd
lds
jns
rorl
mov
aad
push
mov
inc
inc
inc
ret
dec
mov
andb
xchg
mov
jo
clc
mov
add
sbb
fstl
cs
in
dec
or
dec
jle
cmp
push
or
fsub
jmp
xlat
and
cmp
mov
jp
lcall
shrl
shll
mov
and
inc
jb
add
fimuls
out
push
insb
sti
and
mov
es
cmp
jle
popf
ret
push
push
rolb
xchg
pop
out
cmpsb
pop
dec
push
ret
std
sarl
aam
fisubs
fimull
mov
mov
xor
aam
adc
cmc
insl
pextrw
mov
xor
mov
mov
xchg
in
scas
jg
xchg
pop
pop
mov
mov
repz
mov
stos
faddl
cmp
stos
cmpsl
andb
adc
cwtl
adc
addr16
dec
jne
inc
fdivrs
stos
lret
and
enter
dec
sti
push
out
jl
test
jl
sub
lods
and
xor
scas
int
outsl
pop
mov
xchg
in
in
xchg
fldl
pop
mov
jnp
or
xchg
cmp
jmp
inc
jge
inc
fldl
lea
jae
gs
jnp
ja
and
inc
outsl
iret
inc
into
ja
incl
jbe
aaa
jnp
or
dec
lcall
cmp
cmp
mov
jl
dec
jbe
daa
mov
out
or
jmp
call
mov
data16
sub
mov
mov
loope
adc
push
scas
mov
lcall
jp
cmp
sbb
inc
in
xchg
jne
push
dec
dec
fidivrs
aaa
insl
cmpsl
cmpsb
or
dec
je
call
cmp
imul
shll
inc
fiadds
push
xor
insb
dec
loop
movsl
cmp
sub
js
pop
add
fwait
je
xchg
push
je
out
pop
fs
lock
mov
push
rcrb
jle
in
push
js
push
add
xchg
jge
cmp
pop
or
sti
fstpt
daa
popl
add
sub
adc
inc
jbe
sub
in
jbe
out
jg
sbb
mov
push
das
sbbb
and
push
clc
out
mov
xchg
dec
das
jl
xor
cld
int3
shlb
add
cmp
cmc
inc
sbb
adc
and
adc
gs
mov
jmp
das
stos
int3
xchg
mov
jmp
mov
es
inc
sahf
ret
ss
lahf
mov
xchg
jns
mov
gs
js
popf
ds
inc
enter
cwtl
pop
cmpsl
sbb
iret
icebp
iret
jmp
int3
sbb
shll
stos
jecxz
call
cmc
inc
mov
ja
repnz
adc
sbb
xchg
subb
pop
cmpl
cltd
adc
into
pop
popa
gs
daa
and
subl
jne
stc
int3
ljmp
lds
cltd
js
sub
adc
int
add
leave
insb
push
mov
mov
pop
mov
mov
mov
addl
sub
xor
adc
add
ret
fwait
push
shll
daa
pop
inc
clc
jl
jl
xchg
int3
mov
mov
in
test
ss
sbb
jbe
push
dec
stos
stos
sbb
popa
pop
sub
out
mov
les
xor
cmp
jne
das
and
jbe
adc
testb
ja
mov
cmpl
and
mov
jge
cltd
mov
es
daa
mov
inc
add
popf
pusha
pop
fsubl
int3
pop
lods
gs
inc
or
jne
loope
push
test
add
inc
lock
add
add
adc
push
shll
imul
push
mov
dec
nop
lods
fcomp
out
jge
xchg
mov
inc
inc
xor
xchg
sbb
pushf
out
cltd
sbb
lods
sbb
jmp
inc
lds
dec
orl
jle
mov
pop
jle
lods
xor
mov
sub
pop
xchg
fiadds
incb
xor
rorl
insl
mov
lret
pop
push
testl
fdivs
jbe
mov
in
cmc
test
and
dec
jnp
pop
ljmp
cli
xchg
clc
loopne
aaa
cli
cmp
push
jg
mov
sbb
sbb
mov
dec
mov
jns
pop
loope
mov
fdivrl
sub
jmp
and
insl
mov
xor
or
xor
dec
hlt
adc
cmp
rcll
fwait
cli
pop
mov
enter
pop
lret
call
pop
hlt
es
pop
xchg
inc
je
jle
jne
icebp
inc
mov
xor
mov
mov
push
sub
xlat
mov
adc
cltd
sbb
ds
bound
lods
hlt
add
lahf
ja
cmp
pop
lds
out
sbb
imul
fmulp
repnz
in
imul
insl
mov
mov
push
xchg
inc
cs
fisubrl
mov
in
pop
jnp
xor
mov
subb
imul
pusha
cwtl
push
or
mov
test
cmp
push
ficompl
cmp
mov
outsl
push
add
jmp
xchg
inc
pop
jge
out
cmp
jg
loope
nop
ljmp
dec
mov
fidivs
jg
out
and
testb
cld
mov
mov
lock
mov
mov
jae
dec
fmulp
aaa
push
sub
cmp
cltd
sub
jae
dec
mov
and
xchg
ja
mov
ud2
cmpl
xor
xchg
lods
fs
mov
cmpsb
mov
mov
push
mov
ret
jmp
dec
fucomi
jp
out
lret
bound
loope
pop
leave
aad
test
ret
test
mov
std
push
test
lcall
lods
fcmovu
push
test
jge
js
add
je
push
pusha
inc
xchg
pop
dec
lret
out
jp
push
jno
mov
sar
add
daa
jo
sbb
xchg
ss
shl
xor
decb
insb
call
shlb
imul
mov
pop
popf
out
dec
mov
fs
pop
jle
cmp
fcmovbe
ret
pmaxsw
test
adc
mov
dec
xor
out
xor
enter
mov
iret
shll
jne
addr16
jle
daa
sbb
xor
cmc
lea
notl
int3
jno
fs
mov
xor
cmp
cli
decl
jnp
cmp
ds
movsb
mov
enter
cli
adc
stos
js
mov
cmpl
mov
ja
adcl
or
mov
xchg
xchg
imul
dec
movsb
pop
cmp
out
cmpsl
lods
loopne
fwait
mov
es
ror
mov
lea
shr
ret
mov
lcall
aad
les
int
adc
sbb
cmp
in
mov
in
jl
aam
jle
push
push
jle
jnp
mov
sub
xor
mov
clc
pop
sbb
pop
mov
pushf
cmp
cmpsl
mov
ds
movsl
or
xchg
or
pusha
jb
out
mov
push
xchg
adc
jmp
fs
test
outsb
movsb
sub
sub
add
dec
ror
fnstsw
clc
adc
and
sti
dec
orl
mov
sbb
enter
dec
and
outsb
rcrb
outsl
sub
xor
subb
push
sbb
mov
mov
popa
dec
xor
popf
pop
psrad
mov
shl
and
pop
mov
pop
dec
mov
aas
dec
lret
int
pop
mov
adc
and
ret
push
jp
mov
cwtl
sub
insb
and
pop
mov
shll
movsb
stc
mov
fildll
and
mov
adc
inc
push
sub
sbb
test
jns
jge
xor
adc
or
xchg
xor
iret
test
mov
lret
aaa
rcrb
test
or
out
aaa
mov
xor
pusha
cmc
cwtl
movsl
movsl
loop
leave
push
sbb
lods
push
cld
stos
lods
push
xor
xor
xor
jmp
dec
shlb
aad
add
insb
scas
outsb
mov
sub
test
dec
scas
dec
jae
sub
sarb
mov
subl
out
mov
jo
sbb
mov
xor
sti
into
cmpsl
pop
push
xchg
shlb
add
test
xchg
popa
insl
sub
enter
repnz
jg
imul
mov
int3
inc
into
adc
adc
sbb
cmp
stos
pop
dec
aas
test
or
mov
sbb
shll
mov
adc
and
xrelease
mov
adc
jae
sub
js
pop
dec
mov
mov
dec
stos
mov
inc
hlt
pop
lahf
xchg
jmp
jae
testb
pusha
and
sub
pop
mov
mov
iret
in
sti
addb
pop
add
test
into
ja
jg
scas
fimull
mov
cld
push
cmp
cmpsb
aam
insl
outsb
mov
call
movsl
xchg
popa
mov
or
imul
push
rcrl
sbb
fs
insl
sub
cmpsl
inc
xchg
sbb
les
lea
test
adc
std
cmp
mov
adc
pop
mov
je
fimuls
push
iret
clc
and
shlb
sub
push
jns
int
mov
add
dec
js
push
aas
and
testl
popa
mov
or
jnp
jecxz
adc
inc
pop
pop
jle
mov
jecxz
ja
xor
xlat
int3
sbb
enter
std
xor
insb
rcl
sti
clc
xor
or
inc
subb
mov
mov
mov
pop
call
xchg
add
pop
jns
mov
jne
sahf
mov
push
pop
sbb
repz
loop
jae
inc
mov
divb
sub
fneni(8087
ficoms
mov
repnz
sti
pusha
xor
push
pusha
lcall
ror
mov
or
iret
xchg
jge
cmp
mov
cmpsb
leave
and
pop
mov
repnz
test
dec
mov
inc
fiaddl
and
xor
inc
mov
lods
cmp
jnp
mov
movsl
adc
dec
jnp
sub
push
sti
test
cmc
dec
cmpsb
sub
loope
add
scas
inc
sti
pop
dec
push
pop
dec
mov
mov
sbb
ja
outsb
lret
jae
out
jne
lock
add
ret
mov
mov
scas
add
adc
dec
jl
sahf
pop
or
cmp
add
fadds
into
lret
push
dec
cld
cmc
mov
add
aad
mov
lods
fistpl
hlt
or
adc
lret
loopne
loopne
push
fisubl
or
lods
pop
shrb
popa
jns
adc
lahf
mov
mov
outsb
mov
into
es
or
std
push
xor
xchg
xchg
mov
mov
mov
and
adc
cmp
xchg
add
fwait
sub
mov
fisubrl
pop
lcall
inc
movsb
or
jle
and
sub
arpl
inc
call
call
or
inc
mov
cmp
inc
lret
in
loop
push
out
movhps
js
fwait
xor
into
add
fbld
jg
inc
es
movsl
movsl
addl
adc
jb
fildl
sbb
mov
inc
dec
aas
paddq
scas
mov
sbb
inc
fistpll
cmp
xor
push
jp
sti
pushf
loopne
ficompl
mov
mov
pop
mov
out
cwtl
nop
sbb
in
push
dec
mov
ds
insb
mov
push
mov
stc
xchg
imul
fidivrs
xor
xor
loopne
dec
out
je
inc
pop
aas
loop
sbb
js
xor
sub
jne
push
mov
lahf
and
and
fsin
add
mov
in
sub
jle
bound
lahf
mov
ja
xor
in
sbb
mov
pop
das
out
mov
call
lods
mov
daa
xchg
sub
xor
std
pop
aas
or
mov
fmuls
in
sub
xchg
lods
lock
jp
sbb
dec
sti
sbb
fnstenv
or
dec
out
push
inc
sbb
inc
and
and
insl
xor
stos
xor
sahf
stos
mov
dec
dec
mulb
pop
add
mov
jb
sbb
adc
xchg
vfnmadd213ss
xchg
stos
fwait
es
xchg
pop
sahf
repnz
mov
and
notb
jmp
xchg
cmp
test
cltd
lahf
pushf
mov
jae
lods
std
and
pop
adc
mov
mov
outsl
mov
popf
pop
ror
mov
mov
pushf
int
mov
popf
insl
xchg
insl
insb
sbb
add
push
jno
cmp
imul
lcall
cmp
stos
mov
nop
jl
subb
cli
out
test
hlt
popf
pop
lahf
movb
nop
mov
jae
xchg
nop
mov
fiaddl
mov
imul
sub
fxch
ja
aas
lahf
mov
push
insb
sahf
push
xor
push
incl
push
lcall
ja
dec
daa
sub
dec
xor
mov
insl
xor
inc
arpl
in
fisubs
mov
daa
insb
addb
in
cmp
std
mov
add
inc
fwait
dec
add
mov
imul
jns
clc
es
sub
fidivl
aaa
mov
adc
ja
scas
leave
or
lcall
jecxz
sbb
ja
mov
push
pusha
rorl
mov
fs
jmp
xor
test
xor
add
outsb
push
scas
iret
stos
and
ja
mov
fsubp
mov
jle
or
pushf
dec
inc
push
jnp
xor
push
insb
and
xor
lret
pop
inc
push
popf
repnz
int3
pop
dec
ret
push
sbb
push
mov
aaa
sahf
xchg
test
push
jmp
push
fwait
push
adc
mov
and
mov
xchg
out
sti
cmpsl
add
dec
or
std
inc
push
clc
pop
or
pop
and
cmpsb
aam
push
and
xchg
xlat
inc
daa
movsb
stc
test
xchg
mov
push
adc
scas
cltd
sub
insb
jo
xor
or
notl
dec
lahf
das
or
cmp
ret
inc
or
dec
ljmp
loop
jg
xchg
xchg
sti
xchg
icebp
jmp
out
icebp
gs
idivl
dec
adc
push
shl
cmpsb
stos
testb
add
sahf
adc
jge
mov
sub
mov
shlb
xor
lcall
pop
xlat
pushf
cld
xchg
inc
cltd
dec
sub
xchg
add
ja
loope
add
lret
push
daa
pop
jae
cmp
movq
xor
sbb
fisttpll
shrl
dec
mov
adc
mov
mov
xchg
aad
jns
daa
adc
mov
and
rclb
imul
and
jbe
pop
bnd
addr16
and
xor
dec
jle
push
daa
sbb
add
pop
cs
gs
pop
lock
test
stos
pop
xchg
mov
mov
cmp
mov
ror
xchg
mov
mov
mov
clc
pop
ds
add
outsb
push
cmpsb
cmpsl
xor
and
jnp
sbb
jle
sub
mov
cmpsb
mov
or
and
xchg
sbb
and
fiadds
cmp
lret
es
xchg
hlt
call
and
xlat
and
lret
int3
mov
jecxz
xchg
out
cmc
fcmovnu
repz
bound
pop
cltd
jno
jns
push
test
dec
adc
out
mov
adc
inc
and
xchg
jg
unpcklps
push
daa
dec
mov
cmp
stc
call
iret
bound
inc
and
mov
inc
rcr
sub
mov
xchg
iret
mov
sub
cltd
or
test
pop
sahf
cmp
jns
add
ja
lahf
je
std
cltd
fiadds
add
mov
xor
int3
mov
mov
loopne
cmp
or
mov
add
xlat
pop
loope
xlat
dec
int
xchg
sbb
pop
and
xor
sbb
cwtl
inc
sahf
add
in
mov
add
jg
jmp
mov
data16
jnp
mov
ja
inc
movsl
in
pop
xchg
jns
fisubrs
adc
call
push
lds
lret
test
ss
sbb
jns
mov
pop
and
inc
fwait
repz
sub
jbe
hlt
adc
ljmp
iret
ret
iret
ljmp
stos
lahf
loopne
and
mov
mov
push
lret
add
jb
adc
imul
and
mov
add
xlat
xchg
jg
lods
insb
lods
fistpll
xor
ljmp
roll
in
cmp
adc
inc
jbe
cld
pushf
xchg
pop
inc
push
add
jl
in
ret
arpl
popa
jmp
popf
pop
cmpl
rcll
mov
test
ret
and
popl
popf
mov
add
xor
out
cmc
sub
dec
jne
cmp
or
aam
enter
dec
inc
orl
idivl
sbb
inc
lods
cmpsb
repz
popf
loop
fcom
lret
jp
imul
es
jge
adc
jmp
fildll
sti
shrl
inc
or
sarl
sbb
jne
dec
fwait
mov
pop
int3
push
fidivrl
adc
add
inc
jbe
enter
ret
sbb
add
imul
jle
mov
sbb
test
shrl
add
xchg
and
mov
push
aaa
sub
pop
pop
xchg
mov
and
push
loopne
rclb
add
sub
push
and
push
lods
or
dec
dec
shll
mov
pop
xchg
push
out
lret
cmp
dec
rclb
xchg
push
mov
idivl
xchg
mov
stc
cmp
or
mov
dec
fstpt
pop
or
ss
push
push
mov
cs
adc
mov
stos
subb
loope
xchg
lock
push
push
scas
or
es
and
mov
sahf
sub
xchg
mov
sbb
pop
jl
jno
xchg
jl
cmpb
dec
jge
xor
divb
lods
inc
repz
ds
add
fwait
add
cli
daa
out
fs
xchg
notl
bound
jo
sti
add
mov
lcall
ljmp
sbb
lcall
cmp
xor
shl
pop
shrb
rol
add
insl
jl
jno
pop
shll
pop
in
or
jge
pop
pop
loop
int3
jb
mov
shl
movsl
jmp
xchg
xchg
xchg
adc
out
adc
jmp
dec
aam
mov
stos
mov
sub
hlt
cmp
jnp
test
mov
fldt
ret
test
ds
ljmp
hlt
test
hlt
inc
mov
xchg
test
inc
inc
fistpl
mov
aad
dec
addr16
xchg
adc
cmpsl
jle
shlb
dec
jns
jnp
sbb
and
cmp
dec
mov
insl
xchg
incl
mov
pop
sub
push
cld
sub
cmp
std
xor
mov
push
pop
mov
adc
push
mov
jg
addr16
stos
and
daa
mov
xor
push
aas
loop
sbb
or
sub
mov
add
or
jb
mov
pop
nop
repnz
mov
mov
xchg
jae
pop
lahf
push
add
jecxz
lods
call
cltd
and
test
mov
faddl
out
popf
dec
test
xlat
mov
push
lret
ret
add
jp
loope
sbb
push
or
sbb
hlt
in
inc
fimuls
push
js
jg
loop
imul
aaa
insb
in
mov
scas
push
loopne
fbld
and
mov
test
sub
popa
inc
or
outsl
xchg
pop
xlat
pop
cmc
daa
lock
mov
sub
or
xor
sahf
imul
out
int
dec
ficoml
add
jp
sbb
fistpll
in
jbe
inc
push
scas
enter
add
es
push
push
lea
pop
mov
xchg
jg
ds
adc
sar
inc
push
data16
repz
sub
idivb
adc
call
and
inc
push
jg
stos
xchg
mov
call
dec
dec
lcall
push
es
add
mov
popf
clc
push
push
lods
les
lret
xchg
insb
mov
stos
jecxz
or
jns
sbbl
inc
bnd
ljmp
les
daa
pop
and
notl
popa
pop
in
and
or
inc
add
add
in
push
fsubl
cmpsl
in
sub
xchg
push
sahf
mov
jl
dec
jle
cmp
mov
popa
xchg
cmp
loop
push
pop
mov
pop
push
inc
shlb
inc
outsb
inc
daa
loop
in
inc
insl
push
inc
les
sarl
pop
pop
cltd
jnp
mov
push
inc
push
xchg
jb
pushw
cmp
enter
into
lods
das
sbb
dec
xor
sbb
mov
pop
and
jmp
ljmp
das
cmp
mov
or
fcomip
jle
cmp
pop
loopne
xor
push
andl
ret
sub
out
mov
bsf
test
dec
repz
scas
adc
aas
inc
addr16
mov
mov
adc
inc
iret
gs
nop
andb
mov
ds
clc
shrl
movsl
and
cmp
das
imulb
and
mov
fists
pusha
mov
pmulhw
lret
in
dec
pushf
pusha
sub
outsb
jg
mov
mov
inc
loope
mov
ljmp
roll
out
dec
cmp
jg
xchg
xlat
adc
shll
or
inc
xor
cs
cmp
clc
les
push
call
and
pop
mov
add
test
xchg
adc
inc
in
shrl
jmp
out
aas
scas
xchg
mov
mov
sub
jle
test
pop
test
lock
cmc
adc
push
ret
stos
add
xor
outsb
jbe
fxch
xchg
xchg
pop
mov
or
cmp
jb
mov
xor
test
xor
repz
xor
and
ljmp
mov
lcall
sbb
sub
aam
cmc
lds
or
add
int
pop
cld
or
sub
jmp
push
cmp
inc
ljmp
nop
out
dec
mov
xchg
dec
jnp
jg
mov
imul
pop
sbb
adc
stos
and
outsl
push
stos
xor
mov
ss
mov
aad
mov
pop
pop
fisubl
sbb
sbb
sbb
cmpsl
sti
push
icebp
pop
imul
test
xchg
lcall
ss
push
xchg
xor
stc
movsb
push
jne
in
xor
jb
adc
repnz
push
les
imul
pop
lahf
mov
mov
add
add
sti
sbb
jae
outsl
test
dec
lock
ds
aas
and
jnp
outsb
sarl
xor
mov
cmpb
nop
mov
or
les
in
andl
into
sbb
jns
xchg
jo
mov
cld
xchg
insb
add
imul
mov
out
push
imul
clc
test
push
jecxz
cmpsl
mov
aas
in
rol
add
fistpll
mov
shrb
ret
cli
cmp
pop
enter
mov
jge
into
clc
cmp
jnp
aas
out
sub
pop
fidivs
scas
xchg
mov
fyl2x
repz
jo
lods
fstl
out
mov
sti
push
sbb
pop
cmpsb
sub
fsubrl
loopne
mov
or
mov
fsubs
lcall
add
faddl
inc
and
and
sub
xchg
ds
pop
and
addr16
pop
sti
xor
and
fwait
sti
pop
cltd
push
fadd
scas
loope
shlb
push
mov
out
loop
mov
add
push
cmpsb
push
xor
std
out
pop
push
and
jmp
aam
in
rorl
enter
mov
loopne
add
xchg
imul
xor
push
dec
stc
mov
call
icebp
fwait
stos
icebp
cmp
arpl
fwait
jmp
mov
aad
sbb
xlat
push
test
in
mov
ss
rcll
xchg
pop
cmpsb
cmc
add
nop
andl
in
loopne
dec
and
dec
xchg
enter
and
dec
psubw
add
adc
cmc
aas
jecxz
xlat
sbb
and
lds
mov
jns
cmovns
inc
roll
sahf
or
shrb
cmc
leave
jo
scas
adc
loope
cmp
leave
stos
and
dec
ret
fisubl
sti
pop
test
cmp
push
jl
push
dec
std
std
mov
push
add
int3
lcall
aaa
jnp
imul
test
pop
aaa
ljmp
cltd
mov
mov
fcmovnb
mov
inc
arpl
mov
dec
xchg
cmp
adc
jne
or
pop
xchg
test
loopne
cltd
jb
nop
xchg
dec
mov
jne
sbb
sub
cmp
pop
mov
adc
and
aaa
xlat
jmp
add
cltd
loop
sbb
xor
jmp
push
push
xor
pop
or
mov
mov
dec
insl
stos
push
and
fdivl
jb
pop
ljmp
lods
jmp
test
out
sub
lods
pop
test
addb
shlb
popf
out
fs
or
es
inc
std
or
and
pop
push
and
in
adc
cmp
dec
in
sbb
jns
imul
xchg
xchg
lahf
outsb
mov
cmc
xor
jmp
das
cmc
inc
inc
cmc
add
shr
mov
and
test
and
js
mov
or
xchg
and
cmp
das
push
or
inc
jo
int
dec
mov
mov
adc
imul
push
mov
clc
pop
bound
xchg
jg
andb
jecxz
or
lahf
dec
xor
fs
enter
jmp
cwtl
add
orb
jp
xchg
jbe
aaa
adc
mov
jae
fbstp
mov
andl
adc
pmullw
test
mov
or
mov
fiadds
dec
in
jmp
cmc
jno
aad
js
rcll
xchg
mov
sbb
lds
sub
out
pop
jb
jb
movl
sub
lea
pop
scas
stos
inc
nop
push
adc
xlat
aam
add
test
adc
inc
lcall
dec
out
movsb
and
mov
xor
jge
inc
mov
cmp
mov
push
daa
icebp
addr16
ja
ror
mov
gs
pop
sbb
fmull
xchg
jmp
xchg
sarl
imulb
xor
push
push
inc
fdivl
or
aas
lea
and
mov
into
lea
out
sbb
in
mov
cmp
inc
push
lock
int
sub
pop
adc
nopl
cmpsb
push
mov
mov
scas
jge
cmc
loop
mov
mov
dec
and
inc
notl
lods
stc
daa
ss
divl
cmp
push
cmpl
mov
in
cmp
imul
lock
fxch
inc
ss
idivl
and
lcall
pushl
jb
jl
aad
sbb
add
pop
sbb
push
and
pop
bound
lret
orl
pop
rol
fisubrs
lds
call
pusha
iret
test
jbe
ret
popf
imul
pop
dec
into
sub
mov
mov
lods
or
inc
loope
nop
stos
lea
out
push
leave
jmp
mov
shll
jo
nop
mov
jne
push
mov
fs
aaa
mov
adc
fisttpl
jns
outsl
and
test
mov
mov
adc
movsb
inc
pop
out
or
add
fimuls
div
mov
pop
pop
push
cli
push
mov
not
icebp
lods
cld
mov
jo
xchg
pushl
inc
sub
out
adcb
cwtl
pusha
scas
cmp
stos
pop
aaa
rcrl
mov
push
and
xchg
repz
and
nop
pop
das
andl
stc
xchg
and
pop
je
lea
into
es
ret
cmpsl
xchg
loopne
ljmp
es
dec
repnz
divl
cmpl
repnz
cmp
push
cmp
scas
adc
mov
leave
add
or
cmp
arpl
minps
int3
rorl
xor
test
xor
jl
mov
imul
push
paddsb
ja
lea
fs
dec
mov
pop
pop
pop
mov
cmpsl
xorb
add
sub
enter
loop
xchg
mov
setge
leave
inc
cli
into
mov
out
test
cmc
stos
test
cmp
loop
fists
pop
mov
cmp
inc
jecxz
mov
in
xor
jae
loopne
sti
jmp
jns
or
insl
jle
mov
pop
push
mov
divb
sub
mov
jg
insb
sub
stc
ffreep
push
xor
cmp
outsb
adcb
mov
ljmp
mov
cmpsb
idivb
sbb
jmp
cli
gs
cmc
xor
add
ret
cmp
in
xor
push
adc
mov
inc
lods
fldt
and
inc
dec
inc
mov
mov
push
xchg
cmp
fs
sbb
ffreep
data16
inc
testl
daa
mov
and
sub
sti
inc
out
jge
fsubl
je
jmp
jmp
xchg
or
sbb
or
inc
add
loop
inc
dec
push
lds
ljmp
inc
sti
xor
imul
rorl
jo
shl
in
std
xchg
lods
pop
push
inc
loope
mov
or
pop
pushf
ret
sti
daa
icebp
jge
xchg
repnz
xorb
loope
sbb
sub
nop
js
pop
or
adcb
shll
je
inc
test
cmpsl
push
and
jmp
mov
cltd
jne
lcall
adcl
nop
dec
pop
fcoms
push
mov
cmc
cltd
or
adc
mov
testb
push
nop
js
in
fbstp
or
fistpl
inc
ds
dec
or
xchg
mov
movsb
xor
scas
pop
decl
dec
xor
test
push
in
mov
push
mov
int
pop
push
inc
shlb
cwtl
in
xchg
fnstsw
rolb
inc
das
push
add
or
xchg
bnd
lock
or
sbb
xor
aam
adc
int
mov
sbb
movsl
mov
mov
insl
imul
pushf
in
xlat
xchg
sub
js
aas
fmuls
dec
inc
les
nop
mov
in
les
mov
or
call
repnz
xchg
cmp
fwait
xlat
call
add
adc
jmp
pop
pop
fstpl
loope
pop
loop
repz
dec
outsl
push
cmp
xor
xor
mov
xchg
movsl
fs
push
xchg
aad
rcrl
mov
sub
xchg
add
rclb
pop
out
jbe
fimuls
leave
xchg
mov
xchg
xchg
mov
movsb
inc
pop
sub
adc
icebp
cmp
dec
test
mov
sarb
in
movsb
jl
cmp
lcall
jno
dec
push
xor
insb
pop
aas
cmpl
xchg
scas
loopne
mov
aam
push
hlt
test
pop
pusha
xchg
notb
and
fstl
xor
xorb
lods
mov
out
sub
aas
or
scas
jns
es
mov
ja
push
xchg
mov
fucomi
sbb
jns
adc
testl
xorb
and
dec
jo
je
xchg
cmp
push
sub
in
cmp
mov
pop
mov
popf
mov
cmp
fchs
es
jg
sub
push
inc
xor
pop
popa
mov
pop
out
ret
push
xchg
daa
les
xor
xor
push
mov
lods
mov
data16
xorb
ljmp
xlat
or
add
or
pop
insl
fiaddl
add
addl
imul
xchg
stc
stos
fidivrs
outsb
clc
lock
imulb
repnz
xchg
inc
push
enter
repz
adcl
jge
in
imul
loope
cld
popf
stos
in
pop
insb
movsb
mov
stos
xchg
subb
inc
enter
and
cld
xchg
addl
xchg
loop
dec
cmp
push
sub
fcomps
inc
hlt
adc
cmp
ficoms
nop
lret
out
mov
xchg
mov
out
imul
cmp
ds
imul
inc
stos
mov
adc
push
xchg
mov
out
in
into
nop
xor
inc
cwtl
sbb
rorl
push
cmc
out
dec
movsb
adc
push
inc
cwtl
int
cmp
inc
lret
cmpsl
loopne
and
cmp
lret
push
pop
into
aam
push
movsl
add
mul
xor
scas
stos
dec
aas
xor
jl
mov
push
xor
pop
test
fnstcw
popa
dec
add
push
pop
sarl
and
sbb
sbb
shl
incb
sub
xor
out
sbb
leave
std
rclb
ss
or
mov
data16
push
xchg
rolb
hlt
aam
push
stc
in
imul
lret
mov
jmp
psllq
mov
mov
ljmp
loopne
scas
mov
pop
dec
mov
or
bound
idivl
xor
std
jmp
sub
insl
adc
dec
jno
cmp
mov
xchg
cmpl
fmul
mov
push
cmp
aad
fwait
lds
stos
int3
pop
stc
push
adc
xchg
outsl
dec
or
jle
and
lahf
mov
push
push
xorb
mov
pop
outsb
xchg
push
addr16
dec
push
mov
cmp
outsb
faddl
jmp
mov
sub
pusha
dec
push
jae
or
adc
cwtd
das
inc
insb
mov
and
fsubrp
cmp
push
inc
pop
mov
xor
jno
mov
call
addb
std
addr16
push
test
push
adc
jg
out
mov
dec
mov
into
stc
lcall
sub
xor
pop
in
sub
push
fistps
sub
scas
mov
cmc
adc
and
lret
pop
sub
fildll
mov
fldcw
and
jp
jecxz
adc
push
or
mov
shr
mov
imul
fisubl
sti
data16
test
mov
sub
mov
sahf
out
repz
adc
cmp
xchg
jo
clc
shll
pop
mov
adc
ja
repnz
stc
inc
cmpsl
xor
ret
cmp
inc
les
mov
mov
and
sti
jecxz
cltd
andb
arpl
push
sub
push
push
outsb
aas
push
dec
sub
and
push
cwtl
aam
int3
cwtl
stos
sub
and
pop
fldl
mov
xchg
bound
jmp
sarl
into
sub
aam
cs
xor
pop
int
nop
mov
sub
jge
imul
xchg
cmpsb
dec
jae
xchg
out
into
lret
xor
ja
cmpxchg
insb
out
and
adc
rol
enter
jne
mov
test
xchg
sub
sub
shlb
es
push
fisttpl
cmp
or
xor
or
push
pop
rcl
xor
and
push
aaa
testl
sbb
xchg
sarl
xlat
sbb
aaa
pusha
jge
loope
stos
cmp
and
mov
rcll
outsl
cmc
sarl
push
test
into
in
in
or
mov
xor
push
stos
and
in
add
inc
outsb
je
mov
fdivl
call
mov
mov
jg
pop
mov
testb
add
jns
loopne
mov
lds
mov
pop
sbb
in
sbb
iret
shr
and
cmp
sbb
dec
fsubs
fstpl
push
cli
sub
mov
dec
xchg
xlat
loop
dec
je
fs
or
and
jb
mov
push
loop
out
fimull
repz
lcall
lods
test
out
push
lock
jg
jae
push
test
testb
lcall
add
inc
cld
push
pop
outsb
add
lret
jnp
fwait
int3
ds
or
xor
es
sti
cmp
iret
cmp
mov
xchg
or
dec
scas
dec
imul
hlt
mov
pop
add
pop
push
mov
fs
or
aas
dec
aaa
and
gs
in
dec
jmp
or
daa
fwait
in
jb
push
insl
leave
sub
cmp
or
ss
jnp
neg
ficoml
sub
mov
cmc
lret
add
outsl
pop
mov
mov
cmp
add
sarb
cld
or
imul
pop
insl
fdivrp
cs
jae
arpl
mov
dec
dec
push
ljmp
xor
or
pop
popf
xchg
in
movsb
js
jne
mov
inc
inc
les
ja
pop
loop
xor
jae
jp,pn
inc
push
fldz
in
les
pop
jnp
nop
dec
mov
loope
or
popa
jns
nop
jge
movsl
rorl
adc
xchg
and
mov
icebp
add
adc
push
stos
dec
xor
jp
inc
aam
scas
inc
xor
rcrb
vphaddwq
jae
cmpsl
add
rcrl
jmp
sub
mov
adc
adc
xchg
dec
push
in
stos
loopne
sbb
xchg
cmpsb
sti
lret
mov
icebp
adc
inc
mov
cmp
dec
popf
mov
mov
push
jg
mov
push
mov
push
cmp
cmpsl
movsb
insb
inc
inc
rcrb
lahf
mov
cmp
pop
adc
shrl
data16
fcoms
mov
jge
aad
nop
xchg
cmpsl
in
stc
push
xchg
hlt
aas
add
push
fs
cmpsb
aas
adc
movsl
xor
cmp
push
push
in
shll
int
mov
call
push
xchg
daa
cmc
jnp
cs
or
mov
xchg
iret
addb
or
int3
pop
hlt
jp
iret
scas
adc
outsb
sti
push
mov
inc
or
daa
or
mov
pop
fwait
and
pushf
cmp
adc
data16
es
mov
cmpsb
arpl
cltd
imul
mov
add
clc
dec
fcmovnu
push
das
mov
jle
fs
out
mov
sbb
hlt
sbb
data16
sbb
mov
pop
scas
cmp
and
lock
pop
xor
add
ss
jnp
xchg
and
int3
or
cmpsb
test
inc
das
pop
inc
shrl
in
int
xlat
pop
xchg
stos
daa
out
inc
sub
dec
xor
mov
test
adc
fistpl
lock
xorl
sbb
pop
pop
adc
sub
sbb
roll
adcb
pusha
and
cmpsb
pop
push
lcall
popf
mov
clc
pop
jecxz
push
popa
int
xchg
push
jp
into
lret
shll
dec
cmp
pop
add
cmp
and
xorl
mov
mov
lock
arpl
sub
clc
jmp
gs
loop
mov
lret
inc
and
mov
jnp
inc
outsl
enter
push
pushf
cmp
jmp
pushf
rol
mov
xchg
add
xor
push
ss
sub
stc
xlat
mov
mov
hlt
sub
in
fildl
into
add
mov
enter
mov
jo
das
mov
mov
add
imul
testl
shlb
dec
movsl
rorb
mov
mov
sub
in
hlt
into
mov
and
out
inc
xlat
mov
xchg
push
add
pushf
mov
xchg
jo
lods
cmp
sub
add
xor
or
sahf
sub
mov
in
lret
mov
xor
cmp
repnz
cmp
rcll
les
jns
daa
fadds
ret
mov
fs
inc
sti
mov
cs
push
mov
shr
jnp
xchg
mov
mov
fwait
testl
add
dec
push
mov
or
push
sbb
push
xor
mov
test
jmp
jae
testl
les
inc
cmc
addr16
in
push
or
out
ret
aad
push
call
mov
jae
pop
fcomi
sub
in
pushf
dec
mov
fisttpl
jnp
lods
lods
jg
sti
cli
xchg
and
jge
inc
mov
movsb
movsl
in
and
dec
lret
pop
xchg
popa
mov
xchg
lcall
shrb
add
lods
add
mov
aad
xor
push
mov
repnz
xchg
fbld
test
lods
push
mov
and
and
in
mov
mov
cmpl
and
stos
add
loope
adc
aaa
loope
xchg
ds
in
push
push
fstl
arpl
mov
cld
fadd
popa
fnstcw
loopne
dec
ljmp
adcb
cltd
xchg
jle
ret
and
and
in
and
fdivs
sbb
shrl
filds
push
mov
push
mov
outsl
lret
outsb
inc
jg
daa
inc
repnz
mov
dec
xchg
jmp
sbb
sbb
std
mov
mov
push
xor
lcall
enter
xchg
stc
testb
and
pop
xor
dec
outsl
cmp
xorl
inc
push
add
or
mov
push
or
std
aas
mov
or
jne
in
fnstsw
adc
aas
pushf
je
shrb
push
xchg
push
ja
dec
les
movsb
outsb
loop
mov
dec
xchg
xchg
xor
inc
dec
cld
dec
fisubl
lods
xchg
imul
jb
repz
je
pop
std
in
sub
icebp
loope
mov
imul
mov
mov
dec
orb
jge
ficompl
sahf
ss
ljmp
and
mov
mov
inc
shlb
sahf
xchg
push
mov
repz
sti
cmp
outsb
and
pop
cld
jg
or
mov
push
sub
pop
sbb
movsl
repz
pop
pop
inc
lret
push
mov
jge
stos
add
hlt
push
xchg
pop
stos
cmc
stos
icebp
in
imul
fiadds
ffree
jbe
jecxz
test
imul
in
pop
cmp
in
adc
insl
xorb
ja
repnz
xchg
adc
cwtl
pop
mov
enter
lds
mov
into
test
inc
jb
cmp
in
mov
sbb
out
in
sub
pop
sbb
push
mov
xor
leave
mov
pop
jb
xor
or
xor
xchg
mov
int
cmp
xchg
lret
xor
cltd
repnz
daa
mov
mov
jp
jbe
fs
jmp
ljmp
pushl
jae
movsb
ljmp
pop
jmp
sbb
or
cmp
push
adc
push
add
and
insb
adc
pop
pop
cmc
insb
scas
sbb
and
je
ret
mov
xlat
ret
push
inc
or
repnz
adcl
insl
jne
fdivl
pop
or
jae
mov
dec
std
xor
setno
loopne
jno
scas
lods
aas
jns
shll
jp
xor
int3
cli
aam
sub
jle
cmp
inc
inc
mov
pop
out
push
xor
push
add
jg
push
inc
into
je
in
xor
adc
mov
xchg
adc
add
pop
or
sahf
mov
mov
cmp
pop
push
bswap
stos
popa
dec
mov
ds
mov
jl
ss
pop
sub
out
adcl
pop
int3
pop
sbb
sbb
add
rcll
mov
mov
mov
leave
xor
pop
inc
xchg
into
out
bound
addb
xor
jl
int
cmp
inc
arpl
ljmp
cmpsb
mov
mov
inc
test
aam
mov
nop
pop
mov
scas
loopne
iret
cmpsl
in
into
sub
gs
or
cmp
or
or
lods
loopne
test
and
cmpsb
shr
xchg
and
leave
ret
lret
lcall
push
out
enter
pop
movswl
lds
lods
xor
mov
mov
add
inc
fwait
dec
mov
sbb
cmovns
int
mov
roll
jge
cmp
iret
inc
mov
mov
loopne
mov
lret
insb
aad
push
int
jo
pop
mov
add
repz
out
jle
sub
cmp
jne
mov
cmp
mov
xchg
sbb
pop
sub
and
jge
mov
cmp
or
pop
fcomps
icebp
test
inc
lods
call
jle
int
inc
and
inc
out
sbb
sub
xchg
push
sahf
gs
test
enter
test
add
mov
clc
mov
lahf
clc
pop
jo
into
mov
outsb
imul
imul
nop
clc
lret
inc
or
push
and
mov
and
jmp
mov
rclb
cmpl
cwtl
cmpb
pop
and
movsl
loope
mov
push
adc
jnp
add
pop
sub
leave
cld
sahf
bound
test
xchg
jb
fldt
nop
pop
jbe
push
dec
mov
in
xchg
iret
cld
xchg
adc
sub
mov
jg
fxch
and
lcall
mov
xchg
lahf
push
out
sub
or
jne
mov
inc
xchg
mov
cli
andl
negb
iret
aam
les
rorb
jbe
cmp
adc
stos
xchg
add
xor
out
ror
pop
inc
loop
cmp
lods
mov
ds
xchg
sbb
xchg
jmp
mov
lods
ljmp
ror
mov
repnz
add
xchg
push
testb
fbld
mov
inc
dec
jne
orl
jp
add
out
ficomps
jbe
lock
pop
sub
jo
sbb
mov
mov
ljmp
mov
fsubr
sti
xor
push
pop
pop
jne
sub
gs
ret
jo
and
je
sbb
insl
xlat
cmp
add
popa
jae
aad
sets
push
xchg
clc
fwait
jns
and
arpl
jmp
mov
jae
jg
push
and
xchg
mov
dec
mov
pop
mov
xchg
cmp
cltd
dec
outsl
hlt
enter
mov
sub
sbb
out
xchg
mov
int3
mov
test
push
jns
sbb
pop
mov
les
hlt
jle
ret
fdivr
aam
jbe
fidivrs
fimull
test
nop
cmpsb
hlt
cmp
rolb
insl
mov
jp
xchg
scas
push
rorl
movsl
mov
scas
scas
out
adc
test
add
cmc
jle
stos
movb
movsl
scas
out
daa
fsts
aaa
mov
scas
cmp
dec
add
cli
mov
fiadds
lods
xor
cmp
outsl
ror
je
movsl
pop
in
xchg
adc
rcl
call
out
call
scas
add
outsl
mov
mov
sbb
mov
sbb
in
sbb
xor
mov
jne
lods
cmp
adc
push
pop
sbb
enter
out
sbbl
test
add
mov
out
test
mov
or
pop
scas
mov
sbb
cmp
mov
in
rolb
iret
mov
and
pop
shl
lcall
inc
rorb
inc
shll
push
cmp
lods
imul
push
push
js
adcl
pop
mov
pop
mov
lcall
lods
push
es
xchg
aas
sub
lds
scas
fidivrs
sub
out
dec
lods
fcompl
fists
pop
inc
jle
cmc
es
jecxz
push
mov
mov
xchg
adc
sub
fs
mov
pop
int3
loop
dec
sub
add
aam
adc
int
dec
sub
sti
popf
cmpsl
frstor
mov
adc
add
fs
pop
jno
inc
insl
or
es
clc
and
sub
bound
movsl
loopne
adc
and
xor
jl
in
inc
pop
adc
mov
inc
mov
sbb
insb
xor
pushf
fwait
or
lcall
cltd
imul
into
or
aam
lea
sub
cwtl
mov
mov
out
subl
das
mov
subl
sbb
arpl
xchg
pop
out
adc
lret
lret
gs
xchg
xor
out
sbb
inc
adc
pop
xchg
mov
push
rol
fucom
jmp
test
rorl
in
cld
leave
xchg
in
ss
sub
dec
js
ror
call
jnp
inc
push
adc
ss
sub
mov
nop
mov
jecxz
fsubs
mov
pop
xchg
inc
and
cmpsl
jle
repnz
fcompl
cwtl
stos
inc
jmp
xchg
xor
sub
sub
push
cmp
inc
addr16
fadd
movsl
mov
pusha
enter
cmpsl
ds
pushf
ret
cld
stc
int3
stc
js
pop
pop
jmp
popa
out
scas
push
fisttpl
popa
add
cli
xchg
imul
sub
iret
xor
fwait
pop
scas
sub
arpl
pop
jl
mov
sub
mov
mov
ja
xor
mov
dec
inc
mov
subl
xor
xchg
das
sahf
int
fsubrs
sub
xchg
adc
popa
or
call
push
xchg
out
push
or
cmp
mov
push
sbb
sti
inc
sbb
imul
sbb
xchg
xorb
lock
loopne
ds
jmp
fisttpl
repz
xchg
inc
lds
fcompl
je
jg
std
jecxz
dec
adc
inc
scas
maxps
ja
insb
es
call
cli
inc
int3
pop
and
mov
add
rolb
xchg
fistl
or
sbb
lahf
inc
inc
dec
sub
test
lahf
sub
sbb
repnz
loop
aad
addl
or
out
pop
int
bound
mov
sub
dec
push
insl
mov
xchg
dec
push
out
jnp
mov
pushf
and
stos
inc
insb
pop
mov
in
mov
lock
inc
push
and
lock
js
jne
repnz
jnp
or
repnz
inc
ret
pop
fbld
dec
and
cli
add
cmp
popa
jo
hlt
inc
sbb
sbb
scas
cmpsb
pop
fwait
lds
xchg
mov
lret
or
test
lods
int
imul
subl
aad
repz
sub
addr16
adc
js
ret
pop
scas
mov
addr16
or
aad
stc
add
popf
xor
adc
sbb
xor
mov
fldl
test
das
mov
push
test
std
push
add
in
fmull
test
inc
fdiv
mov
cld
pop
jo
repnz
push
or
jg
les
mov
stos
mov
orb
mov
inc
push
cmc
enter
xchg
daa
nop
ficoms
or
pop
mov
or
loop
movsb
popa
xchg
xchg
mov
sarl
sbb
roll
arpl
xchg
xor
mov
sbb
sub
outsb
push
xchg
aaa
jle
hlt
jg
cld
pop
icebp
dec
xchg
mov
aaa
cwtl
mov
sbb
mov
add
lret
lret
cmp
out
ret
add
adc
cmp
rclb
pop
mov
ret
lods
cmp
aad
dec
add
aaa
cmp
xchg
mov
pop
jg
xor
lret
adc
and
outsb
mov
mov
rolb
stos
sub
inc
sub
fldl
ret
movsb
push
jg
in
sbb
aaa
jle
fisubl
dec
xchg
cmp
int3
inc
bound
sub
inc
add
ja
adc
pop
ficompl
lcall
imul
mov
cmpsb
and
data16
pusha
ds
sbb
outsb
inc
iret
outsb
add
aaa
cwtl
daa
mov
push
inc
push
out
jns
ret
adc
mov
or
loope
sbbb
adc
je
pop
fwait
dec
imul
push
ja
fisttps
xchg
dec
pushf
mov
imul
mov
xor
pop
pop
dec
push
lcall
cmp
loop
push
roll
mov
mov
sub
push
outsl
mov
jmp
jecxz
pusha
out
add
iret
test
stos
ret
lods
dec
inc
mov
push
bound
sub
push
shrd
and
test
pop
inc
pop
mov
adcb
or
jae
js
dec
cmpsl
int
cmc
xor
test
inc
or
jnp
jmp
lock
aam
leave
push
stos
push
mov
mov
lret
pop
lock
and
push
pusha
mov
and
aaa
fdivp
loopne
xchg
fsts
inc
and
xor
adc
je
sar
push
cmpsb
aam
jb
shll
jmp
pop
lea
scas
lods
in
iret
mov
xorl
int3
das
jno
scas
sub
imul
fcoms
adc
ljmp
lahf
lock
mov
add
mov
xchg
fs
arpl
push
cwtl
mov
sub
fwait
jae
pop
push
add
inc
dec
xor
add
mov
jno
call
pop
and
jbe
in
mov
jmp
pushf
pop
lcall
pop
mov
mov
mov
pop
xchg
pop
and
or
popf
outsb
and
cmpsl
add
and
add
push
stos
xchg
aas
xor
mov
xchg
lods
enter
sbb
je
push
add
jge
pop
dec
dec
push
cmc
sbb
jnp
outsb
imul
xchg
mov
jne
push
divl
inc
aaa
and
add
dec
mov
mov
nop
pushf
push
out
cmpsl
sbb
jnp
jo
pop
mov
add
sub
rorl
std
pop
fimull
iret
loope
or
je
or
aaa
dec
scas
push
jl
cmp
popa
sub
cmp
subl
divb
cld
cli
repz
pushf
jle
lcall
or
sub
mov
pushf
fnstcw
add
mov
sbb
int3
int
xlat
int
lods
leave
and
mov
mov
gs
into
adc
cmp
leave
inc
pop
pusha
pop
lahf
rcrl
jne
jae
sbb
xchg
stc
pop
xchg
adc
lea
not
add
in
jns
mov
cmc
jbe
inc
sahf
lret
push
popa
mov
mov
aaa
out
ds
aaa
lods
inc
pop
jb
addr16
leave
popf
jge
cli
je
in
les
cmpb
pop
add
mov
lea
sbb
adc
sarl
push
fisubrl
sub
push
dec
scas
insb
sahf
mov
out
xor
cwtl
scas
ret
es
jo
icebp
faddl
pop
rcrl
popl
pop
jae
mov
scas
out
lret
inc
sbb
cmovp
adcb
xor
popl
loope
pop
ret
movl
push
mov
fists
adc
sub
fnstcw
xor
mov
pop
push
cltd
int
out
call
dec
lret
sbb
jnp
ret
dec
sbb
sub
lea
in
xor
fildl
fmuls
lds
pop
incl
out
mov
jae
mov
ljmp
adc
inc
jnp
jae
push
not
loopne
aaa
fs
mov
sbb
sub
cltd
xchg
lods
cmp
mov
adc
insb
rorb
push
shrb
adc
ljmp
rcl
add
pushf
cld
sub
outsl
cmpsb
aad
popf
icebp
add
mov
loop
jo
data16
insl
imul
adc
cli
popf
or
sti
je
xor
sub
rorl
inc
sahf
or
or
jp
and
push
mov
mov
bound
in
sti
mov
cltd
inc
lods
subl
test
sub
mov
cmp
imul
inc
pop
sti
lcall
push
adc
mov
mov
sub
inc
les
movsl
rcll
pop
xchg
push
sbb
dec
mov
cli
mov
sub
enter
hlt
jg
add
mov
ret
scas
rep
inc
adc
jb
mov
sub
xor
mov
insl
mov
pop
popf
jg
cmp
xchg
pop
cmp
pop
and
jge
insl
sbbl
pop
xchg
outsb
jecxz
aam
popa
mov
insl
xor
xorl
andps
imul
dec
mov
dec
scas
lds
stc
xor
pop
lret
cltd
lds
imul
adc
in
jg
stc
jb
loop
enter
mov
adc
adc
repz
ss
ds
xor
xor
mov
test
sbb
sbb
es
add
xchg
lcall
loopne
loope
jbe
push
out
outsl
sbb
inc
mov
cmp
into
jecxz
dec
cwtl
sbb
cmp
dec
mov
mull
shrl
dec
dec
repz
ficoml
fisttpll
fidivl
jmp
out
into
fsubl
test
cmp
sti
push
mov
sbb
into
mov
notb
mov
sub
cmp
mov
test
xlat
cmc
mov
xchg
sbb
stos
sub
sbb
std
pusha
fadds
adc
out
mov
aas
or
lahf
mov
stc
lcall
les
in
cmp
pop
mov
push
cli
dec
xchg
imul
jae
lahf
in
mov
int3
pop
fldl
ret
xor
lret
inc
testb
cmp
push
push
or
ret
jmp
sbb
jmp
add
shrl
stos
cmp
js
jns
push
xchg
and
push
popa
js
push
push
cmp
call
dec
inc
in
scas
dec
sbb
inc
lods
push
mov
sbb
jbe
enter
push
mov
sub
xor
movsl
mov
mov
mov
jae
dec
movsl
pop
jg
push
xchg
dec
sub
or
pop
lds
lret
and
xchg
sub
cli
pop
mov
cmp
repz
pop
mov
ret
loope
lcall
dec
imul
sbb
jo
jl
push
mov
nop
test
aad
add
clc
sub
subl
and
xchg
in
xchg
or
aad
scas
fadd
in
in
and
mov
out
int
aas
cmpb
sbb
push
mov
arpl
add
idivl
int
aas
repnz
int
in
jno
repz
leave
add
xchg
rorb
aaa
hlt
jle
jne
aad
sbb
aad
lods
mov
or
adc
push
push
inc
and
jbe
stos
icebp
mov
lret
jo
dec
add
fmul
pop
xor
push
in
mov
dec
xchg
inc
ret
pop
in
daa
mov
sub
add
or
push
das
fimuls
sarl
rcrb
test
movzbl
stos
cmp
aam
mov
sbb
imulb
cwtl
mov
test
mov
cwtl
sbb
cmp
adcb
adc
mov
xchg
mov
sbb
cmpsb
decb
fildll
inc
or
pop
insb
mov
xchg
inc
sbb
cmp
repz
cltd
dec
lea
std
daa
int
sub
imul
xor
sub
insl
clc
or
out
push
mov
das
aaa
xor
addr16
inc
cmp
push
call
add
adc
fsubrs
jo
into
ljmp
inc
nop
pop
sbb
mov
das
dec
xchg
sub
aad
mov
adc
dec
sub
dec
add
xchg
aaa
push
push
push
xor
out
jae
adc
xchg
and
push
jae
stc
add
or
shl
fs
imul
insb
or
inc
daa
pushf
cli
aaa
ss
cmc
ret
dec
insl
inc
lret
andb
inc
cmp
ret
adc
lea
inc
aas
add
int3
cmc
jbe
mov
mov
out
push
addl
jecxz
js
sub
dec
pop
cld
lcall
mov
fadds
stc
push
rcr
in
pop
fcoml
in
scas
sub
dec
push
sahf
jnp
fdivp
sbb
mov
push
movsl
es
mov
aam
out
mov
jb
lahf
inc
sti
or
add
push
repz
fwait
rcrl
mov
scas
mov
push
lods
jbe
push
push
dec
cmc
push
inc
clc
repnz
adc
addr16
lds
cmp
or
repnz
test
lahf
pop
faddl
ret
enter
add
mov
inc
xor
movsl
repnz
lods
cmp
mov
lods
add
adc
xor
js
cmp
cmp
es
scas
icebp
int3
mov
xchg
fcoml
popf
jecxz
push
push
and
and
in
or
pop
inc
jo
or
jmp
inc
ja
mov
push
pop
das
test
cld
shlb
mov
lahf
fisttpl
outsl
mov
mov
lcall
mov
xor
push
cmp
pop
and
outsl
mov
add
jg
push
sbb
mov
pop
mov
push
jp
mov
bound
loop
ss
fs
and
push
das
jno
roll
push
enter
mov
mov
or
and
xchg
out
dec
pop
sub
insb
iret
sti
xchg
shl
push
popf
test
dec
pop
inc
cmp
push
cmp
mov
dec
mov
jp
ret
pop
inc
lret
mov
rorl
test
lock
pop
popa
mov
inc
xchg
stos
jne
mov
mov
xchg
sub
mov
mov
roll
sub
sub
pop
cmp
push
wrmsr
stos
jp
adc
das
fldl
dec
push
sbb
mov
test
stc
mov
movsl
inc
pop
xor
frstor
xchg
inc
mov
mov
jmp
push
cmp
into
lret
add
std
sbb
fistpl
call
xor
imul
mov
mov
int3
add
iret
cld
jmp
xchg
jae
jbe
xchg
xchg
lret
adc
cwtl
xchg
lods
cmp
pushf
jae
and
push
outsb
divps
notb
in
dec
cmpb
mov
pop
out
bound
in
adc
sub
pop
idivb
stc
jecxz
clc
popf
shl
lret
lea
imul
aad
stos
xor
mov
add
fisubrs
fld
nop
mov
push
and
das
add
ja
mov
cmpsl
stos
inc
clc
sub
pop
dec
dec
lods
inc
cmpsb
jae
lds
and
pop
pop
jnp
mov
jns
mov
pop
inc
add
cwtl
insl
out
icebp
fiadds
pop
ja
sbb
inc
push
test
in
mov
scas
xchg
aad
aaa
inc
js
jmp
jg
pop
bnd
pop
xor
out
orl
not
sub
lods
cmp
xchg
lcall
add
push
mov
push
or
ret
and
out
add
dec
scas
insb
jp
mov
jb
and
insl
fs
leave
cwtl
imul
lcall
arpl
test
push
and
push
xor
fstps
cmp
add
cmp
mov
movsl
sub
mov
inc
enter
pop
jbe
jmp
shlb
call
xor
push
xchg
inc
cmp
jae
and
ja
sti
rolb
fnstsw
xor
lahf
arpl
jle
sub
popa
into
test
cmpsb
negb
mov
stc
dec
in
js
mov
pop
lahf
jge
mov
ds
dec
popa
mov
test
push
push
and
aad
dec
loope
xchg
push
mov
mov
push
test
sar
fs
stos
ss
jle
cmp
xchg
and
pop
mov
addr16
cmp
pop
pcmpgtw
mov
xor
jae
loopne
mov
hlt
test
mov
fildll
mov
je
paddusb
bound
push
test
mov
jno
mov
sarb
rcll
xchg
filds
aaa
out
fistpll
mov
sbb
sar
lea
mov
into
adc
ljmp
stos
jmp
sbb
sbb
sub
jge
and
sti
insb
sub
lods
test
sub
inc
cwtl
mov
inc
inc
mov
mov
aam
xor
jp
je
arpl
dec
adc
mov
loopne
movsl
add
add
mov
repnz
jmp
mov
stc
xchg
xorl
in
icebp
bound
pop
sub
push
sub
inc
ds
test
add
xchg
inc
invd
sbb
sbb
pop
mov
mov
jmp
les
add
sbb
mov
gs
pop
push
and
dec
add
push
xor
pop
mov
test
xchg
aam
loope
call
sub
sbb
rorb
in
repz
aaa
daa
stos
push
push
xor
mov
lcall
loope
adc
push
hlt
push
pop
cli
jmp
xlat
arpl
jmp
add
sub
xlat
outsb
mov
dec
sbb
dec
aaa
lret
fistl
les
andl
rolb
xor
xor
dec
out
jle
clc
js
mov
sbb
ret
ljmp
and
outsl
jo
lcall
xlat
lcall
xchg
insl
ljmp
pushf
fstpl
add
jb
loop
rorb
ljmp
test
rcrl
out
xchg
jb
scas
xchg
push
adc
jg
shlb
and
mov
fiadds
jmp
xchg
pop
insl
xchg
aaa
add
or
xchg
push
dec
es
push
sbb
stc
pop
push
fisubs
xchg
and
xchg
out
stos
xchg
lea
xor
or
sbb
or
sub
fs
sbb
xchg
pop
or
jns
inc
daa
dec
xor
scas
add
push
ficompl
ret
xor
dec
xlat
arpl
roll
push
jae
imul
stc
sub
nop
jg
in
ja
jle
notb
cmp
sub
mov
jl
push
int
jg
pushf
fcoms
pop
mov
insl
sub
lds
nop
adc
push
push
pop
ret
int
xlat
lcall
insl
leave
ret
incb
adc
ret
xchg
aad
xchg
push
mov
jle
and
movsb
loopne
cmp
std
push
pop
out
mov
add
xor
inc
in
cli
mov
incl
int3
lock
inc
sub
cmp
pop
fdivr
jge
jl
loopne
fwait
pop
pop
push
jge
int3
xchg
aas
sbb
pushl
jl
fmuls
test
mov
sub
pop
into
dec
cmp
mov
add
xorl
rclb
loop
xchg
jge
repnz
pusha
cld
ja
into
mov
xor
mov
es
xorb
xchg
arpl
cld
xchg
mov
push
scas
dec
shll
nop
fwait
sbb
fwait
cld
dec
outsl
shlb
jb
arpl
insb
pushl
lods
pop
test
cmpsl
push
mov
mov
xchg
das
std
mov
iret
std
scas
xlat
xor
leave
fsubrp
push
pop
push
aad
aaa
xchg
in
lock
pop
jle
inc
dec
sti
dec
movsl
mov
push
dec
gs
test
fs
xor
sub
lret
mov
movsb
or
jbe
and
mov
or
push
aad
cmpl
rorb
jp
pop
add
jae
xor
repz
out
cmp
cmp
jo
dec
fs
cmc
scas
adc
fwait
xchg
jb
test
lahf
das
shr
bound
test
fisubrl
and
addl
lret
stc
pop
fstpl
test
pop
repnz
cmp
lret
inc
adc
sahf
push
in
inc
mov
scas
fs
or
dec
inc
pop
lret
dec
cmc
mov
nop
xchg
jp
fs
pop
push
fldt
hlt
sbb
loope
nop
and
jp
scas
jge
rclb
in
flds
das
push
sbb
and
push
inc
out
fistpl
pop
adc
xor
jmp
add
stos
ja
rcr
sbb
sbb
inc
leave
mulb
mov
fisubl
push
popf
ss
mov
sub
or
add
push
dec
jl
int3
xor
fcompl
push
call
ljmp
sahf
in
fnstcw
sahf
inc
bound
mov
and
xor
sbbb
mov
push
push
int
push
fstps
inc
cmp
xchg
movsb
rorb
pop
addr16
nop
jge
mov
pop
fs
jle
and
push
ret
test
sub
cmp
and
pushf
xchg
add
push
ljmp
xchg
in
iret
test
in
mov
cmp
loope
adc
xchg
sub
inc
pop
jnp
cmp
mov
js
cltd
push
xor
and
test
stc
cmp
sar
or
rolb
xchg
jecxz
adc
add
add
xor
mov
add
shrl
mov
xor
popa
adc
cmp
mov
push
pushf
xchg
inc
jae
lods
mov
insb
sahf
sbb
push
inc
jnp
dec
xor
cmp
inc
aas
mov
pushf
xor
push
std
stc
push
and
aaa
cmpsl
dec
inc
jo
cmp
dec
pop
sub
xchg
vpor
insl
push
jmp
mov
lret
mov
ret
cmp
lcall
or
das
xchg
bound
fisubl
mov
aam
dec
jmp
bound
xchg
cmp
dec
xor
movsl
lock
adc
jg
test
in
sti
push
nop
popf
dec
xchg
push
mov
adc
fcmovu
jle
testl
mov
pop
xlat
aam
imul
cmp
adc
jbe
and
sarb
icebp
movsb
lods
push
cmp
out
mov
pop
mov
lcall
cmpsb
or
xor
mov
xchg
dec
cld
lea
pop
mov
aas
pop
push
loopne
or
sbb
push
gs
add
pop
decb
xor
es
lods
mov
cmp
das
mov
and
pop
popa
hlt
push
cld
dec
lcall
mov
sub
mov
adc
pusha
loopne
rorb
sahf
xor
inc
subl
mov
pushf
jg
fmuls
out
jb
loop
lret
shl
xchg
scas
mov
xor
xchg
jmp
orl
dec
shr
stc
mov
adc
orb
sub
mov
cwtl
out
pop
dec
out
xchg
out
mov
and
lcall
lock
jg
mov
xchg
repnz
sub
out
iret
sbb
je
push
mov
les
loopne
addr16
jb
fidivrl
fadd
je
nop
movsl
sahf
in
clc
pop
ds
inc
loopne
call
call
je
test
test
repz
outsb
out
ss
add
jne
xchg
cmc
js
mov
cmc
cltd
lahf
dec
aas
imul
xlat
ret
jne
mov
scas
inc
pop
adc
mov
jg
mov
aam
movsb
rclb
pminsw
mov
or
mov
out
and
test
push
push
jmp
ss
jecxz
in
cmp
sub
sbb
xchg
imul
mov
popf
clc
pop
sahf
negl
xor
pop
scas
addr16
not
outsb
sbb
xchg
jl
jno
scas
leave
and
sti
imul
push
cltd
or
xchg
call
imul
imul
mov
call
dec
ja,pt
fistpll
rclw
cmp
or
adc
dec
add
jno
and
mov
push
push
movsl
and
enter
nop
jmp
scas
xor
or
adc
jb
push
dec
addb
sub
add
ja
jae
outsb
fsubs
xor
sbb
ror
xchg
out
mov
enter
mov
mov
lahf
scas
div
add
cmc
add
xchg
push
dec
xlat
bsr
aaa
fidivrs
subb
jno
inc
mov
test
mov
movsl
inc
or
clc
mov
mov
pop
sbb
aas
mov
sbb
jle
jno
test
inc
mov
outsl
xchg
mov
sub
movsb
sbbb
pop
mov
cmp
mov
xor
inc
jbe
push
jno
jle
sbb
f2xm1
leave
add
push
xor
jmp
inc
in
push
xchg
mov
pop
pop
mov
push
cmp
xchg
mov
xchg
dec
insb
scas
jae
popl
sets
loopne
mov
cwtl
push
imul
sub
xorb
inc
lds
add
daa
es
xchg
add
push
xchg
repz
mov
mov
xchg
call
ret
cmp
lods
adc
inc
ror
adc
cmp
out
pushf
mov
mov
cli
pop
inc
dec
mov
popa
or
jge
lods
call
inc
fcompl
mov
into
cltd
and
divb
jg
pop
dec
pop
inc
in
jmp
cmp
pusha
in
xchg
pop
xorb
neg
or
jle
icebp
fstpl
cmp
push
lcall
aaa
sub
sti
add
jge
subb
push
sbb
das
add
xor
cli
xchg
push
aam
call
fcomp
and
mov
mov
fs
shrb
shlb
cmp
js
insl
jbe
push
inc
es
movsl
cwtl
push
bound
in
pushf
fwait
pcmpeqd
lods
lret
mov
or
jmp
sub
fs
pop
cld
in
out
sub
mov
imul
movsl
cltd
sub
pop
mov
nop
jp
movsl
mov
inc
mov
cmp
jno
fdivr
and
addr16
movsb
cld
xchg
dec
cmp
mov
xchg
outsl
add
lret
xchg
and
idivb
mov
xor
insl
dec
nop
inc
inc
add
xor
sbb
pop
mov
xchg
mov
sti
fadds
mov
push
xchg
xorl
cmp
enter
inc
jne
lds
iret
movsl
inc
xchg
cli
sti
rorl
adc
xorl
scas
pop
sub
xchg
shrb
data16
leave
add
cmc
jg
mov
mov
and
jns
pop
sti
lret
adc
mov
mov
push
test
aas
jge
pop
or
cwtl
addr16
or
jbe
xlat
fsubrp
xchg
jnp
pusha
sub
inc
loope
scas
pop
jp
jge
xchg
mov
xchg
aas
ficompl
dec
popa
cmp
push
jnp
ljmp
inc
add
add
fisubrl
test
in
mov
and
andl
sbb
lahf
sbb
inc
imul
inc
sub
pop
jle
nop
arpl
insb
scas
sub
cwtl
div
adc
mov
out
shrl
push
push
or
xchg
fsubs
lods
aas
jno
add
repnz
lret
mov
lds
fnstsw
test
add
adc
pushf
and
or
add
mov
out
enter
and
add
aam
mov
cmp
sub
test
jns
std
cmp
mov
push
xor
std
sbb
addb
push
addr16
xor
mov
clc
push
jecxz
sbb
aas
test
imull
mov
addr16
jnp
pop
xchg
int3
push
addr16
mov
rcll
mov
lcall
aam
rcr
in
mov
icebp
jns
mov
mov
cltd
test
mov
test
mov
mov
shl
lds
jne
adc
aas
js
mov
mov
xchg
jb
jp
out
cmpsb
xor
pop
decb
aaa
cmpl
outsl
sbb
adc
sub
sub
xchg
xor
int
xlat
and
int3
sbb
fisttpll
fsubl
dec
push
popa
mov
xlat
std
sti
call
mov
mov
xchg
data16
leave
sbb
xchg
push
push
push
out
test
fyl2x
mov
inc
fcom
das
cmp
jo
and
pusha
insb
cmp
jecxz
pop
es
jb
fisttpl
das
inc
cs
scas
out
xchg
out
xorl
scas
dec
out
jo
mov
outsl
lcall
movsb
insl
inc
jg
adc
les
call
repz
pusha
icebp
adc
mov
mov
adc
addr16
and
add
and
stos
notb
pop
ss
addr16
xchg
lods
incl
dec
aaa
shlb
jp
adc
cmp
xchg
mov
stc
pusha
push
jno
xor
mov
mov
mov
push
adc
dec
jo
daa
and
stos
mov
jmp
push
enter
mov
leave
push
lret
aam
mov
sbb
sub
std
rorb
pop
cmc
cmpsl
in
cli
and
mov
nop
shlb
shlb
push
push
fldt
sbb
sbb
faddl
dec
jle
enter
dec
push
mov
push
jno
rcr
nopl
cli
add
jne
and
arpl
shlb
scas
pop
push
cs
lea
lcall
mov
popa
pop
fnstenv
aam
xchg
cwtl
call
test
lods
or
es
xor
cwtl
pop
sbb
jp
xor
jnp
add
sub
push
push
orb
jno
jmp
mov
loop
addr16
jns
mov
lods
mov
push
jne
rol
ss
daa
dec
les
int3
lock
leave
pop
push
cmc
push
loope
mov
pop
sub
dec
popf
push
iret
lcall
mov
mov
mov
out
popf
sub
inc
fnstcw
ja
cmp
pop
inc
pop
dec
cmp
mov
add
bound
jmp
adc
faddp
in
les
pop
dec
push
ljmp
and
out
scas
add
fcmovnu
sbb
nop
xor
inc
push
cli
xchg
std
mov
mov
pop
xor
lock
ret
js
xchg
push
pop
sub
mov
jne
jo
aad
outsl
das
int
shrl
push
adc
xchg
ret
lfs
ret
mov
gs
jmp
xchg
cmp
xor
pop
cmp
sbb
pop
scas
inc
scas
or
ljmp
scas
fs
inc
insb
out
js
inc
jl
xchg
inc
push
xlat
enter
jg
data16
mov
cli
mov
cmp
sbb
xchg
jnp
xchg
jbe
mov
and
movsb
into
push
xchg
and
pop
or
dec
sub
scas
xor
faddl
sub
gs
scas
jbe
test
sub
das
out
ficoms
movsl
nop
push
mov
test
cltd
movsb
in
ljmp
inc
jno
dec
or
hlt
sub
adc
hlt
nop
dec
inc
mov
sub
add
iret
std
push
pop
sti
xlat
imul
jo
leave
sahf
imul
jmp
shlb
xchg
cmp
fldcw
cmp
lea
jns
sbb
or
cmc
bound
dec
mull
inc
pop
sar
mov
mov
mov
paddb
sbb
and
ljmp
stos
loop
jns
pop
inc
call
sbb
test
adc
pop
mov
xlat
and
aad
scas
les
js
pop
in
sub
aas
cmp
nop
out
clc
aam
add
xorb
cmp
inc
gs
or
pop
xor
ss
mov
out
xor
test
sub
daa
sbb
lret
stos
inc
mov
sbb
clc
int
outsb
mov
push
fwait
dec
movsl
hlt
insb
stc
shll
stos
lcall
int
lahf
cld
mov
and
push
and
jbe
aam
add
jbe
ret
aas
pusha
movsb
stos
cmp
outsl
into
and
lret
sbb
js
xor
cli
lahf
shl
mov
out
into
mov
mov
outsb
mov
sahf
jne
xchg
dec
cli
dec
xchg
mov
or
sub
std
inc
and
out
sahf
jae
mov
lret
xbegin
pushf
ljmp
test
cmp
adc
aad
pop
pop
fsubr
hlt
in
jae
cmpsb
outsl
lods
lods
es
orb
movsb
in
pop
jb
dec
mov
push
shll
lret
jne
jns
mov
cwtl
lret
inc
mov
mov
push
pop
lea
in
push
loopne
fdivr
sbb
data16
sbb
cmp
or
imul
mov
sbb
into
jnp
movb
mov
sbb
out
xchg
popa
xor
into
jg
daa
in
inc
mov
cmc
pop
je
xor
out
sbb
xor
outsb
jno
sbb
dec
cwtl
jg
call
mov
xlat
xchg
stos
lret
popf
fldenv
dec
xlat
mulb
fiadds
or
jne
test
enter
mov
loope
movsl
push
mov
ret
out
and
mov
sub
in
lret
sbb
inc
pop
jge
and
ljmp
shl
enter
mov
xorl
call
xchg
pop
in
xchg
jnp
pop
dec
mov
lcall
insb
cmp
popf
into
ret
xor
inc
shl
and
cli
stos
and
or
ror
sahf
sub
mov
jl
push
pusha
jecxz
aam
xor
jge
sbb
bound
xchg
mov
insl
hlt
sub
call
mov
jne
dec
cltd
ror
jne
jno
pusha
push
movsb
imul
divl
add
jno
adc
push
cmp
and
mov
repnz
mov
popa
pop
sbb
add
or
iret
aaa
and
pop
sub
cmp
rclb
push
mov
mov
mov
sub
inc
inc
push
mov
fsub
test
fdiv
jmp
in
testl
dec
sub
add
movsl
pop
mov
fdivrl
pop
iret
mov
cmp
inc
in
and
xchg
jg
sub
out
jae
fs
dec
inc
xchg
ljmp
cmp
pop
cmp
enter
push
fcomi
cld
ret
aas
in
cmpsb
pop
add
outsl
loop
pop
lahf
xor
push
fdivrl
xlat
dec
pop
jp
fstpl
daa
and
xchg
inc
mov
jl
mov
jbe
xchg
jbe
jge
das
mov
js
arpl
jmp
dec
push
dec
loopne
cmp
fwait
inc
fsubs
lcall
repnz
call
push
add
ss
pop
mov
gs
cltd
int3
fwait
mov
pop
push
cmp
lods
mov
sub
sbb
push
into
lock
jne
cmpsl
insb
sub
sub
int
dec
and
sub
lods
repnz
adcl
jae
push
loopne
sbb
mov
push
in
pop
arpl
lds
xchg
mov
aam
cmp
inc
xchg
jge
cmovp
adc
fsubrp
mov
xchg
movhps
pop
pop
add
aaa
jnp
das
and
xchg
arpl
mov
inc
es
and
outsb
incl
stos
push
fwait
push
mov
jmp
dec
lret
loope
lcall
jnp
jecxz
jg
push
in
adcl
sbbb
push
cmp
ret
dec
add
add
inc
pop
cltd
xchg
lods
jbe
pop
mov
mov
cmp
jbe
mov
std
lret
mov
mov
sbb
cmp
andl
rcll
mov
cmp
scas
jb
and
inc
stos
adc
mov
pop
sbb
flds
dec
adc
lods
das
lret
dec
sub
sub
dec
arpl
xlat
cld
mov
lea
iret
aam
sub
lret
fs
sub
cwtl
addl
inc
stos
clc
mov
je
sbb
ja
lds
jl
pop
fistpl
xchg
adc
and
push
xchg
call
xor
insl
xchg
pop
popa
mov
dec
insb
xchg
dec
js
je
scas
hlt
fwait
lret
push
xchg
jae
jge
add
push
out
sbb
mov
inc
lods
imul
mov
stos
dec
out
pop
and
xchg
or
ss
sbb
leave
dec
lock
dec
mov
sub
stc
lahf
push
fsubl
sbb
adc
mov
jecxz
mov
mov
das
or
mov
or
dec
jg
add
lea
lods
jge
mov
sub
add
out
mov
leave
ret
jne
leave
mov
push
xchg
adc
imul
mov
mov
jbe
xor
jge
fwait
dec
aas
xchg
cltd
adc
xor
pushf
xor
mov
fsts
push
fwait
push
mov
xlat
int3
lret
dec
lret
adc
aas
sahf
push
mov
jle
pop
inc
mov
int
mov
stc
sarl
scas
cmpl
ja
or
dec
push
lret
adc
aam
scas
push
in
mov
cltd
jg
loop
and
xchg
jns
add
fnsave
xor
or
ret
sub
adc
push
lock
hlt
xor
push
dec
inc
loope
bound
push
adcl
call
ret
data16
ds
pusha
inc
or
jg
cmp
call
sar
in
jmp
sbb
mov
inc
cltd
test
movsb
fadds
dec
pop
cli
xor
lods
mov
les
mov
adc
inc
mov
pop
dec
jns
repz
insb
fisubrl
mov
gs
jp
adc
sti
pop
adcb
xlat
cmp
adc
or
xor
and
xor
js
lods
xchg
imul
mov
rorl
shlb
pavgb
fstp
jmp
pop
ds
mov
fisttpl
out
repz
das
sub
lods
cmp
fcmovbe
dec
cwtl
frstor
sub
dec
ret
jae
mov
dec
subb
enter
push
mov
mov
sub
mov
scas
mov
jmp
push
in
xchg
add
aas
pop
xor
in
sbb
in
push
scas
add
subb
push
movsb
mov
jo
xchg
push
push
add
sub
aaa
mov
xchg
push
mov
outsb
cmpsb
popa
push
fdivl
mov
ret
xchg
int3
jae
test
es
jo
push
xchg
jle
dec
cmc
dec
lea
jb
hlt
movsl
adc
addr16
xor
cmp
out
or
add
xor
xchg
and
cmp
cmp
or
shrl
aas
sbb
mov
adc
pop
nop
mov
leave
jns
adc
mov
sbb
sbb
push
stos
push
jecxz
pop
jmp
sbb
jp
and
dec
sbbl
cmpsl
cmp
imul
pushf
cmp
add
lret
adc
jne
inc
mov
popa
jbe
mov
dec
xchg
xchg
mov
or
jns
stos
es
leave
xor
adc
loope
mov
inc
das
mov
daa
sub
test
mov
das
jne
xchg
icebp
mov
insl
fwait
test
mov
push
cmp
iret
xchg
in
pop
inc
jne
ljmp
jne
int3
adc
inc
cmpsl
inc
fwait
push
cmp
adc
inc
aad
cmpsb
xchg
aam
jmp
testb
inc
mov
fiadds
dec
or
sti
and
and
loop
cmpsb
add
dec
cmpl
fs
lods
repnz
or
inc
xor
mov
pop
movsl
jg
xchg
push
xchg
add
xor
test
insb
js
subl
sbb
jg
aad
loope
mov
testb
js
push
test
push
in
or
and
das
mov
int
mov
cmp
lods
xchg
mov
lds
dec
ja
aaa
movsb
out
ss
or
push
pop
movsb
loop
sbb
leave
pop
mov
add
mov
jno
dec
jp
xor
xor
sub
mov
or
fwait
jmp
bound
sti
lahf
orb
xor
sahf
lods
sbb
out
and
addr16
xor
mov
pop
popa
sub
movsb
mov
lcall
out
andb
pushf
lret
and
push
xchg
movsl
mov
xor
pop
lret
xor
inc
aas
add
mov
xadd
das
sti
lods
sbb
inc
notb
jns
clc
nop
lahf
dec
rol
or
add
mov
sub
xchg
pusha
push
sti
pop
scas
jmp
fnsave
xchg
out
rcr
pop
in
out
outsl
dec
out
lret
mov
xor
out
mov
cwtl
mov
pop
cmp
insl
ret
jle
loopne
nop
inc
push
xor
cmc
outsl
ja
test
mov
mov
jnp
in
sub
dec
xchg
sub
mov
cs
loope
mov
data16
mov
or
push
out
xchg
dec
mov
movsl
out
leave
inc
add
xchg
and
test
stos
pop
addb
psubb
fistl
xor
jl
fdivp
daa
pop
cmp
xor
or
adc
push
loope
and
ret
in
mov
es
xor
sbb
pop
push
loopne
lret
push
out
and
push
cmp
mov
adc
pop
test
test
jge
inc
push
cmp
dec
lods
pushf
imul
mov
popf
shlb
cmp
ds
sahf
sahf
jb
cs
movsb
xor
push
mov
add
es
pop
addb
popa
sub
aam
or
push
mov
pop
lahf
push
xor
pushf
sub
push
les
stc
adc
inc
sbb
and
sbb
fcomp
push
jecxz
iret
out
mov
je
sarb
outsl
inc
inc
dec
add
cld
rorb
mov
lahf
fwait
stc
sub
sbb
and
jne
mov
dec
push
and
pop
test
iret
addr16
lret
into
sub
jnp
test
jle
and
mov
pop
rorb
inc
stos
das
nop
add
sbb
daa
and
sbb
cmpsb
sub
mov
cwtl
add
xchg
test
imul
mov
mov
mov
imul
fucomp
aas
cs
push
sarb
push
insl
test
imul
lds
mov
xor
add
movsl
nop
dec
fnsave
ja
in
cmp
mov
add
and
mov
cltd
mov
and
stc
and
add
pop
call
insb
test
push
stc
js
sub
scas
das
add
imul
and
pusha
mov
shrb
sar
inc
sub
xchg
stc
inc
pop
xchg
das
dec
mov
mov
pop
stos
aaa
cmp
std
stos
pshufw
fildll
testb
push
jmp
mov
pop
test
movsb
scas
mov
pop
rcll
push
mov
sub
push
mov
repz
mov
sbb
notl
dec
test
push
xchg
int3
mov
add
jns
mov
sarl
fmull
pop
dec
adc
cwtl
dec
test
mov
sbb
data16
outsb
iret
push
pop
mov
mov
adcl
jle
rcrb
jo
fildll
adc
jae
andl
push
jbe
or
scas
jb
cwtl
jecxz
push
sub
ret
mov
add
cli
inc
and
nop
icebp
push
fnstcw
inc
test
sbb
daa
popf
data16
es
jmp
addl
movsb
push
lods
mov
mov
mov
adc
mov
mov
push
or
idivb
repnz
sbb
pop
cmp
mov
loope
mov
pop
mov
lock
cld
daa
jmp
jb
add
in
mov
shl
sbb
pop
xor
ljmp
fidivrl
jp
mov
call
xchg
out
pushf
adc
test
std
adc
aad
push
cwtl
mov
cli
cs
ret
adc
cld
in
ljmp
int
test
xor
cmp
jo
cs
pop
mov
mov
scas
call
mov
je
insb
cld
xchg
cwtl
cs
mov
adc
ficoml
adc
pop
adc
and
out
es
dec
xchg
mov
xchg
adc
push
mov
pusha
imul
clc
add
xchg
add
mov
mov
add
mov
cmp
shr
insb
lock
insb
jl
cmp
mov
cs
outsb
aas
sub
push
or
add
jge
ja
push
mov
push
test
cltd
inc
fsubs
inc
jno
pop
shl
ljmp
cld
hlt
cmp
sbb
shrb
mov
movsl
call
nop
lret
jo
cmp
cmp
mov
add
in
inc
mov
jno
xchg
std
ret
cmp
bound
inc
sti
or
jp
outsl
or
dec
xor
jo
int
cmpl
sub
out
sbb
jp
sub
mov
xchg
popa
xor
cld
dec
dec
enter
clc
lret
dec
dec
mov
inc
aad
insb
sub
sbbl
jmp
fnstcw
leave
push
lea
aam
sti
dec
call
bound
scas
clc
mov
in
add
push
clc
lahf
out
jmp
test
inc
add
outsb
dec
scas
sub
aad
mov
lods
neg
icebp
ljmp
je
enter
dec
je
mov
in
adc
mov
dec
cltd
int
mov
lock
and
arpl
iret
jb
add
mov
pop
fldt
or
xchg
mov
add
adc
mov
cltd
pop
dec
xor
je
aam
mov
rorl
or
or
jl
push
in
icebp
test
cli
add
in
xchg
sarl
dec
inc
sub
xor
dec
sbb
mov
mov
mov
mov
sub
jnp
jecxz
and
mov
ljmp
pop
daa
pusha
pop
xor
cmp
cmp
fldenv
sub
cmp
movsb
xchg
in
imul
das
rcll
xor
push
inc
call
hlt
dec
test
inc
xchg
jg
pop
rorl
cmp
in
mov
inc
cmc
jno
sub
outsb
inc
dec
lret
lcall
scas
jle
mov
arpl
jne
testl
add
imul
cli
fbstp
lret
pop
fldcw
push
daa
in
mov
int
mov
adc
movsl
cmp
std
fs
imul
jg
outsb
leave
pop
push
ret
in
add
aad
push
sub
daa
mov
cmp
test
adc
fstp
and
adc
aam
xchg
push
sbb
mov
mov
push
test
sahf
imul
fcmovbe
sahf
mov
insb
push
pop
sbb
jbe
xchg
jnp
jns
daa
vpunpckhwd
mov
fwait
push
mov
pop
popf
gs
mov
mov
imulb
mov
mov
cwtl
sbb
pop
icebp
mov
fnstenv
adc
in
mov
xchg
out
je
xchg
push
xchg
mov
lock
xor
lret
lcall
push
fldcw
test
mov
bnd
or
sub
stos
cmc
jnp
jle
mov
divl
outsb
and
and
scas
pop
imul
mov
mov
push
jbe
dec
movsb
aam
jae
cmp
xor
xchg
sbb
mov
push
lret
inc
mov
mov
js
adc
push
and
push
jle
cltd
or
pusha
or
xchg
stos
push
add
dec
push
inc
push
cld
jbe
adc
mov
pop
cli
xlat
cmp
push
popa
mov
insb
lret
mov
jo
movsl
std
jmp
pop
or
in
mov
dec
mov
jo
sbb
adc
xchg
push
sbb
in
push
cwtl
addr16
sti
jl
sub
ljmp
les
push
bnd
popf
lods
and
jg
cld
mov
inc
cmp
stc
dec
outsb
jl
bound
addl
arpl
dec
js
nop
out
dec
mov
push
xchg
cld
ror
dec
fisubrs
in
test
ds
inc
mov
cli
jg
mov
mov
out
jo
inc
xchg
pop
cmpsl
dec
fcoml
and
jnp
mov
add
clc
and
push
cmp
or
lea
out
mov
in
inc
fdivrl
bound
es
icebp
push
or
test
in
fucomp
xlat
mov
sbb
call
popf
lds
imul
mov
fisubrl
push
rcpps
mov
xlat
add
mov
jg
jmp
mov
test
enter
hlt
sahf
inc
add
f2xm1
int3
jnp
and
adc
das
xchg
mov
pop
icebp
adc
stos
sbb
push
push
test
mov
fptan
sub
ret
or
ds
mov
mov
aad
and
xchg
sub
in
imul
pop
rorl
mov
mov
outsb
outsb
shrl
stos
fstps
repz
cli
stc
mov
ja
pop
lds
inc
mov
sarb
jg
inc
pop
hlt
rcl
test
xchg
lods
jmp
xor
mov
scas
lock
lahf
add
sbb
xor
fdivl
push
dec
add
rcrl
out
pop
incb
push
fwait
ret
cmp
mov
enter
add
bound
jae
cwtl
nop
pop
sub
stc
lret
inc
sub
sub
mov
stos
mov
inc
repz
movl
jmp
sbb
adc
repnz
ds
jnp
vpshlb
ljmp
cmc
fsubrs
fwait
stos
out
or
add
cltd
test
xchg
xor
push
or
xor
ror
insl
inc
test
and
lahf
dec
sbb
xchg
mov
cld
and
cmc
pop
stos
mov
add
add
fwait
clc
lahf
in
repnz
jmp
push
cmp
inc
mov
std
mov
xor
and
push
dec
dec
inc
mov
daa
cld
dec
add
ss
cmp
inc
pop
sbb
mov
inc
mov
cmpsl
fistps
push
jb
jnp
mov
xchg
lods
cmp
test
flds
add
gs
jmp
aas
out
add
add
add
repz
mov
jecxz
daa
cmc
lret
inc
imul
cltd
sub
in
pushf
adc
push
dec
jae
dec
xchg
mov
lahf
mov
xchg
repnz
xorb
fnstcw
fcomps
stos
stc
jg
xchg
rcrb
sar
fdiv
mov
dec
or
shlb
sbb
and
xor
push
xchg
xor
leave
fucomip
mov
pop
mov
mov
dec
in
cmp
sarb
movsb
jo
pop
inc
mov
sbb
dec
cmp
nop
pop
testl
and
dec
js
rorb
push
push
clc
mov
mov
pop
ds
data16
xor
cs
mov
cmp
xchg
xchg
leave
push
xchg
hlt
fstpt
aas
out
add
inc
addr16
and
cs
cmc
sti
lds
mov
sbb
mov
icebp
xor
roll
hlt
in
jmp
sub
shlb
pop
push
repz
cmp
mov
imul
mov
xor
xorb
sub
xchg
test
js
dec
std
cmp
adc
popf
mov
js
inc
inc
std
aas
mov
mov
push
adc
ljmp
mov
out
cmpsl
sbb
subb
mov
popf
std
push
imul
arpl
loop,pt
lds
shlb
add
fnstsw
sbb
fs
lea
andl
dec
mov
das
jns
and
mov
lret
xchg
cmc
je
pushf
and
gs
xor
dec
jge
push
test
cltd
pop
shl
dec
stc
push
pop
outsl
rolb
mov
inc
mov
lahf
in
dec
pop
mov
or
cmpb
inc
test
sub
data16
mov
mov
xchg
pop
xchg
inc
xor
or
lcall
inc
adc
data16
je
or
popa
cwtl
mov
out
pushf
fs
hlt
popa
outsl
out
mov
mov
out
xor
or
xor
sub
pushf
aas
cltd
push
jnp
xor
mov
popa
outsb
or
adc
mov
add
insb
dec
jns
test
sub
lret
pop
das
ret
jle
xchg
xchg
inc
and
pop
std
jne
sbb
sbb
std
jmp
mov
xchg
mov
pop
mov
mov
push
popa
jmp
add
cltd
repnz
adc
jge
pop
cmp
roll
in
nop
sbb
and
pop
cmp
jge
arpl
jb
call
ljmp
aaa
cwtl
push
imul
cmp
hlt
repz
pop
scas
nop
sahf
jbe
cli
ret
adc
pop
adc
icebp
movsl
mov
add
into
or
jecxz
and
mov
shl
cmc
int
sub
je
dec
mov
fcmovu
or
lret
cltd
add
xlat
cmc
mov
or
inc
xor
or
mov
jbe
lock
xchg
insb
sub
push
jg
scas
lods
mov
out
pop
push
sahf
aaa
inc
jg
orl
repz
gs
jae
mov
cmp
inc
lcall
jp
mov
mov
or
xorl
repnz
in
js
lods
and
pushf
ss
push
mov
xchg
popf
mov
negb
inc
adc
stos
stos
js
insb
or
and
mov
notb
dec
mov
fs
sti
and
in
sub
or
scas
call
std
or
fcomip
inc
std
repnz
out
nop
mov
je
rorb
push
xchg
scas
lds
out
scas
orl
insl
xor
cld
lahf
push
addb
mov
iret
xor
adc
out
loopne
aam
out
lods
mov
test
insb
out
jp
and
test
cmp
jne
jecxz
mov
dec
shr
insl
cltd
into
ret
int3
push
jbe
dec
data16
mov
xchg
cmpsl
push
push
insl
dec
popa
jbe
cmp
int
mov
ror
xor
or
mov
adcl
test
in
or
xchg
jno
imul
push
inc
popf
xor
mov
clc
sub
pop
cmpsl
xor
add
pop
mov
dec
or
push
out
ljmp
mov
fwait
movsb
out
stos
adc
clc
dec
ss
in
xor
jecxz
mov
xchg
xor
cmp
dec
push
add
sbb
clc
sbb
xorl
adc
xchg
jbe
or
add
nop
pop
cli
imul
ret
and
dec
fisubrs
inc
push
cmp
es
dec
loopne
scas
xor
pushf
inc
hlt
jecxz
faddl
fcomi
and
add
sbb
insb
call
mov
mov
icebp
cmp
mov
push
stc
shrl
int
outsb
mov
cmp
mov
cwtl
aaa
idivl
sub
xor
fistps
xor
aaa
dec
mov
andb
insb
xchg
pushf
ja
cmp
clc
cmc
sbb
or
mov
xchg
push
sub
pop
int
stos
or
ss
adc
leave
daa
lahf
cmp
xchg
xor
pop
pop
inc
adc
mov
ret
inc
stos
push
adc
outsl
mov
mov
mov
xchg
fsubrs
out
or
cwtl
data16
and
xlat
cmp
aam
and
out
out
push
test
ret
decl
imul
pop
in
xor
shlb
stos
shll
test
sub
lds
push
sbb
jle,pn
gs
scas
dec
js
cmpsl
sahf
push
inc
xor
pop
inc
das
enter
mov
arpl
jmp
subl
gs
jns
mov
mov
icebp
and
xchg
inc
mov
mov
sbb
fnstenv
cmpsl
hlt
sub
mov
dec
daa
aas
xchg
or
mov
pop
push
push
mov
push
cmp
push
jp
into
adc
and
or
xorb
push
out
in
sarl
test
mov
or
sub
inc
daa
data16
and
mov
outsb
pop
cmpsl
scas
stos
xor
xlat
add
setge
rcrl
cld
and
pushf
inc
mov
mov
aas
iret
lcall
sub
mov
psrlw
out
js
jmp
rcr
sbb
jge
sub
push
dec
aad
jl
fists
fdiv
xchg
push
clc
jmp
push
adc
int3
out
add
dec
jne
mov
adc
jno
fnsave
cmpsb
mov
inc
insb
and
xlat
dec
push
jno
sbb
adc
repz
je
dec
or
and
adc
pusha
rcll
mov
cltd
int3
mov
icebp
xchg
repnz
pop
int3
add
push
outsb
adc
nop/reserved
sbb
loop
daa
push
dec
out
push
pop
or
pop
mov
and
arpl
shll
pop
add
ss
out
push
sub
push
jns
lock
movsb
or
stos
xchg
movsb
mov
dec
fiaddl
mov
adc
scas
push
aad
mov
mov
mov
out
sti
pusha
or
xchg
jnp
pop
mov
add
fistl
rcrb
fldt
dec
xor
jne
mov
fildll
insl
in
sti
jne
sbb
aas
mov
lret
cli
stos
mov
jecxz
jns
aaa
pop
and
les
jno
mov
xor
ljmp
in
xor
push
imul
sub
lret
les
or
push
mov
pop
in
shll
aad
or
pop
push
stc
jns
shll
adc
cmc
test
inc
inc
xchg
leave
les
ret
fsts
cli
xor
inc
sbb
adc
je
sbb
fstpl
push
mov
fmul
mov
ljmp
neg
sub
inc
andl
adc
xor
fsubrp
and
xor
fbstp
cmp
mov
loopne
in
cwtl
mov
pop
mov
sub
sti
mov
adc
sub
xchg
jg
and
aam
mov
outsb
mov
ret
mov
es
pop
inc
cmp
mov
sbb
jmp
popa
notb
cli
or
scas
insb
cmc
fmulp
and
mov
cli
int3
jp
sarl
pop
repz
sub
stos
lea
cmp
arpl
rcrl
ss
ja
xor
call
push
outsb
movsl
jo
mov
sub
mov
mov
sahf
jge
push
pop
inc
dec
aam
inc
dec
mov
sti
into
or
jne
out
mov
and
aas
std
pop
std
cwtl
sub
mov
and
push
ja
jmp
fstp
cld
pushf
jne
mov
jns
cli
push
shlb
adc
insb
push
outsb
or
push
lods
mov
xchg
mov
in
or
nop
jo
movsl
pop
lock
push
bound
dec
sub
daa
mov
mov
sar
or
test
fcomip
enter
test
mull
adc
xor
hlt
enter
xchg
in
push
and
dec
fwait
cmp
mov
push
outsl
pop
inc
cmp
ficomps
jg
sbb
test
roll
sbbl
push
inc
xchg
addr16
mov
pushf
pop
lret
int
mov
and
lret
cmp
roll
mov
fcmovu
popa
mov
push
dec
jmp
mov
sar
lock
and
xor
filds
insb
and
scas
mov
cmpsl
xchg
stos
push
lret
jbe
jo
imul
cmpb
dec
xlat
rclb
or
aad
fs
jmp
popf
les
cmpsl
in
push
in
inc
icebp
icebp
filds
loope
sub
adc
cltd
and
cltd
movsb
mov
dec
xchg
mov
jbe
adc
cmp
jp
cwtl
sahf
daa
xor
cltd
inc
std
mov
cmpsb
lock
jb
mov
addr16
jns
repnz
and
inc
fdivrl
jg
outsb
xchg
xchg
mov
test
mov
mov
and
adc
mov
leave
mov
jno
or
imul
or
mov
ljmp
adc
scas
xor
lret
xchg
lock
lret
inc
sub
loope
iret
inc
xor
add
fsubrs
movsl
sub
cmpsb
shl
testl
leave
mov
hlt
mov
push
and
or
popl
ja
stos
andb
sub
movsl
xchg
pop
jl
cld
push
inc
inc
lcall
test
inc
xor
sub
fisttpll
and
add
or
stos
mov
xchg
xchg
sahf
mov
jne
lret
jne
mov
arpl
in
and
push
sarl
lds
out
aam
clc
mov
push
pop
and
andl
fwait
dec
pop
popa
fdivs
xchg
andb
lea
std
pop
neg
and
pusha
stos
jp
and
repz
dec
add
add
pop
sub
cmp
addr16
add
mov
xor
mov
enter
mov
insb
add
push
pop
ret
jecxz
xor
mov
outsb
mov
mov
sbbb
mov
scas
push
adc
add
jne
ds
xchg
ret
je
jns
mov
fcmovnb
js
mov
jp
scas
mov
jae
enter
shll
cld
and
fildl
lock
cmc
popf
dec
jno
push
push
adc
push
sub
jnp
in
lahf
xchg
imul
test
push
inc
jmp
mov
adc
movq
outsb
data16
adc
xor
in
mov
mov
pop
notb
cmove
pop
add
mov
cmp
mov
lods
xor
pop
add
push
bound
into
lea
je
out
xor
leave
push
or
mov
ss
inc
bound
pop
lret
xor
jp
sbb
dec
sbb
sbb
lea
enter
lcall
je
jp
inc
outsb
sub
push
mov
pusha
cmp
jnp
enter
or
xchg
loope
mov
jl
xchg
sbbb
adcl
enter
ljmp
push
nop
movsl
aad
loope
xlat
iret
shr
pop
mov
cli
in
cmp
and
pop
sbb
in
fisubs
and
adc
xor
inc
mov
imul
pop
int3
jmp
xchg
jno
in
orb
nop
dec
xor
mov
or
jecxz
loop
jecxz
fisubrs
add
mov
sbb
xor
test
sub
movsb
xchg
inc
aad
push
cld
fistl
rorl
divl
icebp
mov
mov
cmpsl
leave
sarb
pop
js
leave
in
and
pusha
das
clc
mov
nop
xor
stos
jl
pop
jl
and
cmp
pusha
dec
sbb
aas
mov
cmp
fs
sbb
nop
decl
lds
add
addb
xlat
fucomi
pushf
sub
loope
mov
xchg
mov
add
and
test
xchg
gs
adc
mov
dec
lods
and
push
test
mov
or
add
fsub
cmc
mov
cli
add
sbb
dec
mov
cmp
jbe
ret
jl
inc
jle
pop
test
repnz
aam
repnz
loop
dec
jbe
int3
fcmovbe
jne
ja
nop
add
imul
mov
loopne
dec
leave
inc
fidivrl
add
pop
xor
out
sbb
cmc
loopne
push
mov
in
xor
xor
icebp
scas
add
sub
mov
sub
xor
cld
mov
and
pop
jnp
jle
cmpb
inc
loop
nop
mov
dec
mov
aad
push
adc
aad
shll
fwait
scas
sub
push
adc
leave
jl
jns
fld
movsl
fstl
push
repnz
icebp
adc
mov
ret
popf
mov
daa
loop
mov
or
jae
jbe
mov
xchg
push
cmpsb
pop
adc
mov
int
xor
add
fucomip
jb
push
pushf
xchg
syscall
mov
out
xchg
mov
mov
stc
or
mov
pop
dec
pop
in
hlt
ds
push
mov
or
ja
aaa
pop
and
sbb
sub
jo
sbb
jg
cli
repnz
fadd
push
bound
xor
mov
fs
popa
cmpsl
cmp
push
sub
out
mov
es
jb
sub
insl
ds
leave
fdivl
lahf
xchg
pop
sbb
push
inc
mov
into
adcb
push
lock
jb
inc
sub
jbe
jbe
and
ljmp
jg
call
mov
icebp
and
push
adc
das
out
jno
inc
mov
loop
push
icebp
xlat
int3
mov
out
ret
or
xor
inc
jl
push
sbb
pop
dec
fstl
icebp
pop
mov
and
cs
push
cmp
loop,pt
push
outsb
mov
fs
mov
mov
and
int
pop
in
loope
cs
pusha
xlat
mov
frstor
in
cmp
aam
sets
jbe
push
push
xchg
adc
adc
pop
and
popf
lahf
ret
xor
dec
int
movsb
and
mov
cmp
popf
and
mov
das
xor
popf
inc
xchg
pop
fsubp
push
push
outsb
pop
sbb
push
cmp
xchg
cmp
ljmp
fistps
sbbl
sbb
inc
xor
loope
cld
jnp
outsb
stos
add
jg
inc
lret
aas
aaa
pop
push
adc
dec
mov
enter
mov
into
movsl
cli
cltd
sub
ret
in
subl
dec
push
scas
adc
fcom
dec
int
stos
xor
mov
add
add
cmp
pusha
ss
arpl
cli
xchg
icebp
jecxz
jmp
sub
and
ds
jo
pop
and
enter
inc
xorb
mov
sbb
xchg
cmp
dec
sar
dec
push
mov
xlat
rcrl
lock
cmp
xor
cmp
lcall
push
popa
and
aaa
add
pop
mov
jmp
lea
outsl
mov
fidivs
fucomip
daa
enter
pop
add
shlb
test
mov
sub
mov
imul
xchg
mov
test
bnd
sbb
pusha
pop
sub
add
fists
in
popa
inc
outsb
iret
dec
xor
dec
ror
and
outsl
dec
shrb
mov
xor
jle
cmp
scas
mov
push
mov
pusha
xchg
add
pop
cwtl
pop
cmpsb
repnz
jl
fsubl
rcll
cli
in
js
ja
leave
xchg
out
je
call
leave
dec
ljmp
lcall
adc
ds
sbb
jo
xchg
inc
insb
sub
pusha
and
dec
inc
sarb
rolb
and
jecxz
fmul
push
movsl
lea
out
aam
and
mov
ret
xchg
loope
jle
push
cs
in
cs
sbb
popf
jnp
cmp
and
cwtl
mov
insl
in
ret
in
jno
test
jno
enter
mov
push
xor
test
pop
pop
adc
les
fs
pop
jne
cmp
mov
pushf
btr
jae
adc
jmp
mov
dec
out
dec
dec
inc
fwait
push
jl
in
cmp
add
sarl
out
xchg
sarl
xchg
pop
mov
dec
daa
xor
les
jnp
imul
dec
movsb
sbb
popf
add
xchg
shlb
xlat
and
sub
inc
jge
fdivrs
orb
pop
and
jnp
cli
pop
adc
dec
pop
mov
add
out
adc
dec
js
iret
cmc
adc
inc
hlt
rorl
dec
inc
pushf
sub
dec
cmc
jge
jge
xor
arpl
pop
inc
push
lock
dec
nop
inc
mov
iret
mov
sub
pop
sbb
je
jmp
test
cmpb
ret
xchg
fadd
jnp
add
lret
in
lock
or
cmc
sarl
adc
jg
xor
cmp
mov
cmp
fdiv
jl
pop
outsl
shll
daa
dec
not
dec
repz
lods
push
pop
mov
ljmp
sub
adc
pop
das
jae
add
xor
mov
out
aaa
dec
mov
lods
dec
fchs
xchg
or
iret
or
fidivs
adc
dec
clc
ret
lods
sbb
ret
lahf
cmpsl
shr
jmp
ficoml
lock
add
xlat
loop
mov
jmp
in
or
insb
xchg
and
add
lods
cmp
pop
fdivrl
and
sub
lcall
in
xchg
aas
jecxz
iret
push
outsb
insl
add
gs
or
push
in
pop
xor
jle
out
cmpsl
dec
mov
push
imul
push
cmpsl
dec
mov
insb
xrelease
nop
dec
test
push
add
xor
inc
dec
push
cli
cmp
mov
les
mov
xchg
xor
movsb
pop
mov
pop
insb
mov
enter
sub
stc
adc
push
divl
jns
jge
dec
stos
jo
cmpsb
popa
inc
shl
mov
int3
imull
outsl
ret
dec
xor
mov
and
or
imul
dec
and
stos
ds
xor
and
mov
mov
mov
and
xchg
sub
rorb
sbb
in
adc
mov
sbb
inc
cmp
test
pop
stos
sbb
out
sahf
jp
outsb
xor
dec
loop
hlt
push
cwtl
adc
lock
call
xor
shl
cmp
negl
unpckhps
dec
loopne
aas
es
mov
jns
jl
dec
cmp
mov
cld
adc
ss
orb
sub
ret
out
mov
push
mov
stos
jne
push
sbb
arpl
pop
and
push
ss
cmp
cmp
cs
js
pop
sub
xor
push
add
jmp
pop
sub
cld
incl
pusha
pop
lds
dec
outsl
dec
popf
ss
shlb
int3
push
and
push
cmp
push
and
lcall
notl
arpl
arpl
hlt
mov
mov
bound
jae
lcall
xchg
and
je
cmp
mov
lahf
adc
lea
cs
imul
ret
stos
cmpsl
xor
popf
sbb
or
cld
in
dec
ja
inc
mov
orb
insb
je
mov
jge
mov
pop
aad
xchg
mov
bound
and
ret
shr
call
mov
fsubrl
dec
xchg
ljmp
or
rcrl
push
dec
sbb
out
sahf
xor
ret
xchg
dec
in
mov
push
jl
scas
inc
out
jbe,pt
fs
sbb
inc
mov
stc
inc
popa
je
mov
jecxz
ss
dec
in
insb
mov
stos
mov
dec
cmp
addl
mov
jle
shlb
adc
in
xchg
loope
popf
cltd
insb
mov
insb
shlb
leave
test
lods
aas
stos
mov
int3
pusha
out
es
and
push
lea
cmp
in
xor
cmpsb
rolb
sarl
jo
xor
xor
popf
sbb
stos
ret
xorb
cmp
enter
push
icebp
mov
add
arpl
jle
dec
repnz
push
xor
aaa
jmp
jmp
or
daa
sub
lahf
and
mov
or
arpl
sub
out
lret
pop
data16
repnz
cmpb
xchg
adcb
jl
out
adc
push
push
aas
outsb
fmull
in
add
std
lahf
popf
cli
and
sbb
inc
xchg
mov
sti
pushf
xchg
add
or
sub
dec
xchg
cwtl
lods
inc
push
sbb
push
jl
xchg
subl
lret
and
and
mov
xor
push
and
call
fadd
lret
sbb
sub
or
push
js
cmpsb
xor
inc
in
cmp
mov
push
pop
insl
movsl
mov
rclb
test
sub
loopne
sahf
inc
or
xor
test
into
lods
jns
xor
xlat
sbb
repnz
cwtl
mov
dec
ja
mov
jbe
or
cmpsl
push
push
ret
mov
out
add
adc
daa
testb
inc
enter
aam
mov
clc
push
xlat
lret
and
imul
lods
xor
int
fistps
jecxz
jnp
and
lods
cmp
pop
jmp
dec
sbb
dec
push
decl
ret
inc
inc
mov
pop
inc
inc
push
ret
fnstsw
push
jl
mov
and
sub
jge
inc
or
insb
push
jb
ficoml
pusha
adc
ljmp
cltd
fildll
jge
test
jbe
aam
xor
cwtl
or
inc
mov
dec
add
mov
sbb
pop
and
jmp
mov
pop
pop
adc
xlat
cli
addl
jge
aad
dec
or
mov
leave
dec
test
mov
lahf
addr16
mov
loopne
inc
into
sbbl
out
fwait
xchg
mov
add
jns
icebp
inc
adc
mov
jmp
and
std
enter
inc
jno
sub
lods
daa
adc
cmpsl
cltd
ret
mov
dec
inc
sbb
pop
stos
rcrb
test
add
sub
ret
push
pop
loopne
add
pushw
and
mov
pop
cmp
testl
outsb
cmp
cmpsb
call
outsb
enter
xchg
xchg
inc
dec
ficoms
push
jl
and
and
inc
mov
push
mov
adcl
notl
or
test
fadd
inc
push
xor
fimuls
icebp
xchg
push
push
push
xor
mov
push
push
xor
push
add
fildl
xchg
cmp
xchg
xor
fimuls
inc
mov
sub
push
ljmp
adc
out
inc
rcll
daa
and
adcl
push
out
pushf
mov
popf
inc
pop
or
add
inc
in
outsb
ret
mov
or
or
inc
cmp
sbb
inc
push
aaa
sar
cli
xchg
pop
aam
jnp
sub
xchg
jge
inc
or
xchg
pusha
nop
je
mov
ret
cmp
sub
sbb
mov
dec
imul
push
pop
dec
movsl
stos
int
in
pop
std
int
aaa
test
add
loop
xorl
xor
sbb
push
loop
lret
mov
lret
inc
mov
push
mov
je
mov
sbb
xor
mov
test
scas
inc
in
cmc
scas
aaa
push
shr
idivl
std
dec
pop
add
ds
fidivrl
pop
bnd
lahf
push
rclb
call
insb
mov
add
add
mov
test
mov
icebp
mov
xchg
sbb
xlat
push
dec
into
and
mov
mov
mov
inc
stos
repz
xchg
aad
js
dec
adc
dec
xchg
push
fnstsw
pop
sbbl
xor
lcall
mov
popa
fwait
cmp
insl
mov
add
mov
cmp
icebp
lcall
cmp
fs
push
dec
or
ficomps
stc
loopne
lock
mov
addb
stos
jmp
mov
mov
repz
loopne
lods
xchg
pop
cmp
pop
loopne
out
mov
stc
adc
sbb
cmp
mov
loop
jo
push
sbb
test
inc
imul
pop
dec
push
int3
sti
push
scas
sub
xor
arpl
xlat
adc
jno
mov
nop
fucom
cwtl
pop
test
cltd
enter
inc
in
in
mov
sti
jmp
stos
adc
sarl
ljmp
movsl
fimull
bound
test
jne
adc
loopne
xor
sahf
pushf
mov
mov
mov
mov
inc
cmp
xchg
sahf
pop
pop
nop
into
sbb
jae
pop
sub
arpl
loop
sbbl
in
sbb
out
mov
inc
cmp
repnz
ja
or
cmpsl
pop
std
fstps
imul
add
dec
call
mov
push
adc
cmp
ja
sahf
rclb
lock
or
sbb
out
ret
clc
or
sbb
xlat
scas
or
push
movsb
mov
sbb
and
aas
add
mov
es
pop
popa
and
jecxz
sbb
dec
xchg
mov
cmpsb
lret
adc
dec
aaa
iret
idivl
insl
mov
fsubrs
xlat
adc
icebp
inc
int3
js
ficoml
cmpsb
js
repnz
arpl
adc
iret
xchg
xor
mov
push
sti
sub
jle
push
dec
in
aam
cmp
pushf
dec
int3
inc
pop
push
fs
push
adc
ss
and
shlb
mov
push
cs
into
movsb
jne
sbb
xor
idivb
cmp
mov
lcall
outsb
adc
push
xor
and
lock
mov
sub
mov
in
dec
lret
adc
pop
lret
lods
or
lahf
mov
in
div
push
cmc
nop
pop
pop
adc
addb
shl
sar
cs
xlat
stos
lret
dec
xchg
mov
out
push
rolb
sub
pop
xchg
or
mov
inc
out
xor
idivl
dec
xchg
add
mov
mov
or
xor
add
test
or
mov
push
dec
push
ja
loop
jo
xchg
mov
pop
jecxz
dec
shlb
dec
ja
xor
mov
push
scas
and
fiadds
or
adc
fcoms
cmpsl
or
dec
add
pop
ss
stc
daa
push
push
rcrb
lret
mov
std
push
into
fwait
dec
lea
rorl
adc
or
adc
pop
stos
aam
repz
stc
fidivrs
jb
push
sub
inc
pop
cmp
test
fwait
xchg
xchg
push
and
cmp
mov
dec
outsb
adc
mov
adc
popf
std
lret
fstpl
hlt
cmp
pop
push
inc
adc
sbb
andb
imul
loope
ficomps
stc
out
add
bound
pop
and
clc
xchg
pop
les
xchg
pushf
data16
popf
adc
dec
sbb
in
fstpt
xlat
mov
js
lock
mov
scas
loope
movsb
movzbl
xchg
mov
pop
jbe
test
push
xor
ds
jge
imul
pop
pop
cmp
mov
xorl
je
push
adc
mov
and
push
out
adc
cmp
mov
cltd
in
adc
inc
mov
cmp
ret
rcrb
fisttpll
sbb
push
dec
imul
push
es
push
es
lahf
push
ret
adc
lret
rolb
jl
lea
lret
push
fdivrs
popf
gs
sahf
dec
into
loope
sub
sbb
in
xor
or
mov
pop
fsubp
or
or
out
sti
xor
in
xchg
dec
push
and
jmp
sbb
aam
jg
es
add
dec
mov
push
mov
sub
and
divps
dec
push
ds
mov
add
jmp
aad
cmpsl
or
xor
aad
popa
insl
pop
gs
ds
and
jns
ret
and
add
repnz
mov
inc
stc
sbbl
and
cwtl
or
je
add
push
add
lods
addr16
jno
iretw
daa
jno
bnd
aad
inc
inc
into
dec
inc
xor
stos
fcomps
ljmp
xchg
sub
inc
inc
xchg
mov
leave
or
test
lods
stos
push
cld
loop
mov
mov
push
rorl
mov
or
test
adcb
push
xchg
fidivrl
lods
nop
in
and
mov
rorb
je
lret
pop
fmull
ret
adc
push
sbb
and
dec
inc
xchg
out
push
push
inc
mov
popa
push
sbb
fwait
xchg
cmp
icebp
or
fimull
pop
shrb
fwait
icebp
scas
subb
loopne
mov
iret
cmp
adc
dec
push
fsubrp
leave
push
ror
repnz
pop
xchg
push
lds
call
or
int3
cmp
out
shll
pop
xor
mov
je
das
mov
sbb
call
push
enter
xchg
jb
inc
sahf
lods
data16
push
sub
xchg
push
fmul
outsl
or
jp
sbb
cmp
mov
jge
hlt
adc
fstl
pop
pusha
push
icebp
iret
push
loop
pop
movsb
pop
xchg
repz
je
icebp
mov
push
sbb
f2xm1
pop
arpl
rclb
mov
sub
xchg
dec
cld
xlat
je
hlt
insb
and
xlat
adc
cmp
mov
jns
jne
out
int
fsubs
addr16
mov
movsb
lea
hlt
xchg
cmp
dec
dec
xor
cmc
jo
sbb
fisubrl
dec
cmpb
fwait
loopne
adc
cmp
xchg
js
shlb
insb
test
xchg
xchg
call
jnp
mov
pop
sbb
xor
push
jbe
pop
aas
pop
dec
sub
clc
jp
xor
fldt
sub
sbb
sbb
mov
pop
jmp
pop
adc
and
pop
jns
int3
sub
lea
insl
test
jge
paddb
sarl
xor
out
push
mov
mov
sub
and
imul
mov
push
xchg
insl
pop
pop
test
push
mov
cmp
push
popa
aam
inc
sbb
movsl
mov
aam
and
lea
notl
cmc
fcmovnb
into
mov
mov
cmc
inc
adc
loopne
pop
ud1
insl
scas
mov
push
mov
shlb
sbb
jae
push
int
cwtl
inc
or
in
fstp
fimull
xchg
mov
jmp
jmp
push
popa
repnz
jecxz
sub
cmp
push
stos
outsb
mov
or
cltd
popa
addr16
cmpb
daa
dec
ret
cmpsl
xchg
sbb
dec
lds
inc
dec
stos
mov
cmp
mov
mov
xchg
pushf
es
dec
test
out
pop
and
loope
out
jae
inc
fdivl
sahf
cmpsb
mov
push
and
lret
jnp
sahf
mov
pop
addb
shl
mov
mov
push
fnstcw
xor
enter
fistpl
xor
fdivrp
mov
xlat
pop
inc
dec
jp
lahf
sti
aas
out
loop
daa
and
xchg
and
xchg
inc
mov
mov
mov
adc
xlat
daa
mov
lcall
adc
ret
sub
movsl
outsl
xlat
dec
mov
inc
stos
in
cmc
leave
dec
push
jns
movsb
inc
mov
push
push
pop
daa
jmp
ds
sbb
pop
std
pop
fsts
mov
add
cmp
leave
sub
xor
stos
push
and
pop
sbb
sbb
hlt
pop
adc
fsub
arpl
dec
clc
out
hlt
mov
lahf
aad
inc
cli
inc
sbb
dec
adc
jmp
cmp
pushf
cltd
outsl
cmpsl
cmp
movsl
adc
mov
cmpsb
lods
subb
nop
cli
fcmovne
or
fisubrs
mov
mov
lret
add
or
ja
push
mov
mov
mull
out
das
out
imul
jecxz
in
loopne
push
push
dec
popf
sub
loopne
call
insb
inc
cmp
ror
sbb
faddl
int3
xor
test
sbb
dec
fisubl
push
int
mov
adc
jmp
xchg
mov
jno
pop
mov
clc
hlt
repnz
sbb
cld
es
fwait
popf
push
ds
rol
in
push
mov
xchg
les
repnz
xor
iret
mov
lods
je
jmp
test
add
push
and
lret
stos
pop
push
xchg
pop
in
lods
xor
jecxz
mov
and
and
mov
inc
lods
inc
aam
fdivrl
cmpsl
fcmovnb
jo
xor
mov
jmp
lahf
arpl
pushl
fsubrp
adc
pusha
and
mov
xor
xchg
xor
out
mov
push
or
adc
imul
cwtl
and
cld
dec
enter
lahf
lods
das
fsts
mov
fs
add
fisttpl
xor
lret
add
xor
xor
xor
cli
mov
test
dec
js
or
jb
xchg
movsl
cmc
xchg
and
pop
nop
pop
mov
movsb
fs
pop
subb
jl
andb
xor
jecxz
les
sti
xchg
das
rcrl
sbb
xor
mov
xchg
sbb
scas
xor
add
sub
add
cs
add
xor
lea
cwtl
in
cwtl
mov
sub
je
add
lock
dec
repz
sbbl
xchg
je
xorl
rcl
add
xor
sub
push
xorb
sub
jns
inc
aad
cmc
or
or
add
cmc
xor
repz
shll
cltd
fwait
xchg
jnp
lret
fwait
out
mov
xor
jb
test
push
testl
pop
scas
aas
mov
mov
rclb
lods
push
jno
movsb
mov
data16
lret
pop
jae
shll
cmp
std
mov
jle
jl
sarl
inc
push
outsl
or
jl
cs
xor
bound
push
addr16
adc
ficoml
sub
dec
mov
sbb
insl
and
mov
mov
shr
adc
loop
fildl
inc
leave
in
add
int
xchg
add
lea
add
mov
scas
rclb
aam
add
adc
xor
adc
test
cmp
nop
pop
inc
xor
pushf
mov
mov
jnp
in
movsl
sub
pop
std
cwtl
pop
add
ret
jb,pn
lret
add
pop
sbb
mov
or
ljmp
popf
pop
test
jecxz
jbe
cmp
repz
jg
js
mov
enter
lds
or
cmpsl
inc
stos
testl
inc
jns
test
shlb
dec
push
nop
xlat
pop
xlat
lahf
mov
int3
mulb
mov
std
push
dec
mov
shlb
popa
inc
jb
dec
jle
lds
aam
std
adc
imul
cmp
xchg
push
pop
mov
insl
dec
cmp
in
xor
shlb
add
inc
and
leave
faddl
xchg
cmp
addr16
lea
clc
xchg
cmp
shlb
push
inc
repz
out
cmp
mov
jne
add
fs
dec
mov
insl
adc
xchg
sbb
dec
adc
pop
fsubp
cmpb
hlt
jno
aad
xor
addl
lea
cld
mov
push
imul
dec
dec
out
cmp
add
xchg
pop
stos
fwait
xchg
shrl
mov
xchg
mov
mov
test
mov
sbb
mov
jbe
jg
repnz
in
test
mov
inc
imul
stos
in
push
mov
daa
dec
stc
mov
rclb
jmp
fmuls
jge
mov
imul
stc
pandn
fsin
out
dec
mov
cmp
adc
sub
cmp
mov
ret
aaa
push
andb
ds
movlps
jmp
add
or
push
jno
and
jo
lods
femms
popf
push
sbb
xor
inc
pop
aam
sbb
ror
jbe
sbb
ret
xor
adc
leave
lds
test
mov
out
mov
dec
xor
xchg
xor
mov
xchg
adc
insb
sub
mov
out
mov
cwtl
int
je
jge
ja
cmovnp
cmp
enter
lock
jno
mov
add
mov
sub
adc
sub
xchg
dec
repnz
lds
xor
call
sar
cmp
jno
ret
dec
pop
push
mov
xor
in
mov
xchg
movsl
imul
icebp
or
insb
jecxz
not
sub
dec
mov
xchg
sbb
or
inc
cmp
lret
loope
mov
cmpsl
xor
sbb
push
xchg
cmp
push
je
call
jb
add
push
cs
xchg
jge
mov
dec
out
jmp
add
das
test
jecxz
lcall
test
leave
cmp
dec
xchg
mov
pop
sarb
mov
and
pop
addl
cmpsl
adc
push
in
js
insb
and
bound
rol
jo
int
movsb
in
add
rorl
mov
fs
inc
jecxz
loope
cmp
gs
mov
call
and
loope
rcrl
sbb
xchg
jno
orl
call
popf
push
adc
mov
adc
rorl
rorb
xchg
sub
adc
popf
rclb
adc
cmpsb
push
or
scas
out
js
js
jecxz
jbe
loop
call
push
add
and
sub
pop
mov
pop
shlb
xchg
lea
xchg
push
testb
in
sbb
dec
mov
xchg
cmpsl
stc
sub
jle
cmc
dec
add
jp
insl
cmp
cld
or
mov
or
add
daa
sahf
inc
std
mov
and
jnp
addl
cmpl
imul
and
dec
mov
push
xchg
pop
pop
add
pop
mov
fisubrs
push
dec
sub
pop
push
mov
or
or
lcall
nop
jns
mov
dec
sbb
stos
or
and
imull
xchg
mov
in
shrl
addr16
cli
cmp
scas
jecxz
mov
or
fsubp
enter
gs
cmpsl
test
int
pusha
and
or
or
mov
pop
cmc
filds
ds
cmpsb
mov
inc
cmpsl
push
push
rcr
and
jbe
push
sbb
data16
jmp
xchg
aas
cmc
and
pop
push
push
rcrb
pop
je
mov
xor
or
cmovs
popa
or
mov
hlt
push
in
dec
movsb
rcll
adc
xchg
mov
or
js
or
enter
shrl
xor
mov
out
lea
mov
sbb
les
cli
fbld
push
js
xor
push
rcll
addr16
pushf
punpcklwd
jns
outsb
inc
sbb
sub
lods
insl
push
xor
mov
out
sti
jg
push
pop
repnz
fwait
xchg
mov
push
push
jo
fsubl
xchg
mov
inc
xor
jle
and
inc
xlat
xchg
ljmp
mov
stos
sub
test
das
jge
jns
mov
push
push
push
idivb
int3
pop
movsl
xchg
mov
mov
rol
push
rorb
and
add
addr16
pop
testb
cmp
test
xchg
pop
jg
mov
push
sti
push
push
nop
push
mov
cmpsl
cmpsb
jge
jae
jnp
fstpt
push
imul
stc
xchg
cltd
ret
sarb
out
outsb
shr
lret
inc
mov
jge
push
mov
cmp
leave
scas
dec
mov
js
mov
repnz
mov
xchg
cmc
aam
lods
jne
shrl
xor
pop
iret
test
or
aaa
popa
pop
and
push
daa
or
aaa
pop
push
inc
scas
mov
xchg
repz
lcall
xor
test
cmpsb
lret
out
shl
dec
push
cmp
dec
cs
mov
lock
mov
adc
and
aas
xor
fisubrs
pop
jg
jmp
pop
and
mov
jno
xchg
mov
pop
scas
xchg
sbb
insb
jb
sub
mov
sar
out
xchg
xchg
and
icebp
or
loop
test
loope
lahf
lock
arpl
mov
nop
add
xchg
popf
fisubrl
cltd
dec
aad
xor
adc
jne
jmp
jmp
jbe
or
xchg
mov
inc
loop
mov
xchg
mov
pop
mov
cli
faddl
xchg
dec
lret
adc
jmp
mov
sbb
adc
cltd
in
in
dec
cld
fwait
mov
add
and
cmp
xchg
in
jae
dec
xor
mov
int
lods
dec
outsl
push
xor
imul
gs
insl
in
bound
incb
imulb
pop
dec
and
shrl
and
jp
mov
pop
das
mov
roll
adc
and
jle
add
fs
inc
mov
nop
in
adc
jge
and
ret
pop
bound
insb
imul
mov
mov
das
aam
mov
lods
mov
ss
xchg
cld
xchg
mov
inc
adc
loope
xchg
xor
or
cmp
cmp
ljmp
sub
movsl
jbe
push
ror
in
add
cmp
push
add
or
push
pop
xchg
sub
pop
xchg
mov
sub
or
rcrl
test
mov
movsl
adc
fistpl
mov
mov
orl
fcmove
inc
mov
sub
jge
xchg
pop
lds
lret
fwait
xchg
push
and
push
xchg
mov
inc
cmpsl
scas
jl
dec
jb
ljmp
ffree
adcl
jge
fisttpl
jmp
jg
pusha
or
pushf
xor
xchg
gs
mov
les
sahf
aas
dec
sub
hlt
pop
dec
fnstcw
xchg
inc
add
outsl
pusha
aas
in
scas
popa
sbb
in
lods
stc
mov
mov
add
push
out
aaa
stos
add
mov
dec
mov
mov
and
pop
push
adc
and
push
dec
sub
in
fistpll
inc
jnp
xor
cmp
lret
fisubl
mov
es
fwait
out
sbb
mov
les
push
inc
push
and
xor
jg
jo
std
ret
sti
mov
or
mov
mov
jo
ja
adc
es
jnp
movsb
push
push
cmp
jl
outsl
jno
in
int3
inc
sbb
push
cmp
mov
push
jo,pt
cmp
fwait
inc
or
js
jne
mov
or
test
ret
arpl
mov
leave
mov
mov
adc
push
xor
inc
xchg
cwtl
shrl
imul
cmc
inc
outsl
mov
sahf
int
mov
test
mov
mov
sar
dec
mov
aam
mov
decb
cmp
xchg
cmpsb
inc
filds
in
jnp
pop
cwtl
mov
scas
and
aaa
data16
bound
push
mov
mov
shlb
push
into
cmpsl
jb
ja
or
dec
cltd
int3
mov
dec
pusha
dec
in
xorl
and
imul
aaa
or
push
and
andb
outsl
mov
dec
pop
stc
cmp
les
jo
jmp
lods
test
fcomps
mov
inc
stos
jne
daa
test
aas
lock
xlat
ljmp
cmp
dec
xor
pop
lock
or
sarb
cwtl
sub
movsl
jbe
inc
aaa
sub
jbe
mov
jp
arpl
mov
pop
sahf
in
rcr
add
cmc
xchg
aaa
int3
in
dec
jecxz
add
ror
subl
int
out
arpl
cmp
inc
cmp
shll
cmpl
dec
cld
int3
add
data16
out
mov
xchg
scas
jns
gs
scas
scas
out
jb
or
or
inc
rclb
add
call
call
ret
mov
mov
pop
js
pop
lcall
sbb
jne
enter
shlb
mov
sbb
mov
sbbl
add
pop
add
inc
rorb
xor
inc
mov
aad
xor
or
adc
repnz
enter
in
lea
cmp
loop
outsl
lods
inc
mov
jg
insb
lcall
pop
test
insb
or
cld
mov
pop
aam
sub
sbb
xor
inc
sub
stos
std
test
loope
jge
stc
cmc
fstpt
lds
in
leave
push
xor
add
and
push
scas
xchg
lcall
insb
pop
mov
push
mov
inc
lcall
mov
fs
cmp
push
scas
inc
xor
imul
arpl
test
dec
sbb
mov
clc
mov
mov
add
imul
add
fstpt
fninit
les
mov
js
out
addl
xchg
dec
cmp
fsubrs
mov
adc
popa
leave
xor
jno
inc
cwtl
lods
loopne
cmp
mov
and
lock
inc
pushl
bound
xor
popa
or
cmp
dec
and
xchg
sbb
aad
nop
cmp
repnz
sahf
sarl
shr
aam
adc
dec
sti
aaa
andl
in
jp
inc
pop
adcb
inc
das
and
jecxz
lods
loopne
ret
jle
push
lcall
lret
mov
push
sbb
xchg
addr16
inc
cltd
lcall
jo
adc
in
push
sbb
push
sub
ficomps
mov
xorl
adc
shl
dec
jbe
lds
loopne
cmp
cmp
aas
mov
sarb
sub
mov
cmpsl
insb
subb
pop
repnz
jge
hlt
push
jmp
adc
push
adcl
test
neg
popf
and
rol
sbb
shrl
ja
or
mov
nop
inc
xchg
mov
lea
out
mov
xchg
lock
pushf
mov
popa
pop
lods
subl
dec
pop
imul
imul
fcmovnbe
sub
popf
xor
inc
int
in
xlat
add
cmp
pop
jb
ljmp
push
dec
xchg
push
and
mov
jecxz
jbe
jnp
lret
dec
dec
and
cmpsb
mov
test
lock
adc
push
xor
jl
iret
mov
add
je
loop
xchg
sbb
sbbl
mov
jecxz
and
jb
pusha
mov
mull
mov
push
aaa
aad
or
scas
add
imul
inc
popa
nop
lahf
enter
xchg
mov
push
filds
mul
cmc
xchg
shlb
lret
xor
loopne
mov
mov
jno
mov
xchg
lods
jnp
mov
insb
mov
ljmp
outsb
mov
aam
adc
or
ret
sahf
sub
fstl
cwtl
mov
mov
in
sbb
ds
fidivrl
or
sbb
rcrb
dec
stos
daa
mov
aaa
lods
add
fistl
test
hlt
and
jbe
mov
mov
cmp
and
stc
std
adc
adc
mov
repnz
sub
jne
test
push
popl
sbb
jo
cmpsl
loop
push
cmp
jmp
sub
divl
cmpl
rcll
sub
push
out
cs
icebp
xorb
sub
sbb
cmpsb
mov
cmp
imull
sbb
fcomps
cmp
mov
fbstp
scas
inc
pop
pushf
jae
jbe
mov
lahf
push
inc
cmp
test
ret
mov
cmp
shrb
leave
jp
aas
mov
gs
sti
jecxz
dec
inc
mov
mov
shll
xchg
push
push
loop
cld
xchg
adc
lock
mov
ret
cmpsb
aas
les
dec
add
sbb
add
addr16
adc
mov
dec
aaa
lods
mov
push
sub
xchg
sbb
mov
outsb
push
push
rcll
insl
cld
gs
aad
or
pop
out
out
les
mov
sti
jge
or
popa
outsb
mov
mov
push
ljmp
jl
mov
out
inc
inc
sub
fmull
scas
pop
vorps
cmp
add
or
insb
adc
mov
into
sub
adc
xor
or
loopne
mov
scas
iret
pop
lahf
jecxz
push
dec
mov
lods
fistps
les
pop
inc
push
imul
out
in
jecxz
insb
jne
jnp
je
fxch
cmp
mov
paddsw
fs
cli
inc
sub
push
popa
loope
repz
jecxz
mov
dec
nop
lcall
sbb
inc
mov
sarb
xchg
jae
mov
mov
rcll
lcall
lahf
stos
xchg
stos
push
inc
fistpll
sbb
sar
or
jmp
push
ficoms
iret
movl
adc
fcmove
or
fs
push
pop
mov
push
sbb
push
xlat
and
jo
xchg
sarl
pop
inc
add
cmp
xchg
cltd
inc
cmpb
sub
addb
dec
xor
lock
jp
sbb
movsl
jne
jnp
clc
adc
or
dec
mov
divl
cmp
sub
push
fcmovne
lcall
mov
mov
adc
and
lea
outsb
sbb
lret
fcomps
pushf
mov
xchg
out
out
ret
loope
call
sti
inc
mov
insb
add
mov
and
pop
jecxz
pop
push
aaa
fnstcw
aas
sub
push
mov
js
push
mov
xor
inc
roll
mov
jne
shlb
fmull
insb
pop
push
aam
fidivl
mov
hlt
imul
and
leave
mov
aam
loope
mov
add
data16
fldenv
ljmp
jno
jge
repnz
mov
sub
xchg
divl
gs
or
sahf
mov
mov
dec
push
jp
xchg
neg
adc
insl
add
int
push
shrl
mov
int3
pop
push
loopne
dec
nop
jb
mov
pop
xchg
mov
and
ds
gs
aad
mov
sbb
sbb
out
es
lret
cld
mov
ss
and
ljmp
mov
test
mov
lods
jecxz
imul
dec
lea
or
or
cli
daa
mov
dec
xor
add
jno
mov
aam
cld
or
pop
add
mov
sbb
lcall
das
shlb
push
pop
gs
fstpt
mov
mov
and
mov
or
xchg
in
and
and
jmp
aaa
dec
out
into
sub
and
xchg
sub
loope
jnp
pop
lock
lret
pop
movsl
xlat
and
sbb
clc
and
cwtl
add
testb
mov
out
cmp
inc
mov
mov
aaa
movsb
cmp
lea
and
lods
std
push
test
cli
lcall
cs
add
push
pop
imul
adc
lahf
incl
mov
cmpsb
mov
in
pop
sbb
fsubr
and
out
jbe
pop
xor
lea
dec
scas
jg
or
repnz
cld
cmp
cltd
adcl
mov
out
sub
xlat
jg
cmpsb
cmp
cli
loopne
nop
mov
lcall
cmp
in
stos
xlat
shrb
mov
mov
je
in
jmp
aam
pushf
mov
mov
dec
cld
pushf
xchg
dec
in
push
outsb
add
mov
outsl
cmp
movsb
or
dec
pop
repnz
adc
jnp
cmc
out
addr16
pop
addr16
xor
pop
cwtl
in
mov
adc
dec
inc
outsb
add
ss
dec
into
push
xchg
int3
sub
dec
shr
and
out
mov
push
inc
or
adc
aaa
dec
xor
in
adc
or
les
je
pop
sbb
mov
push
ret
les
xchg
leave
in
test
repz
push
dec
fstpt
aaa
xlat
push
movsl
out
and
dec
mov
pcmpgtd
pop
sub
sbbb
aaa
adc
rolb
pop
push
cltd
nop
jge
fcomip
cmc
pop
hlt
inc
in
test
out
fidivs
shrl
mov
cmp
dec
fcomps
out
cmc
push
xor
aas
or
or
adc
movsl
cli
push
push
add
shrb
or
fcomps
out
mov
jl
out
jp
push
insl
mov
call
push
dec
jecxz
sub
add
frstor
fildll
inc
dec
cmc
and
pop
push
push
cmp
pop
loope
mov
out
push
push
mov
mov
mov
mov
push
out
cli
jne
not
ret
popa
or
out
xor
cwtl
pop
jbe
mov
test
in
xchg
mov
or
mov
test
shl
cmp
rcl
fidivrs
sub
ja
xlat
outsb
fisttps
popa
mov
pop
dec
fs
sbb
xlat
push
aam
punpckldq
dec
clc
jl
push
and
cmp
jo
arpl
jge
mov
xchg
adc
and
pushf
rorl
aaa
shll
es
xchg
and
jmp
iret
and
test
pop
flds
inc
mov
mov
nop
and
stos
and
addl
cmp
bound
inc
sbb
pop
sub
pop
out
test
xchg
jns
jle
insb
cmpsl
jo
or
xor
sahf
es
sahf
mov
xchg
mov
lods
dec
jns
sbb
in
stos
lahf
aaa
outsl
push
xchg
bound
pop
rolb
mov
inc
jmp
and
imul
jge
filds
mov
cmc
sbb
mov
mov
repnz
cli
mov
cmc
movsb
pop
sbb
mov
repz
rcrb
rcll
mov
push
aaa
movsl
imul
inc
push
rorl
adc
xlat
ffree
pusha
cmc
or
cwtl
xchg
inc
daa
mulb
add
int
mov
out
test
mov
mov
inc
mov
mov
fs
mov
jae
mov
in
insl
push
stos
mov
mov
repnz
cld
cli
cmpxchg
cmpsb
lcall
xorl
fcomps
lret
cmp
fs
mov
dec
cmc
call
out
jno
mov
sub
roll
in
jbe
push
mov
mov
fucomi
test
mov
lea
and
sub
shrb
mov
mov
js
xchg
ds
inc
loop
jo
inc
in
inc
mov
cmp
loope
dec
clc
xor
mov
xor
out
jo
push
cmc
pop
mov
pop
popf
cmp
or
adc
std
xor
sub
mov
gs
out
xor
xor
or
adc
cs
ret
push
lds
ss
lods
mov
adc
pop
mov
xor
aam
mov
jmp
xorl
add
xchg
pusha
cmp
sbb
sbb
mov
clc
aad
movsl
icebp
lea
inc
sub
ljmp
mov
fidivrs
lods
rcrl
push
or
and
xor
outsb
cmp
outsb
xchg
cmpsl
jmp
fmul
sqrtps
sbb
ljmp
mov
mov
dec
xlat
dec
fs
dec
addb
les
fists
cltd
dec
xchg
xchg
push
mov
fidivs
xlat
xor
dec
pop
mov
inc
push
fldt
fbld
add
fimull
sbb
pop
jbe
sub
mov
xor
sahf
sbb
nop
sub
orb
add
inc
sbb
test
stc
fstpt
je
jne
rcrl
lret
push
test
push
rcl
adc
daa
sbb
jle
add
lcall
mov
dec
in
xchg
enter
sbb
jl
pop
mov
movsl
mov
xchg
fcmove
std
inc
sbb
xchg
mov
sbb
lret
aam
xlat
push
or
add
add
mov
and
sub
add
push
add
cmc
adc
add
mov
cmp
mov
pop
movsl
scas
pop
pop
sarl
push
outsb
mov
ss
cmp
xchg
and
in
cmp
outsl
cwtl
lret
push
pushf
cltd
pop
jbe
push
call
imul
pop
iret
xchg
fstps
xorps
and
and
mov
jbe
xor
jle
lret
jne
stos
mov
xor
movsl
inc
or
in
addr16
xor
xchg
idivl
mov
ljmp
pop
add
cltd
lcall
dec
rcrb
cmp
adc
add
bound
fs
popa
jge
xor
xor
fstpl
mov
sti
loop
dec
int
sbbb
mov
andb
cmp
mov
sbb
xor
das
cmpsb
sub
outsl
and
dec
inc
lret
sub
shl
and
mov
shrl
xchg
and
sub
fcmovne
out
jle
jecxz
xor
les
or
test
mov
mov
mov
push
jecxz
cld
das
adc
addr16
push
cmp
jns
aaa
mov
xchg
inc
outsl
addl
push
mov
xchg
cmpsl
mov
pop
in
int3
into
enter
lret
inc
movsb
test
adc
xchg
icebp
jo
add
cmp
test
sub
int
lock
fists
jg
push
fidivl
aad
lret
jmp
or
test
jnp
jecxz
popa
in
cld
mov
mov
cld
pop
dec
xchg
mull
sbb
cltd
adc
mov
and
sbb
popf
nop
movsl
cmpsl
mov
sub
insl
cli
adc
aaa
inc
les
movsl
cmp
lods
in
dec
pop
inc
add
xor
mov
cmp
popf
jl
out
std
les
or
in
aam
ret
or
shl
mov
loopne
dec
nop
stos
mov
push
mov
outsl
jle
jns
push
fld
lret
dec
xor
jmp
xchg
aas
incb
cmpsb
sbb
sbb
call
inc
xor
fs
sahf
inc
pop
fnstsw
cld
dec
jno
ret
lock
ficoml
adc
nop
xchg
jno
int
cmp
pop
fcompl
xor
xorl
or
cmpsb
sbb
popa
stos
push
lret
outsb
or
jmp
inc
into
dec
frstor
add
stos
and
fildl
or
in
lret
mov
xor
xlat
es
pushl
dec
enter
xchg
cmp
pushf
dec
inc
mov
repnz
pop
leave
aaa
cmp
in
fisttpll
xor
lea
push
lea
add
imulb
push
int
or
popa
sbb
or
adc
insl
jle
fldenv
sub
roll
sahf
mov
inc
jge
fstpl
cmp
xor
or
and
xchg
scas
jmp
out
stc
inc
fucom
dec
repz
pop
jmp
enter
dec
inc
xor
cmp
pop
jge
mov
adc
sbb
or
insb
sbb
xor
repz
adc
adc
mov
xchg
ret
add
out
addb
fdivrl
pop
and
clc
pop
test
mov
fidivrl
cmp
and
and
adc
pop
jg
fidivs
mov
pusha
add
mov
out
jg
jae
fistpl
repnz
fcompl
push
mov
lds
stc
jmp
scas
subb
sbb
push
cmp
xchg
ds
push
sahf
leave
stos
mov
add
jmp
xlat
arpl
mov
rorl
inc
sbb
pusha
ret
pop
icebp
movsb
lds
ljmp
sub
xor
das
cmp
cltd
push
int
mov
mov
out
add
xor
fs
cmp
adc
xor
cmp
mov
fs
in
xlat
je
inc
ds
pop
sub
sub
lods
cmp
ret
ljmp
and
pop
jl
mov
add
adc
imul
sti
dec
inc
mov
push
leave
stc
jge
in
adc
loope
test
sbb
push
or
cmpsb
fs
cmp
in
xlat
addr16
xchg
cli
mov
push
jle
pop
scas
outsb
push
lock
mov
fnstcw
call
lret
cmp
test
rcr
mov
fs
push
sbb
sbb
movsl
push
int3
add
enter
loope
mov
and
out
pop
sub
and
imul
push
sahf
or
ret
into
sbb
std
sub
fstpt
gs
xchg
cs
inc
lret
lods
loop
enter
mov
cmp
inc
int
mov
jg
sub
and
pop
mov
pop
or
andb
pop
insb
jo
add
and
mov
int
push
repnz
flds
pop
imul
xchg
out
rcrb
int3
adc
jno
out
sbb
sub
mov
shlb
mov
ret
sbb
test
lods
sub
jb
and
in
fs
xchg
inc
js
jge
rclb
and
dec
pushf
fists
mov
jp
add
jo
cmpsb
icebp
out
ret
mov
adc
lahf
inc
cli
int3
daa
aaa
xchg
data16
icebp
and
out
sub
iret
adc
aaa
pop
mov
cmp
jnp
mov
adc
xor
subb
bound
pop
daa
je
mov
inc
jmp
jmp
push
cmp
pop
cmpb
cmc
add
cltd
and
imul
leave
insb
insb
xchg
out
lret
lahf
or
jl
gs
adc
xchg
pop
cmpsb
xchg
clc
lock
xor
cmp
data16
sahf
adc
sub
ret
add
sub
ja
out
mov
push
cmpsb
mov
or
sub
add
push
pop
cmp
or
rorb
sti
or
fstpt
dec
xor
mov
jae
dec
adcb
dec
adc
repnz
out
repz
popa
arpl
cli
pop
and
negb
cmp
add
mov
jno
push
lods
das
pop
lds
mov
stos
mov
je
add
push
jp
andl
jo
call
mov
cli
andl
pop
add
sub
mov
cmp
nop
rolb
xchg
mov
fildl
xchg
aam
inc
pop
mov
adc
mov
pop
xchg
in
xchg
fnsave
xchg
imul
xor
mov
js
cmp
cmp
mov
or
lahf
mov
dec
mov
test
mov
cmp
jl
sub
jae
pop
mov
cmp
mov
cwtl
inc
mov
outsl
jno
into
mov
jg
cmp
jg
leave
rcr
mov
mov
roll
shrb
mov
hlt
insl
add
xchg
and
clc
cmp
loopne
lock
ficomps
mov
xchg
jnp,pn
sub
stc
and
inc
sbb
push
sub
lock
rorl
and
sub
ljmp
hlt
mov
xor
mov
adc
mov
frstor
in
jo
and
cmp
mov
add
pop
leave
movsb
sar
lahf
pushf
scas
cwtl
out
dec
aaa
jns
inc
js
sub
adc
in
in
aam
ret
icebp
stos
inc
ror
ret
shlb
call
mov
or
shrl
bound
arpl
xor
adc
dec
inc
add
jb
fmull
mov
movsb
cltd
mov
mov
xor
stos
xor
das
nop
fdivl
stc
adc
test
xor
cmpsb
add
mov
xorb
stos
jp
add
sbb
fsubs
in
ds
cmp
fstpl
xor
pop
xor
fsubs
lds
sti
mov
lds
pop
cmpb
dec
aaa
xlat
push
mull
test
or
daa
shlb
sub
ret
mov
gs
inc
test
push
int
std
inc
lds
lds
notl
dec
lahf
inc
in
insb
ds
nop
rorl
jmp
xor
daa
cmp
sahf
cld
insb
or
fisubs
aam
loope
das
xchg
sti
nop
fs
enter
mov
ficoms
pop
pusha
hlt
into
loop
mov
pop
sub
jl
jge
and
pop
imul
pop
mov
js
inc
lahf
inc
aaa
mulb
push
jo
cwtl
adc
inc
adc
fnstcw
fdivp
sub
mov
mov
add
fiadds
inc
mov
in
lahf
and
in
rorl
aam
sbb
std
in
xchg
cltd
or
daa
or
dec
pop
mov
mov
mov
aad
mov
xor
push
mov
lds
fistps
arpl
mov
das
nop
loopne
lret
mov
add
mov
mov
mov
lods
pop
jecxz
in
andb
cmc
and
sub
add
lcall
fmuls
daa
sub
es
cmp
movsl
nop
dec
popa
cwtl
popf
fsubl
xchg
xor
cmp
nop
fmuls
mov
test
or
xchg
fimull
loop
jo
cmp
adc
sarl
add
mov
pusha
jno
jo
xor
inc
out
andb
imull
mov
std
xor
push
or
aam
inc
in
out
cwtl
popa
mov
adc
ret
clc
mov
adc
jmp
test
pop
push
inc
inc
stos
mov
adc
jne
fxch
jl
test
jecxz
jbe
out
pushl
punpckldq
adc
frstor
push
xor
cmc
lret
out
mov
lahf
insb
mov
adc
fcmovne
mov
test
invd
jle
pop
std
jnp
sub
lock
push
sti
aas
xor
sbb
shrl
push
sub
push
mov
sbb
lahf
xor
imul
mov
pop
xor
adc
loop
pop
adc
pop
sbb
push
in
ds
into
bswap
loope
shll
cs
xor
call
sub
sti
cmp
data16
cld
pop
or
push
add
test
jl
xor
mov
inc
fs
jge
fildll
dec
jb
arpl
jae
ja
js
ja
or
cmc
cmp
fsubrl
mov
mov
xchg
xchg
jo
add
fsubs
aaa
pop
xor
in
add
scas
mov
out
orb
lock
mov
sbb
lret
int
rol
jle
addr16
push
mov
cmp
mov
aas
movsl
arpl
push
ja
dec
cmp
sbb
notb
leave
addr16
pop
xchg
mov
dec
fnstenv
cwtl
aad
aam
add
movsb
mov
add
int
fnstenv
filds
push
jg
je
mov
fidivrl
hlt
cmp
sbb
stos
fstpl
fimuls
adcb
sub
test
jo
xchg
out
push
loopne
mov
fdivrl
mov
mov
movsb
outsl
or
rcl
lcall
int3
sub
mov
adc
adc
cmpsb
jns
sbb
xlat
mov
mov
pop
sti
and
and
dec
out
int
xchg
sbb
jecxz
fldt
cltd
mov
add
js
and
test
test
lret
lret
int
sbb
fcoms
push
xchg
imul
push
jge
repnz
arpl
mov
mov
sqrtps
inc
cld
adc
neg
jb
mov
daa
add
jae
and
sub
cmp
mov
add
movsb
adc
andb
dec
das
adc
inc
and
jge
mov
mov
daa
mov
pop
ljmp
mov
push
mov
jecxz
add
mov
repnz
ret
pop
mov
sarl
adc
pop
push
aas
mov
ficoms
inc
movsb
push
fs
scas
jle
mov
inc
les
nop
cmp
sarb
or
leave
xor
mov
stos
fs
add
cli
notl
push
push
jno
out
inc
cld
cwtl
add
cmovne
or
into
je
cli
mov
dec
bound
roll
mov
imul
pop
sbb
push
inc
fistpll
cmpb
dec
xlat
adc
ds
mov
mov
mov
ljmp
jb
sub
test
fwait
test
xchg
dec
adc
pop
lahf
xchg
loope
xchg
mov
cmp
cmp
mov
mov
mov
jnp
icebp
je
fs
scas
cmp
aas
mov
push
add
dec
inc
sbb
jl
xor
adc
mov
mov
dec
sub
popa
sub
hlt
and
xor
or
xor
adc
arpl
push
adc
sbb
push
xor
push
je
jmp
dec
imul
daa
pop
lcall
loop
push
inc
xchg
dec
jmp
mov
dec
scas
lcall
gs
repnz
pop
mov
xor
mov
sub
aas
inc
jns
adc
insb
xchg
mov
inc
pop
push
xchg
add
jmp
ss
in
std
fcmovb
stos
movsl
dec
insl
pop
push
cmpsl
inc
push
js
andb
or
sub
popf
rep
daa
std
daa
inc
and
ret
and
rcrl
stos
arpl
inc
push
dec
pushf
ja
adc
cmp
and
mov
aas
out
shrb
xchg
rcrl
nop
aam
mov
sbb
fists
push
or
loop
push
ljmp
insb
pop
mov
mov
dec
inc
es
xor
cs
shrl
xor
mov
pop
mov
cltd
mov
cmc
fs
mov
mov
xchg
repz
adc
jne
loope
mov
aaa
ljmp
adcb
add
aaa
adc
and
sahf
ja
subb
lahf
pop
jg
mov
ret
mov
mov
mov
xorl
stos
stos
or
fcompl
scas
out
mov
or
mov
fiaddl
std
jg
push
sub
mov
in
jb
mov
jge
dec
shll
vpcmpgtb
mov
insl
sbb
jno
out
xchg
pop
in
pop
mov
sbb
lds
enter
sarl
adc
les
xchg
sbb
mov
shll
js
popf
or
aad
adc
insl
pop
loope
dec
pushf
sbb
or
mov
int
xchg
add
and
pop
xchg
int3
xor
inc
andl
sbb
dec
push
lods
test
addr16
rcl
clc
push
xor
add
imul
xchg
dec
xor
sarl
cmp
adc
pop
inc
subb
in
clc
xchg
sbb
lcall
das
sub
das
xor
scas
push
scas
test
push
rolb
cmp
jle
pop
jmp
lret
pop
roll
add
out
test
in
ds
xchg
movsl
cmpsl
movsb
mov
mov
divb
mov
scas
push
mov
mov
iret
cmpsl
in
mov
dec
daa
cli
xchg
hlt
scas
js
jp
outsb
xor
jg
mov
loop
lcall
in
mov
mov
add
jecxz
push
movsb
pop
in
ljmp
cmpsb
or
popf
mov
inc
cmp
mov
jmp
jg
jge
xor
jl
mov
fistps
popf
inc
into
mov
mov
push
push
dec
push
or
cmpsl
loopne
mov
adc
cli
iret
push
repnz
cs
lret
lds
cltd
mov
push
pop
je
sub
mov
cmp
adc
jecxz
stos
mov
jb
ret
push
fsubrl
jb
sarl
arpl
repnz
mov
arpl
mov
loop
push
rcl
add
jns
je
add
xchg
stos
jl
mov
inc
pop
sbb
dec
repz
mov
fwait
adcl
out
add
lods
push
cmpsl
ret
dec
xchg
sbb
stos
xchg
shll
jmp
pop
pop
adc
sahf
mov
stc
shlb
sar
and
movsl
aad
adc
jmp
fs
pop
mov
out
leave
xor
or
int3
div
call
pop
sti
cmp
jge
sbb
xchg
into
cmp
imulb
int
or
shrb
ror
mov
adc
in
jmp
popf
lods
jp
insb
xor
lds
push
loop
cmp
movsb
push
mov
xchg
sti
addb
or
dec
sahf
enter
xchg
lea
and
xor
pop
and
adc
cs
cmp
mov
addr16
pop
cmp
pop
sti
jmp
sbb
pop
in
pop
sub
pop
arpl
scas
aas
jl
stos
and
xchg
dec
mov
sti
sahf
push
js
jo
js
pop
daa
pushf
pop
push
mov
adc
xchg
xor
mov
filds
inc
cli
sbb
push
dec
pop
andb
inc
inc
mov
adc
inc
push
or
stos
dec
xlat
pop
sbb
lea
lds
inc
inc
std
push
adc
mov
xchg
mov
dec
pop
rorb
sub
sub
scas
push
xor
pop
pop
xor
xor
push
popf
lods
leave
testl
sub
or
aad
inc
fldenv
pop
cld
mov
ss
jns
fwait
out
js
stos
sti
cmp
add
call
sbb
adc
cli
inc
fwait
movsb
cld
xchg
dec
fs
icebp
push
pop
lret
mov
pop
push
aam
and
adc
aam
js
xor
or
mov
xor
jecxz
xchg
outsb
sarb
adc
test
mov
pop
sti
in
bound
mov
cmp
cmp
aas
sarl
call
push
pop
repnz
push
sbb
jp
jge
mov
es
xchg
pop
mov
cmp
push
and
rorb
pop
push
cmpsb
repnz
mov
pop
addr16
fsubl
jge
adc
and
sub
gs
shlb
test
adc
sub
dec
sub
pop
stos
pop
jp
pop
and
push
fdivrs
fdiv
mov
cmp
push
pop
xor
xor
sub
xchg
fmull
loope
scas
jae
test
sahf
sub
jmp
fdivs
test
pop
daa
mov
leave
lcall
mov
add
lcall
cld
jmp
cmp
xor
outsl
sub
leave
mov
std
clc
cmp
cmp
test
outsl
inc
rorb
popa
jle
loop
aas
add
in
inc
mov
enter
adc
fistpll
or
xchg
call
cmpb
push
mov
mov
dec
les
push
adc
mov
addr16
paddsb
and
push
lds
or
shrb
mov
pusha
or
aad
test
lcall
leave
std
mov
insb
inc
pop
fst
je
push
dec
popf
pop
mov
cmpsl
mov
mov
lcall
and
add
pop
stos
add
daa
sub
mov
pop
xchg
ret
mov
xchg
push
xor
aas
dec
pop
dec
or
cld
inc
mov
xchg
sahf
rcl
push
add
sti
test
mov
test
data16
mov
nop
dec
into
jecxz
jbe
addr16
mov
frstor
shll
or
cmp
lret
pusha
cmp
mov
adc
roll
mov
mov
mov
dec
test
xor
jo
dec
call
ss
pop
std
ret
jbe
cltd
pop
std
rcll
cld
and
pop
push
pop
sub
lods
sahf
mov
bound
repz
mov
push
push
xor
jmp
mov
and
push
mov
and
je
loopne
fsubr
mov
bswap
push
cli
dec
pop
xchg
sti
xchg
stos
fcompp
and
lods
ds
scas
jle
movsb
pop
lods
mov
arpl
ljmp
fstpt
add
nop
or
pop
mov
out
clc
in
jo
loopne
popa
cmp
sbb
and
iret
das
push
dec
mov
add
scas
xchg
push
push
add
inc
mov
in
outsl
inc
mov
dec
cli
mov
adc
addr16
pop
push
mov
mov
rolb
cmp
push
loopne
fs
rol
add
lcall
pop
jb
add
ficoml
add
cltd
outsb
test
aam
test
cwtl
pop
dec
sbb
fsubrl
gs
mov
inc
ss
les
add
xor
jle
add
mov
mov
cmpb
ficoml
cmp
xor
popa
shll
cli
dec
or
jo
cmp
push
test
outsl
and
dec
lret
lahf
imul
jmp
mov
fcoms
sub
xchg
roll
mov
emms
xchg
ds
sub
cwtl
movsb
adc
or
pop
pop
fs
mov
adc
lea
aad
inc
mov
mov
dec
pop
dec
fwait
imul
push
subb
or
push
divb
neg
mov
lret
sbb
enter
xor
repz
or
bound
push
add
in
fisttpll
imul
mov
mov
jp
push
push
hlt
sub
mov
das
dec
enter
xchg
cmp
testb
xchg
xor
xor
lahf
jae
jns
movsl
jmp
inc
mov
nop
jl
dec
idivl
ss
into
mov
jl
arpl
mov
lahf
mov
vhaddps
fbld
push
int3
sub
negb
mull
cld
sub
imull
add
jae
cmp
loope
stos
push
xor
roll
mov
ja
mov
out
rcll
and
jae
xchg
mov
popa
pop
fadd
sub
out
or
call
lea
sarl
jo
pop
dec
imul
aaa
clc
jl
mov
push
cli
xor
pop
pop
inc
mov
adc
mov
out
enter
cmp
ror
ret
adc
stos
nop
bound
dec
fists
aas
daa
insl
or
aad
fcmovne
mov
jge
mov
mov
cld
xchg
rcll
das
sub
or
pop
pop
add
sbb
jb
or
cmp
jo
dec
cli
insb
pusha
popf
sub
or
out
and
xor
mov
fmuls
xchg
es
jmp
ret
adc
ret
in
push
push
outsl
int
push
sbb
mov
sub
sti
cmp
dec
sub
cmp
aam
push
push
push
loop
xchg
inc
push
cmp
jg
or
add
out
fucomi
dec
sub
xchg
xchg
aas
dec
test
lret
fdivrl
jno
add
gs
cmc
mov
pop
adc
mov
add
mov
sbb
daa
xchg
sbb
dec
inc
add
rol
sbb
sub
icebp
js
and
mov
movsl
xor
mov
inc
ja
arpl
mov
cld
mov
or
aaa
mov
inc
add
rorb
fs
sti
push
and
sub
or
adc
cmpsl
int3
jle
adc
orb
lock
sbb
sbb
push
jns
addl
fidivrs
insl
and
repnz
lods
xor
test
and
xor
fadds
aas
and
leave
cmc
jmp
or
mov
adc
mov
leave
and
icebp
dec
flds
popf
popa
iret
aas
into
in
call
jno
jnp
mov
outsb
aam
dec
movsl
push
jnp
push
scas
push
js
stos
jb
out
cmp
jmp
ret
subl
sbb
adc
mov
fldcw
push
and
cs
sbb
sbb
insb
cmc
pop
ljmp
xchg
ret
cmc
ljmp
xorl
repnz
cli
iret
decl
push
cltd
sbb
and
pop
fisubl
loopne
int3
mov
mov
movsl
add
enter
xchg
adc
xchg
mov
aas
lea
lret
movsb
cmc
mov
sbb
add
rorl
iret
insb
cwtl
jo
adc
shr
int3
jns
pop
add
clc
pmullw
into
les
add
imul
jo
lcall
leave
sarb
cmc
sbb
or
sahf
cmc
xor
jge
jne
iret
rcrb
add
sub
jmp
dec
outsl
and
call
xorl
nop
adc
pop
sbb
pop
call
inc
mov
jbe
loop
pushf
mov
jecxz
or
mov
adc
adc
andl
add
mov
out
xchg
mov
aad
jo
pushf
adc
mov
lcall
dec
cmp
sub
pop
clc
pushf
xchg
addr16
js
std
repz
mov
pop
and
and
sub
add
sub
sbb
idivl
cwtl
jp
in
jg
icebp
lods
cmc
or
mov
fadd
imul
mov
jno
lods
out
and
jp
push
leave
orb
clc
jb
xor
mov
pop
cmpsl
adc
cltd
int3
xor
subb
xchg
xchg
sub
xorl
lret
mov
sti
adc
lock
dec
jb
test
mov
dec
sub
nop
pop
pop
or
push
ss
xlat
stos
jmp
and
dec
xor
sub
mov
cmp
xchg
lods
sub
jb
mov
into
jl
jae
fwait
test
fwait
jbe
mov
sti
sbb
pushf
gs
int
shll
push
mov
dec
inc
mov
mov
sbb
adc
ja
or
daa
out
insl
nop
push
in
sbb
adc
push
add
addr16
add
arpl
mov
dec
fwait
jo
and
cmpsb
cmpsb
pusha
and
ret
xlat
cmc
imul
in
aad
mov
and
imul
lea
iret
jae
jg
and
lods
hlt
rorb
dec
jno
pop
or
lock
ucomiss
ljmp
jle
xor
lods
lods
jb
add
rcr
or
mov
in
int3
push
shrb
inc
add
insb
mov
ds
in
sub
mov
inc
pushf
xor
jbe
repnz
xor
lea
xor
cmp
jecxz
mov
rcl
pop
enter
std
jl
adc
rcrb
insl
or
or
xchg
in
into
sbb
cli
xor
pop
repz
inc
cmpsb
std
ss
sbb
mov
xchg
sbb
sahf
mov
mov
je
aaa
add
xchg
test
in
out
imul
sti
mov
cli
outsl
push
inc
xor
lret
in
xchg
iret
test
sub
mov
mov
pop
mov
lret
hlt
fldenv
mov
dec
cmc
or
int
repnz
sahf
xchg
loope
xchg
adc
jmp
jb
shrb
test
cmpsl
dec
outsl
sub
cmp
loope,pn
or
mov
loopne
sbb
jne
push
sub
cmpsl
mov
dec
das
xor
push
jnp
add
inc
les
rorl
and
ror
stc
xchg
sbb
jne
loopne
out
push
cmp
test
pop
adc
out
mov
sbb
mov
popf
nop
cmc
cmp
sbb
cmp
push
xorl
lea
dec
or
adc
dec
add
jae
cmc
aas
pushl
scas
cmp
or
test
adc
mov
lea
jge
fs
clc
mov
ret
dec
movsl
mov
lcall
cmpl
xor
ret
cmp
fadd
fs
mov
lods
push
mov
inc
dec
and
rclb
or
adc
jge
scas
iret
xorl
lret
push
dec
mov
gs
cmpsl
aaa
sahf
cmp
add
test
mov
js
mov
pop
push
not
mov
fwait
in
icebp
sub
sbb
insl
cmp
xchg
popa
fs
repz
pop
xor
mov
in
mov
lret
loope
int3
fwait
mov
ret
mov
rcll
repz
in
or
mov
lcall
aas
pop
mov
fsubrl
fnstsw
shrw
mov
fcoms
fsubs
repnz
ret
push
ret
adc
sub
dec
repz
mov
stos
and
inc
sub
inc
popf
jne
fidivl
sbb
xchg
cmc
pop
ds
push
adc
pop
shrl
sub
mov
or
lret
xchg
mov
bound
hlt
std
xorb
mov
or
mov
lahf
out
out
mov
mov
push
inc
int3
cli
out
mov
gs
dec
out
nop
les
and
mov
imul
inc
cmp
jecxz
mov
mov
stos
push
aad
lahf
add
aaa
jb
popf
loope
nop
ret
mov
cmc
or
mov
mov
cli
inc
bound
lock
lret
imul
popa
sub
xlat
out
or
mov
sysexit
aaa
aaa
cmp
inc
imul
out
adc
aaa
mov
dec
inc
jp
mov
xchg
xor
das
inc
outsb
cmp
inc
sbb
mov
pop
fstl
je
faddl
mov
fs
push
or
daa
sbb
iret
repnz
cmp
sub
aas
imul
addr16
rolb
aad
and
inc
xor
lret
sbb
pop
xor
cmpsl
pop
icebp
ret
ds
scas
out
pop
imul
xlat
int3
ljmp
je
insb
cmc
leave
cld
dec
js
sub
add
stos
cmc
xor
fbld
fisttpll
xor
pop
mov
add
scas
xor
shll
clc
dec
subl
roll
les
sbb
mov
arpl
mov
cmp
mov
dec
push
push
jae
mov
or
push
sahf
sub
out
or
out
or
jns
fcoms
in
roll
std
xchg
lcall
mov
icebp
mov
add
dec
clc
cwtl
aas
mov
gs
lds
or
pusha
xchg
sbb
sbb
cld
add
mov
push
cmpsl
push
xchg
sbb
pop
mov
ja
aas
jp
xchg
jns
fwait
sub
adc
mov
or
sarb
cmpsl
movsb
jmp
stos
rorl
mov
imul
jl
hlt
lahf
call
push
mov
daa
lahf
sub
adc
pop
test
and
notb
mov
cmp
inc
sbb
movsl
jecxz
cmp
enter
lods
mov
xchg
out
je
cmc
sbb
sbb
lahf
sub
mov
lods
and
rcrl
into
mov
icebp
cmpsl
mov
dec
cli
pop
sbb
sbb
xor
add
and
fnstcw
test
xchg
cmp
je
jg
xor
test
dec
ret
nop
cwtl
lock
push
add
or
loope
fnsave
addr16
sub
pusha
cmp
insl
adc
mov
mov
fldl
clc
mov
sahf
rcll
sub
xor
sbb
loopne
repnz
xchg
xor
mov
jle
roll
les
push
mov
dec
mov
xchg
loop
cmpsb
f2xm1
cmp
cmp
fsts
shlb
insb
addr16
pop
nop
lcall
in
aam
or
js
rcrl
sti
and
stos
xor
push
roll
icebp
push
fsubl
dec
xchg
std
add
fwait
lea
or
int3
int
jl
repnz
inc
fcoms
in
lods
shrb
cltd
lods
cmpb
push
cmp
pop
fcmovne
aas
in
lea
cwtl
mov
les
pandn
ret
repnz
fnstcw
mov
pushf
mov
cld
xchg
sahf
and
adc
jge
dec
jo
jo
jmp
push
js
add
out
popa
mov
lds
outsl
and
push
stos
mov
call
ret
xor
sub
repnz
sub
xchg
sbb
add
cld
pop
sbb
mov
ljmp
lret
movsb
jle
dec
imulb
int
pop
dec
test
int3
dec
or
xchg
push
imul
jmp
dec
jg
rolb
pop
xchg
jno
dec
adcb
out
mov
xor
lea
inc
scas
mov
lods
std
outsl
and
in
dec
cltd
out
xlat
cli
inc
sbb
decb
or
stos
lahf
cmpsl
dec
mov
mov
pop
sbb
xchg
and
int3
pop
js
dec
nop
or
sub
aam
cmp
push
movsb
pop
jl
cmp
cwtl
lods
cmp
aas
rep
decl
ljmp
dec
cmp
call
imul
mov
xchg
repnz
jo
sub
sahf
data16
adc
out
pop
aam
or
pop
sub
cs
insl
fwait
mov
xlat
bound
mov
cmp
test
adc
dec
adc
rol
leave
and
dec
ds
push
add
rcrb
cmp
mov
rcr
or
xorb
and
ja
xor
mov
ss
pop
pop
cmp
repz
xchg
sbb
sub
mov
or
sarl
or
sub
daa
shlb
push
lods
leave
pop
jns
stos
out
inc
add
test
test
imul
xor
stos
jge
pop
dec
cmpsl
shl
cmp
push
popf
sbb
mov
pop
fld
jle
add
sub
dec
cmp
jo
jo
inc
pop
stc
sahf
lea
and
xor
ret
mov
aam
out
int3
pop
divps
fdivs
push
pushl
pop
imul
bound
push
xor
nop
xchg
pop
jno
lret
jg
nop
gs
loope
xchg
jae
js
push
test
push
aaa
outsb
cmp
xchg
sti
fmull
mov
je
pop
out
out
jo
sbb
imul
ret
test
je
into
test
insb
xlat
popf
mov
xor
insl
mov
push
insl
out
les
adc
lea
fidivrl
mov
insl
inc
cmp
pop
sahf
sub
xor
jecxz
leave
cmp
enter
xchg
or
out
push
loopne
sbb
dec
fs
and
push
dec
sar
xchg
mov
mov
ret
mov
push
mov
callw
push
pusha
out
push
cli
push
mov
mov
and
and
loop
out
pushl
or
scas
xlat
jne
cmp
enter
cmp
lds
into
stos
aaa
pop
or
lcall
lcall
shrb
rclb
fdivrl
out
sub
jl
inc
cld
jp
cmp
and
in
icebp
out
xor
sahf
lds
jecxz
loop
or
push
jl
dec
mov
mov
jg
sub
jo
rclb
stc
out
mov
pop
and
fs
fdivrp
jns
jno,pt
hlt
mov
mov
inc
and
cmp
mov
add
sub
fidivrs
hlt
sbb
lret
push
bound
adc
dec
dec
ret
int
cltd
xchg
test
jp
std
aam
out
dec
fstpt
repnz
test
mov
test
xchg
jbe
jecxz
adc
xlat
push
push
lcall
std
jg
xchg
lds
popf
pop
in
or
inc
notl
int
daa
fistpll
ja
sub
sub
push
cs
or
mov
jnp
cs
sub
and
pusha
in
sbb
lock
xchg
jmp
inc
adc
sub
loop
sbb
loop
xchg
mov
addr16
lret
movsb
xlat
push
add
mov
shll
sub
xor
pop
aam
loop,pn
push
addr16
int
or
aam
push
sbb
and
or
and
test
xchg
sub
test
fldt
leave
inc
mov
pop
or
sub
cld
cltd
mov
xor
xlat
popf
sbb
repnz
lret
jle
dec
cli
aaa
push
insb
out
ds
sbb
pop
or
or
or
pop
cmp
xor
dec
adc
and
xchg
enter
mov
movb
scas
xchg
add
xorb
and
sub
mov
cmpsl
mov
cld
dec
ret
xchg
inc
movsb
add
and
or
fcmovu
movsl
and
gs
js
xor
rolb
sub
stos
call
jns
ficompl
loop
movsb
or
push
mov
sub
push
mov
repz
fld
cltd
or
in
pop
ja
pop
cmpsl
add
out
aad
mov
sbb
xchg
dec
in
enter
shlb
outsl
stc
insl
out
dec
cld
dec
stos
int
jl
jns
mov
mov
mov
add
adcb
frstor
mov
jae
sahf
or
into
dec
mov
fwait
xchg
or
lret
add
mov
popf
test
inc
outsb
sbb
xchg
and
mov
negl
cmp
adc
add
sti
mov
xchg
and
repz
or
jns
clc
mov
sbb
test
mov
xchg
iret
sahf
in
pusha
push
out
sahf
mov
mov
lds
fs
sub
add
mov
jo
out
push
inc
fstpt
xor
out
mov
sub
stos
shl
lock
add
xchg
sub
lcall
push
loopne
into
out
mov
cmp
jae
hlt
mov
push
clc
adc
jno
push
inc
inc
add
sub
dec
xor
std
or
xchg
mov
cs
pusha
rol
adc
push
insb
ficomps
sub
adc
sub
aaa
cmp
sub
lea
pop
pop
mull
js
aas
in
adc
xchg
mov
inc
mov
daa
stos
fisttps
sbb
je
lahf
mov
mov
iret
int
sbb
xor
mov
loope
mov
into
mov
dec
fs
mov
fimull
pusha
cmp
dec
in
mov
sti
test
push
pop
sarl
cmpl
loope
sbb
add
roll
jp
adc
mov
int3
sub
fisttps
aaa
cmp
call
dec
mov
mov
out
aam
inc
mov
stos
xchg
sbbb
xlat
dec
shl
fs
xor
push
pushf
int
add
sbb
xchg
mov
testl
das
dec
push
adc
push
mov
and
fiaddl
xchg
flds
mov
enter
mov
xchg
rcr
jecxz
xor
sbb
mov
loop
out
mov
jnp
cmc
dec
gs
lock
inc
cmpsb
ret
addr16
aas
outsb
cltd
jbe
or
cmc
inc
xchg
leave
jmp
sbb
mov
lods
test
pop
stos
pop
lcall
stc
in
test
out
adc
pop
int
jmp
push
shlb
cli
or
ds
cmp
stc
sub
mov
mov
in
push
cwtl
push
mov
jo
stos
loopne
push
ret
stos
jno
mov
mov
icebp
adc
repz
outsl
mov
push
movswl
jmp
lcall
dec
sub
mov
jl
xchg
or
push
daa
xor
negb
mov
out
mov
dec
sub
mov
cmp
in
enter
sbb
rolb
mov
inc
and
mov
sbb
out
xchg
mov
dec
fwait
mov
pop
cmp
ss
subb
and
push
stos
inc
mov
pusha
dec
jp
pop
jge
jb
test
push
hlt
and
mov
lock
xchg
jno
cwtl
pop
loope
xchg
or
mov
pop
mov
adc
pop
pop
lret
stos
subl
arpl
add
out
insb
push
or
adc
mov
and
xlat
xlat
mov
xor
movsl
push
stos
add
xchg
mov
loop
xchg
test
mov
jecxz
aad
xchg
pop
ss
stos
aam
sahf
mov
xor
aaa
ror
rdpmc
stos
call
sub
push
popf
and
dec
movsb
cmp
pop
cltd
sti
jl
sarl
test
lock
stc
add
mov
pushf
xchg
jl
adc
mov
in
pusha
cmp
or
in
dec
stc
mov
pop
mov
outsl
pop
jae
cmpsb
fwait
jl
jb
ret
add
adc
jbe
and
pop
jge
add
mov
dec
lea
scas
add
test
aam
mov
xor
dec
xchg
or
insb
hlt
enter
addr16
sbbb
std
dec
xchg
dec
mov
xchg
xchg
jae
aas
adcl
dec
ret
stos
mov
loopne
mov
sbb
push
std
icebp
mov
cmp
repz
mov
pop
out
enter
pop
loopne
xchg
sbb
mov
cmp
lahf
ja
in
test
vpmadcsswd
xchg
lds
mov
subb
sbb
mov
scas
stos
or
mov
push
sbb
xor
adc
test
in
test
insb
mov
shlb
xor
cmp
lock
outsl
sub
aad
inc
cld
loop
jmp
loope,pn
pop
incl
jo
add
loop
xor
inc
mov
xlat
pop
std
rcll
adc
scas
rcrb
repnz
out
mov
scas
jns
cmp
pop
sbb
mov
mov
jle
push
call
icebp
sahf
fadd
mov
push
sarl
test
lahf
loope
mov
mov
jae
nop
test
and
mov
sbb
mull
cmc
jnp
les
jns
push
sbb
scas
into
mov
sub
mov
ss
repnz
loopne
sbb
adc
mov
adc
xor
pop
aam
into
sub
push
inc
std
inc
mov
mov
and
int3
xchg
cld
pusha
fdivr
push
push
inc
fldln2
out
sbb
mov
insl
pop
ljmp
or
dec
scas
repz
je
sbb
pop
out
jmp
lods
add
cmc
jg
mov
push
dec
jp
xchg
mov
fistl
mov
dec
sahf
insb
repnz
inc
xchg
mov
or
imul
imul
or
inc
or
ljmp
rol
sub
call
add
add
andl
mov
dec
mov
arpl
andb
jmp
cld
adc
inc
push
imul
adc
in
xchg
xchg
and
mov
lahf
adc
lods
scas
andl
fidivrs
mov
and
shlb
add
mov
sahf
push
in
mov
add
mov
fwait
jne
cmp
mov
loop
fadd
dec
cmpsb
or
inc
daa
push
push
and
or
decb
adc
inc
xchg
iret
roll
ret
pop
jb
loope
or
mov
xchg
cltd
push
repnz
jmp
push
cmove
jb
fiaddl
into
mov
adc
push
fldt
testl
es
sarb
add
push
mov
fcoml
adcl
pusha
push
xchg
xor
dec
and
sbb
xorl
cwtl
cli
or
jne
lods
loopne
jnp
mov
mov
ror
push
outsl
and
loop
cmp
loopne
push
push
sbb
pusha
enter
fbld
test
push
adc
push
mov
adc
and
iret
addb
andb
sahf
mov
or
lahf
int3
in
arpl
add
lock
je
sti
push
lds
adc
lods
sub
or
jb
mov
jmp
jnp
jmp
je
mov
test
add
xor
sbb
sub
aas
xchg
shlb
sub
into
jge
idivb
xchg
rcr
test
add
or
dec
je
std
jbe
andb
sub
push
mov
dec
cmpsb
movaps
fs
sub
sub
shrb
outsb
into
pop
scas
adc
or
push
mov
loop
imul
push
cld
xchg
cwtl
jp
pop
call
or
testl
aam
fs
push
mov
inc
xlat
jno
loop
pop
int3
jbe
xchg
movsb
or
push
mov
js
adc
jl
xchg
mov
add
fimuls
sub
or
fistpll
fs
xor
sbb
xor
cmp
mov
fnstenv
cmp
mov
or
inc
dec
push
lods
mov
out
aas
aam
cmp
stos
jnp
notl
leave
jbe
mov
data16
pop
pop
lods
and
push
dec
shlb
movsl
movsb
stos
pusha
out
cmc
out
addr16
add
daa
ret
mov
pop
outsb
mov
je
mov
insl
scas
mov
das
pop
ss
xchg
cmpsb
movsl
xchg
repz
cwtl
mov
jo
and
cmp
and
push
cmp
mov
pop
test
xor
dec
lahf
xchg
pusha
ja
lock
add
daa
jg
nop
bound
sub
aam
in
scas
mov
dec
mov
popa
test
repz
push
movsl
pop
cmp
test
sarl
push
lods
mov
mov
popf
and
sbb
rcrl
dec
lods
xor
mov
xchg
cmp
or
test
fwait
mov
or
enter
xchg
stos
jl
jg
stc
bound
dec
or
add
dec
movsb
fldenv
pop
jbe
stos
jl
jmp
adc
or
lret
xor
adcl
insb
xorb
jl
adc
adc
jne
or
testl
ljmp
adc
inc
mov
rol
aad
sub
add
dec
xor
icebp
scas
or
adc
pop
insb
sub
pop
insb
aaa
sbb
out
push
mov
aaa
ds
jo
cmp
sarl
jo
inc
mov
pusha
es
imul
mov
movsb
mov
mov
mov
pushf
add
fidivrl
sub
aas
mov
mov
js
push
cmpb
lret
and
inc
shrb
in
in
sub
fsqrt
fidivrs
and
xor
xchg
or
dec
or
fs
pop
std
scas
sub
dec
loopne
mov
es
faddl
pop
aad
pop
repnz
sbb
sti
push
inc
insb
cmpb
in
popa
xchg
pop
cmp
dec
pop
add
data16
jl
loope
add
and
push
fidivrs
pop
or
inc
cmpsl
jnp
lods
fucomip
sahf
add
cmpsl
int
fidivs
mov
cs
ja
std
out
insl
or
or
fwait
cmpsl
dec
daa
cmova
nop
dec
inc
pop
and
leave
aaa
fnsave
cld
sahf
aad
push
add
ds
outsl
sbb
cltd
mov
jns
js
or
sub
push
sbb
and
jg
mov
mov
pop
mov
insb
sub
mov
cmp
cli
cmp
dec
call
mov
sub
repz
fwait
xchg
add
outsl
testb
idivb
mov
lds
int
push
xor
sub
out
inc
cmc
pop
xor
out
gs
mov
and
sbb
sub
fmul
push
test
xchg
in
sbb
lods
sub
dec
add
mov
shrl
fistl
fstps
dec
add
addb
loopne
pop
mov
mov
cmp
or
or
test
mov
inc
xchg
push
sbb
jmp
dec
movsl
js
adcl
rcll
sub
fs
je
and
stos
rcrb
scas
rcll
fcoms
gs
adcb
push
mov
stos
and
rolb
aam
sbb
mov
pop
cwtl
mov
pusha
xchg
inc
rcll
roll
imul
sbbb
test
nop
cli
gs
loope
inc
js
adc
sub
mov
or
mov
add
inc
jg
stos
enter
ret
test
jb
jmp
pop
inc
push
fcomps
inc
push
dec
cmp
sbb
hlt
push
xchg
out
inc
xchg
shrl
cltd
imull
adc
mov
mov
pop
xchg
push
inc
xchg
aad
idiv
js
aaa
and
mov
dec
sub
pop
xor
pop
sub
in
mov
add
jp
mov
mov
notb
nop
or
add
jnp
stc
in
addb
jmp
cld
jmp
lds
jecxz
addb
nop
cmc
daa
cmp
lret
fisttps
push
sbb
movsl
xchg
cmp
rcrl
in
ret
les
fsub
mov
jg
cmp
out
jge
insb
inc
or
outsl
subb
mov
stc
rcl
sbb
es
xchg
adc
popa
add
push
or
aas
or
hlt
push
imul
out
iret
std
fndisi(8087
add
test
push
ss
adc
push
xchg
cwtl
lret
das
ret
cld
addr16
scas
mov
inc
push
jno
or
cmp
stc
xchg
mov
out
movsl
sti
lods
lahf
cld
push
lret
add
fdiv
test
leave
scas
dec
pusha
jo
xor
div
xorl
je
jae
pop
xor
or
jne
push
pop
adc
cld
repz
add
fnstcw
sbb
insb
mov
mov
jle
ja
lea
pop
sub
push
fidivl
mov
xchg
loopne
jne
or
mov
add
or
sub
push
cmp
cmpb
sbb
jo
por
in
mov
push
fcmovu
jmp
shll
or
les
les
sub
addr16
je
daa
or
and
in
or
sbb
xchg
sbb
loop
cli
inc
rclb
pop
push
lret
jo
and
inc
cmp
xchg
pop
js
addr16
inc
and
xchg
xchg
xchg
xchg
rcl
lret
cmp
cmpsl
or
loop
addr16
xchg
add
xor
mov
into
push
adc
cmp
fstpt
aad
or
and
xor
dec
xorb
test
sub
mov
lahf
sbbb
out
mov
cmc
shlb
inc
xor
test
imul
inc
sahf
call
jae
cmp
fisubrs
scas
cmp
dec
xchg
and
jl
xchg
aam
push
lods
pop
push
sahf
fs
xchg
cs
xchg
mov
add
sahf
add
cmp
mov
push
divps
sahf
lods
dec
jl
pop
lock
add
into
lcall
popf
pop
mov
mov
sarl
xor
cld
pop
jle
lret
out
enter
sbb
rclb
shrb
lods
inc
cmp
push
jno
les
cmp
jbe
pusha
iret
std
test
test
fwait
or
push
add
cwtl
outsl
adc
jecxz
mov
mov
jae
push
incb
ss
mov
repz
imul
add
inc
push
sub
cli
jns
leave
mov
xchg
mov
imul
cmpsb
je
push
mov
aaa
cmp
xchg
sub
add
sbb
mov
mov
insb
in
ret
push
cmp
mov
and
inc
notb
xor
xor
push
push
dec
mov
cmp
pop
rolb
repz
cmp
je
leave
jae
or
lret
test
imul
lcall
scas
cmp
fdivl
sbb
mov
mov
es
inc
sub
lahf
roll
jecxz
adc
mov
clc
pusha
mov
cmpsb
enter
mov
pop
iret
popa
adc
xchg
adc
add
leave
insb
adc
cmpsb
pop
push
pop
mov
into
call
xor
cs
dec
cmp
rcl
mov
pop
shll
push
out
adc
rcrb
lds
jmp
mov
pop
ds
dec
pop
mov
xchg
cmc
ret
lahf
inc
sbb
orl
jb
popf
inc
out
sbb
mov
aas
mov
scas
jecxz
incb
out
or
jmp
jns
iret
cmp
rclb
lahf
lock
xor
out
leave
dec
adc
mov
mov
or
test
mov
sbb
repz
dec
lret
das
dec
cmovs
sbb
mov
aam
pop
xor
xchg
lret
pop
stos
add
pop
out
idiv
dec
mov
push
inc
repz
mov
mov
mov
pusha
mov
mov
icebp
jbe
pop
lods
ja
sti
mov
stos
jo
insb
fsubs
mov
cmp
in
xor
xchg
test
icebp
mov
sbb
fyl2x
out
jbe
xor
les
sub
movsb
insl
or
enter
in
add
pop
adc
lret
test
loopne
mov
out
cmpsl
movsl
lods
or
bound
repz
jmp
shll
mov
aaa
or
pop
out
xor
mov
fwait
adc
jb
cmp
cltd
scas
std
add
push
inc
lret
insb
xchg
xchg
xchg
pop
daa
in
inc
inc
scas
stos
mov
pop
sub
orb
bound
jle
icebp
jmp
iret
adc
xchg
lods
xor
icebp
test
pusha
sbb
and
icebp
std
push
pop
sbb
adc
adc
stos
rolb
scas
mov
jbe
bound
pop
fdivl
cmpsl
mov
cmpb
add
icebp
push
test
push
fwait
dec
iret
adc
xor
mov
pop
sbb
nop
xor
pop
es
mov
sbb
enter
pop
xor
rcrb
and
pop
mov
mov
int
sarl
inc
test
cli
pop
sub
pop
testl
es
mov
cmpb
jae
dec
je
add
pusha
cmpsl
test
sahf
push
xor
adc
sbb
pushf
or
sbb
lods
xor
fst
xchg
sub
xor
dec
adc
inc
out
ja
dec
gs
jge
lods
addr16
in
cmp
dec
mov
jecxz
ss
rolb
fs
mov
pop
and
es
push
ret
sbb
mov
xor
insl
push
test
xor
xor
pop
je
and
fsub
mov
cli
dec
lahf
imul
mov
dec
xchg
jge
nop
add
dec
ficomps
push
dec
mov
cmp
cmp
sub
push
jns
or
xchg
cmp
call
lea
mov
cmc
jp
jmp
imul
mov
sub
scas
fs
daa
push
sbb
outsl
jno
out
arpl
sbb
jmp
sub
cmp
in
mov
mov
adc
rcrb
xchg
movsb
xor
and
xor
pusha
mov
xchg
inc
sub
jb
arpl
push
imul
out
enter
and
scas
cmp
jmp
scas
leave
or
xchg
adc
fnsave
xchg
fcomps
push
aaa
das
aas
fdivrp
arpl
mov
sahf
testb
xor
ficoms
in
mov
leave
into
or
loop
inc
xlat
push
lcall
mov
mov
mov
inc
dec
out
stc
adc
pop
adc
rolb
xor
push
into
rcrl
or
dec
push
scas
subb
iret
stc
pop
fcmovnb
jg
daa
fdivl
or
xor
lcall
das
sbb
stos
or
scas
fs
mov
sbb
fcom
pop
addr16
cmp
ficomps
out
int3
pop
mov
jbe
fisttpl
sti
dec
xchg
pop
mov
and
test
xor
stc
or
hlt
jge
xlat
mov
dec
sub
stos
xchg
or
stos
pusha
push
insl
adc
jae
or
push
aam
sub
addr16
out
adc
and
and
fmull
subb
dec
inc
jnp
cld
out
lock
cbtw
or
push
push
add
add
cmpb
xchg
int
pop
push
dec
add
sub
push
movb
addr16
pushf
hlt
mov
dec
icebp
testb
cwtl
mov
data16
pop
pop
dec
ja
jb
dec
fwait
jmp
adc
nop
lret
sub
lret
xor
dec
xor
std
or
insl
arpl
mov
adc
ss
push
sub
cmp
adc
out
repz
negb
ljmp
sbb
cmp
test
push
mov
pop
pop
je
sahf
dec
fldt
ja
test
imul
add
es
imul
test
inc
push
inc
or
leave
mov
insl
movsb
push
jbe
gs
push
xchg
push
adc
mov
hlt
mov
lods
repnz
mov
inc
xor
xchg
rcrl
add
and
lods
and
sbb
mov
sub
rcrb
fldcw
adc
pop
inc
pop
add
je
adc
or
xchg
sub
out
push
sub
fs
jle
setge
out
mov
pop
jg
fsubl
push
loope
cmp
popa
sub
fldenv
inc
jle
stc
adc
addb
sbb
push
or
mov
sarb
cmc
cltd
and
cli
push
js
sbb
mov
sbb
das
clc
test
daa
mov
sbb
andl
pushf
stc
mov
enter
nop
filds
add
aaa
fucomip
fstpl
mov
cmp
mov
sahf
push
es
cmp
pop
jo
hlt
or
cmpsl
jge
int3
jnp
lods
rcrb
xor
iret
cmp
ja
lret
in
shrb
and
dec
jnp
daa
jae
movsb
sub
scas
adc
inc
fimull
repz
cmp
call
adc
add
pop
jne
int
movsl
adc
rorl
push
fs
push
and
xorl
push
nop
dec
jbe,pt
iret
outsl
xchg
push
inc
xchg
xchg
mov
aam
subb
pop
fsubrs
jns
sahf
das
cwtl
ficoms
and
loop
dec
fimuls
std
repz
cltd
imul
in
loopne
add
lahf
scas
aam
inc
adc
and
divb
enter
int3
movsl
add
outsb
sbb
mov
imul
fnstcw
cmp
int
lcall
fistpll
addr16
xlat
test
imul
pop
out
pop
push
pop
fcomp
jns
xor
hlt
out
loop
xorb
fidivs
popf
xchg
sarl
pop
aam
cmpsb
push
fidivrs
icebp
sbb
psubq
mov
scas
test
mov
enter
adc
loop
sbb
mov
jmp
lods
mov
xchg
fldcw
rolb
sub
int3
fdivs
out
dec
ss
rorb
cwtl
stos
testl
pop
mov
mov
aam
inc
aam
loop
sahf
data16
insb
jne
mov
movsl
mov
sub
imul
imul
ja
xchg
out
in
jbe
add
js
ss
out
fildll
clc
insb
js
roll
stos
mov
ja
xchg
xchg
sahf
sti
aaa
push
pop
jle
sub
mov
pop
sub
inc
cmp
aam
lods
lds
mov
mov
jne
push
mov
gs
pop
cltd
daa
loopne
mov
bound
lds
push
and
mulb
in
movsb
push
fsubrs
popa
dec
in
dec
jecxz
jge
rclb
jbe
data16
pop
rorl
lcall
cli
cmpb
sub
or
xchg
push
pushf
iret
cmp
inc
push
pop
push
xchg
pushf
sbb
fdivrl
or
sbb
add
stc
and
jo
pop
dec
loope
mov
add
add
xor
rorl
ret
insl
xor
xchg
icebp
bnd
jle
fnsave
add
bound
jbe
jmp
cmp
xorb
sub
cmp
mov
sbb
and
fs
ds
and
fadds
pop
push
push
xchg
cmp
push
movsl
sbb
add
test
and
fistl
div
mov
loop
xchg
jecxz
cmp
adc
jo
xor
popf
test
in
add
push
jns
shlb
mov
loop
stos
imul
out
repz
mov
out
inc
mov
ret
jp
cmp
loop
add
mov
xchg
jmp
paddsb
pop
pop
jmp
outsl
inc
iret
lock
or
ljmp
mov
adc
test
mov
in
cmp
mov
dec
push
out
adc
scas
mov
and
mov
shll
sahf
add
mov
dec
xchg
inc
sbb
mov
inc
jae
lret
in
xor
or
cmpsl
push
clc
xlat
jge
xor
ret
xchg
pushf
add
jb
adc
cwtl
cli
leave
cmpsl
pop
popf
jb
aas
dec
ja
ret
jl
aaa
xor
adc
xor
loope
in
dec
sbb
lods
jge
xchg
leave
and
mov
xor
shll
sbb
pop
je
and
mov
dec
scas
out
loopne
pop
daa
add
cmpsl
mov
xchg
jmp
push
pop
xchg
sub
sti
lods
or
jne
mov
ret
scas
xchg
test
jg
sub
repnz
fcmovu
and
call
das
sbb
pop
ret
dec
pop
pop
das
pop
cmpsl
cmp
leave
cmp
outsl
pop
push
pop
jmp
or
jae
pop
fistpll
pop
sub
jle
mov
xchg
xchg
data16
int3
add
xor
testb
jnp
sbb
fwait
cmpxchg
cli
add
mov
pushf
xchg
fistl
sub
cmpb
jp
mov
and
hlt
outsb
je
sub
sbb
lcall
or
add
pop
mov
jae
sub
and
incb
lcall
ja
cmpsl
mov
andl
xchg
cli
pop
scas
jge
or
mov
push
jle
xchg
dec
sti
les
adc
fdivrs
xchg
jo
jl
sub
cmpsl
rolb
jge
adc
dec
jmp
dec
sub
aaa
fimull
cmp
mov
test
and
aam
mov
ficoms
cmpsb
push
add
xor
imul
jne
loopne
das
pop
into
and
jl
dec
mov
sbb
ret
add
push
in
rcrl
fistps
out
roll
dec
loope
jle
out
jg
xor
adc
cli
test
ss
sub
inc
adc
sahf
out
mov
ss
sar
andb
test
push
aaa
mov
and
movb
or
shr
divl
xchg
hlt
add
jg
cmpsb
jae
fdiv
mov
jae
sub
jne
adc
shll
ja
add
repz
add
cli
adc
loop
roll
mov
pop
cmpsl
xor
add
inc
loope
rolb
push
idivl
call
adcl
sub
dec
addr16
add
sahf
ret
les
outsl
mov
mov
dec
cltd
or
xchg
and
or
jns
sbb
sbb
lds
cwtl
xor
imul
or
or
xchg
xor
cltd
jbe
xchg
jmp
mov
cmp
push
fnstenv
loope
pushl
aas
sub
jae
mov
sbb
rolb
js
xchg
pop
xchg
arpl
mov
mov
mov
les
dec
mov
pop
icebp
mov
lods
push
test
jno
jnp
call
adc
sub
orl
add
mov
dec
pop
sbb
inc
jg
mov
jb
mov
popa
inc
fs
jbe
pop
or
jecxz
jmp
int
adc
roll
cmp
das
mov
push
test
xlat
sub
push
jne
jns
lret
ret
jmp
jle
pop
push
pop
or
outsl
sub
jb
jl
gs
fcomi
psubw
adc
loope
test
scas
ret
outsl
out
xor
fcmovb
mov
and
pop
mov
jbe
int3
lahf
inc
pop
mov
mov
xor
mov
cmc
in
sub
call
mov
js
std
popf
mull
ss
shl
and
xor
mov
sub
cmp
xchg
jl
add
jns
xchg
pop
pop
lds
icebp
nop
mov
std
out
imul
fs
test
loope
pushf
loope
push
pop
dec
mov
and
mov
jnp
ds
int
xchg
mov
inc
push
or
adc
jne
test
lret
ljmp
pop
adc
jg
cmp
adc
inc
sub
and
and
ret
das
jnp
cmp
std
adcb
es
outsl
nop
adc
or
add
sbb
sub
mov
and
inc
loopne
sub
pop
sahf
adc
inc
push
std
mul
push
testl
cwtl
in
inc
pop
jne
add
xlat
lock
ja
sarb
xchg
cmpsb
lret
in
clc
and
mov
sahf
inc
ljmp
jnp
xlat
fistl
and
rorl
aad
mov
adc
mov
sub
lret
cld
pop
cmpl
in
sub
sub
out
in
outsl
cmp
add
mov
lahf
adc
mov
jle
scas
pushf
aad
dec
shrl
inc
shl
xor
notb
cmpsb
mov
mov
or
mov
nop
inc
les
daa
push
mov
gs
rcrb
rorl
jne
pop
mov
xor
or
ljmp
in
cmp
jecxz
mov
mov
xor
add
xchg
fwait
dec
es
mov
mov
mov
pop
mov
jp
aas
xchg
add
loopne
inc
mov
popf
push
xor
out
cmp
mov
lock
scas
in
data16
fcmove
loop
jg
loop
rol
icebp
adc
jbe
test
dec
in
jl
xor
adc
out
inc
dec
push
mov
sar
call
sti
inc
popf
imul
sub
imulb
fbstp
jp
clc
push
dec
in
cmp
ja
cli
dec
or
mov
repz
arpl
in
adc
pusha
data16
js
int3
or
mov
int
out
xchg
pop
inc
gs
test
fldenv
mov
push
mov
imul
xchg
loop
jns
ret
pusha
cmpsl
vmovupd
xor
test
dec
jge
lret
xor
adc
mov
shl
scas
inc
out
mov
cwtl
in
pop
mov
or
mov
das
daa
pop
push
insb
cmc
push
sti
addr16
mov
out
insb
inc
popf
add
mov
jo
icebp
lret
adc
xor
adc
lods
loope
jae
and
pop
sbb
repz
aad
icebp
out
jle
mov
cmpsb
inc
idivl
add
stos
shl
or
mov
or
ret
insb
rcl
xchg
add
cmpsb
jns
mov
xchg
cmp
pop
or
dec
insl
sbb
lea
test
cmp
aad
gs
fwait
dec
lock
test
xlat
lret
ds
inc
pop
shr
cld
push
test
popf
mov
in
mov
cmpsl
dec
jnp
ret
sarb
dec
xchg
adc
push
idivl
cltd
push
notl
adc
push
and
push
int3
in
pop
jns
sub
sahf
push
out
into
out
das
jmp
aaa
sarb
mov
add
lock
les
fs
iret
xlat
jecxz
or
mov
push
jb
sub
lea
cmp
xor
xchg
stc
sub
mull
sbb
mov
loopne
and
pop
cmp
mov
adc
popf
rcll
mov
aaa
js
adc
and
out
jl
add
stc
xor
cmp
cwtl
aam
mov
jno
add
jnp
mov
test
sbb
test
push
or
out
fdivl
daa
je
stos
cmp
nop
decb
adc
aas
fdivl
jbe
clc
mov
jp
stos
out
popf
dec
sub
push
cwtl
mov
test
repz
pop
or
test
or
stos
rclb
hlt
and
mov
mov
push
push
mov
jne
push
aas
jg
icebp
mov
inc
jno
cmpb
mov
bnd
push
mov
jmp
bound
push
ja
add
call
sub
adc
fwait
mov
rcll
cmp
aas
jne
out
dec
bound
mov
insl
cmp
lods
imull
sub
int
or
lret
gs
push
out
mov
jmp
fwait
sbb
andb
aam
mov
lds
clc
add
lods
jp
xor
mov
mov
dec
sub
into
mov
cwtl
push
dec
jecxz
push
cmp
insl
jl
ret
jne
addr16
sbb
jnp
cmp
ja
and
lock
dec
outsl
mov
cwtl
add
jmp
scas
ja
movsl
push
pop
fmuls
and
imul
pop
mov
push
pushf
cmp
mov
cmp
ficompl
aas
xor
fs
push
pop
mov
xchg
mov
inc
push
adc
mov
and
cld
mov
inc
enter
dec
cmovb
bound
mov
stc
pop
sbb
in
cmp
xchg
adc
mov
adc
iret
fwait
loopne
movsb
in
dec
jb
and
pop
xchg
fmulp
incl
mov
aad
xchg
frstor
cwtl
pop
xor
push
lcall
nop
mov
mov
mov
sub
rclb
mov
inc
adc
inc
push
cmp
and
fwait
xor
vmwrite
andl
flds
scas
dec
or
popf
pusha
inc
cld
inc
stos
or
mov
movl
repz
scas
mov
sub
popa
adc
adc
sub
cmp
stos
es
fisttpll
xchg
push
insb
daa
ret
add
pop
cmp
insb
pusha
xchg
inc
or
ror
xchg
jne
xor
mov
jle
pop
push
mov
ljmp
test
out
adc
lcall
mov
mov
jp
filds
std
xor
sbb
mov
dec
push
sbb
inc
pop
cmp
rcrb
lret
in
sub
inc
sub
sub
mov
pop
outsb
dec
xlat
lcall
jb
mov
adc
and
inc
jnp
cld
pop
test
and
xor
push
daa
out
sub
scas
lods
test
pop
or
imul
fmull
xchg
lock
bnd
in
push
roll
incl
iret
cmp
sbb
insb
mov
cmp
aaa
xchg
ror
sub
sarb
gs
xlat
testb
fimull
adc
daa
ror
flds
pusha
sub
add
adc
sub
mov
sbb
mov
xchg
ret
adc
mov
jns
outsb
pop
outsl
sbb
xchg
push
mov
mov
int3
mov
jl
mov
lret
mov
mov
out
out
cmp
je
mov
neg
or
or
dec
dec
cli
inc
jne
push
mov
jae
aas
arpl
or
shll
leave
cld
imul
jbe
sahf
sarb
pop
bound
orl
ljmp
push
dec
push
xchg
bound
stc
xchg
nop
leave
mov
insb
hlt
in
adc
sbb
xchg
outsl
sarl
push
hlt
ljmp
xchg
outsl
sub
push
mov
es
push
in
repnz
xor
fisubrl
sahf
out
sbb
pop
inc
int
lods
sarb
sub
mov
addr16
sarb
andb
jg
rcrb
iret
fnsave
dec
mov
mov
adcb
xor
sbbb
mov
jmp
dec
mov
movsb
jns
shl
dec
int3
mov
cs
push
sbb
scas
mov
movsl
jecxz
mov
sti
incb
out
out
cs
pop
shlb
add
fnstsw
aaa
repz
push
rolb
or
xorb
jnp
out
push
or
cmpsl
testl
jo
cmp
push
mov
add
mov
cmpl
mov
jle
jmp
ljmp
cmp
lock
das
loope
push
lret
dec
pushf
inc
sahf
jp
cmpsl
inc
daa
pop
nop
fistps
adc
or
fadd
or
ret
jo
rcll
adc
cmp
mov
in
dec
scas
sbbl
cmp
les
sub
ja
ret
je
pop
mov
jp
dec
sbb
cli
push
mov
je
shll
xlat
shl
fsubs
inc
shll
stos
mov
adc
mov
sbb
mov
ds
push
sahf
mov
push
jno
mull
jmp
adc
ss
mov
loop
in
fnstcw
enter
sbb
pop
sarb
shlb
pushf
test
punpckldq
jo
sub
daa
push
mov
and
mov
xchg
rolb
out
mov
rcr
xchg
cli
inc
or
pop
inc
inc
sub
aam
cmc
mov
add
xchg
mov
out
out
cmp
dec
mov
loopne
fcomps
je
jp
xor
aad
test
sbb
cmp
pusha
pop
lds
cmp
lahf
out
ret
mov
xor
xor
dec
adc
mov
gs
or
inc
sub
pop
sub
outsb
and
xchg
add
fidivs
mov
cmp
in
push
push
cmp
jae
or
pop
std
mov
or
sub
pop
testb
dec
mov
test
ds
add
loope
push
stos
jp
aam
pushf
or
push
loop
imul
mov
enter
jg
inc
inc
xchg
dec
cwtl
ret
and
or
daa
mov
or
jmp
lret
mov
xchg
fcomip
xchg
rorb
jno
inc
sbb
add
repz
pop
sarl
add
add
nop
orl
fildl
jns
xor
mov
test
or
and
pop
jns
aam
mov
inc
lea
outsb
dec
mov
fs
push
jmp
xchg
cmp
xor
sahf
mov
insl
sbb
repz
mov
icebp
pop
pushl
dec
mov
sub
inc
call
push
insl
mul
mov
jecxz
out
sbb
dec
je
mov
dec
mov
add
mull
fdivrl
adc
sub
cmp
push
mov
scas
bound
pop
fstps
loopne
insb
stos
push
and
pusha
inc
mov
jae
inc
xor
adc
andb
sbb
out
jle
xor
rcl
mov
repz
mov
nop
insb
adcb
fsts
std
cld
enter
into
out
jb
iret
jns
jmp
pushf
xchg
jb
std
aad
or
dec
sbb
bound
aad
xorb
inc
call
sub
nop
add
xchg
push
adc
xor
pop
pusha
add
xor
adc
daa
daa
pop
sbb
cmp
pusha
inc
or
pusha
addl
jge
inc
nop
jo
mov
inc
add
je
jbe
clc
lret
adc
dec
std
inc
mov
jbe
rol
or
shl
xor
add
sahf
xchg
jge
sbb
lret
xor
scas
int
push
repz
inc
lods
xchg
cmpsl
push
mov
out
mov
into
xor
cmp
cmp
mov
sub
lock
mov
lahf
ds
jl
pop
popf
into
xchg
or
xor
fmull
adc
jno
dec
arpl
and
cwtl
out
cmp
js
jl
jnp
mov
cmpsl
jo
dec
or
repnz
sub
sub
adc
pop
outsb
jmp
cs
sub
dec
adc
push
lret
int3
lds
jae
jle
les
xchg
inc
jo
test
test
sub
cmp
int
repz
adc
ja
dec
scas
inc
icebp
dec
pop
cmp
cltd
adc
push
cmpsb
cmpl
loope
mov
sub
mov
and
mov
pop
xorl
shlb
xor
sub
fs
gs
jge
sub
cmp
push
xchg
push
mov
adc
cmc
lahf
inc
test
xchg
inc
insb
shlb
sbb
jb
lock
inc
jns
push
loope
insb
outsb
pushl
out
cmp
lds
dec
xchg
stos
adc
rcll
mov
out
outsb
push
lods
ficomps
fs
pop
lret
and
mov
sub
push
pop
lds
loopne
or
mov
mov
adc
dec
mov
jle
push
xchg
pop
adc
push
ja
out
les
jp
stc
imul
inc
lods
sub
in
ret
fisubrl
inc
mov
xchg
jae
adc
ficomps
pop
mov
in
fisttps
mov
pop
or
test
cmp
xchg
jne
sti
push
and
pushf
inc
decl
push
push
adc
cmp
outsb
push
xchg
movlps
nop
xor
addr16
sahf
fs
leave
or
dec
mov
dec
ja
jb
test
ret
sbb
fadds
push
cmc
sahf
ja
inc
cs
mov
cmpsb
push
movd
xor
test
es
imul
out
inc
mov
cmp
pop
aaa
cltd
sub
fs
jg
xor
cld
inc
mov
loopne
movsl
add
fdivrl
push
mov
cmp
mov
mov
pop
add
stos
cmp
adc
test
stos
fwait
xchg
dec
out
jb
arpl
sub
out
cmp
ds
jecxz
or
jns
sub
dec
ds
or
adc
lret
sub
pop
mov
cwtl
out
jp
inc
roll
push
jae
cs
xchg
aas
ljmp
mov
add
dec
cmpsl
jne
pop
lods
das
insl
xor
push
lret
fidivrl
jp
frstor
sarb
push
jne
inc
push
xchg
fsubs
sbb
and
fucomp
add
pop
mov
daa
xor
pop
cld
lds
push
in
adc
inc
test
pop
and
sbb
shr
xchg
sub
sbb
mov
dec
or
dec
jmp
es
pmuludq
fwait
das
lret
mov
cmp
in
add
mov
mov
das
fs
sbb
out
lcall
iret
ss
fildll
stos
lcall
sbb
pop
fwait
xorps
fcomps
mov
or
mov
adc
stos
mov
inc
jp
in
xorl
push
les
inc
cld
xchg
push
and
rcrl
push
xchg
popf
popa
xorb
fisubrl
call
push
and
jae
xchg
adc
mov
lahf
mov
sahf
stc
dec
push
dec
je
sbb
aaa
test
jge
jge
or
clc
inc
mov
addr16
xchg
fmul
push
add
fucom
jmp
and
or
ror
fucomi
sub
jbe
cmp
mov
sbb
sbb
jl
daa
mov
ret
cmp
pop
sbb
pop
inc
movsl
aas
cmp
dec
jecxz
push
je
jb
ficoms
test
mov
cmp
mov
push
cs
mov
xor
call
frstor
fcmovnbe
iret
pop
fildll
mov
cmpsl
jns
daa
mov
xchg
mov
data16
in
xchg
test
ja
je
mov
imul
sbb
mov
mov
dec
xor
push
mov
sub
iret
pop
add
add
push
fadds
mov
fldl
push
xor
fstpl
cmp
jb
fdivl
xlat
sahf
mov
cwtl
ljmp
jecxz
cmp
xchg
push
aas
or
adc
jne
xchg
jp
imul
aad
pop
cmp
lret
mov
arpl
pop
aam
cmp
sbb
and
sbb
pop
sbb
mov
pop
fdivp
fcompl
dec
sub
loope
fcoms
aas
nop
xchg
mov
push
inc
lea
sbb
or
sbb
iret
nop
add
jne
clc
shl
ds
fimuls
inc
mov
test
mov
push
mov
sbb
lds
inc
call
ja
sub
push
pop
sub
sub
xchg
int3
mov
mov
out
cmp
sub
out
mov
xchg
mov
stos
shll
add
pop
xchg
fstl
lds
add
insl
aad
neg
push
bound
pop
xchg
loope
iret
icebp
cmpsb
scas
sbb
mov
outsb
data16
mov
jmp
and
adc
setb
movsl
xor
add
pop
and
cmpb
insb
and
sarl
sbb
sbb
call
jae
daa
cld
pop
jns
jecxz
sbb
mov
cld
or
pushf
pop
and
jl
ret
sub
imul
jg
jbe
lahf
xor
adc
rcl
movsl
jl
cwtl
in
lcall
xor
and
jns
mov
inc
inc
iret
int3
push
fsubrs
repnz
popf
cmpsb
int
lds
xchg
enter
shrb
or
mov
rolb
jge
cmpsl
inc
pop
add
shrl
and
lea
xchg
mov
push
dec
adc
inc
mov
mov
jmp
push
call
sbbl
ds
sub
dec
outsl
jecxz
mov
aaa
xor
mov
aaa
mov
xchg
pushf
sub
mov
shlb
mov
ljmp
cmpsl
lods
push
mov
add
inc
fs
fisubl
jecxz
je
push
inc
fists
add
fnsave
or
dec
dec
rcrl
adc
das
push
adc
pop
adc
push
dec
lcall
pushf
insb
push
pop
cs
jne
andl
out
outsb
pop
pop
addr16
rol
int3
aad
ss
bnd
repz
adc
lods
dec
xchg
add
xor
pusha
pop
mul
enter
inc
sub
dec
cltd
dec
jns
push
xchg
sbb
ret
jb
push
xor
dec
test
outsl
adc
cmp
and
shll
scas
or
mov
mov
push
xchg
jp
xor
pusha
pop
adc
and
int3
xchg
mov
fldl2t
sti
push
loop
mov
scas
shrb
xor
sbb
daa
add
lcall
mov
fists
gs
jae
push
jno
ret
inc
dec
inc
fnsave
pop
cs
mov
lock
dec
mov
jecxz
popa
loop
add
lret
xchg
or
sbb
inc
pop
xor
imul
ja
adc
cmp
mov
push
inc
stos
loop
mov
stc
sub
pushf
leave
inc
jns
pop
in
cld
dec
rol
and
and
sti
jge
dec
xchg
jo
in
or
cli
ret
jp
stc
fdivl
mov
iret
pop
add
mov
mov
lds
add
xor
ljmp
imul
les
mov
mov
add
mov
dec
jns
shll
fldt
inc
mov
sti
pushf
fcoms
in
inc
cmp
pop
loope
jb
sbb
hlt
sbb
scas
loop
sbb
jae
jmp
xchg
sbb
jmp
mov
dec
loopne
mov
push
clc
pop
inc
push
xchg
and
pop
shl
aaa
adc
aaa
test
mov
call
stc
mov
mov
jbe
repnz
aas
lea
cmp
sar
mov
mov
push
xchg
sbb
gs
cmp
adc
test
ljmp
daa
xor
sahf
add
adc
lret
xchg
les
xchg
faddp
jns
xchg
push
clc
mov
sbbl
push
lds
rolb
cmpsl
jno
pusha
jle
sbb
add
pop
testl
out
cmpsb
push
fisubs
gs
scas
outsb
movsl
pop
sub
mov
jbe
jecxz
and
hlt
loope
lcall
jl
ja
mov
xchg
sub
scas
dec
sub
jge
xor
mov
xor
sub
jbe
sub
jns
test
xchg
jmp
dec
mov
add
adc
xor
inc
cmp
add
stc
rdtsc
push
in
or
pop
inc
and
insb
cmp
dec
cmp
dec
mov
es
subl
sbb
jno
jle
xlat
xor
pop
pop
mov
jp
test
pop
dec
aaa
outsl
bound
lret
dec
xchg
xor
dec
mov
xchg
movsl
icebp
movsl
aad
and
push
in
pop
cli
inc
push
sbb
mov
pop
lods
lret
inc
mov
aad
out
pop
loop
mov
xchg
in
or
ljmp
pop
in
mov
insl
jb
xchg
loope
int
sbb
insl
pop
add
js
dec
inc
push
stos
xchg
jmp
mov
lea
out
lock
mov
push
adc
push
push
sbb
jne
xchg
jmp
sub
loop
mov
xchg
jl
mov
arpl
dec
mov
add
push
cli
int
int
fs
jbe
add
rclb
xor
in
rcrl
add
sub
cld
test
xchg
push
xor
sub
js
std
repz
ds
je
sbb
push
shl
push
jmp
roll
mov
mov
push
or
mov
imul
cmpsb
test
int
xchg
js
test
xlat
mov
or
ret
xlat
aaa
inc
or
add
stos
add
orb
or
sub
dec
outsb
insl
add
and
mov
or
arpl
xor
sub
arpl
in
stc
shrb
or
sub
sub
jecxz
jg
movsb
jmp
or
cmp
jge
sub
push
jl
sub
add
cmp
mov
divb
push
cmp
push
jle
icebp
jl
fcmovbe
rcrl
addl
jecxz
mov
mov
dec
push
jp
les
out
jae
push
loope
gs
pcmpgtd
lock
or
stos
ljmp
fistpll
in
roll
cmp
test
xor
mov
push
fisubrs
mov
adc
push
sahf
adc
mov
enter
xor
jbe
adc
push
push
inc
lods
cmp
imul
pusha
cmpsb
popa
or
cli
cmpb
xor
pop
xchg
mov
sti
popa
rorl
outsb
add
sti
lods
mov
clc
or
sub
faddl
scas
pop
out
test
loop
xchg
out
enter
stos
stos
xchg
sbb
ret
repnz
and
mov
push
aaa
sbb
pushf
lods
les
outsl
pop
ret
jl
inc
jae
daa
cmp
mov
ss
pop
cs
rcll
and
adc
jns
xchg
jae
movsl
adc
jbe
into
stos
jbe
cmc
ss
aas
fadd
leave
cs
iret
enter
pop
int3
iret
or
dec
faddp
inc
out
call
mov
lahf
xor
scas
sahf
sbb
xor
out
fldpi
fwait
in
dec
pop
and
sbb
or
movsb
dec
push
and
pop
in
aas
ljmp
fsub
les
ficomps
idiv
xchg
lahf
adc
inc
mov
pop
and
pusha
imul
dec
adc
adc
jne
repz
cwtl
dec
out
or
mov
push
adc
mov
pusha
shl
loope
jo
adc
mov
xor
jno
cltd
mov
cmp
repnz
jmp
adc
dec
sub
sti
test
rcr
push
bound
hlt
jp,pt
leave
dec
mov
xor
roll
ja
test
cs
jecxz
in
xchg
ret
lock
xor
xchg
ljmp
xchg
mov
pushw
lret
shrl
test
scas
psubsw
mov
hlt
scas
push
shl
pop
xchg
push
cmp
inc
shrb
mov
mov
nopl
bound
jno
cmp
mov
xor
cli
mov
push
mov
rolb
push
add
sbb
dec
addb
cli
cs
mov
fstpt
mov
mov
inc
lods
sbb
incl
and
add
push
adc
fmul
inc
sbb
and
shlb
stos
jne
rcr
mov
out
pop
idivl
inc
sbb
adc
loop
lret
test
imul
or
cmp
xlat
lds
mov
out
shrb
in
popf
inc
rolb
or
in
loope
adc
clc
scas
mov
jae
pop
movsb
imul
mov
lret
xchg
fcompl
imul
xchg
add
dec
hlt
ret
sbb
jg
mov
add
mov
shlb
into
or
xor
dec
out
sbb
int3
adc
jge
push
add
scas
xchg
xchg
out
in
ja
outsb
cmc
repz
data16
cmp
in
cmp
lahf
jne
lahf
add
inc
adc
pop
in
int
sub
daa
add
dec
inc
negb
fsts
cs
sub
mov
cmp
or
je
add
jne
sti
xchg
test
inc
push
or
mov
lcall
add
dec
popa
cli
xchg
cmpsb
mov
lcall
or
jle
dec
mov
sub
and
xor
test
jl
xchg
sub
cmp
pop
les
push
arpl
fisubl
xchg
add
iret
dec
or
icebp
lret
das
decl
mov
mov
mov
out
imul
out
adc
sub
and
in
sti
add
inc
pushf
mov
stc
cmp
pop
add
sbb
shll
sbb
or
imul
je
mov
push
dec
cmc
repz
cmp
push
pop
int3
mov
jno
jmp
inc
or
or
mov
adc
adc
pop
jle
xchg
mov
mov
cwtl
add
fdivrs
mov
pop
cltd
sbb
push
dec
mov
insl
loopne
and
mov
cmp
ret
dec
fmulp
gs
das
add
imul
sarl
lods
push
shll
inc
jo
jle
gs
aaa
push
iret
scas
movsl
hlt
ror
lcall
pop
inc
gs
adc
cli
and
xchg
ss
movsl
cmpsl
shrb
sub
dec
mov
push
mov
bound
sbb
lea
rcrl
mov
bound
aad
call
addr16
xchg
shll
xchg
mov
scas
cmp
mov
jle
and
cltd
add
or
int
jbe,pn
lcall
and
call
xchg
mov
mov
jo
xchg
jae
dec
cld
lock
push
jle
mov
int
xor
sti
mov
in
fs
notl
in
mov
xchg
int3
lock
jle
xchg
adc
divl
cmp
dec
xchg
ljmp
jle
aad
enter
movsb
mov
dec
in
mull
jno
sbb
xchg
jle
scas
fxch
pop
into
xor
sub
mov
sub
mov
ret
sub
inc
sahf
xchg
icebp
cmpsb
jne
les
or
stos
ds
mov
cmc
leave
pop
sub
push
test
rcrb
out
cltd
pop
sub
clc
sti
mov
xchg
xchg
dec
scas
inc
dec
fildl
jne
clc
bound
movsl
popf
notl
ja
inc
xor
mov
dec
js
and
xchg
nop
inc
mov
pop
cmp
mov
lods
pop
test
iret
pop
mov
dec
jb
cmc
std
std
jns
fistl
loopne
and
pushf
rolb
ss
pushf
adc
lock
sub
or
bound
in
popf
push
sbb
pop
mov
jns
xchg
insb
push
mov
aaa
ja
pushf
mov
inc
js
addr16
bnd
fs
cmp
xlat
xor
mov
lret
cli
test
mov
cmpsl
xor
add
push
repz
cwtl
xchg
icebp
cwtl
xchg
loop
and
cmpsl
cmp
aaa
out
push
aam
cmp
or
jge
repz
sbb
repz
repnz
mov
fstpt
mov
mov
inc
les
or
push
pop
inc
adc
jmp
cmp
push
loop
imul
mov
jbe
mov
lods
ret
popf
inc
dec
aad
add
lods
mov
rcll
sbb
pop
mov
sub
xchg
aas
nop
cmp
in
loope
nop
mov
fists
lahf
jb
add
xchg
pop
xor
mov
sub
xor
daa
sub
mov
xor
xor
rolb
adc
sub
cmpsl
movsl
add
loopne
adc
mov
mov
add
js
push
fsubrl
sbb
push
jmp
fwait
lds
jns
fadds
dec
in
mov
xor
mov
sub
mov
ljmp
iret
pop
mov
or
popf
je
mov
xorl
andb
push
lcall
shlb
out
cmp
dec
insb
adc
loope
push
pop
mov
sti
imulb
xor
xor
xchg
lea
mov
dec
fs
aam
add
shlb
rcl
pop
ljmp
es
mov
jle
out
add
stos
cmp
cmpsb
mov
xor
iret
pop
jmp
shrl
push
fnstsw
icebp
gs
xor
jge
sub
insb
add
mov
in
imul
lock
xchg
pop
insb
pusha
mov
sahf
mov
pushl
xchg
lret
loop
dec
sub
jge
push
stos
mov
repz
dec
pop
out
cmpsl
push
sub
mov
shr
pop
faddp
mov
pop
out
aas
or
popf
jno
imul
mov
jo
pop
jl
pop
sbb
mov
mov
and
rorl
cmp
pop
call
dec
std
push
out
cmpsl
mov
popf
or
insl
jle
nop
loope
pop
imul
xchg
sahf
inc
jo
xchg
inc
jnp
xchg
andl
cmc
out
jb
cmc
loope
adc
jmp
stc
sarl
imul
or
leave
imull
mov
dec
pop
jne
cmp
xchg
loopne
push
imul
arpl
cmp
lcall
repnz
ljmp
mov
jmp
and
aad
push
inc
cmc
mov
insl
adc
mov
rcrb
pop
dec
loope
out
ja
repnz
push
and
inc
mov
imul
lret
and
loopne
mov
ss
lods
test
test
shll
mov
add
lret
fwait
jg
rolb
inc
jg
movsb
mov
outsl
inc
addr16
in
add
bound
inc
xchg
push
int3
adc
and
jl
fwait
rol
dec
cmp
dec
mov
clc
rolb
mov
jl
jle
sbb
movsb
push
or
lods
fstpt
sub
test
shll
stos
daa
xchg
xor
push
ficomps
inc
and
pop
sbb
js
fisubrs
xor
mov
aas
xchg
cmp
pusha
push
stos
out
dec
lds
or
icebp
sbb
inc
mov
call
imul
das
test
xor
cmpb
cli
loope
fistps
add
jge
inc
cltd
cld
in
flds
mov
mov
fwait
xchg
xchg
sarl
arpl
insl
xchg
jg
mov
dec
ja
mov
jbe
jne
add
xchg
inc
xchg
sub
test
and
fisttps
mov
sub
dec
sub
outsl
rcll
and
outsb
in
imul
lcall
xchg
mov
out
pop
inc
xor
stos
xlat
scas
sub
repnz
aas
adc
andl
iret
in
cmp
stos
xchg
int3
sub
ret
dec
std
outsb
or
sbb
sbb
push
ret
or
adc
pop
scas
xlat
leave
out
lret
pop
sbb
pop
jg
rdmsr
adc
sub
push
je
sbb
xor
iret
mov
insl
addr16
out
lahf
in
roll
outsl
lret
push
cmp
repnz
inc
xchg
pop
sub
cmpsb
inc
dec
insb
imul
push
rcrl
adc
dec
push
mov
test
aaa
xlat
ljmp
test
mov
stc
repnz
xor
jg
vpmacsswd
xchg
adc
cli
mov
adc
push
aam
roll
enter
out
adc
rdpmc
add
hlt
xor
jns
lock
xchg
out
fnstenv
fnstsw
loop
pop
aaa
push
mov
jl
imul
xchg
es
sub
call
cli
sub
das
orl
xchg
or
test
dec
shlb
cs
xor
ror
pusha
mov
andl
xchg
out
add
xchg
xlat
ret
sti
mov
insb
xor
xchg
xor
pop
loopne
push
je
mov
popl
sbb
cmp
outsb
fdivr
mov
dec
test
fs
mov
pop
pop
bound
jle
mov
jns
mov
pop
pushl
test
imul
adc
and
add
sti
push
mov
nop
push
rcrb
enter
ret
popf
sbb
sbb
cltd
mov
cmc
pop
jge
jb
iret
inc
dec
pushf
lock
in
inc
sub
jl
add
cs
inc
add
das
jb
mov
adc
iret
pop
pop
popl
and
sbb
into
stos
jp
jge
push
loopne
out
mov
mov
popf
dec
mov
cld
push
sub
dec
add
lcall
fsubrp
es
sti
xchg
iret
dec
sub
sbb
mov
dec
pop
pop
jne
xchg
lcall
adc
divb
lea
push
fstpt
and
fldt
adc
outsl
mov
mov
loope
pop
addr16
and
rcrl
xor
pop
dec
mov
popa
das
sbb
call
leave
in
ret
jno
addr16
popa
cmp
inc
test
testl
imul
movsb
adc
repnz
movsb
loopne
jb
mov
mov
jl
sti
ret
out
prefetcht0
test
inc
lods
sbb
popa
mov
inc
cmpb
jmp
jl
xor
std
popf
mov
push
cwtl
sub
repnz
sbb
int
sahf
idiv
sbb
sub
or
xchg
subl
jecxz
fs
xor
inc
ficompl
pushl
mov
in
xlat
dec
ds
sbb
push
lea
std
push
xor
insl
pop
repz
nop
xchg
push
lods
mov
push
inc
jmp
std
push
jb
daa
pop
mov
test
nop
sbb
in
ds
loopne
xlat
cmpl
xchg
into
dec
pop
je
inc
out
nop
jb
cs
push
pop
es
jo
xchg
jo
outsl
test
ljmp
mov
imul
imul
sub
cmpl
repz
ret
dec
fiaddl
inc
cmp
push
or
insb
or
push
add
mov
cmc
shl
cltd
je
lahf
xchg
cmp
shrb
in
and
xor
cltd
xchg
and
lret
and
cmp
mov
movl
fistpll
mov
mov
mov
dec
mov
mov
mov
push
sub
mov
fsubrs
xchg
aad
in
add
arpl
fdivrl
dec
xchg
adc
sbb
lods
push
in
pop
mov
jg
pop
cmp
push
sbbb
pop
lock
rcrl
xchg
mov
test
push
fs
mov
test
dec
sub
fcoms
jge
testb
addr16
push
xchg
iret
push
adc
js
dec
pop
mov
mov
pop
mov
in
out
clc
imul
aad
jne
xchg
xchg
out
popa
lret
sbb
adc
stos
push
and
mov
test
stos
mul
shrl
push
mov
lods
push
inc
shrb
lahf
loope
xchg
aaa
pop
lret
push
in
sbb
or
aas
out
and
dec
sub
mov
xchg
leave
jbe
aas
dec
lds
int3
jmp
push
iret
test
jae
pop
int3
fyl2x
cmp
fsubrs
push
mov
mov
cmp
test
push
mov
out
addb
or
out
sub
popa
mov
sub
mov
mov
mov
pop
xchg
sub
dec
jmp
ja
or
scas
repz
cmp
inc
divb
hlt
icebp
pop
pop
loopne
and
dec
frstor
cmp
jle
inc
xorl
push
rcrl
cmpl
dec
in
xor
loop
cmp
mov
sahf
ror
fstpt
and
and
aaa
xor
mov
xor
xchg
jl
pop
cmc
sbb
cmp
loop
test
push
in
push
jns
cmp
subb
push
lea
cmp
mov
adc
jmp
test
mov
push
fwait
xor
cmpxchg
xor
insb
arpl
pop
rclb
mov
mov
ffreep
pop
sbb
and
lea
and
fs
sub
clc
pop
int3
mov
jbe
sub
or
data16
and
loope
and
dec
sti
aaa
sbb
scas
mov
insb
xchg
add
popa
pusha
mov
mov
outsl
inc
mov
das
inc
sbb
mov
fwait
and
add
lret
jge
outsl
jecxz
push
xor
fadds
xor
testb
dec
lahf
xor
mov
cmpb
aaa
mov
fwait
adc
jnp
in
sub
pop
pop
mov
pop
mov
or
cmp
stos
clc
in
xor
or
push
lods
stos
cs
jl
mov
pop
in
aam
cmp
cld
lods
arpl
mov
jnp
or
cmpsl
mov
lcall
aas
data16
or
fcmove
cld
hlt
das
adc
sub
stos
std
pushf
loope
stos
and
mov
fisubrs
orb
sbbl
out
xor
mov
adc
movsb
jnp
arpl
xchg
out
or
sarb
xchg
pop
fwait
cld
ds
or
in
adc
lcall
test
mov
push
movsb
jmp
xchg
lea
xchg
mov
push
repz
mov
loop
ds
mov
mov
adcl
pop
test
xchg
add
jmp
nop
ret
add
jo
xor
ja
lds
jecxz
cltd
out
lock
sqrtps
pop
shrl
xchg
mov
push
aad
fmulp
data16
pop
jbe
xor
add
mov
inc
mov
pop
sarb
add
enter
pop
cmpsl
inc
sbb
xchg
inc
cwtl
in
dec
hlt
std
cmpsl
lret
sbb
xorb
cmc
dec
pop
dec
fisttpl
aad
add
mov
mov
sub
fisubrs
push
push
xchg
shlb
loop
pop
sahf
sti
rcll
mov
add
xchg
in
push
test
sbb
sub
aaa
jl
ja
cmp
cltd
movsl
jmp
or
sbb
clc
sbb
inc
or
aaa
mov
xor
xlat
inc
in
ret
test
or
jp
adc
cmpsl
cmpsb
je
cmc
outsb
xchg
or
ss
rorb
pop
inc
sti
push
hlt
xchg
clc
add
dec
adc
arpl
xchg
mov
xchg
adc
outsb
bound
js
bound
cmp
xor
cmc
stos
sbb
push
into
pop
inc
adc
out
mov
in
and
data16
fs
push
insb
dec
inc
lock
cmp
push
sbb
inc
ss
and
dec
dec
dec
testb
jp
nop
imul
test
add
or
jl
jmp
dec
xchg
pop
ljmp
sbb
daa
fdiv
arpl
cmp
shll
stos
sub
or
das
call
leave
lods
int3
inc
sub
mov
bound
cli
jb
or
out
jns
test
cs
inc
les
lahf
test
pushf
sub
or
cmp
adc
cmc
sbb
fst
or
in
cmp
rcll
stc
int3
in
and
mov
outsl
add
es
push
lea
shrl
into
adc
sbb
mov
push
and
rcrb
adc
and
pop
inc
jbe
and
sub
mov
mov
aam
inc
pusha
mov
and
insb
mov
gs
sub
jo
or
pop
repnz
xchg
cmpl
insb
cmp
rolb
dec
aaa
and
sahf
xchg
mov
arpl
pop
popa
out
lock
pop
cld
ljmp
testb
sub
insb
das
hlt
xlat
push
cmpsb
loope
cmp
dec
fs
xchg
in
out
pop
sbb
sub
test
xchg
dec
cmp
mov
scas
inc
sub
sahf
xchg
rorl
ret
loop,pn
call
push
sub
std
out
movsl
sbb
lds
inc
xorb
and
scas
dec
jns
shl
loope
cmpsb
orl
push
les
push
pop
sbbb
xchg
movsl
add
and
lods
xchg
loope
sbb
pop
cmp
push
push
cltd
in
cld
sarl
ja
fcomps
xchg
ljmp
xchg
pop
cltd
rorb
push
pop
shrl
sbb
fistl
sbb
pop
ljmp
lret
ret
and
mov
inc
push
jae
lahf
rdtsc
daa
or
dec
lds
or
cmp
jg
insl
xor
and
push
je
and
sahf
cmp
pushf
or
cltd
mov
jno
pop
loope
lock
xchg
inc
ljmp
leave
test
cmp
clc
outsb
rcl
notb
subl
add
pop
daa
and
ficoml
je
jp
cmpsb
sbb
inc
inc
dec
dec
inc
push
xchg
in
jmp
mov
inc
mov
push
cmp
ret
dec
lret
cmp
jl
mov
jb
mov
mov
mov
mov
aas
dec
sbb
das
push
sbb
sbb
mov
negb
pushf
cmp
imul
cmpsb
mov
jb
add
mov
sbb
mov
sti
imulb
push
xlat
hlt
sbb
mov
sbb
cs
xor
cwtl
sub
fldenv
addr16
mov
int3
lcall
fildll
inc
mov
es
imul
adc
push
lds
inc
cmp
push
mov
fistl
out
loop
mov
cmp
push
repnz
pushf
inc
fstpt
test
ret
sbb
ja
or
push
and
mov
mov
mov
lahf
xchg
xor
arpl
and
imul
loopne
mov
clc
xchg
ret
ds
sbb
xor
cmp
xchg
sahf
out
les
add
out
sbb
mov
push
pop
ret
out
addb
jecxz
and
adc
rcrb
stos
pusha
maskmovq
idivl
test
add
mov
icebp
out
cli
sub
push
adc
add
cmpsb
popa
rorl
cmpsb
xchg
fcmovnu
shll
mov
push
mov
inc
addr16
iret
dec
scas
sub
and
sub
leave
popf
pop
pop
out
es
ret
push
cwtl
sbb
mov
mov
mov
xchg
mov
mov
xchg
jge
test
hlt
mov
jmp
fnsave
mov
movsl
lds
lahf
sbb
mov
cmp
inc
ret
xchg
insl
nop
insl
jmp
xlat
addr16
stc
inc
mov
ficoms
sub
movsl
push
push
out
cli
pushf
sbb
or
jmp
movsb
lods
loopne
ret
add
push
push
stos
outsl
stc
sub
jmp
pop
cmp
push
push
push
bound
pop
mov
add
fidivl
jge
add
insb
dec
sbb
jns
fcmove
out
sbb
out
enter
xor
mov
test
orl
adc
add
xor
dec
add
jno
scas
inc
xlat
push
mov
pop
in
icebp
push
clc
aam
mov
dec
xchg
int3
xor
xor
adc
jge
cld
out
testl
aas
xor
pop
stc
aad
xchg
or
int3
pop
insb
sub
je
adc
addr16
arpl
clc
push
mov
jb
mov
in
movsl
push
test
cmpsb
sub
scas
rol
add
in
inc
movsl
pop
jne
dec
push
fs
cmp
add
mov
int
movsb
jg
push
test
out
into
dec
and
push
xchg
adc
subb
mov
xlat
mov
pushf
mov
outsb
push
lret
push
leave
inc
and
lcall
pop
shll
popf
jno
mov
mov
jno
adcl
es
test
out
dec
add
sub
addr16
imul
loopne
jg
in
or
dec
pop
imul
xchg
sbb
scas
lea
bound
sbb
out
push
cmp
ret
mov
pop
sub
lahf
inc
insl
mov
addr16
mov
shl
sbbl
add
mov
mov
aas
sbb
aas
mov
adc
scas
add
dec
lret
push
mov
xor
stos
lret
ja
jnp
pop
cmpsb
nop
cmp
pop
insl
rol
lahf
cmp
pop
repnz
cmp
push
ja
movsb
outsl
push
pop
push
jle
mov
je
pop
jecxz
lods
jnp
pop
cmpsl
jne
sub
push
push
out
sub
mov
push
inc
test
jmp
fbld
dec
shl
je
nop
popf
insl
data16
and
loopne
ret
cld
jle
mov
lods
cmc
xor
jae
sbb
jge
lahf
push
mov
mov
cmpb
cmpsl
add
ljmp
arpl
mov
inc
mov
mov
jl
dec
lea
pop
xor
cmpsw
sbb
jmp
hlt
and
and
sarb
mov
mov
lret
repnz
jnp
xor
stc
sub
sub
pop
div
lock
ss
fs
add
mov
jmp
fdivl
mov
sbb
sbb
adc
movsb
jge
addl
jge
add
sbb
mov
jp
adc
sbb
mov
xor
gs
push
xor
movsb
test
jno
jge
push
dec
rol
pop
pop
adcb
mov
rorl
mov
cmpb
leave
outsl
push
push
inc
sbb
and
loopne
push
jo
out
mov
hlt
dec
adc
pop
lret
cmp
and
aaa
mull
test
cli
inc
xor
lea
in
xchg
mov
filds
pop
outsb
mov
inc
icebp
sub
push
iret
std
push
dec
pop
cmp
jnp
ficomps
xor
popa
popa
mov
shl
cmp
dec
es
outsl
jecxz
aas
push
sub
add
jne
cs
cmc
test
movups
xor
cmp
sbb
das
cmc
push
adc
mov
sub
or
cli
into
fnstenv
pop
aad
mov
fldt
je
ljmp
outsb
lret
mov
or
jecxz
pop
lretw
inc
mov
mulb
dec
xchg
push
fs
ljmp
popl
mov
mov
popf
xchg
dec
cmp
push
jle
xor
push
mov
or
xchg
sti
pop
or
scas
das
cmpsb
mov
mov
loope
lds
stc
aam
call
push
push
cmp
fldt
push
test
mov
mov
sbb
cs
pop
mov
xor
mov
push
fnsave
jge
mov
mov
adc
jmp
mov
jmp
rol
inc
sbb
test
sub
pop
xor
mov
in
fwait
or
fwait
gs
subps
xor
mov
enter
movsl
orb
ror
movsb
push
mov
ror
adc
mov
dec
xor
cmpsb
fwait
int
pushf
gs
cmp
adc
xchg
xchg
dec
adc
push
dec
adc
mov
push
cmc
and
aam
popa
daa
negb
cmc
enter
push
add
adc
jl
xorl
adc
cmp
fdivs
insl
mov
in
out
outsl
or
imull
das
scas
xchg
lret
sbbl
mov
sti
mov
jae
int
cmp
cmpl
cltd
clc
test
les
add
mov
shrl
addr16
sarl
pusha
inc
aad
jmp
in
inc
cmp
aad
pushf
sub
cld
adc
jne
scas
lret
inc
or
push
cwtl
sbb
dec
dec
xchg
not
in
mov
jno
jmp
and
or
out
in
mov
push
and
sub
push
pop
rolb
jp
xor
idivl
in
aam
cmpsb
dec
insl
jbe
pushf
sti
aas
int3
mov
dec
dec
sarl
inc
jne
or
adc
out
mov
push
xor
add
fstpl
sbb
sbb
lods
dec
pop
fadds
mov
imul
cmp
ret
jle
push
or
push
ljmp
rcl
and
ret
test
push
sti
pop
adc
pop
lahf
jno
fwait
shll
test
imul
cmp
mov
es
inc
jge
and
add
inc
push
mov
bound
inc
pop
xchg
sub
xlat
adc
dec
int
mov
cmp
lahf
outsl
sbb
jo
lods
call
jmp
sti
enter
scas
aad
mov
cmp
dec
fadds
mov
mov
jge
xor
roll
xchg
out
xor
push
cmp
or
xor
pop
lcall
sub
inc
sub
mov
fcmovnb
in
aaa
pop
mov
and
int
sbb
cmp
lahf
rcr
sbb
jg
adc
stc
js
jbe
negl
mov
push
movl
iret
fcomp
add
cld
xchg
sub
pop
stc
mov
ljmp
xchg
lret
jns
jecxz
inc
xchg
mov
fcmovne
je
test
sbb
imul
cmp
daa
pop
inc
stos
lock
sbb
xlat
imul
lods
sub
ljmp
inc
adc
je
ja
lea
test
pop
or
xor
adc
pop
jmp
or
decb
mov
lods
popa
faddp
lods
push
xor
fdivrl
mov
mov
xchg
cmpsl
mov
nop
pop
push
je
aam
ret
sbb
mov
sbb
xchg
fcoml
inc
xor
xor
fsub
lds
imul
pop
or
xchg
movsl
add
inc
mov
mov
mov
or
jg
xlat
pusha
jnp
pop
jecxz
into
cmp
jmp
sub
pop
sub
rcrl
sbb
in
mov
sub
xchg
push
dec
xchg
jno
cmpsl
inc
sbb
dec
lods
or
mov
inc
lea
iret
enter
xchg
push
xchg
xor
imul
lods
std
jg
mov
clc
push
shlb
mov
xchg
insb
cmp
clts
jae
mov
cmp
bound
ficoms
cli
pop
lret
popf
insb
push
mov
inc
xor
dec
test
mov
rcll
fs
loope
mov
dec
inc
mov
orb
std
cmp
xchg
std
xor
aad
sahf
pushf
adc
xchg
push
push
jp
jge
add
mov
in
sub
jo
in
ljmp
xchg
jge
cmc
xchg
xorl
sub
jle
ret
sar
push
cmc
mov
bound
add
test
pop
dec
mov
negb
dec
xchg
aas
push
sbb
out
add
mov
stc
mov
popl
add
jmp
adc
gs
mov
jno
aad
shrb
shl
out
mov
pop
sub
cltd
imul
inc
leave
idivb
cmc
stc
aas
imul
pop
mov
push
mov
xchg
mov
cmp
cmp
fs
mov
push
sbb
cmp
jbe
mov
lods
dec
inc
lret
imul
dec
mov
jecxz
pop
dec
cmp
stos
repnz
xor
jecxz
or
or
jmp
nop
sbb
pusha
xor
ds
repnz
das
or
sbb
mov
lds
lret
int
sti
sbb
and
adc
jl
sub
jmp
sti
aam
add
fcoms
xchg
or
fisttpl
sub
adc
push
outsl
pop
es
mov
mov
or
arpl
push
inc
fsubrp
lods
fbld
test
jbe
lret
shll
imul
fs
nop
sub
adc
mov
lea
pop
movsb
sbbl
pop
sbb
pop
dec
stc
mov
mov
cmp
lcall
roll
inc
cltd
jb
inc
and
aaa
shlb
ja
roll
scas
int3
mov
inc
inc
lods
addr16
dec
sahf
insb
and
sub
inc
mov
pop
pop
jle
int
mov
dec
pop
cmp
pop
mov
jp
sub
cmp
lret
inc
and
cltd
jl
adc
std
or
icebp
mov
js
das
mov
lods
call
lock
ret
pop
mov
and
sbb
test
dec
sub
mov
mov
aam
data16
insb
jg
cmp
andb
es
js
push
and
sbb
and
add
jae
sbbl
cltd
lea
stc
loopne
pop
add
mov
orb
xor
stos
pop
dec
mov
rcrb
lret
mov
cmp
mov
aas
icebp
scas
arpl
push
add
loope
std
lods
addr16
icebp
flds
fs
push
add
sbb
out
add
inc
xor
dec
jp
vsqrtss
push
push
jns
inc
test
imul
orl
sti
cli
sarl
test
int3
push
shll
int3
xchg
ds
repnz
lahf
dec
movb
mov
xchg
mov
rcl
lea
cmc
xchg
cli
and
adc
lds
rol
call
lret
mov
int3
xchg
push
sti
adc
push
push
in
lcall
or
outsl
push
adc
xor
mov
movsl
and
subl
popf
cs
jmp
push
add
ds
ss
and
mov
fwait
xchg
cmp
jns
add
cli
add
outsl
nop
adc
sbb
scas
lods
xorb
mov
daa
xchg
btc
mov
push
mov
xchg
xor
sbb
rcr
cmp
orl
xor
cmp
call
outsl
jne
xchg
lods
mov
add
ficoml
push
pop
xor
jb
bts
iretw
inc
jg
adc
aaa
fmulp
xchg
jno
lock
mov
inc
aam
popf
or
xor
mov
and
sarl
or
addb
adc
cs
les
int3
in
repz
push
js
adc
enter
iret
push
dec
xchg
insl
rcrb
std
push
mov
mov
mov
adc
ret
mov
or
adc
mov
es
pop
jnp
jl
rcl
hlt
mov
pop
sbb
test
xor
add
dec
loope
add
ja
jp
cmp
mov
mov
popf
or
pop
or
fisttpll
arpl
mov
pop
gs
mov
lahf
cmc
cs
shr
or
dec
hlt
pop
dec
enter
lcall
ds
add
jno
mov
test
push
sub
or
fcos
leave
push
mov
adc
jl
popf
pop
add
frstor
pop
add
daa
sti
fistpll
adc
xor
sbb
jge
pop
bound
add
pcmpgtd
push
push
mov
add
into
ret
fdivp
loopne
or
xchg
js
jne
mov
mov
push
inc
lea
js
setne
add
sub
cld
cmpsb
ret
inc
or
shlb
dec
or
lock
mov
jnp
ds
in
inc
arpl
bound
sbb
cltd
popa
sbb
fnsave
inc
popf
outsb
div
dec
dec
and
cpuid
lret
sbb
add
or
iret
mov
push
sbb
add
aaa
les
and
sbb
xchg
lret
adc
imul
pop
out
xor
cmpsl
loope
addr16
dec
insl
popa
cld
clc
das
jno
jbe
scas
sbb
ror
pop
cld
xchg
out
mov
mov
xor
pop
dec
adc
push
mov
rcll
pop
xchg
sub
ret
mov
mov
pop
sbb
xchg
sub
movl
aas
jg
push
mov
xor
cmp
adc
ret
jle
in
xlat
out
aad
mov
mov
push
xor
fsubl
outsb
scas
mov
fptan
fwait
cli
sub
ds
sti
imul
inc
push
cwtl
in
insb
pop
mov
xor
imul
hlt
mov
mov
xor
inc
fiaddl
inc
test
popf
xchg
dec
pop
xchg
sbb
sub
pop
pushf
jp
mov
fidivl
jle
xchg
ror
std
scas
jbe
movsb
rorl
mov
and
divb
aas
inc
leave
dec
mov
sbb
insb
fsubl
cwtl
adc
jg
mov
outsl
sub
push
pusha
cmp
mov
add
pushf
adc
fucomi
iret
popl
lea
out
inc
push
outsb
lret
inc
add
sub
dec
push
jb
flds
mov
mov
xchg
push
add
add
sbb
in
xchg
push
xchg
dec
dec
test
xchg
sub
cmp
dec
push
push
mov
cmpsl
mov
inc
pop
jne
lds
mov
push
sub
jo
and
sbb
add
pop
cmpl
movsb
push
nop
or
and
je
and
sub
data16
test
jns
test
xor
pop
jle
shl
mov
inc
push
mov
pushf
xor
push
clc
push
mov
scas
enter
imull
sub
popa
jne
adcl
mov
jge
push
add
xor
out
dec
mov
or
and
push
jo
lahf
test
dec
clc
pop
and
pop
out
out
add
or
inc
es
jo
int
loope
cmp
push
out
test
dec
cmp
jo
stc
mov
stc
sbb
sbb
movsb
fiaddl
or
lea
jnp
ljmp
push
ret
mov
sahf
sbb
push
push
push
idivl
and
or
sarb
inc
addr16
sahf
sbb
inc
dec
fidivl
mov
and
mov
int
mov
adc
fstpt
test
out
inc
inc
push
jmp
cli
lahf
sbb
lock
sahf
mov
cmp
fistl
fnstcw
xor
cltd
inc
mov
jl
pop
imull
mov
sub
jbe
repnz
inc
mov
mov
add
out
adc
stos
cmpb
ljmp
bnd
push
aaa
push
test
sbb
cs
and
scas
or
cli
das
pop
adc
and
and
div
sub
leave
pop
mov
jae
loopne
or
mov
jbe
std
inc
hlt
add
jnp
add
test
out
aad
stc
aam
les
out
push
cmp
les
pop
rcll
mov
pop
dec
and
sbb
test
std
sti
ds
xlat
xlat
pop
leave
push
xor
sub
div
pop
push
jge
loope
loop
adcl
sub
mov
and
and
or
pop
xor
sbb
es
sub
out
mov
les
add
mov
xchg
leave
sarl
pop
nop
sub
mov
jne
bound
mov
mov
cmp
pop
repnz
into
dec
fs
adc
and
pusha
faddp
arpl
sub
xchg
push
push
int
insl
test
push
sarb
adc
adcl
fiaddl
cltd
shrl
cmp
mov
and
movsl
mov
ret
lahf
push
gs
mov
add
push
jb
ror
mov
roll
mov
subl
mov
into
and
jb
mov
dec
movsb
test
sahf
sbb
mov
icebp
rclb
adc
and
imul
lods
sbbb
inc
inc
cmc
mov
fcmovbe
mov
push
push
lret
sub
jp
pop
jb
jns
inc
sub
bound
xor
jo
arpl
push
loop
rorl
sahf
inc
sbb
sti
out
popa
into
inc
and
jl
and
cmp
mov
fwait
and
push
cmpsl
jbe
inc
jo
cltd
dec
icebp
repnz
mov
add
push
lcall
inc
out
shlb
out
add
xchg
xlat
cmpb
or
aam
pop
xor
lahf
sub
push
dec
or
loopne
or
incl
jge
mov
xchg
int3
lcall
mov
movsl
in
pusha
mov
push
fcomp
adc
jbe
cmpsb
pop
out
jp
sub
and
hlt
push
loopne
lock
pop
or
dec
and
lea
jne
jle
mov
dec
and
insl
test
xchg
mov
push
loop
xchg
and
push
push
mov
jo
xchg
das
dec
fldl
push
adc
mov
lods
loop
inc
dec
test
aas
outsb
out
and
xor
mov
push
and
and
loopne
movsl
sbb
inc
sahf
arpl
test
mov
cmp
adc
or
rclb
mov
nop
mov
mov
adc
sub
ds
out
sbb
add
xchg
push
loop
add
xor
mov
loope
out
jno
push
xchg
pop
sti
test
adc
sbb
lret
mov
push
pop
popf
sub
dec
mov
dec
cmpsb
or
add
lret
ltr
imull
mov
sbb
lahf
pop
jl
pop
enter
call
jl
in
sbb
pop
iret
ljmp
sub
sbb
pop
popf
subb
test
adc
jmp
repnz
add
jmp
popa
mov
movsb
xchg
movsl
ror
mov
xor
lock
jno
jle
push
jmp
insl
rolb
xchg
xor
scas
test
jge
pop
insl
inc
sub
dec
stc
add
add
hlt
imul
xor
mov
xor
add
das
aad
push
push
mov
push
adc
fbstp
mov
ss
dec
cmc
mov
push
jge
lret
iret
cmp
ret
adc
adc
cmp
outsb
stos
mov
je
push
mov
iret
pop
popf
push
mov
out
lret
fistpl
subl
jnp
rorb
pop
lcall
or
lods
inc
aas
scas
or
adc
adc
mov
fsts
sub
jge
scas
jb
popa
imul
mov
dec
cmp
das
sbb
fisubs
nop
dec
out
cld
cmpl
inc
imul
jmp
loop
fstpt
int
or
hlt
mov
jo
xchg
cmp
or
mov
jbe
dec
lock
jae
lock
cld
fcom
insl
or
or
jge
xlat
mov
lret
mull
xchg
push
das
jbe
cmpsl
fsubs
jecxz
jae
insb
test
imul
mov
or
les
fnstenv
ffreep
mov
test
mov
lds
in
add
mov
cmovbe
or
int
dec
or
mov
inc
add
scas
push
dec
negl
push
mov
stos
les
daa
sub
loop
and
jnp
andb
mov
xor
scas
test
push
roll
stc
xor
imul
cmpsl
repz
insb
int
mov
or
hlt
rclb
add
adc
inc
xchg
pop
mov
imul
rcrl
ret
and
in
lock
and
push
retw
cwtl
test
cmpsl
sbb
dec
movsl
pusha
lds
add
scas
lret
lret
mov
jge
outsl
sbb
dec
mov
fsubs
inc
sti
nop
movsb
sub
ljmp
scas
and
scas
pop
scas
cmc
xchg
pushf
push
jno
sbb
lcall
pop
sub
cs
insb
pop
test
ljmp
int
xchg
ljmp
push
repnz
and
in
rcrb
or
loope
adcb
jecxz
test
out
dec
mov
fnsave
out
jg
out
mov
in
enter
sti
loopne
push
push
movsb
mov
popf
das
movsl
ds
xchg
sbb
mov
pause
xchg
fiaddl
jecxz
add
cmp
add
das
bound
inc
inc
out
imul
adc
adc
leave
fwait
cmp
mov
pop
inc
jecxz
js
loopne
and
sub
mov
fwait
aad
orl
jno
adc
negl
mov
pop
out
mov
mov
sbb
sub
push
push
adc
inc
and
js
push
icebp
xor
pop
stos
call
sahf
scas
sub
mov
mov
cmpsb
adc
lea
lea
add
add
scas
out
mov
mov
jle
ficoml
or
jge
jge
mov
cmpsb
mov
imulb
cmc
mov
repz
shlb
movsb
mov
dec
sub
cmp
shlb
and
bound
and
das
sbbb
scas
fdivrl
adcb
je
pushf
aad
stc
stos
mov
dec
push
jg
sarl
jp
adc
pop
push
mov
add
cmp
pop
mov
pop
cli
fidivrl
aaa
xchg
roll
shr
pop
rorl
pop
movsl
xchg
pusha
xor
out
int3
or
lea
or
jge
xchg
fwait
int3
lods
lock
in
cmp
adc
imul
xchg
imul
sbb
mov
fsubrl
pop
pop
and
adc
sub
subl
in
sub
inc
pop
out
fldl
int
in
lret
lea
mov
mov
or
inc
rcrb
xchg
cmp
test
repz
push
mov
mov
jae
cmpl
xor
inc
pop
or
jp
movsb
and
cltd
fs
push
push
lea
out
xchg
andb
mov
push
mov
xlat
std
xlat
lret
divl
push
xchg
aad
lret
pop
inc
fsubl
or
xor
dec
lds
push
pop
loopne
push
lcall
push
dec
mov
fdivr
roll
in
pop
sbb
inc
ret
fisubrs
mov
mov
jg
scas
mov
es
mov
xchg
or
addr16
xchg
jbe
out
add
loop
lcall
mov
cmp
lods
sub
mov
nop
cmpsb
and
jmp
scas
jb
jb
imul
std
pop
adc
insb
and
mov
and
stc
xchg
push
jge
add
and
xlat
mov
loopne
sbb
insl
inc
inc
adc
int3
lea
stos
push
push
dec
push
sub
loope
je
std
addr16
jo
mov
out
lea
pop
daa
pop
or
push
psubd
lea
dec
mov
mov
hlt
loope
cli
cmp
aas
sti
and
mov
jae
inc
call
or
sbb
cmpsl
dec
adc
mulb
ds
jbe
hlt
push
aam
jecxz
out
pop
jnp
cs
rcrl
cmp
iret
lahf
sub
out
jbe
xor
lcall
andl
jnp
dec
loope
sub
jg
xchg
inc
pop
cs
movsb
dec
stos
inc
sar
jb
sbb
dec
push
clc
sub
jecxz
pushf
in
mov
or
mov
dec
es
shlb
pop
mov
int3
inc
mov
inc
stos
hlt
dec
mov
movsl
xchg
inc
sbb
notl
jmp
adc
sbb
mov
pop
sub
fldz
and
aam
mov
jg
movsb
cmc
mov
lret
mov
cmpsl
lcall
inc
adc
push
ret
dec
push
ficoms
aaa
sub
addr16
daa
popf
sub
adc
mov
in
orl
insl
in
sarl
mov
psraw
incb
cli
stos
outsb
inc
lret
mov
pusha
push
add
adc
and
jns
sbb
or
xor
adc
dec
pop
adc
lret
loopne
and
addl
xchg
adc
scas
jmp
push
imul
adc
cli
cli
loope
jnp
scas
lods
pushf
and
adc
push
sbb
fsubr
scas
xchg
out
inc
mov
push
cwtl
push
jnp
movl
xchg
ficomps
adc
add
rcl
pusha
mov
cmp
xor
inc
jnp
mov
imul
test
cmp
into
or
in
mov
xlat
test
xchg
jno
mov
stos
std
pop
aas
cmp
ror
mov
mov
mov
fucomp
sub
and
sub
mov
call
mov
in
xchg
in
push
mov
js
movsl
jmp
je
sub
test
lcall
out
bound
push
xchg
jle
push
lret
push
clc
push
insl
push
sbb
push
inc
hlt
and
mov
cmp
push
push
xor
or
jb
mov
or
xchg
or
test
jmp
test
and
lods
mov
lcall
inc
hlt
loope
jmp
mov
inc
lahf
ja
fcmovnu
negl
test
push
clc
ja
stos
mov
adc
pop
dec
iret
mov
in
xor
xor
inc
cmp
es
repnz
test
pop
ds
fcomps
pop
cmp
fistpll
mov
int
and
ds
add
cmc
ja
stos
xor
insl
fldt
add
rolb
clc
cmp
out
pop
dec
lret
scas
loope
out
jbe
jl
clc
mov
test
loop
xlat
mov
sbb
xor
addb
xchg
je
shrb
out
mov
mov
in
sbb
inc
ret
pop
int3
inc
movsl
xchg
or
icebp
jae
inc
ret
xchg
mov
xchg
pop
popl
test
stos
dec
mov
fimull
mov
mov
xor
jg
stos
adc
jge
jbe
cmp
shl
dec
xlat
outsl
ljmp
cs
mov
jo
nop
inc
or
adc
mov
out
jb
inc
iret
aam
pslld
add
jae
mov
pop
cmp
std
or
sbb
mov
sub
ljmp
jp
hlt
in
sub
popf
sbb
rcrl
mov
push
lods
mov
aaa
lock
mov
sbb
es
and
scas
sbb
incb
cwtl
test
pop
xchg
jmp
out
out
ret
or
test
mov
jp
xor
cmpsl
imul
inc
lock
add
adc
jbe
mov
pop
sahf
inc
out
sub
movsb
fisubs
inc
insb
jle
or
insb
mov
aad
add
test
push
sti
mov
hlt
cmc
mov
push
fcoms
outsb
xor
mov
cmc
fs
cltd
ret
cli
or
bound
jge
push
sti
es
scas
xor
push
nop
fistl
scas
or
nop
frstor
lock
or
movb
lret
dec
scas
mov
or
xchg
xchg
fldcw
cmpsl
adcl
popa
inc
and
lods
fs
jmp
testl
mov
fisubs
es
call
mov
jecxz
cmpl
arpl
push
mov
xchg
fstpt
shrb
test
fiadds
cwtl
test
jo
or
mov
rorb
mov
insb
fsubs
popf
imul
mov
int3
sub
loop
push
std
push
xchg
test
or
inc
cmpsb
inc
jle
lret
pop
xor
cmp
sbbl
out
xchg
push
inc
inc
push
jp
xchg
add
inc
sbb
out
mov
fcompl
jle
into
mov
mov
xor
lret
jbe
jp
sbb
mov
adc
roll
lret
loope
dec
nop
push
in
xchg
xor
mov
andb
cmp
pop
push
lcall
test
mov
faddl
mov
pop
adc
inc
aaa
mov
mov
call
xchg
cmp
in
test
mov
push
decb
lods
std
xchg
int
adc
lcall
inc
sub
sti
sbb
add
pop
rcrb
adc
mov
lods
in
int3
ss
fdiv
jge
jae
mov
dec
pop
in
iret
aas
dec
push
lea
jmp
hlt
jbe
mov
sbb
cmp
in
xor
sub
idivl
stc
js
cmpsb
jns
jns
jne
ja
jo
call
lahf
test
insb
repz
adc
scas
insl
dec
sub
mull
pop
mulb
jp
adc
sub
sbb
cmpsb
lret
xchg
jle
adc
mov
push
sbb
out
push
inc
cmp
int3
xchg
jnp
jge
and
mov
fldl2t
xchg
jecxz
or
cmc
xorb
and
jecxz
or
vmwrite
xchg
jmp
mov
xchg
fbld
stos
mov
dec
cmpsb
pop
cmp
mov
mov
mov
mov
and
jno
mov
leave
mov
xchg
sarl
lea
xor
push
mov
jae
add
and
mov
rcr
and
pop
repnz
outsb
jns
mov
sahf
loope
out
add
mov
jne
jp
test
sbb
jo
jbe
mov
mov
jns
jmp
pop
mov
mov
mov
jmp
mov
push
lock
testl
loopne
xchg
lea
mov
inc
imul
in
mov
stc
sub
sbb
and
packsswb
imul
jmp
fwait
add
aaa
fcomi
cmp
cltd
out
push
sahf
and
or
fstp
lods
loope
enter
xchg
pop
cltd
cs
les
imul
arpl
std
push
imull
into
js
fistps
insb
jp
cli
add
call
int3
shll
fimull
xor
out
cs
std
loopne
adc
shl
hlt
enter
dec
and
xchg
jns
lret
test
insb
push
jo
repnz
mov
inc
mov
push
cmp
mov
adc
sbb
pushf
mov
xor
dec
jmp
loope
iret
cld
fcomi
add
inc
and
xchg
push
lock
or
pop
leave
hlt
stos
inc
data16
and
jns
loop
int3
sbb
shl
cmp
lods
cmp
add
mov
push
ds
pop
lcall
xor
adc
inc
testl
gs
int3
mov
das
cmp
push
cmp
popf
jecxz
pushf
je
nop
lahf
push
sub
push
mov
out
add
les
mov
push
add
lock
and
pusha
sub
or
prefetch
mov
jns
or
stc
dec
insb
std
inc
jnp
mov
sahf
test
push
jp
pop
in
xor
push
pop
adc
pop
add
lret
add
in
pop
mov
add
bnd
icebp
fcompl
xchg
jb
mov
or
sub
and
push
pop
add
loopne
pop
jnp
xchg
xor
lahf
ljmp
pop
jl
and
dec
or
sti
cmp
mov
out
addl
inc
dec
insl
mov
cmc
idivl
lcall
imul
cli
jb
xchg
shrl
shll
mov
js
int3
dec
scas
cmp
sub
cs
push
in
fmuls
xor
andl
pop
out
fldl
fsubrs
cmpsl
ret
cli
and
fisttpl
xchg
mov
mov
xor
fsubs
dec
push
pop
scas
xchg
xor
jbe
or
cmpsl
outsl
mov
mov
subl
js
repz
lahf
sbb
orl
call
dec
jb
mov
mov
pop
pop
pop
popf
xor
fisubrl
add
sbb
hlt
stos
cwtl
dec
mov
sbb
push
jg
jecxz
inc
mov
ss
add
mov
not
jge
jnp
mov
lret
cmp
pusha
inc
sbb
shll
adc
mov
aas
mov
lods
sarb
cmp
and
dec
into
mov
je
xchg
mov
jg
lcall
jne
negl
lahf
aam
sbb
fldenv
sbb
lret
in
sbb
call
aad
mov
mov
out
icebp
xor
pop
add
cwtl
cmpsb
pop
pusha
hlt
lret
pop
jns
sub
xchg
dec
cmp
mov
adc
lds
sub
out
inc
lret
aas
mov
mov
lods
jle
jg
sbb
fcmovnbe
pop
mov
imul
mov
daa
cmc
shl
adc
scas
inc
mov
popf
pop
jns
ret
sbb
sbb
adc
push
fimull
daa
ret
pop
mov
fs
add
dec
dec
js
jbe
mov
loop
cmpsl
pop
xchg
scas
and
xchg
push
or
inc
xchg
xchg
mov
sbb
sub
sub
test
inc
jae
xor
test
sahf
lds
lret
mov
popf
adcl
xor
mov
clc
mov
and
cli
loopne
sub
cli
clc
mov
xchg
xor
push
bound
lcall
das
push
test
xor
pop
aad
into
add
dec
cmp
lcall
sub
hlt
loopne
mov
dec
xchg
and
inc
in
jge
sbb
mov
push
wbinvd
push
fsubp
adc
mov
scas
fidivrs
xchg
jge
cmpsb
push
out
inc
fdivrs
xchg
jnp
shl
push
pop
movsb
mov
adc
or
sbb
mov
inc
push
xchg
sub
push
push
push
dec
mov
cwtl
jmp
notl
adc
aad
or
rorl
mov
cmp
push
cmpsb
in
adc
cmp
mov
shll
bound
ficoms
out
push
mov
addl
imulb
bound
pusha
mov
cmp
fcoms
aaa
sub
lret
dec
adc
sarb
fdivp
xlat
jmp
js
ss
fiadds
loopne
adc
in
in
roll
idivb
test
mov
pop
xor
push
ret
xchg
notl
hlt
ja
push
imul
aaa
loopne
ret
dec
fs
sbb
repnz
cmp
mov
xchg
ret
or
inc
push
adc
std
push
add
dec
cltd
mov
pop
mov
jns
fwait
aad
push
xchg
pusha
adc
and
xchg
fwait
mov
popf
pop
jl
xchg
mov
leave
xchg
rorl
loopne
xchg
das
cmp
lret
push
pop
sarb
jno
sbb
mov
mov
push
in
xchg
sbb
ret
inc
add
xchg
or
sbb
and
mov
adc
repz
repnz
es
rorb
sbb
loopne
in
sbb
and
xor
mov
push
mov
stos
pop
xlat
mov
adc
jmp
sbb
ret
jae
movb
push
inc
dec
mov
push
outsl
lock
mov
inc
int3
cmp
mov
mov
outsl
in
hlt
fcmovu
or
or
mov
xchg
rclb
sub
sub
lahf
popa
xor
popa
cs
test
push
shlb
push
jmp
jns
fstpt
adc
jecxz
sbb
mov
out
in
stos
les
mov
out
aaa
fwait
jno
and
dec
shr
imul
insb
movsb
push
mov
lret
mov
lret
push
out
or
scas
sub
sti
sub
ljmp
test
xchg
into
dec
sar
and
sub
jg
cs
cs
out
inc
mov
iret
mov
add
fs
dec
or
out
and
leave
push
push
sbb
insl
popf
dec
push
int
xor
mov
jnp
fcoms
mov
int3
bound
out
push
rcll
fs
mov
mov
cmp
sub
out
add
insb
js
push
imul
jecxz
mov
lahf
mov
push
add
gs
fidivrs
sub
imul
jl
push
es
lods
and
cmp
loop
jecxz
sbb
pusha
iret
es
jmp
jne
push
leave
shlb
mov
push
adc
push
mov
inc
or
xchg
and
fsubrp
insb
xchg
test
pop
jmp
out
shlb
xadd
sti
fs
adc
je
insl
push
mov
xor
andb
lahf
dec
cmp
cmp
or
adc
sub
cld
aad
in
cltd
add
in
xor
cwtl
mov
pop
ljmp
adcb
pop
mov
sbb
xor
push
push
dec
mov
scas
adc
or
pop
cmpsb
mov
and
loope
nop
or
adc
xchg
cmc
jecxz
mov
rolb
aam
pop
mov
cwtl
data16
das
dec
daa
pop
mov
xlat
pop
xchg
mov
and
fcompl
dec
sub
rcll
cwtl
gs
add
add
sbb
into
pop
in
pop
ret
mov
repnz
inc
jle
and
pop
or
cmp
subb
add
mov
adc
adc
lea
rcrl
inc
outsl
fnstcw
sbb
jp
mov
dec
add
hlt
fadds
xchg
sub
adc
movsl
mulb
inc
xorb
pop
jg
xlat
pushf
popf
inc
aaa
sub
adc
jae
dec
jmp
sub
jae
dec
inc
adc
adc
and
jns
out
arpl
and
bound
pushf
push
arpl
out
dec
daa
cmpsb
mov
test
pop
leave
xor
push
and
iret
lahf
mov
xlat
fiadds
mov
jl
xchg
mov
cmp
jne
mov
xchg
xor
into
mov
outsl
mov
lcall
or
insb
mov
popa
sbb
lds
fstps
push
ret
lock
mov
stc
mov
xchg
pop
in
fcompl
in
iret
cld
mov
and
xchg
mov
pop
adc
pop
jnp
dec
mov
cmc
xor
xchg
sahf
push
sbbb
jnp
xchg
adc
xorl
cmp
out
mov
inc
jns
lock
es
faddp
push
xchg
lds
call
jge
shl
sti
mov
test
neg
push
mov
pusha
inc
notl
or
leave
adc
add
bound
sbb
inc
xor
loop
cli
out
iret
rcrl
adc
mov
xchg
pop
fidivrl
push
dec
in
pop
jne
sahf
inc
or
lea
lea
pop
dec
add
jb
sub
lret
fsts
add
and
cltd
adc
and
data16
or
test
mull
imull
scas
pop
inc
adc
in
icebp
daa
andb
insb
push
fsubl
jb
bound
push
and
xor
shld
movsb
mov
lcall
add
mov
mov
xor
jecxz
add
xchg
pop
aas
mov
mov
loop
and
in
jl
mov
cld
icebp
subl
sti
or
jmp
add
xchg
or
pop
push
add
xchg
fwait
outsb
adc
fldt
mov
mov
add
scas
ret
ljmp
idivb
in
cmp
les
push
and
das
jne
movsb
mov
adc
movsl
adc
into
jb
movsb
inc
pop
mov
cli
jg
adc
mov
mov
in
test
push
rolb
in
xor
je
cmpb
add
push
insb
mov
cs
shll
repnz
fdivs
mov
add
xchg
push
dec
and
repnz
xlat
nop
iret
ljmp
ja
ss
dec
shr
cwtl
mov
or
adc
enter
mov
dec
inc
movsl
aas
jbe
inc
mov
jb
or
jmp
enter
aam
inc
popa
mov
add
xchg
test
adc
test
sub
dec
cmp
movsb
pop
mov
dec
jo
or
shrb
cmp
call
lock
inc
std
mov
mov
in
les
mov
jb
inc
mov
adc
mov
mov
dec
mov
ret
add
movsb
mov
movsl
mov
jae
xlat
xor
loope
shlb
push
push
and
fstpt
xor
scas
add
shrb
dec
hlt
out
cmp
sbb
jns
sbb
and
mov
xor
dec
aam
ret
imulb
sti
mov
and
inc
xor
push
mov
lret
cmp
push
cmpsl
mov
jns
out
pop
cmp
mov
jne
mov
xchg
cmpsl
inc
lds
jp
sbb
mov
jno
fistpll
cli
push
mov
punpcklwd
aas
adcb
xchg
es
test
xchg
mov
inc
adc
add
adc
xchg
cltd
inc
repnz
lahf
test
xchg
mov
negb
std
jnp
jmp
xor
and
add
mov
push
rclb
or
xor
cli
daa
jp
into
loope
inc
mov
xchg
jl
dec
and
mov
add
aaa
call
xor
xor
repz
mov
jnp
imul
sbb
mov
add
adc
pushf
enter
pop
fwait
push
insb
xor
or
pop
psubsw
jecxz
mov
mov
jp
adc
dec
push
addr16
add
inc
or
or
ficompl
mov
call
dec
ret
fstps
lock
cs
adc
pop
xor
data16
roll
aam
das
aas
iret
cmpsb
out
rcrb
das
lock
mov
rcl
mov
in
push
jo
jg
sarl
lds
out
daa
subl
leave
xchg
or
jnp
and
adc
dec
lret
rclb
mov
ljmp
xor
popf
push
popf
mov
stc
mov
jl
in
push
and
or
mov
fwait
mov
loopne
int
ljmp
mov
sahf
mov
mov
lret
insb
dec
xchg
dec
jo
je
out
jo
dec
cltd
stos
sbb
test
adc
lret
jecxz
data16
aad
push
insl
stc
orb
and
and
lock
imul
inc
lcall
cmc
cmc
cmp
xor
pop
jp
and
mov
mov
dec
jae
stos
scas
cmpsb
pop
mov
mulb
pop
sub
loope
and
pop
sbb
mov
ja
jecxz
notl
or
js
pop
repnz
or
cmpsl
fsts
mov
mov
or
sub
sbb
into
pop
lds
add
jg
jmp
mov
sub
pop
pushf
jno
outsb
xor
xor
adc
cs
pop
mov
shlb
sbb
ss
lahf
jo
mov
popa
lahf
ficoml
cwtl
icebp
sarl
out
inc
xchg
pop
or
adc
xorb
cmpsl
adc
add
insl
pop
loop
pop
lods
mov
xor
repnz
fbld
add
adc
adc
fsubr
xor
loope
arpl
xor
mov
aas
into
ret
mov
add
loopne
mov
fistl
hlt
mov
xchg
filds
sub
sub
repz
imul
mov
lds
or
adc
std
inc
cmp
pop
push
jne
shlb
jns
aad
pop
add
add
sbb
test
popf
leave
fsubs
hlt
xlat
arpl
cld
nop
and
popf
divb
repz
cmpsb
inc
iret
jecxz
test
shrl
cmp
mov
scas
jmp
xor
cwtl
ror
cli
dec
lahf
jp
shl
icebp
ret
dec
std
popf
push
insl
add
mov
or
push
push
adc
shrl
shll
cs
push
sbb
pop
loopne
pop
xor
jns
and
test
mov
sbb
data16
adc
aas
ds
xlat
dec
scas
and
mov
cltd
cld
mov
dec
push
je
push
divb
xchg
popf
out
jl
push
dec
ljmp
lock
ret
cmpsb
push
cltd
push
aas
outsl
mov
pop
lahf
push
test
xor
movsl
jmp
ficoms
jp
mov
test
fwait
and
scas
repnz
test
adc
inc
mov
jae
stc
inc
imul
mov
icebp
in
push
fisubl
stos
fisttps
mov
pop
sub
fwait
aam
inc
jmp
jae
jmp
push
mov
std
and
push
hlt
shlb
fidivrl
mov
mov
pop
aad
dec
sti
xor
or
push
push
mov
stos
les
aad
stos
pop
and
pop
and
fldcw
sahf
cltd
ficompl
std
sbb
pop
ret
int
dec
inc
dec
push
gs
insb
pop
dec
push
aas
sbb
les
arpl
loope
inc
mov
jns
mov
icebp
pop
xchg
push
ficompl
add
mov
mov
mov
stos
insb
cmp
daa
cltd
les
in
mov
xchg
dec
jg
jmp
sub
test
push
add
push
adc
xor
repnz
sbb
in
xchg
cmp
jmp
adc
lock
xor
mov
mov
push
in
das
mov
iret
xor
popf
stc
addr16
and
add
rorb
inc
cwtl
popf
push
es
andb
dec
out
hlt
in
lods
ljmp
xchg
stc
mov
test
xchg
and
xor
cltd
mov
pushf
stos
jb
subb
mov
mov
push
aam
push
mov
dec
test
pop
leave
test
roll
dec
dec
out
mov
jne
jo
clc
push
mov
mov
loop
push
or
inc
cmp
pop
add
mov
movsl
lea
xor
sub
bound
inc
sbb
mov
lods
stos
test
clc
and
dec
mov
mov
push
rcrl
xchg
jnp
xor
lcall
imul
test
sbbl
xlat
add
adc
das
leave
xchg
faddl
leave
push
std
nop
out
out
or
push
and
adc
mov
mov
les
cmp
rorb
pop
dec
aam
daa
jle
scas
and
lods
scas
scas
stos
arpl
push
mov
mov
gs
jp
repz
or
jae
fnstcw
repz
push
popa
popf
sub
les
sub
mov
dec
hlt
iret
lret
mov
sub
add
mov
sub
adc
cmc
sbb
adcl
push
cmp
xchg
inc
ret
dec
push
cmp
ljmp
pushf
jne
xor
les
mov
addr16
dec
andb
inc
push
jl
rcl
pop
outsl
ds
cli
cs
sti
cmp
test
mov
xchg
push
ljmp
cmpsb
in
test
addl
xchg
mov
cmp
and
loopne
clc
push
dec
push
lods
outsb
popf
mov
mov
addb
mov
repnz
leave
aad
and
mov
fsubr
out
jecxz
dec
adcl
push
std
jns
cmpsl
or
test
sub
je
or
add
pop
mov
mov
cltd
jae
testb
cmpsb
mov
adc
pop
jecxz
ret
mov
dec
lahf
pop
lahf
addr16
mov
xor
jnp
and
jp
xor
fadds
roll
mov
outsl
aad
inc
fldcw
scas
mov
bound
jle
iret
sbb
adc
push
fildl
fsub
push
leave
aaa
daa
addr16
cmc
lret
es
test
mov
pop
scas
push
sbb
mov
ds
adcb
sub
mov
cld
and
aam
cmpsb
into
sbb
adc
cmpb
mov
orb
jmp
dec
adc
in
pop
pop
cwtl
push
out
int3
or
in
scas
subb
in
adc
xchg
jo
mov
shl
es
in
inc
imul
and
aam
dec
pop
aam
and
xor
int3
adc
je
mov
int
push
sub
bound
in
roll
sub
fstps
jns
pop
stos
in
fdivs
in
and
ss
insl
jns
iret
mov
sub
out
scas
dec
in
push
mov
bound
cmc
lods
test
push
and
scas
popf
xor
xor
fmuls
lret
lock
push
adc
lahf
cmp
mov
jle
mov
outsl
mov
addr16
scas
mov
lds
rcl
add
mov
mov
rolb
shrb
pop
das
je
push
and
test
int3
orb
iret
mov
push
in
in
jns
xchg
mov
mov
and
sbb
call
faddl
xor
dec
inc
add
pop
push
adc
fstpl
insb
sahf
popf
sbb
jo
xor
orb
movsb
or
xlat
fidivs
sbb
and
sbb
push
dec
shll
lods
sbb
mov
mov
pop
out
ss
iret
pop
add
and
clc
sub
xorl
and
push
or
add
or
jae
out
lea
or
mov
pop
inc
pop
enter
jb
outsl
xor
cmp
push
test
ljmp
test
fstpt
jecxz
adc
stos
cmp
jnp
cmpsb
inc
push
cmp
jecxz
fcompl
cmp
inc
ror
out
ljmp
inc
aaa
shlb
and
fbld
adc
xor
xlat
sbb
jge
leave
lds
adc
call
xchg
xor
push
dec
sub
pop
sub
pusha
pushf
incl
dec
push
rcl
xor
cwtl
aaa
mov
pop
sub
ja
push
mov
or
xor
adc
test
setno
lods
ds
in
jle
fidivrl
mov
aam
jns
shll
mov
jp
mov
and
insl
loop
mov
mov
or
xchg
pop
repz
mov
xchg
cld
fwait
mov
mov
dec
mov
sti
push
pushf
mov
adc
fidivrs
bound
push
hlt
push
push
sub
jno
pop
mov
outsb
pop
lods
in
loopne
adc
out
shl
push
lea
xchg
or
inc
or
int3
inc
jl
jge
loope
dec
in
js
stos
mov
jl
cmpsb
mov
push
daa
cmpsb
push
sti
into
pop
jmp
mov
imul
ja
jnp
dec
adc
inc
idivb
rorb
xor
pop
aas
xor
out
sbb
sti
push
daa
addl
insl
je
and
idivl
jg
icebp
inc
cwtl
jo
rorl
fs
xchg
test
sbb
shll
adc
fistl
out
mov
loop
cmp
fcomps
pusha
push
in
popf
adc
and
and
std
inc
in
push
lret
push
push
xchg
inc
fidivs
mov
repnz
sub
rolb
sub
incb
xor
push
push
xchg
test
jle
std
adc
jl
xor
mov
movsl
outsl
lods
jl
stos
iret
inc
mov
clc
shrl
push
pop
add
lods
sbb
icebp
adc
adc
hlt
mov
xchg
xchg
mov
push
or
fistps
pusha
sbb
mov
add
mov
cmpsl
or
sub
out
sub
mov
sub
mov
lcall
mov
inc
pop
icebp
push
adcb
mov
rcrl
imul
fistl
fisubs
loopne
in
repnz
pop
iret
xlat
adc
mov
ljmp
inc
ret
lcall
dec
pop
jnp
sub
test
lods
and
repnz
out
cmp
les
sub
push
pop
rcr
mov
sbb
and
mov
mov
in
insb
mov
mov
aad
shr
cmp
hlt
add
lods
popa
clc
movsl
jl
gs
and
sub
enter
divb
ret
mov
pop
ds
cli
or
or
shr
mov
xchg
shll
sub
pop
or
inc
push
fidivl
into
sub
cmp
imul
inc
fisttpll
imul
enter
and
mov
cmp
mov
popf
lea
xchg
push
lcall
stos
xlat
lods
lods
jne
movsb
outsl
xchg
xchg
addr16
xor
jb
jle
mov
mov
shlb
lock
lahf
inc
mov
xchg
xchg
nop
pop
mov
call
and
and
and
lret
lods
mov
cmp
mov
lods
cmp
or
sub
sbb
aas
ret
notb
jmp
ljmp
xchg
jecxz
and
test
or
jl
ja
dec
cmp
or
xor
inc
sbb
xor
adc
ret
int3
push
mov
out
daa
lods
rcrl
cs
pushf
inc
cli
iret
sti
push
flds
sub
jg
add
sarb
inc
lret
and
mov
je
sub
jbe
stos
dec
dec
or
xor
lret
pop
sbb
mov
inc
push
jb
or
ret
adc
push
daa
fiaddl
punpcklwd
repnz
ljmp
jb
mov
add
push
fiaddl
enter
mov
stos
push
jecxz
inc
out
jbe
insl
les
add
sbb
insl
mov
add
insb
mov
nop
mov
mov
mov
js
ret
cmp
imul
mov
jl
daa
mov
add
sbbb
sahf
test
pop
loope
in
sahf
mov
roll
add
inc
inc
mov
cmp
fsubrl
xor
out
es
cmc
insl
fdivs
sti
orl
cmp
mov
jmp
xchg
and
cmp
xchg
sbb
mov
adc
dec
jmp
xbegin
lock
in
pop
pop
push
into
jmp
je
jae
call
es
adc
lret
hlt
loopne
fwait
mov
xor
scas
jp
inc
divl
je
sti
rcrl
jne
mov
add
dec
fldcw
cmp
das
out
mov
and
pop
subb
std
scas
mov
pop
jbe
jne
pop
nop
xor
lcall
mov
pop
fistpll
jae
imul
add
xchg
outsb
push
push
in
outsl
ret
pop
inc
push
push
movsl
sahf
daa
addr16
stos
and
and
lds
sub
cmp
or
mov
dec
push
movsb
xchg
fwait
sub
mov
ror
rcl
mov
add
cmp
or
je
sub
add
cmp
cmp
rcll
rolb
dec
les
ds
sub
xchg
xchg
rcrb
cmc
loope
jg
fmull
stc
pop
adc
outsb
inc
push
mov
sub
lret
cmp
in
std
mov
add
je
lds
fcmovnb
inc
push
fisubs
adcb
testb
orl
xchg
push
test
in
shl
stos
decb
data16
inc
sbb
cmp
mov
mov
push
jp
jmp
je
mov
cmpl
push
xchg
lahf
insb
loopne
mov
shrb
out
es
cmp
insb
jecxz
fcmovnb
icebp
adc
mov
push
or
imul
insl
mov
or
pop
scas
test
out
jnp
aas
lods
inc
outsb
jg
arpl
enter
pop
push
shlb
mov
pop
pop
add
push
daa
clc
mov
lahf
push
test
push
xor
jg
cmc
movsl
stos
jl
or
adcb
stos
xor
dec
fisttpl
mov
rolb
cmp
sub
xchg
or
sub
lret
dec
stc
fisubrs
xchg
lret
cld
push
push
lcall
movsl
into
mov
add
xor
and
lret
mov
scas
mov
mov
stos
clc
and
jge
pusha
in
and
xchg
pop
int
cmpsl
xchg
sbb
outsl
cli
mov
sbb
insb
sub
loop
jmp
cmp
roll
xchg
push
lahf
xchg
outsb
ret
xor
cli
popa
out
or
sbb
xorb
aaa
add
push
pop
out
push
adc
push
xor
into
adc
ljmp
sbb
inc
pop
popf
pop
sub
jecxz
fwait
xchg
push
and
popf
cmp
sbb
cli
fnstcw
dec
mov
mov
mov
dec
dec
dec
xor
sbb
mov
lods
jno
adc
inc
push
add
imul
lds
aam
cmpsb
and
and
inc
icebp
adc
lret
rcr
lcall
mov
ds
mov
fiadds
movsb
fnsetpm(287
sub
iret
std
cmp
mov
xchg
dec
push
lahf
and
dec
cltd
out
dec
adc
pusha
jle
inc
addr16
lods
sub
in
les
add
mov
xlat
jo
lret
rolb
in
rcrl
adc
aad
pop
add
stos
lret
leave
repnz
test
push
mov
stc
xchg
jno
and
aaa
pop
insl
aaa
repnz
enter
fdivrs
or
movsb
pop
or
fists
inc
xchg
xchg
fwait
loope
inc
sub
xchg
bound
adc
push
jno
push
cmpsl
xchg
sbb
mov
ljmp
lcall
imul
aaa
push
aam
push
pop
xchg
pushf
jb
stos
ret
test
sbb
inc
lds
xchg
mov
mov
pop
xor
inc
sahf
jb
outsb
jp
cltd
out
arpl
push
cmc
pop
dec
push
clc
mov
stos
add
mov
xchg
cwtl
lock
mov
mov
in
inc
enter
push
icebp
cwtl
jnp
bound
sub
out
stos
push
jmp
adc
sbb
mov
pop
js
jg
cmpsb
cmc
xchg
outsb
sbb
inc
pop
inc
jnp
jb
adc
xchg
fdivl
jmp
mov
imul
push
xchg
push
nop
ljmp
xor
jns
xchg
cwtl
sbb
aad
adc
mov
lods
aas
aad
push
add
test
adc
jmp
out
adc
incb
jecxz
adc
xlat
ret
inc
lret
outsl
lret
xorb
push
rclb
std
sub
jbe
xor
push
push
ds
fnclex
adc
shlb
idivb
je
mov
jle
adc
out
stos
push
gs
ficompl
xlat
pusha
cmp
lds
inc
sarb
cs
imul
fimuls
push
mulb
pushf
fidivrs
and
dec
mov
sub
mov
sbb
adc
ds
push
popa
fcompl
fidivrl
xor
or
sub
mov
inc
les
into
pop
arpl
std
outsl
fs
in
mov
cmc
fsubrs
xor
cmp
cmp
out
cltd
jb
js
lret
pushf
or
test
loope
sub
and
test
mov
mov
pusha
fcoml
shrb
bsf
jno
test
or
xchg
nop
cmc
aam
push
repz
out
and
cmp
dec
in
cmp
jg
dec
mov
inc
loopne
test
and
lret
fsubrl
cmp
adc
es
shll
scas
lahf
aaa
sub
in
mov
jp
repz
pop
jge
hlt
or
mov
adc
cmp
add
inc
cmp
sub
ret
pusha
stc
aaa
dec
cmp
mov
call
arpl
mov
pop
fxam
adc
sbb
jmp
sbb
cmp
int3
mov
jns
cmp
stc
or
mov
daa
out
lret
jns
test
cmp
lcall
push
pop
mov
mov
mov
mov
xchg
push
push
mov
cmpsl
pop
scas
add
loopne
test
adc
mov
lcall
daa
jg
ficoml
push
mov
jg
ja
sub
adc
xor
xor
arpl
dec
cmp
sbb
lahf
cmpsb
ffree
outsl
ret
add
or
lea
lock
pop
shll
mov
fstpt
rclb
pop
xchg
insb
ja
inc
nop
data16
dec
and
das
insb
lret
lock
xchg
push
sbb
push
xor
cmpl
fs
nop
ja
push
fnstenv
cmp
arpl
clc
popf
add
xorw
jo
clc
cli
shrl
out
sub
adc
inc
cs
pop
fldcw
or
stc
mov
lret
pop
pusha
rclb
add
sub
fwait
je
stos
ss
and
nop
push
shlb
fcoms
mov
mov
xchg
inc
push
cmpsl
ficomps
mov
cmpsl
fs
jae
or
mov
pusha
mov
loopne
jle
sahf
test
hlt
ficoms
cmpsl
xor
aam
dec
scas
call
mov
das
push
ljmp
outsb
mov
sub
scas
dec
jo
pop
movsb
inc
sub
loope
test
and
pop
dec
or
nop
mov
fisubrs
out
xor
lret
dec
pop
repz
negb
jns
fsubrs
jno
pop
mov
fs
jge
xchg
call
adc
dec
insb
repz
sbb
xor
and
and
out
loop
push
inc
cmp
push
push
popf
out
movsb
jne
loopne
shll
popa
mov
ficompl
arpl
mov
cmp
xchg
movsl
xor
in
hlt
xchg
ljmp
mov
movsb
sbb
inc
mov
loope
dec
lret
sub
jecxz
xor
stos
dec
loopne
and
cmpsb
xor
lahf
scas
mov
aaa
cwtl
enter
lods
inc
mov
jno
inc
jbe
sbb
testb
cmp
pop
ljmp
mov
lea
xchg
cmc
lcall
ret
dec
pop
les
subl
push
mov
hlt
cmovno
push
and
sub
or
ljmp
mov
mov
sbbl
dec
sbb
xor
sub
xor
push
out
jl
or
push
mov
xlat
adc
mov
sub
addb
ljmp
dec
lock
dec
sbb
insl
jl
xchg
jge
cmp
jg
dec
mov
cmp
xchg
sbb
fdivr
push
adc
xor
in
lret
push
mov
or
lahf
xor
rorl
xchg
pop
jbe
addr16
jmp
push
out
and
loope
rcr
xlat
mov
js
jge
in
add
sbb
or
mov
push
push
imul
repnz
pop
adc
pop
pop
test
cwtl
inc
mov
sarl
mov
outsl
mov
pop
push
flds
cmp
xchg
in
andb
push
lret
fdivrl
mov
inc
push
and
stos
dec
ficoms
test
rcr
push
aam
mov
add
xor
jmp
adc
mov
jns
inc
inc
add
les
jbe
dec
repz
jecxz
xchg
and
xchg
gs
leave
fisubl
add
rcll
sub
call
in
sti
test
jg
cs
mov
xor
mov
xorl
add
inc
xor
testl
jne
ret
xchg
sbb
repz
mov
adc
andl
pop
inc
loop
adc
lods
xchg
inc
and
pop
push
iret
push
mov
clc
call
dec
ret
adcb
clc
lahf
loopne
imul
cmp
das
jno
ljmp
push
jmp
addr16
dec
jno
sbb
icebp
or
mov
inc
lea
adc
sbb
inc
je
jle
cmpsl
push
ficoml
clc
ret
insl
jnp
sbb
es
loope
xor
push
push
movsb
and
pop
jle
fcos
and
pop
pop
push
scas
xor
inc
adc
or
pop
lods
out
ljmp
push
jp
je
dec
cld
push
mov
into
cmpb
popf
adc
xor
stos
mov
fidivs
xchg
fs
cs
repz
push
ja
mov
and
cmpsl
jb
lods
xchg
lock
and
jbe
ret
sub
loop
fdivrl
jne
negl
dec
clc
lret
iret
enter
cmpsb
jbe
inc
sub
test
ljmp
dec
stos
stos
repnz
push
sub
cmp
dec
dec
aaa
push
push
cmp
inc
add
pop
lret
out
add
sub
addr16
mov
mov
jnp
insl
xor
in
mov
xor
lods
xor
pop
mov
fimull
xchg
xlat
adc
or
xchg
rclb
or
xchg
lods
cmp
js
push
mov
out
insl
gs
and
add
imul
lods
lods
cmpsb
ljmp
into
or
out
nop
dec
or
adc
aaa
cltd
adc
jp
fistl
xorps
push
fld
out
jecxz
pop
hlt
adc
push
mov
ret
sub
push
hlt
pop
jg
das
inc
cmp
adc
or
leave
mov
mov
sbb
xchg
jmp
pushf
mov
ds
lods
add
in
mov
repnz
in
jae
fldl
andb
pop
jmp
out
xchg
aam
icebp
sti
inc
rcl
rcl
jmp
mov
fmul
cli
pop
scas
in
stc
mov
test
push
insb
xchg
lods
inc
lret
add
cmp
xchg
scas
les
lahf
je
dec
scas
cmp
xor
loope
loop
inc
pushf
or
mov
lods
shll
add
push
cs
sub
out
mov
jno
cld
adc
into
cmc
dec
ss
inc
adc
rcrl
shlb
dec
xchg
sub
jge
test
adc
and
insb
mov
and
mov
les
push
or
gs
xchg
lret
mov
rorl
cmpsb
mov
imul
rcrb
int3
mov
xor
mov
xor
lds
jne
sub
sub
cmp
xchg
jo
pop
jecxz
and
cmpsb
cmpsl
dec
mov
or
mov
dec
or
out
inc
xchg
push
ljmp
or
outsl
fstpt
xchg
jnp
mov
dec
jnp
fldt
fmull
movsb
dec
std
mov
nop
gs
jo
ror
or
ret
pop
out
andl
fists
pop
cmpsl
vmread
cwtl
rolb
insb
pop
mov
xor
xchg
mov
pop
out
cld
xchg
lcall
mov
fwait
lret
xor
push
and
shrb
sbb
arpl
jnp
lcall
pop
hlt
out
aaa
enter
mov
xlat
or
push
lds
xor
or
out
rorb
inc
adc
call
jle
jae
push
das
sbb
shll
not
inc
out
movsb
jne
fdivs
or
inc
test
imul
mov
into
sbb
repz
adc
mov
shll
pop
popf
or
fwait
sub
addr16
inc
mov
cli
mov
or
adc
cmp
push
ds
call
lcall
arpl
mov
clc
push
dec
push
aas
mov
bound
mov
add
out
push
negl
lahf
ficoml
arpl
mov
stc
ja
pop
inc
into
cmp
or
js
add
repnz
ret
stos
stc
cld
add
gs
or
dec
and
sbb
mov
sub
adc
cld
and
add
xor
icebp
hlt
leave
push
and
fst
cmp
cs
mov
push
iret
mov
gs
mov
jno
add
clc
jge
dec
and
shll
lea
mov
and
fimuls
stos
push
dec
scas
scas
fs
xor
icebp
leave
push
sbb
dec
dec
mov
jns
and
lret
ds
inc
pop
in
mov
std
adc
cmp
mov
cmp
stc
jg
scas
sbb
cmp
in
xchg
push
fnstenv
push
ds
push
jge
sub
dec
test
pop
sub
es
iret
pop
shrl
adc
sbbb
jne
inc
icebp
int3
paddw
dec
push
ds
call
stc
sbb
pop
das
jo
fdivl
cmp
jae
testl
aam
stos
fldt
loop
lods
scas
cmc
movsb
mov
xchg
sbb
or
xor
mov
cld
fwait
dec
cmc
aam
xchg
pop
jg
fdivrs
jl
push
jb
lea
jle
add
int3
aad
dec
adc
lods
iret
adc
fsubrs
sbb
pop
push
add
mov
movsl
testb
xchg
or
push
add
outsl
fstpt
adc
jo
mov
out
loope
ror
je
inc
lock
mov
int
sbb
sbb
sbb
test
push
xor
outsb
mov
pusha
lahf
or
adc
fucomip
popf
jmp
sub
ret
in
mov
xor
add
jmp
pop
popa
cmp
xor
outsl
ret
xchg
pop
mov
inc
inc
sarl
js
sbb
shlb
and
inc
mov
mov
daa
add
cmp
in
adc
xchg
aad
aad
adc
imul
pop
bound
jl
popa
fwait
aam
inc
mov
mov
cli
fcmovne
push
dec
or
mov
ds
iret
inc
pusha
popa
or
add
cmp
outsb
mov
jp
sti
dec
repz
repz
out
lahf
stc
mov
stos
iret
jecxz
repnz
push
xlat
add
ljmp
es
mov
xlat
push
jmp
dec
sbb
shlb
insl
dec
repnz
and
jecxz
enter
mov
into
mov
iret
adc
mov
icebp
sub
mov
push
sti
inc
pop
jne
inc
inc
sbb
xchg
fisubrs
or
ss
lcall
aad
es
int
mov
int
xor
mov
or
push
mov
mov
xchg
inc
das
xlat
add
test
jnp
loop
cmp
ja
ret
loope
jle
fcmovnb
popa
mov
xchg
add
xchg
adc
daa
and
or
shll
push
xchg
dec
mov
mov
out
popf
cmp
enter
shlb
mov
cmp
dec
sbb
xchg
xor
dec
pop
inc
xchg
and
data16
scas
sbb
pop
jnp
das
lods
jmp
pop
cwtl
xchg
dec
xor
cmp
jmp
jnp
mov
push
or
icebp
and
jl
sbb
lods
cli
push
sbb
fdiv
dec
sbb
lea
cld
xor
sub
subl
push
sub
movntps
stos
int
cwtl
and
sbb
mov
sub
add
pop
lods
dec
sub
mov
mov
insb
pop
push
into
iret
ljmp
cmp
aad
cwtl
add
leave
shll
mov
jecxz
inc
mov
adc
stos
jle
mov
in
or
xor
mov
mov
cmp
fs
jle
in
pop
xchg
inc
jae
inc
les
sbb
dec
push
scas
push
or
or
adc
aas
or
jmp
jl
lea
xor
lea
jmp
sbbb
jns
push
add
sub
aad
hlt
xor
push
pop
into
jbe
andb
dec
sub
push
cmp
jecxz
xor
xchg
dec
mov
xor
push
mulb
push
dec
in
cltd
insb
imul
adc
pop
sub
sti
and
mov
lcall
icebp
addr16
out
fildl
iret
mov
outsb
xchg
or
mov
cli
inc
mov
push
pusha
mov
divl
js
pop
repz
imul
adcl
jmp
nop
rorb
add
xor
stos
loopne
data16
adc
jge
cmpsb
lret
pop
or
push
popf
and
movsb
and
shll
sub
push
cmp
fwait
sub
inc
cmp
cwtl
mov
lahf
jns
nop
cli
sbb
ds
adc
in
and
cmp
mov
push
push
inc
into
cmp
inc
in
das
cld
or
xchg
jecxz
pop
inc
ja
or
pop
adc
mov
xor
aaa
or
and
test
adc
or
jl
xor
push
data16
dec
gs
and
xchg
dec
or
testb
or
add
inc
insl
jmp
ret
nop
mov
sub
cs
ret
jp
xchg
pop
xor
xor
dec
testb
mov
mov
into
xchg
test
push
cltd
lods
out
xchg
adc
cmp
add
jecxz
mov
push
insl
test
mov
mov
lods
imull
movsb
ja
add
jne
sub
add
mov
or
rcll
push
mov
ljmp
pushf
pop
pop
mov
jecxz
lods
dec
adc
and
mov
fdivrs
int3
and
mov
out
nop
xchg
jne
mov
mov
push
nop
mov
xor
pop
push
enter
gs
push
lods
fcomip
push
aam
mov
fstpl
roll
pop
cs
sahf
jno
pop
mov
imul
and
or
sub
bswap
outsb
mov
sbb
xchg
inc
imul
adc
jle,pn
or
fmuls
lea
or
mov
inc
cmp
cmpb
adc
rolb
ds
xchg
or
shll
ljmp
push
popf
fildl
ja
cltd
mov
cmp
sub
fcompl
ret
add
sahf
fs
lret
adc
add
out
aas
sub
test
sti
lods
movsb
lahf
sub
add
popl
outsl
mov
out
data16
cmpl
xchg
inc
loope
testb
cmpsb
add
and
lds
stos
mov
pop
enter
adc
inc
or
xlat
test
jb
int
xor
mov
loop
adc
sbb
ds
dec
xchg
sbbb
jnp
push
cmp
imull
pop
pushf
and
scas
cld
sarl
sbb
xor
xchg
or
in
mov
sbb
fs
mov
lcall
insl
mov
stos
or
lcall
icebp
push
or
scas
ja
push
jo
mov
xchg
rcll
push
sub
mov
and
lret
pop
mov
insl
sbb
push
xchg
test
out
arpl
or
jmp
pop
jmp
cmp
rcr
fbld
pop
fxch
inc
in
jne
pop
cmp
dec
cmpsb
xor
mov
clc
lock
ret
dec
in
push
and
mov
scas
into
mov
imul
in
ja
push
insl
or
inc
rcrl
sub
test
push
icebp
cli
sahf
xchg
jp
sbb
jnp
xlat
xchg
std
mov
cmp
mov
adc
repnz
rorl
std
lods
pop
push
dec
cmp
cld
adc
mov
push
cmp
lahf
push
cmp
sub
aaa
insb
dec
add
fcomps
cld
cmp
addr16
loope
gs
lods
mov
test
inc
lahf
movsl
cmp
adc
ss
jns
xchg
pop
in
lods
sub
push
or
add
andl
lea
sbb
sbb
shll
pop
mov
push
mov
test
insb
pop
cmc
mov
mov
or
push
scas
inc
inc
data16
mov
mov
push
cmp
cld
inc
xor
sub
mov
stos
out
out
and
test
jle
mov
lcall
fs
aaa
dec
mov
adc
add
dec
cli
fcmovne
arpl
xorb
inc
scas
adc
cltd
jne
lock
cmp
inc
int
dec
aas
xchg
xchg
imul
pop
jl
mov
inc
or
ja
pop
cmp
dec
loope
cmpsl
dec
cltd
sar
cltd
enter
outsb
dec
xorl
xchg
arpl
mov
push
fnstcw
pushf
add
adcl
fsubr
push
jnp
in
loopne
clc
sub
cmp
mov
dec
jg
cmpb
push
es
std
sbb
and
mov
mov
xor
ss
cli
hlt
and
andb
inc
mov
pusha
movsl
mov
add
xlat
add
push
add
rolb
test
jne
pop
popa
push
icebp
aaa
stos
std
out
lcall
lods
divb
sbb
gs
xor
xor
arpl
xchg
aaa
mov
sub
clc
daa
cmpsl
xchg
pop
fisttpl
call
lock
mov
push
adc
mov
mov
cmpsb
test
std
sbb
scas
subl
pop
mov
or
and
mov
pushf
ss
fisubrl
jb
addr16
jnp
fcmovbe
sbb
sub
icebp
inc
cld
xor
fstpt
adc
or
pop
es
jmp
add
xchg
xchg
xchg
nop
aas
xchg
rcr
xor
fdivl
mov
aaa
adc
mov
and
flds
enter
fisubrs
push
ja
jnp,pn
mov
loopne
shl
mov
mov
cmp
mov
sbb
scas
fiaddl
dec
mov
movsl
test
jb
pushf
movsl
adc
pop
int3
decl
arpl
test
mov
mov
fisttps
lret
mov
inc
dec
xor
ljmp
insl
or
cld
sub
xchg
fistpll
mov
inc
in
gs
ja
out
popa
fwait
je
fmul
dec
or
cmp
adc
push
or
es
mov
sub
aaa
rep
sub
mov
mov
rorl
lret
push
imul
aaa
out
pop
cmp
lock
loope
cwtl
jp
sbbb
fistl
fisttpl
jge
test
and
nop
test
inc
dec
gs
and
scas
push
ljmp
fcmovb
dec
jge
inc
or
popf
mov
push
int3
jne
cmpsl
push
out
inc
test
dec
mov
xchg
sbb
shlb
push
fadd
pop
lock
pop
bound
pop
pop
pop
jle
mov
mov
xchg
mov
subb
push
inc
jge
dec
xchg
scas
ss
jbe
fcmovnu
nop
sti
push
sbb
or
mov
data16
sbb
inc
mov
pop
ret
ds
sbb
cwtl
inc
mov
xchg
mov
lret
push
push
xor
pandn
jae
or
add
push
nop
aas
into
mov
or
loop
mov
cmp
cmc
in
rclb
dec
repz
test
roll
sbb
push
mov
xchg
shl
sbb
push
ret
sub
ja
or
sbb
cmp
push
dec
add
scas
aas
adc
adc
xchg
mov
mov
jbe
jp
xlat
bound
lahf
scas
add
push
mov
inc
jmp
cmp
movsl
dec
mov
ja
pop
or
sarb
cmp
inc
mov
push
adc
fadds
xor
scas
ds
call
fldt
insb
cwtl
dec
sub
push
xchg
leave
adc
jnp
sub
mov
jb
xchg
jp
rorb
loope
cs
pop
add
jmp
xor
fs
lcall
icebp
fistpll
push
inc
xlat
push
lea
in
bsf
and
push
fs
or
gs
je
sti
mov
mov
pushaw
cmp
bound
fldenv
orb
ja
cmp
fmuls
xlat
sbb
pushf
test
inc
adc
xchg
jge
sbb
fldl
adc
andl
dec
add
into
in
jno,pn
loopne
jmp
add
xchg
fnstenv
stc
test
cwtl
push
outsl
jae
adc
jno
cli
in
iret
jb
mov
push
xor
aad
xor
iret
jae
jb
fadd
dec
movsl
jae
cwtl
sbb
inc
cli
cld
paddb
leave
or
dec
inc
pop
jp
icebp
mov
sub
mov
or
pop
inc
xor
data16
sarl
and
jns
leave
shrb
push
push
mov
jge
inc
add
sbb
xor
dec
or
push
shlb
mov
jmp
mov
sub
sbb
push
repz
sbb
iret
mov
pop
aam
rorb
imul
jo
xor
push
inc
fistpll
outsl
dec
jmp
repnz
pop
mov
js
in
jmp
push
fidivl
imul
xlat
bound
xchg
ret
jge
popa
sahf
movsl
sahf
stc
mov
sub
imul
scas
or
mov
add
xor
inc
rorb
xchg
outsl
leave
dec
mov
inc
sub
aam
or
mov
rcl
fisttps
test
scas
pop
mov
testl
lods
stc
dec
and
imul
push
repnz
cld
lret
mov
push
js
shll
or
packuswb
ror
inc
cmc
lods
lret
mov
add
cltd
stos
loopne
mov
cmp
popa
push
cmp
push
scas
jecxz
mov
mov
mov
test
rolb
insl
and
ljmp
loope
arpl
inc
add
jns
add
movsl
jbe
rol
loop
stos
jae
imul
pop
and
ds
outsl
pop
push
stc
cmp
cs
imul
popa
mov
xchg
mov
xchg
pop
jb
mull
cmpsb
std
push
add
inc
js
or
hlt
sbb
fisubrl
out
pop
rorb
mov
lret
xor
cmp
ret
xor
fstp
pusha
mov
add
bound
adc
adc
sbb
mov
insl
pop
out
ja
pop
pop
in
fsubs
icebp
es
pop
or
outsb
xor
push
or
jne
bound
mov
mov
mov
call
lret
ss
pop
sbb
stc
pushf
fs
mov
pop
cmpsb
fiadds
jecxz
cmp
lret
mov
pop
pop
imul
lea
hlt
shlb
jnp
push
cld
dec
mov
insb
mov
lock
jne
test
inc
lds
shl
insb
cmp
dec
xor
mov
jmp
sbb
pop
jp
ret
jno
jnp
rcll
xchg
imul
dec
sub
mov
mov
std
sub
cld
mov
pusha
pop
in
dec
push
stc
adc
jmp
cmp
mov
shl
mov
add
insl
pusha
sbb
sahf
mov
stos
xchg
push
sub
push
lds
icebp
pop
insb
dec
mov
xor
mov
in
sbb
xchg
cld
dec
xor
pop
shl
mov
imul
sub
jbe
sbb
sub
lret
dec
call
mov
mov
mov
fdivr
inc
addr16
sub
xor
xchg
stc
in
popa
aaa
icebp
adc
xor
cli
aad
lods
dec
pop
iret
data16
pop
sbb
add
adc
out
call
xor
test
adc
mov
cs
push
out
sub
pushf
cmpb
shl
lock
sahf
mov
sti
sahf
adc
mov
movsb
jge
inc
fiaddl
ljmp
dec
cmp
push
test
sahf
hlt
adc
pop
sub
daa
lods
je
or
iret
ja,pt
xchg
mov
out
ror
adcl
add
mov
stos
cltd
xchg
int3
cli
xor
data16
insb
or
or
call
sbb
xor
mov
or
mov
push
lret
out
in
pop
inc
cmp
xchg
pop
js
sub
sbb
test
or
andb
push
cltd
nop
aaa
xchg
jle
add
dec
dec
jl
je
mov
pushf
mov
dec
pop
stos
lcall
in
iret
cmp
nop
dec
mov
in
bound
push
push
push
loopne
push
xor
sti
push
sub
movsb
ret
and
add
clc
add
sbb
test
inc
rep
out
gs
aad
in
pop
in
rol
fistps
repnz
or
repz
out
adc
inc
cmp
mov
rolb
jcxz
call
mov
mov
pop
sub
jns
mov
fstl
jecxz
fdivrp
mov
mov
dec
sub
jno
xor
jns
push
jmp
mov
cs
add
pop
cmp
pop
and
rolb
loope
pop
push
sub
push
rol
push
push
pushf
jno
pop
pop
mov
inc
sub
test
int3
outsl
dec
out
mov
fldt
adc
out
stos
shll
ds
jmp
sbb
addb
ret
or
push
mov
cli
mov
pop
scas
mov
cli
daa
or
int3
jl
sub
mov
stos
hlt
je
addr16
insb
rcrb
adc
in
int
stc
mov
jge
daa
lods
mov
dec
sub
mov
jnp
xchg
imul
pop
lds
test
mov
cmp
add
xchg
bound
call
into
pop
or
lods
lods
or
adc
loopne
push
push
mov
sar
jl
sahf
push
jg
mov
fs
jnp
jg
std
fwait
mov
out
jl
pop
into
and
cli
lds
mov
jb
ficoms
nop
hlt
pop
sbb
iret
mov
in
jns
insl
mov
mov
repz
scas
testb
out
xor
adc
mov
pop
mov
pop
jns
movsb
cmp
test
xor
insl
outsb
aam
pop
push
mov
xchg
outsb
out
loopne
in
les
out
jo
aas
sub
mov
sbb
pop
sahf
sub
das
sbb
mov
enter
imul
pop
lret
mov
xor
push
adc
mov
imul
sarl
mov
aas
cmp
cmp
flds
sbb
out
popf
loop
loope
movsb
ss
pop
movsl
shrl
mov
jmp
push
jns
mov
mov
or
cs
rolb
call
ljmp
push
pop
jbe
into
or
loopne
mov
aaa
fcoms
and
and
arpl
sbb
ret
enter
arpl
adc
push
lds
inc
jnp
adc
notb
rcr
mov
arpl
mov
test
lock
push
or
xchg
cs
xor
add
insl
adc
inc
shll
mov
mov
pshufw
pop
addr16
jmp
or
cli
stc
sbb
mov
les
movsl
lock
mov
in
pop
fdivrl
jbe
jne
pop
adcl
jge
out
xlat
mov
cmp
push
sbb
les
aas
test
out
ja
or
mov
inc
mov
ss
sahf
mov
out
sub
int3
loopne
xor
xchg
jne
inc
and
or
sti
popa
xchg
ja
es
mov
mov
cmp
dec
ja
jno
adc
stos
inc
xchg
add
cmp
lahf
rcr
imul
or
movsl
leave
jp
or
cltd
sbb
cmpsl
sub
loop
popa
add
xchg
adc
sub
ljmp
adc
xor
je
mov
testl
or
jmp
cmovnp
addl
add
pop
out
xchg
jnp
push
and
imul
insb
mov
jb
jnp,pt
sub
push
mov
dec
lods
xlat
sub
iret
push
dec
fsubrl
mov
and
out
les
in
add
mov
dec
mov
cmp
jg
fwait
sub
or
mov
leave
mov
fmuls
ss
mov
inc
lret
cmpsb
jae
sbb
adc
push
jno
enter
aad
cmpb
call
or
mov
sub
mov
int
pop
add
pop
pusha
inc
js
or
fdivl
in
scas
inc
in
sarl
adc
inc
fsubrl
lock
push
cmp
adc
sub
movsl
push
inc
cld
mov
dec
cmpsl
data16
pop
add
stos
xchg
leave
and
fcomip
addr16
js
movsb
cwtl
pop
fldt
xchg
jmp
repz
in
bound
jb
jmp
outsl
sbb
je
dec
cwtl
adc
inc
cltd
test
loopne
mov
inc
adc
cmp
mov
sub
into
sub
pop
xor
scas
mov
ja
pop
and
push
dec
cld
lods
mov
shll
call
xor
xor
arpl
rolb
aam
cmp
jecxz
push
fimuls
in
lret
pop
ds
mov
push
mov
fnstsw
mov
cmp
lcall
xor
mov
rcr
adc
inc
jne
lret
add
jnp
fdivrs
dec
xor
divl
movsb
inc
pop
xor
jl
or
ret
shl
xor
lcall
out
shrl
stos
cmp
aam
jno
ret
gs
ret
jo
fistpl
mov
xchg
inc
mov
add
xchg
shrl
inc
cld
inc
adc
jb
int3
sub
push
or
inc
out
cmp
cli
mov
outsl
sbb
sub
loope
fs
jns
stc
call
adc
add
push
sbb
ret
push
mov
ljmp
rcr
outsl
xchg
sbb
icebp
push
sub
fwait
outsb
mov
or
fisubrl
mov
pop
sub
push
nop
inc
in
dec
aad
xor
ret
pop
fnstenv
dec
dec
cli
movsb
jns
xchg
sub
sahf
pop
mov
mov
in
into
mov
mov
sub
ffree
div
xor
fnstenv
sub
lea
mov
scas
sbb
sbb
dec
cld
les
insb
shrb
repnz
repnz
xor
add
mov
dec
adc
ljmp
js
cmp
xchg
push
jbe
push
sbb
clc
cmp
push
sub
push
dec
fnstenv
loop
and
xchg
fidivl
inc
xor
cmpsb
loop
dec
aas
jmp
in
out
sbb
test
stc
jno
mov
add
mov
jnp
and
out
xor
jecxz
inc
xchg
and
ret
enter
in
lods
daa
imul
pop
stos
mov
sbb
popf
fisubrs
sbb
adcl
xlat
test
fsubl
cmpsb
clc
xchg
mov
add
push
xor
sub
lea
scas
loopne
sub
mov
or
jecxz
add
push
mov
lret
rclb
add
out
clc
and
shrl
loope
imul
test
sbb
into
rcrb
xor
loope
xchg
ret
out
inc
push
dec
js
mov
icebp
mov
out
inc
js
test
mov
sbb
test
shl
sub
push
leave
and
ror
lahf
inc
mov
inc
xchg
pop
jecxz
or
pop
gs
sbbb
add
and
scas
in
outsl
jl
mov
mov
xchg
sbb
lcall
push
icebp
int3
sbb
icebp
ljmp
mov
rcll
cmp
enter
cmpsl
pusha
sub
clc
mov
clc
dec
mov
mov
outsb
mov
mov
pop
imul
jo
dec
inc
jnp
loope
mov
insb
das
test
sbb
shl
cmp
xor
sub
lods
xchg
or
out
push
push
mov
inc
push
dec
clc
or
ja
out
fisubl
xchg
jae
in
mov
add
fisttpll
imulb
lahf
mov
and
es
lea
mov
clc
rolb
in
mov
and
dec
inc
pop
xchg
fstl
popf
sub
test
mov
stos
pop
jle
ja
shlb
fs
add
mov
jp
loop
ljmp
mov
test
mov
lret
push
push
hlt
scas
mov
and
xor
test
repz
add
mov
sbb
xor
lahf
lret
jmp
dec
jge
pop
fldz
std
sub
clts
lods
arpl
into
cli
lahf
fisubl
outsl
fstp
adc
dec
mov
shrb
pop
sbb
je,pn
movsl
mov
movsl
sbb
mov
and
fwait
cs
fsubrs
loop
add
mov
dec
dec
inc
ljmp
mov
and
push
or
sub
movl
mov
sbb
ja
inc
lds
imul
cmp
cld
outsb
imul
cmpsb
fsubl
pop
mov
in
jp
addb
xor
xor
ficomps
cmp
xchg
icebp
or
sbb
add
cmpsb
fidivrl
cmp
std
fnsaves
ficompl
movsl
repz
adc
and
or
iret
push
pop
or
loopne
cmp
sbb
mov
xor
push
pushl
je
pop
pop
outsb
in
xor
cmpsb
pop
sub
dec
push
cld
mov
sbb
adc
mov
adc
jb
in
push
test
xchg
or
scas
sbb
sti
adc
cli
fdivs
je
fnstsw
insb
clc
int3
cmp
inc
or
out
sbb
sub
testl
mov
pop
sarb
insl
push
hlt
push
xor
pop
cmp
sar
movsl
xchg
adc
xor
sti
mov
pop
xor
outsb
rcrb
lcall
movsb
xlat
aam
nop
mov
aaa
xchg
xor
dec
and
psllq
clc
rcll
pop
fs
mov
cmp
pop
outsb
subb
mov
jbe
shl
sub
shlb
add
mov
icebp
cmp
pop
push
into
sbb
repnz
popf
mov
or
repnz
fdivrs
jb
fdivrl
jmp
mov
imul
test
sahf
sub
dec
lock
ja
dec
pop
lahf
rcrb
xchg
stc
mov
lea
sub
loope
fwait
mov
fcompl
pop
pop
pushf
mov
dec
out
sti
sub
sbb
sub
js
shr
and
push
sbb
fcomps
mov
add
call
lods
leave
repz
in
lret
mov
mov
mov
std
xchg
add
cmp
cs
lds
pop
fists
insl
pop
stos
scas
outsb
cs
or
xchg
fldenv
inc
jp
adc
push
add
mov
movsb
cmc
xchg
in
lods
xor
pop
test
cmp
out
add
sbb
mov
or
int3
mov
movsl
mov
xchg
mov
pushf
aas
pop
push
cli
dec
sbb
outsl
and
mov
pop
cmc
in
insb
pop
push
push
cmp
mov
loop
insl
cmp
mov
lea
inc
fcoms
dec
aad
dec
inc
dec
aas
arpl
xchg
test
xor
jge
pop
dec
fs
insl
or
stc
inc
fdiv
sbb
movsl
and
inc
daa
cmp
add
movups
orb
push
push
inc
sub
jae
xchg
dec
push
xor
xor
sti
faddl
cwtl
mov
and
icebp
mov
fistpll
pop
xor
je
fs
sub
fwait
mov
fldt
mov
outsl
sub
mov
negb
jle
mov
stos
pop
fldl
cmp
andl
and
inc
xchg
insb
add
insl
rep
mov
repz
xchg
int
out
xchg
icebp
push
lret
les
jb
sub
in
push
jo
jle
mov
or
add
mov
icebp
push
ret
dec
pushf
aad
fstpl
pop
outsl
or
icebp
arpl
out
inc
jnp
pushf
jmp
xor
mov
fmulp
add
aaa
mov
mov
mov
jg
mov
fwait
inc
lods
jge
xorl
pop
stc
jge
aas
dec
mov
jl
es
sub
mov
aas
pop
sarb
in
ss
cmc
jmp
iret
xlat
pushf
mov
fxch
ja
cmp
popf
sarl
je
adc
fldcw
enter
imul
push
mov
mov
out
rcrl
push
int
imul
dec
cwtl
scas
outsb
pop
stc
out
sbb
push
inc
jno
negb
mov
cmc
add
fcoms
xchg
imull
jl
out
adc
cmpsb
xchg
in
cmp
jno
leave
xchg
mov
cld
js
ficomps
and
or
sti
in
inc
mov
int3
cwtl
je
xchg
inc
ss
xor
dec
adc
add
push
lock
les
sub
fnstcw
mov
sbb
mov
scas
or
nop
xor
pop
add
nop
ret
dec
push
or
cwtl
scas
jmp
leave
and
das
jecxz
jge
sahf
std
faddl
xlat
cmpsb
fadds
push
inc
fs
inc
fsubrp
ret
and
add
rcl
pop
xchg
test
jl
sbb
pop
cltd
cmpsb
jl
xchg
jb
sbb
jnp
popf
push
out
lret
mov
xor
outsb
sti
adc
xor
lcall
jmp
jl
rorb
add
pushl
and
push
ret
pop
mov
jns
jnp
fmulp
add
mov
xchg
cltd
or
adc
cltd
cmp
pop
pop
aad
cwtl
mov
adc
outsl
or
call
mov
in
xor
icebp
xchg
adcb
popa
mov
and
xlat
fdivl
fmul
push
xlat
jnp
xor
jne
dec
pop
mov
stos
mov
xorl
out
xor
mov
bound
lods
dec
inc
cld
fstps
xchg
mov
fadd
cmp
xchg
gs
sub
adc
cmc
or
sbb
fcmovb
jbe
or
jmp
jb
sub
jb
aam
stos
in
add
inc
push
test
aaa
pop
out
in
jne
sar
cmpsb
mov
shrb
int3
loopne
pop
dec
inc
dec
or
outsb
mov
sub
cli
ds
addr16
jo
jb
jmp
fwait
sub
sbbl
icebp
sbb
push
in
jp
sbb
aaa
int
mov
push
in
sbb
mov
cwtl
test
dec
bound
or
lret
mov
xchg
loop
push
cmp
push
out
xchg
fistl
jmp
sub
or
mov
xor
xchg
pop
in
sbb
mov
or
int
stos
cld
mov
inc
sub
ss
mov
out
hlt
inc
dec
clc
push
and
push
sub
pop
mov
xor
pop
cmpsb
cwtl
leave
in
lds
push
adc
and
shl
gs
insb
and
rcrb
xchg
xor
jnp
mov
and
loope
sub
cmp
data16
hlt
mov
shr
sub
mul
arpl
cli
out
or
pushf
ja
push
nop
jnp
adc
jge
sti
mov
inc
mov
pop
fs
ja
ret
insb
xchg
push
mov
jge
and
xchg
lret
out
ficompl
cmp
fsts
cmp
jb
in
mov
adc
cmpsb
addr16
movsb
pop
js
mov
imul
pop
psubsw
push
and
jmp
mov
pushf
out
aaa
out
hlt
cmp
sbb
mov
movsb
jge
in
xchg
lcall
fcoml
jb
loope
jle
jns
mov
push
aad
stc
push
cmp
adc
jge
addr16
nop
shrl
lret
mov
fwait
push
jle
xor
jle
daa
hlt
mov
pop
je
in
pop
mov
xchg
cmp
fsubrs
mov
mov
mov
pop
loop
stc
pop
rcrl
mov
xlat
loop
sub
and
push
aam
xor
inc
xchg
jb
inc
scas
mov
push
jo
and
divl
lahf
fstpt
loopne
scas
clc
sub
ds
fbstp
stos
or
and
jmp
adc
sub
push
testl
inc
popf
lret
leave
inc
and
fimuls
mov
stc
and
je
and
cmpsl
fistpll
xchg
jae
add
icebp
fistps
lret
sbb
sahf
adc
out
jns
xchg
dec
pop
sub
push
gs
lea
mov
scas
or
test
inc
add
add
xchg
xchg
pop
add
mov
jp
mov
add
leave
mov
xlat
daa
gs
mov
or
fdivs
dec
jmp
std
and
sub
sub
in
cmp
mov
sub
lods
add
pop
sbb
inc
shlb
ret
cld
pop
mov
sub
jmp
fisubrl
pop
test
or
inc
lret
push
outsl
add
rclb
cmp
dec
repnz
dec
sti
cld
in
je
adc
push
sbb
icebp
arpl
loopne
rorl
push
xchg
sbb
jle
inc
int
cmp
or
or
push
rcl
call
xchg
stc
fs
add
ds
or
and
mov
ja
mov
fadds
adc
and
mov
jnp
mov
push
inc
dec
ja
mov
cmc
mov
cwtl
sbb
adc
lret
mov
pop
mov
pusha
mov
das
adc
and
out
fld
in
cmp
lcall
shl
lahf
mov
adc
sbb
arpl
push
cmp
push
add
dec
psllw
cltd
sub
bound
cli
jecxz
data16
out
mov
sti
jb
pushf
lods
lds
pop
add
pop
mov
mov
jae
enter
mov
out
fiadds
je
adc
push
mov
insl
jnp
pushf
icebp
jno
mov
inc
insl
imul
xchg
lret
gs
fstpl
push
sub
add
lahf
ret
mov
inc
into
mov
xchg
push
cmp
cmp
dec
sti
movsb
in
repz
cmpb
push
cmp
mov
fiaddl
add
sar
sbb
xchg
push
inc
sbb
dec
push
sbb
adc
push
imul
lods
scas
mov
sti
std
outsb
mov
or
push
in
enter
fisttpll
cmp
mulb
add
testb
aam
out
sbb
sub
cwtl
lock
jne
dec
push
adc
rol
inc
jb
aad
mov
cli
sub
or
pmullw
sbb
stos
sub
stos
and
inc
pushf
clc
mov
sbb
insl
push
ret
xor
xor
stos
mov
andl
xor
aad
pop
std
and
mov
mov
loopne
pop
int
jne
jae
fcoml
jne
push
nop
dec
mov
xchg
out
cs
ret
mov
mov
mov
add
push
fisubs
out
add
push
leave
rcrl
cwtl
test
push
inc
movsl
inc
or
sbb
cmp
jl
xchg
mov
bound
sbb
jo
aad
mov
pop
add
xchg
sub
cmp
sub
adc
pop
jmp
loopne
add
in
lods
mov
pop
jge
lock
out
cs
push
aas
ret
sbb
dec
lods
stos
add
es
and
dec
js
lds
adc
lea
dec
adcb
into
mov
sub
rol
imul
cmp
das
insb
bound
and
and
mov
cmpsl
loop
add
lea
jge
cwtl
rcrb
fcoml
sub
inc
xchg
mov
ljmp
inc
insb
ffree
mov
mov
inc
xor
xor
loop
or
enter
inc
sbb
pop
jnp
cld
push
mov
push
sarl
sub
inc
xor
fdivs
loop
push
fbstp
cmp
pop
in
dec
xlat
mov
xchg
push
xchg
xchg
or
cltd
f2xm1
mov
mov
imul
fwait
int
ffreep
mov
push
cltd
sbb
out
cmp
xchg
fbstp
dec
jns
sbb
or
sbb
stc
fcmovnu
jle
jg
lods
xchg
or
inc
insl
jmp
cwtl
add
les
sbbb
mov
mov
jns
jbe
mov
js
pop
xchg
mov
cmpsl
jge
inc
call
daa
lcall
cmp
scas
out
mov
insl
daa
cmp
add
sahf
cmp
dec
dec
mov
jnp
and
push
orl
add
inc
cmp
mov
aaa
xchg
pop
jo
add
xor
in
sti
jne
mov
cmc
add
cltd
pusha
imul
aam
mov
adc
mov
jne
pushf
xor
into
popa
mov
jmp
xor
mov
clc
mov
lods
cmpsb
int
push
test
cltd
xor
cltd
leave
add
xor
jp
adc
cmp
push
add
or
fimull
cmp
sub
scas
adc
aaa
sti
rcrb
sbb
push
sub
ret
out
in
testb
lock
mov
xor
and
sub
cs
inc
adc
leave
adc
cmp
cwtl
lahf
jg
je
inc
cmp
sub
test
xor
ret
enter
mov
add
mov
jmp
jmp
dec
cmp
es
lcall
imul
addl
popa
dec
call
into
out
mov
shll
cmpsl
pop
jg
pop
sub
adc
test
lods
add
jbe
or
xor
lock
adc
sar
lds
movsb
xchg
mov
mov
lods
sbb
ffreep
lcall
push
or
mov
repnz
cmp
sbb
jecxz
inc
mov
inc
xor
mov
imul
inc
mov
mov
or
arpl
test
adc
cmp
cmp
mov
stc
les
sbb
outsl
popa
sbb
mov
iret
and
jle
pop
fstpl
pop
lods
fstps
jle
aas
mov
ret
inc
cmpsl
mov
jne
fsubl
imul
push
rolb
jo
popf
iret
sar
imul
imul
aad
push
hlt
cs
cmc
push
mov
orb
or
arpl
enter
js
mov
cmp
jp
sbb
out
or
lods
sbb
repnz
cmpsb
mov
inc
jmp
sahf
sbb
jb
sahf
scas
adc
adc
xor
pop
push
cmp
out
jecxz
outsl
jbe
xchg
cmp
dec
and
add
mov
mov
or
xor
out
xchg
dec
test
std
dec
das
mov
movsl
scas
add
push
and
das
pop
mov
fucomip
fstpl
inc
gs
imul
jl
into
xchg
pop
add
mov
push
aaa
stc
stos
psadbw
jb
push
xor
sub
test
push
cltd
push
icebp
rcrl
cmp
and
movsl
std
inc
and
jno
add
adc
cmpb
mov
arpl
add
js
sub
mov
dec
imul
adcl
inc
dec
xor
pushf
cmp
mov
inc
and
mov
push
xor
pop
fwait
cmpsl
inc
or
xor
cmp
or
in
jnp
rcl
imul
test
repnz
movsl
cmp
lret
inc
mov
push
sub
xor
add
and
push
loope
pop
popf
fmuls
insl
lret
lahf
dec
outsb
movb
or
mov
adc
jmp
xchg
imul
mov
aam
push
sbb
jbe
jno
sbb
jno
stos
scas
cmp
enter
out
jae
or
inc
gs
cmp
cltd
mov
xor
push
addr16
inc
jb
enter
adc
rcl
outsl
rcrl
and
jae
pop
int
inc
fimull
mov
add
mov
push
or
mov
insb
std
aam
es
and
lock
ja
in
lds
enter
xchg
sahf
push
sbb
shlb
fiadds
mov
mov
mov
add
icebp
loop
rorb
add
push
testb
fcompl
mov
sbbl
push
stos
outsb
stos
mov
dec
push
out
movl
dec
addr16
out
xlat
sbb
mov
mov
in
inc
cltd
bound
sbb
pushf
or
andl
call
inc
call
ss
dec
pop
xlat
sub
cmpsl
clc
fadds
enter
lock
and
out
or
mov
movsl
jl
imul
mov
fwait
mov
cltd
repnz
and
enter
and
push
cwtl
mov
adc
fsubrs
loop
repz
dec
cmp
lahf
cwtl
and
add
jge
aaa
movsl
push
mov
or
stos
push
rcrl
mov
and
lcall
sahf
adc
lahf
cmp
or
rolb
sti
ror
sub
lea
sub
cwtl
shlb
nop
sti
lods
xchg
leave
bound
jl
outsl
sub
cs
fwait
xor
mov
in
jmp
gs
pop
mov
daa
jbe
pop
inc
mov
jl
stos
fmull
icebp
cmp
xor
xor
sbb
loop
sbb
gs
mov
add
loop
cli
imul
or
adc
fwait
clc
push
call
fistpl
insl
gs
sub
jo
pop
fdiv
sbbl
xor
int
pop
insl
cli
mov
xchg
mov
inc
lods
mov
scas
cmp
jno
and
rorl
leave
scas
jle
mov
dec
rcrl
jns
lds
mov
dec
je
adc
pop
or
add
negb
inc
fcmovu
xor
add
jno
rcrb
int
repz
test
mov
rcrl
pop
pop
inc
mov
shlb
mov
sbb
inc
sub
cmp
inc
mov
push
pop
pop
insb
sub
xchg
inc
ss
std
adc
lods
inc
out
mov
push
lea
dec
sbb
sbbb
inc
inc
cmp
jg
aaa
adc
pop
lret
iret
xor
lret
cmp
mov
xchg
pop
test
rclb
mov
xchg
mov
xchg
push
into
ss
incl
or
jo
test
cmpsb
adcb
push
mov
push
repnz
sti
out
insl
lahf
fimuls
cmp
fists
fsubr
mov
mov
inc
pushf
xchg
mov
jmp
leave
fbstp
iret
cmpl
lahf
mov
xchg
pop
adcl
push
mov
out
out
adc
nop
stos
imul
dec
fcomip
xchg
fstps
fwait
xchg
out
lds
sub
cmpsb
add
das
jae
test
mov
sub
pop
ds
jae
outsb
xchg
mov
mov
ret
movsl
sub
pop
hlt
mov
jne
mov
add
fstl
inc
cmp
jne
ss
jge
push
xchg
fstpl
out
inc
pop
jecxz
andl
pop
jns
pop
sub
pop
mov
adc
jb
rcr
inc
push
adc
out
cmp
in
mov
arpl
je
fs
pop
call
sbb
mov
mov
or
cwtl
dec
cs
js
test
sbb
add
adc
push
inc
fisttpl
mov
icebp
dec
push
mov
push
push
fidivrs
dec
push
ret
jecxz
cmp
jns
mov
mov
int3
aam
stos
adc
sbb
dec
femms
mov
icebp
in
push
in
adc
repnz
jo
jno
lcall
push
leave
repnz
sub
jb
xor
fs
jl
pop
cwtl
lcall
imul
inc
push
xchg
push
jecxz
adcb
test
in
mov
movb
pushf
cmc
outsl
lahf
sub
dec
pop
xchg
mov
push
faddl
add
sub
mov
ret
mov
fldcw
mov
jp
pop
xor
cmc
pop
enter
aas
xor
pusha
minps
aad
mov
ss
or
sub
dec
pop
nop
insl
adc
and
add
in
hlt
sbb
jle
pop
xchg
or
movsl
in
gs
xchg
or
cmp
jno
insl
sub
mov
popa
xor
dec
mov
jmp
pop
dec
cmpsb
repz
pop
in
divl
lods
movsb
dec
sub
lret
mov
inc
sub
lahf
in
mulb
and
jmp
test
jmp
adc
cmpsl
scas
adc
popa
repz
fldcw
mov
dec
adc
push
mov
stos
adcb
and
fldl
add
rorl
jo
nop
adc
popa
cltd
ret
lret
cwtd
loope
test
out
sahf
shl
cld
xchg
sahf
and
sti
bnd
mov
mov
mov
lea
inc
push
fsubrs
jns
mov
cmc
push
dec
jl
bound
les
in
mov
arpl
je
xor
bound
daa
xchg
inc
dec
outsb
xchg
and
sbb
inc
ljmp
and
cmp
inc
insb
xor
xchg
dec
fimuls
ja
sub
mov
adc
mov
cmc
pusha
push
jmp
push
cs
inc
loope
shrb
mov
bound
push
dec
jb
mov
aaa
push
dec
add
jecxz
cmpsb
cmp
iret
xor
aaa
imul
jmp
adc
mov
mov
sbb
mov
pop
sbb
push
ja
inc
jo
mov
jno
mov
push
adc
shl
stos
sub
jge
test
fisubl
repnz
add
mov
push
fildll
adc
sbb
aad
xor
out
or
stos
sub
or
pusha
add
and
mov
push
and
pop
dec
out
stos
call
loope
in
xorl
add
call
pushf
or
lahf
cmp
jge
insl
push
cld
pop
xlat
mov
sbb
sbb
cmp
sub
jno
push
in
ss
mov
aam
in
jb
fwait
mov
mov
inc
add
jg
scas
mov
sub
rolb
cmc
call
xor
inc
adc
push
adc
and
test
outsl
jmp
mov
push
push
or
jb
pop
mov
mov
jno
push
xor
mov
jge
pop
ret
rclb
arpl
repz
cwtl
pop
popl
dec
fdivr
dec
fidivs
jmp
subl
popl
jmp
aas
insl
add
jo
jns
fs
addr16
in
push
inc
jno
mov
jae
movsb
ljmp
cs
mov
mov
orl
outsb
imul
jl
ss
dec
fsubr
jae
mov
mov
adc
adc
cld
out
sub
add
jnp
cwtl
mov
dec
daa
push
cmp
movsl
in
push
add
insb
add
cltd
and
lods
rorl
xchg
cld
sahf
jne
mov
hlt
stos
fwait
push
shrb
sub
pop
cmp
daa
dec
dec
subb
das
leave
popa
jmp
adc
jp
inc
sub
push
mov
push
add
pop
and
jecxz
mov
adc
addb
out
lea
sti
add
test
cld
mov
stos
add
mov
sub
mov
cli
mov
dec
mov
pop
les
scas
xor
movl
fucomp
dec
enter
xorl
push
sub
jmp
mov
jae
xor
outsb
cli
xorl
jnp
dec
test
sub
test
sub
bound
test
jno
ss
dec
adcb
rolb
and
push
sub
and
fsubrs
pushf
xchg
mov
pop
jns
pop
outsl
lds
jae
inc
ljmp
push
cs
sbb
dec
cmp
jg
dec
rorl
adc
pop
das
sahf
test
pop
cmpb
cmpsb
mov
sbb
and
dec
lea
das
jecxz
cmp
test
push
lret
aas
repz
int
dec
pop
or
lods
jns
xor
notl
out
or
aad
addr16
leave
cmc
add
or
aam
shr
orl
sbb
inc
ljmp
xor
ret
or
jo
idivl
mov
xchg
and
mov
mov
int3
adc
addr16
push
and
lret
cmp
sbb
mov
out
clc
js
hlt
xor
adc
sub
fisttpll
jnp
mov
sub
sbb
cmp
icebp
rol
rcl
sub
and
push
addr16
adc
jns
rcrb
cmpsl
pop
in
jne
clc
jge
insl
inc
mov
sbb
mov
fs
int
jbe
push
into
cmpsl
adc
pop
rorb
or
sub
adc
push
scas
popa
cmp
adc
fs
dec
dec
pop
dec
insl
mov
in
cmpsb
add
fstpt
sbb
adc
shrl
je
fwait
pop
sbb
leave
xchg
gs
in
in
aas
jge
fdivrl
xchg
inc
sub
sub
aas
mov
dec
mov
ja
mov
dec
push
mov
jp
test
cmp
ret
push
fiadds
pop
dec
out
sahf
push
movsl
or
lcall
ret
xchg
shll
push
int
pop
xchg
lahf
and
jae
pop
test
jb
pmaxub
pop
aas
fwait
pop
adc
xlat
popl
mov
scas
mov
data16
sbb
pushf
mov
fdivs
dec
mov
shl
inc
icebp
fld
ja
sub
pop
mov
dec
movl
pop
cwtl
cmp
fcoms
int
in
push
jecxz
jnp
push
filds
scas
js
stos
fiaddl
sbb
sub
add
test
cmp
cmp
insb
xchg
xor
and
enter
ficomps
std
stos
das
push
mov
adc
xchg
rorb
faddl
fdivrs
call
jae
jns
jge
dec
cmp
repnz
push
ds
pop
xchg
pop
pop
sub
xchg
push
lahf
adc
call
cmp
ret
sahf
pop
dec
pop
pop
loopne
or
add
or
sar
push
lahf
int3
fldcw
test
gs
pushf
jecxz
add
mov
shlb
inc
repnz
mov
xor
test
mov
or
mov
dec
sub
mov
add
dec
scas
mov
out
xchg
xor
loopne
fs
scas
xlat
ret
fwait
loopne
xchg
and
mov
fbld
push
leave
inc
sbb
sub
xchg
sti
aas
xchg
in
inc
sbb
xor
push
mov
loop
adc
jb
fnstsw
sub
fidivl
sti
cmpsb
je
cld
pop
push
fiaddl
adc
in
push
mov
fmull
sbb
add
test
imul
jb
xor
inc
iret
gs
jo
daa
mov
add
hlt
addl
call
xchg
mov
dec
out
movsl
aaa
sbb
mov
pop
call
scas
pop
jmp
in
sub
imul
mov
inc
out
xor
xor
aaa
xchg
ret
fists
mov
sarb
cmp
xor
mov
mov
xor
fwait
adc
mov
or
cmp
adc
pop
imul
cs
or
mov
xchg
and
outsb
cmpsl
shlb
jl
aam
test
test
and
cvtps2pd
repnz
aad
dec
lods
out
sti
bound
iret
adc
js
mov
lds
test
xor
xor
imul
pop
mov
shll
lds
push
inc
fs
loop
mov
aam
and
subb
pushf
gs
sub
out
ja
and
ds
test
adc
and
add
xor
inc
std
dec
ret
rcll
xor
pop
filds
dec
mov
mov
add
stc
mov
into
push
outsb
xchg
cmp
add
lea
xchg
aaa
xchg
jae
sbb
dec
mov
std
mov
push
ljmp
je
fwait
xchg
nop
cmp
jo
out
cli
or
jae
stos
ret
jg
mov
and
mov
adc
enter
ret
fldcw
push
jb
mov
enter
adc
scas
ss
mov
orb
mov
out
in
cmpsb
out
filds
cmp
and
leave
jp
ljmp
add
movsb
arpl
jle
loope
sbb
cwtl
dec
insb
rcll
and
cmp
mov
sti
stos
add
xchg
loope
repz
aam
adc
adc
fcomi
push
cld
icebp
sub
cmp
insl
push
shrl
sbb
jnp
enter
mov
jae
outsl
mov
into
out
or
sbb
shrb
cmpsb
daa
fwait
dec
jmp
inc
mov
cmpl
pop
lcall
or
ja
es
and
std
sub
test
sub
test
jae
cwtl
inc
mov
pop
iret
cmpsb
in
mov
scas
mov
in
call
mov
mov
scas
orl
pop
inc
sbb
jns
icebp
adc
cmp
adc
xchg
mov
les
mov
test
push
lock
xchg
jo
es
dec
daa
mov
ljmp
pop
xchg
mov
fwait
push
leave
dec
sbb
push
push
add
push
mov
push
shlb
jb
inc
repz
xchg
shll
incb
inc
call
ror
sub
add
dec
out
mov
sahf
imul
int3
xchg
or
or
sub
lcall
adc
sub
test
pop
add
test
mov
dec
adc
aaa
movsl
jno
mov
xchg
dec
xorl
cwtl
rorl
stos
iret
in
add
sbb
push
push
imul
jb
adc
ss
jmp
cli
out
lods
or
inc
das
or
mov
xchg
push
daa
test
push
xor
int3
popa
rorb
stc
add
aaa
testl
add
dec
xchg
lods
inc
leave
xor
and
sub
fsubrl
mov
fisttpl
xor
sti
push
sub
xchg
cwtl
aad
das
shll
pop
cmpsb
js
add
clc
aam
ficomps
movsl
dec
add
jge
shl
push
jg
insb
cmp
add
pop
in
adc
test
sar
aas
or
jnp
bound
add
adc
inc
es
scas
iret
ds
repnz
push
lods
xchg
sarb
sbbb
or
les
cltd
push
xchg
xchg
add
push
fimull
das
sub
xor
add
sbb
xchg
cmp
lret
roll
aaa
inc
jne
jp
cmp
frstor
out
shrl
xchg
movsl
inc
sbb
fisubs
outsl
adc
popf
push
inc
aaa
ficompl
clc
mov
fldl
sbbl
pushf
outsb
dec
scas
shr
cs
clc
mov
out
fistpll
dec
test
xchg
fs
outsb
inc
mov
insb
inc
out
je
bound
orb
pop
outsl
movsb
xchg
sahf
popa
dec
jg
int3
sbb
mov
icebp
inc
mov
dec
shrl
hlt
mov
xor
xchg
sti
xlat
lock
mov
or
repnz
jge
sub
mov
sbb
xchg
mov
rolb
out
inc
sub
lret
sub
addr16
popa
pop
out
cs
shrb
cli
sbb
jae
test
sbb
shlb
pushw
in
ss
pop
cli
pushf
scas
ds
push
pop
mov
adcb
loopne
adc
inc
mov
mov
imul
jno
push
shll
and
sti
icebp
lcall
push
or
addr16
lret
pop
lods
pushf
mov
dec
pop
pusha
cwtl
mov
aad
andl
mov
mov
jbe
repnz
jne
daa
out
out
iret
jbe
js
inc
loope
test
mov
lret
push
jge
adc
lahf
jmp
rclb
cmc
pop
dec
pop
loope
jae
scas
jl
cmp
xchg
pop
fs
inc
xor
mov
sbb
scas
push
stos
aas
pusha
pop
sbb
test
cmp
xchg
mov
push
faddl
inc
jno
sub
adc
push
add
stos
test
lcall
xor
push
cmp
mov
hlt
or
push
js
xchg
imul
pop
pop
xor
call
fisubl
repz
mov
lea
or
das
or
mov
jmp
ss
lock
or
rclb
lock
lcall
xchg
cmp
ss
ja
cmp
call
mov
fcoms
loope
adc
out
movsl
jnp,pt
add
fldenv
add
lret
popf
cmp
or
lcall
fldlg2
cmpsl
pusha
inc
sbb
push
loop
test
into
inc
fmuls
mov
lea
cli
adc
std
mov
iret
add
push
cmpsb
icebp
push
pop
push
out
pop
out
xor
xor
pusha
pushf
cltd
in
dec
cmp
sub
stos
inc
push
pop
xor
add
push
pop
dec
cltd
or
icebp
jae
xchg
mov
inc
pop
cwtl
dec
test
adc
or
add
dec
mov
jge
in
jl
and
push
cmp
dec
outsb
and
sbb
mov
into
push
pop
mov
out
leave
addr16
outsl
dec
or
dec
jl
mov
cmp
pop
mov
outsb
lahf
pusha
je
movsl
sub
test
out
cli
add
rolb
ret
lcall
test
mov
mov
pop
test
repz
xchg
push
mov
stc
cs
outsl
into
lods
les
xorb
test
jbe
sbb
xchg
mov
std
xor
sbb
idivl
sbb
and
movsl
test
pop
mov
mov
and
es
cmpsl
dec
daa
xor
data16
insl
fcoml
dec
aas
icebp
iret
ret
adc
rcll
push
fucomip
dec
pop
imul
hlt
cwtl
cmp
xor
test
aas
enter
push
fldt
inc
sbb
leave
push
xchg
sahf
bound
xor
xchg
push
pop
in
scas
mov
mov
or
pop
push
repz
sar
sub
cmp
in
sub
dec
inc
arpl
jno
fcmovu
push
add
mov
and
aas
pmullw
or
jecxz
jg
jns
in
dec
jae
push
test
xor
push
adc
stos
lcall
xchg
stc
outsb
add
out
mov
out
mov
call
f2xm1
xlat
add
fstps
xchg
mov
js
xor
push
xor
loop
push
outsl
popf
lock
lds
adc
cld
or
and
andb
sub
test
or
jmp
loope
aaa
iret
xor
sahf
push
push
gs
aam
sti
cli
push
ret
jno
addr16
jne
mov
inc
pusha
inc
pop
xchg
shrl
jae
out
push
jne
xchg
pop
cli
cmc
out
sbbb
shll
inc
pop
lods
gs
shrb
fldenv
pop
lahf
pushf
push
pop
clc
fpatan
cmp
test
adc
loope
or
test
mov
xlat
dec
push
add
pop
pushf
pop
sbb
lcall
aam
sub
inc
movb
xchg
aas
cwtl
xchg
sub
pop
jae
and
andl
sub
xchg
sahf
pop
jp
call
sahf
dec
dec
ds
clc
lea
testb
and
mov
cmpsl
xor
subl
add
iret
fimull
loopne
ficompl
stos
test
mov
testl
pop
scas
ss
in
insb
xchg
adc
pop
ds
cld
aam
js
add
add
jp
stc
push
lret
mov
test
int3
jge
push
je
lret
and
add
outsb
sbb
loop
sub
mov
scas
xor
mov
outsb
xor
sub
ret
int
xchg
jno
inc
mov
mov
arpl
int
cld
out
lods
sub
pop
or
mov
mov
jle
and
in
scas
fldcw
mov
or
sbb
in
cmp
ret
lea
push
dec
fstpl
and
sbb
inc
and
push
ljmp
fwait
add
rorl
sbb
pop
sbb
insb
sbb
xchg
push
push
jnp
cmpsb
mov
fildl
shl
xor
fcmovb
insl
cmp
sbb
inc
outsl
cld
xlat
pop
mov
pop
cmp
adc
lahf
sbb
adc
std
mov
dec
cmp
sub
and
cmc
insl
xor
inc
decb
or
ss
pop
and
xchg
push
mov
movsl
push
icebp
dec
mov
jb
adc
not
idiv
std
jg
dec
dec
sbb
in
stc
in
mov
cmpsb
in
imul
add
ds
fs
movsb
pusha
fstps
or
sub
dec
cmpsb
pusha
call
add
push
mov
das
sbb
lea
ds
jno
push
repz
xchg
add
xor
fs
loope
inc
xlat
add
xchg
inc
fiadds
dec
inc
pop
xor
stos
lods
xor
jae
ja
stos
add
sar
xchg
push
inc
lcall
shlb
push
ret
cmp
shll
inc
sbb
add
dec
das
psllw
ret
push
mov
cs
inc
les
in
movsl
dec
sbb
mov
inc
pop
test
jge
adc
cmp
in
dec
adcl
cli
mov
mov
sbb
add
daa
sbb
scas
xor
and
lods
loopne
xchg
fs
or
dec
dec
pop
xor
mov
jl
jmp
and
xor
test
orl
push
push
fld
subb
sbb
mov
scas
enter
scas
gs
push
fidivrl
popf
adc
mov
or
mov
mov
shll
mov
sbb
ret
jnp
xorl
js
test
enter
fstpt
cmp
xchg
jmp
xchg
jne
ja
iret
ljmp
mov
hlt
adc
xor
cmpsl
and
call
sub
jnp
and
out
repnz
push
fcom
xchg
pop
adc
or
jmp
push
mov
sarb
jne
add
je
outsl
fsubp
add
sbb
or
dec
outsl
mov
out
fadds
jmp
cmp
cmp
cltd
xchg
cwtl
xchg
daa
mov
add
mov
add
rcll
pop
jns
sti
aad
xor
rorl
dec
xchg
xchg
or
dec
push
cmpsb
clc
push
adc
mov
cmc
je
ret
mov
cmp
loopne
lahf
fidivs
shrl
cmp
dec
test
cmp
stc
mov
in
mov
mov
xchg
dec
fstps
push
sub
xor
popf
bound
mov
ficoml
mov
adc
xor
pop
je
cmc
mov
lret
adc
and
pop
add
push
cmp
sub
out
aas
jne
iret
add
mov
arpl
xor
outsb
pop
dec
clc
sbb
pusha
and
sbb
mov
iret
int3
mov
sub
popa
push
into
sub
push
rcrl
fbld
fwait
sbb
sbb
loope
mov
mov
out
into
add
or
test
xchg
pop
cmp
cltd
ret
outsl
fcomps
sub
in
mov
jno
enter
into
mov
xchg
or
fmuls
mov
xchg
jl
jo
stos
icebp
daa
stc
lea
insb
and
enter
cmp
dec
pop
jge
mov
pop
test
int3
mov
into
into
arpl
or
rcr
sbb
dec
and
xor
or
icebp
imul
sub
adc
mov
fildl
push
mov
imul
rclb
cmp
jge
jecxz
dec
jb
xchg
inc
pop
fisubs
fisttps
cmp
cmp
int
rcrl
and
imul
adc
add
or
mov
pushl
fdivs
imul
sbb
hlt
sub
sbb
in
aas
mov
js
inc
xchg
jns
mov
pop
adc
shll
fs
sbb
adc
inc
dec
jb
and
inc
lods
push
mov
into
lcall
adc
lret
xchg
sbb
mov
push
jnp
adc
insl
mov
push
jg
inc
or
cmp
sahf
mov
sbbl
cli
pushf
mov
lock
dec
adc
popf
pop
xchg
add
and
ret
in
decl
outsl
mov
movsb
add
push
mov
push
in
lcall
stos
adc
inc
les
or
lods
inc
or
cmpsb
push
or
and
mov
dec
cmp
aas
movsbl
mov
push
add
add
mull
add
pop
sbb
pop
adc
jg
push
cld
jecxz
push
es
cld
arpl
and
je
mov
cli
sub
int
mov
jno
or
insb
movsl
dec
pop
imul
cwtl
mov
sarl
fdivl
frstor
mov
stos
aam
cwtl
mov
ss
sub
pusha
jge
icebp
jmp
and
iret
pop
push
popf
sbb
orb
div
push
bound
push
lock
mov
and
fdivrp
pop
xchg
fsubrs
push
add
sbbb
pop
mov
xor
bound
xchg
push
stos
mov
inc
push
adc
xchg
jno
ljmp
push
cmp
jb
pop
out
into
mov
sbb
adc
scas
add
or
rcrl
push
or
mov
lods
cwtl
daa
sbbl
sub
inc
pop
lods
sub
lret
xchg
push
sbb
and
add
add
lahf
iret
mul
pop
mov
and
data16
push
pop
mov
out
jmp
test
inc
js
cld
aam
jmp
jmp
dec
dec
jo
shl
sub
xorb
popf
mov
enter
mov
cltd
cmp
popf
xchg
pushl
jae
repz
std
fidivrl
leave
lret
mov
add
ja
test
jnp
add
mov
lock
out
cmpsl
dec
cmp
pushf
mov
adc
xlat
inc
xchg
lahf
jns
mov
fimuls
aas
jecxz
out
adc
mov
push
cmp
cwtl
mov
ret
sbb
ret
lods
sbbl
out
xor
scas
jne
loop
dec
stos
ret
inc
fmuls
xorl
mov
popa
mov
movsb
push
mov
dec
push
pop
add
cwtl
fs
ret
insb
and
test
push
mov
mov
test
mov
adc
es
xor
push
movsb
adc
test
popa
aam
jo
hlt
push
test
hlt
repz
jb
je
add
out
aad
sbbb
loope
lret
lret
sbb
in
ss
sbb
loop
int3
mov
imull
lods
out
add
push
push
adc
movsb
xor
subl
xor
loope
cmp
mov
pop
jmp
or
fwait
xchg
xor
jns
fs
fstpt
popf
jge
icebp
and
inc
loop
int3
and
dec
mov
sbb
sahf
ret
adc
js
fcoms
cmpsb
jge
inc
jmp
pop
pop
push
cmp
addr16
cwtl
jge
int
xchg
fs
push
jle
dec
pop
add
jb
jne
jbe
in
insb
ljmp
or
mov
mov
dec
call
jge
enter
jns
xor
and
imul
pushf
ret
sub
sbb
popa
push
popa
aas
sbb
sbbl
mov
pushl
insb
insl
mov
lcall
add
daa
push
icebp
cmp
sub
add
call
bound
jle
cmp
jb
hlt
cmpsl
dec
push
pop
lret
std
pop
mov
lea
pop
jmp
cs
hlt
sbb
negb
adc
into
push
xchg
aam
cmpsl
add
testl
push
mov
inc
and
xchg
fistl
sub
mov
ret
fcmovnu
cmp
ss
jecxz
mov
in
outsl
mov
fcompl
test
sub
je
jmp
lods
sub
mov
sub
add
inc
mov
jmp
lcall
gs
mov
fxch
sbb
cld
in
shrl
jl
sub
jmp
mov
sbb
jbe
scas
mov
fadd
inc
jge
lret
sub
sbb
mov
jle
add
mov
or
das
in
cmpsb
test
pop
popa
je
xchg
jae
dec
sahf
popf
mov
pop
sbb
inc
add
pop
push
xchg
loopne
jno
push
lods
div
insl
sbb
or
test
dec
pushf
int3
int3
sub
pop
or
jbe
lods
push
jno
adc
inc
fmuls
movsb
pop
and
jbe
jl
cmp
ficoml
pop
inc
dec
xor
addr16
mov
xor
cld
lods
or
pop
shl
paddb
insl
sbb
es
shll
pop
sbb
and
push
inc
movsb
mov
xchg
cmp
sub
adc
pop
sub
push
pop
inc
movl
pop
sbb
dec
sbb
mov
lret
lret
inc
xchg
popa
jbe
and
stos
cmc
imul
cli
xor
jmp
popa
movsl
cmpsb
adc
insl
mov
mov
dec
add
dec
mov
or
ret
out
ficoms
jle
sbb
int3
lcall
push
xchg
sub
jb
mov
fidivrs
inc
clc
push
or
add
lds
cmp
xor
testb
sbb
ret
mov
sbb
lahf
mov
mov
fstps
xchg
cwtl
or
cli
out
icebp
ret
mov
push
pop
xchg
scas
inc
push
sub
imul
out
leave
cmp
les
xor
pop
xchg
pop
xor
loop
imul
push
mov
sti
push
xchg
subb
std
xlat
sub
push
cmp
mov
aad
fidivrs
pop
jmp
push
mov
lock
aaa
test
insl
xor
pop
inc
jne
lods
mov
cmpsb
jmp
or
test
jecxz
push
sbb
sbb
imul
addr16
sub
notb
fimuls
ret
hlt
movq
pop
jecxz
adc
pop
jb
xor
cmpsl
xor
xchg
aam
cmp
push
add
imul
jns
bound
loopne
push
andl
adc
jp
subb
icebp
mov
mov
out
xor
mov
loop
sub
dec
sub
cmp
pop
insb
divb
lcall
loopne
cs
mov
std
aam
mov
gs
xor
dec
cmp
stc
adc
aas
xchg
ss
pop
mov
fistps
pop
xlat
imul
test
pop
ficomps
lret
cltd
movsl
sub
decl
sbb
mov
mov
cmp
jp
sub
lret
dec
leave
int3
xchg
sub
lods
fcoml
arpl
in
adc
mov
loopne
adc
jg
inc
mov
mov
adc
dec
sbb
loopne
xchg
jl
sub
push
mov
sbb
sub
push
leave
cmp
in
adc
popa
xor
and
mov
in
xor
push
xor
mov
add
mov
mov
inc
pop
fwait
mov
mov
cmpsb
pop
cli
fldcw
mov
jns
add
popa
les
jecxz
dec
insb
cmp
dec
cs
and
push
xchg
mov
mov
push
sahf
mov
xlat
push
mov
outsl
xchg
inc
stos
pop
mov
lds
xchg
add
sub
int
push
and
bound
jb
outsl
rol
es
and
std
outsb
push
mov
inc
push
fsincos
xchg
int3
je
mov
inc
rorl
add
and
sbb
and
fimull
or
scas
adc
adc
pop
fldl2t
cmovge
repnz
jns
pop
lahf
xchg
addr16
or
enter
and
jg
add
adc
test
mov
jno,pt
aam
pop
jo
cmp
je
push
pop
xor
arpl
or
jecxz
std
cs
xchg
inc
dec
mov
mov
or
out
in
jno
or
mov
out
out
mov
mov
arpl
in
loope
inc
cmpsl
jmp
inc
add
push
imul
ja
push
repnz
sarb
xchg
xor
dec
jecxz
pop
mov
fsubrl
inc
aam
jge
pushf
insb
sbb
jbe
nop
test
sbb
jmp
dec
mov
add
les
jae
fmul
imul
pop
test
and
jne
xchg
aad
ds
test
cmp
xor
das
jecxz
out
scas
xor
sbb
and
scas
nopl
ret
loopne
and
jecxz
inc
out
inc
cli
push
test
xor
movsl
mov
mov
xor
add
inc
je
vmwrite
das
leave
popa
or
adc
fnsave
loope
xor
into
daa
pcmpgtw
mov
jb
mov
pop
sub
and
add
outsb
inc
lods
loop
and
pop
xchg
cmpsb
xor
jg
rorl
jmp
mov
jae
repnz
and
pop
jmp
loop
inc
push
notrack
pop
lret
arpl
cli
mov
mov
in
pop
cltd
nop
mov
mov
or
or
inc
mov
lods
pop
push
push
mov
nop/reserved
addb
sub
pop
imul
lods
inc
and
inc
test
mov
push
fisttps
add
sbb
sbb
push
ja
jp
test
xchg
lcall
cmp
mov
push
movsl
inc
lret
test
pop
xor
jl
mov
jmp
push
inc
mov
fsubrp
nop
lea
adc
lret
xor
cwtl
xchg
rcl
cmp
add
dec
cwtl
test
ret
push
es
dec
mov
mov
outsl
jge
pop
pop
into
and
in
dec
dec
xchg
leave
pusha
and
push
mov
add
cmp
and
arpl
pop
faddp
or
out
ja
jo
cmpl
shll
insl
aaa
xchg
xchg
int
add
enter
xchg
pop
cmp
nop
test
mov
push
sbb
mov
mov
inc
jmp
push
sub
cltd
leave
ficompl
pop
adc
adc
roll
cwtl
faddl
adcb
cmp
in
sarl
sbb
outsb
push
mov
inc
int3
outsl
mov
jns
test
inc
fwait
adc
inc
push
mov
xchg
stc
xor
fiaddl
test
leave
inc
jl
sbb
jmp
lods
cwtl
clc
mov
out
imul
mov
push
std
and
mov
cmp
mov
push
call
mov
pop
dec
sarb
xchg
in
mov
gs
loopne
inc
enter
fmuls
test
pop
mov
sarb
mov
out
test
pop
mov
pop
lods
movsl
inc
cs
pop
push
xchg
push
ret
in
fildl
dec
mov
pop
clc
cmp
adc
stc
pop
pop
sarb
jg
fists
add
and
mov
mov
jns
jnp
hlt
wbinvd
adc
sbb
xchg
mov
xor
sarl
mov
push
mov
insb
inc
testb
ret
test
je
bound
outsl
push
pop
and
cmpsl
inc
ret
icebp
jns
cs
push
mov
mov
jo
flds
fwait
ret
mov
popf
mov
ds
sbb
in
aas
imul
mov
xor
imul
xor
jge
xor
adc
cld
lods
popf
fidivrs
or
sub
sbb
stc
inc
push
inc
in
cld
or
jmp
mov
scas
int
rep
jb
outsb
mov
fdivrs
adcb
inc
xchg
jge
scas
dec
sbb
int3
sub
addr16
bound
mov
ds
sti
mov
mov
jecxz
sub
push
hlt
push
lcall
dec
orb
repnz
jo
ljmp
leave
js
subb
lock
cmpsb
daa
repz
fists
out
add
shrb
test
lahf
mov
sub
dec
cmp
jmp
jg
push
repz
and
ds
or
xchg
xchg
mov
iret
dec
xchg
push
sbb
cmc
in
scas
popa
stos
cmpsl
sti
js
lret
loopne
test
mov
cmc
cmp
outsl
outsb
sbb
repnz
pop
scas
mov
mov
inc
pop
sub
test
addr16
pop
jnp
loopne
inc
shr
scas
ficoml
xchg
jo
imul
sub
xchg
loop
jge
int
pushf
mov
jecxz
adc
iret
mov
or
and
push
fmull
and
mov
cld
mov
jno
push
cwtl
push
mov
mov
cmp
push
out
mov
roll
jnp
loopne
lea
or
mov
shrb
mov
addl
inc
lods
pop
nop
pop
mov
arpl
test
scas
movsb
bound
xchg
lock
add
and
sub
shlb
xor
fnstsw
mov
jno
jbe
dec
outsl
mov
mov
notb
fldenv
xor
dec
in
das
fistpl
jg
pop
fimull
leave
cmp
mov
dec
pop
cltd
hlt
sub
or
pop
ja
ret
insb
cmp
inc
fwait
movsb
jne
mov
call
dec
mov
and
add
shlb
xor
jae
gs
rcrb
adc
sbb
fisubrs
sbbb
sbb
outsl
jl
lret
xchg
fildll
or
jle
ss
and
add
test
and
sti
frstor
adc
sub
lock
je
pop
cli
or
jne
insl
and
scas
push
xchg
pop
test
mov
mov
cmp
jp
in
cwtl
cmp
inc
jnp
out
xlat
ss
inc
dec
inc
fwait
push
add
sbb
scas
inc
nop
mov
xor
sarl
jns
shrb
dec
push
push
cmp
sbb
js
pop
bound
sti
out
daa
jge
inc
inc
jo
fsubr
cmp
jl
cmpsb
jmp
nop
pop
adc
outsb
imul
jb
out
ss
aaa
shl
pop
int3
sub
lds
dec
lods
sbb
cli
jecxz
and
cwtl
dec
jle
ja
push
lds
daa
cwtl
mov
test
jb
add
cmp
cltd
sbb
scas
sub
dec
mov
sub
or
scas
lods
mov
or
push
stc
mov
cmc
jns
movsb
jecxz
das
mov
outsl
into
mov
cmpsl
pop
icebp
inc
pop
imul
lret
fs
test
sub
stc
inc
adc
inc
inc
daa
adc
sti
test
enter
adc
add
dec
sub
repz
and
or
arpl
cmp
add
or
in
jnp
sbb
adc
cmpsl
jo
cs
fldt
pop
fisubl
loop
subb
in
stos
stc
mov
cmp
fstps
add
frstor
cltd
paddd
fs
test
nop
roll
sub
outsl
pop
cs
lret
cmp
decl
dec
clc
pop
add
adcl
mov
scas
pop
pop
aaa
adc
and
or
leave
mov
adc
or
inc
and
jl
in
fwait
mov
std
sbb
fcmovnb
jmp
mov
xchg
scas
out
inc
mov
mov
and
icebp
xor
push
adc
jle
add
push
jo
ret
push
movsb
pusha
cmc
xlat
and
leave
xchg
data16
lret
fwait
pop
shlb
add
cmp
xor
mov
xchg
call
ret
fcoms
outsl
sub
pop
lea
outsb
iret
xor
out
push
int3
xor
out
outsl
add
inc
jp
add
ja
cmpl
mov
push
adc
fdivrl
addr16
imul
jg
fbstp
hlt
nop
out
xor
mull
scas
shr
sub
dec
stc
push
scas
or
ret
xchg
rcr
ror
cwtl
inc
jno
xor
pusha
dec
ret
cmc
ret
nop
jnp
jno
pop
inc
or
cmp
and
js
lods
jo
imulb
xchg
mov
shl
leave
jp
inc
bnd
pop
orl
sarl
inc
test
or
and
je
or
push
scas
mull
ret
adc
out
push
lods
xor
dec
arpl
lcall
inc
add
hlt
pop
cld
icebp
or
js
push
mov
pop
dec
cmpsl
aas
jae
cmp
or
stos
add
add
jmp
cltd
inc
stos
inc
lea
dec
aam
pop
jecxz
lods
pop
pusha
fwait
xlat
xlat
inc
fwait
movsb
movsb
mov
cli
push
jecxz
stos
mov
mov
roll
jmp
in
cmp
jns
aaa
jmp
or
xchg
sbb
jecxz
jno
int
or
jle
jae
xchg
les
pop
in
xor
int3
clc
add
ret
or
pusha
push
es
arpl
cmpsb
sub
std
or
mov
and
shll
cmp
and
fildll
add
dec
add
mov
movsl
push
repz
imul
cmp
or
rcl
fsubl
sub
sbb
and
mov
push
pop
ja
xor
push
mov
cltd
dec
lea
jnp
pop
inc
stc
loopne
cwtl
scas
push
mov
and
lods
into
mov
inc
mov
sub
and
xchg
aaa
insb
gs
or
mov
mov
sub
xor
jmp
fs
mov
xchg
or
outsb
call
push
push
out
addr16
jno
jbe
cmc
adc
imul
mov
or
ljmp
xchg
mov
dec
or
insb
cmp
sbb
push
ror
and
cmp
dec
lods
scas
in
push
das
mov
or
das
mov
scas
adc
imul
sahf
adc
and
inc
fisubs
mov
jmp
or
sbb
es
mov
pop
xchg
cmpsb
ficompl
out
insl
je
ja
ret
cmp
outsb
scas
pop
loope
cwtl
rcr
xlat
adc
in
mov
mov
xor
xchg
jnp
test
arpl
outsl
aas
sbb
insb
ret
dec
pushw
aaa
cmpsb
leave
dec
and
into
bound
and
pop
xchg
add
jp
inc
js
mov
sahf
jg
js
out
out
xor
rclb
pop
rorl
dec
mov
pop
rol
pop
ja
imul
pop
sbb
fdivrp
in
jecxz
xor
xlat
push
add
outsb
cmp
jo
ret
pop
push
addr16
xor
sub
fs
jae
dec
mov
jnp
dec
ror
push
pop
lcall
ds
ret
lret
mov
add
test
and
and
mov
cmp
popf
test
cmc
popa
add
jo
in
les
adc
mov
popa
outsb
sbb
outsb
insl
or
daa
fdivr
add
lcall
xor
inc
gs
adc
ljmp
jmp
xor
sbbl
jne
or
leave
dec
fprem
das
xor
adc
xor
inc
add
jno
aam
dec
jns
int
inc
call
xchg
lret
lods
sub
add
xor
adc
out
or
push
mov
xor
ficomps
add
jmp
pusha
dec
arpl
mov
test
sub
inc
push
sub
andl
jb
mov
inc
dec
cwtl
jbe
neg
pop
push
inc
ja
sub
dec
push
rclb
leave
or
jnp
mov
lock
dec
sbb
dec
test
sub
in
add
jmp
add
das
dec
out
lret
sub
bswap
cmp
out
mov
lds
dec
addb
arpl
add
int
dec
mov
mov
mov
adc
jnp
cmpsl
aad
fildll
rol
ret
dec
hlt
inc
sbb
xchg
loopne
movsb
dec
mov
repz
sti
push
out
les
fwait
adc
sbb
inc
cli
add
jmp
cli
das
enter
insl
push
cli
jge
add
gs
in
iret
mov
adc
and
push
sbbl
and
xchg
test
sbb
fidivrl
sub
mov
imul
outsb
pusha
ret
daa
jg
pop
hlt
xchg
jb
arpl
push
stc
cmpl
and
cmpsb
jg
mov
shlb
fldt
inc
sbb
cmp
mov
sti
jns
lret
push
mov
jg
jb
lret
adc
jae
pop
repz
push
adc
mov
stos
inc
inc
sahf
sub
mov
dec
adc
sbb
out
imul
and
pop
stos
ss
pop
std
out
jmp
jo
in
inc
dec
push
mov
bound
mov
sub
lock
push
subl
xchg
repz
in
repnz
push
test
int
insl
fs
push
and
lods
stos
fnstenv
fistpl
repz
insb
shr
or
ds
test
lods
mov
pop
push
out
lret
inc
decl
test
adc
addb
xor
push
dec
inc
inc
xchg
mov
daa
dec
test
jae
mov
add
adc
mov
int
into
mov
sub
jmp
and
lds
add
shlb
stos
cmp
mov
sub
ds
insb
adc
call
push
jae
lcall
cli
adc
adc
frstor
mov
subl
add
fs
xchg
hlt
push
je
pop
and
sub
loope
jo
cmp
mov
cld
call
rorb
bound
or
loope
sbb
or
jge
add
addr16
lods
mov
inc
mov
daa
scas
mov
ja
ret
cmp
addsd
inc
xor
or
mov
cmpsb
repnz
jle
scas
push
iret
das
arpl
shrl
push
mov
push
movb
push
and
sub
pop
or
cmp
shrb
clc
fisttpll
mov
mov
jne
push
enter
lret
mov
fcomi
scas
je
out
fnsave
lods
mov
fs
inc
xchg
and
mov
lret
xor
mov
mov
rorb
jbe
pop
pop
cli
push
hlt
mov
and
adc
popa
mov
push
pop
jns
lahf
xor
insl
mov
std
fwait
mov
mov
pop
pop
int
int
cmp
push
call
sub
dec
imul
out
dec
enter
stos
daa
lods
xor
outsb
cmp
das
shll
jle
shrl
call
xchg
cmp
mov
loopne
sete
pop
push
iret
sahf
dec
xchg
mov
mov
and
call
test
push
imul
mov
mov
dec
scas
cs
pop
jo
test
leave
cwtl
insl
and
push
call
jle
nop
dec
test
push
popf
inc
test
pop
jno
test
adc
fildl
push
out
mov
mov
cltd
xchg
mov
mov
popa
xchg
and
or
pop
inc
sti
loopne
loope
test
adc
jne
push
stc
push
cmp
xor
movsl
rcrl
test
lods
add
dec
xor
out
sbb
add
push
out
or
mov
cmp
lock
mov
sarb
es
jmp
imul
pop
or
ss
sub
lcall
mov
shll
mov
lods
leave
rol
loope
xchg
or
movsl
orb
xchg
out
rcl
cmc
jno
ret
sub
sbb
dec
jle
bound
bound
mov
je
adc
inc
sbb
std
and
inc
push
insl
pop
int
cmp
aas
adc
xor
lahf
and
push
cli
dec
cmp
loop
cmp
test
xor
cli
jg
js
shll
repz
sahf
jle
cmc
ljmp
mov
jge,pn
dec
cmp
jbe
dec
adc
jno
pusha
andl
mov
rorb
fs
xchg
sbb
adc
pop
jecxz
xor
mov
int3
arpl
ja
fsubrp
rolb
outsl
mov
sub
call
fiadds
inc
sub
xor
xchg
sub
scas
imul
aaa
outsb
xor
mov
iret
xor
lret
mov
or
aad
hlt
inc
sbb
add
adc
imul
pop
jecxz
mov
out
mov
xchg
xor
or
lea
loop
dec
testl
pop
imul
fistpl
or
divl
popf
fs
push
lret
or
mov
sub
jle
jmp
mov
adc
and
in
and
dec
int
insb
adc
inc
mov
xchg
fwait
pop
pop
add
jl
rcl
inc
out
or
fidivl
push
mov
dec
cmc
xor
cli
fnsave
sbb
cli
pop
mov
enter
es
mov
cmpsl
dec
xchg
pushf
dec
mov
dec
ss
fnstenv
aam
or
sub
xchg
xor
test
inc
cmp
js
sub
add
sub
fst
negb
loope
push
xchg
in
jp
aad
rorl
insb
pop
or
push
shrl
stos
sbb
insb
loope
mov
jle
push
mov
adc
js
hlt
cmp
adc
lock
jnp
mov
stos
inc
jmp
mov
rcr
and
push
repnz
aaa
jo
imulb
jo
cmp
fisttpl
push
add
loope
mov
repnz
dec
mov
cmc
jge
xchg
jp
and
jbe
lahf
xor
pop
lret
sbb
fbstp
sbb
inc
dec
popf
and
push
fwait
mov
sbb
incl
aam
inc
dec
shlb
pop
test
sahf
sarb
jl
jp
outsl
imul
and
inc
push
loope
or
fbstp
push
sub
rorl
loope
fadd
andl
mov
dec
mov
sub
loope
das
dec
xor
cwtl
dec
dec
int
mov
insl
shrb
in
add
popf
out
rcrb
xchg
mov
pop
hlt
adc
jne
mov
adc
cmpsl
cmp
fs
enter
jmp
sbb
dec
int3
mov
push
call
jg
rcrb
test
addr16
pop
out
js
xchg
lret
xor
xchg
mov
add
xor
repz
add
mov
xchg
jne
fwait
cmp
xchg
pop
sub
das
inc
aam
mov
push
in
in
jp
mov
jg
push
jl
cli
adc
out
js
fstpt
jg
push
repnz
sbb
inc
or
das
lahf
nop
mov
or
adc
lahf
or
dec
and
subb
xchg
arpl
lret
rcr
adc
dec
stos
and
in
popf
xor
inc
lret
mov
sbb
cmc
repz
jne
pop
jo
cwtl
mov
test
xor
fsubrs
pop
inc
inc
popf
dec
scas
imul
push
mull
cmp
mov
cmp
sahf
adc
mov
dec
add
sub
mov
popa
loope
loopne
scas
cltd
adc
loopne
stc
dec
popf
repz
or
adc
jne
push
pop
xchg
add
repnz
and
mov
or
xor
mov
mov
out
xor
enter
jecxz
clc
out
push
xor
repz
clc
nop
cmp
arpl
in
sbb
aad
cltd
std
pushf
bound
add
test
sbb
push
test
sbb
xchg
or
mov
mov
enter
mov
clc
jae
jne
cwtl
lds
subl
notl
dec
push
bound
scas
jecxz
cmp
fbstp
adc
and
out
movsb
hlt
push
push
pop
subl
cli
push
push
loopne
mov
xchg
pop
add
adc
adc
lahf
clc
andb
push
loop
popa
lods
int
jge
mov
cltd
cmp
aas
mov
icebp
cs
pop
jge
mov
dec
xchg
lret
adc
mov
and
xchg
int
je
dec
adc
cmpsl
and
mov
lret
cmpsl
pusha
clc
call
negl
das
xchg
movups
and
or
pop
mov
jle
sti
cs
insl
adc
jmp
inc
inc
mov
fs
xor
inc
stos
divb
dec
adc
insl
add
push
aad
push
dec
movsl
mov
jg
adc
enter
fstpl
mov
imul
jg
jmp
int3
insb
inc
enter
std
mov
inc
inc
shrb
cmp
lods
arpl
ficoml
rorb
add
cmp
icebp
ret
or
mov
hlt
dec
out
out
or
aas
test
imul
push
call
rolb
pop
adc
hlt
popf
fiadds
lods
cltd
daa
and
add
in
int3
test
fs
cmpsb
lret
push
push
into
sarl
insb
insb
cmp
cmp
insb
xor
inc
sbbl
sub
xor
mov
xor
pop
outsl
push
add
fdivrp
sub
add
sub
dec
mov
sahf
rol
xor
jp
xlat
push
lret
pop
test
clc
mov
in
rcrb
imul
pushf
jp
jl
adc
jmp
mov
mov
cmp
call
rorb
sbb
xchg
loop
gs
sbb
negb
out
pop
sub
int3
test
outsb
push
sbb
sbb
and
negl
jb
sub
loopne
movsl
push
popa
push
cmp
jge
add
fsub
adc
sub
mov
or
int
cmp
jmp
xchg
sub
movsl
das
aam
in
popl
mov
fidivrs
cmp
cmp
ret
cmp
dec
push
arpl
pop
lcall
pop
push
adc
jne
mov
lahf
sub
jbe
arpl
insb
aad
cmc
pop
sbb
push
pop
flds
sbb
add
mov
daa
xor
xor
push
or
outsl
jmp
push
mov
mov
adc
and
rorl
mov
dec
mov
imul
fnstenv
aas
mov
jecxz
pusha
scas
clc
pop
shr
insb
ret
mov
jno
cmp
and
and
xchg
or
jns
pop
mov
cmp
jg
sub
push
jmp
fbld
cmp
pop
jne
std
stc
std
mov
daa
or
js
push
xchg
call
subb
lret
pop
cld
in
imul
cld
or
inc
repnz
push
mov
adc
jne
lock
cmp
lcall
outsl
pcmpeqw
mov
hlt
icebp
push
ss
outsb
jecxz
jp
jl
adcb
shll
fwait
rcll
xchg
icebp
mov
in
pop
jbe
jecxz
dec
jnp
pop
cwtl
sti
dec
mov
add
stos
cmp
sub
cmc
dec
lea
inc
jle
fnstsw
inc
cmp
push
adc
mov
mov
push
push
mov
adc
dec
dec
addr16
xchg
sub
jo
dec
out
lret
sbb
cmp
xchg
jle
mov
push
test
push
stos
mov
sub
aad
jecxz
jl
sbb
xlat
xorl
jg
enter
inc
mov
mov
sbb
ljmp
lds
repz
ffreep
sub
mov
adc
pop
sarl
into
adc
jne
or
mov
sbb
mov
mov
add
in
xor
bound
jns
pop
cmc
lahf
cld
add
cmp
or
lret
xor
xor
ss
mov
out
add
aas
xchg
aad
int3
mov
scas
call
std
enter
rcr
mov
and
shll
out
out
adc
mov
les
inc
stc
mov
mov
sbb
mov
test
push
mov
rol
js
mov
pushf
sub
and
int3
js
int
dec
inc
mov
pop
mov
fsubs
jb
cmp
mov
and
xchg
cld
push
test
aaa
inc
out
mov
pop
inc
aam
mov
mov
shlb
test
xorl
xor
in
jns
jecxz
xor
pop
xchg
jmp
stos
mov
test
xlat
ljmp
cmp
push
xor
push
fmull
mov
mov
cmpsb
std
lods
mov
jo
mov
xchg
sub
xchg
imul
and
aas
pop
les
ror
cltd
add
mov
mov
jno
push
pop
push
or
daa
rol
popa
fwait
add
jno
popa
fidivrs
decb
daa
pop
ds
in
sbb
mov
lods
mov
pop
stc
int3
inc
add
pushf
add
addr16
cmp
loopne
test
cli
push
and
lods
xchg
in
xor
and
pusha
test
sbb
add
push
add
adc
add
push
mov
in
js
mulb
loop
adc
cli
inc
jnp
pop
imul
pop
jle
sbb
addr16
jbe
sub
pop
lret
fs
push
dec
imul
xor
lret
es
lret
ds
in
repz
mov
pusha
sub
sub
xchg
pop
leave
add
aad
xchg
xchg
jb
jae
and
dec
cmpb
jae
lcall
pop
dec
push
and
sbb
fisttpll
leave
dec
popf
dec
pop
or
cmc
imul
cmp
mov
lcall
xchg
sahf
in
mov
imul
mov
and
out
and
daa
sbb
pop
cmp
cmp
cwtl
mov
pop
je
mov
push
ftst
push
and
pushf
xchg
mov
movsb
push
push
mov
scas
push
xor
cltd
lea
movsb
bound
data16
add
inc
loope
sub
push
fnstsw
je
out
loope
xchg
fwait
dec
mov
push
out
push
mov
imulb
pop
shl
jbe
movzbl
movsl
pop
inc
rcl
js
insl
cmpsb
sbb
in
or
iret
sarb
fldenv
sbb
push
shll
das
cmp
lods
test
pop
dec
push
cltd
pop
push
rorl
mov
mov
pusha
xchg
fdivrl
xor
push
xor
pop
mov
leave
push
insl
sbb
outsb
adc
lret
enter
push
sahf
repz
sbb
cli
pop
sub
xchg
xor
sahf
rep
jno
cmp
push
adc
ss
ja
cmp
jns
xchg
dec
push
lret
lods
mov
jo
orl
divb
mov
mov
test
sub
shlb
lret
push
sub
add
fadd
ss
fdivs
mov
jl
lret
mov
aad
stc
mov
pop
cmp
data16
pop
es
push
mov
push
mov
push
outsb
push
into
cld
inc
fldl
cmp
push
test
add
movsl
pop
loopne
jmp
push
dec
sub
pop
in
mov
add
daa
out
cmp
dec
out
cltd
out
div
add
cmpsb
jecxz
pop
cmp
lcall
scas
adc
scas
inc
mov
js
int
mov
sbb
lods
pop
insl
test
push
cli
push
jnp
ret
xor
pop
push
ja
nop
xchg
sbb
jne
test
out
mov
enter
or
inc
push
and
sub
scas
lods
sbb
out
xchg
lods
push
cmpsb
dec
roll
sbb
xchg
sub
push
jle
ss
push
jne
sbb
test
jbe
lcall
ss
out
mov
inc
stos
jge
adc
mov
sub
popa
sub
push
cmpsb
out
in
in
jp
int3
sbb
sub
mov
mov
jmp
loop
daa
xchg
and
cmp
add
rcrb
pop
lcall
jle
fbstp
jl
je
imul
mov
mov
addb
lcall
enter
jnp
aad
push
xchg
popa
push
push
add
push
ret
dec
push
test
fadd
mov
aam
or
xchg
aaa
sarl
pushf
inc
call
lret
jno
mov
pop
mov
sti
lods
jecxz
stc
pop
sahf
push
lret
push
cmp
es
movsl
xor
pop
jb
push
std
in
inc
pop
push
iret
movsl
inc
sub
adcb
cwtl
xchg
mov
xchg
movhps
pop
jg
ret
mov
add
and
mov
xor
call
xchg
sbb
pushf
mov
out
mov
mov
pop
mov
cmpsl
sub
lods
jle
jbe
mov
addr16
shrl
push
and
inc
repnz
dec
movsb
lahf
xchg
pop
les
inc
addr16
mov
mov
adc
xor
pop
mov
ret
sbb
cmp
mov
das
cmpsb
dec
idivb
add
xor
cmp
sbb
inc
insl
insb
bnd
and
repz
mov
scas
fcmovnb
and
lods
popa
pop
pop
mov
xchg
or
jl
or
push
lea
push
dec
add
das
sbb
mov
je
cmp
cmp
and
stc
mov
dec
andb
and
inc
add
xchg
push
dec
ret
cmpl
lret
stos
in
lock
insl
lods
mov
mov
fsubs
mov
fldl
dec
imull
lahf
out
mov
pop
icebp
cltd
popf
arpl
add
sub
dec
inc
dec
outsb
push
je
xor
mov
push
popf
sbb
int3
cmpsl
or
imulb
adc
jne
scas
mov
je
push
js
xchg
scas
inc
sub
mov
fwait
xlat
sub
sub
into
xor
xchg
xchg
cmp
aaa
and
add
inc
repnz
jmp
jmp
imul
push
jo
jle
jae
mov
outsl
pop
in
cs
sti
push
push
dec
or
es
int
or
mov
lret
movsb
inc
mov
xchg
rclb
or
scas
inc
push
clc
test
ret
add
lods
xor
adc
arpl
icebp
lock
int
cmp
adc
fs
jle
loopne
pop
sub
aam
fbstp
fcomps
mov
push
inc
dec
or
lret
call
inc
inc
popf
push
stc
outsl
jg
xchg
xchg
inc
mov
dec
add
mov
jns
dec
sbb
sbbb
dec
inc
mov
adc
mov
jbe
pop
dec
imul
dec
lret
sti
hlt
int
mov
stc
xorb
je
dec
aaa
in
adc
add
sub
hlt
sbb
dec
push
lcall
cmp
dec
mov
mov
sub
cmp
je
imul
popa
lds
movsb
fistpl
inc
add
pop
pop
jns
jmp
sub
adcb
cs
xor
cmp
rclb
inc
xchg
fildl
mov
jg
pushf
mov
lods
mov
lret
and
cmp
movsl
cmp
stos
fnsave
jae
pop
mov
sub
or
fimuls
lret
in
or
out
hlt
add
rolb
and
cmp
stc
js
js
jns
add
dec
icebp
mov
bound
int3
lahf
push
inc
out
clc
movsl
push
inc
ds
inc
fisubl
and
mov
push
cli
xchg
cmpsl
mov
inc
lret
shr
sti
mov
jg
aas
inc
in
cmpl
imul
and
rcr
pop
push
jb
sub
pop
fwait
pop
xor
mov
jno
call
xchg
loopne
mov
iret
leave
ja
aas
dec
int3
mov
andb
inc
push
and
push
es
cmp
inc
pusha
mov
aam
in
sbb
sub
pop
jl
push
xor
les
add
or
ja
imulb
pop
push
seto
xchg
inc
in
leave
push
xor
lret
bound
adc
pop
xchg
call
icebp
sub
inc
fwait
sbb
mov
fidivs
xchg
mov
mov
cld
inc
leave
lock
jnp
xchg
mov
xor
inc
adc
and
out
movsb
jne
cmp
jno
test
xor
mov
mov
dec
insb
xor
or
loope
cmp
cmpsb
mov
rcrb
and
lock
add
clc
dec
pop
xchg
sbb
andb
cmp
pop
mov
add
or
in
xorb
lret
mov
leave
test
les
pop
mov
mov
sbb
pop
or
sbb
jge
aad
xor
mov
mov
sbb
jbe
xor
outsb
inc
in
cmp
sbb
adc
cmpsl
out
mov
imul
fs
in
sti
popa
fwait
movsb
dec
cmp
iret
push
icebp
loop,pn
pop
mov
lcall
mov
or
pop
pop
mov
inc
ret
pop
nop
xor
jle
lock
test
sbb
pop
xlat
stc
xchg
negb
sbb
sbb
or
sbbl
in
imul
imul
rcrb
movsl
xor
xor
insb
inc
jg
int
cvttps2pi
cli
cmp
adc
addr16
into
loop
mov
lods
mov
and
popa
push
jo
mov
xor
pop
mov
and
cld
movsl
movl
add
push
call
sbb
ret
pop
mov
je,pn
pop
subl
inc
or
push
lahf
movl
repnz
hlt
es
sbb
cmp
lock
adc
lods
sub
fwait
adc
ljmp
mov
mov
pop
enter
mov
fiaddl
call
iret
loopne
rcll
decl
int
jmp
cltd
mov
jecxz
pop
jmp
mov
add
icebp
adcb
xlat
pop
ret
mov
dec
ret
lret
mov
test
mov
cmp
sub
cwtl
mov
and
es
xchg
jl
cmpsb
les
int3
or
or
push
fs
daa
data16
xchg
sub
xor
sub
cltd
dec
xor
clc
ret
scas
aas
sbb
sahf
push
jne
lods
inc
add
mov
dec
sub
jecxz
jge
or
cmp
cmpl
imull
jns
cli
push
cmp
lret
mov
mov
arpl
mov
pusha
mov
sub
arpl
incb
fld
adcb
loop
outsb
mov
in
mov
mov
mov
test
dec
aad
imull
mov
sbb
mov
xchg
push
cmpsl
out
pop
pop
mov
jbe
ret
fists
call
ret
and
push
movsb
mov
insb
test
call
jno
push
mov
mov
test
popa
pop
push
lock
daa
xchg
mov
mov
negb
int3
lret
jnp
je
or
xchg
lret
or
or
mov
push
lret
xor
mov
mov
fcoml
adc
cmp
or
and
popa
push
pop
cmp
rol
adc
adc
push
add
cmpsl
sahf
jns
sar
cmp
popa
lea
out
je
sbb
out
jno
bound
scas
mov
pop
subl
out
mulb
scas
in
and
movsl
dec
push
addb
imul
jge
popf
cmp
fwait
cli
or
add
sub
lahf
mov
xor
outsl
mov
bnd
test
add
adc
xor
sbb
sub
repz
push
pop
int3
push
movsl
jp
cmp
popa
add
ud0
xchg
adc
mov
iret
pop
lcall
into
sub
xchg
mov
xchg
mov
cmp
call
inc
mov
or
dec
adc
mov
int
jns
out
rorl
mov
dec
pusha
stc
pop
lock
cwtl
or
push
pop
or
lock
iret
fidivs
rclb
sub
dec
gs
inc
mov
das
mov
and
mov
add
mov
jne
lcall
lock
push
sub
add
mov
sub
push
sbb
in
xchg
push
loopne
jg
jbe
sub
mov
in
push
lds
test
lds
pop
xchg
out
inc
out
xchg
jo
mov
xor
jp
or
fldt
movsb
int3
jne
xchg
cld
fwait
ret
sub
jno,pn
mov
std
cs
into
cmp
xchg
lret
sbb
xor
sbb
hlt
push
cmp
inc
lock
jnp
mov
mov
call
iret
repz
out
pushf
inc
fimull
test
and
xchg
sub
jecxz
icebp
std
dec
jbe
sub
in
jb
xchg
int3
pushf
mov
outsb
lret
pop
mov
fnstsw
mul
jmp
jns
in
je
mov
add
iret
mov
pushf
pop
fcompl
pop
lahf
lds
adc
mov
pop
repz
hlt
cmp
sbb
or
add
lock
fldl
or
imul
aaa
mov
add
xchg
xor
out
xor
stos
cmc
sub
sub
sub
loopne
pop
inc
sbb
cmp
aas
or
ds
push
xor
cmpsl
push
mov
lods
mov
cmpsb
sbb
pop
pop
stc
popa
lods
data16
mov
inc
mov
xchg
sub
dec
outsl
test
mov
js
dec
dec
mov
out
jbe
fimull
xchg
or
sbb
adc
or
sbb
xor
std
pop
xor
inc
repz
insb
in
dec
jb
xchg
fsubrl
jge
inc
dec
sub
lret
mov
lods
lret
pop
jns
icebp
data16
loope
add
stos
out
int3
in
mov
andl
in
add
stos
inc
dec
push
jmp
push
sbb
sbb
push
loopne
mov
push
and
arpl
dec
mov
sbb
cmp
daa
aaa
nop
pop
or
jb
push
xchg
shlb
dec
fwait
out
insb
stos
cmpsl
shrl
sahf
cmpsb
add
lahf
insl
bound
dec
push
mov
in
lods
inc
or
adc
mov
leave
adc
stos
fsubr
lds
out
mov
jge
fwait
daa
cmp
mov
lds
ds
xchg
sub
cld
mov
loope
test
pop
shlb
sub
mov
and
sahf
in
notb
pop
cmp
cld
push
notb
xchg
mov
sarl
cmp
pop
sbb
inc
mov
xchg
sbb
push
divb
cmpb
sbb
out
xor
loope
cwtl
jo
push
in
lcall
popa
insl
sub
pop
aam
lret
pop
xor
push
xchg
sbb
xor
fnsave
jmp
inc
into
mov
pop
add
push
pop
push
pop
inc
pusha
gs
dec
out
mov
cwtl
xor
stos
shl
cs
add
jbe
ds
mov
cmp
repz
dec
sub
adc
pop
aas
call
jnp
out
sahf
cltd
pop
xchg
or
cmp
push
or
int3
lea
xchg
adc
pusha
stos
xchg
lahf
out
add
push
je
dec
or
pop
icebp
lock
fstpl
or
repz
jno
and
ret
pop
jbe
lea
jne
jmp
mov
add
test
xchg
sub
call
inc
les
pop
repnz
push
nop
je
jo
add
jo
sub
push
ja
and
test
mov
xchg
sbb
dec
xor
jg
outsl
sbb
shll
gs
push
addr16
dec
adc
es
xchg
sub
mov
mov
sub
cli
and
out
cmp
mov
fimuls
pop
jae
jecxz
stos
pusha
and
pop
js
movsl
mov
push
push
insb
outsb
xor
jge
movsl
lahf
cld
subl
nop
inc
arpl
lcall
push
je
dec
mov
push
cs
pop
cltd
xchg
in
enter
mov
testl
pop
push
jp
push
in
sbb
loope
push
mov
cmc
mov
push
leave
in
add
shlb
ficoml
cmpsb
or
xchg
popf
mov
in
repz
sbb
lcall
imul
jg
mov
les
xchg
xor
push
xchg
faddp
mov
pop
cld
imul
test
jne
pushl
xor
push
cmp
fwait
mov
jo
dec
hlt
cmc
pop
leave
sub
arpl
sbb
and
cltd
fnsave
aad
mov
nop
jecxz
dec
sbb
ret
jecxz
mov
xchg
daa
inc
les
stc
movsb
bound
mov
arpl
lcall
cmpsl
jl
inc
xor
sti
es
arpl
shll
xchg
jbe
nop
jecxz
loopne
mov
enter
mov
xchg
mov
or
xorl
add
stc
adc
sarb
adc
xchg
inc
jb
mov
xchg
inc
jne
xchg
mov
insb
jne
dec
fcomip
fxrstor
pop
pop
ficoml
xor
dec
rcl
icebp
mov
pop
les
mov
fisubs
sbb
rcl
movups
fisubl
xchg
fwait
pop
push
cmp
rcl
add
dec
pop
xchg
add
push
pushl
hlt
mov
pop
sub
sbb
xor
xchg
in
xchg
add
jno
stos
dec
xchg
mov
dec
mov
aam
imulb
jb
inc
push
adc
fdivl
rolw
in
mov
sti
pop
fildll
jle
decl
inc
jno
push
faddl
xor
mov
jle
cmp
and
lea
out
mov
cwtl
push
negb
jno
mov
add
xchg
data16
cmp
pushf
dec
and
dec
nop
and
stos
gs
and
stc
shll
cmp
adc
cmp
add
push
outsb
inc
dec
or
add
ja
jae
ds
push
imul
and
ja
xor
fwait
out
call
sbb
or
mov
dec
adc
dec
int3
dec
and
mov
mov
outsb
std
mov
fisubs
and
movsl
in
and
sub
test
out
divl
dec
xorb
daa
ja
mov
test
jae
inc
and
and
scas
imul
push
sub
out
adc
addl
into
in
scas
jns
cltd
push
or
nop
jl
lret
mov
pop
add
test
mov
dec
fisttpl
incb
mov
pop
ss
stc
adc
clc
mov
stos
clc
pop
xchg
faddl
adc
inc
leave
mov
sarb
xor
insl
popf
and
in
xor
scas
or
or
inc
mov
adc
push
setle
push
cmp
bswap
dec
shr
cwtl
rclb
push
mov
lcall
pop
jge
in
ret
loop
scas
pop
pop
out
push
cwtl
jp
js
mov
fldcw
les
iret
rol
addb
ds
cmp
testb
xor
and
xchg
mov
dec
jb
fcoms
xorl
push
mov
cltd
xor
lods
stos
jge
jb
xchg
xchg
pop
adc
or
push
ret
fcmovnbe
dec
ret
push
or
fucom
test
out
cmp
roll
mov
jb
jmp
fcoms
mov
dec
call
mov
mov
sub
fcomp
lds
pop
fsubrl
cwtl
inc
cmp
xlat
shll
nop
xor
int3
or
addl
pop
shlb
scas
outsl
jmp
cmp
cli
cmp
inc
das
sub
jno
jnp
dec
pop
and
cmpw
cmp
shl
imul
insb
dec
out
repz
ret
inc
out
dec
popa
icebp
shl
cmpsb
inc
and
js
sub
sbb
sbb
jo
add
xchg
popa
mov
xchg
in
loop
xchg
pushl
jo
dec
fstpt
sbb
fsubrp
push
lret
cmp
mov
cmpsb
loop
jmp
jns
mov
xor
mov
adc
mov
imul
cmpsl
cmpsb
loope
lret
les
jno
ret
daa
fisubrl
xor
adc
push
mov
mov
cmpsb
cmpsb
ds
je
rorl
cli
xchg
xor
sub
nop
push
pslld
pop
mov
int
cmp
cli
jbe
mov
xchg
mov
jecxz
push
push
inc
pop
push
xchg
push
data16
mov
or
cmp
mov
push
loope
mov
jns
cld
test
xor
movsb
mov
push
jge
adc
repnz
mov
aas
lds
imul
push
std
pop
cmc
inc
scas
xchg
stc
fwait
pop
xchg
popa
adc
push
inc
adc
into
or
dec
cmp
mov
xchg
cmp
out
adc
cmp
lcall
fcomi
and
jo
jl
adcb
cmpsb
push
bound
xchg
in
stos
rorl
mov
dec
xor
ret
lcall
jp
cwtl
pop
out
stos
outsl
mov
mov
push
scas
mov
mov
cwtl
mov
jecxz
into
mov
or
rcll
fucomp
fprem1
push
mov
cwtl
enter
flds
mov
shll
xlat
ds
xor
xchg
pop
mov
mov
loopew
enter
or
mov
je
cltd
xor
cmpsb
je
fnstsw
mull
dec
xchg
aas
cmp
dec
stos
push
jno
fwait
cmp
mov
ljmp
xorb
pop
fcomps
add
sbb
mov
xor
jmp
pop
dec
dec
inc
fsubrl
mov
fwait
xchg
xchg
mov
lds
sub
aas
sub
icebp
mov
add
dec
sbb
movsl
out
push
inc
stos
jnp
loopne
ds
adc
xchg
leave
data16
push
cltd
lock
ror
push
rclb
je
clc
shrb
inc
jmp
jge
cmp
es
adc
mov
add
aas
xor
pusha
ror
xchg
ret
iret
fists
arpl
add
inc
rcrl
mov
test
aad
ljmp
cmp
test
cltd
iret
std
mov
ja
mov
call
mov
cld
out
jnp
test
mov
mov
jecxz
pop
idivl
sbb
cmc
mov
in
lahf
lea
aad
mov
in
bound
add
dec
sub
bound
lock
ret
movsl
xor
aaa
sbb
test
jnp
add
sub
jb
pop
data16
and
pushl
cld
jg
fs
scas
push
bound
jl
jb
fdiv
lret
xor
dec
pop
mov
mov
lcall
icebp
mov
adc
lahf
cmpsb
negb
xor
jmp
jp
icebp
pop
and
ljmp
in
fisubrs
pop
sti
test
xor
pop
aaa
add
jno
mov
shlb
cltd
jle
test
pop
mov
dec
pop
push
cmp
les
mov
mov
fwait
cmp
cmp
sti
jae
inc
add
pop
in
loope
mov
lahf
fsubrs
mov
push
pop
add
push
out
push
inc
mov
adc
in
dec
aas
mov
inc
mov
add
fs
and
lcall
sub
push
les
pop
arpl
dec
cltd
adc
daa
call
call
push
inc
mov
mov
imul
das
arpl
cmc
pushf
jle
cli
inc
das
inc
in
pop
rcll
pop
sub
xor
or
xlat
scas
jo
mov
js
sbb
mov
aad
mov
or
add
sbb
cmp
shlb
or
out
inc
push
les
jne
fwait
and
dec
sbb
or
inc
repz
iret
lock
aas
mov
cmp
rolb
mov
cmc
xor
out
mov
dec
xor
stc
shrl
mov
les
and
cmp
ret
add
movsl
fcmovnb
sbb
mov
fs
loop
jns
std
jne
dec
lret
sahf
cmp
lea
inc
lahf
dec
and
stos
dec
jge
out
xorl
fcmovb
inc
mov
adc
mov
sahf
mov
bound
mov
in
and
dec
addl
pop
add
outsb
add
xchg
push
out
mov
push
mov
lock
xchg
fstps
jl
gs
scas
jns
mov
cwtl
and
push
jge
xchg
mov
xor
sub
incl
loop
icebp
or
mov
adc
movsl
adc
outsb
pushf
sbb
mov
mov
arpl
bound
add
dec
test
loopne
test
jne
loopne
add
add
and
rcr
es
pushf
shlb
lods
orb
xor
mov
dec
movsl
pop
mov
fcompl
rcl
mov
add
inc
pop
fdivp
and
xchg
dec
loope
pop
shrb
sbb
stos
addb
cmp
repz
into
inc
xlat
test
push
add
mov
hlt
adc
xchg
sahf
push
jo
pop
and
mov
outsl
addl
inc
daa
cmp
mov
jecxz
push
and
into
jns
push
sub
fs
xchg
je
inc
mov
mov
cli
pop
mov
adc
mov
mov
rolb
xorb
jno
adc
push
xchg
sub
rcll
jnp
call
shr
inc
push
xor
out
into
ja
mov
xchg
xchg
adc
aaa
mov
out
jb
idiv
stos
fstl
in
dec
stos
test
xor
inc
xchg
pop
adc
aaa
in
inc
out
push
sub
icebp
mov
push
jnp
scas
mov
push
lods
les
jmp
out
lock
fcmovnbe
imul
push
mov
adc
mov
jbe
leave
lahf
or
lock
mov
adc
clc
or
xchg
mov
and
add
or
add
mov
sbb
sahf
sti
mov
and
mov
ror
pop
aaa
dec
fsubrp
add
dec
mov
insb
cltd
cmpsb
and
scas
cs
pop
jmp
dec
sub
int3
cmp
arpl
pop
jns,pn
inc
dec
or
fidivrl
mov
or
into
mov
xchg
lret
push
xor
out
push
fs
fnstsw
dec
xchg
add
out
xor
in
test
into
rcr
out
mul
aas
nop
int
movsb
pop
mov
clc
add
sub
jns
cmp
aam
pop
mov
pop
or
pop
mov
rclb
inc
mov
dec
mov
cs
jle
dec
push
fnstenv
std
ja
sub
cmp
inc
dec
mov
fildll
aas
rcrb
out
lahf
fisttpll
sbb
mov
cmpsl
mov
mov
lahf
movsl
inc
and
inc
push
scas
push
mov
cmp
cmp
dec
andb
je
jp
mov
loope
je
aaa
sbb
leave
dec
stos
xchg
xchg
pxor
xchg
cs
add
mov
test
mov
lahf
ret
mov
test
leave
or
or
jne
insb
adc
jae
pop
gs
jg
jmp
mov
mov
pop
or
pop
popa
iret
or
in
pop
jle
cmpsl
mov
js
fcomip
loop
jbe
lret
lret
jge
jg
popl
xchg
pop
mov
xchg
rorl
lods
push
out
add
fmull
into
push
dec
mov
cmp
ds
in
sub
and
dec
jbe
add
cs
popa
dec
xor
cmp
add
add
rorb
or
pusha
mov
xchg
mov
test
cmp
mov
sub
sbb
fstps
lock
add
mov
cmp
sbb
sbb
add
testl
inc
jne
jge
xchg
hlt
fnstcw
out
and
lods
lea
pusha
jle
call
adc
je,pn
shlb
and
push
inc
pop
xor
fldcw
testl
push
sub
dec
add
fmulp
insl
call
xor
push
adc
loop
jp
jp
out
push
dec
js
pusha
adc
and
clc
push
xchg
xor
jbe
push
xor
inc
mov
sbb
jle
xchg
addr16
jns
jl
xor
leave
icebp
inc
das
pmaxub
dec
cld
xchg
js
mov
pop
push
xor
enter
add
cmp
jg
jge
test
das
or
add
cmpl
pushf
outsl
jge
mov
lret
data16
gs
or
cmc
inc
loop
dec
cmp
or
pushf
cwtl
ret
mov
je
push
pop
test
mov
lods
and
and
test
pop
cltd
fdiv
ljmp
loop
mov
andb
or
arpl
repz
mov
sub
xor
sub
cmp
sbb
mov
popa
jp
into
fisttps
pushf
scas
mov
mov
mov
sub
cmpb
scas
cs
and
sub
jo
lds
loopne
cmp
sub
push
into
lahf
jno
jnp
sbb
dec
push
push
push
data16
int3
ss
or
mov
push
jbe
popf
in
je
mov
neg
xchg
imul
lret
and
xchg
pop
jg
mov
fiaddl
mov
cmpsl
mov
or
pop
pop
mov
sahf
mov
imulb
push
mov
repz
push
leave
push
or
fistps
jbe
scas
js
dec
inc
push
inc
gs
inc
test
mov
fisubrl
fdivrl
add
mov
or
or
xor
cltd
pusha
imul
aad
push
lock
mov
arpl
lea
jo
dec
repz
imul
int3
adc
jle
xchg
mov
addr16
mov
mov
sbb
stos
fsub
cmc
pusha
fs
and
bound
add
aas
aas
add
add
add
pop
xor
aam
ds
test
sarl
jno
fnstenv
mov
ret
add
and
movsb
fbld
daa
fisttpll
loopne
sti
enter
bound
cmpsl
enter
adc
adc
popf
mov
mov
sbb
push
out
mov
std
or
push
push
insl
cs
xor
decb
or
out
adcb
int
sbb
cmp
loopne
pop
stc
cmp
lds
sub
xor
je
shlb
out
add
mov
xor
jg
arpl
sbb
inc
sahf
push
sub
std
adc
divl
jg
fdivrs
push
push
aad
rolb
ret
jle
cmp
mov
mov
cld
int3
into
int
and
push
add
or
std
cmp
cmp
popa
ret
xchg
mov
insl
repz
lea
in
mov
das
cmc
pop
pushf
push
adc
mov
leave
fbld
out
jl
jp
cmpsb
rcl
xchg
loop
push
sub
jno
movsl
mov
shll
les
dec
add
mov
pop
mov
lahf
imulb
icebp
jae
test
add
sub
or
aam
leave
dec
test
icebp
or
fmulp
ljmp
sub
ja
mov
lock
jnp
int
pop
mov
lock
add
aad
in
mov
lahf
aas
mov
lds
gs
mov
nop
enter
xchg
insl
mov
idiv
push
xchg
inc
add
mov
icebp
sub
je
xor
jle
mov
in
icebp
add
mov
pop
icebp
scas
test
fsubs
mov
mov
inc
pusha
adc
insl
aas
inc
jp
pop
scas
mov
loopne
sub
inc
fucomi
nop
mov
out
jno
cmc
jmp
xchg
aad
inc
xchg
mov
jns
xor
xchg
jno
xor
out
sub
pop
cmp
mov
sbb
and
fcmovnb
loopne
mov
lea
mov
mov
insb
daa
and
xchg
dec
add
lds
dec
xchg
push
das
and
shlb
nop
aam
and
les
mov
ljmp
xchg
mov
dec
xor
or
add
xchg
lock
xchg
xor
testb
jl
inc
aam
inc
enter
mov
shrl
gs
mov
test
xor
mov
lods
shrb
in
pop
leave
aaa
and
mov
and
daa
scas
fxch
push
jp
out
arpl
in
push
pop
hlt
inc
dec
push
add
mov
ret
add
fsubrl
outsl
adc
or
push
xor
idivb
push
fxam
lods
cmp
daa
dec
shrl
sahf
xor
push
in
fisubl
pop
jbe
stc
adc
into
in
ret
xorb
mov
sub
lahf
sub
shrb
hlt
mov
aad
pop
mov
jge
outsl
pushf
sahf
inc
imul
aas
jb
xor
sub
push
cmp
and
push
sbb
jbe
xor
sub
inc
adc
movsl
sbb
clc
cmp
mov
sbb
jge
test
jb
rcll
ljmp
std
pop
jl
mov
test
or
dec
mov
in
sti
cmc
mov
stos
lock
cmp
cwtl
lds
test
pop
xor
insb
push
lahf
inc
fs
jnp
nop
pop
fistpl
outsb
mov
jno
aad
jle
adcl
mov
cmp
jbe
sub
and
jmp
sub
lods
bswap
or
mov
jne
lahf
xor
push
rcrb
push
mov
fwait
sbb
inc
in
jle
imul
inc
icebp
jne
cmpsl
jb
sbb
imul
popf
jle
es
mov
cmp
sarb
in
jge
nop
std
or
lds
out
out
adc
sbb
popa
cmp
xchg
and
mov
dec
inc
and
js
cmp
insb
sub
js
cli
pop
outsl
push
mov
out
ljmp
mov
in
repnz
push
stos
jbe
jge
pop
mov
lcall
lods
xchg
xchg
or
data16
repz
cld
fwait
ret
push
fidivrl
xlat
inc
and
sub
scas
fwait
inc
leave
inc
lret
or
pop
pop
and
subl
xchg
loope
add
xchg
sub
xchg
and
sub
push
jge
add
cmp
scas
xlat
ljmp
cmpsb
in
and
and
les
das
pop
loop
lods
popa
mov
imul
int3
pusha
jo
jmp
mov
xor
mov
stc
pop
sahf
lods
and
les
incl
xchg
push
and
frstor
pop
dec
jb
repz
push
fwait
negl
cmp
cmp
jbe
lcall
push
xchg
mov
cs
push
adc
add
jno
ss
add
lea
repnz
lock
fs
pop
inc
out
sbb
sbb
adc
call
xor
push
ja
fwait
and
rcrb
fwait
jns
lea
jae
adc
call
js
je
sbb
mov
sti
xchg
xchg
into
addr16
lret
mov
mov
add
mov
push
inc
es
and
mov
mov
sbb
sbb
or
cmc
mov
add
test
jo
adc
jb
cmc
mov
push
inc
sbb
sbb
add
xchg
test
mov
push
push
ljmp
aad
shlb
ja
fstl
mov
mov
data16
jg
ficompl
repnz
nop
xchg
adc
add
or
inc
loopne
arpl
sbb
negb
cld
xchg
sub
insl
mov
mov
mov
mov
jp
push
or
push
fcoms
fs
xorl
jg
arpl
push
add
imul
mov
cmpsl
cmpsl
mov
imul
int3
dec
dec
sub
pop
int3
inc
les
popf
je
aam
inc
sub
jno
sbb
stos
mov
add
int
out
xor
xor
lret
dec
sbbl
cld
inc
aad
adc
xchg
fidivrl
cltd
mov
sub
mov
es
int3
jmp
in
push
xor
inc
sbb
aaa
jmp
cmp
mov
sti
cmp
cltd
and
lods
inc
mov
into
cmp
xchg
jmp
jl
xchg
outsl
xlat
lea
movsl
mov
mov
iret
add
mov
xor
push
mov
add
cmpsl
xor
push
xchg
testl
pop
push
sbb
leave
sbbl
mov
lea
icebp
adc
lea
out
adc
jl
icebp
leave
xor
adc
sahf
sbb
xchg
and
es
add
ss
push
lret
mov
push
bound
scas
pop
test
dec
gs
jbe
dec
mov
add
inc
call
mov
aas
xor
pusha
inc
testl
daa
pop
ljmp
adc
or
imul
insl
es
hlt
and
mov
adc
xchg
mov
stos
out
lds
fdivrs
dec
mov
pushl
je,pt
loop
sar
sbb
ror
ljmp
add
cmc
sbb
xlat
fs
jg
mov
dec
mov
fisttpl
mov
in
leave
imul
ljmp
push
xorl
arpl
mov
movsb
movl
jo
or
jmp
dec
mov
sub
stos
cmp
stc
hlt
push
int3
mov
out
stos
clc
pop
cmpsb
clc
fidivl
in
jne
cmp
stos
and
hlt
adc
push
dec
test
xchg
std
sbb
insb
bnd
movsb
psubq
mov
mov
adc
in
fistl
in
xor
cmpsl
add
adc
iret
xchg
mov
jnp
arpl
jge
std
cmp
popf
jecxz
jae
push
lea
jg
xor
xor
je
ret
arpl
fst
into
rclb
fmul
test
and
fldcw
pop
jo
inc
pop
int3
into
fwait
movsl
cmp
clc
jbe
mov
mov
pusha
xchg
mov
sub
lcall
xor
cli
call
mov
jns
hlt
into
fst
xor
mov
mov
jbe
cmp
adc
push
sub
push
popa
bound
pop
daa
pusha
daa
push
movsb
mov
cmp
lcall
jecxz
aas
mov
out
loope
addr16
inc
lods
push
push
outsl
mov
xchg
cmp
mov
lea
inc
jl
iret
mov
adc
sbb
mov
cmp
fmulp
aaa
dec
add
ficoms
cmpsl
adc
pop
pop
rcr
pop
das
mov
movsl
scas
movsl
pop
xchg
push
jns
fildll
jp
mov
das
fstpl
xlat
pop
push
xchg
sbbb
stos
pop
je
iret
mov
adc
cmp
dec
inc
jmp
xor
jae
outsb
or
push
xor
ja
sbb
pop
cs
inc
ja
add
jo
jmp
push
mov
paddsb
mov
mov
mov
mov
mov
sbb
sub
enter
sbb
adc
out
cmp
enter
aad
lret
shl
lods
xlat
out
xchg
push
inc
std
inc
repnz
jae
mov
push
fiadds
cltd
xchg
pushf
dec
insb
aaa
ljmp
stos
cli
sub
xchg
ja
dec
fsubrs
addb
push
jne
cmpsl
and
scas
mov
sub
aas
out
jae
mov
xor
loope
into
shlb
ret
bnd
mov
mov
out
dec
inc
adc
jmp
fnstsw
shrb
mov
in
mov
dec
push
xlat
jl
and
mov
js
movsb
outsb
sbb
aad
outsl
subl
add
push
push
test
dec
inc
cmp
mov
mov
adcl
xlat
rclb
xor
xor
dec
pop
mov
mov
pop
leave
jecxz
and
jmp
loop
push
adc
shll
jmp
iret
rorl
mov
les
rorl
cmp
fdivl
bound
or
dec
jg
les
xor
fists
stos
add
pop
fidivrs
movsb
test
push
pop
xor
insb
sahf
rorl
test
mov
popf
add
push
gs
jge
pop
call
adc
cs
xor
fnsave
mov
sub
or
sbb
jge
andb
cmp
dec
push
filds
lock
xor
repz
notl
dec
jo
addb
inc
inc
cmp
icebp
mov
jmp
xchg
cmc
jg
gs
es
movaps
jb
push
jno
hlt
push
jge
push
lock
loopne
adc
and
rorl
iret
into
jbe
mov
mov
jmp
xor
fisubl
or
in
mov
mov
sbb
sbb
data16
mov
xor
cmpsl
pop
mov
adc
xor
or
aaa
add
test
sub
push
lea
stos
rcrl
imul
imul
test
sub
lret
sbb
repnz
test
mov
push
jns
in
cs
fs
xor
adc
fiadds
mov
daa
stos
repz
xor
jl
push
subb
pop
in
mov
adc
dec
xchg
mov
clc
daa
mov
idivl
test
loopne
add
inc
repnz
push
mov
in
xchg
insl
je
push
inc
push
mov
lret
scas
adc
es
cmp
push
pushf
call
inc
lret
test
jmp
and
mov
pop
push
addr16
mov
fwait
mov
mov
push
add
rorb
lods
dec
push
push
je
call
movntps
andl
mov
aaa
mov
sub
shll
addl
fcom
ret
dec
cmc
fs
mov
inc
or
sbb
push
lds
mov
cmp
in
rorl
inc
test
fsub
iret
enter
xchg
and
jl
xchg
and
and
sbb
out
ret
out
xchg
shl
ret
addr16
or
sarb
loop
sbb
lahf
loop
and
or
cltd
mov
scas
mov
push
dec
stc
fmull
sbb
xor
cmp
adc
popf
je
js
mov
into
adc
jne
dec
aas
xchg
pop
xchg
mov
push
cmpsl
push
arpl
sub
les
mov
xchg
sbb
scas
push
add
and
xchg
ret
xlat
mov
lret
cld
cmc
lea
cmp
xlat
mov
pop
jge
fcmovu
sub
xor
cmc
insb
repnz
jmp
aad
shrb
push
in
dec
jmp
popa
cltd
repnz
jecxz
daa
outsl
xchg
and
inc
out
mov
xor
mov
mov
sbb
mov
push
lods
insl
pop
out
add
push
imul
iret
sub
imul
movsl
pop
push
and
out
nop
popa
mov
test
push
cmp
mov
test
xchg
mov
xchg
cmp
ret
xchg
and
cwtl
push
add
mov
sub
out
lods
jb
inc
add
sbb
and
cmp
mov
add
push
cli
cmp
movsb
nop
test
inc
enter
pop
push
inc
call
inc
jle
pop
dec
xchg
das
js
xor
push
imul
xchg
xchg
mul
je
xchg
outsb
movsl
push
sahf
aas
mov
pop
rorl
cmpsl
add
jg
sbb
inc
dec
fnstsw
lods
repz
clc
ds
out
mov
out
mov
inc
jecxz
cmp
add
dec
into
pop
jp
pop
jo
ret
je
orl
or
pop
cmpsb
loopne
loope
les
add
into
rclb
push
ret
inc
into
sbb
pop
notb
xchg
insl
inc
or
inc
dec
inc
adc
adcl
xlat
in
lcall
scas
inc
lods
adc
int3
jns
jg
popa
aad
push
rolb
sahf
out
adc
jo
xor
push
aam
std
jle
ss
test
sbb
loop
push
fildll
out
pop
jl
and
call
xor
nop
sti
aas
or
int
leave
outsb
je
add
xchg
or
and
push
in
adc
sbb
jle
repnz
xchg
and
xchg
mov
cmpsb
mov
jmp
into
xchg
add
rcrl
das
jp
xor
sub
fs
testb
stos
cmc
push
push
loope
aad
repnz
cwtl
mov
lret
fdivr
loopne
mov
jns
dec
and
cmp
mov
nop
push
fwait
stos
jnp
sub
shrb
cwtl
push
rcrl
inc
jmp
jns
jmp
dec
mov
inc
stos
mov
pushf
les
nop
mov
cltd
subb
and
shrb
in
jae
jecxz
cld
adc
push
jbe
add
gs
loop
cmp
sub
xchg
adcb
outsb
and
shlb
or
insl
into
push
mov
cmpsb
sub
dec
mov
adc
repnz
push
xchg
sub
mov
out
mov
adc
shll
jns
jb
push
leave
and
or
stc
jno
mov
orl
jbe
arpl
push
xor
stos
and
enter
fstl
lret
js
in
test
or
ja
int
or
inc
lock
push
xor
gs
push
dec
xchg
jb
inc
mov
sub
cmc
sbb
sbb
push
jbe
dec
adc
insl
push
rclb
pop
mov
adc
lds
fnstenv
xchg
sub
mov
mov
dec
jae
ja
sbb
push
mov
data16
xlat
sti
fcompl
shlb
lret
or
sub
pop
jp
push
mov
loope
fndisi(8087
push
pop
cmp
leave
xlat
jbe
cmc
cmpsl
scas
nop
push
outsl
nop
aad
pusha
add
dec
jl
or
add
dec
je
inc
sbb
adc
mov
lods
add
int
mov
orb
add
stos
and
inc
add
cmp
mov
mov
mov
shlb
xor
test
mov
movsb
xchg
arpl
in
pop
add
adc
enter
jg
test
mov
fsub
outsb
xchg
cmpsl
sub
andl
aam
lods
iret
jle
and
mov
push
add
add
in
pop
cvtdq2ps
aas
movsl
int3
ljmp
rcll
pop
mov
imul
sub
shlb
ds
mov
pop
mov
dec
add
inc
jg
in
cs
xchg
lcall
ret
popa
sub
sbb
je
sbb
mov
pushf
rorl
dec
jbe
divl
jle
js
adc
xor
into
les
aaa
out
cs
jl
test
mov
cmp
or
stos
and
push
call
mov
popf
sti
add
add
pop
or
mov
ja
inc
pop
jns
aad
in
cmpsl
mov
push
sbb
push
jnp
mov
aam
mov
cmc
xor
pop
bound
ljmp
iret
xchg
dec
cmp
lds
fisubrs
cmp
ficoml
int3
sti
sub
movsb
mov
sbb
fcoml
and
addl
pushl
xchg
out
outsb
pop
leave
sub
cmp
add
movsl
sbb
jae
push
ds
pop
cltd
sub
mov
mov
mov
dec
stos
jns
mov
insb
dec
out
lret
add
dec
pop
dec
mov
mov
sub
push
shl
pusha
jo
fwait
sti
jg
fcoml
and
xor
addl
rcrb
push
push
or
aad
out
andl
enter
jl
sahf
jle
pushf
xchg
call
xchg
or
iret
repnz
mov
sub
leave
pop
mov
xchg
jbe
jb
xlat
inc
cmc
lea
pusha
cltd
mov
jno
xor
cmp
push
mov
mov
aam
mov
das
ret
out
mov
movsb
aam
sbb
fcomi
sbb
mov
je
pop
shlb
testb
mov
jle
mov
daa
push
mov
add
pop
aaa
loop
clc
rcll
and
lret
add
pusha
xchg
and
xor
dec
jl
xchg
dec
jmp
in
in
mov
push
in
dec
fists
xor
jo
sbb
pop
pop
cltd
lret
mov
sbb
and
push
lret
xor
cmpsl
jns
jno
je
push
ret
loop
or
fistpll
leave
or
ret
popf
sbb
sub
jnp
sub
jmp
loop
push
ret
cs
data16
xchg
aas
add
dec
ret
jp
jbe
pushf
into
and
fildl
cmpsl
js
mov
fstl
push
xor
jb
fsubs
rol
and
xor
ja
jle
cmc
adcb
imul
and
dec
cmc
pop
lahf
aaa
repnz
and
jp
inc
pop
push
call
shl
pop
xor
push
enter
cmp
sahf
sti
dec
aad
dec
xor
pop
mov
loopne
arpl
and
iret
and
mov
cs
and
cwtl
bnd
push
fiadds
nop
into
stos
xchg
jg
mov
push
dec
inc
push
out
sahf
cli
sub
loop
imul
jb
shll
sbb
icebp
mov
outsl
and
xor
fdivp
adcb
push
rcll
cwtl
or
dec
or
mov
or
sub
fbstp
mov
push
mov
movsl
and
cli
das
push
xor
ficoms
push
xchg
fcompl
mov
test
mov
mov
xchg
jb
pop
fs
ret
inc
hlt
pop
sbb
data16
jae
push
into
cmp
mov
sahf
ret
cmc
dec
jns
shrl
xchg
incl
push
pop
pop
pusha
adc
pop
stos
lock
lret
mov
and
mov
and
rcrb
xchg
mov
cltd
jno
mov
jle
pop
jge
mov
mov
insl
cmp
outsl
pop
sub
mov
pop
jge
popa
xor
xchg
push
sbb
jae
aas
fdivs
pop
xchg
cmpsb
and
xor
push
mov
inc
sub
ret
mov
ds
cmp
jbe
pop
ret
shll
pop
fisubrs
sbb
cmp
push
sbb
data16
add
hlt
out
cmp
dec
inc
pop
mov
adc
xchg
jne
loop
adc
in
lock
je
sub
push
mov
add
pop
jp
pop
movsl
movl
or
push
andb
sbb
push
mov
push
adc
je
dec
pop
ret
sbb
pop
in
or
push
andb
mov
xchg
mov
call
adc
jo
sarl
movl
in
jbe
loop
js
jmp
push
jno
xchg
jae
nop
mov
or
data16
cltd
sbb
add
add
mov
fwait
data16
inc
inc
or
or
loopne
out
pop
pop
std
inc
adc
aas
or
ret
scas
cmp
mov
cli
adc
popa
out
int
mov
push
or
push
call
pushf
int
xchg
jecxz
fxch
add
xchg
out
dec
and
push
in
or
push
push
insb
fwait
pop
je
mov
pop
or
push
aas
and
movsl
mov
push
movq
addb
loopne
movsl
scas
pop
push
jp
jne
push
jno
mov
fistpl
xchg
push
div
jo
mov
or
iret
pop
push
add
sbb
push
stc
popf
and
cmp
adc
lcall
sub
inc
std
clc
cli
ds
sbb
push
mov
gs
cwtl
add
add
add
add
xor
add
pop
popf
mov
jle
stos
outsb
leave
pop
mov
lds
ficoml
pop
inc
stos
mov
mov
lahf
cmp
mov
sahf
cwtl
push
jp
and
cmp
and
dec
in
ret
std
lock
push
add
popf
fwait
or
and
scas
testl
lahf
xchg
popa
mov
aad
daa
mov
out
lcall
in
xchg
rcrb
mov
jle
push
ds
or
jns
fldl
imul
jle
xor
iret
clc
jno
cwtl
mov
lods
jnp
lahf
pop
add
jb
in
xchg
dec
xchg
sub
mov
gs
cli
adc
cmp
mov
cmp
and
mov
es
mov
test
adc
mov
sub
mov
movsl
mov
jb
sub
je
push
push
jle
or
add
sbb
push
mov
cmpsl
adc
jp
stos
lret
sahf
lea
icebp
fs
adc
fnsave
cmc
cmp
icebp
xchg
test
pop
lahf
xchg
push
fstl
in
ds
sub
xchg
repnz
rolb
mov
xor
adc
pusha
in
call
into
into
fcomps
mov
outsb
pop
jo
push
out
cmp
push
pop
push
or
push
add
push
adc
dec
mov
aad
pop
mov
add
cs
inc
mov
or
ret
jle
pop
loopne
xchg
pop
push
pop
imulb
cld
stc
daa
or
std
sub
pop
add
add
inc
xor
jae
push
sbb
sti
push
cmp
pop
inc
mov
mov
movsl
mov
mov
push
test
push
inc
sbb
adc
clc
or
mov
jbe
inc
mov
xchg
push
cmp
pop
lahf
mov
xor
sbb
gs
stc
es
cs
xchg
inc
outsl
jecxz
test
jb
cmp
cmp
sub
jnp
gs
sub
inc
leave
insb
mov
mov
aas
lret
cmp
push
ds
or
ds
xchg
xchg
js
aaa
stc
into
sub
pop
outsl
sub
push
and
lds
xor
pop
imul
and
inc
lret
les
sbb
cmpsl
adc
in
push
lret
adc
xor
inc
data16
add
lret
cmc
mov
push
imul
fs
ja
ds
sub
stos
repnz
lahf
sarl
push
jns
testb
or
rcrb
in
out
push
sub
sbb
ja
push
lret
in
push
imul
imul
xor
out
jbe
cltd
xlat
sahf
pushf
push
aas
pop
cmp
in
js
shrb
pop
dec
mov
pop
mov
push
ret
mov
inc
jne
push
jne
mov
push
sub
cmpsb
mov
pop
in
sahf
mov
iret
and
in
cmpb
sub
mov
sub
xor
into
pop
add
test
loop
rol
mov
mov
lock
lret
fwait
mov
in
xchg
ret
aam
push
cmp
add
das
pop
push
lods
jle
inc
shlb
push
popw
mov
mov
xchg
cmc
inc
sahf
lock
mov
sbb
in
movsb
xchg
mov
push
sub
push
lds
adc
add
popa
sub
std
int3
lods
into
mov
cmp
dec
pop
stc
or
js
cmp
mov
insl
push
xchg
add
adc
ret
aaa
inc
push
adc
std
aad
testl
aaa
insb
xchg
loope
mov
aam
mov
sub
fnstenv
mov
sub
push
jl
and
dec
cltd
ret
popf
mov
icebp
test
iret
inc
int
pop
cmp
fsub
sub
scas
dec
add
in
enter
pop
mov
fcoml
dec
ljmp
or
in
cmpsl
xchg
mov
push
roll
out
sub
loope
imul
in
cmc
out
inc
mov
and
mov
xor
dec
subb
add
popa
lods
cs
fnstsw
push
testb
xor
or
and
out
dec
out
adc
int
and
rcll
jl
test
mov
ja
cmc
ljmp
ljmp
adc
mov
sub
add
ror
or
popf
xchg
out
xchg
mov
test
out
pop
xor
cld
mov
ret
xor
cwtl
push
mov
testl
mov
notl
cmp
das
mov
cmp
cmp
nop
xor
or
imul
push
data16
mov
inc
lds
iret
xor
pushl
aas
shl
dec
adc
mov
int
pop
jns
enter
cwtl
imul
dec
int3
lret
sbb
and
fwait
jl
ret
xchg
cmc
xchg
push
popf
jo
aad
or
mov
mov
daa
mov
js
adc
cmc
mov
arpl
pushf
lds
clc
mov
sub
add
push
out
es
call
push
or
xor
xor
ljmp
stos
call
xor
cmpsl
enter
push
ljmp
stos
or
xchg
mov
cmpsl
or
or
push
mov
dec
sbb
lret
fldenv
addb
adc
mov
aam
cmp
adc
or
daa
jo
loope
cmp
rcll
les
aaa
cwtl
clc
jae
mov
iret
adcl
mov
into
movsb
xlat
mov
ljmp
into
cs
or
fdiv
popa
iret
fwait
movsl
sbb
lret
rol
or
xor
cltd
ror
push
cs
pop
clc
sub
daa
lock
andl
or
jnp
dec
aas
xor
mov
and
mov
sahf
add
stc
push
jmp
mov
aad
mov
cmp
jno
push
cli
add
into
inc
mov
mov
lea
pop
sub
daa
test
and
adc
in
les
sbb
out
scas
push
pop
dec
call
add
push
add
jg
std
paddq
cli
pop
clc
pop
and
insb
cld
mov
popf
jmp
repnz
subb
jne
mov
cmpsl
loopne
mov
push
repz
inc
fnstcw
jbe
adc
mov
lods
inc
sarb
and
cmp
push
fildl
adc
add
dec
outsb
psllw
jle
and
les
loope
repnz
adc
out
shr
inc
mov
sub
outsb
out
ret
aaa
mov
push
mov
arpl
jne
xor
stos
das
leave
repz
js
sbb
jg
ss
outsl
xchg
lods
pop
out
dec
and
mov
adc
jecxz
and
sub
mov
push
add
dec
sub
test
out
repz
or
or
push
sbb
pusha
sub
in
and
jge
mov
and
dec
mov
mov
movsl
mov
push
mull
lahf
popf
sarb
and
cmp
push
ret
shrb
cmpsl
cmpl
or
mov
mov
sub
or
daa
xchg
outsb
or
andb
adc
push
dec
pop
ds
clc
stos
loop
push
lahf
test
sahf
dec
add
jno
push
xchg
incl
nop
push
pop
fadd
xchg
sub
scas
xchg
nop
gs
cmc
and
je
add
loop
mov
pop
dec
and
adc
imul
out
cwtl
cmp
fisttps
adc
jl
pop
enter
lds
sbb
ficoml
mov
sbb
addr16
jg
sub
scas
cs
std
push
mov
pop
xor
aam
ret
adc
mov
ret
shll
pushf
mov
pop
adc
adc
lds
pusha
sbb
xchg
fucom
scas
mov
dec
shl
push
jl
addr16
das
sbb
mov
mov
ljmp
hlt
lock
nop
fchs
jp
test
xchg
pop
in
sbb
cld
pop
movsl
adc
repz
addr16
dec
ja
cmc
cmp
dec
jnp
stc
and
scas
das
adc
out
push
pop
aam
xor
xchg
mov
int3
cmpxchg
and
mov
test
into
popa
hlt
lods
mov
mov
movsl
lahf
pop
movsb
xor
dec
in
inc
mov
daa
xor
test
int3
pop
dec
sbb
sbb
mov
in
inc
jb
sti
push
mov
mov
inc
dec
add
jns
xchg
lods
mov
push
mov
xchg
or
push
cmp
popf
mov
xchg
cld
pushf
cmpsl
les
fldl
sbb
adc
lahf
sbb
cli
cmp
fisttps
fnstenv
cld
sub
ljmp
repz
popf
jle
add
out
pop
adc
xor
lds
fsts
xor
sub
loopne
xor
sbb
lret
iret
xlat
jg
test
jae
sub
jo
cmpsb
stos
mov
pop
gs
push
inc
pop
mov
mov
jg
sti
jge
leave
fdiv
and
shrb
jne
mov
das
fisubs
dec
ficompl
mov
xor
sbb
imul
daa
cmp
sbb
push
ja
in
adcl
mov
fs
mov
inc
cs
fidivrs
mov
pop
jb
xor
je
popa
pushf
and
pop
loop
faddl
out
push
popa
inc
cmp
hlt
pusha
imul
xchg
jns
call
sub
add
shrl
or
add
xchg
sbb
ljmp
jns
in
and
loopne
jbe
lds
jp
cmp
and
mov
das
cmpl
clc
sbb
inc
push
mov
insb
push
aad
rorb
test
fistl
test
lcall
jae
cmp
pop
ja
push
pop
lcall
inc
les
cmpl
addl
cli
inc
or
push
xchg
jnp
jno
ds
lcall
and
pushf
stos
xor
outsl
jb
cmp
adc
push
xchg
aam
pop
push
rolb
fimull
es
cmp
scas
rcrb
xchg
mov
jo
movsl
xlat
daa
sub
push
push
add
add
jecxz
dec
mov
pop
out
rcll
mov
sbb
idivb
insl
les
rclb
sbb
mov
sub
mov
xchg
int3
dec
mov
test
sti
out
aam
outsb
mov
cmpxchg
xor
mov
mov
sbb
f2xm1
adc
mov
out
subl
jbe
ret
cmpsb
outsb
shll
push
loopne
add
stos
aam
aas
stos
lcall
lcall
dec
jb
movsb
jae
sbb
stc
ret
jg
mov
subb
sbb
sub
insl
fistps
jbe
repz
pop
stos
push
xchg
jns
in
arpl
cmp
data16
mov
popf
in
pop
in
xchg
imul
push
aad
popa
push
lods
mov
sub
or
jmp
lods
leave
les
adc
push
mov
mov
bound
test
fistl
insb
cltd
adc
cli
scas
inc
pop
xchg
imulb
mov
xchg
test
mov
in
mov
pop
sub
fstl
xchg
xchg
sub
lock
test
out
push
mov
inc
lret
arpl
cwtl
xchg
jno
push
adc
std
lock
inc
nop
popf
rclb
addr16
mov
movsb
xlat
adc
fbld
mov
and
js
dec
inc
mov
imul
cmp
or
add
inc
fimuls
pusha
lret
xchg
xchg
mov
roll
test
mov
sahf
fistpll
dec
cs
bound
and
xchg
xchg
lahf
popa
sub
jnp
pop
mov
pop
fnstcw
mov
repnz
pusha
push
jg
mov
or
ljmp
mov
add
sbb
mov
mov
jb
loop
inc
test
pushf
jbe
jns
sbb
cwtl
push
lret
sbb
sub
add
fsubl
cwtl
dec
xor
jmp
cmc
adc
cwtl
mov
xchg
dec
arpl
fcmovnb
adc
movsb
mov
popa
mov
inc
dec
mov
cltd
dec
mov
jmp
push
lret
fstpl
push
adc
add
dec
sti
in
mov
aad
sti
xchg
cmc
or
push
cmp
pop
cmpsb
cmp
sub
jg
daa
xchg
or
fyl2xp1
push
lods
lahf
dec
and
sbbb
sub
pop
sbbl
xor
inc
test
int
sbb
mov
int
outsl
mov
mov
jl
outsl
sbb
add
or
test
mov
pop
ds
js
jmp
je
and
mov
mov
xor
in
fbstp
cld
push
adc
jg
adc
sub
jecxz
jge
stos
jo
gs
cmc
fildll
dec
loop
jbe
dec
mov
movsl
xchg
rcl
mov
add
jnp
mov
lahf
adc
lcall
pushf
sti
test
xchg
rorb
cmp
pop
or
leave
enter
ss
jnp
inc
xorl
scas
ja
fadds
mov
jo
fxch
fdivrs
adc
mov
push
inc
xchg
iret
pop
push
fdivs
fldl
adcb
das
jnp
or
mov
xchg
dec
and
popf
mov
or
cmp
lcall
xchg
in
int3
push
jge
xor
mov
lahf
mov
add
and
jmp
inc
push
jns
stc
outsb
cmp
call
inc
or
dec
ss
movl
and
pop
addr16
jb
jle
dec
dec
mov
inc
cmp
iret
inc
outsl
xor
pop
sbb
test
stc
stos
sub
out
push
idivb
pop
push
sbbb
mov
xor
ret
out
aas
push
outsl
sbb
sub
pop
lahf
push
mov
xor
xlat
mov
mov
mov
int
rol
jg
sarl
sub
icebp
jp
jge
cld
mov
add
in
or
cs
popf
pusha
pop
enter
dec
pop
mov
or
imul
or
ret
iret
int
test
sub
cs
daa
ja
mov
or
lret
add
jb
lea
out
pop
loope
jno
jae
or
les
pop
sarb
adc
jmp
dec
rol
rcrb
xor
test
adc
push
mov
inc
or
stc
mov
fs
xchg
aas
mov
pushf
out
in
aas
push
cmp
lds
or
movsb
pop
ljmp
cmp
cmp
pop
xchg
or
mov
sbb
pop
movsb
test
pop
dec
push
sub
xchg
pop
xor
mov
icebp
stos
lods
mov
xor
mov
stos
xchg
stos
cmp
mov
xchg
dec
sbb
hlt
or
je
sub
push
dec
hlt
or
dec
adc
jecxz
add
je
mov
dec
ja
push
push
xor
popf
mov
inc
jmp
dec
pop
addr16
rorl
mov
inc
hlt
sarl
and
mov
repz
daa
inc
dec
in
lds
dec
pop
cmp
std
push
in
cwtl
test
mov
mov
jns
std
push
out
or
lea
xor
cmpsb
push
sti
inc
out
iret
js
sub
ret
xchg
push
cmp
insl
enter
sub
insb
nop
cs
fldl
dec
sahf
loope
mov
cmpsb
jle
inc
xor
xchg
sbb
xlat
cmc
clc
mov
scas
push
push
sbb
test
insb
leave
push
aaa
pop
je
jno
into
rclb
sahf
lret
aad
je
xchg
push
sar
popf
loopne
inc
in
pop
rcrl
mov
xchg
adc
pop
dec
imul
mov
inc
inc
aaa
jmp
push
xchg
push
adc
add
push
aam
loop
jo
icebp
add
inc
push
dec
cmp
dec
jbe
pop
popa
and
xlat
push
cwtl
sbb
xchg
dec
dec
mov
mov
cmp
adc
jmp
gs
ret
sahf
jp
jge
mov
cmp
or
stos
lods
cli
xchg
or
pop
cs
push
lods
lods
jp
xchg
and
mov
add
and
mov
lea
cmp
push
xchg
aam
push
pop
xchg
cmpsb
sub
jno
pop
xor
test
sub
stos
jns
test
mov
out
lcall
int3
addr16
in
mov
cmpsl
inc
inc
add
dec
mov
mov
and
add
je
push
cmpsb
aas
int
int3
mov
lods
ret
mov
push
or
mov
mov
mov
mov
jne
xchg
nop
cmc
ret
movsb
inc
pushf
adc
push
jo
loopne
lds
mov
repnz
pop
sub
std
inc
or
jp,pn
add
outsl
add
adc
inc
jb
push
xchg
sub
leave
sub
mov
ja
or
lret
subl
sub
repnz
fcoms
xchg
je
xor
xor
fnstsw
das
test
mov
cmp
sub
inc
test
jno
xchg
cmp
cwtl
outsl
cmp
dec
es
jge
inc
cmpsl
cmpsb
fldl2e
lahf
push
mov
ret
adc
cmpsb
ss
shrb
add
inc
xchg
shl
mov
push
ret
pop
jb
lcall
cmc
popf
push
aam
xchg
popa
add
inc
pop
mov
pop
inc
stos
dec
pop
lods
shlb
xchg
adc
and
int
into
negl
subl
sbb
mov
sbb
and
sbbl
sbb
test
and
das
push
testb
and
jge
jge
xchg
repnz
roll
fcmovnbe
xchg
fisubrs
push
iret
test
pusha
aad
test
inc
dec
fisttpl
mov
iret
inc
mov
mul
pop
sbb
push
xchg
lds
jg
mov
cs
out
dec
clc
movsl
ljmp
divb
loope
addr16
sbb
in
ja
unpckhps
push
out
sahf
test
ffreep
icebp
dec
xor
sub
or
cltd
test
loopne
inc
jns
setbe
test
shll
stos
ss
mov
fucomp
sbb
mov
xchg
mov
or
sbb
inc
jne
bound
pop
fisubrs
add
or
stos
out
scas
push
sbb
xor
fistl
add
cli
hlt
xor
push
jne
inc
cltd
and
lds
mov
in
mov
sbb
pop
adcb
jg
xchg
xor
adc
loop
sti
leave
outsb
or
cmp
jl
or
mov
adc
aad
in
or
fldt
lods
aaa
dec
push
dec
int
vrsqrtss
jmp
xchg
imul
dec
pushf
mov
test
pop
sbb
not
das
in
mov
push
fs
jmp
test
sub
repz
pop
scas
cmpsb
add
jns
mov
shll
pop
cld
fdivr
or
cmp
or
ret
dec
out
adc
jne
mov
inc
xchg
test
xchg
and
iret
push
sbb
xchg
jne
or
fnstenv
pop
cwtl
cld
adc
fwait
das
lea
sbb
cmp
ret
aad
push
inc
cmp
scas
loop
xchg
add
pop
inc
mov
sarb
jbe
es
dec
jmp
adc
test
sub
mov
imul
imul
sbb
dec
push
cmpsl
fisttpl
fidivs
jg
cmp
or
fstl
jne
ja
aas
insb
fisttpll
pop
cmp
repnz
pop
jl
fwait
repz
jb
push
and
shll
rorl
lret
sahf
out
in
cwtl
mov
adc
leave
shll
or
lods
in
or
push
outsl
iret
jnp
adc
pop
pop
in
out
sub
push
popa
mov
out
mov
cwtl
decb
mov
mov
dec
mov
icebp
enter
sbb
pop
or
lcall
nopl
sub
push
orl
mov
ljmp
js
sbb
mov
sbb
aam
xlat
mov
ljmp
xor
rcr
cwtl
pusha
in
mov
or
movsl
scas
stos
mov
adc
xlat
jg
mov
mov
data16
add
mov
dec
jecxz
insb
pusha
mov
mov
push
decl
jne
or
lcall
pop
or
insb
mov
mov
insb
mov
mov
bound
out
sub
dec
mov
mov
out
subb
ss
sti
push
sbb
dec
mov
push
fisubs
test
into
inc
fimuls
aam
or
cld
cmp
mov
jno
iret
cs
orl
xchg
jle
push
shll
mov
fldenv
fwait
clc
in
or
adc
pop
frstor
scas
inc
mov
sbb
ficomps
mov
ret
jae
xor
sti
jbe
sbb
cmp
cltd
mov
loopne
add
jne
xchg
ss
add
xor
outsb
ja
jp
ljmp
xlat
incb
or
cmp
movsb
push
add
lock
pop
jbe
xlat
jl
and
xchg
pushf
gs
xor
cmc
sub
icebp
inc
xchg
fisubrl
ss
outsb
pop
fdiv
xor
add
lret
mov
leave
xor
add
das
imul
mov
cwtl
mov
hlt
test
or
ds
ret
mov
xchg
pop
jp
dec
sbb
pop
pop
and
add
iret
and
fcmovne
jmp
ljmp
sbb
mov
cs
sbb
pop
cmpsl
pop
scas
pushf
push
inc
mov
mov
sub
jle
inc
pushf
cmpsl
ds
mov
add
int3
sbb
outsl
imul
shll
push
add
sub
repnz
sub
fnstcw
inc
pop
loopne
in
ret
cmp
jle
addr16
and
xchg
fcomps
sbb
push
loopne
dec
ljmp
hlt
scas
fs
js
fsub
repnz
mov
jnp
sbb
pop
shrl
adc
jno
lods
jbe
test
leave
mov
and
add
or
sbb
xor
in
aam
hlt
in
addl
mov
int3
push
mov
cltd
cmp
inc
jno
lcall
hlt
jmp
scas
or
es
pandn
push
xchg
xor
xor
mov
lock
setbe
xor
or
xor
lds
xor
in
js
loope
in
inc
icebp
ljmp
into
and
sbb
mov
fwait
mov
pusha
subl
fs
adc
push
arpl
and
ret
gs
mov
outsl
leave
lea
cmp
enter
mov
adc
and
insb
popa
mov
addr16
mov
mov
jle
pushf
repz
shrl
test
xor
xchg
lods
jp
jb
inc
sbb
inc
jae
sti
mov
pop
cmc
loopne
idivb
addr16
pop
dec
jp
dec
aaa
jns
jge
cmp
popf
cmpb
call
es
cmp
pop
pop
repnz
insl
js
inc
cmpb
jne
and
jo
sarb
jle
out
jle
pop
test
in
int
pop
push
pop
ds
and
jmp
ret
lods
call
insl
and
sub
pop
hlt
dec
xor
popa
and
mov
mov
sub
test
push
mov
aas
mov
popf
sbb
and
popf
jnp
leave
imul
xchg
jbe
outsl
pop
xor
mov
cli
ret
divl
out
adc
adc
gs
stos
pushf
repz
and
dec
jne,pn
mov
xor
out
push
mov
sbb
fs
loop
mov
aas
jle
pop
das
or
or
xchg
insb
sbb
push
fists
jae
jae
int
and
outsb
cmpsb
aam
sbb
negl
repnz
adc
bound
adc
cs
lcall
push
mov
fisubrs
jnp
mov
sub
sbbl
ja
jno
jo
push
add
push
out
outsb
push
sbbb
lods
sub
xchg
cmc
sbb
xor
rcrl
pop
add
adc
push
ss
loope
stos
testl
andl
lcall
les
cmp
add
subl
push
pushf
mov
inc
mov
rcr
data16
nop
xchg
sti
mov
mov
stc
dec
icebp
xchg
les
mov
sub
dec
mov
adc
mov
and
add
dec
roll
lcall
mov
inc
jne
in
inc
stos
or
enter
xchg
xchg
icebp
int
jg
lret
xchg
je
test
xor
add
push
lret
call
mov
or
scas
je
fdivrs
push
mov
cld
repnz
dec
out
stos
sub
push
loope
adc
mov
push
mov
or
pop
add
into
ret
xor
cmp
int
fbstp
xchg
push
aas
or
xchg
lret
cwtl
sub
xchg
add
cltd
and
andb
popf
push
in
lds
xchg
jo
cltd
sub
movsb
scas
pop
mov
in
jl
mov
sub
pop
in
nop
enter
pop
sub
push
push
mov
pop
jle
test
jmp
outsb
mov
jecxz
jg
dec
lahf
mov
or
push
aad
inc
inc
sahf
cmp
mov
pop
mov
scas
pop
cmp
mov
imul
ljmp
xchg
call
cmp
stos
fstp
loope
mov
or
mov
sarb
jl
rorb
push
pop
dec
push
cs
enter
leave
idivl
inc
dec
stc
or
repz
aad
es
js
fs
sub
stos
icebp
repnz
jo
and
push
and
sub
pop
in
clc
mov
xchg
call
cld
rcll
ljmp
push
dec
xor
lods
clc
push
incl
add
adc
stos
adc
xor
je
lret
mov
and
rcrl
jmp
loope
mov
inc
cmpsl
pop
pop
lods
xlat
or
js
mov
int
push
xchg
es
loopne
in
jns
mov
pop
sub
mov
xor
xor
lea
mov
std
rcrb
outsb
xlat
fsubs
es
lock
xchg
fbstp
test
cmc
in
int3
and
sbb
jns
rcrb
and
lds
mov
xor
adc
leave
inc
dec
cmp
pop
mov
nop
lea
push
xchg
in
idivl
push
xor
dec
add
pop
stos
pop
ljmp
sub
xchg
jo
repnz
dec
pop
add
jmp
jno
jnp
xchg
jae,pn
cwtl
mov
stc
xor
lods
bswap
xchg
fwait
cmp
jne
push
shl
mov
daa
nop
lret
fs
scas
push
bound
mov
mov
jp
mov
addr16
inc
repnz
gs
push
mov
mov
push
lret
inc
ljmp
cli
cld
sub
add
cmp
in
sub
shrl
cmp
sbb
or
pop
pushl
fisubrs
ds
fsubrs
bound
js
push
data16
fwait
mov
pusha
mov
xor
sub
push
js
lock
mov
imul
mov
mov
insb
and
in
and
push
in
or
dec
and
test
mov
xchg
inc
cmpsb
and
sbb
cwtl
incl
ljmp
mov
add
adc
adc
loope
and
cmp
bound
push
or
dec
ds
add
sbb
loope
and
rcr
mov
lock
pause
pop
shl
xor
sbb
incb
aad
and
jne
or
es
jmp
mov
lods
loope
addb
sti
dec
int3
aad
and
fisttps
negl
testl
sub
mov
and
sbb
and
xchg
adc
xchg
shrb
int3
mov
inc
inc
mov
mov
push
jno
dec
je
es
dec
push
pop
push
inc
test
ds
cmpsl
dec
loopne
jmp
enter
cmpsl
aam
mov
insb
lock
sar
mov
xchg
dec
xor
dec
jb
push
ror
aaa
xor
adc
sbb
sbb
adc
sbb
stos
push
loop
lods
sub
sbb
fisttps
mov
jae
fnsave
add
lds
lock
inc
shr
insb
mov
shll
jbe
repnz
jbe
divps
outsl
in
inc
add
in
sub
pop
loope
jle
fs
test
sub
sub
cmpsl
insb
mov
xchg
rorb
insl
jo
stc
sub
add
lret
mov
xlat
push
mov
pop
pusha
jne
and
mov
xchg
mov
enter
popf
cmp
add
push
leave
ss
iret
dec
pusha
xchg
cmp
icebp
into
and
out
lock
mov
mov
xchg
je
in
mov
or
inc
lods
rolb
inc
and
jnp
movsl
mov
push
loop
jbe
lcall
daa
xor
push
cmpsl
jbe
call
outsl
movsl
adc
je
shlb
mov
jle
cmc
aad
ret
clc
adc
inc
out
xor
dec
adc
lcall
addr16
out
push
ficomps
insb
in
cmpb
aas
rolb
test
cwtl
adc
addb
or
sbb
pop
testl
dec
outsb
and
push
fs
xchg
pop
pop
jns
mov
xchg
mov
popa
out
lret
aad
or
ret
xchg
xor
or
jnp
or
loop
fsubl
daa
cmp
xchg
mov
inc
xchg
aam
sub
inc
mov
test
and
imul
lcall
roll
xor
dec
xchg
xor
in
js
inc
mov
es
jge
adc
mov
movsb
int3
out
mov
iret
shrb
inc
ds
mov
adc
and
xor
push
clc
dec
repz
jmp
stos
and
test
xorb
in
in
mov
lcall
mov
lahf
jbe
xchg
shl
cmp
ret
sbb
repnz
add
mov
inc
sbb
sti
xor
sti
jle
and
adc
testb
xchg
in
gs
and
lock
mov
xchg
fildl
push
insb
or
cmp
add
in
sbb
jno
lock
cmc
ss
fisubrs
lret
ljmp
call
xchg
push
pop
xor
mov
lahf
or
shr
push
cmc
std
int3
mov
xchg
mov
add
xchg
jno
ret
pop
pop
push
mov
cmpsb
cmc
jmp
or
jno
push
fildl
push
push
pop
andl
or
pop
ljmp
xchg
sbb
xchg
pop
adc
sbb
xchg
or
jno
cld
sub
popa
pop
in
arpl
xor
jg
fbld
mov
jnp
cmpsb
mov
sahf
enter
sti
ds
dec
imul
scas
aaa
push
and
mov
int
in
in
test
fstl
sbb
test
pop
adc
pop
adc
in
lods
sub
xor
nop
inc
or
fwait
adc
sbb
sbb
adcb
jno
or
jne
mov
pop
push
mov
add
push
push
fincstp
aam
xor
cmp
stos
fldl
rcrb
push
cmp
or
fmull
inc
popa
les
jnp
enter
xchg
xor
sub
pop
fiaddl
frstor
idivl
sbb
ds
push
mov
xor
rcr
repnz
lret
mov
and
sbb
mov
dec
jno
lods
addl
daa
mov
ss
dec
jl
jo
add
mov
add
sub
and
jle
mov
nop
xlat
mov
mov
js
fnstenv
insb
mov
push
adc
push
mov
adc
jnp
data16
sti
stos
xlat
int
cmp
xor
ljmp
loop
lods
out
sub
pop
mov
mov
xlat
dec
xchg
loop
ja
mov
mov
mov
dec
mov
jno
enter
push
jno
subl
bound
mov
popf
cmp
pop
add
sbb
testb
mov
repz
mov
lret
stc
add
xor
nop
jmp
jl
lods
or
mov
jb
dec
lds
add
and
roll
stos
jle
xchg
pop
test
jle
in
dec
jbe
cltd
mov
divb
sbb
sarl
sub
push
xor
enter
test
inc
je
popf
mov
arpl
popa
or
gs
xor
sti
pop
stos
scas
and
leave
xlat
and
call
jae
sbb
icebp
movsb
roll
mov
scas
fiadds
aas
out
mov
nop
cmc
xchg
push
pushw
outsb
pop
sub
xor
in
ficomps
shlb
and
imul
mov
test
lret
xchg
sub
mov
repz
je
fcmovu
movsb
mov
mov
dec
xor
xorb
and
mov
xor
cltd
in
add
jns
in
xorl
in
mov
dec
jecxz
mov
xlat
pushl
jbe
or
sbb
stos
dec
mov
push
aaa
test
jbe
dec
mov
pop
adc
jnp
je
fmuls
ret
pop
cmpsb
lock
into
rclb
adcl
scas
inc
jmp
mov
adc
addb
push
int
iret
mov
xchg
cmp
push
dec
hlt
sbb
cmp
les
lcall
gs
and
mov
pop
pop
sbb
insb
test
fstpt
aaa
imul
xchg
repnz
sub
jo
sbb
jns
push
fwait
in
xchg
push
pop
pop
jle
cmc
ss
call
into
rolb
ljmp
sub
adcb
jmp
xchg
and
call
jecxz
stc
xchg
or
and
lea
hlt
or
mov
mov
notb
sub
outsl
add
pop
mov
int
shrl
and
and
pop
push
add
push
adc
pop
test
mov
and
mov
test
dec
mov
test
add
in
jmp
cmpsl
jnp
xchg
xor
mov
xlat
fimull
adc
js
popf
push
fbstp
lahf
popf
add
jecxz
or
loope
adcl
pop
mov
test
mov
out
negl
jbe
lods
sbb
ror
and
dec
aas
push
sahf
lods
mov
into
jo
aad
cmp
mov
push
mov
xchg
and
aaa
jo
jg
cmp
cmp
xor
sbb
xorl
test
int
imul
int3
fcomps
push
imul
xchg
and
xchg
cmp
ret
add
jl
loopne
sahf
bound
mov
in
movsl
lcall
cld
cmp
mov
xlat
sub
jnp
daa
pop
push
lahf
int3
mov
jo
test
inc
dec
iret
loop
push
push
mov
mov
dec
or
jno
adc
pop
and
aam
sub
out
mov
orb
sub
aam
adc
pop
subb
inc
xor
test
cmc
pop
mov
jns
mov
sub
fnstsw
and
mov
or
jns
int3
fdivrs
inc
or
fs
int3
cld
scas
aam
stc
dec
sbb
mov
push
out
stos
cli
mov
dec
or
pop
or
cmp
and
cmpsl
or
in
lods
arpl
sbb
or
stos
pop
enter
dec
mov
addr16
lea
insl
push
adc
pop
adc
mov
push
add
jecxz
mov
sbb
cmp
mov
int
dec
retw
mov
or
adc
imul
sarb
ss
dec
mov
xor
mov
jo
and
aad
aaa
ds
or
inc
sub
nop
jg
fstl
jp
test
sub
inc
mov
push
push
push
pop
test
cmp
in
sbb
test
es
pop
js
jle
or
int3
cmp
out
mov
xor
inc
sub
js
mov
ljmp
inc
jb
pushf
aad
or
pop
movsl
scas
outsb
xor
xchg
dec
sahf
mov
cmp
xchg
add
ret
js
or
hlt
dec
stos
jg
mov
imul
cli
pop
sbb
xchg
mov
inc
ja
jbe
mov
call
push
inc
xchg
in
xchg
mov
hlt
les
pushf
jg
push
sbb
xor
mov
mov
testl
fadds
in
mov
es
push
push
imul
and
pop
popa
mov
mov
insb
ror
in
or
jle
cmpsb
fimuls
imul
push
mov
pop
into
fstp
loopne
jnp
rcll
sbb
dec
push
jns
ja
push
push
add
inc
jmp
cmc
mov
cmp
xor
inc
aas
jno
icebp
sbb
aas
insl
flds
test
mov
sarl
xor
lods
mov
jne
cs
movsb
ret
js
sahf
cmc
and
leave
inc
out
rcrb
ljmp
popf
sbb
pop
lds
inc
pop
clc
cltd
sarb
push
enter
mov
sbb
test
clc
clc
cli
mov
pop
ficoml
fistpll
jle
mov
int
mov
xchg
sbb
push
fldlg2
mov
push
mov
mov
adc
cmp
push
cmpsl
loop
lock
push
ss
push
xor
pop
jnp
push
loope
inc
mov
mov
in
cltd
out
movsb
out
or
js
adc
and
pushf
jecxz
inc
mov
push
repnz
pop
sub
fisubrs
adc
push
add
cmp
fisubrl
sub
leave
in
xlat
push
dec
and
jne
or
mov
test
pop
idivl
mov
imul
rcrb
sub
or
divl
mov
cmpsb
test
mov
dec
and
test
mov
pop
popa
int
pop
add
fbld
out
in
dec
sbb
dec
ret
std
sub
adc
pop
in
inc
aaa
xchg
addr16
xchg
aam
lret
ds
dec
rcl
push
cmp
fsubrs
push
xchg
adc
vmovss
adc
cmp
sbbl
arpl
out
inc
fcmovnbe
popa
loop
dec
mov
mov
rclb
sti
mov
or
fdivs
nop
mov
ret
jae
fwait
in
inc
adc
mov
lods
jnp
mov
dec
add
xor
sbb
or
sbbb
adc
cmp
mov
mov
outsl
in
notb
dec
roll
pusha
outsb
mov
mov
movsl
outsl
lret
sub
cmp
jle
adc
daa
test
daa
and
adcb
nop
push
jl
jne
bound
inc
test
int
add
clc
mov
sub
xchg
push
popa
rcrl
sub
frstor
lock
mov
adc
mov
xchg
push
repnz
and
mov
rcll
inc
aam
jb
inc
test
jo
or
or
stos
adc
xchg
sti
jle
or
xlat
mov
fs
adc
fdiv
js
orl
adc
loopne
outsb
leave
add
int
das
aam
mov
rclb
xor
insb
pop
add
shlb
imul
inc
xchg
mov
cmp
lret
xor
and
xchg
neg
cmpsb
jmp
mov
popf
dec
add
xor
cmp
jb
subps
mov
scas
xor
stos
mov
lea
stos
adc
hlt
xor
xchg
mov
test
sub
jno
mov
out
mov
rolb
xchg
mov
pop
xchg
loopne
es
stos
sub
enter
inc
addr16
insb
xor
fists
test
inc
idivb
cwtl
xor
pop
lahf
cltd
pop
inc
aam
inc
mov
out
cmpsl
jg
sub
popa
push
and
or
xchg
insl
or
push
idiv
popa
cmpb
sub
mulb
hlt
lret
inc
mov
xor
ret
sahf
and
add
xchg
into
std
int3
jmp
jb
push
repz
cmp
dec
gs
ret
insl
gs
mov
ret
fildll
das
lock
jg
out
adc
pop
mov
scas
rolb
push
arpl
mov
sbb
ds
popf
aaa
fnstcw
popa
je
aam
test
fucomi
imul
inc
lods
loope
enter
hlt
mov
inc
repnz
cmp
rclb
jb
and
pusha
mov
js
jo
cmp
mov
mov
stos
mov
pushf
arpl
jp
jg
xchg
ja
pop
enter
pop
jecxz
fidivs
mov
jg
fwait
xchg
out
mov
movsb
aaa
add
xchg
stos
lods
xchg
out
inc
out
cmpsb
mov
movsb
mov
add
iret
lcall
sbb
and
insl
ret
inc
pop
or
or
mov
jo
daa
mov
clc
ds
jb
jne
pop
fsubl
sub
adcl
ss
sub
sub
ljmp
fcmovnu
popa
int
fildl
outsb
xor
or
push
das
pop
push
popf
mov
push
popf
orl
xor
inc
test
cmp
in
out
sub
and
inc
lds
lds
push
insb
mov
pop
fimull
mov
and
push
dec
jnp
js
ds
cltd
inc
inc
xchg
inc
mov
cmp
jne
jecxz
dec
fists
mov
in
testb
lret
pop
or
hlt
mov
cwtl
pminub
add
adc
mov
fisubl
lcall
sbb
push
outsl
aaa
lret
mov
cli
lods
mov
cmp
ljmp
stos
int
jl
imul
pop
mov
scas
xchg
pusha
stc
jle
mov
nop
push
cmpsl
sarl
movsl
addr16
mov
outsl
dec
aam
cmp
int
sbb
into
cmp
inc
rcll
popf
sti
mov
sahf
mul
ljmp
mov
mov
lods
insb
mov
pop
cmp
xchg
shrb
fstps
fcomps
insb
xchg
into
popa
jmp
pop
xorl
pop
es
lea
xor
xor
add
shll
icebp
mov
sbb
mov
cld
filds
xchg
add
mov
xor
dec
rol
mov
fisubrl
cltd
lods
pusha
push
pop
or
cmpsb
cmp
gs
lsl
test
movsl
cld
fwait
sahf
push
lret
negb
mov
ficoml
xchg
shr
push
xchg
push
and
std
cmp
push
pop
es
push
lods
mov
outsl
add
dec
pop
mov
and
mov
pop
jmp
and
imul
dec
sti
inc
dec
sbb
imul
int3
jge
rol
ret
add
icebp
test
mov
jne
xor
push
aas
adc
test
sbb
mov
out
xor
push
inc
fdivr
shrl
mov
mov
pop
dec
fdiv
dec
sbb
dec
jp
inc
mov
jg
inc
lods
arpl
mov
outsl
out
lret
loop
in
mov
repz
ficoml
ljmp
push
and
imul
inc
pop
pop
adc
fidivrl
fwait
clc
popa
xchg
stos
cmp
arpl
cli
push
jg
or
fbld
popa
addr16
stc
push
int
aas
inc
mov
add
mov
mov
jbe
fisttps
xchg
jl
negl
xor
std
dec
push
pop
pop
mov
out
xor
fiadds
stc
pop
mov
add
int3
xchg
addr16
push
push
fildll
push
fnstcw
xchg
adc
out
sub
sbb
mov
dec
repz
push
xchg
push
movsl
sarl
jg
sub
mov
stos
enter
or
sub
shlb
inc
mov
js
cmp
fstps
gs
das
mov
inc
lea
push
sub
xchg
cmp
or
int
cmp
js
mov
inc
arpl
insb
xchg
xchg
mov
ret
or
adcb
mov
cs
xchg
push
js
mov
fists
loop
jb
mov
xchg
mov
pop
and
mov
into
sahf
sub
sahf
xor
outsl
push
cmp
nop
mov
add
std
sbb
faddp
hlt
add
sbb
ljmp
add
pop
scas
mov
mov
xchg
shrl
push
xchg
clc
jo
push
hlt
push
pop
clts
xchg
aaa
sbb
int3
shrb
mov
or
or
insl
gs
scas
pop
push
add
out
rcrb
pop
repnz
xor
dec
pop
lea
scas
mov
jo
movsb
adc
sbb
stos
leave
rolb
scas
out
cmp
in
test
jp
out
push
cmp
mov
dec
or
or
push
mov
sbb
test
mov
cmp
sub
test
leave
sbb
imul
mov
pop
xchg
mov
std
and
not
dec
iret
xchg
gs
int3
addr16
cmp
add
andb
and
sbbb
cwtl
les
mov
jnp
mov
cmp
mov
sbb
lods
repnz
test
outsl
sti
test
lea
aaa
test
add
arpl
fwait
pop
jo
mov
test
movsb
push
and
mov
xchg
push
pushf
pop
inc
aam
jmp
jo
loopne
mov
test
or
mov
imul
fmull
jge
inc
dec
aas
fldcw
sbbb
popf
jle
mov
stos
test
mov
or
leave
addb
enter
pop
cmp
jp
mov
das
inc
inc
bound
cmc
and
shlb
rclb
aad
lahf
movsl
push
lock
outsl
test
rclb
inc
ljmp
xor
fnstenv
std
scas
xchg
add
loop
sub
pop
cmp
sbb
stos
mov
jge
mov
or
data16
xlat
jge
push
adc
mov
cmp
xchg
imul
pop
mov
jb
out
mov
mov
mov
cld
push
sub
adc
ja
mov
adcl
or
pop
xchg
out
mov
mov
aaa
xchg
lret
jg
adc
lcall
lret
sub
fisttpl
adc
loop
ret
test
pop
xlat
xor
pop
lods
clc
cmp
outsl
lds
cmp
add
cltd
rcrb
push
pusha
fldl
pop
mov
pop
test
sahf
mull
ljmp
subb
stos
scas
xchg
dec
push
mov
push
cmp
out
outsb
push
sub
daa
or
inc
inc
shlb
es
sub
les
fidivrl
icebp
subl
jmp
push
mov
aas
jecxz
cmp
test
pop
in
xchg
ss
add
xlat
andl
or
inc
sub
push
fcoms
xchg
or
push
xchg
mov
push
or
fsubrl
iret
hlt
mov
mov
enter
xchg
mov
inc
pop
add
xor
mov
scas
cmp
inc
sti
jle
cltd
sub
dec
sbb
or
ss
sub
jge,pt
data16
sbb
inc
mov
push
and
into
pushf
scas
idivb
mov
or
sahf
mov
push
lock
adc
out
mov
inc
mov
fmuls
or
daa
xor
lods
mov
adc
in
adc
pushf
pop
lods
push
pop
inc
cmp
bound
das
xor
mov
ss
inc
imul
jb
cmpsl
rcrb
mov
jl
push
pop
xchg
int3
rorl
dec
inc
mov
inc
and
add
mov
xor
pop
aad
fiadds
rcrb
outsl
clc
push
decb
cmp
mov
stos
stc
mov
movsl
adc
adc
mov
and
mov
stos
int
dec
test
out
loop
jbe
xchg
loop
push
mov
sbb
dec
sbb
jnp
into
gs
scas
repz
pop
add
mov
xchg
jle
fmuls
sbb
loopne
in
leave
pop
mov
movsb
inc
pop
stos
jp
cltd
arpl
inc
xor
xchg
xor
popf
or
iret
jl
outsb
out
and
mov
shrl
das
rcl
stc
jmp
jmp
cmp
add
fnstcw
out
or
mov
inc
in
and
xchg
mov
aam
pushf
mov
aas
fldt
ficompl
adc
aas
out
scas
mov
inc
aam
fnstcw
lret
fimuls
mov
jbe
xlat
fsts
jae
loop
jne
jl
repz
xchg
xchg
jno
and
inc
clc
pop
or
pop
pop
ss
xchg
hlt
mov
push
lods
push
in
sbb
mov
xor
dec
scas
notb
test
sub
cmpsb
sbb
pop
push
add
xchg
in
cmp
xchg
jle
les
pop
iret
int3
pop
or
push
cmc
xor
mov
loope
scas
call
xchg
sub
mov
pushf
mov
add
adc
inc
shlb
pop
out
or
pop
or
push
loope
adc
in
gs
repz
mov
xchg
push
fstpl
aas
mov
xlat
push
in
je
cmp
stc
sbb
popa
rcl
lods
test
ljmp
push
out
ficoms
stc
jecxz
movsl
sub
pop
mov
pop
xor
pop
call
icebp
add
inc
sub
sbb
dec
pop
add
leave
mov
ret
vmwrite
jns
push
push
loopne
and
in
movsb
sub
notl
push
test
mov
cltd
xchg
rcrb
fisubrs
int3
mov
hlt
arpl
inc
jb
ret
out
lahf
mov
mov
push
inc
out
popf
mov
bound
out
test
addr16
bound
mov
lret
sub
shll
cmp
jo
xchg
or
dec
sahf
mov
in
xchg
mov
dec
in
lods
std
into
outsl
test
mov
mul
pusha
loope
push
outsl
mov
sub
cs
xchg
pushf
pop
in
nop
out
sti
mov
cmpsb
sahf
pop
rcrl
int
fnstsw
xor
test
sahf
inc
ds
and
xchg
jns
and
test
fsubr
and
stos
cltd
lods
hlt
jno
cmp
and
lcall
inc
aam
lret
mov
mov
lea
and
outsb
into
std
jge
fsubrs
cmp
dec
lret
std
adc
aad
ficoml
push
sub
mov
insb
push
ret
and
fwait
mov
pop
dec
adc
je
dec
mov
je
inc
jge
dec
int
and
sbb
std
test
mov
mov
mov
adc
fwait
pop
movsb
pop
xchg
and
or
mov
xchg
fsubl
jmp
repz
push
mov
ss
clc
pop
push
add
and
sbb
inc
and
dec
enter
and
add
xchg
and
insl
je
pop
mov
int
jg
jbe
inc
repnz
jb
add
cmp
mov
lock
add
adc
or
and
mov
dec
rcl
int
push
pop
cli
gs
mov
lea
scas
leave
cwtl
fdivrl
sub
out
pop
hlt
cmp
adc
ficoms
lea
push
test
jae
jbe
pop
xchg
scas
outsl
out
xor
xchg
xlat
sarb
pop
call
push
andl
mov
or
adc
imul
call
loope
xor
xchg
mov
fsubrs
mov
stc
jbe
xchg
mov
push
jge
int3
xor
sub
subb
loope
lock
fs
pop
xor
or
shl
push
lock
call
jae
stc
push
xchg
rorb
sub
ret
sbb
jecxz
dec
lods
push
faddl
shrl
ja
cmp
cmp
shlb
in
pop
xchg
repnz
xor
sub
call
fdivl
push
in
push
sbbl
rclb
or
invd
inc
enter
enter
adc
dec
push
sbb
and
pop
rcll
outsl
repz
testl
div
xchg
inc
ret
rcll
out
inc
push
leave
movsb
mov
test
mov
mov
xlat
adc
stos
ror
adc
inc
push
mov
and
jnp
test
arpl
roll
or
sbb
push
in
xor
pop
mov
cld
sahf
les
xor
rcr
add
sub
stos
data16
sub
sub
loop
stos
icebp
xlat
lods
pop
repz
mov
rolb
lea
loope
xor
jp
adc
xchg
cmpsb
lahf
pushf
into
es
add
add
mov
mov
pop
dec
inc
jbe
jle
aad
xor
imul
pushf
adc
pop
mov
fdiv
lea
or
imul
outsl
loop
inc
in
cld
mov
clc
push
xor
push
pop
repnz
jb
decl
arpl
lods
loopne
add
loopne
iret
cmp
out
lock
jge
imul
and
stc
cmp
add
dec
cwtl
xlat
aam
mov
enter
loope
stos
mov
shrb
jae
sub
and
outsl
cmc
aam
mov
addr16
ret
inc
xchg
mov
or
je
inc
lret
fimull
out
xor
xchg
xchg
xor
pop
mov
sub
out
insl
lods
xchg
sbb
cmp
adc
cmp
jns
fucomp
xchg
cmp
push
mov
in
fcoml
add
orl
pop
loope
aas
pop
cmp
mov
add
inc
popa
in
dec
pop
lock
es
in
fs
and
sub
cltd
cld
imul
test
xor
pop
mov
pushf
jns
lcall
inc
fbld
mov
adc
mov
mov
inc
xchg
iret
push
ret
xchg
icebp
mov
outsl
push
bound
xor
lcall
ds
push
xor
dec
stos
stos
loopne
xor
aaa
daa
cmp
out
and
mov
fsub
enter
dec
dec
mov
jmp
cltd
xorb
jge
lock
or
rcrl
nop
inc
mov
and
cwtl
jl
movsl
in
mov
insb
inc
push
insb
pop
outsl
or
mov
sarb
lret
or
add
xor
in
dec
sub
push
adc
mov
add
rclb
pop
icebp
loop
mov
inc
inc
test
movsl
pushf
into
jbe
mov
mov
int
testl
popf
loopne
lock
adc
cmc
mov
push
sti
hlt
mov
or
push
es
sbb
xor
aas
fmull
popf
hlt
insl
mov
jecxz
int
out
dec
adc
out
ja
mov
fmul
out
mov
fs
jo
jbe
movsl
mov
frstor
lds
and
cmpsl
push
shlb
dec
cld
xchg
sbb
cmpsl
test
mov
jne
mov
xchg
and
fstp
data16
fidivs
pop
pop
jnp
xor
enter
sub
pop
lock
dec
sub
and
dec
data16
sbb
and
sub
lret
cmp
inc
push
pop
jg
mov
rolb
add
popa
pop
aad
lahf
and
mov
jmp
inc
push
ficoms
push
js
je
rcrl
mov
jae
pop
aad
xchg
pop
xor
adc
mov
ret
sbbb
stos
lods
mov
mov
mov
nop
push
pop
or
pop
jmp
repnz
lret
outsl
ljmp
filds
loop
mov
sub
je
pop
mov
push
inc
inc
push
add
push
xor
mov
pop
mov
adc
test
out
and
pop
mov
in
jge
xor
mov
jb
addr16
addb
insl
int3
xchg
pop
shr
mov
add
movsb
mov
push
mov
imul
iret
adc
subl
aaa
push
xor
into
repnz
sbb
or
push
add
push
lret
dec
mov
aad
xchg
mov
xchg
jl
adc
call
cmpsl
das
icebp
ss
xlat
mov
xchg
jle
flds
icebp
adc
adc
addr16
rcrb
sarb
mov
adc
adc
cltd
fcoml
xchg
sbb
fnstcw
cmp
jb
xchg
adc
cmp
mov
test
jp
lret
mov
scas
mov
inc
inc
ja
or
mov
aad
outsb
pop
mov
cmp
mov
mov
xchg
movsl
cmp
mov
and
push
ret
fwait
cmp
shlb
adc
insl
xor
shll
push
lret
xor
loop
jns
test
push
cli
test
cmp
clc
into
xchg
enter
popf
negb
mov
arpl
cmpsl
or
pop
xchg
scas
xchg
push
push
pop
xchg
mov
enter
cmp
mov
ds
loopne
mov
mov
ds
pop
pop
imul
inc
iret
inc
movsw
jne
fisubrs
dec
push
ljmp
mov
lock
push
enter
aam
mov
dec
ret
xchg
mov
dec
aam
and
cltd
jne
xor
sbb
lods
mov
cmp
add
aaa
dec
lcall
dec
loope
shrb
subb
clc
cld
out
sbb
outsb
ds
mov
push
mov
pop
cwtd
adc
mov
subb
xchg
or
je
scas
pop
popf
add
js
sub
xor
or
les
loope
pop
mov
stos
in
mov
jmp
in
cmp
xchg
or
repnz
lahf
in
mov
jo
mov
ja
or
jns
xchg
bound
sub
mov
jge
icebp
and
jmp
addl
pusha
lahf
or
outsb
call
push
sbb
in
loop
cltd
sbb
mov
jae
mov
push
lock
push
add
in
mov
mov
mov
adc
xchg
decl
jecxz
out
mov
jge
nop
sbb
es
cmpsl
rclb
inc
aaa
fadds
add
sbb
cld
out
dec
int
insb
out
je
lahf
pop
cmp
pop
pop
mov
add
adc
or
sbb
inc
loopne
aam
cmp
sbb
test
mov
inc
push
adc
shrb
scas
inc
imul
cmp
mov
std
mov
out
pop
addl
mov
pop
pusha
ret
adc
dec
inc
mov
roll
aas
sub
mov
insb
idiv
mov
lcall
stos
mov
mov
xor
fbstp
icebp
pop
imul
add
fs
sub
orb
mov
lods
test
pop
xchg
push
int
movsl
adc
lods
xor
std
adc
pop
sub
inc
outsb
or
scas
sahf
test
popf
inc
sbb
sarl
dec
aaa
cmp
mov
cld
jle
mov
data16
mov
dec
nop
js
sbb
pop
mov
aad
fstl
popa
out
mov
xchg
cmpsl
pop
ret
fldt
xor
clc
inc
sbb
xor
cld
enter
clc
psraw
xor
sbb
test
outsb
add
out
push
jo
bound
adc
mov
fildl
ljmp
cli
push
mov
out
ja
imul
and
rcl
mov
jne
lret
adc
push
dec
adc
jg
lret
jecxz
cmpsl
xor
testl
adc
push
imul
cmpl
dec
pop
cltd
inc
push
stos
je
push
int3
pusha
mov
popa
mov
mov
sbb
xchg
xlat
mov
in
mov
daa
shll
pusha
movsl
out
push
sbb
sbbb
mov
std
push
pop
mov
enter
insl
in
je
aam
inc
adc
sbb
xchg
adc
xor
int3
xchg
adc
loopne
shll
mov
pop
sbb
adc
int
mov
loopne
stos
aad
dec
mov
xchg
jmp
scas
add
fmull
or
xlat
pop
es
aad
js
ret
cmp
or
subl
rcrl
push
push
add
imul
cmc
xor
shrb
xchg
lods
jl
stos
inc
in
dec
or
xor
add
pusha
fists
mov
adc
jp
and
mov
mov
nop
cmp
test
leave
and
mov
xchg
jle
lods
test
lods
add
inc
sub
lret
test
shlb
out
push
sub
xchg
push
roll
sti
jl
test
daa
aas
stos
inc
ja
dec
fimull
inc
jnp
sub
aaa
adc
sbb
mov
sbb
push
inc
ja
ljmp
je
dec
bound
push
push
lea
jae
fisubrl
push
pop
outsb
and
and
andb
cmp
fldl
js
iret
in
scas
mov
cli
jg
and
mov
jns
sbb
cld
sbb
icebp
xor
shll
inc
jno
loopne
pop
mov
adc
and
push
pushf
push
ret
push
shl
mov
mov
cmp
jns
nopl
es
ficomps
mov
add
add
mov
xchg
leave
ja
pop
imul
lret
push
cmp
ljmp
subb
mov
xchg
push
jle
scas
gs
mov
push
xchg
mov
ret
aam
stos
sbb
in
jns
add
aad
mov
ror
scas
lods
test
in
sub
push
adcb
inc
cmp
pop
and
and
hlt
cwtl
daa
cmpsb
pop
mov
xchg
mov
sub
push
adc
mov
popf
in
inc
xchg
pop
into
idiv
popf
or
scas
cld
pusha
mov
rclb
ljmp
xor
neg
push
or
mov
dec
xchg
pop
sub
insb
out
dec
push
es
mov
ds
lcall
hlt
add
push
repz
adc
ljmp
mov
or
or
adc
xor
out
mov
ss
aas
stc
push
xchg
jg
cmp
add
sub
out
mov
gs
addr16
insl
mov
sub
rorb
and
and
hlt
lods
push
pop
scas
sahf
ret
cmp
push
lods
out
inc
and
pop
enter
sahf
cltd
and
fpatan
push
sbb
sti
mov
call
and
adc
pop
pop
imul
sub
into
movsb
mov
sbb
add
seta
fwait
cmpsb
fbld
adc
fmulp
ds
imul
mov
jo
loope
insb
inc
push
push
ret
push
mov
cs
fisubl
xchg
cmpsl
inc
lahf
repz
call
mov
xchg
mov
sbb
subl
push
mov
dec
jno
sub
clc
jg
pop
mov
mov
and
add
sub
movb
mov
cmpsl
clc
jae
adc
mov
div
lea
rorl
or
inc
xor
outsl
das
outsb
repnz
sub
lcall
test
xchg
sub
stc
cs
mov
addr16
xchg
movsb
jae
dec
subb
jmp
sbb
xchg
sbb
xchg
pop
testb
in
inc
mov
iret
faddl
jecxz
pushl
ja
cmpsb
xor
add
mov
pop
and
sub
xorl
sub
sub
dec
push
push
cmp
rcl
decb
bswap
fisttpll
nop
aaa
jae
repz
mov
adc
cmp
xor
pop
leave
lods
arpl
jge
push
xlat
fisubrs
cmpsl
imul
xor
aad
ljmp
xor
pop
and
mov
xchg
or
into
imul
inc
scas
jne
das
rorl
in
scas
mov
xchg
scas
outsb
cld
lods
movsb
cmp
mov
js
xor
and
dec
insb
imul
sub
mov
stos
jmp
movsl
lahf
mov
dec
push
dec
add
and
dec
leave
mov
dec
dec
stos
xchg
mov
or
jo
jp
idiv
out
test
dec
mov
es
mov
inc
testl
scas
enter
movsl
in
scas
jl
push
js
mov
or
xor
mov
jecxz
jmp
mov
push
in
add
xchg
pop
xchg
loopne
sub
mov
add
and
scas
mov
out
or
movsl
lahf
call
pop
and
movsl
sub
subb
mov
lahf
jecxz
push
cmp
jbe
xchg
lret
push
and
or
into
add
sub
test
lret
pop
dec
cmp
lret
fs
mov
fnstcw
das
sub
cmpsb
jns
lret
daa
xchg
shll
sub
testb
push
and
jo
test
adc
std
pop
dec
imul
mov
dec
nop
mov
or
addr16
insl
xlat
xchg
push
js
movsb
pop
cltd
mov
repnz
jo
or
test
and
icebp
jecxz
loop
mov
test
scas
sarb
fldt
cwtl
fimull
push
mov
or
ja
stc
lret
test
dec
sub
jp
mov
nop
popa
arpl
ficompl
call
fsub
loope
and
jae
lds
adc
cmpl
xor
sti
sbb
ja
in
shl
inc
pop
push
pop
xor
sub
sub
inc
loop
imul
ljmp
and
sub
in
adc
adc
xchg
sbb
sti
repz
ds
shll
fadds
and
jecxz
scas
out
mov
mov
sbb
popa
sbb
addr16
dec
sbb
inc
div
out
lock
out
cltd
test
sbb
loopne
mov
popa
fisubrs
sub
dec
fcomip
orl
rcrl
mov
xor
repnz
fisttpll
push
pop
in
cmp
sbb
and
inc
xor
mov
iret
jae
adc
repz
mov
mov
inc
add
jmp
hlt
pop
or
das
jo
lcall
inc
in
sbb
jbe
test
js
icebp
xor
push
insb
inc
mov
dec
insl
push
push
addr16
pop
add
into
inc
dec
mov
aas
add
test
lods
mov
scas
inc
sar
fdivl
cmp
inc
pop
arpl
push
xchg
xchg
push
movsb
push
out
incb
sahf
mov
addr16
sbb
push
cwtl
jb
ret
cmpsb
cwtl
cmpsl
aas
xchg
xorl
in
ljmp
outsl
subl
sbb
fwait
lods
xlat
icebp
loopne
aas
loope
push
dec
fmuls
xor
cmp
cmp
xchg
sub
aas
jg
adc
out
out
pop
push
or
xchg
sbb
test
or
mov
arpl
lods
loope
out
outsb
ret
mov
scas
or
mov
outsl
shlb
clc
and
dec
dec
fdivrl
dec
mov
xor
nop
nop
lret
mov
pop
jle
adc
mov
xchg
mov
addl
test
dec
mov
clc
cld
or
rcrl
in
cs
int3
dec
cmp
pop
xchg
bound
xor
into
mov
and
inc
ret
lock
testl
into
aaa
add
imul
push
in
rorl
lahf
into
or
inc
add
xlat
pop
lea
bt
mov
mov
mov
jo
lcall
xor
mov
clc
in
mov
push
lods
popa
aas
ret
inc
jo
shll
loop
loope
mov
push
sub
lods
aas
sahf
clc
es
push
mov
mov
xchg
jo
cmpl
aam
mov
xchg
or
pop
imull
les
sbb
mov
inc
stos
mov
popa
inc
mov
mov
ljmp
jmp
push
and
nop
int3
jbe
lret
daa
jg
out
movsl
int
je
mov
lcall
sbb
nop
xchg
mov
stos
in
cmp
sti
loop
push
ret
cmp
or
jg
xchg
xchg
xchg
push
repnz
pop
test
xlat
mov
lds
jmp
adc
adc
ret
cmp
add
jnp
out
mov
test
dec
pop
out
les
jmp
ljmp
test
sahf
and
movsl
sub
pop
divw
mov
sub
xor
rcll
xlat
cmpl
pop
stc
stos
fbstp
sbb
mov
cld
pop
sub
cmpsl
in
push
pop
pushf
add
and
arpl
dec
mov
andl
loop
scas
lret
dec
and
mov
fwait
test
and
jecxz
ret
jne
in
jp
pop
sub
adc
test
cmpsb
aas
fidivl
outsb
repnz
dec
adc
or
cmpsb
sbb
cmc
xlat
mov
loopne
dec
test
in
add
mov
inc
scas
pop
les
fs
aam
push
jns
icebp
rorb
push
jbe
push
fnsave
das
jae
ja
mov
ja
imul
arpl
ret
cltd
inc
xchg
mov
sbb
jle
dec
fsubrs
in
mov
and
add
adc
inc
and
fldenv
jns
push
ss
inc
popa
jecxz
jg
in
and
int3
cmpsl
jns
jmp
iret
inc
and
out
jno
out
sahf
cmp
dec
das
sub
imul
out
fwait
push
xlat
xchg
jp
xchg
jae
push
xchg
xorb
les
dec
push
mov
jbe
cmc
stos
fnstsw
xchg
or
lret
pop
aaa
loope
je
cmp
in
add
xor
out
sbb
xchg
lods
sti
push
testl
sbb
das
add
xchg
sahf
lods
push
enter
jae
iret
xchg
add
cli
in
push
adc
imul
es
sub
mov
movsb
data16
data16
dec
ret
lods
push
cmp
addr16
lcall
andb
stos
ljmp
sub
push
mov
in
leave
mov
lods
pop
out
jb
xchg
insl
inc
sbb
fs
inc
pop
mov
xor
movsb
das
cmp
arpl
dec
sbb
pop
andb
int
ja
ds
push
xchg
les
sbbl
mov
sub
xchg
das
pop
sub
and
insb
push
cmpsl
mov
add
sbb
mov
mov
sub
push
call
nop
bsf
imul
lea
mov
cmpsl
inc
cmpsl
add
mov
roll
shll
sub
fwait
and
dec
call
arpl
push
mov
add
dec
pop
into
add
xchg
cmp
push
sbb
ljmp
sbb
mov
jno
hlt
movsb
cmc
outsl
sahf
ret
mov
jg
daa
fadd
add
xor
jecxz
sub
add
push
mov
push
and
mov
test
fstpt
stos
push
adc
stos
adc
pop
sub
insb
jno
pop
mov
mov
pop
int
loop
dec
sbb
sti
fwait
stc
or
test
setne
jle
repnz
xchg
call
insb
xchg
xchg
repz
gs
cmp
insl
fsubrs
aas
shrb
outsb
ljmp
jecxz
push
movsb
xor
fwait
xor
push
fadds
and
pop
xor
and
inc
pop
call
sti
repnz
stc
out
inc
popa
mov
rorl
cmpl
push
inc
fadd
out
push
mov
add
and
push
fcoml
aad
pop
xor
adc
sub
add
aad
pop
xchg
test
sub
sbb
sarb
jns
call
push
or
cmpsb
push
icebp
jmp
fs
add
imul
mov
dec
aaa
test
fsubrp
sbb
movsb
daa
lea
jbe
pop
push
push
jns
cltd
xchg
pusha
push
sbb
adc
adcb
movsb
cmp
dec
sub
jno
dec
pop
adc
ret
mov
jbe
int3
cs
dec
jns
sbb
loopne
inc
jg
pop
repnz
mov
add
push
pushf
xchg
mov
scas
pop
mov
jbe
cmp
mov
nop
xor
in
fcmovb
adc
lds
sti
ficompl
inc
repnz
dec
mov
and
cmpsl
xchg
pop
insl
push
lret
inc
or
fldl
pushf
inc
lret
mov
test
cmpsb
dec
mov
mov
test
mov
or
imul
mov
xor
cld
xor
and
sub
ljmp
dec
push
into
jg
mov
or
hlt
enter
dec
mov
sub
xlat
enter
push
and
sub
mov
jp
clts
push
add
enter
pop
int
scas
mov
xor
add
scas
rcr
dec
mov
in
cmp
mov
push
inc
sbb
jle
push
and
sub
gs
xchg
imul
inc
dec
pop
bound
or
mov
pop
sub
adc
insb
sbb
add
clc
pushf
xor
sub
inc
movsl
sub
andl
adc
xchg
xchg
push
jns
and
pushl
or
imul
shlb
scas
mov
xor
scas
adcl
mov
into
sbb
test
push
repnz
mov
sbb
dec
cmpsl
fsubr
mov
inc
or
scas
and
cld
pop
xlat
jmp
jl
lret
mov
loop
jg
jmp
cmc
lock
adc
push
sahf
sti
sbb
scas
push
add
or
add
out
jno
mov
pop
xchg
testb
sahf
sahf
test
add
icebp
adc
mov
insb
mov
ret
imul
scas
push
icebp
pop
iret
sbb
sbb
negl
xchg
sub
mov
jl
sub
fcomp
aam
add
mov
das
cmp
popa
in
lock
mov
inc
shrb
push
push
dec
and
push
shll
cmp
scas
adc
and
lock
lret
push
jmp
outsl
repnz
inc
in
push
mov
jge
in
lods
popa
leave
cltd
pop
cmp
push
mov
mov
inc
pop
and
xor
jge
cmp
xchg
xlat
in
xor
add
sub
and
sbb
ds
jne
int
adc
arpl
push
pop
pop
xor
push
push
and
lds
xchg
das
andl
es
jbe
insl
out
fcompl
xor
cltd
sbb
divl
ja,pn
adc
pop
jecxz
cmp
stos
mov
notl
lds
sbb
sbb
clc
or
je
lahf
fwait
xchg
xor
out
mov
out
mov
wbinvd
gs
xor
and
insl
lea
or
push
fimuls
xchg
sub
mov
pop
scas
outsb
out
call
dec
arpl
test
mov
add
mov
xor
aad
mov
incb
pop
mov
cs
cmp
sub
test
xchg
cmp
and
or
popf
enter
clc
lds
mov
scas
subl
mov
sbb
sbb
push
loope
cmp
jb
mov
mov
push
sub
enter
nop
or
inc
cmp
out
sbb
push
cmp
dec
xchg
add
popa
testl
mov
lcall
mov
pop
xor
pop
mov
dec
xchg
cmpsb
xchg
sub
jmp
mov
push
mov
pop
sbbl
roll
pop
mov
mov
pop
inc
mov
popa
call
popl
cmp
inc
push
xchg
call
xchg
inc
pop
loop
lock
outsl
mov
sbb
pop
or
pop
adc
add
jp
into
notl
pop
idivl
outsb
addr16
cmp
mov
cwtl
mov
cmp
push
int3
movsl
jno
scas
rclb
cli
mov
adc
mov
rolb
ss
cmp
testl
and
cmp
mov
bound
bound
cwtl
mov
ss
mov
and
jae
cmpsl
add
push
pop
and
cmpsl
imul
repz
shl
outsb
in
lret
cmp
push
clc
jne
dec
out
push
xor
pop
cmpsb
int3
je
pop
or
in
cmp
stos
dec
punpckhwd
js
xchg
out
sbb
mov
dec
pop
xlat
inc
pop
mov
insb
leave
jle
lods
adc
lods
jae
mov
call
jnp
loopne
xchg
mov
jl
insb
xchg
xchg
and
adc
xor
incb
cwtl
sbb
popa
mov
jns
xor
lret
mov
xchg
add
mov
stos
dec
call
fwait
or
sbbb
fidivrl
xchg
insl
hlt
and
sahf
test
adc
loopne
mov
out
push
xchg
push
out
dec
adc
pop
mov
push
mov
repnz
in
lods
dec
ret
mov
adc
mov
push
xor
imul
sub
and
xchg
cmp
int3
negl
push
or
cmp
sbb
dec
or
adc
push
mov
mov
ljmp
fwait
js
jns
shlb
int
xor
sub
and
xor
aaa
cli
mov
ja
xchg
jbe
sbb
icebp
fadds
xchg
adc
inc
dec
jno
inc
iret
mov
stos
xchg
cmp
mov
aam
mov
movl
ret
mov
mov
loop
ljmp
pop
inc
pop
xchg
cmp
pop
sub
ds
adc
push
push
sarl
inc
add
out
cltd
scas
aad
divl
call
sbb
movsl
and
and
ficomps
imul
sbb
push
lds
xchg
clc
sub
cmc
inc
arpl
jno
push
int
mov
inc
test
push
sub
ja
jns
sbb
pavgw
jns
mov
bound
dec
dec
mov
push
pop
movsb
inc
mov
stc
sbb
xor
lds
ret
out
pop
add
aam
xchg
je
sbb
mov
insb
les
mov
push
inc
mov
fucom
fwait
roll
xchg
cmp
push
adc
mov
add
iret
cwtl
test
mov
or
daa
out
adc
add
and
pop
mov
addr16
test
in
imul
inc
mov
pop
scas
pop
pushf
or
pushf
xor
in
data16
push
push
push
sti
dec
sysenter
sub
push
and
mov
sarb
into
and
pop
inc
nop
xor
out
jmp
xchg
and
sti
btr
stos
mov
jecxz
mov
fisubs
sub
int
std
jnp
aas
mov
sbb
push
test
stos
add
add
aaa
cld
or
dec
ljmp
std
and
pop
sub
fwait
mov
jge
inc
insb
or
test
rol
push
and
mov
bound
jbe
ret
shll
sbb
int3
add
out
cltd
out
gs
jg
rcrl
movsb
inc
stos
nop
sub
sub
cmc
pop
push
push
jmp
repnz
xchg
mov
std
stos
mov
pop
out
push
shrl
jno
mov
aas
xor
cmp
outsb
mov
mov
and
push
scas
ds
jg
loope
movsl
mov
push
add
in
sub
aad
fistps
aas
and
mov
ret
or
rorl
pop
xor
mov
mov
sahf
mov
scas
loopne
inc
mov
inc
cmp
sahf
fwait
outsb
mov
cmp
pop
sub
out
lds
sbb
cltd
roll
mov
pop
mov
jb
aam
cmp
lods
dec
insb
and
stos
negl
mov
and
push
les
cld
aaa
and
cmpsb
xlat
adc
adcl
mov
push
sbb
notl
sbb
cmp
push
hlt
xchg
inc
add
les
cmpsl
xchg
mov
xor
mov
loope
fsubl
xor
xchg
mov
int
jle
ds
es
mov
dec
sti
arpl
sbbl
call
xchg
mov
jns
rcrl
cltd
xchg
xorl
sbb
push
mov
and
push
jnp
inc
inc
out
mov
pop
paddb
push
enter
jb
movsl
jns
sbb
jecxz
adc
jb
mov
fnstenv
jno
lcall
mov
sub
mov
mov
sub
in
outsb
cmp
cs
xorl
add
inc
mov
add
js
mov
fisubrs
sbbl
test
sbb
mov
daa
pop
js
movb
subl
stc
gs
cwtl
mov
cmpsl
fistl
push
pop
jecxz
imul
xor
push
jo
push
loope
fldt
mov
and
cmp
stc
xchg
pop
sub
mov
adc
cmp
scas
mov
aam
mov
mov
scas
add
movsb
pop
and
adc
pop
ljmp
pop
inc
movsl
call
lcall
pop
das
cmp
fwait
in
leave
imul
sub
cwtl
jp
xchg
dec
movsl
inc
push
xor
bound
jbe
add
mov
mov
xchg
mov
mov
movsl
in
pusha
fucomip
cmp
les
jecxz
jnp
jne,pn
sub
lock
pop
cmc
sbb
inc
popf
test
dec
mov
enter
push
lds
cli
pop
jmp
push
filds
mov
adc
idivl
enter
outsb
lret
psraw
sahf
into
rolb
fdivrl
add
jmp
addl
pop
adc
les
rcll
je
sub
ss
add
faddl
out
mov
data16
addps
popf
das
data16
sbb
push
loope
xor
arpl
pop
and
or
add
imul
stos
dec
adc
aaa
sub
push
adc
pop
inc
sub
insb
loope
jnp
dec
in
das
push
mov
mov
sbb
pop
scas
sar
or
shlb
cld
and
jmp
lock
xor
test
push
push
push
rorb
xchg
fisubrs
icebp
or
xchg
cmp
or
fistps
aam
or
movsl
gs
pop
adc
and
or
mov
outsl
lahf
mov
lds
mov
inc
xor
adc
mov
sarb
cmp
push
adc
stc
pop
dec
sub
xchg
jl
fistl
xor
push
mov
pop
add
xchg
push
imul
into
inc
aas
loop
pushf
mov
sahf
inc
xchg
icebp
jmp
and
xor
in
jns
xor
cmpsb
sbb
pop
add
push
lds
sub
cmp
adc
or
xor
adcl
ja
into
test
mov
shrl
into
and
adc
imul
push
clc
into
inc
mov
cs
sbb
leave
hlt
pusha
je
aam
in
aas
sbb
push
mov
sbb
push
inc
int
out
and
test
jb
sub
xor
adc
fstps
sub
leave
add
lods
jae
bound
cld
dec
ret
add
push
fsts
xor
and
or
push
jns
xlat
int
fs
shll
pop
mov
iret
or
lods
xchg
push
add
mov
popaw
addl
sahf
ds
jecxz
xchg
aas
cwtl
shll
adc
popf
sbb
mov
je
ficomps
clc
pause
mov
sub
dec
cli
shll
loop
sub
pop
and
mov
xchg
xchg
and
and
insb
dec
pushf
lea
adc
inc
pop
mov
outsl
mov
push
mov
clc
dec
and
mov
xor
stos
sti
mov
jns
jb
jae
aam
int3
add
push
cs
fs
sbb
or
push
data16
cmpsb
lahf
jne
daa
outsb
push
lret
push
sbb
push
or
jle
push
cmp
out
sub
lahf
test
dec
leave
sub
pop
xchg
mov
mov
push
add
mov
cmpsb
adc
lahf
mov
fwait
pop
cmp
pop
mov
jl
and
cwtl
xor
or
push
out
mov
mov
shlb
repnz
outsl
loopne
insl
fnsave
outsb
mov
iret
mov
rcll
and
jmp
dec
cli
cld
lret
inc
sbb
jns
inc
jmp
fwait
dec
or
sub
cmp
test
push
inc
mov
jg
rolb
loop
push
xlat
roll
inc
out
and
das
jns
push
popl
addr16
push
in
push
xor
and
jge
cltd
mov
mov
daa
loope
add
jmp
and
enter
lods
lea
jecxz
and
fldt
and
les
cmp
jg
in
lret
xchg
sahf
cwtl
push
mov
jmp
adc
mov
sbb
scas
mov
inc
xor
cmp
or
xor
jns
shrl
xchg
adc
lret
aas
mulb
insl
cmp
and
pop
fisubs
push
fmull
imul
fcmovne
aad
xchg
sahf
pop
orb
leave
andb
popa
mov
mov
sbb
jmp
jo
sbb
pop
sbb
test
push
ret
mov
pop
dec
push
loope
cld
push
lahf
jge
aad
stos
inc
inc
mov
mov
xchg
pop
mov
sub
repz
sti
mov
fwait
add
notb
pop
andl
jb
cmp
jbe
lret
or
sub
mov
inc
test
push
mov
inc
dec
pop
icebp
cmpsb
lods
add
outsb
rorl
mov
push
je
lahf
adc
xchg
push
outsb
sbb
loopne
loope
adc
adc
mov
add
jns
xchg
jmp
mov
dec
aaa
subl
adc
into
or
dec
vmovlps
pushf
inc
push
cmp
xchg
in
fadd
lret
scas
stos
xor
je
dec
adc
dec
jb
je
sub
sub
mov
xor
inc
aaa
sti
xor
push
test
pop
pop
xor
movsb
push
inc
pop
daa
xchg
ja
repz
inc
in
push
imul
jae
push
cmp
shrb
fimuls
je
call
bound
sbb
cli
ret
leave
pop
inc
sub
dec
stos
and
insl
call
pop
inc
push
imul
int3
pushf
jmp
int
fwait
test
addb
sub
push
call
xchg
jl
dec
icebp
push
or
mov
dec
mov
xor
xchg
push
xor
or
test
or
sbb
adc
cmp
mov
test
mov
ljmp
jns
sbb
add
jb
add
test
inc
xor
lods
rorl
call
and
call
dec
fcomps
jmp
xor
cmpsb
outsb
cwtl
ja
or
pop
pop
mov
popf
loopne
xor
or
insb
push
and
testl
popf
cmpsl
ret
mov
cmp
add
imul
dec
mov
xchg
nop
push
pop
xor
mov
xchg
xor
stos
test
jge
xchg
xchg
lock
les
je
int
fdivl
adc
mov
int3
add
add
inc
sbb
addb
mov
mov
sbb
adc
and
push
lods
hlt
mov
subb
jl
into
inc
mov
cld
lret
sub
inc
push
cli
aas
icebp
cmp
dec
les
pop
movl
flds
imul
mov
pop
sub
loope
sub
sub
adc
cmp
push
sbb
fidivs
pop
test
push
aas
cmc
sub
popw
fmul
popa
mov
add
xchg
mov
jo
shll
ja
cmp
sbb
adc
mov
pop
add
add
in
test
faddl
lret
cmpsb
or
cld
repz
mov
and
pushf
pop
lock
xchg
out
cmp
std
dec
push
and
aad
mov
enter
mov
ss
test
mov
lds
shrb
sarb
jp
out
or
js
enter
adc
cmp
sub
sbb
call
cmp
fstpt
stos
inc
xchg
mov
daa
pop
add
ss
mov
out
add
in
cmp
pop
or
push
icebp
xor
movsl
pop
fwait
adc
xchg
fwait
and
hlt
cmp
fldcw
fimuls
pop
frstor
outsl
vpunpcklbw
jecxz
stos
stos
cmp
icebp
shl
in
pop
fcompl
sbb
pop
movsb
jno
clc
jle
sbb
sarb
xlat
movsl
scas
into
es
mov
lahf
insb
inc
imul
push
movsb
xchg
mov
add
xchg
negb
dec
mov
sahf
sub
insb
jle
xor
out
xor
xchg
mov
cmp
insb
dec
dec
cmp
jp
fsubl
rcll
fdiv
incl
push
adc
inc
sub
in
lea
sub
push
jl
pop
ret
cmpsl
lahf
inc
jl
bound
push
pusha
fadds
out
arpl
jae
or
mov
fisubs
jg
lods
xchg
fwait
inc
xlat
or
in
stos
mov
stos
mov
mov
inc
fnstsw
or
adc
nop
cmp
inc
jae
mov
xor
dec
fnstcw
jo
push
xor
out
mov
ss
adc
popa
xchg
aas
aas
cltd
filds
xchg
and
rorl
xor
out
leave
jnp
outsl
cs
arpl
xor
cmp
frstor
mov
xor
fbld
lds
mov
mov
adc
push
xchg
xor
out
lock
scas
mov
movsl
aam
hlt
in
into
lahf
cltd
mov
outsb
adc
js
sbb
or
push
pop
movsb
xlat
imul
mov
sub
imul
mov
movl
shlb
fadds
lods
pushf
and
jns
imul
mov
xchg
dec
nop
sbb
push
pushf
adc
adc
insl
mov
add
mov
push
adc
pop
cmpsb
dec
mov
cld
lret
xlat
pop
dec
add
ret
dec
add
pop
xchg
fst
ljmp
jp
inc
jg
leave
outsb
dec
xor
paddsb
jae
outsl
pop
out
shrl
jl
inc
mov
xchg
mov
into
insl
out
imul
lahf
push
xchg
add
movsb
inc
hlt
fdivr
push
insb
mov
rcr
ja
js
js
sub
das
push
sbb
mov
mov
inc
shld
and
loope
cmpsb
call
rolb
mov
inc
xor
or
ret
adc
xor
add
test
mov
dec
xchg
movsb
push
sub
fwait
jg
dec
inc
push
mov
pop
mov
out
xlat
sub
adc
pop
out
enter
sbbl
scas
popa
and
gs
mov
or
imull
mov
leave
addb
movl
sti
mov
or
mov
sub
adc
into
sub
jnp
popa
fbstp
mov
and
call
push
int
or
repz
movsb
xchg
push
sub
pop
lods
insb
xchg
fistpl
lods
sbb
or
pop
daa
mov
dec
gs
dec
fs
jp
mov
int3
jo
fsin
into
popa
xor
clc
rcll
test
dec
cwtl
push
mov
imul
xchg
push
stc
popf
sbb
sub
filds
or
mov
hlt
cmpl
lds
mov
imul
jp
call
data16
adc
rolb
dec
leave
fstpl
lret
or
lea
inc
cmp
cmp
add
in
gs
hlt
sbb
jp
mov
push
adcl
xchg
sub
sbb
dec
or
xor
pusha
push
jle
cmp
and
add
stos
mov
inc
test
push
pop
sbb
loope
xchg
sbb
test
sub
bound
movsl
hlt
or
cmp
rcrb
push
push
lret
mov
add
bound
mov
pop
add
ret
xchg
jb
push
out
repnz
xchg
xlat
inc
pop
add
inc
jp
push
arpl
inc
lds
inc
mov
imul
and
ret
shlb
mov
lea
enter
sub
iret
sbbl
daa
dec
gs
ss
xchg
scas
dec
sbb
pop
mov
pop
xchg
repnz
or
scas
xchg
out
mov
xchg
test
insl
clc
xorb
xor
adc
pop
mov
repnz
push
push
into
jbe
pushl
faddl
das
in
stos
pop
xchg
loopne
mul
rclb
std
leave
ss
rolb
js
jnp
fisttpl
pop
sub
mov
sub
scas
cmp
call
push
cmc
add
addb
pop
hlt
inc
sub
mov
mov
scas
xchg
push
cmp
and
scas
pusha
out
adcb
sbb
int3
add
ljmp
xchg
jno
fidivl
dec
jo
sub
xchg
in
cmp
ret
insb
dec
stos
ljmp
sbb
test
lret
cmp
jnp
icebp
xor
in
insl
punpckhdq
mov
inc
addb
sahf
lock
lret
mov
mov
das
repz
pusha
rolb
dec
fwait
stos
push
xchg
jmp
sbb
push
and
and
lret
aad
mov
hlt
sti
dec
mov
push
jno
fs
adc
jbe
and
jns
jecxz
stos
and
dec
sub
out
adc
andb
push
cmpsl
xchg
xor
lods
push
add
mov
insb
leave
push
push
imul
mov
cmp
mov
cmp
dec
test
repnz
shll
xor
mov
das
xchg
popa
and
and
adc
repz
adc
fcomps
arpl
push
pop
scas
sbb
dec
aam
mov
sbb
test
push
inc
pop
addr16
mov
jno
dec
lods
pop
or
outsb
pusha
imul
mov
dec
lea
adc
mov
enter
hlt
inc
popa
xchg
aaa
lea
sbb
pop
loope
sub
add
mov
push
adc
or
mov
je
xchg
jmp
roll
sbb
nop
sti
jns
push
pop
fnsave
fdivrl
andl
outsl
fwait
inc
filds
loopne
pushf
aad
mov
jae
popa
push
dec
jb
xor
jno
incb
stc
jbe
movsb
fbstp
adc
jae
add
xor
xchg
jo
fwait
mov
pop
bound
outsb
pop
push
loope
dec
ds
cmp
in
inc
adc
and
fists
jge
test
faddl
ds
jno
jg
sbbl
ss
lds
iret
iret
pusha
outsl
sbb
xlat
mov
pop
enter
cwtl
mov
iret
pop
das
adc
xchg
dec
shlb
cmpsl
arpl
scas
fildl
lahf
stos
fwait
sbb
mov
cli
pop
idiv
inc
je
rolb
xchg
adc
and
cmp
mov
mov
adc
xor
lea
mov
test
inc
cwtl
dec
push
shlb
mov
xchg
xor
stc
add
mov
add
jbe
xor
call
pop
sub
sub
and
and
mov
movsl
sbb
pushl
aam
add
and
fsubl
divl
mov
sbb
ljmp
push
lret
scas
stos
stos
movsb
and
push
shr
sti
lret
aas
rcrb
outsb
sbb
hlt
xchg
clc
inc
in
mov
adc
inc
lea
push
nop
std
rorb
push
sbb
push
pop
or
sbb
lods
pusha
das
addr16
sbb
scas
mov
or
mov
mov
push
loope
enter
push
push
or
lret
lock
popf
fldenv
test
and
mov
jmp
ss
cmp
in
stos
ds
inc
scas
outsb
scas
xchg
and
sbb
xor
mov
sahf
add
sub
out
pop
aam
fisubs
pushf
decl
cmpsb
iret
inc
mov
and
sub
pop
jo
mov
and
cmc
xchg
lcall
xor
lcall
clc
mov
xor
xchg
scas
es
mov
and
jle
xchg
push
push
add
enter
add
push
jle
shlb
in
dec
test
mov
mov
adc
add
test
pop
lret
das
xchg
and
bound
xchg
sub
fs
or
cmp
ljmp
insb
jecxz
and
ljmp
adc
loope
test
or
cmp
cmp
push
xchg
mov
popa
push
adc
icebp
imul
sub
and
push
pop
addr16
stc
cmp
and
push
gs
mov
int
add
popf
and
jae
pop
adc
mov
mov
loop
sbb
leave
addl
dec
mov
and
sbb
ret
push
ffree
cmp
jbe
dec
inc
idiv
and
iret
xchg
hlt
xchg
inc
int3
adc
pop
xchg
rorb
cmp
cld
adc
sbb
and
gs
jne
push
test
sub
aaa
loopne
fucom
push
cltd
fcmovnb
popa
mov
out
mov
into
inc
andb
dec
popf
leave
xchg
xor
xchg
jne
pop
je
test
shl
std
aad
repnz
sub
outsl
stc
mov
popf
mov
add
add
mov
outsl
popa
pop
dec
sub
cmp
jecxz
and
mov
add
or
into
pop
mov
mov
add
pop
jb
clc
mov
mov
adc
mov
fsub
mov
push
jno
subb
cmp
sub
ret
out
ret
add
push
aaa
loope
or
fbstp
inc
cltd
lret
add
xchg
out
mov
nop
jbe
pop
cmp
into
xor
xchg
jl
lret
xchg
cwtl
outsl
jae
ja
sub
xor
mov
fiaddl
out
pop
adc
ret
jbe
fldt
or
xchg
and
mov
jle
inc
test
andb
in
es
cmc
add
mov
xchg
mov
jb
in
shrl
inc
pop
mul
xchg
sti
test
cld
test
filds
push
and
mov
iret
repnz
cmp
mov
pop
xlat
fsts
outsl
rcr
push
repnz
mov
jp
cli
add
jae
repz
mov
jecxz
ljmp
xchg
imul
xchg
js
mov
push
aaa
fwait
sbb
icebp
in
mov
adc
jbe
add
mov
xor
pop
repnz
andl
jge
lea
jb
imul
mov
fsubs
stos
popf
imul
mov
rolb
sbb
jecxz
icebp
shrl
lods
test
and
and
mov
int
imul
inc
aaa
int3
sbb
cld
sbb
pop
sti
push
mov
jmp
sbb
push
sub
sbb
test
mov
sbb
testb
adcl
outsb
ja
push
test
inc
pushf
repz
xchg
dec
test
add
scas
es
mov
stos
adc
push
insb
lds
out
mov
cmp
add
and
sub
sbb
adc
je
pop
aad
outsb
inc
jecxz
adc
pop
cwtl
cltd
mov
lds
jne
add
es
jbe
jg
cltd
lds
inc
pop
test
add
sbb
dec
aas
fcmovb
adc
lods
and
iret
sub
xchg
lods
fs
pop
or
and
dec
jne
je
in
sahf
cs
adc
jecxz
cmp
inc
je
scas
jp
test
add
cs
jbe
leave
add
and
xchg
test
jmp
pop
mov
push
out
inc
fdivr
loopne
xor
cmp
add
mov
mov
or
clc
addr16
ja
and
ret
mov
xor
daa
imul
rcrb
lret
mov
imul
jnp
out
rcr
xor
xchg
and
pop
xlat
mov
and
lret
call
inc
rcrl
rcrb
xchg
xchg
mov
cmpsl
dec
xor
sub
sbb
not
jne
pop
or
clc
adc
mov
clc
loopne
dec
in
mov
popf
jns
pop
push
fwait
sbb
sub
push
push
pop
adc
mov
call
pop
cmpsb
insl
incl
add
mov
mov
inc
sub
js
and
jnp
mov
cmc
fcom
mov
std
pop
cmp
or
shr
push
add
std
jl
push
dec
cmp
repz
subl
sbbl
in
divl
out
mov
mov
sbb
movsb
test
sub
ja
push
dec
push
mov
push
fmulp
add
dec
mov
shl
add
and
and
push
mov
pop
cmpsl
loopne
jbe
pop
xchg
hlt
push
hlt
ffree
out
cmp
ja
dec
cmpsb
adc
mov
stc
xchg
xor
lret
sub
sub
mov
pop
pop
jl
cmc
les
fadds
push
out
bound
addr16
int
adc
sbb
sti
xchg
aaa
inc
enter
or
adcl
popa
push
jne
mov
outsl
dec
ss
iret
jo
aaa
jecxz
push
ds
jae
mov
rcr
pop
jg
mov
sbb
push
mov
enter
sarb
je
xchg
dec
adc
xchg
aad
into
ja
orl
push
ss
roll
scas
arpl
sti
inc
xchg
popf
in
mov
sub
fdivs
mov
iret
outsb
xchg
dec
ret
lea
xchg
cmpsb
adc
popf
mov
nop
mov
push
dec
inc
into
mov
inc
add
cwtl
test
mov
xor
jne
shll
add
scas
scas
enter
xchg
jl
mov
xchg
or
rcrb
pop
jns
xor
jle
push
mov
fidivrs
subl
sbb
ffreep
pusha
adc
or
mov
sti
push
cmc
and
ret
and
in
int
aam
or
jle
jne
cli
push
fsubrl
andl
movsl
xor
test
add
xor
ja
mov
cmpsl
sub
popf
test
mov
dec
mov
lock
fdiv
adc
jns
rorl
ss
sahf
mov
aas
jle
push
mov
mov
and
test
cmp
xchg
or
enter
xchg
push
into
flds
push
mov
fistpl
fistps
xchg
mulb
test
fwait
test
add
mov
push
adc
dec
sub
xor
add
pop
notb
pop
mov
lret
or
jmp
mov
daa
sar
repnz
cmp
fwait
outsb
pop
inc
push
pusha
lods
push
mov
sti
scas
sbb
dec
push
mov
jp
arpl
mov
shl
in
pop
je
orl
push
jno
es
inc
xchg
insb
imul
and
lret
movsb
jmp
cltd
jp
cmc
nop
ljmp
iret
int3
sub
xchg
in
pushf
mov
fdivrs
lret
cli
popa
in
stos
or
popf
cmc
ljmp
emms
mov
jne
jge
call
es
aad
out
popl
je
mov
aad
pop
shr
mov
jle
push
jl
sarb
push
mov
popa
cmp
lds
fdivrl
pop
aad
es
cld
scas
jo
xor
push
dec
add
xchg
mov
sub
mov
jmp
inc
test
lds
inc
dec
and
adc
stos
push
push
jb
add
xchg
xchg
imul
sahf
rcrb
hlt
xlat
sub
test
outsb
xor
push
pop
mov
mov
outsl
sub
pop
xchg
leave
xchg
negl
inc
insb
dec
mov
popf
jmp
xchg
jle
and
jge
xchg
push
nop
push
adc
jo
mov
test
int3
xchg
fistpl
add
fsts
jp
or
fwait
and
mov
arpl
enter
cmp
push
lahf
inc
mov
push
jnp
jo
lds
mov
adcl
shll
call
add
dec
cwtl
sbb
xchg
mov
in
jo
add
and
imul
mov
roll
mov
orb
and
mov
mov
in
inc
out
aas
out
pop
push
sbb
xor
sub
incb
sahf
or
push
sub
addr16
inc
pop
jl
pusha
jmp
cli
or
cmc
xchg
mov
outsb
push
inc
bound
orb
pushf
push
movsl
dec
pop
sti
mov
fs
mov
lods
push
lea
bound
in
jge
pop
mov
std
push
mov
xchg
and
es
xchg
jae
sbb
xor
jne
imul
jp
fists
rolb
fisttpll
pop
pop
inc
sahf
mov
jl
jne
cld
xchg
divl
adc
stos
xor
sti
cmpb
data16
sub
mov
es
xchg
fists
inc
push
push
and
inc
mov
sbb
pop
pop
insb
xchg
dec
fsubl
jb
cltd
xor
loop
std
jno
ret
cmpl
mov
aam
push
pop
movsl
lods
jmp
je
cwtl
aaa
sbb
movsl
sub
jg
loop
imul
lds
fbld
mov
push
xor
scas
shlb
cmp
pop
jnp
mov
aaa
gs
and
bound
cmpsb
sarl
clc
cmp
jno
repnz
cmpsb
fidivl
and
shlb
add
push
ds
lret
and
dec
mov
loope
cmc
mov
int
add
daa
ret
add
xor
mov
push
cltd
push
fs
xchg
add
adc
lods
mov
cmpsl
dec
clc
sub
lods
addb
shl
xor
js
push
xchg
or
push
mov
jp
xlat
add
icebp
cs
jge
push
ret
mov
dec
gs
jbe
scas
jbe
clc
notl
pop
mov
mov
mov
push
inc
lret
xlat
cld
into
push
push
push
mov
cmpsb
push
jecxz
xchg
lea
jmpw
xor
mov
cmp
mov
popa
and
dec
pop
cmp
dec
push
adc
mov
popf
rorb
sbb
fimuls
xorb
gs
ss
inc
insb
mov
xchg
test
mov
sti
mov
cmpl
inc
lds
fsubrs
shlb
mov
gs
push
loop
adc
mov
pop
int
mov
push
stos
xor
cmc
dec
test
jo
mov
xorl
enter
mov
inc
je
out
mov
dec
inc
add
jge
ljmp
xlat
lods
jle
fwait
xchg
stc
rcrl
arpl
cmpsl
aam
lods
shll
cmp
loopne
mov
cltd
fwait
or
mov
pop
jno
jo
repnz
sub
mov
or
pusha
sbb
xlat
pop
inc
out
push
test
xchg
rcrl
or
ret
scas
pop
ret
push
inc
ljmp
enter
fs
cs
mov
adc
pop
popa
xor
ss
es
rolb
pop
cltd
jge
jl
mov
ret
arpl
jmp
dec
std
mov
adc
subb
or
dec
test
add
add
aad
mov
loop
cmp
sbb
out
and
setle
add
sbb
push
js
pop
fsubs
mov
ljmp
push
cmp
sub
adc
or
or
cmp
leave
jo
sub
pop
in
movsl
jno
fisttpll
in
movsb
jl
shrb
cltd
jg
cli
test
push
mov
daa
fldl
adc
test
sub
xor
sbb
push
mov
lahf
in
inc
pop
xchg
loopne
aaa
and
out
stos
das
int
xchg
mov
cmp
push
cvtps2pi
dec
push
jbe
mov
inc
testb
adc
in
mov
push
fstpt
or
mov
mov
sbb
ds
mov
js
jae
jbe
cmp
movsb
mov
push
sbb
sbb
lods
andb
loop
andb
xchg
inc
roll
lea
scas
pop
xor
add
or
cld
fiadds
cmp
out
or
addr16
in
lock
pop
das
pop
push
mov
jns
mov
adc
inc
mov
aam
test
pop
cmp
adc
dec
mov
and
test
cmpsl
jge
outsl
mov
sub
lock
movb
into
cltd
mov
loope
add
popf
dec
and
push
xor
cmp
jne
inc
sbb
add
ficompl
imul
test
jge
and
mov
out
push
sub
xor
push
or
xchg
loop
roll
xchg
xor
xchg
stos
lock
jl
adc
cmp
sub
add
lock
lret
push
test
orl
mov
mov
mov
mov
xor
xchg
scas
cmc
sub
lcall
cmpsl
xor
or
std
adcl
into
loope
and
xlat
xchg
outsb
or
call
mov
mov
and
dec
cmpsb
movsb
mov
in
std
js
clc
mov
test
outsb
xchg
mov
mov
add
repz
shld
adc
lret
gs
shrl
xor
push
mov
dec
add
cmp
mov
pop
mov
mov
js
sbb
sbb
xchg
test
pop
call
hlt
jmp
cmp
sahf
dec
imul
mov
or
push
subl
pop
repnz
push
push
add
arpl
popf
jno
outsb
out
mov
sbb
push
mov
rcrb
mov
bound
idivl
cltd
fs
fiadds
ljmp
and
ret
jne
push
ljmp
inc
mov
cli
pop
or
loope
lret
int
and
push
xchg
xor
push
aaa
cmp
xor
out
dec
jae
dec
cmp
push
aaa
fstpl
insb
loope
dec
fs
int
ljmp
cmp
push
jge
mov
push
cmc
and
sbb
cmpb
hlt
insl
repz
mov
nop
out
inc
jno
aaa
mov
jb
jbe
fldenv
loopne
in
adc
out
dec
xor
clc
mulb
aas
or
in
jns
pop
jmp
hlt
popf
sub
cltd
sbb
or
mov
enter
mov
ret
sub
lods
fstpt
das
mov
stos
lret
mov
xlat
cwtl
add
fldl
mov
or
data16
mov
and
jb
call
xor
ljmp
dec
or
mov
nop
pop
inc
js
sub
push
iret
dec
jnp
xchg
jmp
cmp
js
daa
mov
xchg
sbb
or
cmp
movb
data16
dec
insb
xchg
mov
jb
sub
and
xchg
sbb
pushf
call
pop
adc
push
cli
cmp
mov
dec
out
dec
rolb
shl
mov
popa
xchg
mov
xor
adc
enter
or
fistpll
clc
xchg
ja
mov
and
test
dec
call
fdivrl
cltd
in
mov
xor
sbb
rcrl
dec
xor
loop
dec
and
push
out
jecxz
xchg
inc
movsl
cmpsl
shr
mov
mov
in
fstpl
and
adcl
pmulhw
movsl
shr
push
or
lock
out
xor
xchg
test
fwait
mov
push
mov
lds
out
into
rcl
stos
lret
hlt
lock
adc
shrb
pop
int
sbb
imul
jns
fcomps
dec
insl
into
call
jl
les
repz
leave
mov
jnp
int3
mov
int3
das
xorl
in
inc
cmp
push
and
mov
inc
ja
xor
shll
xchg
jle
cmpsl
inc
push
in
int
imul
shl
out
inc
jne
popa
and
pop
and
mov
nop
es
pop
jne
mov
jge
cli
xchg
popa
mov
push
sub
mov
faddl
add
or
jbe
fnstsw
adc
push
mov
lock
dec
cmc
test
mov
xor
add
fsubrp
dec
jbe
out
test
lods
lcall
cmp
jle
or
add
xchg
aad
movsb
mov
into
dec
add
aad
addr16
jp
dec
xchg
mov
inc
into
das
out
cmc
pusha
mov
jle
cmp
mov
lods
adc
movsl
roll
mov
test
fwait
pop
pop
inc
cwtl
add
lds
add
cwtl
cmpb
imul
movsb
lcall
mov
insb
push
arpl
cs
inc
test
repz
int
mov
incb
dec
pusha
push
test
mov
aam
mov
lret
sub
xchg
jo
aad
adc
pop
mov
or
je
push
dec
shrb
adc
js
loope
jnp
andl
jmp
fisubrs
ficomps
aaa
les
push
inc
data16
ja
scas
rol
iret
lcall
add
mov
xchg
add
in
loop
test
inc
leave
or
pop
mov
std
inc
and
mov
hlt
aaa
loop
add
bound
pop
popf
push
mov
xorl
insb
popf
imul
mov
inc
pop
mull
push
jo
loop
mov
cltd
jg
fnstsw
lods
xor
out
test
inc
loopne
and
add
mov
fstps
inc
adc
dec
mov
push
push
fadds
stc
ret
pop
sub
dec
in
pop
sbb
gs
aam
push
xchg
mov
pusha
shll
pushf
mov
push
mov
xlat
jnp
lock
push
repnz
dec
aaa
jo
mov
lret
xor
jge
rcll
cld
jecxz
xchg
pop
aaa
inc
jnp
gs
mov
mov
dec
mov
push
mov
cmp
in
ret
xchg
ds
enter
mov
or
fbld
inc
push
cmp
ret
inc
addr16
jae
push
dec
adc
ljmp
out
mov
mov
aam
stos
sub
adc
pop
lea
jae
repz
js
and
sbb
rcrl
leave
cmp
aam
jo
mov
arpl
add
or
fiaddl
test
xor
inc
or
push
mov
and
lret
stos
pop
inc
xorb
out
in
adc
jp
jmp
sbb
inc
cmp
lock
fsub
pusha
inc
mov
sub
inc
jbe
pop
imul
int3
loope
push
aas
push
inc
fcmove
ss
xchg
pushf
rcrl
notb
lcall
xor
bound
xchg
jb
pop
in
adc
adc
mov
xchg
ficompl
addl
inc
cmc
ret
push
push
out
pop
rolb
inc
fwait
insl
cli
imul
mov
pop
cltd
cmc
js
jno
sbb
lret
test
ret
or
pop
and
aas
dec
push
adc
daa
insl
or
ljmp
or
and
outsb
loopne
call
aas
lcall
mov
cmp
sbb
lret
sub
xchg
gs
cmp
dec
cwtl
orb
fistpl
push
int
lcall
and
push
outsb
or
imul
adcl
cmp
xlat
sbb
add
mov
fdivrs
icebp
pop
out
pushf
fsubl
test
mov
jle
inc
xchg
adc
incl
jmp
nop
nop
aad
xor
test
fiadds
ljmp
mov
push
add
inc
and
inc
cmp
push
mov
mov
sub
fstl
data16
aad
lds
shll
inc
sbb
pop
cmp
inc
pushf
xor
pop
movnti
or
in
mov
cld
popa
iret
daa
orl
pop
xor
aam
adc
mov
pop
gs
jl
pop
or
adcb
mov
sub
icebp
push
xchg
add
pop
jmp
mov
push
mov
cmp
mov
mov
mov
scas
leave
cmp
push
mov
pop
int
jmp
cmp
xor
mov
add
jmp
outsb
add
sarl
jle
loopne
sbb
or
jb
lock
jo
jl
jno
int3
adc
fwait
push
push
mov
or
fdiv
inc
test
out
xchg
pop
icebp
mov
dec
push
xor
adc
in
andl
cmp
in
fcompl
mov
mov
test
fisubrs
cmp
xchg
out
jle
jno
cmp
test
jbe
and
ds
loopne
scas
insl
adc
test
adc
adc
push
and
jg
pop
sbb
cltd
push
lods
repnz
pop
inc
mov
mov
xchg
push
icebp
pop
xor
lcall
test
add
sbb
popf
std
jne
sti
sti
or
jp
out
ja
mov
xchg
dec
mov
std
inc
sbb
out
pusha
js
lods
or
lcall
sbb
mov
insl
or
push
sub
jb
mov
lret
fwait
leave
shr
dec
out
shr
shrb
movsb
dec
fldl2t
push
xchg
daa
push
xchg
in
insl
hlt
std
and
stc
repz
data16
enter
lock
lock
adc
adc
xchg
jb
xchg
xchg
cs
jl
push
xchg
and
cs
jnp
push
xchg
test
add
and
in
push
lea
das
mov
das
out
aad
sub
cli
lds
rsm
xchg
cmp
jecxz
negb
jecxz
out
and
and
movsl
jecxz
std
out
pop
pop
lock
mov
sub
mov
xchg
mov
out
addr16
in
push
lret
fisubs
fmuls
ret
sub
or
int
add
stos
jmp
adc
stc
mov
shl
add
shlb
mov
js
fmulp
iret
adc
jb
add
daa
xchg
mov
xchg
pop
mov
push
mov
bound
cmc
testb
adc
mov
js
cmp
stos
or
insb
xor
push
ret
pop
add
les
insl
or
es
insb
mov
test
out
test
cli
ret
fadds
addl
push
push
test
es
lea
icebp
loope
pop
push
adc
test
shlb
hlt
in
bound
xor
ror
aaa
rol
test
aas
jg
mov
pop
call
cmp
movsb
dec
and
mov
push
jbe
push
mov
dec
jae
sbb
enter
out
push
push
mov
shlb
nop
pushf
incl
call
inc
icebp
int
sbb
sbb
out
jp
popf
out
lcall
dec
fwait
cmp
arpl
cli
mov
imul
sbb
rcrb
sub
push
in
or
std
mov
fdivl
mov
cmpl
cs
arpl
ret
into
mov
jne
outsb
and
mov
mov
dec
mov
xlat
sub
xlat
jmp
push
jl
jg
ja
jp
cltd
or
popf
jo
iret
ss
adc
in
in
rcl
rcll
jmp
in
jo
fcoml
mov
dec
inc
out
or
jbe
cmp
and
push
mov
popa
mov
mov
mov
les
sub
movsb
pop
and
shlb
sbb
jno
inc
mov
lcall
cmp
push
jge
aam
xchg
out
adc
or
fdivrs
stc
ss
mov
sahf
arpl
adc
jmp
inc
test
aaa
out
out
inc
dec
add
dec
cmp
or
xchg
mov
xchg
mov
test
xchg
pop
js
imul
pop
sarb
clc
cmp
repnz
inc
push
xor
and
data16
ficoms
std
cmp
and
sub
cli
bound
adc
fdivr
aam
mov
mov
in
jne
pop
loopne
pop
outsb
pop
dec
jne
imul
dec
in
adc
test
ret
mov
xor
out
jb
leave
xchg
cs
jbe
push
adc
push
pop
fucomi
jo
iret
adc
ljmp
fcompl
cmp
in
pushf
adc
xor
sbb
xor
mov
and
mov
adc
out
push
and
push
sti
lcall
call
in
and
mov
out
fistpll
shl
mov
or
hlt
cmp
lods
scas
inc
je
test
adc
repz
mov
xchg
incl
adc
ret
jnp
out
cmp
popa
int
push
pop
in
into
adc
inc
inc
pop
inc
pop
lahf
pop
jl
inc
hlt
sub
iret
sub
shlb
dec
mov
sbb
stos
enter
cmpsb
nop
add
adc
push
lea
clc
push
out
adc
xchg
push
mov
pop
push
add
mull
fsts
push
sbb
in
cmp
or
xchg
movsb
mov
or
inc
xchg
jg
or
sbbl
lret
jb
sahf
filds
insl
mov
lret
into
xchg
xor
xchg
xchg
inc
mov
inc
jmp
sbb
jmp
push
mov
lret
xchg
divb
in
clc
add
jmp
shrl
jl
sub
pop
push
or
cwtl
lret
and
xor
xchg
sbb
push
stos
push
cli
jb
out
add
xor
cmp
out
add
xchg
mov
sbb
mov
mov
fistpll
lcall
dec
pop
mov
hlt
cmpsb
scas
aaa
mov
add
xchg
or
pop
pushf
addr16
pop
aad
aas
fmul
lahf
mov
inc
stos
mov
or
adc
rclb
shl
mov
or
cmp
fs
int3
add
dec
movsl
lds
dec
cs
adc
add
imulb
fistpll
inc
nop
adc
sbb
lock
pop
out
bound
imul
jle
and
sub
sub
mov
shlb
cmc
mov
jae
xor
lret
or
pusha
xlat
ljmp
or
mov
jmp
and
xor
cmp
sbb
out
ret
mov
jno
push
pop
fistl
mov
mov
fstpl
ja
or
mov
inc
rorb
jnp
push
mov
mov
add
cmp
pop
gs
je
jecxz
pop
dec
lret
xor
pop
sub
ret
repz
jb
push
sub
adc
mov
shrb
cmpsb
and
cld
imul
jl
or
pusha
xor
xchg
cmp
pop
mov
mov
popf
aaa
push
mov
rolb
jge
xchg
ss
arpl
inc
adcb
sub
pop
mov
xchg
insb
nop
cmp
mov
adc
out
daa
adcb
mov
les
js
ffree
sbb
sub
mov
and
sbb
fistps
mov
dec
jbe
mov
jne
jo
jae
rcll
push
jecxz
jp
push
xchg
mov
lods
scas
or
adcl
adc
jg
lret
pop
imul
xor
dec
fptan
fcmovbe
and
xor
mov
or
and
inc
pop
mov
cmpb
mov
inc
pop
stc
sbbb
mov
pop
xor
cld
lret
cmp
jg
mov
test
test
dec
je
add
inc
add
mov
xchg
inc
icebp
ret
and
mov
jg
inc
push
fldl
test
cmp
xchg
add
das
push
repnz
shl
movsl
out
mov
jbe
or
dec
ret
fisubrl
or
fimuls
sbb
scas
pop
iret
pusha
and
push
outsl
sti
cld
or
loope
scas
call
mov
inc
es
test
outsl
das
jg
in
xchg
jmp
jno
inc
mov
insl
push
jae
sbb
and
sahf
movsb
popf
xchg
daa
rorb
pop
xor
inc
lret
mov
lret
sahf
pop
dec
jl
or
inc
xchg
sbb
mov
dec
pop
jge
jg
push
imul
mov
jge
les
cwtl
and
test
jecxz
es
jo
inc
push
push
ljmp
jae
mov
cmp
stos
mov
xchg
in
adc
mov
pushf
shll
rcrl
or
add
mov
lock
mov
adc
enter
shrb
xor
fdivr
je
push
repnz
hlt
daa
ja
mov
inc
jle
push
jecxz
jnp
leave
sbb
das
outsb
mov
out
out
push
xchg
inc
mov
pop
mov
enter
scas
cld
imul
dec
xor
push
ljmp
into
repnz
jp
mov
daa
dec
sarl
xor
ret
pop
push
mov
mov
out
sub
negb
or
lret
test
ss
mov
pop
hlt
mov
sarl
outsb
mov
xchg
ds
cmp
cmc
stos
jge
es
sbbb
out
repz
xchg
lods
dec
lea
mov
aaa
clc
xchg
pop
push
cltd
nop
sbb
leave
int
push
push
movswl
inc
dec
mov
jb
iret
adcl
in
dec
and
ret
jecxz
orl
dec
xchg
sbb
mov
cmp
sub
sbb
pop
cmpsl
ficomps
daa
xor
mov
ja
xchg
pop
sub
addb
ss
jnp
inc
dec
loop
and
out
xchg
aaa
filds
and
out
mov
push
mov
jae
mov
mov
jmp
pop
loop
mov
imul
cmp
mov
dec
pop
lret
xor
insb
lock
mov
mov
dec
dec
push
cmp
push
sub
cs
sbbl
repnz
pop
dec
loope
mov
insb
add
pop
in
mov
les
mov
leave
jmp
jbe
movsl
inc
stos
inc
ss
pop
cmp
add
enter
jle
int3
jb
xchg
clc
jne
lock
pushf
mov
cmp
cld
pop
push
inc
bound
rorl
pop
inc
xchg
mov
fdivr
adc
loopne
loopne
cli
shll
inc
jmp
sahf
fnstcw
movl
test
cmpsb
and
jecxz
lods
arpl
rorl
lock
mov
icebp
adc
fisubrs
pop
mov
fdivl
cmp
push
and
les
fiaddl
iret
insb
inc
addr16
sub
dec
lods
sti
add
fldcw
lret
sar
xor
adc
add
jg
sub
jb
sub
xchg
lods
cli
call
jne
xchg
lds
lahf
stos
lock
loope
pop
or
pop
repz
in
sbb
in
dec
ficoml
push
addr16
aas
bound
test
pop
rcrl
jecxz
lods
mull
pop
or
and
mov
rorl
gs
std
adc
lret
js
cmpsb
pop
sbb
ljmp
outsl
push
test
xchg
je
dec
lahf
xchg
nop
xchg
out
daa
dec
mov
sub
or
rorl
add
je
jae
scas
jo
mov
or
lds
iret
sarb
enter
jns
fmull
rorl
dec
ficoms
push
sub
mov
xchg
cmc
mov
sbb
mov
divl
sbb
jb
adc
push
ljmp
mov
xor
cmpsl
jmp
dec
out
mov
data16
cmp
cmc
daa
pop
mov
es
add
pop
push
dec
repnz
lods
cli
out
imulb
test
aaa
gs
lret
mov
enter
daa
cmpsl
mov
test
mov
sbb
sbb
add
add
dec
lods
adc
xchg
sbbb
add
daa
mov
add
das
push
rcrb
icebp
add
pop
lcall
push
aam
mov
loopne
fsubrs
inc
shl
or
push
jl
enter
xchg
mov
and
fwait
jns
sbb
push
ret
push
and
or
arpl
addr16
cmpsl
orb
and
or
addr16
pop
pop
inc
fnstsw
popa
rorl
ss
pop
cwtl
adc
sub
cmpsb
popa
bound
jg
cli
adc
jg
mov
mul
mov
pop
xchg
xchg
push
popf
sbb
mov
cmp
sbb
jne
push
subb
bound
or
jge
outsl
pop
and
in
outsl
pop
sahf
mov
mov
inc
in
lret
icebp
adc
and
pop
and
pop
dec
int
sbb
subb
in
sarb
pushf
fisubrs
mov
notl
xchg
cmp
fwait
jns
mov
out
aas
cmp
insl
in
rclb
adcl
jmp
sarb
dec
negl
jbe
xchg
movb
adc
mov
jbe
gs
scas
sbb
lods
insl
inc
sub
pop
add
adc
inc
aas
repnz
imul
inc
push
mov
dec
int
sbb
fistl
xchg
push
cmc
std
pop
push
mov
pop
daa
roll
je
ss
pop
cltd
pop
xchg
rcr
add
mov
outsl
push
mov
mov
jp
call
cmp
jno
or
enter
movsb
pop
cwtl
pop
adc
push
mov
mov
and
xor
aaa
ficomps
xchg
pop
fs
popa
add
dec
cwtl
in
jo
imul
cwtl
fwait
inc
in
cmpsl
andb
xchg
add
lea
iret
mov
jnp
xchg
andl
inc
push
daa
nop
inc
shll
clc
add
orl
fidivl
outsb
xor
jecxz
imul
xchg
xchg
data16
lock
inc
data16
daa
jno
cmp
lret
cmpsb
fidivrs
xchg
incl
pop
sub
mulps
jmp
js
add
in
sbb
rorl
inc
out
pop
mov
and
idivb
mov
in
bound
fistpll
inc
inc
push
insl
mov
je
dec
iret
jp
xlat
jb
lret
aas
lahf
and
in
lret
adc
mov
add
icebp
data16
xor
pop
imul
adc
cmpl
test
stos
or
lock
insl
aad
gs
xchg
xor
ret
nop
leave
sub
adc
jg
jns
mov
push
ljmp
sti
fstpt
or
or
or
or
cs
lds
shlb
aas
jg
adc
aas
aam
mov
xchg
jbe
and
xor
sub
lock
adc
sti
lds
jmp
or
pop
inc
xlat
int
cmpsl
mov
adc
add
and
xchg
imul
enter
imul
arpl
mov
ljmp
jl
dec
lea
sub
adc
repz
jge
mov
enter
push
lcall
or
push
stc
ljmp
dec
xlat
sbb
stc
and
cmp
pop
push
jo
js
mov
mov
inc
ja
mov
mov
out
adc
pop
or
lods
cs
lea
rcrl
jo
pop
push
mov
push
or
sbb
pop
inc
add
push
jl
enter
pushf
jne
mov
cmp
test
mov
sub
and
or
mov
inc
and
jno
and
push
sbb
adc
mov
mov
push
add
gs
adc
adc
das
rcll
adc
sbb
rolb
imul
jl
fwait
mov
jb
push
fsubl
mov
adc
je
popa
aam
sbb
fs
push
call
outsl
pop
loope
test
jnp
pop
loopne
inc
loope
fdivr
adc
mov
xor
out
data16
or
pop
or
dec
inc
and
pusha
xor
cld
adc
out
jmp
and
xor
je
in
cltd
inc
jnp
js
mov
mov
outsb
in
pop
sbb
sbb
es
lock
outsl
std
in
sbb
cmp
iret
push
sub
cmpsl
dec
pop
cmp
jb
ret
outsl
leave
inc
push
push
mov
cmp
pop
je
pop
cmp
cmpw
test
inc
cltd
pop
mov
sub
pop
dec
jno
mov
and
mov
jae
inc
xor
in
jne
push
lods
aas
mov
jnp
fisttps
mov
mov
adc
lret
in
inc
cmp
cmp
das
stos
mov
inc
sbb
cmp
hlt
es
xor
lret
popa
inc
ret
loopne
jo
push
pop
ss
sahf
lea
pop
fwait
sbb
sbb
xor
jge
push
les
idiv
es
or
add
cltd
cld
jecxz
mov
jmp
sarl
cltd
add
pop
stos
negb
shlb
xchg
movsl
jne
jg
mov
in
mov
push
inc
lea
mov
arpl
mov
cld
outsl
push
sub
addr16
rclb
out
mov
sahf
push
testb
jge
shll
inc
test
sbbb
popf
fnsave
fdivs
xchg
ss
lahf
movsb
and
scas
outsl
xor
push
dec
int
adc
sbb
xor
and
inc
adcl
lahf
inc
nop
jecxz
bndldx
push
sti
leave
push
jmp
or
cmp
push
mov
sub
adc
inc
mov
pop
cld
jae
dec
push
loop
xchg
mov
add
into
ret
jge
inc
xor
loop
sahf
nop
sub
push
or
loop
sub
push
inc
xchg
shrb
stc
xchg
pop
ret
in
hlt
inc
scas
scas
aad
fidivl
sub
adc
push
arpl
pop
jmp
pusha
mov
std
cmp
dec
and
cmp
aas
xchg
mov
test
cltd
test
cmp
cmpsl
and
cmpb
outsb
adc
stos
lcall
pop
mov
mov
bound
mov
add
scas
mov
daa
mov
jnp
js
out
mov
addb
sub
ja
mov
iret
xchg
sub
scas
lock
stos
push
add
mov
mov
icebp
fmuls
rolb
in
xor
data16
mov
fcompl
push
mov
mov
leave
or
push
and
imul
enter
mov
les
mov
inc
repz
pop
loop
mov
ss
adc
in
and
rcr
mov
and
xor
ficoml
insl
mov
pop
lahf
test
sarl
stos
push
push
jp
mov
stos
dec
fstpt
shll
leave
xchg
pop
jle
fnstsw
xchg
mov
jnp
out
dec
ror
das
rol
cmp
xchg
repnz
iret
mov
add
inc
test
fstpt
pop
lock
aas
add
push
icebp
lds
dec
cld
enter
imul
dec
jge
pop
mov
dec
sti
push
sub
adc
mov
cld
xchg
sbb
mov
fincstp
sub
cmp
rcll
subb
sbb
test
icebp
cld
in
arpl
iret
dec
fstps
out
sub
cld
dec
xchg
outsl
loope
sbb
or
xor
and
fisttpl
gs
mov
jecxz
sbb
in
clc
lcall
hlt
dec
lock
lret
or
insb
fbld
sub
lods
popf
bound
adc
std
hlt
andb
or
and
mov
lahf
roll
mov
jo
sbb
xchg
add
movsl
cmp
push
ja
cs
sbb
jl
aam
into
lret
pushf
lahf
push
das
aaa
sub
mov
outsb
movsb
repz
push
xchg
adc
subl
sbb
cmp
cmp
ficoms
and
mov
mov
add
addr16
push
sub
into
arpl
repnz
xor
cltd
jl,pt
test
add
pusha
mov
nop
int3
inc
ja
add
outsl
mov
sub
fistps
bound
pop
adc
dec
xlat
cmp
xor
push
iret
ret
and
add
lahf
pop
jg
andl
pop
and
cltd
cwtl
xchg
cmp
push
imul
sti
mov
jecxz
clc
mov
cmp
mov
jae
add
xchg
inc
dec
lret
lock
sub
repz
mov
and
in
roll
sbb
outsl
dec
cltd
into
shrb
bound
adc
cmp
jno
xor
jge
jo
jae
jp
imul
xor
push
aam
add
cmp
mov
into
popa
aam
jp
cmpsl
mov
rcrl
popf
push
orl
adc
stos
rcll
mov
mov
int3
into
lcall
fldenv
push
movsl
outsl
mov
xchg
sbb
mov
out
sub
mov
int3
aaa
jne
mov
lods
xchg
xor
mov
fmuls
icebp
adc
sbb
nop
sbb
rclb
jle
xchg
aad
adc
cmc
addb
push
scas
fnstsw
mov
incl
cmpsl
and
out
sub
add
sub
jge
lret
and
adc
sbb
dec
cli
xor
push
push
out
xor
xor
ds
or
fisttpl
adcl
push
mov
rcrl
pop
sbb
cmp
xchg
sti
stc
inc
jne
lret
cmp
push
jo
nop
imul
imul
push
sbb
pop
incb
cmp
dec
addr16
jecxz
sub
std
inc
ror
push
push
cmpl
cmpsb
lret
inc
pushf
imul
pop
cmpl
xchg
jle
stos
mov
cmp
fidivrl
push
add
sub
subps
dec
push
iret
hlt
pop
mov
mov
add
bound
stos
fists
pop
pop
xchg
pushf
aad
ljmp
push
dec
mov
mov
xlat
pusha
out
aam
mov
js
sbb
inc
sbb
inc
jbe
pop
mov
and
cwtl
pop
xor
jge
push
or
cltd
imul
mov
adc
add
sbb
loop,pn
sbb
lds
enter
adc
rorl
adc
mov
xlat
mov
mov
mov
push
cwtl
popf
movsb
and
lods
notl
sbb
inc
rcrl
shrl
sbb
scas
dec
mov
mov
sub
jnp
jns
xchg
jle
sub
mov
jae
jp
xchg
orb
push
int
es
ja
jns
mov
nop
cmp
out
jne
addr16
xchg
out
jecxz
sahf
mov
idivl
testb
jecxz
js
shll
repnz
xchg
add
mov
inc
lahf
stc
pusha
negb
cwtl
mov
inc
adc
loopne
pop
adc
fistps
sti
mov
jns
dec
inc
adc
dec
xorl
inc
jl
pop
push
add
test
leave
arpl
mov
aam
mov
fisubs
test
inc
in
lcall
add
out
addb
pop
xorb
addr16
adc
add
and
jae
scas
and
jle
jl
add
mov
in
aam
adc
mov
js
jle
sub
repz
cmpsl
ret
call
ss
jmp
jnp
cs
jmp
inc
fistps
std
and
clc
and
sbb
mov
or
divb
test
shrl
sub
mov
dec
mov
adc
repnz
shrl
lds
mov
sti
jp
fsubl
int
inc
aaa
adc
popa
sbb
dec
sbb
shlb
and
pop
jnp
mov
cld
lea
ljmp
mov
sbb
add
jbe
fdivr
push
pop
inc
xchg
pop
cltd
fisttps
pop
outsl
mov
stos
sub
push
fildll
das
xor
loope
xchg
rorl
stos
sbb
ds
nop
adc
cmp
test
or
sbb
out
xchg
mov
jbe
inc
lods
lea
int
outsb
pop
xor
ja
add
mov
ljmp
imul
xchg
shlb
cmpsb
repz
mov
test
mov
or
fs
cmpsb
sub
and
call
lds
clc
cmp
insl
pop
icebp
mov
dec
pop
out
in
clc
movsb
bound
in
aad
pop
add
enter
mov
insb
xchg
xor
push
push
xor
mov
add
xchg
and
sbb
cmpb
xor
nop
dec
cmp
pushf
fildl
cld
cmpb
sub
movsl
dec
loopne
and
pop
mov
cs
nop
int
scas
mov
dec
stos
sub
inc
data16
cmpb
mov
add
adc
sub
mov
cmp
push
subb
cmp
add
mov
fstps
outsl
mov
in
sbbl
xchg
cmp
test
push
mov
sbb
decl
lock
sbb
lret
idivl
pusha
adc
sbb
adc
ficomps
mov
std
out
stos
out
fildl
ss
pop
je
aaa
repnz
in
fistl
push
sbbl
and
push
orb
jg
loopne
stos
push
mov
aas
movsb
cmpsl
aad
pop
fdivs
scas
mov
daa
xchg
adc
jno
mov
gs
mov
lret
out
jns
xchg
cltd
into
fnstenv
aaa
fsin
aaa
dec
in
sbbl
jmp
pop
cmp
das
push
adc
and
and
sbb
ja
idivl
and
ret
push
cli
add
fistps
sub
unpckhps
sbb
or
fs
dec
mov
imul
ja
jbe
movsl
ret
lock
fisubs
push
je
fs
test
out
daa
jno
daa
xor
xchg
adc
sub
data16
lret
add
mov
ret
cmpsl
and
xlat
insl
scas
shlb
mov
mov
negl
jecxz
popf
push
pop
or
xchg
sbb
xor
jne
mov
xchg
loope
pop
ds
or
fidivs
sbb
cmp
stc
int3
push
enter
push
mov
outsl
sbb
es
ja
inc
je
push
aaa
rcll
add
test
test
dec
push
scas
push
call
and
mov
test
push
push
dec
inc
or
cmpsl
fs
cmpps
movsb
push
loopne
in
push
adc
fimuls
addl
add
aaa
popf
xorl
inc
xchg
jno
call
insb
adc
push
hlt
pop
jno
xchg
sbb
icebp
cltd
pop
push
repnz
mov
push
dec
mov
test
dec
ret
jne
jbe
inc
aad
sbb
xchg
pop
and
push
or
push
lock
movsb
xchg
dec
ror
sbb
int3
ficoml
iret
les
fs
jl
pop
inc
or
cmp
sbb
sbb
jg
scas
mov
stc
jge
or
scas
fdivrs
aam
pushf
sbb
jle
test
dec
push
inc
ja
add
lock
and
fldenv
fidivl
mov
adc
outsl
fisubs
jge
jmp
cltd
or
xchg
imul
mov
outsb
lods
test
aad
bound
add
movsb
cwtl
mov
fcoml
sbb
stos
or
vdivss
aas
fwait
sub
jl
psrld
adcl
and
push
test
out
adc
test
fs
cmc
ds
and
jp
push
jo
clc
push
cmp
loop
add
fcompl
hlt
addr16
scas
js
sbb
dec
mov
rcrb
cmp
cmp
add
lods
test
shll
inc
inc
enter
and
push
cmp
pop
lock
and
sub
stc
jl
pushl
or
mov
or
dec
mov
dec
sbb
fidivs
mov
push
inc
or
mov
mov
inc
and
mov
push
std
adc
aas
sti
adc
lods
push
dec
inc
inc
sbb
lcall
pop
sbb
repnz
bound
xchg
mov
dec
cmpsb
xchg
cli
inc
cmpsl
nop
push
push
loop
xchg
pushf
les
loopne
mov
hlt
in
pop
pop
test
pop
push
push
and
adcb
in
adc
cmp
mov
and
or
mov
pop
test
xchg
dec
push
jnp
cmpsl
sbb
push
iret
fldl
int3
mov
ror
ss
loop
sbb
popf
dec
rcrl
mov
and
ja
loopne
mov
lret
sub
js
call
adc
jo
lds
insb
into
pop
sahf
add
stos
jge
mov
inc
mov
aas
xchg
outsb
push
xchg
jbe
adc
pop
push
js
mov
outsb
cmp
sti
push
mov
add
bound
jg
ja
mov
push
sahf
inc
test
aas
mov
in
mov
sbb
dec
cmp
or
and
or
xorl
mov
sub
push
daa
mov
inc
push
in
and
scas
popf
jge
xchg
cwtl
inc
jle
add
push
cmp
xlat
inc
or
add
xor
jo
pop
adc
fistpll
je
and
and
rol
andb
shll
mov
mov
add
data16
repz
dec
cwtl
out
repnz
std
xor
push
xchg
mov
xor
movsl
mov
stos
pusha
xor
jmp
sub
roll
dec
call
xchg
jp
push
js
and
xor
xchg
in
sti
cmp
out
or
inc
cmpsl
icebp
mov
fisttps
pop
dec
pop
lods
les
lods
iret
shrb
mov
xor
int3
out
stos
imul
stc
xorb
or
or
insb
sbb
push
in
mov
adc
xchg
push
inc
je
popf
out
xchg
pop
pop
xchg
out
stc
not
xchg
aam
jecxz
shlb
push
push
lret
stc
pop
fsubrp
xchg
or
jbe
jmp
xchg
pushw
shll
sbb
fs
pop
xchg
push
sub
mov
push
iret
and
aaa
or
roll
jle
push
pop
scas
stc
and
add
jmp
movsb
in
fs
inc
sub
popf
mov
add
fcomi
or
pop
repz
inc
mov
stc
jl
jns
mov
push
push
fsubs
adc
fs
lcall
insl
add
scas
dec
hlt
mov
sub
push
add
ret
add
arpl
xor
sub
push
xchg
lds
fdivl
fistpll
lea
mov
pop
fcomi
cltd
stos
insl
insl
setge
into
in
cmp
push
lea
sub
push
mov
mov
cmpsl
mov
add
insl
flds
inc
sub
dec
pop
js
jge
test
fbld
dec
sub
cld
push
nop
cld
push
ror
or
aam
mov
jns
push
xchg
ja
sub
or
lcall
leave
sub
sbb
orb
adc
cld
jg
sbb
dec
mov
sbb
sbb
cmp
bound
lcall
push
pop
shl
xor
xchg
mov
movsb
inc
push
in
js
add
or
imul
ljmp
test
lods
mov
bound
rclb
push
shll
xchg
and
shrb
xor
cld
shll
gs
sub
mov
or
inc
and
xchg
pop
repz
sub
scas
sub
push
imul
xor
and
je
adc
inc
jecxz
xor
xchg
xchg
sbb
xchg
stc
mov
adc
cmp
std
jge
jle
add
sbb
dec
rcrb
pop
pop
adc
jbe
push
fildll
jae
ljmp
das
movsb
xchg
mov
cwtl
cmp
int
mov
and
ss
insb
dec
stos
inc
clc
cmpsl
ljmp
aad
filds
fwait
mov
ljmp
das
and
ret
call
push
lods
negb
push
pop
aad
xchg
mov
add
jne
inc
mov
mov
mov
icebp
jae
push
push
push
test
lods
pmulhw
sub
pop
add
ret
cs
jb
mov
cmp
fidivl
fbld
jnp
and
arpl
out
xchg
sub
or
push
cli
sti
jecxz
sub
sbb
scas
jp
out
aad
or
stos
lods
imul
cmpsl
mov
dec
lea
push
xchg
mov
xor
mov
insl
imul
ljmp
mov
out
xlat
into
lret
push
cmpsb
mov
fmul
movsb
xor
fbld
pop
push
mov
push
push
and
or
and
push
pusha
mov
mov
daa
cli
cmp
pop
fld
jl
mov
add
popl
mov
rclb
cmp
jmp
cmp
pop
sbb
push
call
cmp
push
and
cld
xchg
rclb
xchg
movsb
mov
inc
jp
gs
or
stos
repnz
jb
add
imul
int3
std
push
loopne
cmc
cmp
movsl
ja
mov
leave
pop
xor
or
loope
dec
and
test
fs
and
repz
jle
cltd
lods
mov
adc
sub
adcb
pop
pop
adc
inc
xor
in
xor
cmp
jo
dec
mov
adc
fmull
jle
cmp
inc
cmp
xchg
jecxz
leave
jmp
adc
push
adc
sbb
icebp
and
popa
sbb
iret
mov
jmp
inc
mov
or
lods
divl
nop
mov
mov
xchg
sbb
and
jp
sti
mov
mov
fistps
cmpsb
xor
adc
in
addb
push
cmp
jmp
outsb
mov
jno
inc
xchg
inc
push
pusha
sub
pop
sbb
xchg
cmp
into
out
or
cmpsb
pop
sub
add
add
add
sub
or
and
fimull
fs
mov
mov
inc
mov
stos
mov
sub
cmp
or
decl
repz
fistps
lods
pop
adc
xchg
or
ss
in
outsl
sub
sbb
mov
cmp
out
mov
and
clc
push
test
push
mov
pop
nop
sbb
jg
pop
xor
scas
rolb
or
sbb
mov
xor
inc
lods
mov
in
mov
arpl
and
sbb
ds
daa
pop
ss
dec
xchg
xlat
inc
mov
cmp
call
mov
and
sbb
cmpsl
jg
jae
je
or
rorb
int3
in
std
sarb
mov
lahf
mov
or
test
stos
test
cmpsb
and
jl
pusha
imul
lods
jp
mov
push
add
mov
pop
js
fnstcw
push
inc
insb
aad
fdivs
fbstp
mov
pusha
push
bound
lret
dec
mov
mov
cmp
mov
cld
or
dec
pop
pop
or
cmp
mov
cs
mov
add
cmp
ljmp
jae
push
out
mov
sbb
jp
xchg
inc
loope
add
loope
notl
pop
enter
mov
cmpsl
ds
adc
jmp
add
push
mov
scas
outsb
cwtl
jl
jp
sarl
mov
cmp
in
icebp
pop
repz
insl
mov
mov
popf
cmp
xorb
sub
movsb
rsqrtps
dec
nop
out
nop
and
cmpsb
sub
cmp
les
or
mov
cmp
adc
mov
and
cmp
pop
sbb
fsubs
lret
pop
call
shlb
ret
cltd
cs
sub
into
jp
sub
loop
jbe
sbb
mov
andb
dec
sbb
ja
pusha
cmp
and
inc
jecxz
popf
outsb
push
je
in
nop
loope
xor
push
popf
jl
ficompl
or
ret
mov
sbb
out
mov
push
push
pop
push
sbb
xchg
or
scas
aas
jnp
rcrb
popf
push
jg
shlb
sbb
bound
data16
ficompl
cltd
xor
mov
arpl
cmp
outsb
ret
outsb
jne
rorl
aad
cmp
scas
cmp
mov
pop
sti
imul
lahf
xor
sub
jl
xchg
mov
cmp
xchg
sahf
fimull
pop
and
pop
jno
cmp
jnp
xor
mov
xchg
sarl
adc
mov
mov
pop
cltd
sbb
jp
rcl
sti
sub
shrl
jne
rcrl
mov
das
jbe
push
mov
jb
push
fucomi
lcall
push
push
xor
mov
dec
ljmp
and
pop
rorb
aaa
lock
je
adc
stos
inc
add
xchg
adc
loop
inc
popa
adc
shlb
out
jb
xchg
add
sbb
and
xor
cltd
push
mov
mov
movb
xor
add
cli
std
jo
fwait
push
pusha
or
mov
and
bound
ljmp
test
push
outsb
scas
subl
cmp
mov
jp
int
int
hlt
sub
sbb
mov
rcr
and
xor
sahf
cmc
sbb
sbb
mov
push
sbb
not
mov
sbbb
es
jb
and
fmuls
lock
jmp
orb
mov
bound
rol
or
aaa
enter
sub
push
mov
jle
insl
in
mov
adc
testb
cmpsb
cmc
rcrb
mov
addr16
pop
xor
sub
xor
stos
lahf
push
mov
inc
fwait
jbe
loop
movsb
pop
lahf
xchg
test
addr16
rcll
or
gs
mov
cwtl
nopl
pop
jp
popa
cltd
imul
pop
loop
add
inc
je
call
inc
bound
movsb
popl
test
xor
xchg
push
fwait
cmc
adc
inc
sub
sahf
dec
mov
sbb
imul
pushf
dec
lahf
cmp
sub
orl
push
mov
out
mov
test
fisubrl
push
sub
in
xor
in
jbe
add
push
xchg
dec
arpl
mov
rcrl
and
add
mov
loop
pushf
cwtl
in
divb
cmp
fsubl
daa
or
push
aad
lea
xor
shrb
icebp
aad
in
adc
out
je
or
subl
in
lock
hlt
and
mov
or
in
stos
and
lds
xchg
inc
shll
inc
outsb
or
sbb
cmp
js
dec
push
jge
cmpsb
and
jno
cltd
cwtl
mov
nop
insl
lock
imul
sti
ret
dec
bound
push
sbb
jg
and
xchg
lahf
fdivrs
xchg
inc
or
cld
cmpsl
jp,pn
mov
sbb
add
movsl
sahf
adc
mov
sub
add
out
out
mov
iret
cli
fldenv
out
xsaveopt
dec
adc
inc
and
mov
notb
aad
xchg
test
inc
lahf
loopne
loopne
and
xor
loopne
sti
inc
lcall
insl
pop
test
dec
outsb
fsub
pop
jnp
mov
les
and
or
inc
or
cwtl
lds
pop
xor
cmpsl
xor
pop
xchg
mov
fsubrl
cld
dec
je
movsl
ljmp
movsl
in
shlb
pop
rclb
add
inc
repnz
or
jp
xchg
lea
sti
es
push
pop
mov
imul
repnz
lock
sub
gs
in
mov
cmp
aaa
leave
jecxz
lock
mov
xchg
xor
mov
sbb
pop
sub
push
pop
lock
mov
cli
mov
jl
xchg
cmp
loopne
or
xor
lock
push
std
fnstsw
lret
or
fcoms
ljmp
movsb
add
pop
push
mov
repnz
jno
add
or
incl
mov
mov
dec
add
sub
shll
outsb
xchg
push
push
loop
push
or
pop
roll
fdivrs
adc
jne
inc
xor
xchg
pop
incb
sbb
jb
test
test
jnp
imul
sbb
jg
sahf
xor
fwait
sub
xchg
sub
mov
fxch
push
add
cmp
cwtl
add
mov
inc
adc
xchg
in
pop
xchg
sub
stos
adc
fs
in
jne
xor
fidivrl
aam
xor
sub
into
or
sahf
out
hlt
testl
sub
add
sub
mov
cmp
subps
sbb
test
adc
ds
lock
les
push
sub
sub
mov
sbb
call
push
jne
mov
into
hlt
popf
popa
shll
pop
xor
jmp
mov
jno
push
push
xor
sbb
test
dec
inc
or
jmp
adc
shll
add
test
sarl
subb
lret
ds
pop
aaa
arpl
in
out
and
movsb
mov
jb
sti
push
mov
push
add
shll
enter
add
push
pop
sar
js
in
adc
sub
adc
xor
enter
aas
fsubrl
inc
fcoms
mov
adc
inc
push
pop
jae
lods
mov
xchg
push
mov
push
adc
xchg
cmp
test
rorb
fprem
sbb
cwtl
test
dec
pop
std
dec
daa
xchg
adc
stos
aaa
arpl
negl
lock
pop
push
shrb
shlb
add
pusha
das
sbb
and
mov
lret
stos
pop
and
fimull
mov
lds
xchg
ljmp
lods
or
call
add
push
xlat
pop
mov
adc
xchg
outsl
addr16
les
mov
in
aaa
and
push
fidivs
sbb
pop
inc
jno
jge
stos
jbe
aam
mov
outsl
test
xor
out
aad
ret
jns
pop
jp
push
cli
adc
dec
aas
mov
or
mov
jae
mov
xchg
out
lock
jle
xor
push
in
and
imul
adc
outsb
add
mov
push
aaa
jp
fnstcw
xor
jmp
jge
test
idivb
fnstsw
mov
jns
vpavgw
push
dec
mov
sub
stos
adc
pop
hlt
aad
sub
xchg
dec
pop
inc
cmp
sbbl
pushaw
mov
cltd
dec
nop
cs
in
int3
mov
inc
jno
push
pop
or
or
mov
mov
add
lcall
adc
cmp
mov
mov
fs
xor
xor
rcrb
jle
mov
mov
repz
jmp
inc
out
mov
xchg
popl
xchg
xchg
xor
pop
pop
adc
mov
out
cmp
jno
jecxz
inc
sub
xchg
xchg
push
dec
or
push
sbb
inc
daa
data16
adc
fs
mov
lock
jnp
inc
ret
mov
or
or
adc
cmp
fcomps
cmp
hlt
shl
fmuls
and
std
jge
les
xchg
xchg
not
hlt
leave
testb
xor
sarb
fs
inc
iret
cs
xchg
testb
imul
fwait
mov
stos
dec
popf
cmp
adc
fdiv
dec
inc
sbb
xchg
push
mov
and
loope
imul
ret
popf
jo
inc
mov
and
sub
js
mov
das
aas
lea
repz
imul
repz
dec
add
pop
out
hlt
adc
jl
sarl
andb
inc
pusha
cltd
pop
or
cmp
sbb
push
lods
fcmovu
and
imul
and
sbb
sbb
daa
jmp
pusha
lret
fnstcw
push
dec
fwait
jns,pn
mov
divb
cmpsb
and
xlat
add
push
ljmp
xchg
sbb
mov
jno
and
gs
mov
scas
scas
mov
cs
loopne
mov
rol
scas
leave
lret
jmp
adc
jbe
insb
push
xorl
add
cli
gs
add
pop
pop
les
sbb
test
dec
lods
cmp
ja
testl
add
int
hlt
pop
std
inc
mov
std
cwtl
cmc
dec
nop
lock
leave
lcall
scas
pop
pop
lret
pop
xchg
push
or
test
push
inc
or
add
test
rorb
ficompl
sti
mov
pop
cmpsl
dec
ret
pop
out
push
fcmovu
pop
xchg
push
rcr
pop
jecxz
popf
mul
jne
in
sarb
scas
inc
sub
scas
test
fwait
cmc
dec
testl
out
scas
sbb
das
fwait
xchg
aad
clc
subb
out
out
les
sbb
ja
nop
jns
push
and
pop
and
cs
inc
sub
push
mov
nop
aaa
jne
fbld
lret
xorl
js
repnz
ljmp
jno
insb
shlb
aad
jne
fstpt
adc
push
jno
pop
insb
cmc
pop
sbb
out
and
push
jae
imul
and
sub
push
cmpsl
sub
aas
mov
cmp
xor
xor
push
mov
mov
adc
mov
cmpsb
xchg
je
movsl
pop
inc
ret
pop
aad
mov
mov
sbb
scas
imul
cltd
lods
xchg
cmp
jo
loope
jb
jp
fcmovbe
fimuls
mov
xor
or
xor
mov
in
lret
adc
xchg
and
rolb
and
mov
imul
sbb
fidivl
test
or
sub
sbb
shrb
mov
jl
jbe
fdivs
mov
test
mov
mov
adc
fimull
xchg
outsl
movsl
adc
push
std
sub
xor
xchg
jbe
mov
outsl
es
loope
fildl
cmpsl
sbb
stos
das
test
fisubrl
cmp
push
in
mov
and
loope
dec
lahf
int3
xchg
pop
sarl
iret
pop
push
jmp
jns
es
adc
pop
mov
nop
enter
loope
inc
clc
push
movsb
lods
mov
push
cmp
mov
in
cld
test
test
lea
jmp
outsl
sbb
and
mov
jne
adc
pop
jp
cmp
aas
push
and
icebp
and
xor
or
jb
lods
aad
lock
dec
add
addr16
in
mov
mov
stos
pop
jo
mov
popa
fnstcw
pop
imul
outsl
sysenter
and
cmpsb
sub
pushf
push
cmpsl
fwait
testb
stos
je
in
cltd
mov
shrl
jb
pop
sbb
in
stc
push
or
pop
add
movsl
insb
inc
jbe
test
aaa
jns
fldcw
in
sub
xchg
inc
sbb
and
enter
sub
sub
xor
pop
add
mov
cmc
mov
sub
sub
imul
pushf
sti
mov
test
push
and
mov
imul
cld
in
jb
popl
or
enter
jge
mov
xchg
add
insb
mov
jbe
push
arpl
pmuludq
rol
fidivs
xchg
loop
jne
xor
jns
cltd
adcl
inc
inc
andb
mov
andb
fisttpl
push
sub
stos
adc
push
movsl
outsl
xchg
xor
roll
inc
dec
inc
lods
inc
push
pop
jbe
cld
cmp
repnz
scas
adc
stos
push
popf
push
sbb
xor
sub
cmp
adcl
fsubr
pop
call
iret
outsb
iret
mov
fxch
xchg
ret
pop
push
dec
dec
add
leave
push
fadds
xchg
lahf
idivl
stc
pop
mov
loop
testl
mov
or
jmp
icebp
sahf
mov
inc
mov
adc
xorb
fstl
lret
mov
mov
ret
ror
data16
addr16
mov
scas
scas
lahf
cmp
mov
test
xor
sahf
add
bound
negb
aas
shrb
jmp
mov
ja
aam
sub
xor
loope
stc
iret
push
cwtl
sbb
test
movsl
inc
jmp
rclb
fbld
mov
mov
fcmovne
testl
lds
xchg
sub
pop
cld
cmpsb
xchg
xchg
inc
js
mov
mov
jbe
inc
insl
inc
andb
mov
or
ja
shrl
jmp
and
lret
ret
cmp
inc
fcoml
inc
pop
mov
pop
cmpsl
test
add
divl
mov
es
cmp
shll
xchg
cmpl
imul
fisttps
xchg
pop
cmp
jp
add
test
ljmp
xlat
pop
aas
aam
pop
bound
outsb
cmp
xchg
cmp
and
into
jno
int3
ljmp
cltd
sbb
cmp
mov
add
lcall
outsl
xchg
and
scas
popf
scas
faddp
arpl
jae
sbb
mov
int
aad
decb
lcall
dec
imull
mov
pusha
inc
js
cld
mov
call
mov
loop
cmp
mov
inc
inc
leave
outsl
lcall
outsb
adc
imul
or
jbe
call
arpl
shr
addb
jne
push
and
fists
inc
cwtl
jecxz
imul
clc
in
outsl
fadd
lcall
adc
cmp
jbe
hlt
shll
add
or
dec
jno
jno
aas
jge
mov
dec
mov
out
inc
ljmp
push
jl
cmp
int3
sarb
insl
mov
sub
jl
lea
adc
repnz
inc
pop
xor
and
adc
mov
lock
sbb
pop
sahf
stos
xchg
andb
fidivs
or
aam
movsb
in
adc
jbe
mov
inc
pop
jae
mov
push
push
dec
icebp
push
in
jg
mov
fimull
lret
repz
loop
test
lret
out
insb
mov
pop
ljmp
imul
arpl
mov
sti
sub
andl
fisubrs
out
in
fisubl
sub
fstpt
sub
jno
inc
mov
aad
lock
and
mov
dec
mov
and
cmp
in
fisubl
hlt
push
test
es
aaa
mov
je
pop
mov
mov
movsb
addr16
and
pop
mov
xchg
cmpsb
fistpl
fcmovnbe
adc
add
mul
push
arpl
push
mov
mov
jecxz
jbe
je
sbb
push
mov
test
lods
push
pop
sub
hlt
push
addb
sub
xor
fwait
dec
pop
mov
sub
mov
sbb
push
inc
roll
inc
fsubr
fsubrs
sub
in
lret
faddl
loopne
mov
mov
loopne
outsb
push
sahf
popa
test
and
gs
cs
out
popa
pop
fwait
mov
cs
insl
xor
pop
aas
stos
mov
push
jg
in
cmp
loopne
and
inc
mov
pop
cmp
mov
cmc
pop
xchg
pushf
push
mov
cmp
fidivrl
bound
push
imull
clc
jae
cmpl
cmp
ret
stc
mov
push
imul
adc
es
aam
imul
fisubs
std
cmpsb
pushf
mov
popa
jno
fcomps
fwait
insl
adc
lret
popf
popl
push
and
pop
xchg
or
loopne
push
in
les
pop
adc
inc
int
inc
pop
dec
xor
out
inc
adc
iret
jae
fistpll
inc
or
mov
sti
xchg
and
pop
cs
jl
std
cmp
mov
or
mov
mov
xchg
sarb
jns
sbb
mov
mov
ljmp
mov
in
sahf
adc
addl
sbb
and
lret
jl
test
or
add
bound
dec
in
sbb
push
setns
push
push
jge
dec
bound
dec
sarb
enter
adc
data16
inc
and
cli
in
mov
es
sti
jge
cs
fisttps
cs
mov
cmp
jg
sbb
in
cmpsl
rcrl
push
lock
data16
mov
inc
sub
and
xchg
lea
and
outsb
push
divb
lret
lods
pop
ret
dec
add
in
xor
aaa
xchg
cmp
mov
jecxz
fdivrs
mov
jle
arpl
popa
xor
jg
div
std
ljmp
lret
popa
push
dec
inc
inc
sarl
adc
inc
adcl
mov
loop
cmp
sub
ret
pushf
lods
out
dec
dec
sub
adc
orb
pop
lds
xchg
adc
sahf
and
mov
xchg
sarb
loop
jbe
negl
xor
mov
scas
lret
cmpsl
cltd
outsl
loopne
sahf
adc
sub
cld
sti
cmp
mov
dec
ror
movsl
testl
add
in
jne
pop
pop
fwait
scas
adc
stc
sub
lods
data16
dec
ret
out
adcl
sbb
pop
sbb
int3
inc
sti
cmp
pushf
adc
xor
stos
dec
movsl
adc
mov
jp
in
iret
pop
rol
mov
jle
pop
jge
cmpl
ds
sbb
and
fwait
push
scas
and
xor
jbe
xlat
test
out
fsubl
cld
mov
add
cmp
mov
jl
dec
fcmovnbe
xor
dec
mov
jno
mov
mov
cmpsb
in
into
jae
sbb
mov
mov
sbb
lcall
std
mov
lret
ljmp
adc
and
movsl
sub
hlt
xor
in
mov
inc
call
and
lea
fidivl
add
dec
jb
popf
pop
insb
xchg
jae
inc
es
push
fstpt
sub
cwtl
add
cmp
xchg
ror
push
cmp
mov
mov
xchg
xor
jecxz
sub
gs
dec
mov
cmc
or
xchg
out
push
fmuls
mov
inc
cmpsb
or
jg
pop
loopne
adc
cmp
lds
mov
cmc
sbbl
jge
cltd
fcompl
add
mov
mov
cmp
push
int
mov
sbb
adc
jns
cmp
mov
cltd
sahf
lcall
hlt
sbb
inc
mov
mov
add
sub
cmp
dec
imul
outsb
push
imul
xchg
sub
cmp
mov
cs
mov
ds
outsl
push
out
and
xchg
loope
dec
push
shll
cmpsb
cmp
sbb
mov
jmp
pusha
movsb
mov
call
mov
fnstenv
xor
cltd
daa
loope
int
stos
stos
clc
xor
ja
stos
mov
popf
cmp
jno
xchg
dec
clc
cmp
mov
add
icebp
mov
sbb
mov
mov
and
mov
cmp
lods
filds
inc
stc
sub
fistpll
call
mov
lcall
push
jae
into
mov
lahf
addl
jnp
pop
cmp
inc
xlat
dec
int3
pop
push
cmp
adc
jne
iret
mov
or
outsl
pop
or
fists
pushf
ss
and
xor
and
xchg
xor
lods
stos
fwait
loopne
scas
adc
push
mov
aaa
cmp
inc
aas
enter
mov
stos
popw
leave
ja
mov
sub
fstpl
mov
xor
add
popf
push
orl
jp
jg
popa
int
inc
cmp
pop
cmpsb
sbb
testb
stos
mov
push
ljmp
sti
cwtl
ret
jne
xor
cmp
mov
out
jle
xchg
mov
aaa
or
and
scas
or
and
in
mov
adc
je
fsubr
mov
scas
outsl
je
repnz
pop
insl
shr
dec
mov
ja
cli
jmp
imul
fs
xchg
fisubrl
push
fstl
notb
lock
mov
mov
cs
ja
mov
imul
adc
push
lock
adc
push
fmull
in
pop
xor
repnz
add
out
rorb
push
idivl
dec
lods
cltd
cltd
sub
add
mov
dec
mov
or
pusha
adc
dec
push
mov
sub
mov
or
mov
in
cmc
sub
rcll
adc
and
pusha
inc
sbb
popf
fsubs
sbbb
xchg
sub
mov
out
xor
imul
jns
xlat
in
sbb
fstps
rep
out
dec
push
ja
orl
dec
lds
lods
push
fst
add
jns
jne
mov
imul
repz
insb
insl
orl
insb
mov
or
mov
mov
repnz
cmovb
jle
lods
rcr
xchg
dec
jae
out
sub
and
mov
dec
outsl
xor
sub
lods
or
jmp
out
mov
cmp
cmp
pushf
cltd
push
setb
in
data16
mov
js
jbe
mov
fdivs
sahf
push
dec
stos
stos
adc
lcall
nop
jo
or
fistps
or
cmp
shll
sbb
lock
je
or
dec
fwait
and
inc
mov
sub
movsl
fwait
mov
or
xchg
mov
test
into
dec
mov
lock
mov
js
orb
inc
in
out
push
add
and
and
inc
fwait
cmp
or
aaa
vmwrite
add
push
nop
ret
les
testb
dec
jp
pop
out
jae
hlt
xor
test
xor
jnp
mov
adc
jl
push
js
xchg
add
ret
test
loop
xchg
cltd
mov
inc
mov
sbb
rolb
ficoms
outsb
pop
push
fsubl
mov
lds
pop
cmpsl
leave
fsincos
sub
fistl
jnp
sub
iret
std
or
fldenv
movsb
out
imulb
ds
push
xchg
jg
and
dec
sbb
xchg
jle
stos
mov
fldt
xor
mov
andb
adc
aaa
pop
popf
sub
inc
stos
imul
lret
dec
inc
dec
pop
bswap
mov
out
lock
rcll
inc
dec
pop
push
in
mov
or
mov
push
movb
into
fisttps
cmpsl
aam
test
mov
gs
add
dec
or
push
dec
popf
dec
xor
mov
inc
push
repnz
add
xor
jns
xchg
cmp
cmp
lods
cmpb
pop
push
ret
cmp
bound
sbb
sub
out
ljmp
xchg
jbe
aam
insb
push
jl
and
dec
add
mov
cmp
outsl
xor
test
std
je
cmp
sti
dec
mov
pop
stc
adc
lret
pop
and
push
std
jle
jmp
ss
add
add
call
cmp
jmp
jg
and
xchg
bound
popf
mov
fsubrp
out
lea
mov
cmpsb
cmp
dec
jns
xor
and
insb
jno
mulb
adc
jg
sahf
lods
jmp
cmp
lret
add
mov
into
mov
and
jmp
testl
sub
push
shll
pop
popa
sbb
sbb
cmp
jp
popa
dec
mov
cltd
sub
add
mov
fsub
bnd
pusha
push
repz
mov
or
jnp
pop
push
bound
mov
clc
testb
fsincos
mov
xor
mov
jae
hlt
fldl
imul
push
mov
cmc
jo
cltd
push
ret
imul
mov
pop
stc
aas
out
sbb
dec
lcall
mov
arpl
mov
jnp
jmp
dec
orb
daa
push
stos
shlb
int3
mov
lds
test
addb
pop
dec
cmp
cmc
in
aas
inc
test
sub
pusha
push
fs
pop
push
adc
dec
test
or
push
jno
rclb
stos
mov
sbb
pop
dec
push
pop
call
mov
dec
fnstcw
popf
jo
shl
je
sub
flds
sub
addr16
push
lock
cli
sub
pop
pop
mov
adc
dec
popa
mov
loop
or
in
mov
rclb
jg
fisttps
jne
push
xor
enter
sbb
iret
jne
adc
adc
popa
pop
hlt
cld
test
jge
jg
xor
or
sbb
dec
arpl
inc
outsl
and
test
enter
cmpsl
out
mov
test
cmp
pop
dec
lds
pop
lea
mov
xchg
adc
jno
repz
add
jmp
pop
pop
out
inc
push
bound
out
lods
jg
adc
jns
out
test
push
cmp
fdivr
push
int3
dec
mov
pop
outsl
mov
pop
xchg
or
xor
lds
pop
sbb
scas
add
mov
dec
dec
loope
dec
pop
cmp
es
mov
jb
sub
jge
fs
ja
out
aaa
movsb
cmp
popf
and
pop
ljmp
push
sbb
bound
xchg
sub
xor
jl
mov
loop
je
int
xchg
pop
lcall
clc
andb
jbe
bnd
test
cli
inc
cmp
mov
cli
cmp
pop
sbb
inc
aas
adc
push
and
rcrl
mov
fsub
pop
push
test
addr16
or
js
adc
pop
dec
and
mov
dec
es
jmp
lods
aaa
std
inc
push
rol
mov
xor
mov
arpl
pop
lea
icebp
stc
mov
leave
lods
and
jnp
gs
xchg
mov
sub
adc
cmp
jno
mov
xlat
sub
test
cmc
mov
inc
inc
cmp
les
scas
pop
pop
push
js
sub
dec
mov
fisttpll
adc
mov
out
shlb
pop
mov
pop
in
je
repz
or
inc
cltd
sub
jmp
jb
and
fists
dec
out
sahf
push
pop
or
pop
mov
sub
ljmp
jbe
seto
fdivl
push
xor
push
pop
cmp
mov
fwait
or
rolb
repz
or
in
adc
outsb
sbb
cmp
repz
and
jecxz
adc
pop
popa
sub
xchg
mov
cmp
inc
mov
pop
xor
xchg
mov
sub
sub
sub
xchg
and
fisttpll
repz
sbb
adc
adc
je
pop
mov
mov
test
lds
mov
clc
xchg
sub
gs
push
push
fmull
fwait
mov
insl
dec
sbb
pop
test
pop
cwtl
in
ret
insl
aad
dec
fldl
test
mov
lods
repnz
bound
adc
sbb
sahf
sub
mov
sub
xor
mov
loopne
inc
push
scas
dec
popf
vphadduwq
jne
popf
xor
and
repz
push
mov
inc
rcrb
xlat
mov
shlb
jecxz
icebp
mov
inc
cwtl
mov
jne
aaa
jne
push
xchg
xchg
fldl
lahf
dec
daa
push
out
das
imul
cltd
inc
ret
aam
movntq
mov
pusha
xchg
mov
xchg
pop
lods
js
jns
push
cmpsb
inc
lret
inc
cld
ror
test
pusha
xor
dec
loop
hlt
inc
add
out
sub
xlat
jbe
in
push
pop
mov
test
dec
dec
push
addr16
test
jmp
mov
js
mov
adc
xor
repnz
mov
xor
stos
sub
push
into
push
icebp
aam
dec
adc
inc
and
xchg
outsb
jge
clc
cmovno
andl
cmp
pop
aas
aaa
lods
aad
push
adc
cmpsb
mov
lea
testl
or
push
addr16
es
imull
xchg
ret
outsl
sub
fisubrl
jns
jmp
cwtl
cli
jb
xor
xor
cmp
xor
outsb
pop
xlat
je
ss
movsl
inc
fs
les
mov
stos
mov
pop
pusha
pop
pop
and
sbb
cmc
insl
rclb
in
or
cmp
xlat
out
pop
iret
pop
xor
pop
filds
adc
ret
arpl
repz
mov
fnstsw
sbb
dec
out
sti
lods
mov
pop
inc
pop
mov
or
mov
sarl
ss
popf
push
sti
repz
movsl
xchg
fucomi
jp
inc
mov
leave
sub
shr
jmp
rcrl
not
push
adc
arpl
test
addr16
adc
mov
push
and
cmpsl
fsts
inc
cmp
aad
mov
jno
int3
test
rcll
fmulp
idivl
mov
or
add
dec
jge
dec
or
push
pop
ret
dec
vmaxps
cmp
add
mov
std
inc
and
ds
pop
jo
gs
mov
loope
jl
sub
out
ja
lods
or
inc
ret
cmp
mov
sub
call
cmp
jnp
data16
push
jns
shrb
jnp
shlb
int
loop
test
cmpsl
mov
dec
jmp
out
mov
test
sub
add
or
test
xor
jmp
pop
bnd
sub
adc
push
lods
pop
rcrb
ja
jb
pushf
subl
in
adc
inc
leave
test
std
repnz
sbb
add
loope
cmp
push
mov
or
jl
push
jle
cwtl
inc
fdivrl
arpl
in
movsb
iret
sub
xor
into
lea
dec
scas
stc
and
shll
and
fdivr
fldl
cmp
aaa
sahf
jb
lds
les
adc
std
xor
xchg
jg
cmp
mov
addl
fistpl
jle
sar
dec
movsb
jne
mov
icebp
data16
fldcw
pop
pop
popa
mov
dec
jb
cmp
int
jecxz
test
pop
jge
inc
mov
loope
out
mov
mov
mov
jl
pop
imul
mov
addr16
cmp
jb
jmp
sub
xor
ret
mov
and
xchg
push
ja
jg
pop
sbb
imul
and
cmpsl
dec
bound
xlat
dec
lcall
addr16
xor
cmpb
xchg
push
stos
andb
lahf
test
inc
call
pop
sbb
or
and
aad
pop
sub
lods
lret
popa
sub
movsl
pop
jno
aam
ret
pusha
fisubrs
in
pushf
mov
cmp
push
lret
lret
and
mov
sbb
test
enter
xor
mov
je
mov
push
ficoml
xchg
xchg
mov
int3
adcl
push
add
sti
je
lcall
mov
ret
jnp
cwtl
aas
inc
adc
insl
add
fdivl
mov
jg
fsubrl
loopne
loopne
and
lds
xor
js
dec
sub
cmp
test
scas
outsl
fcompl
xor
lea
mov
mov
lds
dec
inc
mov
inc
call
rcr
dec
shl
imulb
and
test
enter
test
pop
icebp
pusha
or
enter
daa
ss
gs
or
mov
stos
add
dec
je
and
mov
rolb
insl
fidivl
xor
jmp
aaa
add
xchg
mov
jg
rorb
pop
in
mov
test
sbb
jle
out
aaa
add
and
inc
shll
push
push
mov
sbb
std
dec
adc
ss
gs
das
mov
push
pop
mov
and
or
push
aas
and
pop
push
push
stos
sbb
push
cmp
cs
jno
je
pop
adc
pop
mov
and
jle
add
jno
mov
shl
enter
add
stos
loop
ja
negl
pop
outsb
adc
cld
sti
pop
dec
or
gs
lds
in
jle
loope
pop
xchg
and
mov
das
push
add
cmpsl
stos
adc
cwtl
pop
pop
pop
push
jl
sub
pop
into
js
inc
adc
popa
xlat
movb
orb
fs
enter
shrb
fwait
ss
jno
xor
xchg
adc
jg
movsl
push
jp
std
xlat
inc
aad
or
jecxz
and
call
rclb
add
mov
mov
dec
leave
nop
clc
jnp
movsb
shr
xor
pushf
and
or
and
cmp
outsl
cmp
clc
inc
adc
dec
push
fs
dec
mov
or
mov
mov
jmp
sbb
adc
test
jne
jmp
enter
and
push
adc
in
xor
test
fsts
scas
push
mov
sbb
ret
sbb
ss
jne
push
aaa
push
add
adc
lahf
xor
push
xlat
repz
jb
mov
int3
mov
insb
sbb
shrb
lds
lret
dec
sub
sbbl
mov
pushl
fcompl
test
jns
cmp
pop
fidivs
scas
pop
mov
mov
shlb
mov
hlt
and
xor
inc
adc
in
cwtl
xlat
inc
js
adc
in
mov
shrb
pop
or
jb
test
mov
sti
xlat
mov
aam
arpl
add
inc
jbe
fs
sbb
shlb
je
sbb
cmc
stos
movsl
add
inc
lcall
lcall
sbb
cmp
xchg
xlat
outsb
std
ja
loop
inc
sub
push
ss
hlt
outsb
push
pop
mov
test
and
stc
out
adc
adc
sahf
jb
pushf
push
xchg
mov
test
xchg
add
xor
orl
das
inc
adc
scas
pop
adcl
cmpsb
mov
ret
std
or
test
pop
leave
pop
leave
add
lds
add
sub
mov
xchg
daa
adcb
dec
jb
aad
or
popa
cmpsl
sub
lea
in
test
mov
mulb
repnz
adc
clc
xlat
cs
xor
fcoml
dec
fistps
inc
fidivl
repnz
shrl
pop
lcall
jmp
push
fadds
lods
xchg
insb
test
int3
jle
inc
dec
jnp
ficoms
icebp
jmp
xchg
xlat
dec
push
jl
or
cltd
xchg
aad
pop
int3
sub
loope
icebp
in
stos
je
jmp
or
dec
or
cmp
push
mov
into
in
popa
push
xchg
push
cmp
pop
daa
mov
pop
jp
xchg
push
add
sub
jne
hlt
add
mov
dec
inc
movsb
rorb
fnsetpm(287
push
stos
ret
and
rcll
je
sahf
mov
mov
sub
push
mov
sbb
jle
aas
out
fdivr
adc
ret
fsts
xor
andb
sub
lcall
fisubrl
and
adc
adc
xor
sub
adc
and
xor
pop
xor
rcll
aam
xor
pop
push
enter
nop
jecxz
test
xchg
pop
cld
xchg
in
sarb
mov
mov
inc
aam
fnsave
insl
xchg
out
push
pop
push
iret
insb
or
in
dec
pop
cmp
mov
mov
lahf
push
inc
test
jno
stos
cld
rolb
mov
xor
movsb
int3
cmp
dec
rorb
sbb
pop
arpl
pop
daa
in
xchg
sbb
cmp
sbbl
pop
and
imul
jge
mov
call
fwait
mov
stos
imul
nop
out
and
sub
popa
or
push
stos
inc
ss
jno
jp
push
sub
je
fistpll
int
push
outsb
jns
pop
xchg
pop
inc
movsl
scas
inc
gs
adcl
inc
pushl
jbe
sub
push
dec
inc
subl
push
ret
sub
push
xor
test
sub
xor
ret
or
inc
sub
outsl
lcall
lds
jmp
out
and
mov
add
ud1
cli
jo
push
repnz
pop
mov
in
push
into
mov
lea
in
push
cmpsl
orb
jnp
mov
cmp
mov
jecxz
aam
ljmp
jg
adc
and
leave
mov
dec
mov
call
mov
add
add
jg
jl
xor
fisttpl
loopne
xchg
jb
add
mov
lock
int
xchg
dec
clc
pop
jb
xor
add
clc
sbb
pop
mov
call
mov
and
mov
fwait
dec
arpl
xlat
fisttpl
cmc
jo
imul
mov
cmp
mov
jnp
in
mov
mov
dec
loopne
inc
shrb
inc
lahf
outsb
sbb
aad
xchg
lods
pop
or
lock
or
pop
jae
popa
dec
test
xor
sub
mov
les
mov
add
or
xor
dec
and
icebp
hlt
rorb
lods
js
insl
pop
popa
ds
push
arpl
mov
mov
pop
adc
or
jnp
bound
stos
cmpsb
mov
add
adcb
xor
outsl
jl
push
jnp
jle
jmp
sti
mov
addr16
cmp
adc
push
ja
jne
and
xor
jg
mov
pushf
idivb
add
jmp
mov
push
incb
jmp
gs
sbb
xor
mov
fwait
and
mov
mov
cmp
mov
imul
pop
xchg
sbb
roll
test
fmull
mov
and
sub
leave
ss
lea
dec
in
sbb
mov
iret
stos
mov
not
dec
jno
push
push
testb
shl
sub
fldcw
repnz
aam
jo
sbb
mov
jecxz
popa
mov
jbe
out
sbb
mov
xchg
mov
mov
adc
outsb
jns
sub
gs
dec
xor
xor
int
adc
cs
ss
add
dec
xchg
testb
mov
data16
out
inc
adc
xchg
stos
aam
push
testb
fnsave
push
iret
sub
inc
fwait
push
inc
pop
lret
pushf
je
mov
inc
add
pop
push
xchg
cmpsl
test
stc
cmp
lds
sbb
je
mov
pop
test
cmc
adc
mov
cmp
dec
icebp
lea
dec
push
shll
mov
mov
test
daa
divl
popf
out
testb
jl
ljmp
out
cmc
jns
mov
and
test
lods
scas
in
or
add
mov
addr16
mov
cmp
repz
pushf
adc
gs
and
sub
test
adc
xchg
sub
andb
lret
jmp
or
xchg
push
rorl
adc
or
popf
shll
add
mov
jbe
fldl
gs
push
inc
xchg
xor
jmp
stos
sbb
ja
jmp
ret
aaa
lock
xor
enter
mov
or
dec
jle
jb
xor
inc
mov
lahf
mov
subl
fcomps
lods
push
cmp
push
test
jo
xchg
cld
and
fdivl
pop
jmp
nop
mov
xchg
lods
and
adc
dec
lds
sahf
clc
shll
lcall
add
mov
xchg
mov
lret
mov
sti
add
sti
mov
mov
mov
bnd
cmc
adc
lret
mov
push
fisttps
mov
test
clc
and
or
add
lock
mov
cmp
jmp
jmp
test
inc
pop
mov
int
and
sub
ja
pop
xor
dec
adc
dec
nop
mov
xlat
rorb
adc
mov
ss
or
or
subl
stos
jno
out
int
jg
data16
outsb
pop
hlt
out
xchg
sbb
in
test
mov
insl
loop
inc
dec
fstl
aas
adc
nop
addr16
minps
push
or
mov
adc
out
inc
mov
and
fbld
mov
adc
mov
or
fistpl
leave
arpl
jae
inc
loopne
sahf
loopne
push
fs
cltd
imul
mov
leave
mov
mov
xchg
nop
imul
mov
mov
jbe
or
sub
std
adc
nop
dec
dec
clc
inc
hlt
jp
mov
xor
out
cmp
mov
or
push
mov
int
scas
sbb
push
bound
and
clc
inc
dec
sub
aam
add
mov
pop
ljmp
mov
xchg
dec
mov
adc
adc
push
push
movsb
nop
mov
addl
faddl
and
roll
mov
pop
xchg
cli
les
sub
shl
jnp
shrb
push
inc
jle
ficompl
lret
cs
push
loope
inc
jb
mov
movsl
adc
fldenv
test
popf
cmpsb
out
mov
xchg
orb
stc
dec
jmp
ds
iret
ficoml
dec
lock
or
rcrl
fdivl
aaa
mov
es
cmp
out
mov
les
das
mov
lahf
adc
xchg
sub
lods
ret
sbb
pop
xor
mov
pop
test
fdivr
pushf
idivl
aas
xchg
les
fcmovb
add
jne
cmp
out
test
sarb
and
iret
movsb
in
pop
dec
adc
mov
movb
add
out
js
push
push
mov
jae
jp
xor
mov
pop
jb
pop
aaa
cmp
iret
or
mov
push
out
cmpsl
xor
fldl
test
dec
sbb
mov
pop
mov
add
add
outsl
push
icebp
dec
xchg
sbb
pop
cmp
jb
mov
ljmp
cmp
cmp
xchg
xchg
xchg
rcrb
or
dec
sub
cmp
cmp
sub
cmc
int
sbb
sub
das
inc
xchg
sub
fnstcw
fwait
dec
mov
and
loope
pop
outsb
mov
jle
cmp
bound
sub
gs
movsl
adc
and
inc
rol
addr16
jl
lds
push
pop
aam
xor
in
mov
jle
inc
sub
jnp
push
negl
adc
inc
ret
push
jno
out
fwait
push
jge
jno
push
or
jge
loop
add
pop
pop
psubusb
xor
push
cmp
xchg
test
in
icebp
test
or
sbb
in
jge
mov
jae
jmp
or
out
imul
iret
cltd
bound
ds
dec
mov
bound
push
or
cld
pop
and
lock
mov
shr
inc
mov
mov
jecxz
testl
mov
sbb
dec
lods
mov
push
mov
ret
out
jae
and
pop
push
hlt
enter
jg
lahf
inc
jg
and
loopne
mov
mov
or
xchg
pop
dec
mov
lret
lock
out
fmull
int
push
mov
js
or
jno
jmp
lret
or
sbb
mov
arpl
leave
mov
leave
popf
popf
cs
mov
loopne
xorb
outsl
mov
cmp
sub
dec
icebp
dec
or
popa
xchg
jle
in
mov
lock
test
sbb
dec
es
insl
jmp
xchg
jns
mov
lea
call
popf
fisubrl
adc
out
jno
jbe
mov
add
sbb
test
aad
js
xchg
data16
lock
out
jl
xor
inc
addr16
repnz
pop
push
test
jne
and
inc
and
lock
cwtl
add
aam
popa
or
mov
sbb
sub
push
in
inc
pop
push
lret
jg
xchg
rcrl
push
xor
aam
jmp
dec
inc
fisttpl
xor
arpl
and
cmp
pushf
test
xchg
jmp
jb
xchg
jmp
addr16
xchg
clc
fwait
mov
lock
push
popa
bound
leave
inc
mov
sub
dec
xchg
xorb
ds
jge
pop
cmp
cmc
xor
ljmp
xchg
or
xchg
mov
jle
sub
sahf
inc
les
and
xchg
adc
iret
lret
daa
add
add
adc
dec
pushf
inc
and
push
add
inc
push
mov
sub
adc
test
adc
cmp
pop
xchg
dec
mov
inc
aam
test
scas
in
cmp
mov
fsubrs
add
add
xor
cmp
jge
mov
rcll
sarl
sbb
push
pop
and
loop
and
mov
cmovg
loop
adc
cld
ja
xchg
jae
out
shld
adc
cmpsl
lea
dec
xadd
in
xchg
int
stos
inc
jecxz
inc
mov
xchg
sbb
jnp
xchg
fimuls
push
iret
inc
pop
aam
and
fs
sub
in
daa
lds
repz
das
addr16
xchg
loopne
xlat
pop
mov
popf
shll
xor
inc
xor
xchg
cmp
pop
xchg
sub
outsb
test
movsl
and
loop
push
xor
sar
sti
mov
xlat
and
xchg
sahf
arpl
jb
das
es
lods
mov
xchg
ljmp
sub
hlt
jns
sub
pop
xor
mov
mov
dec
addr16
fsubr
inc
mov
nop
insb
mov
and
cmpsl
xchg
imul
dec
xchg
xchg
jo
sti
cmovb
lret
fldt
aaa
rcrl
xlat
mov
mov
push
xchg
jecxz
adc
and
daa
sub
gs
shlb
jbe
add
daa
xor
jecxz
add
rclb
sub
push
jecxz
push
mov
mov
mov
add
xchg
and
push
cmp
jp
arpl
lret
repz
inc
push
jl
inc
mov
inc
mov
pushf
test
cli
pop
stos
ret
cmp
out
fimuls
shr
cltd
inc
imul
xor
ja
inc
pop
pop
addr16
cmp
jb
insl
stc
jo
xor
jae
inc
add
dec
cltd
clc
push
aam
int3
inc
fdivs
fdivs
aam
jmp
pushf
add
cmpsb
jge
push
cld
test
mov
add
xorb
mov
sub
jb
pop
aad
lcall
addr16
fimuls
pop
inc
jbe
and
mov
loopne
jle
push
std
mov
hlt
pop
add
xchg
popf
push
ss
daa
icebp
sub
sub
mov
movsl
scas
jnp
fcmovbe
popf
pop
adc
pop
lods
mov
xchg
inc
xor
out
fimull
lret
add
cmpl
mov
scas
sbb
xchg
pusha
jno,pn
out
pop
ret
cmp
mov
adc
mov
gs
cld
pop
pusha
xchg
into
adc
notl
sub
into
je
loop
cmpsb
push
cmp
mov
inc
push
ja
push
test
mov
insb
mov
jecxz
lret
push
stos
xor
loopne
outsb
mov
fstps
pop
shlb
adc
jne
dec
lds
inc
mov
lds
bound
mov
mov
sbb
mov
push
sub
add
xor
fisubl
dec
scas
jno
dec
out
dec
aas
mov
test
dec
pop
ds
sub
mov
hlt
subb
ljmp
in
insb
push
dec
rol
imul
xchg
arpl
mov
or
mov
sbb
repz
mov
mov
rcr
dec
sbb
ljmp
mov
mov
mov
sub
adc
aaa
fidivrs
pop
je
test
sbb
pop
hlt
jae
std
xchg
adc
push
lret
mov
int3
add
cltd
cmp
in
xor
sub
mov
das
andl
xor
add
xchg
dec
push
inc
movsb
mov
pop
jo
je
pop
cltd
scas
xchg
sar
loope
mov
fucomi
cli
enter
test
lret
push
cltd
add
inc
dec
hlt
jl
gs
out
sub
loopne
pop
jno
test
lret
add
inc
scas
push
adc
sbb
add
pop
dec
dec
jmp
aaa
push
or
push
in
mov
cmp
mov
lret
adc
sbb
pop
rorl
xchg
in
call
lret
shlb
push
mov
push
xchg
out
or
adc
xchg
cmc
dec
cmp
mov
pop
daa
mov
stos
cld
lret
dec
or
jecxz
cld
psrlq
mov
jg
and
xchg
lock
movsb
jmp
mov
push
bound
jbe
jae
jns
iret
out
dec
and
lret
je
idivb
dec
fimull
out
fwait
and
push
inc
pop
movsl
xor
mov
call
mov
fwait
sbb
negl
push
pop
mov
adc
mov
ret
pop
mov
pop
jle
mov
loop
add
aas
jb
cmpsb
cmpsb
sub
mov
or
dec
into
mov
je
cmp
jbe
mov
add
jecxz
sbb
insb
fst
xor
xchg
pop
fstpt
addr16
cli
sub
or
xor
js
rolb
inc
or
shr
sahf
pop
jbe
inc
and
or
insl
fiadds
dec
xchg
push
cmp
lods
mov
xchg
scas
mov
js
mov
lcall
xor
sub
mov
imul
fisttpl
or
mov
mov
inc
xchg
ss
inc
sub
mov
xchg
pop
fmull
adc
jmp
jl
jae
mov
adc
dec
imul
sub
inc
cmc
sub
pop
mov
push
movsl
push
mov
add
into
or
xor
pop
insb
pop
mov
dec
add
dec
cltd
std
or
or
cwtl
push
sbb
jl
je
daa
in
adc
xchg
les
mov
stos
xlat
cmc
or
cmpsb
mov
or
cmp
xor
out
popf
sbb
mov
jmp
push
mov
push
hlt
enter
mov
mov
sub
test
cld
pop
mov
inc
js
fildl
aaa
les
jmp
jbe
pop
scas
daa
jns
xchg
test
jno
in
out
mov
test
sub
mov
pop
jns
icebp
aaa
test
cltd
pop
inc
test
xor
lods
sbb
in
repnz
mov
pop
add
sub
xchg
mov
rcrb
testb
movsl
adc
mov
imulb
je
dec
in
jns
cmc
insl
pop
loope
xchg
mov
jmp
dec
inc
sub
jnp
xlat
gs
fcoms
pop
xchg
shrb
adc
je
mov
es
sarb
loopne
into
sub
ds
xchg
movsl
bound
arpl
cli
sbb
aaa
stos
pop
cmpsl
daa
xchg
aam
sbb
js
outsb
mov
aas
sbb
rorb
idiv
shll
stos
add
mov
loopne
push
gs
inc
adc
adc
js
xor
or
lret
and
sub
pop
jne
out
and
pop
test
inc
jo
cmp
sbb
sub
hlt
in
push
das
mov
insl
dec
jg
cmpsb
leave
roll
cmp
lods
or
xchg
and
add
daa
mov
mov
movsl
lock
aam
mov
jae
adc
xchg
inc
cmp
test
sbb
and
push
imul
out
inc
xchg
lods
jae
xchg
cwtl
mov
daa
push
adc
sbb
mov
push
dec
and
and
pusha
test
into
sbb
and
xchg
icebp
inc
pop
xor
aas
xchg
stos
and
cmpsb
adc
enter
sahf
outsb
cmpsl
xchg
cs
js
roll
mov
sbb
add
mov
push
jl
cmc
data16
push
mov
or
in
mov
xchg
aam
out
xchg
loop
hlt
cmpsb
popf
mov
sbb
and
xor
outsl
test
push
push
repnz
test
sbb
pushf
xor
cmp
int3
mov
ret
loop
dec
mov
test
xchg
in
icebp
call
sti
xchg
adc
mov
pop
test
sbb
icebp
jb
mov
mov
enter
mov
jp
daa
xorb
push
jle
dec
push
in
cs
stos
xor
push
mov
es
aaa
or
xchg
std
addr16
cltd
scas
bound
std
arpl
sub
out
jmp
mov
aas
test
and
cltd
inc
fbld
int
insb
and
ss
xor
xchg
pop
push
insb
xlat
xor
sub
push
adc
xchg
loopne
lods
mov
mov
mov
cmp
or
lret
enter
push
gs
scas
xchg
mov
cmc
into
insb
lcall
mov
stos
lods
aas
xlat
or
popa
mov
imul
inc
stc
fldl
push
cs
sbb
or
sub
inc
icebp
je
or
mov
xchg
push
testb
out
sbb
call
in
into
push
cmp
mov
add
xchg
ss
scas
std
orb
sbb
mov
mov
mov
jns
inc
pop
sbb
mov
adc
aaa
mov
adc
pop
mov
xchg
jge
and
sub
cmp
in
loop
adc
adc
mov
clc
pop
and
push
mov
neg
fnstsw
fnstenv
inc
sbb
popf
notb
cmp
mov
in
leave
xchg
pop
fldenv
jo
cmc
cmp
xchg
enter
iret
in
popa
testb
imul
xchg
and
mov
xor
sbb
fisttpll
adc
dec
cmp
sub
repnz
push
sub
adc
lcall
ret
jecxz
mov
sbb
divb
adc
adc
dec
cmp
sub
xchg
push
lds
adc
aaa
js
mov
jne
pop
adc
mov
idivl
mov
lea
add
inc
cmp
adc
mov
jae
or
dec
testb
push
mov
sub
pop
push
andps
or
sahf
test
mov
testl
daa
push
inc
rorl
cwtl
aad
cmp
push
fistpll
cmpsb
sbb
ds
or
dec
stos
xor
push
shld
fcoms
add
pusha
mov
mov
cmpsl
pop
cmp
out
ss
push
and
sub
dec
sbb
mov
hlt
dec
stc
pop
fsubrs
xchg
inc
xchg
mov
jns
fistpl
mov
xchg
out
hlt
jne
js
or
xor
sub
adc
jo
cmp
jmp
xor
cmp
sbb
sub
repnz
adcb
or
add
push
push
dec
xchg
in
jmp
popa
xchg
jmp
jno
pop
mov
push
lods
mov
push
mov
in
cmp
xchg
movsl
fldenv
push
push
sub
int3
in
jp
dec
shll
sbb
dec
xchg
das
dec
mov
ret
jge
stc
je
cli
and
jns
xor
rol
in
sbb
cltd
mov
sti
xchg
sub
or
data16
fdivp
mov
and
mov
mov
push
xor
xchg
cmp
xlat
add
ss
cmpsb
test
jge
xor
hlt
std
mov
imul
jle
sahf
lea
fcoms
mov
push
pushf
cmp
bound
or
sub
movsb
push
aaa
jl
repz
add
dec
insb
jb
xor
out
pop
jnp
lret
leave
push
fistpl
lods
pop
sti
popa
mov
push
std
or
xchg
and
push
jb
lock
js
mov
pop
out
lret
jo
mov
icebp
test
adc
push
int
add
or
outsb
cwtl
push
rcl
push
jge
jl
add
mov
loopne
inc
fmulp
push
mov
ret
in
fcmovbe
or
add
or
nop
jmp
fwait
movsl
mov
lds
lea
bound
rcrl
mov
and
add
and
rcrl
nop
sub
fistps
mov
arpl
ss
les
fldenv
test
jle
adcb
sbb
adc
clc
fs
test
nop
cmp
stc
bound
inc
dec
mov
pushf
mov
popa
cmp
adc
out
mov
int3
xlat
jmp
out
test
xchg
jg
aaa
out
into
jg
adc
jb
mov
mov
inc
ret
mov
add
add
push
rorb
mov
imul
mov
pop
in
loop
jnp
push
movlps
mov
sub
fcmovnb
add
addr16
pop
pop
pop
sarb
adc
or
and
lahf
xor
iret
inc
push
add
std
out
in
cmp
mov
cmpsl
insb
addl
mov
adc
sbb
xchg
pop
aad
ret
mov
cmp
and
and
rcll
test
mov
inc
clc
jp
call
and
jae
adc
mov
jae
cmp
pop
push
xchg
or
lret
adc
rcl
cli
out
lock
ds
jnp
xor
mov
mov
popf
pop
or
insb
dec
gs
adc
xor
pusha
cld
inc
fisttps
xchg
jnp
sahf
and
insl
push
aaa
push
push
inc
inc
aaa
jg
pop
jnp
mov
stc
in
rcll
and
jg
push
add
mov
adc
add
cmp
in
loope
add
pushf
aam
roll
mov
push
imul
jecxz
xor
je
test
xchg
push
outsb
push
jno
ds
jecxz
out
hlt
movsb
loop
fwait
mov
or
adc
aaa
outsl
mov
lahf
push
cwtl
xlat
cmp
cmp
xchg
dec
sub
fwait
icebp
out
adc
enter
mov
shr
xchg
push
push
mov
pop
repz
mov
dec
lret
dec
std
shlb
bound
ret
lret
scas
xchg
push
stos
mov
push
lea
stos
push
jge
es
in
test
dec
mov
hlt
pop
movsl
xchg
jno
ss
sarl
daa
lods
jns
sti
mov
xchg
imul
lcall
mov
es
mov
mov
xor
jns
stos
and
xchg
cwtl
lds
lock
xor
sbb
sbb
arpl
hlt
xchg
adc
imul
fwait
iret
and
sub
adc
xchg
icebp
call
jge
divb
iret
pop
add
xchg
jne
idivb
fadds
insb
pop
mov
gs
je
ret
repz
scas
lcall
add
jne
push
stc
inc
dec
pop
cmp
testb
cld
insb
aad
add
xchg
xor
or
sti
sub
insb
mov
movl
imul
imulb
das
inc
inc
and
mov
jnp
ljmp
mov
outsl
mov
adc
ja
stos
lahf
fucom
mov
fs
pop
inc
pop
ret
bound
pop
pop
sbb
dec
and
jle
incb
leave
mov
xchg
adc
add
push
pop
out
adc
rorl
xchg
dec
jl
pop
daa
push
aad
popa
pop
fisubl
mov
fldt
or
cmp
popa
lods
es
push
lcall
and
cmpsl
push
sar
fcmovnb
clc
fs
fbstp
jp
pop
pop
xchg
xor
jecxz
es
loope
subl
rol
adc
mov
aaa
ret
sti
mov
pop
aam
stc
das
cmpb
push
cmpsl
inc
dec
clc
push
in
inc
stc
pushf
jmp
adc
pop
add
pop
bound
js
adc
pusha
sub
stc
cmc
mov
xchg
xchg
rcll
cld
mov
pop
push
pop
jmp
cmp
out
mov
ret
in
mov
jbe
ss
scas
dec
insb
pop
add
mov
push
and
dec
cwtl
mov
cmp
adc
lret
scas
sub
sub
xchg
out
jg
or
sub
push
inc
jmp
repz
cmp
and
mov
sbb
dec
xor
push
into
push
push
mov
rclb
ljmp
pop
addr16
inc
push
nop
push
xor
out
push
add
push
mov
stos
adc
das
bound
cld
adc
imul
imulb
ja
cmp
or
pop
add
ljmp
xchg
xor
lods
xchg
mov
leave
adc
popa
cmp
movsl
mov
jg
jle
fistl
sti
and
push
out
jno
jg
scas
jne
in
or
mov
mov
jle
orb
shlb
test
sub
js
sub
xorb
nop
or
pop
imul
repnz
outsl
pop
outsl
xor
jno
aaa
cmp
inc
mov
ss
dec
sbb
pop
test
mov
inc
mov
inc
sub
lods
sub
cltd
add
shrb
pop
ljmp
clc
jmp
jge
mov
stc
pop
sbb
gs
jb
lods
mov
mov
adc
out
jnp
pop
fwait
push
jae
jg
dec
test
shlb
pushf
push
mov
adc
sbb
das
je
int3
stc
mov
pushf
fstl
adc
cmc
roll
jle
sub
sbb
add
outsl
xor
mov
jne
rcll
sbb
fwait
jmp
mov
jle
inc
mov
stc
outsl
scas
add
test
adc
mov
movsb
fwait
and
jns
pop
xor
mov
shrl
jno
sub
lds
jl
ret
out
popa
loopne
xchg
fs
inc
insl
jb
add
mov
data16
mov
or
fisubs
cltd
jge
mov
push
addl
stos
pop
add
mov
aaa
adc
sti
icebp
or
xor
mov
push
push
jns
push
pop
mov
push
jae
xor
andb
xlat
or
enter
pshufw
ffreep
test
push
xchg
sub
pushf
mov
sub
pop
loope
insb
hlt
cli
pop
mov
lret
or
jo
jge
jo
mov
and
lods
pop
push
push
sbb
xchg
cmp
mov
je
iret
push
out
jns
rorl
movsl
jno
jnp
xchg
sbb
movsl
in
dec
xor
adc
stos
sub
movsb
add
and
inc
and
stos
out
out
pop
cmp
pop
stos
fmul
cltd
push
outsl
mov
cmp
or
jmp
andl
add
mov
stos
jbe
add
pop
rcrb
in
mov
ret
test
js
inc
push
mov
add
lods
cmp
outsl
mov
add
js
fcompl
lds
mov
pop
or
and
dec
pop
cmpsb
mov
js
loope
lret
jecxz
pushf
sub
xchg
shrl
dec
cmp
mov
repz
jnp
arpl
dec
xlat
or
cmp
lcall
cmpsb
sbb
lods
and
push
jecxz
ret
jns
lret
and
mov
mov
ds
inc
or
nop
les
xor
push
push
inc
pop
xor
aam
loop
idivb
lods
inc
pop
inc
xchg
iret
in
ljmp
and
mov
aaa
stos
adc
and
outsl
sub
cmc
mov
jae
sub
cwtl
pop
into
cwtl
adc
imul
sub
or
sbb
stos
add
addr16
addr16
cmpsl
adc
mov
lahf
in
cmc
sbb
fnsave
push
rcrl
push
dec
out
cmc
enter
loopne
daa
addr16
sub
lea
insb
pop
xor
jb
cmpb
aas
cwtl
jp
lret
or
jnp
pusha
dec
hlt
fmull
je
xlat
sbb
or
and
push
push
push
lds
bound
sub
cmp
imul
pop
sbb
inc
fs
enter
iret
xchg
mov
lods
mov
adc
mov
xchg
mov
sub
lea
ret
sbb
les
pop
cli
shl
mov
jle
mov
inc
idivl
pop
subl
insb
stos
and
add
jae
push
and
and
adc
gs
pusha
pop
jae
xchg
mov
pop
cs
cmpsb
jnp
dec
inc
pop
ds
and
mov
pi2fd
jae
in
aad
push
scas
cmpsl
inc
adc
popl
mov
cmp
sbb
cmp
shll
repnz
loop
inc
inc
fincstp
cwtl
mov
lods
ficomps
and
push
mov
mov
pop
and
cmp
cmp
or
mov
add
sbb
adc
stc
pcmpgtb
punpcklwd
out
push
mov
mov
lcall
push
adc
es
gs
push
mov
das
mov
mov
push
add
inc
inc
pop
jo
scas
scas
repnz
sub
mov
jne
les
push
push
out
cltd
arpl
xor
pushf
cmp
fldt
popa
inc
or
sub
imul
in
jmp
in
jne
faddp
pusha
pushf
mov
hlt
adc
dec
xor
add
rcrb
xlat
std
stos
adc
nop
idivb
jnp
icebp
dec
pop
ret
int3
add
pop
ljmp
dec
cmp
adc
fs
mov
push
dec
ror
int3
jae
push
xchg
mov
test
stc
mov
xchg
dec
push
sub
fnstenv
inc
push
rorl
mov
pop
insl
and
push
fsubs
aas
popf
sbb
adc
cmc
dec
xchg
mov
jnp
xchg
test
xor
cmp
add
and
ja
xor
mov
sbb
mov
push
mov
leave
hlt
outsb
data16
jb
inc
es
movsb
cld
xor
leave
cmp
dec
imul
adc
test
test
jge
out
div
cmp
sti
adc
and
sti
dec
jno
inc
fidivl
enter
xchg
je
rol
adc
pop
jbe
jae
mov
stos
xchg
jns
xlat
xor
aam
inc
xchg
cmpsb
loop
clc
xlat
cmp
out
leave
add
iret
mov
in
jne
pop
cs
aad
add
aam
repnz
jmp
mov
push
std
push
mov
fidivs
or
and
inc
sbb
sub
test
dec
push
fsts
ret
inc
cld
jno
int3
jo
inc
fsubrp
stc
adc
popa
cs
sub
je
jns
push
and
push
push
inc
xor
repz
out
mov
pop
test
xchg
mov
push
push
fldenv
out
cld
mulb
mov
fidivrl
repnz
push
ljmp
push
mov
loope
xchg
pop
js
mov
sub
cmpsb
insb
and
lods
in
stos
adc
insl
jecxz
imul
mov
nop
cmpsl
push
cld
push
sub
fldenv
mov
call
in
int3
push
loopne
fidivs
cmpsl
add
jle
fildl
leave
mov
xlat
fwait
mov
adc
aaa
ja
pushf
fwait
mov
pop
sub
and
add
push
mov
xlat
xor
mov
repz
mov
mov
stos
cmp
mov
pop
leave
push
xchg
or
push
adc
cmc
rclb
xor
test
push
cs
int3
sti
mul
pop
mov
js
fidivl
and
movsl
pushf
add
push
orb
jnp
popf
repnz
mov
enter
mov
dec
cs
mov
out
mov
push
push
in
insl
cmpsb
jl
mov
mov
pop
adc
ja
insl
shrb
mov
lret
insl
push
mov
jns
es
mov
push
ret
jle
aas
pusha
xlat
push
sub
or
rclb
hlt
mov
lret
push
fnstsw
test
das
xor
cmp
lock
sbb
sbb
add
inc
mov
bound
adc
movsb
outsb
mov
and
inc
mov
xchg
adc
mov
jo
sbbl
xchg
loope
mov
ficomps
les
mov
or
push
cmc
bound
xchg
int
cwtl
xchg
lds
insb
push
pop
sbb
jnp
hlt
mov
inc
xor
out
pop
sbb
xor
dec
dec
cmpsl
cli
mov
lock
repnz
fidivrl
in
test
icebp
cmp
cmp
mov
or
inc
iret
xchg
test
push
jns
ret
lret
mov
sbb
sbb
fneni(8087
push
sub
fadds
jp
xchg
shll
pop
lahf
repz
mov
or
popf
adc
das
test
repz
pop
mov
test
cmp
add
xchg
xchg
sub
pushf
mov
push
dec
and
addr16
hlt
fcomps
xchg
lea
loopne
outsl
adcl
push
repnz
xchg
jo
pop
js
inc
jno
sub
xchg
mov
sub
jnp
lahf
aam
adc
repz
inc
ljmp
mov
notl
push
fsubrs
mov
call
inc
pop
lahf
xor
mov
lcall
sbb
lahf
mov
mov
lret
rcl
jo
and
dec
bound
cmp
loopne
xorb
dec
cmp
mov
inc
idivb
xchg
cwtl
or
xchg
jg
push
push
sbb
testb
or
ret
data16
and
dec
adc
enter
scas
mov
mov
in
dec
inc
repz
jbe
test
fimuls
movsl
jle
pop
xlat
adc
xchg
lret
aas
sub
mov
push
js
jne
pop
xchg
jne
loopne
in
daa
cwtl
in
pusha
data16
jo
outsl
inc
mov
push
addr16
ss
testb
out
mov
repz
push
push
fcmovb
pop
and
ret
pop
dec
in
pushf
mov
or
negl
push
xor
ss
ror
mov
or
ljmp
jecxz
rclb
sbb
add
cmp
sbb
add
jo
aam
and
mov
pop
or
lahf
jecxz
fcom
mov
rcrb
rclb
dec
cmpsl
adc
lock
imul
add
aad
ret
cltd
rcr
out
or
jp
repnz
fs
xchg
mov
cwtl
cmpsb
fcmovne
inc
arpl
popf
into
mov
out
jg
push
adc
in
call
hlt
push
mov
jmp
xor
test
pop
fsub
xchg
jnp
enter
pop
xchg
mov
mov
sub
mov
adc
jns
ljmp
mov
imul
mov
cmp
cmpsb
js
push
xchg
movsb
out
inc
jg
fists
xorl
test
xor
out
icebp
aas
test
lret
xor
adc
fs
pop
arpl
out
lret
cmp
iret
adc
lods
sbb
adc
pop
push
pop
gs
cmp
push
sbb
mov
xchg
and
dec
xchg
stos
xor
mov
leave
and
xchg
dec
sub
lods
sub
fdivs
sbb
iret
xor
sbb
xor
lahf
aas
or
mov
jne
fmuls
sub
xor
inc
es
scas
shlb
outsl
lea
js
rcrl
clc
jb
ret
mov
cwtl
xchg
add
iret
dec
jg
gs
jbe
push
xchg
pop
push
add
push
mov
mov
pop
mov
and
scas
nop
inc
xchg
scas
imul
movsb
pop
xor
das
xchg
push
mov
dec
insb
je
outsl
fbstp
mov
je
xchg
shl
sarl
cld
xor
notl
mov
fdivrl
fdivr
push
cmp
aad
mov
movsb
mov
decb
mov
ret
in
daa
xlat
mov
ljmp
cltd
ja
and
jo
cltd
pop
dec
cmpsb
jae
cmp
inc
jno
insl
movsl
es
in
dec
dec
mov
push
loopne
les
scas
add
movsl
xor
mov
dec
push
pop
jmp
cli
subl
addr16
cli
dec
push
dec
add
pop
jle
js
mov
or
enter
mov
xor
adc
rcrb
hlt
fs
or
cmc
push
jecxz
mov
push
jp
cmp
xchg
pusha
xchg
ret
inc
call
xor
or
es
adc
clc
xor
mov
in
in
mov
mov
xchg
loop
fstps
mov
push
lcall
loop
mov
xorl
rorb
ja
cs
shlb
mov
data16
mov
sbb
in
jbe
lods
sub
stc
fbstp
sub
cwtl
test
inc
clc
jmp
inc
pop
loopne
cli
dec
adc
cmc
mov
lret
push
jbe
cs
jge
sub
or
sbb
inc
sub
loopne
movsl
sub
testl
sub
sahf
into
stc
mov
mov
adc
ret
popa
rorb
mov
es
out
cli
clc
xchg
dec
sbb
test
sbb
in
pusha
and
fistpll
out
pop
sti
push
js
cwtl
jae
xchg
pop
pop
cli
outsl
mov
das
int
aam
inc
mov
pop
cmpsl
jp
push
dec
add
test
mov
dec
push
cmc
dec
mov
testl
jo
mov
loopne
xchg
jg
ljmp
bound
xchg
aas
ret
sbb
mov
push
in
loop
ret
xchg
lcall
lcall
aad
mov
mov
fidivs
push
rol
sub
sbb
mov
inc
repnz
imul
ret
in
xchg
cmp
mov
fistpll
xor
fwait
outsb
adc
mov
fwait
and
mov
mov
loop
push
lcall
dec
js
pop
cmp
mov
add
shll
lds
pop
insb
insb
fsubrs
sub
out
mov
jne
les
cmc
pop
sti
outsl
jp
insl
mov
pop
or
push
fwait
lods
inc
sub
and
movsb
add
lahf
lods
pop
ja
xchg
mov
iret
xchg
sub
in
inc
mov
sbb
pop
movsl
push
cli
inc
fcmovne
cmpsb
movsb
into
pop
mov
sahf
adc
mov
pop
sbb
stos
xchg
jnp
notb
hlt
enter
roll
inc
inc
hlt
push
pop
pop
roll
test
inc
in
outsl
push
cmp
std
scas
mov
inc
mov
in
adc
mov
leave
outsb
jnp
call
std
and
clc
rclb
jmp
les
leave
imul
pop
call
mov
or
leave
mov
popa
and
data16
leave
sbb
stos
aas
mov
xchg
xchg
inc
inc
imul
je
loope
ficompl
adc
lock
dec
cmp
xchg
push
aam
inc
ljmp
dec
or
xor
daa
imul
mov
jmp
hlt
fxam
rorl
mov
shlb
popa
pop
cmp
inc
push
jecxz
xchg
push
pop
pop
loope
aaa
movsb
jno
jg
mov
pop
repz
mov
ret
inc
pusha
mov
pop
mov
fimuls
or
push
xor
add
xor
arpl
or
test
pop
jle
fsub
pushf
es
xor
push
sub
loop
or
repnz
mov
aaa
mov
hlt
gs
mov
ss
jb
mov
jg
mov
mov
lret
lcall
sbb
adc
cmp
mov
arpl
jge
pop
cwtl
aas
adc
daa
div
aad
in
imul
dec
mov
and
orb
pusha
test
push
fwait
push
lds
stos
fisttps
adc
inc
out
cmp
cmp
cmp
sub
mov
insl
sub
fcoms
xchg
jo
mov
push
or
add
or
stos
sub
lahf
jns
dec
out
repz
mov
push
addr16
and
mov
scas
xchg
add
jl
add
push
push
fwait
lcall
cld
nop
sub
or
inc
in
mov
cwtl
xor
jnp
xchg
popf
xor
cmc
and
repnz
ss
push
shlb
add
in
pop
pop
scas
cmp
sbb
cmpsl
lret
and
sbbb
lds
mov
loope
and
sub
cmp
ficoms
mov
ja
or
repz
mov
aad
xchg
mov
hlt
push
cmp
inc
outsl
mov
inc
cmpsb
mov
push
roll
enter
cmp
pushf
mov
std
inc
push
mov
aam
subb
shrb
add
inc
cs
sub
cmp
jae
jl
inc
push
xor
xor
cld
lods
psubsw
lods
rol
insb
jl
xchg
or
sub
shrl
dec
outsb
scas
jecxz
and
cld
ja
gs
rorb
test
mov
jo
jo
dec
lods
sub
mov
sbb
out
pop
and
xchg
xor
decl
sbb
mov
and
mov
and
rcrl
cs
lods
sub
inc
icebp
inc
cmpsl
fimuls
insb
bound
test
cmc
cmpsl
loop
mov
dec
cmp
mov
into
xchg
xor
pop
mov
adc
addr16
imul
and
cwtl
and
pop
push
inc
mov
xor
push
int
mov
dec
inc
pop
push
dec
mov
mov
xor
jp
jbe
in
mov
push
dec
or
push
imul
or
mov
std
cmp
inc
cmp
pushf
cmc
mov
add
sub
adc
sub
daa
sbb
add
enter
push
pop
int
scas
pusha
mov
add
mov
int3
movsl
stc
loop
or
mov
pop
fstps
pop
test
pop
imul
mov
in
jmp
imul
add
int
sti
out
inc
aad
push
dec
call
test
adc
inc
frstor
push
lret
mov
mov
fsts
lods
out
adc
mov
xchg
mov
cli
lahf
xor
lahf
outsl
dec
or
faddp
jecxz
cmp
mov
mov
jmp
add
push
and
and
xchg
xchg
sub
pop
or
lret
cmpsb
call
jae
and
lods
xchg
sbb
sbb
clc
sub
cld
jae
jbe
push
loop
sbb
outsl
dec
xor
cmp
negb
xor
pusha
xor
stc
add
out
dec
push
sti
fdivrs
out
leave
ja
fldenv
xchg
stc
push
into
fs
and
ret
jae
pop
ja
sti
inc
sub
pop
aas
out
jge
cmp
jmp
es
scas
imul
and
fistl
mov
repz
adc
out
sbb
outsb
pop
inc
jmp
movsb
mov
mov
rcll
mov
int3
into
ret
or
out
out
loopne
pop
pop
lret
jmp
and
out
xor
loopne
or
mov
lea
push
dec
stc
clc
rcrl
and
insb
push
je
adc
imul
xor
push
pop
aam
dec
stc
dec
mov
pop
dec
push
fs
insl
hlt
shl
scas
pop
xchg
push
mov
add
mov
jbe
mov
imul
lock
gs
pop
ljmp
int3
lcall
dec
dec
bnd
test
lds
mov
lods
push
pop
mov
in
std
les
inc
das
int3
gs
daa
mov
sti
in
mov
mov
and
xchg
and
inc
scas
mov
leave
sbb
clc
jne
sbb
loop
push
int
clc
pop
in
scas
sbb
inc
jg
dec
pop
mov
sub
cmpsb
mov
pop
test
mov
dec
rorl
cmc
and
add
imul
xchg
into
push
mov
cmp
mov
imul
add
sub
mov
icebp
pop
add
push
sbb
xchg
test
cmp
pop
repz
iret
adc
cwtl
lret
sbb
int
popf
lods
call
add
test
adc
movsl
rcr
stos
pop
add
repnz
cs
jno
sbb
mov
hlt
push
insl
outsl
sbb
or
int3
inc
faddl
mov
mov
data16
std
and
repnz
cmp
inc
sub
mov
sbb
lds
mov
icebp
mov
xchg
sub
inc
test
pusha
dec
adc
mov
nop
or
dec
js
psubd
sub
cmp
fwait
push
cmp
in
mov
addr16
aaa
mov
jb
xchg
mov
or
aas
jg
sub
cld
lcall
mov
xorl
inc
cmpsl
test
loope
rol
or
or
test
mov
cmc
mov
cmp
xor
mul
vpaddq
xchg
and
ret
cmp
jno
or
mov
add
push
ficompl
mov
ficoml
sub
jge
or
inc
sahf
ret
xchg
and
in
test
cmpl
in
bnd
pop
inc
adc
push
mov
pop
or
and
es
fistpl
jno
mov
sub
jb
fcoml
and
mov
scas
imulb
jl
push
xchg
pusha
cmp
cmp
test
push
cmp
sub
pop
mov
cmp
xchg
mov
cwtl
pop
pop
cmc
daa
fldenv
inc
lret
pop
jmp
mov
mov
pop
adc
stos
dec
xlat
shll
cmpsb
int3
add
xchg
mov
add
mov
fstps
jmp
sbb
incl
imul
fadd
std
add
mov
adc
mov
push
cmp
inc
sbb
jl
daa
mov
inc
or
push
inc
call
mov
sub
xlat
add
mov
pop
push
fcmovne
push
ss
cs
mov
addl
jbe
add
sbb
or
test
xchg
notl
test
or
jbe
pop
sub
pop
stos
sbb
dec
or
and
cmp
in
nop
ljmp
cmpsl
std
lret
pop
dec
loope
inc
roll
in
and
pop
popa
xchg
push
xor
mov
dec
sub
inc
adc
xchg
or
cmc
and
aas
add
jge
jae
arpl
sbb
iret
mov
mov
xchg
fbstp
or
out
jmp
adc
iret
xchg
sbb
fsubrs
mov
cmp
subb
arpl
sbb
jmp
idivl
les
repz
jae
cmpsb
mov
dec
push
mov
loop
pop
mov
pop
je
mov
add
pop
mov
enter
mov
xorl
xchg
outsl
adc
sbb
out
adc
adc
jns
jae
or
push
outsl
and
adc
data16
mov
rorl
sti
inc
jae
push
idivb
ret
dec
xlat
xchg
in
rcr
lret
ja
push
sbb
outsl
xor
mov
arpl
pop
xchg
cmpsb
sbb
mov
insb
pop
inc
cmp
mov
mov
fisubs
mov
fisttpl
pushf
mov
pop
clc
push
mov
fisttpll
je
jae
insb
cmpsl
enter
imul
xlat
sahf
jno
cmpsb
and
sub
or
pop
fdivl
xchg
dec
fnstsw
lahf
lock
ja
mov
sbb
push
cmp
sarl
es
mov
jle
mov
outsl
pop
xlat
loopne
mov
lods
addr16
lret
and
xchg
dec
cmc
je
test
test
add
or
pshufw
std
xor
imul
clc
cmp
insb
dec
sbb
fiaddl
xchg
mov
or
cmp
loop
pop
out
jne
sbb
mov
mov
dec
call
xor
sub
pop
xchg
cmpsb
xchg
in
mov
push
mov
cmp
mull
into
sub
mov
and
stos
sbb
jp
mov
push
cmpsb
inc
inc
mov
jbe
xchg
jns
xor
xor
or
mov
xorl
cs
bound
lods
hlt
push
aas
xchg
jge
xor
lcall
adc
xchg
loope
mov
inc
stos
cmpsl
clc
dec
data16
push
adc
xchg
xchg
js
popa
lcall
fdiv
shlb
ror
inc
add
mov
data16
iret
int
pop
in
adc
shrl
cmp
sbb
jl
jb
inc
cmp
clc
or
cld
out
pop
decl
jmp
ja
or
pop
add
pop
data16
mov
fnsave
cmp
sbb
nop
or
xor
xor
jg
dec
test
cmpsb
cmp
fisubrs
in
and
mov
pop
mov
inc
add
int3
sbb
pushf
add
fs
sub
fs
in
pop
shrl
sbb
test
mov
aad
or
icebp
mov
push
add
mov
push
stos
dec
push
fildll
jp
dec
jmp
jp
mov
idivl
dec
lret
js
loop
ret
lcall
jecxz
icebp
mov
xor
xor
dec
sub
mov
lea
sub
loop
mov
sar
cmpsb
mov
mov
lea
cmc
loop
or
cvtdq2pd
sarb
out
add
mov
subb
sti
test
pop
push
adc
loopne
mov
stos
in
in
pop
adc
push
sahf
jno
loopne
sub
or
jae
or
pop
sbb
sbb
mov
loope
fiaddl
nop
jp
mov
repnz
fwait
mov
push
rorb
sti
imul
sub
mov
repz
or
fwait
xchg
hlt
pop
pushf
popa
xlat
data16
lea
imul
std
mov
pusha
jl
loop
sti
add
fldt
xchg
shl
imul
pushf
cmp
cmp
aas
out
push
cld
pushf
popf
cmp
lods
outsl
xor
jmp
pop
gs
xor
shrb
lret
mov
adc
pusha
das
stos
sub
jmp
and
pop
pop
cmp
repz
psrld
pusha
jae
dec
ljmp
adc
push
adc
pushfw
call
push
xor
cli
dec
sub
lods
push
or
xor
cmp
jo
and
adc
pop
cmpsb
lret
xchg
repnz
loopne
loopne
mov
jecxz
jg
pop
fdivs
in
aam
stos
fwait
int
lret
mov
push
pop
mov
pop
jae
adc
mov
cltd
pop
mov
jg
jg
movsl
inc
mov
fsub
jnp
test
mov
adc
cmpsb
incb
fprem1
lea
jp
hlt
jp
cmp
mov
xchg
pop
jns
jb
mov
ret
mov
dec
lods
mov
enter
lds
lcall
and
cltd
add
test
addl
adc
outsb
and
icebp
or
stos
shlb
lds
mov
mov
mov
pop
test
out
adc
add
push
push
adcl
out
push
repnz
jg
fildl
dec
push
sub
faddl
xchg
or
cli
repnz
xchg
push
mov
dec
mov
sub
inc
cmc
push
fiaddl
scas
pop
xor
and
fwait
add
das
ss
adc
fstp
leave
adc
or
pop
cmp
push
mov
aaa
inc
out
xor
mov
xchg
and
out
sbb
sub
pmaxsw
stos
cltd
in
mov
jo
jnp
cmp
sbb
sbb
mov
js
pop
das
aaa
mov
rolb
or
mov
adc
mov
pop
popf
daa
add
jle
imul
test
movsb
jae
sub
mov
roll
insb
xor
in
fdivl
dec
or
jle
add
sub
sub
sahf
enter
push
inc
push
jbe
fsubrl
scas
insb
out
jo
bound
or
sub
out
je
vmaxsd
aaa
fbstp
imul
mov
add
mov
and
shll
lahf
xor
add
sub
lret
fmuls
les
mov
pop
fldt
adc
js
lock
inc
push
adc
cmp
icebp
lcall
mov
cwtl
inc
ljmp
add
shrl
and
dec
jbe
inc
mov
or
enter
adc
pop
sti
ljmp
and
or
or
pop
int3
pop
add
repnz
imul
rcrb
mov
pop
push
jl
or
push
mov
data16
add
addb
and
lea
pop
jp
adc
test
bound
outsl
scas
sub
rclb
data16
and
cmp
nop
mov
mov
xor
mov
lock
faddl
sbb
fisttpl
rorl
dec
imul
sbb
push
xor
arpl
xor
push
stos
jge
cltd
push
jmp
adc
lods
lea
sub
pop
data16
cmp
pop
pushf
fists
arpl
lahf
xor
xchg
in
sbb
sbb
sub
nop
lods
pusha
jmp
call
lds
insb
inc
lock
mov
or
mov
iret
cmp
iret
dec
leave
mov
cmp
xor
loope
jecxz
inc
mov
jb
cmp
or
xorb
jnp
outsb
and
mov
test
je
mov
xchg
cmp
rcrl
xor
sbb
clc
loop
inc
insl
bound
sub
or
xor
je
push
ds
icebp
mov
fbstp
push
aam
loopne
fldt
out
adc
in
lods
push
jge
jnp
inc
stc
and
orl
inc
sub
add
cmp
repnz
add
add
mov
add
mov
daa
ror
mov
icebp
xchg
ja
xor
dec
repz
test
shl
pop
or
push
adcl
pop
mov
inc
and
push
xor
in
jl
and
push
jmp
xorl
dec
sar
mov
fildl
aas
mov
cmc
push
and
push
pop
test
rcrl
push
or
adc
pop
mov
adc
out
clc
lock
inc
mov
daa
adc
pop
cltd
or
fcomps
into
fwait
out
sbb
mov
incl
or
iret
mov
rcl
mov
aad
cmc
es
cmp
sbb
repz
mov
cmp
iret
test
fcomps
and
dec
div
imul
jmp
fadds
xchg
and
fmuls
popa
add
mov
sahf
pop
cs
dec
cwtl
movsl
into
push
pushf
hlt
icebp
sub
push
cmpsl
pop
or
sahf
adc
inc
dec
flds
movntq
mov
adc
daa
inc
inc
and
jbe
mov
sbb
lods
in
and
cmc
cwtl
fcoml
push
stos
ja
int
adc
jecxz
cmpsl
jae
xor
repz
movsl
pop
insb
ret
imul
addr16
jnp
mov
xor
jle
mov
cmp
in
dec
ja,pt
shll
pushf
das
mov
adc
jmp
outsl
fcomi
xchg
xchg
xchg
push
int3
mov
and
rcll
xchg
mov
ljmpw
mov
add
dec
into
jge
arpl
jb
jae
mov
cmp
ret
jnp
subb
jnp
cmp
repz
lea
and
fiadds
int3
mov
clc
lods
jo
push
jg
das
mov
outsl
packssdw
ds
repz
and
dec
lret
or
pushf
sbb
rorb
cmp
fmuls
inc
cmp
icebp
fstl
jl
shrl
in
jl
or
mov
es
pop
mov
or
cs
xchg
xchg
and
movsl
mov
mov
pop
aam
mov
lock
mov
out
mov
mov
add
cmp
pusha
testb
ds
pusha
and
mov
pop
test
out
aam
pop
xor
mov
and
hlt
xchg
std
cli
sub
stos
mov
add
sub
xorb
inc
cmpsl
sbbb
mov
push
fwait
push
insb
scas
call
jbe
xchg
jmp
fidivrs
es
sub
pop
dec
cltd
mov
fxam
cmpsb
cltd
push
add
scas
cmpl
das
pop
cmpsb
push
adc
xor
lcall
out
ret
add
pop
xchg
rorb
mov
adc
scas
popa
stc
dec
pop
out
aaa
jp
movsl
mov
psrlq
aas
aaa
sahf
sti
inc
push
pop
mov
lds
fmuls
inc
mov
ja
jae
test
cwtl
aas
enter
testl
lock
xor
push
test
xchg
fisubl
shl
xlat
sbb
adc
pop
in
loope
sahf
xchg
lahf
hlt
fadd
insl
arpl
adc
mov
jb
ljmp
mov
sbb
xchg
jg
imul
jmp
pop
fwait
or
pop
push
in
pushf
pusha
jo
fistl
inc
sbb
adc
sahf
lods
jno
sub
test
mov
in
lea
outsl
xchg
icebp
cltd
xor
dec
push
clc
mov
icebp
mov
sub
outsl
lret
mov
outsb
xor
push
mov
call
mov
int3
pushf
repnz
ja
inc
xor
insb
frstor
cltd
sbb
pop
repnz
push
or
andb
mov
xor
push
push
sub
nop
mov
lret
or
adc
sub
popa
mov
dec
xor
je
inc
ror
xchg
add
out
pop
pop
sbb
data16
and
lret
leave
lret
dec
jmp
ds
sub
ja
or
sti
cmp
bound
lcall
xchg
fwait
dec
mov
mov
cmc
inc
imul
mov
dec
mov
lock
add
or
cltd
xor
test
lods
push
aad
lea
outsl
mov
lret
pop
enter
fildl
repz
neg
cmpsb
mov
repz
es
pusha
xor
fnstenv
incb
push
out
nop
sub
out
fildl
pop
push
sbb
fsubl
cmp
insb
pop
push
in
xor
fstl
mov
xchg
cmp
xchg
insb
pop
fstl
dec
rcrl
cltd
les
adc
mov
mov
dec
or
inc
sub
fistpll
inc
incb
add
push
scas
mov
xchg
pop
dec
xor
push
pusha
mov
in
sbb
xchg
xor
add
or
cmp
dec
jns
dec
call
and
fisubrl
rcl
and
add
ret
push
lcall
iret
scas
xchg
scas
imul
addr16
mov
cwtl
iret
add
scas
cmc
sub
push
mov
movsb
js
jl
stos
divb
negb
mov
sub
jp
xchg
std
pop
insb
sbb
mov
pop
loopne
jg
xor
nop
xchg
ret
mov
jecxz
pusha
ret
cmpsl
fstl
fisubs
in
or
sbb
ror
inc
ja
repz
pop
or
or
shrl
xchg
cmp
push
mov
or
mov
sub
adc
mov
cmp
mov
add
push
push
ja
test
adc
sub
test
pop
xor
out
push
push
int3
movsb
mov
scas
fcompl
mov
inc
xchg
jae
mov
mov
sub
ret
out
ret
jg
ja
out
mov
sub
add
inc
mov
cld
rcrb
xor
push
mov
sub
stos
dec
ret
movsl
push
jne
cld
mov
mov
dec
push
scas
lret
data16
push
dec
popa
mov
test
and
cwtl
mov
psubusw
mov
sbb
imul
in
jecxz
xchg
dec
test
lods
mov
dec
or
mov
adc
and
outsl
outsb
adc
hlt
into
scas
fistpl
rcrb
bound
ds
stos
xor
stos
test
xchg
push
mov
into
aaa
cmp
xor
push
lods
and
mov
aad
outsb
add
aaa
xchg
push
and
aad
inc
repnz
lock
xchg
stc
pop
adc
jns
outsb
dec
out
outsb
addr16
and
jecxz
fwait
jns
repz
add
insb
adcb
dec
cmpsb
jg
popa
dec
dec
xor
add
xchg
xchg
mov
icebp
jecxz
test
mov
jecxz
test
jo
jnp
jecxz
inc
outsb
cmp
fadd
loope
fists
xchg
pop
inc
sub
mov
dec
sbb
ja
dec
inc
movsl
sbb
scas
dec
mov
sbb
mov
xchg
dec
repnz
xor
fcoms
pusha
fildl
rcll
rcll
fpatan
or
pop
inc
mov
stos
cmp
cs
mov
mov
xchg
and
push
push
mov
out
xor
das
adc
push
mov
repnz
clc
xchg
or
sub
xchg
enter
mov
pop
fcomps
sbb
pop
fistl
mov
dec
push
aas
xchg
mov
test
adc
xlat
dec
xchg
in
and
inc
push
fwait
dec
xchg
jle
lods
inc
push
mov
xor
imul
stc
jae
jbe
testb
push
sbbb
cmp
xchg
jmp
mov
hlt
adc
jmp
fistpl
add
sbb
mov
mov
cs
cs
sub
clc
add
mov
jbe
fwait
mov
iret
lcall
inc
jl
mov
fistpll
adc
das
adc
and
adc
cli
out
dec
lcall
rcll
test
add
scas
enter
jno
and
sti
arpl
aas
hlt
negb
sub
adc
and
sahf
sbb
mov
mov
pushf
addr16
rorl
lret
xor
jno
loopne
jl
jl
or
pop
jge
rcrb
arpl
push
cmpsb
pushf
sahf
aas
pop
mov
push
das
lret
sub
ljmp
outsl
add
mov
or
add
pop
jnp
and
outsb
movsl
out
push
jns
cld
data16
loopne
push
mov
jg
cmp
xor
push
push
or
xchg
bound
testl
mov
fldenv
and
push
movb
or
inc
jecxz
push
add
sbb
jns
ret
xor
xchg
push
adc
nop
xlat
imul
and
and
test
ljmp
sbb
cmc
aaa
adc
or
es
pushf
ret
push
mov
cli
insl
mov
in
cltd
mov
xchg
jle
loop
ret
jl
daa
xchg
addb
xor
add
test
pusha
cld
mov
pop
push
jle
cld
jecxz
f2xm1
jnp
push
cmp
or
outsl
loope
rcrb
cs
shrl
xchg
xor
inc
dec
mov
stos
ss
outsl
shl
sub
xor
shlb
jo,pt
xor
inc
mov
push
inc
sub
jl
jg
sbb
nop
cmp
mov
dec
sbb
jecxz
mov
cltd
je
popa
lret
mov
mov
push
data16
icebp
jb
jecxz
in
push
fcoms
cmpsl
repz
push
xchg
inc
mov
xlat
std
mov
jl
cwtl
push
scas
daa
insb
into
jo
aas
test
cli
cmpsb
popa
xchg
inc
cmpsl
fimull
sbb
fstps
nop
insb
int
sub
cmpl
xchg
cmc
popf
ret
ss
in
shll
xchg
popf
sub
mov
cmp
popa
mov
aaa
push
shlb
addr16
mov
pop
push
lahf
lods
sbb
jno
pop
cltd
inc
mov
test
std
xchg
in
pushf
popf
out
js
pop
aam
icebp
dec
pop
xchg
jmp
bound
repnz
sub
xor
sbb
pushf
icebp
jge
or
ret
test
xor
aam
dec
pop
xchg
inc
dec
je
jmp
push
mov
pop
lods
gs
cmp
dec
mov
sahf
loopne
jmp
xor
shl
push
add
mov
or
sbb
bts
sub
aad
pop
lret
adc
or
sbbl
fdivrp
ja
inc
sar
or
mov
sahf
jnp
jbe
xor
das
push
add
push
push
les
mov
iret
gs
add
ret
imul
test
jge
jns
fdivrs
sbb
cld
pop
sub
xor
ds
lods
inc
test
notb
pop
fmulp
das
jbe
imul
clc
test
and
inc
es
pusha
sub
movhps
or
or
dec
xchg
lret
mov
mov
and
sarb
adc
mov
stc
mov
insb
jmp
call
push
cmp
push
in
cmpsl
das
cmpsl
jns
cmpsl
push
cmpsl
loopnew
fisttps
mov
bound
test
lcall
repz
rcll
leave
popa
sbb
mov
sub
lea
je
mov
mov
lods
mov
lahf
jae
sub
stos
aad
mov
ja
xchg
mov
dec
xchg
dec
scas
add
or
test
mov
cmc
adc
push
jecxz
dec
mov
mov
pop
dec
in
jnp
xor
lea
push
in
jmp
sahf
push
cmp
in
inc
es
push
push
cmp
les
mov
ja
int
xchg
jb
dec
cmp
mov
jg
cwtl
xor
fildll
lods
mov
ret
in
push
push
gs
sarb
jno
pop
pushf
inc
cltd
out
or
mov
ss
lock
and
push
rcrb
js
clc
mov
gs
adc
add
loop
adc
mov
mov
sbb
dec
sarl
aad
clc
dec
pop
xchg
xor
roll
xchg
inc
dec
sbb
hlt
into
out
push
cli
sub
inc
cmp
cmp
ret
sub
mov
adc
lea
mov
and
mov
les
cmpsl
clc
lret
jb
sub
data16
pop
sub
subl
loopne
in
rcrb
leave
fs
and
adc
movsl
sbb
mov
pop
xchg
inc
sbb
faddl
stc
fstpl
mov
xor
mov
lahf
dec
sub
xchg
adc
fstps
push
push
sti
testb
or
andl
test
es
pop
sbbl
lock
xor
jl
imul
bound
leave
sar
popa
sbb
shlb
stos
enter
mov
pushl
pop
pop
mov
not
mov
test
xchg
aad
pusha
mov
popa
add
out
out
sbb
inc
nop
or
add
in
scas
sarl
fnop
aam
sbb
shrl
mov
in
cmp
sbb
outsl
sbb
mov
shlb
sbb
adc
add
push
pop
shll
shl
call
movsb
imul
std
inc
sbb
imul
sbb
test
xchg
jns
mov
and
js
fcomp
jmp
ja
cmp
xor
push
cmpsb
insb
daa
jb
jle
pop
icebp
movsl
add
hlt
bound
inc
mov
loopne
pop
ret
fs
out
gs
ja
enter
mov
jbe
out
mov
repnz
ljmp
mov
mov
dec
sbb
jb
fnstsw
pusha
mov
lock
push
cmp
mov
pop
mov
xor
jbe
or
movsb
les
xlat
fwait
rclb
clc
enter
xor
and
push
stos
sbb
in
call
aad
jbe
addr16
ret
jb
sub
push
mov
adc
cmpsb
subb
mov
lods
xor
sarb
jge
jo
fisttpl
das
test
enter
fst
shrb
fists
mov
movl
daa
xchg
roll
push
sar
jle
movsb
cwtl
mov
fbstp
ds
test
jp
ror
xor
sbb
fcmovnu
shll
xor
mov
cmp
cmpb
xchg
mov
add
cmpsl
cmpsb
jle
mov
xchg
fdiv
mov
xchg
xor
push
push
test
test
or
mov
sub
dec
icebp
inc
cmp
push
push
hlt
mov
mov
xor
xchg
ss
fcmove
xor
sub
repz
adc
inc
mov
mov
mov
std
push
cmp
add
push
or
sti
rorl
ret
pop
cld
and
push
das
mov
into
push
test
jnp
outsl
and
push
cmp
push
fildl
stos
mov
movd
adc
mov
addr16
jnp
leave
xchg
popf
inc
fnsave
cmc
mov
mov
mov
je
xor
mov
in
xor
adcb
push
fdivrp
mov
lcall
jmp
in
mull
xchg
pop
clc
jnp
rcrl
xlat
in
repnz
and
inc
pop
pop
xchg
in
pop
mov
int3
push
mov
orl
dec
adc
icebp
stc
cld
add
xchg
dec
mov
lods
sbb
and
stc
xor
test
sahf
dec
and
andl
sub
imul
inc
into
cli
and
dec
push
pop
ret
je
sahf
sbb
movsl
sub
dec
mov
xchg
inc
js
test
lock
nop
xor
in
cld
mov
insl
push
pop
pushf
mov
gs
mov
add
fidivrl
and
dec
cmp
jbe
ss
cmp
repnz
int3
loop
mov
xlat
cltd
cmpsl
adc
sbb
shlb
in
sbb
test
test
and
push
insl
mov
inc
and
lcall
mov
pop
xor
lods
loop
jmp
sbb
mov
call
xorl
out
scas
pop
rcll
arpl
xchg
cmp
push
xor
fcmovnb
sub
lret
or
mov
adc
pop
mov
push
cmp
mov
sbb
sarl
in
adc
inc
out
mov
mov
pop
rol
je
test
gs
dec
add
mov
pop
adcl
mov
add
fucomip
jnp
push
int
aas
ret
test
xchg
scas
call
lods
mov
cmc
repz
sub
add
and
jo
test
fistl
sub
xor
cltd
xor
mov
xor
sbb
scas
push
inc
movsl
aam
cwtl
repz
imul
xchg
dec
fdivrs
clc
pop
mov
loop
xor
into
enter
test
mov
insl
push
pop
outsl
stos
clc
sbb
xchg
repnz
fld
movsl
insl
mov
test
xlat
jg
loop
and
jge
pop
mov
jmp
cmpsb
lods
pushw
test
cmp
andb
xchg
bound
mov
cmpsb
ficompl
or
and
pop
notb
sbb
ljmp
pop
jg
in
sbb
dec
xor
push
loop
lock
aam
cmpsl
mov
nop
loop
xchg
push
cmc
push
mov
test
into
std
jecxz
outsb
jp
adc
enter
xchg
xchg
sbb
pop
and
add
mov
fcmove
pop
lcall
push
cld
fbld
sub
add
sbb
cld
mov
pop
ja
cwtl
sti
cmp
push
arpl
ret
or
push
mov
rcll
das
pop
pop
push
rorl
xor
jo
aam
sbb
sbb
sbb
inc
and
or
jne
mov
imul
out
mov
pop
out
mov
iret
les
roll
pop
pop
sub
xor
inc
xchg
call
inc
leave
add
mov
lret
mov
pusha
inc
sub
outsl
loope
stos
mov
in
outsb
cmpsb
and
leave
imul
std
das
jno
mov
mov
add
les
xchg
inc
sbb
sub
sbb
push
popa
popf
insb
in
jp
inc
js
mov
iret
mov
lods
lods
dec
jno
push
dec
mov
mov
or
bound
xchg
gs
adc
fldl
fdivl
vorps
iret
push
es
add
or
lods
fisubrl
nop
or
jmp
mov
add
cmp
ds
sbb
adc
vpsrad
mov
in
pop
mov
inc
dec
out
and
out
mov
push
lods
enter
inc
xor
int
in
fildl
pop
in
scas
xchg
jns
ss
pop
outsl
pop
jp
jne
sub
xor
xor
sub
jns
repz
push
sbb
jae
fidivrs
data16
sarb
in
sbb
adc
jne
dec
add
lods
mov
xor
jae
daa
jne
sti
sub
enter
les
xchg
jbe
xchg
adc
sbb
out
sub
mov
dec
xor
rcr
ret
ret
bound
test
enter
cs
bound
call
dec
or
jbe
lret
dec
dec
jecxz
jbe
fisubrs
cmp
push
je
mov
scas
push
xchg
mov
call
xor
pop
enter
mov
mov
pop
scas
fmulp
dec
pop
popf
adc
pushf
cwtl
mov
sub
mov
lret
adc
out
add
mov
push
add
aas
rolb
mov
pxor
dec
push
jne
testl
in
inc
dec
cltd
inc
daa
aas
inc
data16
inc
ljmp
fidivrs
adc
mov
xchg
aas
lret
xor
xor
sti
fbld
ret
aas
outsb
mov
push
add
cmp
push
ds
out
test
mov
jle
pop
sbb
flds
pop
xchg
popf
aam
fdivrs
inc
subl
jle
mov
out
add
loope
mov
mov
mov
sbb
xchg
shlb
inc
push
push
jnp
cmp
sbb
push
rcrl
inc
lret
push
cmpsb
adc
roll
in
dec
movsl
pop
xchg
test
mov
fs
jae
mov
cs
pop
mov
lret
in
mov
sbb
iret
cli
cmp
push
sbb
out
lock
aas
xchg
xchg
pushf
jge
lods
outsl
push
mov
add
push
or
mov
push
cmpsl
push
pop
xor
pop
lret
mov
adc
jge
dec
jp
adc
pop
xor
add
pushf
xor
aaa
rcll
add
xor
sub
das
loopne
mov
push
shll
imul
sbb
adc
repnz
fistpl
xchg
scas
xchg
pop
jno
jno
inc
sbb
sub
scas
out
mov
dec
sbb
push
stos
adc
arpl
add
and
jnp
pop
enter
mov
stos
popf
mov
cli
loope
inc
xchg
sti
sbb
scas
push
pop
xchg
jns
lods
or
ret
lret
movsl
pop
repz
inc
gs
xchg
jmp
sub
aam
rcll
movsl
mov
pop
mov
rclb
insb
movsl
push
cwtl
cmp
movl
ss
test
rolb
fistpl
lock
add
cmp
mov
fisttpl
mov
sbb
iret
popa
lret
sbb
repnz
mov
cmpsb
pop
sbb
jns
adc
jmp
mov
mov
add
cmpsb
nop
mov
out
imul
jae
xchg
jl
cltd
or
cmp
dec
je
add
or
fwait
mov
incl
cmp
scas
lret
inc
sbbb
pop
pop
push
dec
test
jne
jmp
test
xchg
aaa
das
iret
mov
repz
scas
decl
add
add
rorl
push
fimuls
movsl
lret
cs
es
ja
dec
sbb
cltd
repnz
push
aaa
xchg
pop
jmp
cmp
add
bound
mov
and
scas
cmp
pop
add
sar
gs
loop
push
cmp
xor
pop
and
and
ljmp
arpl
mov
inc
nop
fidivs
cmp
cmp
push
lcall
push
add
jecxz
in
jbe
mov
outsl
scas
mov
xchg
sbb
mov
mov
mov
push
pop
cld
in
cmpsl
xchg
jnp
inc
pop
and
mov
sahf
hlt
mov
ror
negb
ret
xor
out
decl
sub
jnp
ret
shll
lcall
andl
movsl
sbb
xchg
jecxz
call
jl
push
aaa
adc
inc
call
mov
ljmp
mov
daa
hlt
lea
and
mov
aam
xor
xchg
adc
jl
dec
mov
cmp
movsb
lret
and
stos
orl
popf
xchg
in
adc
insl
testl
dec
dec
adc
in
ret
add
call
inc
jl
and
fs
mov
pop
rcrb
fwait
ror
push
cmpsl
ret
jp
pop
lds
mov
in
xor
push
sub
push
mov
std
test
notl
jnp
sbb
cmp
stos
mov
adc
sbb
cmp
insl
cwtl
loop
stos
ljmp
daa
rorl
pop
sbb
mov
dec
lds
xor
negb
inc
fidivl
mov
imul
push
or
inc
dec
and
jle
lods
out
adc
jae
aam
xchg
ss
enter
cli
jb
paddd
push
push
aaa
dec
mov
subb
or
lods
les
lods
cltd
ja
test
or
push
sets
inc
cltd
push
test
sub
lds
push
inc
dec
mov
and
or
ret
push
add
and
mov
adc
out
mov
mov
inc
fisubs
jge
adc
xor
adc
jecxz
xor
stos
repnz
or
pop
insl
or
dec
movsl
jne
ja
dec
popf
xor
add
mov
push
ds
pop
xor
andl
outsl
or
or
xchg
adc
jae
cmp
rclb
insl
xor
cltd
adc
or
in
ljmp
dec
pop
sub
and
mov
movl
sti
enter
add
insl
popl
mov
and
adc
mov
xor
pop
ljmp
jmp
mov
jle
and
in
inc
push
inc
dec
xchg
ljmp
mov
fstpt
fadds
mov
mov
jge
cmp
and
loopne
cmpsl
and
dec
jno
cmp
sbb
je
inc
outsb
nop
mov
lods
mov
adc
dec
sahf
sbb
stc
xchg
fists
add
cmpb
push
inc
xor
cs
xor
dec
xchg
sbb
ret
je
call
pop
xor
inc
xor
jmp
shll
pop
push
mov
lret
jge
xor
std
jge
xor
xchg
sbb
dec
lret
push
rol
in
and
mov
int3
sbb
xchg
xor
cmp
out
loope
imul
and
mov
movsb
xchg
push
xchg
sahf
call
and
add
add
dec
es
inc
pop
mov
pop
je
out
rol
jg
cmpsb
shll
popf
repnz
in
mov
popa
ret
cli
fmul
bound
xchg
pop
ss
movsb
xchg
inc
lock
pop
cmp
dec
xchg
xor
sahf
sbb
leave
mov
jae
sub
mov
loopne
push
ljmp
mov
mov
fcmovne
xlat
mov
loope
adc
enter
xlat
pop
push
jmp
inc
add
js
leave
mov
std
cli
into
xchg
cmpsl
out
cmp
add
rorb
rcll
aas
or
sahf
cmp
sub
test
test
fistpl
popf
sub
addr16
cld
or
pusha
lahf
or
push
lds
xchg
shr
mulb
or
shll
outsl
or
lea
mov
gs
push
or
inc
roll
pop
orl
mov
pop
stc
jecxz
fs
stos
jne
repz
pop
xor
daa
or
push
shlb
jb
mov
sub
xlat
pop
dec
ss
lahf
into
mov
bound
xchg
addb
push
pop
mov
mov
int3
or
mov
cmc
jne
sub
jmp
lret
fbstp
daa
mov
insl
shrb
lods
mov
fcos
add
jl
ret
jge
dec
shlb
sub
add
mov
shlb
int3
addr16
dec
dec
pop
call
push
nop
pop
jbe
cltd
sbb
roll
xor
fadds
xchg
negl
cmp
adc
add
gs
push
pusha
jle
mov
cmp
fnstcw
cmp
pop
sbb
stos
out
dec
cmp
cld
test
mov
lds
xor
lea
or
xchg
add
leave
push
add
lods
mov
xlat
jo
iret
sbb
cmp
xchg
les
aad
lret
cmp
sbb
dec
jbe
xor
lods
jle
std
adc
dec
adc
xor
das
push
outsl
or
fucomp
ret
test
int
or
mov
mov
sbb
mov
lods
insl
mov
cmp
test
push
movsl
aad
push
aaa
xor
ljmp
add
dec
jns
ret
outsb
aas
pop
jle
enter
dec
mov
xlat
test
pop
push
dec
aam
dec
std
sub
das
bound
mov
jge
xchg
icebp
cld
and
pushf
and
das
dec
inc
mov
adc
lret
loop
mov
out
aas
stos
aaa
outsl
pop
faddl
jb
pop
pop
fsubrl
shl
lods
dec
pop
mov
pop
mov
or
sub
outsl
add
lcall
testl
rol
sub
mov
arpl
comiss
inc
xor
out
jne
push
or
test
insl
sbb
cmpsb
mov
arpl
cltd
adcb
js
jmp
in
push
xor
cmpsl
adcb
icebp
leave
aam
iret
in
stos
and
add
add
jno
and
push
sar
std
pop
ficoml
jne
cmpsl
in
lea
negl
cmp
pop
ss
push
outsl
iret
mov
adc
test
xchg
icebp
hlt
mov
aam
dec
leave
sbb
pop
into
xor
cltd
sub
lock
insl
mov
xor
mov
mov
and
ds
sbb
subl
cmp
lahf
jmp
jg
or
lcall
sti
mov
lret
sub
dec
stc
dec
xchg
gs
lods
xor
mov
test
adc
jne
in
arpl
fs
test
lock
xor
xor
insb
adc
and
sti
mov
pusha
adc
lret
push
repz
stos
loope
cmpsb
xor
les
test
mov
jecxz
or
pop
push
adcl
mov
mov
cmp
nop
pop
mov
rorl
mov
jne
lds
fs
mov
or
aad
fiadds
jp
pusha
jbe
jl
sbbl
mov
add
imul
xchg
sub
ds
jge
fwait
push
push
or
mov
add
jl
insb
mov
add
gs
xchg
cmp
cmp
lret
inc
cmp
add
aam
cmp
adc
mov
mov
cmp
sub
fwait
mov
and
push
mov
aas
sub
inc
daa
adc
sti
mov
xchg
cltd
mov
mov
mov
adc
cmp
push
lods
orb
dec
repnz
xlat
push
mov
inc
int
adc
sub
xlat
ret
sbb
popf
arpl
jne
push
lret
cli
test
jg
notb
mov
mov
fsubrl
testb
mov
adc
jno
cld
mov
mov
jmp
push
int3
loopne
scas
popl
mov
push
sub
mov
mov
rcll
insb
and
xchg
jg
jg
mov
and
jno
dec
loopne
pop
and
call
sbb
fdivrs
sub
sub
jbe
ja
adc
scas
outsl
sbb
or
sti
lock
xchg
mov
cmp
outsb
aaa
movsl
inc
pushf
icebp
fiaddl
sbb
jae
daa
fiaddl
xchg
mov
jge
mov
lret
dec
inc
andl
loope
cli
mov
sbb
out
out
ds
aam
mov
das
adc
popa
and
pusha
pop
xlat
push
cmp
mov
mov
jecxz
leave
ljmp
sub
push
inc
inc
mov
adc
or
outsl
xchg
jmp
jno
insl
adcl
push
fcoml
stc
insl
push
shll
xor
mov
ret
adc
stos
mov
jecxz
repnz
inc
fwait
push
clc
mov
mov
mov
or
syscall
push
mov
adc
sti
or
inc
stos
sub
pop
rorb
gs
loope
les
sbb
pop
rcrb
retw
cltd
pop
adc
iret
sub
mov
mov
sub
test
pusha
pop
movsl
push
lds
movb
stos
ja
arpl
inc
imul
pop
adc
mov
jo
std
imul
lods
stos
jecxz
fldt
add
imul
mov
xor
test
mov
xor
and
jno
ss
mov
shlb
gs
fisttpl
and
ljmp
or
xchg
popa
pop
inc
xor
jne
mov
rcrl
or
jno
iret
lahf
aas
jecxz
sar
cmpsb
push
inc
test
dec
shrl
jge
fsubrl
out
int3
cmpsb
xchg
pop
add
test
pop
cltd
insl
lahf
scas
add
fisttps
mov
xor
lods
pop
pop
push
xor
popa
pop
je
pushf
loopne
add
out
cs
dec
mov
pop
test
mov
mov
movsb
add
inc
loope
das
push
xchg
mov
push
inc
scas
into
negb
stos
imull
inc
mov
inc
and
aam
das
push
xor
ja
jo
add
fs
mov
jg
unpcklps
scas
sti
loope
das
jecxz
outsb
pop
pop
jae
add
lock
insl
cld
lret
cltd
imul
arpl
shl
dec
and
inc
mov
fdivp
dec
jecxz
insl
andb
mov
inc
push
mov
lods
insb
test
ss
cmpsb
inc
xor
nop
pop
cs
test
iret
push
push
cltd
fimull
mov
push
xchg
loop
mov
jae
out
add
xor
pop
xchg
ret
xchg
data16
lret
repz
sarl
mov
xor
push
dec
xchg
sbb
push
in
mov
ss
loope
xor
mov
out
pop
sti
aaa
cltd
ss
cmp
sbb
cmp
fistl
stos
and
pushf
sbb
js
lcall
test
push
sbb
stc
stc
sbb
inc
sarb
fwait
movsb
pop
loop
inc
jge
daa
pop
shlb
sub
xchg
dec
aaa
aaa
inc
or
aad
loopne
cmpsb
adc
jp
xor
ror
pop
data16
clc
in
shlb
xchg
idivb
ljmp
mov
add
mov
scas
xor
inc
xchg
orl
ljmp
push
adc
xchg
mov
mov
cmp
lds
ret
inc
dec
push
sbb
mov
mov
mov
jg
int3
or
jnp
in
adc
mov
or
add
cmpsb
addl
and
xor
shlb
cs
sbb
pop
xchg
dec
clc
dec
push
test
rorb
add
orb
enter
mulb
insl
add
and
iret
mov
popf
test
jl
rolb
and
aaa
cmpsl
cli
and
cmp
ret
into
roll
loopne
push
pop
xchg
or
jge
jns
mov
inc
xchg
jne
aam
jnp
add
out
inc
rorl
sbb
jg
mov
jmp
enter
es
push
and
in
xor
mov
sbb
notb
xor
aad
gs
aad
dec
es
daa
in
pushf
and
fildll
pop
dec
iret
repz
pop
or
fcoml
das
mov
fidivrs
movsb
mov
dec
aaa
int
xorb
cmp
mov
sbb
push
adc
or
xchg
bound
adc
test
out
xor
pop
in
hlt
mov
shlb
add
inc
idivl
xor
add
pop
lss
inc
es
add
ja
add
sub
push
js
xor
mov
mov
pusha
inc
sbb
out
sbb
nop
popa
and
xchg
lods
push
or
sbb
lret
push
shll
xchg
pop
or
or
xor
xchg
push
mov
mov
sbb
dec
in
dec
adc
push
pop
sahf
jnp
ljmp
into
mov
sub
mov
js
mov
or
insl
jl
xchg
sti
inc
mov
mov
fs
lret
popf
out
pop
repz
push
adc
adc
test
push
push
push
int3
mov
addr16
lea
and
push
pop
outsl
pop
cmp
test
shrb
sub
push
rcr
dec
test
push
mov
movaps
cmpsb
lods
cmp
sbb
jne
fdivrs
fsubrl
ret
inc
repz
dec
fbstp
lret
fcmovnu
and
inc
xlat
lea
jmp
sub
push
scas
pushf
inc
dec
fwait
aas
out
jne
sti
das
cmp
lods
out
mov
mov
imul
cmpl
pushf
jp
in
sbb
out
push
mov
pop
insb
push
aaa
movsb
adc
dec
loopne
mov
sarl
xchg
sbb
dec
push
or
sbb
xor
shrl
in
stos
pop
pop
popa
test
fsts
test
jno
xchg
das
in
jo
sahf
repz
shrl
cmp
xchg
inc
add
adc
xor
inc
nop
mov
dec
or
daa
push
mov
movsb
pop
sbb
dec
out
aas
inc
int
or
xchg
stos
cmp
dec
dec
dec
sarb
popf
xor
sbb
fs
adc
add
stc
outsb
mov
adc
push
les
add
je
push
dec
cmpsl
inc
xchg
sub
aam
fwait
out
sbb
pushl
popf
sub
leave
add
movsb
into
divl
push
or
fistpl
cmp
cmp
mov
es
test
js
mov
inc
inc
rcl
xor
cmc
pop
rol
or
sub
jl
das
inc
or
fildl
icebp
jnp
je
xor
jle
dec
inc
sbb
outsl
stos
jae
cld
test
dec
lahf
jae
sub
or
mov
scas
or
fdivrl
imul
cmp
enter
jecxz
push
and
movsb
mov
sub
neg
out
popf
mov
lret
pushf
scas
out
mov
jmp
add
or
pop
in
cmp
mov
mov
dec
popf
pop
mov
sbb
aam
fcoml
push
leave
movsl
movsl
mov
out
pushf
insb
sbb
mov
addr16
rcl
aas
aam
dec
push
inc
daa
xor
add
lcall
push
cltd
pop
js
outsl
sub
pop
mov
jae
fimuls
inc
cmp
dec
pop
inc
pop
cmpsl
fs
bound
ljmp
or
or
jl
lods
ret
sub
cwtl
dec
push
mov
dec
lods
lcall
xchg
pop
gs
test
outsl
add
shr
xor
lret
push
push
and
adc
xchg
adc
inc
inc
iret
mov
ret
fisttpll
mov
mov
shl
aam
mov
xchg
and
cmc
xchg
fdivl
aas
pop
addl
inc
cmp
sbb
insb
push
repnz
mov
lcall
xlat
and
negl
mov
ds
jo
mov
femms
cmp
pop
int
pusha
sub
shll
repz
aad
stc
imul
int
mov
int3
push
push
push
movsb
and
adc
insb
jbe
xor
imul
mov
cmp
movsl
daa
call
div
fdivr
mov
mov
leave
push
ret
adc
pop
je
bnd
xor
jle
adc
mov
fsubs
push
inc
aam
xlat
mov
mov
jecxz
push
jne
mov
cmp
add
ljmp
sbb
aaa
pushl
inc
fs
stc
mov
jnp
sub
rep
in
xchg
movsl
loop
into
push
inc
stc
cld
pushf
fstps
xchg
loop
add
push
mov
mov
cmpsb
pop
mov
pop
jo
lcall
mov
add
mov
adc
sub
pop
or
cmp
les
icebp
inc
jmp
lcall
mov
cmp
and
aas
daa
test
mov
mov
xchg
cs
arpl
mov
dec
mov
mov
jecxz
sti
and
or
cvttps2pi
arpl
test
pushf
into
test
lret
mov
inc
ret
dec
jo
bound
mov
outsb
out
outsb
dec
enter
mov
inc
xor
imul
mov
mov
push
int
pop
in
ret
out
mov
xchg
pop
negb
jb
test
int
movsl
or
into
mov
sahf
scas
inc
loopne
out
adc
jmp
lret
push
scas
sub
push
cld
xchg
fcoml
int
ret
aaa
lds
sti
jp
pop
lahf
pop
inc
mov
es
sti
push
push
scas
sbb
jle
pop
xor
adc
out
std
mov
cmc
ja
jg
into
sub
add
je
das
jg
int3
clc
jg
mov
xor
inc
inc
les
xchg
or
cld
add
into
lret
pop
mov
leave
jno
adc
pusha
ds
xor
cmp
incb
imul
mov
pmulhw
lock
js
mov
repnz
jl
sbbb
and
shr
sub
jo
dec
icebp
jne
push
out
push
mov
nop
lret
repz
inc
mov
rcl
fcomi
icebp
jo
jno
out
imul
mov
mov
bound
je
jl
psrad
jge
or
cmp
lods
cld
push
push
push
xor
mov
arpl
icebp
sahf
mov
and
pop
mov
cmp
push
push
xchg
xchg
push
jmp
ret
imul
xchg
pop
lahf
int3
enter
mov
sbb
jmp
sub
mull
xor
int3
sbbb
inc
push
add
pop
rol
mov
sbb
outsl
aaa
cmp
pop
cmpsb
loopne
scas
jmp
gs
sub
arpl
push
ja
and
push
movsl
sti
adc
sub
jbe
jl
mov
pop
gs
testb
cmpsl
sbb
pop
pause
scas
ja
sbb
mov
int3
leave
add
xor
add
iret
xor
fcomps
filds
out
in
sti
mov
arpl
xlat
sbb
mov
jecxz
adc
push
and
xlat
ret
mov
daa
mov
movsl
test
pop
jmp
mull
xchg
xchg
clc
sub
or
adc
test
bound
xor
mov
jae
sti
je
adc
jbe
dec
cli
stos
test
cli
pop
fcoml
and
adc
fisttpl
lea
push
sbb
movsb
aad
dec
jp
mov
jecxz
lock
lcall
jnp
outsl
out
push
loopne
stos
cld
lahf
lds
mov
insl
jecxz
xor
push
mov
cmp
jb
xor
movl
inc
push
es
inc
cmp
sbb
inc
mov
sub
inc
or
mov
loopne
sub
add
push
cmp
jae
mov
fildll
ja
inc
pop
jg
xor
js
arpl
xlat
cmpsl
jp
loopne
xor
pop
pop
ds
and
ficompl
cmp
outsb
or
add
pop
and
gs
mov
jae
sub
jge
ljmp
popf
in
mov
pop
adc
fcomps
hlt
imul
xchg
arpl
out
dec
dec
add
and
aaa
fdivrs
outsb
and
icebp
addr16
or
fstpl
inc
aam
push
insl
popa
cmp
xlat
mov
jg
pop
mov
mov
std
lock
sub
ret
sub
push
out
icebp
call
clc
int3
dec
xchg
inc
clc
leave
in
mov
mov
jo
movsb
fistl
and
popfw
push
push
roll
outsl
push
cmp
lret
cmp
add
adc
iret
push
xchg
xchg
cmp
mov
adc
mov
aad
mov
rcll
dec
ljmp
popf
lahf
ja
std
pop
jl
mov
pop
rcr
pop
adc
shll
jl
or
andb
rolb
sbb
outsb
hlt
adc
and
push
bound
pop
es
hlt
mov
imul
sub
add
push
cmp
ss
loop
mov
and
loope
out
xor
sbb
test
lock
div
sub
sub
psllq
shr
test
iret
icebp
cltd
dec
test
outsb
add
iret
xor
dec
rcrl
stc
dec
xchg
loop
cwtl
rcrl
pusha
push
xor
lret
add
out
ret
mov
popl
nop
in
xchg
cmpsb
inc
jge
jmp
inc
jae
and
dec
jle
jg
dec
jo
mov
pop
adcl
sbb
cli
sbb
xor
movsb
inc
push
cmp
jnp
cmp
lret
out
mov
mov
mov
mov
inc
inc
mov
jp
mov
in
jae
dec
jae
push
js
cmc
std
or
cli
js
mov
lock
lods
push
ja
js
scas
mov
jo
sarl
cltd
out
outsb
and
or
test
and
popa
movsb
daa
xchg
roll
movsl
inc
pop
cltd
inc
insl
rorb
fdivrl
mov
push
cmpsb
push
fwait
xor
sbb
test
inc
cli
imul
in
lret
aam
cwtl
jp
ret
jns
ljmp
and
xor
pop
push
test
cmp
xchg
jge
popa
repnz
dec
xchg
jns
and
sbb
inc
add
pushf
roll
xchg
je
stos
das
pop
cld
inc
ret
dec
outsb
in
rcl
out
inc
dec
sub
mov
out
scas
test
stc
add
sbb
cmp
lret
push
rcr
mov
or
ljmp
or
das
rorl
ja
imul
pop
push
adc
imull
int
mov
mov
mov
pop
mov
insb
out
sbb
lcall
negb
mov
lret
ss
xchg
lcall
aad
pop
in
mov
push
jno
add
dec
sub
push
fistps
lds
xlat
sbb
xchg
cmc
cmp
jg
pop
iret
mov
add
das
mov
cmp
push
int3
ficoml
push
sub
dec
aad
mov
addr16
adc
pop
xor
adc
dec
jp
data16
stc
xchg
xchg
push
xchg
sbb
mov
add
int3
mov
mov
push
cmp
lcall
jle
nop
and
shrb
jne
and
fiaddl
iret
dec
add
insl
fbstp
test
rcrb
stos
ficompl
jns
cwtl
inc
shrb
push
repz
or
pop
and
addr16
push
sbb
icebp
movsb
dec
push
mov
mov
cmp
pop
loope
cmc
inc
dec
xchg
cmp
imul
xor
xlat
jns
rcr
aam
push
and
ficoms
mov
inc
jmp
add
scas
inc
cmp
repnz
mov
icebp
xor
or
lods
in
mov
xchg
mov
movsb
adc
nop
adc
pop
ss
movsl
jecxz
mov
sub
out
or
jmp
add
hlt
xlat
data16
cmp
fcmovnbe
movsb
imull
cltd
mov
pop
push
sti
add
scas
lods
and
push
ret
cmc
divl
lea
xchg
daa
mov
fs
shr
sbb
push
rcr
adcl
and
dec
inc
push
adc
sarb
sub
shlb
mov
mov
pop
aam
stos
sub
or
sub
add
cmp
loop
mov
inc
call
or
or
sub
jno
mov
fisubrs
pop
push
stos
aas
stc
pop
push
fdivr
and
pop
mov
outsb
divb
in
pop
cwtl
push
and
bound
wrmsr
cmp
repnz
sbb
out
loope
adc
mov
mov
loope
push
in
sbb
sub
jge
loope
dec
xchg
repnz
xchg
cmpsb
loopne
test
orb
push
sbb
in
jg
mov
xor
dec
fsubr
push
push
icebp
andl
xchg
mov
dec
mov
adc
mov
test
and
sbb
xchg
or
and
loop
fcom
jle
divl
mov
cs
dec
rorl
jno
cmpsl
sbb
add
fmuls
add
push
jg
or
mov
loope
in
dec
mov
sbb
adc
jns
fneni(8087
add
or
xor
mov
int3
cmp
lret
and
fidivrl
pusha
xor
xorl
ret
in
ljmp
adc
xor
xchg
or
pop
inc
lret
ret
je
addr16
das
rorl
mov
adc
mov
sbbb
xchg
pop
adc
sub
lods
insl
addr16
outsb
push
xchg
jne
xlat
out
in
clc
fcomps
cmpsb
loope
movaps
dec
pop
loop
hlt
sarl
sub
mov
cmp
inc
dec
sbb
out
in
xchg
stos
pop
outsb
inc
fcoml
or
ds
mov
in
call
dec
jle
dec
negl
mov
mov
jg
cwtl
jg
or
ja
test
fs
jb
jno
mov
les
popf
mov
arpl
sbb
sbb
sbb
xor
jo
mov
jnp
test
mov
jge
popa
mov
ljmp
mov
testl
repnz
and
call
fistl
or
sti
xchg
push
xchg
adc
xorb
mov
and
repnz
pop
jbe
dec
sub
sahf
push
add
or
jne
ss
lea
outsl
sbb
cmpsl
fimuls
testb
jle
pushf
repnz
ss
jo
mov
pop
ss
inc
stos
jecxz
int3
or
sarb
xchg
and
and
dec
cmpsl
pop
sbb
xor
adc
aaa
int3
loopne
mov
dec
incl
dec
insb
mov
push
sbb
das
mov
test
fdivrl
leave
pop
sub
mov
mov
jno,pt
shl
fwait
sbb
cli
dec
jbe
nop
add
dec
clc
rorl
mov
es
sahf
or
arpl
jae
jecxz
sub
fldcw
xchg
push
jne
pop
sti
jg
test
aas
xchg
gs
and
aas
xor
ja
mov
sbb
loopne
imul
lods
pop
jnp
xchg
fninit
cmp
jecxz
mov
test
xor
mov
jg
je
gs
jmp
pop
dec
test
aaa
inc
mov
rorb
stos
fimuls
popf
adc
xor
out
fld
adc
sub
enter
lods
adc
push
enter
insl
nopl
cmpl
add
sbb
data16
dec
pop
mov
push
and
popf
pop
js
daa
xchg
fsubrs
aaa
fdivl
push
mov
in
negl
push
int
mov
lea
ret
cmp
repnz
and
in
add
jge
push
add
cmp
or
imul
movsl
gs
and
sbb
ds
mov
mov
in
aam
mov
dec
or
mov
mov
loop
cmp
sub
jp
jp
fmull
bound
fnsave
xchg
ja
mov
pop
fisubrl
daa
fcmovbe
hlt
jbe
shl
shr
hlt
pop
leave
cmpl
lds
loopne
jg
data16
push
jmp
adc
cmp
jmp
orl
push
jl
sbb
sub
or
jb
cli
jb
push
mov
inc
inc
and
loopne
inc
shll
movsb
sub
lea
cmp
mov
add
aas
test
mov
mov
arpl
mov
icebp
add
lods
jmp
xchg
mov
and
lret
mov
pop
cmp
inc
mov
imul
jmp
ret
push
sbb
sbb
jo
pop
je
jno
aad
xchg
testl
xchg
dec
mov
test
ljmp
aaa
les
test
sub
call
pop
mov
inc
cmpsb
and
xchg
add
mov
or
dec
idiv
cs
sti
dec
jns
movsb
mov
cltd
adc
sahf
mov
sbb
stos
mov
jnp
mov
add
sub
testb
mov
je
popf
mov
daa
xchg
ret
adc
cmp
dec
jmp
or
cwtl
add
mov
sbb
or
movsb
fmul
or
push
jne
mov
je
mov
xchg
inc
in
in
scas
dec
xchg
mov
adc
out
sbb
mov
aaa
fisttps
cmp
test
inc
adc
leave
cmpsl
pop
sub
movsl
add
je
mov
mov
jno
lcall
xlat
mov
loop
pop
add
cmpsb
mov
les
stos
fidivs
add
xchg
out
outsb
and
push
and
push
imull
lods
add
pop
ret
jbe
push
lea
mov
jmp
pop
mov
and
inc
mov
or
aam
lods
hlt
in
push
mov
mov
insl
xor
pop
pcmpeqd
pop
jno
stc
cwtl
push
inc
adc
fcomip
push
cmp
es
push
xchg
mov
pop
fdivrs
and
jecxz
add
test
stos
adc
mov
add
ljmp
and
int
leave
mov
cmp
dec
mov
mov
sub
mov
xchg
scas
or
jle
jbe
test
clc
daa
pusha
and
and
shlb
mov
push
cmp
or
stos
mov
stos
js
out
dec
jge
mov
cmp
scas
adc
inc
imul
cmp
or
fsts
inc
shl
xor
mov
icebp
mov
xor
iret
sub
or
mov
and
sub
xchg
movsl
std
idivl
sbb
mov
dec
mov
aam
inc
push
add
push
pop
movsb
insb
jg
and
pop
aas
xchg
jmp
mov
insl
dec
mov
lods
ret
out
lods
stc
xlat
jae
das
sub
outsb
mov
out
std
cs
jg
xlat
scas
outsb
rcrl
int
inc
add
adc
jb
jecxz
loop
loop
es
iret
sbb
jae
movsb
push
xor
dec
das
popa
test
out
mov
mov
push
call
push
inc
xchg
mov
aam
or
sbb
shll
call
shl
mov
adc
mov
push
or
int
lret
js
mov
push
cmp
inc
sub
cmp
or
mov
lds
add
jp
das
mov
mov
sub
in
imul
pop
divb
xor
mov
scas
stc
enter
leave
sbb
sbb
dec
mov
jmp
fs
out
aas
sub
in
cmpb
fidivrl
icebp
sbb
jne
add
jmp
xchg
or
pushf
out
ret
cli
pop
mov
ljmp
fdiv
jns
outsb
loopne
sub
iret
cs
ss
and
adc
or
aaa
sub
pop
movsb
iret
out
sub
mov
test
mov
inc
xchg
test
fsubrs
mov
jnp
das
mov
pop
pop
adc
mov
push
add
mov
xor
inc
and
xchg
mov
cmp
push
stos
loopne
mov
clc
js
pusha
addr16
sub
outsl
sarl
and
inc
arpl
add
and
loop
push
cmp
mov
cmc
push
rorb
stos
mov
push
les
cmc
ljmp
fs
and
je
or
xchg
lahf
lds
pusha
pop
push
mov
ja
push
cltd
xchg
scas
dec
fmull
test
pop
pop
and
in
lret
orb
iret
xchg
mov
adc
mov
adc
push
cmpsb
cmp
xchg
outsl
jg
mov
mov
mov
movsb
div
sub
insl
lea
iret
rol
sbb
outsb
scas
divl
outsl
adc
fwait
mov
pop
mov
cmpsl
pop
cwtl
notb
out
or
in
lods
lea
sbb
dec
jp
jbe
sbb
mov
call
movsl
ss
stos
gs
dec
inc
fwait
andl
adc
fucomi
sti
js
cltd
rcll
popf
call
ret
outsl
mov
adc
xor
iret
popa
lea
dec
imul
add
ja
jns
mov
dec
fdivrl
cmc
je
mov
cmp
push
lods
jge
mov
rcrb
mov
xchg
inc
xor
std
ja
je
mov
shll
repnz
sbb
mov
pusha
into
arpl
cmc
xchg
pop
jp
lods
xor
pusha
push
sub
shrb
cmc
xchg
cmc
stc
xchg
pop
sbb
popa
dec
xor
out
inc
sub
outsb
lea
movsb
rclb
inc
aas
cmp
pop
push
pushf
xchg
icebp
adc
imul
sbb
or
dec
push
ss
outsb
mov
cmpb
roll
lcall
pop
inc
iret
fbld
or
iret
add
sbb
scas
sbbb
lea
xchg
pop
push
gs
cmp
in
add
xchg
je
pop
nop
nop
call
es
les
rorb
sahf
dec
shll
mov
fwait
inc
mov
sti
jecxz
mov
push
shlb
loopne
scas
pop
in
aas
jp
mov
bound
pop
fldcw
orb
cmc
lret
adc
mov
jbe
mov
test
pop
or
mov
arpl
andl
shr
jge
ljmp
lods
stos
inc
enter
arpl
mov
mov
les
xor
or
cmp
xor
imul
cwtl
cld
out
les
fsubrs
hlt
add
rcll
in
out
xchg
inc
sbb
call
lea
dec
sbb
addr16
insb
mov
and
in
fdiv
ss
sahf
mov
test
das
aaa
jp
sbb
push
mov
mov
mov
test
shl
cld
mov
lahf
in
enter
xchg
add
adc
scas
call
popa
int
dec
imul
fsubl
test
lods
lods
mov
pop
in
into
movsb
pop
inc
js
jmp
pusha
inc
add
sbbl
adc
stos
pop
cmp
inc
or
dec
jp
xchg
pop
shrb
mov
xchg
xor
andb
movsb
dec
cli
mov
shr
daa
dec
pop
les
lea
pusha
jecxz
test
std
xchg
add
fldl
cmp
and
inc
adc
popa
xchg
loop
dec
test
or
ret
xchg
inc
in
imul
add
popa
push
js
xchg
mov
jecxz
lret
ret
das
fnstenv
and
jbe
mov
pop
jb
push
jecxz
fs
and
inc
mov
pop
rcll
scas
mov
pop
jo
jo
pusha
dec
cmc
icebp
stos
ret
roll
xchg
pop
push
jnp
fwait
sbb
ret
cs
imul
lock
jmp
mov
cmp
add
lock
xchg
xchg
lahf
jle
cli
pusha
push
inc
loop
out
outsl
mov
outsl
xor
or
fdivrs
jge
aaa
fisttps
addr16
push
test
fnstenv
or
ror
push
enter
jno
adc
xchg
dec
repz
lock
loope
cmpsl
xlat
pop
dec
outsb
rorb
into
pop
mov
push
and
pop
pop
insb
js
sbb
gs
fdivp
in
testl
add
adc
fstps
enter
in
negb
movntq
add
das
push
mov
xchg
and
outsb
dec
dec
xor
jmp
subb
movsb
pop
aaa
mov
jecxz
les
femms
push
or
aam
in
mov
fildll
sbb
add
fidivrs
cmp
cmp
pop
lret
ds
cmpsb
xchg
pop
xchg
sbb
jle
pop
xchg
icebp
hlt
push
pop
jmp
dec
xchg
pop
sbb
xchg
addl
sub
stos
test
adc
jmp
pushf
cmpsb
jp
or
or
sbb
and
xor
dec
pushf
sbb
adc
mov
or
outsb
jl
aaa
cmp
sub
mov
sahf
jne
imul
inc
xor
or
les
addr16
mov
in
push
stc
enter
icebp
dec
aas
mov
mov
movsl
dec
dec
pop
repnz
inc
cmp
cmpsb
dec
sbb
inc
adc
out
push
mov
mov
in
cwtl
pop
mov
adc
mov
pop
lock
fdivs
movsb
fstpl
inc
jl
ja
mov
test
rcrl
xor
jo
sbb
push
add
ds
out
jnp
cmp
push
dec
test
pusha
and
push
cld
cli
das
pop
ret
sti
cwtl
cmp
add
cmpsb
cmp
fnstsw
into
es
push
inc
es
jmp
outsl
add
xchg
push
nop
jns
stos
sub
and
popa
imulb
dec
push
addr16
fbstp
je
mov
pop
aam
cmp
sub
lahf
push
pop
mov
xchg
hlt
std
imul
cli
fcoms
cmp
inc
cwtl
loope
cmc
inc
xor
pop
push
out
or
out
jg
ss
add
cli
stos
lds
jnp
inc
into
outsl
jge
mov
outsl
dec
pop
icebp
cmp
jmp
sbb
sarl
sbb
or
and
iret
and
add
or
xlat
xchg
cmp
xor
sub
ss
fildll
inc
xor
and
test
sbb
jo
xor
xor
pop
push
or
push
shrb
adcl
push
sub
int3
mov
out
scas
inc
or
add
xor
cmpsb
push
jp
jmp
jl
clc
mov
dec
mov
ja
add
push
cmp
mov
addr16
dec
jo
mov
aad
add
xor
and
testl
mov
add
fisttpll
adc
popa
call
cmp
movsb
jbe
jae
sub
add
sbb
mov
ss
mov
bound
js
xchg
jns
fadd
outsl
addl
mov
imul
push
fidivrs
cmc
lock
sub
imul
push
js
ss
and
pop
mov
imul
movsb
arpl
dec
push
cmp
pushf
inc
lret
jmp
cld
xlat
or
lea
pushl
mov
loope
fld
mov
aaa
cmpsb
loope
jno
push
fisubrs
popf
push
les
push
pop
mov
xchg
bound
insb
xchg
jle
dec
push
sub
mov
hlt
out
add
mov
mov
test
cmp
clc
xlat
sub
mov
push
jmp
push
lds
push
mov
cmpsb
cli
scas
mov
push
mov
pushf
cmp
movsb
sbb
loope
or
xchg
div
mov
icebp
mov
mulb
fiaddl
mov
lahf
push
mov
cs
mov
xor
lods
clc
xor
xor
pop
push
cmp
stc
loope
and
mov
push
pop
xchg
das
leave
cmpsb
jns
aas
cld
dec
xchg
lock
std
out
sbb
dec
xor
stos
sbb
inc
mov
in
aad
sub
jne
inc
push
sub
mov
out
sarl
gs
xor
ror
icebp
pushl
test
out
cmpsb
and
inc
test
mov
arpl
jnp
test
cld
inc
mov
bound
ret
ljmp
int3
mov
movsl
leave
lea
inc
lea
fwait
pop
in
dec
adc
test
xchg
sahf
imul
mov
dec
cmp
sbb
test
inc
pop
cwtl
push
dec
repz
les
push
xchg
mov
movsl
ds
inc
push
mov
pop
pop
jmp
loopne
mov
and
out
mov
lods
mov
loopne
pushf
cwtl
imul
ds
xchg
popf
inc
cmp
lahf
fisttpl
ret
pop
jmp
stc
lds
sahf
pop
mov
ja
or
pop
sub
cmp
mov
pushf
push
push
mov
rcll
cmp
xor
jo
cmp
iret
push
jle
ljmp
insl
ret
pop
xor
push
pop
clc
xlat
lods
das
jmp
cmp
pushf
and
leave
xor
push
mull
fwait
rcrl
sub
xlat
cmp
cmpl
fsts
scas
mov
adc
add
clc
or
adc
cli
out
dec
ja
add
mov
sub
gs
pop
test
dec
push
rol
xchg
jmp
les
dec
ror
in
out
mov
inc
lcall
dec
xchg
ss
lods
sub
adc
pushf
in
sbb
gs
popl
mov
and
sbb
sbb
xor
dec
adcb
mov
iret
hlt
call
xchg
test
ret
inc
push
adc
mov
lcall
testb
cmc
xchg
fstl
and
hlt
push
int
or
je
xchg
in
xchg
xchg
jmp
hlt
xor
fisttps
jne
adc
mov
push
sub
pusha
push
popa
daa
hlt
sbb
lock
pop
adc
add
adc
das
out
movsb
xchg
flds
jl
mov
enter
pop
out
popf
movsl
cmp
insl
stos
ret
mov
or
and
ljmp
dec
or
cmp
cmc
sub
lods
inc
cmpsl
push
pop
mulb
and
adc
dec
inc
adc
add
arpl
or
fadds
or
dec
sbb
xor
adcb
mov
xor
pop
ja
xchg
testl
jo
dec
imul
mov
leave
mov
dec
and
dec
stos
mov
sbbl
mov
jno
shrl
fisubs
lahf
repz
sarb
mov
push
lds
jg
sub
xor
mov
std
inc
cmc
clc
or
xor
dec
in
fsts
xchg
mov
mov
dec
int3
push
sub
mov
push
jmp
xchg
ss
ror
test
insl
adc
incl
sub
sbb
stc
add
xlat
xchg
je
jge
fdivs
lods
mov
cli
or
ret
lcall
or
and
icebp
mov
leave
out
and
lret
sub
lods
ret
pop
aam
add
std
into
jae
mov
sbb
imul
lea
insb
cmp
cmpb
xlat
sahf
jbe
jmp
push
cld
sbb
gs
jnp
mov
bound
out
push
cmp
xchg
sti
add
test
xor
les
in
out
mov
inc
sahf
mov
mov
inc
mov
jge
push
arpl
dec
push
add
movsl
lret
pop
xchg
jge
cli
cmp
int
stc
or
fpatan
inc
and
js
jge
xlat
outsb
cmp
mov
arpl
iret
mov
es
cmp
xchg
adc
cmp
mov
sub
std
test
pop
ja
dec
sbb
es
jae
cmp
je
notl
and
cmp
movsb
pop
lahf
cmp
arpl
imul
lds
cmp
and
xor
test
adc
out
mov
incl
test
and
add
sub
arpl
enter
and
sub
mov
out
jl
add
dec
mov
test
aaa
xchg
or
dec
in
push
lods
or
jp
test
popf
or
fdivl
jecxz
sbb
lret
gs
or
pop
sbb
pushf
sbb
cmp
lcall
adc
out
or
insb
leave
jno
sub
add
jns
dec
xchg
adc
int3
adc
arpl
dec
sbb
dec
pushf
int
mov
jb
outsb
mov
ss
mov
xchg
mov
mov
ja
test
jp
sub
aas
xor
loope
xor
mov
enter
lret
or
xchg
xchg
and
jmp
shr
mov
mov
daa
push
jecxz
repnz
rcll
mov
andb
imul
pop
fnsave
and
outsl
or
fstps
fstp
mov
mov
pop
mov
sbb
mov
ja
loopne
xchg
mov
mov
lock
popa
out
repz
scas
mov
jnp
fldcw
cltd
sbb
and
mov
test
outsl
adcb
dec
xchg
roll
sbb
out
out
and
mov
and
cmp
dec
adc
scas
pop
insl
fwait
lahf
ss
xor
inc
insl
imul
arpl
adc
shlb
pop
sub
roll
and
cltd
xchg
lock
lds
inc
cmpsb
or
mov
xor
popf
jbe
jo
jnp
xchg
dec
xchg
push
fisubl
pop
xlat
dec
dec
sbb
das
dec
nop
adcl
mov
inc
shrb
mov
adc
inc
or
pop
xchg
mov
add
pop
inc
cld
push
ljmp
ret
dec
out
cltd
sahf
xchg
push
mov
sub
sbb
mov
cmp
mov
mov
daa
jecxz
xchg
iret
dec
lret
pop
popa
lds
cs
cwtl
xor
mov
mov
jo
dec
lock
push
mov
sbb
jae
pop
mov
loopne
out
aad
loop
sub
sub
pop
jno
ficoml
dec
jl
outsl
adc
dec
mov
pop
aam
nop
mov
cmp
push
jmp
rol
test
xlat
xchg
jnp
mov
mov
pop
pop
cmp
dec
idiv
cs
imul
mov
mov
shrl
pop
or
sub
and
cmp
sbb
in
ja
loop
cmpsl
popa
and
cmpsb
inc
add
shlb
ret
push
data16
sbb
addb
outsl
stos
inc
pop
push
jge
inc
and
jne
mov
lock
cmc
out
pop
mov
dec
sub
add
aaa
pop
movsb
pop
inc
daa
insb
mov
inc
push
sbb
hlt
or
mov
mov
movsl
in
jle
cmp
fnstenv
in
mov
test
mov
add
daa
outsb
or
xor
scas
rcrb
mov
mov
mov
mov
push
jnp
jno
push
mov
push
mov
add
lods
outsb
jne
aam
cmp
inc
add
stos
fistpl
lods
xchg
jbe
andl
dec
jp
jge
mov
cmp
mov
dec
dec
cld
adc
xchg
shlb
jns
daa
rorb
lret
ss
sbb
lahf
add
push
mov
clc
push
jnp
or
push
adc
je
cltd
jo
mov
lea
loop
fwait
push
adc
fcmovne
into
lds
arpl
cmpsl
sbb
xchg
mov
lret
int3
pop
mov
xor
das
mov
out
xlat
enter
mov
sub
or
dec
ja
or
pushf
jns
xchg
das
jb
loop
jl
xor
stos
sub
pop
cld
sub
sbb
subl
scas
lds
or
cmp
lods
sub
pop
or
push
shll
mov
jne
fs
cmp
stos
cmp
pop
dec
cwtl
cmp
push
insl
sub
clc
test
mov
test
sbb
fwait
push
daa
dec
and
idivl
lods
pop
cmp
or
mov
pop
sbb
out
cmp
pop
lcall
fstpl
inc
test
je
out
sub
xchg
cwtl
cs
mov
cmp
cs
ds
sbb
dec
xor
pop
test
sbb
subl
cmp
or
inc
scas
pushf
mov
inc
sarb
push
mov
and
in
jnp
pop
shrb
and
fs
dec
call
push
loop
inc
push
xor
push
mov
xor
imul
push
pmullw
cmp
add
adc
bound
fwait
sub
or
xor
sub
or
je
call
js
movaps
lret
xchg
decl
mov
bound
and
jmp
nop
xchg
jecxz
sub
out
push
xor
mov
lret
fcompl
dec
data16
xor
mov
or
pop
adc
push
sbb
sub
xchg
dec
mov
add
fstps
cmp
fwait
fwait
push
mov
aaa
lcall
inc
imul
sub
and
add
push
ja
push
lods
dec
jae
cmp
mov
pop
test
cmp
jns
dec
hlt
repz
inc
sub
add
jae
mov
int
orb
fldt
fisttpl
movsb
jo
pushf
scas
fwait
icebp
mov
mov
cli
jmp
cmpsl
mov
sub
inc
dec
or
mov
sbb
xor
sub
add
data16
mov
lea
add
ret
mov
imul
push
repz
add
fstl
jp
push
add
stc
sti
and
mov
daa
jmp
sub
fcom
flds
jnp
cwtl
cli
cmpl
stc
and
repnz
jg
lret
es
ja
mov
je
cmp
pop
das
mov
jno
xchg
sbb
jbe
sub
lea
rolb
test
out
sub
lcall
sub
test
clc
xor
dec
fdivs
incl
xor
and
mov
fisubl
movsl
mov
cmp
adc
push
fsubs
popa
jl
jo
ja,pn
dec
shlb
mov
add
adc
jbe
out
mov
mov
imul
andb
xor
loop
dec
jecxz
push
clc
push
inc
shll
and
mov
push
jbe
lret
cmpsl
push
inc
sub
repnz
mov
sbb
sarl
mov
jbe
or
mov
sbb
xor
iret
clc
jmp
or
jmp
adc
cltd
and
dec
pop
es
mov
cs
pop
or
es
fists
pop
negb
or
push
add
lahf
icebp
hlt
shll
lret
xchg
std
push
cltd
bound
scas
popf
je
push
or
les
shll
jl
gs
popa
pushf
dec
test
cmc
lods
ja
rolb
shlb
arpl
movsl
mov
xor
add
adc
testl
add
dec
addr16
iret
movsb
ja
scas
movsl
insl
lock
scas
pop
loopne
sub
add
jl
cmp
xchg
fcoms
int3
sub
sub
stc
push
gs
out
mov
pop
mov
data16
andl
adc
imul
sahf
sti
aad
xchg
dec
sub
cmpsb
call
cmp
lds
dec
mov
fcoms
dec
dec
not
inc
data16
pop
adc
jns
insl
lods
jge
pusha
fcomp
cmpsl
ss
enter
fldenv
icebp
mov
idivb
inc
gs
mov
dec
pop
jo
jbe
add
or
jb
daa
mov
sti
mov
popa
dec
fstps
cli
add
rcr
jge
movsl
adc
dec
in
test
cmp
dec
cmpsb
stc
jbe
mov
xlat
push
mov
cmc
ljmp
lods
and
imul
in
mov
into
and
lock
xchg
mov
mov
orl
fs
pause
sbb
adc
dec
jp
lods
mov
cmp
testl
push
or
or
sbb
push
movsb
imul
push
je
jb
fldt
pop
jno
mov
cmp
pop
mov
ror
xor
les
xchg
gs
jg
lcall
cwtl
mov
mov
cmp
sahf
popf
or
mov
push
mov
cwtl
sub
adc
mov
and
mov
add
jle
outsb
add
push
add
or
pop
mov
sbb
gs
enter
ret
das
andb
ja
inc
scas
cmp
push
test
insb
jmp
mov
stos
pop
or
xor
fsubr
adc
mov
push
xor
loope
mov
nop
in
imul
ret
cwtl
ds
mov
popa
jecxz
xor
add
inc
sbb
in
addr16
mov
fs
xor
inc
enter
lods
xor
mov
lock
xchg
cs
or
xor
mov
jmp
ja
jp
in
notl
jnp
loope
jo
dec
add
lods
jmp
push
xor
dec
in
movsl
ds
sub
ret
cmp
int3
shll
mov
push
and
dec
jo
fidivrs
inc
push
mov
and
mov
inc
add
icebp
ja
stos
push
lods
aam
push
jns
in
aaa
cmpsl
roll
loop
push
clc
test
out
sbb
adc
ret
insb
jg
lods
lock
xlat
add
mov
dec
or
mov
jno
xchg
push
sbb
xor
aas
leave
in
ret
fildll
sahf
xor
inc
int
scas
mov
icebp
in
lea
and
test
inc
or
lods
cmpsb
in
push
sub
int
or
jbe
mov
test
mov
call
mov
and
pop
out
mov
pusha
test
sbb
pusha
in
stos
xor
xor
jo
lahf
stos
and
cmp
mov
aaa
pusha
rorl
or
sbb
cmp
test
and
stc
scas
cs
jl
xchg
inc
lds
add
jmp
mov
adc
push
fcomp
out
sbb
push
sbb
inc
dec
shl
adc
sar
ret
dec
in
repz
fcomps
lret
sti
xchg
dec
dec
enter
mov
movl
leave
setns
aam
sahf
mov
lock
cwtl
cmp
lret
cmc
pop
and
xchg
mov
mov
or
test
sahf
nop
adc
or
sbb
je
or
sbb
mov
cmpsl
stos
mov
or
addr16
lahf
cli
inc
scas
jecxz
imul
mov
mov
pusha
test
jno
cmp
inc
jnp
je
jnp
push
add
fwait
or
das
xchg
insl
jecxz
repz
lret
mov
xchg
pop
lock
xor
sbb
xor
je
mov
add
jns
stc
lock
jae
mov
sbb
jno
xor
in
sbb
fcoms
imul
push
imul
pop
mov
pop
mov
push
fisttps
adc
cmc
inc
fdivrs
pop
pushf
mov
test
mov
in
cmp
mov
pop
aad
pop
mov
cmp
sti
mov
pusha
xchg
add
aad
les
sbb
ret
stc
mov
xor
mov
imull
lahf
or
dec
xchg
aad
ret
mov
aad
push
push
imul
add
mov
rclb
test
popf
and
scas
mov
cli
sbb
inc
push
adc
jle
or
sub
pop
ret
push
dec
scas
cmp
cltd
pop
lcall
mov
cltd
lret
in
jo
xor
femms
xor
add
ljmp
les
out
adcl
push
outsb
and
adc
add
test
mov
mov
or
test
inc
orl
inc
adc
sbb
pop
lock
xlat
sahf
sub
xchg
cmpsb
loop
sbb
imul
aam
and
orb
lods
scas
fisttps
mov
cmpsb
inc
push
jo
divb
pushw
mov
insb
repnz
mov
lea
push
mov
xor
xor
movl
mov
aad
movsb
cld
rolb
mov
mov
sbb
pushf
pop
inc
push
xchg
jle
ret
sbb
and
insl
mov
jp
cmpl
dec
mov
mov
pop
in
inc
call
dec
xor
repnz
movsb
mov
addr16
pop
jecxz
pop
push
jnp
incb
inc
lahf
sub
lahf
lock
in
mov
mov
and
or
je
andb
fnstsw
outsb
and
cmp
jge
adc
das
mov
add
cmc
mov
dec
pushf
cmc
stc
pop
fsubl
mov
mov
cltd
push
out
negb
mov
jo
mov
jp
inc
mov
cmp
adcl
mov
mov
insl
arpl
loope
xchg
out
daa
adc
sbb
addr16
mov
xchg
xchg
mov
enter
and
dec
mov
mov
cmpsb
jecxz
push
shl
fisttpll
dec
lcall
pop
and
xor
lods
mov
jb
test
sbb
hlt
mov
and
mov
shrl
dec
dec
push
inc
xchg
movsb
jne
pop
xchg
call
dec
jmp
xchg
push
aas
inc
rol
sbb
fs
clc
sub
cltd
insl
push
push
xor
add
shll
xchg
popa
sbb
inc
test
adc
pop
mov
divb
jl
push
arpl
test
pushl
mov
std
inc
pop
imul
cmp
or
push
sbb
aas
mov
stc
cmp
cmpsl
test
dec
int
jae
out
rorl
jbe
mov
fcmovne
xchg
in
int
bound
nop
xlat
sbb
cs
mov
faddl
bound
jo
sub
and
lret
roll
test
adc
fdivr
or
stos
mov
rcrl
xor
pushf
addb
in
adc
int
enter
or
add
pop
adc
mov
lock
pop
mov
add
push
pop
test
sbb
mov
xorb
push
sub
add
arpl
sahf
ret
and
jp
imul
faddl
mov
pop
arpl
push
or
jne
dec
push
pop
mov
leave
fsubrs
dec
aad
fildl
cmp
fwait
test
in
jmp
cmp
sbb
xchg
sub
xor
jne
inc
sahf
mov
std
ret
push
jp
jl
add
into
stos
movsl
mov
js
shlb
iret
fwait
sbb
clc
insb
push
jno
xchg
lods
and
sub
push
ret
pop
popw
pop
insb
out
je
add
rol
fisttpll
in
fidivrl
stos
repnz
out
inc
inc
mov
xchg
ds
pmulhuw
enter
in
arpl
cmp
popl
push
addr16
xor
xchg
movsb
test
inc
mov
insl
add
shrb
test
shrd
push
mov
push
or
pop
dec
jecxz
ss
fstpt
icebp
pop
dec
xor
inc
push
xor
cmp
loope
jo
cwtl
fimull
gs
mov
popa
mov
dec
sub
sti
insb
addr16
mov
mov
fcmovnu
popa
or
in
jmp
test
out
or
loope
xchg
mov
sbb
xchg
sub
xchg
movsb
fwait
pop
out
mov
xchg
inc
xchg
push
pop
je
es
imul
dec
fnstcw
sbb
mov
push
mov
xor
adc
xchg
jns
dec
inc
xlat
test
dec
fs
mov
mov
pop
sub
test
add
add
sbb
out
into
dec
loope
cli
int3
fs
xchg
jnp
rorl
loopne
lcall
push
mov
lock
xlat
cmc
add
push
xor
jg
stc
push
and
or
pop
pop
mov
orb
loopne
pop
xchg
leave
fisttps
imul
scas
pop
movsb
sub
filds
dec
in
loop
and
into
mov
mov
lods
xor
icebp
out
push
push
push
sub
mov
push
jge
push
xchg
aas
pop
icebp
xor
pop
jle
cmp
gs
jg
call
xchg
mov
scas
pop
xlat
leave
xor
mov
inc
cmc
inc
jle
mov
ljmp
hlt
psadbw
pop
adc
push
fmuls
add
mov
cmp
fstpl
in
ret
dec
lods
and
mov
push
repz
adc
sarb
hlt
in
inc
sub
sbb
bound
imul
dec
sbb
xor
or
sub
add
test
mov
outsb
sub
rolb
lea
xchg
outsl
pop
nop
ds
jb
adc
pop
pop
out
cmp
mov
inc
pushl
inc
jne
stc
mov
and
add
stos
push
sub
dec
sbb
mov
divb
pop
pop
pushf
fisubl
xor
and
dec
adc
sbb
loop
cmp
xchg
fidivl
pop
loop
imul
push
incl
hlt
push
icebp
clc
push
push
cmp
adc
sub
aaa
sahf
adc
mov
inc
cmpsb
out
push
mov
cmp
xor
mov
jno
add
sti
jns
mov
mov
and
ret
push
popa
arpl
hlt
mov
pop
mov
fildl
popw
fiaddl
insb
scas
adc
scas
cmp
lahf
adc
pushf
and
pop
dec
repz
or
mov
lret
mov
xchg
push
sub
xchg
mov
fisttps
shll
out
test
xor
fs
pop
push
dec
and
test
mov
std
movsl
mov
ljmp
orl
xchg
mov
pop
cmp
arpl
call
cli
xor
insl
addr16
pop
negl
dec
xor
adc
push
push
jecxz
std
xchg
sbb
jnp
pop
xchg
int3
hlt
push
pop
add
mov
or
lock
movsb
or
mov
pop
aas
sbb
or
jo
dec
push
add
scas
inc
mov
xchg
inc
test
mov
cmpsl
sbbb
mov
cmp
jp
loop
sar
xchg
std
scas
adc
xor
or
push
dec
push
das
into
or
ret
fs
je
pop
fiadds
mov
inc
rorb
shl
xor
in
mov
shll
jb
inc
movsl
sub
arpl
enter
mov
loopne
sbb
jnp
add
hlt
push
outsl
iret
sub
cltd
pop
push
lret
jecxz
sub
or
mov
mov
inc
lea
loope
dec
daa
outsl
push
and
movsl
mov
aaa
adc
mov
mov
adc
jmp
dec
ja
jge
sar
sub
test
pop
gs
cmp
mov
insl
mov
pop
pop
ret
and
pop
or
and
adc
xor
mov
adc
repnz
ret
bound
mov
xlat
jnp
cmpsb
xchg
xchg
in
cwtl
mov
mov
push
push
icebp
xchg
rolb
mov
xchg
bound
pop
cmp
xor
add
inc
pop
add
dec
clc
adc
mov
and
cs
test
sub
cmp
testb
adc
inc
sbb
mov
mov
pop
outsb
testl
ljmp
pusha
stos
and
stos
xor
sub
sub
sbb
push
cmpsb
xchg
jae
cs
push
leave
repz
je
jns
movsb
adc
add
jne
xchg
mov
pop
push
iret
mov
popf
push
xchg
push
jo
les
inc
dec
mov
leave
cmp
popa
cmc
xchg
xchg
outsb
mov
test
lods
push
mov
cmpsl
mov
sub
scas
mov
loop
mov
pop
xor
pop
js
fsubs
mov
mov
mov
cld
fs
out
pushf
pushf
movsl
and
cmp
roll
mov
mov
jnp
inc
jb
out
rcrl
lods
mov
in
sbb
xor
sbb
jecxz
dec
mov
iret
mov
cmp
cmpsl
outsb
pop
hlt
inc
adc
adc
shll
repz
jmp
add
rcrl
push
repz
repnz
sbb
and
div
mov
dec
lahf
data16
pop
popa
jb
es
pop
int3
dec
test
push
mov
lcall
push
stos
mov
cmpb
add
inc
inc
dec
push
add
shrb
repnz
arpl
addb
testl
sbb
aas
outsl
mov
inc
xchg
je
adc
clc
icebp
stc
jl
push
and
mov
push
pop
mov
adc
outsb
cmp
push
repz
lock
cmpsl
mov
jns
pusha
std
push
xchg
xlat
stc
mov
push
xchg
imul
sbb
inc
jbe
inc
test
xchg
and
xor
inc
inc
or
out
outsl
and
test
adc
xor
in
jno
cmpsl
mov
ret
scas
dec
imul
add
sbb
aaa
pop
and
dec
jnp
out
int3
mov
xchg
hlt
add
pushf
cmc
sbb
xchg
jg
aad
fsub
mov
dec
inc
pop
xor
xor
mov
fcoms
ljmp
jns
clc
sarb
jo
popw
or
add
movsb
aad
and
mov
popa
cmp
jnp
mov
xchg
jb
out
bound
frstor
popa
rolb
gs
mov
add
push
or
mov
sub
adc
mov
add
or
ss
and
sti
cmpsb
int
mov
loopne
nop
or
popa
inc
mov
in
sbb
push
sbb
cmpsl
ljmp
mov
les
sbb
repz
out
pop
push
sarb
mov
jecxz
int3
dec
adc
lahf
lcall
pop
adc
insl
xchg
dec
addl
mov
xchg
sub
pop
cmp
iret
xchg
lock
das
jb
jns
ss
add
jbe
sub
push
cmp
lcall
jecxz
pusha
push
ljmp
mov
xchg
pop
sbb
lds
nop
cmp
jae
push
inc
mov
pop
not
dec
sbb
pop
ss
add
xchg
push
mov
push
inc
ljmp
push
sbb
and
push
sbbb
pusha
test
sahf
dec
cmp
cmpsb
repnz
or
push
stos
adc
clc
sub
ror
xchg
jmp
push
pop
ja
inc
movsl
pop
cmp
xchg
xchg
inc
inc
shlb
stos
jo
lds
das
push
clc
roll
cld
mov
sahf
ljmp
sbb
sbb
fistpl
push
fmul
rorl
pop
mov
mov
inc
movsl
inc
imul
orl
lea
cmpsb
mov
pushf
xchg
cmp
ds
xchg
dec
jbe
scas
and
adc
pop
aad
dec
mov
sbb
mov
insl
scas
jbe
inc
adc
out
or
out
scas
dec
xchg
push
mov
cs
jo
jnp
mov
push
jns
jmp
ret
addr16
push
dec
push
test
sbb
pop
jns
jmp
insb
int3
or
xor
adc
adc
inc
dec
outsl
rclb
jmp
jns
lods
inc
rolb
push
dec
sti
shl
mov
cmc
xor
push
cmp
hlt
inc
inc
mov
in
mov
ret
mov
idivb
cmp
and
sbb
outsb
loopne
clc
sub
pop
adc
inc
imulb
imul
loop
in
jno
inc
jbe
sub
sub
mov
addb
adc
mov
and
xor
loope
fs
inc
xor
mov
push
test
cmp
push
mov
push
ljmp
push
push
mov
xor
test
rclb
test
add
push
inc
xchg
pop
push
cmp
dec
out
pop
and
lcall
cs
xchg
jns
ja
mov
and
ss
inc
mov
and
sbb
dec
aaa
mov
imul
adcb
sbb
jmp
sbb
xor
std
in
clc
pop
push
out
popf
adc
ja
insl
repz
push
loope
hlt
xchg
mov
das
lahf
xor
and
repnz
mov
jp
fcoms
push
xor
xor
iret
stos
ja
lret
jle
pusha
mov
jle
mov
arpl
stos
mov
fdivrl
rorl
sub
add
xorb
push
push
add
test
loop
adc
lret
xlat
jmp
mov
pop
sub
mov
or
or
pop
out
jmp
xchg
xchg
push
jno
bound
dec
hlt
sub
cli
pushf
ret
add
js
cmpb
iret
loop
jne
sahf
jo
xchg
lcall
je
je
dec
ja
xor
aaa
incb
es
mov
push
movsl
mov
mov
sti
xchg
push
dec
arpl
ret
dec
sub
outsl
lahf
incl
loop
dec
insb
testl
out
pop
pop
rolb
cmpsb
or
push
loop
loope
push
push
dec
pop
jge
ja
mov
xchg
sbb
sub
xchg
or
mov
inc
movsl
inc
into
and
mov
add
sub
imul
cmpl
fisubl
insl
notl
les
in
std
xchg
fwait
jmp
ja
das
arpl
push
inc
dec
loopne
push
or
lods
pop
pop
test
cmp
and
jp
or
sub
mov
mov
sbb
mov
mov
nop
enter
jns
mov
inc
test
fs
scas
sahf
std
sbbl
jne
hlt
cmpsb
cmp
pop
cmp
fisttps
popf
jle
dec
xchg
dec
daa
xor
cmp
outsl
add
inc
leave
popf
adc
jnp
inc
pop
test
cmc
into
lea
imul
or
mov
xorw
cs
filds
mov
data16
sub
out
push
aad
mov
jb
inc
call
jbe
sbb
sbb
and
cmp
ljmp
sub
insl
ss
test
push
push
sahf
xchg
pop
push
adc
jp
mov
aam
mov
test
jo
sub
inc
lock
xchg
mov
aaa
jne
inc
arpl
adc
lret
jbe
add
xor
cmp
shll
stos
mov
pop
fucompp
or
decb
mov
outsb
repnz
leave
xchg
stos
int3
sbb
push
add
pop
mov
push
sub
jb
sbb
cld
outsl
mov
nop
je
push
push
or
imul
popa
imul
pop
loopne
aam
out
lods
iret
push
push
or
sub
pop
mov
mov
sub
jle
fsubrp
dec
popa
test
xor
leave
pop
lahf
mov
xchg
push
sar
cli
xchg
inc
pop
xchg
jae
sti
jnp
nop
inc
cmp
jb
cs
cmpsb
test
cli
adcl
mov
inc
push
sub
push
cmpsl
sub
jmp
fs
sub
fs
lea
jmp
pop
pop
out
jnp
jp
sti
mov
jnp
fldl
xor
nop
mov
pop
jl
imul
in
aam
fwait
outsb
pop
cltd
push
pop
push
mov
mov
sbb
test
or
push
lds
lret
push
ds
xchg
mov
loope
and
mov
inc
or
lods
mov
mov
push
and
in
scas
das
xor
xchg
leave
clc
loop
in
and
fbld
push
or
cmp
cltd
testl
decb
inc
adcl
push
jmp
jge
in
in
cmp
push
push
pushf
ror
inc
es
pusha
mov
mov
and
dec
xchg
aam
arpl
lods
sbb
mull
popf
pop
sti
ja
jg
fdivrp
mov
stos
or
mov
sub
outsl
push
jae
fs
dec
adc
cmpsb
pusha
pushf
ja
jbe
pop
loopne
shlb
test
out
mov
cmp
rol
cmp
test
xchg
mov
pop
pop
adc
ljmp
pop
out
fsubp
rol
pusha
div
jge
repnz
ljmp
aas
or
stc
and
lock
pushf
sahf
adc
jg
roll
adc
mov
sub
inc
mov
jb
jne
dec
pop
fmulp
pushf
mov
pop
gs
push
ret
pop
mov
xchg
mov
sbb
aam
jb
sbb
or
clc
dec
sti
dec
push
dec
cwtl
and
pop
scas
add
jmp
mov
adc
push
hlt
popa
call
mov
movsb
add
push
rcl
push
add
mov
sbb
inc
sbb
mov
fimuls
mov
mov
dec
pop
movl
hlt
or
xor
cs
lods
lcall
loop
cmp
xor
pop
outsb
pushf
rorb
stc
sub
mov
hlt
jbe
and
inc
sub
fcompl
ljmp
mov
leave
pop
mov
jmp
cwtl
aam
and
push
and
insl
icebp
pcmpgtd
mov
or
test
sbb
mov
pop
outsl
cli
and
sub
rcll
fprem1
dec
push
outsb
push
cmp
adc
jns
adc
outsl
das
mov
adc
inc
adc
mov
pop
xlat
hlt
xchg
and
sbb
outsb
sahf
faddl
adc
xchg
aas
mov
sahf
dec
scas
dec
xorb
or
cltd
sbb
fsubrl
lret
data16
lods
out
test
outsb
jae
es
xlat
push
inc
pop
cmp
sti
ffreep
lahf
in
jmp
int
nop
in
test
lods
xlat
mov
scas
cmpsl
imull
xor
scas
int
or
xor
and
jmp
and
addr16
push
dec
xor
shrd
fiaddl
sbb
xor
adc
mov
movsl
and
add
cs
cmp
dec
push
enter
pushf
sbb
mov
pop
enter
data16
jp
cli
push
adcl
jge
int
iret
dec
pop
add
push
into
add
mov
push
jbe
add
roll
fcmovnb
fdiv
lock
sahf
mov
loope
sub
jb
iret
mov
xchg
mov
lahf
pusha
adc
mov
pop
push
sbb
push
mov
push
lock
fstl
dec
xchg
ds
rolb
and
xor
mov
sub
jnp
int
pop
jns
jo
leave
ds
gs
sbb
xor
sub
loope
adc
dec
mov
add
ljmp
popf
and
gs
or
leave
adc
inc
pop
pushf
out
or
mov
enter
data16
add
lods
jno
lea
ljmp
fisttpl
xchg
xchg
xor
shll
inc
movb
push
decl
call
mov
dec
mov
xchg
js
les
test
out
add
pop
dec
xor
push
mov
sub
ret
sti
add
mov
in
ficoms
sbb
fnstcw
pop
or
hlt
fbld
bound
push
mov
xchg
pop
add
jb
adc
push
sbb
and
sub
negb
ja
jge
adc
and
and
test
ja
sahf
ljmp
clc
mov
imul
shlb
and
adc
lcall
iret
jnp
cmp
sub
out
divb
sbb
and
and
ret
push
lock
outsb
cmpsl
xorl
cltd
sahf
in
inc
mov
js
and
insl
nop
pop
push
mov
lea
in
mov
icebp
rcrb
jb
and
lea
mov
sbb
int
cli
adc
test
dec
ss
nop
cmp
adc
pop
sbb
fdivrs
lods
inc
pusha
sbb
repz
jae
ja
dec
cmovl
insl
mov
test
notb
sub
sub
ss
pushf
lods
out
push
lea
push
sbb
push
sub
pop
mov
loope
pop
test
int
mov
orb
mov
push
and
push
in
pop
mov
in
sar
ss
insb
jmp
xchg
stos
mov
push
pop
fldcw
cmpsb
pop
movsl
leave
lock
inc
shr
jns
repz
stos
ret
clc
notl
xor
outsb
dec
call
mov
imul
or
adc
daa
push
ss
add
sti
cltd
aam
push
or
sub
mov
fwait
pop
and
clc
add
mov
sub
rorl
rcr
or
mov
pop
fldenv
enter
push
mov
cmp
fistpl
ret
out
icebp
or
inc
add
jb
js
out
psubd
mov
mull
mov
push
repz
adc
loope
sarl
xchg
inc
shr
push
lods
dec
inc
jmp
fstps
test
push
jb
cmpsb
movsl
xchg
enter
leave
out
push
ljmp
jo
inc
and
mov
pop
loope
ja
mov
push
mov
mov
lahf
push
addr16
movsb
dec
sbb
xchg
jecxz
xchg
imul
stos
or
and
mov
lea
insb
cltd
andb
mov
int3
idiv
repz
sub
jo
lcall
jne
das
lods
add
mov
dec
xchg
flds
shl
adc
inc
jns
xor
fstl
or
mov
mov
popf
mov
es
inc
cmc
and
sub
jmp
jb
sbb
jne
mov
gs
stos
add
movsb
push
lcall
or
sti
daa
sbb
push
or
xchg
fstpl
pusha
cli
mov
gs
scas
ret
cmp
fiadds
iret
add
aas
fnsave
rorb
xchg
adc
dec
stos
add
inc
in
jmp
call
fwait
push
outsb
sub
sbb
dec
pop
adc
movaps
dec
mov
out
cltd
xchg
mov
or
les
mov
and
add
mov
mov
xor
shlb
loop
push
lahf
nop
cld
mov
mov
xchg
jns
push
iret
push
das
sarb
icebp
mov
scas
lock
dec
xchg
lods
loope
mov
ficoml
push
mov
ret
pop
les
inc
aaa
cmp
std
hlt
mov
fwait
inc
mov
lcall
jae
mov
cmp
fcoms
daa
es
shll
iret
inc
pushf
mov
inc
out
xlat
lahf
ficomps
pop
xchg
les
mov
cwtl
icebp
pushf
sbb
movsl
mov
inc
call
addr16
sub
das
push
push
add
xor
adc
or
and
ret
adc
inc
pop
test
rcll
stc
sbb
lret
addl
jp
call
inc
pop
dec
ja
hlt
and
rep
fadds
add
push
addr16
or
movsl
stc
mov
sti
mov
inc
jns
xchg
jl
lds
out
sbb
lahf
sub
xchg
mov
push
pop
or
xchg
pop
xor
and
push
stos
jbe
inc
lcall
sub
dec
pusha
je
fsts
fsts
hlt
scas
std
out
lea
pop
pop
xchg
inc
or
jno
mov
xchg
add
testb
cld
inc
jmp
push
les
mov
or
pop
les
jmp
jae
pushf
out
xchg
es
dec
push
or
rcl
icebp
cmp
jmp
jns
xor
mov
or
push
or
les
or
push
sbb
inc
xchg
xor
mov
jmp
mov
movsl
and
add
xor
push
mov
push
loope
push
das
adc
sbb
es
mov
push
jno
pop
push
pop
xrelease
inc
xchg
cli
xor
into
in
jne
fcoml
loopne
mov
dec
add
add
jo
push
lods
jns
mulb
pop
imul
imull
mov
pop
mov
push
and
xchg
or
or
hlt
sbb
mov
sarl
cmp
pop
sbb
and
adc
and
jge
dec
outsb
push
sbb
insl
test
jg
lods
mov
shl
es
insb
mov
lahf
gs
cld
in
lret
das
in
lahf
int
xchg
aaa
mov
fdiv
aad
jb
xor
and
dec
adc
dec
sbb
clc
fsubrp
addr16
mov
dec
add
je
sbb
dec
jecxz
adc
ja
test
mov
out
sub
cmp
test
push
mov
push
popf
inc
push
popa
test
cltd
fildl
sub
dec
pop
insb
lods
scas
jo
test
divb
test
pop
add
std
mov
mov
ret
jle
dec
mov
push
or
out
pop
aas
cmp
negb
iret
int
hlt
repnz
shlb
xchg
cmpsb
idivl
xor
in
mov
jl
scas
sub
push
cmp
movsb
inc
xlat
enter
sbb
jbe
cltd
movl
xor
lcall
dec
and
sub
in
adc
jmp
imul
fwait
adc
sbb
sbb
and
loopne
cmp
adc
pushf
dec
je
mov
mov
xor
jg
jge
sbbb
and
inc
pop
cltd
cmp
loopne
icebp
pop
fidivl
mov
mov
push
pusha
push
in
pop
jno
lcall
sub
jg
xor
test
mov
sti
mov
out
das
adc
mov
sarb
test
inc
mull
inc
enter
jnp
jmp
lods
aam
cmp
dec
mov
pop
xor
out
cmp
ret
push
or
dec
xchg
dec
push
mov
push
mov
mov
out
loope
mov
xor
push
rcrl
stos
xor
insl
mov
pop
mov
sbb
scas
stc
mov
repz
gs
push
hlt
mov
mov
mov
adc
add
movl
test
out
lock
adc
js
incb
scas
push
and
scas
add
rep
repnz
div
mov
es
push
sub
push
stos
ja
xor
mov
xchg
es
stos
ja
jge
and
mov
jmp
or
xor
mov
xchg
or
mov
inc
adc
jp
popf
cmp
adc
xor
cs
and
xchg
sub
mov
xchg
adc
push
mov
into
stc
mov
adc
xor
xchg
idiv
test
movsl
cmpsl
icebp
push
nop
popf
fdivr
out
fimull
mov
les
fadd
adc
mov
lods
add
mov
and
pop
bnd
lock
xchg
stos
jp
pop
add
fidivrs
pop
adc
insl
scas
mov
addr16
sub
jne
rcrb
pop
in
cwtl
xor
fistpll
mov
pop
scas
xlat
xchg
dec
loop
mov
aaa
mov
or
xchg
loop
or
out
cmp
imul
mov
mov
dec
jne
adc
mov
jno
cwtl
inc
out
cmp
xchg
mov
or
int
mov
adc
pop
xchg
mov
xor
or
shll
push
or
das
lods
rcr
loope
repz
inc
pop
lods
clc
push
rol
jae
jns
mov
dec
negb
cmp
mov
out
push
outsb
cmp
push
sbb
and
cltd
push
ret
jle
in
mov
mov
xchg
in
adc
lret
cmp
in
sbb
xchg
lods
in
idiv
movsl
aam
cmc
testl
sbb
dec
jge
cmp
test
and
dec
fs
jecxz
out
push
insb
adc
out
push
lock
dec
push
or
and
push
ret
mov
xchg
mov
adc
sti
loop
outsb
roll
pop
add
inc
ret
fwait
ljmp
jae
test
mov
add
mov
sbb
or
sbb
mov
shrl
in
and
cmpsl
sbb
pop
in
add
call
daa
insb
out
je
aad
mov
sub
inc
cmpl
jno
push
lret
lock
or
push
push
sub
cltd
add
ret
and
ja
jecxz,pn
jb
ljmp
mov
fisttpll
xor
iret
cmc
ljmp
cmp
cmp
outsb
mov
test
dec
or
cmpsb
fidivrl
jb
lods
jl
std
cmp
cld
xor
pushf
xchg
xchg
adc
pushf
insl
cmpsw
mov
or
xor
jmp
xchg
jne
sbb
push
test
data16
add
cmp
rorl
andl
jle
xchg
xor
dec
adc
rclb
cwtl
mov
or
js
mov
icebp
mov
arpl
enter
aam
je
filds
roll
lahf
popa
int
jg
push
je
loope
mov
mov
cmp
int
sub
xor
sbb
mov
and
fisttpl
dec
fs
add
das
fdivr
ficoms
jo
test
movsb
dec
scas
lret
cmp
out
roll
lods
dec
fwait
xor
jb
mov
rorb
in
negb
popw
mull
leave
mov
xor
loop
cwtl
jp
xchg
add
pop
stc
mov
pop
or
mov
pop
add
mov
jg
insb
push
outsl
lcall
cmp
pop
lods
xchg
sbb
pop
loop
shl
mov
incw
mov
or
mov
sub
jecxz
xor
in
ja
fmul
fdivl
mov
ret
popf
in
enter
testl
outsb
xchg
pop
xchg
int
jmp
mov
lcall
push
xchg
das
outsl
sub
lea
mov
jb
inc
stos
inc
and
icebp
cmp
addr16
dec
xor
xor
jne
jp
lcall
xor
mov
shlb
xor
cmp
popa
mov
pop
inc
lahf
sub
negl
lea
dec
cmp
filds
xchg
decb
outsl
jg
addr16
sub
movsb
sarb
pop
bound
invd
shlb
lcall
fisubl
mov
sub
adc
mov
xchg
xor
in
cmp
popa
dec
dec
mov
and
insb
push
xchg
adc
pop
shll
push
ss
xchg
in
aam
stos
ret
adc
xchg
mov
inc
push
jl
ds
int
mov
mov
in
imul
outsl
incb
adc
jp
cld
push
outsb
stc
in
mov
mov
or
add
fbstp
add
push
fst
and
push
or
mov
push
mov
leave
fisttpll
and
ljmp
sahf
or
cmp
in
loopne
xchg
popa
popa
sub
lcall
cmp
push
dec
adc
aam
dec
lods
mov
ret
insl
mov
xchg
mov
inc
ret
jg
pop
in
imul
lods
sbb
int
out
push
cli
gs
enter
mov
stos
inc
sbb
ss
std
xchg
mov
bnd
push
lret
lock
shl
mov
sub
stos
addr16
stos
push
dec
cmp
ja
mov
test
insl
mov
es
dec
mov
testl
push
subl
mov
movsl
add
jmp
repnz
adc
mov
into
out
xchg
clc
cwtl
scas
mov
or
maxps
fstl
std
push
ljmp
push
xchg
and
std
rorb
jmp
clc
outsb
cwtl
inc
iret
adc
inc
fimull
leave
icebp
iret
mov
push
xor
lods
inc
fistpl
in
daa
sub
pop
loope
in
inc
jb
popa
or
inc
mov
scas
test
mov
inc
fxch
mov
ss
cmp
fs
jg
testl
inc
inc
ljmp
mov
sbb
jmp
imul
pop
ljmp
lret
mov
or
out
dec
ljmp
jmp
pop
int3
or
push
push
sub
aas
test
sahf
mov
xlat
stc
xor
pop
pushf
stos
int3
cmpsb
xor
data16
dec
mov
fdivl
addb
sbb
push
jl
jmp
mov
cmp
xor
aam
inc
mov
cmpsl
xchg
push
ds
test
mov
inc
push
cmp
push
mov
insl
mov
sarl
pop
pop
dec
cmp
stos
and
int
push
lret
repz
adc
jge
mov
pop
adc
and
mov
jmp
scas
cmp
pop
pop
sar
cmpsl
jns
sbb
push
stos
repnz
cmp
sahf
mov
in
out
repnz
popf
mov
mov
decb
dec
subps
mov
fs
and
sbb
aad
repz
mov
xor
dec
mov
push
stos
jl
nop
xchg
xchg
xchg
or
cmc
ret
sahf
in
mov
add
pop
jae
mov
mov
jg
mov
or
adc
cld
push
test
into
leave
and
ud1
loopne
sbb
mov
mov
rorl
sahf
sub
dec
fdivs
mov
xor
mov
insl
repz
inc
imul
inc
inc
mov
jp
iret
jecxz
pop
mov
mov
or
ror
dec
inc
in
or
int3
lcall
js
ss
movb
ret
sub
dec
fimull
pop
imul
dec
ss
notl
das
leave
fstps
sub
lods
fs
enter
ret
test
dec
popa
insl
add
fs
cltd
push
jnp
pop
xor
sbb
lea
mov
sbb
fcmove
push
cmpsb
cmpsl
in
mov
scas
movsl
xor
popa
into
lds
cmp
filds
rorl
xchg
fisubrl
imul
shll
shll
jns
es
xor
lea
mov
cld
pop
pushf
cmp
imul
cmp
pop
push
scas
jno
divl
arpl
mov
call
push
or
jno
cmp
xchg
subb
inc
rcll
lret
sbb
cltd
sub
andb
add
push
and
pop
push
loope
inc
insl
mov
cmpl
incb
xchg
loop
lods
outsl
inc
mov
loop
mov
enter
xchg
imul
int
push
es
stos
popa
push
outsb
jns
pop
icebp
mov
jns
sbb
insb
mov
mov
decb
mov
adc
or
mov
cmpsb
int3
lret
xchg
mov
into
popa
cwtl
mov
or
pop
sub
popf
lahf
std
in
dec
mov
mov
sbb
hlt
cld
js
addl
sub
cmpl
mov
jecxz
js
adc
inc
insl
sub
mov
or
rorl
sahf
outsb
scas
adc
lret
mov
outsl
gs
mov
int
pop
dec
imul
into
add
xor
cwtl
movsb
cmp
mov
or
ret
pop
lcall
inc
fnstsw
decl
push
jl
leave
xchg
in
jecxz
inc
jno
xchg
add
dec
push
dec
xor
xlat
inc
jecxz
mov
mov
dec
mov
xchg
andb
test
hlt
hlt
sub
mov
add
data16
sbb
stos
ficoms
xchg
push
imul
add
stos
fptan
cmp
mov
dec
add
cmpsb
daa
sub
xchg
and
jmp
loope
inc
xchg
mov
clc
fwait
sbb
add
mov
ja
mov
mov
jmp
pop
in
and
inc
mov
jle
dec
cmp
adcb
aad
cmp
sbb
adc
sbb
sahf
cli
push
push
hlt
pop
stos
aad
mov
cli
fstps
jnp
push
cli
out
xchg
cmp
scas
adc
cli
mov
adc
sub
stos
insb
dec
aaa
mov
loopne
cmp
mov
xor
add
mov
pop
xrelease
out
ljmp
loope
adc
mov
repnz
popa
mov
adc
cltd
ljmp
shll
mov
cmp
dec
fucom
dec
fwait
add
insl
adc
mov
imulb
clc
inc
pop
push
add
adc
int3
sub
adc
cmc
iret
rcl
mov
xchg
test
das
xchg
push
scas
orb
cmp
or
call
out
push
stos
adc
jnp
mov
mov
adc
sahf
pop
les
ljmp
push
leave
mov
ja
into
mov
jno
popa
test
loope
mov
mov
pop
jmp
jno
adc
lds
adc
bswap
mov
pop
add
and
jo
test
cmp
mov
leave
xchg
mov
mov
mov
dec
fmuls
outsb
lods
add
loopne
movsb
aad
dec
clc
shrl
aad
sbb
outsb
in
sbb
jb
pop
stos
dec
push
cs
or
cmp
jnp
movsl
mov
jns
clc
add
gs
lds
mov
ds
mov
xchg
loop
lods
repnz
imul
mov
imul
ljmp
and
add
dec
outsb
mov
inc
and
xor
rol
inc
cltd
lods
fwait
in
dec
insb
or
mov
cmpsb
push
mov
mov
and
and
sti
push
loop
or
insb
jecxz
outsl
fwait
push
neg
test
gs
add
push
flds
cli
jne
dec
jnp
mov
jns
cmp
add
jnp
repz
dec
xor
jb
push
dec
out
scas
cmp
scas
in
adc
movb
or
inc
add
push
fidivl
sbb
mov
mov
pop
cwtl
enter
pushf
ja
pop
push
scas
aad
add
xor
mov
push
mov
mov
mov
inc
push
jg
pop
sbb
cmc
leave
sbb
xchg
mov
std
dec
push
loope
clc
xchg
push
push
xor
mov
mov
xchg
jmp
cmpxchg8b
push
mov
outsb
mov
mov
add
xchg
sbb
xchg
or
push
xchg
test
aad
icebp
sbb
sub
xchg
or
lock
addr16
hlt
pusha
jo
xor
test
dec
sbb
xchg
and
pusha
les
inc
add
mov
push
stc
xchg
test
xchg
shrl
jge
push
or
or
movsb
cmpsb
in
outsb
cmp
lcall
outsl
mov
addr16
loop
outsl
ss
or
out
xchg
aad
push
push
dec
sbb
fiaddl
xchg
ret
and
sub
ljmp
test
mov
jmp
je
outsb
repnz
pop
mov
or
push
in
cmpsl
adc
negb
cli
dec
sub
and
mov
cmp
sub
notb
inc
sti
mov
pop
cli
pop
xor
mov
sub
gs
dec
lods
adc
xchg
jmp
pop
stos
cltd
scas
ljmp
dec
loope
rclb
mov
fists
icebp
mov
fisttps
loop,pn
jmp
fistpl
xchg
inc
mov
shlb
ret
shlb
push
pop
add
loope
cmp
sub
dec
xor
ds
call
popf
or
movsl
lods
mov
rolb
adc
sbb
push
sbb
pop
cmp
cmp
pop
iret
and
inc
adc
imul
mov
into
mov
inc
mov
test
rorb
gs
mov
push
cwtl
pop
out
test
jle
cli
fiaddl
sahf
or
add
cmp
inc
sti
in
mov
out
push
std
push
dec
xchg
in
inc
aas
add
es
and
xor
cmp
loop
inc
ss
imul
xor
sub
adc
push
jb
notl
jle
mov
mov
roll
ss
testl
mov
jae
xchg
scas
jecxz
jecxz
mov
out
pop
sbb
push
pop
fisttps
out
inc
in
push
pop
mov
cmp
sub
pop
jne
ds
insb
insl
sti
out
and
pushf
cmpsl
inc
sbb
xchg
or
fwait
dec
push
cli
dec
ds
cltd
shrb
ficoms
cmp
mov
jns
sub
cld
addr16
jmp
stos
out
mov
std
cmpsl
testl
pop
jecxz
cmpsb
aad
mov
mov
dec
sahf
jl
mov
cmp
pusha
inc
ret
cmp
icebp
cmp
mov
popf
lret
in
xorb
mov
add
enter
shlb
or
out
lcall
shl
sbb
stc
mov
call
mov
inc
aam
adc
sbb
inc
aad
subl
aam
push
xor
sub
loope
gs
pop
xchg
inc
dec
pop
or
xor
xor
xchg
inc
jg
push
jae
mov
mov
jae
inc
sbb
mov
adc
or
in
mov
push
xchg
or
jmp
fsubs
or
std
jnp
push
addb
push
shlb
jg
lcall
aas
pop
mov
movl
std
lea
in
fwait
push
jo
mov
and
pusha
out
test
mov
inc
mov
test
je
ljmp
cwtl
add
cmp
lret
sbb
imul
fs
rolb
ret
scas
sbb
sbb
out
stos
nop
mov
mov
loop
js
adc
mov
or
sbb
push
jge
out
push
or
hlt
mov
inc
mov
jb
sbb
pop
add
cmp
mov
icebp
pop
inc
pop
mov
jge
test
rcr
pop
shll
sub
inc
ds
xchg
jno
push
pop
fadds
xlat
cmc
dec
fstpl
ror
adc
pop
adc
jns
or
and
imul
mov
xchg
jo
pslld
and
shr
test
push
jb
pushf
mov
cmpb
sti
cmp
stos
sarl
fstpt
stos
push
nop
xchg
rcrl
movsl
pop
xor
fisttps
outsb
int3
dec
adcl
pop
lock
fistpll
push
fadds
and
dec
and
test
pop
jae
adc
bound
aaa
mov
xor
jb
jnp
out
inc
cmpsb
andb
jbe
lock
aaa
iret
jl
xor
add
sbb
pop
fmuls
scas
inc
cld
sub
mov
das
mov
xchg
and
test
popf
sbb
mov
jno
popa
fcoms
mov
movsl
daa
sbb
dec
enter
xchg
push
call
add
jmp
fists
push
cmp
cmpsl
pop
ljmp
test
and
arpl
xchg
fistl
sbb
repz
rorl
xchg
movl
int
xor
xor
pop
pop
rorl
popw
jl
xor
mulb
adc
sub
push
sbb
pop
xor
push
push
adc
adc
rcll
cmp
xlat
call
clc
and
adc
jmp
xor
add
adc
pop
push
out
dec
aad
xor
mov
aad
sbb
scas
mov
sbb
stos
pop
in
scas
out
cmp
push
in
lret
pop
sbb
xor
cwtl
mov
mov
push
inc
xchg
cld
test
sahf
enter
xorl
out
jne
cmp
cmc
jecxz
xlat
cli
dec
dec
ret
loope
fdivrs
add
cmp
jne
mov
je
pusha
add
inc
cmp
test
bound
jg
stos
sbb
outsb
leave
xor
shl
cmp
mov
push
inc
push
or
jmp
outsb
mov
or
add
imull
fnsave
inc
test
pop
arpl
lods
clc
mov
inc
push
sbb
xchg
xor
xor
nop
dec
and
iret
pop
cmpb
loope
scas
lds
outsb
and
inc
test
push
add
jle
bound
loop
fldl
dec
in
fildll
jae
jl
hlt
xchg
and
sbb
adc
cmp
in
adc
sti
inc
push
addb
xchg
stos
fidivrs
and
mov
push
enter
cld
dec
jmp
push
fisubl
cmp
dec
in
ss
xchg
cs
cltd
test
fnop
sti
outsl
pop
sub
fcmovnbe
sbb
out
xchg
or
in
insb
mov
js
shll
mov
stos
iret
mov
fcoml
xor
sbb
xor
push
sbb
inc
inc
les
les
dec
lods
jne
mov
cmp
shll
and
icebp
daa
mov
adc
ds
jl
jmp
jmp
adc
and
mov
xchg
jne
push
xor
repz
mov
out
loopne
je
dec
sbb
xchg
jbe
inc
out
adc
call
movsl
add
dec
mov
pop
or
mov
scas
test
lock
mul
cli
fsin
imul
push
lods
push
inc
loope
cmpsl
repz
xchg
cwtl
and
xchg
pusha
lret
sarb
or
mov
jmp
notb
loop
sbb
and
ja
and
push
cmp
xor
jge
jg
imul
hlt
jo
jl
inc
add
push
outsl
xor
mov
test
add
lods
adc
outsb
push
fmuls
adc
arpl
dec
mov
scas
mov
js
jecxz
push
mov
adc
loope
rol
test
xchg
xor
xchg
jp
popa
aad
aaa
and
fstps
sahf
push
add
fwait
xchg
idivl
clc
and
cmc
fdivr
mov
mov
hlt
ja
push
pop
mov
jmp
aam
out
fistpl
mov
push
call
cmpl
lret
fldl
mov
cmpsb
or
ss
jge
test
inc
adc
push
cmp
jmp
das
lahf
ljmp
psadbw
jae
xchg
inc
or
mov
cmp
aad
outsl
sbb
jp
push
out
ret
push
push
nop
mov
sbbl
xchg
out
pop
pop
fcmovu
adc
movl
jnp
dec
jl
cli
ret
lret
mov
xor
call
cmpsb
stos
jmp
pop
cmc
pushf
sub
cmp
add
push
inc
cmp
xor
aaa
aad
ds
int3
cs
out
and
pop
addr16
or
mov
sub
jo
cmp
jne
loopne
cmp
nop
gs
cltd
testl
mov
push
mov
jle
in
add
scas
pop
fistpl
aam
aam
outsl
js,pt
push
add
jbe
push
mov
push
rcrl
pop
testl
test
jb
cmc
test
mov
push
data16
lds
mov
pslld
test
iret
faddl
add
outsl
inc
cmp
call
pop
jge
sarl
ret
out
push
je
out
add
mov
out
je
push
in
std
mov
fisttpl
push
int
lods
mov
sbb
mov
jne
repz
cmp
cmp
addr16
ror
inc
jbe
lds
pop
cmp
push
orl
xchg
mov
pushf
into
je
jo
repz
scas
addr16
ficoml
jb
mov
jno
adc
push
adc
leave
jl
pop
inc
cmpsb
enter
push
std
add
inc
sub
test
ds
stc
jnp
pop
inc
pop
pop
jbe
fldl
cmpsb
xlat
imul
pop
mov
ss
imulb
mov
push
arpl
pop
sub
mov
push
jge
xor
cwtl
push
mov
and
inc
in
jo
or
sarl
ret
xor
icebp
add
sub
dec
aam
cmp
dec
xor
stos
inc
popa
lock
dec
xor
mov
in
xor
ficompl
inc
pop
cmpb
imul
lods
ds
mov
int3
add
call
sub
jg
xchg
pop
cltd
push
loopne
mov
dec
outsb
pop
cmpsb
inc
inc
mov
jb
mov
jo
xor
jmp
out
pop
adc
push
test
and
jbe
aad
adc
in
xchg
inc
push
push
push
sbb
mov
push
stos
sub
push
js
inc
and
pop
in
bound
inc
out
dec
out
jl
sbb
icebp
mov
enter
fwait
imul
mov
stos
cmp
fstpt
adc
cmpl
lock
mov
inc
jo
push
aaa
add
jae
mov
jmp
lods
mov
mov
nop
mov
lcall
jge
loopne
push
cwtl
cmpsl
test
in
mov
xchg
push
or
dec
adc
vprotw
mov
loop
add
sub
xor
inc
dec
add
test
add
adc
test
mov
stos
inc
mov
fwait
push
dec
dec
mov
jmp
js
pop
ljmp
jae
jle
mov
inc
or
test
or
mov
adc
sbb
and
xchg
aam
dec
jmp
aas
pop
daa
and
xchg
popf
jmp
sbb
xchg
out
shrb
or
inc
rcl
add
ljmp
lods
or
lret
or
cmp
jp
xchg
enter
jo
je
push
sarl
aam
iret
cmpsl
pop
fs
xor
repz
mov
mov
jge
imul
dec
iret
inc
rcll
or
lahf
and
lds
les
roll
and
pop
mov
std
xchg
daa
jle
js
jp
sub
jno
gs
aas
subl
imul
cmp
cld
out
faddl
test
sbbb
sbb
sub
dec
std
cmp
in
pop
imul
adc
mov
popa
sti
push
les
cmpsb
add
adc
vunpckhpd
mov
jae
aas
inc
mov
push
or
xlat
inc
lock
sub
add
xchg
clc
and
fld
imul
sub
cwtl
jle
mov
loopne
and
sub
mov
mov
xor
cltd
sbb
cmp
outsl
fsts
jno
rcrb
leave
pop
sti
cmp
ljmp
jo
xchg
mov
cmp
sbb
jl
repnz
scas
loope
scas
adc
std
sti
inc
bound
fcoms
out
shrl
cmp
push
adc
outsb
repz
push
cmp
es
sti
mov
or
jge
mov
jb
mov
icebp
dec
leave
and
xor
push
loopne
mov
mov
inc
dec
fdivr
jg
push
adc
push
add
jecxz
scas
test
mov
and
rorb
loop
test
xor
in
mov
dec
cmp
push
mov
js
dec
mov
jbe
in
shrb
push
ret
pop
push
imul
popf
scas
push
int3
pop
dec
adc
jecxz
push
pushf
and
popf
xchg
sub
faddp
add
loope
jne
cltd
clc
fwait
andl
push
out
adc
inc
sahf
push
inc
mov
vaddps
stos
aam
shrb
clc
ret
push
pop
xchg
test
sbb
cmp
daa
mov
scas
jne
sub
sbb
sbb
or
dec
mov
mov
push
push
xchg
outsb
or
adc
add
mov
scas
cmc
and
cmpb
movsb
push
mov
cli
jb
jecxz
daa
sarb
and
mov
fisubl
inc
aam
sub
add
or
int
push
push
repz
dec
dec
in
les
dec
push
dec
mov
inc
jne
add
outsl
mov
pop
sub
mov
enter
lods
sarl
mov
aaa
cmc
clc
mov
mov
sarl
clc
mov
mov
add
jno
mov
das
push
xor
lock
rorb
or
pusha
inc
movsl
mov
mov
scas
pop
lret
nop
insb
mov
bound
in
cwtl
shll
popf
push
cld
xor
mov
dec
add
bound
clc
cmpsb
pop
outsl
add
xchg
movb
xor
mov
sti
or
es
add
cli
ds
iret
insb
movsl
jmp
and
inc
ss
add
cmp
call
std
mov
mov
jns
mov
clc
pop
push
jo
push
pop
mov
data16
or
in
jmp
push
stos
pop
mov
jge
cmp
fwait
inc
rcrb
xor
adc
not
out
cli
xor
test
out
push
loop
jp
inc
sbb
jbe
inc
in
in
cmpl
cmp
pop
sub
jns
jbe
sub
ficoml
repz
sbb
fwait
xor
add
aas
push
lcall
xor
jnp
xchg
bound
call
movhps
dec
punpcklwd
xchg
stc
aaa
cmp
inc
in
loop
add
jl
xorb
loop
bound
mov
loopne
lods
inc
pop
scas
sbb
mul
add
push
jl
jecxz
xchg
imul
dec
add
leave
repz
imul
sub
iret
push
cmp
dec
mov
ds
faddl
addr16
sti
iret
leave
mov
movsb
push
mov
cli
clc
cmc
lods
cmpsb
lret
cs
pop
lods
nop
arpl
pushf
stc
addl
orb
pop
mov
pop
out
clc
out
mov
mov
movsl
lods
pop
sub
inc
mov
push
pop
movsb
mov
or
and
in
loope
xor
dec
jae,pt
and
pushf
mov
inc
jno
inc
arpl
lods
mov
inc
rorl
push
cmp
aas
sub
orb
or
cmp
test
int
ja
cs
pusha
in
cmpsb
lods
sbb
inc
test
jl
hlt
movsb
fcomip
mov
mov
xor
repnz
lea
jg
mov
pop
push
aam
sub
mov
add
cli
sbb
and
jnp
push
xlat
pop
inc
add
mov
and
jb
cmp
in
jo
mov
push
shlb
push
movsb
xchg
sbb
jecxz
push
test
or
xchg
pop
int3
dec
lock
faddl
push
enter
repnz
inc
negb
mov
les
fcmovu
je
mov
iret
inc
pop
cmc
mov
aaa
push
sti
loop
and
clc
mov
ret
orb
or
mov
daa
mov
sahf
jge
pop
inc
push
imul
add
adc
pushf
gs
adc
xor
jnp
scas
ja
push
repnz
loop
dec
adc
cmpsb
adc
sub
and
cmp
fadds
pop
cwtl
cli
daa
repnz
cmpsb
jmp
push
mov
cld
addr16
mov
cmp
icebp
add
test
xor
sbb
mov
cli
push
mov
cmp
test
xchg
stos
movsb
mov
rcrb
or
rolb
test
push
fwait
sub
pop
adc
adc
inc
imul
or
repz
lcall
data16
pop
xchg
testl
mov
cld
or
dec
jmp
or
lret
fmull
inc
fcmovnb
sub
or
inc
mov
arpl
cmp
fwait
mov
ja
jno
daa
outsl
stos
fsubs
push
imul
jg
cli
imul
sahf
iret
out
dec
mov
inc
jno
cmp
pop
fstpt
sub
inc
std
adc
jo
dec
out
jcxz
cmp
or
in
testl
int
push
mov
pop
nop
mov
jecxz
jmp
mov
mov
faddp
jno
jle
call
add
mov
pmulhw
lret
ljmp
push
hlt
xchg
or
or
dec
mov
or
fsubrl
push
cmc
cmp
imul
mov
sahf
divb
fucomip
and
inc
cwtl
getsec
test
out
jmp
cmp
push
push
daa
or
shll
scas
cli
insl
xchg
ljmp
leave
and
mov
push
call
sub
add
arpl
mov
sarb
aas
pushw
xchg
lods
movsl
lcall
cwtl
push
inc
dec
adc
lods
rcll
int3
xor
sbb
and
sarl
ds
cltd
sub
or
sub
test
pop
sub
xor
test
add
pop
pop
cwtl
cmp
jle
mov
lods
adc
adc
and
scas
repz
dec
stc
lret
rcll
mov
stos
repz
loopne
sbb
pop
fcoml
pop
push
sbb
ret
add
shll
or
dec
pop
fisubrl
idiv
pop
movsb
pusha
dec
mov
lods
js
shlb
int
sbb
aas
xor
jb
mov
xchg
leave
das
dec
cld
js
cmpsl
push
lcall
scas
shlb
dec
xor
pop
arpl
cld
int
je
shrl
outsl
repnz
arpl
dec
adc
push
nop
mul
or
or
lds
cmc
pop
push
nop
popa
dec
add
scas
ss
shlb
in
dec
push
mov
loopne
repz
data16
mov
pop
clc
out
insl
cmp
in
xchg
lret
mov
adc
sbb
push
outsl
sub
sti
enter
lret
mov
and
and
inc
mov
cmpb
mov
cmp
dec
lret
xor
aad
sbb
jns
lret
std
push
jo
add
stos
push
push
fsubrl
aam
dec
scas
pop
mov
insb
jb
jae
mov
push
and
mov
jb
push
pop
gs
sub
xchg
mov
test
pop
popf
inc
pop
sahf
sti
adc
xor
or
dec
push
inc
lret
add
fdivs
pop
add
fidivrl
fs
push
dec
sub
dec
inc
iret
mov
nop
cld
mov
jecxz
jl
hlt
pop
idivb
mov
test
call
jg
pop
inc
call
mov
ljmp
fdivl
outsb
jmp
sbb
repnz
es
aas
in
jno
movsl
pop
test
mov
add
hlt
std
imul
shlb
fistpll
xchg
jecxz
mov
rcr
pop
sarb
xor
negl
xchg
xchg
jns
stos
sub
dec
pop
mov
mov
nop
mov
cmpsl
push
jl
mov
in
js
push
and
dec
dec
cmp
sahf
jl
iret
xchg
mov
mull
ret
xchg
int3
bound
push
out
fcoml
jmp
shrb
jg
fstpt
add
clc
jne
lds
fs
jmp
jecxz
imul
popf
mov
xchg
loop
sub
lahf
adc
and
xor
stos
insb
repnz
inc
xlat
cmp
data16
sbb
lcall
pop
push
inc
xor
inc
pop
jns
xor
repz
dec
lcall
jnp
mov
pop
sub
outsb
mov
cwtl
iret
add
inc
fidivrs
test
pop
mov
ret
mov
pop
data16
sub
and
sub
int
mov
orb
stos
pop
lods
or
fldl
fwait
and
mov
test
sbbl
inc
mov
jp
pushl
jae
outsl
mov
pop
add
js
xchg
jbe
push
push
fcoml
xchg
outsb
push
cmp
insl
sbb
and
subl
or
adc
cmp
jge
into
push
int3
enter
sbb
jg
lock
mov
loopne
jg
or
jmp
pop
sub
dec
lret
ret
cmp
mov
mov
mov
rep
inc
add
pop
shll
xchg
nop
js
in
out
xchg
data16
das
cli
ret
mov
cmp
es
pushf
outsb
test
dec
jne
mov
adc
jg
test
xor
jae
stos
fisubrl
xchg
cli
dec
cli
pop
test
hlt
idivb
sti
xchg
jmp
xor
inc
pop
pop
xchg
mov
cmpl
inc
ja
or
lea
jnp
xchg
pusha
loopne
jns
mov
in
pop
and
pop
lea
mov
orl
pop
adc
jo
rorb
pop
mov
daa
xchg
add
xchg
mov
ret
icebp
loopne
mov
cmp
setbe
ja
jp
insl
mov
or
fistl
or
push
sti
das
and
pop
and
pop
jge
in
push
push
clc
fistpll
mov
jb
cmp
add
xor
xor
xor
or
popa
outsb
inc
sti
sahf
push
cmp
adc
aad
and
cs
adcb
push
adc
jecxz
push
sbb
stos
lret
and
and
in
sbb
pop
xor
in
daa
call
fdivrp
stos
cmp
lret
fs
shl
pop
js
jecxz
push
stc
pop
mov
insl
loope
enter
cmp
xchg
pop
pop
mov
sti
mov
add
insl
jmp
jne
idivl
or
jmp
sahf
sti
xor
jns
mov
fldt
mov
sbb
cmpl
jb
ss
push
loope
or
push
cmp
pop
movsb
mov
push
and
pop
jl
and
sub
sub
pop
mov
test
inc
lret
ljmp
lods
sub
xlat
sbb
xchg
mov
repnz
es
inc
and
mov
or
cmp
mov
fdivrl
cmp
ss
je
popf
push
rol
pop
fldl
inc
shr
xchg
mov
test
push
test
aas
mov
imul
daa
pop
add
inc
mov
inc
jo
add
mov
mov
js
vdivpd
leave
push
ds
inc
cli
dec
scas
xchg
subb
dec
outsb
pushf
lds
pop
fwait
push
and
ss
add
pop
mov
testb
cmc
mov
sti
leave
xchg
es
jecxz
out
mov
cmp
pop
sbb
pop
fldl
mov
or
push
cmpsl
sub
in
xlat
sbb
out
ss
inc
inc
movsb
insl
xor
ret
jl,pt
cld
cmpsb
sub
dec
push
cmc
sub
sbb
mov
gs
xchg
cmp
and
mov
stos
push
lahf
mov
aam
les
cmp
repz
mov
xor
jne
ljmp
add
and
bound
movsl
cmpsl
push
in
mov
sbb
jg
scas
aas
inc
jle
loope
jge
sti
dec
fcomps
pop
lea
testb
pop
lds
aad
dec
das
in
loope
and
int
cmp
mov
jl
outsb
sub
test
insb
int
mov
and
sbb
jbe
imul
cmp
cwtl
repnz
jecxz
cmp
test
pop
in
rcl
xor
xchg
cmpsb
add
pop
cmpsb
jl
shlb
jge
pop
mov
adc
popw
mov
into
es
or
ret
adc
xor
popa
mulb
sbb
lret
fnop
nop
cmpl
mov
xor
sub
push
dec
out
mov
aas
push
fstp
out
sub
out
xlat
inc
fisttpl
or
add
or
xor
sub
negl
enter
jo
mov
jno
fs
pushf
mov
xor
fisubrl
adc
ljmp
push
xor
iret
ret
inc
inc
subl
add
mov
pop
xor
mov
or
jo
movsb
lret
or
add
mov
out
adc
inc
mov
subl
lahf
outsl
adc
lahf
mov
loop
adcl
sub
adc
ljmp
je
ror
cmp
out
inc
ljmp
jge
jns
and
fstl
pusha
mov
cmc
in
or
adc
jge
xlat
enter
dec
arpl
jb
cmp
lahf
imull
xchg
rorb
jbe
xlat
mov
xor
adc
imul
dec
fwait
roll
cmp
into
aaa
sbb
pusha
mov
mov
fsubl
out
add
dec
pop
mull
cmp
outsl
int3
sbb
in
jne
fwait
pop
ljmp
stc
jp
scas
jae
out
xlat
or
push
jnp
mov
sub
dec
test
push
jl
int
push
jg
lods
cmp
out
add
cmp
push
iret
je
popf
invd
lds
adc
mov
clc
jl
lcall
stc
fstpl
insl
nop
push
dec
pop
mov
jb
jno
push
jle
xchg
mov
dec
sbb
push
mov
sti
imul
faddl
xlat
push
ds
xor
into
push
or
push
es
gs
ds
lea
jecxz
inc
sbb
mov
xor
jl
arpl
sub
mov
xchg
jbe
sbb
adc
pop
sbb
jo
mov
dec
dec
adcb
xor
xorb
sbb
adc
pusha
or
mov
aad
das
movsl
andb
cmp
xchg
in
ja
imul
pop
data16
and
push
lret
pop
mov
mov
lea
sub
xchg
loopne
fmuls
pop
or
and
mov
and
mov
imul
pushf
mov
sbb
imul
lods
call
mov
and
setle
cmp
xlat
xorb
push
fisttpl
xchg
outsl
and
jle
dec
icebp
cltd
lret
loope
push
fidivrl
lods
data16
js
push
mov
and
jecxz
insl
shlb
bswap
pop
out
lcall
imul
sub
xchg
gs
ds
cwtl
sbb
cmpsl
mulb
sub
lret
cmpsl
sub
xor
in
movsb
mov
dec
ficomps
sbb
adc
mov
insb
push
push
adc
aam
inc
lret
out
mov
push
add
movsl
push
add
jecxz
mov
cli
dec
sub
jbe
or
add
mov
popa
std
loope
popa
call
ss
fcmove
push
push
push
add
js
bound
rcll
lock
out
sub
fs
lods
movsb
outsb
cwtl
dec
jl
sbb
sbb
xlat
push
mov
mov
xor
lret
adc
push
mov
dec
jno
or
scas
mov
jmp
andb
mov
lods
lsl
pop
rcll
ss
inc
xchg
adc
cmp
iret
push
sbb
jmp
lahf
and
xor
pop
sbb
add
push
bswap
xchg
fstpt
sbb
pop
aas
cmc
cmp
sub
or
cmp
popf
repnz
pop
xchg
stos
inc
jecxz
mov
out
int
lock
mov
sbb
test
mov
cld
pop
cmc
int
push
les
inc
add
jbe
call
faddl
mov
insl
clc
pushw
mov
int
or
xchg
push
add
popa
fildll
imul
imul
pop
push
fs
lods
add
fcoml
push
arpl
jge
jnp
lea
cli
mov
je
xlat
dec
les
xchg
adc
rorl
hlt
jmp
jae
mov
ret
popf
pop
and
and
jae
jo
aas
std
repnz
add
sub
xlat
cmp
cmc
mov
fs
inc
push
push
imul
add
std
xor
pop
cmp
imulb
imul
dec
jno
add
xchg
cmp
mov
dec
loopne
push
xor
fcom
dec
or
jne
add
jb
daa
pmulhw
cwtl
test
out
xchg
pop
xor
out
mov
data16
pop
pop
out
out
outsb
stc
mov
fldt
and
cmp
sti
enter
and
push
xor
ss
sub
cmp
in
dec
xchg
xchg
repnz
out
in
movsl
push
or
loop
ret
add
pop
imul
pop
jae
xor
mov
add
cmpsl
jbe
hlt
sahf
pop
les
imul
dec
fldcw
inc
and
add
jecxz
dec
jbe
mov
and
pushl
mov
jl
push
sub
inc
cs
das
xor
mov
sahf
push
sbb
rcll
xor
xchg
js
inc
rcrb
ret
push
push
sub
cmp
and
xor
out
call
lods
ret
stc
jmp
mov
mov
sub
xchg
mov
cmc
push
lret
ret
mov
stc
pop
adc
lea
out
aas
mov
inc
insb
xchg
test
mov
into
and
popa
clc
sbb
imul
xlat
mov
shl
test
ret
xor
repz
cmpsl
sbb
rolb
dec
cmpsl
stc
pop
imull
xchg
popa
or
add
xor
cmpsl
xor
jg
inc
pop
out
add
or
inc
pop
lret
cmp
mov
out
jno
xor
and
clc
out
lret
in
xor
jbe
ror
mov
mov
adc
stos
jge
cmc
mov
movsb
sahf
mov
cmp
cmp
xor
add
inc
shll
pushf
xor
sub
push
jns
icebp
fs
xor
mov
imul
repnz
mov
pop
scas
sub
sub
inc
lret
loopne
jle
mov
inc
sbb
rcrb
movsl
aad
mov
es
rclb
sbb
inc
xchg
mov
fs
int3
daa
icebp
cmpsb
dec
cld
jge
stc
in
lea
and
jg
in
cmp
inc
xor
push
leave
dec
std
push
add
call
in
cmp
pop
sahf
push
jg
xor
loope
push
rcr
sub
inc
push
les
iret
mov
mov
mov
fs
sub
fdivl
xchg
jmp
rcrl
adc
rcrb
sbb
mov
cmc
ret
mov
int3
sbb
adc
ret
iret
mov
popf
sbb
xchg
dec
scas
mov
jg
and
jmp
xor
mov
inc
cmp
int3
sbb
call
repz
aam
xchg
nop
stos
mov
mov
lret
idivb
mov
jle
mov
inc
push
pop
vmwrite
lea
aaa
inc
xor
cmp
push
push
pop
clc
in
popa
sbb
mov
mov
mov
and
cmp
and
lcallw
insl
loop
fwait
mov
cmp
stos
insb
dec
je
push
sbbb
and
ljmp
jecxz
leave
daa
in
adc
aaa
cld
pushf
std
sti
push
fildl
push
fcmovnbe
and
pop
rorb
mov
test
mov
and
pop
adcl
movsb
daa
stos
shlb
insl
pop
mov
add
stc
and
test
das
and
xchg
fimuls
dec
jmp
call
dec
incb
pop
mov
or
xor
repnz
bnd
inc
cmp
in
pop
push
mov
jae
loopne
or
les
xchg
xchg
lods
push
call
mov
push
jo
sub
or
das
jb
rcrb
stc
push
cmpsb
call
xor
outsl
adc
mov
push
lahf
into
cmp
imull
dec
in
add
or
push
cmc
notl
xchg
mov
aad
mov
mov
xchg
adc
jne
outsb
ffree
pushl
popa
lds
jne
push
or
into
out
aam
adc
or
pop
loop
loope
repz
cmp
sarb
fldenv
cwtl
xchg
loope
cmc
ja
sti
lea
cs
jg
xchg
out
mov
pusha
leave
stos
lods
adc
mov
jmp
icebp
insb
lods
jecxz
sbb
xor
loop
hlt
pop
adc
push
dec
insb
mov
push
aam
push
inc
fwait
xor
pop
inc
sbb
jns
mov
repnz
sub
das
in
fxch
stos
sbb
adc
jbe
sti
mov
adc
jg
xor
jo
pop
bound
xchg
xor
int
dec
das
xlat
sub
xchg
popf
sub
or
mov
mov
add
es
xchg
mov
sub
dec
inc
into
rolb
fsubl
ret
int3
inc
sbb
rcl
daa
mov
or
mov
out
test
push
dec
dec
fwait
add
fxch
fsubrl
aaa
fistpll
and
shl
leave
mov
sub
push
dec
fsubrl
popf
shll
in
cmp
inc
xchg
sub
addr16
ljmp
loope
filds
sub
adc
mov
adc
shlb
mov
or
and
mov
ret
jle
aas
jae
adc
fildl
push
in
xor
pop
fdivrs
mov
std
push
out
jno
call
jbe
movsl
jno
or
or
pushf
incb
loopne
inc
psraw
and
add
stos
add
clc
aas
pop
aaa
cmp
sub
jp
fsqrt
add
push
in
jo
mov
insl
cs
push
scas
movsl
popa
jle
inc
inc
imul
xor
mov
mov
cltd
or
sbb
aaa
mov
data16
ret
push
flds
loope
sbb
xor
fldlg2
mov
cmp
mov
dec
jp
notl
inc
frstor
shll
test
outsb
and
hlt
pop
inc
jbe
cmp
scas
mov
std
sbb
jp
inc
and
mov
cmp
ljmp
mov
rcr
andb
jb
les
iret
xor
shll
inc
in
fidivl
jmp
enter
or
ss
fidivs
mov
lret
or
push
dec
inc
xchg
add
stc
jnp
jmp
sahf
adc
push
push
adc
mov
test
fsub
clc
push
add
dec
sub
push
xor
out
andb
dec
lods
jp
lds
bound
mov
test
pop
addr16
jb
test
xchg
push
or
push
push
iret
jl
arpl
pushw
mov
shrb
in
and
mov
and
fdivrl
jl
outsb
ret
or
mov
inc
pop
bound
push
enter
in
adc
push
int3
cld
fldl
test
lret
mov
in
lret
out
mov
lods
xchg
daa
in
xor
rcrb
les
sub
sub
enter
lock
dec
xlat
mov
iret
js
and
xchg
push
and
sub
xor
call
std
clc
mov
into
add
pop
pop
pushf
fs
out
push
mov
and
js
lock
sbb
adc
mov
push
cmpl
jns
hlt
popf
pusha
mov
xchg
rcr
mov
inc
jecxz
in
push
sub
mov
jp
add
inc
das
mov
adc
or
adc
imul
xlat
jb
dec
data16
dec
mov
jg
fsubl
or
pop
pop
ja
sbbl
pop
adcb
or
mov
daa
bound
mov
scas
pop
scas
sarl
orb
xchg
cmp
lar
adc
dec
sub
push
pop
xchg
inc
lahf
nop
cli
add
or
sub
xchg
xor
inc
dec
pop
sbb
pop
sahf
es
cmp
cwtl
and
dec
jg
stos
pop
ljmp
inc
mov
cmp
icebp
and
or
pop
xchg
xlat
xor
sub
pop
jl
mov
cmc
inc
xchg
adc
in
add
inc
lret
dec
ret
sub
inc
test
sub
scas
lret
sahf
lret
xchg
xor
mov
sub
lret
add
int
out
mov
sbb
sub
xlat
stc
hlt
leave
mov
nop
nop
pop
mov
jo
mov
lahf
aas
ja
inc
xor
adc
clc
mov
sub
ret
push
in
xchg
hlt
js
data16
lret
pushf
mov
clc
push
movsb
iret
aas
or
inc
inc
and
test
adc
fiadds
adc
xchg
shr
ss
pop
arpl
push
ja
inc
out
outsb
jmp
dec
xorb
aam
cld
jmp
lds
or
pushf
pop
inc
cs
pop
fcoml
into
nop
pop
or
fldcw
jno
fbld
addb
stos
in
test
inc
jp
mov
inc
mov
insb
outsl
push
cmp
fistl
dec
push
in
or
mov
mov
jge
add
and
jmp
adc
push
lret
pop
rclb
insb
cmp
rcrl
fs
ret
xor
lock
cwtl
and
mov
inc
mov
or
dec
cmpl
pop
loope
orl
inc
pushl
xchg
mov
mov
pushf
int
pop
jnp
in
push
mov
push
pop
imul
mov
xchg
push
cmp
xor
jp
pop
push
dec
stos
mov
mov
push
pop
dec
cmp
int3
sub
popf
rolb
sahf
ror
lods
mov
lds
movsl
call
mov
ret
faddp
inc
sti
rcrl
lods
fidivs
enter
imul
sub
imul
lds
dec
cmp
fs
shrb
test
insb
notb
jecxz
cmpsl
mov
imul
das
sbb
push
dec
xor
and
mov
js
mov
pushf
cltd
stc
xor
inc
and
mov
push
enter
xor
xor
pop
fisttps
push
aaa
jmp
inc
shll
adc
cwtl
enter
lahf
scas
mov
adc
mov
clc
loop
bound
stc
inc
push
adcl
cmp
movsl
into
daa
ja
adcl
fdivs
sub
je
cmp
add
fs
and
out
sahf
dec
pop
xor
out
test
test
mov
loopne
mov
sbb
sub
call
sub
inc
icebp
jmp
push
sbb
jecxz
xchg
test
add
call
ss
mov
icebp
and
pop
fucomi
push
and
es
mov
push
fwait
inc
fsincos
test
push
lahf
xor
je
push
sbb
int3
xchg
xlat
leave
movsb
xchg
add
inc
div
adc
mov
jno
or
inc
mov
daa
or
stos
ds
test
and
in
and
test
jb
sti
and
jge
sbb
jns
push
outsb
into
sub
jb
fbld
pushf
cmp
dec
arpl
nop
shrl
aas
gs
addr16
clc
adc
cmp
xchg
sbb
inc
pop
mov
jl
ljmp
push
pop
stc
sub
inc
xlat
outsl
int
jb
fadds
mov
jl
sub
fists
jmp
out
inc
jmp
push
insl
cmp
outsb
out
mov
pop
faddp
stc
imul
push
xchg
or
xchg
sar
pop
xor
cmp
sar
push
push
xchg
or
pop
or
mov
leave
enter
jbe
cmp
mov
pop
bswap
repz
scas
xor
mov
stos
cmpsb
outsl
mov
arpl
push
cmp
inc
test
movsl
insb
cmp
sti
jno
xchg
rcll
or
inc
dec
mov
mov
mov
fistpl
rcrl
sbb
jp
pop
dec
pop
push
pop
scas
fs
jne
pop
xor
arpl
outsb
cmpsb
gs
insl
insl
sbb
xor
push
das
lcall
xchg
or
mov
jle
outsb
sbb
nopl
les
mov
dec
xchg
addb
jecxz
bnd
mov
scas
pusha
and
add
mov
inc
loope
cmp
jb
cmp
lret
out
adc
add
adc
inc
test
sub
cmp
xor
js
xor
mov
dec
dec
add
jp
insb
das
sub
mov
fistl
std
xor
adc
enter
shll
or
jo
int3
cmp
popw
scas
stos
pop
xchg
je
fs
inc
cmp
out
sbb
push
ds
push
cltd
out
jle
jns
popf
mov
jmp
popa
push
fnstenv
inc
mov
test
inc
movsl
cli
sbb
push
test
inc
lods
adc
add
movsl
mov
popf
sub
frstor
or
popa
push
xchg
ljmp
stos
cmc
out
cmp
mov
andb
adcl
or
fisubs
inc
mov
add
and
pop
sahf
leave
jl
aam
sar
mov
pop
out
and
mov
pop
inc
adc
and
idivl
fs
add
ja
shrb
sbb
stc
pop
dec
mov
clc
leave
sub
das
cmp
insb
outsl
repnz
lock
and
push
stc
cmpsb
cli
xlat
mov
push
imul
std
fiadds
repz
hlt
test
movsb
test
frstor
imul
les
arpl
nop
ret
stos
xchg
popf
mov
pop
sub
jno
mov
xor
repz
jbe
sub
js
push
rcrb
jno
pop
mov
xchg
jle
dec
mov
flds
xchg
nop
adc
out
fwait
addb
icebp
pop
mov
std
ret
xchg
mov
ret
gs
mov
mov
xchg
push
aam
aas
mov
fcoml
cmpsl
aam
mov
adc
and
inc
mov
and
mov
lock
mov
sub
xor
sbb
cmp
sarb
test
sub
mov
cmpsb
cmc
ret
dec
mov
push
imul
shrb
mov
pop
or
push
lahf
cmp
rcr
ret
hlt
xchg
jnp
enter
addr16
jo
xor
js
cmp
xor
roll
fs
push
inc
lret
pusha
data16
lret
mov
in
or
push
inc
iret
inc
pusha
repz
add
fcomps
cmp
sbb
lods
adc
lds
scas
arpl
repnz
add
jnp
and
adc
outsb
or
xlat
ds
lds
int
data16
bound
out
mov
iret
popf
ds
shl
inc
pop
call
rcrb
cmp
sub
dec
jge
in
fcmove
shll
push
mov
lahf
sar
mov
gs
dec
push
cmp
sbb
pop
fsubr
es
outsl
push
loop
popf
aas
sbb
clc
mov
sti
add
xchg
nop
js
jl
call
dec
push
lds
loope
cmpsl
outsl
push
pop
movsb
mov
ss
mov
jbe
rcrb
xchg
out
sbbl
loop
mov
sbb
push
sbb
jmp
aam
movsb
push
mov
ss
mov
mov
arpl
dec
mov
adc
fs
mov
cmpsb
mov
into
jmp
cmpsb
cmp
lret
ret
aaa
or
adc
or
pop
xchg
add
ss
pop
mov
sarb
and
push
cs
fwait
xor
dec
pop
mov
lods
mov
out
lds
sbb
stos
je
xor
insb
push
popa
mov
cmpsb
popf
xor
or
push
pop
imul
or
cmpsb
xchg
ffree
or
dec
pop
inc
pop
fsubl
or
outsl
push
aam
in
and
push
aas
pop
ret
jmp
shlb
cmp
push
inc
push
sub
es
outsb
or
jns
mov
xor
lods
lret
stos
shll
mov
test
cmpsl
add
mov
jbe
push
movsb
inc
xchg
ja
dec
cmp
push
sbb
or
xchg
out
pop
dec
pop
or
inc
lret
lock
push
or
mov
addr16
pop
sub
pusha
test
addr16
fisubrs
mov
scas
hlt
or
inc
add
xchg
and
cmp
push
fs
sub
jmp
pop
lret
mov
insl
test
aaa
call
movsb
popf
cmp
xlat
adc
adc
xchg
dec
push
push
sbb
ficomps
pop
or
mov
shrl
xor
push
mov
repz
js
add
push
xor
adc
in
movb
or
push
loopne
xlat
adc
push
lods
mov
scas
dec
fnstsw
push
mov
fidivs
xlat
pop
push
enter
dec
out
insl
popf
je
push
push
popa
fwait
inc
jecxz
test
pop
bound
leave
add
das
fprem
pop
pop
and
sbb
stos
pop
ljmp
rol
xchg
or
lret
xchg
jecxz
xor
jg
push
movsl
daa
loop
popa
sahf
add
pop
cmpsb
sub
push
cmpsl
pop
lcall
pop
jno
int3
push
xchg
push
in
mov
cltd
push
inc
push
movsl
pop
std
push
mov
sub
iret
or
sub
shrb
inc
in
das
cld
pop
mov
lock
mov
cmpsl
pop
or
mov
adc
inc
lods
adc
rorb
mov
jl
jnp
std
hlt
jle
and
xor
xor
pop
movsb
call
sub
popl
bound
inc
les
leave
jmp
add
std
nop
lods
mov
cmp
idivb
in
ror
sub
testl
push
cs
outsl
lahf
call
push
stc
jnp
outsb
push
roll
mov
jbe
inc
adc
lret
test
or
call
insl
mov
test
and
mov
repnz
shl
testb
lret
fbld
sbb
cwtl
add
icebp
push
pusha
mov
add
fwait
test
sahf
ss
dec
test
xorb
mov
or
test
push
jge
inc
mov
sti
cld
xchg
mov
fisttpll
pop
push
add
insl
pop
and
out
testb
lcall
lcall
sub
dec
fldt
xchg
icebp
push
inc
int3
dec
sarb
lret
xchg
shrb
dec
jb,pn
stos
ret
cmp
sub
shrb
pop
sub
ret
std
jle
enter
jp
inc
pop
shll
cmp
cmp
aas
inc
adc
repz
xor
std
pushf
or
and
push
adc
adc
cltd
push
sbb
dec
xchg
dec
iret
repnz
add
pop
mov
or
and
jns
hlt
push
std
mov
xchg
sub
xchg
stos
pushf
sbb
cwtl
das
mov
lea
loopne
aas
aad
rcrb
mov
mov
lret
cmp
mov
notl
cmpsl
in
jge
or
mov
pop
pop
pop
jmp
mov
push
addr16
sub
push
xor
mov
jbe
cmpsl
push
fistps
mov
in
xchg
xchg
sbb
fwait
cs
push
push
jae
mov
cltd
popf
lods
scas
jle
mov
insl
jp
mov
into
rcrb
or
fsubrp
addr16
cmpl
pop
and
aas
lea
adc
push
sar
je
mov
loopne
test
outsb
lods
inc
fwait
outsl
xchg
mov
movb
pop
fnstcw
sub
ret
lret
xchg
pop
stos
mov
pop
pushf
mov
cmpsb
mov
mov
shl
pop
jmp
mov
inc
mov
sbb
add
xor
sbb
sbb
jns
roll
fisubl
icebp
and
ficomps
ss
test
es
and
or
fldenv
mov
push
imul
call
inc
out
lds
adc
pop
and
imul
push
mov
mov
test
int
mov
lds
pop
xor
test
stc
xor
les
dec
jae
inc
test
cmpsl
dec
or
shlb
je
xchg
into
sub
ljmp
mov
aaa
hlt
jmp
lcall
mov
cmp
and
test
jne
xchg
int3
jmp
mov
mull
fs
bound
jo
das
jmp
lret
sub
hlt
inc
arpl
rcll
inc
mov
sub
push
mov
aad
push
or
and
iret
test
push
inc
lcall
inc
fsubr
push
push
mov
in
orb
cltd
xor
push
xchg
dec
jnp
orl
and
add
fstpt
jbe
xchg
add
cwtl
out
cmp
mov
jae
subb
pop
loope
pop
test
mov
jl
std
jno
add
dec
mov
testl
adcb
shlb
repz
stos
sahf
imul
fcoms
in
inc
loope
subl
or
add
jbe
sub
and
call
and
out
movsb
jp
stos
test
int
in
ds
in
pop
jl
mov
lret
mov
mov
mov
sbb
mov
lock
lock
and
mov
stos
mov
jno
xadd
fistpl
shl
fwait
sub
divl
sbb
out
sub
int3
js
push
repnz
sub
inc
inc
ljmp
out
fdivs
push
inc
call
or
ss
and
insl
mov
inc
adc
je
arpl
or
repz
fisubrl
shll
adc
pop
or
push
cld
in
data16
ds
jl
loopne
cmpsb
fs
inc
cmp
dec
pop
test
or
adc
testb
gs
repnz
mull
rcll
jg
out
lea
pusha
dec
cmc
push
popf
scas
push
aad
or
loop
lahf
pop
div
inc
adc
push
lcall
lea
dec
xor
imul
icebp
push
dec
inc
sub
jnp
loopne
mov
mov
mov
daa
add
pop
pushf
or
push
rorb
mov
pop
mov
push
jge
imul
jl
in
xchg
pushl
push
lret
andb
jae
xor
cmpsb
std
pop
repz
cs
jno
rcll
dec
and
jno
pop
out
xchg
inc
sub
fsubrl
test
fidivs
push
rcrb
sahf
pop
inc
and
push
scas
aaa
or
mov
and
das
mov
push
and
jns,pt
stos
dec
xor
push
movsb
cltd
xor
nop
incb
les
mov
xchg
scas
or
pop
aam
enter
in
lds
cmc
push
xor
pop
jnp
fidivs
imul
notb
rol
cld
shr
mov
cmp
mov
xor
andl
cmpsl
lahf
pop
adc
jno
pop
ds
out
fistpl
push
insb
mov
mov
arpl
sbbl
mov
pop
out
cmp
and
jg
and
shll
test
int3
shrl
xchg
push
cmpl
je
inc
xor
jge
push
mov
or
stc
sbb
ja
lods
push
jmp
imul
jnp
nop
xor
lods
clc
mov
sbb
repnz
pop
pop
dec
inc
push
mov
cwtl
pop
xchg
fwait
jmp
mov
xchg
sbb
xchg
jmp
iret
std
sub
or
pop
movsb
ds
daa
xor
push
lret
pop
xchg
cli
in
jl
cmp
jl
dec
push
mov
lret
sahf
xlat
mov
jae
dec
shrb
es
test
jmp
cltd
inc
mul
mov
clc
fisubrs
dec
movsb
sbb
mov
adc
dec
pop
xchg
jmp
sti
dec
leave
mov
lock
lahf
push
imul
pop
daa
sbbb
mov
add
or
test
push
cmp
movb
test
sbb
movsb
das
repz
lea
in
fstl
dec
xor
dec
scas
mov
mov
iret
out
cltd
xor
xor
lods
jp
dec
add
push
sbb
into
shr
ret
enter
adc
sub
and
inc
enter
fisubs
xor
pop
out
sahf
outsb
xor
mov
cld
sar
add
mov
movsb
pop
inc
nop
js
shrb
outsb
icebp
add
push
xchg
pop
fidivrs
lahf
ret
popa
je
in
sbb
cmp
dec
loope
lcall
or
lcall
loopne
repnz
pop
mov
test
dec
jp
xchg
inc
lret
inc
inc
adc
in
stc
lret
dec
mov
jp
ret
sbb
cmpsb
xchg
in
arpl
xor
imul
mov
stos
lcall
movsb
cmp
jmp
mov
xor
add
inc
out
dec
pop
icebp
loope
iret
scas
jp
repz
pop
adc
jne
in
cmp
adc
cmp
out
xchg
shlb
cmp
insb
add
sahf
push
lahf
jae
xchg
add
jnp
adc
and
sbb
call
outsl
or
jmp
xchg
push
fstl
inc
jp
add
outsl
dec
cld
cld
lcall
fldenv
mov
push
jb
sbb
clc
fs
in
out
adc
orb
cmp
sub
mov
cli
jge
xchg
aam
in
xchg
xor
subb
lds
jno
mov
jae
popf
or
push
lcall
dec
mov
iret
hlt
jne
les
add
les
cmc
push
pop
adc
add
rcr
fwait
and
jo
push
lods
push
and
sub
sbb
adc
dec
or
jo
add
popf
in
inc
mov
mov
dec
cld
out
bound
pop
mov
mov
xchg
jnp
jns
cmpsb
xor
dec
aam
pop
sbb
and
fnstsw
sbb
jo
js
inc
push
call
pop
mov
or
cmc
inc
xchg
leave
add
shrd
push
shlb
push
fildll
pop
mov
and
sub
dec
jmp
imul
dec
sti
push
jb
xchg
xlat
hlt
fists
test
aad
mov
add
mov
push
vphaddwq
fstpl
clc
add
out
fstpl
push
push
incb
bound
sub
jmp
lcall
aam
cld
popf
lds
insl
sbb
push
adcb
jns
mov
imul
test
mov
xor
mov
repnz
aad
cmp
lret
jmp
mov
dec
and
mov
insl
add
mov
xchg
shll
push
outsl
mov
adc
xchg
fbld
icebp
lahf
add
mov
dec
ja
jecxz
jge
sub
into
lea
mov
cwtl
rcl
hlt
int3
inc
cmc
and
push
pop
into
add
test
pop
xchg
pop
cld
mov
jmp
pop
faddl
sbb
out
inc
sub
inc
leave
scas
adc
push
gs
pop
stos
cmp
rol
pop
xchg
or
adcl
xchg
push
sarb
clc
add
cmp
xchg
repz
aaa
jne
dec
fisttpll
call
xchg
lcall
shll
inc
jl
sahf
mov
sbb
mov
lock
test
jle
jo
loopne
jnp
push
jp
leave
in
or
and
cmpsl
gs
jmp
test
dec
mov
mov
jmp
and
xchg
pop
ljmp
imul
jl
sbb
ljmp
mov
enter
sub
lock
push
gs
cmpsb
adc
add
jne
pop
xlat
ret
xlat
xchg
push
mov
fstl
cmp
fdivr
xor
loop
fiadds
lret
shll
adc
imul
jns
push
pop
js
inc
pop
int
leave
push
or
pop
psubw
in
mov
xchg
jl
gs
mov
xchg
iret
inc
test
lret
add
sbb
and
les
mov
test
popa
adc
mov
rorl
push
dec
ljmp
and
clc
cmp
nop
push
push
into
push
and
adcb
cld
adc
and
mov
sti
cmpsl
imul
arpl
ds
push
or
ss
jns
jo
inc
xchg
mov
fnsave
fbstp
gs
push
jae
test
sbb
popf
mov
adcl
add
jae
push
ret
pop
daa
sbb
sub
push
push
hlt
decb
lcall
mov
push
fiaddl
mov
pop
xchg
push
ljmp
dec
js
in
aas
sbb
push
int
inc
faddl
adc
cmpl
xlat
aam
fs
in
nopl
imul
jns
aam
ret
sti
mull
adc
dec
or
int3
in
dec
fwait
sti
test
ja
ja
jo
add
das
or
inc
lret
std
sti
dec
dec
mov
lds
sub
xor
mov
inc
jg
cmp
into
mov
sahf
imul
sub
push
push
inc
movsl
scas
jl
insb
mov
push
pusha
push
rclb
xor
shlb
rcl
icebp
xchg
pop
js
test
call
jle
mov
push
and
jp
lock
in
shl
inc
and
pushf
xchg
xchg
shll
sub
xchg
fwait
rclb
adc
dec
add
repnz
mov
repz
rolb
jle
pop
inc
lret
cmp
icebp
jbe
adc
lds
xchg
cmp
jnp
adc
shll
mov
out
rolb
pop
add
adc
jb
shll
xchg
inc
push
test
mov
dec
push
mov
in
sbb
push
and
addr16
repz
sarb
out
testb
pop
inc
or
add
pop
mov
push
movb
ret
mov
xchg
fxch
lds
in
jecxz
jmp
stos
insl
out
rclb
stos
push
fwait
pop
sar
test
jge
push
mov
mov
das
mov
mov
pop
cmp
and
mov
xor
push
clc
repnz
lods
fcmovne
push
dec
ret
cmpsb
inc
test
subl
add
jae
mov
pop
cmc
pop
rorl
mov
push
hlt
hlt
sbb
scas
loope
rorb
pop
pop
sbb
jmp
lret
cmp
je
pop
adc
loope
stos
pop
cli
or
sahf
into
push
mov
clc
xchg
pop
jl
arpl
popa
dec
fsts
cltd
push
ret
scas
jl
push
ret
xor
int3
mov
addr16
shrb
aaa
push
jge
aaa
stos
mov
cld
data16
cld
mov
js
jle
hlt
sub
mul
test
std
lahf
xor
cld
jb
inc
push
loop
aaa
daa
inc
push
ja
mov
cmc
cmp
push
nop
mov
pushf
jno
pop
out
test
js
adc
dec
push
add
jb
sub
aas
cmp
imul
jno
jmp
cmc
jmp
lcall
sbb
popf
add
shlb
jmp
pusha
into
inc
pop
sbb
in
mov
inc
mov
jbe
lods
push
loope
clc
mov
or
lret
mov
gs
mov
cmp
and
lds
loope
mov
mov
cltd
adc
fs
push
and
call
jecxz
sub
clc
cwtl
inc
sub
clc
out
push
adc
stos
adc
pop
mov
stos
movsb
lahf
aad
sub
sbb
mov
lock
or
push
jo
mov
and
xchg
stos
movd
sub
lea
jno
adc
adc
mov
ljmp
cmp
add
outsl
stc
scas
aam
pop
mov
insb
popf
int3
mov
mov
cmp
and
sbb
rolb
insl
movsl
push
push
cmc
jnp
and
lds
out
pop
addr16
cmp
shll
mov
xor
push
insl
push
loope
sub
inc
mov
and
jle
es
hlt
inc
add
lcall
mov
outsl
sbb
sub
pusha
gs
ljmp
mov
addr16
xchg
cli
icebp
shl
loopne
fisubrl
out
push
cwtl
fsubp
push
dec
sbb
and
xchg
lock
mov
jmp
fildl
mov
mov
mov
lods
loop
inc
inc
cmp
ret
pop
push
imulb
add
cmpsb
jno
pop
cmpsl
push
pop
aas
test
les
loopne
stos
loope
push
pop
mov
mov
jp
rcll
sub
pop
sub
add
jl
test
sub
jo
fmuls
inc
sahf
sti
add
xor
imul
mov
dec
addr16
in
dec
or
inc
mov
test
jns
mov
mov
xor
jle
sbb
imul
call
sub
andb
pop
push
sti
jbe
push
dec
repnz
or
push
or
in
cmp
stos
negl
clc
movsl
lret
ss
push
movsb
addl
lret
test
add
stos
pushf
sti
push
rcrl
shrb
mov
lds
movsl
push
cmp
out
aam
push
xchg
push
push
dec
and
in
or
cs
pop
pop
and
lods
nop
mov
sub
movsb
or
out
cmpsl
popa
push
sub
mov
mov
push
mov
jno
mov
mov
adc
mov
fistl
and
lds
cli
call
rcrb
cmpsl
popf
sbb
and
pop
movsl
xchg
add
pop
and
push
fneni(8087
cs
sbb
in
push
ja
cmp
mov
mov
dec
ret
pop
lea
pop
inc
std
lods
negl
lods
jo
or
jno
aad
mov
scas
cmp
mov
jl
cmp
popf
fiaddl
push
stc
in
mov
daa
sbb
int
sub
push
shr
rcr
sbb
and
idivb
ss
insb
jg
pop
jae
sub
cmp
pop
inc
xchg
and
sbb
adc
roll
data16
addr16
add
lock
fs
ljmp
sbb
and
jb
loope
ja
lea
ret
testb
xchg
gs
cmp
insb
pusha
nop
fsubs
pop
mov
stc
sub
pop
mov
outsl
mov
out
or
sbb
dec
mov
insb
dec
jae
dec
test
dec
outsb
leave
aas
jg
iret
adc
int
rol
aaa
adc
mov
mov
mov
dec
in
pop
aam
and
jg
pop
addl
xchg
cmc
pop
out
pushf
jge
cmp
pop
cld
clc
mov
js
cs
imul
mov
les
or
inc
popf
jo
fildll
fisubl
cmp
pop
sub
cmp
add
jne
cli
int
repnz
out
dec
or
push
aam
dec
imul
cmp
aaa
js
incb
iret
imul
pop
ja
scas
push
mov
into
lea
inc
ljmp
cmp
cmp
pcmpgtb
daa
gs
lret
cltd
push
pusha
cmpsb
aad
std
enter
cld
dec
jl
mov
mov
arpl
lret
mov
mov
push
arpl
mov
shlb
repnz
sahf
inc
jle
jo
adc
out
add
sbb
outsl
rcll
dec
enter
imul
or
loope
and
mov
pop
push
mov
lcall
in
stc
es
sahf
fdivl
xchg
sbbb
sbb
pop
daa
xchg
je
and
loopne
aad
popa
test
inc
mov
jae,pn
lds
add
jns
mov
lahf
lods
and
mov
adc
and
test
data16
dec
testl
loop
rcr
popf
clc
adc
movsb
lret
mov
mov
pop
aaa
mov
adc
test
nop
lret
add
mov
sub
into
je
add
jb
sub
xchg
push
mov
test
test
push
and
mov
inc
cmp
pop
faddl
in
movsl
push
cmp
xchg
sti
pusha
inc
rcrb
fildll
in
das
scas
xchg
sahf
dec
push
call
inc
jge
jns
js
int3
ja
stos
sub
push
xchg
cmc
popa
mov
enter
add
stos
jbe
and
gs
fcompl
cmpsl
xlat
mov
xor
inc
repz
popa
adc
and
jl
movsl
loop
pop
clc
aam
repz
ret
in
sub
gs
mov
pop
outsl
mov
sbbl
rclb
mov
mov
add
inc
jmp
dec
loope
sbb
mov
lret
sbb
xchg
outsb
in
mov
sti
outsb
imul
lock
leave
stc
xchg
addr16
call
fsubl
jp
jle
fstpt
xchg
pop
sbb
xor
ret
daa
dec
mov
cwtl
sub
stos
cmp
loopne
xlat
mov
test
mov
fcomp
cmc
push
ret
sub
mov
pushf
xchg
pop
xchg
addr16
mov
in
test
dec
pop
aas
out
xchg
leave
pop
sub
mov
rcll
ficomps
or
enter
lcall
mov
or
xchg
loopne
cmpsb
fidivrl
popf
mov
dec
mull
sbb
add
loop
jl
inc
test
scas
xorl
das
cltd
lods
fstps
dec
mov
or
and
leave
mov
and
pop
sub
fldcw
jl
bound
arpl
inc
cli
jp
mov
adc
mov
jle
pushf
into
xor
pop
incb
mov
jp
andl
adc
jl
pminub
sti
call
je
add
xchg
sti
es
std
xlat
rorl
jle
sbb
mov
push
dec
cmpsl
pop
pop
es
test
test
jmp
push
xor
jns
pop
push
sub
mov
cmpsb
pop
mov
data16
xor
mov
out
and
test
sarb
sub
lret
sub
fucomi
outsb
push
scas
inc
loope
out
aas
mov
sbb
mov
mov
jbe
sub
inc
lods
mov
add
loopne
mov
fwait
mov
xchg
add
lret
jne
or
adc
lds
mov
push
outsl
lcall
imul
mov
scas
lcall
fdecstp
and
out
inc
mov
fxch
or
mov
or
lahf
adc
lahf
cmp
xchg
and
and
pop
adc
or
cmpb
js
stc
iret
cmp
addr16
aam
ret
jbe
dec
aaa
push
pop
mov
mov
imul
xchg
cmp
xchg
insl
sbb
jne
test
and
xchg
jp
push
lcall
sbb
mov
addr16
push
cmc
sub
mov
pop
subb
inc
push
mov
xor
cwtl
push
mov
das
outsl
jmp
mov
cmp
mov
ljmp
mov
cmpsb
cmp
sbb
mov
jmp
lea
daa
xchg
mov
mov
or
jecxz
ds
lret
jne
sub
xor
sahf
aas
fnstcw
add
cwtl
mov
shlb
jmp
cmpsl
push
loop
loopne
inc
cmp
jmp
cmp
sub
jmp
mov
dec
test
ljmp
jo
mov
jg
push
data16
aaa
int
mov
into
cltd
ret
dec
push
sbb
je
xchg
notb
inc
xor
add
js
pop
decl
lds
data16
aad
stc
out
mov
cmp
lahf
daa
or
lret
push
cmpsb
pop
adc
xchg
test
cltd
mov
xchg
and
inc
js
hlt
jmp
lds
lret
sub
imul
stc
mov
and
insb
cmp
inc
jge
imul
sbb
adc
rorb
outsl
xor
hlt
hlt
lret
jmp
nop
das
out
or
mov
rcr
aad
mov
shlb
mov
sub
xchg
je
mov
sub
mov
or
mov
cmp
shl
bound
bound
xchg
xchg
xchg
sbb
orb
test
xchg
push
mov
ret
call
inc
repnz
mov
fwait
xchg
sahf
and
jbe
add
in
rclb
jne
cli
mov
sub
mov
call
aad
sub
shlb
mov
cmpsl
clc
mov
fistpl
shld
cmp
sbb
dec
jnp
cmp
outsl
repnz
push
sub
pop
mov
pop
xchg
cmc
inc
lea
in
xchg
mov
mov
jb
or
stc
jp
adc
add
lret
loope
push
xchg
pop
add
sbb
pop
xchg
int
mov
inc
ljmp
dec
iret
push
xchg
or
pop
sub
mov
aaa
xorb
dec
aam
mulb
sub
pushf
mov
jns
cmp
xchg
ja
js
in
and
pop
aad
jns
mov
pop
outsb
mov
inc
pop
mov
jecxz
sbb
and
pop
mov
add
testb
test
arpl
or
mov
lcall
add
inc
mov
xor
sti
cld
mov
cmpsb
adc
lea
xor
js
sarl
push
or
mov
jg
out
xor
stos
mov
or
push
andl
ret
repz
xchg
mov
mov
dec
and
enter
and
adc
and
or
int
fidivl
mov
into
outsb
ss
mov
dec
mov
repz
popa
jl
mov
mov
push
aaa
dec
push
fs
xchg
adc
fistpll
lods
cmp
pop
and
xor
cld
insl
and
mov
int3
int3
cmpsl
into
jp
stos
ret
fs
jae
lods
hlt
inc
push
adc
sbb
mov
jmp
loope
ja
cmpsl
xor
and
xchg
sbb
pusha
mov
xchg
or
push
xor
iret
frstor
outsb
insl
aam
gs
push
pop
jne
mov
sub
adc
cmp
je
mov
push
pusha
movsl
in
inc
xor
fs
cmp
or
mov
inc
test
insb
mov
dec
mov
or
inc
test
inc
push
mov
jp
jge
jb
cs
pop
int3
adc
mov
dec
push
xchg
mov
enter
mov
dec
loopne
dec
sub
xchg
pmulhw
test
inc
mov
inc
cmp
stos
stos
call
adc
push
jmp
pop
jmp
cltd
sub
cmp
push
push
fwait
mov
cmp
pop
adc
cmp
ljmp
test
cltd
fists
and
shll
push
sub
cwtl
arpl
in
jmp
js
lcall
aad
push
je
pop
jge
je
fistpll
jg,pt
loope
adc
sti
fistpll
ss
sub
lock
pop
jne
jbe
push
sbb
mov
push
lret
inc
pop
popa
hlt
pop
mov
xchg
pop
inc
mov
les
cmp
andl
xchg
nopl
or
scas
dec
push
sarb
bound
jmp
pop
push
popa
pop
leave
lock
jne
fistpl
outsb
iret
stc
in
cmp
pop
scas
das
ljmp
les
in
lods
sub
test
into
or
mov
mov
push
cli
mov
sbb
and
push
mov
push
in
inc
in
add
push
insl
mov
dec
out
sbb
hlt
scas
imul
or
mov
icebp
cmpsl
test
icebp
push
or
mov
lret
dec
push
scas
loopne
cmp
jbe
xchg
daa
frstor
dec
dec
and
orb
push
leave
pop
pop
adc
adc
or
add
clc
imul
xchg
mov
or
dec
fdivrl
jno
fmulp
push
mov
xlat
int
ja
jns
stc
or
sub
xchg
xlat
gs
jmp
xchg
clc
imul
int
mov
inc
or
cmp
mov
add
and
dec
les
mov
int3
mov
xor
and
pusha
jns
jno
lds
bound
cmpsb
xchg
mov
push
mov
sub
jmp
add
sub
addl
mov
ret
outsl
xor
pushf
mov
test
jae
vpmacsdql
and
mov
test
pushl
sub
jo
mov
bnd
sbb
cmp
add
or
mov
and
xchg
mov
cmp
js
mov
inc
mov
adc
sub
adc
aam
adc
repnz
mov
mov
addr16
and
push
xor
inc
inc
jp
push
outsl
sbbl
sub
sub
push
inc
addr16
and
pop
movsl
sahf
push
ja
add
jb
mov
ficoms
xchg
dec
pop
decb
xor
je
push
mov
and
dec
test
mov
push
int
orb
mov
sub
inc
in
pop
jge
arpl
push
push
xchg
jb
scas
pushfw
mov
repnz
dec
sub
arpl
and
jecxz
mov
lret
jp
jecxz
data16
test
mov
xlat
lcall
inc
cmp
call
lcall
sub
pop
jmp
push
daa
insl
jmp
mov
ss
popf
cli
iret
and
mov
inc
jle
dec
lret
fimuls
xchg
mov
cmp
cwtl
cmp
push
ret
jmp
add
xchg
rorl
pusha
idivb
jnp
adc
daa
push
jmp
outsb
fwait
mov
jnp
mov
fs
insl
xor
imulb
rcr
dec
pop
cmp
pop
xor
sub
fisubrl
subl
push
pop
xchg
mov
scas
pop
lods
jbe
pusha
xor
insb
and
mov
aam
inc
sar
mov
ljmp
xchg
mull
in
inc
push
pop
in
dec
rcrb
dec
aam
jge
mov
or
inc
enter
movsb
mov
xor
cmp
sbb
mov
std
fdivl
dec
push
add
dec
pop
sub
addr16
cmc
dec
xchg
dec
aas
pop
pop
sarl
jne
pop
or
cmpb
dec
and
pop
jno
dec
call
mov
mov
push
push
icebp
cmp
xchg
adc
cli
adc
fisubs
gs
push
leave
pop
cli
xor
or
mov
int
stos
sarb
hlt
mov
scas
pop
adc
imul
inc
popa
xor
imul
fwait
inc
or
xchg
mov
jno
jge
lea
adc
outsb
jge
fwait
mov
cmp
xor
ja
jno
xorb
movsb
xor
push
dec
inc
decb
roll
jno
sub
shrb
xchg
and
inc
cli
xor
fisttps
mov
xchg
insb
ficoms
iret
pop
pop
stos
jle
add
xchg
and
mov
sub
test
filds
bound
movsb
cmpl
imul
loopne
jne
mov
fimuls
andb
loope
inc
add
push
lds
lret
jb,pn
ret
lods
out
fsubs
mov
sub
adcl
fbld
cmp
mov
ret
ljmp
fldcw
pop
push
sbb
jne
fidivrl
cmpsw
xlat
lods
push
rcrb
cmp
data16
test
pop
nop
xlat
js
sub
pop
inc
fcomps
in
and
aaa
popf
jae
mov
icebp
mov
pop
dec
pop
sbb
pop
pop
in
xor
sub
lahf
sarl
in
push
js
add
and
es
mov
jae
xchg
fdivrl
shrb
add
outsb
dec
fs
out
sarb
pop
add
xchg
xchg
adc
dec
pop
mov
xor
sub
mov
mov
mov
jecxz
or
cli
ret
clc
shl
daa
lcall
cmpsl
ficompl
aad
scas
ret
jle
push
xor
push
dec
ss
jle
push
inc
cld
push
push
mov
or
pushf
sarb
inc
inc
mov
mov
out
adc
xor
lock
movsb
jnp
sub
sbb
lods
pop
adc
pop
mov
test
mov
cli
loope
xor
rorl
add
xchg
push
sub
adc
mov
inc
test
push
add
addr16
stc
mov
fs
mov
mov
push
push
je
shrl
pusha
lods
in
stc
data16
jb
test
sbbl
cmpsl
jbe
mov
pop
shll
pop
cmpsl
ss
clc
lock
lock
jo
pop
xchg
mov
pop
out
sub
sahf
into
inc
in
enter
aad
sub
and
lods
push
in
pop
sbb
dec
mov
fsubrs
fmull
adc
mov
cwtl
push
mov
push
push
fisubrl
mov
sub
testb
xchg
adc
sub
orb
mov
xchg
pop
dec
subb
movsl
push
cmp
dec
sbbb
mov
jle
push
add
or
cmp
cmc
cmp
adc
push
push
dec
cmp
inc
sbb
add
xchg
mov
test
push
mov
xchg
paddsw
aad
cwtl
mov
jno
xorl
in
jb
dec
mov
scas
mov
out
fnstcw
or
sub
pop
popa
leave
jnp
pop
scas
iret
iret
dec
sti
aam
xchg
dec
xchg
insl
imul
push
call
inc
idivb
loop
fidivs
cli
jno
pusha
mov
in
inc
xchg
xchg
lcall
jbe
lahf
sbb
lods
aas
or
popf
loopne
sbb
mov
dec
xchg
and
cmp
sub
push
push
mov
xchg
aam
sti
cwtl
jns
mov
popa
imul
sub
mov
in
mov
xchg
pop
mov
aaa
jmp
inc
in
jno
jo
test
orb
leave
rorl
sub
mov
mov
popa
enter
dec
xor
mov
rcrb
adc
xchg
and
add
push
sub
add
iret
adc
jmp
test
pop
pop
ljmp
fmulp
inc
daa
fadds
sub
fmull
lods
pop
cs
dec
xchg
inc
jae
movsb
cmp
mov
add
adc
and
xchg
pop
loopne
test
je
xor
out
test
push
mov
movsl
jle
shrb
pop
and
cmp
popa
pop
sahf
inc
mov
xchg
repz
cmp
test
pop
insl
push
lods
push
inc
aaa
cmpsb
jbe
imul
shl
sbb
inc
jae
ja
gs
add
push
minpd
inc
xor
jp
stc
int3
mov
add
or
imul
xor
push
les
shrb
dec
xor
pop
enter
mov
loope
fbld
out
mov
inc
aad
dec
push
mov
out
rorb
cmc
sbb
pop
notl
xor
int
sbbl
mov
dec
push
mov
and
push
mov
and
jnp
fldenv
shlb
aas
les
xlat
sub
xor
inc
mov
dec
hlt
lahf
inc
ss
push
jns
gs
cmp
repz
xchg
inc
jae
stos
sub
xchg
xchg
dec
jecxz
iret
xor
ljmp
scas
jbe
mov
shl
or
cmp
test
sub
sub
xchg
push
pop
loopne
cmp
clc
mov
add
insb
mov
iret
xor
mov
xor
int3
add
mov
push
cmc
mov
in
lcall
xchg
mov
test
lods
or
mov
out
jge
sub
fsubp
mov
repnz
jnp
cmc
dec
stos
xchg
adc
call
push
test
adcb
test
in
pop
cmp
lock
cli
cli
nop
pushf
cmpsb
mov
mov
ficompl
pusha
aaa
jge
negb
jecxz
push
jle
or
xchg
xor
cs
and
sti
mov
dec
cmp
xor
sub
xchg
mov
popf
cmp
pushf
rcr
ds
mov
bnd
sub
lods
adc
lret
adc
push
push
dec
inc
and
mov
inc
subl
mov
inc
push
xchg
xchg
mov
push
cmp
imul
push
aam
es
inc
addb
out
jp
rcll
or
dec
repnz
mov
sti
sbb
pop
in
mov
sti
mov
stos
pmuludq
flds
jae
imul
ret
outsb
xchg
imul
adc
lcall
mov
clc
add
mov
pop
push
clc
loopw
out
inc
or
pop
push
push
pusha
pop
movsb
or
push
sbb
cmovns
outsb
mov
mov
inc
jl
and
lret
push
xchg
xor
inc
adc
add
dec
dec
mov
mov
push
push
fs
pop
loope
jl
movsl
mov
int3
cmp
pushf
out
jle
in
push
fucomp
and
mov
inc
popf
lret
jae
call
data16
mov
out
push
jmp
and
lock
inc
jne
or
test
jnp
or
arpl
mov
cmp
xor
ds
fsub
cmp
mov
mov
sub
xchg
adc
push
sbb
out
mov
xor
pop
mov
mov
out
outsb
out
popa
or
aam
pop
xchg
or
aam
jmp
fstps
das
jp
arpl
jae
popa
and
or
sub
pop
mov
jg
xor
dec
les
in
push
sub
test
aaa
mov
xchg
mov
nop
andl
sub
push
rorb
popa
push
ret
out
push
mov
or
mov
leave
mov
cltd
in
inc
sbb
fwait
mov
cmp
pop
mov
or
cmpl
repz
test
imul
iret
jbe
and
fmull
incl
adc
add
loope
cmpsb
xor
mov
mov
mov
aaa
or
fs
mov
pop
jge
push
push
fldcw
and
jp
mov
fwait
adc
dec
js
cli
or
test
sbb
push
mov
add
gs
out
outsl
sbb
jl
mov
loopne
dec
mov
pop
test
push
pop
das
lahf
jno
jbe
ret
push
pop
and
dec
add
add
inc
adc
xchg
sbb
mov
cmp
push
jne
into
sbb
popf
js
xchg
pop
icebp
push
xchg
aaa
mov
lcall
push
outsb
fbld
lcall
or
mov
int
pop
push
or
pop
cmpl
push
mov
cmpb
xor
xor
out
mov
xchg
pop
mov
pop
push
lods
cwtl
in
push
adc
dec
pop
xlat
loop
push
push
mov
stc
sbb
insb
je
jmp
mov
repz
push
in
rorb
and
ljmp
mov
rcll
shr
inc
mov
xor
ja
xchg
mov
or
xchg
incl
das
mov
sahf
out
or
dec
mov
mov
inc
xchg
movsb
insb
stc
in
popf
scas
cs
cmp
cltd
fdiv
sbb
pop
cmc
dec
outsl
add
call
lcall
push
mov
sub
sbb
sbb
cltd
push
or
mov
push
ss
and
add
xor
data16
into
xorl
jle
cmp
push
mov
jae
mov
mov
stc
cmc
js
add
scas
pop
mov
mov
mov
into
dec
mov
sub
fldl2t
stos
mov
push
clc
mov
clc
shlb
lahf
xor
xchg
inc
imul
inc
adc
lods
jmp
lds
or
cs
mov
mov
xchg
dec
jbe
push
lea
mov
fnstsw
and
in
lahf
out
scas
sub
cmp
xor
adc
clc
imull
fldenv
cld
xchg
mov
xchg
xlat
pop
sbb
ljmp
popa
sub
sbb
jp
cmpsl
adc
mov
sbb
or
mov
icebp
pop
fmul
jns
push
test
xor
sbb
xchg
xchg
movsl
inc
adcl
rcr
add
mov
and
call
push
cmpsl
les
mov
mov
ss
test
jo
push
repz
pop
push
cmc
mov
cli
inc
data16
mov
pop
mov
cltd
mov
lcall
in
mov
xor
mov
adc
xchg
cmc
jno
adc
lahf
out
fdiv
pushf
addr16
inc
imul
pop
movsb
xlat
mov
and
popa
xchg
add
popa
es
inc
lret
mov
fs
ficoml
jns
sbb
and
push
lds
add
cmpsb
neg
mov
in
inc
push
out
fisubrl
faddl
loopne
add
sub
xor
push
popf
sub
aas
cmp
aas
mov
sub
out
inc
xor
xor
dec
pop
or
sub
roll
mov
cmp
lods
rcrl
cltd
inc
xor
inc
mov
cli
lahf
fwait
add
push
es
aam
lret
into
and
adc
test
movsb
movsb
call
addl
push
cwtl
add
ror
push
rolb
push
repz
in
cli
addr16
fldcw
pushf
mov
sbb
sbb
test
or
out
test
sub
fnstsw
je
sub
or
mov
xchg
mov
sahf
ljmp
sbb
dec
cmc
shrl
sub
ficoms
adc
pop
pusha
data16
pop
out
mov
mov
test
test
fidivrl
add
mov
mov
loopne
pop
test
push
scas
mov
loope
test
sbb
enter
and
sbb
popf
add
lods
xor
stos
pop
or
pop
cwtl
cwtl
inc
jae
fstpt
ret
jno
add
or
pusha
ljmp
das
loope
xor
sub
and
mov
idiv
cwtl
clc
and
loopne
fistpl
xor
pop
mov
rcll
or
mov
popa
in
out
call
imul
rcll
mov
and
in
in
mov
out
push
pop
rcrl
adcl
mov
cltd
lea
scas
bound
idivb
js
adc
enter
adc
ja
push
push
adc
xorb
ffree
dec
adc
into
mov
sti
out
cmp
xor
push
jge
pmulhuw
mov
cmc
addr16
fwait
dec
cwtl
cld
lahf
mov
xchg
clc
arpl
cmp
jbe
jae
mov
mov
rorl
es
mov
rcr
mov
mov
jp
mov
pop
addr16
nop
pop
jge
pop
pushf
xchg
stos
mov
jae
mov
les
mov
aam
mov
sbb
xchg
out
and
scas
ljmp
in
mov
sbb
mov
stos
pop
adc
fwait
mov
imul
pop
es
pop
add
cli
lret
negb
adc
xchg
xchg
js
popa
insl
ja
loop
rcrl
adc
pop
or
xlat
push
jns
mov
dec
mov
arpl
mov
pop
lea
jo
dec
mov
mov
arpl
inc
push
addr16
shll
pop
not
push
in
clc
outsb
mov
notb
loop
push
mov
outsb
mov
rolb
out
pop
push
adc
push
adcl
imul
ss
mov
cltd
and
mov
pop
push
rcrb
push
mov
movsl
into
xchg
and
dec
cmp
sbb
and
lods
leave
popf
adc
xchg
mov
push
mov
pop
es
out
push
sbb
lock
push
add
jecxz
ret
cli
aad
inc
test
nop
push
push
jmp
sarb
add
jg
ret
mov
or
stos
jg
call
or
mov
push
mov
mov
xchg
fnstcw
push
cmp
aam
sub
cmp
xchg
sbb
cmp
fdivr
je
stc
mov
sbb
iret
icebp
cmp
ljmp
ljmp
mov
lahf
xor
jmp
xor
in
mov
daa
jb
push
dec
imul
xor
mov
inc
pop
jno
push
test
mov
mov
addr16
shll
ja
xchg
int3
cmpsl
cmp
cmp
dec
mov
clc
sub
pop
pop
iret
add
outsl
mov
sar
movsl
cmc
and
jecxz
fimuls
fldt
push
inc
sahf
fisubrs
and
cmpsl
fnstenv
xchg
les
inc
gs
pop
mov
cmp
push
int3
pop
daa
iret
inc
pop
xchg
iret
adc
inc
jae
js
stos
add
fistpll
dec
xchg
sbb
insl
sti
gs
push
imul
cmp
add
and
add
push
jecxz
push
jbe
push
jl
mov
or
lea
pop
dec
mov
ret
bound
push
add
jb
push
sbb
popa
sbb
and
mov
adc
xchg
int3
cmpsb
mov
lcall
xor
dec
mov
adc
into
ret
push
sub
dec
mov
and
xchg
xchg
dec
xchg
scas
nop
adc
inc
popf
xor
fdivrs
imul
fbstp
mov
ds
call
stos
nop
lcall
jo
mov
rcrb
sahf
xor
imul
fstpt
mov
cli
xchg
mov
mov
adc
adc
scas
mov
movsb
jo
push
pushf
lcall
aaa
ret
arpl
outsl
sbb
add
push
ja
out
lock
or
cmpsb
cltd
cmc
dec
pop
mov
es
popa
lods
fcomps
push
test
mov
sbb
aam
into
adc
out
lock
mov
outsl
sti
arpl
fists
push
fwait
lahf
sub
jp
mov
mov
lret
out
cld
iret
out
sbb
xchg
adc
xor
xor
lret
pop
mov
mov
shrl
push
das
adc
das
xchg
push
mov
push
mov
cltd
iret
dec
jns
jecxz
jo
gs
jo
jge
movl
xor
adc
andb
sahf
mov
daa
clc
repnz
pop
test
push
stos
jecxz
out
push
cltd
lcall
mov
fcmovnb
dec
in
repz
or
add
shlb
sbb
inc
stos
imul
subb
add
fildll
stos
xchg
sub
mov
enter
mov
xchg
xchg
sub
aam
mov
repz
cmp
and
add
inc
pop
mov
flds
popf
push
repnz
sub
xchg
stos
sbbl
test
movsb
inc
movsb
xlat
scas
jmp
cmp
les
add
push
lahf
push
inc
jo
inc
adc
mov
dec
dec
mov
lret
jmp
inc
stos
xchg
mov
mov
push
pusha
adc
mov
jmp
nop
loope
or
in
in
mov
inc
lcall
es
adc
xchg
inc
js
out
aam
xchg
icebp
stos
xchg
dec
inc
or
icebp
push
aad
or
stc
mov
sub
jne
push
loop
es
aam
rclb
mov
mov
negb
sti
andl
test
jno
in
in
nop
adc
xor
sbb
cmp
jg
cmp
clc
pop
dec
adc
pop
sub
xchg
into
inc
xchg
sahf
lea
sbb
pop
cmpsb
push
ds
fld
mov
rolb
scas
add
dec
mov
lds
xchg
xchg
leave
mov
push
into
add
cmp
push
jg
je
xor
fsubl
stos
mov
hlt
cltd
ret
mov
push
repz
mov
ljmp
dec
jb
jmp
sub
sub
insb
in
orb
lods
iret
inc
inc
mov
in
and
out
jl
mov
push
push
mov
push
add
jbe
js
pop
cmp
lods
les
inc
pop
outsl
movsl
repz
pop
cmp
xor
inc
lea
push
stos
pop
insl
sbb
xchg
out
dec
and
lods
jne
or
into
pop
inc
pop
jg
mov
arpl
lret
pop
int
xchg
pop
xchg
mov
push
clc
in
and
jge
fwait
pop
xchg
and
adc
xchg
repnz
cmc
or
daa
scas
lock
leave
mov
ja
jecxz
jb
dec
repnz
mov
or
push
sar
out
and
inc
jno
cmpsl
pop
inc
mov
in
pop
xlat
adc
add
adc
sbb
sbb
enter
add
test
xchg
pop
sahf
add
in
adc
sbb
pop
xchg
ja
or
icebp
xor
gs
lcall
jo
sahf
es
imul
sbb
ss
inc
and
jo
cmp
and
cmp
test
scas
mov
cmc
rcll
sti
pop
js
pop
dec
dec
mov
pop
sbb
orl
fmuls
xor
and
dec
adc
pop
rcrb
das
imul
jmp
inc
dec
add
xorb
jle
lock
mulb
mov
xor
or
shll
dec
jp
or
inc
jae
and
scas
repnz
add
sbb
sbb
aaa
stos
cmp
out
mov
js
add
ss
inc
lcall
repz
and
push
cltd
fwait
test
jle
cmpsl
xlat
shlb
iret
pop
leave
xor
cmp
and
imul
xchg
pop
hlt
mov
adc
inc
cli
push
shrb
insl
scas
lods
ret
out
push
adc
mov
add
sahf
sub
mov
bound
pop
jns
test
stc
mov
jo
xor
jecxz
scas
jl
fadds
mov
fistps
mov
jl
or
dec
js
mov
test
mov
add
jecxz
jno
cmp
sub
sub
push
dec
test
les
test
or
cmpl
jbe
xor
out
cmpb
add
push
std
movsb
jne
push
xchg
in
scas
dec
dec
aad
icebp
fsts
fcoms
add
jb
jle
cmc
jmp
out
push
loopne
pop
pop
or
or
test
jo
push
subb
pop
mov
cld
mov
mov
outsl
cli
leave
mov
mov
xor
and
movl
ss
ret
stos
sti
mov
loope
cmpsl
cmp
fdivrs
stc
scas
lock
push
into
inc
xchg
ficoms
bound
pop
loop
jle
mov
test
iret
les
mov
int3
xlat
cwtl
popf
jecxz
adc
dec
mov
cmp
adc
movsl
test
and
rol
es
mov
daa
scas
incb
daa
ror
dec
pop
jns
es
push
out
xlat
inc
divb
test
std
sbb
mov
int
shrl
bound
movsl
inc
mov
sahf
dec
xchg
enter
dec
out
out
rorb
icebp
popa
and
test
mov
jge
adc
lock
sub
xchg
push
or
xor
bound
mov
push
mov
xor
xchg
int
or
xor
scas
lods
push
cmp
push
addl
add
cs
ljmp
sbb
sbb
rcr
fmuls
and
mov
add
cmp
pop
ret
jle
push
sarl
jns
mov
ja
xor
int
jb
clc
cwtl
mov
rorb
scas
test
fldl
add
jb
inc
pop
mov
xchg
xchg
or
cmpsb
dec
jnp
sbb
inc
dec
and
scas
and
stos
dec
out
outsl
data16
cmpsl
xor
mov
push
mov
sub
mov
nop
mov
sbb
inc
dec
cmp
mov
jg
xor
inc
mov
mov
add
or
subb
sbb
sbb
sbb
adc
mov
cli
push
js
sbb
fidivrs
push
sbb
mov
mov
jmp
pop
sbb
shll
jns
push
mov
push
cltd
add
lods
jg
or
sarl
popf
shlb
pop
dec
add
sti
dec
stos
lret
push
xchg
pop
mull
lods
pop
adc
mov
out
into
inc
sahf
out
mov
inc
cld
or
push
ja
inc
stos
fwait
ret
jle
ret
mov
cmp
dec
push
scas
ficoml
lods
jge
xor
stos
ret
and
pop
sub
push
lock
jle
enter
cld
test
aad
fmull
adc
outsb
mov
inc
add
test
xor
mov
pop
int3
imul
lods
jae
inc
xchg
jbe
ss
cmp
mov
das
sarl
adc
imul
xchg
mov
insb
add
mov
nop
mov
push
jne
mov
negb
push
xor
fbld
xchg
xchg
push
test
push
jne
lods
lds
or
xchg
xchg
shr
cmpb
xchg
jg
jne
icebp
dec
lds
or
pop
adc
loop
jns
or
add
mov
jmp
cmp
push
push
push
loop
dec
out
push
mov
push
daa
inc
lahf
mov
aaa
bound
loop
jno
or
das
imul
mov
mov
rolb
outsb
daa
mov
pop
inc
lock
ja
push
aaa
ftst
mov
adc
call
xlat
ficomps
cmc
sar
xor
imul
jle
jns
cli
push
dec
into
add
gs
adc
ret
clc
shl
jg
cmp
mov
pop
add
inc
int3
dec
push
dec
ret
pusha
repz
sbb
pop
pop
sub
in
in
cmp
mov
xchg
push
and
lret
or
pop
lods
out
jo
fisubs
push
ljmp
hlt
stos
scas
je
lock
je
xor
aas
sbb
xchg
adc
xchg
hlt
xchg
push
jp
inc
in
sbb
push
lret
xor
push
jbe
andl
jecxz
nop
pusha
ret
xchg
movsl
outsb
test
pop
loopne
mov
outsb
jp
ret
dec
pop
xchg
push
cmp
in
xchg
fs
lods
imul
outsl
jle
sub
cli
or
repnz
and
inc
call
pop
push
sbb
addr16
aad
lcall
test
or
lahf
es
xchg
push
loope
lcall
and
cmpsb
cmp
mov
stos
xchg
or
mov
das
cmp
out
and
cwtl
mov
movsl
sub
in
mov
sbb
fsubrl
pop
pop
rcrb
mov
jg
sub
and
aas
aad
mov
outsb
mov
jge
mov
das
in
aaa
push
xchg
jg
shlb
inc
movsb
iret
xchg
xchg
cmp
xchg
sbb
test
pop
xchg
mov
xor
dec
or
xor
adc
out
mov
or
insb
mov
sub
mov
and
jmp
xchg
outsb
hlt
aaa
cmp
cmp
js
gs
inc
jl
outsl
mov
loope
stos
repz
ja
cld
iret
mov
mov
out
pop
cmp
mov
test
nop
cli
or
adc
aas
xchg
ljmp
sbb
call
inc
pop
je
jns,pn
or
je
rorb
dec
lods
ss
cltd
loop
xlat
mov
out
pop
xchg
mov
cmpsb
mov
dec
xor
pop
jae
mov
ja
or
mov
mov
test
cmpsb
int3
in
loope
enter
movsb
xchg
sbb
push
push
xlat
xchg
sbb
cmp
inc
js
dec
cld
ss
loopne
inc
sub
in
addr16
or
stos
bound
cmp
lahf
dec
jmp
push
cltd
bound
mov
inc
dec
sub
inc
lret
push
js
mov
push
add
lcall
push
in
jne
inc
mov
loope
mov
mov
sarl
mov
adc
xchg
or
fnsave
icebp
add
xor
cmp
sub
or
add
mov
jae
data16
mov
dec
pop
ret
push
mov
ljmp
data16
into
call
mov
repnz
aam
pop
mov
lret
add
jl
pop
sub
pusha
arpl
mov
sub
xor
lods
xor
sbb
push
fidivrs
xchg
testl
repz
jb
aad
xchg
fsts
repz
push
mov
sbb
scas
xchg
pop
pop
out
lcall
cmp
ds
bswap
data16
mov
fnstcw
pop
sti
aas
andb
stc
push
jmp
cld
sub
subl
stos
mov
shll
cs
mov
inc
in
xchg
adc
ds
std
pop
divb
pop
dec
cmpsl
ret
sub
das
and
push
shlb
inc
or
es
ljmp
or
mov
jl
js
jp
inc
cltd
pop
adc
scas
ss
lods
test
into
cwtl
bound
or
push
push
pushl
add
pop
popf
aas
add
les
inc
add
addl
or
jg
pop
push
add
cmp
repz
cmp
sbbl
scas
sub
inc
lock
ss
fcmovnbe
ret
scas
test
mov
mov
orb
sub
xlat
adc
loope
cltd
cmp
adc
pop
sahf
clc
popf
jb
out
ljmp
pop
shrl
pop
ds
and
push
or
fs
dec
out
inc
push
fdiv
push
jl
mov
das
jnp
cli
daa
lret
int
int3
testb
and
in
cmp
stos
inc
movsl
jnp
mov
lret
ja
xchg
inc
jmp
ds
pop
xchg
das
jne
cld
xchg
xorb
out
push
leave
fdivs
and
cwtl
jmp
movsl
in
mov
and
mov
lds
lcall
mov
xchg
bndstx
dec
jp
sbb
mov
das
dec
pop
iret
lock
or
cmc
shl
push
adc
mov
fidivrl
outsb
dec
mov
rolb
adc
add
mov
jnp
pop
cmp
in
hlt
sub
dec
and
xchg
fdivs
lcall
or
dec
jp
shrb
push
aas
aas
cmp
rorl
out
pop
fidivl
push
sbb
dec
push
fidivs
mov
sub
jmp
fmul
xor
je
loopne
js
scas
into
or
adc
pop
in
push
push
xchg
mov
mov
mov
nop
jecxz
push
mov
les
xchg
sahf
stos
pop
int
adc
call
cs
adc
clc
fwait
mov
xchg
dec
stos
mov
jbe
int
stos
out
xor
lea
xchg
mov
mov
xlat
cld
adcb
aaa
jmp
std
pushf
or
cmp
test
cmpsl
pushf
mov
bound
fcmovb
ljmp
jbe
dec
jbe
push
rcr
test
test
in
xchg
xchg
es
xor
in
xor
and
cmc
stos
xor
cwtl
aad
sar
int3
or
dec
pushf
or
outsl
xchg
out
movsl
fcomps
sub
lret
jecxz
pop
mov
push
xor
adc
popa
cmc
add
pusha
and
daa
mov
cli
in
sbb
and
imul
cmp
jae
ja
in
or
fs
enter
sti
cmc
xor
or
and
xlat
std
adc
pop
push
shll
sub
xchg
push
cwtl
into
add
fildl
push
lods
dec
cmp
mov
inc
and
cmpsl
and
xchg
and
nop
int
mov
adc
int
sub
cmc
jecxz
icebp
pusha
es
and
out
shr
cld
jb
sbb
xchg
int
push
fnstenv
scas
xchg
stos
daa
pop
jecxz
cmp
fwait
test
sbb
hlt
insl
mov
rcrl
stos
push
xor
push
andl
subb
or
int3
fbld
hlt
rolb
pop
test
sub
lods
mov
leave
pop
mov
pop
xor
aam
push
adc
jbe
inc
mov
and
int
outsb
add
jae
cli
pop
aas
inc
add
mov
cmpsl
cmp
popa
and
idivl
daa
inc
mov
inc
data16
dec
cltd
stos
outsl
pop
xchg
dec
arpl
pop
lods
adc
cli
rorl
out
mov
stos
push
cltd
ds
and
and
mov
daa
or
filds
call
cmpsb
dec
xor
pushf
adc
pop
jnp
mov
es
mov
lock
ljmp
adc
test
insb
sbb
fiaddl
jg
dec
popa
mov
fs
ficoms
sbb
sub
pusha
add
mov
enter
out
add
test
mulps
pop
pop
rclb
jecxz
out
sahf
das
in
movsb
fisubs
sbb
sub
push
push
icebp
rcr
xchg
sub
cli
jne
add
test
lret
pop
ret
cmp
cld
nop
aaa
xor
subl
aam
flds
xor
jns
sub
xchg
cld
cmp
add
or
jne
or
fs
scas
loop
and
push
mov
mov
inc
leave
stos
xor
adc
hlt
outsb
push
popa
or
test
or
push
jo
push
xchg
imul
cmp
push
mov
rolb
inc
inc
xchg
mov
xchg
arpl
out
movsl
cmp
lods
dec
add
mov
or
mov
lods
mov
repz
out
sbb
ret
pop
popa
mov
or
and
dec
andl
add
idivb
mov
sbb
loopne
mov
daa
shr
ret
cmp
insl
negb
repnz
and
je
inc
jb
popf
scas
and
and
add
adc
cmp
sti
mov
pop
and
addr16
popa
adc
popa
mov
rcrl
and
inc
mov
cmc
xlat
gs
or
lock
sbb
fcmovbe
bound
jmp
daa
cli
mov
mov
insl
dec
dec
dec
loop
stos
pop
sbb
xchg
pop
adc
pop
inc
pop
add
mov
loopne
dec
adc
pop
ret
mov
xchg
jb
out
popa
orl
in
lcall
in
or
push
xlat
std
lods
jb
daa
lret
push
shlb
test
ss
xchg
std
sub
subb
rcrl
test
add
mov
and
out
mov
or
lds
test
outsl
roll
stos
daa
and
pop
arpl
std
pop
leave
dec
aam
rorb
das
jge
fisttpl
stos
xor
add
lret
jnp
push
pop
andb
jae
pop
xor
pop
mov
mov
shlb
jno
jle
mov
pop
mov
scas
outsl
ret
jle
jmp
adc
mov
scas
and
jno
cli
adc
gs
push
out
dec
xchg
popf
sbb
push
data16
cmpb
incb
pop
fsubr
push
push
pop
addr16
idivb
std
dec
std
out
iret
aad
arpl
sbb
fmull
hlt
popa
aad
addr16
or
out
cmp
insl
adc
nop
negl
pushf
bound
adc
insl
js
test
mov
sub
jnp
jae
pusha
add
jnp
out
mov
imul
pop
xchg
and
or
add
imul
mov
mul
and
rcll
fildl
push
mov
sbb
jecxz
arpl
pop
popf
mov
or
adc
mov
sub
test
pop
mov
icebp
pop
xchg
fisubrl
repz
mov
mov
or
aam
fimuls
addr16
insl
rcll
gs
mov
xor
std
imul
dec
mov
lea
jmp
enter
fcmovnbe
out
pop
repz
aas
and
push
inc
pop
popa
or
jnp
subb
pusha
sbb
inc
call
xor
xor
in
xchg
sbb
mov
cs
xchg
rcll
stos
fs
jmp
shll
xchg
push
xchg
xor
mov
jno
add
push
dec
out
or
call
mov
cmpsl
scas
sub
sbb
in
pop
ss
xchg
cmp
vaddpd
in
mov
sub
das
xor
loope
dec
sub
lcall
and
stos
add
fisttps
ljmp
mov
fidivrl
adc
out
rorb
divb
dec
out
xorl
rcrl
movsl
dec
mov
jno
test
add
clc
je
ljmp
pop
lds
xchg
lahf
orl
dec
icebp
add
xchg
mov
cwtl
inc
aam
fidivrs
sub
call
mov
shr
int3
clc
push
mov
mov
je
fstpt
sbb
sub
sti
aad
cli
icebp
shrb
push
pop
mov
js
mov
ficoml
cltd
aad
insl
adc
data16
pop
push
aam
in
lds
and
dec
sub
mov
daa
in
push
and
push
mov
mov
jmp
dec
cltd
outsb
imul
pop
imul
sub
sub
push
jl
pop
sub
sub
sbb
push
fucomi
lret
loop
xor
mov
fwait
mov
data16
movsl
add
in
shll
push
mov
sub
cmpsb
fwait
lods
enter
das
les
xchg
hlt
xor
leave
scas
inc
mov
add
pop
inc
xchg
sbb
cmp
pusha
mov
scas
movsl
add
adc
add
call
cltd
push
cld
shll
lods
sub
mov
mov
arpl
sbb
mov
jge
out
mov
pop
outsl
adc
jmp
shll
stos
or
adc
push
push
nop
iret
ds
lds
inc
dec
rcrl
cmp
mov
call
loopne
push
add
mov
adc
dec
xor
push
stos
outsl
aam
ja
mov
cmpsl
sub
mov
mov
pop
cmpsl
call
or
cmpsl
cs
sti
cmp
inc
and
xchg
or
sub
outsl
add
test
cmp
aaa
or
adc
shlb
popa
popa
xlat
jecxz
or
mov
out
sub
dec
and
stos
and
push
lcall
mov
out
pushf
inc
lods
addr16
push
lcall
sub
inc
dec
and
xchg
cli
adc
sti
inc
jmp
daa
jno
les
sub
add
xlat
aas
je
pushl
xor
adc
xor
or
mov
add
es
out
fcom
test
insl
std
lcall
js
sbb
sti
inc
aaa
adc
inc
cmp
push
lods
push
das
mov
jle
xchg
insl
mov
jmp
pop
xor
mov
pop
cmp
lock
out
sbb
ret
mov
push
adc
mov
loop
fs
and
enter
mov
in
in
fsubrs
adc
js
stos
addr16
leave
cmp
add
cld
cmpsl
cmp
xor
inc
adc
cmpsb
xchg
int
in
jl
rcrl
je
inc
cs
sbb
and
pop
or
mov
pop
popf
dec
dec
sbb
cmp
ss
ret
inc
jbe
lds
xlat
movsb
insb
xor
ficomps
jp
sbb
loopne
in
daa
movsl
inc
mov
lods
add
inc
adc
sbb
lea
pop
pop
das
dec
push
jno
adc
hlt
aaa
cmp
not
inc
test
popa
insl
push
icebp
mov
mov
sbb
icebp
negl
xlat
mov
push
cmp
pop
lods
push
xchg
aam
pop
sahf
pushf
jmp
and
movsb
js
jbe
popf
adc
jecxz
jo
cli
mov
insl
push
or
out
shr
pop
sbb
push
xor
lret
push
popa
rorl
adcb
mov
lfs
pop
cld
pop
jne
mov
xor
xchg
sub
in
adc
call
xchg
add
rcrl
mov
mov
in
or
jo
aad
and
mov
cli
xchg
adc
into
cmpsl
aad
adc
addr16
mov
sub
jmp
dec
test
mov
aam
xchg
daa
out
in
stos
jno
cmp
pushf
push
sahf
cmp
sub
sub
sub
mov
pop
and
hlt
lods
mov
cmc
pop
pop
and
out
adc
dec
cld
adc
push
sahf
sub
add
aas
pop
adc
adc
mov
mov
idivb
jo
out
inc
mov
pop
mov
xchg
dec
fsubl
daa
jns
dec
ret
testb
clc
jle
rcr
je
ret
sub
loop
cmovb
insl
cmc
insb
xlat
push
mov
fsub
xor
sbb
stos
fdivrl
fimull
add
push
xor
mov
push
adc
dec
decb
dec
jg
js
stc
and
dec
push
rolb
xor
push
pop
shrb
jmp
fists
into
into
mov
mov
xchg
jae
push
xchg
es
bound
inc
pop
stos
push
test
or
pop
jnp
sahf
mov
cwtl
into
sub
movsb
imul
push
xor
sbb
xor
fdivrs
filds
adc
mov
enter
inc
pop
das
fcmove
mov
mov
jl
insl
cld
fsts
push
daa
movsb
mov
mov
xlat
imul
xor
add
call
and
mov
xor
sbb
adc
push
mov
and
xor
cmp
mov
xor
cmp
hlt
sbbb
mov
or
cwtl
aas
je
mov
sub
rcr
and
shrb
mov
push
pop
rorl
jae
test
nop
mov
cmp
cs
repz
mov
test
lods
push
mov
xorl
nop
imul
xchg
mov
dec
jmp
das
jecxz
pop
jne
fcoms
fwait
lahf
cmpsl
jae
gs
xchg
std
gs
fistpl
fsubp
popf
push
das
and
xor
ret
or
rcrb
jb
idivl
rorl
add
out
adc
int3
mov
jo
adc
das
pop
int
js
add
lret
hlt
mov
in
xchg
cmp
push
xchg
add
jbe
mov
jo
enter
adc
andb
into
dec
cld
in
or
add
add
add
aam
out
outsb
inc
enter
hlt
das
sti
mov
loope
int3
out
sbb
jnp
add
insl
bound
fnstenv
jecxz
jmp
mov
scas
adc
sbb
or
outsl
mov
inc
xlat
xchg
mov
jnp
enter
stos
lods
test
into
mov
scas
lret
cmp
in
lea
mov
mov
mov
xor
pop
xchg
cmp
insl
mov
ret
jo
mov
xor
xchg
sub
jle
ljmp
je
aad
inc
aas
test
mov
fsub
ficomps
adc
pop
imul
add
and
sbb
fst
idivb
out
or
jle
mov
in
test
sub
adc
nop
mov
sbb
and
cmpsl
cmp
inc
pop
mov
push
test
sub
bound
xor
sub
mov
ror
add
pop
pop
rcrl
pop
punpcklwd
sbb
adc
scas
xchg
testb
inc
add
aas
cmp
fiaddl
stos
cltd
loopne
xorb
jo
stos
jb
scas
xlat
into
aaa
push
lret
or
xchg
cmp
cli
lea
mov
and
xchg
mov
addb
sbb
sub
inc
loopne
or
mov
lahf
inc
jge
inc
jne
push
or
incb
mov
ret
cmp
sbb
dec
aad
shrl
testb
out
sbb
cmp
scas
cli
or
and
popf
repnz
das
jae
das
sbb
jle
pop
std
in
shl
aad
sub
sub
sub
push
mov
mov
pop
mov
xor
or
jnp
shll
outsb
pop
inc
adc
dec
dec
loop
jl
arpl
push
push
out
lock
jle
xchg
fsin
or
dec
movsb
sub
popf
fsts
cmp
je
movb
sbb
repnz
xchg
mov
inc
fidivl
jae
jns
mov
push
sub
cmp
pop
bound
pop
in
pushf
jmp
int3
je
fisubl
dec
pop
add
std
cmpsl
mov
leave
mov
aad
push
cmc
jge
push
enter
xchg
cltd
xor
ja
shll
mov
popa
insl
mov
sub
lods
inc
pop
jl
cmp
push
jno
sub
or
lret
arpl
scas
xchg
pop
and
or
icebp
sub
adcl
aas
fmuls
popa
hlt
loope
cmp
stos
mov
add
mov
insb
cmpsl
add
ret
test
ret
xchg
sbb
sbb
xor
cmc
sub
cwtl
in
push
inc
into
pop
es
mov
push
jecxz
fxch
sub
repz
xchg
fisttpl
cmpsb
inc
shll
cmpsl
or
inc
or
push
cs
arpl
fucomi
xchg
cltd
push
outsl
loope
bound
and
xchg
jge
xchg
xchg
je
repnz
sub
gs
testl
insb
lret
in
movsl
or
jg
add
mov
stc
inc
stos
orb
xchg
jecxz
adc
inc
loopne
add
mov
add
add
sbbl
loop
xor
push
nop
out
inc
mov
adc
cmp
ficomps
mov
mov
jns
mov
push
inc
imul
push
outsl
stos
xchg
jns
repnz
mov
addl
nop
sub
and
adc
aaa
stos
adc
lret
xor
mov
xlat
call
fbld
push
rorl
and
pop
push
cmpsb
mov
lods
adc
cld
cltd
lret
call
rclb
mov
mov
inc
pop
flds
cs
js
lea
sub
mov
push
xchg
mov
dec
into
cmc
aaa
ljmp
aas
int
push
add
test
mov
pusha
into
mov
jmp
shlb
cmovle
popa
add
xor
pop
scas
pop
loopne
xor
pop
insb
stc
insb
lea
xchg
ds
jo
inc
adc
aam
jle
lock
jecxz
stos
sbb
sahf
fsub
adc
int3
insl
xor
or
bound
and
xor
stc
inc
cwtl
sarb
je
or
ja
xor
fidivrl
scas
mov
pop
test
icebp
adc
pop
pop
cmp
mov
xchg
jge
cmpsb
cmc
push
setno
jbe
cmp
outsl
and
sub
push
jns
les
cmp
sub
ret
sbb
cmc
adc
or
das
or
lea
or
rorl
pop
pushf
or
nop
cmp
pusha
bound
jb
mov
pop
mov
mov
inc
hlt
adc
jns
fwait
xor
out
aad
lods
mov
xor
jp
add
addl
bsr
inc
cmp
aas
push
in
ss
push
mov
scas
cmc
inc
popa
cli
call
and
push
sbb
rorl
aaa
mov
mov
rcrb
fists
lahf
inc
dec
icebp
dec
push
ret
adc
jo
out
sub
sahf
xchg
fwait
mov
popa
icebp
mov
pushf
cld
pop
push
xor
arpl
push
pop
push
cmpsl
pop
out
repz
enter
nopl
xor
jmp
fcoml
wrmsr
lahf
test
stc
ror
psubusb
ja
push
insb
jb
add
mov
sbb
jbe
add
aas
mov
test
jle
dec
xchg
add
mov
adc
jb
mov
cmp
mov
pop
jp
int3
fucomi
mov
inc
int
jmp
jbe
xor
add
mov
notb
push
test
mov
sbb
sbb
fwait
jg
sub
or
ret
cltd
ss
push
mov
add
fidivrl
sbb
jp
hlt
mulb
stc
stos
mov
data16
enter
mov
outsl
xchg
sbb
lods
xorb
int3
js
cli
dec
dec
and
lret
lahf
addr16
movsb
popa
orl
mov
lahf
xchg
and
scas
mov
stos
gs
ljmp
iret
ret
dec
xor
lock
inc
mov
xchg
call
ffreep
adc
gs
ficoml
pop
jbe
jnp
fldl
fmuls
jg
xlat
pop
lahf
scas
xor
aam
xchg
mov
lds
cmpsl
in
enter
insl
mov
xchg
mov
repnz
lret
xchg
cwtl
and
or
pop
lcall
stos
lds
rclw
and
cli
out
mov
jp
add
push
cmc
jb
dec
pop
cwtl
cmp
dec
push
sti
xchg
mov
adc
xorl
cmp
dec
mov
pushf
fsubl
add
test
cmpsb
aas
scas
pushf
pop
mov
sub
jb
cmc
jne
or
movl
repz
sbb
mov
sbb
jle
mov
nop
shlb
push
dec
mov
rorl
xchg
cmp
outsb
insb
inc
cmp
subl
rorl
negl
xor
movsb
inc
cmp
cwtl
ds
push
add
adc
push
mov
cmpsb
popw
pusha
jbe
in
dec
in
sahf
out
mov
xchg
cmp
cltd
insb
push
inc
mov
xchg
xchg
pop
test
push
lock
mov
clc
test
mov
sbb
xchg
mov
test
dec
rcrl
xor
test
xor
and
push
mov
jns
mov
pop
mov
fimuls
repnz
pop
lods
jnp
inc
and
pop
xor
xchg
xchg
addr16
aad
test
jp
orl
sub
push
stos
mov
pop
cli
mov
mov
push
test
sbb
adcl
dec
std
scas
xor
fcompl
mov
outsb
cmpb
sub
lds
sub
lea
testl
jmp
mov
das
and
sub
lea
pop
and
stc
fwait
shl
shll
sub
sbb
pop
imul
data16
enter
cmp
sub
rsqrtps
clc
jg
inc
pop
popa
movsl
mov
cld
mov
int
pop
jne
pop
mov
and
jge
pop
movsb
inc
sbbl
call
cmp
inc
faddp
mov
cli
rep
inc
out
clc
clc
in
std
stos
fcomip
popa
lock
mov
dec
jo
xor
pop
gs
mov
scas
pop
push
and
dec
push
dec
fs
cmp
mov
addl
push
cmp
cli
sbb
xchg
jb
negb
push
push
dec
jmp
xchg
dec
out
in
arpl
test
push
sti
push
xchg
pop
push
pop
sub
int
rcrb
enter
mov
sbb
jle
repz
aad
test
std
push
filds
les
xchg
test
add
and
sti
out
out
inc
pusha
fisubl
jns
cld
fs
sar
jl,pn
dec
dec
test
cmc
mov
jne
pop
fdivr
repnz
enter
dec
jl
scas
popa
aaa
minps
sbb
insl
je
adc
es
in
jl
mov
or
stos
ret
mov
dec
push
cwtl
fwait
pop
ficomps
into
sbb
xor
stc
push
or
dec
ficompl
add
repnz
mov
sub
jge
pop
mov
shl
push
flds
and
or
mov
push
pop
cmpl
sub
or
push
sti
inc
mov
cmc
dec
movsl
sub
inc
dec
mov
imul
aam
dec
repnz
xor
pop
ret
push
inc
jb
dec
jo
ret
pop
jmp
push
xchg
cmpsb
pop
xchg
push
sbb
inc
dec
mov
add
inc
mov
mov
push
pop
jge
call
mov
aas
bound
add
jae
push
vmovdqu
out
mov
loope
filds
std
jg
xchg
int3
decl
pop
push
ret
inc
or
mov
dec
jecxz
dec
in
hlt
push
lock
jge
sub
xor
sub
cmp
jp
push
and
int3
xor
pop
push
inc
bound
push
popa
cmc
xchg
out
scas
adc
repnz
inc
or
mov
jge
lods
sbb
mov
mov
loope
xchg
das
inc
xlat
lock
pop
fisubl
jns,pn
insb
outsl
loopne
push
jbe
stc
inc
iret
fcoml
aaa
lock
adc
ljmp
js
sti
pop
shrl
add
popf
adc
inc
rorb
pop
dec
push
test
xlat
callw
xchg
push
outsb
lods
cwtl
mov
aad
mov
xchg
pop
bound
leave
pop
xor
out
push
test
mov
in
in
and
cli
dec
sbb
sbb
jle
dec
addr16
cwtl
ja
negb
mov
jne
adcl
xchg
lods
mov
xchg
mov
xor
call
icebp
adc
pushf
insb
jo
xchg
dec
inc
bound
fcoms
pop
fldt
inc
mov
sbb
xorb
push
cmpsb
iret
xor
dec
std
nop
mov
sbb
dec
adc
fsubrl
sub
sub
xchg
outsl
push
out
int
pop
sbb
mov
lds
fidivl
pushw
fists
jg
mov
and
jle
jno
fstl
inc
pop
push
pop
xor
lret
mov
pushf
nop
lock
sub
sbb
xor
scas
sarb
aam
outsb
adc
ret
ret
mov
testb
loopne
outsb
mov
add
mov
inc
or
mov
jb
mov
and
shll
cmc
or
jp
sbbl
adc
xchg
sbb
js
neg
add
push
ficompl
or
ss
dec
arpl
fdivl
sub
shlb
ljmp
xchg
inc
ficompl
pop
and
inc
movsb
cli
mov
cltd
pop
push
ja
mov
sbb
ret
lahf
arpl
mov
cli
lods
cs
xor
outsl
fidivs
mov
in
push
xchg
inc
out
cld
xor
adc
in
pop
shll
rcr
push
xchg
loopne
inc
jne
fldcw
imull
cmp
lea
push
add
and
es
mov
sub
jbe
inc
cmpsl
sbb
and
push
push
sbb
or
aad
fcomps
pop
hlt
inc
fdivl
add
scas
xorl
cmp
sbb
adc
inc
xor
out
nop
mov
xorl
test
push
ss
cmp
push
jmp
add
mov
jecxz
lret
sbb
cmp
test
jb
fs
cmpl
mov
lea
adc
stos
fsubrl
hlt
test
cmpl
add
add
mov
jo
test
int3
xor
cmp
and
pusha
dec
rolb
dec
sub
push
fistpl
fiadds
mov
mov
jp
adcb
xchg
pusha
xchg
push
sbb
icebp
in
out
loop
adc
fimuls
and
xchg
inc
mov
popa
test
inc
mov
dec
push
jno
outsb
xchg
push
lcall
pushf
lods
cmp
cmpsb
data16
jo
push
or
lret
mov
test
outsb
leave
in
xchg
and
mov
in
movsb
mov
adc
xchg
push
inc
xor
cmc
cmp
sahf
lcall
sub
push
mov
sbb
rcrl
dec
mov
std
pop
mov
scas
sti
pop
sarb
rcrb
xchg
stos
xorb
sbb
dec
jmp
or
xchg
xchg
cmpsb
mov
push
sub
inc
or
lods
mov
xor
push
aas
add
out
cs
push
in
in
mov
ret
mov
jns
lahf
sub
xchg
lods
mov
mov
and
cvtsd2ss
lcall
pop
jmp
adc
cmp
inc
leave
mov
xchg
out
fistpl
dec
sarb
jmp
test
mov
mov
es
pop
adc
xor
push
add
faddl
mov
repnz
pop
jmp
int
adc
or
adc
xchg
idiv
xor
jmp
mov
jge
lret
xchg
mov
mov
jmp
or
sbb
pop
jmp
and
pop
dec
clc
imul
xchg
pop
cmp
ficoms
icebp
push
movsl
sub
cwtl
adc
mov
inc
iret
pop
or
jns
jae
mov
xchg
icebp
mov
rcrl
push
or
ret
scas
out
lock
mov
pop
push
iret
xchg
in
icebp
or
mov
iret
pop
mov
les
mov
sub
ss
add
test
xlat
adc
pop
arpl
add
es
idiv
dec
inc
cwtl
cld
mov
cs
dec
mov
lods
cmp
ss
sub
xor
inc
sbb
jnp
or
aad
add
xchg
fistpl
outsl
aad
hlt
mulb
aad
je
pop
xor
jl
pushf
sbb
sub
sbb
sbb
notl
push
dec
xor
inc
hlt
sub
xchg
adc
push
insl
xchg
pop
add
faddp
add
das
rol
in
shlb
inc
enter
aas
sahf
loop
hlt
inc
out
push
lds
ficomps
inc
imul
lods
mov
pop
push
mov
imull
dec
pushf
jno
push
aam
adc
mov
pop
jge
lods
inc
cmpsl
inc
adc
leave
push
loope
jno
fndisi(8087
sbb
cmp
loop
and
add
xchg
notl
icebp
add
mov
sahf
push
pop
cltd
pop
insl
scas
cld
pop
jno
in
sub
or
pushf
cmpsl
mov
jns
test
pusha
hlt
add
imul
sbb
push
bndldx
and
jns
mov
jne
mov
adc
negl
lods
sbb
jp
loope
jns
out
int
push
dec
es
arpl
mov
jmp
pop
rorl
js
pop
into
sti
sbb
push
pop
mov
inc
sbb
in
ss
cmc
mov
into
sub
cvttps2pi
push
sbb
enter
xchg
or
fsubrl
cmp
dec
xor
leave
mov
cmp
cmp
add
jp
pop
mov
jge
jo
and
mov
sub
les
jbe
rcrl
dec
push
mov
jae
add
ljmp
add
dec
add
testl
or
arpl
inc
adcl
jbe
jnp
test
push
mov
imul
mov
mov
push
outsb
loopne
dec
mov
sbb
push
mov
in
fcompl
nop
into
mov
das
add
xchg
pop
stc
in
outsl
test
sbb
cmp
xchg
push
cmp
rcrb
lods
aas
xor
jp
push
jo
ud1
jns
aad
aam
dec
mov
in
mov
scas
cli
push
outsl
adc
mov
dec
mov
add
dec
icebp
jae
fwait
andb
cmp
xchg
cltd
inc
push
fimuls
test
xlat
addr16
pop
push
pop
sub
add
xchg
inc
push
mov
call
mov
ficoms
xchg
add
push
std
mov
cmovs
add
mov
test
imul
xor
xor
mov
ja
xchg
enter
ja
mov
mov
fsubl
or
movl
gs
xor
mov
mov
pop
enter
mov
stos
xor
inc
pop
inc
fdivrl
jg
roll
xor
movsb
lods
pop
aad
sub
cmp
fildl
sbb
sti
pop
daa
and
lock
data16
sbb
sahf
clc
xchg
mov
sbb
sub
jmp
dec
cmp
sbb
jbe
push
xchg
sub
jne
mov
mov
inc
call
jmp
dec
addr16
jae
rcrl
push
push
adc
push
ret
sbb
aad
sbb
add
inc
test
stos
cmp
lods
nop
mov
or
mov
mov
popl
das
insl
jmp
cmp
or
in
lret
shrb
subb
mov
incl
dec
sub
fwait
jp
rol
fdivrs
aaa
sbb
dec
fmull
cmp
nop
pop
and
into
and
adc
aad
jns
xlat
shl
sbb
xor
mov
push
push
sahf
adc
cmpsb
mov
cmp
fadds
fbld
ljmp
mov
bound
das
test
jmp
fwait
xor
in
jle
mov
scas
mov
sbb
add
push
int
mov
cli
and
inc
loopne
fadds
mov
outsb
inc
sti
rcrb
dec
mov
mov
xchg
and
nop
pop
in
pop
push
lods
jae
fnstenv
mov
cs
lods
push
cltd
jle
add
adc
xor
add
push
ss
lods
push
jg
adc
in
push
pop
test
daa
dec
cmp
fcmovne
sahf
mov
jb
sub
xor
jne
insb
les
xor
cs
inc
mov
sub
movsb
mov
inc
push
jno
cmp
and
fdivrp
aaa
push
adc
out
adcb
sbb
jl
call
sbb
mov
jne
pop
xlat
push
mov
pop
xor
mov
and
orl
cmp
jecxz
bound
insb
push
mov
xchg
test
xchg
jo
adc
fisubl
arpl
js
push
xchg
imul
dec
test
pop
sub
xchg
cmp
int
in
iret
fstps
out
in
lods
pushf
jo
roll
push
mov
push
adc
jg
das
sbb
gs
scas
fcomip
and
inc
mov
adc
mov
ret
int3
cld
jns
adc
mov
loop
aas
fucomip
mov
mov
jge
xchg
push
mov
jne
in
mov
ljmp
jl
or
cmpb
jb
pop
inc
test
test
fcoms
xchg
mov
push
mov
negl
pop
and
movsl
xchg
cld
jae
pop
mov
jbe
cmp
cmp
fidivl
sub
mov
cmpb
push
inc
jns
aad
cmovbe
test
xlat
push
repnz
mov
cld
xor
into
inc
les
cli
and
adc
into
xor
es
movsl
fs
add
mov
into
fsts
pop
loope
fisttpll
data16
and
scas
cmp
cwtl
rcrb
iret
xor
repz
shr
fs
push
in
sub
cmpl
inc
sub
test
notb
mov
dec
out
xchg
adc
jl
orb
pop
cmc
push
out
pop
inc
or
inc
daa
mov
xchg
outsb
mov
lcall
push
cmc
out
clc
jp
push
dec
xchg
sbb
xchg
int
push
xor
lods
loope
call
and
stos
dec
ret
or
cltd
pop
inc
sbb
push
and
fs
or
imul
retw
pop
fisubrs
xchg
pushw
pop
int
pusha
fisubs
icebp
dec
add
dec
or
ljmp
cmp
cld
mov
sti
sbb
inc
in
es
pop
lods
mov
mov
inc
je
xlat
inc
push
lcall
sbb
ljmp
imul
pop
in
insl
adc
push
ja
adc
leave
sbb
or
cltd
loope
sub
stos
mov
add
test
das
mov
add
insb
into
xchg
lret
loop
jae
jno
dec
xchg
adc
das
pminsw
jb
bound
xchg
pop
push
push
dec
test
int
or
sub
gs
dec
fwait
stos
outsb
enter
insl
adc
inc
test
testl
dec
leave
lret
add
loope
xor
sub
sub
popa
xchg
dec
mov
leave
inc
add
mov
loopne
mov
sbb
in
xchg
insb
xchg
lock
fcmovne
je
movsl
mov
push
add
into
sbb
jnp
dec
pusha
push
mov
iret
sbb
popa
fimull
stc
stos
lcall
xor
pop
xchg
inc
sub
cmp
out
mov
mov
xor
cmp
fstl
mov
mov
or
fisubrl
mov
sti
cli
push
dec
idivl
in
sbb
subl
test
dec
mov
push
out
mov
mov
cmp
pop
pop
unpcklps
cmc
dec
xor
sbb
cmp
inc
mov
cmp
xor
jmp
xor
shl
loope
scas
sbb
repnz
pop
jp
jl
add
xor
xor
cs
int3
push
add
jb
shrb
ja
jl
lret
xchg
mov
pusha
call
stos
push
sbb
or
cmpsl
push
sub
sub
stos
adc
je
roll
adc
mov
push
hlt
jno
adc
js
loopne
scas
sbb
mov
mov
cmp
hlt
pop
pushf
or
xchg
inc
adc
dec
test
xor
dec
into
int3
inc
xor
pop
outsl
sbb
fwait
stos
daa
cmpsl
xchg
inc
or
xchg
add
or
push
testb
add
add
roll
stos
mov
clc
fildl
frstor
addr16
dec
outsb
inc
cmc
adc
dec
xchg
loopne
lds
inc
and
cmpsl
adc
movsb
and
ds
inc
sahf
mov
cmpsb
mov
push
popa
stos
sub
add
fstl
xchg
fldt
sbb
rcll
inc
push
pop
leave
jle
loope
gs
mov
add
sub
mov
xor
adc
sub
jecxz
insb
repz
scas
jecxz
sarl
push
and
sbb
add
adc
divl
mov
or
movsb
or
iret
jae
xor
mov
sahf
dec
push
push
shrl
cmp
ret
and
testl
ljmp
xchg
stos
std
pop
cmp
jmp
mov
in
pcmpeqw
sub
add
jo
adc
jbe
mov
cmp
inc
pop
in
add
cmp
dec
loop
jnp
lcall
testl
scas
adc
jmp
popf
dec
lret
mov
ss
cwtl
mov
pop
adc
popf
adcb
stos
cwtl
mov
mov
cmp
mov
xor
test
pop
pmulhuw
push
jmp
les
add
mov
aam
imul
mov
shrb
out
adc
mov
icebp
dec
dec
jmp
add
jnp
flds
pop
adc
cmp
dec
ja
add
xor
mov
pushf
pusha
rclb
mov
dec
popf
add
cmp
xchg
pop
out
push
cld
xor
xchg
sub
push
loope
jmp
fisttps
mov
push
push
xor
outsl
dec
sarl
or
sub
daa
shld
scas
jbe
xlat
inc
and
clc
push
sub
dec
iret
sbb
xor
mov
ss
push
inc
aaa
pop
lods
and
adc
movsb
add
xchg
outsb
mov
dec
into
push
xor
pop
fdivs
or
mov
xlat
push
pop
fcmovne
ljmp
add
movsl
xchg
scas
es
and
lods
addr16
or
inc
aad
pop
inc
xchg
clc
jmp
popf
insl
cli
fbld
out
fsubs
and
addl
arpl
in
out
or
pop
dec
int3
pop
in
in
push
jle
aad
or
ds
sahf
cmpsb
add
nop
mov
add
push
cmp
mov
pop
imul
lods
add
ret
lods
fldl
sub
int3
push
jle
xorl
xchg
outsb
popa
sbb
dec
mov
pop
cs
fisttpll
cmpsb
and
and
sarl
movsl
add
and
aad
dec
mov
inc
sbbl
mov
lds
daa
fldcw
not
ret
mulb
xchg
inc
push
push
and
pop
or
push
div
mov
pop
lods
mov
ja
mov
xchg
xchg
mov
inc
adc
add
sub
imull
cmp
jns
addr16
ret
push
mov
jb
mov
xchg
mov
fsubrs
loopne
mov
movsb
and
pop
pop
mov
shr
sub
push
dec
dec
ret
xor
jmp
pop
cld
inc
push
fmuls
fimull
arpl
nop
xchg
data16
adc
sti
pop
in
mov
mov
stc
clc
sub
pop
aam
jns
push
fs
aam
jmp
push
hlt
lahf
lcall
icebp
mov
hlt
gs
aaa
notb
or
ja
fs
nop
or
movsl
add
aam
inc
mov
sbb
scas
jle
outsb
sub
mov
push
pop
insb
add
sub
lret
das
es
push
cltd
cmc
repz
in
lret
fwait
xrelease
fidivrl
fadd
aas
out
mov
pop
push
mov
adc
lods
pushf
out
mov
mov
aaa
idivb
clc
sub
jno
sub
and
data16
call
repnz
add
push
mov
xchg
mov
and
mov
dec
jg
mov
xor
mov
push
in
xor
mov
pusha
test
xor
subb
xor
aam
sub
stc
gs
mov
or
les
sub
jp
jae
outsl
jg
xor
arpl
adc
add
fdivrl
stc
imul
cs
jp
inc
jns
pusha
test
fbstp
repz
lds
shl
jmp
inc
cli
push
mov
lahf
cmpb
inc
jg
push
in
out
bound
pusha
sub
mov
test
sbb
ss
gs
dec
add
addl
icebp
dec
pop
lods
mov
push
and
jl
outsb
mov
add
loop
inc
mov
scas
jl
xor
xor
lods
arpl
xlat
rolb
pushf
push
mov
dec
call
lret
mov
and
ljmp
push
negb
xor
mov
xchg
mov
shl
lcall
das
cmp
mov
fs
repnz
pop
sbb
in
add
push
inc
ficoms
sahf
lahf
or
sub
and
fiaddl
xor
outsl
adc
xlat
cwtl
cmc
test
sub
mov
mov
cmpsb
movsb
cmpsb
mov
aad
add
outsb
add
test
insl
shrl
and
std
jmp
push
and
mov
fistpll
adcl
das
leave
pushf
loop
fmull
push
scas
add
pop
inc
fstpl
mov
sahf
leave
insl
xchg
addr16
leave
clc
xor
push
push
inc
sub
loope
ja
mov
mov
inc
add
cmp
sub
adc
lds
push
lret
adc
into
es
scas
xchg
inc
jae
dec
push
movsl
ss
sub
add
jns
xor
pop
rcrl
mov
cmc
pop
sarl
lds
movsb
lcall
scas
inc
cmp
jg
sub
lea
or
pop
sbb
fs
add
iret
hlt
xchg
aad
push
in
lcall
pop
pop
xchg
xchg
movsl
dec
mov
mov
jb
adc
clc
hlt
inc
int
jo
push
pop
movsl
cmp
fwait
jle
mov
sub
pop
push
cmp
xchg
es
xor
repnz
jnp
sbb
or
xchg
xlat
mov
and
inc
scas
mov
loope
inc
push
shlb
test
popf
test
cmp
mov
dec
ds
cli
xchg
into
jl
cmp
and
mov
xchg
jge
scas
mov
lcall
or
loop
xacquire
inc
mov
adc
test
pop
inc
popa
insl
add
daa
pop
push
fstpt
pushf
enter
or
scas
dec
dec
mov
fistpl
pop
imul
cmpsl
addl
mov
hlt
stc
jl
mov
push
jno
fimuls
pop
dec
add
xor
fcmovnu
jle
adcb
dec
clc
push
aam
cld
fsubrs
cld
jecxz
and
jmp
shrl
pop
pop
fs
adc
add
jmp
cmpsl
xlat
outsl
xor
push
pushf
sub
sahf
mov
das
repz
in
std
cmp
push
gs
pop
dec
mov
les
adc
aad
leave
mov
inc
jg
cmp
cmp
shll
jbe
movsl
and
inc
movsl
cmpsl
pop
add
mov
ljmp
mov
loop
negb
jns
pushf
hlt
mov
leave
push
adc
xor
out
pop
mov
mov
push
fnstenv
jne
out
or
testb
mov
xor
imul
or
imul
out
jl
cmp
inc
popl
add
xchg
pop
xchg
push
cmp
jnp
cltd
or
xchg
xor
sahf
push
test
in
cmp
cltd
mov
icebp
mov
jo
mov
ficompl
jns
in
dec
mov
dec
aad
jnp
mov
dec
sbb
mov
add
dec
sub
rcrl
stc
xchg
add
sbb
in
push
js
push
ljmp
hlt
inc
and
cmc
mov
add
xor
cmpsl
push
popa
xchg
dec
mov
or
lcall
adc
outsb
dec
dec
jl
ds
sahf
lods
sub
fidivl
sub
jecxz
nop
stc
out
fistpll
xchg
test
xor
fmuls
rolb
outsb
and
orl
push
addr16
lock
pop
cmp
sbb
int
mov
sub
call
push
or
or
inc
sub
xchg
in
andl
scas
fmull
push
push
inc
ja
mov
push
in
clc
push
int
cli
mov
pop
shlb
mov
adc
inc
mov
mov
es
mov
loop
out
push
jg
mov
add
xchg
adc
mov
mov
xor
imulb
inc
add
lock
sbb
movsl
pop
sbb
out
mov
sbb
outsb
push
scas
imul
arpl
xlat
xor
daa
and
mov
aas
out
les
in
lods
push
call
sahf
into
lds
push
daa
dec
push
repz
jns
xchg
xchg
out
jecxz
cmc
ret
inc
push
cmc
insb
in
mov
and
push
icebp
adc
jmp
cmp
mov
add
xchg
cmp
aad
jp
or
adc
pop
lods
mov
aam
into
add
add
stos
dec
out
lods
mov
adc
ret
jg
cmp
mov
in
mov
imul
add
mov
mov
xchg
inc
into
or
push
das
sub
fstps
ret
scas
int3
mov
inc
in
ja
clc
adc
insl
iret
jno
sbb
sbb
das
jmp
cs
jge
lret
add
out
cmp
mov
shr
inc
sub
xchg
jo
test
pop
fwait
and
movl
adc
push
push
cmpsb
inc
aas
push
mov
or
test
push
push
inc
insl
dec
adc
test
stos
jg
scas
push
ret
or
lods
or
aam
popa
sub
fdivl
and
cmpsb
adc
sbb
out
fmuls
stc
aad
sub
sahf
fnsave
roll
test
xchg
dec
lcall
int
adc
out
jne
ret
in
insl
dec
subb
in
notb
fdivl
jo
jmp
lcall
adc
notl
push
test
add
and
ficomps
dec
lock
daa
jno
add
iret
leave
or
mov
nop
sarb
lock
adc
dec
sbb
adc
mov
or
pop
add
imul
mov
pusha
add
cmp
push
bound
in
and
aaa
add
int3
add
jp
sbb
mov
mov
add
pop
adc
mov
fsubr
cmp
nopl
mov
push
or
jns
fwait
mov
rorl
xchg
pop
lahf
mov
mov
push
fistpl
ss
jecxz
dec
jle
lea
inc
movsb
fnstsw
or
pop
push
cmp
xlat
in
mov
repz
xor
jbe
sub
sub
and
sub
inc
dec
jg
aas
xchg
sbb
xor
mov
and
enter
mov
out
loop
dec
loope
mov
stos
in
and
in
jge
je
mov
jp
jo
xor
call
cmp
shlb
icebp
cwtl
lods
iret
gs
out
sahf
out
shrb
and
cld
adc
and
shlb
test
dec
ret
enter
mov
sti
sbb
jo
cmpl
cmc
ret
das
mov
cmp
xchg
add
pop
repnz
pop
clc
aad
inc
or
addr16
ss
adc
mov
push
ljmp
jle
push
xor
mov
out
adc
pop
loopne
and
pop
lods
gs
push
test
ret
adc
jge
jle
int
inc
pop
mov
das
negb
adc
addl
ficomps
adc
popf
es
gs
pop
cmpsl
xlat
xchg
scas
dec
arpl
outsb
fidivs
clc
leave
sbb
test
mov
test
subl
mov
repnz
mov
mov
negl
outsl
pop
push
in
in
fisubs
xchg
sbb
scas
push
pop
jne
sti
sbb
cs
xor
cmp
lods
in
mov
icebp
push
out
cmp
outsl
pop
clc
cmp
sub
cmpb
push
push
mov
sub
fcoms
into
push
out
addb
push
aas
jge
pop
dec
popf
push
jae
jno
pop
test
mov
ljmp
loop
pop
and
rorl
testl
xchg
js
out
int3
in
jecxz
cltd
mov
lea
pop
jp
ss
je
adc
imul
out
push
gs
pushf
pusha
in
jmp
jge
sub
fimuls
push
imul
sub
xchg
xchg
mov
sbb
pop
outsb
frstor
test
scas
push
jle
test
in
pop
rcl
jbe
sbb
test
add
icebp
in
bound
ret
xchg
cli
and
icebp
decb
add
into
or
movsb
xor
sub
inc
test
pop
and
dec
or
cmp
xchg
pop
push
pusha
sub
xchg
cld
lret
addb
add
push
mov
mov
and
push
bound
and
cs
jne
jbe
push
jl
pop
out
jbe
scas
sub
mov
inc
pop
jbe
dec
jge
mov
into
push
leave
fs
outsl
add
enter
add
and
lods
adc
cmp
shll
roll
pop
andb
lock
repnz
adc
push
out
push
mov
inc
sbb
xchg
or
test
inc
nop
jbe
mov
adc
xchg
js
loopne
js
lea
and
pop
out
jne
add
push
jmp
push
and
and
bound
ja
stc
mov
je
test
gs
imul
or
imulb
sub
sbb
rorb
ljmp
aas
inc
ftst
push
sub
xchg
jecxz
mov
cmp
cmp
pop
cmpsl
into
sub
and
and
lahf
fucomp
or
mov
adc
jmp
int
cld
je
sub
std
rcrb
ret
sahf
pusha
mov
in
push
mov
and
gs
xor
lret
inc
in
insb
lahf
inc
popl
xchg
sti
sub
push
cld
sbb
sarb
rcl
dec
xchg
imulb
cmp
lret
mov
pushf
movsl
out
andl
clc
xor
and
fwait
push
fcmovne
pop
lea
data16
iret
adc
cmp
test
popf
test
cmp
inc
outsb
mov
mov
push
aad
or
xchg
rcrb
iret
ds
adc
push
aad
inc
addr16
sub
addr16
pop
push
movsb
test
sbb
outsl
pop
nop
mov
stos
sub
roll
and
jle
mov
cmpsb
push
adc
pop
mov
sbbl
cmp
sbb
mov
out
loop
add
jp
mov
fwait
xchg
std
pop
shll
aas
addr16
cmp
jmp
lods
sub
add
int
sbb
pop
xchg
ljmp
xor
les
cmp
icebp
into
insl
in
inc
call
sub
cwtl
or
clc
cmpsl
xor
repnz
repnz
inc
hlt
aad
adc
int
lods
sbb
jle
in
xor
movsl
out
insb
add
addb
mov
pusha
inc
out
rorl
mov
outsl
and
sub
jnp
bound
ds
out
gs
push
jle
femms
push
add
sbb
int
jge
xchg
aas
xor
es
or
aas
xor
movsl
aaa
pop
rorb
or
or
shrl
sbb
mov
inc
cmpl
xchg
cld
add
inc
popf
cmc
or
pusha
xlat
mov
dec
xor
fsts
sub
jae
xlat
jl
cmpb
addl
out
ljmp
aam
mov
lcall
ret
mov
faddl
in
push
and
bound
js
mov
add
xchg
mov
xchg
mov
pop
sarl
scas
cmp
aas
mov
adc
int3
fxam
mov
cmpsl
fs
push
outsl
jne
xchg
mov
jl
fldenv
add
cmc
loop
movsb
add
pop
fisttpll
mov
in
mov
lahf
in
xchg
popa
out
fsub
jne
pushf
pop
lcall
sub
les
pop
add
or
jb
ss
mov
jmp
gs
xchg
out
lret
jp
imul
insl
test
in
push
shl
pop
aam
sbb
adc
pop
movsl
out
pushf
mov
push
addr16
push
aam
jo
inc
and
jb
xor
xchg
mov
and
dec
jmp
rcr
imul
lods
mov
jb
clc
or
xorl
mov
jns
stc
add
push
and
jp
movsb
add
push
sarb
dec
aam
or
repnz
jnp
fisubrs
and
iret
jnp
xchg
lds
scas
cmc
call
add
dec
enter
sti
addr16
add
and
cmp
cmp
or
inc
mov
and
cwtl
adc
lea
xor
repnz
insb
dec
cmc
xchg
aas
neg
adc
xchg
movsb
mov
add
xchg
add
mov
pusha
mov
arpl
and
test
ss
sub
pop
fsub
push
xchg
loopne
cltd
jg
cwtl
jge
jl,pt
push
mov
outsb
pop
push
mov
adc
sarb
jb
stos
jae
sahf
lods
lea
pop
outsl
add
shll
clc
aad
mov
add
or
jnp
mov
inc
or
aaa
pop
out
pop
lahf
lcall
orl
aaa
arpl
pop
dec
add
push
js
jbe
cwtl
xorb
sub
mov
cmp
iret
sbb
jg
jne
loopne
cmp
jecxz
out
mov
dec
mov
mov
fucompp
into
jae
adc
push
jl
add
jno
xor
into
push
es
add
add
or
out
jp
push
icebp
xor
in
xor
sbb
cmp
adc
test
mov
shl
ja
shlb
sub
clc
pop
sbb
inc
cmp
fstps
push
filds
add
jg
push
subb
add
adc
xchg
sbb
xor
imulb
stos
int
xchg
rcll
imul
sahf
cs
sub
lret
mov
movsb
ret
mov
push
dec
insl
push
add
bound
pop
out
repz
xchg
adcl
and
lret
xor
jmp
cmp
jge
outsb
jle
cmpsl
insl
in
mov
xlat
addr16
aaa
insl
push
mov
idivl
dec
or
cmc
pop
repnz
popf
fnstcw
push
test
add
push
sub
sbbl
mov
rcll
test
lret
out
jns
cmp
jae
jl
add
sti
jns
orb
iret
sbb
mov
outsb
cli
and
sub
mov
inc
leave
fisubs
mov
loop
cmp
das
pop
std
cmp
adc
int3
loop
xor
or
pushf
push
sti
xor
arpl
push
icebp
test
jmp
mov
adc
and
xor
mov
cltd
or
hlt
es
or
hlt
idivl
cmp
or
test
aas
mov
ret
mulb
mov
dec
inc
fisubrl
mulb
mov
mov
mov
sti
xor
bound
cli
test
das
shrl
outsl
rcll
rcll
mov
inc
mov
push
fwait
stos
jecxz
or
and
lea
mov
xchg
jp
mov
or
add
std
bound
jns
dec
out
insl
test
and
push
repz
test
push
out
addr16
cmp
pop
lret
mov
bnd
mov
testl
cmc
sarb
nop
pop
pop
gs
xchg
mov
cld
inc
push
or
add
jp
jb
xchg
inc
jae
xchg
fsub
je
inc
imul
rcll
sar
call
shrb
pop
js
jns
push
stos
adc
sub
out
testl
movsb
test
adc
sub
mov
test
cmc
sub
xor
hlt
adc
andnps
out
mov
js
ss
leave
stos
mov
cmp
rcrl
fildll
cmc
in
pop
xlat
cmp
jbe
or
repz
outsl
lea
cmp
xlat
pop
mov
cmp
add
inc
push
icebp
test
sub
loope
xchg
or
add
in
mov
jne
sarl
and
movsb
sub
cld
sub
add
sahf
lahf
lods
adc
mov
nop
mov
icebp
imul
cmpsl
xchg
dec
rclb
insb
cltd
jp
mov
cs
dec
pop
push
mov
test
out
mov
mov
xor
pop
xor
mov
dec
mov
mov
pop
inc
mov
pop
pop
lret
dec
leave
xchg
push
incb
push
cmc
lret
cmp
mov
je
in
les
sbbl
xchg
mov
decb
inc
sub
ret
inc
jle
aaa
add
sbb
fists
data16
jecxz
xchg
gs
xor
gs
push
in
lock
or
test
jmp
and
data16
cmpl
and
dec
lahf
arpl
inc
jg
pop
jo
js
insb
mov
imul
arpl
ret
jb
scas
dec
clc
call
std
ret
cli
testl
mov
or
addl
push
pushf
fucom
mov
cmp
mull
mov
and
loopnew
leave
add
pop
cmp
les
es
or
call
jl
call
imul
or
cmp
push
adc
adcb
in
arpl
pop
pop
hlt
mov
out
sub
sbb
divb
mov
jnp
pop
or
inc
mov
out
cmp
and
xor
cmpsb
sub
pushf
xchg
gs
sub
aam
jp
mov
sbb
pop
sub
ds
xor
dec
aaa
push
cli
xchg
jmp
in
lret
inc
ret
les
into
in
lods
mov
cmpsb
fucomip
sbb
cmp
pop
pop
cmp
sbb
or
fistpl
testb
or
mov
iret
inc
lods
adc
mov
xorb
vpunpckldq
pop
pop
insb
mov
lcall
jge
mov
lahf
andb
and
xchg
incl
xor
dec
rclb
into
push
lret
mov
lds
mov
mov
mull
sahf
cmp
pop
int3
sbb
leave
ret
cwtl
push
out
jmp
je
push
push
jle
or
stc
lds
shrl
sbb
mov
mov
shrb
jo
pop
xlat
mov
mov
movsb
adc
insl
adc
mov
mov
jo
aaa
pop
cs
xchg
jle
sbb
cld
push
sub
sub
insb
push
pop
xor
cmp
fisubs
mov
inc
mov
inc
cmp
push
or
cmp
inc
loopne
push
adc
xchg
jmp
or
jg
add
jae
cmp
mov
mov
leave
test
push
stos
mov
imull
add
outsl
mov
std
push
xor
mov
xchg
lahf
dec
and
gs
ja
jecxz
movsb
imul
pop
dec
cmp
cmc
mov
es
adc
lea
and
jae
push
inc
xor
cmp
fstpt
cmp
xor
push
fistps
fstpt
insl
inc
mov
adc
outsl
push
das
stos
sub
jno
or
dec
imul
test
mov
ror
fcoms
or
ret
aas
repz
pop
clc
orl
dec
divl
pop
xchg
sbb
movsl
jbe
mov
loopne
subl
pop
sub
test
add
push
cmp
cmc
mov
rsqrtps
jne
pop
leave
mov
sbb
pop
int3
pop
leave
xchg
lock
mov
sbb
data16
xor
cmp
jg
sbb
imul
subb
popa
fmull
xlat
test
sub
imulb
jmp
xchg
mov
stc
fwait
jecxz
sti
push
lcall
push
mov
cmp
sbb
sub
test
pop
adc
ficompl
push
xor
enter
bound
clc
sub
nop
add
out
aad
imul
push
mov
idiv
lahf
dec
gs
or
fadd
mov
out
mov
in
sub
jg
mov
outsb
inc
outsb
lret
push
inc
inc
xchg
inc
addb
faddp
les
dec
add
ret
xchg
out
mov
std
out
aas
rcl
jae
sub
fists
arpl
xor
jbe
cwtl
mov
push
cmpl
addr16
jl
sbb
cli
cmpsl
sahf
les
jnp
fstl
rclb
cwtl
dec
imul
icebp
xor
cli
adc
je
xchg
lahf
pop
pop
cli
fcomps
out
dec
daa
out
sbb
xor
outsb
repz
bound
cmp
psubsw
jae
push
dec
pop
sbb
pop
xor
jbe
aad
xchg
lret
popa
pop
dec
sbb
cli
xor
ljmp
mov
xorb
jle
lds
xchg
jmp
popa
lret
sub
xchg
inc
mov
xor
repz
iret
lds
pushf
add
pop
fstp
fs
xchg
dec
adc
dec
pop
outsb
cwtl
cmc
movsl
push
loope
pop
mov
inc
dec
stos
jnp
xchg
mov
mov
mov
xor
in
xchg
cmp
mov
rcrl
stos
jmp
es
loop
adc
lods
and
mov
setne
cli
dec
sub
inc
pop
icebp
aad
jg
xor
mov
jae
dec
push
mov
push
gs
adc
add
jp
dec
cmp
pop
add
pop
mov
out
xchg
mov
dec
cmp
leave
mov
inc
mov
mov
jbe
stos
jno
fdivrp
push
push
xchg
jmp
jmp
in
mov
pop
push
aad
push
in
in
lea
inc
nop
ds
loop
jnp
xchg
std
lock
call
popf
fsubl
stos
mov
sarl
xor
cwtl
mov
push
jmp
loopne
loope
into
and
leave
mov
das
xchg
lods
pushf
insb
cwtl
pop
cmpsl
cli
call
stc
sar
out
adc
mov
jnp
or
int
mov
ljmp
rclb
in
sub
daa
mov
shlb
out
adc
jl
cmp
scas
out
test
mov
fmul
int
rorl
std
imul
fldt
dec
xchg
movsl
jo
or
mov
push
mov
stos
jmp
sbb
add
pop
jns
in
out
nop
sbb
xor
outsl
xchg
int
push
inc
inc
aad
pop
insb
dec
enter
push
in
xchg
inc
xor
sub
rcrl
shl
xchg
inc
icebp
out
dec
cmpsb
test
jg
stos
xchg
or
push
mull
sub
in
mov
mov
xchg
mov
insb
mov
adc
push
and
inc
cmp
pop
int
jl
adc
dec
fidivrs
pop
int3
push
icebp
xor
movsl
fbstp
adc
push
sub
test
cmp
scas
inc
mov
pushf
xchg
in
push
or
rcll
xor
outsl
cmpsl
ret
sub
aas
ret
les
scas
pushf
ffree
mov
xor
xchg
fadds
xchg
js
mov
jbe
pop
dec
add
sbb
test
and
jecxz
mov
in
loop
jp
js
sbb
ret
inc
out
sub
and
pop
mov
jmp
rorb
mov
mov
repz
orl
inc
mov
adc
xor
jbe
add
jno
mov
lods
roll
xor
rcr
sub
sub
lea
lods
mov
mov
mov
adc
addr16
aam
insl
sub
mov
pop
sarl
in
xchg
pop
xchg
xchg
jl
aaa
dec
mov
jge
xor
add
push
cmp
xchg
mov
inc
mov
jecxz
fnsave
out
into
lods
mov
mov
in
jmp
xchg
mov
js
outsb
repnz
cld
jle
cmc
fsubrs
dec
push
repnz
and
addr16
adc
xchg
mov
in
xor
jno
xchg
cwtl
repnz
jo
pop
das
fs
pop
and
push
sbb
xchg
into
inc
adc
in
repnz
in
jne
js
jno
mov
mov
sti
shlb
sub
fiaddl
out
sub
mov
push
xchg
push
xchg
sahf
cmp
sbb
jae
cmp
dec
aas
addl
mov
sarl
add
sub
xchg
mov
daa
jl
cmp
xor
pop
movsl
sub
int3
pop
adc
gs
inc
add
mov
les
ret
mov
jbe
popf
inc
dec
cmpsb
jnp
mov
jecxz
xchg
pop
les
ret
or
insb
sbb
pop
sarb
arpl
ja
ret
jge
popa
push
push
outsl
jno
sbb
into
pop
cmpsb
xchg
fidivs
ja
xor
loop
inc
outsl
xor
fwait
adcl
inc
loopne
pop
out
scas
rcrb
fcmovnb
aas
leave
cmpsb
fildll
les
popf
bnd
jnp
mov
sub
rep
nopl
mov
mull
xorb
jbe
sahf
or
push
lods
data16
xchg
jo
fwait
add
scas
mov
mov
inc
pop
pop
sub
stos
out
cmc
jnp
xchg
out
lods
mov
push
xor
push
fbld
sbb
stos
je
pushf
pop
mov
sbb
cmpsl
sub
jle
lcall
int
pop
mov
ja
bound
mov
sarl
cltd
nop
les
adc
popa
mov
cmpsl
xor
sub
or
adc
gs
or
cmp
lock
or
mov
cmp
es
lods
lret
inc
pop
addr16
cmc
adc
dec
stc
in
lcall
and
lcall
add
mov
sbb
js
hlt
testb
inc
popa
xbegin
push
xor
iret
pop
test
jae
vrcpss
lcall
mov
inc
in
cwtl
mov
loope
push
inc
mov
or
movl
sbb
adc
out
dec
jl
arpl
and
lea
mov
or
fwait
int3
hlt
int3
es
loop,pn
and
adc
inc
xchg
cltd
xchg
addr16
sub
pop
cmp
push
lods
ja
aam
sbb
out
xchg
leave
mov
hlt
sub
jle
and
mov
sarb
fstps
inc
dec
testl
add
pop
inc
popa
int
data16
and
mov
xorb
xorl
mov
adc
dec
out
fbld
repz
mov
cmp
mov
icebp
mov
sub
dec
cmpsl
xchg
add
dec
outsb
leave
stc
jbe
sbb
ljmp
aam
bound
push
xchg
adc
and
lds
push
popa
sub
inc
mov
in
cwtl
stos
xor
in
rcr
enter
pop
mov
mov
scas
add
adcb
jo
fs
mov
jo
cmp
inc
mov
scas
mov
in
lods
sti
aas
cmovno
inc
xchg
inc
mov
arpl
pop
pop
out
fcmove
je
sub
ja
out
or
sbb
scas
enter
and
jg
push
mov
cmp
xor
sbb
es
mov
scas
push
ret
add
subb
pusha
test
cld
inc
sub
mov
xchg
adc
mov
or
and
out
movsl
rclb
shll
dec
pop
aad
push
fisubl
pusha
xchg
adc
mov
add
adc
mov
mov
adc
stos
sub
std
add
imul
push
sbb
sub
lret
imul
aas
mov
mov
into
dec
xor
jecxz
cmp
out
xlat
inc
js
xchg
jne,pt
in
mov
ja
aad
sub
aad
sbb
push
stos
push
sbb
aaa
pop
ljmp
aas
jmp
in
dec
sbb
xor
pop
cmp
pop
xchg
mov
add
pop
pop
into
dec
dec
out
dec
incb
mov
or
add
add
xchg
mov
mov
sahf
mov
sub
inc
inc
daa
sbb
or
adc
or
imul
adc
cmpsl
lods
int3
fdivr
push
loope,pn
lret
or
jns
cmp
mov
nop
mov
mov
sub
ja
out
jg
mov
lock
inc
bound
test
ljmp
lock
loop
fsubrp
ret
aad
outsb
push
rcl
shlb
push
arpl
dec
imul
loope
bound
lahf
jo
ficomps
fwait
and
int3
lahf
sbb
mov
add
push
in
loopne
dec
cmpsb
xchg
test
cmp
mov
es
iret
mov
in
loop
int3
cmpsl
push
fdivrs
pop
jne
movsb
pusha
out
ss
lret
fs
inc
test
jo
int3
sbb
scas
testb
lahf
cld
js
aas
out
dec
test
in
clc
and
lcall
mov
lods
add
xchg
push
jg
cltd
push
dec
sti
or
test
inc
bound
adc
cmpl
lods
sti
shl
dec
jae
push
dec
repnz
ljmp
fs
push
cmc
mov
iret
mov
push
mov
mov
mull
js
pop
testb
lret
inc
jo
data16
stc
jp
pop
mov
inc
sti
sarb
pop
jl
ret
nop
mov
cmc
out
cmp
add
pop
aaa
loopne
mul
in
inc
sbb
jnp
push
scas
sti
cmc
pop
fsubl
xchg
loopne
clc
mov
scas
imul
ret
stos
test
shlb
imul
jbe
sub
imul
cli
xchg
push
gs
jae
shrb
arpl
xor
into
or
fiaddl
shr
movsl
add
push
inc
inc
jne
int3
jp
push
add
push
push
lods
cwtl
pop
andb
cli
iret
icebp
in
insl
mov
adc
add
in
repz
cmp
add
mov
mov
pop
mov
outsl
dec
cmc
pop
jns
roll
push
test
mov
mov
add
addb
jno
adc
loop
cmp
ds
sub
addb
cmp
clc
mull
clc
pop
mov
mov
int3
inc
push
inc
xor
push
mov
jns
mov
bound
out
xlat
and
mov
mov
sbb
arpl
adcb
or
imul
push
mov
dec
cmp
in
out
lcall
or
loope
and
andw
pusha
jmp
xor
cwtl
xchg
lods
mov
popf
adc
xor
jge
mov
out
inc
lcall
xchg
push
adc
in
repz
or
lods
sbb
idiv
xchg
push
inc
inc
xchg
dec
jge
jno
xchg
lds
icebp
insb
inc
scas
ret
cmp
pop
std
pop
mov
xor
les
fldenv
sbb
pop
filds
cmc
dec
mov
ds
jb
push
sahf
setge
or
insb
adc
xchg
xorb
rcr
inc
out
fwait
mov
pop
lds
repnz
andb
inc
aad
inc
pushf
mov
les
push
or
fnstcw
outsl
adc
mov
cmp
mov
dec
sub
movsl
mov
cs
leave
mov
add
mov
cmp
and
divb
cmp
sbb
xor
jnp
sbb
mov
lret
aad
xor
or
addr16
notl
dec
test
ljmp
and
mov
les
push
push
fcomi
cmpsb
jmp
scas
dec
pop
sub
int3
inc
out
iret
test
mov
mov
outsb
test
lcall
mov
cltd
jnp
or
popa
loop
addr16
outsl
in
push
xchg
push
adc
lods
addr16
cltd
and
dec
and
and
in
xchg
das
in
sbb
push
add
test
loop
in
inc
js
std
lcall
pusha
mov
or
lea
push
jne
xor
out
test
sbb
lahf
jg
ret
adcl
outsb
test
inc
mov
sbb
dec
test
mov
test
dec
jno
lods
cmp
dec
mov
xor
mov
test
adc
cmp
sbb
mov
test
lods
gs
cmpsl
daa
push
mov
push
outsb
or
fcomip
sbb
inc
sbb
cmp
sbb
xor
xchg
sbb
cwtl
ja
filds
aam
or
or
add
cmpsb
std
pop
leave
gs
dec
loop
lcall
xchg
fiaddl
mov
sub
jne
inc
adc
mov
dec
in
cmp
mov
xor
in
unpcklps
or
mov
shlb
xchg
pop
inc
sub
movsl
adc
nop
sub
test
fldt
adc
mov
mov
adc
pop
imul
pop
push
ljmp
fdivr
imul
jns
cltd
stc
and
dec
jge
xor
sbb
sub
cmc
out
lahf
jbe
fisttpll
bound
frstor
xchg
xchg
std
imul
xchg
fnsave
xor
fdiv
out
lea
jae
xor
scas
push
inc
aas
test
sti
cmpsl
and
nop
clc
fstp
xor
repz
inc
shll
dec
subb
mov
sub
mov
dec
mov
dec
push
mov
lret
inc
jo
xor
repz
adc
xchg
adc
jns
test
mov
fstpl
mov
inc
inc
add
data16
add
je
push
mov
fsubl
jp
shlb
outsb
outsl
rcll
mov
not
loop
test
gs
call
mov
inc
ja
outsb
imul
xor
or
adc
or
inc
add
sbb
aad
xchg
out
arpl
adc
rol
cmp
test
adc
inc
jg
sbb
ret
arpl
or
pop
out
int3
je
shlb
lahf
and
jb
ja
dec
add
pop
leave
ja
leave
out
mov
sub
add
aad
lret
inc
xchg
inc
dec
enter
gs
pop
je
cmp
pop
nop
and
bound
adc
je
in
ds
ds
or
adc
and
std
imul
lods
push
inc
jle
cmp
sbb
pop
stos
jne
andb
pushf
jnp
push
rolb
push
mov
mov
roll
push
popa
fnstenv
push
mov
dec
scas
pop
fwait
pop
enter
and
fsubrl
out
jno
jbe
mov
lcall
jo
ja
and
jmp
js
insl
sahf
or
inc
inc
xor
xchg
mov
fwait
sbb
mov
imul
cs
push
inc
mov
jecxz
into
repnz
pop
or
lcall
sbb
push
pop
xchg
in
das
sub
push
mov
cmc
int
shl
mov
xchg
mov
mov
adc
in
lea
mov
fwait
sub
dec
insl
push
ret
sbb
arpl
das
ficoms
sbb
xchg
roll
sar
dec
movsb
sbb
mov
aam
sbb
cmpsb
xchg
lret
mov
adc
jae
jl
inc
fldcw
lods
dec
push
out
sbb
pop
pop
dec
in
jno
cmc
out
sub
lea
sar
fdivrl
add
enter
sub
repz
gs
jmp
test
cltd
cpuid
push
pop
push
xchg
sub
push
pop
inc
inc
nop
sbb
lock
insb
adc
loope
and
xor
call
fldcw
mov
in
xchg
pop
xchg
and
ret
loop
lds
or
cmc
adc
je
out
and
add
mov
sbb
loopne
mov
cwtl
and
inc
mov
int3
das
or
cmp
bound
add
jmp
and
bound
out
inc
dec
shl
fldl
xchg
inc
or
insb
and
repz
push
lock
movsb
aad
adc
jae
adc
push
jnp
pop
pop
test
aaa
pop
xor
test
cmp
push
fidivrl
lret
in
lret
sahf
dec
push
lret
rcr
test
fsubrs
sub
pop
fadds
stc
shll
sub
stc
xchg
mov
lds
scas
or
push
cmc
enter
sbb
int
test
and
sarl
push
leave
adc
mov
imul
loopne
cmpsb
das
cmpsl
xchg
jo
lods
pop
mov
sbb
mov
jge
pop
cltd
sbbb
shrb
ss
mov
jmp
mov
mov
inc
add
jnp
ror
sbb
lahf
sti
pop
dec
scas
sub
jg
mov
outsb
mov
push
shr
mov
fistl
sbb
dec
ds
pop
xchg
push
xor
push
or
das
dec
lcall
sbb
pop
js
in
and
popf
mov
cmp
adc
das
repnz
inc
mov
xor
add
shr
and
adc
nop
adc
gs
cwtl
push
pop
xlat
xor
es
adc
mov
into
xchg
stos
in
or
hlt
adc
lock
pop
push
and
jecxz
dec
fcomip
int
pop
inc
lret
jae
dec
aaa
lret
aas
movsl
add
dec
scas
cwtl
jecxz
jge
orl
or
stos
or
mov
push
cmp
fwait
xchg
sbb
sbb
ja
pusha
adc
in
bswap
outsb
dec
mov
pusha
mov
pop
pop
addr16
push
inc
outsb
mov
pop
mov
inc
or
fmuls
leave
insl
std
push
test
xchg
ja
sahf
call
fwait
mov
scas
fwait
arpl
iret
or
cltd
push
filds
mov
stc
push
daa
dec
mov
loop
or
test
xchg
ret
xchg
incb
cmp
jo
push
push
mov
lods
push
mov
xor
adcb
xor
ja
outsb
sbb
jbe
sbb
xchg
sahf
stos
outsb
or
inc
out
adc
jo
aad
mov
jo
fiaddl
mov
inc
dec
jle
mov
or
mov
pop
mov
jnp
sti
cltd
sbb
stc
into
xchg
dec
cmpsl
pop
add
jb
lret
hlt
pop
jecxz
lods
and
cli
lock
fdiv
push
mov
jae
cli
sub
pop
dec
mov
sub
iret
repnz
fcoml
rol
cli
pop
xchg
xchg
bnd
test
orb
shrl
int
test
adc
cmp
sarl
push
cmp
sbb
sbb
dec
dec
sbb
loop
cmc
mov
daa
and
jle
cmc
insl
xchg
xchg
in
cmp
mov
mov
das
popa
push
popf
repz
imul
imul
aam
inc
lock
add
mov
sbb
or
ss
call
jne
lret
in
std
sahf
nop
test
shlb
push
test
ret
fcmove
dec
sbb
mov
int3
fsubrl
add
add
push
nop
jecxz
nop
and
jg
cmp
pop
push
loope
mov
mov
test
fistpl
pop
lret
shl
movsl
mov
rorb
xchg
mul
pop
cwtl
adc
inc
xor
mov
pop
aas
popa
scas
inc
loopne
stos
cmp
sbb
push
mov
gs
imul
dec
nop
xor
xor
pop
jbe
sbb
les
enter
mov
mov
sub
pop
jnp
cmp
pop
push
push
std
adc
xlat
inc
dec
or
xchg
test
mov
scas
aam
xorl
lahf
mov
subl
and
clc
leave
lds
xor
pop
popa
dec
leave
sbb
fiaddl
jbe
cmp
pop
add
je
sti
cld
pop
dec
pushf
std
out
jo
mov
pop
fwait
mov
push
clc
dec
sub
addr16
pushf
xlat
cmpsb
xchg
adc
mov
adc
jmp
sub
mov
mov
bound
or
call
orb
inc
out
and
xchg
cs
es
addr16
pop
xor
stos
sub
cli
outsl
add
loop
sbbl
loope
repnz
adc
xchg
addl
lea
xor
sbb
pop
sti
pop
fidivl
xchg
cmp
and
xchg
jnp
cmp
add
popa
and
jmp
mov
ljmp
loop
int3
cld
jl
lahf
loopne
cmp
dec
cmpsl
loop
and
insl
mov
pop
lds
cmp
addr16
sub
lods
add
into
or
push
lea
dec
mov
js
loop
push
mov
push
rcll
lods
out
add
addr16
cmp
sarb
sti
pop
mov
lods
add
sbb
enter
jns
add
mov
ret
imul
stc
das
ficoml
mov
cmp
aad
mov
and
dec
fdivrl
sub
xor
jo
outsl
lea
in
add
icebp
xchg
scas
xor
std
addr16
xchg
lods
aam
inc
jecxz
ja
jno
sub
movsb
add
dec
xor
ds
cmp
ljmp
fsubrs
sub
ret
mov
push
cltd
add
jns
insb
xor
push
insb
xor
mov
stos
inc
push
nop
mov
push
push
add
push
pop
popf
lock
popf
loop
movsb
and
mov
sub
loope
incb
les
lret
xchg
outsl
fdivrl
loop
push
adc
sbb
jge,pt
loopne
stc
mov
cmpl
pop
out
mov
mov
lods
adc
mov
sub
aad
pop
and
inc
xchg
push
loope
clc
cmp
sbb
cmp
push
imul
fwait
mov
inc
inc
dec
movsl
mov
cmpl
or
xchg
int
pop
adcl
aad
mov
in
test
jbe
sub
pop
adcb
or
mov
addl
jle
cmp
sub
jmp
push
jp
das
fdivrl
fsubrs
movsl
rep
popf
jp
gs
mov
rorl
pop
xchg
add
mov
mov
add
int3
dec
or
mov
mov
pop
lret
or
clc
int
mov
xchg
pop
mov
pop
cmp
in
mov
int
lcall
addb
dec
popf
repnz
xor
std
sbb
adc
cwtl
dec
dec
pusha
fadds
lret
ror
rcr
adc
jecxz
sub
clc
in
xor
or
or
jno
jge
xlat
push
jno
and
lods
pop
call
cmp
push
je
jo
loope
rcrl
inc
call
lcall
insl
roll
arpl
aaa
roll
ja
mov
mov
imul
mov
jl
pop
out
decl
jo
or
shll
sbb
or
aas
mov
dec
dec
test
shll
pop
sti
mov
rorb
fdivrl
in
and
cmp
jle
lret
add
pusha
xchg
test
mov
out
or
cmpsb
int
push
aas
sti
cmp
fiaddl
pop
pop
pop
fnstenv
jb
bound
popf
pop
jbe
push
fsubrp
insl
lods
icebp
dec
pop
xor
ficoml
cwtl
cmpsb
inc
les
divl
adc
jp
lret
iret
mov
movsb
jo
mov
stos
sub
std
cs
mov
into
aas
mov
jecxz
adc
dec
push
mov
jno
cwtl
add
dec
shll
xchg
adc
and
fimuls
xchg
ds
faddl
inc
mov
test
pop
jae
insb
inc
dec
aam
adc
jne
or
mov
and
jno
imul
in
ljmp
push
ds
sbb
fstl
adc
imul
mov
orl
adc
cmc
sbb
adcb
nop
xchg
outsb
sbb
mov
sub
adc
lahf
in
lods
cmp
es
or
repz
inc
jmp
lahf
mov
and
mov
aad
data16
pop
scas
mov
cwtl
dec
xlat
out
cmpsb
jo
push
out
jp
loope
shlb
sbb
lret
fisubs
fucomip
or
int
mov
xor
idivl
insl
push
xchg
leave
xchg
pushl
and
daa
dec
aad
movsl
out
dec
mov
daa
mov
aas
js
jns
jle
je
push
push
xchg
iret
call
sahf
pop
xchg
dec
mov
outsl
push
mov
sub
rcrl
loop
jmp
dec
subl
aaa
ljmp
movb
ficomps
or
sbb
sarl
aad
lahf
mov
and
mov
pop
sub
lds
and
cmp
outsb
mov
testb
jmp
pop
fsts
lds
adc
ss
dec
mov
dec
adc
push
sub
inc
outsl
push
xchg
sbb
loope
push
lret
cmpsl
test
iret
add
add
cltd
popa
dec
test
dec
sub
mov
popf
es
pushf
subb
iret
cmp
cmpsb
lret
enter
movsl
scas
xor
pop
int3
sub
movsl
popa
push
rorl
xor
sbb
std
bound
lods
inc
pop
sub
sub
dec
fsub
scas
mov
push
mov
push
scas
negb
movsl
sub
dec
xlat
ds
mov
mov
xor
lods
dec
rolb
jo
push
test
dec
mov
mov
or
pop
mov
add
notl
cmpsb
inc
add
icebp
sub
xor
mov
sbb
pop
cmpb
aam
nop
aad
loope
lahf
mov
pop
fiadds
cmp
push
mov
push
stc
insb
mov
mov
push
popa
sbb
stos
sbb
mov
insb
mov
out
xor
xor
outsl
xchg
cwtl
push
ror
xchg
xchg
dec
mov
insl
aad
fucom
cli
push
sub
mov
jg
inc
int3
and
dec
sbb
xchg
in
and
push
nop
test
out
out
out
and
xchg
xchg
lea
aam
cwtl
pushf
leave
push
mov
je
adc
inc
lea
sbb
or
xchg
jnp
pop
jb
cltd
dec
sti
jl
test
out
popa
insl
jg
cli
ja
inc
stc
mov
mov
add
sub
repnz
push
fisttps
lahf
and
jle
push
negl
cmc
outsl
mov
mov
push
dec
lea
push
cmp
mov
sti
push
adc
sub
es
test
jno
in
gs
pop
in
and
stc
movsl
pusha
std
mov
fistl
xor
cli
dec
add
xchg
lock
sarl
or
pop
fidivrs
or
push
dec
fisttpll
sbbb
cwtl
jbe
inc
ja
fnstenv
pop
fs
loopne
ja
inc
adc
ss
hlt
cmpl
arpl
pop
imul
adc
cmp
mov
jp
ret
pop
fstpt
inc
xor
pusha
mov
or
and
cmc
adc
sub
mov
leave
je
pop
or
insl
je
aaa
test
sub
movsl
repz
pop
fildll
jg
cs
mov
cmp
imul
loope
mov
xchg
or
cmp
cmpsl
mov
pop
out
andl
xor
sbb
call
cmpsl
xchg
fucomi
pop
xchg
cmpsb
dec
xor
daa
jo
cmp
sub
loop
mov
mov
pop
repnz
xlat
mov
das
adc
gs
mov
xchg
add
jp
mov
or
mov
outsl
jle
movsl
xor
iret
incb
fidivl
inc
ret
loop
sub
jae
mov
xor
fcmovbe
paddsb
jge
testb
stos
cmc
jecxz
aam
xor
cmp
inc
popa
pop
call
jno
ficoml
and
mov
mov
fidivl
xchg
jl
inc
ja
cmp
out
pop
cmp
dec
jbe
test
push
dec
jl
xor
push
out
pop
data16
jnp
mov
lret
jno
adc
xchg
gs
push
push
push
sbb
lock
and
mov
ficompl
sub
test
aas
xchg
ljmp
push
xorb
push
stos
aam
jg
gs
leave
mov
loopne
repnz
fcomi
mov
jmp
outsb
gs
loop
aaa
push
aas
xchg
rol
push
jge
or
addl
cmp
xor
xor
jb
fwait
mov
mov
pop
je
push
shl
loopne
das
mov
push
xchg
mov
jle
cmp
jmp
stc
sub
inc
cmpb
mov
mov
addb
mov
pop
inc
fs
mov
inc
sahf
loop
je
dec
fsubrp
je
aam
test
in
jl
outsb
or
mov
cmp
repz
xor
add
lods
cmpb
lahf
sahf
inc
or
ret
ljmp
lock
mov
and
and
jl
mov
push
mov
lahf
loope
or
fucomip
dec
movl
cmp
sub
in
sub
adc
mov
or
xchg
insl
pop
daa
add
leave
sub
and
sub
lock
hlt
cld
mov
sbb
jbe
cmpsb
ljmp
ficompl
push
movsb
sti
mov
icebp
mov
lcall
jns
jno
fisttpl
add
sub
inc
lea
mov
popa
pop
or
add
xor
stc
les
stc
jo
dec
dec
xchg
stos
xlat
add
repz
outsb
mov
mov
adc
aam
fwait
in
ja
mov
and
cmp
sub
cmpsb
sbb
test
pop
int3
jp
push
aad
les
xchg
inc
sub
pop
push
sbb
and
lods
iret
mov
push
sbb
inc
inc
cmpsl
sbb
inc
or
dec
sub
pop
ret
clc
mov
xor
pop
xor
aas
nop
xorl
cwtl
ret
popa
mov
loop
scas
pop
adc
and
pop
dec
sahf
lds
std
shl
mov
lds
xlat
add
cwtl
lods
push
sub
mov
jle
dec
sub
xor
pop
repz
js
loop
test
inc
sbb
add
fiaddl
cmpsb
add
mov
xor
and
test
fcomps
adc
lahf
gs
pop
add
inc
and
mov
xor
fisubl
mov
jmp
jb
sbb
pop
push
clc
lods
xchg
add
imul
cmpsl
repz
xlat
je
inc
pop
mov
push
loopne
movl
imul
lea
test
int
icebp
ja
fimuls
ret
in
outsb
mov
inc
mov
shll
or
and
pop
push
push
and
sub
jnp
test
icebp
test
or
andl
popa
popa
fdivl
sti
jecxz
adc
mov
or
je
inc
movsl
push
push
sub
xor
fdivl
cmpsb
inc
lock
mov
std
dec
add
hlt
hlt
out
sahf
mov
mov
ljmp
sbb
and
adc
aam
pop
pop
lods
pop
inc
filds
and
cld
push
cmpsb
aaa
lds
call
pop
sub
popa
adc
je
loopne
popf
repnz
repz
mov
nop
ss
fdivrl
sbb
add
xor
pop
adc
fs
out
mov
lcall
rcl
js
out
aaa
add
and
jnp
inc
dec
mov
ds
add
hlt
fstl
sahf
push
or
mov
out
pop
jg
cli
inc
mov
pop
not
cltd
adc
mov
in
mov
mov
push
repz
outsb
and
mov
fistpl
cmp
jp
add
inc
jmp
rorb
adc
xchg
and
rolb
cmp
push
mov
dec
loopne
jo
lods
js
fadds
ss
subl
xchg
and
lret
adc
pop
js
and
push
lahf
adcl
xchg
nop
dec
rorb
or
sub
add
test
icebp
adc
adc
jge
xor
repnz
jnp
aas
lds
push
lds
in
adc
mov
or
repz
stos
jo
mov
stos
mov
push
inc
into
or
jmp
mov
movsb
cltd
pop
fld
xor
sub
ret
add
jno
ja
sbb
ds
movsl
icebp
and
add
push
jne
and
sub
fildl
outsb
push
cmpsb
jecxz
mov
sti
or
jmp
jb
jns
outsb
cmpsb
mov
mov
arpl
push
push
cs
ljmp
into
shlb
mov
iret
bound
pop
or
insl
iret
sahf
cmp
xlat
leave
mov
bound
mov
sbb
fdiv
sbb
lods
jg
cmp
mov
jl
shll
sub
or
mov
fnstcw
mov
mov
xchg
add
andb
xchg
mov
sbb
scas
aas
xchg
and
jnp
pop
call
xchg
mov
popa
iret
xchg
xor
push
jl
push
test
push
adc
xor
lret
mov
fldt
pop
jns
je
jge
push
xor
pusha
nop
fbstp
aaa
fistpl
test
lods
stc
jno
add
insb
push
out
push
fucomip
xchg
mov
int3
sbb
in
mov
pop
out
ret
shrb
test
test
sbb
fdivl
sbb
ss
test
mov
push
xorl
out
cli
cmp
mov
jl
sbbl
push
push
pusha
cmpsb
mov
jmp
in
lods
enter
jp
jne
push
cwtl
mov
out
cmpsl
push
cli
ret
lods
cmp
push
std
test
aad
mov
push
xor
xor
inc
fs
lcall
dec
daa
mov
scas
fs
mov
cmp
or
rcrb
cmp
mov
sub
sbb
sbb
stc
ja
lods
test
jb
xchg
jmp
add
shl
pop
lret
sbb
mov
jge
mov
fs
or
stc
in
add
jbe
rol
xor
or
or
out
pop
adc
mov
jp
shlb
pop
adc
hlt
jl
sbb
arpl
or
sub
add
jp
sbb
js
push
inc
mov
and
cld
adc
roll
mov
dec
adc
pop
in
pop
int
loope
imul
or
xchg
mov
loopne
adc
and
sub
hlt
sub
js
adc
cmp
or
inc
sbb
push
fwait
sbb
sub
loopne
adc
test
ucomiss
xor
fs
xchg
dec
add
pop
cmpl
scas
dec
stos
adc
inc
xchg
movsl
adc
add
xlat
pop
in
out
mov
mov
mov
xchg
sbb
push
in
jecxz
jne
cmp
pop
pushf
mov
mov
lods
pop
jns
bound
push
rorb
inc
ljmp
mov
xor
loop
jne
lret
gs
in
out
or
jne
adc
jmp
push
sbb
cmc
in
mov
mov
mov
dec
adc
repnz
in
push
sub
xchg
imul
mov
dec
add
bound
les
into
push
push
rcll
rorb
cld
jno
shll
cli
int3
imull
add
loope
mov
ljmp
scas
dec
stos
lock
js
idiv
xor
movsl
xor
mov
inc
bound
stc
push
push
cmp
fwait
add
adc
and
jecxz
sahf
adc
adc
fistps
outsb
jnp
xor
mov
stos
flds
rcr
in
icebp
dec
scas
cmp
or
loopne
bnd
mov
or
sbb
mov
in
inc
iret
ljmp
push
add
adc
in
sbb
jmp
out
inc
pop
clc
xor
ds
aam
push
fiaddl
imul
sti
mov
dec
sbb
sub
sub
cmp
sbb
cwtl
iret
andl
or
aam
push
cmp
and
inc
jle
sbb
sbb
fnsave
shlb
push
ficompl
lds
mov
lods
jle
mov
dec
pop
adc
jecxz
shlb
mov
xor
cmpsl
jecxz
or
dec
sahf
loope
movsl
jmp
in
ret
int3
mov
ljmp
int
cld
ror
addr16
inc
and
aam
jns
repnz
andl
dec
and
daa
xchg
push
clc
sbb
pop
dec
sub
xchg
inc
jmp
jb
add
fisttpll
xlat
lea
aaa
add
insb
fidivs
dec
cmc
xchg
sub
ljmp
js
jno
dec
and
dec
lods
mov
cmp
mov
xor
movsl
fsubs
icebp
pop
push
jbe
and
rclb
jg
insb
xchg
lcall
mov
arpl
dec
pop
xchg
fldt
call
lods
or
movsl
pop
mov
popf
test
test
xchg
pop
addr16
ret
aad
loope
push
shlb
es
aas
sub
addr16
xor
mov
sub
mov
sub
test
add
push
cltd
jne
roll
mov
mov
mov
int
das
xchg
xor
mov
lea
sbb
arpl
inc
cmp
and
and
cli
mov
repnz
movsl
sbb
pushf
ljmp
ss
cmc
lock
es
setbe
mov
sbb
mov
pop
mov
jg
mov
mov
iret
insb
fisttpll
pop
test
adc
jge
pop
mov
test
and
lods
fsub
dec
mov
inc
in
arpl
inc
sahf
cld
aad
movsl
cmp
test
push
addr16
std
mov
popl
mov
mov
mov
jmp
pop
jecxz
adc
hlt
mov
and
repnz
call
fdivr
jl
ret
jne
andl
test
mov
xor
sbb
inc
jne
and
or
adc
adc
mov
add
jbe
out
or
push
sub
fsts
xor
mulw
pop
adcb
jl
dec
lea
add
jge
mov
add
add
mov
mov
add
mov
and
jg
inc
repnz
inc
ljmp
sbb
jle
ja
adc
cld
mov
jnp
jge
fidivs
add
sahf
js
shlb
in
or
insl
xchg
jae
hlt
jmp
iret
add
or
jl
test
stos
mov
cwtl
dec
and
dec
fdivrl
cs
pop
lahf
in
jmp
dec
jns
ss
and
fwait
loopne
pop
xchg
scas
into
ds
push
ret
shll
mov
aad
icebp
lahf
xchg
rcl
cmc
pop
aam
jne
jo
sbb
xchg
imul
lea
gs
mov
je
cld
shrl
stc
scas
fwait
mov
ljmp
insb
in
xchg
cmp
scas
and
iret
iret
sub
inc
test
and
lea
mov
jne
loope,pt
cmp
mov
gs
mov
adc
adc
jle
cltd
xchg
in
xchg
mov
sbb
sbb
sbb
mov
xor
es
and
or
jle
jae
into
cmp
lahf
mov
scas
jge
aam
or
mov
lds
fisubs
cli
insb
jae
movsl
lret
out
or
push
and
divb
sbb
mov
lahf
scas
insl
rorb
add
sti
lcall
int3
repnz
les
je
sbb
out
imul
cmp
mov
push
inc
stos
dec
out
ret
pop
stc
arpl
fmull
rclb
sbbb
jno
popf
lret
lret
imul
push
xor
icebp
shlb
sbb
into
mov
cmp
lock
jae
outsb
adcb
loop
bnd
push
xchg
adc
and
std
pop
lcall
cltd
popf
and
mov
cltd
lcall
cmpsb
xchg
lret
mov
gs
fucomp
dec
adc
fcompl
xchg
ret
and
insl
bound
adc
dec
fwait
aas
out
adc
lds
jl
pop
fcomip
mov
push
jo
ja
movaps
jg
dec
fsts
or
js
out
andb
or
rcrb
test
adc
sbb
ret
fadds
lret
scas
stc
pop
adc
jle
popa
mov
ja
lret
add
cmpb
insl
push
jle
adc
add
adc
pusha
xchg
pop
dec
lock
jl
lea
negl
mov
adc
in
xchg
pop
mov
and
cld
lea
xchg
in
cs
lods
jge
and
jb
sbb
sahf
cmc
je
xor
xchg
push
fwait
ja
push
jl
xchg
push
pop
dec
push
das
jecxz
adc
or
pop
cmp
xorb
aad
or
adc
mov
lea
or
gs
pop
cmp
push
rolb
dec
jp
mov
dec
adc
xchg
dec
push
arpl
mov
jae
lock
call
xor
adc
push
push
and
add
adc
dec
xlat
ljmp
pop
fstps
and
and
daa
call
addr16
jp
aad
out
fs
mov
pop
and
mov
dec
shlb
test
cwtl
daa
rorl
add
cmp
scas
test
adc
xor
cmpsl
sub
jg
jecxz
jmp
mov
mov
je
adc
add
stc
gs
cwtl
ja
jae
pop
mov
cmpsl
fsqrt
insb
or
xor
xchg
jmp
sub
sbb
sub
shlb
leave
daa
icebp
push
jns
cli
pop
or
fimuls
add
cmp
icebp
out
js
ljmp
fwait
push
jno
mov
jne
xor
pop
les
rol
xor
lret
add
sub
pushf
popa
idivl
jle
movsb
cmp
sub
xchg
sahf
jns
orb
jns
adc
out
scas
sub
adc
push
jno
mov
jb
into
gs
add
sbb
inc
das
jns
movsl
lods
mov
pop
jg
lds
pop
inc
adc
pop
mov
movb
cli
ret
or
inc
or
adc
movsl
inc
sbb
pop
push
adc
or
xorl
dec
dec
jmp
dec
sbb
adc
xchg
mov
aas
arpl
add
pop
jne
sub
jecxz
sub
jne
cmc
pop
pop
cmpsb
rorl
mov
and
and
shl
mov
in
movsl
jp
popa
popf
scas
push
mov
fwait
into
movsl
xor
pop
dec
sub
ljmp
lahf
cmp
xor
pop
fildll
dec
push
mov
iret
mov
push
mov
call
stos
pop
push
popa
mov
mov
or
push
std
scas
test
je
repnz
out
xchg
pop
mov
adcl
push
pushf
imul
pop
jo
andps
das
add
mov
jmp
jnp
or
jns
test
aas
sbbl
mov
sbb
pop
add
movsl
jo
jg
int
stos
push
je
lock
outsb
mov
xchg
pmulhuw
cmpsl
fidivrl
xchg
out
ds
lods
fidivrl
inc
push
pop
cli
sbb
test
mull
int
jg
push
pop
test
and
test
jne
mov
xor
arpl
repz
fsubr
sti
cli
pop
mov
add
rcrb
cmpb
cmp
shll
xchg
fisttps
lods
out
shr
and
orl
movsl
jecxz
xchg
cmpsl
jmp
mov
and
or
clc
sub
jns
adc
xchg
jg
mov
mov
in
adc
movsl
inc
dec
xorl
mov
mov
pop
mov
cli
dec
mov
sarl
push
sarb
or
push
add
pop
jbe
mov
jp
out
mov
jg
adcb
addl
push
add
cs
sbb
testl
test
mov
les
iret
mov
cmp
mov
sbb
int
pop
loop
cmpl
cwtl
jne
aam
lods
shr
cmp
push
inc
sbb
cmp
call
jne
loopne
inc
movsb
jecxz
mov
movsb
xchg
dec
repz
idiv
cmc
sbb
push
fstl
mov
xchg
inc
jns
sbb
dec
in
mov
loop
out
push
testl
mov
pop
stos
add
jle
mov
push
and
in
in
fbstp
mov
xor
daa
inc
cmp
pop
movl
mov
inc
lret
xor
ja
mov
lods
jl
mov
mov
push
movsb
adc
pop
inc
iret
mov
test
popa
ret
pop
push
push
lahf
jnp
adc
lock
aad
sbb
loopne
pop
xor
jnp
jne
add
jns
inc
pop
push
inc
add
popa
xor
mov
dec
nop
cmpsl
rorl
imul
mov
xlat
outsb
addl
ror
pushf
cmp
push
repnz
dec
pop
xor
inc
mov
pusha
cmpsb
bnd
cli
cmp
mov
cli
mov
popf
lds
sbb
inc
cmp
add
out
mov
cltd
setne
out
jo
cmp
std
xor
and
jl
in
inc
cmp
lods
sbb
andl
and
pop
pop
loop
mov
or
xor
dec
repz
sbb
add
add
adc
icebp
dec
inc
mov
pop
lock
inc
lea
test
jl,pt
mov
stos
xchg
lds
xchg
adc
jmp
sbbb
xchg
jle
je
fimuls
ljmp
andb
add
xor
or
mov
jg
pop
inc
sub
adc
xlat
mov
les
mov
jns
inc
insb
sbb
shrl
add
or
cs
ja
sub
mov
repnz
or
jo
lcall
jo
stos
sarb
inc
ljmp
sub
jl
inc
jmp
call
adc
xor
into
and
js
imul
inc
icebp
fimull
stos
pop
xchg
xchg
scas
popf
mov
leave
dec
in
cli
push
in
inc
or
inc
fldcw
nopl
jge
int
insb
dec
imul
cmp
clc
fimull
cwtl
adc
or
jne
rorb
inc
adc
sbb
jnp
pop
rcll
gs
xchg
adc
jl
jne
sti
and
inc
xor
enter
jmp
or
imul
mov
stc
adc
sub
stos
mov
xor
or
pop
out
xor
adc
sub
cmp
lcall
out
cwtl
mov
and
divl
pop
cld
mov
imul
loope
mov
push
inc
mov
cmc
fists
or
or
nop
call
cmp
ret
mov
mov
repnz
pusha
cs
std
push
mov
xchg
add
xchg
xchg
push
cmpsl
jecxz
fs
fisubrl
adc
dec
lahf
adc
add
jmp
xor
test
inc
mov
enter
mov
data16
push
lret
mov
fwait
lcall
or
and
xchg
and
out
sub
adc
mov
pop
mov
lds
insb
rdtsc
daa
adc
jle
jae
push
iret
xchg
mull
inc
adc
lea
push
fcoml
adc
stos
add
jnp
dec
mov
push
pop
lret
movsb
sbb
mov
aaa
lahf
in
movsb
mov
or
lods
ret
pop
dec
popf
loope
lahf
loope
adc
push
fldln2
std
sbbl
repz
mov
and
jno
adcl
or
js
inc
xchg
cwtl
je
sbb
ficoml
notrack
xor
push
insb
bswap
pop
lea
mov
inc
fnstcw
mov
loop
adc
fcoms
fsubl
bound
xchg
aas
je
add
push
lea
loopne
fcoml
add
lahf
xchg
pop
push
cmp
pop
ficomps
mov
int3
mov
imulb
sbb
fidivrl
idiv
and
xor
mov
adc
and
mov
mov
push
inc
mov
orl
or
xor
mov
mov
push
out
ror
and
stos
shrb
and
xchg
incl
sbb
xchg
sbb
das
sahf
mov
cmp
sub
adc
icebp
xchg
faddp
repnz
stos
cmp
mov
push
jne
push
rcrl
loop
mov
aas
ds
jne
cmpsl
inc
cmp
inc
dec
and
adc
xor
mov
pusha
clc
xor
pop
add
int3
and
and
cmc
or
xlat
jno
repz
xchg
jne
mov
dec
jns
ja
inc
xchg
in
or
fstp
fmull
sahf
add
out
imul
icebp
cmp
add
inc
inc
cld
testl
jg
pop
cmp
pop
mov
or
aad
push
push
jno
push
int
movaps
pop
push
fwait
cmp
loop
xor
cmc
jp
dec
mov
repz
pop
stc
inc
in
cmp
cmp
movsb
adc
mov
jne
lea
scas
jmp
mov
sub
xchg
ds
push
pop
push
in
push
mov
sbb
sbb
add
cmp
int3
cs
sub
pop
adc
int
lock
mov
mov
lock
push
stc
test
imul
or
push
jns
mov
dec
cli
pop
mov
fdivl
jecxz
xchg
pop
mov
add
sub
and
test
jnp
dec
dec
jp
mov
jb
xchg
add
sub
imul
aaa
mov
sahf
inc
pop
pop
and
mov
es
push
jmp
sbb
scas
xorl
ds
push
mov
das
fs
fwait
sarl
data16
jo
popl
out
lock
fcoml
pop
nop
or
cli
rolb
pop
pop
inc
pop
fdiv
pushf
adc
inc
icebp
jne
push
mov
xchg
pushf
pushf
mov
jmp
out
sbb
dec
cmc
rcrl
bound
sub
ret
fucomip
aaa
lahf
ret
add
mov
mov
popa
mov
xor
and
inc
cwtl
mov
lret
lods
jne
dec
inc
aam
inc
mov
and
frstor
inc
pusha
xchg
iret
jb
mov
int3
adc
les
addr16
mov
movsb
pop
inc
jno
cmp
sbb
add
xlat
push
int
rorl
scas
xorl
mov
std
ljmp
sub
xlat
lds
outsl
sahf
fs
shl
push
sub
xor
push
sub
push
lret
dec
sti
pop
dec
xlat
popa
sbb
lret
or
loope
push
push
jl
mov
dec
dec
filds
mov
dec
addr16
nop
ret
jl
mov
sub
arpl
insb
outsl
daa
jbe
movsb
lahf
jle
mov
insb
imul
test
lea
fistpl
cmc
sbb
push
jae
cwtl
sbb
push
cld
sti
cmp
cmpsb
jno
adc
outsl
fisubs
pop
sbb
adc
clc
test
or
rorb
adc
stos
inc
add
pop
icebp
xchg
jnp
lods
xchg
scas
inc
mov
push
push
mov
mov
dec
outsb
cwtl
push
out
adc
or
dec
daa
sub
mov
cltd
mov
cmp
mov
adc
adc
adc
ret
push
shl
loope
cld
sub
mov
lcall
addr16
das
cmp
xor
loop
sub
jno
and
mov
mov
jp
icebp
imul
sub
add
popf
add
out
std
xchg
push
and
in
sub
cmp
xor
in
daa
inc
xor
sarb
or
and
and
scas
xor
pop
cmp
in
out
cmpsl
mov
dec
cmc
jg
idivl
fs
inc
cmp
mov
sbb
insb
and
inc
mov
ja
imul
or
xchg
pop
inc
int3
pop
xchg
push
aas
out
pop
mov
push
fmuls
sti
inc
and
insb
push
ret
cmpsl
ljmp
jle
jmp
add
mov
adc
mov
mov
aas
imul
adc
call
jbe
adc
inc
daa
imul
imul
xchg
out
jle
xchg
rcll
int3
in
in
or
loope
outsb
in
repnz
std
mov
stos
mov
adc
mov
lock
push
or
and
adc
js
cltd
popa
mov
or
stc
fdiv
cld
pop
mov
inc
push
inc
push
orl
mov
mov
mov
std
xorb
sub
jno
or
sarl
lahf
inc
or
add
pop
iret
mov
fnstsw
ret
lds
lds
mov
jp
lds
inc
and
sub
or
mov
outsb
mov
adc
jbe
inc
aad
sub
push
pusha
jmp
aaa
or
cmp
cmc
scas
sub
scas
push
repnz
in
fdivs
jnp
dec
loope
ret
les
je
push
pop
int3
inc
nop
jle
je
jl
sub
inc
push
sub
outsl
movsl
test
or
testb
loop
push
hlt
outsb
repz
les
rol
test
push
mov
sbbb
jecxz
push
seto
mov
add
pop
mov
shlb
mov
shr
mov
dec
sarl
jo
outsl
xor
and
fldcw
daa
mov
push
fcomps
loop
dec
push
loope
sbbl
push
dec
ret
dec
xchg
inc
in
sahf
inc
add
rcrl
std
outsb
and
in
mov
nop
out
sub
lret
lcall
xchg
lret
dec
fistpll
push
jae
dec
adc
pop
sub
add
push
jae
lahf
or
mov
fdivrs
stos
pushf
mov
mov
fs
mov
xchg
jbe
push
in
mov
push
inc
aaa
xchg
cmp
in
shl
cli
stos
mov
mov
sbb
and
mov
outsl
stos
xchg
call
js
inc
into
mov
add
jns
add
sub
int3
jns
pop
inc
adc
jo
jge
int3
push
and
in
repnz
ja
sbb
into
outsb
pop
pop
scas
in
mov
rcrl
pop
fists
loop
inc
in
int3
movsb
enter
pusha
cltd
mov
mulb
push
push
pop
adc
out
aad
fs
imul
inc
mov
adc
push
mov
hlt
clc
std
aad
fs
mov
xor
mov
cmp
add
enter
or
xor
cwtl
jecxz
andl
cmp
aad
sahf
or
inc
sbb
cltd
in
ja
pop
push
aas
lahf
jge
xor
fisubs
out
xchg
jo
cld
aam
aad
lahf
js
and
fidivrl
mov
lock
push
mov
pop
sub
and
jo
cmpsl
addr16
cmp
mov
add
and
imul
add
cmpsb
pop
test
mov
mov
dec
mov
mov
pop
mov
push
sbb
mov
mov
int
adc
xchg
and
add
int3
mov
mov
jp
jnp
inc
shl
js
push
arpl
pop
mov
push
sbb
mov
das
pop
xor
cmp
les
fdivrp
xchg
sub
add
ss
dec
jge
test
pop
dec
pop
mov
mov
call
in
xor
mov
cmp
push
sbb
shrb
mov
rol
ss
dec
mov
push
push
int3
fs
cmp
sub
pop
fisttpll
pop
aam
in
push
ret
pop
pop
rorb
into
das
jp
mov
mov
movsb
inc
pushf
adc
out
push
dec
jl
test
fildl
aam
aas
lock
test
dec
sbb
jle
psubsw
je
mov
aas
inc
xchg
in
mov
mov
dec
bound
xor
sub
xor
and
inc
push
stc
loop
xchg
xchg
test
push
fnsave
lcall
or
or
inc
lods
inc
aam
sbb
cmp
aaa
cmp
xor
cmpl
clc
icebp
dec
sub
mov
insb
call
mov
jmp
or
pusha
icebp
fisttps
inc
mov
sahf
jle
add
fnstcw
inc
push
cwtl
pop
ja
ret
fcoms
cmp
sub
fwait
xor
andl
pop
sbb
jnp
lds
mov
cmp
negb
inc
test
jecxz
ljmp
aam
add
sbbl
mov
shll
arpl
bound
mov
fnstsw
add
sub
into
sbb
jno
jmp
xlat
or
cmc
out
aad
mov
pop
rorl
fsubl
mov
rcl
pop
fsubrs
xchg
shll
ret
popa
cltd
pop
insl
xlat
xor
jnp
jmp
mov
mov
xchg
add
push
paddb
sbb
and
jbe
imul
dec
in
enter
sbb
pop
inc
int
add
mov
sub
adc
xchg
pop
mov
mov
cmpl
shrb
xor
mov
dec
push
add
in
xor
xor
mov
out
sbb
jge
faddl
dec
mov
xchg
jecxz
sub
inc
fiaddl
jl
xor
jle
lcall
daa
mov
or
xchg
lret
das
pop
insb
mov
mov
loopne
or
idivl
cli
in
sub
sar
stc
lret
std
jp
cmp
mov
js
xchg
adc
test
sbb
or
inc
jg
and
in
lahf
addr16
mov
cmp
inc
or
push
sti
cmp
aas
xchg
out
push
neg
jmp
jg
xchg
pop
mov
divl
hlt
mov
loope
mov
mov
shl
inc
lret
lock
addb
add
xchg
jmp
and
pop
jnp
popa
out
fwait
mov
pop
sub
enter
mov
sbb
jne
in
sbb
leave
and
xchg
into
lsl
push
movsb
add
or
ret
inc
xor
mov
inc
sbb
and
sti
lret
js
cs
mov
mov
mov
or
adc
inc
pop
mov
sbb
pop
jmp
fdiv
iret
xor
scas
push
pop
sbb
aam
test
out
iret
gs
fldt
imul
sbb
mov
xorl
pop
mov
sbb
xchg
fistpl
sti
jmp
xchg
outsl
std
clc
stos
sub
fwait
inc
aas
fdivrl
rcrb
out
mov
lret
cmp
jp
sub
pop
aam
xchg
lock
and
cmc
cmp
mov
test
fsubrs
pusha
cld
dec
cmc
movsl
jecxz
aam
cmpsb
xchg
cwtl
pop
sbb
fisttpl
sub
cmc
add
push
sub
pop
push
sbb
test
fisttps
pop
daa
ss
dec
js
push
lret
jp
adc
mov
pusha
push
cmp
les
adc
lcall
fwait
test
arpl
xchg
dec
rcrb
fadds
cmp
scas
ror
jg
decl
aad
adc
mov
push
movsl
mov
repnz
sbb
dec
cmc
sbb
cs
daa
inc
jmp
mov
or
aad
repnz
push
lahf
imul
daa
gs
mov
xchg
fs
cld
lahf
inc
push
mov
sub
mov
pop
sbbb
sub
dec
lods
add
nop
daa
xchg
pop
data16
xchg
movsb
mov
aaa
cmpsb
out
jle
mov
cmp
xchg
push
fmulp
mov
jbe
incl
sbb
jb
subb
add
mov
std
push
flds
insb
sbb
xchg
push
test
or
mov
jp
and
push
fbstp
inc
fdivl
nop
mov
out
mov
xchg
adc
in
ljmp
push
cld
mov
jae
data16
in
xor
iret
mov
popf
pusha
pop
jecxz
insl
pusha
mov
jle
jns
enter
push
xor
jb
fisttpl
pop
xchg
and
adc
sbb
test
loopne
mov
adc
and
and
push
stc
cmpxchg
jns
jg
or
rorb
cmc
add
pop
fwait
jb
fistpl
enter
pushf
leave
mov
test
arpl
insb
mov
xchg
aad
pusha
pop
popf
out
repz
es
jge
cmp
inc
sbb
sbb
and
cmp
out
lahf
mov
xadd
fldcw
pop
add
mov
repnz
icebp
mov
pusha
inc
subl
aam
inc
xchg
and
fs
push
mov
fcompl
ds
aas
shll
push
ret
pop
mov
push
push
and
daa
jo
xor
jnp
mov
adc
ret
adc
cli
mov
outsb
inc
push
add
test
cmp
movsb
cs
dec
cmpsb
cmc
movl
sbb
sbb
ja
insl
mov
cmpsl
push
out
adc
sti
push
pop
mov
cmp
xchg
or
int
xchg
jg
ficompl
mov
shlb
mov
roll
lods
cmpsl
mov
add
mov
das
push
xchg
xchg
je
fstpt
out
jge
push
mov
fs
cmp
dec
cmpsl
mov
inc
call
icebp
aad
mov
jle
lods
sbb
and
sti
mov
pop
loopne
and
mov
and
dec
jle
xchg
repnz
cmp
lods
ret
iret
and
loope
dec
mov
add
xlat
adc
or
sahf
ficoms
dec
dec
ficoms
push
shl
or
lds
and
loopne
inc
cli
roll
cltd
pop
xor
outsl
mov
shlb
jecxz
cmpsl
adc
and
test
sahf
sub
test
jne
cli
out
int
xchg
lds
out
insl
jmp
ja
orb
jle
lods
add
mov
icebp
mov
sbb
ja
movsl
ljmp
std
dec
sahf
xchg
xor
data16
jb
mov
xlat
int
out
lea
ss
mov
xor
ja
xorl
or
inc
adc
nop
xchg
icebp
jae
jmp
xlat
jnp
test
out
out
push
xchg
jp
and
cld
push
insb
add
pusha
repz
dec
dec
ret
bnd
fwait
popf
pop
movsl
out
or
and
push
push
xor
outsb
cmp
ss
mov
add
add
iret
cmp
jp
cmp
insl
cmpsb
mov
and
or
or
jne
xchg
cmp
mov
push
or
xor
fsubrs
sahf
dec
sti
fs
push
cld
sbb
mov
xchg
lcall
cmp
push
xchg
add
gs
and
test
fsts
jg
mov
insb
xor
xor
pop
js
in
test
les
pushf
sbb
fstl
cmp
xor
jecxz
and
mov
pusha
sarb
cmc
imul
int
mov
lea
pop
sub
xor
jae
fisttpl
xchg
out
mov
ds
push
and
sub
fbstp
mov
shl
sbb
lret
mov
jb
test
push
dec
rorl
mov
add
je
adc
cmpsl
push
rorb
push
or
inc
pop
or
or
subl
in
faddl
sbb
push
ds
pop
xor
jbe
mov
and
adc
fcmovu
push
pop
xchg
sbb
sbb
or
inc
mov
push
adc
mov
sbb
bnd
mov
add
aaa
cmp
mov
xchg
in
out
cmp
clc
pop
aam
mov
jl
test
sub
test
dec
or
sbb
lods
adc
hlt
dec
testb
leave
repz
nop
or
dec
nop
aaa
movsl
push
mov
mov
fcomps
xor
out
das
pop
mov
inc
jbe
imul
cmp
shr
or
stos
ds
sbb
mov
mov
mov
inc
addr16
imul
sub
sahf
out
mov
ret
xchg
lods
cli
scas
xchg
shrl
mov
hlt
mov
insl
xor
mov
inc
inc
int
mov
adc
mov
shrl
jae
xchg
mov
fmulp
pop
les
clc
mov
clc
outsb
mov
iret
xor
xchg
popa
cmp
stos
fsubs
enter
pop
icebp
dec
pop
pushf
vmulss
aaa
cwtl
xchg
gs
push
sub
pop
cld
cmpsb
stc
mov
mov
mov
push
mov
aad
pop
mov
fisttps
push
jecxz
jo
jbe
mov
test
sbb
aaa
popa
sahf
lret
orb
shlb
pop
cli
push
mov
pop
jmp
jl
xor
dec
push
sbb
inc
ret
mov
inc
arpl
lret
or
inc
repz
movsl
enter
test
pop
test
mov
sbb
cmc
je
jae
stos
push
shll
dec
jmp
mov
pop
sbb
pushf
jae
mov
outsb
push
aaa
and
test
dec
in
dec
movsl
jns
imul
push
test
cmp
and
movsb
xor
lcall
cmp
sti
xor
mov
aad
pushf
iret
cmpsl
jno
sub
xlat
dec
ss
or
enter
jmp
std
mov
repnz
ficoml
cmpsb
faddp
xchg
lcall
jne
mov
mov
pop
sbb
push
ret
cmp
sti
dec
lods
jp
xor
in
movsb
mov
xchg
push
cli
jnp
gs
or
xor
inc
xor
mov
mov
adc
sbb
mov
mov
push
push
stc
loopne
adc
jnp
sub
push
xchg
pop
xchg
and
sub
jb
icebp
jmpw
out
xor
mov
push
mov
pushf
xchg
dec
ret
mov
mov
sub
pop
pushf
push
jns
iret
or
sub
add
sbb
jp
mov
jge
sti
repz
cmp
sbb
cmp
jg
cmp
or
in
inc
fidivrl
dec
cmp
movsb
rcrb
push
arpl
sbbl
mov
mov
hlt
ret
fmulp
pop
xor
jge
dec
mov
scas
xchg
mov
ds
xor
inc
fnstenv
hlt
pop
add
jge
sbb
dec
xor
dec
add
push
ljmp
inc
xchg
mov
jp
ds
lds
xor
int
mov
subl
inc
loop
mov
mov
dec
ss
mov
popa
movsb
enter
pop
jmp
pop
sub
mov
xor
xor
sub
xlat
or
jns
mov
or
cld
in
push
pop
cmpsb
mov
ljmp
add
test
mov
adc
pushf
adc
dec
jecxz
roll
loopne
add
pushf
dec
imul
mov
inc
mov
add
inc
xor
subl
xor
xchg
push
cmp
xor
popa
cmp
nop
or
dec
lds
or
js
std
or
xchg
sbb
dec
xchg
fstl
sub
jp
fdivrl
pop
and
and
push
popl
ret
fs
mov
cmpsl
ret
add
mov
mov
imull
sub
mov
or
loope
xor
pop
rcll
data16
subb
mov
lret
jp
arpl
adc
mov
imul
shlb
cmp
lea
sahf
push
in
rcrl
fsubrl
pop
jnp
push
dec
push
adc
test
mov
movsl
inc
ret
pop
pusha
fwait
loop
dec
pop
fwait
sbb
ret
inc
mov
add
pop
fldl
sarl
dec
pop
enter
out
xchg
lcall
sbb
cmpsb
ret
fs
sbbl
mov
cmp
lods
jo
and
fcmovnbe
leave
nop
dec
push
ret
flds
or
cli
pop
ret
cmp
sub
pop
pusha
sbb
movsb
movsb
push
int
dec
lock
out
outsb
dec
xchg
and
xchg
lds
lods
in
cmc
clc
gs
jns
mov
loope
jb
movsl
mov
ficompl
out
jp
fxch
fstpt
cmp
jnp
jecxz
sub
fldt
lcall
or
loopne
or
sub
test
je
divl
jno
pop
pop
subl
retw
xchg
mov
mov
push
dec
lahf
pop
dec
dec
mov
xor
out
inc
loop
ret
ja
push
add
outsl
sbb
mov
or
aas
mov
pop
scas
inc
daa
adc
lret
popa
push
inc
and
inc
sahf
or
add
and
shll
push
inc
jecxz
scas
sub
movsl
gs
cmp
fldcw
xchg
test
iret
popa
insb
jne
aaa
subb
mov
xchg
and
or
cmp
divb
in
sahf
repnz
adc
ret
mov
shrb
nop
push
mov
scas
repnz
inc
call
dec
mov
les
jno
mov
cmp
or
testl
loopne
mov
mov
mov
mov
mov
push
mov
cmp
sbb
movb
in
test
insb
das
repz
in
mov
sbb
adc
inc
mov
and
shrl
cmp
dec
outsb
mov
frstor
mov
arpl
notl
int
test
adc
mov
and
xchg
xor
push
aaa
add
mov
and
pop
loopne
mov
pop
push
cmp
dec
lea
pop
lea
cmp
jmp
cld
out
notb
addr16
push
pop
nop
mov
push
jne
add
push
adc
stos
or
adc
cmp
cltd
add
jb
scas
cmpl
sahf
loope
jmp
clc
test
inc
push
out
jecxz
sub
insb
cli
dec
and
repnz
clc
clc
pop
gs
jmp
and
jb
insl
pop
pop
lods
xchg
mov
or
mov
inc
cwtl
daa
cmp
les
or
subl
adc
xchg
gs
lock
xorb
pop
xchg
push
sbbl
inc
xor
movsl
ret
xchg
addr16
fbld
movsb
data16
outsb
xchg
adc
stc
shrb
lock
cmp
mov
xor
xor
mov
lea
lea
rorl
cld
pop
cs
sub
in
divl
int3
adc
inc
push
subl
cmp
jmp
leave
sbbb
pop
or
jmp
cld
out
push
out
ret
adc
push
xor
xor
or
mov
sarb
mov
and
xor
lcall
mov
inc
jmp
push
dec
mov
add
sub
mov
add
nop
jge
in
cli
jg
loop
mov
imul
inc
mov
mov
mov
loope
fiadds
mov
add
push
sti
leave
rcll
adc
xchg
int
jbe
mov
call
pop
outsb
pop
enter
cmovnp
pusha
fistps
mov
jo
std
mov
jnp
adcb
pusha
mov
dec
xor
xor
mov
sub
push
jo
sahf
push
add
jae
lret
mov
incb
cli
pop
push
js
pop
fsubrs
loope
push
and
mov
loopne
fimull
sub
shr
imul
fs
dec
jl
inc
sub
inc
and
jmp
push
jns
mov
and
or
mov
inc
sub
sub
push
jl
lahf
cmpl
fbstp
loope
inc
sub
xchg
and
test
cmpsl
cmp
mov
and
shr
jg
bound
and
cmp
inc
cltd
lea
fidivrs
sahf
fwait
je
test
mov
mov
jmp
jge
repnz
frstor
inc
inc
sti
jmp
aam
fsubr
outsb
jg
xor
inc
cs
inc
movsb
push
xchg
scas
jb
and
hlt
popa
addb
lods
icebp
jecxz
mov
das
jecxz
js
adc
or
aam
jb
js
jge
or
aaa
inc
mov
mov
and
cmpsb
int3
mov
cltd
fucomip
test
jp
cmpsl
test
sub
stos
xor
lods
mov
cmp
and
lret
and
arpl
shll
mov
hlt
loopne
ss
enter
jnp
lds
jo
in
add
xor
ret
jnp
mov
xchg
xor
xchg
xor
imul
fldenv
inc
subl
jno
dec
dec
fdivrl
jge
xchg
arpl
sub
daa
ds
sbb
cltd
xchg
dec
testl
mov
xchg
incb
jg
push
mov
jmp
xor
add
fwait
pop
gs
addr16
hlt
mov
lods
adc
call
jno
inc
add
rolb
inc
stc
or
js
repz
inc
dec
jecxz
adc
shll
lret
cs
fcmovnb
jmp
in
jp
and
arpl
shr
pushf
pop
notl
sbb
ds
pop
push
sub
cmp
js
scas
push
xor
sahf
pop
cld
je
mov
push
and
out
xor
scas
sbb
push
shr
incl
es
sub
icebp
xlat
fs
fs
lods
into
add
rolb
jp
ret
fstpt
jne
lds
mov
sub
mov
xchg
adc
mov
dec
out
push
not
out
scas
stc
cs
xchg
push
jo
mov
test
mov
cmpsb
cmpsl
sarl
fcompl
add
enter
xchg
xchg
dec
push
pop
pop
in
aas
pop
dec
ja
sbb
inc
dec
lcall
repz
fldcw
rolb
dec
mov
fmuls
and
push
aas
sub
int
fstps
push
aam
jle
repz
inc
in
xor
jg
aas
outsb
pop
mov
or
in
scas
imul
cmp
push
test
arpl
les
imul
sbbl
bound
aad
xchg
inc
and
mov
stc
test
jmp
xchg
sbb
xor
aam
mov
test
insl
mov
in
sbb
jo
repz
in
negb
cmp
ret
js
fnstenv
jg
out
in
cmpsb
sub
loopne
xor
rolb
sbb
jg
xor
inc
and
cmc
and
mov
imul
adc
sbbb
lahf
mov
dec
mov
cmp
js
add
xor
fiaddl
sub
mov
cmp
fwait
mov
jnp
adc
imul
ja
sub
jns
inc
sbb
aad
outsl
stos
push
fstpt
mov
mov
cmpsl
imulb
dec
dec
aam
jg
xchg
adc
cmp
mov
push
push
and
aad
test
ja
or
div
cmpb
cli
out
cmp
nop
test
and
movsl
jb
cld
xlat
jge
inc
outsl
nop
mov
xlat
pop
or
add
mov
jg
adc
xor
sbbl
int
shrl
out
bound
mov
out
frstor
sbb
shr
mulb
cmpsb
ja
dec
xchg
push
test
shrl
and
cmp
sahf
add
push
adc
scas
outsl
xor
rol
ljmp
pop
mov
fidivrl
in
cmp
jbe
or
xchg
sbb
sahf
pushf
pop
add
fisubrs
mov
jecxz
movb
arpl
test
xor
sarb
push
jo
xchg
daa
subb
jbe
shl
lods
mov
pop
inc
daa
cld
mov
mov
push
inc
xchg
adc
in
test
inc
hlt
mov
icebp
mov
out
sub
fldt
mov
scas
inc
test
outsl
push
dec
mov
push
cmpsb
cmpsl
xchg
pop
pop
shr
jecxz
or
push
scas
or
jo
sub
dec
xor
lods
and
repz
pop
cmp
inc
jecxz
and
fst
insb
data16
rorl
adc
xchg
xchg
fs
dec
cld
xchg
mov
mov
nop
add
sbb
lret
fimuls
jmp
fcompl
loopne
push
iret
sbb
jp
repz
and
mov
stc
xor
xchg
lea
add
jg
and
aad
ficoms
jg
pop
jecxz
xchg
cmpsb
fcoms
xchg
clc
push
mov
mov
call
std
sub
add
sbb
xor
dec
jmp
or
mov
outsb
xchg
sub
lretw
addr16
aas
idivb
call
pop
adc
cmp
pop
fmull
addl
icebp
mov
ljmp
xor
dec
inc
dec
dec
int
int
or
lock
sti
cmp
jp
jo
fwait
test
jae
xchg
cmp
out
push
aas
testb
and
xchg
push
icebp
popa
push
stos
inc
shlb
call
xchg
or
gs
xchg
push
in
adc
xor
insb
pop
test
sub
dec
push
xor
arpl
add
mov
jo
xor
shrb
inc
lahf
sbbb
ffree
xor
mov
cmp
pop
jbe
inc
fs
pop
dec
cmp
call
jne
cmp
cmp
mov
lret
pop
push
sub
fdivrl
mov
and
iret
mov
lret
dec
mov
cltd
cli
jns
loop
fsubrs
in
inc
sub
into
into
cmp
add
in
ss
or
xchg
xchg
and
cmpsl
aam
sbb
hlt
pop
push
testl
fsubl
jecxz
sbb
cwtl
sbb
sbb
dec
inc
sbb
add
and
xor
mov
test
mov
enter
scas
cmc
js
jbe
xor
sub
shlb
jns
xor
or
psubb
adc
cs
mov
push
cs
lods
dec
and
jno
je
fldl2t
push
adc
inc
ret
aas
test
push
and
mov
popa
add
movsl
xor
lret
enter
xchg
xchg
xchg
sti
std
int3
popl
cmp
pop
mov
add
mov
mov
repz
imul
gs
mov
jp
out
stc
add
inc
sub
push
je
sub
cli
add
xchg
mov
xchg
filds
mov
decb
scas
ss
out
fistps
test
jp
je
in
cmpsl
xlat
xor
mov
and
inc
xor
jno
sbb
push
lds
out
inc
ret
jl
in
arpl
mov
fs
or
cmpsb
cld
test
movsl
das
in
out
mov
fidivrl
icebp
mov
mov
adc
sti
sbb
cmp
shlb
jne
cmp
fwait
sbb
lcall
jnp
xchg
inc
dec
and
testl
dec
ja
inc
fbstp
fstps
ret
adc
and
loope
or
pop
nop
jge
rcl
lds
mov
mov
ljmp
cli
test
mov
add
jg
repnz
cs
imulb
sbb
sbb
sub
movsl
in
imull
jmp
lret
into
popa
cmp
aam
outsl
ja
adc
fs
icebp
lods
jnp
push
jmp
movsb
roll
ljmp
sub
push
repz
cwtl
sbb
mov
pop
ljmp
repnz
lcall
dec
xor
push
sbb
push
fsubrs
mov
inc
ljmp
fsubrl
into
out
lcall
mov
aaa
sbb
jo
stc
ret
push
jg
xchg
in
jge
outsb
pushf
ret
push
fwait
push
sbb
dec
xchg
sbb
jecxz
cmp
inc
add
subb
pop
sbb
and
inc
and
leave
cs
in
add
cmp
scas
adc
add
pop
nop
push
int3
sbb
cli
scas
mov
scas
inc
ret
dec
and
fildll
ja
cld
inc
or
sub
pusha
ds
cmp
ss
sub
hlt
iret
and
inc
es
ret
mov
in
add
jl
add
xor
xchg
pusha
adc
adcl
sbb
test
lock
and
dec
xchg
out
fcompl
aam
sti
iret
or
mov
outsl
cmp
loop
dec
stos
loope
clc
jns
je
jg
dec
or
push
dec
insb
sahf
fwait
lea
lahf
cmp
jl
inc
popf
jl
mov
cmp
and
jno
xchg
cmc
pop
in
push
xchg
sub
shrb
popf
adc
mov
inc
lds
cmp
sub
sbb
xchg
inc
sub
mov
clc
in
mov
fisttps
je
data16
sub
cld
sbb
fwait
cmc
cltd
xor
pusha
movsb
push
pusha
push
enter
call
int
adc
cmpl
loope
rcr
jge
inc
aas
pop
sbb
lahf
fstl
sub
xor
enter
enter
inc
dec
dec
aas
pusha
jnp
jecxz
ret
shlb
push
lret
movsl
sub
es
aaa
pop
sbb
pop
out
sub
mov
out
roll
mov
cltd
jno
mov
pop
dec
mov
hlt
repz
popa
adc
jno
mov
dec
cltd
ja
jo
lret
sbb
out
sub
mov
or
mov
into
ret
icebp
das
loopne
mov
pop
jg
xchg
xchg
pop
lods
lock
cli
cld
jmp
lret
jb
mov
jecxz
inc
pop
insl
mov
jo
cltd
add
mov
mov
cmp
rol
or
xlat
lods
adc
xlat
mov
xchg
mov
ja
cwtl
push
daa
xchg
mov
arpl
nop
add
push
mull
mov
inc
data16
push
jg
mov
pop
push
inc
scas
push
pop
add
ficompl
pop
ss
js
adc
push
jmpw
test
call
xor
lahf
jmp
hlt
mov
inc
shr
ljmp
inc
gs
xchg
test
sahf
sbb
cltd
cmpsb
jo
mov
pop
sub
out
or
xor
sub
pushf
out
es
inc
iret
jle
scas
pop
jne
loope
push
xchg
cmpsl
inc
jne
mov
imul
nop
sahf
leave
sub
mov
dec
and
movsl
sub
jb
adcl
and
sbb
jg
lret
jns
incb
sub
pop
sub
inc
and
jg
outsl
les
nop
adc
xchg
mov
leave
inc
das
xchg
and
dec
stos
insb
lds
mov
test
or
jmp
pop
bound
jmp
ja
aas
and
jp
cmp
pavgb
jle
pop
pop
outsl
and
xchg
push
testb
jecxz
out
sarl
stc
xchg
clc
repz
sub
je
xchg
lods
in
fiaddl
je
sub
xor
jge
jno
arpl
iret
stos
pop
lret
mov
push
dec
sti
nop
cmpsl
pop
in
xor
mov
aad
sub
test
das
jae
and
fstpl
lods
mov
scas
mov
fs
or
mov
inc
cmp
cmp
jae
jo
loop
cmp
mov
sub
js
std
mov
mov
push
add
xor
rcl
pushf
sbb
mov
or
stos
jge
aas
adc
mov
push
lods
dec
andl
inc
add
adc
ret
aad
fsubrl
pop
fdivl
lea
in
mov
andb
pop
adc
loopne
movsb
or
cmp
mov
cld
clc
mov
jl
data16
push
cmp
sbb
push
sarb
mov
mov
cmp
das
cli
call
dec
or
and
fdivs
aaa
aas
mov
bound
push
in
dec
outsb
jp
mov
xor
mov
cmpsb
cs
insb
xchg
les
jp
sbb
add
sub
iret
jecxz
inc
sub
cmp
mov
cmp
and
xchg
sub
adc
movsb
js
push
push
jecxz
fstpt
or
iret
adc
xor
fwait
sbb
bound
pop
fcoms
pop
xchg
push
test
push
pop
dec
fsubs
mov
adcb
aas
sbb
or
mov
xor
gs
push
pushf
insb
dec
cmpsb
jg
mov
cmp
ds
sub
cmp
sub
es
rclb
xchg
xchg
or
in
cmpsb
pop
popf
and
xchg
loopne
or
pop
mov
sub
cmp
adc
addr16
inc
or
inc
test
cwtl
in
loop
inc
es
out
lock
gs
neg
xchg
insl
jno
jecxz
sbb
push
cltd
adc
mov
cmp
rol
adc
adc
inc
dec
adc
add
xchg
fmull
imul
sahf
sub
repz
daa
ljmp
divl
fwait
or
icebp
jnp
sbb
rclb
mov
stc
sbb
mov
pop
mov
negb
lods
pop
jnp
fwait
out
jmp
xchg
pushf
cmp
and
lahf
sub
push
data16
movsb
adc
repnz
jns
push
pop
dec
adc
leave
pop
insb
shl
test
push
cld
jno
xchg
sbb
cwtl
gs
xor
inc
xor
sbb
lret
cmp
add
bound
shll
sbb
push
and
cwtl
xchg
rorl
pop
mov
imul
pop
stos
call
outsl
hlt
ret
mov
rol
test
imul
pop
xor
inc
scas
add
or
jl
push
daa
enter
mov
sub
inc
pop
clc
push
mov
fisttps
stos
xchg
sbb
ss
cmp
xchg
mov
dec
push
scas
xor
push
jge
and
jnp
es
in
lret
mov
jg
mov
adc
xchg
aas
jb
fimuls
mov
das
dec
mov
daa
rorb
fs
add
fwait
sub
ficompl
roll
sub
mov
sbb
pop
push
cmpsb
mov
and
in
aaa
ret
in
cmpsl
adc
mov
mov
mov
bound
add
aam
lea
xor
lahf
and
mov
pop
sbb
mulb
mov
movb
test
loopne
jnp
jge
cmp
push
pop
ud2
cwtl
das
sbb
stos
add
loope
popa
into
xor
jo
cmp
dec
ja
add
inc
inc
or
inc
jne
xor
bound
inc
mov
sub
fimull
sarl
adcb
mov
and
xchg
lahf
imul
sub
stos
mov
shlb
xchg
sahf
repnz
into
and
scas
mov
cmp
adc
push
dec
in
ja
rorb
mov
adc
lret
and
pop
dec
mov
jge
inc
lock
cwtl
and
arpl
xor
or
fcomip
mov
pop
gs
xchg
sbb
jg
mov
sbb
lcall
or
push
aaa
jmp
cmp
push
int
dec
mov
fbld
ret
jae
js
jnp
inc
dec
cmpb
stc
pop
shr
push
icebp
les
xchg
xchg
mov
lret
sub
mov
incb
push
lret
xchg
inc
ja
adc
lcall
cmpsb
jge
mov
shl
mov
xchg
lock
xor
xchg
test
stos
subl
dec
mov
dec
mov
mov
add
icebp
shll
push
jnp
jge
test
orb
or
shlb
aaa
and
fmull
sub
mov
push
insl
xchg
sbb
xor
cmpsl
pop
or
dec
aas
fildl
jne
testb
std
mov
lods
push
test
in
push
dec
sub
push
rclb
test
divb
sbbl
js
out
jb
loope
pop
xlat
jg
xor
lock
mov
ljmp
je
jno
sbb
pusha
ds
mov
pop
cmp
scas
mov
aam
rorl
xchg
imulb
jo
incb
daa
sbb
cmp
out
xchg
clc
outsl
cmpsl
clc
cmp
xchg
je
and
sub
push
lods
enter
adc
jns
xor
div
scas
xchg
in
mov
jno
fwait
movsb
cltd
test
pop
ds
jno
test
daa
das
mov
aam
and
and
mov
arpl
pop
insb
jnp
xchg
pop
addl
or
mov
cli
test
cli
imul
or
push
pop
mov
movsl
int3
or
das
popl
jle
cmpsl
jbe
cmp
pop
idiv
jb
ret
lcall
mov
add
sbbl
popf
iret
inc
pop
fcmovnu
cmp
stos
data16
jno
mov
scas
cwtl
or
xchg
dec
pushf
pop
adc
mov
int3
sahf
sbb
nop
popa
jl
mov
mov
pusha
sub
fdivrp
or
pop
lds
sbbl
mov
xchg
xchg
mov
sbb
inc
cli
sbb
into
sarl
je
and
loop
test
lods
push
and
fstpt
ss
nop
cmpsb
idivl
mov
jbe
fs
gs
dec
mov
lock
dec
loope
shrl
flds
mov
inc
shrb
adc
sbb
iret
dec
jg
es
jl
sbb
test
xchg
sub
push
adc
push
mov
ljmp
cmc
add
jae
xlat
mov
aas
sbb
cmc
sbb
jmp
dec
xchg
in
movsb
das
notl
push
ret
hlt
or
jnp
div
iret
imul
xchg
jnp
lock
out
popf
mov
popa
cmc
xchg
mov
jae
xor
sti
mov
in
ffreep
les
pushf
scas
push
push
adcl
sub
loope
test
adc
sar
cmp
jae
xchg
inc
jno
push
popa
push
dec
add
sub
sbb
lods
and
mov
int3
into
xor
cwtl
push
shll
sub
int
push
fidivs
cli
ja
std
decl
xchg
mov
shl
lea
cmp
leave
pop
test
stos
cmp
cld
test
mov
cmp
inc
in
xor
fldt
xor
adc
test
or
out
cltd
shl
cmpsl
sub
fnstsw
push
stos
or
sub
jmp
sahf
cltd
sub
lds
sub
dec
mov
loope
push
aaa
fsubr
or
fsubl
lock
dec
sub
xchg
jg
loope
dec
pop
push
jecxz
adc
ljmp
and
sub
mov
mov
push
mov
lods
dec
cmpsb
fistpl
adc
push
fcomip
lods
jo
mov
mov
cwtl
into
into
sbb
aad
sarl
xchg
js
mov
lea
popf
gs
lret
iret
cltd
mov
js
push
shlb
bound
pop
or
aaa
adc
lea
jnp
orl
mov
push
xchg
dec
mov
fwait
jge
addr16
lret
das
jb
cmp
inc
jnp
push
setb
jp
hlt
in
fsts
push
xor
mov
out
push
dec
lods
imul
lret
gs
shll
xchg
push
add
das
and
fistpl
inc
in
lea
pushf
fldenv
push
xchg
xchg
insl
mov
adc
dec
lret
fiadds
pop
dec
clc
jnp
mov
push
xchg
push
pop
dec
test
xchg
stc
repnz
pop
cmpsl
jl
jp
mov
and
aad
mov
xor
test
mov
push
jno
insl
and
outsl
fildll
mov
sub
and
loope
clc
mov
xor
mov
xchg
xchg
and
mov
or
inc
cld
pop
lahf
mov
xchg
popl
push
and
sub
jbe
or
fbld
sub
jmp
movsl
mov
ficompl
out
lret
movsb
jl
es
jl
nop
insb
fsubs
cmovb
ljmp
jecxz
fisttpll
sti
shl
call
mov
sub
cmp
repnz
sub
cmp
pop
mov
sub
dec
dec
imul
sbb
test
push
call
or
inc
les
stos
out
movsb
pop
jb
jno
aad
push
xchg
mov
xchg
jmp
out
add
mov
in
rorb
test
in
sbb
pusha
hlt
stc
xor
inc
arpl
sti
jle
mov
clc
sub
mov
int3
inc
cmp
xlat
repnz
gs
adc
arpl
adc
and
dec
xchg
stc
fbld
es
jecxz
hlt
fcmovnu
mov
sbb
icebp
stos
xchg
jmp
mov
fsubp
add
lahf
mov
jecxz
adc
cmp
movsl
inc
jb
dec
in
filds
mov
jae
fildll
mov
movsl
mov
push
xchg
xchg
mov
int3
sbb
or
jg
push
jle
test
hlt
pop
ja
jmp
cmp
add
lahf
pop
loopne
jns
mov
pop
insb
mov
xlat
mov
pop
cmp
fsubs
test
mov
clc
outsb
jecxz
lds
cmp
sahf
dec
cmp
mov
lret
push
or
dec
cmp
int
mov
loop
xchg
fistpl
cmpsb
fwait
loope
popa
cli
mov
push
das
movsl
or
sub
in
jl
repnz
mov
cmpsb
or
xor
cmp
dec
xchg
js
fnstenv
popa
hlt
loop
inc
lret
cmpsb
and
call
inc
popf
sub
das
int
out
repz
ja
and
mov
sti
subl
les
fmull
repnz
add
loopne
pop
mov
mov
cmp
sbb
cli
fnstenv
jg
jge
addb
jae
push
adc
add
ljmp
sahf
and
and
cld
adc
jle
cmp
cmp
cmp
fidivrl
pop
fbld
pusha
inc
out
ljmp
bound
in
aad
pop
xor
adcl
loopne
inc
ljmp
in
and
xor
xchg
lahf
push
mov
testl
iret
lock
sbb
jge
xchg
sub
push
movsb
jl
sub
adc
inc
mov
pop
pop
mov
lds
push
fcmovnbe
into
dec
jle
cmpsl
loop
adc
jne
jl
in
jne
das
movsb
das
ljmp
int3
xor
dec
in
add
xor
mov
mov
and
dec
cmp
xchg
pop
stc
stos
loope
jno
adc
out
mov
and
cltd
sahf
imul
aam
sahf
aam
fnstsw
fscale
clc
sub
add
xchg
or
pop
rol
mov
lret
aad
mov
insl
es
enter
stc
add
das
and
cmp
sbb
jmp
lds
ljmp
jmp
xor
mov
mov
or
mov
inc
sbb
les
sub
fmuls
push
lcall
scas
dec
nop
add
xor
jecxz
in
imulb
or
push
mov
sbb
in
xor
dec
pusha
stos
icebp
jle
mov
clc
gs
ret
and
adc
sub
ret
xor
addr16
out
add
or
stos
and
fsts
sub
inc
push
xchg
mov
dec
inc
adc
cli
ja
mov
push
mov
ja
mov
xor
adc
in
dec
push
repnz
adc
pop
loop
and
xlat
shlb
fistl
xchg
hlt
pop
addr16
cld
mov
les
mov
mov
movsl
push
push
sub
sub
daa
outsb
mov
inc
sahf
mov
enter
jp
sarl
ds
in
cld
aaa
mov
gs
fistps
test
pop
rorb
inc
xchg
push
scas
inc
lock
aam
gs
inc
jg
lcall
dec
dec
inc
mov
movsl
imul
mov
cltd
enter
scas
div
jne
and
in
fwait
popa
pop
popa
add
xchg
testb
xchg
push
icebp
xchg
mov
xchg
sub
dec
push
jmp
pop
test
nop
rcrl
clc
pop
cltd
or
cmp
mov
or
rclb
xor
dec
inc
sub
popa
xchg
bnd
roll
xchg
sub
insl
mov
out
cmpsb
rcrb
fstps
xor
ror
or
mov
das
rorl
mov
int
sub
les
push
mov
cmp
mov
fimull
insl
repz
sub
inc
jo
mov
push
pop
es
ljmp
call
cmpsl
inc
inc
dec
inc
enter
lock
sub
stc
nop
push
jne
or
mov
xor
lock
and
insb
mov
jmp
xchg
push
repnz
cmove
outsl
adc
fisubrs
fs
add
js
in
ja
pop
xchg
nop
xor
push
sbb
imul
jnp
mov
imul
cld
int
dec
or
incb
les
push
dec
push
mov
je
xlat
rcll
ret
cmp
jae
outsb
pusha
xchg
imul
sbb
pop
leave
pop
and
mov
aam
push
push
fdivrs
adc
out
loop
lods
xlat
das
fwait
cmp
cmp
push
dec
stos
shl
jp
hlt
pop
lds
test
mov
sub
rclb
mov
add
xor
xchg
mov
cmpsb
lds
pop
pop
dec
test
arpl
test
or
sbb
xlat
lret
leave
push
stos
cmpsl
push
ret
mov
cltd
mov
in
fidivl
fidivrl
mov
pushf
xchg
push
push
sub
test
pop
mov
jb
mov
xchg
dec
ds
mov
cli
sub
test
mov
cwtl
mov
jae
push
push
mov
pop
pop
ljmp
fstp
add
push
or
or
xchg
push
push
call
pop
or
test
jl
sub
rcl
fcompl
sub
popa
je
loope
std
cmpsl
repnz
iret
adc
clc
ficompl
stc
ss
cmp
adc
dec
out
jae
push
out
adc
wrmsr
pop
cmc
leave
cld
pop
pusha
push
xchg
loope
xor
and
into
scas
and
jno
scas
adc
cmp
xchg
pop
push
pop
pop
push
inc
leave
pop
inc
cmp
ss
lahf
push
popa
cmp
mov
fcomp
enter
push
sete
cmp
int3
sub
stc
mov
jmp
jecxz
pop
pusha
mov
push
mov
xor
jno
cmc
dec
lret
mov
js
mov
adc
mov
out
in
ror
fists
xor
repz
nop
pop
inc
sbb
adc
ret
adc
xchg
je
ljmp
xor
push
cmp
cli
rolb
scas
pop
pop
jp
out
lea
roll
push
mov
clc
leave
sub
xor
popa
dec
insb
iret
pop
push
clc
jecxz
dec
imul
scas
push
insb
cli
mov
out
push
sarl
pop
daa
mov
hlt
mov
out
xor
add
std
sahf
dec
adc
push
cli
add
into
cmc
andl
scas
js
cld
and
pop
mov
adc
stos
mov
inc
jns
int3
mov
enter
fistl
aam
jno
lret
jne
or
cmpsb
jp
scas
xor
push
enter
repnz
push
inc
daa
xor
xchg
sub
xor
addb
jg
iret
or
frstor
call
roll
xor
lahf
xorb
mov
je
xchg
pop
mov
cmp
pop
pop
xor
inc
xor
dec
sbb
ret
in
lahf
xchg
stos
pop
cmp
xlat
cmc
subl
clc
mov
adc
push
push
jno
in
repnz
xchg
fistps
push
cmpb
xlat
pop
iret
mov
dec
into
imul
jbe
popa
lcall
jbe
dec
rolb
jno
and
mov
jecxz
sahf
add
out
out
lods
cmp
jne
vpsrlw
mov
mov
into
insb
loop
jno
mov
data16
movsb
test
fwait
movl
dec
pop
adc
scas
dec
sub
add
arpl
in
jne
xor
and
ret
xor
mov
iret
adc
adc
in
test
lret
mov
mov
test
mov
xor
sub
push
add
xchg
inc
aaa
outsb
xchg
jnp
dec
mov
xchg
dec
mov
adc
fidivrl
jae
les
test
adc
sahf
inc
push
sub
lock
cmp
adc
jne
cmp
icebp
xlat
sbbl
sbb
add
cmp
stos
negb
test
push
jns
adc
cmpsb
cmp
stc
sbb
adc
js
push
movsl
sbb
imul
stos
pop
ds
fwait
push
mov
pop
dec
loop
dec
iret
dec
jp
add
mov
xchg
adc
add
dec
inc
lods
push
sbb
call
ja
stos
push
jns
mov
pop
push
mov
push
ja
stos
push
int
push
cmpsb
and
push
ret
and
arpl
outsb
jp
int
sbb
jg
insl
sub
mov
cmp
int
popf
nop
dec
mov
rorb
lods
cmpsb
mov
mov
lds
mov
or
add
sbb
adc
lods
testb
pusha
rclb
sbb
dec
and
xchg
ret
add
stc
cmp
dec
mov
xor
adc
inc
sub
shlb
out
mov
pop
adc
and
jns
cmp
xchg
dec
arpl
sbb
mov
and
loope
mov
call
int3
push
jp
jg
pop
xchg
or
sbb
rolb
cmc
pop
mov
das
sub
mov
xchg
pop
out
cwtl
mov
mov
out
inc
ljmp
movsl
scas
sahf
inc
jecxz
das
jp
push
dec
sub
add
sbb
cmp
sub
push
leave
xchg
xchg
pop
mov
mov
mov
jmp
inc
test
mov
imul
std
and
add
mov
cmp
fidivs
pusha
push
jmp
sbb
push
mov
imul
xlat
dec
and
push
xchg
scas
rcrb
mov
pop
mov
jl
and
test
jb
cli
jno
ja
movsl
pop
cmpsl
movsl
adc
push
repz
cmp
push
lcall
jg
xor
adc
mov
mov
out
cltd
cmp
inc
out
ljmp
sbb
out
cmp
iret
inc
out
dec
inc
insb
inc
cli
int3
pop
xor
jno
dec
dec
add
pop
jo
push
pop
sub
stos
add
call
push
shl
add
jne
mov
in
jmp
mov
add
jg
mov
jnp
fisttpll
sbb
dec
imull
out
or
std
cld
fcomps
test
ret
call
imul
push
lock
lret
sbb
enter
or
jbe
and
mul
movsb
push
pop
inc
das
sahf
lret
insb
add
xchg
mov
orl
sahf
fs
adc
lret
sbb
test
mov
dec
psrlq
icebp
jle
cli
push
dec
pop
mov
push
pusha
adc
jne
lret
js
inc
outsl
inc
int
clc
push
imul
mov
popa
jbe
repz
lret
xchg
sub
add
jmp
sahf
mov
mov
jecxz
inc
lret
lcall
lds
or
dec
or
mov
das
add
fs
add
cmp
pusha
jecxz
in
inc
cli
xor
inc
mov
pop
mov
popf
out
daa
inc
pop
and
lret
sub
incl
pop
inc
xchg
push
mov
rcr
sbb
jbe
dec
jb
bnd
add
or
loop
pop
sti
fldl
push
mov
pop
lods
sbb
inc
addr16
test
push
sbb
jns
inc
sub
xor
inc
lret
push
sahf
fwait
imul
and
jbe
xor
mov
xchg
aam
inc
adc
dec
ljmp
dec
aas
push
add
ficoms
test
icebp
cmp
push
cmp
lcall
and
sub
push
data16
mov
cmp
mov
shl
sub
cmp
jae
jbe
inc
push
adc
test
cmpsb
sub
adc
sbb
je
imul
int
lea
cmp
cmpsb
pusha
inc
push
and
add
jecxz
push
outsb
je
js
dec
into
inc
push
bound
ss
iret
aaa
or
stos
jo
mov
cmpsb
into
inc
push
xor
mov
sahf
lods
ljmp
cltd
fisubrl
sub
in
xor
sub
add
cmc
lcall
pop
jg
repz
jbe
scas
mov
fwait
out
inc
ja
out
mov
fwait
sbbl
sbb
shrb
out
in
aas
movl
xchg
jo
loopne
xorb
xor
orb
pushf
pop
movsb
repz
sbb
mov
sbb
stos
xor
cmp
lret
fsubrs
movsb
sbbl
or
out
push
test
adc
pop
add
pop
test
mov
test
inc
fbstp
add
jae
lods
push
shrb
into
push
inc
gs
fcoms
mov
imul
loope
push
lods
fstpl
test
lahf
mov
xor
push
lcall
lahf
xor
scas
stc
fistl
xchg
aas
cltd
loopne
adc
pushf
test
adc
push
push
and
adc
fimuls
mov
jmp
nop
or
xor
cld
pop
mov
ss
sti
icebp
dec
mov
and
scas
mov
icebp
cmp
leave
xor
lcall
stos
decb
cmp
inc
aas
aam
jb
inc
sbb
movsl
cmp
fadd
lretw
stos
cmp
jns
cld
mov
jae
pop
dec
les
out
pop
pop
push
addb
das
inc
pop
jae
mov
jmp
adc
mov
inc
pop
movsb
data16
cmp
enter
adc
sub
dec
rcll
pusha
cltd
fidivl
inc
inc
fsts
mov
pop
pop
out
adc
fistpl
fnstsw
sarl
rol
mov
jmp
and
int3
dec
jge
out
in
sub
call
adc
es
xchg
mov
xor
mov
jecxz
push
mov
add
jnp
sbb
mov
inc
addb
jg
and
shlb
sub
sub
push
and
sub
mov
dec
add
stos
pusha
xorl
stos
jno
es
mov
pop
adc
je
outsb
clc
pop
or
jp
dec
jae
lock
jns
xchg
imul
movsb
pop
jle
or
and
test
or
mov
push
or
pusha
iret
fisubrl
clc
inc
in
mov
jne
and
dec
jno
hlt
ret
pop
rclb
dec
arpl
jp
push
adc
dec
add
aam
mov
fcmovnb
fdivr
cmpsl
jb
inc
push
addr16
je
pop
sbb
popf
dec
cmc
stos
xor
clc
rol
cmpsb
test
rorl
test
or
jle
fbstp
jle
shlb
cld
sub
je
popl
sub
sub
jmp
pop
or
pop
cmp
out
push
dec
push
test
into
leave
add
clc
adc
imul
lret
rcr
dec
sub
jmp
push
sub
stos
mov
xor
mov
jl
sub
ret
fsubl
mov
cmp
sbb
cmp
loopne
enter
outsl
mov
outsb
push
xchg
xchg
test
push
mov
dec
test
test
add
cmp
outsb
ja
lea
mov
lods
xchg
mov
pop
push
xor
pop
or
or
pop
push
loop
mov
jecxz
shlb
enter
out
out
or
or
in
sbb
push
out
push
mov
pop
out
clc
into
inc
arpl
push
pop
xorb
movsl
jp
rcll
lea
cmp
mov
lods
dec
jnp
or
sarl
adc
jg
mov
dec
lret
mov
sub
push
in
mov
shlb
das
fidivrl
push
lds
mov
ret
mov
or
jae
mov
dec
es
sbb
fistl
push
hlt
addr16
jno
in
daa
mov
stos
cltd
imul
int3
mov
inc
aas
pop
cmp
aam
mov
cmp
jge
pop
sbb
out
jp
sbb
push
out
scas
push
inc
jb
scas
jge
dec
push
cmpb
inc
out
xor
daa
sub
ss
shrl
add
les
rorb
loope
repz
sti
sbb
xchg
fldcw
outsl
jmp
iret
and
shrl
mov
je
test
clc
call
daa
dec
out
jo
or
cs
add
subl
xchg
scas
cmpsl
adc
fnstenv
popa
fidivs
fstpt
sbb
xor
jmp
iret
or
in
mov
inc
sbb
ljmp
mov
std
shll
je
inc
or
pop
jns
push
movsl
cld
cmp
mov
into
inc
in
movsb
jecxz
or
daa
js
xor
sahf
popa
or
sar
mov
jl
pusha
inc
fisttpll
add
mov
sahf
xchg
pop
cld
sbb
mov
jbe
adcb
shr
test
subb
mov
push
fldl
in
mov
xchg
inc
jmp
fs
inc
test
pushf
mov
lods
fldl
mov
movl
add
sti
fimuls
or
mov
sahf
inc
and
jns
adc
xchg
pop
int3
push
adc
stc
lock
test
inc
xchg
xchg
push
or
cmpsl
out
cmp
das
mov
fsts
lret
pop
mov
mov
es
sub
nop
fwait
shlb
push
shrl
jbe
pop
inc
dec
ret
lret
scas
mov
cmpsl
inc
pop
adc
cltd
stc
popf
adc
cmp
cld
dec
sub
mov
and
and
xor
out
inc
stos
dec
decl
sbb
sub
cltd
in
sbb
or
mov
mov
inc
mov
cmpsb
add
popf
lock
jl
adc
mull
lret
mov
sub
adc
lods
add
jg
mov
inc
hlt
jns
test
ss
adc
das
popa
lea
icebp
popa
cmp
add
mov
and
cli
into
ds
mov
push
mov
inc
push
inc
cli
pop
outsl
pusha
sbb
stos
cwtl
push
lahf
enter
enter
ds
outsl
cmpsb
stos
cmp
inc
aas
shll
dec
pop
sbb
push
cmp
mov
sbb
fsts
push
inc
mov
jg
je
sbb
hlt
mov
xchg
inc
mov
add
mov
jbe
rol
int3
mov
jae
pushf
jo
mov
cs
mov
fwait
push
jo
aaa
push
add
lahf
push
outsl
xor
loope
orb
dec
pop
testb
jne
in
dec
cmp
and
mov
rcr
mov
ja
cmpsb
data16
xchg
cmc
into
mov
sbb
repz
pop
int
push
mov
out
out
jo
jns
jb
sarl
in
sbb
rcll
inc
mov
sbb
push
shl
mov
mov
clc
cmp
iret
enter
ret
fnstcw
push
mov
mov
clc
not
fildl
mov
insl
jae
aad
sbb
fsubl
addr16
imul
cli
xor
inc
mov
nop
push
mov
clc
xor
inc
in
pop
popf
out
fistps
adc
jbe
je
jmp
cmc
stc
scas
negb
pusha
pop
add
test
jae
mov
aam
mov
mov
lods
sbb
arpl
lahf
std
stc
adc
jns
repnz
aad
fwait
xor
xchg
xchg
daa
ds
xchg
mov
pop
mov
sti
insb
cmc
sbb
add
sbb
mov
cld
imul
addr16
and
dec
loopne
xor
push
sti
mov
sub
sbb
inc
cmp
sub
dec
inc
cmc
cmpsb
add
jge
daa
mov
pop
cmp
push
pusha
or
sbb
ss
dec
xchg
fimuls
daa
and
enter
inc
out
test
loope
cltd
data16
and
stos
scas
rcll
mov
daa
jne
cmp
cmp
jl
cmp
sar
stc
or
orb
mov
pusha
cmp
scas
sub
push
mov
arpl
xor
pop
loope
pop
xchg
pop
pop
or
or
dec
xor
es
fbld
and
cs
inc
mov
adc
test
sbb
push
xchg
pop
lds
inc
sbb
bound
adc
lret
mov
cmp
stos
mov
lock
add
jmp
int
js
and
lea
js
push
outsl
dec
fimull
mov
dec
add
jo
clc
int
mov
iret
stc
stc
out
and
xchg
pop
xorl
loope
lret
jg
notl
mov
and
jmp
stos
xor
ja
xor
and
add
pushf
data16
xchg
test
loopne
pushf
mov
sub
stos
adc
mov
mov
in
mov
cmp
dec
push
dec
mov
lea
scas
lods
dec
push
insl
push
mov
push
imul
sub
insl
add
mov
mov
jl
lock
jp
mov
or
movsl
scas
cmp
popf
ds
lret
xchg
mov
out
ss
jo
jb
or
outsb
in
adc
mov
ret
adc
shr
jmp
mov
mov
xchg
push
cwtd
fs
inc
iret
and
jge
lods
pop
inc
jno
mov
popf
mov
lcall
cmp
inc
fwait
pop
stos
sub
daa
mov
into
daa
xor
lret
idiv
add
and
mov
push
sub
lds
mov
das
jge
loopne
imul
mov
sbb
sub
cmp
xchg
clc
or
insl
leave
or
jbe
add
push
out
pushf
push
or
popf
rolb
dec
stos
ljmp
pop
sbb
push
pop
cld
sahf
or
adc
insl
lret
out
jnp
cmp
mul
shll
inc
and
sub
sub
adc
mov
pop
out
test
xchg
mov
sbb
adc
cltd
xor
xchg
jecxz
sbb
push
out
ljmp
lret
xchg
divb
not
test
iret
sub
push
dec
aad
push
jecxz
jb
mov
gs
ret
fnop
push
cmpb
push
pop
mulb
lea
aad
xchg
jb
nop
jb
sbb
lods
test
iret
add
repnz
pop
cld
addr16
push
xchg
loope
and
in
dec
or
inc
inc
xchg
or
or
movl
popa
inc
cmp
andb
scas
push
pop
dec
and
clc
xor
dec
push
sbb
dec
xchg
add
dec
inc
xor
cwtl
aam
iret
mov
mov
sbb
xor
jns
xchg
pop
push
dec
int
push
dec
das
jle
sub
push
popl
xchg
adc
test
adc
jno
into
mov
mov
jmp
les
fwait
inc
mov
xchg
xchg
inc
ljmp
scas
enter
lret
sub
dec
add
cwtl
mov
sbb
sahf
push
sbb
out
mov
mov
mov
push
loope
clc
mov
add
sub
push
xor
into
cmp
sti
shrb
push
rcr
mull
xchg
aaa
test
dec
insl
add
mov
jg
ss
sbb
scas
xor
hlt
in
xorb
mov
mov
stos
lcall
scas
dec
outsb
dec
enter
mov
in
mov
in
mov
xor
adc
mov
pop
dec
sub
jg
lds
addr16
add
pop
jg
pop
push
sub
add
push
daa
push
int
mov
push
push
js
inc
jb
sahf
mov
rcll
jl
in
xchg
cld
and
fsubl
or
dec
ficomps
sub
jne
aas
inc
cwtl
enter
lea
scas
push
jmp
scas
loop
push
cmpsb
fmul
push
sub
arpl
rcll
in
pop
pop
push
dec
jmp
sbb
aaa
or
xlat
fdiv
xor
ret
es
mov
stos
std
enter
cmpsl
idivl
in
repnz
mov
lods
inc
rorb
shll
and
dec
icebp
lcall
lods
fwait
jbe
mov
fisubl
js
sahf
mov
outsb
fnstenv
pop
cld
push
test
lret
and
jnp
in
nop
sbb
adc
mov
xor
cmpsl
sub
fdivl
mov
add
push
jo
pusha
fnstsw
test
sbb
mov
aaa
scas
shr
jnp
in
push
data16
test
mov
es
push
insb
popa
push
xchg
mov
xor
push
adcb
imul
orb
stc
outsl
adc
out
or
mov
dec
mov
mov
add
lods
test
xchg
inc
inc
pop
and
jae
loope
pop
cld
inc
and
xchg
into
xchg
sbb
rcll
daa
fbld
xchg
les
dec
lea
inc
data16
jmp
call
lahf
outsl
xor
scas
add
test
xchg
mov
fadds
out
es
jp
push
and
aam
daa
jae
cs
ret
mov
or
cltd
push
addb
mov
outsl
shll
cmp
outsl
pop
jno
cmpsb
jle
sub
hlt
pushf
xchg
xchg
fildl
inc
inc
push
cmp
sub
inc
fistps
ds
outsl
scas
clc
mov
inc
xor
inc
imul
shrb
mov
lods
jo
dec
sbb
push
lahf
mov
jae
adc
cwtl
or
into
in
movl
or
mov
xor
stos
xor
out
inc
cltd
mov
lret
sbb
imul
mov
daa
mov
mov
scas
repnz
mov
adc
xchg
movb
sub
inc
enter
out
int3
dec
mov
int
test
mov
xchg
fdiv
xchg
or
push
in
push
sub
push
loope
movsl
or
jge
cmpsb
ds
jecxz
mov
lods
in
xchg
add
cwtl
and
imul
sub
cwtl
test
in
ret
xor
fwait
cmpsb
sub
dec
jle
mov
xchg
cmp
shll
clc
sbb
pop
mov
dec
cmp
pop
pop
cld
lahf
mov
leave
repnz
jp
jae
pop
push
das
arpl
das
gs
mov
loope
sub
loope
pop
push
xor
sub
test
or
lcall
pushf
dec
in
data16
out
fistl
xor
repz
sub
dec
rcr
dec
in
sub
sbb
mov
mov
mov
xchg
call
xchg
jb
test
mov
call
dec
push
icebp
mull
xchg
stos
ret
loope
dec
sub
mov
cmp
and
mov
push
dec
mov
cmp
and
leave
aaa
idivl
sub
xor
push
dec
xor
pop
aas
insb
jl
xor
mov
rorl
es
sbb
test
mov
pop
mov
mov
xchg
out
dec
scas
ds
mov
dec
mov
loop
adc
outsl
jl
fldl
cwtl
in
cld
int
in
shlb
es
push
fmuls
les
in
pop
cmp
add
pop
dec
cltd
fidivrl
rolb
js
push
pop
insb
mov
pop
push
push
icebp
dec
xchg
das
mov
lcall
sub
mov
adc
mov
imul
lods
pop
call
mov
jbe
sahf
sbb
lea
mov
xchg
push
xor
inc
xchg
cltd
cmp
inc
test
je
cmp
imul
icebp
lea
xchg
cmp
pop
fcoms
xor
mov
push
inc
imul
push
pop
or
cmc
or
shrl
mov
leave
ret
in
push
lods
in
in
lea
mov
pushf
ret
cmc
shlb
push
and
add
xchg
enter
adc
push
push
shll
jge
shlb
cmc
icebp
or
fldt
jecxz
xor
imul
mov
insb
push
insb
mov
fwait
rorb
test
cli
repz
inc
pop
out
sub
sti
inc
int
out
push
aas
ljmp
imul
dec
jl
int
mov
mov
fistpl
into
outsb
test
insl
and
lea
movsl
fldt
jae
test
scas
inc
aad
push
xchg
movb
sbb
cs
mov
scas
xchg
rcrl
mov
in
shl
add
fimull
push
or
andb
in
js
fldenv
xchg
inc
je
mov
cmpsb
push
cmp
popf
push
xchg
mov
cmp
repnz
pop
in
mov
test
dec
test
lcall
jl
into
dec
daa
das
mov
mov
lods
dec
mov
sbb
int
dec
push
call
push
aaa
aaa
mov
fmull
fsubr
out
test
loop
into
mov
dec
dec
mov
xor
mov
test
jge
add
pusha
out
call
fildl
add
lahf
mov
xor
jae
inc
mov
out
out
mov
ret
imul
bound
cmc
jecxz
and
movsl
insb
lods
hlt
cmp
pop
sbb
mov
push
lahf
jp
mull
mov
addr16
jecxz,pn
add
int
ret
jg
jmp
adc
push
xorb
das
adc
mov
xchg
loope
xor
xchg
push
or
adc
xor
cmp
sahf
frstor
hlt
pop
xchg
ljmp
cmp
fldenv
fimuls
push
xchg
iret
xor
std
std
int3
mov
or
push
dec
iret
fnstsw
mov
mov
ret
adc
rorl
push
or
inc
bound
push
xchg
xlat
sar
sbb
add
mov
push
in
icebp
add
lcall
mov
lods
aam
pop
adc
cmp
std
or
jo
push
lods
push
jnp
sbb
sbb
mov
mov
aas
ja
xchg
push
rolb
dec
push
outsl
cmp
mov
hlt
cltd
add
and
xorl
adc
and
lss
adc
pushf
loope
xlat
movsb
add
xchg
and
stc
jecxz
es
mov
sbb
push
mov
sub
cmp
sbb
mov
adc
jecxz
repnz
push
mov
sbb
sbb
shll
push
xchg
jno
fisttps
add
adc
jle
pusha
inc
sti
mov
mov
push
push
pop
push
hlt
stos
push
mov
mov
push
hlt
mov
inc
jl
stc
and
movsb
pop
push
mov
test
mov
mov
in
sub
cld
push
cmp
xor
lahf
into
sbb
aaa
mov
stc
pop
lock
lea
fimuls
and
in
cmp
shr
in
ds
sub
popa
stos
shll
mov
mov
or
push
mov
stos
fldl
hlt
cltd
call
shlb
jecxz
in
pop
mov
cmpsl
mov
cmp
jge
adc
mov
cmpsb
push
repnz
push
push
jge
jge
iret
sub
daa
sub
or
imul
subl
daa
je
int
dec
fwait
aaa
repz
push
add
dec
pop
or
test
and
inc
adc
into
sbb
data16
dec
mov
daa
test
mov
sub
idivb
xchg
cmpsb
icebp
data16
push
mov
fcmovbe
mov
lods
adc
or
or
push
jne
in
mov
icebp
orb
mov
aas
outsl
adc
or
xchg
xor
fisttpll
jae
dec
stc
mov
xor
bound
mov
out
pop
rolb
stos
outsl
inc
or
bound
mov
ss
repnz
je
lret
jg
pop
push
fnstsw
aas
js
mov
xor
adc
push
aas
roll
mov
sbb
adcl
cs
cltd
out
xchg
sti
outsl
xlat
xor
mov
es
andb
inc
xor
lods
test
jg
push
stos
pop
rcll
aaa
rcrb
in
mov
fisubs
add
lret
sbb
sub
test
adc
loope
jb
jge
lods
add
jmp
mov
hlt
sub
or
imul
loopne
cmp
scas
adc
xchg
and
gs
push
shll
repz
jp
cmp
jge
hlt
fisubrs
jl
xchg
and
cmp
in
push
shl
out
sub
popf
mov
packssdw
push
loope
pop
jmp
popf
dec
mov
pop
imul
add
add
xchg
int
pop
lock
mov
sbb
cs
divb
fisttps
divb
je
dec
outsb
or
dec
dec
xchg
or
mov
mov
or
bound
jnp
imul
cld
dec
sbb
out
mov
out
mov
mov
fwait
popa
xor
divl
sarl
mov
push
aam
bnd
shl
cli
add
mov
xor
jl
daa
mov
push
fwait
or
lods
mull
and
sbb
pop
cltd
and
pushf
insl
pop
dec
push
repz
loope
rolb
xor
scas
pop
mov
cld
daa
add
fmuls
dec
int3
dec
xor
add
dec
dec
jbe
push
pop
test
push
inc
and
cs
stos
sub
loopne
or
in
loope
mov
add
stos
aad
xchg
ret
mov
add
test
lret
imul
ret
lret
std
lahf
xchg
xor
xchg
fidivrs
mov
sub
adc
jbe
mov
fiadds
mov
mov
lea
add
rclb
sub
jl
lret
cmp
es
sbb
add
mov
inc
adc
mov
dec
and
pushf
mov
dec
dec
sub
mov
leave
cmc
lods
repz
jg
inc
and
jge
cmp
aad
ljmp
jge
sarl
push
imull
cmp
sbb
andb
sahf
scas
xlat
jns
enter
and
add
out
int3
and
dec
xor
lods
mov
mov
or
in
adc
sbb
mov
sub
xorl
mov
idivb
ret
andw
aaa
pop
int
push
lret
outsl
test
iret
jns
inc
sbb
insb
std
xor
add
push
mov
xchg
sbb
xchg
cmpsl
ret
adc
jbe
sub
jns
add
mov
aaa
mov
mov
outsb
pusha
pop
jbe
xchg
mov
mov
iret
or
aas
call
inc
sbb
xor
xor
adc
sub
xchg
xor
out
pop
mov
jl
push
jle
movsl
stos
test
jl
sub
imul
cmpsb
adc
std
jb
jl
fdivr
mov
scas
and
add
pop
test
fs
jno
xchg
adc
mov
int
nop
fdivs
cld
lret
lds
mov
pop
in
fsubs
push
aam
lret
push
push
divb
orb
movsl
sub
loopne
dec
bound
ret
dec
test
pop
fcomps
hlt
and
inc
shll
jle
or
int3
or
jmp
sub
iret
mov
xchg
imul
iret
mov
xor
push
pop
lods
ret
pusha
adc
cmp
mov
int
popa
mov
cmpb
fnstenv
xchg
and
jae
iret
xchg
loop
es
mov
sbb
scas
imul
lods
lret
inc
sbb
pop
push
pop
sarl
hlt
jmp
ljmp
mov
push
fisttps
add
fbld
xchg
int
adc
or
adc
sbb
inc
inc
pop
outsl
gs
cmp
shlb
sub
ja
stos
add
arpl
rcl
push
out
pop
pop
lds
sbb
fbstp
dec
adc
out
roll
mov
push
mov
into
gs
lcall
add
inc
call
xchg
lret
mov
ret
push
xchg
xor
adc
add
std
jae
push
cmp
adc
mov
clc
inc
ret
sub
test
add
aad
outsl
inc
out
push
mov
ljmp
int
cmp
mov
mov
cmpsl
sbb
popf
rolb
mov
xchg
jbe
jb
outsb
icebp
dec
clc
enter
jbe
xor
arpl
int3
ret
adc
xchg
sahf
out
push
inc
int3
mov
jg
inc
dec
and
es
decl
cli
lcall
roll
les
cmc
lahf
dec
inc
popf
adc
scas
scas
mov
adc
dec
addl
ss
pop
pop
addb
jecxz
das
mov
cli
jecxz
ret
pop
bound
popf
faddl
loop
push
shl
lock
inc
ret
and
scas
loop
test
jne
jle
inc
shll
shl
mov
rclb
mov
scas
cmp
icebp
decl
dec
divb
xlat
call
pop
xchg
push
or
xchg
out
jno
out
mov
jmp
test
inc
add
jl
push
xchg
jle
ret
repnz
in
out
mov
sub
dec
out
dec
adc
inc
jl
push
loop
jns
lock
push
xchg
movsl
push
pop
pop
push
mov
ret
ja
xchg
and
test
popa
std
dec
xor
xchg
leave
repz
xchg
pop
adc
jp
jmp
test
gs
add
fistpl
jl
mov
pusha
scas
sub
ret
fistpl
add
adc
bound
pop
xor
mov
mov
leave
lahf
add
hlt
and
fistl
addr16
bound
fs
xor
sbb
ret
aam
mov
enter
jmp
adc
dec
mov
xor
push
into
add
mov
and
mov
bnd
ficoms
pusha
sbb
imul
pop
jnp
and
nop
enter
cltd
xor
test
lret
in
setbe
dec
inc
mov
roll
repz
jbe
cmpsb
cmpsb
and
or
cld
mov
jecxz
xor
test
cmpb
or
sub
lea
adc
mull
push
loop
pop
or
dec
js
enter
hlt
in
mov
pushf
jecxz
jmp
mov
jo
push
and
mov
push
clc
mov
mov
mov
in
sub
pusha
inc
and
mov
hlt
push
sub
aaa
jae
in
fcompl
call
or
mov
mov
outsb
stos
mov
cli
dec
mov
xor
rorl
mov
call
pop
jae
and
dec
mov
enter
rcrl
jle
and
sbb
dec
pop
mov
push
jno
js
repnz
sbbl
and
and
fs
sub
adc
gs
aas
inc
or
mov
and
loope
outsl
ljmp
nop
add
lcall
enter
cmp
add
xor
pop
loop
mov
adc
testl
sbb
fidivrs
xchg
xor
into
imul
or
daa
and
jnp
aam
in
mov
repnz
add
mov
sahf
or
push
cwtl
sub
sti
daa
loop
loop
cld
xchg
mov
inc
xchg
or
loop
and
in
push
lods
jg
pop
pop
lea
repz
mov
repz
ret
adc
ja
sbb
sub
nop
lret
fidivl
or
inc
xorl
movsl
push
pop
inc
fisubrl
xor
fmuls
faddp
es
mov
in
or
out
fisttps
pop
inc
nop
fabs
mov
pop
xor
jle
movsl
cmc
mov
push
cmpsb
sub
arpl
rcrl
xlat
fsubr
cmp
pop
nop
test
jge,pt
jo
pop
inc
xorl
loopne
sahf
and
pop
mov
imul
icebp
cmpsl
and
push
aam
mov
std
mov
jb
fwait
in
dec
push
xchg
sbb
ss
mov
cmp
pushf
shll
fisttps
je
stos
cmp
pop
sahf
jb
jge
push
lds
pop
jb
ds
add
mov
sbb
lea
mov
inc
jbe
adc
mov
and
movsl
push
inc
fwait
jecxz
xor
popa
nop
mov
imul
std
js
daa
pop
test
sbb
mov
sub
pop
fistl
cmpsb
push
arpl
aaa
into
out
adc
mov
xor
lods
xchg
mov
pop
in
rorb
adc
stos
sbb
hlt
mov
icebp
nop
jge
inc
sti
and
mov
xchg
mov
addr16
imul
pushf
cltd
xor
cli
xchg
nop
dec
mov
ret
inc
dec
and
in
ret
dec
retw
cmp
sub
jge
test
cld
imul
neg
jb
mov
and
lods
adc
and
scas
mov
into
fcoms
cmp
mov
xor
repz
insb
pop
add
xchg
std
adc
fnstsw
js
pop
dec
mov
mov
movsb
add
push
arpl
xor
mov
dec
jne
cltd
movsl
pusha
mov
fcoml
ret
imul
dec
adc
aad
clc
adc
or
sarb
movsb
jb
mov
add
dec
dec
inc
add
mov
movsb
scas
xor
cmpsb
mov
dec
call
ljmp
call
dec
push
jno
test
sbb
into
jmp
pop
ljmp
cmpsl
push
cmp
dec
jge
inc
lods
mov
adc
push
push
cld
ss
cwtl
sbb
sbb
mov
jge
mov
cmc
cltd
imul
pop
test
out
mov
jg
insl
cwtl
jb
inc
sahf
rcl
jnp
xchg
inc
add
pop
mov
cli
add
fwait
pop
and
arpl
lret
ret
lcall
fldenv
loop
jmp
inc
mov
dec
and
outsb
pop
sub
int
in
mov
scas
add
add
jge
iret
and
push
inc
jno
jp
cmp
push
dec
pop
push
jecxz
les
mov
cmpb
sub
jle
arpl
stc
rcrl
sbb
add
pop
shrb
popf
jnp
mov
cli
out
dec
adc
or
jbe
stos
fldt
dec
in
dec
adc
inc
inc
lods
push
rorl
pop
or
in
sub
clc
ret
jne
sub
shlw
loopne
jae
movsb
pushf
push
aas
in
dec
cmpsb
push
lock
std
jp
lea
test
pushf
addr16
mov
orb
lea
adc
shll
sub
push
lret
jne
push
sahf
lret
lret
sub
sarl
inc
popa
pop
xchg
xchg
fdivl
pop
inc
dec
stos
das
and
lock
jnp
std
mov
xchg
pop
sbb
dec
jns
stos
test
repz
aam
lds
lods
sahf
rclb
or
in
push
pop
pop
dec
adc
inc
cs
in
icebp
push
pop
adc
push
mov
in
pop
scas
test
sub
push
jp
pop
dec
xchg
sarl
lock
je
movsl
js
sahf
xor
addr16
inc
bound
les
dec
lea
scas
mov
and
add
inc
mov
adc
inc
bnd
and
ds
cmp
aam
dec
xor
pop
sub
iret
cmc
lods
ds
pop
movzwl
push
inc
pushf
cmp
jl
sub
mov
and
jl
sub
outsl
sbb
in
loope
test
popa
pop
gs
or
cmp
adc
adc
jmp
insl
out
stos
icebp
dec
cmpsl
pop
ror
ror
sub
test
adc
lds
mov
dec
sbb
inc
loope
mov
inc
ljmp
inc
ss
sub
mov
push
and
scas
in
fisubl
lret
push
ljmp
cld
sarl
jle
mov
arpl
imul
fbstp
adc
icebp
jb
sbbl
jle
sbb
adc
cmp
jl
jmp
cmp
lret
scas
or
push
jbe,pn
dec
mov
sbb
data16
dec
jo
mov
out
or
mov
sar
inc
test
fistps
pop
or
sub
jae
push
leave
cld
fisttps
inc
xor
stc
pop
out
shr
arpl
out
xor
or
mov
insl
test
mov
mov
jo
pop
mov
cmp
enter
int
mov
dec
dec
adc
mov
sub
cmpsl
mov
mov
lret
push
loop
call
enter
mov
inc
cmp
or
add
push
enter
pop
jecxz
sbb
mov
call
addb
jecxz
dec
mov
push
loope
imul
test
inc
inc
or
xor
cmp
push
aam
clc
scas
lret
fldl2e
repnz
pop
nop
int3
mov
sbb
lcall
movb
mov
fs
sbb
fdivp
dec
movsb
inc
and
xchg
lcall
std
aas
jg
or
das
outsb
les
adc
mov
gs
push
push
int3
ds
stc
dec
cmpsb
xchg
xor
or
filds
aas
mov
in
push
jbe
cmp
push
and
rep
pop
js
and
mov
pop
add
cmp
hlt
pop
les
pushf
loopne
repz
fldt
and
mov
cmp
bound
jae
test
arpl
rclb
filds
dec
ficomps
lds
icebp
pop
mov
cmp
and
lahf
adc
in
pop
testb
pop
xor
insl
xchg
sub
out
fs
cmpsl
je
mov
gs
pop
lcall
mov
lahf
stos
shl
hlt
mov
xchg
aas
push
mov
movsb
imul
pop
gs
test
add
add
xor
stos
jecxz
sub
sbb
sub
add
daa
mov
xor
xchg
jbe
push
pop
xchg
stc
sub
push
std
insl
fdivrp
mov
ret
sbb
or
mov
push
push
mov
popl
inc
cmpsb
sarl
push
loope
cmp
xor
or
cli
mov
imul
fs
xchg
inc
sbb
sete
sti
into
jle
cmp
or
push
and
ljmp
in
out
into
pop
outsb
imul
int3
and
mov
pop
sahf
adc
pop
dec
inc
sub
loop
jne
aaa
push
ljmp
jecxz
xor
pop
sub
mov
cmp
push
xlat
clc
data16
adc
dec
test
add
hlt
outsl
addr16
scas
mov
inc
movsb
es
lods
xchg
mov
xchg
jmp
or
call
loop
testl
imul
mov
xchg
into
lahf
inc
imul
cmp
xchg
push
mov
mul
imul
adc
pusha
or
das
mov
mov
mov
scas
shll
pop
pushf
lret
push
add
mov
cmp
rcll
or
jp
mov
loope
cmp
pop
push
add
xchg
xchg
adc
enter
push
jl
inc
cltd
inc
sbb
xor
sub
addb
rcl
push
push
stos
daa
jns
push
mov
xor
mov
cltd
xchg
cmp
into
out
bound
orb
out
scas
pop
and
adc
lock
lret
fldl
pop
add
repz
mov
pop
lret
and
or
mov
test
ret
cli
sbb
fdivrs
ret
sub
stos
jecxz
sbb
jns
sbb
mov
mov
push
mov
cwtl
or
mov
jmp
jecxz
lcall
cmpsb
fwait
jns
gs
test
mov
les
push
mov
inc
jo
test
push
mov
and
mov
jae
test
js
mov
adc
daa
add
and
push
jnp
mov
test
movsb
mov
mov
ret
dec
lock
push
cmp
dec
xchg
mov
icebp
mov
or
pop
sbb
xlat
lret
je
scas
push
dec
cli
mov
out
adc
mov
dec
cmp
pop
xchg
pop
lret
cmpsb
movsl
ret
lahf
mov
outsb
mov
sbb
fldl2e
repnz
popa
ljmp
mov
test
dec
inc
in
arpl
aam
xchg
fsts
ret
inc
ret
subl
sbb
lock
jl
das
enter
cmp
idivw
push
xor
lods
fsubr
inc
inc
repnz
scas
stc
pop
cmpsb
in
xchg
push
into
sbb
and
xchg
test
aam
ja
push
stc
adc
xor
dec
jnp
cmp
or
inc
mov
mov
out
leave
dec
cmp
cmp
adc
gs
pop
mov
xor
jmp
int3
push
stos
add
movsl
pop
mov
jl
pop
pop
push
fisubs
xor
aaa
rcl
ret
sbb
mov
cld
jle
movzwl
pop
pop
or
mov
ljmp
mov
pusha
icebp
xchg
push
jmp
xorb
pop
addr16
or
dec
js
sub
and
xchg
inc
or
mov
popf
bound
cs
fwait
scas
mov
add
adc
xor
add
sub
sub
lret
cmc
pop
lea
addr16
nop
push
pushf
dec
iret
data16
imul
icebp
sbb
aaa
test
fnstenv
mov
adc
adc
and
cmp
dec
fisubs
rcrb
nop
lds
rcll
and
inc
sbb
das
cmp
imul
jne
jbe
and
xor
adc
push
jb
aas
push
icebp
pop
les
leave
sbb
and
xchg
lods
decl
pop
push
mov
fwait
cwtl
push
roll
mov
lods
push
mov
xchg
or
jns
jge
lcall
clc
and
mov
negb
jp
psubsw
jle
and
enter
push
and
dec
roll
jbe
lret
and
movsl
loop
imul
add
mov
pop
movsb
fwait
inc
pusha
pop
int
adc
push
mov
mov
rcrb
xchg
or
sub
cmpsb
jnp
jge
shll
fists
das
lret
sub
popa
mov
sbb
fcomi
push
adc
dec
nop
shlb
adc
mov
insl
dec
and
xor
bound
cwtl
sahf
gs
jge
sbb
ljmp
and
jnp
sub
je
jecxz
mov
mov
adc
sbb
xchg
not
lods
push
adc
ss
aas
xlat
out
mov
popf
frstor
addr16
hlt
ja
lret
lods
out
xor
xlat
sub
xchg
stos
inc
ret
call
mov
test
sub
popa
pop
repz
jae
xchg
sti
or
dec
jnp
mov
addl
in
mov
leave
test
pop
mov
inc
sbb
gs
add
filds
stos
insl
xchg
adc
pop
rcll
nop
dec
pop
cmp
pop
roll
xor
cmp
jo
fadd
adc
jb
add
adc
mov
add
cli
xor
imul
dec
int3
outsb
xor
xlat
sbb
cmpsl
jge
inc
test
cmp
xchg
cltd
lahf
jne
test
xor
repz
mov
fwait
ds
mov
push
ss
fs
pop
sahf
shr
loop
sub
mov
cld
pop
xor
mov
enter
gs
pushf
mov
sbb
dec
scas
push
movsb
sub
adc
ficomps
sti
insl
xchg
xchg
scas
in
and
jne
negl
cmp
into
pop
setb
jne
lret
psadbw
aam
les
xchg
in
inc
outsb
test
rcll
and
push
mov
clc
fidivrl
xchg
mov
mov
bound
popa
test
push
fcoms
loopne
fldt
mov
jg
dec
sbb
adcb
je
jle
imul
iret
das
dec
imul
in
push
jns
or
and
cmc
test
inc
imul
hlt
lahf
es
inc
adc
sub
shll
sahf
fnstcw
mov
aas
push
dec
repnz
mov
movsb
jge
cli
add
insb
bound
xor
pushf
subl
pusha
enter
mov
sub
pop
insl
jnp
incb
xor
ror
xchg
inc
and
mov
mov
orb
push
shll
out
jns
and
rcll
cmp
iret
inc
movsl
mov
cmp
cmpsl
push
mov
xchg
hlt
hlt
shll
cmp
xchg
test
inc
push
cmp
cmpsb
jae
push
ret
dec
jmp
add
add
movsb
jecxz
addr16
and
or
inc
out
jmp
inc
mov
xchg
cmc
movsl
mov
loope
dec
mov
jnp
mov
test
jl
jbe
jbe
or
cmpsl
push
sbb
pop
mov
leave
mov
dec
xchg
xor
mov
push
push
popf
in
shl
mov
and
push
hlt
roll
sahf
jp
aas
daa
idiv
push
mov
pop
mov
sub
ja
stos
imulb
jmp
in
call
fmull
test
aad
inc
gs
mov
push
adc
rol
adc
xchg
es
arpl
test
rorb
jge
lret
cs
cmpsl
scas
loop
add
test
aad
adc
and
imul
les
addr16
ror
mov
push
clc
cmp
ficoml
inc
push
repnz
stos
fwait
add
mov
addr16
shlb
ljmp
ja
ja
inc
stos
cmp
inc
scas
sbb
mov
pusha
idivb
into
inc
cmp
jne
mov
xchg
test
or
sbb
jecxz
jne
dec
mov
test
testb
mov
sbb
dec
and
shr
push
xor
sbb
cmpsb
es
xorl
and
xchg
adc
div
add
mov
rcrl
jo
jge
mov
xchg
sbb
cmp
dec
arpl
pop
push
lret
scas
test
gs
jno
hlt
rcl
or
int
or
test
mov
sub
stos
lods
or
dec
pop
push
div
fnstenv
cltd
js
insb
aas
fsts
frstor
dec
mov
negl
ss
shrb
add
add
inc
cs
ret
mov
ror
aaa
pop
mov
pop
daa
neg
loop
jp
leave
add
xchg
lock
scas
movsb
ret
inc
enter
scas
mov
xchg
inc
sahf
xor
push
or
add
xchg
sbb
and
sbb
iret
sub
xor
sarb
int3
and
cmp
sub
dec
mov
rorl
adc
int
and
pop
add
xlat
xlat
mov
mov
xor
js
pop
iret
adcl
xchg
pop
cmp
jmp
lock
jmp
call
xchg
or
hlt
out
call
push
cld
sbb
jge
cmp
mov
jge
gs
shlb
mov
sub
jmp
test
scas
lock
pushf
test
stc
out
push
xor
pop
mov
pop
pop
or
ret
adc
adc
cli
fldcw
push
push
adc
test
push
ret
jge
mov
ljmp
enter
jmp
dec
popa
int3
sub
sub
add
or
insb
ljmp
push
int
inc
je
nop
mov
adcl
sbbl
xor
stc
dec
mov
sbb
imul
mov
add
mov
dec
sahf
adc
and
movsb
xlat
add
sti
jmp
aaa
lret
mov
nop
mov
gs
dec
repz
gs
xor
sub
push
lock
sbb
test
xlat
pop
mov
into
fmuls
jmp
mov
shll
xchg
repnz
je,pt
loop
fdivr
stos
push
jg
call
daa
dec
and
loope
mov
and
sti
mov
ljmp
sahf
xchg
sub
mov
negl
add
ret
pop
lods
orl
xchg
jmp
lret
cmpsb
mov
mov
fwait
xchg
testb
sbb
mov
mov
call
push
imul
push
adc
adc
out
pop
mov
iret
jo
leave
cmpsb
test
cltd
scas
out
mov
jle
push
add
js
sub
rcl
out
cltd
movsl
mov
cmp
cwtl
shlb
push
rcll
lcall
fnstcw
enter
sti
aad
sbb
hlt
push
jbe
add
cli
push
enter
outsb
mov
dec
stos
ds
mov
cmpsl
bound
mov
js
test
aad
jge
sahf
pop
les
imul
mov
into
loopne
xor
cmp
dec
xor
jmp
mov
stc
idiv
inc
icebp
decb
jae
sbb
add
add
adc
rorl
xlat
out
xchg
jno
xchg
adc
popf
mov
xchg
lock
push
jg
scas
cli
or
ret
les
and
inc
jle
js
push
jl
push
add
push
pop
call
insl
mov
and
push
inc
sub
test
inc
push
xor
cmp
fldenv
fists
mov
xchg
lret
xor
mov
sub
loope
fsts
ja
aaa
lret
dec
call
jmp
adc
xor
imul
jo
pusha
icebp
pop
fsts
hlt
mov
dec
inc
mov
xchg
jle
mov
and
pushf
xchg
xor
pop
ljmp
mov
hlt
repz
add
xor
lods
mov
and
pop
mov
or
push
ds
xor
fscale
push
sbb
xchg
xor
sub
and
sub
push
dec
push
fadds
xor
adc
ret
ficoml
aam
pop
cmp
or
jbe
call
and
add
jns
and
xor
jne
fistpll
xor
mov
jae
push
sub
mov
push
mov
sub
xchg
xchg
or
cmpsb
fcoms
mov
icebp
call
sub
les
dec
sub
negb
dec
js
and
cmp
dec
or
test
mov
inc
fdivs
mov
push
cwtl
ljmp
mov
fidivs
popf
push
push
xchg
pop
cmp
push
xchg
cmp
mov
test
int3
sub
pop
jp
test
nop
aaa
outsl
inc
cmp
xor
xor
ljmp
and
mov
xlat
mov
ja
mov
cld
or
dec
and
dec
xchg
xlat
sbb
and
movsb
push
in
cld
in
mov
sub
inc
mov
cmp
add
loope
andb
addl
cli
ficompl
rclb
jae
in
andl
push
mov
mov
insb
ljmp
lret
dec
lret
ljmp
xor
lods
jno
adc
cmp
mov
stos
sub
or
insl
sbb
cmp
adc
pushw
and
cmpsl
int3
addr16
movsb
and
imul
and
xchg
push
gs
in
mov
jmp
lock
bnd
scas
pop
xor
negb
xor
mov
lds
aam
cltd
or
enter
jge
mov
rclb
push
hlt
outsl
hlt
inc
jg
mov
mov
mov
jl
lret
or
mov
or
ja
or
cmp
test
inc
or
iret
sbb
cld
or
and
rcrb
dec
sbb
test
pushf
mov
and
iret
xchg
add
ss
enter
repnz
test
dec
daa
dec
cld
orl
add
pushf
test
fistps
and
ficoml
push
add
dec
leave
insb
setb
push
dec
ficomps
fistpl
dec
pop
dec
js
and
inc
fnstsw
and
adc
or
or
je
addr16
push
or
adc
add
inc
mov
xor
inc
mov
mov
sbb
sbb
addr16
orl
and
sbb
addr16
and
daa
aas
mov
js
loop
xchg
inc
hlt
push
cli
push
fwait
adc
cmpsl
mov
jne
pop
adc
lea
addr16
jae
pop
imul
mov
mov
push
pusha
fidivl
push
adc
mov
popf
dec
sub
cmp
xor
iret
dec
inc
js
jl
push
es
lods
dec
push
and
sbb
sub
sbb
and
in
dec
lods
xor
push
js
stc
fldcw
push
adc
cmpsl
movl
or
shll
out
jmp
or
fwait
mov
ja
mov
jge
js
add
leave
or
jp
sbb
cmp
sbb
push
fwait
pop
cmp
rorl
mov
cmp
in
mov
leave
shlb
sbb
inc
ljmp
je
test
inc
add
cli
pop
xchg
pop
sarl
pop
inc
lds
fwait
pop
cs
sub
add
mov
scas
mov
sbb
movsl
inc
and
aaa
mov
std
sbb
bound
orl
cmpsb
xchg
mov
jno
leave
push
int
push
lcall
lret
fsubrp
into
mov
gs
jg
call
inc
mov
imul
pusha
or
or
mov
adc
inc
jg
imul
pusha
and
lods
mov
mov
push
mov
lcall
and
insl
fnstcw
pop
in
mov
inc
and
dec
lods
push
into
inc
xchg
sub
loop
jmp
mov
pop
int
xchg
cltd
pop
and
xchg
leave
jbe
repnz
daa
lds
test
add
rorl
cli
add
xor
mov
in
loope
decb
mov
or
jnp
jbe
jle
add
cmpsb
cmp
adc
in
ret
sbb
ds
mov
das
shrb
adc
jle
bound
ret
xchg
lea
popa
andl
jo
arpl
ret
sbb
inc
xlat
dec
cmp
jns
pop
mov
add
pop
pop
clc
sahf
xor
push
cli
mov
inc
mov
jbe
mov
movsb
imul
arpl
dec
cmp
push
daa
jne
notl
imul
std
ja
push
push
aas
pop
repz
jo
add
inc
sub
add
stos
loope
mov
fldenv
or
lret
test
mov
or
inc
into
or
stos
dec
jns
sahf
pop
mov
inc
mov
adc
mov
int3
divb
push
mov
std
or
loopne
test
outsl
lock
inc
add
xor
pop
sahf
test
arpl
iret
adcl
repz
es
push
pushf
ret
ja
jns
insb
sub
jge
sub
mov
xchg
push
in
mov
mov
rolb
cmpsb
scas
pop
mov
add
adc
push
maskmovq
cmp
push
cmpb
addr16
cwtl
jp
fwait
sbb
mov
scas
lds
scas
jae
loope
leave
rcrl
ja
fisubs
sbb
mov
sub
stos
adc
cmp
lea
sub
mov
popa
lahf
xchg
jns
icebp
stos
xchg
enter
jmp
lods
sub
sub
dec
and
lods
jnp
cltd
scas
push
add
sub
adc
jge
cmp
mov
xlat
jecxz
xchg
es
inc
cltd
add
sub
notb
repz
mov
test
je
dec
cmpsl
xor
pop
xchg
mov
sbb
mov
mov
test
add
sub
addr16
dec
mov
loopne
push
mov
lock
jae
cltd
pop
ljmp
insl
cs
mov
mov
mov
mov
sub
inc
push
xchg
lds
xor
sbb
test
pop
jmp
xlat
and
xchg
add
ss
jge
mov
into
jecxz
das
pop
lock
shrl
or
jp
aaa
popa
xchg
or
insb
stos
mov
cmp
sub
jno
push
mov
insl
jg
add
mov
xchg
adc
mov
repnz
adc
lcall
aam
lock
push
mov
jmp
pusha
frstor
mov
sub
inc
rcr
xor
test
bound
jo
adc
push
xchg
jg
pop
xchg
imul
out
movb
fcmovnu
mov
cli
rcrb
repnz
rcl
cli
test
shl
call
sub
xchg
mov
nopl
pusha
mul
lock
or
add
cmp
ret
cld
xchg
aad
out
shrl
into
xchg
icebp
pop
cmp
sbb
fldcw
sahf
xor
inc
ffreep
and
jmp
aad
mov
shrb
adc
jno
xchg
test
xchg
fsubrl
cld
dec
lcall
jb
setne
sub
sbb
mov
ret
mov
loopne
sub
ret
lds
jno
stos
lcall
and
lret
adc
mov
cmove
je
jmp
out
lods
mov
test
xor
push
aaa
xchg
popa
jg
loop
frstor
mov
or
rorb
and
sub
jbe
jns
push
or
fwait
jb
popf
mov
pop
std
hlt
add
adc
js
nop
in
jle
in
call
cmc
in
and
fisttps
addr16
push
into
inc
sub
pop
ljmpw
out
xchg
push
cmp
lret
scas
test
jl
loope
cmp
insl
scas
ficomps
shrb
mov
add
outsl
jne
loope
lcall
inc
testl
iret
dec
test
pop
xchg
or
cmp
xchg
add
mov
popf
sub
ror
xchg
mov
aaa
outsb
loope
repnz
mov
orb
xor
push
dec
mov
out
andl
decb
xor
sub
clc
cmp
daa
cmp
mov
jo
dec
leave
dec
test
movd
mov
xchg
nop
cmp
lret
push
shr
call
pushf
push
mov
sub
pop
call
jmp
test
insl
and
stos
test
push
jl
fdivrl
shlb
cs
dec
push
das
inc
xorb
sbb
daa
add
inc
add
mov
icebp
sub
movsl
aam
push
fs
arpl
popf
cwtl
pop
mov
or
add
add
push
loop
push
ret
mov
in
xorl
int3
subb
mov
pop
fstps
test
popf
jo
add
sub
lret
cmpsb
mov
aas
push
xchg
inc
scas
aas
mov
pop
or
xchg
test
repz
inc
sahf
ds
jle
loopne
into
test
inc
lret
ret
sbb
imul
add
jp
ficompl
or
out
push
jae
rorb
pop
jo
inc
or
movsl
jecxz
cmpsl
cmpb
push
jge
gs
push
inc
mov
sbbb
xchg
sub
cs
test
add
mov
cld
idiv
iret
mov
mov
jecxz
jns
clc
fdivl
mov
cli
popa
stc
imul
sahf
xchg
xchg
mov
mov
movsl
fimull
pop
pop
out
outsb
les
std
cmp
dec
add
in
or
mov
xor
xchg
enter
ds
cmc
dec
incl
xor
mov
sub
pusha
out
in
shll
and
and
mov
incb
cmc
popa
mov
insl
sbb
pop
xlat
int3
lret
ret
arpl
adc
adc
xchg
outsb
ret
cmpsl
or
mov
and
test
adc
std
es
fisubl
pop
in
lds
mov
mov
mov
jb
aad
sarb
mov
shll
inc
in
add
daa
aas
pop
popf
push
xchg
cmp
enter
hlt
lcall
loop
sub
push
div
xchg
ljmp
and
xchg
loopne
jns
sub
cmp
and
inc
cwtl
mov
pushf
out
out
daa
cmpb
das
fldl
or
mov
jo
jne
mov
inc
dec
insl
lods
pop
push
jle
adc
stc
out
sub
lret
fld
mov
add
push
xor
add
aas
mov
out
push
or
jo
std
clc
xchg
and
push
xchg
cltd
mov
push
hlt
shlb
lea
cmp
jecxz
repz
mov
inc
push
dec
mov
dec
cmpl
lret
mov
mov
out
mov
aas
add
dec
lods
add
adc
or
test
nop
test
jge
xor
cmp
stc
js
pop
push
in
or
sbb
push
stc
xchg
aas
jle
js
cmpsb
cmp
jecxz
fnsetpm(287
je
jno
rolb
cwtl
scas
xchg
aad
shll
jno
pop
lret
sub
xor
test
test
iret
pop
sub
mov
stos
fildll
push
test
mov
dec
arpl
xchg
fistps
mov
leave
mov
loop
cld
jnp
xor
mov
ja
inc
arpl
jp
cvttps2pi
sub
out
add
iret
in
add
bound
repnz
insb
xchg
nop
xor
or
ds
aaa
adc
xorb
add
lods
dec
and
in
push
push
xor
or
xchg
ret
xchg
pop
adc
mov
pop
and
lret
jne
pop
mov
mov
pop
lret
mov
jne
pop
stc
fsubrl
xor
test
sarb
sbb
addr16
and
test
rcl
nop
popf
xor
popf
pop
sub
xor
sarb
outsl
lods
mov
mov
lods
loopne
dec
pop
or
mov
mov
mov
test
mov
lock
mov
js
jo
push
sar
adc
mov
adc
js
fiadds
ret
sarl
lcall
xor
imul
sub
insl
fisubl
loopne
mov
xor
jg
cmpb
cmc
repnz
int3
push
lret
sub
jl
clc
cmpsl
test
imul
ss
lods
xor
rcrb
nop
out
mov
mov
test
sti
inc
ret
sahf
add
mov
in
mov
push
sar
cmp
inc
push
xchg
mov
in
std
dec
dec
cltd
adcb
cmp
cmc
mov
jmp
pop
adc
push
jle
jmp
sbb
sbb
out
lret
scas
cs
test
outsb
clc
cmc
repz
lea
ret
fdivrl
outsl
lock
mov
mov
mov
fstl
adc
inc
xchg
or
push
data16
mov
sub
xor
xchg
mov
hlt
fisubrl
fists
jb
std
dec
mov
jno
or
and
testl
ret
pop
xor
mov
aad
jbe
gs
pop
push
divl
mov
cmp
jb
sbb
pop
push
mov
xchg
and
xor
divb
lock
lcall
enter
cmovg
faddp
mov
frstor
fcompl
push
or
in
in
inc
shrl
cli
xor
aad
inc
fstpt
inc
pop
add
mov
daa
jo
push
lods
sti
lret
mov
push
lcall
jle
push
in
push
push
aas
ljmp
in
je
mov
daa
aad
dec
icebp
cmpsl
mov
dec
sub
out
subb
fs
sbb
pop
ret
aas
add
lods
div
and
jns
ljmp
push
add
out
pop
pop
shr
inc
in
cmp
adc
movsb
gs
rclb
jns
add
pop
add
mov
xorl
in
mov
mov
sbb
jecxz
inc
lahf
mov
dec
in
adc
adc
lds
or
cmp
or
nop
popa
imul
dec
and
or
or
lods
jp
repz
push
sub
push
and
icebp
cmp
or
insb
stos
ljmp
xor
sub
divl
xor
notb
cltd
shrl
or
imul
add
sbb
jno
push
fstps
testl
mov
and
hlt
lahf
hlt
daa
aaa
cmp
add
clc
adc
and
dec
addr16
dec
clc
mov
xlat
mov
add
add
int3
outsl
cmp
cmp
icebp
popl
jne
ja
enter
xor
and
pusha
mov
push
shrb
mov
fidivrl
lock
std
dec
pop
lods
xor
add
test
in
stc
and
cmc
addr16
scas
enter
xchg
stos
movsb
and
cwtl
fstl
jno
and
sahf
hlt
sti
push
arpl
mov
rcrb
cmpb
fimull
xor
daa
xchg
inc
ret
fldl
pop
repz
lcall
aad
scas
sub
xchg
mov
enter
push
cmp
sub
cltd
imul
loopne
nop
lret
inc
inc
in
sub
enter
js
adc
or
ret
mov
ja
add
popa
xchg
repz
sub
jnp
and
mov
mov
pushf
push
xchg
sub
fidivl
rclb
jle
mov
pop
into
divb
push
or
sub
hlt
cmp
pop
pop
aas
cmp
fstpt
hlt
mov
fdivp
sub
dec
test
or
fldt
mov
or
adc
arpl
mov
movsl
sbb
loop
pop
cli
repnz
lcall
adc
sti
xorl
ljmp
mov
sahf
xor
rcrl
jge
push
in
dec
movsl
inc
push
fdivp
cmp
adc
fisubrl
jecxz
mov
daa
xor
cli
jmp
cmp
push
xchg
jp
sub
and
mov
lret
mov
xchg
jnp
cmp
daa
push
scas
cmpl
incl
out
cmp
inc
roll
inc
leave
add
add
dec
in
pop
jg
adc
inc
aam
dec
xchg
sbb
pusha
aad
shl
cmp
pushf
popa
addb
xchg
and
das
mov
aas
pop
inc
cmp
xchg
add
in
jo
lds
jae
xchg
xor
cmp
push
cmp
jae
cmp
cmp
or
in
fdivrl
mov
mov
dec
lret
cmp
pop
jbe,pt
push
adc
les
sub
ljmp
sahf
test
mov
cmp
adc
sub
fs
shr
lahf
fsub
push
aam
lcall
xor
cmp
ret
decl
aaa
mov
ret
fcomip
inc
mov
pop
pop
add
mov
push
mov
jmp
add
and
xor
mov
out
dec
xlat
jmp
or
stc
or
cmp
push
scas
inc
insb
stc
dec
pop
dec
jle
scas
xchg
movsb
ja
inc
pop
cmpsl
pop
cli
push
pop
lahf
add
inc
adc
je
std
iret
adcl
fidivrs
adc
mov
andl
sti
pushf
mov
and
clc
pop
pop
shll
push
jmp
adc
pop
xor
adc
notb
sbb
test
xchg
stos
cmp
nop
jae
dec
insb
fwait
int3
jo
clc
lahf
mov
sub
lret
push
dec
sbb
das
ljmp
rcrb
mov
cltd
cmp
inc
pslld
les
mov
lahf
jo,pt
xor
pop
xlat
popf
lcall
push
in
rcrb
or
int3
dec
popl
mov
dec
and
or
xchg
inc
iret
rcrl
xorb
mov
test
jmp
push
leave
movsl
clc
out
mov
mov
xchg
mov
cli
mov
ss
movsb
dec
roll
out
xchg
into
lcall
repz
push
test
cmpsl
cmp
stc
cmp
sub
scas
mov
test
mov
in
movsl
stos
addr16
or
js
push
jno
cmpsw
adc
mov
dec
scas
dec
fcomp
in
ja
jno
add
jnp
addr16
add
inc
enter
clc
dec
pop
cmpsb
and
adc
adc
data16
cmp
ficompl
fdivs
push
cltd
and
sub
mov
enter
mov
inc
cmp
cmp
iret
add
mov
adc
cmc
or
mov
inc
movsl
sub
roll
addl
mov
pop
adc
mov
pop
in
ds
fwait
mov
subl
jne
mov
mov
arpl
jl
imul
mov
imul
xor
dec
push
jecxz
sub
fwait
or
xchg
sahf
repnz
or
in
sbb
mov
xor
xchg
mov
in
shl
pop
jns
or
xchg
cmp
cltd
mov
inc
jno
lcall
jae
mov
push
mov
mov
sub
adc
out
fs
cmp
ds
adc
cmpb
dec
rorl
enter
int
es
mov
pop
aaa
sbb
iret
cmp
cltd
ret
jne
cmp
mov
cld
lods
aas
ret
cmpsl
inc
lahf
or
mov
das
cmp
aam
dec
lock
jns
and
push
fistpll
les
adc
out
div
mov
and
fidivs
xchg
es
pusha
clc
enter
lahf
inc
push
repz
mov
ds
lret
sub
aad
popa
jbe
xchg
loopne
icebp
or
leave
or
push
mov
call
fistpl
fistl
movsb
pop
push
cmp
loop
inc
cwtl
pop
jbe
icebp
xor
loope
mov
jg
sbb
in
fucomip
sbb
out
jo
sub
pop
sub
jl
dec
cmc
jb
push
mov
nop
jb
test
sbb
lds
cmpb
sbb
dec
jmp
sub
or
mov
jl
dec
scas
cmp
jmp
sahf
cmp
arpl
mov
or
dec
xorb
jge
push
out
fidivrs
call
sarl
xchg
sarb
xor
push
fmul
filds
dec
xor
ret
and
out
je
cmp
gs
pop
or
cmpsb
sbb
lea
subb
cmpsl
inc
push
add
in
mov
jb
inc
xlat
push
xchg
push
ror
aam
lds
push
call
add
loop
adc
adc
into
ds
fcomip
sahf
movsl
sbb
mov
out
stc
int3
test
xchg
pop
xor
xor
adc
push
daa
mov
xchg
xrelease
mov
dec
inc
pop
sbb
mov
cmp
pop
bound
jnp
jle
jnp
xor
add
das
sbb
jg,pt
inc
mov
in
mov
push
loope
or
enter
aam
loope
dec
call
dec
xchg
imulb
outsb
cmpsl
cwtl
mov
sti
adc
es
fiaddl
lds
aaa
lds
scas
scas
arpl
repz
outsb
orl
in
mov
push
mov
into
adc
outsb
and
outsl
shll
test
adc
mov
inc
mov
data16
lock
ljmp
xchg
loop
imul
jbe
clc
adc
pop
fs
icebp
hlt
inc
jle
unpcklps
sahf
cwtl
ret
cmpsl
cmp
inc
cmp
int
dec
js
fistl
or
rclb
mov
push
cmpsb
repnz
xor
sub
cltd
out
shrb
movsb
cli
push
iret
sarb
div
lods
jecxz
or
cltd
iret
gs
xor
or
and
add
mov
pop
out
mov
mov
arpl
mov
pop
loop
mov
pop
aam
xchg
lock
ret
test
lret
sbb
addr16
mov
iret
mov
rep
in
fnsave
mov
push
inc
dec
push
and
jecxz
mov
cmc
clc
fnstsw
sub
mov
or
sub
int
das
pop
sbb
mov
mov
push
je
mov
lcall
push
stos
aam
dec
rolb
xchg
test
imul
mov
idivb
xchg
mov
inc
in
mov
or
jo
sbb
fs
sub
loop
nop
sub
inc
inc
cmp
lcall
movsb
nop
in
jae
cld
add
push
adc
jo
and
dec
xor
fbstp
ds
jno
mov
jmp
adcl
leave
les
and
xor
dec
pop
dec
cltd
adc
popf
sbb
mov
es
enter
mov
mov
adc
mov
nop
mov
pop
test
xchg
dec
dec
cmpsl
mov
xchg
imulb
filds
dec
mov
xlat
cmpsl
jb
andl
call
jecxz
cmp
mov
sub
mov
loope
mov
lret
pushf
rcr
je
lock
cs
and
push
fldl
aas
fwait
jle
xor
mov
or
mull
andb
xchg
int
push
or
xchg
add
push
push
mov
xchg
addr16
xchg
push
dec
xchg
mov
mov
test
aaa
cmp
jno
outsb
xor
je
int
in
sarl
xchg
sbb
pop
jge
std
adc
aad
bound
lods
xchg
dec
jno
cmp
mov
mov
in
dec
sub
fidivs
xchg
cwtl
add
cmpsl
sbb
sbb
cltd
stc
pop
inc
stc
lcall
dec
add
inc
dec
mov
xchg
lock
dec
pop
cld
lods
lcall
cmpsb
ja
push
leave
test
sbb
lock
push
imul
rcrb
sub
pop
shlb
cmp
imul
and
push
loop
dec
aas
mov
sbb
hlt
fdivrl
ds
lcall
cmpsb
popa
pop
es
hlt
mov
sub
shlb
int
std
sbb
inc
xchg
lds
jg
cmpsl
fidivs
adc
int
jns
mov
outsl
pop
sub
test
sahf
dec
dec
orb
add
xor
cwtl
addr16
dec
rorl
ljmp
leave
lods
push
fwait
out
nop
push
inc
or
gs
adc
pop
jne
jl
rcl
hlt
imul
xchg
pusha
mov
push
pop
cltd
ds
cmp
imul
xchg
shrl
xor
mov
mov
out
pop
lcall
jle
dec
mov
ljmp
aam
push
xchg
lret
loop
adc
ljmp
sbb
fninit
fstl
pop
or
ja
repz
xor
push
cmp
test
rolb
jge
push
mov
sbb
stc
ret
fnstenv
int
pushf
cmpxchg
data16
lahf
xor
daa
iret
ljmp
popa
mov
push
sub
repnz
sbb
jb
dec
lret
sbb
push
sbb
test
sbb
push
xchg
push
mov
pusha
sti
stc
mov
push
push
lea
out
divl
out
scas
pop
xchg
sbb
and
cwtl
jg
enter
cltd
xor
lret
sti
mov
into
repnz
add
inc
pop
and
leave
or
pop
inc
mov
jne
rcrl
and
nop
mov
aam
pushf
pop
in
dec
test
scas
std
imul
cwtl
mov
mov
sub
movsb
outsb
ret
les
hlt
rolb
fdivl
push
ret
xlat
fwait
clc
nop
les
out
xorl
ret
scas
jecxz
cltd
jns
imul
mov
mov
test
loope
push
inc
add
pop
jne
mov
aam
or
int
mov
dec
sbb
mov
lods
or
arpl
xchg
out
and
push
jmp
pop
jp
xchg
mov
xor
movntq
inc
mov
notb
adc
xchg
pop
sub
or
xor
movsb
fwait
mov
movsl
test
pop
sub
lahf
jne
xchg
call
es
jecxz
addr16
push
sbb
les
movsb
push
aas
jecxz
mov
cmp
mov
mov
jmp
pop
jb
dec
or
mov
test
outsl
mov
jge
ds
in
xor
mov
test
sub
lret
aas
sbb
jae
bound
sub
aas
es
lock
adc
and
lcall
iret
cld
sub
addl
sbb
lret
test
pop
cmp
fcom
out
xchg
sbb
mov
ret
ret
mov
cli
outsb
stos
pop
stos
cmc
or
test
shr
jmp
push
roll
into
mov
push
mov
xor
std
push
data16
add
push
jg
test
dec
fnsave
and
dec
or
dec
fwait
jl
inc
stos
jecxz
cld
push
jp,pn
fstps
mov
loopne
popf
inc
or
popa
cli
cmp
shrb
rol
cmp
cmpsl
leave
push
mov
andb
clc
xor
add
popl
mov
fsts
out
vsubpd
pop
and
mov
xchg
insb
outsb
icebp
jae
xchg
cmp
add
mov
push
push
mov
out
iret
orb
cmp
icebp
sub
jge
sahf
sarb
xor
add
and
and
into
daa
inc
out
jl
mov
jno
movsl
aam
cmpsb
cmpsb
adc
push
sahf
jecxz
and
gs
jae
cmp
jle
jp
xchg
hlt
fcomi
dec
in
and
ja
addr16
lds
jns
push
scas
push
arpl
and
add
inc
xor
js
pop
test
push
pop
mov
push
xchg
lods
sar
jne
cmpsl
int3
fwait
add
dec
ljmp
mov
mov
lods
mov
inc
out
mov
mov
push
out
xchg
sub
adc
popa
pop
cmp
xchg
int3
sub
mov
lods
shll
mov
adc
in
pop
adc
sahf
fs
fnstenv
xchg
or
lds
jl
push
sbb
std
inc
pop
ret
jp
jb
icebp
jl
lahf
aaa
adc
rcrl
data16
test
int3
adc
sarb
jno
mov
and
hlt
iret
adc
es
ror
sub
pop
mov
cmc
insb
or
sbb
iret
mov
and
fcmovbe
mov
mov
push
push
mov
nop
pop
jne
inc
mov
xchg
stc
fidivrl
push
pop
cmpsb
adc
sbb
test
mov
hlt
push
jbe
aaa
insb
or
movl
xchg
push
pop
test
clc
jmp
pop
repz
cltd
testl
insb
repz
rclb
xchg
sbb
imul
pop
jge
in
mov
out
or
xor
adc
dec
adc
pop
push
sbb
inc
rorb
cli
jmp
or
pop
and
mov
xchg
inc
add
in
rcrb
sbb
test
movsb
jl
push
call
pop
xchg
and
pop
out
sub
and
xor
dec
shrl
repnz
rorl
inc
daa
xorl
popa
mov
lret
sbb
ftst
enter
xchg
movsl
push
data16
inc
mov
addr16
outsb
mov
pmuludq
pop
pop
adc
mov
jmp
sbb
mov
int
or
push
mov
and
xor
and
scas
ljmp
mov
je
dec
cmpsb
adc
shll
mov
pop
push
adc
lret
push
or
imul
xchg
adc
xchg
dec
mov
mov
inc
lcall
gs
push
lods
add
ret
jo
lock
sub
mov
test
push
ret
xchg
or
mov
push
cmp
xchg
hlt
arpl
rcll
repz
mov
dec
dec
add
ljmp
mov
or
adc
dec
mov
icebp
xchg
sbb
fimuls
nop
imul
cli
mov
xchg
shl
repnz
jecxz
mov
sub
jmp
xor
xchg
xchg
rcll
push
fnstcw
and
inc
lds
stc
repz
mov
pop
out
fwait
jae
lock
adc
mov
add
int
loopne
repz
test
into
fimull
mov
mov
pop
pop
xchg
aaa
xchg
aaa
mov
jecxz
in
dec
pop
rol
test
or
dec
add
cmp
lock
es
inc
clc
lods
push
xchg
mov
jb
out
loope
aaa
les
test
adc
ljmp
lods
arpl
xchg
inc
clc
adc
bound
xor
loop
cmp
mov
fs
inc
pop
call
out
pop
and
jl
fbld
xchg
lahf
and
cltd
ret
inc
dec
cmp
adc
sbb
inc
push
shll
adc
mov
outsl
shll
xor
cmp
jne
loop
mov
mov
arpl
arpl
fsubs
jmp
test
scas
loope
addr16
mov
jns
fnstsw
mov
or
inc
xorb
mov
mov
les
jp
subl
mov
fwait
repnz
mov
mov
push
mov
cmp
pushf
mov
lret
je
lcall
xor
xchg
scas
push
adc
push
add
inc
xchg
shlb
sub
push
sbb
mov
pusha
and
fsubs
push
dec
int
mov
jecxz
adc
jg
sbb
sub
cld
pop
mov
jl
fmuls
iret
ja
inc
or
jle
mov
pop
dec
adc
movl
faddl
mov
pop
inc
pop
dec
enter
jp
pusha
fldenv
push
movsl
js
push
push
mov
jmp
sti
sub
xchg
jecxz
cwtl
push
sbb
sti
jns
push
mov
dec
outsb
sti
mov
mov
lea
jns
test
push
shl
ret
stos
pop
orb
shlb
out
fwait
lea
das
mov
imul
lds
jne
cwtl
sub
addb
and
mov
fisubrl
out
pop
enter
cli
daa
movsb
or
xor
sub
xor
leave
fwait
rol
sub
ficomps
xchg
jnp
mov
sub
leave
adc
loop
inc
mov
fs
movb
cltd
popa
or
imul
xorb
pop
clc
dec
aas
test
or
mov
shlb
push
xor
jle
push
sub
pop
pushf
or
imul
insb
mov
ja
repnz
cmp
mov
xchg
sbb
inc
adcl
das
pop
mov
mov
cmp
je
mov
inc
cmpsl
jno
xchg
sub
jl
mov
add
leave
vshufpd
dec
popf
xor
popa
addb
out
push
jmp
dec
and
jge
in
push
xor
sub
or
xor
std
jno
dec
push
pusha
ret
xchg
xchg
sahf
dec
sub
mov
pop
push
stos
sub
cmc
rorl
scas
dec
jg
int
mov
mov
shr
pop
lahf
xchg
pop
dec
imul
mov
fucomip
push
pop
stos
in
xlat
rol
mov
cmp
xchg
cmp
cmpsb
push
xchg
movsl
pusha
and
divb
push
mov
jmp
aaa
movsb
add
rorl
js
xchg
in
std
cld
shrl
js
divl
paddq
es
cli
lcall
lahf
push
cmc
adc
icebp
test
mov
in
jns
mov
bound
mov
fsubrl
cmpb
in
aad
sahf
popf
outsb
ljmp
test
and
dec
shrl
cmc
push
mov
movsl
or
cs
cwtl
stos
repnz
and
cwtl
or
in
mov
jmp
dec
ss
dec
cmp
jnp
pop
jo
iret
aad
dec
xor
loopne
addl
movsl
repz
pusha
mov
lea
ret
pop
inc
add
frstor
cmpsl
cmp
adcb
ljmp
and
adc
inc
sub
inc
pop
mov
push
dec
cld
je
xor
lds
jmp
repz
arpl
push
test
addr16
and
adc
ret
xchg
xor
xchg
aam
or
cmp
sbb
js
jle
push
mov
jnp
push
daa
aam
std
loop
xchg
xchg
popa
jl
lcall
call
pop
jecxz
addb
xlat
inc
sub
dec
call
cmpsl
mov
lahf
mov
ja
lcall
sub
push
imul
push
in
mov
in
ret
nop
mov
rcr
push
arpl
sahf
rolb
hlt
push
or
pop
push
test
in
ljmp
cld
adc
adc
mov
sysret
adc
pop
addl
outsl
mov
push
lcall
fisttps
popf
mov
ret
sbb
mov
rcr
repz
mov
mov
mov
ret
cld
push
jg
ljmp
test
in
es
add
push
dec
pop
adc
xchg
or
daa
cmp
mov
push
ss
into
lret
lcall
sub
pushl
sbb
xor
xchg
pop
push
inc
or
or
ds
hlt
test
sbb
pop
xor
filds
dec
out
push
test
adc
in
dec
sub
cltd
xor
adc
sbb
dec
outsl
xor
fs
sbb
stos
rol
pop
cmpxchg
push
xor
jmp
or
movq
in
pop
cmpsl
and
data16
mov
popf
leave
in
cmpsb
test
add
mov
sbb
push
inc
xor
mov
aaa
lods
cltd
test
adc
inc
add
daa
jge
test
outsl
scas
daa
pop
int
push
inc
std
lret
mov
movsb
movsb
test
in
sahf
pand
scas
sub
xchg
out
movsb
ljmp
cmp
xchg
jne
imul
cmp
lret
ja
or
das
mov
les
test
jae
shrb
mov
repnz
push
out
data16
ds
fwait
xchg
jg
jae
in
sbb
inc
mov
fldcw
sub
dec
cmp
outsb
xor
sbb
pop
jp
jp
fwait
push
push
pop
movsb
repz
and
xchg
cmp
pop
jno
inc
jno
or
fistl
std
jb
aaa
lods
daa
into
xor
js
inc
loopne
dec
bound
cmc
mov
cld
inc
aam
pop
dec
pop
sahf
ds
mov
pushf
stos
fnstsw
mov
in
nop
adc
stc
cmpxchg
mov
lods
or
xchg
lock
mov
lret
int3
ljmp
js
sbb
call
fwait
jecxz
pushf
xchg
xchg
cli
stos
pop
pop
fmuls
dec
and
or
sub
jae
aam
lret
sub
pushf
hlt
cmp
jbe
mov
leave
negb
fucomip
adc
inc
lahf
add
das
das
or
sbb
and
sub
aad
xchg
sub
in
and
ss
fisttps
test
add
nop
sbb
xor
fildll
test
inc
add
fsubs
int3
dec
jp
dec
imul
inc
cmp
adc
out
out
push
and
out
repnz
dec
movsl
mov
jns
push
push
in
div
outsb
dec
add
shll
xchg
mov
and
lcall
scas
jno
xor
mov
fidivrs
or
lret
ss
and
adc
and
cli
pop
push
xchg
fadds
bound
inc
out
add
imull
fadds
mov
jle
ja
and
aas
xchg
gs
mov
sbb
scas
push
sbb
bound
sub
pop
repz
bound
xor
push
push
lock
xchg
push
sbb
cs
aas
push
adc
xchg
popa
pop
xchg
shlb
movsl
cmp
add
loopne
sub
bound
not
pop
pusha
hlt
dec
add
mov
dec
adc
jbe
inc
mov
jbe
cmpsb
mov
sbb
aam
testb
pop
imul
pushf
insl
xchg
inc
sti
outsl
sub
xchg
outsl
mov
ds
jl
orl
in
enter
vmovaps
addb
pop
decb
fwait
rcll
add
xchg
and
ret
jb
sbb
fwait
js
pusha
lcall
testl
dec
mov
adc
xchg
xchg
pop
jle
mov
lret
jne
sbb
adc
mov
mov
mov
jbe
stos
mov
stos
adc
xor
test
movsb
adc
jg
dec
popa
imul
jbe
mov
call
mov
push
mov
jl
mov
hlt
add
addr16
repz
outsb
pop
mov
and
adc
sub
dec
test
sub
and
aad
lahf
xor
mov
jge
xor
jo
lahf
and
orl
cmp
cmp
insb
insb
pop
in
fmuls
xchg
sub
sub
call
popa
rcr
inc
xchg
cmpsb
pop
jne
mov
add
cmp
xchg
data16
pop
pop
rclb
rclb
cmp
xchg
les
or
fstpl
xor
pop
mov
std
pop
xchg
pop
add
sbb
cmp
add
repnz
xchg
mov
pop
push
adc
gs
jb
sbb
pusha
and
push
mov
xchg
cli
sub
and
jle
in
aas
shl
aad
push
aad
jo
mov
sbb
xor
cmc
add
mov
inc
push
cmp
adc
push
test
int3
ja
xchg
dec
scas
shll
cmp
lea
ds
pop
dec
cmp
out
or
xchg
imul
orl
adc
xchg
add
aad
sub
pop
test
jmp
lret
or
or
mov
mov
lds
je
xor
and
mov
out
mov
sarb
push
pop
lret
or
push
jmp
pop
push
xor
fisubrl
inc
outsb
push
jp
xchg
aas
lods
and
jbe
cltd
sub
xor
push
sbb
imulb
cs
xchg
jg
popa
stos
cmpsl
sbb
jge
insl
pop
pop
test
aas
mulb
push
mov
xchg
push
mov
sbb
data16
popf
xor
xor
vmovaps
iret
mov
inc
add
sub
xor
pop
js
into
xor
call
out
popa
rorb
lods
xchg
lcall
xor
mov
lods
ss
sbb
xor
sahf
xor
in
mov
idivl
mov
repnz
dec
and
out
lret
pop
or
lea
mov
aad
inc
adc
cmp
pusha
ja
pop
xchg
mov
mov
pop
cmp
lods
es
ret
repnz
sahf
sti
inc
ja
and
sub
test
xlat
dec
pop
push
sbb
roll
inc
add
add
mov
bound
es
xor
cmc
shrb
cmc
pop
pop
stos
mov
pop
cmpsb
mov
icebp
inc
xor
push
push
push
stos
push
and
neg
push
adc
jge
mov
out
aas
inc
mov
cmp
jg
or
dec
push
sbb
xchg
cs
ljmp
fldenv
push
add
vcvtsd2ss
add
mull
mov
nop
aam
xchg
subl
ljmp
jle
hlt
xor
ret
pusha
xchg
adc
int3
mov
cmp
sbb
adc
mov
cltd
shrb
lods
lcall
mov
nop
adc
out
fdivrs
dec
lret
push
jno
push
insb
xchg
loope
jns
or
aad
rorl
xor
xor
stos
cli
xor
lods
and
sbb
leave
and
popa
mov
inc
pop
or
out
inc
sbb
mov
push
adc
push
test
je
lods
mov
cli
std
shl
clc
popf
ljmp
adc
loope
dec
into
out
icebp
cld
mov
add
arpl
pop
inc
lock
push
adc
repnz
scas
fwait
mov
ds
xchg
sti
dec
sub
or
mull
jns
stc
mov
arpl
lret
add
movsl
mov
pusha
jbe
movsb
lock
sbb
test
pop
sbb
sub
stos
xchg
popa
mov
fcompl
adc
jl
adc
inc
mov
pop
cs
movsl
pusha
mov
or
cld
repnz
or
out
ja
fcmovbe
xchg
stos
jo
std
mov
inc
call
cli
cld
sbb
push
scas
clc
sahf
xchg
push
mov
arpl
lret
sbb
jle
cmp
repz
loopne
xchg
jge
fldenv
pop
jns
sub
cmp
jne
fsubr
es
mov
sbb
mov
lret
jno
jae
imul
mov
lods
cmp
std
jne
push
push
mov
add
lods
mov
jno
jns
cmp
pusha
mov
add
jno
loopne
movsb
adcl
jae
mov
xchg
adc
jo
cli
insl
loope
mov
pop
and
mov
popf
stc
sarl
mov
dec
inc
mov
popa
jecxz
cmpsl
inc
jne
shll
lret
xor
push
mov
arpl
repz
jno
adc
insl
rorb
shl
mov
ja
push
pop
sub
adc
add
mov
inc
adc
and
hlt
and
insb
lret
inc
lds
or
mov
stc
jae
or
fisubrl
clc
outsl
jecxz
cs
or
lahf
out
je
arpl
xor
mov
mov
cmp
cmpsl
or
fcoml
outsb
mov
cmp
outsb
dec
sub
inc
lea
int
mov
icebp
push
das
jae
mov
mov
loopne
stos
icebp
cmp
xor
test
sbb
lock
int
lcall
push
arpl
push
wbinvd
push
push
mov
jne
popa
xor
outsb
cmp
cmp
pop
je
jne
push
push
pop
mov
leave
idiv
dec
xor
jecxz
dec
inc
aaa
xor
jg
mov
cmc
jge
cmp
lds
in
stos
add
jp
dec
and
jnp
aam
pop
jne
push
sahf
xchg
mov
lds
insb
mov
xchg
inc
stc
jbe
jle
aad
mov
cmc
push
xchg
fdivr
loope
jg
shll
push
loope
adcb
push
call
and
mov
test
mov
arpl
dec
shl
mov
sarb
outsl
aad
push
test
pushf
vxorpd
insb
cwtl
jne
insb
add
or
cmp
mov
or
jae
iret
push
adc
xchg
ficoms
repz
mov
add
sbb
dec
ror
pop
imul
jg
aaa
in
mov
sbb
mov
mov
adc
xchg
stos
xor
pop
outsl
iret
cld
pop
and
mov
popf
lcall
adc
push
mov
fisttpll
sub
imul
inc
call
xchg
sub
sbb
jnp
hlt
xorl
inc
cli
push
das
mov
push
or
inc
rol
fldt
push
jno
xchg
fsubs
repz
inc
loope
inc
pop
mov
mov
in
js
scas
cmpsl
add
and
ret
pop
mov
push
jb
imul
cmp
dec
rcll
stos
jbe
xchg
ret
test
ret
mov
jg
popf
or
jb
lea
pushf
int
bound
imul
mov
mov
cmc
aas
or
daa
pop
adc
and
outsb
mov
jl
mov
sbb
fidivrs
lcall
push
popf
cmp
jmp
push
in
sub
jns
xchg
xchg
xor
pop
popf
cmp
mov
in
and
cmp
sahf
shll
jle
sub
stos
lahf
sahf
dec
fldcw
imul
jl
adc
fwait
mov
ss
loop
outsl
out
mov
add
ds
push
mov
jle
jno
or
enter
movsl
aam
and
mov
jo
loopne
fsubrs
in
fwait
aad
scas
jp
loope
movsb
mov
mov
bound
and
insb
sbb
andb
and
imul
dec
ja
daa
imul
and
std
inc
pop
jl
and
lcall
and
mov
and
mov
mov
aas
ds
lods
push
push
mov
icebp
adc
ss
ficompl
mov
stc
xchg
cmp
cmp
fnstsw
popa
cmp
adc
or
cmp
xchg
orb
dec
pop
pop
cmp
inc
sbb
nop
adc
std
or
mov
xchg
daa
xor
jns
mov
inc
adc
jae
and
adc
mov
lcall
dec
ss
shlb
adc
ret
or
sub
dec
xchg
ds
mov
lock
sbb
lods
cmp
fcmovu
sahf
aas
sub
xor
outsb
inc
jge
lret
push
push
adc
add
aas
and
mov
mov
fistps
test
cmp
mov
lret
insl
ds
dec
je
push
inc
push
in
out
mov
out
inc
lahf
push
aad
push
std
push
decl
adc
xorb
cmpl
add
fsubs
lods
clc
popf
sahf
rcr
xchg
in
popf
imul
jp
mov
fimull
shlb
clc
cmpsb
mov
fcoml
jae
cmpsl
jge
jnp
aam
iret
lds
mov
and
shrb
filds
jae
sub
mov
sarb
je
cs
fnstcw
rcrb
add
dec
cmp
mov
xor
mov
add
sub
dec
and
sub
loop
or
leave
push
repnz
or
cs
inc
daa
leavew
jb
int
xor
jnp
shll
adc
mov
and
inc
jae
cmp
cwtl
inc
test
mov
mov
aaa
sarl
xchg
sbb
pop
cmp
mov
mov
mov
nop
pop
out
repz
sbb
popf
aam
in
push
je
add
nop
int3
xchg
adc
shrl
dec
pop
lret
lret
ljmp
lret
notl
sahf
mov
inc
roll
out
mov
mov
cmp
xlat
jae
inc
test
push
mov
push
lret
mov
xlat
out
jne
outsl
mov
add
fwait
mov
cmpsb
fucomi
push
xchg
cmp
mov
cmp
iret
notl
stc
add
xor
mov
mov
hlt
mov
xor
cmpsl
fsubs
call
data16
inc
lea
jnp
aaa
mov
sbb
imul
pop
in
mov
pop
cwtl
xor
stc
cltd
mov
stos
shll
loope
lcall
inc
lock
pop
andb
pop
movsl
mov
push
dec
cmp
int
insb
mov
add
ss
xor
mov
out
sahf
sub
iret
jg
push
cmp
inc
movsl
add
pop
fcomip
and
or
in
imul
inc
test
push
addr16
cmpsl
lds
add
rcrl
mov
movsl
xlat
mov
push
outsl
cmp
ficoml
inc
add
and
jecxz
fwait
inc
sti
dec
mov
insb
cltd
inc
lret
addl
dec
inc
and
add
gs
mov
push
xor
pop
push
ret
inc
bound
lods
das
cwtl
out
movsl
cmp
jnp
mov
adc
jmp
or
push
xchg
outsl
std
adc
fwait
shlb
popa
mov
pop
sbb
xchg
mov
mov
sbbl
icebp
sbb
mov
loop
jo
cmp
xorb
lods
add
inc
fidivrl
jo
popa
in
dec
inc
pop
dec
es
lar
jg
fwait
xchg
ret
pop
cli
fidivl
push
xor
add
je
jg
sbb
pushf
xor
aam
push
call
mov
mov
mov
lahf
lods
andl
push
gs
dec
outsb
int
repz
add
adc
mov
mov
pop
mov
sub
repz
rcl
xor
adc
mov
stos
xchg
sbb
lahf
popf
insb
daa
adc
add
jge,pt
test
or
or
pop
inc
pop
dec
jo
mov
jae
fwait
scas
ljmp
push
adc
dec
pushf
push
in
cwtl
repnz
and
sub
and
scas
pop
jmp
add
jecxz
dec
divb
icebp
mov
sbb
xchg
repz
das
std
stc
ljmp
or
push
out
pop
mov
dec
mov
idivl
cmpb
bound
std
and
add
call
and
lret
mov
add
fistl
inc
add
fs
xchg
stos
mov
dec
rcrb
mov
cwtl
test
mov
sub
adc
icebp
out
popa
mov
mov
add
or
cs
jns
sarl
popf
jecxz
jb
icebp
clc
stc
xchg
dec
insl
pop
std
jmp
xor
jno
rolb
mov
push
rolb
pop
pop
dec
push
les
sbb
cmp
mov
push
shlb
sub
jge
sbb
rcll
jae
cmp
jnp
sbbb
test
into
pop
pop
push
repnz
push
sub
ja
pop
imul
mov
adc
jbe
cmpsl
sub
int
ss
ljmp
cmp
cs
mov
mov
std
cld
imulb
xor
mov
je
add
add
or
xchg
sub
adcl
nop
and
test
movsl
mov
movsl
addps
ss
pop
ja
in
push
fistpll
inc
cmc
movsl
stos
sub
mov
inc
xchg
mov
mov
and
sub
ss
cmp
mov
cltd
sti
push
push
pushf
jge
data16
dec
leave
outsl
xor
push
and
pop
mov
xchg
mov
or
cmp
sub
daa
lcall
aaa
sub
hlt
daa
enter
cwtl
mov
movsl
adc
movsl
inc
inc
mov
aas
push
push
nop
int3
add
rorb
aas
scas
cli
in
mov
icebp
out
or
popa
pop
arpl
cmp
adc
insl
dec
or
leave
mov
mov
mov
int
aas
fldt
jno
xchg
testb
mov
out
aam
jne
adc
aas
sbb
nop
lret
scas
mov
ja
add
adc
mov
testb
and
out
push
outsb
inc
ds
sub
lods
mov
js
sbb
inc
gs
lret
dec
push
sahf
sbbb
and
or
test
inc
stos
and
push
sbb
xchg
push
mov
dec
stos
jnp
aas
sbb
loop
shlb
jmp
adc
shlb
aaa
scas
or
out
andl
dec
lea
jne
or
and
jnp
mov
cmp
jg
sub
jae
push
inc
movsb
fwait
aas
lods
pop
xor
notl
push
jmp
insl
ljmp
cltd
push
cwtl
insl
into
sub
pop
mov
inc
adc
lahf
push
sub
mov
hlt
adc
mov
push
shr
xor
adc
dec
push
mov
xchg
inc
inc
les
or
cmp
movsl
mov
mov
testb
push
sbb
jge
rcl
mov
add
test
and
mov
ret
sub
mov
leave
aam
or
jno
xor
arpl
cltd
push
aad
jbe
push
movsl
daa
pusha
imul
pop
rcl
mov
and
push
rdtsc
jge
lock
inc
dec
adc
loope
ficoml
repz
int3
scas
dec
xchg
add
and
jns
xor
lcall
mov
mov
mov
in
xchg
addr16
mov
jge
test
adc
fwait
inc
movsl
cmp
push
xchg
cmp
je
pop
jp
repnz
sarb
cld
mov
dec
sub
pop
and
pop
pop
dec
jge
sbb
lret
adc
sbb
loopne
movl
das
fs
sub
pop
sub
jno
push
pop
sbb
adc
sub
loop
repnz
cmp
sbb
xor
insl
gs
pop
dec
mov
pop
cmova
pop
or
push
out
mov
xchg
cmp
aad
dec
out
mov
out
add
aas
sub
fbld
pusha
test
mov
mov
jp
rorl
jo
lcall
adc
xchg
aaa
xchg
cmp
ret
sti
mov
and
iret
subl
jmp
sub
ljmp
fldenv
addb
ftst
and
mov
lcall
rcrb
push
daa
jo
lret
push
mov
push
rcl
cmp
scas
sbb
inc
or
aad
pop
pushf
add
out
pusha
mov
insb
dec
scas
inc
out
mov
aam
rcll
and
mov
call
inc
inc
dec
cltd
lods
test
xchg
insb
mov
and
adc
cmpsl
sti
cmp
loope
xchg
jb
jbe
inc
les
push
js
jno
or
pop
xor
xor
imull
insb
xchg
out
cmp
xor
inc
xchg
popf
js
adc
fs
enter
xor
push
lret
popl
popa
xchg
jmp
pushf
and
push
imul
pop
insl
ja
fs
jl
jae
rcll
mov
lods
popa
out
mov
es
push
bnd
sar
insb
ss
sarl
fimull
jl
cmpl
fnsave
inc
icebp
movsl
or
ret
cld
mov
dec
or
ret
and
xchg
fldt
push
fadds
iret
pop
xchg
xor
push
dec
pop
movsl
xchg
bound
lock
lahf
jp
std
cmp
js
movsb
cmp
popa
jnp
idivl
dec
cmc
mov
sti
cli
fldt
or
icebp
lret
push
test
cmp
ret
enter
xchg
stos
aas
push
dec
outsb
or
movsb
mov
aaa
xor
mov
xor
cld
inc
fmull
stc
ja
xlat
popa
les
adc
inc
mov
movsl
aam
das
mov
xchg
xchg
sub
jmp
sti
mov
and
add
and
xchg
and
xor
push
cld
fwait
pop
cmp
leave
and
or
adc
or
sbb
push
jbe
ror
fnstcw
out
lds
pop
pop
xchg
or
jmp
test
sbb
repz
adc
lahf
push
push
inc
and
dec
cmpsb
jle
ljmp
je
fisttpl
or
xchg
mov
dec
jmp
or
or
xchg
movsl
xor
in
mov
fsubrs
int3
xchg
dec
mov
mov
enter
in
pusha
shrb
cmp
aam
icebp
dec
pop
or
stc
in
push
bound
lods
xlat
push
inc
out
dec
ret
pushf
jb
or
mov
fs
push
push
aaa
fldt
sbb
xor
loop
xchg
and
or
xor
cmp
rorb
pop
dec
sub
mov
mov
jno
mov
mov
xor
jg
inc
pop
add
and
jg
sbb
das
je
inc
cltd
fwait
call
adc
jle
clc
xchg
js
jb
lods
hlt
xor
ljmp
lret
test
fidivrs
int
cmpsb
adc
outsl
mov
pop
loopne
popa
cmpsb
cltd
jl
cwtl
xor
sub
cmp
lcall
mov
daa
xchg
xchg
lock
scas
pop
push
call
mov
mov
popa
jae
or
test
cmpsl
mov
jle
jno
sbb
pop
repz
jmp
cmp
adc
sbb
ret
fdivrl
insl
jmp
repnz
dec
lods
bound
stos
add
ror
mov
insl
xchg
fistps
cmp
cmp
lret
sub
mov
nop
les
lahf
xor
imul
cwtl
or
mov
cld
mov
lahf
pusha
arpl
xchg
out
inc
hlt
pop
arpl
pop
icebp
and
push
sahf
lahf
shll
or
sbb
sbb
sbb
int
decl
pop
pop
dec
inc
sbb
scas
out
sbb
sbbl
sub
les
insl
sbb
mov
sbb
jbe
xor
insb
subb
jns
nop
push
aaa
adc
inc
push
cmpsl
pop
sbb
pop
jl
mov
cmpsl
pop
jp
or
call
and
js
enter
cld
dec
add
sub
sub
imul
lcall
in
fdivs
xor
and
pop
mov
stos
sub
in
movsb
mov
jle
jmp
aas
jne
out
sub
push
bound
lods
js
inc
ljmp
pop
inc
lcall
enter
stos
push
int
loope
loop
push
test
jmp
sub
jbe
in
mov
mov
jg
shl
ficomps
lret
mov
jecxz
popf
push
sub
pop
int3
sub
cmpsl
sahf
xchg
aas
jg
test
and
or
adc
mov
or
jae
mov
sub
inc
lret
inc
mov
stc
sbb
iretw
leave
jns
cmp
movsl
pushf
mov
cwtl
pop
sbb
jae
push
or
dec
cmpsb
leave
jmp
faddl
dec
fsts
fistpl
xchg
ljmp
push
jne
pop
jno
imul
ljmp
sub
inc
xlat
ret
mov
mov
jo
jmp
cwtl
pushf
ds
lods
rorb
sbb
movsl
stos
sbb
jbe
sub
roll
rclb
outsb
hlt
and
xchg
mov
test
cli
mov
jp
ficoms
jnp
call
sbb
xchg
in
cli
add
test
adc
sub
repz
cld
push
rclb
inc
add
int3
push
dec
cmp
xchg
xchg
sub
jge
adc
gs
das
adc
in
popf
ss
pop
pop
adc
sub
lods
jb
xchg
dec
roll
iret
fadds
xchg
xchg
pusha
and
xchg
insb
nop
dec
sbbb
jecxz
in
inc
aad
xlat
fwait
adc
xchg
ucomiss
and
hlt
clc
jle
jge
ret
dec
cs
push
xchg
xchg
push
jle
lret
insl
mov
sti
sub
jns
iret
sub
pushl
nop
or
mov
nop
sub
add
and
rcrl
jmp
push
inc
leave
pushl
inc
cmp
mov
in
jae
lcall
mov
push
add
mov
mov
aas
pop
in
in
or
jl
pop
ss
and
cmp
adc
jecxz
filds
or
hlt
jg
in
cs
roll
mov
aad
shll
das
mov
dec
pop
push
sarb
push
xor
pop
je
push
pop
push
cld
jae
xor
push
test
mov
adc
mov
out
lcall
aas
mov
sbb
lds
movsb
sub
pmaddwd
cmp
mov
cmpsl
clc
xchg
js
cs
roll
push
jo
pop
ret
aas
es
fwait
inc
out
mov
sub
and
mov
push
pop
in
add
push
cwtl
cltd
push
es
outsl
jle
xor
xchg
dec
das
jg
dec
dec
push
cmpb
and
imul
out
push
pop
sub
inc
jbe
aas
xchg
clc
outsb
pop
movsl
scas
mov
adc
xor
push
insl
mov
sub
loop
push
mov
inc
leave
jle
or
push
leave
mov
fidivl
mov
lods
bound
call
nop
test
cmpsl
cs
xor
pusha
xchg
add
jbe
push
jnp
or
pusha
rcrl
andb
and
inc
ja
and
xchg
jnp
adc
mov
xor
or
inc
pop
or
inc
xchg
jmp
pop
mov
into
xor
mov
into
test
mov
scas
or
iret
lahf
and
xchg
stc
inc
xchg
sbb
or
hlt
iret
add
or
mov
jp
adcb
imul
adc
ds
sub
shl
leave
out
dec
pushf
in
pop
jecxz
cmpsl
out
jne
pop
adcb
push
dec
pop
jno
fwait
out
push
out
xor
jns
push
xchg
sbb
mov
fidivl
pop
stos
inc
mov
aam
add
jne
mov
mov
pop
stc
jo
or
iret
cmc
pop
or
out
repz
scas
leave
xor
pusha
sbb
fdivl
push
jb
jmp
aas
lock
cmp
fstps
pop
out
mov
mov
int3
push
in
rclb
lret
negb
scas
cmp
cs
les
ds
dec
mov
push
outsb
mov
sub
add
inc
in
in
enter
sub
dec
lret
mov
jne
and
mov
dec
not
divb
out
out
ret
ret
add
xor
pop
jns
jns
pop
inc
pop
mov
xorl
adc
leave
pop
mov
mov
add
and
sbb
sub
jne
orl
daa
test
sub
mov
mov
scas
add
leave
and
and
icebp
adc
cs
xor
sbb
mov
mov
or
pop
mov
add
in
cmc
mov
pop
mov
xchg
mov
xorl
or
pop
gs
mov
rorl
adc
push
and
into
les
leave
mov
std
push
shrl
dec
jnp
and
in
icebp
repnz
dec
jle
adc
pop
push
push
fisubrl
loopne
in
fwait
jp
out
xchg
insl
scas
out
xor
roll
mov
xchg
jne
jle
xor
dec
add
rol
roll
aad
jl
push
or
or
dec
jbe
sbb
sahf
push
mov
jmp
or
push
aaa
xchg
daa
mov
shrl
mov
or
cwtl
fs
pop
popa
inc
pop
jbe
subl
sub
fldcw
icebp
cmp
xchg
test
shlb
push
xor
stos
adc
out
stos
lock
pusha
adc
pusha
ja
push
int
inc
push
scas
icebp
xchg
inc
pop
jmp
mov
pop
jae
pop
fsubrl
adc
daa
or
jge
jno
cmc
xchg
mov
sti
aas
mov
mov
fs
pop
mov
movsl
xchg
movl
cmpsl
adc
scas
negl
push
xchg
pusha
lods
shll
cs
mov
lret
stc
lcall
lds
mov
add
mov
jmp
popa
loope
pop
add
shr
push
cwtl
sub
ljmp
lods
pop
out
orl
xchg
inc
mov
ss
cmp
les
jnp
and
or
mov
add
rcr
or
gs
pushf
push
cmp
int
fiaddl
lods
nop
adc
divl
subb
bound
jnp
lret
lcall
push
jle
push
push
insb
dec
mov
incb
adc
pop
sbb
or
jb
pop
imulb
and
repz
add
test
fadds
mov
mov
addl
mov
jns
xchg
test
jnp
fldl
push
daa
ret
fcomip
pushfw
jp
gs
stos
sbb
inc
mov
push
pop
mov
stos
sbb
loopne
out
mov
imul
push
add
ss
push
fs
jg
mov
sub
add
lcall
mov
xor
es
or
in
cld
lret
imull
int
add
xchg
fbstp
test
sub
fldenv
and
sbb
roll
imul
mov
daa
das
fs
popa
sub
adc
pop
add
andb
adc
xor
cltd
out
dec
xor
mov
ret
xchg
pop
adc
and
pop
mov
cmpsl
test
daa
jge
cmp
daa
xchg
add
dec
mov
lods
pushl
mov
pop
sbb
mov
jbe
insl
mov
and
push
dec
sarl
or
pusha
je
pop
test
sub
xchg
rcrb
push
lods
cmpsb
insl
jae
xor
xorb
in
mov
scas
or
push
les
in
call
and
lret
sub
daa
mov
addr16
ljmp
shrl
test
fsubl
sub
inc
scas
cmpsl
aas
sub
daa
jb
daa
cs
mov
fcmovb
out
xchg
fwait
mov
sub
clc
or
dec
testl
cmpsl
cmpl
dec
dec
pop
mov
mov
testb
or
push
loop
je
push
cmpsl
lahf
push
ss
xor
adc
inc
jb
cmc
jb
push
xchg
adcl
mov
in
mov
data16
cs
add
fadds
std
pushf
fs
push
push
push
shll
call
mov
fwait
ja
cmc
fistps
shrb
pop
fwait
push
pop
xor
ljmp
inc
sub
mov
ror
mov
xchg
ss
push
out
int
pop
ds
jnp
mov
movsl
repz
je
add
cmpsl
call
ljmp
out
test
or
jmp
ljmp
cmpsb
mov
jno
mov
iret
daa
mov
cmp
clc
xchg
push
scas
ja
stos
push
js
adcb
movsl
adc
pop
lock
ficompl
repnz
cld
sbb
dec
jecxz
mov
int3
xchg
dec
jmp
mov
nop
adc
andl
dec
sub
enter
sub
fistpl
std
inc
xlat
and
outsb
mov
xor
movsb
sbb
jbe
fadd
repnz
pop
test
addr16
or
xchg
sub
dec
enter
int
test
das
jmp
push
mov
mov
mov
imul
test
adc
addb
inc
enter
and
xor
add
filds
push
fistps
imul
sbbl
enter
cmpsl
adc
cmp
mov
mov
pusha
fidivrs
inc
test
aad
add
or
scas
cmp
daa
push
jmp
test
sub
fs
stos
push
sub
loop
jmp
jno
jbe
xor
xlat
jnp
fincstp
inc
in
mov
addr16
movsl
mov
push
test
outsl
jge
xorl
jg
add
jno
lea
mov
add
leave
rorb
push
fisttps
daa
mov
in
stc
jecxz
cltd
aaa
and
mov
repz
repnz
dec
repz
pop
adc
std
fcmovb
lods
test
jns
movsl
mov
dec
outsb
mov
ljmp
aad
pop
xchg
xorb
ja
pop
xor
xor
mov
aas
dec
loope
shlb
cmpl
sbb
mov
repnz
out
mov
dec
bound
outsl
outsb
ss
imul
add
push
xor
xchg
lock
mov
stos
cmp
daa
pop
lods
stos
push
adc
js
out
xchg
stos
out
cmp
adc
add
push
rol
jl
fwait
jmp
and
test
rolb
shl
je
les
out
out
fcoms
outsl
cwtl
mov
mov
sub
cs
cmp
cs
in
scas
cmpsb
inc
cli
ret
xchg
add
repnz
cmc
cmp
push
and
divb
push
xchg
mov
add
sbb
jbe
add
and
pop
rorl
mov
push
testb
adc
insb
push
jl
ficomps
inc
fs
addr16
xchg
ret
xlat
sar
stos
or
jno
std
test
sbb
jae
jae
jno
pop
jae
jae
push
pushf
mov
adc
push
mov
fwait
sbb
mov
out
or
imul
or
or
fcompl
jge
fnstsw
les
es
pop
cmc
cmovge
stc
jecxz
and
mov
inc
sub
add
xchg
push
xor
xor
mov
pop
stos
test
and
jl
sbb
and
sub
popa
push
lea
adc
mov
mov
or
adc
push
jecxz
lds
or
enter
sahf
arpl
lret
std
lret
pusha
adc
dec
cmc
scas
jmp
lock
pop
xchg
sbb
sbb
pop
xor
adc
insb
out
jnp
dec
sti
fsubp
daa
out
sahf
call
lret
mov
jecxz
imul
decl
imul
lock
push
sub
fcmovbe
cmp
xor
push
pop
pop
or
sahf
pushf
jo
mov
call
sub
inc
or
mov
pop
xor
pushf
test
cmp
pop
pop
lahf
call
bound
sub
sbb
aam
pop
mov
sbb
xor
sub
xor
shl
dec
jne
daa
out
outsl
ret
mov
fdivs
in
subb
fisubs
std
insb
adc
pop
std
out
add
rolb
mov
mov
insl
ja
mov
stos
jo
adc
adc
inc
mov
xlat
xchg
nop
into
mov
pop
xor
fwait
mov
lds
dec
add
int
cld
jne
cmp
popa
es
insl
ss
or
push
rorl
jmp
sahf
push
adcb
mov
je
hlt
cmp
lods
dec
subb
cmp
pop
out
inc
lock
or
adc
or
std
fucom
dec
jecxz
js
pop
loope
std
adc
stos
xor
inc
mov
xor
fldl
sbb
cmp
adc
enter
cli
or
insl
inc
sbbb
cld
push
lock
push
loopne
je
mov
lcall
iret
sub
jle
fcoms
std
sub
das
and
insl
cmc
out
jb
push
pop
stos
shll
xor
movsb
and
sub
cmp
xor
pop
shlb
jo
pop
fildl
mov
ja
pop
out
jne
push
pushl
dec
jbe
or
push
xor
jp
nop
insb
roll
adc
aas
je
je
push
jle
jo
out
scas
movsl
je
jl
push
lret
rolb
sbb
sahf
outsl
or
xchg
inc
fcmovnb
add
mov
push
jae
push
xchg
xchg
inc
sbb
jo
mov
inc
jp
adc
or
push
std
add
loop,pn
stc
jb
imul
int
pop
fnstenv
roll
fsubrp
adc
add
mov
pusha
scas
and
mov
pop
adc
adc
lret
test
orb
mov
sbb
fistpll
sbb
mov
setg
and
enter
out
pop
push
pop
lcall
mov
sbb
mov
mov
mov
dec
mov
sub
sbb
adc
std
stc
or
sbb
imul
sbbb
pop
jno
inc
mov
aad
pop
jge
and
in
push
fsubp
mov
nop
push
xor
push
add
rcr
jge
jl
push
insl
sahf
pop
jle
fucomp
iret
outsl
and
std
push
add
daa
aaa
push
adc
mov
sbb
lds
sub
cmp
decl
pop
std
cmp
sbb
or
xchg
popa
dec
addr16
sub
mov
cmc
jb
das
aad
mov
or
aas
jno
fdivs
pop
clc
fiadds
push
xor
sub
xlat
test
xor
push
lea
fistpll
mov
adc
add
jg
data16
shl
cmp
std
add
aam
inc
shlb
in
and
clc
fs
movsl
mov
mov
cmp
inc
fwait
clc
adc
mov
or
jne
cmpsl
mov
push
gs
jbe
out
xorl
jns
lret
mov
ret
mov
movsl
loopne
or
or
in
add
inc
add
jb
scas
pop
jecxz
sub
arpl
les
xchg
addr16
or
cmpsb
lock
push
lods
inc
adc
or
mov
sub
dec
sub
shll
stos
sbb
in
mov
fistps
mov
xor
xchg
clc
sub
orl
in
clc
repnz
mov
aas
divl
jp
adcl
scas
cli
insb
fists
push
push
xor
mov
dec
pop
lret
or
shll
push
jg
ret
in
pop
gs
addb
into
add
inc
aas
xor
or
fsubrl
adc
repnz
push
pop
iret
push
mov
push
call
mov
insb
lods
mov
sbb
jecxz
xchg
jno
scas
mov
push
xor
jge
mov
push
mov
pusha
push
iret
addr16
out
jle
lcall
sbb
mov
mov
sub
push
dec
cmp
and
roll
mov
fisttpl
cmp
push
jno
inc
loope
cs
cmpsb
test
pop
lcall
cmpsb
and
mov
jecxz
fadds
mov
mov
push
cltd
xchg
and
enter
jnp
test
inc
fdivrl
fs
adc
sbb
add
xchg
jp
cld
inc
xorl
inc
dec
inc
adc
divl
cmpsb
nop
rolb
inc
cmp
mov
cwtl
cmp
nop
data16
popa
dec
int
mov
movsb
xchg
mov
xor
or
daa
cmp
mov
add
fwait
and
push
cmp
xchg
decl
adc
mov
inc
mov
sti
cld
sbb
bound
mov
inc
xor
fs
fsubs
cmp
cmp
std
loop
mov
das
push
add
inc
mov
fnstenv
subb
das
push
andl
mov
bound
es
adc
mov
mov
ret
bound
push
lahf
dec
ds
data16
ds
loope
out
inc
ss
cmp
dec
jne
enter
imull
test
mov
pop
inc
subl
das
call
sub
push
inc
xchg
add
adcb
cs
cmp
in
outsb
xchg
lods
jae
rclb
pop
xchg
cmp
push
ficomps
fsincos
jecxz
outsl
sbb
pop
test
cmp
adc
nop
or
xchg
in
mov
dec
adc
rcr
or
mov
fstl
cltd
xchg
pop
nop
xor
fdivr
loopne
and
add
aad
dec
push
notl
mov
xchg
fsubs
rol
test
adc
jg
or
sub
aam
cmc
data16
test
inc
out
or
sti
pop
adc
adc
outsb
daa
aaa
ds
adc
iret
jbe
mov
push
dec
dec
cltd
lds
out
add
mov
mov
lea
outsl
imull
inc
testl
cld
cs
cmpsb
ss
stos
sbb
arpl
and
cld
jnp
xchg
sub
push
push
fimuls
movsb
les
inc
inc
add
sbb
cmpl
rcl
andps
divb
xchg
rcrb
fistpll
pop
jmp
jle
adc
sahf
scas
push
sbb
or
xor
jbe
idiv
pusha
stos
add
lods
mov
ds
ds
jecxz
mov
jg
push
xchg
icebp
test
or
xchg
sbb
es
data16
jp
cmp
rcrb
mov
pop
jmp
mov
xchg
mov
andl
icebp
fisttps
notl
mov
sub
insl
dec
bsf
mov
xor
iret
fisubrl
pop
pop
inc
repz
lea
push
rorb
mov
cltd
add
aad
xlat
mov
sbb
outsb
xor
jo
cmpsb
ret
cmpsl
sbb
test
xor
push
xchg
std
pop
in
cltd
verw
adc
pop
or
jl
int3
pop
divw
mov
dec
aas
or
jnp
adc
add
fistpl
dec
xor
push
in
inc
pop
pop
and
push
inc
hlt
cwtl
push
mov
cmovo
sbb
add
xor
xchg
rorb
xor
jl
adc
call
and
jmp
inc
pop
stos
imul
cmp
pop
mov
out
negb
cli
inc
mov
mov
fstl
movl
jnp
aas
pop
sub
cmp
test
lods
mov
pusha
or
imull
cmp
mov
push
arpl
dec
dec
nop
adc
lods
pop
scas
adc
mov
shrl
lret
roll
aaa
sbb
push
mov
mov
js
xchg
cmp
aas
cmp
pop
push
lds
int3
mov
decb
push
pop
sub
mov
out
mov
lock
in
xchg
adc
stc
lcall
and
mov
push
mov
ja
pop
jae
fsubrs
mov
call
ds
inc
bsr
fs
mov
cmpsl
mov
mov
mov
jecxz
scas
mov
inc
rol
sti
pop
xchg
lcall
adc
popa
add
mov
mov
cmp
dec
lea
mov
cmpsl
insl
test
or
lods
paddsw
or
xor
rcr
aad
and
and
in
mov
mov
or
mov
rorb
nop
inc
inc
call
push
cmp
lds
hlt
mov
mov
mov
xchg
repnz
push
ja
loopne
cmp
jmp
rcrl
pop
das
mov
rcr
mov
jae
sub
into
call
pushf
rcll
jg
imul
scas
popf
test
or
xchg
int3
mov
adc
out
cmp
sub
mov
fcomps
ljmp
enter
int3
jecxz
jne
push
push
mov
push
jmp
int
push
sets
pop
mov
mov
js
cmc
ja
pusha
enter
sbb
mov
pop
add
jp
lock
xlat
mov
xchg
loop
std
sbb
xor
jle
fstps
inc
jno
cmp
or
lods
and
out
dec
pop
dec
xchg
ss
xlat
stc
xlat
ficompl
pop
xchg
jae
adcl
mov
dec
pusha
mov
xlat
mov
dec
enter
jne
jecxz
in
and
hlt
lahf
xor
arpl
inc
gs
jbe
outsl
dec
dec
sti
inc
dec
xor
loope
insl
frstpm(287
repnz
sbb
pushw
out
fldt
pop
cltd
aas
adc
mov
mov
dec
pop
ja
loop
ja
hlt
mov
and
xor
mov
mov
pop
mov
mov
pop
mov
xchg
gs
sbb
pop
mov
shr
das
pop
outsb
adc
fidivrl
sub
push
test
mov
push
jl
es
jae
out
or
cltd
inc
jb
push
xchg
dec
inc
cmc
arpl
sbb
dec
mov
sbb
dec
decb
aam
outsl
mov
scas
adc
xorl
dec
fsubl
add
adc
xchg
negl
das
and
jo
cmp
or
orl
inc
stc
or
mov
lea
sbb
xchg
mov
packuswb
cwtl
jb
add
xor
push
mul
jge
mov
cltd
jl
fwait
and
mov
dec
mov
scas
and
test
sub
test
leave
mov
push
mov
sub
xchg
add
jno
sbb
sub
pop
sbb
dec
jecxz
jge
outsl
mov
jmp
jl
dec
sbb
add
and
xchg
mov
repnz
scas
test
out
pop
stos
inc
nop
adc
pop
push
jl
test
sub
inc
push
sub
pop
pop
mulb
sub
mov
cmpsb
mov
cs
lods
aaa
mov
jge
je
sub
and
inc
pop
inc
mov
stos
jno
xor
ja
aas
mov
xchg
pop
pusha
xchg
adc
in
pop
sbb
and
js
fcoml
jl
cmp
fcmovnbe
sub
in
lcallw
out
dec
lods
mov
std
cli
test
jnp
fs
cmp
push
xor
je
stos
rcrb
cmpsl
jb
pushf
add
pop
sbb
pop
adc
sti
xor
cmpsl
sbb
push
pop
jg
adc
push
and
xor
int
fsub
scas
shrl
leave
jo
lock
xor
call
pop
ficoml
jp
idivb
xchg
jmp
sub
pop
inc
inc
ret
push
fidivrs
xchg
and
sub
inc
and
jb
push
push
je
aad
sbb
and
out
fwait
aaa
clc
outsb
movsl
test
pop
inc
pusha
pop
rcrb
movsbl
pop
fsubrs
ret
icebp
cmp
add
push
ja,pn
cmp
push
addr16
mov
mov
shrl
adc
rclb
hlt
adc
mov
insb
cmc
lret
cmpl
adcb
mov
jne
in
lds
je
push
sub
loope
cmpsb
mov
cmp
jno
popf
xor
pop
ljmp
adc
popa
cwtl
das
push
cltd
fs
add
gs
or
and
lock
sbb
pop
jns
sbb
push
adc
adc
int
test
pop
addr16
pusha
or
push
jg
pusha
bound
pop
rolb
fs
fnstsw
movsb
test
adc
aaa
adcl
jle
add
in
push
lret
andl
adc
jbe
rorl
cwtl
js
sbb
xor
xchg
or
clc
inc
in
xchg
mov
cmc
cmc
xchg
adc
jbe
scas
cmpsl
call
cmpsb
rcrb
popa
mov
jle
mov
lock
xor
outsb
in
ja
stos
inc
arpl
fwait
mov
mov
lcall
mov
test
sar
mov
sub
mov
xor
movsl
mov
xchg
cmp
dec
mov
stos
dec
pushf
outsb
rorb
pop
jp
outsl
sbb
cwtl
cmc
fisttps
shrl
sub
fwait
std
cmp
mov
cli
jl
jb
fs
and
inc
mov
jmp
mov
insb
clc
idiv
dec
sub
mov
and
sti
test
or
jge
and
gs
push
out
mov
ret
ljmp
lret
out
mov
hlt
xor
popf
rorb
xor
inc
cltd
dec
aaa
xchg
daa
lret
jb
add
ja
lods
subb
mov
insl
ss
push
jle
mov
pop
and
icebp
sbb
pop
or
push
lock
es
ljmp
icebp
xlat
movsb
inc
push
push
inc
ss
mov
enter
or
jp
lock
or
lds
pop
pushl
push
dec
pop
scas
cmp
and
or
test
add
repz
movsl
xchg
lcall
pop
ljmp
push
fldl
jmp
fistps
sub
sub
aas
pop
push
pop
mov
cmp
add
xchg
sbb
push
mov
adc
mov
mov
push
das
jg
xorl
lods
nopl
dec
or
lods
mov
inc
push
scas
push
mov
fnstsw
mov
push
pop
add
pop
sub
push
mov
mov
jno
call
jo
jl
adc
sbb
loop
repz
mov
lock
sub
test
adc
mov
aaa
out
lds
adc
fisubrs
inc
stos
jae
mov
cmp
int
xchg
cmp
fisubrs
mov
xchg
sub
xchg
insb
or
mov
add
pop
cli
or
mov
mov
dec
or
nop
push
push
mov
push
adc
push
mov
jle,pt
iret
stos
pop
pop
lcall
fistl
cmc
iret
dec
cltd
or
mov
sbb
push
es
or
sub
rorb
ds
inc
cmp
mov
push
int
cltd
ret
fwait
test
ja
push
movsb
into
es
jns
bound
clc
in
and
imul
daa
imul
out
js
ffreep
stos
xchg
sub
push
aad
xor
test
inc
test
loop
mov
adc
in
loope
lcall
pop
lds
push
lea
call
xor
dec
jnp
movsl
dec
adc
insl
iret
in
daa
adc
roll
call
std
xor
loope
push
faddp
dec
mov
lret
jo
mov
dec
push
jbe
inc
addl
push
mov
xchg
fcoml
sub
mov
sub
pop
ds
dec
dec
pop
fnsave
in
lret
sbbb
xchg
lea
int
pop
outsl
add
jne
xor
push
mov
stos
push
sbb
call
push
in
aas
mov
mov
dec
sbbb
xchg
xor
jne
push
mov
sub
es
push
or
iret
inc
leave
mov
xlat
xchg
jnp
ja
imul
iret
push
cmpsb
cli
call
jnp
stc
mov
jl
xchg
loopne
dec
shr
lods
shrl
mov
jle
roll
jle
inc
and
add
stos
pop
sahf
pop
dec
inc
outsl
dec
lods
sahf
pop
sub
pushf
push
mov
adc
add
push
mov
sbb
add
stos
pop
jbe
repz
sub
xlat
lret
xlat
cltd
xchg
data16
test
frstor
out
dec
imul
lret
inc
push
leave
fcoml
sbb
insl
test
mov
xchg
mov
fstpt
xchg
add
cmpl
inc
or
or
leave
test
or
loopne
jg
in
stc
mov
mov
push
xchg
mov
cmp
push
repnz
out
hlt
pop
sbb
test
push
sub
jl
jl
inc
jg
xchg
adc
mov
and
stos
in
mov
out
xchg
outsb
xorl
out
cmp
dec
cs
mov
jno
sub
pop
movsb
dec
repnz
mov
jg
and
fnsave
inc
xchg
lea
push
or
mov
inc
sub
repz
jno
cmpsl
lcall
ja
xlat
imul
sub
imul
xchg
aaa
lods
lods
push
rcrb
mov
add
jg
xchg
jne
xor
insb
aas
xchg
adc
scas
lahf
insb
es
fdiv
fadd
fdivl
push
and
lock
leave
gs
mov
pushf
push
mov
xchg
dec
adc
add
pop
lea
mov
sbb
add
sub
push
imul
ss
inc
xor
test
cltd
daa
das
pop
jae
and
sub
add
into
add
mov
dec
aas
adc
and
cmp
movsl
xchg
add
dec
pop
pusha
cmpsl
pop
mov
push
pop
repnz
sti
jg
js
repnz
fcompl
sbb
inc
aas
ds
push
lahf
pop
ja
in
int3
into
rcrb
cmp
fistpl
lock
sub
outsb
pop
stos
add
inc
cmp
daa
add
inc
ja
outsb
int
or
jg
cmp
xchg
inc
ds
and
xor
or
pop
ljmp
daa
mov
fiaddl
test
stos
mov
sbb
sub
bound
add
cli
jg
icebp
mov
je
in
adc
pop
rcll
add
out
push
xor
negb
sti
jg
xchg
mov
xor
xor
lods
adc
push
testb
popf
outsb
cmp
mov
fadds
and
mov
ret
daa
jns
sub
fwait
xor
outsb
and
mov
xor
pop
jae
mov
sub
cltd
insb
pop
fwait
jmp
xor
enter
lret
test
lret
loope
adc
mov
lods
cld
cmc
dec
sbb
mov
inc
hlt
sub
or
andb
pop
or
insb
push
lcall
sub
test
loop
mov
shll
gs
jae
jg
xlat
mov
mov
jp
mov
pop
lret
sbb
cmp
std
inc
sub
and
xchg
ds
pop
mov
mov
outsl
aaa
mov
mov
xor
fbstp
cli
sarb
ds
sbb
jg
xchg
insl
cmp
mov
mov
imulb
sub
fsubl
aad
scas
sahf
push
push
mov
fisttps
mov
mov
fiadds
dec
xchg
aaa
hlt
cmp
xchg
xlat
adc
orl
out
pop
fisttpl
jne
mov
inc
fnstsw
lods
pushf
jmp
pop
mov
repnz
pop
mov
sbb
sbb
xchg
sbb
mov
fadds
jge,pn
cmpsb
shrb
jp
std
cmp
sub
xor
sub
cmp
xor
push
cmpsl
les
clc
and
lret
popf
scas
inc
enter
dec
cmp
adc
xor
push
fnstcw
adc
mov
adc
pushf
pop
fsubr
pop
mov
movsb
inc
pop
imul
xor
or
lret
stc
inc
pop
adc
es
rclb
xor
fwait
jge
add
xchg
ret
aas
lcall
xchg
push
pop
sbb
xchg
add
xor
movsb
pusha
mov
sbb
lock
dec
inc
jp
in
lahf
mov
and
sbb
mov
push
das
cltd
dec
jmp
jne
sbb
lret
xor
mov
mov
push
cli
jmp
xchg
inc
arpl
adc
sub
cmp
enter
lret
enter
dec
cmpsb
nop
arpl
push
out
push
jb
rep
and
shr
inc
push
clc
or
lods
inc
xor
dec
xchg
xchg
aad
pop
in
dec
int
dec
out
cmc
std
cmp
inc
adc
bound
fimuls
jb
adc
mov
shlb
push
jge
jecxz
outsb
cmp
add
fadds
enter
sbb
jb
out
loopne
inc
insb
movb
adc
jmp
rcrl
mov
cmpsl
sti
mov
cmp
fisttpl
sarl
xchg
call
clc
mov
test
cwtl
rcrl
jb
ds
jmp
jmp
mov
push
push
xchg
jbe
sbb
gs
test
jle
and
push
mov
ss
out
in
jbe
xor
sbb
divl
add
jns
xor
aad
pop
outsl
dec
jne
jg
ljmp
shll
inc
xchg
mov
dec
jo
or
adc
dec
xor
iret
sti
icebp
bound
adc
xor
fdiv
mov
pop
or
pop
dec
lret
test
icebp
push
pop
sbb
mov
mov
sub
xchg
add
and
cltd
inc
add
or
inc
aas
push
test
lods
gs
xor
ss
jecxz
lahf
loop
mov
dec
inc
pop
bound
mov
or
out
je
imul
jg
inc
sbb
sub
clc
cmp
xchg
imul
sub
inc
sub
and
int3
adc
xchg
sbb
sbb
cmpsb
outsl
ja
test
movsb
inc
xor
jo
imul
dec
adc
cld
not
setns
mov
cmp
jl
lock
dec
pop
insb
shl
fcompl
data16
sahf
pop
lds
push
add
in
inc
cmp
xor
xchg
in
push
cmpsb
shll
inc
dec
inc
xchg
int3
test
test
in
jno
lcall
push
jae
dec
ljmp
stos
sub
in
aad
pop
jnp
movsb
and
mov
pop
mov
jmp
cmp
sti
xchg
and
cmp
adc
addr16
add
xchg
test
add
mov
or
mov
mov
std
adc
imulb
adc
mov
sub
iret
mov
dec
jl
xor
sub
mov
pop
pop
ss
lods
jo
cmc
cld
imul
repnz
cmp
sbb
jno
mov
ss
cli
scas
out
lds
dec
mov
sarl
mov
pop
cmp
pop
cmpsl
fucomi
ret
andb
out
mov
andl
and
cmpsl
inc
clc
stos
int3
xor
mov
ret
mov
out
cs
push
jne
xor
fldlg2
mov
pop
xchg
and
jl
dec
into
ret
nop
adc
push
adc
mov
inc
out
fidivs
stos
pop
mov
sbb
fsubl
lret
loop
add
pop
aaa
sbb
pushf
push
adc
scas
insl
inc
test
negl
and
shll
jl
or
das
mov
cmp
fbld
roll
xchg
pop
inc
mul
jae
mov
and
rcrl
and
jns
imul
jmp
jb
insb
mov
pop
mov
fisubrs
fwait
mov
repz
sbb
mov
cwtl
jns
pop
filds
pop
jnp
add
dec
add
stc
stc
cmp
jo
rcl
dec
sub
outsb
fucomi
xchg
mov
mov
popf
repnz
movsb
inc
imul
addr16
in
lock
aaa
in
ss
mov
mov
icebp
decl
stc
lcall
es
aaa
jecxz
jns
outsl
ss
lahf
add
lock
sahf
add
inc
push
mov
icebp
mov
sub
cmc
imul
data16
loopne
leave
or
imul
push
jbe
push
mov
add
mov
pop
xchg
inc
push
in
loopne
jns
fdivs
movb
push
rorl
lcall
call
rcrl
outsb
outsb
inc
std
inc
sbbl
jo
stc
popa
sub
xchg
jge
insb
or
cmpsl
dec
xchg
mov
sub
cmp
xchg
ret
push
or
dec
jmp
cmpsb
cltd
dec
loope
sbb
jl
jmp
es
pop
cmpsl
clc
fldl
adc
loope
sub
or
mov
add
test
test
lcall
imul
scas
or
out
xchg
inc
adc
mov
pop
dec
inc
and
xor
xor
roll
stc
pop
push
dec
dec
inc
dec
inc
scas
jo
push
pusha
mov
movsb
dec
lret
cltd
jo
cmp
ljmp
mov
sub
out
call
aas
inc
mov
push
enter
stos
add
fdiv
mov
lea
aaa
push
pop
nop
cs
xchg
pusha
ljmp
in
jp
fisttps
and
cmpsb
scas
arpl
adc
out
inc
mov
adc
inc
mov
add
cmpsl
jnp
or
mov
xchg
cmpsb
jmp
stos
clc
inc
push
nop
loop
cmp
xlat
out
orb
sti
sub
mov
sbbl
sbb
lahf
push
add
data16
xchg
out
outsl
jae
and
jno
loop
sbb
scas
fucomip
sbb
pusha
in
test
mov
arpl
test
cmpsl
pop
mov
cmp
dec
sub
mov
mov
ror
and
sub
loop,pn
sub
cmp
repz
or
inc
cmpsb
rcll
adc
enter
int3
xor
xchg
das
push
dec
sti
sub
loop
rcl
jae
testb
ljmp
cltd
decb
lret
xor
mov
mov
movsb
fbstp
fdivs
std
dec
and
out
jbe
cmp
stc
adc
int
mov
xor
addr16
dec
jg
adcl
out
jno
dec
mov
daa
jecxz
or
adcb
mov
adc
es
data16
in
adc
cld
cmp
xchg
xorl
jne
loop
fs
dec
sub
adc
sub
and
dec
mov
popa
out
test
mov
xchg
mov
lret
dec
xor
push
lds
fsubr
aas
jb
enter
adc
cmpl
push
inc
add
mov
jp
inc
mov
lret
push
fisubl
je
pop
cltd
add
jp
imul
jmp
push
or
decb
cmp
ret
insb
push
inc
rcll
push
mov
gs
cmpsl
lods
ret
lcall
add
mov
push
jnp
cmc
shr
dec
inc
jbe
fcomps
into
mov
push
sbb
mov
and
sbb
sti
pop
mov
mov
pop
push
test
xchg
scas
dec
push
push
push
push
negb
lcall
es
std
pusha
rorl
pop
adc
imul
mov
jbe
cmp
mov
or
dec
pop
xchg
cmpsl
xchg
fiadds
jbe
push
mov
inc
inc
mov
sub
iret
push
arpl
lods
cmpsl
pop
icebp
add
xchg
ds
and
push
jae
push
cmp
cltd
sbb
popf
jno
rorb
xor
iret
jl
arpl
xor
leave
outsb
mov
test
sub
movsb
andl
add
jge
mov
and
scas
jo
mov
adc
add
jl
mov
fisttpll
ffreep
xchg
ret
cmp
hlt
and
shlb
push
out
daa
pop
jle
imul
scas
inc
xor
loope
insb
loopne
jno
popa
push
loop
lods
fcomi
mov
in
mov
sbb
pop
jecxz
orb
ja
out
loopne
pop
fwait
add
lret
in
mov
repnz
in
jge
testl
push
pop
mov
pushf
adc
fbld
xchg
push
cli
fldl
or
adc
in
fs
cmpsl
add
cwtl
mov
dec
mov
mov
push
clc
test
pop
jnp
push
jae
outsl
sub
or
fwait
xor
subl
mov
xchg
xchg
insb
mov
add
cltd
add
xchg
jbe
dec
or
sub
test
or
leave
dec
lock
les
aad
pop
popa
jns
adc
inc
mov
negb
push
nop
mov
fisubrs
sub
cwtl
pusha
hlt
scas
lods
lods
ljmp
mov
lret
mov
cli
out
xchg
add
fsubrp
add
cli
push
popa
inc
cmpsl
and
shufps
pushl
orl
shrl
pop
ret
mov
cmp
mov
xlat
roll
pop
or
je
ret
mov
or
inc
mov
cltd
jmp
test
jbe
xor
jg
or
and
xchg
outsb
xor
std
push
sbb
aad
jmp
cltd
pop
repz
movsb
mov
pop
push
les
xchg
adc
int
shll
jbe
cmpsl
push
mov
mov
cmp
std
sub
insb
int
xor
divl
dec
mov
mov
push
cmp
lcall
dec
sub
xlat
popf
mov
les
mov
jle
pop
jbe
and
jb
mulb
lods
ret
and
sub
loop
xor
mov
pop
lret
xchg
jae
shl
mov
sbb
and
in
fidivrs
insb
xor
jae
popa
cmp
xchg
pop
cltd
inc
mov
push
fwait
outsb
jmp
bswap
or
addl
mov
pop
xchg
jmp
mov
adc
mov
sub
xchg
aam
cli
rcr
mov
aaa
aad
pop
and
push
pop
mov
sub
fdivrp
cmpsl
and
pop
mov
cld
sbb
ss
cmpsb
push
pop
mov
xor
mov
xor
pop
cmp
inc
ljmp
aaa
mov
xchg
cmp
sbb
mov
das
mov
clc
dec
ss
cmp
mov
lret
fwait
outsl
int3
sti
pop
out
add
xchg
or
std
mov
jbe
and
lds
push
jbe
jns
mov
mov
ja
mov
dec
xlat
and
adc
mov
repnz
je
divb
movsl
add
stos
xchg
dec
sbb
outsb
pop
loopne
movsl
and
dec
ljmp
bound
mov
sti
sbb
xchg
test
ja
xchg
push
mov
jns
push
mov
mov
dec
aas
inc
lock
xchg
or
es
sbb
jno
mov
dec
jl
mov
pop
out
test
and
aas
into
movsb
insb
lock
jno
cmp
in
in
movsl
sub
or
ret
xchg
xor
imul
shll
pop
add
push
addr16
ret
movsb
jg
clc
xchg
xor
dec
out
xchg
xor
sub
div
or
sub
sbb
xchg
adc
loope
mov
mov
ret
inc
sbb
inc
xchg
lods
subl
subl
fst
outsl
xchg
enter
inc
bound
stos
fistpl
jl
inc
popl
mov
sbb
popf
or
cmp
xchg
xor
cmp
push
mov
sbb
inc
rolb
sub
out
jmp
sbb
int
mov
inc
movb
xchg
xor
fisubrs
scas
push
les
adc
imul
fsubs
testl
sbb
and
clc
cmp
mov
push
add
jge
arpl
jge
out
mov
iret
mov
cmp
lock
aaa
xchg
popa
mov
sti
or
mov
xlat
cltd
testl
xor
scas
adc
add
lahf
sar
push
ds
insb
call
dec
xor
fnsave
fdivrs
jb
cmp
popa
lock
adc
movsl
cs
mov
out
fldenv
or
xor
pop
mov
andl
pop
xor
ret
pop
cmp
fists
xlat
cmpsb
je
sub
dec
mov
adc
mov
mov
fnstenv
rorb
fs
jae
ss
adc
pop
loopne
xor
sub
xchg
mov
adc
dec
inc
subb
adc
mov
jl
das
fs
aaa
adc
cltd
adc
cli
cmp
and
shlb
mov
mov
popf
leave
xor
pop
cld
mov
xchg
jno
dec
aaa
and
test
adc
daa
xchg
hlt
cmp
inc
and
mov
pushf
dec
or
dec
pop
sarb
in
cmp
mov
movsl
gs
mov
sub
and
mov
cmp
jns
mov
imul
jo
mov
dec
jb
nop
adc
add
inc
mov
clc
fstpt
inc
and
push
sar
jnp
lods
mov
pop
sub
and
mov
push
pop
xor
pop
in
and
clc
aam
shl
cmp
pop
sbb
or
data16
in
adc
popf
or
jmp
imul
adc
aam
push
insb
hlt
pop
lcall
jle
sahf
or
xchg
cmc
adc
aam
pop
xchg
sbb
jge
inc
sub
int3
in
lock
lock
addr16
lret
jne
jl
into
mov
adc
inc
aam
sbb
cvtdq2ps
jge
and
fidivrl
and
loope
pop
adc
pop
loopne
inc
enter
sbb
iret
into
int3
repnz
push
push
or
clc
jge
or
imulb
shlb
icebp
aas
add
mov
int3
xor
iret
inc
xor
xorl
xor
sbb
jmp
leave
leave
add
cvtdq2ps
or
fmulp
lock
cmp
adc
cmc
das
xor
mov
mov
adc
fisttps
inc
mov
int
out
shlb
imul
sub
mov
sbb
test
repnz
mov
cltd
add
repnz
xchg
cmc
pop
test
fsubrs
int
sbb
in
inc
mov
cmp
or
cmp
and
popa
xlat
jo
or
pmaxub
je
add
pop
fisubrl
inc
pop
jle
pop
add
aaa
inc
adc
ds
mov
jns
jbe
nop
jbe
flds
outsl
push
icebp
and
cmpsb
xor
movsb
js
push
lods
or
dec
xchg
jle
insl
mov
jp
shlb
or
cmp
jo
jae
icebp
xor
lret
ds
jp
insb
in
dec
test
mov
mov
enter
pop
pop
mov
mov
mov
fsubl
fs
adc
or
xchg
xchg
fstpt
jge
movsb
jo
xchg
or
outsb
mov
in
add
and
mov
inc
add
mov
loop
sub
out
shll
pop
or
fsts
sbb
lds
flds
fldl
cmp
sbb
mov
inc
add
mulb
mov
negb
test
cld
pop
fimull
shrb
sub
loopne
jne
imul
dec
int
mov
fnstcw
add
jnp
jns
out
mov
jne
in
sub
fidivrs
mov
imulb
int
inc
fsubrs
fadd
xchg
jg
add
add
pop
sbb
ds
inc
or
and
fs
in
addr16
scas
jnp
jl
push
mov
subl
fwait
int3
pop
shl
ja
mov
jl
adc
jb
adc
jecxz
stos
in
repnz
out
fcomi
mov
jnp
jmp
mov
jmp
andl
sub
loopne
push
jl
jg
dec
xchg
dec
lock
jmp
push
and
xor
jp
insl
ja
fisubl
sbb
xor
add
clc
mov
adc
icebp
div
jbe
sahf
ja
mov
mov
outsl
mov
mov
xchg
xor
mov
cmp
enter
cmpsl
jne
or
inc
add
aas
iret
xor
adc
dec
push
ret
divl
mov
xor
jmp
inc
and
cltd
sbbb
inc
mov
push
int3
mov
loopne
lcall
and
fidivs
push
fucom
sub
push
xchg
xor
dec
mov
adc
push
js
mov
cmp
mov
lahf
es
lret
add
outsl
sbb
xchg
adc
fdivrl
sub
ss
xchg
dec
in
mov
push
jmp
sbb
je
cmp
aaa
movsb
cli
or
cmpsb
jne
stc
in
mov
pop
rcr
jmp
cmpsb
xor
pop
sbb
ret
or
aad
cmc
add
add
mov
pusha
mov
out
lret
sbb
xchg
cwtl
or
in
fisttpll
cs
jae
rolb
add
pusha
std
mov
mov
jbe,pt
test
aaa
cmovle
or
inc
int
daa
inc
adc
xchg
add
fs
repnz
push
movsb
or
jb
sub
and
aam
mov
in
pop
xchg
pop
jg
mov
call
pop
shll
lods
ds
subl
shlb
sbb
popf
leave
lods
mul
daa
mov
mov
jne
lea
test
or
inc
mov
pop
mov
rcll
testl
push
xor
addl
out
adc
and
mov
pop
lea
shll
bound
rorl
fisubrl
add
sahf
mov
fsubl
lods
dec
dec
add
insl
dec
sub
cmp
fiaddl
insl
mov
xchg
out
lahf
adc
pop
sbb
outsl
sub
inc
mov
call
das
stos
and
shll
xor
or
push
mov
jne
fstpt
test
mov
rolb
daa
inc
cmp
push
ljmp
in
or
pop
xchg
hlt
jo
mov
xchg
mov
div
icebp
in
or
inc
pop
push
mov
jg
mov
adc
paddsw
sbb
mov
movsb
leave
xchg
xlat
dec
inc
push
and
cvtps2pd
cmp
int
push
sahf
ror
mov
cmpsl
push
out
cmp
imul
jo
insl
shrl
jo
dec
mov
jb
dec
mov
int3
xor
out
pop
jl
notl
mov
add
xchg
and
adc
mov
fstps
mov
xor
add
add
insl
jp
repnz
jo
andb
mov
shl
in
pop
sbb
lock
and
bound
popa
rolb
inc
adc
xchg
add
pusha
iret
push
xchg
and
pop
movsl
out
pop
test
xlat
inc
sbb
pop
xchg
jnp
dec
or
or
jns
inc
and
mov
or
lret
cmp
mov
or
in
pop
stc
adc
lcall
js
mov
aad
out
pop
sub
sub
stos
cltd
mov
flds
and
pop
sarl
adc
lcall
repz
jp
lcall
cmpsl
outsl
inc
icebp
jg
ror
xchg
pusha
push
bnd
and
jns
lods
mov
mov
jnp
dec
cmp
xchg
or
test
mov
jns
cwtl
mov
cmp
mov
sbb
fnstsw
or
adc
add
jp
std
xchg
cmp
outsb
cmp
mov
lcall
sbb
movsb
xlat
sti
gs
inc
gs
hlt
lcall
push
sahf
inc
cmpsb
xchg
lret
test
dec
lods
test
sbbl
xor
fistpll
lcall
cmpsb
pop
mov
es
andb
out
xor
or
daa
jae
test
mov
jp
dec
lret
pop
outsb
cmp
inc
mov
jnp
in
out
jno
out
js
test
jb
dec
inc
jp
movsl
dec
inc
sub
xchg
cltd
push
cmp
rclb
push
aaa
mov
ss
push
imul
inc
je
pop
mov
adc
into
les
mov
ficoml
lcall
roll
dec
add
xor
xchg
aaa
adc
xchg
cmpsl
nop
cwtl
xchg
cmpsb
ja
repnz
shl
cmc
test
leave
xchg
mov
pop
adc
mov
fwait
xor
mov
es
add
inc
xchg
jnp
in
orb
fs
cmpsl
andl
jb
lods
stc
std
adc
incl
dec
mov
std
mov
lcall
mov
aam
into
lret
sub
stos
movsl
mov
dec
test
push
push
popl
bound
cmp
adc
cmp
test
mov
dec
xor
push
jmp
daa
daa
jmp
xor
cmp
adc
cwtl
or
outsb
mov
mov
into
jmp
mov
dec
and
jp
sub
jle
shrb
sub
jmp
cmp
rcll
in
push
leave
lds
stos
mov
xchg
jl
je
adc
pop
stos
or
jg
outsl
lret
aad
lret
mov
adc
cmp
dec
push
ja
adc
push
daa
xchg
mov
test
cltd
outsb
jno
jnp
xchg
lock
popf
mov
je
movsb
lods
inc
inc
stos
test
xchg
pop
sbb
or
sete
xor
mov
mov
int3
and
jg
lock
incb
mov
inc
adc
int
inc
add
int
fstpl
xor
lcall
sub
xor
ss
das
xchg
jo
data16
pop
xchg
xchg
cli
cmc
movsb
mov
rcr
les
or
jle
mov
sbb
pop
iret
and
repnz
jns
mov
xchg
sub
mov
pop
xor
lods
lods
jno
push
or
jns
cltd
hlt
pop
inc
mov
cmp
shll
ret
stos
es
imull
pop
scas
aas
sub
inc
push
push
push
fnstcw
mov
xor
out
or
mov
adc
pop
mov
pusha
push
shl
test
repnz
js
or
add
pop
mov
imul
popaw
inc
pop
dec
fnsave
pop
push
fmul
sub
sbb
out
mov
push
test
inc
jp
fcompl
xchg
int
test
roll
loop
fs
je
jmp
dec
pop
push
lods
push
shrl
popf
add
adc
mov
inc
stos
lods
sarb
adc
repz
pop
sbb
adc
daa
sbb
inc
mov
sti
mov
sbb
outsl
pop
movsl
nop
inc
push
testb
ds
movsb
jbe
cmp
xor
mov
jb
dec
xor
mov
xor
int3
jp
mov
loopne
pop
in
fs
cwtl
shll
xchg
cmc
insb
in
push
add
push
jbe
mov
jo
mov
daa
imul
outsl
xor
imul
lds
push
inc
imul
icebp
outsl
add
ljmp
lcall
into
loop
rolb
fisttps
fwait
sub
es
pop
pusha
hlt
adc
mov
leave
inc
stos
frstor
pop
or
mov
fwait
jbe
outsb
daa
xor
ret
push
jecxz
push
cld
mov
lea
fnsave
enter
int
jb
jmp
sti
rcrl
and
das
jle
call
test
sub
and
add
dec
cs
or
dec
pop
lds
mov
sub
mov
jl
xor
daa
mov
mov
pop
sti
fadd
cs
adc
mov
in
orb
sub
xchg
cmc
pop
repnz
mov
inc
inc
xchg
fdivr
test
and
add
lock
fcmovnbe
jo
push
push
jns
in
pop
sub
add
add
push
bound
stc
fcmovu
jmp
out
mov
xlat
push
xchg
test
jge
cwtl
pushl
ds
nop
sarl
sbb
into
mov
or
btr
mov
ror
or
cltd
and
test
pop
lcall
cmovle
push
dec
aaa
inc
dec
fs
add
inc
sbb
sbb
mov
popf
xchg
mov
inc
sbb
lods
and
stos
in
xor
inc
arpl
cmp
iret
testl
rcl
add
lods
repnz
sbb
out
jg
inc
adc
repz
sbb
pop
sub
dec
mov
xor
cmp
dec
cs
hlt
push
jecxz
movsl
jmp
jl
fisttps
aam
mov
lret
int3
in
jle
lea
lock
iret
mov
mov
in
jg
in
jns
xchg
setae
and
pop
jg
sbb
sbb
mov
dec
inc
dec
cltd
xor
stc
jnp
push
sti
lea
push
mov
filds
ja
push
shrb
hlt
xchg
cmp
jno
mov
sub
gs
cmc
popa
test
pop
inc
jmp
into
sub
pusha
das
mov
repz
cmp
aad
dec
push
mov
mov
mov
mov
pop
rcrb
mov
pop
in
shrl
into
je
xchg
or
outsl
jle
daa
fadds
sub
mov
adc
daa
sbb
repnz
xor
push
push
xor
fstpl
cmp
insb
and
add
rorl
test
ret
dec
movsl
mov
adc
inc
pop
out
mov
fbstp
insb
mov
insb
push
out
shll
nop
enter
and
xchg
inc
pop
jno
les
xor
pop
test
mov
mov
arpl
test
fwait
dec
mov
xor
jmp
std
pop
pop
imul
sub
cwtl
jg
fpatan
arpl
add
xchg
fs
pusha
ds
push
jb
into
pop
mov
repnz
addb
mov
mov
aaa
jl
push
fistpll
stos
test
out
arpl
hlt
sti
pop
dec
jg
sahf
and
stos
inc
ss
mov
and
push
cmp
fldl
ljmp
arpl
add
sbb
cmp
adc
add
rol
popf
daa
lods
iret
mov
push
cmc
mov
out
cli
test
dec
in
dec
aas
aad
jae
imul
cmpsl
cld
aam
jp
sub
or
mov
jno
add
dec
dec
xor
call
decl
aaa
adc
push
jl
add
xchg
adc
sbb
imul
aad
xorb
and
dec
rep
mov
cmp
push
pop
leave
out
test
mov
dec
push
push
mov
inc
loopne
rorb
es
filds
jle
mov
mov
lret
jbe
movsl
movsb
pop
loop
xchg
or
lods
mov
aaa
cmp
repz
jecxz
mov
pop
bound
xchg
jle
mov
jmp
and
repnz
sbb
adc
int
or
adc
inc
xchg
lods
cmc
rolb
arpl
cwtl
xor
iret
fadds
add
int3
mov
mov
cltd
lahf
mov
lods
pop
outsb
push
push
and
pop
test
mov
xchg
cmp
das
inc
sub
dec
rolb
incb
ret
outsl
fs
push
jle
cli
mov
les
push
addr16
mov
out
or
xor
mov
ret
mov
mov
into
xchg
adc
imul
pop
dec
out
pop
imul
push
test
sbb
cmpsb
and
stos
xchg
xor
lret
les
pop
scas
icebp
mov
in
jbe
leave
jg
sub
xchg
sarb
lcall
lcall
das
push
out
into
cli
jmp
fldenv
mov
imul
inc
inc
push
lock
cmp
mull
jns
dec
inc
xchg
mov
dec
xor
stc
jmp
popa
adc
aam
adc
xchg
dec
pop
insb
imul
xchg
push
popa
inc
scas
enter
mov
cmc
ljmp
pop
popf
les
xor
sub
icebp
je
sub
mov
fidivs
cmpsl
int
push
pushf
sub
mov
ret
insl
pop
inc
xor
adc
inc
mov
int3
sahf
inc
fcmovne
push
fsubrs
mov
mov
jae
seta
pop
or
leave
sub
lret
push
imul
stos
inc
sahf
out
scas
xchg
jle
daa
popa
ficoml
xlat
and
jns
dec
xchg
insl
inc
sahf
lret
popf
xlat
js
xor
test
push
inc
xchg
std
jae
sub
pop
stos
ret
stc
xchg
out
andb
inc
cld
mov
sahf
sub
popa
jg
xchg
imull
repz
ficoms
movsb
or
xorb
stos
test
fadd
inc
leave
lds
push
test
cmp
pop
add
ss
push
and
mov
in
call
and
iret
stc
push
outsl
mov
push
jmp
sub
mov
add
sbb
sbb
push
dec
pop
mov
sub
in
cmp
xchg
loope
jecxz
cmp
lock
mov
jg
shrb
fistps
cmp
mov
jne
insb
loop
push
push
jp
jo
loopne
and
popf
cld
fbstp
scas
lock
dec
mov
mov
pop
lods
repnz
js
mov
in
rorb
mov
cmp
inc
fcoml
inc
pop
daa
sub
add
jnp
jnp
cltd
popf
shrl
daa
fs
lahf
sub
fwait
and
sub
dec
in
popf
int
cmp
cmpsb
outsb
pop
xchg
out
inc
or
push
xorl
pop
dec
and
cwtl
add
js
add
js
sub
out
sahf
mov
lret
outsl
int3
xchg
sahf
test
jae
sub
adc
pop
dec
sub
mov
fists
roll
cmpsl
xchg
test
stc
shlb
mov
jb
jmp
icebp
xor
repnz
lret
jne
daa
cmpsb
ljmp
sbb
ret
mov
out
mov
fistpl
icebp
stos
lea
xchg
mov
outsl
int3
sub
pop
cmc
cmp
aam
shll
popl
test
jg
sahf
cs
adc
cmc
and
xchg
popf
xchg
push
fbld
jmp
repz
scas
jae
mov
xchg
ror
add
pop
enter
lahf
call
inc
icebp
mov
mov
clc
imul
mov
cmc
or
in
mov
iret
int
gs
push
mov
mov
pop
es
lock
mov
leave
sbb
movsb
and
cli
popa
xchg
pop
cmpb
in
or
or
jmp
cmp
adc
out
xchg
fcompl
out
rcll
outsb
cmp
in
or
jb
sahf
or
dec
pop
mov
lcall
and
int3
out
pop
js
and
pop
mov
push
cld
ret
add
xchg
std
test
or
push
push
add
lret
lea
mov
push
lods
and
dec
test
jmp
mov
or
bound
shl
popa
test
nop
and
cmc
popa
or
leave
inc
pop
add
scas
push
arpl
mov
lret
push
andb
pop
rcrb
push
push
cmpsl
adc
pop
or
push
lret
sbb
das
cmp
pop
mov
xchg
test
mov
lret
push
pop
xor
aaa
dec
mov
cmpb
aaa
dec
jnp
jae
ret
mov
xor
lcall
pop
mov
mov
jmp
lods
and
stos
xor
rolb
int
les
jmp
data16
push
inc
inc
cwtl
das
dec
dec
jl
push
cmp
movsl
lret
sbb
arpl
and
xor
jb
hlt
mov
adc
pop
mov
aam
stos
cmpsb
int3
mov
mov
stos
scas
and
inc
in
mov
xor
add
mov
push
data16
outsl
mov
stc
push
mov
and
ss
and
imulb
lcall
sub
lcall
iret
xor
pop
aam
cmc
repnz
fcoms
pushf
mov
and
jle
mov
push
cmp
in
fists
xchg
push
subb
mov
xlat
std
mov
mov
or
stc
lahf
sub
cmpsl
sbb
mov
je
loop
inc
addr16
lcall
add
cmpsb
push
jp
lock
cld
imul
fisubrl
outsb
loopne
and
jo
pop
les
cli
je
pop
outsb
shrl
clc
inc
mov
xchg
lods
push
nop
rcrl
mov
cltd
int
shll
cmpsl
mov
jne
lcall
inc
cmp
cmpsl
repnz
adc
jl
cmp
ficoms
push
mov
adc
mov
adc
or
lods
cmp
ss
lock
arpl
pop
mov
testl
fbstp
fnstsw
cld
cmpsb
call
insb
cli
mov
ja
pop
shll
push
pop
push
cld
jae
fstpl
jmp
jno
adc
int3
xlat
cmp
cli
cmpsb
mov
and
call
adcb
gs
add
jae
mov
jbe
adc
ja
das
sti
adc
loopne
xchg
xchg
outsb
push
loop
aas
loopne
jl
or
ror
inc
aam
movsb
xor
sub
repz
js
push
test
adcb
fiadds
xlat
jecxz
les
and
out
cs
push
add
cwtl
test
inc
xor
push
es
cmp
ljmp
fwait
mov
cmp
mov
ret
push
movsl
cld
fwait
xchg
push
mov
mov
ss
mov
nop
ds
test
mov
movsb
xchg
pop
and
or
xchg
jnp
pop
repz
dec
insb
out
cmp
jbe
repz
sti
ja
mov
xchg
addl
ret
add
int3
aad
scas
insl
pop
sahf
movsb
and
and
lcall
xlat
test
lock
fiadds
mov
shrl
dec
xchg
pop
clc
jbe
mov
sbb
or
sub
pop
test
lahf
mov
mov
inc
adc
popf
orl
mov
popa
jns
lea
cmp
inc
and
movsb
cli
in
mov
xor
popl
sub
pop
mov
sbb
xchg
sti
jle
fcoml
mov
in
in
mov
aas
mov
pop
xchg
push
adc
fwait
mov
sub
loop
loope
and
andl
xchg
mov
int
popa
imul
test
dec
aaa
mov
adc
pop
add
loope
out
adc
jecxz
loop
adcl
xor
sub
stos
call
push
fwait
roll
and
xchg
leave
ror
int3
jg
movsl
pop
push
dec
push
lcall
rcrl
add
ficoms
sbb
cmp
aas
ja
cmpsb
xlat
out
dec
scas
test
jmp
orb
js
jge
add
add
std
xor
in
cmpsb
pop
icebp
inc
inc
adc
mov
inc
movsb
in
cltd
movsl
xor
jne
adc
outsl
jg
filds
insl
pusha
bswap
cs
push
shrb
push
in
pop
rcr
mov
mov
popa
cmc
push
pop
div
lods
sti
push
int
int3
or
push
cmp
mov
enter
enter
rcll
dec
mov
jns
inc
xchg
push
mov
mov
jb
jmp
push
jmp
xor
call
xor
les
out
in
pop
or
out
cmpsl
pop
icebp
fwait
lds
scas
pop
daa
pop
das
inc
test
jg
mov
cmpsb
cs
out
nop
xor
fucomp
lods
jmp
leave
sbb
adc
inc
icebp
pop
dec
push
mov
std
push
jne
sbb
jecxz
adc
in
cmp
pop
cs
mov
mov
cmp
outsb
mov
fidivl
push
adc
in
lock
inc
mov
loop
aas
adc
sbb
lods
pop
cs
stc
inc
xor
cli
xor
push
hlt
sub
lods
enter
in
sbb
xor
in
push
iret
mov
pop
outsl
loopne
push
aad
pop
loope
mov
jg
fsubrs
imul
lds
loope,pt
insb
adc
aaa
and
xchg
in
and
shrb
inc
xor
inc
mov
cmp
sbb
mov
jle
push
out
sub
sub
mov
mov
rcrb
jle
mov
out
movsb
mov
add
rclb
dec
imul
dec
add
sbb
jecxz
inc
movb
int3
mov
out
push
or
mov
push
in
cltd
lcall
ljmp
iret
int3
mov
jne
mov
push
push
fsts
int
or
es
or
inc
or
cld
jnp
sbb
pusha
in
pushf
flds
jbe
inc
mov
and
and
sub
push
push
cmp
push
arpl
dec
push
lods
fwait
mov
xor
test
push
scas
jns
inc
push
rclb
and
popf
inc
cmp
cltd
lods
jnp
stc
lret
jg
xor
adc
lahf
clc
mov
mov
je
mov
cmc
adc
fdivr
mov
pusha
sbbb
cmpl
insb
int
dec
js
das
lahf
push
hlt
jnp
dec
rorl
loop
lock
sbb
pop
mov
sub
mov
lods
pushf
cmp
pop
mov
pop
call
mov
and
into
xchg
out
jo
sub
cli
rolb
inc
dec
mov
aas
shlb
inc
pop
adc
inc
pushf
imul
sbb
mov
fists
les
push
mov
ss
dec
jnp
or
scas
imul
imul
mov
test
incb
mov
sbb
add
jle
dec
cs
dec
fs
pop
push
leave
les
pop
adc
fbstp
fidivl
cmp
push
push
aad
lea
mov
or
mov
dec
mov
xchg
dec
in
adc
and
ja
mov
cld
pop
pop
mov
popf
or
call
and
stos
sbb
icebp
in
add
fcompl
mull
push
js
mov
pop
ret
das
mov
lds
add
test
outsb
mov
roll
pop
mov
into
dec
iret
fildll
push
int
lea
sarb
rol
mov
xor
mov
pusha
sbb
out
pop
int
xor
repz
dec
in
jo
pop
lcall
cmp
xchg
push
stos
add
cmpsl
test
popa
outsl
cmp
adc
mov
add
hlt
in
daa
fs
addr16
sbb
test
loopne
xor
ja
fldl
js
cltd
mov
xchg
insl
adc
std
push
mov
jae
out
subb
sahf
pop
data16
loope
push
fsubrs
mov
mov
out
lcall
outsl
out
fs
pop
cmpsb
and
outsl
in
jle
jo
ja
add
or
adc
pop
mov
and
push
sub
std
insb
repz
xor
xchg
mov
out
xchg
push
sarb
mov
and
mov
jmp
and
mov
pop
lret
fsubs
iret
xor
and
stc
and
stos
adc
sub
stos
push
les
lret
cs
sub
mov
xor
cmp
adc
cwtl
jbe
mov
daa
xor
aad
outsb
xor
nop
lret
sti
dec
aad
pop
mov
mov
repnz
mov
sub
in
lcall
dec
iret
pop
sbb
roll
lea
sbbb
and
mov
dec
inc
rcll
mov
jl
out
add
adc
mov
pop
push
push
sub
dec
pop
jne
js
pop
loop
cmpsl
pop
and
mov
addr16
jnp
popf
jae
inc
in
addr16
jns
xchg
jb
mov
cmpsl
insl
adc
out
imul
mov
popf
inc
mov
test
push
fnstsw
push
push
shlb
push
xor
cmp
inc
mov
xor
in
lock
shl
jg
sub
jnp
inc
pop
lahf
jno
inc
aad
ficoms
iret
pop
fsubs
gs
std
add
and
andb
mov
jl
ror
pop
iret
xor
inc
inc
pop
rorb
xor
pop
sbb
sahf
mov
jae
xlat
mov
lea
xchg
xchg
mov
fld
ja
scas
jle
sub
jle
and
cmpsb
lret
out
je
ret
call
repnz
lock
inc
jno
mov
adc
add
orl
pop
push
dec
stc
fldcw
ret
mov
ret
mov
mov
cld
test
push
test
fisubrs
test
push
ss
xchg
sub
scas
out
jle
mov
xchg
mov
aaa
rcl
sub
into
cmp
jle
mov
std
je
xchg
gs
lret
mov
nop
outsb
sbb
cmp
push
arpl
ficomps
icebp
out
pushf
test
pop
test
add
cmpsb
das
aas
and
lcall
out
inc
mov
xchg
or
shlb
cld
outsb
pop
leave
out
lret
rolb
or
mov
lods
ret
addr16
xor
sbb
in
mov
add
adcb
mov
mov
cmp
push
sbb
hlt
cmpsl
mov
inc
pop
lret
xor
push
dec
sbb
mov
dec
add
movsl
inc
insl
xor
popa
inc
movsl
or
sub
sti
loopne
xchg
daa
mov
push
jmp
mov
repnz
jle
cmp
lret
jns
or
cmp
lret
jp
jmp
push
cmc
cmp
push
pop
stos
mov
jge
adc
in
adc
divl
rolb
mov
loope
or
inc
lock
inc
adc
testl
cmp
inc
aam
adc
ret
and
inc
outsb
sbb
lea
mov
xchg
mov
sub
daa
test
jge
dec
mov
inc
mov
or
adc
inc
mov
xor
aaa
push
rorl
mov
bound
pushf
mov
or
in
sub
mov
adc
jl
lret
mov
jae
inc
pusha
movsl
test
orl
adc
xor
mov
test
loope
in
lods
cmp
aad
fldenv
iret
psrlw
iret
xchg
stos
and
pop
dec
jnp
pop
inc
hlt
adc
mov
and
pop
nop
sub
adc
gs
mov
jae
bound
and
sbb
lret
mov
lret
or
scas
decb
cmc
xor
inc
inc
sub
mov
int
inc
pop
push
sahf
nop
mov
int
pop
pop
xor
idivl
rolb
or
sbb
inc
mov
inc
sub
mov
enter
sbb
loop
fwait
pop
out
movsb
jmp
sar
ljmp
shll
mov
push
gs
push
xor
push
mov
test
sbb
dec
into
lret
cmp
xlat
out
pop
push
out
mov
jb
rorl
sbb
or
pop
dec
ja
stos
dec
stos
push
fdivrp
call
push
push
pop
inc
clc
xchg
mov
lea
out
inc
clc
xchg
nop
lods
lods
adc
dec
daa
and
adc
dec
loopne
adc
mov
test
and
mov
inc
xchg
imul
mov
test
inc
push
xchg
jecxz,pn
scas
int
push
push
loope
mov
sbbb
push
bound
test
call
inc
sbb
xchg
test
pop
stos
insl
lods
sub
jg
icebp
inc
sbb
mov
andl
imul
out
into
push
xor
push
in
jns
and
stos
leave
idivl
and
jns
add
gs
cltd
ja
es
and
clc
stos
not
arpl
push
inc
and
pop
out
js
je
and
test
mov
rcll
pop
jnp
sbb
cld
cmp
out
xchg
imul
cmpl
sub
jbe
jmp
fcmovnb
xor
pop
mov
jge
scas
sahf
mov
cmc
inc
lods
lcall
mov
pop
sahf
push
mov
lahf
fidivl
enter
aam
pop
mov
xor
adc
es
loope
pushf
lock
xlat
pop
aaa
mov
and
cmpsl
es
adc
iret
mov
in
fnstenv
sub
lods
out
stos
pop
xchg
ljmp
sub
mov
mov
push
lcall
or
jl
sub
cs
cmp
scas
imul
dec
push
xor
jmp
cli
insl
push
mov
int
data16
pop
decl
inc
cld
cli
movsb
jns
ds
mov
cmp
fnstsw
cmp
movl
sub
lods
push
inc
jne
test
bswap
jge
pop
sbb
pop
mov
jns
dec
pop
adc
push
call
jnp
das
mov
test
sahf
sbb
cmp
dec
insb
fnstenv
mov
dec
in
outsb
inc
imul
aad
dec
adc
adc
or
sub
shrl
clc
jnp
inc
ds
dec
add
out
inc
cmc
cmp
pop
mov
negb
sbb
outsb
insb
jmp
xchg
add
scas
enter
sti
jne
aam
jmp
orl
jge
fwait
adcb
fistpl
push
sub
pop
jle
aad
jns
mov
mov
scas
dec
leave
inc
xchg
dec
sti
add
andl
mov
enter
push
ss
sub
lds
pushf
mov
in
stos
loopne
clc
fisttps
in
in
cmp
xor
dec
out
lret
iret
jg
ljmp
inc
les
adc
xor
or
mov
cmpsl
xor
push
cmp
int3
scas
cltd
adc
es
cs
daa
imul
pop
sub
cltd
inc
pop
push
cli
lahf
xor
cmp
push
int
shl
out
iret
mov
in
lods
imul
cmp
add
xchg
inc
jge
in
in
pop
inc
dec
test
testb
nop
jecxz
xchg
pop
xor
add
repz
xchg
push
imul
adc
push
mov
les
into
pop
xchg
lds
lret
rcr
imul
adc
inc
cmp
push
push
cmp
lds
loopne
adc
lock
sti
mov
jns
jns
xlat
dec
lds
push
ss
ficomps
test
loopne
jns
shll
popa
lods
rorb
outsb
mov
ljmp
sbb
lods
push
mov
xchg
pop
fadd
cmp
fdivrs
mov
mov
mov
aam
mov
inc
mov
dec
lods
fildl
cmc
jae
adc
push
pop
mov
dec
and
cmp
dec
arpl
cmpl
mov
cmpsl
cltd
je
sti
add
shll
aad
lret
xlat
insl
push
ror
scas
or
in
jle
sti
cmc
in
popf
mov
jle
jmp
das
sub
cmp
in
cmp
lret
adc
inc
mov
sbb
subb
jge
test
loop
pop
enter
clc
cmp
add
sub
scas
mov
repz
pushl
movsb
jae
adc
lahf
fidivrl
adc
lret
lret
xor
psrld
xchg
mov
push
movsb
cld
aas
lock
inc
jb
xchg
or
push
add
or
xchg
out
shlb
push
pop
push
testl
or
inc
mov
sbb
or
jl
int3
repz
mov
pop
mov
sbb
out
dec
iret
in
aaa
shl
sbb
pusha
cltd
sbbb
icebp
xchg
sti
shrl
sub
sti
test
add
ret
pushf
mov
mov
out
push
sbb
mov
and
testl
push
aam
sub
lock
hlt
lahf
loopne
ds
mov
imul
loopne
mov
push
dec
pushl
test
push
sarb
inc
dec
insl
xchg
lcall
xchg
pop
jae
aad
mov
push
test
ds
jmp
repnz
jne
or
fisubs
sub
jb
sbb
mov
inc
push
cmp
xchg
insl
fisubrl
pop
into
inc
sar
adc
adc
adc
xor
cmp
mov
daa
shlb
ljmp
jae
push
pop
js
pop
dec
dec
push
pop
out
fistpl
adc
xchg
shrl
xlat
pop
lods
shll
lcall
mov
aas
fs
or
aaa
xlat
jns
insl
xchg
lret
out
push
mov
pop
addl
orw
stos
in
sbbb
dec
adc
hlt
push
mov
outsb
fwait
mov
repz
in
push
xor
dec
jg
sub
and
jmp
and
ja
fldenv
mov
sbb
sbb
cmpsb
ss
sbb
lcall
jae
loopne
jmp
add
call
in
mov
lods
pop
adc
rclb
lret
cmp
in
dec
jecxz
cs
push
test
cli
lret
les
mov
mov
jmp
aam
cmp
lahf
movb
push
and
ret
outsb
fcmovb
push
fisubrl
sub
int3
lock
dec
push
adc
pop
cltd
ficomps
pop
push
xchg
scas
jae
mov
xor
in
cmp
outsb
scas
push
je
and
lock
add
xchg
dec
lods
jne
mov
or
ret
add
and
popa
mov
repz
movsl
jl
in
rorb
mov
dec
add
add
xchg
mov
xchg
adc
into
int3
mov
push
xchg
lods
pushf
jno
jl
movsl
inc
test
mov
mov
pop
cwtl
mov
insb
sbb
cmc
push
inc
push
sub
cld
adc
inc
pop
inc
lret
sti
pop
sahf
lea
stos
test
aaa
xor
repz
pop
pop
in
push
in
jo
das
js
push
ljmp
jae
sub
jmp
xchg
xchg
mov
out
rclb
mov
loopne
xchg
out
test
xchg
shl
rcl
adc
fistps
and
mov
cli
or
jbe
out
dec
roll
shl
xchg
lods
nop
das
jno
sbb
xor
inc
jl
cli
sbb
fdivl
xlat
stc
lods
sbb
jne
into
divb
push
mov
pop
lahf
dec
adc
sbbb
int
cmp
cwtl
lret
test
icebp
and
mov
cmp
and
add
xchg
sub
js
lods
jg
xchg
add
sub
push
and
jge
fistpll
mov
jle
ss
hlt
sbb
daa
inc
pop
xchg
lds
mov
jnp
out
lods
inc
popa
inc
pusha
and
dec
add
push
push
mov
dec
out
push
cmp
xor
cmpsl
cmp
cwtl
pop
repnz
lret
sub
xor
mov
lcall
out
lret
mov
leave
ftst
inc
sbb
or
cmpsl
ljmp
sbb
inc
sub
inc
cld
popf
mov
scas
dec
push
idivb
subb
dec
push
sbb
iret
shrb
mov
call
push
in
xor
push
pushf
pushf
je
sbb
jb
cmpsl
dec
push
or
mov
cmc
dec
or
xor
test
push
test
stos
ss
les
movsb
mov
jmp
mov
pop
cltd
and
and
cld
xchg
sub
cs
sbb
mov
sub
ja
adc
jge
ds
dec
jecxz
cmp
jp
push
xchg
gs
rcl
insb
lods
imull
or
pop
js
rcrl
jbe
in
repz
mov
xchg
add
int3
mov
jl
jl
jecxz
jle
push
push
rclb
and
sbb
mov
lcall
int3
je
or
and
andl
mov
fsubs
push
pop
ret
or
fwait
mov
jno
xchg
jno
dec
xchg
dec
cmp
sub
into
mov
in
or
cmp
jmp
cld
push
lods
sbb
lahf
jle
loopne
and
add
loop
movsb
mov
dec
jnp
out
pop
push
dec
cwtl
fld
and
cmp
bound
xchg
repz
ret
mov
and
jecxz
lret
aad
add
sub
movsb
jmp
test
xchg
data16
dec
sahf
mov
stos
mov
frstor
test
pushf
adcb
adc
mov
in
xchg
pop
mov
push
fnstcw
xor
lahf
cmp
mov
sub
jno
adc
js
rclb
cmp
pop
daa
icebp
jp
pop
sbb
pop
int
xor
xchg
lods
shll
enter
jmp
cmp
jnp
aaa
insl
std
cmp
popf
xchg
out
mov
stos
mov
ret
stc
and
out
or
and
jne
in
cmc
sub
pop
outsb
cwtl
in
cmp
pop
inc
push
out
mov
dec
mov
in
test
repnz
aas
mov
rol
fidivrs
je
push
add
les
cmp
sub
enter
xchg
std
faddp
shlb
lds
and
mov
cmp
mov
push
arpl
jp
test
inc
xor
imul
lret
jmp
test
aas
xchg
pushl
or
cmp
nop
stc
enter
push
sbb
int
ljmp
outsb
jo
loope
in
jle
mov
mov
xor
scas
das
and
aaa
mov
sub
mov
pusha
or
sbb
pop
mov
test
lock
mov
imul
ficomps
es
add
cmp
and
int3
int
icebp
cmpsb
iret
jl
and
das
es
cltd
sbb
mov
inc
loop
lcall
movups
lea
mov
jae
dec
fldt
mov
inc
jbe
adc
pop
imul
mov
scas
icebp
xlat
lret
cs
cmp
mov
push
roll
fldenv
pusha
nop
cltd
std
mov
sub
jno
mov
sbb
dec
and
mov
inc
sub
jne
push
aaa
addr16
push
jp
mov
aaa
lock
fimull
call
out
shlb
mov
xchg
xor
fisttpl
and
lret
lods
push
fbld
pop
pop
das
cmpsl
cld
orl
pop
pop
je
fisttpl
loopne
sbb
ret
xchg
xor
inc
insb
push
jmp
pop
mov
jmp
mov
push
add
les
sarb
inc
fwait
adc
out
aaa
mov
xchg
push
fidivrl
stos
xchg
outsl
inc
mov
loopne
and
cld
adc
lea
xlat
mov
add
and
and
cmc
xor
shl
lock
mov
stos
jae
adc
int3
adc
xchg
xor
bound
enter
shlb
mov
inc
and
and
jmp
in
ds
mov
pop
push
ds
sti
out
adc
enter
lret
fsubl
add
sub
xchg
or
jl
lods
arpl
inc
mov
and
dec
popf
fs
inc
out
js
xor
push
push
in
push
and
pop
mov
inc
push
insl
shll
cmc
in
pop
test
arpl
mov
shlb
or
cmp
xor
test
mov
scas
int3
pop
mov
jl
test
push
test
testb
outsl
fcmovb
jo
pop
jno
xlat
xchg
xchg
xchg
enter
pop
mov
ja
cmc
and
ljmp
inc
ficoms
sub
inc
jo,pt
fcmovu
adc
mov
pop
cmp
jle
cld
sub
ret
push
and
pop
stos
sub
frstor
int
add
out
push
inc
mov
cld
rolb
or
jns
int3
iret
xchg
xchg
aaa
testl
mov
imul
ret
inc
inc
mov
mov
xchg
imul
ficoms
sbb
inc
xor
ret
mov
lahf
insb
push
cmp
dec
out
jns
push
adc
mov
aaa
xchg
stos
movsl
insb
inc
arpl
iret
sahf
sbb
jne
ror
pop
fldt
inc
pusha
fcompl
push
sbb
scas
lods
jecxz
nop
scas
or
xor
inc
movsl
outsb
mov
shlb
scas
and
pop
sbb
add
mov
sahf
and
in
push
cmp
hlt
enter
faddl
js
sub
rolb
xor
adc
fxrstor
loope
cltd
dec
outsl
pop
pop
cmpsb
jnp
filds
subb
fstp
popf
inc
xor
or
sbb
popf
mov
dec
fnstsw
jb
stc
lret
mov
add
pushl
cmp
inc
daa
and
or
dec
or
or
js
xchg
ss
lahf
mov
stc
push
arpl
sub
cmp
addr16
xchg
enter
inc
aas
jg
and
je
sahf
xchg
mov
pop
loopne
insl
xchg
ljmp
mull
inc
das
and
int3
push
inc
bound
add
mov
popa
xchg
pop
nop
add
imul
inc
mov
cli
daa
cli
cmp
and
xlat
and
cmp
lds
loopne
jge
fbstp
mov
test
mov
mov
mov
test
mov
rcrb
out
mov
xlat
leave
mov
dec
fstpl
push
push
repz
jmp
xchg
add
sti
imul
cmp
das
cmc
jnp
ljmp
sti
mov
adc
pop
and
mov
mov
loop
xor
and
inc
stos
mov
and
pop
xor
mov
std
lods
or
out
addr16
sahf
stc
cmp
xor
xlat
xlat
lret
pop
push
mov
mov
idivb
mov
in
xchg
adc
popa
xchg
or
cs
test
and
xchg
jg
lods
sub
xor
fwait
inc
stos
mov
push
add
aam
add
jg
shl
mov
ljmp
sbb
pop
cmp
push
mov
mov
jne
push
inc
mov
outsl
xchg
push
daa
push
in
gs
jo
mov
imul
mov
mov
jecxz
in
addr16
js
scas
lds
inc
lods
test
pop
cmp
sarb
aad
mov
pop
or
testl
jmp
sub
mov
or
xor
sbb
sarb
lds
lea
ss
jno
outsb
adc
jbe
stc
push
hlt
leave
aas
adc
xchg
jnp
inc
jmp
xchg
gs
dec
ljmp
icebp
cmp
and
sbb
std
stc
decl
enter
push
cs
adc
test
cmp
fs
lret
sub
in
lock
loope
jle
scas
sbb
jp
or
movl
dec
mov
add
lea
aam
add
fsubrl
aad
inc
aaa
das
unpckhps
jge
repnz
mov
outsb
mov
mov
sub
cwtl
test
pop
xor
sub
dec
jne
jmp
ds
idivb
inc
dec
adc
mov
stos
and
pop
fdivl
clc
pop
pop
aaa
push
and
or
xchg
hlt
push
push
sub
cmpsb
xchg
not
or
test
mov
mov
dec
sbb
mov
into
xor
xchg
pusha
inc
mov
cwtl
icebp
scas
mov
mov
loop
jmp
popf
xor
adcb
sbb
aam
push
adc
icebp
ret
xor
inc
push
dec
sub
add
pop
ja
adc
sub
mov
lret
pop
loopne
push
fucom
in
mov
jmp
mov
pusha
out
push
lds
push
xor
ret
enter
pop
mov
push
cs
pop
cmp
js
fisubrs
rclb
cli
daa
imul
int
mov
inc
sbb
ror
mov
or
sbb
shrl
xor
popf
push
push
dec
xor
push
add
jl
insb
cmpsl
leave
dec
ss
stc
mov
leave
push
cmovl
loope
sbb
out
mov
fstpt
add
jl
clc
sbb
mov
mov
mov
xchg
xchg
inc
pop
sarl
into
sbb
cmp
sub
adc
xchg
out
xor
insl
idivl
sub
mov
push
fwait
lret
push
ljmp
lret
sub
xchg
ret
fistpl
xor
mov
mulb
fldt
adc
cmc
test
mov
dec
mov
push
test
mov
xlat
inc
lret
add
lcall
bound
push
inc
jl
hlt
pushl
add
fiadds
jns
pop
cmpsl
cld
lods
fcoml
push
mov
adcb
xor
lea
push
bound
add
mov
xchg
mov
lods
push
call
xchg
sbb
adc
cmp
cmp
add
mov
addl
mov
cmpsb
pop
sub
pop
push
int3
mov
mov
scas
adc
adc
inc
js
lods
xchg
jecxz
lea
daa
dec
test
enter
int3
cmp
hlt
ja
xchg
cmp
out
fs
adc
xchg
lods
daa
aaa
pop
jge
mov
loopne
loopne
jl
lret
dec
leave
repnz
cmp
aas
cmp
out
inc
gs
cmc
rorb
pop
mov
sti
sahf
ret
addr16
in
sub
pop
les
sbb
gs
mov
xlat
pop
pop
fxam
iret
mov
jns
or
mov
in
cmp
or
enter
jl
sbb
cli
dec
sub
dec
inc
xchg
dec
or
addr16
jns
rcrl
mov
cmp
jl
jae
and
xchg
or
jp
daa
dec
leave
inc
cmp
sub
popa
lods
push
mov
sbb
cwtl
push
push
add
mov
mov
jbe
out
test
add
ja
sbb
xor
xchg
pop
jns
sub
movsb
jne
xchg
adc
out
insl
sbb
xor
inc
lds
sbb
pop
mov
call
sub
mov
inc
repnz
hlt
icebp
adc
mov
ds
push
fmull
ss
add
out
std
shl
pushf
neg
adc
lods
dec
or
sti
mov
push
jg
inc
push
loope
loop
sub
pop
sbb
jns
xorb
fistl
jle
xchg
or
imul
psubsb
cwtl
insl
ret
mov
or
xchg
mov
jae
hlt
popa
cmp
push
inc
cmp
mov
inc
test
inc
jb
sahf
into
pop
dec
push
xchg
jnp
adc
int3
dec
scas
push
outsb
int3
push
dec
adc
mov
xchg
dec
fistps
sbb
cmp
into
pushf
aas
in
inc
cmp
cli
repz
add
repnz
push
sub
push
cmp
shll
ja
fidivrs
mov
jg
push
pop
inc
out
mov
daa
sbb
and
push
xchg
scas
loope
sub
cmp
jae
pusha
in
daa
test
mov
stos
sub
and
ljmp
pop
lds
push
xor
cwtl
cwtl
or
push
push
mov
jecxz
adc
xchg
fmul
std
call
push
xchg
jne
xchg
outsb
lea
cmp
ja
jge
movl
inc
mov
repz
pslld
xor
cmp
mov
jns
mov
cmp
pop
nop
movsl
stc
push
mov
outsb
mov
pusha
xchg
fisubrl
jbe
sub
sbb
sub
mov
sbb
cwtl
inc
push
aam
or
add
enter
mov
sub
divb
gs
sahf
adc
dec
adc
not
imul
mov
push
push
pop
pop
pop
mov
stc
je
inc
inc
addr16
imul
js
inc
fwait
adc
xor
push
or
movsl
shrb
sbb
addr16
sbb
shrb
mov
adc
test
aad
dec
add
xchg
out
lock
fwait
cmp
ret
mov
or
mov
dec
mov
mov
js
xchg
sbb
out
sub
push
test
rcll
inc
jle
xchg
or
xlat
rsm
incl
cmpsl
int
inc
inc
mov
or
scas
lock
addr16
and
int3
push
jo
push
sbb
xor
sbb
adc
outsb
sub
inc
mov
ljmp
and
std
dec
out
out
fidivrl
push
add
pop
xor
mov
fiaddl
push
jno
sub
fimull
and
sub
mov
xor
mov
dec
in
inc
dec
dec
repnz
addl
mov
ljmp
push
cmovae
movsl
pushw
imul
sub
out
sahf
call
adc
repnz
push
and
cmp
or
divb
add
pop
jne
inc
rcll
push
jo
lods
insb
push
hlt
addr16
sbb
bswap
mov
imul
sti
aaa
sub
pop
jecxz
int
sub
jbe
out
daa
pop
push
out
aas
push
enter
jo
popf
test
bound
mov
sbbb
cmp
jl
sub
lret
clc
add
arpl
or
ss
subl
add
jg
js
and
je
addl
sbb
cltd
lods
cmp
sbb
add
jp
cwtl
xchg
roll
and
hlt
fstpl
cmp
add
lock
out
imul
addr16
mov
dec
xor
xchg
dec
mov
cmp
xlat
rol
scas
xchg
aad
adcb
fnstenv
jns
mov
dec
lcall
cld
mov
imul
xchg
fwait
adc
or
xor
jno
jb
pop
sub
stc
jg
fsts
addr16
fstps
push
popf
loope
in
inc
test
in
add
sub
adc
fmul
mov
test
inc
cmp
push
jo
call
das
clc
cmc
scas
jge
ja
imul
sbb
xchg
test
sbb
mov
add
push
xchg
pop
in
out
push
stos
cs
jp
push
int
nop
into
push
cmc
pop
stos
jge
cmpsb
in
stos
jmp
in
rorb
adc
jecxz
lret
xor
inc
or
outsb
dec
push
or
sub
add
fiadds
jle
pop
mov
pop
mov
subb
xor
xor
mov
cmp
sub
mov
dec
xor
nop
aaa
jo
pop
dec
pop
and
inc
lds
ret
cli
sub
test
and
icebp
mov
cmc
lea
roll
rolb
adcb
or
and
cld
push
loopne
movl
aad
orl
int3
xlat
pop
adc
je
mov
bsf
enter
lea
aad
jl
pop
push
xchg
jo
inc
cs
add
clc
push
scas
call
cwtl
xchg
or
insb
pop
inc
add
push
mov
loope
sub
shlb
insb
pusha
loop
xor
mov
cltd
ficompl
pop
xor
div
mov
movaps
out
movsb
xor
aad
fidivs
or
adc
xchg
repz
das
mov
adc
insl
jns
sbb
out
mov
push
repnz
dec
dec
sub
push
push
xor
cmp
addr16
decl
sarb
push
push
ret
xchg
test
mov
xor
sti
lret
mov
mov
int3
mov
scas
cmc
inc
cmp
jno
jno
fldt
out
int3
mov
push
lcall
pop
jns
lods
sahf
jae,pn
sahf
cli
add
mov
cmp
and
adc
or
sub
and
mov
xchg
ds
xchg
pusha
and
nop
clc
add
mov
movq
scas
inc
mov
fistpl
push
movups
xor
inc
sub
jge
add
fimuls
in
push
dec
and
sub
cmp
stos
jle
inc
pop
movsb
in
repnz
test
insl
xor
movsb
cmpsb
xchg
mov
and
daa
imul
jae
xchg
sbb
imul
int3
adc
pop
insb
cmp
aam
std
sub
lret
mov
inc
or
hlt
lahf
mov
cmpsb
mov
push
std
add
inc
mov
fwait
push
das
push
xchg
xlat
fadd
popf
inc
pop
sub
mov
mov
pop
cs
inc
xor
push
and
push
push
testb
mov
mov
clc
pop
mov
sub
shr
pop
xchg
push
mov
ret
fistps
mov
mov
loop
shrl
cmpsb
push
icebp
sub
push
jmp
inc
cli
scas
pop
sbb
jns
xor
shll
in
stos
enter
push
shrb
fyl2xp1
dec
addl
andb
sbb
rolb
push
xchg
adc
push
imul
adc
and
dec
ss
mov
jg
ljmp
fidivs
mov
aad
and
clc
icebp
movsl
sbb
hlt
rcll
inc
shl
cmc
into
sub
jl
pop
xchg
dec
inc
lods
aaa
dec
clc
stos
outsl
enter
mov
ljmp
xchg
gs
daa
cmp
xlat
in
xor
fbstp
push
xor
jecxz
out
push
mov
mov
pop
in
repz
jno
shll
lods
pop
pop
out
jle
arpl
jno
xlat
sbb
push
pop
mov
aaa
lock
sub
jae
inc
add
inc
pop
mov
cmp
out
cmp
xchg
test
es
add
inc
out
call
xor
nop
scas
iret
int3
int
pushf
fwait
inc
mov
dec
mov
inc
pop
bound
adc
jl
inc
inc
les
popf
xor
inc
and
pop
push
ljmp
pop
in
sbb
sbb
mov
outsb
shlb
add
aam
stos
les
shl
jle
sub
in
int3
cltd
adc
aas
movsb
in
and
stos
fdivrs
jge
xchg
stos
les
jno
jl
or
aaa
fucomip
popf
jne
sub
movsb
pop
test
or
inc
push
inc
xchg
push
jg
xchg
decl
js
add
add
push
pop
sub
js
aam
mov
push
cmpsl
shrl
jmp
rcr
int3
jmp
push
push
jo
sbb
xchg
cltd
hlt
in
jb
jp
pop
repz
cmpl
rorb
incb
bound
or
jle
lahf
fwait
rcr
sbb
adc
cmp
add
add
mov
pop
xchg
mov
xor
sti
mov
in
rorl
hlt
cmpb
ret
pop
dec
mov
popa
push
fs
repnz
dec
mov
push
sbb
and
fidivl
adc
fdivrl
push
les
dec
xchg
jle
mull
xor
mov
loopne
mov
mov
aaa
sub
push
sti
jge
xchg
push
and
bound
fsubs
jo
mov
push
ret
cmp
mov
test
add
mov
enter
mov
sahf
movsl
imul
mov
dec
push
mov
in
cltd
icebp
pop
cmp
rclb
jnp
xchg
mull
mov
sbb
jo
sub
in
out
and
std
cs
repnz
xor
sar
aaa
cmp
cmc
mov
or
cmp
push
rorl
or
dec
push
pop
cmc
nop
adc
mov
mov
stc
loopne
sarb
push
fwait
int
lret
stos
lcall
xor
dec
sbb
jecxz
lods
xor
push
sub
stc
cmp
mov
lret
adc
mov
cmpsb
or
push
xchg
pop
ds
sbb
and
sbb
dec
out
mov
ret
and
popf
int3
fnstcw
jge
mov
outsl
adc
rolb
aam
adc
fs
push
mov
es
or
imul
fs
pop
adc
pop
inc
scas
and
bound
insl
xchg
ffree
add
lods
mov
ss
in
ucomiss
imul
jp
lock
or
adc
mov
arpl
idivl
and
fcmovne
loop
dec
jae
sbb
ljmp
je
imul
xchg
xchg
cmp
push
or
jb
je
pusha
rorb
pop
int3
das
cmp
xor
fnstenv
push
cwtl
pop
jno
pop
mov
adc
xlat
or
fidivrs
leave
sbb
xchg
pusha
ret
dec
cmp
jle
mov
outsb
adc
mov
fistpll
rcrb
push
sub
mov
popa
fisubrl
jne
setge
cli
mov
or
fiaddl
cmpsl
lahf
das
cmp
loopne
mov
xor
in
and
popa
mov
orl
rolb
enter
dec
scas
enter
out
xor
jle
popf
out
in
dec
repnz
test
mov
andb
pop
jl
je
outsb
in
push
lock
dec
jp
ss
jnp
inc
push
and
sbb
in
sub
sbb
jae
pop
out
push
mov
pusha
pop
out
sbb
mov
mov
xchg
stos
in
push
and
cs
inc
sub
push
incl
loop
pop
scas
aam
lods
movsl
dec
ss
adc
mov
ja
cmp
cs
pop
sub
pop
pop
mov
addr16
sbb
push
ret
inc
arpl
pop
gs
pusha
inc
cwtl
pop
push
add
xchg
insb
xchg
test
dec
xchg
jle
or
adc
jb
lods
mov
out
leave
sbb
mov
mov
add
push
pop
popf
add
dec
ljmp
ja
stc
jb
mov
mov
or
pop
mov
push
movsb
outsl
jle
jp
popa
inc
xchg
sti
sub
aas
lret
inc
or
mov
sbb
add
ljmp
mov
hlt
gs
sbb
jno
icebp
pop
pop
fs
pop
mov
mov
lret
xchg
aas
add
stc
in
sbb
mov
insl
icebp
dec
lods
rolb
sar
cltd
shl
adc
insb
fisubrs
cld
add
jns
jno
fldl
push
int3
enter
fistl
xchg
push
shlb
adcb
dec
xchg
xor
icebp
stc
inc
into
test
xchg
xor
and
setl
cli
fiadds
and
rcrb
popf
nop
nop
in
xchg
inc
fwait
xchg
jg
cmp
sub
mov
les
cltd
orb
iret
filds
mov
cmp
shrb
shlb
ss
cmp
cmp
sti
out
inc
push
fisubl
push
outsl
in
out
jb
addr16
dec
sahf
jo
insl
jg
xchg
mov
pop
inc
adc
cli
add
sub
add
xor
jp
pop
ficompl
pusha
into
xchg
pop
adc
ss
mov
push
xchg
es
pushw
and
cmp
cmp
push
rep
or
xchg
rorl
sbb
test
call
sub
ljmp
mov
das
add
arpl
inc
movsl
repz
stc
or
dec
xchg
xchg
in
fwait
xlat
sbb
mov
sub
adc
shl
xor
xor
aaa
filds
ljmp
push
sbb
insl
pop
mov
mov
negb
outsl
data16
cs
div
lds
and
repnz
adc
lcall
clc
hlt
sub
mov
jae
aaa
inc
outsb
rcr
test
dec
lds
or
fisubrl
sub
mov
imul
add
out
aad
sbb
mov
cs
cmc
es
mulb
cmp
outsb
popa
in
shrl
lods
leave
ss
adc
insl
stos
inc
arpl
xor
xchg
jbe
mov
sahf
mov
aam
cmp
fisttps
cld
xchg
rol
call
jle
mov
popa
das
test
arpl
in
pop
fcomps
aas
ja
movsb
jae
and
cltd
sti
xchg
mov
cmp
ret
fcmovb
push
mov
or
push
mov
cmp
std
pop
mov
dec
inc
jne
mov
pop
adc
jmp
push
lcall
sub
push
call
mov
dec
mull
out
adc
sbb
bound
xchg
and
mov
pop
and
in
insl
stos
lds
dec
mov
icebp
mov
jo
add
cmp
dec
pandn
outsl
lcall
jle
ss
lahf
mov
adc
aad
sbb
iret
push
adc
loopne
bnd
loope
ret
inc
sahf
pop
adc
push
or
mov
mov
setg
imul
adc
cli
rorl
lret
lock
out
xchg
xchg
notl
xchg
or
das
nop
mov
inc
imull
cld
jmp
daa
sub
mov
dec
imul
push
call
ret
mov
xor
jae
dec
pop
lods
pop
out
cmp
mov
inc
testb
call
cmp
sbb
add
sbb
mov
leave
jmp
ret
cmpb
dec
ret
fs
inc
inc
inc
les
pop
lods
mov
js
jbe
push
mov
adc
daa
inc
arpl
das
subl
inc
or
sub
push
mov
sbb
adc
pop
les
mov
daa
pop
jg
sbb
mov
adc
fldl
dec
daa
or
imul
into
fisubs
push
in
mov
mov
stos
sbb
cmp
clc
call
xchg
sti
mov
insb
mov
lock
and
dec
in
into
pusha
inc
insl
dec
cmp
adc
dec
push
in
fidivrs
iret
lcall
rol
ret
pop
sbb
into
loopne
stos
test
jne
lret
adc
lcall
mov
sub
dec
js
repnz
jb
mov
sarb
dec
lahf
xchg
inc
je
lret
mov
aad
outsb
out
jecxz
enter
and
xchg
push
mov
jb
add
jbe
push
lcall
lea
loop
jmp
fiaddl
icebp
popa
mov
push
test
stos
cwtl
jb
sub
jp
fwait
stos
add
inc
sbb
jmp
mov
imul
mov
jae
ret
inc
sbb
or
dec
aaa
push
push
out
add
inc
inc
inc
adc
inc
xor
or
adc
jle
mov
insl
and
jmp
ret
adc
xorl
xlat
mov
fs
daa
pop
dec
dec
out
mov
lea
jae
out
mov
jge
pop
jl
popf
and
and
cmpsb
jl
jle
inc
incl
pusha
movsl
je
add
shlb
inc
mov
mov
lret
flds
cld
mov
jp
out
mov
jp
push
inc
mov
dec
push
out
push
lcall
outsl
mov
arpl
cmp
loopne
jns
ljmp
sub
fnstenv
adc
in
pop
jmp
mov
push
dec
lds
popa
mov
cmp
movsl
cmpsl
scas
mov
sbb
pop
les
and
in
push
push
aaa
push
daa
arpl
test
or
je
adc
loopne
xchg
shl
pop
adc
push
shl
je
or
ret
fnstcw
mov
mov
test
dec
shrb
les
sub
test
push
push
mov
cmpb
cmp
sub
push
dec
and
test
push
push
jne
mov
mov
arpl
rorb
call
movsl
scas
nop
fcoml
adc
ror
xchg
das
out
das
jmp
pusha
lock
xchg
popf
lock
push
repnz
rorb
out
cmp
mov
cmc
sahf
jnp
jmp
icebp
pop
jmp
aaa
push
xlat
push
dec
dec
repnz
sub
or
lods
pushf
cmp
pop
xor
cmp
fdivr
pop
sahf
add
add
mov
fisttpll
mov
sbb
sub
xchg
sti
es
or
pop
pop
jmp
stos
or
sub
out
xlat
out
in
cmpsb
inc
push
inc
mov
roll
and
sbb
inc
loopne
shrl
negl
adc
sbb
mov
repnz
mov
adc
bound
scas
imulb
daa
dec
arpl
adc
imul
and
cwtl
jg
stos
mov
jecxz
add
or
jbe
data16
ret
std
in
pushf
and
jbe
pusha
jne
xchg
cmp
loop
xchg
cmpsl
cs
pop
mov
iret
jl
push
repnz
in
cmp
sbbb
popa
mov
scas
jmp
jb
xor
mov
das
push
sbb
repz
mov
es
hlt
inc
jge
stos
enter
or
mov
test
es
add
dec
ret
aad
inc
fs
test
push
bound
xor
sbb
add
or
jle
or
cld
imul
fmul
push
pop
lcall
sub
cltd
fisubrl
mov
adc
daa
in
lods
call
jge
outsl
int3
arpl
sbb
lcall
mov
mov
int
xor
sarl
xchg
imul
cmp
ljmp
data16
into
jmp
push
icebp
push
and
lock
repz
stos
cli
lea
ja
push
xor
mov
out
inc
scas
push
add
dec
inc
mov
or
imul
mov
lock
cli
xor
out
cmp
xchg
int3
lret
incl
mov
scas
jb
loopne
inc
inc
inc
mov
mov
in
inc
stos
and
scas
lret
insl
add
mov
jno
mov
cmp
mov
add
mov
push
cmp
xchg
adc
dec
ja
fcmovnb
sar
mov
into
jo
push
ss
push
mov
push
or
jbe
addl
sub
in
mov
lahf
xchg
fcoml
and
mov
es
cld
das
inc
mov
int3
adc
sahf
mov
mov
xchg
mov
ljmp
addr16
lret
adc
shlb
push
cmp
insl
cmp
push
mov
xor
jg
sbb
inc
lcall
adcb
jg
push
jbe
dec
int
lock
push
or
adc
nop
rolb
rorb
je
icebp
xchg
xchg
repnz
add
aaa
orb
jmp
ja
imul
fwait
cmp
push
in
addr16
mov
loopne
sub
ret
adc
or
xchg
dec
xchg
or
mov
mov
adc
mov
mov
push
pusha
aas
lods
jno
sbb
inc
dec
push
xchg
rcl
cmp
fimuls
add
cmp
mov
jo
and
mov
ja
dec
xlat
cmp
movsb
popa
xchg
fistps
pop
or
std
jp
or
dec
pop
mov
pop
xchg
movsb
or
mov
pop
out
or
cli
dec
sbb
test
lea
push
stc
je
pusha
stos
aas
insl
pushf
in
adc
push
xor
mulb
or
push
aas
pop
shll
fnsave
in
movsl
jp
push
xchg
mov
push
xchg
sub
mov
stos
or
cmp
sub
inc
push
jae
dec
push
pop
mov
jns
jnp
loope
dec
ja
mov
popf
mov
je
pop
int3
test
and
enter
or
prefetch
mov
iret
movsb
popf
nop
pop
mov
lcall
inc
scas
jge
popa
push
int
jne
xor
adc
je
je
aaa
dec
ss
bound
cmpsl
or
cs
jns
test
xchg
ret
pop
xor
mov
test
pop
shlb
hlt
mov
dec
rcll
sub
movsl
mov
dec
pop
arpl
or
push
cmpsl
push
pushf
pusha
adc
adc
std
out
jne
cmpb
mov
push
nop
lods
adc
cli
ret
push
or
mov
adc
loop
dec
jns
jecxz
data16
inc
cld
lods
pop
enter
mov
and
cmpsb
jo
or
popa
in
add
mov
dec
loopne
adc
add
addl
adc
ret
gs
out
mov
dec
mov
scas
inc
push
and
hlt
js
loopne
dec
fucom
and
mov
aas
push
aas
add
adc
pushf
pop
roll
aas
and
clc
lcall
sub
push
imul
cmp
dec
lret
lret
xchg
mov
ss
mov
lcall
pop
mov
xor
pop
sub
xor
dec
in
sbb
xchg
cmp
pushw
or
in
js
dec
jne
test
ss
mov
gs
mov
int3
add
outsb
sbb
jb
dec
scas
lods
lret
xorl
sbb
clc
outsl
clc
je
pop
dec
fisubrs
mov
mulb
call
test
mov
xor
sbb
mov
mov
jmp
pop
mov
or
popa
in
jp
rorb
mov
sbb
inc
call
shll
add
ja
jl
sbb
pop
sbb
jno
out
imulb
sub
push
in
ja
mov
inc
or
test
stc
rorl
les
lcall
es
cs
orb
dec
ljmp
ret
pop
orl
xchg
mov
shrb
mov
dec
mov
adc
push
rcrl
push
xor
stc
and
in
gs
and
cmc
lea
lea
dec
pushf
mov
icebp
int3
ret
lock
scas
aas
cmp
icebp
xlat
shlb
sub
mov
xor
push
xchg
or
adc
jns
repnz
rorl
jge
outsb
movsb
cld
or
cli
std
sbb
in
repz
cmp
jmp
inc
push
jmp
popf
fadds
adc
arpl
fwait
stc
bound
lods
aam
in
push
push
dec
and
add
movb
pushf
pop
cmpsb
ret
test
lcall
or
jmp
popf
dec
fwait
js
dec
rcll
adc
dec
mov
test
fwait
or
mov
adc
xchg
push
cmp
jo
sarb
push
bound
mov
cwtl
lret
pop
ds
sub
dec
sub
cmpsb
mov
sbb
add
mov
loopne
aas
shll
inc
loopne
out
add
arpl
push
decb
cltd
inc
cmp
cld
ret
sub
xchg
pop
dec
fstl
cmpsl
cwtl
ljmp
fs
mov
clc
call
mov
in
fisubrl
call
cwtl
push
loop
pop
add
sub
dec
aas
fmuls
stos
or
shl
dec
repnz
jmp
jns
pop
mov
adc
inc
mov
sub
and
outsl
inc
in
dec
cmpsb
enter
adcl
loope
push
gs
ds
cmp
cmp
outsb
arpl
sub
pop
in
push
fimull
inc
push
inc
pop
enter
cmp
ja
jns
loopne
scas
stc
xchg
adc
jle
icebp
lock
addl
xchg
data16
bound
bnd
xlat
xor
inc
push
mov
in
adc
mov
inc
pop
lret
mov
mov
in
and
dec
dec
pop
ficompl
jl
push
ret
fmul
icebp
popf
push
and
mov
in
cld
cmpsb
es
mov
adc
int
hlt
mov
ljmp
add
inc
and
sub
inc
mov
fcoml
cmp
test
movsl
jle
pop
jle
xor
mov
sbb
sti
scas
mov
adc
popa
aaa
or
jb
cmp
or
inc
inc
call
fnsave
repz
pshufw
gs
push
and
cld
sbb
imul
scas
adc
sub
xor
pop
rolb
es
mov
add
xchg
xor
push
jbe
out
popf
in
ret
sbb
mov
roll
pop
fmull
xchg
cmpsl
cwtl
pop
lds
scas
pop
inc
and
mov
sti
sub
mov
xor
popa
add
push
cmp
lret
dec
sub
cwtl
jle
and
xchg
movsb
mov
jnp
dec
jae
xchg
arpl
cs
xchg
add
sti
inc
out
mov
mov
popa
outsl
inc
ja
daa
fucomp
inc
cmp
jno
into
mov
cmpl
gs
dec
jne
jg
jle
sahf
fwait
movsl
dec
bound
pop
sub
popa
mov
jbe
roll
cmp
cs
and
push
mov
aam
push
xchg
mov
repnz
rcll
dec
dec
cwtd
imul
aam
enter
fbld
into
sbb
lea
xchg
xor
push
fisttpll
dec
leave
aad
into
inc
mov
inc
inc
stos
cwtl
cltd
cmp
mov
jbe
lods
mov
adc
sub
adc
cmp
lods
call
xor
sub
cld
fwait
jp
cmpsb
mov
add
incb
shr
ds
mov
lret
xchg
sub
insb
sbb
adc
xchg
or
inc
fcomip
xor
mov
or
not
std
cld
mov
popf
sub
pop
dec
movsl
xor
rcl
mov
imul
sti
mov
ds
out
pop
or
ss
add
dec
xor
xor
and
loopne
sahf
xor
xchg
negl
dec
push
fwait
pusha
mov
lahf
sub
fildll
push
dec
mov
in
add
loop
ss
fs
mov
rorb
repnz
or
inc
adc
iret
cmpb
sbb
xchg
push
call
xor
addb
rorb
inc
push
ss
mov
xchg
lcall
jge
in
rorl
imul
or
adc
pop
mov
lcall
lods
clc
pop
rol
aaa
testb
push
lea
nop
in
outsb
push
lods
enter
cmp
cmc
sti
out
mov
mov
pop
lods
pop
test
mov
sti
jbe
xchg
aad
fsubrp
out
inc
add
lret
jno
mov
inc
int
int
push
mov
icebp
scas
cli
push
popf
dec
mov
jecxz
xchg
mov
lahf
in
pop
fimull
jecxz
stos
cmp
das
test
or
pop
jns
movsb
push
or
jg
cmp
mov
adc
mov
decl
adc
int3
ljmp
int
push
push
jmp
test
push
mov
js
mov
fwait
sbb
push
add
push
sbb
cmc
and
fidivrs
push
mov
push
mov
fldl2t
adc
ss
mov
dec
mov
out
sbb
fidivrs
cmp
xchg
lretw
icebp
std
cmp
in
mov
pop
out
add
dec
pop
aam
sbb
hlt
shr
clc
add
dec
rol
aas
xchg
jmp
repnz
hlt
arpl
test
inc
rcrl
xlat
insb
test
mov
scas
ret
int3
jmp
pop
arpl
pop
adc
cmp
mov
arpl
jl
test
pop
call
js
mov
jg
fsubrs
add
lret
mov
lret
pop
xchg
push
add
jp
lcallw
jbe
push
fimuls
loopne
pop
xor
mov
inc
ss
mov
pop
cmp
lea
fidivl
xor
pop
xor
mov
pop
or
shll
add
lret
out
adc
mov
jbe
ja
mov
scas
push
js
notl
and
cmp
loope
mov
movsb
lret
faddl
lret
ret
in
add
push
sub
jbe
int
dec
sub
xchg
jp
pop
pop
outsl
cmp
arpl
mov
mov
add
mov
and
mov
cmpsl
mov
mov
leave
xor
lods
outsb
push
out
int
pusha
addr16
ret
mov
insl
lahf
out
mov
mov
sarl
imul
dec
mov
dec
ljmp
mov
lea
daa
fsts
mov
mov
mov
int3
loope
cmpsb
ss
xchg
out
xchg
add
jp
xchg
pop
dec
sbb
push
adc
test
and
jne
aam
add
loopne
testb
lret
xchg
into
stc
ror
pop
shrl
sahf
jne
mov
rclb
or
adc
dec
mov
inc
pop
sub
popf
mov
mov
xor
insl
sbb
mov
xchg
lahf
cmpb
popf
lods
ret
test
pop
rclb
scas
push
xor
or
stc
mov
mov
dec
inc
pop
mov
push
mov
adc
gs
xlat
mov
mov
loopne
lods
push
mov
pop
push
jns
or
call
fildl
jae
xchg
fstpt
jbe
pushf
stos
sub
jp
test
bound
xchg
jae
pop
fimull
jnp
es
mov
inc
add
push
lds
int
sarw
ja
in
inc
lds
mov
dec
sahf
mov
shrl
sbb
add
sbb
mov
movsb
sbb
jb
jl
xchg
pop
jg
sbb
jmp
mov
mov
fwait
mov
or
enter
movsb
hlt
jecxz
lods
cwtl
sbb
clc
jl
stos
mov
adc
int3
or
mov
test
mov
jmp
icebp
inc
shll
enter
mov
lock
gs
cmpsl
lret
shll
sub
pop
mov
and
cmp
mul
jbe
xchg
mov
add
add
cs
sub
in
int3
jb
cmp
xchg
cmp
adc
jge
insl
lods
rcrb
inc
sub
fcmovbe
pop
jo
movsb
push
movsl
insl
jno
fildll
movsb
outsl
xor
push
jnp
loop
loope
pop
dec
mov
sbb
and
fdivrs
adc
xlat
addb
cld
shll
add
out
mov
pop
or
jmp
pop
stos
mov
mov
jg
lret
or
out
pop
in
or
mov
fstpl
cmp
jae
js
mov
sarl
shll
mov
fldl
xor
xchg
or
jp
dec
aaa
ja
push
push
stos
inc
rorl
fs
fsubrs
fmull
bound
push
inc
movsl
inc
ret
add
pop
xchg
sub
leave
fwait
insb
mov
or
xor
fcmovnu
mov
jb
sub
cmp
xchg
mov
inc
ret
sbb
jge
or
int
and
sub
lret
lret
jo
fwait
push
pop
xchg
iret
ret
pop
add
sbb
hlt
push
or
dec
pop
pop
sub
dec
or
jae
gs
enter
stos
mov
out
xor
jmp
cmp
jge
movsl
movsb
jg
dec
and
cwtl
xor
dec
cltd
xor
dec
mov
das
les
jno
gs
inc
in
fisubl
or
xlat
inc
outsl
scas
jb
jno
mov
pop
push
js
sub
in
pop
mov
or
xchg
enter
movb
enter
cs
repz
pop
icebp
stc
mov
mov
cld
adc
rclb
rolb
fldcw
scas
rclb
cmc
call
push
pop
nop
and
into
orl
adc
and
test
mov
scas
xorl
adc
mov
mov
icebp
mov
out
iret
xchg
add
jno
jmp
push
ss
xchg
subb
push
xchg
push
fadds
loop
pop
pop
addr16
shlb
inc
xchg
xor
xor
cmp
lods
mov
adc
push
jmp
xor
out
sub
jbe
mov
and
enter
xchg
fnstcw
lcall
test
popf
stos
cmpsb
push
mov
aad
xor
in
out
ljmp
jae
mov
inc
mov
ret
pop
stc
in
mov
push
jns
les
pop
cmp
fsubl
push
jmp
test
dec
lret
mov
dec
or
leave
xlat
or
aad
ljmp
pop
push
clc
das
popf
loope
hlt
mov
mov
divps
jl
mov
insl
loope
mov
cmp
sahf
call
mov
cmp
int
lret
mov
push
fdivs
xorl
push
adc
mov
lahf
rclb
pushf
inc
lods
xor
push
ret
push
icebp
outsb
jmp
stc
jmp
ljmp
icebp
sldt
ljmp
xor
aam
gs
sbb
cmc
loope
fmuls
push
xorb
out
push
pop
ja
insl
cmpsb
sub
repz
stc
es
sbb
in
mov
xor
xor
nop
jle
loope
inc
stos
jg
dec
lods
xchg
inc
int3
sarl
ret
add
imul
cwtl
pop
xchg
cmp
andb
stos
or
bound
ja
push
wbinvd
jne
aam
adc
popf
jle
pop
mov
or
mov
int3
cmpsb
push
in
mov
hlt
int3
in
and
into
in
subb
mov
ret
inc
inc
stos
in
xor
pop
dec
xchg
add
mov
push
jecxz
fists
pop
xchg
int
scas
aaa
adc
cs
ffreep
and
fwait
icebp
push
lcall
sbb
dec
iret
test
inc
jne
push
mov
push
xor
filds
jl
mov
repnz
lret
xor
stos
jmp
js
sub
test
xchg
leave
xchg
inc
adc
mov
ss
xor
xchg
addr16
repnz
ret
std
mov
test
inc
scas
mov
jno
jg
pop
test
jae
adcb
dec
popa
in
rolb
add
ljmp
gs
lods
imul
stc
adc
dec
cmc
lods
aaa
sbb
andb
and
loope
fsubrl
lahf
cli
stc
cmp
dec
push
mov
jg
call
popf
jg
sub
ss
and
jns
mov
cmpsb
pop
and
xor
push
pop
repnz
pop
in
mov
mov
mov
jle
xchg
sbb
repz
mov
xlat
push
sub
pop
repnz
inc
insl
cmp
sub
sub
xchg
mov
bswap
pop
and
xchg
xchg
cmp
lahf
xchg
pushf
add
inc
mulb
inc
adc
loop
les
jne
jle
or
sahf
or
mov
jge
repnz
cmp
lcall
lods
jl
sbb
push
and
cmc
xchg
push
xor
mov
push
xchg
loopne
jg
and
sbb
mov
lds
sub
push
aas
call
xor
cs
outsl
stos
aas
addr16
enter
adc
inc
jp
sbb
mov
sub
cmpsb
ds
adc
sbb
fsts
inc
mov
lods
cmpsb
mov
xor
adc
sub
dec
mov
pop
inc
jo
aam
mov
pop
mov
pop
mov
push
testb
xchg
ss
inc
xchg
sub
imul
ret
lods
sub
pop
insb
ja
xchg
push
arpl
cmp
rorl
dec
sbb
mov
daa
cmpsl
mov
xchg
insb
rorb
xchg
inc
dec
sbb
dec
shll
movsb
jb
sbb
cmpsl
jb
je
insb
cmp
iret
add
lret
lods
dec
inc
mov
mov
push
xchg
aas
cmpsb
pushl
and
inc
mov
lock
lahf
or
subb
xor
divl
fs
mov
andl
cmp
adc
sbb
inc
out
inc
sti
lahf
push
cmp
imulb
scas
sbb
cmc
fdivrs
inc
fisttpl
iret
out
loopne
enter
movsl
pop
arpl
stos
dec
mov
xor
in
lods
mov
imul
jl
xor
jecxz
fadds
inc
mov
shr
cltd
cmc
cmc
insl
jp
lock
cwtl
jg
xor
xor
cmpsl
fidivrl
fmuls
sbb
stos
rcrl
sub
lods
inc
fsubl
mov
lcall
dec
fisttps
stos
xor
das
loop
push
sbb
adc
add
nop
leave
pop
xchg
mulb
add
sub
sbb
mov
insl
orl
das
jne
push
popf
div
pushf
cmpsl
stos
ret
sub
movsb
add
out
outsl
sbb
int
out
xorb
lea
sub
sub
jnp
lods
dec
xchg
fxsave
push
xchg
dec
inc
mov
or
clc
xchg
or
and
mov
mov
adc
lds
cmpb
push
pusha
mov
loopne
mov
mov
adc
stos
repz
lahf
dec
push
nop
xchg
sub
push
das
test
jecxz
pop
test
mov
rorb
add
pop
enter
dec
orb
test
sbb
in
in
sarb
cmp
pop
das
pop
hlt
popl
fnsave
divb
add
gs
pop
sbb
sub
pop
jl
mov
sbb
pop
lea
leave
dec
fstpt
pop
ret
mov
push
arpl
es
icebp
loope
fcomps
dec
rcrl
mov
xchg
sbb
pop
rolb
fs
fadds
sti
xchg
xchg
ret
in
dec
ficomps
or
dec
std
xor
mov
ja
xchg
mov
fdivrp
cwtl
sbb
lret
mov
and
and
insl
adc
dec
daa
sbb
jecxz
das
stos
les
xor
pop
dec
pop
inc
lea
xchg
mov
xchg
mov
and
addr16
mov
leave
sub
popa
jns
jecxz
imul
adc
mov
hlt
in
loop
cmp
ret
push
aaa
adc
arpl
bswap
repz
cmp
repnz
lds
out
xchg
xchg
imul
insl
popa
cld
sbb
es
sbb
out
pop
pop
or
outsl
and
lods
cmp
adc
test
aam
dec
adc
pop
out
ret
ds
rcrl
jns
xchg
jae
ljmp
mov
scas
pushf
jmp
inc
scas
das
sbbb
jno
sarl
popa
mov
pop
outsl
cmc
sub
fcomp
nop
adcb
int3
sub
clc
xchg
addr16
and
ljmp
sbb
pushf
gs
fisubs
shll
sbb
push
mov
jge
jl
xor
pop
arpl
test
adc
pop
negl
cltd
mov
or
incb
cmp
or
nop
cltd
movsl
cmp
insl
shl
cwtl
mov
mov
cmovs
jl
int
pushf
sbb
sar
xlat
loope
iret
or
inc
bound
cmp
cwtl
mov
push
icebp
addl
ljmp
mov
das
adc
bound
pop
adc
jno
notb
adc
pop
cli
mov
test
dec
jg
lods
fadd
loopne
lea
call
scas
aas
hlt
inc
mov
stc
mov
mov
jae
mov
hlt
nop
aad
popa
sbb
in
sub
test
mov
cmp
xchg
push
mov
leave
shl
adc
and
call
call
pop
jo
mov
rcrl
jae
jmp
push
mov
adc
loope
test
sub
sub
jg
iret
push
cmp
imul
call
testb
fwait
jb
test
dec
and
inc
paddd
popl
loopne
out
cmc
sbb
ja
pop
das
xchg
adcb
pop
int
insl
pop
imull
push
fnsave
jl
cld
scas
adc
push
push
sarb
sbb
mov
sbb
add
gs
dec
aad
lock
cmpsl
xor
imul
inc
lds
fadds
aam
cmp
or
sbb
je
sbb
lods
sbbb
mov
sbb
and
add
dec
fcomps
cmp
jne
inc
jg
loope
sti
stos
aam
sub
icebp
in
pop
push
bound
sahf
dec
add
cmp
mov
rorl
scas
dec
jae
sbb
stos
imul
add
ret
mov
add
movsb
jp
ret
and
inc
adc
rclb
rcrl
jbe
xchg
cwtl
pop
or
cmpsl
jo
xchg
jmp
in
fs
mov
push
mov
dec
xor
inc
fwait
xor
pusha
and
pop
aad
push
in
jmp
div
add
fcmovnb
mov
les
jb
std
jle
xchg
lods
fildl
mov
outsl
shlb
leave
mov
arpl
push
clc
mov
ss
dec
sbbb
adc
sbb
test
loope
fildll
push
in
insl
adc
sarb
adc
sbb
lret
cmp
ret
ficoms
sub
adc
push
outsl
xchg
lret
cmp
in
js
out
ja
loop
xor
push
pop
xchg
jne
lcall
and
push
les
mov
or
push
cmc
into
lahf
lods
mov
addb
into
cmp
pusha
sbb
stc
push
mov
mov
mov
mov
jo
push
aas
enter
movsl
sbb
xlat
and
data16
or
out
xchg
cltd
ror
jp
add
sbb
sbb
xor
dec
popa
nop
and
jnp
test
jns
and
pop
repnz
rcl
push
and
icebp
dec
jp
in
xor
das
cmpsb
cmp
popa
cs
add
adc
js
insl
call
lods
outsb
mov
push
mov
nop
add
dec
mov
adc
xchg
sub
xchg
sbb
addb
ja
adc
faddl
mov
xchg
addr16
adc
rcrl
xor
test
gs
mov
xor
and
sub
jmp
out
pop
jb
nopl
scas
sbb
adc
outsl
loope
cmp
or
cs
push
mov
pop
xor
push
or
or
hlt
mov
dec
int3
das
cmp
inc
call
or
out
jl
adc
stos
mov
fisttps
fmull
in
addb
popa
dec
or
sub
outsb
pop
out
push
enter
sbb
repz
call
or
in
dec
mov
xchg
and
push
outsb
negb
ja
jmp
loopne
std
adc
mov
imul
dec
lahf
mov
mov
inc
scas
pop
mov
ret
xchg
and
cmp
push
mov
nop
xchg
push
and
lret
in
mov
or
push
out
xorb
mov
loop
lret
xchg
cmp
loop
lret
mov
add
mov
movsb
jnp
cli
inc
cmc
divb
js
cmp
inc
dec
mov
pop
ja
call
mov
adc
dec
cli
add
into
dec
arpl
enter
sub
cltd
mov
jp
test
or
cmp
mov
inc
sbb
adc
addr16
popf
sub
inc
and
cs
addr16
inc
dec
or
or
xor
fwait
inc
cli
sub
clc
stos
and
adc
xchg
push
out
scas
xchg
test
subl
fiadds
xchg
and
cmpl
dec
out
pop
mov
es
mov
push
popa
rcrl
adcl
cmp
lods
fstps
and
pop
sub
sbb
movl
arpl
inc
roll
fld1
sub
jo
dec
rol
xor
sbb
sub
or
and
std
andl
dec
stos
jl
adc
cmp
inc
ret
clc
cmp
ss
divl
dec
btc
imul
int3
adc
cmp
je
int3
addr16
add
aaa
rclb
jne
fildl
daa
test
inc
sub
push
mulb
adc
daa
js
mov
and
jnp
inc
stos
lods
fistps
pop
ret
push
stos
push
push
jecxz
pop
inc
push
mov
ds
push
xor
push
pop
stc
sbb
fisubrl
in
pop
dec
jg
pop
jns
clc
out
xchg
ret
fisttps
jl
out
cmp
or
emms
lds
jae
mov
pop
adc
sar
mov
cli
add
push
hlt
dec
sbb
sbb
inc
arpl
jbe
lods
mov
mov
pusha
mov
incb
test
xor
mov
pop
push
mov
int
lea
mov
cmp
push
adc
dec
mov
fmulp
sbb
iret
adc
sti
jbe
pop
push
jne
ss
sbb
lahf
outsb
rcrb
add
call
xchg
stos
push
lahf
fsubrl
sbb
cs
push
mov
lea
sahf
add
iret
fsubl
daa
dec
adc
sti
cs
fimuls
pop
mov
mov
enter
xchg
push
lret
gs
in
inc
fcmovu
fnstsw
add
loop
add
sub
loopne
rcll
mov
test
jb
gs
insl
jmp
in
ds
mov
in
mov
andl
idivb
lods
xor
pushf
leave
or
fcoms
push
mov
jle
dec
test
inc
imul
sti
fistl
sbb
or
cmp
ret
test
pop
mov
push
mov
jecxz
js
jmp
lds
std
divb
xchg
es
je
mov
enter
popf
iret
adc
jns
insl
xchg
pop
xchg
lahf
lahf
mov
aad
jp
cmpsb
cmp
shlb
xchg
sahf
cmp
fldenv
repnz
mov
pusha
aas
insb
aam
test
push
inc
loop
pushf
shlb
popf
ja
pushf
mov
adc
dec
add
pop
movsl
dec
xor
add
fldcw
mov
add
sub
insl
dec
dec
bound
cmp
enter
xor
inc
push
loop
dec
inc
mov
mov
sub
or
pop
jmp
lcall
push
push
push
inc
cld
aad
stos
sbb
xor
ret
jle
into
add
pop
push
sub
stos
popf
jmp
ret
push
inc
jno
adc
and
stos
pusha
sbb
adc
mov
divb
int3
push
mov
push
pop
push
je
jp
dec
stc
dec
pop
jp
mov
rcl
push
mov
outsb
xor
xor
jp
adc
fdiv
imul
push
and
bound
movsb
and
scas
mulb
jle
bound
cmovne
dec
dec
jo
cs
icebp
pop
dec
mov
test
pop
pop
pop
xchg
fdiv
inc
cmp
push
or
aaa
pusha
fs
test
faddl
stos
cwtl
or
aas
sub
stos
dec
and
fists
sub
js
shlb
sbb
in
js
mov
cld
adc
cmp
add
scas
adc
rcr
in
lcall
imul
stc
mov
icebp
push
fs
cmp
mov
sbb
sbb
jp
lret
mov
fmull
push
bound
sbb
mov
jge
adc
in
mov
xor
pop
sub
push
dec
incb
xor
add
mov
mov
scas
adcl
sahf
ret
sub
inc
and
xchg
push
cmpb
inc
cmpl
adc
mov
ja
sahf
pop
xor
imul
stc
rcll
add
dec
mov
jo
pop
push
or
add
imul
xchg
hlt
in
rcrl
loopne
cmp
mov
lret
mov
cltd
cmp
jbe
xor
mov
lret
mov
sbb
repnz
or
psadbw
test
push
dec
orl
or
pusha
je
fdivs
out
push
pop
orl
or
stos
popa
xchg
jns
pop
dec
fstpt
mov
inc
pop
and
dec
pop
popf
cs
dec
cmp
scas
lcall
xchg
mov
push
loop
adc
bound
in
push
es
jl
jno
adc
in
leave
cmp
cmp
in
movsb
mov
add
lods
je
iret
insl
clc
add
aas
adc
pop
cmp
or
dec
xor
std
push
or
inc
push
mov
in
xor
adc
inc
ss
daa
repz
cmpsl
andb
push
cmp
add
xchg
ds
push
pop
stos
insb
addr16
xor
mov
jae
orb
inc
inc
xchg
add
js
xor
push
ja
lret
inc
popf
sbb
fdivrs
dec
mov
cmpsl
adcl
xor
or
jne
aas
mov
iret
stos
nop
add
fcompl
pushw
mov
bound
or
aad
into
pop
push
and
je
repnz
adc
add
out
mov
repnz
test
and
clc
push
mov
mov
pop
jno
push
xchg
mov
jne
xor
inc
clc
xchg
xchg
mov
or
aaa
gs
call
ljmp
cmpb
cmpsb
jbe
addb
in
lcall
adc
push
orl
enter
sbb
cs
aaa
jp
pop
imul
jno
jnp
lods
push
mov
jecxz
pop
dec
dec
in
mov
shrl
inc
sub
roll
leave
das
jg
push
lahf
push
out
mov
pop
pop
fwait
dec
fisubrs
out
out
test
repz
stos
fstp
mov
and
adc
imul
mov
push
mov
adc
sti
lea
loope
popf
sub
xchg
add
push
sbb
xchg
scas
mov
xchg
loopne
inc
push
adc
pop
stc
es
int
invd
adc
xor
or
nop
xchg
sbb
jg
je
cltd
xchg
hlt
and
retw
add
push
std
iret
pop
mov
xchg
jo
daa
xor
cmp
xorb
sbb
pop
cld
mov
push
push
sbb
pop
sub
lea
mov
lahf
or
mov
scas
jge
inc
xchg
in
lcall
sahf
sbbb
call
and
ljmp
jp
xlat
loop
cmpl
icebp
mov
repz
add
inc
xchg
add
fidivl
shl
sbb
mov
inc
adc
fs
aas
in
mov
pop
int
int3
jns
and
cli
and
xlat
jmp
push
popf
int
jmp
int
xor
mov
leave
repz
sub
das
dec
push
adc
in
andl
iret
popa
add
cwtl
dec
adc
or
dec
inc
ds
dec
bound
cmp
mov
mov
out
mov
bound
loope
test
push
add
daa
jb
and
ret
jnp
pop
or
gs
outsl
js
jp
stos
iret
mov
mov
scas
in
ljmp
xor
stos
mov
cmp
repz
xchg
lods
shr
mov
aas
out
adc
add
and
jno
dec
mov
mov
mov
loopne
sti
pop
popf
repz
aam
xor
mov
add
stc
xchg
mov
jnp
jmp
or
push
jg
mov
pop
out
adc
icebp
push
adc
icebp
jne
popa
jbe
pop
and
sub
rcr
cmp
dec
xchg
sbb
int3
sub
cmp
ljmp
loop
inc
shrb
inc
pop
jp
das
aam
jmp
ss
xorl
rolb
clc
enter
movsl
inc
cmpsl
xchg
dec
addr16
out
cld
pusha
fsubp
mov
mov
int
pop
aad
jl
out
mov
and
pop
out
dec
xrelease
mov
jne
push
cmp
aad
dec
fwait
mov
and
xor
rorl
push
push
int3
leave
sub
dec
dec
mov
mov
adc
add
xchg
jp
mov
dec
fstpl
add
adc
fprem
sbb
dec
jo
mov
idivb
nop
push
push
and
adc
js
xchg
adc
xor
jmp
xor
and
fdivr
add
xchg
in
je
push
stos
imul
xchg
iret
pop
xchg
jbe
and
mov
ljmp
mov
testb
sub
inc
insb
mov
mov
pop
in
sti
aam
jo
mov
jge
scas
cmc
mov
pop
pop
mov
ljmp
or
jle
ret
and
clc
mov
aaa
cwtl
rcll
jnp
push
movsb
or
dec
xchg
and
push
cmpsb
xor
adc
loopne
sbb
cli
inc
rorb
jo
mov
lret
xor
dec
jg
xchg
adc
imul
jmp
or
xchg
test
nop
movsb
jb
add
out
xchg
fldt
std
xchg
jg
dec
mov
lahf
sub
es
xchg
lock
xlat
mulb
imul
fiaddl
xchg
imul
or
jae
out
pushf
xchg
sub
and
mov
pop
sub
cwtl
fisubrl
push
pop
jle
cmp
push
imul
jl,pn
loop
test
push
cmp
mov
and
jno
dec
pop
int3
add
addb
mov
shrb
leave
rcrl
dec
inc
jnp
rol
cmp
sbb
adc
cmp
aam
shll
cmpl
imul
out
test
or
test
daa
pushf
sbb
jl
xchg
daa
dec
jae
popf
inc
xor
jb
addr16
sbb
mov
mov
add
aaa
xor
aas
xchg
push
add
aad
push
mov
cmp
test
into
out
aam
mul
in
adc
add
jb
cmp
jno
shll
xchg
mov
dec
imul
out
push
push
popf
aaa
mov
lret
cmp
add
scas
sbb
enter
push
lods
mov
jo
movsl
in
dec
ljmp
cli
push
hlt
div
hlt
popa
jb
daa
fdivr
jmp
hlt
pushf
mov
pop
push
inc
sub
pop
mov
dec
fs
xchg
dec
loope
cltd
pop
bound
insb
dec
pop
sbb
sbbl
imull
mov
sub
pop
in
lret
adc
scas
xchg
mov
call
pusha
je
sti
xchg
popf
rcll
mov
lods
jbe
ja
or
rorb
xor
aaa
bnd
push
mov
sbb
das
xchg
enter
sahf
mov
xor
out
jne
icebp
cmp
xchg
mov
adc
fs
xchg
jns
add
in
and
jle
cltd
dec
out
dec
pusha
cmpl
je
xchg
pop
push
mov
ss
imul
mov
jl
hlt
aaa
stos
pop
dec
in
out
sar
cmp
adc
dec
push
dec
mov
jmp
mov
sub
call
push
ret
into
sbb
dec
cltd
icebp
iret
es
pop
decb
and
and
ja
dec
in
pop
mov
push
dec
cmp
mov
fwait
cmp
dec
mov
mov
pusha
adc
mov
pop
push
aad
clc
push
pop
sub
xor
popf
jnp
ja
push
push
cmp
push
imul
pop
pop
mov
or
loope
xchg
dec
les
stc
lea
xchg
xchg
mov
sub
sbb
or
addl
fildl
cli
cltd
loopne
lock
pop
adc
jecxz
roll
js
iret
fsubrs
sub
ss
in
stc
xor
ret
add
fst
iret
sub
mov
jbe
das
pop
jb
mov
inc
mov
sub
inc
sub
das
repz
inc
hlt
mov
outsl
jmp
xchg
jge
out
push
cmp
ljmp
daa
test
cltd
pop
out
push
repz
je
movsl
xlat
lock
add
add
rorl
insb
dec
das
xchg
and
jecxz
clc
imul
xchg
pop
out
pop
pop
rcrl
inc
ja
cmp
mov
cmp
stos
mov
daa
mov
inc
fwait
das
fisttpl
sbb
pop
enter
sub
sbb
sub
jns
popf
fwait
sub
mov
adc
insb
sbbb
lahf
mov
popf
in
pushf
sbb
stos
jne
mov
jecxz
adc
out
insb
sub
adc
pop
in
push
mov
jbe
imul
mov
mov
pop
sbb
fs
bound
iret
push
aad
mov
aaa
sub
inc
push
movsb
scas
xlat
fstps
push
scas
xchg
shl
fwait
mov
adc
push
jnp
mov
stos
out
inc
push
xchg
xchg
dec
cmp
adc
xchg
cs
cmp
pop
mulb
mov
dec
push
pop
push
push
popa
pop
dec
jb
ds
scas
adc
jge
mov
cmp
decl
in
sbb
jbe
rcll
dec
mull
movsl
and
icebp
cltd
cmp
aam
push
lahf
test
and
mov
or
hlt
ljmp
xor
icebp
cwtl
xchg
dec
sbb
loop
push
pop
xchg
push
xor
jns
clc
cltd
int3
mov
sbb
rclb
jne
jge
aad
lahf
or
mov
inc
push
lret
add
jns
mov
jmp
push
gs
fstpt
cmp
pop
mov
jecxz
and
out
sub
lock
jbe
cli
inc
enter
cmpsb
cli
xchg
loopne
das
adc
jmp
outsl
out
insb
icebp
push
push
rcl
push
xchg
push
popf
xchg
out
mov
push
mov
sti
mov
push
fistl
enter
lcall
mov
sbb
and
data16
mov
sbb
mov
sub
xor
mov
mov
aaa
jne
sub
sbb
lods
test
push
repz
push
mov
fisubs
pushf
dec
inc
push
int3
xor
dec
pop
ljmp
pop
inc
lds
pop
sub
test
push
inc
cmc
cld
cmp
add
out
pushf
les
jnp
pop
xchg
xacquire
inc
xchg
icebp
sub
sti
test
scas
fbstp
data16
fdivrs
xchg
in
jge
xor
les
ret
fisubs
fldt
or
cmp
add
jne
into
push
mov
xor
inc
push
popf
gs
inc
push
cmp
adc
mov
dec
idivl
jle
cmpb
fimuls
xchg
jbe
fildl
into
jae
mov
xorl
mov
test
inc
mov
pop
xchg
jmp
push
decb
int
pop
jmp
es
and
movsb
test
lret
es
out
mov
cwtl
and
mov
flds
cmp
pop
mov
cmp
mov
add
add
jo
adcb
pushf
sbb
rolb
aaa
shrl
jl
jnp
jb
adc
mov
inc
aad
jae
int
push
mov
jbe
sbb
std
decl
mov
jo
add
mov
or
test
mov
xor
jmp
mov
push
adc
js
frstor
flds
mov
mov
addr16
mov
mov
dec
pop
dec
int3
inc
sub
sbb
mov
rol
addb
push
xchg
push
adc
or
gs
int
or
out
bound
test
adc
in
xlat
pushf
aad
mov
inc
mov
call
mov
mov
std
push
rcll
insl
notl
cmp
push
es
test
lods
mov
fisttpll
orl
add
arpl
cmp
and
ret
inc
xchg
loope
fwait
int
inc
adc
add
lret
call
inc
int
jns
mov
scas
popa
fs
test
pop
push
mov
mov
mov
mov
js
insl
push
shrb
adc
mov
inc
pop
sbb
out
adc
fs
cmpsb
insb
cmp
adc
fsubrs
imul
rcll
cld
dec
inc
out
out
bound
ret
insl
pop
cmp
out
ficoml
scas
inc
adc
pusha
sahf
push
in
notb
jae
lcall
out
adc
sti
jp
stc
ret
mov
jnp
roll
vcvttpd2dqy
adc
ret
push
ss
sub
ds
dec
jl
fsubrl
outsl
in
rorb
enter
cli
or
gs
xor
dec
push
rorb
push
xlat
inc
jo
arpl
mov
pop
inc
or
cmpsb
jecxz
jle
sbb
mov
jecxz
add
mov
mov
ds
cmpsb
shlb
ja
sbb
js
mov
sbb
xchg
mov
icebp
sub
mov
clc
mov
imul
and
mov
inc
lcall
outsb
jmp
pop
adc
pusha
fst
cmp
push
das
pop
in
ret
adc
fwait
and
jae
mov
inc
xor
and
xchg
mov
jmp
xchg
loope
sub
in
inc
mov
mov
jmp
push
inc
dec
dec
nop
cmp
imul
push
in
dec
in
mov
pushf
and
cltd
jnp
push
push
mov
addl
push
cwtl
popa
mov
cmp
inc
cmpsl
mov
inc
push
pop
xor
movsb
ljmp
iret
aad
inc
sbb
pop
outsb
inc
pop
sub
and
movsl
jbe
cli
into
or
std
push
ret
jae
scas
scas
loopne
push
ret
sub
in
mov
cli
in
or
loopne
out
outsb
out
test
mov
mov
add
mov
rcl
mov
adc
xor
sub
test
xor
in
popf
popf
insl
sbb
jmp
mov
cmp
pop
gs
inc
or
popf
pop
fucomi
jle
push
cwtl
xor
in
cmp
jae
sub
nop
loope
cld
cmpsl
dec
ret
shlb
ja
aas
mulb
imul
jle
aas
std
mov
repz
test
sbb
lock
adc
mov
push
push
cmc
fists
mov
cmp
sub
adc
call
cld
xor
adc
pop
js
mov
add
or
pop
jp
sbb
in
sti
in
insl
sbb
sub
pop
icebp
repz
in
out
roll
push
sub
in
pusha
add
push
mov
pushf
jmp
mov
push
push
ds
lahf
outsl
jno
test
roll
lahf
mov
or
popa
in
add
dec
idivb
jbe
lea
mov
mov
stos
sbb
lock
fsubs
push
jg
test
cmc
jle
xorb
scas
or
scas
inc
mov
test
adc
out
mov
ljmp
ret
loope
test
or
outsl
sbb
sbb
lods
outsl
mov
adc
add
cmp
xorl
pop
cmpsl
mov
xchg
lahf
mov
prefetch
cmp
and
mov
jmp
cmpsb
mov
xchg
lods
leave
jns
xchg
adc
dec
cmp
mov
add
shrb
fimuls
popa
scas
pop
filds
add
sti
mov
and
mov
lret
pop
mov
add
imul
movsb
stos
orb
fmul
mov
lds
scas
xchg
fimuls
ret
out
adc
scas
js
push
cmp
rolb
push
popa
movsb
ret
shl
adc
jmp
je
mov
inc
or
int3
cld
cmpsl
lcall
ficomps
and
xchg
cmp
aaa
repnz
arpl
stc
xchg
dec
cmp
filds
mov
or
stos
add
orl
inc
test
xchg
xor
mov
and
adc
adc
pusha
imul
adc
cmpsb
lds
pop
rolb
push
push
push
add
mov
hlt
aad
mov
dec
hlt
sub
jge
lds
inc
add
add
call
jno
add
fnstenv
xchg
xor
arpl
insb
inc
pop
int3
ret
lods
lods
mov
and
jl
fdivl
sbbb
mov
jge
mov
test
jge
sahf
es
push
imul
mov
mov
jne
push
je
mov
jle
dec
mov
leave
sbb
int
mov
dec
cmp
xor
jp
divb
ja
pop
cmp
sub
xchg
fnstenv
push
sbbl
loope
je
out
stos
jne
ss
insl
lock
imul
cmpsb
test
dec
flds
add
mov
and
add
daa
rorl
add
jae
lret
push
mov
ret
mov
imul
and
mov
cwtl
insl
xchg
cmc
fcomps
adc
loopne
jo
adc
inc
mov
mov
jge
mov
sarb
mov
cmpsb
adc
retw
inc
out
cs
pop
xor
sub
insb
or
lcall
sub
sub
mov
pop
mov
ficoml
test
mov
adc
push
ljmp
cli
scas
mov
orl
inc
ss
dec
xor
repz
adc
mov
jbe
movsb
cs
aaa
and
or
push
xchg
ljmp
sbb
outsl
leave
test
or
push
mov
pusha
jb
mov
mov
testl
jbe
into
aad
imul
iret
mov
rorb
and
ret
pop
cwtl
pop
imul
mov
mov
sbb
outsl
dec
clc
cld
repnz
xor
std
in
imul
add
inc
dec
xchg
aad
mov
mov
lods
xor
push
outsl
mov
inc
bound
inc
rcll
pop
jge
jae
mov
mov
xchg
lods
add
ret
int
cs
inc
out
adc
push
cmp
cmp
xor
mov
mov
sub
loope
xor
or
std
out
mov
xchg
sbb
ljmp
call
imul
scas
repz
inc
pop
xor
andb
loopne
lods
jae
movsb
out
aam
popa
enter
dec
dec
leave
sub
pop
fadd
adc
jbe
push
mov
fabs
and
adc
js
jl
and
mov
xlat
jecxz
fs
and
frstor
pop
iret
pop
jecxz
jnp
jae
xlat
mov
push
call
mov
leave
in
int
jns
scas
repz
adc
sub
cmp
aas
aam
ret
aaa
jle
push
test
or
pop
mov
mov
push
lahf
adc
pop
mov
orb
in
xlat
mov
mov
repz
xor
jns
pop
push
xchg
pusha
mov
fisubrl
jl
divb
gs
enter
push
adc
inc
xchg
sub
add
xchg
push
sbb
fcoms
push
std
push
push
aas
pop
popf
jns
outsb
sbb
sahf
sahf
pop
push
xor
push
sbb
jl
sbb
push
add
repnz
fiaddl
adc
mov
scas
pop
xor
xchg
decl
jb
ss
fmull
mov
push
mov
xlat
out
sbb
enter
js
mov
xor
jle
mov
js
lods
aaa
xchg
mov
out
dec
adc
fidivs
lock
xchg
js
fldcw
or
sbb
or
hlt
lahf
shrl
pusha
jecxz
mov
xor
mov
pop
test
repz
cwtl
or
mov
jo
push
cmc
aam
sub
push
scas
mov
cmp
cmpl
sbb
xchg
inc
xchg
cmp
sub
mov
mov
mov
lcall
andb
mov
aas
lds
sbb
inc
sbb
mov
ds
mov
pop
push
jno
add
mov
subl
jmp
int
adc
cmp
sub
cmpsl
loopne
ljmp
es
dec
add
nop
mov
and
test
fidivs
mov
hlt
ret
dec
dec
push
adc
rclb
iret
test
or
aad
in
mov
sbbb
jge
jge
sub
mov
insl
repnz
adc
lahf
sbb
sub
repnz
mov
mov
bound
in
loopne
loope
outsb
push
lahf
and
fcmove
outsb
outsl
int
fcmovbe
cmp
je
mov
inc
adc
cmp
fwait
stos
fimuls
pmaxub
sbb
mov
sbb
shlb
insb
lods
or
jns
std
jl
push
inc
dec
xlat
mov
xchg
sbb
dec
rcl
sub
pop
pop
xchg
in
and
push
mov
popf
add
sbb
inc
loopne
fcoms
push
call
rorb
cs
notl
add
pusha
aaa
or
rorb
fdiv
insb
addl
mov
xchg
or
jne
mov
inc
cwtl
jg
ret
jae
pushf
pop
cli
mov
hlt
mov
lret
or
int
mov
mov
dec
pop
ret
lret
inc
adc
rorb
sbb
out
sub
pusha
mov
or
lock
pop
dec
pop
cs
xchg
movsb
shl
inc
ljmp
repz
xchg
mov
fwait
cltd
mov
repnz
js
ds
mov
sbb
cli
xchg
xor
or
sbb
mov
xor
lret
das
fnstsw
push
cwtl
add
dec
jle
inc
and
pop
xchg
sbb
ds
rcrl
mov
aad
jg
sub
stc
ja
pop
lcall
pop
push
arpl
insb
call
adc
push
lret
mov
enter
leave
adc
movsl
xchg
mov
rcrb
or
sbb
adc
lea
mov
push
mov
inc
mov
adc
stc
loope
sbbl
fstpl
xchg
xchg
xor
repz
mov
inc
dec
sbb
imul
sbb
xor
test
sub
pop
adc
add
mov
inc
cmp
nop
dec
or
mov
mov
xor
int3
fcomi
xchg
test
std
cmp
pushf
xchg
inc
sub
xor
in
inc
test
ret
or
sub
divb
or
jmp
insb
fs
cmp
and
hlt
sbb
out
pop
out
mov
inc
pop
mov
cmp
daa
shrl
std
push
push
or
mov
mov
cmpsb
daa
orb
sub
movsb
out
sub
xor
add
xor
xchg
les
test
enter
loope
mov
andb
fs
cmp
mov
pop
jp
xor
popf
outsb
insl
cmc
mov
ret
and
aaa
adc
cld
ja
aam
sub
push
mov
test
adc
iret
dec
xlat
cmp
lret
mov
movsl
mov
adc
in
lods
outsb
and
dec
adc
inc
push
iret
jmp
cmpsl
pusha
test
xchg
loop
sbb
test
inc
add
pop
in
mov
push
fnstenv
mov
scas
xor
and
out
rclb
sahf
lret
scas
push
lea
data16
or
bound
aad
movsb
shll
out
in
lds
call
jb
imul
pop
cmpsl
out
scas
std
mov
jle
movsb
cmp
xchg
scas
mov
ja
ja
push
sahf
shrl
sub
xor
shll
aas
mov
jbe
mov
xor
add
mov
cmp
fwait
jmp
mov
jl
mov
add
sbb
mov
and
fnstcw
call
insl
inc
cmp
test
push
cmp
fadds
call
pop
popa
jp
mov
inc
push
ja
in
daa
mov
sbb
dec
lret
jns
sub
das
xor
ret
arpl
xor
xchg
scas
sbb
mov
push
cs
hlt
sbb
push
mov
shrb
mov
out
push
cs
cmc
out
push
in
enter
mov
fs
icebp
jg
fwait
lods
loope
cld
xor
mov
pop
cmp
lcall
inc
or
scas
js
sub
clc
lahf
cwtl
add
and
cmp
mov
cld
sub
mov
shlb
fldcw
push
repnz
je
mov
and
xor
call
adc
or
xor
bound
movb
std
push
insl
push
loopne,pt
cmpsl
pop
je
or
and
dec
shlb
test
inc
jl
xchg
pop
test
cmp
addl
push
jp
adc
ljmp
jg
mov
mov
mov
in
sbb
cmp
xlat
decb
push
call
lret
jmp
dec
aad
stos
out
xor
mov
jnp
js
lds
mov
repz
adc
jbe
lds
mov
jg
jp
inc
push
test
mov
xor
cmp
stc
mov
lcall
and
dec
push
adc
mov
pop
cmpsb
jo
rolb
mov
dec
shll
test
bound
lret
inc
aam
pop
out
cmc
arpl
pop
or
jge
push
pop
adc
inc
mov
or
test
mov
in
pop
mov
push
cld
pop
xor
loope
leave
repz
inc
dec
movsl
aas
sbbl
push
and
lcall
arpl
int3
pop
mov
push
dec
push
gs
push
pusha
cs
xchg
add
mov
and
imul
in
in
jne
dec
jp
or
mov
orb
push
push
mov
adc
aaa
sub
jo
mov
lret
sub
rorb
aas
dec
jbe
cmpsl
imul
lds
add
jmp
loope
scas
mov
mov
cwtl
test
jne
mov
fsts
das
xor
insl
mov
jle
ds
ss
jp
sub
jno
addb
in
scas
rol
das
xor
js
mov
sub
test
stc
and
leave
sub
mov
jmp
aas
sbb
aaa
sbb
inc
push
mov
xlat
filds
adc
cmpsb
fcoml
dec
lahf
xor
cltd
pushf
scas
int3
ficomps
es
jbe
mov
aas
push
and
lods
pusha
lods
pusha
in
insb
popf
jo
fxch
lret
imul
pusha
js
mov
inc
inc
outsb
lret
addr16
add
clc
leave
push
mov
in
fsubl
or
cmp
out
inc
in
dec
cmp
rclb
and
push
jno
imul
lods
or
repnz
dec
inc
xor
adc
ja
in
sbb
in
mov
jb
xor
inc
xchg
fs
hlt
imul
loope
push
loop
stos
fidivl
inc
mov
mov
inc
sub
xor
mov
and
mov
jnp
arpl
xor
mov
or
in
inc
dec
sbbl
xchg
addr16
loopne
xor
in
and
sti
inc
imul
in
xor
cltd
mov
adc
lods
cmp
add
cmp
mov
lahf
add
mov
dec
cmpsb
mov
inc
inc
and
and
repz
leave
sub
or
arpl
bound
in
out
inc
andl
mov
addl
aad
push
sbb
stos
insb
scas
pop
loopne
mov
pop
cld
dec
pop
sub
mov
in
add
in
cmp
pop
aas
loopne
pop
inc
insb
inc
test
inc
xchg
sbbb
pop
push
popf
test
cld
and
ss
cltd
cmp
adc
mov
popa
insb
loope
jp
mov
xor
out
insb
pushf
jmp
push
cmp
mov
pusha
adc
ror
xchg
sahf
inc
cli
es
jns
mov
sub
inc
insl
mov
mov
imul
movsb
jae
mov
lock
shlb
cld
jae
movsb
jge
stc
or
cmpsl
jo
cmc
inc
inc
in
inc
dec
push
cmp
cli
aas
in
fiaddl
loop
sub
xor
sub
cmpsb
mov
les
mov
pop
sbb
cmp
cmp
vsubps
adc
in
xor
adc
sub
mov
lods
sbb
jb
sahf
loope
mov
int
xchg
xor
sbb
jb
mov
pusha
ja
mov
sub
xchg
add
xor
add
pop
std
shl
push
sarl
and
xor
out
and
dec
mov
adc
adc
lret
cltd
testb
lahf
lds
gs
adc
mov
outsl
adc
mov
iret
pop
scas
cmpsb
mov
xchg
shll
test
push
mov
jbe
aam
stc
mov
insb
test
or
dec
cmp
fcomps
cmp
in
arpl
mov
shl
mov
test
mov
push
stos
inc
outsb
fsts
and
xchg
roll
cmp
inc
incb
aas
leave
aas
or
sub
jle
jae
lods
cltd
mov
push
cli
cmp
xchg
aas
mulb
insl
mov
push
xchg
dec
jg
loop
scas
jnp
mov
jb
dec
imul
es
dec
lods
push
mov
je
mov
pop
jbe
stc
mov
mov
std
mov
dec
ja
addb
icebp
popf
add
xor
int3
movsl
lcall
or
das
pop
xchg
and
add
aaa
sub
sbb
lods
roll
mov
aad
inc
adc
movsl
xchg
mov
push
inc
dec
les
lea
and
cmp
push
into
lcall
fidivl
jns
sbb
cmp
mov
cltd
sbb
xor
stos
or
je
cmpsl
ds
mov
aaa
push
icebp
sahf
and
pop
push
xor
push
and
test
pop
xor
sub
fnstsw
out
sub
jl
cltd
jo
lods
aad
sub
mov
dec
xchg
dec
cmc
sahf
inc
dec
test
enter
lods
inc
popa
xchg
mulb
xor
in
outsl
mov
add
out
jae
ja
movsl
out
stos
int
sbb
cmp
cmp
pop
outsl
push
inc
mov
push
out
xor
jns
popa
cltd
mov
shlb
ret
movsb
jno
fwait
adc
jmp
ds
mov
add
add
sub
outsb
movsb
ljmp
jmp
lret
insl
inc
cltd
dec
aad
add
lcall
pop
lahf
jge
adc
leave
mov
jbe
push
mov
xchg
pop
ret
pushf
lods
pop
pop
xchg
dec
ret
jbe
jmp
addr16
or
pop
dec
mov
xchg
out
or
fnsave
push
enter
adc
mov
dec
sbb
shlb
outsb
dec
loope
jne
call
insb
mov
testl
out
arpl
and
mov
scas
lret
push
mov
cmp
push
movsb
rcrb
imul
ds
xchg
mov
popa
mov
and
mov
or
and
fcomi
push
testl
sub
lock
push
or
scas
sbb
andl
ljmp
mov
cmpl
xchg
pusha
pusha
jle
hlt
push
push
mov
pop
sub
repnz
cmp
orl
and
jl
push
cltd
dec
je
cmp
jmp
jne
jmp
enter
mov
mov
clc
repnz
lea
fistps
fdivrs
jns
cmpsl
push
pop
mov
mov
mov
add
dec
adc
mov
mov
jl
lock
mov
xlat
lods
add
insl
cmpsl
xchg
repnz
les
inc
mov
jns
imul
filds
mov
dec
xor
int
fisttpl
jae
lcall
mov
xor
mov
int3
outsb
mov
xchg
mov
movsb
adc
std
hlt
loop
xchg
pop
insb
inc
lahf
sarb
jle
pop
insb
xlat
ret
scas
push
fisubrs
cmc
sbb
or
inc
and
jno
add
cmp
adc
call
jl
jp
add
mov
cmpb
test
sub
aad
call
fistpl
or
mov
call
loop
idivb
loope
mov
lret
in
push
jle
into
in
lret
leave
data16
mov
stos
enter
mov
cwtl
inc
pop
leave
jne
xor
xchg
cmp
push
mov
js
out
push
lcall
adc
addb
aam
inc
pop
sub
idiv
mov
mov
fsubrl
jecxz
stos
dec
in
cmp
imul
test
inc
push
jp
push
ja
shlb
mov
stc
inc
pop
mov
mov
popf
cmpsl
sub
push
xlat
dec
sbb
mov
mov
nop
pop
jecxz
mov
cmpsl
dec
mov
push
xchg
cmp
insl
cwtl
enter
xchg
dec
int
mov
xchg
sub
inc
aaa
jae
push
ds
lds
cmp
cmpsb
imul
xor
ja
mov
xchg
or
scas
in
js
ret
ret
push
jnp
loopne
lahf
jp
mov
push
pushf
push
jle
xor
pusha
mov
push
push
fsubl
ljmp
js
lahf
sub
iret
mov
push
nop
push
sub
lcall
push
mov
in
xchg
dec
dec
ret
shl
push
mov
sarb
ljmp
mov
pop
and
or
imul
dec
sahf
fisubrs
test
push
xchg
or
sti
pop
pop
mov
lds
add
xor
inc
in
ja
rcrb
in
sub
or
shll
sbb
jecxz
in
insb
hlt
xchg
mov
cltd
cmpsb
dec
pop
outsl
dec
in
fwait
sahf
add
xchg
sub
mov
notb
jmp
aaa
xor
ljmp
sbb
xor
stos
add
and
out
and
insl
sub
adc
push
jecxz,pn
and
or
out
test
clc
lahf
xor
sbb
into
or
fidivrs
outsl
mov
xor
enter
inc
xchg
and
andb
clc
lahf
mov
lods
daa
mov
xorb
movsl
sub
in
jb
shrl
cmpl
xchg
mov
push
repz
sbb
pusha
sbb
hlt
push
fnstsw
loop
pop
cmp
out
push
sub
xchg
shr
cmpl
in
push
jg
cltd
ss
jb
inc
dec
mov
imul
es
stos
xchg
in
pop
js
push
mov
cwtl
orb
icebp
sub
pop
popa
adc
mov
jecxz
xchg
xlat
popa
dec
iret
arpl
cmpsb
inc
lret
or
and
push
mov
gs
push
divb
sbb
xchg
sub
dec
lods
or
bound
scas
or
das
xchg
rorb
ret
mov
cltd
inc
cmpsl
jbe
xor
sub
mov
sub
shrl
fcoml
cwtl
or
xchg
dec
or
outsl
jl
add
lods
mov
out
call
cltd
xchg
mov
push
rcrl
lea
aaa
scas
sbb
mov
ljmp
cmp
mov
dec
test
sbb
adc
lret
cmpsb
sub
fisubrs
popf
mov
xchg
mov
pop
mov
ror
movsb
pop
hlt
pop
rol
mov
adc
mov
pop
or
jne
mov
inc
pop
cmp
sub
int
je
rcrl
pop
adc
lock
push
imulb
inc
push
cltd
mov
fdivs
sbb
insb
jge
and
adc
push
loopne
push
loope
jae
repz
cmc
cmc
add
shlb
clc
mov
pop
data16
inc
sbb
div
cwtl
push
mov
push
pop
inc
jmp
jbe
cmpsb
out
shll
xlat
or
mov
xor
sub
je
sub
aad
push
lock
nop
out
push
xor
pop
popa
cmpsb
push
xchg
ss
and
lods
or
adc
lods
icebp
push
dec
sub
repnz
or
addr16
stos
xchg
leave
xchg
lea
pop
fldt
xchg
or
sub
mov
mov
rcl
enter
or
cmp
mov
pusha
aas
out
ljmp
xchg
push
cmp
aad
jnp
enter
lods
stc
mov
outsl
mov
sbb
mov
ret
or
push
inc
cmp
jb
cs
mov
js
aaa
xlat
or
jno
lock
outsl
adc
inc
fimull
pop
sub
ret
orl
mov
call
iret
sbbb
dec
das
jp
lahf
cmpsl
ret
shrb
inc
ds
cmc
jnp
test
lcall
hlt
dec
jbe
cmp
test
adc
jecxz
sti
jmp
pop
iret
mov
shrl
jp
push
jp
jecxz
lods
push
mov
lret
mov
test
fmull
sbb
dec
jg
fnsave
add
into
add
push
xchg
jne
es
in
push
sbb
fcomps
lcall
stc
push
or
in
test
jmp
call
in
cmp
pop
mov
xor
bound
pop
std
mov
push
xchg
push
lret
das
inc
pop
or
ret
das
dec
ds
jle
mov
and
iret
add
fwait
inc
adcl
cmp
xchg
pop
loope
mov
cs
cs
cli
sub
adc
jno
mov
js
dec
fdivl
pop
sub
fists
push
mov
pop
jae
mov
push
jp
adc
jbe
dec
out
test
push
or
insl
movl
loop
jno
imul
mov
pop
add
push
add
push
sbb
adc
mov
pop
pop
sti
mov
push
inc
pop
mov
fsubrp
insb
inc
cmpsb
inc
cwtl
and
inc
aaa
lods
pop
jmp
pusha
clc
es
xor
pop
xchg
stos
sti
inc
sbb
cmpsb
movsl
mov
in
daa
xchg
mov
sbb
jns
mov
mov
push
push
inc
stc
xchg
xchg
adc
inc
and
cs
lock
mov
dec
mov
push
repnz
jl
imul
add
lcall
and
test
jp
sahf
adc
loopne
js
push
cs
dec
inc
mov
and
das
iret
xor
fsubl
fldl
mov
jl
mov
cli
mov
pop
xor
and
inc
insl
popf
paddb
ret
cmp
icebp
movsl
roll
push
aad
xlat
cwtl
mov
bound
loop
lret
loope
gs
cmpl
arpl
cmpsl
and
call
iret
sub
inc
out
pop
fcmovnu
mov
subb
fstp
fidivl
jg
pushf
push
and
lret
std
jns
adc
dec
pop
rorb
push
imul
inc
cmp
mov
les
hlt
mov
mov
pusha
es
or
cmp
or
jae
sbb
mov
pop
xor
mov
pop
jae
lret
xchg
pushf
pop
xlat
inc
call
pop
adc
push
mov
out
test
xor
or
sbb
mov
sub
or
inc
dec
sbb
aaa
hlt
xor
mov
sbb
sbb
sti
dec
xor
push
and
mov
mov
mov
pop
insb
or
inc
jo,pn
and
adc
sub
xorl
sub
add
pop
inc
fucompp
aaa
push
or
push
jo
add
das
adc
push
or
inc
stc
nop
sbb
aam
cmp
fcoms
test
ficomps
mov
or
sti
dec
mov
push
loop
out
sub
mov
lret
and
sbb
or
mov
sahf
pop
repnz
outsb
push
std
mov
fdivr
arpl
testb
xor
jg
rcl
and
dec
mov
in
test
lret
andb
clc
call
xor
ja
dec
add
dec
xchg
repz
push
pop
movsb
push
popf
sti
inc
loopne
fnsave
jo
mov
loope
out
cld
in
jecxz
js
push
mov
bound
ret
mov
or
push
lret
sbb
fsubl
mov
mov
mov
loop
dec
cmp
fdivl
sub
jmp
mov
push
dec
pop
push
loopne
fistpll
mov
add
bound
push
fidivs
xchg
adc
cmp
sbb
mov
or
ret
loope
pop
test
ja
in
subl
mov
stc
add
mov
xor
pop
out
adc
mov
ss
or
mov
test
cmp
inc
mov
xchg
fs
push
ficomps
sub
ss
inc
std
and
inc
mov
sub
out
jo
xchg
rcl
push
mov
fwait
mov
ljmp
cwtl
mov
repnz
pushf
cltd
inc
aas
shr
adc
mov
inc
lret
movb
dec
mov
xchg
jmp
cmpsb
cmp
mov
jg
xchg
push
pop
push
jmp
ret
mov
sub
in
and
or
sbb
scas
xchg
push
adc
aad
shll
lcall
pop
ss
cmp
dec
daa
sahf
fiadds
push
outsl
jmp
mov
pop
lods
and
aam
cmp
fnstenv
push
or
push
jae
pop
xlat
pop
mov
push
mov
inc
test
xor
xchg
out
mov
subl
mov
stos
mov
scas
jbe
popf
push
pop
inc
jne
scas
mov
and
lret
sbb
es
or
mov
xchg
dec
cmp
and
inc
adc
test
popf
xor
aaa
push
int3
xlat
je
repnz
shrb
push
dec
addb
loop
pop
xchg
push
pop
stos
xor
aad
imul
shrb
push
cli
mov
stc
int
lcall
inc
xchg
jns
add
inc
test
stos
and
and
sub
mov
loope
mov
jmp
push
jecxz
enter
jecxz
xchg
push
xlat
push
cwtl
push
sti
push
clc
aaa
lea
mov
pop
test
test
std
sub
xor
jl
or
jecxz
pop
addb
imul
add
int
or
push
aam
jnp
jo
sbb
cld
add
xlat
mov
shlb
ja
add
into
lret
add
stos
fucomip
inc
jb
aaa
fidivl
mov
push
sbb
pop
sbb
pop
or
xchg
xor
adc
fimull
out
mov
dec
test
lods
and
xor
mov
adc
outsb
out
push
icebp
sbb
fs
stos
test
shlb
addl
jl
xlat
mul
cli
mov
je
int3
xor
sbb
xlat
mov
fsubr
adcl
ja
sub
dec
inc
jecxz
loop
leave
push
xchg
adc
xchg
out
in
mov
gs
sti
mov
push
mov
mov
mov
pop
xchg
mov
clc
adc
stos
testl
adc
leave
adc
xchg
outsb
mov
lods
ds
mov
aas
dec
add
les
lods
mov
xchg
lahf
mov
sbb
or
pop
xchg
push
cmp
out
cmp
pop
adc
andl
sub
push
mov
inc
ss
cmp
popa
adc
mov
loopne
popa
popa
push
mov
pop
hlt
out
mov
test
or
out
test
dec
dec
lods
ds
lock
mov
inc
mov
xchg
inc
lret
in
xlat
mov
jo
lds
aas
add
fwait
xor
lahf
outsb
insl
jge
mov
push
push
sbb
std
bnd
clc
xor
jl
push
adc
push
mov
rclb
in
mov
pop
push
jecxz
stc
shll
cs
and
lds
adc
jb
sbb
cmpsb
mov
call
dec
dec
daa
sub
notl
or
in
push
push
sbb
imul
dec
ss
in
pop
adc
imul
movsl
repnz
push
cmp
lds
xor
and
cltd
xchg
mov
xchg
ds
jb
sbb
jl
pop
xchg
inc
or
cmp
or
sub
mov
js
mov
inc
add
mov
cmp
or
cmp
xchg
mov
and
sbb
addr16
jle
xor
sub
les
pushf
jle
into
cs
jo
sarb
in
sub
inc
push
cld
lret
push
leave
jno
aam
xchg
jb
sub
mov
push
jbe
adc
loope
and
inc
xchg
pop
jmp
lods
stos
push
loop
mov
and
jl
xchg
mov
and
push
inc
sbb
cmp
or
sbb
mov
mov
or
aad
sbb
or
daa
pop
movsb
push
add
outsl
mov
clc
pop
jbe
mov
cltd
shll
pushf
mov
mov
shl
dec
gs
push
loop
and
cmp
mov
mov
push
idivb
xchg
push
mov
sahf
push
xor
stc
stc
dec
add
add
and
sub
sub
cmc
scas
callw
or
call
push
jbe
popf
scas
jl
add
cmp
or
add
dec
cmpsb
sub
lret
add
lcall
or
aam
daa
xor
hlt
push
mov
jecxz,pn
push
cmp
imul
jecxz
xchg
es
jo
lahf
repz
test
sub
inc
loopne
jb
inc
jns
aas
sbb
insl
rcrb
or
xorl
xor
in
sub
mov
fadds
jns
xchg
xor
es
decb
in
jbe
int3
notb
fisttpll
sub
das
pop
xchg
inc
rorl
push
pop
arpl
xchg
les
aad
xor
mov
push
cmp
fwait
cwtl
outsb
std
outsl
lds
aad
mov
mov
dec
add
outsl
push
fsubr
jl
xor
dec
mov
cltd
jnp
and
sub
dec
leave
out
mov
mov
lods
mov
aaa
add
cmp
cmp
xchg
adc
loopne
aad
or
ficomps
fs
cmp
sub
icebp
pop
pop
test
or
mov
gs
outsl
xchg
jae
xchg
inc
xchg
std
or
cmovns
daa
shl
nop
and
bound
fbld
pop
jg
cmpsb
iret
cli
dec
mov
outsb
push
cli
loopne
mov
mov
daa
inc
pop
xor
mov
jno
dec
idivl
pop
sbb
jg
std
pop
movsb
or
popa
mov
hlt
mov
mov
jo
mov
sbb
cwtl
icebp
xchg
lods
or
inc
add
outsl
jb
mov
mov
mov
fisubrs
jg
push
sbb
mov
adc
into
mov
mov
call
and
into
out
mov
je
cmp
pop
les
push
mov
aad
sub
stos
cmp
xor
lods
das
outsl
pop
test
out
inc
inc
rolb
insl
in
int
jo
xor
andl
stc
xchg
push
mov
xchg
call
cmp
and
mov
ds
pusha
push
mov
pop
cmc
insb
push
and
and
out
inc
xchg
sbb
push
inc
sti
mov
xchg
ds
adc
stos
insb
lret
insl
jecxz
fcoms
es
and
xchg
lahf
push
adc
jnp
xchg
rorl
mov
mov
inc
cmp
ret
inc
loope
test
xor
xchg
sbb
pop
sub
clc
adc
pop
and
jnp
test
mov
xchg
xor
scas
and
mov
insl
sbb
insl
sbb
cmpsb
popa
jb
pop
sub
mov
into
mov
add
and
xor
push
sti
mov
mov
sti
lods
cs
mov
add
dec
and
gs
bound
les
xchg
add
adc
adc
jns
xchg
jecxz
xchg
lret
cltd
xchg
rorb
ljmp
fstpl
mov
dec
das
gs
push
mov
pop
sbb
and
sbb
std
stos
data16
ss
adc
aaa
add
or
inc
imul
ret
out
sub
aam
dec
loope
push
in
sbbb
inc
jmp
mov
imul
insb
lds
jg
pop
ja
fisubrl
fisttpl
icebp
xor
cwtl
inc
adc
jno
aam
mov
add
inc
test
daa
push
fbld
in
mov
push
fwait
push
aam
sbb
pusha
mov
addr16
mov
out
cmp
lock
jno
adc
add
lock
stos
lret
movsb
icebp
sahf
adc
cmc
mov
push
xchg
addr16
sarl
xor
aad
adc
push
fcompl
add
aas
mov
dec
inc
adc
fstl
dec
xchg
jle
inc
orl
sub
fwait
lret
pop
sbb
lahf
in
xor
pushf
cld
mov
outsl
bound
aad
dec
xor
and
pusha
fstpl
xchg
fld
jae
adc
cmp
sbb
adc
cli
faddp
mov
das
sub
xchg
adc
inc
out
dec
fnsave
mov
add
rolb
push
in
hlt
mov
or
adc
dec
lahf
cli
sub
mov
mov
fidivs
jo
pop
sub
out
xor
movsl
pop
in
inc
in
mov
mov
mov
adc
mov
sub
xor
add
xchg
cmc
jnp
sti
btl
add
mov
or
sub
decl
xchg
inc
ror
call
push
ja
ret
mov
pop
popa
cmp
xchg
hlt
dec
inc
jae
lret
cmp
out
movsl
mov
aas
or
in
pop
lret
add
cmp
lods
or
dec
nop
push
or
in
jmp
int3
mov
leave
fldenv
insl
inc
aaa
pop
imul
inc
outsb
rcl
fsubs
in
outsl
cs
fwait
dec
cmp
push
imul
cmp
es
mov
ljmp
mov
or
jns
test
lock
push
push
cld
cmp
loopne
lahf
xchg
inc
mov
xor
call
mov
fcmovu
cmp
scas
outsb
imul
cmp
adc
push
adcb
and
loop
pop
inc
jp
or
push
xor
mov
sbb
hlt
ss
xchg
sub
icebp
pushf
mov
movsl
mov
mov
pop
pop
inc
aas
inc
lods
outsb
popa
sarl
xchg
or
mov
mov
dec
in
xlat
repz
and
xor
ja
in
repz
sbb
and
insb
out
jnp
adc
mov
je
ret
lcall
jne
mov
mov
aad
jbe
cmp
dec
mov
or
or
push
pop
mov
movsl
xchg
mov
mov
iret
out
cld
push
mov
ret
stos
arpl
pop
lahf
cli
xor
iret
mov
lret
frstor
ret
subl
pop
addr16
mov
pop
ljmp
pop
inc
das
adc
cs
in
adc
or
adcl
testl
push
mov
jne
loop
jae
inc
jbe
sbb
shlb
cmp
fsts
aam
pop
cmp
mov
sbb
xchg
add
push
fistl
icebp
pop
pop
sbb
push
push
push
repnz
pushf
push
arpl
inc
mov
jle
add
cmpsb
dec
ja
jns
or
dec
mov
lea
or
test
adc
lods
dec
cmpsb
jle
dec
push
mov
and
pop
jle
pop
in
push
cmp
stc
sub
data16
ret
adc
out
dec
add
gs
or
sub
xlat
jns
push
fsub
inc
inc
lea
mov
pop
jnp
dec
or
rol
out
push
imul
adc
arpl
movsb
ss
xor
adc
rorl
test
mov
add
push
leave
fimull
push
shll
push
sbbb
cmpsl
dec
or
scas
lret
xor
push
mov
push
daa
les
jl
mov
dec
jle
jo
xor
lret
dec
sub
sar
pop
push
dec
movsb
mov
imul
push
inc
sub
test
jnp
rsm
dec
movsb
mov
xchg
enter
stos
add
sbb
movsb
je
add
dec
cmpsl
fistl
dec
mov
mov
les
pop
pop
stc
aas
dec
add
std
cmp
fmul
adc
mov
add
adc
aad
enter
mov
mov
dec
jp
shrd
aad
push
xchg
mov
sti
and
adc
push
lea
xor
inc
stc
imul
enter
jmp
cli
out
push
inc
in
push
imul
sti
xchg
mov
outsl
nop
dec
aas
dec
pop
fisttpll
add
aas
into
xchg
out
daa
arpl
or
js
mov
fst
mov
into
rclb
jno
scas
cmp
xor
pushw
test
mov
adc
mov
scas
jl
imul
fistl
push
ja
push
mov
rorb
inc
pop
sub
mov
mov
pop
add
loopne
cmpsl
es
sbbl
jo
in
pop
daa
imul
sbb
adc
xchg
rcrb
inc
sbb
lods
cmpsb
fnstcw
loop
loope
cwtl
fisttpl
test
lods
dec
out
sarb
sti
xor
cmp
cmp
test
xchg
movntq
movsl
inc
gs
out
fstpt
jbe
cmpsl
loope
pusha
adc
sbb
int
inc
jb
inc
aad
addl
mov
and
pushf
fs
adc
pop
arpl
mov
orl
testl
das
xchg
or
aaa
push
mov
cmp
xchg
xlat
icebp
pusha
std
dec
les
stos
daa
imul
sti
mov
getsec
mov
inc
ficoml
lods
push
mov
or
xchg
sub
push
test
mov
repnz
fsubrp
jp
das
push
lock
aam
or
icebp
jmp
dec
push
xchg
shr
insb
inc
or
jecxz
xchg
mov
xchg
mov
fidivrl
jmp
stos
ljmp
pop
or
inc
jge
jl
dec
mov
jg
adc
enter
mov
hlt
in
dec
inc
je
push
iret
stos
mov
shll
sbb
adc
sub
out
jns
test
loopne
mov
mov
xor
fisubl
jecxz
inc
or
and
movzwl
add
jl
pop
in
in
lahf
push
push
loopne
jp
push
ja
inc
inc
inc
repz
pusha
xchg
jmp
inc
subb
imul
xchg
dec
add
sti
lods
fmull
arpl
push
frstor
je
jb
lock
add
mov
cmp
repz
pop
jb
stc
inc
xchg
jmp
xor
and
mov
xchg
in
cld
push
repz
inc
jmp
ds
in
sub
lods
adc
inc
cmp
mov
mov
cmc
lcall
popf
cmp
xor
mov
stos
add
inc
in
aaa
call
jg
sub
or
rcr
adc
pop
jecxz
inc
pop
mov
push
mov
das
jnp
das
iret
xchg
sub
sub
jo
rorl
pop
je
xlat
sub
add
pop
mov
movsb
subb
jnp
xor
ret
add
sbb
ljmp
xor
xchg
mov
mov
nop
js
pop
push
pop
divb
cmc
jmp
ljmp
cmp
das
jbe
push
pusha
cld
jg
nop
sub
std
dec
daa
xchg
es
adc
movsb
bound
cld
mov
xchg
lea
dec
das
mov
shlb
shll
stos
clc
add
mov
adc
pusha
pop
lahf
adc
dec
js
mov
loop
jl
ja
xor
xchg
dec
mov
fldcw
adc
daa
ljmp
and
in
sub
and
in
std
test
xor
add
pop
fmull
mov
and
push
push
add
punpckhwd
dec
adcl
mov
out
loop
lock
pop
xchg
sbb
or
and
sub
loope
lods
mov
enter
ljmp
fwait
xor
push
dec
jge
xchg
xor
sahf
and
lea
ljmp
sti
sbb
mov
fcoms
pop
push
arpl
dec
cltd
jge
ljmp
pushf
sub
lcall
mov
jnp
mov
sub
mov
adc
stos
mov
cmp
xchg
popf
cmp
sbb
clc
pop
xchg
pop
push
mov
jecxz
bound
int
mov
mov
sbb
inc
cmp
fnsave
pop
push
sti
aaa
pop
push
or
pop
and
lret
dec
jle
jmp
in
xchg
cmp
lds
stos
or
out
mov
mov
out
incb
xchg
pop
lcall
lock
push
add
or
aaa
adc
mov
pop
decl
jne
mov
push
pushf
leave
testl
ljmp
jge
addr16
or
repnz
xor
out
sub
fsubp
adc
ljmp
cs
mov
std
lret
aaa
pop
cmp
pop
cwtl
lahf
fcmovnbe
fidivrl
lds
jl
adc
rcl
cmp
stc
into
bound
xor
sub
fdiv
js
dec
mov
push
sbb
cmp
sbb
cwtl
out
bnd
notl
add
fildl
or
inc
adc
std
sbb
mov
xchg
aas
adc
je
shl
std
les
data16
xlat
in
push
or
mov
dec
popa
insl
push
jmp
jl
std
addr16
xor
call
push
retw
and
jns
repz
cltd
lcall
adc
jmp
test
arpl
fsub
mov
test
decb
je
push
into
jne
dec
in
push
daa
jmp
and
insb
in
mov
sub
mov
xor
push
jb
adc
gs
jnp
sub
popf
sbb
pop
push
insl
and
inc
imul
lahf
shlb
xchg
or
or
mov
cmp
adc
cs
insb
mov
fwait
ss
outsl
icebp
pop
int3
push
leave
pusha
push
js
adc
enter
xchg
push
mov
mov
je
mov
add
cs
popf
add
mov
lret
push
lods
mov
and
test
push
cmp
ret
mov
xchg
xchg
in
inc
cmp
xchg
daa
add
cltd
and
lock
xor
cmp
mov
cmpsb
xor
mulb
int
cmp
dec
mov
lcall
jmp
or
mov
adc
dec
fdivr
mov
sub
aas
cmc
call
push
ja
and
lcall
pop
nop
mov
fld
clc
add
test
test
pop
faddp
ret
mulb
jbe
cmp
clc
xorl
jl
fwait
push
jmp
rorb
mov
lahf
mov
push
mov
adc
adc
sub
aam
pop
pop
iret
inc
push
inc
mov
and
add
xor
int3
dec
or
ds
sbb
jae
push
push
and
pop
push
and
stc
fs
outsl
repz
mov
mov
fs
jne
xchg
dec
outsl
adc
mov
mov
outsb
stos
or
std
add
xchg
jg
lahf
pop
orl
insl
imul
dec
insb
add
add
adc
xor
lods
or
lret
lea
jg
adc
pop
sub
push
push
jecxz
inc
cmp
aaa
jne
and
mov
cmpsl
clc
and
push
or
out
add
inc
mov
mov
or
jecxz
jp
test
or
into
dec
lds
ficomps
stos
push
sbb
ljmp
pop
sub
rcll
js
lock
mov
or
aad
pop
lahf
xchg
jge
inc
mov
dec
int
push
in
sbb
les
fistps
out
out
mov
mov
mov
jmp
hlt
push
and
clc
cmp
xor
push
pop
das
js
hlt
je
roll
and
adc
and
jb
or
stos
jmp
out
iret
into
shr
jle
ja
and
in
repnz
aas
outsb
gs
out
mov
and
aaa
ljmp
bsr
dec
xchg
fmulp
pop
aaa
cmc
int
inc
outsl
ds
pop
mov
scas
jae
mov
sub
pop
cmp
and
pushw
adc
loopne
and
fiadds
sub
jge
sbb
and
dec
enter
xchg
push
sti
mov
dec
outsl
mov
jmp
int3
dec
leave
movsb
aam
das
pusha
inc
or
dec
fwait
out
loop
movsb
pop
and
ret
xor
out
lock
cmp
fs
cmp
lahf
xchg
or
stos
pop
popa
test
insl
mov
sbb
inc
dec
addl
rcrl
push
cmpsb
mov
xchg
pusha
pusha
push
push
lahf
outsl
hlt
or
mov
xor
sbb
and
int3
mov
inc
or
mov
gs
rclb
dec
nop
test
mov
test
sbb
int
outsb
inc
mov
cmp
gs
movsb
stc
jno
xchg
iret
xchg
xchg
jo
cli
sbb
gs
stos
scas
movsl
xchg
jg
inc
sbb
jl
mov
push
cmp
jne
fistpll
iret
fadds
fwait
mov
mov
imul
push
dec
insb
or
dec
repnz
cmp
pop
push
dec
sbb
cli
or
mov
loopne
repz
mov
movl
inc
pop
mov
xchg
sbb
bound
stc
out
roll
pop
pusha
cld
or
rcll
push
cmp
je
add
cmp
add
fistpll
jne
push
bound
and
push
popa
mov
mov
mov
negl
xor
xorb
mov
lcall
psraw
or
pop
ja
mov
jp
push
fisubl
bound
or
scas
and
fwait
xchg
ja
in
mov
cmp
or
std
adc
imul
mov
xlat
mov
enter
arpl
fsubrp
into
pop
mov
mov
inc
mov
or
pusha
mov
mov
cld
pop
fstl
cwtl
and
std
cltd
lcall
scas
out
mov
mov
mov
cmp
lcall
movsl
mov
mov
mov
add
cmpsb
sub
lods
in
add
mov
xor
in
in
or
cmp
stc
pop
add
enter
loopne
nop
loopne
sbb
xor
shll
mov
inc
sub
sbb
jbe
and
mov
call
jbe
fimuls
gs
push
sbb
movsl
push
gs
test
jmp
rcll
inc
mov
jmp
sbb
mov
and
in
pop
push
cld
movsl
clc
cmp
je
mov
or
lret
loope
pop
and
pop
nop
outsl
jnp
sub
sub
adc
repnz
je
int
std
mov
xchg
mov
lds
or
movl
outsb
mov
insl
or
repnz
out
dec
lods
andl
hlt
mov
leave
ficompl
cmp
jecxz
add
les
aaa
fistpll
or
mov
jecxz
mov
mov
dec
xor
add
fnstenv
aam
ds
and
mov
push
xlat
ja
mov
mul
push
ja
add
jns
mov
imul
neg
hlt
jo
and
xor
push
fmul
out
lock
xchg
gs
dec
mov
insb
insl
outsl
or
jmp
sub
xchg
in
fsubrl
adc
sub
addr16
xchg
mov
mov
and
or
add
loopne
sbb
aaa
lea
xor
movsl
add
jp
push
scas
cld
mov
insl
mov
in
in
ljmp
mov
cmp
hlt
nop
mov
rep
mov
and
sub
adc
dec
or
and
mov
sti
sahf
roll
mov
pop
movsb
pop
mov
mov
adc
insl
daa
aam
cmc
ljmp
lret
pop
push
sti
dec
sub
aad
shrb
ret
or
xorl
lret
lret
test
xor
or
cmp
xor
add
lahf
es
lods
push
pop
test
xor
ja
aad
jns
xchg
pshufw
jae
mov
ficompl
mov
jmp
or
xor
pop
jno
lcall
mov
shr
lcall
testb
fsubr
fwait
lods
sub
scas
pop
iret
xchg
and
xchg
shll
pop
dec
xchg
sub
jns
cmp
adc
xorb
jle
sbb
mov
cmpsb
cwtl
pop
mov
jns
mov
push
pop
lret
mov
or
mov
je
mov
mov
add
test
add
sub
inc
jecxz
jns
movsl
rorl
or
or
add
xchg
and
loope
lret
clc
dec
fldcw
xchg
inc
or
mov
jecxz
pop
lcall
sbb
rclb
push
stc
lods
inc
sub
icebp
in
pop
fdivrl
cmp
xchg
inc
push
jne
dec
or
sbbl
jns
aam
loope
hlt
sahf
mov
loopne
fyl2xp1
dec
inc
mov
lret
inc
and
ret
lret
ss
sub
lret
xor
mov
out
lds
inc
push
dec
dec
mov
out
cwtl
js
nop
sarb
jnp
int
pop
fxch
pop
das
sti
jo
pop
xchg
inc
fsts
fldt
out
js
cwtl
mov
inc
addr16
es
popf
enter
ja
push
pop
sar
gs
xor
add
cmp
jo
mov
and
leave
inc
xchg
and
or
inc
insb
imull
imul
fmuls
inc
outsb
test
fidivl
mov
pop
jb
add
in
xor
fsts
mov
cs
or
in
jg
ss
dec
jle
cmpsl
mov
cmc
adc
pop
imul
xor
push
ffreep
icebp
in
xchg
negl
mov
add
sar
call
das
sbb
xchg
dec
hlt
cs
inc
loope
popa
fdivs
mov
fildll
sahf
popf
aam
lret
xchg
mov
sahf
sti
xor
loop
aaa
and
xchg
mov
lods
adc
int3
leave
jge
mov
mov
push
loop
mov
hlt
dec
stos
lods
mov
push
mov
cmp
std
or
sbb
adc
push
inc
sbb
cwtl
lods
sub
inc
and
inc
out
jl
push
lret
xor
xchg
ljmp
lcall
aas
jmp
mov
sbb
xchg
mov
xchg
xor
push
adc
sahf
pop
std
xchg
jmp
fwait
lret
cltd
rol
adcb
adc
pop
sbbb
fmuls
sub
jg
sbb
es
cld
int3
cwtl
jmp
lock
pop
mov
and
enter
mov
fstpl
add
fs
sbb
mov
or
fisttpl
and
mov
movsb
push
jne
mov
popf
mov
jns
adc
push
sub
and
cmpsb
scas
dec
cmp
inc
sbb
push
lret
sub
aaa
subl
push
mov
dec
pop
addl
adc
xor
xchg
xor
jne
lea
jb
pop
dec
out
xchg
les
jg
gs
xor
mov
mov
mov
xchg
loop
ficoms
xor
xchg
cwtl
inc
push
nop
out
imul
insl
das
jbe
in
bound
pop
gs
add
les
out
cmp
outsb
cld
popf
sbb
sub
orb
stos
movsl
adc
enter
xor
movsl
dec
cltd
xchg
xchg
aas
cs
loop
cmc
mov
inc
fisttps
test
test
xchg
sarb
jns
les
mov
mov
adc
inc
or
mov
fdivrs
fistpll
daa
shlb
and
xor
adc
push
push
jecxz
gs
addl
pop
inc
sbb
mov
loope
dec
and
cmp
dec
or
cmp
and
push
sbb
add
adcl
arpl
nop
ret
sysenter
add
push
pop
stos
jnp
push
out
stos
xchg
fiadds
mov
int
aam
mov
and
test
push
sbbb
cmc
fmuls
sbb
stos
loopne
pop
mov
repnz
or
pop
es
pop
push
push
cwtl
hlt
cmpb
shlb
int3
mov
popl
mov
mov
adc
xor
fstp
andb
xchg
adc
je
mov
pop
bswap
cmc
repnz
xor
stos
ficoml
push
xchg
push
cmp
aam
sub
outsb
clc
dec
xor
lahf
shll
mov
pop
mov
inc
push
mov
push
hlt
test
jne
push
not
pop
loop
punpckhwd
repz
add
cmpsb
clc
and
cmp
into
lahf
pop
sbb
in
and
adc
push
add
js
jo
add
jge
mov
shr
mov
fldl
sbbw
scas
addl
icebp
insl
mov
in
int3
mov
mov
aad
mov
mov
pop
movsl
pop
push
sub
xchg
pop
push
jnp
rcrb
ret
adc
jl
and
add
out
cmpsb
sub
sub
xor
pop
jae
out
lret
inc
and
in
in
loope
and
aas
ret
in
ja
les
in
sub
adc
stos
mov
mov
in
out
cmpsb
adc
jecxz
fnstsw
leave
stc
push
or
mov
adc
cmc
pusha
rorl
sbb
sbb
sub
aaa
movsl
add
xor
fsubrp
mov
ret
subb
jno
jmp
addr16
insb
test
ja
dec
fmul
inc
jle
pushf
mov
xchg
js
xchg
xor
lods
pop
sti
cmc
and
push
outsl
shlb
mov
mov
nop
cmpsl
jnp
setl
pop
stos
mov
sub
cld
scas
push
fcompl
mov
sub
push
adc
mov
icebp
sub
outsb
arpl
or
mov
rcr
jo
mov
push
fadd
cmc
adc
aaa
lea
enter
orb
cmp
pushf
mov
push
push
js
cltd
push
sub
int
dec
push
outsb
and
inc
fildl
push
and
popa
sbb
mov
mov
and
adc
imul
mov
es
mov
test
add
mov
lret
and
mov
pop
in
or
mov
test
cmpsb
test
and
mov
inc
fnstsw
jg
out
cltd
imul
sti
daa
stos
loope
scas
scas
scas
dec
pop
and
jge
cmpsl
sbb
push
repz
icebp
iret
fistl
inc
stos
sub
pop
xchg
cmp
or
pop
andl
sub
data16
insb
cmpsb
inc
mov
xchg
aas
pop
fimuls
les
or
xchg
jne
inc
xor
adc
or
cli
push
ret
into
lock
lahf
adc
cmp
add
xchg
mov
mov
hlt
pop
lock
mov
jbe
and
mov
repnz
push
jb
jge
xchg
jg
jg
inc
or
ljmp
leave
das
fsubl
mov
push
jg
notb
mov
out
enter
jp
or
les
imul
cmpb
outsb
int3
jecxz,pt
mov
pop
xchg
jmp
std
packsswb
xchg
sbb
inc
in
pop
cmp
jmp
jo
jl
xchg
push
inc
stos
popa
mov
pushf
mov
imul
xor
add
cmp
pop
sbb
fldenv
inc
iret
cld
xchg
sti
add
in
mov
lods
loop
dec
xor
mov
mov
adc
xor
shll
push
xor
or
or
mov
push
pop
test
xchg
test
sub
lcall
in
sbb
jg
mov
xchg
into
cmp
mov
adc
lock
gs
push
or
test
push
imul
icebp
pop
imul
enter
lock
sbb
scas
sarl
inc
push
sub
dec
rorb
dec
sbb
into
mov
cli
ljmp
sub
subl
lcall
mov
lods
sti
mov
mov
add
adc
ficoml
jge
sub
jmp
cld
xchg
pop
xor
pop
outsl
iret
inc
sti
mov
push
adc
mov
mov
int3
imul
orb
mov
cmp
add
fldcw
int3
test
add
vcvtpd2dqy
test
stc
xor
sbb
pop
xchg
mov
lods
aam
lods
pushf
cmpsb
js
pop
test
js
sti
pop
push
test
cmc
push
ja
repnz
dec
call
xchg
mov
cmp
pop
loop
push
sbbb
sub
inc
xchg
mov
mov
scas
add
jne
out
cmp
sti
inc
mov
xchg
or
movsb
pop
incb
cmp
jne
mov
xor
movsl
movq
fstp
inc
out
cmp
jno
lahf
sbb
push
inc
in
xorb
out
lds
mov
shll
lock
lret
movsb
loope
sbb
imul
call
inc
dec
sub
and
fisttps
mov
fimuls
inc
push
mov
or
bound
out
fmull
rcr
stc
pop
rcrl
push
aas
sahf
arpl
insb
int3
out
adc
mov
sub
and
dec
cmp
scas
sti
cmpsb
idivl
mov
test
jg
mov
das
sub
mov
in
ja
jbe
xchg
xlat
loope
fisubrl
and
xchg
cmc
cmc
shlb
lds
fcmovb
xchg
popa
orb
test
addr16
pop
dec
inc
insl
rol
stos
or
pop
cmp
pusha
popf
push
mov
mov
sub
mov
inc
push
ficoml
pop
jnp
pop
cmp
lret
cmp
pop
mov
lahf
aad
addr16
subl
sub
cmc
cmp
shll
stos
enter
leave
mov
jl
shr
pop
jle
pushf
xchg
cmpsl
or
int3
popa
jg
scas
je
jl
cltd
cmp
je
arpl
sub
fldl
mov
cmp
cmp
adc
stc
data16
mov
int
jecxz
xor
outsl
shlb
mov
xchg
ja
loop
fistps
lock
in
dec
bound
adc
sbb
cmp
inc
sbb
imul
enter
cltd
jmp
xchg
fcomps
fistpll
scas
push
adc
mov
insl
sub
sub
mov
movsl
inc
xchg
mov
mov
mov
das
inc
aam
out
mov
call
shrl
adc
pop
subl
cld
int3
sub
sbb
sbb
lods
dec
icebp
pop
mov
push
adc
sbb
fwait
cmp
jae
cld
mov
fsubrp
fxch
add
clc
add
cmp
pushf
jae
in
bound
mov
mov
mov
dec
in
scas
jne
mov
shlb
std
jl
mov
cwtl
sub
add
cli
inc
xchg
sub
add
mov
inc
imul
mov
inc
jnp
out
mov
repz
xor
pop
inc
roll
and
nop
or
jbe
lcall
xor
cwtl
rorb
ljmp
subl
cs
dec
mov
sbb
cld
adc
fcmove
jo
add
adc
jae
xchg
test
pop
dec
xor
roll
test
jne
pop
sti
dec
aaa
lea
inc
stos
lock
mov
add
lods
movsb
cmp
in
xor
fimull
mov
gs
dec
mov
jg
popf
fcmovne
pop
sbb
push
inc
inc
loope
fs
mov
push
add
pushf
aam
mov
mov
or
pop
push
fnstenv
dec
dec
aam
in
push
xchg
pop
pop
push
and
fnstsw
push
and
out
xchg
bound
out
loop
mov
stos
sahf
pop
imul
in
and
out
stc
inc
arpl
data16
addr16
dec
imul
out
das
shl
dec
add
xor
jae
jb
and
mov
add
leave
xchg
adc
cwtl
mov
push
lret
inc
jg
sub
test
out
mov
addr16
cmpsb
fsubl
sub
cltd
fs
sarl
loope
imulb
or
sub
aad
stc
out
sub
pop
scas
sahf
sbb
stos
lahf
adc
mov
shrb
and
addb
mov
stos
add
fisubrl
or
arpl
mov
push
ljmp
push
fiadds
fimuls
mov
pop
cmpsb
xor
test
push
loope
sbbb
cmp
out
push
push
mov
adc
xchg
pop
cmp
mov
imul
cwtl
fstps
lods
inc
repnz
add
and
out
sub
pop
mov
push
jb
cmp
iret
sub
cmp
mov
jno
adc
inc
push
jle
test
sbb
inc
sbb
shll
push
and
mov
sbb
sbb
movsl
sbbb
lret
adc
fistpll
pop
cld
pop
cmp
sub
ds
std
dec
cmp
mov
hlt
aam
xor
cmp
ljmp
add
loope
movsb
mov
mov
inc
in
out
hlt
cmp
inc
and
lret
and
mov
ret
test
inc
mov
cltd
stc
xchg
xor
jb
in
xchg
mov
stc
sbb
movsl
or
in
mov
sbb
mov
test
mov
jb
lret
js
sbb
fisubl
js
xchg
add
sub
incl
inc
stos
push
scas
cmp
sahf
dec
int3
mov
pop
lods
aad
mov
xchg
movsb
push
dec
inc
cmp
adc
nop
out
aas
jmp
mov
cmpsb
xor
movsl
andb
jns
add
fists
out
pushf
xor
or
test
xchg
decb
or
fwait
inc
pop
test
imul
cmp
es
imul
inc
test
mov
js
shll
add
ret
mov
fsubrl
cmp
into
xor
sbb
pop
xor
xchg
stc
add
imul
add
push
popf
repnz
xor
pop
loope
inc
push
dec
jg
inc
sbb
mov
cmc
fldt
pop
out
pop
sahf
push
loop
jne
cwtl
sbb
sbb
and
sub
push
fbld
xchg
mov
sub
fsubs
push
and
shll
andl
push
hlt
sbb
pop
mov
outsb
addr16
lods
add
mov
sub
cld
jg
and
mov
cmc
adc
test
pop
add
xchg
insb
jmp
fdivrs
mov
adc
pop
xchg
out
adc
aas
das
sub
inc
pop
xorb
int3
adc
mov
lahf
int
push
test
aad
jo
out
xor
inc
inc
jnp
xchg
out
bnd
and
dec
movsb
adc
hlt
cmp
jae
pop
int3
test
outsb
lock
subb
test
cmc
es
addr16
loop
fidivrl
sbb
loopne
orb
mov
sub
adc
mov
mov
mov
mov
adc
orl
jecxz
movsl
add
into
lock
xor
mov
idiv
pop
push
push
sub
mov
psubb
gs
mov
insl
cltd
incb
sbb
and
pop
mov
lea
fdivr
rcl
iret
mov
sti
inc
and
dec
iret
fsubrs
cld
pop
imul
or
js
adc
xlat
repnz
pop
ret
mov
xchg
sbb
inc
leave
or
lret
mov
addb
dec
nop
push
sub
lahf
test
sti
mov
jp
xor
pop
aas
adc
jo
cld
pop
lods
fnstcw
ret
out
push
int
data16
std
std
bound
pop
pop
iret
mov
adc
popa
pop
pop
stc
or
jno
sbb
nop
arpl
add
into
jmp
popa
mov
insl
mov
pop
lret
push
imul
scas
jle
sub
cmp
jnp
rcr
int
jb
fnstsw
lret
adc
mov
mov
mov
nop
push
ja
mov
aaa
jne
out
jle
or
test
xchg
movsb
cmpsl
sub
lret
mov
aam
mov
int
addb
shrl
je
repz
mov
dec
push
iret
clc
das
or
cmp
clc
mov
push
stos
or
xchg
hlt
sub
pop
fdivrl
lods
pop
popl
pop
dec
cwtl
sbbb
sbb
jecxz
shl
mov
push
or
fdivp
mov
mov
stc
mov
xor
or
into
adc
in
inc
dec
and
outsb
test
std
gs
jmp
cmp
jmp
cmpsb
lds
setbe
in
add
mov
in
jmp
int3
mov
cmc
adc
pop
imul
fisttpll
ret
mov
ljmp
mov
mov
adc
or
push
xor
push
mov
adc
add
xor
mov
mov
fcoml
icebp
and
sub
xchg
lds
jle
cmp
mov
add
jnp
arpl
js
fmuls
out
adc
xor
mov
lock
dec
push
push
iret
xchg
loop
ror
in
shll
push
sar
dec
cmp
mov
jp
xchg
mov
sti
fidivrl
xorb
and
dec
or
mov
mull
mov
mov
push
xor
test
sub
dec
inc
sub
sub
inc
dec
cltd
sub
ja
daa
push
gs
scas
or
cmp
cmpl
lret
jecxz
stc
dec
insl
lods
bound
in
das
sub
xor
scas
test
fildll
jmp
outsl
das
inc
jecxz
sahf
outsb
aad
jmp
cmpsb
lcall
push
mov
inc
push
push
pop
test
mov
lock
out
push
rol
sti
sti
arpl
pusha
sbb
adc
out
in
push
ja
xchg
mov
xor
icebp
push
mov
in
sbb
sub
inc
mov
or
inc
ja
cmp
aas
xlat
pop
or
mov
cs
shll
int
lock
ds
and
sbb
das
sub
sbb
xor
adc
pop
sub
aaa
loop
add
push
push
mov
popf
popa
push
xor
es
adc
xor
sub
dec
lods
and
mov
cmp
sub
pop
loop
aam
clc
sbb
push
and
jae
xchg
xor
imul
xchg
popf
in
inc
push
lahf
andl
jge
mov
mov
in
hlt
lea
popa
fwait
inc
bound
and
call
ficoms
and
shl
xchg
mov
xor
cwtl
test
or
sbb
rclb
insb
lock
pop
dec
aaa
gs
fdivrs
xchg
fcoml
in
jbe
fidivs
mov
loopne
jle
mov
push
pop
mov
fnstsw
jmp
call
xor
xchg
jmp
dec
or
jbe,pt
pop
inc
test
dec
ret
xrelease
leave
sub
jns
push
or
cld
jb
xchg
repnz
xor
test
xor
mov
insl
jp
jo
jg
loopne
jmp
test
xor
icebp
mov
in
sub
push
mov
push
and
pop
into
adc
aam
stos
cwtl
sbb
jecxz
mov
sub
mov
pop
sarl
mov
and
mov
xchg
mov
adc
dec
cli
arpl
inc
xor
pop
decb
mov
fdivr
popf
mov
enter
fdivrl
frstpm(287
mov
xlat
aam
dec
imul
mov
outsl
inc
fcmovnu
aas
cltd
mov
repnz
mov
sbb
gs
incl
push
aam
imul
add
and
ja
jb
fwait
aas
mov
out
mov
cmpsl
mov
adc
push
jp
scas
lahf
outsb
divb
mov
int
pop
jno
int
xlat
jecxz
test
imul
fdivrs
jo
mov
stc
mov
enter
push
ficoms
xor
shrl
xchg
sub
or
cltd
mov
xor
iret
xor
sbb
sbb
push
int
pop
fisttps
in
or
sbb
xlat
out
jb
popl
inc
fsubp
lret
fwait
mov
ds
fdivrs
lea
dec
fisubs
scas
push
and
popa
sub
ds
push
loopne
sbb
aam
mov
pop
and
sbb
ds
inc
jecxz
cs
or
aaa
or
mov
push
mov
xor
cmpsl
mov
leave
inc
cld
add
or
ds
cmp
xchg
adc
pop
dec
cmp
sub
sbb
test
adc
pop
push
xchg
mov
fcomps
sbb
add
mov
xchg
add
dec
mov
sbb
cmpsb
mov
inc
ret
xor
cmc
mov
dec
int3
call
mov
push
and
xorb
inc
nop
test
adc
rcrl
mov
xor
pop
push
jmp
fldt
sbb
jae
mov
in
adc
or
addb
shl
out
imul
add
dec
mov
negl
pop
out
xchg
or
dec
lea
and
jge
mov
push
pop
movlps
mov
aam
fsts
mov
xchg
jnp
jecxz
cli
pop
mov
mov
clc
icebp
movsb
inc
test
outsb
outsb
push
int
xor
cmp
subb
lea
outsb
add
data16
jp
in
ret
addr16
pop
sub
addr16
movsb
inc
cld
mov
in
sub
push
subb
push
mov
inc
lahf
xor
ja
pop
fadd
cmp
push
ret
mov
sbb
sbb
dec
popf
fisubl
sub
sbb
enter
aad
loopne
mov
xchg
out
int3
xchg
and
mov
jge
add
cmpsl
and
push
lea
dec
icebp
test
cwtl
xchg
imul
movsb
fs
sub
sbb
popa
decb
inc
pushl
adc
in
sbb
or
cmpsl
jbe
sbb
test
xor
mov
jmp
pop
test
mov
fisttps
sbb
jne
clc
loop
or
xchg
mov
movsb
imul
add
hlt
repnz
pop
inc
ljmp
das
push
mov
shrb
call
add
movsl
subb
xchg
mov
lret
lods
nop
add
jns
mov
pop
iret
adc
ja
xor
in
adc
sahf
popf
inc
add
or
xchg
dec
incb
insl
insb
mov
fwait
sub
subl
dec
ret
std
rcll
stos
in
jmp
je
xchg
push
aam
dec
popf
fs
enter
lock
inc
cmpsl
gs
shlb
add
jns
cmp
nop
or
popa
stos
jmp
or
or
push
sbb
pop
mov
fistl
cwtl
fs
flds
ficoms
hlt
imul
push
or
sub
and
mov
mov
mov
addr16
pushf
scas
andb
cwtl
daa
cmp
adc
sbb
mov
fstpl
mov
push
cltd
xor
fstps
xchg
pop
or
mov
ret
je
aaa
push
ja
sbb
test
adc
loop
sbb
adc
aam
pop
mov
adc
xchg
push
cmp
sahf
push
push
lret
jg
mov
out
inc
test
hlt
or
mov
dec
xor
in
stos
jbe
mov
pop
imul
or
lret
test
inc
inc
nop
loopne
dec
fnstsw
xchg
int3
imul
shl
jmp
loopne
xchg
mov
ficoml
and
inc
addb
test
sub
jecxz
cmp
xlat
cmp
bound
test
loopne
pop
pushf
lahf
dec
jg
call
xlat
adc
xchg
test
orl
dec
stc
test
mov
jns
cmpsl
pop
add
fstpt
add
faddp
dec
aad
jae
xlat
mov
out
lea
mov
inc
xchg
or
and
cmpsb
mov
testb
push
sbb
inc
and
rolb
mov
pop
or
cmp
dec
outsb
pushf
lcall
jne
or
jmp
sbb
sbb
cmp
shlb
add
push
pusha
rclb
mov
inc
rcll
mov
pop
add
cmpsb
and
stos
mov
mov
cmpsl
popa
fcoml
scas
add
push
mov
sbb
xchg
jmp
push
int
lods
jo
adc
cld
pop
popa
ja
pop
jmp
ljmp
mov
mov
pop
xchg
jle
mov
push
inc
dec
in
adc
shrl
jnp
mov
std
das
sbbb
in
mov
lods
cltd
ja
mov
jl
popa
loop
das
imulb
pop
mov
test
cltd
sub
inc
or
push
add
xchg
call
pop
pop
pop
popf
mov
push
rolb
dec
push
nop
les
jbe
jb
jae
fcompl
popf
sbbl
mov
xor
add
and
cmc
loope
arpl
jns
push
subb
sub
ss
push
addr16
ljmp
cmp
mov
dec
pop
and
push
aam
mov
std
out
xor
cmp
std
push
xor
xchg
mov
inc
add
and
mov
xor
mov
push
inc
or
cmp
loop
push
lret
xor
push
pushf
xchg
test
lcall
jg
jbe
fwait
lods
pop
out
mov
cmp
jecxz
jnp
roll
mov
pop
test
pop
out
and
xor
push
mov
out
pop
and
mov
fs
fcmovu
jecxz
pop
fnstenv
cmp
mov
sbb
mov
jge
cli
push
inc
pushf
adc
rolb
push
sub
xchg
nop
sub
sub
imul
push
mov
inc
inc
out
mov
lret
fdivrs
mov
test
and
mov
leave
test
nop
xorl
cmp
subb
mov
push
je
out
pop
jb
imul
push
push
inc
ficompl
stc
sbb
or
mov
lea
xchg
test
push
cwtl
mov
lret
push
lret
cmpsb
dec
lcall
xor
pop
mov
lahf
adc
outsb
adc
pop
sbbb
mov
iret
adc
insl
insb
pop
stos
push
into
in
out
jnp
shlb
jo
cmp
mov
shrb
jg
jo
fidivrs
jno
mov
add
out
lds
lahf
cli
insb
into
and
jmp
adc
dec
xchg
stc
hlt
xchg
pop
mov
jno
adc
lret
mov
insl
xchg
pop
into
inc
xchg
out
in
ret
inc
cmp
into
push
push
out
mov
movsb
cmpsl
cmc
sti
xchg
pmulhuw
enter
aas
dec
scas
fiaddl
xor
enter
je
rol
inc
loopne
push
mov
int3
jns
push
pop
in
repz
xchg
fdiv
push
in
notl
pop
push
add
push
and
cmp
xlat
and
les
xor
xchg
insb
es
xor
in
incb
or
mov
ja
inc
outsl
ds
push
adc
fistpl
cli
pop
cmp
shll
shr
jae
push
cwtl
je
shl
test
pop
push
jb
inc
mov
inc
jns
clc
cmpsl
stc
mov
stos
mov
or
int3
popa
cli
add
shl
std
adc
sbb
sbb
mov
pop
iret
pop
std
jmp
lock
pop
mov
cmp
xor
xor
out
lods
adc
popf
mov
sbb
inc
cmp
cli
pop
out
mov
or
and
inc
in
aaa
das
subb
arpl
mov
cltd
sbb
adc
sub
inc
jns
or
aad
mov
jo
sub
sbb
roll
jbe
xor
adc
xor
jl
ljmp
mov
and
std
pop
fsubrp
pop
add
js
and
and
lret
mov
dec
xor
imul
jo
shl
dec
fwait
mov
out
cmp
jmp
ss
lods
sub
divb
mov
jmp
ds
dec
xrelease
popf
cltd
dec
jo
bound
js
push
add
cmp
pop
push
lret
insl
inc
fisubrl
into
xor
enter
sub
fistl
jae
mov
jnp
push
add
xor
fcmovbe
pop
std
xor
cmpsl
testl
pop
xchg
pop
addr16
jbe
inc
stos
jo
pop
add
stos
in
push
aaa
mov
jle
hlt
nop
pop
inc
jb
cmpsb
mov
pop
xchg
mov
subl
inc
and
imul
es
leave
mov
insl
sbb
imulb
imul
ss
adc
call
pop
test
jp
mov
fimuls
and
out
int
push
jl
daa
push
and
add
and
sbb
xor
mov
repnz
aas
pop
je
in
sub
mov
sub
and
pop
jmp
aaa
sbb
subb
mov
inc
hlt
push
sub
aad
push
inc
cwtl
dec
mov
xchg
mov
xor
dec
mov
xchg
rol
and
sar
addr16
inc
sub
inc
test
aaa
test
add
push
jp
test
mov
stc
inc
sub
test
mov
mov
push
iret
xchg
and
je
test
lods
and
xchg
aad
fucomip
nop
jne
push
ret
mov
jbe
push
popf
int
pop
arpl
mov
push
mov
xchg
insb
out
or
add
push
or
pop
mov
addb
cs
push
sbb
mov
mov
sub
movsl
mov
in
andl
or
sbb
mov
sbb
and
in
mov
dec
push
sbb
ret
and
in
push
lods
or
sub
dec
push
mov
pop
mov
fpatan
xor
int3
fprem1
into
mov
insb
or
xchg
div
sti
pop
pop
push
xor
cltd
jecxz
out
lret
cli
aaa
cmp
loope
push
jb
int
dec
faddl
inc
xchg
sbb
out
mov
push
leave
ja
test
imul
jne
mov
inc
data16
scas
dec
cs
jl
fstpl
and
call
out
push
clc
mov
pop
dec
mov
inc
fiaddl
mov
es
out
adc
xlat
push
loop
xchg
test
adc
cwtl
push
cld
out
and
sbb
testl
adc
leave
leave
movsb
in
push
cld
jge
push
popa
cmp
sbb
rclb
sbb
xchg
aas
inc
pop
push
sbb
push
xchg
xlat
stc
in
xor
jnp
rolb
dec
pop
dec
adc
sub
out
push
push
pop
std
and
nop
inc
cwtl
push
sbb
pavgw
mov
aaa
popa
es
mov
into
rcll
inc
stc
jb
lods
out
sbb
push
or
cmp
push
loope
push
popf
inc
cwtl
nop
test
mov
push
lret
mov
xlat
jle
mov
and
xchg
ljmp
pop
bound
cmp
fbld
inc
adc
std
dec
test
xchg
lahf
jne
cmp
popf
in
sub
lods
pop
outsw
and
cmpsl
sarl
scas
sbbl
adc
push
pop
lods
pop
cwtl
sub
addr16
mov
or
inc
lret
je
bound
pop
test
adc
xlat
scas
ret
jb
sub
add
sub
ficoml
testb
loope
sbb
mov
mov
scas
inc
pop
sub
pop
addr16
je
sub
imul
pop
push
sbb
and
inc
inc
lea
loop
jae
mov
addr16
mov
inc
and
shl
sub
mov
adc
xchg
test
sbb
mov
hlt
jae
mov
jns
cmp
fdivr
and
mov
insb
std
jne
push
xlat
loopne
das
repnz
movsl
or
popa
pop
popf
adc
add
movsl
jnp
hlt
out
faddl
and
cld
xor
adc
enter
jnp
push
adc
dec
fwait
inc
push
std
cmpsb
das
sub
rcrl
inc
pop
pushf
adc
pop
sub
rol
ljmp
add
xchg
push
cs
lret
mov
pop
sbbl
mov
pushl
push
pop
repz
add
aaa
cld
cmpl
stos
sbb
sbb
aam
in
sahf
mov
sub
pop
jnp
lcall
cmpsl
out
pop
mov
or
jnp
or
cmp
inc
inc
xchg
cmp
dec
sbb
mov
adc
cmp
inc
sub
addb
call
ja
xchg
push
out
pop
jb
xchg
addb
sub
jne
add
nop
mov
dec
pop
or
and
sub
out
push
mov
push
pop
stos
icebp
push
out
xor
shr
sub
mov
xchg
mov
pop
ret
xlat
hlt
inc
pop
dec
pop
sub
or
dec
into
test
push
sbb
sbb
out
push
mov
inc
fisttpl
insl
dec
or
sbb
fadds
xor
adc
fcmovne
or
mov
mov
or
or
mov
int3
xor
cli
loopne
mov
jecxz
mov
arpl
data16
out
mov
mov
loope
stc
push
sbb
jecxz
xor
dec
adc
jbe
loop
hlt
popa
ljmp
scas
shr
adc
dec
dec
push
push
fwait
mov
sub
hlt
push
cmp
cli
arpl
repz
stc
loopne
js
dec
shr
std
jbe
lret
insl
inc
inc
sahf
cmp
inc
fiaddl
mov
hlt
and
xchg
mov
mov
rcl
cli
fimuls
daa
test
fninit
mov
or
es
in
adc
xchg
and
xor
mov
dec
or
pop
jge
jae
jo
mov
push
cmp
and
pop
fwait
lods
mov
mov
mov
cmp
sub
mov
mov
push
aad
cs
jo
adc
xor
or
cltd
and
fldenv
inc
pop
pop
ficomps
sbb
ret
cmp
dec
pop
scas
daa
out
sbb
inc
sbb
hlt
xchg
mov
add
aaa
sub
add
out
cli
sub
sbb
aad
into
inc
dec
ret
add
jno
mov
add
mov
or
pop
dec
punpckhdq
fistl
or
or
and
add
dec
hlt
mov
clc
mov
cmpb
mov
notb
push
push
das
jo
adc
pop
mul
lds
lods
leave
sbb
fisubrl
clc
aaa
or
add
repz
lods
out
pop
xchg
cwtl
lret
mov
test
aad
sub
add
mov
xor
cs
repz
out
sub
out
mov
sti
xchg
es
mov
imul
mov
push
lcall
data16
mov
sti
inc
push
scas
iret
sti
or
sub
xchg
xor
mov
pop
or
inc
leave
insl
enter
sub
cs
stos
nop
test
jecxz
and
ss
mov
mov
dec
pop
fisubs
gs
and
xor
arpl
out
fsubs
sub
jo
ja
pusha
leave
stc
out
cmp
xchg
out
lods
imul
adc
leave
mov
cmp
fwait
push
jb
mov
sti
mov
pusha
fmuls
jmp
lock
imull
xlat
cmp
flds
pushl
aaa
sti
mov
daa
fldt
int3
xchg
or
sbb
shlb
stos
in
test
push
rol
push
loopne
add
pop
add
enter
sarl
fiadds
jmp
lods
test
lods
jmp
les
filds
ret
cmc
cltd
push
push
jb
jge
insb
stos
arpl
rcrb
inc
push
mov
loop
cmc
imul
cmp
add
sbb
mov
mov
jmp
xchg
jmp
adc
inc
push
shrb
cli
jbe
pop
fisttps
mov
cmp
jle
pop
fidivrl
xor
and
pop
xor
push
jmp
sbb
cmp
stos
xor
and
cmp
or
dec
or
mov
scas
sub
cmc
inc
add
push
mov
rorl
out
pop
xchg
lods
in
cmpsb
cltd
cmp
adc
fdivs
or
pop
xor
popa
mov
in
dec
sub
mov
jnp
or
repnz
outsb
mov
mov
test
cs
mov
jmp
repz
in
ljmp
pop
inc
stos
fnstcw
push
pushf
mov
fbstp
push
jo
in
jns
mov
xlat
or
push
mov
aas
xchg
fcmovnbe
es
insl
sbb
daa
icebp
shl
sub
pmaxsw
test
leave
mov
push
ret
pop
imul
cld
out
loopne
das
sub
aam
jo
sub
ljmp
pop
sbb
xlat
mov
shrb
cmpsl
sub
xor
mov
pop
rcll
daa
mov
add
push
pop
cmp
lods
mov
dec
mov
mov
mov
test
mov
daa
jmp
in
jo
or
into
sbb
fs
lret
rcrl
xchg
add
cld
jns
out
aas
roll
dec
add
lcall
scas
pop
les
dec
push
xchg
push
xor
xchg
fidivs
pop
daa
mov
mov
shrb
mov
popf
pop
ret
jae
xchg
test
add
add
in
mov
iret
fcmovu
aaa
out
and
push
cmp
pop
negb
sarb
dec
lods
jae
lds
mov
in
add
rorb
mov
popf
pop
and
ja
pop
xlat
add
fcmovbe
mov
nop
sbb
hlt
scas
add
lcall
xorl
mov
push
loop
stos
aad
mov
pop
xor
mull
push
mov
mov
or
lods
dec
mov
fcompl
fsts
in
and
insl
je
inc
push
pop
lds
dec
and
lods
adc
test
je
or
inc
mov
ficoms
dec
sbb
inc
sub
adc
push
out
mov
in
dec
or
mov
cmova
rcll
callw
loopne
lcall
mov
ret
dec
and
imull
test
xor
cmp
outsb
je
notb
sub
jne
or
and
sub
cli
mov
inc
xchg
fucomp
push
xchg
imul
stc
jbe
push
add
lret
insb
insb
mov
cmp
jno
dec
jecxz
notl
test
insb
and
mov
test
cltd
cmp
sub
ret
add
mov
push
jmp
imul
mov
sbb
jbe
test
jo
test
andl
lea
cltd
push
mov
inc
inc
push
mov
jne
rclb
sbb
insl
adc
ss
leave
sarl
bound
jecxz
or
inc
int
daa
cmp
pop
aas
sub
push
cmpsl
pop
je
cltd
jae
inc
data16
cmpb
ljmp
std
push
scas
adc
scas
rol
adc
pushf
out
push
imul
movsl
mov
mov
mov
sub
das
insl
popa
push
dec
mov
lods
ss
jnp
push
or
or
mov
andl
xor
or
adc
loope
mov
inc
mov
cmpsb
pop
pop
mov
test
add
scas
push
icebp
xor
xlat
mov
es
aas
lea
subl
push
fsubl
out
inc
jns
pop
xor
mov
mov
fwait
push
dec
mov
nop
inc
sahf
sub
movsl
sbbb
adc
pop
loope
fwait
xor
inc
lds
pop
add
xchg
pop
fists
jmp
fnsetpm(287
pop
lods
add
stos
xor
mov
stc
movb
andb
adc
je
push
sbb
sahf
fcoml
int
mov
ret
cmp
mov
in
mov
pop
sub
fistps
jecxz
loope
cmc
mov
and
xor
cmp
je
mov
push
mov
add
inc
out
xor
push
mov
imul
in
imul
pop
sbb
lahf
cltd
das
clc
adc
fiadds
sbb
int3
pop
inc
insl
repz
pop
jl
fs
add
pushl
mov
xor
inc
hlt
aam
pop
xchg
push
inc
test
std
pop
sub
xchg
pop
add
je
inc
popa
addr16
xchg
addr16
repz
jae
xorb
ljmp
lcall
out
jb
and
sbb
sub
jl
xlat
repnz
xor
xor
sub
cs
mov
jg
xor
loop
xchg
pop
data16
loopne
ret
pop
jp
sbb
js
xor
mov
outsl
jge
sub
lea
push
movsl
ret
int3
jmp
jp
pop
mov
and
cs
fsub
out
xor
imul
fcmovb
rorb
dec
sub
jp
lret
jb
movsb
push
shlb
mov
mov
hlt
popa
inc
int3
les
mov
add
mov
in
lahf
dec
rcrl
jp
xchg
sub
pop
sub
rcrl
mov
movsl
dec
out
pop
sbb
adc
inc
aam
jmp
mov
movsl
es
mov
in
sub
push
ret
adc
icebp
andb
cmp
loop
sub
add
adc
xor
xor
push
mov
jbe
push
pop
ret
xor
icebp
dec
or
jle
mov
pop
es
or
push
in
push
mov
xor
dec
add
cmp
mov
push
mov
mov
outsb
pop
stos
bound
dec
jp
pop
test
and
rolb
adc
and
daa
and
pop
push
push
pusha
adcl
std
jmp
test
sub
jo
outsl
je
std
test
jp
repz
lods
mov
sub
mov
ficompl
jbe
cwtl
mov
and
sub
mov
pop
popf
sbb
xor
lcall
adc
or
pop
fmull
push
enter
fnstsw
xchg
mov
fnstsw
ret
sbb
xchg
push
push
mov
hlt
mov
and
mulb
arpl
adc
fstpl
aas
push
addl
arpl
jb
jo
jns
mov
xchg
cmpsl
leave
repz
lret
add
push
sub
inc
pop
loopne
lea
test
test
push
mov
push
into
jnp
fnstcw
dec
imul
pop
mov
cmc
stc
dec
jle
xchg
shll
jae
adc
lds
movsl
pop
out
psubd
add
test
rclb
imul
gs
imul
loopne
xor
adc
rcll
icebp
in
ss
inc
and
lcall
jmp
mov
ds
stc
jmp
push
das
mov
or
xor
xor
je
clc
call
es
mov
or
adc
mov
and
fmuls
fs
bound
dec
xlat
jno
mov
jno
in
out
inc
sarl
cmp
gs
mov
and
adc
adc
xor
iret
sbb
xor
es
sub
push
stos
clc
mov
pop
jge
loop
and
xlat
xorl
cmp
int
mov
fsubrs
fsubrl
stos
lret
dec
inc
mov
sub
mov
clc
inc
jg
leave
and
xchg
mov
xchg
jnp
and
push
xchg
add
xchg
fwait
sbb
sbb
fiadds
push
sbb
cmpsb
jnp
ret
ja
push
je
pop
push
fmull
xrelease
insb
sub
adc
fcomps
mov
fxtract
notl
jb
stos
and
test
mov
lds
test
mov
or
adc
xor
xor
jmp
push
es
mov
frstor
mov
imul
fs
in
popf
fcom
cmc
imul
in
push
inc
dec
mov
lods
sarl
fsubr
mov
je
out
xlat
ret
test
sbb
out
jae
jl
in
and
sub
into
push
and
dec
inc
cmc
jns
sti
aas
sbb
mov
pop
sahf
aas
ss
test
push
xor
lock
mov
add
out
stc
ja
test
sbb
mov
incb
xchg
je
push
add
inc
cmp
cwtl
mov
inc
lea
and
or
in
getsec
jg
test
and
mov
or
mov
in
lahf
adc
jecxz
sub
and
sub
fsubl
stos
movsl
scas
xchg
sub
imul
mov
roll
or
cmpsb
movsb
mov
movsb
dec
roll
xchg
jns
cmp
data16
mov
fsincos
shrb
cwtl
jno
gs
pop
aas
ficoms
mov
fwait
push
jge
fidivs
ds
cmp
inc
cltd
aas
lods
mov
aam
and
jp
jecxz
and
insb
clc
mov
jo,pt
int3
mov
or
pop
inc
push
jno
push
mov
adc
lods
mov
dec
dec
xor
mov
lods
aas
stc
mov
lods
scas
cld
scas
xor
xor
repz
jne
in
ljmp
inc
add
stos
lds
loopne
mov
cmpsl
xchg
mov
dec
mov
add
mov
lods
push
and
js
aam
call
dec
mov
int
push
ret
push
ret
psubsb
jge
imul
shr
dec
cld
pop
daa
mov
xchg
aas
cld
push
test
mov
rcrl
shl
xchg
sbb
sub
xchg
pop
mov
pop
inc
imul
sub
jae
mov
fcomp
sub
sbb
imul
movsl
xor
adc
out
repnz
mov
pop
mov
mov
push
imul
into
je
das
sub
sub
push
enter
lret
popf
jbe
lahf
add
je
mov
rolb
mov
mov
push
mov
sbb
ljmp
std
mov
sub
adc
xor
out
rclb
dec
int3
mov
mov
rorb
mov
push
fs
jnp
mov
sub
imul
mov
add
inc
adcb
cs
scas
adc
xchg
movsl
loop
aam
ret
xchg
in
leave
fdivr
cli
in
rolb
add
or
pop
int
pop
fisubrl
sub
mov
xor
mov
mov
inc
add
decl
add
mov
sahf
aam
jae
aaa
out
in
dec
out
dec
cmpsb
test
sub
push
inc
mov
mov
xchg
cli
shlb
adc
adc
mov
pop
push
pop
add
addb
inc
aad
jno
outsb
xchg
jle
out
pushf
jns
and
sbb
xchg
dec
test
add
js
cmp
mov
int
sbb
sub
loop
cs
inc
mov
test
in
cmp
or
xchg
call
cli
iret
fnstenv
pop
mov
ja
in
xchg
xchg
fsubp
and
loope
int
stos
adc
push
sub
outsl
mov
jecxz
mov
sahf
cli
fidivs
cmp
lea
and
add
dec
in
mov
add
imul
fstpt
dec
sbb
movsl
loop
jo
pop
mov
pop
and
or
not
cli
in
jp
jbe
xor
cmc
repnz
jp
movsb
adc
insb
pop
mov
loope
xor
and
leave
pop
aaa
sub
jge
sbb
push
ljmp
add
mov
int3
jb
push
in
or
hlt
lret
std
xchg
cmpsb
cld
leave
mov
in
std
adc
inc
add
push
stos
ret
push
mov
xchg
data16
push
jle
or
adc
mov
add
mov
pushf
in
les
sbbl
push
mov
and
int3
and
jmp
popf
xchg
push
rcrb
sahf
push
scas
cmc
mov
int
repnz
ja
cmpsb
shrl
movsl
or
leave
mov
sub
and
imul
push
aad
sub
or
rcl
or
adc
and
out
aam
or
gs
adc
int
jbe
push
mov
dec
imul
cmp
xor
sbb
push
push
loopne
cld
pop
inc
mov
and
inc
lret
rolb
mov
fstl
inc
incb
mov
mov
ret
popfw
cmp
pushf
cli
pushl
je
aam
mov
std
clc
loop
or
cld
xorb
cli
test
pop
fs
xor
pushf
mov
fs
inc
dec
pop
std
pop
sub
loope
dec
push
popf
sbb
cld
sbb
push
and
outsb
jmp
movsl
ljmp
xor
inc
or
jl
inc
mov
out
in
xorl
dec
sbb
mov
adc
out
add
leave
popf
stos
push
push
add
rol
repnz
mov
aad
mov
mov
or
adc
ja
test
add
dec
sbb
leave
jl
mov
arpl
out
pushf
mov
and
inc
lock
insb
insl
mov
adc
xlat
cmp
cmp
jne
test
popa
scas
push
icebp
mov
scas
repnz
fldl
push
outsb
gs
mov
mov
outsl
push
sbb
sbb
test
mov
orb
mov
mov
push
lcall
cmp
inc
push
dec
push
add
xchg
in
mov
fadd
cmp
dec
repz
in
js
sbb
test
std
jns
test
xor
int
mov
or
pop
pop
xchg
push
pop
pushf
jle
inc
jg
adc
mov
into
btr
out
int
inc
fwait
loopne
inc
pop
cmpsb
flds
push
adc
xor
xchg
and
stos
pop
lods
push
sub
push
push
add
insb
cmp
hlt
sub
jmp
or
adc
and
lret
jnp
add
jo
pop
push
ja
xor
ds
data16
mov
ljmp
cmpsb
cmp
pop
test
xchg
mov
loopne,pt
cmp
aad
addr16
dec
push
xchg
cltd
fbstp
xchg
sbb
sbb
push
inc
xor
inc
adc
fwait
pop
stos
iret
lret
in
dec
pop
xchg
stos
sahf
pop
mov
pop
std
fld
jne
cltd
xchg
xchg
lahf
cld
inc
inc
pfrcp
jecxz
push
dec
and
pop
jb
cmp
sbbb
ljmp
iret
insb
ds
sbb
xor
insl
sub
daa
inc
jmp
bound
cs
ret
arpl
lret
sbb
xchg
mov
dec
or
ret
mov
lahf
lret
jmp
mov
pusha
repz
cli
rcll
push
cmpb
cmp
sub
shufps
cmp
inc
mov
pop
sbb
add
int
mov
inc
outsl
and
lock
test
mov
mov
xchg
mov
loop
cmp
int
hlt
jge
out
clc
insl
xchg
fldlg2
dec
loopne
jl
leave
lods
lods
addr16
aam
mov
shll
xchg
adc
stc
mov
ds
in
cld
mov
stos
aad
cmpsb
repz
loopne
inc
lods
cmpsb
mov
outsb
and
popf
mov
in
sbb
jl
mov
adc
or
pop
in
aad
jle
pop
sub
int3
movsb
inc
add
into
decb
pop
xchg
pop
sbb
xorb
cmp
mov
shl
bound
out
fildl
push
mov
xchg
xchg
rorl
popa
pop
mov
push
cmpsb
insb
lcall
and
cmp
jno
cmp
or
xchg
pop
ja
sub
roll
lods
sbbl
mov
adc
sub
popf
lret
ss
mov
push
into
lea
jg
add
dec
cmp
movsl
jo
adc
ljmp
mov
ret
adc
cmp
pop
or
cld
fs
jb
sbb
dec
push
pop
xchg
sti
cmpsl
cmp
or
ficoms
or
in
push
mov
jg
pop
fmuls
mov
mov
pop
mov
mov
add
lahf
int
cmpb
fwait
jae
inc
mov
inc
mov
cmp
and
add
fnstenv
cmc
addr16
push
xchg
cmpsl
js
mov
cmp
sub
jbe
or
in
add
lods
mov
push
lds
pop
dec
fsubrl
cs
jno
xor
out
pop
dec
and
inc
cmpsl
and
lea
dec
out
pop
lea
pop
rorb
xchg
pop
xchg
mov
lret
cmp
xchg
fistpll
dec
adc
sahf
lods
pop
mov
xlat
xchg
jp
pop
out
mov
xlat
mov
jg
sub
clc
jp
hlt
cmpsb
push
cmpb
mov
std
and
inc
pushf
inc
pop
mov
movsl
xchg
adc
push
mov
cmc
and
shr
loope
pop
and
dec
insl
icebp
mov
cmp
push
mov
mov
insb
fcmovnbe
outsb
xor
push
hlt
lock
inc
push
mov
and
cmp
xor
mov
sub
test
pop
aam
inc
cmp
sub
call
ret
jb
cmp
enter
xchg
dec
xor
clc
xchg
dec
dec
and
fcoms
sbb
and
jo
ss
xor
lahf
and
fidivs
jmp
movsb
aaa
lea
mov
add
or
repz
fdivrs
pop
sbb
imul
cmp
add
test
pop
repz
jns
pop
mov
mov
call
sbb
lea
mov
mov
popf
push
sbb
add
adc
jnp
cmpsl
idivl
push
roll
aad
jo
movsl
loope
int
add
jge
inc
sti
inc
sub
fwait
int
es
sub
stc
aaa
shlb
shrb
push
dec
pop
imul
fistps
mov
jle
xor
aaa
sbb
divl
xlat
cmp
xchg
cmpsl
xchg
push
outsb
mov
xor
int
pop
dec
insb
test
imul
mov
test
adc
dec
push
dec
jp
into
movb
fcmovne
pop
mov
dec
in
cmp
js
and
fiaddl
icebp
pop
sub
cmp
pop
movsl
or
sbb
cmpsl
jb
adc
dec
and
in
mov
enter
jle
mov
mov
cmc
repnz
fwait
inc
cmc
push
push
icebp
mov
jp
stos
xor
stos
mov
aas
add
jmp
imul
xor
and
nop
sub
pop
cli
fwait
push
imul
mov
dec
xchg
inc
cltd
sub
and
cs
rclb
sbb
xchg
int
les
aam
add
cmp
sbb
inc
push
sbb
in
and
jg
sub
jmp
ja
out
lods
push
push
loopne
cwtl
jno
sub
or
std
in
and
std
push
dec
out
shl
mov
aaa
addl
add
cmc
xchg
int3
outsb
enter
sbb
adc
push
mov
arpl
clc
jns
inc
bound
pop
leavew
push
dec
inc
lods
xor
ja
mov
frstor
sbb
into
dec
sarb
lret
sub
pusha
sbb
clc
lahf
pop
sbb
pop
jle
out
mov
jp
add
jb
push
cwtl
addr16
push
movsl
mov
icebp
into
xor
popa
pop
jg
stos
push
fsubs
push
pushf
and
test
cmpsl
leave
or
test
and
enter
jne
xlat
xor
add
stos
xor
stc
lcall
sub
pop
push
add
mov
pusha
in
enter
sub
cmc
lcall
mov
addr16
ljmp
js
adc
add
sub
dec
mov
xor
loope
sahf
inc
mov
nop
or
pusha
out
sbb
shlb
iret
and
pop
push
pop
sub
fisttpll
xchg
xor
aam
das
lock
xor
ret
ffree
jae
dec
mov
mov
mov
leave
into
pushl
insl
fistl
xchg
aam
lfs
insb
jo
pop
inc
sbb
pop
movsl
sbb
mov
xor
std
subb
sbb
sbbb
std
sub
gs
or
ret
and
movsb
cs
shll
mov
push
xor
sub
ret
sub
or
cmpsl
adc
dec
xor
ret
in
les
fdivr
mov
dec
xor
out
mov
aad
dec
shlb
pop
aaa
mov
pop
shlb
stos
and
cwtl
jno
or
insb
and
dec
loop
xor
js
jns
pop
aad
pusha
gs
enter
add
inc
xchg
cmp
movsl
or
jge
mov
ljmp
adc
roll
filds
fdivr
outsl
and
and
inc
call
push
movsl
fadds
insb
adc
adc
icebp
ds
mov
hlt
stos
cmp
insl
pop
jns
clc
pusha
push
xorb
out
xchg
mov
daa
inc
xchg
xchg
in
push
and
cwtl
cltd
jb
lret
inc
gs
cs
repz
xchg
pop
test
push
stos
mov
or
shl
outsb
xlat
es
imul
xchg
mov
shrb
jecxz
ss
aaa
js
fnsave
rorb
adc
mov
js
addl
fstps
inc
enter
cmp
xchg
aas
roll
sbb
rclb
inc
inc
mov
inc
pop
dec
call
jo
fnstsw
and
xchg
test
mov
adc
mov
mov
imul
or
xchg
int3
dec
enter
xor
pushf
mov
lahf
mov
jnp
xor
jge
sub
cmp
sub
stc
mov
cmp
push
mov
and
inc
xor
imul
test
scas
rcll
dec
push
sbbb
mov
imul
xor
loopne
jno
sub
adc
push
xor
mov
lods
fcom
add
scas
dec
jecxz
xor
xor
insl
sub
adc
add
jbe
cmc
mov
shlb
adc
repz
inc
lds
or
push
std
pop
sbb
fcmovbe
out
or
xchg
mov
es
mov
mov
jo
mov
mulb
rcrb
jo
mov
in
mov
mov
lods
sbb
in
xlat
pop
sahf
adc
sar
sbb
cmp
jl
xor
gs
int
test
loopne
mov
lret
sbb
mov
push
dec
ss
lahf
mov
or
das
jne
push
xor
mov
push
mov
movb
xlat
inc
loope
mov
mov
mov
sub
sub
inc
dec
lret
test
pop
repz
mov
test
lret
shlb
loopne
xor
and
jns
outsl
cmp
xchg
aaa
lret
pop
popf
jo
mov
out
clc
sbb
lcall
mov
cmpsl
lods
inc
hlt
dec
clc
leave
ret
or
scas
xchg
scas
adc
ret
leave
cld
and
push
xchg
and
sbb
or
aaa
hlt
mov
xchg
in
adc
and
pop
push
sbb
stos
dec
outsl
repz
cmp
or
test
test
cwtl
add
cli
fsts
cltd
mov
or
xchg
test
pop
jno
pop
cmc
add
inc
jae
dec
xchg
sbb
mov
xchg
sbb
inc
fldcw
in
insb
ja
sahf
mov
pop
mov
shlb
cmp
adc
add
inc
jl
mov
lods
lret
jl
repnz
dec
mov
insl
ds
fcomp
xchg
adc
adc
mov
pop
dec
fiadds
insl
sbbb
jp
enter
pop
xor
ds
lret
mov
jb
mov
push
gs
dec
mov
sub
sub
jno
pop
scas
iret
daa
icebp
push
or
mov
mov
mov
adc
movsl
jne
jne
jae
in
scas
xchg
aas
xor
stc
push
dec
cltd
repz
inc
xchg
fucom
pop
arpl
in
lds
and
popf
xchg
subb
dec
push
sbb
ja
in
in
sub
daa
mov
fidivrs
inc
xor
inc
adc
and
xor
mulb
test
push
out
mov
lds
mov
jns
movsl
push
pop
mov
andb
movsb
inc
outsb
cmp
in
and
push
dec
int3
iret
stos
jmp
test
fsubl
sub
hlt
and
jns
or
push
aas
ds
jg
ret
cmp
test
frstpm(287
xor
or
mov
push
imul
xchg
sbb
mov
mov
stos
notb
loop
fiaddl
push
cmpsb
pop
loope
push
les
push
pop
lret
jae
xchg
mov
inc
sbb
inc
ficoml
push
xchg
repz
in
xor
lods
fs
cmp
or
and
lds
cmp
push
hlt
sub
mov
push
lds
xor
mov
sbb
pop
sbb
xor
int3
dec
cmpsb
jg
lods
stos
scas
lea
mov
inc
add
xor
rcll
inc
inc
lahf
push
lret
pusha
mov
loop
add
call
repnz
jno
aam
push
inc
mov
cmpsb
and
aas
ret
ja
imul
stos
mov
out
cld
jecxz
les
fldenv
popf
sub
fldt
jno
loope
insl
xor
std
mov
mov
rolb
and
nop
adc
dec
and
xor
sar
in
jne
inc
mov
ss
pop
ss
nop
jb
cmp
mov
sub
pop
ja
or
cwtl
mov
mov
xchg
lahf
sub
push
fldl
dec
or
add
push
pop
andl
push
sub
dec
bound
add
inc
ret
rclb
insb
iret
and
pop
lock
pop
mov
out
pop
imul
mov
ljmp
lahf
mov
lcall
push
mov
ret
insl
aas
mov
and
sahf
sbb
nopl
sub
mov
shl
xchg
jo
push
jg
stc
xor
les
push
repz
add
xchg
dec
fdivs
ficomps
cltd
rcr
insl
and
aad
sbb
sbb
testl
aaa
sub
ja
clc
repz
pop
jg
fucomp
pop
mov
enter
xchg
xor
lods
dec
sbb
ret
cmpb
in
test
cmp
addr16
adc
fwait
loope
ret
fidivs
xchg
adc
lahf
cmp
add
xor
pop
adc
test
lret
mov
movsb
call
mov
stc
or
xor
cli
add
sahf
sbb
push
fisubrl
stos
jge
jmp
outsl
or
jno
fs
and
push
xchg
gs
icebp
xor
mov
xlat
pushf
adc
jno
sbb
lock
jle
mov
jecxz
jmp
dec
int
popa
call
insl
or
idiv
inc
ret
jbe
mov
dec
pop
loope
or
sbb
sbb
dec
cli
out
outsl
or
push
xor
add
inc
push
lret
mov
shlb
inc
mov
loop
aam
das
ja
dec
push
daa
cmp
test
push
mov
ss
mov
sahf
add
int3
cmp
stc
popa
pusha
rolb
jle
outsb
int
mov
jnp
xor
rolb
and
xchg
mov
rcrl
xchg
sbb
adc
or
cmpsl
dec
lret
pop
leave
cmp
loopne
jg
insb
dec
cld
bound
sub
lcall
or
mov
push
lds
and
cwtl
push
pop
lods
pop
sbb
iret
pcmpgtb
lret
into
mov
jns
mov
mov
jae
ficomps
inc
push
push
jae
mov
sub
inc
xor
arpl
sar
cmp
inc
fimull
xor
ror
roll
test
jnp
xchg
daa
mov
sbb
aad
jno
adc
mov
sub
shll
invd
js
dec
mov
pop
jne
ret
adc
imul
jmp
mov
nop
xchg
or
sub
in
mov
jle
ljmp
cwtl
adc
push
pop
cmc
xchg
iret
stos
and
popf
mov
push
dec
bound
imul
fisubl
popf
pop
jns,pt
ret
sub
xor
sbb
push
outsb
mov
add
aam
popa
test
xchg
aaa
xchg
push
out
xchg
cmp
movsb
repz
ret
inc
mov
mov
sbb
add
mov
mov
mov
ja
xchg
rorb
imul
test
mov
and
lret
dec
pavgb
sbb
mov
xor
std
push
inc
insb
push
repnz
es
cmc
push
xchg
rorb
mov
ja
adc
cmp
jns
lea
popa
lea
ret
xor
adc
inc
in
sbb
sbb
call
dec
xchg
sub
mov
inc
or
dec
jmp
push
push
jnp
dec
or
pop
ds
imul
fisttpll
aaa
mov
xchg
enter
add
lret
imul
hlt
arpl
call
lods
dec
or
jnp
xor
xor
cltd
imul
fs
lods
mov
pusha
jbe
inc
jge
pop
jmp
sbb
dec
gs
nop
add
fcmovu
adc
in
mov
cmp
jle
mov
and
mov
out
faddl
xchg
ds
test
mov
mov
insb
sbb
pop
jne
test
rolb
movsl
adc
lret
sub
movsb
push
cmpsl
icebp
xor
jge
push
dec
sub
jmp
std
flds
push
out
loopne
mov
lock
pop
lods
and
sub
rcr
jmp
sub
add
int3
loopne
or
push
lock
out
pop
mov
mov
scas
lods
lret
push
push
mov
lret
dec
ret
in
dec
aas
daa
or
inc
cltd
mov
mov
call
in
lcall
adc
inc
push
mov
inc
jle
pop
cs
mov
and
xchg
push
aaa
and
push
aaa
inc
idivb
dec
mov
xchg
ljmp
push
insb
scas
jl
jae
jnp
mov
cmp
cmpsl
xlat
iret
xchg
lret
or
mov
imul
test
icebp
push
push
add
inc
js
adc
outsb
iret
insb
adc
cli
add
fisttps
jmp
adc
dec
fwait
in
jno
cmc
rolb
loope
pop
cmp
fs
daa
sub
and
bound
push
dec
repnz
sbb
out
and
mov
mov
les
aam
hlt
cmp
pop
xchg
ret
dec
push
adc
mov
sarl
stos
jnp
mov
add
jmp
pushw
stos
arpl
sub
loopne
rcl
push
xchg
out
dec
call
insb
das
cs
out
inc
pop
cmp
push
ljmp
and
in
shll
mov
add
mov
adc
aaa
repz
insl
fcmove
xor
xor
pop
adc
cli
cmpsb
fcoml
add
xor
iret
ljmp
lcall
pop
add
outsb
lods
mov
adc
shrl
dec
or
jnp
adc
inc
pop
enter
push
dec
fbstp
push
jecxz
push
xor
shrl
mov
jbe
push
lods
jmp
dec
imul
jl
rcr
loope
xchg
out
mov
xchg
add
lds
jl
fs
mov
icebp
in
mov
ljmp
xor
popa
aam
in
cmp
aas
ljmp
cmp
outsb
bound
ss
loopne
push
and
jl
mov
scas
cmc
enter
sti
add
cli
imul
xchg
repz
lcall
mov
push
cmp
ret
pop
fidivrl
mov
xor
pop
add
pop
out
mov
cmpsl
jns
sbb
mov
fdivs
sbb
mov
repnz
stos
shufps
cmp
cmpsl
lahf
mov
fs
lods
and
stc
lret
loope
adc
xchg
mov
out
jo
adc
int
mov
clc
ljmp
std
arpl
nop
xor
scas
and
or
jno
in
outsl
mov
gs
shlb
dec
je
cmp
outsb
rcr
mov
jl
jg
push
aas
xor
push
cmp
aad
inc
sub
testb
xor
dec
test
sbb
scas
and
or
mov
adc
xchg
fsubrl
out
movsb
ret
pop
dec
adc
inc
cmp
cmpsb
das
movsl
and
hlt
sub
jle
xchg
push
std
pop
or
xor
lods
ljmp
mov
push
cwtl
cmp
gs
sub
mov
mov
aas
fnstcw
addr16
jb
rclb
pop
add
testb
gs
xchg
nop
repz
popa
lret
or
xor
lcall
or
mov
xor
jle
loop
inc
cmp
add
sbb
bsf
dec
sbb
mov
nop
cli
mov
test
imul
je
xor
push
ss
or
out
negb
aaa
in
mov
popf
pop
mov
jmp
mov
hlt
in
xor
mov
sbb
lock
nop
ret
mov
je
or
lock
add
sub
movsl
mov
fistpl
fimull
mov
testl
enter
or
adc
outsb
shrb
push
dec
xor
int3
out
or
cmp
into
xchg
cmpsb
push
sub
fiaddl
ss
mov
sub
ror
into
stc
stos
lods
and
ja
mov
push
and
je
out
dec
jmp
mov
je
push
mov
sbb
ds
adc
out
or
mov
cmp
sub
sti
mov
pop
sub
fnstenv
fstps
jecxz
xor
insb
pop
pushf
cmpsb
and
clc
imul
pop
jbe
push
cmpsb
jecxz
loopne
aaa
out
daa
fwait
xchg
lcall
nop
das
and
into
lods
push
inc
or
mov
aaa
push
in
stc
and
sbbl
inc
aam
popa
sub
scas
leave
enter
and
xchg
sub
mov
mov
cmp
sbb
fnstsw
test
and
shrb
ljmp
loop
push
mov
arpl
movsl
adc
mov
cmpl
fstl
adc
pusha
inc
les
arpl
cmp
sar
cmp
pop
stos
or
mov
jle
daa
insb
sub
cmpsb
lret
push
pop
sbb
insb
jle
sbb
test
aaa
cld
fdivrs
clc
lods
mov
adcl
dec
push
and
and
and
dec
xor
into
out
shl
inc
inc
xchg
fbstp
mov
scas
stos
inc
inc
fldcw
jb
outsl
mov
mov
and
lret
push
sbb
xor
and
repnz
nop
es
push
xor
jmp
aam
sahf
xor
inc
jmp
xchg
arpl
mov
pop
dec
sub
rorl
jbe
scas
add
nop
xor
or
xor
add
das
jns
das
dec
xorb
fdivrl
push
xchg
fsubrl
fs
mov
xchg
inc
and
mov
leave
jbe
dec
add
jmp
lods
ja
inc
adc
lret
adcl
dec
movsl
pop
lret
xchg
xchg
mov
lcall
cmpl
fistps
out
jecxz
mov
add
sbb
mov
lret
mov
mov
inc
sahf
cs
cmp
xor
and
movsb
lds
jo
sub
femms
mov
popa
fs
mov
dec
lods
enter
test
pop
xchg
ud0
fisttpl
and
xchg
and
scas
movsl
stos
push
cs
outsb
adc
xchg
je
jb
sub
pop
or
cmp
push
iret
movsb
scas
jae
xor
sbb
cli
push
in
mov
hlt
scas
jno
je
mov
call
std
test
cld
mov
push
inc
sahf
idivl
iret
insb
dec
int3
dec
jae
jecxz
gs
push
jo
mov
inc
sbb
cld
aaa
lea
mov
imul
loope
cmp
jae
pop
jno
or
in
inc
add
loop
sbb
jns
mulb
cs
inc
jns
add
into
mov
or
jb
push
xor
cs
dec
arpl
ss
shlb
xchg
aas
cmpsb
mov
enter
cmp
insb
mov
pop
cmpb
push
cmp
cltd
movsb
imul
push
mov
or
sub
push
and
test
mov
xor
test
pop
add
repz
jp
pop
arpl
xchg
jg
add
mov
jae
push
in
or
or
adcb
shlb
or
cmpsb
stos
stos
push
in
cmc
sbb
lcall
shlb
inc
mov
xchg
rcll
cmpsb
push
lock
cmp
jns
sbbb
adc
je
pop
out
pop
outsb
mov
xchg
sub
dec
push
sbb
in
popa
jle
mov
popf
xchg
xor
stc
xor
xchg
xor
mov
adc
or
xchg
daa
ret
dec
out
jbe
and
dec
mov
xlat
stos
mov
jg
out
sbb
push
hlt
stc
cwtl
inc
mov
or
xchg
mov
repnz
jbe
lods
mov
mov
out
fsubr
hlt
popf
adc
push
lret
mov
mov
imul
and
outsb
mov
movsl
pop
add
in
lds
lods
dec
and
sub
mov
mov
push
daa
mov
xchg
inc
lcall
lcall
andb
cmp
inc
fiadds
mov
daa
adc
pop
cld
lcall
mov
add
sbb
cld
mov
jns
mov
jnp
test
mov
jb
aaa
rcrl
add
fistpll
mov
in
mov
lds
daa
lcall
inc
cmp
lahf
insl
add
cltd
mov
lods
data16
mov
daa
xchg
adc
repnz
add
pop
pop
push
jb
xor
jo
push
cmp
imul
mov
xchg
pop
push
jne
mov
adc
ret
xor
sub
jecxz
or
sbb
or
mov
pop
jl
testb
pushf
cmp
jp
jmp
addl
sub
not
xchg
sarl
xchg
fs
push
insb
std
rorl
inc
nop
jge
xor
mov
mov
add
xlat
pushf
lcall
gs
ret
sbb
shrl
sbb
or
mov
jge
orl
or
push
jae
jb
pop
jbe
loopne
mov
cwtl
jmp
mov
dec
sbb
arpl
shlb
rcll
andb
pop
imul
in
mov
jmp
adc
shll
aaa
lods
insb
rcrb
jb
inc
sbb
shrb
rcr
inc
jnp
ljmp
sub
popa
in
gs
xorb
lods
loopne
sbb
sarb
sub
aam
mov
lods
pop
mov
cltd
xchg
adc
mov
loope
inc
adc
imul
imul
mov
sub
xchg
push
jg
mov
fldenv
pop
push
xor
mov
sub
imul
adc
sbb
xchg
and
xchg
sbb
mov
inc
ja
addr16
ss
jecxz
adc
push
pop
push
add
jns
mov
out
mov
mov
inc
and
push
outsl
fistpl
sbb
mov
and
loop
dec
mov
pop
mov
cmp
bound
inc
mov
push
mov
sbb
cli
cmp
cs
jle
mov
xchg
adc
xor
lcall
mov
adc
xor
pop
jne
pop
adc
lret
pop
add
mov
movsl
sbb
adc
lcall
sarl
ret
lret
lds
jne
arpl
or
and
aaa
push
sahf
mov
fwait
mov
inc
lock
test
lcall
mov
and
adc
pop
pop
cld
in
iret
lods
out
or
insb
push
into
scas
popf
push
pop
sub
fldenv
sub
ljmp
fmuls
cs
in
idivl
jne
lret
in
mov
or
out
loop
bound
aad
or
enter
cmp
and
movsl
cwtl
inc
push
rolb
sbb
mov
cmp
je
insb
inc
imul
jae
mov
stos
inc
adc
stc
mov
mov
js
test
xor
mov
cmc
and
xor
dec
shlb
sbb
push
enter
cld
adc
dec
dec
push
inc
cmp
int3
xchg
xor
iret
stos
arpl
push
and
outsb
fdivl
or
xchg
mov
add
push
mov
sub
in
jb
stos
je
pop
mov
aaa
ficoms
outsl
hlt
pop
addb
inc
aaa
pop
xor
jnp
adc
adc
test
push
hlt
mov
pop
jae
imul
movsb
mov
insl
cmp
push
inc
xor
jne
jmp
push
and
fcomps
sbb
out
mov
or
jle
or
jb
jbe
sub
pop
jl
adc
clc
ds
icebp
mov
push
stc
mov
mov
or
movsl
stc
addr16
js
dec
cmpsb
xor
inc
mov
cmp
push
movsl
dec
jnp
mov
leave
ret
push
roll
mov
out
jae
xor
pop
jg
jb
add
dec
es
mov
std
and
push
or
push
testb
push
hlt
insl
and
dec
testb
sub
fs
pop
inc
sbb
jge
std
push
enter
out
or
mov
dec
or
xchg
leave
push
cmp
popa
int3
retw
adc
repnz
repnz
leave
ds
incb
imul
lcall
sub
leave
mov
add
lods
aad
inc
xchg
adc
or
sarl
xlat
jmp
fcomi
repz
movsl
adcw
mov
push
pop
push
test
ljmp
adc
adc
addl
add
cmc
adc
scas
ljmp
push
inc
scas
lea
cmc
orl
pop
out
leave
or
push
out
jp
insl
cmp
sub
decl
xlat
test
filds
shll
out
xchg
out
mov
mov
push
lahf
jle
add
shrl
insb
dec
cmp
pop
push
leave
shrb
test
inc
cli
jns
adc
cwtl
xor
js
dec
fildl
sbbl
xchg
add
imulb
cmpsl
adc
mov
adc
push
and
pop
jne
push
fmull
std
adc
scas
lret
mov
jae
shrl
jl
shrl
repnz
cmp
inc
fstl
lock
out
int3
ljmp
rcl
imul
les
sarl
lret
imul
jle
dec
mov
cmp
mov
js
add
sbb
out
mov
sub
jb
pop
cli
mov
and
aaa
in
pop
jne
adc
adc
xchg
sub
jmp
jle
xchg
and
mov
das
or
inc
arpl
jbe
mov
fsts
xchg
fs
scas
icebp
xchg
aas
repz
imul
adc
pop
cltd
je
ror
xchg
cmp
stos
mov
adc
or
mov
mov
in
fpatan
xchg
fwait
addr16
mov
cmc
mov
daa
leave
and
std
cmp
and
dec
xor
test
incb
fs
lea
sbb
xor
or
push
fs
mov
loop
sub
clc
aam
lock
cmp
dec
cli
mov
jmp
loope
jno
mov
in
push
xchg
stos
mov
in
xchg
daa
pop
fnstsw
movsl
fistpl
jnp
es
fisttpl
std
xor
rclb
jbe
not
inc
cmp
loop
sti
mov
mov
adc
test
orb
mov
push
lret
fidivrl
or
mov
mov
lret
dec
or
nop
test
mov
mov
popa
push
daa
push
ljmp
pop
cmc
call
jo
aaa
fs
mov
jmp
cli
push
leave
mov
mov
fucomip
xchg
sarl
add
aaa
imul
ret
xor
imul
cmp
xor
mov
push
adc
std
test
or
push
repnz
fsts
cmp
movsb
mov
mov
outsb
iret
adc
sub
and
adc
sbb
adc
shlb
xor
in
sbb
pop
mov
imul
mov
push
inc
add
insb
cmp
xchg
repz
add
lret
loope
imul
pop
mov
and
jb
push
js
jae
rcll
pop
xchg
clc
in
out
ficoms
lea
subb
add
sub
xlat
jbe
roll
ja
mov
dec
rcpps
push
jae
sti
xor
ja
add
and
xlat
mov
insl
jno
outsl
and
inc
sbb
pop
cmp
inc
rcll
push
inc
mov
icebp
jns
sbb
pop
pop
bound
inc
push
out
jmp
and
popa
mov
xchg
lock
xchg
pop
sbb
xchg
lret
xchg
mov
pop
dec
mov
xor
pop
mov
in
and
mov
scas
add
popa
mov
jae
mov
pop
cmp
xor
mov
arpl
mov
sub
mov
outsb
sbb
aam
sarl
inc
add
xchg
sub
aam
inc
dec
subl
add
inc
sub
pop
adc
adc
push
jns
insb
cmp
out
aad
rorb
pop
inc
lret
xchg
cwtl
int
jmp
mov
popa
ds
mov
jmp
and
rcl
cmp
leave
imul
xchg
das
fs
add
rcr
outsb
or
mov
mov
jecxz
jae
mov
add
and
int
andl
fsubrl
jecxz
mov
push
xchg
aam
insb
xchg
iret
cmp
in
cwtl
negl
add
mov
push
dec
sbb
notb
cwtl
shrb
cmp
mov
clc
rcrb
pusha
rclb
inc
ljmp
enter
imul
pop
or
and
out
fisttps
xor
rorb
ljmp
ljmp
sarl
mov
push
fnsave
xchg
cmp
mov
scas
das
ficompl
dec
pop
dec
xchg
shl
incb
and
pop
sbb
inc
pop
xchg
mov
ja
cmpsl
lock
out
sti
leave
xor
sahf
jns
movsb
jp
inc
leave
scas
add
jne
scas
loope
jno
decb
jae
and
leave
daa
xchg
and
sbb
loopne
push
add
xchg
dec
mov
fsubs
mov
std
pop
dec
cmc
cmpsb
lret
fs
pop
aad
push
pop
movsl
pop
cmpsl
jb
xchg
dec
mov
imul
insl
ss
movsb
incb
mov
popa
int3
xchg
fcoms
inc
xchg
icebp
mov
sahf
xchg
and
aas
adc
and
sbb
inc
cwtl
sbbl
bound
cmpsb
xchg
mov
mov
jecxz
sub
lods
orb
js
sub
mov
inc
xor
mov
mov
xchg
outsl
xor
mov
sti
movsb
xchg
fcomps
subb
movl
dec
nop
fidivl
mov
push
push
adc
pushf
outsb
lds
cli
mov
add
nop
inc
mov
push
cltd
xchg
xlat
cmp
pop
mov
mov
stos
push
cmp
imul
cld
mov
fiaddl
dec
daa
sbb
xchg
lret
xchg
and
push
xor
xchg
mov
cmp
inc
fwait
adc
int
mov
nop
orb
inc
add
pop
scas
ret
mov
imul
iret
imul
cwtl
adc
das
xchg
dec
scas
sub
lret
xor
popf
mov
push
xchg
popa
ja
push
pop
les
sahf
push
ja
jg
add
pop
adc
lahf
mov
xor
fs
jb
ljmp
clc
mov
shll
insb
rcll
sub
scas
pop
jp
mov
out
leave
je
jmp
into
xor
gs
inc
test
inc
or
pop
add
pusha
cwtl
xchg
inc
push
test
dec
insl
stos
adc
add
add
dec
jl
sub
jecxz
shlb
fadd
data16
and
bound
popa
mov
cmp
clc
neg
add
inc
je
mov
stos
xchg
xchg
idivl
adc
daa
sub
mov
stos
sbb
adc
cmp
inc
iret
faddl
add
adc
mov
bound
daa
mov
dec
pushf
push
loopne
sub
inc
xor
push
cmp
or
pop
jns
iret
fs
jp
xchg
fsubr
mov
lods
mov
sahf
ja
testl
idivl
leave
jl
mov
ds
jg
inc
jb
dec
pop
cmpsb
dec
mov
arpl
pusha
lock
lods
imul
push
scas
pop
fwait
icebp
hlt
sbb
fcoms
cwtl
fstpt
cmpsb
cs
mov
cmpsl
mov
ljmp
shl
mov
mov
loop
stos
leave
jo
push
pop
jbe
xlat
adc
fbld
adc
test
in
mov
inc
mov
xchg
cwtl
ja
fwait
push
jnp
jbe
xor
stos
call
dec
je
jb
xor
arpl
outsl
mov
repnz
push
sahf
test
shrl
aas
jl
add
dec
cltd
mov
pop
mov
call
rcrl
in
or
dec
lret
xchg
adc
loop
sarl
outsl
aaa
jecxz
and
xchg
shrb
and
test
das
push
push
ja
lods
mov
inc
push
seta
nop
lods
outsb
add
stos
push
in
push
hlt
cltd
adc
leave
pop
cltd
pushf
std
in
iret
lods
and
pop
dec
std
repz
mov
repnz
xorb
ret
cmpsl
xchg
push
sub
sarl
testl
adc
cli
xchg
jecxz
test
mov
jecxz
clc
jle
and
pop
iret
jbe
xor
imul
dec
mov
inc
icebp
xchg
push
cmp
data16
and
mov
mov
add
in
push
inc
xchg
xor
xor
or
das
nop
in
mov
dec
movsb
mov
pop
mov
cs
pop
or
fmul
mov
sub
or
mov
imul
inc
popa
daa
sti
push
dec
pop
in
jbe
adc
leave
or
xor
repnz
push
cwtl
les
out
popf
cmp
pop
pop
scas
cmp
mov
fdivrp
pop
loope
ljmp
in
inc
insb
scas
dec
add
hlt
xchg
adc
cmp
pop
xor
outsb
jno
sub
in
inc
push
out
data16
xor
add
jle
mov
insl
jg
clc
jb
test
lahf
add
es
and
sbb
dec
add
sahf
repz
out
leave
push
out
or
jmp
mov
ja
xlat
inc
cli
mov
sub
jl
cltd
dec
clc
xchg
jge
inc
pop
in
and
std
jecxz
jp
sti
popf
insb
enter
std
mov
mov
mov
push
cmpsb
outsb
jle
stos
add
adc
add
mov
mov
push
sti
push
xchg
repnz
or
in
mov
std
aam
adc
movsb
scas
pop
in
notl
add
xchg
pop
enter
push
add
pushf
add
divb
cmc
sti
xchg
push
cmpsb
fstpl
es
iret
xchg
lcall
inc
out
fs
jl
fisubl
sub
cmc
icebp
shrl
dec
mov
pop
cmp
mov
sbb
repnz
xchg
jp
push
dec
inc
lcall
mov
jmp
mov
adc
pop
or
mov
lcall
xor
cmp
imul
xchg
mov
jp
ss
jo
hlt
movsl
movsl
xor
fmul
adc
mov
jnp
les
std
imul
xchg
ds
xchg
adc
push
out
jae
pop
lret
repz
pushf
sub
mov
test
add
jg
mov
inc
loop
popf
aaa
movsl
loope
xchg
xor
lcall
sti
cwtl
xchg
pop
das
jmp
push
cld
xchg
cmc
mov
adc
cmpsb
cmpsb
lcall
and
mov
sbb
jge
outsb
insl
xchg
jo
inc
testb
jl
lea
dec
popf
pusha
dec
jnp,pt
fnstcw
ljmp
and
add
icebp
pop
push
push
mul
xchg
cwtl
push
mov
mov
mov
pop
pop
mov
xchg
inc
mov
xchg
in
enter
push
xor
mov
cmpsl
in
cmpsl
mov
stos
pop
push
lcall
test
ret
ficoml
outsb
movsb
in
dec
adc
shr
adc
xor
fstps
mov
scas
sbb
mov
adc
inc
push
bound
push
jno
or
xor
repz
ss
push
leave
sub
xor
adc
mov
out
ds
inc
push
and
rep
sbb
ds
clc
arpl
pop
rcrb
dec
pop
popf
and
sub
scas
idiv
jecxz
xchg
sub
xchg
push
subl
pusha
je
scas
jp
movsl
adc
adc
lds
mov
sar
imul
push
xor
sbb
push
test
or
add
ficompl
rcll
add
or
mov
cwtl
movl
insb
out
inc
jne
stc
and
push
cmp
cwtl
dec
jle
call
gs
pop
xchg
sbb
sbb
jmp
adc
pop
subb
lret
bound
sub
push
dec
mov
cmp
insb
push
scas
cld
lcall
sbb
cmpsb
shr
inc
pop
iret
fimull
je
push
das
push
jl
pop
mov
xchg
clc
int3
dec
daa
xchg
dec
stos
ret
popa
notl
bound
loope
outsb
mov
fwait
jb
jns
inc
shll
sbb
icebp
and
xchg
sbbb
leave
leave
sarl
xchg
mov
rorb
dec
rcrb
pop
in
pop
insl
lea
xchg
std
jnp
sbb
and
and
stos
shrb
mov
shl
jno
mov
pop
push
mov
shrl
movsb
loope
int
mov
or
das
clc
adc
enter
add
jne
test
xor
rol
in
pop
int
sub
lods
test
push
inc
dec
lgs
and
mov
cmp
mov
lret
push
loopne
mov
aaa
mov
arpl
int3
mov
mov
dec
lahf
push
std
or
pop
inc
aam
les
and
mov
fwait
repz
outsb
stos
cmp
ja
lahf
inc
push
les
inc
out
xchg
adc
imul
fs
cmpsb
daa
sbb
fs
xor
gs
notl
into
lods
jecxz
cli
repnz
mov
jl
aas
mov
and
sbbl
mov
test
dec
fs
add
and
in
xchg
adc
loope
or
mov
lds
fldlg2
js
pop
xchg
pop
push
xor
cltd
pop
push
mov
cmpsl
pop
orb
xor
or
mov
and
testl
faddl
in
fldenv
sbb
add
test
push
outsl
ret
pop
stos
imul
sub
lret
pop
leave
and
aad
shll
fcomp
pop
test
stos
jg
push
mov
lret
push
sub
fidivrl
es
jmp
pop
cmp
mov
subl
addr16
xchg
lds
rep
xor
add
clc
add
jbe
mov
stos
stc
sub
pop
add
repz
pop
xchg
add
dec
jo
rclb
mov
push
mov
sbb
lcall
fimuls
jne
push
loope
pop
rol
jne
fdivp
aam
rorb
stos
xor
jge
imul
repnz
xchg
push
mov
adc
aas
push
xchg
inc
cmp
xchg
testb
sbb
sbbb
addl
leave
pop
inc
lret
std
dec
rcrl
push
cmp
mov
jnp
pop
shll
push
test
call
and
mov
mov
ja
out
xchg
gs
repz
fdivl
shr
dec
lds
cld
xor
int
rorb
dec
rcr
clc
sahf
arpl
inc
fst
mov
inc
shr
jg
add
lods
aas
fistpll
mov
or
pusha
jns
rcl
cwtl
jmp
repnz
jp
mov
outsb
sbb
repnz
pop
ja
jmp
pop
sarb
cwtl
test
jno
mov
mov
roll
sbb
dec
cli
or
add
lcall
addl
out
lcall
inc
mov
rcrb
add
movl
gs
stos
pop
lcall
enter
insb
xor
movsb
out
cmovs
dec
sub
sbb
push
lea
stc
in
pop
inc
mov
nop
mov
shl
mov
dec
cwtl
icebp
into
stos
test
add
ret
jmp
jbe
mov
aas
lea
and
sbb
dec
in
loopne
inc
fcompl
scas
pop
cli
mov
add
xchg
ljmp
lcall
test
ljmp
es
scas
dec
mov
pop
pushf
aaa
mov
lret
notb
int3
insl
loope
add
cmpsb
jg
shll
pop
icebp
lock
xchg
cmc
push
mov
inc
ret
jae
test
xor
arpl
pop
repnz
pop
adc
sub
cmpb
mov
movsl
adc
aad
fbld
imul
dec
inc
imul
mov
inc
lret
out
push
lret
pop
fmul
pushf
imul
scas
push
jp
fisttpll
mov
decl
movsl
lds
out
pop
test
ds
and
jne
in
or
jg
xlat
and
dec
mov
test
xchg
xchg
mov
shrb
lock
add
pusha
mov
xchg
cmp
xchg
pop
ret
adc
xor
insb
and
xor
jno
dec
aas
mov
mov
cmpsb
adc
ja
add
cmpb
lods
pop
or
and
mov
decb
lods
inc
push
pop
dec
sub
jl
ds
nop
mov
pushf
jl
imul
inc
out
push
push
mov
gs
push
insb
xor
push
dec
add
repz
pop
popf
mov
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
push
jmp
ret
roll
test
or
dec
in
adc
lret
andb
jbe
shlb
addr16
pop
scas
jge
in
mov
xchg
add
dec
sub
sbb
nop
mov
jp
jo
push
sahf
stc
xor
push
in
or
in
lods
sbb
push
lret
notl
jecxz
bnd
xlat
loope
outsb
out
push
mov
addb
cmpsb
popf
out
test
and
mov
stos
js
lcall
int3
decl
cmp
or
stos
adcl
ja
sub
stc
add
stos
push
xor
sbb
push
data16
lea
movb
pop
cmpb
add
lea
pusha
pop
repnz
or
or
sbb
out
pop
lods
mov
loop
lea
clc
daa
je
mov
into
in
clc
fistl
fsts
rol
cmp
sbb
dec
rorb
icebp
cli
jnp
sbb
add
repz
std
out
syscall
fists
xchg
push
pop
and
add
mov
enter
out
fidivrs
xor
scas
push
je
dec
or
testb
pop
iret
pop
add
xchg
fwait
pushf
sub
and
test
pop
xor
aas
lods
mov
sub
test
lret
jmp
mov
inc
pushf
bnd
rolb
pop
adc
jge
jmp
cmp
in
int3
loop
fistl
cmp
fsts
pop
push
xor
aas
sbb
xor
mov
and
sbb
add
push
mov
out
fbld
push
loop
ljmp
data16
pop
cmp
out
fwait
ds
rol
dec
jecxz
fwait
inc
repz
dec
mov
jp
cs
sbb
pop
test
cmp
push
das
mov
adc
mov
lock
lea
xor
bnd
mov
stc
mov
jmp
in
jle
and
daa
mov
mov
add
mov
sub
dec
pop
adc
aad
jg
daa
ja
sbb
hlt
lods
adc
dec
mov
mov
stos
push
fisubl
push
xchg
aam
or
fpatan
add
mov
sbb
pusha
and
xchg
jae
sarb
ss
into
arpl
push
sahf
lds
ret
inc
lds
mov
push
out
push
and
pop
mov
pop
sbb
insl
inc
pop
sbb
hlt
aaa
pop
sub
lods
pushf
rorl
jae
divb
arpl
push
inc
idivl
stc
cmp
jnp
xor
jp
mov
repz
aaa
xor
jb
pop
popf
or
xor
add
adc
daa
mov
jbe
das
movsl
push
je
ds
xchg
leave
std
sbb
jl
cli
dec
sub
add
lret
cmp
xchg
fbstp
test
sbb
dec
pop
ljmp
outsb
adc
movsl
and
bound
andl
rolb
mov
mov
lock
int
mov
xor
mov
leave
mov
or
stc
das
fldt
or
mov
mov
pop
stos
inc
subl
mov
or
icebp
cmp
jmp
xor
sub
outsl
xchg
mov
stc
xor
push
aad
push
jl
ja
stc
negl
test
lods
cmp
scas
sbb
mov
lret
outsb
cld
mov
je
cmp
mov
mov
dec
scas
popf
outsl
xor
fimull
lcall
mov
inc
jge
inc
sbb
or
mov
shll
jne
pop
lock
hlt
std
or
jecxz
mov
lods
xor
mov
sub
adc
add
imul
jb
cmp
adc
adc
push
xor
add
cltd
mov
int
inc
pop
or
sahf
stc
adc
fwait
mov
daa
and
insb
outsl
std
xor
jbe
data16
popf
filds
int
imul
lret
mov
insl
lret
sub
jle
cwtl
xchg
mov
cmp
inc
rclb
fdivrs
sub
xchg
scas
std
out
xchg
addr16
dec
sbb
imul
jp
sarb
scas
sbb
sub
repz
rolb
paddb
mov
push
lret
mov
mov
mov
push
int3
cmp
push
mov
lret
dec
mov
add
icebp
mov
gs
cld
mov
adcl
shlb
out
pusha
es
jo
push
jl
sub
dec
lcall
cwtl
pop
fisttps
pop
loop
stos
and
rcll
mov
jae
roll
jb
test
jns
mov
repz
cmp
mov
or
testl
jae
mov
mov
cmpl
loopne
inc
xor
int
popf
int3
dec
lret
xchg
pop
cmp
aam
mov
test
hlt
mov
jno
cwtl
jge
out
loope
adc
fimuls
hlt
xchg
mov
jle
adc
das
jge
pop
add
lret
pop
xorb
stos
bound
leave
cld
leave
push
sbb
mov
les
jbe
mov
add
jo
xchg
rorb
shrb
leave
or
in
mov
icebp
add
xor
and
ss
pop
out
or
pop
mov
addr16
sarl
xor
inc
jae
lahf
ficompl
mov
cmp
and
dec
cltd
jg
cmp
adc
popa
icebp
push
xchg
ljmp
and
or
mov
in
cmp
aas
jno
adc
das
jae
adc
insl
scas
stos
pop
jl
mov
cmp
mov
mov
or
frstor
int
insl
pop
jp
and
lcall
jg
stos
xchg
add
cmp
ss
pop
push
sub
sub
fdivrl
popf
subl
fbld
inc
xchg
std
and
addr16
mov
jle
dec
xchg
cli
cli
ret
xchg
std
fbld
sub
push
outsb
ret
repz
inc
xchg
punpckldq
sbb
mov
mov
cmp
or
push
or
jbe
mov
adc
lcall
ljmp
pop
sarb
insl
outsb
add
insl
testl
rorl
movsb
push
mov
lods
sbb
dec
pop
retw
pusha
sahf
dec
inc
daa
outsl
mov
lcall
sbb
cld
mov
imul
movsb
mov
xor
cmpsb
cwtl
hlt
push
push
shlb
push
sar
scas
clc
dec
cmpsl
push
pop
fst
jg
jge
loopne
stos
push
lock
test
into
or
adc
outsb
enter
stos
daa
cmp
xor
loopne
int
pop
mov
adc
scas
stos
sarl
or
mov
adc
xchg
xchg
sub
divb
cmp
andl
insb
mov
mov
inc
in
pop
sbb
lret
scas
fucomp
insl
sbb
push
and
aam
pop
cld
mov
lods
xchg
adc
xchg
out
test
orb
mov
fstl
xchg
cmp
sub
sarb
xchg
xor
int
sahf
mov
mov
lret
in
lods
push
pop
gs
in
xchg
mov
movsl
cli
pop
outsb
xchg
je
and
xor
lods
fstpl
idivl
xchg
pop
bound
mov
fnstcw
inc
outsl
fldl
loop
scas
push
lcall
and
jb
xor
fs
cmpl
push
gs
inc
in
or
test
cli
in
cmp
push
mov
add
mov
ret
xchg
mov
dec
sbb
add
ret
xchg
xor
xor
jns
out
push
push
cli
cmp
and
insb
push
push
mov
sbb
mov
push
push
cmp
adc
adc
lods
inc
shll
jmp
sub
jecxz
cld
dec
fxch
add
shl
shl
pop
and
cmp
cmp
mov
idivl
dec
cmp
xor
fldenv
shlb
out
inc
or
add
push
lods
int
mov
outsl
adc
cld
add
lds
push
test
or
xchg
xlat
jns
fs
sub
lahf
imul
cli
into
adc
ja
mov
shrb
mov
sub
in
dec
insb
and
push
popf
fsubl
mov
pushf
dec
cmpsb
sub
sbb
out
out
xchg
lret
arpl
cmp
sbb
lcall
mov
xor
orb
adc
xor
int3
sbb
mov
mov
cmp
push
jne
subl
cmp
add
push
jle
ja
loope
popa
mov
fbld
bound
dec
mov
cmp
fwait
cmp
lcall
lret
xchg
mov
adc
sbb
sub
addr16
sub
dec
repz
enter
mov
sub
jbe
xchg
mov
pop
lds
jns
sub
jg
out
push
xchg
fcompl
pop
scas
sbb
jb
xchg
pop
pop
inc
int
cmp
call
push
add
xor
mov
movl
dec
mull
test
mov
or
iret
lea
mov
nop
jno
adc
xchg
mov
cmc
mov
cs
push
pop
test
es
pop
loop
dec
pop
test
jbe
adc
push
add
dec
add
mov
hlt
add
pop
scas
sbb
pop
or
lahf
insl
std
xor
sbb
in
in
and
mov
movsb
xchg
pop
or
arpl
imul
adc
cmp
jnp
loop
imul
mov
enter
mov
cli
jne
int3
in
and
push
das
push
hlt
xor
stos
or
lods
jge
sbb
mov
cmpsb
and
imul
xor
popl
jge
and
add
sahf
mov
sbb
bound
cwtl
es
pop
cmp
inc
imul
ja
pop
push
dec
push
aam
jns
jl
jle
notb
jmp
cwtl
jp
jne
xchg
jb
loop
sti
mov
fwait
jl
cmp
cmpsl
in
add
xchg
xor
adc
xorb
pop
lret
mov
pop
aad
flds
dec
adcl
dec
xor
lahf
pop
or
push
ss
pop
sbb
out
add
pusha
pop
sub
lock
mov
jns
push
inc
and
mov
fs
std
lahf
je
cltd
pushf
xchg
shll
adc
push
jle
dec
xchg
loopne
add
sub
scas
and
call
ja
sbb
mov
inc
adc
imul
fsubs
sub
int3
pop
cmp
lahf
xor
hlt
shrl
dec
mov
lds
and
mov
cmpsl
adcb
mov
int3
pop
jl
and
and
jno
scas
daa
jecxz
aas
filds
inc
loope
in
clc
iret
insb
push
loope
adc
cld
push
sbb
sub
pop
addl
arpl
lahf
push
mov
scas
sti
scas
or
cmp
xor
mov
fnstenv
ret
scas
lods
xchg
mov
adc
das
jecxz
out
bound
sub
push
push
push
xchg
xchg
pop
les
sub
mov
arpl
cmpsl
in
je
cmp
and
sub
lods
out
xchg
lods
pushf
xlat
inc
or
xchg
cs
inc
aas
call
out
shlb
and
fisubrl
cmp
test
add
int3
mov
add
jne
xchg
mov
fdivrp
mov
stos
addr16
mov
loop
sbb
or
test
push
cltd
xor
cmc
pop
push
ljmp
sbb
lods
fcmovbe
sub
jl
mov
sti
adc
jl
jg
mov
filds
mov
pop
leave
lods
sub
mov
movsl
mov
cmp
add
push
lret
testl
or
hlt
xor
pop
and
mov
iret
daa
ljmp
jl
or
sbb
in
mov
push
push
mov
flds
ja
pusha
roll
movsb
ret
dec
shl
inc
jmp
test
stc
cli
decb
push
jge
je
insb
fnsave
mov
jp
rcr
xlat
jb
dec
test
out
es
sbb
xchg
leave
inc
adc
mov
and
adc
out
bound
xor
ds
rorb
mov
xlat
out
cmpsl
fldt
push
data16
jl
movsb
xchg
cmp
mov
shrb
stos
xor
popa
jge
jbe
sahf
push
mov
xchg
in
push
xor
dec
push
aad
xchg
xchg
xchg
stos
imul
add
inc
pusha
jecxz
ss
pop
jmp
adc
dec
xchg
loope
aas
cwtl
cmp
push
sbb
add
inc
pop
lahf
dec
or
sub
daa
test
div
jecxz
mov
sub
jns
pop
push
mov
in
sbbb
jp
sub
mov
push
cld
xchg
cmpsb
push
add
and
or
cmp
dec
aam
repz
fidivl
out
stc
and
inc
jo
mov
sbb
mov
sbb
data16
push
xor
aas
dec
mov
jge
push
js
xchg
movsl
cld
leave
out
mov
mov
cmpsl
inc
lahf
push
pop
jge
test
push
cmp
cmp
arpl
push
mov
xor
pop
push
jbe
xor
or
xor
jns
mov
xor
mov
mov
push
and
fwait
ss
pop
test
stos
dec
test
mov
or
mov
icebp
xor
mov
xchg
dec
aad
ja
mov
dec
scas
sub
sbb
dec
mov
pop
es
sub
mov
orb
mov
nop
scas
lret
adc
xchg
shrb
clc
push
adc
sub
jb
mov
pop
repz
xchg
xchg
inc
or
fdiv
and
arpl
adc
ret
test
pop
cld
push
mov
or
imul
fiaddl
pop
negl
xchg
cld
addr16
pusha
aas
fsubrp
shll
xchg
pop
loopne
mov
iret
sbb
or
test
out
pop
and
jo
xlat
cmp
cmc
lods
sub
or
imul
dec
arpl
or
or
mov
mov
pop
cmp
enter
jae
or
ljmp
cmp
push
cmp
jns
ficoms
xchg
dec
gs
mul
cltd
inc
outsb
scas
cli
aaa
pop
mov
loopne
insb
push
dec
xchg
fwait
pop
adc
pop
mov
outsb
loope
fwait
sub
shrl
mov
inc
hlt
cmpsb
rcrl
jno
xchg
jo
stc
or
clc
test
test
cmpb
add
lods
cmp
es
fldenv
ficoms
cltd
scas
add
fwait
out
push
sub
mov
arpl
lods
push
inc
push
in
dec
lahf
pop
enter
or
les
pusha
jg
insb
fldl
pushw
negb
in
out
cwtl
out
cli
add
push
stos
xchg
clc
dec
inc
int3
int
or
pushf
sub
push
pop
adc
push
cmp
cmpsl
jno
ret
adc
dec
sub
cmp
sub
ret
xor
dec
sbb
sbb
add
testb
push
jecxz
notb
paddusw
imul
lods
jo
mov
rorl
gs
mov
int
jge
stc
sti
int3
jle
inc
inc
sub
xor
mov
or
aas
aaa
dec
mov
jge
cli
inc
insl
xor
and
mov
sbb
clc
cltd
dec
cmpsl
jb
sbb
cs
and
mov
mov
leave
cmp
mov
inc
fwait
sub
sub
mov
add
mov
out
adc
jnp
cmp
int3
lahf
add
fwait
jns
stc
fs
ljmp
inc
inc
jns
jbe
pop
and
dec
push
sbb
push
sbb
iret
xchg
and
ja
into
lret
add
cwtl
push
jne
sub
ficoms
mov
inc
out
je
fwait
int3
sahf
clc
cmp
or
xor
sbb
out
add
adc
fildl
jno
jg
mov
push
sub
add
mov
idivb
jp
cltd
push
xor
fildll
dec
mov
cmc
adc
jno
fwait
or
mov
out
add
mov
add
int3
xchg
push
roll
sbb
dec
cwtl
xchg
lcall
int3
or
imul
dec
rcll
subb
std
les
add
mov
push
lret
inc
js
push
pusha
cmp
out
mov
pop
dec
xchg
pop
add
pop
push
mov
mov
and
adc
xor
sahf
arpl
movsb
ljmp
lret
push
dec
outsb
pusha
or
jg
mov
mov
sbb
and
sub
pushl
adc
in
les
mov
fmuls
push
js
lods
out
push
mov
jne
jmp
xchg
cmpsb
push
mov
bound
loope
sahf
pop
inc
mov
push
xchg
xlat
jg
sbb
push
and
addr16
lret
les
adc
nop
inc
xchg
cli
xchg
shl
mov
pop
cmc
fdivrp
push
sbbl
test
in
adc
inc
jb
pop
dec
xchg
mov
test
sub
xchg
mov
mov
data16
push
cmpsb
pusha
lods
fsubrl
adc
das
addb
leave
and
lret
movsl
xor
pop
dec
xor
xor
mov
mov
adc
mov
jle
adc
mov
cmpsb
sbb
repnz
inc
cltd
sti
lret
xor
push
sub
jb
fsts
and
js
dec
push
inc
data16
sub
dec
or
push
jge
mov
pop
nop
clc
jecxz
mov
insb
xorb
add
push
lea
xchg
push
je
mov
jnp
cs
mov
jl
or
and
imul
js
mov
iret
pushf
jmp
xchg
mov
jb
add
mov
popf
mov
add
dec
int
sub
pop
push
mov
adc
jbe
outsl
pop
sub
out
fmul
or
fs
rclb
in
in
popf
sbb
hlt
dec
dec
out
pop
pop
in
add
mov
adc
mov
pop
std
cmpsb
and
add
push
or
insl
out
out
dec
std
cli
out
shrb
cmp
mov
lahf
xor
adc
aam
mov
cmpl
out
leave
bound
inc
cmp
inc
inc
mov
push
loopne
sbb
inc
mov
xor
xchg
lret
iret
or
and
outsl
push
outsl
lods
imul
mov
aad
daa
and
sub
std
xchg
or
mov
ret
stos
mov
and
xlat
sub
stc
mov
mov
enter
xor
cmp
out
cmp
into
test
dec
jo
notb
jl
arpl
int
jbe
imul
inc
ret
adc
pop
jp
cmc
cmp
es
fs
or
test
mov
inc
inc
mov
aaa
push
das
test
and
pop
xchg
fildl
adc
mov
aas
push
mov
mul
jb
mov
cmp
fyl2xp1
sub
orl
icebp
push
pushf
dec
mov
ror
aad
jae
and
movsb
xor
cmpsl
mov
addr16
pop
xchg
adc
rol
add
push
rclb
out
decl
repz
xchg
sub
imul
mov
cmp
int3
adc
push
and
mov
mov
mov
cmpsl
les
cmovb
scas
push
setne
jl
add
in
inc
mov
cmpsb
mov
cltd
das
popa
repz
jle
dec
sbb
xor
cmp
adc
mov
fisubrl
or
or
adc
mov
jmp
push
xchg
call
or
push
fisubrs
insl
inc
call
adc
sbb
ja
inc
and
es
insb
xor
rorl
cmp
pop
pop
and
fistl
dec
pushf
cmp
cld
cmp
std
loop
imul
sbb
mov
cmp
rcrb
fsubl
add
bsr
xor
insb
scas
mov
das
mov
pusha
sahf
push
and
lods
fistpll
sub
cmp
mov
outsb
inc
int
addl
inc
ljmp
ret
test
cmpsb
push
or
inc
aas
jnp
xchg
int3
mov
flds
dec
and
out
xor
daa
out
daa
lods
xchg
mov
enter
pop
mov
mov
jo
out
xchg
pop
call
xchg
movsb
aad
loopne
sarl
sahf
cld
add
add
cli
mov
jge
hlt
xchg
mov
sub
loopne
nop
je
jle
inc
lds
xor
dec
mov
repnz
jae
stos
and
dec
mov
cltd
sub
xor
orl
gs
cmp
mov
out
in
out
test
xor
stc
or
mov
mov
scas
sub
mov
lock
push
xchg
dec
xorl
jl
lahf
inc
outsb
lock
cs
pushw
or
sbb
push
aam
cmp
cmpsb
dec
mov
sahf
lea
sbb
mov
and
popl
aas
outsb
aaa
adc
mov
subb
stos
pop
rcrb
mov
scas
ret
pop
nop
stc
sub
sub
lods
jecxz
mov
in
adc
or
lea
jp
sub
mov
jae
xor
loopne
add
ret
cmpl
push
in
std
jns
push
loop
sahf
push
mov
or
xchg
push
or
adc
xlat
push
push
cmp
lds
and
sbbb
int3
xor
jno
jge
jns
cltd
aaa
inc
lock
or
dec
stos
mov
dec
inc
xchg
xor
iret
mov
lret
sar
ljmp
pushf
dec
test
adc
sbb
add
dec
dec
in
pop
push
push
inc
mov
cmp
popa
jne
stos
icebp
jg
mov
fcoml
xor
incb
addr16
notb
lods
clc
lret
xor
xchg
xor
int
test
rcl
hlt
sub
lret
clc
hlt
inc
xor
dec
sub
mov
adc
jmp
sub
pop
call
mov
mov
scas
repnz
fcompl
add
mov
cwtl
repnz
loope
push
adc
xchg
xchg
pop
fstl
movsb
adc
das
aam
imulb
leave
add
gs
jae
cmp
dec
mov
mov
pusha
inc
gs
mov
ret
sbb
frstor
cs
cmpb
mov
pop
js
push
mov
pusha
add
cld
int3
mov
loop
call
adc
out
repnz
or
insb
popf
mov
add
xor
cmpsl
jp
push
adc
fimuls
pop
fxch
mov
incl
xchg
jb
and
or
stos
rcll
mov
xchg
lods
rclb
mov
aad
sbb
dec
mov
inc
sar
push
jg
out
and
push
inc
addb
jecxz
mov
add
imul
scas
xor
xchg
fwait
pop
sbb
xor
sbbb
and
fnsave
repnz
pop
repnz
fnstcw
jns
jae
nop
negl
scas
cli
lock
push
inc
push
das
out
ss
sbb
hlt
ljmp
loope
mov
mov
push
xchg
and
xchg
outsl
out
and
mov
cmp
hlt
push
pop
or
das
inc
cli
pop
jbe
mov
dec
mov
mov
lock
fadds
shlb
outsb
cmp
imul
pop
cmpsb
insb
scas
lods
add
out
pop
rorl
sahf
fiaddl
popf
mov
jl
sub
adc
lea
jno
adc
loop
push
gs
scas
jmp
lds
cmp
jp
sbb
sti
add
out
mov
mov
sub
in
ss
sbb
and
movsl
push
addb
or
dec
dec
mov
xchg
push
pop
arpl
jbe
scas
jbe
dec
sti
fistps
out
jbe
pop
sti
xchg
jge
push
xor
inc
dec
xchg
insl
pushf
mov
and
or
mov
sti
jne
jle
ja
stc
mov
sbb
xchg
stc
xchg
lods
pop
inc
cld
jl
push
xchg
movsb
adc
mov
sbb
ss
outsb
pushf
cmp
mov
lock
sbb
push
and
sbb
or
inc
lea
pop
clc
aaa
dec
mov
mov
push
insl
mov
xor
out
js
push
daa
sub
popa
mov
or
out
jno
in
mov
fldt
push
ljmp
shrl
fisubrl
es
aas
jg
popa
jb
jns
stos
leave
hlt
mov
pop
xlat
out
pop
push
jbe
cmpsl
hlt
nop
xchg
or
repnz
setno
push
es
rcrl
mov
adc
push
aam
test
and
ret
pop
mov
mov
je
imull
xor
pop
mov
lods
addb
lret
loopne
jecxz
fs
pushf
out
sar
test
ret
out
inc
xor
js
stos
shlb
test
in
inc
movsl
or
sub
and
fwait
push
jb
add
mov
in
add
xchg
xlat
stos
dec
orb
ds
mov
mov
sbb
iret
adc
andl
imul
jns
or
xorb
stc
fisttps
mov
stos
push
sbb
in
movsl
mov
mov
shll
movnti
dec
les
cmpsb
mov
subb
push
aad
lret
mov
or
mov
mov
push
jno
gs
add
cmp
jge
jg
sbb
in
push
sbb
cli
jbe
cmp
or
enter
aas
push
pop
xor
sbb
call
jnp
sahf
andb
adc
aam
cmovle
xchg
fstpt
mov
pop
ret
sbb
push
sti
adc
xchg
adc
ret
jbe
out
dec
mov
cmp
cmp
dec
insl
sbb
fcompl
mov
cwtl
lcall
cmp
and
dec
insl
fcmovnbe
mov
lea
mov
push
xor
xchg
xchg
out
popa
cld
hlt
fwait
loope
dec
sbb
push
movsl
mov
loopne
fs
and
rcrl
fsub
sbb
inc
repz
jp
mov
adc
aam
aam
lcall
stc
arpl
push
push
xor
or
mov
decl
test
dec
cmp
inc
mov
sahf
das
pop
xchg
test
aas
xor
imul
jmp
xorb
xor
jg
out
or
add
fildl
push
xchg
lret
xchg
add
xor
jmp
lcall
lds
push
mov
fnsave
dec
dec
cmp
aas
pminsw
aam
sub
lock
push
dec
cmpsb
mov
inc
dec
adc
cmp
outsb
fdivrs
into
xor
popa
xlat
in
sub
lahf
adc
cwtl
adc
je
bound
jle
ret
add
sub
jb
jnp
or
inc
jb
dec
insl
out
inc
cmpsl
cwtl
mov
xchg
sub
rclb
mov
dec
jo
mov
pop
xchg
movsb
mov
fcompl
out
cmpb
sbb
aas
fdivrs
sub
cmpsl
cwtl
dec
xchg
mov
js
fidivl
lods
das
in
outsb
dec
aam
pusha
scas
fadds
mov
shll
xor
inc
roll
xorl
ret
sbb
mov
jmp
jle
pop
inc
sbb
add
pop
adc
out
xchg
mov
decb
lcall
add
mov
push
ret
sbb
fcomps
loopne
mov
cmp
in
push
divb
out
cmp
jno
adc
repz
jnp
xchg
cmc
cld
jle
mov
mov
imul
mov
adc
cmpsl
inc
ljmp
xor
mov
jbe
pusha
jbe
mov
js
clc
out
loop
insl
xchg
pop
int3
repz
xchg
movsb
mov
nop
daa
outsb
or
mov
lea
jno
cs
mov
push
mov
xchg
movsb
out
lret
scas
cli
arpl
or
push
fldenv
popa
inc
fwait
xchg
scas
push
pop
lods
addr16
mov
in
cmp
jb
scas
cmp
xor
xor
add
cmpl
std
mov
add
jle
loopew
mov
xchg
lods
stos
ror
and
movl
push
sti
xor
int3
adc
outsb
inc
pop
cwtl
jmp
pop
mov
jge
sbb
or
popa
idivl
fiaddl
mov
sub
push
push
cli
xchg
in
mov
insb
mov
xor
push
popf
add
les
xor
pop
movsb
jnp
fcmove
jb
pop
ja
dec
ds
inc
aaa
jnp
xchg
sub
pop
push
push
dec
cmp
rcrl
cmp
sbb
fnstsw
pop
add
lcall
xor
lods
push
inc
xchg
das
ljmp
mov
subb
xchg
out
sub
jnp
xor
push
test
aad
mov
dec
mov
push
leave
mov
xchg
xchg
in
xchg
inc
mov
mov
pop
sub
xor
dec
je
int3
test
mov
cmp
nop
or
fstps
dec
mov
cmp
sub
jg
ficompl
pusha
idivb
pusha
inc
sub
popa
xchg
ficoms
stc
push
divb
movsb
pop
xchg
push
pop
add
leave
or
mov
xor
mov
ss
sbb
bound
mov
jne
popf
fimuls
or
and
mov
jns
in
add
ja
cmp
subb
sub
ss
rcrb
iret
xchg
push
sub
fbld
test
sbb
mov
fisttpll
cmpsb
mov
cmp
in
push
leave
push
push
leave
lret
xchg
xchg
mov
int
aad
pop
jb
push
adcl
outsb
roll
pop
dec
jae
xlat
jl
jno
rcrl
or
lea
int3
cmp
loopne
push
pushl
sbb
subb
push
addr16
dec
inc
push
xchg
cmpsb
mov
out
or
iret
push
into
rolb
pop
and
imul
fs
xchg
dec
and
roll
pop
xlat
insb
or
jnp
cmp
les
ss
or
adc
je
sbb
shlb
fisttps
movhps
stos
cmp
ds
dec
xchg
adc
push
push
dec
test
inc
andb
mov
stos
pushf
sub
add
sbb
xchg
pop
adc
lods
push
mov
stos
xchg
aas
push
cmc
stos
repz
cli
mov
lods
stos
cmpb
sub
jae
call
and
int3
lahf
inc
in
ja
call
popf
punpcklbw
mov
mov
mov
pusha
test
pop
or
in
xchg
and
mov
aas
inc
sti
or
or
das
sub
fs
add
movsl
nop
loop
rorb
ja
push
cmp
inc
lret
hlt
mov
sbb
cmc
fldcw
adc
mov
and
add
ret
adc
jae
aad
xchg
testb
lock
hlt
or
sub
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lods
std
mov
add
