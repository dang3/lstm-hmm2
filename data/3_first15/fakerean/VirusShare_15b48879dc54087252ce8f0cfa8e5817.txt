sbb
add
mov
xchg
fdivrl
out
xchg
and
mov
imul
adc
cs
xchg
mov
cmp
cmp
je
mov
popw
pop
test
cli
dec
dec
lods
cld
pop
cwtl
jle
sbb
mov
xor
fisubrs
xor
sbb
jno
cmc
les
sbb
sarl
int3
fistpl
push
jecxz
adc
add
pop
mov
pminsw
test
fadds
push
mov
dec
xchg
fcompl
test
cli
ds
arpl
ja
push
xor
shr
pop
rcll
xchg
and
xor
iret
push
sbb
sbb
pop
jne
cmp
test
dec
out
into
aad
sub
addb
push
dec
xor
aaa
lfs
sbb
out
faddp
and
lds
xchg
xchg
mov
fs
mov
jmp
mov
daa
dec
std
cmpsb
fcoml
leave
mov
lods
mov
jnp
jecxz
sbb
pop
ret
imul
or
jnp
jecxz
fmuls
imul
in
imul
adc
cmp
movsl
mov
scas
dec
neg
js
add
arpl
les
dec
movsl
pop
nopl
aaa
mov
scas
mov
fidivrl
lods
int3
jge
cmpsb
repnz
cli
mov
test
js
add
cmpsl
js
ret
in
xlat
mov
mov
mov
ljmp
jb
ljmp
mov
inc
enter
xor
movsl
fisttps
jge
adc
xlat
loop
movsl
push
movsb
outsl
xor
repz
dec
add
int3
pop
negl
or
cltd
movsb
jle
lock
mov
test
test
test
sub
mov
aaa
xchg
rcrl
lret
jo
scas
pushf
dec
sub
movsl
sub
push
cmp
mov
test
add
testb
gs
mov
jb
outsb
ja
pop
fs
cltd
inc
or
xchg
roll
and
js
sub
pop
push
xor
scas
push
xor
push
pop
fdivl
adc
mov
roll
mov
or
cmc
jmp
mov
outsb
outsl
out
sbb
lahf
movsl
std
sub
fcomi
pop
and
das
es
inc
pop
and
xchg
mov
mov
pop
es
mov
bound
mull
jns
sub
jp
sahf
cmpsl
mov
ja
sub
mov
daa
push
sub
shll
push
pop
ficomps
aaa
xor
jb
or
pop
stos
xchg
sub
pause
lahf
pop
pop
sub
push
loop
sub
out
cli
jmp
dec
dec
jno
sbbb
scas
sahf
test
jmp
shlb
fdivl
add
push
cmp
jmp
xchg
std
lahf
cmc
mov
test
mov
cwtl
movsl
stos
lock
data16
pop
add
jge
mov
xor
jle
add
xchg
pop
fxch
pop
adc
jbe
test
mov
shll
out
dec
movsl
lea
jns
out
jbe
sbb
adc
test
push
mov
xchg
or
jnp
mov
xchg
push
add
add
cmp
sbb
mov
cli
inc
scas
jg
aas
push
xchg
xchg
int
pop
rcrb
loopne
adc
pop
mov
test
mov
rcrl
inc
loope
lahf
push
jge
pop
ja
sarb
fs
rcll
fisubl
out
push
xchg
rdpmc
lea
and
add
in
cmc
dec
repnz
or
js
scas
jns
xor
push
or
push
push
adc
in
lds
xor
pslld
test
push
or
ret
inc
lods
dec
or
fcomps
scas
inc
stos
ficompl
jbe
stos
jnp
jle
jg
in
cltd
aad
jae
pop
fcomps
movsb
sbb
inc
sub
sarb
je
mov
fsubrs
inc
cmp
sbb
mov
pop
mov
mov
sti
cmc
stos
sbb
out
cmp
lea
mov
js
gs
sbb
std
ret
imul
mov
mov
or
ficompl
pusha
fidivrs
leave
adcb
mov
mov
outsl
je
pop
sbb
and
into
in
loop
xor
xchg
xchg
inc
jne
in
sbb
das
and
sub
stos
mov
lods
mov
lods
cs
out
push
shr
dec
cmc
dec
or
aad
pop
or
sub
inc
mov
popa
clc
and
nop
dec
sbb
enter
imul
or
in
cmp
orl
test
mov
add
pop
cs
repnz
sbb
mov
fdiv
dec
in
loop
repz
repz
push
ret
cmpsl
jecxz
scas
or
in
push
or
shll
xor
cmpsb
mov
int3
push
loop
clc
aad
call
in
popa
fidivrs
jmp
scas
movsb
mov
cmp
fwait
lcall
cmc
lods
add
and
in
fdivl
adc
pop
call
inc
mov
cld
mov
mov
adc
pop
inc
dec
test
sub
sti
inc
nop
cli
sub
pop
mov
shll
add
xor
or
fstps
sti
jmp
movsb
sub
xchg
sti
sub
out
ja
xchg
mov
repz
pop
mov
sbb
mov
out
stc
dec
xchg
pop
test
pop
push
mov
push
orb
jbe
lods
loope
stc
sub
xchg
jb
inc
rcrb
jno
pop
jne
dec
or
sahf
addr16
xor
imul
push
adc
pop
ja
push
mov
aad
into
ja
xchg
push
insl
xor
jo
add
push
and
mov
sub
fwait
sbb
in
aas
adc
pop
inc
lret
popf
popf
xchg
cmp
mov
bound
stc
push
iret
mov
scas
jecxz
fs
fisttpl
js
popf
sub
incb
pop
out
inc
mov
xor
mov
sub
cmp
fcomps
nop
notb
in
dec
rcrb
xlat
sti
push
jns
push
idivb
movsb
int
add
xlat
or
das
xchg
popa
fs
mov
scas
pop
hlt
std
sub
rcr
outsl
jmp
mov
in
mov
push
repnz
adc
cli
call
inc
mov
sbb
pop
fldcw
cltd
mov
and
mov
loope
mov
jmp
nop
aaa
lds
xor
gs
popa
arpl
mov
mov
mov
icebp
enter
sbb
shrb
add
hlt
dec
jge
push
adc
inc
pop
dec
push
pop
sbbl
daa
jns
test
fdiv
andb
jno
push
fnstsw
mov
subl
jp
pop
sti
inc
dec
dec
inc
sub
fisttps
sbb
cmp
test
xchg
mov
adc
mov
pop
xor
test
call
test
lret
adc
push
fildl
cmp
mov
pop
pop
sbb
pop
out
sub
arpl
pop
push
loop
mov
stos
fucomi
cmp
aaa
or
fnstcw
in
mov
xor
jl
or
mov
bound
mov
rolb
dec
inc
rolb
xor
imul
mov
subl
pop
in
fldlg2
mov
lahf
lods
in
or
mov
in
notl
cmp
movsl
es
ss
in
subb
pop
xor
and
icebp
push
fnstcw
fs
int
fcoml
and
add
aam
xchg
inc
cmpsb
movsl
sub
add
jns
pusha
push
addr16
sub
shll
cmp
gs
sbb
push
stc
loope
and
lock
mov
jb
shl
cmp
add
dec
in
mov
or
dec
ficoms
sub
pop
insb
lock
lahf
pop
mov
sub
sbb
dec
dec
in
repnz
out
mov
push
movsb
pushf
cli
dec
fmulp
scas
nop
sti
out
mov
push
repnz
adc
in
sti
andl
lcall
rep
fldt
ss
jmp
cwtl
xor
lcall
das
outsl
cmp
sbb
das
faddp
sbb
xlat
std
test
and
or
enter
aas
mov
xor
cmpsl
pop
cs
inc
mov
xchg
jbe
repnz
fucomip
sub
fmuls
mov
dec
testb
rcll
mov
jae
mov
pop
fucomi
push
cltd
mov
imul
pop
adc
adc
mov
cmp
jmp
test
in
jbe
mov
or
pop
pusha
aaa
sbb
nop
add
pusha
pop
lret
imul
pop
data16
push
dec
ret
lods
mov
scas
sbb
jb
sarl
divl
aam
and
add
mov
push
aaa
lea
hlt
sub
mov
adc
repnz
sbb
sar
or
sbb
pop
inc
mul
rorl
mov
lods
sub
lret
test
out
push
call
aas
jns
push
dec
lahf
int
stos
scas
add
mov
or
aad
or
mov
jnp
pop
mov
shll
cmp
and
ljmp
dec
dec
jb
push
clc
xor
xchg
pmuludq
movsb
add
push
mov
out
addr16
or
sub
test
fstl
sbb
add
push
hlt
cmp
nop
movsb
out
sub
jle
and
mov
add
bound
sbb
popa
mov
les
inc
jle
testl
fimull
dec
es
jae
lds
daa
nop
negb
pop
cs
cwtl
pop
fidivrs
jle
jp
clc
inc
sbb
orb
adc
fcom
dec
call
inc
jns
and
outsb
push
lret
pusha
adc
push
std
mov
cwtl
adc
mov
clc
mov
jp
aam
stos
cmp
testb
pusha
mov
adc
jae
les
lea
or
mov
pop
xor
pop
paddw
jle
pop
test
fldenv
hlt
add
jmp
idivl
inc
outsb
in
leave
movsl
or
pop
mov
sbb
dec
xor
jmp
sub
inc
xchg
ret
rcrl
pop
test
in
aaa
adc
dec
push
ljmp
pop
dec
out
movsb
adc
js
mov
sbb
cltd
iret
cmp
add
fistps
mov
popa
xlat
mov
mov
jb
mov
orb
mov
mov
pop
imul
out
ror
or
scas
bound
outsl
out
lahf
std
stos
mov
negb
pop
out
fucomi
out
pop
add
in
or
jo
pop
test
or
insl
mov
add
cmp
dec
xchg
mov
mov
cmp
cmp
jo
push
xor
int3
out
mov
push
cld
mov
jle
jno
lds
or
xor
dec
sub
ss
popa
add
lahf
xor
inc
icebp
sahf
loope
outsl
jbe
xchg
cmpsb
mov
stc
hlt
xor
test
add
pop
sub
jb
add
mov
mov
jl
cwtl
cmpb
or
hlt
js
dec
rcll
out
mov
or
mov
jg
cld
mov
mov
mov
jbe
dec
and
cwtl
jmp
mov
or
shll
push
fistps
cmovne
mov
inc
or
popf
ljmp
scas
pop
mov
xchg
je
decl
add
sti
and
jecxz
add
mov
add
mov
xchg
aad
xor
mov
sub
sti
fbstp
outsl
pop
inc
jecxz
or
fiaddl
push
xchg
pop
imulb
rol
icebp
pop
rcrl
and
shrl
fdivrl
mov
or
inc
insb
xchg
dec
insl
fnsave
insl
cmc
addl
jne
shr
inc
cmp
sbb
insl
pop
push
pusha
push
daa
sub
pop
repz
add
mov
mov
packuswb
adc
adc
mov
imul
ljmp
sub
sarb
test
cmp
jle
or
add
ljmp
mov
push
ljmp
add
lcall
pop
fmull
jg
xchg
xchg
fistpl
lea
gs
lret
loope
mov
mov
cmp
dec
pop
jle
loopne
arpl
imul
stc
jmp
mov
insb
cmp
add
pop
or
mov
dec
sbb
pop
fcmovnu
lret
popa
xor
in
pop
xor
sub
mov
adcb
xchg
repnz
xchg
outsl
test
stos
scas
adc
fldenv
enter
push
and
test
or
lea
or
div
dec
add
pop
adc
mov
cltd
lock
mov
and
mov
sub
adc
pop
fcmovnbe
xor
dec
rcrl
incl
test
and
pop
inc
leave
jle
mov
add
xchg
ret
or
add
lock
sbb
adc
or
imul
mov
mov
stos
or
insl
cmp
imul
mov
call
hlt
mov
xchg
out
cwtl
dec
and
mov
jp
jno
mov
cmp
cmpsb
or
mov
dec
xor
push
xor
out
dec
gs
hlt
sti
mov
mov
movsl
cli
mov
inc
add
shl
test
cmp
cmp
xor
fdivs
push
jns
push
out
repnz
sub
adc
leave
lahf
outsl
pop
pop
pushf
ja
push
pop
arpl
mov
mov
dec
adc
sub
push
sbb
std
movsl
xor
cmp
cwtl
cld
cmpsl
cs
roll
insb
and
mov
fwait
sub
out
and
leave
adc
mov
int3
pusha
xchg
test
jnp
mov
mov
mov
mov
stos
outsb
ret
mov
lcall
cmp
fsts
dec
enter
jecxz
popa
rolb
xor
ret
cmp
dec
adc
rol
cmc
inc
jns
xchg
cld
push
mov
sar
outsl
movsb
xor
adc
push
add
inc
daa
decb
movsl
cmpsb
inc
stc
dec
sub
lea
mov
fbld
sbb
jo
jae
and
sub
lcall
adc
pcmpeqb
popf
push
fistps
fists
cmpsb
pop
jno
fsubrs
out
and
ds
mov
xchg
sbb
pop
sub
mov
sbb
push
mov
sub
and
in
iret
mov
add
push
mov
loopne
in
stos
push
data16
lahf
repnz
mov
iret
hlt
scas
and
jle
in
aam
dec
xchg
sbb
pusha
push
fisttpll
and
pop
mov
rcr
lret
js
mov
inc
sarl
insl
pushf
pop
pop
mov
sbb
sub
stc
inc
cmp
das
clc
mulb
rcrb
mov
xchg
and
or
sbb
pop
inc
arpl
cmp
dec
dec
test
push
dec
mov
inc
pop
xchg
mov
arpl
mov
adc
call
das
cmp
aas
fmuls
in
pop
add
pop
mov
xchg
push
xor
es
out
lret
hlt
scas
je
loope
adc
jmp
push
scas
or
mov
ficompl
cmp
xchg
jmp
js
jecxz
cmpsl
mov
les
push
pop
stos
pop
mov
sub
movsb
leave
adc
inc
pusha
out
sahf
mov
lret
lods
adc
clc
ficoml
insl
jne
push
jae
fwait
lahf
mov
je
jbe
repnz
scas
push
jmp
jge
jge
xchg
mov
xor
in
inc
push
orl
jbe
pop
add
daa
xchg
push
fwait
test
insb
or
sbb
iret
fisttps
cmp
mov
icebp
jge
adc
sbb
mov
add
lcall
cmp
in
xor
pop
pop
push
pop
fwait
iret
fstp
cmp
loopne
in
cmp
loop
lods
out
mov
adc
insb
daa
pusha
sbb
mov
push
stos
addr16
in
and
imul
stc
out
in
pop
mov
notl
xchg
aad
push
cs
add
mov
pop
or
jo
out
mov
popl
test
mov
scas
cmp
jbe
aad
jnp
jbe
push
push
xchg
mov
loope
sbb
cmc
pop
sbb
shll
jnp
bound
mov
ljmp
shlb
add
sub
mov
jns
xor
mov
sbb
adc
jle
adc
push
adc
repz
dec
fwait
cmp
sbb
in
sub
int3
jnp
xchg
lret
dec
rolb
loop
push
outsb
dec
enter
mov
push
pushf
rcrl
sbb
add
insb
sarb
aaa
mov
sbb
push
fmull
cld
sub
mov
addl
insb
into
mov
cltd
cmpl
clc
jg
jns
xchg
shlb
jo
lds
jne
add
mov
xor
sbb
pop
imul
or
pop
leave
adc
pushf
outsb
out
cwtl
dec
clc
cmpsb
rcll
adc
sbb
leave
xchg
lea
outsl
aaa
jnp
test
mov
test
xchg
or
shrb
fldenv
jge
test
mov
push
cltd
sbb
aam
xor
fimuls
addl
adc
sub
jns
dec
fwait
jmp
jae
lret
pop
xchg
inc
mov
stos
inc
sarl
int
cmpsl
xchg
in
leave
or
sbb
call
jae,pt
jle
and
aam
repz
out
add
mov
dec
enter
and
hlt
jo,pn
add
push
js
sbb
in
lock
sahf
cli
push
push
call
push
jae
pop
rol
daa
imull
int
aam
popa
cltd
add
sbb
adc
cmp
lds
call
hlt
faddl
sub
pop
pop
inc
sub
mov
cmp
sub
and
ljmp
das
inc
pop
cmpsl
in
mov
sbbl
cli
push
and
mov
loop
add
adc
fnstcw
lds
adc
xor
imul
add
mov
test
xor
xchg
lret
xor
mov
outsb
cwtl
in
add
popf
cwtl
fnstenv
cmp
mov
mov
shll
and
and
push
push
xchg
sbb
mov
aad
xchg
and
sbb
repz
pop
inc
jle
fnstsw
xor
aaa
mov
pop
lcall
in
cmp
fmul
fistpll
jge
and
xchg
xor
jne
jl
in
inc
mov
push
in
out
jne
or
leave
lret
hlt
div
movsl
jne
dec
cmpsl
sbb
ja
pop
or
mov
loopne
movb
stos
jae
dec
test
fstps
mov
jae
jae
mov
pop
adc
icebp
out
push
int3
push
push
push
cld
mov
insl
sub
cmp
lock
sahf
aas
shrb
mov
nop
mov
outsb
cltd
test
mov
xor
inc
jbe
into
mov
lcall
mov
push
enter
mov
inc
outsl
mov
mov
adc
inc
adc
push
and
movsb
xchg
push
xchg
fiaddl
fisttpl
leave
mov
sbb
neg
adc
popa
in
sub
push
add
dec
pop
xor
xchg
mov
push
sti
mov
mov
pop
jge
jge
cmc
jo
rcrl
lea
stos
xor
sbb
out
jne
or
icebp
gs
rolb
lret
addb
adc
pop
ss
dec
in
int
lds
add
in
nop
adc
sub
andl
mov
adcb
push
push
ja
bound
loope
pop
int3
sbb
les
and
push
je
jb
dec
jge
into
repnz
and
cltd
icebp
jl
cmpsb
mov
int3
cmp
xchg
push
push
jno
mov
dec
ret
dec
shrb
arpl
mov
or
icebp
inc
stc
jno
fwait
push
mov
subb
pop
leave
addr16
inc
cmpsl
dec
push
dec
xor
pop
cmp
lahf
stos
fnstcw
mov
gs
or
jnp
pop
xor
mov
mov
scas
dec
loop
scas
pop
or
stc
sub
cld
mov
outsb
int
xchg
movsb
loop
pop
or
lock
mov
lods
daa
fdivrl
or
push
fmull
xlat
pop
mov
jg
nop
inc
mov
xchg
fsubrl
dec
aaa
repz
xor
jg
aam
adc
jg
cmc
cmp
loopne
movsl
or
ljmp
jno
repz
lea
jb
sar
inc
stos
cmc
sub
xor
sahf
movsl
sbb
mov
jae
add
stc
movsl
arpl
lret
paddusw
aam
pop
and
inc
test
cmp
or
adc
add
or
pop
imul
mov
add
push
stos
addb
test
cld
mov
stos
negb
in
mull
mov
xchg
sbb
aas
xchg
cli
push
mov
addl
fistl
ja
mov
cltd
push
movsb
lock
cwtl
in
pop
jle
push
mov
scas
inc
nop
jmp
or
ret
pushf
fiadds
mov
into
cmp
mov
cmpsb
je
push
cmp
push
jmp
mov
or
cltd
or
push
jmp
stos
cld
and
or
lods
orl
repz
and
jg
cltd
inc
pop
cld
insl
loopne
call
dec
ljmp
xchg
fcoml
ret
cmpsl
jb
bound
lods
pop
nop
arpl
inc
xor
std
rorl
jnp
movsl
enter
loop
mov
movsb
push
cs
lock
sub
gs
adc
dec
dec
xor
mov
xor
adc
push
xchg
aas
adcl
xchg
dec
push
shlb
ficomps
jnp
roll
scas
mov
inc
das
mov
xchg
pop
and
into
pop
pop
jno
mov
lret
nop
dec
adc
xchg
sahf
fwait
mov
push
push
mov
pop
test
sbb
xor
js
jmp
mov
push
imul
mov
outsb
fsubrs
mov
sahf
add
lcall
test
cmp
mov
std
enter
mov
ja
or
icebp
mov
jg
rcrb
aam
inc
dec
in
es
sub
sub
mov
mov
ret
jle
aam
mov
sbb
int3
sub
rclb
bound
aaa
mov
dec
fmul
cmp
repnz
lret
in
mov
in
ss
xchg
notb
ds
sbbl
fdivrl
push
int
cmp
enter
outsl
lahf
jg
fsubrs
xchg
inc
aad
insb
xchg
ret
cmp
rorl
adc
rclb
mov
stos
pop
and
aaa
and
outsb
mov
fidivrs
xchg
into
bound
sub
jp
setnp
mov
or
and
add
xchg
lock
jecxz
fwait
lcall
out
mov
mov
in
insl
or
push
dec
and
add
cmc
mov
mov
jns
sysenter
pop
and
mov
push
es
cmc
aas
dec
cmp
adc
fs
cmp
jecxz
adc
fxch
test
jbe
push
sarb
xchg
mov
pop
cmp
push
movsl
dec
mov
sbb
sub
sbb
cs
dec
xchg
cli
fiaddl
sbb
add
sahf
hlt
or
cltd
loop
adc
push
adc
jle
out
fs
and
aam
test
dec
or
xchg
mov
pop
and
jmp
mov
nop
push
into
mov
xor
popa
xchg
rolb
sahf
andb
les
cmpsl
shll
repz
popf
xchg
test
jns
adc
sbb
sbb
dec
inc
shl
xor
js
pusha
push
fisubl
cmp
dec
jne
sub
push
in
movsb
sbb
imul
sbb
and
mov
das
add
jg
into
mov
xchg
pop
cltd
pop
push
js
popf
pop
js
mov
test
addr16
scas
xchg
sbb
out
aaa
push
popa
jnp
cli
jb
popa
filds
inc
mov
shrl
mov
arpl
push
test
mov
rorb
jo
arpl
pop
lcall
jg
inc
addr16
dec
pushf
aam
inc
jp
sbb
mov
push
xchg
ret
insl
and
movsb
loope
jns
mov
les
fistl
ficomps
bound
subb
mov
push
fdecstp
outsb
idivl
mov
int
cs
ljmp
pop
and
pop
inc
mov
inc
mov
sbb
sub
mov
add
js
movsb
pushf
xor
fiadds
xchg
push
jmp
scas
and
ret
scas
jb
push
mov
stc
test
imul
int
push
fldl
loop
retw
das
fcmovnbe
adc
rcrb
lods
arpl
ss
sti
sbb
adc
cltd
cwtl
cmp
push
gs
and
popf
cwtl
or
sub
enter
cmpsb
fnsave
in
lahf
dec
fistl
stos
std
ret
in
sar
arpl
scas
je
sub
inc
pop
out
cmpsl
add
dec
icebp
lcall
sbb
filds
push
iret
aaa
sahf
filds
dec
pushf
outsb
cmpsb
icebp
lock
ja
rcrl
in
loope
add
insl
fdivrs
inc
andb
mov
push
addr16
mov
je
or
mov
sbb
loope
ds
xor
push
xchg
add
nop
and
es
movsl
lods
mov
data16
into
insb
mov
loope
inc
push
add
xor
push
outsb
repnz
jo
fmuls
sub
add
inc
inc
and
jae
pop
insl
sahf
out
bound
and
les
or
sub
pop
mov
imul
aaa
enter
xor
ret
jno
mov
imul
mov
or
rep
fxch
sbbl
xchg
sub
mov
jae
outsl
movsl
in
mov
in
adc
push
in
lcall
jnp
lds
dec
fstps
cmp
sub
insl
outsl
mov
test
jge
jno
push
rcrl
out
xchg
push
lock
cmpb
push
mov
cmpsb
insb
fwait
repnz
subl
sbb
sub
adc
in
cmpb
xchg
ds
stos
mull
lods
mov
cltd
out
xchg
push
inc
repz
mov
pop
pop
das
dec
lea
and
jbe
dec
mov
shlb
sbb
std
adc
pusha
add
xlat
lods
pop
pushl
and
stc
std
es
adc
jbe
mov
ds
mov
inc
mov
inc
lret
insb
js
cmp
mov
mov
ljmp
mov
adc
pop
cs
movsl
xchg
mov
xor
mov
xor
lcall
mov
push
inc
xor
sbb
pop
jo
xor
push
pusha
jnp
push
sub
ja
pushf
push
das
or
push
jno
fistpl
mov
into
sub
cmp
cmp
adc
movsl
add
xchg
int3
inc
ja
push
pop
adc
cmp
lret
faddl
mov
out
std
clc
xor
add
lret
das
or
repz
pop
push
mov
repnz
or
jb
sti
int3
mov
daa
dec
ret
push
pop
xchg
subl
cmp
mov
call
lahf
sbb
jbe
add
pop
mov
mov
fs
inc
fistpll
adc
push
mov
jecxz
xchg
pusha
mov
mov
scas
fbstp
fnstenv
sbb
add
jnp
sub
into
loope
sub
lcall
test
popa
jge
out
lahf
popl
xchg
sbb
insb
xchg
cwtl
inc
and
jp
arpl
leave
je
adc
ret
sbb
push
push
adc
scas
push
inc
inc
adc
jne
imul
outsl
mov
xchg
sub
cmp
push
push
xorl
push
cmp
or
shlb
daa
add
clc
jno
xor
icebp
mov
iret
insl
add
inc
sbb
shll
jnp
das
xor
cmp
movsl
or
cmp
push
stc
or
fistpll
imul
push
pop
pop
pop
pop
xor
mov
js
mov
fldenv
ret
out
outsl
inc
push
nop
stos
shlb
adc
push
jge
cmpsb
push
push
shr
mov
lea
sbb
idiv
inc
or
repnz
cld
or
sarb
mov
cld
adc
xchg
mov
sub
sub
add
mov
call
jb
pop
gs
jg
aas
loop
pop
mov
dec
decb
ljmp
inc
and
loop
leave
sub
xor
inc
shrb
popf
fwait
sub
jno
repz
repnz
inc
jbe
push
dec
pop
mov
cld
mov
xchg
sub
mov
cltd
pop
lea
or
ljmp
dec
and
pop
cli
int3
pop
mov
out
cmp
jl
es
lea
cs
and
xchg
pop
sub
ficoml
add
or
clc
in
and
inc
pop
and
dec
cmovs
xchg
jp
sbb
in
push
or
xchg
jecxz
stc
sub
mov
mov
jmp
cmp
push
into
into
sub
rorl
mov
adc
sbb
lods
mov
push
pusha
in
fdivrs
iret
outsw
fwait
xor
gs
cmp
sahf
mov
push
mov
xchg
cmp
sbb
sbb
pop
sub
or
mov
data16
cwtl
mov
mov
std
in
xchg
mov
imul
mov
sbb
jl
outsl
arpl
jbe
mov
lods
inc
pop
lods
shlb
or
xor
sti
inc
aaa
inc
jl
and
ds
pop
movsb
and
pop
mov
xchg
push
pop
test
sub
jb
in
inc
xchg
mov
inc
loop
mov
inc
decl
and
jae
dec
jg
push
mov
out
lea
popf
fwait
sub
pop
call
pop
mov
mov
out
add
xchg
adcl
sbb
cmc
push
idiv
mov
mov
in
xchg
lds
mov
inc
outsb
add
push
inc
cmp
ljmp
outsb
leave
add
add
fiaddl
andl
adc
out
outsb
loope
repnz
xchg
shlb
imul
mov
sti
nop
rcl
jae
xchg
and
daa
add
xchg
out
scas
adc
fcmovu
cli
jb
fwait
sub
dec
pop
cmc
jmp
adc
jae
xor
rclb
into
dec
xor
or
cmpsb
cmpsb
imul
jo
aas
int3
or
lret
mov
xchg
shrl
cwtl
mov
mov
testl
mov
pop
add
lahf
push
cld
cld
inc
stc
xchg
jg
jecxz
leave
test
jns
mov
sahf
pop
insb
pop
or
lea
test
cmc
pop
fsubr
inc
cmp
dec
mov
cmp
into
vphsubbw
jg
pop
imul
dec
das
and
jge
loop
mov
sbb
sbb
flds
jne
xchg
push
sub
les
xlat
ffree
cli
shll
xchg
mov
jecxz
xor
cs
mov
inc
push
fnclex
sbb
mov
clc
imul
sbb
dec
and
mov
aad
and
inc
mov
or
mov
mov
or
jl
js
xor
lea
sub
adc
dec
push
push
mov
fimuls
adc
iret
lea
xor
mov
loop
inc
jge
pop
aam
call
aam
cmc
add
pop
lds
lds
pop
dec
cmpl
mov
fwait
push
fdivl
adc
jl
sbb
xor
sub
inc
pop
pusha
cmc
insl
aad
daa
or
das
scas
jg
jmp
push
jge
adc
mov
movsb
scas
test
scas
inc
sub
jge
sti
or
enter
sbb
xlat
inc
pop
sti
cmc
cmpsb
cltd
insl
pop
add
lret
add
xchg
xchg
mov
sbb
fwait
stos
adc
pop
sub
dec
cmp
pushf
dec
js
das
jns
dec
push
add
push
popa
dec
xor
pop
jecxz
into
mov
push
in
mov
cmp
xor
inc
std
aad
cwtl
icebp
sub
cmp
adc
sbb
lods
mov
popa
loop
dec
add
mov
pop
scas
rcll
mov
sub
sub
add
cmpsb
jg
sbb
int3
mov
adc
lds
sub
addb
je
leave
cli
sti
cmc
test
testb
add
out
xor
xchg
out
fwait
int
adc
divb
cmpsl
mov
cld
leave
xchg
jnp
loope
loopne
jp
ret
or
ret
and
out
test
or
add
in
and
mov
fwait
leave
icebp
xor
pusha
jne
in
mov
and
jne
leave
in
ja
stc
dec
add
and
mov
sbb
out
mov
loope
mov
js
aaa
ret
push
sub
xlat
dec
addr16
enter
mov
lcall
adc
cld
data16
orl
in
in
dec
pop
dec
xchg
xor
push
js
jge
lret
pop
ret
dec
popa
fs
push
sub
jo
and
jmp
or
fsubrp
mov
shl
mov
call
sbb
fisubrs
aad
mov
pop
out
sub
call
adc
inc
sub
add
cmp
iret
push
aam
or
inc
gs
add
sbb
into
xchg
add
xlat
addr16
push
jmp
inc
adc
pop
jmp
cltd
mov
pop
test
mov
push
and
data16
lahf
cmp
sti
sbb
sbb
sub
dec
push
xchg
stc
mov
xor
outsb
sub
adc
test
es
cli
pushf
pop
into
lret
filds
adc
jno
push
sbb
and
in
lods
sahf
dec
scas
adc
push
mov
std
test
stc
xor
add
lods
hlt
lahf
mov
adc
arpl
cmp
imul
dec
cmp
cmp
jl
xchg
adc
jne
aam
lcall
test
test
sub
mov
push
pop
sbb
push
add
pop
bound
adc
dec
mov
add
or
cld
cmp
test
popa
inc
adc
mov
gs
sahf
mov
test
pop
xchg
xchg
les
jp
in
inc
cmp
js
mov
lods
fidivs
dec
mov
or
call
loope
pop
fdivr
push
call
push
iret
pop
ret
repnz
pop
sbb
xchg
xor
test
cmp
stos
jo
icebp
jg
xor
stc
push
das
dec
inc
lock
mov
aam
pusha
nop
dec
movsl
lret
jge
add
cmp
jo
in
dec
mov
lea
inc
and
cmp
sub
stos
movsl
inc
cltd
adc
pop
call
loop
xchg
loope
mov
inc
or
sub
lock
mov
rcll
dec
lea
mov
and
and
jp
pop
mov
mov
mov
add
loope
in
push
xchg
idivb
mov
aaa
cmp
dec
out
aad
cmpsl
dec
and
adc
lahf
popa
xlat
dec
jecxz
fldl
lcall
int
jns
lret
inc
and
pop
aam
cmp
push
push
mov
or
enter
push
add
pop
sub
fwait
mov
mov
cmp
insl
inc
sub
rcl
fsubrs
pop
dec
popf
imul
data16
inc
js
nop
pop
push
mov
mov
daa
paddsb
mov
je
mov
ljmp
aad
and
cli
lds
xor
into
mov
xor
add
mov
mov
pop
cli
je
mov
xchg
mov
xchg
cld
je
rclb
push
mov
or
pusha
mov
cmp
addb
push
cmc
pop
into
flds
imulb
in
inc
mov
dec
push
pop
push
lods
mov
dec
ror
neg
sub
pop
jecxz
jb
dec
xor
xor
push
mov
lods
ret
pop
adc
pop
push
dec
mov
cld
sbb
mov
in
push
mov
in
ret
imul
outsb
lret
test
jo
adc
lcall
test
add
loop
aam
test
jns
insb
aaa
mov
lock
or
fnsave
pop
jbe
repz
in
mov
mov
js
sbb
and
sub
sub
inc
xor
movsb
jo
pop
out
ss
repnz
repnz
into
imul
sbb
jae
stc
mov
pop
cli
gs
push
ds
std
stos
mov
cwtl
xor
adc
adc
jmp
pusha
out
sub
sarb
push
pop
push
js
cmp
sbb
shrb
adcb
popf
pop
pop
ret
nop
mov
mov
aaa
mov
jp
xor
mov
into
inc
outsb
inc
sub
leave
pop
test
fidivl
es
push
lock
rcr
subl
push
sub
push
jae
cmp
dec
or
add
mov
test
sahf
xor
jg
push
cmc
and
mov
lods
cmp
xchg
add
push
mov
fwait
or
cmp
and
push
out
xor
shll
mov
cmp
lods
mov
jnp
sub
xchg
sub
jo
ljmp
and
loope
mov
xchg
dec
stos
dec
cs
push
and
cmp
test
movsb
pop
das
js
pop
jge
xor
outsl
test
mov
call
and
les
cmp
xchg
pop
enter
pop
mov
mov
mov
sbb
or
and
mov
pop
je
cltd
mov
fisubrs
pop
xor
aaa
pop
inc
clc
in
dec
in
adc
jp
cmp
outsb
jns
inc
cltd
mov
cli
mov
test
ja
inc
imul
stos
ret
mov
pop
mov
nop
cmc
data16
test
dec
rcr
outsl
cmp
adc
rcrb
push
repnz
cmc
adc
and
cli
dec
push
dec
mov
xor
sub
push
testb
scas
xchg
add
mov
fistps
xor
push
adc
loop
push
xchg
jns
xor
cmpsb
nop
sub
lods
bound
add
das
pop
aaa
dec
mov
cmp
enter
jl
loope
loop
mov
cli
aam
lds
mov
idivb
dec
in
scas
mov
add
into
sarb
movsb
push
push
pop
ja
lods
repz
subb
mov
xchg
test
pusha
or
inc
cli
sbb
mov
movsb
jp
stos
out
pusha
loop
lods
mov
push
and
in
in
ss
stc
fnstsw
xor
int
cmc
fcoms
mov
lret
iret
fcompl
xor
jg
add
mov
add
sub
sbb
push
push
cli
ret
sahf
movsl
mov
mov
sub
jne
insl
lret
imul
mov
leave
mov
xchg
mov
sub
sub
inc
scas
sub
adc
sub
inc
mov
out
sbb
mov
inc
xchg
xchg
test
push
jno
or
cli
and
sub
fmul
repz
or
jecxz
xchg
and
push
shl
fs
mov
xor
icebp
cmp
dec
cmpsl
and
out
mov
insl
push
mov
lods
andl
cwtl
rcrb
and
mov
fildll
push
mov
pop
push
dec
push
into
sti
pop
add
orl
imull
insl
idivb
jecxz
dec
imul
jmp
xchg
insb
adc
fsts
addl
dec
sbb
pop
sbb
push
and
jns
scas
xor
mov
inc
das
jge
mov
lcall
add
jge
cmp
imul
faddl
mov
movsb
mov
outsl
mov
ljmp
dec
mov
sarl
stc
inc
jnp
mov
xor
add
and
or
or
xchg
stc
fdivrl
adc
in
sbb
cmp
push
rol
push
push
sbb
rcrb
aad
and
or
lret
aad
std
mov
jb
xchg
dec
cmpsl
and
iret
cmpsb
mov
xchg
je
adcl
maxps
testb
add
loope
sbb
and
mov
push
and
jne
or
fdivs
mov
sahf
imul
in
repz
sub
adc
imul
mov
and
enter
push
or
icebp
sub
loope
xchg
mov
cmp
mov
outsl
sub
push
loope
xchg
xchg
gs
dec
and
mov
fisubl
add
leave
sub
push
xlat
rcr
xorl
in
aad
aad
xor
insl
jns
xchg
or
mov
cmp
xor
push
int
outsl
cmc
inc
leave
cmc
sub
out
es
or
sub
imul
mov
fsub
jae
sub
sbb
sub
sbb
mov
rclb
jmp
cmp
cmp
push
das
mov
dec
cld
and
sbb
pop
test
jne
inc
push
daa
sub
cmp
in
jmp
xchg
mov
jae
ja
inc
push
add
subb
adc
or
nop
fmull
rcrb
push
jl
mov
push
xor
mov
or
push
and
je
inc
mov
aas
imul
or
xchg
lcall
aaa
clc
jmp
andl
loop
in
iret
xchg
cs
pusha
loop
pushf
movsl
inc
in
mov
mull
outsb
iret
push
jnp
jb
imul
xor
mov
jnp
and
clc
fdivs
pusha
test
subb
faddl
stos
pop
lods
and
mul
filds
inc
ret
add
insl
mov
mov
dec
or
frstor
adcb
inc
les
push
cmp
clc
movl
cltd
mov
jmp
push
jl
bound
jg,pn
sbb
loop
stos
lods
xchg
push
lds
push
test
out
jmp
js
xchg
xchg
loope
test
leave
ljmp
adc
scas
sbbl
jno
sbb
add
sub
sub
add
xor
lods
pop
fs
iret
mull
sub
push
inc
aas
and
shl
jg
and
xchg
mov
mov
or
adc
enter
imul
es
notb
and
decb
cmp
rorl
or
stc
inc
mov
notl
adc
lret
cmp
incb
and
iret
popf
mov
push
push
adcl
dec
ret
mov
pushf
sub
lods
inc
stos
pop
add
imul
lahf
scas
xor
lods
adc
popa
jp
lret
dec
inc
fildll
insb
mov
sbb
adc
stos
pop
xchg
adc
inc
push
push
cld
xor
mov
out
mov
xor
jmp
imul
aas
lds
pop
or
adc
xor
lods
sbb
sub
mov
push
jb
lock
mov
ja
add
xor
sub
xorl
pop
daa
fs
lods
negb
cmc
mov
mov
adc
xchg
mov
xchg
data16
lods
mov
test
mov
ret
push
fdivp
clc
sbb
and
mov
fwait
mov
adc
xor
repz
dec
shl
pop
jbe
sub
aam
add
mov
xchg
fists
xlat
stc
sbb
fstp
sub
dec
imul
pop
insb
mov
or
mov
jmp
and
jg
ucomiss
scas
adc
ror
ret
jmp
sahf
ds
push
pop
mov
icebp
test
ja
inc
adc
mov
jmp
cmp
mov
pop
and
push
dec
cld
xchg
lret
imul
inc
mov
xor
mov
or
mov
jge
test
in
xchg
mov
dec
outsb
pop
jp
adc
out
sbb
rorl
sub
mov
adc
addr16
jl
aad
push
out
mov
bound
scas
or
xor
int
test
adc
cmp
inc
insb
insb
push
fcompl
and
mov
mov
dec
adc
xor
sub
cmpsb
jne
arpl
lcall
cld
sub
lds
push
hlt
das
lds
pop
or
cli
cmp
outsl
subb
mov
imul
jne
lahf
icebp
pop
int
dec
xchg
cld
ja
jae
sub
dec
cli
test
fdivrp
fs
bound
xchg
and
inc
jl
add
mov
inc
cmp
mov
xchg
mov
jp
adc
or
adc
mov
loopne
fmul
pop
pop
or
xchg
dec
dec
mov
call
xlat
inc
mov
jnp
dec
sub
cmpsl
ret
push
ja
test
cltd
jno
ss
mov
sub
lret
mov
sub
add
pushf
xchg
mov
xchg
push
outsl
and
sbbb
test
dec
ss
dec
pop
jns
int3
push
mov
fldl
jb
push
mov
xchg
std
insb
gs
jb
push
mov
ret
fwait
push
cmc
fstl
dec
les
or
jbe
pop
push
cmp
stos
inc
add
cmp
fistps
sub
add
shlb
mov
inc
adc
jno
sarb
rcl
xchg
push
loopne
xchg
iret
mov
les
mov
mov
jb
jecxz
ret
lods
lahf
lahf
sub
rolb
outsl
xor
sub
insl
aas
sub
clc
sub
loop
mov
stos
add
in
and
mov
mulb
add
fcomip
lcall
les
popf
stos
mov
iret
mov
mov
mov
stc
imulb
popf
mov
xor
mov
sbb
jecxz
fwait
scas
push
fdivs
adc
loope
or
pop
add
movl
data16
mov
jg
nop
subl
lods
push
xor
pop
sbb
imul
inc
xchg
aaa
fisttpl
aam
inc
test
dec
xchg
repnz
sbb
and
cmp
into
movsb
out
les
cmp
mov
movsb
mov
inc
or
out
ficomps
cmp
data16
mov
push
jo
sahf
cld
lret
push
push
inc
js,pt
sub
mov
enter
leave
iret
add
mov
mov
mov
jb
inc
lret
mov
shrb
add
add
sarb
inc
cli
dec
daa
scas
test
xchg
js
mov
inc
sti
fdivs
ja
mov
mov
popf
adc
scas
jne
jecxz
pushf
leave
xor
and
jp
idivb
xchg
mov
dec
jl
push
cmp
and
fwait
out
movsb
orb
adc
sbb
sub
cmp
and
and
jl
pop
data16
xchg
sbb
in
loop
push
add
mov
mov
lcall
imull
sarb
in
aas
popf
dec
test
adc
add
or
sub
jne
out
insl
fsub
pop
imul
xchg
ss
xor
int
mov
xor
add
ror
inc
aam
add
call
call
and
ss
rolb
sub
xlat
xor
xor
arpl
dec
push
mov
mov
sub
sub
push
mov
sub
imul
mov
sti
xor
loope
in
test
call
pop
dec
adc
gs
sub
addr16
test
std
xchg
cmpsl
sbb
jno
stc
or
gs
cmp
xchg
out
iret
pop
pusha
shl
and
sub
insb
mov
sbb
pop
push
insb
mov
mov
imul
lahf
div
pop
add
and
inc
mov
jb
cmpsb
cmp
and
xchg
je
imul
xlat
fbstp
inc
and
sti
xchg
out
fiaddl
pop
stos
and
xchg
hlt
sbb
jbe
sub
or
pop
inc
jmp
mov
mov
sub
rcr
xor
lcall
imul
pushf
test
ret
mov
push
mov
pop
add
mov
stos
mov
pop
and
iret
sub
les
jle
gs
cmp
sbb
jmp
and
add
mov
add
imul
adc
push
push
iret
dec
shl
pop
or
fadd
cmp
push
mov
xor
push
sub
adc
jecxz
shlb
es
pop
scas
fwait
pop
sub
addb
call
sbb
into
push
cmp
rorl
xchg
mov
arpl
and
das
ljmp
fistpl
notl
pop
ret
in
sahf
scas
push
or
or
cli
or
std
hlt
test
inc
and
lret
and
push
xchg
xor
sbb
add
xchg
push
jno
popa
or
lcall
ds
test
sbb
sbb
push
push
dec
aaa
sbb
xor
jns
dec
jb
dec
inc
in
pop
push
add
cld
in
std
es
faddl
bound
mov
in
jge
xor
movsb
jo
cmp
dec
cmpsb
and
cmpsb
sbb
lock
idivl
rorb
leave
xchg
xor
mov
sub
mov
inc
jge
sbb
scas
mov
adc
inc
dec
cwtl
push
dec
into
stc
lods
adc
add
in
lahf
xor
xchg
stos
cmp
outsb
icebp
mov
pop
xchg
mov
xchg
hlt
jmp
inc
sbb
in
scas
lcall
loope
in
xchg
and
jb
jns
outsb
mov
imul
jae
into
das
xchg
jo
and
ljmp
push
cmp
or
in
or
inc
inc
xor
rcrb
add
fiaddl
sub
lds
repnz
pop
dec
aas
xchg
icebp
out
in
cwtl
out
std
push
pusha
shlb
fcoml
lods
lcall
push
jnp
mov
mov
cli
aas
imul
sbb
mov
or
or
mov
cs
cmp
xlat
andl
into
add
addr16
push
pop
mov
jmp
rcll
jae
xchg
sahf
xorl
or
cwtl
scas
pusha
addr16
nop
mov
cmp
pop
push
fwait
inc
jge
cmpsb
inc
push
xor
pop
adcb
outsl
inc
sub
mov
out
aad
cmp
or
mov
xor
adc
gs
inc
ror
mov
out
push
jecxz
xchg
pop
sub
clc
mov
push
jg
dec
sub
in
pop
std
add
cwtl
or
test
subl
js
mov
leave
mov
subb
push
adc
leave
aaa
mov
sub
shlb
adc
dec
mov
mov
or
sub
inc
adc
sub
pop
scas
mov
cmc
push
cltd
and
es
loope
xlat
mov
sar
sbb
cwtl
loop
not
mov
lock
fwait
cmpl
push
adc
or
mov
push
sub
push
cmp
cmpsl
popa
or
or
sahf
mov
pop
ss
popf
lods
iret
jmp
mov
mov
into
fisttps
leave
int3
insl
fisubrl
out
dec
fsubl
stos
push
rorl
jns
loope
xor
pop
rcrb
mov
push
push
mov
add
stos
ret
pop
cmpsb
lods
mov
iret
jb
jo
xlat
cmpsl
push
mov
jno
push
std
fwait
add
jnp
xor
cmpsb
in
test
xor
in
jo
lods
push
push
pop
loopne
adc
cs
mov
jecxz
ds
xchg
lods
pushf
push
hlt
scas
dec
push
outsb
jg
mov
out
mov
jmp
mov
aad
cmp
or
sbb
dec
inc
fsqrt
cld
cwtl
push
lahf
ret
jecxz
cs
add
cli
fimull
jmp
add
pop
cmpsb
jb,pn
xchg
push
mov
sbb
movsl
js,pn
mov
sub
cli
scas
mov
mov
into
outsl
jno
xchg
scas
add
fisubs
insb
mov
lods
test
pop
clc
adc
insl
xchg
cltd
sahf
inc
paddsw
out
fists
xor
mov
jb
jmp
frstor
mul
inc
or
fcom
in
mov
pop
outsl
xor
imul
add
jecxz
adc
ljmp
arpl
addl
leave
inc
inc
test
in
sbb
sbbl
jno
and
xchg
cmp
shrl
loop
shrb
leave
icebp
pop
xchg
sub
pop
jnp
xor
mov
lods
pop
lret
sarb
and
dec
adc
jp
jb
ss
sub
hlt
adc
mov
bound
and
xor
mov
cmp
stos
sbb
cmp
lods
leave
cmc
adc
inc
push
aad
pop
pop
mov
sub
hlt
xchg
fsubrl
push
shrb
xchg
mov
adc
insl
pop
aas
lcall
and
cwtl
pushf
divl
loop
fidivs
push
int3
fsubr
dec
or
adcb
neg
sbb
ret
ficoms
arpl
rorb
mov
and
aad
mov
aas
ret
or
cmpsb
adc
xchg
lret
aam
jno
cli
xchg
jbe
push
movsb
pop
adc
sub
and
dec
jbe
outsl
dec
sahf
xchg
lea
enter
rcrl
imul
add
ds
mov
push
pop
lahf
mov
imul
xorl
pop
pop
js
add
fwait
dec
vpmaxub
dec
inc
testl
test
imul
js
and
adc
xchg
mov
push
jl
rclb
xor
dec
xchg
loop
call
and
pushf
mov
and
push
sti
popf
push
test
fidivrs
dec
das
push
xor
cmpl
pushf
mov
sbb
push
lahf
xchg
jle
cmpsb
add
push
adc
rcr
cli
xchg
dec
dec
pop
dec
fadds
arpl
xchg
pop
popf
iret
push
sub
and
sub
jno
test
mov
push
pop
xor
out
mov
test
sarl
inc
jne
add
dec
jae
jns
in
clc
mov
push
lahf
imul
pop
jl
ljmp
lea
popf
icebp
cmpl
and
xchg
ffreep
icebp
leave
nop
jle
push
popf
or
mov
notl
mov
xor
cs
imul
in
cmp
lea
push
mov
sub
adc
and
mov
in
and
pop
movsl
xor
lea
sti
mov
adc
addps
push
inc
icebp
pop
xchg
test
mov
insb
cltd
sub
and
in
xor
jb
mov
inc
mov
adc
mov
dec
lds
pop
ret
in
jg
push
test
out
adc
xchg
pop
ror
add
and
fbstp
add
out
pop
mov
jmp
jp
push
mov
gs
jns
sub
xor
fbstp
mov
lock
add
push
jmp
mov
fisttpll
mov
in
shrl
sub
sub
lcall
cltd
xchg
sub
je
cmpb
mov
and
xlat
icebp
push
push
push
cmp
bound
push
cltd
cmp
iret
in
cmpsl
jge
mov
mov
jl
sub
sub
xchg
push
test
mov
insb
aas
xchg
shlb
dec
and
mov
fsubr
lods
mov
add
popa
push
push
jns
fcomps
je,pt
jnp
iret
notl
jnp
xchg
xchg
sub
mov
inc
jmp
icebp
or
dec
outsb
add
pop
icebp
clc
movsb
and
mov
mov
aaa
and
add
lods
mov
dec
lock
xchg
ds
push
xchg
imul
mov
mov
aam
outsb
jge
push
cmpsl
insb
add
inc
test
ret
mov
and
mov
cmpl
add
int3
mov
sbbl
push
mov
inc
mov
add
sbb
push
insb
outsb
xor
mov
mov
xor
int
outsl
mov
rorl
push
mov
jmp
cmp
inc
xchg
pop
xchg
jbe
in
std
jecxz,pt
pop
out
ror
sub
mov
adcb
push
lock
xchg
add
call
ret
push
stc
movsl
xchg
enter
mov
sbb
jbe
rcr
aam
xor
push
cmpsb
jmp
mov
or
pusha
cltd
dec
aaa
push
aad
sub
pop
ljmp
out
fwait
lahf
and
dec
aas
or
mov
add
mov
scas
xor
or
popa
cli
adc
inc
inc
mov
cmp
cmpsl
fdivrs
cmc
push
mov
js
adc
in
jbe
xor
jnp
mov
mov
fisttps
pop
pop
cli
fdivrl
xchg
mov
push
xchg
push
mov
sbb
push
mov
xchg
or
add
mov
mov
add
mov
fdivs
stos
scas
stos
lds
xchg
and
lods
cmp
mov
shlb
adc
pop
xchg
je
push
sbb
je
popa
inc
lock
add
add
and
int3
mov
mov
mov
in
es
clc
mov
lea
jl
jo
clc
push
pop
pop
lret
cmp
push
in
sar
dec
loop
popf
fdivl
cs
lock
add
xor
pusha
cs
xchg
cmc
aam
cmpl
mov
adc
fdivl
and
mov
adc
scas
pushf
hlt
push
xor
xchg
or
testl
sbb
pushf
cmp
push
call
push
ja
ret
xchg
imul
dec
mov
cmp
shll
xchg
aaa
nop
pop
insb
scas
out
lret
jmp
in
pusha
icebp
mov
xchg
scas
cltd
loopne
insl
add
bound
addr16
rcr
sub
cmp
mov
and
and
imul
jae
and
aas
jmp
fs
fildl
push
enter
jb
pop
insb
arpl
gs
push
xor
xchg
cmp
add
push
sbb
sti
sbb
mov
sbb
out
pusha
cmp
outsb
inc
gs
sub
xchg
jo
cmpsl
dec
mov
add
cmpsl
inc
mov
ljmp
lcall
dec
fdivs
daa
sub
push
sbbl
adc
jle
jmp
loope
jne
test
je
push
cltd
mul
jp
ret
mov
pop
adc
sbb
pop
jge
neg
daa
xchg
pusha
inc
xchg
sub
std
mov
cmp
cld
stc
out
aaa
jnp
mov
adc
cmc
or
mov
nop
add
jb
pop
add
lods
and
ss
and
jb
sarb
push
out
shrb
or
jg
mov
pop
pop
inc
push
sbb
xchg
sbb
fimull
dec
jg
pop
loopne
or
lds
ret
movsb
das
xchg
insl
or
push
mov
mov
xchg
adc
jg
in
enter
enter
fdivrl
ret
insb
add
lret
or
add
cwtl
mov
data16
aad
cmp
daa
enter
sbb
lods
pop
daa
popf
mov
insl
lea
aam
in
mov
clc
sub
push
mov
mov
outsb
fsubl
sti
ja
fs
pop
add
gs
adc
sbb
jns
daa
dec
sub
mov
test
into
jecxz
and
pop
jecxz
mov
cs
cs
xchg
shll
aad
lea
imulb
ret
adc
aaa
pop
cmp
mov
cmpsb
adc
stos
scas
int
aad
xlat
push
stos
jb
xchg
aas
lret
sbbb
inc
add
das
mov
dec
pop
inc
cmp
xor
mov
or
add
and
iret
cmp
sub
sahf
push
loopne
std
and
leave
and
fs
push
dec
and
jae
and
push
pop
pop
nop
mov
orl
pop
roll
das
xlat
cli
dec
sub
loop
aaa
dec
mov
jge
mov
clc
add
xor
mov
and
push
test
mov
push
pop
test
push
ret
stos
xchg
dec
outsl
out
jbe
ja
insl
rolb
mov
xchg
into
adcl
cwtl
lea
enter
pop
inc
adc
mov
data16
mov
int3
ja
test
pop
xor
out
sub
adc
jecxz
dec
xchg
xchg
nop
pusha
jns
xlat
int
xchg
cltd
pop
shll
adc
lret
mov
adc
adc
addr16
fwait
inc
sub
test
cmp
cwtl
dec
push
push
leave
push
jae
sbb
loope
iretw
and
cmp
jl
mov
or
addr16
pusha
std
pop
xor
in
cmp
xchg
or
pop
mov
ljmp
add
ljmp
enter
xchg
es
push
mov
cmp
cmp
push
sub
test
push
pop
dec
je
push
xor
stos
xor
outsl
test
xor
in
push
rcrb
aam
insl
ja
orb
mov
jae
inc
nop
cltd
out
jg
inc
push
dec
test
jg
dec
in
pop
shll
jl
jg
es
mov
xor
xchg
hlt
fldt
sbb
arpl
cmp
xor
pop
xchg
push
pop
daa
out
xchg
shlb
sar
in
push
mov
xorl
fstl
arpl
or
sarl
sbb
pop
ret
scas
or
cmp
jmp
lods
scas
xor
jno
repnz
xorb
icebp
cmpsl
xor
push
cmp
int3
je
hlt
stos
mov
fstl
int
ljmp
pop
cmp
es
lcall
int3
or
testb
pop
mov
fs
icebp
icebp
aas
addr16
pusha
mov
xor
loope
icebp
insb
into
les
fdivl
push
sbb
inc
data16
push
mov
rcll
sub
out
push
jb
adc
fbstp
movsb
nop
hlt
adc
dec
je
dec
shlb
jo
cwtl
xchg
dec
adc
popf
fs
jge
xorb
dec
add
jmp
dec
xor
mov
inc
or
jmp
cli
cmp
addb
dec
popf
hlt
xchg
jge
push
aam
mov
inc
aaa
out
jg
imul
jmp
lcall
and
dec
inc
xchg
fstpt
mov
sub
xor
push
loopne
call
mov
sub
lcall
mov
mov
in
iret
loopne
push
xor
es
clc
out
je
or
inc
repz
mov
dec
mov
gs
mov
fnstcw
jno
sub
fs
mov
or
frstor
jl
dec
sbb
dec
jmp
xor
adc
je
or
push
andb
xor
imul
clc
mov
xchg
cmpsl
and
ret
lods
add
sarl
push
mov
aaa
inc
mov
jns
xchg
pop
or
mov
xchg
sub
lods
and
xchg
imul
push
aad
dec
das
or
jmp
fistpll
mov
das
fistps
and
or
lahf
fs
adc
jo
sub
sbb
in
cmpl
push
push
popa
jecxz
adc
mov
mov
mov
or
or
lcall
aam
cmpsb
rcl
and
aad
dec
out
fimull
mov
loopne
sbb
cltd
bound
insl
push
mov
fstl
sub
mov
mov
jo
roll
sarl
lock
dec
loopne
mov
and
stos
cmp
cmpsl
frstor
fistps
inc
imul
repnz
inc
fiadds
mov
aas
xchg
lahf
cltd
mov
xchg
jne
test
add
mov
fwait
cs
sub
mov
outsb
fildl
lea
pop
lahf
jns
mov
dec
mov
push
add
addr16
cld
out
gs
inc
cli
ret
dec
fs
imul
insl
mov
std
mov
dec
dec
mov
icebp
mov
push
cld
lcall
addr16
mov
inc
cmp
scas
popf
push
cmp
sti
sahf
test
pushl
dec
xor
cs
and
push
cwtl
data16
lods
xchg
add
or
cmc
adcb
mov
mov
dec
rcl
daa
mov
enter
mov
cmp
aam
lret
outsb
adc
jp
sbb
out
sbb
dec
mov
sub
mov
shll
and
stos
cltd
rcl
pop
rclb
mov
sbb
mov
das
outsl
sbb
dec
mov
leave
loop
or
in
mov
cwtl
lock
out
lods
pop
add
xchg
inc
xor
pop
ds
fcmovbe
in
popa
mov
mov
sbb
mov
pop
and
les
orps
iret
cmc
jg
pop
sbb
cmp
int3
cmc
popa
cmp
std
in
mov
pop
jge
es
mov
sbb
pop
movsl
or
fstl
inc
jmp
dec
xchg
mov
inc
dec
xor
mov
cmpsl
fists
js
loop
popa
pushf
movb
or
dec
push
push
sahf
mov
pop
push
xor
and
sbb
or
stc
lods
jo
mov
insl
data16
jb
mov
inc
or
sub
sub
mov
cmp
jp
and
scas
sahf
inc
aas
adc
xor
fs
jo
decb
xchg
dec
add
ja
dec
stos
mov
je
insb
sti
dec
lret
mov
mov
filds
lods
bound
sbb
inc
sub
mov
pop
xchg
push
push
sbb
popf
testb
mov
pop
adc
lret
ja
cmpsb
dec
sbb
jle
xchg
ret
rol
addr16
lcall
mov
hlt
cmc
jno
rcrl
mov
test
rclb
cmp
lds
mov
xchg
jno
lahf
inc
ss
dec
pop
and
xchg
add
cmpsb
lahf
mov
xor
cmp
xor
push
icebp
outsl
leave
sbbl
xor
cmp
adc
outsb
and
jecxz
arpl
imul
push
mov
mov
imul
inc
bound
dec
and
fs
arpl
mov
int3
push
pop
inc
out
into
addr16
push
xchg
mov
in
add
paddw
repz
jp
data16
pop
jae
sbb
jecxz
push
loope
aaa
gs
sbb
das
pop
scas
cmp
outsb
shlb
mov
loope
dec
ret
jno
notl
mov
repz
sbb
lods
mov
dec
aam
pop
movl
sbb
in
push
push
out
prefetcht1
mov
aas
hlt
shlb
ffree
fwait
arpl
push
aad
add
ss
inc
and
xchg
pop
dec
in
adc
ret
movsl
adc
adc
pop
and
sbb
aam
ret
shll
pop
and
sahf
xchg
repz
sarl
aam
adc
add
nop
add
mov
pop
and
and
inc
call
sub
repnz
sub
gs
push
mov
stos
inc
inc
sti
std
or
into
jl
fwait
ss
cmpsl
mov
pop
push
dec
in
in
imul
loop
inc
cmp
lods
cmc
xchg
neg
notb
dec
xchg
sbb
xor
imul
adc
or
shr
pop
dec
mov
adc
shrl
jmp
es
loope
dec
push
lods
inc
lahf
jae
aas
scas
les
cmp
aas
jmp
sbb
fadds
pop
loop
inc
je
inc
pop
std
mov
lds
loope
out
ret
cld
jecxz
sub
jge
sbb
cmp
popa
sahf
out
jge
jnp
jnp
cmp
lea
gs
or
dec
or
push
aad
inc
shlb
repz
cmp
or
add
mov
add
test
cmp
pop
rclb
outsb
xor
cltd
dec
mov
test
in
dec
in
into
push
loop
repz
dec
cld
xchg
in
adc
jne
fistpll
push
xchg
xor
or
lea
andb
lahf
fsts
inc
ja
js
pop
fdivrl
add
mov
add
dec
incl
pusha
and
pop
cld
or
mov
dec
add
push
test
cmpsb
sub
ficompl
pop
jo
andb
mov
addr16
mov
scas
xchg
sbb
cmp
imull
inc
sub
sbb
jecxz
push
scas
mov
lret
mov
mov
mov
jno
ja
outsb
inc
jne
pop
daa
mov
dec
push
movsl
frstor
inc
pop
adc
jns
insb
repnz
or
dec
outsb
adc
out
dec
xchg
and
fdivs
push
mov
mov
jo
mov
dec
jae
loop
mov
push
out
pop
jne
mov
push
jo
lcall
int3
int
push
out
icebp
mov
pop
jecxz
icebp
andl
leave
scas
pushf
test
mov
jae
pop
dec
sbb
and
jl
jo
cmp
jne
repnz
cs
mov
jle
jge
subl
das
lock
lds
nop
cmp
jge
adc
sti
andl
xchg
pop
or
cld
adc
rorb
pop
nop
mov
mov
addr16
push
out
repz
adc
rcll
ljmp
int3
flds
mov
lret
in
push
and
test
pop
pushl
popf
xchg
inc
inc
jns
mov
xchg
or
add
pop
pop
sub
lods
ficompl
jmp
jbe
aaa
push
or
pop
xor
add
mov
test
cmp
dec
test
nop
pop
test
lock
lock
adc
mov
mov
and
xorb
mov
jle
mov
mov
daa
icebp
pop
scas
gs
movl
std
xor
xor
lret
inc
fsubrl
sbb
nop
nop
test
add
add
and
xchg
jne
aas
mov
sbb
inc
mov
xchg
movsb
mov
jg
dec
in
jns
pop
pop
jle
sub
add
sbb
imul
aam
mov
cwtl
inc
and
xchg
dec
push
aad
jl
jns
pop
movb
xchg
sti
repz
mov
jle
jae
xchg
int
or
sub
add
mov
mov
inc
ds
push
pusha
scas
call
lods
or
enter
sbbl
enter
sti
insl
seto
adc
xchg
out
mov
sbb
push
test
test
ss
mov
scas
je
xchg
and
mov
aad
shll
mov
mov
fistps
xchg
mov
dec
out
and
movsb
aas
push
call
scas
cltd
push
loopne
push
sub
xor
pusha
ficomps
cmpsb
push
loop
daa
dec
iret
fs
into
mov
roll
inc
fcoml
shl
jne
rolb
fcos
mov
movsb
loop
fldt
jp
stos
add
cmp
iret
imul
call
sub
stos
mov
loope
sub
ja
fimuls
pop
sbb
and
inc
cmc
sysexit
cmp
std
mov
push
bound
aas
and
nop
dec
out
mov
gs
out
bound
inc
mov
loopne
scas
roll
xchg
jb
xchg
data16
dec
lods
or
inc
jg
cli
ficoms
mov
int3
xchg
rclb
stos
jb
enter
addr16
movsl
lahf
lahf
cmpsb
mov
outsw
push
mov
iret
adc
mov
jbe
add
stos
mov
and
mov
mov
jmp
dec
test
cmp
js
adc
cs
add
jl
jb
mov
or
dec
or
inc
or
imull
pop
jg
test
stos
add
xor
lcall
pop
lock
popf
lods
pop
fdivs
stos
test
jne
push
cwtl
cmp
les
xor
jp
in
add
int
inc
mov
dec
jb
pop
cmpsl
pop
inc
dec
enter
add
mov
fwait
and
pop
adc
jo
sbb
mov
lea
cmpsl
mov
call
inc
lcall
in
mov
pop
inc
pop
pop
xor
push
and
sbb
mov
imul
or
mov
sub
add
es
in
mov
cmc
and
jp
jns
xor
sahf
adc
pop
nop
xchg
cmpsl
lret
adc
adc
add
xor
xchg
test
insl
ret
xlat
mov
lods
mov
sbb
mov
and
popa
sub
arpl
out
testb
or
xor
lock
xchg
test
adc
mov
imul
ja
pop
mov
sbb
push
cmpsb
mov
jp
test
into
mov
mov
mov
inc
or
pop
mov
in
sbb
jno
int
push
cmpsb
add
jno
into
mov
test
stos
mov
xor
call
fwait
xor
cltd
or
pop
inc
stos
jnp
test
adc
nop
imulb
aam
or
aaa
inc
daa
adcb
fwait
insl
dec
xor
mov
stos
or
xor
jnp
mov
mov
rorb
mov
xor
xchg
xor
lods
mov
bound
out
fwait
lahf
cwtl
jno
cmpsb
jnp
aaa
or
mov
cmc
div
and
or
push
cltd
xchg
in
fsubs
xchg
push
push
mov
mov
pusha
stos
cmpsb
cwtl
mov
int3
out
cltd
test
inc
jno
testl
in
out
fs
ror
movsl
lcall
daa
xor
sbb
pop
sub
sbb
bound
cmp
mov
pop
xor
lock
mov
das
jge
popa
add
add
mov
jb
push
and
xchg
ffreep
or
xor
dec
aaa
mov
int
jmp
scas
repz
mov
stos
int
mov
imul
sarl
xchg
enter
addr16
inc
sbb
xlat
les
pop
jne
shrl
imul
test
outsb
cmp
xchg
push
aad
cmp
stc
sbb
or
mov
or
insb
mov
rcr
jle
insb
notl
rcrb
sub
dec
stos
xchg
add
xchg
push
sub
fmuls
or
shll
jecxz
clc
in
ds
push
ss
xchg
fcoml
sbb
push
int
addr16
adc
dec
fildll
or
and
in
inc
dec
data16
add
pop
or
sbb
dec
and
movsl
mov
insl
jns
mov
cmp
pop
xchg
enter
sub
mov
movsb
xchg
xor
outsl
mov
sbb
mov
adc
inc
pop
add
inc
adc
push
mov
out
rorl
dec
clc
mov
sub
aad
mov
xchg
xchg
xor
repnz
lcall
aad
jmp
mov
hlt
jnp
mov
imul
inc
fwait
dec
dec
loope
sbb
and
outsb
xchg
movsl
je
shrl
notb
push
add
pop
ds
cmp
lcall
xor
js
dec
cmp
int3
push
mov
mov
push
hlt
cmpsl
lock
push
pop
adc
shll
jb
notb
or
cwtd
imul
pop
mov
icebp
pop
rol
xchg
or
idivl
bound
sar
dec
cmp
jle
pop
xchg
rorb
push
gs
mov
leave
add
lds
stos
sbb
xor
or
fnstsw
cmp
lock
sbb
out
add
or
sahf
xchg
jno
sub
pop
bound
jb
push
daa
outsb
ret
mov
and
shl
fs
mov
mov
int3
dec
sub
add
repz
jae
mov
pop
test
and
ljmp
les
xor
and
cmc
fistl
ja
test
adc
mov
push
fadd
hlt
bound
mov
test
fimuls
mov
inc
lds
ret
cmpsb
fmull
dec
ljmp
xor
push
and
fisttpl
push
mov
inc
or
adc
add
jle
mov
push
sbb
add
jne
push
movsb
outsb
scas
dec
adc
mov
sbb
out
loop
pusha
fwait
es
sbbl
cmp
cwtl
push
sbb
xchg
pop
scas
lret
mov
fs
push
and
ljmp
sub
insl
jg
push
imul
pop
pop
adc
arpl
sub
ds
xor
dec
lret
xor
leave
es
mov
inc
rorl
jl
fidivs
test
fidivrs
xor
insb
jle
pop
push
adc
or
mov
js
roll
inc
dec
pop
xor
popa
cltd
in
addr16
inc
mov
push
mov
jg
aas
mov
pop
imul
mov
imul
push
jbe
mov
fmull
shrb
or
or
fstpl
pop
sub
insl
pop
iret
lret
inc
adc
rolb
xchg
shrb
push
cmp
adc
push
movsl
sub
rcl
cwtl
mov
lret
pop
cmpsl
sti
xchg
adc
imul
pop
cld
andl
cltd
mov
xchg
loope
add
enter
es
in
adc
xor
sbb
orl
cs
sbbl
test
cld
clc
out
fstpl
cld
loop
jb
and
mov
pop
sub
loope
out
std
fildll
xor
push
fisttpl
mov
sahf
in
add
xor
fldt
test
cmp
rep
mov
pop
shlb
orl
outsb
ret
loopne
and
jbe
pop
pop
cmp
mov
repz
or
maskmovq
les
adc
add
movl
and
sub
outsb
aam
fldenv
out
push
test
push
or
cmp
je
push
sub
ja
mov
out
sahf
add
xchg
jae
mov
addl
inc
addr16
in
jecxz
inc
iret
mov
sti
sbb
xor
jnp
or
fadd
and
adc
daa
imul
jge
or
lods
sub
inc
add
inc
mov
pop
xchg
mov
ljmp
mov
loop
add
pop
push
sbb
pop
add
sbb
push
mov
lea
dec
xchg
mov
xor
cltd
jle
ss
in
and
mov
xchg
and
adc
mov
movsl
loopne
or
loopne
push
les
cmpsb
ss
mov
jns
cmp
cwtl
popf
insb
ss
int3
sbb
pushf
clc
jae
icebp
cmp
inc
mov
cmpsl
mov
lahf
orl
fdivrs
es
lea
jnp
scas
mov
out
dec
dec
adc
icebp
dec
cmp
pop
daa
sbb
jne
lock
lret
sarb
shr
cwtl
jne
outsl
rcrl
mov
dec
arpl
mov
int3
lret
stc
mov
mov
out
and
ss
data16
adc
mov
xchg
jecxz
cli
bound
push
xchg
scas
push
insl
dec
cmp
fbld
xor
js
aad
cli
scas
sbb
add
mov
scas
mov
or
out
nop
add
leave
cmp
lds
pop
push
arpl
and
ret
bound
mov
nop
mov
out
inc
sub
stc
ret
and
mov
dec
std
stos
push
jmp
repnz
xorb
cmp
daa
xchg
adc
xor
jns
xchg
bound
mov
addr16
mov
cmpsl
push
jl
xor
scas
or
sbb
jbe
sahf
pushf
outsl
push
xor
shrl
and
pop
inc
mov
jns
insb
and
add
arpl
sbb
xchg
jge
popf
loop
stos
and
lock
outsl
lods
pushf
mov
aam
sbbb
add
leave
sub
pop
cmp
mov
test
lods
popl
cmpsl
call
lret
sub
or
push
cli
push
iret
pop
jp
sahf
xlat
mov
jecxz
aam
push
xchg
cmpsl
mov
xor
pop
sbb
jmp
mov
in
adcb
decb
out
test
inc
or
jecxz
dec
and
and
data16
xchg
xchg
cmpsb
cmpsb
fldcw
rolb
lods
or
ss
mov
xlat
xchg
stc
mov
adc
lds
jmp
sahf
push
iret
lods
push
hlt
dec
mov
cmpsb
pop
fwait
repz
push
test
add
frstor
push
pop
ja
push
fwait
nop
data16
push
add
cs
add
or
sbb
imul
add
xor
xchg
jo
xchg
fdivrs
fisttps
mov
es
mov
cmpsl
xor
jl
push
xchg
stos
pop
ljmp
mov
cmp
mov
adc
insb
cmp
adc
mov
stos
loop
cmp
jge
cmp
scas
add
dec
aad
pushf
mov
pop
jp
hlt
clc
cmpsl
jnp
mov
push
jp
stc
adc
and
inc
ret
jp
cli
lods
mov
sbb
nop
mov
dec
sbb
sti
aad
hlt
in
dec
pop
insb
mov
mov
sub
add
cmp
andl
inc
mov
les
icebp
dec
dec
mov
ss
adc
xchg
cmp
xor
clc
mov
int3
or
jnp
jle
fwait
bound
or
inc
add
ss
ret
mov
jecxz
xchg
jb
xchg
or
popf
xor
jecxz
mov
ljmp
cli
pusha
mov
pop
adc
outsb
push
mov
dec
pushf
js
aad
pop
xchg
iret
lods
xorb
lds
xchg
push
jae
xorb
sbb
xlat
jns
addl
mov
mov
sbb
dec
adc
ret
jb
inc
ficomps
js
mov
cwtl
jb
nop
cmpsl
push
aaa
pop
movhps
data16
in
sbb
repnz
mov
mov
add
adc
mov
int
mov
inc
sub
iret
in
out
std
push
lcall
fwait
xchg
adcl
sbb
mov
dec
ja
cmp
cmp
push
popa
xchg
test
mov
stc
mov
fwait
or
or
cmp
dec
fnstenv
jmp
xor
push
mov
add
xchg
andb
mov
aam
mov
add
stos
sub
inc
jmp
xchg
lret
mov
xor
sub
inc
cmp
lret
sti
rcl
popa
adc
dec
ret
popf
mov
loope
sarb
cmp
mov
pop
xchg
inc
mov
pop
jg
fsubrl
addr16
rcr
xchg
mov
cld
arpl
xchg
ljmp
push
call
and
or
jne
pop
mov
mov
outsl
add
mov
lcall
sbb
into
daa
jnp
pop
dec
movsl
call
pusha
clc
pop
add
filds
xor
push
repnz
ja
mov
mov
dec
fsts
pusha
adcb
jae
mov
sbb
xor
repz
dec
test
lret
inc
shll
ret
inc
adc
movsl
test
js
jnp
and
push
adc
lds
aaa
sub
test
mov
cmp
lods
mov
push
hlt
mov
pop
test
imul
pop
mov
xchg
mov
scas
leave
and
pop
and
jnp
sub
insb
repz
mov
jg
mov
push
mov
popf
add
loop
aas
out
pushf
repnz
shll
xchg
push
test
out
or
jmp
ss
ret
fimuls
lcall
jg
push
xor
push
ljmp
fldenv
rcl
mov
lock
or
push
fcomp
out
scas
sub
mov
jns
repz
lods
jle
js
add
dec
sbb
gs
dec
out
mov
shl
mov
sub
push
xor
push
aad
lock
push
and
repnz
outsl
push
sti
int
adc
xchg
fwait
inc
mov
lock
mov
pop
pop
shll
sub
std
jnp
jne
int3
sarb
and
ud0
jno
add
xchg
and
mov
mov
xchg
cli
daa
xchg
imul
push
push
add
adc
js
add
jmp
fiadds
and
lock
jp
jne
and
outsb
and
addb
aad
inc
fwait
or
sbb
js
into
pop
inc
cmp
aam
dec
pop
pushl
loopne
dec
pop
int3
mov
shrb
sub
push
mov
test
add
push
addr16
xlat
insb
repnz
dec
mov
das
dec
fsubl
movsb
std
xchg
in
icebp
jp
mov
and
insb
mov
sub
jnp
fistpll
aam
or
jne
mov
lret
sbb
pop
jb
mov
iret
mov
lock
cmp
je
scas
inc
push
xchg
jnp
and
cwtl
into
push
xor
inc
xchg
ret
adcb
icebp
dec
loop
push
outsb
fildl
pop
cmp
mov
pop
mov
mov
dec
mov
orl
hlt
sub
hlt
mov
es
inc
dec
insl
lret
test
sbb
gs
push
fstpl
sbb
dec
mov
adc
rcrb
cmc
stos
jbe
fs
mov
scas
test
not
shrl
cmp
sbb
out
clc
xchg
pop
xor
repnz
push
xchg
iret
fdivl
push
mov
xchg
xor
pop
das
loope
daa
cmpsb
cmp
jl
fisubl
notl
push
push
in
cmp
inc
xlat
fwait
int
jno
lcall
sbb
sbb
cltd
mov
xor
les
push
out
inc
popa
and
push
lret
lahf
adc
dec
in
mov
stc
sbb
lret
cmp
pushf
pop
lahf
mov
push
repz
xchg
addl
sbb
into
out
lds
movsb
mov
mov
std
js
idivl
adc
inc
adc
call
loope
xchg
icebp
jle
xor
loope
int
gs
test
push
div
int3
mov
adc
mov
les
inc
pop
push
test
cld
add
adc
repz
mov
js
pop
int
fs
gs
cmp
mov
into
in
test
aad
xor
fs
test
inc
leave
xchg
sbb
into
push
cmpsl
cmpsl
or
data16
lock
std
push
addr16
mov
sub
cmpsl
xchg
adc
imul
push
ss
dec
and
mov
mov
jno
jb
mov
pusha
and
pop
ja
pop
pop
pop
fimuls
xor
sub
sbb
je
xchg
movsl
imul
lods
xlat
mov
or
pop
lret
mov
sbb
pop
jne
inc
addr16
in
ss
loop
sub
push
fiadds
popa
jg
lods
pop
dec
data16
cbtw
or
xor
je
cltd
mov
mov
xor
addr16
nop
jle
mov
shlb
mov
mov
out
push
aad
leave
cmp
lcall
std
dec
or
aad
xor
mov
bound
mov
xchg
aad
pop
and
shlb
or
aad
lods
xlat
cmpsb
dec
daa
xor
or
dec
push
pop
fs
push
inc
jns
cltd
cmp
adc
popf
lret
or
repz
inc
lret
push
push
aam
add
mov
shrb
and
clc
inc
sbb
xchg
and
adcb
xchg
inc
xor
mov
pop
inc
stos
dec
push
int
and
jae
sub
mov
mov
es
mov
mov
shll
sub
adcl
repnz
aad
xor
enter
cmp
xor
xchg
int
push
adc
or
add
or
xchg
aad
loopne
add
ret
jl
loop
mov
pushl
pusha
mov
push
lods
das
gs
xchg
mov
in
iret
sub
xchg
fidivrl
mov
xchg
shll
xchg
xorb
pop
rolb
mov
es
cmp
xchg
ja
cmp
lock
test
cltd
xor
out
xor
adc
out
test
repnz
shll
test
and
test
pop
and
xchg
aas
cltd
xlat
pop
ret
stc
cmc
inc
stc
jmp
fldcw
jmp
out
mov
negl
jp
addb
xchg
cmp
inc
jns,pt
jg
fmuls
inc
pushf
ret
bound
into
cs
and
ljmp
dec
leave
int
stos
pusha
movsl
out
push
pop
loope
cmp
pop
cmp
sub
mov
stos
jae
dec
imul
in
fdiv
xor
cmp
mov
adc
int
and
push
and
in
adc
push
sti
ljmp
add
filds
call
mov
dec
push
pushf
adc
out
adcl
lcall
std
cmc
daa
stos
mov
mov
inc
and
out
out
xorb
shr
rcrl
mov
sub
jns
sub
inc
xchg
imul
addl
fcomps
inc
test
test
mov
mov
jle
pop
add
and
imul
add
dec
dec
push
and
mov
sbb
push
pusha
clc
leave
adc
imul
and
xchg
sbb
lds
test
fisttps
dec
imul
shll
fwait
jmp
or
call
push
dec
cli
in
jle
lods
fstps
scas
outsl
fwait
popf
test
out
mov
mov
mov
mov
popa
popa
dec
addr16
jno
out
and
xchg
mov
mov
dec
cltd
push
cmp
cmpsb
out
dec
repnz
mov
leave
adcl
jne,pt
lahf
insl
outsb
scas
mov
mov
jecxz
mov
cs
or
outsl
test
test
mov
and
mov
cmp
and
push
imul
scas
aad
icebp
inc
xchg
add
andb
mov
sarl
pushf
dec
orl
xchg
test
shll
push
pop
addb
push
je
test
stos
or
xchg
inc
mov
into
xor
movsl
xor
shl
adc
push
add
push
incb
xchg
insl
adc
push
sahf
hlt
add
fs
and
jo
cmpsb
pop
xlat
out
sbb
dec
test
dec
adc
add
cmpsb
pop
repz
xchg
xor
in
lods
ret
pop
xchg
rolb
mov
aas
in
mov
add
jo
dec
add
dec
leave
je
in
mov
sub
decb
sbb
scas
fistpl
sbb
mov
xlat
sbb
das
popf
jge
mov
out
pop
jecxz
lcall
inc
dec
add
sbb
or
sbb
outsb
fbld
sub
sub
repnz
xor
inc
mov
mov
ja
inc
mov
insb
ja
dec
inc
testb
push
add
lahf
xchg
jbe
cltd
das
dec
addr16
call
mov
nop
mov
pusha
dec
das
vpsubsw
lock
jle
neg
lahf
out
mov
xor
lock
sub
test
insl
jle
out
popf
dec
mov
xorb
int
jp
jo
ret
pop
mov
sar
ret
daa
mov
fsubrp
pop
sbb
cmp
sub
dec
pop
or
icebp
push
cmp
push
popa
pop
pop
push
xchg
dec
mov
xlat
ret
pop
push
pop
xchg
sub
cmp
push
movswl
xchg
sub
push
popa
xchg
mov
pop
dec
sub
sbb
fbstp
jg
push
mov
jnp
insl
sahf
hlt
pusha
insl
lcall
xchg
mov
mov
sbb
xor
dec
xchg
and
push
movsb
or
xchg
flds
ljmp
cwtl
sahf
pop
mov
jb
cld
xor
ds
fcoms
mov
cmc
add
xchg
sarb
xor
js
fildll
fsubr
into
ficoml
imul
xor
xor
shr
adc
push
repnz
jmp
out
sbb
cmp
pop
push
rcr
mov
jmp
pop
xor
sub
xchg
bound
je
jno
insb
or
jmp
lods
inc
xlat
popf
insb
stc
repz
jns
jg
punpckhdq
xchg
repz
mov
bound
fwait
sbb
stos
jl
stc
push
sbb
ja
mov
pusha
and
cltd
mov
mov
lret
jnp
jbe
lcall
es
cmp
icebp
add
insl
scas
and
pop
daa
mov
lret
into
cmp
lods
je
adc
int
mov
cltd
jbe
xlat
add
and
mov
jae
in
stos
imul
test
ds
jp
cld
sub
xchg
out
push
pop
rcl
aas
sbb
in
ss
mov
pushf
inc
dec
push
cmpsb
or
adc
enter
push
out
aad
scas
mov
xchg
test
loopne
in
adc
lahf
or
dec
add
mov
mov
dec
jmp
fs
movsb
push
jbe
imul
pusha
movsl
aaa
mov
filds
mov
inc
jbe
in
sti
push
pop
inc
jge
push
repz
push
pop
and
daa
add
adc
push
sbb
lret
mov
lock
fs
rorl
lods
push
popa
insl
push
loope
xor
fimuls
xchg
xor
iret
jno
jle
jg
lret
lahf
ss
pop
adc
xor
xchg
fwait
mov
jmp
push
leave
pop
imul
call
xor
adc
ficomps
xor
mov
push
cltd
pop
in
in
xchg
jno
loopne
xchg
adc
add
sub
je
cmp
cmp
sarl
push
xor
enter
xor
mov
in
test
xchg
adc
mov
and
cld
mov
jnp
imul
aas
pop
mov
cmp
xor
dec
sbb
in
and
xlat
aaa
ljmp
sub
mov
sbb
gs
push
push
cwtl
in
push
fnsave
test
cmp
push
jg
inc
std
scas
aas
pop
sbb
lcall
mov
push
aaa
jbe
in
inc
or
jmp
das
or
mov
fcmovb
pop
add
loop
mov
in
sub
mov
mov
out
lret
repz
sahf
shlb
subl
pushf
test
add
mov
test
jge
add
add
das
aad
ljmp
sub
andl
adcl
xchg
inc
adc
int
jge
mov
adc
add
mov
repz
add
sbb
rcrb
mov
lret
mov
sbb
cmpb
out
cmp
jmp
xor
push
imul
int3
or
xor
xlat
pop
jmp
jg
into
sbb
xchg
mov
add
dec
lods
insl
ss
add
jno
out
push
or
jbe
pop
mov
and
aas
mov
mov
mov
sbb
movsb
mov
adc
inc
rcl
cli
inc
sbb
inc
lods
pop
inc
arpl
adc
cwtl
dec
test
cmp
insb
or
mov
aad
sbb
add
clc
aas
mov
mov
outsl
cs
lret
fildl
cwtl
ret
popf
add
pop
ja
xchg
divl
xchg
popa
pushf
into
sub
and
jae
pop
repnz
iret
push
adc
imul
fs
xor
or
loopne
jnp
add
sub
and
and
cmp
sbb
push
sbb
in
test
jnp
lcall
push
xchg
push
jno
push
ljmp
mov
sbb
stos
xchg
cld
jl
ficoms
mov
xchg
xor
cmp
shlb
mov
jb
cmpsb
cmpsl
mov
xchg
enter
and
mov
add
add
dec
dec
aaa
in
push
jb
pop
sbb
dec
inc
add
ss
pop
pusha
and
jle
mov
jge
and
push
negl
stos
mov
movsl
push
std
and
push
xlat
aad
popa
cs
mov
xchg
sbb
mov
jmp
dec
mov
inc
mov
mov
mov
shll
mov
cmpb
adc
inc
and
xor
jl
mov
popf
arpl
subl
int3
inc
or
push
fnsave
stos
out
popa
std
negl
sub
jp
aas
xor
and
lods
mov
aam
aaa
xorb
ffree
fnstsw
sub
adc
outsl
jge
repnz
imul
fwait
and
in
pop
push
aas
or
xlat
loopne
ds
insl
fs
aam
mov
lcall
jle
lret
mov
movsb
inc
lret
hlt
lea
lret
mov
xchg
sbb
adc
cwtl
insl
stos
int
dec
ret
inc
xchg
or
outsb
xchg
pop
ficoms
scas
ja
sub
pusha
adcl
mov
mov
mov
pop
test
add
jge
lods
shlb
and
movntps
pusha
jae
pop
mov
lods
inc
push
gs
call
in
hlt
sub
dec
mov
call
mov
xchg
lods
dec
xor
add
repz
ljmp
or
push
jecxz
js
mov
ret
jle
popf
mov
xchg
fisubrl
cmc
aam
add
mov
ss
imul
mov
arpl
sub
mov
cli
fildll
sarb
popf
cs
fmull
dec
adcl
pop
and
jmp
xor
xchg
cwtl
in
shlb
pop
jge
movsb
stos
adc
loope
ljmp
fs
add
mov
test
mov
dec
testb
ja
pop
add
fstps
xchg
mov
jno
popa
mov
dec
aaa
out
lahf
lahf
pop
fnstcw
mov
loopne
xor
mov
rolb
jo
lret
pop
das
sub
rorl
push
out
or
leave
mov
imul
sub
dec
sub
cmpsl
inc
jbe
add
mov
adc
shrl
test
mov
mov
cwtl
les
movsb
push
je
fisttpll
aad
xchg
cwtl
dec
inc
xor
ret
test
pushf
imul
sbb
cld
inc
aaa
out
inc
das
sub
jmp
or
adc
les
int
mov
and
jnp
loope
int
cltd
fimuls
mov
jmp
pop
and
out
pop
scas
inc
sub
into
fsts
push
cld
jns
lods
lret
loop
and
pop
outsl
das
sbb
sti
jo
jne
and
dec
fistl
incb
pushf
inc
jnp
cmpsl
shrl
jns
mov
lahf
cmp
insb
cmp
adc
dec
bound
or
scas
repnz
fwait
or
bound
inc
mov
test
ljmp
pop
shr
mov
stos
icebp
push
das
push
in
sub
cmp
ror
or
repz
ret
pop
into
sub
xchg
mov
movl
js,pt
sbb
mov
inc
dec
movsb
push
cmpsl
aaa
and
mov
push
push
inc
xor
mov
jle
jne
pop
call
lea
insl
loope
adc
stc
movsl
or
mov
dec
mov
sub
rorl
out
ljmp
cs
mov
movl
add
xchg
dec
iret
roll
sub
jl
jno
fcmovb
repz
xchg
scas
add
mov
xchg
inc
sub
test
pop
jl
and
imul
js
adc
insl
mov
scas
fnop
fstl
scas
fprem1
popa
inc
outsb
scas
cwtl
sti
out
dec
xchg
lret
xchg
and
jne
push
xlat
fisubl
mov
xchg
ja
fisubrl
xchg
fwait
in
sbb
add
jg
cmpsl
lods
dec
ret
stc
fildll
loope
mov
cmp
push
jnp
lods
pop
jbe
inc
pop
es
jno
inc
cmp
add
es
lock
out
cld
mov
jns
repnz
clc
and
sbb
hlt
adc
test
shr
dec
mov
mov
imul
cmp
cmp
mov
ret
sub
in
push
inc
adc
sub
jb
int3
jb
dec
fmul
jns
aaa
sarb
mov
mov
xlat
adc
dec
out
mov
push
cmp
scas
mov
push
mov
fcmovnu
sub
stos
int3
pop
nop
lret
lahf
out
cmpsl
mov
in
cmpl
out
mov
jmp
push
cld
and
mov
push
cmp
aam
adc
and
xchg
shrb
cwtl
mov
hlt
jns
cmp
jns
cmpsl
mov
enter
cli
sbbb
femms
subl
push
push
sbb
lock
je
or
cmc
push
test
push
xchg
sar
adc
ret
inc
cmpsb
fdivrs
mov
dec
std
stc
push
jmp
sub
fldcw
lds
fidivrl
inc
cmpsl
mov
push
jns
cmpb
aaa
rcrl
or
or
xor
sti
repnz
jno
adc
fsubr
jne
push
mov
sbb
jg
ja
xchg
and
push
adc
fsubrl
lods
sub
fsts
addb
out
pop
mov
adc
cmp
mov
jne
insb
xor
es
cwtl
fiadds
into
mov
xchg
mov
and
pop
stos
mov
fisttpll
adc
and
and
sbbl
cmp
pop
test
rol
addr16
cmc
imul
jmp
movsb
insb
mov
mov
outsb
jmp
pop
or
and
push
lahf
xchg
push
or
ss
ret
adc
cli
flds
or
push
cmp
cmpb
xor
sub
mov
adc
mov
cwtl
jnp
subb
daa
push
jno
or
loopne
cmpsb
stos
mov
ja
ss
sarl
jns
insl
jecxz
ja
push
xor
cltd
fwait
stc
adc
aas
dec
xchg
imul
adc
je
lcall
call
mov
cmp
repz
xchg
fsincos
aas
sbb
jno
and
jecxz
push
pop
pop
jecxz
shrl
inc
adcl
push
stos
outsl
fists
jl
xchg
aaa
dec
sbb
pop
lret
pop
dec
pop
mov
xor
cs
adc
ja
pop
insl
mov
inc
pushf
cmc
enter
xchg
jmp
mov
std
in
add
pop
sub
test
cmp
inc
push
scas
mov
shrl
xchg
mov
push
pop
flds
pop
pop
adc
pop
loop
pop
xchg
mov
stc
popa
xchg
mov
pop
cmc
and
push
add
dec
xor
jae
call
adc
or
pop
test
jbe
jg
std
mov
jne
or
mov
jle
inc
scas
xchg
addr16
push
jle
shll
cli
loope
adc
out
sbb
stos
fiaddl
lahf
inc
mov
xor
add
push
sbb
adc
jg
cmpl
mov
stc
imul
xchg
cwtl
adc
mov
repz
push
out
push
pop
int
scas
cmp
xor
lock
aas
add
and
jo
push
iret
and
add
or
mov
jecxz
inc
cmp
and
or
popf
jg
push
mov
mov
ja
lret
movsl
test
sub
cmp
xchg
adc
cmp
pusha
cmpsl
and
sbb
inc
incb
sti
push
mov
arpl
mov
mov
aas
outsb
jecxz
sub
cwtl
ss
cltd
imul
cli
inc
std
or
pop
dec
arpl
push
iret
jle
adc
popl
inc
sbbl
popf
mov
in
or
jne
jbe
and
test
or
xchg
or
inc
dec
repnz
jmp
cwtl
or
and
std
std
mov
call
push
popf
ret
xchg
vandnps
cmpsb
cwtl
ss
or
mov
ss
adc
aas
push
jle
faddp
rcrb
mov
insl
cmc
pop
es
repnz
filds
dec
mov
jo
add
mov
push
sub
rclb
or
mov
adc
cmc
pop
dec
inc
cmp
ret
cmpsb
push
out
stc
jl
cmp
sbbb
movsl
xchg
add
sub
xchg
mov
sbb
ljmp
jecxz
mov
sub
inc
ffreep
push
aam
inc
ljmp
pop
sbb
insb
jnp
hlt
jne
cmp
mov
dec
add
dec
pushf
push
iret
je
cs
cmp
or
imul
fildl
stos
out
xor
outsb
fstpl
test
jno
xor
jl
outsb
clc
jmp
jae
xchg
shrl
jmp
je
xchg
xor
mov
pop
jo
mov
mov
cmp
push
lea
int3
in
push
scas
fisubl
mov
and
mov
lret
mov
pop
dec
add
fstps
add
imul
xchg
loope
cmp
push
xor
mov
fwait
ds
sti
scas
mov
popa
fs
and
bound
inc
in
xor
jge
ds
es
fsubp
mov
out
inc
popa
les
mov
add
mov
adc
sbb
cmc
dec
fimuls
or
fcoml
jge
mov
cli
and
adc
and
mov
shll
mov
fstpl
movsl
mov
adc
jg
jns
fnstcw
movl
pop
mov
ret
popf
and
sub
adc
loopne
mov
and
jge
cmpsb
mov
mov
outsl
jno
inc
call
pop
cmp
ds
movsb
sbb
mov
lods
dec
out
inc
inc
cmp
cmp
inc
dec
jmp
inc
insb
add
or
pop
rcrb
aam
add
push
in
out
jmp
popf
inc
cmpsl
inc
push
sarb
fsubp
pop
xor
or
fnsave
repz
jae
jl
jge
aam
xor
lds
pop
aas
insl
pop
inc
sbb
popa
or
cld
push
mov
test
xor
push
mov
sbb
fbstp
popa
push
aaa
shll
cmpsl
cmp
jmp
rclb
push
movsl
mov
push
sbb
xchg
icebp
push
mov
lods
fdivs
std
cmp
dec
cli
roll
leave
repnz
adc
or
adc
rol
inc
fcmovne
xchg
add
and
dec
sbb
or
pop
jno
jno
js
nop
mov
ljmp
sub
add
stc
aas
loope
call
or
mov
xor
repnz
push
dec
push
lahf
inc
imul
xchg
mov
sub
ljmp
cli
imul
repnz
jo
clc
mov
lds
add
lock
adc
sub
in
mov
mov
push
push
inc
test
cwtl
adc
jle
inc
inc
sbb
pop
lods
push
pop
adcb
in
movsl
lock
jmp
lea
daa
sahf
stos
jnp
pusha
mov
xchg
mov
adc
lret
insb
gs
sti
sub
add
jmp
jb
js
jbe
adc
pop
rcl
lods
stos
jae
xor
xor
fdivs
and
jle
mov
test
and
pop
imul
jno
dec
rcrl
sub
in
adc
daa
test
push
jecxz
mov
ret
xor
add
sbb
divl
lods
lods
add
ljmp
inc
mov
dec
inc
int3
repnz
outsl
mov
sti
sti
lcall
fcmovnu
jbe
scas
rorb
in
or
insb
jl
jecxz
cmpsb
aad
sub
pop
adc
sbbl
std
and
fcoms
add
adc
add
fdiv
push
in
lods
cmpb
adc
pushf
jb
push
or
pop
mov
mov
mov
nop
out
test
or
dec
xchg
push
xlat
test
inc
mov
jae
adc
shrl
addl
negb
in
cs
int
adc
jbe
movl
jbe
inc
test
fcmovnu
pop
add
dec
ret
xchg
or
and
sub
mov
sbb
hlt
ret
or
sub
inc
test
dec
arpl
inc
pop
add
std
les
push
call
xchg
orl
out
pop
call
out
jno
test
clc
jl
jg
mov
push
push
js
insl
repnz
jl
out
sub
pop
jmp
push
dec
and
mov
push
scas
out
dec
mov
testb
fsubl
jmp
int3
fwait
and
ljmp
jl
jl
or
loopne
enter
xlat
dec
inc
mov
dec
or
jle
or
andb
mov
dec
pushf
lods
xchg
pusha
jo
sbb
cmp
popf
aaa
or
xchg
mov
add
nop
stos
push
push
inc
and
mov
inc
clts
adc
mov
push
enter
xor
sbb
inc
push
icebp
jl
xchg
test
lods
sub
icebp
cmp
add
inc
movsl
ss
inc
popa
loop
movsl
push
add
xor
push
out
add
sarl
mov
adc
pop
adc
push
clts
out
stos
inc
add
fs
inc
hlt
jbe
loope
push
fisubrl
out
add
jl
add
sbb
mov
cmp
and
jbe
or
inc
gs
cmp
test
ficoml
add
out
cmp
aaa
in
push
test
mov
and
fstpl
hlt
pop
daa
rclb
jecxz
cmp
ss
inc
mov
xchg
mov
add
sahf
push
dec
mov
sbb
jge
mov
ljmp
mov
mov
or
xor
hlt
mov
push
adc
cmc
fistpl
int3
mov
leave
add
pop
jno
sarb
fisubrs
and
divb
pop
xchg
xchg
pop
mov
in
es
jge
fnsave
dec
lods
sbbl
push
dec
lcall
pop
jbe
mov
inc
rcrl
sbb
les
push
xor
in
sbb
inc
pop
mov
inc
xchg
mov
sbb
push
mov
es
ret
lods
jae
push
lods
dec
bound
icebp
cmp
rolb
out
std
dec
pop
xor
dec
cmp
icebp
mov
out
pop
xorb
cmpsb
mov
ret
repz
ds
mov
insb
mov
aam
xor
hlt
push
inc
fs
cmp
jg
fnsave
mov
dec
push
pop
xchg
insl
adc
pop
gs
push
push
push
xlat
test
adc
sbb
out
cmp
inc
pop
xor
ds
add
mov
adc
dec
lcall
add
jae
mov
xor
popa
loope
mov
sub
jb
sbb
jge
pop
pushf
es
pop
adc
cmpsl
shrb
sub
movl
push
inc
negb
mov
retw
stc
jmp
sbb
push
inc
hlt
pop
imulb
stos
add
sbb
jne
sti
inc
adc
add
cmp
and
fdivr
fstps
sbb
pop
ds
adc
adc
and
repz
push
push
push
psubd
xor
jmp
mov
jbe
inc
cmc
std
mov
fildll
test
pop
xor
jno
pop
clc
pop
fstpl
jno
xchg
aaa
and
loope,pt
pop
test
ror
jle
aad
push
pop
shrl
fldl
pop
mov
hlt
mov
insb
add
inc
es
xor
push
mov
or
bound
jmp
fldpi
testl
xchg
int
je
sbb
or
jge
mov
jb
jp
pop
jbe
imul
popf
dec
hlt
push
cli
sti
mov
xchg
aam
push
jecxz
repz
and
loopne
sub
inc
push
aas
jle
stc
pusha
aaa
pop
cmp
push
sbb
int
mov
ja
insl
add
dec
je
lcall
call
mov
cwtl
and
cmp
jg
cltd
xchg
adc
repz
xor
sub
push
dec
push
stos
sub
sub
popf
loope
enter
xchg
mov
add
stos
fs
ja
mov
in
call
inc
mov
adc
jle
or
lahf
aad
inc
jmp
mov
push
test
pusha
adc
and
icebp
xchg
push
repz
mov
loope
in
adc
jbe
mov
cs
mov
nop
les
sarl
xor
xchg
stos
outsb
xchg
out
inc
mov
mov
enter
push
sahf
sub
cmc
jmp
add
jl
movsl
or
inc
insb
mov
or
jno
pusha
jge
jae
pop
aas
jbe
adc
push
call
hlt
gs
xchg
in
mov
stos
test
bound
dec
xchg
lock
test
mov
mov
and
bound
cmp
addr16
lcall
test
dec
jbe
faddp
jae
sbb
dec
jae
stos
xor
mov
cmp
lret
add
jo
jbe
stos
xchg
js
sbb
fmuls
mov
cmp
mov
fucomi
out
push
mov
or
out
cs
pop
ret
popa
jnp
dec
adcb
sbb
in
into
data16
mov
inc
xor
inc
push
jg
int
bnd
cmpsb
sub
jmp
mov
mov
cmc
ja
cmp
mov
lds
out
inc
es
idivl
scas
loope
rorl
rolb
aas
push
aas
lods
bound
cmp
pop
adc
sub
mov
test
xor
push
lods
mov
add
xchg
insl
fsub
push
or
xchg
sahf
mov
cmp
or
popa
mov
ja
xlat
sar
jmp
sub
dec
mov
cmp
pop
add
lock
call
not
sbb
stos
scas
and
push
sbb
daa
adc
cmc
data16
popa
sbb
cmp
bound
subl
sub
icebp
cmc
popf
fdivr
shll
mov
cmp
fwait
rcrl
pop
and
leave
mov
mov
ret
sub
jmp
lret
out
cmp
outsl
add
enter
dec
push
call
mov
or
jl
mov
sti
out
sbb
jmp
in
dec
mov
movsl
pop
pop
xchg
scas
add
shl
mov
mov
lock
jl
jae
repnz
and
xadd
inc
iret
popf
lahf
call
out
js
mov
inc
and
push
sbb
icebp
dec
add
xchg
cmpsl
lcall
cmp
pop
and
jne
jle
addr16
stos
sahf
push
adc
in
jns
pusha
outsb
repnz
out
repnz
orb
cmpsb
jecxz
enter
jg
pop
push
mov
in
sbb
aas
add
out
inc
arpl
fists
adc
jg
loopne
movnti
popa
popf
repnz
ficompl
bnd
or
pop
cmp
jle
ljmp
or
dec
insl
and
inc
mov
push
jecxz
and
jmp
mov
ret
pop
cmp
aad
mov
push
popf
sub
xchg
repnz
push
inc
sahf
xchg
pop
add
push
push
clc
movsb
sub
lahf
lret
pop
mov
mov
mov
les
push
aaa
lcall
add
stos
pop
jae
mov
insb
ja
in
fprem1
dec
pop
imul
loope
push
rclb
ss
add
mov
xchg
mov
xchg
jns
sbb
test
or
or
arpl
cmpsl
mov
mov
xchg
movsb
jge
mov
dec
mov
inc
push
loope
loopne
cmp
mov
hlt
in
cwtl
imul
ss
cmpsl
jge
pop
ret
xchg
fs
xchg
incb
pop
cmp
dec
mov
xor
push
push
adc
ljmp
loopne
xor
scas
mov
out
pop
mov
dec
fisubl
imul
pop
pop
imul
pusha
cld
sub
pop
shll
xchg
mov
or
aad
call
push
sbb
mov
call
fldl
cld
insl
and
cmpsb
mov
push
mov
mov
adc
aad
push
inc
push
jl
fists
adc
sbb
fnsave
in
jg
xor
addb
lods
jl
cwtl
sbb
xor
mov
pop
notl
out
fstpl
stos
call
mov
jae
push
aam
int
out
sbb
or
lea
mov
sub
sub
sbb
ljmp
movsb
pushf
push
cmp
push
or
xchg
pop
inc
or
pop
sub
loopne
push
mov
test
popf
iret
daa
sbb
hlt
icebp
jge
rcrl
add
mov
fisttpll
lea
test
jae
pop
fs
into
xchg
pop
jecxz
jnp
movsl
pop
xor
inc
xor
imul
gs
sub
mov
fidivs
inc
sub
xchg
and
jmp
mov
aaa
je
fs
mov
sbb
icebp
jle
mov
cs
push
lret
shr
pusha
insl
adc
push
arpl
subb
inc
mov
pop
lcall
xor
add
std
es
hlt
mov
popa
orb
xor
jmp
and
mov
in
xchg
shll
popf
dec
mov
lahf
jnp
jae
arpl
push
test
pop
sbb
jo
sub
pop
xchg
push
lcall
adc
lahf
cli
addr16
les
or
and
mov
insb
aam
jecxz
dec
jle
jle
loope
and
xor
aad
mov
mov
mov
cmpsb
cld
or
push
mov
je
mov
mov
add
nop
fwait
pushf
outsl
lret
jl
mov
sti
or
stc
or
rcrl
and
pop
int
push
das
push
lret
iret
mov
sub
cli
ja
jecxz
sbb
xchg
lock
popa
xor
fstpt
jle
sti
out
mov
pushf
lret
dec
sti
cmc
addr16
repz
sbb
mov
xor
out
sub
xor
cmpsl
dec
mov
test
jae
or
cld
cmp
jge
gs
and
push
or
sahf
jg
or
outsl
mov
xchg
notb
mov
add
sub
std
movsb
xchg
cld
or
dec
add
push
stc
add
fwait
inc
cmp
mov
pop
pop
sub
push
icebp
mov
jmp
mov
cmp
jge
mov
jmp
gs
dec
in
add
pop
adc
xor
fisttpll
lret
bound
roll
lock
and
loop
mov
sbb
pop
fs
mov
mov
inc
nop
jbe
lahf
call
adc
adc
dec
sbb
mov
insl
xchg
xchg
pop
ds
jecxz
fbstp
aad
insl
and
xchg
jecxz
loope
and
into
adc
jb
cmp
sub
stos
fstps
pop
hlt
xchg
inc
sbb
std
sbb
push
sub
enter
dec
aad
sbb
mov
sahf
pop
mov
loop
lock
xor
mov
js
fstps
ja
bound
jecxz
jo
addr16
or
xorl
data16
sub
and
or
jp
sbbl
cmp
sub
push
data16
ja
shlb
xor
fs
dec
clc
inc
scas
dec
push
pop
ljmp
nop
lods
ljmp
icebp
xchg
sbb
iret
inc
mov
in
sbb
and
sbb
adc
adc
fstp
adc
inc
inc
and
dec
mov
gs
or
push
mov
ja
dec
je
cmp
pop
add
or
mov
ret
es
inc
call
xor
aaa
insl
in
sub
jb
xchg
rcrl
pusha
insl
mov
mov
aaa
pop
mov
test
mov
jno
xor
pop
insl
sahf
jne
and
jmp
int
cmp
add
ljmp
rorb
pop
inc
mov
sbb
movsb
mov
jp
loope
and
dec
sub
jecxz
shr
shll
cs
push
pop
mov
pop
scas
mov
adc
divl
xchg
cmp
fadds
jo
cwtl
shr
aaa
mov
pusha
and
mov
pop
jp
out
jbe
push
mov
ffreep
sub
ret
jo
rcrb
sbb
dec
int
lea
int3
cmpsb
xchg
ja
fsub
mov
mov
imul
test
jge
cld
sbb
jl
pop
mov
and
dec
mov
jmp
jnp
lret
and
lret
mov
dec
les
fisttpll
inc
pop
fimuls
mov
ret
pushf
sub
mov
lcall
sahf
insb
call
ja
aam
and
shll
aaa
dec
inc
lods
mov
xchg
xchg
pusha
mov
xor
push
mov
popf
add
pop
lock
or
jbe
mov
int
lcall
dec
int
orb
aas
arpl
inc
pop
daa
js
dec
cwtl
out
shr
mov
pop
pop
xor
xchg
nop
cmp
iret
mov
imul
in
cli
div
sub
into
xlat
push
ja
jne
popa
test
pop
lock
out
sub
push
inc
mov
sti
dec
add
mov
test
push
mov
pop
xor
addl
mov
decl
adc
fimuls
icebp
out
mov
and
push
xor
out
add
xchg
and
int3
inc
dec
adc
jne
xchg
pop
mov
outsb
ficoml
add
mov
cmp
lds
stos
cmpsl
mov
rcl
xlat
mov
in
xor
dec
ljmp
sub
sbb
push
ljmp
push
aam
xor
stos
enter
sub
sbb
dec
sbb
adc
mov
out
jno
frstor
bound
aad
pusha
dec
mov
lret
push
mov
pusha
jne
jg
cmpsb
repnz
lret
movsb
dec
sbb
jge
rcl
hlt
cld
test
or
cltd
or
cmpb
rcr
les
stos
xchg
js
test
and
jmp
adc
cltd
orb
dec
mov
loop
test
sbb
or
decb
test
fisttps
les
inc
mov
in
hlt
out
mov
pop
pusha
lea
add
lock
or
sbb
xor
bound
clc
cmp
add
dec
or
pop
jle
out
add
scas
cmc
and
adc
sahf
cmp
fdivrs
xor
imul
jno
xor
xorb
cli
push
sti
mov
arpl
loop
das
stc
mov
in
es
push
mov
into
lods
adc
xor
xor
mov
adc
jns
mov
out
dec
inc
mov
or
ljmp
or
out
push
jae
jg
cmp
ljmp
add
or
sbb
outsl
fisubrs
loopne
pop
pop
mov
jo
pop
pushf
cmp
outsl
les
scas
inc
cmp
cmc
test
ljmp
pop
gs
test
add
shrb
push
jge
inc
movsl
xor
repnz
push
pop
adc
repnz
imul
ljmp
popa
stc
xchg
enter
dec
subb
js
jno
test
imul
xchg
clc
imul
aaa
daa
dec
pop
xchg
push
jae
push
stc
test
mov
inc
sub
imul
fs
mov
lock
mov
sub
xchg
add
and
in
mov
push
cli
scas
iret
stc
sbb
push
xchg
rorb
cmp
mov
shrl
add
or
push
inc
scas
stc
ja
lahf
hlt
add
cmpsb
sub
sbb
push
and
fucomi
mov
mov
or
mov
adcb
push
push
pop
or
cld
add
xchg
das
jg
popa
ljmp
cmp
dec
popf
lret
mov
xchg
adc
add
and
and
xchg
into
or
scas
sbb
lods
xor
imul
daa
in
rcll
shlb
mov
fcomip
mov
lock
dec
idivb
xchg
cwtl
mov
test
pop
jge
jg
dec
or
jae
pop
cs
push
std
loope
fidivrs
fs
push
jl
imul
lock
insb
xlat
add
push
aam
cmc
lret
and
inc
scas
jnp
pusha
daa
rorl
pop
xorb
addr16
int3
inc
jb
loop
popf
cmpsb
push
add
nop
into
ror
add
fisubs
mov
mov
arpl
addr16
dec
dec
sub
loope
int
add
in
outsl
add
inc
mov
outsl
sbb
shl
pop
das
mov
aas
imul
fadds
insl
aad
jns
stc
xchg
cmc
cmpsl
ds
loopne
dec
repz
sub
jns
and
lcall
test
and
push
xchg
gs
sbb
leave
mov
lret
sar
mov
xchg
pop
daa
mov
rcr
dec
mov
rclb
mov
out
push
xchg
cmp
cmp
cs
mov
jle
adc
es
mov
mov
push
ret
les
adc
inc
ret
push
mov
xor
mov
cwtl
je
add
aaa
scas
lahf
fwait
test
out
jge
inc
add
dec
jge
leave
push
popa
fs
lcall
insb
lcall
incb
pop
ret
push
xchg
rorb
out
inc
mov
add
je
shll
ret
jae
lahf
shll
jle
imul
add
inc
test
repz
cmp
mov
into
loopne
lods
sbb
incl
lods
or
daa
jge
fsts
sub
sub
mov
xchg
ljmp
outsb
cmp
fs
stos
mov
dec
cmp
add
and
pop
fisttpl
mov
mov
cmpsb
ror
push
push
out
repnz
imul
sbb
ss
xchg
adc
xchg
xchg
cmpsl
nop
rcrb
cmpl
es
cmp
lods
aad
test
dec
insl
test
inc
push
pop
test
sbb
mov
adc
sbb
fldt
jns
lret
cmp
push
xchg
pop
jl
sbb
or
inc
insl
loope
in
in
mov
imul
imul
inc
dec
in
arpl
pop
cs
lret
cld
xchg
mov
mov
stos
test
ficoml
movsl
rorl
add
stc
jecxz
jl
mov
mov
add
add
aad
fdivrs
inc
mov
inc
call
mov
daa
pop
insl
sub
in
jbe
add
sahf
cwtl
adc
adc
jne
pop
scas
sbb
ss
fistpl
aad
int
enter
xlat
mov
add
loop
inc
lahf
cwtl
or
in
mov
rclb
push
mov
shrb
adcl
jge
loop
je
pop
sbb
test
xor
test
into
fimull
cmpsl
dec
sbb
les
adc
and
les
je
mov
add
stc
das
pop
outsl
mov
aam
push
aas
pop
fldt
jecxz
fidivrl
inc
cwtl
cwtl
add
lods
mov
pop
test
mov
aad
pushf
aam
fwait
cmpl
pop
jl
sub
lea
and
add
mov
lahf
xchg
mov
sub
mov
jno
jb
mulb
add
adc
lds
push
mov
sub
lods
jb
jle
sub
pushl
in
pop
mov
mov
sbb
pop
repz
push
out
sub
hlt
clc
mov
jl
insb
xor
add
push
mov
jg
xchg
cmp
fnstcw
adc
push
or
lahf
movsb
dec
push
test
imul
add
mov
ret
dec
adc
adc
scas
inc
pop
mov
or
mov
and
sub
mov
aam
mov
inc
leave
pusha
or
xlat
out
push
lods
push
push
out
int3
ret
fdiv
lret
cmc
cmpsl
cmp
and
and
enter
leave
mov
cli
lea
enter
and
test
movsl
pop
cwtl
add
xor
int3
das
mov
xlat
dec
incb
popl
xor
sbb
ss
and
xchg
sub
sub
jmp
or
xchg
mov
mov
pop
lods
xchg
sbb
in
loop
jo
jmp
inc
adc
lahf
js
addr16
and
imul
sahf
sarb
fisubl
fmuls
cmp
add
sub
xchg
push
cmp
xchg
ret
xor
cmc
dec
lods
loope
pushl
les
aaa
test
mov
xor
lock
dec
sub
fadd
outsl
jnp
or
lret
mov
test
ret
nop
loopne
arpl
sysret
dec
mov
shll
fwait
xor
fcoms
pop
xchg
scas
test
sub
or
or
es
or
jg
subb
jp
mov
pushf
das
mov
xor
xor
sbb
cli
xchg
xor
stos
jns
xchg
stc
movsl
mov
xorl
fs
lea
jb
clc
push
ja
out
stc
insb
orl
lcall
dec
xchg
js
mov
sub
aas
cmc
inc
lahf
test
das
mov
sub
adc
mov
mov
scas
lods
jp
adc
dec
sbb
roll
lods
jo
fwait
insl
fsts
mov
adc
push
jo
sbb
out
pushf
jle
out
sub
les
inc
clc
mov
cmp
mov
push
cli
pop
mov
add
jp
push
cmp
jle
sub
pop
and
repnz
fldcw
jmp
or
lea
push
lods
popa
aam
test
cmp
jmp
outsb
inc
push
lret
clc
loopne
test
lock
mov
hlt
pop
test
add
adc
xlat
inc
lock
roll
mov
mov
das
fs
sub
fwait
or
sbb
sub
cmovae
stos
leave
in
sub
inc
sub
inc
fmul
push
inc
push
inc
ja
fnstcw
out
dec
std
imul
rcr
push
lahf
ficoml
scas
cmp
test
in
xchg
fisttpl
test
cmp
pop
cs
aas
test
divb
in
orb
xchg
inc
inc
js
lock
pop
adc
adc
clc
mov
iret
jle
sub
out
popf
inc
test
cld
das
stos
jae
xchg
and
icebp
adc
jge
sub
fsubrs
fdivrl
bound
mov
push
cmpsb
inc
arpl
ss
push
jecxz
inc
inc
cmpsl
dec
outsl
jno
jnp
stos
test
mov
shrb
ficomps
dec
stos
mov
mov
pushf
sub
mov
mov
lods
jmp
inc
mov
loope
rorl
and
cs
sti
divl
addr16
xor
mov
pop
adc
add
push
out
push
add
repnz
pop
scas
insb
and
out
xchg
jb
xchg
pop
aad
mov
idivl
popf
add
fdivrl
jne
inc
pop
es
sbb
jecxz
test
jmp
cmpsl
ficomps
cvtdq2ps
push
rolb
mov
adcl
push
inc
js
loop
call
mov
inc
push
mov
decl
stc
test
cmp
add
lret
cmp
sbb
fnstsw
in
insl
out
mov
xor
std
add
rorb
jp
push
add
pusha
enter
add
xor
pop
lahf
or
out
sbb
fs
sub
cmp
movsb
sbb
inc
cli
sar
mov
mov
mov
fsubrp
iret
add
pop
or
sub
dec
fbld
pop
jbe
fstl
in
jnp
mov
mov
lds
inc
jmp
fldcw
movsl
ret
inc
fwait
lods
jne
pop
xor
mov
shll
jb
cmp
inc
dec
test
fwait
pop
mov
inc
push
jp
mov
xchg
and
inc
or
popf
ror
cmp
dec
pop
adc
add
aaa
mov
loopne
nop
or
insb
mov
test
test
jmp
lea
pop
mov
mov
add
pop
ljmp
jb
xchg
and
pop
dec
push
std
je
mov
mov
shll
or
imul
dec
mov
lods
pop
mov
adc
sbb
idiv
sbb
jnp
add
aaa
loopne
cld
push
jns
cmp
leave
jmp
jge
jmp
dec
fsubl
mov
mov
dec
ret
ja
ret
es
push
cmpsl
mov
sub
movsb
push
les
fdivs
push
cmpsl
push
popf
lcall
add
rolb
dec
xor
aas
jb
adc
adc
mov
lods
mov
inc
adc
mov
sub
jp
dec
mov
insb
out
rolb
lock
loop
mov
arpl
lods
add
lods
xchg
pop
dec
push
pop
push
cwtl
mov
icebp
push
pop
lahf
inc
lcallw
enter
lods
push
jle
xchg
sti
shlb
ret
push
inc
sub
test
jge
mov
cld
pop
roll
nop
and
cld
nop
xchg
clc
xchg
out
pop
and
jnp
jnp
adcb
sahf
call
or
call
mov
push
push
pop
cmpsl
xchg
into
mov
mov
and
jl
and
fadd
and
pop
iret
test
cs
lret
outsb
mov
aad
iret
pop
call
sub
je
xchg
push
in
push
in
stos
sub
xchg
fwait
sahf
gs
jg
xor
pop
stc
popf
sub
pop
mov
xchg
je
test
dec
sbb
dec
xor
outsb
xchg
inc
jl
xchg
xchg
sub
pop
fnstenv
vmulss
pop
faddp
mov
int
mov
stos
cmp
pop
mov
or
adc
and
repz
or
fildl
jg
out
mov
loop
add
sub
add
cmp
cmp
jecxz
gs
aaa
mov
or
sti
fsubrl
adc
mov
mov
aas
testb
push
lahf
arpl
mov
push
pop
outsl
jne
dec
mov
inc
aaa
call
jne
js
push
adc
je
inc
dec
dec
add
dec
out
imul
repz
fwait
dec
mov
mov
mov
ret
scas
mov
stos
rclb
jmp
or
inc
jg
clc
mov
lea
fs
mov
mov
enter
arpl
cmp
shll
sub
fs
push
xchg
int3
enter
jp
cs
add
jae
mov
mov
lods
cmp
popa
or
lret
sbb
dec
push
sbb
bswap
mov
mov
cmp
add
ret
push
jle
push
iret
fmulp
test
sbb
jo
movsl
and
mov
sahf
ds
mov
add
xchg
xor
mov
std
lret
inc
je,pn
xchg
mov
pop
scas
mov
inc
loop
stos
test
lea
xchg
test
les
sub
call
mov
xchg
stos
pop
inc
pop
mov
cwtl
xchg
aas
add
outsl
push
adc
int
dec
pop
std
in
scas
jge
inc
cmc
adc
mov
andb
and
inc
int
data16
ret
mov
gs
imul
inc
andw
mov
sub
pop
dec
loop
and
inc
clc
imul
cmp
ja
push
xor
dec
xor
aaa
mov
movsb
pop
ret
pop
push
mov
pop
ficoml
gs
cmp
jnp
shrl
xor
and
dec
jl
xchg
and
popf
and
fdiv
pop
push
push
push
repnz
xchg
add
sub
xchg
or
scas
xor
or
in
push
push
pop
xor
inc
leave
push
lods
scas
lods
int3
push
mov
push
jb
insb
push
dec
inc
jnp
jno
lods
cmp
mov
adc
dec
mov
in
jo
loop
sub
xchg
adc
mov
cbtw
mov
aaa
ss
mov
jb
mov
shlb
cmpb
jo
cwtl
lret
into
dec
mov
inc
xchg
sub
and
repz
and
cmpsl
outsb
dec
js
xor
mov
aaa
adc
int3
dec
push
scas
lock
cmpsl
imul
mov
fists
jno
dec
into
add
jle
lds
sti
cltd
dec
orl
addr16
cs
mov
dec
xchg
int3
fmul
sbb
sub
fsub
lahf
adc
sbb
fwait
mov
fimuls
add
into
mov
sbb
hlt
sbb
icebp
cld
mov
jecxz
pop
sbb
lcall
lods
xor
dec
mov
jp
xchg
adc
fadd
or
cwtl
jnp
outsb
nop
cmp
dec
out
push
mov
cmc
pusha
fisubrs
sub
mov
xor
mov
push
loope
je
insl
jnp
xlat
add
push
mov
push
insb
pop
iret
lods
js
push
sub
adc
leave
int3
imul
mov
jg
pop
mov
cmp
je
movsl
vshufps
cld
push
ss
push
scas
push
sbb
lods
xchg
dec
sbb
mov
fildll
enter
add
lahf
xchg
imul
stos
xor
ljmp
xchg
lret
jmp
popa
jo
leave
xor
arpl
fwait
or
mov
fisubl
mov
mov
mov
cmp
cmc
push
and
push
ret
dec
ss
sbb
loopne
or
movsl
fiaddl
xchg
mov
pushf
adc
pop
xlat
sub
sbb
or
test
in
sbb
cvtps2pd
push
pop
or
in
call
sar
int
aam
loope
fdivr
cli
fs
jmp
jnp
fdivr
jecxz
cmp
in
xchg
mov
pop
ds
das
test
in
mov
xchg
add
fsts
inc
daa
xor
scas
pop
add
fisubs
daa
pop
inc
andl
xchg
mov
pusha
push
iret
xor
and
lock
std
mov
das
das
in
adc
jge
rorb
push
loope
loope
popa
fsubl
cwtl
in
push
sti
movsl
inc
xor
icebp
push
lret
test
je
push
insb
sahf
gs
dec
jnp
shll
out
iret
ds
lock
mov
sub
or
adc
mov
test
iret
add
sbb
sbb
sbb
xor
std
push
sbb
xchg
push
jae
jecxz
filds
jp
xchg
loopne
ss
xor
call
data16
cmp
leave
fdecstp
jno
in
test
call
sahf
ds
push
fsubrp
loop
iret
inc
mov
sbb
adc
movsb
xlat
xchg
mov
popa
jle
aaa
lsl
or
jge
inc
shrb
repnz
inc
sub
mov
mov
or
out
mov
sbb
icebp
aad
mulb
cmp
xchg
pop
mov
popl
mov
outsl
pop
clc
push
rorb
sub
scas
xlat
push
stos
jne
or
or
and
mov
pushf
lcall
jne
lods
dec
adc
pop
shr
mov
dec
in
scas
out
aas
add
sbb
leave
aas
rorb
inc
mov
jno
sbb
cmpsl
sbb
mov
xlat
or
shrb
mov
and
ja
xchg
dec
push
hlt
cmpsl
push
jb
jl
repnz
inc
sub
jo
inc
cmp
adc
adc
jmp
adc
dec
pusha
mov
hlt
push
outsl
push
icebp
out
test
stos
pop
mov
stos
adc
addr16
shl
mov
dec
ret
test
cld
out
cwtl
push
mov
pop
adc
jle
push
lock
mov
in
inc
fcompl
cltd
adc
sahf
cld
subl
inc
fldl
ror
test
repz
and
fisttps
arpl
cmp
dec
shrl
sbb
pop
add
dec
mov
sub
ds
fistps
inc
daa
push
xor
and
mov
into
addr16
cli
cmpsl
dec
xchg
clc
sub
outsl
mov
push
jmp
or
xchg
mov
and
mov
adcl
enter
mov
cwtl
aam
popa
dec
adc
mov
fucomi
mov
testl
pop
stc
cmp
inc
in
add
lret
jp
test
xor
cmp
pusha
jp
push
enter
or
dec
add
addr16
cltd
fsubl
and
outsl
out
sub
repz
sti
les
pop
rorb
add
stc
adcb
cmpb
call
mul
sar
pop
scas
insb
addr16
cmp
push
adc
bound
mov
pop
cmc
mov
gs
and
cmp
xor
into
and
dec
pop
inc
lds
inc
adc
mov
pop
push
out
mov
sbb
dec
std
mov
mov
loop
or
mov
leave
in
xchg
lock
mov
and
sub
adc
mov
jo
push
dec
mov
add
push
inc
es
push
outsl
testb
int
scas
and
dec
adc
pop
repz
ret
lahf
mov
out
mov
mov
and
mov
mov
inc
imul
adc
jne
movsl
xchg
jle
sbb
pop
out
sbb
jmp
out
subl
pop
scas
push
add
mov
shlb
je
and
or
mov
xor
inc
adc
add
ljmp
pmaxsw
loop
push
mov
mov
push
dec
idivb
sahf
fcompl
mov
in
jmp
pop
movsb
pop
push
je
xor
imul
push
es
mov
lods
mov
pop
add
imul
ss
jnp
and
mov
cmp
addb
pusha
test
shl
adc
pop
out
adc
sbb
aas
sar
aas
mov
lret
int
inc
popf
negl
notl
adc
jl
pushf
iret
divb
xchg
push
lods
inc
add
sarl
add
subb
stc
cmp
sub
lret
jg
inc
arpl
ss
sbb
adc
jnp
mov
fistps
into
bnd
mov
cmp
sbb
outsb
dec
dec
cwtl
std
lock
cmp
jbe
xor
dec
sub
lds
mov
and
outsl
scas
xchg
xor
adc
cld
push
pop
in
sti
push
push
and
int
loop
into
arpl
xchg
add
repnz
xor
mov
cltd
jo
call
aas
jae
iret
andl
daa
mov
lock
xor
pop
sub
icebp
repnz
mov
out
xchg
pop
cmp
adc
das
jns
sub
or
and
out
adc
dec
ljmp
add
mov
lret
mov
in
mov
inc
sbb
sbb
or
lds
enter
repz
enter
sub
pusha
cmp
test
cs
dec
cmpsl
mov
dec
jle
out
mov
out
loope
fcmovnu
pop
subl
cmp
repnz
mov
mov
pop
xchg
cmpb
xor
pop
orb
mov
sbb
into
inc
mov
mov
lods
jg
cmpsb
stc
xchg
rcrb
mov
ljmp
mov
cmpsl
icebp
enter
xor
pop
rcrb
es
bound
testb
fnstsw
aad
repz
popf
xlat
inc
cmp
addr16
push
popa
mov
test
cs
sbb
mov
cltd
push
push
jp
std
sbb
lret
bound
lods
outsl
mov
mov
maskmovq
testl
daa
dec
fcoms
and
and
jnp
add
fs
adc
xor
adc
lods
movsb
mov
movsl
pop
fdivr
xchg
lahf
lret
pop
lret
jo
leave
and
out
fwait
outsl
cmp
fwait
imul
ljmp
push
adc
push
ret
xor
mov
mov
cmp
fs
xchg
cmpsl
les
imul
mov
dec
call
pushf
mov
int3
aad
movsl
aaa
imul
dec
mov
iret
int3
lds
pop
call
push
iret
sbb
sbb
scas
stc
inc
out
mov
andb
jnp
dec
icebp
xchg
and
test
dec
mov
jno
mov
dec
dec
mov
pop
fdivrp
sub
inc
imul
dec
push
jecxz
jb
mov
cmp
cmp
xor
es
sub
je
cltd
js
lret
movsl
repnz
mov
insb
test
and
jg
push
xchg
inc
sbb
jnp
or
cmc
out
xlat
jl
sysenter
mov
pop
ss
pushf
push
int3
push
les
aaa
sbb
mov
inc
cmp
pop
in
outsb
mov
xor
test
push
xor
mov
cmp
pop
pmaddwd
mov
call
or
lea
test
jmp
xchg
push
into
xor
xchg
out
push
jge
jns
cmp
and
bound
pop
mov
pop
sub
mov
test
sbb
or
inc
inc
sub
pop
hlt
shlb
jbe
dec
sub
mov
and
or
xor
loop
xchg
jo
fstl
inc
iret
test
jecxz
enter
xor
in
cwtl
roll
or
addb
sbb
pop
es
mov
inc
push
sar
pop
xor
pusha
sub
or
movsb
dec
js
dec
in
sub
sbb
and
loop
and
test
cmp
and
adc
xor
insl
cltd
add
pop
cmp
jg
push
sbb
add
hlt
add
aas
ret
pop
enter
and
scas
mov
dec
mov
xchg
sti
push
mov
or
mov
popf
jb
inc
sbb
add
fs
lcall
jne
push
add
popf
add
pusha
dec
int3
mov
cld
xchg
sbb
pop
out
std
addr16
sub
or
out
icebp
in
leave
into
stos
ret
into
decl
jne
dec
leave
icebp
jmp
adc
dec
mov
push
outsb
fwait
sahf
add
xorl
mov
mov
inc
fistpll
fidivl
mov
sbb
cld
sub
ja
repz
and
outsb
sub
aam
mov
or
jne
cltd
imul
loope
mov
in
dec
movsb
push
sbb
lods
sbb
and
test
leave
aas
xchg
pop
adc
lock
push
sbb
add
fistps
mov
aad
xchg
ret
dec
jp
adc
adc
mov
mov
aad
sub
add
test
shrb
loop
lcall
and
dec
ljmp
fxch
repz
jmp
lret
mov
out
cli
addl
sub
add
enter
dec
mov
fwait
xchg
nop
jg
xchg
mov
inc
ljmp
fistpl
add
jnp
js
adc
test
xor
sbb
mov
cmp
inc
rclb
ret
in
and
xchg
insb
sub
push
xor
stos
std
clc
and
arpl
adc
dec
gs
int3
rcr
mov
bound
pop
ss
sbb
push
out
outsb
out
xor
ja
test
mov
in
fistl
mov
out
adc
into
sub
aaa
dec
dec
insl
push
pop
test
pushf
fisttpl
gs
sbb
lcall
mov
xor
inc
movsl
cmp
loope
push
cltd
fwait
rcl
stos
imul
cmpsl
pop
sbb
ret
mov
inc
imul
in
pusha
sub
popa
je
loop
mov
das
push
mov
pop
out
cmp
mov
dec
push
mov
out
xchg
dec
dec
out
sbb
mov
mov
sub
dec
cli
loope
hlt
iret
pushf
insl
cmp
mov
sub
mov
inc
daa
mov
inc
cmp
jne
mov
push
pushf
mov
sub
clc
cli
ja
imul
mov
lods
pop
cmp
cltd
cltd
mov
sbb
xor
fs
rclb
mov
iret
sahf
dec
and
dec
jge
dec
loop
mov
lock
inc
aam
lods
mov
push
fs
add
mov
dec
add
pushf
sarb
test
inc
iret
in
jb
sarl
dec
sbb
mov
pop
mov
jae
lock
cmp
into
es
mov
mov
mov
daa
sarb
push
cs
jge
xor
ret
inc
test
lods
repnz
mov
les
jmp
mov
inc
cmpsl
dec
sub
mov
push
add
xor
dec
xchg
stos
iret
xor
sbb
xchg
call
loop
sub
xchg
jmp
push
rolb
mov
lds
jge
mov
or
sub
xchg
push
enter
sub
mov
cmpsl
jg
xor
and
mov
xchg
pop
jne
xlat
lds
mov
mov
jecxz
sub
cmc
jge
or
scas
mov
pop
ljmp
outsl
aaa
add
call
fdiv
mov
repnz
lahf
dec
fucom
push
int3
push
aad
test
inc
sbb
push
arpl
and
add
jl
cmpsb
mov
push
es
mov
add
cwtl
movsl
sarb
and
inc
sti
lods
scas
cwtl
and
cmc
cli
dec
push
fidivs
in
je
push
push
xlat
add
mov
fstl
mov
aaa
cmp
into
insl
int
ret
aaa
mov
fmul
out
aaa
test
xchg
mov
mov
jns
insl
repnz
xor
scas
loope
jl
cmp
fisttpl
enter
mov
lods
popa
sbb
and
push
dec
inc
add
imul
int3
rorl
xchg
jmp
jno
cmp
cmovg
sti
push
dec
scas
mov
jbe
mov
dec
pop
mov
das
loopne
js
pop
adc
mov
or
push
sub
idiv
sub
aas
add
inc
and
das
popf
adc
scas
call
imul
xor
fldl
shlb
xchg
bnd
dec
icebp
or
jl
inc
ss
xchg
mov
mov
jecxz
push
cwtl
das
dec
push
imul
into
dec
leave
dec
dec
icebp
dec
std
xchg
xor
or
xchg
cmpb
mov
mov
cmp
push
mov
mov
ret
ficoml
jge
or
pop
mov
add
push
insl
adc
sub
inc
test
jns
lea
xchg
leave
dec
lret
stc
ret
push
xchg
cwtl
fildl
pop
cmp
push
mov
mov
xchg
sti
mov
pop
adc
std
sub
dec
or
data16
jge
stos
js
xor
dec
lea
dec
inc
ss
insb
ja
roll
mov
inc
stos
arpl
shll
mov
or
std
shrb
aas
jns
out
sbb
test
lahf
mov
mul
in
loopne
pop
mov
cwtl
jmp
in
jne
pop
or
sbbb
jb
pop
jp
mov
stc
push
fdivr
in
mov
jmp
in
out
push
sahf
shlb
push
and
and
mov
pop
jge
and
movsb
mov
jp
cmp
mov
lcall
xchg
ja
jg
pop
push
seto
add
push
ret
int3
mov
lods
push
sbb
fwait
insb
pop
ds
insb
psrad
push
pop
xor
push
mov
lret
fiaddl
imull
add
gs
push
cmp
insl
add
fbstp
dec
adc
cmp
mov
inc
out
fisubrs
inc
mov
inc
xchg
cmp
loopne
mov
loop
fldenv
pusha
call
jns
dec
mov
inc
and
add
mov
prefetch
or
adc
inc
call
cltd
dec
imul
pop
jnp
je
dec
sub
or
loop
add
cmp
cmp
arpl
xchg
mov
adc
in
cwtl
xchg
inc
adc
adc
popf
add
and
push
sbb
mull
daa
sbb
add
dec
in
inc
pop
imul
xchg
push
icebp
pop
add
int3
outsl
je
out
rcrb
orl
aas
movsb
in
jmp
js
aad
rorb
lret
je
sub
ret
ret
mov
jl
cli
sti
sub
lret
adc
push
rolb
pop
fmuls
in
inc
or
imul
sahf
arpl
lret
push
movsl
pop
nop
outsb
and
sbb
push
xchg
test
dec
movsl
xchg
cmpsb
pop
xchg
lret
addr16
cli
jle
pusha
lock
dec
movsb
or
scas
mov
stc
adc
pop
ds
repnz
xchg
shll
aam
lock
xchg
repnz
pop
dec
pop
pushf
cwtl
pop
jae
inc
in
ret
iret
out
imul
sbb
xchg
in
inc
int
push
xchg
pop
shl
mov
cmp
or
pushf
mov
sarb
add
cmp
lods
add
mov
dec
cmp
es
jp
cld
mov
dec
push
pop
jo
xor
les
sub
mov
adcl
fdivrs
inc
test
ds
push
pushf
jae
sbb
mov
clc
mov
mov
xchg
orl
jns
movl
adc
pop
fnsave
outsl
sbb
adc
or
xchg
bound
out
ljmp
fdivrs
hlt
dec
and
pop
ret
sbb
xchg
jne
cmp
or
mov
daa
cmc
push
loop
lahf
dec
mov
push
and
mov
insb
cs
pop
test
xor
orb
repz
pusha
leave
clc
dec
das
xchg
orb
sbb
push
ret
or
shrl
rcll
mov
lods
pushl
in
enter
sbb
outsb
stos
and
mov
cs
mov
shlb
cmp
xor
dec
push
out
add
push
bound
adc
pushf
jmp
cmp
dec
pop
adcb
mov
push
adc
push
mov
arpl
inc
rorl
movsb
repz
xor
dec
push
sahf
sti
je
cmp
iret
repz
imul
aad
in
or
inc
call
cmpsb
jns
dec
xchg
repnz
dec
lds
jle
mov
pusha
xchg
aaa
sub
adcb
cmp
mov
xchg
fwait
sahf
lret
clc
lahf
popa
test
pop
movsl
push
lret
adc
rolb
mov
fwait
xchg
push
mov
mov
push
fwait
dec
pushaw
scas
push
mov
mov
add
xlat
dec
push
jns
arpl
imul
lds
fwait
mov
movsb
sub
daa
or
out
nop
stos
pop
dec
jae
nop
sub
int3
out
setle
xchg
ret
repnz
mov
push
inc
sbb
push
mov
xchg
mov
add
ss
jb
xor
sbb
fstps
cmp
xor
mov
cmp
ljmp
pop
xchg
cmp
mov
jb
jmp
mov
mov
jae
sub
sub
push
call
mov
cmpsb
mov
js
sahf
push
mov
cmp
daa
sub
out
inc
int3
add
mov
xorl
pop
je
test
test
mov
cmp
js
xor
xchg
xor
loop
fstps
shlb
push
and
fs
lcall
imul
mov
sarb
lock
push
bound
mov
int
or
jo
xchg
test
adc
jmp
std
cmp
je
stc
out
xor
mov
inc
jle
cmpsl
push
jo
dec
cwtl
push
jo
ljmp
xor
ficoml
arpl
int
xor
push
xchg
aad
div
push
and
pop
std
jns
lds
add
adc
or
mov
push
mov
cmpsb
jmp
dec
sarl
jo
mov
js
mov
dec
cmp
xchg
fs
cmc
mov
popf
cmp
sbb
xor
or
sarb
inc
lds
cli
mov
test
mov
lock
frstor
ret
inc
add
gs
xchg
out
mov
pop
sub
fistpl
jmp
jnp
inc
cwtl
test
xchg
add
xor
mov
inc
mov
pop
ljmp
clc
cmp
pop
loopne
jbe
and
adcb
cmpsl
adc
les
mov
or
mov
mov
add
lock
pop
jle
fsts
add
xor
xchg
popa
jno
xor
add
sbb
cmp
loopne
jb
or
push
pop
or
xchg
lcall
aam
mov
je
lods
mov
test
xor
gs
inc
lret
leave
mov
sub
jmp
mov
xlat
test
dec
jbe
movsb
or
iret
sub
fst
jb
mov
push
add
sub
mov
sti
outsb
stos
repz
into
and
bswap
out
call
xor
and
mov
pushf
loope
test
nop
mov
in
lret
outsb
xor
and
jnp
inc
fxch
inc
imul
xchg
push
fcmovu
inc
cmp
arpl
sbb
orl
mov
sbb
push
xchg
lock
test
mov
orb
or
xchg
fists
or
or
stos
sbb
inc
cmpsl
lahf
testl
insb
mov
gs
into
in
mov
in
outsb
in
movsl
mov
dec
xchg
push
sbb
aam
rorl
xchg
xlat
pop
popf
xor
fs
mov
mov
dec
subb
dec
addl
push
fstpl
popf
mov
and
pop
sub
mov
mov
mov
in
inc
jns
iret
or
int
iret
movl
filds
or
or
je
add
mov
xchg
lods
popf
add
jbe
insl
call
mov
dec
jcxz
xchg
jne
jb
inc
ret
xlat
cmp
bound
sub
mov
mov
sub
sbb
sub
add
lcall
xchg
sub
divb
in
jo
les
dec
sub
dec
mov
jecxz
mov
sub
ret
out
mov
pop
test
filds
repnz
ret
fistl
cmp
pop
cltd
leave
rcrb
mov
in
pusha
xchg
icebp
cmp
test
dec
les
inc
xchg
add
jmp
and
cmp
js
xchg
mov
or
mov
insb
mov
scas
or
push
fisubrs
subl
and
jnp
mov
and
add
dec
dec
jae
xchg
lock
cmp
and
in
mov
pop
inc
sbb
loopne
nop
out
test
sub
sub
push
or
enter
xchg
jo
leave
dec
mov
fimull
cld
inc
inc
repnz
aam
and
adc
int3
pop
mov
jge
or
invd
ds
leave
sbb
pop
ds
xor
fwait
stc
or
add
lahf
bnd
rorb
es
addr16
or
sub
sbb
stc
cld
xor
jg
mov
ja
jg
and
shl
mov
scas
into
jecxz
xchg
call
out
imul
dec
js
xor
add
mov
call
es
inc
sbb
push
pop
aam
sub
lds
add
rcrb
int
pop
xchg
push
jge
test
add
xchg
sbb
cmpsb
test
int
ss
sub
mov
es
pop
pop
cli
jge
cmc
loop
dec
jae
mov
dec
add
jbe
inc
lds
mov
out
pop
leave
stc
mov
add
adc
push
pusha
mov
mov
dec
jb
push
push
scas
xchg
pop
ret
lret
pop
stos
mov
in
sub
mov
jmp
test
xchg
insl
ja
mov
cltd
ror
or
xchg
jno
outsl
mov
or
adc
ret
aam
pop
scas
xchg
int3
insl
insb
hlt
mov
cmp
sbb
fs
dec
dec
jbe
repnz
or
mov
lcall
aas
jno
xlat
mov
addr16
add
jl
xor
arpl
adc
testb
push
inc
cwtl
js
sbb
dec
fbstp
jl
add
push
jge
sbb
imul
mov
rclb
push
cmp
jmp
js
add
sbb
shlb
cmpsb
dec
mov
int3
daa
cltd
pop
gs
sub
mov
fists
adc
xlat
add
sbb
push
mov
daa
jae
test
mov
and
cmpsb
mov
add
push
addr16
inc
daa
in
jb
lret
mov
mov
test
pushw
scas
xchg
clc
push
cmp
sub
rolb
pushf
jle
aam
negl
dec
and
dec
in
push
int
lods
loope
ss
ljmp
pop
xchg
cmp
pushf
leave
cmp
data16
mov
mov
je
loope
pop
xchg
jns
and
xchg
jnp
mov
inc
into
cmp
pop
int3
aam
mov
mov
ffree
mov
jp
rorb
faddl
mov
leave
add
cmp
jo
add
mov
and
out
rclb
mov
and
fmull
xlat
fiadds
push
or
jg
jno
cmp
std
xlat
hlt
aaa
xor
add
cmp
and
out
nop
xchg
push
pop
out
iret
adc
jecxz
aaa
mov
in
inc
cmp
dec
lods
xchg
pop
cli
or
lret
outsb
push
pop
push
cmp
adc
std
and
jmp
fistps
rep
or
mov
mov
scas
je
lret
shlb
pop
nop
dec
jle
cmp
fsub
push
ret
push
sub
outsb
and
cltd
aad
mov
sub
adc
add
std
add
dec
nop
sub
fidivrl
jle
or
cmpsl
pusha
jl
dec
jg
sahf
pop
fdivrl
or
imul
enter
push
push
dec
popf
and
adc
push
imul
fiaddl
test
pop
pop
push
jl
jge
push
lcall
xchg
lahf
cmp
sub
aas
addl
loop
mov
or
stos
test
cs
add
sub
das
cli
fnstenv
jmp
or
push
push
mov
mov
inc
lret
or
popl
xchg
mov
inc
xchg
mov
mov
dec
dec
and
cld
sub
dec
mov
jp
push
sbb
mov
aam
jmp
icebp
lods
sahf
cmp
sub
dec
outsb
mov
ficompl
and
fstps
xchg
ja
sbb
pop
in
aaa
xchg
call
and
in
push
xchg
rcrb
adc
clc
movsl
out
xchg
push
sarb
mov
fwait
pop
jno
pop
sbb
sbb
fs
mov
xchg
pop
mov
insb
mov
and
fcoml
fistps
mov
cwtl
scas
pushf
in
sbb
pop
cmp
xchg
jnp
leave
adc
cmpl
adc
jbe
notb
aad
xchg
sarb
ror
bound
cmp
imul
movsl
mov
mov
cld
icebp
out
dec
mov
sub
imul
das
nop
scas
subb
rcrl
test
jo
cmpl
jb
sub
out
mov
fistl
jbe
iret
pop
psadbw
lock
jg
push
mov
out
loope
pop
add
push
add
pop
cli
pop
jbe
gs
cmpsb
outsb
data16
inc
dec
lret
cli
push
and
test
fmull
adc
stc
push
btc
rcl
out
scas
ror
mov
loop
cmpsl
mov
je
out
fists
mov
mov
int
mov
daa
lret
in
cld
sbb
lods
in
add
movsb
je
bound
mov
test
leave
rclb
xor
and
inc
mov
leave
aad
test
je
jne
adcb
xchg
scas
pop
cli
jne
push
jno
lcall
cmp
add
js
lds
mov
test
xchg
push
cltd
push
imul
mov
pop
hlt
push
icebp
jge
inc
int
xchg
mov
xor
push
push
call
fwait
dec
inc
inc
out
cmp
fidivs
mov
pop
cmp
sub
sub
test
push
clc
imul
add
nop
gs
add
cltd
cli
pop
ds
pop
fnstcw
sti
rcrl
cmp
mov
fnstsw
inc
or
idivl
fdivl
pop
in
shrb
int3
mov
inc
fcmovne
jne
outsl
cltd
inc
xchg
sahf
sti
add
push
cwtl
xchg
push
push
imul
xor
enter
mov
cmpsb
stos
stos
cld
hlt
shll
mov
out
imul
mov
cmp
cmp
jmp
pop
pop
cli
inc
in
xor
push
sbb
pop
stos
scas
seto
pop
mov
adc
mov
inc
or
dec
mov
mulb
loopne
scas
sbb
xchg
xor
loop
mov
adc
jge
xchg
jbe
outsl
dec
dec
or
push
or
xchg
jo
aaa
daa
xor
lret
pop
lods
sbb
inc
and
mov
cld
ret
fidivs
mov
jge
mov
sahf
xchg
cltd
stos
addr16
jo
sbb
int
rolb
xor
out
pop
clc
cmp
xchg
lds
out
cmp
sbb
inc
add
add
pop
push
test
data16
cld
mov
mov
shrb
xchg
sbb
cmp
mov
xchg
sub
outsl
loope
dec
ret
lock
mov
pop
dec
test
iret
sbb
mov
mov
popa
call
ja
mov
icebp
je
mov
stos
and
inc
scas
add
outsb
fwait
push
fnstcw
imul
cli
mov
hlt
xlat
repnz
dec
inc
or
push
movsb
xor
ljmp
mov
push
call
lcall
rcll
pop
dec
ja
add
sbb
cli
movsb
das
cmp
outsb
js
loopne
or
dec
call
adc
cld
mov
dec
xchg
lods
cmpps
sahf
cld
sbb
addl
jb
mov
cld
ret
das
cwtl
pop
mov
stos
dec
and
mov
pop
out
and
mov
jne
or
les
out
and
jecxz
dec
shll
sbb
hlt
xor
cmp
sbbl
cmp
sahf
mov
lcall
xchg
cli
jbe
pop
mov
jge
shll
mov
outsl
nop
out
dec
mov
jbe
add
adc
xor
mov
add
es
stos
testb
xchg
xor
movsb
xchg
ret
ss
inc
mov
pop
push
xorb
stos
cmp
out
test
nop
rclb
test
xchg
enter
hlt
lea
ss
std
es
out
fdivrl
dec
jne
mov
mov
loop
lods
das
adc
daa
xchg
mov
adc
jo
in
daa
ret
lods
nop
popa
and
lea
mov
pushf
add
dec
fwait
dec
filds
frstor
stos
loopne
pusha
xchg
push
ljmp
dec
jns
shrl
dec
rclb
pop
dec
jns
into
add
xor
ds
sar
adc
into
add
aaa
push
stos
cmp
popf
clc
lods
jmp
int3
cld
xchg
sbb
xor
and
jmp
mov
out
cmp
add
leave
push
mov
lahf
stos
pop
dec
fistpll
mov
mov
xor
lcall
rolb
mov
fldt
pop
sbb
int3
or
sbb
jne
xchg
test
jmp
sub
add
jmp
adc
xchg
and
or
inc
add
pop
aas
je
mov
push
inc
mov
aad
xor
inc
xchg
aad
shlb
mov
mov
stos
cmp
add
xchg
insl
fcoms
mov
ret
jl
repnz
arpl
inc
test
daa
mov
call
xchg
xchg
sbb
ffreep
mov
stos
cmp
add
sbb
sbb
adc
arpl
adc
cmp
dec
push
add
jge
lds
rcll
test
cmc
bnd
xor
scas
or
mov
fs
push
xchg
sub
mov
popf
insl
mov
cmp
xor
jb
push
mov
movsl
push
inc
imul
jmp
mov
shlb
pop
or
arpl
out
ret
je
sub
ljmp
in
mov
fsubp
sbb
loopne
lods
push
xchg
inc
rorb
sub
test
mov
adc
jmp
ja
mov
and
call
pop
pop
sbb
pusha
mov
cmpsb
fnsaves
jne
push
in
push
push
dec
rcl
pop
cltd
insb
push
aam
push
leave
mov
jne
lcall
movsl
mov
lret
mov
rol
scas
or
xchg
arpl
cmp
out
mov
repnz
jns
mov
add
std
js
adcl
mov
mov
mov
mov
lods
dec
xor
ja
ljmp
push
xchg
pop
dec
jno
dec
lcall
add
pop
idivb
dec
int3
inc
ret
shlb
test
mov
test
pop
lcall
mov
cld
inc
mov
out
pop
add
rcrb
sub
dec
push
arpl
les
dec
outsl
push
shll
stos
or
movsb
xchg
orb
xor
mov
in
insl
fwait
popa
adc
test
adc
jo
stos
jbe
jo
cli
into
push
cmpsl
loopne
lret
xchg
sarb
jge
aad
das
or
mov
and
inc
idivb
sarb
out
addl
push
sbb
imulb
les
dec
mov
sub
mov
out
jne
mov
mov
pop
fldcw
int3
push
leave
pusha
les
push
dec
mov
jg
insl
ljmp
jbe
mov
mov
in
push
sbb
jge
add
ficoml
sbb
xlat
aad
movsl
stos
outsl
outsl
dec
inc
pop
fisubrl
aam
mov
sti
cs
sub
jecxz
mov
idiv
daa
pop
fcomi
sbb
jae
jns
add
push
cmp
add
push
mov
xchg
add
adc
fiadds
mov
pop
ds
pushf
imul
jae
cmp
call
movsb
lds
leave
push
pop
popf
jno
je
add
jl
push
aas
fwait
sub
clc
adc
loopne
push
fneni(8087
cmp
insl
lahf
jl
int
loope
push
out
inc
inc
movsl
je
pop
mov
mov
push
mov
push
mov
arpl
push
loop
add
push
pusha
jp
insl
cmp
jmp
aad
stos
mov
push
sub
dec
mov
sbb
mov
and
dec
scas
jo
je
mov
mov
mov
mov
cmc
icebp
lret
test
stc
cmc
adc
shll
lret
push
lds
pushf
das
add
push
push
out
jb
adc
sahf
popa
jp
addr16
mov
rcrl
dec
jle
cmp
dec
bound
arpl
and
mov
and
ret
cpuid
mov
or
aad
popf
repnz
push
das
add
adc
xor
add
add
cwtl
insb
aad
incb
ficompl
fadds
xchg
rorb
shr
mov
jne,pt
fadds
imul
imul
dec
mov
inc
pop
jl
hlt
stos
filds
in
mull
lret
and
xchg
cltd
out
inc
cmp
cmp
cs
push
xchg
jecxz
and
int
add
jg
xchg
out
cmp
pushf
movsb
insl
fmuls
dec
xor
sahf
scas
lcall
mov
mov
movsl
xor
adc
outsb
pop
mov
push
arpl
mov
pop
inc
push
ret
cmp
lahf
repz
push
iret
push
jle
or
icebp
xchg
push
and
and
popf
lcall
mov
addb
cmp
adc
sbb
sbb
enter
mov
and
loop
pop
hlt
jo
in
mov
inc
dec
or
in
sub
mov
add
mov
cmc
out
lds
xor
scas
lret
sbb
lahf
rep
add
fsubl
arpl
jle
mov
fisubrl
pop
sub
into
and
test
fxch
xor
xchg
stos
xor
orb
int
jmp
pop
inc
das
stos
push
jne
mov
outsb
lea
insb
inc
out
xlat
push
jg
jb
loop
inc
or
cwtl
push
lcall
mov
lahf
fldenv
and
sbb
and
cmp
ds
sub
std
jb
stos
cmpsl
mov
mov
lods
jbe
rolb
imul
test
jg,pn
es
shll
loop
shl
mov
loopne
jg
xor
pop
adc
sub
out
test
sbb
sbb
ret
mov
jae
sahf
pop
icebp
test
pop
mov
pop
push
int
ds
jbe
or
fcoml
lock
adc
sbb
rolb
addr16
push
fcomip
nop
das
xor
pop
insb
repnz
push
or
adcl
push
pop
sbb
mov
jae
nop
mov
stos
cmp
mov
mov
dec
and
mov
call
and
hlt
ret
dec
add
cs
mov
bound
mov
xchg
mov
adc
bound
mov
fcmovne
push
or
xlat
ret
fs
jmp
inc
fwait
subb
mov
inc
push
mov
or
pop
arpl
sub
add
sub
test
or
add
pop
test
mov
iret
mov
and
imul
adc
push
xchg
and
int
push
popl
xor
frstor
push
ja
into
inc
mov
adc
xor
lret
fwait
mov
mov
call
dec
xor
xchg
or
xchg
and
push
das
jns
cmpsl
add
cmpsl
dec
cmpsb
push
sub
out
fiadds
jae
repnz
xor
movsb
cmp
std
sahf
pop
test
mov
es
or
test
icebp
or
add
in
xchg
mov
adc
pop
mov
in
test
mov
sbb
popf
test
stos
lds
stos
xor
icebp
jnp
sub
mov
jo
dec
outsl
cltd
jl
adc
ds
lret
cmc
orb
push
jle
mov
and
popf
xor
scas
xchg
scas
fnstcw
lods
es
jns
xchg
pop
push
cltd
dec
sbb
dec
js
push
pop
inc
shrl
mov
jg
mov
push
mov
jnp
sahf
jl
pop
pmuludq
imul
aam
jnp
xlat
or
insl
push
lods
gs
inc
mov
adc
dec
sbb
lds
mov
fwait
add
sbb
mov
lock
cmp
sub
divl
movaps
push
std
fs
popf
mov
outsb
in
pop
add
into
mov
nop
fbstp
push
sbb
and
sbb
shlb
loop
inc
pop
nop
add
and
shll
pop
cmpsl
nop
xor
pushf
mov
aad
test
or
xchg
xchg
sbbb
icebp
dec
jne
or
scas
push
rcll
or
mov
imul
fisttpll
xchg
pusha
cmp
fcomps
sbb
xor
mull
push
xor
int3
sbb
jno
int
repnz
stc
popa
dec
cmovg
call
std
lea
mov
repnz
stos
cs
pushf
mov
cld
in
pop
sbb
ret
pop
leave
and
dec
mov
push
push
mov
push
push
es
mov
xor
sub
dec
push
mov
bound
dec
mov
mov
or
xchg
mov
xor
inc
xchg
jbe
cmp
shrb
cwtl
cmpsl
mov
xchg
repz
mov
aaa
cld
test
xchg
pop
bound
bound
sub
adc
pop
jge
jmp
mov
push
insb
bound
cmp
lahf
imul
mov
popa
ret
orl
jmp
imul
aam
xor
inc
xchg
into
dec
mov
aad
add
dec
in
sbb
cmp
cwtl
or
push
loope
addr16
rcrl
mov
mov
sarb
mov
idivb
and
ds
mov
inc
mov
lret
push
push
sahf
fcompl
mov
hlt
sahf
add
inc
stos
inc
stc
jg
adc
mov
into
scas
stc
cmpsb
fwait
lcall
ret
pop
sub
outsb
mov
sbb
mov
aad
lock
inc
sub
out
jmp
je,pt
int3
stos
cltd
xor
int3
jp
daa
mov
imul
pop
out
in
shll
xchg
mov
stos
inc
into
fidivrs
into
fwait
xor
dec
add
popa
mov
aam
push
mov
out
mov
and
lock
movl
and
xchg
iret
xor
add
cmpsb
xor
xor
aad
loopne
jb
xlat
pop
insb
pop
or
pop
pop
or
call
mov
sbb
jbe
xlat
lock
mov
mov
push
repz
push
xor
xchg
inc
xor
xor
jmp
sbb
ja
fs
xabort
pop
aad
in
insb
and
xor
jge
cli
fbstp
lods
adc
clc
insl
fwait
cli
lret
cmp
jg
ficomps
push
cmp
or
mov
outsl
std
dec
sbbl
xchg
xchg
mov
pop
movsl
mov
jl
out
or
pop
lret
add
cmp
and
jmp
fs
sub
lods
mov
movsb
test
pop
sbb
jne
lcall
and
jnp
mov
xor
inc
jnp
sbb
ret
bound
pop
dec
inc
ret
daa
sbb
mov
leave
repnz
sub
neg
dec
jno
push
push
jns
ficoml
dec
adc
decb
xor
cmp
mov
mov
mov
dec
loopne
pop
inc
add
insl
mov
sbb
das
clc
fcoml
adc
dec
and
sub
mov
add
mov
add
test
inc
mov
in
xlat
cld
shrl
je
xor
ljmp
push
mov
gs
cmpsb
and
mov
fildl
cwtl
jle
or
fistps
adc
sbb
or
mov
in
inc
icebp
and
or
std
sbb
sub
mov
loop
or
stos
cld
cmp
and
out
push
xor
xchg
loop
jecxz
dec
fldl
ret
out
adc
sarb
dec
into
pop
and
ss
add
lret
xchg
pop
int
xor
in
int
push
adc
ret
adc
push
xorl
bound
ss
mov
clc
or
out
mov
jbe
or
mov
inc
aas
daa
pop
push
insl
call
cld
cmp
adc
push
pop
fwait
ret
sub
cmc
xor
out
sub
mov
test
xor
xlat
sbb
dec
add
sbb
dec
mov
leave
nop
adc
lds
jo
cmp
std
or
jb
jg
or
dec
cmpsb
cmp
mov
push
ljmp
jge
adc
mov
test
enter
test
aas
dec
add
push
ret
mov
ja
dec
lcall
loopne
clc
mov
aaa
cmp
arpl
jne
dec
xor
or
stc
mov
jp
in
aad
stc
or
int3
nop
cmp
inc
sbb
mov
setae
popf
aam
sti
daa
ljmp
xor
dec
add
aad
hlt
dec
inc
loope
mov
jmp
std
jne
lcall
sbb
cwtl
js
or
adc
fwait
inc
sahf
push
sbb
int
xlat
mov
std
lds
xchg
add
fsubr
sarl
or
popa
adc
push
rcrl
mov
pop
sbb
xor
add
sbb
adc
int3
in
xor
fcomps
sbb
xor
pop
sub
push
shl
lret
add
mov
sub
sarl
hlt
mov
mov
adc
std
jge
loop
push
push
icebp
mov
stc
rorl
aas
insl
pop
out
das
fcomps
aas
into
lock
iret
mov
jnp
or
jb
mov
pop
xchg
js
in
sbb
mov
neg
lods
pop
pop
or
dec
mov
xchg
popf
inc
bound
gs
jnp
mov
scas
ss
jle
sub
das
lret
dec
mov
or
xchg
jl
mov
scas
lea
ljmp
lahf
cmpb
jae
adc
ffreep
js
das
jge
ljmp
aam
lock
mov
aad
xchg
imul
jmp
push
jne
repnz
sbb
mov
jae
adc
icebp
hlt
mov
loope
movsl
aam
jbe
mov
pop
sbb
and
cwtl
int3
ja
scas
sti
mov
loop
shl
subl
mov
xchg
push
jecxz
loope
cmp
popf
pop
push
push
shlb
repnz
ljmp
imul
mov
rorl
cmp
test
insl
pushf
dec
ljmp
push
idivb
cmp
mov
scas
mov
sarb
xor
or
add
mov
scas
outsl
fcoms
hlt
mov
outsl
ret
mov
mov
mov
pop
fisttpll
jns
shrb
adc
inc
jbe
jae
pop
test
das
push
sbb
mov
les
nop
mov
mov
ret
xchg
mov
jecxz
imul
lahf
std
and
insl
hlt
mov
inc
mov
fcompl
int
fs
xor
add
and
cmp
movsl
pop
pop
shll
sbb
xorl
pop
rcl
movsb
pop
dec
popa
icebp
jae
mov
ljmp
cs
sub
mov
outsl
scas
scas
mov
idiv
push
hlt
jns
cmp
std
ret
enter
xor
stos
mov
cmc
out
int3
insl
rclb
jge
scas
scas
icebp
fwait
out
loopne
out
test
mov
ret
push
mov
test
testl
xor
movsb
in
mov
jns
adc
dec
outsb
outsb
leave
scas
sub
and
leave
xchg
inc
inc
outsb
and
jae
call
sub
mov
pop
test
stos
mov
loop
mov
jmp
ss
xchg
fadds
int3
mov
insl
sbb
mov
fcompl
jle
shlb
push
ret
add
stc
jl
dec
sbb
cld
mov
mov
out
int3
pop
rcr
add
mov
and
fdivrl
jo
pop
dec
xchg
or
pop
dec
jo
adc
out
mov
jno
test
fs
cmp
lock
xchg
ljmp
xor
loope
cmp
xlat
movsl
push
ljmp
int
lds
pusha
lahf
outsl
push
pop
or
push
sub
xor
jnp
nop
pop
imul
arpl
das
push
stos
adc
and
xchg
clc
popa
stos
xchg
sahf
dec
out
inc
mov
push
mov
test
dec
jecxz
ss
and
cmp
mov
jg
imul
cmp
adc
popa
imul
in
lcall
and
ret
ret
out
ret
int
pushf
das
mov
mov
pop
cmpsb
mov
clc
xchg
xor
int3
fadds
clc
ficomps
xchg
fucom
aas
mov
add
mov
and
push
or
adc
fstl
out
lea
push
dec
std
push
xorl
add
enter
sbb
aad
jb
shll
or
jns
lods
pop
jbe
jl
mov
stos
enter
imul
neg
loope
ror
ret
push
xchg
adc
xchg
jg
add
or
imul
dec
inc
jg
shrb
enter
lods
flds
sbb
push
sub
adc
pop
dec
scas
cld
mov
call
mov
fs
hlt
into
fldenv
push
sub
pop
subb
jp
icebp
pop
xor
jnp
clc
fstl
sub
push
dec
enter
or
loop
pop
insb
jo
je
or
filds
loop
lock
or
loopne
jno
lock
mov
and
add
jmp
loopne
sub
scas
bound
lods
dec
xchg
push
fwait
mov
and
popa
fdiv
negl
in
repz
mov
clc
scas
stos
fucomip
mov
xchg
outsb
xchg
pushf
xor
adc
loop
sahf
fiadds
xor
loopne
dec
sbb
adc
lret
pushf
push
nop
xchg
push
push
mov
cmpsb
ret
sub
pop
call
adc
stos
fisttps
mov
leave
pop
jecxz
sbb
in
jbe
jnp
adc
ret
cwtl
shrl
loopne
icebp
pop
std
pop
and
sbb
adc
sahf
mov
roll
xor
aad
aaa
xor
ds
xchg
stos
adc
jo
lcall
andb
mov
rclb
fsubl
fldenv
dec
dec
aaa
imul
test
arpl
jmp
xor
int
inc
jge
test
add
mov
lahf
sub
aam
movsb
push
bswap
sbb
or
inc
and
and
ljmp
xor
sub
bnd
lahf
xchg
clc
popf
je
cmp
aam
mull
aad
jb
jecxz
xchg
mov
pop
icebp
rolb
dec
mov
dec
je
xchg
dec
inc
push
es
push
add
jo
stos
inc
sub
and
lret
xor
mov
jge
stos
mov
repz
aas
pop
stc
xor
sbb
sub
dec
or
mov
or
mulb
fistl
sub
pop
ja
or
pushf
lea
add
sub
out
inc
adc
iret
sti
popa
dec
add
pop
add
pop
mov
mov
add
xchg
inc
xchg
and
enter
js
sbb
dec
lahf
mov
mov
sahf
mov
mov
dec
out
mov
shrb
cmpsl
fwait
cld
lcall
fldenv
insb
imul
lea
mov
gs
or
cmpsb
inc
cmp
adc
neg
and
call
addr16
pop
push
push
mov
jl
aas
iret
or
jg
adc
sti
xlat
cmp
loopne
mov
xlat
fwait
aaa
xchg
lock
je
dec
std
pushf
mov
int
or
cmpsl
stos
sub
popf
insl
fcos
mov
jae
sub
stc
jle
push
cmp
aaa
dec
mov
jp
cmpsl
inc
cwtl
nop
sub
or
mov
add
fcoml
fisttpll
cmp
mov
rcr
pop
leave
mov
pop
enter
repnz
test
repz
cmp
daa
xor
addr16
cltd
lods
pop
xor
xchg
push
jns
pop
ljmp
dec
jp
pushf
and
and
cmp
or
jnp
push
outsb
js
out
mov
push
lret
cmp
push
mov
dec
cmp
je
push
ljmp
pop
and
fcmovbe
mulb
shrl
cmp
cmp
repnz
in
loope
rcrl
mov
ret
lock
loopne
movsl
mov
xor
rcrl
sub
sar
cmp
xor
xchg
adc
mov
xchg
aam
and
xlat
inc
sub
dec
scas
adc
xchg
icebp
pop
sbb
repnz
nop
sarb
addr16
push
cmpsl
sub
xchg
jo
ja
add
jl
ret
inc
mov
xsha1
cmpsb
mov
scas
or
js
add
cmp
out
mov
xor
leave
test
sub
cmp
mov
and
pushf
pop
negl
push
repnz
inc
ja
scas
mov
jl
sbb
inc
adc
and
repz
data16
ja
inc
mov
and
je
or
mov
int3
mov
stos
pop
daa
inc
dec
mov
sti
adcb
cli
jle
cmpsl
jmp
push
mov
or
outsl
shr
dec
jecxz
sub
nop
jbe
push
pop
rolb
xor
test
xor
add
outsl
inc
xor
push
inc
mov
subl
rcr
insb
dec
fstps
insb
mov
add
pop
fsubrs
gs
add
sub
pop
add
inc
sub
insl
or
push
inc
xchg
push
cmc
mov
fbstp
fs
inc
das
push
pop
clc
mov
add
add
inc
jae
jns
push
add
rcl
loop
cmp
xor
std
mov
mov
shlb
mov
dec
push
push
push
xor
fldt
fcoms
xchg
mov
sarl
ret
jge
add
jae
scas
jo
push
xchg
mov
sub
call
jle
lds
jp
test
jbe
pop
repnz
pusha
jl
pop
les
fwait
dec
push
sbbb
cltd
mov
pop
mov
stos
jo
sub
mov
nop
call
push
pop
adc
loope
mov
stc
sarb
stc
jl
es
mov
jecxz
mov
cs
icebp
inc
dec
addr16
imul
fistpl
ljmp
adc
mov
orl
and
das
inc
repz
popf
lock
jns
and
mov
push
push
mov
xchg
jle
push
sbb
dec
sbb
dec
or
mov
in
pusha
mov
rorb
push
jns
push
into
mov
pop
mov
add
jg
cmp
or
push
insl
sbb
sar
mov
cmpsl
jmp
pop
fcomi
hlt
dec
imul
push
cmpsb
inc
lock
xchg
xor
in
fwait
and
test
adc
cmp
fdivrl
or
push
pop
test
fcoml
in
mov
les
lahf
dec
xchg
fsubl
mov
js
adc
add
mov
adc
or
ds
es
test
outsl
stc
out
inc
xor
sbb
outsl
loop
mov
push
out
ljmp
dec
pusha
stc
jbe
xchg
fistpll
push
sub
mov
cmp
or
push
lods
push
add
stos
xchg
sahf
imull
pop
in
addr16
lea
lret
aas
pop
movsl
cmp
cmp
hlt
mov
and
je
push
dec
mov
sbb
ja
ficomps
insb
lock
fisubrl
icebp
mov
jae
sbb
imul
call
inc
push
fwait
pop
dec
es
loopne
mov
push
add
daa
xchg
mov
jmp
sbb
cmp
adc
je
in
arpl
jb
inc
jmp
adc
rclb
push
cmp
mov
les
push
mov
lods
mov
sub
jl
mov
jns
pop
sub
test
mov
jae
xchg
cli
sbb
mov
and
push
adc
nop
adc
mov
int
mov
hlt
and
push
subl
or
add
xchg
adc
andl
fs
jmp
sbb
or
jle
xor
insl
enter
dec
xchg
cmp
cmp
sbb
sbb
cmp
insl
sbb
call
jle
mov
mov
loopne
test
ljmp
pop
repz
or
xchg
push
insl
xchg
cmpsl
jle
rorl
rcll
inc
sti
add
mov
adc
xchg
push
xchg
in
xor
orb
mov
fadd
ss
jecxz
jge
jnp
enter
cmp
cs
adc
fcmovnb
in
sub
add
shrb
cmpsl
loopne
rcrw
add
mov
xchg
add
cltd
and
pop
shlb
inc
ja
cmp
stos
or
aad
and
int
test
jmp
leave
sbb
push
stc
aas
jno
pop
dec
adc
and
les
push
pop
sbb
dec
test
mov
fs
add
movsl
hlt
imul
xor
ficoml
pusha
popa
dec
scas
insb
fidivl
hlt
add
mov
dec
loop
scas
les
outsl
sbb
lods
sub
add
pushf
add
lock
jne
xor
lahf
mov
mov
aad
pop
fwait
adc
push
hlt
push
test
sti
cmpsb
sbb
add
mov
mov
addr16
add
push
pop
ja
and
nop
mov
xor
inc
xchg
xorb
cmp
js
lods
mov
pop
pushf
pop
fs
or
in
and
mov
and
iret
jno
sbb
cmp
push
pusha
movsl
daa
shrb
inc
jno
into
xor
sbb
sbbl
popf
pop
push
sbb
add
adc
push
subb
ds
mov
es
sahf
jo
xor
mov
xor
sub
mov
jns
cmpsb
int
inc
inc
xchg
cmp
iret
cwtl
xchg
loope
popa
pop
cli
cli
push
mov
aaa
mov
lret
lock
or
sbbl
xchg
mov
stos
insl
and
sub
jnp
out
repnz
dec
pop
cmp
dec
inc
arpl
cwtl
push
inc
ja
pop
iret
mov
mov
mov
popa
je
sbbl
mov
ret
push
add
pusha
shrb
adc
ja
sbb
add
adc
push
xchg
lods
in
sahf
in
inc
test
addb
adc
add
sbb
sbbb
aad
or
pop
sbb
push
sarb
adc
xchg
fwait
xchg
push
or
xor
aam
fs
mov
inc
test
cs
ljmp
lcall
inc
sbb
cmc
cmpsl
insl
into
ds
cli
mov
inc
fs
pop
out
orb
push
imul
or
dec
pop
js
in
xchg
pop
sbb
sbb
insb
leave
mov
mov
or
les
lods
stos
pusha
aad
pop
aad
out
mov
ret
xchg
rolb
mov
test
jne
hlt
iret
xor
out
xor
add
sub
cmp
cwtl
or
bound
xor
mov
jl
aam
xor
pushf
dec
jbe
loop
aaa
je
loope
out
outsb
dec
test
loope
rep
fldl
js
adc
fdivp
mov
decl
lods
sbb
jmp
push
ret
push
test
cld
adc
mulb
mov
in
aaa
ljmp
mov
push
xor
cmp
cmp
mov
icebp
sub
push
inc
or
fldenv
mov
or
jecxz
movb
adc
xlat
fnstsw
js,pt
notb
movsb
outsl
arpl
mov
iret
test
call
fiaddl
add
jecxz
pop
jno
and
lods
js
mov
and
or
mov
pop
jmp
fcmovnb
lock
or
nop
add
das
aam
fidivs
cmpsb
cs
xchg
mov
cmp
enter
mov
inc
sbb
aas
jmp
cmc
fdiv
pop
lea
dec
xchg
sbb
mov
adc
bound
jmp
mov
js
jmp
cmp
js
add
ljmp
ljmp
adc
repz
mov
mov
push
or
filds
cmp
push
cld
push
jbe
adc
lock
insb
subl
and
fmull
mov
pop
cli
roll
ret
outsb
or
ljmp
xor
add
out
add
lock
aaa
movsl
into
adcb
and
lock
fs
pop
loop
outsl
lret
cmp
aas
lahf
sbb
mov
pop
mov
arpl
dec
orb
push
mov
pop
ja
fistpll
outsb
repz
imul
stos
dec
cmp
xchg
aad
mov
or
fimuls
incb
ss
in
pop
pop
lds
call
push
sbb
inc
dec
enter
icebp
cvtdq2ps
pushf
cmp
push
inc
jo
mov
jo
stos
xchg
js
and
scas
pop
loopne
adc
cmpsl
and
out
mov
jle
jnp
jl
pop
jae
outsl
xor
jae
loope
loopne
fs
sbb
jo
xchg
das
push
es
sub
hlt
mov
mov
in
ljmp
sti
es
cmc
sahf
icebp
mov
in
mov
sub
add
ja
ljmp
mov
dec
pop
ja
xchg
notl
mov
jp
addr16
cmp
lds
adc
xor
leave
fnsave
jl
out
enter
push
jp
mov
push
pop
dec
rcl
xor
es
sahf
or
xchg
xor
imul
lahf
push
xchg
outsl
sub
xchg
mov
mov
pop
cmpsb
pop
push
xor
sub
xchg
mov
subb
insl
and
xor
mov
add
jp
push
je
xlat
pushf
in
bound
je
dec
mov
xor
jl
inc
jp
sahf
mov
pop
dec
mov
clc
mov
icebp
jb
mov
pop
lret
sub
test
dec
out
lods
scas
or
or
inc
cmp
fmuls
scas
fnstsw
gs
and
aam
pop
mov
pusha
daa
xchg
dec
pusha
jns
pop
mov
stos
pop
jbe
cmp
in
stos
cmp
xchg
pop
sbb
mov
nop
in
fidivrl
out
xchg
dec
lock
leave
fmuls
mov
inc
pop
cmpsb
sbb
mov
movsl
mov
pop
rol
inc
or
int
hlt
add
xor
insb
mov
mov
hlt
push
loop
je
jno
add
inc
out
pushf
push
cmp
in
jl
faddl
out
js
mov
sub
push
das
mov
cmpsb
dec
aad
cmc
arpl
jnp
sbb
mov
pop
les
fxch
nop
pushf
les
cwtl
xchg
mov
push
in
fs
js
cld
mov
jns
das
xchg
jp
pop
pop
popa
jle
cwtl
dec
loopne
mov
into
fs
ret
scas
lret
push
lahf
xchg
lods
mov
push
ljmp
inc
test
and
adc
addb
shlb
in
cmpsb
inc
push
xor
mov
sub
sbb
sbbb
push
mov
into
popa
push
mov
aaa
xchg
test
rcrb
or
mov
les
push
jno
cmp
add
pop
movsl
inc
pop
mov
int
mov
push
jp
mov
add
sbb
lret
loop
lods
mov
dec
inc
arpl
mov
hlt
or
icebp
pusha
xchg
push
out
xor
jbe
enter
aad
insl
enter
push
mov
cmp
clc
cmpsl
lods
fnstenv
inc
dec
add
gs
rclb
xchg
pop
and
cs
imul
jns
je
scas
pop
xor
push
lock
jl
or
push
dec
sub
push
inc
stc
fsubl
lcall
jne
add
sub
add
mov
cmpsb
enter
mov
ficompl
push
sbb
pop
les
nop
incb
cli
dec
ss
int
and
mov
push
les
cmpsb
xchg
mov
mov
add
jg
jns
movl
dec
mov
leave
cmpsl
dec
cmc
xchg
push
inc
fwait
and
shll
es
or
cmp
std
mov
add
adc
and
and
jp
stos
pop
dec
pop
xchg
mov
cmp
in
dec
cmp
mov
inc
mov
mov
and
aad
jbe
jo
js
lds
mov
fnstenv
sub
cs
lea
mov
sahf
mov
test
sar
ret
mov
add
add
stc
cmp
loopne
mov
addb
out
mov
and
aad
adc
std
rorb
gs
push
push
cmpsb
sub
push
mov
pop
pop
mov
push
xor
popf
test
enter
js
je
pop
pusha
push
cmp
mov
or
std
ret
pop
push
fwait
xchg
mov
xlat
adc
lahf
repnz
pop
mov
iret
or
fistpll
nop
push
or
cmp
lds
jge
add
or
pushl
inc
mov
pop
es
adc
rcl
cmp
inc
sbb
rcrb
and
jecxz
stc
push
or
leave
add
int
mov
fldcw
sub
addl
xchg
les
pusha
or
fdivl
or
xlat
pop
int3
jne
in
cmp
mov
xor
mov
mov
shrl
les
jo
and
arpl
std
xor
daa
push
gs
mov
icebp
iret
fildl
dec
push
push
sub
dec
jnp
mov
xchg
dec
sub
test
add
cltd
push
push
js
add
jecxz
insl
mov
push
mov
xor
inc
pop
imul
cltd
lods
mov
inc
enter
adc
jne
pop
fidivs
popa
sti
adc
cmpsl
mov
inc
push
shrl
mov
sbb
bnd
adc
rsqrtps
lds
fwait
xchg
ret
dec
push
mov
rcr
or
inc
cltd
push
test
stc
shll
aas
aad
lahf
xlat
shlb
push
inc
mov
adcb
notl
dec
in
rolb
mov
addl
inc
xor
movsl
aad
fisubl
aad
or
mov
mov
xor
ficompl
repz
pusha
insl
pushf
cmp
fisttps
push
sbbb
dec
xchg
add
adc
push
pusha
pop
aas
jge
mov
cmp
enter
push
jge
ret
ss
xor
inc
add
in
sarb
stc
mov
imul
mov
push
sub
repnz
aas
mov
mov
mov
adc
xchg
clc
cmp
shrb
or
cmpsl
dec
fndisi(8087
xor
jp
sti
and
xchg
push
fidivl
mov
gs
sahf
in
mov
rorl
adc
and
enter
repz
adc
mov
mov
into
rcll
xchg
dec
and
pop
fisubrs
push
pop
clc
jmp
mov
test
jb
ss
xlat
push
dec
xlat
dec
adc
push
jne
in
mov
mov
inc
in
sbb
inc
ss
dec
adc
mov
lcall
into
pop
imul
mov
sub
into
sub
fldenv
jo
push
push
movsb
cmp
xor
push
into
dec
sbb
in
mov
push
cltd
test
mov
ljmp
pop
shlb
push
push
test
mov
cmpsb
xor
cmp
cmp
push
jae
push
clc
mov
and
mov
stos
orb
repz
xlat
mov
sbb
test
rorl
pop
push
jne
mov
fneni(8087
lods
xor
call
pop
inc
dec
filds
dec
jp
pop
jb
imul
and
xor
shlb
sub
or
mov
outsb
mov
pop
or
sub
mov
jne
pop
mov
imul
xor
or
sar
add
shlb
pusha
lret
dec
outsl
mov
add
jo
test
enter
mov
jne
adc
pop
ds
dec
je
cmpb
stos
xor
pushf
shl
scas
les
inc
repz
mov
sbb
sbb
mov
jge
pop
cmpsb
test
cmp
bound
cwtl
adc
xor
rolb
int
repz
dec
fmuls
sahf
mov
mov
dec
pop
add
lods
in
fistps
jno
dec
mov
lods
push
enter
jne
aas
pop
jp
jmp
mov
popa
in
adc
outsl
ds
pop
xor
jge
aam
or
jne
sub
mov
lock
sub
imul
shr
mov
and
push
addr16
cmp
cmc
pushf
sbb
fdivrp
sbb
aam
aam
xchg
mov
outsb
aam
test
ljmp
cmc
dec
cmp
outsl
xor
sbb
cli
stc
add
pop
test
fmuls
mov
jo
push
ss
sbb
cmp
push
push
shrb
mov
pusha
dec
jbe
push
shll
xlat
mov
xchg
push
std
jno
dec
loopne
js
dec
xor
outsb
int
sub
mov
rcr
add
mov
push
aam
jno
mov
or
push
sub
push
add
mov
push
adc
sbb
lahf
pop
xchg
jnp
cmpb
mov
inc
cmp
lret
mov
cmpsl
sub
icebp
and
addb
scas
sbbb
jle
in
in
test
out
adc
dec
es
ljmp
mov
into
das
mov
scas
cmc
push
xchg
das
test
imul
pop
push
mov
repnz
inc
pop
test
int3
inc
mov
or
or
mov
or
jge
cmpsl
out
test
pop
add
pushf
sbb
data16
cmp
mov
and
test
or
xor
sbb
inc
pop
xchg
cs
and
faddl
xchg
lods
inc
inc
imul
lods
push
lcall
xchg
cmp
push
sub
sbb
es
fs
lods
push
jnp
arpl
jmp
jae
dec
xor
cmp
xchg
test
pop
mov
mov
sub
pop
std
and
movsb
and
xchg
dec
mov
cmp
in
mov
lea
push
dec
loop
stos
dec
lea
out
xchg
cld
dec
sub
inc
xchg
jne
mov
xor
lock
movsb
out
sub
pop
cmpsb
push
push
adc
fstl
out
int
dec
or
ljmp
and
push
outsl
rorb
jno
add
mov
shl
fwait
mov
jo
xor
add
xchg
ds
fxam
fstl
js
shll
mov
insb
xchg
xchg
dec
adc
xchg
add
test
xor
mov
and
adc
movsl
aaa
mov
decl
ljmp
push
fldcw
ret
dec
mov
sub
push
xorl
dec
iret
stc
daa
adc
mov
dec
xor
aas
xchg
pop
push
jb
fsubrl
in
cmp
popa
xor
xchg
iret
xchg
lods
mov
jno
loop
adc
into
push
in
pop
aaa
cmp
and
shlb
mov
inc
out
fnstsw
pop
add
jmp
cmp
xchg
xor
scas
stc
push
js
push
xchg
push
dec
pop
dec
aam
inc
sub
dec
pop
mov
dec
lret
mov
call
lret
jno
jae
push
testb
adc
les
repnz
sub
cmp
or
mov
jl
and
jne
hlt
add
out
jmp
cmp
mov
loopw
mov
lcall
adc
xchg
pop
fmuls
jne
sbb
insl
imull
stos
jns
jno
xchg
std
test
lods
stc
arpl
jbe
xchg
xor
fnstcw
xor
bound
iret
sbb
inc
lds
mov
or
movb
jmp
call
pop
fwait
jb
imul
mov
push
pop
test
outsl
pop
fwait
pop
ds
stos
sub
addb
fs
fs
test
mov
pop
iret
mov
cltd
sbb
pusha
ss
push
in
push
pop
sahf
mov
sub
mov
mov
jnp
ds
mov
mov
js
push
shl
adc
xchg
fmul
xor
push
sub
dec
jmp
stos
popa
push
push
or
ffreep
out
stos
mov
xor
pop
cltd
les
adc
sahf
jle
imul
leave
and
pop
call
mov
mov
jne
jae
push
mov
push
insb
hlt
dec
fwait
mov
add
int3
sub
mov
cli
mov
andb
jp
lods
movsl
jmp
lret
mov
sahf
lahf
lret
xor
or
dec
loope
jns
test
xor
imul
cmp
mov
push
or
scas
shlb
fiaddl
in
in
jbe
mov
lds
push
push
fcompl
add
push
push
es
cmp
pop
lea
insb
lahf
ljmp
scas
hlt
es
jbe
or
sbb
scas
outsb
add
sarl
or
loopne
and
push
das
lcall
and
cmp
cmp
adc
cmp
xor
mov
jmp
sub
lcall
fisubrl
ret
sub
in
loop
push
ljmp
in
in
rolb
cli
fs
ja
popa
aam
popa
push
jp
jge
cmp
jge
cs
pop
and
xor
out
cs
or
out
dec
cmp
inc
or
xchg
daa
loopne
sub
cmc
mov
outsl
pop
aam
mov
cmc
loopne
sbb
in
xchg
iret
lods
or
fsubl
cmpsl
adc
daa
mov
push
or
subl
sub
sbb
dec
arpl
ret
mov
jnp
cmp
push
outsb
jg
jbe
cmp
cmp
sub
les
add
nop
in
or
add
cmc
leave
push
push
pop
pop
je
jge
lds
dec
rorl
cmp
out
stos
jbe
cwtl
adc
int
es
sub
repz
push
fcompl
iret
pop
jnp
inc
add
and
sti
test
add
incb
dec
xchg
insb
dec
add
popf
stos
fiaddl
fisttps
pushf
fwait
mov
and
sub
jne
imul
and
test
bsf
mov
jo
xchg
test
fxtract
insb
cmp
push
sbb
sub
testl
test
dec
mov
int
addl
mov
pop
xor
sub
pusha
iret
lcall
into
imul
ret
mov
cmp
das
fbld
mov
inc
xor
jge
bnd
sarl
inc
push
std
push
cmpsb
push
divl
sbb
mov
lret
nop
and
xor
sub
aam
xchg
adc
jbe
xor
push
in
xchg
push
pop
ljmp
mov
mov
stc
mov
or
xor
cmp
es
pop
call
add
mov
sbb
das
stc
adc
popl
mov
push
rorb
push
lcall
in
or
adc
fcmovnbe
sbb
xor
ds
push
movntps
ja
test
out
in
js
fwait
loope
dec
push
ja
cmp
test
stos
sbb
lret
mov
add
std
xchg
push
xor
aaa
imul
or
adc
dec
dec
arpl
dec
mov
xor
or
pop
sub
pop
loop
cmpl
or
cwtl
loopne
push
mov
jg
fdivr
mov
mov
mulb
mov
sbb
fcomps
gs
out
fs
and
mov
addr16
or
pop
int3
lret
xchg
sbb
sub
mov
dec
shl
testl
stos
adc
push
pushf
lahf
push
inc
xchg
mov
pop
and
push
push
in
movsb
es
jbe
mov
rolb
iret
lret
repnz
push
pop
lods
lods
adc
push
xchg
mov
cmc
or
mov
into
pop
repnz
jg
cmp
mov
adc
cmp
and
out
sbb
mov
loop
push
xchg
sbb
es
sub
bound
int3
mov
pushf
add
loopne
mov
stos
push
inc
add
xor
mov
test
add
hlt
mov
xchg
cmp
gs
lods
in
inc
cmp
mov
adcb
jecxz
repnz
repnz
xchg
sub
ret
icebp
idivl
fcmovnb
int
cld
imulb
fistps
fstpl
iret
sbb
jmp
add
sbb
and
push
out
mov
push
push
pop
push
cmpsb
adc
data16
imulb
push
enter
cmp
dec
jl
push
pop
fdivrl
mov
xchg
fwait
pop
es
pop
js
add
push
fwait
cmp
lret
stos
mov
cmp
ljmp
sbb
jne
mov
and
jnp
add
and
mov
lock
mov
adc
les
test
clc
xchg
sbb
jno
js
out
jle
jnp
movsb
pop
mov
popa
cld
dec
scas
pushf
xor
loope
enter
or
push
lcall
jbe
mov
addr16
lea
sub
repz
dec
mov
imul
jle
ljmp
sub
out
push
test
std
sub
pop
sbb
push
in
xor
incb
xor
je
mov
and
mov
lock
aas
xor
adc
in
insl
movsl
data16
inc
xorb
pushf
jecxz
adc
sub
mov
pop
jb
inc
inc
mov
inc
mov
fwait
sub
sbb
cmp
pop
xchg
sub
inc
cmc
fmulp
adcl
repnz
mov
push
inc
and
fimull
loope
push
out
mov
fcomip
imul
sbb
insb
stos
andl
stc
dec
das
xchg
push
push
orb
lret
lcall
sbb
mov
rcrb
bound
ja
xor
mov
cmpsl
subl
fdivp
fstpl
cmp
sub
cmpsb
pop
fwait
mov
loop
out
lods
xchg
xor
sbb
cmp
mov
push
in
jnp
ret
cmp
jge
aas
xor
mov
push
ret
test
in
inc
movsb
mov
stos
xchg
xchg
jno
repnz
and
add
pop
mov
fcmovnb
pushf
mov
mov
test
xchg
dec
inc
repnz
out
dec
call
xchg
into
push
jg
andb
xlat
hlt
mov
mov
jecxz
into
shrb
pusha
sub
and
xor
sbb
push
inc
xchg
aam
add
out
adc
sub
jle
add
sbb
addr16
cmp
in
out
std
nop
roll
push
jge
sub
xchg
mov
pusha
xchg
xchg
pop
shll
clc
mov
stos
lret
mov
jmpw
mov
sbb
in
jbe
iret
xor
jg
mov
in
xchg
jbe
into
sub
loope
push
sbb
push
jecxz
jmp
mov
jnp
iret
mov
xchg
mov
out
das
hlt
pop
and
pusha
sbb
popf
mov
test
mov
push
lcall
clc
sub
insb
inc
test
sub
xlat
jbe
in
ret
stos
pop
xlat
out
into
mov
mov
div
and
and
daa
cmp
mov
mov
inc
jae
ljmp
or
dec
or
xchg
pop
arpl
push
mov
inc
sti
mov
xor
jns
xlat
cmpsb
mov
xchg
lcall
push
fisttpll
cs
push
jb
std
push
arpl
add
sbb
xchg
fildll
add
jae
dec
clc
idivb
stc
data16
xor
ds
mov
pop
push
jb
mov
xchg
sbb
mov
hlt
jns,pn
ljmp
jp
add
pop
ljmp
pop
ret
push
adc
mov
test
mov
xchg
add
lods
out
xor
add
mov
mov
jbe
jb
out
dec
rolb
mov
push
cmp
cmc
lods
ror
xor
sub
mov
insb
cmc
push
sbb
adc
out
and
add
je
adc
lcall
or
xchg
call
in
frstor
push
imul
lret
les
jg
add
inc
inc
adc
lods
enter
jno
imul
jae
cmp
mov
cmpsb
push
int3
xchg
inc
icebp
fisubrl
pushf
mov
xchg
ret
and
nop
mov
xchg
xor
fbstp
pop
jl
enter
pop
lods
rorb
or
push
lock
sbb
push
xlat
clc
pop
loope
add
cmpsl
in
aad
out
cwtl
imul
mov
outsb
ret
mov
out
push
inc
outsl
fmul
cli
lea
jne
sub
enter
sbb
lods
push
mov
push
xor
push
jb
ret
dec
stos
bnd
jg
adc
dec
mov
xor
add
and
xor
fisubs
xor
iret
addr16
fmull
in
dec
adc
xchg
test
inc
pop
sbb
cmp
pop
or
mov
mov
mov
test
sbb
add
or
jecxz
scas
lods
jno
imul
mov
outsb
jle
jge
les
arpl
xchg
mov
std
inc
repz
fdivrp
in
sub
fmul
mov
ds
jns
lods
lods
shrl
inc
jnp
call
sub
stc
pop
ljmp
mov
lcall
mov
mov
push
push
pop
outsb
addr16
add
sub
mov
movsb
repz
sbb
fbstp
xor
jnp
imul
arpl
pop
sahf
pop
popf
jmp
inc
cltd
dec
hlt
mov
mov
mov
and
push
pusha
or
push
loopne
aad
sub
sub
push
pop
ds
cltd
leave
cmp
int
or
inc
jne
out
in
push
insb
jle
es
hlt
add
xchg
sbb
and
xlat
pop
jmp
pop
adc
shlb
fucom
sub
add
push
xchg
or
jmp
stos
and
pop
push
mov
lahf
pop
hlt
lds
loopne,pn
and
aaa
jmp
int
mov
cltd
mov
addr16
fcoms
in
push
adc
mov
cmp
add
mov
fs
pop
ss
das
inc
andl
mov
add
loope
fwait
mov
jge
and
mov
adcb
adc
sbb
scas
jmp
inc
aaa
jne
xor
stos
cmpsb
lret
leave
mov
leave
cmp
out
loopne
mov
add
mov
ret
shll
lods
test
stc
cwtl
jno
sbb
das
movsb
stos
pop
ljmp
ret
ret
movsl
ret
cmp
sub
jns
sti
and
shll
ret
mov
pop
pop
andps
fnstenv
inc
inc
cmp
or
xchg
jmp
inc
or
or
imul
bound
add
dec
mov
lahf
jmp
fimuls
pusha
sarl
lds
les
out
xchg
jnp
adc
and
insb
adc
adc
icebp
rclb
push
rclb
ffreep
aaa
jl
adc
xor
shr
mov
ret
xchg
fs
push
into
in
pushl
aam
jb
test
xor
sub
push
cld
xchg
mov
inc
rclb
orl
adc
test
sbb
out
hlt
sub
test
sti
aas
sub
xchg
jge
xchg
frstor
xchg
or
fwait
or
jns
and
and
and
ss
mov
fldt
loopne
repnz
add
or
xchg
mov
and
daa
mov
cmp
mov
hlt
jmp
dec
sbb
and
pop
jbe
push
es
jo
mov
test
fs
mov
jo
pop
dec
mov
mov
cltd
pop
mov
imul
sbb
lds
mov
push
popa
mov
push
jae
call
sub
out
mov
jno
mov
out
xchg
movsb
dec
lcall
out
imul
ret
lcall
push
es
sbb
cmp
popa
mov
adc
subl
cli
sbb
add
das
ja
in
mov
pop
rclb
mov
mov
repz
mov
mov
iret
cmp
push
daa
add
jge
loopne
pop
jmp
ds
stos
fwait
mov
int3
test
das
add
xor
out
xlat
test
cli
scas
imul
fwait
mov
daa
insb
pop
or
hlt
jmp
ds
fs
andb
fnstenv
lods
xchg
cmp
stos
sbb
mov
pop
push
push
xchg
in
lds
jno
inc
mov
cmpsl
call
lret
shlb
jb
add
and
cwtl
or
aas
daa
inc
xchg
stos
fnstsw
into
int
repz
add
lret
jmp
in
cmp
aaa
jmp
mov
mov
mov
js
or
jge
mov
xor
dec
adc
push
adc
cmp
mov
enter
sbb
into
xor
jne
mov
shll
add
into
jge
adc
movsl
aaa
pushf
mov
dec
movsb
lds
push
mov
movsb
fldenv
mov
scas
les
sub
mov
std
iret
inc
cld
cmp
add
dec
fucomi
sub
call
shlb
lock
sahf
fisubl
movups
xor
fidivs
sub
xor
in
xor
push
jl
jl
scas
test
hlt
sub
mov
ss
fstps
or
xchg
loope
cld
les
cmpb
push
push
mov
and
fdivrs
fnstsw
push
cli
xor
daa
shlb
push
movsb
xchg
add
enter
inc
add
fs
inc
cmp
sub
stos
scas
push
ljmp
xor
jmp
shlb
pop
nopl
out
mov
inc
fs
lods
psrlq
mov
inc
adc
cmp
int3
cmp
fs
jne
movsb
xchg
add
inc
mov
leave
jnp
test
add
mov
sti
daa
cld
xor
inc
sbb
pop
insb
int3
lret
mov
ljmp
fs
divb
data16
bound
aad
enter
and
mov
aam
in
mov
inc
sahf
jnp
out
jge
jmp
mov
jns
jle
jns
and
out
ret
sub
push
sbb
dec
mov
stc
js
stos
fxch
or
mov
test
sbbb
repz
or
mov
pop
mov
pop
dec
inc
jne
int
fisubrl
xchg
add
rorl
push
nop
adc
jge
enter
fs
xor
add
pop
mov
ss
xchg
jns
iret
and
add
dec
or
xchg
jae
dec
pop
and
ljmp
dec
push
inc
cmpsl
inc
subb
iret
xor
mov
dec
fwait
mov
sbb
ret
inc
xchg
add
or
push
xchg
jl
loopne
mov
out
inc
out
dec
mov
into
lahf
cmpsl
sbb
adc
mov
add
cmc
add
pop
sub
les
add
push
and
lcall
std
sbb
cmp
jb
ds
addr16
ret
scas
leave
mov
mov
or
xchg
jae
or
lahf
lahf
ret
cmp
out
mov
add
imul
pop
xchg
adc
jecxz
jmp
pusha
mov
jns
cwtl
arpl
dec
loope
ret
cmp
push
jns
jne
lret
xchg
jae
cwtl
xor
mov
sbb
add
in
stc
push
xchg
pop
in
sub
cmp
adc
fs
dec
mov
push
adc
test
push
xchg
jns
out
int3
mov
shl
mov
sub
sarl
jbe
xor
push
mov
ja
mov
xor
push
mov
cs
xchg
pop
enter
cmp
rcll
mov
dec
mull
jns
adc
in
and
in
sub
pop
add
in
frstor
xchg
sbb
mov
add
adc
shrl
sub
xor
js
jae
cmpsb
sbb
add
les
pop
xchg
insb
fisttpll
cs
adc
in
jbe
cmp
ss
dec
loopne
xlat
and
mov
subb
mov
dec
pop
pop
cmp
ja
or
in
das
loop
pop
cmpsl
icebp
hlt
jg
inc
fldpi
cmpsl
scas
and
or
test
int
imul
repz
sbb
adc
cmp
cmp
dec
lret
xchg
and
mov
push
adc
nop
enter
or
nop
das
addr16
fadds
clc
and
xchg
mov
cmp
sbb
out
sub
cmp
ljmp
loope,pt
add
sub
push
inc
cmpsl
sub
and
jb
les
ror
pop
rclb
lds
int
jp
rolb
lods
mov
test
push
jbe,pn
adc
mov
sbb
jge
push
dec
add
adc
call
nop
mov
outsb
pop
pop
cli
add
sbb
pushf
out
popf
fnstcw
push
enter
cltd
push
loope
add
sbb
fnstenv
roll
cmc
or
mov
adc
jp
or
sarl
inc
fists
mov
and
sbb
add
dec
sbb
lods
inc
iret
inc
sahf
sahf
in
lea
adc
adc
mov
into
insl
rcll
mov
jmp
inc
cmp
stc
xor
mov
jecxz
cwtl
cmp
pop
ret
push
cmp
sub
shrb
fstpl
or
loopne
cltd
ret
fdivs
ja
jg
pop
push
insb
dec
push
out
ret
push
or
stc
dec
lret
in
adc
sub
insb
xchg
test
popa
lods
xor
in
jl
ss
rcrb
mov
and
sub
lods
xchg
test
cmpsl
mov
fadds
outsb
add
mov
mov
adc
repz
and
cmc
imul
mov
cmc
cmpsb
xchg
out
lods
or
std
xchg
pop
lret
or
test
or
fcomip
cmc
xchg
jo
mov
mov
jecxz
filds
jno
std
jb
imul
cmp
add
retw
or
or
cld
dec
sub
mov
dec
rcll
out
repnz
int3
dec
or
xor
std
outsl
pop
push
loope
push
jne
sub
push
or
fdivs
ret
push
lret
sub
insb
loop
fs
mov
aaa
mov
sbb
mov
mov
pop
dec
xchg
aam
xchg
frstor
sub
cmp
ja
pop
jae
lcall
stos
das
lods
adc
mov
fstps
lret
dec
push
or
iret
push
mov
mov
jle
or
push
mov
inc
xchg
pop
mov
clc
or
mov
cmp
rcll
repz
jl
mov
in
sbb
adc
pop
push
jmp
xchg
xor
jle
lret
lret
mov
or
ret
adc
lock
mov
add
sbb
aam
adc
adc
sbb
inc
loop
mov
ss
cmpsl
dec
mov
in
shll
dec
out
mov
add
repnz
or
adc
lahf
mov
mov
stc
in
dec
stos
mov
pop
ret
in
sahf
out
aaa
and
dec
inc
cs
test
push
mov
jmp
clc
sbb
mov
test
sbb
or
stos
dec
adc
int
mov
dec
icebp
sbbl
jno
mov
mov
xor
imulb
out
cmpsb
lods
fsubrl
je
movsb
add
jb
cmpsb
jle
sub
pusha
rorl
bnd
mov
pop
mov
bound
pushl
fbld
sahf
jno
test
sbb
cmp
jb
lret
enter
jl
inc
mov
in
stc
xchg
xchg
sbb
jg
pop
pop
sub
pop
push
or
and
loope
mov
and
imul
leave
mov
lods
or
mov
lods
fdecstp
icebp
mov
pop
aas
mov
pop
jae
pop
inc
pop
negb
sub
mov
lret
fisttpl
in
bnd
call
es
and
addb
out
inc
add
daa
jl
mov
push
ret
mov
sub
push
pop
imul
js
lahf
mov
cmp
insb
movsb
negl
cmpsl
sub
xor
pop
in
aaa
into
pusha
aad
jge
mov
xchg
push
or
or
lods
int3
sub
mov
imul
fdivs
popf
jbe
pop
fdivl
inc
pop
xchg
mov
xchg
inc
lcall
mov
outsb
scas
cltd
mov
stos
adc
ja
sbb
inc
pop
ficoms
aaa
movsl
rorl
xchg
shrl
xchg
test
ret
inc
repz
pop
iret
aaa
rol
mov
inc
movsb
add
or
push
lods
pop
mov
push
jb
inc
mov
pop
push
dec
mov
les
mov
mov
dec
inc
push
push
adc
fidivl
fidivrl
dec
jle
movsb
fsubrs
arpl
call
mov
push
add
push
mov
push
shll
xchg
push
in
sbb
pop
jge
cmp
imul
push
xchg
mov
xchg
xor
negb
das
aaa
aad
pop
loopne
in
xor
xor
jbe
loop
sbb
cmp
popf
dec
outsl
sub
push
adc
jne
add
lret
inc
mov
dec
or
call
popa
mov
sahf
test
jno
inc
jge
ret
enter
clc
ja
mov
leave
mov
xchg
dec
and
cld
jle
test
mov
jbe
iret
out
mov
rorl
in
xchg
fistpll
shrb
mov
jmp
nop
cli
lcall
xchg
add
mov
jecxz
jae
lods
mov
push
mov
xchg
rcrb
insb
add
push
lea
jl
and
push
pop
add
rclb
jo
pop
data16
push
rcl
and
fisttpll
mov
arpl
sub
mov
mov
cltd
dec
ss
cmp
lret
pop
jae
and
push
mov
mov
sub
mov
into
into
mov
inc
mov
push
fwait
popf
jl
fnsave
out
test
xlat
mov
adc
sti
test
mov
xor
scas
pushf
loope
push
in
test
sub
jmp
dec
push
lds
pop
clc
xor
mov
imul
lds
jecxz
push
jmp
rcrb
sbb
inc
xor
cli
adcb
fsub
mov
adc
scas
jg
adc
or
dec
dec
adcl
and
jno
push
cli
cmp
inc
int
jnp
pop
repz
clc
data16
mov
stos
loopne
sub
inc
mov
in
add
ret
rcl
inc
les
adc
xchg
mov
xchg
or
pusha
fwait
jae
mov
arpl
push
fninit
dec
sbb
scas
bound
test
sbb
pop
cmp
dec
movsb
std
roll
cmp
pushf
sbb
push
push
popl
or
xchg
cwtl
lcall
cmp
stc
cmp
add
arpl
ljmp
jnp
iret
das
inc
pop
popf
mov
int3
sahf
lret
sbb
mov
cli
popa
testl
fsubr
jg
or
fs
loope
mov
jne
xchg
test
pusha
mov
mov
cltd
or
or
add
fldenv
push
sub
sbb
add
sarb
mov
cmp
sahf
addb
rcll
dec
fsubrp
mov
mov
idivl
jge
cmp
test
in
mov
arpl
lret
test
jb
stos
cmp
dec
xchg
addr16
mov
push
fiadds
loope
cmp
ds
ret
sub
sub
in
cwtl
shll
fwait
int
mov
lods
lahf
xchg
cmc
dec
ret
cmpsb
adc
and
xchg
jg
lcall
sahf
imul
lods
jp
shlb
xor
jb
ljmp
or
mov
mov
outsl
pop
xchg
mov
mov
push
jnp
lret
and
test
iret
arpl
sti
inc
push
cmp
or
lea
out
adcl
stos
adc
cmp
lret
lea
or
or
mov
imul
mov
imulb
mov
dec
and
jg
mov
ret
stos
dec
add
mov
fwait
mov
es
mov
xchg
dec
cmc
aam
pop
lods
dec
push
int
psllq
dec
jmp
push
xchg
and
xorl
mov
sbb
arpl
dec
dec
into
jb
sub
pop
dec
cs
sub
cmc
in
push
inc
sbb
push
and
sbb
or
movsl
icebp
test
mov
mov
dec
mov
xchg
fsubrs
sahf
cmpsl
jmp
lcall
leave
mov
sbb
jmp
dec
sub
lcall
stc
stc
aam
loopne
rol
dec
out
inc
inc
adc
dec
fidivl
repnz
lret
adc
lea
and
push
lahf
fucomp
lods
mov
dec
sbb
pusha
lret
shrb
pop
rorl
repz
sbb
push
js
xor
aas
jb
cmp
cmc
in
and
dec
shll
pop
mov
clc
insl
push
fcomp
or
mov
xchg
sub
sbb
pop
lock
testl
dec
mov
jl
jb
mov
cmp
jmp
mov
shll
add
mov
mov
in
popa
negb
xor
cmpsb
xlat
les
push
aas
jns
adc
cwtl
imul
subl
mov
pop
xchg
mull
mov
pop
popa
pop
push
test
pop
add
jp
push
adc
arpl
loope
add
add
shlb
push
sub
sahf
pushf
mov
sbb
mov
sti
inc
cmpsb
inc
mov
xchg
lret
adc
inc
add
sbb
icebp
fucomp
cmp
dec
aad
mov
push
inc
iret
repz
cltd
inc
imul
cmp
cmpl
cmc
movsb
orl
fs
mov
or
push
rolb
xchg
into
cld
daa
cmp
xor
outsl
jae
pop
fsubrs
lcall
add
std
adc
push
das
mov
cs
mov
adc
cmp
popa
loopne
pop
or
nop
and
dec
push
inc
or
xor
jae
or
in
xchg
mov
jbe
jl
testb
inc
lods
lds
xor
or
cmp
out
pop
push
shll
aaa
push
sbb
cmpsl
out
hlt
xor
push
test
stos
pop
cmp
cmp
jnp
sarl
sar
sahf
outsl
mov
ljmp
dec
leave
shrl
dec
cli
or
inc
sub
mov
psrld
repnz
pop
icebp
adc
pop
jns
and
inc
aas
jle
loop
jbe
lds
jle
addb
insb
rcll
mov
xchg
mov
jns
icebp
outsl
out
nop
pusha
pop
push
ror
push
adc
pusha
push
in
aaa
pop
push
fsubrl
aaa
xor
cmp
hlt
jl
das
sti
mov
mov
std
xor
cmp
adc
nop
push
and
sbb
xchg
stos
mov
mov
sbb
out
aaa
int3
mov
mov
push
std
orb
nop
int3
inc
mov
mov
lret
ljmp
xor
and
rcrb
scas
repnz
sti
mov
cmp
xor
xchg
xchg
call
jecxz
mov
mov
outsb
hlt
xchg
cmp
push
rcl
mov
dec
fwait
xor
inc
xchg
pop
adc
adc
mov
mov
sahf
ret
insl
jle
sbb
in
adc
es
loop
test
mov
xchg
jne
bound
xchg
xchg
inc
add
sub
dec
jecxz
push
into
push
ss
cmp
mov
xchg
adc
dec
push
loop
call
pop
or
mov
mov
imul
fdivrs
test
mov
stos
mov
out
or
stos
xchg
lea
es
push
cmpb
sahf
cld
or
xlat
and
dec
sti
lcall
xchg
testb
orb
cltd
nop
arpl
lds
adc
fwait
mov
sub
addr16
push
sub
sub
mov
into
mov
inc
icebp
jp
adc
aaa
cmp
daa
xchg
cmp
imulb
movb
inc
lods
cmpsl
mov
cmp
mov
iret
pop
icebp
je
mov
pushf
in
inc
test
dec
push
inc
push
sbb
rclb
sbb
inc
mov
outsb
add
fistps
push
fmull
jne
cwtl
push
ret
push
es
jecxz
sbb
push
add
sbb
xlat
subb
test
mov
or
mov
lea
adc
es
dec
rorb
or
daa
pop
aas
mov
ds
or
popa
jae
lods
cmc
push
and
shrl
jl
adc
insl
pop
das
and
nop
inc
dec
mov
enter
inc
xor
jmp
pushl
jle
cmc
sub
shr
mov
inc
sub
add
push
xor
stos
outsb
and
aas
mov
cmpl
inc
sbb
std
xchg
jp
sub
jnp
lock
jno
or
insb
pop
test
pop
popa
inc
jno
subl
inc
lcall
add
test
out
imul
lcall
and
add
xor
mov
add
xor
out
mov
mov
pop
ss
addr16
movsl
daa
aam
or
adc
or
mov
xchg
mov
daa
test
cli
shlb
sahf
adcb
cmp
lods
in
push
mov
sbb
pop
mov
xchg
das
inc
cmp
insb
jg
test
inc
arpl
sarb
cmp
dec
jmp
lods
mov
push
jge
in
adc
std
jnp
mov
mov
je
jp
outsb
fiadds
jno
push
push
sbb
mov
testb
lret
popf
pop
mov
std
cmc
or
jbe
or
or
cmpsb
xchg
xlat
insl
lods
fsubl
jb
aad
dec
fs
out
mov
push
mov
leave
ret
sbb
rorl
push
subl
aaa
cmpsb
ds
sbb
and
rorb
adc
push
xor
and
popa
sbb
jns
pop
das
jge
fiaddl
xlat
loope
les
into
push
pop
pop
pop
inc
insl
push
adc
roll
inc
dec
push
lods
lods
lret
loopne
pop
sub
ficompl
cld
mov
popa
or
xor
xchg
lods
cs
push
imul
mov
add
xchg
mov
sbb
or
add
ds
sbb
mov
lret
test
xlat
lret
adc
hlt
movl
cli
dec
jge
sbb
inc
add
jl
dec
movd
or
jmp
rcrl
aaa
cmp
xchg
addl
cmp
enter
pop
lret
cmpsl
xchg
xlat
lret
dec
push
add
arpl
mov
outsl
fsub
pop
imul
dec
movsb
adc
in
dec
or
pusha
cmp
iret
aam
pop
lock
or
mov
cmp
mov
mov
or
push
test
pop
inc
insb
pop
ficompl
and
dec
scas
imul
popa
push
dec
mov
sbbb
out
das
addr16
scas
xor
inc
jnp
xor
rcll
mov
fcomp
xchg
pop
push
idivl
nop
sub
mov
push
test
and
adcb
outsb
aad
mov
sub
sbb
aaa
mov
add
dec
repz
movsl
mov
mov
cmp
jb
mov
stos
add
ss
cmp
femms
test
mov
movsb
hlt
fmull
test
push
sub
in
push
mov
push
jmp
inc
daa
mov
das
lock
mov
xor
push
jl
shll
repnz
pop
orl
lret
lock
jecxz
leave
dec
push
or
xor
shl
cltd
inc
subl
pop
data16
jg
and
out
xchg
shlb
sbb
mov
into
xchg
stc
xlat
push
pop
insb
sbb
fsubrs
push
mov
add
loop
lahf
in
inc
enter
je
sbb
or
pop
or
xchg
lock
inc
bound
push
jecxz
bound
fcoms
jmp
push
sub
das
xchg
cmp
sbb
pop
pop
cmp
push
mov
repnz
sbb
fiadds
dec
xor
push
dec
sbb
adc
sbbb
push
sub
inc
mov
or
push
out
cmpb
cmp
mov
out
cwtl
in
out
ja
je
out
cmpsl
jmp
mov
cmp
ljmp
inc
or
sub
popf
inc
and
push
iret
sub
imul
xor
add
adc
pop
dec
jmp
ret
mov
add
repnz
insb
mov
cmpsb
push
nop
dec
negb
adc
mov
xchg
sbbl
cmp
das
and
push
cmp
mov
dec
in
sub
stc
ds
mov
sub
lea
dec
push
mov
js
pop
pop
jb
push
jmp
add
fyl2x
and
jle
jge
repz
pop
out
sbb
mov
push
lahf
inc
les
dec
pop
negb
xchg
lea
cmc
clc
out
insl
adc
or
js
fsubrl
dec
cs
es
mov
cmp
add
loope
mov
lret
cmp
mov
or
das
and
or
fildl
data16
dec
jno
xchg
cmpsb
and
cmp
sbb
ss
sarl
bound
nop
aas
je
subb
icebp
push
jle
sti
cld
je
call
daa
imul
stos
add
mov
cmc
sbb
cmc
xchg
mov
insl
stos
in
das
stc
ss
or
xchg
mov
xor
sbb
dec
int
mov
orl
stos
sub
leave
iret
orb
sahf
push
dec
inc
faddl
in
test
cld
xchg
dec
lret
int3
mulb
add
iret
jbe
out
pusha
inc
sarb
jo
mov
xchg
iret
mov
mov
push
xchg
mov
popa
sti
jge
je
sbb
xchg
xchg
xchg
shrb
add
inc
sbb
and
push
ja
aaa
out
pop
xchg
push
dec
xchg
mov
mov
fwait
sub
pusha
fistl
out
fadds
sub
and
jb
imul
mov
fsts
mov
rolb
xchg
rcl
pop
sti
push
loope
dec
mov
pushf
adc
pop
xchg
cmp
push
jnp
inc
sbb
pop
dec
mov
mov
loop
lods
mov
lock
jo
jne
add
mov
jp
cmpsl
cmpsb
iret
inc
fsubrs
cmp
idivl
test
lods
imul
xor
icebp
dec
sbb
jle
outsb
das
fnstenv
sti
lock
dec
nop
pop
xor
jns
mov
xchg
and
xchg
mov
sub
testb
loope
gs
and
jno
jnp
xchg
pushf
and
or
aad
xchg
je
dec
cmc
pop
mov
push
lock
jbe
pushf
cmp
xchg
sub
loope
aam
cwtl
pop
mov
inc
push
jae
and
test
sbb
cmp
mov
sahf
and
dec
jge
mov
into
jns
inc
clc
push
enter
lret
jno
out
int
repz
addb
mov
pop
add
ljmp
xor
add
out
mov
stos
loop
or
xor
pushf
xchg
sbb
pop
into
pusha
jecxz
inc
xchg
pop
ds
jg
lcall
jbe
jne
test
aas
pop
or
rcrb
inc
pop
in
lret
push
push
jnp
or
xchg
sbb
aam
mov
sti
lcall
mov
jnp
jle
fisttps
xchg
out
jecxz
test
and
jb
jp
test
add
in
push
mov
aas
out
retw
jge
insl
leave
sahf
jo
adc
cmp
push
mov
mov
out
and
xchg
xor
jge
stos
dec
subb
fwait
repnz
out
jb
leave
aam
cltd
inc
fildl
mov
mov
lret
dec
or
stos
sarb
stc
mov
out
xchg
cmp
in
push
aas
dec
daa
mov
pop
outsl
push
hlt
scas
push
jecxz
sub
lds
mov
loopne
jno
mov
jno
pop
loop
outsb
outsb
sbb
mov
and
lock
sub
xchg
sub
sahf
xlat
fwait
das
push
sub
mov
push
in
jns
lock
jmp
bound
adc
ljmp
imul
pop
pop
or
lds
arpl
imul
mov
adc
push
lds
in
out
into
jecxz
cli
jae
dec
jecxz
mov
cmpsl
test
lea
imul
sarb
push
xor
jb
cmp
and
xor
add
subl
lea
lahf
sub
inc
lods
insb
pop
xchg
mov
mov
test
lret
push
je
loop
push
je
xchg
lea
insl
jnp
lret
or
lds
jae
jmp
pop
icebp
iret
es
aas
data16
loop
pop
test
out
cs
arpl
lods
stc
inc
movb
mov
sbb
sti
int3
sbb
es
lock
data16
mov
pop
mov
imul
pop
addr16
pop
pop
inc
rclb
push
dec
cwtl
unpckhps
lea
bnd
das
hlt
jmp
xor
loopne
pop
je
push
and
jne
push
sbb
mov
xor
and
mov
jmp
test
cmp
mov
in
rolb
shlb
inc
mov
and
sub
push
lahf
fiaddl
sti
cmc
out
lahf
mov
mov
inc
inc
fistpl
mov
jbe
das
mov
cmpsl
fsubs
mov
mov
jb
jle
or
or
jb
jge
push
cmp
insb
and
mov
xchg
jmp
aad
push
adc
push
test
inc
test
sbb
adc
or
xchg
sbb
pop
push
cmpsb
cmp
push
dec
add
cs
xchg
aam
stc
dec
add
mov
jmp
into
cmp
popa
ret
rorb
test
test
scas
js
out
xor
mov
push
mov
fwait
icebp
add
out
in
arpl
and
or
jnp
push
les
mov
push
mov
push
push
mov
fstps
cld
xchg
mov
mov
cltd
mov
negb
or
mov
popf
xor
sub
xchg
dec
push
cmp
push
fisttps
pop
xchg
sub
dec
xor
in
ljmp
pop
fwait
jns
mov
out
loope
jno
movsl
sub
push
pop
adc
and
dec
mov
sarl
adc
in
push
mov
push
int
sbb
or
sbb
ret
xor
and
and
sbb
jecxz
add
jg
sbb
push
jbe
push
hlt
inc
xchg
mov
xor
std
insl
ss
enter
push
cmp
and
stos
nop
mov
push
sbb
inc
addr16
and
mov
icebp
sbb
jnp
js
test
pop
mov
inc
xor
dec
jns
orl
lods
dec
mov
jmp
xchg
stc
xchg
test
pusha
dec
pop
shll
adc
rcrl
push
push
mov
adcl
pop
je
bound
jb
rcrl
jmp
push
sbb
roll
xor
and
popf
test
mov
xor
sbb
popf
xchg
stos
addr16
inc
pop
insb
push
mov
cmp
lret
imul
int3
repnz
mov
cld
cwtl
or
in
pop
aaa
cmp
mov
cmp
cli
mov
pop
push
sub
mov
inc
jne
outsl
arpl
push
mov
mov
dec
adc
loope
out
mov
lcallw
sub
daa
xchg
out
ret
mov
and
mov
mov
push
cmpsl
push
addl
shll
repz
cwtl
push
add
ret
pop
sub
mov
stos
inc
add
stos
push
insb
sarb
into
inc
mov
fisttpl
jb
pop
xchg
pop
pop
or
lods
fld
inc
push
push
js,pn
das
es
addr16
shrl
adc
in
cltd
sbb
sti
lods
and
mov
loopne
inc
dec
xchg
push
test
xor
test
adc
jns
push
data16
jb
sahf
bswap
je
jae
xchg
stos
lea
lahf
pop
cmp
call
xor
push
xor
inc
call
mov
mov
bound
dec
popa
cmpsl
popa
cltd
jmp
cmc
jo
into
sahf
lds
and
scas
repnz
lcall
sti
out
mov
es
icebp
lret
sbb
popf
in
or
cltd
inc
xor
mov
gs
jp
mov
ds
sbb
sbb
outsb
sbb
jb
lahf
xor
fwait
mov
xchg
ret
ja
cmpsl
and
xchg
add
sbb
aad
adcb
jecxz
mov
xchg
inc
push
and
xchg
pop
in
jno
jmp
xchg
fisttpl
push
jns
push
mov
ds
stos
loopne
cli
xor
imul
xorb
xor
pop
fucomp
mov
fadds
cltd
add
and
fs
add
jno
mov
cmpsb
pop
push
xor
and
push
cmpsb
dec
adc
out
sbb
test
sar
or
iret
mov
add
pop
sub
cmpsb
out
jb
inc
mov
js
inc
adc
xchg
pop
lahf
les
cmc
test
int3
inc
jmp
pusha
push
add
sahf
mov
lock
push
jne
xchg
fmul
lock
bound
shrb
xchg
inc
add
mov
cmp
enter
xchg
sub
out
jbe
ja
sbb
je
in
mov
cwtl
push
fidivl
into
inc
lock
lahf
div
dec
sub
ds
shr
sbb
pcmpgtw
cmp
mov
push
cmp
mov
in
pop
sbb
ret
xchg
mov
mov
mov
les
sub
add
and
sbb
test
loope
xor
sbb
mov
test
nop
dec
mov
add
ja
inc
xchg
in
pop
pop
loopne
xchg
pop
xchg
push
sbb
das
sarl
fistl
ljmp
cmp
inc
inc
es
mov
sub
add
push
pop
push
dec
jmp
sbb
sahf
or
popf
fs
stos
dec
cs
cmpsl
xchg
iret
jae
add
fildll
sub
sub
jo
jecxz
int
loopne
rorb
movsb
jo
js
mov
pop
cmp
mov
add
je
outsl
aad
mov
sbb
xchg
lcall
sahf
in
push
pushf
sbb
xorb
add
jecxz
mov
mov
loope
mov
and
aaa
pop
mov
les
add
xor
repz
cmp
icebp
aaa
movsb
mov
and
push
xchg
cli
or
and
popa
movsl
xor
psrld
int
inc
push
dec
in
adc
adc
xor
scas
lea
loopne
out
pop
fdivl
out
stos
mov
sbb
dec
sti
lods
fsubrl
cmp
xchg
add
inc
mov
imul
divb
iret
xchg
fstl
imul
out
mov
shrl
cmpsl
sbb
push
js
dec
sbb
das
rcrl
sub
rcrl
in
push
popf
mov
push
sub
lods
push
lods
outsb
stos
rorb
es
dec
lret
movl
dec
icebp
and
push
xor
rcrb
inc
jle
shl
mov
sahf
fwait
outsl
repnz
xchg
fildl
test
les
outsl
cmp
cmpsb
out
add
fistl
int3
fwait
xchg
decb
sbb
jg
test
adc
sahf
ja
pop
mov
ds
cmp
enter
mov
or
std
mov
and
add
adc
repnz
hlt
xchg
inc
jl
jns
xor
ror
jno
fstpl
push
jp
rcll
sbb
cmp
lds
hlt
in
rcrl
dec
sbb
addl
cmp
scas
jge
pop
jb
mov
jp
clc
cmpsl
lahf
xchg
imull
dec
jl
out
inc
cltd
push
stos
bound
mov
sbb
xchg
push
in
aad
dec
imul
mov
roll
mov
or
xchg
jno
outsb
and
lahf
ret
mov
rclb
mov
adc
mov
out
in
mov
cmc
icebp
cmpl
dec
cmc
xchg
loop
pop
pop
negb
je
inc
lods
jp
cwtl
jno
je
mov
sti
fs
xor
inc
frstor
inc
pop
pusha
daa
loop
cmpsl
cwtl
gs
cmp
sub
ss
scas
adc
and
pushf
imul
dec
mov
pop
int3
out
test
fildl
cs
jne
movsl
ja
aam
test
aad
call
dec
mov
xchg
or
cld
shlb
fdivr
push
mov
lahf
xor
nop
leave
enter
inc
and
jmp
xchg
stc
lcall
arpl
inc
leave
pop
jo
std
xchg
xor
push
or
xchg
das
cwtl
lock
add
xchg
std
push
mov
jno
es
dec
out
mov
in
hlt
adc
add
push
fsubs
add
and
or
movsl
adc
xchg
andb
sbb
mov
and
xor
jns
jo
adc
adc
adc
push
sub
jp
stc
out
push
cmc
push
hlt
pop
lret
orb
enter
nop
mull
jb
adc
mov
push
push
sbb
adc
jge
or
jg
xor
pusha
in
or
in
cmpsl
dec
adc
out
in
add
hlt
and
repnz
jg
xor
xchg
shll
inc
btc
xor
jmp
fs
push
pushf
pop
fnsave
push
pop
ja
mov
fmul
movsl
test
jl
inc
inc
sbb
sbb
aam
lea
enter
sbb
ljmp
adc
sbb
faddl
cmp
dec
outsl
cwtl
xor
aam
das
mov
pop
sbb
sbb
adc
pusha
push
int
js
jno
and
inc
mov
das
fwait
mov
outsb
jmp
sub
mov
inc
xlat
and
adc
pop
push
mov
jge
fdivr
jmp
jbe
or
sahf
add
mov
mov
xchg
sbb
jle
popa
sub
movl
xor
mov
fiadds
bound
call
adc
or
outsl
ja
xor
js
pop
push
xchg
aad
mul
mov
lods
mov
mov
pop
pop
dec
jp
mov
mov
mov
bound
mov
xchg
fcmovu
imull
dec
gs
fldt
dec
mov
xor
int
fcmovb
int
jl
daa
mov
syscall
xchg
ret
idiv
bound
sti
mov
adc
jl
add
add
mov
and
dec
add
jne
add
aam
push
pushf
inc
push
movsb
cmp
insl
andb
or
cmc
xor
movsb
cwtl
pop
ret
push
or
adc
dec
inc
xchg
in
mov
or
repz
fs
cld
test
ret
push
mov
stos
cs
pop
enter
in
sub
xor
adc
shrl
dec
loopne
enter
inc
int
sub
repnz
cmpsl
sub
int
inc
sub
mov
fwait
cmpb
popa
sbb
add
iret
iret
test
xlat
ds
inc
jne
or
test
in
in
mov
fsubs
jne
int
mov
dec
inc
push
fcmove
push
mov
rcrl
sbb
sahf
cli
test
aam
push
mov
dec
ficompl
mov
jo
test
mov
or
inc
sbb
xchg
add
fnsave
push
in
popf
sarl
push
fistpll
adc
cmp
adc
push
into
test
jns
movsl
jp
fisttpll
and
bound
icebp
hlt
add
in
and
rorl
push
cmp
in
hlt
xlat
ret
jae
mov
pop
lcall
xchg
lock
mov
pushf
dec
lds
inc
xorb
mov
pop
mov
ror
push
aam
ret
clc
cld
lret
stos
mov
xor
sbb
jmp
into
fdivs
adc
xchg
leave
mov
movsb
xchg
icebp
pushf
xor
scas
adc
jg
data16
imul
jmp
rorb
jnp
test
loope
cltd
repz
and
mov
add
iret
pop
or
sub
inc
stos
andl
fimull
std
mov
stc
scas
push
das
xchg
jns
int3
and
mov
mov
sbb
or
inc
pop
xchg
push
shll
mov
xchg
sub
add
imul
lret
mov
adc
xor
incl
cmp
adc
sti
mov
popf
gs
inc
scas
xchg
or
xor
xor
int3
jg
leave
mov
rorl
push
push
and
shl
inc
jb
push
dec
mov
push
cmp
jl
adc
stc
push
repz
pop
xor
imul
mov
mov
mov
xchg
sbb
jecxz
outsb
fs
push
xor
mov
cmp
adc
mov
mov
xor
loopne
out
out
jo
fstpt
imul
inc
adc
faddl
cmp
scas
cmpsl
imul
or
stos
arpl
mov
cmp
dec
mov
inc
jnp
dec
push
in
icebp
dec
repnz
std
adc
out
cmp
sbb
push
mov
inc
dec
clc
ds
stc
lahf
out
inc
ss
and
aas
subb
ret
mov
or
call
dec
loop
sarb
daa
push
mov
stc
loopne
call
xchg
fldenv
fldlg2
mov
fsubrs
cs
mov
rol
imul
push
andl
adc
in
sub
mov
call
movsb
jb
rolb
loopne
clc
sti
xchg
shr
push
incl
xchg
mov
push
addr16
lods
sub
popf
add
pop
mov
in
cmc
inc
daa
testb
shll
sbbl
mov
loop
fisttps
cmp
call
add
add
inc
ljmp
jmpw
mov
rcrl
mov
loopne
jecxz
xchg
pop
sbb
mov
js
ss
pop
int
mov
daa
push
or
mov
or
push
lods
pop
stos
push
pop
std
cmp
jo
mov
inc
and
lret
jecxz
lahf
push
nop
xor
mov
out
dec
and
or
dec
mov
ss
nop
sbb
cmp
imul
pop
cltd
mov
push
out
repz
or
das
xchg
xor
mov
mov
lods
pusha
mov
stos
inc
mov
dec
sub
int
test
mov
out
xchg
and
xchg
jmp
mov
push
pop
mov
andb
jne
dec
mov
divb
mov
adc
push
cmpsl
in
add
pop
jae
jo
jl
push
in
jmp
mov
add
mov
mov
push
adc
rcr
mov
imull
aas
loopne
sbb
inc
add
pop
pop
sbbb
mov
xor
xchg
and
ja
sbb
and
mov
imul
clc
sbb
andl
out
cmpsb
aas
pop
jae
push
cmp
mov
imul
pusha
negb
xor
ret
pop
push
mov
mov
mov
js
in
pop
push
gs
test
cmp
pop
ret
outsl
sahf
push
mov
pop
std
ret
test
call
xchg
dec
sbb
mov
inc
push
aad
add
push
das
int3
rol
jnp
xchg
jmp
cwtl
mov
les
or
xchg
rcrb
mov
ficomps
addr16
sub
xor
xchg
inc
lds
lret
pushf
and
scas
pop
mov
jb
jbe
sub
movsb
lock
and
xor
hlt
dec
sub
pop
lods
sub
out
iret
fildl
mov
mov
or
fiadds
shlb
push
add
pop
out
mov
popf
ljmp
add
test
pop
int
ljmp
adc
lahf
pop
cmp
mov
push
bound
repz
sbb
cmpsl
sahf
fldenv
mov
pop
adc
adc
fnstsw
insb
fisubl
inc
cmpb
ss
mov
bound
cmp
outsb
je
cmp
and
cwtl
inc
mov
pusha
push
push
sbb
std
cmp
test
dec
lock
dec
push
iret
cmc
sub
xchg
imul
outsb
nop
mov
cmpsl
stc
lretw
and
sbbb
push
ret
iret
inc
adc
rolb
cmp
pop
lret
push
dec
pop
loop
je
aad
lahf
sub
sbb
ret
inc
pop
push
adc
sti
sbb
pop
cmp
mov
dec
cs
out
js,pt
xor
jo
rcll
sub
sub
pusha
loopne
stos
add
popf
test
aaa
mov
xchg
ja
adc
into
sbb
std
xor
jo
mov
pop
shrb
push
pop
xchg
das
jne
inc
xlat
dec
xchg
mov
int
jp
xlat
fiadds
sbb
cmp
ljmp
in
shlb
push
std
and
sbb
cs
ss
popa
or
imul
push
fcmovnu
add
sub
lret
subb
dec
pop
jae
jns
mov
mov
mov
pop
push
movsl
sub
xchg
pop
ss
xchg
inc
sub
mov
mov
imul
add
loope
xor
pusha
mov
pop
call
dec
mov
inc
push
lret
jle
dec
cmp
mov
jg
cmc
filds
inc
mov
imul
dec
test
loopne
jle
push
loopne
std
fprem1
clc
divb
rclb
push
pop
imul
or
lds
dec
push
inc
sbb
addr16
cmp
xchg
daa
sub
andl
lea
cmpsb
xlat
out
mov
xor
test
jle
int
cld
mov
fs
fstp
add
dec
cmp
pop
mov
in
inc
add
imulb
xor
sbb
mov
mov
and
pop
scas
mov
movsb
mov
xchg
or
in
jg
pop
fcmovb
loope
xlat
mov
mov
pop
cmp
adc
xchg
cmp
push
cmpsl
mov
add
popa
push
mov
fs
sbb
nop
pushf
add
test
mov
addr16
dec
leave
add
andb
and
dec
jb
dec
or
pop
mov
cmp
aam
icebp
fldlg2
xchg
inc
adc
fldcw
orb
test
dec
add
in
movsb
shrb
ficoms
sub
lods
shrb
push
push
sbb
and
add
outsb
lock
xorl
add
arpl
cltd
sub
pop
cli
pop
mov
push
in
jne
or
cmp
sub
imul
loop
roll
jbe
shll
xchg
daa
int3
into
hlt
push
dec
aas
lcall
arpl
icebp
sbb
rcll
into
ss
js
sub
in
jp
adc
fiadds
xor
lea
retw
imul
fcomp
data16
push
ret
int
mov
and
jno
push
xchg
sub
lods
xchg
call
repz
orl
dec
mov
xchg
xor
test
mov
test
inc
repz
and
jl
push
mov
idivl
jo
out
xchg
fimull
push
flds
jmp
mov
call
imul
arpl
enter
movsl
pop
or
mov
push
push
inc
leave
sahf
rcll
ficoms
pop
xor
das
mov
dec
mov
adc
dec
es
xor
cmp
mov
xchg
inc
popf
mov
mov
in
jne
mov
fbld
fs
lret
xchg
mov
ljmp
push
clc
and
adc
fs
and
adc
lods
ret
sti
hlt
push
xchg
mov
pop
int
aaa
in
aaa
dec
mov
arpl
mov
inc
cltd
lea
inc
in
addl
fistps
mov
pop
xor
push
mov
adc
xchg
mov
mov
je
sbb
xlat
xchg
mov
pop
add
sub
ficoml
pop
push
stos
sbb
push
pop
push
mov
and
jo
iret
cwtl
shr
cltd
popa
push
mov
or
fabs
adc
jne
push
adc
fidivl
jecxz
repz
jecxz
data16
push
mov
and
xchg
pop
and
jb
pop
sahf
lret
xchg
cmc
aad
gs
or
push
in
xchg
lods
xchg
adc
in
sbb
sub
scas
lock
in
loop
jne
mov
cltd
push
lods
fisubrl
inc
mull
scas
cmp
stos
push
xchg
mov
cmp
dec
mov
call
testl
sub
sub
je
pop
pop
int
push
jg
fsubs
xchg
ret
xor
insb
and
mov
inc
xchg
cld
shrl
inc
adc
cmp
stos
mov
in
cmc
dec
sahf
div
jb
test
loope
repnz
daa
jg
mov
enter
inc
and
pop
jb
fs
in
repnz
or
ret
insb
ljmp
fs
and
dec
and
fidivl
popf
in
aas
sahf
sub
jae
test
lock
cld
movsl
shrl
loop
jecxz
ljmp
sub
cmp
fidivl
dec
sahf
push
mov
out
ret
dec
cmp
cmp
push
xchg
lsl
roll
nop
lret
add
inc
push
adc
push
pushf
pop
cli
out
xchg
lock
mov
std
inc
aas
push
mov
sub
stc
jne
push
adc
fcoml
jbe
aaa
lds
sub
sub
mov
inc
adcl
stos
lods
jle
data16
xor
and
inc
fcomps
clc
inc
adc
mov
iret
inc
orb
pop
ret
jle
ljmp
mov
xchg
in
aas
push
add
scas
mov
dec
insl
jo
lods
pop
add
ss
jo
rcrb
movsb
je
dec
xchg
inc
cmp
xlat
xchg
dec
das
or
add
xor
les
leave
inc
mov
es
gs
cmc
fidivrl
push
scas
std
cmp
pop
sahf
out
movsb
addb
sub
cltd
dec
mov
xor
dec
outsb
pop
ror
or
cli
sub
aas
daa
fadd
jl
test
call
add
lret
mov
sbb
dec
rolb
ret
add
sub
push
in
mov
sub
fnstenv
mov
imul
sbbl
dec
repz
lods
inc
adc
mov
sub
loope
js
xchg
mov
and
mulb
or
mov
add
jnp
mov
mov
int
xchg
fsub
in
lret
and
inc
fiaddl
cs
jle
insl
mov
adc
movsb
cmpsl
ret
stc
pop
dec
dec
jp
lret
lods
stos
xor
xlat
add
aas
ret
stc
addr16
xor
mov
jg
xchg
insb
cwtl
fdivr
and
popf
ret
les
pushf
inc
and
xchg
lock
cld
mul
dec
repnz
xchg
xchg
pusha
outsb
ror
xor
cltd
xchg
movsb
or
imul
cmp
cmp
out
loop
je
pop
je
cltd
pop
lock
enter
sbb
icebp
js
pop
arpl
mov
cmp
das
fdivrl
mov
or
cmp
loopne
test
add
pop
push
and
sar
push
and
mov
jnp
or
ret
repnz
loop
cld
in
aad
xlat
push
outsl
divl
sbbl
xor
fsubl
and
test
or
scas
scas
and
pop
pop
lcall
int3
mov
jnp
xchg
inc
repz
mov
mov
mov
push
and
add
call
insl
jp
outsb
mov
adc
mov
jg
sub
push
sub
bound
sub
jae
loop
shrb
test
dec
ljmp
sbb
dec
pushf
add
rcrl
inc
call
je
nop
cld
insb
jns
dec
or
pop
in
xchg
popf
lahf
or
push
lcall
mov
popa
fsubrs
in
lret
je
sub
mov
add
mov
xchg
sub
sahf
data16
scas
test
or
add
stos
or
add
arpl
jmp
in
jl
jge
js
fidivrs
loope
mov
jg
idivl
push
mov
push
das
movsb
dec
hlt
pop
cmp
mov
pop
push
pop
xchg
roll
adc
xchg
pusha
lock
fs
mov
mov
fcoms
mov
mov
in
lock
push
xor
jmp
inc
js
push
repnz
sbb
nop
jbe
cmp
or
push
scas
dec
ret
and
out
adc
jle
mov
inc
lcall
sbbb
cmp
je
jecxz
insb
pop
lock
mov
mov
or
or
dec
xor
mov
popa
das
push
jo
loop
push
dec
mov
jle
push
out
ja
js
push
adc
js
sub
adc
dec
jmp
fisubrl
cld
ret
adc
jle
pusha
mov
out
stos
and
push
and
mov
into
shl
aas
popa
xlat
fbstp
adc
cmc
jnp
adc
stos
mov
mov
shlb
jae
jmp
mov
stos
dec
push
jle
sarb
mov
adc
hlt
jl
out
xchg
adc
jle
cli
jmp
sub
ljmp
js
fbstp
js
push
pop
or
arpl
popl
add
scas
inc
jl
ds
sbbl
mov
inc
xlat
mov
lods
xor
xor
pop
xchg
jmp
cmp
loop
aas
jnp
in
pop
idiv
and
out
ljmp
mov
dec
sub
stos
lock
pop
sub
rcrb
out
push
jmp
cltd
in
or
int
movsl
out
pop
mov
pop
ja
cmp
jle
cmpsl
pop
dec
lods
sbb
dec
mov
enter
jle
in
inc
and
es
shrd
hlt
cmp
push
push
push
call
jge
and
xchg
repnz
mov
lret
clc
fmull
jno
cmp
gs
inc
adc
popf
call
push
pop
pop
sbb
mov
pop
cmpsb
test
sbb
jmp
xchg
push
std
mov
fimull
lods
mov
mov
fmuls
mov
mov
adc
int
pop
mov
enter
icebp
ljmp
push
xor
cmp
int3
lahf
mov
out
dec
push
fbstp
pop
fldcw
pop
or
mov
outsb
lea
and
sbb
sbb
pop
outsl
loope
aas
pushf
imul
or
add
push
and
mov
inc
jno
cmp
dec
lods
leave
fwait
dec
in
xor
loop
cwtl
test
cmpsl
out
mov
pop
mov
lret
push
pop
or
dec
dec
sub
sub
enter
enter
test
icebp
je
into
cmp
jo
or
inc
repz
rorl
icebp
push
fnstsw
mov
pop
add
into
jge
sub
sbb
add
sub
fidivrs
call
addr16
mov
loopne
jmp
nop
lcall
sub
popf
add
cmp
or
xchg
aam
add
icebp
aaa
idivl
fwait
arpl
and
push
add
jge
xchg
xor
enter
mov
jle
aas
sub
push
rcl
or
mov
push
add
imull
dec
cs
loope
pushf
mov
outsb
cmp
jmp
cltd
das
mov
cmpsb
dec
dec
jge
and
fbstp
dec
mov
or
mov
push
xor
inc
sbb
negl
sarb
inc
dec
mov
in
xor
inc
add
mov
fucomp
pusha
xor
dec
addps
pop
cmp
pop
jl
dec
sbb
loop
aad
adc
adc
sbb
sbb
aam
and
sub
push
por
mov
pushf
cmp
test
jno
cmpsb
test
inc
cmpsl
cwtl
jle,pn
cmpsl
dec
xchg
aam
outsb
fwait
aad
push
fisttpll
pop
and
pop
test
imul
xchg
inc
mov
mov
inc
arpl
cld
popa
cmpsl
cmp
pop
sbb
or
and
adc
aaa
lds
fiadds
aaa
cltd
push
je
mov
cs
addl
sti
pusha
repnz
sbbb
mov
stos
sbb
push
dec
daa
add
imul
dec
push
cmc
jns
adc
cmpsb
shll
sub
inc
xchg
imul
aaa
sub
cmpsl
out
xor
push
inc
fldcw
dec
jne
lret
aam
roll
js
mov
jecxz
int
insl
adc
xor
mov
sti
ja
clc
fdivrl
cmp
les
cwtl
mov
or
xor
xor
xor
shl
dec
sbb
xor
or
cmp
sub
push
jg
insl
pop
idivb
mov
inc
jb
out
and
adc
rclb
out
out
scas
leave
call
pop
cmp
nop
and
dec
mov
mov
ret
jns
arpl
iret
xchg
neg
cwtl
mov
cmp
push
cmp
xchg
movsb
push
mov
scas
repz
push
aaa
push
jne
cmp
movsb
mov
push
push
pushf
adc
and
out
test
mov
xchg
cmc
dec
jecxz
adc
les
outsb
adc
outsb
push
mov
add
mov
push
sbb
in
cmp
es
sub
push
sub
fcmovbe
xchg
outsl
mov
jo
mov
jae
and
mov
jg
iret
jge
xchg
jle
and
pop
adc
dec
pop
rorl
push
shll
push
mov
xchg
dec
negl
rcll
push
inc
repz
adc
int3
mov
clc
jmp
sbb
mov
mov
int3
arpl
and
int
inc
mov
insl
lds
add
repnz
jne
mov
pop
push
pop
and
out
sub
push
cltd
xchg
mov
inc
jo
aad
inc
enter
into
icebp
enter
mov
inc
dec
gs
int
push
mov
insb
mov
ja
das
cltd
push
les
leave
sarb
cmp
adc
pop
aas
sbb
stos
out
cld
pusha
movsl
inc
and
and
add
push
cmpsl
xchg
xchg
add
mov
add
and
mov
mov
pmaxub
jle
verw
insl
and
sbb
aas
fwait
aas
jge
push
les
mov
xchg
ljmp
arpl
add
jnp
outsl
dec
push
cmpsl
mov
adc
cmp
and
push
mov
fwait
jp
insb
fimull
pop
scas
fwait
ret
lret
mov
mov
loope
mov
popa
pop
dec
call
sbb
mov
inc
xchg
or
pushf
mov
and
pop
scas
lods
push
imull
cmpsb
aas
dec
cs
and
inc
in
sub
jnp
xor
test
cli
pop
test
mov
out
aas
dec
cwtl
mov
pop
cmp
ror
cmp
bound
clc
addr16
jecxz
add
inc
inc
mov
xor
inc
dec
in
mulb
xchg
orl
jmp
stc
or
mov
orl
test
sbb
inc
mov
bound
inc
popa
test
out
mov
mov
loope
lcall
lcall
mov
in
and
sbb
aaa
movsl
mov
outsb
sub
pop
sbb
pusha
mov
hlt
imul
fldenv
sub
jo
fsubrl
jb
subl
fsubrp
addl
out
inc
jle
lods
mov
mov
adc
xor
fisttpl
or
jo
xchg
mov
adc
test
or
lods
push
nop
int3
or
in
push
jo
add
adc
mov
ja
cmp
mov
sbb
jp
das
jne
sbb
inc
cld
aad
adc
outsl
lds
and
adc
shlb
mov
sbb
aaa
pop
loopne
or
faddp
aad
rcrl
jle
out
jmp
cwtl
shrb
adc
pop
inc
lods
push
test
in
mov
cwtl
loope
or
jp
mov
shlb
outsl
into
or
lret
insb
lds
iret
sub
insl
cmp
out
sub
push
dec
outsl
dec
xchg
into
es
add
cld
adc
jmp
xchg
mov
xchg
test
test
ljmp
or
lahf
aam
dec
ret
std
aas
scas
and
mov
adc
dec
mov
pop
mov
push
in
repnz
add
mov
leave
cmpsb
int
out
mov
or
bound
mov
aaa
fimuls
dec
push
rorb
call
inc
or
std
jmp
loopne
lret
fxch
mov
cmp
dec
jae
mov
adc
imul
push
mov
add
add
test
rcl
in
xchg
add
or
insb
lods
xor
pop
mov
jae
xor
xchg
pushf
adc
std
lds
pop
jb
enter
mov
cmpsl
fisttpl
mov
mov
inc
push
shl
popf
jg
inc
xchg
mov
adc
inc
pop
jmp
shlb
into
push
inc
int
mov
int3
outsl
daa
decb
sahf
pop
xchg
and
pop
int3
jb
cmp
push
add
std
push
xor
xchg
mov
jle
shll
cmp
popf
mov
dec
cltd
pminsw
ja
out
mov
cli
dec
add
mov
inc
mov
push
daa
cmc
hlt
dec
jno
divl
add
mov
inc
sbb
mov
arpl
push
out
or
add
mov
mov
mov
or
push
hlt
loope
fistpl
mov
xlat
repnz
pop
std
xchg
dec
lea
add
loop
fwait
sub
add
mov
jbe
pop
jl
inc
push
push
addb
or
nop
pop
in
std
filds
mov
jg
xchg
ret
frstor
iret
aam
les
sbb
jns
dec
adc
lods
inc
imul
cmp
ljmp
adc
pushf
clc
andnps
or
cmp
or
jp
loop
shlb
xchg
or
fldenv
mov
cmp
out
push
nop
mov
mov
das
mov
xchg
pop
sahf
add
shrb
xor
pop
xchg
icebp
insb
mov
mov
dec
inc
inc
imul
dec
xchg
mov
loop
push
mov
cld
jg
cmpl
out
add
push
mov
dec
js
iret
jg
nop
add
pop
push
push
sub
bound
loopne,pn
mov
stos
subl
or
adc
stos
jmp
loop
mov
inc
js
push
jl
and
int
add
lods
sbb
clc
je
iret
mov
leave
and
dec
pushf
push
dec
cmp
insb
mov
mov
addr16
xchg
dec
mov
sahf
sbb
bound
shrb
mov
dec
xchg
pop
out
sbb
lods
xor
pop
enter
dec
insl
mov
xchg
push
sbbl
jns
fimull
dec
sub
inc
inc
add
pushf
ret
cmp
xchg
mov
jb
mov
pop
sub
inc
jmp
fnsave
rorl
sub
pop
outsl
roll
rclb
pop
jle
jno
mov
dec
cmp
cli
xor
scas
fstl
mov
or
mov
bound
movsb
xor
mov
adc
xchg
in
ja
out
lret
callw
mov
fistpl
pop
push
cmp
jo
icebp
out
notl
jle
sti
mov
jecxz
fnstsw
pop
xchg
test
push
sub
cmp
push
inc
cwtl
cli
push
pop
lret
lock
stos
and
cmpsl
test
aad
test
loope
cli
out
je
daa
ljmp
fistpl
popa
loop
std
mov
pop
cltd
out
pop
pushf
mov
dec
aad
mov
in
mov
es
arpl
push
in
xchg
push
nop
inc
xlat
push
insb
lods
or
xlat
cs
scas
and
add
call
int3
sub
stos
dec
cs
sahf
mov
add
enter
sbb
add
movsb
jno
icebp
iret
std
fisttpl
add
sbb
and
aaa
xchg
xor
nop
nop
lcall
add
mov
mov
nop
xchg
sub
roll
lahf
imul
mov
mov
out
mov
pop
ss
shl
imul
xchg
pop
or
das
lds
loope
xor
inc
cmpsb
out
cld
xchg
xor
call
movsb
test
push
dec
push
xorb
push
lret
test
aaa
push
sub
push
and
sub
jle
jbe
loop
xchg
mov
mov
mov
stos
cmpsb
and
ret
xor
mulb
ss
bound
and
xchg
adc
cmpsb
inc
pop
push
scas
add
mov
cmpsl
or
jo
daa
add
sbb
aaa
push
mov
stc
add
inc
push
sbb
divl
push
push
or
ret
jmp
xor
ljmp
addr16
je
clc
repz
dec
cmp
mov
jg
jmp
push
push
jb
notb
dec
out
push
rcrl
fidivs
mov
sbb
sahf
push
stos
pop
jg
in
mov
test
inc
pop
into
movsl
dec
jbe
push
roll
jl
test
bound
test
std
into
repz
push
int3
ljmp
push
push
jb
insl
xchg
xchg
fisttps
jmp
dec
loopne
setb
pop
das
std
or
add
loop
shrl
jnp
adc
jb
sbb
pop
inc
and
fwait
push
add
mov
pop
add
std
daa
std
push
scas
jbe
jge
pop
addb
out
mov
loope
cli
sub
sarl
js
sbb
stc
insb
adc
sbb
shr
stos
pop
loope
inc
pushf
fdivrl
mov
sbb
mov
cmp
jecxz
and
scas
scas
adc
in
movsl
jo
pop
jno
enter
ficompl
js
mov
sub
gs
mov
outsb
scas
lret
jge
mov
cmp
mov
push
or
sub
pop
fstps
int
lahf
push
jp
iret
add
mov
dec
test
es
push
jp
xchg
cmc
bsr
movsl
insb
leave
mov
ficompl
cmp
sub
sub
mov
ret
adc
pop
inc
sub
push
pop
nop
js
int
aad
cmpl
jo
pop
mov
sbb
mov
repz
es
ja
jns
jo
add
jle
aad
adc
sbb
fs
stc
movsl
in
push
divb
mov
pusha
cs
fsubrl
mov
mov
arpl
stos
xchg
pop
inc
js
mov
fmuls
and
out
nop
or
lretw
dec
lea
pop
sub
xchg
sub
pop
js
dec
jbe
cmp
lock
pop
jne
sbb
jbe
and
outsl
jmp
adc
jmp
pop
lret
jp
mov
pop
test
sti
lret
adc
aad
push
xor
out
add
cmp
pop
sahf
insb
and
xchg
pop
sahf
mov
leave
repz
jnp
mov
or
jp
mov
lods
roll
stos
push
push
enter
cmpsl
xor
xor
cmp
bound
jae,pn
cmp
cmp
mov
jne
push
mov
cli
lcall
mov
push
xchg
inc
sub
and
or
inc
aaa
stc
rcl
add
arpl
insb
mov
or
adc
fscale
push
cld
sub
or
int3
sub
scas
jg
sub
test
mov
stos
cmp
jbe
jae
inc
adc
fiaddl
in
xchg
iret
je
xchg
inc
cs
daa
or
xchg
adc
or
dec
jns
leave
cwtl
and
cwtl
pop
push
inc
sbb
rcll
inc
inc
in
fidivs
mov
mov
outsl
jae
mov
jbe
sub
inc
jmp
iret
lods
ja
sub
or
push
jnp
fdivrs
and
inc
xchg
mov
sbb
mov
in
popf
out
mov
jl
jno
add
cwtl
push
and
jno
movsl
mov
call
aam
sbb
add
mov
and
arpl
fcmovnbe
jge
inc
mov
xchg
xor
ljmp
adc
jbe
pop
jl
xchg
sub
scas
jbe
inc
and
jmp
jp
movsl
into
idiv
loop
fwait
test
dec
inc
cltd
movsb
mov
xchg
cld
lcall
push
pop
adc
js
test
pop
sbb
test
sbb
out
addr16
add
je
jl
daa
and
sub
aaa
aam
jmp
and
jmp
repnz
pop
pop
jmp
adc
pop
lahf
addr16
mov
fsubrs
cld
rcl
and
sar
mov
adc
pop
outsb
adc
sti
enter
orb
push
adc
pop
test
out
fs
movsb
push
arpl
dec
shrl
add
xchg
ljmp
fldenv
aad
dec
xlat
fimull
stc
rorl
push
lock
scas
popa
and
sub
cmc
mov
lods
xor
add
jecxz
insb
or
fdivrp
sub
xlat
shrb
push
loopne
test
pop
sub
ljmp
xchg
movsl
jp
jmp
xchg
arpl
shll
xlat
add
mov
mov
and
jp
fistl
popa
cmp
cmp
sub
or
xchg
fcompl
test
aad
outsl
pop
mov
adc
inc
les
sub
cltd
fdivr
mov
fsubrs
roll
mov
dec
hlt
cmp
pushf
or
jp
insl
in
les
mov
cmpsb
dec
inc
aas
insb
push
loope
mov
test
pop
loop
xchg
in
pusha
js
not
les
mov
scas
mov
mov
sbb
lock
idivl
sahf
imul
xchg
sub
in
sti
push
stc
push
rolb
in
ja
xchg
cli
add
repz
lea
adc
lret
add
arpl
call
out
nop
and
mov
bound
ficoml
enter
test
jp
inc
adc
cltd
cmp
pop
sbb
addr16
push
xchg
mov
in
subb
and
adc
pop
daa
mov
ljmp
pop
leave
dec
adc
popf
je
les
inc
pusha
sub
xor
dec
repnz
sub
inc
scas
cwtl
push
xchg
sarl
out
movsl
mov
mov
xchg
lods
inc
movsl
pop
cltd
and
jp
mov
popf
lret
cld
dec
ja
inc
sbb
cmpsb
repz
int3
in
and
scas
sbb
sub
mov
and
pushf
sahf
cmp
mov
popf
insl
jmp
sub
insl
stos
push
or
push
and
jbe
cmc
push
pop
cmp
sub
out
sbb
addl
or
gs
mov
mov
adc
adc
enter
sub
lea
and
dec
pop
add
pop
sahf
xor
outsb
push
add
fdivl
xor
push
jns
dec
sbb
outsl
jnp
test
adc
movsl
sub
mov
pushf
add
je
fwait
repnz
push
push
mov
xor
pop
outsl
into
mov
loop
aad
pop
loope
test
sub
inc
adc
jns
lock
insb
pop
lock
lahf
lds
js
js
pop
hlt
push
or
inc
and
push
cmp
push
pop
cltd
lret
frstor
mov
inc
cmp
inc
aam
sub
stc
jne
jne
cli
fisubs
fwait
add
sbb
mov
into
mov
gs
leave
cmp
sbb
lahf
hlt
out
cmp
jg
add
gs
pop
ret
xchg
inc
lret
in
push
daa
sbb
rcr
popf
fnstsw
push
mov
dec
out
cld
sarb
inc
dec
pop
test
pop
lahf
shll
inc
xchg
inc
and
pop
in
gs
std
movsb
rcrl
addr16
inc
cmc
in
aaa
and
sti
dec
sbb
cmc
pop
push
jp
into
jo
push
mov
sub
cmp
adc
jl
sub
gs
hlt
sahf
mov
sub
sbb
es
mov
int
jle
fstpl
insl
sbb
push
sub
xlat
push
pop
xor
daa
xchg
imull
loop
mov
mov
or
fisubrs
add
and
pop
sub
sbb
jle
mov
mov
push
sub
fimuls
pop
dec
pop
fldt
push
cld
mov
lret
mov
fdiv
pop
mov
add
push
ficompl
repnz
push
das
mov
jb
adc
sub
jns
lods
stos
inc
outsb
jne
jmp
mov
push
bound
pop
imul
pop
movsl
in
and
sbb
fsubrs
cld
sub
movsl
in
sbb
es
pop
or
shlb
fwait
mov
sub
push
add
mov
fnstcw
add
test
lret
comiss
mov
das
xchg
xchg
popa
dec
inc
or
lahf
enter
filds
or
repz
mov
mov
dec
pop
vdivss
push
sub
aad
sub
xchg
repnz
or
dec
movsb
cmp
xor
in
loopne
arpl
gs
xchg
cmpl
insl
into
xchg
jns
cld
xchg
dec
das
sub
sub
or
pop
insl
sbb
pop
mov
xor
xor
imul
jae
xlat
inc
aad
or
sarb
shll
jg
insb
lret
inc
ds
mov
mov
dec
inc
cmc
cwtl
sub
inc
or
aam
movsl
add
inc
ret
adc
push
jge
dec
sub
cmp
dec
mov
lods
jmp
insl
pop
insl
push
sub
mov
mov
pop
and
inc
sub
push
push
mov
inc
sub
dec
out
sbb
adc
out
inc
and
out
into
dec
jmp
lret
push
jp
push
jns
mov
cmpsb
adc
xor
stos
xchg
add
fnclex
mov
cmp
sub
and
iret
mov
pop
dec
fs
sbb
inc
jae
xor
mov
jle
mov
inc
mov
mov
mov
test
jmp
icebp
and
pop
outsb
sti
fs
xor
ret
mov
fimull
sub
mov
orl
adc
loop
dec
gs
sbb
pushf
imul
sub
xlat
dec
sub
loop
sahf
add
mov
push
ja
mov
mov
sbb
jo
cltd
subl
addr16
jb
or
mov
fwait
popf
insl
enter
mov
mov
and
mov
pop
cmpsb
fsub
and
leave
lcall
dec
cld
pop
mov
nop
pusha
mov
xchg
and
mov
or
fsubr
or
sbb
push
mov
mov
sub
icebp
out
and
call
push
mov
fwait
mov
mov
fwait
ds
xor
cmp
jae
inc
movsb
imul
in
adc
dec
repz
ror
stc
push
mov
add
cltd
sbb
subb
and
in
pop
cmp
jg
or
hlt
push
xchg
into
xor
daa
sub
and
dec
icebp
int3
sub
arpl
jns
lcall
mov
lds
pop
jmp
pop
fcompl
popf
mov
lret
loope
sbb
jle
pop
cmp
mov
enter
sub
mov
call
mov
dec
sbb
add
xor
mov
mov
shlb
stos
jmp
mov
xchg
bound
fcompl
and
adc
push
adc
jmp
leave
push
sarb
add
rorb
pop
cmc
repnz
wbinvd
push
xlat
inc
or
mov
mov
xchg
ret
mov
jle
jmp
mov
sub
incb
jl
mov
sub
push
jg
mov
fidivl
pop
sub
sub
lret
jbe
aas
aas
daa
in
mov
add
jle
fnstcw
outsl
clc
xor
lcall
pop
nop
adc
std
idivb
jecxz
push
cmp
sub
sbb
sbb
pop
pop
cwtl
inc
lods
cmp
dec
jno
xor
jno
jmp
adc
gs
aad
icebp
sti
xchg
add
loope
cltd
sub
in
pop
mov
adc
jae
or
into
imul
loop
lcall
rorb
stos
pusha
cmp
leave
dec
inc
out
stos
or
movsl
jmp
or
mov
sub
jg
and
cmp
aam
clc
lds
iret
lds
out
ret
dec
pop
cmp
cli
cmc
jmp
pushf
jl
mov
leave
adc
lock
das
stos
mov
push
int3
jo
dec
fbld
add
test
xlat
mov
nop
mov
sbb
pop
jge
in
xchg
daa
add
test
loope
pusha
sub
outsl
out
add
or
fdivp
jmp
mov
aad
aad
cmovae
lret
lcall
out
cmp
or
jae
icebp
cmpsl
repnz
fsubrs
mov
sbb
pusha
sbb
aas
rcrb
xchg
mov
pop
or
xor
imul
insl
sub
ljmp
mov
mov
push
adc
fildll
lods
mov
daa
mov
sbb
lock
repz
jo
inc
ljmp
cmp
popa
cmp
in
sub
lret
xchg
rorl
sbb
inc
sub
xchg
test
lahf
lret
add
mov
inc
and
sahf
mov
addb
lock
stos
shlb
dec
xor
bound
mov
jg
rcl
test
add
mov
xor
mov
repz
std
mov
or
cmp
lea
call
mov
clc
xchg
push
xor
xor
mov
push
stc
and
adc
adc
lds
jno
xchg
popa
xchg
dec
addr16
arpl
xor
jae
cmc
fucom
fsubrp
sbb
addr16
outsl
repnz
icebp
sbb
cld
or
xchg
dec
mov
xchg
pop
repnz
pop
insb
push
inc
test
outsl
jno
mov
push
push
sub
mov
int
and
lcall
mov
mov
stos
jp
ljmp
mov
xchg
dec
mov
imul
mov
repnz
sub
ljmp
test
xor
dec
jae
shll
mov
or
push
jmp
aaa
mov
xor
scas
repz
adc
jns
lods
out
jnp
sbb
sarb
hlt
aam
or
mov
in
cmp
sub
data16
add
adc
adc
xor
sub
push
inc
sub
sub
inc
cmpsl
mov
xchg
sub
ficompl
or
sbb
enter
cli
in
in
dec
stos
outsb
adc
mov
stos
mov
mov
test
je
mov
lock
clc
and
mov
xchg
jecxz
adc
lea
xchg
test
in
out
mov
and
int3
inc
aas
pop
mov
jmp
data16
xor
pop
cmpsb
xor
loop,pn
xor
pushf
popa
incl
sahf
adc
popf
push
cmp
cltd
pop
nop
mov
push
imul
cmpsl
pushf
sub
fisubrs
cld
negb
aam
jo
lcall
shrl
sub
mov
push
imul
les
lea
lcall
pop
ficoml
int
orps
push
rolb
out
mov
mov
and
sti
pop
stos
sub
cmpsl
mov
div
out
and
andb
jo
cmp
sbb
adc
imull
lret
jmp
dec
mov
push
and
inc
aam
sub
mov
dec
mov
in
sbb
xchg
jbe
mov
out
out
mov
addr16
pop
push
fidivrl
xchg
movsl
push
mov
jmp
ret
add
shrl
aad
sub
popf
mov
sti
sub
rolb
in
dec
dec
sub
mov
loope
lahf
movsl
aam
mov
shl
aam
xorb
add
scas
mov
imul
ret
in
lods
out
sub
adc
mov
xchg
cltd
insl
jg
cmp
in
mov
popf
fistps
pop
pop
jo
adc
mov
lahf
adc
data16
popa
cmpsl
dec
mov
subb
popl
cmc
push
jae
into
and
std
or
leave
pushf
test
and
mov
jb
jne
pop
cld
push
sub
and
adc
ror
inc
aaa
mov
or
scas
jp
jns
mov
mov
adc
jl
cmp
cmp
clc
repz
cmp
inc
outsb
in
stos
fnstenv
daa
aam
imul
mov
adc
sub
mov
or
addr16
pushf
int
scas
sar
sub
and
jno
in
repz
pop
mov
mov
call
rcrb
lds
insl
or
adc
ss
out
movsl
bndstx
int3
cwtl
gs
or
daa
or
arpl
cmp
fidivrl
insl
xchg
push
pusha
dec
inc
sbb
movsl
fsubs
mov
push
adc
jbe
fisubrs
sbb
xlat
out
jge
insl
int3
js
mov
cli
xchg
push
cmp
mov
sbb
stos
sti
cwtl
int3
mov
mov
sti
dec
push
dec
pop
pushf
sbb
movsl
mov
in
sub
or
mov
jge
inc
mov
hlt
xor
sbbb
or
loopne
movsl
push
outsb
sbb
xor
adcl
les
inc
xor
mov
xchg
mov
jne
cwtl
int3
fcom
shrb
mov
dec
cmc
xchg
sub
sti
cld
push
mov
pop
lods
imul
pop
push
add
test
ret
ljmp
cmp
movsbl
cmpsl
mov
cltd
nop
cmp
jp
out
mov
push
loop
lcall
pushf
fcomps
cld
fistpl
mov
pop
mov
add
shrb
mov
cmp
add
or
fisttpl
lods
push
ficomps
add
xlat
push
pop
add
int
sbb
add
gs
or
add
in
mov
jl
imul
mov
push
imul
push
xchg
int3
xor
xchg
jge
and
xor
add
mov
xchg
orb
fwait
or
das
lds
inc
cltd
and
scas
icebp
repnz
hlt
push
xchg
inc
scas
sarb
daa
shll
sbb
mov
lea
jl
jne
imul
push
mov
add
cmp
out
insb
stos
in
mov
jbe
mov
or
lock
rclb
out
gs
cmp
sbb
loop
inc
pusha
xor
popf
mov
pop
adc
mov
add
push
jp
or
mov
dec
cmp
and
cld
cltd
into
adc
sub
jo
jne
pop
out
lods
fbld
add
xchg
mov
inc
std
shrb
fistpl
ljmp
dec
mov
repnz
repz
fcoml
cmp
xchg
xchg
mov
push
mov
sbb
push
mov
jmp
loopne
mov
cmp
and
movsb
dec
movsl
ret
jg
push
inc
std
jae
in
sub
adc
mov
in
pop
mov
adc
cmc
mov
xchg
rcr
in
push
hlt
and
ja
imul
dec
iret
jmp
mov
add
add
hlt
push
ljmp
mov
test
inc
inc
shl
add
fs
mov
sahf
push
adc
out
jno,pn
out
aas
push
hlt
int
aaa
xlat
mov
movsl
scas
fadds
test
fmul
push
jmp
ret
cmc
jb
jns
repnz
jmp
daa
sub
imul
int
push
ljmp
jbe
imul
nop
mov
fisttpl
adc
cld
lds
imul
ljmp
imulb
inc
push
icebp
test
pop
sub
test
lea
or
cltd
sbb
lods
xchg
stos
out
bound
imul
mov
cltd
iret
xor
mov
rcr
or
popa
inc
add
push
pop
jp
loop
fdivl
fwait
xchg
mov
or
shlb
fistps
add
data16
insb
sbb
push
jg
mov
outsb
pop
fwait
enter
or
test
js,pn
adcb
mov
aad
fisubrl
push
ret
jns
add
pop
jg
jae
pop
jl
add
mov
jge
outsl
lock
fnsave
into
cmp
out
cmpsl
movsl
les
add
mov
xor
pop
shrl
cmpsb
or
mov
and
and
jge
mov
adc
push
orb
inc
push
repnz
cmp
js
pushf
mov
leave
jecxz
mov
xor
mov
dec
inc
fwait
cmp
mov
stos
dec
inc
xor
and
jle
movsb
and
je
insl
das
mov
mov
pop
mov
insl
cmp
in
repz
add
pop
sub
push
and
aaa
mov
pop
lock
cmpsl
mov
sub
mov
into
ucomiss
push
sub
and
pop
pop
out
push
and
sub
sahf
out
jb
cmpsb
pop
sub
push
lahf
inc
mov
sbb
cmp
fsubs
push
xchg
leave
xchg
inc
sub
repz
cmp
xchg
mov
dec
push
xchg
push
jecxz
xor
push
es
gs
mov
frstor
push
lcall
push
cmc
jmp
xchg
push
mov
rorl
mov
mov
xchg
push
cmp
push
lea
repz
cmp
xchg
jbe
into
mov
mov
pop
push
inc
clc
es
dec
mov
ret
neg
pop
test
jbe
add
sar
xchg
popa
ret
jb
arpl
dec
inc
push
movsl
jp
mulps
sbb
jp
xchg
push
loope
ss
adc
enter
adc
add
jl
faddl
ret
fisttpll
lret
jae
dec
pop
lock
inc
mov
movsb
cmpsl
pop
jne
mov
xor
add
sbb
imul
sbb
xchg
fwait
enter
xlat
lds
xor
adc
sbb
jae
stos
adcl
and
mov
ja
and
imul
add
ret
dec
mov
fcompl
test
dec
pop
je
mov
fldenv
and
ss
or
sub
dec
idivb
xor
add
push
sarb
imul
loope
dec
and
addr16
mov
sti
inc
mov
aad
cvtdq2ps
mov
insb
jge
jo
mov
sub
fimull
pop
mov
iret
inc
pop
movsb
jno
repnz
iret
sub
insb
mov
lea
cmp
rorl
push
or
pop
push
lds
push
mov
jne
sub
sbb
xor
xlat
xor
lret
add
mov
divb
xor
push
ror
sbb
push
sub
and
icebp
popa
dec
cmp
movsl
adc
out
push
dec
aad
jp
ret
or
push
mov
and
cmpsb
stos
or
popf
dec
cwtl
aam
jle
lret
and
out
or
repnz
or
clc
lret
adc
fistl
mov
dec
scas
add
push
pop
jl
mov
jl
add
das
fistpll
enter
jnp
dec
add
add
and
mov
arpl
xchg
out
xchg
push
imul
cwtl
inc
mov
cmp
cmp
xorb
jge,pn
dec
jb
cmpxchg
add
mov
cmc
mov
ret
and
jp
sub
cmp
xchg
roll
fsts
jg
arpl
mov
jno
sbb
cld
addr16
aaa
and
pop
jae
mov
mov
push
or
das
incl
add
scas
mov
loopne
jp
data16
movsb
js
in
sbb
pusha
and
sarl
xchg
scas
xor
mov
out
incb
popf
mov
or
call
jns
and
lret
fnstcw
out
mov
dec
jecxz
leave
add
dec
xchg
inc
jle
xor
loope
popa
push
push
loopne
inc
leave
push
out
sbb
add
and
push
dec
shlb
mov
xchg
push
scas
pop
inc
and
push
in
pushf
sbb
sbb
es
xchg
jge
mov
test
sbb
mov
cmp
cs
push
jnp
xor
hlt
out
out
enter
or
rcrb
lock
lcall
sbb
jecxz
orl
cmpsl
cmovs
sbb
mov
add
fdivrl
je
jne
xchg
fisttpll
inc
js
in
mov
xchg
arpl
mov
in
test
out
enter
ret
out
inc
call
xor
ds
cli
ljmp
shll
icebp
push
and
cmp
sti
add
mov
mov
enter
cmp
imulb
dec
cs
xor
je
sub
dec
outsl
xchg
push
xor
call
mov
std
sub
in
pop
pop
jp
jp
add
cwtl
loopne
rolb
xchg
add
adc
je
jno
mov
loopne
mov
add
les
stos
adc
js
test
jl
pop
mov
mov
ret
or
in
mov
sbb
mov
test
lret
mov
mov
cmp
pop
push
push
mov
sub
or
lret
jl
mov
bound
in
or
stos
jl
mov
mov
cs
loopne
sbb
ret
xchg
and
mov
lods
sub
aaa
mov
pop
dec
sub
push
lcall
mov
sbb
jp
xchg
jns
imull
cmpsl
jae
les
outsl
fmuls
mov
mov
fwait
daa
andb
pop
cmc
aad
jnp
outsb
dec
push
aas
xlat
cmp
xor
jp
shlb
adc
pop
leave
jmp
sub
cmp
sub
mov
stos
mov
adc
jnp
scas
imul
inc
xor
or
jg
sbb
xor
sbb
sarl
jl
mov
cmp
es
scas
je
out
xchg
idivb
mov
push
inc
lods
jl
je
notb
mov
sub
movsb
enter
in
sub
add
mov
fcmovnu
inc
call
loopne
std
push
insl
or
imul
pop
addr16
xor
aaa
or
repnz
lret
outsl
jns
push
les
pop
repnz
xchg
jmp
mov
in
pushl
jl
mov
xchg
cmp
ja
out
jno
test
adc
sub
jp
and
jle
cmpsb
push
test
sub
aad
cmp
cwtl
dec
mov
mov
mov
out
inc
insl
adc
testb
iret
stc
bound
pop
lret
sbb
mov
xorl
test
repz
adc
pop
pop
in
push
in
xor
cmp
enter
and
lods
imul
xor
in
adc
inc
pop
shl
inc
cltd
insb
lret
in
dec
into
or
inc
test
jecxz
dec
fwait
add
pop
mov
or
rcrb
jl
jecxz
xor
push
hlt
nop
jl
push
ret
cs
lock
hlt
stos
dec
jae
mov
and
aaa
out
push
sarl
aam
movsl
xchg
pop
xchg
in
inc
es
sub
push
and
add
jge
notl
push
sub
shlb
sub
ret
test
lea
fldcw
popf
stos
jb
scas
daa
sub
cmp
sbb
dec
insb
xchg
cmc
or
xchg
lret
mov
xchg
adc
mov
pop
loope
std
loope
rcll
xchg
cmp
fs
xchg
pop
call
and
cltd
sub
xchg
fists
fs
jmp
bound
inc
sub
negb
addl
ja
cmpl
leave
aam
mov
les
xchg
xchg
mov
xchg
ss
outsl
push
clc
sub
test
add
fdivr
int3
stos
insb
pusha
movsb
jns
inc
sbb
adc
aas
rcrl
mov
movsb
xor
sbb
inc
adc
testb
jle
daa
rep
cli
test
sub
mov
or
shlb
sbb
repz
and
arpl
movsl
stc
dec
or
inc
push
jne
lea
mov
test
and
xchg
sbbl
notl
dec
ss
adcb
push
cmpsb
xchg
je
cld
addr16
dec
pop
inc
xchg
es
mull
rcrl
negl
add
mov
and
push
and
jb
or
icebp
ss
mov
add
imul
xchg
inc
or
in
inc
scas
sub
xor
or
cmc
xchg
hlt
inc
ret
adcb
lret
lahf
sub
mov
or
loop
cmp
enter
in
adc
pop
out
pop
imul
cmc
shrl
imul
lods
stos
shlw
fcompl
iret
mov
call
out
push
sub
in
fisubs
int
pop
push
test
loopne
insl
ret
jno
imul
adc
sbb
push
lds
push
popf
fidivrs
pop
sub
cmp
mov
dec
int
sub
lahf
hlt
sbb
outsb
mov
popl
mov
inc
mov
xor
ds
pop
push
neg
mov
stos
jecxz
fnstenv
mov
je
jle
xor
lods
pushf
js
aad
sub
mov
ret
mov
sub
loopne
jp
out
in
xor
fs
sbb
cs
js
in
imul
cltd
push
clc
cmpl
push
loopne
ja
mov
incb
imul
mov
loopne
divl
lcall
lods
xchg
mov
rorb
xchg
push
jle
mov
clc
mov
dec
dec
int3
mov
add
movsb
repnz
repz
mov
ret
aas
test
push
mov
shll
dec
xor
fdiv
xor
cmp
sub
or
in
sub
jbe
xor
aaa
jns
in
imul
push
xchg
incl
jmp
pop
jno
ss
stos
fimull
sahf
aaa
push
lcall
jmp
add
cmc
and
fwait
pusha
mov
stos
pop
les
jno
jns
xchg
push
xor
xor
pop
sub
dec
leave
or
into
mov
xchg
xchg
adc
cmp
btc
icebp
add
das
inc
and
fisubrs
cmp
mov
movsl
xchg
fcoml
inc
xchg
mov
aad
lahf
sbb
and
jo
or
push
add
or
adc
bound
mov
mov
out
leave
xchg
testl
iret
xor
mov
mov
mov
inc
lea
jb
and
pop
adc
mov
or
push
mov
cs
jle
mov
sar
cli
pop
inc
add
mov
cs
pusha
mov
insb
mov
out
insb
aam
scas
jnp
aaa
repz
test
inc
cmp
into
clc
sbb
in
sbb
jb
xchg
mov
cmp
mov
outsl
pop
adc
xor
jl
add
sub
movhlps
jecxz
xchg
push
lods
mov
cmpsb
stc
in
scas
mov
push
cmp
adcl
and
psllw
fs
xchg
es
das
lds
push
and
cld
add
std
inc
iret
pop
lods
in
and
and
clc
push
lds
jne
popf
mov
adc
cmp
popf
sbb
lret
lcall
pop
shl
sbb
fimull
outsl
jae
jmp
scas
and
push
adc
push
sbb
dec
lea
xchg
loope
add
mov
pop
mov
jl
rclb
jl
es
or
sbb
jae
sub
stos
inc
popf
jle
je
cli
cltd
out
lods
pop
adc
mov
xchg
pop
ret
sti
loope
sub
out
push
xor
push
pop
mov
inc
out
dec
addr16
cld
stos
add
stos
cwtl
jmp
fnstsw
inc
sub
inc
mov
add
jecxz
mov
push
sbb
leave
add
data16
sbb
xchg
mov
pushf
push
fisttpll
fistpl
cmpsb
xchg
jne
and
adc
shrb
mov
xchg
lret
iret
aaa
push
push
call
cli
or
outsb
adc
mov
and
imul
dec
and
aam
cmp
rorb
repnz
fldt
lds
dec
cmp
scas
adc
repnz
mov
scas
outsl
dec
stos
cli
fmull
das
call
pop
inc
add
movb
je
jbe
je
out
mov
push
dec
mov
and
insb
arpl
mov
dec
dec
mov
imul
fcmovnb
mov
pop
test
scas
fmuls
and
xor
inc
adc
lcall
add
roll
loope
lea
add
fsubrl
adc
int3
movsl
xchg
icebp
cmp
into
pop
pop
icebp
out
push
sub
push
xchg
xchg
jp
xchg
push
inc
sbb
sbb
in
clc
or
imull
jecxz
aam
mov
mov
mov
je
sbb
pop
push
cmp
out
push
fs
out
pop
xor
xchg
shll
hlt
lret
mov
scas
lods
jmp
pop
mov
in
addr16
mov
xlat
loope
add
mov
call
scas
ja
cltd
test
dec
adc
pop
gs
stos
stos
popa
or
sbb
pop
dec
test
dec
push
sbb
pushf
outsl
mov
sbb
push
xor
in
fldl
aad
jmp
mov
and
add
loopne
mov
mov
stc
dec
jo
xlat
lahf
dec
sbb
cmpsb
clc
sbb
iret
xchg
outsl
test
addb
dec
flds
movsl
sub
subl
cmp
sub
ficompl
jge
into
fiaddl
cmp
jg
mov
xor
xor
ror
mov
in
mov
mov
popf
dec
lods
lahf
arpl
jle
adc
push
rorl
les
inc
jae
sub
xchg
stc
out
cmp
int3
insb
adc
in
shlb
mov
adc
jno
adc
mov
jmp
jg
pop
adc
push
mov
and
or
or
outsl
jb
xor
out
sub
scas
rclb
data16
out
aam
lock
ss
xchg
push
xchg
js
popa
es
inc
pushf
orb
xchg
cltd
adc
xor
shlb
pop
sbb
cli
mov
insl
xor
leave
movsl
add
push
enter
dec
mov
jle
fcomps
leave
pop
repnz
jge
pop
push
and
rolb
dec
lret
adc
repz
or
stos
frstor
xlat
insb
sarl
clc
mov
stos
add
dec
lea
jae
popf
xchg
enter
add
inc
in
or
xor
mov
cltd
int3
inc
shrb
sub
test
inc
sahf
out
mov
icebp
outsb
cli
push
fs
mov
mov
ret
sub
daa
fiadds
fistl
ret
shl
shlb
mov
lods
lds
in
xor
cmpsb
lcall
sbb
push
dec
enter
add
cmp
test
int3
data16
pop
pop
push
dec
cwtl
fucom
dec
jns
movsb
pop
aaa
inc
xchg
jmp
cmp
outsl
popa
sbb
or
xor
out
les
mov
or
cmpsl
cli
nop
leave
pop
hlt
or
and
or
xchg
push
lret
sarb
fildl
jecxz
out
add
arpl
xor
sbb
dec
fsubr
or
push
arpl
test
push
das
push
das
adc
sbb
dec
bound
cmp
out
out
inc
bound
popf
xor
add
and
pop
shrl
cmp
addb
jg
mov
orl
aaa
lock
mov
push
and
jae
push
dec
cmpsl
sahf
cltd
iret
in
fcoml
cmp
xor
sub
adc
shl
and
push
pusha
mov
test
xor
xchg
or
rcrl
rolb
aas
daa
inc
pop
stos
dec
mov
fldcw
pop
mov
push
push
stos
xlat
mov
jnp
subb
cltd
add
dec
lcall
inc
orl
cmp
jno
mov
mov
mov
add
jge
ret
inc
dec
aaa
mov
add
nop
push
imull
lret
dec
iret
inc
lahf
imul
ffree
repnz
xor
call
jne
rcrb
jno
stos
in
xchg
mov
adc
hlt
jnp
out
sbb
scas
ss
fwait
cmp
or
dec
pop
loope
lock
lock
aad
int
pop
adc
sbb
jae
push
mov
add
iret
lock
mov
jnp
mov
cmp
adc
loope
xchg
sub
inc
and
push
dec
pop
call
cmp
adc
shll
mov
cli
int
cmc
mov
std
cmpsl
aam
pop
mov
mov
and
xchg
inc
stc
jbe
sbb
leave
hlt
dec
imul
in
pop
in
fcom
jge
and
mov
movsl
or
mov
pop
sahf
aam
pop
popa
xchg
mov
in
in
dec
out
mov
inc
mov
pop
push
and
add
and
loop
jno
or
test
add
push
xor
out
mov
mov
mov
cmp
dec
outsb
push
cld
xor
cmp
add
outsl
test
inc
xor
xchg
popf
ds
xor
inc
outsl
pop
pavgw
sti
idivl
xchg
gs
movsl
inc
sub
jl
testb
xorl
outsb
rcll
dec
push
push
hlt
or
in
xchg
shlb
jo
lods
rcrl
shr
xchg
insb
lds
adc
sub
pop
add
cs
and
sbb
mov
xchg
dec
out
test
std
inc
and
in
aaa
jns
call
fisttpl
sarl
lock
sbb
bound
mov
sub
dec
mov
jne
shll
sbb
pop
jae
adc
adc
adc
lock
pop
xchg
mov
stc
scas
pop
loope
push
pop
fwait
inc
mov
in
jp
ret
inc
inc
pop
mov
jnp
cmp
divl
push
insb
ret
pop
mov
ret
lock
repz
lret
xchg
cmp
pop
xchg
rcrb
mov
int
aas
dec
lods
cmpsl
jmp
scas
pushf
aaa
add
fs
fsts
sbb
lock
mov
in
jl
jmp
add
jne
inc
pop
js
dec
rolb
cmpsb
cmpsb
pop
xor
pop
inc
shrb
mov
rcll
into
sbb
jl
testl
cmp
frstor
fsubrs
sbb
jne
dec
adc
les
into
push
jnp
xchg
in
lds
mov
mov
lret
jge
dec
subl
les
aas
push
pop
cmpsb
negl
lods
push
in
roll
xor
xchg
iret
lcall
push
jno
sub
clc
jg
inc
adc
xor
out
xor
cmp
dec
dec
arpl
mov
ds
daa
adc
sub
aas
int3
push
imul
scas
add
movsb
mov
lea
inc
icebp
pop
sbb
sub
adc
pop
je
inc
mov
jno
mov
clc
data16
mov
sti
iret
imul
sbb
maxps
push
mov
cmp
xor
clc
cld
add
out
mov
xchg
icebp
sbb
lcall
in
mov
js
xchg
pop
xchg
std
das
dec
mov
adc
test
cmc
lods
inc
divl
sbb
fbld
mov
mov
and
jb
cmp
inc
cmp
jns
movsl
xor
in
mov
xchg
xlat
jns
mov
cmp
adc
popa
push
adc
out
xchg
rsm
dec
gs
fisubrs
std
xor
mov
shlb
call
inc
out
andb
xor
ret
add
repnz
jo
jg
adc
mov
lcall
sti
sub
andl
fstpt
int
std
js
stos
and
lds
into
dec
aam
xor
inc
fs
loopne
jge
ljmp
jns
loop
test
sub
in
mov
lahf
test
lods
mov
push
cmc
lret
rclb
stc
imul
cmp
sub
xchg
mov
addr16
xchg
xchg
adc
sbb
push
ss
sub
mov
lock
mov
cmp
mov
lcall
fwait
scas
jg
mov
mov
into
in
sub
xor
rcll
scas
cmpl
int
or
loop
hlt
adc
and
imul
fdivrs
aaa
jmp
ficoms
jb
adc
mov
jp
xchg
fiaddl
lcall
or
lcall
mov
pop
push
loopne
pop
xor
or
rdpmc
daa
xorl
ja
iret
out
xor
sub
ljmp
xor
adc
ja
jne
cmpsl
fsubs
xchg
dec
dec
orl
hlt
adc
or
cmpsb
enter
outsl
push
and
ret
stos
xchg
out
mov
enter
mov
enter
mov
inc
xlat
je,pt
cmp
inc
lret
or
mov
jb
mov
dec
cmp
mov
mov
sbb
sbb
ret
test
stos
pop
ljmp
cs
daa
xlat
cmpsl
cmp
rcrb
rcll
icebp
mov
jo
idivl
push
sbb
or
add
pop
or
push
test
data16
lea
pop
imul
pop
or
mov
and
mov
inc
add
jbe
enter
push
movsl
bound
or
and
es
or
pushf
and
jnp
mov
into
xchg
repnz
in
push
scas
in
les
popf
movsl
movsb
out
cmp
scas
lods
cld
fidivrl
push
ret
out
imul
adc
lods
mov
or
add
adc
out
addr16
lcall
data16
push
fwait
jno
cmp
nop
std
imul
addl
leave
xor
mov
sub
fistps
ljmp
mov
sbb
xchg
rcrb
ret
sub
pop
loope
shlb
es
xor
or
rcrl
mov
cld
mov
mov
dec
cmp
pop
xlat
add
and
sub
cmc
mov
dec
or
jmp
mov
movsl
push
mov
mov
arpl
mov
sub
or
lcall
incl
xchg
and
test
loop
mov
adc
xchg
adc
call
std
bound
lcall
sbb
xchg
mov
fwait
int
mov
jp
rorl
nop
popa
nop
or
sbb
fcomp
je
jns
in
divl
lods
push
and
lret
div
xchg
or
pop
mov
bound
mov
pop
push
int3
xor
fwait
add
mov
enter
sub
xor
mov
sbb
xor
sub
push
mov
jp
int3
or
movsb
pop
pop
jle
in
lahf
xchg
mov
xor
xor
mov
or
test
fstps
lret
push
jno
imul
or
adc
loope
fstpt
stos
sbb
pop
out
xchg
cmp
int3
orb
jge
lea
sbb
jns
adc
call
jo
pop
push
mov
push
inc
repz
adc
stc
loopne
adc
mov
jno
aaa
dec
push
push
and
mov
outsl
push
push
mov
in
std
mov
jne
cltd
sbb
sbb
mov
inc
mov
jge
mov
xchg
xor
hlt
push
imulb
add
into
lods
bound
jbe
aad
push
push
les
mov
inc
or
cmc
dec
sbb
andb
rcrl
mov
xchg
cmpsl
mov
js
sarl
mov
mov
mov
xchg
sahf
or
in
push
adc
fstps
and
and
ret
popa
fistpll
cmpsl
repnz
and
shlb
cmpb
sub
aas
inc
mov
call
or
sub
in
call
cmp
out
test
les
xchg
dec
pop
jmp
das
sub
ljmp
mov
test
pusha
dec
in
in
jl
mov
mov
insl
jae
add
lds
andl
test
mov
jae
xchg
cmp
loop
call
xchg
push
push
cmp
dec
inc
loope
cmp
pusha
mov
sbb
call
mov
cs
lret
adc
cmp
sbb
and
into
adc
xor
enter
adc
dec
rorb
incb
mov
push
lcall
add
movsb
idivb
imul
pop
lea
inc
xlat
mov
lods
push
xlat
jmp
inc
cmp
aaa
ret
rcrl
dec
dec
lods
mov
jp
and
xor
ljmp
pop
movsl
xlat
test
xor
mov
and
push
mov
adc
lods
xchg
and
mov
mov
and
enter
dec
pop
push
nop
add
out
inc
cmp
mov
roll
stos
mov
les
jb
jge
scas
mov
mov
out
or
mov
aam
sbb
scas
or
and
or
push
add
xor
adc
push
push
ljmp
push
jne
test
lods
push
lcall
mov
ret
inc
fnstsw
cmp
or
xor
lret
fwait
mov
push
out
mov
rcr
sbb
cmp
xchg
xchg
mov
fwait
inc
pop
insb
outsl
ja
xlat
mov
jp
jne
outsl
jmp
arpl
fcomps
aaa
out
xor
xor
pop
and
mov
and
js
insb
loopne
imul
dec
lcall
lods
loopne
sbb
js
sbb
xorb
cmpl
jno
fnstsw
mov
dec
pop
mov
sbb
sbb
fsubrl
lret
loop
fldl
ficompl
mov
into
mov
xchg
sub
outsl
jecxz
inc
dec
pop
dec
xchg
adc
je
pop
adc
push
mov
mov
cmp
movsb
sub
add
daa
aad
ret
push
fistl
test
ret
jb
add
cltd
sti
inc
nop
jae
cmp
mov
mov
xor
inc
sub
cmp
lods
xor
ds
or
xlat
xlat
cmp
pushf
ret
mov
adc
and
mov
and
cld
and
lea
push
push
sbb
pop
xor
sub
pop
sbb
push
cmp
push
or
filds
pop
int3
push
inc
mulb
shll
jp
enter
push
xor
jp
shlb
aad
cwtl
dec
xchg
ficoml
adc
or
jae
dec
or
or
adc
xchg
lds
fldt
xor
cmp
imul
jle
adc
insl
jp
xchg
mov
xchg
imul
cmpsl
or
arpl
inc
push
loope
adc
xorb
imul
outsb
mov
lock
mov
or
add
pusha
push
push
xorl
cmp
test
adc
sti
sub
pop
jle
mov
lret
insl
jmp
aam
lds
jb
repz
mov
xor
mov
test
push
cmp
xchg
push
leave
mov
jno
shll
mov
push
xchg
fldenv
jmp
test
lahf
pop
into
dec
cwtl
mov
adc
mov
mov
and
call
mov
out
jg
fwait
clc
mov
pop
aad
fnstsw
popf
dec
leave
imul
rclb
out
insl
xchg
rcrl
aad
ljmp
and
int
adc
mov
test
mov
adc
mov
sahf
es
jns
ror
push
sbb
loopne
sbb
lods
nop
cmpsb
sub
dec
cltd
and
rcll
ja
shlb
leave
cld
cwtl
jle
mov
mov
and
rcl
ljmp
aas
in
mov
cmp
or
jecxz
push
sbb
mov
fldl
insl
mov
into
pushf
jns
lods
push
test
sbb
mov
jo
lahf
sub
sbb
xchg
call
sub
jbe
and
mov
fs
jmp
mov
pop
in
in
sbb
repnz
push
nop
xchg
sbb
mov
scas
test
insb
es
test
arpl
lods
mov
xor
jge
cmp
andb
push
adc
ja
dec
sbb
mov
sarl
jno
scas
pushf
lret
jl
int3
xor
addr16
shll
sahf
test
sub
cmpsl
pusha
pop
and
ret
adc
xchg
and
pop
adc
or
push
mov
add
or
popf
push
push
sub
jmp
cmpsl
mov
xlat
mov
pop
mov
jmp
sti
arpl
je
or
cmp
sub
adc
mov
sub
sub
xor
mov
out
lock
push
inc
ret
lds
push
jg
out
or
and
imulb
bound
sub
or
xor
push
push
movsl
pop
cmp
push
mov
outsl
cmp
test
inc
add
sub
cmp
test
or
mov
mov
xchg
push
mov
xchg
ljmp
lds
aaa
xor
and
out
arpl
in
mov
jb
sbb
data16
jge
mov
and
pop
js
or
sbb
add
into
mov
adc
push
shl
fs
mov
data16
cld
imul
inc
les
loopne
cwtl
cmc
pusha
mov
call
push
and
ret
pop
adc
fisubrs
sbb
dec
in
sbb
dec
bound
and
xor
push
das
mov
ficompl
and
xlat
xor
add
decb
cwtl
cwtl
std
inc
jbe
aas
movsl
outsb
push
push
stos
mov
mov
push
adc
mov
or
adc
jae
rcll
xor
jae
mov
movsl
outsb
insl
adc
iretw
inc
fnstcw
jmp
andb
lods
mov
rcrb
sahf
jl
jnp
fildll
and
and
jmp
dec
sahf
jg
dec
in
scas
lea
sahf
leave
or
push
mov
jl
push
neg
out
sub
ror
pop
pop
sbbl
lock
clc
repnz
mov
dec
cmpsb
sti
xchg
xchg
lret
jecxz
sub
lods
fbld
pop
pusha
jae
test
push
incl
xor
push
pop
fadds
aam
dec
aaa
adc
or
or
xchg
scas
sbb
fadds
or
dec
inc
xchg
jmp
sbb
ljmp
jne
xlat
aam
stos
sub
scas
inc
jae
out
push
mov
xchg
adc
dec
and
mov
int
scas
sahf
pop
cmp
or
sbb
cs
testl
mov
arpl
or
add
add
push
cmp
jecxz
daa
aad
outsl
enter
xor
shlb
mov
lods
jmp
xor
and
mov
pop
pop
pop
fiadds
pop
cwtl
mov
in
add
es
xchg
and
push
xchg
xor
ja
mov
mov
add
addr16
jg
sbb
fisubs
and
jo
loop
sahf
scas
pop
rclb
xor
lods
ljmp
pop
push
or
pop
jns
cmpb
lahf
mov
adc
sti
mov
adc
fdivrl
stos
hlt
fld1
out
and
aad
stc
das
outsb
push
in
xor
aas
jno
pop
ficoml
mov
cmp
jp
sub
lock
iret
sti
mov
sahf
hlt
ret
xchg
pop
sbb
mov
pop
scas
lea
xor
je
mov
ffreep
iret
imul
cmp
xor
fsincos
xchg
jb
icebp
mov
mov
mov
jns
xorb
testl
push
rorb
sbbb
in
or
push
insl
xor
cmp
dec
stos
and
shrb
mov
int3
inc
incl
pop
sub
fwait
andl
jne
cld
sti
mov
imul
pushf
loope
cli
and
ret
cmp
mov
and
leave
mov
cmpsl
sbb
pushf
ficompl
mov
lock
je
add
faddl
arpl
loopne
and
xor
call
stos
test
jne
mov
inc
jecxz
lret
in
punpcklwd
testl
call
sub
mov
adc
adc
arpl
orl
lcall
push
mov
mov
inc
test
cwtl
lret
jo
andl
mov
icebp
mov
mov
imul
sbb
mov
or
into
mov
cltd
dec
outsb
and
nop
sub
push
sbb
sbb
cld
pop
mov
inc
inc
or
cmp
xor
mov
out
mov
cmp
cltd
and
dec
inc
mov
lahf
popf
loopne
push
cmp
xor
xchg
and
loopne
cli
cwtl
iret
add
pusha
mov
lods
xor
cmp
loop
mov
in
movsl
xor
or
push
nop
sti
iret
inc
or
and
adcl
rcrb
popf
jnp
mov
cwtl
das
dec
loope
xchg
push
jge
sbb
push
cmpl
add
pop
xchg
jl
out
mov
mov
movsl
insb
dec
mov
mov
testl
mov
and
cmc
push
repz
pop
mov
fwait
pop
lods
jae
xchg
push
negl
push
pop
mov
cmp
jmp
leave
sbb
push
lahf
daa
mov
mov
jne
jo
dec
add
int3
or
imul
adc
imul
lcall
adc
cmpsl
adc
and
leave
adc
mov
jp
add
lock
sbb
lcall
or
pop
mov
inc
fdivrs
mov
imul
mov
or
xchg
mov
lods
cmpl
std
cmp
hlt
pop
adc
cmp
jl
ret
daa
push
fnstcw
lds
push
cwtl
mov
xchg
sub
cmp
test
and
mov
enter
loop
mov
xchg
fabs
dec
out
mov
mov
or
pop
enter
pop
in
mov
fstpl
sarl
fsub
cmp
aam
not
adc
sti
push
call
pop
cmpsl
stc
subl
mov
push
sbb
dec
cmp
in
sub
into
mov
sub
sbb
pop
cwtl
xor
xchg
xchg
mov
push
mov
test
adc
sbb
aam
push
cmp
xchg
fdivrl
in
push
stos
mov
cmp
pop
shl
sub
lea
popa
leave
pop
jae
mov
icebp
cwtl
mov
lds
mov
xchg
fs
jge
les
dec
sbbl
out
fisttpl
xor
xchg
or
sbb
pusha
and
jne
jne
xor
pop
jle
adc
jno
cmpsb
inc
xor
test
sub
xor
add
ljmp
xor
pop
jge
imul
push
or
dec
add
jg
jmp
sub
push
dec
dec
mov
dec
movsl
xchg
sarb
ljmp
push
orl
inc
xor
sti
outsb
loopne
pusha
sbbb
loop
sbb
mov
jno
xorl
fcmovb
push
flds
sahf
adc
sbbb
mov
xchg
sbb
negl
xchg
into
mov
mov
mov
cs
adc
dec
daa
jbe
bound
jecxz
or
stc
test
adc
mov
cmp
xor
pushf
adc
int3
add
pop
ss
push
imul
xchg
std
push
or
xor
jge
inc
daa
jl
cmp
inc
mulb
mov
xlat
lea
adc
or
cmpsl
fbstp
pop
loop
fistpl
test
or
mov
dec
out
jo
out
out
fwait
push
movsb
aam
arpl
push
je
cmp
mov
clc
jb
test
mov
lea
loope
mov
mov
fidivs
fld
test
mov
and
mov
popw
loopne
std
push
and
fsubrs
pop
sub
popf
mov
test
insl
ss
ss
jg
fidivrs
imul
push
push
add
mov
push
sti
mov
dec
adc
push
movsl
sarb
and
sub
mov
sbb
jb
push
shll
sbb
insl
addr16
repnz
push
imul
xchg
add
out
test
hlt
cmc
int
mov
lret
push
add
icebp
into
or
adc
mov
gs
lods
test
loope
push
test
push
or
iret
sbb
sbb
cmp
inc
adc
sbb
jbe
mov
xor
xor
cmp
xlat
ss
pop
pop
sbb
xlat
mov
and
mov
std
inc
lods
decl
fcomps
jp
test
adc
movsl
ret
aad
xor
rcrl
jno
notb
pusha
pop
pop
push
pop
push
push
or
mov
pop
imul
leave
mov
insl
iret
mov
adc
arpl
lock
stc
push
cltd
mov
sub
arpl
sbb
mov
aam
in
push
adc
and
popa
pop
cwtl
cmp
and
cs
xor
out
sarb
pop
or
repnz
mov
rorb
xchg
outsb
js
jae
ja
push
jnp
sahf
scas
std
lahf
fwait
push
in
push
push
lods
cmp
cmc
call
sti
bound
pop
dec
add
adc
cmp
into
cs
pushf
and
lods
sbb
and
std
mov
push
push
in
sub
iret
ret
shrb
cmp
out
adc
adc
jns
fstps
dec
fstpl
mov
jecxz
shlb
cmp
ror
and
jb
mov
lret
das
xchg
mov
ljmp
aas
cmpsl
adc
rolb
sub
loop
ljmp
leave
pop
jae
std
pushf
int3
mov
push
lods
aaa
xchg
js
mov
add
ja
add
inc
or
mov
inc
sub
inc
lea
sbb
jmp
js
xchg
aaa
scas
xor
rorl
push
adc
push
and
adc
or
stc
test
rolb
js
popf
push
sbb
dec
scas
loop
add
cmp
dec
cmp
inc
inc
pushf
sub
scas
pop
mov
stc
fbstp
mov
lock
lahf
push
loope
jle
mov
gs
jmp
cltd
cld
out
lods
inc
mov
and
xor
push
stos
pusha
adc
pop
std
pop
mov
and
ret
inc
pop
sub
repz
stos
add
outsb
cld
fsubrl
aas
adc
inc
inc
cmpsb
xchg
rcrl
mov
int
repz
stos
fcomp
fimull
in
xchg
mov
sbb
leave
repz
xchg
lret
das
cmp
sbb
mov
push
cmc
mov
bnd
xor
inc
ret
rcll
sbb
xchg
rcl
in
insl
and
pop
cmc
mov
rcr
loopne
inc
cld
push
adc
pusha
addb
mov
mov
loope
or
dec
dec
in
insl
jnp
cwtl
loope
dec
pop
inc
test
insb
mov
lock
addr16
xor
mov
cmp
add
push
mov
les
mov
es
add
jge
mov
add
rol
lcall
add
or
sub
fsubrs
xchg
adcb
or
scas
dec
sbb
insb
push
sbb
cmpsb
mov
xor
xor
outsb
push
enter
and
push
lcall
push
subb
inc
and
call
dec
or
dec
fwait
ss
add
mov
int
mov
pop
fistpl
movsl
sahf
repnz
sbb
mov
pop
xchg
cmpsl
sbb
lods
sub
ss
mov
sbb
mov
imul
stos
data16
in
int
jecxz
xlat
rcll
jmp
fists
add
in
push
aaa
insb
cmp
fisttpll
push
push
call
add
inc
or
cli
mov
loopne
mov
xchg
adc
mov
push
adc
sar
stc
pop
push
cmc
arpl
jnp
push
call
push
insl
jmp
out
call
dec
nop
call
xor
mov
cwtl
addr16
xor
inc
in
add
mov
mov
inc
cwtl
lret
lods
ret
test
xchg
aas
or
sbb
sub
lret
test
js
sub
jae
cltd
dec
mov
int
jbe
jp
sbb
adc
shlb
jno
addl
mov
fwait
out
mov
aas
clc
push
movsb
push
dec
push
lds
imul
jmp
rcll
inc
out
mov
mov
pop
add
out
test
add
cmpsb
call
and
xor
adcb
mov
mov
test
pop
inc
sub
inc
jnp
sbb
dec
and
mov
and
sbb
repz
jae
dec
mov
aas
or
in
or
sub
lock
insb
xlat
es
out
push
pop
mov
or
xor
mov
adcl
push
jo
mov
push
aaa
test
push
and
out
lret
mov
push
jbe
lods
mov
ret
inc
cmpsb
inc
jbe
mov
mov
in
xorb
sub
mov
repz
push
cld
or
adc
je
xor
lcall
cmp
pop
ficompl
cs
mov
mov
sbb
inc
inc
mov
mov
lock
xchg
out
mov
dec
add
push
dec
pop
push
out
cmp
imul
out
dec
dec
jbe
push
int3
fcompl
mov
push
aaa
xor
rorl
jnp
fwait
mov
ds
scas
imul
insb
adc
jl
in
push
jle
out
leave
cmp
leave
xchg
jnp
jp
xchg
daa
mov
popa
push
push
mov
pop
sbb
das
shlb
gs
in
nop
arpl
sbb
xchg
movsb
mov
inc
push
cwtl
push
and
mov
out
call
repz
xlat
imul
sub
sub
sub
and
into
xor
enter
and
mov
xchg
and
push
scas
rcrb
xchg
push
stc
mov
or
mov
jl
inc
repnz
pop
xor
inc
stos
jmp
mov
sti
sbb
xchg
mov
daa
mov
cmp
push
ds
and
jae
jae
cmpsl
in
test
frstor
orb
lds
nop
push
lret
ss
inc
dec
imul
cld
repnz
adc
jg
repnz
mov
adc
sub
add
fmulp
or
adc
or
cmc
in
pop
cld
rorl
scas
cmpsl
mov
pop
pusha
dec
inc
adc
mov
push
stc
ds
call
js
dec
sbb
cmc
adc
mov
xchg
adc
popa
sub
rcrl
push
adc
icebp
rorb
lret
mov
cmp
out
movsl
xlat
mov
mov
test
scas
mov
sub
inc
lds
bound
shrb
andb
mov
test
sti
or
dec
xchg
adc
inc
cmpsl
cmpb
cltd
stos
test
mul
dec
and
xor
and
sbb
aaa
scas
add
lret
xor
xor
addr16
mov
xchg
cmpl
or
rolb
fisubrl
ljmp
test
test
jno
les
fs
jmp
adc
sahf
mov
mov
mov
pop
setb
jle
mov
arpl
jecxz
iret
dec
in
sarb
or
fwait
popf
shlb
cmp
orb
adc
push
add
mov
push
jp
add
xchg
lods
add
movl
jno
xlat
js
daa
jae
ret
sti
cmpsb
xor
insl
add
nop
rorl
insb
cmp
mov
ror
int
in
mov
divl
shl
jg
sbb
repz
pusha
xchg
dec
xchg
sub
std
into
aad
xchg
outsl
aam
pop
mov
andb
sbb
fiadds
mov
and
and
and
jne
pop
or
daa
hlt
add
mov
push
stc
jp
mov
add
sbb
jmp
cmc
lds
add
mov
inc
xchg
outsb
and
cmp
lahf
into
popa
dec
gs
jg
fsubrl
jp
mov
cmp
xorl
sub
mov
adc
push
fstps
cltd
lds
push
movsb
adc
mov
aad
xor
pop
sar
sbb
nop
push
xor
xorb
xchg
arpl
shr
and
inc
xor
pusha
mov
sbb
mov
add
add
loopne
sbb
cmp
in
mov
mov
sar
pop
inc
popf
int
movsb
icebp
mov
rcrb
enter
mov
jecxz
adc
std
scas
shrb
insb
mov
jb
sahf
mov
lock
mov
iret
mov
dec
fbstp
jp
fistps
sub
add
xor
adc
in
xchg
xor
adc
in
ja
push
sar
sub
mov
dec
test
mov
jp
into
and
sti
imul
sub
inc
mov
xchg
push
adc
orb
cltd
xorps
das
or
fdivrl
mov
push
sbb
inc
jno
fs
mov
aam
repnz
add
mov
xor
mov
mov
hlt
mov
xlat
mov
jmp
out
stc
mov
in
sbb
mov
movsl
rolb
fiadds
fisttpl
fidivs
inc
pop
push
sti
pop
repz
pusha
cmp
addl
pop
dec
pushf
xchg
lahf
mov
call
inc
cld
cmpsb
xchg
sub
rclb
popa
nop
das
sub
jns
loop
stc
bound
gs
or
xor
jae
imul
imul
movsl
sub
lea
xchg
xor
inc
ja
sub
addb
les
jmp
pop
xlat
lcall
xchg
or
out
inc
sub
add
arpl
mov
in
movsl
jne
mov
aad
adc
repnz
mov
pop
adc
jnp
mov
dec
in
nop
mov
inc
test
loope
push
outsb
pusha
enter
add
sbb
leave
das
es
dec
push
testl
outsl
mov
dec
xchg
movsl
lock
cmp
jle
sub
lds
mov
rorb
pop
je
inc
bound
lcall
xchg
jnp
lahf
mov
lret
pop
fs
fs
loope
jmp
test
pop
mov
mov
push
cmpsb
push
ret
fwait
xchg
or
sub
punpcklbw
subb
dec
scas
cmp
mov
lahf
push
jecxz
sub
cmp
sti
test
cwtl
mov
fists
sahf
loope
sbb
sub
push
mov
adc
sti
outsl
das
call
mov
push
mov
into
fwait
mov
insb
xchg
aad
popa
fmuls
sti
iret
sti
push
ljmp
cs
lods
pop
and
or
jb
out
push
movl
nop
imul
je
hlt
push
ds
jmp
push
inc
clc
das
add
pop
mov
icebp
addr16
dec
xchg
inc
fldt
or
xchg
add
xchg
or
into
pop
add
loope
mov
and
cli
shrb
lahf
mov
inc
rorb
dec
sbb
outsl
mov
or
into
lcall
icebp
clc
int3
push
fnsave
jb
sti
cmpsl
mov
cwtl
and
jge
leave
sbb
adc
notl
lods
repnz
jmp
or
or
call
lods
icebp
push
sbb
inc
hlt
into
pop
xchg
iret
mov
inc
add
pop
add
das
hlt
dec
fcompl
das
jns
idivl
mov
adc
mov
std
pop
xor
ja
neg
fwait
sbb
mov
sub
jb
xor
pop
xor
jl
fisubl
mov
insl
mov
dec
es
mov
incl
jecxz
pop
icebp
cwtl
jge
enter
movntps
sbb
or
rcll
rcrb
jbe
dec
fstpl
inc
mov
and
dec
jne
mov
dec
push
sarl
inc
out
rcl
jb
das
repnz
std
add
xchg
ljmp
add
mov
shrb
mov
cmp
shlb
fnop
ret
stos
mov
or
push
nop
loopne
loop
testl
fldl
cmp
leave
xchg
mov
or
insl
cmp
ss
clc
imul
mov
icebp
mov
mov
je
iret
mov
test
pop
mov
stc
sub
adc
lock
push
cmp
xor
ds
repz
push
inc
roll
lods
pop
cmp
jns
push
repz
dec
shr
aam
push
dec
xorl
dec
in
or
or
adc
push
sti
shll
mov
pop
sub
push
lds
mov
mov
xchg
aam
mov
jp
arpl
enter
into
jbe
cmp
fwait
add
outsb
mov
push
adc
jecxz
xchg
mov
sub
lahf
adc
and
pop
clc
lret
pop
shrl
xchg
cmp
fs
cmpsb
ret
dec
sub
arpl
sbb
mul
mov
push
sbb
test
dec
cmp
call
imul
cli
test
ret
or
pop
aaa
imul
sub
daa
pop
adc
int
cmp
out
mov
stos
aaa
add
add
xchg
add
cmp
pop
cld
aam
jns
adc
sbb
dec
out
pop
inc
adc
jp
aaa
mov
incb
mov
insb
mov
ret
sbb
and
fwait
lds
js
or
mov
cmpb
jmp
es
and
mov
je
dec
cmp
xlat
sarl
test
jle
stos
sub
mov
ljmp
lods
push
ljmp
movsb
inc
cmp
add
out
je
das
cld
rorl
repz
int3
push
in
mov
add
push
push
xchg
nop
rolb
fdivs
call
xchg
ss
mov
add
sub
outsl
adc
clc
js
les
dec
les
into
jle
incb
jbe
or
rorl
out
add
hlt
icebp
xchg
out
jne
mov
andb
test
mov
fs
cwtl
mov
sbb
mov
je
lcall
outsb
add
xor
mov
insb
push
push
cs
sbb
add
pop
lret
pop
gs
movsl
cld
xchg
sbb
jne
in
push
mov
xchg
inc
aaa
mov
jo
stos
pop
hlt
imul
pop
arpl
addr16
or
cs
shll
sti
js
shl
adc
and
jno
sub
outsb
jecxz
pop
cmpsl
dec
mov
stos
pusha
fldt
mov
mov
cli
mov
adc
pop
fwait
shrl
into
pop
and
jnp
les
mov
ret
xchg
or
hlt
push
dec
pop
lret
fcomp
enter
subl
add
in
imul
in
push
or
jp
dec
and
test
cmp
outsl
sbb
popf
andl
daa
dec
sbb
in
js
adc
dec
fnclex
sahf
jb
ss
xchg
fldcw
test
lahf
imul
enter
jo
data16
inc
dec
add
and
xchg
and
mov
popa
pop
nop
push
lods
adc
aaa
test
insb
pop
leave
pop
pop
je
cld
ljmp
outsb
jb
dec
out
addps
adc
or
loope
xor
mov
adc
dec
es
jl
loope
iret
stc
cmp
orl
cmpsl
xor
fsubl
test
iret
cltd
neg
adc
fildl
mov
outsl
leave
imul
jl
pop
mov
sarl
imul
mov
pop
pop
xor
push
test
mov
jbe
mov
mov
ret
fs
das
inc
ja
add
aad
pop
inc
out
or
lock
sub
xchg
xchg
adc
mov
xchg
inc
push
inc
mov
dec
mov
clc
ss
mov
pop
pop
cmp
xchg
aam
pop
adc
loop
sbb
push
iret
xchg
and
dec
aam
fwait
movsl
jge
push
les
ret
or
mov
jle
mov
in
std
mov
cmpb
jg
jae
inc
push
clc
movsb
out
inc
adc
xor
sbb
movsl
adc
shlb
jecxz
push
mov
pop
push
inc
mov
sahf
jl
frstor
insb
js
out
repz
push
push
stos
mov
call
cmp
sub
repnz
cmc
xchg
repnz
fucomi
jecxz
sbb
adc
inc
lods
movsl
lods
imul
or
pop
sub
popa
and
sarb
insl
inc
in
daa
xchg
and
jl
outsb
rorl
add
mov
dec
pop
jns
std
dec
cmp
sbb
inc
push
mov
jmp
jbe
loope
push
std
sub
mov
dec
xor
inc
jg
ss
dec
mov
insl
aad
stc
sbb
inc
or
lods
inc
lret
mov
mov
sahf
xor
adc
daa
inc
fiaddl
mov
sub
adc
test
dec
push
push
jge
fisttpl
lret
nop
andb
in
daa
pop
pop
je
or
out
lldt
movsl
lock
pop
inc
stos
aad
out
test
pop
xlat
pop
outsb
flds
sub
push
nop
out
push
cmp
xor
and
push
mov
fisubrl
mov
jecxz
cwtl
mov
mov
or
popa
adc
adc
inc
or
imul
xchg
xor
sub
add
inc
clc
aad
or
hlt
and
icebp
das
into
loop
push
fbld
ss
out
jmp
rorb
push
mov
inc
shl
pop
out
out
sarb
and
orb
int3
inc
pop
popa
sahf
pop
mov
pop
xchg
jecxz
loope
push
pop
insb
mov
in
and
cmp
mov
pop
popf
out
pop
lods
push
int3
adc
mov
adc
jns
sarb
add
ret
xchg
cmc
jne
adc
xchg
sub
cmc
mov
movsl
push
cmpsl
dec
mov
xchg
shr
daa
inc
cmpsb
sbb
rorb
test
mov
cli
inc
addr16
mov
mov
daa
mov
adc
adc
mov
cld
addb
fstl
push
push
push
push
in
mov
push
je
sub
stc
ret
cs
jnp
mov
mov
sti
xor
sub
test
cmp
jb
mov
sbb
adc
push
pushl
dec
sub
pop
movsb
or
scas
aad
movsl
aad
or
jno
jns
mov
inc
or
adc
xadd
adc
adc
cltd
mov
push
mov
cmp
add
push
pop
and
mov
cmp
push
dec
gs
mov
test
in
test
add
add
scas
hlt
mov
sbb
add
mov
shrl
and
pop
push
aam
mov
push
lds
sbb
cltd
jle
pop
hlt
jp
adc
test
pop
push
inc
insl
in
sub
adc
arpl
stos
idivl
mov
lock
insb
and
sbb
movsl
ret
outsl
sbb
mov
call
xchg
pop
adc
pop
mov
cmp
outsb
jae
out
int
inc
adc
imul
cmp
sbb
sub
inc
imul
push
push
movsl
daa
push
pusha
fstpt
call
out
jnp
mov
xor
xor
add
fidivs
jle
xchg
xchg
dec
enter
jb
clc
push
fisttpll
shrb
add
pop
iret
leave
test
jnp
xchg
mov
cmp
test
add
and
shll
movsb
js
test
sarb
or
jg
gs
pop
push
mov
cld
xchg
mov
sub
dec
loope
ss
push
aaa
sub
out
jge
test
dec
push
addr16
or
adcl
jbe
movb
xchg
ret
out
push
roll
cmp
js
mov
test
or
sbb
xchg
shll
mov
dec
sbb
mov
push
pop
mov
push
adc
inc
stc
lock
mov
mov
add
xchg
mov
adc
jmp
adc
stos
and
lret
in
shll
xchg
pop
popf
outsl
test
enter
test
jecxz
test
fsts
and
or
sbb
mov
imul
push
lock
out
mov
in
push
repnz
xor
sysexit
mov
cmp
in
shl
ja
or
sti
push
sbb
adc
stos
imul
and
rorb
or
cmp
rorb
pop
add
adcl
dec
jl
xchg
jp
sbb
pop
mov
inc
test
dec
sub
mov
lea
repz
and
cmp
dec
mov
xchg
fadds
movsb
insb
addr16
push
insb
stos
jns
inc
cmpl
cmp
inc
lea
xchg
or
push
cs
scas
shlb
jbe
jne
push
cmp
xlat
lret
jbe
das
sub
inc
sub
push
ja
fiadds
sub
popa
roll
cmc
stos
pop
or
js
orl
inc
push
shll
insb
mov
mov
pusha
or
in
mov
inc
jge
mov
mov
inc
add
xchg
dec
outsb
ljmp
xchg
ret
cmpsl
repz
jecxz
and
push
mov
xor
cmpb
sub
cmpsb
sbb
aad
icebp
push
les
jno
stos
loop
test
sub
test
ret
jne
scas
jnp
cmp
push
addr16
cmp
test
fwait
add
and
xor
mov
ret
sbb
sub
or
lret
push
push
dec
jno,pn
leave
pop
add
push
out
mov
xor
xor
mov
mov
and
aad
inc
sub
jecxz
fidivrs
mov
jns
addr16
ret
xor
in
movsb
in
mov
mov
sub
stos
jo
faddl
addr16
imul
adc
mov
sbb
clc
out
xlat
push
daa
mov
pushf
mov
jno
imul
aaa
inc
test
pop
sbbb
lds
pop
adc
mov
push
adc
iret
jnp
pop
int3
mov
cmpsb
cmp
add
dec
fcmovnu
push
and
push
adc
test
sbbb
push
test
andl
sub
fdivr
push
mov
subb
ficomps
ja
push
das
out
lods
cmp
xchg
sbb
mov
loop
fsts
cmp
test
xchg
sbb
ljmp
mov
repz
xchg
mov
or
jns
or
fcom
add
in
loope
push
add
mov
mov
ds
inc
loop
loop
mov
test
adc
lcall
dec
shl
mov
push
mov
fstpt
pop
push
inc
adc
inc
dec
in
bound
pop
push
popa
sbb
mov
cmp
jp
adc
mov
cmpsl
loop
xchg
jmp
sub
pop
enter
jle
ja
aaa
outsb
and
xchg
insb
mov
sub
stos
imul
cwtl
adc
shl
push
call
inc
jl
and
push
jmp
aaa
or
inc
inc
xchg
jmp
fucomp
and
dec
inc
pop
push
push
notb
dec
add
add
push
lret
dec
push
inc
out
inc
fwait
xor
sbb
mull
jp
mov
cmpsb
sub
call
add
pop
xchg
repz
test
icebp
sub
data16
xorl
in
or
jae
dec
add
fisubrl
sub
sub
jbe
enter
out
mov
add
lds
xchg
les
mov
push
fsqrt
dec
add
rol
adc
jno
jmp
xchg
dec
push
dec
cmp
xchg
test
sahf
lret
nop
andl
rcll
mov
dec
clc
in
mov
mov
insl
or
adc
aas
in
int
cmpsl
insl
addr16
xor
ds
movsb
icebp
shlb
test
jb
xor
sub
or
cld
mulb
adc
out
pop
lcall
mov
push
imul
mov
pop
stos
popa
arpl
sbb
cwtl
jbe
cld
pusha
jns
pop
mov
push
cs
mov
add
in
mov
pop
mov
sbb
das
xor
insl
fadd
push
imul
mov
mov
ljmp
pop
int3
test
test
je
in
add
popf
sbb
ss
icebp
pop
pop
add
js
add
adc
xchg
sub
lret
insl
inc
sar
mov
jmp
mov
popf
in
add
push
sbb
test
mov
sbb
adc
out
daa
xor
clc
movb
push
dec
shrb
popf
rcr
adc
movsb
and
mov
and
inc
fcompp
divb
daa
and
iret
push
add
jg
dec
cmc
stos
call
out
in
out
int3
int3
mov
clc
sbb
add
outsb
add
popf
mov
fwait
xchg
arpl
in
add
inc
daa
leave
insb
mov
mov
xchg
daa
adc
mov
int3
jp
xlat
imul
shlb
popa
add
iret
jg
push
jns
xchg
addl
add
or
inc
shr
inc
add
mov
pop
repz
push
inc
in
inc
cltd
push
jl
shl
adc
inc
hlt
loope
stc
sti
lret
jge
push
stc
js
inc
loope
add
mov
pop
inc
jae
andl
sbb
pusha
push
and
push
lret
repnz
int
in
cltd
int3
rorl
xchg
mov
mov
mov
cmp
pop
ljmp
imul
fs
aas
xchg
mov
jo
or
fistpl
pop
popf
sbb
daa
and
cld
cmp
arpl
shl
sub
imul
and
cmp
push
adc
popa
sbb
jp
in
fildll
cltd
sarl
cmp
and
inc
lahf
aaa
loope
push
cmp
push
pop
out
sahf
jmp
ja
icebp
notl
test
test
xchg
xchg
fcmovne
imulb
cmp
cmp
mov
mov
faddl
or
jg
cmpsl
mov
or
bound
mov
movsl
jecxz
sti
fildll
push
xchg
insb
fnstsw
test
inc
mov
pop
je
testb
push
xchg
hlt
and
cld
inc
scas
cmp
loope
mulb
movsb
cmp
jns
mov
fidivl
push
dec
popa
mull
lahf
mov
push
push
rcrl
and
push
fisubrl
mov
data16
inc
ljmp
or
cmp
lahf
mov
and
xchg
test
push
inc
repnz
outsb
cmp
pop
xor
mov
xchg
or
sbb
add
subl
xchg
xchg
adc
aam
or
adc
mov
and
lcall
sbbb
ret
rorl
jo
loope
clc
cli
pop
cld
js
pop
adc
stos
mov
clc
int3
ljmp
je
cld
mov
mov
cmp
push
outsl
and
jnp
hlt
push
cmp
mov
xchg
push
call
jnp
and
sbb
gs
data16
imul
cmp
cmp
pop
loopne
nop
xchg
mov
cmc
xchg
jnp
push
lods
and
in
jae
stos
sub
ljmp
or
clc
and
insl
sbb
or
push
jge
sbb
ja
jg
or
sub
pop
pusha
mov
sub
cmp
add
mov
mov
xor
inc
pop
sub
dec
and
fidivs
fdivs
outsl
cltd
call
mov
adc
cmp
cli
jmp
cmpsl
sahf
stc
insb
mov
movsl
icebp
jl
cmp
loopne
fildl
mov
push
fimuls
inc
dec
cmp
push
mov
sbb
cltd
and
xlat
std
add
and
pop
dec
cwtl
sbb
std
xchg
jle
test
pushf
aad
loop
xchg
shlb
cwtl
out
jb
or
push
mov
test
int3
out
dec
cmp
jle
inc
sub
in
push
add
mov
jnp
pop
xor
test
fsubl
adcb
mov
add
cmpsl
fstp
rcl
lods
xchg
cli
in
push
movsb
in
outsb
bound
cmp
pop
mov
mov
mov
xchg
adc
arpl
lock
dec
iret
xor
xchg
xor
inc
arpl
jmp
imul
add
lret
std
pop
and
aaa
or
and
mov
out
pop
xor
mov
sub
sti
xor
hlt
mov
xchg
std
xchg
mov
mov
imul
lret
jle
push
sbb
pop
add
in
mov
ljmp
sub
mov
fisubl
add
push
push
daa
mov
sbb
mov
repz
sti
mov
xor
lods
ja
insb
sub
ret
data16
fwait
inc
push
sub
lcall
and
cmp
xchg
repnz
ljmp
loop
out
popa
js
lret
push
inc
inc
daa
pop
clc
or
enter
lret
test
push
jl
addl
inc
jge
movsl
sbb
fsubrl
test
cwtl
jo
dec
sub
jl
sub
cmp
sbb
or
test
daa
sbb
mov
stos
cld
adc
or
push
jg
pusha
cmpsl
xchg
mov
js
dec
decb
movsb
mov
out
sbb
inc
sub
nop
jae
add
sub
adc
pop
xchg
add
jns
aas
pop
pop
mov
or
jo
pushf
fsubrs
andb
ja
cmp
int3
rcrb
leave
and
xchg
stos
shl
inc
dec
iret
inc
lahf
push
add
stc
rorl
in
mov
fdiv
inc
sub
jbe
rorl
push
inc
mov
mov
add
mov
mov
pop
cmp
test
arpl
movsl
sar
pop
pusha
cmp
lds
push
and
mov
sbb
aad
dec
inc
insb
fisubs
sub
fs
xchg
popl
hlt
loopne
sbbb
fs
xchg
insl
sbb
mov
sti
dec
loop
push
out
rolb
sbb
test
shl
or
nop
popf
inc
jmp
inc
add
movsl
fdivrl
jl
xchg
push
push
stos
sub
mov
rcrl
jbe
mov
data16
adc
cmpsb
lret
sub
out
aas
sbb
rcrb
rcl
xchg
test
and
cmp
test
jl
pusha
add
mov
sbb
addb
fwait
out
xchg
insb
or
fcmovnbe
neg
push
ja
sahf
push
insb
cmc
mov
and
mov
ret
faddl
push
sub
xchg
test
test
arpl
fstp
test
int
push
outsb
pop
sub
sahf
inc
ja
test
out
rclb
sub
inc
addr16
pop
imul
repz
dec
xor
mov
loop
scas
daa
inc
mov
out
or
mov
cmp
jb
fimull
icebp
push
add
mov
sub
inc
scas
roll
jecxz
fistpll
or
cli
sbbl
testl
dec
push
cmpsl
paddusw
cwtl
ss
into
dec
mov
mov
pop
jae
scas
aas
mov
jnp
lock
dec
addr16
icebp
adc
fwait
imul
dec
dec
jns
mov
mov
and
xor
xor
shlb
movsl
add
mov
mov
dec
cmpsb
in
dec
push
mov
jnp
xor
pop
jmp
adc
loopne
dec
pop
jbe
push
repz
xchg
in
out
pusha
dec
and
cmc
inc
mov
fistpl
inc
repz
xchg
pop
fildl
cmp
hlt
add
cs
sub
or
lods
lret
arpl
cmp
mov
fists
movsb
xchg
pop
add
push
rcll
sbb
arpl
outsb
jbe
push
dec
iret
addr16
sbb
icebp
je
mov
shlb
jb
out
loop
pop
movsl
movsl
push
shll
sbbb
lds
cmpsb
jp
rorb
or
notb
loop
dec
xchg
hlt
popf
movsb
iret
rcl
sbb
icebp
mov
fiaddl
push
jo
and
in
in
lret
testl
mov
addr16
mov
and
outsl
cmp
or
cmp
sti
mov
pop
push
jae
stc
lahf
sbb
popa
xchg
mov
xor
js
inc
mov
das
pop
mov
sbb
jae
lret
sub
and
paddsb
mov
mov
dec
jge
cs
dec
mov
nop
cmp
inc
fists
rolb
and
jmp
pop
push
xchg
pop
pop
outsb
mov
mov
das
mov
aas
sbb
fs
out
mov
enter
ret
mov
pop
jge
push
scas
add
gs
mov
mov
cmp
sti
pop
pop
out
inc
jne
push
insb
xor
jp
jp
pop
sub
es
dec
sub
adc
and
xchg
je
jbe
nop
sub
int3
sbbb
in
repz
or
and
clc
scas
pushf
insl
into
scas
ss
push
xlat
dec
ret
paddsw
cs
mov
in
and
jge
in
notl
add
inc
dec
sti
iret
mov
into
xchg
fdivrs
ljmp
orb
sti
test
icebp
mov
mov
push
ret
xor
lock
jno
jno
sahf
cmpsl
jg
int
fs
push
dec
mov
sbb
ss
cs
push
mov
or
dec
xchg
int
cmp
cmpsb
movsl
fnstcw
jo
decl
ret
fsubs
push
pusha
lock
aaa
mov
or
rcr
sti
int3
jl
add
sub
or
js
sub
int3
imul
push
fisttps
xchg
fwait
lock
aad
std
movsl
in
aaa
mov
add
scas
enter
xor
mov
or
jg
lcall
fwait
subl
push
mov
inc
les
test
hlt
or
es
dec
cmp
repnz
leave
or
int3
jmp
lret
jae
fsubp
inc
xchg
jl
aam
rcrb
clc
iret
ds
xchg
jge
push
arpl
shll
sbb
and
fcoms
sub
sbb
fisubrl
mov
inc
inc
add
cs
cmp
xchg
sbb
fdivs
push
push
or
andb
es
mov
sbb
or
add
loop
pop
icebp
in
add
mov
dec
repz
out
stos
in
and
cmpsl
outsl
imul
cmp
push
lods
inc
hlt
jmp
iret
orl
mov
inc
lods
mov
hlt
or
cmp
test
push
jl
add
xchg
adc
and
xchg
arpl
out
jae
mov
imull
int
mov
aam
nop
pop
shll
xchg
sub
push
sqrtps
ja
mov
gs
dec
aaa
dec
lods
shll
sbb
popa
jg
out
and
and
jo
dec
shlb
mov
loop
and
push
fstl
jo
les
cmpsb
insb
orb
fldcw
pop
push
mov
sbb
lea
or
imul
xor
sub
sarl
sbb
sbbb
dec
xchg
aad
dec
push
cmp
movsb
cli
test
push
lods
pop
std
cmp
ja
fwait
and
cmp
xchg
rorb
pop
pushf
in
sbb
rolb
shlb
or
lret
pushf
stos
or
test
leave
cmc
pop
mov
test
and
mov
in
outsl
push
inc
adc
sbb
adc
jns
mov
mov
jae
mov
inc
fists
cmp
fstpt
pop
out
pop
lret
inc
in
fistpl
jno
xchg
inc
out
or
push
call
loopne
test
mov
fdivrp
mov
push
test
iret
cmp
add
sahf
pop
xor
jmp
and
add
inc
loope
sbb
fcmovb
mov
mov
dec
popa
cmp
mov
cwtl
xchg
aas
in
cwtl
ret
ljmp
cmp
sahf
mov
pop
cmp
loope
fadd
xor
das
loop
les
scas
or
cmc
js
notb
push
jle
push
xor
pop
cmp
cmc
mov
add
sahf
cltd
mov
xchg
cmpsl
lds
add
test
stos
sub
fwait
sbb
pop
hlt
js
orl
ret
mov
mov
jbe
fnstsw
inc
jns
in
bound
lea
mov
inc
sbb
pusha
xor
or
mov
or
adc
xchg
aad
inc
es
sub
sti
push
jo
xor
pop
fidivs
mov
jbe
jns
inc
mov
js
push
ljmp
cmpsb
jmp
rorl
add
ss
xchg
push
les
lds
gs
mov
sahf
lcall
push
mov
aaa
inc
xchg
es
out
pop
or
cmp
xchg
mov
and
scas
xlat
out
jbe
adc
aad
loope
sub
or
into
jge
mov
nop
dec
out
cmpsl
dec
inc
xor
mov
mov
sub
jecxz
ds
andb
jb
pop
es
inc
lods
inc
out
xchg
cmc
or
push
mov
data16
adc
nop
repz
xchg
movsb
call
lret
xchg
scas
push
imul
clc
push
push
in
mov
cmp
test
jecxz
jle
js
aam
lock
jl
xchg
mov
movl
in
sar
xchg
adc
dec
repnz
std
add
rcl
cmp
pop
mov
mov
les
stos
dec
sub
in
inc
xor
dec
adc
xchg
sbb
and
jg
pop
test
mov
or
mov
push
pop
in
mov
xor
sbb
test
dec
cmpsl
xchg
sarb
xchg
in
fwait
push
jle
hlt
lods
in
sub
dec
adc
xor
inc
insb
nop
sahf
sbb
xchg
sbb
xchg
sub
mov
xchg
xlat
xchg
jae
jp
push
and
movsl
mov
sbb
cwtl
mov
push
mov
mov
pop
in
cli
mov
dec
daa
xor
fbstp
cs
mov
jno
loop
or
or
inc
jnp
push
xchg
fidivrl
sub
popa
or
push
icebp
jmp
add
jg
cltd
in
jecxz
mov
fldcw
test
and
cwtl
cmp
jnp
pushf
push
mov
inc
lea
cwtl
iret
push
loop
dec
scas
dec
lods
pop
aas
mov
cmp
sub
iret
fcmove
xchg
out
or
nop
jns
out
rorb
mov
or
or
mov
lods
call
out
jo
loopne
inc
int
add
pop
mov
dec
addr16
xchg
pop
js
call
repz
push
or
aaa
jmp
sbb
lods
leave
popa
pop
shrb
fwait
ret
icebp
jnp
adc
dec
ret
mov
aas
and
adc
xor
jnp
push
xor
mov
xor
incl
sub
in
or
loope
cmpsl
xor
aam
mov
jecxz
mov
push
mov
adc
les
xor
test
stos
stc
mov
push
ficomps
shl
mov
dec
das
fildl
jg
cmpsl
sti
lock
notb
test
xchg
outsb
aam
loopne
cmc
mov
sub
inc
sub
inc
fidivs
mov
lret
adc
mov
fisttps
mov
or
push
push
sub
sbb
shlb
mov
aas
xchg
dec
sub
push
jne
cs
sbb
sbb
rcrb
cmp
mov
pop
sbb
pop
add
adc
dec
mov
and
ds
mov
shlb
mov
push
push
ret
lret
and
xchg
orb
xor
inc
ret
jns
mov
jne
ret
push
cmpsl
jns
xchg
cmp
sub
testb
insb
jns
lods
and
xor
adc
inc
into
jno
mov
mov
and
sub
cmpsl
repz
jp
mov
sbb
lcall
lret
std
mov
cmc
xor
jno
jae
xlat
nop
pop
xchg
push
mov
cmp
call
mull
fldl
xchg
and
mov
cmp
mov
call
add
mov
pop
or
jmp
lret
clc
cmp
pop
jg
fsubl
adc
fcmovnb
mov
outsl
nop
add
fisubrl
popa
cmp
pop
jno
repnz
jecxz
das
inc
jg
fucomi
nop
rcll
xchg
push
xchg
cld
aas
add
cmpsb
or
daa
fdivl
popf
stc
cmp
jp
out
insb
out
pop
rcr
mov
push
mov
loop
dec
push
or
inc
mov
sarb
lds
out
push
imul
sbb
jbe
add
inc
outsb
sub
in
jae
ljmp
dec
xchg
ror
cmpsl
les
test
jnp
insb
lock
cltd
je
xchg
pushf
sbb
loope
mov
dec
mov
cmp
sti
das
cmovno
mov
loope
or
dec
push
out
inc
jl
rcll
addl
int
lretw
mov
mov
in
das
adc
cmpsl
jmp
lahf
jns
lret
dec
mov
push
into
xor
adc
mov
push
loop
mov
data16
pop
lcall
push
jle
dec
push
or
pop
or
test
mov
push
and
cmpsl
push
dec
call
dec
cmp
je
jle
sub
clc
push
pop
int
ret
jbe
cmpsb
jmp
insb
nop
lods
fidivs
mov
pop
pop
test
dec
fnsave
or
insl
and
aam
add
jge
in
repnz
orl
mov
cmp
jne
adc
xchg
jbe
adc
in
sbb
mov
or
mov
cmpsb
pop
add
popa
call
jle
mov
outsl
jns
in
loope
mov
inc
sub
mov
mov
and
hlt
sbb
mov
mov
ss
mov
xor
xor
cmp
imul
mov
scas
das
push
and
cli
push
adc
xchg
cmp
xchg
mov
mov
insb
out
les
imul
popf
mov
sbb
jno
inc
fnstenv
add
xchg
jno
cltd
mov
push
imul
mov
mov
pop
cltd
sub
scas
lahf
fidivs
int3
push
and
or
fsubs
cmp
fwait
sbb
stos
clc
lret
mov
dec
rcrb
lock
add
rcll
xchg
mov
pop
pop
mov
test
sti
pusha
adc
jecxz
or
xor
adc
jno
mov
xchg
insl
leave
mov
test
mov
xchg
shlb
mov
sti
pop
cmp
xor
pop
mov
cmp
xchg
nop
sub
test
aam
sar
addr16
fsubrs
jg
jb
test
cli
push
adc
jo
pop
pusha
xor
xchg
cmp
add
leave
xchg
mov
xchg
iret
mov
jle
push
cs
cmpsb
std
fs
inc
jns
dec
rclb
jbe
fistpl
adc
enter
add
lock
jle
or
mov
add
invd
stc
mov
sub
mov
fdivs
movsb
outsb
mov
push
pop
mov
sub
icebp
xorb
outsl
pop
mov
pop
and
pusha
adc
xlat
int3
fstpl
pop
jne
cmp
testb
insb
mov
popf
mov
sub
inc
fldt
adc
and
mov
add
movsl
mov
inc
mov
imul
or
add
mov
and
subb
add
repnz
faddl
dec
shrl
xor
gs
adc
and
fists
pop
nop
cmp
stos
dec
mov
lea
sti
call
mov
sbb
lcall
out
xor
dec
mov
movsl
iret
cmp
out
pop
pushf
sub
sbb
inc
pop
imulb
test
jae
stc
dec
add
scas
or
rol
dec
push
ret
push
icebp
mov
xchg
pop
xchg
mov
push
imul
add
sbb
adc
mov
aam
push
dec
je
mov
add
aad
xchg
ss
adc
sub
call
test
fsubl
jbe
sub
scas
les
sub
stos
dec
pop
xchg
test
shrl
rolb
mov
imul
mov
cs
xacquire
repz
and
jbe
mov
xor
pop
outsl
pop
out
repnz
shll
xlat
aaa
push
xor
test
popl
mov
pop
xchg
cli
dec
xchg
popa
adc
mov
push
not
or
insb
mov
adc
lods
cmp
cld
xor
push
outsl
mov
lret
push
inc
push
jo
xor
cld
movsl
xor
mov
dec
pop
enter
test
js
dec
mov
xor
in
jp
mov
dec
lcall
sub
cmc
xchg
sub
loop
pop
mov
jge
ss
stos
clc
lahf
push
rcrl
imul
inc
jecxz
inc
test
daa
xchg
cli
jmp
inc
stos
inc
mov
into
pop
ret
leave
in
loopne
inc
add
adc
sarb
hlt
and
inc
xchg
jbe
outsb
push
adc
stos
ret
aas
cs
aam
test
lret
adc
fadd
jp
adc
scas
je
xor
push
mov
fcmove
pop
movsb
dec
inc
or
stos
lcall
pop
fmulp
enter
push
pushf
jbe
jecxz
mov
lock
stos
sub
lods
lods
fdivrl
int
xchg
fidivrl
test
sbb
in
cmp
pushf
pop
xor
adc
add
aaa
lock
loopne
roll
mov
clc
fs
jae
push
movsb
int3
dec
push
scas
imul
mov
inc
push
jb
scas
pop
sbb
gs
xlat
xor
mov
test
add
arpl
mov
rol
rol
sub
or
dec
das
das
aam
shrl
and
mov
pop
lahf
out
and
dec
mov
ds
push
xchg
sbb
mov
incl
dec
mov
sub
cmc
bound
out
js
inc
mov
mov
jno
mov
push
mov
pop
pop
sbb
divb
in
push
ss
shll
sbb
mov
mov
cmp
mov
mov
push
roll
aas
cs
mov
dec
mov
shll
push
aad
inc
mov
mov
mov
ds
scas
xor
cmc
sbb
sar
inc
or
add
pusha
enter
jae
adc
adc
cmp
or
sbb
or
cmp
in
fnstcw
jp
imulb
mov
lahf
mov
repz
inc
filds
xchg
or
fimuls
pusha
pop
in
or
in
cmp
push
pop
pop
xlat
mov
jae
mov
notb
adc
cmp
jo
lea
jl
rcll
push
mov
sbb
cmpsb
adc
jns
dec
push
mov
mov
mov
insb
fstl
push
adc
repnz
bnd
or
push
fcmovne
cli
shlb
cmp
mov
test
mov
mov
arpl
aaa
dec
mov
pusha
aas
movsl
lea
inc
outsl
sub
and
popf
in
es
or
pop
cs
sub
ds
mov
iret
xchg
cmp
cmc
shll
test
gs
push
mov
int
mov
inc
dec
fcoml
cmp
arpl
je
push
imul
xchg
pop
fsubrl
inc
fucomi
aam
movsb
push
jns
fstpt
test
stc
lret
sub
mov
or
outsb
cwtl
movsl
mov
mov
xor
pusha
fistps
cmp
jb
add
jo
xor
imull
or
imul
lcall
add
inc
sub
pop
add
test
push
sahf
pop
movb
dec
cmp
mov
mov
aas
mov
aam
addb
imul
mov
lds
pop
aaa
xchg
fidivl
in
inc
ret
rorb
push
jg
les
sarl
cmpsb
adc
mov
inc
mov
xchg
mov
gs
rclb
cmp
push
jo
mov
xchg
inc
inc
sub
sbb
pop
inc
mov
dec
aad
dec
and
cwtl
cld
mov
sub
inc
inc
xchg
adc
nop
shll
and
sbb
sbb
jp
inc
adc
add
push
test
sbb
adc
fldl
dec
inc
in
aas
outsb
add
add
out
mov
enter
ljmp
mov
pop
jo
lock
pop
add
mov
jmp
xchg
jns
daa
test
xor
jo
lea
mov
or
sub
repz
jp
and
mov
sub
sti
hlt
or
jge
out
jne
sub
dec
mov
fcoms
repz
out
push
stc
cmpsb
pop
mov
xchg
push
shll
xchg
and
add
testl
icebp
iret
mov
cmc
sub
sbb
movsl
dec
bound
push
hlt
add
imul
fsub
add
sbb
xchg
loopne
pop
out
mov
mov
dec
jge
add
testl
inc
out
mov
popf
or
and
incl
dec
mov
int3
jb
sub
pop
cmp
jmp
fmull
or
or
fsts
pop
mov
push
and
les
shr
imul
das
push
jge
fidivl
dec
xor
cld
rclb
sbb
mov
int
out
popf
mov
push
push
cmp
lret
int3
inc
inc
es
dec
cs
sbb
std
dec
pushf
pop
jg
mov
push
mov
loopne
or
imul
mov
mov
push
test
sbb
sbb
jp
sbb
imul
or
cwtl
cmpsb
cmp
sub
int3
and
loopne
xchg
lods
jmp
std
mov
jo
dec
loope
mov
and
xor
inc
cmp
mov
aam
jo
pop
cmpsb
xchg
sub
jmp
movsl
pop
ret
sub
xchg
push
scas
data16
jge
test
and
pop
cli
dec
test
mov
out
push
push
repnz
test
pop
ficoml
testb
test
cwtl
mov
add
imul
scas
push
je
jns
mov
or
and
lahf
repz
and
sti
cmp
mov
insl
sbb
pop
push
not
cmpb
mov
xchg
addr16
pop
cmp
jl
rcll
and
cmp
pop
and
and
xchg
rol
jg
add
pop
stos
and
repz
jmp
stos
pop
inc
and
aad
sbb
in
push
jb
xchg
mov
push
inc
shll
lret
out
add
lret
icebp
adc
int3
xchg
add
xchg
mov
pushf
mov
movaps
xor
dec
inc
enter
xor
cwtl
push
pop
inc
mov
fst
mov
mov
push
sub
rolb
inc
jae
pop
cmp
sarb
mov
lods
icebp
pop
pop
insb
add
rcrl
pop
loopne
outsb
aam
mov
mov
mov
shl
push
and
lds
mov
fistps
scas
and
je
fcoms
pushf
popa
aam
xchg
out
jo
loop
out
mov
aas
jp
inc
lds
dec
cmpsl
sbb
xchg
into
gs
mov
imul
and
mov
pop
sahf
sbb
stc
rcrb
fnsave
popf
jmp
mov
jmp
push
sti
inc
sub
cli
jp
and
push
lea
jbe
xor
mov
adcl
arpl
outsl
jl
scas
xor
jno
xor
pop
add
call
xchg
adc
push
mov
int
and
daa
sbb
jge
loopne
mov
or
push
push
into
mov
int3
fisttpll
sub
lods
mov
notl
add
and
push
sbb
nop
fildl
cld
sub
pop
push
inc
xor
push
adc
cld
push
pop
sahf
sub
mov
lret
in
sub
jg
scas
fstl
adc
loopne
mov
mov
fs
push
xchg
loop
lds
movsb
lcall
test
dec
cmp
sti
idivb
mov
daa
cmpsb
scas
adc
shll
mov
push
adc
mov
pusha
pop
jbe
jns
dec
sti
xor
fisttpl
lods
and
jnp
xchg
mov
test
mov
xchg
jl
sahf
mov
xchg
aam
push
push
out
in
fisttps
lret
add
test
or
scas
cmp
mov
inc
mov
into
mov
test
incl
xchg
mov
mov
sbb
lcall
aaa
setle
popf
enter
mov
or
mov
and
sbb
and
faddp
inc
test
xor
sar
dec
fs
rcl
or
fmul
mov
cmp
into
push
push
jg
pminsw
or
je
pushf
jp
adc
add
int
pop
push
push
or
adc
aad
imul
adc
pop
sub
shrb
adc
ljmp
mov
inc
cmc
pop
ret
idivb
mov
fsubrs
push
jmp
scas
mov
xor
fisubl
sub
push
mov
insl
icebp
mov
mov
pop
fdivrs
and
loop
loopne
inc
testl
andb
lar
jmp
fldt
lock
lcall
es
pushf
fsubrs
dec
lcall
daa
addr16
popf
inc
adc
xor
add
out
out
dec
std
and
mov
inc
mov
roll
pop
aad
xchg
xchg
fwait
std
pop
adc
mov
in
and
push
cs
mov
jb
in
pop
mov
push
negl
mov
push
cmp
in
mov
pushf
nop
cmp
xor
dec
sbb
loop
mov
jbe
ljmp
jl
dec
xchg
ftst
ret
ljmp
pop
mov
sub
rol
push
dec
xchg
fidivrl
and
out
popf
lcall
jbe
stos
or
aad
xor
scas
push
pop
lret
cmp
inc
insl
rol
sub
push
xor
rcrb
xor
xchg
mov
js
push
lock
and
call
fbstp
lret
aam
xor
or
cmp
xchg
jg
push
or
aad
pop
ljmp
in
lcall
aad
inc
shll
ret
push
sub
popa
dec
dec
daa
in
fwait
sbb
lods
inc
int3
in
mov
mov
pushf
idivl
mov
and
adc
push
adc
cmpsl
std
scas
int
sub
sarl
push
shll
mov
mov
mov
xchg
xlat
data16
push
in
push
mov
jp
cmp
cltd
loope
jl
or
repz
xor
mov
dec
push
adc
je
push
lods
and
jp
sbb
ljmp
or
push
adc
cmp
mov
daa
stos
mov
sub
or
mov
pop
into
add
mov
xchg
pop
imul
in
mov
es
fs
test
jle
sbb
xchg
maxps
adc
lret
movsb
shll
test
test
mov
and
sub
sbb
pop
and
shrl
cmc
movsb
lock
jg
xor
pop
pop
xor
in
xor
aas
pop
and
mov
in
lret
push
cmp
out
jne
mov
lret
out
xorb
mov
dec
mov
pop
lret
inc
jno
dec
jae
fadd
data16
and
jns
dec
imul
icebp
pop
sbb
ficompl
stos
and
sti
fwait
and
fucom
imul
pop
ja
cmp
or
wrmsr
pop
sbb
mov
pop
je
jb
sahf
cmp
fcoms
xchg
xchg
shll
roll
inc
mov
psubw
jp
push
in
es
push
jp
in
and
hlt
test
jbe
incl
subb
sti
mov
testb
cmp
xlat
shll
bound
test
jo
inc
xchg
xorl
jo
cmpsb
dec
mov
shrb
das
inc
add
pop
push
jnp
dec
filds
daa
or
adc
test
scas
ljmp
xor
shll
jne
dec
mov
add
mov
sub
or
and
jge
jns
jnp
and
enter
cmp
xor
addb
push
cmpsb
rorl
cmpb
and
jo
cmpsb
push
jle
in
dec
loopne
mov
repnz
mov
leave
xor
cmp
push
sarl
test
movsb
mov
jg
push
mov
out
push
mov
mov
aam
call
stos
xchg
pop
lret
cmp
sbb
inc
in
jns
popf
outsl
pop
push
cltd
cmp
fisubs
aas
sbb
xchg
and
push
mov
cli
je
jnp
insl
push
popf
mov
push
lds
pop
jmp
mov
pop
adc
scas
popa
movl
cmp
or
mull
mov
in
or
inc
dec
inc
mov
mov
cwtl
xor
xchg
pusha
call
mov
adc
inc
inc
in
adc
fsubl
out
inc
mov
cmp
fisttps
adc
stc
movsb
mov
jae
iret
jmp
jle
lds
loopne
push
xchg
sub
sub
xor
cmp
pop
push
aaa
jbe
cmp
scas
addr16
mov
loop
jno
adc
ret
mov
imul
xor
jno
cmp
lcall
shll
xor
shll
jecxz
pop
pop
fisttpll
mov
sti
aam
inc
cld
ret
sbb
hlt
iret
xor
popf
loopne
ret
pop
dec
or
aad
adc
cld
je
sub
shlb
mov
dec
jne
jmp
jae
xor
mov
scas
inc
jo
gs
adc
getsec
loopne
jbe
push
fwait
sbb
dec
xchg
inc
cmp
lock
or
dec
lock
push
cvttps2pi
js
imul
loopne
xchg
fdiv
xchg
inc
aad
insb
sub
sahf
jne
sahf
dec
sbb
xchg
loop
cmpsl
arpl
dec
into
sub
sarb
sahf
cld
jo
dec
or
je
aas
out
push
cli
std
jp
mov
and
fdivrs
mov
stc
xchg
es
sbb
rclb
mov
repnz
push
fsubr
inc
dec
ss
in
in
adcl
insb
fs
mov
pop
test
jne
push
adc
inc
inc
int
int3
cmp
popf
jle
movsl
cli
mov
or
fiaddl
sbb
rdpmc
imul
add
int
dec
repnz
je
lret
cld
ret
stos
pop
shrl
into
xlat
xor
lretw
sti
adc
xchg
mov
mov
mov
stos
in
jle
lods
push
or
cwtl
ret
lds
pop
cmp
cmp
cld
popa
stc
mov
sub
xor
loopne
enter
in
mov
dec
roll
inc
cmpsl
cmp
xchg
out
pop
and
mulb
je
mov
push
fdivs
xor
push
xor
and
mov
or
lds
xchg
mov
push
jbe
jo
jo
inc
fwait
not
and
pop
push
in
xchg
xchg
xlat
rcr
pusha
dec
add
fcom
sub
daa
jmp
cli
js
imul
cmp
rclb
mov
jo
cmp
lock
jne
outsl
fadd
xchg
insl
fs
shrb
add
mov
aad
lea
sbb
pop
js
nop
lahf
xchg
into
lds
push
push
stc
mov
pop
mov
and
jnp
dec
ds
mov
xlat
imul
int3
insb
movsb
ret
xor
jns
cmc
sub
add
loop
jge
bound
mov
dec
call
adc
mov
icebp
cld
test
shll
adc
pop
fst
fsubrp
popf
out
pop
inc
pop
mov
adc
imul
or
in
and
lahf
idivl
fidivs
imul
pop
je,pt
jl
jo
lds
pop
mov
ret
inc
in
cld
and
js
icebp
push
push
jmp
mov
sub
mov
pop
adc
insb
daa
cmp
xchg
lret
cvttps2pi
or
in
push
add
xor
out
insl
xchg
jmp
aam
sbb
bound
sub
pusha
inc
cmc
xor
cmp
fwait
and
sbb
outsb
stos
mov
mov
mul
pop
pop
test
or
movsl
mov
mov
pop
push
push
xor
lahf
xor
adc
sbb
mov
push
mov
add
push
faddl
mov
fisubs
sub
imul
nop
xor
jle
bndldx
loopne
xlat
inc
xchg
imul
mov
push
xor
pop
jge
jl
adc
cmp
les
jmp
movb
add
mov
test
mov
pop
inc
iret
jmp
cmpsl
rclb
in
cmp
aam
push
nop
push
lods
pop
fildl
insl
push
loopne
lock
sub
pop
push
jl
xchg
std
mov
mov
popa
push
gs
outsb
pop
mov
cmpsl
mov
test
inc
sarb
push
push
mov
or
sub
popa
cmc
jge
sti
fidivs
sub
inc
outsl
hlt
aas
in
add
in
jnp
and
cwtl
mov
faddl
mov
xor
test
sub
mov
xchg
fiadds
pop
int
lcall
pop
push
out
sbb
pop
ds
cmpb
jp
out
pop
inc
mov
xchg
cmp
mov
lods
ss
dec
pop
xor
jnp
test
fcoms
rol
xchg
mov
lods
and
aaa
inc
shll
loop
pop
fldt
xchg
das
repz
std
jecxz
inc
jg
insb
pop
sub
arpl
or
insb
fistpll
xlat
sahf
inc
or
fcoms
or
mov
nop
iret
bound
out
ja
mov
ret
cmp
lock
mov
aas
inc
pop
xor
inc
mov
mul
mov
lods
add
jno
jb
push
outsl
cmp
xorl
and
jns
mov
pshufw
scas
dec
push
dec
or
lods
or
fistpl
add
out
scas
xor
mov
cmp
test
icebp
cwtl
cmpsb
mov
xchg
je
test
add
fisttpl
sbb
and
or
in
shlb
in
lock
lds
add
out
aaa
mov
test
js
xchg
enter
mov
push
add
loope
adc
fiaddl
nop
fisttpl
cmpsl
pop
shrl
or
mov
lret
leave
jmp
cwtl
mov
push
push
push
or
gs
lods
in
xchg
scas
add
vxorps
dec
sti
rcrb
inc
mov
pop
adc
lds
inc
xor
mov
sbb
in
fisubl
add
iret
dec
push
inc
call
or
inc
adc
incl
push
mov
call
iret
inc
movsl
push
add
scas
rorb
sarl
mov
xchg
shl
fnstcw
cli
orb
cs
mov
lret
sub
add
outsb
imul
sub
in
subl
repz
je
push
pop
sar
fisubs
inc
fwait
xor
fldl
push
jmp
pusha
dec
fsts
or
dec
xchg
std
outsl
push
pop
addr16
mov
loope
repnz
lret
cmpb
lret
mov
xchg
inc
inc
mov
adcl
dec
fldl
mov
inc
je
orl
xchg
and
icebp
int
xor
imull
lret
addr16
lods
adc
popa
loop
xchg
jns
in
or
sbb
add
fcompl
xchg
fs
pop
pop
mov
push
inc
push
or
push
lret
sahf
fwait
pop
shll
shll
loop
aad
aaa
in
push
lea
test
xlat
addr16
mov
add
fidivrs
lock
out
je
ret
enter
pop
mov
scas
cmp
jae
fisubl
cld
sub
mov
push
xlat
mov
sbb
lea
je
icebp
xchg
adc
aad
fldl2e
rclb
clc
jae
in
cmp
dec
xchg
loop
test
mov
mov
lea
andl
cmp
aam
lcall
jmp
imul
jg
mov
aas
add
out
push
xchg
and
dec
mov
addl
in
jecxz
sbb
xor
es
shl
nop
loopne
dec
jg
pop
push
rcl
in
ss
fs
dec
aas
mov
jne
or
push
hlt
mov
fnsave
in
dec
pop
enter
lock
in
scas
sub
loope
mov
sub
push
push
outsb
hlt
or
cmp
test
into
push
cmp
lock
nop
cld
adc
adc
inc
stos
inc
sbb
lcall
jns
loopne
arpl
out
xor
scas
mov
push
addr16
in
xchg
shrb
jg
mov
mov
sub
lods
dec
mov
pop
test
mov
adc
push
mov
ss
cmp
clc
and
xchg
fisubrs
clc
jns
fadds
bound
dec
testl
out
out
rorb
pop
iret
add
flds
je
aad
ljmp
adc
xchg
adc
jnp
cmp
iret
pop
pop
ss
aad
push
pop
push
repz
hlt
icebp
cmp
in
sti
push
cltd
push
jmp
repnz
xchg
iret
fmull
push
fisttpll
aas
or
pop
icebp
in
pextrw
lret
adc
bound
leave
adc
cmp
xchg
outsb
xor
adc
aas
bound
mov
das
jne
fsubs
out
lock
sbb
mov
add
or
push
sub
mov
jmp
lods
jge
loopne
dec
das
mov
jae
push
mov
je
movswl
imul
mov
popf
push
lock
cs
aaa
sahf
out
or
leave
xchg
xchg
or
jg
movsl
ljmp
aad
xchg
rcrl
sbb
jo
dec
add
sarl
aas
or
add
jge
pop
xor
aam
ret
xchg
or
pop
sub
mov
mov
mov
cmp
ja
sar
mov
mov
popf
cltd
cmp
stos
into
pop
mov
movsb
les
mov
fnstsw
cwtl
scas
cwtl
xchg
es
mov
test
fwait
into
test
lods
fdivrs
std
insl
subb
sbb
mov
add
mov
mov
xchg
dec
inc
imul
cmp
rorl
jg
rcrl
push
mov
test
mull
lea
stos
rorl
cmp
and
mov
jne
xchg
lahf
sbb
cmp
mov
in
sti
push
sub
jne
adc
sbb
push
mov
or
xchg
fwait
push
aad
or
ret
pop
adcl
das
mov
pop
xlat
mov
adc
or
daa
jle
sbb
jbe
nop
lahf
rol
daa
rorb
fisubs
dec
xorb
pop
add
mov
jnp
pushf
cs
push
test
mov
dec
sub
aam
mov
nop
mov
mov
out
out
js
out
movsb
add
xchg
sbb
std
enter
repz
pop
pop
jmp
popf
inc
sbb
adc
into
scas
stos
les
jb
push
xchg
ljmp
sbb
pop
fldenv
inc
or
cli
fildl
mov
scas
insl
mov
push
mov
xor
pop
stos
dec
fsts
lahf
push
insl
inc
fucomip
in
pushf
mov
add
js
out
sbbl
lds
or
gs
stos
sub
test
add
xor
into
push
or
pushf
fildl
movsl
fsubl
adc
out
les
scas
add
loop
andb
popa
lock
xchg
mov
sti
push
aaa
pop
jbe
mov
orb
mov
outsl
sti
stc
mov
inc
cmp
faddl
inc
sub
dec
lods
cs
test
cmpb
cmp
ret
nop
push
jmp
inc
cli
dec
fnsave
jmp
loop
and
adc
push
pop
mov
sbb
xchg
loopne
mov
sub
mov
or
inc
jbe
inc
dec
adc
subl
aaa
cld
add
jae
in
push
inc
mov
test
int
pop
pop
xchg
jmp
inc
inc
xchg
cmp
repnz
ds
xchg
xor
popf
daa
sub
cmpsb
jge
inc
xlat
mov
imul
sbb
psllq
out
jnp
sbb
jge
inc
cmp
iret
jl
and
pop
adc
mov
int
dec
cmp
mov
lock
ret
xchg
rcrb
pusha
pop
popa
cli
imul
sahf
adc
push
aaa
into
filds
jnp
xor
insb
inc
push
iret
int3
dec
jg
adc
popf
xor
loopne
test
insb
xchg
insl
cltd
cltd
out
fwait
cmc
lock
dec
and
or
or
xor
or
push
out
add
scas
iret
insb
xchg
pushf
cmp
std
jne
les
mov
mov
pop
jno
jl
or
ss
jb
insl
popf
add
imul
es
mov
insl
shl
in
push
test
mov
loopne
std
inc
jle
and
imul
daa
and
cwtl
xlat
leave
inc
dec
scas
int3
dec
or
mov
das
sub
hlt
ss
push
repz
mov
add
dec
pop
stos
fldt
mov
or
xchg
lds
jae
pushf
inc
mov
pushf
xchg
inc
rorb
imul
push
mov
jno
and
gs
cmp
push
adc
xchg
lock
sbb
push
inc
in
lret
ficomps
sbb
outsl
sub
loopne
pop
mov
scas
nop
xorps
jnp
loope
jl
arpl
das
cmpsb
insl
jbe
sti
ss
mov
gs
pop
cmp
inc
jp
das
sub
dec
insw
out
cmpsb
pop
out
mov
pop
lds
mov
out
pop
rcrl
push
sbb
mov
jp
or
scas
ds
fnstenv
xor
cmp
push
pop
in
shrb
jle
mov
dec
mov
test
fwait
push
adc
pop
inc
sarl
not
lods
add
mov
pop
push
or
xor
dec
mov
dec
jae,pt
test
xor
incb
add
mov
dec
loop
call
arpl
shl
push
inc
pop
cmc
inc
movsb
mov
mov
add
jbe
push
dec
adc
fcomp
mov
call
or
push
decl
leave
fiadds
popa
jecxz
in
sub
adc
orb
dec
out
push
cmp
repnz
pop
xor
pop
sbb
push
cmpsl
mov
xchg
sbb
and
cld
clc
push
je
and
je
incl
mov
pop
cmpsl
mov
aad
jecxz
cmpsb
mov
xor
cmp
jp
movsb
inc
fcoms
fsubrl
popa
cmc
fcmovbe
shll
test
pop
scas
icebp
push
andb
add
lods
mov
add
mov
xor
popf
add
mov
add
shl
sub
push
or
cmpsl
sahf
add
fisubrs
fcmovb
sbb
dec
mov
push
fidivl
pop
mov
jle
into
mov
add
mov
jg
mov
or
or
fldt
and
or
sbb
sbb
adc
inc
aad
fnstsw
jo
int3
ja
push
sahf
add
ja
lods
pop
test
xchg
pop
in
aad
popf
out
mov
fdivl
std
mov
cmp
iret
dec
mov
out
push
jno
mov
inc
xchg
mov
icebp
mov
xor
rcrl
add
pop
mov
jo
jmp
aad
imul
jl
cmp
les
popa
mov
xchg
push
repnz
sbb
test
loope
mov
sub
sub
loope
cli
testl
hlt
or
dec
shlb
mov
and
jae
fsubrs
test
cmpl
or
jge
les
shlb
pusha
sbb
filds
rclb
jmp
mov
sbb
adc
push
pop
mov
sbb
ja
sub
xor
addr16
sub
or
popf
leave
addb
or
push
cmp
lods
xlat
and
testb
in
xchg
mov
jmp
pop
pop
adc
add
sbb
data16
xor
inc
rcll
xor
xor
pop
push
rcl
push
scas
mov
call
jp
mov
or
push
or
imul
stos
xchg
pop
jge
shlb
les
push
mov
xor
adc
mov
sub
jecxz
xlat
aad
inc
jge
sbb
jmp
dec
cs
push
fcmovbe
rolb
xorb
cmc
xlat
push
push
lcall
or
push
js
xchg
pushw
incb
scas
inc
jb
aad
outsl
out
lret
adc
push
xchg
jg
data16
scas
jno
ss
mov
jae
dec
lock
aam
mov
hlt
pusha
jo
mov
lahf
repz
lahf
movsl
inc
sbb
lds
repz
fistpl
push
push
outsl
icebp
pusha
xorb
inc
cwtl
in
rcll
mov
cli
sub
inc
jecxz
or
inc
imul
xchg
dec
mov
push
fmuls
or
cmp
jnp
adc
orl
sbb
mov
lods
pop
sbb
xlat
fcoms
jns
jle
lock
clc
mov
mov
shrb
push
jns
sbb
dec
inc
mov
rcl
inc
xchg
mov
sbb
and
and
xchg
arpl
mov
in
or
outsb
inc
ds
push
mov
jg
out
xchg
cmc
jg
nop
xor
push
xchg
cmpsl
stc
dec
cs
out
daa
jns
inc
outsb
mov
std
sar
popa
into
jae
lock
mov
pushf
mov
test
jns
pop
fwait
icebp
das
sbb
je
enter
test
dec
lock
mov
test
subl
mov
test
mov
add
or
scas
clc
mov
adc
cmp
inc
loop
mov
xchg
jl
daa
lods
orl
cltd
out
addr16
insl
push
repnz
sahf
add
push
sarl
out
out
fwait
jecxz
mov
imul
jae
or
ja
xor
es
and
mov
pop
pop
cs
mov
mov
sub
loop
push
ret
jne
dec
lods
addl
in
std
scas
adc
imul
ss
ficoml
loope
jmp
push
xchg
inc
in
sahf
sbbb
xchg
stc
pop
pop
dec
mov
cmp
shrl
and
sahf
inc
push
icebp
lea
xchg
sub
jae
push
adc
pop
adc
test
lods
mov
push
pop
popf
shlb
mov
inc
push
sub
and
xchg
shr
pop
xor
sti
or
out
gs
out
int
adc
das
mov
testl
je
pop
or
ror
mov
mov
shrb
inc
stos
push
movsl
lahf
and
pusha
jge
cmpb
cmpsb
inc
mov
mov
or
je
ret
and
in
mov
negl
mov
rcrl
adc
aaa
xor
rcll
cmpsb
sbb
sub
xor
call
jno
mov
lea
inc
jae
push
insl
pop
stos
or
test
punpckhdq
inc
jp
pop
cmc
pop
xor
jns
adc
insl
adc
cwtl
push
ljmp
fsubs
mov
adc
lcall
xorl
inc
adc
out
sub
push
add
lret
mov
sub
lods
mov
xor
mov
mov
pop
popf
sub
lahf
ja
cltd
shll
jns
movsl
nop
mov
add
push
lret
in
orl
insl
rolb
jg
adc
push
loope
gs
imul
pop
pop
sahf
inc
sbb
test
xlat
adc
sub
fadd
les
out
add
xor
jecxz
in
inc
mov
les
add
dec
fnstcw
je
add
push
xor
adcb
xchg
roll
jne
addr16
mov
ds
pop
lock
mov
nop
insl
loope
fld1
sbb
inc
push
jno
aad
int
adcb
outsb
mov
fimull
xlat
and
jl
mov
stc
repz
sbb
sbb
dec
enter
pushf
lock
add
mov
decb
mov
pop
frstor
lahf
loope
jbe
sub
pushfw
test
mov
sbb
add
adc
scas
lods
jmp
testb
sub
bound
int
mov
aam
and
jl
push
lea
leave
lods
sahf
stos
xchg
dec
clc
cs
fwait
daa
or
push
mov
push
insb
js
mov
aad
lret
mov
pusha
xchg
shll
insl
adc
insl
and
cmp
insl
dec
sub
cli
sbb
adc
je
inc
sbb
xor
jne
fsubrl
push
iret
xchg
or
mov
jb
sub
xor
lcall
adc
gs
and
insl
or
ret
cmpsb
inc
sti
dec
enter
sbb
or
fwait
xchg
mov
add
jne
pop
cmp
call
data16
popf
sub
mov
and
insb
js
or
dec
idivl
sahf
sub
lret
mov
cmpsb
pop
mov
cmp
and
push
adc
sbb
mov
lods
mov
data16
lds
sbb
and
xor
stc
cmp
pop
push
pushf
ret
inc
inc
andl
shlb
mov
out
inc
jo
jl
xchg
aad
pusha
push
pop
negb
stos
loop
rcrb
fdivrl
pop
or
mov
loope
inc
imul
inc
jb
in
fcomps
cld
and
test
mov
jns
jge
push
outsb
jle
jl
loop
xor
push
je
shll
sbb
lret
xor
mov
add
andb
test
jg
movsb
roll
roll
aaa
imul
test
shll
pop
out
sbb
hlt
pop
adc
loop
pop
enter
pop
loope
push
xchg
ss
mov
lahf
and
xor
aam
cmp
test
cmpsb
ds
pushf
js
push
xchg
mov
roll
inc
or
dec
scas
adc
in
cwtl
dec
push
mov
xchg
roll
inc
insb
xchg
lcall
test
mov
addr16
in
add
inc
nop
and
stos
sbb
inc
test
pop
mov
pop
push
adc
pop
int
iret
cli
sbb
popa
es
dec
mov
sbb
in
into
incb
xchg
jecxz,pn
scas
ljmp
mov
stos
and
add
insl
push
mov
dec
xor
arpl
inc
outsl
ja
and
and
jecxz
out
sbb
ss
je
shl
sti
or
addb
insl
and
pop
pop
rorb
sahf
aaa
fs
aaa
pop
cmc
nop
xor
xchg
push
sbb
mov
xor
mov
lret
sbb
cmp
push
jg
shlb
or
roll
fldenv
cmpsb
lahf
fiaddl
punpckldq
push
imul
push
popa
int
push
in
dec
push
xchg
sbb
xor
push
push
cltd
fdivl
aaa
adc
and
or
mov
cld
fsubrl
dec
icebp
ret
xchg
sarl
inc
std
lea
mov
sub
dec
jecxz
dec
mov
pop
xor
test
pushf
pop
jmp
imul
push
insb
lea
incw
push
push
mov
test
xor
in
shl
mov
sbb
icebp
mov
sbb
pop
les
repz
dec
imul
aas
fsts
mov
cwtl
push
pop
mov
imull
or
cmp
lahf
mov
mov
xchg
into
mov
jo
pop
pusha
rorb
and
push
add
sub
stc
cld
mov
push
aam
lret
call
add
sbb
scas
inc
pop
pushaw
add
push
aaa
jl
fisubrl
sbb
pop
into
adc
jg
incl
mov
int3
clc
mov
andl
in
xor
dec
les
jl
xchg
push
xchg
iret
rcll
stos
test
inc
pop
negb
inc
xor
addr16
fs
data16
lods
addr16
fstp
push
icebp
cmpsl
ss
sbb
add
fisttpl
test
inc
hlt
stc
add
call
aaa
push
dec
ss
jno
mov
cmp
inc
mov
mov
repnz
es
enter
mov
fstps
shrb
add
pusha
inc
fstl
shrl
inc
xchg
test
and
mov
push
and
pop
jp
ret
add
or
stos
mov
mov
es
insl
daa
add
dec
and
xchg
add
and
mov
mov
add
pop
dec
jg
cmpb
scas
stos
lahf
sti
sbb
pop
mov
into
dec
in
mov
sbb
add
pop
popa
cs
add
stc
cmpsl
mov
pop
sub
mov
jp
cmp
xlat
pop
inc
mov
insb
push
mov
mov
mov
aad
imul
xchg
aaa
ja
sbb
add
pusha
lret
stc
lea
rorb
test
frstor
xchg
rcrl
adc
mov
mov
in
scas
xor
sub
sti
pop
aad
mov
dec
cmp
add
jo
mov
cmpsl
push
jbe
cmp
xchg
cli
inc
xchg
cmpsl
jns
sub
cmp
dec
scas
clc
dec
pop
test
sub
mov
cmpsl
sbb
sbb
dec
je
dec
sbb
mov
or
fsqrt
popf
push
insb
push
xchg
movsb
js
sbb
rclb
and
cmp
fsubrl
push
dec
and
pop
add
cmp
mov
fsubrp
jge
mov
and
ljmp
stc
lds
jno
mov
xor
pop
mov
mov
push
roll
fldl
lret
popf
rcl
pop
push
stos
and
cmpsb
clc
dec
sub
mov
jae
sub
paddw
pop
ret
lret
pop
mov
cwtl
stos
adc
sub
aas
pop
lret
repnz
xor
pop
stc
xchg
xor
test
cld
mov
inc
xchg
aam
pop
aam
cmp
sub
push
mov
xchg
lods
pop
fadd
dec
mov
push
mov
inc
pop
adc
inc
popf
sarl
popf
movsl
cli
sub
lock
xor
mov
les
jne
sbb
or
inc
aaa
mov
faddl
push
inc
loopne
mov
jne
nop
sub
shl
nop
cmpl
cli
and
mov
inc
repnz
orl
imul
sbb
mov
jns
mov
les
popa
fcom
test
cmc
mov
or
out
leave
lds
in
stos
sbbl
out
jo
fdivrp
sbb
or
cmpsb
clc
rcrb
sub
clc
pop
pop
xchg
clc
test
dec
lds
lods
push
loopne
popa
jg
adc
test
or
add
insl
push
mov
sbb
aam
hlt
jbe
jmp
pop
lret
and
mov
mov
or
cli
mov
pop
inc
pop
pop
cmp
cmp
fists
fbld
icebp
orb
xchg
sub
pushf
cli
lock
add
loopne
insb
jno
leave
mov
or
test
es
adc
pop
mov
push
hlt
sti
inc
call
push
xchg
out
insl
xchg
pusha
loopne
xchg
and
lods
in
and
jg
stos
leave
sub
arpl
pop
inc
dec
xor
jae
add
inc
and
sahf
jo
pop
and
jmp
sub
cmc
out
seta
or
sbb
scas
push
sbb
lret
inc
rcr
bound
jno
cmovno
lds
xchg
inc
lret
mov
cmp
sub
inc
imulb
or
push
push
icebp
clc
push
stos
jno
and
mov
xor
nop
dec
pusha
mov
sub
int
shr
je
test
add
xor
adc
jb
mull
cmp
jno
js
pusha
adc
xchg
fistl
std
sbb
cwtl
adcl
and
je
pusha
add
out
jmp
mov
cmc
pop
scas
sarl
xlat
lret
aam
ja
cld
mov
out
scas
sub
stos
add
adc
adc
adc
scas
popf
dec
inc
lock
cmp
sub
pop
stos
fcomps
add
xor
pop
dec
mov
mov
sbb
in
or
movsb
fistpl
sti
outsb
and
enter
cmp
js
stos
daa
dec
pop
inc
mov
pop
insl
cmp
lds
adc
xchg
rol
shll
mov
test
cmc
lds
subb
int
or
push
popf
popa
test
sbb
sub
pop
stc
cmpsb
push
out
mov
es
scas
or
nop
in
stos
fisttpl
inc
lods
jle
dec
test
adc
sub
in
jbe
filds
pop
sbb
add
gs
sub
dec
xor
lcall
inc
in
add
push
rdmsr
sti
bound
mov
aad
jae
fcomi
and
andl
movsb
cwtl
mov
pusha
mov
jbe
mov
jp
icebp
push
push
add
int
ds
and
or
addb
adc
nop
notl
cs
in
stc
sahf
repz
leave
rcr
inc
cmc
add
mov
js
outsb
decl
imul
xor
and
inc
cli
mov
call
scas
movsl
adc
pop
cmp
xchg
sub
repz
addr16
sbb
adc
xor
push
cmp
mov
mov
enter
repnz
pop
jmp
jecxz
jge
lcall
push
sbb
cld
das
jp
add
cmc
nop
shlb
nop
pop
jnp
daa
testb
jnp
mov
push
iret
push
jns
lahf
adc
xchg
pusha
add
cli
js
loope
mov
lock
in
mov
jle
cmp
or
mov
jmp
cwtl
popf
ficomps
mov
ja
add
mov
bound
mov
xor
rolb
int
stc
dec
data16
scas
je
mov
pop
stc
or
mov
sub
sub
mov
aaa
push
and
sub
or
ds
lret
jmp
mov
jns
xor
xor
inc
imul
adc
cmp
fnstcw
jae
in
fcomi
mov
sti
add
jb
push
pop
lcall
or
adc
rcr
jnp
lock
adc
jp
sub
sub
ret
das
mov
lds
stos
sbb
ss
push
add
push
imul
dec
es
pop
test
pop
adc
ret
hlt
jns
sti
sahf
push
cltd
dec
sub
xor
inc
adc
dec
popf
jne
rcl
push
test
insb
imul
pmulhw
in
bound
xor
jecxz
xchg
in
add
rorb
enter
xor
cld
out
leave
cwtl
add
dec
push
inc
lret
pop
dec
int3
pop
in
test
push
je
lret
cmp
mov
mov
mov
bnd
xor
lea
inc
jg
mov
out
cmc
sahf
mov
inc
leave
xchg
mov
mov
addb
stc
dec
mov
xchg
int
xchg
enter
ja
sub
stc
mov
mov
add
outsb
enter
inc
inc
sub
and
add
dec
adc
aas
daa
mov
icebp
fdivs
and
pop
imul
mov
pop
scas
or
jecxz
dec
out
pusha
insb
dec
ja
sbb
adcl
push
icebp
sub
testb
ret
cmpb
push
scas
mov
lret
adc
arpl
lock
inc
cmp
and
subl
cmpsl
mov
popa
std
arpl
mov
sbb
lret
mov
inc
js
fcmovnu
lea
cs
xor
fidivs
enter
test
cld
mov
push
adc
cmp
cmpsb
sbb
push
mov
in
sub
fmull
and
sbb
leave
imul
insb
xor
cmpsl
lods
cmp
sti
mov
sbb
lcall
inc
jnp
ja
push
mov
movsl
sub
mov
jae
aad
inc
stc
aad
mov
movsl
jecxz
mov
jmp
adc
pop
outsl
loop
pop
cwtl
inc
mov
sub
jo
out
dec
pop
das
enter
in
add
ljmp
addr16
lock
or
sub
xchg
fwait
test
fxtract
mov
data16
sti
mov
inc
push
and
insl
lock
jecxz
lods
or
sti
sbb
push
pop
fidivrs
adcb
lret
xchg
mov
dec
mov
gs
rolb
push
pushf
or
jl
pop
sbbl
sbb
push
mov
dec
mov
sar
hlt
sub
push
pop
and
ja
xor
add
mov
xchg
mov
pop
adc
mov
xchg
mov
lods
sarl
adc
cld
imulb
gs
and
push
push
or
andb
fistpl
pop
adcb
xor
add
xor
pop
imul
outsb
ds
push
add
cmp
lret
jmp
or
iret
outsl
rolb
mov
orl
imulb
loop
insb
cwtl
lret
dec
sbb
cmp
cmp
xchg
xorl
push
jno
sbb
and
data16
mov
pop
cmp
inc
jo
push
gs
inc
push
sub
pop
into
push
mov
dec
jo
in
dec
adc
xchg
test
vcmppd
push
pop
adc
fmull
test
aam
daa
sbb
add
pop
mov
pop
adc
jge,pt
insb
jnp
test
out
aas
test
mov
add
in
in
xor
pop
pop
cmpsb
xor
in
xor
xor
sbb
mov
cmp
in
gs
inc
or
pop
sbb
insb
cli
nop
jno
sbb
lods
mov
xor
and
fs
cmp
movsl
jne
jge
sbb
clc
cwtl
fsubrs
aam
mov
add
sbb
push
in
or
out
push
cmp
ret
inc
bound
stos
fst
or
or
push
cwtl
fmull
xchg
and
jp
test
stc
mov
sbb
jecxz
lods
sahf
popf
mov
push
push
sbb
push
rorl
push
and
adc
rol
lock
cmp
popa
xchg
cmpsl
push
outsb
mov
sarl
push
mov
dec
repnz
lahf
out
cltd
add
rcrl
pop
jg
lock
sub
push
subl
push
fcom
push
popf
push
pop
scas
sbb
mov
dec
mov
aaa
mov
fwait
popa
mov
je
push
rorb
and
fmull
adc
inc
movsb
pop
push
mov
sbb
sub
bound
sub
lcall
cmpb
lret
ret
or
iret
out
scas
mov
cwtl
jne
dec
fwait
aas
pushl
int
inc
cmp
mov
and
mov
aaa
lea
int
mov
movsl
xor
xchg
test
aaa
mov
out
xchg
xchg
pusha
push
mov
push
cmp
jo
mov
subb
mov
mulb
jo
fsubrp
das
sti
imul
xor
sbb
ss
stos
push
shll
divl
sbb
push
test
add
pop
and
iret
fldt
inc
pop
sbb
movsb
sbb
repnz
ds
fwait
adc
cmp
jo
in
and
mov
cmp
inc
adc
not
clc
adcb
pop
scas
insl
mov
ljmp
std
push
nop
cmpsb
push
xor
test
imul
jae
jmp
cmp
cld
and
mov
and
mov
and
jno
std
add
push
mov
movsb
cmp
cli
xor
push
stc
inc
inc
test
dec
lods
bound
pop
xorl
adc
push
enter
mov
sub
loope
arpl
adc
test
movb
and
testl
insb
cmp
push
xchg
jne
test
mov
xor
andl
scas
jnp
call
push
jno
enter
mov
inc
dec
push
jo
mov
cld
call
push
and
cli
xchg
mov
mov
aas
shr
sub
stos
jp
jle
stos
inc
push
pop
cmp
jae
test
dec
or
push
jecxz
pop
scas
imul
inc
dec
scas
andb
sbb
stos
test
mov
and
and
adcb
mov
pop
xor
or
jecxz
daa
cmp
or
push
jl
mov
jo
lds
push
push
and
adc
pop
sbb
dec
fstpt
scas
and
in
mov
mov
test
mov
stos
rol
repz
add
or
sub
out
xor
mov
dec
iret
xor
push
test
inc
fsub
loop
test
mov
lret
pop
cld
xchg
pushl
insl
cmpb
inc
cmp
int3
push
aad
cmp
or
in
cmp
xor
clc
incl
xchg
or
popf
out
out
fstpt
mov
add
testb
popa
test
xchg
add
into
sbb
jmp
cmp
sub
test
das
bound
jp
mov
push
mov
mov
cs
xor
push
jbe
jae
cmc
data16
lcall
pusha
cwtl
add
mov
mov
sub
movsl
adc
mov
icebp
out
fcomp
aas
push
setns
call
repz
mov
dec
pop
dec
sub
pusha
sub
movsl
jbe
arpl
and
jns
push
es
cmpsl
jbe
push
mov
insb
mov
mov
mov
fadds
xor
movsb
insb
dec
sbb
push
mov
cmpsl
movsb
cltd
lcall
fwait
add
hlt
sbb
fwait
sub
mov
fmull
adc
jp
jo
outsb
test
dec
and
sbb
movsl
or
xor
and
sub
jp
mov
xchg
and
lcall
inc
xor
cltd
jp
jg
call
idivb
jnp
test
and
pop
ror
push
fldcw
jb
andl
fiaddl
mov
into
xor
jno
inc
or
mov
add
nop
divb
mov
pop
in
mov
adc
mov
cmpsb
lods
inc
push
pop
insb
faddp
mov
pop
movsb
sahf
push
sar
cld
ja
test
das
shll
scas
jle
dec
cmp
mov
popa
xchg
inc
pop
mov
ffree
push
pop
add
fildll
das
add
out
mov
mov
shl
hlt
stc
mov
sbb
shrb
xor
movsb
popa
push
sarb
test
lret
jg
adc
push
pop
inc
xor
lds
imul
pushf
mov
rclb
cmp
mov
dec
aam
addr16
dec
add
sbb
push
sbb
jp
fstpt
adc
out
mov
aaa
pop
ds
fldl
and
push
xor
fs
lods
xchg
scas
cmp
inc
cmc
xchg
imul
leave
stos
mov
or
test
rol
nop
mov
adc
leave
fsubs
mov
shrl
sbb
add
mov
xor
inc
addr16
mov
fidivrl
mov
push
scas
out
or
xor
js
jmp
mov
cmc
int
clc
inc
jmp
sbb
in
rcrl
sub
test
lods
jns
mov
mov
mov
xchg
mov
shll
dec
inc
mov
imul
xorl
stos
cmp
test
enter
lds
in
pop
sti
mov
xchg
or
xlat
sub
shrb
lods
mov
push
pop
adc
mov
xchg
lret
mov
adc
imul
daa
sub
xor
sbb
iret
inc
inc
test
inc
sahf
fbld
fsub
movsl
sbb
jne
cmp
bnd
jge
popa
push
cmp
insl
fdiv
in
mov
stc
int3
cltd
push
out
test
xor
pop
repnz
dec
jne
jae
scas
add
fucomip
addb
push
frstor
cmp
ret
adc
jne
icebp
adc
push
hlt
test
xchg
out
loope
mov
lret
cmp
fmull
testl
std
push
pop
movsl
sub
mov
dec
cmp
fisttpl
addb
fsubrl
jmp
cli
mov
lock
mov
push
jnp
pop
mov
mov
aam
outsl
pop
xor
jp
leave
out
imul
jb
or
insb
fldl
adc
cli
xchg
in
cmpsl
loope
or
int3
cmpsl
enter
insb
dec
push
lock
fcoms
lock
push
adc
mov
pop
int3
das
cwtl
mov
ficomps
out
fmuls
imul
in
mov
jo
dec
daa
jmp
jns
inc
inc
dec
cwtl
push
and
push
test
push
ja
xor
lahf
push
imul
inc
adc
push
or
mov
shl
loopne
mov
addr16
cmp
fstps
jnp
inc
das
or
sub
idivl
add
fs
lret
jecxz
and
dec
pop
push
mov
insb
loope
scas
mov
lcall
cli
cmc
add
mov
shll
sbb
dec
mov
pop
popf
psllq
es
lock
fdivl
xlat
xor
cmp
mov
adc
push
ret
rcl
or
add
mov
subb
push
jecxz
sub
xor
lock
jecxz
mov
add
popa
adc
lret
xchg
cmp
loop
jno
pop
pop
lahf
popf
outsl
movzbl
sub
push
fldcw
dec
int
pop
jnp
loopne
call
aas
movsb
sub
add
imul
sti
fisubs
call
in
fadds
jnp
rorl
sub
push
imul
xor
xor
bound
push
dec
mov
lods
ss
sti
enter
pop
stc
pop
jbe
push
mov
mov
add
popa
pusha
xchg
mov
test
in
xchg
imul
lret
aas
shlb
int
and
mov
and
push
int3
cld
mov
push
pop
adc
push
push
jmp
pop
sbb
jns
jle
push
andb
sbb
sub
je
mov
and
leave
in
cmpsb
pop
mov
fisttps
push
hlt
mov
fyl2x
scas
movsb
xchg
mov
mov
xorb
stos
lock
in
jl
add
dec
pushf
cmp
das
scas
or
xor
and
movsl
push
iret
xor
mulb
mov
addb
adc
sub
stos
dec
cmp
ljmp
jl
mov
jg
cmc
fwait
movsl
rolb
sub
aas
arpl
jns
lcall
push
inc
dec
rcl
dec
les
aad
mov
push
call
xor
push
adc
lret
iret
mov
push
fcompl
stos
xchg
mov
les
mov
lea
ljmp
in
adc
outsl
aam
add
mov
sub
xor
addr16
sub
testb
sub
xor
xorb
or
fistps
lods
int3
fisttps
mov
lods
ljmp
mov
jno
in
jbe
cmp
mov
leave
scas
aad
xchg
inc
ja
xor
pusha
sahf
insb
ds
add
pop
add
outsb
cmc
scas
adc
fstl
add
push
push
aad
cs
mov
hlt
in
jne
xor
call
xor
das
jnp
dec
pop
out
xor
leave
add
adc
cmp
movsl
mov
or
mov
mov
pop
lods
bound
int
ss
imul
js
pop
mov
sub
xor
inc
cmp
scas
in
xlat
filds
dec
inc
inc
and
loope
iret
in
subl
dec
push
and
jmp
mov
mov
xor
pop
push
test
mov
sub
hlt
or
std
pop
adc
and
mov
jae
outsl
and
push
imul
sub
inc
movsb
ficomps
dec
or
sbb
in
push
scas
ret
lgs
mov
frstpm(287
shl
in
cwtl
sahf
jle
gs
jl
and
insb
lods
inc
lods
ret
jne
fisubrl
out
test
div
xchg
xchg
mov
cltd
sbb
jns
add
cld
sub
mov
icebp
outsl
add
pop
and
xchg
adc
fstps
xor
and
rol
cmp
fldcw
daa
bound
lods
movsl
enter
mov
mov
sbb
adc
stos
negb
loop
xchg
rcrl
ss
sar
and
ljmp
push
ret
sbb
inc
imul
sbb
push
fsin
mov
ret
hlt
dec
and
lret
out
sbb
xchg
xchg
mov
ja
mov
or
sub
mov
push
pop
xchg
mov
xor
jbe
ja
test
and
insb
pop
mov
jo
ljmp
and
movsl
or
xchg
xchg
fdivr
es
aam
jle
popl
and
inc
adcb
lahf
xchg
sbb
add
pushf
add
fwait
mov
in
lods
jns
out
mov
mov
add
enter
shlb
add
in
push
add
nop
ds
mov
jl
adc
shlb
movsl
sbb
dec
out
cmp
enter
dec
filds
sbb
pop
sbb
fs
lret
xor
push
cmp
push
pop
mov
clc
fildl
mov
sub
decl
scas
push
and
pop
lock
fdivl
jb
mov
jns
fxam
jle
lea
mov
mov
clc
loopne
cmp
jmp
xor
dec
data16
xor
and
cmpsb
das
and
je
xchg
stc
mov
cmp
pusha
pop
enter
add
jmp
pop
cmc
mov
movsl
ja
clc
out
push
insb
mov
jp
aad
inc
sarb
push
xchg
in
push
std
sar
cmc
push
jo
dec
jl
sbb
jmp
jp,pt
pop
pop
out
add
xchg
sbb
out
stos
push
enter
and
lods
jp,pn
popf
hlt
cmpsb
xchg
xchg
popf
loope
imul
inc
jl
in
repnz
cmp
xchg
xor
movsb
xchg
mov
sbb
and
pop
mov
xor
aaa
in
hlt
pop
xor
xchg
sbb
out
cmpsl
xor
dec
lret
inc
sahf
sbb
fwait
mov
pop
adc
mov
stc
in
push
std
fdivs
fs
imull
js
add
xchg
sbb
dec
jbe
xchg
shl
in
mov
xor
jbe
mov
popf
or
jnp
imul
imul
add
mov
in
pop
movsl
pop
mov
adc
xchg
out
pop
or
adc
xor
clc
adc
jno
cmpsb
lock
in
leave
mov
jbe
inc
cmpsl
lahf
dec
test
dec
pop
mov
in
ja
jae
insb
mov
mov
mov
mov
dec
inc
movsl
sti
repnz
xor
jo
mov
and
pop
and
dec
cmp
mov
das
push
sub
das
xchg
cmp
ficomps
mov
repz
jl
xchg
mov
mov
adc
cmp
or
mov
and
scas
mov
call
adc
jg
dec
stc
push
idivb
fsts
orb
sub
cmp
add
push
mov
push
and
std
outsl
push
fs
test
jae
jg
je
mov
arpl
adc
test
outsb
lret
xor
cmp
jge
or
push
xchg
cmpb
icebp
ja
lahf
enter
in
add
jmp
and
add
and
stc
int3
mov
rcrl
not
movsb
lock
jle
add
jl
int
mov
repnz
mov
fnsave
cmp
repz
cs
pop
test
mov
ficomps
in
scas
push
adc
scas
les
mov
aam
shll
jnp
cwtl
sub
gs
popa
mov
sub
push
jle
xlat
or
mov
stos
out
imul
jle
movb
pop
add
mov
push
jmp
outsb
adc
jo
or
sbb
call
loopne
xchg
insb
pop
scas
mov
shlb
jb
jle
mov
add
sarb
divl
int
xchg
fsubrs
pop
pop
movsb
icebp
add
and
push
adc
enter
push
dec
pop
sub
push
aas
cmp
ja
cmpsb
cmp
stc
fstps
andl
cmc
mov
ret
je
shl
push
cmp
xchg
fdivl
incl
lea
ljmp
jbe
scas
xchg
cmpsl
push
xor
outsb
and
out
add
add
out
mov
out
mov
or
mov
inc
nop
dec
aam
push
mov
sbb
sub
loop
mov
inc
loop
mov
and
sub
jns
lods
sbb
popa
jg
leave
add
sahf
cs
out
std
mov
test
in
and
sub
dec
sub
jnp
inc
and
xchg
mov
imul
pop
dec
pop
pop
testl
ret
adc
hlt
xor
imul
jb
push
enter
dec
jmp
jns
dec
or
popl
es
or
mov
jno
repz
sub
lcall
lahf
std
lret
inc
addl
cmp
mov
es
cmpsb
loope
ror
pop
aam
imul
lret
jp
fincstp
mov
cmpsb
cmp
lcall
dec
data16
fwait
dec
les
inc
mov
in
test
int3
mov
push
bound
sub
mov
cmp
cmp
mov
mov
lret
mov
mov
pusha
dec
dec
cmpsl
shlb
mov
or
push
es
ret
jo
leave
push
lea
inc
mov
sbb
fisubrs
inc
adc
add
xor
pop
imul
jbe
mov
stc
lods
lcall
shlb
mov
adc
jmp
pushf
shlb
popl
rolb
pop
test
clc
mov
dec
stos
adc
or
mov
enter
pop
aam
jns
or
push
imul
je
pop
push
ret
inc
xor
test
and
mov
pop
dec
xor
inc
test
pop
lret
and
jle
mov
adc
push
outsl
mov
and
test
cmp
mov
add
pop
rcl
fstp
push
mov
add
mov
movl
and
scas
sbb
push
test
mov
das
mov
push
add
scas
inc
sbb
testb
leave
push
sub
in
rorb
jge
push
push
add
popa
jns
scas
jmp
gs
lret
test
adc
fwait
dec
stc
notb
cmp
roll
movsb
dec
jle
xor
ja
or
fnstsw
add
scas
add
xchg
mov
fnstenv
into
xchg
aam
sti
pop
jno
scas
mov
fcmovbe
in
in
xor
inc
outsb
repz
pusha
aas
push
push
mov
fistps
dec
stos
lds
bound
inc
push
or
jl
adc
lret
ds
inc
outsb
mov
add
xor
sti
aaa
repnz
adcl
mov
cwtl
jle
mov
or
add
pcmpeqd
stos
cmp
adc
aas
sahf
xchg
jns
stos
sbb
loope
sbb
jg
test
push
popa
arpl
ss
dec
das
xor
lret
shll
xchg
in
icebp
insb
mov
push
push
popa
fnsetpm(287
push
sbb
lea
inc
imul
adc
fidivs
mov
aas
adc
jno
aas
push
sub
cmp
push
pushf
leave
popa
fs
sbb
add
scas
xchg
cmpsb
hlt
scas
dec
adc
add
sub
mov
adc
int
test
inc
popf
aad
add
add
push
stos
mov
int
cwtl
adc
mov
push
add
mov
in
sub
and
sub
xor
jbe
mov
inc
insb
sub
inc
xchg
jl
in
mov
xchg
or
xchg
call
fistps
in
pop
adc
gs
xor
sbb
icebp
add
lods
imul
mov
icebp
sub
adc
jecxz
mov
sahf
xor
aam
pop
cmp
jae
pop
flds
cli
lcall
stc
lahf
in
or
or
popf
mov
jno
sti
xchg
incl
push
orl
lock
popf
ror
sbb
xchg
cltd
mov
popf
push
push
popf
inc
push
shl
sbb
jne
and
xlat
stos
cmpsb
mov
ljmp
jmp
iret
push
test
or
adc
sbb
push
add
int
xor
sahf
push
into
into
push
insl
pop
popa
fdivr
testl
push
aas
lods
sbb
lret
rol
xchg
rorl
cli
and
adc
rclb
sahf
push
cmp
cs
outsl
call
hlt
inc
adc
xchg
je
mov
jge
cltd
stos
aaa
fwait
test
push
rcr
jb
cs
mov
outsl
lret
popf
lea
out
lods
test
pop
dec
sbb
jne
sub
loope
in
jbe
push
jno
in
sbb
mov
dec
mov
sub
dec
xor
and
movsb
repz
test
add
pop
test
scas
testb
or
jp
jp
mov
inc
pushf
in
inc
cld
insl
mov
add
pop
xchg
lahf
cmp
jne
xchg
mov
call
and
cltd
push
add
jp
push
push
ja
or
sbb
scas
jg
push
lcall
rclb
push
sub
dec
es
stc
push
es
or
xchg
lret
or
popa
clc
xchg
jns
push
jbe
incl
xchg
add
dec
sub
daa
out
or
lcall
les
jbe
in
scas
int
mov
scas
xchg
inc
out
movsb
mov
scas
loopne
outsb
xor
xor
sarl
mov
lods
in
std
dec
adc
xor
adc
mov
inc
cs
mov
adc
rcrb
xor
js
pushf
out
pop
ds
xchg
aaa
xchg
sbb
push
mov
xchg
push
loopne
dec
cmpsb
jp
adc
xor
jecxz
scas
mov
sbb
cmp
repnz
dec
testl
ficompl
sub
call
sahf
adc
ds
aam
mov
cmp
repnz
add
push
dec
mov
ret
cmpsb
cs
pop
sbb
lds
sbb
adc
mov
adc
push
sbb
cld
adcb
in
ffree
dec
or
inc
aam
les
push
ljmp
add
jmp
dec
sbb
jg
mov
mov
xchg
test
test
mov
pop
inc
inc
mov
stos
jecxz
pop
sbb
mov
cmp
int
mov
push
pop
std
mov
ljmp
mov
push
mov
pop
jmp
push
hlt
ja
ja
not
int3
es
add
mov
mov
enter
add
mov
aaa
xchg
lea
sbb
mov
inc
insl
filds
xchg
sarl
xor
sbbl
pop
hlt
adc
test
cmp
mov
rolb
cmp
pop
mov
je
inc
dec
ficomps
mov
jmp
fisubrs
push
dec
popa
idiv
arpl
xchg
test
jecxz
mov
hlt
mov
cmpsb
mov
test
addr16
push
or
mov
ret
inc
dec
ret
pop
xchg
mov
imul
pop
out
mov
repz
lock
mov
gs
adc
adc
mov
push
mov
jmp
iret
mov
inc
addr16
cli
push
int
jo
ja
arpl
cmovg
in
iret
iret
add
fldl
aaa
test
push
push
and
mov
xchg
bound
idivl
dec
inc
int3
pop
pop
lods
add
insb
mov
xchg
jl
xchg
mov
lea
push
shlb
cmp
push
das
cmpsb
stos
dec
jne
shr
xchg
ja
aad
inc
lcall
mov
mov
cmp
lods
das
mov
or
jmp
xchg
pushf
scas
xchg
jnp
pop
sub
repnz
add
test
add
mov
adc
iret
aas
pop
test
cmp
adc
adc
and
in
imul
icebp
push
push
sub
xlat
cmp
pusha
xchg
xchg
mov
push
fbld
out
in
or
jno
rolb
shlb
nop
iret
sbbb
scas
inc
inc
inc
add
mov
ret
sti
push
dec
fsubrl
adc
jae
lods
xchg
enter
xchg
divl
cmp
lock
mov
pushf
in
mov
jb
fcoms
in
dec
pop
sarl
fimuls
mov
out
dec
out
outsl
or
aam
inc
sbbb
ja
pushf
jle
insb
xor
faddl
fsubrs
push
je
mov
insl
xchg
movb
pop
cmpsl
frstor
mov
pusha
leave
inc
adc
cmp
xchg
pop
push
fwait
into
xchg
je
cmc
inc
xchg
fstl
testl
imul
loopne
mov
pop
scas
imull
adc
push
pop
sahf
inc
das
std
in
push
jne
pop
loop
insl
xchg
dec
pop
and
inc
xchg
xor
mov
pop
mov
dec
and
lock
push
dec
ffree
add
mov
lods
jge
subl
ljmp
jp
pushf
ss
sub
pop
outsl
sti
inc
mov
pop
jmp
stc
jae
add
xchg
lock
dec
push
mov
hlt
push
in
je
cmp
jmp
push
ds
xor
repnz
inc
or
ret
stos
cs
in
movsb
cli
out
in
call
dec
mov
mov
xor
push
dec
sbb
push
pop
mov
iret
mov
mov
dec
test
dec
xchg
push
das
sub
mov
nop
aas
sbb
adc
lock
jns
mov
jp
es
insl
test
fwait
orb
xor
dec
mov
ret
mov
mov
out
mov
nop
adc
xor
xchg
cmpsl
inc
cmpsb
ficomps
mov
punpcklbw
das
repnz
mov
call
repz
sbb
dec
jae
ror
in
push
jbe
mov
mov
lret
mov
pop
push
xchg
pop
sbb
sahf
pop
pop
scas
in
mov
adc
dec
sbb
pushl
push
pop
jo
mov
lret
popa
sub
mov
mov
sti
stos
sub
hlt
mov
jecxz
dec
xchg
xor
sahf
adc
inc
push
leave
or
push
lahf
bnd
out
inc
add
push
popa
sbb
addr16
dec
es
loope
and
xchg
adc
iret
imul
dec
std
pushf
dec
mov
rcr
push
pop
aaa
imul
popa
sahf
sbb
and
pop
dec
add
mov
aas
push
inc
add
inc
lods
adc
frstor
jmp
dec
xlat
loope
ret
orb
loope
daa
ret
stos
and
rorl
xchg
fldcw
ja
pop
mov
pop
adc
rorl
xchg
and
cmp
daa
pop
mov
mov
jecxz
or
out
loope
push
add
xor
adc
lcall
xchg
rolb
aad
and
clc
xor
das
lret
cld
lea
lahf
jb
and
jb
imul
cld
test
leave
fnsave
xchg
adc
shr
ljmp
lret
add
push
lcall
dec
inc
dec
jb
rcrl
lahf
bound
sbb
sub
out
inc
add
movsl
je
xor
pop
inc
sbb
inc
in
idivb
imul
test
cwtl
scas
or
dec
add
push
shll
stos
orps
icebp
sti
mov
in
cmp
and
loop
add
xchg
pop
nop
sbb
pop
insb
dec
into
xchg
mov
imul
push
dec
jle
jns
xor
add
ja
sub
das
lods
sti
js
pop
repnz
add
repz
test
cmp
fstpt
scas
push
cwtl
pop
aas
mov
dec
or
mov
inc
sub
dec
lcall
insb
xor
jno
nop
inc
xchg
lahf
mov
mov
shlb
out
mov
mov
sub
jg
add
xor
filds
call
mov
int
add
xchg
cmp
mov
leave
lahf
jle
out
or
jecxz
xlat
xor
imul
mov
cld
xchg
mov
scas
push
scas
pop
lock
xchg
sub
cmc
jae
xor
outsb
out
mov
bound
push
push
data16
xorb
sub
mov
pop
and
outsl
daa
push
out
hlt
and
add
mov
inc
mov
stos
scas
xchg
ret
inc
dec
sub
jno
outsb
and
daa
addl
or
push
pop
in
movq
xor
jbe
stc
lods
jbe
imul
dec
and
fsubl
cmp
out
cmp
add
in
sbb
xchg
xorb
jl
loopne
loop
jg
iret
jno
cmp
jmp
ret
out
shll
cld
ficoms
mov
sbb
test
call
aas
mov
and
inc
mov
mov
sbb
lds
inc
inc
and
mov
test
jno
fdivs
scas
and
lea
and
sub
fldcw
pop
cmp
addr16
sub
flds
cmp
leave
xchg
or
int
adc
push
push
loopne
cwtl
ffreep
stos
outsb
mov
sarl
mov
aad
adc
cli
ror
xchg
aam
inc
inc
jno
pop
xor
sbbb
das
push
add
clc
in
inc
imul
out
dec
out
sub
fldcw
shlb
ja
or
ss
imul
movsb
popf
jge
jmp
push
adc
in
ret
xchg
sub
dec
push
ret
or
arpl
or
insl
xor
mov
push
adc
adc
sbb
add
lahf
push
sub
sub
mov
leave
or
test
pusha
insb
pop
add
cmp
popa
sub
and
cmp
enter
pop
icebp
daa
imul
adc
sbb
lock
mov
faddp
ljmp
inc
test
pop
xchg
fwait
dec
and
add
mov
repnz
adc
mov
ret
xchg
scas
or
cmp
std
js
and
cmpb
jo
or
or
cmp
mov
mov
xlat
test
push
repnz
je
xchg
push
jo
movsl
out
sti
mov
or
lods
out
mov
and
add
neg
xchg
test
and
push
push
push
push
ror
stos
mov
push
in
cmp
faddl
imul
sbb
lock
outsb
push
clc
push
pushf
xchg
dec
arpl
mov
loop
cmp
cmpsl
jl
ljmp
xchg
dec
xor
or
test
sbb
sbb
pop
jmp
fwait
bound
jmp
cmpsl
cmp
mov
mov
stc
mov
cwtl
or
js
dec
pop
lds
mov
ljmp
mov
js
loop
xlat
add
push
xor
test
pop
cmpsb
popfw
add
scas
push
cmp
loop
icebp
nop
inc
add
pusha
jmp
mov
pop
sub
jbe
insb
imul
rcll
mov
cmc
adc
test
mov
cmc
and
mov
data16
aas
in
push
lods
jp
sbb
mov
pop
mov
cmp
sbb
jle
dec
add
mov
pop
jmp
std
adc
clc
pop
xor
js
sub
dec
mov
es
add
dec
jl
aad
mov
loope
jmp
or
cltd
fnstenv
and
add
ss
pop
pop
sbb
fists
test
fidivs
cmpsl
sti
clc
out
mov
inc
pop
mov
and
out
dec
test
mov
sbb
ret
or
arpl
xor
push
pusha
and
hlt
clc
ds
scas
mov
pop
cli
inc
cmpsl
jg,pt
inc
or
pop
sar
ljmp
stos
dec
jle
cmpsl
jne
pop
dec
addb
mov
movsl
xchg
clc
mov
out
aam
mov
cmp
loop
lods
or
sbb
adc
xor
sub
jbe
xchg
cmp
or
enter
mov
das
cmp
push
xorb
nop
ficoml
stos
stos
xchg
sbb
cmp
push
mov
pop
in
cwtl
sub
lret
cmpb
jl
mov
pop
mov
push
or
inc
orl
loop
pop
mov
push
sbbl
scas
imul
cli
jnp
lret
es
and
adc
xlat
clc
adc
out
or
inc
int3
inc
mulb
push
dec
ljmp
push
lahf
hlt
push
sub
outsl
mov
leave
sbb
imul
mov
sub
lahf
loope
mov
mov
cli
arpl
test
push
subb
mov
pop
popf
mov
std
push
xchg
les
add
imul
adc
sub
mov
jno
mov
lods
push
mov
mov
dec
pop
arpl
pop
fstps
xchg
clc
aam
gs
dec
imul
pop
leave
insl
mov
call
in
add
xor
js
push
mov
push
lret
inc
fstps
push
inc
aas
jbe
or
xchg
push
xchg
int3
loope
mov
inc
pop
push
in
pop
arpl
sti
lods
sub
lds
and
into
dec
repz
js
jb
gs
inc
mov
jns
out
cld
xor
xchg
mov
mov
push
aas
movsb
fbstp
rorb
flds
jae
pop
pop
xor
push
ljmp
sub
or
lcall
jns
mov
fildl
push
mov
into
rorb
inc
sub
xor
dec
rcll
fnsave
int
decw
ficompl
ss
or
ja
jno
lcall
mov
test
rolb
gs
arpl
repz
xchg
sbb
sarb
push
adc
mov
push
xchg
int
cmp
add
dec
lock
call
pushf
mov
pop
daa
loop
adc
cmp
outsb
sub
int
sbb
xor
and
dec
scas
jo
in
jno
push
or
test
pop
push
push
mov
shll
test
pop
popa
pop
inc
call
cmpsl
jnp
xor
data16
ds
push
mov
lret
or
xchg
dec
lret
fldl
cmc
sbb
xorb
scas
mov
adc
aaa
test
jns
scas
cli
dec
cltd
pop
repnz
cltd
sub
fnsave
push
dec
xor
outsl
add
out
lcall
xchg
push
or
imul
es
pop
insl
xchg
add
pop
and
jo
ljmp
dec
cli
add
icebp
push
jp
out
addr16
push
out
js
into
mov
popa
rcrb
lea
xor
cmp
lea
lret
push
and
xlat
shll
lods
dec
into
adc
in
mov
mov
xor
push
jb
cmp
pop
into
aas
outsl
iret
sub
enter
imul
xor
xor
push
lods
fwait
xor
je
adc
sbb
mov
inc
cmp
push
cli
lods
je
das
ja
fcoms
popf
dec
sahf
dec
mov
pop
cmp
add
cmpsl
inc
dec
cmp
add
xchg
mov
repz
cmp
jnp
sbb
leave
inc
popf
mov
es
pop
sahf
mov
fwait
sub
in
lea
xchg
cmpb
sbb
jo
mov
test
dec
cld
std
jns
je
mov
jne
sub
ret
cltd
enter
pop
call
popa
pop
es
inc
and
cmp
adc
jge
scas
add
test
xor
fwait
mov
bound
mov
cmp
adc
hlt
mov
cwtl
sbbb
cli
adc
jns
repnz
in
mov
movsl
add
pop
insl
in
xor
adc
mov
sbb
cmpsb
test
push
mov
pop
pop
mov
adc
or
out
into
shlb
int
pop
xchg
mov
das
adc
add
push
add
and
mov
mov
rolb
pop
add
out
imul
xchg
or
bound
add
subl
add
out
jnp
in
out
int
mov
or
int
push
stos
adcb
ja
jo
leave
and
andb
sahf
std
in
adc
mov
pop
shl
add
test
pusha
dec
daa
std
into
fistl
enter
sub
in
and
outsb
in
inc
in
test
fisubrs
xor
cmpsl
mov
xchg
jg
fldenv
lock
fcoml
dec
and
xlat
out
jo
icebp
jp
es
sub
push
cmpsb
daa
push
out
push
shrb
hlt
adc
add
mov
xchg
mov
push
mov
fcoms
icebp
loop
div
movsl
scas
and
push
dec
mov
jl
pop
mov
data16
nop
cmpsl
push
push
ds
mov
pusha
ja
mov
inc
push
jno
add
fdivrp
pop
inc
mov
popa
xchg
shl
stc
pop
cmpsb
add
sbb
add
or
mov
rcrb
mov
push
push
mov
xchg
cmpb
out
pop
mov
cmp
fistl
jl
movsl
lods
xchg
cmpsl
mov
ret
pop
jno,pt
xor
subb
loope
nop
cs
sbb
pop
rcr
or
stos
mov
mov
lahf
and
xchg
add
in
sub
and
push
jo
xlat
sub
jae
pop
mov
into
ljmp
add
movsl
test
scas
mov
lods
loope
movsb
jg
push
pop
adc
int
aam
ret
sbb
add
add
adc
inc
cmpb
popf
add
mov
pcmpeqw
or
dec
out
xor
adc
gs
outsl
mov
jno
test
inc
das
xchg
jo
dec
popf
xchg
pop
push
aad
dec
inc
pushf
add
inc
inc
call
imul
lock
adc
insl
mov
sti
test
stos
mov
sbb
push
out
and
push
xchg
lock
adc
dec
outsl
jno
mov
ss
aas
fstpt
push
imul
cli
mov
sub
adc
or
xchg
negl
sub
hlt
inc
pop
imul
ds
fsts
inc
push
pop
push
pusha
loopne
dec
adc
icebp
mov
push
cltd
incl
pop
cwtl
push
js
cltd
xchg
orb
pop
bound
and
movsl
mov
sahf
sub
insb
insl
cs
push
jb
add
popa
and
imul
out
cli
xchg
out
dec
jb
pop
push
popa
mov
mov
mov
pusha
cld
pop
dec
dec
fld1
inc
cmp
pop
cmpsb
mov
lret
lret
ljmp
mov
dec
mov
int
push
hlt
jo
mov
lret
popa
jae
pop
push
mov
imul
inc
shlb
jge
lret
int
xchg
in
inc
enter
scas
jnp
sbb
push
inc
aaa
movsb
repz
xor
clc
mov
sahf
adc
add
pop
fisttpl
jns
cmpsl
dec
aaa
scas
mov
mov
xchg
mov
sahf
inc
loop
cwtl
lds
push
or
cmp
leave
fldl
aam
ret
inc
pusha
lds
jo
mov
fstpt
ret
arpl
es
outsb
add
and
ss
lcall
pop
mov
mov
loopne
pushf
jge
jg
mov
and
push
xor
in
shrb
divl
jne
push
xchg
idivl
sbb
push
jge
fistpll
test
dec
fbstp
out
mov
add
pop
dec
jne
and
scas
mov
aad
adc
xchg
jae
jnp
std
push
sbb
loope
hlt
xor
imul
adc
cmc
cmp
adcl
push
mov
fmul
push
mov
or
mov
adc
movsl
xchg
mov
push
outsl
fdivrs
adc
scas
enter
jp
mov
data16
int
jbe
cmp
inc
fnstsw
xor
fsubrl
test
scas
cmp
repz
stos
int3
add
jns
jns
leave
test
sub
addr16
xor
ljmp
call
repnz
jae
adc
mov
sbb
xchg
lret
aaa
fwait
cmp
inc
sub
push
xor
mov
jno
int3
adc
push
jecxz
or
or
cmp
in
mov
mov
fsub
into
push
cmp
leave
dec
stc
addr16
xchg
gs
ljmp
sub
xchg
pop
popf
xchg
out
xor
clc
cmp
scas
jg
ret
imul
movsb
pop
js
cmc
fmull
pop
xlat
jmp
sbb
lret
nop
mov
cltd
shrb
or
out
push
lcall
ficomps
pop
and
test
jp
hlt
mov
clc
mov
sbb
dec
fldcw
stos
jle
dec
lods
aam
repnz
jnp
testb
or
mov
xchg
out
pop
jmp
cmp
sub
movsl
dec
notl
pop
pushf
in
and
jno
imul
inc
push
shll
pop
xchg
pop
repz
int3
xchg
or
insl
push
xor
xlat
adc
dec
rclb
cmp
cmp
inc
rcl
mov
inc
shr
cmpsb
adc
jbe
mov
mov
cmpsl
lock
xor
imul
stc
pop
adc
pop
into
jb
das
arpl
mov
cli
push
outsb
mov
lret
dec
iret
pop
test
fildl
std
jmp
add
push
adc
adc
pop
mov
cli
or
lret
mov
test
xor
push
shrl
push
cmp
jb
jnp
dec
call
adc
or
popf
aas
js
dec
lods
aas
mov
gs
pop
int3
dec
cli
mov
test
testb
hlt
pop
mov
xor
out
xor
mov
dec
dec
push
pop
not
insb
cmpl
frstor
xor
add
imul
test
les
popf
insl
int3
orl
push
fwait
repz
push
mov
sub
or
rcrl
inc
in
cmpsb
sbb
pop
and
aaa
mov
xor
inc
pop
adc
adc
cltd
mov
out
not
mov
jns
jmp
mov
loop
cmp
add
mov
adc
nop
cld
sub
mov
xchg
mov
mov
lcall
mov
add
xor
push
out
xchg
cmp
scas
js
mov
dec
test
jbe
or
out
or
cmp
mov
sarb
ret
fstps
mov
pop
stc
sub
xchg
in
in
sbb
lcall
icebp
repnz
push
call
fdivs
mov
aad
or
das
ss
mov
pushf
xchg
pop
jne
sub
push
mov
leave
mov
dec
decb
dec
add
mov
mov
cwtl
cmp
iret
pop
cmp
cmp
out
inc
cmp
rcl
mov
and
xchg
into
sti
rclb
jl
adc
mov
fbld
aas
sbb
movb
add
jg
imul
cmp
pop
mov
adc
sub
call
lret
add
and
ficoml
sub
loope
lret
data16
int
out
out
push
jecxz
fdivrs
jmp
or
aas
arpl
adc
test
xor
in
adc
bound
test
imul
sarl
imul
es
shlb
mov
daa
vmovdqu
adc
in
xchg
negb
mov
mov
dec
mov
jnp
sub
mov
aaa
xor
xchg
xor
dec
jb
fcmovnb
pop
jp
add
inc
pop
lret
add
jp
or
jae
inc
addr16
ret
inc
or
sbb
ljmp
sbb
adc
repnz
mov
mov
cs
fdivl
loope
lods
rcll
in
mov
sbb
mov
add
js
clc
jne
icebp
mov
ss
mov
sub
ja
out
cmpsl
lea
negb
subl
mov
xchg
int
jecxz
xchg
shlb
int3
push
mov
pop
xchg
xchg
in
sti
pop
adc
sbb
imul
in
inc
push
inc
add
and
addr16
pop
or
cmpsl
dec
incb
mov
jmp
dec
lods
xor
xchg
push
jge
dec
fs
inc
rorb
loopne
lret
pop
and
je
mov
pminub
sahf
adc
adc
stos
movsl
cmpsl
jmp
fidivs
lahf
and
adc
aam
scas
dec
test
ret
mov
push
daa
pushf
pop
cli
scas
and
rcrl
dec
jg
into
dec
mov
ret
mov
mov
jns,pn
mov
add
add
repnz
addl
je
push
dec
or
out
nop
mov
outsb
imul
call
imulb
fmull
mov
dec
jecxz
add
fadd
cli
add
inc
sub
xchg
xor
mov
imul
inc
push
mov
stos
out
pop
arpl
or
cmp
cltd
jmp
aas
push
sub
dec
mov
in
loope
push
sub
lahf
mov
push
sub
ljmp
mov
inc
or
sbb
mov
xchg
icebp
je
insb
es
xchg
jl
cld
repnz
ficoml
clc
push
in
divb
and
jge
in
push
cmp
popa
sbb
fidivs
jge
movsb
loop
push
aad
sub
mov
mov
pop
fdiv
jo
xchg
dec
lods
imul
stc
add
mov
orb
mov
lea
cltd
in
ja
add
jb
outsl
in
xor
aaa
dec
and
int3
inc
bound
scas
xor
cmpsl
xchg
imul
cmpsb
insb
clc
pop
ja
movsl
adc
sbb
aas
notb
imul
sarl
xor
out
das
sub
repnz
mov
or
jne
into
in
insl
sub
push
arpl
mov
or
sub
jg
cli
orl
xchg
aas
add
clc
sub
and
inc
shll
addb
and
push
leave
repnz
xchg
dec
dec
jnp
add
jecxz
push
lods
mov
pop
sbb
lahf
clc
lcall
jmp
xchg
movsl
stos
fsubrp
mov
fs
scas
pop
hlt
fbld
sub
sub
jns
scas
xchg
cmp
xor
sub
or
sbb
stc
sub
jge
lea
arpl
cmp
loopne
vdivss
mov
push
mov
loopne
addr16
or
mov
test
jge
ss
popa
mov
nop
sub
call
mov
dec
xor
cmp
fdivl
fadd
jae
pop
std
lods
dec
mov
addr16
outsb
stc
push
mov
shlb
jns
out
sub
subb
cli
movl
push
jae
out
clc
add
sahf
or
sbb
cmp
inc
pop
push
mov
pop
mov
mov
outsb
dec
xor
ja
sbb
cmp
mov
shl
shl
push
push
imul
push
fwait
xchg
jnp
es
repnz
daa
add
xor
lods
inc
frstor
inc
popf
test
cltd
insb
inc
pop
mov
dec
cmpsl
sbb
push
ret
std
cs
inc
lret
or
out
mov
cmp
in
stos
movsl
loop
repz
mov
push
jp
movsl
inc
adc
das
jno
ja
bound
popf
xor
imull
jb,pt
inc
push
xchg
mov
jo
inc
lret
flds
div
leave
jecxz
cs
push
fcoml
mov
adc
sub
ja
fs
lcall
fisubrl
dec
arpl
cmove
loopne
pusha
push
sbb
ja
lahf
sub
pop
sidtl
das
lods
fldenv
dec
lods
cmpsb
xchg
pop
mov
add
mov
lods
sbb
mov
jg
pop
and
in
lods
imul
inc
dec
loope
mov
aas
cwtl
jo
mov
call
gs
xor
and
insl
or
fsubrs
xchg
imul
sub
lods
pop
addr16
das
push
inc
pop
es
sbb
xor
jb
out
adc
dec
cmc
sahf
dec
mov
lahf
aad
xor
xor
mov
les
dec
insb
in
or
jne
mov
cwtl
sbb
fs
insb
adc
je
dec
xchg
outsl
jl
adcl
sub
pop
mull
pop
hlt
jmp
ljmp
pop
into
mov
xlat
inc
sub
adc
add
iret
jne
jl
stc
push
push
scas
mov
push
pop
fadds
cs
mov
xchg
movsl
push
fmull
scas
xchg
ljmp
pushf
mulb
push
dec
or
icebp
inc
test
lret
sahf
push
iret
repz
ret
insl
jo
lods
xchg
cltd
dec
ret
sbb
hlt
ja
in
xlat
out
pushf
sbb
xor
repz
mov
sbb
xchg
xchg
mov
add
xchg
jae
bound
mov
cltd
sub
jle
adc
daa
es
xor
inc
mov
mov
testb
les
xchg
addl
mov
sbb
sbb
rclb
push
lods
lods
hlt
xchg
sub
xchg
xor
mov
pushfw
push
out
mov
neg
jnp
xchg
test
cltd
sub
icebp
push
jbe
inc
sbb
adc
je
xchg
ror
inc
nop
pop
and
xor
jno
fistl
xor
xchg
insl
add
ficoml
cmp
mov
push
inc
push
mov
mov
lcall
mov
loope
jecxz
cmp
in
push
popa
test
into
hlt
ja
push
push
aaa
xchg
push
nop
fs
jbe
jbe
mov
loop
mov
cs
jno
push
aas
add
or
idivb
sahf
insl
shl
pusha
fnstsw
xchg
push
dec
test
setl
jnp
lds
ja
push
mov
mov
clc
push
aad
fmull
sarl
push
pop
popf
js
xchg
ret
xchg
repz
int3
dec
mov
imul
and
add
push
inc
push
dec
pop
lods
cmp
lods
rclb
push
mov
es
std
jb
test
pusha
ss
cmp
or
add
add
fwait
pushf
jl
loopne
adc
mov
mov
cmc
int3
aaa
or
test
rolb
lcall
xchg
push
add
xchg
orb
xchg
pop
sub
imul
imul
mov
in
jne
jmp
mov
push
inc
lcall
dec
std
pop
fidivs
insb
dec
stos
pop
inc
sub
push
sbb
pushf
mov
push
out
xchg
jae
dec
dec
jg
xchg
add
ja
lret
into
pop
sbb
pop
jno
hlt
push
push
jp,pt
xchg
mov
in
pop
push
sub
es
inc
stos
add
loop
out
repnz
add
notl
pushf
inc
mov
stos
ret
sub
aad
lock
mov
mov
xor
mov
push
mov
xchg
jle
cmp
daa
jnp
fs
into
fucomp
dec
scas
add
or
and
mov
sbb
and
pop
insb
repz
clc
lret
shll
in
inc
fbstp
or
jno
test
adc
mov
mov
out
xchg
loopne
dec
push
mov
sbbb
mov
add
mov
les
or
cmpsl
mov
movsl
adc
and
shll
sbb
adc
in
int3
cld
inc
mov
xor
cmp
sahf
gs
imul
shlb
mov
jae
mulb
aaa
xor
scas
adc
clc
arpl
rcll
lods
cmp
lret
iret
mov
jmp
mov
inc
mov
shl
lahf
jmp
pop
add
sbb
mov
ss
idivb
addb
push
popa
pop
mov
pop
in
dec
lret
xchg
inc
and
adc
imulb
je
dec
mov
dec
mov
push
dec
movsl
test
mov
insb
arpl
cmpsb
lret
aad
and
pop
les
sub
and
adc
out
pop
pop
lcall
add
xchg
pop
shll
jb
test
push
xchg
push
cvtps2pd
addl
loopne
dec
jecxz
xor
js
outsl
cmp
xchg
inc
clc
push
and
stos
bound
dec
scas
stos
adc
inc
sbb
loopne
lods
out
popa
add
pop
mov
pop
pop
push
and
mov
push
pop
std
es
mov
mov
ss
sub
sub
sub
je
sarl
daa
out
lcall
lcall
mov
aam
pop
nop
outsl
lods
dec
or
cmp
xchg
cmp
pop
add
sbb
add
cmc
adc
and
mov
pushf
in
sub
lds
hlt
xchg
lods
dec
and
or
rorb
ud0
dec
adc
cli
into
add
or
cmp
and
lods
sbb
push
lret
mov
mov
xchg
imul
dec
cwtl
leave
mov
jo
mov
push
out
icebp
fsubr
jecxz
pop
es
popf
jae
imul
lret
nop
je
loop
mov
movsb
mov
repz
ficoml
jge
or
pop
popf
cmpsl
sar
jg
adc
jmp
stc
inc
xor
jae
cmpl
fsts
fwait
addr16
sar
mov
sti
loop
iret
mov
iret
or
xchg
push
cli
sub
mov
ret
sarl
lret
je
out
out
inc
sub
pop
mov
adc
scas
lods
mov
dec
pop
pushf
sbb
cmc
fisttps
cmp
cmp
and
fsubp
dec
ds
and
sub
out
add
dec
in
push
fcmove
jmp
pop
pop
fisubl
stc
xchg
xor
call
rcll
pop
mov
out
adcb
xor
aaa
test
shll
jae
sbb
hlt
iret
cmpsl
aas
mov
add
stc
sbb
imul
orl
xor
mov
sub
popa
sub
pop
lret
pushf
std
std
ljmp
flds
out
or
subb
inc
nop
mov
push
xorl
or
repz
jnp
mov
loop
jnp
jmp
sbb
mov
stos
popf
sub
jo
jl
aaa
or
leave
or
add
aas
mov
dec
dec
mov
test
pushf
fmuls
repnz
xchg
frstor
ss
stos
mov
mov
int
sbb
sahf
insl
jmp
dec
pushf
jmp
sahf
scas
jb
cli
push
popa
jl
xchg
jne
shl
popf
imul
mov
testb
pop
jns
ja
fisubl
jbe
cmpsb
fimuls
sub
rolb
enter
cs
xlat
mov
jl
push
sbb
inc
add
popf
jle
mov
pop
inc
jle
repnz
or
stos
add
jo
icebp
cs
negl
mov
add
mov
push
sti
pop
ja
aas
decl
outsb
out
add
adc
xchg
icebp
mov
inc
out
pop
icebp
add
or
fdivs
fneni(8087
test
push
fidivs
adc
jge
mov
push
jbe
imul
call
lea
cltd
pop
bnd
mov
iret
jns
sub
orl
jne
ljmp
je
xchg
xor
ja
xchg
pushf
sub
lret
xchg
ret
test
or
pop
aam
in
inc
pop
pop
pushf
mov
les
movsl
stos
std
or
push
hlt
mov
in
add
jp
in
ljmp
adc
test
gs
mov
popw
dec
insl
dec
js
and
mov
xchg
stos
aas
mov
inc
xor
cmpsb
sarl
mov
dec
ds
and
div
mov
jb
xlat
adcb
lock
int
push
add
adc
mov
pop
aam
repnz
movsl
mov
mov
sub
out
cmp
xchg
jp
jg
rcr
lock
push
and
pop
lods
nop
mov
popa
lock
inc
popf
push
sbb
aaa
sti
sbb
enter
push
inc
push
sub
out
xchg
outsb
cmpl
add
std
xchg
int3
fwait
lea
les
popf
xchg
jo
int
sbb
or
lods
inc
jecxz
mov
jae
inc
popl
hlt
test
jecxz
push
popf
and
push
stc
movsb
xchg
dec
pop
add
and
test
inc
dec
mulb
add
xchg
dec
sbb
push
push
lock
jns
das
sbb
idivl
loop,pt
into
adc
in
xchg
jne
sbb
jno
popf
test
or
repz
inc
mov
add
leave
bound
outsl
mov
ljmp
out
mov
sub
sbb
pop
adc
push
mov
std
mov
mov
icebp
cld
pop
lahf
inc
mov
or
push
imul
adc
jge
hlt
jae
sub
push
insb
mov
fwait
pop
sbb
loopne
xchg
push
jmp
adcl
pop
push
pop
fildll
inc
clc
jle
je
into
divb
vucomiss
xchg
leave
sbb
pop
clc
int
fcoml
ret
cmp
out
call
xlat
jmp
dec
dec
or
data16
sbb
daa
or
shr
iret
pop
sbb
shr
cmpsb
packsswb
mov
xchg
mov
lods
fisubl
xlat
orl
xlat
jns
notl
bound
cltd
repnz
cmp
fwait
js
add
xor
in
or
rcr
repz
into
mov
loopne
lods
or
jo
out
loop
ds
sti
pop
or
in
push
enter
or
sub
stc
call
jge
sahf
sub
ss
mov
outsb
lcall
push
or
cmpsl
int
fsubrs
pusha
cmp
mov
mov
aad
mov
andl
icebp
insb
popf
pop
mov
pop
sbb
adc
mov
jecxz
in
mov
cmp
lcall
jge
or
mov
xchg
sbb
pop
lea
inc
test
inc
ljmp
rcrb
cmp
dec
add
inc
mov
pop
mov
jno
sub
mov
clc
cli
int3
mov
icebp
fimuls
inc
xorb
rolb
ret
cmpsb
jns
in
or
shlb
arpl
enter
in
shrb
or
xchg
stos
bound
popf
sub
out
mov
mov
dec
push
jae
jne
stc
icebp
lret
data16
jns
add
mov
pop
sbb
mov
out
cmpsl
shll
cmpsb
push
push
out
gs
mov
inc
push
xchg
jno
inc
shlb
in
loope
cmp
inc
pop
push
add
sarb
mov
dec
mov
adc
repz
cmc
aam
sub
adc
sahf
scas
and
mov
mov
test
mov
cwtl
jg
sbb
jg
jg
mov
rolb
jmp
or
mov
test
xor
jp
icebp
call
js
pusha
xchg
daa
sub
movsl
push
int3
mov
dec
or
fnop
imul
insl
and
and
jmp
adc
xor
aaa
out
and
and
mov
mov
stos
xor
jnp
shlb
sub
cmp
dec
add
add
mov
into
add
lock
cmpl
aas
outsb
shlb
mov
dec
xor
in
jecxz
loop
push
inc
cltd
jmp
lea
cmp
and
imul
xlat
sbb
jecxz
ja
loop
mov
jbe
lods
lods
insl
cmp
mov
mov
in
les
sbb
adcb
sub
rcl
lret
in
ljmp
push
aas
lretw
movsb
mov
jge
jle
mov
aad
mov
nop
mov
xor
mov
jo
xchg
push
mov
in
and
push
sub
mov
xchg
mov
lods
jmp
mov
fcmovb
sub
adc
xchg
mov
cmc
repnz
out
in
jmp
adc
fldt
push
jg
mov
jnp
xchg
sbb
stos
lcall
push
repz
xlat
lods
dec
xchg
iret
lahf
lret
cmp
add
stc
imul
int
fnstsw
cmpsb
pop
sahf
shlb
and
mov
lods
sub
mov
mov
add
orb
jne
outsb
sub
xchg
stc
or
stos
cmp
xor
leave
shll
nop
lea
pop
cmpsb
sti
pusha
cmp
sub
fwait
and
inc
testl
or
push
cwtl
and
mov
sub
adc
mov
lret
adc
repz
pop
cltd
insl
nop
jnp
mov
rclb
maskmovq
negl
push
loopne
pop
jg
jmp
addr16
and
jb
jg
ja
pop
icebp
in
mov
icebp
xchg
shrb
insb
dec
repnz
pop
mov
frstor
fs
sbb
aaa
and
mov
jle
pop
mov
bound
xlat
outsl
dec
push
arpl
je
xor
sahf
sbb
imul
imul
ljmp
cmp
push
push
sbb
mov
cmc
push
rorb
mov
hlt
mov
push
mov
adc
mov
sti
dec
jb
outsb
pop
xchg
mov
mov
jae
out
jg
fucomp
pop
test
xor
lcall
fcmovu
jae
insb
bound
ljmp
loopne
sbb
lods
mov
inc
xor
ja
mov
and
mov
or
add
add
out
pop
mov
repnz
jle
es
fs
adc
in
sbb
cmp
xor
xor
pop
fsubrs
mov
push
jge
pop
hlt
push
adc
lcall
xor
mov
sbb
mov
mov
cmp
fsub
cwtl
dec
repnz
pop
sbb
jg
inc
add
ror
test
adc
lds
xor
pop
xor
sbb
inc
test
xchg
cli
pop
jb
adc
jne
and
mov
nop
pop
dec
cwtl
dec
mov
jmp
icebp
out
inc
ljmp
xor
adc
mov
dec
mov
sbb
int
lret
mov
test
cld
jno
or
mov
push
cmpsb
dec
test
adc
jns
xchg
mov
add
pusha
cli
mov
lret
mov
aas
and
jne
pushf
mov
movsl
ret
pop
data16
popa
fs
aas
xor
fisubrl
mov
clc
inc
mov
sub
cmpsb
sahf
push
adc
cli
add
mov
and
pop
dec
mov
insl
clc
movsl
loopne
mov
or
pop
jb
push
jge
lret
adc
lea
xchg
ljmp
xor
cmp
icebp
pop
rolb
jmp
inc
xor
movsl
lcall
aam
add
mov
bound
inc
std
or
mov
jmp
outsb
push
dec
test
shll
inc
dec
xchg
jmp
push
mov
lea
pop
pusha
icebp
mov
repz
movsl
aas
dec
movsl
lds
clc
jecxz
cmp
sbb
lds
orl
repz
jne
popf
pop
mov
sbb
inc
adc
insl
loop
shlb
mov
ja
jbe
and
cli
rol
out
insl
xor
jb
cwtl
jne
call
subl
cmp
mov
push
pop
jp
dec
mov
das
cli
jge
jb
and
inc
jmp
pop
testl
imul
xchg
dec
and
shll
push
mov
pop
nop
test
or
dec
cmp
sbb
sbb
adc
lret
popa
mov
lea
dec
sub
sbb
cmpsb
xor
and
inc
add
xchg
cmp
testl
push
nop
leave
enter
xchg
pop
mov
int
mov
test
lds
test
out
popfw
loope
pop
jle
adc
dec
in
aam
jp
arpl
or
jo
aaa
cmc
xchg
adc
cmpb
fs
subl
mov
sarb
ds
mov
dec
cmp
mov
jp
ret
insb
das
jmp
inc
aad
sbb
jge
inc
jbe
shlb
scas
loop
mov
stc
pop
pop
dec
jecxz
mov
inc
pop
push
into
xchg
ffreep
es
pop
shrl
imul
xchg
lods
jp
call
cld
imul
lret
sub
es
in
test
sbbl
out
sahf
cmp
sub
fwait
cmpsl
jno
jmp
sti
fdivs
dec
setp
fiadds
into
loop
int3
rolb
jbe
xchg
nop
jno
or
and
push
jp
call
rep
shlb
push
jnp
pshufw
sub
mulb
iret
fs
aam
cmp
test
movsb
ss
and
xor
scas
or
push
leave
pushf
test
sbb
pop
pop
push
loopne
sbb
in
cmp
fs
jbe
xor
iret
mov
ss
cli
pop
mov
inc
mov
and
jge
rorb
push
xchg
in
cltd
jl
inc
std
arpl
test
or
add
xchg
lods
imul
test
and
iret
outsl
js
xchg
hlt
cmp
std
in
out
cmp
pop
sbb
rep
cmpsb
shrb
aaa
rolb
in
scas
mov
flds
dec
mov
arpl
bound
dec
ljmp
or
fsubrs
mov
or
inc
sti
pop
jle
mov
enter
dec
mov
cs
or
pop
adc
mov
imul
jmp
jne
int
xchg
lods
mov
aad
rcll
sub
or
push
push
mov
and
mov
pop
mov
mov
rorb
shlb
xor
rcrb
dec
pop
stos
cmp
jg
jp
mov
repz
lret
and
sbb
adc
cmpsl
jne
xor
fwait
iret
or
jmp
mov
mov
sub
cmpsb
imul
gs
jmp
aas
movsl
orb
mov
mov
mov
pop
xor
loop
pop
fdivs
mov
je
xor
cltd
adc
stos
jns
mov
mov
adc
repnz
rorl
mov
rorl
loop
dec
inc
aas
cmpsl
jmp
in
in
jmp
xchg
lods
jno
lea
pop
jge
and
add
or
leave
movb
shll
test
repnz
add
adc
xor
clc
subl
gs
ja
lret
cmp
xchg
fistpl
lret
stos
aaa
pushf
pop
stos
fstl
adc
mov
js
setb
xor
cli
jl
fstpl
not
mov
into
and
hlt
rcll
shlb
pop
out
jnp
push
sarl
sub
mov
xor
or
aaa
loopne
xlat
xchg
stos
mov
std
ret
test
xor
ja
outsb
sub
xor
mov
cmpb
or
add
out
test
inc
cltd
add
mov
les
mov
std
jno
push
push
loope
add
std
shrb
pop
stos
movsb
and
adc
sbb
pop
xlat
cwtl
pushf
and
in
pop
push
outsl
sbb
cmp
out
gs
aam
and
movsb
and
or
mov
or
dec
mov
aas
mov
or
fwait
loope
cmp
mov
in
mov
sub
xchg
push
adc
call
inc
add
jg
push
ret
mov
test
fwait
push
jae
hlt
cltd
je
sbb
jge
icebp
jmp
mov
not
jns
sub
jmp
pop
mov
jns
xchg
xchg
push
pop
push
or
aam
pushf
push
pop
push
mov
pop
arpl
sbb
lret
in
pusha
mov
jno
fisttpll
cs
push
xchg
sbb
pop
cmp
mov
sbb
les
fimuls
es
xor
push
imul
push
mov
pop
mov
sbb
into
shlb
and
adc
sub
addr16
orb
mov
add
jne
mov
in
loopne
pusha
mov
mov
lds
and
das
inc
push
loopne
inc
mov
dec
das
and
repnz
mov
gs
sub
pop
and
aas
mov
adc
ret
or
xchg
ds
push
cltd
in
xchg
push
lret
xor
fs
push
sub
rorb
cld
insl
mov
jbe
push
sti
mov
mov
jp
scas
jge
scas
lahf
aad
xchg
pop
call
inc
in
fldl
xchg
inc
cltd
lret
cmpb
or
pop
hlt
sbb
ljmp
xor
lds
cmp
or
push
arpl
xor
cltd
ret
out
lret
movsl
shr
xchg
das
int3
xchg
adc
adc
stc
add
xor
pop
or
push
sbb
sub
inc
mov
pop
enter
aas
fwait
leave
xor
xchg
test
out
ret
repz
loop
test
stc
sbb
in
out
lds
lods
out
lods
dec
pop
ljmp
sub
mov
je
jns
or
push
jge
call
cld
sbb
push
adc
sub
icebp
loope
jnp
xorb
movsb
mov
sbb
into
push
mov
cmp
add
insb
enter
rcr
gs
rol
sub
enter
in
xorl
pop
sub
int3
cmp
sub
jae
and
pop
in
or
push
outsb
add
mov
or
sbb
cld
loope
fsincos
mov
std
sbb
divl
push
fimull
xchg
insl
dec
rorl
mov
or
test
inc
dec
mov
es
ljmp
jo
xor
mov
pop
mov
idivb
mov
add
pop
add
jbe
loope
scas
sahf
negl
add
and
inc
xor
mov
mov
pop
pop
test
inc
testb
cmp
add
xor
jmp
jnp
jl,pt
push
iret
scas
inc
xor
dec
mov
notb
aaa
in
imul
shlb
je
mov
sbb
les
fisttps
dec
push
sbb
ret
adc
fiaddl
or
and
movsl
loopne
dec
gs
xor
sbb
insl
push
add
mov
nop
cmp
andl
push
daa
imul
pop
ret
into
add
push
mov
fwait
xchg
or
daa
imul
xor
mov
ret
lret
ficompl
pop
test
push
sub
add
pop
fld
int
dec
sbb
mul
push
movlps
or
adc
in
mov
push
jg
and
sub
clc
inc
mov
ret
insb
add
insb
outsl
cli
mov
adc
xlat
scas
xchg
xor
aad
stos
and
arpl
mov
and
adc
fisttpl
sbb
and
hlt
cmp
hlt
out
lahf
or
out
mov
bswap
das
push
and
adc
adc
dec
jb
xchg
push
xchg
js
addb
push
jne
and
popf
inc
adc
pop
xchg
pop
push
push
mov
and
jnp
dec
jle
jbe
or
icebp
dec
hlt
out
gs
repnz
mov
mov
pop
adc
rol
shll
inc
clc
ljmp
mov
pop
pop
mov
les
ljmp
sub
xchg
fsubs
lea
mov
push
pop
or
xchg
sbb
or
cltd
cmp
xor
cltd
jb
jbe
bswap
js
sub
repz
push
scas
jecxz
xchg
xchg
xchg
fnstsw
fidivl
pop
adc
sahf
cmp
add
mov
shlb
mov
out
mov
pop
jo
jp
cli
lds
fstp
adc
lds
popf
mov
stc
lret
fcmove
and
icebp
out
test
aad
adc
leave
mov
sbb
xor
mov
jge
lahf
add
mov
xchg
icebp
icebp
icebp
pop
leave
je
xchg
mov
in
mov
dec
loopne
mov
or
jne
andl
fisttpll
xchg
inc
push
mov
xchg
mov
mov
ljmp
rorl
fisubrl
pusha
inc
nop
sub
jecxz
mov
enter
sbb
sub
shll
xor
cmp
sbb
imul
sbb
push
and
adc
mov
pop
cmpsb
dec
sub
hlt
or
jne
leave
sti
or
divl
dec
test
cli
cmpsl
lods
arpl
fisubrl
jmp
and
cmp
cli
xlat
xor
pop
idivl
cmp
mov
push
or
adc
loope
notb
or
sbbl
dec
cmpl
addr16
xchg
mov
cmp
mov
fidivrs
or
in
adc
jl
or
push
cmp
insl
out
mov
daa
mov
pop
jge
in
jo
shll
mov
mov
cmp
push
call
xor
xchg
adc
mov
hlt
pop
mov
fadd
and
jl
and
outsb
out
jae
push
add
jno
rorb
push
adc
push
add
in
aaa
cmp
lods
xchg
dec
sbb
or
pusha
in
add
sti
stos
cmp
xor
shlb
inc
mov
xor
sar
shrb
call
push
and
inc
lret
pop
fwait
push
repnz
mov
mov
movsl
jo
xchg
adc
sbb
xchg
ljmp
fcoms
jo
push
test
dec
inc
addr16
and
sub
fnstsw
sub
in
call
push
in
adcl
addr16
mov
mov
cltd
sbbb
sub
scas
add
lea
pop
cwtl
cmpsl
jbe
mov
dec
dec
xor
inc
xchg
sarb
xlat
adc
mov
lahf
inc
into
subb
xor
push
movsb
scas
les
fwait
mov
hlt
push
stos
shrl
xchg
ds
mov
stos
cmc
push
mov
xor
inc
sub
jle
xchg
out
loop
fiadds
test
or
push
adc
push
cli
xchg
dec
mov
insb
mov
push
cmc
mov
and
jae
fnstcw
jo
in
sbb
iret
test
push
or
shl
jge
call
cwtl
adc
ret
sbb
insl
loopne
mov
mov
fisubrs
loopne
xchg
lods
out
mov
mov
imul
pop
adc
imul
imul
icebp
xor
sahf
inc
mov
sbb
dec
je
pop
pushf
pop
dec
movsb
mov
mov
pop
push
js
popa
movsb
pushf
cmp
pop
sbb
shr
enter
add
icebp
jne
cmpsb
and
mov
fcmove
enter
xchg
and
stc
testl
mov
data16
hlt
movsl
and
adcb
clc
movsb
enter
pop
movsl
dec
inc
jo
add
xchg
sub
pop
into
fisubrl
adc
popf
jle
jbe
sbb
sar
ret
cmc
lcall
or
es
push
dec
push
push
cs
dec
out
ret
mov
ds
shlb
cs
insb
jmp
nop
nop
pop
push
sbb
fst
adc
mov
int3
and
jno
push
push
clc
push
in
push
and
and
xchg
scas
subl
popa
and
ret
push
fidivl
movl
or
xor
lods
mov
ljmp
inc
cmp
and
je
out
pusha
stc
clc
loope
fistl
movsl
cmp
xchg
mov
repz
std
mov
inc
fsubrl
pop
push
shlb
gs
ds
int3
pop
mov
cmp
adc
jle
es
out
mov
push
xchg
push
add
mov
movsl
sbb
push
ljmp
inc
mov
data16
fisubs
jns
sub
pop
sbb
pushf
xor
mov
or
test
sub
lret
push
int3
xchg
jle
add
lret
push
or
mov
pushf
push
push
cmp
cltd
icebp
mov
jne
and
mov
sbbb
fldt
dec
out
icebp
pop
xchg
fwait
lret
xchg
imul
arpl
je
xor
mov
add
aaa
cmc
cmpsl
out
mov
aas
in
and
mov
add
icebp
push
outsl
sub
mov
mov
inc
cmp
mov
sub
dec
mul
mov
inc
mov
pop
in
add
pop
lea
mov
xor
in
mov
ret
mov
cmpsl
adc
xchg
out
mov
mov
lahf
jo
sbb
cmp
or
mov
negb
push
aad
xchg
xchg
in
sub
push
pop
push
test
mov
xchg
icebp
lods
dec
push
in
mov
mov
add
test
in
or
inc
mov
sub
dec
jo
jge
int
movsb
jo
inc
cmp
xorb
sub
sub
mov
imul
lret
jb
loop
mov
sbb
sub
into
mov
pop
and
jle
push
xchg
imul
sbb
dec
mov
mov
inc
or
dec
push
std
sbb
inc
addl
leave
scas
es
cld
mov
cmpsl
inc
mov
movb
test
fiadds
arpl
cmpsl
sub
cs
mov
adc
or
mov
push
sub
stos
aaa
lret
out
push
jecxz
int
fcmove
or
pop
loop
enter
mov
pop
pop
in
push
jg
xchg
dec
lret
mov
testl
push
sub
sbb
xor
outsl
dec
mov
les
push
jb
mov
sbb
in
inc
or
lods
je
push
mov
sbb
xor
mov
fidivl
adc
ds
or
xchg
push
jge
stc
nop
int3
fistl
test
fwait
js
and
add
inc
int3
mov
mov
push
mov
fidivrs
test
xor
xor
jnp
add
push
out
pop
ror
jo
jecxz
cmp
mov
lret
fisubs
out
gs
cmp
in
leave
jmp
pop
jmp
xchg
dec
sbb
mov
adc
pop
mov
cs
or
jbe
jle
xchg
jo
out
xchg
shlb
push
xchg
sub
cmc
mov
xor
push
mov
nop
push
push
iret
loop
jbe
jns
jb
js
fwait
cmp
jo
cmpl
mov
fmuls
aaa
fisttpll
mov
stos
or
and
stos
adc
inc
or
push
add
scas
imul
or
or
sub
cmpsb
aas
hlt
out
push
dec
lea
out
hlt
dec
pushf
cmpsb
mov
xlat
sti
testl
lea
dec
xchg
movsb
fdivs
add
jne
popa
jg
lds
ficomps
jne
iret
fistpl
ror
cmp
add
shll
outsb
cmpl
pop
hlt
int3
xchg
aam
test
enter
bound
int
add
pop
std
push
pop
stc
jl
xlat
push
dec
hlt
fdivs
aas
cmp
xchg
inc
scas
sti
adc
jns
or
jo
fdivrp
gs
jg
dec
push
fwait
xchg
lea
inc
lea
out
jae
add
scas
btr
fisubl
lahf
jmp
ds
push
xchg
push
bound
mov
rcl
repz
pop
popf
les
insl
mov
cwtl
jg
insb
xor
mov
fmul
add
mov
xor
repz
xchg
pop
les
mov
mov
outsl
lods
cmpsl
cld
add
cmpsl
push
leave
mov
xor
jae
jae
mov
repnz
mov
cltd
imul
pop
mov
xor
pop
cltd
xor
insb
mov
sti
jno
imul
stos
pop
in
cmp
insl
fistps
mov
iret
shrl
lods
in
jecxz
mov
cld
mov
imul
sti
and
rcll
mov
les
loope
cmp
ja
imul
jno
and
sub
adc
ret
repnz
andl
lcall
imul
lea
jmp
mov
inc
adc
and
outsb
fwait
dec
and
add
or
mov
insb
inc
xor
stos
out
fisubl
orl
cltd
sahf
push
mov
jecxz
and
sbb
stc
out
ss
hlt
jnp
mov
adc
out
sti
xor
popa
bound
in
or
in
jae
movl
mov
cmc
ret
jnp
lcall
jae
xchg
cltd
daa
test
and
xchg
pop
cmp
pop
sbbl
xchg
inc
lahf
sbb
test
imulb
sub
fnstenv
call
jmp
enter
pop
aas
test
push
or
ja
hlt
sti
aaa
jne
jno
jp
or
or
test
pusha
inc
outsb
jl
jg
aas
push
add
jbe
aaa
lahf
or
in
fwait
jecxz
lock
dec
dec
scas
bound
mov
mov
jg
xorl
or
bound
and
push
push
sub
or
or
clc
jge
test
aad
xchg
xchg
push
stos
dec
test
add
mov
adc
ljmp
sahf
push
lods
cmpsb
lahf
xchg
outsb
shl
out
push
inc
bound
jo
cmp
jb
cmpsb
out
cmc
jnp
jg
and
jns
cmp
sbb
scas
mov
pop
dec
inc
push
daa
loopne
cld
rorl
cmp
pop
ss
mov
push
mov
hlt
cmp
aam
outsl
mov
mov
mov
and
les
mov
nop
or
mov
xor
pop
nop
fildl
cli
cs
in
std
insl
pop
pop
stc
mov
lret
xchg
pop
push
aam
mov
lahf
or
stc
mov
inc
mov
inc
fsts
xchg
xor
enter
xchg
dec
in
mov
pop
add
bound
push
inc
mov
cmp
sbb
mov
jecxz
loop
xlat
inc
ja
add
repnz
std
int3
icebp
dec
subb
sub
cli
sub
iret
jb
mov
and
inc
ljmp
pop
adc
sbb
cmp
inc
push
push
lahf
jbe
push
in
push
or
jo
idivb
insl
xchg
sbb
ds
subb
rcrl
out
addr16
subb
pop
xor
pop
mov
stc
clc
lcall
xchg
xor
mov
cli
scas
nop
xor
xor
inc
xor
sbb
mov
clc
cs
test
aam
jb
testl
push
into
enter
sub
addr16
inc
adc
jmp
sub
mov
movsl
xchg
in
fucomip
shr
lahf
insl
ficoms
add
cs
lahf
out
or
loope
sbb
cmp
inc
not
xchg
loop
cmp
scas
xchg
inc
cs
repz
jo
jmp
cmp
ja
sub
jmp
xor
pop
mov
sbb
fcomps
je
sti
push
add
lock
fwait
add
xor
cltd
adc
jle
cmp
xorb
pop
mov
lcall
sahf
or
push
mov
add
inc
add
pusha
pop
sub
addl
sbb
movsb
xor
and
jmp
in
jns
push
scas
push
push
pop
es
gs
shlb
jle
cmp
and
inc
into
mov
dec
and
add
rorl
enter
testb
icebp
adc
stc
sub
inc
insl
jle
mov
iret
aaa
not
sbb
inc
out
xchg
cmpl
ljmp
and
repnz
cmp
cmpsb
idivb
test
sub
sbb
popl
les
lea
shlb
mov
enter
decb
adc
iret
sub
push
cwtl
pop
mov
mov
mov
dec
inc
sti
mov
sub
gs
jecxz
iret
sub
sub
mov
push
jg
sbb
lods
fcmovbe
jae
dec
push
xchg
sarl
fs
dec
inc
enter
stos
nop
pop
or
xchg
sahf
push
cmc
xlat
mov
inc
push
jp
lods
dec
jno
cmpsl
pop
insl
mov
data16
mov
pop
movsl
add
std
mov
shlb
rcr
mov
jmp
push
stos
and
lcall
out
push
jle
repz
int3
jnp
notb
jl
scas
mov
rcl
out
xor
mov
sbb
pop
aam
je
mov
and
xchg
push
xchg
rolb
dec
lds
ret
and
inc
cltd
mov
mov
sbb
xchg
mov
icebp
vandps
jb
xor
pop
push
ljmp
loop
sbb
pop
cmp
roll
fwait
and
push
sbb
mov
in
sub
dec
push
jno
dec
in
imul
mov
jns
xlat
mov
dec
fistps
cmp
xor
fsubl
in
pusha
insl
out
mov
xchg
cmp
cmp
cs
mov
test
cmp
in
movsb
ret
sub
pop
in
push
jmp
mov
jp
jp
pop
nop
sub
push
ja
scas
dec
pushf
mov
mov
mov
mov
xor
pushf
inc
cmp
icebp
mov
xchg
adc
mov
addl
inc
inc
lret
scas
gs
jo
mov
cltd
ds
cmp
mov
sub
pop
stc
loope
mov
jg
jl
pushf
cmp
lods
sub
jnp
pop
rolb
cmpsb
push
pop
jmp
stos
lret
mov
add
stos
mov
xlat
jbe
fdivrs
inc
dec
pop
cltd
dec
clc
int3
and
ja
orl
inc
xor
push
and
inc
lahf
jmp
mov
andl
in
jle
sub
or
int
pop
mov
bsr
cmp
mov
nopl
inc
xchg
out
inc
jae
dec
loop
stc
adc
mov
aam
insb
xchg
nop
jbe
and
jns
or
daa
push
loop
insb
loop
inc
rorl
dec
in
jmp
stc
adc
sbb
aas
lods
js
mov
xchg
cmpsl
dec
dec
int
add
pop
sarb
movsb
or
sub
push
xor
mov
or
aam
jg
imul
loope
icebp
dec
xchg
push
jno
or
in
cmpsb
iret
jae
mov
mov
inc
leave
jle
pusha
cmp
cmpsl
xor
pop
xchg
cmp
lea
outsl
test
stos
rcr
push
imulb
fadd
xchg
push
cmpsb
mov
nop
sub
mov
loopne
int3
int
add
mov
mov
lea
mov
adc
cmpsb
push
fdivrs
mov
mov
mov
add
push
xchg
mov
add
loop
cmp
sbb
icebp
dec
mov
mov
jbe
mov
sahf
push
les
hlt
cli
cld
vcvtss2sd
jle
or
sub
lods
shll
rep
xor
and
sub
lods
pop
daa
cmc
ret
push
loopne
cmp
icebp
stc
aam
pusha
scas
jae
movsl
push
insb
movsb
out
push
cmpl
mov
adc
xor
scas
rcrl
inc
enter
inc
js
test
subb
loopne
mov
and
aam
sub
test
mov
into
cmp
daa
in
fildll
mov
dec
jg
pop
in
fwait
sbb
mov
cli
mov
out
mov
sahf
and
add
mov
cld
dec
pop
cs
jb
mov
popl
icebp
pop
fcomp
cmp
push
mull
add
repz
add
mov
push
mov
popw
rorl
mov
sbb
negl
mov
orb
or
pushf
push
jne
cmc
fcmovne
xchg
lock
es
jmp
repz
jg
xchg
mov
cmpsl
cmp
push
inc
shll
ret
leave
jecxz
js
cmpsl
popa
cli
add
jnp
in
repnz
adc
pop
mov
orps
ljmp
adc
decl
cmp
mov
and
mul
lea
cmpsb
addr16
and
xchg
rorb
xor
mov
pop
int
fsts
movsb
mov
xor
sbb
repnz
neg
rcrl
outsb
test
in
xchg
sub
fisubrl
fists
aad
hlt
scas
test
pop
mov
add
insl
push
repz
ljmp
lock
ficoms
lret
daa
lahf
sub
jmp
flds
add
xchg
cmc
push
jge
sahf
inc
sub
push
mov
mov
jecxz
xor
es
sbb
imulb
and
cmp
fistps
fnstcw
pop
test
xchg
sbb
xor
cwtl
lds
cli
add
fistpl
pop
aam
inc
xor
filds
push
cmp
les
gs
inc
xchg
in
push
cli
nop
push
sub
into
lods
jb
aas
and
subl
add
adc
movsb
push
gs
push
addr16
push
jns
iret
mov
mov
inc
out
push
cmpsl
pop
ret
pop
xchg
lds
cs
jbe
ljmp
mov
lea
dec
sub
lods
mov
add
and
imul
adc
sarb
fldenv
adc
jp
mov
aam
sub
lret
nop
loop
imul
test
mulb
in
pop
adc
scas
jnp
mov
aad
push
ja
cmpsb
inc
sub
sbb
je
js
sbb
arpl
fwait
imul
jle
sub
int3
adc
stos
pop
imull
shlb
mov
jb
sbb
xchg
enter
mulb
dec
jecxz
out
mov
psubd
and
testb
push
jmp
push
sahf
outsl
cld
jmp
adc
adc
add
popf
out
lods
repz
add
push
xchg
pushf
lods
in
or
mov
xchg
add
ljmp
pop
int
mov
insl
cmp
push
cmp
ret
mov
jp
sub
lods
xlat
lods
pop
dec
cmp
inc
mov
xchg
les
mov
into
cmc
fldenv
adc
dec
mulb
mov
dec
inc
mov
shrl
andb
aaa
pop
sbb
push
sub
push
xchg
ficoml
imul
inc
or
mov
adc
jbe
gs
loop
outsl
insl
xor
xor
cmp
mov
dec
xchg
test
in
ja
in
sbb
xor
mov
mov
add
ret
mov
loopne
adc
cltd
loopne
dec
xor
dec
xlat
xchg
enter
cltd
cmp
mov
mov
xchg
aaa
mov
mov
pop
out
lock
and
fidivrs
insl
rcll
adc
lahf
or
pop
ljmp
addl
mov
mov
dec
cmp
dec
fisubrl
outsb
push
inc
add
hlt
scas
lret
test
cmpsl
out
mov
fs
cwtl
imul
fcoms
inc
adc
pop
mov
je
ja
repz
push
movsl
test
and
outsl
add
cmp
test
jecxz
mov
mov
out
lea
inc
inc
mov
mov
add
xchg
xchg
push
fsubs
add
adc
fldl
jb
add
dec
in
movsb
pop
ljmp
xor
sbb
adc
push
xchg
mov
lea
cmp
or
pop
xor
cmp
loop
jbe
add
inc
add
lahf
fsubr
loopne
andb
pop
add
stos
xor
xchg
push
clc
or
gs
les
pop
mov
xor
imul
movsl
pop
clc
cmp
nop
add
stc
sbb
sub
jo
push
and
sti
out
scas
xor
pushf
pop
sub
jne
xor
das
push
jno
adc
mov
inc
fbstp
xchg
add
lgs
xchg
aaa
js
mov
aaa
mov
mov
cmp
sbbl
push
mov
in
or
xchg
add
dec
pop
or
sbb
gs
iret
xchg
cmpsl
stos
daa
pushf
movsl
push
aas
leave
popa
xchg
jae
cmp
xor
xor
xlat
cmp
and
mov
sub
xchg
push
xor
addr16
and
ret
or
cmp
gs
jae
ret
subl
enter
sub
xchg
jl
push
or
data16
jae
shr
sbb
adc
mov
mov
push
aam
and
mov
mov
inc
cmp
inc
andl
int
ret
jp
in
imul
and
aaa
mov
das
scas
loopne
sbb
popf
pusha
loopne
ja
repz
enter
lcall
add
bound
fucomp
push
dec
push
inc
inc
mov
add
repnz
jnp
loope
sbb
mov
roll
movsb
jne
push
cmpsb
rcrb
jne
std
gs
andb
in
icebp
out
dec
jmp
and
adc
addr16
cmp
fcomps
inc
mov
pushf
popa
add
sub
stc
cmc
add
adc
stos
int
shrl
js
xor
jb
cmp
addl
fwait
movsw
mov
mov
cmp
cmp
jnp
ss
cld
movsl
push
mov
idivl
out
sub
sub
addr16
ret
xchg
int3
jg
pop
cltd
jl
mov
out
adc
out
sub
mov
ffreep
and
cmp
or
mov
xor
push
xor
sub
xchg
xchg
push
pop
lret
addb
jae
ficoms
fldt
addr16
push
jp
jbe
cmp
shll
mov
or
in
inc
mov
add
inc
pop
ret
cmp
test
orl
dec
mov
jge
mov
shll
repnz
sbb
inc
out
push
or
stc
addr16
loope
out
pop
mov
mov
shll
unpckhps
adc
sar
fs
in
dec
mov
dec
imul
push
js
sub
push
mov
enter
jnp
das
pop
sub
mov
outsb
in
cmp
add
popa
push
jge
addl
jbe
push
and
insb
mov
pop
mov
jno
fsts
or
nop
adc
es
scas
push
sub
and
ljmp
lea
jmp
repnz
cmp
sub
pop
lds
sbb
jp
jg
mov
pusha
fiadds
cmp
mov
mov
stos
and
call
pop
fsubrl
fsubrs
aaa
xlat
push
in
cs
sbb
pop
dec
test
dec
daa
push
xchg
out
mov
and
cli
or
packsswb
out
and
je
stos
pusha
movsb
cmc
cmp
gs
mov
mov
pusha
dec
sbb
lock
nop
mov
mov
and
push
bound
push
int3
xor
or
or
shrb
addr16
jmp
sbb
push
test
mov
lds
jno
ljmp
arpl
and
or
mull
add
jno
lods
rclb
push
enter
xor
or
jecxz
loop
loopne
xor
stos
js
sub
jecxz
cmp
push
mov
mov
ja
clc
push
dec
push
outsb
dec
push
pop
add
sbb
pop
cmp
andps
repnz
xchg
jge
out
and
sahf
out
push
loop
sub
inc
add
push
jp
pop
mov
xchg
lea
leave
sub
inc
out
mov
cld
mov
xor
jne
mov
fs
or
ret
push
arpl
push
hlt
push
push
sub
mov
sti
cmpsb
loop
push
dec
addl
or
mov
icebp
push
pop
mov
dec
dec
out
mov
bnd
gs
xor
xchg
cmp
aad
add
jle
xchg
out
cmp
mov
std
xchg
add
sub
push
test
les
shrl
subb
mov
sub
insb
testb
jns
les
or
icebp
dec
ljmp
lds
cmpb
insb
ret
daa
mov
out
cmp
inc
icebp
cmpsl
push
loopne
scas
xchg
jb
pavgw
imul
in
ds
loope
or
and
insl
xlat
jno
loope
insl
inc
sbb
dec
jb
das
jns
jno
dec
cs
push
inc
lcall
aad
faddl
adc
jno
dec
xor
jne
lds
dec
pusha
sbb
mov
rorb
lock
sub
sbb
bound
xor
dec
hlt
pop
aas
lea
outsl
arpl
jns
nop
dec
lret
pop
in
or
in
lret
es
adc
cwtl
lahf
lods
and
ja
or
les
push
pop
cmp
push
in
inc
lret
mov
xchg
xlat
mov
mov
mov
lret
fcmove
or
ret
dec
lret
test
inc
xchg
add
sarb
inc
push
and
push
out
pop
jbe
sub
ret
mov
test
cs
in
aas
shlb
sbb
and
push
aad
mov
sbbl
ret
xor
outsb
sbb
ds
xchg
ja
xor
hlt
and
ret
sub
shlb
push
rcr
shrl
xor
aad
xchg
add
mov
mov
or
mov
lock
pop
pop
stos
int3
test
push
dec
add
inc
pop
pop
mov
cld
call
mov
lret
das
inc
adc
and
xchg
mov
lahf
leave
iret
cmp
push
shll
mov
sub
cmpsb
or
fs
sbb
data16
xor
lock
pop
inc
sbb
addb
sbb
add
push
push
in
dec
lods
outsb
xor
pop
pop
or
pop
fucompp
inc
jecxz
sbb
lcall
ds
cmp
jnp
les
dec
inc
sbb
mov
inc
push
repz
out
adcl
adc
in
adc
xchg
sbb
xchg
xchg
pop
mov
xchg
into
in
jp
pop
cmp
shll
mov
clc
or
sub
jg
push
lock
sbb
dec
rorb
and
fsubl
add
mov
js
and
mov
add
lods
mov
mov
adc
adc
divb
push
out
dec
sbb
cmc
mov
rclb
jg
test
js
mov
jne
sahf
scas
lea
jo
mov
add
stc
cld
dec
mov
movsl
sgdtl
and
sbb
gs
sbb
inc
inc
jae
stos
pop
jg
xor
aad
rcr
popf
fs
xlat
push
in
aam
lds
sub
jns
sub
rorl
xchg
mov
sbb
sahf
push
inc
or
sub
ljmp
push
lods
mov
inc
cltd
jae,pt
sbb
xor
repz
xchg
jmp
mov
xchg
fldl
jno
sbb
sub
adc
andb
pop
pop
in
xchg
xchg
dec
adc
mov
out
sahf
dec
pop
es
imul
jae
adc
int
ss
add
scas
das
xchg
mov
sti
in
jle
pop
outsl
pop
cmp
iret
in
push
jae
push
mov
loope
jmp
mov
push
cmp
jge
pushf
xchg
mov
cmpsb
jns,pt
mov
and
fadds
insb
test
push
ja
fcompl
push
xchg
fsubl
xor
mov
mov
xor
cmpsl
jns
jl
jmp
sbb
dec
xchg
idivb
cmpsl
loop
push
out
andb
outsl
sub
aad
shr
orl
mov
loope
into
fstpl
mov
inc
sbb
adcl
add
add
mov
ret
aam
mov
xor
mov
dec
mov
mov
push
stos
mov
shl
lea
stc
imul
jae
sti
dec
mov
xchg
and
shll
cli
adc
and
shll
sub
pop
mov
cmc
pop
push
lods
xlat
cmpps
jle
and
add
jmp
inc
push
pop
data16
pop
adc
add
xchg
inc
outsl
or
imul
mov
push
ja
xor
ja
pop
stos
popf
mov
dec
popf
sub
dec
lcall
xchg
in
adc
shlb
mov
lahf
xor
add
jnp
lahf
out
xor
sbb
mov
lcall
shll
ret
leave
fsubrs
sahf
int
sbb
sbb
nop
jp
dec
mov
xchg
add
out
jmp
adc
inc
je
pop
jo
les
mov
mov
push
xchg
mov
int3
push
push
pop
inc
or
pop
cmpsl
or
divb
xchg
sbb
movsl
sti
clc
les
dec
cmp
cmp
jb
lahf
push
subb
jp
loope
je
fnop
sub
xchg
into
inc
pop
dec
sti
inc
repz
mov
lods
cld
iret
and
outsb
int3
sbb
or
or
or
xor
aam
pushf
iret
push
insb
jb
iret
and
sub
lock
cld
loope
push
stos
inc
negl
sub
xor
pop
mov
cli
push
in
mov
mov
out
mov
pusha
jl
in
mov
int
mov
mov
mov
je
mov
jg
ret
or
icebp
fidivl
sub
popf
dec
pop
mov
mov
cmp
jp
lret
jb
add
adc
mov
js
or
daa
mov
pop
imul
in
lret
arpl
mov
cmp
aaa
in
insb
inc
cmc
add
xchg
cmpsb
test
mov
fnstsw
lock
jae
xchg
mov
dec
cmp
repz
xchg
and
or
push
stos
or
xchg
mov
rcrb
sub
jl
adc
shl
loopne
es
pop
int3
sti
aam
ja
in
les
xor
pusha
sbb
xor
sbb
cmp
cwtl
aad
sbb
nop
js
pop
push
mov
inc
repz
mov
arpl
sbb
xlat
aaa
data16
push
clc
int
scas
rorl
adc
loope
mov
xchg
sbb
and
xor
loopne
cmpsb
pop
or
inc
jns,pn
cmp
mov
sub
insl
mov
push
mov
jnp
leave
or
mov
fiaddl
sbb
test
cmp
insb
ret
add
jg
inc
jbe
push
inc
ret
testb
sub
mov
rclb
mulb
les
shlb
mov
aam
xchg
test
and
push
inc
xor
mov
mov
or
mov
arpl
add
stc
pop
addr16
dec
sti
pushl
leave
push
es
mov
adc
in
jp
inc
adc
bound
dec
pushf
sbb
jmp
cld
lea
sbb
xchg
inc
pop
mov
sti
imul
fwait
mov
hlt
dec
dec
mov
sub
pop
sub
push
inc
arpl
bound
xor
mov
out
js
cmp
push
rcrl
addr16
pop
iret
fwait
or
imul
push
cmpsl
mov
scas
adc
xor
hlt
mov
shl
jg
imul
scas
clc
sub
ds
inc
adc
xchg
adc
mov
xchg
xor
sbb
add
ds
fidivrl
pop
lods
sti
or
xchg
jl
push
icebp
arpl
xor
imul
ss
fnsave
arpl
testb
jl
mov
dec
adc
fstl
mov
cmp
push
dec
push
xchg
dec
xchg
jbe
sub
xchg
jp
orl
sub
jno
or
cmpsl
jg
jns
pop
xchg
xchg
inc
push
aam
dec
out
movsb
das
push
mov
pop
out
sub
lea
aaa
cmp
icebp
sub
shl
and
mov
insb
jae
dec
test
cmp
lret
xor
icebp
and
mov
imul
test
push
mov
xlat
hlt
hlt
adc
and
mov
mov
fildll
cmpsl
andl
push
stos
inc
int
jl
dec
aas
sti
cwtl
jae
push
in
inc
scas
dec
in
sub
pop
dec
pusha
pushf
cmp
mov
dec
inc
adc
add
lahf
xchg
jle
mov
or
add
pop
cmpsl
dec
xchg
or
push
mov
jecxz
mov
push
sub
mov
add
ret
pop
add
push
pop
jle
mov
pop
and
cld
jge
pop
shlb
or
push
lret
mov
pop
cltd
sbb
mov
add
sti
sbb
leave
sbb
popl
pop
xlat
sub
scas
ret
push
fnsave
dec
lods
adc
push
mov
jne
xchg
into
mov
pop
ds
popf
mov
arpl
nop
xchg
mov
ljmp
pop
mov
mov
test
icebp
sub
or
shll
imul
mov
out
and
or
loope
fildl
mov
in
cmc
sub
cli
fsqrt
popf
loop
out
dec
cmp
push
cltd
rcll
push
sub
data16
hlt
and
outsb
lds
dec
mov
fsincos
xor
jne
out
push
lods
jns
mov
gs
ljmp
add
jb
imul
or
in
xchg
cli
pop
decl
inc
in
push
push
or
push
icebp
xchg
xor
cmp
test
das
cwtl
idivb
xor
ss
ljmp
xchg
rclb
jle
fldcw
cmc
jg
jnp
sahf
test
jb
shlb
cwtl
shl
in
mov
das
xchg
aad
mov
je
std
cmp
daa
mov
push
out
cmpsb
mov
fwait
push
imul
jbe
jle
push
in
inc
negl
aam
add
in
daa
mov
pop
iret
loopne
pushf
shl
rorb
mov
dec
cli
lds
outsb
adc
pop
loope
pop
jnp
adc
fxch
lcall
pusha
loopne
cli
mov
dec
lret
adcl
push
ret
popf
mov
fnstcw
adc
sub
mov
mov
stos
fsubs
xchg
in
add
add
mov
sarl
sahf
out
cmp
push
sbb
scas
xchg
jns
xchg
cmpl
jecxz
movsl
push
clc
aas
adc
mov
add
test
in
mov
popf
sub
dec
and
xlat
ss
and
aas
rorb
jle
mov
jns
and
and
les
ja
xor
hlt
pop
out
scas
adc
movsb
and
inc
cmc
push
mov
or
loope
fbld
aad
sub
cmp
ss
mov
in
or
ja
call
pop
push
push
popa
cmpsb
xchg
xor
loope
jno
xchg
cmpsl
jmp
fistps
rcll
addr16
push
fimuls
mov
sti
and
lea
aam
and
pushf
in
push
mov
aam
adc
cmpsb
mov
sar
loope
stc
popf
dec
int
fimuls
movsl
mov
popf
addr16
and
mov
and
fidivs
cwtl
lcall
sahf
arpl
faddl
push
mov
sbb
jecxz
fmulp
insb
arpl
lock
fwait
mov
xchg
cmp
loope
outsl
jne
sbb
dec
aad
mov
push
pop
push
mov
rorl
xor
push
add
or
movb
lods
daa
ss
dec
dec
jb
mov
loop
dec
and
imul
out
popa
ficoms
mov
sbb
outsb
daa
add
pop
mov
sti
dec
pushf
rclb
mov
dec
lods
sahf
adc
add
push
gs
in
cmpsl
pop
xchg
aaa
adc
push
and
xchg
clc
cmpsb
js
js
fcmovnb
fisttpll
dec
sti
jp
lahf
mov
and
fcoms
xchg
daa
or
repnz
jl
sub
lahf
add
test
lret
cmp
cs
gs
push
cmpsb
sub
pop
mov
pop
xor
jno
push
push
je
out
fistps
push
push
mov
js
mov
and
adc
scas
adc
popa
sub
arpl
int
push
lds
push
mov
clc
jb
sti
pop
sbb
adc
mov
rcll
mov
mov
or
sbb
xchg
or
cmp
dec
push
jae
aaa
add
mov
push
xchg
add
out
mov
sbb
shl
sbb
mov
je
std
jns
int
pop
mov
int3
mov
lahf
or
jo
push
mov
jb
test
pop
jecxz
inc
dec
lret
xchg
xor
inc
mov
lahf
adc
mov
push
xchg
dec
loope
sbb
add
jne
movsl
xor
imul
xlat
push
push
jb
jecxz
imul
cld
mov
stos
pop
sub
out
stc
or
jmp
xor
mov
mov
call
and
pop
jno
adc
sti
jmp
mov
leave
fidivrs
sbb
bound
fstps
incb
sub
inc
cli
cli
pop
cmpsl
insl
push
or
jle
jb
nop
and
adc
test
fcoml
ret
xchg
insl
sahf
js
in
pop
xchg
nop
in
ret
lret
incb
roll
fs
pop
mov
lods
jle
int3
out
and
jb
nop
mov
push
push
in
push
mov
mov
imul
nop
xor
and
dec
jo
js
sbbb
lret
fsubs
inc
and
dec
dec
push
filds
adc
aas
jle
dec
lret
xchg
sub
mov
cmp
mov
dec
sub
packsswb
cwtl
insb
add
leave
mov
dec
push
mov
add
sbb
xor
pop
roll
adc
pop
adc
push
inc
add
jecxz
mov
push
shrb
ljmp
add
fidivl
popa
dec
stos
into
cmp
sbbl
push
stos
jle
mov
or
out
mov
out
lahf
mov
fstl
sbb
lds
sbb
xorb
adc
push
fistl
xchg
push
roll
in
add
jmp
mov
and
test
mov
inc
pop
ss
xchg
or
dec
jns
inc
icebp
faddl
and
mov
hlt
xchg
sahf
dec
fs
out
or
pop
mov
loope
xor
push
mov
push
outsl
cmpsb
repnz
mov
or
ljmp
arpl
push
push
rclb
mov
jg
lahf
aaa
outsl
pop
or
sub
ror
or
insl
cmp
shlb
je
pop
in
lret
add
sahf
les
idivb
mov
sti
dec
lret
jo
adc
and
test
push
insl
add
sarl
xor
sub
shl
xchg
addl
pop
jge
ja
push
sbb
xorb
pusha
jbe
xor
ret
or
jmp
das
inc
push
stc
cmpl
leave
dec
fadds
push
and
xchg
xchg
mov
scas
daa
mov
ud2
sbb
jmp
lock
popa
test
mov
cwtl
scas
loop
mul
inc
lds
mov
push
sbb
or
orl
sbbb
and
mov
ret
adc
push
inc
add
stos
ja
push
sbb
or
lcall
cmp
sbb
sti
dec
push
or
push
sbb
mov
aam
mov
filds
push
xor
mov
mov
test
mov
pop
push
jle
ret
push
ret
js
push
sub
mov
mov
jo
icebp
movsb
or
std
mov
lret
fs
test
scas
iret
or
sti
ficoms
jnp
fisubs
sbb
mov
xor
fdivl
pop
pop
jmp
rol
in
lcall
loope
vmovapd
sahf
mov
jns
insb
mov
and
jbe
mov
jmp
mov
sbb
pop
sub
idivb
ret
adc
int
cmc
call
inc
mov
popf
pop
clc
mov
ljmp
and
adc
and
stos
xor
jge
cmpb
sub
bound
mov
xchg
jno
scas
sbb
xchg
or
and
stc
jmp
mov
jb
push
ja
rcr
lods
scas
adc
jae
std
nop
mov
lods
mov
xchg
mov
jg
dec
adc
mov
adcl
add
int
outsb
in
pop
adcb
js
jbe
sub
mov
mov
ret
fnstsw
mov
and
xor
jp
test
mov
jecxz
aam
out
cltd
sbb
sub
adc
adc
bound
push
frndint
mov
scas
add
ds
sbb
or
lds
nop
pop
add
xor
xor
je
pop
mov
jbe
mov
int3
cmp
fildl
addr16
jne
lock
jae
jnp
or
add
add
pop
jge
adc
lahf
bound
xchg
mov
clc
push
push
scas
out
outsb
shrb
ret
sbb
mov
add
and
scas
and
sub
pop
lahf
mov
adc
dec
bound
fiadds
test
xlat
cld
jge
lds
pushf
lock
test
movsl
jno
aad
push
push
mulb
lods
xchg
dec
aam
pop
inc
subl
mov
fistps
stos
pop
jns
add
mov
lock
jecxz
add
pop
ret
inc
inc
js
push
pop
or
outsl
or
add
enter
ret
mov
xchg
mov
mov
in
push
mov
or
mov
pushf
cmp
mov
mov
fwait
test
es
shll
clc
lods
push
add
or
aas
aas
push
data16
xor
je
mov
dec
and
push
pop
jg
sbb
hlt
mov
pop
sub
cmp
jle
dec
rcrl
jg
aad
ljmp
inc
mov
mov
xor
xchg
jg
mov
sub
aas
mov
or
ljmp
dec
and
stos
loop
es
xor
push
pop
or
aad
neg
jns
adc
xchg
xchg
pop
adc
mov
ja
mov
pop
fxch
movsb
repz
xchg
aaa
mov
xchg
inc
jge
cmp
mov
cmp
ss
sub
fbld
clc
bound
aam
mov
sbb
addr16
scas
pusha
lret
fsubl
sub
sbb
das
mov
jb
fdivrl
mov
mov
aad
jg
cltd
std
jle
nop
jmp
pop
std
mov
xlat
adc
mov
push
pop
jge
push
fbstp
lock
sbb
in
xchg
dec
jbe
int
and
aam
in
xor
icebp
mov
dec
mov
or
cmc
dec
inc
xchg
push
aaa
mov
cmc
insl
loopne
mov
addr16
push
mov
jb
cmp
testl
in
sub
out
dec
xchg
push
inc
inc
aad
and
fbstp
fwait
xchg
fs
mov
add
pop
dec
pop
add
xchg
mov
bound
outsb
lods
fs
aaa
js
cmp
loope
dec
aam
sbbl
sub
pop
in
out
loop
sbb
roll
stos
ret
pushw
or
or
pop
rcll
inc
jb
shr
data16
divl
sbb
insl
dec
stos
lock
movsl
clc
loopne
fwait
cmp
add
shrl
or
in
in
cld
clc
cmp
mov
or
ret
pop
faddl
jmp
mov
pop
outsb
xchg
in
adc
addr16
mov
clc
repnz
inc
and
jg
push
jae
test
popa
cmp
fldt
lret
mov
lods
cmp
jle
mov
mull
and
stc
iret
adc
mov
cmp
sahf
rorl
fisttpll
or
bound
pop
movsl
and
cld
scas
fmul
cli
lds
into
mov
shrd
xchg
outsb
mov
leave
xlat
fwait
xchg
stos
iret
stos
mov
sbb
add
stc
inc
push
add
outsb
popf
icebp
inc
es
cs
mov
add
xchg
shll
mov
inc
jge
and
out
or
lret
push
sbb
mov
mulb
mov
mov
fwait
inc
cmpsb
aam
repz
or
inc
inc
push
or
xor
fwait
and
pop
pop
mov
mov
push
ffreep
cmp
sbb
cmp
lea
pop
push
insl
push
pop
push
cmp
push
push
addr16
adc
in
sbb
cmp
mov
jl
popa
test
fs
aas
fistpll
rcr
jp
push
dec
mov
incb
pop
cs
jmp
fistps
aad
loopne
jbe
pusha
stos
sbb
mov
mov
add
push
mov
fsub
sub
mov
xchg
sub
push
movsl
test
or
cld
mov
sub
in
fidivl
mov
xchg
and
es
shr
pop
inc
pop
insb
ds
ja
popa
or
movsb
jno
fldl
cmp
aad
fcmovnb
stos
adc
and
out
xchg
push
rorb
xchg
jl
jl
inc
and
push
sbb
cmp
iret
adc
ja
hlt
xchg
xchg
jle
mov
or
enter
stos
movsl
stos
fcomps
sub
cmp
hlt
or
adc
xchg
mov
jl
sub
and
add
sub
push
cmpsl
inc
inc
xchg
iret
daa
xchg
rcrb
test
mov
dec
cmp
pop
dec
jle
test
lahf
and
mull
subl
loope
xor
dec
inc
push
imul
push
fisubrs
arpl
adc
dec
lock
jmp
loop
shll
jp
push
mov
xchg
fisubrl
fcomi
pop
fisttpll
dec
aaa
cs
loopne
mov
out
in
xchg
data16
insl
push
fisubs
dec
sub
inc
lret
inc
cwtl
jge
fstl
sub
dec
cmp
call
pmuludq
mov
mov
bound
cld
call
testl
shll
daa
jge
icebp
notl
call
fwait
dec
cmc
pop
fimuls
push
push
scas
mov
push
fnstenv
dec
in
pop
inc
push
and
imul
les
sarl
push
fucomip
jge
xchg
movsl
out
inc
pop
ja
in
mov
data16
xchg
cmpsb
push
shl
adc
sbb
cld
pop
rcrl
push
inc
aaa
ficoml
xchg
inc
imul
loop
and
stc
cmpsb
aas
jg
and
loop
loopne
sbb
js
adc
lahf
jne
inc
iret
clc
jle
push
jns
pop
xchg
nop
lods
pop
mov
xor
jae
insl
mov
add
pop
in
and
mov
out
push
jg
pop
je
cwtl
popa
sbb
scas
ds
fprem1
inc
mov
mov
cltd
call
stc
or
rcll
mov
ret
loop
xchg
pop
mov
mov
sub
hlt
jae
adc
jbe
in
mov
faddp
push
fistpll
pop
cpuid
hlt
xor
adc
jg
push
pop
dec
int
stos
in
rorb
jb
jmp
loope
sub
mov
jae
mov
xor
xchg
lods
call
cli
pop
pop
jge
cmp
push
push
icebp
cld
sub
nopl
fstpl
cmp
movsb
xchg
xchg
mov
cmpsl
out
lret
loop
andb
out
jmp
dec
cmc
andb
loope
push
fs
pop
mov
pop
pop
adc
sbbl
lcall
mov
insl
mov
sub
shlb
sbb
sub
push
dec
cmpl
sub
mov
shll
cld
mov
lods
fildl
ss
or
scas
aaa
and
cli
xor
lea
or
jnp
mov
jno
mov
mov
out
arpl
aas
rclb
test
ja
mov
pusha
and
scas
jae
xchg
stc
enter
insb
mov
add
es
je
mov
js
movsb
loope
daa
movsb
xchg
int3
jle
jbe
mov
outsb
xor
jmp
addr16
add
daa
test
testb
int3
sbb
xchg
or
fldcw
aam
js
bound
mov
jmp
and
outsb
mov
sahf
iret
sub
push
pop
and
icebp
and
adc
jno
les
push
jmp
push
push
repnz
ljmp
dec
cmp
cmpl
mulb
pop
ljmp
sub
out
repnz
pop
les
jge
and
ret
pop
jmp
sar
decb
adc
mov
jmp
or
push
cltd
int3
out
sti
shl
js
pop
cmc
in
out
clc
push
clc
sub
mov
fs
inc
jno
push
sub
imulb
incb
push
push
jp
mov
std
pop
addr16
fwait
leave
push
dec
jmp
iret
mov
mov
fisubrs
cmp
adc
enter
int3
daa
adc
test
outsb
icebp
jnp
das
stos
lea
sbb
ja
sbb
stos
rolb
call
daa
adc
mov
ret
cmc
aaa
jbe
push
stos
mov
inc
scas
out
ljmp
xchg
mov
jp
repnz
aam
frstor
xchg
imul
fmull
adc
mov
mov
divb
xor
cmpsb
or
lds
or
adc
enter
jno
or
mov
fs
mov
stos
jmp
outsl
or
inc
daa
push
adc
out
fimull
xchg
insb
js
or
mov
mov
je
pop
sbb
in
loope
int
or
xchg
push
pop
aam
add
xchg
lcall
ds
nop
shl
lods
mov
pushl
jecxz
sbb
cmpsb
popa
add
outsl
dec
ret
and
das
jg
nop
xlat
lods
outsb
in
cmpsb
dec
adc
inc
or
out
cli
jg
cmpb
xor
inc
fcmovnbe
outsl
lret
dec
cld
lds
and
cld
push
inc
mov
out
stos
div
adc
leave
pop
mov
pop
dec
imull
xchg
pop
mov
test
or
and
xchg
pop
pop
adc
adc
rclb
mov
sbb
icebp
in
cltd
bound
sbb
sbb
add
ja
ljmp
pop
sahf
pop
call
adc
mov
inc
sbb
dec
mov
mov
sub
pop
pushf
out
lret
xchg
outsl
sub
push
push
loopne
push
push
outsb
leave
adc
and
inc
push
or
mov
push
xlat
jp
jb
push
xchg
shr
xchg
cld
aad
daa
out
and
rolb
sub
arpl
pop
imul
xor
imul
iret
scas
inc
inc
stc
clc
jne
lret
aam
pop
jnp
xchg
or
xchg
add
aaa
jns
add
inc
bound
data16
enter
cltd
icebp
gs
xor
lods
shll
ret
int
nop
pop
pop
ja
fs
jne
js
xor
idivl
sahf
jl
push
sub
sub
mov
xchg
cmpsb
jnp
pushf
fstp
sub
lea
lods
xor
and
dec
sub
ljmp
jo
adcl
push
mov
incl
cmp
mov
rcrb
sub
je
push
lahf
cmpsb
dec
ret
mov
sub
cmpsl
inc
fiadds
sbb
loop
cmp
lods
dec
lcall
mov
inc
lock
repnz
add
fucomp
mov
clc
inc
push
std
inc
adc
and
jp
into
ljmp
inc
les
repz
dec
pop
xorb
push
sbb
loope,pn
icebp
add
adc
cmp
lret
add
and
and
mov
mov
scas
sub
ljmp
cmpb
mov
or
dec
aaa
sbb
jno
lret
sub
adc
ds
in
xor
in
cmp
sub
jecxz
pop
test
in
pop
std
mov
mov
stos
leave
int3
js
xchg
xchg
lret
and
lods
shlb
fisubrl
adc
jecxz
push
push
rolb
adc
fiaddl
xlat
jns
jb
inc
repnz
test
lret
xchg
insb
subl
ljmp
add
mov
mov
sub
pop
lret
mov
mull
bound
push
jmp
inc
xchg
mov
pop
push
sbb
lret
dec
sub
pushf
sub
popf
pop
sbb
jae
push
cmpsl
xchg
mov
testb
js
pop
scas
stc
inc
pop
in
mov
sbb
and
aas
sbb
call
or
iret
jne
inc
adc
test
xchg
ja
adc
mov
cmp
es
pop
test
fnstenv
dec
gs
mov
jg
loop
daa
inc
out
cmp
mov
dec
insb
imulb
jnp
xchg
into
scas
or
inc
or
inc
and
rcrb
xchg
cmp
push
xor
jl
push
jle
fsubrs
cmp
icebp
or
adc
lret
or
xor
out
in
mov
mov
subl
cwtl
pop
test
and
nop
xchg
out
rcl
dec
in
les
sbb
xor
lods
loopew
popf
sbb
pushf
push
mov
mov
pushf
out
stos
mov
mov
int3
xchg
mov
cmpsb
test
pushf
push
cmp
imul
mov
mov
mov
jge
jnp
jl
jle
jmp
aam
sub
loopne
cmpsb
in
repnz
push
test
ja
sub
jnp
dec
xor
mov
push
jg
and
imul
mov
mov
push
out
pop
int3
jmp
shll
cmp
cld
sub
mov
xchg
sti
cmpsb
shll
mov
fiadds
aad
push
mov
movd
pusha
cmp
nop
pushf
add
sub
push
or
mov
out
dec
sbb
ds
sub
jns
or
xchg
inc
js
jmp
xchg
out
insl
mov
sub
adcb
pop
xchg
lahf
mov
fstps
xchg
push
mov
ljmp
mov
clc
cmc
xor
and
dec
and
mov
push
mov
cltd
scas
jbe
xor
cmp
sbb
xor
add
or
pavgb
jns
cld
fsub
cld
mov
in
fcmovbe
sbb
fs
xor
push
out
wrmsr
andl
pop
sub
subl
loop
inc
fimull
fldt
sub
inc
sub
mov
das
scas
outsb
out
fcomi
int
insb
sub
gs
cmpsl
loop
dec
mov
mov
popf
sub
movsl
inc
mov
jnp
push
xor
push
jns
mov
adc
jmp
jge
shrb
xchg
adc
jmp
ret
add
xchg
lahf
pop
or
mulb
push
pop
int
psubd
mov
mov
out
sub
or
sti
orl
aas
fnstcw
pop
and
sbb
aas
out
sbb
dec
xorl
mov
clc
jle
ret
es
push
xchg
or
test
aad
popf
jle
bound
je
push
scas
or
test
or
cmpb
mov
pusha
jns
insl
jecxz
lods
xor
jno
push
xchg
in
lret
dec
icebp
mov
and
lcall
sbb
mov
hlt
cmp
xchg
mov
push
push
sbb
xchg
out
and
inc
fisubrs
or
pop
clc
inc
push
mov
and
inc
jo
pop
loope
pop
dec
add
out
inc
cmp
push
xchg
jmp
imul
mov
rcll
in
cmpsl
sub
adcl
or
jge
xchg
dec
rcll
int3
cmp
xor
sbb
pop
ret
mov
pop
xor
mov
cmp
sti
add
dec
addr16
xlat
adc
add
pop
cld
push
xor
push
add
rolb
add
fstl
jb
cmp
lds
or
fst
stc
mulb
mov
mov
cwtl
stos
call
push
jecxz
in
adc
or
fs
mov
push
repz
enter
mov
mov
mov
mov
sbb
dec
ljmp
or
jnp
jg
cli
jae
dec
sbb
sahf
je
jp
pop
dec
mov
loope
sbb
cs
jno
outsb
ja
fdivrl
out
les
clc
adcl
shll
xchg
add
test
mov
and
clc
popf
sahf
aam
fucomp
cld
xchg
imul
xor
sub
into
and
fidivl
les
test
sbb
pushf
leave
movsb
cli
iret
mov
inc
nop
std
inc
cmp
pmullw
lahf
add
leave
in
mov
dec
out
stc
mov
jnp
jbe
cmc
data16
adc
pushf
stos
sub
dec
sbb
or
les
loope
cmp
test
loope
ljmp
push
aas
push
aad
cs
sub
jmp
jb
clc
cmc
sub
lods
icebp
sub
pop
push
sbb
xor
xchg
push
sub
sub
cmp
push
jns
jge
out
pop
icebp
shr
and
push
and
fistps
int
stos
add
sbb
dec
inc
mov
pop
lock
lds
fidivrl
testl
test
or
clc
adc
mov
nop
push
sbbl
fsubr
loope
rorb
and
add
ret
pusha
cmp
rcl
xor
cmpsl
stc
int
mov
das
jecxz
mov
sahf
stos
mov
or
jmp
popa
or
pop
leave
arpl
mov
push
dec
or
fincstp
and
cmp
xchg
addl
cld
pop
dec
out
shll
ljmp
cld
pop
xor
xorl
inc
daa
jns
push
adcl
and
mov
or
aaa
dec
mov
enter
and
jo
sub
push
xor
mov
in
xor
mov
or
int3
pop
push
pop
xchg
in
xchg
test
jmp
push
jl
in
cmpsb
js
movsb
xor
xlat
gs
xchg
cmc
push
popa
cld
xor
adc
inc
lds
pop
mov
mov
pop
dec
sbb
in
add
icebp
sbb
mov
sub
gs
dec
sub
pop
mull
cli
popa
ja
inc
cmpsb
add
mov
xchg
xorl
enter
mov
pop
inc
mov
cmp
stos
loop
ret
inc
jmp
out
loopne
bound
inc
fists
and
outsb
call
xchg
int3
mov
es
mov
jnp
adc
mov
xchg
mov
rcr
mov
jp
or
pop
xor
mov
hlt
js
push
jl
jmp
insl
int3
fcomi
into
je
mov
or
or
jnp
jae
aaa
pusha
push
clc
ja
fdivp
push
or
repnz
jae
bound
ja
fisttpll
int
jo
cltd
mov
insb
js
sub
scas
cmp
ret
jmp
lock
fcomps
addr16
dec
out
shlb
adc
xchg
push
jae
aas
mov
inc
jmp
das
mov
jl
pop
leave
jge
and
jbe
xor
and
hlt
mov
inc
xlat
cmpsb
ljmp
cmp
dec
outsb
or
shlb
lds
push
fwait
add
lds
dec
jg
loopne
insb
or
and
xchg
shlb
inc
mov
lret
sub
push
and
dec
mov
leave
xor
or
cmpsb
int3
or
adc
dec
cli
ds
sub
ljmp
cmp
or
adc
imul
pop
push
cmpsl
sbb
repz
addr16
jge
pop
cmpsb
arpl
push
inc
imul
jne
fstpt
jae
push
or
xor
lahf
xchg
dec
sbb
or
push
or
xchg
jae
test
jno
push
jno
mov
cmp
add
sub
dec
jecxz
popl
xor
cs
pushf
or
mov
sub
pop
adc
push
fistpl
scas
add
sub
out
push
pop
xchg
pop
push
mov
mov
les
inc
pop
stos
loop
xchg
ficoml
movsb
xchg
in
sbb
lahf
outsb
mov
or
jl
pop
fs
xchg
sub
add
scas
iret
push
or
hlt
lods
hlt
push
sbbb
pop
fstpl
nop
movsl
pop
sbb
jecxz
lret
pop
xchg
cmp
pop
mov
inc
mov
push
stos
cltd
pop
pop
daa
cmp
fnstenv
push
pushf
aad
insb
shrl
mov
jle
push
fidivrs
psubq
fwait
jp
sbbb
inc
mov
fcmovu
add
push
cmpsb
mov
sti
sub
xchg
out
xchg
sbb
mov
pop
or
push
sbb
xchg
cmp
sub
rcl
cmpb
loope
sti
xchg
dec
xchg
jmp
mov
popa
icebp
push
jbe
ret
pop
xor
mov
fsts
and
jae
pushf
xor
pop
xor
pop
add
rcl
aas
mov
add
dec
ds
das
fidivrs
xchg
in
test
ret
fwait
xor
test
popf
xchg
mov
stos
jecxz
mov
or
sbb
imul
ja
aaa
imul
mov
mov
inc
insb
xor
push
mov
int
aas
es
imul
repnz
mov
adc
jae
inc
es
fwait
lahf
icebp
mov
flds
mov
sbb
mov
jb
push
sbb
shrb
and
mov
rcl
icebp
xor
int
test
dec
iret
in
adc
mov
in
nop
stc
jo
out
adc
rclb
push
xchg
aad
inc
xchg
outsb
sti
push
addb
pop
pushf
adc
jle
mov
cwtl
roll
bound
test
push
icebp
loope
cltd
aad
popf
sbbb
aas
add
std
jae
add
test
aad
rorl
ret
and
xchg
lock
rcrl
or
incl
cltd
enter
sbb
xchg
lods
ljmp
mov
out
cmp
jmp
jp
imulb
dec
in
and
mov
mov
pop
dec
pusha
out
mov
mov
std
cmc
aas
out
mov
out
mov
pop
cs
adc
mov
pop
mov
or
mov
push
xchg
pop
mov
pop
into
add
lds
lcall
jmp
and
jo
cmpsl
mulb
jg
in
lock
mov
stos
popa
js
mov
mov
push
push
xchg
pop
cltd
es
push
xlat
push
jbe
push
fdivl
lods
mov
xchg
jge
lahf
inc
test
in
mov
push
aam
adc
es
iret
mov
repnz
dec
fildl
push
xchg
cmp
sbb
call
mov
lods
clc
add
cltd
sub
mov
je
dec
mov
xor
mov
int
pop
filds
fistps
gs
fcomi
outsb
cmp
jmp
subl
or
out
add
pop
jno
push
push
push
add
and
bound
enter
add
scas
das
xor
in
dec
lods
lret
lods
sub
fs
clc
mov
mov
lret
xor
fcomps
fidivl
arpl
int
cs
jp
lahf
sub
sub
inc
push
xor
xchg
mov
xchg
scas
push
movb
fsub
aam
add
loop
loopne
mov
mov
pop
sbb
cmp
movsb
ret
outsl
gs
lds
add
lods
push
push
cmpsl
test
cmp
popf
or
sbbl
adc
dec
aas
les
les
cwtl
shll
cmp
mov
pusha
in
sub
into
cmp
xchg
arpl
mov
insl
add
push
push
mov
mov
xchg
iret
out
cmp
mov
fsubrs
test
xor
mov
std
jmp
mov
sub
xor
inc
sub
aaa
aam
inc
movsbl
or
xlat
jle
mov
cltd
loopne
adc
jae,pn
jno
mov
adc
xchg
push
das
ds
arpl
scas
mov
or
jg
fadd
jge
push
mov
andb
out
sub
sbbl
jne
repz
fs
icebp
sar
aam
push
ret
or
inc
xchg
mov
test
cmp
ds
int3
call
mov
fsubr
iret
mov
adc
cli
push
stos
icebp
and
int3
xchg
xlat
addr16
fisubrs
fs
clc
ss
xchg
scas
adc
push
les
lods
add
ljmp
pop
insl
sbb
xchg
mov
cltd
jno
in
test
lds
daa
rorb
ret
gs
xor
jp
in
push
cmp
clc
xlat
lahf
sti
std
inc
je
xchg
lret
pop
cmpb
cmc
imul
je
inc
cmp
bound
repnz
fisubrl
sbb
fstl
mov
jns
or
leave
out
addr16
rclb
or
mov
rcrl
aaa
push
fisttps
movsl
pop
jmp
sbb
add
xchg
mull
fxch
or
push
hlt
and
adc
cmp
push
add
repnz
xchg
sub
sub
xor
jecxz
push
mov
adc
filds
xor
jne
push
cltd
ret
cmp
nop
sub
ret
cs
test
aam
adc
mov
aad
push
cmc
testl
push
xchg
out
jecxz
sbb
push
cmp
daa
orl
adc
into
lds
push
inc
into
and
mov
jb
addr16
adc
pop
and
or
sbb
xor
push
mov
push
dec
das
xchg
hlt
xchg
repz
test
loope
mov
jmp
and
scas
xor
xor
cmp
scas
mov
jb
sub
es
and
popl
add
sbb
icebp
push
addr16
cltd
jae
xchg
push
inc
enter
or
out
movsb
xor
adc
test
lea
jecxz
sbb
addr16
pop
outsb
xchg
movsb
outsb
cmc
jae
shlb
lods
rcl
sub
jnp
fldcw
adc
aaa
pusha
inc
or
repz
mov
add
jp
nop
lret
inc
mov
call
push
jmp
rol
data16
mov
push
cmp
cmp
pop
imul
int3
dec
cmp
das
je
pop
bound
inc
cwtl
rcll
jl
pop
out
mov
cmp
wbinvd
lcall
lea
test
mov
adcl
pop
and
xchg
push
aaa
dec
data16
jmp
and
xor
or
push
jg
xor
mov
stos
nop
jp
inc
mov
movsl
mov
mov
outsl
xchg
dec
hlt
mov
jle
cltd
and
insb
jmp
cmp
outsl
repnz
adc
test
fistpl
iret
add
xchg
scas
addr16
or
dec
cmp
fimull
out
push
mov
mov
xchg
cs
repnz
dec
cltd
cmp
cld
add
imul
push
and
sbb
mov
xor
mov
addr16
or
leave
add
jle
ret
aas
ja
adc
jecxz
lock
mov
clc
jo
mov
jg
cwtl
jno
addr16
mov
and
cmp
data16
adc
outsl
mov
sub
mov
or
xchg
mov
in
lods
dec
jmp
adc
pop
scas
sbb
and
je
mov
arpl
adc
sbb
adc
add
nop
movsl
add
xor
mov
mov
add
inc
jmp
add
arpl
add
pop
gs
dec
lods
cmp
jmp
push
sbb
push
xor
pop
and
xchg
mov
jbe,pt
leave
stos
fldcw
xor
push
int3
popf
mov
ss
sbb
sub
mov
sbb
adc
fwait
cltd
pop
push
sub
loope
push
aaa
mov
and
stos
push
ret
add
daa
aaa
mov
dec
mov
add
mov
xchg
std
dec
sbb
mov
mov
test
xor
int
movsl
inc
mov
fwait
ret
out
call
mov
fisttps
popa
xor
rcrl
cmpsl
int
adc
xchg
pop
cmp
push
mov
loopne
inc
loop
sbb
aaa
nop
dec
and
test
jmp
sahf
frstor
or
push
pop
imul
or
push
idivb
push
pop
movsb
xlat
movsb
lods
outsl
adc
jnp
xor
rclb
pop
mov
fiadds
pop
lret
add
jcxz
scas
rolb
aaa
testb
push
loopne
jno
lods
push
cmp
add
es
fcmovnb
push
in
outsb
popa
fiadds
xlat
jp
repnz
mov
inc
cmp
dec
roll
imul
xor
pusha
addr16
jns
or
cmpsb
nop
test
push
push
xor
imulb
add
xchg
and
inc
mov
mov
push
or
xor
mov
pop
test
mov
cld
mov
xchg
inc
push
scas
cmp
sub
lret
jl
inc
fucomi
lcall
mov
cmp
lods
stos
jmp
movswl
int
cmp
lcall
adc
inc
sub
mov
in
stc
bound
rcl
jmp
outsl
iret
movsb
test
sub
bound
lods
jle
stc
xor
mov
dec
test
push
iret
lods
adc
inc
adc
in
push
stos
push
cs
faddl
es
or
add
inc
mov
mov
mov
xor
xor
es
mov
sbb
cmp
mov
loopne
cmc
or
into
jno
add
dec
pop
pop
dec
sahf
je
clc
push
stc
ds
repz
jmp
xor
out
xor
test
jnp
neg
jns
pop
nop
cmc
test
aas
xor
leave
push
xor
add
mov
cmp
or
pusha
dec
push
cmovge
or
sbb
stos
mov
popf
enter
data16
xor
push
fisubs
movsb
push
jp
pop
inc
pop
fdivrp
mov
fs
rcl
sub
xor
xchg
clc
sub
lods
loop
ret
call
arpl
sbb
fwait
rcll
in
sbbl
sbb
daa
lods
pop
stos
pop
and
jbe
mov
loopne
push
add
adc
jl
xchg
test
in
insl
sahf
test
nop
es
lock
sbb
nop
xor
push
add
jg
bound
lcall
and
lods
push
push
imul
sbb
jb
movsl
dec
adc
lcall
xor
lods
jno
or
test
sub
daa
mov
xchg
addr16
lret
dec
xchg
stos
mov
or
or
scas
xor
xorb
je
or
pop
cmp
mov
dec
sbb
test
nop
test
or
jmp
shr
xor
inc
or
and
aad
ficoms
fstl
mov
mov
out
movsl
test
add
loopne
dec
xor
mov
lret
fdivr
mul
inc
stc
mov
fidivrs
dec
movsb
inc
movsb
aas
and
xlat
arpl
add
cmpsl
cmpsl
add
enter
mov
mov
call
pop
lahf
add
mov
push
cld
jp
push
aad
jmp
hlt
push
rep
sub
into
xchg
sbb
adc
out
pop
jecxz
and
cmc
cs
lds
mov
sbb
dec
out
daa
mov
dec
or
popa
xchg
loope
jle
int3
ljmp
inc
cmc
sahf
pop
cmp
int
lds
mov
dec
push
mov
xchg
imul
adc
scas
addl
test
int
mov
push
lods
sti
enter
sbb
les
ficoml
bound
push
mov
adc
mov
lods
inc
test
mov
loopne
fs
ss
lock
push
into
inc
mov
scas
cmp
ds
mov
ja
rclb
stc
movsb
sbb
or
sbb
test
jmp
mov
pop
hlt
cmp
xchg
xor
in
cmp
cld
dec
mov
lds
ljmp
rclb
add
popa
mov
push
inc
cld
aam
adc
ret
mov
cli
jno
sbb
lods
decl
xchg
xor
add
stc
sti
add
or
mov
aam
jp
sbb
pop
sti
stos
in
into
inc
push
fs
repz
jl
pop
fdivrp
jge
lret
ljmp
cmp
cmpsl
inc
mov
mov
mov
inc
hlt
sub
ljmp
in
decb
dec
lret
shrb
int3
or
nop
mov
push
push
push
sub
call
add
mov
jo
push
dec
dec
outsb
stos
call
jnp
stos
mov
inc
or
mov
outsb
and
and
pushf
pop
divb
hlt
repnz
divb
psubusw
xchg
jbe
int3
mov
jb
mov
in
ljmp
repz
adc
sub
pop
gs
fstpt
outsl
fs
mov
push
jno
or
out
cmp
push
push
mov
mov
pop
xchg
jns
insb
repz
lcall
dec
cmpsl
ds
rolb
and
lret
push
andb
jge
jnp
jl
sub
call
fisubrl
or
lahf
fcoms
jno
xor
imul
push
addr16
negl
xor
call
scas
sti
in
pop
or
mov
fisubl
or
fdivs
loope
popa
stc
lcall
inc
mov
sub
imul
fmuls
sub
mov
push
cmp
fisubl
add
inc
shrl
mov
loope
mov
push
jl
lret
movsl
xchg
jbe
push
xor
sbb
lret
clc
aaa
add
mov
ljmp
ljmp
xor
xrelease
cmpsl
or
rol
loop
sbb
clc
int3
test
lcall
pop
pop
icebp
lret
push
andb
cmpsl
je
xor
pop
lret
lret
scas
mov
mov
add
push
add
pop
je
cmp
jnp
rolb
test
lds
lock
mov
fstpl
cmp
jmp
orb
sub
mov
or
stos
push
cs
mov
test
stos
mov
push
lods
jbe
cmp
out
test
icebp
in
dec
cmp
mov
jne
test
sti
fsubl
les
mov
test
xor
mulb
sub
aam
mov
es
loop
mov
mov
mov
mov
jmp
xacquire
iret
mov
xor
call
pusha
ljmp
mov
subl
sub
fldenv
mov
divl
mov
fwait
lret
dec
xor
in
dec
dec
adcb
pop
mov
in
sub
repnz
inc
pop
int3
mov
fwait
les
push
dec
sbb
jnp
jo
mov
dec
or
daa
test
push
jmp
scas
cli
popa
icebp
jno
ljmp
orb
push
int3
out
xchg
pop
add
loop
lods
cmp
xchg
mov
xchg
lahf
outsb
and
add
mov
sub
jnp
lds
cmp
lahf
pusha
jmp
or
xchg
lds
mov
mov
mov
cs
scas
mov
loope
add
out
in
imul
test
repnz
clc
in
lret
xchg
lret
jmp
arpl
stos
enter
jge
adc
push
pand
nop
ficoms
movsl
lds
inc
xchg
repnz
dec
pusha
mov
jmp
xchg
xorb
add
jns
add
jbe
xchg
fadd
adc
mov
mov
push
fwait
daa
push
stc
xchg
scas
pop
loopne
gs
fcmovu
clc
or
push
lods
dec
push
xchg
push
icebp
pop
pop
mov
push
cltd
subb
push
mov
insl
mov
cli
in
sub
jle
xor
out
sbb
jnp
out
stos
or
sub
or
sti
cmp
or
pop
lret
test
pop
stos
loopne
and
shlb
out
xor
jmp
and
shlb
cmc
aas
ljmp
or
dec
mov
aaa
stos
scas
rolb
mov
out
sub
in
add
add
add
shrl
ret
add
movsl
insb
pop
mov
lret
mov
dec
fistps
fists
cmp
cmpsl
jbe
xor
insb
fidivs
je
xchg
mov
stc
leave
out
xor
dec
dec
lea
sbb
xchg
fnstcw
add
stc
ss
adc
fcomps
out
push
shll
push
inc
jecxz
stos
in
test
fimull
enter
adc
sub
lret
or
mov
add
je
inc
bound
decl
sahf
lahf
dec
mov
mov
stos
das
add
sub
push
popf
push
repnz
jle
shr
mov
dec
and
dec
sbb
or
sbb
or
sbb
loop
fwait
out
pop
clc
pop
iret
xchg
mov
mov
mov
scas
mov
movsb
fdivs
testl
pop
sbb
and
dec
pop
cmp
lcall
scas
pcmpgtb
sub
out
xor
sbb
ja
fistpll
pop
jo
xlat
repz
add
xchg
jge
test
inc
cmpsl
aas
inc
les
lret
push
and
leave
bound
pushf
inc
lea
cmp
ljmp
je
aad
fwait
call
push
xor
fcmovbe
jp
dec
xchg
pop
jg
sub
in
ret
aas
clc
xchg
adc
mov
cmp
cmp
mov
repnz
add
cld
test
pop
imul
mov
xchg
movsb
sub
inc
leave
and
lea
pop
data16
add
inc
jns
icebp
lcall
mov
or
stc
fwait
push
push
adc
ret
mov
mov
adc
add
cmpsb
outsl
loope
fcompl
ficoml
testl
add
test
mov
and
mov
mov
push
les
pop
cwtl
push
sub
cs
xlat
xor
add
call
stos
jo
mov
pop
lea
sub
cmp
add
test
fabs
cwtl
cwtl
sub
dec
popa
mov
mov
ss
ret
and
xor
xor
scas
jno
into
inc
cmp
ds
popa
pop
push
jge
inc
test
jp
inc
scas
mov
mov
imul
jb
aam
hlt
jns
xchg
or
aam
ja
dec
and
xchg
mov
sub
icebp
test
pop
pop
aam
xchg
adc
mov
push
lcall
adc
or
fisubs
pop
dec
push
inc
push
and
adc
xchg
lahf
adc
mov
xchg
mov
and
pop
ret
cmp
ja
aad
pop
shlb
popf
cmc
pop
iret
sbb
mov
inc
jno
out
jmp
add
inc
push
push
pushl
or
mov
lret
and
subb
pop
sbb
push
loop
or
je
add
pop
cmpsl
clc
xchg
jne
mov
cmpsb
mov
adc
mov
cmpsb
ret
stos
repz
pop
fwait
adcl
les
dec
cmpsb
aad
and
pop
lock
data16
pop
xor
push
das
int3
and
iret
cld
call
mov
cld
test
xor
inc
push
pusha
sahf
xor
inc
test
or
xchg
pusha
leave
adc
clc
out
movsb
popf
lahf
lret
mov
in
mov
divb
fs
dec
inc
ja
in
push
jp
negb
lret
stc
and
pop
les
lahf
pop
jle
xor
aaa
lds
fs
mov
cmp
pop
ds
lods
mov
cmp
inc
jnp
inc
lcall
pop
xor
or
aas
daa
cmpb
aad
jnp
xorl
les
aas
or
bound
pusha
insl
rcl
push
mov
xchg
fidivs
stos
inc
icebp
es
and
adc
xchg
gs
sbb
in
jmp
cmp
out
pop
add
cmp
push
icebp
sub
pop
xchg
add
je
divl
xchg
adc
mov
lret
jno
test
mov
dec
clc
test
outsl
test
subl
add
xchg
bound
mov
cs
jns
mov
stc
sahf
xchg
test
adc
push
scas
fisttps
xchg
inc
in
mov
add
xchg
js
scas
jmp
data16
sbb
pop
jl
sarl
lahf
imull
xor
lds
movsl
mov
mov
dec
jo
out
fisttpll
nop
jne
or
fnsave
inc
out
out
pushf
sub
clc
addr16
lock
roll
out
push
dec
lahf
add
dec
cmp
push
add
ret
enter
scas
cmp
jl
lock
cmc
mov
adc
push
cld
into
aas
int3
cmp
sub
movsb
int3
adc
pop
adc
sbb
aad
or
nop
rcrl
mov
jnp
stos
xor
jle
cld
push
jp
inc
xor
cli
sub
xchg
pop
jecxz
push
je
cld
cmp
mov
aad
inc
push
mov
fcmovb
cli
cmpsl
call
and
pop
iret
aad
jne
or
push
sbbb
in
aas
lds
imul
add
aam
mov
mov
shrl
in
insb
insb
jne
inc
js
and
rol
add
push
negl
mov
bound
mov
cld
xchg
bnd
mov
js
fcmovnu
push
dec
sub
and
or
push
fnstsw
rolb
inc
xor
jecxz
in
test
idivl
fadds
jne
pop
mov
inc
mov
add
in
push
sub
test
inc
push
insl
js
out
fisubs
push
cmp
mov
pop
or
loop
ficoms
pushf
xchg
fwait
das
ss
movsb
loopne
xchg
or
dec
aas
imul
cmp
cmp
repz
test
xchg
cmp
mov
shl
out
or
push
push
adc
jecxz
xor
fwait
js
rcrb
cli
pop
adc
in
in
inc
imul
mov
cltd
repz
out
test
inc
push
or
cmpsb
push
daa
push
inc
bound
mov
mov
sub
dec
neg
sbb
test
mov
inc
push
fidivl
cmp
inc
pop
adc
mov
hlt
add
adc
pop
in
pop
adc
movsl
hlt
cmp
ljmp
bound
test
lret
insl
fldenv
mov
cmp
push
dec
pop
jo
mov
pop
hlt
ja
scas
sub
fisubl
mov
pop
mov
sub
addl
xchg
imul
xchg
pop
test
loop
push
or
js
sub
mov
das
xor
pop
jge
mov
pop
mov
dec
mov
and
dec
inc
fbld
cmc
sub
cmp
push
andb
dec
xchg
mov
movsb
xor
mov
add
pop
stc
mov
ja
mov
cltd
or
cmp
pop
or
enter
jge
iret
lahf
jmp
push
pushf
int
and
xchg
dec
pop
dec
jns
addr16
test
or
daa
and
cmpb
dec
mov
shrl
mov
dec
int
cmp
adc
and
movsb
enter
or
xchg
add
aas
setbe
push
push
test
subb
dec
mov
xchg
mov
data16
push
out
leave
add
xor
aad
ja
icebp
les
les
sbb
push
movsl
jg
or
out
test
add
xchg
xor
fsubrl
jno
scas
pop
or
jo
loop
inc
push
pushf
mov
cmp
fisttpll
xor
push
sub
jnp
js
cs
adc
inc
fwait
mov
pop
and
jnp
outsl
cmp
mov
xchg
adcl
stos
sti
push
pop
mov
mov
out
popa
lea
dec
push
or
enter
scas
jmp
hlt
push
mov
push
pop
lock
sub
mov
cmp
fs
les
or
pop
cmpl
inc
movsb
js
insl
lds
xor
test
jnp
cmpsb
push
fidivl
mov
lods
sub
into
arpl
call
cmpsb
loope
mov
xchg
rcll
int3
mov
fs
sbb
shlb
inc
repz
lahf
and
gs
jmp
addr16
xchg
pop
mov
orl
fidivs
or
hlt
pop
xchg
pushf
fwait
movsb
xlat
lods
push
clc
clc
popa
les
es
xor
rorb
mul
sbb
fwait
ljmp
popa
jmp
cs
sarl
adc
jb
enter
cmp
push
cmc
inc
push
xor
pop
enter
push
jp
rolb
scas
mov
dec
cmp
popa
fwait
push
mov
filds
sub
push
fstps
and
sbb
sbb
push
mov
test
push
xchg
ret
cmp
es
movsb
dec
das
enter
arpl
cmpsl
or
xchg
cmp
push
xlat
jbe
pop
cmpsl
out
push
jb
fsubr
cmpl
mov
stos
lahf
mov
sbb
nop
adc
mov
addb
mov
and
cmpsl
and
and
sub
daa
jnp
jnp
stos
sbb
add
sbb
pop
sbb
xor
cmpsl
mov
ret
push
sbb
inc
lods
lods
lahf
adc
cltd
xchg
add
push
ds
sti
xor
ljmp
inc
inc
lea
dec
je
sbb
out
add
jg
push
in
out
push
jle
push
or
mov
xchg
scas
sub
arpl
fimuls
sub
lret
je
or
add
std
and
or
mov
sbb
mov
inc
adc
mov
aas
add
mov
sub
push
jnp
adc
enter
test
es
mov
int3
pop
and
jmp
shll
mov
push
mov
call
sub
sbb
cmp
mov
rcrb
xchg
shl
stc
rcrb
mov
outsl
push
arpl
pusha
or
cmp
cmp
cmp
xchg
jg
cmpsl
cmp
mov
shlb
insb
jg
pop
in
jae
or
repz
cwtl
outsl
push
iret
and
enter
xchg
mov
cmp
pop
push
cmp
cwtl
out
mov
or
or
gs
cmc
pop
pusha
mov
pop
cmp
aad
mov
add
bound
xor
push
add
and
loop
in
pop
mov
mov
add
js
sar
sbb
sub
lea
ljmp
lock
inc
les
cmpsl
pusha
jp
hlt
lods
inc
shlb
jne
in
mov
mov
ret
aas
addr16
add
popa
aaa
imul
sub
jl
lods
dec
mov
sahf
stos
push
xchg
and
fistpl
negb
das
shrl
loopne
xchg
cmp
xchg
xor
imul
xor
aas
jnp,pn
push
pop
lods
jmp
ljmpw
shlb
or
cltd
jbe
or
add
loopne
cmp
sbb
punpckhwd
mov
jb
out
jp
jns
cmpsl
mov
inc
jge
adc
sub
push
scas
and
mov
jb
fwait
cmc
lret
je
cli
js
mov
pop
adc
aas
push
test
addr16
adc
les
mov
rclb
lcall
bnd
inc
or
mov
xchg
push
pop
sub
push
push
or
inc
dec
jl
mov
lea
ror
test
add
adcl
cli
inc
jg
push
ret
sahf
sub
adc
test
add
addl
jo
jnp
sahf
jnp
sub
cli
in
lea
xchg
or
or
jg
mov
cltd
mov
fcomps
pop
pop
and
leave
rcr
xchg
test
repz
jne
mov
imul
arpl
pusha
data16
push
lea
push
xor
jo
xlat
stos
ja
popa
or
movsl
out
enter
push
lcall
and
adc
jb
pop
sub
and
pop
loop
jno
mov
push
add
pop
xor
je
cld
mov
jb
int3
rorl
or
push
call
xor
movsl
pop
cmp
ffree
xchg
stos
mov
cmpsb
jg
cmpsb
xchg
push
scas
mov
fwait
pop
dec
dec
pushf
pusha
cmpb
sub
inc
imul
dec
dec
cltd
scas
cmp
stos
push
sub
pusha
call
mov
bound
pusha
add
iret
scas
jmp
out
pop
push
shll
lock
push
stos
lret
and
fisubs
push
dec
dec
in
cmp
sub
repnz
dec
inc
out
andb
push
lcall
dec
ret
and
xorb
xlat
ret
imul
cmc
rorl
ljmp
xchg
stos
enter
mov
ret
inc
test
mov
pop
movsl
or
das
push
stos
lods
xor
adc
jmp
adc
sub
mov
add
adc
sub
neg
mov
inc
rolb
leave
testb
add
cmc
xlat
loope
sub
mov
call
add
jno
dec
fbstp
andb
in
aad
movsb
int
xor
pop
mul
leave
pop
mov
out
add
push
out
xchg
pop
cmp
insb
push
shl
dec
sub
dec
push
jae
push
mov
inc
sahf
jmp
sbb
xchg
pop
xchg
aas
outsb
jne
pusha
stos
mov
test
clc
hlt
daa
sbb
add
popf
mov
fmul
je
stos
cmp
pop
jne
mov
mov
aad
negl
mov
into
mov
js
push
mov
std
push
mov
mov
ja
addb
add
jae
sbb
dec
addb
fidivrl
in
call
pop
popf
mov
jp
mov
push
push
pop
loope
pop
mov
sbb
xchg
inc
pop
repnz
push
fstps
dec
inc
and
sbb
stos
addr16
into
sbb
cmp
mov
add
jno
jmp
adc
push
je
jecxz
dec
aam
cmp
inc
outsl
hlt
out
movsb
or
aam
mov
xor
push
fs
movb
rolw
cmpsb
adc
mov
or
mov
mov
inc
pop
jle
aad
push
and
dec
ljmp
or
fmuls
andb
inc
fdivrs
jp
scas
shlb
notb
outsb
push
aas
dec
adcb
aad
sbb
xor
test
test
sbb
mov
pop
add
and
mov
mov
xchg
jbe
and
int
and
les
adc
xchg
not
xor
pop
adc
inc
add
lea
add
jl
sbb
out
xor
xor
cli
rorb
pop
sub
sbb
shrb
mov
xchg
add
loop
call
test
icebp
pop
imul
std
mov
popf
addr16
dec
fwait
out
xchg
pop
mov
ja
dec
dec
movb
outsb
adc
lea
sahf
loop
shlb
xor
xor
ret
push
xlat
cld
mov
push
es
or
ret
mov
add
jbe
adc
stos
scas
push
insb
lods
xchg
addr16
xchg
or
out
xor
daa
scas
pop
xor
jp
call
dec
arpl
push
jge
mov
and
xchg
out
hlt
xchg
aas
xorl
xor
sub
jmp
mov
rcrl
mov
pop
or
jmp
or
pop
mov
cltd
call
fstl
lret
mov
aam
mov
jge
sarl
inc
jne
push
test
mov
and
dec
aas
pop
pop
loopne
cmp
push
fidivs
cmp
pop
mov
lds
mov
mov
push
adc
push
jo
sub
mov
and
outsl
xchg
out
sbb
outsb
sbb
enter
test
inc
pop
inc
test
xor
lahf
and
dec
adc
or
out
xchg
arpl
sahf
ljmp
pusha
test
xor
and
roll
ja
loopne
and
in
mov
ss
arpl
psubsw
ljmp
js
jp
movl
mov
arpl
mov
ret
daa
xor
adc
and
pop
adc
fiadds
mov
ret
cmpsl
in
and
pop
push
xchg
cld
xor
xchg
mov
adc
sbb
fiaddl
xchg
xor
and
add
int
adc
repz
push
lods
cmp
mov
ficomps
fs
pop
or
nop
std
jb
cltd
push
jp
imul
clc
into
pusha
xor
or
in
xchg
add
fldt
adc
sub
jge
jbe
fadd
add
cld
push
imul
mov
fldenv
aam
sbb
push
xchg
stos
fstps
rclb
scas
lahf
outsb
push
pop
jmp
in
sub
xchg
or
or
push
cmp
adc
mov
stos
in
out
xchg
in
mov
cmp
mov
push
sub
mov
lods
jp
loopne
out
out
and
push
add
in
testl
inc
fimull
and
pop
inc
dec
mov
push
repnz
test
push
bound
scas
adc
pop
stc
jmp
mov
aas
cmp
mov
push
repz
dec
rcll
addr16
mov
outsl
push
xor
pop
pop
push
jnp
pop
jb
xor
adc
loope
jge
adc
fisubl
es
nop
dec
jbe
imul
or
andl
dec
xor
add
neg
aaa
stc
sbb
mov
add
jl
mov
dec
ljmp
mov
fwait
int3
inc
add
in
in
fwait
lods
jo
xlat
add
jae
xchg
inc
fwait
outsb
or
jne
out
fisubl
in
pop
xor
xchg
sbb
jo
movntq
push
popa
or
loop
adc
mov
add
rcrl
out
call
pop
out
add
int
mov
fcmovne
xchg
mov
inc
stos
cwtl
and
shlb
or
mov
adc
mov
outsb
jle
clc
sbb
jmp
jae
mov
jp
fidivs
shrl
push
xchg
jb
cmp
or
sbb
enter
mov
das
add
cmpsl
xchg
cmp
xchg
scas
jne
andl
push
js
dec
fimull
cld
jae
fucomi
jmp
sahf
dec
mov
cmp
push
xchg
or
out
inc
inc
push
or
jl
addr16
inc
cmp
add
ljmp
fnstenv
dec
cmc
aam
mov
popf
and
push
mov
lahf
xchg
mov
jl
mov
mov
in
rcrl
push
push
jp
data16
mov
sub
or
adc
lcall
adcb
insl
cmp
xor
push
call
stos
mov
xor
into
inc
movsb
push
sub
loope
pop
xchg
and
dec
test
int3
cmp
rolb
jbe
jle
push
push
fistps
pop
ficoml
lods
cwtl
out
jecxz
test
pusha
arpl
les
pop
insb
fcompl
test
adc
pop
jecxz
jno
xchg
mov
push
sbb
xor
xor
mov
int3
in
sbb
es
push
and
xchg
push
out
and
mov
xchg
jne
mov
jb
push
pushw
mov
jno
sbb
push
pushf
push
fcompl
xchg
push
pop
sti
addr16
jl
cwtl
sub
xor
push
pop
adc
adc
test
sbb
sbb
push
add
popa
mov
cwtl
mov
cmpsb
std
xor
add
ljmp
xchg
xchg
pop
adc
inc
pop
lret
sti
cmpl
pop
xor
push
push
xor
outsb
mov
xor
lds
cld
push
shr
popa
xchg
fimuls
fdivp
mov
stos
xchg
jne
gs
shr
je
mov
jno
inc
xchg
scas
shrl
das
shrl
mov
scas
setnp
outsb
in
sbb
xchg
movsb
lahf
mov
jp
xor
pop
movb
shrl
pop
and
xchg
and
stos
or
cmc
fdivl
push
jo,pn
fstl
mov
and
add
bound
and
push
dec
push
add
mov
jns
mov
lahf
xor
jb
mov
stc
add
dec
jle
xlat
mov
out
popl
jae
ss
cmpsb
ja
ja
push
dec
imul
adc
and
mov
push
adc
ja
pop
adc
imul
out
das
out
in
cmpl
add
push
cmp
nop
negb
and
test
adc
addl
jbe,pt
sub
shlb
cmp
xchg
jp
nop
jo
sbb
int
and
repnz
jl
adc
imul
push
in
addb
jg
fbld
cli
xchg
lahf
xchg
push
fadds
shlb
pop
mov
std
shl
xchg
pop
outsl
pop
add
clc
into
sub
scas
js
mov
sbbl
mov
or
sbb
mov
push
pop
fnsave
add
loope
jae,pn
negb
scas
push
inc
xor
stc
out
test
and
std
and
adc
mov
cmpsl
das
inc
testb
ljmp
xchg
inc
stos
xchg
ficoml
cmp
xchg
sbb
lahf
lcall
push
cltd
dec
push
pop
xchg
pop
data16
mov
push
andl
pop
shlb
lahf
inc
popf
scas
mov
scas
jo
cmp
jb
xchg
and
or
int3
test
xor
mov
push
mov
inc
sub
repz
xchg
stos
mov
cmpb
sbb
adc
mov
scas
or
xchg
stos
xor
add
pop
dec
hlt
cpuid
cld
in
sbb
sub
call
cs
loop
aaa
dec
inc
leave
js
adc
sbbl
lock
insl
imul
fiaddl
xchg
xor
push
cltd
or
sbb
push
std
loop
ret
push
mov
xor
std
mov
xchg
mov
ret
mov
add
or
mov
jg
push
mov
add
mov
out
popf
fcmovbe
shrl
hlt
shlb
jle
insb
dec
pop
ja
inc
pop
dec
xorl
insl
push
enter
mov
mov
push
mov
lods
sub
mov
add
mov
cmc
pop
gs
jmp
pop
stos
mov
sub
lock
imul
outsb
mov
outsl
jecxz
ja
std
jl
out
dec
stos
ljmp
sub
pop
inc
push
aam
add
inc
js
into
add
and
fsubrs
loope
jl
adc
mov
and
out
insb
das
fwait
sbbb
cmp
inc
mov
jne
lods
sbb
xchg
xchg
and
fiaddl
and
insl
or
cmp
mov
rcr
pop
insb
mov
dec
inc
jecxz
pusha
pop
imul
mov
pop
lret
in
pop
cmpsl
xor
adc
jge
in
mov
sub
imul
fisubs
test
dec
jmp
add
push
test
mul
rclb
fs
lret
ss
out
lret
and
lds
fidivl
scas
push
jmp
je
mov
inc
fs
xor
shrb
nop
gs
add
adc
sub
pop
mov
call
pusha
iret
xchg
push
sbb
das
lcall
fistps
cmpsl
xchg
hlt
std
cmp
stos
jl
or
dec
out
jne
fsub
sbb
pop
mov
mov
xor
sub
fisttps
push
add
cmp
popa
xchg
filds
sbb
pusha
mov
movsl
inc
xchg
lret
pushf
jp
mov
mov
in
sbb
dec
cmp
movsl
push
cmp
sti
push
mov
xchg
jnp
pop
lahf
cmpsl
les
cmp
inc
in
sbb
mov
fcompl
mov
nop
dec
and
in
outsb
xchg
mov
pop
xchg
loope
xlat
mov
ret
pop
jae
push
jo
lahf
shlb
movsl
push
cltd
out
out
stos
ss
mov
adc
loope
push
dec
sub
leave
lea
and
std
and
mov
dec
lahf
mov
shlb
dec
dec
sbb
fnstsw
inc
int3
sbb
mov
cmpsl
js
mov
in
pop
loope
inc
ss
loope
push
cld
loop
xchg
outsb
inc
xor
or
jge
adc
add
cs
sbb
or
dec
scas
lret
stos
mov
cmp
test
mov
mov
fsubl
mov
ja
js
repz
sti
and
pushf
jmp
xchg
loopne
pop
pop
dec
popf
subl
and
push
cmp
cmpsb
rcrl
outsl
inc
sub
push
mov
sub
cwtl
sbb
jp
pop
imul
addl
mov
dec
testl
pop
push
pop
aaa
xor
loopne
push
jl
mov
push
sahf
popf
sub
dec
das
xor
sub
jae
push
or
or
pop
push
add
shrl
push
leave
pop
and
test
inc
and
sarb
ljmp
fidivs
push
icebp
in
cmc
push
aam
sbb
sbb
xlat
inc
movsb
xchg
icebp
xlat
xor
or
inc
jge
loopne
mov
push
mov
xor
rcll
jmp
xorl
cmpsl
inc
gs
dec
andb
inc
pushf
adc
dec
or
push
cli
fs
je
jg
lret
inc
fcmovbe
mov
push
xorb
adcl
mov
out
sbb
mov
mov
push
into
xchg
pop
out
dec
mov
push
jns
sub
inc
adc
dec
pop
popl
inc
xchg
loopne
mov
mov
mov
jecxz
loope
and
pop
mov
adc
adc
mov
add
leave
sub
add
cltd
leave
in
pop
nop
mov
arpl
out
lcall
aaa
fs
mov
pop
fisttpl
mov
add
cmp
gs
inc
in
movl
sbb
push
adc
pusha
jne
test
jecxz
sarl
aas
cmp
xlat
lds
sub
fcoml
push
adc
int
outsb
pop
pop
jle
cwtl
push
aad
scas
clc
loopne
iret
push
mov
rcll
add
mov
mov
insb
in
iret
inc
nop
insb
adc
add
push
mov
sbb
xchg
ja
ljmp
jge
and
roll
popf
fwait
adc
jno
cltd
outsl
pusha
xlat
lods
xchg
mov
xchg
loopne
mov
xor
ret
into
jns
sub
dec
js
les
jbe
jne
mov
jne
jo
push
mov
mov
loopne
fldln2
jb
arpl
lret
and
js
xchg
push
xchg
jp
add
jmp
fisubrl
scas
fdivrs
out
inc
out
adc
add
and
hlt
hlt
int
pop
testb
pushf
aas
fbld
pop
fdivs
addr16
ficompl
mov
xor
xchg
ljmp
push
push
mov
mov
pop
out
push
addl
sqrtps
push
sub
adcl
xchg
xor
jp
loopne
out
mov
insl
pop
or
leave
mov
int
cltd
rorb
fs
xchg
add
fisubl
imul
mov
outsl
cltd
push
out
js
mov
jae
dec
das
fisttpll
cli
punpcklbw
push
jbe
popf
mov
aad
shrl
xor
or
xchg
jb
cmp
fdivs
into
ss
loope
iret
aam
movsb
xchg
stos
lcall
sbb
cmp
pop
add
mov
cmp
imul
scas
das
or
bound
mov
jo
mov
xor
and
add
mov
fwait
lea
lahf
mov
mov
adc
mov
pop
rorb
jb
aad
inc
stos
cli
rolb
popf
sub
outsb
pop
clc
pop
mov
pop
xchg
cltd
xlat
xor
test
pop
push
cmp
adc
aam
iret
xchg
cli
jge
popa
push
out
push
cwtl
xor
hlt
aam
bound
jno
jl
imul
les
sarl
pusha
arpl
add
gs
sub
int3
pushf
ja
cmp
lahf
imul
mov
mov
inc
popa
int
out
mov
jg
mov
jmp
dec
jne
xor
fs
jle
in
sbb
loop
fisubrl
cmp
add
pusha
add
loopne
sbb
xor
mov
imul
aas
pop
sti
adc
jo
cmp
add
mov
call
hlt
imul
stos
pop
lahf
ja
sbb
addr16
cmp
je
shlb
mov
into
or
mov
das
sub
and
mov
addr16
mov
int
mov
xchg
mov
mov
lods
push
imul
call
ret
ret
and
test
ss
cmp
and
pop
aam
inc
lret
aas
in
pop
lcall
test
jge
sub
ljmp
enter
add
mov
movsl
push
mov
outsl
dec
ja
push
mov
mov
or
in
mov
push
mov
leave
sub
dec
sbb
xchg
cmp
mov
fbld
je
scas
adc
in
jo
imul
jbe
out
fsub
dec
jl
and
ror
and
adc
mov
imul
test
shl
addr16
mov
adc
ret
mov
rcll
icebp
mov
push
pop
negl
pusha
xor
mov
jl
dec
xchg
cmpsl
jnp
push
dec
jge
sub
loope
mov
adc
popa
cwtl
outsb
or
enter
xchg
in
cmp
xchg
sub
add
jge
leave
pop
dec
cltd
jno
dec
nop
lahf
movsl
pop
jecxz
gs
dec
inc
in
fcompl
aad
pop
daa
in
sub
hlt
dec
cwtl
decb
lret
dec
or
out
gs
insl
sarl
xchg
faddl
imul
adc
cmp
adc
pop
icebp
jnp
ret
or
adc
sub
mov
jne
aas
mov
adc
adc
mov
mov
aaa
jg
and
ja
das
mov
lahf
dec
push
lcall
cmp
jo
push
jp
and
or
xchg
arpl
mov
jmp
iret
add
cwtl
negl
js
jge
fnsave
outsl
cmc
fbstp
sbb
xchg
mov
mov
dec
or
and
cmp
sub
lret
in
mov
lock
imul
dec
gs
mov
dec
cs
inc
dec
and
xchg
lock
mov
sahf
mov
jecxz
xchg
das
lahf
in
lods
inc
jnp
or
enter
out
int3
jno
xor
add
cwtl
stos
mov
xchg
and
push
inc
and
add
cmp
cmpsl
iret
mov
hlt
jns
jg,pn
jbe
mov
inc
lret
cwtl
es
test
jecxz
test
adc
mov
lea
xchg
stos
mov
aaa
jae
setns
xor
xchg
jmp
jle
add
int3
jle
ret
int3
js
cmpsl
jo
mov
test
xor
and
hlt
fildl
add
imul
rorl
js
into
mov
adc
mov
dec
mov
in
mov
mov
adc
addr16
jo
rcr
popa
outsb
frstor
cmpsb
push
mov
push
inc
sub
icebp
shr
loope
out
cmp
xor
xor
inc
fldl
pusha
mov
movsb
cli
rcll
lret
inc
inc
xlat
in
pop
test
xchg
jns
in
call
mov
jne
inc
push
fbstp
cmp
in
fdivr
mov
popa
push
sub
std
jmp
repz
adc
cmc
xor
jge
out
lods
test
lods
test
adc
sarl
xor
cmp
hlt
cmpsb
es
call
int
cmc
mov
loopne
sub
test
ss
sub
in
repz
call
inc
dec
dec
adc
pop
data16
jno
cmpsb
mov
ret
leave
inc
xchg
and
repnz
lock
loopne
push
int
ret
add
sub
cmpsl
or
test
aad
pusha
or
mov
jnp
mov
stc
test
mov
repz
inc
mov
dec
and
pop
dec
sub
mov
cmp
sbb
fstpl
mov
iret
pushf
cmpsb
fcmovu
js
xor
mov
dec
call
ret
push
and
mov
dec
ret
and
aaa
lds
fcmovbe
push
sbb
jmp
fst
xchg
inc
ret
stc
sub
test
mov
mov
out
sbb
adc
sbb
in
inc
jge
add
js
ss
fsubl
pop
fs
iret
pop
sub
push
outsl
or
mov
and
sbb
jle
fisubs
call
and
adcb
mov
dec
pop
push
and
sub
cld
mov
inc
jae
jle
lock
inc
mov
imul
mov
jge
bound
sub
sti
cmc
jmp
sbb
add
dec
aaa
cmp
xorl
les
xlat
cmc
inc
mov
mov
insl
inc
mov
js
push
jbe
mov
and
imul
cmp
push
dec
xchg
sbb
sub
add
cmp
sbb
aaa
test
inc
adc
lea
push
adc
mov
bound
stos
call
pop
fcmovu
adc
and
lret
and
push
in
inc
inc
aad
in
in
mov
iret
ljmp
xor
in
out
fincstp
xor
push
int3
push
add
scas
inc
push
rcll
stos
push
jae
out
xlat
sub
inc
mov
xchg
push
fisttpl
dec
push
pop
jbe
or
loope
xchg
popf
pop
dec
cltd
test
lods
mov
sub
pcmpgtw
mov
jge
ret
outsl
jae
or
sbb
imulb
hlt
cmp
mov
imul
cs
mov
pop
xchg
add
or
call
repz
jnp
rcr
pop
push
dec
push
xchg
daa
xchg
fwait
lcall
mov
roll
iret
push
xchg
push
dec
repnz
das
and
loopne
daa
sub
pop
push
dec
jmp
xor
jmp
push
adc
mov
in
push
jmp
mov
movsl
pushf
inc
push
cwtl
sub
shll
sbb
lock
addr16
loope
not
jno
or
jo
xchg
getsec
sbb
rolb
adc
inc
mov
or
xor
mov
lods
daa
data16
mov
and
pop
jbe
lea
push
cs
stos
push
sbb
mov
pop
test
and
arpl
leave
jne
das
mov
xchg
les
fadd
mov
sub
xlat
mov
iret
ds
leave
lahf
in
lea
add
inc
inc
sbb
and
mov
mov
xor
cmp
out
pop
mov
shrb
or
lods
adc
fidivl
fldenv
fadd
enter
enter
push
xlat
pusha
or
sbbl
mov
cs
movsl
cltd
pop
pop
loope
mov
imul
xor
loopne
test
sbb
lods
ficompl
sbb
out
pop
push
sbb
jmp
in
pop
sbb
mov
jg
dec
mov
gs
push
xchg
daa
jno
sbb
jl
repz
add
xchg
nop
repnz
sbb
xchg
leave
xchg
lods
mov
ja
es
sbb
std
sti
icebp
push
adc
cltd
aas
insb
xor
adc
jne
sbb
sbb
xor
dec
repnz
insl
inc
jo
fs
or
aaa
xor
das
push
inc
pop
js
inc
mov
push
dec
sahf
shrl
fs
sbb
or
loop
lods
movsb
ret
mov
adc
inc
sbb
jg
jno
cs
sbb
std
outsb
push
push
test
mov
dec
dec
test
stos
push
cmp
out
xchg
jo
ficompl
and
mov
xor
lods
int3
into
or
aaa
lcall
pop
dec
jp
mov
lea
cmp
mov
sub
cmp
add
adc
xchg
jo
repz
fsts
in
movsl
mov
lods
and
push
jno
dec
xchg
test
test
jns
dec
mov
repz
fisttps
xor
push
push
pushf
cmp
bound
cmpsb
mov
pop
push
bound
das
and
mov
mov
inc
imul
and
push
in
add
xor
mov
mov
fisubrs
fdivp
inc
or
aaa
aas
xchg
repnz
sarl
pinsrw
jecxz
out
arpl
push
data16
mov
bound
pop
pop
daa
mov
adc
xorl
daa
jge
fwait
jp
aaa
inc
ss
nop
xorb
mov
in
mov
mov
or
sbbl
sub
inc
pop
mov
inc
push
push
mov
arpl
out
xchg
cmp
mov
inc
add
cmp
arpl
sahf
jb
fstpt
dec
mov
enter
insb
xlat
mov
pop
outsb
mov
xor
or
sbb
inc
push
arpl
pop
push
dec
pop
jne
sub
mov
mov
aas
jecxz
arpl
sub
scas
mov
pop
frstor
lret
push
sub
push
pop
shrl
inc
imul
cmc
sbb
cli
dec
jecxz
dec
inc
daa
pop
sub
dec
les
lahf
mov
mov
sbb
ror
or
int
cltd
sub
xlat
ret
push
dec
fldt
inc
fwait
push
repz
push
mov
mov
or
cwtl
inc
mov
pop
loope
mov
rorb
cmp
jae
dec
cld
aam
jl
adc
push
imul
bound
std
mov
mov
push
lds
mov
pusha
imul
out
sub
and
mov
xor
xor
xchg
mov
ss
cmp
push
test
mov
lock
std
arpl
jbe
mov
and
lret
xor
popa
sub
sub
and
and
leave
dec
cmp
push
inc
popa
lods
shlb
sub
jl
popw
dec
mov
mov
das
clc
mov
repnz
fst
lods
dec
iret
pop
mov
sahf
in
jnp
lods
mov
cmp
shrl
sbb
xor
les
lds
pop
mov
dec
pop
enter
loop
xchg
push
xchg
xchg
adc
test
sbb
ret
push
aad
call
sub
pop
nop
je
sub
xchg
dec
clc
mov
cmpsl
out
and
ljmp
and
push
scas
add
clc
lahf
loopne
fdivs
sbb
xor
stos
cs
adc
xor
scas
push
leave
inc
push
notl
and
xchg
xchg
adc
adc
mov
jmp
cld
sbb
xchg
mov
pop
lahf
jo
mov
movsb
jae
xor
outsb
jae
xchg
mov
aas
adc
mov
int3
shl
inc
imul
mov
leave
aaa
pop
inc
bound
test
lea
leave
cmpsb
push
push
mov
addr16
mov
lret
push
insb
scas
xlat
xor
pop
fistpll
cmc
mov
pop
and
sbb
xchg
dec
dec
cmp
out
xchg
push
mov
inc
dec
xor
aaa
pusha
adc
in
loope
jmp
popa
loopne
xor
movsl
cmp
rcrb
mov
repz
aas
int3
and
fisubs
test
hlt
xchg
add
mov
enter
lock
scas
push
in
cmpsl
dec
dec
iret
cmp
push
lods
in
pop
subb
ficompl
cmpsb
pop
mov
pushf
jae
and
jb
sar
xchg
xchg
inc
and
jbe
out
dec
xchg
shrb
mov
ljmp
mov
mov
sub
cmp
lret
sub
push
call
push
cmp
jbe
jmp
mov
mov
stos
addr16
icebp
out
orl
inc
and
sbb
mov
mov
jecxz
stc
cmp
outsb
ja
sbb
and
cmp
aad
fistpl
mov
sarb
dec
jo
mov
fcompl
rolb
xor
or
mov
and
in
sub
cmp
lret
adc
push
stos
add
adc
int3
jno
add
add
in
je
mov
mov
ficomps
aas
or
lods
and
add
inc
imul
jp
inc
and
dec
mov
push
loopne
repnz
push
clc
adc
sbb
pop
mov
pop
sub
push
or
pop
sbb
rcrl
pop
lock
or
dec
test
mov
push
les
or
xchg
jg
dec
push
xchg
jns
lcall
add
pusha
cmpsl
push
testl
aas
div
mov
in
mov
push
std
sbb
shll
imul
in
cmc
jnp
inc
jmp
stc
mov
mov
sbb
das
sahf
pop
jb
inc
jp
rcr
sbb
adc
repz
inc
sub
jno
jnp
pop
shl
setle
es
sbb
loope
lds
rcll
out
dec
push
xor
mov
jb
and
leave
repz
cltd
adcb
adcb
mov
xor
mov
and
lods
ss
cmp
cmc
fcmove
push
jmp
scas
stc
pop
push
leave
mov
or
out
subl
mov
cmp
jmp
rorb
jnp
cltd
or
cmpsb
popf
cmp
lret
dec
fdivrl
or
push
adc
call
imul
inc
mov
popf
jmp
stc
and
andb
nop
xchg
and
jb
in
ja
jns
jo
push
mov
jns
xchg
inc
add
jne
cmp
pop
je
jae
push
xor
and
bswap
ss
out
fildll
adc
pop
jo
movsb
inc
jl
stos
jb
cmpsb
xor
lcall
aas
mov
imulb
xor
ror
mov
xor
jle
loopne
pop
mov
and
cmp
jae
push
lods
int
int
ljmp
inc
mov
mov
out
arpl
ret
pop
push
stos
mov
add
push
loop
add
inc
das
pop
and
incl
imul
je
dec
imull
ret
movsl
xchg
or
jle
ret
test
sub
jl
es
xchg
in
jo
shr
fcomi
ret
mov
sti
xchg
sub
lea
sub
add
fs
movsl
mov
test
lret
fbld
lods
sub
push
stos
cmp
icebp
cwtl
cmpsb
les
cmp
cmpb
pop
inc
and
jle
cmp
arpl
mov
and
iret
xor
mov
mov
mov
ret
lahf
cmp
mov
popl
or
out
push
push
sbb
orb
movsb
fbld
xchg
jo
lahf
xchg
cs
popf
mov
test
push
add
fmul
lock
dec
add
filds
mov
sub
adc
lds
in
xor
gs
jp
mov
bound
sub
inc
jb
push
inc
popf
call
xor
inc
mov
std
fwait
repnz
cmp
adc
mov
ret
sub
adc
js
aam
cmp
loopne
out
nop
jg
and
cwtl
cmp
push
dec
xchg
dec
sbb
int
xchg
loopne
sub
shl
popa
inc
sarl
add
cmp
dec
ret
sbb
lcall
test
bound
fdivr
movsb
jbe
fs
icebp
out
and
repnz
popf
inc
fisubs
cmp
ret
mov
xor
mov
mov
add
mov
lahf
add
pop
stc
nop
jb
addr16
pop
mov
pop
sti
or
movsl
in
sar
lret
jecxz
adc
fs
jo
mov
jne
sbb
sti
in
mov
es
xchg
pop
xor
mov
and
cmpsl
insl
lret
pop
mov
and
ds
ljmp
outsb
push
xor
dec
and
jns
imul
mov
loop
cmpsb
mov
cmp
xchg
subb
not
xor
xchg
mov
mov
jno
fwait
in
inc
xor
xchg
daa
xor
mov
mov
stc
shrl
dec
nop
insl
enter
les
mov
xchg
xchg
aaa
or
insb
out
into
pop
addr16
mov
push
cmp
dec
lcall
xchg
andl
or
or
mov
mov
not
jno
and
sub
xchg
pop
ret
shlb
add
jns
push
gs
mov
lds
push
push
cmp
push
mov
mov
inc
addr16
add
add
loopne
test
in
adc
data16
jae
inc
rolb
cmpsl
andps
call
jbe
cld
mov
jge
fwait
outsl
xlat
into
mov
call
mov
sahf
xor
js
mov
into
xchg
je
mov
push
iret
aam
jne
popa
cmp
gs
push
jle
push
xchg
out
imul
mov
inc
popa
daa
and
pop
mov
sbbl
aas
push
pop
movsb
sarl
mov
icebp
push
and
shrl
testb
incl
adc
add
xchg
mov
inc
ss
insl
ds
sbb
cmp
lret
and
ljmp
pop
popa
sbb
test
mov
cld
fiadds
out
cmpsl
push
push
mov
mov
fldln2
testb
testl
jne
in
jbe
pop
dec
pop
ljmp
mov
push
push
adc
mov
mov
pop
mov
sub
push
pop
in
int
js
movl
sbbb
ret
enter
orl
pop
lahf
sbbb
loopne
imul
lods
mov
iret
sbb
and
sti
lods
mov
push
or
repnz
pop
clc
loope
lahf
dec
roll
pusha
jmp
push
aad
pop
test
push
cmp
add
sbb
jo
inc
xchg
outsb
sbb
sahf
inc
pop
mov
mov
loop
aam
adc
and
cmc
notl
inc
push
cs
addb
mov
scas
sbb
imul
dec
mov
out
std
adc
jle
fwait
out
dec
inc
stos
xor
cmp
in
setns
inc
movsl
jmp
call
jbe
push
adc
loopne
mov
jmp
out
pop
fwait
xor
inc
cmp
daa
mov
fs
pop
cld
popf
push
daa
pushf
dec
shll
jl
lret
mov
test
xor
dec
sbb
sarl
mov
rcrb
lahf
dec
push
sbb
daa
add
out
or
dec
sub
inc
loopne
subb
mov
repz
js
ret
jle
mov
push
jg
xor
mov
test
aas
jnp
ds
xor
pop
leave
pop
mov
push
sbb
cmp
cli
mov
sarb
sahf
insl
pusha
imul
jge
lods
mov
mov
subl
jae
jg
or
xchg
insl
or
aam
dec
stos
repnz
cmp
pop
xor
fadds
lods
sti
xorb
icebp
mov
or
pop
mov
out
xchg
mov
lret
sub
and
inc
loop
insb
cltd
lcall
inc
roll
lods
lcall
roll
in
sub
cs
mov
jae
jge
push
scas
movb
dec
mov
push
pop
aad
mov
insl
outsb
ret
nop
test
xchg
sbb
mov
repz
pop
std
arpl
jp
push
jo
fs
xchg
outsl
call
sti
int3
push
xlat
test
pop
pop
sbb
shll
rolb
sbb
jmp
fcom
adc
out
dec
repz
daa
sub
std
test
subb
insb
sbb
sar
dec
jecxz
ret
lods
lahf
jns
dec
adc
mov
out
cli
imul
scas
js
and
or
jmp
movsl
push
adc
stos
call
dec
cmpsb
add
lock
sbb
dec
lea
xor
and
clc
mulb
enter
pop
inc
stos
cmp
hlt
js
lock
insb
jp
rclb
movb
popa
xor
mov
leave
movsb
mov
push
or
lret
rolb
sbbl
not
mov
mov
movsl
lea
mov
lock
adc
jns
xchg
lcall
lds
jg
jns
adcb
push
enter
pop
cwtl
lods
push
mov
push
xor
and
test
popf
and
cs
jne
fisubs
js
in
in
add
xchg
push
xchg
out
sub
popf
xorl
loope
jmp
xchg
or
mov
lds
sahf
cli
jp
mov
pop
adcb
mov
or
xchg
jmp
cmpsl
mov
cmp
ss
testl
nop
sti
and
lahf
or
push
sub
xchg
or
xor
gs
into
pushf
inc
adc
lods
orl
cld
push
fucomi
lret
push
mov
sub
xchg
mov
flds
das
add
out
pop
je
cli
pop
out
rorl
sbb
in
cld
leave
iret
movsb
mov
xor
inc
sbb
mov
imul
scas
pop
add
lds
roll
shl
lock
fdivrl
push
rol
mov
int
stos
shlb
pop
mov
mov
test
pop
push
add
frstor
or
mov
sub
fcoms
into
adc
cmpsl
mov
pop
mov
stos
sub
mov
push
movsb
cmpl
clc
lret
mov
loopne
out
adc
add
loopne
cmpsb
rcl
lods
sarb
test
fwait
sbb
sbb
mov
insl
push
sahf
lock
loopne
orb
lds
and
les
imul
fld
or
in
es
jnp
and
xchg
and
push
clc
ret
ficomps
outsl
dec
or
mov
and
mov
dec
in
xor
enter
lods
inc
mov
mov
mov
popa
enter
sub
std
pop
mov
adc
cmpsb
push
out
ljmp
sbb
sub
sbb
sub
scas
sbb
push
imull
add
ret
lret
jge
inc
mov
and
daa
xchg
pop
and
ja
test
pop
pop
movsb
mov
xor
lcall
sbb
bound
mov
in
mov
imul
push
mov
loopne
adc
fidivrs
sahf
xlat
jne
dec
adc
add
sub
mov
lds
enter
fdivp
xor
mov
add
sbb
push
lods
fs
out
adc
andl
jb
sti
cmp
xlat
sbb
xlat
dec
pop
in
mov
addr16
out
lcall
inc
xor
cli
cmpsl
add
add
mov
adc
mov
mov
or
mov
bnd
jae
aaa
sbb
cltd
test
mov
repnz
pop
ja
dec
push
push
out
shrl
dec
mov
dec
pop
push
stc
hlt
sahf
add
inc
scas
dec
xor
cmp
decb
push
sub
in
fstps
inc
sub
mov
inc
jae
out
sub
adc
jne
pop
lods
adc
inc
sbb
pop
fsubrp
push
pushf
ds
mov
outsl
pop
test
lcall
stc
or
mov
inc
mov
mov
xchg
jg
add
push
rolb
push
arpl
insl
mov
inc
enter
fistpl
inc
in
xchg
jl
jle
add
mov
movb
pop
sbb
jns
push
hlt
daa
daa
out
dec
cmp
mov
cmp
jnp
shrb
icebp
imul
shld
add
fcmovnu
mov
fwait
jne
shr
push
push
mov
sbbl
adcl
xor
pop
loop
jl
push
jb
pop
clc
scas
cmp
or
mov
jp
cmp
xchg
mov
mov
or
std
jnp
sbb
bound
mov
test
stos
jg
lcall
leave
enter
sbb
js
cmpsl
and
test
cmpsb
xchg
mov
nop
sbb
xchg
and
fistpll
fisttpl
aad
cwtl
into
mov
and
mov
mov
fsubr
pop
sub
mov
ljmp
cmpsb
subb
ret
fistps
mov
ds
push
pop
in
insb
cwtl
pusha
inc
out
out
xchg
stos
adc
scas
negb
cmc
dec
jnp
dec
insl
ret
or
push
iret
stos
hlt
cs
aam
sub
mov
jmp
hlt
or
out
lock
cmp
repz
xchg
dec
out
psllw
jmp
sbb
xor
pop
inc
sub
sbb
sub
inc
and
sub
in
add
outsl
mov
or
cmp
popf
adc
pop
dec
bound
xor
inc
aaa
lahf
push
fadds
xor
in
flds
mov
jbe
cltd
mov
mov
js
jae
iret
sar
icebp
insb
xchg
inc
pop
xor
mov
negb
sub
dec
lahf
or
jl
dec
test
gs
adc
or
int
and
adc
cmc
gs
popa
push
sub
jne,pn
pop
pop
sub
add
adc
lds
dec
jg
and
dec
push
xor
fs
push
movsb
push
pop
aas
aad
arpl
mov
mov
addr16
sarb
mov
in
jno
pop
xchg
mov
mov
or
cmp
mov
or
imul
aaa
push
test
jge
in
lret
cs
movsb
jmp
outsl
es
sub
pushf
ret
std
xchg
cwtl
xor
xor
xchg
mov
sub
mov
cmp
inc
inc
fisubs
outsb
fwait
add
loopne
in
test
inc
mov
push
inc
pop
dec
imul
int
pop
push
addb
adc
scas
cmc
xchg
pop
fnstcw
shrl
icebp
fneni(8087
loope
clc
ljmp
dec
add
dec
xchg
sbb
fildl
cmpsb
ret
fistpl
fsubrl
test
shlb
push
ja
andb
pop
adc
xor
addr16
je
rol
call
jne
stc
enter
fldl
arpl
subb
push
movsb
test
xchg
popa
or
negl
jb
loop
lock
cmp
push
sub
or
xchg
dec
add
outsb
fdivrl
lods
jmp
push
mov
nop
pushf
int
lret
inc
jle
mov
mov
int3
dec
or
mov
mov
cmpsb
mov
xor
js
lret
rolb
inc
addr16
je
mov
dec
dec
les
std
rcrl
andl
push
or
cmp
in
cmpsb
jg
out
inc
cmpsl
fldl2e
cmp
lea
or
idivb
xchg
push
lods
adc
push
adc
mov
or
mov
inc
xchg
xchg
rorl
adc
loopne
in
rorl
and
iret
sbb
pop
mov
mov
in
test
andl
pop
mov
lods
fidivrl
mov
push
xchg
insl
fnstenv
sbb
sub
jbe
dec
cmp
lods
pop
out
imul
and
mov
sbb
inc
push
stos
adc
xchg
push
cmpsl
sbbb
push
jle
dec
jmp
shl
repnz
lock
in
adc
stos
in
cs
push
dec
dec
int3
orl
jb
jecxz
insl
xor
lcall
push
xor
ds
push
dec
cld
lock
ss
xchg
sub
or
sub
fdivs
nop
lret
dec
andb
push
xchg
dec
jecxz
push
xchg
jge
cmpsb
test
push
mov
dec
shll
cmpsl
out
mov
in
stc
add
in
mov
cmp
mov
pop
test
pop
adc
in
mov
mov
aam
pop
andl
mov
iret
nop
jmp
cli
cmp
sahf
inc
mov
repnz
push
and
enter
movsl
pushf
pop
jns
inc
cmp
pop
sub
test
rorb
clc
out
mov
mov
jg
push
and
xchg
shlb
sbb
xchg
sbb
repz
loope
gs
arpl
scas
or
int
scas
bound
mov
jb
mov
push
mov
cs
stc
xlat
icebp
mov
idivl
in
popf
xchg
cmp
out
int3
movsb
cmp
push
movsb
popf
add
jecxz
sbb
inc
sub
out
lods
xchg
or
test
iret
mov
sti
jg
cmp
scas
stos
pusha
test
sarl
pop
out
mov
or
js
cmp
adc
std
cmpl
cmp
sub
and
fistl
pop
popf
dec
fsub
addl
test
xchg
js
adc
mov
test
stos
into
cmp
sub
mov
xor
int
cmpsb
in
movl
enter
xor
dec
ret
dec
push
outsb
inc
adc
jb
xor
jbe
addr16
cld
mov
insl
repnz
out
xor
popf
fldenv
lret
add
sub
daa
fbld
shrb
push
xchg
push
data16
sbb
std
clc
sbb
insb
js
outsl
lcall
stc
fidivrs
mov
jne
cmp
cltd
jnp
and
pop
js
jg
pop
xchg
xchg
or
test
fists
adc
out
jecxz
inc
pop
xchg
and
inc
jle
add
sahf
bound
sbb
xchg
push
cmp
cwtl
xor
xor
push
xor
imul
test
or
into
push
movsb
cmpsl
sbb
add
add
pop
xchg
or
stc
mov
aam
mov
je
lds
dec
shrb
ds
lahf
adc
mov
push
sbb
push
movb
aaa
cmp
push
mov
cmp
adc
out
scas
fdivrs
sub
mov
xor
mov
xchg
loopne
add
mov
daa
and
dec
jle
cltd
mov
jmp
pop
and
push
jno
loop
aas
adc
gs
fs
mov
bound
mov
cmp
jmp
push
mov
imul
frstor
rorb
clc
jge
movsb
lahf
sub
test
inc
outsl
loopne
pusha
scas
jle
jl
bound
clc
fnstcw
or
sbb
inc
inc
sub
nop
mov
dec
cmp
jbe
inc
pop
sbb
ret
jp
cli
test
adc
push
incb
imul
iret
sub
rcll
call
imulb
fwait
in
aad
pop
scas
xchg
sbb
aaa
in
popf
dec
cmpsb
mov
jb
sbb
pop
push
fsubp
sahf
loop
scas
cmp
lea
inc
mov
sub
ret
or
cli
fdivl
cmc
sbb
pmaxsw
or
ss
imul
sbb
pushf
jns
lds
mov
add
inc
in
fbld
cwtl
ret
push
leave
jg
inc
adc
push
sti
adc
inc
dec
and
cltd
cld
iret
pop
cmp
and
fcoml
loope
testb
cmpsl
mov
stos
push
mov
or
xor
cmp
cmp
test
mov
cmpsb
sbb
adc
dec
dec
movsb
insl
out
jnp
mov
jo
lret
sbb
or
test
push
jecxz
pop
arpl
dec
lea
test
aaa
sbb
and
adc
ret
pop
push
scas
cmc
pop
sti
adc
inc
sbb
fidivrl
into
xor
jge
popa
dec
push
out
mov
les
cmp
lea
lods
mov
fildll
pop
or
cmp
shrb
sbbl
inc
mov
aam
mov
fistpll
cmp
nop
cwtl
call
xor
in
xor
lds
idivb
loope
sbb
cltd
pushf
pop
xchg
imul
cld
adc
adc
loopne
push
fiadds
loopne
cli
scas
pop
add
imul
xchg
jnp
in
lea
pop
lahf
mov
fnstenv
pop
ret
ljmp
ja
jp
and
pop
adc
sub
xor
cwtl
adc
jge
sub
mov
call
inc
lock
inc
xchg
out
ss
test
inc
or
jmp
or
jecxz
out
lock
popa
jo
cld
imul
lcall
xchg
aas
fmulp
gs
or
or
sahf
push
jns
push
pop
sbb
sbb
arpl
or
dec
inc
ds
aaa
lret
addr16
adc
jbe
es
data16
loopne
sbb
sub
sub
pop
mov
in
inc
nop
jne
sub
mov
fsubs
xchg
cld
dec
fwait
cld
out
xchg
sahf
pop
jns
inc
push
repz
dec
pop
loope
pop
or
and
dec
subl
or
out
xchg
mov
push
lret
cmp
pop
adc
ljmp
rol
popf
jge
xor
repz
popa
insl
scas
hlt
xor
pusha
jmp
dec
mov
mov
adc
and
inc
jo
jno
in
lds
js
cmc
push
sub
push
mov
jecxz
adc
aad
fldcw
andl
inc
pop
pop
ret
or
mov
sub
dec
std
or
movsl
idiv
popf
or
push
addl
int
out
jb
jbe
and
cltd
cmc
ret
les
adc
imul
hlt
incb
inc
xchg
bound
mov
icebp
enter
sbb
es
pushf
rolb
adc
mov
jmp
or
sub
adc
std
divl
cmp
xchg
sbb
sub
xor
dec
xchg
jnp
pop
into
mov
cmpsb
and
imul
sbb
loope
adc
in
lret
insl
int3
mov
sub
out
call
ss
arpl
mov
mov
fs
fsubs
jno
fcompl
push
data16
data16
sarb
push
xchg
pop
mov
pop
push
decb
sbb
hlt
mov
out
mov
mov
push
pop
es
enter
mov
dec
push
sbb
sbb
out
aad
lahf
mov
push
loope
call
pop
pop
xorb
jnp
call
jmp
mov
add
xchg
pushf
or
shll
mov
out
push
fbld
dec
sahf
ret
or
lods
xor
adc
fwait
imul
inc
mov
adc
inc
jmp
xor
lock
das
add
inc
fildll
push
into
xchg
test
cld
hlt
push
mov
add
dec
loopne
stc
mov
sbb
in
hlt
jo
lret
out
dec
testb
ja,pt
inc
outsb
test
lea
sahf
cmp
fdivr
mov
fnstenv
cmp
cmp
pop
add
fwait
sti
ss
sbbl
scas
out
mov
pop
repz
dec
pop
jmp
xchg
dec
add
fwait
sbb
scas
jl
data16
daa
aam
inc
pop
test
scas
jnp
arpl
adc
mov
fistpl
outsb
lods
fucomp
mov
add
stos
mov
test
or
int
outsl
clc
xor
mov
pop
test
icebp
mov
xor
filds
mov
add
jl
loope
mov
adc
out
push
pop
add
add
xor
pusha
add
fistps
cmp
repnz
mov
pop
cltd
and
add
or
or
dec
and
sbb
jge
lret
xor
aaa
fisubrl
ss
mov
sub
sti
je
test
pushf
inc
pop
jecxz
sub
jne
jge
daa
fs
in
xor
jae
cwtl
sub
insl
cli
jmp
repz
movsl
lods
fisubs
bound
push
xor
hlt
call
sarl
jle
fidivrl
lret
jne
test
add
sub
and
aam
push
loope
xor
loope
pop
cmp
scas
fistpl
xchg
out
xchg
sbb
hlt
adc
stos
stc
dec
out
pop
mov
or
lea
lock
xchg
int3
or
hlt
adc
iret
mov
ja
rorb
lds
cmp
mov
rorl
inc
sbb
cwtl
dec
push
inc
and
fldenv
xor
lds
xlat
loope
inc
add
fisubrs
scas
rep
out
mov
cmc
and
pop
movsl
add
in
vmwrite
xor
sub
adc
adc
je
decl
into
push
cmp
test
cmc
mov
dec
les
pop
dec
ret
lds
adc
pop
xor
in
inc
movsb
jecxz
dec
outsb
adc
stos
sbb
or
js
ss
jbe
cltd
xor
aas
hlt
loop
jle
and
push
adc
sub
lods
xlat
cld
fmull
dec
jnp
ljmp
cwtl
mov
aad
adc
inc
test
inc
sti
inc
xchg
sbb
xor
repnz
fmulp
pop
cli
enter
ret
or
insl
sbb
out
pop
mov
in
pop
int
sub
or
jns
fldt
or
mov
xchg
xchg
jb
or
leave
call
popa
sbb
jge
sarb
in
mov
in
xchg
pushf
mov
cld
ret
lcall
fimuls
adc
loop
mov
shrb
std
icebp
int3
mov
lret
mov
iret
mov
in
xor
and
sarb
jae
mov
or
rcrl
fs
xlat
es
lcall
daa
xorb
jo
push
mov
add
pop
add
mov
or
test
das
mov
sub
inc
adc
fs
jae
in
or
mov
mov
and
imul
stos
dec
jns
push
adc
insl
lods
popa
push
icebp
imul
mov
imulb
and
in
xchg
pop
push
sub
push
cmp
jg
repz
data16
fsubl
mov
xchg
xlat
add
push
repz
or
mov
mov
dec
divb
and
jbe
sarb
scas
fldt
popf
xchg
fmull
lea
adc
scas
lea
nop
xor
and
invd
cmpl
test
mov
jmp
pop
and
popf
pop
fwait
adc
fldcw
push
jecxz
stc
sbbb
movb
adcl
inc
and
cmpsl
scas
pop
mov
or
xor
enter
sti
xchg
rorl
pop
es
xor
bound
pop
fwait
push
mov
addb
mov
jno
loope
jne
loope
shrl
cmp
add
inc
or
pop
pop
jge
and
sub
movsb
sub
popf
pop
cmp
sub
sbb
pop
in
aam
ret
fdivrs
sub
jmp
lahf
sub
jae
loop
stos
subb
ja
mov
dec
lret
jp
pop
fidivs
jo
jp
lock
inc
inc
std
inc
in
popa
pusha
or
out
and
dec
push
push
mov
jno
mov
inc
aas
jge
addr16
stos
dec
pushf
xchg
addr16
shrb
cwtl
cmp
test
push
aad
add
nop
movl
int3
test
cs
repz
fnstenv
xchg
xchg
ja
mov
aam
xchg
hlt
dec
fistpl
dec
insb
and
imul
loope
mov
gs
fdivs
pop
mov
je
lods
sub
and
and
fs
iret
lahf
loope
jbe
xor
xor
sbb
insb
aas
leave
dec
inc
sbb
cmpsl
mov
sub
repz
xlat
mov
data16
repz
shll
pop
sub
adcl
stos
jge
mov
addr16
cmp
mov
or
xchg
hlt
push
insb
shrl
xor
mov
or
cmpb
mov
inc
clc
jecxz
mov
mov
das
je
shll
inc
fcmovne
push
and
in
xchg
xchg
testl
mov
ja
or
fimuls
jg
jl
inc
jne
jl
and
xor
hlt
mov
mov
add
pop
movsb
sub
pop
lahf
mov
pop
jmp
lock
lahf
adc
mov
aad
mov
aam
faddl
mov
aas
push
push
xlat
sbb
sub
int
pop
in
lds
sub
js
sub
xor
fidivrs
gs
clc
sub
push
cmp
ret
insb
std
cmp
adc
jne
cmpsb
repz
in
inc
push
cmp
lahf
in
rcll
jl
gs
add
and
daa
mov
sub
mov
sbb
sarl
imul
push
pop
adc
rorb
push
insl
xor
push
shlb
pop
add
cmpsb
faddl
dec
push
or
in
add
ja
add
ljmp
add
frstor
int
push
cs
inc
shll
lock
fcmovbe
mov
testl
ficompl
and
js
adc
fdivp
jnp
inc
cmpb
push
cwtl
pop
aam
mov
or
mov
jecxz
lods
jb
test
xor
imul
aaa
sbb
sarl
pop
cwtl
mov
cli
push
decb
adc
mov
push
xor
fidivrl
adc
notb
xchg
imul
xchg
add
testb
cmpsb
dec
xor
cmp
sbb
shll
and
or
sub
aam
mov
lret
andb
mov
mov
clc
and
and
xor
movsb
mov
je
xchg
adc
aas
and
and
aam
push
add
call
cltd
jp
cmc
jmp
shr
inc
inc
inc
mov
pop
sub
cld
xchg
dec
jle
pusha
sbb
sbb
dec
lret
xchg
mov
or
add
adc
xchg
insl
mov
xlat
sub
mov
iret
insl
adc
push
add
lock
mov
or
clc
js
push
fisubrl
fildl
arpl
cmp
sbb
mov
mov
test
mov
fsincos
cli
sbb
gs
inc
xor
inc
aaa
dec
outsb
push
mov
adc
fcmovne
mov
cmp
int
jno
std
cmpsl
shll
rcll
xchg
push
outsb
fdivl
in
add
push
lods
xor
dec
push
inc
mov
gs
das
add
pop
jnp
and
xchg
push
xchg
cmp
sub
icebp
cmc
test
es
insb
dec
cltd
mov
adc
idivb
jnp
rolb
rol
insl
cmp
aam
les
and
cmp
xchg
int3
push
repnz
subb
cmp
add
mov
sbb
and
clc
aaa
or
xchg
sbb
pushf
into
cmpsb
jg
and
adc
test
call
lds
idivl
pop
test
mov
cwtl
aaa
mov
jmp
adc
shlb
mov
push
or
andb
dec
cltd
add
arpl
xchg
sub
sbb
jae
push
ret
xor
pusha
mov
out
or
pop
or
push
sbb
inc
cmp
mov
push
jmp
sub
xor
mov
and
test
je
mov
mov
push
mov
push
mov
mov
or
movsl
decb
js,pt
int3
sbb
cmp
jl
push
sub
sbb
call
out
leave
repz
mov
lods
cmpsb
nop
xchg
push
cmp
mov
or
pop
xor
aad
pop
adc
sbb
lret
aas
aas
data16
lods
add
mov
cli
imul
out
jbe
loopne
add
xor
insl
ret
mov
gs
repnz
out
push
mov
fmull
cmp
jmp
fisubs
popa
aad
nop
xchg
out
sbb
adc
pop
out
imul
setae
or
push
cs
mov
lret
or
dec
xorb
clc
lds
jmp
pop
mov
pop
xchg
sbbl
push
divl
fidivs
daa
test
xlat
ljmp
dec
add
sbb
ja
loop
ret
shlb
lods
insb
adc
in
or
mov
icebp
addl
clc
pop
arpl
sbb
or
pop
xor
mov
imul
nop
nop
bound
add
mov
mov
lock
cmp
sub
enter
sbb
iret
int3
pushl
bound
insl
lock
imul
shll
dec
pop
aam
xchg
clc
sbb
dec
mov
push
bnd
scas
lock
fdivrl
mov
rcl
xchg
xchg
nop
push
pop
imul
imul
mov
test
loope
stos
inc
ret
push
sbb
mov
jbe
push
in
cmpsb
adc
aad
inc
jecxz
faddl
and
fisttpll
ss
sbb
jns
lret
sub
or
movsb
in
and
push
mov
cmp
ret
lds
les
mov
mov
sbb
cmp
mov
mov
lock
jnp
fcomip
test
sub
inc
stc
mov
xchg
insb
xlat
dec
mov
cmp
xchg
add
addl
sahf
sahf
pop
and
aas
adc
loop
movsl
lcall
xchg
shrb
aas
scas
popa
ljmp
jne
nop
shrb
imul
imul
cwtl
dec
test
aaa
cmp
scas
cmp
pop
call
inc
pop
jg
aam
mov
xor
cli
adcl
test
mov
pushf
test
mov
sbb
and
imul
shll
leave
ljmp
mov
pop
add
movsl
sar
adc
in
jg
leave
fisubrs
inc
inc
sbb
mov
inc
rclb
orl
mov
pop
pusha
jle
popf
pusha
test
inc
push
cmpb
mov
ror
pop
jb
mov
int3
pop
jp
insb
xchg
popf
js
xchg
mov
sub
jbe
jl
inc
cmc
test
jno
dec
xchg
mov
dec
mov
push
cmp
cmp
add
mov
inc
andb
jo
inc
out
and
cmp
clc
dec
push
test
lock
lcall
sbb
out
cmp
insl
cmpb
push
inc
leave
cs
adc
les
push
jg
xor
xor
jne
jnp
adc
xor
movsb
xor
lock
and
in
jge
dec
test
dec
xorl
xchg
adc
popf
mov
mov
rcrb
sbb
inc
cwtl
pop
sub
and
inc
mov
mov
dec
mov
loope
inc
in
push
adc
mov
inc
sbb
and
adc
push
cmp
xor
or
xchg
test
xchg
push
push
aad
leave
hlt
negl
leave
push
sbb
xchg
pop
testb
xor
shlb
xor
test
sbb
jbe
inc
pop
shlb
repnz
push
xchg
ds
andl
bound
imul
test
push
fs
adc
sub
lcall
movsb
stos
mov
mov
mov
lods
icebp
sbb
repnz
test
fwait
cwtl
ljmp
daa
pop
mov
shrl
int
add
out
mov
int3
cli
add
push
mov
sbb
cmp
jne
pushf
daa
pop
or
and
les
das
ljmp
out
pop
mov
or
inc
mov
jmp
inc
mov
loope
mov
fwait
inc
sbb
into
jb
repnz
xchg
add
pushf
mov
and
mov
fisttps
jno
mov
dec
stos
stos
das
push
jl
int3
pop
pop
insb
pop
hlt
push
cmp
shll
imul
addr16
xchg
jnp
add
pusha
adc
mov
and
shll
jno
push
fcoms
pop
je
insl
inc
in
aaa
mov
mov
pop
lret
push
mov
sarl
pop
enter
jmp
test
pop
mov
push
lock
mov
js
cmpsb
pop
fbld
or
or
dec
or
xchg
pusha
pushf
push
jns
stc
psrlq
fiaddl
or
dec
divl
pop
in
jbe
lods
js
cmp
test
xchg
add
jbe
test
shrb
dec
xchg
out
push
dec
jg
sub
mov
jns
adc
repz
lods
cmp
xchg
fistpll
gs
xchg
shrb
stos
add
mov
cmc
mov
and
jo
icebp
movhps
pop
add
mov
push
push
jp
add
cmpsl
test
in
cmp
std
cmp
xchg
test
mov
jb
push
mov
inc
jecxz
sarl
pop
das
mov
dec
fs
lret
add
cmp
lea
jge
dec
es
or
inc
cmp
stos
je
ljmp
sbb
xor
inc
push
out
lock
in
inc
or
and
push
arpl
xchg
push
std
jge
and
jo
shl
lea
insl
faddp
stos
cmp
dec
xchg
cmpsl
sub
push
clc
nop
test
xchg
dec
cmp
iret
mull
popf
pop
hlt
sub
jnp
and
and
mov
pop
daa
push
cmp
xor
leave
pop
sarl
sub
aas
insl
repnz
pop
push
push
inc
pushf
loop
mov
mov
fwait
in
jbe
sub
insl
jnp
faddl
loope
xor
or
sbb
xchg
and
pop
inc
outsb
mov
gs
pop
gs
cld
ljmp
push
pushf
fidivrl
andb
test
xchg
mov
rcrb
lods
pop
jl
xor
mov
mov
clc
nop
lcall
add
loope
jnp
rcr
repnz
xchg
inc
pop
sbbl
dec
pop
icebp
inc
or
jg
enter
out
push
add
pop
push
inc
sub
lock
icebp
cld
call
or
mov
dec
push
loop
jae
in
cmpsb
xor
inc
push
mov
js
out
addr16
test
dec
repnz
loop
sub
sar
and
inc
sbb
push
jne
push
push
out
add
cwtl
in
sub
lahf
cmp
adc
xor
adc
sub
push
dec
leave
clc
enter
or
ljmp
push
adc
push
out
cltd
mov
movsl
xor
or
cmp
inc
add
stc
arpl
xor
push
xchg
xchg
mov
xlat
push
std
fildll
outsl
fdiv
jns
push
dec
or
sbb
test
sub
aam
xchg
adc
shrl
and
ret
add
rolb
xchg
icebp
adc
and
sub
or
xchg
pop
or
cmp
fsub
movsl
pop
xchg
jns
inc
shlb
orb
push
pop
ljmp
sub
mov
mov
ficoml
gs
adc
imul
ljmp
mov
lea
add
hlt
xchg
cld
out
jge
push
xchg
dec
int
rcr
xchg
xchg
inc
mov
std
mov
lret
mov
lods
in
lret
inc
cs
mov
outsl
push
mov
les
orl
xchg
push
inc
and
lcall
or
mov
cs
pusha
cmp
pushf
scas
sub
fsubl
xchg
test
out
push
mov
jo
mov
adc
push
stos
inc
mov
jle
scas
lock
loope
aam
sub
jmp
inc
hlt
mov
stos
and
shrl
sub
xor
pop
je
and
hlt
inc
push
pop
pop
mov
imul
mov
leave
and
aaa
jne
stc
sbbb
daa
xchg
js
xchg
push
jmp
mov
dec
loopne
sarb
lret
cli
sbb
lret
xor
scas
adc
adc
pop
adc
icebp
push
mov
jns
and
push
out
cmpsl
mulb
adc
lods
dec
negl
stos
mov
gs
scas
stc
lods
inc
insl
es
aas
outsl
sub
mov
mov
stos
and
sbb
outsl
mov
out
adcl
push
lock
jg
cs
xchg
insb
nop
in
cmpsl
xchg
cmc
xor
aaa
lods
push
imul
sub
pop
outsb
sbb
sti
or
lock
pop
leave
xchg
sub
out
ret
repnz
jecxz
xor
dec
adc
data16
mov
mov
out
repz
dec
lods
xchg
call
shll
shl
and
cwtl
or
outsb
movsl
push
mov
fsubrp
dec
les
push
cltd
xor
or
pop
sub
std
fimull
xlat
pusha
inc
aam
lret
sub
mov
loopne
daa
push
pusha
xor
daa
aad
fs
mov
in
iret
pop
mov
push
cmp
stos
fs
dec
mov
pop
or
call
faddl
shlb
pop
cmp
jl
fisubl
or
ret
subb
xor
xor
xor
and
aaa
out
nop
mov
mov
or
mov
outsb
lods
repnz
fsts
pusha
movsl
mov
or
or
int
mov
mov
es
test
adc
jae
mov
inc
push
leave
les
or
mull
add
mov
rclb
adc
in
mov
loope
xor
sub
sbb
mov
les
lea
ja
lea
jno
pop
xor
xor
loope
jns
pop
xchg
mov
fs
sahf
mov
ljmp
jae
inc
mov
movsb
mov
inc
stos
cmp
inc
sahf
xchg
in
and
mov
add
xorb
xor
sbb
push
loopne
add
mov
stc
fsubrs
andb
movsb
addl
mov
das
mov
nop
fnstsw
and
scas
insl
gs
out
xor
shrb
ja
mov
dec
jg
and
mov
pop
int
enter
sbb
lcall
pop
fimuls
movsb
xchg
sbb
mov
jo
cmp
xchg
and
sbb
in
push
fninit
xchg
test
adc
xor
dec
lret
movsb
cmpsb
test
add
fwait
sti
add
clc
sub
mov
call
incb
jp
arpl
fcmovnb
insb
in
mov
fidivrs
aad
jle
and
mov
sbb
inc
call
add
push
mov
pop
cmp
xor
outsb
faddl
and
cmp
enter
inc
ds
outsb
jno
test
push
ljmp
xchg
rorb
cmp
sbb
testb
popa
test
cwtl
push
xchg
test
xchg
sbb
mov
jmp
or
add
jecxz
les
xchg
imul
popa
lds
aaa
mov
data16
sbb
pop
push
jecxz
rcrl
jmp
push
mov
aaa
xor
lock
mov
jl
sbb
cmp
xorb
clc
xor
divl
gs
ds
add
bound
imul
push
jno
or
adc
sub
enter
nop
scas
xor
jge
es
out
jl
stc
inc
cmpsb
or
push
ljmp
cmp
das
or
test
vpmadcswd
es
fldcw
sbb
fs
jge
mov
stos
sbb
shr
xor
daa
mov
and
mov
lahf
dec
test
sbb
js
sbb
push
and
test
jbe
fldcw
gs
dec
outsl
lods
iret
and
popl
push
push
in
leave
push
add
daa
cmp
push
test
adc
sbb
bound
insl
cltd
cmpsb
sub
popa
es
ficoml
xor
cmpsb
es
pop
xor
shrb
shll
push
rol
outsb
int3
cmpsb
cmc
rcrb
rcrb
mov
xchg
enter
add
aam
hlt
pusha
add
pop
ret
xor
sbb
jnp
add
movsb
ja
adc
lock
mov
inc
cmp
sbb
aas
popf
mov
dec
test
cs
lock
add
xor
push
add
pop
loopne
icebp
or
sub
or
dec
jg
adc
and
mov
push
adc
pop
jnp
aad
stos
pop
xchg
pop
aaa
dec
mov
xchg
ljmp
pop
roll
fwait
cmp
pop
push
shrl
or
xor
xchg
lds
call
cmc
push
xor
fldl
in
repz
pushf
mov
sbb
dec
jmp
hlt
popf
out
and
test
int3
nop
cmp
stc
rorl
and
cld
and
cmp
mov
mov
sub
jbe
push
pop
cs
add
pushf
or
mov
cmp
mov
fsubs
in
lds
cmp
int3
ret
xchg
xor
rcrb
call
stos
loop
cmpsb
mov
lods
push
movl
outsl
xchg
rol
push
xchg
sub
inc
test
stos
xchg
shll
ds
mov
push
cmp
js
imul
sti
mov
sub
pop
pusha
prefetchwt1
arpl
dec
xor
dec
jecxz
rcll
lea
stos
adc
cli
push
mov
and
pop
mov
fst
mov
aas
adc
push
push
add
out
shrb
add
mov
ja
cmp
jmp
or
mov
adc
aas
cmp
mov
in
jmp
lcall
mov
jecxz
and
sub
in
sbb
fisubs
dec
mov
arpl
cmp
add
xchg
pop
pop
dec
fs
fisttps
push
jno
mov
push
insl
icebp
out
test
testl
nop
mov
add
hlt
test
or
xor
or
out
les
inc
jne
mov
inc
push
dec
es
or
sub
js
fildll
mov
pop
ss
addr16
data16
adc
dec
mov
leave
fnstsw
push
daa
inc
pop
dec
xor
sbb
lods
outsl
mov
notl
and
pusha
mov
push
syscall
into
in
aam
ret
cmpsb
fisubrl
inc
mov
insb
mov
jne
or
dec
les
loope
outsb
mov
shr
inc
mov
inc
inc
or
pop
bound
mov
xor
movsb
adc
call
sarb
loope
int3
cmc
test
dec
jo
popf
pop
es
cwtl
loop
inc
and
std
and
jbe
popa
out
aaa
es
sti
arpl
jbe
cmp
or
cmpsl
hlt
cmp
les
stos
pop
repnz
xchg
mov
sbb
inc
es
or
shlb
mov
jmp
sarl
in
push
out
or
ja
jmp
mov
jge
push
xchg
cmp
mov
sub
pop
inc
ljmp
or
nop
push
movsl
adc
jecxz
mov
inc
ret
es
jno
push
icebp
or
sbb
lods
cmc
les
lahf
push
mov
dec
add
inc
pop
inc
idivl
mov
and
clc
push
sbb
sahf
mov
int3
fpatan
jecxz
lds
mov
sub
inc
jnp
imul
gs
add
jp
push
push
mov
jno
fisttpl
sub
sbbl
cmp
push
jo
lahf
xchg
sarb
cmc
out
fs
sub
in
lahf
frstor
mul
bound
leave
jp
mov
mov
lods
add
inc
lods
sbb
xor
sarb
mov
out
out
idivb
ficoml
jo
mov
lods
push
sub
inc
and
mov
mov
cmc
cmp
scas
push
or
cld
mov
in
xchg
xchg
mov
lahf
jmp
inc
sub
mov
fbstp
iret
jo
dec
jecxz
xchg
loope
int3
xor
popl
sub
and
aad
inc
sub
pop
xor
rol
mov
pusha
add
push
test
in
lea
mov
jle
imul
pop
cmpsl
rcll
outsl
outsl
loope
pusha
dec
arpl
lea
sahf
push
mov
xchg
and
jmp
dec
test
cltd
push
test
sbb
xchg
lock
sub
std
push
enter
sbb
cmp
and
or
mov
dec
cmp
les
pop
inc
outsb
pop
cmpl
insb
push
aas
cmpsb
movsb
mov
push
mov
pop
mov
enter
mov
sbb
and
inc
out
mov
enter
lret
js
mov
es
inc
iret
and
cmpsb
repz
insb
dec
orb
daa
xchg
movsb
icebp
push
pop
mov
push
jbe
filds
cmc
xor
jg
popa
cwtl
test
pushf
mov
push
adc
sub
adc
insl
sbb
out
adc
cmp
fldenv
cld
loope
jne
scas
sub
inc
cmc
leave
sbb
out
mov
and
inc
xchg
sbb
jne
cmp
outsb
sub
mov
pop
xlat
inc
fldl
xor
mov
data16
sahf
jmp
adc
in
jecxz
addr16
xor
js
pop
push
xlat
fstpt
ret
cmpsl
or
add
add
das
jecxz
cmc
fisttps
fimull
sub
xor
cwtl
sti
mov
add
jmp
aam
push
lods
lds
test
jecxz
push
add
sahf
xchg
jbe
jecxz
into
pop
pop
and
mov
and
scas
fiadds
js
mov
outsl
jns
push
sbb
lea
inc
mov
call
sbb
dec
pop
xor
loop
fsubrl
nop
aaa
mov
and
xor
push
enter
in
mov
faddl
adc
jge
fcmovb
and
imul
mov
sub
es
sub
fstps
sahf
stos
icebp
fcmove
mov
cmpsl
inc
stc
add
mov
jmp
or
or
lea
lock
mov
lcall
cmp
outsb
mov
add
xor
ficomps
gs
mov
jbe
addr16
fildll
in
test
xor
push
std
adc
lods
sbbl
stos
leave
push
bound
cmpb
xchg
mov
xchg
mov
stos
xor
mov
stos
inc
fstl
fldcw
jnp
mov
jge
push
adc
inc
cmc
push
imul
clc
inc
cmpsb
ror
cli
xchg
dec
mov
push
movsl
rorb
xor
sub
dec
jo
lret
scas
push
sbb
aas
cs
dec
add
vpand
jecxz
sti
test
clc
sub
ljmp
pop
stc
dec
or
stc
add
leave
fiadds
mov
subb
sbb
jmp
xchg
xchg
je
sbb
xor
mov
out
pop
or
adc
pshufb
fsubr
repz
dec
mov
in
aaa
mov
push
and
hlt
bound
push
mov
insb
shll
orl
sbb
pop
pushf
in
inc
inc
ret
cs
cmp
xor
lea
data16
adc
push
lock
dec
mov
sahf
daa
push
pop
jg
sbb
add
lret
sbb
js
jo
adc
ja
mov
fcmovu
or
mov
stos
inc
lods
imull
xchg
sub
sahf
add
fisubl
int3
daa
shlb
mov
fwait
es
test
mov
sbb
fs
inc
mov
mov
dec
adc
outsb
cmp
sarb
int3
stos
mov
movb
push
movsb
jecxz
push
aam
js
in
lahf
cld
push
testb
dec
rol
nop
pop
push
pop
or
in
roll
pop
mov
or
jg
inc
and
jmp
test
fistl
pop
aam
cmc
fnstenv
adc
jle
xchg
lods
add
aad
pop
xchg
mov
mov
and
lea
xor
fldenv
dec
dec
leave
scas
dec
mov
cmp
mov
and
inc
movsb
mov
int
not
nop
jecxz
push
and
test
pop
jne
mov
xor
add
mov
scas
fistpl
pop
cmpsl
subps
int3
lret
in
inc
mov
insl
fildll
out
inc
mov
popf
cmpsl
rcl
cmp
mov
cmc
aas
movsb
add
scas
addr16
sti
lock
mov
sbb
jb
enter
xchg
mov
mov
fistps
out
pop
mov
enter
or
cli
pop
sub
mov
mov
push
pop
hlt
push
cmp
push
mov
rolw
insb
sbb
push
insl
outsl
mov
popf
insl
sbb
popf
fadds
adc
or
fildl
inc
mov
scas
sub
push
les
mov
ret
addr16
loope
mov
xor
sahf
mov
dec
test
decl
adc
pushl
jle
push
mov
add
out
xor
pop
pop
ret
xor
push
lods
ss
pop
sub
sub
lods
mov
xor
ret
inc
adc
insb
out
arpl
es
push
lahf
cltd
jns
cmpsl
dec
out
pop
adc
cmp
push
mov
rcrl
xor
mov
aas
cmp
or
repnz
sbb
xchg
xchg
inc
mov
jns
mov
push
dec
imul
out
loop
adc
cli
bound
or
shlb
push
ja
mov
pop
je
shr
push
lock
aas
mov
sbb
ss
xchg
bound
dec
mov
mov
out
mov
repnz
cmp
mov
jns
dec
out
ljmp
sub
mov
mov
mov
shl
imul
push
xchg
lods
cmp
cmp
loop
and
xchg
jns
cmp
mov
mov
inc
mov
add
loope
pop
lds
rcr
add
testb
adc
daa
mov
jmp
popa
pop
pusha
mov
or
mov
jno
dec
dec
or
loopne
andb
cmpsb
dec
gs
push
das
std
or
push
stos
push
addr16
and
jbe
pushfw
testb
jp
out
mov
mov
clc
dec
addr16
add
lahf
sub
lcall
xlat
inc
jae
or
jnp
out
xchg
jl
shrb
push
add
push
pop
sub
adcb
add
ficomps
adc
dec
or
add
cmp
pop
dec
jnp
lcall
adc
add
sbb
mov
dec
ficompl
std
mov
fs
fildll
and
insl
test
testl
xor
inc
inc
les
adc
mov
mov
add
out
stos
add
pop
and
sysret
repnz
iret
andb
adc
xor
pop
xlat
fdivs
rorb
cmp
push
icebp
dec
xchg
iret
gs
out
das
sbb
into
sub
bound
pop
loop
inc
std
xor
adc
jne
stos
inc
dec
sti
xor
mov
jbe
orl
mov
push
test
jge,pt
cmp
movsl
fmuls
outsb
test
testb
and
fisttps
in
fnsave
jg
shl
pop
push
dec
ret
jns
adc
imul
fs
sub
divb
insl
repz
cltd
int
jnp
inc
push
lret
int3
dec
fsubs
mov
ljmp
xchg
imul
dec
cwtd
dec
fcmovnu
pop
add
sbb
and
or
das
adc
cmpsb
jno
fsubs
or
push
js
les
cmpsl
jecxz
pushf
and
pop
inc
shll
lahf
pop
test
or
scas
push
lahf
cmp
push
sarb
push
or
dec
mov
cmc
hlt
outsb
mov
jge
ficomps
xchg
in
out
out
cwtl
dec
pop
aaa
into
mov
push
out
adc
cmpsl
call
adc
push
imul
xchg
pop
icebp
pop
adc
icebp
imul
aad
cmpsl
inc
jmp
insl
lock
lods
shlb
add
push
gs
or
push
data16
mov
pop
test
push
and
addl
subl
mov
in
pop
outsb
cmp
pop
xorl
sbb
mov
jg
sbb
sbb
jg
stos
push
sub
pop
lahf
pop
sbb
movb
je
adc
and
jnp
hlt
or
mov
dec
out
testl
inc
insw
out
sbb
jae
andb
and
or
dec
movsl
loop
lahf
sub
sbb
xor
sbb
dec
mulb
jmp
iret
jns
aaa
subb
scas
sbb
xchg
jmp
adc
out
pop
and
xchg
xor
xchg
adc
mov
mull
syscall
dec
dec
clc
pop
push
popf
mov
cmpsb
gs
jecxz
negb
shlb
push
std
jae
shll
add
pop
rcl
fxch
call
hlt
push
mov
out
jne
inc
test
ljmp
fdivl
or
addr16
adc
nop
dec
fs
or
mov
sarb
lods
mov
inc
in
dec
fisubl
bound
out
mov
or
test
xchg
adc
ret
mov
in
imul
add
dec
dec
aam
mov
movsl
mov
sbb
in
adcl
xchg
and
test
dec
cld
push
repz
xchg
push
mov
add
pusha
push
xor
cmpsb
mov
mov
test
es
ret
sub
adc
mov
in
outsb
andl
outsl
sbb
insb
aas
loopne
add
mov
out
outsb
movsl
jns
mov
mov
data16
fisttpl
out
std
sbbl
pop
std
nop
jo
enter
or
es
pop
inc
orb
add
push
mov
push
mov
popf
outsb
in
add
mov
xlat
cli
mov
jl
psllw
jg
pop
sbb
xor
lcall
bound
js
jg
mov
shr
xor
and
jo
sub
stc
inc
fcmove
jmp
pop
sbb
push
les
repz
popa
outsl
push
pushf
imul
sub
cmpsl
cmp
lcall
mov
stc
inc
sub
sub
dec
flds
iret
and
add
sub
call
inc
fs
jecxz
xchg
movsb
in
mov
sahf
iret
movsb
lods
inc
jle
rorl
sub
cmp
enter
or
jp
jmp
das
int3
mov
arpl
pop
insl
stos
imul
jo
sub
or
aad
jp
xor
add
and
inc
add
stc
adc
xor
push
mov
mov
mov
scas
das
daa
imul
rorb
push
fsubs
mull
xchg
pushf
lcall
pop
inc
mov
rcrl
or
out
data16
lods
out
fisubrl
xchg
mov
sahf
pop
mov
push
imul
fadds
xchg
sbbb
inc
xchg
xchg
sahf
fs
lahf
pusha
in
cltd
mov
xchg
pop
add
mov
scas
xlat
ret
dec
loope
inc
ja
es
das
lods
rclb
repz
xchg
mov
lahf
gs
lock
fiadds
hlt
mov
ljmp
ret
ja
sbb
or
test
aaa
jmp
pop
lds
iret
int3
xor
mov
push
sbb
jno
push
mov
je
fldt
rorb
hlt
sbb
fnsave
jns
xor
jg
push
enter
in
cmp
fstps
mov
ret
pop
inc
rolb
push
adc
dec
or
jne
push
sbbb
jmp
fmull
repnz
jae
movsb
dec
fmuls
xchg
pop
or
outsl
ds
fisttpl
rcll
stc
sub
lret
add
adc
cmpsb
xchg
jg
pop
pop
cmp
movsb
and
clc
mull
call
push
out
inc
add
loop
gs
push
or
pop
fmul
inc
dec
inc
or
push
mov
cmpl
lods
push
mov
test
fwait
add
mov
lcall
in
movsl
fstpl
xlat
mov
sbb
insl
pop
sub
push
scas
cmp
in
in
lret
lds
andb
mov
xchg
and
mov
andb
push
jle
dec
pusha
cmc
lret
push
pop
adc
pusha
jns
sbb
or
jge
pop
lock
mov
shrl
rcr
pushf
mov
aad
imul
jmp
or
add
mov
rorb
sub
aad
pop
cli
sbb
mul
mov
bound
call
out
push
sub
cltd
test
mov
out
mov
pop
mov
sbb
data16
cmp
dec
loopne
mov
jno
cli
repz
fdivp
imul
lods
jg
std
mov
jnp
outsb
fcomip
movsl
sarl
cli
test
popa
fisttpll
add
sahf
std
sub
push
cmpsl
insb
lock
push
sbb
jns
das
mov
xchg
jl
add
roll
pop
lods
jg
fistl
ret
jbe
jb
ror
out
lock
add
rorb
xchg
push
cs
mov
mov
pop
call
repz
jg
mov
jo
mov
cltd
sti
nop
inc
rcrb
jle
aas
and
arpl
pop
cmc
fdecstp
imul
xor
repnz
push
or
jmp
pop
pop
or
xchg
mov
das
mov
and
imul
dec
jno
pop
sti
adc
es
add
flds
shll
inc
push
scas
mov
dec
and
fistps
jns
inc
and
test
scas
mov
cli
xor
icebp
lret
test
int3
mov
lods
hlt
loop
addb
jns
xchg
pop
mov
mov
inc
push
jecxz
sahf
in
jb
sbb
fstps
xchg
lcall
nop
cli
je
pop
clc
lahf
fiadds
xchg
fstpl
popf
mov
insb
jb
icebp
mov
leave
in
loope
cld
jno
and
mov
inc
sub
inc
or
sub
les
fwait
pop
cmpsb
xchg
ljmp
push
gs
and
pop
sbb
sarb
dec
popa
cmpsl
cmp
jge
popf
or
into
sbb
cmp
rclb
push
inc
lds
loop
test
outsb
push
es
sbb
add
jo
push
mov
or
push
push
mov
or
fisttps
je
inc
scas
push
imul
mov
aam
into
out
push
nop
mov
in
xor
lahf
ffree
inc
push
mov
pop
pusha
lods
fisubrl
jge
sub
pop
fwait
ljmp
inc
dec
iret
mov
mov
stos
push
cs
pop
pushf
push
sub
jae
adc
xor
mov
adc
jbe
inc
sub
push
sub
cli
lea
and
pop
jno
sub
cld
das
or
imul
jnp
mov
xchg
mov
fistpl
scas
fistpll
add
daa
mov
rcl
mov
test
loope
dec
xchg
jecxz
cld
jle
arpl
mov
data16
sbb
int
jge
scas
insb
cmpsl
push
fidivrs
push
jno
jnp
lret
mov
addr16
push
es
outsl
mov
pop
in
push
xlat
cld
cwtl
and
mov
fisubs
lret
dec
dec
or
xor
enter
les
push
dec
fdivl
xchg
adc
scas
dec
mov
insl
jle
pop
aaa
imul
push
sub
mov
in
adc
pop
and
test
daa
fldenv
cmpsl
fwait
mov
pop
dec
icebp
xlat
lods
cmp
jo
inc
add
cltd
scas
push
icebp
inc
mov
dec
into
cmp
pop
xor
cs
pop
fcomp
mov
mov
movsl
data16
push
or
subl
inc
mov
rcrb
mov
inc
push
adc
ljmp
insl
repz
and
pop
sbb
imul
adc
sarb
mov
pop
push
js
mov
in
mov
rolb
fs
inc
test
cli
out
flds
pcmpeqd
add
dec
ret
dec
mov
and
cmp
icebp
iret
jnp
cli
repz
negl
roll
arpl
push
cmp
pop
pop
in
xor
jb
add
sub
jp
push
adc
in
out
clc
lahf
jb
pushf
mov
inc
push
in
jbe
pop
lret
out
stc
mov
push
cmpsl
dec
test
test
dec
movsl
xor
mov
xor
das
popf
hlt
or
or
scas
xor
aam
in
and
mov
inc
inc
ret
outsl
mov
push
aaa
push
test
push
mov
xchg
stos
sub
or
cmpsb
in
dec
push
andb
and
je
loope
jae
sahf
test
cmc
pop
jl
movsl
int
out
in
rcr
pop
ret
popa
je
iret
jg
push
adc
and
ss
inc
rcrb
adc
std
push
cmp
ret
ds
loop
mulb
imul
cmp
push
in
imul
test
idivb
sbb
jmp
test
jl
push
dec
mov
pop
ret
lods
jecxz
pop
and
push
mov
test
xchg
sub
hlt
adc
stc
sbb
lods
popf
es
xchg
arpl
pop
mov
or
mov
mov
lds
je
xchg
call
mov
insl
xor
fstpl
ljmp
or
sub
ja
dec
mov
in
or
mov
popa
push
ds
mov
aad
enter
adc
lods
xor
and
dec
inc
lock
inc
aas
leave
inc
push
add
das
mov
lahf
stos
lock
pop
sarl
hlt
cli
xlat
fnsave
addb
cmpsb
mov
and
jle
sub
push
mov
bound
aad
test
shrl
pusha
lock
push
test
ret
aas
pop
jge
incb
fs
push
mov
xchg
inc
adc
cmp
mov
test
andl
add
xchg
shrb
jno
mov
inc
leave
stc
loopne
xor
push
adc
cmc
or
ret
cmp
lcall
inc
push
jp
jmpw
or
or
mov
shrb
inc
aad
and
fistl
aad
push
fs
ds
or
xor
fstpl
filds
or
shll
cltd
ret
lods
ret
in
fs
in
fcoml
fnstenv
jle
rcl
add
dec
xchg
jb
mov
dec
sti
sbb
into
and
jae
push
sbb
mov
ret
sti
sti
rclb
pop
mov
jnp
lcall
scas
insl
dec
je
movsb
addr16
divb
pushf
fcmove
push
popa
outsl
arpl
pop
xchg
sub
xchg
adc
shrl
mov
add
movsl
xor
js
pop
jge
sub
or
cwtl
out
jp
fwait
aaa
sti
cmp
fnstenv
pushf
and
xor
jmp
ds
jo
call
ljmp
or
xchg
pop
fwait
movsl
sbb
inc
movsb
jae
std
iret
adcb
int
arpl
mov
repnz
loop
xchg
or
stos
out
mov
js
push
lods
mov
cmpsl
sub
outsb
xor
or
lods
inc
loopne
into
jno
cmp
aas
pop
adcl
jns
mov
push
jmp
adcl
sahf
popa
lahf
pushf
jg
andb
pop
add
rorl
mov
jns
inc
test
fs
mov
xchg
movsl
jns
sub
rcrl
jg
pusha
lock
mov
xchg
into
sbbl
js
lods
pushf
std
ds
push
cmp
call
mov
jp
adc
mov
cmp
mov
push
inc
stc
clc
sbb
push
lret
mov
pop
fwait
pop
scas
push
je
imulb
jo
in
mov
ljmp
or
xchg
fisubrl
mov
je
mov
pushf
push
inc
adc
clc
lret
pop
xchg
fldl
icebp
jl
aas
dec
dec
sbb
js
add
push
icebp
mov
mov
test
sub
jns
sbb
je
std
repz
jecxz
xor
mov
push
out
add
pop
daa
jns
dec
cmc
jl
aas
test
les
mov
idiv
mov
jl
jno
xchg
stos
or
sbb
sti
bound
xchg
and
or
unpckhps
testb
dec
xchg
xchg
aas
push
mov
test
loopne
mov
daa
in
outsl
mov
mov
movd
xor
fucom
sbb
mov
xchg
fcomps
jne
popa
xchg
or
and
push
outsl
cltd
and
out
dec
cli
nop
push
test
movsl
in
mov
mulps
xlat
es
cs
fwait
cmp
outsl
pop
adc
nop
nop
pop
adc
ss
in
icebp
lret
in
fwait
xor
andl
mov
push
adc
pop
popa
jo
loopne
mov
push
push
data16
jne
aas
ret
jmp
dec
mov
into
mov
cli
mov
cmp
mov
push
fisttpl
xor
xchg
repz
jge
test
add
add
cmp
inc
fidivs
cwtl
sub
pushf
xor
jbe
mov
mov
cmp
dec
push
xor
adc
or
mov
lock
shrb
mov
stc
pop
mov
add
bound
push
add
out
xlat
dec
add
mov
insb
push
mov
in
cld
or
fiaddl
daa
aad
sbb
jmp
ja
cli
adc
insl
iret
and
sarl
xchg
mov
inc
inc
xchg
loopne
pop
in
pop
ret
negl
dec
inc
push
loop
pop
sbbb
mov
mov
inc
pushf
shl
ljmp
frstpm(287
lds
shlb
loop
pop
rcl
ret
push
jecxz
mov
aad
mov
and
dec
lret
imul
mulb
test
pop
and
pop
cwtl
inc
cmc
xchg
mov
mov
pop
mov
jmp
jl
jnp
pop
dec
addr16
pop
mov
les
push
clc
pop
sbb
call
sbb
xchg
sbb
in
scas
and
add
ja
dec
add
sbbb
push
loop
xchg
lahf
inc
dec
scas
fnstenv
ds
xchg
out
adc
fwait
push
adc
aas
mov
pushf
jmp
arpl
xchg
in
daa
aas
fcomps
out
add
shr
outsl
aas
dec
mov
lret
clc
push
shrb
mov
mov
jmp
shlb
push
xor
mov
mov
jo
sbb
int3
dec
aam
loop
xor
daa
mov
pop
xchg
add
xchg
sarl
jecxz
xchg
mov
loopne
or
or
pop
jbe
ja
mov
out
lds
and
inc
out
call
fcoml
mov
mov
mulb
cmp
in
or
adcl
clc
fdivp
pop
jecxz
jge
mov
mov
mov
movsb
fidivrs
cwtl
xor
std
xchg
mov
fiaddl
add
add
xor
dec
mov
adc
dec
imul
fwait
mov
add
sti
test
popf
pop
mov
ja
imul
cli
mov
sti
fs
dec
mov
jecxz
cli
xor
mov
dec
mov
sbb
mov
and
movsb
xor
in
sbb
sub
mov
dec
mov
dec
ret
in
out
out
jo
add
pop
cmpsb
inc
or
sbb
xchg
shlb
sub
lods
adc
out
pop
testb
les
cli
in
fimull
jl
out
leave
jnp
xor
push
mov
dec
rcrb
repnz
xor
or
lods
mov
loope
pop
push
push
insb
insb
mov
xchg
mov
data16
fdivr
mov
cmpsb
cmpsb
and
jae
out
cli
mov
pand
push
das
sbb
je
into
mov
sbb
shll
cmp
mov
xchg
xor
add
inc
in
jnp
xchg
imulb
popf
and
int
icebp
and
xchg
out
push
popf
in
xchg
or
add
jp
mov
and
xor
insl
mov
dec
fisubl
cmp
pop
std
call
jg
push
cli
ja
add
mov
cs
cwtl
popf
rcll
xor
xchg
ss
inc
shll
jns
call
inc
mov
aam
lret
mov
lods
mov
repz
rcll
dec
pop
shrb
int3
mov
mov
dec
js
adc
inc
cltd
addb
sarb
sbb
xchg
jmp
push
push
cwtl
mov
xor
push
xchg
es
push
inc
mov
sub
pop
std
fisubl
in
mov
mov
and
cld
fldcw
sub
in
int3
scas
das
xchg
js
sub
jge
xor
ret
stos
sub
mov
mov
lods
dec
sub
pushf
pop
jl
fisubs
ret
xchg
or
icebp
insl
outsl
jp
out
dec
cmpsl
jg
pop
mov
xchg
and
inc
jmp
out
mov
push
push
pop
scas
push
arpl
mov
icebp
int
pop
out
and
arpl
mov
enter
add
repnz
insb
inc
xchg
jp
add
repnz
inc
pop
bound
mov
cmc
out
sahf
shlb
icebp
std
sub
mov
push
pop
out
dec
je
xchg
jg
jle
scas
adc
xor
mov
fcmovne
cmpsb
ret
in
dec
adc
xchg
jmp
movsl
testl
outsb
push
add
sub
mov
leave
xor
adc
push
flds
mov
sbb
insl
jo
mov
mov
hlt
sbb
dec
loope
add
lret
sbb
pop
lods
scas
mov
shll
and
jge
xor
imul
fldl
xor
xor
scas
nopl
sbb
adc
inc
or
lcall
jg
mov
andl
jnp
lahf
test
test
sub
stc
adc
testb
xor
scas
ret
aas
stc
jnp
and
mov
xchg
mov
ds
jo
ret
test
rcr
imul
mov
and
cmp
dec
scas
sbb
js
icebp
jmp
lcall
pusha
xchg
std
or
jb,pn
xor
or
or
mov
xor
push
mov
call
and
ret
add
shl
pop
xchg
ss
sub
and
loope
mov
jns
dec
bound
repnz
stos
loop
test
sub
mov
or
adcb
push
imul
mov
mov
add
xchg
dec
xor
imul
imul
into
stc
ror
sbb
push
mov
sbb
add
lock
dec
or
repz
mov
lea
sahf
cmp
push
xor
test
test
loop
out
mov
dec
adc
pop
mov
add
xchg
test
and
jmp
das
jnp
in
into
ja
and
fwait
gs
sbb
pop
imul
and
and
xchg
and
out
mov
sub
sub
les
adc
xchg
push
cmp
pop
add
dec
fdivrs
lret
out
mov
xor
or
xor
outsb
mov
mov
mov
push
mov
mov
ror
fimuls
add
movsb
cmpsl
fstps
cmpsb
sbb
xchg
xchg
add
ja
out
push
ret
call
lea
gs
outsl
jecxz
inc
lcall
int
pop
bound
and
sahf
movsl
cltd
add
lock
icebp
cmp
mov
xor
sbb
bound
sub
cmp
pop
pop
imul
lds
in
push
mov
popa
or
mov
incl
and
fsincos
fists
loope
out
mov
in
fld
leave
insb
mov
push
dec
fcoms
cwtl
mov
jbe
les
out
jo
subl
test
push
es
push
jae
jmp
stos
xchg
mov
fdiv
add
scas
imul
addb
test
jg
dec
iret
xor
rcrb
xchg
cmc
adc
scas
or
cmp
or
cmp
std
mov
sub
enter
sbb
adc
arpl
jg
cltd
cmp
add
sarb
dec
cmp
mov
push
nop
lock
and
nop
test
add
add
cmp
icebp
pop
pushl
jmp
iret
pop
iret
aas
mov
out
or
mov
sahf
fmull
lods
jb
or
inc
in
mov
or
xor
std
inc
add
cwtl
xchg
call
mov
push
ja
rol
lock
inc
test
push
dec
fstl
xor
cmp
cmp
xchg
ror
ret
in
push
lret
leave
fisubrs
ds
and
push
stc
push
lcall
inc
popf
test
mov
mov
and
int3
sub
outsb
xor
or
sbb
popa
mov
addr16
mov
sub
arpl
inc
insl
adc
xchg
test
add
mov
push
jnp
adc
stos
out
cwtl
mov
insb
xor
mov
pop
xchg
cmpsb
loopne
fimull
mov
cmp
mov
inc
jno
inc
mov
pop
pop
xor
pop
nop
pusha
sub
clc
fst
pushf
xchg
xchg
sub
rorl
mov
js
cmp
add
push
fists
cmp
pushf
shl
shlb
adc
gs
jnp
jne
lret
push
call
sarl
pop
test
mov
loop
testb
xchg
inc
fistpll
insb
out
jmp
xchg
mov
icebp
sbb
cwtl
cmc
das
sub
and
push
dec
sbbb
mov
testb
xchg
in
notl
add
cmp
pop
js
outsl
fisttpll
std
jecxz
fildl
mov
dec
inc
lock
jb
pop
enter
das
leave
push
adc
jbe
mov
push
inc
sbb
jnp
or
adc
jae
inc
and
pop
jns
into
sbbl
inc
mov
mov
dec
add
or
loop
sbb
sti
cmp
cwtl
lahf
adc
ret
lea
pushf
insb
mov
mov
sbb
in
notl
push
or
jnp
arpl
sub
aas
pop
xchg
nop
cmp
mov
xor
dec
in
mov
dec
sti
mov
adc
xchg
push
or
xchg
and
and
ljmp
mov
je
xor
sarb
fwait
mov
adc
jecxz
jge
dec
fnsave
rolb
mull
cmpsl
mov
mov
pop
pop
cltd
mov
sub
orl
inc
or
mov
mov
and
mov
inc
ja
xchg
daa
sbb
cs
gs
pusha
pop
addr16
dec
inc
sub
fstpt
dec
add
pop
cmc
nop
add
add
daa
push
mov
cmp
jne
mov
rcr
lods
or
jmp
stc
sbb
push
std
cld
test
lods
scas
mov
outsb
es
cs
cmp
pop
cmpsb
mov
cmp
lcall
pop
mov
push
int
bound
cmpsb
lods
xlat
int
into
jmp
xlat
inc
xlat
pop
icebp
rcl
fwait
cmp
jmp
sub
jo
out
inc
mov
sub
jno
fidivrl
outsl
fldenv
insl
mov
idivb
je
rclb
jle
orb
fmulp
enter
in
jmp
pop
loop
dec
and
mov
mov
pop
push
pop
clc
jae
pop
sahf
pop
hlt
pop
jae
or
sbb
fisubl
jo
or
sub
or
pop
aas
and
pop
push
jo
test
lahf
adc
pop
aam
ss
jecxz
mov
pop
adc
push
int3
das
call
mov
mov
add
ljmp
xor
sbb
pop
fs
xchg
leave
inc
insl
aad
cs
insb
xchg
adcb
pusha
dec
insb
ds
cs
mov
add
faddl
jp
or
cmc
je
xchg
clc
cmp
push
xchg
jno
and
test
add
stos
sub
rol
movsb
insb
test
adc
mov
or
cs
es
mov
jmp
jae
jno
push
xchg
xchg
xlat
callw
inc
clc
sbb
adc
sbb
mov
cmpl
bound
cli
pop
aas
clc
cmpsl
daa
mov
and
push
mov
jecxz
jne
jge
pop
push
loope
gs
xor
cs
push
int
daa
push
xchg
es
movsb
dec
and
push
mov
add
sbb
adc
fnstsw
add
aam
mov
out
push
inc
inc
sub
aas
dec
aad
call
les
call
mov
dec
jno
sbb
xorl
cli
insb
or
mov
clc
into
push
dec
push
jb
test
inc
cmp
call
push
ja
cmp
jle
sahf
or
out
push
aas
frstor
push
repz
pop
pop
stos
test
mov
in
or
decl
repz
inc
fldcw
insb
sub
cmp
inc
cmpsl
push
adc
pminub
mov
sahf
mov
or
fisttpll
hlt
les
mov
inc
sbb
arpl
adc
cmpsl
and
dec
xchg
push
jns
xor
fs
or
imul
sbb
xorb
cmpsl
or
stos
xchg
sbb
add
les
pusha
pop
mov
outsb
add
xchg
mov
lods
cmp
pop
mov
inc
into
mov
sbb
fstps
stos
cmp
out
mov
add
das
cmpb
repnz
cltd
push
sbb
pop
inc
ja
shll
add
jo
movsb
dec
mov
aas
cvttps2pi
sbb
jge
aaa
jo
mov
loop
jmp
movsl
loopne
sbb
dec
pushf
xchg
push
fwait
push
ret
test
fbld
sub
and
shr
sti
loopne
mov
out
mov
jnp
movsl
shl
lods
push
jae
add
addb
lcall
mov
lds
cmp
push
and
sbb
sub
pop
add
adc
pop
add
rcrb
mov
lock
mov
je
dec
enter
aaa
subl
push
fwait
jo
lock
mov
icebp
push
jno
cld
fs
jl
aas
mov
xchg
in
pushf
imul
aam
cmp
andl
inc
cmp
cwtl
xor
ja
mov
arpl
fsubs
xor
dec
sbb
cli
push
push
scas
ss
std
inc
arpl
cmp
movsl
dec
push
lea
mov
xchg
cltd
push
pop
rorb
xor
adc
push
add
push
mov
in
push
jmp
sbb
mov
add
shll
into
cmp
xor
cmpsl
out
in
iret
add
lea
mov
pop
lret
pop
out
jecxz
out
imul
inc
push
xor
push
sahf
lea
lret
push
add
xor
mov
or
sbb
xchg
ss
add
fsubr
jg
or
cmp
dec
xor
out
jge
outsb
stc
mov
mov
push
mov
lret
lds
fbld
xchg
call
jecxz
push
mov
into
scas
mov
sub
lahf
out
test
pushf
repnz
xor
orl
hlt
cltd
adc
inc
in
inc
aaa
inc
sub
mov
sbb
cwtl
cmpsb
cmp
inc
mov
push
pop
jecxz
lock
sbb
aas
add
mov
mov
ss
add
mov
les
std
xor
mov
dec
scas
rorb
faddp
fstl
adc
rclb
lock
leave
add
data16
shr
jb
aaa
sub
xor
push
stos
add
jae
fnstsw
push
cs
sbbb
out
xchg
ja
mov
pop
insl
or
enter
loopne
cmp
int3
frstor
stc
or
push
pop
outsl
cmp
in
pop
xlat
dec
mov
lds
fsubl
push
movntss
aam
mov
js
scas
outsb
jb
inc
ja
jno
cs
cmp
std
and
xchg
jle
dec
mov
aad
pop
lahf
or
add
mov
mov
sbb
add
shll
inc
dec
ja
dec
pop
jae
dec
fmulp
in
jmp
vcvtsd2ss
push
xor
dec
xor
cmp
cmp
dec
or
xor
stc
xlat
pop
les
push
dec
lea
xor
push
xchg
cli
mov
mov
inc
jno
cmpsl
popfw
fwait
and
cltd
lods
cmp
jge
sti
mov
cmpsb
mov
and
or
sbb
ja
push
adc
sahf
mov
insl
sbb
insb
repnz
pushf
mov
mov
scas
push
or
arpl
add
jne
mov
mov
fs
fdivrs
push
cwtl
adc
mov
std
pop
sahf
leave
jnp
push
imul
jno
jno
xor
sub
cmpb
mov
insl
jb
adc
popa
pop
jb
mov
push
xor
mov
mov
pop
push
mov
out
fwait
push
lea
lahf
int3
mov
fildll
mov
loopne
pop
jecxz
test
sbb
adc
dec
xchg
insl
loope
and
cmp
sbb
imul
xor
mov
mov
mov
imul
push
push
fs
pop
call
pop
adc
sahf
mov
rorb
shrd
mov
mov
mov
xor
and
daa
lret
pop
push
gs
insl
loope
or
mov
push
std
mov
xor
mov
rcr
bound
xchg
push
or
inc
movsl
and
jg
or
in
lea
incb
stos
mov
mov
outsb
inc
push
mov
cltd
les
mov
loope
call
dec
in
jge
pop
fsts
mov
rclb
iret
and
and
test
mov
xorb
cs
xchg
sbbb
mov
xor
fsub
lock
mov
lock
add
sbb
lcall
sbbl
add
inc
loop
jne
pop
scas
mov
mov
xor
daa
fstps
xchg
in
jno
dec
push
or
scas
mov
push
add
test
pop
fstl
xchg
rolb
mov
push
nop
imul
es
repnz
leave
and
fnstsw
jle
sarb
xchg
sub
add
daa
push
in
in
jbe
inc
movsl
pop
jmp
in
test
hlt
push
adc
and
imulb
movsl
lods
mov
insl
mov
ror
jae
arpl
scas
xchg
ljmp
mov
out
push
lock
les
in
pushf
ss
mov
jne
adc
xor
shl
jl
xchg
icebp
insl
popa
lret
push
xor
push
dec
stc
cmp
pop
or
or
xchg
dec
cli
inc
shlb
mov
xchg
stos
pop
arpl
imul
pop
aad
pop
pop
or
pop
lea
xor
jp
pop
push
sbb
mov
sub
shl
insl
pop
popf
adc
mov
mov
mov
insl
mov
int3
rcrb
add
xchg
jne
aad
ss
pop
hlt
repz
imul
hlt
scas
cmp
cmc
mov
cmpsb
imul
outsl
aam
or
push
insl
loop
rcll
dec
push
and
insl
rorl
aam
pop
and
adc
add
push
xor
mov
je
mov
mov
cmpsb
ja
cmpsb
mov
pop
das
adc
fldt
add
cmc
sahf
cld
cmpsl
out
mov
orl
add
xchg
movsw
jl
pushl
inc
adc
lods
andb
insb
mov
aas
mov
ljmp
notb
xchg
add
imul
lock
mov
and
inc
test
lahf
xchg
push
adc
xchg
js
push
outsl
adc
icebp
clc
dec
lods
sub
jae
xchg
and
push
xlat
and
push
pop
add
ud0
xchg
push
sbb
jle
jo
add
je
jnp
incl
pop
jl
pop
lret
aaa
lret
xchg
sub
mov
sub
mov
xchg
cltd
push
mov
repz
jae
pop
mov
stos
jb
fwait
nop
lahf
gs
rcrb
fldenv
push
adc
lods
fcoml
imul
mov
aad
dec
dec
add
mov
into
int3
fs
fs
repnz
pop
sub
push
pop
dec
add
adc
mov
mov
pop
adc
mov
adc
rol
or
xchg
mov
jbe
cld
inc
or
mov
xor
cld
sahf
push
ficoms
imul
dec
mov
mov
dec
aam
jno
mov
mov
pop
push
mov
xchg
sarb
dec
fisubl
adc
lock
fptan
stos
ja
lods
loope
into
jbe
cli
fmul
ss
inc
mov
push
dec
pop
add
jmp
lcall
sbb
inc
jmp
xchg
sub
sti
push
test
push
xlat
mov
stc
in
loop
pop
or
mov
mov
add
bound
icebp
ja
jnp
mov
js
test
mov
ss
cs
aaa
popa
roll
add
enter
cs
mov
dec
push
aam
mov
sbb
movsb
pop
add
xchg
and
repnz
or
stc
mov
mov
jb
lret
and
adc
dec
ret
movsl
call
sub
sarb
lea
sub
push
pop
mov
jecxz
arpl
push
fcomp
sub
fldenv
xor
sub
cwtl
xchg
or
cmp
cmp
leave
iret
ret
ret
jl
dec
lahf
out
pop
loope
sub
insb
xchg
pop
pusha
lods
inc
jbe
xchg
adc
test
and
xchg
es
xchg
sahf
add
daa
xlat
push
imul
test
jge
jle
and
inc
movsl
add
insl
iret
aam
jne
mov
and
push
out
xchg
mov
xchg
outsl
mov
mov
dec
and
cmp
xchg
pop
int3
stc
aam
bound
scas
jb
and
aas
xor
mov
push
mov
or
jge
lahf
push
sbb
test
sub
pop
lods
add
jmp
ljmp
cmp
xor
and
out
cs
data16
sub
mov
hlt
scas
bound
mov
or
rcr
das
inc
cmp
xchg
dec
dec
jecxz
into
not
jge
xchg
sbbl
push
mov
gs
mov
out
push
xchg
sbb
bound
ret
adc
cmp
mov
stos
cmc
pop
push
jo
imul
dec
gs
sbb
inc
adc
adc
stos
shlb
rcrb
cmpsl
mov
lds
std
inc
push
lock
ds
lret
repnz
jge
repz
xor
or
bswap
pop
mov
stos
pop
and
hlt
push
lret
or
mov
hlt
jl
and
flds
cmp
mov
arpl
or
test
dec
inc
in
fld
ds
cmpsl
lea
adc
data16
in
ja
pop
fsub
inc
ljmp
sub
pop
mov
cmp
nop
outsl
sbb
les
jecxz
adc
mov
pop
inc
sbb
fstl
ss
jp
outsb
insb
cmc
scas
les
call
push
imul
ja
push
jne
mov
clc
sbb
sbb
jl
mov
pushf
dec
adc
dec
movsb
das
mov
bound
pop
leave
daa
pusha
dec
aam
add
std
xor
lret
gs
xor
xchg
pop
fdivrs
mov
xor
sub
aam
ds
jae
dec
pop
fcomip
out
jo
or
rcll
subb
hlt
out
jp
andb
cltd
xchg
and
mov
jg
push
jo
nop
or
enter
cld
loop
inc
test
and
nop
pop
sub
insb
insl
rcr
sahf
pop
xor
repz
xor
xacquire
push
loop
lcall
mov
roll
pop
inc
cmc
and
shl
scas
and
and
mov
jmp
clc
mov
and
lahf
icebp
mov
push
and
xlat
or
mov
mov
in
inc
mov
fmull
add
imul
push
xlat
inc
inc
cmp
mov
lock
mov
enter
call
mov
cmpsb
push
mov
push
xchg
sub
sbb
lock
repnz
out
pop
mulb
ds
pusha
lret
popa
lcall
mov
mov
mov
lea
shlb
and
adcb
ljmp
cmp
scas
pop
xor
adc
iret
data16
sub
jl
loop
mov
adc
xor
and
mov
xchg
pop
icebp
xchg
lods
add
aam
cmp
cmp
pop
xchg
dec
or
cwtl
iret
dec
push
jne
pop
jp
ret
jecxz
xor
jae
loopne
imulb
or
popf
xor
in
daa
or
into
ja
and
repz
bound
push
test
push
fimull
inc
lret
scas
xchg
jns
add
cmc
and
sub
dec
adc
aam
cmp
testl
push
out
jbe
jle
jmp
out
mov
jecxz
pop
adc
mov
repnz
fcmovne
repnz
imul
cmp
inc
out
pop
pop
mov
add
push
cli
cmp
push
fs
movsb
imul
mov
divb
lret
setae
dec
or
and
sub
or
cmp
cmpsl
jle
icebp
shr
popf
mov
je
pop
leave
lea
sub
or
mov
cld
jae
push
sbb
pop
js
fcomi
mov
cld
lods
jge
scas
fnstcw
std
xorl
push
insb
adc
mov
jge
stos
adc
lods
or
sbbl
push
lahf
jg
pop
and
lcall
rolb
stc
ror
adc
push
sub
push
sbb
cmc
add
test
fwait
push
lret
push
sub
xor
pop
sti
lea
push
fsub
and
fwait
cwtl
jnp
mov
mov
mov
push
sbb
push
mov
and
pop
jnp
jmp
inc
mov
nop
inc
aas
or
cmp
dec
sbb
jecxz
jl
cmpsb
mov
dec
and
insl
data16
fsubl
aaa
xor
idiv
out
int3
outsl
sub
ja
test
push
push
adc
pop
jns
out
sub
mov
ror
mov
push
xchg
xchg
cli
xor
jp
jp
adc
addr16
popa
adc
clc
test
jl
inc
add
leave
js
sub
adc
cmp
sbb
xor
mov
into
lret
mov
mov
iret
pop
cmpsb
cmp
sbb
insb
int
jecxz
mov
pop
xor
inc
cmp
arpl
outsb
icebp
xor
bound
pushf
ret
push
test
jg
sub
xchg
fucom
mov
mov
or
loopne
mov
cld
and
or
in
xchg
cwtl
push
sbb
rcrb
dec
addr16
mov
stos
cld
inc
adc
insl
push
scas
pop
aam
mov
adc
popa
dec
inc
cmp
push
pop
in
ds
hlt
adc
xchg
mov
mov
xchg
pop
mov
movb
ss
addr16
jmp
pushf
xor
or
fwait
mov
and
jle
fcoms
jecxz
sub
addr16
cmp
cltd
add
call
xor
nop
xchg
fsubrs
xor
je
add
xor
daa
xor
xchg
push
push
mov
pop
add
popf
push
aad
aad
pop
mov
pop
pop
jmp
add
push
scas
add
or
xchg
insb
mov
sub
shlb
xchg
ja
sbb
ss
fstl
xchg
push
stos
mov
pushf
ljmp
scas
pop
pop
std
or
std
or
sub
cmpsl
in
movsl
push
ja
rcrb
and
scas
and
je
jp
lods
inc
aas
dec
pop
in
mov
ret
jecxz
imulb
daa
mov
dec
cmp
dec
test
imul
mov
je
out
sub
jns
leave
mov
xchg
push
adc
add
sub
cmp
cmpsb
out
popl
out
mov
ret
sub
out
lods
add
or
sub
js
cmp
xchg
mov
jb
data16
fstps
xchg
cvtps2pd
pop
movsb
xor
adc
pop
push
nop
xchg
jle
test
sub
call
in
call
inc
imul
inc
stos
divl
mov
imul
jb,pt
jge
int3
stos
ljmp
icebp
mov
iret
fldcw
add
clc
js
hlt
mov
rcl
jg
pop
scas
sar
jb
and
pop
push
pop
mov
inc
rorl
call
int3
pop
adc
and
sub
sbb
xchg
dec
sub
das
out
clc
inc
mov
sbb
test
cli
nop
push
xchg
mov
pop
aas
loopew
mov
cmp
into
test
mov
push
shr
test
sub
leave
movsb
dec
das
imull
mov
out
add
sub
loope
xchg
mov
mov
xor
decb
aas
fistpl
pop
imul
in
fnstsw
or
ret
push
dec
mov
repnz
push
ja
jge
out
rorb
mull
mov
push
testl
sahf
aad
orb
enter
adc
xlat
push
aaa
inc
xchg
scas
fstpt
lods
add
jecxz
lods
jge
bound
cs
cwtl
rcrl
dec
jb
flds
mov
in
jp
cmpsl
rolb
pop
aaa
adc
and
test
push
dec
adc
std
pop
inc
xor
cwtl
movsb
and
bound
mov
inc
mov
mov
add
pop
cmp
jg
ja
loopne
out
out
dec
in
mov
scas
fsts
push
mov
daa
mov
push
pushf
and
cmc
push
xchg
xor
aaa
cmp
jne
xchg
mov
clc
movsl
je
xchg
lock
sub
gs
dec
and
mov
sbb
mov
mov
loope
int
xor
imul
lahf
out
outsl
pusha
int3
mov
nop
xchg
in
sub
insl
mov
and
lcall
mov
xor
adc
xor
ljmp
sub
aad
cmp
cmpsl
sbb
pop
test
int
pop
lock
lds
adc
rcll
sbb
xchg
inc
ficompl
and
push
mov
or
negl
and
xlat
lock
inc
jo
adc
ret
ror
push
push
sub
jmp
jns
jno
ljmp
add
outsb
xchg
lea
aam
pop
shlb
jmp
aad
cli
pop
sub
and
inc
outsb
inc
add
fsub
xor
mov
mov
xchg
aas
jp
jmp
sbb
push
ret
sub
lock
mov
sub
mov
mov
out
push
outsl
xchg
push
add
xor
or
push
ljmp
sbb
pop
sbb
shll
hlt
das
pop
scas
adc
push
mov
sub
into
add
adc
dec
push
cld
dec
cli
sbb
outsb
addl
aaa
ja
push
pop
mov
movsb
xchg
test
cld
imul
pop
loopne
xchg
xor
ljmp
and
outsl
les
pushf
out
nop
or
loopne
ficomps
nop
pop
data16
imul
loopne
into
push
adc
xchg
xor
push
mov
or
ficoml
orb
loope
and
in
inc
aad
mov
xchg
sub
xchg
adc
insb
icebp
jge
movsb
rcll
dec
cmp
xlat
cmpsl
pop
ret
xchg
movsl
ficomps
jmp
jl
jno
cmp
rolb
arpl
fstl
inc
jns
mov
jl
nop
in
fidivrs
adc
arpl
pop
push
and
fldt
fisubl
push
push
out
mov
push
cmpsb
and
pop
fiadds
pop
call
jge
or
pop
jge
mov
adc
outsl
mov
dec
jle
les
dec
jno
cmp
mov
sub
sahf
sub
xchg
push
mov
fldenv
add
dec
or
lcall
fadd
insl
rolb
push
stos
insb
stc
and
add
sub
mov
dec
xor
xchg
fildll
fiaddl
push
add
cld
push
or
xor
cmp
jnp
xchg
mov
adcb
idiv
iret
push
sub
aaa
pop
jno
inc
lods
mov
stc
adc
pop
inc
adc
sbb
mov
popf
pop
xchg
aaa
cld
push
mul
mov
dec
xor
jecxz
sbb
pop
scas
shl
clc
or
nop
rcr
ficoml
mov
rcrb
daa
or
popf
sub
stc
rcrb
inc
dec
fstpt
mov
mov
into
je
aam
pop
sub
icebp
sub
pop
leave
in
mov
fisubs
or
test
jae
cmp
xor
and
sub
cmp
es
cmpsl
and
data16
cwtl
jno
xchg
dec
mov
ror
movsb
mulb
dec
cltd
aaa
push
int3
inc
mov
xchg
shll
imul
push
mov
jmp
pop
inc
mov
mov
fs
sub
jno
jl
or
movsb
add
mov
movsb
push
nop
and
mov
lods
pop
repnz
stos
scas
add
sbb
add
or
or
test
xchg
and
sub
lock
cmp
mov
es
dec
add
sar
dec
iret
xor
sti
mov
fisubl
mov
sub
mov
test
aaa
stos
xlat
dec
fidivrs
pop
or
jmp
loop
mov
movsb
sbb
mov
jno
out
dec
ljmp
addl
aaa
pop
aas
sub
loopne
pop
test
cmp
rcll
mov
cld
xchg
stos
test
push
pop
adc
test
lock
mov
icebp
outsl
in
inc
leave
insb
lods
lahf
add
push
rorb
dec
cmp
adc
xchg
mov
pop
test
push
lret
stos
lock
mov
call
mov
pop
ds
imul
and
and
or
jo
mov
iret
mov
push
cmc
subl
insb
leave
fsubrp
jecxz
pop
mov
add
xchg
inc
clc
jp
cmp
push
loop
fmuls
iret
push
mov
loop
outsb
mov
stos
roll
clc
cs
jbe
add
mov
daa
sbb
pop
std
xor
fdivl
cmpl
xor
gs
lock
pop
inc
dec
imul
xor
pxor
clc
mov
sub
xor
or
xor
cmp
out
lock
xor
mov
add
adc
pop
sarl
mov
mov
adc
and
imul
jle
lock
mov
inc
les
icebp
push
in
lcall
in
ss
add
lret
mov
out
test
xor
outsl
pop
enter
and
xlat
in
pop
push
jecxz
roll
inc
push
push
dec
pop
push
adc
mov
aad
lahf
lods
cmpsl
sarl
push
cmp
sub
imul
enter
sahf
sub
mov
xorb
mov
lret
roll
cld
scas
or
enter
mov
cs
or
je
sub
outsl
mov
aad
pop
cmp
mov
push
repz
int3
out
loop
mov
fidivrs
dec
lds
cmpsl
daa
out
and
lea
call
dec
pop
jle
addr16
js
scas
loop
std
lcall
fsubrs
sub
sarb
les
xor
adc
fcmovnbe
in
cmp
mov
mov
xchg
push
inc
jmp
pop
pop
xlat
loope
mov
jae
int
loopne
push
ss
mov
inc
inc
pop
cltd
lcall
cmpsl
and
jno
adc
jecxz
test
xchg
or
cmp
in
das
fdivrl
iret
sbb
lods
jle
push
mov
testb
and
dec
adc
add
xchg
in
ja
push
sbb
inc
and
xchg
push
dec
iret
iret
xor
fdivl
in
jo
outsl
jmp
in
pop
push
outsb
jg
add
add
ja
lret
icebp
in
dec
push
int3
or
fs
cmpsb
lahf
push
cs
push
leave
testb
test
cmp
push
bound
pop
mov
dec
mov
bnd
pop
stos
xchg
mov
dec
or
sub
das
xchg
stos
aad
sub
and
xchg
mov
outsb
icebp
sub
lods
lock
shlb
pushf
in
push
fstpl
test
cmp
add
adcl
scas
mov
adc
jle
sub
stos
push
mov
mov
xchg
cmpsb
cltd
jnp,pn
jle
pop
cwtl
mov
sbb
mull
xorl
pop
sub
fiadds
cmc
popl
push
into
in
test
sub
cmc
cs
mov
sub
inc
lahf
sahf
and
fldenv
arpl
sbb
cli
mov
icebp
inc
divb
fstpt
subb
push
cwtl
push
inc
jb
xchg
inc
cld
inc
push
mov
into
mov
lret
mov
mov
xor
or
daa
data16
sbb
jg
incl
jb
cmp
or
loop
push
lea
sbb
pop
or
xchg
jae
pushf
lds
es
ror
rcr
leave
or
xorl
testl
lock
addb
jno
cmp
adc
adc
fwait
mov
pop
bound
lret
test
mov
aas
gs
sbb
sbb
jb
pop
adc
es
unpcklps
ljmp
insl
push
pop
aaa
cmp
pop
adc
mov
lds
ror
pop
jge
pop
sbb
push
mov
ja
cmpsb
add
inc
in
int
mov
ss
lcall
cs
aam
push
jecxz
mov
hlt
mov
out
xchg
sbb
sub
aaa
fwait
enter
sbb
mull
inc
in
xor
mov
sub
pushf
aaa
jnp
pop
pop
or
jecxz
out
clc
lods
das
or
jmp
inc
stc
xchg
mov
sub
shrb
shll
icebp
andl
xchg
sahf
adc
dec
pop
cwtl
push
cmp
fldl
insb
orb
xor
repz
rclb
lods
pop
sbb
pop
and
scas
daa
pushf
xchg
loopne
sub
mov
push
adc
jbe
sbb
negl
inc
lods
mov
cmpl
testl
mov
pop
loope
mov
mov
mov
stos
addr16
std
ret
outsb
push
stc
ljmp
inc
decl
add
cmpsl
pusha
nop
sub
dec
or
iret
sub
mov
inc
clc
push
push
insl
jo
xchg
cmpsb
adc
scas
pop
mov
pop
test
ss
xor
dec
cli
fsubrp
loop
sbb
xchg
test
test
pop
cmp
mov
mov
add
pushf
sub
add
mov
out
jae
pop
xor
jne
lret
pusha
xchg
outsl
xchg
push
inc
add
out
sahf
jne
add
imul
and
add
rcrb
fiadds
pop
test
xchg
addr16
std
cmc
lds
push
pushf
sbb
fisttps
roll
mov
dec
sti
jnp
cmp
push
faddl
xor
mov
cltd
fs
xlat
adcl
mov
cs
pop
jno
jno
cmp
pop
mov
xlat
iret
jb
xchg
and
inc
dec
or
jne
mov
test
leave
sbb
cmp
outsl
cmp
cli
mov
lcall
push
dec
shr
add
pop
mulb
mov
push
rclb
ljmp
adc
push
and
adc
lock
mov
add
lock
adc
xchg
cmp
jnp
adc
in
adc
add
mov
and
push
cmp
jns
fnstenv
loop
sbb
fidivl
clc
jno
jp
arpl
adc
fistps
xor
push
repnz
adc
test
mov
dec
leave
lods
ret
daa
mov
cwtd
ret
data16
cmp
mov
mov
and
mov
data16
jg
dec
dec
stc
push
mov
sub
adc
add
sbb
mov
scas
dec
in
sub
add
push
ja
and
ja
xchg
fidivs
ja
jne,pn
push
mov
add
stos
mull
and
ret
mov
lods
out
xor
fisttpl
jle
call
mov
in
pop
mov
mov
insb
ljmp
jl
jmp
shll
push
mov
fistpll
mov
pop
outsb
icebp
sub
rcll
sbb
jbe
arpl
jl
dec
sub
mov
cmp
sbb
test
jl
xchg
xchg
sub
fcomi
loopne
rcrl
iret
pop
orb
fcomps
push
cmpsb
mov
inc
sbb
inc
cmpsl
nop
fnstcw
in
mov
jo
xlat
sbb
jo
inc
dec
fdivr
dec
adc
repz
sarb
pop
mov
pop
inc
out
les
mov
xchg
gs
mov
lea
stos
stos
mov
pop
adc
pusha
andl
mov
std
rolb
popl
pop
in
push
out
xchg
dec
jecxz
insl
call
mov
xor
neg
xor
std
jecxz
ds
ret
push
iret
add
xchg
and
icebp
mov
mov
and
cmpsb
movsl
and
cmp
fwait
sub
repz
fsubr
xchg
cmc
es
int3
cs
xchg
mov
cmp
fcompl
and
inc
sbb
xchg
in
sub
aam
sub
push
out
out
dec
dec
imul
andb
popa
jb
rcl
mov
fsubrl
aaa
adc
pop
mov
jge
orb
xchg
outsl
in
jno
mov
mov
mov
les
adcl
adc
je
push
and
sbb
sti
int3
or
jmp
cmp
lret
lahf
xchg
loope
cmc
cmpsl
or
pop
jne
int3
sub
xchg
jp
jbe
xchg
mov
adc
lea
xchg
jo
out
xchg
mov
mov
sbb
or
cs
or
lods
mov
pushf
sbb
push
int
fnstcw
notb
push
and
mov
pusha
mov
mov
mov
jo
fiaddl
sbb
mov
inc
enter
pop
test
cs
mov
ljmp
xor
lahf
xor
sbb
push
xchg
imul
icebp
imul
rclb
add
out
loop
cmp
mov
insb
lds
xlat
insb
das
int3
arpl
fisttps
mov
js
bound
xor
hlt
add
mov
xor
fmuls
hlt
dec
mov
scas
notb
sub
push
fmull
dec
hlt
push
sub
mov
movsb
xor
imul
push
xor
push
lret
aad
inc
sbb
and
outsb
pop
adc
ss
scas
dec
dec
cs
stc
insl
push
jl,pn
mov
int3
sbbl
in
mov
lahf
sbb
sarb
mov
jle
pop
clc
sbb
jnp
out
das
test
or
xchg
pop
pop
out
sub
mov
and
or
test
jge
cmp
cltd
es
add
push
sub
shl
ss
sub
pop
mov
push
and
addr16
cwtl
pop
mov
xchg
mov
sub
rcrl
addr16
pop
jg
push
popa
or
sub
push
pop
ljmp
leave
cmp
fnsave
mov
andl
adc
rolb
js
dec
rclb
push
or
inc
mov
mov
dec
stc
pop
jns
sub
ret
cld
adc
lods
fistps
or
in
sti
popa
inc
orb
xlat
jg
mov
ja
mov
adc
mov
dec
inc
push
pop
pop
jb
cmpb
das
addr16
hlt
sahf
movsb
das
mov
mov
jb
cli
into
nop
xor
andl
jne
or
in
call
lods
dec
in
clc
mov
sarl
mov
xlat
mov
or
repz
popf
cmp
iret
fs
xor
popf
ret
sbb
cmc
pop
or
sbb
stc
dec
mov
dec
mov
and
idivl
xor
and
stos
cmpsl
pop
ja
jge
ret
aad
mov
inc
mov
jbe
clc
jg
and
mov
scas
arpl
jae
jp
outsb
leave
ja
inc
roll
mov
jmp
jnp
icebp
cmpsl
fs
mov
imull
int
into
mov
sbb
sbb
movsl
in
or
ret
sti
orl
jge
imul
cmp
in
nop
cld
pushf
std
mov
stos
jge
fptan
push
ret
int3
imul
mov
pop
jne
into
ljmp
sbb
push
adc
pop
out
mov
ffreep
stos
fsubp
mov
testl
jnp
lcall
lret
ret
pop
lods
lock
insb
in
push
out
xchg
jle
cwtl
stc
xchg
or
mov
lods
mov
leave
or
xlat
rcll
sub
mov
sub
sub
xchg
pop
outsb
pop
jecxz
mov
jle
loope,pn
jle
mov
popf
xchg
xor
stc
cli
ss
sub
or
mov
xchg
mov
or
lock
arpl
test
xchg
test
mov
lahf
pushf
ljmp
jl
dec
imul
orl
mov
xorl
gs
and
mov
in
dec
pushf
mov
loop
scas
or
ret
rcrl
mov
into
pop
aas
or
movb
loop
push
lds
pop
jge
outsl
xor
or
add
xor
out
stos
jbe
cmc
inc
enter
push
mov
mov
pop
xchg
out
and
movsb
dec
push
or
cmpsl
dec
ja
cwtl
push
sub
lret
sbb
and
fs
arpl
fs
sub
sbb
imul
arpl
enter
xchg
mov
aam
mov
scas
stos
js
loopne
jno
push
mov
bound
icebp
call
dec
rclb
and
inc
sbb
jb
xchg
jecxz
pop
add
addr16
out
mov
dec
or
dec
adc
push
sub
sarb
mov
rcll
dec
mov
mov
sbb
fsts
mov
jb
mov
inc
mov
add
or
leave
dec
dec
adc
or
adc
or
int
sub
push
test
loop
rcrb
imul
xchg
jmp
pushf
sahf
adc
movsb
ret
popf
lds
insl
aam
sbb
adcl
pop
nop
mov
lret
lahf
mov
xchg
or
sahf
lret
xor
xchg
jl
fldt
jmp
out
cwtl
lret
popa
ss
xor
int
mov
push
ja
xchg
cs
movsb
movsb
popa
repz
pushf
sbb
mov
scas
pop
testl
pop
xchg
jge
jle
xor
jmp
stos
shl
push
in
fsub
mov
pop
gs
sub
repnz
lret
sub
jne
or
out
adcl
mov
fs
pop
mov
iret
test
nop
lock
and
dec
jne
fisubl
aaa
jnp
adc
mov
xor
cmp
jmp
dec
push
sahf
inc
sbb
sahf
dec
lods
imul
lock
add
mov
mov
jle
jbe
push
add
pop
jnp
xchg
jle
cmp
sub
push
popf
sbb
inc
push
sbb
adc
or
test
xchg
xchg
xor
mov
mov
jne
leave
pop
enter
cmpsb
and
loope
scas
mov
add
inc
iret
or
out
jmp
icebp
xor
pushf
es
mov
jbe
gs
xor
sbb
repnz
add
arpl
pop
mov
add
aad
or
fcoml
test
xchg
hlt
xchg
push
in
lret
mov
xor
and
inc
dec
adc
mov
cwtl
mov
cmpsl
icebp
mov
iret
adc
dec
or
xor
add
mov
int
jmp
or
and
fisubrl
lods
int
ss
add
and
cmc
loop
out
shl
stos
movsl
dec
lods
mov
sbb
out
sub
mov
xor
fwait
mov
cli
adc
mov
insl
mov
call
xchg
sarb
push
popa
lahf
loop
les
lea
jle
stos
xchg
inc
in
dec
int3
sbbb
hlt
rolb
insb
lret
push
lods
pop
adc
xchg
dec
or
push
sahf
cmp
iret
lret
arpl
push
dec
pop
pop
loopne
out
fstl
jo
shlb
loopne
mov
cmp
ret
or
mov
xchg
gs
or
or
inc
cmp
cli
cld
inc
out
add
pop
xchg
mov
out
cmpsl
iret
sub
lods
mov
dec
adc
sbb
pop
mov
push
bound
int3
icebp
and
lret
adc
stc
into
ss
sub
scas
adc
popa
lret
or
pop
test
out
sub
mov
push
and
repz
cwtl
or
cs
and
sub
adc
xor
mov
fidivrs
adc
arpl
aam
and
lods
pop
sbb
sarl
jp
or
imul
sbb
mov
adc
push
lea
dec
pop
lahf
imul
mov
mov
push
xor
cmp
dec
jmp
dec
xchg
cmp
mov
jge
jg
dec
inc
sub
and
jg
ja
subl
outsb
repz
cmp
and
std
es
dec
cli
xchg
dec
lock
jno
loop
sbb
push
or
or
pusha
cmp
xlat
xchg
jge
cmp
test
adc
js
notl
out
push
mov
lds
mov
mov
jg
scas
sub
shlb
bound
mulb
xchg
xchg
lods
cmpsb
ja
test
popa
adc
xchg
pushf
jle
mov
outsb
mov
inc
scas
dec
and
stc
pop
cltd
je
fldt
out
inc
pop
pop
and
out
je
aam
push
and
test
sub
sti
lds
xor
mov
test
push
test
adc
cmpsl
cs
jg
pop
mov
pop
xor
fnsave
fwait
addr16
adc
or
push
or
sub
aad
adc
dec
xorb
sti
mov
add
gs
sar
push
cmp
mov
sbb
xadd
out
or
mov
addr16
cmp
inc
sbb
lret
xor
rcll
add
stos
inc
pop
ret
fbstp
jle
lock
push
pop
and
xor
fmull
or
rcll
sbb
sbb
add
adc
inc
fdivrl
dec
jae
rolb
cmpsl
clc
fsub
push
mov
hlt
mov
add
lret
or
rclb
push
imul
out
sbb
dec
push
outsb
into
cmp
sbb
movsl
stc
mov
sub
mov
popa
ror
mov
in
sahf
sbb
imul
imul
gs
ja
shlb
je
pop
loope
xchg
add
out
sub
fstpl
call
mov
xchg
dec
cmc
fnstsw
nop
ss
ss
movsb
xor
repnz
cmp
sbb
cmc
and
imul
xchg
xchg
adc
js
pop
cmc
testl
test
gs
jno
xor
fistpl
imul
mov
fisubs
jns
addr16
add
test
adc
outsl
imull
xor
out
test
xchg
cld
inc
or
clc
ja
aas
daa
sbb
ss
lods
leave
and
or
cmc
add
daa
sbb
sub
ret
ljmp
andb
mov
dec
shll
dec
jle
test
jns
cmp
mov
rol
mov
push
test
sbb
push
mov
adc
push
jno
pop
sub
mov
xor
fisubrl
pop
ljmp
or
out
pop
adc
sub
xchg
in
mov
pop
lahf
cmpsl
mov
test
pop
imul
push
xlat
sbb
icebp
jno
andl
lret
repz
xor
in
pop
jg
insb
stos
inc
adc
xchg
fwait
mov
add
lret
sbbl
jne
mov
pop
js
pop
cmp
sub
push
xchg
shl
mov
mov
xchg
adc
xchg
cmp
xchg
das
mov
repz
fwait
call
mov
repz
mov
mov
sbb
stc
lret
scas
push
mov
or
insl
mov
cmp
das
push
sub
mov
xor
mov
jae
jl
movzbl
cmp
xor
js
push
repz
aam
inc
dec
xchg
dec
xchg
fwait
sub
jge
fucomp
mov
push
jl
inc
into
push
rolb
adc
mov
pop
rcrb
cmp
sbb
imulb
jnp
add
mov
scas
das
mov
popf
scas
jo
mov
movb
pop
cmp
movsl
nop
xor
push
cmpsl
xor
nop
jo,pn
add
adc
jl
push
das
mov
out
in
or
inc
loop
add
aad
pop
out
add
popa
or
mov
push
jne
xor
pop
scas
dec
dec
cmp
shrl
cmp
aam
add
jmp
scas
xchg
cltd
xor
jp
aam
xchg
jns
add
push
cmp
movsb
pop
je
cmp
or
ret
pop
and
ret
das
xor
rcll
out
clc
das
mov
pop
repnz
dec
cmp
shrb
cs
cmp
mov
cli
jnp
mov
adc
push
lea
xchg
add
insl
int3
lret
scas
cmp
or
sbb
xchg
add
jge
push
dec
dec
xchg
cli
jns
xor
popf
addr16
mov
mov
clc
leave
icebp
xlat
ficoml
mov
fabs
push
nop
inc
inc
das
mov
testl
mov
sbb
icebp
insb
xor
in
xlat
push
movsl
jle
push
cmp
hlt
dec
lods
bound
das
mov
pop
popa
mov
out
or
push
inc
mov
int
pop
mov
fcoml
jmp
cmpsb
sub
sub
lret
fstps
lock
push
push
mov
jp
pop
nop
inc
mov
pop
fidivrl
loope
push
cld
aas
ljmp
fbstp
in
dec
cwtl
inc
mov
inc
sti
lods
shl
sub
inc
gs
arpl
sbb
cltd
pop
out
pop
inc
test
and
es
and
outsl
out
mov
inc
or
sub
xchg
loope
je
mov
test
movsb
pop
push
jmp
jns
les
out
adc
ja
mov
mov
xchg
lock
call
test
sbb
mov
andb
pop
fnstenv
int3
jne
nop
push
jae
lods
loop
pop
mov
or
scas
pop
pop
cs
dec
sub
or
adcb
movb
pop
cmp
push
pop
lret
mov
jne
push
imul
add
inc
das
mov
adc
xchg
shl
push
adc
pop
subl
int3
pushf
cmp
mov
popa
adcl
je
push
and
sbb
sub
fiaddl
mov
les
xchg
jle
out
mov
loope
xchg
add
leave
in
test
push
push
imul
lods
bound
bound
mov
adc
and
pusha
lods
push
mov
push
in
insl
push
dec
sti
ja
and
testb
xchg
push
push
or
xor
iret
dec
lds
mov
test
sbb
hlt
xchg
adc
jnp
push
cmp
std
xchg
xor
out
neg
mov
lock
pop
gs
dec
dec
and
sbb
dec
dec
jle
add
rolb
or
ljmp
or
adc
shll
jne
mov
push
xorl
or
icebp
sbb
dec
enter
jle
fs
cld
xorb
mov
daa
add
mov
jg
in
sbb
clc
mov
out
stos
add
jo
jb
dec
pop
pop
sbb
fistpll
in
and
mov
push
shll
mov
mov
outsb
pop
cmp
push
jae
jl
cmp
fnsave
push
mov
adc
sub
push
xchg
adc
cwtl
xchg
stos
or
int
sub
aad
cmp
mov
push
lret
shlb
stc
test
and
jo
out
movsl
enter
fwait
cmp
outsl
push
das
push
sbb
stos
nop
lods
jecxz
push
insl
sbb
mov
loop
gs
inc
jl
adc
lock
pop
testl
lahf
test
inc
loope
mov
stos
add
stos
stos
push
push
jecxz
and
aas
into
add
lds
xchg
imul
inc
xor
ret
arpl
mov
je
fcmovne
push
sbb
jp
sbb
rorb
test
jecxz
lret
movsl
push
faddl
lods
dec
xchg
jmp
ja
lahf
push
xchg
jl
fcmovnbe
cmp
jo
ja
add
andb
cmpsb
and
cld
jbe
lcall
das
xor
cmpsl
js
pop
and
jbe
scas
stos
sub
cmp
push
mov
jmp
mov
inc
jns
int3
inc
mov
sbb
stos
jae
jns
test
cmp
xor
neg
gs
pop
dec
cmp
sbb
xchg
pop
jmp
jp
test
mov
in
xor
cltd
pop
stos
stos
pop
dec
mov
stc
iret
pop
mov
jle
xchg
fiaddl
je
sub
mov
lahf
int
insb
rorl
arpl
mov
sbb
aad
enter
loopne
std
xor
xchg
mov
notb
inc
popa
xchg
sahf
jns
add
or
mov
jbe
xor
fcmovu
out
xchg
push
xchg
cmpb
cmpsl
ja
arpl
jne
cmpsb
pop
fisubl
ja
inc
int
mov
mov
adc
jae
int
gs
icebp
cmc
mov
mov
pop
lret
xor
int
rorl
dec
mov
push
lods
xchg
xor
popf
iret
xor
mov
rclb
repz
mov
dec
mov
cmp
mov
cmpsl
inc
cmp
ret
addr16
lret
rcll
fistps
mov
out
shr
out
test
pop
sarb
mov
leave
out
mov
lret
add
mov
popf
daa
mov
mov
cmp
pcmpeqb
mov
push
xlat
or
lock
and
mov
fcmovnbe
outsb
mov
inc
push
sub
ljmp
ficompl
xchg
push
inc
ss
mov
fisubrs
push
fsubrl
lcall
imul
and
dec
xchg
adc
inc
cmp
movsl
fisttpl
push
lcall
call
pop
xor
int3
xchg
or
data16
jb
mov
xchg
add
jg
xchg
push
pop
int
lret
fsubr
lods
push
popf
sahf
aam
and
push
incb
xchg
test
mov
pop
daa
sahf
or
pop
lret
xor
sbb
adc
setae
insb
and
xor
jmp
ficoms
cmp
adc
xchg
clc
sbb
lahf
push
push
sarl
xchg
repnz
mov
dec
mov
test
or
fnstcw
or
ret
loop
jge
hlt
in
pop
sahf
add
test
fisubl
mov
inc
out
stos
inc
in
popa
pop
jnp
outsb
stc
cmp
data16
jecxz
xchg
cmp
movl
mov
aaa
add
mov
push
jg
aas
imul
out
mov
pop
sbb
push
push
jecxz
dec
adc
adc
lods
xchg
int
punpckldq
push
push
xchg
std
sbb
andl
inc
lods
pop
aas
rolb
mov
mov
cli
dec
loop
rolb
mov
insb
jbe
outsl
mov
mov
repnz
addr16
xor
cli
dec
sti
lods
push
dec
mov
stos
icebp
adc
movsb
jo
bound
ret
clc
lea
xchg
ja
movsb
adc
call
lret
popf
lods
loopne
or
inc
push
mov
xor
xchg
push
popf
insl
add
sbb
mov
dec
fwait
mov
int
ljmp
fiadds
popf
fldt
push
inc
lock
idivb
shrl
pushf
movsb
mov
jae
sbb
int
mov
lcall
dec
or
push
jge
leave
lods
or
dec
lret
sbb
xchg
xor
xchg
mov
sub
and
inc
decb
rolb
mov
dec
mov
mov
push
dec
inc
adc
enter
inc
mov
ret
ljmp
sub
push
and
mov
aas
stos
popa
sub
push
cld
lock
and
sbb
lea
in
inc
aaa
xor
mov
aam
jo
xor
mov
mov
sub
jg
jno
loop
push
push
jb
das
lock
subb
mov
mov
push
shrb
lret
dec
push
and
cmp
jge
loope
ret
dec
and
dec
or
or
jge
xor
inc
repz
xor
js
scas
jnp
in
mov
repz
lcall
jl
call
mov
pop
jecxz
xlat
std
push
sub
pop
divb
jo
pop
loope
clc
push
int3
ficompl
and
mov
push
pop
scas
cmp
mov
inc
xchg
btc
dec
aas
rcl
pop
lahf
fwait
mov
mov
lret
or
cmc
int
cmpsl
add
add
lock
add
out
adc
xor
cmp
sbb
xchg
into
cmp
movzwl
loope
mov
mov
cmp
imul
in
mov
stc
ljmp
sub
mov
icebp
push
aam
sbb
data16
pop
add
outsl
data16
xlat
je
shll
scas
jmp
mov
cmpl
cmp
cmp
popf
out
pavgb
call
inc
call
in
mov
jne
mov
cmp
mov
stc
mov
jmp
add
gs
daa
pusha
add
jno
xor
push
rclb
sbb
insl
adc
aas
lret
and
js
imul
and
popf
sbb
insb
and
inc
aad
xor
fnsave
xor
aaa
cltd
mov
sub
and
lahf
hlt
or
data16
xchg
dec
xchg
pop
jle
das
js
lods
push
into
cltd
jle
mov
mov
dec
pop
in
mov
add
adc
scas
jae
int
lret
inc
out
mov
jnp
xchg
scas
push
repnz
or
xor
mov
fwait
test
jae
jg
and
mov
lods
push
aad
xchg
mov
enter
or
ljmp
dec
inc
cwtl
sbb
sbb
cmp
xor
push
popf
pop
jle
xor
mov
addr16
fwait
test
inc
enter
cmpsb
call
popa
imul
nop
push
jg
sub
ja
repnz
pop
sarb
mov
mov
mov
inc
or
pop
test
and
adc
mov
fwait
push
pop
and
mov
jae
es
jnp
add
dec
mov
sub
inc
mov
pop
dec
add
xchg
std
dec
cvtps2pd
int3
ja
cmpsb
in
in
or
lea
les
lock
cmpsb
test
aas
outsl
aam
mov
jmp
in
push
dec
adcb
sbbl
test
loope
jne
pop
in
sbb
std
icebp
push
xor
mov
fst
push
jmp
shlb
pop
inc
push
push
sub
cmpb
mov
jl
sub
int
dec
and
mov
sub
xor
into
mov
cmp
pushf
ret
cmp
jne
mov
add
daa
scas
rcrl
add
sbb
cmc
sbb
sub
push
pop
outsb
fsubr
daa
mov
pop
aas
mov
ffree
xchg
hlt
divb
xbegin
sbb
gs
inc
xchg
push
inc
and
mov
pushf
inc
jp
in
pop
lcall
mov
mov
fimull
shlb
inc
repnz
into
push
daa
push
xor
shrb
push
sahf
dec
sub
enter
xchg
sbb
mov
daa
cmc
inc
jmp
popf
and
ja
and
sti
cmp
mov
sub
ret
jp
mov
cwtl
dec
ret
shlb
mov
int
out
gs
mov
cmp
scas
fnstsw
push
arpl
cmp
adc
mov
mov
jnp
and
dec
hlt
mov
jno
xchg
mov
aad
scas
std
adc
adc
mov
repz
add
push
jae
in
push
idivl
aam
enter
mov
sahf
cld
int
mov
and
and
loope
xor
adc
lods
out
fsubrl
xor
inc
add
cmp
fists
adc
test
dec
jge
sbb
push
clc
fdecstp
sub
cmpsl
push
jg
cli
add
mov
xchg
and
xor
ret
or
rclb
xchg
mov
jp
adc
mov
ljmp
mov
out
adc
fsubrl
in
jmp
sbb
sbbb
mov
loop
imul
loope
push
jns
push
or
in
aad
les
jl
sub
aad
sub
dec
jmp
movsl
inc
and
push
xor
lea
mov
lahf
add
xchg
pop
pop
arpl
inc
sub
test
jg
jmp
dec
hlt
loope
push
xchg
inc
sub
das
mov
scas
loop
popa
cwtl
fwait
pop
shlb
adc
cmp
mov
imul
dec
cs
jl
sti
test
mov
cmpsb
cmpsb
mov
ret
mov
push
out
inc
pusha
lret
or
dec
jo
xchg
sub
shrb
and
and
add
jmp
adc
lret
sbb
mulb
adc
inc
clc
mov
dec
xchg
push
or
mov
sub
roll
out
aam
mov
cmp
fisttpll
jecxz
leave
test
cmpsl
sub
outsl
into
fwait
fs
push
cwtl
jge
jge
ss
mov
dec
mov
mov
clc
jno
mov
test
imul
mov
dec
lods
test
test
cmp
mov
dec
cwtl
cmp
fbld
dec
cmp
mov
jl
sbb
pop
sbb
sbb
cmp
push
pop
dec
or
cmp
fdivr
and
or
in
cs
mov
mov
sbb
addr16
xchg
jmp
jg
jo
lods
mov
ja
sbb
pusha
stos
mov
sbb
mov
out
inc
int
lods
cvtdq2ps
loope
xchg
cmp
insl
cld
bound
add
add
mov
mov
cmp
xchg
rclb
sbb
adc
rorb
ror
sub
loop
out
paddd
mov
cmp
cmpsl
std
inc
aad
pop
ljmp
jae
mov
mov
mov
jg
xorb
lock
xor
into
sub
xchg
mov
loope
fstpl
sarl
lcall
lret
mov
or
push
mov
pusha
mov
jnp
mov
das
loop
sarl
pushf
stos
mov
xorb
mov
stos
popa
nop
cmp
je
jecxz
push
fildl
mov
ja
push
xlat
pop
jnp
loope
sbb
mulb
mov
daa
mull
shll
movsb
fdivs
mov
inc
cld
jb
ret
ljmp
mull
lcall
or
inc
xchg
js
ljmp
jp
loopne
jge
push
enter
rcll
cmpb
mov
loopne
pop
arpl
adcb
andl
lahf
dec
test
mov
rorb
jp
lods
in
lret
repz
push
adc
push
pop
or
sub
pushf
pop
popa
cmc
loope
rorb
pop
dec
xlat
jbe
insb
fnstenv
jb
xchg
enter
outsb
stc
les
mov
sub
mov
into
cld
xor
jle
and
push
xor
cmp
push
cltd
add
mov
scas
add
fucomip
lds
sbb
dec
test
and
pop
subps
xor
nop
add
loopne
jbe
rorl
adc
movsb
shrb
inc
addr16
xchg
test
xchg
or
pop
js
adc
mov
xor
jno
mov
cs
cmp
ss
pop
sbb
popf
loope
inc
test
inc
loope
outsb
mov
pop
dec
rorl
aaa
fwait
and
mov
stos
jg
lea
xorb
test
push
lock
pop
sbb
adc
xor
jle
push
cmp
pusha
ja
out
data16
cs
lods
xchg
add
stos
aas
pop
or
lods
shrl
jmp
pop
lret
sub
and
mov
inc
iret
xor
call
nop
lea
hlt
pushf
shr
sub
mov
jno
dec
sbb
movsl
xor
pop
push
pop
or
fwait
repz
sub
or
inc
cmp
and
movsb
push
dec
sbb
cmpsb
cmp
inc
add
mov
lret
xor
outsb
ss
ja
jle
mov
clc
add
mov
loope
jo
xor
push
jmp
ss
sbb
daa
jae
dec
lods
inc
add
cmp
cmp
fsubl
xchg
add
lds
push
mov
mov
mov
sub
das
jbe
insb
int
int3
notl
mov
mov
dec
shrb
sub
adcl
loope
dec
out
rcr
sarb
sahf
pop
lods
xchg
or
jp
mov
fstl
outsb
push
sbb
sub
cli
je
xor
inc
cmp
shll
jns,pn
loopne
mov
cmp
pop
sahf
jne
adc
repz
xchg
out
or
movsb
ret
bound
out
mov
lret
sbb
xchg
dec
adc
and
mov
jl
xchg
inc
hlt
mov
sub
cmc
mov
push
mov
je
fsubp
test
lahf
arpl
jmp
or
add
dec
dec
fcmovne
test
ret
mov
orl
or
inc
sub
inc
mov
fildll
imul
test
rcr
cmovl
enter
and
xlat
sub
hlt
sbb
enter
popf
das
cs
and
subl
lahf
xor
mov
adc
and
xchg
lret
popa
push
sbb
inc
adc
push
ja
bound
faddp
stos
xor
test
inc
dec
add
loopne
inc
loopne
adc
testb
cltd
imul
xchg
cli
imull
test
and
arpl
lock
mov
xlat
outsb
popf
scas
lcall
inc
outsl
jg
sti
cmp
jg
fcompl
add
ja
popa
mov
mov
xchg
loope
mov
xchg
adc
mov
and
iret
hlt
pop
jle
pop
in
or
lcall
xlat
sub
or
imul
out
sub
mov
xor
push
fcoml
sbb
mov
incl
sbb
push
dec
cmpsb
outsl
pop
sbbl
aam
decl
add
sub
jns
sub
pop
jae
sbb
adc
out
sti
rcl
nop
cmp
xchg
ljmp
pop
xor
aas
pop
fistpl
inc
push
cmc
push
test
in
mov
ljmp
ret
fstpt
push
rcll
popa
dec
sbb
es
imul
mov
outsb
dec
inc
aam
es
add
inc
xchg
xchg
sbb
mov
push
mov
xor
pop
inc
mov
xor
dec
adc
ret
xchg
sub
adc
push
sbb
xchg
into
xor
dec
fdivr
das
inc
mov
or
mov
pop
out
jle
cmp
xor
add
mov
xchg
push
xor
in
shll
and
sub
es
xlat
addr16
push
fnstsw
cmp
mov
insb
mov
xlat
mov
jae
out
int3
scas
and
pushf
aad
push
ja
jl
dec
or
lret
je,pn
clc
shll
sbb
in
add
adc
gs
imul
sbb
jmp
scas
lahf
sarb
mov
mov
adc
lret
mov
and
hlt
or
or
xchg
inc
sub
lods
and
jl
cmp
dec
mov
xor
out
pop
jmp
inc
lcall
fwait
mov
dec
mov
mov
or
popa
add
push
sbb
orb
testl
pop
mov
out
popf
dec
xchg
or
stos
add
xchg
or
aad
ljmp
jle
cmp
xchg
pop
xchg
and
test
or
cltd
jne
sarl
sbb
xchg
sub
loopne
in
sbb
adc
daa
nop
xchg
std
add
imul
rorl
pop
jmp
insl
xchg
in
daa
out
xchg
iret
sti
xchg
clc
inc
sbb
in
rcrb
jne
pop
and
dec
js
imul
imul
push
dec
push
test
pop
xor
scas
sbb
mov
pop
out
xorb
fmul
repz
push
cmpsb
pop
je
mov
divl
in
push
mov
out
je
repnz
andl
lds
sbb
mov
mov
adcb
iret
pop
cmc
cmp
prefetchnta
and
outsl
xchg
lret
test
sub
xlat
or
add
and
icebp
push
enter
in
popf
and
cmp
mov
pop
mov
mov
jne
in
mov
insb
arpl
rorl
sarb
jno
rcll
sub
mov
mov
or
inc
ret
call
mov
push
xlat
std
js
push
pop
push
xor
add
outsb
aad
xor
test
mov
push
jl
sar
jb
dec
or
rcrb
push
insb
pushf
addr16
pop
mov
addr16
inc
outsl
cmp
and
and
insb
cmp
lock
inc
jl
and
mov
pop
mov
movsb
flds
mov
ret
jmp
scas
scas
add
mov
mov
scas
ss
rcl
mov
clc
adc
add
hlt
jmp
and
mov
mov
mov
sub
cs
cltd
ss
popa
test
jbe
pop
cmpsb
xlat
mov
dec
jp
push
or
inc
dec
clc
cmpsl
push
mov
mov
rclb
or
cltd
loope
les
aad
mov
cs
inc
pop
mov
add
dec
neg
stos
je
or
cmp
repnz
push
popa
cli
ficompl
sbb
jne
sti
mov
addl
shrl
jo
xchg
xor
sbb
movsl
pop
nop
pushf
icebp
cmp
icebp
sub
mov
adc
mov
mov
int
shll
pop
sub
add
aaa
lea
push
xor
and
lods
lcall
rolb
arpl
mov
and
lcall
icebp
sahf
fldcw
dec
insl
aam
mov
cwtl
xchg
adc
dec
mov
in
in
dec
hlt
mov
daa
sub
cmp
jmp
cmpb
test
mov
mov
lock
jae
lds
or
pop
sbb
les
sub
push
lds
hlt
mov
sbbl
cmp
or
dec
or
ret
mov
inc
mov
rcl
fnstcw
ja
mov
pop
push
inc
imul
gs
ficoml
cwtl
outsb
movl
mov
scas
cmp
or
mov
xor
and
rclb
daa
rcrl
jns
movsb
add
lds
xchg
sahf
sbb
add
inc
roll
add
cmp
mov
sbb
inc
mov
sub
cli
ljmp
ja
cli
mov
jge
xor
add
pop
pop
cmc
inc
push
add
xchg
lcall
push
pop
add
sub
aad
aaa
sbb
sti
ljmp
std
leave
shrl
lods
fiaddl
mov
xor
sbb
mov
mov
loop
call
jae
ss
test
outsb
adc
push
push
adc
xor
ss
das
shrl
xchg
pop
add
sub
dec
mov
or
lret
dec
popa
popf
xchg
pop
jg
lods
hlt
inc
pushf
cmp
push
repnz
mov
loope
adc
sbb
push
push
jg
mov
shll
clc
xor
dec
jmp
data16
iret
xor
fnstenv
mov
loop
out
jmp
fidivrs
out
adc
push
in
fmuls
ret
xchg
addr16
addr16
add
hlt
cwtl
lahf
and
cld
cmpb
xchg
push
mov
sub
pop
xchg
push
push
push
out
shll
inc
rolb
shrb
imul
dec
loope
pop
loope
mov
mov
idivl
push
dec
dec
sbb
ljmp
xchg
test
movsb
cli
xor
cmp
or
jae
cli
mov
jo
lret
and
xchg
jne
mov
pushf
fwait
ljmp
xlat
sub
test
repz
inc
pusha
or
adc
xchg
cmpsl
mov
mov
mov
sti
jecxz
nop
and
loop
es
inc
pop
lods
inc
jecxz
pop
loopne
das
pushf
in
sbb
inc
aas
or
adcl
xchg
subb
xorl
push
fdivrs
jo
rclb
mov
stos
js
adc
xor
sbb
jge
jmp
cmpsb
lret
aam
cli
push
movsl
test
xchg
push
lock
popf
and
dec
mov
and
in
imul
ljmpw
inc
add
dec
orl
pop
rol
ss
cmp
jno
inc
in
leave
andb
jo
test
jnp
xchg
cmpsb
sbb
mov
lret
dec
mov
jnp
popf
sbb
mov
add
sbb
ja
in
cmpxchg
jo
xlat
test
and
xchg
jae
xchg
rorl
cmpsl
ret
popa
add
sub
xchg
fs
push
inc
lods
fs
leave
arpl
in
dec
dec
andl
pop
add
mov
mov
pop
add
pop
in
leave
sub
shl
adc
roll
inc
pop
inc
add
jae
push
mov
int3
popf
ljmp
cli
sahf
popa
pop
ja
cli
inc
pop
aaa
sarb
ret
aad
push
popa
add
cmp
loop
cmp
push
push
pop
mov
nop
lods
dec
popa
inc
push
popa
push
mov
mov
orl
into
call
pusha
bound
pop
jg
sub
inc
arpl
add
out
mov
mov
aad
inc
es
iret
sbb
into
popa
out
mov
push
test
xchg
xchg
sbb
sbb
stos
inc
pop
push
mov
cmpsl
add
mov
mov
mov
push
rcl
cltd
test
stc
jno
shlb
rcrl
outsb
pushf
test
cmc
mov
xchg
dec
lods
pushf
inc
sub
loopne
inc
cltd
aad
sub
fldt
xchg
xor
jp
lods
cmc
jle
lods
jne
push
dec
pop
and
rcrl
iret
xor
aad
std
push
pop
sbbl
jns
rol
push
push
shl
imul
lret
push
xlat
out
inc
xchg
repnz
cmp
xlat
fistps
in
sbb
imulb
ljmp
mov
repz
mov
jo
ficoms
xor
rorb
sti
xor
lret
mulb
movsb
mov
ljmp
fldl
fbstp
sub
pop
fwait
je
gs
pushf
clc
adc
orl
xor
cltd
pop
jbe
js
rorl
xchg
cmp
shl
dec
in
xchg
pop
pop
add
pop
cmp
xchg
pusha
xchg
jl
test
push
and
push
or
sub
imul
clc
negl
jbe
push
adc
fsubrl
add
push
mov
fsubl
out
mov
fistps
push
gs
jae
mov
push
push
clc
add
mov
push
xchg
sub
mov
cwtl
aad
xchg
mov
popa
and
pop
inc
nop
adc
and
cmp
sahf
adc
ret
sub
adc
jae
mov
pop
aaa
add
outsl
cwtl
xor
bound
lock
fstl
and
arpl
sahf
xor
jecxz
ficomps
sbb
popa
jmp
sbb
fisttpl
adc
hlt
and
call
mov
pop
push
movsb
shll
push
pop
pop
inc
cmp
dec
dec
rcrb
cmpsb
sbb
rcr
mov
and
test
stc
jecxz
xor
icebp
jp
test
push
push
dec
inc
sbb
cmpsl
in
push
pop
xor
pop
pop
rcrb
xchg
out
hlt
adc
daa
and
dec
lea
xchg
repz
or
sbb
jecxz
cmp
les
add
cltd
aaa
aam
mov
or
es
jne
ret
mov
aam
lods
xchg
push
jle
or
mov
sbb
in
xor
shll
in
push
or
shll
sbb
mov
jae
rorb
arpl
rorl
sub
adc
inc
adc
addl
iret
pop
aas
jne
push
out
xlat
fists
xchg
in
and
mov
les
not
test
pop
flds
aam
lods
mov
in
sahf
mov
pop
push
inc
and
xor
idivl
adc
dec
sub
jmp
insb
xor
mov
xor
push
loop
in
pop
bound
sbbb
mov
hlt
popf
sbb
push
cmp
fwait
ds
or
andb
add
mov
jae
aam
stos
sbb
mov
jnp
jecxz
cmpsl
dec
mov
cwtl
repnz
mov
popa
mov
fimull
mov
aad
mov
movsb
mov
add
aas
cmp
aad
pop
movsl
sbb
pop
push
leave
inc
push
push
xchg
add
inc
daa
dec
push
imul
clc
fldt
sahf
aam
or
pop
pop
push
xor
lods
loopne
push
add
adc
inc
aam
lock
jle
sbb
xchg
jecxz
icebp
add
mov
xchg
das
sarb
push
lea
adc
shl
pop
sub
sbb
arpl
sbb
lods
inc
sub
fistpll
cli
daa
or
mov
mov
or
ljmp
popf
inc
sahf
cmp
mov
pop
jp
scas
fwait
inc
repz
cmpsb
sub
ljmp
dec
jno
xchg
rclb
dec
or
das
movsl
dec
arpl
je
mov
out
arpl
mov
mov
and
stc
js
loop
add
add
cmpsb
in
fwait
xor
xchg
inc
pop
cld
inc
xor
enter
pop
out
cmpsb
xorb
mov
mov
push
ret
adc
mov
fldt
stos
jmp
dec
jno
icebp
dec
add
pop
push
shlb
xor
int3
pop
arpl
adc
fs
imul
add
dec
add
or
repz
outsb
xor
cld
lds
cwtl
pop
adc
mov
sbb
movq
jmp
mov
cmc
cltd
mov
mov
daa
xchg
insb
mov
mov
outsl
imul
jae
push
add
divb
scas
inc
scas
out
lods
and
pop
aas
sbb
mov
mov
dec
fiaddl
ror
fdivrl
das
rclb
loop
popf
xorb
jge
inc
sbb
ret
lea
push
lods
mov
xchg
popa
outsl
sti
mov
fprem
cltd
add
sbb
push
mov
mov
sbb
or
in
cmp
jno
and
adc
mov
mov
les
push
fcompl
mov
mov
adc
cltd
and
in
push
das
cmpsl
pushf
push
fistpll
jo
dec
subb
push
adc
or
inc
test
pop
cmp
jp
sub
and
sahf
pop
jl
ror
fdivrp
js
adc
fldl
mov
adc
mov
testb
lea
int
jmp
dec
cmpb
nop
sbb
sub
inc
and
imul
mov
sti
xchg
sahf
cmp
fadd
pop
clc
sahf
lea
lahf
adc
mov
into
stos
sub
test
cltd
sbbb
into
pop
xchg
std
int
daa
inc
ret
xchg
and
rorl
push
jg
ljmp
shlb
add
cmp
cwtl
jmp
inc
sahf
pop
xor
push
adc
stc
adc
fildll
packuswb
cmp
xor
inc
cwtl
scas
clc
hlt
leave
rcl
lahf
sbb
dec
xchg
or
fiadds
imul
rcll
andb
sbbl
pop
mov
call
mov
jnp
in
dec
lods
xchg
xor
lds
sub
mov
lret
mov
loope
aas
push
adc
or
xchg
push
jle
xlat
mov
jne
stc
mov
jo
stc
sub
sbb
adc
negb
inc
add
stc
sbbl
add
mov
pushf
insb
pusha
hlt
mov
xorb
mov
pop
inc
add
nop
outsl
add
pop
mov
jmp
int3
jg
arpl
xchg
cmp
movsb
cmp
fbstp
xor
loop
add
pop
fdivrp
stc
xchg
dec
scas
cmpsb
lds
daa
shll
push
mov
sbb
fsub
lret
adc
push
aaa
lods
outsl
and
push
xchg
cmpsb
dec
in
jns
xchg
add
test
shlb
adc
and
gs
outsb
stos
frstor
imul
minps
xor
in
into
jecxz
and
mov
dec
call
and
or
fnstcw
adc
lret
sub
push
fists
or
ret
xor
into
hlt
notl
jle
iret
sub
out
pop
inc
pop
imul
xor
insl
je
push
lods
int
fcomip
dec
mov
mov
sub
ret
ja
push
popf
xchg
pop
cmp
jns
mov
imul
rclb
jg
leave
outsl
inc
dec
fwait
pop
add
and
or
sti
add
adc
cs
push
subb
adc
stc
inc
xor
arpl
inc
sti
jmp
cli
outsb
stos
in
or
cmc
dec
mov
jge
pop
jbe
ja
cwtl
nop
xor
push
imul
inc
mov
lret
pop
jecxz
mov
fistl
movsl
inc
pop
scas
call
icebp
fwait
inc
fldenv
std
mov
pop
clc
push
xchg
add
into
and
pushf
push
jmp
scas
movb
adc
addr16
push
mov
cmpsb
pop
jnp
in
repnz
mov
push
mov
sbb
mov
inc
insl
je
dec
xor
mov
fistpll
cld
xchg
aaa
sbb
cmpsb
mov
stos
cmp
push
outsl
inc
test
sub
pop
rcrb
or
hlt
icebp
pop
mov
jns
cmp
movsl
mov
leave
pop
pop
mov
lcall
roll
pop
pop
aad
push
mov
sub
cltd
fiadds
std
xchg
pusha
hlt
ret
das
add
test
add
dec
enter
mov
push
dec
xor
adc
cmp
std
ror
rolb
lcall
lahf
jns
pop
insl
sub
sub
fsubrs
xchg
sbb
pushf
xchg
xchg
push
loope
add
inc
rorb
push
jg
pop
mov
push
shrb
xor
xchg
movsb
adc
mov
xorb
or
xor
push
adc
sbb
sti
push
jo
jmp
push
addr16
xchg
iret
popa
shrb
fcomip
shll
cmpsb
movsl
test
fiadds
cmp
push
and
mov
cmp
pop
cmpsl
pop
lock
mov
xchg
movsl
test
jecxz
rcl
aam
mov
xor
dec
sarl
adc
stos
add
fnstsw
add
xor
adc
pop
jo
dec
or
fistpl
mov
xor
rol
jns
test
bound
shll
jmp
stc
xchg
sbb
out
mov
or
mov
inc
hlt
les
mov
fsub
jb
cmp
repnz
pop
dec
aas
ljmpw
aam
popf
push
test
fisubl
std
fnsave
lods
xor
test
dec
int3
ljmp
sub
popf
mov
pop
fisubrl
jecxz
nop
out
sbb
jmp
and
pop
mov
jae
pop
inc
xchg
insl
es
mov
lock
dec
pop
andb
adc
pop
push
or
daa
mov
mov
push
mov
adcb
sbb
and
mov
push
clc
cmpsb
and
cld
rcr
mov
out
add
jb
fs
fiadds
xchg
fcom
mov
into
repnz
pushf
out
or
aaa
mov
js
jne
jno
mov
dec
dec
jmp
sbb
sub
or
cmp
andl
hlt
dec
jnp
cmp
cmp
fisubrs
xor
sti
addr16
popf
pop
cmpl
jns
ret
imull
aad
stos
or
cs
cmpsb
hlt
cs
fisttpll
movsb
dec
es
aas
cmc
rcll
leave
shrl
jge
mov
fisttps
enter
jl
cwtl
mov
in
or
sub
mov
mov
inc
in
cmp
jo
jle
sbb
jl
enter
add
dec
adcb
pushf
jl
lcall
and
cli
shll
sub
cmp
mov
cmp
sbb
jnp
adc
fisttpll
pop
outsl
cmpsl
scas
adc
jo
sbb
test
dec
jecxz
jbe
movsl
and
cmp
mov
and
mov
shl
cmp
ficoms
dec
fsubs
mov
pop
cmp
adc
imul
mov
mov
xor
jl
sahf
and
incb
xlat
call
or
into
sub
push
cmp
repnz
into
push
cmp
push
sbb
shrb
imul
ss
addr16
in
pop
cli
stos
popf
in
lcall
mov
repz
mov
xor
add
push
sub
dec
sub
inc
add
fsubr
sub
out
sub
aad
stos
imul
xor
push
jb
mov
and
jnp
jbe
mov
int
mov
pop
sub
mov
adc
pusha
and
movsl
mov
xchg
jno
or
in
pop
sbb
sbb
movsb
roll
cwtl
stos
mulb
test
test
add
fs
cmp
mov
xchg
push
rcrl
sbbl
add
mov
xor
fisubs
push
xchg
stos
pop
ficoms
dec
push
xor
xor
sbb
cmp
fcom
test
inc
mov
sbb
mov
arpl
gs
int3
call
ds
push
call
mov
out
jnp
ljmp
cmp
mov
push
in
xor
shrl
mov
es
inc
xrelease
in
xchg
jno
fchs
sbb
sub
jne
sub
mov
inc
and
fiadds
dec
push
shl
stos
pop
mov
scas
add
push
mov
fisubl
mov
mov
cwtl
jno
or
mov
test
mov
imul
inc
ret
mov
inc
scas
adc
cmp
std
cltd
xchg
or
adc
xor
movsl
out
dec
in
cltd
adc
add
jge
push
testl
rcr
fists
daa
inc
lock
xchg
jnp
add
add
cmpsb
push
ja
push
mov
adc
rorb
pop
add
pop
jns
out
push
cmp
jo
jns
jg
call
movsb
popl
or
pop
out
pop
subb
pop
lds
jmp
cs
push
sti
aam
in
mov
js
shrl
or
and
rolb
and
sbb
and
test
jnp
mov
dec
sub
xchg
push
mov
test
gs
cmp
dec
dec
cmpsb
xchg
pushl
adc
inc
adc
mov
and
adc
mov
js
mov
push
stos
cmp
enter
sbb
aaa
test
ss
xchg
dec
repnz
sub
popf
push
sub
cmpsb
mov
xchg
cmc
rcl
test
test
aaa
mov
shrb
les
lods
dec
inc
sbb
fsubrs
or
cwtl
xor
sub
and
insb
xchg
pushf
mov
out
xor
sub
xchg
pop
out
sub
fiaddl
or
pop
xchg
cli
rorb
and
bound
push
sbb
nop
cmp
push
push
cmpsb
dec
jp
jns
push
into
lret
aad
pop
mov
in
cmp
mov
addr16
push
jnp
adc
xchg
mov
sub
xchg
clc
fcompl
into
in
lods
xchg
sbb
pop
dec
sub
mov
shr
idivb
adc
test
movsb
push
std
cs
push
pop
fiadds
mov
sbb
pop
cmp
stc
clc
flds
cmp
arpl
imul
les
push
repnz
imul
and
je
xor
and
je
mov
inc
rorb
pop
xchg
cmc
adc
inc
sti
punpcklwd
cmpsb
jmp
jle
pop
fadds
idivb
xchg
sarb
push
pop
fs
cltd
orl
jge
cltd
shl
cwtl
jbe
bound
cmp
jo
adc
popa
sub
js
test
mov
into
xor
test
fildll
pop
mov
mov
xlat
cltd
dec
mov
inc
cld
xchg
xor
pop
cmpsl
jnp
xchg
ret
mov
jmp
aam
inc
lahf
xchg
xor
fimuls
movsb
lcall
jp
es
fmul
aam
push
in
lods
loop
sbb
les
pop
out
mov
scas
cmpsl
into
inc
pop
mov
mov
push
add
xor
or
pop
xchg
and
inc
rcl
jecxz
out
cmc
pop
stc
loopne
dec
xor
out
test
add
dec
jns
mov
push
fnsave
add
insb
insb
cmpsb
pop
fwait
cmp
xchg
lods
lret
mov
or
mov
adc
adc
test
shll
sar
dec
rcl
stos
clc
mov
xor
stos
and
cwtl
lret
mov
cs
repnz
or
sub
push
nop
daa
push
sahf
insl
in
ljmp
inc
cmp
push
sub
mov
cld
mov
out
lock
cmp
jne
daa
inc
jbe
fwait
icebp
pop
and
push
sub
and
or
jb
loopne
push
inc
into
push
mov
aam
jl
pusha
inc
add
mov
pop
inc
adc
data16
mov
repnz
adcl
lds
lods
mov
sub
fiadds
pop
mov
repnz
jns
outsl
lret
cmp
ret
xor
rcrb
jg
shrl
mov
push
adc
in
jg
lret
push
rorb
mov
mov
test
dec
imul
pop
fildl
pop
jge
ficompl
popa
fucomp
dec
leave
xchg
dec
lcall
ds
int
leave
jne
push
sub
cld
pusha
jno
in
lods
lods
sub
stos
pop
add
fsub
cmp
lahf
xor
cltd
push
lahf
pop
lock
cmpsl
jge
ljmp
mov
pop
aas
inc
lods
or
push
movsl
jae
call
lea
pop
fucomip
add
lock
and
mov
pop
pop
inc
ja
lea
sub
sti
mov
mov
pushl
sub
popa
mov
xchg
adc
sbb
dec
cwtl
fsubrl
mov
pop
xor
cld
popa
ljmp
imulb
mov
lods
fdivr
add
xchg
sub
inc
mov
mov
add
xor
sbb
mov
inc
xchg
mov
xor
xor
inc
cmp
and
loopne
or
xor
xchg
mov
movsl
cs
notl
dec
mov
xor
rolb
add
int
or
mov
pop
int
ret
pop
imul
pop
xor
jl
in
and
enter
dec
xchg
idiv
jo
aad
pop
sub
lds
scas
fwait
adc
and
nop
mov
add
int3
inc
jae
cmpsl
mov
jb
pop
dec
jg
mov
fsub
mov
insb
jno
dec
in
nop
ds
or
mov
ja
cltd
inc
hlt
pusha
cmp
es
arpl
pop
push
jb
fwait
decb
xor
stc
stos
sub
pushw
add
mulb
loop
xor
sbb
aas
or
arpl
dec
lret
adc
vpaddd
aad
test
js
outsb
js
rolb
inc
ss
cld
push
data16
loopne
xchg
dec
clc
jmp
add
test
jp
jg
rcrb
xchg
dec
mov
stos
push
dec
mov
jne
roll
or
mov
div
pop
out
push
out
fsubs
mov
test
movsl
sbb
in
cs
adc
add
and
pusha
insl
or
imulb
xlat
xchg
mov
jbe
xchg
aas
out
sbb
test
adc
cmc
jbe
or
outsb
dec
bound
add
mov
fstps
xor
pushf
mov
mov
sub
push
jns
test
stc
sbb
inc
mov
faddl
pop
int3
dec
cs
xchg
jg
adc
dec
jo
xor
push
iret
and
iret
mov
pop
dec
cli
fbstp
lods
mov
scas
jmp
jge
xchg
or
sub
imul
mov
bound
mov
jne
push
cmp
das
jle
scas
cmp
adc
pop
fisubrs
push
sub
loopne
inc
out
iret
sub
test
shl
notl
add
pop
in
cltd
xchg
mov
push
xor
push
hlt
mov
loop
fisttpl
xchg
test
ret
dec
fs
add
push
jo
imul
insb
mov
stc
inc
pop
sbb
xor
mov
mov
pop
lret
jnp
cli
sbb
jle
xchg
lds
and
push
cld
mov
inc
call
cwtl
jo
cmp
in
dec
int
xor
cmc
xchg
sbb
mov
or
outsl
adc
lea
ja
dec
mov
fdiv
dec
aas
push
adc
cmc
int3
push
outsl
loope
pushf
sbb
loopne
leave
xor
sub
adc
sub
gs
hlt
insl
xorb
mov
subb
je
pushf
imul
mov
adc
cmc
addr16
es
jbe
xchg
cli
sub
fidivrs
add
xchg
loop
push
mov
pop
xor
test
xchg
pop
sub
stos
or
cltd
mov
dec
and
out
out
popa
push
in
shrb
or
stos
and
push
clc
mov
les
aaa
lahf
test
fildl
std
fnstenv
inc
cmp
scas
inc
mov
pop
scas
xchg
in
movsl
push
push
sub
aam
mov
pop
inc
jp
test
inc
mov
mov
jmp
aad
mov
imulb
mov
push
jp
mov
dec
rclb
adc
in
pop
daa
std
sub
mov
movsl
je
cltd
mov
repnz
xor
mov
push
ja
push
jge
cltd
adc
xchg
repz
aam
push
cwtl
cltd
fnsave
add
iret
cmp
sbb
insb
movsb
insb
fdivl
rcll
sub
inc
movq
mov
push
cmp
rolb
adc
aaa
imul
mov
dec
rcrb
scas
xchg
mov
cmp
das
mov
mov
es
shll
xlat
xchg
xchg
jno
test
inc
shlb
and
cmpb
jg
push
mov
push
je
shl
bound
sbb
mov
cmp
paddusb
jp
stos
pushf
xchg
test
rcl
sti
xchg
jl
xchg
dec
mov
js
mov
imul
imul
fnstenv
cmp
mov
test
mov
sub
pushf
or
mov
push
div
xchg
roll
rcl
inc
test
mov
fldpi
xchg
ret
daa
jmp
mov
mov
mov
lea
xchg
xor
mov
test
add
jns
push
cmc
lea
iret
or
xchg
inc
pop
sub
ss
jl
sbb
push
fs
and
leave
cmpsl
mov
push
leave
orb
add
stc
out
mov
aad
imul
cwtl
popf
mov
xchg
cmp
das
out
dec
fwait
cli
inc
sub
adc
imull
sbb
mov
repz
sbb
sub
imul
xor
push
mov
rcrl
dec
xor
adcb
sbb
sarb
mov
enter
aad
mov
daa
push
add
push
push
sbb
jge
subb
cmp
cmc
scas
pmaddwd
add
leave
mov
mov
xor
in
repnz
inc
sbb
movsl
jns
push
push
jmp
fisttps
ss
rcll
shlb
iret
mov
nop
jns
adc
mov
icebp
mov
or
cmp
movsl
push
mov
je
pushf
adc
jmp
ret
adc
fldcw
adc
hlt
inc
imul
sbb
mov
adc
sbb
sub
in
stos
out
and
insb
test
sbbl
fnstsw
xchg
adcb
stc
mov
add
ljmp
mov
add
push
add
mov
sub
sub
sbb
jae
push
outsb
stos
jmp
add
xor
sarl
sbb
shlb
mov
xor
ja
push
in
push
dec
mov
xor
fidivs
negb
xor
xchg
ljmp
or
and
insl
push
push
inc
mov
xchg
fistpl
xor
sub
fistpl
mov
push
mov
push
add
sbb
or
sahf
or
xor
xor
mov
or
lret
and
pop
mov
iret
in
fdivr
fdivr
sbb
mov
in
popf
ja
fnsave
dec
push
mov
jge
int
icebp
imul
mov
in
lret
inc
leave
test
les
mov
jmp
inc
adc
pop
add
pop
mov
sbb
aad
push
mov
enter
inc
jo
dec
jp
pop
push
fmuls
insl
inc
xor
pop
hlt
pop
jp
dec
fstpt
mov
xlat
loopne
outsb
je
out
lret
jns
push
movsl
outsb
rclb
pop
pop
mov
shll
jnp
inc
fsubl
ret
insl
rorb
movsl
cmp
fsubp
cmp
daa
into
sub
es
xor
lock
insl
sbb
sbb
cmc
mov
adc
out
pop
mov
mov
je
ja
mov
outsl
scas
cld
sti
cmp
pop
jo
xchg
in
cmpsb
mov
and
mov
stc
pop
jle
cmpsb
xchg
frstor
cmp
loopne
dec
fbstp
ljmp
rcr
in
mov
sub
fwait
insb
es
es
add
adc
sub
dec
out
enter
addr16
vmovupd
fidivrs
jb
popa
sbb
and
or
int3
jp
dec
cli
dec
adc
xor
mov
sbb
mov
stos
mov
mov
repz
push
push
test
cmp
std
cmpsl
push
cwtl
ret
je
fadd
pop
loope
xor
push
insl
pop
or
adc
test
scas
roll
fwait
outsl
in
call
mov
jns
insl
andb
xchg
adc
lahf
push
clc
aad
ss
adc
sub
inc
imul
jb
xchg
aam
cli
xor
mov
fcoms
cmc
cmc
cmp
pop
push
hlt
outsb
repz
or
lahf
lea
sti
aas
sub
bound
outsl
movsb
mov
setae
divl
mov
add
shrl
loope
mov
adc
scas
xchg
bswap
jnp
in
xchg
mov
fbstp
je
xchg
add
dec
jne
in
in
jno
pop
std
sub
xchg
xchg
inc
jae
lock
fs
xlat
cmp
enter
hlt
pop
rcll
andnps
stos
sahf
push
add
adcb
adc
xor
xlat
in
out
mov
mov
fwait
inc
adc
movsl
inc
jae
sub
sbbb
pop
setnp
xlat
push
mov
pop
fisttps
push
dec
das
test
mov
inc
xchg
push
test
sub
aaa
in
and
xchg
test
mov
xchg
sarl
dec
mov
stos
xchg
mov
and
cmp
cld
lcall
mov
jne
loope
std
subl
in
into
add
ljmp
add
push
daa
ror
add
ret
enter
adc
cmp
roll
rorb
loopne
les
add
mov
push
dec
movsl
pop
fiadds
adc
push
sbb
jecxz
jnp
test
mov
and
jp
jnp
pop
fstpt
cli
add
mov
mov
int
sub
imul
xor
adc
xrelease
sahf
notl
loope
or
jecxz
xchg
dec
push
mov
cmp
es
aad
enter
push
imul
and
loop
jns
ror
into
sbb
das
shrl
pop
fdivs
arpl
push
adc
clc
mov
fisttpll
jnp
jae
adc
aad
sarb
pop
mov
aas
inc
lods
jmp
nop
imul
or
scas
int3
cli
lahf
push
push
jo
stos
or
shrb
dec
rorb
or
insb
lcall
aas
sub
orl
nop
or
cmp
cmpsl
addl
push
pop
mov
mov
xchg
test
mov
rorb
xorl
bnd
addr16
rorb
fiaddl
pop
fcompl
roll
movsb
aam
in
adc
cmpb
iret
rclb
inc
test
jmp
insl
push
daa
pop
jmp
cmpsl
loop
test
fcompl
int
scas
or
pop
repz
sub
jle
mov
push
cmp
pop
and
push
cmp
push
push
adc
imul
mov
cmp
test
aad
daa
repnz
xchg
adc
xchg
test
push
inc
loop
or
in
ret
add
lods
lret
and
sbb
mov
cmp
gs
sub
and
pop
imul
ret
jle
dec
or
sbbl
sarl
js
movsb
movsb
xchg
mov
push
mov
cmc
mulb
pop
fwait
xchg
fdivs
loopne
inc
or
mov
add
cltd
push
popf
mov
fnsave
sbb
nop
leave
ficoml
movsl
push
or
or
sub
cmp
loopne
icebp
stos
push
xchg
negb
mov
inc
dec
shr
cmp
xchg
or
sub
lahf
sub
and
mov
nop
jle
dec
hlt
xlat
fcompl
notb
mov
or
dec
jne
dec
test
cmp
sub
mov
or
cmc
nop
andb
push
daa
mov
adc
lcall
int3
or
xchg
xor
mov
aas
rcl
cmp
push
inc
pop
xchg
pop
jno
aas
js
incb
rdmsr
push
mov
bound
pop
pop
outsl
test
insb
in
ret
inc
jne
jnp
ret
jl
mov
stos
inc
sbb
cmpl
ss
sub
fldcw
pop
mov
test
ret
xor
dec
adc
lock
cmp
test
push
mov
popa
jne
jmp
push
or
popf
dec
iret
fsubrp
aam
mov
sub
mov
icebp
dec
and
mov
mov
ljmp
test
cmp
test
jo
cltd
test
mov
inc
mov
std
xor
cli
dec
add
push
out
sti
nop
xor
inc
add
subb
scas
out
cmp
push
ret
inc
or
mov
not
push
dec
and
jge
insl
pop
jbe
lock
jmp
mov
arpl
aad
cmp
sbb
mov
out
mov
jne
push
xor
dec
xor
adc
xchg
push
and
imul
scas
jl
int
fbld
adc
cmp
or
es
lods
inc
test
jl
insb
dec
in
and
sbb
dec
push
and
adc
fsts
test
jbe
mov
inc
push
into
pop
cmp
fisubl
test
adc
xor
xor
sub
sbb
in
imul
sub
xor
dec
jmp
ljmp
shlb
add
inc
insb
fimuls
add
cmpsb
jo
inc
rorb
popa
test
jno
dec
lahf
inc
xlat
shll
and
pop
iret
adc
in
loopne
test
iret
pop
xchg
pop
jl
inc
jns
cmpsl
stos
add
inc
push
out
inc
or
adc
pavgb
xchg
inc
dec
lret
adc
aam
loopne
inc
inc
out
pop
cmc
mov
push
push
cwtl
or
subb
daa
mov
pop
fs
aas
out
sub
inc
mov
leave
iret
shrb
test
data16
stc
ret
and
aaa
js
and
jp
sub
sbb
push
jl
sbbl
mov
fdivrl
adc
dec
mov
sahf
jno
and
shll
inc
xlat
movsl
dec
aad
sub
test
lods
hlt
mov
int
rep
fistpll
add
fwait
dec
push
mov
dec
ret
in
out
gs
push
into
sti
shl
mov
sahf
jae
jae
filds
sbb
daa
dec
rclb
push
lahf
lods
xor
and
dec
ds
jno
sub
add
jo
jns
push
mov
xor
dec
jne
sub
push
lcall
mov
std
dec
movsb
xor
cwtl
shrb
stc
pop
std
andb
push
sub
movsb
xchg
jp
data16
sub
mov
nop
mov
jp
inc
xor
mov
orb
insb
insl
cld
jo
push
insl
sbb
insb
sti
push
roll
pop
loope
rcll
jno
rclb
mov
fbstp
xchg
xchg
cli
aas
add
aam
adc
mov
xchg
adcb
mov
mov
stc
add
xor
jecxz
adc
hlt
mov
jge
cmp
jg
and
fistl
or
jno
js
filds
mov
in
orl
mov
push
leave
mov
test
jb
jecxz
into
arpl
dec
idiv
mov
sahf
addr16
cmp
lock
ret
sub
jo
ret
test
jg
pop
xrelease
push
push
xor
test
gs
jnp
mov
fidivrl
cmpsl
pusha
cmp
jnp
sahf
xor
mov
cmpsb
rcl
cmp
loop
mov
adc
in
cld
lcall
fimuls
mov
sti
stc
addr16
loop
mov
and
cli
gs
and
rcrl
cwtl
inc
mov
imul
aad
scas
cmp
dec
les
push
popf
mov
push
xchg
out
push
jno
xchg
enter
cmpsl
pusha
or
mov
rolb
popa
xor
es
add
int3
fwait
int
stc
stc
jp
lret
andl
das
xchg
dec
jmp
sub
mov
repz
fchs
mov
mov
adc
int
sbb
insb
jne
popf
jnp
and
push
xchg
dec
scas
dec
sub
leave
sbb
insl
lds
lock
adc
loop
adc
mov
hlt
jmp
mov
xor
sbb
add
das
mov
adc
pop
or
sbb
lods
adc
icebp
pop
adc
add
mov
lahf
sub
int
aam
in
sbb
incl
and
mov
cmp
cmp
out
jle
in
ret
push
loope
push
scas
fwait
ljmp
mov
rorl
mov
loop
mov
or
push
ss
negl
sub
mov
fstl
out
dec
xlat
nop
scas
sti
cmp
jbe
rorl
inc
xor
xor
sbb
fimull
insl
enter
mov
stos
mov
into
push
lret
mov
stos
lods
mov
push
and
insl
call
xchg
pop
in
nop
xor
dec
imull
repnz
lea
int
sti
nop
xchg
cmp
sbb
sti
inc
cmp
and
dec
int3
sbb
data16
jbe
or
sub
mov
cmp
pusha
inc
leave
in
mov
xchg
rorb
mov
xlat
inc
gs
lcall
stos
jecxz
int
inc
pop
push
push
jge
or
rolb
arpl
into
add
and
jl
clc
inc
or
sbb
and
lret
push
xchg
dec
push
mov
mov
mov
gs
lds
out
nop
lahf
xchg
pop
inc
sbb
in
mov
jnp
test
add
mov
push
hlt
out
mov
xchg
dec
sub
sub
repnz
roll
inc
test
pop
jecxz
scas
test
and
arpl
jne
adc
stos
sbbb
pop
add
pop
pusha
mov
push
stos
scas
xor
sti
xchg
xchg
add
push
mov
inc
push
pop
add
mov
push
xor
test
cmp
adc
dec
cmp
xor
inc
or
pop
mov
ds
rcrb
push
sbb
sbb
out
dec
or
sub
sbb
pusha
xchg
pop
das
mov
loope
lret
in
ret
inc
subb
adc
mov
jo
cmpsl
xchg
sti
cli
pop
mov
repz
cld
sbb
out
sbb
es
dec
add
sbb
push
jg
push
or
dec
filds
es
xlat
adc
call
and
inc
cld
out
es
push
out
fcoml
and
and
pop
add
dec
std
in
out
fwait
scas
push
into
push
ret
cmp
pop
mov
jmp
add
sbb
nop
inc
push
xor
cmpsb
inc
dec
cmp
mov
aas
cmpsb
popa
mov
sbb
xchg
push
in
or
aas
xor
xchg
add
sub
cmpsl
stc
popa
or
and
jecxz
add
cmp
inc
nop
call
lock
mov
nop
jp
sbb
mov
pop
cs
into
mov
mov
mov
ficompl
lods
sbb
es
inc
and
jo
ret
std
mov
pop
mov
loopne
xor
push
cli
data16
int
cmp
mov
mov
add
fmuls
push
dec
sub
adc
jbe
leave
mov
xadd
cmp
shrb
bound
push
dec
js
inc
push
jp
or
push
pop
inc
xorl
xor
aas
rorl
cwtl
mov
xor
or
push
push
or
cmpsl
imul
cmp
sti
sub
inc
mov
imul
lret
ss
sub
jne
xchg
cmp
loope
dec
aaa
pop
jecxz
pop
mov
or
movsb
outsb
sbb
and
push
cmp
pushl
cmp
dec
sub
gs
loope
dec
mov
push
inc
or
out
push
adc
iret
fstps
pop
popa
mov
sub
in
clc
out
pushf
stos
dec
jb
sub
loope
fs
push
in
xor
push
cmp
sbb
fadds
das
mov
sub
lea
rcl
lods
and
repnz
dec
mov
mov
cmpsb
lock
dec
mov
pop
xorb
ss
add
sub
test
ss
rcll
imul
aas
std
sub
stc
adc
outsb
add
lock
cmp
mov
popa
dec
imul
call
and
mov
and
ljmp
mov
fmuls
mov
int3
sbb
scas
hlt
lods
inc
fwait
lds
cld
ljmp
push
andb
cmc
in
dec
adc
xor
ja
dec
daa
iret
lahf
sub
xchg
cltd
cmp
or
in
mov
mov
mov
inc
je
sbb
push
loop
loop
jo
enter
test
das
xchg
add
jecxz
pop
mov
sub
dec
loopne
add
fsts
or
mov
pop
outsb
scas
sbb
cltd
xchg
subb
pop
sahf
enter
imul
mov
and
rolb
lds
scas
ret
cld
sub
mov
fadds
xchg
jmp
pusha
mov
mov
and
mov
ss
dec
into
pop
pusha
call
js
xchg
mov
or
sahf
adc
add
test
xchg
cmp
lock
jmp
sub
cli
enter
lahf
mov
cmp
add
ret
inc
cmc
sbbl
add
rcrl
xor
mov
sub
push
movsb
pop
pop
sbb
outsl
fsubrs
mov
or
jp
xor
add
test
cmp
cli
sbb
test
aaa
cltd
push
sub
pop
pop
push
xor
repz
inc
cmp
fstps
nop
dec
les
add
jbe
xor
or
xor
les
jmp
dec
shlb
cmpsb
popf
hlt
popa
push
jne
add
pop
fwait
testb
sub
xor
cld
or
inc
mov
mov
dec
inc
cmp
lods
xchg
mov
adc
stos
push
shl
popa
iret
bound
pop
pop
and
jo
inc
or
fildl
adc
repnz
clc
jp
adcl
ljmp
imul
outsl
cmp
popl
rcr
test
jno
sbb
lods
test
and
call
inc
xor
push
test
or
lret
sbb
fstpt
sub
jns
cli
addr16
xchg
push
xor
into
push
ja
lahf
loopne
xchg
jno
mov
xchg
dec
mov
nop
jnp
or
jge
cs
addr16
and
push
ja
xchg
test
lds
gs
or
sbb
mov
imul
mov
jg
out
imul
jo
dec
ja
ljmp
ss
or
or
enter
fwait
mov
cmp
in
int
push
xchg
jbe
push
pop
ljmp
stos
aaa
mov
cld
mov
pop
sahf
cmpsl
add
fists
xchg
shll
dec
mov
ss
pop
cmp
mov
jno
ss
inc
mov
xor
xchg
gs
jecxz
int
push
pop
add
mov
or
sub
inc
rolb
popa
pop
ds
xchg
mov
dec
ja
push
setge
das
lahf
dec
inc
enter
cmp
fisttps
cs
dec
nop
lds
daa
out
pop
sbb
insb
pop
test
sbb
dec
mov
aaa
lret
and
mov
lcall
sbb
push
int3
fneni(8087
loope
and
push
inc
subl
imul
movsl
in
loope
stos
jns
sub
les
les
push
inc
push
xchg
stos
mov
neg
jbe
or
sti
push
sbb
test
jge
sub
jbe
mov
mov
mov
add
ds
xchg
pop
cmp
lcall
flds
insl
cmp
sbb
push
data16
add
mov
or
lret
mov
sbb
cmp
and
xchg
sbb
jb
repz
sarb
les
sbb
add
call
mov
xchg
test
into
iret
fcomps
cmp
lock
cltd
lret
ja
pop
sub
mov
outsb
insl
dec
popf
push
nop
mov
or
sbb
lret
sbb
and
push
push
mov
jle
push
addr16
std
adc
xchg
in
mov
pop
leave
inc
mov
cmc
leave
sub
loopne
dec
mov
jp
and
xchg
lret
sub
xchg
sbb
int3
push
dec
loop
cwtl
std
mov
push
das
fistpl
das
cmc
mov
sub
mov
data16
fldcw
pop
ja
shrl
into
jae
xchg
sub
jae
fisubs
gs
pop
sbb
gs
divl
pushf
leave
mull
dec
cmp
and
mov
push
sbb
scas
xchg
xor
mov
testb
jno
call
dec
loope
add
xor
fmul
jp
sbb
lahf
or
push
popf
ljmp
sub
jge
sbbb
xor
fnstcw
jl
add
and
inc
stos
mov
sti
roll
mov
mov
jb
mov
lahf
loopne
xchg
mov
int3
dec
xchg
loope
mov
xchg
stos
jae
jne
mov
loope
ret
push
js
rcl
outsb
arpl
mov
out
adcb
adc
cwtl
mov
dec
insb
int
ret
fildll
mov
outsb
fxch
xor
mov
push
mov
add
imul
jg
push
aad
bnd
push
fnstsw
or
orb
pop
int3
cmpsl
xor
testl
adc
clc
xchg
add
sub
repnz
scas
lahf
test
jg
push
shrl
add
scas
cs
movsb
dec
mov
sbb
xchg
es
gs
in
fdivrp
and
sub
push
ret
mov
xchg
mov
test
push
shlb
cmpsb
jmp
xchg
aam
push
and
call
fcoms
jl
arpl
push
and
sar
mov
sbb
sahf
in
and
inc
jmp
flds
mov
inc
jmp
sbb
jl
repz
inc
and
cmp
xor
iret
mov
cmp
rclb
scas
or
push
fidivs
cmp
dec
das
aad
sub
loop
xor
pop
sbb
sbb
push
mov
out
push
das
lods
pop
jnp
cld
dec
gs
xchg
inc
sbb
xchg
xor
xlat
mov
rcrb
daa
inc
pop
mov
push
mov
std
fs
test
rol
jns
rclb
inc
lahf
sub
add
je
push
nop
test
push
cmp
lods
shrb
rol
push
out
cld
xchg
aaa
push
movsb
mov
mov
jmp
insl
cwtl
mov
insl
loopne
sti
mov
cmpsl
xor
dec
jle
lds
cmp
dec
inc
mov
jae
daa
dec
scas
mov
dec
popf
adc
test
jo
cmp
fs
mov
sbb
daa
in
inc
or
inc
jp
bound
dec
mov
dec
loopne
shll
int3
in
push
mov
sarl
insl
and
jae
or
xchg
fdivl
lret
in
jmp
mov
mov
mov
add
xchg
aas
pop
jg
jl
aaa
gs
mov
les
mov
call
daa
or
mov
push
mov
cmp
adc
fs
jne
mov
and
jecxz
stos
lock
lock
fisubs
sub
jmp
jecxz
lods
imul
fists
push
jns
xchg
ja
popf
repnz
les
pop
fldl
shrl
std
pop
xchg
jns
fisttpl
sbb
cmp
pop
pop
sbb
into
mov
mov
sbb
mov
jns
cmp
add
push
cmp
ljmp
shrl
test
js
jns
and
and
in
in
jmp
into
bound
jmp
ret
cmp
push
and
cmp
add
mov
imul
mov
inc
ds
ja
cmpsl
lcall
push
js
loop
mov
inc
imul
xchg
rcrb
decb
pop
or
pushf
dec
add
out
jnp
into
xlat
dec
data16
sbb
mov
loopne
sbb
pop
adc
fwait
dec
sub
lods
mov
insl
aaa
or
fwait
push
xor
std
cmpb
and
jmp
mov
fdivr
xor
xchg
mov
adc
das
data16
jl
lock
data16
movsb
sub
out
sub
int
push
ret
push
fcmovnbe
jnp
scas
push
fwait
adc
int3
ret
scas
xorb
roll
imul
lret
push
hlt
lret
sub
mov
test
jle
cmp
je
xor
sbb
lret
push
mov
imul
test
sub
es
sti
into
pusha
or
sbb
cld
xor
xchg
call
push
int3
out
subb
mov
das
cmc
adc
fwait
dec
sbb
test
sub
pop
sbb
or
or
or
mov
jp
push
adc
mov
xor
scas
bound
mov
inc
cmp
add
fsubrs
bound
out
add
loop
xchg
sub
lock
inc
ficomps
sub
pop
pop
int3
xchg
mov
cmp
insl
inc
lods
sbb
movzbl
das
fwait
inc
sbb
outsb
cmp
jmp
or
aad
jg
jg
int
data16
sbb
imul
xlat
into
aad
dec
mov
pop
divb
lods
push
loope
adc
mov
cmp
insb
nop
aaa
adc
pop
xchg
xchg
add
xor
daa
cmp
sti
lea
call
mov
int
rcrb
pop
pushf
mov
pop
adc
ss
ljmp
pop
das
cmp
incb
xchg
stc
lock
inc
ret
pushl
or
outsb
lcall
cwtl
jmp
mov
bound
mov
mov
orb
xor
shl
sbb
sub
out
je
rorb
dec
out
sub
mov
mov
inc
fisubrs
cmp
clc
push
push
xor
aad
stos
popa
pop
ja
adc
fidivs
cli
sbb
lea
lret
fdiv
inc
cmpsb
out
pop
pop
add
push
xchg
mov
mov
jecxz
push
cmp
aas
jb
xchg
add
jmp
scas
dec
mov
imul
xchg
lahf
sarb
push
inc
mov
xchg
cmp
out
sti
lods
clc
push
es
xchg
push
mov
mov
lods
scas
stos
pop
ja
mov
and
mov
scas
add
jmp
scas
and
mov
loopne
jp
push
std
jmp
das
dec
push
mov
inc
repz
cmp
xlat
mov
and
faddp
adc
dec
jns
inc
xchg
sub
xchg
fmul
mov
enter
mov
inc
add
push
add
mov
test
inc
in
pop
sub
push
pop
dec
sub
mov
out
adc
fisubrl
xchg
call
mov
push
enter
sbb
pop
cmp
insb
dec
mov
add
jne
imul
loopne
push
xchg
lods
aas
ds
push
outsb
cmp
negb
push
aam
sbb
test
imul
cli
add
ss
pusha
fdiv
push
sahf
into
fwait
cmp
and
lahf
ds
or
mov
pusha
xchg
cmp
push
jns
jg
mov
cltd
mov
leave
dec
enter
cld
pop
inc
and
scas
xor
jmp
add
jmp
incb
out
lods
mov
or
in
inc
cmp
movsb
mov
cmpsl
and
or
aaa
cmpsb
lock
icebp
fmuls
add
fisttpll
mov
mov
fcoml
mov
adc
sbb
into
xchg
xchg
pusha
pop
fcomps
les
inc
fadds
xchg
aas
loopne
xor
mov
push
cmp
xchg
mov
mov
xchg
mov
orl
sbb
mov
adc
pusha
lea
inc
and
cmp
pop
xor
dec
ret
adc
pop
iret
out
inc
mov
sub
jmp
scas
push
icebp
cmp
mov
jns
and
popf
scas
add
adc
xlat
pop
repz
sarb
inc
gs
push
jo
jl
push
aas
dec
cli
jmp
sub
test
inc
test
or
pushf
sahf
fldcw
loop
jae
fcoms
sbb
jbe
mov
mov
push
orl
test
fnstcw
das
loop
dec
fdivr
aaa
mov
dec
out
or
mov
pop
or
cmp
ljmp
in
fldt
inc
shll
cmp
je
cltd
jae
test
sbb
mov
and
xchg
fmuls
mov
hlt
and
fsubl
inc
call
mov
hlt
test
or
push
adc
iret
fistl
sarl
sub
pop
jmp
loope
sub
sub
mov
cmp
inc
add
outsb
push
dec
sbb
mov
xchg
fidivl
push
es
pop
pop
push
mov
ss
stos
filds
and
lea
mov
sbb
lret
lret
inc
sbb
movsl
popa
rcll
xchg
mov
jge
mov
push
sub
xchg
pushf
jle
dec
adc
jae
jno
inc
mov
mov
and
cmpsb
mov
call
dec
leave
fsubp
cld
xsaveopt
pop
imul
fldt
mov
outsb
in
lahf
xchg
inc
sub
aam
sub
call
cmpsl
lock
outsl
adc
push
imulb
icebp
fistpll
jbe
pop
cmp
into
add
out
cmovo
inc
imul
test
push
xchg
das
push
cltd
jae
push
aas
repz
jbe
push
mov
and
movsl
push
hlt
in
dec
jo
das
xor
xlat
das
ljmp
out
push
lret
cmp
adc
sbb
sub
inc
adc
int
or
mov
add
xchg
xchg
push
pop
test
aas
mov
ror
push
sbb
jb
loope
lods
sbb
jo
inc
adc
inc
jp
cld
mov
sub
lahf
pop
adc
xor
push
xorl
xor
xor
imul
cwtl
jo
int3
xor
push
adc
dec
daa
sbb
test
inc
sub
insl
pop
gs
ret
ljmp
fimull
clc
adc
popf
dec
loop
dec
lods
ficoms
sbb
xor
data16
xlat
or
lods
cmp
addr16
or
mov
sbb
mov
ret
stc
outsl
mov
cmp
mov
pop
aad
cltd
push
adc
jecxz
push
dec
sub
cwtl
or
in
push
clc
add
push
lcall
ja
fst
in
sub
test
or
pushf
sahf
aaa
xchg
jecxz
adc
insb
add
push
mov
push
and
or
fs
mov
dec
push
insb
dec
adc
cs
dec
adc
cs
orl
pop
inc
fs
inc
mov
jnp
xor
mov
add
dec
nop
test
push
nop
sub
jo
pop
jb
clc
mov
push
xor
mov
or
sbb
or
or
loope
adc
mov
loopne
daa
sbb
insb
pop
in
nop
jmp
call
imul
cwtl
add
loop
jnp
or
pop
jbe
inc
nop
xor
insb
mov
cmc
mov
mov
inc
add
or
shr
pop
push
loop
aas
imulb
out
pop
mov
mov
ror
sbb
dec
fiaddl
xor
ret
mov
cmp
into
ljmp
scas
push
ja
xchg
push
xchg
test
mov
popa
icebp
je
inc
rcll
sbb
out
scas
inc
cmp
adc
cs
cld
lcall
test
mov
enter
inc
push
sub
jbe
imul
repz
ret
sbb
mov
jne
cli
mov
or
call
out
fidivrl
jno,pn
shlb
movsl
fsubl
mov
pop
jle
sub
lcall
dec
mov
sahf
fcoms
in
xor
xchg
or
mov
xlat
inc
mov
sbb
hlt
je
jg
and
add
inc
pop
pop
sub
sbbl
out
push
push
pop
les
mov
imul
push
or
std
fcmovb
or
xor
jle
clc
lcall
and
add
mov
sbb
pop
shlb
arpl
jp
xchg
and
je
add
mov
fiadds
ror
xchg
push
movsl
sub
inc
sub
mov
mov
inc
jno
daa
push
cmp
les
xor
cmp
dec
icebp
or
leave
sahf
dec
jnp
bound
insb
outsb
xchg
dec
jbe
lret
add
and
add
mov
popf
and
pop
adc
stos
fnstenv
xor
inc
add
sbbb
xor
inc
inc
rol
in
jmp
mov
or
enter
xlat
addr16
sti
add
out
daa
jbe
mov
jnp
popf
bound
aad
test
in
call
nop
xchg
sub
mov
jnp
bound
outsl
push
mov
je
add
js
pop
mov
xchg
stos
loope
or
lods
int3
sub
jecxz
sti
mov
jmp
push
xor
add
add
cmc
int
rclb
dec
in
cmc
icebp
movsb
out
push
mov
sbb
sub
out
adc
mov
push
inc
rorl
cmpsb
int
inc
pop
pushl
mov
push
add
sbbb
out
repz
sbb
sahf
imul
arpl
into
ret
jbe
scas
mov
mov
add
test
add
mov
push
sub
popa
fwait
repz
mov
mov
push
jae
test
lds
loop
mov
int
gs
bound
das
adc
mov
inc
cwtl
scas
pop
mov
int
add
addr16
je
or
and
aas
cmp
les
pop
jmp
enter
mov
addl
cmp
dec
iret
xchg
mov
addr16
push
inc
jo
cltd
jb
xchg
pushf
mov
mov
sub
mov
cmp
or
and
mov
inc
mov
std
sub
xchg
cmp
in
sbb
loope
push
jecxz
mov
test
data16
and
ret
add
test
mov
dec
push
into
mov
dec
and
pop
inc
inc
incl
jo
sarl
mov
push
out
ret
frstor
and
inc
dec
pusha
mov
xchg
pop
mov
pop
inc
test
cmp
pusha
inc
fnstsw
lea
cli
mov
mov
andl
pushf
shll
stos
jno
aas
pop
aad
sahf
or
push
divl
mov
mov
pop
fdivrl
cmp
jnp
jp
sahf
push
imul
fidivs
mov
out
push
add
pop
add
test
sahf
cli
xchg
sbb
mov
negl
jne
mov
in
inc
pop
movsb
clc
shll
pop
imul
leave
insl
xor
aam
dec
leave
fwait
sub
sub
pop
shrl
xchg
insb
lods
out
pop
pop
push
jmp
jmpw
rolb
inc
movsb
lahf
jo
xchg
scas
xchg
xchg
add
and
ds
lahf
push
cmpsb
loopew
in
ss
jns
insb
cltd
pop
arpl
subl
out
data16
cmp
aad
data16
jb
iret
add
xchg
sahf
and
sbb
or
inc
out
daa
sbb
test
mov
popf
into
arpl
mov
pop
jg
dec
jl
mov
mov
lods
sbb
xor
sbb
outsb
lds
pushf
mov
mov
xchg
pop
mov
cmc
subb
repz
cli
fcmovne
jg
scas
mov
inc
jle
mov
fwait
movsl
ds
ss
and
xchg
sub
int
dec
mov
movsb
cmp
les
mov
outsl
add
negb
nop
fs
lock
sbb
aad
in
xchg
push
bound
loop
call
aaa
and
test
test
or
jecxz
int
loope
mov
or
add
stos
push
pop
xchg
stos
adc
int
or
jmp
push
add
sub
push
inc
pushf
push
inc
and
sbb
or
dec
jb
and
in
mov
fcomi
push
mov
icebp
loopne,pt
inc
ljmp
stc
mov
adc
fs
adc
sub
dec
mov
mull
andl
mov
xlat
lods
roll
rclb
pop
or
add
stos
inc
sub
adc
xchg
mov
and
xor
jns
pop
cltd
pop
adc
inc
or
sbb
cwtl
loop
and
mov
iret
inc
xor
int
loopne
cld
push
or
xchg
lcall
mov
enter
mov
subb
fwait
mov
out
decl
into
and
jb
inc
loope
stos
push
push
pop
outsl
dec
mov
push
lock
dec
push
lds
popf
outsl
push
pusha
push
mov
repnz
hlt
sbb
cmpsb
sbb
inc
push
ljmp
iret
lea
dec
inc
es
int3
pusha
notb
dec
mov
inc
mov
int3
movsb
call
cmp
jo
lea
mov
push
dec
mov
add
dec
es
daa
and
xchg
sbb
clc
mov
mov
cmpb
xor
pop
jnp
sbb
aam
fsts
mov
loopne
ret
nop
mov
fxtract
popa
sarl
lret
cwtl
xor
shlb
imul
or
cltd
test
incl
out
jno
pop
bound
or
adc
mov
stc
leave
sahf
xchg
pop
test
sbb
rclb
fnstsw
fs
or
fsubs
out
movsb
xchg
cli
cmp
pop
mov
cmpsb
cwtl
push
jns
ret
idivl
mov
test
mov
out
mov
xor
ret
scas
bound
dec
push
mov
or
fnstsw
jg
sub
repz
nop
push
adc
aas
popf
jg
outsb
xor
mov
ja
push
xchg
loop
xlat
scas
mov
fwait
pop
pop
push
data16
cmc
lods
or
movsb
sbb
cmp
dec
lds
or
mov
lea
sub
cmp
xchg
sub
or
and
xchg
pop
lahf
xchg
and
popa
and
add
nop
pop
dec
mov
jecxz
jo
rcrl
and
mov
add
inc
dec
push
adc
leave
psubb
add
pop
xor
xlat
stos
sub
data16
pop
daa
rcll
cmp
push
pushf
cmc
pop
test
hlt
xchg
in
in
mov
scas
sbb
add
dec
rcrb
xor
shrb
inc
into
std
jno
lret
mov
inc
scas
and
or
jbe
stc
test
pop
mov
sbb
lret
lret
add
add
and
int
push
lret
out
lods
mov
push
and
pop
outsb
loop
das
cmp
add
inc
out
icebp
pop
sub
test
rcll
xlat
xchg
adc
jl
push
inc
sbbb
lahf
xchg
or
mov
jmp
mov
movsl
imul
aaa
mov
repnz
push
lcall
or
mov
xchg
ficoms
inc
dec
clc
sbb
push
aas
movsl
int3
out
and
ret
sbb
mov
lods
jne
icebp
add
scas
sub
das
ljmp
pushf
xlat
or
subl
sbb
and
add
stc
dec
and
ss
xchg
cmp
xor
iret
outsl
movsl
adc
movsb
outsb
push
sbb
adc
jne
leave
add
pop
das
xchg
adc
sbb
mov
hlt
mov
movsl
mov
shl
mov
iret
mov
pop
pop
test
cltd
aaa
pop
out
into
lret
jmp
stos
minps
into
nop
fmuls
pop
jmp
scas
or
cwtl
mov
shlb
aaa
pop
adc
or
pop
loope
sar
dec
add
fs
mov
cmc
jne
mov
jae
sbb
gs
mov
int
stos
shl
dec
inc
mov
mov
fcomp
into
cmpsb
leave
jo
int
xchg
pop
lock
inc
dec
pop
icebp
in
push
cmpsb
pop
push
out
inc
pop
lods
std
enter
xor
lret
push
test
clc
movsl
stos
in
cs
gs
aam
pop
sti
popf
xchg
cs
and
mov
divl
mov
lcall
or
lea
enter
jnp
mov
push
push
xorb
pop
fsubs
bound
cmp
ds
mov
mov
jmp
adc
stos
mov
pop
push
push
pop
or
call
and
push
xor
and
mov
lds
jb
push
cmp
sarb
mov
in
movsl
inc
scas
jne
fstpt
cli
jg
mov
xchg
cmpsb
loope
stos
xchg
and
jecxz
mov
mov
jb
popa
jb
pop
or
shld
jnp
int3
shr
mov
jae
xchg
fidivs
cmp
outsb
jo
daa
mov
sbb
iret
mov
cmp
sbb
sbb
test
inc
imul
mov
cld
in
lea
adc
jg
jno
arpl
pop
jbe
mov
sbb
repz
in
pop
jl
fistpll
stos
pop
push
mov
pop
xchg
mov
loop
imul
push
mov
sbb
dec
xchg
and
out
or
je
iret
dec
jo
sub
pop
push
jecxz
popf
jl
pop
add
mov
jmp
das
out
cmpsl
or
fwait
mov
inc
aaa
aad
mov
out
test
mov
and
shll
mov
sbb
mov
inc
js
ss
mov
outsl
pusha
rcrl
insb
aad
push
xchg
inc
xchg
ret
ds
mov
inc
shl
shrl
jg
push
or
inc
mov
sub
jl,pn
mov
xor
xor
xor
aad
enter
or
mov
pop
mov
adc
sub
pushf
inc
jle
mov
das
cmpsl
or
lcall
jecxz
adc
pop
pop
ljmp
shlb
insl
mov
cmpsb
xchg
mov
data16
mov
cmp
mov
sahf
int
mov
adc
push
jo
pop
clc
das
xor
out
xchg
jp
mov
mov
pop
mov
lea
sbb
pushl
fmulp
cmp
out
inc
ds
call
and
pop
pop
mov
xchg
gs
fs
sbb
or
add
repnz
ret
jns
mov
sub
int
ja
outsl
add
in
out
sbb
shrb
cltd
mov
pop
or
test
stc
sub
dec
cmpsb
jo
test
xchg
popf
add
inc
jbe
cmpsl
rcrb
aas
mov
fnsave
mov
das
sub
ds
stos
sub
push
aad
inc
fdivs
cmp
dec
push
sarl
add
fucom
decl
sub
dec
fimuls
outsb
sbb
and
mov
sub
mov
scas
xchg
push
sbbl
xor
les
and
jmp
sbb
in
mov
xor
mov
mov
inc
mov
xor
push
and
add
out
ds
push
jmp
cmp
push
or
sbb
stos
es
sbb
sahf
pop
loopne
sbb
pop
imul
mov
mov
dec
pop
jno
sub
xchg
insb
mov
lcall
out
test
iret
and
stos
ds
or
out
sub
inc
cltd
shll
aam
xor
adc
ss
out
cli
cltd
loopne
cmp
sub
mov
or
cltd
mov
cltd
dec
jne
movsl
mov
movsl
xor
mov
ret
aad
loope
movsb
clc
jb
adc
push
pop
add
or
ljmp
sbb
aad
push
insb
xchg
sahf
lahf
insb
xchg
inc
xor
out
addl
sbb
dec
jae
push
in
ror
mov
std
stos
dec
mov
outsl
icebp
and
pop
push
mov
jae
mov
rolb
dec
lcall
test
push
sahf
pushf
inc
lcall
cmc
and
and
inc
push
out
mov
bound
inc
mov
ss
push
fucomip
mov
inc
pop
inc
int3
into
fmulp
mov
psubb
dec
xor
xchg
scas
lcall
sub
mov
mov
push
stos
out
inc
xor
in
movsl
cmp
fldcw
test
aad
movsl
or
bound
pop
push
adc
fildll
mov
xchg
test
ljmp
push
testb
mov
adc
add
cmpsb
mov
xor
je
and
mov
out
mov
xchg
push
divb
call
dec
or
or
push
test
jnp
sbb
aam
sub
and
push
mov
int
in
and
cli
das
inc
sbb
popa
push
loopne
push
shl
imul
push
xorb
packsswb
fistl
push
lods
mov
outsl
mov
into
iret
lret
loopne
dec
xchg
popf
sti
loop
or
scas
loope
loope
cmp
mov
mov
add
aaa
roll
movsb
inc
in
inc
mov
xchg
stos
std
cmp
cld
jbe
leave
push
lcall
sbb
repz
scas
mov
jle
mov
inc
push
daa
xor
jecxz
cmp
mov
push
in
push
dec
mov
pop
fcomps
addr16
push
aas
lahf
push
inc
cld
fildll
repz
push
jl
sub
out
mov
jp
imul
arpl
mov
xchg
add
mov
out
jnp
add
into
out
ljmp
call
add
add
ja
pop
std
cmp
aad
pop
std
jp
xchg
popf
add
xlat
ja
xchg
mov
loope
pop
push
add
imul
popf
xchg
mov
mov
call
or
push
inc
dec
xchg
push
cmovae
dec
jl
aam
lock
stc
push
xchg
in
xor
cmp
ror
jge
shll
jb
bts
or
pop
dec
mov
mov
aam
push
sub
mov
mov
xor
sub
dec
mov
fs
jne
lret
int
xlat
rcrl
ds
mov
repnz
push
adc
enter
orl
enter
mov
aas
jecxz
icebp
adc
iret
iret
pop
ss
rcrl
mov
jo
into
pop
push
call
mov
mov
adc
pushf
mov
adc
mov
and
mov
adcl
imul
imul
mov
out
and
out
ret
rorl
or
lods
int3
inc
rol
iret
lcall
in
orl
pop
cwtl
pop
inc
xor
rorb
cli
cmc
sbb
call
out
movsb
mov
movsb
push
mov
pop
cmc
lock
push
rcr
jmp
mov
cltd
push
test
enter
not
mov
inc
inc
push
jbe
fadd
pop
add
imul
add
xchg
push
aas
negl
push
ficoml
cmpsl
test
loop
leave
in
fimuls
cmp
jbe
fnsave
mov
fs
inc
xchg
cltd
pop
lods
jns
dec
iret
mov
mov
lds
push
ret
stos
or
adc
and
xchg
dec
add
or
idivl
sbb
add
pop
push
cmp
jmp
fldt
lock
pop
fildl
adc
fcmovnu
cmc
test
or
enter
jg
mov
mov
jge
add
sub
sub
les
leave
lea
iret
jnp
cmc
cmp
outsb
xor
cmpsl
nop
outsb
fistpl
add
or
fldt
insl
adc
fnstenv
cmp
push
mov
sbb
xor
sub
aas
cwtl
add
xorb
inc
sub
mov
ret
mov
cmp
out
je
sbb
lods
xor
xchg
inc
sub
mov
nop
rcr
pushl
imul
fmull
xchg
data16
dec
fists
add
jo
arpl
lods
or
mov
dec
ret
test
and
sti
xchg
daa
jno
inc
sub
popa
mov
sbb
js
dec
and
inc
ret
shll
movsl
ffree
inc
enter
into
and
mov
add
stc
arpl
xchg
ret
shll
lret
xchg
addr16
jae
imul
push
lock
in
scas
out
xchg
pop
inc
lds
mov
and
cmc
rolb
push
sbb
fsubrl
js
push
popa
push
enter
mov
jbe
ljmp
pop
push
data16
stc
scas
imul
and
faddl
mov
test
adc
aam
rcrb
inc
jmp
lods
cmpsl
lea
insl
call
xlat
cli
lods
pop
bound
cmovge
sub
jno
mov
js
shlb
sub
sub
xchg
ja
dec
xor
xor
sarb
ret
or
add
fisttpll
clc
cmp
or
les
jnp
and
pop
add
adc
adc
ret
push
mov
adc
inc
or
cli
cmp
test
push
xor
aam
sbb
mov
xchg
daa
ljmp
jnp
mov
roll
pop
test
pop
cmpsl
pop
inc
lahf
das
loop
or
movl
fimuls
xchg
fwait
jns
jmp
pop
cmpsb
sub
repnz
orl
inc
mov
cld
sub
xor
aam
clc
adc
and
and
or
dec
jns
lret
fdivrl
sbb
cmp
dec
sub
out
in
dec
jns
xor
mov
cmc
stc
mov
lods
adc
mov
outsl
xor
and
dec
cmp
pusha
cld
pop
sbb
jb
push
lahf
pop
sbb
xor
sti
adc
inc
push
push
jp
cmp
sbb
mov
dec
and
leave
xchg
in
mov
mov
xchg
rcr
inc
add
imull
or
fcoml
shrb
call
xchg
push
aam
fisttpll
mov
sub
or
out
repnz
lods
and
add
outsb
add
cld
add
and
ja
jne
xor
or
lahf
lods
call
into
jo
dec
sub
or
in
ljmp
add
mov
push
jge
dec
mov
jns
cmp
imul
arpl
jno
and
mov
xor
ja
pop
cltd
dec
and
or
add
adc
adc
push
adc
mov
jo
pop
xor
int
fnstenv
sub
jno
xchg
mov
cwtl
mov
mov
adc
dec
xor
rol
inc
insb
out
push
adcb
mov
sub
xchg
jp
push
dec
scas
push
xorl
test
ret
sub
adc
imul
mov
or
cwtl
sbb
jg
sub
ja
shlb
add
movsb
push
push
or
ja
pop
mov
rorb
dec
in
lods
test
ss
mov
mov
mov
ja
mov
lret
jo
cwtl
stos
or
and
mov
mov
leave
std
sub
xor
movsl
aad
xchg
js
and
or
or
pop
mov
std
cmp
and
adcl
jle
push
je
pop
imul
add
outsb
cmp
fs
sub
xor
xchg
jae
adc
xor
jno
call
push
int
stc
sbb
subb
cmp
je
cmp
and
stc
dec
loope
je
outsl
pop
adc
mov
roll
sub
aad
cmpsb
xchg
stc
add
xor
mov
lea
cmp
in
push
lea
lds
mov
arpl
gs
push
xor
dec
xchg
fincstp
jge
xor
push
in
inc
sub
mov
int
or
mov
aam
imul
mov
xchg
mov
lds
jle
dec
gs
sbb
shl
mov
and
push
aad
shll
dec
push
daa
lahf
xor
stos
mov
aad
cs
pop
sub
rclb
push
dec
mov
loopne
mov
lea
sti
xchg
in
dec
dec
add
out
std
cmp
loop
lret
insl
add
push
add
bound
mov
jo
out
pop
out
inc
lock
jp
pop
outsl
pop
mov
sbb
adc
in
mov
movsl
push
push
cwtl
out
dec
out
pushl
cmp
outsb
ret
sbb
dec
push
sarb
mov
rorl
push
adc
jae
cmp
int3
shrl
xchg
jns
imul
mov
xor
dec
adc
mov
rclb
xchg
push
lods
jbe
lret
leave
mov
fiaddl
test
push
idivl
in
xchg
data16
xchg
xchg
pop
rorl
fmull
add
test
mov
push
enter
inc
repz
cmp
pusha
add
hlt
stos
mov
adc
rorl
or
xchg
fstpl
mov
sbb
jmp
add
xchg
sbb
xchg
imul
pushf
insl
jb
push
cli
leave
push
inc
ss
mov
dec
loope
dec
xchg
xor
and
pop
jge
out
dec
std
dec
or
in
int
fadds
adc
in
sbb
or
mov
xchg
jb
enter
add
cmpl
test
jle
or
cwtl
mov
and
jnp
or
sbb
sbb
out
jbe
out
iret
nop
test
pop
lods
mov
or
scas
sbb
and
mov
fwait
add
sbb
sub
add
imul
add
hlt
sbb
xor
jg
add
pop
jb
addl
jns
inc
pop
ss
bound
xchg
test
add
add
push
popf
pop
out
dec
sbb
shl
push
lahf
cltd
hlt
xchg
mov
sbb
loop
lcall
cmpsl
loope
cld
inc
lods
ficoms
adc
push
out
dec
cld
jle
push
xchg
cmp
pop
push
add
fistpl
or
ljmp
adc
icebp
pop
mov
mov
js
sbb
jae
lret
lret
adc
pop
cmc
xchg
sub
mov
sarb
sub
mov
xor
lea
jne
cs
fxch
push
fwait
adc
test
test
mov
nop
mov
mov
adc
push
jno
adcl
outsb
or
push
aam
inc
jb
das
repnz
popa
adc
addr16
js
fcmove
scas
push
ss
cli
add
and
icebp
xchg
jno
mov
sub
push
lahf
jo
push
inc
insb
sub
push
adc
cmp
or
adc
and
xchg
add
stos
rcll
stc
xchg
sub
xor
xchg
jg
mov
movsb
popf
pop
in
mov
xchg
rorb
sub
ret
daa
int
xrelease
pop
bound
sub
int
stc
mov
cmp
adc
sbb
cmpl
das
pop
jecxz
dec
fstl
push
pop
lret
or
inc
fimuls
pop
mov
in
sbb
jmp
push
add
mov
push
imul
push
sbb
add
js
push
jne
outsb
movsb
lcall
fwait
movsb
arpl
sahf
jecxz
mov
sub
lret
xchg
mov
cmc
cs
push
add
xor
fisubs
fisubrl
ljmp
cmc
scas
push
test
mov
out
std
or
dec
cmc
mov
mov
jnp
mov
rorb
xchg
jbe
and
cwtl
add
call
pop
int
mov
movsb
dec
xchg
es
stc
aam
fadds
flds
cmp
jmp
hlt
mov
ret
idivb
in
les
push
jle
pop
and
cs
push
mov
cltd
seto
jb
push
cmp
cmp
fwait
dec
pop
enter
push
lcall
pop
out
mov
xlat
sahf
sub
xor
pop
outsb
and
inc
jmp
and
push
andb
repnz
xchg
jmp
pop
arpl
mov
sbb
and
addr16
xchg
insl
ret
push
adc
repz
imul
push
arpl
cmpsb
inc
sarb
clc
xchg
into
or
pop
xchg
scas
cmp
rcrb
sub
pushf
push
pop
and
and
pushf
lock
push
mov
pop
dec
and
test
cwtl
fistl
xchg
js
fwait
sbb
jecxz
inc
shlb
cmpb
insb
xor
outsb
push
sub
lea
sub
add
mov
mov
and
neg
nop
mov
cmc
ljmp
and
and
sub
dec
into
rorb
jbe
lahf
and
lock
pop
sbb
pop
orl
sbb
cwtl
or
inc
fldl
roll
add
and
ud1
sbbl
ret
cmpsb
and
sbbl
xor
iret
jnp
daa
inc
cmpsb
mov
push
adc
jmp
push
in
sub
mov
orb
push
aaa
outsb
loop
rclb
jae
mov
in
dec
rcr
sbb
mov
and
dec
jge
add
or
arpl
rcl
idiv
clc
mov
mov
xorb
adc
pop
inc
leave
inc
sub
xchg
lret
das
push
sbb
das
arpl
adc
pop
lcall
inc
xchg
push
into
insb
movsb
sbb
dec
pop
loopne
push
cmp
sahf
in
sbb
dec
adc
mov
push
sub
mov
pop
fmulp
push
jl
fs
repz
inc
xchg
xor
add
jecxz
lock
mov
dec
faddl
mov
cmp
inc
or
mov
cs
inc
sub
pop
jnp
mov
movsl
test
dec
push
std
test
jb
shl
jp
xchg
mov
sbb
lods
fnstcw
dec
rorb
cmpl
enter
notb
cmpsl
addr16
cmp
fcompl
cmp
adc
pop
sub
or
daa
dec
cmp
test
sbb
nop
dec
jnp
pop
jecxz
inc
pop
movl
arpl
test
jge
add
mov
std
push
mov
sub
mov
and
out
jae
inc
clc
inc
sarb
cmp
test
rcl
jg
or
fistps
xchg
adc
out
push
icebp
leave
mov
and
cmpsl
and
rcrb
mov
out
jmp
fsubr
xchg
arpl
adc
dec
dec
stos
jecxz
or
xchg
imul
dec
mov
push
inc
xchg
movsl
jg
iret
fidivrs
stc
outsb
test
xor
dec
or
int
mov
jns
les
sti
jb
ds
in
cmp
push
shl
add
dec
stc
imul
push
sbb
mov
fcompl
and
in
pop
mov
or
push
movsb
out
push
mov
insb
mov
lret
cmp
jne
xchg
lock
fldl
mov
sbb
add
cmp
sbb
cwtl
push
add
ljmp
cmp
mov
pop
stc
jne
sbb
and
xor
mov
add
fidivrs
out
pop
push
test
out
xor
or
shr
cld
jnp
jle
xchg
pop
and
repnz
jle
aam
lds
adc
movsb
stos
loopne
cli
xchg
out
cmpsb
fwait
dec
imul
leave
imul
mov
push
repz
mov
pushf
addl
into
loope
stc
sub
hlt
xchg
pushf
xchg
insl
dec
mov
adc
rcrb
popa
and
jo
sub
add
or
mov
xchg
jne
rcrb
inc
ljmp
jns
jno
sub
jmp
jo
push
inc
and
lahf
jmp
fidivs
mov
clc
stos
aas
mov
inc
movsb
mov
popf
ret
jle
mov
lret
cmpb
dec
test
icebp
aaa
dec
lret
push
pop
imul
push
mov
jno
inc
aad
pop
jmp
mov
inc
xor
rorb
and
adc
jg
dec
lock
sub
lea
dec
scas
jmp
in
test
ss
cmp
or
in
mov
insl
xchg
push
outsl
sbb
mov
jno
xor
stc
jno
push
fcompl
jno
mov
rcrl
mov
cmp
lret
fsubs
int3
pop
test
pop
int3
lahf
pop
jecxz
dec
stos
cs
into
jmp
inc
lods
in
inc
imul
ja
leave
imul
xchg
cmp
inc
inc
pop
mov
push
imul
insl
pop
aam
dec
test
out
cmp
and
add
pop
push
orb
test
pushf
and
divb
fdivs
xchg
cmp
cs
xchg
imul
addr16
dec
jecxz
outsl
jae
lahf
in
push
xor
cld
jmp
pop
int
mov
adc
lock
xchg
movsb
sahf
sti
ret
subb
pop
js
sbb
js
dec
xor
outsl
loope
add
lods
fs
xlat
push
cmc
lret
popf
popf
push
jo
movmskps
mov
mov
or
repz
and
push
loop
jne
outsl
push
loope
mov
scas
push
pop
and
sub
xchg
into
pop
add
notl
adcl
mov
inc
or
cmpsl
dec
ljmp
adc
gs
js
sbb
stos
add
or
sbb
outsl
sub
imul
xor
dec
jbe
je
subb
fidivs
mov
jle
pop
jbe
pop
stos
cmp
sbbb
adc
add
pop
frstpm(287
add
sbb
xchg
in
mov
dec
cli
pop
jno
fisttpll
lret
sbb
call
mov
inc
fwait
pop
repz
inc
push
mov
sbb
xchg
sbb
cltd
fisubrs
lcall
mov
add
adc
xchg
leave
test
pusha
or
inc
sti
imul
cmpsl
mov
fildl
lods
imul
fs
mov
adc
sbb
stos
mov
mov
fildll
or
icebp
jbe
dec
xor
dec
stc
imul
sbb
in
lret
rcll
fldl
fldl
and
push
cli
pop
movsb
pop
cld
inc
iret
pop
cmc
cli
mov
popl
mov
testl
xchg
outsl
clc
repnz
mov
jmp
sub
mov
mov
add
insl
jp
stos
jo
dec
scas
mov
andb
jo
jl
mov
sub
arpl
addl
test
andl
pop
mov
pop
sub
add
fs
pop
xchg
pop
repz
jae
jb
pop
divps
out
xchg
ss
rcl
cmpsl
insl
mov
in
xchg
xchg
cmp
mov
xchg
jge
stos
push
mov
lods
jne
cld
xorl
repz
enter
sbb
aad
push
push
js
dec
insl
aaa
or
in
jns
cmp
or
sub
cmp
out
jl
les
lret
dec
daa
jg
mov
xor
xor
jnp
in
scas
or
inc
sub
and
xchg
fadd
cmpsb
repz
adc
nop
jnp
jmp
flds
sub
ret
jo
xor
lret
repz
repz
outsb
sbb
push
fsubl
inc
sbb
inc
pop
sahf
fdivs
cmc
mov
add
dec
sub
dec
push
rcrl
ret
adc
push
lods
arpl
inc
mov
cmc
push
inc
xor
aad
out
sub
into
dec
jl
mov
pop
es
add
int
lret
mul
iret
les
adc
add
mov
sub
dec
xor
push
jne
adc
stos
adc
cmpsb
insl
out
sbb
pop
mov
dec
adc
xor
imul
inc
pop
popf
cmp
sarb
inc
aad
int3
fdivs
xlat
in
inc
clc
lods
popa
imul
fwait
mov
xchg
outsb
push
stos
and
inc
or
out
mov
mov
outsb
stos
mov
cltd
adc
push
ljmp
jmp
add
aaa
or
leave
sbb
cltd
mov
sub
inc
lahf
lods
fisttpll
xchg
cmpsb
jg
cmc
xor
cmp
mov
sub
pop
data16
mov
inc
mov
aad
dec
sbb
lods
add
add
mov
xchg
out
dec
dec
xchg
sahf
push
and
loopne
pop
push
fstpl
das
sbb
outsl
push
xor
cmp
in
pop
aas
mov
push
aas
push
cmp
testb
lds
lret
lret
add
imul
aaa
adc
xor
pop
pop
add
mov
pop
push
add
jmp
call
cwtl
add
outsb
cmp
push
mov
dec
loope
jge
add
inc
adc
pop
jbe
jne
fcoms
enter
nop
sub
jl
inc
jbe
in
dec
popl
adc
bound
adc
add
aas
inc
mov
insl
cmpsb
daa
and
mov
mov
xlat
push
cmp
gs
loopne
pop
xor
mov
mov
mov
mov
into
insb
mov
adc
inc
xchg
adc
or
aam
out
insl
push
cmp
adc
shrb
jb
cld
das
inc
gs
jo
test
in
lods
jp
xor
imul
sbb
add
xchg
jg
mov
cmp
inc
push
add
push
push
jb
add
or
xchg
cwtl
xchg
sti
in
ja
sub
stos
lods
jle
dec
push
dec
mov
insl
push
xchg
mov
or
inc
fdiv
loop
xor
cltd
add
and
and
ret
push
pop
cmp
mov
xor
lods
adc
inc
adc
jle
inc
inc
test
push
mov
mov
push
push
sti
and
sbb
and
fbld
call
das
add
cmp
ljmp
pushf
push
seta
mov
and
rorl
xor
dec
jo
popf
aam
xchg
sbb
notl
inc
cmp
ret
sub
loope
ja
fcmovbe
fcomi
pusha
mov
lret
in
add
in
jge
pop
pop
and
push
rcll
push
and
int3
cmpsb
jnp
and
daa
rcrb
daa
adc
gs
iret
js
mov
mov
je
popf
or
das
out
into
fsubs
xchg
inc
push
jbe
or
shlb
in
sub
push
and
outsl
jecxz
repz
mov
mov
scas
test
orb
movsl
mov
and
cmp
repnz
std
fidivrs
fistl
xlat
jp
jae
fimull
xchg
out
fistl
xor
lods
jmp
push
in
and
lods
and
xchg
pop
cmpsb
xor
dec
cli
ds
js
cmpsl
xchg
and
push
pop
and
adc
or
add
stos
pop
dec
jns
xchg
mov
push
xor
in
push
add
mov
fs
adc
aaa
js
aad
cmp
jnp
xor
jp,pt
xor
pop
adc
ss
shrb
bound
lods
popf
lcall
mov
imul
test
pop
push
out
add
popf
test
inc
das
insb
stc
and
repz
pop
jg
mov
fimull
notb
sbb
mov
popf
cmc
dec
std
sbb
mov
pop
push
xlat
mov
or
loopne
jnp
pusha
pop
test
mov
jge
sahf
pop
sub
dec
repnz
mov
sti
outsl
cmp
mov
xor
push
sbb
ja
fstp
sbb
mov
pusha
cmp
aam
push
mov
lret
orps
adc
sub
mov
movsl
jl
xchg
fwait
decb
mov
and
inc
cltd
dec
adc
cli
ss
xor
scas
inc
ret
ret
xchg
dec
ljmp
icebp
mov
add
dec
mov
daa
xor
mov
sub
stc
into
into
aad
mov
in
pop
int3
adc
jge
and
loopne
add
mov
pusha
adc
sub
push
arpl
xorl
mov
adc
add
cmpsl
je
sub
int3
add
int3
cmp
mov
or
stos
out
or
fwait
jecxz
repnz
movsl
sbb
fbstp
sbb
cmp
inc
ljmp
jb
xor
dec
je
dec
mov
push
jno
imul
nop
sub
aaa
je
in
shl
les
lods
out
addr16
xchg
popf
adc
and
clc
or
dec
ffreep
testl
ror
shlb
lds
add
push
push
fdivl
sbb
push
inc
and
sbb
sbb
sbb
lea
aaa
sbb
mov
lret
mov
ds
jbe
mov
and
mov
cmp
scas
inc
filds
dec
push
vxorps
jg
mov
loopne
jno
fwait
xor
add
dec
cli
rcrl
xor
mov
fdivl
nop
jo
insb
pusha
xchg
das
out
pop
pop
push
hlt
frstor
fisubrl
inc
nop
clc
xchg
movsb
lcall
push
repz
xor
mov
cld
je
mov
cmp
mov
xor
cmp
pop
pop
mov
and
js
out
ret
imul
ret
jl
dec
cmc
xlat
push
das
adc
xor
mov
stos
aam
sub
sahf
fs
leave
call
lahf
push
loope
fwait
xor
xchg
leave
lret
xchg
cmp
add
repz
adc
pop
aaa
xor
sub
jnp
and
xor
shl
lock
mov
and
xchg
mov
push
jae
test
iret
out
in
lea
jecxz
cli
and
and
sub
push
stos
lock
int3
jg
mov
add
lahf
push
pop
jp
sub
inc
shlb
rorb
add
mov
lret
subl
xchg
inc
push
subl
and
jp
rcrb
repz
pop
test
xor
sub
clc
dec
ss
inc
and
ja
dec
jno
movsl
cli
std
arpl
inc
inc
sbb
xchg
dec
push
xchg
pushf
aas
sbb
mov
cmp
repz
cmp
mov
jb
and
push
sub
fildl
not
cltd
gs
jb
movsl
mov
out
dec
or
and
pop
sub
dec
jl
imul
fisttpll
pushw
dec
shlb
aad
imul
push
xor
call
cmpsl
xor
repnz
jp
outsb
setle
aam
out
push
cwtl
dec
minps
fdivrl
subb
test
cmpsl
xor
adc
mov
fdivl
xchg
rclb
aam
mov
ja
xchg
sub
mov
jo
adc
push
imul
push
scas
mov
outsl
push
loopne
sub
movb
test
sub
ja
test
mov
jge
sahf
das
sbb
mov
or
xor
mov
lea
stc
out
adcl
jb
mov
and
popa
cmc
in
aam
mov
or
ds
sti
movb
ffree
or
cli
jb
adc
insb
cmp
adc
in
xchg
lret
js
add
je
pop
mov
dec
notb
das
jno
sub
xor
mov
xchg
add
mov
and
push
jae
cld
add
xchg
mov
xor
jo
mov
out
jle
adcl
mov
insb
lahf
xchg
loopne
into
jns
push
mov
xchg
lcall
sub
test
jg
insb
jbe
pop
pop
insb
scas
mov
fs
ds
xorl
cmpsb
mov
loop
mov
or
add
push
cmc
mov
lahf
ljmp
add
jl
cmc
jno
mov
mov
jp
lods
inc
dec
loopne
add
movb
outsl
in
mov
out
rclb
lret
aam
mov
sub
mov
mov
cltd
stc
int3
stos
or
testl
jae
out
cmp
and
dec
sahf
jns
cli
loop
lcall
inc
mov
pop
pop
pop
repz
xor
jno
mov
orb
push
dec
movsb
sbb
in
pop
push
xor
adc
mov
push
punpckhbw
cmpsl
jns
mov
inc
dec
cmpsb
inc
and
pop
ficompl
shl
pop
or
shlb
dec
mov
inc
dec
imul
dec
call
mov
imul
fsubl
jge
lcall
pop
lods
xchg
jp
cmp
jle
jae
push
mov
shr
icebp
push
out
pop
fisttpl
mov
cli
lahf
das
mov
push
pop
sub
fstpt
lds
fstl
dec
aaa
sbb
jl
pusha
push
shrb
push
inc
cmp
add
into
mov
shll
add
or
dec
out
test
lcall
je
insb
push
outsl
or
mov
rolb
and
push
leave
mov
int3
gs
xchg
xchg
adc
mov
arpl
push
int
or
or
call
inc
pop
rcrb
xor
mov
mov
push
in
push
add
scas
mov
mov
out
ja
ljmp
mov
inc
test
popa
in
inc
pop
inc
pop
xor
mov
and
dec
or
and
add
xchg
cmp
insl
and
mov
psubusw
loope
jno
fbld
pop
jo
loope
inc
pusha
lods
adc
push
sahf
sti
ret
adc
ja
xchg
cld
mov
mov
inc
sbb
cmp
xchg
nop
rolb
sbbb
inc
int
xchg
mov
xor
sbb
ja
ret
push
push
pop
mov
mov
lock
jmp
stc
sub
movsb
es
sarl
mov
lea
xchg
int3
mov
or
jmp
add
jmp
and
shll
pop
pushf
pop
es
push
xchg
adc
add
add
scas
outsb
ror
jle
cmpsl
sub
icebp
ss
sub
mov
in
mov
pop
outsl
out
xor
inc
push
icebp
inc
sub
dec
fwait
push
xchg
jne
mov
jmp
test
push
lock
outsl
out
adc
iret
test
and
mov
dec
pop
test
repnz
inc
xor
mov
mov
and
test
ja
sbb
inc
roll
and
or
mov
pusha
push
sahf
clc
adc
mov
out
and
mov
mov
sub
sbb
pop
cli
cmp
push
inc
add
or
or
mov
mov
add
mov
sub
lea
shl
inc
xchg
cmc
ret
shlb
idivb
icebp
pop
jmp
mov
pop
lods
push
shlb
xor
mov
roll
xlat
mov
adc
sub
xor
pushf
adcl
in
nop
push
add
js
mov
stos
shll
xchg
or
pop
sbb
push
js
push
xorl
cltd
mov
xor
xchg
dec
jb
xchg
cwtl
xchg
jae
sbb
loop
ds
loopne
adc
aam
fisttpll
mov
push
repnz
dec
sti
jle
mov
xchg
icebp
push
pop
pop
pusha
pop
lods
jo
jmp
dec
jmp
push
daa
sbb
xor
push
ss
sbb
inc
test
xorl
xor
in
add
adc
pop
lea
je
xchg
jp
mov
sbb
in
mov
in
sub
sub
xchg
adc
xchg
mov
dec
pop
outsl
outsb
test
ds
cmp
inc
xchg
jge
dec
popa
das
pop
les
out
sarb
in
push
dec
shlb
cli
adc
push
cltd
call
ds
xor
and
lret
mov
lods
and
test
and
mov
fcmovnbe
pop
pop
ja
sarl
pop
gs
mov
lods
aam
inc
mov
fdivl
out
xchg
cmp
dec
lods
jp
test
mov
xchg
stos
push
test
inc
jmp
mov
out
sub
lcall
dec
loop
enter
pop
mov
push
add
shld
mov
mov
std
push
loop
aaa
push
pop
xor
pop
sub
xchg
sbb
and
adc
cmpsl
mov
xor
xchg
loop
sub
push
fdivrs
xchg
jl
stos
sub
mov
or
es
orl
test
ja
outsb
jg
push
shlb
sbb
push
mov
int3
pop
or
imul
enter
clc
adc
xor
or
imul
xlat
push
xor
pop
push
and
xor
outsl
popf
arpl
push
add
nop
inc
sub
adc
jge
test
cmc
out
pop
lcall
mov
ljmp
mov
nop
ds
mov
jecxz
addr16
cld
xchg
data16
aad
fidivl
icebp
adc
sbb
repz
and
and
mov
imul
jns
adc
pushl
jp
enter
push
mov
test
jle
movsb
xor
pop
lds
jp
fidivrs
sbb
mov
scas
add
je
pushf
add
push
jb
mov
mov
rcrb
sahf
adc
mov
xchg
mov
imul
push
cmpsl
sbb
movsl
jp
xchg
loope
mov
out
test
std
out
jecxz
xchg
clc
fisttpll
aad
out
jne
popa
xor
xor
xorb
and
xchg
xor
fimull
lods
pop
insb
sub
or
xchg
xchg
push
and
jge
jg
aaa
mov
inc
ret
jg
enter
mov
cmp
mov
lea
mov
lret
jge
cmp
in
aad
mov
shll
fidivrl
or
xchg
movsl
out
adc
out
push
js
nop
out
xchg
mov
jo
notb
cmpsl
mov
or
sub
std
bound
ss
sub
shlb
sbb
mov
xchg
testl
add
mov
mov
mov
enter
shl
xlat
imul
insb
push
pop
pop
popa
aaa
mov
fs
movsb
cmp
mov
xchg
insb
jno
lea
xchg
sbb
pop
pop
cmc
push
out
mov
xchg
or
icebp
lcall
xchg
xchg
jae,pt
pop
push
xor
imul
rclb
pop
stc
push
xchg
rolb
jmp
adc
fcmove
jmp
add
mov
movsb
fidivl
pop
fildll
in
dec
cmpsb
sti
rorb
push
sbb
lret
inc
dec
add
stos
test
jo
jg
aas
xor
sbb
push
outsb
pop
push
das
fldcw
cld
dec
push
aam
pusha
push
or
filds
imul
bound
jns
and
cltd
roll
lret
or
sub
popf
and
mov
cmp
or
fstpl
or
in
mov
test
cltd
sahf
jle
sub
cmp
notl
jl
jne
fcmovnu
fistpll
std
inc
pop
mov
dec
cli
dec
in
xchg
cmpsl
jne
push
adc
mov
push
loopne
inc
mov
jle
ficoml
cmp
js
sub
lret
out
sbb
out
mov
sbb
pop
xlat
lods
ret
sbb
sti
or
jp
inc
fnsave
fsubrs
bound
out
or
cltd
inc
lock
or
lret
jge
adc
lcall
xchg
adc
pop
xchg
fisubrl
test
jp
jg
cwtl
inc
ret
iret
cwtl
hlt
sub
ss
sub
push
jae
xchg
sarl
or
push
aam
daa
in
lock
or
mov
ljmp
stc
push
inc
xor
push
movsb
inc
xchg
jge
xchg
adc
pusha
and
std
inc
pop
andb
pop
pop
je
stc
fistps
test
lret
fcoms
sbb
and
mov
sub
pop
shrl
hlt
lods
popf
mov
insb
sbb
sbb
sbb
clc
and
cmp
pop
push
and
pop
shlb
es
insl
popf
jnp
out
add
lock
push
xchg
sub
pop
and
or
mov
mov
sub
dec
scas
sahf
cwtl
mov
or
hlt
fnstcw
addr16
idivl
shr
xor
out
ja
mov
stc
outsb
xchg
and
push
fwait
in
lcall
sahf
or
cmp
in
leave
dec
jnp
cmp
sbb
pop
loopne
jne
sub
push
mov
mov
clc
test
xchg
push
xor
leave
push
call
push
inc
movsl
mov
lods
mov
bound
and
xchg
loopne
xor
xor
negl
add
pushf
lea
xor
push
hlt
dec
int
divl
pushf
cltd
push
mov
pop
xchg
repnz
into
sbb
cmc
cmp
push
xlat
and
jl
scas
cltd
jle
les
or
add
cmp
lret
nop
adc
sbb
jge
pop
mov
int
loop
shlb
or
aam
cmp
cmc
mov
cmp
mov
mov
push
scas
imull
daa
pop
in
ret
mov
pop
mov
or
loop
or
xor
call
add
addr16
cmc
dec
jecxz
mov
mov
call
dec
mul
pop
adc
stos
mov
bound
xor
dec
aas
lods
gs
shll
lods
mov
mov
call
sarb
jl
jmp
lods
and
or
add
mov
dec
in
mov
sub
lret
dec
hlt
sbb
add
mov
pop
into
pop
std
lret
mov
std
push
fcoms
and
sbb
adc
or
idiv
pop
mov
shrb
and
add
movsb
lret
test
mov
sbb
adcb
mov
xchg
dec
mov
jb
push
dec
mov
jb
or
repnz
adc
add
cltd
pop
inc
sbb
xchg
daa
cmp
sbb
movsb
cmp
adc
mov
xchg
aad
fwait
js
out
cmp
push
and
out
xlat
inc
adc
sbb
pop
or
mov
nop
sbb
jmp
out
je
cltd
insb
jb
fnsave
pop
pop
fwait
pop
call
add
push
jne
or
rcll
pop
cmc
andl
or
dec
aaa
xchg
dec
daa
fucomi
mov
jmp
push
ret
jl
test
push
pop
xchg
cmpsl
dec
or
push
xchg
sbb
lods
test
call
lods
stc
ret
insl
popf
or
jmp
fldt
adc
orb
sub
cld
aad
rolb
insl
push
roll
popa
loop
dec
dec
push
add
mov
jns
adc
xchg
and
call
xor
add
and
sub
xchg
push
dec
mov
fdivrp
pop
test
loope
outsb
adc
mov
test
jne
rorl
int3
inc
push
gs
lock
cmp
dec
adc
pusha
out
fdivrl
out
sti
xchg
or
adc
xor
pusha
mov
push
push
imul
jnp
push
pop
mov
pop
push
loop
cwtl
inc
add
dec
icebp
out
xchg
rcr
pop
jbe
ret
lea
xor
sahf
stos
daa
jl
bound
arpl
sub
mov
pop
mov
or
cmc
inc
lret
sub
aad
jns
and
cs
inc
mov
dec
stos
rcr
or
sub
jbe
xor
dec
inc
add
repnz
cld
ficoml
xchg
frstor
fmul
add
sti
fidivrs
or
dec
or
mov
aas
out
dec
sti
out
xchg
push
fmul
mov
mov
add
lahf
fstps
das
inc
jb
mov
hlt
fisubl
sub
andl
flds
loop
call
jg
lock
sarl
or
pop
mov
xchg
int
pop
sti
jne
add
rol
outsb
mov
ss
mov
lret
fwait
scas
add
or
mov
stos
adc
imul
mov
xor
shl
and
xor
aaa
shrb
nop
or
aam
into
stos
nop
je
rorb
mov
mov
imul
fldcw
jb
pop
push
push
lret
stc
inc
int
xor
mov
add
and
cmp
dec
sbb
xchg
add
sbb
add
ds
int
test
xchg
adc
jo
andb
cli
bnd
push
lods
popf
push
jae
call
xchg
je
inc
mov
and
dec
insl
ret
scas
jecxz
outsl
mov
pop
adc
into
inc
ss
push
dec
cmpsl
inc
mov
mov
fstl
sub
outsl
cmpsl
sbb
dec
jno
in
push
xchg
aaa
std
mov
sub
jge
jne
cltd
mov
cwtl
cmp
call
ds
testl
mov
hlt
inc
fs
mov
icebp
and
pop
lret
sbb
popa
add
xchg
mov
outsl
push
mov
mov
out
push
jmp
add
adc
cmc
movsl
cwtl
mov
xchg
shlb
xchg
std
insb
or
inc
xor
add
fidivs
adc
fsubl
inc
dec
push
bound
pop
sbb
dec
out
jnp
add
mov
imul
aaa
xchg
xor
aad
xchg
jns
pop
loopne
xor
out
out
jb
outsb
pop
cmp
xchg
pop
aaa
mov
cmp
dec
imul
mov
arpl
enter
popa
pushf
outsl
in
cmp
dec
mov
xor
pop
mov
jb
fldenv
scas
push
xor
test
pop
adc
xor
rcrl
aaa
fnstenv
xorl
int
xor
shll
mov
pop
xchg
add
sti
cld
out
xchg
fiadds
jo
mov
jnp
inc
hlt
adc
pop
fs
testb
es
adc
pop
cmp
cmp
test
sub
adc
add
popf
inc
xor
imul
cmp
outsb
xchg
push
xchg
or
jg
sbb
loope
test
mov
imul
xchg
scas
clc
mov
dec
ja
test
dec
addr16
xchg
and
mov
lret
push
xchg
mov
mov
add
fdivrs
adc
daa
sti
popf
mov
and
stc
sti
or
push
pop
in
inc
adc
sbb
mov
es
stos
fistl
ret
fidivrs
mov
scas
jle
push
mov
ror
lcall
pop
push
sub
mov
fsub
in
and
rorl
int3
push
arpl
or
fistl
cmpsl
sbb
out
loope
jge
leave
xchg
cli
mov
lretw
out
mov
rolb
sti
xor
nop
aam
and
mov
mov
or
mov
cwtl
ja
pop
les
jg
mov
stos
sub
jp
mov
jl
dec
dec
fs
xlat
jnp
invd
pop
dec
test
ljmp
sti
mov
sub
mov
add
ljmp
cli
cmp
sub
jo
xor
ss
or
bound
ficomps
xchg
xchg
or
lods
lock
inc
adc
mov
jb
ljmp
xor
dec
xor
hlt
mov
add
mov
and
jmp
dec
lahf
add
push
in
loop
adc
hlt
aam
xchg
addr16
cwtl
dec
shl
fsubrs
cmc
xchg
dec
dec
jno
arpl
fwait
inc
dec
pushf
or
hlt
add
fwait
xor
clc
jmp
xchg
lea
push
lea
test
mov
adc
ljmp
into
and
stos
test
adc
mov
cld
jle
or
adc
and
loope
mov
es
push
mov
gs
mov
pop
pop
pop
arpl
out
fcomps
scas
movsb
mov
pop
mov
fwait
dec
jle
sbb
sbb
mul
scas
test
das
out
sarl
jb
test
pop
cmp
call
pop
xor
lea
add
xor
lahf
push
lret
sub
ds
out
mov
fwait
aad
addb
mov
mov
sbb
cmpsb
out
jp
pusha
xor
sub
dec
mov
bound
mov
les
mov
adc
loope
push
out
xchg
daa
fidivrs
out
cmp
jnp
test
rol
dec
mov
icebp
movsb
add
lret
aas
test
pop
lds
ljmp
mov
mov
sbb
add
je
mov
rcrl
mov
push
dec
loop
daa
aaa
sbb
sarb
imul
stos
add
aad
notl
negb
cmp
jb
adc
jmp
fwait
aas
jne
aam
cmp
lret
ret
jle
popw
sub
fcmovbe
shll
pop
bound
cmpsl
leave
xchg
lods
sub
pop
xor
ds
push
rcrl
ret
aaa
fldcw
leave
test
sahf
mov
sub
roll
cs
cmp
ja
sbb
fbstp
xlat
cmp
xchg
mov
dec
jle
xchg
call
rorb
sbb
dec
or
sbb
push
ret
stos
icebp
push
in
jge
ret
fmuls
test
shrl
mov
xorl
mov
clc
dec
shlb
cmp
fisttps
xor
or
lret
xor
iret
arpl
fdivs
jo
xchg
lods
arpl
sti
popa
pusha
mov
sbb
out
mov
mov
adc
jns
pop
test
pop
and
insl
push
into
das
dec
bound
ss
inc
stos
add
fwait
pusha
cwtl
or
fxch
int3
imul
out
mov
nop
mov
imul
fldt
sbb
push
outsb
inc
fxch
mov
in
sbb
ljmp
add
je
pop
jp
xor
cmp
js
into
iret
fs
lock
test
cmp
fnstcw
clc
sub
fmuls
adc
fxch
jnp
adcb
jecxz
arpl
fldcw
ficompl
xor
mov
xorb
aas
fst
mov
mov
dec
jnp
stos
filds
aaa
add
push
leave
sub
fsts
in
lea
or
cmp
pop
mov
pop
movsl
adc
xor
adc
push
xchg
jg
pop
cmp
scas
and
inc
jg
jae,pt
dec
and
fsubr
nop
stos
inc
fs
jl
andl
je
cmp
jmp
pop
mov
sbb
or
dec
stc
dec
cmp
adc
pop
popf
imul
push
subb
inc
cli
insb
pop
xor
mov
insb
jbe
add
sti
mov
pop
test
or
and
cmpsl
imul
push
ja
xchg
pusha
sti
xchg
lcall
and
loop
add
popa
in
mov
out
and
repnz
or
lahf
mov
in
cmp
prefetcht1
pop
mov
dec
in
scas
adc
xor
lcall
hlt
nop
mov
push
stc
jmp
and
or
sbbl
pop
stc
pusha
jbe
je
shrl
sysexit
mov
xor
icebp
push
jne
test
aaa
cld
test
ds
and
lret
pop
into
test
sub
inc
or
mov
or
cmovle
sbb
mov
fisubs
jecxz
xor
cli
arpl
hlt
insl
and
adc
int3
cmpsb
lock
shlb
cmp
cmpsl
adc
out
insb
sbb
dec
aas
mov
loop
xor
mov
imul
orl
ljmp
stos
andl
xlat
mov
dec
cmpsb
adc
dec
ret
daa
bound
ss
xchg
jns
pop
stos
scas
inc
test
gs
dec
xchg
pop
cmp
inc
js
push
fildl
jecxz
loop
push
fcompl
mov
xor
add
jl
addr16
adc
loopne
ret
mov
jbe
inc
dec
out
jle
lret
cwtl
sbb
jb
mov
pop
inc
xchg
xlat
dec
stos
clc
adc
sub
les
dec
lods
daa
mov
sbb
mov
pop
push
push
sbb
stc
and
les
add
jge
ss
xlat
fsub
mov
pop
cltd
xlat
pusha
push
push
idivl
repnz
fwait
sub
push
mov
dec
sub
add
push
pop
nop
pop
lret
inc
inc
mov
xor
js
lock
adc
and
stc
adc
popf
cmp
sbb
sbb
jge
dec
icebp
or
aad
xor
or
mov
shll
push
jmp
add
and
jp
lea
pop
mov
inc
ret
lods
ljmp
fiaddl
inc
sub
pop
ljmp
push
jp
sub
sbb
push
insb
cmc
test
int3
xor
inc
sub
lock
add
in
jbe
das
movsb
sahf
xor
sbb
movsl
push
js
jp
es
sbb
mov
cmpsb
pop
jmp
mov
sbb
xor
popf
sahf
imul
sahf
sti
mov
popa
test
mov
jg
jl
movsl
enter
iret
jmp
insl
in
aas
outsl
pop
imul
jbe
mov
mov
adc
jb
scas
mov
or
dec
cmp
xchg
jle
outsl
aas
imul
pop
fistpl
outsl
cmp
test
incb
mov
sbb
sub
xorl
pop
and
lahf
stos
or
dec
pop
lret
data16
mov
cmp
jp
xchg
fmuls
mov
push
jge
mov
imul
adc
ret
adc
ret
add
mov
xor
xchg
cmp
test
in
rcrb
xchg
cld
andl
add
inc
insl
lea
call
xchg
mov
scas
and
jl
xchg
fsubl
in
dec
mull
xchg
push
std
cltd
pop
fmuls
lahf
push
add
xchg
mov
dec
inc
dec
data16
jle
jle
jle
enter
mov
or
sbbb
add
loope
jge
cmc
dec
jns
fidivs
scas
inc
xchg
ret
dec
gs
dec
stos
pop
jle
mov
or
or
or
andl
roll
arpl
cmpl
cmpsb
gs
mov
xchg
aaa
rcrl
insb
repnz
aas
inc
cmpsb
test
dec
es
fwait
push
mov
xorb
repnz
sub
popf
dec
pop
mov
push
out
data16
xor
add
push
push
or
mov
pop
and
adc
in
int
movd
sahf
mov
xlat
dec
mov
xor
pop
and
xor
imul
pop
inc
cmp
imulb
call
inc
xchg
xor
jbe
lds
shlb
xchg
in
pop
inc
stos
mov
inc
push
in
nop
xchg
cmp
test
and
mov
fdivp
int
or
stc
mov
xchg
int3
mov
gs
orl
jae
dec
enter
dec
mov
in
insb
jp
inc
pop
decl
mov
push
in
in
rcrb
xor
adc
mov
movsl
movsb
or
xchg
outsb
cmp
or
dec
ja
pop
and
lahf
jb
push
pop
test
arpl
data16
inc
mov
icebp
stos
dec
fsubl
out
cmp
cmpsb
out
arpl
dec
xchg
push
adc
mov
mov
bound
add
insl
cmp
movsb
sub
lea
ret
pop
xor
test
jg
loop
xchg
mov
popf
lea
jae
je
in
cmp
push
int3
cli
out
jg
repnz
insl
xor
dec
cld
std
inc
roll
lock
push
mov
add
xchg
push
mov
cmp
mov
cltd
stos
in
and
lea
push
lods
int3
mov
mov
dec
xor
push
jne
pop
jl
mov
sti
cli
adc
push
test
dec
xchg
insl
shl
rcrb
mov
cld
mov
mov
push
insb
stos
add
mov
pop
aam
push
jnp
xor
mov
mov
inc
cmp
lock
loop
push
cmp
into
lea
mov
or
dec
int3
mov
mov
test
sahf
xor
jbe
mov
es
push
lahf
fcomp
xchg
test
lcall
xor
shrb
inc
stos
fnstcw
fwait
cmp
and
decl
and
adc
xchg
mov
cmp
xchg
lods
xor
fnstsw
inc
outsl
fnstsw
pop
imul
cli
repnz
mov
dec
inc
jno
dec
pop
inc
ljmp
fists
fst
repz
sti
cmpsl
je
sbb
scas
pop
push
jb
add
or
cmp
and
stc
pushf
in
pop
in
push
insb
icebp
jge
or
mov
fidivl
lret
cmp
xchg
sbb
jbe
dec
push
mov
scas
ds
push
push
out
mov
popa
int
push
xchg
fcmovnbe
cmpl
mov
rol
push
xor
lds
jp
xchg
loopne
jb
or
out
jge
ret
gs
mov
cmpsl
call
push
test
cltd
clc
xor
lret
and
test
into
xchg
xor
inc
pop
cmp
inc
xchg
mov
rcr
out
ret
jl
jmp
mov
popf
cli
xchg
lods
pushf
pushf
cltd
cmp
xchg
jne
pop
sub
mov
rorl
adc
popf
outsl
fidivrs
fs
fistpll
dec
sub
pop
jecxz
pop
pop
call
pusha
mov
popa
call
sub
std
jae
dec
mov
lea
in
inc
mov
sbb
and
jecxz
sti
pop
shrb
or
iret
mov
call
add
mov
mov
adc
popf
out
imul
fcmovnbe
xor
scas
jnp
pop
outsl
sbb
test
test
dec
dec
sub
dec
jo
pop
pop
xchg
aam
out
inc
cs
cmc
pop
bound
fistpll
cltd
iret
jge
clc
std
daa
gs
push
fwait
inc
inc
aam
lret
gs
rcll
mov
loopne
xchg
and
aam
inc
cwtl
cmp
mov
fbld
aaa
mov
insl
icebp
adc
sub
cwtl
push
sbb
xor
daa
cmp
and
in
mov
insb
push
insb
sbb
loopne
pop
das
push
xchg
adc
cmp
stc
loop
mov
jb
outsl
lret
push
fiadds
push
addb
fs
in
mov
gs
push
mov
in
and
cmp
lea
fcomps
cmc
int3
stos
and
ds
test
ljmp
int
jb
ficomps
insb
xchg
js
test
ficoms
mov
mov
aad
jo
jmp
cmc
xchg
popf
les
inc
ret
cs
pop
rcrl
pop
and
movsb
into
fs
sahf
dec
test
xchg
cltd
aas
ds
rcll
push
mov
jbe
nop
das
and
xchg
aas
les
cmpsb
mov
mov
adc
xor
mov
popa
cmp
xchg
adc
mov
pop
lahf
mov
sub
test
in
add
mov
out
mov
sub
rclb
jp
push
stos
lods
movsb
movsb
cmpsb
and
push
call
jbe
stos
les
mov
cwtl
mov
adc
pop
jae
out
insb
add
dec
je
xor
cmp
jge
mov
mov
rorl
sub
or
push
outsb
js
data16
sbb
xor
xchg
or
cs
test
movsl
clc
xor
scas
inc
daa
inc
xchg
push
pop
sbb
jl
jns
pop
xlat
les
inc
in
xor
pop
call
push
xorl
jbe
gs
pop
add
push
push
rcrb
pushf
fistl
sbb
imul
je
cmp
fwait
jle
pusha
mov
cltd
add
pop
hlt
out
add
push
dec
rcrb
jno
mov
loopne
aam
movsb
pop
or
xor
jns
xchg
mov
jno
mov
pop
test
cmpsb
xor
test
aaa
popf
leave
stos
mov
divb
jnp
es
shr
cli
push
cmc
in
mov
dec
repnz
loopne
push
pop
je
outsl
std
push
stc
xchg
mov
stos
mov
insl
fs
dec
fs
out
cld
aam
stos
sub
and
adc
mov
fcoml
fwait
add
aaa
add
out
fdivrs
cmp
mov
push
xchg
mov
shll
arpl
pushf
pop
int
mov
jle
je
mov
mov
sbb
scas
xor
sub
xlat
jp
jle
call
adc
jmp
push
jo
xchg
sub
fwait
mov
and
pop
dec
mov
cmp
dec
push
mov
mov
adc
inc
pop
push
push
or
add
out
lahf
inc
data16
shlb
mov
push
and
in
fs
flds
jns
jnp
lcall
nop
pop
xor
lods
push
aam
xchg
ja
dec
and
fidivrs
mov
xchg
dec
test
cmp
ret
mov
int3
inc
dec
cmp
adc
outsb
jle
jbe
jne
jl
sbb
popa
mov
jne
push
mov
mov
pushf
sbb
sub
push
ljmp
loope
jecxz
add
inc
or
jl
clc
rolb
push
in
aam
or
fwait
inc
test
xlat
dec
mov
lahf
jp
jmp
cmpsb
aam
leave
orb
cwtl
dec
pop
jl
mov
add
jg
push
xchg
fdivrl
int
lret
das
cltd
mov
rcrb
outsb
mov
pop
popf
stc
in
lcall
mov
pop
sub
movsb
sbb
testl
cli
mov
xorl
mov
lods
stc
decl
ja
sbb
imulb
test
out
xlat
aad
int
mov
idivb
sbb
xlat
mov
dec
xor
mov
pop
jae
inc
fnstcw
push
ds
push
fwait
xchg
jnp
sbb
or
or
pop
sbb
jmp
aad
mov
jns
sub
xchg
lahf
dec
add
fldt
push
out
pop
mov
jge
data16
stc
sysexit
inc
ret
xchg
inc
adc
out
lahf
shll
push
leave
mov
push
sub
sbb
cld
loopne
add
push
into
movsb
sti
sub
and
mov
xchg
jecxz
shrl
mov
push
sbb
cmp
dec
pop
and
pop
ret
cmp
jbe
negb
mov
sub
add
adc
push
or
pusha
fldenv
xchg
ja
jmp
imul
jp
lret
mov
mov
mov
mov
push
mov
mov
shl
sub
sub
push
hlt
xor
xchg
fisttpl
shll
nop
hlt
jo
inc
out
pushf
pop
leave
inc
push
pop
sti
dec
popf
xor
sub
dec
ja
fcmovnu
mov
loop
sub
lahf
ret
pop
cmp
cmp
pop
or
imul
fucomi
orb
xor
in
shlb
mov
pop
fdivs
jae
scas
jmp
inc
push
out
adc
xchg
pop
sub
mov
sti
stc
add
mov
rcl
rcll
sub
xor
pusha
jo
push
test
jmp
cli
and
xchg
test
adc
lods
push
imul
pop
and
adc
cwtl
outsb
aaa
cld
fmull
call
rol
pop
sbb
and
rol
movsb
nop
xor
int
jp
mov
rcrl
cld
inc
or
dec
mov
inc
negb
add
clc
mov
mov
push
leave
push
mov
mov
push
jmp
or
inc
mov
sbb
dec
ss
jbe
popf
rcr
rorl
aam
xchg
mov
add
cli
lods
sbb
dec
icebp
movsb
ret
daa
sub
xor
test
sbb
fs
in
fnstenv
or
adc
jne
inc
ret
mov
rcrb
into
bound
popa
inc
dec
subl
test
rolb
adc
pop
leave
movsb
and
adc
push
jmp
test
jb
out
push
sbb
jl
jbe
mov
pushf
repnz
jns
ja
sbb
int3
sbb
in
add
in
dec
and
inc
test
mov
fistps
push
jmp
hlt
pop
cs
fwait
popa
xlat
mov
mov
les
mov
addr16
movsl
rclb
jns
clc
push
push
call
out
xor
repnz
imul
insb
xchg
dec
ds
dec
repnz
add
shl
clc
xor
cmpb
stos
sbb
enter
loope
and
loop
and
cmpl
jne
pop
test
pop
outsl
xchg
aas
xor
es
daa
mov
cmpb
pop
insb
in
sub
icebp
dec
das
out
notl
and
movsl
cld
inc
out
lods
jb
mov
les
in
or
push
iret
or
sub
sub
es
cltd
mov
adc
push
ficoms
into
mov
cmpsb
jmp
fwait
sub
jne
mov
ucomisd
xchg
add
cmp
mov
icebp
push
filds
xchg
hlt
adc
push
jmp
sahf
push
sahf
cld
or
negl
inc
or
add
adc
jge
xor
mov
inc
inc
adc
mov
cmpsb
leave
unpcklps
ret
mov
push
push
fdivrl
jae
pop
sbb
loopne
sbb
ljmp
add
sbbl
fsubl
mov
mov
adc
scas
push
and
mov
and
out
push
mov
in
test
imul
xor
ja
sub
or
jmp
sub
xorb
mov
nop
jl
out
js
dec
pop
dec
nop
cmp
fwait
repz
xlat
jle
mov
mov
setp
aad
and
shrb
mov
roll
not
mov
sahf
adc
push
into
mov
pop
stos
push
stos
adc
movsl
mov
mov
push
cmp
test
daa
jecxz
cmp
cmpsb
roll
test
repz
jo
mov
jno
dec
fs
cmp
aas
lods
jno
sbb
mov
sub
mov
lret
imul
xchg
and
cld
jne
inc
mov
stc
cwtl
sbb
push
xor
pop
jl
push
sbb
fs
mov
rcrb
xor
cmp
in
jp
add
rcrb
out
cmc
or
test
aas
xchg
popa
sub
mov
pop
or
fldl
sbb
cltd
lcall
mov
push
jno
jae
pop
adc
push
sbb
hlt
xor
jl
int3
lods
cli
subb
sub
cmp
jb
push
sbb
cmpsl
adc
push
or
or
idivb
addl
dec
pop
popf
inc
mulb
adcl
cmp
cmp
and
or
shrl
jl
loop
adcl
fidivs
mov
aaa
xorb
jns
icebp
add
mov
test
rolb
add
daa
mov
push
dec
xlat
pop
cmc
mov
popa
sub
mov
scas
dec
mov
lods
ret
push
inc
jb
fsubrl
fcoml
loop
dec
fwait
mov
mov
add
sti
inc
add
jmp
imul
push
cli
sbb
add
mov
mov
push
bound
inc
loopne
and
sti
outsl
cmp
adcb
mov
cmc
ss
jecxz
and
lods
pop
stos
ficompl
xchg
push
cmpl
xor
cli
cmp
lods
movsb
xchg
sub
and
mov
mov
push
lods
sbb
ds
xchg
jne
mov
and
rorl
in
rorb
gs
mov
sahf
lock
ja
scas
push
pop
xor
enter
push
mov
lahf
push
sbb
xor
mov
xchg
mov
test
mov
mov
int
jle
aad
sbb
pushf
inc
arpl
or
and
push
jno
hlt
out
daa
jnp
dec
int
xchg
iret
dec
jp
mov
jns
sub
enter
mov
push
inc
jecxz
inc
lss
lock
mov
sbb
fcmovne
adc
mov
shl
decb
popa
icebp
inc
test
mov
xchg
inc
fdivrs
leave
sahf
imul
out
mov
fsubrl
out
xor
outsl
push
add
jp
rcl
jp
adc
adc
mov
jno
std
ja
and
and
jl
or
jnp
jb
xchg
in
jp
rcrb
enter
inc
and
sub
imul
cmp
nop
cmpb
mov
idivb
mov
pop
aaa
enter
adc
mov
lret
clc
inc
push
inc
push
jne
sti
fnstsw
ficompl
sub
std
adcl
or
mov
dec
lds
in
aad
loop
je
cmpsl
push
xor
stc
inc
setb
loopne
pop
mov
cmp
fs
sub
pop
loop
std
aam
nop
adc
lods
aam
mov
sub
loope
mov
orl
xchg
outsb
dec
dec
ja
enter
xchg
rorb
out
out
imull
pop
dec
jmp
xor
in
mov
sti
and
mov
xchg
mov
jbe
dec
lahf
or
icebp
adc
jne
inc
ror
sbb
int3
test
fldcw
data16
adc
inc
jge
mov
sbb
test
movsb
js
adc
sti
fldenv
pop
and
jns
adc
sbb
adc
hlt
or
inc
shll
cmpsb
je
adc
shr
ljmp
lcall
psubd
sbb
mov
mov
jmp
push
clc
aad
lcall
push
xchg
mov
popa
pop
lahf
push
mov
xor
subl
pop
mov
call
and
out
mov
iret
cmp
add
aad
push
cmpsl
cmpsb
cmp
iret
xchg
push
ja
pop
pusha
lret
mov
or
cmpsb
pop
cwtl
das
int3
cmp
movsb
stc
fsubrl
sub
scas
mov
sub
jle
adc
test
jne
add
mov
dec
mov
mov
add
cmp
scas
dec
ror
js
xor
inc
jae
jecxz
lods
dec
pushf
das
icebp
fistpll
add
cli
std
imul
cld
nop
mov
lods
push
pop
inc
fisubrs
lds
pusha
stos
xchg
push
push
mov
cmpb
pop
shlb
in
or
je
cmpsb
dec
cmp
lock
fsts
les
andl
aam
push
jmp
push
mov
xor
push
test
sbb
loopne
inc
je
push
sub
add
lea
push
mov
shlb
addr16
jo
pop
insb
push
cmpl
push
adc
and
rcrl
push
arpl
js
in
xchg
fstp
dec
pop
xorl
jg
testb
in
cmp
adc
jno
les
arpl
iret
test
int3
and
mov
or
xor
mov
cld
jb
adc
pop
imul
push
into
popa
jge
mov
outsb
add
bound
ret
add
lods
orl
orl
pop
push
cmpsb
jo
lods
jp
je
jae
push
std
dec
jo
adc
js
ljmp
popf
xor
imul
scas
xorb
dec
rcll
pop
mov
push
push
jbe
sbb
dec
and
mov
testb
sub
or
popa
pop
aam
outsl
andb
hlt
adc
jns
repnz
mov
jb
movsb
sahf
int3
stc
mov
adc
test
jl
jl
adc
fwait
sub
icebp
cwtl
cmp
negl
dec
mov
test
adc
out
inc
sbb
mov
mov
call
add
test
adc
push
enter
aaa
sub
jns
add
ret
fidivrs
cltd
cmpb
mov
mov
dec
pop
mov
mov
data16
cmp
pop
xor
mov
pop
ss
sbb
mov
cs
aaa
mov
sub
loopne
cmp
mov
incl
loope
cmc
pop
frndint
and
cmc
insl
inc
inc
out
ret
sub
mov
push
add
pop
outsl
inc
repnz
sbb
mov
cmp
shlb
jle
add
jae
sbb
cmc
ljmp
inc
lahf
gs
jae
mov
pop
ret
mov
push
adc
in
and
idivl
pusha
rcll
cmp
sub
sti
push
dec
outsb
ja
out
or
inc
idiv
xchg
cmp
aas
adc
xchg
jg
mov
out
mov
jbe
and
pop
jmp
ret
xchg
shrl
pop
adc
push
jb
in
insl
inc
or
das
fnstcw
call
sbb
xchg
xchg
cmc
jbe
shl
pushf
clc
cmp
push
cli
or
dec
or
aam
pushf
cltd
add
mov
push
aam
inc
dec
push
aaa
mov
mov
dec
orl
ja
into
fisubl
xlat
cmp
pextrw
mov
pop
cmpsb
inc
push
xchg
fisubrl
ret
pop
icebp
mov
inc
pop
sahf
push
dec
fwait
dec
mov
into
xchg
mov
into
dec
ljmp
xchg
adc
xchg
add
xor
rol
pusha
or
ja
push
movsl
aad
aad
xchg
out
fimull
notb
into
bound
lock
in
dec
or
sbb
mov
dec
into
outsb
daa
subl
aas
addr16
mov
pop
adc
lock
jmp
push
xor
jmp
rcrl
jnp
adc
lds
xchg
inc
jbe
add
jmp
jne
cli
cs
aad
rcrb
add
cld
out
sub
pop
mov
and
mov
mov
fdivrl
mov
sbb
xchg
adc
mov
enter
test
lahf
and
xlat
mov
or
out
andb
stos
jnp
cmp
push
fs
jmp
and
sbb
hlt
mov
outsb
idivl
loope
js
mov
mov
push
mov
sub
std
xchg
sti
cwtl
xchg
push
cmp
and
push
rcr
loope
int
cmp
sub
nop
cmp
fnsave
in
loope
movsl
dec
adc
pusha
lds
mov
jge
das
xchg
aas
sahf
test
jecxz
adc
fwait
fs
inc
ds
popf
push
pop
adcl
imul
mov
ret
inc
mov
mov
lods
mov
jle
mov
dec
ret
andl
cmc
jmp
jnp
cmp
jecxz
scas
push
push
in
inc
jmp
repnz
mov
cmpb
mov
add
shr
mov
adc
pop
mov
inc
loopne
rorl
or
loope
push
int3
jne
lds
aad
or
sbb
pop
or
lock
jno
test
add
or
lahf
faddp
sbb
mov
sub
cmp
aas
bound
jae
mov
into
insb
aaa
fstps
mov
in
push
das
sti
add
jl
or
jo
outsb
xchg
mov
ret
pop
insl
out
xchg
cwtl
and
xchg
dec
aas
cmp
in
add
clc
mov
xchg
xchg
inc
and
mov
or
adc
adc
sbb
mov
cmp
and
xchg
sbb
aaa
addr16
dec
test
push
ret
out
pop
orb
ds
inc
repz
shll
cli
incb
stos
loope
inc
gs
mov
adc
cmpb
stos
sahf
sub
lret
jae
mov
xchg
xchg
adc
push
mov
push
push
in
inc
adc
mov
adc
lods
or
inc
mov
lods
test
test
and
adc
and
xor
lret
push
mov
adc
mov
xchg
mov
pusha
lret
xchg
pop
loope
mov
sbb
arpl
cli
inc
dec
ljmp
hlt
push
out
fildl
gs
int
cli
push
dec
jmp
push
mov
lcall
mov
nop
dec
push
call
aam
call
xchg
and
dec
pop
inc
ret
dec
mul
pusha
lods
or
jp
data16
mov
xorl
aaa
sahf
jo
repnz
sub
in
sub
mov
cmc
cld
or
dec
cmp
sub
add
xchg
fs
jmp
jle
xor
nop
icebp
cmpsl
nop
xor
pusha
xchg
sub
call
sbb
ds
mov
push
je
inc
mov
xchg
hlt
pusha
push
loope
cmp
xchg
test
dec
enter
scas
ljmp
ds
pop
icebp
dec
xchg
pop
push
paddusb
inc
mov
sub
mov
sti
lods
stc
in
or
orb
lcall
push
add
fiadds
dec
add
sub
adc
andb
pusha
jecxz
lods
or
js
movsl
jo
addb
inc
into
les
jp
psrld
dec
pop
cld
dec
js
lcall
sbbb
lret
dec
pop
insb
out
mov
inc
xor
dec
pop
pop
jg
outsb
jbe
sub
aaa
fs
rorl
inc
gs
pushf
push
xchg
sub
imul
jg
jmp
cld
lret
and
cmp
xor
xchg
notb
js
jbe
pop
dec
mov
test
adc
movsb
out
mov
cld
sbb
test
jo
decl
enter
lock
sub
jmp
sub
insl
mov
sahf
xlat
in
je
cwtl
icebp
cmpsl
pushf
pop
in
sub
push
mov
mov
sbb
xchg
adc
sbb
push
push
scas
lea
lea
mov
cmpb
sbb
add
cmp
xchg
arpl
xchg
les
pusha
push
sarl
adc
jno
pinsrw
and
test
dec
outsb
push
ss
out
ja
inc
pushf
loope
adc
sub
test
fisubl
lret
pop
jle
in
cmp
enter
cwtl
mov
fbstp
push
addr16
xor
dec
sub
cwtl
inc
xchg
orl
mov
movsb
jnp
and
fsubs
lock
stc
shl
nop
jl
xchg
loopne
mov
rcrl
push
pop
dec
cmp
int3
ficomps
or
sahf
add
sbb
pop
lea
ret
outsl
lret
cmp
cmp
sub
shlb
mov
jl
insl
mov
sub
repnz
fsts
jnp
rorl
inc
sub
lock
mov
mov
mov
ja
push
test
pop
sub
add
cltd
jnp
outsl
inc
cmpsl
popf
sbb
movl
pop
daa
cmp
or
sub
cmp
punpckhbw
push
movsl
imul
rorb
push
inc
rcrb
and
addr16
lods
sahf
lret
and
pop
push
sarb
icebp
cmp
ds
hlt
add
data16
icebp
cmc
push
fsts
pop
mov
or
fsts
or
xchg
leave
inc
mov
mov
push
addr16
mov
test
jle
jae
das
and
cmpsb
daa
pop
mov
in
arpl
fidivrl
ljmp
push
jbe
xchg
jno
dec
push
inc
dec
cmpsl
sbb
jmp
jne
inc
sti
mov
push
mov
clc
sarl
jno
les
cs
xchg
cmp
and
push
ss
pushf
xor
and
jb
or
xlat
xchg
xor
adc
inc
jno
sarb
rorb
xor
movsb
xchg
loopne
out
sbb
mov
push
jge
pusha
and
xor
jge
iret
jecxz
add
mov
jle
fimull
rcll
jbe
or
adc
sub
stos
loop
xchg
inc
enter
js
dec
mov
into
enter
pop
iret
movsl
fwait
mov
adc
outsb
sbb
xchg
jo
push
pop
push
inc
push
repnz
cmp
jp
in
mov
pop
push
int
lods
xlat
sub
pop
mov
fimull
and
and
push
mov
nop
inc
mov
gs
rcl
push
mov
and
ljmp
pop
fmuls
int
in
clc
inc
mov
jp
ljmp
ret
shl
lcall
mov
dec
dec
enter
in
imull
xor
js
in
push
adc
pop
mov
outsb
xor
and
imul
cs
lods
mov
mov
adc
jno
mov
cmpsb
pusha
bound
sarb
sbb
aam
das
int
repz
fisubl
mov
ss
xor
add
mov
and
xor
add
cwtl
sbb
scas
sbb
mov
adcb
cs
push
mov
and
sahf
loopne
jnp
int
push
dec
dec
inc
popw
xlat
pop
lods
gs
or
mov
cld
add
repz
dec
stc
mov
mov
mov
jl
int3
xor
mov
xor
dec
mov
push
xor
ljmp
lret
mov
inc
lds
in
pop
mov
mov
fdivrs
add
inc
jle
iret
pusha
and
pop
xchg
in
imull
loop
ja
push
add
xchg
lret
lock
imul
push
push
movsl
add
xor
in
insl
jo
in
jno
push
mov
outsb
popa
xchg
adc
lcall
mov
mov
aas
aam
push
jle
out
mov
loopne
jae
lods
mov
outsl
sbb
push
add
hlt
ficomps
and
sub
stos
mov
and
in
mov
and
clc
push
sub
out
xlat
mov
jge
mov
adc
inc
sbb
leave
enter
mov
hlt
mov
jecxz
jge
adc
dec
mov
xchg
movsl
xor
sbb
cmp
mov
dec
iret
daa
out
adc
xor
adc
push
inc
pop
add
addb
sbb
jmp
fwait
push
into
adc
mov
or
aas
mov
iret
imul
mov
addr16
jl
mov
adc
fdivr
enter
mov
xchg
sbb
jo
xlat
jge
add
lcall
sbb
notl
mov
mov
enter
pop
mov
mov
arpl
movsl
out
jmp
and
pushf
push
dec
rolb
data16
and
or
mov
xchg
in
add
cmc
adc
imul
andl
mov
sahf
fdiv
mov
add
ljmp
pop
and
or
sbb
pop
fdivs
add
lds
xchg
xchg
mov
cmpsb
cmpsl
jns
sbb
add
sub
jo
xor
add
es
push
repz
pop
mov
inc
sbb
mov
jge
cmp
push
ret
inc
inc
clc
push
lahf
in
dec
xchg
iret
jp
jp
jmp
notb
jp
inc
and
je
sub
sti
pop
test
lret
pop
xorl
nop
nop
scas
fcmovne
sbb
arpl
sub
ja
lds
fiaddl
rorl
inc
rcrl
lods
mov
xor
mov
sub
mov
shl
pop
arpl
out
push
dec
cmp
rcl
inc
adc
push
inc
dec
jo
adc
inc
sbb
mov
sub
mov
inc
lahf
repnz
cmp
sbb
jmp
inc
das
jl
or
inc
aad
dec
push
lret
jb
xchg
inc
mov
push
jle
fmull
adc
enter
add
addr16
icebp
cmp
jnp
test
fnstcw
lods
popa
pop
cmp
sub
pop
stos
test
mov
cld
xchg
iret
sub
xchg
pushf
mov
movsl
mov
xchg
jle
jnp
dec
icebp
test
inc
mov
sub
pusha
push
inc
sub
adc
xor
outsl
cmpsb
mov
adc
repnz
repz
mov
add
fsubs
imul
lods
cmp
xchg
out
push
xor
movzbl
jns
cmp
sub
jb
pusha
pushf
inc
pop
int
dec
sub
and
sti
adc
push
jmp
leave
jae
in
jl
push
mov
mov
pop
fldcw
int3
repnz
xor
mov
or
movsb
push
adc
aad
pop
jo
lret
mov
loope
jo
sbb
lret
cwtl
pop
inc
mov
imul
xor
mov
repnz
cli
imul
mul
cltd
cli
dec
mov
fnsave
fsub
movsl
pushf
lock
jecxz
cmp
and
mov
adc
jns
loopne
sti
in
add
jno
pop
mov
dec
int
jl
inc
dec
lahf
sbb
jge
test
out
sbb
fwait
idivl
lods
pop
out
mul
sbb
hlt
inc
cmp
in
loopne
test
incb
push
push
sbb
mov
sti
xor
les
inc
enter
xchg
xchg
push
cmpsb
jae
push
cli
sub
int
cmp
mov
cmp
popa
pop
in
popa
adc
sbb
mov
popf
and
xchg
and
xchg
sbb
pusha
mov
cltd
dec
push
loopne
enter
xor
jno
mov
mov
cmp
inc
sahf
daa
mov
ret
js
fists
push
insl
divl
cwtl
jne
fcomi
shlb
imul
and
jmp
fwait
daa
loop
xor
push
leave
xor
xchg
adc
iret
pop
scas
pop
sub
scas
aad
in
notl
xchg
shl
inc
negl
iret
jb
insl
insb
adc
das
pop
leave
insl
cmp
jb
sbb
cs
pop
insb
add
aad
je
out
shrl
arpl
xorb
popf
sbbl
stos
outsl
in
movsl
cmp
pop
das
pop
xor
out
and
or
xor
adc
jge
test
xor
pop
out
scas
ret
lds
outsb
or
dec
jo
in
dec
icebp
push
fs
fwait
std
dec
mov
cmp
aaa
mov
cmp
xor
mov
cmp
dec
push
adcb
xchg
sbb
lahf
notl
mov
push
lds
test
lods
out
mov
dec
push
fnstenv
lds
xchg
pop
lds
popa
add
add
popf
mov
fistpll
mov
xor
pop
mov
pusha
or
xchg
xchg
insl
xchg
jle
popf
lds
jns
ljmp
je
ret
lcall
outsb
xchg
mov
adc
add
lds
adc
xchg
cmp
cs
pop
pop
mov
adc
pushl
sub
cmp
aaa
data16
stc
sub
pop
aad
mov
add
ja
cmp
dec
xor
pop
mov
and
das
loopne
xor
test
mov
int
rclb
xchg
leave
or
fsubrp
cltd
mov
mov
mov
jbe
call
lret
fstpt
es
jmp
adc
inc
gs
mov
pop
mov
bound
incl
mov
cltd
sub
or
ret
jae
add
or
aam
jno
fcmovu
sbb
cmc
sub
cmpsb
into
mov
out
dec
sub
repnz
and
inc
add
dec
pusha
xchg
fiadds
cld
mov
popa
xchg
shrb
cmc
xor
add
in
mov
jle
jne
stos
add
sbb
xchg
push
mov
push
stos
bound
add
icebp
adc
stos
in
sub
pop
testl
inc
mov
cld
xchg
inc
sti
adc
nop
mov
xchg
imul
je
adc
xor
cmpsl
push
xchg
jne
pop
jbe
xchg
xor
push
addl
mov
dec
fwait
scas
push
in
sub
xlat
lret
jmp
pop
xor
negl
adc
sub
arpl
lcall
sbb
cmovp
mov
and
pop
sbb
movsl
jne
jp
adc
out
aas
fwait
push
xlat
jmp
inc
pushf
mov
cltd
fsub
mov
and
xchg
rolb
icebp
inc
mov
jbe
mov
fldln2
cwtl
and
sbb
sbb
dec
stc
add
cwtl
pop
and
movsb
xchg
jb
ds
add
dec
inc
pop
cmp
xor
mov
mov
cvtps2pd
lret
loope
shl
mov
orb
sbb
mov
adc
mov
insb
and
mov
cmpb
and
lahf
je
pusha
movsl
pop
jl
jae
stos
push
sbb
xchg
into
shl
sbb
ret
push
mov
jne
shrl
fadds
pop
dec
int
orl
pop
push
repz
push
lret
push
popa
pop
pop
sub
mov
or
enter
jmp
mull
mov
js
push
data16
mov
sbb
in
enter
jg
mov
arpl
xlat
inc
push
enter
loope
adc
pop
in
enter
sub
cwtl
rcr
inc
dec
mov
or
add
jecxz
std
add
in
cmp
ss
mov
jo
add
lods
mov
xor
xchg
leave
bound
jne
popf
cmpsb
iret
aas
jns,pn
xor
inc
xchg
push
jp
mov
add
sub
sbb
pop
ljmp
mov
jae
mov
cwtl
xchg
xor
jg
jo
enter
mov
lcall
xchg
rol
sbbl
inc
pop
loopne
inc
bound
test
jmp
jo
popa
pop
add
pop
jo
bound
pop
adc
pop
les
lods
lahf
sti
push
test
sub
das
add
sub
lahf
shll
mov
stos
mov
mov
cmp
mov
sbb
jecxz
xor
loopne
jae
sbb
jns
out
stc
lahf
fs
jecxz
inc
mov
xchg
pushf
push
push
pop
rclb
clc
fs
xor
into
inc
ja
inc
pushf
jb
sti
cmpb
movsl
pop
adc
jne
hlt
aam
xchg
shl
sti
dec
mov
cmp
xchg
jp
addr16
imul
icebp
lea
test
add
icebp
inc
add
pop
sahf
clc
fs
cli
sahf
icebp
xchg
repz
dec
addb
dec
xchg
or
sub
stos
add
mov
sub
mov
push
fs
stos
add
xor
or
pop
adc
adcb
lds
es
call
or
push
mov
pop
shrl
mov
push
mov
cmpsl
push
imulb
mov
ds
jb
mov
insl
xor
xor
cld
test
movsb
ret
adc
movb
sub
pop
enter
and
cli
jl
sub
or
fbstp
push
sub
sbbb
inc
fxch
negb
jmp
sbb
test
pop
jae
das
mov
and
cmpsb
mov
roll
push
mov
jl
out
in
or
call
aas
sub
cwtl
and
xchg
insl
imul
dec
loope
or
pop
sub
adc
bnd
nop
in
mov
add
sbb
gs
jle
sbb
dec
mov
int
pop
mov
adc
mov
mov
xor
mov
rolb
dec
aad
cmp
stc
add
jge
mov
pop
sarl
sub
mov
cwtl
test
jp
into
and
add
outsb
add
leave
lcall
aaa
mov
cmp
shll
jp
xchg
ss
clc
pusha
jno
in
gs
xor
sbb
dec
add
rorl
xor
inc
mov
test
icebp
jp
pop
jb
mov
leave
jge
pop
hlt
cmovg
call
ljmp
clc
dec
inc
pop
sub
adc
jo
mov
push
jno
repnz
loopne
test
add
lods
int3
cmp
stos
cmp
or
popf
xor
pusha
mov
call
pop
dec
sub
insb
fistpl
cmp
or
cmp
stos
lock
push
inc
lret
decb
xchg
lea
sbb
orl
push
add
loope
imul
sub
ret
jge
fcomps
pop
sub
adc
xchg
dec
into
add
jle
ljmp
inc
mov
popf
mov
stc
mov
push
hlt
imul
in
out
repz
add
sbb
pop
leave
push
ret
push
xchg
jne
jle
out
mov
add
mov
sahf
in
add
stos
xchg
adc
pop
ret
popa
ret
daa
pop
pop
stc
jo
xchg
fildll
jno
push
pop
loop
rol
pop
add
xor
mov
xor
repz
lret
out
jo
xor
in
arpl
mov
inc
xchg
jecxz
lock
sbb
into
push
cmc
sub
sub
imul
inc
xchg
mov
lods
xchg
pop
hlt
int
cmp
into
push
push
sbb
arpl
push
out
scas
ret
sti
cld
mov
cmc
shrl
xor
aam
cmp
add
mov
mov
sub
arpl
loop
mov
mov
fldt
fildll
xor
and
mov
lea
cmp
or
ss
ss
cmp
andb
outsl
xor
dec
movsl
jl
cmp
cmp
cmp
xor
lcall
and
adc
or
sti
fisubrs
iret
sbb
addr16
mov
sbb
fstpl
aaa
mov
xchg
mov
and
pop
mov
sub
hlt
and
jecxz
sub
andb
enter
sbb
jnp
or
jae
xchg
movsl
loop
push
popw
cmpsb
lods
pop
pop
mov
imul
inc
push
cmp
mov
inc
mov
and
bound
lock
or
or
aas
adc
inc
shll
xlat
sbb
xchg
mov
stos
mov
test
pop
sub
cld
nop
std
dec
or
push
or
loopne
movsb
xchg
popf
insl
add
sbb
adc
fdiv
test
rcrl
and
pop
scas
cmp
push
xor
insb
xchg
mov
adc
les
mov
push
sbb
pop
stos
push
sub
adc
cs
mov
sbb
mov
or
xchg
sahf
fistps
inc
roll
dec
pop
rolb
fildll
jnp
into
adc
shrb
mov
mov
arpl
stc
pop
push
inc
or
pop
ss
mov
loop
inc
shr
xchg
ret
lcall
mov
dec
in
dec
mov
xchg
sbb
pop
sbb
scas
sub
and
lea
fdivs
jmp
adc
jp,pt
cmp
and
imul
mov
jle
cmc
inc
loopne
jns
and
scas
xchg
or
data16
jno
jge
popf
inc
and
cli
add
sarl
pop
mov
sub
dec
dec
outsl
aaa
imul
dec
sub
fwait
sbb
adc
out
adc
xchg
push
not
cli
adc
or
out
xor
mov
and
insb
out
pushf
in
inc
movsb
add
mov
fldcw
cld
pop
mov
dec
in
rorl
jmp
xchg
jl
xchg
decb
jbe
xchg
xchg
inc
lea
xchg
pop
cmp
icebp
push
out
inc
icebp
jbe
stos
inc
xor
push
jo
jb
insb
ret
bound
mov
xchg
dec
mov
negl
pusha
iret
sbb
enter
imul
insb
pushf
sbb
rcll
stc
addr16
jb
popf
push
dec
or
ret
xchg
ret
xor
pop
and
jno
testb
jnp
cmpsl
mov
ret
jne
xchg
mov
ljmp
jle
mov
or
xchg
in
je
xchg
negl
stos
mov
xlat
jecxz
jg
addb
cs
leave
fiaddl
add
jg
imul
stos
movsb
test
inc
insl
scas
sub
sub
ss
pop
imul
incl
ret
out
ljmp
sub
inc
adcl
mov
cmp
add
xor
decb
pop
push
ss
aas
inc
hlt
sbb
jmp
xchg
leave
sub
and
xlat
xchg
jnp
xorl
cmp
insb
shrl
clc
mov
int
xlat
push
movsl
stos
dec
ja
jo
sbb
or
sub
dec
cmp
jne
stos
leave
push
outsl
icebp
xor
xchg
mov
fidivl
sti
iret
xor
mov
bound
fimuls
push
nop
xor
nop
hlt
test
call
mov
mov
es
pop
mov
xchg
daa
xor
ljmp
jne
or
loopne
mov
xchg
cmpsb
icebp
cmp
mov
mov
or
rcr
cmpb
fsts
xor
pop
insl
outsl
jp
pop
dec
mov
add
push
and
ja
stos
adc
in
jnp
aaa
jg
hlt
fisubl
xchg
sbb
dec
int3
jg
mov
in
sti
dec
adc
pusha
in
incl
jge
xchg
ss
adc
pop
xor
push
insl
jno
add
nop
push
test
loopne
and
xor
and
jge
lret
dec
jecxz
notb
adc
cmp
inc
adc
or
jno
call
pop
cli
mov
xor
repz
mov
insl
mov
sar
inc
fsubl
lcall
scas
fcmovb
mov
fs
pop
cltd
jns
adc
add
xor
nop
inc
and
xor
ror
movsl
push
jnp
pop
push
bound
push
pop
pop
loop
dec
xchg
sbb
jle
call
sahf
sahf
sub
jecxz
fsubl
adc
insl
ror
data16
push
shl
xchg
lock
dec
cli
insb
call
xlat
xchg
pop
lods
cmc
add
dec
or
pop
roll
sbb
arpl
inc
mov
xchg
sti
es
lea
xchg
cmp
xchg
adc
inc
mov
pop
mov
in
sbbl
push
cs
imul
sbb
ffreep
daa
ds
jl
sub
test
inc
lds
out
pushf
fisubs
test
fisttpl
cmp
adc
sbb
aaa
sub
ja
inc
ja
test
mov
add
mov
sub
xor
fwait
ja
xchg
movsl
mov
pop
sbb
adcl
frstor
cli
mov
sbb
inc
fwait
add
push
subl
jmp
sti
jle
and
sub
sub
negb
and
sbb
movsl
xor
test
or
push
jge
repz
lahf
std
mov
xor
push
add
fsubrl
shrl
dec
cmp
leave
xor
or
push
mov
mov
push
jp
fistpl
insl
dec
xor
mov
jmp
lret
add
fwait
repnz
mov
ljmp
in
mov
mov
imul
inc
add
pop
test
divb
arpl
mov
mov
jnp
shlb
and
cmp
lods
sub
rol
pop
movsl
cmpsb
std
je
push
lods
pop
jp
les
inc
enter
adc
cmp
in
pop
and
aaa
push
pop
mov
jnp
mov
outsb
or
icebp
lods
cmc
add
data16
cs
jg
dec
leave
fbstp
int3
push
sbb
pop
cmc
push
mov
push
sub
inc
sub
and
mov
and
mov
addr16
sbb
inc
mov
imul
push
pop
fisubrl
push
sahf
mov
mov
stos
cmp
jo
mov
mov
scas
dec
mov
mov
push
push
xchg
pop
sarb
jmp
xchg
or
fldenv
push
sbb
adc
mov
insl
cld
imul
lods
sub
cmp
dec
jno
mov
push
ds
mov
outsl
fcmovnu
push
popf
push
inc
and
adc
or
es
ficomps
cwtl
inc
or
cld
leave
pusha
decb
sbbl
into
repz
rclb
adc
mov
cli
inc
fwait
addr16
add
andl
rorl
cmp
mov
cltd
mov
xchg
sti
js
addr16
mov
jns
adc
xor
rep
loope
clc
movsb
fdivr
mov
clc
sub
inc
cld
jnp
outsb
test
cmc
mov
and
js
or
sbb
fdivrp
dec
movsb
out
xchg
shll
in
je
movsb
stc
fsubl
sub
outsb
repz
shll
pop
mov
jg
lret
nop
mov
out
sub
or
mov
lcall
cmp
cmp
in
mov
xor
loopne
es
push
pop
xor
call
xchg
cmp
push
cli
sahf
or
repnz
mov
loopne
xchg
lahf
lds
mov
sbb
xor
stc
inc
stos
mov
inc
push
inc
and
xor
filds
jne
xor
jle
pop
pop
push
xchg
in
fs
mov
pop
cmc
jge
dec
insb
fldl
and
iret
push
std
adc
sbbb
ror
lods
xchg
inc
cmp
xchg
mov
xor
lahf
das
rclb
inc
repnz
ds
loopne
jg
pop
mov
std
fistpll
lcall
xchg
iret
pop
push
shrb
cmp
outsl
jge
lcall
ljmp
cwtl
mov
incb
mov
fsubl
aad
jbe
stc
lcall
inc
and
jg
push
stos
mov
xor
xlat
aas
pop
pop
pop
insb
pop
mov
punpckhbw
test
add
sub
xor
aaa
and
cmp
in
add
add
mov
pop
push
pop
push
cmc
dec
or
mov
jp
leave
pop
sbb
dec
out
add
xchg
pop
mov
xchg
movsl
out
orl
mov
daa
push
and
jns
js
push
ljmp
out
imul
imul
aaa
dec
inc
je
fstl
imul
repnz
daa
xor
cmpsb
clc
push
inc
xchg
cltd
arpl
cmp
push
call
dec
fcmove
add
fisttps
sub
push
test
jb
jp
stos
ja
scas
push
daa
or
es
es
inc
sub
lea
fs
mov
bound
dec
jl
outsb
shlb
jl
mov
pop
sub
mov
clc
jo
dec
popa
out
lds
cmpl
mov
lcall
xchg
sub
and
pop
jl
in
rclb
jmp
daa
and
xchg
test
lea
rcrl
scas
out
popa
out
jle
outsb
shr
pusha
mov
notb
mov
pusha
pop
ss
imul
movaps
xor
lock
sbb
loop
jno
pusha
push
rol
lret
mov
pop
fimull
mov
jl
jbe
adc
enter
xchg
cmp
mov
cltd
rcrl
cmc
xchg
jge
cs
add
stos
movsb
mov
dec
shl
xchg
movsl
jg
dec
loope
or
mov
xchg
dec
pop
orl
insb
dec
and
orb
lods
and
mov
cwtl
sub
pusha
cmp
imul
sbb
fdivl
mov
jmp
stos
out
mov
ja
movl
push
lret
cmpsl
fists
xchg
arpl
pop
jnp
pop
addr16
pop
push
dec
or
cld
or
mov
aas
loop
jge
testl
or
out
push
sahf
js
out
add
cmpsb
popa
ja
dec
inc
mov
xor
push
ljmp
add
mov
iret
xchg
add
pop
push
out
jno
jbe
mov
inc
lret
sbb
jns
fdiv
add
shrb
sub
or
sub
pop
adc
lds
dec
stos
pop
cmpsb
push
mov
scas
jg
adc
mov
jmp
dec
mov
ret
imul
xor
pop
ret
out
das
jbe
popf
ret
mov
lea
call
push
mov
sub
pop
jmp
std
sbb
repz
pop
xor
adc
cmp
push
xor
fcmovnbe
cmp
call
test
ret
cmp
push
pop
mov
aaa
enter
les
jae
mov
cmp
adc
fs
mov
mov
cltd
sbb
mov
push
insl
jp
pop
mov
imul
jl
aam
cld
loope
cmp
mov
cmp
popf
shlb
pop
inc
aaa
and
lcall
mov
inc
daa
lret
movsb
ficompl
mov
clc
jmp
or
dec
cmpsl
fildl
or
jecxz
sbb
inc
movsb
cmp
jle
pop
dec
fld
jae
std
sub
lea
add
sbb
bound
call
les
in
orb
and
cmp
and
cmpsl
movsl
inc
xchg
shr
adc
fnstenv
aad
shll
addr16
cmp
fidivl
ficoms
nop
das
push
sbb
arpl
xchg
je
ret
pop
fcmovnu
arpl
mov
add
xchg
cmp
sub
add
pushf
mov
mov
pop
sub
pop
xchg
cmpl
xor
push
sbb
mov
sub
into
jecxz
push
ds
imul
and
jl
adc
fcomps
gs
dec
mulb
push
jb
mov
push
mov
add
mov
popa
and
je
cs
in
push
jns
scas
push
cmp
inc
xlat
scas
sti
mov
xor
sub
jne
lcall
and
sbbb
pop
mov
call
sub
add
stos
push
xchg
sbb
call
leave
mov
call
and
mov
sub
fs
add
xchg
ret
ja
or
mov
stc
sub
daa
cmp
sub
nop
jmp
or
add
or
push
xchg
xchg
dec
out
clc
mov
shll
adcl
jecxz
frstor
stos
add
inc
adc
add
imul
push
dec
sub
add
mov
icebp
or
mov
mov
mov
mov
inc
scas
jnp
mov
repnz
and
add
dec
and
movsb
fisubrl
stc
lea
jl
jns
mov
es
ss
call
inc
inc
cmp
cmp
mov
rcll
pusha
nop
xlat
and
subb
cwtl
mov
movsl
subb
sub
sub
outsl
imulb
xor
pusha
mov
push
adc
out
cmp
mov
xor
mov
mov
movsl
dec
lcall
xor
mov
xchg
push
pusha
cmpsl
jae
inc
frstor
jmp
push
test
jge
inc
sbb
stc
mov
xlat
cmp
adc
xor
sbbl
jecxz
jnp
enter
pop
fucom
mov
ss
pop
jb
and
xlat
dec
inc
aaa
dec
pushf
xor
ficoml
xchg
mov
inc
and
stos
in
aad
jmp
insl
xchg
inc
or
mov
push
insb
jne
ljmp
xlat
adc
sbb
adc
dec
insl
pop
add
mov
and
cmpsl
inc
xlat
int
xor
aam
inc
cwtl
lahf
test
ja
lods
cmp
arpl
daa
adc
add
mov
xchg
jge
fisttpll
push
dec
pop
fidivl
in
push
mov
inc
lock
jbe
sbb
and
xchg
pop
repz
xchg
push
xchg
stos
pusha
push
stc
repz
jg
push
push
ja
das
add
push
and
fsubl
stc
pop
push
cmp
jbe
adc
cltd
daa
push
pop
push
or
pop
popa
jge
push
pop
mov
das
test
inc
pop
push
sbbb
mov
imul
rcll
and
adc
sub
sahf
mov
out
push
out
dec
and
jg
lds
sbb
outsb
imul
mov
xchg
out
mov
push
fsubrl
inc
push
dec
ljmp
add
xor
cmp
int3
and
mov
sbbb
mov
dec
xchg
mov
out
fucomi
dec
arpl
jno
fisttps
into
cmpsb
add
notb
movsl
ja
das
nop
inc
dec
adc
loopne
daa
shufps
mov
sbb
cmp
ljmp
inc
jle
xchg
xchg
repnz
nop
or
daa
cs
jecxz
mov
push
xor
mov
jae
fwait
sar
loopne
shl
lds
loop
mov
mov
pop
mov
add
sarb
enter
jae
xchg
in
test
sub
pop
xchg
shrl
por
sbb
in
loopne
pop
mov
adc
dec
jle
pop
je
incb
ret
in
cmpsw
daa
dec
add
stos
push
inc
or
and
test
mov
adc
out
mov
jb
inc
lea
mov
outsl
js
das
jle
test
mov
lock
shlb
popa
or
jecxz
push
or
out
inc
lret
fwait
inc
sbb
aas
hlt
movsb
mov
mov
jp
aaa
sbb
out
test
adc
xchg
sahf
lea
mov
mov
shrl
out
jmp
ss
aam
enter
ljmp
leave
cmp
sub
ror
into
sarl
ds
fsub
sub
fcmovu
and
inc
push
push
out
cmpsb
aad
fwait
jmp
movsl
jg
iret
popf
cmp
mov
push
adc
lds
push
pop
cmp
xchg
popf
out
pusha
cwtl
mov
sbb
jae
and
push
ror
clc
adc
jne
popa
insb
mov
outsb
test
jne
loopne
mov
mov
jp
push
in
mov
dec
repz
leave
mov
cmpsb
or
outsl
in
ret
mov
aam
sahf
ss
dec
sub
dec
jae
or
aad
cld
or
and
add
mov
jg
and
fistps
or
pusha
rcll
inc
fbstp
sub
sbb
cmc
xchg
push
jecxz
cmp
bound
pop
pop
int
andl
fdivrl
mov
cmp
push
jecxz
push
clc
sub
add
and
xor
fadds
add
je
rcrl
sbb
out
push
dec
stos
in
sbb
xor
sbb
xchg
and
xor
or
lcall
dec
pop
adc
popa
push
mov
out
mov
aaa
push
ret
daa
add
in
mov
cmc
xchg
inc
int
mov
shrl
loopne
test
mov
jg
inc
inc
jl
mov
dec
push
in
repnz
out
fdivs
aam
out
mov
sbb
pinsrw
imul
inc
cltd
ja
add
lahf
negb
mov
test
lret
push
push
bswap
push
and
sub
cli
ret
mov
in
dec
add
mov
in
mov
mov
out
data16
adc
insl
ja
mov
pop
sbb
je
inc
aas
out
xor
fwait
ret
jmp
push
aaa
sbb
jecxz
fsubl
popa
xor
cltd
pop
or
out
mov
fsubp
psubsb
xchg
sbb
inc
sub
fdiv
dec
xchg
inc
pop
pop
mov
cmp
roll
shlb
cmpsl
add
jbe
outsb
jns
jp
pop
mov
inc
fcmovne
dec
dec
stos
xchg
push
into
arpl
outsl
or
nop
push
add
cmpsl
xchg
outsb
test
push
cmp
insb
insb
xor
les
cs
lock
mov
push
stos
ja
inc
xor
or
mov
filds
sbb
pop
adc
inc
jl
int3
andl
ret
fwait
lret
inc
pop
sub
pop
into
cltd
bound
out
cmp
push
pusha
jmp
push
aaa
push
mov
scas
xchg
or
sbb
sbb
jmp
jl
pop
mov
or
pusha
or
scas
xor
gs
les
imul
in
add
xor
mov
scas
inc
stos
push
dec
dec
mov
xor
sub
pop
push
inc
pop
lock
clc
or
push
shll
ret
mov
sbb
adc
fmulp
cmp
xor
pop
cli
fcoms
jecxz
outsb
cmp
cmp
movsl
mov
lea
jae
aam
mov
imul
js
pop
xchg
push
mov
aad
rcl
repz
xor
dec
out
int3
cmp
xchg
iret
shr
mulb
inc
enter
repz
stc
imul
cwtl
clc
inc
inc
cmpsb
pop
insl
inc
adc
loope
dec
lret
aas
and
test
fimull
lea
cld
xchg
lea
sub
outsb
jmp
xchg
mov
cmpb
clc
jae
adc
jns
adc
cmpsl
xchg
dec
lods
pushf
adc
out
cmc
div
ficoms
mov
mov
sub
ret
les
jo
xor
or
sub
inc
cmpsl
ret
xlat
cmp
or
adc
aad
mov
mov
xchg
xadd
pushf
movsl
lods
hlt
and
and
xchg
push
xor
mov
repz
add
and
add
inc
push
mov
bound
rorl
movsl
sbb
in
pop
lret
mov
mov
push
push
ss
jl
cld
xchg
dec
or
loope
ficomps
test
pop
in
add
clc
adc
daa
mov
loope
sbb
sbb
aaa
pop
xchg
leave
jne
jmp
pop
cmp
push
or
call
mov
pop
cmp
ljmp
enter
mov
ds
sarb
jae
in
mov
call
xlat
mov
lods
arpl
aad
sub
cli
dec
in
jmp
test
addl
shll
int
ret
outsb
nop
ret
add
jp
push
adc
push
popa
push
jae
shl
pop
je
ljmp
cmovnp
loop,pn
sbb
push
loope
popa
and
into
cs
or
dec
jne,pn
lods
xchg
jle
rolb
inc
mov
int
jle
insl
xchg
mov
mov
or
dec
in
mov
push
dec
mov
fs
jecxz
movsb
fcoms
push
les
and
mov
add
sbb
adc
cli
out
pop
je
jl
loop
es
add
outsl
lds
push
push
sbb
lods
pop
mov
push
fidivl
push
and
jne
dec
lock
sahf
jbe
sub
push
sbb
push
ret
ret
inc
lock
push
push
mov
mov
roll
mov
mov
xor
loopne
daa
rolb
cmpsl
sub
push
out
pop
js
xor
icebp
jnp
fmuls
inc
cmp
inc
les
fninit
cmpsl
push
and
jp
lret
jecxz
aad
add
mov
test
icebp
imul
stos
in
sub
xchg
mov
adc
or
std
xchg
in
push
cli
cmp
les
test
cli
les
bound
fisubl
stos
fmuls
push
inc
jbe
mov
outsb
mov
xchg
push
xchg
fdivrs
mov
arpl
cmp
test
fnstenv
push
jmp
gs
fdivrs
add
shr
sub
shll
lret
push
push
xchg
pop
adc
in
lods
shrl
jns
dec
pusha
andb
loopne
adc
test
popf
loope
lods
fadd
aas
cltd
adc
push
stos
stc
pop
pop
mov
xor
inc
or
enter
cmp
xchg
jbe
popa
and
dec
xor
shrb
add
pop
inc
sub
xor
pop
mov
mov
out
mov
nop
nop
lahf
pop
or
jmp
xchg
cmpl
sub
mov
pop
sub
ds
outsb
es
sbb
ja
push
sbb
mov
insl
cld
inc
lret
mov
jp
das
add
out
sub
cs
mov
and
mov
jnp
outsl
out
rolb
pushf
lret
fnsave
cli
or
fs
outsb
xlat
xchg
shll
sub
push
mov
mov
mov
push
jg
add
push
shr
pop
push
retw
push
int
loop
pop
adc
ljmp
sbb
mov
test
push
insb
jae
inc
sub
sub
cli
jbe
jno
notl
push
inc
cmc
xchg
jns
jmp
sar
int
cmp
cmp
and
fwait
lds
stos
push
inc
mov
mov
inc
mov
adc
into
or
loop
dec
mov
sub
popa
test
call
inc
aas
out
xor
jns
pop
push
xor
jmp
lret
in
pop
cli
outsl
add
loopne
mov
mov
mov
mov
cmc
pop
push
dec
pop
test
out
xor
mov
sub
sbb
sub
mov
mov
xchg
mov
addb
pushf
addl
cmp
xchg
into
add
dec
mov
jmp
xchg
pop
push
sahf
rcrb
fisubrs
mov
in
pop
mov
cltd
jge
adc
shl
repnz
sahf
fbstp
mov
fsts
mov
hlt
into
rcr
mov
add
xor
fucomip
add
movsb
in
cmp
flds
ds
pop
push
loope
into
dec
lock
add
aaa
test
push
adc
jp
or
sbb
lock
das
lea
shlb
rorl
mov
dec
jnp
and
lcall
or
push
adcl
push
mov
xchg
push
add
push
stos
fcompl
push
adcl
popa
mov
scas
jecxz
mov
cmp
inc
data16
insb
sbb
or
jbe
leave
add
sbb
outsb
cmp
icebp
mov
or
push
ja
add
test
pop
jg
ja
sub
cmpsl
mov
mov
xchg
jp
add
cmp
rolb
rorl
ss
push
fisttpl
jmp
out
stc
dec
push
movsl
int
sbb
sub
cltd
inc
dec
xchg
loop
jno
cmpsl
notl
hlt
mov
fdivrl
test
mov
sahf
push
repnz
fistps
notb
fldenv
and
stos
cwtl
jbe
xchg
push
pop
lcall
jno
push
jmp
repnz
push
scas
loop
and
fcmovu
add
or
pop
aad
adc
ljmp
fildll
inc
bound
sbb
fucomi
std
add
pop
shl
jo
jno
bound
aas
push
mov
mov
icebp
xor
mov
adc
and
dec
out
fidivs
push
popf
jns
push
xor
data16
imull
pop
inc
mov
stos
pusha
call
pusha
adc
cmp
in
mov
xor
cmp
push
in
movsl
ja
rorb
testl
jg
loop
adc
add
xchg
arpl
cwtl
test
loope
sbb
jmp
sub
cmc
cmp
xchg
or
lret
dec
sbb
nop
arpl
push
int
or
es
and
stc
xchg
jecxz
adc
ret
adc
fucomp
movsl
mov
jo
adc
mov
push
inc
rcrl
fsts
add
sub
daa
push
out
sbbb
push
xchg
mov
pop
ss
and
mov
lock
out
shll
cld
jo
adc
xor
jbe
ret
or
mov
testb
lock
mov
enter
fcompl
fwait
ds
xchg
in
or
out
mov
xchg
xor
rcll
lock
push
mov
das
inc
and
xor
cmp
addr16
mov
sti
lods
fiaddl
sbb
xchg
mov
pushf
push
leave
fcmovnbe
icebp
xchg
push
fwait
xchg
xchg
cmpsb
xor
lcall
fcomip
dec
pop
lods
repz
mov
push
jg
mov
pop
addb
enter
jp
mov
arpl
push
mov
pop
xlat
lods
fsubrl
xchg
sbb
pusha
mov
shlb
rcrb
rcl
mov
mov
movsl
das
cmp
icebp
stc
aam
dec
adcl
das
add
jecxz
or
mov
cmc
out
pushf
rorb
fucomip
xor
jne
sbb
and
loop
lods
xchg
sbb
ljmp
mov
inc
hlt
dec
xchg
and
scas
lods
add
mov
sub
push
add
ja
fistps
mov
rcrb
inc
push
mov
push
mov
cmp
inc
insb
out
add
pop
movsl
shr
cmpsl
push
pop
mov
jbe
sub
or
jae
lods
xchg
scas
ds
test
les
add
cld
push
push
sub
push
dec
inc
pop
int3
fucomp
and
pop
adc
in
arpl
mov
loope
dec
adc
ret
sub
pop
jl
in
je
xor
bound
adc
and
sub
xchg
dec
dec
dec
sub
repz
inc
push
rcrl
stos
cmp
jne
imul
pop
dec
test
jns
fwait
cmp
movsb
int3
xchg
sbb
xchg
jno
mov
daa
dec
mov
adc
leave
push
loop
pop
cmovg
sub
in
inc
cmp
mov
and
sbb
test
or
into
add
jg
xchg
je
or
scas
mov
std
sub
add
mov
pop
scas
jp
xchg
fs
add
cmp
in
in
negb
sbb
jnp
gs
aas
inc
push
dec
inc
or
sub
pop
int3
push
xchg
call
es
add
pop
cmc
in
jnp
sub
adc
jecxz
mov
add
xor
cmpsb
movsl
adc
notb
add
repz
cmpsl
mov
and
iret
test
push
stos
testb
push
jle,pt
out
adcb
pop
pop
add
rcrl
mov
pop
mov
jo
stos
push
or
mov
xor
adc
or
std
movsb
mov
aam
xchg
dec
repnz
mov
lcall
inc
sub
je
adc
imul
dec
fmul
int3
sbb
dec
call
jnp
xchg
hlt
scas
mov
push
push
out
daa
fisubrl
in
mov
int
xchg
and
jg
pop
movsb
mov
cmp
dec
jle
push
inc
cmpsb
lahf
xorb
lods
pop
jl
out
sbb
cmpsb
cs
cmp
mov
and
div
into
cmpl
xchg
lods
pop
nop
popf
pusha
sub
incb
mov
rol
cmp
loopne
or
adc
and
jnp
fsubrl
arpl
jmp
inc
inc
loop
and
outsb
outsl
pop
aas
inc
xchg
jnp
and
pushf
inc
gs
pop
sub
push
xchg
mov
jns
in
outsl
inc
data16
and
or
xchg
stos
clc
or
mov
stos
hlt
sbb
lret
in
push
push
sbb
es
jmp
adc
lds
repnz
lcall
add
andl
sub
cli
test
add
sbb
push
mov
aad
and
xor
fstps
scas
rorb
arpl
das
mov
pop
pushf
ds
popa
outsb
stos
and
lods
adc
or
dec
sahf
jae
nop
xor
cli
movsl
and
inc
fwait
inc
femms
cmp
cli
push
sub
xchg
andb
push
daa
aas
in
or
pop
lods
mov
insb
inc
ret
pop
jns
jg
push
repz
call
test
jecxz
pusha
adc
mov
pop
fwait
nop
les
fdivl
lcall
subl
push
mov
push
imul
andl
dec
mov
mov
xchg
arpl
mov
or
fcoms
pop
xchg
subb
jb
add
mov
mov
xor
aas
mov
sub
in
adc
cmc
lcall
push
jo
add
pop
andb
and
in
pop
sub
jns
or
inc
mov
sub
add
dec
fdivs
aam
fldt
jnp
andl
cltd
cmp
daa
ss
dec
xchg
jo
push
inc
cld
ss
subl
mov
mov
pop
fucomip
mov
test
rorl
leave
sarb
mov
cmpsl
push
inc
stos
shr
adc
mov
lret
pusha
pop
xor
jle
popf
mov
ret
mov
sbb
ss
sti
xor
mov
dec
or
bound
cmp
add
clc
mov
daa
pop
push
pop
icebp
dec
or
add
icebp
or
fmull
xchg
dec
cmp
push
sahf
pop
or
sub
lcall
repnz
insl
mov
imul
test
mov
jle
mov
mov
mov
setl
jae
sti
pop
lret
outsl
stos
leave
into
call
jp
addl
fsubp
mov
hlt
push
aas
stc
lret
xchg
daa
xchg
stc
lea
decb
dec
adc
iret
repz
mov
jno
mov
inc
cmc
dec
les
xchg
push
pop
into
bound
inc
mov
push
pop
jge
clc
imul
in
cmp
sbb
mov
cmp
pop
stos
jle
inc
in
lea
lcall
sbb
and
jbe
mov
mov
sub
rclb
xchg
pop
enter
dec
stc
nop
lahf
pop
icebp
out
pop
pop
mov
jmp
mov
sahf
mov
push
pop
inc
push
loopne
cmp
jo
insl
ret
add
jbe
ja
xchg
mov
adc
addr16
cmp
push
and
lock
outsl
mov
xchg
xchg
cmpsb
je
test
gs
sbb
dec
sub
sbb
sti
movsb
pop
out
loop
xor
outsb
cmp
fisubrs
add
mov
and
dec
movsb
jnp
ss
fsts
dec
arpl
lea
inc
sbb
push
addr16
lahf
xchg
mov
arpl
lcall
push
je
loope
xchg
sub
mov
data16
sbb
mov
sti
inc
ja
shlb
mov
fdivrs
in
loop
mov
sub
ret
dec
dec
push
push
ds
lea
inc
push
push
ds
les
cli
pop
xchg
lahf
dec
decl
leave
jne
sarb
clc
sahf
mov
mov
loope
rcl
push
cmp
jle
sbb
bound
mov
dec
out
stc
call
pop
xchg
jge
stos
pop
push
cmpl
cmp
fiadds
jno
xor
imul
inc
xor
ss
or
push
test
test
inc
mov
aam
mov
xor
mov
loopne
movsl
push
iret
cwtl
jle
call
jns
nop
pop
sub
popa
xchg
inc
and
mov
xchg
cld
addl
lret
es
hlt
push
bound
lods
inc
into
or
cs
xor
sub
xor
test
pusha
push
cli
cmp
arpl
lea
mov
dec
pop
or
test
les
pslld
leave
xchg
stos
ja
gs
addb
fcoml
orb
mov
pop
cs
cli
inc
iret
shrb
adcl
jg
and
cmpsb
inc
loop
xor
gs
sarl
xchg
sbb
pop
out
inc
jae
movsl
sbb
jecxz
cmpsb
rcrb
repnz
fwait
inc
adc
adc
insb
lock
or
imul
cmp
xor
test
ds
and
and
divb
dec
jg
dec
push
movsb
nop
inc
lods
and
adc
dec
dec
jns
insb
adcl
pop
jg
fwait
jae
cmp
cmp
hlt
inc
add
cmpsl
data16
jno
mov
jns
mov
negb
xchg
dec
addb
cmpsb
push
ja
mov
sbb
sub
mov
xchg
cmp
sub
and
cmc
hlt
aad
mov
cld
repz
sti
cmp
shrb
sbbb
fildl
rcrl
cmp
adc
ss
sbb
sbb
stos
shlb
in
ret
jo
xchg
mov
imul
pop
add
cmpsl
xchg
enter
pop
jae
stc
imul
cmp
imul
popa
sbb
addr16
int
push
sti
xlat
lock
sbb
int
loope
scas
repz
cmp
jmp
popf
push
dec
adc
inc
dec
push
insb
lret
push
sub
aas
in
aad
cmp
cmp
jl
sbb
mov
into
lcall
fimull
fstp
adc
cli
inc
push
pop
xchg
out
xchg
stos
xor
fsts
inc
inc
dec
test
into
push
int3
sbb
or
arpl
daa
mov
pop
mov
xor
das
pop
icebp
imulb
push
das
adc
scas
add
sub
mov
jne
mov
fsts
addb
jbe
adc
add
cmc
aaa
fisubs
rcll
cmp
jecxz
ja
mov
cmpsl
mov
das
and
aam
mov
movsb
and
cmp
daa
sti
dec
in
inc
push
data16
aad
cld
dec
pusha
jns
pop
mov
orl
mov
pop
mov
xchg
iret
mov
inc
xor
cmp
xlat
jecxz
jecxz
dec
cmpsl
mov
shlb
lods
jno
shl
addl
pop
inc
insb
jg
adc
push
cld
xor
jle
stos
sub
cmp
dec
jne
mov
adc
sti
shrb
cwtl
cmpsb
sub
stc
lods
jmp
xchg
xchg
out
xchg
dec
add
mov
data16
rorl
ja
and
das
data16
jmp
sub
nop
add
mov
stc
push
aam
dec
or
ret
jle
mov
xchg
or
mov
adc
cmpsb
aad
into
idivb
fs
dec
jae
cli
shrb
aaa
imul
test
cmp
mov
jp
sarl
and
out
adc
dec
cmp
scas
ret
les
add
dec
mov
cmp
xor
sarl
iret
insb
jmp
ss
inc
push
jl
cmpsl
mov
outsl
bound
xchg
popf
jb
fstps
adc
mov
das
pushf
testl
scas
xor
pop
hlt
fnstcw
xchg
aam
int
mov
jbe
cmp
add
shrl
lods
adc
enter
add
icebp
jecxz
jl
sbb
pop
adc
cmpsb
sarl
hlt
in
mov
xchg
mov
sub
jo
push
dec
sbb
xchg
lret
inc
pusha
sbb
sub
js
xchg
data16
cmp
and
repnz
jle
push
sbb
xor
and
adc
js
loope
loopne
aam
xor
les
loope
jecxz
cld
js
and
adc
jns
mov
jne
xor
shlb
ss
xchg
push
aad
push
push
mov
dec
xchg
leave
fcoml
inc
add
ja
jg
imul
xor
and
jmp
cmpl
push
xor
xchg
lods
jo
lahf
int
add
xor
push
mov
mov
xchg
mov
xchg
les
decl
lods
cmpsb
and
xchg
mov
and
repz
jmp
inc
imull
cli
imul
mov
inc
in
lret
imul
push
dec
rclb
jno
aam
sahf
aad
inc
ret
lods
sub
sub
movsl
or
pop
fdiv
and
decl
dec
cmpsl
dec
cmp
mov
xchg
inc
push
xchg
rcll
loope
outsl
dec
fs
shlb
cs
sub
push
push
out
data16
lods
adc
ljmp
sub
pop
pop
jp
lcall
hlt
add
out
in
pop
daa
scas
mov
loopne
pop
out
or
and
decb
mov
xorl
in
jb
mov
arpl
dec
xor
push
jge
lcall
mov
test
cmpsl
out
cmpsl
lahf
pushl
insl
xor
std
sti
fildl
jg
int3
cmp
stc
ja
cmp
inc
inc
mov
cmc
xor
jns
or
cmpsb
xchg
inc
sbb
adc
add
pusha
mov
inc
sahf
stos
push
pop
cmpsb
dec
inc
sbb
pop
ret
xchg
push
test
xchg
ret
stc
in
inc
mov
xor
es
sti
mov
fidivl
or
xchg
roll
jae
ret
jbe
aas
mov
cmp
jnp
ret
repz
add
popa
femms
shrl
jecxz
or
or
andl
adc
aad
push
popf
scas
jmp
cmp
inc
imul
xchg
sbb
dec
push
jp
jl
cmovb
pop
frstor
xchg
xchg
arpl
sbb
and
mov
push
pusha
and
push
and
scas
cli
or
out
test
push
pushl
ret
pusha
mov
scas
int
loopne
mov
aas
cmpsb
test
xor
dec
sarb
lret
jnp
pop
in
fucom
dec
fwait
xor
mov
xchg
stos
sahf
xor
shrb
fwait
or
mov
jb
mov
xchg
mov
repz
test
je
sbb
adc
cltd
adc
xchg
jge
push
mov
in
mov
dec
lock
adc
or
mov
inc
add
push
push
jg
xchg
jge
jbe
cmp
das
mov
add
imul
sub
cwtl
scas
mov
mov
mulb
mov
in
xchg
cmp
mov
dec
shll
sub
stos
xor
lret
jl
push
jbe
push
sub
adc
cmp
mov
sub
movsb
jb
mulb
bnd
xchg
fimull
mov
inc
inc
roll
push
idivl
insb
pop
sub
fmull
add
xchg
xchg
dec
mov
loopne
xchg
mov
mov
sbb
test
add
adc
mov
or
push
movsb
mov
roll
inc
outsb
mov
cmp
pusha
in
popa
and
dec
cmp
lods
popf
lret
jne
adc
xchg
int
pushl
fwait
jge
lahf
mov
push
outsb
sbb
jecxz
lea
mov
cmp
fcomps
outsl
mov
inc
sub
mov
aad
cmp
or
or
sbbl
mov
mov
out
popa
test
jo
rcrb
jns
les
push
cmc
aad
mov
mov
mov
int3
enter
and
fistl
scas
lcall
xchg
or
lods
pop
pop
jno
test
push
xor
in
xchg
jle
pop
shrb
pop
pop
data16
iret
jne
push
sub
arpl
push
cs
sub
sbb
aad
lahf
and
fldt
cltd
test
leave
inc
stc
arpl
push
jecxz
dec
cld
lcall
out
lcall
imul
and
rorl
andb
repnz
or
xchg
mov
fwait
or
cs
andl
mov
arpl
or
sub
mov
or
jns
mov
adc
mov
xchg
and
and
pop
inc
add
mov
sub
test
jnp
pushf
jmp
inc
fsubrs
lods
adc
int3
lea
push
sub
sbb
or
in
push
shrl
inc
lret
out
in
call
mov
cmpsb
out
leave
enter
popf
push
xchg
mov
ljmp
out
jg
ret
pop
pushf
in
add
dec
aam
dec
xor
div
add
inc
or
and
cmp
sub
jb
sbb
leave
dec
jb
aaa
mov
push
sarl
jp
pop
push
jl
out
cmpsb
jb
fdiv
leave
pop
jp
mov
jae
xor
dec
xor
jbe
gs
mov
shlb
dec
mov
pop
mov
cmp
ss
jno
andb
mov
lds
sti
pop
jl
push
scas
pushw
lahf
lea
out
loopne
movsl
mov
mov
cld
pop
clc
inc
or
ja
outsb
xchg
clc
dec
adc
dec
popl
or
mov
das
enter
add
das
sbb
or
and
mov
push
pusha
and
ficompl
daa
cld
in
pushf
mov
orb
pop
jns
sub
pop
aad
lahf
push
push
xchg
dec
sub
shlb
subb
testl
sub
popa
sub
push
jge
add
popl
mov
pop
cld
jl
xchg
mov
xchg
pop
inc
scas
sub
push
and
and
adc
incl
inc
sahf
popf
stc
aas
stc
xchg
movsl
inc
cmpsb
cmpsl
dec
scas
movsb
jno
jns
andb
add
push
test
in
dec
pop
cmpsb
mov
sbb
add
adc
jl
call
mov
xchg
arpl
aad
push
jnp
arpl
adc
xchg
xchg
and
sub
sti
push
inc
mov
push
mov
bound
mov
push
fiadds
fists
adc
sti
jge
jp
pop
sti
mov
or
iret
mov
mov
pop
push
je
mov
ss
int3
mov
test
loopne
adc
aad
pop
hlt
int
pop
lret
lahf
lods
jae
push
inc
cli
imul
xor
repz
cltd
es
imul
dec
lcall
dec
jmp
xor
mov
add
out
int3
dec
mov
jmp
jmp
ret
clc
push
mov
sti
and
pop
lods
cmc
xchg
push
push
or
js
push
push
test
iret
mov
jnp
divl
in
test
outsl
adc
cmp
loop
sbb
insb
xlat
outsb
xchg
inc
lock
or
mov
cmpsb
in
repnz
fsubrs
inc
mov
decb
lret
inc
and
mov
stc
pop
pminsw
sarl
sbb
sub
jmp
push
add
sbb
data16
lea
mov
lods
and
push
xor
bound
add
movsl
cli
sbb
mov
cmpsb
cmp
jp
add
test
push
into
jecxz
fnstsw
adc
sbb
jnp
mov
das
mov
sarb
jnp
outsl
mov
sbb
push
jns
loope
ljmp
or
and
dec
out
lods
enter
cmpsl
subl
sarb
rol
mov
add
adc
or
add
sub
ret
xor
das
sbb
out
sub
inc
mov
fs
sbb
lds
adc
sti
rcl
hlt
xchg
push
sub
push
aaa
jg
fcomps
sbb
jl
cmp
sarb
xchg
pop
sbb
movsb
popa
xchg
adc
popf
ss
push
jns
push
sbb
sti
je
je
pop
or
pop
ror
mov
cmp
das
insl
push
lods
int3
stc
inc
aad
xor
cld
icebp
or
adc
inc
cmp
cwtl
pop
push
les
fcoms
inc
mov
push
jo
scas
mov
sbb
or
sbb
test
or
and
push
test
inc
pop
and
cmp
push
cmpsl
aaa
int
xor
push
subb
xorl
aam
sub
pop
adc
sbb
mov
rcll
xchg
stc
repnz
add
insl
sbbb
pop
mov
js
dec
sub
inc
movsl
scas
or
cld
adc
stos
pop
xchg
xchg
jp
jmp
lock
dec
and
cld
mov
stos
mov
call
lods
je
jmp
adc
xor
iret
sub
dec
pop
es
scas
mov
push
cmp
aad
adc
cmc
shlb
inc
inc
sbb
fwait
jno
iret
xor
sbb
push
aam
and
aaa
cs
jg
imul
fsts
shlb
mov
mov
sub
flds
mov
push
pmuludq
ret
dec
mov
mov
adc
xchg
cmp
dec
lods
nop
bound
and
cmp
shrb
es
test
fstpl
je
mov
or
lock
push
xchg
testb
pusha
jecxz
xchg
xor
dec
jmp
sbb
movl
mov
hlt
lahf
sub
gs
cmp
popa
add
popa
in
pusha
test
xchg
cmp
jo
xlat
decl
fstps
iret
push
out
jnp
data16
and
jbe
cmpsb
icebp
jecxz
aam
outsb
mov
aaa
adcl
jnp
dec
dec
jmp
movsl
jbe
or
in
out
sub
cltd
pop
subl
cmpsb
pop
mov
xor
mov
jne
insb
mov
pop
or
int3
cmp
mov
rcrb
test
xor
punpckhwd
out
shll
addr16
cmp
or
cmpsl
jge
jmp
in
or
gs
out
add
add
or
add
loop
stos
adc
daa
adc
stos
dec
loop
es
inc
lock
sahf
sub
pop
mov
stc
loop
addr16
repz
movl
sti
jae
mov
js
mov
mov
mov
ja
jnp
scas
push
or
xchg
cwtl
mul
jg
mov
or
out
and
pop
add
bound
shrl
mov
aad
mov
mov
mov
and
or
or
add
cmp
lret
mov
or
dec
in
jp
mov
sti
das
push
mov
in
mov
dec
jle
popf
mov
aas
and
add
icebp
and
jnp
jns
fldcw
enter
xchg
jmp
dec
jge
ret
adc
mov
adc
inc
inc
xadd
scas
out
inc
xor
loopne
dec
aaa
gs
sbb
cmpl
jmp
scas
rclb
jbe
int3
or
jnp
in
sbb
addb
push
push
pop
and
add
inc
arpl
into
jp
push
inc
mov
mov
adc
cmpl
cmp
dec
mov
outsb
cmc
push
lcall
jg
pop
add
out
movsb
add
aam
fs
mov
inc
jns
sbb
inc
test
add
xor
scas
jb
sub
hlt
popf
aad
addr16
pop
gs
xor
jg
in
mov
mov
add
dec
cmp
scas
push
leave
inc
ja
nop
sub
add
add
inc
jo
lods
jne
and
mov
imul
push
mov
push
cwtl
fcoms
dec
xchg
cmpsl
jmp
push
icebp
jbe
fs
xor
mov
sarb
dec
out
dec
lds
fwait
xchg
sarb
xchg
push
sbb
xor
mov
mov
dec
mov
jne
scas
xchg
ds
je
push
dec
push
adc
fistpl
lea
stc
adc
jb
add
xchg
sbb
fiaddl
mov
adc
and
xchg
push
call
xor
mov
and
or
mov
inc
add
out
orb
add
mov
rclb
aam
cld
push
and
sbb
pop
leave
shrb
aas
sub
jl
mov
data16
das
in
mov
mov
lret
push
inc
pcmpeqb
mov
into
shlb
adc
adc
pushf
into
and
es
bound
fsubrs
push
pop
and
inc
sti
ds
xchg
in
scas
mov
push
dec
je
mov
lret
sahf
hlt
repz
fsubrp
test
inc
je
cmp
adc
cmpsb
jecxz
dec
dec
or
pop
xchg
scas
add
xchg
mov
dec
sahf
fcompl
aas
les
fcoms
xchg
cmp
std
xchg
push
call
lret
loop
inc
out
hlt
cmpl
in
add
sub
and
stos
adc
pusha
imul
lods
push
lea
rol
mov
out
mov
jle
in
pushf
or
cwtl
adc
push
outsb
mov
pop
in
push
xchg
movsb
and
xor
pop
or
roll
mov
xchg
xchg
test
movsb
insl
xor
sub
enter
or
xchg
mov
cmp
dec
jmp
sti
pop
lds
inc
mov
jge
ljmp
icebp
adc
add
dec
lret
shll
ss
mov
iret
or
scas
outsl
lods
and
std
inc
cmp
mov
dec
loope
out
mov
test
jo
jno
adc
inc
int
push
pop
pop
and
cmp
inc
icebp
sub
jae
sub
insb
stos
orb
cltd
pop
push
test
imulb
jle
es
sbb
sbb
pop
xor
rep
sub
push
lods
scas
pop
enter
out
xchg
vcvtdq2ps
sbb
scas
loope
dec
outsb
adc
xchg
mov
cmp
out
xor
enter
lea
jae
add
jmp
enter
xor
inc
imul
ja
sub
jae
popf
mov
idivl
pop
stos
jl
push
and
in
bound
xchg
out
iret
rcl
ljmp
jno
xchg
push
mov
fsubrs
in
mov
dec
adc
push
lods
xor
adc
add
pop
pop
push
fsubp
and
in
dec
les
out
pushf
add
cld
test
pop
sbb
aad
push
sub
scas
std
sub
iret
dec
mov
pop
fdivr
aad
movsl
loope
jno
pop
pop
jl
and
mov
add
sub
or
test
and
and
aad
cmpsl
popa
mov
mov
loopne
insb
push
addr16
ljmp
cwtl
test
sbb
into
fcmovu
imull
mov
mov
es
lds
popa
mov
cltd
cmp
cmp
mov
pop
stc
stos
sbb
not
outsb
addr16
fists
xlat
leave
loop
xor
cltd
pop
sub
mov
pop
mov
add
jo
jae
mov
js
sbb
inc
mov
jno
mov
adc
repnz
fnstcw
repnz
cltd
xchg
add
mov
mov
ret
mov
ljmp
nop
pop
xchg
or
mov
dec
lea
jl
pop
sub
fdiv
sub
lret
outsb
ljmp
in
stc
xchg
lcall
test
adc
push
jge
push
cmc
ret
or
pushf
fsub
sti
or
insb
xor
xor
cltd
add
push
incl
insl
adc
in
call
pop
gs
sbb
imull
lret
push
dec
stc
sub
mov
scas
test
cltd
dec
hlt
stos
jne
retw
push
mov
cltd
lahf
dec
and
jnp
mov
dec
sub
test
scas
fsubrp
pop
orb
adc
adc
mov
int
in
lret
lea
and
sbb
cmpsb
mov
ds
jb
imul
insb
dec
inc
test
and
xor
sbb
push
mov
std
jae
jmp
mov
dec
int3
pop
hlt
adc
or
aaa
movsb
sbb
lods
pusha
movb
mov
push
pop
popa
and
andb
xlat
fidivrs
cmp
sbb
int
or
movsl
add
jo
cmpb
sbb
sbb
dec
inc
push
push
dec
cmp
push
aad
lcall
jbe
cwtl
xor
xchg
push
in
mov
push
lahf
addr16
data16
add
pop
pop
scas
xor
pop
mov
cli
aas
dec
mov
cmc
cmp
jmp
dec
mov
xchg
in
lods
jbe
add
jb
or
and
lret
dec
fs
out
orps
shll
add
cmp
pop
das
dec
mov
insl
mov
fwait
and
add
rcrb
inc
popa
pop
pop
cltd
lcall
mov
cmp
loopne
lahf
in
jl
xor
das
or
icebp
repz
pop
stos
pop
mov
jne
pop
inc
out
neg
push
dec
adc
int3
aad
cwtl
call
push
push
dec
out
adc
pop
das
push
dec
sahf
nop
dec
movsl
pop
mov
inc
dec
not
push
and
push
aad
and
inc
mov
test
cltd
js
adc
cmpsb
outsl
scas
dec
cmpsl
and
cvtpi2ps
fldt
fs
shrb
xchg
push
lods
jns
mov
mov
fs
jo
mov
adc
mov
arpl
daa
dec
jmp
mov
je
xchg
push
sbb
jae
cmpsb
mov
shlb
jecxz
mov
test
iret
incl
lahf
fwait
push
adc
adc
adcl
mov
in
and
int3
pop
es
ret
pop
out
lahf
dec
movsl
fwait
mov
mulb
rol
sbb
cmpsb
mov
addb
xchg
out
pop
arpl
xor
in
sbb
test
xlat
mov
das
sti
dec
ret
jb
mov
and
popa
out
stos
test
gs
sahf
scas
fdiv
es
and
inc
cmp
rolb
movsl
test
imul
data16
hlt
and
sahf
jmp
enter
and
adc
or
push
dec
mov
shr
mov
inc
push
outsl
add
ret
jno
cmp
or
cmc
andb
jo
lock
cli
lods
divl
dec
shlb
and
cmp
aad
jge
faddl
cltd
and
adcl
int
lds
out
movsb
mov
mov
ret
lods
xchg
add
dec
sub
push
jne
lds
dec
scas
dec
addr16
dec
cmp
adc
pop
aam
or
add
push
test
negb
dec
inc
idivl
inc
xchg
mov
or
popa
mov
aam
mov
mov
mov
or
inc
inc
sbb
mov
stos
add
imul
mov
xor
xchg
pushf
ja,pt
jb
out
inc
icebp
aad
jno
repnz
mov
add
lret
bound
xchg
dec
push
add
and
or
sbb
aas
adc
stos
imul
mov
gs
add
push
repnz
in
xchg
xchg
pop
mov
or
sbb
pushf
mov
data16
cmc
pop
fildl
in
cs
mov
pop
scas
mov
sub
cmp
mov
ss
test
jle
nop
fstps
test
bound
aam
xchg
test
pop
and
dec
pushf
mov
gs
arpl
out
dec
popa
push
push
sahf
dec
bound
int3
xor
dec
mov
lds
xchg
mov
inc
scas
xchg
sub
lret
jp
pop
dec
mov
and
into
cmc
and
sbb
ret
das
adc
xchg
mov
imul
xchg
and
ret
cli
jmp
sarb
repz
ljmp
ja
inc
aad
jmp
and
divl
pop
xchg
mov
lock
dec
xor
sbb
sahf
stos
sbb
fidivrl
fcomp
nop
das
or
jno
jge
push
stos
ret
sub
fistpll
in
bound
sub
jo
push
mov
jb
adc
jle
rcll
sub
ja
movsl
inc
and
sub
cwtl
into
mov
sub
inc
addl
cli
or
in
insl
inc
sbb
adc
rolb
pop
lods
push
jmp
nop
sub
icebp
inc
add
aad
xchg
or
inc
ret
fstl
sbb
test
mov
lock
adc
sub
lret
imul
mov
cmp
xor
sbb
jg
repz
sbb
mov
or
movl
shlb
inc
ud0
pop
mov
enter
mov
bound
xor
add
aas
xor
sub
std
jo
jecxz
inc
pop
push
dec
cmp
xchg
add
fs
fwait
sub
mov
lcall
dec
adc
inc
ret
scas
clc
cli
push
mov
ret
movsl
popf
mov
and
jecxz
mov
into
inc
sbb
shl
ss
or
push
fnstsw
mov
cmpsb
pushf
push
xlat
pop
adc
ds
or
pop
jnp
test
movsb
jge
add
push
sub
inc
inc
lds
mov
fiaddl
fisttpl
ficompl
lods
cltd
or
mov
shl
call
pushf
add
sub
sahf
enter
negb
and
sbb
xchg
or
mov
push
dec
cmp
mov
xchg
jb
mov
imul
gs
mov
movb
and
adcb
lods
push
mov
jb
adc
ret
sbb
xor
push
sub
je
in
out
cmp
add
jg
mov
add
add
outsl
cli
fs
dec
pop
mov
mov
sbb
in
fs
ror
or
dec
jp
add
mov
xchg
pop
mov
or
cmp
xchg
repz
mov
or
aam
and
inc
jne
add
movsb
mov
fs
dec
cwtl
test
or
xor
fcomp
sub
pop
fsubrl
mov
inc
dec
clc
imul
jecxz
xor
hlt
imul
dec
sub
call
cmp
sub
mov
cmp
and
in
cld
jb
pop
mov
test
and
hlt
inc
rcrb
push
negb
mov
pop
mov
mov
adc
sbb
cmp
or
mov
or
adc
sbb
push
cmpsl
jecxz
inc
sub
sysexit
int
xor
test
aam
sub
push
int3
add
inc
push
aad
adc
aam
pop
or
push
cmp
js
sti
xor
das
xchg
push
jl
and
into
or
aam
adc
idivl
lods
rcll
sbb
sub
mov
cmpb
sub
insb
fstps
sbb
mov
push
movsb
sbb
push
clc
fwait
inc
pop
mov
adc
lods
add
fistpll
ret
in
cs
cmp
dec
lods
mov
xchg
dec
pop
std
inc
push
mov
fistps
scas
push
sbb
dec
mov
jecxz
hlt
mov
sub
jle
inc
into
movsb
int
lret
mov
dec
sbb
adc
sub
stos
rcrb
mov
jmp
ja
jb
dec
xchg
xchg
inc
pop
xchg
cmp
aas
adc
jnp
jl
push
dec
repz
ret
lods
and
aad
and
inc
psllw
jb
ja
leave
scas
das
or
in
loopne
cs
hlt
outsb
mov
and
clc
mov
jmp
mov
add
pop
cmp
mov
shl
test
rcrb
xchg
inc
sub
fmuls
cmpsb
push
and
cmp
lds
dec
cmp
fildll
jle
dec
dec
push
inc
adc
mov
xchg
mov
outsb
test
outsb
and
in
ljmp
mov
test
mov
pusha
push
or
mov
lcall
aam
cmp
lahf
out
insb
jbe
cmp
sub
in
repnz
mov
and
xchg
int
adc
fwait
std
aaa
xor
xchg
pop
pop
mov
dec
push
xchg
push
mov
arpl
sub
repz
test
das
add
into
lcall
xor
adc
iret
loop
dec
sbb
sbb
shr
push
xlat
dec
inc
inc
xor
xchg
mov
mov
mov
inc
in
add
cmpl
mov
sbb
inc
push
rcll
sbb
test
sub
andl
or
sbb
mov
shrl
mov
pop
iret
rcrl
or
cmp
cwtl
ss
and
lock
sbb
pop
hlt
js
adc
and
popf
enter
sahf
mov
pop
shrl
push
jb
aas
lods
sbb
dec
inc
lock
fisubrl
adc
cmpb
popf
flds
sub
or
scas
mov
xchg
push
insb
push
add
incb
fldenv
std
sub
or
in
inc
mov
pop
scas
inc
outsb
push
enter
or
cld
fcomps
shlb
repz
arpl
xorl
outsl
mov
dec
pushf
fsubr
inc
ja
adcl
les
add
aad
in
jo
mov
mov
cmp
push
pushf
sub
pop
popa
xor
xchg
xor
fdivrl
lea
pop
in
nop
mov
shlb
dec
mov
shll
in
cmp
pusha
in
inc
sbb
and
fistps
pop
aam
xlat
popa
hlt
into
add
cwtl
stos
insb
enter
or
adc
enter
fstps
cltd
ficoml
insb
call
popf
test
je
dec
popf
mov
jge
or
pop
cmp
xorl
jae
imul
cmp
and
addl
stos
jle
leave
lods
xchg
pop
or
fstl
scas
aas
das
cwtl
push
mov
out
in
cmp
cmpl
scas
outsl
pop
mov
cmp
jl
dec
lret
out
jge,pt
cmp
pop
jg
mov
or
cmp
pop
shll
cli
xchg
sbb
in
ss
sbb
dec
add
xor
push
cmp
dec
imul
call
and
loope
pop
xchg
mov
pop
inc
inc
push
lcall
adc
add
xchg
imul
loope
sbb
mov
add
dec
xor
imul
imul
xchg
or
or
push
imul
imul
mov
mov
push
sub
fisubrl
enter
pop
cmc
sar
insl
add
sub
xor
jl
outsl
fsubl
or
jle
leave
cmp
in
rorl
repz
stos
aam
mov
pop
rcrl
push
das
mov
ds
sbb
jg
add
add
repnz
xchg
in
jecxz
call
xlat
jne
sub
ficompl
and
test
call
jno
cmpsl
mov
test
es
push
call
xchg
sub
std
test
stos
test
mov
test
cmpsl
pop
ss
in
xchg
das
enter
add
and
dec
push
inc
cmc
add
fistpl
mov
stos
mov
mov
xlat
insb
loop
jns
lds
or
jbe
addr16
sub
xor
imul
cmp
cmp
xchg
clc
xor
lcall
scas
jae
jno
xchg
adc
pop
cli
xor
push
out
js
jae
lea
sbb
stos
inc
aas
in
xor
or
cmp
mov
cli
inc
daa
mov
mov
jb
test
cmpl
popa
clc
sbbl
sarl
jb
lahf
lods
add
lcall
adc
inc
aad
pop
out
add
jnp
mov
aas
pop
inc
cmp
repnz
pop
aam
xchg
mov
fdivs
lcall
sbb
lods
and
xor
mov
adc
ficompl
aam
mov
insb
sbb
clc
add
mov
sub
sub
pop
mov
mov
jmp
test
mov
inc
sbb
cmpsb
ret
or
scas
pop
inc
pop
jne
hlt
sub
divl
sysenter
cmp
sub
loopne
aad
in
cmp
push
sbb
scas
lock
dec
clc
xor
jg
jnp
push
daa
call
dec
and
notb
pop
ja
add
inc
push
xlat
test
rorb
mov
aam
inc
cmp
and
xchg
test
jnp
pusha
mov
and
in
repnz
mov
dec
arpl
sbb
add
jg
test
sub
and
fistl
jmp
sbb
xor
or
fwait
push
jns
xorl
mov
sub
xchg
fsts
xlat
dec
cmpsb
loop
mov
rcrl
adc
or
pusha
sbb
xor
push
popf
xchg
cmp
add
ja
dec
insl
repnz
imul
pop
add
pop
jnp
popa
and
cs
test
jle
and
pop
outsl
scas
stos
test
jg
sub
loop
sub
sub
xlat
sbb
lods
lahf
aam
cmpl
push
dec
popf
repz
or
inc
mov
mov
xorl
adc
fnstsw
jl
cmp
test
mov
pushf
aaa
shl
adc
gs
addr16
pop
xlat
data16
sbb
pop
sbb
and
and
test
push
sbb
mov
inc
cltd
out
and
sub
push
cmc
sbb
inc
push
inc
xor
pushf
adc
bound
add
add
out
dec
dec
lret
popf
pusha
inc
movsl
or
fdivs
call
cmpsl
sub
mov
scas
divb
mov
pop
inc
sub
test
dec
inc
lock
adc
cmp
xor
ljmp
or
je
pop
lret
bound
je
push
xchg
mov
pop
test
mov
cmpsl
mov
xor
sub
sarb
add
movsb
arpl
jl
jp
imul
fisttpl
ds
pop
addb
mov
fsub
stos
dec
jle
xor
push
hlt
inc
sbb
pusha
dec
xor
mov
clts
loopne
push
mov
add
jmp
mov
fwait
push
dec
jl
pop
stos
mov
je
add
cmpsl
les
mov
xchg
inc
push
pushl
movsl
dec
push
lcall
out
push
pusha
inc
pop
in
adc
int3
aad
rep
and
add
xor
sbb
sahf
data16
dec
gs
ret
test
mov
mov
enter
or
push
add
mov
dec
call
jo
mov
mov
adc
test
cmp
sahf
js
enter
push
and
lock
sbb
mov
and
insb
dec
nop
push
ret
aas
lds
mov
xor
xor
add
shll
ljmp
nop
sbb
and
movsb
out
push
adc
xchg
or
dec
push
bound
or
lea
add
sti
das
push
pop
ljmp
jne
jne
push
sbb
and
scas
in
stos
fstpl
ja
lcall
add
jnp
pushf
iret
push
mov
or
data16
sbb
and
ret
cmp
notl
pop
jle
mov
xor
pushf
ja
adc
cmpsb
cli
lret
jl
xchg
and
push
jnp
out
mov
into
push
icebp
sbb
inc
or
imul
lcall
lret
pop
andl
popa
xchg
xor
cmc
cwtl
pop
loope
in
or
jmp
pop
pusha
push
js
dec
mov
push
in
shr
add
mov
in
fwait
cmp
pop
jno
cli
sbb
mov
imul
es
outsb
mov
jle
roll
cli
dec
std
das
dec
pop
and
decb
sbb
jg
and
fildll
imul
dec
iret
mov
inc
scas
jo
leave
dec
outsl
cmp
dec
add
jg
das
jb
shlb
popa
aad
lahf
adc
iret
sbb
ret
lahf
inc
cli
insl
sahf
dec
loope
and
push
or
push
mov
sub
mov
or
adc
sub
sub
imul
pusha
mov
inc
hlt
decb
xchg
cmc
out
sub
fsubp
pop
mov
arpl
jge
ficoml
sub
mov
pop
je
jne
sti
mov
cmpsl
test
das
mov
jo
push
or
or
rcrb
aad
xchg
xchg
out
mov
lret
sub
or
add
pop
mov
je
scas
dec
mov
jne
fwait
les
xchg
mov
sahf
out
rclb
cli
sbb
sar
and
shrb
sbb
cmp
stos
jecxz
gs
xchg
lds
int
rorl
dec
pop
lds
dec
rorb
shl
mov
inc
inc
dec
inc
clc
cmp
cmp
in
cmp
inc
ljmp
in
push
inc
jbe
push
jne
jnp
gs
fmull
idivl
sub
jno
xor
out
xchg
dec
pusha
dec
pop
jb
sbb
xchg
insb
imul
fmul
mov
add
inc
scas
int
stos
xchg
shrl
mov
mov
rcr
popa
enter
cmc
mov
mov
inc
loop
xor
ljmp
sbbb
cmpsl
idivl
and
pop
loope,pt
filds
push
mov
insb
shrl
daa
jae
or
loop
fcmovu
or
ret
js
into
or
les
pop
jno
hlt
cmp
sub
jnp
daa
add
and
push
pop
xchg
ss
cld
jno
ljmp
sub
sbb
push
std
popf
mov
and
cmp
sub
ljmp
mov
fidivrs
mov
shlb
imul
loopne
lods
test
shl
jmp
adc
rclb
outsl
mov
std
mov
aas
push
cmpsl
xor
xchg
sbb
nop
lcall
out
sub
fidivs
xor
dec
pop
mov
out
loopne
dec
lret
fcoml
adc
test
shl
push
lahf
cmp
adc
clc
cmp
cmp
nop
add
jbe
sub
xchg
adc
sub
repnz
iret
aam
push
sub
inc
xchg
xor
aad
jmp
out
btr
and
pop
dec
push
ret
fimuls
daa
xor
andb
lea
cmp
cmove
lods
jne
mov
mov
pop
pop
int
loop
out
or
lcall
dec
mov
lcall
mov
inc
je
aad
je
popa
outsb
dec
lcall
push
daa
adc
mov
loope
mov
and
mov
rcll
clc
cmpsb
sbb
inc
inc
std
aam
aas
mov
fimull
or
pushf
ficompl
xor
fildll
imul
lods
rorl
fldl2t
scas
iret
mov
stos
xor
dec
aas
xchg
rolb
dec
jecxz
jge
dec
xchg
lahf
incb
pop
pop
push
pushl
cs
jo
mulb
das
js
sbb
push
fsubr
xchg
insb
mov
sub
cmpsb
jb
xchg
outsb
cltd
inc
mov
pop
cmpsb
and
stc
imul
sub
mov
or
inc
jp
mov
xor
push
fimuls
add
negb
hlt
iret
jb
mov
bound
test
xchg
sbb
or
js
mov
icebp
clc
mov
jno
lods
outsb
xor
fistpll
jbe
fwait
cwtl
cld
stos
add
xchg
dec
mov
in
inc
pop
es
push
sti
pop
pop
xor
push
pop
inc
cmp
mov
rol
mov
andb
in
dec
lea
push
fmul
arpl
inc
mov
mov
dec
add
sub
iret
jge
sbbb
cwtl
jne
imul
stos
cld
jl
and
pop
daa
out
add
xorps
and
imul
inc
add
cld
iret
jno
enter
subb
push
sub
inc
int3
push
sub
sub
nop
mov
mov
sub
lahf
stos
jge
repnz
xlat
dec
lahf
mov
cmp
cs
pop
stos
roll
daa
sarl
lods
lock
fsubl
xchg
mov
fdiv
pop
push
fwait
sarb
inc
fcompl
pushf
or
outsl
dec
fisubrl
jae
add
add
in
xchg
mov
nop
daa
lea
rcrl
scas
insb
dec
sub
fisubl
hlt
sub
adc
dec
jne
xchg
pop
sarb
jae
mov
jb
leave
inc
mov
adc
aad
inc
xchg
fs
out
xor
and
ds
lcall
mov
jmp
lock
push
mov
jmp
sub
popf
adc
clc
ret
fisubrl
scas
sbb
ds
testl
sub
cli
movsb
xor
lret
jae
js
loopne
addr16
jle
mov
aam
hlt
rcll
dec
pop
and
mov
in
cmpsl
push
nop
cltd
mov
inc
mov
cmp
mov
cmp
notw
bound
scas
sahf
cmpsl
test
xor
lea
pop
xchg
pop
orb
xchg
cmp
testl
cwtl
dec
cmp
or
pushf
hlt
push
pop
int3
add
pop
mov
in
out
sar
pop
sub
xor
push
insl
mov
adc
insb
dec
sbb
pop
xlat
push
jae
mov
imul
pop
mov
mov
sbb
xor
addr16
sbb
or
add
pop
aas
aam
cmp
in
push
inc
adc
aaa
lret
pop
xor
inc
jle
push
repnz
or
inc
mov
mov
pop
repz
pop
das
sti
loopne
pop
aas
into
out
xlat
cs
push
ret
sbb
and
cld
movsl
ds
or
jbe
xchg
sub
push
call
xor
push
ds
pop
test
lods
cmp
inc
out
xchg
adc
xchg
and
out
add
mov
stos
out
std
jg
inc
sub
js
sub
fildll
or
icebp
in
lds
push
lret
xor
push
inc
and
fldl2t
iret
out
daa
sbb
push
push
or
dec
out
loopne
mov
daa
mov
shll
movsb
adc
ficoms
cs
fwait
jnp,pn
adc
insl
sbb
sbb
cli
or
rolb
xchg
ljmp
aaa
cmc
aas
jp
mov
in
lcall
pop
xchg
fmulp
loop
mov
cmp
mov
mov
cmp
xor
jmp
xchg
xlat
test
shr
addr16
shll
mov
push
pushf
mov
mov
sahf
xchg
imul
cmpsl
add
push
in
loop
mov
jo
fs
jns
pop
pop
mov
flds
sub
mov
repnz
inc
cltd
inc
jmp
adc
popa
loope
and
inc
lcall
loope
into
out
js
jecxz
stos
inc
outsl
sarl
mov
dec
xchg
sahf
lods
inc
adc
fstps
xchg
lret
jl
mov
call
and
mov
ss
cmp
dec
negl
movsb
adc
cwtl
or
sbb
arpl
arpl
pop
arpl
adc
xchg
jmp
pmovmskb
std
push
cmpsl
inc
pop
imul
lret
mov
jns
lret
cmpl
dec
fdivp
cmp
pushf
rcl
xor
lcall
movsb
fucom
sbb
push
inc
inc
gs
cs
dec
cmp
enter
je
dec
jns
or
inc
sahf
rcll
outsb
rcr
xor
insl
lahf
insb
add
lret
or
jmp
dec
mov
inc
aam
loopne
cmpsb
add
jl
into
cld
pop
movsb
mov
rcr
mov
mov
sub
stos
mov
sbb
xor
add
sub
push
lret
shll
jb
dec
adc
loope
sbb
dec
addr16
or
aas
shl
jmp
and
push
add
jl
mov
cmp
or
and
cmpsb
stos
xchg
test
loopne
cmc
pushf
arpl
leave
dec
cmp
mov
and
pusha
loop
repz
dec
pushf
or
adc
movsb
xchg
and
dec
addb
loopne
decl
es
insb
sbb
scas
movsb
push
daa
aas
push
add
ja
pop
or
addr16
sti
cmp
jb
xchg
push
aad
add
mov
addr16
cmp
test
push
fadds
lods
push
sbb
xor
xor
mov
loop
fs
or
push
jo
je
enter
cmp
inc
les
inc
cmp
leave
call
fadds
setp
sbb
jg
push
sub
andl
enter
shll
push
jne
add
push
mov
mov
fdivrs
enter
xor
lret
mov
adc
test
xor
adc
loope
leave
dec
popa
cmp
rol
jbe
cmc
iret
or
jg
decb
fs
inc
inc
out
xchg
repz
scas
out
xchg
sahf
jle
jl
pop
pop
int
dec
sbb
gs
ss
lret
push
pop
nop
js
jle
jp
mov
std
pusha
test
ffreep
pop
pushf
sub
mov
sub
int3
dec
rol
adc
fwait
jge
lahf
adc
ret
out
add
test
sbb
mov
loop
scas
and
mov
inc
cs
test
aad
out
mov
xor
inc
or
fcomi
jae
scas
lahf
and
lret
cli
sti
lahf
ror
in
or
cwtl
dec
jge
adc
addr16
repnz
out
in
and
test
and
dec
cwtl
gs
mov
cmc
or
dec
sahf
xchg
mov
mov
adc
incl
imul
mov
pop
lods
xchg
jns
out
mov
cwtl
test
sub
testb
imul
fs
stos
inc
popa
xchg
jno
mov
dec
pop
xchg
jo
sahf
and
fidivl
repz
ljmp
mov
insl
testb
and
dec
xchg
mov
data16
es
jmp
rclb
push
aaa
push
inc
enter
xchg
cmp
adc
mov
daa
and
int
aaa
andl
lds
cmp
in
in
enter
inc
cmpsl
imul
fst
sbb
add
adc
rclb
test
loope
lret
pop
ds
cmc
or
mov
cmp
iret
popa
mov
sbb
nop
data16
cmpb
xor
xchg
popf
pop
and
rcl
ss
push
popf
or
sub
jo
out
shll
xor
cmpsl
adc
or
pop
adc
ret
repnz
push
ljmp
jno
adc
hlt
scas
out
add
lret
bnd
adcb
gs
sbb
push
pushw
push
pop
cs
mov
push
icebp
in
sbb
out
fstpl
or
repz
mov
test
jns
aad
or
jae
mov
fisubrl
xor
rcrb
loopne
push
pop
lods
cmp
popf
cmpsl
cwtl
jecxz
imul
and
sub
sub
sub
loopne
aaa
add
jo
add
cmp
pop
test
ds
popf
aam
xor
adc
test
xor
or
mov
adc
mov
sub
or
ffree
jle
pop
in
rorl
rorb
jl
xor
les
pusha
outsb
aam
insb
or
ljmp
js
push
jmp
ret
jecxz
adc
fwait
push
add
mov
pop
mov
jg
scas
shl
xor
dec
add
cmc
or
mov
mov
jae
cwtl
jl
jp
inc
aaa
jae
pop
cli
xchg
and
bound
jbe
push
lret
je
mov
ret
inc
cmp
out
fistpll
mov
scas
add
sbb
outsl
sti
stc
xchg
xchg
add
jg
or
dec
push
pop
rcrb
lahf
pop
xchg
sbb
inc
push
dec
dec
out
test
jns
lods
jp
sbb
outsl
xchg
pop
adc
cli
loop
nop
cmp
int
xchg
xlat
lods
imul
lock
adc
or
pop
xor
cmp
cmp
lods
jb
cmc
mov
mov
sbb
add
ljmp
xchg
pushf
push
push
pushf
mov
call
push
mov
std
jnp
jns
pop
adc
call
aaa
dec
les
and
mov
imul
ja
mov
adc
jmp
inc
sub
or
pop
test
inc
jb
lcall
aas
sahf
mov
mov
jp
call
movsl
fiaddl
sub
ror
push
jl
and
pop
sti
stos
mov
cmp
add
cmp
int
push
movsl
addr16
mov
outsl
push
push
inc
rorb
in
call
pop
push
and
xor
jbe
dec
ds
dec
push
es
loop
fsubl
push
and
ret
dec
cmp
fdivl
jecxz
out
inc
lret
mov
pop
xor
pusha
sub
sub
sbbl
pop
mulb
dec
lods
shll
push
or
nop
adc
jbe
fldt
push
mov
sub
sbb
pop
or
mov
iret
aam
out
xchg
fwait
or
add
xor
mov
stos
mov
clc
mov
sti
add
std
imul
push
or
js
fsts
out
addl
inc
shrb
sbb
mov
scas
cwtl
pop
and
pop
mov
jo
dec
jo
inc
pop
sub
bound
xchg
out
movsl
mov
jo
inc
cmp
mov
push
push
xchg
shlb
push
inc
fidivrs
ret
push
in
adc
sub
add
push
xor
inc
sti
or
and
orb
or
jns
je
adc
nop
leave
dec
dec
out
adc
inc
fmulp
sub
pop
mov
dec
cs
mov
ja
dec
inc
mov
jo
pop
cmp
push
in
scas
lret
sub
imul
pusha
mov
jecxz
push
movsb
push
je
test
scas
aam
imull
mov
mov
pop
jmp
mov
jmp
shlb
add
aam
sub
daa
daa
or
cli
mov
out
insb
aaa
rcrl
lahf
push
fdivs
fiaddl
lods
aad
ljmp
lock
xor
mov
sbb
into
pop
les
mov
mov
xorl
subl
mov
fwait
jo
sbb
mov
inc
push
negb
ficomps
pop
int
lds
rol
mov
in
push
fiaddl
repz
inc
imul
dec
stos
ljmp
jmp
cmp
inc
adc
mov
cmpsb
mov
cli
shrb
mov
inc
sbbb
je
sbb
xchg
gs
mov
sbb
dec
sahf
cs
mov
into
shrb
inc
adc
iret
mov
int
mov
or
cmpsb
out
xchg
das
aaa
xor
sub
mov
mov
idivb
mov
mov
and
mov
xchg
or
jo
je
stos
mov
fsubrl
arpl
xchg
lret
sbb
push
cmp
pop
pop
jp
pusha
pop
lcall
inc
inc
xlat
xchg
outsl
pop
push
lods
or
or
loope
or
in
push
xor
incl
cmpsl
addr16
ja
cltd
sbb
enter
mov
fwait
mov
lods
push
push
stos
xor
mov
xor
inc
sbb
subl
jle
ljmp
inc
mov
xchg
and
int3
ljmp
incw
daa
es
sub
scas
ret
dec
shrl
leave
prefetch
xchg
adc
cmp
sbb
ret
aad
sub
mov
mov
inc
adcl
pop
cmpsl
push
jo
lret
sub
jp
or
sar
and
loope
test
mov
leave
mov
inc
loop
push
inc
ljmp
jb
cmpsb
out
sub
cld
push
rcll
dec
mov
push
divb
jp
xor
out
mov
gs
or
mov
dec
xor
sub
test
iret
mov
addl
outsl
fistpll
mov
dec
int3
jo
push
adc
inc
mov
sbb
or
mov
sub
jbe
push
test
sub
add
push
cmp
lods
xor
and
adc
jbe
inc
xchg
jle
mov
loop
pop
cmp
fisubrs
dec
mov
testb
sbb
fwait
lods
or
xchg
dec
bound
adc
inc
js
mov
xchg
adc
lcall
cs
ret
pop
adc
dec
jp
push
notb
adc
xchg
cmpsb
dec
arpl
clc
repnz
jge
shrl
out
pop
je
add
cmp
dec
scas
icebp
dec
mov
lds
xchg
jle
sub
adc
add
mov
cmp
mov
clc
std
sti
cmc
int
repz
mov
jbe
jp
ficoml
lock
imul
cltd
loop
mov
hlt
pop
fidivrs
inc
dec
mov
loopne
xchg
rep
adc
ret
icebp
mov
insl
fsts
mov
mov
in
xor
and
jle
jnp
pop
es
or
inc
adc
jp
push
jmp
fs
cmc
pop
sti
aas
in
mov
jecxz
out
push
push
stos
pop
inc
cltd
leave
cld
rclb
push
lea
stos
add
mov
xchg
mov
pop
rolb
adc
das
pop
scas
clc
iret
jmp
add
push
inc
stos
push
mov
mov
hlt
out
adc
cwtl
jp
repz
mov
sahf
rep
lods
cmp
adc
push
aaa
dec
arpl
std
lods
and
mov
test
mov
outsl
cld
add
cmpsb
mov
mov
sbb
fidivl
sahf
and
mov
or
dec
push
out
push
inc
sti
mov
jno
jbe
xor
or
shlb
popa
cmp
mov
adc
lret
lret
and
or
and
fbld
test
or
cwtl
repz
cs
imul
jecxz
icebp
bound
cmp
cld
loope
add
sbb
das
das
inc
mov
add
or
test
and
sti
push
loope
imul
clc
fcmovnb
jo
sub
nop
pop
mov
dec
xchg
mov
test
int3
mov
adc
sbbl
fisubrl
test
bound
adc
and
xor
pop
mov
and
pusha
add
mov
inc
test
push
mov
js
push
fdivs
adc
sbb
pop
dec
in
jne
cmpsl
out
mov
xchg
jg
outsl
mov
jno
negl
rcrl
dec
pop
jg
sub
mov
dec
pop
add
out
dec
in
mov
adc
mov
jmp
dec
jecxz
xchg
testb
hlt
sub
sub
stos
lea
lods
add
decl
and
popa
insb
sub
lcall
xor
mov
mov
add
aad
mov
cmp
fwait
in
cmp
popf
lea
or
mov
out
sbb
fucomip
push
add
cwtl
jne
test
pop
lahf
imul
jecxz
or
inc
cmp
jecxz
stos
cmp
nop
dec
sub
mov
mov
enter
adc
lahf
sub
sub
dec
dec
adc
fiaddl
lods
enter
popa
inc
cld
enter
fdivp
rorl
sbb
scas
fwait
push
jmp
sbb
sub
push
lret
out
cmc
gs
inc
popa
lock
test
addr16
rorl
xorb
fwait
pop
mov
push
inc
and
mov
fdivp
imul
lret
xchg
jnp
popf
scas
leave
add
cmpsb
sbb
test
in
xlat
and
inc
cmp
or
xchg
adc
cli
mov
adc
sub
push
aad
mov
lea
adcl
mov
jmp
popf
lret
push
mov
scas
inc
data16
jae
pop
dec
push
bound
icebp
jmp
daa
push
xor
lods
jmp
pop
lahf
sub
dec
fildll
or
cmp
ffree
inc
jae
xor
bswap
inc
dec
in
je
aaa
ret
popf
mov
xor
lea
in
push
cmpsb
or
dec
cmpsb
push
push
das
lods
adc
mov
gs
and
cli
pop
pop
add
sub
pop
insl
pushf
pop
push
push
imul
dec
sub
xchg
std
inc
icebp
repnz
push
or
popa
insl
dec
mov
inc
push
xchg
shll
iret
popa
add
push
mov
cmp
stc
dec
jbe
fwait
jns
or
loop
pop
insl
lcall
repz
inc
aas
sub
pop
push
outsb
add
repnz
and
push
inc
add
mov
test
push
sub
pop
aad
cmp
shlb
test
aad
or
inc
enter
inc
jl
arpl
loopne
insl
cs
pushf
pop
out
mov
addl
flds
jae
push
adc
movsl
mov
xchg
adc
cmpsl
jb
cmp
lcall
lock
pusha
xor
xor
lods
lea
adc
leave
icebp
xchg
inc
inc
cmp
repz
or
mov
cmpl
and
mov
push
out
and
and
sbb
xchg
fidivrl
scas
mov
div
pushf
xchg
cltd
cwtl
dec
repnz
jnp
jbe
mov
hlt
xchg
loope
aaa
jae
xor
dec
sub
fistl
sbb
in
jle
xchg
int3
push
scas
push
inc
mov
xchg
cmc
icebp
pop
sbb
mov
fst
mov
loope
mov
testl
mov
jl
or
mov
mov
xchg
xchg
imul
dec
mov
out
pop
xchg
or
lcall
dec
sbb
lret
les
mov
pop
or
mov
das
loop
dec
cmp
int3
stos
mov
sbb
mov
inc
jbe
idivb
mov
jbe
in
dec
insl
aam
insb
das
mov
mov
jge
addl
mov
popf
push
push
outsb
jle
sbb
jmp
xor
jnp
clc
fdivrl
lods
mov
fldl
lcall
add
iret
push
je
xor
sub
fcoms
nop
cmp
out
mov
aad
xchg
test
out
pushf
mov
dec
imull
xchg
mov
xor
mov
or
and
sub
mov
lahf
arpl
dec
aaa
mov
int
enter
fsubs
jbe
dec
adc
fbstp
adc
push
xchg
ffreep
aaa
ds
mov
pop
cltd
scas
pop
jecxz
fnstenv
jge
std
mov
sub
push
and
push
pop
inc
lcall
lcall
push
push
cwtl
mov
scas
push
lahf
push
fbld
add
cmpsl
push
popf
test
xor
daa
inc
xor
push
in
push
xor
adc
or
cli
mov
mov
jae
fwait
sbb
stc
pop
pop
sbb
dec
ficompl
cmpl
outsl
sbb
arpl
frstor
mov
mov
dec
cli
js
ja
loope
stc
aad
xor
rolb
push
pop
or
mov
inc
jmp
jg
js
ret
ljmp
xchg
inc
lret
xchg
in
adc
or
loopne
xchg
mov
mov
loopne
inc
push
dec
xor
xchg
jbe
jae
pop
xchg
testb
jno
leave
jnp
xchg
dec
inc
inc
into
push
test
andl
iret
sub
adc
and
rorb
adc
in
aas
testb
push
jp
fmulp
gs
mov
pusha
rcll
fstpl
cs
outsl
adc
sbb
inc
andl
mov
fchs
sub
data16
mov
jb
dec
in
addb
and
stos
mov
sub
sbb
int3
fdivp
mov
inc
aam
sti
out
inc
add
call
pop
sub
xlat
nop
lahf
iret
mov
cli
outsl
pushl
xor
mov
mov
xchg
inc
ljmp
test
fistpll
in
shll
and
pop
or
sti
add
mov
es
popl
rclb
bound
test
cld
inc
adc
test
pop
jnp
movsl
fsubp
insl
dec
in
fldt
es
push
sub
mov
bound
and
mov
add
adc
xor
aaa
cmpsb
arpl
jno
ss
pop
inc
adc
andb
push
sbb
push
mov
out
xor
scas
cmp
pop
add
je
bound
jo
push
ds
cmovge
repnz
test
pmulhuw
push
and
dec
jne
iret
dec
and
mov
sahf
movsb
fcoml
adc
incl
lahf
adc
cwtl
lahf
pop
push
cmpsl
mov
cs
rcr
dec
xchg
lds
gs
mov
nop
stc
jge
adc
in
inc
ss
adc
xor
popa
fstpt
imul
leave
mov
dec
inc
xor
mov
mov
jecxz
pop
loope
clc
cmp
jae
xchg
adc
rorb
dec
xor
pop
push
or
inc
push
out
or
push
xchg
and
packssdw
mov
adc
mov
jnp
cli
mov
fdiv
inc
adc
adc
rclb
out
loop
jmp
jecxz
inc
dec
repz
or
addr16
mov
dec
inc
adc
xchg
shrb
push
cmp
xor
neg
insl
jae
or
call
dec
pushf
int3
pop
cmc
mov
and
mov
lcall
push
inc
push
adc
call
lods
ret
cltd
out
out
cli
jb
jle
mov
cli
pop
push
xchg
addr16
inc
sbb
je
aam
inc
pop
push
xchg
arpl
jne
mov
clc
ljmp
mov
mov
jbe
push
mov
push
xor
imul
ss
mov
dec
cwtl
lcall
aaa
les
jo
stos
out
out
jne
fistpl
addr16
or
dec
inc
jne
jns
je
cltd
lea
dec
mov
daa
xlat
je
out
mov
je
mov
or
sub
or
mov
and
xchg
jge
xor
jmp
subb
shlb
and
mov
adc
movb
dec
insl
mov
lock
filds
fsubr
sbb
and
movsb
xchg
je
jp
jmp
cmc
pop
push
pop
jge
popa
comiss
adc
outsl
lea
push
cmp
je
jg
divb
fisubl
scas
jb
mov
enter
rcr
decl
cli
call
insl
cmc
push
cmp
in
jo
pop
xor
mov
int
mov
add
mov
and
arpl
inc
dec
cmpb
xor
mov
inc
cs
push
mov
inc
ficoms
jecxz
sbb
adc
add
push
lahf
and
fbld
jg
int
dec
mov
ja
pop
xor
push
testb
pop
fdivrl
cwtl
pop
lds
inc
cmp
inc
inc
pop
dec
sbb
xor
inc
sub
pop
push
fisubrs
es
add
arpl
dec
or
into
aad
mov
lods
lret
das
je
stc
mov
mov
mov
sahf
xor
jns
fdivr
lods
and
push
pop
mov
das
insb
xchg
std
iret
nop
add
dec
mov
xor
je
sub
cmc
cld
xor
xor
ficoms
xchg
and
push
dec
cmp
mov
xor
shlb
lret
lcall
pop
jl
mov
hlt
and
insb
sbb
sbbl
pcmpeqw
mov
cmp
and
xchg
gs
push
aad
cmp
push
stc
jb
mov
mov
pop
data16
lret
cmp
insl
xchg
cmp
lcall
mov
and
cs
dec
pop
arpl
movsl
or
pop
lret
out
sub
mov
out
sbb
pushf
dec
mov
jge
out
xor
mov
push
mov
test
insb
xchg
aad
fcmovb
jb
loopne
mov
dec
add
es
repz
loopne
push
pop
hlt
push
adc
xchg
lcall
xor
or
jle
cltd
jae
jecxz
or
sahf
jl
es
jp
repnz
shrb
mov
mov
popa
stos
outsl
decl
jl
mov
lods
popa
sub
int
int
cld
in
out
jle
inc
mov
rorb
cli
into
cmc
xchg
dec
ljmp
mov
sbbl
fldt
and
int3
out
sub
sar
insb
enter
out
and
mov
stc
push
mov
sub
fwait
arpl
add
mov
sbb
fwait
aas
popl
ss
fwait
in
enter
inc
inc
push
incl
push
xor
shll
sub
inc
mov
jno
pop
std
int
jmp
lret
outsb
sub
mov
inc
insl
orb
sub
inc
xor
ficompl
test
push
sbb
sarb
popa
repnz
mov
pusha
imul
jae
pop
jmp
test
jo
iret
mov
idivb
xor
cmc
cli
push
insl
call
repz
mov
mov
icebp
mov
lock
je
cmp
decl
gs
fidivl
mov
xor
jns
movsb
lods
shll
lret
shrb
fwait
les
scas
xlat
out
std
sar
mov
cmc
jb
notb
das
lahf
pop
push
fs
je
mov
movsl
cwtl
mul
mov
out
xor
fdecstp
mov
jno
inc
lahf
pop
mov
sbb
inc
mov
imul
rdtsc
or
outsb
mov
mov
cld
push
and
cmp
mov
test
xchg
xor
ss
dec
dec
andl
xchg
sarl
imul
and
sahf
lahf
inc
aaa
aaa
mov
pusha
jno
dec
rcrb
lock
mov
jns
and
popf
mov
into
test
sahf
xorl
daa
xchg
jecxz
cs
imul
aas
inc
repz
mov
test
mov
push
fidivl
xchg
imul
xor
fwait
jl
ret
or
ja
pop
jbe
push
repnz
dec
sub
rorl
bound
xchg
xor
cmp
lds
dec
movsl
cmc
jecxz
movsl
loope
cmp
imulb
pop
push
mov
fimuls
cmp
fadds
cltd
orl
aas
cmc
mov
push
add
mov
inc
jecxz
pop
xchg
clc
and
and
lds
outsl
mov
inc
push
js
xor
rorl
pushf
repz
add
into
xchg
xchg
aam
test
pop
jne
shll
xchg
mov
test
in
test
pop
push
shrb
js
imul
mov
xlat
fdivl
add
dec
or
cmpsl
stos
neg
jp
repz
aaa
mov
pop
jmp
mov
mov
push
ret
or
and
mov
mov
sub
rcr
xchg
addl
jl
stc
fs
in
icebp
ljmp
inc
mov
push
mov
mov
out
fcomps
insl
js
or
lds
mov
insb
sarl
leave
mov
sbb
icebp
les
aam
movsb
inc
xchg
mov
fwait
and
test
pushf
fildl
dec
cmp
fiadds
sbbb
xchg
mov
mov
lret
int3
ficompl
outsl
xchg
adc
jmp
insb
stos
ja
ljmp
xchg
in
cwtl
jg
loop
std
push
cmp
in
push
pop
mov
es
idiv
not
mov
pusha
cmpsl
and
lock
jge
push
data16
jmp
xor
and
xor
ds
adc
dec
cmp
push
cmpl
insb
test
iret
gs
outsb
dec
add
fdivrs
test
cltd
jne
xor
add
push
int
mov
push
imul
mov
sbb
cmc
scas
sti
sub
mov
loop
jg
sahf
in
mov
and
add
and
adcb
and
pop
xchg
js
or
in
dec
pusha
cmp
daa
fsubr
sbb
lahf
ret
out
cmpsl
cmp
js
xor
cmp
inc
dec
mov
cmpl
sahf
imul
or
mov
int
ljmp
sbb
add
mov
mov
sahf
xor
shll
inc
mov
xchg
lods
sti
sub
in
pop
dec
jno
arpl
cmp
mov
repnz
jo
add
outsl
inc
out
nop
icebp
mov
lcall
mov
xchg
iret
push
or
mov
push
and
xchg
pop
sti
lret
adc
xor
das
int
cmc
cmpsb
test
test
xchg
sbb
popa
jno
push
stos
fdivs
mov
pop
movsb
in
out
daa
stos
sub
adc
adc
out
ror
or
lahf
pop
jo
iret
push
gs
push
shrb
outsb
lods
fnstenv
repnz
insb
adc
xchg
inc
rorl
sub
jp
mov
lock
or
and
sub
movsl
cs
lea
sbb
push
clc
jmp
outsb
sub
adc
xchg
insb
mov
dec
testb
lock
or
mov
push
loop
cmpsb
sbb
sub
insl
mov
outsl
jl
popf
cmp
sbb
cmp
push
jbe
insb
mov
popf
adc
xchg
jle
adc
push
loopne
es
xlat
ja
pop
in
jb
pop
lahf
xor
cmc
les
inc
inc
mov
mov
fimuls
jne
ds
gs
mov
pop
movsb
jg
push
fisubl
pop
ljmp
test
dec
scas
inc
sub
sbbb
xor
add
movsl
mov
int3
push
cmp
in
ljmp
popa
xor
lods
push
jle
repz
jb
push
or
xchg
ret
inc
adc
adc
cmc
scas
dec
fstps
pop
out
gs
test
outsb
das
pushf
or
xor
sbb
cmp
pop
push
and
dec
xor
dec
and
mov
jno
les
jae
adc
fs
aas
or
imul
xchg
filds
jl
ds
jg
dec
stos
xlat
fistpl
icebp
xchg
loopne
fs
cwtl
mov
inc
or
jne
dec
roll
fwait
push
jo
xor
cli
dec
rcl
popf
mov
cli
sbb
inc
lret
out
jbe
mov
dec
mov
and
or
fwait
jle
jae
pop
mov
pop
adc
mov
mulb
dec
repnz
mov
shrb
jbe
aas
stc
ret
sbbb
ja
mov
test
push
int
adc
pop
popf
mov
jns
add
sti
push
xor
dec
hlt
xor
cmpsb
inc
xchg
push
cs
cwtl
pop
pop
jp
push
sarl
or
stos
add
vpacksswb
push
dec
call
lret
push
mov
dec
adc
movb
inc
xchg
mov
mov
ret
or
out
pusha
cmpsl
cli
push
in
cmp
cli
lcall
mov
cmpsb
ljmp
ds
dec
ficoms
pop
nop
fdivp
inc
in
cmp
pop
inc
push
dec
cltd
adc
cmp
in
sbb
or
leave
fcmovne
pushf
add
push
mov
cmpsb
dec
push
fsub
sbb
fcoml
xchg
pusha
push
cmp
jmp
push
jbe
int
ret
xchg
dec
jle
int3
je
imul
pop
repnz
mov
test
xlat
les
int3
push
xchg
adc
imul
popl
pop
dec
jbe
pushf
mov
in
idivl
aad
jb
loope
xor
dec
movb
xchg
dec
fmull
addl
ja
fdivrl
xchg
fstp
cmp
xor
enter
cmpsl
cmp
cmp
mov
xor
outsb
and
and
es
sbbb
lock
shlb
add
mov
repnz
fcoms
and
inc
push
fidivs
jmp
xlat
arpl
cmp
in
gs
repz
mov
call
mov
es
gs
dec
bound
cmp
or
cli
sar
icebp
xchg
cmp
pusha
ret
ljmp
and
push
xchg
aas
jmp
sbb
ljmp
dec
xor
int
ss
mov
xor
int3
loop
pusha
xor
cmp
testl
shr
lock
ljmp
and
lds
iret
popf
cmc
cltd
popf
xchg
push
jae
inc
sub
aaa
mov
addr16
jl
cmpsl
dec
mov
dec
jl
lcall
fmuls
std
test
jl
sub
jnp
stos
push
fldcw
jbe
mov
das
leave
jmp
or
mov
aas
push
dec
or
repnz
pop
mov
scas
mov
and
jae
sub
les
outsb
and
test
push
es
in
outsl
dec
add
mov
jno
ret
gs
loope
jb
std
xchg
sahf
outsb
rcrb
fmull
sub
js
aaa
xor
fcoml
mov
xchg
pushf
jl
jmp
ds
push
push
jae
nop
out
vstmxcsr
subb
andb
mov
in
jl
je
mov
jno
xor
aad
push
pop
jmp
push
jle
das
fisubs
sbb
and
mov
jl
pop
lock
test
shlb
fcmovne
xchg
lock
out
subb
stos
mov
and
add
jl
mov
scas
xor
roll
and
xchg
mov
inc
mov
jle
jno
adc
ja
ret
cmp
into
sarl
js
scas
lahf
mov
sbb
push
mov
jb
loopne
rorb
mov
and
pop
mov
aaa
pop
ss
pop
jecxz
data16
mov
sub
xor
mov
push
mov
xorl
push
test
enter
in
add
mov
popl
stc
rcrl
incb
xchg
mov
pop
lock
sti
sbb
pusha
insb
dec
int3
aam
mov
sbb
mov
cmp
lods
outsb
jp
and
jl
inc
les
fwait
psubb
jno
sbbb
xor
xor
jmp
push
push
jnp
xchg
mov
cld
cmp
stc
sbb
adc
loop
xor
inc
xor
adcb
cmp
dec
adc
dec
pop
mov
mov
inc
aam
insb
negl
xor
sarb
je
enter
adc
push
pushf
test
mov
ja
repnz
iret
fdivrs
inc
dec
ret
cmp
fildl
lds
cvttps2pi
push
fsubs
sbb
lahf
dec
lea
cwtl
lret
xchg
fwait
popa
stos
push
push
inc
push
leave
fs
jl
sub
mov
pop
dec
pop
enter
sbb
icebp
cli
pop
push
or
cmp
aad
ss
ja
xor
sub
into
cmc
test
in
lea
push
test
mov
inc
rcll
inc
fstps
dec
and
xchg
adc
sbb
jno
ljmp
inc
pop
out
mov
xchg
dec
jmp
push
sub
or
sbb
xchg
imul
pop
outsb
push
and
leave
out
or
push
fwait
aam
movsl
mov
inc
nop
fistpl
pushf
cli
dec
push
push
xor
mov
cltd
pop
lret
xor
jp
mov
sub
int3
xchg
ljmp
mov
aas
int3
push
in
and
push
popa
push
and
imul
cmp
mov
mov
jne
in
lret
test
add
mov
pop
xor
mov
mov
xchg
cmpsl
es
xor
lahf
mov
pop
add
add
cld
sub
fs
xchg
or
pop
pop
aam
das
cmpl
cltd
ljmp
push
aad
mov
fadd
xchg
scas
sahf
xchg
ja
addr16
std
gs
or
leave
js
outsb
and
dec
lock
fwait
out
xchg
cmp
mov
in
movsl
out
aam
jns
mov
sti
sbb
push
push
or
mov
cmc
mov
std
lock
fwait
sbbb
insl
les
fiaddl
xchg
clc
dec
test
jbe
imul
pop
out
lret
adc
popa
scas
push
shlb
push
or
js
inc
push
mov
in
push
popf
jns
jle
outsb
out
pop
int
test
dec
and
loopne
dec
mov
es
push
punpckldq
sbb
rorl
jb
mov
pop
xchg
and
mov
imul
movsb
jae
pop
divb
jns
imul
mov
add
pop
shrl
mov
add
cmp
mov
ret
dec
outsb
jo
aas
imul
sbb
fstl
into
dec
mov
sub
cmp
xor
cli
inc
loop
andb
pop
inc
add
fucomp
or
inc
cmp
movsl
roll
xchg
daa
and
mov
outsl
mov
dec
orl
mov
xlat
mov
cs
or
imul
push
fimull
in
and
mov
sub
xor
mov
fcmovnu
mov
aam
dec
mov
cmpsb
mov
add
sub
aaa
sahf
lea
and
lret
lcall
lahf
imul
cli
inc
sub
scas
cmp
fisubrl
lret
adc
jp
xchg
cmp
es
xor
and
push
dec
push
xorb
lds
and
or
inc
mov
xchg
nop
mov
addb
fistpll
movsl
push
mov
jne
cmp
outsl
mov
mov
repz
cltd
setns
test
xchg
pop
inc
mov
inc
xchg
sbb
fmull
arpl
push
or
sbb
mov
in
dec
nop
or
test
pop
lods
push
shrb
sub
pop
imul
fucom
sti
popf
add
jge
cmp
lcall
sbb
push
push
sbb
jae
mov
lret
mov
and
adc
push
imul
xor
call
sgdtl
es
push
rcrl
xor
pop
jno
mov
fcoms
inc
inc
andb
add
icebp
ljmp
pop
out
xchg
jnp
test
xor
aaa
xorb
pop
mov
pop
test
hlt
sub
sbb
fwait
scas
jp
xchg
aaa
xchg
xor
pop
lret
mov
int
mov
ret
loope
dec
das
add
aam
popa
jbe
pop
call
or
js
nop
pushf
and
push
out
cs
testb
add
scas
inc
jnp
in
cmpsb
add
sub
out
enter
cwtl
fsubrl
cmpsb
and
or
jne
sbb
in
and
fsubs
test
push
inc
sub
in
fildll
lock
push
or
inc
inc
dec
pop
fidivs
and
addr16
jge
call
mov
inc
mov
scas
and
mov
pop
repnz
aas
out
pop
or
cmp
adc
pop
insb
lcall
mov
jecxz
out
jae
lock
movsl
sahf
fsubrl
ja
jbe
fcomp
push
or
es
xor
xchg
mov
jo
xor
jne
movsb
sub
jle
push
es
movsb
imul
and
repz
cmp
aad
imul
idivb
outsl
xor
adc
push
js
dec
cltd
add
pop
cmp
test
push
mov
jge
bound
pop
push
shr
mov
lret
outsl
mov
inc
sbb
mov
repnz
mov
xor
sbb
fwait
cs
mov
sbb
int
std
in
aas
xchg
adc
mov
icebp
pop
jl
outsb
bnd
jns
dec
jl
leave
push
push
or
test
sbb
cmp
fdiv
fstps
inc
add
fldenv
mov
mov
ffreep
adcb
xchg
fistl
imul
sbb
inc
insl
pop
pop
imul
jl
loop
jg
and
inc
dec
movsb
movsl
stc
and
mov
xchg
jo
icebp
pop
cmp
movsb
sbb
cmpsl
dec
hlt
and
ss
imul
xor
jns
adc
jmp
add
cmpsb
xchg
jl
lock
and
sbb
ret
out
sub
lods
jge
movsb
es
push
ja
popf
imul
dec
scas
mov
sbb
es
sub
call
rcr
xlat
pop
cmp
loopne
pusha
je
ret
jp
dec
push
mov
jns
jo
mov
and
adc
ret
cs
fsubp
mov
jg
jmp
ds
in
and
sbb
jp
ror
pop
lcall
xchg
adc
dec
mov
add
sarl
mov
loop
jnp
xchg
inc
mov
or
movsb
lds
mull
call
cmp
dec
jne
dec
push
xor
pop
mov
xchg
fidivrs
out
mov
cli
gs
mov
shl
sti
jmp
aaa
cmpsl
push
std
test
mov
xchg
std
lahf
les
loope
pop
insb
es
inc
push
or
push
sbb
jmp
lods
ret
mov
add
nop
leave
das
int
dec
stc
jmp
sub
les
and
inc
pop
pop
cltd
fisttpl
mov
iret
stos
fstpl
pop
sub
out
outsb
pushf
dec
mov
andb
xor
pop
sbb
jb
int3
fsubl
dec
pop
push
xor
aad
xchg
or
mov
clc
jnp
aas
jbe
pop
push
mov
pop
mov
inc
mov
lcall
mov
enter
jnp
imulb
push
test
add
sbb
insb
inc
push
or
mov
jp
mov
cmp
xor
frstor
faddp
pop
fcomip
ss
adc
outsl
cmp
ja
cli
sbb
xlat
enter
adc
push
xor
data16
nop
xlat
jbe
dec
hlt
or
rolb
push
popf
insl
pop
push
fidivrl
xchg
mov
push
mov
inc
xchg
jp
iret
xchg
aad
sbb
dec
mov
mov
mov
outsb
repnz
mov
pop
fildl
pop
push
adc
xlat
xchg
adc
or
out
call
repnz
jns
stos
into
push
in
fwait
sbb
mov
dec
push
adc
inc
data16
or
dec
add
or
addr16
int
and
push
jae
loopne
loop
lods
mov
add
jbe
fisttpll
and
arpl
mov
xorl
fcoml
jp
jl
sub
add
cmp
repz
adc
popa
scas
sbb
xchg
push
jecxz
lods
cs
scas
push
cmp
and
lods
mov
mov
xor
xchg
push
andl
and
mov
xor
pextrw
mov
pushf
test
jnp
cld
dec
in
popf
mov
sbb
hlt
mov
xor
test
pop
mov
adc
and
xchg
adc
pushf
pop
faddl
xor
sysret
pop
ror
pop
test
cmpsb
mov
dec
ret
pop
lret
jle
cmp
enter
jmp
mov
jmp
mov
cmp
int3
fistl
xor
scas
es
inc
dec
das
repz
and
bound
adc
inc
outsb
mov
ss
jns
pop
cld
ficomps
push
fdivrs
push
pop
shll
filds
mov
xchg
cmc
mov
pusha
mov
sub
stc
out
jb
lds
jmp
mov
xchg
inc
adc
xor
fcoml
adc
mov
aas
ds
xor
lahf
lock
push
pusha
and
ja
fwait
out
cmpsb
test
and
aaa
in
out
xchg
ret
sub
jmp
add
xchg
stc
cmp
lods
xor
fcompl
sbb
adc
inc
add
shrl
outsl
mov
shr
outsl
add
xor
sbbl
cli
pusha
mov
mov
dec
and
xchg
mov
testb
insb
dec
xchg
popa
lock
fldt
ret
fldcw
xor
imul
xor
rclb
outsb
ljmp
xor
lret
loopne
xor
dec
aam
and
inc
sbb
aad
shl
xor
ja
lock
sbb
mov
lret
jmp
fimull
sbb
adc
cltd
dec
ds
pop
addr16
cmp
test
jge
lret
shrl
popf
cmpsl
aam
xchg
push
gs
adc
mov
fdivr
mov
jecxz
jmp
pop
mov
xor
sti
sbb
inc
or
or
dec
inc
add
aam
movsb
jmp
jbe
inc
dec
les
test
add
push
jno
xor
xor
les
jb
adc
xor
lahf
jp
aaa
xor
mov
rorb
pop
sub
and
gs
lret
mov
lea
jbe
push
cli
fstpl
aad
test
inc
es
scas
ror
xor
push
xlat
int
les
mov
add
rol
movsb
subl
cmp
js
call
rclb
cltd
mov
in
pop
mov
add
popa
cmp
inc
mov
lds
aaa
sahf
sub
jge
lods
out
ljmp
sbb
addb
insl
add
aaa
mov
mov
mov
lret
push
inc
push
push
enter
jmp
rcrb
std
out
or
inc
push
aaa
lcall
jae
jb
and
cmp
sub
dec
je
into
sti
iret
dec
push
iret
mov
shlb
icebp
aam
test
dec
aas
fs
cmpsl
or
sub
insl
fwait
pushf
bound
sbb
dec
pop
repz
mov
adc
sbb
sbb
dec
cmp
and
out
and
mov
xchg
mov
mov
rcll
and
or
lret
cmp
add
std
jb
push
jecxz
movsb
and
dec
hlt
pop
cmp
add
inc
fnstcw
and
xchg
popa
hlt
outsl
mov
push
cltd
jae
and
out
sub
fcmovne
aam
add
xlat
or
cmp
pop
jbe
loope
ljmp
xchg
in
cli
test
in
jp
leave
mov
and
insl
outsl
push
cmp
or
or
dec
aad
outsl
fisubrs
imul
inc
jb
ret
iret
jno
jl
lcall
and
push
test
lds
je
test
shl
sbb
lcall
pop
push
push
sub
jmp
and
fs
push
xor
mov
mov
aas
and
cmc
fstpt
out
popa
jb
adc
cmpsb
divb
jbe
movsl
add
std
mov
sahf
adc
repnz
int
nop
pop
mov
inc
push
dec
xchg
std
mov
or
out
dec
filds
sarb
mov
cmp
lods
push
cltd
mov
xchg
mov
cmp
pusha
fisttpll
xchg
xor
mov
js
push
ja
loope
cld
jns
pop
pop
lds
jo
icebp
pop
pusha
scas
push
std
cmpsb
jg
sbb
or
push
dec
xor
jg
adc
push
mov
decb
adc
jbe
sub
jmp
pop
scas
sbb
and
icebp
clc
out
sbbb
jbe
pop
lock
jno
je
jns
or
shll
aaa
adcb
push
lods
ret
call
mov
leave
outsb
test
jno
lock
xor
dec
mov
dec
imul
mov
shlb
test
cs
mov
sahf
lret
sahf
mov
js
inc
pop
roll
and
fisttps
into
mov
ljmp
mov
rcrl
js
mov
mov
js
pop
scas
fstl
pop
sbb
adc
fistpll
ss
and
mov
fidivrs
lret
ja
pusha
lods
xor
inc
inc
mov
cmpsl
shlb
test
bound
inc
jno
popa
dec
or
add
mov
movsl
mov
mov
cmc
pop
sbb
fs
imul
popf
test
dec
pop
loope
imul
push
cwtl
lock
ds
mov
mov
cmp
stos
sub
arpl
insb
sti
xchg
sub
sub
mov
push
push
sbb
dec
ss
icebp
jmp
call
lcall
jae
jge
dec
aam
jno
push
ret
test
insb
ja
sub
xor
pop
mov
ficomps
mov
pop
cltd
fs
add
jbe
mov
popf
xor
in
pushf
dec
inc
mov
sbb
push
or
mov
and
push
arpl
inc
inc
jmp
das
mov
and
repz
pop
adc
jp
rcll
mov
xchg
jecxz
js
mov
sbb
pop
stos
mov
pop
dec
clc
inc
pop
and
jb
ret
vpmaddwd
cmp
and
clc
or
sahf
test
adc
xor
lahf
ljmp
pop
mov
add
mov
cwtd
and
mov
jns
mov
adc
mov
ljmp
adc
int
sub
push
call
push
loop
sbb
or
and
rsm
jg
sahf
sbb
scas
jnp
mov
mov
stos
mov
addl
xchg
mov
in
into
mov
pop
stos
in
les
test
fs
or
shl
mov
cmpb
ja
xor
cmp
cwtl
out
fwait
add
cltd
jl
test
mov
xchg
jge
repnz
fs
jp
sar
pop
add
push
insl
mov
shlb
mov
loope
and
jp
push
pop
repnz
cmpsb
cmp
arpl
push
sub
orl
call
cmp
gs
and
sbb
rcll
mov
in
aas
or
ds
inc
insb
or
bnd
lea
pop
daa
mov
pop
shl
popl
add
movsl
xchg
mov
cld
jo
movsb
in
and
es
jmp
mov
mov
cmpsl
mov
cmp
push
sbb
aad
lea
pushl
push
push
xorl
mov
fcoms
and
sbb
insl
aad
mov
sub
pop
std
push
icebp
add
xchg
in
inc
imul
popa
xchg
pop
inc
mov
jno
pop
cltd
inc
push
adc
sti
jg
stos
out
arpl
sbb
loopne
push
inc
jne
scas
or
push
mov
xchg
push
stos
and
and
add
push
decb
jns
cmc
inc
call
psrlw
mov
xlat
pop
inc
scas
scas
xchg
cmc
or
dec
ds
clc
loope
mov
xor
fcompl
leave
inc
push
scas
mov
or
jl
sub
lret
ficomps
jge
mov
add
ds
sbb
mov
orl
adc
pop
gs
jmp
out
lcall
add
inc
xor
dec
ret
xchg
sub
and
xchg
cmp
loopne
sbb
xchg
dec
sub
xchg
inc
nop
mov
test
outsl
ja
adc
xchg
pop
push
and
shlb
mov
mov
out
push
push
dec
and
lea
push
add
xchg
mov
xor
pop
sbb
fisubrs
cmp
adc
mov
push
jge
out
jmp
cmp
push
mov
xor
fcmovne
cmp
pop
mov
lea
imul
mov
push
pop
add
lea
adc
add
and
add
rep
icebp
pop
out
outsb
ljmp
sbb
sbb
ficompl
jg
jne
xlat
xorl
insl
mov
fstl
rcrl
and
stos
add
push
int
test
call
xor
icebp
fadd
pop
mov
sub
rolw
cmc
call
leave
mov
test
sbb
adc
push
jle
push
fdivrp
insl
push
jnp
popf
adc
pusha
ljmp
mov
subps
mov
push
call
test
cltd
fs
outsl
xor
push
mov
dec
imul
mov
jle
nop
addr16
sub
es
dec
pop
cmpsl
sahf
sub
pop
scas
stc
lahf
dec
out
add
jecxz
or
xor
dec
mov
outsl
cltd
out
mov
test
and
push
out
iret
mov
jb
pop
push
mov
jmp
in
cmp
xchg
xor
push
push
outsl
dec
adc
jecxz
int
sub
or
scas
pusha
push
pop
lods
cmp
sub
cmp
mov
xchg
xor
ret
rol
and
add
xor
adc
test
dec
sub
dec
cmp
nop
and
std
pusha
sub
loop
out
aas
mov
or
pop
mov
pusha
sub
scas
je
inc
xchg
jae
shl
xchg
sbb
roll
out
xchg
outsl
ficoml
cmc
fsubrs
cmc
adcl
test
in
pop
cmc
or
ja
add
xchg
out
movlps
sbb
cs
aad
shl
jb
ja
ja
sub
popf
leave
daa
ja
mov
nop
jns
daa
fnstsw
mov
in
loope
decb
popf
test
inc
jp
out
sub
push
cmpsl
xchg
js
shll
pop
data16
rorb
shrl
loop
out
movsb
rcrb
cmp
push
daa
xchg
jl
aad
inc
test
fdiv
jbe
lea
inc
adc
mov
test
sbb
lcall
pop
and
push
in
jl
mov
sbb
insb
inc
insl
xchg
adc
out
aaa
das
add
and
fwait
fs
fidivrl
ja
andb
adc
loop
fstpl
push
scas
mov
mov
js
push
rcl
push
mov
rolb
sub
rorl
inc
cmpsl
pop
pop
xchg
dec
dec
inc
sub
push
xchg
sbb
mov
mov
movsl
test
jbe
aaa
mov
dec
sub
movsl
jle
icebp
inc
jl
pop
cmp
jmp
pushf
pusha
shr
mov
jecxz
sub
repz
sub
push
fwait
and
sub
xor
xchg
bound
sub
stos
mov
pop
out
jl
sbb
sub
aad
cmp
icebp
in
dec
outsl
and
out
add
lods
cwtl
adc
aad
inc
xchg
cwtl
mov
rolb
and
add
ja
int
fstp
jp
clc
popf
dec
shlb
pop
enter
aaa
pop
shrl
add
pop
pop
cmp
jbe
sahf
add
test
loop
imul
mov
shll
mov
dec
gs
clc
inc
inc
daa
int3
cwtl
xchg
push
inc
or
jno
cmp
outsb
ljmp
fcomps
cmpsb
xor
xchg
xor
mov
js
sub
cmc
aaa
sbb
cld
sbb
in
repnz
jg
cmpsb
aad
push
fadd
mov
scas
fst
fs
mov
stos
mov
mov
cmp
stc
dec
add
xchg
ja
pushw
dec
xchg
pushf
push
xchg
mov
inc
in
dec
xor
or
dec
fcomp
not
jmp
in
addb
xor
shrl
pop
pop
push
and
aas
adc
pop
sar
push
dec
mov
rolb
fcoms
repz
mov
cs
into
call
std
popf
jmp
addl
or
jbe
sub
mov
ljmp
mov
dec
and
js
adc
lock
sbb
cmp
das
shrb
mov
int
pop
je
lods
sub
imul
test
or
popa
mull
push
aam
mov
aad
es
sbb
insb
subb
add
es
fwait
cmp
loopne
sub
aaa
rorl
enter
xor
in
in
in
adc
mov
jmp
cwtl
sbb
jb
scas
int3
pusha
pushl
movsl
fsubrl
sub
addl
pop
dec
sbb
loope
adc
xor
mov
cld
xor
lcall
ljmp
mov
ss
pop
mov
inc
aad
cmp
lock
sub
dec
pop
inc
in
push
sbb
mov
mov
sbb
popa
cli
in
out
movsl
mov
inc
mov
lahf
or
fadds
mov
sti
pop
das
xor
ret
adc
or
lock
dec
jno
cmp
pop
jo
bound
xchg
ljmp
xlat
cmp
ja
popa
add
mov
sbb
addl
ret
push
clc
push
shll
lret
add
jns
out
fs
inc
sti
stos
xor
pusha
mov
and
sub
lea
sub
sub
getsec
add
fs
std
xchg
add
pop
outsb
sbb
fnstsw
stc
and
push
loopne
mov
pop
cmpsl
leave
insl
sahf
and
js
add
xchg
ja
jmp
cltd
sub
add
fnstcw
cwtl
and
mov
adcb
jb
stos
xchg
out
inc
push
cmp
dec
jbe
in
add
fsts
xor
pop
pop
mov
dec
push
jbe
cmp
pop
xchg
enter
push
mov
je
dec
pop
fcmovnu
ss
popa
push
sarb
insb
shrl
jmp
cli
test
xchg
fbstp
test
inc
mov
sub
cs
and
data16
int3
push
adc
pop
shr
popa
aas
push
neg
int3
mov
inc
cld
pop
and
dec
add
ret
repnz
dec
mov
inc
nop
popa
xor
adc
inc
in
jmp
lret
mov
loope
mov
movsb
dec
fldcw
add
pop
or
pop
lods
repnz
cmpsb
insb
je
push
sub
adc
mov
pop
add
and
inc
mov
adc
ljmp
jg
daa
sub
test
dec
sbb
sbb
das
add
je
or
jb
pop
xor
dec
fstl
ret
add
mov
pop
arpl
add
outsl
and
shlb
and
minps
add
mov
imul
jnp
popa
into
outsl
and
jae
fprem
pop
inc
stos
jnp
push
sub
dec
movsb
lods
js
jge
lea
cmp
and
or
push
xor
cmpsb
adc
add
mov
jnp
outsb
not
and
cmpsl
inc
mov
xchg
jg
sbb
jb
sbb
dec
nop
mov
or
jne
popa
iret
push
sbbl
lahf
clc
call
jl
dec
ja
lock
inc
out
jle
mov
lret
rorb
pop
jg
fcmovne
push
pop
fdivrs
mov
fnsave
push
daa
std
mov
das
in
rclb
hlt
daa
push
mov
inc
pop
mov
repnz
sub
inc
jmp
cmpsl
int
xchg
fwait
xchg
in
pop
sbb
testb
aad
mov
jo
into
data16
push
jmp
movsl
cmp
cld
sti
out
and
jle
ds
sbb
jne
and
xlat
scas
pop
adc
xor
fadds
nop
les
inc
mov
std
insb
daa
adc
mov
test
add
adc
pop
pop
mov
sbb
bound
dec
addl
les
and
mov
or
pop
push
ret
ljmp
sub
inc
aaa
push
rcrl
jge
shl
loopne
inc
jecxz
jo
push
frstor
sbb
xchg
sbb
pop
lret
mov
mov
mov
mov
mov
fs
daa
adcb
pop
lods
stos
outsl
mov
or
add
or
xor
xor
sub
dec
sbb
mov
xor
hlt
mov
stos
and
mov
inc
cwtl
stos
stos
pop
ret
xchg
pop
mov
add
dec
push
mov
outsl
adc
fdivrl
mull
lret
in
push
aaa
es
lret
push
divb
sub
andb
out
insl
fcmovb
in
lcall
mov
addr16
test
das
add
ret
mov
xchg
aas
push
lcall
mov
pushf
test
adc
mov
test
pop
sbb
cmp
insb
pushf
jne
stos
test
pop
icebp
xor
stc
out
dec
ja
scas
neg
adcb
push
sub
mov
adc
das
in
jnp
inc
shl
mov
lahf
add
push
push
sub
ret
std
ffreep
ja
add
inc
cmp
arpl
int3
or
in
or
or
test
mov
xchg
dec
mov
mov
inc
sti
out
testb
adc
or
outsl
scas
stc
jmp
jmp
stos
gs
in
sti
in
inc
jae
in
sub
xor
jno
cli
dec
xchg
push
ljmp
jle
dec
add
pushf
lods
stos
mov
movsb
aaa
or
pop
sub
stc
or
mov
fst
repz
iret
enter
fildl
aaa
dec
mov
in
sbb
mov
jg
xchg
test
jl
mov
fs
dec
sbb
mov
sti
mov
mov
adc
scas
cld
fisubl
mov
popf
pop
add
pop
add
sti
adcb
shlb
call
sbb
insb
mov
adc
or
xchg
mov
in
dec
cld
gs
sub
push
xchg
mov
int3
sbb
insb
mov
sti
or
jno
or
pop
fisubl
pop
lods
pop
sarb
pusha
in
cltd
and
mov
cld
fisubrs
jle
repz
jle
cmpsb
jle
gs
jp
stc
inc
call
out
sub
jno
or
outsl
and
mov
cld
cmp
lret
ret
jle
xchg
jg
pop
and
cld
mov
rcr
scas
xchg
or
fs
das
jg
std
jl
les
or
lods
xchg
jp
or
icebp
sbb
fdivs
js
xchg
bound
pop
je
mov
inc
push
adc
sahf
adc
sub
imul
mov
notb
cltd
sub
das
test
scas
cltd
push
and
mov
mov
sahf
mov
loope
push
cld
xchg
les
in
pop
arpl
sub
xor
cmp
cmc
out
clc
loopne
mov
outsb
sbb
inc
inc
rclb
fistpl
into
mov
inc
xchg
fldenv
cld
fidivrs
decb
xor
xor
mov
fidivrl
fcomp
push
lahf
inc
and
cmp
jmp
inc
call
inc
mov
ljmp
mov
adc
sbb
sub
fisttpll
mov
adc
jg
subl
aas
or
out
pop
in
into
ljmp
ljmp
sti
shrl
ficomps
ljmp
xor
xor
mov
pop
das
out
mov
and
mov
or
jbe
sub
lret
outsl
sub
dec
inc
xchg
cmp
repz
jle
cmp
ret
daa
jge
subb
call
rolb
int
popa
pop
xor
dec
sub
dec
movsl
pop
nop
lret
add
dec
jle
shl
xor
repz
lock
jne
aas
cmpsb
push
add
loop
sub
adc
adc
inc
mov
nop
inc
in
pushf
xor
inc
in
pop
cmp
push
jecxz
or
xchg
fidivrl
push
testl
mov
push
xor
cmp
sarl
imul
loopne
xchg
rcl
add
fidivrs
xor
pusha
and
test
out
push
ja
sbb
pop
or
sbb
int
push
nop
cwtl
jo
adc
leave
addr16
ja
pop
fsts
adc
jecxz
and
xor
xor
addr16
int
call
outsl
push
mov
jno
ret
sbb
cwtl
push
xchg
xadd
jne
hlt
cmpsl
cwtl
pop
cmpsb
adc
pop
xchg
loop
inc
inc
fwait
out
int
stos
jmp
js
je
fsubs
cmpb
sbb
ret
push
dec
cmc
adc
cwtl
sbb
cmp
mov
aam
iret
push
or
inc
das
xchg
xor
movsb
mov
jp
inc
mov
and
push
cmp
outsl
mov
and
mov
inc
add
outsl
sbb
stos
inc
sub
cld
mov
jnp
jecxz
adc
add
push
jmp
loop
xor
out
lahf
sbb
and
loopne
adc
jb
mov
enter
pop
jbe
nop
add
lahf
adc
xchg
push
push
mov
fnstsw
cmc
ret
lock
imul
loopne
mov
cmpsb
scas
pop
rcrl
xor
xchg
adc
xchg
push
add
in
xchg
mov
push
dec
mov
stc
int
jge
pop
mov
mov
testl
shrl
mov
push
adc
pandn
jns
rorl
shrl
test
sbb
out
stos
shlb
sbb
js
std
dec
mov
aad
mov
xor
inc
jns
nop
inc
jp
or
cwtl
mov
pop
out
scas
push
jae
leave
mov
pusha
cmp
inc
rorl
test
jnp
out
inc
repz
outsl
sub
das
lock
mov
adc
insb
lds
fdiv
mov
adcb
rcrl
ljmp
cmp
xorl
or
dec
dec
ljmp
movsl
add
out
push
movsb
mov
and
fwait
mov
jb
in
fimull
xchg
and
dec
xor
push
sbb
push
jl
inc
or
lock
xchg
cli
jne
imul
es
and
mov
sbb
pop
mov
movsl
mov
jmp
dec
loope
adc
shll
cmc
enter
lcall
and
add
adc
es
adc
add
push
subl
and
ljmp
test
outsl
insl
lahf
js
les
lahf
add
loopne
dec
pop
xor
add
data16
fidivrl
scas
arpl
test
loop
fstps
jle
xchg
dec
fildll
and
je
lods
push
repz
movsl
repz
dec
out
fs
ds
jmp
call
das
ds
pop
pop
inc
adc
sti
scas
fcompl
lahf
mov
aam
dec
push
sub
mov
scas
cmc
inc
int3
scas
push
add
stc
rclb
sti
shl
mov
inc
imul
scas
inc
fdivrl
sbb
in
outsl
inc
nop
inc
sti
dec
sbb
push
add
inc
lds
rcrl
or
rorb
push
in
add
pushf
test
sub
lock
clc
fdivr
mov
movsl
fdivr
and
test
int
ljmp
ljmp
mov
data16
xchg
or
push
xchg
jp
outsl
xchg
mov
add
loopne
and
dec
mov
xor
repz
push
adc
jo
sub
xor
popa
loop
xor
push
mov
mov
lcall
cwtl
dec
xchg
mov
add
sti
jae
scas
push
mov
mov
popf
rsqrtps
imul
sbb
cmc
mov
cmp
adc
adc
jge
pop
push
ret
negb
repnz
inc
adc
call
jb
aad
inc
xchg
push
stos
lret
inc
cmp
rorl
mov
leave
ror
dec
mov
xchg
popf
idivl
movsl
push
add
cmpsl
lea
fcoms
out
cmpsb
dec
out
add
mov
dec
insl
jmp
mov
mov
ret
dec
test
mov
xor
and
cmc
movsb
and
shlb
dec
shll
xor
jg
icebp
xlat
dec
adc
fcmovu
out
stos
fmull
jecxz
and
in
test
cltd
out
mov
jp
sbb
je
clc
add
rcll
inc
repnz
scas
add
inc
lret
iret
fimull
insl
into
dec
push
in
into
in
xor
mov
sub
fsts
lds
rcrb
lcall
mov
es
movsb
dec
inc
push
sahf
movsl
add
idivl
pop
add
inc
enter
psrad
scas
sbb
loop
test
mov
and
mov
and
fistps
aam
lea
mov
inc
into
inc
xor
das
mov
std
cmp
sbb
scas
pop
int3
mov
adcl
out
loope
inc
stos
jae
and
aas
bound
push
cli
test
nop
daa
dec
js
cmp
cmp
movsl
sub
or
adc
jo,pn
repz
jo
mov
jmp
inc
arpl
jno
adc
mov
ret
pop
inc
int3
cmc
test
jae
cld
les
add
and
dec
inc
mov
rolb
ds
xchg
test
add
out
add
sbb
mov
ffree
ds
xchg
xorb
fsts
mov
dec
cwtd
ja
nop
sbbb
out
ss
jno
sub
mov
into
pop
pop
pop
stos
add
or
push
cmpsl
shlb
jecxz
fcmovb
int
mov
and
stc
icebp
lahf
xor
dec
movsl
xchg
add
call
ret
jle
mov
xorb
or
jle
pop
imul
dec
sbb
ljmp
mov
jae
gs
mov
pop
insl
xchg
jecxz
lcall
jmp
scas
xor
sarl
xchg
subb
pop
push
negb
fs
add
sbb
or
mov
lret
lea
outsb
push
loope
xor
outsb
add
sub
jl
lock
cmpsl
pushf
xor
sbb
xlat
stos
cmp
add
xlat
or
sbb
ss
xchg
fldenv
notl
cmp
notb
xchg
into
xchg
add
inc
sbb
cmp
or
xchg
pop
lods
mov
cmp
add
stos
lret
fcoms
push
fisubs
mov
ja
xorl
es
or
in
inc
sahf
xor
mov
mov
pop
mov
filds
scas
roll
xchg
shrb
jns
sahf
mov
test
scas
cld
push
adc
jnp
mov
leave
out
lds
pop
leave
repnz
push
cwtl
mov
xor
aas
cmp
sub
sub
stc
pop
xchg
mov
lds
aaa
and
or
inc
jns
push
mov
adc
xchg
xchg
or
lret
add
cwtl
adc
sbb
mov
rcrb
data16
pop
in
inc
es
aam
mov
insl
lock
sbb
sbb
ficoms
sbb
pop
sub
dec
jl
into
ja
test
mov
mov
mov
scas
fldcw
lock
jp
fdiv
jno
int
jl
test
and
push
lds
inc
aaa
push
mov
cmp
std
lods
cld
test
sub
xor
sub
jns
mov
and
push
lods
negb
aam
insb
push
push
inc
or
jno
repz
mov
sbbb
lcall
cmp
pop
std
sub
mov
xor
xor
fsts
push
sarb
push
cmp
xlat
daa
push
icebp
sar
rorb
out
jecxz
mov
adc
mov
dec
insb
mov
dec
push
popf
nop
lahf
test
pop
mov
push
jg
mov
lods
add
andb
cmp
subl
push
xchg
out
or
inc
mov
test
mov
push
lea
jo
and
stos
inc
stc
push
test
ljmp
aaa
out
clc
xchg
cmp
jne
in
or
ror
lods
sbb
or
add
dec
dec
addl
mov
icebp
das
dec
jl
stc
adc
cmp
aam
and
sbb
bound
insl
cmp
jl
push
xor
mov
mov
adc
and
or
inc
test
and
rcrb
mov
pusha
sbb
push
hlt
enter
loope
sbb
push
es
pop
or
cs
loope
ficoml
cli
outsl
jl
xor
jmp
lret
popf
sub
in
insb
ss
and
insl
lods
jne
loop
jle
adcb
mov
ret
loop
mov
fiadds
or
lods
inc
movsl
jns
pop
cmc
sbb
jo
lock
or
adc
jl
push
mov
cmp
fidivl
fnstsw
dec
and
push
and
arpl
add
dec
repz
iret
and
and
xchg
jecxz
nop
imul
aam
sahf
push
das
outsb
pop
movsl
cmp
sub
movsb
adc
pop
push
repz
les
cwtl
std
data16
stc
cmp
scas
xchg
in
sub
xor
sbb
vmovddup
xchg
mov
ret
push
es
pop
lods
xchg
xchg
cmp
cmp
adc
dec
pop
jae
pop
mov
xchg
push
mov
fsubrp
shl
and
outsl
sub
fisubs
stos
ret
jb
cs
adc
in
lahf
mov
das
pop
mov
pop
push
mov
notb
mov
push
mov
dec
shrl
sub
jnp
mov
inc
jp
xchg
sub
mov
out
leave
out
fisttpl
dec
jmp
repnz
mov
movsl
testb
dec
mov
jle
jge
cwtl
jl
loope
test
xchg
ret
shll
pop
lods
xor
daa
jo
pop
insl
jecxz
xor
mov
jns
ror
cmovp
xchg
mov
adc
arpl
cmp
test
cwtl
lock
dec
outsl
mov
add
push
int3
syscall
test
pop
mov
and
lahf
test
push
aas
test
test
mov
jno
movsl
or
shrb
lock
inc
mov
pusha
cmp
jbe
in
inc
push
ja
stos
and
es
fistpll
out
xchg
rcrl
insl
gs
popa
xchg
mov
xchg
or
int3
adc
push
aam
mov
push
lcall
les
cmp
dec
inc
pop
in
push
lcall
push
mov
dec
mull
gs
icebp
mov
dec
xchg
pushl
and
adc
or
fwait
sti
sbb
xor
push
mov
inc
loop
rcll
lea
cmp
pop
in
pop
jp
pop
mov
push
movsb
cmp
jmp
pop
mov
rolb
mov
fsubr
or
mov
mov
out
ret
subl
and
aaa
cmc
and
je
add
mov
divl
in
adc
pop
dec
mov
inc
sub
cmp
dec
int3
jnp
or
xlat
iret
cmc
sub
inc
dec
mov
dec
ret
mov
cld
call
and
sub
inc
jmp
ja
dec
cmc
jne
sub
stos
xlat
insl
mov
lds
es
call
inc
fisubl
xchg
jbe
out
jl
lret
adc
mov
dec
cmp
in
and
aaa
repnz
arpl
repz
mov
insb
adc
out
mov
mov
jb
fists
xchg
sti
movsb
sbb
pop
mov
call
push
sarl
popa
sbb
adc
into
enter
aas
out
inc
lcall
out
iret
daa
adc
cwtl
push
insb
dec
mov
lret
test
lahf
jmp
scas
cmpsb
out
cld
push
inc
sub
jb
lea
hlt
enter
fstps
sti
stos
push
jno
int3
fstps
fucom
stos
pop
sarl
fists
pop
out
jle
sub
data16
pop
lea
add
mov
rcl
mov
lcall
xchg
sbb
stos
in
push
pop
mov
pop
test
popf
adc
cmp
hlt
cmc
xchg
insb
push
sbb
shll
icebp
jne
jecxz
incb
sub
pop
pop
push
sbb
cltd
pushf
mov
mov
xchg
loopne
add
fdiv
arpl
jmp
sbb
cmp
sub
or
jge
xchg
inc
ret
ror
mov
clc
insl
dec
fwait
inc
jb
xor
cltd
xor
test
cmp
out
push
lods
aam
test
lock
sub
lods
push
daa
imul
mov
lahf
fbld
mov
pusha
shlb
pusha
mov
bound
cmp
in
rcll
xchg
into
push
movsl
mov
adc
inc
mov
adc
jmp
push
sbb
and
out
ja
rclb
sub
shl
mov
in
dec
adc
repz
jnp
je
inc
jecxz
repz
and
xchg
mov
aaa
pop
xchg
scas
push
inc
or
ret
cmc
jnp
xor
push
js
add
mov
js
pushf
mov
xchg
fidivrs
punpcklwd
subb
dec
adc
lret
add
mov
mov
flds
or
sti
add
mov
stos
stos
rcrb
jns
adc
lods
scas
inc
lret
push
out
cmp
jnp
mov
cltd
movsl
push
les
ja
xor
jae
lret
movsb
mov
mov
lea
mov
dec
push
sbb
shr
adc
pusha
js
dec
in
insl
add
add
mov
push
add
push
sbb
stc
fbstp
and
mov
sbb
add
lret
mov
add
xor
in
popa
ljmp
mov
out
aas
movsb
or
mov
in
mov
dec
push
dec
test
jns
push
lds
push
mov
nop
sahf
sbb
lret
cmpsl
adc
dec
fs
sbb
jb
je
mov
nopl
mov
sub
lods
mov
cmp
dec
xchg
sbb
jge
push
mov
les
xor
mov
pshufw
inc
stos
testl
movsl
add
mov
push
imul
jns
pop
fldcw
in
ficoml
sbbl
cmp
aaa
cmp
mov
repnz
inc
cli
xchg
jp
in
mov
out
xchg
imul
outsl
cltd
stos
stos
lahf
push
cltd
mov
in
stos
mov
imul
mov
fisttpll
lods
jno
pusha
lods
mov
nop
cmp
cli
mov
push
add
or
jge
lock
icebp
movsl
stos
data16
mov
xlat
bound
pop
pop
and
xchg
add
add
cmp
sub
into
repz
and
dec
popa
jno
test
push
mov
jle
xor
cmp
cltd
mov
bound
push
dec
jmp
mov
test
js
dec
es
mov
adc
lret
cmp
push
mov
or
pop
adc
push
push
xor
je
cs
loop
push
mov
and
cmpsb
sbb
movsl
jne,pn
mov
mov
mov
push
iret
or
add
in
or
jno
loopne
jne
movsl
cld
scas
mov
add
jnp
int3
fnstsw
mov
jecxz
dec
pop
pop
aad
sti
das
push
mov
lret
xor
in
lret
stos
jns
mov
mov
fs
mov
pop
jb
cmp
popf
adc
arpl
test
stos
stc
jle
shrb
mov
mov
mov
enter
mov
stos
enter
jle
mov
aad
in
jmp
aad
fdivs
jno
negl
xorps
and
cmc
sbb
jnp
repz
fs
jno
insl
leave
xor
dec
push
sub
call
in
add
lea
inc
pop
xchg
ret
jl
pop
lods
ret
leave
jbe
les
sbb
xchg
lods
imul
adc
sub
fisubrs
aad
ja
pop
std
mov
repnz
push
lods
movsb
in
push
sbb
roll
add
cmc
pop
testl
adc
das
cmp
mov
xchg
daa
andb
mov
je
adc
push
sub
or
xor
sti
lds
push
sub
adc
icebp
mov
dec
iret
mov
lods
sti
sub
out
std
push
ja
into
in
sub
les
sbb
xchg
cmp
xor
inc
or
jb
inc
repnz
cmp
mov
pop
mov
mov
pop
ja
sbb
mov
mov
mov
push
icebp
add
lret
int3
out
xchg
push
pop
sub
xor
aaa
inc
fsubs
and
frstor
fmull
add
insl
inc
adc
movsl
je
cld
inc
test
orb
cs
pushf
sbb
shrl
inc
xor
inc
and
notl
fstl
sub
data16
testl
push
mov
jmp
mov
add
pop
mov
mov
movb
xchg
pop
inc
leave
and
mov
inc
adc
and
dec
popa
sbb
inc
imul
ds
cmp
cs
iret
dec
shlb
pop
out
sub
pop
in
adc
mov
test
insb
icebp
imul
or
lret
sahf
cmpsb
or
lea
xor
sub
divl
add
jg
xchg
jo
pop
nop
push
inc
jnp
mov
addl
push
adc
shrb
out
xchg
add
sub
mov
mov
sub
push
push
or
movsb
sarb
mov
notb
push
xor
mov
cli
jg
movsb
ret
int
gs
in
dec
dec
push
sbbl
pop
ret
xor
sub
je
out
mov
or
pop
cmp
xchg
stc
xchg
jecxz
xchg
nop
inc
aaa
addr16
mov
mov
mov
bound
dec
sbb
mov
jo
clc
scas
pop
lahf
cwtl
test
std
xor
fmul
outsl
dec
fists
dec
icebp
lcall
sbb
mov
repz
sub
dec
loope
or
inc
mov
sbb
iret
sbb
dec
lret
xchg
adc
aas
hlt
and
jo
push
mov
movsl
mov
jo
sub
cmpb
scas
rcl
test
aad
and
sbb
scas
jecxz
dec
dec
push
dec
add
sub
mov
mov
xorl
sub
lock
mov
out
add
sbb
sub
push
fistps
jle
stos
data16
test
sbb
xchg
aad
lods
inc
dec
mov
inc
push
adc
or
ret
jmp
pop
mov
dec
dec
xchg
insl
inc
in
sub
sub
loopne
loope
mov
cli
daa
js
movsb
popf
mov
sbb
incb
fistpl
or
loopne
mov
xor
pushf
sub
inc
push
push
std
in
mov
ds
or
outsl
xchg
jmp
push
add
cs
lea
cmp
cmp
mov
sbbb
aam
fildl
movsb
xchg
cmpsb
mov
iret
inc
inc
aas
dec
push
ret
xchg
inc
mov
xor
add
iret
sbb
vmwrite
dec
lahf
sub
test
pop
outsb
pop
cs
mov
cmc
inc
test
stos
adc
push
xchg
notb
mov
push
loope
and
cmp
cmp
xchg
aam
mov
cmp
mov
cmp
and
fsub
pop
insb
and
inc
or
or
shll
or
rcr
xchg
pop
cmp
stc
adc
sub
jg
es
cld
dec
push
loopne
cwtl
mov
fstps
fyl2xp1
jnp
cmp
jle
das
adc
scas
ja
loope
stos
lods
cmp
fdivrl
or
std
ljmp
pop
xor
adc
mov
add
add
fsubs
jmp
and
sti
sbb
mov
inc
push
fnstsw
mov
std
mov
adc
add
test
push
cwtl
outsb
xor
data16
lock
inc
ror
sub
push
popa
sbb
pushf
push
adc
jnp
shrb
cmc
xchg
int3
xchg
xchg
xchg
dec
add
adc
add
adc
fwait
shll
pushf
lea
divb
mov
imul
add
lods
les
mov
and
adc
test
sbb
in
loopne
sub
insb
xchg
testb
pop
mov
jnp
sub
add
pop
jg
loop
cld
sbb
lods
test
mov
daa
jns
mov
out
dec
int3
push
adc
xor
push
insb
jl
or
mov
mov
xor
repnz
mulb
push
sub
add
data16
sahf
xor
cmp
cmp
mov
cltd
out
nop
xchg
mov
push
inc
pop
and
movsl
adc
sbb
leave
test
mov
mov
mov
and
fildll
sub
mov
xchg
cmp
xchg
mov
jg
rcl
stos
rolb
icebp
iret
ljmp
jecxz
push
lods
out
pushf
xor
sub
mov
pop
dec
or
xchg
insb
xor
push
jmp
leave
loope
lock
movsl
sub
mov
add
sub
mov
div
pushf
fwait
xchg
xchg
sub
movsl
push
xchg
repz
pop
and
scas
add
adc
int
jecxz
fnstsw
jp
imul
enter
movsb
xor
fistpll
dec
das
or
imul
inc
inc
fstps
lret
adc
dec
inc
xchg
xor
mov
sbb
lret
in
out
cmp
push
mov
cld
out
mov
cwtl
pop
mov
add
les
inc
rorb
sbb
or
mov
cwtl
scas
ljmp
cmp
jp
push
adc
xor
lahf
dec
sub
inc
add
push
pop
xchg
and
mov
mov
js
push
daa
jne
push
call
in
adc
inc
inc
push
and
vpunpckldq
imul
cmp
or
imul
inc
and
mov
fisubrl
mov
push
and
in
xor
mov
imul
mov
loop
negl
ljmp
add
daa
push
jb
sub
sarb
mov
jno
sbb
add
jmp
out
jnp
cld
pushl
insb
cli
and
push
lahf
mov
mov
in
mov
repnz
mov
jbe
jmp
arpl
ret
outsb
push
repnz
sub
or
or
repz
sub
int
inc
xchg
sbb
mov
aas
neg
sub
adc
inc
xchg
loope
push
inc
repnz
xor
je
jle
xlat
cmp
pop
push
inc
xor
xor
push
push
call
mov
out
pop
push
sbb
in
jge
ja
ds
les
jae
xchg
call
and
stos
call
dec
adc
xchg
loop
or
mov
lret
mov
movsl
rcrl
daa
popa
sbb
lcall
nop
loop
aam
push
sub
popa
outsl
aam
mov
dec
sub
rcr
std
cltd
xchg
nop
out
add
stos
ja
inc
push
sub
xchg
aaa
in
popaw
sbb
cmc
loopne
lods
and
mov
jns
or
test
cld
sub
ja
loopne
rcr
dec
mov
and
lret
xchg
ja
in
jns
into
ds
scas
xor
pcmpgtd
inc
xchg
pop
icebp
xchg
adc
mov
loope
lea
xchg
mov
pop
push
lods
sub
movsl
test
js
sbb
sbb
arpl
sahf
dec
ja
xchg
inc
jp
mov
jno
adc
gs
in
mov
loop
mov
inc
insb
jae
jb
add
imul
pushf
adc
jns
adc
mov
mov
mov
jo
cmc
jae
bnd
add
pause
fildl
addb
jg
sbb
fwait
mov
test
adc
mov
push
repnz
jecxz
mov
fucom
xchg
mov
inc
jno
scas
dec
mov
mov
icebp
cmp
rcl
in
push
mov
jge
js
xor
mov
jmp
push
in
adc
pusha
adc
push
loop
pop
mov
mov
jecxz
pop
inc
addr16
mov
lcall
push
adc
mov
loopne
std
and
xchg
sarb
xchg
cli
adc
pop
aaa
and
inc
adcl
cmpsb
icebp
enter
js
xchg
sbb
stos
mov
pop
sub
xchg
mov
icebp
push
xchg
push
push
clc
lea
dec
testb
lock
scas
mov
mov
lret
sub
sub
sarb
mov
stc
adc
in
adc
out
out
push
out
and
pop
cltd
lret
pop
fmull
negl
jl
add
add
and
call
fnstcw
dec
and
jbe,pn
popf
xchg
scas
shr
call
xchg
sub
cltd
sub
cld
mov
dec
jp
mov
gs
push
push
movsb
xchg
xchg
xchg
stos
test
ret
dec
movsl
pop
xchg
int
push
fs
xor
pusha
shr
cmpsb
add
cmc
rcrl
loopne
inc
mov
mov
cmp
cwtl
xor
lret
fsubl
xchg
gs
fisttpll
test
ljmp
in
loop
insb
adc
pushl
or
mov
jp
mov
bound
cmp
jge
mov
jnp
fimuls
mov
test
add
adc
mov
jb
sub
ret
movntps
loop
insb
rorb
pop
subl
rol
push
xorb
jo
and
aam
mov
cli
inc
sub
cmp
and
popa
out
push
jl
push
cli
cltd
add
push
arpl
movsl
hlt
adc
loop
jnp
clc
push
daa
xor
int
popf
lret
sbb
add
insl
rolb
repz
inc
nop
in
xchg
aas
mov
insb
pop
adc
adc
pop
addr16
mov
dec
mov
test
test
addr16
fisttps
cli
xchg
add
mov
adc
std
into
sbb
pop
push
cld
jb
mov
mov
mov
leave
in
push
jg
jb
inc
or
mov
inc
pop
in
and
stos
adc
xchg
jle
rcrb
mov
and
push
data16
in
test
nop
inc
jne
add
sub
cld
mov
and
or
lahf
inc
cli
xchg
and
jmp
mov
sbb
mov
or
jbe
mov
scas
out
shll
notb
adc
push
sbb
into
inc
adc
pop
pop
push
rclw
cmp
mov
adcl
clc
rorb
imul
add
mov
sub
mov
adc
fdivrs
sbb
dec
ret
fnstsw
stos
sbb
xor
mov
mov
cmp
fs
sbb
and
add
dec
jge
pop
sub
jle
inc
mov
jecxz
sbb
fstps
push
or
in
inc
push
pop
mov
bound
sbb
movsl
or
pushf
jnp
stos
roll
leave
out
xchg
addr16
or
cmp
adc
add
cld
xchg
pushf
addr16
inc
xor
jecxz
dec
and
rorl
mov
daa
xchg
xor
push
insl
aad
pop
out
gs
arpl
ja
gs
inc
scas
es
adc
mov
not
das
notl
xchg
pop
nop
shrb
insb
push
outsb
xor
xchg
inc
leave
mov
jnp
shlb
mov
jle
dec
cmp
or
adc
pop
or
jno
out
xchg
pusha
add
adc
pop
xlat
adc
lods
jbe
jg
sub
aas
mov
adc
aam
icebp
mov
popl
cmc
inc
scas
aam
lods
fnstenv
xor
lret
aas
adc
arpl
enter
mov
mov
inc
xchg
xor
cwtl
fwait
test
lcall
rorb
nop
fistpl
daa
test
icebp
push
andl
add
dec
inc
stos
rcll
fnsave
out
jo
aam
xor
mov
ljmp
jl
repz
xorl
sbb
adc
mov
mov
or
adc
stc
inc
imul
cli
push
xchg
dec
sbb
xor
addr16
jb
cwtl
or
mov
loopne
adc
repnz
and
pop
sub
lahf
xor
mov
jle
sbb
popa
ss
pop
and
mov
outsl
imul
aas
mov
lea
ljmp
rcll
mov
push
pop
mov
cmc
into
ja
int3
pop
loope
cmp
test
popa
lds
pop
je
lea
pop
pusha
xor
mov
add
pop
xor
xor
imull
sbb
leave
sahf
stos
arpl
xor
movsl
xchg
fs
inc
pop
repz
repz
jno
incl
aaa
mov
fwait
mov
or
sub
mov
mov
jb
dec
or
mov
add
jge
stos
mov
pop
in
rolb
jecxz
shr
pop
pop
cmp
fidivrs
mov
jl
dec
leave
inc
dec
mov
loopne
mov
xchg
and
mov
mov
adc
push
shrb
pop
ret
mov
shll
and
bnd
or
pop
sub
mov
cwtl
lods
ja
and
fstpl
insb
cmp
jecxz
popa
inc
enter
int3
lahf
in
fstl
insb
xorl
cmp
dec
push
xor
loop
inc
cmpsb
jnp
jl
std
pop
mov
mov
imul
or
dec
std
orl
and
ret
movsb
mov
xchg
testb
lods
inc
enter
sti
inc
jbe
cli
sahf
in
cld
mov
cmp
psubusb
faddl
dec
cs
shll
inc
mov
push
cmpsl
inc
mov
mov
dec
mov
mov
and
daa
add
loop
ss
cmp
xor
popf
jge
and
and
int
pop
xchg
add
mov
jp
push
mov
insb
popa
lea
enter
sahf
xor
xor
jp
pop
and
xchg
xor
or
aaa
pop
out
scas
xchg
mov
inc
bound
cmp
cmp
cmp
jmp
push
ffree
ja
xchg
outsb
add
push
pop
je
into
mov
inc
or
lds
les
mov
dec
sub
sbb
lcall
dec
or
stc
pop
push
sbb
xchg
sbb
ret
xchg
push
dec
fwait
adc
sub
dec
cwtl
mov
sub
mov
daa
leave
mov
jno
xchg
xchg
mov
mov
pop
cmp
cmpsb
aaa
cmp
fldenv
mov
push
mov
test
lds
in
mov
xor
jo
adc
sub
ror
pusha
popl
lret
add
aam
jae
mov
xor
cs
ss
popa
push
mov
mov
add
shll
test
add
jno
dec
push
loope
sbb
dec
mov
cwtl
sub
mov
int3
and
andb
dec
cmp
ljmp
scas
inc
cltd
fistpl
xor
jbe
pusha
push
xchg
sbbl
dec
test
stos
xchg
mov
cmp
inc
mov
sahf
mov
jg
sub
in
inc
jb
fsubs
mov
loop
push
mov
sbb
inc
push
aaa
jmp
xor
mov
xchg
jl
xchg
stc
shrb
les
inc
enter
in
pusha
mov
dec
dec
ret
add
mov
dec
or
pop
loope
roll
sub
cmp
and
mov
test
loopne
ret
aaa
test
cmpsl
sbb
sbb
jbe
dec
mov
jb
int
mov
inc
inc
inc
add
outsb
add
jg
call
repnz
add
pop
and
inc
xor
xchg
xchg
je
stos
cmp
cmp
lods
js
pop
icebp
xor
mov
js
jp
mov
push
jbe
mov
jge
rorl
push
stos
inc
add
std
andb
test
cs
loope
push
mov
xchg
jmp
aad
aad
leave
mov
mov
gs
dec
fwait
into
dec
dec
movsl
shr
call
push
fwait
aad
xor
pop
or
xchg
lahf
dec
jge
mov
sbb
inc
test
ret
andl
ret
cmp
jo
movsb
ficomps
and
sub
shl
sbb
xchg
jae
mov
sbb
jmp
push
push
dec
lods
hlt
inc
cmp
idivb
adc
mov
rclb
jo
jl
lods
aaa
jb
fidivrs
sbb
in
dec
cmpsb
mov
sbb
arpl
xchg
lcall
bnd
ror
inc
pop
mov
sti
xchg
cmpsl
pop
xchg
push
mov
dec
shrb
cltd
scas
loopne
xor
lods
mov
and
inc
addb
pop
addr16
push
hlt
ret
sub
mov
mov
or
dec
cmp
in
cli
mov
loope
cmp
xchg
out
les
dec
mov
sbb
andl
adc
mov
push
mov
iret
adc
pop
or
jb
fdivl
mov
movl
into
cs
lea
push
jne
outsb
stos
repz
stos
imul
mov
mov
aad
cmpb
test
push
or
push
scas
pop
rorb
out
ret
cltd
fimuls
mov
nop
sbb
pop
mov
lahf
add
movsb
data16
or
jnp
inc
adc
ds
push
add
addr16
pop
aad
incb
es
ds
sbb
cmp
lock
cmc
ss
leave
loope
push
adc
out
bnd
int
jo
adc
not
cmp
imul
repz
or
jb
mov
jno
cmp
scas
std
jecxz
out
adc
lods
icebp
mov
xchg
das
mov
outsb
in
in
xchg
cmpsb
jecxz
sub
ret
rol
xor
out
or
xchg
dec
out
mov
cmpsb
cli
cmc
int3
bound
jge
ret
out
mov
or
daa
out
fstl
fldt
sbb
mov
xor
or
mov
jae
xor
in
ds
push
scas
imul
mov
mov
pop
sbb
xchg
loope
dec
pop
xchg
jle
add
fwait
aam
xchg
cltd
dec
pop
or
and
xor
and
xchg
pop
mov
mov
add
xchg
in
mov
push
jmp
sti
mov
fbld
mov
sub
fwait
jmp
out
push
cwtl
shll
lret
fs
sbb
ljmp
cmp
cmp
or
xchg
adc
repz
shlb
mov
insb
icebp
xchg
addb
adc
push
imul
fcom
push
add
movsb
mov
mov
sahf
lret
shl
mov
ret
inc
je
adcl
xchg
fisttps
loopne
out
jp
mov
aaa
fstpl
xchg
frstor
xchg
das
and
mov
lea
xchg
add
mov
sbb
mov
sub
jns
into
lods
ss
push
xchg
repz
sub
enter
mov
xchg
inc
gs
cmp
shll
inc
out
add
cmc
push
test
jp
mov
ret
mov
enter
scas
dec
dec
xor
int3
pop
and
sbb
repnz
movsl
fisubs
lods
pushf
push
std
xlat
arpl
push
xchg
adc
test
sub
es
stc
or
in
xchg
mov
je
test
mov
push
or
stc
sarb
cld
ja
mov
fidivl
push
xchg
fisttpll
sbb
sbb
push
add
add
mov
ja
scas
fcmovb
push
xlat
mov
rorl
xor
stos
mov
fsubl
adc
movsb
or
sub
in
aad
push
pop
adcb
gs
pop
mov
loope
or
loop
xor
out
sbb
sbb
cmpl
repnz
push
or
mov
aaa
hlt
in
dec
lea
rcll
xchg
cmpsb
and
pop
mov
fisubrs
into
xorb
lods
xor
add
cli
dec
sti
scas
in
dec
fnsave
jl,pn
or
int3
mov
or
mov
addr16
in
xchg
mov
out
push
in
dec
sbb
mov
mov
dec
lahf
js
pop
cltd
cltd
cmp
xchg
rolb
rcl
scas
xlat
mov
push
jne
fisubrs
inc
jmp
push
mov
and
sti
cld
jo
test
adc
push
insb
mov
add
sbb
cld
mov
xchg
pop
sbb
adc
pop
inc
cltd
mov
add
in
push
sahf
jb
cmp
pop
add
push
inc
shld
add
jl
ss
ja
xor
clc
call
jp
mov
xchg
in
sub
lods
cmp
mov
test
aad
cs
divl
adc
cmp
or
push
lea
xchg
push
mov
push
xor
mov
push
sbb
lahf
lret
outsb
sahf
mov
std
lret
std
jg
mov
adc
sahf
cmpb
dec
insl
cld
lret
xor
xchg
sbb
pop
cmpsb
xchg
imul
push
add
leave
sti
in
or
or
cmp
out
andb
flds
add
dec
outsb
lock
fistps
imull
in
sub
aas
cmc
andb
sahf
adc
sti
jno
jl
lods
xchg
mov
jbe
mov
xchg
inc
sahf
in
cmc
dec
addr16
cmp
adc
inc
xchg
inc
clc
push
dec
pusha
push
test
jno
out
sahf
in
jns
cmp
cmp
sbb
push
xchg
lods
cmp
xor
adc
ret
or
xlat
into
sbb
fistl
stc
shl
adc
cmp
pop
movsl
stc
fmul
loopne
pop
insl
mov
jmp
movsl
mov
pushf
call
pop
out
fmull
mov
pusha
mov
xchg
ja
aad
stos
ret
inc
cli
pop
test
push
xor
repnz
xlat
mov
xchg
cmp
ljmp
push
mov
pop
inc
cmc
jecxz
push
sub
imul
pop
xchg
push
or
push
mov
dec
jmp
sbb
stos
cmp
add
add
mov
int
inc
stos
scas
sub
lock
test
or
mov
in
pushf
push
stc
nop
cmc
in
sahf
ds
mov
push
jp
int3
shll
arpl
addr16
sti
xchg
sub
out
dec
mov
ret
cltd
fdivrs
and
and
xlat
xchg
dec
cwtl
xchg
lahf
out
mov
push
int3
andl
bound
test
out
pop
idiv
sub
lret
fildl
pop
daa
xchg
xor
xor
adcb
mov
leave
sbb
sbb
repnz
adc
xor
xchg
sub
lods
ficompl
fsubs
mov
push
das
push
js
mov
jb
shlb
pusha
orb
push
add
ret
arpl
pusha
scas
mov
dec
stos
mov
and
and
push
hlt
jb
in
fidivs
enter
jmp
out
sahf
jne
jecxz
movsb
sar
and
pop
mov
dec
test
mov
mov
pop
scas
jp
in
outsl
mov
and
bound
xchg
lahf
lea
aam
cs
outsb
popl
sbb
adc
or
arpl
mov
icebp
cmc
int3
sbb
or
lret
or
in
push
push
cmp
scas
leavew
imulb
dec
in
stos
std
xchg
int
dec
aaa
mov
les
inc
shlb
fisubrl
inc
gs
cmp
push
stc
insb
std
mov
and
mov
gs
testb
mov
adc
imul
andb
imul
sahf
incb
popa
jno
aam
cmc
out
mov
push
stos
xchg
and
xchg
add
xlat
pop
aam
mov
dec
dec
add
roll
je
and
les
jns
out
lcall
ret
das
arpl
in
and
add
inc
fcmovu
enter
dec
les
dec
mov
mov
mov
jmp
ret
mov
out
inc
out
pop
jae
lods
mov
adc
push
push
mov
mov
ljmp
scas
xorl
popf
xor
xchg
rolb
mov
xor
ret
sbb
mov
pop
xor
ljmp
aam
inc
pop
inc
in
xchg
sbb
xchg
push
imull
enter
cmp
dec
jle
movups
xor
lret
lret
outsb
test
stc
sbb
test
sti
loop
xchg
mov
cmp
and
dec
in
pop
jp
loopne
xchg
inc
test
mov
popf
mov
mov
repz
cld
xchg
add
pop
sbb
pop
jl
mov
cmpsl
les
sub
aaa
pop
fnsave
stc
add
jl
int3
push
push
stos
push
fmuls
xor
sbb
push
cld
pop
stc
xchg
scas
cld
in
pop
mov
cli
divl
mov
xor
aaa
pop
or
int
loope
pop
iret
or
xor
push
or
inc
sub
pop
cs
pop
and
push
fincstp
mov
nop
nop
xor
popa
dec
push
and
jo
imul
lret
cmp
cmpsb
imul
lret
fsts
inc
stos
movsl
xchg
jns
enter
enter
push
int3
sub
shlb
bound
enter
in
lods
sbb
xor
inc
fists
pop
lret
icebp
scas
test
movsb
jecxz
mov
mov
sub
sbb
mov
and
or
adc
dec
mov
and
inc
mov
inc
mov
adc
push
into
jge
lock
sbb
adc
pop
inc
scas
ljmp
fstps
dec
out
push
and
and
and
mov
fcomps
dec
xchg
inc
mov
icebp
les
cmpsb
fstps
jge
inc
jbe
xor
fstl
cmp
push
jae
cmp
ss
jmp
jl
mov
lods
ret
pushf
jle
scas
xlat
sarb
add
push
mov
inc
adc
outsl
inc
insb
arpl
xchg
bnd
lret
movsb
add
cmp
xor
sbb
cwtl
clc
and
fsubl
sub
aad
cmp
pop
pop
ja
and
pop
cwtl
sub
out
mov
dec
xchg
pop
or
push
xchg
in
mov
sbb
cmpl
arpl
sbb
jo
sahf
enter
dec
arpl
adc
mov
sbb
push
push
fwait
dec
loop
repz
aas
scas
gs
lods
mov
aam
push
xchg
nop
xchg
xlat
orb
dec
or
mov
push
and
test
mov
cmp
mov
add
sub
dec
test
movsb
dec
ret
leave
dec
rcrb
es
ret
jl
out
and
mov
inc
fs
sbb
dec
lret
sub
fdivrs
lret
cmp
fbstp
mov
incl
add
fs
mov
xchg
mov
xor
push
pop
mov
inc
push
sub
dec
mov
cmp
in
or
ret
sub
push
cltd
add
xchg
or
adc
dec
imul
test
sub
sahf
mov
mov
mov
out
and
test
jge
stc
and
in
aam
dec
stos
xor
push
pop
test
bound
scas
fsubr
or
ret
inc
inc
leave
lds
or
lahf
in
sbbb
push
fimull
dec
enter
xchg
fnstenv
lahf
xchg
cmp
cmpsl
fadds
fdivrl
cmpsb
fwait
pushf
jecxz
jnp
in
fisttpl
fistps
xor
cltd
rorl
leave
movsb
mov
fstl
scas
jbe
and
adc
mov
inc
inc
and
dec
xchg
out
push
outsb
mov
mov
flds
mov
inc
inc
icebp
or
aam
lret
mov
mov
or
xchg
popf
pushl
fldt
lahf
xchg
imul
sahf
xor
imul
cwtl
inc
push
dec
xor
xorb
and
or
imulb
xchg
int3
push
sahf
and
aad
lods
sub
lea
adc
cmpsl
mov
clc
lods
jne
aad
lods
lret
xchg
mov
loope
inc
sarl
and
adc
sti
mov
dec
rorb
mov
push
pop
mov
hlt
jg
lret
and
cli
cs
leave
mov
es
pop
push
pop
mov
out
outsl
or
xchg
xchg
pop
sub
out
dec
sbb
cld
popf
sahf
bound
sbb
xchg
or
jp
dec
rorl
roll
and
mov
lods
jbe
push
decb
jno
xchg
sub
daa
int3
insl
and
add
cmpsb
sub
repnz
sbb
loop
add
mov
shlb
ficoms
test
push
mov
dec
testb
dec
push
js
xchg
sub
test
fcmovnb
sarl
cltd
loopne
into
jmp
stos
mov
jmp
push
fstl
xchg
mov
dec
clc
mov
cld
ret
pop
and
mov
into
imul
push
pop
ret
sub
out
jle
leave
cmp
xchg
dec
sub
and
jmp
jecxz
aaa
cmc
push
js
push
xchg
mov
xor
mov
cwtl
xchg
faddl
frstor
fldenv
js
push
lds
jle
stc
lret
or
cmp
fisttps
inc
push
call
and
xchg
mov
jp
not
push
push
and
jp
and
inc
popf
pop
adc
xchg
test
lods
fcomp
jbe
lods
lret
mov
xor
adc
inc
mov
xchg
and
xchg
jle
add
push
adc
sub
mov
out
mov
sbb
movsb
bound
rcrl
stos
add
adc
add
rol
xor
jecxz
add
inc
stc
mov
cmp
dec
push
or
leave
icebp
stc
sti
imul
and
jno
aas
scas
mov
push
inc
mov
test
mov
pop
loop
or
dec
mov
mov
inc
test
push
fbstp
adc
add
daa
mov
pop
add
adc
insl
ficoms
cwtl
iret
dec
movsb
shr
rorl
xlat
push
lea
mov
inc
in
popf
lock
mov
ret
btrl
scas
pop
add
fiadds
mov
aam
rclb
pop
jb
fcomip
and
jo
movsl
cmp
ficoml
cmpsl
or
int3
ds
xchg
pop
pushf
push
ljmp
mov
mov
aad
lods
or
pop
std
ret
cmpb
imul
mov
add
mov
jge
adc
aad
icebp
xorl
jle
pop
jecxz
insl
adc
mov
cmp
bound
mov
aad
sti
sarb
movb
pop
sub
mov
test
sahf
call
cmp
stos
cmp
inc
xor
jmp
sbb
xor
aam
add
adc
fcomip
rclb
inc
lret
sti
push
jae
sub
sbb
aam
imul
and
mov
adc
and
cmpsb
xchg
in
test
fsubrl
inc
xchg
shrb
jb
pusha
lcall
and
cmp
cmc
fsubrl
in
hlt
xor
iret
xor
inc
dec
xor
cmp
sub
xor
test
js
lds
sub
lea
mov
enter
mov
xchg
add
jmp
and
out
xor
cmpsb
jae
pop
int3
icebp
xchg
jno
mov
pushf
test
jle
stos
pop
jg
adc
mov
iret
bound
mov
imul
adc
cmpb
push
and
mov
ret
push
js
je
incb
add
pusha
sbb
pop
jmp
jo
sub
jge
repz
sar
cmpsl
mov
test
cwtl
mov
jmp
mov
mov
fisttpl
leave
mov
lods
lret
mov
incb
loopne
dec
daa
aam
enter
sti
adc
stos
push
inc
enter
addl
xchg
sbb
and
mov
fwait
loop
and
mov
or
out
push
jg
cltd
pop
cmc
jp
cmp
rcll
xor
sub
dec
mov
xchg
xor
mov
jnp
push
fwait
stc
fistl
outsb
dec
addr16
pop
xchg
lods
ja
pop
mov
add
mov
adc
xchg
fwait
mov
imul
pop
adcl
add
test
data16
mov
faddl
cmp
scas
out
or
rcr
in
sbb
xchg
pop
jmp
push
lods
mov
ud0
stos
inc
xchg
and
test
xor
addr16
and
mov
mov
lret
jmp
cmpsb
xor
mov
fiaddl
push
xor
repnz
cwtl
pop
sbb
clc
outsl
jmp
mov
sti
int
and
jp
mov
imulb
arpl
xlat
mov
arpl
repz
fstpt
sub
addr16
inc
dec
rol
test
sbb
imull
add
xchg
fistpl
xchg
repnz
mov
push
int3
idivl
sarb
je
data16
add
inc
in
cli
mov
inc
adc
and
loopne
lock
or
loope
mov
inc
or
inc
and
mov
ds
and
lahf
xor
clc
and
xchg
fistl
lods
dec
loopne
sub
in
loopne
sbb
push
cmpsl
xchg
xchg
insl
sub
lods
rcrb
pop
mov
fcmovnbe
mov
shlb
test
push
mov
jmp
jmp
mov
popf
mov
pop
pop
rolb
cmp
cmp
outsb
dec
inc
mov
xor
jp
arpl
in
cmc
lret
movsl
xor
insl
jnp
cmp
outsl
dec
xchg
xor
dec
pop
icebp
out
cs
push
mov
mov
xchg
imull
jns
fwait
or
loope
sub
je
jge
outsl
xor
sbb
dec
mov
popf
jp
jl
imul
jne
sbb
je
ljmp
std
push
fistpll
or
or
xchg
in
rorl
test
lods
mov
mov
xlat
out
test
xor
pushf
lahf
ret
dec
repz
pop
fs
loopne
dec
mov
icebp
push
orl
repz
dec
jle
and
hlt
push
jo
jmp
add
in
cmp
or
ljmp
outsl
fimuls
fidivrs
ret
cmc
adc
push
jns
imul
pop
and
mov
bound
rclb
addb
inc
inc
jp
je
pop
jbe
daa
mov
jne
out
call
test
sub
test
pop
push
lods
fsubl
jno
jl
cltd
fcmovnbe
sahf
fimuls
xor
lahf
push
mov
mov
jl
ficoms
xchg
mov
loop
int3
ss
imul
aas
add
rorl
shll
xchg
mov
sbb
cmc
inc
in
lret
adc
push
cmc
loopne
mov
mov
arpl
mov
test
jmp
lock
pop
pushf
sub
cmp
pop
les
mov
sbb
ffree
mov
lock
cmpsb
pop
pop
pushf
addr16
sub
xchg
jg
mov
sarl
xor
pusha
sbb
je
adc
movsl
adc
mov
popa
icebp
cmp
fisttps
jno
sub
fdivrp
pop
sarb
sub
test
mov
inc
xor
ds
loop
sbb
pop
in
sbb
or
add
into
lock
icebp
inc
repz
adc
xchg
stc
add
cmpsb
inc
jmp
aas
push
or
mov
mov
and
sub
daa
mov
jae
movq
cs
das
aas
mov
push
sub
arpl
ds
mov
fisttpll
mov
leave
out
sbb
xchg
dec
js
and
imul
cmp
sbb
mov
dec
das
movsl
int
outsb
push
mov
int
push
sbb
jge
sbb
fildl
ljmp
jp
aas
sub
leave
adc
add
addr16
dec
cmp
stos
mov
stc
fmull
cmc
in
push
loopne
idivb
das
cli
fwait
je
sub
lea
mov
imul
cmp
shrl
or
mov
aad
cmpsb
into
ja
mov
in
idivl
pop
imul
lret
dec
mov
clc
xor
jae
add
pusha
into
rclb
cmpsl
cwtl
mov
mov
cwtl
adc
xor
push
dec
sbb
add
fcoml
orb
lret
or
cmp
sbb
inc
add
jb
adc
insb
sbb
fildll
sub
mov
ret
fwait
test
jno
mov
incb
jo
and
xor
dec
lods
dec
std
lods
jmp
mov
cmc
xor
flds
jle
mov
cwtl
push
mov
shrl
lods
inc
aad
cmpsb
xchg
push
push
testb
les
imul
pushf
iret
out
imul
in
jne
out
inc
icebp
and
pop
and
mov
stos
popa
inc
ljmp
xchg
std
aaa
lret
mov
or
push
pop
popa
pop
jmp
inc
cli
xchg
js
pop
jne
insb
fs
xor
cmpsb
outsl
icebp
jns
mov
movsl
inc
jge
and
ds
cwtl
loopne
and
jno
sub
push
icebp
mov
or
rorl
cmpsl
and
cmpsb
scas
pop
jo
xlat
pop
mov
mov
ds
mov
ds
rorb
in
dec
xor
dec
popa
ja
cli
arpl
jge
stos
roll
pop
int
jns
jnp
jmp
in
push
loop
in
jp
outsl
xchg
in
dec
pushf
das
cld
loopne
or
data16
loope
stos
repz
inc
cmp
inc
mov
mov
inc
movsb
mov
lret
lock
push
cld
inc
int
leave
ror
bound
jo
mov
xchg
mov
rcr
lcall
fcomip
cli
fs
sub
insl
sub
and
push
adc
or
insb
scas
mov
mov
orb
pop
mov
push
test
out
push
insl
xchg
pop
pop
sub
fs
sub
push
dec
jae
xor
pop
clc
outsb
orl
push
pop
sub
jg
aaa
ja
dec
jmp
push
test
out
xor
or
and
sbb
push
test
shrl
jne
lock
mov
push
jno
jge
inc
and
lods
lret
sub
data16
or
movsb
mov
inc
and
add
mov
push
adc
mov
in
out
dec
cmp
ret
xor
int3
fs
ss
sub
push
filds
loope
shll
push
psrlq
inc
fildll
stc
and
dec
test
je
cmp
repz
mov
mov
mov
stos
sti
sub
pop
mov
mov
add
outsb
je
xchg
test
mov
push
lcall
dec
lods
dec
iret
aas
movsb
in
xor
imul
dec
mov
cmpsb
loopne
ja
aad
or
and
inc
dec
cld
mov
or
pop
mov
lods
jo
sbbl
hlt
dec
mov
mov
pop
inc
out
dec
pushf
sub
sbb
addr16
into
xchg
and
bound
jmp
scas
dec
inc
test
sbb
push
out
add
push
push
stos
pop
shll
lret
sub
cmpsl
mov
cmp
and
cwtd
test
and
pop
mov
shl
pop
out
xchg
repnz
cltd
test
stos
sbbl
mov
sub
xlat
mov
in
inc
mov
adc
rcr
je
add
pop
push
jp
andl
ds
outsb
inc
into
push
fsubl
aad
or
aam
popa
push
lods
mov
cmp
dec
adc
xchg
adc
dec
push
inc
or
add
jae
sub
adc
arpl
cltd
and
jb
in
dec
test
pushf
inc
loop
ret
lock
and
dec
sub
sub
ret
add
mov
or
cmp
inc
sbb
jno
aad
mov
in
jbe
cmp
and
inc
outsb
jo
sbb
data16
and
outsb
icebp
pop
arpl
dec
or
int3
push
fldcw
aam
push
jp
push
in
lods
leave
inc
fidivs
xor
ret
pop
push
mov
xchg
aam
test
and
xchg
sub
rcll
or
sub
movsb
push
fildl
mov
inc
xchg
popl
inc
mov
mov
negb
sahf
inc
dec
loope
and
jb
stos
dec
mov
mov
daa
in
push
add
mov
sbb
adc
int
xlat
adc
call
mov
imul
dec
adc
lods
lock
mov
notb
ds
cmc
push
or
rorb
sbb
aad
nop
negb
ud1
insb
fldl
mov
mov
lcall
ret
aad
mov
dec
out
adc
cld
shlb
add
or
sub
imul
jle
push
sub
xlat
cmp
insb
leave
mov
cmpl
sbb
cmp
cli
mov
mov
rolb
neg
inc
shlb
mov
in
loope
jle
inc
sbb
dec
outsl
popl
in
mov
mov
xchg
pushf
pop
lods
shl
leave
negl
aad
mov
lods
push
cmpsb
sbb
lret
into
sub
lret
dec
stc
movsb
push
aas
lods
xor
cmp
ret
mov
cmpsl
ljmp
subl
mov
add
xchg
push
pop
ret
fs
pop
fistpl
clc
dec
frstor
dec
dec
es
mov
cwtl
fisubrs
mov
dec
daa
out
test
rcpps
jns
sbb
int3
pop
push
fwait
cmpsb
adc
xchg
lods
shrl
cmc
div
inc
cmp
int3
mov
jns
sbb
mov
push
adc
add
into
xchg
inc
stos
inc
and
cmp
jl
xchg
lret
push
xchg
pusha
in
idiv
outsl
je
test
jne
mov
adc
adc
pop
fidivrs
fsts
popf
push
mov
or
or
jnp
cli
xchg
jg
test
cltd
loope
sub
data16
and
add
fwait
test
and
jmp
addb
mov
cmpb
mov
jb
enter
cmp
rcrb
ds
or
mov
cmp
sub
adc
pop
jle
mov
leave
adc
push
ret
mov
inc
xchg
adc
inc
call
pop
inc
loopne
addr16
or
push
fsts
xchg
pop
ss
push
lods
xchg
sbb
ficomps
xchg
addr16
bnd
fadds
loop
push
test
push
int3
sbb
jbe
pop
dec
add
jnp
fwait
sub
adcl
push
mov
cmp
mov
add
in
lock
ficomps
mov
sti
push
cmp
mov
fbstp
push
dec
xchg
dec
jbe
push
and
sbb
pushf
loop
xchg
push
test
mov
pop
pushf
mov
cmpsl
pop
fsubrl
test
int3
and
outsl
adc
xchg
add
jnp
lea
xchg
xchg
je
jecxz
and
push
push
sub
aam
inc
loopne
pop
jmp
andb
xchg
sbb
xor
lock
rcl
insb
out
pushf
test
jge
xchg
sub
loop
fistpll
inc
adc
mov
inc
mov
fs
ljmp
fdivs
pop
mov
adc
mov
repz
lods
push
test
dec
add
fcompl
add
jno
xchg
mov
loope
mov
pop
or
rcl
scas
stos
mov
inc
mov
icebp
nop
push
jae
add
xchg
mov
mov
test
ficompl
das
lret
push
push
movsb
cmp
mov
rcrl
xchg
aad
addl
xchg
push
adc
inc
test
ret
add
nop
cmpsl
jg
cmp
ja
jmp
dec
addr16
jns
mov
fwait
mov
icebp
pop
aaa
addl
inc
out
or
cld
mov
dec
xchg
rorb
xchg
aam
test
outsl
cmp
movsl
call
fisttps
ljmp
outsb
mov
iret
cltd
mov
test
xchg
mov
sub
inc
cld
test
mov
add
pop
cmp
xchg
add
insb
sub
insb
push
outsb
jle
xor
cs
xchg
jne
enter
in
arpl
pushf
dec
push
sahf
mov
add
insb
setno
jg
loope
aam
pop
stc
dec
jp
push
outsl
pop
jae
int3
mov
mov
imul
fcmovu
test
cmp
pop
test
mov
jl
mov
jnp
mov
dec
mov
cmc
push
mov
sub
mov
std
inc
or
loope
lds
mov
fisubl
dec
dec
int3
into
dec
mov
fsubs
rcrl
arpl
pushf
xor
mov
xchg
out
arpl
mov
cs
pop
and
test
xchg
mov
sbb
or
shrb
cmc
mov
xchg
repz
stc
jae
stc
lcall
xchg
mov
xor
iret
out
pop
mov
cmc
loope
stos
lock
fists
fwait
ljmp
loopne
lea
dec
es
mov
and
and
das
ret
jecxz
insb
inc
pop
mov
mov
or
popa
pop
leave
inc
enter
mov
xchg
xor
add
mov
pop
jg
jno
roll
cltd
dec
lret
pop
xor
push
mov
sti
ljmp
shll
xor
test
insb
std
insb
mov
lahf
std
xor
rcr
scas
js
enter
lcall
test
roll
addl
addr16
fisubl
fidivrs
mov
ret
mov
mul
cwtl
mov
dec
loop
gs
pop
shlb
cli
popa
mov
scas
icebp
test
cmp
ret
add
cmp
test
dec
imul
push
adc
imul
leave
push
adc
movsb
mov
mov
movsb
inc
lret
sub
or
outsl
and
and
sarb
aam
adc
test
iret
add
cmpsb
mov
pop
mov
fidivrs
dec
mov
sub
adc
cmp
pushf
mov
test
cmp
movsl
andl
jae
adc
mov
inc
xor
mov
in
shrb
push
sbb
das
pushf
dec
dec
bound
cmp
rorb
negb
pop
adc
pop
filds
add
mov
lcall
sub
jle
inc
and
ja
aad
and
sub
pop
sub
cmp
pop
xchg
add
shlb
fldt
ss
xlat
add
cmp
xchg
add
je
cmp
in
jl
imul
push
inc
push
pop
jmp
adc
mov
jae
aas
shll
jnp
roll
and
lret
inc
dec
int
sahf
cld
jge
or
xlat
jae
ret
pop
sbb
or
dec
adc
jge,pt
push
xor
or
addr16
dec
pusha
or
dec
cmp
test
insb
mull
jg
popf
dec
das
jecxz
sarb
adc
add
adc
mov
mov
mov
sahf
data16
add
popa
cmpsb
insl
and
pop
adc
popa
in
inc
dec
jle
mov
push
pop
lret
push
out
in
and
gs
dec
jle
sbb
mov
xchg
push
xchg
test
sbb
icebp
cltd
add
rolb
repnz
pop
cmp
loop
imul
jbe
jg
xchg
loopne
xor
neg
pushf
cltd
and
shlb
mov
call
dec
xor
in
dec
lcall
mov
jl
mov
adc
rcl
xor
sbb
int3
sub
or
dec
lea
lods
cmp
sti
fldl
sub
iret
in
mov
push
mov
sbb
rolb
shrb
dec
jp
mov
xchg
mov
adc
ja
jl
xor
subl
pop
je
gs
js
gs
fiaddl
sub
cmp
bound
push
repz
mov
mov
int
in
sti
push
cs
push
sbb
fisttps
iret
fldenv
test
mov
das
mov
add
inc
shll
bound
ljmp
add
stc
xor
pop
adc
cmp
rcl
fld
xchg
lcall
sub
adc
lods
scas
pop
jg
jno
aam
aaa
jl
push
lret
test
pop
push
call
in
jno
xchg
pop
imul
push
test
sbb
aaa
jnp
xlat
add
inc
cmp
mov
or
leave
std
out
mov
pop
jo
in
pop
push
out
rcll
pop
dec
adc
sbb
mov
fimull
into
cmpsb
jae
pop
movsl
ja
fs
cwtl
pop
inc
pop
pop
push
mov
leave
in
out
repz
pop
shrb
inc
ljmp
dec
adc
lea
mov
inc
insl
or
cld
add
fwait
pop
mov
outsl
fadds
xor
call
fdivrs
adc
lret
cmp
cmp
orb
jge
imul
pop
repnz
inc
cmp
movsb
mov
jp
call
xor
jo
inc
nop
xlat
ret
icebp
pminsw
and
xor
jmp
inc
push
lret
je
cwtl
dec
and
aaa
jo
std
bound
jp
fwait
divb
jecxz
pushf
cmp
js
pusha
enter
divl
imul
cmc
adc
sar
dec
adcb
pop
scas
in
cld
adc
jne
mov
add
jbe
shll
fimuls
popf
je
cli
jp
mov
cmpsl
jle
xor
ret
xchg
rorb
rcr
sub
fcmovu
dec
push
and
pop
shlb
sbb
lds
js
jbe
shlb
mov
jae
xor
sbb
sbb
mov
mov
dec
das
sbb
push
loopne
push
sub
sti
pop
pusha
sub
inc
negl
mov
inc
sub
xor
cmp
testb
xor
mov
pop
inc
and
fs
adc
outsl
arpl
test
dec
add
daa
push
mov
cwtl
in
aad
in
push
cmp
or
cmp
mov
out
jns
jbe
sub
subl
xchg
mov
mov
aaa
stos
adc
shll
xchg
stos
and
shll
xchg
mov
cmp
add
push
adc
mov
xchg
stos
js
stos
loope
xchg
dec
ss
xor
mov
loope
mov
cmp
mov
insl
rolb
pop
int3
gs
cld
ss
aam
pop
sub
idiv
jmp
movsl
pushl
or
dec
jl
dec
stos
mov
scas
inc
iret
aaa
stos
fbstp
dec
int3
fldl
cmp
scas
pop
jo
cmp
arpl
xor
sub
jne
loopne
push
sbb
sbb
dec
xor
je
push
mov
sub
rcll
ret
mov
mov
cmp
in
call
int3
aaa
mov
fucom
inc
xor
mov
aad
mov
ss
push
stos
jge
add
sub
sbb
jne
inc
mov
mov
xchg
add
popf
mov
mov
mov
cmpsl
sbbb
inc
or
jne
lods
xchg
shrl
movsl
popa
add
fists
and
js
je
xor
and
mov
dec
push
xchg
dec
cmpsb
hlt
pusha
push
and
jmp
jecxz
ljmp
xor
xchg
push
in
add
leave
add
inc
mov
mov
dec
mov
jg
popf
mov
lea
cmpsl
aaa
cmc
aaa
into
sub
test
adc
dec
pop
jg
aaa
les
ss
shl
fs
pop
inc
lods
or
aad
rcr
pop
aas
jmp
xchg
shld
fcomip
xchg
jbe
adc
cmp
icebp
scas
push
loope
orl
popa
xchg
pop
add
enter
scas
inc
xor
fsubrs
cltd
pop
int3
outsl
arpl
imul
xor
xor
mov
imull
jp
pop
xor
pushf
cmc
mov
addl
dec
sbb
push
jecxz
testb
xor
aas
lock
daa
lock
imul
insl
xor
or
jns
cmp
repz
sub
test
mov
data16
arpl
jg
or
xchg
xchg
je
add
jge
pop
jns
sub
les
popf
xchg
cld
into
cmc
mov
out
jnp
inc
rcll
es
mov
adc
and
mov
divl
mov
subb
adc
cltd
aam
xchg
and
out
mov
xchg
inc
cwtl
jle
sub
outsb
test
les
dec
pop
into
push
ss
rcr
fwait
ja
add
test
gs
out
jmp
scas
xchg
xchg
lea
ror
jg
mov
test
dec
sbbl
pop
cmp
and
and
popa
adc
out
adc
shll
lret
push
lahf
xor
or
xchg
pop
and
pop
shlb
sbb
ss
test
and
enter
and
inc
sarb
int
mov
jno
mov
sub
cmp
adc
mov
sbb
sbb
inc
push
lods
je
dec
imul
xchg
cld
shll
inc
popf
test
jae
mov
dec
loop
lret
aas
cmp
add
fs
lea
shrb
mov
ror
pop
dec
dec
xlat
movsb
in
or
imul
jb
ja
cmpb
out
mov
in
mov
gs
popa
ret
aad
icebp
sub
mov
lds
push
pop
pop
inc
shll
push
stos
cmc
mov
adc
add
fildll
pop
xor
mov
lret
inc
dec
xchg
mov
xor
xchg
pop
mov
or
scas
mov
stos
js
bnd
fiadds
inc
mov
mov
push
pop
fwait
sti
sub
dec
loop
sub
dec
xor
ret
mov
shr
pop
add
fidivs
cmp
adc
push
mov
movsb
ret
jns
adc
sarl
sub
mov
mov
mov
stc
mov
movsl
or
and
fdivrp
xlat
popa
fisttpl
test
mov
aas
sub
xchg
cmpl
sbb
lock
xor
popa
sub
sbb
pop
sbb
add
xchg
lret
mov
xor
fwait
call
pop
in
cltd
std
cmp
loop
and
mov
and
xchg
mov
mov
subb
hlt
outsb
add
sub
repz
add
pop
mov
cmpsb
xlat
dec
mov
mov
add
or
scas
pop
pop
lahf
cmp
adc
and
jb
and
test
and
push
add
inc
cmp
rclb
mov
dec
pop
dec
sbb
ja
mov
fsubrs
jnp
shrb
icebp
test
cmp
sub
jp
jnp
arpl
mov
out
xchg
xchg
aam
in
test
sub
xor
stos
sbb
ljmp
das
sbb
pop
fsubr
mov
jge
cmp
mov
mov
sarb
loopne
idivl
ds
or
mov
outsb
jge
xchg
sbb
test
movsl
divl
cli
test
dec
fdiv
pop
lret
jo
push
jecxz
test
test
xchg
cld
jg
shrl
cmp
sub
inc
les
loope
popa
aas
adc
push
shrb
adc
outsb
aas
sub
mov
ss
mov
sub
mov
push
mov
mov
or
sub
popf
fsubrl
outsb
push
test
dec
arpl
outsb
inc
pop
scas
sbb
cmc
pop
mov
lret
movsb
push
sbb
mov
fs
dec
inc
mov
dec
xchg
jmp
sub
clc
call
inc
mov
shlb
sbb
mov
dec
mov
push
fdivr
aad
imul
cmp
leave
mov
pop
fnstcw
push
adc
fisttps
jle
insb
out
mov
and
fildl
pop
std
push
int3
cmp
into
cltd
xor
subl
sbb
inc
lahf
and
xor
xchg
sbbb
push
xor
pop
jae
xchg
lods
inc
push
rcrl
stos
mov
test
pusha
cmp
rcrb
idivb
mov
push
insb
scas
mov
jo
pop
std
lret
mov
out
and
movsl
jg
mov
lahf
lret
fldt
mov
push
negb
les
sbbb
xchg
loope
lods
je
test
xor
stc
rclb
fmuls
adc
jbe
xchg
sti
cmp
stos
jns
sbb
inc
sbb
loope
leave
or
int
sub
testb
jp
xor
add
push
imul
add
test
das
xchg
xlat
jge
shll
gs
pop
add
shlb
fnstsw
sub
sub
jle
mov
faddl
dec
cmpb
movsl
lods
cmpb
pop
adc
testb
adc
push
stos
xor
xchg
sub
out
jmp
clc
push
aas
dec
xchg
add
lahf
xor
mov
mov
pop
mov
dec
decb
add
push
ror
arpl
push
push
subl
ret
loop,pn
fadd
and
and
out
xchg
sbb
jmp
and
jo
cmpsb
xor
push
pop
and
jnp
mov
cmpsb
push
arpl
xchg
lcall
mov
dec
pop
pop
xor
pop
adcl
and
mov
adc
add
arpl
jmp
inc
int3
test
adc
mov
out
mov
test
mov
mov
jecxz
or
shll
insl
sbb
jp
jle
pushf
lret
pop
jb
insl
xor
add
je
dec
sub
pop
mov
mov
test
daa
rorb
leave
aaa
repnz
bnd
jns
push
adc
jno
roll
fiadds
mov
enter
in
add
orb
pusha
xor
pushf
fiaddl
inc
cmp
int3
pop
xchg
adc
int3
lea
je
xchg
pop
sahf
out
lret
pop
gs
pushl
adc
insb
out
cmp
sbb
sub
inc
and
add
insb
push
std
xor
cmp
xchg
es
sbb
and
jle
mov
scas
xchg
gs
in
test
sbb
inc
adc
pop
fwait
sub
int3
mov
lea
fmull
add
fbld
test
les
mov
addr16
sbb
andl
push
fidivl
or
loope
enter
pop
mov
cmpsl
sahf
push
adc
ja
dec
and
xchg
movsb
repz
pop
jp
pusha
mov
jbe
cli
cld
cmpsl
mov
pop
in
dec
pop
icebp
dec
dec
sbb
cli
nop
rcrb
mov
sub
lock
or
mov
jbe
imul
jbe
stos
push
mov
or
stos
jg
stc
insl
and
jbe
lcall
movsl
inc
adc
imul
pop
test
xlat
xchg
stos
jecxz
fs
mov
stc
jp
data16
clc
je
jle
fidivl
mov
int
jbe
cmp
out
loope
insb
inc
mov
out
gs
mov
outsl
test
add
xor
loopne
dec
sbb
adc
adc
popf
sub
aam
xchg
fisttps
sti
mov
or
inc
add
int
ss
mov
add
pushf
pop
aaa
xor
sarl
addr16
lcall
mov
xchg
jge
icebp
push
cld
or
push
jbe
pop
cmp
jns
mov
mov
jle
pop
shrb
js
xchg
call
mov
sub
pop
inc
push
pusha
enter
jbe
pop
ret
mov
icebp
jmp
pushf
lds
jecxz
loope
mov
lea
push
les
bound
lods
cltd
int3
cmp
or
pop
xchg
mov
push
cmpsl
cmp
ljmp
sbbl
ret
lea
mov
or
add
pop
mov
lods
xchg
xchg
call
mov
pop
pop
fwait
mov
pop
or
cltd
pop
mov
fwait
mov
or
es
lahf
cli
push
cmp
out
dec
add
inc
insb
pop
xchg
gs
or
pop
inc
loop
shlb
nop
pop
and
je
std
or
sbb
bound
mov
movsl
xor
pop
insl
idivb
inc
cmp
out
inc
jge
mov
dec
stos
xor
popa
jge
shll
ja
outsb
inc
clc
jl
pop
and
in
call
add
rcrl
push
dec
or
popf
scas
fs
push
push
jns
popa
and
push
jo
add
pop
jecxz
mov
or
add
int3
jne
add
push
jp
hlt
and
add
sahf
adc
stos
popa
insl
mov
mov
adc
lods
dec
iret
repz
xchg
rcrw
push
mov
pop
and
or
add
bound
adcb
cmpsb
xor
lcall
in
ret
dec
nop
pop
lea
and
jge
mov
push
sub
fisubl
xor
dec
pop
jns
pusha
pop
xor
mov
or
push
push
es
das
adc
sbb
sub
std
mov
shll
lret
dec
das
push
loopne
xor
pop
mov
sbb
mov
cltd
scas
leave
lret
and
sbb
jmp
std
xor
xchg
mov
inc
sub
insb
or
jle
imul
nop
sub
into
lea
out
jmp
or
ljmp
cmpsb
mov
cli
push
not
ret
adc
js
mov
mov
inc
testl
cmc
hlt
inc
push
inc
cmp
pushf
movsb
inc
std
push
cmpsb
xchg
add
xor
dec
add
in
je
aam
sub
xor
sbb
mov
clc
gs
cmp
pop
add
mov
inc
xchg
xchg
and
int
mov
shrb
fdiv
into
into
jb
cli
pop
popa
dec
push
pop
leave
outsb
lahf
jno
xchg
std
in
sub
and
sti
stos
mov
loope
add
pop
repnz
jns
aad
xor
imul
mov
jp
rolb
pop
leave
add
or
imul
sbb
sbb
cld
insl
out
sahf
or
pop
repz
ja
mov
mov
sub
sbb
fs
pop
scas
xorb
enter
inc
and
jno
pop
hlt
cli
sub
outsb
hlt
popa
popf
lcall
leave
xchg
and
inc
in
imul
xchg
mov
clc
inc
enter
mov
sub
xor
jne
ja
inc
adc
in
ljmp
std
xchg
iret
test
into
or
jae
sbb
bound
dec
aad
lcall
pusha
lods
push
jg
dec
or
add
push
mov
fdivl
sub
mov
fwait
fwait
fdivs
out
xor
fidivrs
adc
out
out
sub
ljmp
push
orl
popf
jns
pop
aas
imul
lahf
mov
out
cld
lock
sti
mov
cmp
ds
pop
xchg
outsl
inc
es
mov
jae
cmp
insb
sbb
xor
loopne
nop
push
enter
cltd
iret
xchg
lret
arpl
ficompl
sub
jecxz
push
in
or
into
dec
sbb
cmp
pop
jne
mov
aad
add
mov
sbb
mov
push
in
cmp
data16
xchg
lea
insl
inc
adc
outsl
test
addb
inc
push
lret
inc
pop
rolb
xchg
adc
repnz
mov
pop
xorb
movsb
bnd
lcall
add
mov
fistpl
lds
xlat
xlat
ret
popa
aas
inc
jmp
xchg
out
out
das
fists
fcmovu
xchg
loope
test
jnp
sbb
pusha
push
add
dec
jne
mov
lret
inc
pop
ja
test
ret
call
and
push
fmuls
push
inc
pop
out
xor
xchg
mov
popa
push
cwtl
loope,pt
jae
xor
stos
imul
fnsave
iret
shl
in
decl
xchg
inc
lds
add
rolb
test
lea
scas
cs
mov
out
and
leave
mov
bound
int
mov
push
popf
fucomip
xorl
shrl
add
js
or
lods
mov
mov
pop
inc
mov
mov
je,pn
int
xor
and
inc
cmp
fpatan
mov
imulb
cmp
iret
js
or
in
outsb
push
and
jbe
out
cmp
notb
jns
cltd
in
idivb
bnd
loopne
cmp
es
jmp
cmp
adc
xchg
test
jo
cld
mov
dec
lcall
mov
cwtl
repz
and
cmp
cmp
push
xor
jp
mov
jle
pop
scas
mov
fildl
imul
mov
cmp
cmp
es
les
add
ja
outsb
lds
adcb
xchg
adc
lcall
mul
xchg
clc
xchg
cmpb
push
add
fsts
push
repnz
adcb
jl
lock
sbb
insl
mov
pusha
dec
mov
inc
and
test
jmp
sub
rorb
mov
cwtl
mov
add
mov
mov
cmp
inc
shrl
jl
mov
movaps
mov
sti
jl
cmpsb
fnstsw
pop
lahf
stos
fwait
mov
push
push
pminsw
fs
je
xor
jecxz
popf
inc
shlb
jecxz
cmp
into
xchg
add
rorl
aam
fsubrs
pop
sub
pop
sbb
test
adc
cli
mov
and
std
jno
mov
std
in
orb
xchg
lret
fwait
mov
add
sub
or
pop
mov
xor
imul
push
testl
dec
sub
movsl
mov
icebp
pop
mov
ret
shr
mov
jno
xor
popa
mov
inc
sbb
enter
pop
inc
push
loop
cmpsl
mov
stos
ret
lods
cwtl
ss
fldl
xchg
popl
lret
dec
sbb
add
push
or
adc
jne
sti
xchg
mov
hlt
lret
mov
fdivrs
clc
mov
sub
jmp
mov
ljmp
ds
pop
fneni(8087
hlt
add
sbb
hlt
mov
sbb
jo
repnz
clc
arpl
push
mov
xchg
ret
out
lret
add
push
push
pop
or
les
lods
call
out
sbb
xor
sbb
loopne
inc
and
mov
adc
insb
out
in
test
clc
pop
jns
dec
js
popa
mov
aaa
insl
push
inc
and
sbb
ss
arpl
ds
int3
or
out
jg
inc
pop
outsb
ljmp
stc
fs
add
movsb
sbbl
cmp
jbe
loopne
push
and
orb
js
add
push
jno
xor
icebp
movsl
xor
aad
cwtl
ds
and
sti
jno
loop
jl
cmp
jo
xor
imul
mov
fcmovne
inc
mov
xchg
mov
repnz
mov
xchg
xor
inc
test
mov
fldenv
insb
js
mov
mov
pop
sub
in
pop
imull
mov
mov
aaa
jge
testl
pop
test
xor
sub
add
adc
std
out
je
cmp
dec
dec
push
int3
mov
js
mov
cwtl
inc
xchg
add
cmc
das
inc
dec
pop
dec
xlat
in
cmp
lods
and
and
dec
adc
push
cwtl
mov
jge
xchg
les
push
or
rcll
daa
std
push
dec
dec
popf
rorb
ljmp
into
loopne
sub
push
js
xchg
push
hlt
aam
movsb
pop
in
addl
xchg
pop
lods
cmp
add
pop
mov
stos
mov
movsb
push
mov
movsl
pmaxsw
mov
popa
std
xchg
fsts
test
je
daa
mov
cld
sub
push
push
lea
mov
jecxz
packsswb
and
addl
mov
pop
xor
or
imul
pop
dec
inc
int3
out
shl
in
pop
cmp
scas
push
and
out
xchg
daa
movaps
xchg
aam
mov
cld
fs
nop
pop
pop
popf
out
push
stos
xor
loope
iret
pop
insb
add
or
jae
pop
mov
enter
rorb
flds
pop
das
imul
inc
popa
test
out
pop
mov
mov
clc
scas
and
push
cwtl
stc
aas
xor
xchg
icebp
pop
in
test
lods
add
jae
aas
dec
sub
xchg
hlt
push
out
mov
cltd
mov
testl
shll
out
and
inc
bound
jnp
into
fisubrl
test
jbe
mov
scas
add
insb
jae
push
loopne
and
out
push
test
aam
fxch
nop
jecxz
mov
inc
xchg
inc
imul
lds
addr16
hlt
add
cmp
mov
mov
adc
add
jae
jae
inc
outsb
cmp
scas
out
cmpb
outsl
aam
ret
xchg
fdivl
jbe
sub
call
cs
xor
pop
sub
mov
loopne
xchg
pop
outsb
daa
push
or
inc
jne
inc
cmp
test
std
mov
mov
cli
sbb
or
or
dec
inc
inc
cmp
out
pop
adc
decl
icebp
ds
adc
aam
or
push
lds
mov
sahf
add
jge
imul
sar
sbb
pop
jmp
cmp
iret
lock
or
mov
test
pop
jno
addr16
mov
adc
roll
or
nop
lret
out
sti
les
push
dec
aad
notb
repnz
fisubrs
mov
sbb
mov
call
xor
outsb
add
or
fistl
fdivr
jmp
fdivl
repz
fstps
lods
mov
les
loope
mov
sbb
xor
test
inc
inc
or
rorl
inc
or
mov
sub
xor
iret
sbb
or
in
mov
mov
fstp
or
data16
cli
lea
test
cmp
fcomps
icebp
xor
mov
mov
mov
adc
inc
out
lods
mov
jae
mov
mov
dec
pop
mov
test
fsts
mov
sbb
rclb
push
inc
shrl
add
mov
into
adc
push
ljmp
jns
ret
dec
out
sbb
mov
cmpsl
rol
fxch
pop
ret
mov
fdivrl
setg
test
push
mov
pop
out
sub
add
sbb
movlps
xchg
add
adcb
cmp
jno
inc
aas
fdivl
jle
fidivrl
lock
outsl
dec
push
jae
ljmp
cmovo
test
loopne
std
and
das
imul
sbbl
push
cmpsb
jp
shrb
std
sub
jmp
loop
push
pop
adc
sub
dec
popw
xchg
cs
mov
aad
mov
je
testb
dec
mov
xchg
inc
nop
inc
std
stos
push
adc
mov
jo
xchg
sbb
push
data16
int3
add
sub
imul
cltd
in
jae
test
push
sti
testb
mov
ret
notl
fldcw
mov
call
icebp
popa
push
lds
jge
std
aaa
dec
push
loop
pop
and
jbe
jo
sbb
outsl
push
cmpsl
cmp
movsl
jo
xchg
pop
push
insl
out
mov
clc
xor
out
in
fmuls
sub
and
adc
ret
and
mov
cs
cmp
or
jmp
int
mov
mov
mov
imul
and
mov
pop
sub
or
scas
jl
jnp
mov
xor
sbb
sub
call
push
pop
sub
into
ds
pop
mov
lahf
jns
pushf
mov
mov
mov
xchg
dec
xchg
inc
mov
add
je
gs
xor
stos
and
outsb
cmp
fisubrl
cmp
xchg
cmpsl
pop
add
stos
xlat
test
inc
cmp
jg
xor
cld
mov
and
lea
std
push
jb
xchg
sbb
xlat
adc
or
aam
inc
mov
enter
cmpsl
lock
rclb
leave
mov
je
pop
lret
outsb
sub
dec
inc
rorl
inc
mov
stos
out
fwait
mov
xor
and
push
jo
out
mov
arpl
ret
jmp
js
cmpl
sub
mov
fistpl
popa
fdivr
add
push
jmp
xor
clc
adc
pop
jae
ja
cltd
xor
push
add
mov
out
movsl
outsl
pop
jbe
jle
or
or
hlt
mov
fisubrl
mov
pop
test
punpcklwd
mov
cli
test
xor
xchg
int3
lea
xchg
pop
pop
jl
adc
ja
add
xor
shrl
fucomi
or
mov
and
or
or
data16
inc
adc
enter
inc
pushf
adc
leave
ss
mov
xchg
add
mov
fistps
cmc
repz
jmp
and
mov
xor
loop
xchg
sbb
dec
arpl
aam
xor
mov
xlat
inc
int
das
aad
mov
loope
dec
daa
or
xor
dec
jp
repz
mov
pop
sub
pop
xor
shll
sub
dec
sbb
adc
bound
les
push
out
sub
mov
out
jne
notl
addr16
dec
push
mov
addr16
dec
adc
fldcw
jnp
mov
push
and
sbb
push
jge
mov
aaa
mov
push
jbe
sub
lods
fs
call
ljmp
jge
ss
dec
push
and
fs
jnp
addr16
inc
jl
add
imul
bound
gs
icebp
sub
cltd
mov
pop
hlt
mov
xchg
out
mov
xchg
dec
lcall
push
or
xchg
mov
gs
out
inc
add
stos
shrl
dec
adc
jmp
mov
in
mov
cli
sbb
in
inc
orl
pop
and
add
shll
lock
outsb
push
mov
mov
cli
xchg
sahf
adc
inc
inc
mov
hlt
add
stos
add
push
rcrb
jb
pop
sbb
loopne
or
into
out
mov
dec
movsl
xchg
xchg
lret
je
xorl
cmp
mov
mov
sbb
cld
dec
add
repnz
es
lock
sahf
mov
cld
enter
mov
cmp
push
sub
jae
fdivs
mov
inc
inc
xchg
inc
jne
loop
daa
jae
mov
out
and
leave
pop
or
into
and
xlat
std
shr
xchg
bound
iret
inc
ds
mov
pop
imul
add
cwtl
insl
mov
cmp
mov
cmp
or
js
cpuid
push
incl
add
shlb
sbb
push
jnp
ja
pop
adc
fimuls
aas
and
dec
push
into
lods
xchg
lcall
cmp
fcmovu
loope
mov
in
or
jg
test
dec
jb
sbbl
pop
pop
adc
jbe
roll
mov
push
popf
dec
mov
cli
jmp
mov
add
mov
pop
lcall
and
jno
aas
loop
sbb
push
inc
inc
mov
mov
push
mov
test
mov
clc
xchg
iret
mov
in
sub
ffree
out
add
int
sbb
loope
clc
adc
mov
mov
inc
fiadds
sbb
jnp
sahf
inc
out
ftst
ja
cld
pop
inc
sbbb
xorl
inc
jmp
fistpll
push
jb
pop
sarb
dec
popa
lods
jle
aad
das
enter
enter
out
bnd
fmuls
scas
scas
dec
xor
sub
xchg
out
out
jne
mov
sbb
ja
push
xchg
cli
gs
mov
mov
js
in
test
pop
jnp
xadd
sarb
sahf
push
outsl
cmpsb
insb
ss
jbe
dec
push
aaa
inc
inc
jl
addr16
inc
hlt
xchg
push
hlt
jno
jns
clc
mov
test
insl
dec
scas
iret
adc
mov
es
rcrl
xlat
and
and
popf
lret
aas
shrb
aad
mov
ret
inc
test
pop
pop
pop
shr
out
pop
les
pop
pushf
loopne
mov
add
and
movswl
mov
cs
repnz
lods
xor
xor
push
dec
in
dec
lea
in
out
push
pop
fiaddl
dec
lcall
aas
out
xchg
sarb
jp
mov
pop
jle
rorb
mov
jae
arpl
arpl
inc
cwtl
cwtl
dec
xchg
stos
leave
cmpsb
adcb
fisttpl
push
push
jb
or
adc
push
push
xor
push
fidivrl
bound
lock
shll
test
jnp
outsb
ljmp
inc
mov
mov
cmpsl
xorl
dec
mov
sbb
mov
std
add
mov
adc
test
je
rcrb
pushf
scas
loope
frstor
mov
adc
test
out
adc
cmp
add
adc
mov
insb
into
xchg
imul
and
jp
and
rcll
dec
jp
pop
mov
mov
sub
aad
or
popf
out
inc
notl
in
test
xchg
cmp
dec
cmpsb
sbb
xchg
mov
les
repz
je
pop
cmp
pushf
add
aas
dec
enter
nop
stos
mov
enter
or
jnp
icebp
inc
lods
dec
adc
loope
adc
adc
fwait
mov
daa
xorb
rorb
in
in
sub
add
adc
inc
pop
pop
jle
pop
je
push
insb
stc
cmp
mov
out
pop
sbb
fsubrs
dec
add
or
andb
lcall
mov
sub
divl
pop
mov
push
dec
cmp
addl
adc
and
inc
mov
adc
scas
xchg
xchg
int
push
lea
or
mov
inc
call
nop
out
inc
mov
dec
inc
inc
lods
or
pop
inc
mov
xchg
sub
inc
jae
daa
push
pop
in
stc
sar
xor
test
or
test
in
cmpsl
loopne
jo
sub
sarb
xor
ss
lods
and
mov
pop
clc
test
cmp
imul
jbe
cmp
enter
push
js
pop
cmc
lret
test
popf
adc
ja
xor
shll
fcoml
pop
dec
lods
loope
lret
clc
test
add
mov
fstpl
dec
mov
cmp
push
ret
pushf
inc
xchg
out
add
push
pop
in
push
lock
sub
jecxz
inc
loop
jb
dec
in
mov
adc
jmp
inc
cltd
sahf
and
or
sub
lcall
mov
jo
push
adc
push
pop
repnz
jmp
pop
mov
and
dec
add
sbb
fistpl
idivl
jle
aad
adc
icebp
icebp
xchg
cltd
movsb
aas
jecxz
ss
mov
in
mov
out
mov
ret
out
pop
addr16
xchg
inc
test
loopne
push
push
shll
xlat
out
je
dec
mov
vpunpcklbw
call
and
js
leave
sbb
cld
xor
cmp
fbstp
inc
pop
lea
ret
pop
in
push
cmc
test
arpl
add
es
push
xchg
mov
jae
sbb
pop
sahf
inc
mov
jl
mov
aam
fstp
rorl
adc
pop
sahf
lcall
lret
push
push
gs
dec
sub
mov
and
cmpsl
je
pop
sub
pop
fdiv
jne
fmuls
pop
mov
or
mov
stc
jo
inc
xchg
mov
cli
iret
xchg
imul
adc
jbe
fsts
add
iret
stc
xchg
mov
pop
in
sub
loop
push
movsl
divl
sbb
xor
jae
divl
mov
lods
lods
sub
addb
cmc
aad
sbb
test
jp
out
push
gs
into
cmpsl
and
pop
push
jmp
inc
shr
xor
cmp
mov
and
ror
ss
xlat
or
cmc
cmc
cmpb
fidivs
data16
cmpsl
mov
dec
jo
insl
jg
xchg
lock
fcomip
repnz
leave
aam
test
xchg
and
in
cmp
pop
popa
stos
gs
pop
mov
xchg
frstor
loop
jg
out
test
outsl
imul
lcall
ret
mov
lods
icebp
mov
jb
mov
stos
rcrb
stc
push
push
int3
cmp
and
pop
mov
test
mov
dec
jg
push
mov
pop
ror
xchg
cmp
adc
jb
mov
nop
flds
mov
jae
xchg
sub
fldlg2
xchg
inc
iret
mov
insl
cs
jno
sbb
mov
inc
pop
cmp
push
out
loope
jae
or
into
and
inc
loop
cmp
mov
jecxz
mov
outsl
in
cmpsb
push
test
dec
rcr
mov
pop
jbe
in
and
cmp
fsqrt
sub
cs
mov
aas
xor
add
sbb
rclb
mov
aam
mov
fucomp
mov
test
jne
out
imul
sub
cmp
xchg
push
out
xor
sarb
imul
mov
aam
js
push
cmp
sub
add
inc
frstor
imul
jge
xor
adc
sub
inc
ja
mov
or
push
xchg
test
sbb
push
mov
rclb
mov
in
push
aad
and
ret
or
movsl
cli
push
dec
add
push
and
jo
pop
mov
ret
jb
das
xchg
adc
aad
mov
fcmovne
jl
ja
sbb
xchg
mov
cmp
push
sbb
and
lods
push
or
movsl
xor
adc
jmp
add
xor
outsb
dec
in
inc
arpl
insb
stc
cmp
rclb
sahf
flds
das
insb
loopne
idivl
push
test
int3
movsl
push
sbb
sbb
cmpb
jmp
pusha
push
sbb
fdivl
or
mov
mov
adc
push
push
mov
dec
dec
addb
xor
mov
gs
popa
jae
push
sub
push
fsubr
popa
dec
js
xor
adc
ljmp
jge
cmpsb
cmp
jl
push
testl
pop
push
pop
test
js
gs
into
xchg
in
jbe
in
jle
mov
pop
notl
mov
or
in
bound
arpl
cmp
mov
fistpl
xchg
pop
jmp
inc
stos
lds
jle
pop
push
pop
out
sbb
sub
mov
scas
mov
sub
je
aaa
jbe
repz
andb
and
inc
jnp
es
inc
sarb
nopl
rol
mov
das
repz
popf
stos
cmp
mov
mov
cld
mull
dec
pusha
mov
push
jae
cmc
mov
and
stos
xchg
mov
cmpl
mov
sub
jmp
repz
push
inc
das
sub
cmp
and
xor
push
sahf
seta
out
sub
fs
or
lahf
inc
and
mov
mov
mov
or
mov
dec
lcall
ss
jge
mov
push
loopne
or
jbe
shll
push
lret
xchg
pop
int3
fistl
sub
es
sbbl
mov
out
inc
inc
in
into
fstl
shrl
add
test
xchg
lock
jle,pt
xchg
adc
and
pushf
lds
sub
jo
dec
add
cmpsb
inc
iret
cli
loop
sub
cmpsb
mov
fwait
mov
pushf
push
mov
sub
stos
aad
xor
lahf
adc
fiadds
mull
ficoml
aas
mov
sbb
insb
lret
dec
neg
mov
dec
sbb
xor
inc
movsl
or
std
mov
or
fnsave
sub
jge
lret
mov
jbe
pop
fsubrs
shlb
mov
mov
xor
add
lret
test
outsb
mov
xor
call
ror
jge
mov
outsb
cwtl
or
xor
dec
cs
jbe
icebp
dec
sub
in
icebp
sub
pop
orb
lods
aaa
das
jecxz
sbb
in
pop
dec
or
mov
stc
pop
jb
rol
inc
fdiv
dec
into
mov
sub
adc
lock
pop
lods
or
cwtl
mov
int3
xchg
shll
popa
inc
imul
imul
stc
push
cmpsb
cld
ss
sub
pop
cwtl
pop
push
pusha
call
loopne
aas
push
pop
les
xchg
mov
cs
xor
cmc
loopne
and
pop
int3
and
cmp
push
xchg
cmpsl
or
outsl
rcll
dec
add
xor
into
push
popa
imul
repz
pop
jb
loop
or
sar
adc
mov
lods
ret
xchg
jb
add
phaddsw
int
das
icebp
jno
jnp
fidivl
push
lea
insb
xor
gs
xchg
sar
sbb
jg
mov
aam
addr16
xchg
arpl
and
leave
sbb
pop
or
push
cmc
imul
xchg
sbb
adcl
icebp
pop
aad
fcompl
fbstp
aas
in
sub
stos
popf
and
push
sub
bound
sbb
xlat
xor
sahf
mov
jge
xchg
mov
cli
into
and
add
ret
jo
dec
sbb
or
in
jle
push
push
sbb
dec
adc
push
mov
repz
mov
xchg
jno
xlat
or
insb
pop
cmp
fisttps
out
ret
in
pop
lea
cmp
sub
and
inc
or
dec
dec
ret
xor
adc
clc
hlt
add
lret
into
incl
clc
call
push
push
lods
or
mov
push
dec
gs
pop
scas
imul
pushf
xor
in
cmp
push
or
pop
pop
loope
arpl
adc
ljmp
and
aad
mov
stos
dec
xchg
test
mov
inc
sbb
sti
lret
mov
je
and
sub
sbb
inc
mull
mov
xchg
les
mov
inc
rcl
rcr
jo
and
and
sbb
daa
xchg
mov
or
mov
or
testl
push
pop
sub
and
insb
add
hlt
inc
and
int3
mov
jecxz
fisubrs
pop
scas
or
inc
pop
cmc
nop
xchg
inc
jp
es
fisubrl
lcall
fstl
sub
shll
jl
jb
pop
stos
das
xlat
pop
pushf
xchg
lcall
lea
sub
mov
jne
sbb
xchg
shlb
sti
cmp
pop
stos
je
push
pop
loop
dec
fldenv
mov
push
xchg
inc
xchg
test
cmp
jno
cmpsl
ret
sbb
insl
mov
xchg
pushf
or
cltd
cmp
test
lea
jo
jecxz
add
das
mov
or
ret
push
repz
ret
xchg
dec
and
je
sub
xchg
subb
and
negb
icebp
jp
sbb
and
pop
add
fs
sub
out
out
add
xor
xchg
lret
push
mov
js,pt
mov
jmp
xor
jns
mov
test
mov
jns
mov
aaa
add
xchg
clc
xchg
iret
mov
ss
dec
ret
xchg
lock
mov
mov
mov
bound
add
js
dec
pop
xor
sub
pop
test
xor
add
pop
cmp
fldt
and
xchg
test
shll
insb
gs
aam
push
add
and
or
dec
push
cmp
sub
in
pop
outsb
sub
mov
dec
aas
xchg
mov
or
sbbl
or
aad
mov
jg
jg
mov
into
ljmp
mov
and
rcrb
mov
xchg
cmp
xor
xor
dec
mov
repnz
ja
sti
push
mov
sub
mov
fisttps
insl
fdivp
rcll
mov
xchg
xchg
mov
dec
push
add
data16
lea
pop
into
fwait
call
inc
ja
lea
call
push
clc
jmp
sbb
jge
test
in
dec
jbe
and
or
sub
out
aad
aas
adc
fadds
xchg
push
pop
ja
clc
add
xchg
pop
add
jae
sbb
sub
cld
into
adc
mov
add
mov
mov
lods
iret
mov
sub
and
loope
pop
outsb
pop
add
cs
mov
mov
fldt
fnstenv
fistps
iret
dec
in
aam
neg
xchg
push
out
mov
sar
pop
adc
add
inc
movsl
sbbl
push
mov
push
dec
repnz
sbb
jae
mov
fcomps
in
xorb
push
aas
mov
aam
lds
out
push
cmpsl
jle
test
bound
aad
out
xchg
xchg
mov
ljmp
xchg
cwtl
mov
stc
push
and
ja
shrb
xor
loop
pop
mov
lods
lret
push
mov
mov
les
mov
nop
rcrl
cmp
mov
push
push
sahf
pop
jo
mov
sub
push
cmpsl
xchg
push
cmp
jnp
es
pop
mov
int
pop
inc
loopne
adc
jno
repz
je
and
jmp
cmpl
hlt
and
addb
aaa
and
lret
push
lahf
sbb
jbe
cmp
push
rcrl
pop
out
push
popa
les
lock
dec
in
ljmp
pop
stc
xchg
mov
sub
xchg
rclb
push
cltd
mov
stc
stos
pop
jmp
inc
pop
add
int3
dec
xor
fs
out
dec
popa
shlb
test
outsb
inc
ret
cli
xor
jmp
das
jae
mov
clc
pop
mov
dec
cmp
sub
pushl
call
out
idiv
sub
inc
jne
call
into
jnp
pop
sub
cmc
ffree
fdivl
push
and
pop
sbb
mov
and
xchg
inc
mov
xor
push
addr16
and
cmpsl
mov
fildl
sbb
mov
int3
push
inc
pop
cmpsl
mov
adc
xchg
mov
mov
aad
in
jb
insb
push
jbe
movsl
outsb
or
arpl
mov
hlt
pop
cld
jp
push
out
mov
pushf
je
rolb
js
les
es
fsubrp
add
jne
sbb
jbe
pop
loopne
jl
and
mov
push
dec
jo
inc
sbb
mov
adc
repnz
stc
push
dec
ds
lods
dec
pusha
pusha
stos
add
and
add
xlat
in
jge
icebp
cmpsb
fbld
in
add
sbb
add
pop
jno
pop
in
push
dec
jg
xchg
sub
inc
loopne
movsb
sub
pushf
xor
mov
dec
pop
sahf
adc
aaa
xor
add
pop
sub
je
and
jne
pop
cmp
movsb
adc
cmp
jge
cmpsl
scas
dec
mov
or
loop
andb
adc
lret
lods
adc
xorl
stos
jno
jl
xor
subl
fistpll
imul
and
jecxz
xchg
xchg
or
out
mov
int
insl
je
push
push
or
pop
sub
dec
mov
ljmp
dec
mov
push
cltd
sub
addr16
xor
jge
call
jecxz
mov
jmp
xchg
sbb
fwait
pushf
push
lahf
gs
out
xchg
aaa
jp
cmc
pop
cmp
dec
lods
aaa
lock
dec
addr16
stos
inc
jne
lahf
mov
sbb
adc
ret
out
cs
scas
shl
pop
xor
cmp
inc
inc
push
dec
daa
ja
sub
add
mov
pop
popf
add
subb
inc
xchg
inc
mov
xor
push
mov
leave
cmpsb
clc
push
mov
lock
sub
sbb
xor
ja
push
addr16
sub
lcall
subl
sahf
cmc
push
stos
xchg
jl
in
pop
mov
pushf
iret
pop
inc
dec
aas
mov
sbb
imulb
push
cltd
repz
rorb
mov
push
xchg
dec
roll
sub
jecxz
sub
push
lret
dec
lea
push
and
cmp
pop
mov
sub
sbb
dec
mov
cmp
ja
jl
orb
movl
mov
je
add
push
adc
add
jmp
in
pop
xchg
adc
sub
pop
push
out
repnz
les
mov
std
mov
adc
es
std
mov
loop
mov
ret
pop
cmpsb
dec
test
out
out
push
xor
cmp
mov
jge
js
insl
mov
mov
aam
jg
pop
popf
pop
adc
dec
fisubs
hlt
mov
mov
adc
loope
xchg
xor
cli
push
loopne
fidivl
sub
mov
cmp
daa
mov
or
or
cmpsb
gs
js
in
es
push
jl
jbe
mov
pop
adc
mov
rol
mov
arpl
int
sub
jmp
roll
icebp
cltd
call
out
movsb
sbb
or
adc
mov
inc
mov
imul
xchg
adc
pop
cmpsb
adc
in
out
mov
push
loopne
add
imul
je
and
mov
pushf
xchg
fwait
fwait
mov
xlat
mov
mov
stc
hlt
jno
push
push
cmp
stc
push
lcall
cmp
pop
inc
dec
rorl
lds
fsubrl
jp
inc
jle
inc
mov
outsl
adc
sbb
adc
xor
xchg
cmpsl
mov
push
pop
mov
sub
int3
out
arpl
mov
and
cmp
add
xchg
push
into
inc
fucom
push
shl
repnz
push
sbb
sarb
sub
adc
inc
dec
pushf
js
push
xchg
cmp
dec
stc
popa
mov
aas
cmp
xlat
cmp
sbb
push
aas
ds
mov
push
xchg
popf
jecxz
aaa
jno
in
xchg
jecxz
cmc
das
mulb
xchg
dec
push
mov
test
dec
cmpsl
popa
or
inc
sarb
mov
in
popf
ds
pushf
jg
in
ss
jbe
cmc
xchg
aaa
paddd
jp
or
sarl
xor
push
rolb
ret
sbb
push
nop
cmp
bound
jbe
sti
out
and
adc
stc
add
lock
cmp
fimuls
xlat
and
dec
mov
mulb
adc
dec
xlat
jno
add
add
jle
add
sub
shrl
loopne
cmp
jmp
ljmp
jecxz
jge
pop
xor
mov
cmp
test
loop
jne
pop
sub
mov
fwait
mov
rorb
adc
das
xchg
add
cli
ds
inc
cwtl
shlb
push
mov
xchg
je
je
xchg
fimuls
dec
ds
and
mov
cmp
js
cmpsl
in
and
cmp
stc
jbe
pushf
jmp
mov
inc
pop
pop
insb
dec
cmp
call
inc
mov
mov
cvtdq2ps
in
in
sub
repnz
add
imul
xchg
dec
shr
mov
pushf
inc
cmp
sub
mov
loopne
dec
push
and
and
out
fstl
dec
cmp
push
dec
xchg
mov
cmp
sar
ficoml
fbstp
test
mov
pop
andl
jmp
mov
mov
add
xlat
negb
jae
mov
inc
outsl
or
cwtl
or
sbb
sbb
pop
dec
and
mov
ja
inc
add
pop
aam
insl
mov
std
pop
xchg
dec
imul
sub
inc
xchg
or
clc
insb
loope
pop
lret
in
jmp
fildll
stc
out
das
xor
push
in
mov
leave
repz
movsb
icebp
hlt
jecxz
scas
add
xchg
pop
nop
mulb
mov
sub
loop
outsb
fbstp
test
xchg
imul
jle
stos
mov
and
iret
jae
insb
lds
lcall
fcmovu
fsubl
gs
aam
and
addb
gs
mov
fs
jae
leave
shl
mov
loope
push
inc
scas
xchg
out
and
and
lcall
cmp
xchg
mov
ja
mov
popa
push
outsl
push
movl
aad
movsl
lods
inc
dec
dec
or
ret
pop
pushl
mov
rclb
lods
lea
outsb
sahf
jge
nopl
cmp
adc
or
xchg
mov
aam
jecxz
sbb
or
dec
xchg
add
cmp
rclb
sbb
scas
test
dec
fstp
loopne
fcmovnb
icebp
inc
cmp
pop
iret
sbb
and
lcall
loope
or
adc
dec
shrl
ret
pop
int
xlat
hlt
js
nop
mov
jmp
das
push
hlt
jbe
in
fs
ja
movsl
and
ret
popa
rolb
xchg
add
pop
mov
and
jecxz
iret
jno
cli
fmuls
icebp
lea
pop
dec
cltd
push
xchg
sbb
dec
and
adcl
jnp
mov
fisttpll
rcrl
sarl
xor
sarl
into
add
rol
dec
xor
mov
into
outsb
int
cmc
push
push
int3
movsl
push
mov
mov
mov
pop
xchg
imul
xor
out
fimull
fistpl
lahf
sub
sbb
jle
shlb
cmp
ljmp
hlt
arpl
data16
enter
sbb
loop
cmp
pop
xchg
sub
adc
jo
mov
xchg
mov
idiv
lods
sbbb
cmp
or
push
sub
dec
lods
pop
test
cmp
jge
xchg
jbe
enter
mov
je
sub
stos
pop
sti
das
jo
mov
mov
push
pop
ret
rcrb
jecxz
pusha
scas
cmp
sbb
popf
pop
sub
xor
fbstp
mov
ds
xor
mov
imul
fdivl
pop
xchg
xchg
pop
idivb
cli
orl
push
cltd
cmp
jne
rorb
cmp
jnp
mov
pop
or
lcall
addb
jge
aas
sub
xor
cmp
xorb
out
or
pop
dec
mov
std
out
inc
fcomp
int
jbe
clc
loopne
mov
xchg
fsubrs
mov
sbb
adc
add
adc
imul
lcall
cli
or
inc
fst
inc
pop
outsb
cmc
xchg
inc
lret
out
inc
popa
lods
ret
mov
inc
sbb
sub
push
cmp
lahf
xchg
push
inc
mov
mov
dec
fnstcw
mov
adc
xor
jo
aad
data16
sub
faddl
jmp
sub
jge
mov
dec
xor
xor
aas
je
insb
jl
sbb
jae
fs
inc
cmpsl
jne
test
lret
xchg
jb
pushf
add
fs
movsb
shrl
dec
out
adc
nop
leave
arpl
ljmp
jge
push
out
cli
iret
pushf
mov
push
and
stos
mov
and
add
inc
and
mov
mov
or
pop
push
sbb
leave
pop
outsb
cmp
bnd
sub
cltd
inc
jmp
push
fucom
dec
lcall
mov
jl
repnz
or
movsl
ret
pop
jae
clc
mov
jb
add
int
push
sbb
clc
test
into
inc
dec
je
js
fldcw
cmpsb
dec
and
mov
sbb
push
lea
or
xor
add
loopne
adc
sahf
adc
cmpsb
std
cmp
cltd
jl
jl
fbld
mov
cld
bound
movsl
insl
nop
jnp
inc
pusha
stos
mov
mov
adc
out
fwait
sub
sahf
mov
aad
in
les
push
adc
sbb
testb
lret
sbb
adcl
jecxz
jge
xor
in
xor
and
sub
loope
fnsave
pop
xchg
mov
push
jle
test
repnz
jp
push
jp
push
or
mov
shl
js
xor
ror
inc
xchg
pop
xor
or
inc
xlat
pop
roll
xchg
or
ja
xchg
into
cmp
shlb
lods
sub
in
adc
jnp
adc
lods
syscall
mov
mov
add
inc
mov
push
inc
mov
push
mov
lcall
frstor
cltd
jge
scas
aaa
add
rorl
inc
lcall
mov
lret
data16
jb
cld
aam
clc
sarb
testb
adcl
decl
cmc
cmpsl
das
xor
jno
lahf
mov
test
dec
les
jmp
mov
stos
cs
movsl
jnp
nop
rcrl
clc
xchg
push
aas
push
cmp
xchg
pop
dec
sbb
inc
push
out
fcmovnu
mov
sbb
xchg
js
daa
sub
test
jbe
fdivrs
jl
and
int
jecxz
xchg
sub
or
iret
cmp
stc
pop
sahf
sbb
xor
aas
in
and
lds
cmc
daa
mov
cwtl
xor
movsb
xchg
aam
in
incb
jmp
test
shll
shl
dec
push
lcall
cld
xor
mov
mov
rorb
fmull
jae
pushf
insb
ds
out
xchg
or
lea
adc
or
popf
jmp
adc
jb
mov
sbb
test
scas
out
push
adc
mov
and
aad
popf
pop
cld
fwait
aad
mov
pop
pop
shll
mov
inc
cmpsb
into
cmp
dec
xor
xchg
out
orl
test
mov
popf
inc
adc
and
test
in
inc
sub
xchg
inc
out
jle
mov
push
and
mov
mov
cmp
dec
lock
out
sar
call
dec
lea
cmp
jno
sbb
mov
mov
rcrl
repz
push
leave
or
loop
arpl
mov
pop
scas
test
lcall
push
xchg
dec
inc
cmp
jae
mov
adc
push
jno
mov
adc
nop
fs
push
xor
pop
or
pop
adc
pop
sahf
cmp
cmp
pop
sarb
cmp
roll
bound
push
and
sub
xor
jns
das
leave
dec
mov
test
sub
jno
je
clc
or
jnp
call
cmp
and
gs
and
lahf
lret
cmp
sub
cmc
lret
loope
jno
icebp
lods
push
dec
sahf
sub
xor
xchg
arpl
jb
pop
dec
push
testl
xor
rol
sub
out
mov
loopne
scas
iret
lret
add
pop
imul
stos
xchg
iret
pop
inc
ss
pop
inc
and
shlb
fcomi
add
mov
cld
test
push
aas
cmp
ret
movsl
mov
out
jae
jl
loopne
ficompl
lahf
loope
push
test
and
mov
xor
in
cld
jecxz
push
call
adc
fdivs
push
mov
xchg
mov
hlt
mov
insl
cli
mov
lahf
test
adc
lds
imul
fildll
cmp
or
testb
shr
stos
xchg
ret
loope
inc
les
out
in
cmpsl
mov
sbb
mov
mov
mov
dec
and
or
mov
sub
scas
cmp
imul
shl
outsb
sub
or
ret
lods
daa
pusha
in
cmpsb
inc
mov
jbe
xor
jl
inc
xchg
movsb
repnz
popf
outsl
pop
xchg
push
or
out
xchg
arpl
dec
lcall
pop
cmp
dec
ret
dec
lods
sub
pop
aaa
fcmovnbe
cmp
inc
pushf
outsl
add
popa
and
cltd
xchg
out
bound
mov
sub
testl
icebp
xchg
ljmp
cmp
lods
jo
jle
imul
push
int3
fiaddl
xor
pop
call
jbe
cmpsl
fwait
sbb
or
inc
mov
jo
out
adc
sub
loopne
jl
sbb
pmulhuw
xor
sbb
mov
jge
cmpl
inc
into
pusha
push
dec
in
mov
imul
adc
bound
inc
out
push
mov
cmp
andb
rcl
sbb
hlt
xor
or
das
adc
adc
popf
inc
pop
imulb
jl
xor
inc
stos
mov
cmp
cli
xchg
aaa
pop
push
stc
jbe
decl
add
cltd
mov
mov
fists
inc
pop
sub
rcl
call
lcall
and
xor
ret
ss
xlat
and
das
mov
sub
pop
add
mov
adc
mov
sti
cwtl
mov
test
push
popf
pop
jb
leave
pop
sarl
jmp
sbb
iret
pusha
ret
sbb
testl
cmpsl
and
daa
xor
mov
movsb
ljmp
or
mulb
movl
sti
cltd
cmp
add
int
or
sbb
shll
xchg
inc
faddl
jge
sbb
das
fimull
inc
mov
out
aaa
outsl
and
mov
scas
push
les
push
adc
notb
push
rorl
cmp
add
adc
or
pop
rcrb
mov
out
lods
jno
push
add
sbb
dec
push
outsl
enter
dec
les
shl
sbb
mov
sub
in
pop
push
dec
jno
ret
pop
xchg
jae
movsl
sbb
aam
mov
test
mov
xchg
pusha
ss
add
pop
lds
or
push
xlat
cmp
jo
bound
imul
fs
add
shl
jecxz
fs
lcall
mov
js
pop
pop
mov
inc
push
lds
mov
jb
fdecstp
ja
cmpsl
adc
dec
cmpsb
testl
push
xchg
and
push
insl
sbb
push
cmpsb
test
hlt
fcomps
add
daa
dec
test
push
insb
mov
pop
das
fists
fdivrs
ja
pusha
or
lods
aad
ficompl
xor
pop
push
pusha
lds
inc
cmp
lods
mov
int3
mov
hlt
insl
inc
jne
or
cmp
inc
dec
fdivs
add
adc
mov
xchg
adc
inc
and
and
daa
push
fidivs
mov
add
lahf
sbb
repnz
cld
subl
mov
call
and
push
xchg
lahf
add
fwait
mov
adc
arpl
add
ja
outsl
repz
arpl
adc
jge
mov
fnstcw
dec
xchg
cmp
ret
sbb
in
popf
xor
and
lcall
mov
lahf
sahf
pop
jl
mov
bound
jns
pop
mov
es
out
pop
inc
out
sti
neg
bswap
push
test
repz
lea
inc
inc
xchg
push
idiv
lods
scas
movb
cmp
in
not
rorl
aad
test
fidivs
pop
sub
xor
adc
cmpb
outsl
push
repnz
out
aam
pop
sub
sbb
xorb
jmp
movsl
or
dec
mov
ror
cmpsb
int
aas
mov
push
pop
xchg
movsl
sarl
xchg
inc
lret
jp
xor
adc
push
rol
out
fldt
mov
and
fdivl
iret
mov
imul
outsb
aam
xchg
outsl
sub
ljmp
inc
push
mov
add
addr16
inc
xchg
pop
sbb
loopne
jge
ret
xor
xchg
mov
cmp
cmp
xorb
fs
adc
pop
push
into
hlt
sar
andl
and
mov
test
dec
movsb
rol
pop
add
and
repz
xchg
xor
adc
mov
lret
push
ljmp
subb
xlat
mov
das
test
stos
cmpsb
clc
shlb
insl
sub
out
das
in
ret
popf
lock
call
mov
add
stc
movsl
popf
mov
xor
jle
popf
mov
daa
rcll
mov
pop
fsts
repz
ffreep
loope
cmp
fdiv
jo
or
xchg
pop
adc
bound
cmc
cs
sub
cmp
pop
fidivs
sarb
adc
inc
or
lods
popf
xor
in
jnp
cmp
cmp
scas
sub
cmpsl
test
add
pop
int3
ja
and
pop
lea
mov
ret
hlt
pop
mov
outsl
xor
pop
pop
jmp
repz
push
insb
sbb
icebp
addr16
mov
xchg
sbb
push
xchg
mov
sbb
mov
lea
fwait
xor
jp
leave
ss
mov
xchg
aas
out
leave
adc
xor
fidivrl
inc
into
loopne
jecxz
loopne
pop
idivl
add
sub
pusha
jg
mov
scas
in
in
sahf
loop
movl
jo
sub
insl
and
xor
mov
subl
add
pop
pop
lcall
sbb
negl
mov
sub
mov
sbb
mov
scas
dec
lods
jmp
cmp
jle
xchg
cmpsl
adc
mov
mov
outsl
ljmp
cs
iret
lds
cmp
repz
test
int
sub
ss
mov
mov
enter
xchg
inc
addr16
pop
xor
jl
in
inc
pop
ret
mov
vpsubusb
adc
out
push
push
sbb
stos
lcall
jae
popf
je
test
mov
cmpsl
or
fwait
mov
fwait
mov
push
out
popa
lret
test
mov
mov
inc
dec
cmpsl
jno
cmpsb
aaa
ljmp
xchg
in
cmp
testb
and
and
cltd
hlt
or
inc
mov
inc
jbe
jmp
xor
aad
sbb
sbb
lods
gs
loopne
mov
hlt
movsb
dec
mov
inc
push
adc
push
xchg
or
and
inc
dec
mov
jns
push
leave
cmp
repnz
test
movsb
jne
mov
xor
jbe
inc
mov
pop
lahf
ja
xor
loop
push
push
movsb
pop
mov
sahf
mov
or
int
daa
xor
xchg
movsl
imul
fcoml
ja
leave
adc
pop
push
push
push
xor
call
jmp
outsb
stc
inc
and
test
and
data16
xor
pop
push
les
ljmp
pop
cmp
outsb
pop
daa
mov
push
pop
lcall
in
cmp
icebp
or
je
add
inc
cmp
dec
std
add
fistps
ret
sbb
add
nop
or
dec
jb
stos
stos
sub
stc
mov
mov
ds
cli
xor
jmp
stos
ret
and
mov
int
sub
cmp
jmp
aas
jg
jno
fnstenv
add
push
jg
loopne
in
into
in
jmp
mov
mov
jns
mov
adc
movsl
xchg
jg
test
stos
rorl
mov
pop
and
push
ds
in
jns
jne
dec
push
loop
lcall
arpl
mov
inc
lods
int
sbb
addr16
push
or
pop
cmpb
xor
jb
es
outsl
ret
sbb
jne
or
push
inc
or
cmp
pop
add
or
inc
inc
sub
add
sub
jno
xchg
mov
movsl
out
pop
pop
mov
and
loopne
xchg
call
cmpsl
daa
lcall
sbb
out
add
and
lahf
dec
xchg
jbe
mov
xchg
les
imul
adc
pop
push
test
push
xor
lods
ret
push
jmp
pop
mov
into
dec
xchg
xor
xor
cs
pop
dec
mov
fdivs
pop
mov
adc
mov
movsb
jnp
mov
sti
ja
mov
sub
sbb
inc
bnd
mov
loopne
test
lret
jno
fwait
inc
and
and
ret
and
cmpb
push
daa
fld
inc
sub
xor
push
jo
sbb
into
flds
sub
or
leave
pop
cmp
out
xlat
mov
ret
push
and
jae
xchg
fisubrs
mov
sub
push
lret
or
xadd
push
mov
mov
into
cmp
adc
inc
sbb
xor
sbb
pop
xchg
in
xor
imul
adc
sbb
movsl
push
mov
push
mov
push
push
mov
data16
push
mov
mov
push
call
mov
pop
dec
jecxz
out
push
es
jae
fildll
jmp
pop
ljmp
mov
ljmp
mov
xchg
and
push
dec
fldl
add
cs
mov
cmpsl
dec
lret
clc
iret
push
xor
push
into
fadds
cltd
sti
xorb
xor
mov
jns
pop
sub
lds
jle
and
int
packsswb
push
xchg
add
fidivs
out
mov
inc
sbb
sbb
dec
and
pop
push
ljmp
test
cwtl
mov
mov
mov
out
jecxz
out
out
pop
mov
lahf
push
call
push
and
and
add
xor
sbb
cmp
push
mov
icebp
call
sbb
pop
inc
aaa
mov
add
jnp
adc
jnp
ret
and
sarb
mov
stc
ss
jecxz
mov
push
pop
jle
js
lahf
pop
stc
or
jns
pop
icebp
test
in
push
adc
hlt
shrl
xchg
arpl
aad
lds
imul
xor
mov
sub
pop
out
sbb
sbb
fincstp
shrb
xchg
dec
imul
push
arpl
out
addr16
pop
pusha
shl
data16
add
sbb
shll
add
mov
push
js
sbbl
cltd
ja
shr
pop
push
push
test
aam
movb
ret
xor
jle
sbb
and
mov
call
pop
dec
push
pop
fdiv
into
jmp
sub
xchg
adc
jl
mov
mov
adc
pop
gs
lret
test
sub
push
adc
lds
jno
js
xor
push
shl
fcomip
pop
xchg
test
pop
or
dec
repz
inc
dec
push
mov
push
push
cmp
orb
sti
mov
mov
mov
mov
push
popl
and
cld
xor
imul
xor
pop
int
outsl
imul
dec
inc
mov
test
outsb
sub
fs
inc
dec
xor
or
pop
imul
sbb
and
sub
mov
xor
ds
insl
push
int
leave
sti
add
dec
addb
cmp
pop
or
add
lea
add
into
sub
andb
mov
mov
in
ret
fidivrs
or
aas
xor
test
pop
int3
dec
imul
mov
out
pop
mov
mov
sbb
ret
jns
add
xchg
mov
sbb
cmp
jns
and
adc
mov
mov
pop
push
negl
loop
scas
scas
and
add
fldt
jno
mov
mov
fcoml
icebp
data16
insb
ficoms
fisubs
pop
dec
cmpsl
mov
addl
or
adc
pusha
and
aad
and
iret
jb
adc
lcall
push
cmp
sub
sar
xchg
mov
sbb
inc
pop
mov
pushf
mov
lcall
stc
orb
adc
jo
jecxz
into
xor
inc
xor
cltd
mov
ljmp
fsubr
cmc
movsl
jb
pushf
or
cmp
pop
mov
mov
repnz
je
inc
push
imul
stos
mov
or
xor
sbb
gs
and
cmp
dec
cmp
inc
mov
adc
in
jmp
stc
les
mov
loope
ja
jmp
rolb
ficoml
cmp
shlb
or
xchg
jb
stc
rcrb
int
mov
mov
push
scas
std
push
arpl
adc
pop
js
arpl
inc
sbbl
test
sub
sahf
out
xchg
xchg
xchg
fwait
leave
dec
roll
lret
fmuls
push
and
in
mov
sbb
xchg
inc
lods
jle
scas
fistpll
je
adc
or
dec
nop
mov
sbb
cli
mov
and
test
xchg
js
mov
jns
xor
xchg
lock
lods
adc
xchg
clc
add
fildll
add
out
pop
pop
mov
jecxz
lcall
scas
dec
orl
jp
push
jmp
jnp
adc
leave
inc
gs
xor
shrl
cld
aad
add
pop
and
cltd
aam
dec
cmp
push
adc
add
sub
fsubs
xlat
jle
jo
lods
lock
adc
inc
xor
sub
mov
push
mov
and
jns
lcall
pusha
cmp
adc
cltd
mov
stc
pusha
inc
das
push
cmp
mov
ret
cltd
mov
scas
push
in
inc
ror
sbb
dec
xchg
test
xchg
loope
mov
dec
pop
ret
or
add
xchg
lret
orl
mov
add
stos
daa
mov
push
jbe
jle
fisttpl
pop
roll
inc
sti
push
jp
dec
cmp
add
or
push
pop
dec
pop
cmp
popf
lds
jecxz
push
mov
sbb
push
pop
mov
pop
imul
sub
push
lret
lret
subl
loope
adc
sbb
repz
in
dec
mov
sbb
cmpsl
lahf
mov
xchg
sbb
adc
jne
mov
cltd
pmaxub
xchg
data16
enter
ss
ret
es
mov
out
push
push
bound
jmp
pop
in
out
sti
jmp
ja
add
or
xor
cli
inc
cltd
sti
inc
lcall
xchg
and
xor
rcll
pop
mov
sbb
add
and
out
scas
cltd
sub
lods
pop
dec
xor
jbe
rolb
jmp
sbb
aas
sbb
cld
or
xchg
test
fldenv
repz
pop
and
hlt
cmp
xor
decb
stc
leave
daa
arpl
sahf
mov
xor
idiv
push
push
outsl
mov
jnp
pop
dec
jle
test
mov
cli
aaa
adc
inc
fmuls
fwait
pushf
sbb
sbb
je
xchg
enter
aas
push
out
xchg
adc
fisubs
sbb
sbb
adc
ret
and
adc
stos
sub
xchg
ret
subl
cs
fwait
repz
jmp
adc
add
or
movsl
cmpsl
dec
jg
sbb
lret
and
add
lock
imul
ret
repnz
sbb
andb
inc
mov
shll
rorb
pop
push
xchg
push
mov
out
inc
mov
dec
dec
push
dec
mov
jg
into
or
adc
dec
stos
lcall
les
inc
lret
pop
icebp
inc
mov
or
xor
push
movsb
lret
movsl
out
mov
pop
adc
insl
imul
fmuls
imul
push
mov
dec
adc
in
lcall
in
pop
movb
mov
daa
push
lds
iret
in
add
pop
dec
lahf
or
adc
ffree
xor
xor
sbb
inc
cmp
or
xlat
sahf
stos
test
pop
sub
cmpsl
fimull
xchg
fdivl
in
outsl
sub
in
sti
cmp
imul
xor
jnp
mov
in
gs
pop
test
jo
hlt
int
mov
jb
cld
mov
test
rorl
xchg
gs
cld
jmp
dec
cld
cmp
pushf
dec
dec
in
enter
inc
pop
xchg
paddd
pushf
xor
mov
fldt
dec
mov
jno
xchg
inc
ljmp
aad
dec
mov
mov
loop
jae
outsb
push
pop
das
xchg
xlat
xchg
jg
pop
xor
lea
jge
jmp
dec
cmp
mov
cmp
cmpsl
aas
dec
aam
push
lods
cmp
ss
xchg
jmp
pop
push
push
xchg
leave
arpl
push
jbe
add
out
out
adc
add
cmc
push
add
push
mov
xchg
int
inc
mov
ja
mov
and
adc
jp
pusha
and
jl
je
cmp
out
testl
adc
divl
loopne
outsl
insb
movsl
xor
mov
jo
push
sub
push
jg
inc
add
icebp
push
pop
es
jo
sub
addr16
jns
scas
add
xchg
mov
jae
insl
pop
imull
shl
test
xor
scas
shrl
outsb
and
jno
inc
sarb
ljmp
dec
mov
test
lea
mov
insl
jno
out
addr16
pushf
or
sub
push
pop
mov
push
jno
mov
or
xor
mov
js
test
es
push
xchg
push
outsl
mov
add
add
or
xchg
es
cmp
dec
iret
add
cmp
push
enter
mov
mov
inc
jl
lea
les
movsb
pop
inc
push
repnz
mov
lret
push
adc
jo
cltd
or
adcb
jl
push
or
jns
mov
inc
ret
shl
das
stos
into
rol
int
cmpsl
call
js
and
stc
out
xor
stc
stos
pop
shll
push
xchg
int
dec
xor
outsb
sub
cmpxchg
mov
rcrl
fistpl
push
jo
inc
mov
sbb
adc
pop
xchg
xchg
mov
lea
mov
cs
push
fcoms
jg
add
pop
mov
xchg
aad
mov
xchg
mov
test
mov
stos
or
addr16
push
fadds
jg
xchg
test
xlat
and
push
or
jmp
adc
inc
loopne
adc
and
sub
push
cli
je
in
dec
sbbb
adc
push
push
push
jle
iret
xor
out
sub
leave
xor
lock
push
stc
jae
xchg
ja
and
cmpsl
movsb
lret
pushf
fmul
aad
pop
test
or
dec
popf
dec
sbb
jge
pop
sub
mull
lret
pop
and
cs
daa
roll
xor
div
loopne
jne
lods
mov
add
imul
scas
fmul
pop
test
test
add
mov
leave
inc
mov
xchg
sbb
rcrl
inc
jb
pop
mov
addr16
mov
cmp
cmp
cmp
and
dec
mov
pop
int
loope
mov
int3
dec
xor
xor
std
inc
test
jb
scas
inc
sbb
fisubrs
mov
push
aaa
pop
stc
into
sarb
mov
lds
fldenv
xchg
mulb
sub
les
ss
imul
ss
mov
je
pop
loope
jle
stos
gs
xchg
and
enter
jg
roll
xor
ret
mov
test
shrl
push
shrl
sub
inc
imul
add
sbb
aas
push
lcall
and
rolb
xchg
add
jle
pop
mov
js
rcrb
jbe
xchg
cmpsb
and
pop
popf
cmp
or
or
ret
push
lods
int3
xchg
pop
das
add
jae
sbb
or
shrl
daa
inc
mov
into
mov
sti
daa
sarb
insl
mov
int
inc
loope
pop
dec
pop
scas
sub
es
test
inc
push
add
test
movsb
aad
xchg
mov
cmp
stc
lds
or
fsubs
hlt
xchg
movsl
jne
stc
cmp
and
inc
int
into
mov
or
xchg
pop
mov
aas
lock
or
test
movsl
jb
dec
mov
inc
ja
gs
dec
or
sbbl
jp
add
sbb
add
mov
mov
je
pop
pop
mov
rorl
inc
cld
mov
mov
mov
test
push
in
int
pop
lahf
hlt
dec
adc
fldt
movsb
addr16
int3
cld
imul
add
pop
jns
push
xchg
pop
fldt
xor
jmp
fcomi
mov
push
lock
xchg
shll
in
mov
mov
repz
jp
imul
loope
in
add
xchg
lock
lods
movsl
xchg
in
fs
test
mov
jnp
xor
inc
cli
divl
shlb
ret
enter
xchg
int
jnp
sbb
fnstenv
add
add
xor
pop
ss
adc
cltd
aad
andl
mov
leave
pop
int
jns
popf
ja
mov
xchg
bound
shll
pop
xchg
shl
cmc
lret
mov
push
push
mov
ja
dec
fsub
fmulp
mov
jnp
subl
add
add
dec
jmp
and
or
or
iret
and
lods
mov
sahf
cmp
incl
sub
daa
in
jns
lds
test
arpl
xor
or
jge
bound
adc
lea
rol
mov
mov
fdivrl
les
std
mov
movsl
repnz
pop
sub
push
pushf
sbb
loopne
inc
inc
lock
inc
cmp
mov
fdivs
fisttpl
jnp
jmp
jns
sbb
mov
xor
fwait
sbb
push
jnp,pn
sarb
and
and
push
and
cmp
inc
in
mov
adcl
mov
movsl
cmp
push
dec
and
int
ret
repz
mov
inc
js
cmp
adc
stc
out
les
mov
adc
mov
popa
push
jl
and
and
andb
data16
or
dec
mov
out
xchg
sub
outsl
mov
or
jg
loop
arpl
xchg
repnz
stos
adc
mov
mov
leave
pop
jbe
popa
sbb
pop
or
scas
cmc
call
rorb
and
xor
adc
pop
rcrb
xorb
popf
cli
and
fsubl
ljmp
hlt
adc
or
push
cmc
les
adc
mov
sub
mov
cld
push
cwtl
call
mov
push
adc
stos
dec
mov
mov
mov
sub
add
insl
nopl
repnz
es
inc
xor
testl
xchg
mov
sahf
xor
push
mov
xor
adc
adc
xchg
sbb
test
add
xchg
fildl
icebp
mov
fucomi
arpl
outsb
pop
loop
stos
std
fidivs
lock
scas
mov
imul
pop
outsl
inc
imul
pusha
mov
dec
fucom
add
add
jg
lea
pop
xor
xchg
pop
dec
inc
icebp
pop
hlt
popa
mov
pop
loop
adc
fadds
push
xchg
xchg
stc
outsb
cwtl
mov
scas
sub
push
mov
add
sub
bound
jecxz
dec
loope
sub
movsb
sbb
xorb
mov
into
repz
adc
xor
pushf
mov
jo
inc
cmp
mov
lret
repz
int3
and
push
inc
xor
sbb
or
jbe
cmp
push
add
jmp
popa
incb
xlat
jg
push
fcmovne
jg
dec
pop
loopne
andb
xor
cmp
leave
xchg
or
or
std
aas
and
adc
inc
inc
sarb
cmove
push
enter
incb
das
mov
or
test
xor
jle
lcall
ret
dec
mov
prefetch
jmp
jle
stos
pop
addr16
inc
pop
jbe
insl
push
push
and
mov
ret
ljmp
add
loope
fcoml
repz
adc
js
xchg
je
jecxz
andl
iret
test
in
sub
mov
adc
mov
push
scas
xchg
divb
in
mov
xchg
sbbb
xor
xchg
mov
fsubs
xchg
aas
fcoml
lret
sbb
leave
scas
out
lds
mov
push
and
mov
jno
xlat
xchg
dec
xchg
xchg
sbb
stos
pop
adc
sub
lock
clc
fldl
or
testb
fwait
or
mov
mov
je
sbb
xor
cmp
cmp
and
mov
aaa
mov
rcll
mov
pop
or
fildll
fnstenv
adc
jecxz
cmp
aaa
jp
lods
hlt
push
lods
ret
daa
inc
dec
sbb
xchg
cmp
or
mov
inc
aad
add
mov
inc
pop
sub
push
aas
pop
mov
nop
mov
stc
mov
cmp
mov
lds
dec
aad
test
inc
mov
loope
out
pop
out
adc
mov
or
test
pop
add
xor
mov
fisubl
imul
call
pop
daa
adcl
cli
inc
pop
add
xchg
arpl
fistl
dec
jne
add
in
mov
xchg
jne
jo
mov
xor
out
sbb
fnstcw
jno
fstl
or
mov
sub
sti
jmp
push
in
dec
sub
bound
stos
into
lret
add
sub
fmul
sbb
add
inc
adc
int3
cld
lea
fstpt
dec
cmp
inc
lahf
xchg
jg
mov
outsl
jno
sti
xchg
in
mov
sub
mov
and
sbb
xor
loope
insb
xchg
rcr
inc
call
fnstcw
mov
xor
or
push
add
fsubp
or
jo
cmp
lods
xchg
fisubl
cmp
popf
jmp
out
ljmp
jnp
data16
in
dec
sbb
pop
adc
cld
sub
pop
push
adc
pop
mov
ja
cmp
cwtl
clc
pop
testl
rorb
into
jno
xor
jmp
cmc
div
pop
or
loope
xchg
pop
cmpsb
mov
in
push
mov
aas
mov
dec
in
or
andl
sub
cmc
je
shll
and
sub
pop
lods
pop
ja
sbb
xchg
pusha
adc
and
sub
mov
dec
data16
inc
pop
inc
mov
jo
jg
add
scas
iret
js
adc
mov
iret
inc
mov
lret
or
xlat
aad
lret
icebp
cmp
arpl
xchg
cmc
mov
leave
push
arpl
nop
cmpsl
or
jo
fidivrs
cmp
push
adc
data16
xor
xlat
fildll
add
adc
das
and
push
in
inc
scas
iret
mov
cmp
mov
or
sarl
sti
inc
icebp
mov
gs
ja
xor
imul
jb
idivb
pop
push
mov
mov
popf
hlt
add
add
sbb
mov
pushfw
push
vpinsrb
aaa
dec
xor
mov
popa
jmp
mov
and
push
scas
mov
out
fidivl
ja
jns
pop
dec
cmp
inc
add
xchg
push
sub
push
push
and
popf
mov
cmp
pop
mov
adc
in
push
cld
push
sub
dec
mov
mov
mov
pushl
das
adc
pop
and
inc
int
rclb
pop
jb
inc
cmpsl
inc
fsubl
inc
aam
aas
das
hlt
xchg
inc
data16
cltd
xchg
pop
sub
xchg
mov
iret
mov
push
out
test
stc
add
lock
cmp
pusha
inc
in
mov
aas
sbb
orl
cltd
mov
sbb
or
or
out
shl
fwait
fwait
sub
dec
mov
sub
xor
and
cmp
daa
test
out
xor
xor
adc
cmp
jmp
add
xchg
jmp
popf
pop
push
test
jno
xchg
int3
adc
pop
out
out
mov
imul
and
lods
cmpsl
mov
dec
mov
mov
push
pop
fisubrl
inc
mov
jb
jae
mov
inc
mov
ret
adc
es
xor
mov
ss
pop
push
push
cmp
lods
rcrb
dec
out
cmpsl
pop
aas
mov
sbb
popf
inc
popa
cmpsl
lods
outsb
mov
jo
and
cmp
sbb
gs
and
jae
stos
cli
imul
and
lcall
push
pop
cltd
sub
int3
fldenv
jle
lret
aam
stos
cmp
xor
add
push
push
outsl
or
repnz
ss
pop
pop
gs
fldt
fwait
inc
cmp
jns
enter
mov
rcrb
jle
stos
mov
sub
or
clc
enter
cmpsl
call
stos
adc
sub
xchg
inc
add
rcll
xchg
push
sbb
ret
test
mov
jne
inc
cmpsl
testb
sub
push
call
inc
rcrl
orl
icebp
xchg
pop
test
mov
cmp
mov
cmp
mov
xchg
dec
loope
into
scas
dec
lock
push
sarl
jae
inc
sub
pop
aad
mov
lods
xchg
nop
adc
jg
mov
xchg
mov
or
xchg
fisttpll
mov
orl
mov
jl
ss
in
add
shrb
lcall
fisubrs
fwait
std
xchg
inc
cmp
fbstp
jmp
or
push
jmp
loope
outsb
and
cmp
push
dec
xchg
hlt
sbb
mov
xor
push
or
xchg
inc
std
or
ljmp
mov
inc
mov
aas
test
lcall
or
scas
push
push
dec
into
rcrl
push
jle
int
mov
sub
sahf
or
mov
sbb
push
mov
pop
stos
mov
daa
mov
inc
adc
sarl
mov
stos
add
or
lds
pop
cmpsl
sti
push
mul
rcr
cli
out
add
xlat
xor
mov
subb
out
cmp
cmp
insl
jg
out
pop
push
mov
stos
push
cs
imul
call
adc
insl
push
inc
inc
bound
ljmp
int
sub
ds
xor
movsb
mov
bound
push
sbb
push
loopne
call
rorl
addr16
out
mov
push
or
enter
loope
mov
jnp
das
xlat
fidivrl
pusha
roll
mov
or
shr
pop
rcrl
std
pop
inc
int
adc
xor
inc
sub
shrb
or
ja
jmp
mov
inc
in
rolb
pop
cmc
cli
outsb
fs
inc
enter
push
das
mov
rclb
sub
and
addr16
xchg
loop
jg
push
pop
sbb
push
mov
cmp
xchg
push
sub
and
mov
nop
jg
stos
cmp
xor
dec
inc
pop
cmp
pop
stc
cmp
push
push
orl
and
and
pop
inc
or
mov
mov
ljmp
xchg
sbb
mov
addb
mov
test
inc
es
lea
push
ret
popf
movsl
pop
mov
sub
bound
lea
mov
test
jg
aas
inc
imul
mov
sub
cmp
inc
xor
xchg
cs
xchg
cld
add
sbb
neg
cmp
and
shlb
cmpb
inc
fsubrs
mull
and
ljmp
mov
jmp
fcompl
cli
outsb
cli
int3
mov
ret
lds
cmp
pop
jo
dec
ja
outsl
adc
jno
jg
mov
icebp
cmp
fistl
sbb
push
cltd
mov
outsl
ljmp
mov
push
mov
adc
cld
sub
imul
xchg
test
mov
pushf
out
inc
outsl
sahf
lods
pop
lret
test
popa
shll
or
rclb
mov
pop
call
clc
out
push
test
adc
adc
lds
mov
sahf
add
ja
movsl
sbb
cld
mov
fs
roll
xchg
jle
out
cmp
jecxz
adc
jmp
notb
push
adc
adc
pop
sub
arpl
or
cmp
adc
mov
into
shlb
adc
fbld
xor
subb
mov
jl
add
clc
mov
sahf
or
dec
push
daa
lods
push
out
scas
ficompl
jb
cmp
jecxz
dec
jge
pop
pop
not
cmp
jle
inc
adc
out
fstl
imul
or
movsb
fildl
mov
cmp
clc
orps
jo
sbb
mov
add
fsubrl
fcomp
push
sub
arpl
dec
pop
daa
scas
pop
jge
test
test
mov
jge
scas
lock
jmp
push
daa
cmp
dec
inc
int3
cltd
mov
cmp
enter
adc
cwtl
adcb
cmp
dec
ret
mov
mov
aam
cmp
std
pop
test
aas
cli
xchg
cmp
out
sbb
or
mov
ss
xchg
fnstsw
xchg
add
bound
fldt
push
or
push
arpl
sbb
shrl
xchg
insb
rorb
les
adc
sub
xchg
jp
mov
and
xor
pop
xchg
xchg
and
xor
pop
push
cmpsl
sbb
sub
dec
jne
ret
nop
dec
cmpsl
or
out
lfs
shl
adc
cmp
sub
insb
or
or
sahf
or
loopne
and
xlat
lea
inc
or
mov
cwtl
cwtl
jo
push
sbb
popa
cli
and
push
push
aas
cmp
cmp
mov
fstps
push
inc
int3
pop
sar
stos
mov
in
mov
fsts
pop
divb
lret
adc
fsubrs
popf
jns
in
dec
frstor
xchg
or
mov
rcr
mov
or
xor
jmp
sub
in
sbb
addb
sub
scas
fidivrs
ret
enter
cwtl
sub
sbb
xor
pop
adc
xchg
cltd
movsl
cld
or
cmp
adcl
jb
insb
jbe
scas
jl
jmp
fs
out
ljmp
and
xchg
mov
sbb
fisubl
adc
cmc
xchg
aam
cmpsb
sbb
imul
imul
mov
mov
jle
push
sbb
cmp
jg
data16
popa
outsl
xchg
test
jns
mov
aaa
fmull
fs
jns
in
pop
adc
inc
aas
pop
jmp
dec
sti
mov
push
or
dec
or
push
and
in
jl
sub
fisttpl
push
add
push
fs
call
dec
add
enter
xchg
outsb
je
int
int3
mov
mov
sbb
mov
add
cmp
sbb
mov
fcomi
sarl
pop
mov
imul
lcall
in
jae
mov
and
andb
add
out
test
and
daa
add
imul
sbb
sub
xor
stc
movsl
scas
jmp
xchg
pop
push
sarl
mov
mov
lret
aad
lcall
test
add
enter
pop
fsub
sbbl
mov
imul
int
inc
lcall
push
lock
pop
loopne
mov
pop
jg
and
jo
and
xchg
cld
sbb
and
aad
or
gs
xorb
inc
scas
mov
roll
sbb
xchg
xlat
mov
addr16
les
lock
cmp
jecxz
or
pop
cmp
mull
aad
enter
pop
jno
jmp
push
xchg
mov
fistpll
pop
incl
dec
adc
ljmp
jns
add
add
adc
mov
xchg
lea
xchg
mov
sbb
stos
cmpsb
ja
pop
pop
jl
push
mov
cmpl
xchg
fs
dec
bound
hlt
push
out
add
cmp
lods
sbb
mov
orb
pop
inc
xchg
fildll
cmp
sub
sub
pop
pop
cli
std
ret
pop
int3
in
xlat
mov
cmp
icebp
lods
fwait
xchg
sbb
jge
cmc
daa
sub
jo
pop
std
add
mov
fisttps
outsb
nop
rcr
cmc
shrb
push
cltd
jb
add
push
ficoml
ja
lea
std
cmp
mov
scas
and
test
test
inc
leave
and
test
pop
adc
sbb
pop
lea
in
lea
mov
repz
xchg
pop
cmp
or
mov
std
cmp
mov
out
sub
pop
adc
daa
sti
adc
jae
mov
repz
inc
shll
push
xchg
pop
and
cmp
lock
hlt
jne
enter
cmp
cmc
sbb
stos
sti
ljmp
and
dec
data16
jns
rol
insl
cmp
leave
jecxz
mov
pop
aaa
in
je
push
xchg
rcrl
add
hlt
fs
inc
mov
pop
jp
mov
jno
mov
aaa
int
test
pusha
pop
dec
iret
push
bound
mov
int
mov
push
les
jp
push
je
in
mov
popa
sub
xchg
test
sar
push
add
or
or
sub
stos
shrl
mov
mov
add
cmp
adc
bound
leave
sub
mov
cltd
popf
mov
jecxz
push
punpckhbw
or
fld
cmc
fcos
xchg
jp
outsb
sub
gs
jne
scas
aad
sbbb
xchg
mov
rcrb
mov
imul
cwtl
test
and
mov
lahf
les
mov
adc
sub
call
test
pop
xchg
insl
rcl
inc
mov
shl
inc
fistps
pop
add
or
and
out
inc
dec
cld
sbb
xor
and
out
push
push
sub
addl
pop
movsb
cmp
es
movsb
sub
or
mov
lods
fwait
xchg
and
xchg
mov
popf
and
fcompl
cmp
inc
js
out
cmp
pop
repnz
add
movb
std
cld
push
fstpt
fmul
mov
xchg
push
mov
mov
cmp
inc
sub
cld
les
xchg
mov
push
lock
sbb
pushf
mov
andb
das
cmp
push
xchg
hlt
data16
dec
aam
fstpl
outsl
stc
inc
xlat
test
push
push
jo
sbb
stos
shll
test
lret
jnp
jae
xorl
adc
data16
cmp
call
jle
pop
sub
stc
sbb
dec
sbb
jb
aam
movl
cmpsl
mov
jne
jo
in
les
std
sub
clc
dec
call
dec
and
aam
int3
stos
mov
testl
add
arpl
or
lock
hlt
setg
adcb
sub
xchg
into
dec
jae
orl
ret
mov
les
stc
push
icebp
sub
loope
test
outsb
int3
ficompl
lds
or
stos
les
cmp
int
out
nop
int
incb
pop
cmc
cwtl
xor
insb
inc
push
adc
stos
adc
icebp
loop,pn
lcall
or
add
push
jl
cmp
push
mov
aad
cmpb
and
jp
aaa
nop
subb
pop
subl
sbb
adc
filds
or
pop
mov
aaa
rcll
add
jecxz
aas
mov
out
cmc
pop
xchg
adc
arpl
icebp
loope
clc
sub
out
xchg
ss
adc
js
mov
or
push
push
push
cmp
sbb
cmpsl
stos
jbe
aaa
push
nop
out
dec
xor
sti
dec
call
out
sub
push
add
cmp
sahf
pop
fsts
enter
lahf
jge
sub
sub
jne
cmp
out
jecxz
mov
loop
ljmp
cs
mov
loopne
les
pop
imul
add
in
or
and
xchg
and
outsb
adc
in
cmp
in
dec
add
mov
cli
pop
dec
jle
push
inc
ud0
fwait
loope
lock
in
dec
push
lret
pop
lret
lock
pop
cwtl
push
jbe
test
xchg
imul
adc
in
mov
ds
push
insl
out
adc
aaa
sbb
mov
jle
or
and
mov
dec
loopne
lret
les
sbb
je
push
popa
lret
jg
clc
lea
adc
add
hlt
mov
insl
jge
test
and
inc
insl
cltd
imul
xor
mov
inc
ljmp
jp
orl
dec
cmp
pop
sahf
add
sub
xor
neg
mov
subb
adc
sub
sbb
pop
or
xor
mov
jo
add
pop
add
xchg
arpl
cmpsl
lods
add
mov
sub
daa
ljmp
fdivs
jne
add
or
mov
dec
mov
dec
int3
pop
loop
lds
jge
xchg
outsl
add
les
pop
test
fstpt
ret
cs
xor
adc
or
sbb
inc
adc
cwtl
arpl
inc
jg
mov
daa
leave
call
mov
xchg
insb
jg
fidivs
jl
ja
jns
mov
pop
adcl
das
iret
test
cmp
stos
mov
add
sti
mov
push
and
cmp
js
xchg
inc
fidivl
jne
je
push
cmpsb
aas
xor
xlat
lods
mov
popa
mov
inc
daa
bound
aaa
cmp
and
aam
mov
cmp
sbb
incb
lods
fdivs
mov
mov
pop
xchg
rorl
jnp
mov
out
outsl
mov
mov
and
push
cld
stos
test
xor
hlt
stc
sti
out
adc
pop
inc
sbb
fmuls
mov
inc
sub
sbb
sub
hlt
pop
sub
push
xchg
dec
sbb
js
sbb
xchg
insb
mov
aaa
sub
pop
call
dec
mov
in
xor
pop
mov
xchg
pusha
rolb
pop
mov
roll
dec
add
clc
aad
cmpsb
cmp
xchg
clc
adc
or
ja
inc
shlb
mov
dec
or
and
jecxz
add
jmp
adc
sbb
daa
fildll
cmp
xchg
xor
jle
xchg
and
jae
stc
ljmp
scas
out
stos
jg
xor
orb
mov
je
push
enter
and
fiadds
add
fcomi
xchg
xchg
shlb
lret
lea
je
dec
mov
cmp
lret
xor
insl
push
dec
mov
lret
ds
fsubl
stc
mov
jl
or
js
push
inc
je
or
xor
adc
push
inc
add
and
aam
xchg
movsb
inc
mov
cli
in
mov
js
push
cld
push
cli
pop
cmp
pop
fdivrp
es
cmp
je
popf
addb
aam
inc
cmp
or
rcl
jmp
imul
dec
cmp
push
fprem
scas
cmc
lods
push
cmpsl
out
stos
jg
lock
outsl
adc
dec
jmp
cs
lea
or
jmp
aam
call
ret
xchg
negl
pusha
cld
push
decl
outsb
fdivl
mov
or
clc
pushf
cmpsb
mov
and
cli
movsb
push
add
cmc
xor
cmp
lret
cmp
fildll
push
fisttpll
mov
insl
das
inc
cmp
inc
fs
push
push
or
stc
aam
ret
pop
pop
andb
int3
test
gs
xor
out
dec
fsubrl
lcall
lea
jg
cld
jl
call
push
repnz
lret
pusha
es
scas
inc
xor
xor
pop
xorb
addr16
mov
xchg
popa
add
or
jmp
and
adc
je
fnstsw
lods
addr16
call
lock
rcl
pop
or
sahf
shll
mov
ret
xor
ja
jbe
push
enter
repz
leave
cmpsl
lret
sbb
inc
or
and
ss
mov
add
in
sti
stos
jmp
call
mov
repnz
pop
loope
mov
pop
dec
ret
cmp
or
mov
push
ja
out
fs
fwait
out
out
and
add
shll
adc
or
out
inc
jl
adc
call
inc
fdivrs
cs
mov
jecxz
fstps
daa
sub
mov
cmpsl
jge
sub
dec
add
adcl
je
leave
adc
pop
incb
or
and
push
je
xor
push
inc
sub
repz
pop
inc
test
pop
lds
push
divl
dec
or
mov
sub
rcll
js
mov
dec
mov
sub
cld
rol
add
arpl
adc
pop
in
fimuls
dec
add
icebp
xor
mov
pop
push
fucomip
daa
pop
push
pop
mov
imul
cmc
mov
mov
mov
and
inc
lcall
sub
rolb
inc
mov
xchg
jo
xchg
fldcw
push
nop
int3
mov
inc
jns
std
outsb
mov
pop
int
das
inc
loop
int3
or
cmp
roll
adc
sub
jns
pop
xor
jl
in
arpl
adc
sbb
pop
sbb
push
lea
pop
cli
bound
insl
cmovge
hlt
jo
jecxz
jns
mov
pop
add
aaa
daa
rcl
cmc
rclb
push
inc
sbb
mov
dec
ficoms
jb
mov
pushf
xor
rorl
mov
inc
push
adc
rorl
mov
push
popa
jge
push
insb
addr16
and
push
add
ds
rcll
test
mov
incb
ljmp
cli
cwtl
mov
xchg
sti
int3
shrl
push
mov
adc
mov
test
lods
test
pop
mov
adc
stc
or
mov
sbb
xor
mov
cmp
fcompl
inc
ror
fwait
sarb
pop
ss
mov
ror
sti
daa
cmpsl
stc
dec
push
push
rolb
jo
pop
ds
push
push
stos
loopne
and
jb
shrb
je
and
mov
add
int
xchg
add
cmp
sub
ds
fs
cmp
cmp
imul
pop
out
pop
push
pushf
mov
mov
shlb
hlt
lods
std
loopne
fcoml
xlat
lods
mov
pop
sbb
in
lock
sbb
mov
pop
or
sub
push
dec
lock
sub
mov
xchg
jne
dec
pop
push
fisubrs
nop
add
imul
xor
mov
lods
mov
inc
jmp
mov
xchg
jle
cmc
mov
adc
xor
test
xor
xor
lret
xchg
and
fidivrs
mov
sub
test
push
aad
loopne
jne
jecxz
fidivl
ror
mov
es
decl
loop
vphadduwq
arpl
jno
loope
bound
clc
push
mov
popw
push
pop
xorb
scas
mov
repz
int3
fstp
clc
inc
pop
pop
mov
ret
inc
mov
pop
das
lds
fwait
mov
sub
mov
pop
lods
mov
push
or
pop
icebp
add
or
pop
out
das
adc
testl
mov
add
lods
lcall
jne
in
xchg
pop
xlat
je
cmp
fsts
jbe
mov
mov
add
add
movsl
mov
aaa
scas
push
insl
lea
xchg
mov
std
scas
sbb
sbb
dec
cmp
cmpsb
movsb
pusha
mov
cs
lret
pop
outsb
jg
cltd
push
pop
mov
std
pop
fs
add
test
inc
ja
inc
sub
mov
push
test
rcrb
jo
jbe
loop
rcl
movzbl
add
movsl
enter
xchg
negb
inc
jo
dec
add
addl
add
pop
jbe
push
test
pop
mov
fs
jp
out
adc
pop
lods
and
xchg
cmp
jle
xchg
in
and
pop
mov
adc
push
sbb
pop
xlat
push
pop
out
cs
sbb
fdivl
scas
in
and
add
adc
les
rcr
mov
cli
mov
bound
push
out
sub
jl
les
or
daa
sbb
adc
push
cld
jae
sbb
and
dec
cmp
rcrl
jge
stos
xor
lret
popf
dec
push
insb
pop
cltd
ds
ret
ret
mov
mov
push
cwtl
jns
push
push
mov
aaa
mov
int3
mov
add
pop
jle
cmc
pop
inc
pop
mov
push
cmc
hlt
testl
xor
add
or
iret
add
std
cwtl
lock
pop
inc
popf
jge
fbld
adc
sbb
outsl
or
shll
jmp
bound
outsb
jl
add
jle
push
sbb
test
loopne
xchg
adc
decl
adc
or
mov
xlat
xor
mov
mov
mov
cmp
mov
lds
in
loop
jge
jae
jae
ret
jge
jno
mov
ljmp
out
arpl
rolb
push
xor
imul
out
dec
add
sub
mov
cltd
mov
sti
pop
movsb
xchg
js
mov
mov
xchg
jae
test
iret
arpl
xchg
shlb
sbb
aad
test
mov
sti
addr16
ljmp
out
inc
sbb
xor
pusha
xor
inc
pop
inc
mov
adc
sub
ret
test
sbb
std
dec
aas
cmp
out
mov
inc
test
add
es
das
cwtl
add
lds
jae
push
push
cwtl
cmp
rorl
push
mov
xchg
inc
mov
das
jb
mov
outsb
int3
and
adc
cmp
sbb
jl
or
cmp
inc
sbb
inc
add
jae
xchg
fdivl
imul
inc
pop
cld
fiaddl
cmp
aam
mov
mov
jae
or
dec
jbe
sarb
xchg
dec
sbb
sub
mov
push
js
lods
mov
dec
imul
dec
jl
xor
fistpl
sub
out
jge
mov
fimull
cmp
xchg
pop
jl
int
mov
xlat
cwtl
in
test
push
inc
jle
push
inc
xchg
mov
rorl
pop
dec
xchg
enter
mov
push
cmp
int3
mov
pop
shr
fwait
sti
fdivl
mov
ror
jns
adc
sbb
test
sbb
jo
mov
jae
mov
inc
add
add
fs
push
daa
fs
in
pushf
lahf
xchg
cld
imul
flds
pop
adc
and
scas
nop
in
test
jb
mov
cwtl
jl
push
sub
xchg
movsl
xchg
jb
test
lret
fwait
or
pop
test
pop
inc
fs
or
repnz
test
outsb
sub
mov
inc
cmp
add
popf
mov
jne
rcrl
loopne
cmp
pop
mov
sbb
lea
sti
sbb
in
jb
aad
and
outsb
xlat
adc
pop
dec
dec
scas
adc
in
push
fldt
test
inc
lahf
mov
notrack
int
lea
cmc
arpl
lahf
test
ja
add
dec
leave
jecxz
in
mov
mov
and
out
sbb
movsl
and
icebp
mov
xor
or
dec
arpl
fucomi
pop
cmpsb
arpl
mov
test
imul
sarl
loop
inc
xchg
std
xchg
xchg
sbb
hlt
ficomps
movsb
adc
sbb
arpl
pop
gs
out
pop
push
ret
dec
mov
js
pop
or
inc
lcall
mov
popa
call
push
push
or
cs
addl
mov
push
pop
insl
mov
mov
sbb
cmp
sub
fidivs
clc
mov
lea
fildll
popa
dec
cmpsl
out
mov
sbbl
ret
nop
xchg
stos
add
jl
inc
cwtl
rorl
and
outsl
inc
sbb
cmp
mov
rcll
inc
in
push
push
xor
push
add
in
aas
iret
ja
pop
cmpsl
jno
jb
cs
or
in
stc
arpl
jnp
gs
lods
ret
push
fildll
or
xchg
ja
fidivl
ret
dec
stc
lret
mov
jecxz
imul
xor
into
outsl
jo
dec
pushf
xorl
test
sbb
in
mov
mov
sub
fmull
pop
push
mov
test
fistps
or
sbb
push
mov
or
cmp
fnstenv
pop
js
push
cmp
push
out
and
insl
in
dec
into
loopne
roll
js
xchg
or
or
in
sub
and
add
mov
shlb
dec
scas
addb
imul
xlat
xchg
pop
and
push
hlt
fsubrs
fcmovnbe
jmp
mov
pop
stos
xchg
push
add
test
sub
inc
cmc
sbb
push
cmpsb
or
ret
pushf
sbb
mov
jbe
addr16
lahf
jl
inc
fstpl
rorl
loop
mov
jns
xchg
pop
repz
jg
lahf
lcall
inc
fisubs
jl
mov
repnz
adc
fnstenv
sub
iret
into
cltd
adc
shl
dec
stos
loop
lea
inc
xchg
ja
xchg
and
pop
mov
jg
lods
cwtl
or
dec
mov
adc
sbb
enter
popf
shl
ret
int3
adc
vpmovq2m
ja
scas
orb
cmp
adcb
sbb
push
sti
xor
add
into
xchg
lods
iret
or
clc
sbbl
mov
mov
push
jp
fsubrs
jle
xor
lds
pop
sahf
negb
cwtl
adc
add
mov
outsb
dec
dec
mov
cwtl
and
cmp
ja
xchg
das
rcrb
sbb
inc
sub
mov
ja
insb
stos
lahf
cmp
scas
into
or
xchg
xchg
test
mov
push
xchg
mov
sub
jge
cmpsl
xor
testb
shl
es
mov
imul
and
cmp
int3
das
in
andb
lods
push
cmc
adc
mov
jnp
loope
aam
mov
rclb
sarb
xchg
xchg
cltd
sub
in
lock
movsb
popf
outsl
shlb
xchg
mov
sub
gs
dec
jecxz
ljmp
and
ss
adc
arpl
jle
and
ret
sbb
inc
mov
add
ss
in
pushf
and
mov
add
stos
insb
add
jno
ds
or
xchg
mov
push
mov
mov
lock
mov
cltd
scas
ja
dec
sub
pushf
cmp
cmp
and
andl
mov
mov
inc
cmp
cmp
xchg
mov
les
cwtl
or
addr16
push
mov
cli
out
mov
les
rcl
cmp
test
mov
andb
jecxz
mov
sti
stos
pop
push
jp
divb
sub
mov
xor
popa
dec
jnp
lods
pop
cmp
xlat
lea
cmp
mov
adc
add
andl
scas
idiv
add
sbb
or
dec
call
fsubrp
imul
push
in
pop
ret
mov
xor
adc
outsb
sbb
push
imul
hlt
sub
sbb
dec
push
leave
insl
popa
cmp
sti
lahf
int3
cmp
inc
sbb
mov
mov
into
inc
jl
fistl
adc
lret
inc
gs
adc
mov
sbb
popw
out
sbb
clc
mov
adc
inc
sub
jae
add
add
push
cmc
xlat
bound
lock
push
test
psubw
add
ficompl
inc
and
idivl
js
sbb
leave
mov
loopne
mov
sub
out
mov
outsl
or
mov
cmc
fs
jmp
pop
mov
int3
sahf
push
popa
sbb
ja
mov
push
ss
add
push
push
push
cmp
stc
xchg
rcll
scas
pop
fisubrs
mov
xlat
data16
lods
cltd
cwtl
jl
cmp
js
xor
lahf
xor
mov
loope
mov
loope
pop
pop
testb
push
movsb
shr
aam
jae
push
xchg
rcrl
dec
clc
outsb
add
push
shl
into
add
pushl
stos
jle
mov
sub
cltd
shlb
mov
in
mov
mov
sub
ucomiss
in
dec
mov
xor
jge
mov
jb
popf
push
das
dec
sub
sub
or
jo
jae
dec
gs
sahf
add
xchg
mov
jge
icebp
test
pusha
jb
stos
imul
hlt
adc
push
fadds
repnz
jl
frstor
nop
insl
sbb
and
dec
lock
les
notb
and
cmc
push
aad
xor
testb
xor
sub
pop
test
mov
repnz
cmp
adc
jge
das
mov
mov
mov
adc
inc
ljmp
push
add
int
lahf
js
mov
fdivl
jecxz
cwtl
jg
xchg
sti
imul
add
adc
out
idivb
imul
shl
cmp
and
notl
mov
ret
scas
pop
jnp
in
jle
insb
jl
pextrw
and
dec
mov
dec
push
push
divl
nop
test
pop
lret
aam
out
jns
shl
mov
leave
mov
pop
popa
mov
fisttpl
les
add
push
cmp
cs
loope
out
flds
cmp
aad
rorb
xchg
lahf
jnp
jecxz
adc
adc
xor
adc
pop
aad
pop
mov
call
fmul
test
mov
pop
adc
ret
pop
cmpsl
xchg
or
jmp
mov
stc
shr
xor
push
test
sub
daa
mov
add
jae
loope
jo
call
pop
jo
cmp
repnz
pop
mov
and
test
lret
aam
repnz
or
lcall
lahf
test
sbb
mov
sub
mov
scas
add
imul
aas
jno
adc
pop
sbb
scas
inc
ds
adc
jne
push
jecxz
jg
insl
adc
push
or
sub
adc
push
mov
int3
in
jge
jmp
das
or
jno
adc
lret
int3
add
fmuls
idiv
hlt
daa
add
jne
dec
push
in
inc
sub
pop
jmp
mov
sub
shlb
fsubs
sahf
xchg
lahf
sub
aaa
xchg
cltd
inc
ret
js
std
mov
add
outsl
outsb
and
dec
fsubrs
sbb
pop
ljmp
mov
cwtl
les
xor
aad
push
subl
dec
notb
push
test
mov
ror
aad
mov
adc
push
pop
inc
jbe
lds
lock
popa
lods
test
lods
dec
xchg
pop
jp
lds
stc
int3
fmul
dec
jecxz
sbb
and
subl
aad
mov
lret
fbstp
sub
mov
push
js
add
inc
out
cmp
jbe
test
lods
xchg
je
std
in
adc
xchg
fisttpll
push
sbb
enter
dec
inc
add
inc
xor
and
out
push
in
push
jno
ds
stos
clc
mov
leave
lock
dec
inc
pop
dec
jns
daa
pop
xchg
jne
iret
cli
aam
xchg
mov
dec
cmp
sub
cld
and
push
sbb
test
loope
xchg
std
push
cmp
pushf
pop
mov
mov
mov
push
rclb
and
jnp
jne
cld
xchg
cltd
and
add
hlt
rcr
rep
popf
mov
cmpsb
es
push
je
push
in
pushf
fiaddl
add
jnp
imul
pop
popf
pop
lcall
xlat
push
ret
add
test
sub
lahf
cmp
in
adc
mov
loop
add
push
and
mov
fs
in
push
loopne
test
sarl
push
shlb
subl
scas
or
xchg
inc
jmp
dec
jecxz
out
leave
aaa
cli
mov
dec
pop
adc
and
in
addb
xor
fidivrs
cli
dec
push
rclb
mov
mov
popa
jg
xor
test
mov
dec
pop
cmc
in
in
iret
sahf
loope
into
out
mov
push
cmc
fs
jb
inc
dec
or
das
pop
cmp
inc
jo
mov
ss
dec
fisttpl
hlt
popa
movsl
pusha
mov
mov
out
inc
cmp
inc
mov
mov
cli
mov
aas
dec
mov
cmp
xor
push
or
sbb
hlt
jp
fs
xchg
sub
mov
push
mov
sub
dec
mov
aad
popf
dec
test
mov
divl
rorb
movsl
int
dec
aaa
jno
scas
xor
jne
fisttpll
sti
inc
in
push
cmpsb
jb
jbe
mov
fbstp
add
test
xlat
cmp
pop
fisttpl
push
int3
mov
xchg
jb
cmp
mov
clc
out
out
fsubl
push
cmc
pop
sub
mov
das
push
aad
mov
mov
or
leave
inc
xorl
push
mov
loope
pop
xchg
push
lods
and
orl
and
lahf
sub
sbb
sbb
sub
mov
dec
dec
mov
jbe
dec
xchg
loop
adc
fnstenv
movsl
lret
ja
dec
mov
add
adc
out
out
xchg
loop
fsubrs
or
movl
push
or
mov
adc
test
shll
add
pop
inc
lcall
mov
aam
ljmp
mov
inc
sub
es
or
in
in
cmp
mov
mov
jo
add
adc
js
xor
add
dec
push
ss
mov
lds
xor
jg
stos
insb
rolb
dec
inc
sbb
mov
aas
xor
inc
push
rclb
sbb
js
popa
dec
xchg
jae
iret
sbb
cvtps2pd
or
xchg
push
mov
xor
push
mov
inc
mov
sub
dec
ret
cli
dec
test
iret
mov
mov
cmpsl
xchg
mov
mov
dec
add
push
mov
pop
xor
sub
shl
jnp
cli
aaa
mov
cs
insl
push
mov
test
in
add
fistl
bound
jmp
mov
push
out
inc
push
push
mov
jmp
mov
xchg
addr16
mov
mov
sbb
fnstcw
jo
cmp
mov
adc
pop
addb
hlt
xchg
cmp
outsl
xchg
enter
lods
mov
adcb
sub
jle
push
fisttps
sbb
in
add
xchg
dec
jbe
xchg
imul
lret
rorb
test
daa
sbb
push
push
push
xchg
pop
cmp
xchg
nop
push
mov
xchg
call
xlat
lret
repz
in
add
mov
cmpsl
xor
ficompl
mov
in
out
or
test
adc
xor
pop
mov
push
jns
xchg
xchg
js
cmpsb
pop
movsl
lcall
arpl
mov
sbb
push
ss
cmp
movb
mov
xor
loopne
inc
scas
jb
sahf
cmpsl
lret
movsb
hlt
or
sub
dec
push
jae
jb
insl
jp
xchg
cmpsb
js
test
test
aaa
testl
sbb
js
cmpsb
lock
jg
push
sub
loope
inc
cli
fwait
popa
inc
mov
insb
mov
test
scas
sbb
arpl
outsb
mov
dec
mov
fdivl
sbb
cwtl
aas
mov
mov
and
imul
cmp
mov
cmp
int3
push
cmp
insb
icebp
jecxz
jo
stos
gs
jae
cmc
cmp
jns
popa
dec
xchg
jl
push
outsl
sarl
int
xorb
inc
mov
pop
imul
ljmp
stos
inc
andl
mov
jecxz
or
cltd
jmp
inc
aad
pushf
jp
push
jns
daa
xor
jg
inc
adc
lret
repnz
popf
dec
fldt
dec
jl
repnz
in
pushf
mov
xor
mov
in
stos
mov
test
cmp
pusha
push
and
xlat
push
pop
inc
enter
ja
jp
dec
imul
jne
mov
fwait
push
mov
mov
inc
jae
cli
dec
jl
sarl
rcll
out
or
leave
aas
data16
and
ss
push
ja
cld
dec
xchg
cwtl
popa
lret
jmp
rorb
jmp
xor
adc
js
push
lret
cmc
xchg
hlt
pop
loope
push
daa
arpl
sub
popa
xchg
pushf
sub
sbb
shr
test
fisubrl
dec
jne
aaa
push
add
mov
je
cli
cmp
jg
or
fnsave
cld
sbb
mov
inc
jge
sbb
push
into
pop
ljmp
sbb
into
xchg
out
xchg
fisubrl
repnz
xchg
jb
jg
fldenv
jl
xor
cmp
xlat
iret
fsubrl
dec
sbb
and
push
sub
pop
or
testl
jnp
scas
cmp
fsubr
ljmp
mov
outsl
popa
jae
or
sbb
sbbb
xchg
movsb
add
mov
jb
pop
or
or
push
pop
add
pop
mov
pop
fsub
xor
pop
fadds
push
adc
jmp
sbb
lahf
pop
mov
arpl
add
fidivs
or
adc
pop
shrl
enter
ja
push
xchg
fadds
xor
xchg
xor
imull
fdivl
cmpsl
imul
push
or
stos
iret
mov
sarb
in
sbb
xchg
jl
sahf
mov
fs
mov
shll
add
xor
and
lods
or
mov
xor
into
outsl
xchg
push
jmp
inc
xchg
and
mov
push
stos
in
in
test
jne
les
int
dec
pushf
addr16
in
lahf
bound
push
shrb
mov
lcall
js
fisubs
jecxz
jns
mov
jl
and
xorl
and
stos
mov
data16
shrl
mov
loop
into
mov
mov
push
int
or
bound
cmp
aad
outsl
mov
out
pop
jnp
popa
sbb
adc
push
test
cmpl
stos
cmpsl
push
inc
popf
add
cs
pop
xor
fnstcw
pop
jae
ret
inc
mov
jb
enter
and
xchg
or
sbb
fcoml
mov
adc
mov
jo
pushf
push
mov
sahf
and
out
inc
jno
or
jno
push
mov
xor
subb
and
xchg
pushf
addr16
stos
ret
lahf
jmp
inc
or
imul
jge
dec
sbb
xchg
pop
xchg
in
sub
nop
jae
ja
lahf
sub
fsts
sti
xchg
and
cmp
rcrb
mov
xor
repnz
xchg
out
mov
stos
mov
jecxz
inc
fsts
xchg
sti
mov
clc
imul
jp
ficomps
pop
outsl
mov
mov
adc
pop
rolb
aad
inc
add
pop
adcl
sbb
push
push
mov
jle
xchg
xchg
mov
je
data16
inc
dec
roll
pop
aas
in
cmp
movsb
in
loop
hlt
dec
repz
cld
fstps
adc
jmp
mov
outsl
das
call
mov
cltd
or
outsl
les
push
popa
into
call
dec
add
adc
sub
xor
pop
lods
cmp
mov
pop
dec
sub
imul
adc
aam
push
out
xchg
ret
out
aas
repz
clc
insb
cwtl
cmp
ret
ja
lods
outsb
mov
repz
cli
shrl
out
dec
out
push
fcomps
push
in
int
adc
rcrb
mov
pop
gs
outsb
sbb
jnp
in
sub
enter
pop
or
imul
hlt
cld
ja
loop
mov
pop
push
xor
or
pop
mov
fwait
aaa
pusha
mov
and
dec
push
mov
jno
mov
cmp
cld
pop
add
cmp
fcompl
mov
stc
fdiv
sarl
adc
pusha
stos
inc
sub
or
aad
adc
popf
test
insb
or
mov
cld
push
adc
inc
adc
pop
cmc
pop
and
icebp
popf
imul
cmp
inc
and
pop
dec
outsl
xchg
or
je
scas
mov
insb
fwait
cmp
mov
jno
or
jne
mov
mov
cld
xchg
nop
add
or
data16
orl
lock
fs
mov
imul
rol
add
mov
loope
cmp
push
xor
nop
sub
stos
jge
std
cltd
dec
popa
jmp
clc
lcall
in
sub
xor
arpl
lahf
jnp
andb
and
mov
cmp
add
inc
sbb
xchg
mov
push
and
adc
sbb
leave
and
xchg
cmpsb
out
pop
sbb
sti
cltd
mov
and
bound
cmp
push
in
cmp
fistpl
mov
mov
add
xor
lahf
faddl
jmp
aas
push
xchg
pop
inc
xchg
jbe
mov
leave
icebp
adc
mov
enter
outsl
fnstsw
mov
mov
insb
add
mov
mov
xor
jle
mov
pop
lods
push
mov
outsb
adc
lea
repz
int3
cmpsb
dec
cld
out
push
mov
dec
idivb
xor
mov
imul
out
pop
add
repnz
mov
cwtl
and
ss
mov
sub
xchg
sub
adc
imul
fldt
push
jo
sbb
dec
stos
outsl
xor
mov
jno
cs
test
ret
popa
gs
cmp
sbb
std
jne
mov
sub
subb
out
sub
cld
sbb
add
ss
outsl
dec
jle
loopne
cmpsb
or
mov
sub
les
mov
add
pop
movsl
push
push
lods
test
add
adc
cld
das
mov
xchg
lock
fs
mov
and
cmp
scas
cmpsb
ret
sbb
bnd
mov
sbb
repnz
jg
sub
gs
xchg
add
test
dec
je
loop
cltd
adcl
fstl
cld
icebp
mov
gs
gs
aam
das
cwtl
rol
rorb
adc
sub
flds
daa
jns
repz
mov
and
mov
cs
mov
mov
cmp
aad
dec
loop
dec
in
hlt
jmp
adc
jle
cltd
cmpsl
gs
adc
insb
hlt
pop
dec
fcoml
cli
sbbb
cltd
bound
call
test
aad
lret
adc
sub
rcll
es
imul
lods
enter
push
jmp
mov
xchg
pop
es
adc
incb
scas
stos
inc
mov
aaa
rcll
fidivrs
push
je
add
inc
or
jecxz
fldcw
fidivrs
filds
pop
sub
pop
jge
sti
cmp
jmp
cld
stc
aam
jb
and
insl
fdiv
in
out
mov
aam
cmc
jp
sbb
mov
fwait
call
sbb
pop
mov
stos
adc
sbb
xchg
jge
jge
add
and
xor
lcall
sarb
pop
int
jl
jge
dec
cs
fwait
andl
adc
jle
xchg
or
pop
adc
adc
sub
scas
test
cmc
cmpsl
xchg
or
mov
xchg
jo
jl
mov
scas
cs
sbb
ds
push
cmp
icebp
out
cmpsl
outsb
pop
movsb
jne
ss
mov
or
inc
adc
pop
pop
jae
dec
test
cmp
pop
xchg
and
inc
xor
xor
sub
sti
aam
sbb
push
aas
daa
adc
addl
fimuls
xchg
dec
inc
in
mov
jle
sub
push
ficompl
pop
jnp
sbb
mov
cmp
push
or
jo
int
mov
mov
shrb
pop
mov
rorl
mov
pop
adc
xor
dec
fcom
cli
mov
inc
daa
stc
pop
pop
adc
xlat
add
sub
add
fcmovnu
mov
aaa
jne
cwtl
dec
cmp
sub
in
mov
add
pusha
lods
imul
mov
jbe
jno
faddp
movsl
xor
adc
lods
xchg
jb
sbb
mov
movsl
outsb
pop
push
pop
xchg
xchg
xorb
aas
stc
jecxz
mov
les
hlt
cwtl
fdiv
ds
pop
dec
scas
in
cmp
mov
mov
sbb
and
xchg
dec
lret
dec
fildll
dec
sub
jno
xlat
lret
cmp
inc
enter
rclb
bound
loope
mov
inc
jl
repz
repz
addr16
and
dec
inc
in
cwtl
mov
xor
pop
jle
sbb
push
sbb
and
pop
push
pop
xchg
xchg
mov
mov
insb
pop
ret
cmpsl
dec
push
dec
add
cmp
jmp
test
jbe
daa
cmp
or
out
xor
aaa
fisttps
mov
mov
dec
sbb
pop
nop
imul
xchg
insb
inc
icebp
lahf
jg
mov
std
mov
fdivrl
repz
addr16
test
dec
inc
xchg
les
push
fidivrl
lahf
xor
push
aam
mov
fsubs
enter
xchg
scas
movsb
xlat
ficoml
out
push
mov
jp,pn
pushw
adc
sub
icebp
vmovapd
pop
mov
sbb
int3
es
in
jno
jae
mov
push
push
aas
cmp
scas
pop
shlb
insb
nop
test
dec
mov
dec
cmp
lods
enter
stos
mov
jbe
arpl
cltd
jne
ret
push
je
outsb
mov
aaa
xor
mov
loopne
sub
add
aam
fwait
aad
mov
aam
ret
dec
cmc
sarb
outsl
cwtl
cmp
xor
inc
call
loope
mov
pop
and
pop
sarl
fs
cltd
loope
mov
and
push
xchg
push
xor
jg
adc
sbb
and
cmp
fdivs
loop
xchg
or
and
pusha
daa
rcrb
bound
xchg
les
sbb
shll
mov
jne
jmp
add
cwtl
repz
stc
enter
popa
mov
shll
jcxz
inc
orl
lahf
jecxz
add
add
jmp
repnz
sarb
test
adc
xor
fwait
scas
ds
pop
test
pop
es
sbb
ss
jp
sarb
idivb
xchg
push
lret
mov
mov
add
cmp
scas
inc
pop
push
jns
test
xchg
inc
push
adc
fildl
xor
in
xchg
jmp
add
into
vhaddps
js
repz
push
cmp
mov
mov
fistpll
add
xor
jo
pop
cmpsb
mov
loope
lock
inc
mov
das
jl
mov
and
and
inc
mov
lods
sarb
loope
mov
ss
xor
push
xchg
cmp
cwtl
aaa
jmp
add
cmc
mov
cmpsb
je
dec
stos
aam
shl
adc
inc
sbb
push
dec
sub
ja
loop
xchg
inc
sbbb
adc
daa
lahf
scas
cmp
cmp
adc
ss
and
xchg
mov
mov
arpl
push
mov
dec
jae
mov
mov
lods
mov
adc
nop
mov
mov
leave
dec
jb
xor
repnz
stc
int3
dec
push
int3
sete
mov
js
lea
ds
pop
xorb
push
in
test
fwait
jns
out
ret
jnp
loope
stos
pop
cmp
push
ja
sub
mov
pop
insb
test
push
adc
test
cmpl
mov
stc
fisubrl
sahf
movsl
mov
mov
add
loop
ficompl
insb
out
xchg
cmp
in
sbb
sbb
lret
lea
adc
stos
sbb
push
push
dec
cmp
mov
xchg
mov
or
in
pop
pop
push
mov
inc
enter
and
push
lcall
jb
xchg
and
push
into
aad
xchg
sbb
and
push
xchg
mov
shlb
xchg
push
xchg
rcr
pushf
aam
dec
test
mov
dec
pop
pop
je
cmpsl
jbe
add
xchg
sbb
outsb
cmc
sbb
sbbb
dec
xor
jg
fdivs
jge
lret
cmpsb
mov
loop
dec
mov
xchg
popa
bound
pop
adc
add
mov
adc
in
xor
mov
ret
aas
xchg
lahf
push
scas
andb
inc
mov
rolb
iret
ja
jbe
decl
push
sub
and
lods
hlt
cmp
pop
ret
lahf
jmp
jne
mov
dec
push
pushf
das
jmp
pop
jmp
das
adc
arpl
or
loope
sbb
push
repz
daa
push
inc
add
mov
inc
xchg
sbb
cltd
mov
daa
cmpsl
fldl
pushf
push
lcall
mov
arpl
negl
xchg
std
sbb
test
faddp
inc
pop
lea
cmp
shlb
xchg
test
sbb
jg
shlb
sub
fisubl
movsl
enter
add
xorb
lcall
loope
push
pusha
hlt
add
mov
dec
call
aad
je
or
inc
mov
sbb
and
mov
xor
mov
xchg
mov
sub
je
arpl
bound
mov
mov
cltd
imul
mov
pop
out
enter
lds
repnz
add
xor
rolb
mov
and
sub
fcomps
adc
popa
dec
fdivs
imul
xchg
jle
sbb
shr
inc
jnp
sarl
push
outsb
das
jmp
xor
dec
fbld
data16
rcrl
popf
mov
ret
imul
or
jecxz
or
jp
jae
js
call
aaa
jmp
test
or
div
and
movsb
cmp
js
mov
inc
mov
cmp
xchg
sbb
ret
jnp
inc
add
adc
stos
idiv
xchg
stc
xor
inc
int3
adc
sti
mov
nop
shlb
jp
cld
cltd
aaa
imul
mov
or
fidivrl
sbb
out
andb
in
inc
xor
push
push
mov
mov
subl
pop
mov
int
js
sbb
popa
incl
scas
jmp
std
pop
leave
imul
sbb
in
and
push
in
xor
stos
test
push
and
jg
dec
jo
bound
sti
jne
clc
mov
lahf
mov
inc
std
add
dec
pusha
dec
sahf
mov
sbb
add
mov
mov
aad
dec
daa
pusha
pop
sbb
pushf
inc
mov
ja
or
leavew
xor
int3
jge
xchg
mov
out
jg
jmp
mov
aam
xchg
ja
mov
test
xchg
addr16
sub
push
gs
leave
lods
out
cmp
add
jle
les
or
mov
fcompl
shl
hlt
mov
mov
call
pop
jnp
out
popf
fdivs
ficoml
inc
ljmp
roll
push
cmp
inc
pop
jne
xchg
dec
dec
cmp
and
jle
mov
fisttpl
scas
xor
add
xor
lea
push
call
pop
addr16
and
and
sbb
adc
pop
mov
dec
clc
xchg
xor
sub
pop
cmp
div
lods
movsb
push
imul
call
aad
jno
mov
int3
clc
jp
and
in
dec
lret
iret
pop
push
addr16
sbb
out
mov
sahf
scas
scas
mov
xor
push
leave
mov
mov
popa
stc
sub
in
addps
mov
dec
data16
cmp
push
aad
adc
cvtps2pi
jns
bound
push
daa
les
sar
inc
mov
std
imul
xor
sub
ljmp
inc
cmp
pop
outsl
push
mov
push
xchg
mov
ljmp
cwtl
lcall
jnp
mov
mov
mov
and
pop
enter
scas
int3
and
pop
iret
repnz
ja
out
sub
and
stc
cmp
mov
jecxz
and
mov
or
sub
sbb
lock
fsubr
fdivl
adc
icebp
stos
fcmovnbe
pop
frstor
and
xchg
ficomps
movsb
fistpl
cltd
in
loopne
inc
std
adc
jmp
test
adc
jnp
shlb
rcrl
aaa
dec
pop
mov
shlb
cmp
mov
push
int3
inc
pop
pop
pop
sub
xchg
imul
cmc
push
adc
pop
xchg
mov
or
cmp
ljmp
in
insb
push
push
pop
mull
jbe
cmpsb
das
cmpsl
jo
sub
fs
or
test
aas
test
test
cmp
data16
adc
les
mov
pushf
aas
pushf
add
in
push
sub
ret
cmp
push
pop
ret
or
xor
lahf
lods
add
sub
push
or
jns
sub
cmc
xchg
pushf
movsb
fistps
jnp
in
mov
scas
xchg
andl
ja
pop
aad
iret
dec
pop
lahf
fildl
dec
xchg
pop
cmc
cmpl
pop
mov
mov
aad
jl
cmp
pushf
sbb
lock
cmc
inc
in
rol
push
hlt
push
mov
add
ficoms
adc
in
xor
mov
sbb
mov
push
and
mov
cmp
jl
dec
icebp
addr16
fistps
or
sub
in
in
xor
add
roll
sbb
les
mov
push
ljmp
mov
pmaxsw
addr16
lret
xchg
and
loop
negl
popf
or
jns
mov
xchg
sub
xchg
adc
xchg
cli
mov
sbb
xor
jnp
xchg
sbb
outsb
pop
push
dec
push
jl
xor
lahf
cld
mov
xchg
mov
jge
or
and
aad
shlb
mov
push
fisubrl
and
out
adcb
sarl
das
jo
sbb
mov
sub
push
pop
imul
in
icebp
fldl
shl
mov
ficoms
scas
mov
lods
insl
dec
sbb
or
jb
add
xor
xchg
push
pop
sub
dec
and
add
pusha
jns
test
pop
jg
inc
xchg
out
dec
test
add
mov
test
xchg
jmp
and
xchg
lds
cmpsb
fwait
scas
hlt
nop
aam
inc
arpl
push
outsb
jno
lret
push
arpl
aas
push
scas
push
pop
push
insl
jae
out
fimuls
cmpsl
mov
movsl
push
hlt
dec
mov
sbb
push
cmp
scas
sbb
imul
cmp
lods
test
and
hlt
call
jle
mov
rcll
sub
inc
push
xor
sti
push
sbb
jne
into
mov
mov
jmp
xchg
das
mov
mov
aas
hlt
cld
shl
mov
xchg
lret
lret
dec
and
mov
add
fisttps
rolb
les
push
inc
pusha
sbb
xchg
mov
aaa
ret
mov
nop
push
sub
pop
popf
pop
jns
imul
in
and
test
out
int
pop
xchg
jmp
lods
jl
fwait
into
cmc
adc
jo
sbb
pop
sbb
inc
push
or
inc
pop
rcll
notl
test
mov
sbb
cs
xlat
adc
ret
cmc
scas
mov
mov
fisubs
xor
xor
or
inc
xchg
call
cmp
sahf
mov
pop
loope
shlb
inc
fisubs
repnz
pop
call
inc
testl
popf
jae
mov
push
notl
insl
fucomip
out
test
xchg
iret
out
inc
sarl
mov
cmpsb
dec
adc
clc
cmp
sbb
scas
shlb
sbb
repz
aaa
and
pop
xchg
cmp
fisubs
jb
inc
stos
jle
fcmovnbe
push
mov
push
adc
out
inc
jno
pop
cli
sub
loop
lcall
inc
pusha
mull
mov
stos
or
push
mov
jmp
mov
popa
mov
cmc
test
inc
mov
aad
adc
inc
jg
loop
cs
stos
into
jns
fiaddl
and
test
cltd
iret
and
addl
push
push
jg
js
cmp
leave
pop
fldcw
or
cld
sbb
or
or
pop
mov
pop
dec
jo
mov
fdiv
mov
fadd
jp
adc
dec
inc
jg
loopne
mov
roll
sarb
mov
sub
mov
xchg
orl
jg
fildl
clc
push
xchg
push
adc
adc
add
loop
jl
ret
loop
repz
mov
push
inc
mov
shlb
mov
mov
fnstcw
jp
mov
inc
mov
pop
mov
xor
pxor
cld
inc
mov
inc
sbb
imul
ret
inc
sti
and
mov
int
cmpsl
mov
es
xor
out
cmp
nop
out
jae
cmp
pop
sbb
popa
cmp
xchg
out
add
loopne
fimuls
xor
xchg
sub
add
and
mov
out
adc
mov
lods
mov
rcr
sbb
gs
pop
xor
cwtl
cmp
andl
hlt
sarl
xchg
outsb
inc
mov
sub
aam
cltd
pop
inc
push
adc
lret
or
and
mov
push
push
and
pop
push
pop
and
adc
mov
jno
andl
pusha
pop
and
sub
cmpsl
xor
or
jl
lcall
cwtl
jns,pn
push
sarl
test
popw
sub
popa
pusha
push
testl
call
push
dec
adcl
jmp
mov
jno
shll
in
fidivs
sub
data16
add
outsl
sub
jbe
add
jno
pop
and
cld
fdivrs
cmpsl
pop
aad
xchg
mov
adc
iret
je
cmp
inc
aad
iret
mov
jl
jecxz
ficomps
mov
pop
repz
push
mov
imul
mov
mov
shrb
aaa
das
pop
inc
mov
xchg
subl
or
jae
pop
pop
push
repz
mov
pmaxub
xchg
mov
or
mov
xor
jns
stos
or
xchg
sti
test
lahf
cs
loope
lahf
inc
xchg
or
pop
in
in
sub
sbb
repnz
aam
add
outsb
jl
dec
inc
repz
and
and
js
out
ss
jnp
in
pop
sub
add
aaa
inc
imul
xchg
sbb
mov
mov
xor
lock
scas
mov
xor
cmc
test
scas
sbb
add
pop
push
or
mov
jnp
pop
nop
add
lahf
sbb
mov
adc
gs
rcll
adc
inc
and
in
push
mov
fimuls
repnz
je
pusha
into
dec
or
pop
push
cmp
jl
pop
or
arpl
in
in
icebp
sbb
jb
mov
ss
imul
sbb
lret
and
pop
and
xchg
lea
ficompl
rcrb
pop
mov
pop
aas
cs
xlat
jnp
pop
stc
xchg
test
aaa
mov
adc
push
push
push
mov
push
mov
xor
mov
push
sbb
mov
push
dec
test
test
in
and
jno
sub
pop
popa
leave
pop
mov
inc
in
int
dec
adc
popf
popa
push
cmp
lret
addr16
mov
enter
jbe
xchg
movsb
out
in
aam
dec
mov
pop
cmc
lds
adc
cmc
outsb
push
dec
cld
xchg
push
dec
lods
pop
aaa
fs
add
ret
push
dec
iret
inc
xchg
mov
mov
pop
mov
jne
mov
sbb
imul
mov
dec
add
stc
xor
pop
pop
inc
negl
xor
in
jp
mov
fisttps
adc
inc
aam
mov
jg
es
pop
stos
leave
dec
inc
aas
inc
fdivs
or
mov
jae
repz
jmp
mov
add
into
js
getsec
mov
xlat
jb
adc
ss
pop
rcrl
scas
les
sub
lahf
notl
dec
xor
das
call
aad
andb
out
mov
icebp
sahf
fdivrs
push
mov
mov
push
mov
sbb
adc
xor
adc
in
jl
lahf
mov
sbbl
push
loopne
pop
mov
sub
push
and
iret
dec
and
sahf
mov
bound
loopne
jmp
push
push
cmp
pop
fbld
in
pop
sbb
cmpb
mov
icebp
add
test
adc
lods
test
cmp
cli
aam
adc
out
ret
xchg
bswap
inc
cli
mov
push
pop
out
and
fdivr
bound
popa
out
insl
cs
xlat
movsb
out
add
ficoml
sahf
mov
nop
push
jg
stos
or
sub
or
int
shrl
shll
mov
or
mov
sbb
add
popa
pop
push
rclb
enter
test
lret
call
cmp
xchg
cmp
push
cltd
jg
cmp
aad
pop
sahf
stos
aam
pusha
jnp
jmp
aas
pop
gs
movsb
jmp
aam
sbb
jne
mov
adc
ja
xchg
and
sti
jns
loopne
and
pusha
jmp
adc
dec
xchg
and
out
dec
data16
jo
pop
xchg
movsl
dec
lods
inc
sbb
fldl
mov
mov
in
xor
repz
push
mov
or
ljmp
fisttpll
aas
out
mov
repnz
push
insb
cmpsb
mov
sarb
fs
in
push
sub
fdivl
adc
adc
mov
mov
push
or
cmp
dec
mov
ret
stos
mov
push
lret
xor
test
ret
mov
aam
xchg
bound
test
arpl
cmp
pop
adc
mov
ficompl
inc
in
or
insl
adc
cwtl
sbb
cmp
mul
out
out
loopne
inc
ja
mov
cmp
inc
int3
mov
and
pop
call
lock
add
sti
pop
jmp
jnp
dec
cmp
or
push
push
or
fisubrl
push
lcall
out
aam
jnp
lds
push
fucomip
add
push
jl
sarl
sarb
push
add
add
mov
int
lcall
insl
sti
insb
xchg
sbb
xchg
xchg
push
pop
fmulp
dec
cmp
fistpl
les
inc
lahf
push
or
leave
xchg
sub
mov
pop
cmp
movsl
pop
in
clc
daa
stos
push
xor
imul
aam
xor
jno
sub
cmpsb
sar
in
inc
rol
je
inc
cld
loope
fistps
cmp
lahf
jge
xlat
js
pop
dec
xor
das
jae
xchg
arpl
xchg
das
movsl
jbe
repnz
jae
ja
fadd
or
fisttpll
xchg
xchg
or
pop
pop
sbb
lds
loopne
leave
add
icebp
cld
ds
xor
xor
mov
push
mov
pop
pop
js
adc
and
xor
cs
loope
mov
sub
and
stc
pop
xor
es
out
mov
loopne
sub
jae
cmp
imul
rcll
jne
adc
into
lret
push
xchg
fiaddl
jcxz
ljmp
dec
cwtl
aaa
cli
jl
mov
mov
adc
negb
call
daa
mov
stos
jo
xchg
test
dec
ja,pt
aaa
pop
int3
test
or
cwtl
clc
jns
xor
gs
pop
fmul
mov
dec
fisttps
push
dec
cmp
fs
outsb
hlt
jmp
or
add
push
inc
mov
insb
push
or
loop
stos
les
aaa
pop
push
jb
jno
fnstsw
push
mov
test
xchg
and
pop
test
mov
push
and
aad
sub
or
dec
inc
hlt
fcmovb
sti
mov
xchg
in
mov
or
sbb
icebp
pop
fucomip
aas
add
loope
jle
xor
rorb
pusha
cmp
xchg
sub
add
lds
inc
ja
cmp
popf
xchg
add
mov
mov
sbbb
mov
jae
lods
jmp
aas
call
sbb
push
mov
mov
push
inc
and
daa
out
fwait
enter
cmp
ret
leave
out
insl
pop
sub
fimuls
pusha
addl
inc
fisttps
sub
xchg
push
sub
in
pop
into
push
or
movsl
inc
pop
pop
call
shrl
sti
pusha
mov
scas
fsubs
inc
movsl
dec
adc
dec
gs
or
jmp
pop
cmpsb
sub
push
shll
or
imul
icebp
outsl
mov
mov
popa
imul
out
sbb
cmp
or
xlat
xor
and
mov
add
push
in
out
sub
inc
xor
xchg
xchg
popf
jg
pop
test
daa
push
or
cmc
push
mov
dec
pop
push
xchg
cmp
dec
adc
lcall
ret
sbb
xchg
ss
add
xchg
cmp
sub
sahf
xchg
orb
pop
insb
xchg
or
and
xor
fisubl
int
and
pop
sub
rolb
jb
orl
call
mov
scas
je
gs
jmp
scas
xchg
and
mov
mov
xchg
mov
aad
test
std
lret
repnz
xchg
adc
sbb
jne
adc
lahf
fistpl
test
jbe
push
cli
jb
mov
mov
shrl
adc
test
pop
add
cs
mov
out
mov
jmp
push
jb
or
negl
jne
dec
rorb
int
ret
and
jb
iret
and
pusha
inc
cmpsl
mov
or
enter
or
jne
and
repnz
jl
jb
jns
xchg
cmpl
int3
xchg
adc
aam
xor
test
inc
mov
outsl
pop
push
mov
je
mov
add
push
out
mov
sub
aas
jge
mov
stos
jle
stos
inc
loop
jge
adc
inc
xchg
xor
mov
jno
hlt
add
jmp
xor
flds
repnz
jge
cmp
jb
out
imul
jecxz
lods
add
mov
and
fs
push
sahf
shlb
inc
xor
mov
fwait
iret
jb
ja
cmc
out
mov
subb
add
repz
lahf
test
or
dec
and
int3
repz
stc
pop
and
mov
cwtl
push
pop
mov
rol
jns
shrb
ret
mov
std
pop
and
fisubrs
mov
xor
jne
cli
mov
pop
test
test
notl
xchg
rcrl
cwtl
mov
push
fsubrs
shlb
sbb
jmp
add
cwtl
mov
push
mov
popf
sbb
push
push
addr16
loope
popl
cld
cli
mov
jmp
movsb
and
or
arpl
jle
sti
mov
mov
adc
sbb
fucomip
or
imul
sbbl
gs
mov
sbb
or
jae
cwtl
and
and
sti
pop
sub
push
in
into
jb
push
cmp
je
push
mov
jl
mov
mov
sub
mov
stc
cmp
pop
fimull
dec
out
scas
dec
or
fsubrs
movsb
pop
adc
int3
sub
mov
in
mov
in
fwait
data16
push
mov
jecxz
fwait
out
je
aad
xor
inc
xlat
sahf
pop
cld
int3
mov
pop
stc
btr
cmpb
cld
sbb
mov
xchg
jno
cs
fs
pop
aam
outsb
or
fists
pop
loope
repnz
repz
sbb
test
mov
and
add
sbb
sti
push
shlb
ss
loope
jg
mov
xlat
js
sub
cs
cmpsb
jp
adc
imul
lds
or
xor
inc
shrl
or
cmpb
mov
mov
xchg
jb
data16
and
stos
pop
mov
stc
mov
loopne
jge
push
std
cmc
in
cmp
nop
repnz
pop
xchg
lret
bound
jp
bound
pusha
mov
mov
mov
jo
push
push
in
sbb
repz
push
test
icebp
push
inc
or
mov
inc
push
and
enter
xor
fisubs
or
mov
shrl
dec
mov
insl
mulb
cmp
jae
cmp
adc
lock
enter
jmp
data16
stos
inc
pop
xor
bound
jg
sub
xlat
in
lret
sbb
or
jne
shll
or
or
push
xchg
add
aaa
fnstenv
and
or
inc
cmp
pop
or
push
mov
push
pop
mov
leave
movsl
xorb
pop
dec
jb
xor
xchg
cmp
lret
xlat
lods
jp
int3
and
stos
imulb
sub
test
ja
out
xchg
rcrb
adc
dec
stos
fcomps
add
mov
jnp
fdivs
clc
clc
hlt
xchg
fnstcw
repnz
jp
and
fisubl
mov
xchg
call
push
ret
mov
push
jmp
in
in
push
mov
ja
jmp
mov
nop
int3
loopne
mov
xchg
dec
xchg
lods
into
jle
add
call
push
xchg
add
xchg
outsb
leave
adc
cmpb
xor
xor
jno
das
aam
fldt
pop
pop
out
inc
out
ret
out
pop
push
rcrb
adc
fildl
or
pushf
and
adc
int
das
fcmovbe
andl
xchg
mull
jl
add
dec
ds
pop
push
jo
mov
movsb
loopne
add
lret
mov
js
imul
adc
and
addr16
fistl
dec
pop
outsl
pop
push
fisttps
js
sub
arpl
jo
ljmp
add
inc
repz
mov
mov
leave
add
push
xchg
ror
shlb
popf
mov
sbb
mov
pop
lods
mov
ljmp
pop
ret
pop
adc
sbb
push
jns
inc
jo
movsb
ljmp
push
aam
int3
add
stos
xchg
and
or
ljmp
aaa
test
lcall
lcall
imul
cmpsl
ja
push
lret
push
mov
icebp
mov
repnz
xor
jno
mov
out
push
lods
imul
clc
pushf
cwtl
cmp
xor
mov
clc
sub
ror
jnp
xor
dec
or
movsl
mov
ds
pop
xchg
push
jg
lds
push
push
aam
cwtl
mov
shll
mov
out
or
fs
push
add
jle
bswap
pop
sbb
mov
cmp
add
cmp
sbb
sub
dec
mov
movb
pop
lcall
in
adc
stos
popf
xchg
lods
dec
add
mov
mov
cli
in
pusha
rolb
mov
cmpb
pusha
rorl
out
inc
xchg
lods
cmpl
bound
xchg
pop
cmp
cmp
call
mov
xorb
sub
frstor
push
and
or
pop
inc
movsl
cmp
adc
les
inc
push
ss
imul
aas
lods
mov
lret
into
and
aad
sub
stc
adc
adc
adc
sub
jo
popa
jb
out
fst
fidivrs
lods
lods
jno
test
sbb
jb
in
mov
jo
mov
push
mov
lahf
popa
sub
pusha
loop
adc
fsubrp
loope
movsl
dec
xor
stc
xchg
xlat
or
ja
jns
cld
jecxz
cwtl
sbb
scas
jl
mov
mov
mov
mov
test
popa
enter
or
aas
adc
adc
shlb
inc
jge
xchg
ret
or
shll
je
xor
pusha
sti
or
jg
inc
push
jp
sarb
stos
sub
sub
roll
add
daa
sub
and
testb
mov
out
inc
js
jle
cwtl
sbb
add
cwtl
sbb
and
inc
add
mov
lods
clc
cmp
mov
int3
movsb
jmp
xor
pushf
cld
fsub
sarb
jnp
into
aas
hlt
in
dec
mov
in
ret
pushf
dec
add
js
jbe
and
je
sti
enter
sti
shrb
loopne
jle
lahf
dec
mov
cmp
or
mov
lods
cmp
sub
popa
in
sbbb
xchg
jne
lds
mov
dec
push
jg
push
xchg
adc
jo
popa
fdivr
pop
mov
push
mov
cmp
cltd
or
outsl
sbb
pop
dec
andb
jbe
mov
mov
sahf
adc
dec
and
cld
repz
mov
adc
lcall
or
pop
inc
loop
add
fildll
or
into
jmp
adc
imul
repz
xor
out
mov
jno
push
push
sbb
and
sti
adc
lds
pop
js
sbb
rclb
pop
shl
mov
mov
test
stos
add
mov
scas
dec
movsb
jg
mov
mov
clc
filds
mov
sub
and
lret
xor
mov
or
rclb
xchg
xchg
and
stos
nop
jbe
add
hlt
xchg
loop
ss
mov
add
jbe
out
push
out
in
fs
inc
or
fdivrl
xchg
jmp
pushf
pop
stos
shr
push
daa
push
lods
mov
mov
int3
mov
ds
adc
lcall
cmp
add
lret
push
inc
daa
lea
xor
fs
inc
les
jmp
lahf
xlat
ficoms
popf
icebp
nop
pop
pop
lret
lds
rorl
xchg
pop
enter
loopne
cmpsl
jae
hlt
xor
and
mov
cld
sbb
sti
pop
sub
dec
fwait
push
jne
mov
cmp
push
mov
sub
and
lret
push
js
lock
mov
pop
cmpsb
jnp
or
sti
ficoml
lds
dec
sub
inc
mov
cld
pop
pop
adc
ss
mov
xor
stc
scas
fwait
add
pop
and
mov
or
lock
in
js
and
ja
aam
mov
das
mov
fisubl
repnz
jno
fdivr
out
lods
mov
mov
ljmp
fcmovb
fwait
out
add
xchg
lret
jl
mov
cmpsl
and
or
sbb
add
es
pusha
lds
inc
out
adc
stc
cmp
mov
mov
cmpsb
sub
movsl
cmp
mov
mov
jo
adc
add
mov
xchg
or
flds
enter
test
divb
sti
mov
jnp
gs
sub
in
mov
les
push
jl
out
sbb
inc
lds
insl
xor
mov
xchg
iret
xlat
and
sbb
mov
fs
sbb
jnp
or
pushf
add
popf
or
lahf
leave
mov
jno
imul
mov
sub
jbe
sarb
jg
push
imul
movsb
mov
rcr
test
test
add
inc
in
scas
inc
in
shll
jnp
stos
imul
sub
popa
cmp
push
ds
sbb
pop
dec
dec
rsqrtps
sub
xor
sub
les
mov
pop
xchg
inc
loope
clc
lcall
sub
pop
sbb
jmp
adc
stos
sbb
inc
aam
js
lods
mov
inc
insb
je
cmpsb
scas
ja
mov
pusha
push
xor
xor
cmpsl
push
inc
mov
lods
mov
call
out
or
xchg
inc
dec
mov
in
js
fwait
inc
or
ja
stos
mov
push
mov
mov
add
jmp
in
gs
inc
xlat
mov
jno
out
setp
test
push
pushl
cmp
jno
xor
insl
fidivrl
pusha
je
addr16
and
mov
in
out
fistps
xchg
in
mov
jle
cmp
mov
xor
mov
xor
mov
mov
xchg
adc
je
mov
pop
and
scas
jmp
jmp
adc
movsb
push
sbb
mov
dec
push
daa
sbb
stc
sub
cwtl
or
xchg
pushl
mov
cltd
fsubs
lret
mov
xor
std
mov
stc
aas
in
pop
pop
pop
dec
fwait
sbb
or
sub
add
sub
jle
or
push
test
pop
leave
mov
fisttpll
or
jae
int3
into
sbb
and
leave
in
shlb
xchg
adc
movsb
xchg
stos
fwait
mov
and
adc
pop
push
mov
call
movsl
fimuls
jbe
lods
pop
mov
ja
lret
pusha
rcrl
cli
pusha
lock
push
out
out
in
aam
ret
movsb
pop
test
adc
sub
shll
cmp
sbb
pop
sub
cmp
push
push
push
insl
scas
outsl
xor
and
push
lcall
out
xchg
test
orl
lea
test
pushf
sahf
xor
pusha
xchg
test
mov
sbb
push
js
push
into
add
fcomps
and
je
pop
cmp
cmp
daa
xchg
add
push
lods
xor
loopne
pop
inc
scas
jns
pop
mov
imul
mov
fldcw
mov
arpl
adc
pushf
adc
sub
dec
insl
mov
add
and
mov
push
ja
inc
outsb
andl
pop
cwtl
jg
jnp
sarb
and
mov
jb
jecxz
inc
jno
dec
xchg
into
or
movsb
lahf
dec
fnstsw
add
mov
pop
divb
loope
xor
mov
sub
mov
or
fs
test
in
out
std
loop
sbb
bound
ljmp
inc
ret
mov
dec
jecxz
mov
or
inc
xchg
js
out
and
mov
xchg
test
fcoms
xor
dec
jg
xchg
in
fs
jnp
aad
sarl
dec
rolb
loope
addl
aas
dec
sbb
call
test
mov
loopne
scas
mov
jne
jle
fimuls
stos
stos
xor
into
inc
aam
shl
push
mov
das
sub
mov
inc
ja
and
xor
add
ja
icebp
mov
or
jne
ficompl
loopne
inc
sub
jae
loop
jns
into
cltd
mov
out
leave
adc
aas
mov
dec
add
xlat
adc
push
mov
clc
pop
shll
popa
je
xor
xchg
insl
enter
es
xchg
das
pushf
and
add
das
mov
cmp
sti
sbb
shl
sub
sahf
push
inc
lods
dec
mov
pusha
mov
cwtl
sbb
dec
rorb
push
popf
mov
lods
xchg
jne
xchg
loopne
popa
mov
mov
in
insl
jno
rorb
inc
scas
sbb
mov
cwtl
adc
mov
mov
sbb
data16
in
cltd
mov
sbb
or
call
cld
fwait
mov
fimuls
outsb
addb
jb
sub
or
leave
push
xchg
out
inc
adc
cmpsb
inc
cld
xchg
jne
add
loope
cwtl
cwtl
adc
pop
mov
or
in
sahf
lahf
jg
xlat
xchg
xor
cmp
jnp
inc
sub
mov
sbb
loopne
cmp
test
test
pop
pop
cmp
mov
sbb
int3
sbb
pop
addr16
out
mov
mov
jge
mov
push
mov
loopne
xchg
popf
xor
aam
test
daa
shlb
adc
cli
sbb
lahf
cmp
xchg
xchg
pop
aad
leave
xor
sub
mov
pop
pop
pop
add
in
clc
sti
mov
inc
movsl
adc
cwtl
sbb
pop
arpl
add
cmp
mov
cli
mov
sbbl
add
mov
mov
or
push
sbb
cltd
sbb
bound
subl
loopne
sahf
call
jp
jbe
shll
lret
xchg
out
cmpsl
dec
sub
mov
inc
and
in
push
insl
jp
aam
nop
add
adc
fwait
jnp
mov
cld
xchg
fstl
mov
movsl
push
iret
aas
std
pop
notl
rolb
aaa
lods
scas
xor
jle
jg
add
js
ds
and
arpl
dec
sbb
jmp
or
enter
outsb
and
icebp
jae
outsl
shrl
dec
std
imul
ror
mov
or
call
mov
paddd
sbb
nop
pop
xor
mov
fnstsw
cli
xor
cmc
sbbl
sahf
or
xchg
sbb
in
fs
call
ret
mov
aam
rcr
lcall
out
lods
mov
adc
or
shrb
and
mov
daa
data16
imul
sub
sbb
ds
sbb
push
dec
imul
xor
push
shlb
xchg
cld
jl
cmpsb
push
imul
popa
and
dec
dec
jae
sbb
pop
and
arpl
inc
pop
test
xor
sub
cwtl
jmp
cs
lock
daa
aad
inc
xor
shll
mov
push
test
cmpsl
cmp
loop
mov
adc
add
sti
js
mov
adc
test
dec
movsl
pop
xor
lahf
jbe
xchg
add
push
ja
fs
cld
xchg
push
fiadds
cmp
adc
popa
jp
sbb
lea
sbb
adc
lods
cmp
push
xchg
dec
je
out
pop
mov
out
add
cwtl
or
jmp
ja
iret
inc
mov
test
cli
cmc
inc
icebp
std
pop
stos
dec
je
push
sub
scas
inc
jbe
jl
push
xor
hlt
rolb
cmc
das
mov
and
jg
adc
lds
mov
int
dec
inc
fadds
repz
jp
sub
add
xor
aas
cmp
dec
sahf
imul
cmp
test
int3
pop
mov
or
mov
mov
iret
sbb
cmpsl
aad
vsubsd
mov
lods
cli
das
and
and
cmpsl
mov
outsb
jb
gs
pop
movsl
ffree
cmp
ret
inc
outsb
in
adc
add
add
mov
mov
clc
jns
pusha
movsb
test
daa
add
push
dec
inc
mov
mov
int3
jae
sahf
mov
push
ret
inc
push
aas
xor
cmp
add
or
add
jnp
cli
mov
clc
xchg
and
adc
jl
sub
nop
cld
fbld
jg
add
out
dec
out
enter
mov
cli
mov
and
imul
mov
ljmp
inc
cmpsb
sahf
sbb
xor
mov
scas
mov
mull
imul
daa
dec
aad
fists
fcmovnb
repnz
dec
xor
repz
aad
and
shrb
test
and
imul
xchg
sbb
mov
outsl
gs
mov
aad
jl
or
sub
dec
add
jae
ds
inc
shrl
pusha
mov
test
push
cwtl
es
xchg
popf
xchg
imul
pop
pop
jmp
mov
push
cmpsb
jp
arpl
clc
cwtl
jns
loop
popa
ret
out
hlt
or
mov
push
in
fistps
sbb
dec
or
fidivl
addb
test
leave
jl
cmp
subl
mov
sbb
sub
pop
jmpw
jp
xchg
mov
pop
adc
or
ss
out
jl
ret
sub
cs
mov
stos
and
cmpsl
mov
les
inc
mov
dec
ja
pop
jl
mov
push
arpl
add
cmc
inc
sahf
pop
sbb
fcomps
test
in
push
clc
inc
sbb
jbe
ror
sub
xchg
sbb
cmpsl
adc
pop
pop
in
insb
fwait
movsb
adc
mov
test
popf
inc
or
and
addb
insb
xor
mul
mov
inc
cmpsl
push
xchg
je
mov
cld
stos
pop
xor
clc
clc
jg
jno
sub
cmp
hlt
cmp
and
out
das
faddl
push
xchg
and
pop
mov
out
fwait
push
hlt
inc
ljmp
test
add
adc
pop
sahf
lods
dec
or
lret
pop
addr16
mov
push
cmc
xchg
std
daa
ret
pop
ds
jecxz
xlat
adc
add
push
out
mov
sahf
mov
sub
inc
cmp
movsl
test
in
fsubrl
int
fldcw
cmp
push
iret
inc
pop
jne
jno
popa
ret
lahf
cmp
cld
cmc
dec
out
popl
jmp
mov
mov
icebp
loope
cs
pop
add
out
ds
cld
mov
push
int3
std
rolb
bound
push
adc
push
out
stos
jmp
add
arpl
ljmp
outsb
cs
imul
andl
sbb
ljmp
push
jae
js
divl
lret
mov
dec
lcall
rorl
inc
insb
mov
lcall
and
pop
cli
es
mov
sub
dec
pop
ret
addb
pop
mov
leave
inc
insb
xlat
js
imul
mov
xchg
pop
mov
sub
or
push
test
ja
cmp
sbb
mov
mov
jnp
invd
add
dec
mov
mov
cmp
adc
out
stc
sub
or
fldt
add
leave
nop
pop
xchg
inc
and
gs
cmpl
out
fisttpl
xchg
out
lods
xor
mov
leave
adcb
leave
pop
addr16
jae
jmp
or
dec
insl
xor
sbb
loope
shll
mov
call
sbb
adc
sbb
add
dec
out
push
movsl
divl
stos
inc
loopne
lock
push
dec
xor
ret
inc
sahf
cmp
jmp
add
out
cwtl
gs
les
jb
jb
subl
in
mov
das
lods
mov
pop
mov
cmp
adc
ret
cmp
std
add
and
jge
xor
test
inc
xor
lea
nop
and
cltd
lret
ret
jp
jge
sbb
jne
pslld
sbb
in
cmp
fs
jnp
imul
filds
lahf
push
sub
push
pop
xchg
stos
push
or
jle
push
add
es
rorl
hlt
aas
pop
jne
sbb
dec
xchg
test
rol
in
pusha
cmp
lahf
jbe
lret
and
adc
stos
xor
jmp
jge
xchg
cltd
sahf
xor
mov
fisttpll
inc
sub
insl
lods
mov
push
adc
lahf
push
dec
outsl
push
push
jb
xchg
fnstcw
push
add
ds
pushf
jp
ja
dec
lret
and
sub
jbe
jb
jp
cmp
or
sub
call
xchg
leave
loope
mov
inc
xor
scas
sub
and
rorl
psrad
ficompl
xchg
lods
outsb
push
inc
in
mov
sbb
or
jbe
xchg
mov
mov
push
mov
mov
cld
sbb
mov
mov
jl
pop
and
pop
in
movsl
out
loope
adc
lahf
mov
xor
cmp
stos
rcll
in
mov
pop
dec
shrl
imul
outsl
xorb
testl
jns
jns
jne
adc
dec
test
inc
adc
lods
mov
sbb
dec
sub
aaa
lods
or
cmp
xor
mov
push
sti
xor
mov
cmp
mov
push
xor
lcall
inc
jge
int3
test
cmp
incl
ds
sub
mov
cmp
stos
imul
mov
dec
jge
ss
repz
cmpsl
sbb
bnd
cmp
cmp
pop
call
outsl
mov
ret
test
out
pop
add
adc
sbb
dec
shl
mov
fsubl
dec
dec
pcmpeqd
xchg
sbb
jne
add
dec
in
push
std
inc
jns
or
mov
dec
scas
push
inc
cltd
mov
ljmp
jae
fisubrs
loop
movsb
fildl
dec
xor
arpl
or
in
fidivrl
sub
ficoml
lods
xor
loope
xlat
dec
inc
fst
jne
push
xlat
inc
dec
mov
rol
xchg
push
repz
test
xor
pop
adc
ret
loope
lcall
loop
xchg
xchg
add
fnstsw
add
in
loopne
jnp
xchg
popa
xor
das
and
mov
ret
inc
and
ss
mov
mov
test
daa
test
stc
fiadds
cmp
dec
cmp
shll
js
lahf
xchg
inc
or
inc
sub
jns
outsl
inc
mov
mov
sbb
jl
xlat
ret
lock
pop
push
mov
xchg
ret
lret
cld
mov
mull
dec
std
stos
sub
out
dec
dec
or
adc
push
mov
xor
mov
outsl
pop
jno
call
pop
sbb
and
mov
imul
cs
jb
push
push
sub
dec
jbe
addr16
push
icebp
dec
scas
sub
mov
or
xchg
lods
cs
sbb
jnp
adc
mov
jl
fisttpl
sub
sbb
hlt
test
pop
inc
add
cmpsb
jne
mov
mov
mov
in
fstps
lea
sbb
fistps
jb
push
jnp
adc
cmp
sub
call
cld
dec
fisttps
and
out
rorb
hlt
divb
and
test
in
lods
in
dec
or
push
sub
or
scas
es
mov
lock
adc
inc
adc
jo
xchg
in
push
lahf
mov
lcall
sub
insl
lret
inc
cld
aad
fnsave
rcrb
adc
mov
mov
and
mov
push
ljmp
add
fwait
pop
daa
lods
ds
jae
fstpt
leave
popf
dec
in
test
aaa
mov
dec
es
push
jae
fldt
jmp
fmull
pop
inc
shll
jp
xchg
mov
fcomps
pop
xchg
popa
mov
dec
lock
dec
aad
clc
inc
mov
push
sub
std
mov
inc
cmp
sbb
lahf
fnsave
fildll
sub
call
jae
ret
std
inc
in
mov
lods
inc
scas
or
loope
cwtl
daa
dec
outsb
xorl
aas
and
gs
jmp
sub
in
jg
lods
shlb
rorl
cmpsl
pusha
cmp
pop
test
xchg
sbb
pop
inc
adc
and
jne
test
mov
xchg
mov
adc
jbe
es
inc
testb
inc
pop
and
mov
repz
lahf
ss
ljmp
rcrb
push
lahf
sub
pop
pop
push
data16
test
jecxz
or
add
xor
pop
jle
or
mov
and
jge
xchg
add
push
cmpsl
cld
call
enter
in
cmpsl
js
pop
cmp
mov
inc
test
js
jmp
stos
or
jnp
lods
cmp
add
adcb
ljmp
cmp
lret
aaa
sbb
sub
mov
mull
push
cmc
lcall
mov
aaa
push
jo
adc
mov
inc
mov
jle
int
mov
mov
or
dec
ret
outsb
cwtl
fwait
shlb
cmp
xor
std
aad
in
mov
or
or
jmp
sbb
jmp
xchg
rol
pop
popf
dec
inc
loop
push
inc
add
cmpsl
out
xchg
sub
push
dec
shlb
pop
ss
adc
cmp
movsl
jae
jae
and
addr16
mov
in
dec
in
loopne
outsb
test
mov
call
lret
xchg
popa
push
shll
mov
call
in
sbb
fisubrs
add
fbld
sbb
pop
push
adc
mov
js
je
or
cmp
imul
ret
xor
push
inc
sarb
pushl
aaa
mov
mov
fiaddl
push
leave
xor
leave
negb
sub
add
xchg
cli
pushf
mov
push
cmpsl
cmc
stos
into
mov
dec
jmp
inc
js
rcll
xor
add
adc
sbb
xor
ds
xchg
int
xlat
push
test
push
into
jno
push
pop
inc
ret
cmc
aaa
int
lahf
adc
enter
xor
add
je,pn
mov
mov
xchg
gs
jb
dec
fmuls
cmp
sbb
in
inc
ret
sahf
ret
xor
dec
ljmp
add
inc
mov
imul
or
xor
push
orb
pop
dec
sbb
add
push
mov
test
hlt
loope
mov
inc
pop
push
mov
ret
scas
mov
mov
cld
jbe
xchg
sub
mov
iret
cld
push
mov
aas
sbb
fisttps
xor
andl
fsub
dec
fimuls
fldlg2
stc
mov
mov
mov
mov
fadds
cld
cs
int3
scas
dec
stos
frndint
test
sub
mov
xchg
and
loopne
cmp
sub
pop
jl
fistps
and
push
mov
daa
das
inc
inc
fnstenv
test
pop
imul
je
call
test
ret
cs
push
inc
sbb
cmp
jp
les
out
cmpsb
cs
push
ss
into
fistl
sbb
pushf
cmp
mov
adc
dec
mov
cmp
and
jno
dec
dec
repz
xlat
jp
pop
push
jbe
or
shll
dec
popa
or
lret
jmp
cmp
das
aad
test
sub
inc
ds
xchg
leave
test
or
outsl
mov
fcmovnu
std
push
stos
push
inc
adc
in
leave
arpl
jle
std
and
std
ljmp
add
out
ret
leave
jle
lods
xor
xchg
jge
stos
pop
sub
fistpl
imul
dec
cli
gs
addl
xor
lds
fdivr
cmp
dec
jns
repnz
jb
aas
mov
movsl
sub
xchg
cld
adc
xor
xchg
jb
fmull
xchg
inc
and
fcmovu
pop
sarb
xor
push
fstpl
add
bndldx
pop
shll
jbe
cmc
push
mov
cmpl
pushf
add
addr16
cmp
fnstsw
push
dec
fisubs
lods
jno
sbb
adc
mov
mov
movsb
pop
stos
cmp
shrl
bound
and
movsl
insb
mov
test
cmp
cmpsl
loope
cmp
mov
nop
sub
loopne
push
or
movsl
inc
mov
movsb
repz
pop
aam
and
negb
or
insl
jb
lods
stc
jno
and
ljmp
push
std
imulb
inc
loop
adc
je
icebp
pop
cmp
pop
jmp
lret
sbb
cmp
xor
cmc
aaa
stos
xchg
movsb
jle
enter
ljmp
mov
xchg
shlb
xchg
add
testb
gs
repz
imul
jbe
inc
and
icebp
lcall
sub
xchg
dec
roll
and
popa
mov
repnz
popf
cmp
xor
xchg
and
sub
mov
mov
jecxz
cmp
sub
pop
sbb
inc
sbbl
cwtl
sub
xchg
repnz
mov
mov
dec
shl
jmp
test
mov
add
sub
jp
push
push
push
filds
cltd
je
or
mov
mov
cmp
scas
push
pop
call
mov
sub
push
aad
test
mov
cmp
jo,pt
mov
leave
dec
test
mov
out
sub
or
test
or
pop
in
and
inc
nop
iret
xor
sbb
pop
repz
lahf
dec
stos
jecxz
and
test
xchg
shl
xchg
sub
jbe
arpl
call
lods
jae
inc
movsb
mov
push
cmp
jmp
ret
cwtl
outsb
mov
add
and
push
fwait
and
push
jle
mov
mov
jle
mov
out
loope
popa
and
movsb
sbb
ret
cli
jns
pause
fistpll
sub
lret
cmpsb
adc
inc
lcall
jmp
cmpsl
mov
xchg
push
scas
mov
enter
scas
push
jge
inc
add
test
outsl
cli
shlb
pop
outsl
and
ljmp
gs
ret
int
mov
push
arpl
push
ja
outsl
inc
or
mov
xchg
imul
out
fistl
lret
or
xor
dec
pop
outsl
and
push
mov
xor
repz
bound
mov
sub
inc
mov
je
mov
or
add
jp
push
push
gs
sahf
int
popf
mulb
es
pop
ss
mov
pop
movsl
sub
rorl
cmp
add
mov
rcll
out
sti
mov
push
sbb
loope
jb
aam
jmp
sub
push
in
lret
push
mov
inc
mov
and
lods
dec
push
shlb
adc
jns
xor
mov
out
in
cld
outsl
mov
incb
cmpsb
add
lahf
loopne
nop
xor
add
cmp
pop
dec
fs
stos
out
and
xchg
jns
pop
cmp
and
out
push
dec
hlt
lcall
mov
adc
popa
jge
data16
mov
dec
mov
test
ss
les
xor
mov
lret
mov
push
ficoml
aad
pushf
scas
rorl
and
and
mov
mov
sub
stc
repnz
and
jmp
add
and
xchg
sti
mov
inc
xchg
imul
inc
dec
mov
lahf
push
arpl
sbb
push
dec
std
mov
sub
xchg
aam
iret
cmp
popa
mov
cmpsb
cmp
sub
sub
fmuls
push
jp
mov
cmp
mov
mov
popf
test
ja
mov
int3
sbb
cmp
stos
sub
clc
jns
xor
outsb
repnz
jmp
xchg
dec
or
or
xchg
mov
aad
or
add
jecxz
sbb
mov
cmpsb
sub
ja
mov
dec
arpl
pop
lret
mov
cli
xor
stos
mov
mov
push
ss
or
mov
pop
lods
lret
lahf
movsb
ljmp
cld
in
fwait
add
lahf
ljmp
sbbb
xor
out
pusha
fistps
adc
adc
xchg
adc
repz
mov
sti
cs
fldl
xor
pusha
call
jmp
dec
out
xor
mov
inc
inc
in
mov
scas
inc
pop
or
fcoml
mov
lret
sub
shll
out
adc
sbb
pop
int3
js
arpl
mov
sahf
cmpsl
insb
scas
shrb
out
or
in
xlat
addr16
mov
sbb
dec
test
fcmovu
leave
sub
push
cmpsl
jae
and
ret
popa
or
inc
push
test
cmp
xor
mov
arpl
rolb
popl
sub
hlt
mov
push
gs
jne
mov
loop
pop
lret
fsubr
cmp
mov
cmp
mov
cmp
and
daa
ficoml
ljmp
mov
fmull
imul
jne
in
in
inc
sbb
jno
addr16
and
sti
fldl
push
data16
cmc
cld
add
into
mov
imul
push
and
lods
mov
loop
mov
cltd
jno
sub
lods
in
rorl
test
mov
iret
inc
and
lock
mov
adc
cmpsl
enter
int
hlt
sub
and
fldcw
movsl
call
fistpll
mov
dec
ret
rorl
or
lock
sub
xchg
shlb
push
sub
out
push
push
mov
push
dec
pusha
addr16
add
mov
into
fistps
call
pop
sub
mov
and
ret
mov
inc
mov
dec
mov
fimuls
pop
ror
xchg
and
mov
loop
jmp
fsubr
insl
inc
xchg
lret
mov
and
mov
push
gs
mov
stos
mov
js
mov
and
push
adcl
filds
mov
inc
mov
jecxz
data16
lret
push
cmp
aad
scas
mov
ja
mov
inc
ret
xor
repz
mov
shr
icebp
fimull
push
stos
into
mov
jl
mov
adc
inc
or
push
xlat
dec
lods
pop
push
ss
ljmp
imull
push
cmpl
addb
xchg
popa
in
dec
inc
outsb
push
pop
adc
call
subl
xlat
mov
je
mov
test
jle
sub
out
in
cmc
cmpsl
rolb
mov
inc
xlat
mov
jns
and
sub
dec
sti
push
cld
das
sahf
sub
xor
dec
cmp
xchg
outsb
subl
test
pop
notl
lret
adc
test
mov
imul
xor
enter
inc
inc
xor
sbb
pcmpeqd
stos
mov
shrl
in
das
sub
lcall
dec
add
cmpsb
dec
jo
xor
mul
arpl
cmpsb
jno
sbb
cld
out
jo
ds
adc
xorl
jl
daa
mov
add
push
push
and
lahf
insb
mov
pusha
ss
pop
cmc
popf
jle
rcll
jae
xor
pop
push
cmpsb
aas
ss
xlat
arpl
and
pushf
or
dec
xor
rcrl
sbb
inc
xchg
xchg
sahf
shlb
stc
stc
jle
mov
gs
fmull
fdivp
lock
fcmovb
incb
pop
mov
leave
sub
pop
cmp
xchg
shrl
mov
mov
mov
push
outsb
sub
pop
mov
mov
jo
iret
fisubl
insb
jl
mov
ss
add
sbb
repnz
adc
ror
and
inc
ss
mov
pop
cli
loop
gs
adc
adc
and
push
imul
nop
shr
cmp
movsl
repz
or
repnz
inc
or
jno
pushf
addb
jp
jb
jbe
or
mov
popa
jle
shlb
movsl
lahf
jno
enter
xor
lods
js
adc
pop
in
dec
lea
xchg
in
in
cmp
or
cmp
mov
push
icebp
xor
stc
xchg
lock
jb
nop
pushf
faddl
xchg
mov
fbld
cmp
bsr
add
cmp
dec
test
es
loopne
js
js
sub
mov
hlt
adc
lock
jb
xchg
cli
ss
jmp
dec
leave
push
call
mov
mov
pop
xchg
sbb
pusha
iret
jg
aad
shll
fbld
lahf
in
xchg
jg
jnp
mov
jo
lret
movsl
movsl
mov
jle
push
mov
sub
addr16
sub
fsubrl
push
lods
adc
sub
mov
inc
or
jge
and
ficoms
std
cmp
test
int
sbb
xchg
ret
push
inc
push
pushf
mov
testl
sbb
push
xor
aaa
ficomps
hlt
flds
push
lods
xor
sub
push
rorl
inc
sahf
cld
dec
cmp
gs
sahf
movsb
xchg
lea
jae
inc
or
xchg
jecxz
mov
sub
imul
adcb
jae
iret
popa
jbe
add
ret
xor
ja
out
int3
inc
inc
data16
push
gs
xor
mov
lods
adc
pusha
fists
mov
in
jb
scas
rep
call
mov
stc
repnz
ss
pop
and
pop
jg
jge
iret
int3
mov
push
shlb
pushf
inc
xchg
push
jne
jp
push
push
adc
outsl
shl
repnz
sbb
shr
orl
add
xor
pop
mov
lret
cltd
inc
rcr
xlat
sahf
addr16
lods
push
rolb
stos
aad
andl
les
push
arpl
or
mov
ret
int3
into
sbb
sbb
pop
in
das
imul
xchg
xchg
popa
fwait
push
add
add
cmp
mov
xchg
dec
rorl
cltd
fwait
bound
jne
fidivs
aam
aad
push
int
add
add
xorb
mov
xor
sbb
xor
fists
or
inc
mov
add
insb
mov
push
test
lcall
loope
fsubrs
add
int
mov
hlt
jns
cld
xchg
lret
inc
pop
add
inc
or
xchg
faddl
add
and
aam
dec
or
jmp
test
shll
cld
xchg
inc
lret
add
xchg
cwtl
hlt
mov
iret
sbb
test
addr16
insl
mov
cld
enter
ret
mov
es
test
rolb
sbb
fldenv
lock
sbb
insb
test
dec
add
fisubs
notb
jp
ss
sahf
inc
ficoms
dec
gs
test
and
cwtl
mov
movsl
dec
sub
test
cs
or
fwait
mov
inc
jmp
fidivl
inc
int3
outsl
jmp
push
ds
xchg
sbb
sbb
mov
push
popf
mov
mov
and
jbe
iret
bound
xchg
cmp
pop
or
mov
add
pop
enter
imull
push
xor
inc
push
mov
jb
in
or
xlat
jno
insb
xchg
adcb
mov
mov
xor
mov
shrl
mov
cmp
jmp
mov
movsl
sub
in
or
popf
mov
add
adc
cmpsb
lret
jmp
cmp
mov
sub
cmc
cmp
cltd
cmp
out
or
xor
fmuls
xchg
jns
fldenv
std
mov
jno
fcmove
movsb
fmull
pusha
xchg
movlps
xor
ss
sti
sbb
testl
xchg
aad
sub
mov
pop
pop
cmp
and
icebp
aam
shl
xorb
xlat
cmpsl
lock
or
pusha
inc
gs
sbb
jne
push
push
mov
pop
std
and
fadds
jae
pop
sbb
jg
aas
mov
adc
dec
push
sarb
cwtl
jge
faddp
stos
sti
push
leave
mov
xchg
int3
jg
ret
cmp
lock
in
andb
cmpsb
mov
jne
jb
sub
ds
add
xor
sarl
fcmovnbe
ret
jecxz
sar
pop
adc
orl
push
nop
pushf
cmp
dec
mov
mov
mov
ficoms
pusha
out
xor
xlat
dec
and
mov
cmp
sbb
jmp
cs
jnp
and
ljmp
xchg
imul
inc
jmp
inc
cld
stos
mov
jnp
aam
lock
pop
outsb
in
js
or
out
scas
adc
adc
jns
adc
loop
mov
and
jb
and
push
ss
sbb
inc
sbb
pop
adc
xlat
sub
repz
mov
sub
stos
ja
and
sub
xchg
subb
pop
inc
inc
enter
ljmp
hlt
or
shll
aam
icebp
push
testl
dec
pop
and
mov
push
mov
pushf
sahf
stos
pop
xchg
add
js
roll
scas
jb
pop
dec
add
cs
or
mov
test
push
mov
mov
stos
loope
into
sub
shll
into
loope
xor
pop
adc
inc
push
xchg
and
in
pop
cld
mov
outsl
notb
movsb
pop
inc
pop
icebp
xchg
cmc
jne
push
incb
jne
addr16
fs
cmp
add
lea
cmp
mov
mov
test
icebp
add
popa
loopne
mov
mov
in
out
jmp
jge
dec
or
sbbb
test
pop
out
mov
ret
push
faddl
dec
add
es
jns
mov
mov
push
xor
xchg
xchg
xchg
insl
das
adc
push
pop
sub
sub
mov
pop
ret
icebp
push
mov
in
movsb
gs
imul
es
lret
inc
adc
mov
push
jp
insl
cmp
mov
jnp
cmpsb
xchg
fidivl
ds
cmp
mov
jb
out
in
push
cli
in
aas
cmp
push
clc
cmp
sbbb
leave
imul
lods
ja
jns
leave
sbb
mov
sbb
cwtl
sbb
push
bound
sar
jne
mov
xchg
fistpll
popf
jns
loop
xchg
into
xor
mov
insl
into
mov
sbb
jns
cwtl
mov
pop
int
call
add
lret
mov
inc
scas
cld
add
adcl
outsb
dec
nop
xchg
fwait
je
insb
add
cmp
negb
enter
sub
popf
xor
add
lret
ret
and
out
jmp
jae
arpl
iret
xlat
or
fistpll
cli
xchg
bound
fwait
mov
adc
sub
cmp
xchg
gs
cmp
pop
pop
push
imul
cmpsb
mov
clc
xchg
int
and
push
mov
push
xor
push
or
lret
test
js
rorl
mov
call
imul
inc
sub
into
lcall
push
xchg
cwtl
jns
adc
cltd
and
gs
mov
fsubs
int3
jns
mov
stc
ja
testl
testl
mov
sub
pop
jbe
fwait
push
std
mov
and
jg
imul
xor
mov
outsl
pop
jmp
in
sub
scas
in
jne
fsubl
loop
mov
or
cmp
cmc
pop
pushf
adc
push
cmc
icebp
popf
inc
insb
ja
ljmp
ret
xor
fnstsw
aad
pop
ja
lahf
in
jae
pop
push
lret
mov
push
dec
insl
das
jg
aam
imul
repz
test
pop
dec
sbb
push
cmc
lcall
jnp
xor
jb
pop
mov
lcall
loop
pop
dec
xor
jle
repnz
imul
jge
xor
insl
cmp
insl
int3
test
add
pop
xchg
ror
pop
ljmp
loopne
dec
loope
adc
daa
push
or
push
jmp
adc
mov
or
stc
xchg
inc
int3
test
adc
popa
inc
jecxz
mov
xchg
dec
je
push
sarb
loop
xorb
add
fadds
pop
or
adc
push
adc
insl
lret
ds
ljmp
xor
in
fsub
mov
cltd
into
mov
push
adc
sbb
cwtl
lret
inc
sbb
cmpsl
pop
inc
cwtl
dec
outsb
ds
pop
daa
fisttpl
jne
arpl
daa
cmp
cmp
jb
push
xchg
js
lods
in
sbb
adc
loope
popa
pop
mov
pop
rolb
scas
xchg
jecxz
out
daa
and
dec
sbb
in
mov
mov
xor
cltd
push
je
in
lods
or
or
pop
pusha
or
fstpt
xor
imul
out
push
mov
mov
aaa
sbb
movsb
call
popa
jbe
adc
mov
or
popa
and
sbb
jno
lods
gs
jae
aas
sub
repz
in
cli
xor
aam
pop
cmp
or
ficompl
pop
roll
dec
icebp
cltd
test
mov
inc
mov
or
into
inc
jg
mov
pop
notl
sub
jp
sub
fbld
cmc
mov
mov
inc
cmpl
pop
mov
push
les
pushf
stos
ja
sub
jns
xchg
add
xlat
jnp
gs
pop
dec
sbb
xor
fsubp
loop
outsl
in
sti
fdivr
test
xlat
pop
pop
push
inc
orb
pop
daa
cmpb
sar
mov
xchg
and
lods
and
jbe
repz
not
xor
xchg
add
loope
in
stos
pusha
push
sarb
add
jb
xchg
mov
pop
inc
mov
mov
lret
push
dec
rcrb
lds
sub
xchg
mov
add
push
outsb
jp
adc
sar
push
test
fisubrs
jmp
lds
mov
lods
daa
cmc
inc
test
aad
ficompl
ret
mov
sahf
cmpsl
sbb
jae
orb
leave
lock
push
dec
iret
andl
dec
cltd
mov
sub
add
mov
pop
push
sub
mov
add
add
push
outsb
in
pop
gs
pop
fwait
ret
pusha
adc
mov
inc
push
iret
sarb
gs
sub
std
pop
push
pop
es
xor
imul
das
xchg
pop
bndldx
fcmovnb
mov
xchg
adc
test
pop
inc
insl
mov
fdiv
bound
mov
and
mov
xor
pop
mov
int
add
jne
leave
inc
call
sti
sub
insb
out
bound
xor
jb
and
imul
retw
mov
fs
int
in
or
loope
test
mov
or
imul
stos
pop
push
orl
ss
out
sbb
jmp
shrb
mov
adc
jnp
inc
scas
lock
mov
inc
sbb
das
xchg
pop
rcll
in
cltd
neg
push
enter
cmp
inc
je
mov
mov
sub
push
cwtl
dec
fisubrl
orb
sti
cmpsb
mov
ja
xor
rolb
cltd
push
inc
movsl
dec
in
adc
shll
xchg
xchg
inc
pop
push
xor
out
mov
out
leave
mov
push
imul
mov
ror
xchg
inc
sti
ss
fsubs
scas
stc
cltd
or
jns
adc
test
fmuls
inc
sub
mov
adc
dec
rolb
js
cli
lret
cwtl
lds
pop
test
xor
fcoml
stos
add
int3
mov
or
and
iret
fdivs
jp
adc
pushf
push
dec
jp
ret
gs
mov
inc
push
and
fisttps
xchg
sbb
pop
pop
sbb
xor
and
cmp
mov
sbb
and
push
in
cwtl
pop
sbb
popa
mov
addr16
mov
sub
fnsave
daa
mov
cwtl
fmul
add
sub
std
xchg
mov
and
shll
inc
mov
in
cmpsl
xor
cmpsb
adc
and
repz
es
pop
aaa
inc
mov
popf
mov
aas
in
mov
adc
push
ss
mov
movsb
in
gs
addr16
sbb
and
ret
popa
fdivrp
pop
jmp
sbb
xor
ja
in
clc
jg
fcmovu
jno
xor
mov
fsubl
and
insl
into
ja
in
std
clc
jecxz
cmp
add
or
repz
xchg
push
movsbl
sbb
adc
shll
adc
jmp
pop
mov
testl
sub
lret
mov
in
loopne
push
mov
or
mov
stos
cld
inc
sbb
or
fisubrs
subl
dec
stos
movsb
mov
inc
lds
jns,pt
cmp
push
repz
mov
in
xor
sbb
jl
xor
shrl
notb
mov
int
in
insl
xchg
xchg
dec
iret
loope
jae
fisubl
mov
mov
mov
or
mov
aas
xchg
xlat
push
cmp
mov
mov
or
jbe
es
mov
inc
jo
ss
push
jmp
jge
test
inc
out
test
push
inc
shll
pop
cmp
stos
outsb
push
into
xor
and
fdivrl
inc
xchg
sbb
push
vmwrite
jmp
ficoml
test
addr16
adc
xor
dec
into
lahf
add
xor
push
leave
mov
sbb
rcll
int3
cmpsl
dec
add
and
rcrb
push
lret
std
xchg
int
pop
stos
popa
mov
into
sub
pop
mov
jns
push
pop
jp
cmp
mov
push
in
scas
cmc
cmpsb
fidivl
push
pop
dec
push
xlat
xor
jns
addl
popf
pop
jb
or
mov
jns
mov
jae
jno
pop
cli
loop
push
cmp
or
inc
adc
pusha
cmc
cmp
xor
jle
xor
fildll
pusha
out
lds
insb
or
loope
inc
push
inc
mov
adc
cmpl
xor
pop
daa
data16
mov
sub
mov
outsb
jecxz
mov
cwtl
or
mov
pop
inc
add
out
outsl
or
sbb
fcmovb
rclb
push
ljmp
sarb
jb
cwtl
inc
cmpsb
jg
movsb
clts
aas
sbb
or
fxch
bound
lea
pop
xchg
mov
adc
xor
xchg
xor
or
add
idivb
mulps
push
jge
sub
popf
sub
fcoml
xchg
adc
mov
mov
stos
adc
fstpl
es
xor
pop
int3
fs
es
addr16
jnp,pt
ret
sbb
aam
and
sbb
icebp
cli
aas
xchg
loopne
cmp
bound
or
std
sti
jp
pop
lods
mov
adc
mov
fdivrl
in
pop
das
mov
orb
jecxz
iret
dec
das
dec
sub
mov
mov
mov
fcmove
call
cmpb
push
std
jae
out
sbb
lock
movsl
scas
xchg
mov
es
sub
jno
adc
push
jae
dec
movsl
or
fnstenv
es
out
ret
jp
shlb
push
lds
pop
xchg
lcall
ljmp
adc
mov
lret
gs
in
adc
cwtl
adc
pop
ret
push
cltd
sahf
xor
sbb
adc
sbb
bnd
ljmp
punpckhdq
js
insl
fidivrl
push
cmc
adc
dec
push
jmp
arpl
add
jg
add
loopne
pop
mov
mov
inc
fs
or
jge
test
jne
push
shll
inc
test
movsb
repnz
jo
imul
test
out
inc
nop
cld
inc
data16
adc
and
fistps
cmpxchg
shrl
xlat
in
test
mov
push
andb
adc
test
jmp
or
or
jno
cld
je
inc
pop
inc
pop
jnp
mov
into
addr16
stc
insb
inc
mov
pop
push
mov
jne,pn
inc
cmc
cmp
lods
push
gs
popf
sub
fsubl
sub
out
or
in
das
lcall
dec
fs
inc
test
je
or
and
scas
jge
out
mov
push
fwait
adcl
xchg
movl
ljmp
mov
jmp
insl
imul
das
xor
rcr
inc
rcpps
xchg
push
fucomp
insb
mov
scas
mov
and
mov
ds
ja
loopne
cwtl
stc
jno
mov
in
pop
bound
sahf
inc
jb
loope
fs
xor
lret
pop
mov
emms
push
in
fcomps
imul
jp
ss
test
mov
ljmp
das
jno
and
or
inc
inc
pop
repnz
sbbl
in
push
xor
stos
ljmp
mov
xorb
mov
sbb
icebp
cmp
add
in
jns
pop
pop
repz
push
mov
cwtl
movsb
out
push
and
xor
sbb
fcoml
call
out
cmpsl
imul
roll
jno
push
jmp
mull
push
dec
jp
cltd
push
mov
cmpsb
mov
out
stos
enter
test
sub
jp
mov
mov
fld
dec
xchg
sub
mov
in
add
adc
sbb
jbe
inc
sub
mov
lods
mov
mov
sub
sbb
add
test
or
cmp
inc
sub
mov
jl
cltd
sub
dec
pop
pop
into
ret
insl
sub
inc
js
sub
lock
sbb
dec
enter
addr16
dec
sub
popa
mov
lret
mov
stc
repnz
ret
push
cmp
push
sbb
stc
push
arpl
outsl
shl
mov
loop
add
xchg
pop
ljmp
bound
or
movsl
mov
sbb
das
pop
clc
dec
mov
or
dec
bnd
imul
test
lods
mov
mov
xor
pop
es
sahf
sbb
inc
les
cmc
xchg
push
mov
loope
das
loopne
ljmp
rolb
das
dec
jo
push
in
jno
mov
imul
int3
test
push
and
cli
push
xchg
outsl
cmp
imul
movsb
mov
jmp
xor
adc
xchg
aas
iret
mov
cmp
imulb
sahf
sub
inc
or
scas
xor
inc
pop
jb
xor
jo
xchg
mov
push
push
cmpsl
in
pop
adc
cmp
inc
repnz
xor
insl
test
mov
or
insb
rorb
jne
or
arpl
in
les
cmp
mov
arpl
pop
or
fstl
jbe
mov
pop
inc
sbb
pushf
xor
bound
or
mov
sub
sbb
xchg
inc
push
xchg
js
iret
rorb
pop
test
adc
inc
cmp
fs
fwait
cmp
jp
pop
jo
fistl
mov
or
push
push
cmp
movsb
push
inc
dec
push
inc
ffree
fcompl
ljmp
jo
add
enter
and
sbb
pop
jnp
push
imull
inc
dec
popa
hlt
dec
jns
xor
shlb
mov
cs
je
xor
or
imul
rclb
mov
sbb
pop
xlat
fs
adc
sbb
aaa
rclb
mov
incl
in
out
sbb
sub
enter
bound
jmp
inc
arpl
mov
aaa
mov
adc
push
scas
leave
xchg
pushw
clc
mov
sub
mov
dec
aas
mov
push
pop
mov
jg
sub
imul
mov
jmp
pusha
loope
mov
jbe
repz
mov
mov
daa
outsb
shrl
ficoml
cmc
leave
add
sahf
mov
cmp
xchg
enter
push
dec
or
loopne
dec
mov
sbb
sub
nop
fs
jnp
arpl
in
xchg
inc
xchg
jge
addr16
fs
push
fxch
sub
lahf
int3
outsb
fscale
je
push
and
mov
testl
out
out
loop
int
jno
sbb
dec
push
in
adc
pop
fwait
pop
lret
or
rcll
lock
mov
or
mov
leave
aaa
rcr
jl
inc
jae
add
jo
sti
nop
aam
cwtl
les
jl
das
gs
add
out
adc
lahf
jmp
ljmp
pop
and
push
pop
aas
cmp
out
mov
imul
adc
jle
xchg
xor
pop
and
faddl
push
or
fdivl
popa
pop
pop
jmp
not
test
cld
loopne
fildll
cmc
cmp
addl
add
out
shl
sub
mov
test
aaa
add
cmpsb
xor
pop
dec
add
es
jle
xor
inc
or
xchg
mov
push
loope
ret
fsubs
and
pop
sub
ret
test
insl
call
add
xchg
push
test
je
dec
push
xchg
and
test
xchg
jecxz
mov
mov
test
stos
jle
push
push
or
sub
mov
add
iret
dec
lret
sti
fstpt
push
aas
loop
add
stc
jp
inc
xor
add
pop
adc
fdivl
pop
outsb
adc
cwtl
sub
das
rcrb
sbb
js
lcall
pop
data16
mov
aad
dec
cmp
mov
imul
ret
call
daa
xchg
mov
push
lods
sub
pop
add
dec
xchg
repnz
cmp
movsl
jnp
pop
pop
out
mov
mov
or
in
xchg
fnstenv
adc
js
imul
int3
fldcw
test
sbb
call
insl
loope
fdivl
in
cmpsl
jle
ljmp
mov
in
adc
mov
cmp
fsubl
enter
repz
fidivl
xorb
movsb
sbb
jge
cli
int3
jle
jg
cmp
gs
xor
stc
jne
push
aad
int
sub
or
cld
mov
sub
subl
dec
ffreep
xor
ljmp
sarl
pop
out
dec
push
aas
stc
into
hlt
or
movsb
cmpsl
inc
jp
and
xor
arpl
or
sbb
cli
pop
leave
inc
sbb
outsb
mov
and
or
push
lahf
sahf
jl
mov
out
jbe
mov
jle
cmpsl
js
inc
movsl
nop
addr16
fbld
pop
cmp
jno
jmp
dec
rclb
and
sub
pop
xor
cwtl
sub
push
imul
mov
pop
mov
or
push
scas
pop
std
repnz
iret
add
scas
sbb
ds
or
nop
jg
cmpsb
daa
inc
cmp
rcll
lret
adc
inc
mov
sbb
in
sub
cmp
dec
xor
cmpsl
mov
test
jmp
imul
mov
lret
std
repnz
inc
gs
add
inc
scas
decb
aam
xchg
push
out
push
push
mov
das
ja
mov
push
outsb
rcl
addr16
cmp
mov
sbb
cmp
insl
sbb
jno
cmp
aad
jp
cmpsb
and
stos
idivl
out
and
loope
jne
cmp
add
clc
push
mov
jl
pop
cmp
jl
lret
cmp
lods
and
dec
lahf
and
pushl
cld
xchg
mov
push
jmp
xchg
dec
fcomps
push
mov
sub
fists
cld
orl
cld
push
dec
out
into
push
punpckhbw
xor
push
cmp
jne
adc
test
sub
leave
or
inc
push
and
pushf
adc
rcr
lret
mov
mov
movl
mov
sbb
outsb
jae
mov
jae
cmpsl
xchg
std
mov
mov
mov
fisubs
push
inc
push
sbbl
mov
jno
push
stos
xchg
inc
std
int
subl
cmp
cltd
insl
sbb
pop
or
mov
inc
or
add
mov
lret
fwait
sub
cli
mov
rolb
scas
mov
xor
shlb
xchg
loopne
enter
ss
and
push
loope
aad
aam
clc
jle
xchg
sbb
arpl
mov
dec
xchg
js
test
pop
sub
or
mov
xor
xor
bound
fcoms
je
dec
arpl
sbb
lods
xorl
sub
loopne
int3
daa
or
xor
xor
lcall
imulb
push
push
cs
shrl
testb
test
or
repz
dec
arpl
sub
inc
js
push
mov
pop
cmp
push
cmp
xchg
pop
hlt
jbe
in
lds
outsl
orl
dec
sbb
pop
orb
test
sarb
push
loope
xor
or
pushf
aam
test
jae
icebp
add
mulb
sub
pop
stos
xchg
clc
testl
sbb
aad
mov
ret
jbe
aad
jg
mov
adc
mov
int3
mov
std
mov
mov
pop
push
mov
cmc
sub
cld
mov
inc
add
push
movsb
imul
repnz
aaa
sub
mov
dec
loope
out
movsb
jl
icebp
rcll
and
xlat
int3
pop
dec
testb
fsubrs
lret
adcl
mov
mov
cs
inc
arpl
and
sbb
sbb
mov
or
mov
and
loopne
imull
xor
jmp
mov
int
and
mov
outsl
pop
lods
dec
jl
mov
hlt
test
ret
rcrb
push
adc
xchg
icebp
adc
mov
jo
jbe
pop
jle
ficoml
sti
and
xor
sti
ljmp
push
aaa
add
in
scas
mov
mov
cmp
push
jecxz
lea
xchg
mov
loope
lds
icebp
inc
pop
jmp
bound
and
sbb
or
lock
and
stc
jne
sbb
lahf
pop
lret
jae
popa
add
push
jp
xchg
fildll
sbb
mov
decl
shrd
pop
or
fucomi
sahf
and
sub
andl
pop
push
push
jo
push
push
js
xchg
test
lods
data16
inc
mov
movsl
push
aaa
repz
iret
mov
jnp
js
je
aam
cmp
test
arpl
cwtl
sbbl
or
add
or
rorb
insb
pop
or
sub
inc
adc
ljmp
fs
fs
xlat
jno
dec
aam
mov
push
lock
mov
cmp
mov
jo
out
imul
cmpb
clc
scas
mov
outsl
mov
in
push
lds
std
insl
out
into
leave
push
mov
loopne
jecxz
aas
adc
leave
or
and
call
mov
mov
pop
lret
icebp
fildll
or
out
mov
imull
add
sbb
inc
add
push
push
out
jo
loop
movsb
cld
popa
or
or
andl
cltd
adc
sbb
cmpsb
lods
fwait
mov
repz
sti
js
lds
fmul
xchg
jnp
mov
xchg
mov
or
and
loope
aaa
cmpl
sbb
jecxz
push
sub
sub
mov
or
sbb
adcb
push
in
imul
cmpsb
xor
ja
mov
mov
sti
mov
repz
mov
adc
xor
pop
and
sbb
mov
orps
fidivl
outsl
jecxz
fwait
sar
jnp
clc
mov
call
mov
arpl
js
inc
cmc
mulb
inc
outsb
jp
mov
cli
mov
or
cmp
adc
pop
cmp
ja
jmp
flds
xor
mov
jl
push
test
sub
xor
xchg
jnp
inc
rclb
push
add
addl
arpl
lods
inc
rcll
or
in
shll
daa
es
mov
pop
out
insb
int
gs
push
dec
gs
fists
xor
ds
lcall
mov
inc
mov
push
jnp
dec
pop
dec
mov
xchg
mov
outsb
arpl
mov
pinsrw
sti
adc
xchg
jo
repz
pushf
lods
sub
lcall
jno
xchg
pop
push
pushf
fadds
aaa
popf
cld
lods
add
scas
sub
ja
fcmovnu
pop
push
sbb
mov
xor
mov
mov
scas
xlat
sbb
jp
mov
cmpsb
pop
pusha
imul
mov
xchg
popf
aaa
sub
repz
push
outsl
fmull
push
movsl
jg
dec
std
mov
xchg
repnz
add
jp
jae
adc
pop
jnp
out
shll
cmp
hlt
and
in
add
mov
enter
mov
js
push
pop
push
pop
les
fwait
mov
loope
push
cmpsl
scas
pop
mov
push
add
cmc
negl
mov
xor
ds
popf
idivb
gs
inc
lcall
in
mov
popa
mov
and
andb
insb
or
mov
jns
rcr
xchg
sub
push
mov
push
rcrl
mov
add
or
mov
mov
mov
xor
or
int3
clc
push
pop
popf
imulb
cmp
subl
xchg
add
and
sub
jae
mov
in
push
insb
and
sub
sbb
cli
pop
insl
add
mov
sbb
sbb
aas
cltd
fdiv
lods
inc
cmp
mov
xchg
sbb
orl
pop
rep
insb
lret
ja
cmp
pop
xchg
iret
cld
sahf
add
enter
xchg
jmp
div
inc
cmc
pop
or
pop
xor
mov
jne
dec
xor
mov
inc
subl
jmp
addr16
test
repnz
pop
and
iret
mov
lret
iret
lods
aad
test
push
dec
jbe
divl
dec
mov
inc
xchg
dec
or
add
jns
popa
adc
cmp
push
es
clc
out
movl
js
sbb
jbe
fildl
fadds
inc
xor
mov
push
or
ret
lret
or
mov
in
cmc
call
scas
pop
test
dec
and
mov
mov
rclb
shl
jnp
or
add
jmp
out
mov
cmpsb
jns
inc
xchg
cld
clc
fnstenv
adc
addb
mov
dec
pop
fsts
adc
sahf
jmp
dec
outsb
out
cli
and
data16
mov
add
stc
fcoms
jb
es
xor
xchg
daa
in
bound
jge
in
or
fidivl
aad
mov
insb
xor
aaa
cwtl
jo
mov
push
movsl
push
dec
or
mov
shlb
xor
cltd
loope
xor
leave
arpl
loop
shrb
or
in
cmc
loope
pop
jno
lret
cs
push
repnz
shrb
jge
adc
or
and
xor
cmp
xchg
mov
movsb
scas
jp
xchg
es
fisttps
sti
sub
pop
call
xchg
roll
mov
cs
or
cmpsb
icebp
leave
mov
mov
out
sbb
iret
call
sub
cmp
or
dec
and
out
push
push
aam
je
xchg
jno
ds
mov
push
lods
xchg
adc
xchg
fucom
jns
push
divb
jecxz
les
test
xlat
jae
push
fisttpl
xor
sbb
inc
inc
cmp
cmp
push
add
cmp
or
fs
mov
mov
std
add
imul
or
sahf
mov
es
je
and
add
cld
pop
roll
in
lock
push
add
test
sbb
mov
nop
mov
or
mov
mov
pop
and
iret
test
cwtl
lock
and
mov
push
in
adc
jecxz
inc
out
push
xor
mov
enter
test
lret
aam
add
mov
cmp
xchg
dec
jb
jge
ret
fnstsw
fiaddl
cmp
sub
subl
sahf
ds
dec
inc
pop
dec
movsl
push
cltd
loope
sbb
sbb
pop
push
rclb
pushf
cwtl
mov
cmp
in
mov
in
add
or
rorb
pop
mov
enter
test
pop
xlat
cwtl
fs
lock
cmp
mov
mov
pop
adc
xchg
sti
adc
cmp
jbe
insb
jecxz
test
inc
jg
lahf
rcrb
mov
mov
mov
dec
sbb
jnp
jne
movsb
call
cmpsb
std
test
sti
mov
add
or
cmp
cs
fwait
int3
movsb
pop
int3
movsl
dec
arpl
sub
data16
dec
jp
cltd
fbstp
mov
mov
jne
xchg
jae
loopne
xchg
lds
int
iret
cmp
ljmp
pop
inc
enter
fidivrl
mov
in
mov
cmp
push
or
fisubs
fwait
out
test
test
xchg
in
mov
aas
cmp
ja
lods
push
rolb
cltd
pop
testl
dec
xor
push
int
dec
mov
xchg
jmp
push
fstl
paddw
insl
cwtl
push
sub
sbbl
ljmp
mov
leave
enter
cld
lcall
xor
mov
inc
ret
lds
sti
and
jp
adc
mov
cmpsl
sti
dec
jnp
fisttpl
orl
je
mov
inc
mov
aad
aaa
cmpsb
xchg
sbb
dec
dec
jge
cld
xchg
bnd
lea
add
mov
cmpsl
mov
jge
lock
test
ljmp
add
adc
ljmp
add
jg
sub
call
jae
jle
jl
cmp
ss
fnstenv
mov
push
xchg
sar
sbb
mov
nop
enter
lcall
push
mov
push
push
inc
int
push
dec
das
push
sysenter
and
or
inc
pusha
fbstp
cmp
inc
std
sub
dec
mov
push
and
xchg
dec
sub
and
adc
jb
jle
add
xorl
push
outsb
mov
clc
mov
stos
pop
xor
push
int
mov
and
lock
int3
mov
cmp
or
mov
mov
ss
je
cmp
add
push
imul
mov
addb
mov
pop
loopne
xchg
adc
mov
test
push
rorl
psadbw
pop
in
or
out
faddl
aad
hlt
mov
xor
data16
and
fsubrs
or
and
sbb
and
int
int
add
mov
lret
pop
fnstsw
scas
add
movsl
fldt
lret
mov
adc
jle
or
sarb
icebp
in
mov
or
pusha
xchg
xchg
std
xchg
mov
rcll
xchg
xor
arpl
stos
xor
stos
ja
aas
mov
stos
sub
rcrb
mov
test
in
inc
mull
sub
or
mov
mov
mov
es
mov
push
mov
mov
add
nop
fildll
loopne
test
mov
movsb
dec
push
jle
mov
push
pop
mov
inc
cmp
rcl
lods
scas
push
mov
sub
mov
notw
mov
jmp
pop
mov
mov
mov
xor
sahf
sub
xor
pop
xchg
fidivl
or
adc
adc
mov
fdivl
jno
jp
push
pop
dec
aaa
rcll
mov
mulb
in
and
mov
cmc
xchg
mov
push
das
sbb
dec
jp
je
inc
sub
mov
pop
les
adc
lret
out
insl
lcall
lods
sbb
cli
mov
lret
loop,pn
fwait
gs
or
add
test
fcomps
xor
gs
adc
cmc
add
fistpll
add
cmp
sbb
pop
loopne
rcll
dec
and
mov
or
dec
jo
leave
mov
mov
inc
xorl
pusha
in
push
inc
mov
dec
leave
fwait
out
icebp
push
iret
push
ret
adc
cli
sbb
inc
in
sub
leave
xor
int
inc
popa
popa
jp
insb
outsb
stc
sub
aad
cmp
dec
movsb
pop
jbe
jecxz
out
aam
inc
roll
jmp
or
jmp
sahf
inc
inc
pop
subb
mov
ss
jmp
int
les
rorb
mov
lods
mov
mull
pop
jle
sbb
and
cli
iret
pop
dec
aad
push
outsb
fisttpll
fcmovne
aam
das
lea
push
mov
inc
jmp
xchg
mov
fsubrl
rcr
and
cld
jne
xchg
out
cwtl
jecxz
insb
test
pop
test
sbb
test
or
movsb
xorl
icebp
adcl
sahf
insb
rep
dec
inc
mov
pop
and
mov
adc
std
addr16
scas
or
loop
or
mov
rolb
or
jmp
bound
fwait
outsb
inc
or
cwtl
clc
cli
rcrb
popa
stc
xchg
fadd
iret
mov
in
in
sbb
push
mov
mov
jnp
aaa
add
push
push
sub
pop
xchg
jb
fsubl
hlt
shll
shr
nop
shll
popf
popa
mov
dec
xchg
aas
daa
jg
xchg
rcl
in
imul
mov
cmp
inc
fwait
push
jl
jno
xchg
insb
or
mov
ret
cmp
push
xchg
adc
mull
and
cmp
push
lcall
pop
jmp
mov
or
adc
mov
push
xchg
and
rol
enter
stos
mov
rorl
js
outsb
in
and
sahf
push
xor
jbe
cmp
mov
shlb
xor
adc
inc
movups
imul
mov
fldenv
push
mov
pop
mov
and
je
mov
mov
fwait
cmpsb
push
cmpsl
xchg
jle
dec
clc
imul
sbb
cwtl
lret
mov
fistpll
inc
mov
sub
xchg
das
xchg
sbb
addr16
icebp
xor
test
add
or
xchg
aam
mov
mov
inc
lahf
or
jmp
mov
sub
mov
mov
inc
sbb
or
fwait
and
aaa
jbe
sarb
cwtl
add
stc
pop
push
mov
js
sub
loop
mov
mov
mov
add
rcrl
xor
adc
push
ret
cmp
je
adc
adc
add
cld
enter
out
mov
pop
lods
or
int3
cwtl
mov
popa
fistpll
sbb
ljmp
icebp
cmpsb
mov
loopne
cmpsl
add
pop
in
xor
jbe
cmp
aad
push
jbe
aam
mov
loope
mov
adc
mov
cmpsb
xor
dec
cli
fnstsw
jb
in
and
aaa
ret
jae
mov
mov
inc
sti
push
xor
arpl
sbb
jne
sbb
pop
sbb
insb
hlt
sbb
fbstp
cmp
or
push
movsb
icebp
push
jecxz
jle
mov
inc
inc
popa
insl
pushf
lahf
fsubr
clc
aad
mov
scas
jnp
and
sub
and
in
pop
test
cmp
jl
mov
push
popf
pop
jno
jae
ljmp
mov
dec
aam
repnz
dec
inc
rcrl
push
pop
dec
and
cmpsl
imul
jmp
jmp
notl
and
jbe
xchg
sub
add
jge
sub
clc
and
cmpl
add
cmp
aad
popa
and
cmp
int
in
push
inc
push
shlb
dec
inc
xor
dec
mov
outsl
scas
ljmp
lods
imul
arpl
add
insl
push
sub
flds
ljmp
inc
add
mov
stos
xor
jo
and
sbb
aas
push
cmp
pop
push
pop
sbb
loop
and
mov
insb
push
mov
enter
fwait
in
pop
xchg
push
pusha
dec
mov
std
mov
faddl
xor
sbb
jmp
and
lock
xor
shrl
xor
xor
cld
loope
and
adc
les
sub
sbb
test
std
inc
inc
js
cmc
sub
mov
mov
lods
inc
scas
pop
test
fwait
push
inc
out
cli
inc
dec
and
enter
jb
test
xchg
mov
lret
add
test
enter
jmp
fsubl
xor
bound
mov
or
movsl
inc
pop
or
pop
xchg
out
mov
ds
lea
jle
dec
subb
jb
icebp
cmc
xchg
not
mov
ficomps
push
movsb
xor
inc
insl
clc
xchg
mov
cs
pushw
cs
divl
pop
cmp
fildl
dec
or
adc
stc
and
and
push
pop
imul
ret
and
cmp
into
push
xchg
xchg
jbe
ljmp
dec
imul
loop
mov
repz
pop
push
ffree
inc
mov
push
push
imul
iret
push
xlat
je
cwtl
dec
repz
or
xchg
testb
sub
xchg
loopne
lcall
mov
out
pop
and
jb
loop
jle
adc
mov
ret
out
pop
je
add
jmp
incl
push
pop
fs
outsb
inc
push
dec
sbb
les
lahf
mov
adc
or
incb
js
pushf
scas
xor
jmp
test
popf
iret
push
or
ror
cmpsl
push
cld
push
push
ret
scas
mov
jge
jns
push
fistps
jmp
cmp
cmp
loop
and
fldenv
add
xchg
xor
test
push
sbb
fs
push
das
jns
pop
jp
sub
jnp
adc
fsub
xchg
jnp
dec
cmc
out
jecxz
imul
lds
mov
insb
push
dec
sti
insb
jo
lods
loopne
push
in
and
mov
nop
imulb
test
mov
jbe
or
xchg
mov
je
aad
out
rol
mov
pop
fdivrs
out
fsubl
xor
out
mov
lods
cmpb
aas
gs
into
mov
setnp
pop
or
ret
aas
pop
push
mov
mov
pop
push
dec
repnz
bound
sub
test
xor
pusha
dec
cmc
sub
popa
shll
sbb
xchg
cmp
sti
dec
fldcw
inc
scas
xchg
sbb
bound
xlat
jne
jbe
rorb
jg
les
dec
mov
into
pushf
push
pusha
enter
pop
push
xor
push
mov
jmp
sbb
ss
es
xor
cmp
out
jnp
inc
icebp
mov
push
call
mov
movl
push
dec
data16
pop
mov
push
in
outsb
xorl
xchg
mov
inc
ja
repnz
xchg
out
mov
movsb
insl
and
inc
mov
xor
mov
adc
fsub
jno
mov
lret
scas
aam
dec
xor
icebp
add
aas
daa
pop
test
xchg
into
ret
in
test
cmp
cmp
sub
imul
pop
pop
int3
pop
imul
lock
hlt
cmp
xor
push
rclb
in
or
jp
aad
pop
aas
inc
lods
fcmovbe
push
adc
mov
rorl
mov
movsb
and
dec
negb
and
test
pop
stos
pusha
xchg
nop
lods
add
sub
jecxz
clc
cmpsb
out
xchg
pop
addr16
sahf
and
xchg
scas
mov
lds
cld
scas
in
mov
or
add
sar
sub
push
mov
rcrl
push
lods
in
das
mov
pop
pcmpgtd
jp
jno
xor
repz
or
mov
dec
pop
pushf
pop
jecxz
xchg
jb
insb
aad
push
in
push
sub
pop
pop
cmpsl
outsb
cld
nop
out
notl
lods
lahf
jp
xchg
leave
xor
loope
push
repz
push
push
pop
xchg
faddl
mov
aam
dec
test
stos
loope
dec
test
pop
sbb
ss
fwait
dec
cmp
fbld
pop
stos
pop
push
mov
pop
xchg
add
push
cmc
call
call
sub
lret
loop
sub
dec
fcmove
nop
in
fwait
cli
fs
aaa
stos
stos
adc
out
xchg
jp
and
aas
mov
inc
add
xchg
mov
mov
mov
jge
push
mov
push
test
cmp
or
xor
aad
mov
lods
jge
ja
ret
mov
in
dec
jg
loopne
movb
fnstenv
pop
lahf
or
jl
loop
jle
in
inc
xor
push
iret
xor
or
xchg
int
sbb
adc
cmp
sbb
add
pusha
cmp
dec
mov
cmc
je
loopne,pn
clc
sbb
cli
fadds
push
push
js
mov
push
shll
inc
inc
out
mov
daa
rcll
mov
lret
icebp
pusha
mov
lods
or
fsub
or
push
push
and
rcll
xlat
push
int3
mov
in
pop
cmp
mov
aam
push
add
aaa
gs
ret
mov
sbb
out
xor
popa
inc
bound
sahf
inc
inc
les
ret
or
push
scas
xor
aaa
xor
shrb
cmp
fnstenv
je
add
sub
clc
xor
pop
fildl
es
fwait
xchg
sub
outsl
into
or
or
dec
shl
shlb
push
push
xchg
test
sbb
push
sbb
stos
lret
fs
enter
shlb
lret
in
dec
cmpsb
jl
mov
add
inc
or
dec
sub
in
mov
and
jecxz
pop
sahf
jno
mov
mov
xchg
movsb
scas
mov
xchg
pop
imul
inc
mov
sahf
jb
imul
daa
mov
lret
lea
aaa
dec
cmp
dec
pop
xchg
outsb
add
inc
jmp
pop
test
inc
sub
out
fimuls
lods
inc
movsb
xchg
pop
fsubrl
mov
jle
cmp
mov
subb
push
cmp
xlat
pop
dec
cld
jl
movsb
fsubrp
test
fidivrl
sub
out
cli
jnp
dec
not
cmpsb
pop
xchg
dec
fs
call
call
fisttpll
ret
imulb
test
dec
std
mov
pop
push
jge
lret
stc
push
dec
ror
xchg
xor
pop
test
int
sub
add
xchg
test
jno
xor
add
gs
adc
int3
sub
inc
fisubrs
sub
lock
adc
es
idivb
mov
push
mov
enter
adc
push
mov
stos
jmp
or
lret
cmp
call
scas
test
push
frstor
sbb
mov
mov
aas
cmp
push
push
jo
mov
push
fidivl
mov
insl
test
sub
arpl
popf
mov
std
pop
pop
add
stos
add
cs
pop
mov
test
jp
push
pop
sbb
mov
push
addb
pop
mov
push
jle
jmp
test
sbb
mov
or
mov
pusha
jge
repnz
ja
and
adc
lahf
adc
xor
jle
xchg
mov
sbb
out
and
cmpsl
add
ss
add
pop
xor
out
sahf
lea
adc
cmp
ficompl
jle
fs
loop
aas
pop
fxch
push
lods
xor
mov
aad
and
arpl
addr16
arpl
sahf
jmp
ss
mov
sub
mov
sbb
mov
or
xor
and
cmc
xchg
mov
mov
imul
add
pop
cmp
mov
fwait
jae
add
je
inc
dec
dec
and
or
je
sbb
lret
fwait
xlat
jge
test
xchg
pop
sti
fwait
pop
hlt
scas
xchg
clc
adc
jecxz
or
lea
jle
rolb
cs
mov
push
mov
mov
push
test
and
adc
outsl
dec
cmp
push
mov
sub
aam
rcl
xor
into
and
cmpsl
in
adc
fwait
ror
sub
push
andl
aas
add
ficoms
inc
enter
mov
es
add
or
aam
dec
mov
pusha
aaa
pop
movsl
popf
jle
mov
mov
mov
sub
push
mov
add
in
jns
sbb
inc
sahf
and
notb
and
jne
sarb
subb
aad
adc
xchg
cld
pushf
mov
push
mov
xor
cmc
dec
lods
test
inc
repz
mov
pop
adc
jp
bound
mov
mov
outsl
push
fsts
and
dec
outsl
pusha
dec
mov
les
push
enter
mov
inc
test
mov
or
adc
jle
roll
inc
cmp
icebp
int
cmpsb
and
loop
sub
insb
inc
inc
add
cwtl
hlt
dec
cmpsl
cli
jg
mov
pop
cltd
cltd
dec
shll
cld
push
lcall
push
add
jnp
xchg
mov
ret
cmp
cmp
movsb
inc
outsb
out
add
fwait
lea
rcrb
stc
and
insb
xchg
sti
sub
jnp
mov
clc
push
inc
mov
pop
iret
jge
pop
fidivs
rorb
into
push
and
mov
dec
jo
rcll
in
call
in
je
lods
xor
fimull
jl
ss
in
mov
jns
xchg
push
arpl
ja
lock
mov
ds
enter
imul
xorb
add
adcb
lahf
inc
xchg
adcl
xor
dec
movsb
or
jnp
inc
add
push
subb
subb
mov
cmpsb
push
into
sbb
hlt
inc
mov
xchg
lahf
pusha
cmp
cld
lds
add
jne
sbb
int
mov
cmp
push
pop
sbb
gs
rclb
loope
divl
loopne
jnp
fbld
neg
lea
lret
loope
xor
adc
sahf
call
mov
add
insl
pop
pop
mov
push
cmp
inc
mov
jg
sti
lret
and
jle
sub
das
xchg
sub
mov
mov
test
mov
add
jle
dec
fnstsw
dec
in
call
add
adc
push
rcrl
sbb
mov
fstl
shl
or
pushf
jae
push
add
adc
mov
xor
mov
cmp
xchg
lret
mov
cmp
bound
adcb
cli
shr
cltd
xchg
xchg
icebp
lret
adc
inc
lcall
sbb
aam
cld
mov
jle
xchg
jmp
aam
inc
pop
push
and
xchg
in
cmp
push
cltd
in
cwtl
adc
dec
jnp
insl
aaa
je
inc
lods
stc
pop
cmp
cmp
and
testb
aaa
out
into
pop
std
lret
push
in
sbb
je
dec
daa
scas
jmp
ret
test
iret
sbb
test
fildll
cmp
dec
jecxz
mov
cmpsl
xor
fsubs
fimull
mov
dec
shl
inc
loop
mov
cmp
dec
sbb
cmp
sub
and
sahf
mov
scas
xor
mov
shll
push
fildl
ret
int3
cs
jmp
popf
xchg
test
fs
repnz
sub
leave
push
sbb
jle
ret
mov
popa
sbb
arpl
mov
test
dec
dec
mov
pop
cmp
jmp
std
lea
int3
out
cmp
and
movsl
lahf
or
bnd
ret
jne
popf
int3
cwtl
cmp
test
dec
xchg
and
mov
lret
ficoml
dec
jns
fstl
sbb
mov
mov
cmp
in
aaa
scas
in
mov
outsb
mov
popl
idivl
pop
jne
push
push
les
jp
jae
push
sub
and
shll
jne
mov
call
mov
and
cld
mov
shrb
sbb
pop
sbb
mov
xor
pop
pop
fildl
mov
daa
cmpsb
push
mov
inc
mov
and
out
enter
les
cmp
sub
lret
xor
adc
loopne
rcll
in
jmp
sub
inc
mov
inc
jae
ret
pop
pop
mov
cld
std
je
sbb
cmp
pop
inc
imul
mov
push
jge
sbb
mov
enter
lods
and
dec
divl
arpl
into
add
cltd
pusha
verr
shlb
xchg
cmp
pop
pusha
scas
rcrl
and
iret
call
push
pop
nop
push
jg
xchg
fildll
and
inc
imul
jnp
mov
xor
mov
or
pop
push
mov
xor
xchg
add
xor
push
and
mov
xchg
dec
subb
jmp
iret
adc
das
pop
and
and
stos
lahf
mov
xchg
in
inc
cltd
lahf
adc
and
ret
push
pushf
lds
adc
loope
mov
add
shll
push
add
mov
push
call
psrlw
mov
cwtl
mov
mov
mov
call
mov
fcmovu
pusha
out
inc
xor
jmp
in
and
std
imul
cmpsb
mov
ffreep
fs
out
mov
jg
inc
cltd
xor
xchg
mov
les
add
leave
test
insl
cwtl
adcl
jbe
mov
data16
dec
pop
adcl
adc
nop
mov
hlt
xchg
lret
pop
stos
dec
xor
addr16
cwtl
add
mov
fsubs
stos
push
inc
mov
sti
cltd
out
call
mov
inc
je
cli
in
fsub
js
addb
mov
fs
mov
ljmp
loope
mov
dec
aaa
add
pop
jno
aaa
mov
xor
jb
pop
xor
scas
nop
xor
flds
in
cmp
nop
stc
jne
pop
xchg
dec
inc
shrb
push
push
push
pop
bound
lret
inc
out
das
jo
test
xor
dec
fidivl
sahf
stos
adc
shl
mov
add
and
data16
adc
sub
sub
push
aad
aaa
and
inc
pop
popa
mov
mov
push
and
test
jnp
jge
adc
mov
jno
stos
rorb
leave
mov
push
xchg
dec
inc
sub
push
pop
sub
cmp
pop
mov
sbb
loop
adc
xchg
mov
shll
in
dec
mulb
add
jmp
mov
sub
lods
pop
addr16
mov
repz
out
test
mov
rorb
adc
xchg
push
stc
stos
ja
dec
aas
movsl
sbb
dec
sti
aas
pop
and
sub
push
cs
or
shl
in
sub
call
cmp
bound
jmp
aad
insb
and
dec
gs
es
cmp
push
push
inc
ret
fs
rcrb
stc
or
adc
pop
xor
mov
or
mov
and
ficoml
or
jmp
and
sub
pop
dec
push
cmp
pusha
adc
mov
negb
pop
and
cmp
ficoms
pusha
inc
mov
out
dec
in
push
in
sarb
stos
inc
sahf
sbb
xchg
fimull
cmp
dec
pusha
mov
pop
in
push
mov
mov
aas
mov
dec
mov
xor
mov
mov
jbe
mov
push
xor
test
shrl
les
mov
mov
leave
outsb
xor
ret
aam
push
in
lahf
inc
xor
arpl
sub
divl
mov
mov
ds
lcall
hlt
lds
mov
in
adc
dec
les
sahf
mov
lcall
arpl
movsl
xchg
push
stc
push
adc
xchg
imul
pop
pop
cwtl
and
std
sbb
xchg
jmp
xchg
leave
or
into
cwtl
push
sbb
or
lods
jecxz
lea
dec
andl
jecxz
push
cmp
inc
test
pop
fiaddl
lods
mov
loopne
mov
repz
ret
push
aad
insb
bound
out
mov
fwait
push
dec
inc
int
dec
inc
iret
ds
sub
and
jl
cmpsl
adcb
or
inc
inc
push
sub
xor
test
or
rol
pop
loope
inc
fs
and
xor
out
cltd
mov
lea
insb
adc
out
js
xchg
adc
ljmp
popa
xchg
xor
in
ret
or
ja
dec
scas
aaa
xchg
sar
push
mov
push
xor
fst
inc
xorl
sbb
std
or
mov
mov
daa
dec
insb
sbb
adc
pop
jg
jmp
das
shlb
aad
aas
repz
sub
sbb
pop
mov
add
jecxz
or
cld
dec
cli
add
mov
enter
pusha
dec
xor
in
and
mov
ret
lret
and
dec
insl
jno
int3
pop
mov
stos
cmp
loop
xchg
mov
es
clc
scas
incl
mov
shlb
in
addr16
pop
cmpsb
movsb
push
stos
pop
mov
icebp
test
mov
nop
insl
jae
add
lret
andb
out
bound
lret
imul
sub
es
clc
dec
andb
push
rorb
add
push
jmp
ret
call
sbb
jo
xchg
pop
inc
adc
and
and
sub
daa
lea
xlat
lock
pusha
stos
iret
sub
test
pop
outsl
xchg
or
push
into
or
dec
pop
sbb
int
sub
mov
adc
or
adc
push
mov
pop
push
fxch
mov
test
and
xchg
sbb
cli
mov
stos
pop
cmp
out
fsubrs
push
arpl
adc
daa
adc
jl
sti
push
nop
ret
dec
push
and
or
in
push
jge
pop
ret
adc
cmpb
sub
pushf
pop
incb
xor
or
inc
arpl
adc
xlat
xor
mov
xchg
cmp
addl
ss
out
xor
sbb
addr16
or
add
push
inc
insb
andl
fsubrl
mov
mov
dec
das
lods
ds
jns
pusha
mov
cmp
std
jb
loopne
das
mov
movsl
mov
add
adcb
push
sbb
mov
idivl
dec
add
fidivs
jns
icebp
cltd
int3
pop
xor
dec
lock
sbb
in
push
addb
xor
xor
pop
addb
and
ficompl
cwtl
mov
jge
ret
or
lret
mov
test
ss
pop
jnp
dec
xchg
pop
push
adc
imul
addr16
inc
adc
or
icebp
cmp
xchg
cmp
mov
addr16
aaa
fucom
adc
data16
cli
test
jb
stos
pop
sbb
hlt
jp
ja
sbb
cld
adc
push
adc
cmpsl
adc
or
xchg
adc
loope
in
sub
jg
mov
or
mov
dec
jecxz
jp
mov
lahf
adc
push
lea
sub
xor
movl
sbb
outsl
out
out
lcall
dec
imul
jp
push
mov
add
adc
jl
push
and
sub
out
stos
push
add
ds
dec
or
jb
imul
add
sub
cltd
ljmp
mov
push
mov
cmp
mov
push
fistl
and
aas
lret
xchg
jp
fldl
adc
dec
pop
dec
dec
leave
mov
mov
sbb
xchg
xor
nop
push
idivb
stos
xchg
cmpsl
or
lods
cmc
cmp
repz
jb
jl
jne
das
pop
adc
xchg
roll
lret
in
cmp
inc
fidivrs
enter
cmpsb
ret
cmc
pop
or
ds
fcmovnbe
jne
lds
dec
pop
mov
ret
or
xchg
xchg
jmp
test
xchg
and
mov
sub
lods
inc
pusha
fists
fmulp
jno
loope
xchg
or
pop
cmp
sbb
das
pop
sahf
in
cmp
dec
arpl
ret
mov
cltd
aas
xor
ret
cmp
or
mov
jb
mov
and
fidivs
add
mov
aad
sahf
inc
les
lahf
lahf
mov
jb
iret
cmp
lock
mov
sbb
add
sbb
xchg
jae
outsb
aas
jle
push
les
jge
sbb
or
cmpsb
aaa
outsb
push
or
cwtl
mov
mov
loop
push
mov
lret
aad
out
test
mov
je
mov
stos
movsb
cmp
jnp
insl
adc
and
rcrb
jo
into
ror
pop
mov
sbb
dec
lock
mull
and
mov
mov
testl
dec
push
sub
push
or
test
rcr
sbb
scas
inc
rorb
es
add
rcl
push
adc
in
xor
cmp
cmpsl
mov
out
adc
test
or
je
sarb
inc
aaa
jbe
push
ret
iret
xor
cmp
inc
fs
shlb
sahf
cmp
mov
lock
test
add
xlat
dec
lock
cmpsl
iret
mov
add
xor
mov
aad
dec
repz
cli
or
adc
call
and
aam
ret
mov
ljmp
call
dec
adc
fiadds
add
imul
pop
subb
pop
jp
dec
and
call
js
ret
jns
adc
add
cmc
in
adc
rcrl
movsb
repnz
lret
or
shr
loopne
jg
test
cld
gs
pusha
or
jae
test
in
out
jae
push
fdivrl
mov
loop
jnp
mov
jg
inc
xor
add
fidivl
test
xchg
in
cmp
enter
repz
mov
push
add
mov
rol
pop
das
notb
or
out
cmp
sti
push
pop
dec
in
xor
nop
xor
jle
cmc
or
icebp
mov
sbb
jns
cmp
adc
xor
mov
fcmovb
stos
push
xor
in
push
shr
daa
xor
inc
pop
push
mov
jmp
outsl
xor
jo
xor
fsubrs
movsl
shll
or
push
push
dec
fsubrs
adc
std
ja
scas
std
sbb
out
and
cwtl
outsb
push
dec
fstl
cmp
jno
xor
shrb
addr16
adc
mov
dec
and
mov
gs
mov
xor
in
cmp
roll
scas
in
in
insl
add
scas
int3
xchg
mov
add
insb
jg
push
dec
out
push
inc
andb
loopne
cld
dec
ljmp
sub
fsubs
arpl
mov
call
cmpsb
lock
jg
mov
cmp
fwait
mov
push
in
cmp
mov
es
pop
add
les
aam
mov
push
and
cmpl
mov
rorl
pop
shrl
mov
cmp
or
xchg
push
mov
stos
adc
jnp
sub
cld
ss
dec
in
movsb
inc
mov
xor
pusha
sti
sbb
pusha
stos
xor
aaa
test
lock
aam
fiadds
cli
jmp
ret
jne
mov
jl
ja
mov
imul
pop
hlt
push
mov
xchg
repnz
lcall
test
pop
sub
sbb
cmp
leave
ss
push
mov
xor
pop
mov
add
bound
inc
in
inc
mov
jge
mov
pop
fdivs
fildl
push
lock
test
mov
mov
jns
cmp
fsubrs
mov
sbb
pop
sub
cmp
and
jl
mov
rcrl
xchg
jne
in
and
loope
iret
mov
inc
pop
sub
push
dec
pop
and
jl
inc
addr16
jle
push
mov
hlt
std
mov
pop
icebp
jg
repz
jle
jl
gs
sbb
lock
xchg
bound
mov
outsb
cmp
jle
cli
in
dec
cmpsb
jge
push
call
in
stos
pop
mov
mov
scas
sbb
popa
ds
push
mov
dec
lret
xchg
cwtl
or
fwait
cmc
test
adc
xchg
xchg
insb
fidivrs
push
push
inc
mov
cmc
mov
clc
push
push
lods
jmp
push
xorb
sub
xchg
sti
mov
sti
stos
in
xchg
ret
scas
cmp
cmpsl
popa
mov
push
pop
inc
ljmp
ss
inc
sub
push
fnstenv
jle
mov
cmp
mov
xchg
jmp
call
pop
repnz
test
sub
sar
cmpsb
das
aad
ljmp
cmpsb
pop
bound
mov
stc
loop
cmc
and
mov
imul
lock
or
sub
test
xchg
cmc
sbb
or
mov
daa
dec
fs
dec
stos
dec
xor
xorl
adc
xchg
sbbl
pop
jb
and
xorb
mov
sbb
aaa
dec
push
ja
test
ror
pop
ljmp
ficoms
add
cmp
inc
andb
aas
es
dec
outsl
movsb
push
dec
push
int
inc
stos
push
dec
lahf
std
mov
clc
or
and
jns
out
mov
inc
std
int3
push
mov
push
mov
mov
inc
xor
and
or
ja
sbb
mov
or
dec
cmp
push
js
sub
jo
hlt
xor
repz
les
lcall
imull
xchg
jbe
hlt
lods
ja
jno
dec
call
call
dec
cmpsl
sub
adc
adc
stc
mov
fwait
mov
fldt
mov
dec
mov
es
push
pop
pop
sub
mov
movsl
int3
mov
sbbb
daa
in
ficompl
push
or
lret
bound
pop
dec
mov
mov
movsb
leave
xchg
mov
lods
jecxz
dec
fisubl
cld
jmp
enter
out
fisubrs
roll
push
and
jae
jno
push
or
pop
pop
adc
pop
mov
in
inc
sbb
or
mov
adcl
insb
jns
pop
arpl
loop
ret
adc
sub
mov
icebp
pop
jge
roll
xor
inc
add
jo
jns
mov
inc
mov
daa
sbb
dec
movsl
das
pop
and
test
cmc
jp,pt
xchg
scas
pop
mov
pop
lret
mov
push
ja
and
jp
fcmovbe
or
das
jnp
clc
test
adc
jb
pop
mov
mov
sbb
adc
pop
or
xchg
sub
sbb
mov
cmp
stc
mov
outsl
or
add
inc
and
cmpsl
lcall
rcrb
es
mov
fisubrs
push
out
and
andl
sub
inc
dec
push
jnp
nop
std
test
jbe
gs
sbb
mov
sbb
popf
lods
loop
xor
in
pop
in
out
mov
mov
pop
inc
add
mov
mov
daa
or
mov
xor
adc
movsl
mov
and
and
adc
imul
arpl
xor
imul
mov
add
pop
lret
fildll
aaa
dec
sub
xor
shrb
bound
cmp
cwtl
addr16
outsb
sub
mov
fidivrs
xchg
mov
stos
cmp
sub
xchg
mov
xor
fwait
rcrl
and
sub
jge
cli
dec
mov
test
adc
push
dec
lock
scas
pop
out
mov
shlb
lds
test
stos
inc
xchg
inc
mov
in
dec
je
je
xchg
aam
icebp
ljmp
aas
gs
xchg
es
mov
mov
jg
and
loopne
push
sbb
xchg
cmp
aad
jg
mov
clc
loop
xchg
fcoml
cmp
out
mov
add
jae
cmpsb
and
jns
insb
aas
or
mov
pop
int3
stos
mov
xor
cmp
add
mov
pusha
repz
xor
sub
push
pop
cld
sarl
ror
sbb
dec
jb
fimull
xchg
inc
cli
inc
jo
and
movsb
lds
push
sub
pop
mov
movsl
call
jl
mov
xor
mov
pop
sub
or
movsb
add
dec
mov
adc
cmp
jge
cmp
xor
push
xchg
pop
lret
add
call
int3
pop
adc
arpl
mov
frndint
scas
push
cmp
ljmp
idivl
repz
xchg
stos
mov
movsb
js
out
mov
aas
outsl
aas
xlat
mov
sub
add
push
or
xlat
mov
jns
dec
add
daa
mov
stos
mov
adc
xchg
pop
add
lds
mov
push
inc
jno
jnp
inc
ficompl
xor
jbe
pop
jmp
mov
lods
adc
and
add
ja
mov
ret
shl
das
pop
xor
cmpl
jb
mov
fcoms
inc
xor
gs
inc
test
lret
and
loope
push
clc
xchg
lods
adc
sub
lcall
movl
orl
pop
and
scas
mov
cmp
xor
lcall
test
mov
sbb
cli
mov
cmp
mov
sub
jne
fdivl
dec
cmp
in
xchg
into
loopne
js
dec
es
jnp
je
cld
dec
loope
cwtl
icebp
or
push
push
sub
lock
lea
pop
shlb
pusha
mov
dec
push
jg
xor
out
cs
sub
xor
mov
and
pop
rep
fistl
cmpsb
mov
mov
xor
sub
cmp
mov
subl
jle
xchg
ljmp
mov
dec
pop
inc
arpl
mov
and
mov
or
jae
jmp
mov
cmc
clc
out
sahf
push
ret
call
rcrb
popf
sbb
test
jns
xchg
pop
icebp
jo
inc
push
sub
adc
lcall
rcrl
add
pop
fwait
inc
cmp
push
icebp
fimull
shlb
ss
in
ror
lret
xchg
enterw
adc
pop
mov
and
ret
mov
sub
pop
fs
mov
sub
cmp
xchg
sbb
push
sub
lods
xchg
nop
xchg
pop
and
data16
pop
xchg
int
stos
or
idivb
push
xchg
shr
test
push
lcall
sub
push
push
pusha
jae
fisubl
stos
ret
lock
stc
insl
mov
rcrl
loope
fcoms
stc
sbb
add
mov
mov
pop
jns
nop
pop
jae
push
jne
mov
jge
lret
iret
mov
ss
in
jne
xor
or
xlat
mov
dec
pop
dec
and
pop
aad
pop
dec
add
in
aas
das
jg
add
xchg
cwtl
fistpll
call
out
and
pop
push
pop
in
dec
cmpsl
ljmp
sbb
push
outsl
loope
es
add
push
aam
in
in
fisttpl
out
mov
push
and
fwait
jns
or
jp
push
jns
push
mov
test
mov
cwtl
and
mov
mov
inc
insb
xchg
test
jl
popf
lds
pop
push
or
and
fcompl
nop
loop
mov
icebp
lock
ja
and
mov
mov
loope
jbe
int
sub
mov
sub
mov
and
bound
mov
out
out
outsb
es
pop
pop
xor
hlt
je
mov
add
aaa
mov
push
cmp
cli
push
fidivs
flds
push
fiadds
mov
roll
sarb
jl
adc
sti
hlt
inc
jge
dec
xor
call
xor
adc
outsb
pop
mov
xor
fdiv
dec
int
mov
into
mov
push
mov
ljmp
int
out
leave
adc
mov
enter
lret
mov
jge
inc
xchg
fdivrl
xchg
inc
loopne
sub
pop
push
dec
mov
pop
out
mov
cmp
and
aam
add
les
fstpt
jecxz
sub
imul
push
mov
insb
mov
and
pop
fsubp
jmp
stc
in
ljmp
mov
and
jle
mov
js
dec
or
dec
nop
xchg
mov
aam
outsl
and
sbb
pop
xor
sbb
cmp
add
mov
sub
mov
cmc
enter
addl
pushf
push
jnp
mov
push
xor
sub
cli
test
test
inc
sub
fmull
push
cmp
enter
popa
insb
jb
inc
push
ficoml
adc
sarl
fcoms
inc
fidivrl
inc
or
mov
add
adc
or
shll
enter
adc
mov
xchg
push
nop
xchg
inc
in
sub
inc
daa
pushl
andb
das
rcll
ds
hlt
jnp
loope
mov
pop
and
push
dec
and
inc
popa
mov
mov
adc
fcomps
mov
hlt
push
push
inc
and
into
scas
data16
std
enter
push
mov
clc
int3
mov
dec
aaa
mov
lods
pop
loopne
jle
push
sahf
pop
into
mov
pop
cs
xor
inc
jbe
in
push
aas
fnstenv
sti
xor
adc
mov
fnstcw
mov
cli
lcall
mov
popa
xchg
ret
hlt
gs
pop
lret
jg
xchg
adc
mov
inc
mov
pop
pop
fiaddl
pushf
push
ds
mov
leave
mulb
daa
lcall
gs
inc
ret
popa
adc
push
push
lahf
test
in
scas
lock
push
stc
sub
mov
xchg
sub
movsb
cli
out
lcall
popa
push
inc
fwait
shll
enter
inc
xor
add
fisttpl
mov
xor
addr16
int3
in
mov
mov
aas
and
cmp
jbe
js
or
lret
imul
mov
xor
push
dec
sub
clc
nop
and
sbb
enter
mov
leave
mov
mov
add
pop
arpl
loop
sub
std
shr
js
inc
push
inc
jecxz
out
repnz
into
push
sbb
adc
mov
into
pop
in
mov
loopne
xchg
loopne
adc
inc
pop
popf
pop
adc
inc
repnz
dec
aaa
sub
negb
movsb
movsl
fcmove
jbe
cld
es
xor
das
stos
cltd
fs
cmp
adc
fiaddl
aaa
jne
repz
push
mov
rorl
mov
inc
xlat
mov
push
mov
jnp
ret
int3
and
dec
mov
lret
pusha
in
jmp
pop
jnp
mov
push
jmp
mov
rcrl
cmpsb
jge
nop
popa
in
fwait
int3
jmp
dec
adc
scas
orb
aas
enter
mov
or
add
ds
jmp
add
in
je
aas
lock
hlt
push
aas
lods
loopne
rol
mov
pop
push
or
push
push
jp,pn
lock
scas
inc
add
jae
or
or
int3
cmpsb
dec
and
aam
lods
jae
sbb
pop
fidivl
push
call
shlb
sub
adc
xor
hlt
jne
mov
push
sbb
inc
xor
std
cmp
xchg
adc
sub
insb
lea
aaa
por
sub
mov
jbe
push
jmp
mov
repz
in
xchg
cmp
int3
mov
rorb
imul
ss
lock
hlt
mov
and
repz
inc
add
jo
ljmp
add
into
test
and
jg
jl
aam
cmp
mov
lods
push
dec
sbb
roll
adc
mov
mov
daa
pop
push
pop
and
mov
mov
inc
cli
out
fsubs
mov
push
push
jge
jle
push
cmc
cmc
pop
dec
std
sub
xor
sahf
imul
cmp
mov
fidivl
pusha
dec
addl
test
mov
or
push
mov
loopne
push
jecxz
sbb
lock
stc
imul
lods
push
and
adc
shll
scas
fnstsw
lods
ljmp
ret
int3
inc
pushf
mov
jg
push
call
pop
cmp
in
push
loope
jge
dec
cmp
cld
repnz
cli
push
leave
call
and
es
popa
push
inc
cmp
push
mov
mov
out
mov
xor
outsl
jbe
pop
fdivrl
jns
and
mov
in
jnp
and
add
outsb
in
jmp
in
push
std
ss
push
jge
dec
in
push
repnz
cmp
test
test
insb
insb
mov
jo
sub
jle
push
ljmp
lods
cmp
xchg
mov
test
cld
xor
pop
rol
rorl
add
xchg
cmp
imul
lret
out
mov
cmp
das
insb
mov
rorb
cwtl
and
mov
add
aam
ss
push
rcrb
cmpsl
add
jo
notl
incl
and
in
sbb
push
addr16
xor
imul
ja
out
fwait
adc
loope
sub
adc
mov
lret
push
pop
or
jp
in
and
jp
loope
faddl
mov
in
add
mov
push
xchg
int
pop
mov
push
rolb
jge
fistl
add
sbb
cmpsl
jp
ljmp
xor
push
sbb
cmc
or
movsl
inc
jnp
ret
pop
push
add
cmp
mov
out
iret
lods
jae
pop
mov
mov
test
aas
insl
xchg
les
or
inc
sti
dec
subl
pop
nop
cwtl
loope
jecxz
sbb
sub
cmp
jecxz
sti
popf
test
addr16
mov
mov
and
dec
push
sti
roll
addl
mov
xor
stos
lcall
sub
lock
mov
xchg
dec
cltd
lret
sbb
and
sahf
inc
push
lret
shll
or
test
int
ja
pop
jecxz
sti
cmp
ss
roll
adc
fprem1
jnp
sbb
push
cmp
dec
sahf
and
xchg
add
lcall
and
jnp
jle
sbb
inc
jb
repz
mov
mov
push
mull
mov
lea
jecxz
into
popl
cmp
incb
cmpsl
or
sub
loopne
lea
add
iret
cwtl
int
mov
test
cwtl
in
xor
ret
or
push
xor
aam
mov
loop
jp
lds
or
pop
cmpb
ss
mov
cmpsb
mov
shl
negl
inc
es
sub
hlt
int
sbbb
movsl
out
adc
adc
loopne
add
jno
xorb
aam
push
xor
in
loop
in
jmp
sub
xor
dec
adc
fs
cmp
cli
ret
fildll
js
sub
mov
repnz
sarl
popf
sub
inc
into
fadds
lret
movntps
dec
fisubrs
xor
mov
push
int3
mov
xchg
xor
mov
push
mov
mov
jns
mov
jo
sbb
xchg
lea
insl
cmpsl
leave
rcl
aad
push
inc
bound
gs
ss
push
mov
fs
shlb
hlt
inc
dec
fstp
dec
dec
popf
enter
jnp
lret
cmpsb
stos
add
iret
xchg
sub
jns
cmp
cmpsb
mov
out
lods
cmp
js
or
jp
enter
lods
scas
xchg
push
pop
cmc
insl
adc
adc
js
xchg
fld
adc
aas
sub
insl
shlb
jo
pop
push
push
jb
sbb
cmp
aad
xor
sub
adc
xchg
mov
stos
sub
push
inc
jmp
inc
fs
mov
shrl
test
lods
pusha
out
adc
aas
pop
xlat
ss
xchg
and
dec
adc
out
jge
fcompp
pop
fdivrl
es
jno
xchg
sbb
xchg
or
sub
loop
rorb
jg
xor
jb
call
adc
mov
pop
and
fcoml
outsb
cwtl
ret
das
or
stos
jge
int
pushf
mov
pop
mov
dec
add
xchg
add
adc
add
mov
ud2
stos
mov
ljmp
pop
ret
add
out
aaa
cmp
push
into
add
fdivrs
iret
pop
repnz
push
push
lods
mov
cmp
push
mov
mov
inc
add
pop
jo
cld
out
pop
mov
aaa
xor
mov
enter
jno
adc
testb
jns
dec
add
inc
adc
push
dec
mov
inc
int
dec
iret
and
bound
push
xchg
je
lret
sbb
jns
icebp
cmp
rcrb
cwtl
or
std
adc
jecxz
cld
out
insl
jp
and
subb
outsl
aad
test
lcall
dec
nop
dec
push
xor
mov
int
push
iret
je
test
je
loop
iret
mov
add
loope
or
adc
push
jnp
mov
push
adc
push
pop
push
sbb
loop
xor
test
sub
cs
arpl
and
outsb
mov
jbe
or
pop
fdivl
bound
jp
out
out
andb
jb
dec
out
lods
dec
dec
cmc
ret
or
mov
jp
cmp
ljmp
push
lods
scas
bound
jo
je
inc
xor
or
bnd
in
push
dec
inc
popf
push
leave
stos
psraw
lcall
lcall
jb
mov
in
in
mov
jmp
mov
aas
loopne
lea
ss
andl
loopne
in
sub
add
fadd
scas
lds
mov
xor
sahf
fisttpll
sti
add
imul
nop
cmc
push
push
mov
rolb
int
sbb
out
pop
cmp
je
outsl
or
push
fsubp
ret
stos
outsb
insb
pop
addl
push
add
dec
jl
sti
cmp
pop
xchg
popa
push
or
fstp
rcr
sarl
push
pushf
sbb
out
and
into
call
cmp
jg
xchg
fsubs
and
pop
sbbl
mov
mov
xor
xchg
repz
mov
sub
in
jge
mov
mov
push
or
test
pop
popf
push
push
jbe
imulb
adc
inc
ret
sub
mov
mov
inc
repnz
scas
mov
push
inc
adc
dec
das
or
nop
mov
or
stc
push
xor
cmp
lcall
test
push
sub
inc
sub
insb
sbbl
iret
or
test
mul
pop
cmp
jae
ss
jmp
fwait
mov
into
mov
mov
les
xor
stc
insl
dec
repz
inc
and
cwtl
jmp
jae
mov
mov
inc
shlb
test
jne
sahf
inc
lret
push
movsb
inc
int3
dec
cmp
inc
outsl
pop
inc
jbe
or
pop
fistps
inc
pusha
xor
addr16
dec
mov
xor
sub
push
aas
inc
xor
mov
sahf
pop
test
adc
pop
and
divl
inc
pop
push
dec
scas
lahf
lcall
std
sbb
dec
mov
cmpsb
sbb
mov
test
mov
jmp
dec
dec
adc
xchg
dec
push
int
or
mov
sub
adc
fsubs
sub
adcb
mov
dec
pop
push
lods
add
sbb
js
sbb
out
sub
aad
loop
mov
out
outsb
cltd
jae
aas
dec
mov
mov
push
stos
mov
mov
fistpll
ss
mov
pop
sbb
add
mov
push
dec
jecxz
popa
xor
pusha
ficoms
lods
rcll
mov
push
in
loop
cmp
lods
imul
mov
scas
push
push
mov
pop
and
dec
sbb
xchg
leave
mov
mov
dec
jne
xorb
lahf
inc
dec
aam
int3
cli
push
loopne
dec
mov
cmp
cmpsl
shlb
adc
inc
dec
push
leave
lcall
shlb
pop
les
sbb
arpl
xor
out
sarb
mov
pushf
in
mov
hlt
in
popf
mov
cmp
mov
fs
mov
pop
adc
adc
pusha
das
movsb
ss
adc
neg
and
inc
cmp
std
add
divb
js
sbb
sub
gs
test
cli
inc
jmp
pop
repnz
stc
data16
ljmp
mov
std
sub
pop
mov
shl
imul
cmp
loope
fstpl
mov
and
ss
jnp
lds
and
fildll
inc
lcall
xor
call
inc
mov
fs
sub
call
mov
cmp
ficomps
push
ja
je
lds
sbb
jbe
fdivr
xor
out
jecxz
jle
push
sti
push
mov
adc
jbe
subl
inc
mov
and
xor
loope
mov
loopne
ret
pushf
mov
scas
xor
adc
push
and
dec
lock
loop
push
cld
lea
add
mov
xchg
lret
push
xchg
aad
bound
jae
pusha
mov
cmpsl
sbb
jbe
aas
cld
fsubl
inc
frstor
imul
xchg
test
std
pusha
add
sbb
imul
mov
ret
push
lds
sub
mov
cmp
and
mov
inc
mov
adc
mov
sbb
fldenv
dec
imul
lock
fwait
and
mov
mov
fiadds
mov
pop
jae
or
mov
js
add
dec
mov
xchg
add
imul
sub
xchg
lcall
inc
cmp
inc
sbb
mov
sub
clc
jmp
test
and
cmp
mov
loope
inc
cmp
stos
fcomp
ret
and
push
hlt
test
adc
lea
stc
xor
cmpsb
xor
inc
cwtl
mov
mov
fiadds
xor
xchg
push
rcl
cmpsb
in
mov
rcl
push
shlb
jg
fwait
cs
shll
cmpb
push
adc
roll
sub
and
pushl
jne
lods
popa
gs
sub
rcr
test
xlat
inc
inc
js
inc
jg
mov
mov
add
std
bnd
mov
sbb
js
ficoml
jno
add
into
cltd
js
and
mov
cld
lods
dec
and
idivb
jae
into
stos
add
into
mov
nop
scas
ja
sub
dec
pop
loop
cmp
push
sarb
popa
xor
out
ficomps
dec
out
lahf
andl
jmp
ficompl
inc
sbb
icebp
ret
adcb
xchg
divl
inc
or
outsl
stc
pop
adc
in
aad
jl
xor
push
cmpsb
mov
or
dec
and
mov
int3
jae
cmp
jmp
sub
lret
push
pushf
les
lahf
adc
pop
popf
dec
mov
xor
xor
shrb
add
mov
jle
adc
pop
jg
in
rcrl
mov
push
stc
gs
insb
cs
jo
adc
std
xchg
jp
mov
aam
mov
push
sahf
jbe
mov
je
fimuls
jns
fwait
imul
inc
ret
mov
clc
negl
adc
outsb
mov
xchg
jge
aad
sbb
lds
push
mov
test
arpl
outsl
rolb
xor
inc
call
sbb
jg
fs
sbb
jno
pop
aaa
adc
repz
dec
enter
dec
push
and
ss
lock
pop
sbb
add
inc
call
or
xor
sbb
test
mov
dec
hlt
lods
mov
mov
stos
cmc
mov
ret
cltd
xchg
in
lret
fwait
and
mov
repz
adc
nop
or
xor
js
cli
add
fcoms
lahf
xchg
out
stos
sbb
and
dec
out
lock
lock
and
dec
sub
push
rcrl
push
jnp
sub
xchg
fistpl
xchg
sahf
and
pop
inc
into
fxch
inc
icebp
mov
sbbb
xchg
mov
jle
movsl
and
jmp
inc
hlt
shll
jle
subb
outsl
pop
xor
xor
scas
idivl
jmp
test
pop
fldcw
mov
or
push
xlat
adc
push
push
adc
rorl
inc
cmp
cmc
ret
jmp
push
test
jg
roll
js
movsb
mov
ja
dec
push
inc
fisubrs
shl
inc
and
xor
pushf
sbb
lea
ficoml
cmpb
mov
xchg
mov
cmpsl
jp
mov
xlat
sahf
fs
movsl
lods
xchg
movsb
lods
cmp
cwtl
and
loop
adc
leave
xor
test
cmp
or
in
dec
pop
sbb
dec
mov
inc
cmpsb
sbb
nop
je
sahf
in
xchg
mov
dec
or
push
cmp
ret
xchg
dec
mov
movsb
pushf
leave
test
mov
mov
sub
xchg
in
add
push
dec
and
pop
pop
int
fldcw
pop
mov
fwait
into
loope
jnp
dec
cmp
lea
inc
mov
movsb
xor
roll
jb
sbb
icebp
or
mov
sbb
sbb
add
stos
adc
shrb
hlt
notb
pop
subl
mov
lea
fisttpll
cwtl
mov
rol
cli
mov
iret
dec
flds
aas
and
xchg
popa
out
les
inc
lcall
mov
mov
xor
inc
inc
or
dec
pop
stos
es
out
sbb
add
and
test
push
push
imul
je
out
mov
jle
sbb
dec
xor
pop
aad
imul
mov
pop
lsl
adc
pop
and
sahf
sbb
xchg
into
sti
in
std
mov
mov
sbb
je
or
sbb
inc
adc
jno
or
lahf
mov
cli
adc
ret
iret
jns
js
aaa
movsb
dec
fs
jnp
ljmp
fwait
push
push
sahf
ds
rcrl
call
xchg
pop
mov
ds
cmc
add
test
sarb
sbb
cmp
lret
xchg
loope
mov
jecxz
out
push
push
dec
lahf
aad
xchg
xchg
stc
daa
inc
sub
notb
pop
clc
xor
xchg
and
ss
out
sbb
xor
or
sub
movsb
xchg
fcompl
jb
out
js
sbb
add
mov
jp
add
jno
popa
mov
sub
push
cld
or
pop
in
aad
and
nop
outsb
jmp
mov
mov
loope
pop
lock
mov
icebp
cld
jge
mov
pusha
mov
push
xchg
ljmp
and
add
pusha
in
scas
sbb
adc
mov
mov
jge
pop
mov
aam
insl
xlat
push
fs
mov
and
xor
addr16
stc
adc
ds
jo
dec
call
dec
pop
movsl
xchg
repnz
sub
jae
mov
mov
dec
test
mov
xor
shl
jo
cwtl
mov
mov
movsb
addb
outsl
add
aas
dec
add
lcall
and
jo
pop
push
sbb
push
ret
or
addr16
arpl
dec
push
jae
inc
lahf
fdivrl
dec
jno
iret
cltd
push
lock
push
or
mov
mov
xor
pop
push
hlt
add
call
push
sub
mov
loope
lcall
mov
mov
add
inc
xchg
stc
imul
pop
test
dec
fildll
in
fxch
mov
into
pop
or
lret
sbb
rclb
mov
imul
insl
hlt
jb
jae
cltd
sub
or
mov
ljmp
js
mov
testl
mov
and
adc
push
push
mov
popf
sub
mov
jae
pop
lcall
jnp
das
lock
add
sub
xchg
fisttpl
pushf
dec
push
lock
mov
dec
fdivr
repz
out
cmp
dec
scas
insb
mov
ljmp
enter
sahf
mov
pushf
push
sti
clc
jno
and
and
and
ret
dec
pop
fnsave
popf
ficoms
enter
ja
inc
addr16
lret
cmpl
movsl
mov
or
inc
inc
jl
inc
inc
stc
ficomps
shrb
push
jbe
xchg
mov
cmpsl
ficoml
enter
imulb
lret
or
sbb
in
or
imul
xchg
jp
mov
jnp
iret
das
cmp
cwtl
add
mov
or
loop
xor
jmp
add
in
lods
push
loop
repnz
stos
pop
xchg
mov
enter
aad
cs
jae
or
repnz
jecxz
pusha
hlt
addr16
lret
xchg
jl
pop
push
sub
push
xor
jbe
arpl
mov
rorb
add
adc
mov
or
out
dec
test
into
sub
xchg
lcall
jae
mov
ljmp
sahf
sbb
jne
mov
shr
mov
and
mov
pushf
pop
pop
mull
das
jae
mov
pop
pop
lret
int3
dec
das
or
jb
iret
negl
test
add
mov
dec
iret
push
popa
pop
rorl
in
mov
imul
fimull
out
ljmp
xchg
jg
xor
mov
adc
in
fldcw
xchg
aam
adc
mov
push
jne
sarl
pop
imul
mov
jp
imul
in
xlat
enter
subb
sbb
xchg
fiaddl
sub
push
inc
loop
adc
lock
ds
and
mov
sub
sub
sub
rsm
dec
fcoms
inc
inc
add
test
inc
mul
dec
sub
hlt
push
int
std
and
icebp
inc
pop
in
add
push
aad
jbe
fs
in
in
sarl
xchg
xchg
mov
sub
repnz
mov
loopne
dec
mov
mov
outsb
push
js
stos
js
push
loope
xchg
and
je
rcrb
xlat
je
movsb
fstpt
mov
push
mov
leave
jge
mov
push
iret
mov
sub
push
jge
pop
imul
dec
xchg
loope
push
add
sahf
call
fisttpl
dec
xchg
les
xor
out
lods
mov
stos
in
testl
scas
shl
inc
shlb
outsb
or
addr16
xchg
jne
fsubrl
arpl
mov
xchg
cmp
jle
push
int3
jp
aaa
cmp
jl
out
test
push
fdivrp
mov
arpl
loope
xor
xchg
dec
mov
and
in
test
jmp
mov
jge
or
cmc
in
mov
mov
and
movsl
adc
xchg
sub
aas
xor
xchg
mov
xorb
imul
invd
sbb
xorl
mov
lahf
cwtl
ljmp
insl
addr16
xchg
jns
push
xchg
in
and
cli
loope
push
jno
insl
jg
jns
sahf
das
lahf
or
sbb
xchg
sar
aad
ss
ret
mov
lock
adc
mov
and
add
add
cmp
insb
push
dec
mov
cmp
pop
fstpl
lret
jl
pop
call
jne
loopne
fs
fcmovb
fdivr
in
pop
push
xchg
adc
daa
dec
push
xor
frstor
mov
insl
inc
sub
nop
insl
and
loopne
fcmovb
cmpsl
aad
and
mov
test
cwtl
jno
inc
and
in
jb
mov
int
shlb
arpl
cmp
pop
pusha
pop
adc
gs
fmull
inc
out
loop
lods
sub
xor
or
imul
dec
pop
pop
cmp
push
dec
push
int3
imul
xor
mov
addr16
push
es
les
sub
mov
mov
sub
or
sub
ja
lods
pushf
sbb
iret
mov
or
mov
jbe
out
mov
int
pop
cmp
clc
jno
ficomps
or
cmc
ficoml
loopne
or
sahf
fmul
pop
cmp
fsub
les
int
enter
adc
mov
dec
jns
mov
add
lods
xor
adc
test
or
cs
push
xor
gs
daa
mov
jb
push
push
mov
aas
add
enter
mov
jmp
jp
push
fnsetpm(287
pop
xchg
inc
push
cmp
or
inc
repnz
aam
mov
sub
shrb
rol
mov
mov
xlat
mov
inc
orl
cmp
popa
xchg
test
sbb
cmp
mov
int
es
cmp
call
or
xchg
xchg
imul
inc
ret
mov
adc
flds
adc
add
mov
and
jmp
mov
mov
movsb
and
loope
cmp
mov
inc
dec
in
mov
into
xor
test
pop
mov
cmp
xor
int
pusha
inc
movsb
mov
jecxz
sub
jp,pt
inc
pop
pop
popf
aad
mov
cwtl
push
fdivs
jmp
pop
ret
mov
nop
sbb
lret
ss
icebp
testb
pop
stos
ss
fld
sub
clc
sbb
test
mov
xchg
dec
out
pop
hlt
pop
bound
arpl
cltd
stos
and
enter
xor
std
jl
adc
cwtl
insl
push
aaa
sub
fdiv
lret
decb
aas
pop
jl,pt
lods
or
cmc
add
cltd
gs
push
mov
repnz
xor
stos
xchg
push
test
push
lock
inc
movsb
into
or
cmpsl
iret
cld
addr16
xor
adc
and
int3
hlt
or
test
and
in
sbbl
add
and
adc
lret
cmc
es
and
ret
in
aad
loopne
out
cmp
push
out
stos
bound
lea
cmp
xchg
xchg
xchg
lea
sub
jns
fisttpl
pop
pop
pop
dec
sub
inc
shlb
insl
cmpsl
pusha
shlb
adc
inc
xchg
pop
pop
movsb
push
or
xor
and
xor
adc
in
push
dec
or
movsb
xlat
daa
icebp
cmp
jle
negl
cmpsb
in
sub
shll
pop
ljmp
mov
fisubl
lea
inc
adc
sbb
push
aaa
sub
xor
cmp
ss
mov
scas
mov
rcrb
es
jae
clc
and
sub
lret
xor
add
data16
push
test
fs
je
mov
out
jo
hlt
pop
sub
mov
test
mov
call
xchg
pop
out
or
stos
jnp
js
xchg
lods
jle
or
in
je
rorl
and
scas
adc
sub
imul
gs
sbb
sarb
xor
popa
sub
test
add
push
mov
push
adc
stos
sub
test
xchg
and
fcoms
rcrl
xchg
inc
shlb
outsb
shll
mov
inc
inc
and
scas
cli
and
sub
mov
sbbl
xchg
es
or
and
sbb
and
mov
gs
xor
jno
push
fcomps
sbb
repnz
fbstp
sub
xchg
aad
out
scas
jb
adc
mov
lcall
in
mov
sbb
or
xchg
das
int3
int
push
push
mov
pop
mov
jo
xchg
ljmp
mov
cwtl
in
lcall
and
xchg
jne
jmp
adc
adc
cmp
mov
mov
xchg
push
iret
pop
cmp
and
mov
pusha
aaa
gs
and
repz
jp
fdivs
std
insl
dec
lea
cwtl
or
pop
jo
pop
je
pop
push
mov
jnp
or
xchg
xor
push
mov
sbb
hlt
push
out
stos
mov
xchg
icebp
clc
call
dec
sbb
in
cmp
test
stc
jp
or
jns
mov
pop
jmp
sbb
inc
lret
nop
or
mov
push
lds
out
inc
adc
mov
jbe
stos
lods
sbb
das
rcll
mov
push
insl
lods
mov
loopne
jg
pop
push
pop
jmp
outsl
xchg
mov
mov
lods
add
lock
in
lcall
data16
adc
dec
adc
pushf
push
dec
int
push
lahf
xchg
repz
push
daa
inc
sub
andb
cli
adc
jbe
dec
lret
jmp
xor
sbb
into
jmp
or
or
xchg
cmp
mov
or
pop
and
movsb
xchg
sbb
add
outsb
sub
inc
inc
sub
cs
jl
sbb
mov
scas
fs
add
outsl
xchg
dec
mov
jb
inc
mov
lds
cmp
sub
add
mov
sbb
hlt
fbstp
mov
xchg
imull
setne
xor
dec
testl
cmp
in
andb
loope
pop
sbb
xchg
sub
imul
lahf
cmpsb
popa
je
push
cmp
lea
enter
std
sbbl
dec
jge
pop
enter
or
mov
sub
movsb
btc
outsb
and
rcrl
jecxz
cli
push
imul
test
pop
test
and
xchg
cmp
sahf
nop
xchg
addr16
movsb
or
ja
or
xor
jg
daa
push
mov
jns
int
pop
repz
scas
lock
outsl
sub
pusha
shlb
adc
inc
xor
sbb
mul
inc
repnz
jne
mov
jecxz
add
jmp
inc
mov
ljmp
ljmp
mov
xchg
loopne
mov
inc
or
sub
inc
daa
inc
cmp
loopne
les
xchg
jg
sub
imul
mov
cwtl
lahf
movsb
enter
test
inc
jge
dec
push
push
ret
add
aas
pop
or
cmp
mov
adc
sub
stos
sahf
pop
daa
mov
mov
dec
dec
xchg
leave
out
jle
and
into
cmpsl
pop
js
scas
lds
sbb
push
cltd
stc
ja
mov
repz
add
push
mov
and
out
addr16
mov
adc
aam
push
dec
push
inc
movsb
in
cmp
jne
lret
movsl
jo
dec
std
pop
fs
mov
pusha
lahf
cmp
cltd
jbe
aam
jge
fimuls
jge
in
dec
jnp
nop
xlat
adc
pop
sub
jge
jp
ret
imul
mov
mov
jle
push
mov
sbb
sbb
icebp
xchg
paddsw
dec
fs
out
adc
repnz
sbb
mov
mov
test
hlt
lods
cltd
push
in
pop
ret
popa
fsubp
and
pop
push
dec
or
mov
es
mov
pusha
out
fists
mov
sbb
pop
cld
mov
lcall
les
pusha
daa
aas
sbb
in
sahf
mov
cmp
dec
cmp
lahf
enter
adc
mov
dec
jbe
xor
sbb
imull
pusha
push
scas
insl
mov
scas
xchg
xchg
push
les
xor
je
jp
or
into
xchg
imul
lret
pop
into
mov
inc
cs
lret
and
add
int3
xchg
inc
mov
jl
fimull
sub
pop
lret
add
and
shlb
stos
add
pop
xor
in
ljmp
sbb
clc
mov
adc
ds
xor
outsb
ret
cld
lods
rorl
cmp
cmp
cmpsb
stc
mov
mov
call
out
fimull
mov
sbb
nop
sub
mov
or
in
and
mov
mov
and
mov
fidivrs
push
insb
cmpl
mov
ss
inc
mov
jl
in
jp
xor
sub
xchg
pop
es
fadd
push
sbb
lods
hlt
adc
xor
mov
in
jecxz
add
mov
and
fidivrs
shrb
mov
pusha
stos
pop
addr16
shrb
jae
loop
addb
aad
sbb
inc
js
repz
adc
insl
fwait
int
cmp
clc
add
jno
dec
xchg
rcll
int3
pop
jnp
addr16
outsb
test
cmp
sbb
rclb
sub
dec
jl
mov
imul
cltd
cmp
or
jmp
nop
dec
cmp
mov
dec
push
test
jb
push
jae
mov
lahf
and
mov
sbb
or
jecxz
std
xor
xchg
add
mov
fsub
mov
std
pop
fstpl
aaa
into
dec
in
mov
dec
mov
std
mov
int
cmp
dec
lcall
lret
cmp
dec
scas
add
out
xor
ss
lock
insb
data16
and
lahf
cmpsb
xchg
cmp
mov
sub
push
or
xchg
out
mov
pushf
fadd
scas
sbb
adc
ret
jbe
inc
push
daa
pop
jne
inc
clc
push
int
in
mov
sbb
mov
xlat
je
clc
dec
fadd
mov
int
fldenvs
xor
adc
xchg
mov
cmp
repnz
imul
inc
mov
arpl
test
xchg
dec
sub
lods
mov
push
sbb
daa
lods
test
jns
pop
xchg
xlat
or
add
jo
dec
mov
xchg
cli
pushf
fmul
or
int3
dec
ret
jno
bound
stos
cli
scas
sub
and
jle
ret
pop
sub
popf
ret
xchg
xchg
mov
shrl
out
and
call
lahf
fwait
in
pushf
outsb
mov
add
insl
test
movl
movsb
fidivrl
pop
or
xchg
ja
xor
adc
fs
pop
int
add
icebp
push
lods
fld
das
and
xor
xchg
fwait
jecxz
mov
fmull
xor
xor
scas
xor
data16
fnstsw
jo
add
test
jl
or
mov
cmp
notl
mov
outsb
adc
insb
aam
cmp
jo
mov
inc
mov
push
andl
insb
js
cmpsb
mov
lods
clc
jle
jae
lods
pop
add
push
sub
mov
lret
xlat
fsub
xchg
inc
lahf
hlt
mov
mov
mov
movsb
gs
jnp
pop
outsb
leave
negb
jo
jno
pushf
or
mov
xchg
fmul
hlt
xor
test
jne
or
lret
add
add
add
jne
xchg
mov
mov
jne
test
push
nop
or
sbbb
jno
or
hlt
dec
xor
inc
arpl
aaa
jle
in
orb
jo
push
push
mov
push
jle
xchg
cmp
lds
test
xlat
je
sbb
je
out
xlat
mov
and
rcr
jp
xchg
adcl
test
push
and
or
or
std
mov
or
add
ret
lcall
mov
or
mov
dec
add
jg
test
popa
and
imul
rcrb
and
dec
cltd
mov
and
sbb
cs
push
call
out
daa
dec
outsb
adc
sti
mov
outsb
jnp
loop
loopne
pop
test
je
cli
cmp
or
insl
lcall
scas
cmp
inc
and
pop
add
ret
or
cmpb
ds
dec
mov
mov
or
das
and
push
sbb
in
shrb
cmpsb
adc
jae
sub
in
loop
lods
je
lcall
adc
push
add
add
ret
mov
adc
and
movsb
leave
sub
mov
push
mov
jae
pop
xchg
in
popa
std
and
pop
add
sti
inc
jbe
aas
sbb
int
jmp
cmp
mov
add
pop
dec
cmpsl
or
inc
lds
stos
pop
cmp
mov
inc
mov
addl
sub
mov
mov
xchg
push
or
addl
lock
insb
and
pusha
xchg
repz
adc
push
mov
addb
xchg
cmp
pop
imul
call
test
aad
jo
or
dec
mov
pop
es
ds
add
add
pop
fsubrs
jmp
out
adc
dec
dec
testl
inc
pop
or
sbb
inc
aam
inc
mov
fneni(8087
inc
lds
cmp
repnz
pop
mov
xchg
movsb
scas
xlat
dec
mov
popf
or
add
add
rorb
xchg
pop
imulb
dec
add
sti
and
push
inc
ret
lahf
lea
popa
cmp
ja
dec
dec
mov
mov
push
lcall
xor
rcrl
outsl
mov
addl
adc
sub
addr16
ljmp
sbbl
push
sbb
leave
int3
push
xlat
outsb
mov
adc
mull
cwtl
inc
fdivp
fst
xchg
lock
cld
fidivrs
ffree
inc
xchg
aad
push
clc
jno
dec
xor
xchg
mov
fnstenv
aad
cmp
mov
icebp
or
xchg
pop
mov
dec
push
pusha
cli
movsl
xchg
loopne
or
aam
xchg
ja
mov
dec
pop
push
or
lock
arpl
and
sarb
jle
hlt
sbb
mov
pop
inc
rclb
mov
test
loopne
cmp
sti
inc
sti
sbb
iret
stos
ja
test
outsl
test
add
mov
flds
ja
loope
or
mov
insl
mov
rclb
inc
sub
lea
mov
xchg
mov
and
ss
dec
xor
adc
rcrb
sbb
mov
clc
mov
imul
repz
cs
and
or
sbbl
push
int
add
jp
mov
fsubl
xchg
xchg
and
sub
fdiv
adc
push
jne
nop
dec
and
jmp
fdiv
dec
pop
cld
push
mov
pop
and
ja
cmp
xor
cmovo
push
jno
mov
mov
es
sub
add
es
cltd
inc
mov
stos
fldenv
pushw
daa
aas
inc
push
call
pop
pusha
ds
movsb
out
mov
scas
dec
mov
mov
adc
mov
dec
adc
repz
pop
js
clc
xchg
push
loopne
cmp
outsl
cmpsb
fs
pushf
repnz
jb
sub
xchg
push
daa
mov
inc
popf
test
xchg
jge
sbb
jae
aam
and
jp
popf
loopne
pop
and
fcmovnu
add
pop
out
jb
stos
mov
sbb
lods
clc
ret
sub
mov
add
or
sub
mull
ret
jcxz
outsl
daa
cltd
inc
int3
and
jno
cmp
push
stos
push
lcall
pop
inc
push
push
inc
or
pop
mov
sub
mov
ds
sbb
ljmp
scas
shll
jne
jnp
push
pop
xor
clc
outsl
pop
aaa
pop
push
popa
es
xor
pop
xor
push
rcll
or
aad
dec
ret
sub
xchg
inc
lea
int
xchg
test
add
jne
loopne
test
dec
js
pop
fisubs
jl
push
xchg
cli
xor
ds
sbb
enter
stos
out
rcr
shl
pusha
xor
sahf
mov
mov
orl
pusha
insl
sbb
int
xchg
dec
jp
fiaddl
out
leave
shll
cmp
sub
pushf
push
sub
cld
fstpl
pushf
cmp
sti
mov
iret
mov
stc
or
loop
or
das
sub
je
popa
leave
pop
js
mov
cltd
cmp
xchg
mov
aad
arpl
lods
prefetch
and
mov
pop
lea
inc
mov
clc
movsb
pop
add
in
das
pop
pushl
fwait
jecxz
loopne
andl
inc
dec
lret
pop
xor
pop
je
in
push
fisttpl
adc
sbb
push
popf
and
inc
sub
jnp
or
ds
icebp
sbbl
pop
add
mov
inc
outsb
dec
outsb
sbb
lea
test
xchg
sbb
cmp
jg
aaa
loopne
cltd
xor
pop
call
int3
pop
mov
in
aad
fisttpl
xor
cmp
or
call
outsl
add
gs
mov
push
mov
sbb
movsl
jmp
insb
inc
inc
xor
cmpsl
mov
mov
fmul
dec
pop
push
fs
and
push
fisttpll
out
je
scas
fwait
mov
shrb
pop
aad
push
mov
xchg
sbb
mov
xchg
cli
pop
cmp
add
push
jle
fnstsw
jne
cli
cmp
insl
aad
dec
and
mov
or
sbb
test
into
inc
inc
iret
fxch
xchg
out
and
sub
inc
pop
addr16
sbb
pop
je
ja
pop
lcall
push
adc
clc
xchg
sbb
jno
push
jg
cwtl
pop
cli
fsubrl
mov
insl
sbb
sub
jns
jmp
push
or
lcall
xchg
jle
inc
or
xor
arpl
mov
movsl
popf
push
std
pop
mov
push
xchg
mov
xor
mov
lret
adc
sbb
xor
and
sbb
mov
f2xm1
movsl
test
pop
icebp
movsb
inc
addr16
test
cli
out
xchg
rcll
sub
test
or
mov
cmp
scas
subps
in
mov
jl
imul
add
int
lahf
daa
nop
nop
mov
add
sub
jecxz
jae
test
push
stos
addr16
das
mov
out
daa
pop
xchg
jb
mov
imul
shlb
jg
movsb
push
jecxz
ss
sub
xchg
int3
mov
stos
orl
and
push
pushf
mov
arpl
jo
cltd
mov
aad
fdivp
je
mov
ret
pop
xchg
stos
dec
mov
insl
cmp
repz
enter
nop
aaa
mov
and
add
jnp
mov
xchg
ljmp
mov
add
and
outsb
movsb
adc
mov
mov
subl
gs
xor
push
push
inc
mov
add
aaa
or
popa
arpl
das
rcrl
push
inc
test
fs
lret
add
sub
ja
and
divl
movb
pop
movsl
lods
lcall
inc
das
push
in
dec
cwtl
incb
lahf
add
inc
xchg
cmp
sbb
xchg
xlat
fnsave
popf
dec
xchg
sti
or
mov
mov
mov
pusha
sbb
sti
lret
or
xor
out
fldenv
mov
push
mov
sbb
loope
jne
cmc
push
mov
push
lret
into
xchg
xchg
mov
mov
xchg
dec
pop
in
lock
push
sti
iret
aas
jp
stc
push
jmp
adc
mov
jns
dec
xor
cmp
ret
add
mov
xchg
push
cltd
sbb
enter
jae
add
out
pop
jne
dec
jmp
mov
leave
loop
or
mov
mov
and
dec
inc
add
fadds
adc
cli
mov
dec
mov
popa
jmp
push
aas
fdivl
mov
sbb
inc
inc
adc
out
dec
mov
mov
andb
jmp
arpl
add
cli
cmpb
cmp
roll
mov
lods
xchg
or
or
jl
rcrb
fwait
in
ror
repnz
js
mov
dec
inc
les
jge
add
addb
inc
add
pop
sub
mov
xor
fucom
or
std
sub
lock
sbb
and
in
push
push
push
outsl
es
nop
fs
dec
rol
mov
out
mov
or
test
xor
add
xchg
outsl
mov
sbb
cmpsl
adc
xchg
adc
sbb
in
mov
lret
add
adc
lods
je
mov
addr16
inc
scas
out
mov
dec
pusha
push
scas
adc
sbb
pushw
sbb
out
jo
fldl2t
in
push
aam
bound
arpl
jb
mov
mov
xor
mov
out
xchg
mov
je
push
mov
roll
jp
ss
leave
addr16
xchg
sub
rclb
sbb
popa
pandn
cmp
xor
andb
notb
fst
jl
dec
pushf
fstl
xor
jae
pop
pop
int
add
mov
pop
xor
and
push
data16
ret
jae
fimuls
pop
xchg
popa
xor
lods
push
jg
dec
je
mov
push
cli
dec
and
hlt
xor
inc
adc
ja
dec
negl
xlat
imul
ficompl
mov
mov
sbb
cmpsb
add
shrb
jl
xchg
mov
popf
sub
and
in
or
xor
sub
rclb
dec
adc
dec
data16
mov
sbb
and
and
xchg
push
xchg
sbb
adc
in
pop
lods
jge
test
pop
popa
push
sub
dec
in
stc
loope
ja
mov
ja
and
adc
in
xchg
add
mov
push
iret
pop
inc
js
mov
test
int3
lret
add
es
je
xchg
jg
push
adc
xchg
shlb
mov
out
adc
mov
test
imul
movsl
or
ret
mov
test
push
ficoms
test
xorb
icebp
cltd
sbbl
cmpsb
mov
jg
pop
add
sbb
mov
stc
mov
popa
notb
adc
sarb
push
outsl
ljmp
imul
mov
mov
jmp
ds
in
shrb
movsl
mov
in
test
sub
sub
lret
mov
push
jmp
lock
cmp
loope
test
inc
and
arpl
sbb
pop
xor
into
test
mov
mov
pop
and
popa
das
cmp
fildll
sbb
iret
jp
sub
pop
sbb
aas
jp
push
movsb
aam
dec
push
mov
mov
and
xor
sbb
pop
sub
adc
in
push
icebp
aam
push
xchg
and
mov
fcomps
pop
insb
test
sbb
hlt
push
lret
or
inc
addl
sbb
dec
add
hlt
pop
call
jns
cmp
pop
imul
aaa
cmp
xorb
mov
cmpsb
cmp
rcll
jg
dec
cli
push
dec
xor
push
mov
nop
jl
dec
sub
mov
cwtl
clc
push
fldln2
jmp
xor
inc
call
lret
mov
es
add
mov
mov
push
outsl
insb
out
push
shl
cmpsb
cmc
or
out
shrl
adcl
es
jl
jne
jmp
adc
inc
xchg
aad
xor
jno
popf
push
mov
addr16
jmp
cmpb
outsl
fidivrs
scas
or
in
dec
imul
and
fimull
aad
add
push
filds
and
std
sbb
jecxz
out
pop
cmp
adcb
pop
inc
in
jg
jl
lret
push
push
jp
mov
repz
lret
xor
xor
push
inc
insb
xor
lret
sbb
push
ret
cld
out
fdivrp
inc
fdivr
inc
mov
cmp
dec
pushl
jo
cltd
cld
jbe
stc
add
mov
push
stc
dec
push
les
aas
pop
insb
and
dec
fcompl
xchg
cmp
ror
pop
jp
xchg
jno
pop
cs
jmp
hlt
add
shrl
dec
insb
fiaddl
repnz
mov
ret
mov
std
and
fwait
aam
fdivrl
in
hlt
or
js
insb
push
sub
cmp
push
jno
test
jbe
lds
sbb
test
lret
push
mov
ja
stc
rcr
shl
xlat
and
pop
mov
leave
jb
fimull
fs
xchg
repnz
movsl
pop
fs
dec
repnz
inc
fstpt
push
mov
rcll
cmp
enter
mov
mov
sbb
mov
xor
into
aas
pop
cmp
and
push
jns
sub
xor
ja
push
rolb
arpl
xor
fwait
mov
and
shr
add
daa
inc
sbb
cmp
mov
push
ret
aaa
ficoml
pop
in
aad
sub
xor
lret
jb
push
and
shlb
jl
jno
pop
sbb
pop
mov
xlat
mov
sti
or
add
dec
adc
mov
loope
cmp
xchg
pop
out
xchg
test
pop
je
cwtl
inc
sbb
inc
push
mov
idivb
shrb
adc
xchg
sti
or
cld
addr16
sub
cmp
cmpsl
fsubrl
pop
imul
xchg
push
mov
dec
pop
jnp
and
xlat
sahf
inc
les
mov
sub
in
pop
int
movb
mov
pop
inc
loop
mov
add
popf
ljmp
jmp
jmp
push
inc
mov
mov
jb
mov
cli
xor
fwait
mov
mov
xor
push
sbb
adc
xor
lea
xchg
jmp
jns
mov
push
mov
nop
pop
or
sbb
fs
push
dec
shl
dec
adc
xchg
push
test
push
hlt
mov
test
xchg
out
movsl
jmp
test
mov
mov
push
outsb
aam
pusha
sub
pop
push
cmpsl
adc
add
mov
and
out
pop
outsl
cmpb
out
pop
stos
out
subl
mov
add
sub
jl
jae
dec
not
repnz
xchg
mov
test
push
arpl
out
cmp
sub
push
data16
jae
insb
jbe
cmp
es
and
dec
push
xchg
cltd
jge
push
mov
mov
mov
pop
movsb
into
in
rolb
mov
mov
scas
push
fs
adc
sbb
sbb
sbb
jbe
stos
pop
lods
cwtl
das
mov
mov
outsb
aas
mov
ss
cmpsl
decl
pusha
out
adc
and
jp
sbb
lods
push
dec
imul
aam
add
into
push
imul
stos
lds
or
nop
and
stc
fst
pop
lret
mov
mov
movsl
adc
fimuls
out
jbe
or
adc
and
int
in
lret
push
push
xlat
repz
fisttpll
shll
test
aad
cli
mov
mov
fs
shlb
jb
out
out
sub
imul
data16
int3
lock
fwait
sub
inc
xchg
js
cmp
or
sub
aaa
inc
pop
faddl
cmp
clc
addl
rorb
pop
inc
jl
xchg
jmp
jmp
es
aaa
and
inc
jecxz
dec
push
rclb
and
push
sarl
mov
rcrb
jne
sbb
arpl
and
sub
inc
mov
or
pop
xor
insl
sahf
push
insl
inc
pop
daa
aam
xor
pop
jg
push
pop
pop
lahf
leave
inc
xchg
lret
cmp
dec
test
cmpsl
int3
mov
popa
cmp
pop
adc
sub
dec
js
mov
fisttpll
hlt
pop
mov
push
testl
cmp
mov
mov
push
lods
xor
fucomp
and
int
loop
je
jnp
jb
mov
dec
mov
pop
fcoml
jno
dec
lea
fsubp
test
add
imul
and
mov
loopne
ljmp
out
cmp
int
notb
sub
jno
xchg
push
xchg
das
xchg
dec
pushf
out
fisttps
sbb
stc
push
adc
imul
jl
add
mov
xchg
cmp
leave
in
xor
mov
dec
out
outsl
inc
inc
popf
lret
mov
je
push
mov
fildl
jp
mov
outsl
sub
repnz
sahf
idivb
sub
sub
mov
push
cmp
pushf
loopne
mov
pushf
jmp
cmp
cmpsl
cmp
psllw
mov
rorl
or
push
cmp
mov
stc
rcr
scas
in
jl
push
repnz
and
mov
dec
shrb
inc
lock
cmp
cli
xor
sub
nop
pop
out
fcoms
mov
iret
mov
sahf
jg
lret
pop
cld
pop
arpl
sbbl
sarb
mov
test
inc
pop
pop
lcall
outsb
loopne
adcl
mov
cwtl
daa
sbb
notb
and
sub
filds
add
lcall
pop
inc
cltd
subl
mov
mov
or
mov
adc
sahf
mov
push
fpatan
xorb
and
add
sub
mov
mov
andl
mov
xor
inc
sub
jmp
out
dec
daa
test
cs
mov
push
out
mov
pop
cmp
ljmp
es
adc
or
jae
lock
clc
xor
xchg
inc
aam
push
xchg
mov
jecxz
pop
clc
add
lcall
daa
orb
xor
imul
cmp
out
stos
js
ret
mov
jno
pop
push
pop
test
dec
aam
data16
shrl
jns
fmuls
aad
out
add
inc
mov
std
jmp
cli
fs
in
testl
add
shrl
push
xchg
pop
nop
adc
rorl
mov
icebp
xor
mov
sub
and
xlat
test
rclb
sub
and
sbb
lock
jge
and
imul
mov
pop
aaa
xchg
jp
ficoms
inc
enter
push
pop
xchg
dec
xlat
mov
cmp
test
jmp
dec
adc
jns
xor
push
aam
dec
add
lret
mov
xorb
scas
cmp
shl
inc
sbbl
int
popf
shrb
mov
mov
sub
mov
stos
ret
cmp
bound
daa
clc
bnd
mov
sti
decl
lahf
or
sbb
aad
shll
iret
xchg
xchg
cld
insl
jbe
dec
ds
lea
int3
jecxz
xchg
mov
test
bound
test
repz
sbb
pop
pushf
push
dec
fcom
cli
stc
pop
mov
rcll
push
popa
xlat
hlt
mov
pushf
les
nop
xchg
aas
adc
insl
and
ret
cmp
jp
and
aam
dec
out
dec
push
rcll
xor
sbb
fimull
data16
sbb
inc
mov
imul
or
jbe
add
pop
insl
loop
paddd
loopne
or
push
lret
ret
pop
mov
pop
cli
push
je
push
xchg
idivb
and
or
int3
rcll
cs
jmp
xchg
jg
popf
stos
dec
or
sahf
sar
jbe
test
cltd
or
loopne
xchg
xlat
sti
jbe
lods
call
push
adc
out
loope
jo
mov
pop
icebp
cmpb
sbb
pop
jmp
mov
jg
cwtl
add
enter
inc
cmpsl
mov
test
fidivs
sbb
sub
xchg
add
repz
das
and
test
xor
dec
loop
nop
or
movsb
leave
sub
or
and
xor
sbb
int3
inc
cmp
ljmp
out
cmp
adc
pop
inc
orl
dec
mov
insl
push
shlb
dec
data16
aas
adc
sbb
pop
lea
sub
in
pusha
mov
gs
iret
nop
xchg
xor
out
lds
lahf
jo
jo
xor
jge
call
out
jmp
fisubs
test
push
scas
jnp
mov
fxch
fadd
loope
xchg
jl
and
pop
mov
in
call
loop
insl
enter
mov
pop
jp
clc
push
sbb
and
push
jne
mov
fwait
repz
bound
cmp
outsb
and
sub
adc
mov
in
sub
leave
sub
jg
sbb
repnz
cwtl
iret
in
mov
cmp
pop
sub
push
cwtl
xlat
jno
ds
icebp
hlt
enter
jb
sar
loopne
sbb
push
movsb
in
fdivrs
push
and
mov
negl
mov
leave
mov
push
add
add
xor
out
mov
mov
xchg
sti
test
pop
jecxz
in
in
or
lcall
lods
adc
gs
and
mov
xchg
mov
inc
xchg
push
loope
xchg
jmp
ljmp
xor
inc
pcmpeqd
xchg
add
xor
outsb
jo
inc
and
mov
lods
jp
inc
add
loope
xor
sahf
test
jb
or
loope
loope
popl
adc
mov
sarb
jae
aad
push
xchg
mov
ja
ds
in
push
lods
loop
ds
in
into
pop
adc
in
hlt
int3
das
and
imul
sub
xor
xchg
lcall
cmp
popf
mov
cli
je
xchg
mov
rclb
push
mov
movsl
cmp
and
repnz
inc
sbb
test
inc
dec
pop
xor
daa
push
inc
jge
into
push
mov
pushf
dec
jns
xchg
data16
push
sahf
jecxz
cs
xlat
adc
add
cmpsb
js
sti
cltd
repnz
pop
push
inc
hlt
repz
mov
mov
xchg
pushf
test
adcl
lret
jnp
cltd
jb
cmpsl
push
or
xchg
mov
mov
sub
lret
mov
fidivl
nop
jne
std
icebp
sub
insl
jecxz,pt
push
jne
popa
mov
repz
xchg
cs
ret
mov
pop
jae
push
icebp
daa
xor
out
ja
pop
mov
xchg
test
in
jecxz
and
gs
in
push
pop
adc
xor
dec
lret
movsl
aad
sbbb
faddp
jo
jnp
mov
jl
mov
jle
lods
cmp
daa
jo
push
or
jno
push
adc
mov
movsl
fldcw
test
jnp,pn
icebp
xor
adc
out
push
cmp
add
stos
push
mov
mov
jl
cmc
adc
cld
mov
out
jge
out
ljmp
xor
addr16
flds
mov
das
push
arpl
mov
cmp
xlat
xor
push
xor
ret
inc
jp
aaa
xor
inc
mov
jge
pop
jns
ljmp
cmpsl
jnp
sarb
sub
aaa
inc
repnz
push
mov
mov
in
mov
mov
jns
pop
and
repnz
icebp
imul
jo
pop
mov
jmp
lret
or
stos
pop
sbbl
mov
imul
mov
out
lods
shl
or
jb
adc
call
aas
mov
or
cmp
mov
pop
scas
push
pop
cmc
mov
fwait
movsl
out
mov
subb
mov
ret
xor
pusha
xlat
outsb
dec
and
insl
jl
adc
cltd
add
test
jg
jae
stos
outsl
fimuls
cmp
add
ja
mov
scas
mov
loop
mov
scas
sub
dec
decl
dec
adc
adc
sub
lock
imul
mull
fstps
lock
push
jl
jno
dec
add
sar
lock
incl
cli
jns
add
ds
fistpll
dec
cltd
aam
loope
mov
xor
fbstp
jae
dec
sub
rorb
jle
mov
sahf
inc
and
mov
test
ja
bswap
imul
dec
test
test
inc
clc
mov
stos
mov
push
call
sub
mov
push
ljmp
inc
mov
fldpi
jge
mov
dec
mov
push
adc
mov
sbb
mov
lock
jl
lret
jno
shll
xor
jb
loop
aam
jle
lcall
adc
sbb
xlat
fidivrs
scas
mov
movsl
mov
fs
cmp
add
inc
imul
jns
ret
mov
inc
pop
mov
outsl
add
xchg
imul
mov
jg
jns
shlb
rcr
mov
jae
enter
les
jl
repz
dec
push
inc
shr
iret
cmp
test
cwtl
js
or
xor
fdivp
push
inc
shlb
test
push
push
or
xchg
out
leave
sub
out
outsl
sub
jbe
push
js
push
loope
or
xchg
mov
xor
mov
hlt
hlt
push
sbb
in
xor
push
in
and
andb
aam
popf
mov
xor
daa
mov
jmp
test
shll
int
jno
push
rclb
xor
inc
push
mov
outsl
fwait
adc
mov
cs
fistpl
mov
or
mov
aam
pop
movsb
out
pop
lcall
cltd
mov
clc
jb
sub
sti
adc
lret
lds
fimuls
cmp
sti
lcall
mov
or
je
dec
mov
daa
jl
mov
shrl
mov
popa
ja
xor
xchg
fs
pop
pop
or
pop
pop
xor
and
cmp
in
inc
mov
repnz
inc
jo
ss
xor
mov
imul
movsb
push
fdivrs
fidivrs
mov
pop
xchg
sti
sbb
add
shlb
in
out
popa
mov
inc
in
mov
js
and
sti
inc
xchg
cmc
push
add
outsb
hlt
and
je
mov
push
push
inc
in
popf
jno
pop
cli
scas
sahf
jecxz
push
aam
sub
xor
mov
sahf
adc
mov
or
add
sbb
packsswb
rcl
loopne
repnz
cmp
outsl
sub
iret
cmpb
jmp
sub
inc
popa
push
inc
out
and
popa
out
out
ljmp
or
mov
and
lock
sahf
and
aad
add
or
jnp
cmp
push
call
mov
sbb
sub
and
mov
movsb
in
sahf
cmp
xchg
cltd
lods
xchg
fstpl
push
mov
ret
push
scas
pop
pop
mov
xchg
mov
sbbl
mov
idivl
xlat
int
inc
es
cmp
stos
mov
push
jmp
xor
cs
jmp
inc
jg
out
ret
fstl
lea
loope
and
push
xchg
mov
je
mov
mov
imul
pop
adc
xor
xchg
mov
ss
sbb
sub
lea
push
pusha
xor
xchg
sub
hlt
mov
popf
xchg
adc
jle
cmp
adc
aaa
scas
insl
out
sti
xor
outsb
mov
sub
in
mov
movsb
adc
xor
cld
dec
add
les
inc
or
sub
lods
jmp
dec
std
mov
cmp
xchg
stc
add
cmc
pop
cmp
sbb
inc
or
push
sbb
and
jns
and
std
clc
xor
pop
nop
sbb
add
sbb
rcrl
cmp
insb
dec
inc
insl
dec
jno
out
ds
jmp
inc
test
or
sbb
and
scas
hlt
cltd
pop
push
sti
and
stos
ret
and
push
dec
mov
jns
mov
pop
icebp
xor
mov
adc
loop
mov
jge
jno
fstpl
push
push
cmc
push
xor
adc
sahf
cmc
ret
mov
addl
aad
mov
rcrb
sub
js
cli
div
dec
je
jne
scas
adc
hlt
aam
aaa
inc
mov
dec
sti
js
push
fldcw
stos
and
dec
mov
cwtl
cmpsl
add
sub
dec
shll
stc
push
xor
aas
push
xor
xchg
hlt
lods
xchg
es
ljmp
fisubs
xchg
nop
or
xor
mov
mov
pop
mov
adc
lret
push
mov
xor
xlat
mov
mov
mov
cmpsl
or
mov
pop
lds
push
repnz
aam
sarl
negb
mov
fiaddl
ja
loop
fimuls
fcom
movsb
nop
xchg
jl
int
mov
cmp
jae
mov
movsb
testb
paddsb
outsl
push
cmp
mov
push
jo
jno
mov
push
mov
in
outsl
sahf
mov
pop
rorb
inc
xchg
fwait
adc
addr16
inc
je
data16
clc
xor
mov
dec
dec
lretw
lahf
pop
and
cmpsw
sahf
push
jno
mov
and
dec
mov
enter
rolb
jne
bound
and
add
mov
adc
test
mov
in
lret
int3
pop
dec
cmpsb
pushf
clc
jb
ficoms
mov
movsl
inc
pop
sub
xchg
pop
lods
stos
pop
repnz
add
jo
dec
out
rep
es
or
push
jno
mov
pop
cmp
pop
mov
xchg
test
cli
mov
stos
adc
jae
in
xchg
adc
xor
enter
add
mov
mov
sub
push
push
insb
sub
stos
cmpsb
jg
jp
sti
mov
mov
out
inc
fbld
imul
fsubrl
mov
adc
daa
and
mov
rcr
cmp
lcall
pusha
out
aas
push
mov
jo
sbbl
arpl
sarl
movsl
cmpb
aam
jg
or
xchg
add
jbe
pop
mov
add
loopne
mov
fnstenv
ljmp
iret
scas
jg
add
or
mov
outsb
sbb
push
cmc
and
cmp
mov
jne
push
push
call
mov
or
in
push
outsl
dec
xchg
or
notb
mov
inc
dec
pusha
ret
mov
pavgw
or
mov
sti
clc
cmp
daa
pushaw
ljmp
movsb
fdivrl
push
icebp
hlt
jl
fisubrs
mov
fstps
fdivs
imul
or
xor
imul
test
das
shlb
neg
clc
jmp
cltd
imul
cmpsl
movsl
sub
jno
push
les
and
dec
adc
out
data16
cmc
ret
cltd
xchg
adcl
dec
push
outsl
movsl
adc
pop
std
sahf
sbb
mov
mov
add
or
shlb
dec
fistl
sbbl
mov
int
dec
lret
test
jp
xor
dec
repz
popa
jmp
mov
divb
pop
out
xor
push
xchg
lret
adc
inc
adc
xor
add
insl
jb
hlt
mov
adc
dec
mov
idivb
xchg
aad
out
xor
je
pushf
push
cltd
and
cmpsl
push
and
test
test
xchg
sub
and
mov
or
das
pop
divb
pop
xchg
or
cmp
xor
adc
fdecstp
subb
es
mov
push
aaa
addr16
xor
enter
pop
push
nop
xor
nop
adc
pop
fisttpll
add
lds
jo
lcall
push
loope
and
rorb
or
idiv
stos
pushf
adc
and
xor
dec
popa
test
and
dec
mov
mov
cld
or
cmp
lods
movsl
inc
daa
cmp
sub
mov
in
pop
or
leave
btc
mov
push
fcompl
push
mov
ficompl
lret
ficompl
adc
pop
lea
sbb
mov
loopne
pop
lahf
pop
imul
inc
add
sub
sub
jae
lahf
jns
rcrl
and
cltd
std
mov
dec
mov
jl
xchg
sti
mov
mov
pop
enter
adc
xlat
cmpsl
mov
adc
test
mov
xor
in
rcll
inc
jno
xchg
add
lret
jge
mov
add
adc
xchg
cmpsl
stc
repnz
mov
mov
mov
jge
dec
mov
mov
xchg
orl
lret
jno
pop
pop
mov
stos
in
mov
das
cmp
mov
scas
jg
dec
aas
fldenv
mov
imul
test
adc
leave
std
out
pop
outsl
jl
mov
mov
loopne
mov
push
sub
and
inc
mov
add
jbe
shll
aaa
aas
into
in
pop
jo
push
cmc
xor
ljmp
daa
and
add
xchg
fnstsw
js
add
shrb
adc
inc
adc
push
inc
sbb
mov
add
push
push
inc
repnz
fwait
cli
pop
lods
add
and
dec
cltd
mov
pop
mov
mov
and
mov
add
div
fistpll
cmp
sbb
addr16
jbe
jbe
sbb
lcall
inc
jg
lcall
push
inc
les
xor
filds
jo
lock
popl
push
arpl
and
push
ficomps
jne
xor
in
mov
test
lds
ss
xchg
movsb
sbb
je
test
sar
jl
sahf
dec
int
js
movsl
int
loopne
lock
pop
cltd
push
iret
bound
out
xor
jg
pop
repnz
jo
iret
subb
push
mov
xchg
or
push
adc
insb
cli
fs
pop
shr
or
fsubrl
and
loopne
push
leave
dec
in
in
fcompl
cmp
stos
arpl
ret
xor
les
outsb
pop
fwait
xchg
inc
inc
xlat
mov
enter
movsl
pop
xchg
xlat
icebp
clc
cmp
enter
cwtl
or
dec
or
jnp
jmp
roll
out
fwait
dec
nop
lahf
std
lods
or
pop
adc
out
lahf
pop
scas
insb
xchg
and
add
movsl
sub
mov
movsl
mov
scas
imul
outsb
jbe
and
sbb
jne
out
cmp
call
stos
adc
add
lret
lea
adc
push
movsb
cmp
insl
outsb
fcmovnbe
test
push
mov
xchg
mov
movsl
fdivp
dec
mov
sbb
mov
dec
lock
popf
dec
fwait
in
push
jo
daa
jbe
cmp
das
popf
sbb
cmp
xor
ss
xor
mov
adc
dec
pop
sbb
mov
xchg
out
xlat
shrb
dec
ret
push
out
fwait
inc
xchg
out
add
pop
cltd
repnz
mov
lods
imul
ljmp
dec
js
adc
and
sbb
shll
lcall
xchg
daa
mov
lcall
sbb
test
cmc
clc
in
loopne
dec
mov
push
adcl
adcl
cmpsb
jno
cmp
jl
jge
enter
pop
sbb
lret
arpl
ret
clc
dec
stos
fistps
pop
hlt
imul
mov
mov
dec
lods
inc
jo
xorl
aas
or
repz
lahf
adc
stc
push
sbb
push
mov
mov
add
test
or
test
insl
lds
mov
pop
in
push
mov
data16
and
pop
enter
push
addr16
inc
and
ror
ja
mov
or
xor
push
or
aas
sbb
inc
mov
in
lahf
fsts
int3
push
push
push
fimull
out
out
out
mov
lods
push
xchg
adc
mov
pop
pop
mov
jmp
pop
test
mov
xor
inc
ja
xchg
mov
or
jecxz
out
mov
gs
push
jns
sub
xor
mov
inc
cmp
push
mov
lahf
cmp
jae
xchg
iret
ja
insl
pushf
pop
mov
insb
cli
in
lods
out
cltd
jae
bnd
sbb
fcoml
std
sub
call
mov
test
imul
dec
adc
inc
push
adc
pop
gs
pop
sub
cmp
inc
addr16
psrlq
mov
outsb
sub
pop
jno
dec
adc
adc
mov
call
pop
pmaxub
push
sbb
inc
xlat
sub
fldcw
in
xor
outsb
inc
push
es
testb
ljmp
out
stos
inc
pop
sub
pop
pop
lcall
push
dec
pop
icebp
lds
sub
sbb
icebp
imull
add
xor
or
das
enter
popa
xor
dec
lods
sbb
addr16
lds
cmp
bound
xorb
lods
imul
jl
mov
rcrl
pop
jge
push
xorb
les
insb
stc
adcl
cs
fnsave
loopne
aaa
test
mov
dec
pop
push
sbbl
popf
jno
mov
arpl
sbb
mov
fnstcw
andb
or
pop
sbb
push
or
inc
sahf
xor
cmovg
mov
pop
push
push
lods
in
and
loope
inc
test
jge
loope
xor
imul
jbe
in
fisubrl
push
mov
cmp
inc
jecxz
pop
lock
jp
and
or
push
jmp
imul
dec
jns
cmpsl
sbb
cmp
push
push
lahf
or
out
push
adc
sbb
adc
mov
sti
fnsave
cmp
pop
jb
test
add
xor
push
sbb
or
clc
sub
adc
mov
es
in
xchg
dec
in
adc
aas
or
jmp
sbb
hlt
adc
and
jo
or
hlt
rcrl
sbb
cs
jecxz
mov
jae
mov
cmp
adc
rolb
push
insb
stc
je
cmp
ds
push
mov
int3
icebp
mov
out
sub
and
cmp
addr16
and
jl
push
xor
pop
idivb
mov
jno
mov
jl
dec
jb
xchg
jge
xor
inc
or
ds
insb
mov
mov
xchg
or
fidivrs
mov
add
xlat
gs
stos
outsl
pusha
jmp
jmp
push
rcl
lret
xor
cmpsb
bound
push
stc
sub
or
in
and
mov
das
xor
add
cltd
insl
inc
cmp
adc
inc
enter
fistpll
mov
and
sub
pop
xchg
sbb
adc
cmp
dec
adc
rol
mov
jp
mov
xchg
add
imul
arpl
mov
fldcw
jb
dec
mov
in
ret
jb
xchg
ljmp
inc
inc
pop
sub
test
and
in
mov
adc
mov
insl
lret
in
leave
push
clc
or
addr16
adc
cmpl
stc
int
cltd
sub
jge
pop
pop
fdivrs
enter
mov
mov
movsl
lock
mov
xor
cmp
mov
mov
test
xchg
insl
aad
mov
outsl
dec
jg
fwait
lock
inc
sub
add
mov
cli
je
outsb
dec
xchg
in
fldt
bound
push
popf
add
xor
test
test
int3
lds
or
ficompl
pop
sbb
mov
mov
mov
int
fists
ds
or
aas
pop
sub
stos
cwtl
mov
and
test
xlat
repz
pop
and
mov
insl
fstl
inc
mov
pop
sub
dec
jmp
test
test
xor
gs
std
xor
cmp
xchg
sahf
insb
out
sbb
xlat
pop
mov
xorb
xchg
jnp
insb
movsl
stc
cmp
loope
lahf
fisubrs
xchg
dec
dec
mov
pop
insl
sub
leave
fisubs
sarb
xchg
pushf
xchg
dec
add
es
addr16
aas
pop
pop
pusha
mov
les
xor
push
cwtl
hlt
xchg
mov
out
loopne
fwait
pusha
test
cld
mov
leave
hlt
daa
push
notb
call
sbb
aam
pushl
xchg
repnz
loopne
pop
addb
shlb
in
push
cwtl
pop
hlt
ljmp
mov
cmc
icebp
adc
inc
mov
and
addr16
jle
loope
dec
out
pop
inc
cmp
jns
and
xchg
mov
cmp
mov
rorl
leave
mov
int3
std
insl
fnstenv
cld
dec
jnp
popf
inc
push
and
sub
push
xor
outsl
sub
cld
push
fcmovb
jb
in
or
sub
push
or
adc
jle
lret
lods
sub
xor
leave
scas
push
mov
or
int
inc
mov
shrl
xchg
fucomi
fs
mov
jge
lea
icebp
xchg
inc
fdivrl
jns
mov
mov
loope
clc
lods
jnp
lods
icebp
pop
sbb
mov
mov
xchg
xchg
roll
pop
sub
andb
icebp
push
and
inc
aas
fnstcw
cmpsb
mov
mov
or
aad
push
pop
rclb
les
mov
popa
pop
mov
fiadds
or
mov
push
dec
xchg
push
imul
fadd
or
fcmovnb
pop
loopne
add
adc
sbb
and
out
jb
pop
dec
rcrl
mov
xor
mov
push
and
cmp
aas
inc
mov
les
cmp
in
and
sub
pop
jmp
mov
mov
lods
xor
adc
adc
sbb
pop
shll
in
std
mov
cmp
jno
insb
adc
jo
mov
in
mov
imulb
rcrb
add
int3
ret
inc
mov
pop
fucomi
aam
loop
mov
mov
pop
outsb
pop
scas
jecxz
int3
xchg
mov
mov
mov
mov
out
idivb
push
sbb
rclb
or
movsb
lods
xchg
decl
aad
hlt
rol
loopne
and
xchg
sub
daa
cs
xor
movsl
pop
mov
mov
in
sbb
jp
cmp
mov
jne
xor
std
in
or
test
sbb
pushf
mov
repz
dec
pop
or
pop
addl
mov
mov
in
cmpsl
rcrl
test
movsb
sbb
or
mov
xor
pop
rcrb
xor
ja
cltd
mov
push
cmp
into
and
outsb
aas
dec
jge
adc
and
mov
push
or
push
or
pop
scas
aaa
xor
movsl
shrb
jnp
mov
out
stc
jl
adc
xchg
rcrl
jno
dec
jge
fmull
inc
sub
jae
stc
je
push
nop
test
push
pop
or
pop
xlat
xlat
mov
cmp
or
xchg
ds
mov
cmp
xchg
orb
dec
xchg
jp
mov
clc
cs
in
mov
dec
test
aas
aam
outsb
mov
filds
xor
mov
movsl
repnz
rorb
sbb
aaa
push
mov
es
mov
jo
popl
notl
aaa
xchg
test
or
mov
fnstcw
pop
jl
les
add
adc
mov
nop
sub
sub
repnz
inc
mov
lock
lret
test
fs
insl
sbb
stos
inc
lea
fimuls
cwtl
rcrb
andl
ja
repnz
sarb
mov
nop
jo
enter
es
call
push
ds
cld
mov
fs
sbb
aam
dec
int3
scas
hlt
push
movsb
fs
ret
lcall
push
repz
sarb
jne
imul
shlb
es
aas
cmpsb
inc
inc
or
jae
sbb
out
lcall
and
daa
and
fwait
xor
mov
pushf
push
cld
lret
add
loopne
xor
adc
adc
inc
jbe
cli
stos
pop
mov
enter
pop
xchg
je
movsl
call
add
sbb
loope
mov
xchg
xchg
loopne
loopne
sahf
jbe
sub
dec
dec
mov
popf
icebp
jge
mov
xor
mov
push
push
repnz
repnz
mov
cltd
mov
add
lds
or
mov
rclb
lret
in
cli
mov
inc
push
data16
addr16
xchg
adc
iret
fcoml
cmp
inc
aas
ds
adc
mov
dec
sub
movsb
bound
fisubrl
lahf
sahf
pop
lcall
and
add
mov
movsl
cmpsb
shlb
shlb
ss
mov
inc
inc
iret
adc
cwtl
mov
std
daa
adc
jecxz
out
or
jo
push
add
pop
out
dec
or
lea
ss
iret
cmp
jb
cs
inc
in
stos
in
pop
xchg
sub
sub
push
push
push
xchg
call
sub
data16
bound
push
bound
add
dec
cmp
adcb
enter
inc
adc
jecxz
xor
sub
test
mov
cli
cmp
cmp
out
cmp
data16
loopne
xchg
cmpsb
leave
adc
xchg
roll
push
mov
push
sbb
leave
cli
fs
mov
aaa
mov
jg
jmp
imul
sbb
out
ret
out
and
or
leave
jmp
roll
mov
add
jl
mov
sub
inc
cmp
es
inc
or
scas
mov
test
sub
jp
jg
in
sbb
insb
out
fidivl
pop
jle
push
pop
ret
repz
shlb
pop
repnz
push
outsl
insb
loop
sub
push
daa
shll
xor
push
and
ss
test
stc
scas
mov
leave
push
pop
add
xor
divb
jae
mov
mov
outsl
lahf
cmp
and
scas
fstps
movsl
jle
jmp
push
add
sub
test
mov
movb
xor
adc
aam
add
mov
push
sbb
rol
aam
outsb
jp
mov
vpshufhw
ljmp
push
ficoms
or
test
mov
fidivrs
jl
lret
dec
enter
scas
stos
jmp
call
lock
or
add
shlb
push
mov
lods
xchg
and
cwtl
adc
sbb
sbb
js
jbe
lcall
xchg
dec
andl
cwtl
mov
and
push
insb
and
xlat
je
mov
jp
clc
ljmp
sbb
les
pop
test
shl
and
mov
or
ffree
adc
push
ja
outsb
lea
mov
pop
mov
inc
sti
aam
jno
fucomi
push
int
cmp
mov
iret
cmp
into
jmp
add
and
pushf
xlat
jb
repnz
sahf
dec
adc
add
xor
fildll
pop
push
adc
mov
sbb
mov
aaa
imulb
sub
imul
enter
dec
clc
rolb
lahf
stos
mov
jae
mov
jmp
cmpsl
cli
clc
cmpsl
xor
int
dec
push
or
add
lods
stos
adc
mov
mov
add
xchg
mov
pop
cmc
rorl
fwait
cmp
inc
pop
push
sbb
ss
jno
inc
test
cld
cmc
mov
and
sbb
xchg
sbb
cmp
pop
loopne
mov
pusha
pop
int
ljmp
push
fnstsw
popf
dec
sbb
mov
popf
popf
push
xchg
add
in
lret
inc
subl
cli
and
adc
inc
xchg
sahf
fcoms
add
stos
adcb
in
pop
jbe
popa
mov
push
stc
adc
cltd
mov
inc
pop
and
shrb
repnz
movsl
cwtl
orl
and
adc
outsl
sub
and
adc
enter
fst
aas
loop
movq
mov
test
mov
mov
pop
cmp
pusha
outsb
xchg
push
fistpl
push
out
fwait
scas
adc
mov
pop
or
mov
cltd
dec
mov
ror
nop
loope
fldcw
cltd
mov
add
sub
out
ret
push
sub
fadd
jmp
in
loope
or
push
jb
mov
cmpsb
sahf
or
imul
sbb
mov
pop
sub
dec
and
insl
jmp
aam
mov
leave
mov
jb
lods
popa
stc
push
mov
lods
xchg
pop
mov
repz
pcmpgtb
clc
and
mov
cmp
add
cli
jno
int
enter
roll
loope
incl
enter
mov
jno
scas
xchg
mov
or
fdiv
inc
sbb
xchg
lret
jmp
js
jp
xor
gs
cmpsb
fidivl
push
test
mov
jo
int
jno
and
insb
sbb
or
lahf
jecxz
lahf
int3
mov
add
lret
fsub
std
clc
imul
test
dec
mov
mov
and
pop
mov
je
dec
sub
xchg
mov
dec
fistl
mov
mov
inc
mul
lods
inc
subl
nop
xor
cmpsl
imul
mov
rcrl
push
pop
or
jmp
push
and
xor
jbe
jns
jne
xor
inc
sarl
cltd
inc
sub
mov
xor
jb
jno
ret
ljmp
xchg
scas
dec
jge
jnp
pop
push
jp
pushl
test
mov
in
pop
and
lahf
movsl
inc
add
out
cmp
dec
cs
std
mov
xor
cmp
repz
adc
add
xor
cs
fsubrl
cmp
les
jle
fwait
inc
xor
std
or
cmpsb
add
sti
push
out
mov
imul
jae
cmp
pop
xchg
dec
cmp
xchg
inc
push
pushf
cmp
dec
cmp
pop
cmp
xor
in
xchg
aam
scas
pop
cmpsb
xor
sub
mov
and
in
cmpl
adc
icebp
dec
adc
mov
pop
andl
test
into
clc
jns
jp
fbstp
aam
sub
pop
adc
adc
icebp
stos
xor
jmp
fimull
insb
jmp
mov
loopne
mov
mov
fsubrl
jg
xor
push
xor
or
notb
xchg
aad
or
or
mov
xchg
aad
mov
cmp
dec
lods
fdivs
mov
scas
add
push
push
jo
mov
out
xor
or
xchg
jo
es
xchg
dec
cmp
rorl
pop
es
mov
aaa
popf
cmp
adc
xor
out
bnd
jo
test
aaa
jno
and
cwtl
and
and
inc
jle
rorl
xchg
ret
out
enter
cs
mov
xchg
scas
movsb
push
xor
pop
in
adc
adc
or
fadds
mov
inc
cli
je
repz
stos
xchg
sub
das
lods
pop
jp
test
adc
sub
push
mov
shufps
stc
xor
cli
jmp
jbe
push
cs
loopne
lds
xchg
inc
add
je
pop
adc
push
dec
lret
rclb
ljmp
mov
jbe
push
xchg
or
cld
jno
and
sub
imul
insl
adc
inc
mov
ret
scas
pop
out
jne
rcrb
cld
mov
cmp
int
sbb
cmp
das
mov
fsubrs
push
xor
pop
lods
adc
pop
xor
shrl
sbb
not
nop
fstps
or
jg
pop
sbb
cltd
aaa
outsl
stc
shl
fsts
cld
pop
sbb
mov
xor
push
enter
mov
add
xlat
mov
pushf
mov
pop
inc
sti
mov
push
or
xchg
mov
xchg
fimuls
adcl
outsl
rorb
jmp
rclb
cmp
push
lret
test
jnp
mov
out
mov
pusha
iret
shll
cmp
mov
jge
xchg
loopew
add
lods
loopne
inc
dec
mov
fs
scas
int
jp
fildll
pop
icebp
mov
add
js
adcb
mov
aad
cmpsb
mov
out
js,pn
out
pop
popa
std
sub
movsl
js
popa
ret
and
pop
sbb
cmp
clc
in
not
jne
and
js
bound
mov
iret
pop
jmp
xorl
andb
add
ja
push
test
pop
push
mov
fistpll
imulb
lods
notb
stc
mov
imul
leave
jnp
push
add
push
mov
in
int3
repz
jnp
fwait
mov
xor
inc
cmpsb
add
imul
push
lods
test
pusha
lods
daa
mov
loopne
test
dec
pop
lock
lods
jecxz
and
jno
js
in
mov
gs
pop
adcb
repnz
inc
and
pop
repz
add
xchg
hlt
hlt
inc
push
mov
addr16
dec
scas
add
hlt
mov
and
test
cli
fdivrl
stos
and
pop
popf
daa
cli
jno
fistpll
aam
xor
push
in
adc
cmp
cwtl
lds
dec
dec
aaa
push
in
sbb
out
in
xchg
out
test
pop
push
inc
ds
mov
stos
add
fs
push
pop
mov
fnop
sbb
shl
inc
jmp
xor
dec
mov
call
les
sbb
outsb
xchg
cmp
adc
cmc
enter
cs
popf
inc
or
or
test
loopne
sarb
adc
cmc
push
pop
mov
dec
rorl
mov
mov
incl
cmpsl
cmp
rolb
sub
sbb
fadds
stos
rolb
inc
dec
pop
cmpsb
out
sub
cld
jb
mov
push
xor
jl
xchg
arpl
cmpsl
mov
insb
in
xchg
roll
xorb
sarl
mov
xlat
fwait
mov
mov
jbe
jb
into
insb
sbb
leave
sbb
mov
rorb
pop
push
dec
out
mov
sbb
fs
addr16
cmp
sbb
cli
dec
stc
sbb
cmc
fistl
push
fnstsw
repnz
add
mov
sub
mov
mov
dec
jb
xchg
mov
mov
dec
mov
mov
push
js
mov
mov
inc
ss
es
jmp
xor
push
xor
xor
aad
aad
sub
fisttps
jbe
and
and
sahf
sbb
lret
mov
rcrl
lcall
mov
push
mov
lods
push
push
add
jge
outsl
in
scas
cs
loopne
jg
and
pop
jb
cs
push
outsl
subl
mull
pop
call
sub
inc
inc
clc
loop
push
mov
arpl
jb
and
daa
lret
adc
icebp
push
xchg
or
jp
xchg
rcrb
mov
out
in
lods
loopne
push
lock
daa
and
lret
cmp
ja
dec
or
inc
pop
jle
jno
aad
sti
fsubrl
in
cmp
pusha
or
push
sbb
adc
and
pop
mov
cwtl
cli
out
mov
jns
test
sub
adc
repz
leave
or
dec
pop
adc
push
sbb
pop
int3
cmpsl
jae
xchg
xchg
lods
pop
push
jge
xlat
in
negb
arpl
fcmovb
fstl
cltd
or
arpl
jle
mov
or
imul
aad
adc
cld
cltd
in
jns
pop
jo
adc
cmp
xchg
jle
and
cmp
pop
or
ror
fadds
adc
adc
pusha
scas
cwtl
dec
sahf
sbb
xlat
push
les
cmp
jbe
mov
mov
add
adcl
mov
loope
xchg
xchg
inc
subb
jb
mull
addl
nop
and
test
repz
jno
loopne
sarl
xchg
jno
scas
bound
ret
daa
lahf
or
adc
xorl
addl
icebp
sbb
loop
pusha
stos
push
lds
lds
push
mov
jmp
and
outsb
mov
sbb
or
pop
or
outsb
push
jle
dec
or
lcall
test
inc
lea
lret
loopne
cmpsl
xor
xor
stos
cwtl
xor
insl
cli
arpl
and
sti
mov
out
jnp
call
mov
cmp
je
rcrl
sub
pusha
xor
sbbl
xor
mov
aad
jmp
mov
jle
xchg
into
pop
sbb
jne
cmp
cltd
mov
xor
lea
cmp
stos
jge
mov
bound
push
ret
stc
mov
dec
pop
pusha
mov
pop
pushf
stc
std
pop
xchg
push
cmp
dec
je
movsl
out
jg
dec
mov
mov
std
pop
xor
stos
clc
jae
sub
rcrb
fsubl
scas
scas
daa
call
ror
sub
lea
pop
gs
xchg
cld
push
jno
in
sti
xchg
push
jb
or
test
xchg
test
add
iret
add
add
jb
cmpsb
shll
push
mov
in
xor
inc
iret
dec
and
pop
mov
sbb
add
je
shll
rorb
cmc
adc
push
rorb
loop
pop
or
inc
je
in
push
add
call
fwait
icebp
shrl
sbb
cmpsb
cltd
pop
sbb
mov
movsb
bound
fs
cwtl
loopne
repz
or
push
inc
sahf
or
pop
inc
in
or
pop
and
mov
sbb
pop
sbb
jbe
mov
js
stos
out
adc
cmp
cmpsb
in
mov
mov
dec
mov
je
or
loopne
ja
pop
add
in
popl
mov
adc
mov
sbb
loop
jbe
icebp
cmpsl
orl
loop
bound
stos
sahf
add
push
dec
out
xchg
or
movb
into
add
cmc
dec
sub
pop
sbbl
jmp
fidivl
mov
in
dec
xor
mov
int
and
sub
fsubrl
fwait
mov
mov
pushf
stos
mov
inc
jne
rolb
leave
outsb
lcall
test
adc
pop
in
pop
push
arpl
aaa
jns
test
jb
xchg
mov
nop
cld
dec
push
ds
out
push
and
ja
leave
sbb
popa
add
int3
pop
hlt
pop
sbb
out
mov
xchg
mov
ret
xchg
stc
int3
dec
add
jno
out
enter
mov
lret
icebp
cmpsb
push
rclb
rcr
xorl
mov
lcall
cmpsb
rcrl
sbb
pop
push
lock
outsl
pop
pop
sahf
shl
dec
push
sub
mov
popf
pop
cmpb
xchg
and
das
xorl
mov
shrb
mov
push
xlat
imul
push
sub
nop
shlb
xchg
or
pop
lret
lods
mov
pop
xchg
xchg
in
add
mov
cmc
pop
and
repnz
imul
std
inc
cmc
mov
js
pop
jo
ss
lods
mov
out
and
daa
add
push
mov
sbb
and
jmp
pop
pop
sbbb
mov
aas
xlat
xchg
jp
outsl
pusha
shrl
xchg
push
in
mov
mov
fs
lods
adc
imul
inc
ss
lods
repnz
movsb
lahf
mov
inc
cmp
insb
mov
push
addr16
or
cmp
mov
jp
xchg
push
dec
aaa
sub
in
gs
xchg
arpl
jecxz
xchg
popa
aaa
push
push
pop
mov
inc
scas
cmp
imul
xchg
in
repnz
lcall
fildl
daa
pop
cmp
xchg
hlt
jae
loope
mov
loope
iret
orb
lods
test
push
jae
fidivl
push
xchg
aaa
test
mov
test
into
mov
stc
mov
in
dec
pushf
cmp
icebp
push
mov
das
mov
insb
or
xchg
lret
cmp
xor
jge
daa
stos
mov
fiaddl
pop
mov
fbstp
call
mov
cli
jp
pushf
pop
pushf
xlat
or
sub
mov
popaw
push
mov
scas
adc
int
mov
push
mov
addb
or
lret
mov
push
dec
adc
push
mov
je
loopne
and
fisubrl
jl
and
dec
hlt
mov
int3
jle
xchg
adc
push
icebp
decb
lea
add
fisttps
dec
loop
adc
lock
xchg
je
mov
test
sbb
pop
mov
adc
pop
mov
xlat
cli
pop
outsb
pop
mov
mov
fwait
cmpsb
dec
lret
sarl
sub
mov
jge
pop
xchg
or
inc
test
notb
sbb
cmp
xchg
inc
mov
mov
pop
stc
xchg
ss
ja
and
add
pop
cmpsb
push
stos
jns
lea
xchg
popl
fstl
aaa
es
sbb
movsl
leave
jo
push
lods
test
mov
xor
aam
sbb
mov
xor
rcr
stos
mov
sbb
add
test
loope
add
inc
mov
mov
lods
pop
lods
fwait
lds
adc
je
outsl
and
jle
jnp
sahf
xor
cmc
fs
mov
or
clc
dec
mov
add
repnz
scas
sbb
insb
call
mov
enter
adc
test
imul
cmc
pop
lea
push
lds
mov
xchg
mov
push
cmp
mov
push
cmpsl
sti
pop
out
pop
cmp
xor
dec
lcall
lcall
jl
xchg
fistpll
aas
test
jne
nop
mov
hlt
mov
pop
out
out
sbb
mov
xchg
scas
push
enter
shlb
popf
inc
push
mov
aad
mov
mov
cs
inc
and
orb
push
add
fcomps
xchg
inc
js
stos
fwait
pop
out
ljmp
scas
jne
xchg
in
xchg
cmp
mov
mov
fidivrl
dec
dec
mov
or
aam
ds
cwtl
mov
push
push
and
mov
or
lcall
loopne
pushf
sub
icebp
loopne
dec
inc
jbe
bound
pop
pop
lods
test
daa
cmp
inc
sbb
in
dec
jp
or
test
mov
or
jno
roll
icebp
hlt
shrb
sbb
xor
add
pushl
call
lahf
scas
xsaves
mov
jmp
outsl
movsl
sbbb
adcb
cmpsb
je
cmp
mov
and
cmpsb
push
test
mov
adc
cwtl
scas
mov
mov
fcoml
jge
or
mov
jge
inc
sbb
scas
xor
push
add
pop
loope
out
std
mov
fnstenv
or
mov
xor
adc
into
shll
rcrl
stos
mov
test
aaa
jg
lcall
fwait
jns
out
cmp
dec
mov
push
in
clc
push
mov
jnp
jl
mov
pop
decl
jg
jno
sbb
scas
lods
pop
pop
fmul
popa
or
je
mov
popl
aas
xlat
cltd
js
sarb
cmp
rorb
sbb
add
cmpsb
mov
adc
or
aam
sbb
sub
rcrb
fs
ret
jl
xchg
jge
jb
push
sbb
stos
push
je
lahf
dec
xchg
movsb
pusha
fistl
mov
push
sbb
pop
xchg
mov
sub
jns
pop
scas
sub
shlb
aam
mov
pop
cmc
popf
xchg
cwtl
test
in
cmp
dec
cmc
sub
lods
stos
inc
mov
repz
xchg
mov
cmp
xchg
aaa
mov
lcall
lods
mov
sahf
stc
arpl
iret
mov
mov
ss
or
nop
pop
loop
icebp
xor
inc
adc
adc
lret
fs
fwait
lods
mov
push
cltd
mov
pop
vpunpckhdq
push
push
and
xor
scas
repz
mov
sub
sbb
xor
adc
outsb
stc
addb
sbb
ret
xchg
les
mov
cld
pop
rclb
fistpll
cli
cmpsb
loope
rorb
xchg
ss
dec
lahf
fs
or
dec
push
ja
leave
pusha
adc
aam
in
push
clc
jge
enter
lret
test
scas
stos
idivl
enter
adc
pushf
int3
enter
cmc
sub
imul
out
inc
lret
je
loopne
test
nop
add
js
fwait
mov
das
mov
lods
mov
lods
or
std
push
xchg
add
inc
adc
mov
mov
je
rcrl
sbb
js
aas
adc
idiv
dec
stc
aam
les
jns
insl
push
cwtl
testl
inc
lods
cli
xchg
sbb
and
call
or
test
jnp
imul
mov
and
rcll
addl
xchg
stos
dec
adc
stos
lea
pushf
sub
cmc
or
fmull
sub
or
adc
mov
ljmp
ret
dec
movsb
lahf
push
and
sub
jae
inc
sbb
mov
imul
sarb
xlat
subl
outsl
lods
add
cli
inc
lds
dec
add
jmp
sub
dec
leave
jg
sub
test
push
jecxz
enter
sbb
inc
dec
sub
inc
lea
jns
xchg
into
pop
or
in
aam
add
pop
mov
cmp
fstpt
sub
test
cmp
cmp
or
pop
sub
test
push
xor
add
cmp
jl
xor
mov
lret
jns
cmpl
testl
enter
daa
jge
or
adc
test
filds
repz
les
xor
mov
cmp
fwait
jp
repnz
ret
sahf
pop
cmp
mov
icebp
popf
push
mov
jns
lahf
or
push
or
cmp
iret
dec
or
lock
leave
lret
xchg
in
rcl
popf
es
or
and
test
fs
and
in
aam
add
mov
mov
in
lret
imul
mov
cmp
frndint
add
ljmp
and
or
rorb
les
pop
inc
fcomp
adc
lret
or
and
mov
in
adc
xchg
inc
dec
fisubrs
cli
add
pop
testb
adc
add
add
jmp
xor
xchg
cmp
mov
jl
mov
insb
and
pop
sub
lret
or
pop
sbb
cwtl
into
rolb
in
and
cmp
in
outsb
mov
jmp
add
jnp
xor
dec
xchg
cld
decl
imul
inc
lods
test
adc
fdivl
pop
test
loopne
sbb
dec
cmp
insl
pop
ss
mov
sti
inc
cmc
cmp
aaa
add
aad
mov
xlat
push
fnstenv
lret
leave
mov
or
jmp
push
sbb
xchg
out
xchg
icebp
bound
dec
int
push
lock
sbb
xor
cs
scas
mov
jnp
int3
or
and
sahf
das
lods
pushf
mov
mov
mov
add
push
lods
and
call
in
dec
or
clc
cmp
in
mov
jecxz
add
sbb
cmp
push
bnd
bound
cwtl
ss
popf
sub
out
imul
cmpsb
mov
and
pop
cld
shlb
arpl
cmp
sbb
inc
mov
fistpl
inc
adc
dec
sbb
jle
iret
mov
or
cmp
inc
jb
adc
scas
frstor
out
popf
rclb
notb
test
pushf
enter
pushf
out
loope
ss
inc
pusha
mov
les
loope
add
data16
push
inc
inc
mov
push
pop
call
insb
addr16
mov
in
lcall
fst
lock
sbb
setbe
test
mov
xor
sub
lcall
inc
mov
adc
lahf
xchg
add
fmull
int3
mov
adc
mov
mov
mov
xchg
lods
mov
mov
mov
cmp
jbe
test
out
dec
js
popa
test
je
cmp
mov
xor
movsl
out
ret
sbb
sub
cmp
leave
int3
jg
dec
imul
jb
test
pop
inc
jp
push
fwait
ret
jne
sbb
xlat
clc
scas
call
addr16
mov
int3
dec
jp
jecxz
xchg
in
stos
je
or
or
xchg
pop
es
push
or
dec
mov
add
testb
mov
push
sub
cmp
jl,pt
or
sahf
and
mov
mov
pop
testl
ljmp
test
cmpsl
inc
ja
jno
cltd
ja
test
push
std
or
dec
mov
loopne
outsl
das
xor
dec
sbb
loope
xchg
loope
aad
inc
add
sbb
adc
sub
sub
mov
xlat
xchg
das
aaa
push
je
pop
movl
int
lcall
out
add
ret
outsl
lcall
jno
xor
jno
mov
xchg
notb
lahf
test
bound
add
mov
jnp
mov
cmp
std
gs
pop
pop
sbb
xor
cwtl
fs
cmpb
gs
in
cld
mov
mov
sbb
xchg
mov
push
lds
mov
lock
into
add
inc
lock
je
pushl
push
popa
cmc
popf
std
jnp
xor
lret
sbb
inc
sub
adc
sbb
xchg
mov
adc
out
pop
fsub
jne
dec
imul
es
sub
push
out
cmpsl
jo
popf
movsb
repnz
lcall
or
xchg
test
mov
mov
and
std
push
outsb
cmp
pop
lods
pop
fisttpl
rol
lret
mov
mov
ret
int3
ss
xchg
out
std
pushf
je
fwait
ds
mulb
cmp
movsl
adc
jb
mov
cmp
sub
inc
xchg
loop
jl
or
fwait
ret
jo
xchg
ljmp
outsl
xor
jl
out
pop
jne
arpl
cmpsb
fwait
gs
out
cmp
mov
movsb
xchg
jmp
es
and
jbe
or
clc
xor
cmp
adc
mov
nop
loop
or
pop
mov
push
and
push
sub
ficompl
imul
cmpsl
data16
loop
sbbb
out
popa
mov
xor
out
sub
sub
mov
lods
jbe
insb
fcoml
loop
fnstenv
mov
jge
js
sbb
divsd
dec
jne
pop
das
sbb
daa
insb
jb
jle
jmp
aaa
or
push
mov
sti
scas
stos
cld
movsl
xchg
push
mov
sbb
sti
aaa
inc
jl
data16
mov
ds
sbb
out
es
into
pop
std
movsl
movsb
xor
ret
icebp
cmpsb
aad
mov
mov
cwtl
gs
sahf
inc
xor
fnsave
lods
imul
les
mov
push
daa
mov
sub
push
leave
mov
rcrl
sub
dec
push
ljmp
stc
pop
fdivrs
lcall
test
inc
or
mov
mov
fisttpl
ret
and
fdivr
inc
movsb
repz
dec
push
lock
push
inc
das
and
fstpl
and
lea
stos
out
js
icebp
popf
outsl
test
ss
add
jp
mov
sbb
add
push
fsubrl
jle
mov
shl
rorl
push
jnp
inc
shlb
fimull
pop
push
mov
dec
arpl
fdivs
inc
dec
shll
imul
mov
xor
lock
daa
pop
call
into
cmp
icebp
pop
xchg
jmp
ds
icebp
scas
fnstsw
sub
cli
hlt
jb
jmp
imul
es
mov
dec
js
sbb
pop
dec
push
imul
pop
popf
jns
aaa
out
dec
cmpsb
mov
in
mov
inc
popf
es
loope
insl
mov
push
test
out
hlt
testl
pop
stc
shrb
hlt
jns
xor
out
cmp
jb
mov
jg
addr16
pushf
mov
test
push
imul
negl
mov
lods
mov
pop
bnd
data16
inc
cmp
jmp
outsb
test
pop
les
push
into
sub
jge
mov
std
outsl
sbb
pop
mov
sti
cli
daa
jl
push
pop
popa
pop
mov
daa
cltd
sbb
cmp
test
mov
ja
add
test
xor
pop
sahf
pop
xchg
pop
in
je
jo
popf
aaa
leave
es
pop
cmp
inc
or
pop
mov
jmp
aaa
xor
and
ds
add
fldenv
cmp
mov
xor
std
jae
or
pop
cmc
jb
arpl
cs
jmp
lahf
bound
mov
arpl
loope
cmp
hlt
xor
mov
insb
xor
std
xchg
loopne
outsl
cld
ljmp
jle
stos
dec
mov
sarb
das
inc
rcll
jns
addr16
fwait
mov
jb
es
pop
int3
adcb
leave
out
push
jo
dec
inc
jmp
xor
in
std
fimull
add
pop
and
fwait
sbb
int3
mov
xlat
add
repnz
cmp
aam
push
add
stos
cmc
mov
in
movsl
nop
push
addr16
loope
add
adc
push
and
dec
inc
xor
ficomps
faddl
insl
std
sbb
add
loopne
cwtl
and
les
mov
sbb
jecxz
and
std
pop
std
xor
xor
jecxz
dec
sbb
ss
addl
pop
xor
arpl
ret
inc
dec
das
pop
fildll
jecxz
mov
xlat
movsb
idivl
sbb
les
jae
xor
mov
xchg
cmpsl
lods
ss
rol
mov
jecxz
std
adc
ss
inc
adc
dec
dec
sbb
movsb
push
inc
adc
add
movswl
bound
int3
fistps
cmpsb
rclb
xor
adc
js
adc
jmp
sub
sub
mov
lea
mov
lods
test
fistl
xor
mov
jp
rcrb
cmpsb
mov
jns
xor
leave
jp
push
test
out
inc
andb
jns
loopne
jne
sub
pop
sub
incl
cld
pop
mov
dec
sub
jmp
cmp
jle
gs
and
in
xchg
lods
xchg
fnstenv
out
fcomps
mov
loopne
mov
push
int3
xchg
sti
scas
push
xchg
cmpb
pop
pop
xor
rorl
cwtl
cmp
inc
popf
lcall
stc
push
dec
mov
cld
aad
push
or
inc
cmp
or
pop
scas
jno
in
mov
incl
and
xchg
and
fwait
push
cwtl
jb
mull
dec
paddd
or
xor
adc
test
xor
adc
fdivl
push
cmpsb
movsl
ss
mov
rcr
or
pop
pusha
pmulhw
adc
je
pusha
mov
popa
mov
stos
mov
push
xchg
lea
xchg
add
xchg
sbbb
xchg
mov
pop
rorl
test
sub
adc
in
dec
push
mov
pop
xlat
pop
scas
test
mov
call
in
insl
pop
push
popf
pop
xchg
mov
in
sbb
sbb
es
inc
mov
test
or
pushf
and
in
push
loopne
adc
mov
jne
test
push
scas
sahf
call
pop
das
ss
xchg
lret
pusha
cltd
sbb
stos
or
in
es
add
dec
mov
fcmovb
setb
call
jp
mov
mov
lods
add
xchg
jbe
fs
and
push
jmp
mov
mov
sbb
aaa
fmul
out
jge
mov
loope
jne
lahf
xchg
insl
test
scas
add
into
dec
push
sub
mov
sbb
mov
addr16
aam
iret
mov
sarl
inc
lds
inc
and
les
dec
and
fisubs
or
jecxz
decb
mov
icebp
inc
jl
cmp
stos
movsb
lahf
fisubrs
mov
inc
sarb
xchg
pop
cmp
daa
testl
nop
popa
adc
push
rcll
push
pushf
mov
xchg
test
out
into
insb
cmc
push
cmp
stos
mov
pop
and
jl
lock
jp
dec
in
hlt
or
adc
xlat
test
movsl
and
mov
int3
pop
je
scas
push
mov
pop
lret
mov
inc
sub
lds
push
ljmp
dec
test
out
stos
mov
gs
stc
xor
pop
xor
inc
sbb
es
push
xorl
test
mov
xlat
lods
bswap
sub
out
adc
ret
xor
pop
add
addr16
or
mov
mov
insb
sbb
dec
xlat
jbe
pop
mov
outsb
les
rorl
sti
pusha
push
or
dec
mov
push
sbb
and
and
add
sub
push
repnz
xor
test
inc
ds
and
outsb
stos
add
sub
gs
or
jne
pop
sub
out
mov
jne
or
sti
or
lock
jmp
adc
rorb
ljmp
lea
cmp
xor
ljmp
jg,pn
les
xchg
lds
push
mov
icebp
push
mov
in
pop
adc
xchg
ss
adc
and
xchg
fmuls
test
dec
shll
or
cmp
and
push
mov
inc
pop
ds
pop
xchg
jb
push
sub
pop
cmpsl
cmp
stos
add
push
in
fstl
lock
cmpsb
hlt
in
push
dec
pop
mov
popf
repnz
mov
inc
jbe
ja
jnp
add
or
fptan
pop
push
rep
mov
adc
dec
lods
ret
pop
pop
movl
xorb
jge
mov
repnz
pop
and
cld
push
scas
and
bound
sbb
push
push
scas
pop
les
pop
mov
adc
mov
dec
test
mov
xchg
into
aaa
fdivs
xchg
mov
sbb
aad
movsl
rol
push
add
dec
adc
int
in
test
aas
out
les
mov
push
in
and
mov
out
add
clc
mov
mov
jecxz
push
push
xor
and
jle
xor
pop
mov
jo
aam
mov
sbb
mov
lret
mov
dec
jbe
mov
test
in
or
and
sub
xorl
aad
and
rorl
das
sbb
out
shlb
in
mov
fsts
sbb
fwait
shll
pop
xor
xchg
mov
cmpsl
xchg
aas
adc
push
fildll
adc
enter
lret
dec
pop
xchg
insl
in
xor
mov
adc
es
pushf
push
dec
fs
outsl
fsubl
pop
mov
jb
jno,pt
je
cs
cmpsl
pushw
fcmovnbe
mov
cmp
out
lcall
out
pop
insl
add
sbb
mov
push
iret
fsubrl
xchg
das
scas
mov
cltd
add
fsubrl
bound
push
scas
and
fdivs
imul
push
mov
pop
icebp
sbb
fsubs
pop
mov
repz
movsb
lds
mov
daa
xchg
jg
lahf
add
pusha
fwait
call
sbb
cmp
sar
movl
mov
cmpsb
sub
into
outsl
icebp
hlt
sahf
jl
scas
mov
sub
xchg
inc
test
daa
add
clc
dec
out
push
das
or
faddl
jp
adc
lret
lods
icebp
lock
dec
push
mov
addl
test
ret
mov
arpl
pop
mov
sub
rorb
test
bound
inc
xchg
cltd
dec
loop
xorb
adc
ljmp
adc
mov
shr
add
push
jns
sub
or
push
test
or
add
and
push
add
enter
inc
sub
subb
aad
stos
imul
sets
xchg
or
sub
outsl
adc
or
shrb
ja
pop
xchg
adc
xchg
jb
nop
inc
inc
insb
mov
mov
adc
cmp
push
inc
push
mov
mov
insb
inc
or
push
insb
int3
jge
lods
cmp
sarl
mov
ret
enter
cmp
xor
imull
adc
cmp
std
in
push
loop
cmp
jne
push
xchg
jne
repnz
sbbl
push
push
scas
jl
and
out
iret
jl
mov
bound
dec
pop
or
es
mov
lahf
in
mov
add
out
lcall
fucom
xchg
pop
andl
mov
sub
pop
insl
fidivs
cmp
aam
gs
push
sbb
pusha
daa
sub
and
pop
xchg
adc
ljmp
gs
xchg
xchg
or
fdivrl
inc
mov
dec
icebp
inc
add
leave
cs
lea
jbe
repz
bound
clc
andb
xor
add
push
inc
mov
out
scas
popa
dec
cmp
arpl
test
mov
imull
subb
sbbl
and
scas
jne
mov
scas
shlb
movsl
in
out
aas
xlat
cmpsb
iret
enter
lahf
jb
nop
popl
ss
push
ljmp
mov
push
xor
movsl
cld
stc
cmpsb
push
mov
mov
test
outsb
xlat
cltd
idivl
nop
xchg
je
cld
outsl
xchg
int3
repz
mov
fcompl
sub
jle
sbb
ljmp
repz
stc
add
arpl
add
and
push
xchg
or
lret
mov
cmc
movsl
fwait
shl
jecxz
in
cmpsb
sbb
leave
cmp
xor
add
inc
rcrb
and
cmp
sahf
add
insl
cmc
adc
sbb
mov
or
fnclex
push
or
mov
ds
ficoml
imul
push
push
fnstsw
jns
fisubrs
cmc
mov
sahf
mov
push
mov
and
aas
xchg
shll
pop
jecxz
mov
adc
sbb
aad
jne
dec
xor
xchg
mov
in
pop
jae
jl
test
mov
test
inc
hlt
fisubl
xchg
mov
pop
or
shlb
add
scas
sbb
divl
pop
jl
fstp
pusha
sub
fwait
scas
lahf
cld
inc
pusha
out
jl
test
mov
mov
sbb
push
jns
mov
sbb
pop
rcll
iret
mov
cli
addr16
add
jno
sub
arpl
mov
push
xchg
dec
lcall
sbb
add
ret
push
lahf
les
add
out
sbb
js
loopne
ret
push
mov
shrb
jmp
aaa
xchg
push
fisttpl
int3
bound
jo
push
cmp
fwait
mov
xchg
push
xlat
lods
push
out
push
inc
lret
pop
out
mov
outsl
jecxz
outsl
lcall
int3
jnp
push
and
or
and
das
pop
divl
dec
inc
or
shll
ds
nop
sbb
lock
xchg
lea
cmpb
jge
adc
sbb
ret
lret
pop
jb
outsb
iret
test
and
sub
mov
out
test
decb
mov
repnz
pop
stc
cwtl
sarl
inc
lret
mov
dec
mov
lahf
pop
mov
jecxz
fldt
sbb
imul
stos
cs
inc
add
imul
mov
inc
inc
add
inc
repz
mov
lret
inc
int
cmc
and
ljmp
repnz
jns
stos
iret
adc
jno
xchg
mov
cltd
lds
ret
or
xchg
push
aad
cmp
outsl
push
pop
data16
add
fwait
pusha
outsl
lcall
das
sub
jns
ret
std
adc
sbb
loope
jns
pop
cmp
inc
mov
aas
into
jnp
aad
pop
xor
inc
xchg
mov
and
scas
nop
jns
fimuls
stos
in
xchg
xlat
xchg
jmp
or
push
loopne
es
pop
xchg
inc
scas
mov
pop
arpl
inc
in
inc
setne
sbb
popf
cmp
inc
out
push
fsubrp
jge
cmpsl
shll
imul
rorl
or
ljmp
add
xchg
cli
or
cltd
sbb
xchg
jmp
mov
jno
xchg
not
push
push
cmpsl
lahf
rol
and
fwait
out
adc
jno
es
add
dec
popa
dec
and
rcrl
or
mov
dec
mov
inc
inc
sub
push
and
cmp
mov
mov
data16
mov
and
dec
ret
lods
inc
pop
or
imul
adc
jo
xor
inc
xor
adc
mov
ss
pop
mov
push
jle
inc
dec
add
aaa
push
jns
andb
cltd
sub
sub
cltd
pop
movsl
pop
shrl
sti
and
cmp
mov
aaa
jg
mov
outsb
out
lret
inc
sub
ret
test
dec
pop
or
pop
sbb
rorl
ret
jae
add
jg
js
fisubrs
jne
xor
sub
sar
sbb
loopne
nop
in
fiaddl
mov
in
addr16
add
lcall
dec
xlat
adc
dec
xor
ret
sbb
jge
mov
mov
dec
push
xchg
ja
in
inc
xchg
cmp
loope
jae
push
push
es
lea
out
dec
sub
lea
mov
dec
in
push
sbb
jge
mov
js
mov
cld
movsb
loope
fnstenv
xor
scas
adc
fxch
xchg
sub
push
cmpl
sarl
sub
mov
shll
xchg
xchg
push
push
cmp
jns
or
incl
gs
dec
scas
jno
and
pop
pop
mov
fsubrl
test
sarb
lea
mov
xchg
outsl
je
jmp
cmp
gs
out
dec
pop
sbb
iret
inc
mov
and
clc
mov
rcr
inc
jle
dec
push
add
xchg
pand
dec
mov
inc
iret
inc
cmp
frstor
inc
or
add
add
in
aad
cmp
mov
enter
push
stc
imul
adc
mov
rep
in
cmp
ss
and
push
push
popf
add
sbb
cmp
push
xchg
ljmp
add
in
stc
pop
add
mov
push
out
je
mov
mov
inc
inc
out
and
xor
enter
pop
popf
jbe
mov
adc
sbb
das
lea
or
stc
cmp
and
lahf
cli
sub
bound
repnz
mov
xor
adc
loope
ficoml
cmp
pop
out
inc
mov
pop
shll
mov
mov
mov
icebp
dec
orb
int3
jp
and
and
jns
test
out
pusha
adc
mov
inc
scas
xor
mov
xchg
inc
jecxz
scas
sub
sub
adc
lds
addl
shl
ds
fldt
repz
inc
pop
or
aaa
mov
dec
sbb
in
cmp
mov
pushf
inc
xchg
mov
daa
and
jo
cwtl
cmp
popf
std
sarb
cmp
ret
lret
fstps
cmp
stos
in
add
pop
cld
rol
pop
add
test
pop
repnz
adc
pop
fmuls
pushf
data16
pop
or
add
aam
inc
imul
mov
cmc
jge
lret
rcrb
sub
js
mov
mov
test
js
push
xor
loopne
cmp
adc
sbb
pop
or
xchg
out
pop
inc
out
and
cmp
aaa
movsb
cltd
cs
movsl
sbb
or
cmpsb
nop
sub
mov
push
mov
imul
sub
sahf
mov
push
out
in
aaa
cltd
mov
xor
inc
sbb
push
push
xchg
adc
les
das
sti
movsl
mov
xor
in
loope
xor
jl
into
ja
jno
mov
push
pop
lea
jns
xchg
cmc
lcall
icebp
cmc
cmc
idivb
les
push
sub
sbb
pop
sub
push
test
inc
xchg
call
ss
sub
jmp
mov
rcl
rclb
push
mov
push
movsl
dec
adc
mov
ss
mov
or
pop
cmp
fistpll
pop
aam
mov
into
call
mov
pop
fs
pop
insb
mov
or
pop
push
insb
fldl
les
aaa
cwtl
adc
outsb
sub
jno
jae
sub
jle
xor
mov
jns
cmp
hlt
push
shlb
sbb
adc
repz
mov
loope
push
iret
cmpsl
mov
jmp
in
addr16
cld
adc
mov
int
and
sub
pop
rol
mov
sti
jg
jo
pop
shll
push
adc
rcrl
mov
mov
ficoms
mov
test
les
fstps
shrb
dec
mov
pusha
pop
gs
lahf
ss
ret
adc
stc
add
pushf
es
pop
inc
pusha
push
stc
stos
leave
cmp
xor
insb
test
adc
int3
pop
mov
and
and
jge
rorb
inc
mov
add
mov
push
and
stos
xchg
sbb
rclb
outsb
push
inc
je
add
imul
mov
pop
les
push
push
cmp
stc
loope
dec
xchg
lods
mov
mov
push
push
push
push
and
xchg
jne
xchg
fldcw
jge
inc
loopne
mov
or
out
in
daa
xchg
imul
out
mov
jne
adc
or
sub
push
mov
mov
dec
cmp
jae
sbb
pop
insb
dec
push
and
inc
sub
mov
lods
lea
imul
mov
inc
jp
rol
enter
push
dec
cmp
test
imul
hlt
lret
bound
cli
addr16
lods
mov
cmp
ret
inc
add
adc
add
scas
rep
pop
xchg
and
push
pop
js
adc
fstps
sahf
cmp
enter
insb
mov
les
xor
dec
insb
mov
icebp
test
xlat
cld
sti
mov
cmp
repnz
sub
pop
adc
or
jecxz
inc
jo
and
adc
mov
cld
loop
pop
push
addr16
out
dec
jb
aam
cs
shlb
in
fisubs
lods
inc
or
mov
mov
out
dec
inc
mov
shll
incl
mov
adc
ret
mov
jle
jge
imul
add
inc
adc
adc
xchg
std
jp
add
outsl
jecxz
sbb
and
repnz
mov
pop
pop
cmp
imul
stos
adc
add
dec
jo
inc
mov
notl
rclb
add
iret
inc
mov
xchg
lahf
sbb
cld
add
inc
out
sub
push
aad
inc
add
or
ficomps
inc
mov
pop
lds
dec
jp
jb
jno
xor
mov
imul
data16
int
int
mov
das
sbb
jne
push
xchg
jo
sub
jmp
in
aad
cmp
sahf
adc
or
xchg
pop
or
mov
inc
pop
leave
mov
in
push
pusha
and
and
sbb
push
movsb
cmp
or
mov
hlt
mov
ret
outsb
jo
sub
pop
out
mov
std
les
xchg
std
sbb
mov
lret
push
imul
cltd
out
xchg
lret
shlb
lods
out
mov
in
out
fwait
repz
fimull
int
dec
sahf
cmp
loop
jg
add
pop
jno
jno
dec
jbe
sub
mov
das
inc
fisttps
lret
enter
aam
xor
mov
inc
sbbl
mov
shrb
aad
sbb
movsb
xor
idiv
xchg
push
adcb
sub
stos
mov
in
shl
fs
sub
lret
jb
jg
cwtl
fcoms
push
fstp
mov
jae
insb
mov
repz
jmp
stos
movsl
mov
cmp
push
cli
sbb
push
mulb
scas
into
jge
gs
mov
mov
pop
and
jge
push
mov
xchg
lea
mov
sub
push
lods
adc
enter
lret
jno
xchg
lcall
and
aas
xchg
imul
or
bound
inc
les
jo
pusha
jnp
mov
mov
das
aam
cmpsl
mov
adc
jmp
lret
sbb
xor
in
aas
dec
mov
pop
in
arpl
cmpsb
inc
push
xchg
or
add
mov
mov
and
inc
mov
cld
cmc
ror
sahf
push
mov
cmp
xor
lret
xchg
scas
jbe
pop
testl
ret
pop
xor
fists
out
add
mov
push
adcb
or
jle
iret
add
test
dec
movsb
mov
sub
and
xor
mov
mov
inc
cmp
pusha
or
pop
cmp
mov
cwtl
test
mov
dec
sbb
push
mov
mov
and
loop
inc
pop
cmpsb
push
mov
add
les
imul
ss
std
repz
int
mov
adc
test
mov
mov
sbb
ja
stos
sub
scas
popf
sbbl
cmp
push
std
jne
fcom
pop
jmp
inc
mulb
inc
imul
lcall
xor
jne
addr16
adc
loopne
popa
add
xchg
add
or
cmp
out
and
pop
xchg
cmp
int3
add
stc
dec
bnd
pop
push
mov
pop
fs
and
lock
mov
mov
ret
add
push
inc
cmp
hlt
jle
cmp
jecxz
insl
inc
pop
lods
lds
scas
sbb
dec
mov
sbb
jle
loope
clc
jp
lods
sarb
ror
xchg
adc
mov
rcll
js
sbb
jbe
mov
inc
scas
dec
cmp
pop
adc
jnp
cs
int
popf
dec
pop
shlb
mov
xchg
jno
ljmp
mov
sbb
data16
push
cmp
dec
dec
cmp
enter
pop
stos
adc
sahf
std
xchg
xchg
or
rcrb
ss
pop
enter
fisttpl
mov
xchg
xchg
lds
hlt
and
lods
pop
xor
sbb
push
fistps
cmpsb
inc
std
mov
jbe
movsl
add
mov
out
adcb
sub
sti
mov
sahf
int3
lret
inc
rorb
testl
push
jp
lods
pop
stos
dec
in
and
or
adc
and
repnz
pusha
pop
and
clc
repz
sub
add
and
pop
dec
fidivs
add
xchg
mov
pop
pop
fwait
jmp
stos
stos
add
xchg
mov
pop
lods
sbb
inc
scas
mull
dec
stos
sub
cmc
out
mov
push
mov
sub
mov
shlb
outsl
xor
cmp
int
mov
lods
mov
inc
lods
cmp
aaa
rcrb
inc
lahf
insb
stos
xor
jb
ljmp
repz
pop
xlat
out
or
in
mov
inc
cmc
push
lods
stos
inc
fnstcw
cmpsb
in
push
pop
dec
ss
jb
mov
ss
mov
inc
shll
ret
xchg
cld
iret
push
test
dec
or
dec
aaa
je
mov
pop
iret
outsb
mov
je
hlt
xor
adc
inc
in
or
mov
jmp
lret
and
insb
xchg
jb
sub
and
jo
dec
mov
stos
clc
sbb
sub
ds
mov
nop
mov
aam
sbbb
jo
repnz
test
scas
xchg
push
mov
pop
cmp
sbb
mov
and
subb
in
adc
movsb
rcll
mov
aam
jnp
daa
outsb
xchg
shrb
jmp
sub
push
add
aad
clc
mov
ja
mov
push
sbb
fcmovnb
jo
cmp
jp
test
and
add
fstps
and
inc
xor
cs
push
sub
addr16
pop
jne
loop
leave
loopne
cmpsb
push
lods
mov
mov
out
inc
and
xchg
push
add
jo
sub
sub
sub
rorb
sbb
jmp
jge
xchg
clc
sbb
mov
int
fistpl
jno
jecxz
sbbl
dec
rorb
frstor
xor
mov
push
leave
mov
pop
cmc
sub
cmpl
and
loopne
and
add
loop
stos
sbb
cmp
add
lret
inc
test
cmp
xchg
insb
jmp
mov
popa
enter
shll
jns
sahf
and
pop
icebp
jmp
fnstenv
cmp
push
inc
into
cmp
and
inc
sub
out
lahf
mov
notb
imul
cwtl
jae
shr
sarl
jmp
aam
out
and
in
leave
jmp
bound
mov
dec
andl
vmovdqu
arpl
ret
test
mov
add
movsb
popl
in
js
mull
das
in
cmp
push
int
inc
and
stos
mov
inc
mov
xor
push
test
push
ss
xchg
cwtl
inc
loope
cmpl
push
cmp
sti
ret
cltd
rorb
inc
push
xchg
lock
fs
rsqrtps
mov
jg
jecxz
adc
inc
sarl
lods
pop
pop
xor
fidivl
movsb
cmp
sbb
fmuls
xchg
sub
sub
xchg
mov
jl
into
ret
sarl
jns
into
xchg
and
test
or
orl
dec
mov
dec
leave
data16
inc
sti
add
add
xor
jne
lret
push
or
jge
cwtl
pusha
push
push
xor
int
adc
das
fwait
neg
or
enter
adc
jge
out
or
mov
outsl
loopne
movb
cmp
lcall
sti
jno
movsl
stos
xchg
dec
pusha
xlat
adc
loope
push
mov
mov
mov
pushf
jp
lret
call
or
pop
and
cmp
cmp
cwtl
add
mov
add
in
scas
ret
mov
mov
xchg
jb
aas
push
pop
stos
divl
jmp
dec
icebp
xchg
dec
popf
iret
int
mov
add
or
fwait
and
rcrl
or
jmp
xchg
gs
push
sub
inc
mov
ljmp
push
sahf
pop
inc
push
divl
pop
cmp
mov
pop
add
dec
add
adc
mov
mov
dec
push
mov
inc
daa
test
adc
jne
push
daa
fldenv
fdivrl
ds
mov
in
pop
imul
pop
js
jns
stos
sub
cld
and
mov
jg
sbb
push
test
add
sbb
mov
shl
scas
push
cmp
cmp
xor
das
jbe
out
inc
decl
dec
in
jbe
and
push
mov
mov
mov
out
inc
fsubrl
cmpsl
fdivrs
aam
adcl
push
push
scas
stos
in
jge
outsl
pop
and
rolb
adc
add
jns
jbe
rclb
lock
xor
shrb
int3
inc
mov
mov
push
push
lods
push
jo
mov
das
idivl
or
or
out
xchg
fdivrl
mov
mov
rclb
lods
pop
cmp
pop
mov
scas
dec
lret
add
mov
push
push
adc
pop
jne
xchg
mov
or
mov
add
jbe
cmpl
lea
lret
adc
ljmp
xor
dec
xlat
mov
pop
loope
shlb
mov
mov
jnp
sahf
cmp
js
jno
xor
mov
orl
dec
ds
xor
jecxz
repz
xor
mov
jbe
mov
inc
sbb
jb
jg
jmp
incl
int
xchg
cmp
mov
or
pop
xor
mov
lret
fbstp
stos
push
in
movsl
jl
popf
shlb
orb
test
inc
mov
mov
cmpsb
aad
mov
dec
pop
fisubl
pop
dec
push
dec
lea
imul
subb
xchg
adc
test
mov
clc
inc
in
jbe
pop
rolb
mov
rolb
xchg
sbb
xchg
push
loop
xchg
inc
xchg
adc
add
fcmovu
push
out
or
cs
dec
stc
pop
pop
cmp
jno
jmp
cld
jecxz
scas
xlat
les
push
in
rcrb
jg
inc
adc
mov
xchg
mov
jnp
mov
xorl
ret
cmc
inc
dec
in
dec
sarl
adc
adc
sub
ret
mov
or
cltd
jo,pn
inc
stc
outsb
cmp
cld
out
mov
subl
and
into
mov
mov
mov
aam
xor
adc
mov
hlt
repnz
in
mov
add
sbb
xor
add
xchg
fiaddl
out
cmp
in
or
rcrl
xchg
rorb
pop
int
cmp
jge
sub
mov
leave
xchg
mov
addl
jno
dec
adc
bound
push
stos
or
xor
adc
jns
fwait
int3
push
sbb
fisubrs
jb
sub
das
and
mov
std
shrl
mov
xor
sub
fs
rorb
insl
pusha
orb
test
pusha
mov
and
xchg
and
stos
jno
jge
mov
dec
test
iret
xor
inc
add
dec
cld
cmp
sbb
or
jno
cwtl
add
mov
adc
inc
adc
pop
imul
into
pop
stc
sub
or
lds
sub
out
cmp
aaa
pop
sub
xchg
outsb
arpl
xchg
sub
in
xchg
lret
lods
popa
add
mov
xchg
xor
es
mov
aam
xor
push
or
repnz
cwtl
sbb
rorl
lahf
xchg
cli
mov
xor
fists
fstpl
movsb
cwtl
test
lods
cmpsb
jne
pusha
adc
xchg
mov
cmpsl
stc
inc
sub
mov
adc
das
imulb
jge
xchg
insb
add
scas
imul
sub
jg
jecxz
cld
sub
jp
adc
gs
inc
popf
dec
mov
or
mov
mov
add
mov
and
leave
mov
mov
cld
jns
xchg
cmpsb
fmulp
das
mov
sbb
mov
xchg
jle
fsub
mov
and
lret
aaa
and
das
mov
lods
insl
psrlw
jns
loopne
lahf
jae
cmc
xchg
iret
lods
flds
lods
sar
jle
xchg
iret
fadds
or
ja
outsl
pop
xor
dec
xor
dec
sub
ljmp
loope
test
sbb
cmp
sbb
loopne
test
jmp
daa
xor
push
xor
xor
mov
and
pop
gs
xchg
mov
adc
inc
sub
js
pop
lahf
mov
mov
gs
hlt
inc
call
push
sub
sub
aaa
add
inc
mov
leave
dec
cwtl
fsubl
xor
mov
adc
ret
cld
outsl
mov
insb
and
push
dec
pop
mov
sub
repz
fstpl
and
add
add
data16
push
orb
sub
or
push
daa
std
xchg
das
pop
ja
jp
jge
scas
push
jle
xor
fisubl
cmp
daa
lock
cmpsb
pop
pushf
and
add
cmpsl
inc
mulb
jp
out
imul
enter
out
es
ret
sbb
outsb
push
je
add
sub
aaa
sbb
lcall
adc
movsl
pop
insl
lods
push
mov
pop
sbb
in
iret
mov
pop
mov
mov
pop
cmpsl
nop
mov
jo
cmp
dec
mov
test
push
mov
test
mov
mov
mov
pop
es
fnstcw
mov
daa
mov
jg
or
call
jg
mov
rcll
push
or
fisttpl
cmpsl
cmp
aam
loopne
stos
push
in
fldenv
mov
mov
stos
inc
or
mov
shl
push
inc
rorl
cmp
and
jnp
aam
into
mov
shll
lcall
sar
add
mov
mov
push
sbb
jbe
out
jp
and
rorb
daa
ret
lods
cmp
push
or
xchg
divl
fimuls
mov
xchg
cmpsl
movsb
out
ss
add
iret
cmp
push
mov
fwait
dec
mov
push
dec
lds
mov
mov
stos
jnp
enter
cmpsb
mov
push
insb
xor
jl
call
les
xor
test
insl
cmpsb
xchg
popa
fistpll
popf
or
lods
push
sub
pop
aaa
into
test
ret
jle
sub
xor
jno
mov
ret
daa
and
jns
pop
sub
loopne
in
out
pop
daa
push
xchg
jp
imul
movsb
lods
lock
or
scas
popa
mov
arpl
popa
xchg
loope
or
mov
clc
aaa
cwtl
xchg
cmp
call
enter
jp
adc
jae
dec
jo
pop
and
in
and
mov
or
lods
sub
mov
xchg
lock
xor
and
push
cmp
inc
pop
movsb
dec
lea
mov
je
jno
mov
sti
shlb
nop
fsub
rclb
push
in
mov
loope
jnp
cld
inc
ret
sbb
fnstcw
sbb
cmp
popf
mov
jmp
jg
js
jno
arpl
insb
out
mov
shlb
jmp
inc
mov
adcb
or
test
stos
loopne
xchg
push
adc
and
stos
mov
mov
cmp
pop
jg
cmp
leave
mov
shll
push
jmp
fsubrs
in
daa
mov
outsl
inc
add
sbb
cli
pop
sbb
xchg
rcll
pop
mov
cmp
push
or
push
pop
mov
adc
lret
rcll
pop
cmp
mov
fstpt
pop
mov
push
mov
sbb
int3
aam
dec
jg
and
xor
mulb
repz
push
pop
insb
push
rcr
xchg
pop
scas
ret
mov
cwtl
shll
xchg
add
jecxz
xlat
pop
fistpll
mov
scas
push
aad
orb
mov
xlat
lret
popa
sbb
xchg
movsb
mov
dec
push
movb
test
inc
sbb
sbb
jmp
dec
or
out
dec
and
loopne
inc
adc
psubusw
aas
cld
mov
push
mov
testl
shl
decl
icebp
xor
lea
and
dec
adcl
out
ja
ss
imul
pop
in
sbb
js
or
push
sbb
scas
and
cltd
cmp
push
out
xchg
mov
mov
dec
popa
outsl
fdivr
xor
mov
scas
loop
push
out
sahf
xchg
push
xchg
mov
fcompl
subl
sub
addr16
das
in
mov
pop
nop
fdivs
push
xlat
mov
mov
pop
pop
mov
jge
lcall
movsl
dec
daa
in
clc
dec
popf
dec
test
fsts
sbb
stc
icebp
in
or
jbe
pop
jno
cltd
dec
fnstsw
cwtl
cs
pop
push
movl
pop
adc
push
jno
mov
aas
push
cld
aaa
pop
sub
push
fs
xchg
jle
in
jg
aad
xlat
cmp
xchg
mov
push
pop
xchg
inc
push
out
jge
stos
imul
sbb
fildl
push
jl
frstor
mov
out
push
mov
leave
and
mov
and
cmc
mov
sti
jne
repnz
iret
adc
inc
roll
js
lret
jmp
mov
jp
dec
jo
cli
mov
mov
fldt
push
ret
repz
les
push
mov
fsubrs
push
flds
pop
aad
imul
jb
jb
inc
stc
scas
data16
out
sbb
inc
stos
dec
cmp
lret
dec
fdivr
sbbl
test
pop
fcoml
scas
dec
jle
mov
popa
decl
dec
sbb
aad
inc
mov
xchg
lret
insb
fwait
mov
adc
adc
movsb
iret
dec
xchg
sahf
jge
jne
push
fiadds
add
lods
and
shl
jmp
dec
mov
adc
hlt
adc
jmp
lcall
adc
int3
cmpsl
jecxz
int
loope
outsl
jae
or
sub
out
and
je
movsb
mov
jmp
stos
das
fs
addr16
cmp
cwtl
push
mov
lods
js
lret
cmpsl
pop
push
das
inc
scas
enter
jb
clc
cmp
mov
jno
neg
inc
jge
adc
pusha
pop
movsl
jg
pop
xchg
insb
add
sti
sbb
mov
jg
mov
mov
xor
addr16
aad
fstl
inc
xorl
push
rclb
jp
fnstsw
out
xor
aaa
adc
pop
jl
movsl
inc
pop
fidivs
add
xchg
push
imul
sub
fistpl
push
mov
leave
mov
pop
ret
mov
popa
clc
xchg
mov
adc
popa
mov
outsb
sbb
cmp
test
mov
movsl
rolb
fidivrl
cld
test
sti
in
into
aas
nop
jne
scas
inc
mov
mov
adc
fdivr
push
gs
cwtl
jmp
push
sbb
mov
jmp
aaa
fnsave
outsb
test
jecxz
xor
pop
in
in
rolb
mov
xchg
flds
xor
cmp
mov
scas
push
xchg
popa
mov
mov
xchg
gs
icebp
pop
daa
mov
mov
inc
ret
jns
inc
out
lret
call
int
jb
fistpll
pop
xor
out
sarb
jle
xor
mov
pop
in
add
int3
into
sub
mov
pop
lock
addb
dec
popf
je
push
xchg
lods
imul
jle
cli
pop
mov
shrl
mov
out
mov
ret
jmp
add
mov
ss
stos
rcll
jnp
mov
push
cmc
iret
mov
repz
lods
lock
or
std
xor
icebp
cmpsb
rcrb
mov
cmp
and
pushl
movsb
dec
xlat
shrb
jne
mov
icebp
dec
nop
out
sub
stos
pop
push
mov
add
nop
lahf
fistpll
inc
aad
sub
xchg
enter
xchg
mov
lea
aas
lret
stos
pop
in
and
inc
mov
insb
mov
or
and
pop
add
addr16
ret
sub
rcrb
push
jae
xchg
movsl
and
insl
jl
inc
enter
jmp
fsubs
adc
cmp
or
sbb
mov
nop
ret
out
push
dec
and
call
xlat
loop
sti
pop
cmpsb
xor
fucom
rolb
sub
cmc
aad
mov
scas
lea
lret
or
inc
repz
jp
frndint
pop
push
lret
sar
movl
lcall
iret
call
fsub
or
pop
or
xchg
xlat
lds
ja
test
out
cmp
inc
cmp
push
int
fs
stos
out
decb
dec
pop
ja
imul
dec
jp
out
mov
mov
add
icebp
dec
dec
mov
mov
rclb
jo
mov
push
hlt
test
data16
pushfw
pop
lret
inc
lret
frstor
lret
outsl
pop
adc
jne
outsb
cwtl
in
pop
aam
mov
dec
dec
cmpl
mov
out
test
iret
ret
mov
jg
adcb
mov
push
cmp
mov
in
fisubrs
push
jp
cld
cld
pop
scas
adc
xlat
dec
mov
outsb
or
jmp
cmp
outsl
jle
in
push
aad
push
in
push
out
sarl
jg
push
mov
rclb
movsb
mov
test
mov
jmp
push
mov
int
jae
mov
imul
addr16
xchg
orb
fbld
add
into
fldl
idiv
fwait
mov
out
xchg
inc
or
inc
int3
inc
lret
das
lcall
or
inc
mov
call
or
mov
mov
out
les
dec
dec
call
cmp
or
add
iret
sub
sub
push
pop
jae
aam
mov
mov
pusha
fisubrl
xchg
mov
mov
in
hlt
jge
adc
out
push
sti
into
jns
movsb
scas
pop
hlt
ficomps
cmp
clc
cmp
cmp
shll
jecxz
mov
or
fistl
imul
fldt
sbb
push
mov
mov
js
shrb
mov
repz
xlat
cld
lods
xor
test
mov
pop
data16
inc
cli
pop
ss
std
ds
es
insl
and
in
cwtl
mov
pop
hlt
jo
mov
testl
ja
mov
inc
movsb
xlat
xor
gs
cmp
fdivrp
pop
xchg
push
or
cmp
jg,pn
mov
popl
test
add
sbb
mov
dec
fs
fldl
add
sbb
hlt
push
mov
xor
mov
loopne
lcall
mov
cmp
call
movl
ljmp
add
xor
in
jl
aaa
and
rcll
rolb
and
sbb
mov
and
sbbb
shlb
clc
add
or
mov
jbe
dec
xlat
cmp
jns
sbb
shl
jo
ficompl
stc
mov
jg
roll
and
scas
fwait
aaa
push
mov
jae
cmp
pop
inc
push
adc
mov
aad
sub
xlat
stos
mov
test
insl
ret
out
pop
idivl
les
movsl
dec
andl
out
mov
popa
sub
stc
in
sbb
mov
cltd
out
jb
int3
cmp
call
lcall
adc
lods
mov
xor
dec
cli
fidivrl
mov
int
into
int3
pop
xor
mov
inc
lods
das
ret
js
dec
sahf
lret
lods
adc
jne
xor
ret
and
mov
pusha
out
xor
pop
add
imul
jle
imul
and
pop
inc
fcmovne
scas
dec
clc
inc
or
and
xor
lret
ss
mov
adc
scas
dec
and
icebp
rcrl
add
mov
and
xchg
mov
cmpsl
out
fsts
mov
xchg
mov
xchg
jl
adc
in
xchg
mov
mov
aad
imul
inc
push
leave
xchg
mov
add
stos
xchg
mov
ljmp
jbe
lods
lcall
sbb
fimuls
pop
gs
adc
adc
mov
jl
add
adc
jp
sub
lret
push
cmova
add
out
bound
xchg
outsb
pusha
fidivs
push
leave
pop
clc
push
sbbb
jp
popa
not
outsb
stos
mov
bound
gs
mov
ret
mov
sti
in
hlt
mov
sbb
outsl
in
movsl
fld
movsb
jnp
mov
jp
fldl
inc
scas
adc
call
pop
xchg
lret
mov
xchg
cmpsl
jne
test
loop
inc
jg
mov
push
or
lea
mov
xor
shr
bound
push
loopne
cltd
mov
push
mov
mov
dec
pop
sbb
pop
xchg
ljmp
js
adc
jle
mov
je
dec
mov
insb
push
dec
in
aaa
lock
lods
ret
dec
loop
xor
aaa
jns
clc
outsb
insb
out
sbb
xlat
mov
popa
in
inc
aam
pop
imul
fiadds
cmc
icebp
aad
jne
dec
lcall
sbb
xor
push
scas
xchg
cld
movsl
sbb
mov
lcall
ljmp
out
cmpsl
push
sub
xchg
rcrl
in
push
fadd
int3
xlat
jns
jne
jle
imul
loop
test
pop
in
mov
xor
sbb
jl
sbb
jg
ret
or
les
and
mov
loopne
movsl
push
lcall
pusha
push
fcoml
std
inc
push
push
add
test
aaa
fwait
xlat
aas
cmpsb
jecxz
repnz
arpl
rorl
pop
cli
inc
or
push
xor
jge
stc
sbb
fs
mov
mov
test
cmpsb
inc
ss
dec
iret
cmp
mov
lret
jl
inc
or
shlb
push
mov
push
sbb
dec
pop
mov
jmp
test
jb
and
xorb
icebp
mov
iret
divl
and
in
lock
sub
std
sub
xor
mov
ret
cmc
fdivrs
in
pushf
push
mov
fadds
mov
out
add
outsb
xchg
and
mov
jg
xchg
dec
fmull
push
neg
rcrb
adc
xor
pop
js
push
call
das
mov
adc
jecxz
cld
iret
cmpb
add
inc
mov
add
in
int3
mov
mov
std
fstl
pushf
push
xchg
pop
es
add
cmpb
repz
cmp
minps
dec
iret
push
addl
outsb
sub
dec
stos
jns
ret
shlb
push
and
daa
cmp
cmp
add
dec
cltd
fdecstp
out
pushf
sti
pop
add
fisubl
mov
stos
push
imul
mov
cmp
loop
mov
repnz
push
sub
fsubrl
push
es
sti
add
xor
cli
push
les
cmp
pop
or
cmp
jbe
int
orl
mov
ficoms
add
stos
add
and
ret
lcall
push
jle
cld
cmpb
sbb
jecxz
and
cltd
dec
xchg
sbb
std
add
mov
loop
outsl
mov
nop
xchg
stos
mov
jno
popa
jne
add
mov
xlat
sbb
jo
add
in
push
cmp
mov
push
sbb
call
and
lcall
adc
sbb
jo
ljmp
das
shl
nop
sbb
pop
je
rol
mov
mov
fnsave
jo
push
mov
popa
adc
push
mov
fsubs
sti
ret
out
rcll
neg
loope
fnstcw
jmp
cwtl
enter
fstpl
sub
mov
jnp
push
xor
mov
scas
dec
stc
aam
xchg
popa
popa
mov
sub
adc
jg
inc
icebp
adc
mov
mov
hlt
sub
pop
or
out
add
in
xchg
mov
push
cmp
outsl
lods
push
push
sub
imul
cmpsb
push
pop
bound
in
xchg
jg
out
jp
jne
pop
out
xor
xor
sub
mov
nop
push
bound
dec
mov
ds
test
icebp
mov
sub
divb
cli
arpl
ss
jb
pop
in
cmp
mov
ljmp
xchg
incb
or
xor
jns
pop
jp
test
mov
xor
pop
bound
js
lcall
out
inc
repnz
adc
xchg
mov
dec
mov
and
ljmp
lahf
aad
ficompl
shll
cwtl
hlt
scas
or
xchg
inc
pop
jb
jmp
idivl
dec
hlt
inc
out
fxch
sub
adc
pop
sub
leave
adc
push
push
mov
popf
call
mov
dec
fistl
push
jmp
mov
jmp
sub
inc
mov
sahf
pop
inc
fcmovne
hlt
push
iret
inc
add
sbb
push
mov
dec
sbb
pop
imul
incl
xor
cltd
je
movsl
outsb
mov
mov
in
std
add
test
leave
cmp
cmc
sub
pop
es
fiadds
clc
lcall
adc
mov
xor
icebp
mov
add
popl
sbb
xor
dec
fidivs
xor
repz
lods
fcmovne
lret
and
sbb
adc
sbb
and
adc
xchg
cwtl
push
xchg
loop
xchg
xor
cmp
adc
mov
mov
xchg
push
loop
int
int3
sub
mov
cs
dec
cmpsl
inc
addr16
or
push
sahf
push
inc
shll
out
sar
in
push
pop
dec
shr
push
movsl
and
movsl
mov
cli
addr16
out
jl
mov
cltd
xchg
testb
inc
cs
push
scas
cmp
mov
cmpsb
sub
aam
test
leave
test
popf
test
push
add
ja
clc
cwtl
or
and
outsb
xor
mov
mov
lea
imull
inc
jnp
lock
push
enter
mov
cli
shr
dec
cmp
cmc
push
fidivs
les
ret
scas
lock
pop
push
xor
sbb
xorb
xchg
in
or
adcb
cmp
fmull
dec
cld
pushf
loop
lcall
mov
xor
les
and
arpl
movsl
cmp
in
sub
aam
loopne
push
addr16
pop
cld
int3
loopne
xchg
int3
call
sarb
add
push
outsl
cmp
bound
es
subb
movsl
mov
div
add
testl
call
fs
pop
jns
xchg
cmpsb
sub
in
fwait
or
add
aam
xor
inc
xlat
pop
in
lds
out
push
add
cmp
or
jo
pushf
in
sbb
xchg
jo
or
jle
in
sar
stc
in
sarl
dec
jl
cmp
push
inc
mov
arpl
jp
js
push
xorl
pop
das
call
sti
pop
in
fistpl
cmp
xchg
lcall
aaa
sub
rolb
pop
outsb
or
xchg
sbb
fists
leave
cmp
add
aaa
pop
repnz
xchg
lods
xor
push
sub
mov
ficompl
daa
stos
pop
dec
inc
mov
xor
fdivs
jb
jne
jle
jg
pop
dec
push
add
aas
out
inc
push
mov
xor
pop
into
pop
xor
cmp
push
pop
adc
sbb
cmp
jmp
xor
stos
push
lods
jns
jecxz
cmp
aam
mov
addb
xchg
sub
lock
adc
adc
sbb
gs
cli
lcall
pop
or
dec
imul
cmp
insl
inc
cwtl
sub
xor
dec
push
cs
out
aaa
hlt
pusha
cmpb
outsb
sub
mov
and
outsl
adc
inc
mov
mov
sahf
sarb
popf
stos
popf
icebp
loope
mull
jecxz
aas
add
pop
ljmp
dec
jle
outsl
dec
dec
pop
cmp
mov
sub
xchg
dec
mov
and
insb
movsb
aas
sarb
jns
mov
xor
push
cld
cmpsl
cmp
adc
and
mov
mov
mov
xchg
js
lea
pop
and
popf
adc
leave
out
fs
aad
repz
cmc
aas
dec
sbbl
jae
fwait
lcall
cmp
and
aas
icebp
aam
aas
inc
cs
sbb
push
test
loopne
or
clc
in
mov
cmp
dec
negl
scas
leave
je
shll
out
add
leave
sub
jne
imul
test
mov
popa
testb
push
or
jp
lock
fistpl
scas
push
inc
popa
jbe
fildl
xor
pop
mov
lods
adc
jp
jge
mov
roll
or
jno
in
dec
out
scas
mov
sbb
mov
lods
mov
stos
imul
xor
loopne
mov
fisubrl
mov
stos
mov
hlt
jmp
adc
out
xlat
iret
stos
sub
and
jmp
sti
xchg
xor
icebp
xor
push
dec
fs
pop
push
push
out
ljmp
shrb
add
pop
movsb
dec
adc
lock
mov
fists
dec
leave
sub
inc
cli
nop
pusha
mov
inc
mov
dec
jl
orl
lcall
push
push
test
mov
adc
rclb
xor
das
dec
nop
loope
ret
mov
jle
dec
repnz
cmc
mov
cld
add
xchg
xchg
nop
push
add
or
pop
xor
sbb
sti
cmpsl
add
inc
test
mov
fnstcw
mov
js
mov
dec
adc
out
scas
jne
imulb
pushf
xor
jle
mov
mov
movsb
sbb
popa
push
das
or
cs
xorb
loop
add
jne
movsb
add
pop
jle
mov
icebp
stos
fsubrp
cmpsl
xchg
test
sub
cmp
xor
stos
aad
xor
mov
loopne
in
daa
cmpsb
ds
pop
mov
stc
fwait
mov
js
xorb
shrb
adc
dec
test
xor
and
addr16
insb
inc
scas
lret
aad
sbb
jo
xchg
push
push
push
sahf
mov
clc
xchg
and
ret
sti
pushf
outsl
push
ds
in
jae
sbb
sti
in
pop
xchg
push
movsb
movsl
mov
cmpsl
mov
pop
loope
lea
das
push
push
sbb
jp
jecxz
jg
lahf
pushf
ja
sarb
in
je
pop
ret
jo
dec
mov
add
les
rcll
cld
in
daa
stc
std
pusha
jbe
sub
jmp
daa
into
push
jbe
mov
stos
cltd
dec
leave
adc
insl
mov
mov
sahf
jecxz
sub
jne
xchg
add
sbb
stos
jo
loopne
push
fmulp
push
xor
out
lock
xchg
jo
fcoms
dec
xchg
test
cmp
pop
movsb
aaa
filds
in
lds
repz
idivl
in
dec
call
popf
xchg
add
pop
jmp
lret
je
or
loop
aas
rcr
pop
lcall
jmp
stc
dec
sbb
dec
push
nop
jmp
fisttpl
rcl
stc
xchg
mov
rorb
pop
inc
sub
xor
movsl
mov
stos
xor
jo
mov
xor
mov
and
or
daa
fmul
sub
mov
cltd
lahf
add
mov
pop
pop
cld
cmp
inc
les
aaa
mov
adc
pushf
adc
xor
cmp
jecxz
bound
pop
fcmovnu
pop
jmp
jecxz
dec
popa
jg
inc
mov
mov
xor
pop
mov
xlat
iret
and
fistl
std
inc
xchg
outsb
in
lods
inc
sti
xorb
js
push
outsw
sub
mov
lock
arpl
jp
in
enter
roll
push
popaw
mov
adc
rcrl
xorb
dec
xchg
les
add
lcall
ror
or
shlb
out
loop
xor
das
xchg
xor
dec
mov
roll
add
pop
sub
jg
idiv
add
orb
std
loop
js
in
ljmp
scas
xor
loop
movsl
lcall
sbbl
dec
jbe
lods
push
ds
ret
xor
aaa
es
icebp
xlat
jle
cld
fwait
jmp
popf
testb
roll
fmuls
or
cld
mov
aaa
les
add
sbb
sub
aas
mov
pusha
xchg
mov
jl
push
xorb
jecxz
imull
cmpsl
mov
mov
xor
addb
push
fcoms
pop
mov
in
movsb
lret
dec
mov
out
je
test
and
mov
mov
pop
hlt
cmc
sbb
jnp
call
decb
lods
sub
pop
mov
add
mov
lcall
orl
mov
out
mov
lret
inc
xchg
dec
lods
repz
sub
mov
sub
mov
xchg
imul
dec
fst
sbb
adc
cwtl
lods
inc
movsl
cmc
scas
or
int
ffree
add
mov
shrb
cmp
adc
into
xchg
mov
jge
and
sub
xchg
pop
pop
cmp
mov
xchg
sbb
jl
je
push
sbb
pop
incl
mov
mov
mov
addr16
adc
push
pop
icebp
xlat
lahf
fnstsw
cmpsl
in
xchg
inc
outsl
in
or
pop
lods
hlt
fdiv
xor
add
and
imul
bnd
xor
test
jmp
cmpsb
mov
push
addr16
hlt
mov
and
dec
mov
and
xchg
ret
lods
add
bound
jne
jp
mov
push
mov
test
mov
leave
negb
adc
push
js
push
imul
ficoml
adc
pop
sub
imul
and
mov
dec
cmp
stc
dec
cmp
pop
int3
nop
pop
clc
dec
loop
push
insb
mov
mov
mov
pushf
aad
mov
jp
addb
repz
cmp
enter
iret
lret
xchg
pop
aam
mov
jne
rorb
outsb
loopne
stos
cli
aad
pop
in
xchg
test
mov
sub
xor
inc
addr16
pop
aam
out
mov
mov
cmp
int
pop
jb
bound
inc
je
and
mov
dec
xchg
adc
jnp
xchg
aad
or
mov
imul
adc
ret
xchg
jno
push
jae
fsubrl
xchg
jno
loop
adc
data16
div
pop
fbstp
sub
rorl
pop
cmp
dec
dec
lods
insl
fidivrl
int
int3
cmpsb
ljmp
jecxz
or
arpl
fisubrl
push
ret
xchg
out
movsb
sti
pusha
fldcw
dec
aam
xor
add
adc
cmp
int
adc
sub
mov
das
sbb
cltd
sarb
es
in
jae
push
pop
adc
mov
mov
movsb
ret
cmpsb
lea
or
sbb
idivl
add
mov
test
call
inc
sub
xchg
xchg
int
mov
in
pop
adc
imul
leave
pushl
sub
inc
leave
je
pusha
sub
adc
pop
cld
adc
and
pop
xchg
xchg
adc
adc
cmpl
aam
cmp
or
inc
mov
test
pusha
pop
ss
mov
std
mov
movsb
jge
xor
sbb
mov
repz
leave
gs
mov
ja
dec
pop
mov
nop
stos
mov
sbb
sub
inc
sub
call
pop
mov
add
sti
enter
ret
xchg
add
clc
adc
out
int
mov
ret
es
pop
nop
mov
sub
or
adc
mov
cmpsb
sbb
hlt
push
dec
imul
dec
subb
subl
pop
daa
icebp
and
lret
inc
mov
inc
int
inc
subb
cmp
stos
test
test
out
pop
and
fldt
out
adc
fsubr
sub
mov
sub
rcll
sub
stos
or
sub
dec
and
and
xor
lcall
jmp
fiadds
mov
inc
ss
mov
xchg
xchg
jle
mov
push
inc
fnsave
mov
inc
sub
shll
and
data16
dec
fwait
std
fiadds
inc
sahf
lds
sarl
or
jns
pop
jns
sbb
ja
mov
jl
sub
and
push
lcall
pop
dec
lret
gs
into
leave
stos
int
rcr
ljmp
mov
lcall
in
pushf
test
dec
stos
mov
push
xor
inc
fdivrs
and
popf
xchg
or
jge
cmp
aam
push
mov
negl
jp
or
in
in
sub
pop
xor
mov
and
cmp
and
cmp
cs
dec
and
in
icebp
test
adc
aas
popa
imul
mov
mov
lahf
movsb
adc
andl
lods
nop
cmp
adc
cmpsb
outsl
xchg
mov
aad
gs
cmp
xor
cmp
inc
cmc
push
sub
jbe
jg,pn
ret
or
dec
daa
jb
dec
adc
out
popa
fcompl
scas
mov
cmp
sbb
mov
sbb
popa
mov
jle
test
mov
mov
aad
subl
add
divb
into
out
pop
inc
pop
lods
pusha
xchg
xor
jo
rorb
xor
mov
xor
xchg
adc
mov
cmp
and
pop
movsl
or
and
adc
stc
cmp
pop
movsl
cltd
imul
js
rorl
mov
cli
mov
cld
push
inc
xchg
or
jle
xor
mov
dec
or
bound
outsl
pop
dec
sbb
clc
movl
stos
jle
xchg
xor
insl
test
loopne
test
sbb
push
xchg
fs
mov
add
and
push
out
xor
xlat
cmp
inc
and
mov
in
push
push
mov
xchg
jo
lods
js
ds
aas
ljmp
fdivrp
lock
mov
pop
mov
inc
stc
mov
sbb
pop
cli
inc
addl
jmp
mov
sti
cs
mull
cmp
and
rorb
int
push
lea
or
mov
fldcw
jle
lahf
mov
jg
ds
or
sarb
mov
pop
cmpsl
lock
jae
mov
mov
adc
aaa
or
es
popa
cs
jno
enter
loop
fsubrs
push
adc
jmp
pop
int
inc
add
dec
fwait
loope
add
out
xchg
mov
and
jo
cli
dec
fistpll
sbb
notb
jl
xchg
mov
jg
stos
fstpt
add
xchg
sub
adc
sub
iret
ds
inc
lea
dec
adc
aas
icebp
mov
lea
inc
and
xor
mov
loop
and
inc
add
push
nop
inc
iret
inc
adc
add
and
cmp
cmpsl
xor
push
rcr
int
stc
mov
xor
mov
movsl
dec
cmp
add
cltd
push
iret
push
sub
mov
sub
lods
jmp
xchg
mov
xchg
into
add
sbb
xor
and
sub
std
gs
jecxz
popf
xlat
in
xor
jbe
mov
mov
sahf
adc
gs
stos
ficoml
xor
js
sub
add
pop
shrb
jl
sub
int
jle
sbb
imul
inc
dec
je
or
inc
dec
or
cmp
nop
push
repnz
sub
and
add
or
dec
mov
sbb
adc
mov
mov
lods
sbb
jae
stos
add
xor
lret
push
nop
insb
or
mov
mov
adc
jmp
mov
push
inc
or
mov
xor
lds
pop
test
loope
ss
cmc
int3
je
cmp
hlt
idiv
les
daa
fistpl
inc
jle
lret
cmp
jg
repz
loop
ds
xchg
cli
in
fbstp
push
insb
dec
pop
mov
or
sbb
inc
cmp
imul
mov
out
mov
icebp
pop
lds
mov
xchg
cwtl
repz
jge
loop
outsb
xor
or
roll
sahf
fdivl
sub
and
test
repnz
mov
lods
xchg
cmpsb
lret
lods
inc
mov
inc
sub
jl
inc
into
inc
pop
inc
pop
mov
mov
jmp
outsb
stos
inc
js
cmp
pop
scas
stos
pop
push
adc
pusha
mov
jo
andb
pop
clc
xor
imul
or
xchg
lcall
pop
fists
repz
cmp
dec
mov
inc
cli
and
cmp
xchg
pop
aas
cwtl
out
je
mov
scas
repnz
leave
ds
call
lds
push
xchg
jge
outsl
dec
adc
sbb
sub
and
jno
push
pop
stos
fsubs
cltd
mov
fiaddl
pop
jle
add
fsubrp
arpl
adc
out
aad
inc
test
cs
gs
addr16
inc
xchg
mov
int
lea
roll
cwtl
icebp
push
lahf
int3
mov
daa
movsb
sahf
cmpsb
repnz
data16
pushl
sarl
cmpsl
in
sub
dec
rorl
fiaddl
lret
sbbl
xor
jns
fcomi
push
cltd
movsl
jae
scas
push
xchg
loope
and
fdivs
pusha
std
loope
cltd
xchg
mov
std
rorb
hlt
inc
mov
loop
in
aad
lcall
outsl
push
and
mov
fcompl
jl
iret
pop
or
adc
aaa
loop
mov
push
arpl
sub
push
mov
sarl
xor
addr16
push
cli
mov
xchg
xlat
clc
andb
push
and
rclb
scas
arpl
pusha
addl
mov
aad
das
mov
add
pop
in
sbb
mov
adc
or
sbb
fldcw
dec
and
mov
add
insl
lods
adc
xlat
mov
jns
test
jns
mov
push
cltd
cmp
and
fstps
and
ds
enter
not
in
mov
mov
gs
outsl
xchg
movsb
push
mov
mov
enter
or
pushf
jb
inc
cmp
xchg
andnps
push
mov
mov
shlb
push
dec
aad
push
mov
iret
dec
cmp
cmp
lret
xor
and
or
imul
aas
jb
hlt
add
pop
pop
add
or
fdivs
push
or
sbb
fmuls
mov
cmpsl
xor
hlt
hlt
sbb
mov
das
sub
mov
lret
adc
sbb
sahf
stos
dec
xor
or
orb
fldcw
shrb
das
pop
pop
lods
scas
fdivp
mov
xchg
xor
sub
sub
xor
sti
gs
int
jl
sbb
lds
sbb
jae
sbb
in
cmpsl
jae
or
aas
xchg
jmp
jnp
in
dec
cmp
aas
dec
cmc
and
scas
mov
dec
aaa
mov
dec
xchg
or
sub
out
nop
data16
icebp
inc
push
jb
ret
inc
clc
jmp
pop
or
xchg
test
jecxz
xchg
inc
hlt
stc
aam
adc
sbb
les
jecxz
lods
js
mov
cmp
jb,pt
adc
push
mov
pop
add
mov
push
xchg
xor
add
xchg
stos
adcl
mov
jbe
loopnew
add
in
pop
sub
lahf
mov
jecxz
popa
out
fisubrl
bound
mov
fldl
je
int
mov
cmpsb
xchg
push
xlat
cmp
ljmp
pop
mov
adcb
lret
sub
arpl
sarb
insl
add
xchg
pop
scas
inc
es
cmp
loope
popa
push
sbb
inc
popf
sub
xor
push
mov
mov
das
mov
and
jne
cs
fisubl
jnp
jmp
xchg
fisubrs
jmp
xchg
movsl
pusha
ret
sbb
fs
pushf
pop
and
push
pop
inc
lret
push
lds
cmp
xchg
test
outsb
movsb
iret
and
test
movsl
pushf
fstl
inc
pop
cwtl
ds
jge
addb
mov
or
mov
stos
call
xchg
daa
mov
or
insb
xor
dec
xor
fstpl
imul
icebp
sbb
aaa
nop
aas
dec
sub
jl
mov
add
pop
inc
mov
shl
fimuls
mov
sub
xor
or
pop
int3
loope
or
rep
cmc
add
cmpsb
enter
adc
cmc
xor
fstpt
inc
scas
mov
out
fildl
call
sbb
mov
jl
scas
ret
or
sti
push
leave
push
clc
es
mov
stos
aam
popf
adc
mov
sbbl
push
adc
cmp
decb
lods
pop
dec
popf
into
sbb
fs
dec
push
jp
xor
adc
cwtl
mov
das
cmp
mov
out
outsl
push
js
jle
jno
add
xor
repz
sarb
inc
fisubrs
cmp
xchg
hlt
xor
insb
lcall
dec
mov
and
mov
push
pop
rcl
lock
mov
mov
ret
nop
and
jne
lret
mov
jp
adc
inc
out
jno
fstpt
mov
sbb
xchg
pop
jg
pop
push
loopne
xor
imul
int3
pop
xchg
aam
push
mov
in
sbb
pusha
add
inc
rcrl
lock
pop
repz
inc
stos
mov
or
nop
lods
fcoml
mov
stc
dec
cwtl
les
sub
xchg
sbb
lods
mov
cmpsb
fs
mov
cmc
sahf
rcr
sub
test
inc
mov
pop
mov
pop
mov
mov
nop
mov
fwait
cltd
cmp
adc
cli
aad
sub
sbb
clc
loop
cmp
pop
and
pop
and
dec
jne
in
pop
mov
jnp
mov
pop
rorl
lea
call
test
je
test
adc
pop
cmp
loope
sbb
les
call
and
ret
fildll
mov
cmp
jo
decb
sbb
aad
in
repz
cmp
orb
and
scas
bound
adc
cld
cld
pop
push
xchg
mov
or
mull
je
pop
movsb
or
and
movsl
stos
and
jbe
lcall
adc
mov
dec
stc
cmp
push
roll
clc
push
xor
pop
leave
pop
std
adc
add
popa
mov
push
lock
repnz
lods
push
cmp
outsl
aaa
push
xor
movsl
xchg
cmp
sbbl
jo
pop
leave
mull
or
rol
pop
addr16
aas
ds
push
addr16
sbb
popa
jae
sbbb
loope
xchg
mov
inc
lds
lahf
rol
sbb
mov
mov
jbe
mov
cltd
mov
pop
mov
ss
popf
pop
mov
call
dec
mov
add
pop
aam
cltd
mov
xchg
xchg
out
lods
mov
inc
lret
nop
jns
xor
lods
data16
loop
mov
fisttpl
xor
sbb
cwtl
jnp
xchg
and
je
or
add
and
or
repnz
lret
xchg
repz
jns
addr16
mov
cmc
inc
dec
mov
nop
pop
js
hlt
mov
outsb
call
mov
std
hlt
dec
mov
in
out
stos
lods
or
inc
adc
nop
xchg
inc
pop
ror
loopne
mov
adc
lods
bound
clc
test
xor
arpl
repz
adc
sub
and
sub
fwait
cmpsl
push
sarl
dec
xchg
xor
push
daa
fnstsw
mov
std
imul
cmpsb
test
test
or
ljmp
je
jne
lock
jns
test
fsts
jl
dec
shl
fdivrp
popa
xchg
leave
cli
pop
out
inc
cmpl
enter
xchg
scas
sti
xchg
into
lods
jg
pop
mov
fmul
add
xor
imul
out
imul
loop
mov
cmpsl
dec
mov
nop
lock
sub
or
adc
pushf
cli
push
test
sahf
daa
imul
add
cmpsb
push
ffreep
adc
mov
int
push
call
test
mov
lea
pop
add
test
adc
fwait
jge
outsl
loopne
stos
rclb
sbb
fdivp
int3
clc
mov
loop
add
ret
scas
in
mov
incl
push
pop
add
or
mov
shlb
push
lcall
xchg
cmp
push
mov
stos
jbe
movsb
xor
ss
test
out
cmp
sbb
call
je
in
cli
popf
jecxz
ds
int
int3
mov
pop
jae
xor
push
lea
xor
cmc
jbe
sbb
insb
push
jl
addr16
or
idivl
clc
das
jp
adc
jl
push
int
and
repz
rorl
clc
stc
mov
jmp
cmc
or
push
fcmovb
lods
call
and
repz
push
iret
cmp
or
sub
xlat
pop
shll
mov
sub
or
hlt
shl
sub
lds
test
fidivrl
fstps
jne
mov
adc
pop
loop
nop
rorb
aam
xor
das
and
nop
sbb
sub
or
sbb
aaa
inc
inc
scas
vrsqrtps
pop
push
hlt
push
bt
push
enter
aam
push
mov
cmpl
std
xchg
jmp
push
sbb
icebp
addb
sbb
inc
add
xchg
scas
repnz
push
and
jg
insb
mov
xor
in
and
sbb
enter
jno
and
sahf
hlt
lods
fsts
sbb
rcrl
push
jb
push
push
xchg
roll
mov
mov
push
aam
xor
int3
popf
insl
inc
aam
push
out
aas
lcall
in
fisubrl
pop
jp
sub
sub
pop
pop
jns
adc
lahf
hlt
dec
sub
icebp
sti
decl
push
sub
sti
aas
adc
cli
mov
test
mov
pop
adc
or
pop
mul
sahf
cld
je
clc
or
ffreep
insl
cltd
jne
sbb
call
lcall
test
push
adc
jl
inc
jecxz
cmpsb
dec
repz
in
jb
fstpl
stos
arpl
aaa
or
mov
insb
mov
fildl
and
xor
ljmp
push
sti
popa
mov
frstor
inc
popf
js
add
lods
test
or
aaa
out
fistpl
mov
dec
or
sub
mov
lahf
add
stc
shlb
test
sub
scas
mov
bound
shll
pop
sub
mov
les
push
mov
nop
iret
fbld
shl
ljmp
subb
out
inc
pushl
push
jbe
fnstenv
mov
outsl
jbe
clc
fdivrl
xor
pop
xchg
gs
call
dec
mov
and
out
mov
jp
repnz
decl
iret
enter
mov
push
test
inc
sbb
xor
push
sarb
xchg
mov
or
or
cmp
ljmp
in
adcb
or
mov
xchg
fcompl
jmp
jge
inc
dec
mov
mov
mov
sub
lods
inc
xlat
cmp
out
xor
cmpsb
mov
jle
test
inc
mov
xorl
cld
mov
sbb
add
sahf
cmp
mov
mov
ret
aam
mov
pop
addr16
jbe
mov
fisttpll
add
hlt
dec
js
jns
xchg
lock
dec
pushf
ret
mov
stos
dec
jmp
imul
inc
dec
test
shrb
and
movsl
lahf
ds
in
aaa
sub
out
sahf
lock
adc
or
int3
lret
and
push
dec
aad
ds
sar
jp
mov
adc
dec
mov
xor
push
out
sahf
mov
pop
sub
lar
sub
std
int
inc
mov
xchg
repz
inc
add
sti
push
rorb
mov
xchg
adc
sbb
test
xlat
ss
sbb
repz
xor
dec
or
ds
les
jne
pop
nop
cwtl
mov
mov
mov
and
lret
mov
or
xchg
loopne
pusha
and
lods
rcrb
das
insb
and
lahf
sti
cmp
xchg
int
xchg
addr16
out
out
aam
loope
jbe
xchg
movsl
add
repnz
xchg
sbb
cs
ret
lds
add
in
mov
dec
out
or
or
jae
in
shrl
sbb
pop
inc
jae
xchg
and
scas
out
jo
mov
dec
les
dec
xchg
lods
div
sub
or
mov
adc
or
mov
push
movsb
mov
jae
dec
jmp
cmp
mov
push
push
testl
cli
or
popa
mov
sub
mull
push
sahf
mov
jne
shlb
adc
ret
pop
mov
push
sbb
jp
jnp
loop
mov
inc
xchg
sub
adc
js
out
rolb
sub
into
push
jns
divb
mov
jmp
xorb
sbb
xchg
sub
mov
rorb
cld
mov
xchg
stc
mov
pop
sbbb
iret
daa
stos
neg
xchg
movb
stos
outsl
push
push
or
ds
dec
pusha
cmp
xchg
pushf
repz
mov
mov
shr
insl
mov
mov
mov
dec
cmp
shll
sbb
and
lret
mov
inc
xchg
fldt
sbb
mov
in
iret
xlat
sahf
aas
cld
cmp
fildll
sub
cmp
add
xchg
cmp
js
mov
pop
aad
sub
sub
or
es
dec
jae
cmp
cmpsl
cmp
xor
jae
jbe
xor
fsubp
pop
cmp
jmpw
pop
pop
hlt
int
rcrl
lds
repz
in
cs
test
mov
pop
sub
fisttpl
dec
fistpll
push
push
pop
cmp
xchg
sbb
jns
addr16
repz
shlb
mov
popf
inc
sahf
or
paddb
in
mov
dec
jb
mov
pop
or
insl
addr16
out
sbb
push
shr
adc
or
cmp
icebp
fiadds
aaa
xchg
add
or
outsl
int
push
cmpsb
mov
shlb
scas
xchg
and
add
mov
cltd
movsb
lea
push
push
rolb
fistpl
jmp
sub
cs
jae
std
pop
pop
sub
xchg
aaa
je
mov
icebp
and
sti
rcrb
dec
xor
pop
imul
jb
in
int
or
negb
test
stc
sub
adc
or
ficomps
mov
ret
mov
mov
jno
ds
pusha
adc
or
jb
int
mov
repz
mov
loope
fwait
dec
sub
fnstenv
add
cmpl
and
add
daa
sub
test
xchg
jp
pushf
fwait
dec
sub
addl
int
sbb
cmc
adc
ret
jo
ret
dec
push
mov
lods
sub
or
push
imul
clc
sti
je
fists
pushf
ret
cli
ja
es
int
dec
xor
test
ss
orb
out
ret
jb
mov
popa
push
ds
cmp
xchg
in
push
pop
pusha
sahf
movsl
imul
push
dec
pusha
clc
jmp
mov
jne
and
adc
movsl
ljmp
jae
mov
loope
xlat
movsl
inc
pop
jns
push
inc
cmc
jmp
xor
sbb
into
and
std
jmp
xor
enter
nop
xchg
xchg
movsl
js
and
icebp
jo
sub
out
mov
fs
pop
sbb
sbb
mov
sub
and
hlt
mov
mov
std
xor
sbb
xchg
stos
adc
repnz
jecxz
pop
xchg
sahf
adc
aaa
pop
in
sbb
jb
in
adc
popa
divb
shlb
out
movsl
mov
jae
inc
pop
dec
movsb
mov
add
pusha
inc
sbb
icebp
xchg
notb
movsb
cmp
push
movsb
shl
int3
cmc
adc
sar
xchg
inc
adc
in
cmp
iret
lds
pop
and
mov
mov
int
sbb
sub
jl
xchg
sub
xchg
xor
shr
ds
mov
mov
sar
popa
insl
ret
add
jmp
aad
adc
and
xchg
sub
mov
stc
dec
lcall
adc
lods
ss
pop
test
imulb
repnz
jg
lods
inc
loope
jl
pop
inc
movsl
call
lret
sbb
inc
shl
fbstp
dec
daa
xlat
aas
aam
in
pusha
or
or
and
pop
xchg
mov
mov
hlt
and
in
push
shrb
add
lahf
lds
mov
mov
or
add
cmpsl
incb
adc
inc
rorb
adc
sbb
inc
incb
insl
pop
hlt
dec
xchg
dec
arpl
mov
mov
and
pop
lods
movsb
sub
cltd
and
cmp
xchg
pop
fadd
dec
jo
mov
dec
inc
leave
cs
or
inc
pop
pop
nop
pcmpgtb
pop
or
push
ficoml
pop
sahf
les
xor
cmp
mov
out
sbb
mov
xlat
mov
lds
dec
in
cmpsb
mov
or
decl
fdecstp
int
mov
pop
icebp
in
bound
sub
sbb
js
loopne
jmp
inc
and
addr16
cld
scas
dec
cli
dec
pop
sub
jae
dec
das
jae
sub
cmpsb
fsubrs
idiv
sbb
push
add
in
inc
dec
lods
pop
push
push
outsl
imul
je
lret
xlat
pop
clc
xchg
jle
and
xlat
jg
loope
jp
cmpsb
sub
loopne
and
cmp
into
sub
sub
aaa
jne
mov
sahf
mov
xchg
xor
mov
xchg
hlt
cli
xchg
cmpsb
scas
dec
iret
sub
mov
sbb
outsl
pusha
inc
mov
sbb
inc
and
xchg
lods
and
pop
fwait
js
cmp
mov
push
loopne
xor
mov
push
daa
nop
stos
sbb
mov
rcr
push
and
or
sbb
pop
xor
jg
mov
rol
inc
arpl
ja
xor
dec
jbe
cmpsl
lods
insb
int
xor
movsb
lahf
mov
add
sub
fldt
push
dec
out
xchg
xchg
mov
xchg
dec
ja
dec
mov
xchg
out
fs
or
mov
insb
inc
push
mov
inc
test
adc
pop
mov
pusha
cli
jb
cmp
test
jl
insb
add
ss
or
mov
inc
daa
jbe
aas
push
adc
and
mov
ljmp
and
out
je
dec
ja
adc
hlt
repz
push
int
pop
int3
xor
adc
gs
cmpsb
lods
popa
lret
out
push
mov
out
fidivrs
cmp
xchg
pop
loop
sbb
push
pop
lods
mov
push
xchg
dec
inc
inc
sub
aaa
add
ret
outsl
jge
dec
fdivs
sti
stos
inc
lods
rcll
int
mov
and
lea
pop
adc
push
push
mov
int
inc
cltd
fcmovb
jp
xor
dec
mov
push
push
jg
pusha
mov
sarb
dec
sub
nop
call
and
addr16
cmp
xchg
popf
cmc
and
ja
mov
in
aad
inc
ja
xchg
test
dec
push
pop
add
add
pop
xlat
xlat
jecxz
push
push
xor
sarl
je
popf
out
daa
cmp
mov
pop
jge
stc
xor
loope
loop
sbb
mov
mov
outsl
insb
fstpl
stos
adc
fprem1
add
add
aaa
pushf
ret
sbb
movsb
ljmp
or
push
push
dec
mov
cmpsl
dec
mov
jl
pushf
in
frstpm(287
add
dec
lds
iret
sub
mov
xchg
pop
sbb
jb
out
cld
mov
add
pop
jp
cmp
std
call
inc
enter
mov
dec
xchg
xchg
daa
and
xor
scas
std
outsb
jmp
popa
inc
lds
mov
push
dec
cmp
dec
and
push
inc
inc
mov
cltd
sub
mov
negl
lds
jne
or
repnz
movsb
movsb
and
cmpsl
jno
add
fldenv
icebp
cmpsl
jb
jecxz
sahf
push
xchg
inc
nop
stos
add
into
or
xor
push
shrb
lret
aam
popa
xor
and
in
cmc
sub
xchg
add
jnp
lret
mov
push
sub
push
jg
in
sub
inc
mov
int3
add
xchg
stc
loop
xor
imul
punpckhdq
push
dec
scas
push
pop
adc
inc
in
in
shr
fsubl
xor
add
jg
inc
test
cs
daa
mov
notb
mov
push
ret
pop
or
pop
lds
aam
test
pop
add
push
sub
rclb
add
das
xor
scas
and
sub
test
jbe
loopne
fs
mov
dec
movsb
xchg
imul
mov
pop
add
shr
mov
aaa
xchg
mov
mov
push
fmul
push
mov
and
test
inc
mov
test
or
neg
das
mov
add
jle
popf
lret
push
daa
sbb
int3
aas
xor
insl
sbb
inc
pop
std
popa
aam
xor
lret
das
xorl
pop
jnp,pn
lret
and
fisttpll
mov
and
adc
gs
mov
inc
xor
mov
mov
fidivrs
ficompl
test
lea
mov
js
clc
and
push
push
cmp
inc
iret
inc
sbb
fsubl
jmp
sbb
or
cmpsl
into
mov
and
in
fidivs
inc
mov
ja
fndisi(8087
iret
adcb
rclb
iret
pushf
popa
sub
and
mov
test
pop
sbb
dec
and
hlt
push
push
push
outsl
rclb
mov
sti
popf
mov
push
and
xor
mov
jae
shl
popf
ret
sub
jnp
bound
mov
iret
xchg
arpl
notl
pop
add
movb
mov
ret
xor
xchg
push
mov
pop
jbe
or
in
stc
in
mov
fwait
mov
out
aaa
jo
mov
popl
movsb
out
scas
jo
mov
clc
xor
adc
push
mov
mov
cmp
mov
es
stos
sub
sub
mov
aad
lret
mov
aaa
xchg
sub
test
mov
add
sar
dec
adc
movsb
loop
pop
adc
insl
xchg
jg
add
hlt
lds
movl
push
push
bound
adc
xchg
filds
sti
push
repz
sbb
xchg
mov
orb
mov
fwait
cltd
movsl
lcall
adc
out
pop
push
repnz
or
mov
repz
cwtl
std
inc
ror
out
jno
jne
popa
ret
cs
int
dec
out
sbbb
mov
inc
pop
repz
jmp
inc
inc
xor
pslld
jge
icebp
je
scas
pop
push
repnz
hlt
or
sbb
arpl
cli
ja
iret
lods
iret
pop
cmpsb
xchg
sub
dec
movb
push
mov
xor
je
mov
xor
mov
jne
push
jg
pop
add
inc
mov
cmp
dec
xor
sub
enter
sbb
jmp
ret
mov
ficoml
mov
stc
lcall
gs
or
fucomp
pushf
mov
into
jg
or
stos
jnp
mov
fwait
icebp
pop
adc
aam
sbbb
out
add
sbb
fimuls
mov
jns
sub
cld
mov
mov
sub
sub
add
mov
sahf
inc
xchg
mov
inc
into
push
dec
repnz
and
cmp
into
icebp
jp
rolb
inc
push
sbb
lock
aas
xchg
scas
fldl2e
sbb
out
call
adc
adc
adc
aam
pmullw
js
add
mov
clc
push
out
fsubl
cmp
movl
icebp
fcmove
jle
cmp
jmp
add
cmpl
pop
sti
test
xor
test
cs
push
andl
cmpsb
cli
pop
jo
push
int3
inc
pop
dec
dec
push
mov
xor
adc
gs
fistpll
xchg
mul
inc
pop
pop
or
sub
int3
getsec
aas
ds
sub
jmp
cld
out
push
mov
add
dec
push
jns
bnd
push
out
fdivp
je
mov
jmp
push
lea
ljmp
rorl
sahf
mov
and
cs
mov
xchg
dec
test
test
dec
fsubr
loope
sahf
mov
push
jg
int3
mov
pushf
cwtl
fucomi
add
rcrl
pop
inc
shl
pop
repz
mov
lds
int3
cmp
push
iret
addb
test
jns
cmp
xor
std
and
outsb
add
aad
push
mov
sub
rorb
loope
mov
mov
out
or
aas
add
out
sub
hlt
call
je
test
sbb
push
stos
dec
mov
fdivs
mov
das
push
dec
js
jg
dec
jmp
sub
in
gs
push
addr16
mov
pushl
lret
andl
movsb
inc
and
hlt
in
push
js
push
rorb
enter
stc
mov
xchg
inc
addr16
hlt
shll
jne
cmp
ljmp
push
add
xor
icebp
jo
aam
out
sbb
pop
mulb
xchg
mov
sub
cmp
mov
pop
xchg
lret
xor
xor
rcrl
jae
out
inc
xchg
out
lahf
sti
xchg
sub
push
sbbb
inc
push
xchg
stc
or
lahf
inc
push
negb
pop
js
mov
sub
or
push
mov
mov
xchg
ret
mov
movsb
push
iret
int3
leave
mov
sti
call
decl
faddl
sahf
mov
fcmovnbe
test
les
jne
xchg
cmpsb
fistpll
imul
push
scas
jp
inc
mov
mov
adc
pusha
inc
test
stc
fidivs
xor
pop
mov
inc
psrlw
addr16
xchg
fdivrp
out
and
scas
sbb
pop
fstl
or
popa
fdivl
adc
push
idivl
or
lea
mov
cmp
mov
dec
mov
push
out
and
push
enter
mov
rcr
aam
testl
enter
int3
dec
jecxz
jecxz
nop
jne
shll
iret
inc
jge
lds
daa
pop
sbb
adc
loop
inc
push
fdivrs
scas
ljmp
mov
pusha
clc
push
add
push
push
push
sbb
pusha
mov
jge
xor
inc
or
sarl
dec
and
pop
sbb
sti
fs
rcll
mov
jecxz
bound
or
pop
int
dec
mov
xor
data16
push
out
rolb
ret
xor
lret
dec
data16
lret
mov
iret
pop
sbb
push
pop
mov
jne
iret
int
test
mov
rcrl
inc
add
daa
inc
paddsb
popf
enter
sti
jnp
push
xchg
dec
test
ja
adc
sub
cli
inc
adc
pop
xchg
sbb
insl
and
decb
es
clc
sbb
ja
cmp
mov
jge
and
push
inc
cmp
mov
mov
cli
ficoml
fbstp
adc
mov
fmuls
jge
jo
out
and
jbe
xchg
mov
mov
pop
add
ret
ret
imulb
push
ljmp
mov
jo
pop
lcall
push
push
mov
mov
dec
lret
jo
cmp
arpl
jmp
pop
incl
jecxz
fwait
push
mov
mov
pop
mov
es
into
sbb
mov
sub
loope
jmp
push
dec
shll
inc
clc
mov
in
mov
mov
sti
fldl
sbb
adc
push
or
cwtl
dec
lea
mov
fisubrl
or
in
in
in
fdivl
pop
dec
xchg
cltd
mov
and
inc
clc
jbe
xchg
cmpsl
aas
insb
sub
or
repz
and
bound
out
int
fdivrs
push
mov
add
movl
in
and
rcrl
lret
jns
push
add
fcmovbe
xchg
push
mov
stos
shlb
shl
hlt
cmp
arpl
cld
aas
ret
shlb
aas
or
add
and
iret
sahf
xchg
jle
adc
add
pop
call
jne
xorb
mov
mov
jnp
cmp
lcall
add
loopne
mov
mov
fldenv
popa
mov
mov
add
cmp
ljmp
cmpsl
mov
fsubrp
mov
jbe
imul
imul
pop
fs
inc
inc
add
inc
mov
add
cmp
lret
mov
xchg
icebp
repnz
pushf
cmc
mov
sub
scas
fucompp
fcmovb
adc
and
aaa
cmpsb
cli
dec
push
push
jp
aam
repz
add
outsb
fwait
sub
cmp
lock
aas
mov
sarl
mov
sbb
aas
push
ret
repz
pop
pushf
das
adc
xor
test
and
jb
std
scas
call
push
flds
test
pop
cwtl
nop
scas
and
iret
xlat
jp
jae
stc
ds
mov
or
bound
adc
cmp
lock
jnp
sahf
inc
sbb
lea
mov
pop
cmc
adc
fisttpll
imul
mov
xor
scas
jno
xor
into
lahf
and
pop
dec
xor
pop
mov
int
cmpsl
adc
xchg
das
mov
xchg
jg
mov
or
xchg
dec
fsubrs
mov
dec
xchg
xchg
dec
addr16
cli
hlt
pop
sub
mov
pop
cmpsb
call
int
jg
pop
mov
mov
sbb
insl
mov
mov
popa
mov
mov
sub
es
cmp
inc
mov
mov
push
addr16
repz
stos
jp
sbb
rcrl
inc
push
jecxz
mov
xor
sub
stos
inc
fcompl
lea
sbb
subb
inc
pop
mov
loope
jmp
lcall
push
jecxz
mov
out
jb
data16
scas
roll
or
repnz
cmc
lea
and
xchg
jle
out
push
insb
addr16
sbb
pop
dec
mov
movsl
pop
insb
sbb
insl
rorl
push
pushf
jne
inc
jno
fidivs
pop
or
add
mov
xor
lahf
movsl
jmp
and
cli
ret
adc
addr16
adc
mov
pop
scas
and
testl
or
ficomps
cltd
xchg
mov
scas
add
sbb
jo
imul
pop
mov
xchg
jne
scas
fnstenv
inc
push
aam
fdivrs
dec
push
popf
xchg
jno
test
pop
jge
shr
lret
cmpsl
jge
dec
mov
cs
notl
push
mov
push
adc
xchg
adc
push
mov
mov
ret
xchg
sbb
jle
cmpsl
jmp
iret
addb
scas
rcrb
jnp
adc
mov
int3
ja
sub
pop
mov
fistl
ficoms
sbb
addr16
call
pusha
int3
lahf
lret
mov
pop
sbb
pop
sub
sub
sub
pop
das
jge
xor
out
ljmp
xor
sbb
in
fsubl
jbe
adc
push
xor
xchg
xchg
std
xor
mov
inc
ret
mov
sbb
dec
in
js
addr16
idivb
sub
jmp
test
loopne
jl
mov
std
ret
jmp
orb
imul
sti
outsb
div
and
cwtl
fmuls
mov
or
in
leave
xor
ds
repnz
cmpsb
adc
jg
arpl
lods
sbb
mov
push
jmp
sub
push
rolb
xor
out
dec
mov
adc
sbbl
inc
ja
mov
dec
mov
cltd
adc
mov
jge
cli
mov
and
mov
out
rcr
or
out
insl
sbb
pop
or
lcall
jmp
bound
fisubl
lods
lret
push
imul
mov
lret
enter
mov
sub
mov
insl
jl
adc
and
gs
rcrl
in
mov
xchg
jns
fisttps
adc
pop
lret
xor
sbb
cmp
repnz
data16
mov
mov
inc
aas
sbb
xchg
fcoml
dec
mov
add
inc
or
out
fisttpll
mov
movl
xchg
sarb
imul
inc
xor
fisubs
pusha
cli
dec
fcoms
cmpsb
test
outsl
mov
cli
or
mov
or
negl
push
je
arpl
repnz
and
popa
ror
push
dec
push
mov
inc
push
inc
pop
loopne
imul
inc
lods
dec
and
pushf
iret
sub
sub
mov
out
push
rcrb
sub
mov
aad
jno
adc
testb
shl
cmp
aas
adc
mov
push
dec
add
mov
mulb
minps
sbb
andb
add
inc
xchg
mov
sti
cmpsl
pop
sub
mov
addr16
adc
loope
and
mov
bound
or
jge
icebp
lock
arpl
cmpsb
stos
fxch
subb
inc
jne
cs
inc
sub
leave
or
jno
inc
pusha
adc
xor
pop
xchg
pushf
xchg
lock
cmpsl
mov
jle
mov
ss
das
in
aam
scas
xor
fsubs
aaa
frstpm(287
int
leave
mov
mov
xchg
insb
inc
adc
outsb
and
cmpsl
popa
movsb
jb
or
mov
fidivl
push
lock
scas
test
inc
sbb
xchg
rcr
xchg
icebp
lret
inc
xchg
sbb
and
mov
aad
mov
lods
imul
and
fadd
test
push
xor
in
and
pop
push
push
in
push
xchg
test
mov
ret
xlat
dec
push
xchg
mov
daa
popa
ja
adc
pop
mul
pop
and
loopne
and
mov
aaa
imulb
xor
insl
loopne
jl
addb
aas
mov
jge
jnp
repnz
loop
mov
mov
and
push
or
lcall
cmp
ja
loop
stos
xchg
loope
in
leave
add
mov
xchg
in
in
stos
fs
mov
aam
jg
fidivrs
sahf
negb
dec
cmp
repz
jge
xchg
sbb
aaa
fildl
outsb
dec
or
dec
mov
jno
es
push
mov
xchg
iret
add
xchg
fistpll
sub
mov
inc
xchg
out
or
cld
fs
inc
imul
pop
cmp
loope
push
sub
mov
stc
out
into
sub
sub
adc
mov
repnz
push
mov
pop
or
fs
jecxz
xor
or
ja
pushf
xchg
flds
xor
jne
test
adc
stos
xor
faddp
divl
xor
cmp
rcll
jbe
xchg
imul
arpl
jmp
dec
push
les
dec
mov
ffreep
cmp
sbb
rorl
push
es
mov
fsubl
pop
and
inc
push
aad
lea
push
repz
ss
mov
mov
sub
clc
aaa
jo
pop
out
jbe
clc
testl
adc
jae
lret
jg
aad
xor
mov
sub
xchg
icebp
in
sub
cld
jb
mov
push
int
inc
add
std
cld
repz
es
inc
pop
std
fldt
and
xlat
adc
stos
jl
sub
movsl
test
in
movsb
and
daa
and
mov
mov
dec
xchg
or
ret
ret
adc
xchg
addr16
js
fisubl
sbb
adc
rcr
inc
dec
push
dec
adc
sbb
dec
pop
sahf
mov
pop
dec
xchg
stos
mov
jmp
icebp
ret
movsb
cmp
aad
sbb
mov
jno
sahf
fwait
sub
sub
adc
pop
push
push
cmpsl
sbb
pop
mov
mov
lock
adc
popf
test
xor
mov
sbb
movsl
mov
add
jge
and
idivb
or
xor
xor
fnstenv
add
lea
addr16
popw
bnd
mov
sbb
add
shrb
fidivs
in
ds
imul
dec
cmc
notl
in
xchg
pushf
sti
push
sbb
aaa
cltd
xchg
pop
mov
xchg
orb
andl
cmp
add
mul
repz
call
sub
pop
cmp
iret
or
sbb
lcall
sub
jl
int
dec
pop
xchg
stos
bound
push
cld
ss
les
imul
scas
adc
jg
and
adcl
and
inc
xor
jge
mov
cs
cmc
leave
mov
shlb
outsb
aas
jle
lods
loop
add
rolb
movsl
cmp
imul
lea
xchg
jle
loopne
sbb
sub
xorb
ret
or
dec
rolb
in
mov
daa
dec
xor
xor
mov
movsl
ljmp
nop
push
test
push
add
sbb
int3
dec
or
cmp
mov
sarl
jge
jne
jb
lods
je
incl
fisttpll
pop
xchg
fisubl
rolb
imul
jbe
fucom
pop
xorb
je
jno
test
jmp
push
enter
sbbl
sarb
pop
dec
test
cmp
fadds
dec
xor
push
mov
pop
loope
and
pop
inc
cmp
sbb
xchg
lods
call
outsl
inc
add
push
stc
mov
pop
outsb
shr
mov
cmc
sbb
push
aaa
pop
icebp
dec
lock
push
lahf
mov
sti
cmp
aad
test
repz
cltd
inc
xor
mov
jbe
push
mov
cmp
dec
fwait
mov
xor
lea
sahf
or
test
bound
into
incl
test
inc
test
test
out
arpl
stc
push
xor
fdivrl
sahf
lods
cmp
sahf
fmul
or
push
je
mov
mov
out
add
mov
out
dec
insb
test
jle
xchg
out
ss
pop
adc
lahf
scas
jmp
mov
xchg
in
negb
cmc
out
mov
das
out
lods
dec
pop
mov
pop
popa
cmpsl
jge
sbbl
clc
popf
ds
popf
push
xchg
out
push
pusha
stc
pop
roll
fwait
push
imul
popa
sub
clc
inc
roll
outsb
pushf
rorl
nop
cwtl
adc
iret
inc
lcall
dec
and
je
cmpsb
mov
in
dec
push
and
filds
imul
mov
mov
dec
pandn
xor
in
test
mov
mov
sbb
fwait
call
lret
outsl
dec
mov
sub
gs
mov
scas
sub
sbb
pop
loop
xor
jmp
fbstp
andl
cmp
adc
fidivs
ds
cli
mov
insl
sti
lret
je
cs
movsl
lahf
arpl
sbb
xchg
xchg
lods
mov
mov
popw
std
xchg
xchg
push
test
push
test
cltd
sbb
sub
fimull
sub
and
mov
xchg
shl
cmp
jecxz
xchg
movsb
aas
and
movsl
add
loop
aaa
aas
add
sub
pop
fildll
shlb
jmp
lea
scas
subb
lods
jmp
aam
jne
mov
sub
inc
pushf
pop
pop
dec
lea
inc
aaa
mov
mov
mov
sbb
cmpsb
mov
cmpsl
not
mov
bound
mov
xorl
ss
xchg
and
insb
pop
dec
lret
sbb
mov
inc
pop
testb
popa
jbe
xchg
and
test
pop
mov
inc
dec
or
imul
mov
into
outsb
cld
xchg
sbb
or
cmpsl
add
int3
cli
enter
dec
inc
xor
push
fbstp
pop
jecxz
in
dec
jb
int
inc
and
add
ret
sbb
pop
insb
mov
lock
jge
sbb
out
adc
inc
xorl
aad
adc
aaa
push
bound
fstl
push
sbb
jo
movsl
cwtl
jge
xlat
popa
mov
clc
mov
xchg
push
push
add
mov
mov
dec
adc
mov
mov
mov
lcall
sub
clc
movsb
xchg
jl
mov
lret
iret
adc
out
sahf
push
sbb
xchg
leave
sub
rcrl
xchg
and
lods
mov
pop
sub
mov
lea
out
imul
orl
mov
es
shrl
xor
ss
pop
fisubrl
cmp
or
fstpt
mov
in
dec
in
fs
adc
or
pop
mov
mov
mov
xlat
and
mov
jl
int
jo
dec
xor
fwait
add
mov
adc
lods
cmc
xor
cmp
add
inc
mov
hlt
sub
mov
inc
test
rcrb
repnz
xchg
jge
fcmovnu
je
scas
ljmp
sti
aas
push
movsb
in
arpl
repz
movsl
icebp
cmp
cmp
popa
cli
movsl
imul
jno
stc
mov
jo
push
and
inc
fwait
test
mov
test
add
lahf
push
ret
pop
cltd
icebp
dec
loop
enter
push
es
add
test
mov
in
xor
inc
sbb
js
push
mov
fdivl
sub
ds
fdivrs
fcomp
repnz
mov
jno
rcl
mov
cs
lcall
aas
inc
inc
mov
loope
std
lods
loope
sub
cltd
dec
pop
mov
or
loope
leave
mov
sbb
std
or
jmp
enter
cmp
adc
mov
jge
mov
xchg
jg
and
xor
and
stos
outsl
mov
hlt
mov
decl
sub
mov
push
fs
mov
cs
pop
mov
shll
sarb
imul
imul
dec
enter
push
mov
add
inc
mov
cmpsb
fidivrl
repnz
xor
and
cltd
pop
ja
into
lret
and
sarl
add
pop
adc
jmp
ja
lahf
xorl
adc
sbb
pop
or
ja
sbb
jmp
cmpsb
das
adc
aad
cmp
mov
out
sahf
fcmovb
pop
add
or
xchg
push
xor
mov
testl
decl
add
jne,pn
fdivr
xchg
add
lea
mov
in
jno
jo
xchg
dec
call
xchg
xor
leave
in
jbe
pop
jns
inc
fcoms
add
xchg
js
bound
and
loope
mov
ja
jnp
sbb
dec
sub
movsl
sti
pshufw
xchg
clc
mov
imul
das
aad
sub
outsl
jb
lcall
cwtl
xchg
cld
scas
idiv
aad
and
push
arpl
xchg
mov
pop
push
sbb
sbb
popa
pop
shr
mov
leave
mov
in
jne
lds
ja
dec
cs
stos
mov
jbe
or
sub
mov
rorb
xor
push
outsb
xlat
or
es
lods
xchg
jo
inc
dec
mov
mov
not
mov
pop
xlat
ss
jnp
sub
test
daa
push
push
and
cmp
addl
pop
jno
inc
and
cli
add
fadds
fiadds
cwtl
xor
dec
xor
inc
lret
divl
sub
es
bound
push
in
add
les
push
jp
mov
enter
pop
fsubl
sub
adc
cmpsb
pop
cmp
fcmovnu
cs
inc
push
cmp
xadd
cltd
pushf
shr
mov
int
ja
lods
xor
stc
sub
out
add
test
sarb
adcl
lea
insl
sbbb
add
inc
lret
adc
cmp
cwtl
cmp
mov
lahf
dec
out
push
fmull
jge
cmp
or
mov
into
push
mov
cmpl
dec
push
ljmp
xor
or
adc
mov
rolb
mov
add
cmp
lods
fwait
dec
stc
vaddsubps
aam
or
xchg
addl
xchg
jge
and
push
out
repnz
push
xchg
pop
pop
aam
mov
push
jge
mov
lahf
mov
aas
jge
scas
icebp
xchg
jmp
pusha
adc
cmp
movsl
jns
call
repnz
dec
int
mov
push
icebp
imul
js
push
ret
cmp
push
in
add
fadd
pop
add
out
icebp
push
dec
cmpsb
and
lahf
test
outsb
pop
mov
roll
jnp
daa
ret
lea
dec
ds
add
cmpsb
mov
into
pushf
jns
lods
and
jp
xor
lock
ds
mov
jns
and
mov
dec
mov
imul
int3
pushf
push
inc
xor
ds
js
pop
into
jo
popa
sahf
sti
jecxz
stc
jno
xor
pop
lods
sar
insb
test
inc
cmp
or
in
xor
sbb
loop
adc
add
aam
push
in
cmp
js
aaa
movsb
movsl
dec
popf
mov
inc
mov
mov
inc
in
adc
or
aaa
xchg
pop
stos
xor
jg
xchg
mov
iret
sti
pop
xorb
inc
mov
and
addr16
jl
jle
pop
insl
pop
lds
add
mov
aam
add
stos
or
orl
in
rorl
gs
cmp
mov
lcall
dec
scas
movsb
cmpl
dec
mov
in
lret
mov
mull
cmp
push
jae
cmp
imul
sub
mov
add
xchg
stc
xadd
mov
inc
push
fnstenv
pop
jno
mulb
pop
call
inc
dec
sbb
sbb
jl
test
push
jl
mov
jle
fcomp
add
cld
idivl
inc
roll
and
xchg
push
ja
outsb
add
xchg
adc
xchg
jo
stos
faddp
inc
into
sti
in
rorb
lahf
out
mov
mov
or
fstpt
xchg
mov
adc
mov
mov
push
int3
inc
insl
hlt
insl
or
cmc
mov
aaa
pop
jle
xchg
movsl
push
jmp
fldenv
pop
aaa
pop
push
or
push
flds
stos
push
iret
inc
cltd
mov
push
pop
dec
stos
jmp
int
scas
pop
int
iret
arpl
enter
lahf
lret
insb
sbb
pop
pusha
test
lds
enter
xchg
lret
add
sahf
dec
gs
pop
lods
xchg
out
mov
int
push
xlat
push
push
xchg
sbb
fiadds
outsb
push
sbb
xor
das
enter
and
addr16
aad
nop
scas
loope
xchg
mov
cmp
push
push
add
push
lahf
and
mov
jb
jne
lods
cmp
mov
insl
xor
pop
inc
scas
ds
testl
out
cmp
and
push
js
les
jecxz
mov
xor
test
pop
sub
ja
or
lea
fistpl
ret
jae
push
cs
cmp
ja
ss
mov
pop
aaa
pusha
mov
push
or
into
rorb
aas
stos
mov
mov
sub
xchg
inc
cs
inc
mov
mov
push
es
cmp
xor
and
rcrb
push
or
mov
mov
mov
jnp
aad
fimuls
inc
xchg
bound
xchg
cmp
test
sarl
popf
cltd
xor
int
or
mov
push
and
mov
xor
in
out
lret
push
xchg
jmp
mov
xchg
int3
add
dec
je
shll
inc
je
cmp
xchg
into
aaa
in
mov
jecxz
xchg
sub
inc
jae
add
ja
stc
aam
inc
push
and
or
xchg
cmp
insl
add
dec
xchg
adc
or
outsl
ret
adc
jp
push
xor
inc
hlt
pop
pushw
fiadds
daa
cmp
xchg
xor
mov
cmp
cld
push
loop
pop
shl
das
pop
xchg
cmpsb
xor
jl
out
orl
xor
xchg
lea
pop
cmpsb
inc
jae
mov
xor
inc
mov
cmp
mov
push
dec
movsb
fistpl
cmp
test
jbe
cs
inc
push
stos
mov
roll
in
enter
push
jns
test
or
gs
xorb
jne
push
jp
in
sub
lret
in
lret
inc
xchg
pushf
jecxz
sbb
pusha
cs
js
cwtl
popf
shr
jle
lret
cmp
into
and
data16
out
loopne
lahf
ret
sub
jns
xlat
push
mov
pop
inc
sub
add
movsl
or
mov
mov
adc
and
scas
adc
test
sbb
seta
int3
ret
inc
fsts
inc
sarl
adc
mov
push
lcall
fdivs
dec
add
or
daa
add
inc
and
or
in
push
xor
cmp
inc
aad
mov
call
mov
int
addr16
data16
outsl
mov
push
std
sbb
loope
cmc
push
jo
push
sti
sub
pop
xchg
leave
add
and
xor
pop
inc
pop
imul
jae
mov
sbb
xchg
shr
mov
out
pop
nop
fsubp
inc
repnz
je
in
xchg
jmp
sbb
cmp
stc
xchg
pushf
out
loopne
or
push
push
lret
scas
cmp
fists
into
xor
ret
gs
insl
je
stc
sbb
push
push
xor
mov
stc
icebp
cmc
xchg
pop
cmp
cmp
and
stc
dec
add
popa
das
push
jnp
push
cmp
fwait
mov
inc
sarb
jle
ljmp
sub
sub
mov
rcll
jge
out
pop
xchg
push
inc
add
mov
rclb
dec
jge
fidivs
cmp
lret
jle
pop
sti
cld
xchg
jmp
xor
xchg
ss
cmpsl
push
pop
aaa
dec
fsubrs
sbb
arpl
aad
jecxz
adc
repnz
in
or
fisttpll
xor
movsl
inc
dec
and
and
loopne
scas
data16
mov
sub
stos
xchg
decb
out
je
loop
pop
xor
mov
sbb
push
lock
jl
pusha
icebp
xchg
xchg
lret
stos
dec
sti
inc
jp
ja
sub
aaa
dec
sub
add
dec
int3
xchg
push
xor
push
jae
jno
add
scas
inc
repnz
repz
daa
xchg
imul
sbb
dec
push
xchg
imul
pop
pop
jmp
test
mov
fdivl
mov
pusha
lcall
add
pcmpeqd
or
cmpsb
add
push
mov
add
aam
inc
jge
adc
ret
pushf
dec
push
scas
les
fdivl
ljmp
cmpb
lret
aas
dec
sbb
les
in
jbe
mov
push
sub
icebp
sbb
lock
lret
in
aad
test
lret
movsl
sbb
les
jbe
pop
out
popa
and
scas
xchg
data16
and
pop
lods
idivb
std
xchg
or
ja
cmpsb
scas
orb
jmp
cmpsb
sbb
sub
insl
shlb
add
jg
stos
and
sahf
test
ret
fwait
cmp
mov
sbb
and
mov
and
xor
inc
push
inc
mov
loopne,pn
push
nop
inc
es
xchg
in
outsb
push
jmp
arpl
sub
sbb
flds
add
insb
mov
repnz
ja
arpl
sbb
push
lods
adc
mov
or
incb
negb
mov
jb
sbb
cli
sahf
inc
cmp
shlb
pop
les
aaa
test
imul
jbe
cltd
call
mov
pop
insl
andl
and
int
and
repz
into
or
sub
je
in
lods
or
push
test
mov
leave
test
dec
aaa
mov
pop
insl
inc
cmp
cmpsb
out
dec
jnp
cmp
push
xchg
dec
repnz
push
inc
inc
jg
mov
int3
inc
jae
push
and
shlb
bound
popf
lret
int
xchg
pop
outsl
cmpsl
pop
aad
fnsave
or
test
xor
push
cltd
push
iretw
scas
out
dec
ljmp
insl
fistpl
adc
lcall
and
pusha
stos
nop
leave
fidivs
inc
or
adc
or
rol
sbb
pushf
xor
push
sbb
mov
js
mov
or
fsubrl
scas
cmpsb
mov
add
aaa
push
ja
cmp
imul
or
lcall
aas
push
cmc
ds
push
jmp
mov
and
subl
roll
js
cmc
popf
das
inc
pushf
faddl
mov
out
idiv
sbb
rorl
movsl
ja
dec
lcall
xchg
inc
adc
sahf
and
fcoms
adc
mov
gs
add
dec
gs
push
sub
jle
popl
adc
pop
fdiv
inc
ss
lahf
cmp
call
xchg
xor
fs
je
mov
aaa
outsl
push
push
xchg
insb
sub
mov
sti
mov
push
nop
pop
lcall
fs
ret
enter
call
sti
dec
jecxz
pop
jle
outsb
hlt
sub
dec
lds
inc
inc
stos
lcall
sub
leave
xor
pop
jns
js
sub
mov
vpmulhw
jmp
movsb
fwait
ja
lods
mov
adc
stos
pop
dec
mov
shlb
sub
push
out
enter
inc
loopne
mov
xchg
dec
xor
and
and
inc
xor
rolb
add
push
cmpsb
push
and
loopne
xor
mov
add
xor
pop
stc
mov
in
leave
pop
imul
test
out
add
fldenv
shl
mov
insl
or
pop
ret
add
xor
stc
ss
ljmp
popa
jl
adc
lods
pusha
sarb
mov
pop
mov
out
push
and
test
clc
cmp
fwait
adc
and
jg
mov
sub
fwait
push
xchg
xor
sbb
bound
cwtl
sbb
inc
data16
andl
popf
xchg
sub
ljmp
shlb
mov
pop
in
scas
out
nop
push
test
xor
getsec
js
das
outsl
add
push
mov
addb
and
je
aas
aas
nop
cli
jge
in
pusha
lods
xchg
cmp
sbb
fisubl
in
push
inc
mov
dec
sbb
push
cltd
popf
mov
cmpsl
fiaddl
cmp
ret
mov
sbb
pop
mov
movsl
inc
sbb
or
les
repz
and
scas
arpl
jge
test
aam
mov
xchg
pusha
pop
jmp
out
jnp
test
mov
cli
dec
jbe
cmp
pop
hlt
dec
loope
sahf
stos
insb
xor
xchg
pushf
test
js
mov
outsb
dec
and
mov
xchg
and
dec
and
mov
into
mov
sti
mov
dec
std
cltd
cmpsl
loope
das
repz
inc
mov
pop
popa
fcoml
mov
mov
lds
data16
inc
cmpsl
sub
inc
and
lea
cmpsl
ret
das
pusha
or
gs
leave
or
xchg
pop
mov
add
adc
mov
cmp
loop
add
mov
add
xchg
stos
jmp
mov
jo
cli
push
cmp
xor
daa
mov
mov
popf
test
cltd
test
add
int3
cmp
fcmovbe
in
iret
rcl
jo
xor
lahf
popa
pop
pop
pop
lds
lock
call
cmpsb
aam
and
lahf
add
jecxz
insb
in
inc
mov
aam
inc
xchg
add
stos
movsb
pop
fisubl
xlat
lods
pushf
xlat
xor
mull
xchg
adc
aaa
push
xor
sti
sbb
loope
in
ljmp
out
push
cmpsb
pusha
adc
mov
cmp
lock
sbb
test
xchg
mov
sbb
inc
ret
xor
sub
loop
hlt
mov
repz
out
xor
dec
in
pop
cmp
lea
or
xchg
in
xor
test
adc
outsl
in
jl
fldenv
mov
push
aad
ret
mov
dec
mov
push
push
xor
cmp
jecxz
adc
sbb
push
aas
fcoml
jo
mov
aad
xchg
outsb
mov
mov
xor
data16
mov
fsubrs
add
push
xchg
ds
out
mov
dec
mov
xor
lods
xor
sub
dec
dec
jo
test
popf
loop
fmul
pop
shrl
xor
jp
sbbb
inc
insl
iret
mov
mov
fcos
pushf
xor
dec
movsb
clc
je
sbb
shll
lea
mov
cmp
dec
movsl
pop
dec
movsb
sbb
out
add
hlt
add
push
cwtl
mov
lock
mov
test
call
or
arpl
xchg
pop
and
sub
orl
xor
out
dec
popa
icebp
sbb
and
xlat
jb
pop
stos
push
pavgw
push
mov
dec
sub
pop
jbe
fwait
mov
in
adc
mov
imul
inc
mov
pop
in
imul
or
out
pop
rclb
dec
push
add
les
pop
xor
sbb
push
xchg
ja
je
xchg
scas
sub
adc
fbstp
push
cmp
add
dec
add
and
or
out
dec
lds
int
sahf
inc
cmp
xorb
rcrb
pop
and
jl
sbb
mov
sbb
mov
pushf
mov
lcall
and
pop
sub
fimuls
lcall
mov
imul
repz
cmp
lahf
xchg
push
je
or
dec
pop
pop
xchg
push
inc
scas
imul
mov
cmpsl
orb
add
mov
lret
pop
mov
call
adc
out
jg
push
aaa
xchg
cmp
jl
aaa
dec
inc
xor
mov
rorb
outsb
mov
mov
mov
int
add
cmp
push
xor
jl
cmpsb
cmp
xor
push
mov
out
sub
mov
push
cli
movsl
jp
lds
sbb
ja
stos
and
aam
loopne
jg
imul
insb
mov
xor
push
fldcw
lods
dec
dec
nop
ja
movb
in
push
and
hlt
add
ja
push
sub
and
imul
shrl
cmp
je
xor
outsl
jecxz
adc
mov
in
sub
nop
inc
aaa
sub
bound
and
fdivl
inc
clc
push
add
or
lahf
mov
dec
cld
rclb
or
lret
aad
movsl
fdivrl
mov
clc
pop
mov
inc
outsl
and
sub
dec
fmull
pop
sbb
aas
loop
cmpsb
sbb
shll
js
loope
pop
xor
andb
divl
cwtl
pop
xchg
aas
rcrb
jmp
cmpsl
mov
cld
xor
adc
loop
mov
sub
dec
jnp
xor
push
xchg
call
bound
loopne
mov
and
jb
fwait
mov
push
cltd
stos
lods
and
sbb
in
pop
mov
cld
test
push
mov
dec
cmp
cwtl
lret
arpl
mov
cmp
xor
in
mov
sub
cltd
aaa
push
fimull
out
xchg
jp
cmpb
shlb
push
sub
leave
std
inc
fwait
ja
clc
outsl
insl
icebp
aad
or
movsl
test
clc
push
js
cmpsb
ja
fwait
and
es
hlt
loopne
loopne
out
mov
js
sub
dec
aaa
fimull
gs
movsb
mov
int
xor
adc
mov
aad
jecxz
stos
mov
pop
mov
cmpsb
push
js
outsl
enter
in
inc
arpl
push
sti
adc
icebp
outsl
push
jmp
xor
sahf
mov
mov
xchg
and
enter
cmp
shlb
out
mov
mov
sti
test
xchg
test
orb
jp
jne
rcrl
aad
sbb
add
sub
out
scas
mov
dec
fdivs
mov
jmp
mov
pop
punpckhwd
int
push
adc
iret
je
lahf
lock
jmp
int
xor
scas
aad
push
jb
fnstsw
sbb
cmp
inc
cmp
mov
shlb
fistpll
lds
inc
xor
ret
add
mov
adc
lcall
jne
xor
stos
loopne
jp
mov
imul
imul
dec
repz
arpl
pop
fmuls
mov
shlb
dec
xchg
addb
stos
add
inc
add
clc
inc
adc
xchg
inc
lcall
cmp
js
daa
es
add
inc
add
cmp
push
push
cld
and
bound
arpl
popa
jne
cmp
xchg
or
jecxz
fisttpl
cli
getsec
dec
outsb
aas
or
push
ret
pop
jno
cs
dec
or
arpl
call
fstl
dec
outsl
fdivr
lahf
push
xchg
shrl
lea
mov
orl
fiadds
std
loope
sbb
inc
ja
test
popf
jmp
popf
popf
dec
icebp
insl
mov
mov
adcb
mov
fsub
fsubs
jnp
push
cmp
pop
mov
and
je
xor
push
push
xchg
idiv
cmc
jns
sbb
jae
jo
inc
jecxz
cmp
jae
lods
mov
aaa
mov
inc
jns
cltd
sarl
lahf
out
push
sbb
ret
and
adc
xor
jg
cmpsb
push
das
popf
iret
lods
xchg
sbb
push
sarl
inc
scas
cmpsb
lcall
dec
lcall
inc
addr16
inc
push
xor
pushf
sbb
leave
in
gs
jp
dec
xchg
mov
cli
sbb
push
pop
ret
adc
jns
je
hlt
jno
jmp
mov
jle
cmp
jle
test
cmp
std
and
fdivs
test
xchg
dec
test
aas
sub
mov
in
inc
add
pop
xchg
jmp
test
push
jb
inc
or
orb
pop
push
xchg
leave
or
fs
dec
lcall
push
sti
stos
adc
cmp
ret
call
mov
addb
add
cmpsb
js
push
pop
adc
push
aaa
sbb
loopne
push
xchg
mov
fists
mov
mov
jns
aam
cmpsb
addb
dec
dec
jecxz
outsl
fiaddl
inc
jo
add
add
mov
repnz
adc
jle
xor
mov
and
xchg
rolb
ljmp
lcall
jl
mov
jbe
push
and
popa
scas
mov
xlat
xchg
mov
es
push
outsl
jo
lods
es
clc
xor
fdivl
and
dec
dec
ret
and
cs
arpl
inc
pop
into
icebp
adc
xchg
int
cmp
stos
sarl
xor
cmc
xchg
mov
pop
inc
lcall
in
in
aaa
dec
and
jbe
sub
cmc
aaa
dec
adc
inc
xor
or
jb
scas
dec
sbb
or
xor
xchg
sub
and
sbb
or
and
adc
mov
sub
aas
jnp
cmp
push
jmp
ss
rcl
in
ret
ret
ljmp
stos
pop
xchg
jbe
out
add
shrb
orl
mov
cmp
into
cmp
add
popf
jne
mov
imul
mov
shrl
out
and
ds
call
popa
push
or
or
push
add
sub
cmc
sub
mov
stos
fsts
sbb
jge
lret
mov
js
out
mov
test
adc
or
cltd
xchg
nop
lds
hlt
or
mov
mulb
mov
add
lods
dec
mov
packsswb
cld
mov
sbb
inc
stos
orl
xchg
aad
fwait
push
adc
scas
xchg
call
movsb
stos
fstpt
or
sti
icebp
hlt
dec
movsb
cmc
jns
ret
adc
sbb
xchg
or
xchg
cmp
hlt
subl
stc
test
adc
incl
jnp
arpl
gs
mov
scas
out
jno
sub
add
enter
out
mov
subl
dec
adc
fwait
mov
pusha
adc
mov
je
sarb
jmp
scas
mov
adc
xchg
out
inc
sub
enter
je
adc
pusha
jp
add
cmp
and
lea
insl
xor
dec
jnp
mov
loop
add
gs
push
ret
cld
xor
jmp
mov
xor
shrl
xchg
xchg
mov
jmp
adc
mov
sbb
lahf
add
ds
stos
mov
loop
xor
mov
push
adc
shr
out
icebp
sti
push
ret
inc
xorb
mull
lods
mov
repnz
sbb
mov
das
test
dec
daa
add
fidivl
roll
clc
adc
repz
inc
dec
mov
mov
iret
fucom
sbb
stos
daa
mov
out
lret
cwtl
mov
aaa
add
fisubrl
in
clc
hlt
je
repz
ffree
out
pop
cmp
inc
lock
adc
mov
dec
xchg
or
sub
lock
out
aas
xchg
push
mov
es
fmuls
inc
mov
mov
rcrl
xor
lret
jno
les
ds
dec
push
pop
stos
fnstsw
je
cmpb
insl
inc
mov
insl
and
sti
push
pop
pushf
addr16
adcl
cmpsl
pop
mov
ljmp
mov
nop
daa
push
inc
mov
sti
mov
push
push
cmc
arpl
push
push
xchg
jl
movsb
inc
lods
cmpsb
test
inc
enter
sub
mov
std
test
in
rcll
add
or
or
fsubl
xor
nop
dec
fisubs
out
out
pop
mov
dec
jg
xchg
test
subps
jns
mov
mov
mov
addr16
popa
push
test
jbe
lods
test
cmp
jp
mov
pop
pop
jmp
lcall
jae
pop
in
ret
flds
lahf
or
nop
xchg
sbb
xor
jnp
jmp
push
icebp
clc
ja
jg
mov
and
dec
mov
pop
movl
cmpl
push
dec
bound
dec
std
pop
dec
xlat
shlb
ret
movsb
loop
xor
jo
in
adc
inc
inc
cmp
lock
pop
xlat
jmp
mov
decl
loop
push
lds
push
shr
in
sarb
bound
mov
leavew
mov
ja
and
inc
lods
filds
movsb
ret
je
mov
call
in
inc
mov
les
cmp
cmpsb
add
pop
push
or
mov
arpl
mov
pop
xor
mov
cmpsb
pop
adc
adc
ja
pop
fcmovb
js
pop
ds
jb
mov
xor
fucom
sti
repnz
adc
stos
dec
mov
test
fwait
xchg
mov
cmp
jmp
cmpsb
adc
mov
xor
aaa
rcr
pop
fisttpll
outsl
push
loop
push
imul
out
jno
fstpl
out
mov
xchg
fs
mul
xchg
jae
push
sub
stc
pop
and
and
dec
je
fwait
xor
ret
int3
mov
daa
or
pop
mov
dec
mov
fxch
shlb
jp
sbb
cmc
push
jle,pt
iret
jge
aam
inc
mov
inc
xchg
cmc
mov
push
inc
scas
scas
ret
or
test
lock
jg
jne
hlt
pop
jle
sbb
cmpsb
icebp
inc
lds
out
shlb
mov
imul
iret
cmp
xchg
lahf
mov
sbb
inc
out
pop
mov
inc
mov
cmpsl
notb
inc
in
in
fucomip
movsb
notb
lock
test
mov
pop
inc
addr16
popf
insl
xchg
les
hlt
mov
sbb
pop
insl
sbb
pop
imul
outsb
jo
call
test
adc
aas
jmp
imul
ret
fsubl
jle
add
gs
mov
xor
push
and
sub
das
leave
test
dec
jg
int
aas
xchg
dec
pop
arpl
sbb
pop
mov
std
fldl
dec
add
jo
inc
cmp
xlat
lret
mov
mov
cmp
jge
in
push
pop
mov
adc
int3
jbe
aam
and
adcl
cmc
ja
and
js
int3
sub
inc
dec
js
mov
add
aaa
fldenv
xor
mov
outsb
mov
sub
lods
or
lods
je
inc
jmp
mov
sub
jb
out
das
aaa
cmp
push
test
add
pop
cmc
in
gs
jbe
pop
and
js
sbb
daa
cmpsb
lret
dec
add
xchg
add
scas
aas
pop
sub
inc
xor
xchg
sbb
out
xor
cmp
leave
sub
jo
or
popf
repz
mov
jae
lea
jecxz
aam
aad
xchg
push
xor
jns
push
xlat
std
or
in
push
nop
sbb
pop
or
mov
fmuls
idivl
and
mov
mov
sarb
mov
mov
adc
leave
xchg
jne
lds
out
dec
xlat
push
fmuls
add
ror
test
jbe
insl
jbe
jb
jecxz
mov
mov
in
add
nop
xchg
lret
clc
add
push
andb
data16
insb
inc
inc
aad
jns
roll
in
jmp
scas
call
movsb
imul
movsl
sub
cmp
shl
jmp
nop
mov
packsswb
inc
push
lock
jb
xlat
mov
mov
movsl
es
sbbb
aaa
pop
ret
push
pop
dec
push
jl
cmp
je
imul
cmp
daa
jb
ret
lock
mov
inc
bswap
in
jbe
push
in
add
pushf
and
add
sti
jno
inc
pop
adc
rclb
faddl
lret
push
jb
test
repz
or
cmpsl
subb
sbb
cmpsb
cld
das
ret
shll
and
fistpl
add
dec
imul
pop
or
loopne
xchg
je
mov
sub
inc
cwtl
fcoms
pop
nop
fsubl
incl
jb
in
iret
jge
scas
loopne
mov
fidivs
lock
aaa
inc
dec
loop
icebp
fistl
dec
lahf
mov
mov
and
ljmp
or
inc
mov
iret
out
rorl
mov
imulb
pusha
pop
loope
stc
push
sbb
stos
out
flds
std
mov
mov
jl
jg
mov
inc
add
cmp
push
pop
mov
dec
negb
mov
and
lea
mov
add
test
or
pop
ret
cltd
loope
sar
add
mov
fisttps
lods
dec
addr16
idivl
in
sub
mov
insl
pop
mov
test
adc
mov
std
xchg
sub
in
insb
jecxz
cld
sbb
mov
rcrl
cli
fucomi
xor
mov
cli
inc
sub
mov
fbld
pop
mov
cmp
sbb
dec
test
sbb
ficoms
mov
pop
sub
jnp
mov
ss
hlt
sub
out
jae
mov
mov
push
cli
mull
imul
mov
mov
and
in
les
jbe
mov
push
ss
jnp
or
mov
in
cmp
cli
mov
mov
stc
ss
mov
dec
mov
cmp
addr16
xor
movsb
or
sub
jg
inc
shrl
inc
fildl
das
inc
cmp
xor
sarl
ret
inc
lret
aam
dec
fistpl
push
outsl
cli
and
nop
push
sub
les
je
xchg
jg
out
cwtl
repnz
je
lods
insb
in
mov
cmp
cmp
cmp
fistps
loop
shr
fsubrs
rcrl
pop
insl
mov
pop
inc
sbb
cmp
dec
inc
clc
push
sbb
adc
jp
sbb
mov
push
dec
iret
adc
and
fwait
addr16
mov
popf
jne
sbb
jecxz
aas
aas
jecxz
hlt
push
loopne
cmp
dec
fnsave
mov
fwait
push
loopne
fs
cmpsb
test
mov
shll
jb
fldenv
lcall
pop
xor
mov
pop
test
sbb
shll
inc
mov
aas
mov
in
cmc
xchg
and
repz
popa
in
xor
adc
push
mov
movsb
addr16
int
xchg
inc
stos
push
push
inc
adc
sbb
push
pop
xorb
ret
popf
out
lock
loop
add
popa
jo
or
mov
in
mov
sub
pushf
mov
cld
sbb
sbb
cs
cmp
std
lret
push
pop
insb
or
clc
mov
pop
pop
fsubl
jo
ja
loopne
cmp
es
mov
adc
xor
into
sub
das
inc
push
and
push
push
imul
add
pop
pop
or
push
ja
mov
jne
jnp
pop
icebp
addr16
rcrl
pop
xor
sbb
inc
push
stos
mov
and
fnstenv
es
call
add
inc
cli
fistl
fdivs
repz
mov
jns
adc
xor
mov
mov
fimuls
mov
mov
lock
jge
pushf
ret
mov
and
push
pusha
popf
inc
fistpll
mov
test
lcall
imul
mov
mov
aam
mov
push
sub
fstpl
cmp
in
ja
jmp
fildll
add
mov
mov
cltd
or
dec
or
ljmp
sbbl
rclb
jmp
into
ret
ljmp
dec
mov
xchg
cmp
mov
dec
push
sub
icebp
jbe
xchg
push
jle
clc
mov
cs
popf
shl
mov
adc
mov
neg
add
fldl
push
sbb
cmp
lock
or
jns
add
mov
mov
or
cltd
scas
sub
mov
in
aas
add
repnz
push
rclb
movsb
sarb
mov
cmpsb
popa
jg
jmp
insl
push
aam
insb
and
adc
xlat
mov
adc
or
jb
scas
std
dec
out
scas
aad
pop
cli
cmp
xor
cltd
sub
in
xor
stos
mov
sub
pop
arpl
test
push
push
out
or
and
sbb
xor
jge
push
cmp
arpl
test
xor
int
and
pop
xchg
subb
push
mov
xchg
mov
add
push
add
ljmp
adc
pop
cld
xchg
inc
and
pusha
jl
xor
stc
jns
jae
xor
mov
cmp
in
movsl
push
jne
stos
or
jmp
mov
fcomps
dec
push
xchg
xchg
add
mov
scas
andb
xchg
insb
addl
js
pshufw
test
fidivrl
test
jg
mov
imul
hlt
pop
dec
adc
adc
xchg
cmp
inc
mov
inc
arpl
lret
test
mov
or
push
add
dec
adc
mov
shll
fwait
xor
pop
xor
xor
xchg
push
fstps
jecxz
mov
js
fists
push
push
pop
lods
mov
and
notb
xchg
mov
pop
fcmovb
dec
stos
sarb
lds
ret
out
mov
ret
test
fcmovnu
sub
mov
push
call
add
inc
mov
lods
pushf
mov
divl
mov
add
repz
mov
xchg
cmp
or
pop
dec
push
cmpsl
inc
test
aad
xor
test
or
xchg
mov
add
xor
rcll
jl
loope
dec
ret
dec
lret
mov
jbe
mov
and
push
add
clc
scas
mov
push
addb
loopne
push
fadds
jmp
jae
xor
ljmp
mov
shrb
div
in
inc
inc
stos
leave
outsb
sub
jbe
dec
fwait
mov
mov
cmpsb
xor
es
adc
adc
imul
test
lret
xlat
test
pop
sarl
stc
or
iret
iret
aaa
int3
aad
fimull
insb
push
mov
mov
aaa
cld
mov
add
scas
cvtpi2ps
jns
inc
es
pop
lea
jp
call
aaa
and
cmp
faddl
cmp
pop
pop
es
jp
lods
sub
pop
jb
push
call
jo
add
rorb
sub
jne
push
jp
add
jmp
jecxz
test
stos
cld
scas
mov
adc
test
adcb
xchg
mov
add
pushf
jne
loope
out
imul
rcll
sbb
xlat
xchg
pop
push
sub
push
push
jecxz
lds
test
xor
lret
int3
mov
loopne
shll
shll
sub
pop
unpcklps
pusha
and
lahf
inc
pushf
popa
decl
xor
inc
and
jbe
jecxz
aas
or
mov
mov
push
sti
jns
dec
hlt
stc
imul
jae
push
adc
out
stos
test
bound
test
and
in
lock
lds
add
jns
inc
fnstenv
cmc
pop
in
andb
fidivs
pop
jle
cmpsb
ror
inc
insb
in
push
out
fbld
movsl
dec
std
dec
aas
sub
push
add
push
add
sarl
bound
dec
adcl
ljmp
cmp
dec
xlat
mov
sub
out
fwait
xor
test
push
in
decl
xchg
mov
mov
or
and
jae
lock
fiaddl
mov
push
jl
mov
inc
cld
loop
shlb
or
mov
std
leave
jbe
xor
xchg
imul
rclb
ja
es
icebp
push
mov
mov
xlat
pop
aaa
js
xor
push
cmpsl
out
cmpsb
inc
out
icebp
aas
outsb
clc
loope
adc
int
mov
and
mov
lret
mov
js
jo
mov
lods
mov
in
jge
mov
lods
mov
das
or
je
test
test
adc
xor
mov
outsb
mov
ljmp
sub
out
mov
hlt
sub
or
pop
les
pop
out
lds
mov
xor
into
aam
int3
pop
push
inc
lahf
mov
sbb
adc
js
out
cmp
repz
inc
adc
lods
dec
sbb
ret
mov
sub
mov
and
jmp
and
es
aam
xchg
dec
dec
in
jo
add
div
xchg
faddl
rorw
fisttps
jp
js
gs
pop
lcall
inc
mov
jns
cli
mov
hlt
and
inc
das
in
push
mov
and
and
xchg
push
sti
inc
js
mov
das
mov
dec
cmp
jbe
push
movsl
int3
pop
sbb
or
adc
into
fisubrs
in
int3
outsl
ret
in
mov
fstpt
jbe
pushf
out
call
add
sbb
sbb
insl
mov
ss
repnz
cli
add
mov
xchg
popa
outsb
icebp
cld
jne
push
pop
call
inc
out
mov
pop
xchg
lret
lods
push
mov
jl
dec
imul
ljmp
mov
sbb
xor
out
xchg
pop
out
pop
or
mov
scas
iret
js
jmp
xchg
insl
dec
lret
dec
fdiv
repz
mov
xor
cltd
adc
push
mov
mov
xlat
mov
sbb
data16
out
xchg
xchg
sub
popa
out
inc
mov
jns
add
fidivs
jle
push
test
push
cli
mov
jle
and
cmp
and
ret
xchg
in
loope
pop
not
imul
jo
loopne
lock
aad
mov
adc
cmp
pop
enter
and
orb
pop
fwait
lods
inc
in
lcall
xchg
adc
movsb
xchg
sub
sbbb
xchg
jecxz
pop
fwait
sbb
loope
sub
sbb
stc
mov
sub
push
push
jg
test
pop
cmp
outsl
xchg
jge
or
mov
jbe
dec
mov
loope
orl
mov
mov
out
dec
ret
cmpsw
outsl
out
xor
mov
mov
cld
cmpl
mov
xor
jbe
dec
add
sbb
gs
pop
sbb
pop
jo
mov
jg
ficompl
movsb
mov
xchg
push
and
aas
lret
shlb
fistpll
popa
fisubrl
fsubp
lret
mov
mov
mull
lret
and
mov
ret
arpl
adc
scas
cmp
call
pop
ret
test
pop
jmp
add
loopne
mov
push
adcl
adc
xchg
fcmovnbe
mov
push
aad
sahf
sbb
test
dec
pop
add
fisttps
or
push
inc
rorb
stos
pop
adc
inc
sub
push
jb
pop
aaa
out
adc
stos
xor
fmuls
hlt
sub
adcb
je
add
fdivr
stos
pusha
sbb
out
mov
push
jbe
stc
mov
push
add
mov
aam
cmp
and
cmp
fmuls
jecxz
or
mov
mov
or
xor
mov
mov
push
mov
xor
ljmp
cmp
xchg
adc
jmp
out
adc
imul
cwtl
insl
leave
push
out
xchg
popa
dec
and
adc
std
adc
jnp
push
sbb
pusha
lods
push
fmull
mov
adcl
sahf
add
cmpb
lahf
scas
rorb
nop
inc
add
scas
out
jo
cmpb
dec
sbb
xchg
jle
xchg
mov
cmp
cmpsb
pop
mov
sub
xchg
mov
and
daa
cwtl
pusha
pop
sub
aas
mov
nop
into
sbb
push
arpl
outsb
mov
or
mov
roll
or
lds
stos
lret
repz
sti
rol
mov
jns
loope
sbb
fistpll
lea
lock
movsb
pop
mov
push
sbb
xchg
adc
mov
pop
sti
pop
jo
outsl
sub
insl
xchg
aaa
fimuls
and
cs
and
jb
jbe
xchg
js
adc
xchg
iret
aas
stos
cmpsl
out
xchg
int
cmp
shrb
xor
dec
adc
and
cmpsl
jg
in
cmp
rol
and
cs
mov
jle
andb
push
xor
adc
cmp
mov
into
loope
push
icebp
cmp
dec
mov
push
xchg
ret
js
mov
jae
test
jg
push
jge
lret
push
mov
test
inc
mov
cld
out
aam
and
aaa
movsl
mov
inc
iret
shll
clc
hlt
pop
ljmp
jp
mov
jbe
inc
out
sub
int3
sbb
mov
mov
out
cmpsl
jle
ljmp
test
mov
cmp
sti
shl
icebp
dec
mov
adc
and
cli
jge,pn
rclb
pusha
sbb
fiadds
fistl
lret
loopne
sti
and
or
pop
dec
xchg
mov
mov
xor
add
lock
outsb
adc
stc
pop
loope
fcmovnu
mov
rcrb
fsubrl
push
mov
mov
ss
sti
cld
daa
xor
ja
xchg
sub
jns
xor
lret
stos
mov
jbe
testl
adc
xor
ja
int3
mov
pop
pushl
aam
decl
mov
cmp
cmp
pop
cs
out
adc
outsl
ret
aas
scas
lret
push
lock
outsl
inc
or
dec
sar
and
das
xchg
jne
dec
sub
lock
pop
cld
loope
pop
loopne
push
xor
mov
jge
cmpsl
push
mov
shrb
inc
pusha
push
cmp
movsl
jecxz
les
loop
jl
push
clc
push
mov
scas
sahf
or
int
jmp
and
movsl
xchg
jl
add
fs
push
enter
ret
popa
mov
add
inc
sub
add
in
mov
add
dec
icebp
mov
popf
pop
imul
push
test
shll
dec
cmp
pop
xor
nop
das
sbb
adcl
ljmp
xor
adc
add
sbb
push
xchg
sbb
and
adc
gs
xchg
cmp
inc
jl
dec
test
mov
mov
cmpsb
cli
out
xchg
fstps
stc
lret
and
adc
jecxz
cmpsb
fidivrl
mov
ljmp
cmp
push
push
ja
mov
jl
test
stos
adc
or
jp
ret
xor
enter
cmp
lea
dec
dec
mov
mov
pop
mov
push
xchg
sub
pop
out
and
adc
mov
and
inc
ljmp
mov
call
aad
cmpsl
xchg
in
decl
dec
sub
leave
andb
in
add
js
lcall
in
sbb
jo
jmp
dec
push
add
stos
imulb
movsb
dec
mov
rcrb
jb
in
outsb
fidivrs
push
xchg
or
jbe
push
push
add
mov
inc
and
sub
out
sbb
mov
jae
or
sbb
mov
jmp
stc
jno
or
and
or
scas
push
jnp
stos
sbb
cmp
xor
inc
lock
lods
lods
push
mov
adc
aad
push
push
pushf
fsubl
outsl
sub
enter
mov
inc
fisttpll
ror
fwait
ret
jns
or
in
mov
jb
test
jno
jo
test
out
lods
push
sti
pop
addr16
mov
inc
lea
pop
mov
aas
xchg
jo
pop
rcll
orb
mov
cmpsb
xchg
pop
push
cld
mov
cltd
dec
je
into
rcrl
push
push
les
pop
pusha
enter
lahf
test
sbb
out
lea
insb
cmp
inc
mov
add
dec
rcrl
and
aaa
jle
sub
cmp
or
and
pop
mov
negb
mov
aad
add
out
adc
gs
in
jecxz
imulb
repz
ds
ja
das
adc
lcall
insb
mov
push
jmp
mov
cs
es
or
mov
and
push
cs
cmp
sbb
das
jo
pop
jns
push
neg
incb
clc
clc
inc
inc
add
test
xchg
add
mov
addr16
cmp
dec
push
inc
and
loop
push
icebp
fildll
mov
pop
mov
push
dec
mov
fsubrl
popa
out
es
call
mov
jne
mov
ja
les
iret
xor
or
jp
scas
outsb
lock
in
xor
aas
rol
fldenv
xchg
call
and
or
je
bound
jmp
sbb
sub
fists
fdivrl
push
fmuls
inc
sub
sbb
imul
xchg
and
xchg
add
mov
inc
je
ljmp
lods
das
xor
xor
add
jg
dec
sub
push
adc
mov
stos
in
pushl
pop
sbb
std
mov
es
or
push
mov
lods
jecxz
ljmp
es
dec
or
fisttpl
loopne,pn
das
lods
sahf
jmp
stos
pusha
mov
or
testl
or
hlt
test
xchg
pop
leave
push
cmpsl
test
jnp
ljmp
es
das
jmp
testb
sbb
frstor
dec
in
movsl
int3
fidivrl
inc
inc
inc
aaa
leave
sarb
test
xchg
das
js
mov
lods
arpl
jno
jb
xchg
xor
ret
rcll
xchg
outsl
and
push
mov
cmc
push
jecxz
je
loop
andl
les
int
pop
in
mov
dec
pop
decl
mov
out
push
js
aam
addr16
ss
add
out
gs
sbb
mov
fcomps
lret
mov
pop
sub
incb
popf
imul
jbe
test
fimull
int3
sbb
push
loopne
and
or
imul
out
insl
dec
imul
mov
jecxz
testl
mov
out
or
movsb
outsl
xchg
in
push
xor
movsl
loop
push
sbb
hlt
movsl
sub
scas
cld
add
sbb
daa
sub
jo
roll
fs
add
pop
aas
or
es
bound
xor
jle
pop
dec
testb
mov
pushf
pop
push
xchg
adc
stos
sti
lret
push
inc
stos
mov
test
out
mov
mov
xchg
sub
jnp
cmpsb
jecxz
in
divl
es
adc
mov
or
mov
push
mov
fisttpll
pop
ss
xor
adcb
lret
std
fisubs
mov
popa
mov
rolb
sarb
je
jg
sub
iret
mov
add
cmpsl
sub
fidivl
int3
pop
aaa
rol
loope
std
sar
lcall
xchg
sub
mov
bnd
lret
sbb
sbb
add
loopne
mov
clc
sarl
dec
aam
insl
xor
pop
xlat
fcmovbe
je
bound
std
lahf
ds
lds
and
scas
decl
and
sti
ja
popf
sbb
mov
jo
jnp
out
xchg
ret
push
iret
cs
mov
inc
pop
adc
pop
mov
lods
mov
sbb
fisubrl
and
mov
cs
imul
xchg
xor
mov
and
xchg
inc
orb
push
clc
mov
add
adc
mov
or
inc
lock
sub
sbb
iret
mov
cld
lahf
mov
lahf
lods
shrl
mov
adc
mov
add
pop
sbb
sarb
sub
xchg
ljmp
je
dec
and
pop
cmp
adc
mov
pushf
dec
push
es
jge
cmp
dec
mov
aaa
outsb
loope
pop
add
push
movsb
mov
cmpsl
and
loope
mov
mov
mov
mov
loopne
js
pop
mov
sbb
out
adc
sub
pop
xlat
inc
adc
aad
out
mov
push
sbb
mov
xchg
lock
insl
insl
push
add
fildll
std
add
push
fwait
xorb
mov
addr16
ffreep
adcl
mov
int3
leave
cli
mov
int
and
stc
jl
into
bound
mov
dec
cld
mov
mov
push
stos
imul
sub
shrb
push
lret
cmpl
ss
addb
inc
mov
pusha
inc
mov
inc
pop
cmpsl
cwtl
or
stos
sarb
push
rorb
and
xchg
repnz
loopne
mov
xor
jne
lahf
xor
test
pop
inc
mov
sub
pop
ja
xor
leave
or
test
pop
loope
xchg
aas
inc
pop
jg
in
cmp
sub
aaa
mov
xchg
jbe
sub
xchg
mov
jnp
cmpl
repz
inc
fs
les
test
inc
add
clc
sbb
mov
push
inc
inc
lret
das
call
aad
shl
test
sub
mov
jno
andb
inc
fisubrs
mov
sub
sbb
push
push
xor
sti
lret
outsl
ljmp
xchg
mov
cwtl
pop
xchg
xor
imul
negl
icebp
cld
lret
mov
push
cmp
in
inc
int3
lods
shrb
mov
sbb
sub
xchg
fsubs
lahf
mov
adc
imul
movsb
and
daa
dec
sbb
or
mov
and
xor
loope
movsb
xor
mov
push
push
add
jmp
jmp
adc
xlat
or
dec
outsl
fcompl
mov
mov
or
ja
push
jmp
icebp
xchg
daa
hlt
jg,pt
hlt
adc
dec
insl
fsubs
jns
jne
mov
ja
xchg
fisubs
cmp
cld
lcall
mov
jns
imul
ljmp
xchg
jecxz
dec
mov
fiadds
addb
lea
inc
int3
jae
lea
xchg
gs
int3
jae
jae
mov
outsb
orl
out
dec
cmp
push
imul
mov
sub
dec
dec
cmp
push
ret
clc
ds
jl
mov
push
into
adc
lock
jns
filds
add
sub
ds
loope
test
mov
outsb
aaa
jmp
cmpsl
fucomp
push
push
popf
mov
popf
testb
sahf
fidivs
push
dec
lea
loop
cmp
jnp
or
jmp
push
nop
sub
mov
mov
ret
cmp
xchg
pop
inc
loopne
xchg
xchg
sbb
das
imul
imul
rorl
fstpt
fidivs
push
sbb
js
mov
int
or
pop
xor
dec
aas
sbb
je
sti
sub
int3
cmp
push
dec
and
push
test
adcb
add
mov
xor
stc
shlb
mov
sbb
add
ja
jo
cmpsb
jl
rcrl
mov
shll
pushf
int
jae
mov
sub
and
popf
jmp
mov
or
in
or
mov
frstor
adc
int3
inc
xor
or
lds
lea
adc
xor
push
insb
out
stc
lret
pop
shlb
loop
xor
sub
insl
addr16
inc
imul
jo
daa
insl
pop
dec
cmp
push
mov
dec
push
sbb
orl
inc
push
add
addr16
sbb
ja
mov
add
imul
orl
std
inc
sub
lret
lahf
enter
lret
add
pop
inc
imul
mov
mov
out
ficompl
loopne
imul
gs
nop
jmp
popf
test
dec
cmp
mov
in
and
cmpsb
ret
mov
ret
cmp
cmp
push
mov
ror
out
pop
pushf
andl
mov
pushf
shll
xchg
outsb
por
jbe
cmp
xchg
rcrl
jmp
push
push
ret
sbb
jnp
mov
mov
jl
xchg
inc
mov
das
testb
jns
push
mov
in
inc
xchg
fildll
mov
inc
lods
push
hlt
jge
adc
cs
mov
add
out
dec
xor
out
inc
adc
mov
and
and
popf
pop
idivl
test
int
pop
sbb
repnz
inc
xchg
jecxz
movsl
test
add
push
cmp
mov
or
cmp
mov
int
popf
movsb
repnz
sahf
mov
insb
dec
fdivrl
xchg
fwait
sub
mov
adc
mov
cmp
cmc
shlb
faddp
ja
hlt
insb
inc
adcl
jae
mov
push
or
push
in
std
pop
mov
xor
in
ret
jmp
sub
cmp
mov
xor
mov
sahf
dec
jo
mov
or
jge
push
into
insl
sub
sbb
fisttpl
push
andl
push
ret
pop
scas
push
fbstp
sarb
add
sbb
ret
popl
cli
pop
inc
sbb
shll
dec
out
mov
mov
loope
in
out
loope
or
enter
or
out
out
enter
ljmp
mov
jno
imul
jnp
inc
mov
pop
mov
mov
jne
outsl
jge
cmp
cwtl
movsb
jg
and
cmpsb
fwait
pop
cmp
push
inc
enter
mov
rcrl
in
ds
cmc
je
xor
lock
and
mov
mov
mov
add
hlt
and
mov
fbstp
int3
adc
mov
lret
sbbb
inc
xor
sbb
fwait
jb
sbb
push
and
push
push
loop
cmpl
inc
push
xchg
sub
ror
in
mov
dec
jge
neg
out
mov
xlat
jp
xor
imul
stos
dec
filds
or
cmp
dec
fmuls
jnp
jp
stc
inc
push
and
call
sub
sahf
cmp
arpl
sbb
data16
movb
pop
leave
and
xchg
and
cmpsl
ljmp
insl
jmp
or
lea
push
nop
shl
pushf
mov
mov
and
push
push
sbb
sub
sbb
mov
pop
rcr
shll
xor
adc
mov
and
lock
mov
shlb
push
sahf
xchg
jne
test
add
cmp
inc
adc
nop
aaa
xorb
jle
out
inc
out
int3
hlt
cmp
mov
mov
jg
and
call
mov
add
pop
movsl
inc
inc
push
fucomp
push
movsb
sub
loop
pop
mov
das
mov
xchg
xchg
adc
push
jne
nop
mov
insl
mov
pusha
imul
pop
xchg
iret
fcmovnbe
cld
or
int
adc
js
daa
add
jmp
sbb
int3
mov
mov
ljmp
sti
in
test
sub
push
add
aaa
clc
sbb
push
aas
shrl
aad
cs
loop
adc
xchg
test
fstps
or
jns
adc
jmp
adc
aad
cmp
mov
sub
rorl
mov
push
mov
fcomps
shr
cmc
ss
ljmp
dec
test
mov
imul
ficomps
push
cmp
mov
pop
mov
iret
mov
clc
les
enter
loopnew
push
shll
adc
xchg
stc
dec
js
repnz
add
push
sbbb
ss
test
nopl
push
mov
xor
jnp
jae
cltd
pop
jns
in
pop
xchg
jle
xor
inc
mov
jmp
repz
fs
push
sbb
leave
idivl
or
cwtl
shlb
inc
aam
aam
lret
lcall
fwait
mov
outsb
fs
pop
aad
push
cltd
jbe
out
jl
pop
roll
nop
pop
outsl
popa
sub
sbb
push
push
out
pop
xchg
in
push
in
pop
mov
jnp
sbb
movsb
fisttps
ljmp
sub
push
push
inc
jo
cmc
test
pop
fcomi
push
push
ja
or
xchg
sub
les
stc
add
sbb
hlt
scas
add
ljmp
loope
jmp
mov
mov
mov
mov
add
aas
jb
mov
jnp
popw
leave
mov
loope
mov
inc
cmpsb
xchg
aas
sarb
xor
adcl
sub
enter
imul
bound
div
mov
add
dec
test
arpl
sub
fbld
repz
repnz
or
jbe,pn
cmpb
jae
hlt
inc
push
ja
or
cmp
xor
push
fs
pop
mov
push
and
add
out
and
and
jl
push
mov
jb,pn
call
sub
push
mov
int3
pop
inc
add
lods
lahf
xchg
xor
push
lcall
jmp
jle
add
adc
sub
pop
ljmp
xlat
mov
std
out
pushf
enter
push
sbb
dec
inc
mull
mov
or
or
lret
int
mov
push
mov
nop
xchg
imul
xchg
add
mov
cmc
je
je
adc
xchg
rcl
push
jns
cltd
pop
and
arpl
ret
imull
testb
andl
inc
adc
inc
pop
pop
fcos
push
or
or
push
incb
iret
mov
xchg
test
sub
cmp
cld
xor
push
mov
jmp
cltd
jecxz
push
push
sti
iret
out
sub
lahf
mov
fwait
xor
loopne
jne
push
xchg
jne
aad
jbe
adc
cltd
adc
fsubrl
jl
mov
push
das
inc
in
adc
adc
and
jge
lea
ljmp
mov
mov
idivl
int
sub
aam
or
cwtl
loopne
inc
add
jmp
sub
popf
call
nop
test
add
dec
mov
sub
add
adc
mov
subl
sti
or
mov
add
aad
cvtdq2ps
sarb
mov
sahf
in
sti
in
add
out
mov
mov
or
les
lods
andb
inc
xchg
add
repz
stos
mov
inc
xlat
mov
les
and
rcrl
jl
loope
adc
mov
jecxz
cld
lahf
repz
jecxz
movsl
jg
rol
mov
in
inc
ret
pop
sarb
or
ficomps
adc
scas
dec
roll
pop
popa
idivb
cld
mov
xlat
shll
jo
outsb
jmp
xor
or
cli
cld
mov
in
push
outsl
sbb
outsl
lock
mov
lods
pop
mov
sbb
insb
dec
mov
icebp
mov
pop
bound
adc
pop
test
inc
cmp
mov
or
inc
mov
push
jns
adc
popf
adc
xchg
and
xor
mov
mov
inc
shll
std
fstpt
jle
insl
out
cmpsb
data16
sbb
aas
cmp
out
in
jp
or
mov
mov
sbb
lcall
xchg
mov
xchg
jno
idivl
divl
pop
add
adc
fldcw
mov
jge
je
push
mov
pop
fs
push
mov
dec
fnsave
sbb
sub
inc
mov
mov
mov
xchg
inc
outsl
fbld
ja
js
cmp
sarb
or
xchg
ss
mov
fistps
push
dec
test
inc
add
add
nop
pop
mov
or
xchg
xchg
sarb
aad
mov
out
jnp
and
cli
popa
dec
in
push
mov
sbb
roll
mov
jo
lods
nop
pop
pop
mov
sti
jge
jle
mov
ret
bound
sub
inc
push
pop
test
add
pusha
cwtl
repnz
call
push
cmpsb
push
xchg
mov
bound
rcl
imul
aas
dec
lds
sbb
fidivl
jmp
mov
jno
and
loopne
out
mov
adc
push
mov
fstpt
insl
mov
mov
jbe
adc
andl
ret
pop
and
mov
dec
adc
je
mov
clc
sbb
nop
lret
sbb
inc
push
mov
out
dec
mov
xchg
dec
dec
repnz
cmp
insl
divl
lcall
mov
or
jns
mov
mov
lahf
add
cli
popa
cli
pop
xchg
rcrb
adc
orb
loopne
mov
dec
ljmp
int3
aam
stos
pop
int3
insl
and
mov
shlb
lods
call
jg
nop
mov
popf
xor
mov
clc
fwait
cld
test
lods
mov
sbb
mov
repz
jl
cmp
mov
mov
xchg
aad
out
cld
std
inc
jne
pop
sub
inc
loop
std
clc
or
enter
bound
fs
mov
mov
cmc
pop
sub
je
lea
outsb
pop
daa
push
hlt
lret
aam
push
pop
insb
mov
imul
je
xor
icebp
lahf
cmp
pushf
pop
sbb
rclb
jecxz
or
xchg
sub
and
dec
jmp
loopne
test
aad
das
lahf
outsb
mov
push
adcl
sbb
lret
out
inc
pusha
sbb
subl
add
in
pop
aam
or
add
call
sti
and
imul
popa
enter
nop
and
or
stos
jne
clc
lock
aas
pop
cmp
mov
test
fistpll
pop
cs
adc
jne
stos
or
xor
xchg
js
pushf
xor
mov
add
adc
lret
fistpl
jae
aaa
mov
mov
pop
out
fnstcw
stos
and
mov
imul
jns
adc
rorl
imul
jmp
mov
dec
cmpsb
push
sahf
pop
xchg
jg
iret
repnz
test
xchg
in
dec
pop
imul
and
xor
xor
data16
adc
sbb
shlb
mov
pusha
lock
pop
pop
pop
mov
jbe
leave
pop
xor
jnp
ficoml
cmp
ret
daa
pop
repz
pop
stos
lcall
push
xchg
xchg
push
mov
mov
inc
inc
cli
adc
adc
pop
xor
scas
mov
and
xchg
xor
dec
lret
dec
cmpsb
cmc
xor
ret
test
stos
scas
xlat
in
adc
xchg
jns
fs
pop
pushf
mov
incb
ret
pop
jecxz
dec
xor
xor
inc
pop
push
pop
push
in
fbstp
inc
pop
jo
fisttps
dec
push
pushf
cltd
xchg
addr16
lret
divl
cmp
mov
in
mov
and
cli
into
ret
fsub
adcb
jg
jns
fcompl
jo
leave
mov
mov
sbb
pop
sub
rorb
jbe
aam
jg
ret
lods
into
movsb
test
fstpl
js
stc
mov
jecxz
cwtl
or
sub
sub
loope
jns
jae
div
loopne
add
xorb
mov
cli
mov
pop
insl
divl
imul
cmpl
mov
xlat
popf
stc
jo
ficoms
cmp
popf
lret
sahf
mov
pop
xchg
int3
jmp
push
xchg
xchg
and
pop
popf
dec
int
cwtl
push
add
testb
xor
lods
fnstsw
add
int3
insl
stos
push
fisubl
sub
or
mov
or
cmp
sub
xchg
push
int3
mov
mov
pop
aas
mov
inc
test
and
outsb
outsl
lcall
dec
mov
aam
loop
cmc
loope
or
ffree
fld
ss
jne
adc
inc
int3
enter
into
in
or
push
cli
cmp
lods
fimuls
pop
or
decb
loope
sbb
movsb
sbb
lods
into
icebp
mov
cmc
sti
xchg
int
or
int3
sub
mov
les
call
divl
cmpsb
iret
loope
ret
int3
lods
ja
xchg
fidivrl
pop
leave
dec
stc
push
sbb
lds
aaa
push
popf
enter
push
stos
out
xchg
push
cmp
je
orb
and
mov
sub
add
xchg
mov
lret
loop
mov
dec
inc
sti
lea
stc
inc
or
push
sbb
ljmp
je
adcb
dec
ds
les
imul
dec
xchg
ret
fdivrl
pusha
sysenter
xlat
xchg
xchg
push
xor
cmc
mov
mov
das
lds
shlb
mov
xor
push
or
lods
inc
mov
mov
fistps
pop
sbb
sub
sbb
mull
in
popa
mov
adc
shrb
mov
lock
jo
rcll
js
addr16
test
and
sbb
mov
sub
and
mov
in
xchg
push
lahf
push
out
outsb
xchg
push
mov
in
packsswb
cmp
aad
retw
or
cwtl
repnz
jmp
mov
dec
repz
jecxz
add
out
lahf
gs
pop
dec
repz
outsb
sub
imul
cmp
sbb
popf
loopne
mov
mov
inc
pop
or
sbb
pop
in
or
out
popf
fdivp
outsl
mov
jns
push
mov
cmp
and
outsb
add
jmp
or
push
out
and
ja
fdivs
or
imul
mov
mov
pop
hlt
dec
scas
test
inc
push
cmp
movsb
inc
jnp
cmp
mov
push
cmp
mov
idivl
jg
mov
addr16
mov
stos
xchg
cmpsl
and
cmp
xor
inc
shrl
lret
mov
scas
xchg
clc
or
sarl
and
or
cli
xchg
rolb
enter
xor
pop
mov
mov
nop
dec
dec
xchg
cmp
int3
pop
addl
seta
out
fisubl
daa
aaa
js
iret
shrb
push
pop
inc
imul
xchg
adc
fmull
dec
sub
mov
imulb
adcb
enter
and
ret
mov
or
mov
in
lret
popf
ja
mov
jb
jne
loop
inc
add
push
push
sbb
jmp
add
xchg
out
xor
dec
fmul
adc
sti
mov
aaa
ljmp
jecxz
cmp
sub
sub
mov
mov
or
daa
adc
xchg
ja
out
icebp
mov
lods
and
adc
aad
pop
jmp
add
jmp
add
daa
adc
cmp
lods
sbb
test
ja
pop
xor
adc
mov
inc
sbb
ret
dec
xchg
andl
stc
push
sbb
mov
xorl
sahf
sahf
jle
xor
mov
pop
xor
mov
stos
or
push
negb
mov
xor
xchg
scas
xchg
mov
leave
enter
push
sbb
xor
sub
jne
insl
dec
scas
lcall
stc
out
mov
jge
popa
incb
adc
pop
fidivrs
or
xlat
inc
mov
mov
add
or
xorb
and
cmpsb
loopne
cltd
xor
out
roll
or
inc
aam
adc
sub
xlat
gs
test
mov
imul
inc
leave
mov
sub
mov
mov
pop
adc
ficomps
loopne
cwtl
pop
add
mov
mov
inc
lea
ja
xor
stos
gs
pop
and
andb
sub
lods
cli
push
arpl
push
jno
push
pusha
fcmove
mov
fwait
push
cmp
dec
lods
cli
jno
scas
popa
push
and
clc
enter
adc
push
and
fstpt
add
test
xchg
pop
inc
add
xor
arpl
jg
jbe
data16
jl
mov
cmpsb
imul
adc
or
mov
fdivrl
inc
jmp
mov
fildll
or
addl
fistpl
or
icebp
lret
and
mov
std
popw
neg
cltd
push
add
push
sbb
test
fidivl
pop
fstp
aam
dec
jae
inc
aaa
in
mov
inc
mov
fst
xor
je
test
popa
cli
push
pop
addr16
push
xor
call
dec
dec
fidivl
fmuls
roll
sub
cmp
les
xor
mov
test
sar
popa
inc
push
mov
pop
pop
cmp
push
in
imul
sub
jle
in
out
cmp
push
iret
push
out
movsb
push
mov
sub
subl
std
xchg
or
push
mov
es
mov
sub
cmpsb
fsubl
hlt
xor
data16
pop
rcrl
cmp
ds
mov
xor
or
pop
xchg
je
push
shll
mov
mov
loop
bound
stc
cld
iret
sbb
pop
dec
es
or
test
cmp
pop
mov
jbe
xchg
xchg
and
lret
inc
dec
sub
test
es
sbb
push
jecxz
pop
movl
jo
mov
js
imul
arpl
cwtl
inc
call
scas
mov
scas
sub
imull
and
inc
stos
fidivrs
daa
pop
and
lahf
pop
jl
cmpsb
call
insb
dec
pop
lahf
jnp
lock
mov
mov
jnp
insl
jb
jmp
inc
movsb
and
cmpsb
fsts
sbb
pop
cmp
pop
jb
jo
jno
sub
xchg
setb
and
inc
cmp
inc
push
mov
push
out
hlt
outsl
iret
stc
xchg
xor
xchg
lods
je
jmp
imul
sub
pop
dec
mov
xor
xor
cmp
cltd
jg
arpl
cmc
mov
sub
test
into
pop
cmpsb
subl
sti
jnp
inc
mov
and
inc
pushf
dec
movsl
orl
clc
insl
xor
lcall
push
pushf
jno
loopne
sbb
inc
mov
inc
lret
ljmp
push
sub
inc
mov
dec
lret
movsb
ficompl
aam
mov
sbb
enter
add
pop
inc
stc
jne
fdivrs
push
insb
outsb
es
xchg
mov
xchg
push
test
out
popa
push
popa
jmp
mov
loop
aas
add
test
dec
pushf
adc
push
jle
and
int3
adc
sarb
and
sub
xchg
pop
cltd
mov
es
shlb
lahf
arpl
and
out
jge
fimull
out
or
mov
sbb
loope
std
xor
mov
push
push
xor
addl
adc
call
mov
in
sti
jo
addr16
test
and
repz
xor
roll
sub
push
mov
dec
jnp
inc
dec
xor
lods
push
cmpsl
mov
out
push
pop
fstl
sub
ret
cmpsb
loopne
xchg
pop
pop
fwait
jge
call
push
xor
leave
fnstsw
push
mov
and
mov
les
push
push
push
fsubrs
ja
outsb
xchg
push
cmp
sub
fmull
cli
in
les
sub
addr16
vpaddd
stos
insl
xchg
jb
push
fs
xor
jmp
lds
mov
stos
neg
xor
fs
gs
test
test
dec
push
pop
scas
into
inc
mov
std
jecxz
stos
sti
push
pushf
pop
xor
push
sbb
mov
in
outsb
mov
jbe
adc
cmp
aad
jmp
adc
aad
mov
test
sbb
data16
dec
rolb
aas
push
dec
mov
dec
orl
pushf
sub
mov
sub
mov
xchg
pop
pop
shlb
jl
adc
mov
or
mov
push
out
sbb
dec
in
arpl
fsubs
adc
mov
mulb
vmread
xchg
adc
pusha
or
stos
sahf
push
mov
xchg
stc
pop
mov
push
xor
jmp
icebp
mov
dec
loop
dec
ja
jno
xchg
ds
or
int3
decl
pop
adc
cmpb
shl
loope
dec
ja
fmull
rcrb
pop
cld
ss
lcall
movsb
stc
cmp
mov
jl
daa
shr
notb
mov
or
ret
adc
or
mov
mov
pop
inc
pushf
sub
xlat
add
aam
push
adc
test
pop
or
mov
ficompl
out
pushf
popf
movsl
scas
pop
inc
mov
sub
or
or
mov
xchg
or
out
jecxz
scas
dec
insb
dec
add
pop
add
cmp
jge
enter
outsl
jmp
sbb
cmpsb
scas
cmpsl
adc
pop
sbb
mov
adc
inc
outsb
mov
pop
sahf
mov
mov
jecxz
add
stos
sub
cld
es
sbb
das
cmp
pop
adc
jecxz
xor
icebp
push
loope
cmp
sbb
adc
inc
and
adc
adc
mulb
pop
mov
mov
shr
ss
xor
inc
mov
dec
add
mov
cmpsl
fcomi
adc
cld
scas
daa
testb
and
out
fsubr
mov
mov
mov
pop
out
adc
or
xchg
shl
cmp
xchg
loop
sahf
jl
les
das
sub
int3
dec
sub
enter
scas
je
cmp
mov
lods
jb
pop
inc
add
out
cmpxchg8b
out
iret
xorb
mov
dec
push
mov
loop
jmp
mov
add
cli
fdivl
adc
xchg
cmp
loope
xor
inc
mov
mov
sub
adc
fldl
push
xor
add
pop
int
hlt
lods
mov
or
push
inc
pop
icebp
dec
mov
xchg
sti
add
outsb
cld
test
bnd
ljmp
push
test
cmp
push
add
dec
or
lock
outsl
and
jbe
hlt
sub
mov
jae
jbe
jge
adc
daa
fwait
xchg
mov
leave
mov
fcompl
lcall
push
notl
mov
cmpsl
mov
shl
cmpsl
and
xchg
arpl
or
inc
sar
sti
mov
les
into
ret
ja
dec
pop
icebp
add
mov
add
push
xorl
mov
lcall
mov
iret
jne
lret
movsl
sbb
jp
mov
push
loop
sbb
aaa
push
aad
xorl
mov
adc
xchg
inc
push
rorb
or
inc
subb
add
leave
add
jae
dec
nop
add
ds
mov
fcoms
inc
test
std
xchg
mov
add
pushf
mov
aas
dec
cmp
sub
cmpsb
add
bswap
sub
aas
push
ljmp
sar
push
fistpl
inc
mov
mov
loop
xchg
dec
ret
das
and
cmc
loope
adc
sbb
out
int3
inc
imul
sbb
or
pop
and
lods
rcrl
imul
adc
movsl
fildll
mov
shlb
xchg
mov
aaa
subl
hlt
aaa
add
mov
jae
jb
xor
jns
jmp
cmc
xchg
sbb
mov
add
mov
shl
in
and
sbb
outsb
add
iret
shr
push
shll
fidivl
leave
les
out
xor
mov
sub
push
sub
mov
add
fs
sahf
loopne
mov
push
mov
pop
add
pop
push
xor
leave
in
movsb
jge
and
mov
cmpb
sahf
fistpll
push
adc
sub
jne
lock
cmpb
insl
outsl
push
inc
fwait
aas
in
jbe
shll
jbe
xor
or
ficomps
mov
ficomps
aad
stos
je
movsl
stos
fistpll
stos
xlat
clc
and
add
and
test
sahf
xchg
fld
pushf
push
mov
das
mov
dec
test
sub
add
sbb
push
int3
fdivl
nopl
sbb
loop
push
test
mov
das
das
sbb
and
inc
lock
ud1
mov
in
or
dec
lcall
inc
xchg
xlat
push
int
xor
ljmp
inc
cmpsl
and
shlb
pop
lret
lods
mov
dec
or
xor
ret
add
movsb
mov
in
sahf
lret
sbb
push
dec
mov
mov
test
xorb
repnz
int
jae
idivl
xlat
stos
jle
mov
jmp
shlb
lret
or
pop
call
inc
inc
cmpsl
pop
mov
repz
dec
mov
inc
adc
xor
xchg
jmp
insl
dec
push
dec
lock
loop
std
das
lret
lret
sub
stos
pop
mov
fwait
repz
adc
out
mov
stc
add
pop
push
fcmove
mov
inc
fisttpll
or
insl
dec
pop
cmp
mov
or
dec
xor
and
call
push
shrl
pop
cld
inc
or
and
je
pop
mov
divl
icebp
lea
in
subl
repz
mov
push
mov
dec
or
adc
clc
bnd
fsts
test
lret
and
adc
xor
jecxz
xchg
nop
in
jle
repnz
lods
jo
jge
es
outsb
sahf
push
dec
popa
add
push
fbstp
mov
or
jne
adc
add
iret
jle
xchg
inc
imul
insb
push
imul
fldt
scas
push
fldl
inc
adc
mov
sbb
mov
lock
aas
jg
dec
pop
hlt
lods
dec
imul
outsb
shll
adc
sub
cmp
lret
jg
xlat
ret
pop
sbb
xchg
rcrb
loopne
mov
push
push
cmp
mov
mov
jp
dec
mov
into
popf
cmp
xor
pop
push
mov
std
jne
sahf
sti
outsb
jo
test
stos
jle
lds
xor
cwtl
mov
gs
imulb
jo
sbbl
dec
clc
or
xor
cmp
mov
int3
jne
pop
push
jecxz
test
mov
mov
in
or
or
std
pop
andb
loopne
iret
and
cmp
sub
jb
pop
add
mov
inc
and
stos
popf
mov
cmpsb
dec
std
mov
mov
orl
or
movsl
and
inc
idivb
test
nop
fisttpl
aaa
sub
call
jb
icebp
gs
movsb
xchg
gs
ja
adc
push
hlt
sahf
sub
pop
int3
jge
int
scas
cmpsb
daa
ss
and
xchg
xchg
repz
mov
lods
cmp
cmpsb
in
ret
adc
mov
fisubrl
and
push
mov
xchg
push
icebp
push
push
rcrb
push
int3
cmp
xchg
loop
leave
dec
stc
push
push
insb
aad
enter
pop
push
lods
cmp
inc
scas
insl
dec
xor
in
and
pop
adc
pop
pop
je
sbb
mov
pop
out
and
enter
mov
mov
dec
xor
add
jmp
icebp
cmp
mov
subl
adc
inc
sbb
adc
inc
and
rcrl
cmpl
orb
in
mov
into
scas
outsb
xor
dec
andl
std
jns
rcr
jmp
shrl
int3
dec
sbb
cmp
pop
sub
aaa
das
xor
or
jl
mul
movsl
inc
iret
sub
arpl
mov
mov
mov
or
mov
loop
push
fmull
or
push
jbe
dec
aam
mov
std
leave
dec
mov
cmp
adc
cli
push
lds
pop
leave
mov
jge
xlat
cltd
xchg
jns
lds
out
cwtl
add
mov
notl
xor
rorb
sarb
sbb
fwait
xchg
pusha
inc
mov
hlt
pop
jns
cwtl
movsb
mov
clc
mov
mov
insl
mov
cmc
mov
daa
xchg
adc
sbb
sub
pushf
stos
enter
aad
mov
mov
dec
rep
push
fidivrs
dec
xor
inc
out
and
adc
push
sti
inc
push
push
cltd
outsb
inc
xor
and
cs
pusha
inc
daa
mov
pop
ret
repnz
mov
sub
adc
and
add
je
xor
repnz
mov
and
push
lahf
in
and
stc
stos
push
cmp
xor
inc
mov
aad
lock
xchg
jae
pushf
daa
mov
xor
filds
into
sahf
repnz
sbb
and
lock
out
push
repz
mov
rcrb
inc
pop
sub
mov
rorl
dec
jecxz
les
and
bound
rdpmc
dec
push
dec
jecxz
aad
lods
mov
jae
mov
dec
pop
sbb
push
xor
pop
jle
hlt
imul
repnz
in
adc
push
dec
and
sbb
in
inc
cmpsb
mov
shlb
sbb
mov
and
or
ficompl
movsl
fs
test
add
cmpsb
push
scas
xchg
imul
xor
lret
sarl
mov
push
xchg
insb
popf
mov
outsb
add
hlt
daa
popa
cmpsb
fbld
pop
mov
clc
test
push
sahf
cmp
loope
mov
and
test
addr16
dec
pop
mov
scas
loope
mov
icebp
js
dec
stos
in
adc
lea
jg
sarl
test
pop
dec
ret
push
dec
mov
test
loop
jge
jbe
scas
push
rcll
ret
test
mov
and
orb
push
inc
arpl
xchg
imul
jg
xor
je
sbb
sub
popa
ja
cmp
mov
cli
out
jbe
cli
mov
or
or
jl
idivb
pop
xchg
addb
mov
scas
push
cmp
xor
in
rorl
add
push
negl
jmp
sbb
stos
push
mov
hlt
or
outsb
loope
int3
jne
mov
push
pop
dec
out
mov
out
jle
push
adc
cmp
pop
push
stos
jns
sub
mov
dec
call
add
mov
jns
sbb
cmp
push
mov
insl
push
test
mov
dec
sbb
dec
cmp
cli
and
dec
jns
pop
jb
inc
xorb
test
mov
ja
cmpsl
mov
scas
pop
push
pop
sahf
xchg
mov
movsb
movsb
imul
mov
insb
mov
repnz
fwait
out
lret
mov
shll
insl
pop
push
xor
sub
mov
sub
mov
xchg
lock
pop
xchg
mov
push
jle
mov
jl
xor
add
out
cmp
ficompl
mov
push
sub
ss
xor
cmpsl
aam
sbb
lods
out
call
xchg
push
test
cmp
mov
push
lods
cltd
aaa
mov
pop
mov
je
repnz
jge
jae
cmp
jns
ret
hlt
jle
inc
pop
arpl
adc
push
ljmp
mov
sub
bound
jnp
loope
pusha
and
adc
iret
hlt
fwait
mov
mov
push
cmp
in
inc
fists
cmpsb
enter
movb
js
shll
fists
mov
fwait
or
push
and
lret
jae
je
mov
in
es
and
sub
int3
icebp
sbb
enter
cmp
push
out
test
add
lret
loop
mov
loop
cmp
int
lea
mov
in
in
sub
dec
aas
and
loope
into
mov
hlt
ja
call
sub
lods
imul
in
cmpsb
or
jb
sti
es
out
adc
movsl
and
in
leave
es
loope
xchg
jp
xlat
out
into
divl
mov
jle
xchg
arpl
sub
int
sti
inc
push
pop
lcall
stos
inc
or
adc
cmp
lret
xchg
xor
sti
imul
push
jmp
sub
sub
mov
fsubl
outsb
add
test
inc
jp
hlt
test
sub
mov
dec
cmc
daa
insb
cmp
leave
xchg
mov
aad
mov
dec
das
fdiv
fisubrl
fimull
and
cmpsb
push
sbb
ss
sub
outsb
push
call
pop
movsl
mov
lahf
xlat
sbb
jl
inc
adc
out
jge
addl
xchg
hlt
mov
imul
and
xor
mov
in
out
mov
hlt
cmp
xlat
out
subl
cmpsl
mov
repnz
adc
mov
mov
nop
movsl
sbb
rcrb
lret
dec
pushl
or
lds
xchg
cmpsb
imul
add
decb
inc
scas
pop
mov
or
aad
adc
mov
jae
adc
add
iret
xor
rcrb
cmp
xlat
cltd
jg
scas
dec
xchg
repnz
mov
mov
and
iret
cmp
subb
mov
sub
orl
sub
mov
dec
cmpb
lods
dec
lcall
stc
sub
and
inc
aaa
fiadds
loope
mov
loopne
inc
arpl
stos
and
adc
cld
inc
inc
out
sahf
cmpl
ret
and
fcoms
adc
jnp
jle
adc
iret
push
mov
push
je
rorl
cmp
xor
push
cmp
lea
mov
xor
and
dec
sbb
cltd
out
inc
lock
push
pop
dec
pop
and
and
popa
jge
subb
fsts
incb
mov
pop
sti
pop
das
push
addr16
sub
ja
icebp
rcrl
xchg
inc
or
test
mov
or
xchg
mov
pop
shll
add
inc
icebp
mov
xor
sarb
and
repnz
jne
sbb
aaa
out
mov
jae
lret
mov
shll
push
cmp
add
mov
mov
cmp
and
test
mov
cmp
ds
mov
cmpl
dec
cmp
cmpsl
pushf
xchg
dec
add
cs
jo
lods
jcxz
jno
outsl
mov
sti
pusha
aad
vpandn
cmp
mov
xchg
dec
sahf
push
add
nop
test
arpl
xchg
sub
ss
sar
and
aas
dec
mov
aam
je
xlat
or
and
fwait
inc
jge
int
push
sbb
shrb
cli
pusha
ja
sub
ja
test
mov
sub
cs
in
icebp
mov
push
adc
xchg
xor
push
cmp
pop
push
push
iret
push
cmpl
inc
inc
jne
aad
pop
push
mov
sub
fdivrp
pop
mov
gs
push
add
jae
cli
mov
sahf
leave
cwtl
jo
in
mov
std
mov
jbe
xor
cmpsl
je
pop
push
ss
xchg
rcll
inc
cmp
mov
jl
inc
cmpl
clc
enter
outsb
mov
jmp
mov
aaa
out
outsl
iret
arpl
fiadds
jge
out
outsl
jne
lcall
sbb
and
aad
das
mov
cmp
mov
jae
sbb
jg
push
cmp
sbb
test
in
push
xchg
mov
fdivr
fnstsw
push
pop
std
arpl
je
movsb
mov
js
cmp
aas
cmp
popa
adc
icebp
jne
jns
jmp
sahf
pop
js
ucomiss
cmpsl
pop
sbb
inc
adc
ja
pop
dec
push
std
add
mov
imul
mov
dec
fdivl
adc
pop
arpl
push
push
sub
push
loopne
int
ds
sti
dec
loopne
xor
ficomps
popa
or
sub
sub
jno
sbb
inc
cwtl
lock
dec
mov
test
push
test
mov
nop
xchg
push
mov
ljmp
pushf
add
addr16
push
mov
shl
pop
add
pushf
dec
jnp
nop
sub
int3
add
mov
mov
das
adc
leave
push
push
xchg
loop
addr16
ljmp
xchg
or
xchg
sub
lahf
xor
outsl
aad
sahf
incb
pop
mov
outsb
aam
xor
insl
xchg
mov
arpl
xchg
ret
out
adc
lds
fistps
out
out
and
xchg
pop
cs
jmp
ret
imul
add
jmp
outsl
fs
icebp
jg
adc
fsubr
xor
cmp
add
pop
cmp
loope
cmp
inc
jb
sub
fisubs
push
jno
jne
pop
sbb
test
ror
and
adc
or
jg
in
add
mov
mov
sbb
mov
loope
jo
jge
pushf
and
jl
sbb
jno,pn
mov
or
or
jbe
mov
jno
mov
mov
popa
sub
inc
ficoms
imul
add
mov
or
lock
mov
popf
leave
cmp
inc
lea
mov
mov
add
in
and
push
dec
adc
test
pop
lods
ret
outsb
xchg
cmp
dec
add
std
into
les
bound
les
icebp
bound
inc
cwtl
mov
push
mov
adc
dec
xchg
fadd
mov
jle
ret
ds
sub
push
and
dec
outsl
pop
es
aas
loop
js
jge
movsl
push
mov
add
jle
insl
push
mov
lea
clc
cmp
movsb
or
pop
adcb
fxch
shlb
xchg
repz
and
inc
jne
arpl
inc
push
sbb
lcall
popf
loop
sbb
or
jbe
call
jg
xchg
ret
sbb
icebp
pop
mov
into
or
mov
mov
leave
decl
cld
mov
cli
cmpsl
roll
mov
dec
adc
scas
daa
sub
les
adc
testb
cmp
cmp
iret
sbb
out
xor
sbb
push
xor
push
add
cmp
cwtl
popf
push
stc
cmc
push
or
push
movsb
sub
roll
sub
dec
or
xlat
je
pop
mov
jnp
push
jo
jp
rcrl
cmp
test
sbb
pop
fldenv
and
or
lcall
mov
xor
testb
sbb
imul
movsb
mov
jg
scas
out
fwait
pop
push
in
jp
lods
ljmp
xchg
xor
pop
je
aad
call
fsts
popa
jns
jge
pop
notl
or
ficoml
rcrb
ret
jmp
subb
mov
push
mov
gs
jg
int
je,pt
push
mov
xchg
lcall
inc
push
sub
xchg
fimull
mov
sar
out
sbb
lods
cmp
xchg
mov
xor
das
push
ret
or
and
js
pusha
mov
into
jle
mov
dec
sbb
push
das
cmc
into
xor
mov
test
das
scas
jl
fidivs
push
cmc
movsb
repnz
push
daa
mov
cmpsb
cli
in
out
pusha
mov
fwait
fwait
in
jp
mov
sub
into
push
clc
loop
push
add
xor
testb
inc
rcr
jno
sbb
jmp
cli
cmp
pop
jb
jns
shrl
mov
inc
std
sub
loop
js
dec
push
ds
xor
scas
xchg
cltd
xor
xor
push
in
xchg
sbb
dec
testl
or
call
hlt
jbe
pop
shlb
sbb
sbb
sarb
movsb
cmpsb
sahf
inc
push
jge
sbb
addl
hlt
mov
jbe
and
add
enter
or
xchg
mov
pop
call
fimuls
sti
add
push
sub
mov
push
adc
popf
push
into
inc
out
testl
movsl
push
arpl
add
dec
jmp
ret
arpl
and
insl
fldcw
xchg
mov
scas
push
out
sbb
add
aas
or
arpl
mov
mov
ret
icebp
lock
add
xor
xchg
daa
pop
out
cltd
daa
inc
cmp
add
xor
dec
push
inc
shl
lret
mov
add
gs
mov
jnp
pop
cmpsl
push
xchg
jne
adc
and
mov
adcl
insb
dec
sub
push
mov
ret
clc
into
mov
loop
jb
and
adc
pop
rorb
dec
jg
jo
push
lea
sbb
fs
cmc
xor
pusha
aad
aaa
shrb
mov
xlat
sahf
jle
jecxz
imul
adc
ret
and
jge
scas
negb
nop
movsl
aas
and
dec
dec
dec
adc
cmc
pop
xorl
push
jp
or
pop
push
mov
inc
xchg
in
or
lods
leave
in
data16
fnsave
mov
pop
test
sub
cmpsb
icebp
jnp
mov
xchg
daa
lods
and
mov
jns
jbe
mov
inc
inc
stos
mov
mov
test
loope
sub
fnsave
pop
out
pop
enter
mov
stos
xchg
add
js,pt
rclb
bound
pushf
add
int3
aas
push
jmp
pop
xchg
mov
or
sbb
int
icebp
insb
mov
xchg
in
fwait
pop
add
stos
jmp
out
xor
jge
add
pop
add
cmp
iret
push
add
fisttps
cmp
out
hlt
inc
cwtl
pop
ds
fisubrl
shl
adc
sahf
mov
stos
mull
mov
adc
push
cmc
jno
mov
push
out
pop
mov
lret
push
add
inc
mov
jmp
dec
adc
or
pmaxsw
sbb
mov
lods
lahf
fstpt
push
testl
sbb
fwait
popf
mov
lods
imul
jg
dec
inc
dec
pop
jl
cmp
scas
imul
add
cmp
dec
dec
sub
push
mov
mov
aam
or
sub
bound
mov
movsb
iret
repnz
inc
nop
cmp
push
push
add
testb
jmp
xchg
call
das
ds
mov
sbb
fisttps
cs
out
fs
cmp
out
xor
add
mov
into
jg
inc
in
les
push
and
sbbb
xor
sbb
adcl
sahf
jno
cmp
insb
pop
xlat
in
lds
das
repnz
je
push
insl
scas
jp
pop
and
and
ljmp
in
sub
xor
xchg
lahf
ja
out
fs
xor
or
repz
dec
adc
test
popl
cs
xchg
push
fwait
and
dec
pop
out
shl
xchg
xor
push
insl
lret
lods
mov
jb
pop
daa
inc
dec
out
mov
mov
ss
push
test
xor
push
dec
loope
cs
bswap
xchg
nop
js
dec
lods
out
mov
loopne
je
lahf
pop
outsb
test
fwait
mov
mov
cmpsb
xlat
mov
sub
mov
xchg
and
shrl
xor
outsl
aam
bound
aas
pop
in
mov
dec
int
addl
dec
adc
pop
xchg
shl
scas
or
popa
out
stc
xor
not
add
call
jnp
je
lock
mov
inc
rorb
or
scas
add
push
rorb
lds
dec
shr
pop
roll
inc
mov
stos
sub
xorl
add
sbb
add
pop
push
lahf
pop
lret
mov
sub
pop
push
cmpsl
es
lret
add
inc
insl
lds
andb
test
xchg
icebp
subb
dec
nop
sbb
xchg
adc
dec
cmp
js
pusha
add
mov
fwait
gs
sbb
pop
sub
ja
ds
jbe
xchg
gs
pop
in
inc
or
mov
popa
arpl
pop
pop
jl
ret
lods
jae
inc
sbb
arpl
push
ss
add
push
bound
push
cmpsb
mov
lret
mov
nop
sbb
cld
add
or
cld
pop
out
xlat
movsl
adc
mov
add
mov
and
jae
add
hlt
jb
dec
loopne
cmc
pop
cwtl
fcoms
and
push
imul
dec
jecxz
mov
push
nop
in
es
jecxz
jno
int3
pop
cltd
mov
in
pop
mov
stc
test
and
adc
mov
dec
and
push
xchg
xlat
mov
popf
outsl
fdivr
mov
mov
dec
ljmp
sub
repnz
push
scas
xchg
or
or
inc
or
xchg
push
bound
imulb
push
cmpsl
sbb
ds
cmpsb
mov
mov
xor
jb
jl
xchg
hlt
add
mov
dec
fcoml
push
pop
push
lods
mov
jl
inc
mov
push
pop
inc
aaa
das
or
cmp
dec
push
insl
js
out
lods
mov
jle
shr
insl
mov
mov
jle
or
xor
xorb
shrb
outsb
into
add
and
test
jl
es
lahf
push
es
lods
add
pushf
sti
push
cmp
lock
cmpb
jno
mov
fidivl
sarb
and
xlat
adc
mov
movsl
aas
sub
mov
xchg
rcrl
std
inc
jnp
movsl
rolb
cmp
fmuls
mov
loop
mov
inc
pop
imul
fwait
jle
or
xchg
scas
add
mov
fisubl
cld
lret
aad
add
pop
fldt
aas
mov
roll
sub
shlb
inc
out
in
sub
lret
imul
sbb
test
addr16
sahf
jno
shll
pop
pop
jp
pop
fxtract
aam
xor
cli
sbb
and
stc
pushf
pop
test
aam
test
xor
mov
and
aam
aas
stos
and
push
and
inc
out
xor
or
xlat
addr16
aad
nop
aam
push
mov
rcrb
add
pushf
insl
fdivr
les
cmovp
push
or
push
scas
imul
add
mov
out
cmp
sbb
movsb
add
and
cmp
int3
or
stos
or
xchg
imul
cmpsb
xchg
cld
jg
or
in
outsl
xchg
insl
pop
bound
gs
jbe
rcrl
xchg
icebp
lret
es
push
stos
or
or
data16
mov
scas
scas
adc
pop
mov
adc
mov
enter
inc
rcrb
or
inc
dec
sbb
sub
addl
sbb
jne
push
mov
pop
sub
mov
cmp
pop
mov
clc
nop
push
mov
out
std
xchg
xchg
lcall
mov
push
sub
mov
lcall
lret
jo
out
sub
stos
mov
lcall
push
roll
inc
pop
xor
test
or
aam
or
js
mov
sub
in
xchg
adcb
mov
sti
mov
mov
cli
cmp
stc
xlat
cmp
icebp
add
sub
ret
stos
jne,pt
shlb
dec
rcl
and
sbb
inc
adc
icebp
adc
rcrl
inc
mov
cltd
mov
dec
loope
addr16
xchg
sbb
or
mov
sub
pop
loope
ljmp
imul
movsl
out
add
in
add
mov
jno
or
test
out
arpl
fdivrl
xchg
inc
xchg
bound
cwtl
fadds
mov
lock
mov
dec
stc
jl
in
and
inc
inc
jecxz
xchg
pop
pop
sbb
jnp
outsl
mov
inc
inc
push
or
cmp
xchg
in
mul
and
in
push
cmpsb
daa
ds
lret
mov
call
idivb
sbb
insb
dec
mov
pop
hlt
mov
aas
mov
adc
pushf
mov
fdivl
dec
lock
inc
aam
lea
lahf
mov
xchg
sub
mov
fisttpll
cmp
push
notb
ss
outsl
cwtl
rorb
cmp
and
pop
sti
imul
jle
push
addl
stos
stc
mov
push
cmp
sub
repz
xor
in
jmp
ljmp
mov
call
xor
cmp
nop
lods
addr16
mov
add
add
inc
shll
inc
les
gs
xor
lock
orl
pop
pop
jne
sbb
add
xchg
in
loope
and
mov
jbe
dec
xchg
mov
push
testb
xor
xchg
adc
cli
movsl
mov
dec
push
push
lock
outsb
movsb
shrl
hlt
push
adc
into
jg
mov
loop
and
cmp
mov
cwtl
adc
rorl
in
div
std
mov
pop
pop
sub
fwait
jmp
test
mov
pop
xchg
fdivr
popa
movsb
pop
cmp
lock
sub
negb
nop
lods
repnz
in
jge
inc
out
mov
pop
jnp
dec
or
mov
lcall
add
cltd
and
pop
insb
sub
mov
add
lret
push
adc
out
subb
cs
pop
stos
sti
lock
test
mov
inc
sbb
scas
sub
xlat
loope
test
jmp
sbb
outsl
jne
arpl
or
dec
daa
xlat
push
pop
wbinvd
leave
in
inc
paddq
cmp
imul
cwtl
fisubl
fsubs
arpl
adc
out
sti
mov
in
xchg
inc
dec
jae
scas
add
popf
mov
lret
xchg
mov
mov
cmp
cli
inc
pop
mov
mov
xchg
dec
jmp
jo
inc
and
aad
jmp
insl
hlt
dec
add
pop
lea
pop
and
mov
lods
dec
ss
sub
ljmp
stos
and
mov
mov
or
jno
aam
mov
shr
cmp
jae
jne
jge
push
lock
inc
jle
in
jg
testb
cmp
jecxz
mov
mov
sbb
pop
insl
std
fisttpll
sub
mov
dec
push
jne
adc
mov
movsb
jge
and
jno
inc
dec
mov
orl
xchg
mov
dec
test
xchg
fdivs
mov
outsl
sub
rcll
mov
fmull
mov
in
sbb
fldl
loopne
xchg
aad
not
cmpsb
fnstsw
cmp
mov
ret
bswap
js
mov
stc
cmp
or
xchg
movsl
test
cmp
int
or
sbb
stos
aad
int3
enter
stc
ss
add
cli
orb
pusha
jbe
stos
jg
icebp
mov
scas
lods
jae
das
jnp
std
pop
ljmp
xor
bound
jl
or
jle
ds
jno
mov
test
xchg
and
sbb
dec
mov
pop
stos
xchg
or
pop
scas
call
xor
fs
mov
arpl
jo
lahf
js
out
or
and
loop
cmp
jnp
jo
cmp
xor
push
rol
xlat
mov
sbb
stos
jns
les
rcrl
insb
into
cltd
pop
adc
xchg
sbb
div
in
orb
pop
cwtl
cltd
inc
add
movsl
mov
mov
mov
pusha
mov
repnz
cwtl
add
hlt
mov
fbstp
fsts
test
incb
or
dec
lods
cmpsb
dec
fcompl
and
bound
push
insl
mov
call
and
and
mov
lea
lods
xlat
mov
cmp
push
mov
ret
int
pop
cs
in
insl
stos
mov
or
push
push
lret
adc
push
add
push
test
in
adc
lods
mov
cmovo
and
jb
xchg
dec
inc
inc
cmpsl
shlb
shlb
lds
dec
push
xor
out
xor
fisttpl
or
and
dec
daa
xorl
arpl
popf
stc
shlb
jns
or
or
mov
outsl
fs
xchg
es
in
das
in
popf
and
jno,pn
divb
call
mov
repz
push
bound
and
adc
and
push
push
inc
or
sar
adcb
mov
rcrb
pop
mov
pop
mov
mov
xor
pop
into
call
sbb
sub
push
daa
test
and
cmc
xchg
push
mov
inc
dec
ja
mov
repz
jb
add
out
mov
imul
lods
jb
or
out
add
cmpsb
loop
out
push
dec
push
xor
sti
mov
shrl
dec
push
jb
daa
negb
insb
push
jne
movsl
pop
or
and
xor
aam
in
push
rcr
andb
and
scas
arpl
cmpb
mov
pcmpgtb
pushl
pop
mov
inc
adcl
dec
xor
mov
or
lret
and
ss
adc
cmp
cmp
cmp
mov
jecxz
stos
imul
pop
sbbb
xchg
lret
push
sub
or
mov
pop
lds
fadd
pop
jno
inc
pop
mov
cs
in
test
fcomps
icebp
scas
jo
mov
lock
arpl
cmpsb
ret
pop
aas
mov
cmp
mov
and
and
pusha
cmp
inc
xlat
jge
dec
ds
add
fsubrs
popf
shlb
and
mov
out
sti
adc
std
hlt
mov
data16
stos
push
cmpsl
push
adc
push
fldt
pop
addr16
lock
lock
cmpb
xchg
and
xchg
add
and
dec
imul
lods
ret
push
gs
out
inc
in
stos
push
fs
jmp
sbb
push
push
jo
pop
xor
ret
outsb
test
cmp
xchg
sbb
lea
mov
lock
jg
mov
test
xor
aad
les
mov
inc
out
dec
cltd
dec
jns
or
arpl
arpl
mov
sbb
push
call
js
and
cmp
mov
mov
xor
push
je
inc
in
mov
xor
inc
sahf
rcr
mov
cmpsb
pusha
je
inc
call
xlat
push
insb
fxch
dec
jge
fcoml
ds
lea
sub
arpl
pop
aas
mov
outsl
xchg
sbb
xchg
xor
pusha
je
insb
jno
out
out
mov
icebp
icebp
and
rcrl
fiadds
jmp
mov
add
xor
addl
push
xor
sub
bound
pop
enter
out
xor
or
mov
jecxz
imul
fdivs
pop
imul
adcl
cmp
and
in
jno
cmpb
inc
jbe
cltd
lods
cld
pop
daa
mov
mov
sahf
in
cmp
mov
cmp
pop
adcl
lods
aam
out
cmp
mov
cs
cwtl
dec
stos
mov
pusha
insb
adc
pop
xor
insb
lea
push
push
cmp
or
pop
mov
sbb
push
shrb
xchg
sbb
sbb
popf
add
mov
pop
ss
rcl
cwtl
imul
ret
std
out
ror
mov
pop
or
push
add
arpl
insl
cltd
sub
cmp
ret
lods
mov
jecxz
out
dec
dec
push
pop
add
popw
lcall
negl
pusha
push
shlb
dec
sbb
sub
aad
dec
lock
adc
cmp
mov
sub
adc
bound
int
dec
jp
bound
gs
test
mov
movsl
jmp
mov
push
cld
loope
pop
adc
push
aam
ljmp
out
fwait
and
mov
sub
pop
pop
sbb
pop
cltd
subl
push
sbb
lcall
ljmp
shrb
aas
aam
mov
fabs
inc
or
jecxz
jmp
fcmovnb
pusha
mov
ljmp
sbb
xor
adc
js,pt
mov
adc
dec
mov
cwtl
mov
cltd
xor
adc
pushf
out
out
dec
fcmovb
sub
xor
sahf
lret
and
fmul
cmp
jmp
lea
jp
add
jmp
sbb
lods
jo
xchg
jmp
mov
xor
int
xchg
shlb
pop
adc
ljmp
jge
jo
cmp
or
mov
daa
int
push
imul
out
mov
insb
std
sahf
mov
push
lcall
mov
mov
mov
or
pop
xchg
mov
ret
shl
push
pop
fwait
xchg
add
mov
sub
cmp
dec
sub
jp
ret
lock
loop
shrb
jl
and
sub
push
jge
ds
popa
cld
and
xor
repnz
add
xchg
pusha
lret
cs
hlt
jo
cmc
cli
leave
in
lret
cld
adc
xchg
call
cmp
ja
push
pusha
mov
outsl
mov
filds
inc
jb
or
and
ljmp
sbb
xchg
pop
cli
cld
ljmp
lods
out
fwait
sarl
icebp
or
cwtl
bnd
dec
stc
es
inc
negl
aas
ss
fwait
add
stos
into
leave
cmp
jmp
clc
xchg
dec
mov
pusha
int
stos
cmp
add
adc
sbb
imul
pop
pop
pop
xlat
cmc
jg
adc
push
or
test
inc
sub
push
enter
stos
test
dec
and
mul
add
cmp
push
pop
fnsave
divb
add
sub
ja
out
hlt
xor
sbb
rorl
in
fmull
jmp
inc
imul
xchg
inc
cmc
pushf
mov
add
push
ret
sbb
inc
sbb
sbb
cltd
pop
sub
cli
xlat
pop
mov
hlt
jns
mov
jb
mov
mov
je
or
or
scas
or
aaa
mov
aam
mov
pushf
lret
cli
jo
cli
mov
fwait
andb
rclb
xchg
nop
mov
sub
pop
in
jecxz
or
movsl
lods
or
adcb
add
xchg
lret
push
stc
sub
shrb
add
fsts
and
lcall
andnps
call
mov
addr16
iret
sti
add
int
ret
inc
xlat
bt
pop
orl
dec
iret
cs
rclb
xor
xchg
fistpl
test
cmp
dec
xor
rcll
cmp
aam
jle
mov
pop
repnz
inc
pop
scas
sub
jns
stos
jg
loopne
inc
test
adc
mov
push
pop
push
cmpsl
js
call
rorl
jg
push
jne
push
fistl
dec
out
in
imul
fildll
mov
js
shll
inc
add
xchg
sub
hlt
mov
loopne
mov
lock
out
cmp
mov
add
lods
xchg
mov
push
xchg
in
insb
mov
mov
push
fists
and
dec
mov
cmp
insb
insl
outsb
rorl
scas
inc
fstps
nop
sbb
cmp
jns
jns
repz
inc
into
cmp
push
xchg
dec
dec
mov
push
xor
mov
insl
push
and
add
test
jl
xchg
fs
inc
pop
hlt
mov
jle
into
jbe
push
cmp
mov
cmp
mov
ret
cld
jo
aas
jbe
jno
push
xchg
jbe
add
sub
mov
xlat
in
out
or
gs
pusha
sub
jge
sbb
jb
stos
inc
aad
test
jns
xor
mov
ljmp
stos
sbb
leave
call
or
pop
cwtl
dec
adc
sub
xchg
and
pop
daa
sar
xor
insb
adc
call
lret
pop
cmp
jbe
fdivrl
out
xchg
mov
xchg
jae
sbb
out
jo
fadds
push
or
neg
add
hlt
in
dec
inc
stc
sbb
jb
xor
aad
lcall
jmp
adc
imul
push
inc
cmp
push
lods
add
mov
fsts
or
or
movsb
sti
in
mov
adc
pusha
mov
aaa
ret
inc
out
int
insb
jne
imul
dec
shll
bound
jnp
int
and
pop
lock
cwtl
mov
cmp
and
popf
pop
arpl
pop
ret
sub
shrb
mov
push
pop
sub
xor
mov
lahf
popa
xlat
lret
std
push
stc
or
pushf
or
pop
xchg
and
adc
andl
sahf
out
push
mov
cmp
mov
lock
stos
cmp
dec
scas
dec
fwait
xor
jg
cltd
or
in
mov
pop
push
arpl
in
cmp
into
xchg
cmc
jp
insb
or
mov
inc
xor
or
push
cmp
mov
jg
imul
and
adc
iret
les
jle
popl
xorb
mov
cld
lea
sahf
loope
mov
cld
jne
mov
mov
push
es
dec
hlt
repz
pop
mov
jecxz
pop
or
xor
mov
push
cld
xchg
mov
mov
mov
aam
iret
mov
push
cmp
int
inc
inc
xor
jnp
int
mov
notb
or
cmp
ljmp
stc
lret
and
pop
xchg
add
lahf
inc
jp
jp
into
xchg
or
xchg
cmc
test
sub
push
xchg
arpl
sahf
je
nop
icebp
sahf
paddusw
mov
adc
xchg
aaa
jnp
sub
ljmp
push
xor
rorl
and
and
fwait
push
xor
iret
adc
xchg
push
adc
xchg
jne
mov
push
jp
pextrw
inc
adc
dec
pop
pop
mov
fbstp
je
sbb
sbb
add
xor
or
sub
mov
sarb
mov
or
cmpsl
mov
mov
pushf
jnp
sbb
sbb
mov
xchg
fst
inc
popf
orb
fwait
inc
push
mov
push
xor
add
mov
outsl
fistps
pop
mov
test
add
out
int
jo
movsl
sbb
adc
mov
xor
bound
fcompl
loope
add
xchg
mov
sub
cmp
mov
add
mov
push
sbb
mov
push
pop
or
in
sti
pop
inc
jmp
aaa
xor
dec
pushf
push
push
call
add
and
shll
mov
ret
push
enter
inc
and
push
dec
nop
imul
lret
mov
les
aad
xchg
clc
cmc
xchg
xlat
push
sbb
mov
jne
lcall
adc
and
addr16
ja
add
sbb
subb
repz
jle
mov
pusha
adcl
jo
mov
push
xchg
imul
inc
pop
dec
cmp
xor
inc
popf
iret
adc
push
or
cmp
mov
pusha
rcrb
and
insb
cltd
sahf
mov
cmc
loope
into
mov
arpl
in
push
outsl
pop
iret
je
aaa
mov
cltd
mov
aam
or
push
aaa
mov
stos
outsl
inc
dec
in
dec
test
mov
mov
imul
adc
xor
mov
sub
xchg
and
xlat
outsl
sub
mov
dec
adc
lods
lcall
and
sbb
sub
mov
jge
or
cwtl
repnz
int3
mov
inc
jge
in
jo
sub
push
insb
lret
ret
pop
test
jnp
mov
push
mov
js
jle
dec
loope
sub
repz
cmp
iret
icebp
pop
lcall
aaa
cli
push
cwtl
lahf
lods
insl
jb
sbb
dec
cmc
mov
sti
push
mov
fwait
and
mov
and
mov
dec
cli
int3
and
cmp
lret
pop
mov
loop
fcmovnb
xor
jp
inc
ret
fstpl
popa
scas
or
cmp
inc
adc
push
cmp
sarb
jg
lods
addr16
mov
xchg
mov
pushf
sbb
sub
push
int3
xchg
and
test
iret
icebp
into
stos
jb
cmpsb
or
fwait
xor
push
xchg
push
incl
dec
pop
mov
outsb
leave
cltd
fdivr
ljmp
in
fdiv
ret
mov
lret
dec
sub
fwait
aad
push
das
push
loope
fsub
and
andb
fisttpll
std
pop
mov
shr
testl
btr
or
push
pushf
std
push
and
cs
jae
adc
std
out
data16
mov
out
outsb
and
push
mov
dec
cmp
fnsave
xor
int
loope
mov
js
hlt
xchg
pop
cmp
pop
bound
fldenv
int
push
jg
mov
jle
mov
inc
pop
mov
aam
xor
push
repnz
mov
mov
and
push
into
push
stc
arpl
push
or
popf
xchg
and
inc
jp
es
clc
popf
test
in
sbb
push
pop
loop
lahf
jmp
lcall
xlat
decl
rclb
fnstenv
loopne
cltd
in
and
fwait
or
sbb
push
ja
mov
jae
insl
nop
cmpsb
pop
mov
xlat
cld
loopne
sysret
jno
imul
cmp
aad
sub
sbb
leave
mov
xor
xchg
lret
xor
std
push
sbb
adc
or
jmp
xchg
fwait
mov
gs
pop
movsl
adc
jge
iret
sbb
jmp
ds
jl
push
call
in
xchg
fnstsw
aam
mov
pop
out
inc
out
das
dec
popa
jae
cmp
dec
jbe
scas
sbb
adc
nop
loope
bound
xchg
adc
pop
mov
inc
scas
scas
shrb
and
cmpsl
push
out
jnp
jecxz
inc
push
sbb
adc
xor
mov
stos
arpl
mov
push
inc
mov
into
pop
imul
stos
inc
popa
stos
xor
adc
add
push
sbb
test
xchg
sub
nop
popf
test
ss
lods
jb
mov
mov
fidivl
pop
push
adc
push
call
loopne
bound
cmpsl
mov
mov
sub
push
into
cld
lahf
cs
inc
jo
negl
arpl
mov
xor
xor
repnz
mov
out
push
jno
mov
inc
jo
add
add
adc
inc
or
mov
inc
cs
aad
pop
inc
aaa
xchg
pop
imulb
xor
inc
icebp
mov
mov
repz
lea
pop
loop
adc
movsl
je
dec
imul
mov
jno
or
add
mov
adc
xor
dec
mov
inc
mov
test
fstl
sbb
add
int
cmp
fcmovbe
cmpsl
jp
int
fcoml
rcrl
hlt
imul
xor
cmpsl
sbb
mov
cmp
adc
push
ljmp
bnd
lock
mov
cmovne
xchg
sub
movsl
jns
jns
imul
loope
into
test
add
rcll
adc
cmp
sbb
mov
sti
rolb
popf
jbe
dec
mov
xchg
or
inc
fimuls
mov
mov
sti
push
fdivl
or
mov
add
pop
pop
xchg
mov
add
pop
and
xor
cmp
icebp
jne
xchg
xchg
aad
push
and
xchg
inc
daa
cmp
cmp
dec
inc
inc
fwait
arpl
in
ds
push
or
cmp
inc
inc
scas
jl
push
test
jmp
aad
mov
lret
ljmp
sahf
mov
cs
sti
mov
cmp
jge
ss
cmc
shlb
add
mov
aas
mov
call
sbb
sub
stos
xor
add
out
imul
push
jae
pushf
push
clc
jecxz
daa
mov
cmp
cmp
sub
lock
add
xchg
shll
aaa
push
sub
shrl
add
cwtl
pop
addr16
outsb
push
andb
jae
setne
sbb
sbb
or
pop
dec
sub
mov
int
jnp
imul
sub
iret
shrb
push
jae
adc
sbb
stos
mov
push
jp
addr16
clc
in
xor
dec
mov
ret
adc
push
in
or
icebp
out
inc
dec
xor
or
inc
out
daa
xchg
mov
adc
push
call
aaa
mov
mov
and
ljmp
jg
cmc
and
lret
xchg
rolb
aaa
loope
mov
mov
cmpsl
mov
mov
jmp
test
jae
test
insl
mov
xchg
pop
mov
mov
std
ret
ds
pop
add
pushf
push
insl
jns
cmp
and
xor
push
mov
sbb
es
jnp
inc
sti
cld
xchg
mov
dec
test
or
inc
loope
pop
shll
arpl
mov
sbb
leave
cmp
inc
frstor
xor
lahf
mov
icebp
push
adc
xchg
jb
push
nop
add
inc
es
ret
imul
lcall
cmpsl
cwtl
sub
jle
xchg
xor
enter
cmp
or
lock
in
daa
inc
xchg
idivl
xor
ds
loopne
imul
pop
push
push
and
add
and
sub
sbb
imul
pushf
and
push
in
loope
push
fsts
lods
int3
cmp
push
xor
mov
xchg
cmp
inc
xchg
mov
jmpw
ljmp
cmpsl
das
mov
push
xchg
mov
xchg
add
scas
mov
fwait
sub
inc
pop
mov
cli
int3
sub
sub
pop
ja
dec
cmc
bound
in
mov
lods
cs
sub
dec
dec
insb
hlt
sub
and
div
pop
pop
ja
fcompl
adc
bound
idivb
data16
xchg
dec
aas
xchg
stc
adc
or
mov
cld
push
and
ret
std
movsl
cwtl
adc
push
out
jl
push
push
jb
cmp
insb
mov
jge
jne
insb
test
push
adc
add
repnz
mov
xor
mov
stc
movsl
adc
je
ret
lds
flds
mov
test
mov
cmp
mov
ja
add
cmp
mov
jge
rcr
and
xrelease
rolb
arpl
popa
icebp
cmp
ja
xor
xor
push
push
mov
xor
jb
ds
dec
and
ret
sub
fcmovnbe
mov
jno
rcrb
imul
orl
mov
test
testl
roll
fsubrl
inc
fwait
movl
mov
jo
sbb
inc
xor
mov
or
sub
fwait
lcall
jmp
mov
jg
mov
adc
push
and
in
mov
pop
add
stos
shlb
xchg
jne
inc
and
push
add
mov
sub
mov
jmp
sub
pushf
xor
imul
cmc
and
orb
cmp
inc
addr16
loope
inc
sub
sbb
xchg
daa
aad
and
pop
jne
xor
add
insb
sbb
popf
sub
pop
mov
fsts
imul
adc
cmpsl
movsb
and
test
jns
and
and
push
outsl
add
pop
inc
adc
sahf
insl
sbb
mov
push
out
rcrl
cmc
test
push
and
cmpsl
fdivl
cmp
js
mov
xchg
cmp
icebp
mov
jno
adc
push
out
pop
adc
add
jmp
sahf
mov
xor
rcr
jns
inc
sub
lods
mov
aaa
not
outsb
daa
test
mov
and
test
mov
negl
sahf
cltd
out
mov
add
sahf
mov
cs
aam
dec
xor
pop
dec
pop
ja
into
sbb
movsb
jg
out
movsl
ja
pop
scas
popl
inc
fs
push
mov
insl
ret
std
xchg
dec
fcmovne
cmpsl
push
pushf
sahf
cmpl
dec
pop
dec
sar
imul
jl
mov
sbb
sub
sbb
out
das
ret
out
fldl
inc
out
nop
test
fdivrl
jne
fwait
dec
sub
clc
cmpsl
mov
inc
mov
pop
mov
mov
js
mov
jnp
ds
popf
aam
jp
inc
push
popa
sub
cmc
jnp
mov
out
ja
es
lods
mov
sub
daa
rcr
or
out
inc
idivb
mov
mov
jo
or
mov
stc
stc
imul
mov
push
jle
ror
pushl
mov
dec
jle
roll
pop
mov
jg
push
test
rclb
rorl
jmp
aas
loopne
imul
and
pop
mov
mov
jecxz
push
aaa
push
sub
jp
mov
jne
push
loopne
jns
jbe
add
fidivrs
xchg
jmp
mov
xchg
pusha
call
or
pop
push
divb
add
lods
add
cs
iret
mov
push
test
or
in
or
das
mov
pop
vinserti32x4
mov
das
leave
lock
imul
cwtl
pop
or
imul
dec
insb
pop
jb
dec
aas
xchg
jne
push
push
and
fisttps
lcall
xchg
into
mov
and
jne
repz
pop
mov
repnz
xchg
jo
mov
cmpsb
cwtl
sub
aas
xchg
jo
inc
mov
or
and
sarb
lea
lock
dec
mov
adc
mov
xlat
movsl
dec
in
pop
pop
fimull
mov
jno
rol
arpl
sahf
cmp
pop
cltd
add
leave
cmp
jno
add
lahf
iret
das
jge
push
pop
xchg
or
cmpsl
imul
ret
push
decb
adcb
xchg
inc
dec
pusha
adcl
mov
cmpb
add
inc
jmp
jg
test
lcall
flds
push
fwait
push
leave
in
out
fcomip
xor
int
add
dec
dec
bound
ljmp
mov
test
xlat
int3
stos
push
mov
repnz
hlt
mov
out
insb
std
sub
dec
shlb
aaa
shll
cltd
mov
xchg
icebp
mul
jnp
and
call
popa
ret
jnp
lret
push
addr16
and
or
cmp
daa
inc
incl
shrb
inc
out
xor
add
jp
push
sub
and
xchg
repnz
xchg
cmpsl
or
mov
xchg
stc
stc
es
std
loope
mov
or
sbbl
ret
pop
aam
mov
lods
pusha
adc
jne
sbb
mov
pusha
mov
and
sti
aas
fildll
push
cs
jge
cld
leave
fists
sti
jno
push
pop
inc
mov
pop
xor
sbb
movsb
sub
mov
movsb
xlat
sbbb
add
jl
aas
dec
rcrl
cmpsl
sahf
jne
lret
iret
hlt
fadd
inc
cld
or
aas
mov
and
icebp
mov
repnz
inc
and
rclb
shld
dec
repnz
dec
cmpsb
mov
add
out
sti
out
cmp
gs
jae
xor
in
hlt
icebp
sub
div
das
jne
aad
shll
pop
mov
sbb
cmp
fmull
ja
or
fistpll
sbb
aaa
adc
push
add
or
push
dec
pop
xchg
imul
lret
lret
jecxz
mov
xchg
sbb
sub
pop
aaa
cmpl
insl
pop
jmp
fsubr
das
stos
adc
call
sti
lock
call
enter
sar
std
dec
add
addr16
cmc
or
cmc
movsb
fistl
push
mov
das
and
and
cmpsl
jno
mov
clc
dec
push
mov
repnz
scas
cmpsb
xor
lods
xchg
dec
cmpsl
push
cmpsl
bound
or
jae
mov
sub
loope
jo
fsubl
rcrb
cmc
mov
cltd
lods
push
imul
cwtl
mov
sub
jno
cmp
rcl
and
pusha
sbb
lea
int
cltd
jecxz
dec
cmp
xchg
out
cmp
cmpxchg
je
andb
dec
lret
dec
jge
fstpl
sbb
test
ds
loope
mov
lods
out
and
jmp
pushf
sti
into
out
loope
mov
mov
mov
inc
sbb
jecxz
or
or
adc
daa
or
movl
fxam
mov
jp
xchg
sbb
insb
sbb
cmp
add
out
xchg
mov
pop
stos
jbe
push
fbld
push
clc
insl
movsb
push
cld
adc
lods
shll
sbb
jl
mov
fistps
fdivrs
xchg
leave
sub
pop
imul
out
fisubs
in
andl
add
insl
sub
pusha
or
cmp
pop
rclb
ss
fsubrs
int3
mov
sti
imul
hlt
sahf
pop
jmp
xchg
sbb
jle
mov
jb
scas
inc
dec
mov
xlat
jae
or
jae
out
cmpsl
in
or
pop
pop
lahf
lods
cltd
mov
cmp
inc
mov
lods
xchg
sub
xchg
or
sub
mov
mov
out
xlat
daa
lods
andl
ljmp
adc
sahf
nop
out
mov
fstps
xchg
outsl
xor
xor
es
sbb
cmp
jns
jge
adc
xor
adc
pushf
sbb
loopne
jns
push
push
xchg
fnstcw
seto
dec
pop
jp
lods
add
arpl
push
fs
sub
pop
xchg
cmpsb
fstps
dec
inc
clc
mov
test
sbb
pusha
mov
add
je
inc
jmp
imul
aam
or
in
and
push
pop
sahf
xor
std
arpl
mov
stos
cwtl
or
cmp
out
push
mov
sub
mov
int
std
ss
shrl
pmaxub
jmp
arpl
in
push
xor
dec
pop
lods
stos
add
aam
ret
ror
pop
loopne
and
in
jb
outsl
adc
dec
push
sub
inc
xor
cld
inc
test
xlat
loopne
dec
xchg
push
push
dec
popa
jmp
dec
mov
ja
dec
ret
push
dec
inc
mov
mov
repnz
ds
lahf
out
lret
xchg
pusha
pusha
pop
inc
sub
outsl
mov
mull
sbb
mov
mov
xchg
cmp
mov
add
sbb
rcrl
jno
addl
push
pop
insl
jae
sbb
rcrb
push
xchg
push
push
cmpsb
scas
sub
mov
popl
xlat
shlb
cmp
xlat
int
fidivrs
or
add
loop
jmp
mov
ljmp
sub
in
cltd
in
shrl
je
xor
adc
push
xchg
xchg
dec
addr16
xor
clc
add
inc
mov
dec
fsubrs
scas
jno
pop
add
inc
cmp
nop
out
push
clc
cs
push
mov
testl
test
xchg
xchg
mov
sub
xchg
scas
xlat
cs
mov
xchg
outsl
mov
sahf
test
mov
jg
cmp
loope
orl
bnd
inc
cmpsl
cmc
add
pop
xchg
in
xor
and
icebp
push
mov
icebp
xchg
movsb
xorl
or
or
mov
pushf
in
pop
and
or
mov
lds
fisubrs
push
in
jl
mov
sub
or
push
mov
cld
xchg
addr16
ds
pusha
mov
xchg
test
or
je
aad
add
cmp
mov
jecxz
add
and
adc
cwtl
mov
fsubp
imul
sub
xor
mov
rcrb
or
pop
push
cli
jno
jl
sar
pop
mov
mov
pop
loope
xlat
mov
shrl
fdivrs
mov
pop
pop
mov
cltd
inc
mov
rcr
dec
popa
shrl
mov
popf
rolb
dec
jle
sti
push
adc
lret
loop
xchg
lds
jge
fwait
into
into
dec
and
mov
dec
imul
cmp
iret
daa
and
insl
push
lret
mov
and
ja
dec
pop
pop
mov
fildl
or
fxch
repz
out
mov
jle
jecxz
or
jle
inc
push
xchg
push
inc
cmpl
xchg
dec
scas
lret
rclb
dec
pop
mov
cmp
int
jmp
or
push
push
or
imul
rcl
cmp
push
cltd
mov
in
ja
les
lods
int3
cs
loope
stos
lret
cs
in
aam
loop
inc
inc
stos
daa
inc
pop
cmp
xchg
mov
cmpsb
sub
sbb
jb
das
xlat
lret
jo
fistpll
cmp
ret
xchg
cmp
scas
test
hlt
stos
repnz
movsl
ljmp
dec
inc
xchg
inc
push
decb
in
clc
mov
xor
xchg
xchg
cmp
test
jmp
dec
popa
cmp
stos
sbb
xchg
loop
push
xor
repnz
xlat
pusha
das
setb
mov
fcompl
cmpsb
lods
sbb
das
cld
lret
push
or
inc
test
xchg
out
in
insb
sahf
inc
jle
inc
xchg
jns
cwtl
xchg
add
pop
sbb
mov
in
and
popa
xchg
out
movsl
push
sbb
mov
mov
sti
clc
pop
push
movsl
inc
mov
fistpl
ret
shll
mov
popa
xor
testl
mov
adc
dec
fisubl
fcoms
cmova
rcr
test
inc
or
and
push
mov
xchg
jp
movsl
ret
fisttpl
jns
inc
xchg
jp
sbb
dec
test
in
pop
xchg
mov
out
inc
push
or
xchg
xor
jo,pt
enter
xor
stc
repnz
call
in
pop
cmp
pop
lret
and
stc
scas
pop
jg
das
in
les
jmp
into
mov
mov
int
subb
iret
cli
outsb
cmp
push
js
outsl
mov
add
stos
xchg
mov
cwtl
jns
ret
jnp
cs
cmpsl
pop
mov
cmc
mov
or
or
sarb
out
clc
xor
push
scas
mov
and
mov
add
test
rcrl
popf
mul
xor
call
push
jl
sub
icebp
bound
fldl2e
sahf
fnsave
roll
dec
inc
xchg
jne
push
pushf
or
sti
push
pop
ds
push
sbb
outsb
hlt
push
test
cli
add
popl
pushf
daa
pop
es
aad
clc
mov
mov
jecxz
sbb
dec
std
fiaddl
adc
cli
iret
repnz
inc
shll
call
push
aam
mov
or
pop
or
inc
mov
fisttps
cmpsl
aaa
shrl
fucomip
rcl
sub
icebp
leave
out
jnp
xchg
shll
sbb
test
cwtl
sbb
lods
jp
mov
mov
mov
dec
imul
mov
mov
jb
shrb
xchg
sbb
dec
das
cmp
int
adc
mov
pop
xor
mov
or
pop
mov
cwtl
push
inc
pushf
pop
sbb
ljmp
push
outsl
hlt
sub
mov
xor
push
pop
mov
rorb
add
xchg
in
or
inc
sub
cmp
in
sub
mov
idivl
xchg
sub
test
out
sarl
or
pushf
in
fistl
jmp
dec
sbb
jo
and
and
fdivl
cmpsl
je
jp
jb
and
mov
lods
mov
jmp
andb
sbb
jbe
aad
aaa
push
add
cmpsb
enter
test
pop
out
xor
sub
pop
jge
sti
mov
cmc
in
call
cwtl
jecxz
or
add
or
jecxz
lods
data16
sbb
xor
add
fs
dec
ja
out
movsl
or
addr16
push
lcall
sub
jge
loope
aad
lods
divl
xor
into
add
xlat
jle
std
add
jne
insl
leave
sbb
xor
loope
xor
outsl
lock
fmull
fimuls
fdivs
sbb
hlt
push
or
sub
or
pop
pop
inc
in
cwtl
rcrl
loopne
leave
pop
test
test
movsl
cmp
addr16
jecxz
pop
mov
mov
cmc
mov
adc
xchg
jbe
mov
sbb
mov
dec
jno
cmc
movsb
cmp
dec
and
mov
cmp
xorl
decb
mov
or
loopne
pmulhw
and
fdivrl
loop
pusha
das
out
dec
dec
fldenv
xor
mov
jl
jl
cli
cwtl
test
jl
imulb
cmpb
cmp
lret
jge
pop
add
xchg
ret
js
adc
imulb
lahf
int
out
sub
mov
push
lea
mov
sbb
cli
fimuls
js
cs
jp
mov
mov
or
loop
daa
jbe
scas
dec
ja
ljmp
ja
xchg
cmp
pop
xchg
std
out
inc
rorl
mov
sbb
dec
push
ss
cmp
rol
push
ror
not
addr16
cs
push
mov
shll
std
mov
stos
cmp
xor
add
jb
rcrb
scas
fcoml
test
imull
sbb
sbb
cs
lds
mov
dec
cli
sbb
scas
movl
cmpsl
or
inc
add
mov
ds
mov
sub
push
movsl
sub
out
push
enter
rol
jns
int
mov
int3
push
test
xor
push
inc
dec
push
or
sub
hlt
fldt
xor
xchg
in
sbb
or
mov
data16
into
and
fmuls
add
es
inc
loope
or
push
pop
and
adc
dec
stos
mov
test
test
cs
sub
dec
xorl
out
lods
js
aad
imul
cmp
xchg
inc
aas
lea
mov
xchg
cmp
outsl
lret
and
and
adc
sbb
dec
and
lret
fwait
jbe
out
mov
push
pop
add
mov
dec
mov
xchg
insl
dec
in
ljmp
jb
jmp
test
sbb
gs
or
sub
inc
dec
pop
nop
roll
cmp
cmp
stos
lret
mov
xchg
addr16
cmpl
imul
xor
or
push
dec
insl
enter
mov
push
pop
popa
mov
rolb
or
mov
pop
imul
scas
popa
enter
sti
and
xchg
adc
imul
fwait
mov
movb
jbe
std
cltd
xchg
pop
pop
loop
push
loop
adc
inc
sub
lds
pop
shr
insl
ja
adc
stos
shrl
xchg
sub
push
rcrb
xor
cmp
test
sti
pop
into
test
nop
xchg
mov
rclb
fwait
pop
das
xor
jle
and
cmpsw
sub
std
int3
lret
paddb
push
adc
mov
xor
or
fidivrs
popf
in
mov
mov
cmp
and
call
bound
xchg
pop
push
and
lcall
push
lods
imul
jb
daa
nop
repnz
push
movsb
add
sub
dec
xchg
mov
add
jo
in
lahf
push
int
scas
lea
cmp
xor
pop
push
sub
fistpll
clc
push
divb
jnp
movsb
xor
mov
aas
or
lds
jb
test
jmp
das
ret
cli
cmpsb
movsl
xchg
lret
loop
das
test
lret
fs
sbb
loopne
pop
enter
ja
ja
iret
add
add
cmp
jmp
in
and
adc
add
sub
and
cwtl
sbb
in
cld
rcrl
inc
dec
in
mul
sbbb
cmp
loop
mov
xor
je
loope
jae
dec
inc
mov
pop
js
imul
dec
in
dec
pop
jo
stc
adc
fsubr
mov
add
fcmovnbe
repnz
out
arpl
insb
test
mov
push
pop
pusha
lods
jo
data16
xor
das
add
jl
test
mov
push
jae
shlb
sti
fnstsw
mov
iret
or
pop
lea
cltd
cmp
lds
push
push
out
pop
fcmove
lock
xor
int3
popa
sbb
call
xchg
adc
mov
xchg
outsl
das
scas
and
mov
fcoms
fimull
jmp
dec
xchg
xor
mov
inc
repz
mov
pusha
icebp
das
rclb
inc
inc
lahf
in
sti
push
ds
pop
testl
xlat
inc
xchg
test
sahf
imull
cwtl
or
pop
dec
cs
push
lods
xchg
jbe
imul
add
mov
lods
cmp
stc
cmc
cmp
mov
cmpl
sti
rcll
bound
arpl
mov
mov
xchg
adc
fs
xor
cwtl
lods
sbb
pop
rcll
pop
and
cld
jg
xchg
fidivs
je
bound
mov
push
frstor
pop
mov
decb
loop
adc
fstps
testl
movsb
fmul
cmp
xor
cmpsb
jae
and
iret
ret
in
aad
cli
push
lcall
lds
bnd
pop
sbb
jmp
je
add
cmpb
es
cmp
rol
adc
cmp
xchg
add
jmp
mov
lcall
sarl
lock
cmc
adc
popf
adc
rol
dec
movsl
adc
pusha
pushf
mov
cmc
push
pop
leave
jb
push
sbb
test
mov
in
loop
lret
popf
inc
lods
cltd
sbb
add
xchg
push
cmpsl
inc
dec
lret
sub
lret
call
jge
jg
jns
mov
movb
sbb
push
mov
sbb
sbb
pushf
xor
mov
ret
sbb
scas
xchg
mov
aaa
int
jle
flds
int3
push
imul
sbb
es
lahf
push
in
lds
push
push
mov
dec
mov
push
xchg
mov
xor
insb
int
push
hlt
and
xor
sub
mov
sahf
subb
cmc
xchg
fst
inc
inc
imul
xor
movsb
test
sub
inc
ljmp
push
xorb
rorl
jecxz
dec
in
loop
mov
lods
mov
gs
out
pop
add
aas
mov
xlat
cmp
push
and
xchg
sti
pop
dec
sbb
ljmp
lahf
xor
lods
repnz
lea
push
aad
dec
jae
repz
xor
inc
cmpsb
jbe
jle
das
out
xorb
fmul
or
jae
repz
incl
sub
push
sahf
lcall
dec
xlat
adc
add
outsb
movsl
adcb
dec
insl
push
pop
adc
and
rol
xor
pop
cli
pop
xlat
mov
and
jbe
xchg
and
mov
xchg
cltd
icebp
jecxz
nop
sti
icebp
iret
loope
add
add
xor
mov
cli
sbb
xchg
stc
hlt
dec
shll
mov
mov
std
in
out
fnstenv
jmp
push
pop
scas
in
and
cmpsl
nop
jle
push
loope
inc
or
inc
sti
clc
pop
outsb
cwtl
xchg
xlat
addr16
xchg
fwait
inc
mov
in
mov
xlat
sti
sbbl
daa
insl
cmp
mov
js
hlt
xchg
push
lret
push
aad
test
xchg
int
fs
add
lods
or
in
pop
out
ret
sbb
pop
push
mov
dec
outsb
xchg
gs
rcr
popf
add
sti
rol
repz
and
pop
repz
jns
push
arpl
mov
mov
insb
rolb
xor
les
popa
mov
pop
inc
sbb
dec
shl
loopne
psubb
pop
and
xor
vmwrite
sarb
jne
lds
pop
lods
sbbl
repz
call
xchg
stos
out
mov
push
movsl
ret
rcrb
icebp
loope
mov
mov
stc
mov
mov
jmp
or
sub
in
cmp
sbb
push
shrb
mov
pop
jbe
xchg
mov
mov
cmp
movsb
dec
dec
pop
jmp
in
push
add
push
popf
mov
mov
shrb
push
fists
mov
mov
addb
mov
xchg
mov
fldl
loop
push
aam
pop
cmp
jmp
in
adc
decb
mov
nop
mov
push
negl
dec
add
popf
in
test
push
jmp
push
and
push
test
dec
xchg
jo
ret
mov
cmc
fdiv
sub
shll
and
dec
inc
je
enter
mov
std
jo
lds
ret
add
sbb
push
es
addr16
mov
cmc
mov
jecxz
mov
bound
pop
adc
xchg
jl
mov
xor
add
pop
sbb
or
jno
xchg
nop
pop
jae
jbe
mov
fnsave
aas
clc
and
fcoms
xchg
jae
lods
hlt
lods
dec
int3
decl
sbb
add
sbb
xor
lods
fcompl
cmc
std
xor
enter
jg
leave
out
sub
cs
dec
and
mov
dec
adc
lds
jns
pop
scas
sbb
dec
dec
and
out
aam
pop
leave
mov
cmp
outsb
enter
pop
fisubrs
insb
xchg
cltd
fistl
lret
sub
mov
cs
int
pop
fldenv
bound
data16
mov
ret
xor
aam
pop
xchg
cs
xchg
sbb
out
into
jecxz
cmc
sbb
arpl
xchg
in
lcall
test
scas
rorl
pop
lcall
in
fucom
loop
popa
fidivrl
shrl
mov
adc
mov
aad
shll
ret
orl
js
jns
cld
into
xor
hlt
dec
std
xchg
mov
outsl
jno
cltd
cld
mov
and
insl
jbe
mov
adc
jg
aad
mov
or
nop
testl
mov
iret
pop
loopne
push
mov
ss
roll
in
mov
shll
imul
out
push
mov
test
out
stos
mov
arpl
lock
in
int3
push
dec
jb,pn
mov
cmp
xor
xchg
mov
imul
lret
sbb
dec
repz
cmp
jae
cmp
sbb
xchg
enter
adc
test
jae
insb
xor
aad
xor
andl
pusha
xor
in
sbb
sub
push
fcomip
mov
cmc
sti
pop
test
lea
lods
sbb
jp
mov
cmp
xor
lock
mov
test
mov
fimuls
loope
cmp
fwait
push
inc
scas
testl
ret
cmp
push
jnp
ficoml
rorb
fimuls
mov
loop
mov
lahf
or
les
xor
push
divl
lret
jo
inc
pop
popa
cmpsl
pop
mov
std
movd
hlt
add
pop
int
in
pop
push
push
repnz
in
call
mov
xchg
iret
sub
scas
out
jl
mov
pushf
ja
jb
movsl
add
fwait
iret
push
sub
sub
push
mov
and
push
add
sub
js
cmp
pop
les
scas
aas
cmpl
imul
les
or
insl
pand
or
adcl
cli
ss
cmc
inc
int3
inc
pusha
mov
fwait
xor
inc
test
or
mov
mov
addr16
imul
or
lret
xchg
test
loopne
sahf
jp
dec
sbb
stos
iret
in
rorl
add
cld
inc
sbbl
pop
pop
dec
movsb
ds
pop
stos
js
je
xlat
out
mov
popa
aas
mov
pop
mov
lods
mov
adc
mov
lret
pop
mov
lods
sar
test
rorb
or
and
fidivrs
jae
and
movb
ret
sbb
insb
sbb
cwtl
movsl
mov
cmp
cli
xchg
and
mov
jnp
hlt
push
js
mov
xor
add
lcall
jb
sbb
xor
lret
pop
adc
or
sbb
mov
imul
or
inc
fs
cltd
mov
xor
push
add
and
fdivrl
dec
cld
jae
cmc
jae
xchg
push
clc
add
mov
inc
and
lods
dec
adc
add
push
dec
xor
ljmp
int3
addr16
xchg
hlt
adc
add
jne
inc
scas
lods
imul
dec
in
xchg
xor
inc
fsubr
push
loop
mov
inc
adc
loop
adc
stos
divl
push
insb
cmp
es
iret
lock
cmp
int3
rcrl
cmp
std
pop
pop
test
jno
and
sti
add
push
clc
in
jmp
adc
shlb
xor
pushf
mov
clc
mov
or
or
cmpb
sbb
xchg
push
sub
mov
in
mov
sbb
popf
jno
nop
pop
or
jb
mov
js
imul
xchg
xor
ret
aam
mov
movsl
cmc
idivl
cmp
push
mov
out
mov
xchg
xchg
in
in
cmp
js
in
into
lock
push
rcl
push
dec
js
adc
test
pop
test
and
and
mov
mov
dec
lds
sub
aam
sub
adc
iret
shl
mov
orl
xchg
mov
int
outsl
movb
in
shrb
scas
mov
sbb
mov
out
jbe
cmpsb
dec
lds
or
loop
clc
insl
js
test
outsl
jmp
adc
in
push
scas
push
lret
jb
dec
dec
jmp
fsubrs
out
inc
test
mov
push
mov
inc
and
test
es
inc
mov
test
dec
jo
cmpsl
outsb
push
dec
out
jg
pop
mov
and
aaa
sbb
xor
dec
jl
sub
pop
or
mov
faddp
les
sbb
push
or
xorl
mov
mov
inc
leave
ds
dec
cltd
lock
push
and
lret
xor
lcall
lock
jl
adc
movsb
push
mov
or
jno
jnp
or
cmp
and
aam
xor
add
sbb
fs
icebp
popa
loopne
lea
mov
fidivrs
outsl
imull
test
push
pop
jno
inc
inc
add
xor
and
pushf
inc
addb
adc
mov
test
add
add
fcomi
inc
lret
lods
dec
adc
jns
aam
shrw
inc
bound
inc
loope
icebp
push
adc
adc
orl
cltd
int
and
cmpsb
je
outsb
push
std
inc
mov
cltd
mov
iret
out
push
ja
or
cld
pop
adc
pop
xor
mov
inc
xchg
cmp
dec
xchg
xchg
outsb
popa
adc
jmp
adc
shlb
and
ds
sub
jno
ss
mov
faddl
adc
idivb
loopne
in
notb
jbe
inc
push
lea
sarl
cmp
subb
sub
test
inc
in
dec
test
xchg
fstps
mov
stc
dec
loope
sbb
or
out
pop
cld
sahf
fidivrs
aas
popf
movl
es
mov
mov
mov
add
or
jecxz
shll
imul
bound
and
cmp
jo
pop
sub
xchg
xchg
mov
sbb
or
jge
nop
cli
lret
loop
cli
scas
push
add
jecxz
les
inc
xchg
or
jecxz
ss
jecxz
rcr
sbb
pop
push
jnp
jl
mov
lret
mov
sbb
fadds
aaa
and
outsb
pop
pop
fbstp
popa
cmp
lock
or
adcl
xchg
pop
sbb
pop
xor
rorl
jbe
mov
pop
int3
xchg
mov
fistps
pop
out
and
aaa
int3
out
movsb
sbb
sub
mov
int3
fwait
in
pop
sbb
in
dec
repnz
lea
cs
imul
pop
push
jp
repnz
push
fs
rcll
rcrl
push
ret
in
pop
rorb
mov
add
cmpsl
lock
repnz
adc
sub
inc
int3
add
fbld
push
push
je
loop
sub
test
call
scas
push
call
push
test
fdiv
repz
push
cmp
push
push
dec
or
arpl
cmc
mov
lock
out
loopne
cwtl
inc
mov
xchg
ret
out
pop
jle
cmp
add
pop
xor
xchg
adc
dec
dec
enter
push
and
pop
pop
jmp
repnz
xchg
mov
and
sub
sub
ds
int3
push
movsl
dec
jp,pt
test
push
xchg
sub
add
pop
inc
and
leave
fldt
in
lahf
stc
js
push
repz
stos
jbe
and
cmpsb
sub
xchg
movsl
in
push
fmulp
arpl
mov
bound
xor
imul
test
mov
cmpsb
inc
or
daa
dec
xchg
cs
fs
adc
adc
imul
nop
je
addl
mov
xor
in
mov
jp
jne
xchg
sarb
push
ljmp
lcall
jg
stc
lret
jmp
push
xor
rolb
push
pop
faddp
fstl
and
inc
add
mov
lods
fld
loope
add
out
adcb
enter
lcall
fldcw
sbb
rorl
lods
lods
cwtl
sub
add
les
jnp
out
enter
out
push
lahf
dec
xorl
lods
and
push
hlt
push
gs
sbbb
adc
push
push
push
mov
mov
iret
outsl
popf
lret
add
mov
inc
push
cmp
push
sbbb
test
adc
fcoml
cmpsb
movb
outsb
fdivp
lcall
push
lods
aad
das
ret
pop
mov
dec
pop
lret
leave
fistpll
push
fldl
push
outsl
and
push
or
cltd
shlb
jno
mov
mov
orw
pop
inc
aad
sbb
dec
sbb
push
inc
out
loopne
xlat
movsb
pop
or
inc
xor
enter
cli
jne
frstor
ja
pop
shr
pop
add
clc
hlt
jle
adc
and
mov
add
xor
scas
jno
adc
in
cmpb
subb
xchg
xchg
xchg
and
jmp
mov
add
sbb
or
cltd
mov
out
push
mov
xor
lods
mov
push
fimuls
xor
push
loope
das
repnz
loope
xchg
mov
into
icebp
jns
test
fisubl
fcomps
mov
je
sar
jge
jmp
dec
lcall
dec
inc
dec
cwtl
cmp
dec
inc
daa
pop
in
in
inc
dec
rclb
lea
sub
ljmp
cmc
repnz
push
jmp
cltd
lods
dec
daa
movsb
lcall
loope
inc
dec
cld
icebp
adc
xor
push
cli
add
push
into
enter
push
mov
aam
aas
pop
je
xor
pop
addr16
lret
push
stos
mov
addl
jbe
les
scas
push
add
loop
fildll
add
inc
scas
sbb
repnz
stos
dec
dec
sub
repnz
lock
mov
jne
movsb
mov
push
add
aam
xchg
fucom
mov
or
add
inc
dec
out
jge
into
sub
mov
icebp
outsb
imul
mov
aam
xor
rcrl
ss
mov
mov
hlt
iret
and
rclb
xchg
mov
sub
gs
push
dec
sub
loop
shll
push
sti
push
jb
ror
push
mov
xchg
jecxz
mov
cwtl
lods
push
push
std
lcall
loopne
pop
xor
iret
jne
jno
ret
in
dec
xchg
or
push
sbb
nop
aad
sub
fucomip
ss
mov
push
jmp
addr16
scas
dec
cmp
fdivp
cltd
fistpl
movsl
inc
addl
sub
insb
fisttpll
pop
jnp
xor
cmp
xchg
xor
inc
sub
loope
xchg
les
inc
add
arpl
xor
xchg
jp
test
clc
adc
mov
push
cmpsb
xchg
dec
pushl
aaa
sbb
jne
sbb
mov
stos
cmp
push
xor
faddp
jo
es
movsb
mov
jge
mov
gs
push
addr16
cmp
out
jp
mov
add
jmp
mov
pop
and
pop
adc
gs
cmp
push
jo
xchg
xchg
jns
sahf
adc
ljmp
mov
cmp
arpl
xchg
cmc
mov
push
push
xor
out
les
or
mov
in
scas
xchg
pop
iret
and
pop
negl
push
into
xlat
rolb
and
fsubrl
add
jbe
push
and
test
inc
shlb
xor
sub
push
xchg
out
popa
xchg
imul
push
jp
imul
in
xchg
pushf
xchg
or
or
and
jmp
dec
inc
adc
test
out
in
ja
mov
or
ret
stos
push
push
mov
out
dec
pop
add
outsb
loop
stos
jp
sbb
cmp
xchg
mov
les
dec
push
aad
sbb
pushf
mov
hlt
aam
sbb
mov
std
mov
popf
mov
cmpsl
nop
repnz
int
inc
stos
inc
pop
jne
jl
imul
mov
or
mov
cmp
inc
mov
cs
insb
jbe
ss
outsb
xor
cs
xchg
cmpsl
shlb
adc
xor
dec
pushf
fs
inc
xchg
push
sbb
mov
lock
test
jbe
mov
call
std
pop
push
push
stc
xchg
pop
sub
sub
imul
mov
sahf
sbbl
imul
roll
add
in
jbe
mov
ljmp
orb
ror
lds
mull
nop
inc
ja
xchg
adc
les
cmp
sbb
inc
adc
pusha
test
mov
shr
nop
insb
dec
xor
cmp
aaa
push
xchg
repz
xchg
loope
sbb
xor
js
arpl
cmpsl
xchg
or
inc
pop
decb
out
and
sub
inc
and
sub
popf
jp
sbb
xchg
sbb
sbb
xorb
sub
mov
push
sub
mov
mov
shll
jne
ficompl
pop
shll
dec
sub
subl
push
dec
or
push
pusha
or
pop
adc
sub
dec
scas
sub
inc
lods
dec
and
sbb
fidivl
jmp
outsl
jbe
xchg
cmp
dec
cmp
js
lahf
adc
add
fiadds
or
sarb
rclb
in
popa
jo
push
movb
test
jge
ret
mov
cli
push
cmpsl
mov
das
cmp
mov
aas
int3
sub
sub
mov
mov
sbb
in
mov
xchg
imul
jo
in
add
pop
xchg
xor
add
fisubl
pop
jmp
jg
cmp
xacquire
xor
outsb
jo
xor
dec
test
cmp
pushf
and
add
mov
ficoml
mov
dec
mul
and
dec
rcll
mov
add
cmp
or
push
push
nop
lock
xchg
inc
cli
movsb
pop
jno
shrl
dec
cmp
pop
sub
mov
imul
lcall
dec
mov
cs
push
roll
mov
adc
cltd
jnp
jb
jns
push
mov
les
sbb
mov
mov
int
push
sub
addr16
out
lods
xchg
mov
dec
icebp
es
bound
cmpsl
sub
sub
push
fbld
sbb
xlat
mov
outsb
mov
jg
mov
subb
xor
and
jb
lahf
stos
push
leave
sbb
fldenv
shlb
lcall
add
shlb
xchg
mov
int3
inc
push
push
lcall
lret
push
sbb
cltd
pop
sar
mov
push
or
adc
insl
vorpd
sub
fisubrs
jmp
pop
orb
sub
jp
cmp
imul
mov
clc
pop
sub
cmp
stos
lcall
test
adc
add
mov
lret
xor
pop
rolb
or
pop
xchg
test
inc
out
pop
inc
pop
dec
dec
out
jl
mov
mov
inc
adc
shr
aaa
sbb
rcrl
cmc
xchg
pop
popf
inc
mov
mov
pusha
aad
sbb
xor
aam
dec
arpl
cltd
lret
mov
push
fwait
inc
jmp
jg
mov
dec
push
into
pop
dec
pshufw
dec
jg
popf
daa
iret
cmpsb
sub
sub
pusha
xorl
sbb
mov
lret
cmp
push
dec
inc
jns
cmc
out
aad
nop
test
mov
adc
pop
inc
test
test
xchg
sbb
fnstcw
loopne
rclb
xor
push
ljmp
xor
popa
shlb
loop
call
enter
loope
jae
pop
and
movsl
bound
xor
inc
imul
sub
pop
ljmp
adc
outsl
jo
mov
xchg
jae
sub
test
jmp
loopne
inc
push
jle
stos
jae
gs
pusha
jle
sbb
cmp
scas
lret
aad
sti
test
cmp
pop
jl
subb
and
insb
and
insl
in
sti
fwait
mov
pop
mov
mov
iret
insl
cld
inc
xchg
adc
xchg
push
sahf
ss
or
jne
imul
insl
inc
jae
or
stc
and
cltd
cmpsl
icebp
adc
or
sub
dec
push
mov
mov
adc
es
dec
adc
adcb
and
scas
push
or
flds
adc
movl
lcall
push
das
inc
inc
fnstsw
adcb
loope
lret
jecxz
movsb
lods
adcb
cld
in
orb
jbe
lret
xchg
pop
out
mov
mov
shl
inc
push
push
imul
adc
test
js
in
call
mov
lret
adc
xor
push
pop
sbbl
inc
and
inc
inc
ljmp
inc
push
faddl
mov
lods
jo
fisttpll
faddl
iret
popa
inc
push
mov
xor
incb
and
rclb
into
pop
pop
pop
xor
dec
dec
aas
ror
addr16
sbb
cmp
out
sahf
jp
test
and
and
add
nop
lds
xlat
dec
outsl
out
cli
daa
xchg
loop
and
scas
sbb
setle
cmpsl
pop
pushf
cmp
inc
xchg
push
lcall
dec
into
xchg
and
mov
fnstsw
inc
or
jno
mov
sub
pop
pusha
lods
leave
mov
jmp
lea
sbb
roll
adc
and
loope
neg
cltd
or
pop
js
jo
sub
xchg
pop
push
mov
add
mov
stos
adc
adc
push
mov
test
push
lock
pop
stos
imul
push
call
mov
or
push
mov
insl
jmp
icebp
std
ret
dec
xor
cmp
inc
call
in
into
daa
or
aaa
outsb
data16
push
jge
mov
add
pop
ss
int
imul
ret
push
in
inc
lods
sub
repnz
inc
push
mov
cld
and
inc
clc
inc
mov
dec
cmp
call
fdivrl
in
inc
fcomp
fildl
xchg
mov
mov
mov
add
cmpsb
movsl
in
sub
cmp
sbb
pop
aas
dec
aam
inc
mov
xor
cmpsl
adc
dec
sbb
cltd
jp
ss
stc
mov
imul
enter
mov
push
out
test
xlat
popa
movsb
push
xchg
push
aad
frstor
adc
rclb
loop
mov
mov
incb
movsb
data16
mov
sbb
and
shrl
pushf
outsb
out
pop
aaa
xchg
mov
jo
insb
push
in
push
lcall
jg
mov
ror
inc
shrd
lods
ds
loop
pop
cmp
fadds
pop
stos
fld
call
xchg
ret
dec
push
rorb
aad
adc
mov
adc
repz
sbb
imul
fwait
repz
aam
js
and
in
dec
mov
fs
pop
mov
fwait
cli
scas
push
adc
and
ljmp
not
dec
mov
mov
or
jb
fisubs
mov
dec
orl
adc
aam
or
loope
ret
jno
push
push
adc
or
cmp
ret
push
fdivl
mov
mov
fsubr
sub
shrl
xor
or
mov
xlat
sbb
outsb
popf
xchg
and
movsb
gs
cmp
cmp
out
or
cmp
sbb
lret
push
cmc
add
aaa
mov
in
repnz
sub
lret
outsb
mov
add
mov
push
fsubrp
and
dec
push
scas
mov
jo
iret
and
jmp
push
sub
jae
jno
outsl
push
push
jl
xor
into
xchg
xchg
sub
xchg
sub
cmp
fld
mov
addr16
xlat
mov
and
movsb
lock
lahf
add
mov
cli
xor
in
ja
pop
and
cwtl
fs
sahf
xor
push
push
pop
or
mov
xchg
cmp
int3
gs
js
inc
add
pushf
push
mov
dec
mov
pop
jns,pn
xchg
incb
jmp
mov
subl
into
sbb
lock
inc
cmp
hlt
dec
ss
ret
inc
sar
addb
xchg
in
test
lea
roll
sub
push
push
inc
jle
dec
fmuls
lods
jo
push
loopne
mov
lea
xchg
fiaddl
lods
lods
dec
out
adc
mov
xor
xchg
subl
xchg
xchg
ds
sahf
pop
js
xorl
xlat
pop
test
dec
sub
pop
sbb
hlt
push
add
test
int3
test
xchg
dec
mov
psubw
lret
xor
or
dec
lahf
jge
mov
cmp
mov
mov
add
mov
push
jb
xor
cmp
cmp
js
inc
add
out
iret
rcl
adc
mov
push
mov
cmp
xchg
test
mov
lcall
loop
cmp
sbb
dec
stos
mov
sub
ds
mov
in
mov
and
cmp
push
arpl
adc
sbb
or
push
xor
jle
gs
push
xor
int
je
push
push
mov
adc
jmp
test
mov
jmp
mov
mov
cmp
mov
into
mov
loope
or
sbbl
lea
mulb
jl
mov
jnp
sub
jbe
popa
jmp
iret
icebp
ljmp
test
or
mov
jns
xor
xlat
mov
ja
mov
xchg
and
fistpl
sbb
push
lock
test
mov
pop
mov
mov
jb
pop
jecxz
stos
jmp
push
loopne
pop
push
imul
imul
xor
in
js
cmp
fidivs
adc
movsl
push
push
and
rclb
mov
sarl
lcall
iret
in
push
jmp
out
test
daa
push
mov
jno
add
jnp
push
lock
push
loope
and
fistpl
sbb
lahf
jnp
jb
dec
dec
je
pop
out
cmp
lds
dec
mov
std
dec
xor
sbb
lea
xchg
out
xor
mov
mov
negl
cmp
cwtl
daa
push
adc
inc
js
movsl
sti
je
or
jnp
sbb
push
nop
jmp
in
push
aas
pop
jns
xor
push
stos
pusha
loope
dec
nop
and
aas
mov
in
cwtl
ljmp
test
loope
mov
cmp
aad
mov
frstor
push
mov
test
stc
cmp
loop
pop
lods
mov
bound
dec
pop
mov
lret
aaa
ret
aad
and
lock
xchg
cmpsb
sbb
or
or
adc
pop
int
xchg
ja
push
mov
cltd
and
test
testl
sbb
subl
call
cmp
cmp
shrb
mov
push
inc
sub
fisubrl
mov
add
arpl
add
jno
ret
out
scas
shr
add
sbb
jno
jle
cmp
pop
out
mov
insb
lods
mov
xor
sub
pushf
insb
in
ljmp
push
out
js
xchg
int
xchg
fs
jmp
imul
call
jne
popa
mov
fstp
dec
lcall
sti
xlat
jae
clc
in
gs
lahf
add
jo
fcoms
lods
repnz
dec
dec
jmp
loopne
mov
xor
outsb
jo
adc
jl
dec
push
movb
xchg
fcoml
sbb
cmp
or
cmc
sbb
hlt
lods
loop
jne
loope
ret
sbb
mov
in
jp
push
cmpsb
imul
or
mov
mov
sbb
pop
sub
add
stc
sbb
or
mov
sarl
xor
xor
mov
roll
xchg
imul
in
fiadds
test
xor
imul
add
or
xchg
fwait
mov
pop
push
sub
cmpxchg
xchg
push
mov
sub
iret
xchg
xchg
mov
aaa
nop
rcrl
mov
xchg
in
ret
aad
sahf
movsb
daa
flds
mov
ds
mov
mov
ljmp
out
cli
lea
xchg
fnsave
sarb
add
dec
cmpb
inc
mov
aas
rolb
mov
nop
cmpsl
mov
aad
mov
loope
xor
sbb
gs
stos
sub
pop
rclb
mov
inc
cmp
adc
jl
push
xorb
push
jle
or
push
ret
ljmp
jno
js
cli
inc
jns
dec
out
adc
inc
add
jne
sub
negb
and
shrl
xchg
mov
leave
mov
sub
mov
sub
mov
add
sahf
mov
aad
mull
fmull
insl
loop
inc
xor
dec
icebp
add
sub
pop
js
sub
fsubrl
xor
pop
mov
shlb
add
arpl
add
push
xor
repnz
mov
inc
mov
aad
in
test
jp
loope
repz
pusha
dec
stc
mov
push
hlt
and
inc
fadd
fisubrl
mov
js
push
mov
jecxz
cli
cmp
jo
inc
mov
les
xorb
in
sbb
das
idivl
popf
les
leave
pop
adc
leave
lcall
movsb
jo
scas
movsb
cmp
pop
jbe
add
jae
xor
fsubrl
imul
mov
es
sbb
pop
xchg
mov
adc
xor
xchg
insl
fcom
jbe
cmpl
imul
mov
cmp
testl
insl
sahf
mov
hlt
xchg
and
push
enter
mov
scas
mov
in
adc
xchg
push
notb
mov
lcall
paddusb
cmpsl
fnstsw
lcall
sbb
movb
es
jecxz
je
popa
inc
and
iret
fistps
cwtl
lods
push
int
stos
dec
mov
xchg
inc
mov
outsb
mov
rorl
dec
rorb
jo
inc
in
and
cmpl
ret
fbstp
sub
js
and
add
push
mov
jge
add
es
or
loop
push
mov
cmp
push
fdivl
enter
in
dec
dec
addr16
fldcw
push
int3
stos
daa
mov
pop
sub
ficompl
add
xchg
aad
sub
lods
inc
lcall
mov
cli
rcl
jg
mov
sbb
or
push
ljmp
push
add
sbb
cmc
pop
adc
pushf
cmp
push
mov
sub
jge
cmc
adc
and
mov
mov
hlt
cli
call
push
inc
lods
loop
cmp
xor
ret
ja
push
and
or
jae
psubsb
cmpsl
xchg
cld
xor
jb
insb
cmpl
je
gs
cmp
gs
pop
test
mov
sti
sub
inc
sub
ss
cli
out
sti
mov
ja
adc
pop
mov
push
add
insb
out
add
xchg
repz
loope
xor
jl
dec
push
mov
aaa
mov
call
sahf
icebp
adc
cmp
int
xchg
imul
mov
out
cmc
test
stos
rcrb
mov
test
test
cmp
fwait
dec
lock
inc
bound
in
daa
push
ja
dec
ficoml
movsb
dec
and
ja
xchg
push
push
pop
jno
test
sbbb
int3
and
adc
clc
push
dec
add
pop
sub
lea
sbb
arpl
sub
dec
jnp
mov
dec
jbe
aas
ret
mov
add
outsb
clc
mov
push
out
push
jno
fcmovnu
orl
fs
ja
mov
mov
push
mov
pushf
push
cmp
mov
sub
or
ds
arpl
into
cmp
mov
sub
and
dec
pop
jmp
leave
xor
xlat
orb
jecxz
or
push
push
lret
dec
inc
mov
bound
lea
pop
js
movsb
adc
mov
je
jns
push
jno
pusha
dec
insb
pop
and
jp
dec
imul
fstpt
sub
subb
loopne
mov
aad
add
mov
push
cmpsb
hlt
test
outsb
int3
into
sbb
sbb
push
in
mov
xor
mov
fdivs
lods
push
sub
repnz
in
mov
scas
push
inc
adc
jp
mov
xlat
cmp
mov
mov
lret
sub
popl
mov
add
push
hlt
pop
ljmp
sub
shrl
dec
xchg
lret
mov
inc
sub
fsubl
sahf
int
mov
jo
sbb
mov
sbbb
stos
inc
adc
push
mov
outsb
cmp
nop
std
gs
daa
jo
pushf
js
sbb
fbstp
leave
inc
fnstenv
test
cmp
xor
pusha
push
pop
repz
xchg
fnstcw
xchg
add
imul
das
jne
lea
mov
push
enter
adc
fnstsw
fwait
das
mov
mov
int
sub
test
ss
lds
xlat
imul
cmc
pop
mov
mov
loop
lret
hlt
adc
cwtl
jnp
stos
imul
dec
add
lret
sbb
push
lock
push
xor
aas
ret
fisubs
pop
xchg
dec
pop
hlt
arpl
dec
mov
pop
push
ss
arpl
cmp
test
and
lea
jnp
subl
xor
fwait
jae
enter
add
jne
inc
jmp
sahf
scas
outsl
scas
xchg
dec
dec
test
adc
inc
jle
mov
das
adc
mov
fsin
arpl
mov
scas
adc
repnz
fwait
imul
fcompl
jecxz
mov
ljmp
lret
into
faddl
test
inc
lea
lods
in
adc
fs
lcall
dec
mov
add
imul
loope
outsb
aam
mov
cmp
xor
sub
rcrb
bound
addl
rol
popw
ja
mov
pop
cli
cmp
xor
cmp
icebp
pushfw
xorps
mov
push
je
mov
pop
outsl
hlt
movsb
lcall
sub
mov
fldl
nop
add
mov
in
dec
jno
xchg
scas
scas
xor
push
pop
xchg
addl
pop
mov
notb
xor
cs
add
fimuls
and
xor
jnp
lea
lds
dec
mov
push
and
xchg
aam
subb
push
sbb
pusha
mov
mov
ja
pop
cmpsb
xlat
test
test
lret
lock
cmp
cmpl
cmp
sub
cmpsb
in
xchg
sub
les
in
lock
ficoms
out
jg
cmp
jl
jo
sti
and
sub
movsl
and
xor
cmpsl
mov
xchg
in
jmp
cmpsb
push
int3
dec
xchg
mov
xchg
mov
in
sub
jmp
pop
or
fsub
jb
push
inc
cmp
xchg
lods
push
test
cli
dec
cli
shll
mov
inc
sahf
div
push
mov
xor
jge
mov
pop
mov
mov
je
aas
sub
sbb
pop
shlb
stc
in
or
mov
fs
push
sub
mov
xchg
mov
cmp
or
jle
xor
push
pushw
xchg
roll
mov
push
scas
jnp
push
stc
jno
xor
inc
mov
cmp
inc
cmp
dec
test
mov
inc
inc
div
das
jg
pop
pop
jp
sub
stos
xchg
ds
cmp
lahf
sbb
jo
pushf
repz
add
mov
xor
xchg
std
mov
mov
rcrb
mov
nop
adc
cmp
mov
fwait
mov
dec
ret
adc
pushf
sub
in
loopne
fistpl
in
dec
out
out
addl
mov
pop
cmpsb
into
and
out
xor
shr
jmp
cmp
movsl
mov
jnp
mov
icebp
adc
mov
loop
stos
subb
rorl
dec
sub
sarb
icebp
testl
push
outsb
incl
daa
icebp
lods
sbb
push
mov
lods
mov
hlt
mov
or
pop
push
add
cli
xor
dec
pop
cmp
jb
pop
mov
movsl
jns
lods
lret
movsl
dec
add
sahf
aam
test
sbb
inc
or
jge,pt
dec
das
je
xchg
mov
jnp
xor
xlat
and
mov
xor
mov
in
orl
xchg
mov
dec
inc
and
or
fwait
mov
cmpsb
push
scas
mov
cmp
pop
fcmovne
mov
mov
inc
mov
push
fdivrl
cltd
mov
xchg
iret
ljmp
mov
imul
mov
lahf
adc
jp
mov
jne
std
jae
jmp
jle
jnp
lock
or
loope
cmp
inc
call
testl
cwtl
jnp
cmp
dec
pushf
hlt
sti
mov
outsl
cmp
pop
adc
or
mov
rclb
push
ret
mov
mov
mov
pop
stos
fldt
lahf
pop
cmpsb
nop
das
cltd
ljmp
aaa
clc
mov
scas
or
mov
xchg
lock
pop
movsb
sub
xchg
icebp
stos
les
mov
clc
pop
mov
and
push
adc
nop
xor
test
inc
fadds
jge
testb
adc
lret
aas
mov
xor
pusha
push
mov
and
dec
fisttps
aas
push
and
mov
lods
adc
dec
movsb
pop
jg
jp
orb
lea
insl
sbb
pop
mov
rcrl
push
mov
adc
ret
sub
daa
mov
outsl
dec
dec
pop
or
ds
rolb
dec
out
push
pusha
ret
sub
push
mov
sahf
pop
sbb
or
cmp
mov
and
jno
sub
add
aam
out
lret
pop
jae
pop
inc
sbb
cmpsl
enter
mov
daa
mov
sti
inc
outsl
ja
loopne
inc
adc
outsl
xchg
mov
fcoms
jb
in
xor
adc
adcb
push
jb
fisubs
adc
mov
mov
push
rcrl
sbb
incb
add
les
inc
cmp
xor
sbb
or
push
mov
push
or
push
lock
cmp
mov
sahf
pop
jno
nop
out
adc
jne
push
jb
inc
adc
popa
mov
inc
mov
punpcklwd
aas
loopne
pop
mov
je
cmpsb
sbb
xor
or
cmp
and
xchg
inc
fisubs
faddl
or
jl
cmp
pop
fdivrp
sbb
gs
ljmp
and
sub
aas
and
cltd
popf
into
jmp
rep
dec
ds
sbb
xchg
dec
testl
xor
mov
add
mov
pop
outsl
pop
mov
lods
lock
lret
cmp
cmpb
cmp
shlb
lcall
mov
jmp
mov
lods
int3
cmp
lea
mov
nop
mov
push
mov
dec
mov
cli
pmaddwd
mov
xchg
idivl
pop
lcall
aad
out
int
push
mov
adcl
dec
and
testb
leave
sbb
popa
cmp
cmp
and
in
sti
daa
inc
shll
fcoml
fucomi
frstor
out
rorl
stc
das
cmp
or
inc
pop
and
aad
sbb
cwtl
ret
andb
sarb
cwtl
push
imul
push
es
hlt
fstps
out
fistl
adcb
xor
dec
lds
inc
into
aam
enter
adc
xor
jle
sarl
xchg
repnz
sbb
iret
out
dec
fistpll
das
ret
mov
mov
test
pop
mov
xor
jge
fabs
cmp
sub
pop
pop
call
xchg
lock
pop
gs
lock
push
xor
ss
popa
push
fbld
jle
pop
fwait
and
sti
clc
mov
sbb
jae
mov
jl
push
cmp
stos
or
addr16
xchg
fisttps
lock
out
pusha
pop
or
mov
mov
xor
ja
cmpsl
sahf
inc
xor
push
cmp
movsl
test
push
jo
inc
stos
push
adc
push
mov
sbb
mov
or
jno
sub
mov
mov
jns
lock
add
js
out
inc
jp
aam
aaa
jmp
push
ret
repz
stc
stos
dec
pop
sti
decl
inc
xchg
into
stc
out
or
popl
loope
sahf
mov
jae
push
pushf
sub
xchg
cmp
dec
mov
dec
inc
mov
and
not
into
loopne
popa
jp
pop
shrb
out
xchg
dec
ljmp
and
lret
idivb
outsb
cli
icebp
mov
jbe
or
lods
cli
xor
lret
jb
mov
lea
mov
mov
bound
xor
sbb
push
add
enter
sbbb
push
lret
mov
push
pop
cli
push
xor
jb
or
in
mov
mov
hlt
sahf
je
pop
out
pop
ds
sbb
hlt
rcrl
std
rcrb
sbb
adc
jmp
leave
pop
idivb
push
cmp
cmpl
xor
cltd
push
notl
inc
mov
jecxz
dec
add
pop
repz
jecxz
mov
mov
movsb
mov
les
in
cmpsb
pop
stos
ja
aad
pop
mov
add
cltd
pop
repz
shl
in
fs
out
inc
pop
movsl
jmp
ret
adc
subb
mov
xlat
pop
sbbb
ss
repz
test
xor
decb
movsb
hlt
push
cmp
or
pop
out
popa
inc
fistpll
lea
cmp
xchg
cmp
clc
and
popa
mov
xchg
and
push
enter
ret
out
roll
push
or
pop
lods
cmp
mov
or
out
fldcw
or
mov
pop
shl
in
aaa
cmp
subb
nop
leave
mov
push
fisttpll
pusha
dec
outsl
scas
add
loopne
cmp
pop
cs
xor
repz
sub
xor
repnz
push
mov
cmp
lock
movsb
xor
mov
lock
sti
rclb
in
pop
ds
jno
push
inc
dec
in
fists
jp
adc
sti
aad
cmp
sbb
xor
lret
mov
dec
pop
cltd
sbb
sbb
sbb
pop
cli
jne
fcomip
sbb
jno
pop
sbb
push
cmp
cld
xchg
mov
cmp
int
mov
mov
inc
daa
into
pop
dec
mov
cmp
lahf
lods
roll
cwtl
push
outsl
jle
mov
sub
popf
inc
xor
das
mov
jge
sbb
xor
insb
out
mov
stos
ficomps
push
andl
fadd
inc
push
adc
outsb
xchg
or
cmp
gs
or
cmc
enter
mov
int3
scas
xchg
inc
dec
cmpsb
sub
mov
push
es
fstps
jbe
jno
jp
add
cs
jge
dec
sbb
fcoms
xchg
push
jecxz
push
jmp
sub
adc
pop
mov
adc
add
sub
mov
mov
jae
shr
dec
and
lods
aam
jmp
mov
in
inc
enter
clc
lret
xor
sub
push
xchg
pop
pushf
fnstsw
cmpsb
or
xor
fwait
cmpsb
adc
xchg
js
loope
repz
mov
and
adc
sub
sub
outsl
aad
shlb
mov
mov
idivl
stos
or
cs
jne
pushf
hlt
lcall
xchg
sub
mov
jl
js
fildl
sub
sub
xchg
hlt
jmp
add
stos
add
pop
mov
xchg
mov
dec
dec
andb
int3
in
sti
inc
push
jnp
in
jae
shlb
sbb
pop
movsl
pushf
xchg
mov
stos
xor
or
aad
enter
adc
inc
arpl
les
pop
pop
xchg
popa
jmp
cmp
lods
mov
insb
test
addr16
stc
testl
mov
ret
dec
push
in
insl
hlt
insb
mov
xchg
mov
xchg
mov
dec
push
filds
dec
es
pop
inc
push
sub
xchg
test
push
xor
into
test
out
in
adc
dec
xor
js
aad
adc
add
ljmp
loop
xor
adc
add
xor
adc
pop
mov
outsb
ds
mov
sub
ret
notl
pop
inc
bound
jg
jbe
mov
fisttps
in
test
xchg
loop
adc
sbbb
pop
pusha
mov
outsb
outsb
sti
mov
mov
lods
mov
ljmp
dec
jno
cmp
scas
dec
mov
jbe
xorb
movsb
mov
add
xor
inc
mov
test
mov
pushf
nop
cmpsl
adc
int
imul
scas
je
xchg
mov
or
and
push
jae
and
mov
sbb
or
sar
xchg
test
pop
push
add
adc
rorb
ret
scas
enter
push
push
mov
sbb
repnz
ret
stos
iret
mov
int
into
jmp
call
pop
cmp
cmp
pop
mov
pop
mov
push
fadds
jecxz
pop
les
mov
pop
jle
mov
imul
inc
inc
jne
pop
aaa
mov
mov
jge
insb
shll
adc
ret
mov
sahf
dec
in
jl
out
gs
psubusb
outsl
stos
addl
into
cmpsl
int
cmp
add
nop
cli
sbbb
mov
bound
inc
and
iret
lahf
xchg
xchg
sbb
push
cmp
jns
push
into
and
test
cli
lods
mov
popa
jmp
sbbl
adc
push
xchg
fsts
push
std
addb
pop
mov
inc
fdivrs
adc
pushf
cld
imul
sub
xchg
push
imul
pop
mov
mov
cmp
lds
mov
cmpsb
xchg
xchg
repz
and
rcrb
loope
cwtl
into
out
ljmp
dec
jae
sbb
ret
cli
xchg
lahf
insl
out
pop
push
add
push
cmp
orl
out
imul
xor
das
or
lds
ds
in
cltd
xchg
inc
mov
repz
test
pusha
pop
aad
cmp
cmp
push
fnclex
into
pop
inc
xchg
dec
add
mov
add
push
cmp
rolb
sub
xchg
mov
or
stos
shr
cld
inc
mov
sahf
pushf
add
jo
aaa
pop
xchg
sbb
add
mov
leave
lods
in
and
inc
ret
aas
pop
mov
xor
jmp
shlb
ret
and
lds
jb
jecxz
and
test
jl
sub
movsb
icebp
mov
or
test
push
outsl
sub
test
mov
mov
adc
lret
inc
or
adc
out
push
das
push
or
outsb
jmp
loop
xchg
xchg
jl
jg
cmpsb
test
cwtl
adc
loope
cltd
or
pop
js
inc
sub
je
aaa
dec
sbb
xchg
fimull
dec
arpl
insb
sub
cmp
xchg
decl
aam
jg
leave
mov
xlat
rcll
call
arpl
cmp
xlat
orb
jle
pop
ds
test
jno
dec
lret
repz
fsubrs
inc
xchg
mov
js
dec
rcrb
mov
enter
jnp
sti
enter
add
scas
aad
stos
sbb
cltd
mov
pusha
xor
push
scas
sbb
push
xchg
xor
pop
xchg
xchg
cmp
sub
inc
fstps
adc
or
add
fdivl
arpl
push
dec
inc
adc
orb
and
orl
fcmove
cld
xor
mov
repz
outsb
mov
xor
or
and
and
std
pop
inc
pop
ja
insb
insb
lods
jl
push
xorb
jp
fcomps
sbb
lcall
push
in
and
add
dec
repz
mov
mov
sbb
lcall
and
scas
and
inc
add
movsl
add
xor
dec
lods
nop
jnp
insl
adc
adc
and
arpl
outsl
out
cmpsl
pop
adc
mov
jb
rorb
mov
jge
adc
fsubr
out
push
mov
fidivl
test
out
cmpsl
idivb
add
xor
mov
int3
sub
pop
pop
add
xor
add
rcr
push
add
xchg
and
inc
mov
mov
push
inc
inc
daa
stos
neg
mov
inc
mov
or
fsubrs
cs
aam
js
test
mov
stc
shrl
iret
cmp
dec
push
cmpl
call
cmpsb
xor
xor
push
push
scas
aam
mov
lds
psubw
add
adc
jl
repz
lcall
inc
mov
test
cmc
or
pusha
popa
jmp
mov
mov
mov
in
cltd
mov
rol
mov
sub
or
xor
adc
mov
sbb
dec
aas
divb
adc
in
stos
test
outsb
fdivp
cmp
pop
stos
push
in
call
sbb
push
aad
dec
add
jmp
dec
rcll
xchg
leave
nopl
sub
adc
pushl
rclb
xchg
inc
fcoml
add
mov
icebp
mov
aas
push
cmp
in
std
pop
pop
aas
ret
xor
outsb
pusha
jns
nop
fwait
and
iret
insl
das
popf
dec
ficompl
test
popa
xor
mov
mov
ds
js
add
cmp
jmp
xchg
xchg
cmp
mov
pop
dec
pushl
mov
or
insl
imul
jae
or
js
call
adc
fisubrs
notb
insl
loop
mov
mov
push
gs
pop
xchg
fcmovu
sub
imull
dec
sbb
into
mov
das
mov
add
mov
fstps
aas
xor
push
mov
xchg
pop
movsb
rcrl
loope
aad
mov
xchg
add
lods
jecxz
lret
xchg
xor
pop
push
lods
mov
add
adc
and
pop
into
cmp
pushf
das
dec
ret
stos
dec
or
cltd
test
shr
test
mov
push
pop
pop
dec
xor
in
fs
fstps
adc
dec
stc
out
iret
mov
and
mov
sub
mov
into
mov
cmpsl
test
cli
je
jecxz
sbb
jecxz
inc
adc
fisttpl
stos
adcl
jl
leave
jnp
pop
push
dec
rorl
das
mov
les
pop
xlat
inc
iret
lds
sbb
jp
adc
inc
icebp
retw
ja
cmp
test
mov
jp
or
push
bound
rclb
js
cmp
and
xchg
jne
or
lds
jecxz
mov
push
mov
in
imul
add
rolb
pop
fldcw
in
pop
dec
and
sub
testl
outsl
data16
hlt
xchg
jle
xchg
cmp
out
mov
xchg
cmp
and
int
mov
push
cmpsb
cmpsb
sub
fwait
dec
rcrl
xor
movsb
xchg
fcomi
cmc
sub
push
out
es
xchg
popf
int3
jno
icebp
int
pop
jae
ret
enter
push
xchg
leave
pop
inc
mov
mov
sub
jo
ss
mov
push
adc
sahf
mov
xor
test
scas
mov
icebp
cmc
add
insl
adc
jle
cli
mov
sbb
or
inc
mov
or
xchg
dec
mov
mov
lods
cmp
in
cmp
xor
sub
scas
imul
pop
cmp
xchg
mov
in
cltd
cli
cmp
lcall
cs
out
inc
fwait
addr16
mov
push
pop
mov
sbb
and
mov
jae
push
mov
ljmp
pop
jae
mov
stos
ds
sub
cmc
pop
jne
aam
dec
adc
adc
dec
lock
mov
xor
xor
push
in
and
and
sub
testl
pop
dec
jle
jno
xchg
xchg
aam
lea
mov
dec
adc
adc
mov
stos
aaa
outsl
je
jmp
or
mov
dec
fdivs
fs
add
lret
cs
cmp
pop
out
int
jae
xchg
movsb
lahf
cmp
mov
jecxz
cmc
fisttps
jbe
pop
xor
js
mov
jo
cmp
mov
mov
fcompl
or
add
scas
push
adc
imul
cs
daa
out
sahf
cld
push
movsl
jge
mov
fisttpl
mov
jp
fwait
mov
pop
shll
mov
push
xchg
cld
jge
and
mov
mov
cmc
movsl
and
jge
fldenv
and
scas
out
push
fmuls
sbb
pushf
and
out
push
or
pusha
mov
pop
fistpl
insb
nop
jle
iret
push
jbe
xchg
jnp
xchg
icebp
xor
out
pop
push
rorl
sbb
imul
cmpsb
in
or
push
or
pop
mov
iret
jo
jecxz
sbb
jno
mov
and
add
pop
fldt
jmp
pop
sub
or
pop
mov
xchg
in
push
xchg
ljmp
cltd
adc
mov
std
sbbl
xchg
icebp
push
push
in
jg
scas
sbb
lahf
xchg
movsl
stos
inc
out
push
or
cmp
jnp
add
mov
pop
add
mov
outsl
and
jae
jmp
jo
adc
out
aaa
jp
jmp
rcl
jne
mov
cld
cmp
rolb
push
cmp
xchg
mov
insb
outsl
insb
push
insl
enter
pop
push
mov
stos
sar
pushf
xchg
in
sub
fidivrl
lea
xchg
sub
sub
out
mov
jo
or
and
sub
imul
in
mov
add
js
xor
pop
sbb
and
mov
les
mov
pop
adc
push
add
outsb
or
les
mov
cmc
push
pop
jae
jno
sub
push
pop
cmpb
sbb
cmc
adc
jge
mov
xor
das
push
clc
fidivl
xlat
or
jl
inc
stc
js
mov
or
gs
js
inc
repz
mov
lahf
push
imul
jbe
popf
lcall
add
mov
aam
jo
xchg
outsl
mov
jae
mov
aaa
sarb
or
xor
push
jno
xor
xchg
imul
pop
stc
cmpsb
cmpb
mov
loop
fsts
testb
pushf
addr16
outsl
daa
sbb
xchg
push
outsl
scas
pop
mov
mov
imul
jl
enter
cli
xor
sub
outsb
dec
dec
pcmpeqw
mov
outsl
cld
xlat
push
in
jo
test
cmp
cmp
lret
mov
mov
sub
dec
lahf
cli
mov
icebp
mov
mov
shlb
dec
inc
or
jg
imul
nop
pusha
xchg
insb
cltd
ret
and
into
pop
movsb
jl
out
nop
adc
lds
stos
fnstenv
ret
aas
les
nop
aaa
test
mov
fistl
mov
push
and
and
lret
mov
push
push
add
sbb
or
inc
sbb
out
mov
mov
mov
mov
jmp
mov
pusha
lods
fldcw
xor
mov
xchg
subb
or
lcall
mov
dec
push
insb
or
push
mov
adc
inc
add
movsb
insl
cmp
lods
bound
test
and
xchg
enter
and
mov
jl
outsl
ret
lea
xchg
rorl
shrl
out
lods
fsts
push
sub
mov
ret
fs
mov
call
or
mov
daa
cmp
bound
hlt
push
push
inc
push
pushl
jg
inc
imul
dec
scas
pop
sarl
out
out
insb
cmpsb
sub
nop
arpl
enter
data16
int3
ja
popf
mov
shl
jl
sbb
cmp
xor
add
mov
bound
xchg
ja
aam
push
push
xor
push
mov
jae
fnstsw
mov
fs
mov
inc
and
mov
push
or
bswap
push
movsl
clc
pop
sbbb
rolb
push
popf
jns
push
je
lds
iret
xchg
xor
mov
clc
jmp
stos
xchg
jno
jbe
call
orb
cld
mov
fsubrs
sbb
lret
aam
add
mov
scas
fwait
lods
jae
inc
out
pushf
lret
jle
mov
stos
xor
jno
ret
std
mov
sti
ds
jl
bound
movsb
arpl
xchg
faddl
jecxz
push
sbb
fwait
int3
sti
hlt
pop
adc
mov
cmp
ret
mov
pop
cmpsl
cwtl
mov
fcmovnb
jp
in
call
mov
sbb
call
lea
sbb
repnz
aas
and
jecxz
cmp
js
and
clc
xchg
in
rol
sub
scas
dec
pop
lods
lock
loope
cmpsl
jb
ds
pop
arpl
aaa
das
push
fcoms
push
rcll
out
lods
bound
mov
cli
sbb
es
sbb
das
mov
insl
mov
mov
pop
leave
pop
push
fidivl
enter
es
adc
inc
inc
icebp
mov
push
int3
xchg
inc
out
jns
sbb
xor
test
xchg
in
insb
cli
push
push
in
nop
mov
inc
jl
js
es
jge
out
test
jg
sub
repz
cli
fs
lods
out
push
insl
leave
mov
mov
mov
pop
sub
jecxz
jo
jecxz
push
daa
stos
pop
stos
mov
add
sbb
pop
mov
sbb
call
or
xchg
lret
into
arpl
stos
sahf
dec
mov
dec
xchg
pop
mov
mov
into
push
fnstcw
inc
fisttpl
jg
in
mov
mov
adc
gs
and
xor
sbb
lret
popa
stos
adc
push
add
sbb
shl
and
dec
mov
jns
inc
add
inc
enter
mov
xchg
rolb
rcll
add
daa
lods
sbb
mov
adc
xorl
mov
nop
ljmp
mov
mov
add
test
jg
pop
outsl
pop
arpl
or
xchg
incb
iret
or
out
cmp
mov
cmp
dec
das
icebp
sbb
and
xor
cld
jo
hlt
sbb
fimuls
jl
jp
jne
jne
mov
fidivs
jg
pop
lar
dec
mov
inc
jb
stc
push
pop
xchg
leave
dec
pop
sub
xor
fistpll
call
sbb
cmp
inc
pop
cmp
mov
stos
and
jecxz
pop
movsb
call
inc
xchg
test
mov
jp
jae
jae
pop
jns
icebp
clc
into
sahf
mov
neg
movsl
push
jp
mov
jge
ret
or
sub
push
std
repnz
nop
inc
rcrl
sub
lret
add
pop
jns
pop
rcr
adc
stc
test
mov
in
cltd
jp
xchg
dec
mov
mov
adc
fsubr
int
or
jecxz
sti
daa
cltd
mov
mov
imul
push
cld
jno
outsl
out
xchg
add
inc
aam
hlt
sbb
cli
ljmp
scas
ficomps
mov
mov
ja
mov
cwtl
xchg
leave
lock
orb
jae
push
add
cli
jle
je
std
inc
movsb
loop
sbb
cmp
mov
mov
mov
iret
mov
jo
int3
adc
sub
call
pop
orb
outsb
fisubl
fldl
out
jno
popa
je
outsl
pop
imul
dec
jl
test
xor
lock
imull
or
dec
and
dec
jbe
mov
adc
loopne
cs
pusha
rcll
inc
cmp
add
fwait
mov
push
mov
and
inc
push
mov
mov
xchg
je
mov
loop
jl
faddp
add
ficoms
hlt
ja
or
xchg
mov
outsl
lds
adc
ds
shlb
ret
clc
idiv
and
or
adc
sub
imul
or
dec
in
icebp
xchg
test
mov
lea
mov
add
pop
inc
stos
mov
mov
loopne
jae
mov
sti
mov
into
in
icebp
jbe
mov
shl
ret
inc
jnp
push
test
fistpl
adc
jmp
sub
mov
lret
dec
add
stos
fmull
aas
imul
mov
ljmp
adc
mov
sahf
push
pop
cmp
out
divb
dec
and
and
xchg
adc
test
shlb
sbb
lahf
mov
imul
adc
xor
dec
jle
mov
push
and
sbb
gs
add
sub
jo
insl
ljmp
fmul
rolb
sub
sar
mov
mov
mull
push
cmpsl
sub
mov
push
inc
jbe
rsqrtps
leave
pop
sub
inc
loope
mov
dec
lea
rcll
popa
jno
incb
cli
jmp
lock
add
arpl
push
xor
rcrl
adc
adcl
stos
imul
adcb
and
dec
and
les
aam
adc
push
cmpsl
pop
or
inc
hlt
js
push
adc
mov
test
out
stos
add
rcr
bound
jae
xchg
movsl
fstpt
ja
lock
push
xor
pop
jecxz
push
test
sbb
mov
cltd
mov
bound
mov
lea
jnp
mov
les
sahf
in
aas
shll
jbe
add
pop
add
fdivrs
and
mov
and
adc
mov
outsb
roll
mov
cltd
fldcw
mov
xchg
adc
in
add
inc
mov
dec
sbb
and
jne
pusha
pusha
in
adc
dec
movsb
int3
add
xorb
xchg
js
mov
mov
outsb
mov
sub
jnp,pt
mov
dec
or
dec
rcrb
add
ficompl
cmp
adc
enter
jp
cmpsl
sub
mov
add
and
out
jge
sti
sbb
push
and
adc
ljmp
xchg
mov
mov
dec
inc
pop
jnp
dec
inc
pop
push
mov
call
das
jno
incb
inc
xor
push
push
cli
pop
cmp
and
fsubrs
lods
mov
push
or
sti
push
insl
les
cld
sub
loop
adc
pop
dec
leave
fidivrl
xlat
pop
pop
push
xor
jmp
les
push
sub
lds
adc
dec
jo
xchg
sub
mov
jecxz
lahf
cld
xor
dec
cmp
push
mov
inc
movsb
clc
sti
nop
or
sub
mov
mov
loopne
adc
fistl
repz
imul
mov
scas
in
mov
in
test
int3
je
dec
out
pop
rorl
pop
xchg
cltd
jl
dec
inc
push
dec
test
sbb
cmpsl
fwait
add
je
test
inc
cli
rolb
mov
mov
dec
or
mov
lods
int
jmp
jne
or
sar
jl
loop
and
or
mov
mov
stc
movsb
arpl
mov
mov
lahf
push
fcomp
or
jl
or
or
mov
test
xor
pusha
fs
xchg
in
leave
dec
push
enter
pop
out
mov
gs
fwait
or
push
xchg
rol
or
lods
das
scas
cwtl
repnz
adc
cmp
xlat
mov
loopne
mov
push
or
adc
or
les
ss
cmp
push
xchg
aas
xchg
pop
mov
jb
adc
sbb
enter
sub
jp
sbb
leave
in
push
pusha
arpl
arpl
cld
mov
cmpsl
arpl
mov
shll
pop
lock
aam
adc
inc
sub
pop
mov
dec
mov
and
sti
push
cwtl
pop
mov
ds
pop
inc
pop
mov
add
pop
mov
mov
dec
lret
popf
outsl
ror
or
les
das
adc
cs
outsb
mov
sub
dec
jle
cmpsb
jge
dec
jge
mov
test
ja
push
mov
and
add
mov
in
aaa
pop
shll
leave
pop
call
jmp
push
and
jne
sarb
inc
call
cs
ss
mov
mov
popa
pop
lcall
icebp
fbstp
pop
jp
cmc
lcall
mov
push
rcr
pop
and
mov
ds
dec
dec
dec
adc
insb
or
mov
dec
mov
adc
in
aad
pop
xor
inc
mov
jae
mov
es
icebp
jb
rcll
jecxz
cs
cli
mov
int
pop
adc
mov
pop
sbb
cmpsl
and
cltd
xor
push
push
or
mov
and
inc
add
out
adc
push
dec
cmp
aaa
ljmp
sub
sub
mov
jle
shlb
and
add
push
mov
fidivs
dec
mov
les
mov
jp
divb
aam
jnp
jmp
ljmp
dec
pop
pop
sbb
ss
sti
xchg
xor
inc
cmpsl
hlt
mov
testl
and
xchg
push
mov
cltd
pushf
and
test
mov
loopne
arpl
fcompl
sub
sbb
pop
cmp
cmpsb
lahf
push
loopne
cli
sbb
outsl
into
xchg
jg
int
lret
and
mov
out
push
mov
push
iret
or
daa
pop
mov
fisubrs
push
mov
dec
dec
jne
lret
or
ljmp
in
and
and
std
ficompl
adc
pop
les
int3
mov
xchg
push
adc
cmp
movsl
daa
or
scas
dec
push
xor
faddl
dec
test
sub
into
aaa
jns
pop
mov
test
mov
aad
dec
mov
xor
sbb
add
lock
mov
andl
mov
cmc
mov
dec
ret
dec
add
adc
push
rorl
ret
test
push
pop
pop
push
cmp
insl
jge
movl
stos
stos
mov
jb
loope
ljmp
shr
jb
adc
out
ret
push
fs
ds
leave
push
and
fistpl
std
pushf
imul
push
cmpb
adc
lahf
movsl
pop
xchg
cmpsl
test
lret
jbe
leave
lret
clc
call
inc
daa
jnp
lret
pop
mov
in
inc
fs
dec
rcl
and
lcall
mov
add
mov
or
xchg
insb
and
movsl
lcall
fistps
sbb
ljmp
xchg
inc
lods
cmp
xchg
ret
push
sets
sarb
aas
lcall
sub
insl
mov
into
or
xchg
jne
push
fbstp
dec
inc
xor
xlat
and
jecxz
xor
aad
cmpsb
cld
sbb
and
test
inc
and
jge
pop
dec
movsl
mov
dec
push
fsts
pop
addl
imul
pop
xorl
sub
fcmovnbe
mov
repnz
jne
pop
sub
mov
out
shrl
add
jne
mov
je
add
or
dec
in
loop
mov
ret
and
jno
lock
xchg
and
loop
dec
xchg
jbe
mov
cmp
xchg
bound
inc
insb
xchg
std
aad
xlat
rcrl
xchg
push
and
mov
push
adc
xchg
and
xorb
pop
fcmovb
mov
mov
inc
jg
xchg
and
mov
rorb
dec
dec
das
jo
inc
adc
jne
out
ret
xchg
inc
popa
xor
xorl
rorl
jle
mov
and
in
mov
pop
aad
cmp
and
repz
imul
sub
push
in
es
hlt
jle
sub
nop
sub
int
inc
mov
loopne
xlat
add
xor
cmp
push
or
mov
cmpsb
fsub
lods
ret
pop
add
mov
aad
pop
lahf
aad
imul
fldcw
pop
cmp
and
fwait
sarb
jo
ss
insl
cmp
mov
cmp
mov
stc
aam
dec
jae
out
outsl
popf
cs
adc
xchg
dec
dec
jecxz
enter
mov
cmp
ret
push
inc
fs
jl
pop
addb
inc
jp
cmp
shlw
das
inc
lods
stos
clc
jle
adc
in
fs
fcomps
jns
mov
stc
mov
mov
fmul
mov
xchg
xchg
inc
iret
jns
xchg
push
mov
sbb
pop
push
incl
aaa
xchg
andb
outsb
shlb
dec
inc
sarb
adc
repnz
pop
jmp
outsl
iret
xchg
call
sbb
icebp
jmp
push
lock
mov
jne
sub
adc
in
cwtl
add
push
push
lods
fwait
lock
test
ss
xor
add
hlt
fwait
adcl
sbb
cltd
sbb
xor
fildll
cmc
pushw
mov
pusha
jmp
mov
push
mov
and
cmpsl
xor
jmp
movsl
push
mov
aam
dec
in
and
lods
lahf
outsl
jnp
inc
bnd
lcall
jb
shrl
jb
adc
or
mov
scas
jmp
mov
rolb
int3
in
mov
imul
mov
sbb
push
jns
nop
sbb
aas
xchg
scas
pop
add
ror
pop
cltd
add
jno
add
stos
mov
mov
ret
cld
sub
adc
xchg
adc
pop
adc
or
insl
mov
mov
pop
aas
jb
cmpsb
sti
sbb
cmc
and
mov
xor
and
sbb
inc
dec
cmp
lret
cs
push
fnstenv
xor
push
xor
dec
mov
mov
or
sbb
ret
push
or
mov
lahf
fadds
pop
movsl
jge
test
cwtl
add
lods
bound
adc
sbbl
xor
lret
je
loop
dec
fsubs
std
push
xchg
jle
fisubl
mov
stos
lds
or
xor
jbe
out
fcos
fidivl
or
dec
scas
int
cmp
jl
int
sbb
in
and
mov
ss
in
jl
pop
or
jmp
add
inc
out
loop
aas
stos
into
test
bound
cmp
cs
adc
adc
cmp
adc
mov
movsb
pop
ret
or
inc
adc
push
sbb
in
out
mov
mov
imulb
lret
sub
jl
sti
xor
or
mov
and
mov
sbb
cmc
loop
rcrb
scas
sahf
ja
inc
sub
pop
sub
sub
inc
daa
pop
mov
fadd
mov
lock
push
mov
popa
pop
or
xchg
mov
and
or
test
pop
push
insb
in
cwtl
decb
lods
xor
jl
push
dec
lret
cmp
imul
jecxz
push
dec
adc
push
mov
and
pop
pop
or
testl
lea
mov
and
addb
push
pop
xchg
mov
nop
mov
jg
cmpsb
fistps
mov
mov
jns
in
push
dec
jg
mov
stos
jne
adc
daa
pusha
mov
inc
push
or
mov
insl
shr
icebp
fildll
lods
imul
xor
jbe
stos
addl
jle
pop
out
lahf
sbb
mov
sub
out
or
dec
push
stc
adc
cmp
and
jns
out
pop
jge
mov
fdivl
movsb
into
sbb
xchg
lods
iret
cmp
mov
test
enter
int
push
in
imul
fnsave
jno
or
inc
ja
cwtl
rclb
sahf
sub
mov
mov
aad
movl
mov
je
mov
rcr
enter
inc
popf
pop
out
into
xor
jnp
pop
out
jae
dec
sahf
mov
and
pop
das
orl
stos
mov
aaa
and
push
xor
cmp
fists
repnz
aas
adc
ja
or
mov
pop
inc
in
xor
clc
jo
sub
jae
rcrb
xor
mov
and
push
out
mov
cli
rolb
xlat
arpl
inc
in
lods
xchg
cmp
inc
push
js
flds
cmp
not
mov
xchg
subb
jmp
adc
imul
xor
in
das
jo
sbb
xchg
mov
mov
aad
pop
xchg
out
pushf
popf
rcll
pop
fcmovbe
out
dec
scas
or
adc
add
rcr
dec
out
pop
xor
xchg
shll
push
test
or
jle,pn
and
adc
jmp
aaa
mov
call
fsubrs
int3
push
jbe
mov
aaa
pushf
jl
or
add
sub
add
cmp
aaa
jg
adc
das
inc
xor
sub
js,pt
lahf
loop
and
ficoms
mov
inc
stos
test
sub
pop
add
fistl
or
enter
es
mov
jb
adc
lret
lret
and
mov
fsubrl
push
pcmpeqw
ja
lret
fwait
mov
test
insl
cmp
jecxz
subb
mov
cmp
test
pop
push
lahf
add
cmp
icebp
sub
or
inc
or
je
xchg
mov
cmpb
or
lret
xchg
mov
mov
fbstp
int
test
iret
sub
sahf
jle
jecxz
subl
outsl
rorb
aas
xrelease
fisubs
push
xchg
in
dec
jle
sbb
fdiv
lds
out
jl
lret
mov
mov
jp
xor
sbb
mov
lds
pop
jbe
or
in
inc
mov
ds
dec
loope
xor
sbb
ja
popa
mov
lods
sbb
xchg
into
xor
adc
cmpl
xchg
add
ss
aam
test
xor
push
nop
mov
movsb
call
outsb
or
or
leave
iret
mul
shrb
cmp
ret
mov
pop
xchg
out
mov
lods
xchg
lahf
ss
mov
sbb
mov
xor
mov
pop
xchg
fisttpl
fwait
pusha
mov
scas
mov
rolb
pushf
out
or
cmp
xchg
add
mov
mov
jmp
cmp
je
jl
leave
cli
push
mov
mov
sub
push
lods
mov
negl
jp
dec
add
clc
xor
cmp
seta
push
stos
push
mov
xchg
adc
xor
sti
mov
and
push
sbb
fnsave
push
ds
inc
dec
or
stos
pop
mov
sbb
shrb
sbb
jp
ficompl
sbb
scas
jp
mov
sbb
add
sub
pushf
pop
sbb
inc
xchg
dec
test
aad
lret
add
imul
nop
mov
shl
add
icebp
add
xchg
lret
or
sbb
pop
pop
mov
cs
pop
inc
push
mov
cmp
jne
pop
hlt
pop
or
iret
push
add
cld
mov
pop
push
test
cmpsl
pop
pop
iret
push
cmpsl
outsb
mov
ss
add
loope
ret
imull
mov
mov
fldenv
std
jmp
inc
and
jno
ds
loop
inc
pop
outsb
scas
popa
data16
call
fbstp
jmp
lods
arpl
push
dec
iret
ja
jae
cwtl
cmp
inc
add
repnz
cmpsb
jle
mov
lods
aad
xlat
xchg
sbb
sti
or
outsl
das
test
pushf
jmp
stos
xor
mov
xchg
cmpl
mov
in
dec
jmp
ret
fdivr
dec
pop
sub
fistpl
ret
lahf
lea
lahf
push
int
push
sub
dec
and
lds
adc
lcall
dec
jnp
pop
jo
das
and
jb
xchg
add
jp
iret
dec
mov
mov
push
in
stos
aas
je
push
xchg
hlt
and
adc
mov
in
cli
ret
sub
fcmovbe
push
sbb
shrl
cmp
repz
adc
adc
and
int3
popf
inc
xor
outsb
pop
addl
inc
push
scas
subl
add
sbb
sub
cmpsb
push
push
ret
inc
bound
movb
mov
lret
rcl
cmp
xor
ret
mov
pop
es
jmp
push
mov
daa
jo
dec
mov
push
jl
data16
shl
call
pop
sub
test
loope
add
jno
test
jmp
xchg
out
add
ret
testb
xchg
dec
mov
or
push
sbb
pop
adc
jb
cmpsl
insb
mov
sbb
aaa
mov
test
push
fildl
test
insb
sahf
mov
and
in
and
dec
fldcw
data16
jno
aad
xchg
push
adc
cmp
lock
mov
jae
and
es
dec
pop
dec
dec
lret
nop
adc
lock
cltd
popf
sbb
pushl
es
push
push
sub
cmp
pushl
mov
dec
adc
in
repnz
cli
mov
jl
jne
test
jnp
stos
aas
jle
jmp
pop
sbbb
bound
pop
dec
cmp
pop
int3
cmp
in
out
imul
sbb
mov
js
inc
sub
dec
loopne
and
and
sti
inc
xor
std
push
dec
stc
or
pop
push
movsl
pop
std
mov
fidivs
je
out
das
imul
and
and
fistpl
mov
push
stc
pop
icebp
jmp
mov
push
mov
sub
push
je
aaa
dec
insb
stos
pop
pop
ljmp
cmp
lods
push
mov
movsb
mov
push
mov
aaa
sbb
jae
and
or
sti
inc
dec
pusha
fisttpl
mov
push
inc
out
jne
inc
jnp
gs
mov
mov
cmpsb
call
rorb
sub
outsl
sub
adc
outsl
cwtl
jecxz
and
ja
cli
sbb
mov
lock
mov
sti
xchg
jbe
ficoml
test
mov
mov
pop
or
or
pop
in
dec
mov
adc
adc
inc
repz
out
sti
dec
sahf
or
lds
cmpsb
shlb
movl
mov
xor
mov
bound
dec
sub
neg
popf
in
xchg
rolb
pop
mov
sbb
shl
adc
sbb
in
mov
data16
jb
or
mov
cmpsb
lret
or
cmpb
mov
repnz
mov
xor
push
xor
lock
arpl
andb
out
pusha
inc
cwtl
cmpsl
mov
fildll
insl
test
xchg
sub
inc
mov
mov
jne
adc
or
test
bnd
lods
jmp
mov
sub
in
popf
sbb
mov
sti
ret
outsl
add
and
fsubrs
dec
pop
enter
pop
insl
add
mov
jp
jge
stc
notl
add
fsubr
push
xchg
add
out
pop
mov
imull
jae
inc
cmp
call
sub
in
repnz
xchg
or
cmp
pop
adc
cmp
adc
adc
fcompl
mov
dec
add
pop
xor
jl
jb
rol
cmpsb
inc
dec
or
jbe
cltd
sub
mov
inc
pop
lock
rol
cwtl
out
pop
in
aad
jmp
test
mov
mov
push
sub
adc
lret
ja
outsb
jns
inc
cmc
dec
mov
add
lock
mov
push
cmpsl
cmpsb
repz
ljmp
jne
negb
pushf
mov
cmp
jbe
testb
gs
outsb
fisubrs
into
xchg
cmpsb
cmpsl
xchg
inc
popf
jae
sbb
push
iret
mov
fisubrl
in
mov
adc
lahf
xor
cwtl
xor
cmp
jg
mov
movq
mov
je
dec
out
and
mov
cwtl
mov
push
movsb
js
pop
int
mov
mov
sarl
xchg
test
movsb
test
xor
hlt
pop
inc
fimuls
push
dec
mov
pop
add
jge
fdivr
mov
xchg
or
mov
inc
lret
imul
fildl
pushf
jno
arpl
fsubr
test
fwait
xchg
mov
test
jmp
sbb
add
sub
xchg
push
xorl
mov
cli
sub
sub
adc
loope
mov
jmp
add
in
je
sahf
idivb
mov
add
inc
xlat
std
jmp
adc
imul
lret
pop
xchg
inc
mov
push
out
push
call
psrlq
std
and
jecxz
ds
sub
xchg
sbb
mov
fmull
in
leave
xorl
lods
jl
mov
jg
inc
ja
or
sub
jle
test
addr16
imul
mov
add
stc
push
pop
out
adc
push
xchg
adc
pop
or
adc
popa
frndint
cmpsl
adcl
int3
sub
clc
adc
mov
scas
adc
arpl
push
push
jns
fdivrl
sbb
add
add
lods
fs
sbb
adc
sub
jp
push
pusha
dec
shrb
cmpl
push
rcrb
push
ss
fisttpl
mov
cmpsb
dec
sahf
jle
enter
enter
loope
sub
inc
lret
add
push
add
cli
sub
cmp
pop
mov
ret
out
cmp
push
mov
cpuid
stc
andb
xlat
mov
addl
lahf
leave
mov
pusha
fstpl
lods
pop
cmc
sbbb
insl
mov
mov
out
into
jno
lcall
fimull
in
mov
rcrl
sub
movsl
fsub
in
pop
outsb
adcb
out
mov
repnz
or
test
mov
mov
push
rorb
cld
rorb
jns
add
aam
and
lret
jp
stos
mov
punpcklbw
inc
mov
inc
adc
imull
adc
pop
inc
add
aam
jle
lret
dec
leave
dec
adc
xchg
sti
popa
cmp
flds
cs
stos
stos
inc
fbstp
mov
stos
negl
fdivrs
das
cmpsb
adc
popa
add
aam
cmp
shlb
sbb
dec
enter
sbb
pop
shll
andl
jmp
inc
pop
mov
push
mov
jns
nop
inc
cmp
xchg
jge
inc
popf
sub
test
jecxz
sub
inc
adc
pushf
cmpsl
xchg
jns
xchg
stc
push
test
imul
cmpsb
push
add
mov
gs
loopne
popf
dec
and
dec
mov
ds
pop
cmp
pop
int3
mov
pop
stc
push
mov
nop
adc
out
pushf
jge
inc
aas
pushl
mov
dec
sbb
or
jl
dec
pop
push
and
dec
cmp
insb
scas
add
mov
dec
inc
cld
pop
xchg
mov
mov
arpl
add
sub
ss
push
cltd
fisubrl
xor
jp
lcall
dec
dec
mov
int
cmp
daa
jmp
mov
jbe
pop
mov
xchg
in
mov
ja
adc
pop
add
xchg
pop
lret
les
ret
aam
push
daa
sahf
cmp
fldenv
push
cmc
loope
popa
add
arpl
push
in
mov
daa
clc
outsb
fisttps
je
clc
es
mov
imul
push
cltd
das
in
pop
lret
mov
dec
sbb
push
loop
xchg
and
or
imul
stc
fcoml
pop
mov
xor
pop
and
sti
loopne
in
mov
mov
mov
insb
push
test
cwtl
dec
nop
loope
test
push
inc
mov
push
inc
mov
pop
pop
test
or
jp
cmpsb
xlat
cmc
dec
push
jnp
pop
mov
lahf
sub
adc
fnstcw
jno
or
fwait
mov
daa
sub
mov
mov
scas
or
mov
adcl
sbb
shlb
mov
push
outsl
mov
cltd
push
xchg
test
mov
sbb
push
jae
cli
insl
pushf
inc
fdivrs
lcall
inc
enter
cmc
stc
or
jle
mov
xor
push
hlt
cs
fimuls
mov
mov
xchg
adc
scas
mov
add
cs
arpl
and
pusha
pop
xchg
or
clc
and
jbe
mov
cmpsl
or
xchg
iret
js
add
adc
jp
stos
inc
dec
jg
cmp
jns
movsb
repnz
shlb
jl
insl
pusha
ret
mov
mov
out
push
enter
stc
xor
shll
xor
pop
sbb
push
pop
mov
insl
sub
sbb
jmp
pop
sub
push
cmp
inc
or
or
jo
mov
mull
aam
inc
sarb
xlat
push
and
fsts
fiadds
or
mov
pop
dec
dec
in
insb
jns
int
push
and
arpl
mov
int3
sbbb
pushf
lods
push
repz
lods
outsl
call
addl
jo
pop
hlt
cmpsl
or
mov
jl
data16
push
xor
push
xchg
ljmp
inc
push
inc
or
adc
inc
lods
stos
push
imul
aas
fisttps
mov
xchg
outsb
std
xchg
adc
test
jb
mov
loop
adc
xchg
lret
aam
mov
cmp
mov
pop
lds
jecxz
add
in
cwtl
in
clc
jle
stc
fsubl
jge
mov
or
jo
push
and
lcall
lret
insb
push
subl
icebp
xor
int
bound
or
inc
ja
test
popa
dec
in
and
dec
scas
rol
cmp
inc
lret
inc
dec
fnsave
sub
and
fsubrs
or
add
pop
pop
and
and
inc
clc
hlt
or
cmpsl
in
push
jg
mov
ret
jbe
jge
loope
dec
xlat
push
and
hlt
mov
daa
sbb
or
push
add
subb
repz
fiadds
or
out
push
push
or
popf
cli
out
pushf
dec
lock
out
loope
or
lcall
dec
ss
cmp
xor
cmp
push
push
mov
add
push
dec
int
mov
sub
rorb
add
or
les
mov
or
adc
add
mov
popa
pushf
push
sub
in
hlt
xchg
and
orl
push
add
lcall
mov
add
mov
movsl
dec
in
inc
pop
mov
or
int3
dec
xchg
xchg
fwait
ds
ds
inc
push
lods
jecxz
sub
jno
push
out
push
or
sarb
cmp
push
adc
rcrb
and
jl
enter
fisubrl
lcall
cmp
int3
cmp
icebp
leave
inc
jns
inc
xor
mov
jne
and
pop
in
jp
movl
push
ret
fimuls
or
mov
dec
pop
dec
repnz
jae
mov
pop
mov
xchg
jmp
adc
test
out
pop
rcrb
fcoml
inc
das
adc
loop
imul
cltd
dec
notl
push
sub
mov
es
add
cmp
or
pop
xchg
lds
sbb
mov
iret
adc
fnsave
mov
lahf
icebp
decl
push
and
and
lods
shll
imul
sbb
aaa
sarb
lea
cltd
and
in
fs
fistl
imull
stc
jp
mov
cltd
loop
sbb
fldcw
push
xchg
inc
int3
pusha
outsl
dec
mov
mov
xchg
adc
cmpsl
inc
jge
call
pop
gs
xchg
clc
icebp
fiadds
sub
push
clc
call
cmp
mov
xchg
add
movsl
lods
out
cmp
aad
xchg
out
cli
inc
out
sub
scas
loopne
out
lcall
enter
xchg
mov
xchg
lret
jp
mov
and
dec
leave
pop
mov
js
jbe
pop
ds
jno
notl
popa
xlat
outsl
popa
add
or
int
xchg
call
jle
lods
cmpsb
mov
cs
mov
imul
inc
dec
mov
mov
movsb
popa
dec
add
sbb
nop
jge
and
fwait
jne
push
test
insb
jmp
in
push
clc
pop
lods
cmpsl
stos
jb
pop
hlt
outsb
out
stos
inc
xchg
lea
mov
out
mov
jns
or
stc
mov
dec
ljmp
push
rcrl
or
outsl
sub
mov
xor
int3
lea
stos
mov
dec
inc
sahf
xchg
pop
jecxz
mov
xchg
mov
daa
scas
or
jbe
cmp
push
out
mov
pop
ret
dec
push
add
bswap
filds
imul
or
mov
scas
aaa
pop
dec
rorb
mov
add
mov
xor
or
movsl
xchg
ds
and
in
rorb
stc
dec
dec
mov
jl
cltd
dec
mov
sahf
gs
lea
sub
loope
push
sub
lods
loop
ficoml
shld
xor
jbe
popa
loopne
mov
clc
test
popa
push
mov
mov
mov
movsl
mov
lret
nop
repnz
lahf
jo
aam
out
pop
cmp
ds
es
ret
mov
or
cmp
loopne
add
push
xlat
cmp
mov
xchg
mov
gs
nop
cmpsl
adc
and
mov
jg
js
inc
xor
lahf
pop
adc
mov
pop
pop
mov
or
pop
das
mov
mov
adc
pop
cmp
adc
stc
add
pop
mov
jmp
loope
mov
sub
aam
in
out
xchg
mov
and
fnstcw
clc
rcrb
jle
fisttps
scas
sbb
int3
and
push
cmp
es
mov
lods
jbe
jmp
sbb
inc
cmp
inc
fldt
xchg
jmp
cltd
pop
stos
jno
push
dec
cmp
std
jle
or
andl
xchg
roll
lahf
std
jle,pt
imul
mov
nop
pusha
out
mov
or
pop
ljmp
mov
fisubrs
mov
out
pop
movsl
xchg
pop
inc
and
in
xor
jns
sbb
push
push
xchg
sub
rcr
cmpsb
adc
fwait
shlb
adc
cmp
shl
and
or
pop
adc
imul
and
ja
das
in
sub
add
add
enter
push
mov
aas
pusha
mov
fcmovne
les
pop
filds
bound
ljmp
ds
xchg
ficoms
mov
test
sbb
nop
sti
popf
xor
roll
bnd
or
fsubl
cmc
jne
xchg
cmp
mov
sbb
les
pop
inc
js
mov
xor
sub
xchg
imul
mov
cltd
push
mov
out
js
icebp
loop
rcll
pop
mov
daa
jmp
and
out
pop
mov
scas
gs
push
stos
cmpsb
pop
or
loopne
cmp
into
lret
incb
test
arpl
repnz
and
jge
jle
es
lret
movsb
js
lahf
nop
aaa
fwait
push
int3
push
insl
ret
fadd
xchg
pop
out
xor
movsb
adcl
jne
sub
or
jg
pop
mov
shlb
cmp
leave
cwtl
outsb
and
pop
frstor
aaa
and
cmp
and
mov
sarb
fldl2t
rcr
mov
or
repnz
cmpsb
push
test
jl
orb
stos
loop
cli
add
push
inc
push
mov
je
jne
stos
add
xchg
loope
ljmp
lods
and
dec
adc
sbb
or
sbb
dec
ds
sbb
sub
cld
add
icebp
adc
stos
or
dec
daa
aam
sbb
inc
mov
ret
pop
mov
iret
setp
ret
mov
std
rorl
lods
pop
ds
mov
cmp
sbb
bound
lret
xchg
sbb
data16
push
fwait
cltd
int3
loope
dec
stc
jge
iret
cmc
lods
loopne
adc
movsl
mov
insl
clc
leave
aam
dec
fisubrl
dec
in
je
jecxz
jmp
cwtl
pop
mov
stos
push
imul
sub
mov
insl
out
sbb
fists
push
call
je
out
bound
and
loopne
out
loope
mov
adc
ds
lock
xor
jbe
subb
add
fnstcw
test
inc
adc
inc
pushf
cltd
cmp
add
dec
dec
mov
xchg
xor
sbb
dec
add
pop
jns
and
mov
mov
add
cli
cmp
mov
jmp
out
pop
hlt
inc
or
mov
adc
mov
enter
or
es
jb
nop
and
outsl
fsubrl
test
mov
iret
ret
pop
orb
cmp
mov
cmp
scas
es
jl
dec
popa
add
or
dec
push
jne
mov
mov
mov
sbb
repz
orb
add
shrb
lret
sbb
cmc
mov
aaa
jg
adc
out
mov
fstpt
lock
push
hlt
push
pusha
lods
outsl
addr16
pop
ret
adc
incl
xchg
jne
and
mov
ret
test
shll
mov
pop
xor
jne
xor
into
stos
call
cmp
scas
enter
jbe
lcall
or
out
cli
repnz
out
lods
sbb
int
cld
mov
cld
cmp
push
out
or
inc
stos
cmp
aam
pop
add
loopne
sbb
popa
movsl
shrl
sub
jno
int
popf
xor
cmpsl
inc
popl
je
jmp
lcall
and
aam
hlt
xor
sub
js
jbe
jno
ds
lret
ret
jbe
cvttps2pi
shl
pop
loopne
pop
in
mov
std
cmp
sbbb
sub
cwtl
add
out
aam
outsl
mov
mov
fstpl
pushf
dec
mov
fwait
cmp
jge
outsl
sti
cmpsl
dec
mov
dec
xor
jmp
inc
mov
pop
xchg
push
ficoml
and
xor
data16
lret
xchg
cmpsb
sub
jno
ret
clc
shl
fidivl
push
inc
ret
adc
popf
mov
mov
jge
adc
ljmp
mov
mov
jmp
mov
test
mov
popa
mov
pop
je
cmp
ss
lock
or
push
ffree
push
pop
pop
adc
aaa
rcll
inc
cs
jbe
pop
push
mov
cli
jp
or
lcall
inc
mov
lods
testb
xor
jmp
enter
out
pop
das
push
xor
aam
gs
and
adc
fidivl
and
mov
les
ja
subl
xchg
into
sbb
setno
addr16
cmp
mov
fcmovne
and
jl
inc
test
aam
dec
cs
imul
push
jbe
dec
ret
pop
or
sarl
cmp
jnp
or
sti
fdiv
aam
add
rorb
pop
jecxz
jmp
outsl
arpl
adc
and
push
sti
mov
mov
jb
js
fstps
cmovne
aam
pushf
bound
test
mov
loopne
fisttps
mov
adc
jle
in
xlat
sub
lods
rep
das
cmpsl
cmp
shr
popf
push
or
cs
dec
out
push
mov
push
pop
aad
mov
jno
and
ds
pop
add
adcl
cwtl
pop
stos
mov
cmpsb
or
cmc
dec
push
or
rolb
es
ret
dec
xchg
ror
sub
aas
imul
push
xchg
or
inc
sub
incl
icebp
cmp
in
cmp
clc
dec
sub
enter
lea
dec
mov
add
push
and
xchg
mov
imul
test
pop
xchg
or
out
mov
cli
and
fnstenv
fcmovne
mov
pushf
inc
fcom
addr16
add
adcl
repz
jp
leave
or
loopne
aad
test
inc
cmpsb
inc
mov
out
lret
mov
pop
hlt
mov
cmp
push
jmp
loope
mov
andb
shlb
add
inc
aaa
and
pop
cmp
into
sub
push
mov
sbb
mov
insl
fmul
out
loopne
jo
mov
jnp
lcall
shl
mov
jne
dec
sahf
leave
mov
mov
inc
push
sarl
push
add
cmp
sub
shlb
or
mov
mov
pop
out
sub
loope
shr
jae
push
adc
mov
mov
add
gs
cltd
xlat
popf
pop
cmp
or
shlb
dec
and
inc
xchg
popf
add
and
jmp
lret
cmc
cmc
test
subb
pop
mov
icebp
or
pop
mov
push
imul
sbb
push
arpl
and
mov
mov
test
dec
xchg
movsb
in
cmp
sbb
flds
push
pusha
inc
lods
push
jb
mov
int3
mov
out
aaa
test
frstor
imul
mov
icebp
movl
mov
mov
ja
xlat
shll
pop
cmp
mov
mov
sahf
cmpb
ljmp
je
stos
inc
jo
mov
lods
add
add
stos
pop
movsl
in
std
adc
mov
cmp
mov
repnz
add
push
aaa
mov
stos
sub
cli
mov
add
adc
adc
xchg
mov
out
xchg
mov
jo
dec
add
addr16
dec
pop
das
out
adc
test
dec
sahf
rcl
stos
ds
imul
lret
stc
sbbl
aad
cmc
and
cmc
ss
cld
lds
dec
mull
adc
cmp
mov
mov
cmp
jne
dec
mov
push
and
jae
cmp
pop
je
insb
push
ljmp
mov
ss
mov
scas
addl
jecxz
stc
sub
ss
mov
outsb
popa
jo
subb
ss
jmp
mov
sbb
out
ja
test
enter
mov
inc
or
add
dec
pop
push
out
movsb
or
loopne
fs
ret
push
sbb
and
xor
sub
pop
subl
push
sbb
dec
lret
adc
shll
jae
stc
rcr
or
cmp
sub
push
cltd
addl
movsb
test
xor
jmp
mov
mov
mov
jb
aad
imul
addr16
jge
aam
jecxz
loop
sbb
pop
loopne
cmpsb
pop
insl
orl
inc
loope
dec
jne
test
add
push
sbb
xchg
movsl
sar
fsubrs
int
mov
je
lea
shrl
enter
in
ret
mov
repnz
xorl
int
mov
es
loop
inc
ficompl
push
adc
inc
loopne
or
test
or
jp
std
call
and
jne
push
mov
testl
aas
outsl
xor
add
pop
out
popa
hlt
jp
push
test
adc
or
idiv
xorl
outsl
pop
push
sbb
stos
push
mov
jecxz
dec
jmp
xorb
or
mov
dec
mulb
lret
in
push
sbb
push
fwait
mov
inc
jge
clc
lods
adc
sbbb
and
jl
cmp
dec
imul
xchg
pop
and
out
mov
bound
popa
scas
fcmovb
push
hlt
add
into
jo
xchg
ljmp
or
mov
or
or
cmpl
es
mov
mov
inc
pop
popf
fwait
mov
dec
xchg
or
int3
in
int
push
imul
andl
rcrl
sub
cmp
dec
sbb
xchg
insl
dec
pop
jbe
fwait
mov
push
dec
pop
in
data16
adc
dec
lods
pushf
into
cli
popf
sub
push
popf
int3
pop
pop
test
fst
xchg
je
mov
mov
jno
xchg
jns
ficoml
aas
cmpsb
xor
lahf
in
jp
neg
mov
mov
sbb
jg
fdivs
psllq
js
ret
mov
pop
cwtl
pusha
dec
xchg
inc
aaa
call
xchg
pop
xor
pop
add
iret
cltd
adc
call
adc
rcr
dec
mov
xor
lock
lods
lret
daa
ds
add
scas
sbb
das
push
xchg
gs
arpl
xorl
jb
pusha
frstor
dec
rclb
xor
cmp
sub
insb
jmp
or
outsl
cmp
adc
cmp
mov
jnp
insl
or
lods
movsl
jno
add
dec
scas
ds
push
mov
and
xor
sbb
test
sub
push
out
add
ss
jns
adc
popa
mov
daa
mov
stos
xlat
dec
mov
bnd
mov
push
in
adc
ret
rolb
dec
int
add
xchg
mov
adc
movsb
mov
movsb
lods
and
pop
cmp
popa
outsb
ljmp
rclb
icebp
mov
cmp
lcall
jo
add
or
out
loopne
sbb
dec
mov
cmpsb
lds
xor
pop
fcomi
lret
cmpsl
adc
xchg
add
stc
xchg
jmp
cmp
lret
pop
ret
inc
push
test
insl
fisubrl
fdiv
push
push
cmp
cltd
scas
mov
mov
shrl
mov
data16
cmp
cmp
es
sub
in
xor
cmp
je
sbb
mov
adc
ja
push
mov
inc
pop
sbb
xchg
js
sbb
xchg
pop
xchg
sub
outsl
pop
mov
xchg
or
mov
dec
das
cmp
icebp
or
jle
popa
or
mov
aad
into
out
insl
jne
mov
lock
and
xchg
pop
neg
fstps
mov
push
sub
add
xchg
mov
out
jge
clc
inc
sarb
inc
adc
rcrb
shll
mov
sub
insb
jb
push
cmp
cld
ret
sub
sub
jno
gs
cmp
fwait
mov
cmc
loop
and
push
jmp
pop
mov
fidivrs
mov
sbb
xchg
aaa
push
pop
ror
incl
lods
pop
mov
jecxz
cmc
dec
imul
stc
in
mov
mov
xlat
in
inc
in
lds
test
xlat
pop
adc
daa
insl
roll
adc
and
add
pop
mov
sbb
call
lds
pop
fbld
xor
xchg
or
xchg
add
jp
rcl
cwtl
addr16
mov
pop
sbb
insb
les
or
dec
xchg
cmpsl
or
sbb
ss
pusha
mov
ss
inc
repz
push
int
dec
and
jg
mov
jb
pop
insb
pushf
xor
cli
jne
push
in
fdiv
jo
lahf
pop
mov
js
nop
test
fdivrl
lods
fistpl
sub
jae
femms
sbb
xchg
sti
inc
insb
int
inc
xor
pop
cmp
pop
out
cmp
stos
scas
sbb
loopne
test
inc
repnz
jmp
push
loop
mov
jp
push
adc
jne
mov
jl
sbb
pop
sbb
mull
outsb
scas
lock
lret
xor
test
mov
jo
push
xor
shl
and
jg
popa
jecxz
inc
push
enter
pop
in
ret
mov
fmul
jo
insl
add
scas
mov
test
stos
repz
jp
jp
mov
std
bound
cmp
or
xor
sub
ret
sbb
mov
push
and
mov
movsl
pmuludq
repz
add
lods
sahf
ss
cmp
push
call
outsl
aam
sti
dec
cmpsb
or
mov
sbb
adc
lds
add
or
lret
inc
jno
mov
mov
test
mull
pop
jmp
js
ss
mov
xchg
add
xor
test
push
sub
inc
in
sbb
lock
sahf
shlb
fnstcw
gs
sbb
mov
das
frstor
pop
imul
imull
xchg
repnz
add
adc
and
cwtl
or
push
xor
pusha
loope
push
fsubs
ds
mov
inc
es
push
dec
inc
fsubr
push
mov
popa
push
aam
xorb
movsb
icebp
int3
cmp
xchg
out
lods
push
mov
jmp
jo
mov
push
inc
popf
jecxz
incb
cmp
xor
imul
push
out
lock
jge
inc
aas
fidivrl
loopne
push
test
or
sti
mov
es
inc
pushf
xchg
or
inc
lret
fnsave
mov
out
jo
xor
lock
cltd
or
xchg
js
mov
addr16
dec
sub
into
ror
inc
into
inc
inc
xor
and
lahf
pop
iret
pop
and
mov
popa
inc
mov
out
fmull
jp
stc
repnz
and
push
repnz
nop
lret
push
bound
push
int
jg
imul
out
bound
pop
or
out
notb
pop
jno
rcrb
outsl
cli
leave
pop
aaa
das
or
test
jno
fcmovbe
sbb
xor
pushf
push
cs
cmpl
pop
adc
cmp
lret
mov
out
inc
xor
imul
fbstp
scas
test
mov
and
int3
inc
rorb
push
ret
call
mov
adc
loope
jae,pt
inc
cmp
lock
pop
adcl
or
lods
mov
mov
data16
int3
sbb
cs
cmpsl
pop
sub
dec
dec
aad
subl
pop
xor
dec
push
adc
jnp
push
repnz
icebp
push
pop
loopne
xorl
imul
sbb
mov
mov
sub
cmc
subl
out
xchg
push
int
mov
idivl
icebp
rcrb
lods
mov
jp,pn
mov
bound
and
fs
faddl
inc
out
cli
cmpsl
push
cmpsb
mov
out
jg
mov
into
mov
inc
jo
imul
popl
push
sub
push
sub
and
testb
dec
mov
lret
mov
mov
mov
js
and
cmp
mov
out
jle
mov
push
add
outsb
sub
stos
in
mov
ljmp
outsl
dec
mov
insb
xchg
add
cltd
ret
fs
push
out
imul
add
cmp
movsl
mov
or
adc
orl
or
xor
xchg
jle
xor
xchg
outsb
cmp
inc
and
cmp
and
test
cli
mov
mov
lahf
jnp
pop
push
jae
dec
push
shl
cmpsl
movsl
pop
fdivrl
sbb
lods
pop
pop
cli
movb
and
pop
clc
sbb
mov
xor
nop
nop
push
in
cli
lods
jno
scas
xchg
cmp
dec
rcrb
pusha
adc
imul
call
ret
pop
out
xchg
push
imulb
mov
vmovdqa
jl
test
movsl
push
mov
mov
inc
jmp
dec
jnp
push
lods
lods
ret
lds
movsb
sti
out
mov
imul
jmp
arpl
and
add
aam
jecxz
ljmp
pop
cmp
cmpsb
pop
push
in
imul
and
lahf
pop
cmp
xchg
sub
xchg
aaa
fisubl
cli
pop
movb
mov
push
mov
push
in
pop
repnz
cwtl
adc
sub
jmp
dec
pop
dec
jecxz
cli
cli
lahf
fcmovnb
scas
lret
jecxz
ror
ja
mov
out
fcoms
add
rcrb
jl
push
sbb
shrb
pop
jg
ror
and
mov
jle
pop
mov
dec
scas
or
lret
or
lcall
xchg
mov
mov
dec
aad
mov
mov
pop
loopne
fidivl
push
int
rol
inc
pop
imul
jmp
cs
sub
mov
xchg
mov
ret
mov
or
jge
cmp
scas
clc
or
jecxz
add
push
add
adc
xchg
pop
mov
rcll
cmp
in
inc
fistl
push
xor
jb
inc
push
pop
and
jp
pop
mov
xor
in
push
jne
mov
test
xchg
nop
sbb
push
mov
into
xlat
pop
jne
cmp
add
adc
repz
push
imul
xchg
in
inc
sbb
pop
sbb
addr16
pop
push
scas
add
sbb
pop
insl
xchg
mov
in
mov
mov
xor
pop
popw
and
in
cmp
push
imul
test
dec
enter
cld
xlat
mov
stos
leave
lahf
ja
arpl
xchg
gs
and
sahf
ja
data16
in
push
cmp
fwait
out
mov
xchg
clc
lods
and
xchg
push
mov
mov
int
lcall
stos
jne
movntps
xor
ret
shll
jl
pop
add
ljmp
loop
add
daa
mov
test
add
xchg
pop
pop
data16
sbb
in
push
into
sbb
mov
add
mov
xchg
push
iret
pop
shl
jae
cmp
cltd
stos
xchg
pop
arpl
push
aad
jnp
xor
fdivrs
data16
ljmp
dec
fsubl
out
add
mov
cs
fildll
xchg
insb
sub
mov
xor
iret
adc
scas
loope
and
fistpl
fcmovu
jecxz
fidivrl
push
jle
sti
cwtl
cwtl
fdivs
bound
jnp
mov
dec
xchg
test
test
adc
loope
mov
cmc
stc
or
aas
mov
jecxz
fcomp
cmp
loop
push
mov
pop
pop
add
mov
rclb
mov
into
lds
push
test
mov
sarb
sub
inc
dec
sbb
addr16
popf
mov
add
ret
hlt
and
cli
mov
lods
insl
xor
data16
mov
pop
or
rcll
mov
fsub
xchg
or
sub
pop
pop
addl
or
dec
mov
idivb
inc
negl
xchg
or
lahf
iret
cmp
ret
mov
cwtl
jb
roll
push
jecxz
cwtl
mov
fbstp
cmp
shrb
mov
lea
lods
inc
inc
stc
dec
std
lock
aad
or
cld
ja
pop
and
and
and
pop
xchg
jbe
dec
add
jl
insl
inc
or
add
outsb
in
lahf
cmp
jnp
add
xor
ss
mov
test
scas
cwtl
scas
mov
ja
aad
sahf
xchg
add
mov
js
jecxz
xchg
in
fnstenv
or
sub
xchg
jo
cmp
ss
outsl
add
or
je
aad
inc
mov
outsb
scas
add
jno
sub
fisttpll
decb
push
push
imull
mov
jmp
sub
inc
nop
outsb
std
mov
ljmp
or
inc
push
movsl
loop
mov
pop
ds
sub
push
stos
leave
icebp
adc
iret
dec
adc
push
xchg
xchg
repz
roll
push
into
xor
ds
sub
aad
jbe
ss
mov
mov
fstl
lcall
mov
aaa
and
xor
sub
inc
dec
stos
push
mov
xor
test
rorl
int
dec
cmp
xor
daa
mov
fcoms
rclb
mov
mov
ljmp
insl
xchg
cmc
in
enter
jge
fcmove
or
pop
lcall
xchg
stc
test
jb
cmpsl
pop
and
cmp
jbe
xor
ljmp
xor
adc
sbb
or
xchg
stos
int
out
and
mov
rclb
test
in
shll
ljmp
push
shrl
cmp
xchg
mov
adc
frstor
ficoml
or
adc
sbb
mov
call
pop
jb
adc
rolb
pop
test
add
sbb
stc
shrl
in
mov
and
push
int3
sub
pop
push
mov
aas
cmp
sbb
into
lret
lock
xor
scas
dec
push
sbb
sbb
or
ficoms
jo
adc
js
cmp
push
mov
xchg
loopne
adc
push
or
out
or
cmpsb
push
xchg
roll
mov
push
cld
sbb
cld
jno
jle
jmp
sahf
mov
xchg
sub
add
adc
out
testb
ja
and
xor
push
inc
or
sbb
inc
mov
xchg
fs
cmc
mov
cmp
sub
ss
pop
testl
pop
aaa
mov
and
cwtl
dec
int3
stos
aam
in
icebp
jae
mov
adc
xor
xor
lods
repz
cmp
roll
test
sub
gs
lds
and
inc
jle
mulb
lods
loopne
in
mov
adc
in
add
xor
fadds
test
mov
out
cli
adc
nop
test
insw
jl
je
test
shll
outsb
jne
mov
inc
jle
jmp
out
out
out
adc
fdivrs
int3
repnz
stc
mov
jns
pop
int3
dec
add
push
icebp
loopne
out
pop
inc
xlat
stc
jo
cld
mov
in
push
xor
mov
lods
aaa
repz
cmpsb
sbb
mov
pusha
fnstenv
loope
xorb
add
fldcw
xor
jmp
dec
push
out
push
out
cs
scas
adc
lret
jb
cli
int3
sbb
xor
adc
cmc
cmp
stc
neg
and
pop
jecxz
mov
mov
fs
add
mov
aad
jno,pn
dec
or
mov
movsb
faddl
dec
pop
cmpsb
push
and
push
je
mov
scas
sub
shrl
ja
push
pop
pop
add
mov
negb
or
imul
stos
sbb
push
sarl
sti
orl
mov
pop
jg
push
out
sub
movl
insb
xchg
into
popa
daa
fwait
mov
fcoml
in
sub
bnd
push
repnz
lods
test
xor
jecxz
sbb
jmp
pop
test
dec
sbb
ss
mov
mov
mov
mov
into
out
cmp
daa
outsb
leave
fiadds
or
pop
xor
cmp
push
sub
imul
sti
das
mov
jp
pop
push
loop
aas
mov
xchg
lods
push
push
hlt
xchg
lea
sbb
jle
xor
cwtl
and
clc
jg
push
pop
adc
in
mov
push
sbb
jge
adc
stc
jnp
xor
mov
jno
sub
scas
push
mov
ss
sahf
jecxz
cmp
and
ljmp
ficompl
sahf
pusha
inc
bound
in
into
mov
and
mov
add
adc
cmc
mov
fldenv
push
outsl
rorb
lahf
mov
mov
jne
mov
push
mov
in
push
sbb
data16
mov
fdivrl
and
push
xor
es
js
std
stc
shlb
xor
and
insb
into
fwait
cld
jge
jne
ds
pushf
cwtl
into
adc
popa
scas
out
rcl
adc
and
addl
jo
loope
clc
xorl
push
stos
and
std
mov
mov
ds
adc
repnz
pop
or
sbb
scas
pop
adc
insb
push
gs
lret
sti
xor
lea
adc
dec
adc
clc
scas
xor
cld
incb
sub
xchg
out
adc
cli
testb
out
mov
test
mov
push
pushf
out
jb
inc
sub
mov
push
cmp
movsb
add
jg
mov
dec
cmp
push
mov
pop
xchg
repz
push
in
adc
aaa
jno
ss
jne
insb
ljmp
jmp
mov
cmpsl
or
movb
je
test
insl
mov
arpl
push
add
push
sbbl
int3
faddl
xchg
jo
std
std
or
mov
push
xor
mov
insl
xor
fldl
mov
ss
add
pusha
icebp
xchg
aas
add
mov
subb
es
jbe,pn
in
shrl
inc
stos
outsl
sbb
pop
outsb
popl
pop
push
sub
mov
ret
xor
jo
mov
pop
daa
mov
clc
sub
mov
add
inc
out
jle
ja
sbb
pop
mov
arpl
cwtl
push
adc
in
and
call
gs
cltd
cmpsb
xor
sbb
pusha
inc
mov
fisttpll
addb
cmp
in
pop
dec
or
push
jb
lcall
lahf
mov
jno
jge
dec
xchg
es
xorl
sbb
mov
add
push
cmp
sub
sbb
sbb
movsb
imul
inc
iret
fdivs
push
loope
repnz
sti
mov
and
inc
and
inc
mov
push
dec
pop
or
and
add
lds
sub
dec
pop
lret
daa
test
xor
jle
pop
cmp
pop
pop
add
mov
sbb
pop
stc
jl
out
or
xor
out
fs
mov
push
cmp
and
dec
mov
jbe
xchg
add
or
and
xchg
inc
or
mov
sbb
mov
sub
lret
lock
sub
imul
add
xor
cmp
xor
bound
xchg
inc
dec
push
mov
mov
dec
jmp
push
cld
leave
xor
test
dec
mov
pop
or
fs
divb
or
jecxz
mov
push
push
push
call
inc
xchg
leave
mov
sub
push
xchg
clc
mov
add
xor
and
jg
test
xchg
and
cmp
mov
enter
mov
gs
mov
into
pop
push
dec
insb
sbb
xchg
jg
outsb
cmpsl
adc
int
dec
fisubl
out
es
push
lods
jp
rorl
hlt
movsl
fneni(8087
cld
sbb
fs
scas
into
and
adc
dec
ds
mov
push
daa
shll
addr16
xor
or
push
imul
cli
adc
hlt
test
mov
scas
mov
sbb
mov
sub
jnp
push
jge
inc
fstps
mov
ret
divb
ffree
xor
aam
push
in
mov
outsb
rorb
stos
cld
mov
mov
mov
add
mul
sahf
xor
adc
lcall
jo
inc
xchg
jne
in
imul
ret
popa
roll
dec
or
push
mov
xor
out
inc
push
mov
xor
add
lcall
jmp
bound
movl
cmp
pop
mov
mov
adcb
xlat
mov
jnp
push
mov
push
push
nop
decb
dec
jne
ret
in
push
cmp
sar
in
cmp
mov
pop
sub
jg
pop
adc
adc
push
divl
xchg
mov
lret
pusha
dec
pop
add
inc
xchg
ret
ret
mov
jno
add
bound
nop
jae
push
test
rol
fs
out
in
out
outsl
stos
cltd
push
push
fsubrl
xchg
xor
movsb
xchg
xor
icebp
jb
test
bound
sub
mov
mov
lea
jnp
cld
pop
mov
loopne
out
lds
addl
daa
xchg
int3
push
outsl
lods
insb
mov
mov
cmp
mov
inc
inc
cmp
std
clc
loope
add
push
pop
xchg
add
add
out
filds
or
ret
ror
iret
out
sahf
sbb
dec
adc
push
sbb
sbb
cmp
ja
inc
mov
xchg
mov
xor
sub
pop
gs
popf
add
cmpsb
scas
mov
and
xor
outsl
mov
sbb
xor
jns
shlb
xchg
push
cmpsl
lds
mov
sub
push
cli
mov
cmp
mov
adc
and
sbb
sahf
xchg
fs
adc
push
push
mov
or
fidivrs
ss
bound
add
xor
test
loopne
mov
stos
mov
add
lods
push
cmp
inc
shrb
xor
sub
mov
or
jge
incb
jp
iret
fistpl
pop
cmc
add
dec
lods
add
and
xchg
lds
cld
test
or
test
add
pop
jns
mov
cli
dec
push
mov
into
mov
mov
inc
loopne
inc
dec
int3
adc
sub
ljmp
sarb
cs
pop
outsb
inc
ja
sbb
fwait
pop
outsl
sahf
xchg
add
mov
dec
push
rcrb
out
xchg
sbbb
xor
test
mov
adc
je
and
fdivs
push
or
adc
jno
cld
pop
loope
jge
sbb
dec
xchg
sbbb
mov
ljmp
ds
in
leave
lret
jnp
pushf
cwtl
fwait
shlb
jne
jae
stos
rclb
movb
mov
cld
cwtl
test
dec
es
xchg
call
movsb
imul
mov
xchg
adc
xchg
call
inc
cli
int
leave
jae
jnp
mov
push
stos
mov
icebp
adc
pusha
add
in
loope
lods
rcrb
cmp
rclb
or
cltd
pop
mov
das
dec
test
cs
shl
test
arpl
cli
enter
fwait
xor
xchg
sub
xchg
jo
lds
jmp
mov
push
sub
shll
push
dec
mov
div
and
lock
shrl
pop
les
sbb
push
arpl
es
fs
in
fdivs
aaa
or
ljmp
add
mov
nop
add
ja
pop
fcomps
jb
ljmp
daa
data16
pop
je
and
pusha
mov
gs
hlt
leave
cmp
repnz
xorb
xchg
je
icebp
xor
imul
fisttpll
mov
popa
fiadds
or
jmp
push
cmp
sub
lcall
pop
sub
mov
insl
test
dec
fcoms
in
stc
sbb
or
pop
mov
test
rolb
mov
in
mov
push
rolb
sub
push
addb
loopne,pn
sbb
mov
jns
pushf
adc
jecxz
pushl
out
shrl
xchg
xchg
mov
insl
xchg
outsb
test
pusha
mov
cld
aad
and
inc
mov
xchg
test
fcoml
shll
outsl
loop
cmp
or
or
addr16
in
inc
pminsw
xlat
mov
xor
mov
jmp
mov
dec
pop
leave
fcmovbe
cmp
inc
sbb
repz
inc
jb
fcom
add
in
mov
pop
imul
mov
cmp
xchg
lahf
mov
adc
or
xchg
and
add
inc
jmp
movl
pop
dec
xlat
cmp
inc
shrl
mov
loopne
loop
xchg
test
pushf
lods
daa
push
imul
jno
lahf
pop
mov
scas
mov
in
fmuls
xchg
fs
loopne
sbb
ljmp
loopne
xor
inc
jle
sbb
pop
outsb
ficomps
nop
pop
imul
xor
mov
xchg
addb
xlat
jbe
in
jecxz
sbb
iret
testb
xchg
in
cmpsl
inc
mov
dec
subb
sbb
lea
xchg
jmp
ja
pop
or
outsl
out
sub
jl
and
in
inc
fldcw
in
xorl
sarl
insl
repz
pop
push
notb
mov
push
sbb
lret
xor
ret
inc
push
rol
insl
push
xlat
mov
sbb
outsl
sub
adc
mov
push
daa
mov
xor
push
iret
in
rorl
into
push
push
fisttpl
push
cmpsb
stc
fcoml
push
add
add
or
and
push
fisttpll
sbb
add
repnz
fldt
inc
xor
mov
push
das
imul
inc
test
cwtl
mov
mov
stc
fnop
es
fisubs
or
arpl
jns
in
lret
mov
out
pop
push
mov
xchg
lods
xchg
mov
fidivrl
xlat
frstor
popf
fst
test
fisttpl
in
jge
jo
or
pop
or
fisubrs
adc
and
int3
or
clc
cwtl
cmp
and
add
sbb
mov
and
sahf
lock
jno
ljmp
aam
rclb
jle
out
pop
add
push
xchg
orb
mov
je
mov
add
out
xchg
sar
and
cmpsl
mov
push
xor
adc
stos
test
xchg
mov
cmc
jns
sub
jae
or
mov
cli
cmp
push
xchg
cmc
std
xlat
push
loope
es
dec
jle
mov
sbb
cmp
push
jle
mov
mov
aas
inc
jnp
xchg
jo
xchg
or
mov
jns
aas
xrelease
in
scas
jae
insb
loopne
es
cmp
dec
je
popf
in
mov
pop
fmuls
in
add
inc
out
jb
es
add
dec
dec
loop
test
les
rolb
outsl
in
mov
mov
roll
mov
aam
rorl
cmp
movsl
into
or
fcoml
pop
xchg
aas
outsl
add
icebp
fs
cmc
fnsave
mov
cwtl
dec
sub
divl
and
mov
call
cmc
enter
cmp
in
ret
stos
xor
adc
and
je
popl
mov
cmpxchg
lcall
pop
sbb
sahf
pop
adc
pushf
ffreep
push
dec
fs
stos
pop
out
mov
aaa
notl
cmp
call
test
or
rcll
mov
dec
loop
hlt
pop
daa
mov
push
push
inc
adc
jnp
jmp
fdivrp
int3
push
mov
in
mov
shl
mov
scas
sub
int
push
push
insl
and
jbe
movsb
in
ret
mov
icebp
or
into
and
and
xor
xor
mov
adc
dec
sbb
fadds
xor
bound
sbb
push
cmp
sbb
sahf
in
movl
cmpsb
adc
mov
lds
push
fistps
test
lods
out
lret
pop
adc
lock
xchg
mov
cmc
outsb
push
xor
lcall
adc
dec
fldenv
lods
addr16
nop
movsl
cmp
mov
push
dec
dec
pop
adc
daa
sub
stos
and
divb
arpl
pushf
xlat
or
push
push
lea
enter
mov
cmp
out
popf
mov
adc
pop
movsl
and
iret
xor
mov
out
ror
addr16
mov
cmp
fwait
das
inc
mov
mov
sar
test
pop
adc
sbb
call
mov
int
out
jmp
in
je
and
mov
pop
jnp
inc
add
divl
hlt
add
mov
loope
sub
push
cs
mov
test
in
mov
pop
push
stos
test
jae
adc
rol
in
mov
add
jbe
or
sbb
outsb
stc
ss
test
dec
test
and
cmp
ss
adc
jmp
push
jl
mov
sarl
push
pop
scas
push
ljmp
cmp
or
movsb
adc
xlat
mov
jge
pop
inc
add
mov
cltd
add
lret
cmp
mov
xor
and
das
lods
mov
xchg
mov
pop
push
or
rorl
and
lcall
jo
and
leave
mov
jns
add
mov
outsl
jle
repz
mov
lods
ja
js
dec
sub
arpl
loope
das
scas
loopne
jge
xor
leave
cmp
push
cmp
insb
push
ret
or
mov
flds
fwait
mov
jg
mov
insl
jp
aam
ret
fidivs
cmp
xlat
insb
mov
clc
mov
test
cltd
jo
daa
repz
into
imul
repnz
clc
mov
cmc
add
mov
pop
jnp
mov
scas
cltd
sbb
cmp
movsl
or
and
cmp
jns
pop
std
aad
and
mov
or
xor
clc
jle
lods
mov
sti
cmp
jge
movl
adc
int3
adc
pop
xchg
push
movsl
sub
or
int3
jns
push
and
test
in
bound
repz
roll
adc
loop
fnstenv
xchg
cld
pusha
fxtract
cmp
lds
pop
mov
loope
es
leave
jge
fwait
loope
sub
outsb
inc
dec
arpl
data16
xchg
cltd
xchg
test
push
aaa
rorl
orl
dec
dec
xlat
mov
push
lods
dec
push
and
sbb
dec
and
adc
add
mov
mov
call
push
jl
orl
lcall
ja
lahf
cmp
mov
cli
inc
sub
sbb
ja
add
pop
mov
push
inc
ret
arpl
adc
in
jmp
ror
jl
push
xchg
jno
and
dec
push
push
mulb
jp
lret
xchg
mov
negb
pop
lahf
nop
cmpsb
lds
bt
dec
cmp
imul
adc
mov
cmp
imul
xchg
js
fwait
addb
imul
mov
mov
xor
inc
je
into
lock
xchg
mov
cmp
rcrb
push
data16
pop
les
cmp
popf
insl
hlt
sbb
push
cwtl
rcr
inc
xorl
cmp
pop
pusha
mov
sbb
cmp
or
std
push
inc
sbb
push
dec
movsb
into
push
xchg
in
fidivrs
add
push
clc
movsl
ljmp
iret
or
pop
xchg
fs
lock
data16
sbb
xorl
sti
mov
sbb
or
sub
das
dec
divb
test
mov
xor
jle
jmp
lock
aad
dec
push
rcrb
mov
jecxz
jp
inc
outsb
jecxz
out
jns
test
cmp
andb
in
jne
adc
sub
or
adc
movsl
mov
sbb
movsb
ja
sbb
fsubrl
mov
xor
outsl
shrl
push
mov
cmp
or
outsl
mov
pop
cmp
pop
fidivs
les
mov
sub
notb
push
push
adc
push
push
fcomps
jae
jg
jecxz
fstl
call
mov
mov
xor
repz
loop
test
xchg
scas
jle
inc
inc
fs
ret
sub
push
fwait
mov
sbb
in
cs
aad
mov
fcomps
adc
fadds
shrb
jne
jbe
push
shlb
movsb
or
shlb
cltd
jg
jno
pop
dec
lods
xor
and
adc
shl
arpl
out
push
fnstcw
xlat
outsl
add
ret
push
xor
loope
test
call
xchg
lea
dec
push
jbe
xor
pop
fs
and
xchg
stc
fsubr
mov
nop
adc
mov
dec
fsin
adc
mov
cwtl
std
sbb
lock
sbb
loope
popa
sub
ret
add
test
mov
pushf
and
fs
add
jbe
push
in
add
loop
inc
imul
add
xor
xchg
cmp
xchg
jle
inc
loopne
push
outsb
lock
ret
xor
xor
dec
mov
mov
adc
adc
mov
push
nop
aas
mov
cmp
fcoml
dec
sub
xchg
add
push
sub
fiadds
sbb
lcall
lcall
mov
mov
lahf
sub
mov
cwtl
and
mov
in
cmp
add
rclb
jle
or
mov
inc
pop
mov
int3
rcrl
sarb
mov
les
rcrb
cmpsl
pop
jnp
pop
push
repnz
mov
mov
int3
push
test
push
mov
mov
call
mov
das
ror
pop
mov
cmpsb
or
insl
xchg
push
mov
mov
pop
xlat
daa
mov
scas
scas
pop
push
movsb
inc
push
sbb
mov
mov
in
jbe
jb
jecxz
sbb
fnstcw
shll
mov
adc
or
jmp
xchg
and
xchg
js
xchg
mov
out
das
cmp
fistl
mov
push
jge
jge
hlt
xchg
pushf
push
test
test
push
push
sub
inc
loopne
inc
addb
ds
hlt
mov
or
out
into
mov
mov
aad
jg
and
xor
lahf
mov
or
add
pop
je
dec
jmp
or
and
mov
lea
clc
dec
adc
stos
push
xor
jbe
out
movsb
stos
push
cmp
orb
add
mov
ret
test
enter
test
arpl
repnz
adc
jp
sub
pop
cmc
mov
jl
sub
mov
inc
loope
sub
mov
jle
mov
pusha
dec
pop
mov
add
popa
cld
insb
cmp
mov
repnz
lods
das
lea
xchg
movsl
xor
mov
dec
adcl
rolb
pop
jne
push
xor
decl
in
dec
mov
outsb
clc
pop
cmc
jle
or
and
cmp
fidivrl
imul
pop
adc
int3
hlt
pop
xchg
cmpsb
sar
cmp
sbb
mov
jmp
pop
jne
int
cmp
ja
and
jecxz
aad
xor
mov
inc
jns
shrb
jge
lock
fisubs
push
cmc
sub
sbbb
out
pushl
inc
push
clc
sub
ds
popf
movsb
cs
sbb
fsubs
imul
clc
popf
stc
call
daa
xchg
adc
fldenv
ret
gs
test
in
into
popa
xchg
jnp
adc
jl
xchg
fadds
add
push
mov
repz
fucomip
jbe
test
cltd
in
add
xor
mov
js
pop
jne
xchg
imul
mov
dec
xor
inc
ret
adc
adc
rorb
mov
pushf
out
movsb
icebp
mov
leave
xchg
cmp
pushf
sbb
das
rclb
ret
std
xlat
scas
and
push
sub
cli
les
cmc
scas
imul
inc
je
and
lds
mov
jl
loopne
or
adc
sarl
shrl
nop
cmc
loopne
pusha
xor
sub
enter
insb
xchg
mov
cld
jno
mov
pop
divps
shlb
shrb
pop
or
fwait
mov
add
mov
or
imul
addb
dec
je
sub
jmp
movsb
mov
mov
jl
sub
mov
mov
adc
jns
arpl
popa
inc
xor
out
mov
pop
cmp
je
mov
push
cmp
mov
pop
inc
adc
scas
leave
sbb
out
decl
mov
jnp
mov
mov
cwtl
push
lea
add
pop
jge
adc
loopne
cmp
jge
jb
sbb
bound
mov
stc
inc
mov
pop
jge
mov
int3
jne
jmp
or
popa
xchg
mov
xor
imul
xchg
test
out
js
imul
cmp
jbe
cltd
enter
lock
lret
mov
movl
push
test
loopne
inc
push
mov
xor
dec
jmp
outsb
pushf
mov
mov
push
mov
shll
xor
mov
jmp
movsl
pusha
fistpl
sub
mov
shr
dec
movsb
pop
xchg
add
lods
pop
cmp
dec
aam
push
int3
adc
loopne
int3
bound
sub
inc
mov
test
into
into
out
pop
shlb
movsl
mov
fsubrl
push
lods
stc
lret
call
adc
adc
xchg
pop
call
mov
stos
xlat
and
inc
and
push
jge
and
or
jl
decb
jo
lret
lahf
ja
push
test
and
cmp
or
jae
loopne
into
sub
call
mov
add
dec
fwait
jle
rorl
test
dec
dec
ror
fsubp
jle
jno
stos
xchg
or
jnp
sub
add
pop
lea
push
add
int3
sarl
mov
popf
lahf
dec
iret
mov
fstps
fcoms
mov
xchg
dec
les
xchg
jl
pop
inc
cmp
syscall
adc
popa
popa
sbb
mov
mov
loope
sti
loopne
sahf
leave
xor
rclb
adc
pop
or
jmp
fs
jno
or
imul
adc
rorb
sbb
movsb
gs
lret
cltd
mov
test
je
xchg
int3
jecxz
loope
dec
movsl
push
sub
push
inc
sub
imul
mov
xchg
pop
loope
cmp
movsl
mov
sub
aas
shl
push
add
js
adc
sbb
stos
lods
cmc
das
mov
sub
repz
pop
stos
movsl
mov
test
inc
shrl
jle
punpckhwd
nop
gs
loope
sbb
and
xor
xor
aaa
test
les
cmc
mov
fwait
cmp
inc
push
lcall
mov
out
imul
jo
inc
fcomps
es
jne
cmc
daa
adc
int3
hlt
clc
mov
ds
jno
jbe
neg
cmp
aad
test
xchg
aad
cmp
xor
fidivrs
xchg
mov
icebp
sbb
sub
es
mov
adc
cmpsb
fstps
loope
pushf
lret
mov
cli
movsl
jb
push
loop
icebp
movsl
lea
sahf
cli
cld
xor
push
adc
imul
jp
lock
sbb
push
push
loopne
test
out
fidivs
and
sub
mov
sbb
stos
add
int3
mov
scas
in
inc
gs
xor
adc
and
inc
out
mov
push
lods
data16
std
aaa
in
fidivrs
mov
lods
testb
aam
adc
je
mov
push
add
jg
mov
mov
test
mov
push
inc
fisttpl
je
sub
push
xchg
push
je
jle
call
imulb
lcall
sarb
inc
dec
or
push
xchg
aaa
clc
test
ret
mov
jb
std
mov
imul
cmc
mov
push
lahf
lret
push
rsqrtss
and
cmp
imul
mov
push
or
fwait
out
loope
pop
dec
pushf
repz
stos
sub
inc
add
jecxz
lahf
xchg
jl
xchg
sbb
mov
xchg
push
lods
xchg
jae
ret
jl
adc
sub
lcall
sbb
sub
push
aam
movsb
stos
xchg
test
pop
pop
push
mov
aas
fmuls
les
mov
cli
es
imul
adc
sbb
push
add
xor
clc
aas
xchg
xchg
lock
sti
icebp
push
add
ret
jb
data16
jmp
dec
cltd
fdivs
and
cmp
or
mov
sbb
lea
mov
movsl
or
jecxz
inc
sub
jmp
addl
mov
jecxz,pn
or
adcb
inc
shll
cmc
jb
push
mov
ds
inc
jmp
jb
fcmovu
push
pop
adc
and
pop
jp
cs
push
cmpsb
pop
testl
icebp
and
mov
jno
sbbl
xorb
xor
negb
scas
push
rcl
andl
lods
rcrb
xchg
xlat
nop
rorl
ret
xlat
repz
ficoms
iret
mov
lock
outsb
jne
div
into
icebp
mov
xor
dec
sub
outsb
ljmp
sar
stos
adc
pop
xorb
mov
scas
xchg
inc
out
pusha
push
mov
add
cmp
andb
sub
add
inc
fistl
das
mov
roll
fadds
aaa
aad
pop
cmovg
mov
js
inc
inc
mov
js
mov
xor
fucomi
add
jno
loopne
mov
sbb
std
into
mov
jb
jg
leave
enter
inc
xor
mov
push
test
or
or
mov
insb
or
mov
xor
outsl
lds
es
stos
lret
fwait
add
stc
ds
push
cmpsl
fs
aas
ret
xchg
popa
inc
and
and
mov
xchg
lds
enter
jle
jbe
jecxz
sbb
jp
std
das
std
aad
push
mov
jle
mov
pop
mov
cmc
cmp
xor
out
popa
shll
or
adc
push
push
sub
in
aaa
fiadds
rcrl
mov
daa
push
jo
adc
xorb
pop
pop
or
pop
sbb
pop
push
movsl
pop
mov
nop
dec
mov
cld
xor
or
mov
push
sbb
aam
push
test
shlb
dec
push
sub
popa
addr16
pusha
xchg
aas
sti
sahf
imul
xor
dec
loopne
jb
and
mov
xor
rorl
out
fxam
jnp
in
mov
jo
ret
rolb
enter
mov
pop
or
add
incb
int
push
je
sahf
stos
mov
pop
ja
sub
lahf
mov
pop
or
inc
sub
cmpsb
push
lret
cmp
out
jo
dec
cltd
repnz
mov
mov
roll
lret
push
adc
stos
rclb
fnsave
dec
fwait
pop
mov
das
mov
mov
stc
sub
push
jb
mov
clc
or
stos
das
icebp
dec
mov
into
andl
fldenv
xchg
sbb
and
mov
dec
sbb
mov
aas
movsl
adc
sub
pop
popa
jne
rcl
sub
loope
pop
push
add
addr16
mov
jp
pop
dec
adc
fsubrs
jmp
es
jmp
icebp
sub
push
in
in
xchg
scas
push
jmp
lea
push
sub
je
jecxz
or
repz
jecxz
mov
sbb
insl
cs
dec
loope
xor
rorb
insb
lret
push
mov
cltd
push
dec
push
dec
mov
in
pop
xchg
cmp
mov
ret
in
cld
xor
fistpll
adc
xchg
adc
in
jnp
mov
mov
aaa
and
pop
cld
rclb
clc
add
dec
sahf
fs
mov
adc
icebp
lcall
mov
mov
inc
sbb
add
mov
adc
int
push
cmpsb
sbb
jle
push
xchg
dec
ret
ret
or
and
aas
push
cmpsl
jno
sbb
insl
add
and
pop
jmp
dec
insb
mov
mov
sbb
dec
xchg
xchg
mov
imul
sub
mov
jge
sbb
push
push
lds
push
sbbb
stos
cmp
pusha
lahf
push
daa
xlat
add
cld
stos
add
adc
movsl
dec
mov
and
stos
ss
sbb
in
in
std
ds
aaa
sbb
js
add
js
mov
push
sbb
in
scas
dec
aaa
mov
pop
pusha
fsubs
dec
and
inc
or
jecxz
mov
and
sub
cmp
xchg
mov
dec
lock
xlat
push
adc
push
sub
and
and
cmc
adcl
push
cmp
cli
stos
mov
or
xchg
loopne
pop
popa
nop
dec
push
push
push
out
or
push
fwait
pop
lret
clc
ret
iret
pop
ffree
fwait
out
imul
cld
pop
mov
pop
and
repz
popf
jb
or
push
add
pusha
jnp
or
les
not
sub
mov
hlt
rol
or
cli
mov
test
lods
fsubs
or
dec
or
fucomp
and
xchg
cmp
add
add
adc
int3
jns
int3
sub
fildll
test
adc
jb
push
fiadds
hlt
insl
push
sub
pop
icebp
mov
or
ficoms
jle
xchg
lret
pop
dec
xchg
cmp
js
or
in
push
loope
xchg
or
mov
test
es
adc
fs
push
das
pop
fstpl
cli
rorl
rcr
fldcw
in
rcl
out
push
mov
mov
push
dec
inc
and
fsubrl
adc
xchg
cmp
insb
stc
add
dec
cli
or
outsl
mov
xchg
jle
movl
pop
adc
sbb
add
mov
and
in
test
scas
mov
hlt
mov
pop
push
pop
pop
mov
mov
aaa
inc
ja
into
fwait
jle
jge
ljmp
and
ret
andb
mul
rorl
aas
in
cs
and
ficompl
add
outsb
sub
std
test
fwait
and
fbld
pop
fisttpll
mov
imul
movsl
xor
insl
mov
ja
movsl
test
adc
ljmp
xchg
movsb
xchg
xor
pushw
lahf
pop
cmp
adc
mov
jge
mov
in
rcrl
inc
fwait
xor
lcall
mov
jnp
or
cmpsb
outsb
jno
inc
dec
movsb
dec
ljmp
es
das
js
mov
cmp
iret
jne
loope
adcb
movsb
mov
add
in
and
insb
adc
mov
or
sbb
lock
xlat
in
or
test
shrb
jo
shr
stos
fsubrs
shrl
insl
cmp
aas
sub
push
rcrl
push
nop
lret
divb
fwait
add
hlt
push
and
xor
mov
loope
orb
add
cli
cmpsb
aas
cmp
out
cmp
cmp
cwtl
cs
jecxz
loopne
or
movsl
in
mov
mov
test
mov
adc
push
mov
jo
pop
jecxz
dec
jae
js
ljmp
push
insl
mov
sti
mov
andnps
call
pop
stos
lcall
sub
stos
pop
in
mov
adc
outsb
sti
cmp
and
std
sub
jae
jmp
sbb
jecxz
gs
jmp
xchg
int
adc
stos
in
movsl
push
movb
fninit
adc
hlt
mov
dec
mov
cmpsb
xchg
lret
rorb
sub
gs
in
ljmp
push
adc
sbb
sarl
cmpsl
out
rorb
shrl
jne
imul
xchg
popf
iret
pop
pop
icebp
rcrb
std
cmp
push
ficompl
mov
push
push
aad
test
xlat
pop
int
aaa
or
fdivrl
iret
adc
divl
fldcw
add
push
or
cmc
lret
push
stos
inc
push
daa
cld
adc
and
jmp
fcompl
repz
popf
or
lods
cmp
cli
jnp
ja
adc
sbb
dec
mov
dec
das
pop
pusha
jl
std
std
jecxz
push
leave
dec
call
mov
jb
inc
pop
cmc
inc
mov
and
es
loope
dec
test
jo
out
jle
or
dec
add
aas
push
js
jg
pop
adc
out
cmp
icebp
popf
decl
dec
add
mov
sahf
inc
arpl
ret
mov
scas
cmp
mov
ds
ss
mov
pop
arpl
gs
jno
hlt
shlb
mov
popl
cmp
cmp
ja
outsb
and
aad
jp
jmp
adc
sub
mov
shll
cld
sbb
push
rorl
add
adc
lcall
xlat
jmp
fmuls
popa
adc
xchg
sbb
shrb
rclb
xchg
pop
dec
flds
push
lcall
andb
insb
jb
testl
jl
or
jns
inc
push
jp
add
pop
pop
mov
test
sbb
fistpl
mov
or
fsub
and
sub
outsl
rorl
cmovns
sub
push
pop
sahf
lcall
aaa
addr16
rclb
repz
xchg
aaa
push
cld
les
mov
push
xor
mov
gs
dec
loope
pop
jmp
and
ret
sbbl
scas
addr16
sti
xor
arpl
add
mov
add
mov
arpl
ret
in
jecxz
mov
mov
mov
ss
mov
mov
out
pop
lock
icebp
js
push
daa
mov
pop
sub
xor
add
inc
movsl
loopne
jmp
adc
aaa
daa
pop
add
mov
out
fcmove
in
popf
xlat
iret
cmpsl
or
dec
pop
push
pop
lret
pop
arpl
add
int
mov
jle
sbb
push
mov
pop
sub
rorb
scas
pusha
shrb
cmp
movsb
and
fwait
mov
adc
pop
add
or
add
mov
xchg
xlat
inc
shlb
xchg
int
xchg
aad
inc
aaa
pop
loopne
push
jnp
rclb
popf
mov
xor
inc
push
cmpsl
inc
pop
sahf
lock
mov
mov
cmc
es
fistpll
pop
add
or
daa
test
sbb
dec
mov
pop
cmc
mov
dec
sbb
push
add
mov
mov
cmpsb
int3
rcrl
mov
and
jbe
lret
aas
fistpl
inc
sub
into
outsl
into
sub
sbb
pop
inc
xchg
cmp
jo
mov
xor
movsb
xlat
sub
in
pusha
push
loopne
jno
je
rorl
je
arpl
push
mov
cmpsl
push
mov
xlat
in
dec
cmp
cmp
xorb
aam
ret
xor
inc
jnp,pt
mov
xor
jno
aad
jbe
mov
and
std
outsl
jo
inc
iret
in
notl
jecxz
mov
ss
xor
lea
inc
dec
sbbb
jle
lds
nop
lret
mov
cmc
loopne
out
stos
add
pushf
imul
popa
and
mov
roll
gs
lods
std
push
or
jle
dec
adc
cmp
out
pushf
outsb
arpl
out
lcall
int3
or
jecxz
mov
pop
stc
ds
mov
fimuls
bound
hlt
mov
shlb
and
xchg
ret
popa
jg
int
push
push
inc
subb
or
jle
mov
repz
cmc
push
clc
int3
or
mov
push
pop
xchg
dec
and
call
xchg
fldcw
frstor
xchg
jmp
out
mov
rcl
jp
jecxz
in
and
and
add
shrb
outsl
push
adc
fldt
scas
or
clc
sbb
cmp
movsb
xchg
shll
loopne
sbb
push
test
mov
lds
testl
cmpsl
mov
push
pop
test
inc
push
fs
mov
fwait
jo
idivb
sbb
nop
xchg
or
cmp
sub
adc
sbb
cltd
mov
cwtl
das
iret
shlb
inc
sub
sbb
pop
pop
mov
pop
mov
daa
call
mov
xchg
mov
stos
arpl
mov
test
mov
repnz
mov
push
pushf
je
cmp
shll
push
orl
jmp
inc
pop
clc
sub
dec
int
loop
outsl
push
jg
cltd
rcrl
and
push
testb
and
xchg
jbe
dec
fwait
stos
jle
xchg
sbb
xchg
xchg
dec
cli
lcall
fidivl
push
sbb
jp
push
cmpsl
and
cmp
or
aas
mov
mov
mov
push
adc
jne
sbb
rcll
aas
nop
fisttpll
xor
cmpsb
push
outsl
jne,pt
sbb
jo
lahf
dec
outsl
orl
cmp
aam
jns
jmp
cvtps2pd
movsb
aas
cmp
adc
mov
cmp
xchg
adc
push
pushf
jo
faddp
negb
cmp
cmp
adc
fistps
cli
push
movsb
mov
lahf
xchg
push
adc
addr16
js
mul
and
sbb
in
icebp
bound
cmpsl
repnz
jge
or
sbb
arpl
pop
and
cmpsb
xor
xchg
push
lods
clc
sub
mov
repnz
loopne
fisubrs
jno
hlt
pop
mov
test
inc
sbb
jnp
out
push
clc
push
sbb
mov
out
or
aas
ret
repz
test
cli
ret
and
fstl
mov
outsb
mov
push
cmpsb
mov
pushf
cmc
mov
cmpl
mov
sti
int
shr
in
xchg
pushf
dec
enter
mov
xlat
push
xchg
int3
imul
ret
repz
push
push
pop
pop
mov
and
fwait
xor
dec
fwait
adc
fidivrl
mov
cmc
push
and
add
dec
cs
aaa
pop
outsb
into
jl
scas
daa
mov
fstps
clc
mov
stos
in
lods
imul
dec
xlat
push
orl
lds
cmp
dec
cmp
mov
sub
sbb
cmpsb
and
xor
adc
test
pop
idiv
outsb
pop
ja
jo
mov
and
mov
push
loope
pop
inc
xchg
mov
cs
loopne
add
sub
notb
jb
outsl
in
ljmp
mov
pop
sbb
test
pushf
dec
daa
add
push
mov
or
mov
jl
inc
dec
inc
inc
sub
dec
fmulp
xchg
push
pushf
mov
xlat
cltd
sub
cmp
sahf
nop
inc
xor
test
lahf
imul
mov
mov
xchg
cltd
add
aaa
mul
mov
push
sbb
sub
or
shr
push
sbb
lahf
cmovo
sbb
scas
insb
js
out
mov
jmp
fdivrl
sbb
jo
sahf
mov
mov
out
cs
mov
in
jmp
mov
scas
fildll
xor
xlat
push
jmp
es
xchg
push
pop
and
or
jae
stc
rol
stos
cmpsl
sub
lret
movsl
repz
imul
je
out
mov
aam
out
jb
or
lret
push
or
in
mov
xchg
xor
mov
mov
rclb
push
out
jecxz
inc
rclb
cmp
pop
adc
dec
cwtl
aas
sbb
xchg
dec
std
jle
lds
mov
xchg
mov
pop
and
filds
mov
jge
sbbb
cmp
push
testb
inc
insb
push
clc
pop
enter
jl
cmp
pop
test
gs
lods
xchg
sub
daa
and
pop
rolb
rorl
push
pandn
xor
mov
repz
xlat
sarl
dec
xlat
and
rol
mov
pop
in
stos
out
mov
inc
inc
mov
sbb
push
sbb
jecxz
pop
repz
test
pop
lods
sti
iret
pop
int
jge
pop
add
lret
jle
pusha
inc
les
push
movsb
pop
sub
push
jnp
push
pop
jle
xchg
dec
movsb
xchg
or
sti
xor
mov
leave
adc
inc
adc
push
notb
or
xor
jno
ljmp
inc
xchg
jg
jne
pop
push
dec
adc
fisttpll
jnp
ret
leave
int3
lods
and
xor
ficompl
int3
bound
inc
jbe
negb
sub
sbb
clc
fstl
sahf
jg
stos
jbe
xor
in
or
in
push
add
push
inc
stos
mov
fsubrs
scas
xlat
cmpsb
aas
scas
testb
sub
ss
fdivl
xchg
inc
ljmp
data16
jo
xchg
test
out
in
daa
imul
int
mov
inc
mov
push
jae
les
jecxz
fwait
lret
mov
cmp
insb
push
mov
push
dec
lahf
cwtl
mov
jb
jo
data16
sbbl
incb
cmpsl
es
mov
lret
les
sbb
xchg
fldl
jo
dec
js
sbb
insb
nop
fisubs
push
lds
inc
rcr
loope
adc
in
jbe
lock
mov
and
sub
cs
lret
cmp
dec
stos
xchg
push
adc
pop
sub
scas
dec
cs
bound
xor
imul
push
jecxz
sbb
pusha
mov
dec
in
pop
mov
mov
daa
rclb
icebp
cwtl
movsb
inc
mov
xor
push
dec
mov
add
dec
xor
fsts
adc
popf
loope
jmp
imul
mov
gs
or
inc
clc
push
adc
aam
pop
xor
pusha
je
divl
xor
jl
mov
cld
and
xchg
rorl
dec
mov
addr16
out
push
in
sub
scas
push
jae
insb
lods
roll
int
icebp
pusha
jnp
push
mov
pop
adc
loopne
adc
dec
leave
ret
mov
xchg
enter
loope
int
mov
jmp
add
or
sbb
movsb
xor
rcll
jne
cltd
pop
int
cmp
andl
mov
inc
mov
sbb
sarb
dec
lcall
cmp
adc
and
push
pop
and
out
sbb
jnp
je
cmp
sub
lcallw
xor
cmp
xor
sbb
xchg
lahf
movb
adc
pop
es
in
fsubs
popl
cmp
pop
adc
mov
ret
xchg
scas
negb
xlat
test
xchg
push
sti
jecxz
push
out
cmpsl
xchg
and
fsubs
mov
leave
mov
inc
out
mov
sarl
or
ljmp
mov
sub
xor
fldenv
dec
push
mov
test
lds
mov
jae
inc
daa
pop
jp
lahf
aad
inc
stos
shll
dec
lret
stc
mov
cmpsb
testl
inc
inc
leave
ljmp
mov
inc
lea
cmpl
pop
or
or
rcrb
sub
movsl
je
lret
call
arpl
push
pop
test
cmc
icebp
incb
xor
cmp
movsl
mov
lret
ljmp
and
gs
jl
nop
repz
test
push
cmp
cmc
out
pop
movsb
jns
js
and
jl
js
add
les
push
jl,pn
call
push
fstl
imul
jo
add
push
adc
stos
xor
repnz
adc
enter
test
mov
xor
test
mov
adcb
nopl
les
js
shlb
xor
out
shl
sub
xor
adc
movsl
mov
push
lahf
sar
cmp
int3
adc
orl
aam
subl
cli
jb
test
dec
lds
es
push
push
incb
pop
bound
pop
arpl
sub
inc
xchg
and
push
mov
mov
inc
js
or
fsts
xchg
dec
jle
or
xchg
push
insl
pop
sti
ret
fs
lret
sti
xor
rorl
cli
lcall
fcmovnu
sub
lods
iret
mov
jmp
xchg
lods
add
sbb
sub
fsubl
arpl
cld
or
lea
or
ljmp
xchg
or
sbb
fld
xor
xchg
mov
in
fs
movsb
ljmp
mov
mov
push
lret
jmp
jns
sbb
in
cwtl
dec
add
enter
jle
adc
sub
sub
fsubs
cmp
test
mov
cmp
aam
push
test
in
xchg
addl
fwait
and
dec
mov
cmc
insb
into
mov
addr16
mov
or
push
loop
mov
or
popf
pop
ret
xor
out
jl
mov
fstl
mov
in
xchg
cmp
pop
pop
addl
lock
divl
outsl
shlb
xchg
xor
jg
arpl
adc
push
pop
or
daa
scas
or
stos
sti
sub
es
fldl
sbb
dec
xchg
popf
flds
push
adc
push
out
jmp
popa
sub
rclb
jg
pushf
movsb
lods
in
adc
sbb
mov
dec
dec
loop
push
jns
jp
out
jo
inc
fidivrs
mov
in
repnz
adc
pop
mov
pop
call
fstl
mov
cs
push
xchg
into
int3
sub
lcall
jle
ljmp
sahf
rcr
lock
xchg
pushf
scas
xchg
nop
out
jg
jbe
enter
adc
xor
push
imul
inc
sahf
mov
outsl
mov
mov
jne
test
push
mov
aas
imul
lea
sub
inc
push
mov
sbbl
or
jg
roll
lret
sarb
jnp
pop
jge
or
lods
sub
jg
mov
ficomps
cmp
add
sub
movsb
xor
lcall
adc
lahf
repz
push
xchg
or
repnz
mov
aad
insb
lret
aam
or
fbstp
mov
mov
cld
inc
rorl
icebp
sub
std
inc
es
jnp
dec
lcall
imul
pop
fbstp
enter
mov
mov
cld
jnp
imul
xchg
xchg
push
inc
movsb
popf
fdivs
jno
mov
xorl
lds
mov
lods
test
nop
xor
shr
leave
dec
arpl
outsl
xchg
int
call
loope
jl
pop
sahf
fwait
mov
sbb
cmp
xor
mov
cli
lcall
testl
fwait
mov
cli
jb
mov
loope
mov
pop
dec
jns
fdivrs
rclb
inc
aas
jge,pt
xor
mov
mov
push
shrb
mov
iret
adc
je
mov
inc
push
insl
lods
pushf
lods
movsb
dec
in
mov
mov
dec
ret
cmp
jns
std
push
movsl
cs
cmpl
ds
test
aaa
dec
mov
cld
push
out
inc
push
push
cmp
sub
cwtl
pop
add
dec
paddsb
clc
ljmp
adc
xchg
mov
loop
repnz
mov
dec
daa
push
sub
xchg
cltd
mov
inc
int
xchg
lcall
das
jecxz
mov
int3
xchg
sub
fwait
cwtl
outsb
es
lret
ja
or
mov
push
fstl
dec
xchg
sub
cmp
std
ret
lods
xor
sub
loop
pop
mov
mov
dec
adc
int3
lea
cli
lods
mov
dec
shrb
xor
lcall
cmp
lds
xchg
mov
enter
loope
addr16
test
mov
adc
mov
mov
fldt
jne
mov
mov
inc
dec
sahf
aad
clc
cmp
out
xor
lea
dec
clc
xchg
mov
dec
lods
xor
sub
test
sub
jb
sarl
adc
sti
fdivs
std
mov
fildl
bswap
dec
fisttpll
inc
fsubrp
add
pop
push
jb
mov
fiaddl
jge
jne
add
xor
enter
inc
std
mov
enter
jge
loope
push
pop
out
inc
inc
mov
push
imul
popf
jbe
hlt
popf
shlb
mov
dec
out
std
mov
aas
sub
sub
enter
fistpll
mov
xchg
mov
fdivrs
inc
data16
or
ret
lcall
enter
or
in
aad
jmp
outsb
mov
loope
sahf
cmp
sbb
sub
pushf
shl
inc
decb
inc
ds
cmp
lret
sub
out
and
cwtl
iret
fstps
sarb
into
cmp
scas
push
test
mov
jl
ss
pop
pop
pop
and
testl
hlt
rdmsr
jno
pop
scas
pop
hlt
jecxz
sbb
cmp
repz
jg
in
aam
test
bound
cmp
and
jmp
scas
in
ljmp
push
insb
and
addr16
mov
repz
push
in
xchg
push
jne
idivl
mov
mov
out
dec
in
jbe
addr16
sbb
lahf
cmp
mov
addb
bound
fstps
data16
push
or
xchg
or
mov
bound
pop
add
daa
scas
mov
hlt
dec
xor
test
popa
out
inc
or
xlat
loop
ret
ss
rcl
loope
out
jmp
adc
jp
cmp
test
mov
push
add
cmp
or
push
mulb
add
cld
jp
mov
insb
lret
mov
inc
mov
enter
xchg
sub
inc
inc
cmp
dec
lret
jae
out
fwait
mov
mov
aam
sahf
jo
subb
loopne
xchg
mov
rcrb
in
mov
pop
insl
add
cmp
roll
inc
bound
test
bound
clc
and
ss
outsb
inc
jecxz
adc
jmp
adc
pop
mov
rsm
mov
mov
pop
inc
cli
popl
xlat
aam
repz
mov
and
push
jbe
cmp
jge
cwtl
adc
mov
push
mov
mov
pushf
adc
jg
dec
pop
or
or
adc
daa
repnz
int3
push
cmc
sti
mov
and
push
jp
inc
cli
clc
mov
mov
std
in
cmp
out
mov
push
cmp
dec
xchg
cmp
push
sbbl
repnz
adc
pushf
push
dec
pusha
fwait
out
adc
outsb
sub
xor
and
in
in
mov
je
add
adc
mov
popa
mov
test
jno
sub
mov
mov
les
mov
in
mov
mov
push
std
fcmovnu
add
shll
and
jo
cmpsl
pop
mov
dec
jmp
mov
or
out
adc
xor
cmc
cmpl
repnz
std
mov
rcr
push
das
arpl
call
xorl
sub
jl
fsubr
fldcw
clc
xor
sti
jae
das
cwtl
add
ljmp
sbb
loope
mov
push
stos
or
stc
or
pushf
aas
pop
mov
sub
cmp
mov
sub
lcall
mov
jbe
mov
jne
inc
mov
and
daa
adc
mov
pop
jg
xor
arpl
adc
rcll
test
arpl
fbld
fldt
ja
addl
imul
xchg
adc
test
addw
cmp
addr16
es
pop
clc
push
ds
adc
mov
xchg
popa
sti
ret
sbb
xor
je
jecxz
inc
jmp
ret
and
xor
cli
lds
and
push
in
pop
jl
mov
ja
lods
jno
xchg
mov
stos
mov
and
out
pop
cmp
ja
cmc
test
mov
imul
aam
sbb
aaa
mov
roll
outsb
xchg
test
xchg
out
rorl
cmp
subb
push
adc
jg
je
rorb
lret
and
push
mov
jg
cmp
and
mov
push
aad
dec
mov
or
inc
and
mov
fbld
test
shll
cmp
dec
jne
xchg
dec
and
cmp
dec
jmp
scas
cli
xchg
daa
pop
nop
and
jp
mov
or
sub
cmp
dec
ficomps
imul
jmp
stos
mov
push
lcall
sub
ljmp
cmp
ds
cmp
pop
mov
xchg
popf
scas
cmp
stos
stos
dec
jge
cmp
in
xchg
dec
in
jmp
out
fsubrs
movsl
xor
test
xchg
jno
sub
or
shlb
arpl
mov
pop
xrelease
jb
call
shrb
or
addr16
fstenv
mov
jnp
sbb
and
arpl
inc
jb
push
add
unpcklps
negb
mov
xchg
loopne
mov
sub
cli
dec
inc
stos
fistl
cld
add
adc
je
loope
sbb
jnp
das
inc
call
mov
inc
idivl
mov
das
jge
lret
xchg
xor
daa
enter
adc
dec
pop
push
cmp
std
mov
repnz
jmp
mov
cmpl
lret
mov
and
inc
dec
xchg
popf
loop
je
inc
or
cli
sbb
scas
xor
jge
and
mov
sub
sub
push
scas
stos
xor
push
je
or
inc
lds
mov
bound
mov
repz
add
aas
mov
push
sti
es
jle
pop
push
jnp
mov
sbb
pop
or
or
mov
call
shlb
ret
pop
leave
jne
scas
icebp
add
out
or
mov
xor
shlw
push
test
stos
sub
in
insb
xchg
cmp
cmpsl
vmread
push
jno
test
mov
dec
in
xchg
or
lret
pop
push
xchg
xor
lret
and
jecxz
fwait
adc
pusha
jbe
mov
cmc
fdivrl
jb
lods
mov
mov
mov
mov
pop
or
sarl
iret
out
sbb
push
xor
add
ret
pop
rclb
sbb
rsqrtps
popa
adc
mov
stos
lock
cmp
icebp
push
test
dec
std
jno
jo
je
dec
ret
sub
mov
imul
add
int
enter
mov
mov
mov
adc
arpl
cmp
hlt
dec
sbb
popl
andl
repz
xor
mov
mov
je
sub
shl
cwtl
jnp
shrl
int
sti
push
pop
fwait
repnz
bound
inc
jg
fadds
imul
data16
mov
test
lret
inc
dec
push
jns
clc
stos
js
ucomiss
dec
mov
xor
leave
ss
cs
dec
leave
pop
enter
jne
xor
add
and
sub
mov
stos
sbbl
or
push
fistpl
mov
and
mov
jl
mov
sti
jmp
lock
xchg
les
gs
sbb
lods
lcall
aaa
fnstenv
add
cwtl
std
pop
sbb
jno
xchg
xor
xchg
out
xchg
mov
loope
dec
sbb
push
lcall
inc
ljmp
pop
sub
add
std
inc
shll
shrb
fst
sar
lds
arpl
push
lret
cld
and
dec
inc
movsl
adc
jle
les
jl
repz
sarl
ljmp
ds
xor
xchg
in
lods
in
jns
es
shl
dec
inc
ficomps
sub
or
add
lret
dec
mov
mov
hlt
push
shll
jns
cmp
cltd
dec
or
dec
jbe
pop
push
dec
jns
sahf
push
pop
js
popa
xchg
push
adc
in
fsts
adc
sub
ss
sub
xchg
popa
add
push
sub
movsb
jae
dec
popf
xchg
xchg
nop
cmpsb
sbb
lods
stos
or
xchg
mov
xor
test
mov
int3
mov
dec
dec
push
adc
arpl
gs
push
add
popf
add
xor
xchg
inc
fnstcw
jmp
les
in
ja
xorb
pop
loope
jno
or
fidivs
iret
xchg
xchg
mov
cmp
mov
adc
cmp
cld
lret
pop
mov
push
out
lods
jge
andb
aaa
push
fisubrl
pop
imul
cmp
cmp
pop
push
lret
psllq
dec
cltd
mov
fndisi(8087
mov
cmpsb
pushf
mov
inc
in
fisttps
mov
lret
les
iret
popf
fs
pusha
add
loop
out
push
cltd
ja
mov
out
call
sahf
pop
fsubrs
sub
movsl
or
pop
sahf
inc
loop
stc
or
pop
in
xchg
mov
aad
mov
pop
ljmp
jge
popf
or
xlat
cld
and
jg
sub
lods
popf
lahf
ret
adc
int
mov
or
cmc
sbb
mov
sbbl
cmp
cltd
push
jmp
cmc
cmp
scas
rcl
in
sub
adcl
cmp
in
jg
imul
cmp
sti
mov
aas
rcrl
mov
mov
add
sbb
pusha
jmp
mov
adcl
out
les
mov
popf
sti
rcrl
fcoms
mov
inc
push
adc
sub
ret
dec
das
mov
or
xchg
mov
loop
push
jmp
lret
fidivl
loopne
pusha
push
loop
cmp
sbb
cmp
mov
test
sub
clc
aad
pop
pop
dec
fcomp
adc
in
mov
das
out
int3
pop
fisttpll
push
and
adc
jecxz
or
fdivs
mov
sub
lds
nop
jno
xchg
mov
dec
pop
sbb
inc
mov
sbb
ja
loopne
cmp
js
xchg
stc
bound
sahf
shlb
ds
xchg
in
or
pop
ss
jnp
iret
addb
jno,pn
in
incl
push
ds
incl
inc
les
movsl
push
and
cmpsb
jl
fdivr
mov
fimuls
icebp
jno
movsl
mov
hlt
dec
stos
push
pusha
cld
aam
rcrb
lock
pop
int3
mov
jge
push
pop
stos
or
movsl
rcll
cs
push
and
stos
pop
stos
hlt
jne
cwtl
je
pushf
xchg
push
sub
dec
or
hlt
aas
push
cmp
inc
push
shrl
adc
or
mov
test
inc
jp
dec
xor
pusha
mov
aad
hlt
ljmp
and
push
fadds
movsb
dec
push
lods
add
sbb
aas
leavew
sbb
mov
cli
clc
popf
cwtl
cmc
call
daa
mov
xor
adc
movsb
mov
mulb
mov
fisttps
call
in
std
cmp
sti
add
aam
and
aam
cmp
shll
in
mov
in
fisttpll
and
mov
mov
jecxz
popa
mov
in
lods
cltd
ret
sarb
testb
mov
xor
out
mov
loope
push
cmpsb
movsb
aad
dec
inc
mov
lea
jno
xchg
or
mov
imul
aad
jnp
test
lea
dec
push
lret
dec
and
or
fstp
and
ss
xchg
sbb
imul
xor
bnd
add
mov
xchg
mov
loope
cli
jnp
add
repnz
js
sbb
testl
stos
xor
shl
dec
adc
ror
ret
push
mov
sub
mov
std
sub
and
insl
sbb
fisubrs
jmp
stc
lret
fnstsw
jo
adc
jb
jns
cmp
popf
push
leave
sub
sbb
lock
pop
aas
call
jbe
int
sbb
mov
outsl
pusha
test
out
mov
xor
mov
aas
loope
out
add
aad
das
push
jmp
inc
push
mov
and
pop
orl
roll
dec
fs
jge
cmp
push
mov
inc
mov
adc
mov
adc
pop
sub
icebp
fiadds
outsb
pusha
leave
je
add
sub
cld
mov
or
cmpb
push
mov
push
xchg
aaa
mov
imul
mov
hlt
enter
mov
aad
push
stos
sbbl
ds
push
mov
lds
jl
enter
fwait
icebp
sub
xor
jecxz
push
sti
out
outsl
adc
pop
mov
imul
inc
fstps
in
jg
lods
leave
sub
packssdw
xor
lods
and
aad
dec
jl
pop
pop
test
stos
call
mov
cmpsb
push
dec
xor
pop
pop
inc
xchg
jmp
int3
push
push
das
push
test
rcr
adc
xchg
push
mov
cli
mov
lcall
lcall
outsb
xchg
cmp
lret
mov
sbb
pop
xchg
mov
fistpl
mov
cmp
mov
aam
sahf
or
pop
jne
mov
dec
into
call
jnp
loopne
andb
adc
xor
je
cmpsl
scas
lock
pop
push
xor
cmpsb
sbb
jns
and
popf
or
add
or
adc
lahf
push
xor
cld
push
mov
add
stos
test
insb
incb
psubd
cmp
fstpt
nop
aas
cmp
hlt
pushl
dec
sbb
push
test
inc
jnp
mov
test
mov
mov
clc
jge
or
add
inc
mov
jmp
fstpt
stos
fs
sub
test
pop
xor
mov
mov
jb
add
aam
jmp
jg
mov
dec
mov
xlat
add
pop
pop
and
push
or
arpl
and
add
int3
mov
adc
mov
adc
insl
cld
xor
and
push
pop
xor
mov
aam
sbb
and
daa
sub
sbb
insl
mov
sub
dec
mov
pop
cmp
lds
ja
or
fidivrl
or
sub
dec
push
jbe
push
sub
inc
sub
mov
pop
or
mov
sub
cmpsl
sub
repnz
sub
sbbb
adc
xchg
add
xchg
lret
jl
or
fidivl
push
in
xchg
fstpl
push
popa
xor
xchg
pop
fucomi
stos
out
dec
dec
jl
mov
xor
or
xor
xor
jbe
jmp
stos
pop
cmpsb
mov
fsubrl
stc
jns
pushf
out
inc
dec
push
mov
rcrb
cs
push
lods
test
sub
sub
sub
ret
lea
js
bound
push
dec
clc
cmp
or
outsl
dec
test
push
cwtl
loopne
pop
push
sub
out
ret
add
repnz
jb
xchg
data16
shlb
dec
aaa
sahf
fisttpll
call
inc
xchg
test
adc
push
negl
push
sub
adc
push
pop
movsl
loope
fmul
neg
or
aaa
repnz
adc
and
fistpl
mov
mov
xchg
inc
or
xchg
adc
mov
leave
enter
and
jnp
mov
adc
push
cwtl
pop
sbb
add
push
rcl
hlt
cltd
fcomi
sub
push
jl
test
int3
test
ljmp
dec
jp
dec
cmp
mov
icebp
xchg
fdivrp
daa
arpl
push
cwtl
xchg
sub
cmp
adc
in
lret
cmp
scas
or
inc
mov
icebp
inc
lods
adc
in
mov
mov
jae
push
mov
push
int
pop
add
mov
leave
hlt
inc
dec
push
xchg
adc
jmp
dec
inc
cmp
cld
mov
pop
data16
in
sub
lock
pop
push
outsb
mov
adc
out
mov
dec
ret
push
jge
jl
xor
sub
cmc
push
out
pop
xor
and
sti
in
test
cmp
xor
dec
mov
xchg
movsb
in
shlb
addb
push
aas
cmp
es
sbb
mov
lock
decl
lcall
scas
adc
int3
cmpsb
dec
cmpsl
push
loop
cmpsl
cmp
subl
negb
stos
lock
clc
fcoms
xchg
cmc
push
xchg
dec
inc
jo
jp
jb
loope
aaa
mov
out
in
push
add
sbb
add
lock
inc
jp
jecxz
xor
shlb
lea
testl
mov
cmp
mov
fisubrs
leave
or
push
mov
out
out
divb
addr16
mov
mov
xchg
aas
sahf
outsl
push
jg
fsts
inc
adc
int
andl
adc
mov
push
jecxz
cmp
ds
test
mov
mov
push
int
jns
flds
movsb
das
pop
add
lock
insl
or
push
inc
sarl
ret
cwtl
or
xlat
icebp
std
cmp
mov
cli
stc
cmpsb
adc
cli
es
or
call
adc
mov
sbb
jmp
pop
vmread
mov
sbb
xchg
icebp
aam
shlb
sub
mov
repnz
jmp
xchg
sti
ret
pop
fucompp
pop
lock
adc
popa
pop
push
push
cmp
insl
xor
nop
pop
lahf
pop
sub
pop
mov
mov
jl
fisubrs
je
stos
fadds
add
bound
jl
xchg
mov
cld
outsb
leave
jae
loop
dec
ds
lret
movb
in
in
mov
xchg
out
fdivl
pop
insb
jae
push
jle
icebp
imul
pop
aad
out
popf
ja
in
push
xor
outsl
sahf
push
sbb
or
ja
push
xchg
jge
mov
fldt
idivb
adc
jae
mov
jb
xchg
movsb
adc
aam
xchg
fnstsw
movsl
fwait
lods
dec
aas
out
orb
inc
das
mov
test
lods
lahf
jnp
xor
test
pushf
push
and
adc
sbb
pop
mov
fisubl
sub
scas
or
stc
fwait
ja
mov
les
cmc
or
sbb
adc
dec
cmpsl
jne
adc
incl
xor
sub
popf
les
roll
pop
divl
xchg
adc
test
je
ficoms
aas
push
or
push
stc
adc
xor
mov
stos
sub
in
push
dec
push
jg
rcrb
pop
lods
push
xchg
shlb
xor
push
fisttpll
repz
sbb
es
push
ret
ss
mov
push
adc
lahf
cs
sub
jecxz
jno
mov
js
scas
inc
xchg
ficoml
push
fistpl
jae
xchg
sbb
mov
push
push
in
stc
in
dec
cmp
dec
adc
push
or
sbb
movsb
jae
orb
sbb
test
sarl
stos
cli
loop
inc
jg
xchg
inc
mov
xorl
sbb
call
cmp
lods
rcl
nop
ja
in
push
enter
aam
lods
test
out
pop
test
add
insl
clc
pop
orb
mov
add
mov
mov
dec
iret
add
add
push
cmp
xchg
sbb
or
loop
mov
mov
xchg
fdivrs
mov
add
push
gs
and
mov
insb
add
test
cmp
jno
insl
notb
pop
arpl
loopne
lods
ljmp
je
mov
jg
jo
jmp
sti
inc
cmpsl
inc
outsl
adc
int
shl
sub
mov
adc
in
xchg
outsb
shll
xchg
mov
inc
cmp
pushf
loopne
les
push
shll
ret
sub
pop
les
sbb
mov
cmpsb
inc
test
outsb
loop
sarl
int
inc
pop
pop
cmc
push
fisubrl
bound
sbb
je
adc
sbb
or
pop
into
cli
imul
mov
mov
jmp
sbb
lods
push
mov
inc
or
outsb
gs
in
pop
lock
icebp
push
imul
pop
fiaddl
sbbb
sub
cwtl
xorb
sub
movsb
lds
inc
int3
repnz
insl
sub
jecxz
jnp
pop
je
lret
sbb
cmovns
mov
lea
movsb
pop
shrl
dec
mov
add
sbb
lock
in
icebp
insb
pop
insl
inc
rcll
sbbb
jno
loope
js
pop
xor
mov
cmp
loop
add
psubusw
ljmp
push
sti
mov
sbb
pusha
rorb
push
fcoml
aaa
cmp
in
cmpsb
sbb
mov
enter
sbb
dec
xor
das
pop
shr
dec
test
push
hlt
sti
out
mov
dec
pop
pop
cmp
repz
sub
mov
sbb
sub
mov
push
and
fs
shrl
bound
adc
in
cmpsb
incl
push
add
fsts
dec
sti
scas
mov
popf
push
xor
jae
fcomps
jl
popf
xor
sbb
scas
cmp
sub
cmp
mov
repnz
push
add
pop
clc
cmc
jb
shll
xor
sbb
sbb
fxtract
dec
js
shll
rcrl
sub
add
and
rcll
jns
mov
lcall
pop
xchg
jns
lods
rcll
inc
adcb
clc
movntps
xor
cmpsb
dec
into
clc
fs
loop
pop
mov
add
lods
dec
fldenv
inc
xor
cmp
mov
pop
bound
mov
repz
inc
sarl
mov
pop
loop
pop
into
mov
or
or
test
das
mov
outsl
pop
pop
cmpsl
add
arpl
dec
ficoms
repz
add
lods
popa
or
pop
in
and
lret
adc
lret
in
nop
dec
daa
aas
dec
mov
or
dec
cmp
push
add
push
mov
adc
enter
lret
outsl
mov
mov
lods
sbb
mov
aad
fisttps
fldcw
lret
pop
and
inc
jb
inc
test
lea
ja
pop
mov
jp
dec
aad
sarl
stos
inc
or
push
pop
mov
call
fwait
ret
lods
arpl
mov
or
and
subb
in
gs
mov
sbbb
iret
daa
push
enter
into
imul
aaa
xor
lods
jle
and
dec
nop
sbb
xchg
testl
and
out
aaa
adc
xor
inc
scas
ret
jecxz
call
push
cmp
sub
dec
push
aaa
fxch
mov
lret
sub
pop
sbb
push
ljmp
cmpsl
xorl
mov
cmpsb
cmp
stos
push
or
cmp
fsubrl
jge
adc
cld
inc
sub
ss
xchg
xlat
inc
ret
jns
sbb
sub
dec
jge
inc
xor
jg
test
push
cld
xchg
dec
pop
push
cmpsb
mov
dec
in
pop
scas
fistps
sbb
sbb
pop
add
push
pop
outsl
cmp
jecxz
inc
stos
mov
sbb
fbld
int
pusha
pop
lahf
add
pop
add
jnp
xlat
arpl
mov
jns
ljmp
adc
sbb
xchg
rorb
mov
gs
cmp
push
sub
cvtps2pd
out
and
sub
dec
cs
mov
in
or
cmp
sub
sub
or
sbb
in
sar
mov
xorl
cmp
sbb
imul
sbb
mov
mov
repz
jno
rorb
addl
lahf
add
ss
ror
test
daa
jl
shll
stc
cmpb
incl
mov
test
mov
or
jb
ds
jns
movsl
pop
out
lock
pop
jnp
or
mov
scas
loopne
nop
or
notb
push
xor
cmp
std
push
adc
dec
mov
lcall
mov
pop
xchg
sub
lcall
das
xlat
ja
adc
sahf
dec
nop
fsubl
jo
sub
mov
sub
movsb
repz
scas
pop
roll
jne
xor
push
cltd
inc
hlt
cmp
leave
jo
xchg
adc
hlt
scas
mov
xchg
data16
cmp
add
mov
mov
mov
push
ja
jp
jg
inc
inc
subl
decb
fldenv
jle
les
xchg
inc
lahf
pusha
fisubrs
mov
popa
xchg
inc
or
loop
loope
adc
lods
ror
daa
stos
popf
cs
push
repz
dec
movsb
add
iret
movsl
lret
ja
stos
mov
aaa
inc
pop
js
sub
insb
mov
mov
addl
lahf
cmp
loop
mov
adc
jmp
int
inc
into
subb
jb
scas
dec
fwait
testb
bound
jnp
cmp
jbe
sar
mov
push
mov
cld
call
or
repz
add
cmp
jae
int3
mov
pop
lods
sahf
popa
lds
pop
ja
hlt
into
xchg
xchg
sbb
in
inc
in
je
test
cmpsb
scas
pop
ret
push
cmp
sub
push
pop
addr16
into
pop
and
popf
mov
and
xchg
cmp
push
pop
mov
pop
das
hlt
inc
adc
enter
int
fidivs
push
and
scas
and
cmc
es
pop
data16
mov
icebp
icebp
sub
out
mov
das
push
xor
mov
cltd
cmpsb
test
sbb
or
cmpsl
xlat
add
mov
aaa
inc
repz
das
in
stos
jno
cmp
mov
jecxz
lret
pop
mov
xor
stos
mov
push
leave
ret
xor
fiadds
sub
out
repz
mov
xchg
popf
idivb
inc
stos
add
push
jae
xchg
out
loope
lea
stos
or
js
or
cmpsl
xchg
and
aas
stos
cs
sbb
cmpsl
out
lret
aad
add
call
adc
lods
pop
cmpsb
out
sahf
lds
scas
dec
and
jg
adc
lcall
adc
subb
idiv
stc
jbe
test
adc
adc
sbbl
mov
inc
lods
cmp
out
push
js
pop
stos
adc
lds
mov
sub
insl
mov
mov
pop
lcall
pop
xor
addl
mov
repnz
lock
imul
fs
mov
out
mov
cltd
outsb
mov
arpl
out
or
leave
ret
sub
or
push
fldt
imul
mov
test
cs
call
leave
ss
mov
test
push
popf
loope
fcom
cmpsb
mov
lcall
push
cmc
mov
aaa
push
flds
js
mov
xchg
add
add
gs
dec
mov
or
and
dec
dec
jns
dec
push
pop
imul
popa
dec
sbb
dec
and
mov
lods
jp
imul
jge
or
insl
and
sbb
push
mov
xor
daa
adc
fists
rolb
rcll
cltd
jle
or
aad
or
adc
enter
adc
pop
cmpl
mov
shll
xor
mov
aam
mov
mov
add
xor
scas
cli
mov
jns
mov
ret
xor
adc
lods
and
mov
push
jno
loopw
arpl
pop
lret
hlt
in
dec
sub
fdivl
scas
fs
outsb
fstp
test
sbb
cwtl
jno
mov
repz
mov
lock
jbe
jmp
xchg
add
gs
mov
cmp
adc
sti
inc
shll
sub
jno
fistpll
mov
xchg
xor
enter
jne
and
stc
or
add
xor
xchg
sub
test
jle
cmp
mov
stos
mov
repz
push
ds
or
mov
mov
mov
xlat
or
hlt
or
fcomp
xchg
test
xor
stos
xchg
jg
movsb
jno
cld
je
das
cmp
loopne
mov
mov
xor
sarl
lret
jbe
lods
outsl
ret
dec
movsb
xor
jecxz
int3
jno
pop
xorl
out
into
add
pop
fnstenv
fsubl
cmp
stos
mov
inc
dec
stos
fiadds
pop
das
call
mov
addr16
sub
into
fidivrs
decl
data16
inc
pop
jbe
ficoml
and
enter
rol
ss
mov
xchg
punpckhbw
cmpsb
dec
fcomp
sub
outsb
dec
mov
or
pushaw
out
fcoms
jmp
mov
stos
jne,pt
cli
pop
fisttpl
les
inc
es
cmpsb
repz
or
fadds
lret
pop
push
mov
ja
mov
push
push
jo
jp
mov
lds
outsb
sub
mov
push
xchg
or
inc
fwait
hlt
mov
xchg
cld
icebp
mov
push
in
lds
sbb
test
popf
leave
or
lcall
pop
sub
es
mov
lahf
pop
sub
xchg
lock
bound
and
cmc
out
in
xchg
mov
das
jmp
arpl
into
add
out
and
clc
push
stos
jl
add
in
and
sub
xchg
mov
dec
xchg
mov
jb
xor
imul
inc
int3
es
mov
icebp
xchg
and
bound
mov
pusha
jae
jb
mov
lcall
popa
je
jno
add
adcl
out
cmpsb
lds
mov
lea
jl
sub
rolb
divb
out
fsts
bnd
dec
ss
test
data16
mov
push
scas
dec
pop
mul
xor
and
pop
pop
and
fdivs
push
repz
mov
add
orl
jo
add
xchg
mov
jnp
adc
mov
push
pushf
jle
adc
xchg
stos
pop
dec
jno
mov
xchg
inc
aas
add
xchg
mov
out
int3
and
fistpl
jae
inc
mov
pop
jne
mov
pop
pop
std
lods
mov
jmp
lds
ficompl
std
mov
sbb
scas
in
jb
ljmp
std
mov
enter
mov
cmc
aas
add
ljmp
pop
jno
pop
cmp
jmp
scas
cmp
fs
dec
mov
roll
or
das
jne
sub
and
in
mov
xchg
push
in
stc
inc
push
out
pop
inc
scas
testb
test
and
xchg
jne
into
cwtl
sarb
pop
loope
xorl
xor
mov
adc
jle
out
inc
in
cmpsb
insb
push
mov
dec
or
loope
out
dec
testb
js
adc
mov
jl
cmp
out
jge
sbb
mov
push
and
lcall
loop
and
shlb
sbb
pop
adc
pop
xor
sub
adcb
pushf
inc
outsl
loopne
inc
cmp
repnz
sub
outsb
addr16
mov
sbb
shl
cmpsl
roll
aam
fwait
xchg
sub
dec
add
inc
in
sbb
sti
jo
out
loop
arpl
test
xchg
jo
push
and
cld
inc
mov
mov
stos
les
sbb
mov
loop
lcall
in
jae
rcrl
cmp
test
mov
aaa
mov
add
mov
out
pusha
jecxz
mov
sbb
inc
ret
psllq
jmp
mov
insl
dec
dec
push
aaa
fmul
iret
roll
pop
call
mov
popa
popa
xor
stos
fsubrs
add
jle
fiaddl
jns
fmull
subl
cmpsl
jmp
inc
mov
lods
loopne
enter
int
push
jbe
mov
mov
mov
add
je
pop
int
dec
sub
sub
in
sbb
out
sarl
xchg
movsb
test
sbb
cmpsb
xchg
std
out
rorb
and
inc
jns
int3
cmp
add
cmp
sysret
lret
fists
addr16
in
bound
mov
cmp
icebp
std
and
mov
or
inc
ja
jecxz
popa
hlt
out
adc
int
ds
dec
xorl
subl
and
lahf
push
and
icebp
sub
int
ret
jge
int
into
sub
dec
and
mov
push
jns
clc
scas
popa
stc
into
scas
xor
iret
dec
jbe
jge
xchg
dec
sahf
pop
xchg
cmpsb
gs
test
jl
dec
fbstp
lea
iret
lcall
mov
gs
cmp
clc
fnstcw
sti
fbld
adc
cmp
xor
jmp
adc
add
lods
inc
sbb
add
pop
mov
mov
or
out
cld
ret
mov
or
daa
mov
sbbl
mov
lock
xchg
les
xchg
subl
xchg
sbb
imul
jo
add
pop
aas
mov
pop
push
inc
push
push
ss
add
imul
addl
sub
ds
lock
std
roll
sbb
mov
push
push
add
sub
test
mov
lock
test
sbb
in
push
adc
lcall
lahf
fistpll
adc
and
lcall
dec
xlat
ror
push
push
or
in
pop
mov
cwtl
mov
pop
cltd
ficoms
push
cs
push
in
or
inc
mov
ja
mov
jnp
cs
addr16
dec
sti
cmp
jecxz
xor
add
adc
ljmp
mov
cmpsl
outsl
mov
cmp
jbe
fsubrs
xchg
sti
push
cmpb
and
out
pushf
pop
mov
mov
mov
std
push
push
test
pushf
push
fdivs
test
mov
test
xchg
filds
movsl
xor
cmp
ret
fstpt
push
push
push
pusha
or
int3
jns
pop
loop
mov
adc
mov
jb
inc
pop
xchg
xchg
dec
inc
push
pop
mov
mov
je
sahf
cmp
hlt
push
sbb
movsl
xor
data16
push
pop
hlt
das
imul
adc
loopne
sbb
and
outsb
sahf
mov
sbb
iret
aam
jbe
sbb
push
jne
les
jae
int
arpl
push
ffreep
adc
pop
mov
into
in
imul
fisubs
sbb
cli
inc
repnz
jl
cmc
mov
lods
in
cmp
push
clc
xor
sub
jmp
mov
pusha
ret
call
addr16
sub
enterw
aas
pop
mov
stos
jb
or
movsl
js
iret
xchg
sbb
loope
lret
shrb
push
in
inc
fidivrs
adc
adc
outsl
push
xor
xor
jnp
mov
push
push
cwtl
aaa
lahf
cmp
sub
push
in
imul
jnp
scas
addr16
mov
fwait
fs
sbb
daa
xchg
mov
stos
xchg
add
inc
mov
xchg
pop
icebp
mov
jb
mov
push
enter
or
cs
jmp
outsl
mov
dec
ljmp
pop
jp
loopne
sbb
or
jnp
and
pop
jo
insl
cmp
leave
cmp
fbld
inc
xor
mov
mov
push
cmp
cmc
cmp
push
cmp
lret
mov
hlt
xlat
jg
mov
dec
es
dec
sbb
mov
xor
negl
scas
adc
adc
movsl
jmp
aaa
fwait
jne
push
and
decl
adc
mov
in
mov
push
sbb
xor
jo
adc
add
mov
adc
pop
loop
adc
dec
mov
or
or
cmp
add
mov
fimuls
sti
or
jbe
enter
loop
in
sub
sbb
mov
or
mov
mov
inc
add
std
push
andb
push
add
es
lahf
xchg
addr16
aaa
gs
testb
fisubs
push
aam
mov
jg
push
std
out
data16
std
push
loope
sub
push
pop
scas
add
sub
push
iret
sbb
sarb
je
xchg
daa
fsub
sub
jae
into
jecxz
stos
mov
dec
jl
pop
cmpl
mov
ficoms
sbb
jns
mov
and
aam
ror
inc
adc
inc
or
enter
sub
mov
aam
rolb
scas
jmp
js
out
stos
ljmp
or
dec
pop
test
or
daa
sbb
enter
dec
ja
ror
les
popf
sti
xchg
xchg
in
jbe
and
jns
and
adc
dec
jo
nop
cmp
jae
aad
sub
cli
pop
inc
scas
inc
lock
mov
movsb
jae
xor
cmp
cmp
push
or
mov
aaa
mov
push
jmp
push
pop
jp
dec
push
mov
pop
xor
lods
mov
mov
mov
enterw
inc
push
jmp
scas
jmp
test
adc
xor
add
dec
jge
je
dec
or
ss
sbb
sahf
xchg
cmpsl
lret
test
mov
mov
repz
test
divb
cmp
gs
lcall
pop
in
call
add
cs
sahf
add
out
mov
gs
mov
adc
adc
mov
sub
clc
leave
xor
mov
fnsave
cmp
testl
pushf
data16
mov
gs
adc
sbb
inc
pop
inc
fistpl
movsl
and
cmp
jno
cmp
iret
xlat
mov
mov
xlat
dec
push
adc
cmpb
aam
lea
mov
mov
add
mov
dec
jo
aaa
add
lods
xchg
or
out
andb
lock
jbe
repz
in
push
dec
inc
jo
lret
xor
mov
jne
mov
or
inc
pop
les
loop
ror
dec
add
clc
or
out
add
mov
leave
mov
mov
jmp
iret
aas
mov
movsb
sarl
xor
sbb
xor
jg
push
or
mov
cmp
dec
test
add
rol
add
push
dec
test
icebp
adc
fidivrl
addr16
aam
xchg
push
mov
loope
in
push
push
mov
adc
das
xor
pop
xchg
xchg
call
movsl
inc
scas
outsb
push
mov
outsl
popa
mov
xchg
jb
aaa
inc
mov
ret
ss
inc
push
bound
outsl
sub
cltd
jl
jle
bound
jnp
dec
xor
lock
cmc
mov
dec
cltd
ss
cmp
test
dec
sub
aas
lahf
subl
out
shlb
sub
aam
shrl
arpl
add
xchg
cli
mov
aas
and
mov
xor
sub
mov
lahf
xor
daa
cltd
stos
inc
xor
ret
dec
cmc
lods
fsubrs
push
push
ret
gs
aas
in
inc
cmp
adc
push
enter
aad
test
dec
xchg
xchg
jb
out
ss
dec
xor
pop
mov
adc
and
xchg
pop
cmp
cmp
jns
jecxz
jne
jecxz
sbb
cwtl
insl
cmp
cmp
or
dec
adc
popf
add
lods
ljmp
xorl
lret
gs
pop
xchg
in
sbb
xor
mov
std
or
adc
push
dec
fs
aad
and
outsb
mov
push
movsb
mov
jae
and
subl
ret
sbb
inc
lcall
in
and
mov
lods
sbb
fcomps
inc
mov
sub
mov
fadds
mov
and
xchg
inc
adc
rol
leave
mov
in
std
dec
arpl
aas
lahf
pushf
movsb
cld
bound
xchg
or
jmp
out
mov
test
mov
andb
dec
cmp
and
pop
test
inc
push
sub
jmp
out
js
inc
ret
sub
outsb
dec
fnsave
in
mov
push
es
and
loopne
into
dec
dec
idiv
icebp
adc
clc
les
loope
in
dec
mov
or
gs
lret
movsl
mov
push
jg
fcmovnbe
pand
inc
add
ret
inc
insl
flds
lds
dec
enter
and
nop
pop
std
mov
and
or
jmp
push
mov
mov
rol
test
xchg
mulb
stc
enter
hlt
and
jb
add
dec
decb
inc
push
or
add
mov
inc
add
jo
test
lods
ja
sbb
shrb
test
push
stos
mov
adc
xlat
insb
imul
subl
dec
mov
push
in
out
jle
movsb
xlat
push
mov
jp
test
pushf
stos
push
scas
push
in
or
push
add
rcrb
test
aad
dec
and
insb
jl
push
push
and
mov
stos
pop
cmp
pop
mov
push
mov
dec
lods
push
fs
push
sbb
sbb
test
popa
mov
mov
shll
or
movsb
imul
fstpt
or
pop
mov
push
jle
cmpsb
jl
imul
icebp
xor
test
les
dec
mov
dec
rcll
mov
sub
add
adc
jecxz
xchg
dec
fsts
xor
jno
lcall
jae
repz
loopne
jle
xchg
push
rolb
pop
or
popf
fimuls
xchg
or
aam
ret
rcr
jecxz
cmp
inc
ds
adc
inc
push
jl
fnstenv
call
pop
in
inc
fwait
mov
push
cld
testb
les
mov
mov
movsw
adc
stc
push
jb
cmp
inc
fistpll
pop
dec
jno
clc
push
pop
adc
ficoms
stos
xor
inc
sub
scas
dec
sbb
xor
xchg
dec
not
push
sbb
pop
sbb
fisubs
mov
or
shlb
jle
pcmpgtw
test
lret
enter
sti
sub
dec
pop
inc
fsin
das
or
sub
or
or
pop
rclb
lods
add
mov
inc
gs
outsl
or
mov
stos
sbb
aas
mov
add
add
cmp
inc
es
loopne
mov
in
mov
ror
push
notl
pop
sub
xchg
push
add
push
outsl
mov
ss
dec
jmp
imul
mov
test
lret
xchg
mov
push
mov
js
jns
shlb
xchg
sub
mov
lretw
xlat
add
jno
mov
dec
imul
das
mov
sahf
inc
jge
mov
mov
inc
mov
out
push
sub
add
jae
jle
lahf
insl
call
pop
loope
inc
call
xor
leave
sub
loopne
xor
jl
arpl
shrl
iret
xor
adc
jnp
push
es
iret
stos
leave
inc
xchg
in
roll
xchg
jp
xor
fwait
add
repz
rolb
cmp
cmpsb
xor
ret
js
fwait
jle
test
imul
test
lock
loope
ds
lods
lahf
jb
fwait
imul
and
jmp
aaa
movb
mov
jae
icebp
dec
sahf
lea
adc
xchg
push
orl
iret
ss
orb
mov
sbb
xchg
in
jne
ret
icebp
test
cli
and
pushf
xor
mov
mov
lret
jl
jle
outsl
rorb
lret
xchg
setg
inc
jno
adc
sbb
out
push
sbb
sbb
push
add
add
cltd
xchg
sbb
sarb
lea
inc
aad
dec
adc
jmp
or
add
and
sahf
mov
enter
leave
sbb
test
lret
mov
inc
jbe
fistl
push
aas
add
push
ljmp
shlb
lods
pushf
mov
xor
out
push
out
test
notb
lea
sbb
outsb
cmp
fidivrs
mov
repnz
cmp
in
sub
xor
imul
push
pop
jmp
lcall
mov
bound
push
gs
int
dec
xchg
push
cmp
adc
mov
cmp
dec
xchg
xor
lret
or
in
pop
xor
mov
cmp
mov
aam
test
cmp
pushf
adc
ja
popf
sub
or
lahf
ds
out
sub
inc
subb
rcrb
mov
sti
or
jno
fcmovne
mov
ja
dec
dec
or
filds
adc
negb
icebp
addr16
inc
mov
xor
mov
lods
jmp
mov
jbe
pop
jge
sub
andl
imul
and
xor
filds
jmp
dec
push
sti
mov
cwtl
sarl
outsl
nop
out
xor
aad
xor
rolb
mov
aam
dec
and
pushf
popa
jbe
lea
aad
lods
and
push
in
mov
stos
push
enter
mov
jnp
pop
xor
cmp
mov
adc
stos
inc
fisubs
sbb
aam
mov
les
rcll
movsb
outsl
pop
fiaddl
sub
xchg
pop
push
mov
dec
out
xchg
addr16
dec
mov
loope
imulb
inc
push
jnp
clc
out
sub
pushf
outsb
gs
clc
negb
loopne
imul
rorb
test
dec
fwait
pop
and
popf
xchg
das
sbb
fwait
jo
popa
test
cmp
dec
repz
stc
cmpsl
add
cmc
xor
xor
outsb
dec
cmpsl
push
iret
xor
popf
xor
insl
mov
cli
data16
lret
ljmp
fildl
ficomps
pop
iret
dec
and
push
jmp
sbb
mov
fstpt
mov
dec
add
adc
xchg
xor
xchg
mov
aaa
addr16
shlb
mov
hlt
out
movsl
xorl
pinsrw
addr16
jmp
mov
js
rcll
jg
push
int3
bound
mov
adc
pop
shrl
mov
frstor
mov
je
je
faddl
out
sbb
pop
ret
inc
repnz
xlat
loop
sahf
fisubl
xchg
arpl
push
push
or
or
lea
jbe
lods
inc
mov
lods
testb
rorl
inc
or
and
inc
sub
fyl2xp1
hlt
xchg
sar
negb
sbb
int3
pop
leave
mov
cli
jo
lods
mov
or
xchg
xchg
scas
sub
jle
jae
and
push
sarb
push
hlt
mov
std
push
dec
pop
sarb
or
les
or
mov
lods
sub
test
xchg
aad
ss
mov
xor
enter
fadd
pop
shrl
in
xchg
xor
push
xchg
pusha
xchg
inc
sbb
popf
jecxz
mov
sbb
sbb
leave
sub
pop
int
mov
sti
lahf
frstor
pop
jae
mov
rcrl
fiadds
mov
out
add
les
test
xor
mov
jg
insl
mov
mov
push
inc
push
cmp
std
in
lcall
or
negb
mov
adc
xchg
dec
mov
ret
mov
xchg
xchg
cli
cmpsb
push
enter
dec
cmp
aaa
inc
mov
sahf
and
add
or
xchg
cmpsb
fs
mov
mov
and
dec
imull
push
out
orl
jns
out
xchg
daa
test
rep
push
push
inc
repz
dec
loope
jecxz
ret
mov
push
mov
dec
repnz
cs
mov
xchg
xor
jne
popf
popa
pop
mov
dec
shrb
xor
sar
aaa
out
jmp
movsb
adc
sub
mov
or
shll
insb
into
mov
xor
add
leave
cs
fwait
mov
fsubrs
push
mov
cmp
pop
add
sub
ljmp
clc
pop
and
push
lret
jnp
sub
mov
or
inc
or
cmp
repnz
xchg
rcll
push
inc
sub
xchg
jp
cmp
adc
loopne
pop
rcrb
adc
xchg
into
cmpsb
xchg
out
cmpsb
imul
mov
pop
aad
mov
mov
ret
jo
aam
adc
shlb
cli
jb
inc
in
pop
mov
push
mov
std
adc
cmpsb
mov
cli
or
xlat
jns
or
lret
fwait
mov
adc
sahf
pop
sub
xor
cmp
mov
out
outsb
dec
mov
pop
push
fbld
and
inc
dec
push
out
or
mov
xlat
sub
in
add
jne
cmp
and
add
test
jno
mov
cmpsb
rclb
mov
jo
add
cli
outsl
test
mov
inc
mov
scas
sbb
add
dec
loope
mov
push
gs
inc
data16
sti
leave
xchg
testl
pop
jle
sbb
sbb
xor
xlat
js
dec
in
je
xchg
out
push
insb
mov
jne
mov
jne
inc
adc
ror
add
int
hlt
jmp
mov
pop
or
cli
lock
aaa
out
xor
scas
lahf
icebp
inc
jns
fs
into
pop
and
gs
sarb
xchg
ret
xor
push
add
sti
jne
xor
lds
jns
mov
ljmp
pop
in
mov
and
push
mov
xchg
push
mov
add
sarl
fcompl
sti
mov
mov
fcompl
aas
sub
jl
adc
cmp
inc
sub
stos
pop
ja
sub
xchg
pop
lret
sbb
inc
test
mov
test
popf
cmp
xor
mov
adc
push
xchg
push
fimull
clc
test
fwait
in
xchg
sbb
mov
mov
mov
mov
jbe
addb
rcr
push
or
shll
arpl
jmp
sbb
sub
decb
clc
xor
loope
xchg
pushf
xchg
repz
push
test
jo
add
rolb
pop
roll
je
push
xor
adc
sbb
xchg
rol
clc
dec
mov
mov
cld
pop
dec
sbb
sbb
daa
xchg
je
lock
gs
aaa
adc
fists
dec
sub
mov
mov
rolb
push
mov
imul
cld
in
idivl
jmp
inc
jo
sti
mov
out
cmp
cwtl
repz
dec
daa
shrb
mov
fisttpll
test
vmovmskps
pop
mov
push
mov
daa
pusha
lods
stos
gs
jae
int
pusha
push
dec
and
lock
fwait
xor
mov
jge
or
sbb
push
push
lahf
lods
das
popl
xchg
ds
pop
scas
dec
js
or
ds
in
adc
scas
mov
test
push
jo
cmp
sub
mov
push
add
push
pop
fs
push
popa
roll
xchg
roll
mov
int3
add
jno
cmp
xlat
mov
enter
bound
adc
movsl
data16
dec
jns
out
sub
inc
push
mov
push
inc
xchg
jb
pop
cmpsl
xor
in
and
fisubrl
jae
push
mov
mov
enter
inc
sub
cli
sub
and
fdivs
mov
pop
jp
mov
cli
jmp
jb
out
xor
in
addl
fs
cmp
pop
adc
aam
dec
mov
movsb
aad
outsl
mov
mov
cmpsb
divl
loop
pop
ss
pop
cld
mov
mul
pusha
lcall
fwait
rcll
jns
xchg
sbb
sti
push
lret
aad
xor
imul
ja
mov
dec
insb
cmp
lcall
jl
mov
test
hlt
addr16
and
adc
and
stc
mov
ret
lds
aaa
mov
cmp
not
in
push
adc
je
iret
mulb
cmc
xor
rorl
mov
or
das
pop
sbb
out
xor
xchg
pop
cmc
xlat
bound
mov
int
dec
std
mov
xchg
out
jle
inc
jmp
jp
mov
pop
mov
and
into
mov
jno
push
pop
out
inc
insb
push
mov
mov
dec
or
pop
mov
pop
sub
test
mov
in
xchg
xchg
push
les
mov
mov
fldcw
shl
fisubrl
jmp
add
xlat
scas
test
jmp
mov
scas
out
pop
outsl
dec
jg
mov
subl
jns
shr
imul
je
pop
int3
jo
out
vmwrite
mov
pop
cmpxchg
add
pop
fmull
mov
mov
das
push
mov
iret
jno
push
and
dec
repnz
mov
iret
cld
test
sbb
out
mov
add
or
add
aaa
sar
push
ja
and
jp
sub
add
fcomi
mov
or
jb
or
js
insl
ds
inc
dec
sbb
mov
fildl
std
imull
clc
pop
sbb
loopne
lcall
cmp
mov
xchg
jl
lock
mov
inc
orl
shlb
and
and
inc
rolb
or
cli
sub
cli
jne
out
adc
xchg
dec
in
loopne
lcall
adc
jno
jge
loop
aad
lcall
fcomps
negl
aaa
movsb
insb
int
push
icebp
pop
daa
xchg
pop
ljmp
inc
mov
inc
and
int3
push
enter
int3
add
push
sub
and
push
push
in
adc
sbb
hlt
aad
mov
nop
inc
in
push
and
jl
mov
lret
xor
addr16
jmp
enter
ret
fidivrl
cmp
adc
aad
push
mov
shll
lahf
jp
pop
loopne
jnp
adc
loop
mov
leave
jg
cmpsl
add
pop
mov
push
loope
mov
test
xchg
xchg
add
icebp
movsb
cs
cmpl
imul
fs
sub
fwait
pushf
jne
pop
mov
pop
mov
and
inc
mov
movsl
loopne
mov
mov
lahf
inc
mov
fisttpl
imulb
icebp
out
sbb
sbb
lods
dec
mov
jb
fimuls
xchg
das
sahf
insl
popa
inc
outsl
shlb
pusha
or
sbb
jbe
add
push
adc
adc
aad
cmp
stc
loope
int
fcomps
adc
dec
mov
pop
mov
xor
mov
inc
popa
xor
lret
ja
fnstsw
out
pop
push
movsl
stos
jp
xor
ret
out
out
out
jns
cli
lret
fbstp
sar
push
pop
cmp
mov
push
mov
add
fdivl
stos
lods
pop
xor
jge
dec
fwait
and
movsb
jg
xchg
or
jl
push
mov
xor
insl
dec
fcmovu
pop
push
jne
cmp
jb
dec
enter
push
sbb
sub
jne
or
fmul
rorl
cmp
in
push
lea
popa
xlat
fucomip
push
or
into
in
int3
dec
push
add
shlb
push
sub
mov
mov
jbe
push
test
inc
jae
scas
cmp
out
xor
int
pushf
xor
inc
mov
mov
jge
aam
mov
cli
das
in
dec
jnp
les
jnp
lret
je
jno
addb
sub
xlat
fcmove
pop
dec
clc
dec
xchg
jp
mov
sub
loop
push
pop
xchg
std
subb
pop
popa
mov
nop
xchg
mov
pop
cld
adc
andl
dec
xor
addr16
outsb
xchg
mov
xchg
mov
jno
and
cmp
xor
mov
test
negl
xor
xchg
pop
divb
pusha
xchg
iret
mov
out
push
scas
and
insb
xchg
repnz
mov
cmpsb
or
adcb
push
shr
imull
and
lea
jb
dec
insb
cmp
sub
xchg
stos
test
xor
imul
adc
cmp
sarb
daa
sub
jae
dec
cmp
pop
js
inc
mov
xor
jo
mov
or
mov
or
sbb
jge
rcrl
push
jae
mov
movsl
imul
mov
cmpsb
scas
hlt
imulb
mov
jne
inc
add
icebp
sub
sbb
jmp
hlt
jb
mov
gs
add
lock
dec
inc
out
mov
adc
add
sub
pop
dec
and
and
xor
hlt
icebp
xor
pop
insb
mov
ret
imul
jecxz
dec
bound
inc
divl
psrad
mul
jle
xor
push
cli
shl
enter
cs
cmp
sub
add
sub
and
ret
imul
filds
fmull
jl
inc
inc
or
jg
sar
add
and
lret
mov
xorl
out
fs
aaa
dec
xchg
popf
jbe
sbb
mov
xor
lcall
mov
fld
leave
lahf
lret
je
pop
mov
fnsave
inc
xchg
out
pop
sbb
aas
inc
loope
test
loopne
lods
jecxz
mov
in
xchg
mov
cmc
std
popl
cltd
roll
out
push
xlat
jge
adc
loope
hlt
and
jb
push
subb
xorb
adc
mov
popf
daa
mov
shrl
dec
add
sbb
push
fs
filds
adc
mov
aas
cmpsb
into
test
cltd
jmp
stos
loopw
lds
in
mov
popf
ja
jae
insl
fisttps
xchg
xchg
sub
jle
shlb
cmp
ss
cmp
lret
pop
daa
inc
outsb
lea
mov
rorl
jge
mov
push
mov
pusha
push
insl
sbb
outsb
mov
push
xor
rorl
mov
adc
out
ljmp
mov
and
popa
push
mov
mov
arpl
push
ljmp
mov
push
out
cltd
sub
adc
jne
stc
push
ret
leave
push
xor
mov
popf
loopne
pop
fcomps
cmp
in
sbb
xchg
test
adc
dec
sbb
push
xchg
sub
stc
into
fsubs
push
mov
xchg
lds
sub
fwait
call
and
jl
sub
pop
test
icebp
lods
ja
mov
cltd
leave
dec
imulb
scas
xchg
mov
sub
divb
jnp
sti
pop
push
outsl
pause
sbb
cmc
in
mov
dec
insb
scas
push
sti
nop
sub
mov
movsb
xchg
in
mov
adc
loope
push
aam
mov
lock
pop
mov
add
sub
mov
mov
xchg
fnstsw
adc
fs
jge
fcomp
sub
mov
lret
sbb
xorb
push
or
mov
fucomp
cltd
pop
stos
mov
push
push
add
je
adc
test
outsl
scas
mov
xchg
daa
mov
mov
jge
mov
xchg
push
aas
add
push
and
xor
jno
adcl
in
xor
sub
clc
xchg
adc
fwait
inc
add
cmp
jg
out
xchg
adc
sbb
fdivrp
mov
std
push
bound
sahf
inc
or
dec
xor
sahf
loopne
dec
insl
push
xlat
jge
imul
punpcklbw
push
test
push
fisubl
out
js
test
jecxz
test
sbb
mov
cmp
mov
pop
icebp
sub
add
test
mov
mov
cmpsb
mov
cmp
ja
mov
scas
das
nop
pushf
daa
and
test
xlat
push
push
mov
sbb
es
xchg
fstpl
sbbl
movsl
imul
es
imul
ljmp
dec
jbe
popf
test
ror
lahf
mov
mov
out
aam
cmp
push
test
pusha
lods
gs
jo
sub
pop
sbb
fisttps
js
sarb
xchg
mov
outsl
jo
outsb
xchg
call
or
push
pop
in
mov
jmp
cmc
and
push
and
push
xchg
jnp
repz
ja
sub
test
xor
lret
xor
pop
enter
pop
and
aaa
mov
arpl
add
or
out
push
sbb
dec
xor
or
dec
cmp
or
jle
int3
insl
push
shrb
scas
or
cld
adc
xor
dec
mov
inc
idiv
data16
lods
fs
fdiv
sarl
sbb
mov
jne
inc
xlat
pop
fcoms
sub
lret
jmp
and
or
test
out
xchg
pop
data16
fwait
sbb
movsb
aam
fdivl
jae
inc
mov
adc
rorl
dec
cmp
xchg
cltd
mov
sub
ss
xlat
inc
std
repz
add
or
mov
repnz
in
sarb
arpl
sub
out
cwtl
sub
js
inc
in
nop
movb
fsubrl
fstpt
in
sbb
or
in
push
lods
xchg
add
mov
ret
dec
pop
fidivl
mov
push
push
sub
rol
fwait
adc
and
pop
push
push
dec
fstl
mov
popf
enter
xchg
xchg
push
cmp
leave
sub
inc
dec
xchg
aas
test
daa
mov
cltd
les
daa
mov
pop
jns
push
stc
roll
xor
dec
mov
or
jge
into
rcrb
and
subl
push
aas
cli
inc
pop
mov
nop
fwait
mov
loop
jle
lahf
xchg
scas
daa
lgs
and
call
js
mov
xchg
ss
xor
int
imul
cmpsl
jb
push
mov
sub
dec
clc
arpl
repz
pop
cmpsb
mov
inc
dec
cs
mov
icebp
sub
repnz
outsb
mov
or
add
adc
sahf
xor
jno
or
push
std
dec
xchg
pop
test
rcrb
sub
idivb
xor
jno
push
mov
cmpsb
xchg
fdivrl
rcll
sub
loopne
pop
xor
mov
aam
fisubrl
xor
pop
adc
adcl
sub
dec
jg
jne
bound
clc
daa
cs
sbb
pop
sarl
nop
mov
xchg
ss
xorb
shl
push
mov
call
mov
lods
mov
icebp
rcl
xor
or
dec
mov
sub
or
fcmovne
out
xchg
add
push
push
xor
jg
ss
dec
mov
push
lods
add
outsb
lcall
outsl
movsb
mov
or
aas
cltd
jbe
pop
outsl
lods
or
dec
scas
je
sbb
sub
jno
jnp
and
add
mov
testb
jle
jb
imul
loope
mov
fisttps
and
dec
cmpl
mov
ds
pop
pop
xchg
jno
pop
sub
call
ss
fdivr
xlat
jns
stos
test
cmp
jns
adc
jmp
cmp
mov
mov
xchg
insl
push
jnp
xor
nop
jnp
cmp
dec
pop
mov
movsb
mov
xchg
mov
add
sub
daa
pop
inc
rcrb
pop
push
inc
shl
into
ss
xchg
dec
push
xchg
mov
mov
popf
popf
xor
iret
xlat
incl
or
mov
les
inc
out
les
pop
cmpsl
mov
fwait
pop
or
sti
dec
push
scas
mov
push
xchg
cwtl
adc
pop
and
lret
ljmp
popa
mov
cmp
or
push
pop
xchg
push
push
jmp
xlat
enter
mov
les
pop
fnstenv
mov
cmpsl
loopne
pop
gs
aam
and
mov
out
mov
cwtl
cmp
pop
stc
push
pop
in
sahf
xor
cmp
inc
mov
fldenv
xor
repz
xor
push
ss
cmp
jo
ret
test
sbb
outsl
lret
std
fiaddl
mov
or
and
popa
pop
arpl
xchg
insb
push
jns
jecxz
in
adc
in
bt
cmpsb
fiaddl
lahf
mov
xchg
ret
add
aaa
add
insb
cmp
push
mov
cmp
add
loope
mov
enter
imul
mov
jno
jo
sbb
aaa
dec
jle
fcoml
xchg
sub
idiv
popa
mov
and
les
pusha
pop
icebp
cmp
sub
mov
std
push
in
insb
mov
jp
cmpsb
jmp
ljmp
aam
fcoms
pop
ficoms
push
mov
lret
call
outsl
and
jecxz
mov
dec
cmp
out
adc
xchg
and
lds
xor
clc
xorb
jge
push
inc
adc
pop
pop
xor
clc
cmp
xor
sahf
loopne
pop
loop
mov
cmp
sbb
sarb
loopne
jecxz
rcrl
test
inc
inc
or
dec
xor
out
orl
pop
ss
cmp
jmp
lahf
mov
xchg
dec
scas
push
fsubrl
iret
cmpsl
lcall
xorb
or
cmp
aam
or
outsb
in
lea
and
inc
fs
fucomip
sahf
je
pop
sub
push
push
jnp
fiaddl
outsb
pusha
or
orb
cwtl
dec
out
push
xchg
out
ljmp
mov
int3
pop
sub
js,pt
dec
dec
pop
jo
xlat
dec
fcmovb
ds
pop
jns
push
push
lock
cwtl
xchg
and
dec
push
adc
inc
orb
adcb
out
xor
push
mov
cmp
lret
mov
sarb
inc
or
stc
adc
ror
ret
inc
mov
mov
sub
sti
xor
leave
xchg
in
shlb
fstpt
inc
lods
es
push
in
dec
and
inc
mov
or
cmc
lcall
insl
push
insl
cwtl
mov
push
mov
ret
cwtl
addr16
mul
faddl
and
inc
in
std
adc
stos
dec
aaa
jle
mov
pop
ljmp
xlat
shlb
outsl
mov
cmc
repz
aam
inc
fstl
ljmp
add
ret
in
sahf
cli
stos
xor
stos
dec
jns
xorl
mov
leave
je
mov
loope
push
scas
add
xchg
gs
push
divl
fdivrl
scas
fsts
in
xchg
add
or
xor
xchg
movsb
mov
lea
rdpmc
ds
cltd
les
inc
sbb
mov
inc
test
aas
lahf
xchg
mov
pop
insb
sub
sub
fiaddl
sub
arpl
mov
jmp
loopne
jae
pop
subb
xchg
scas
push
add
lcall
and
jne
nop
xlat
fisubrl
xchg
mov
je
fcom
sti
addr16
cmp
jge,pt
ret
xor
sbb
sar
mov
sti
into
pop
xchg
movl
cmpsb
cmp
mov
pusha
jae
xchg
xchg
adc
xchg
xor
lods
pusha
pop
jae
scas
dec
nop
test
ds
push
cmp
xorl
mov
mov
xchg
mov
stc
cli
mul
jle
xchg
enter
mov
xlat
pop
xlat
mov
cmp
cld
mull
lods
pusha
mov
push
dec
mov
stos
cmpl
sbb
mov
pop
pop
mov
pop
jnp
add
dec
notb
mov
sub
daa
ljmp
adc
lea
sub
mov
out
leave
sub
sbb
dec
in
xchg
clc
insb
fdivr
fsubr
inc
pop
sbb
adcl
sbb
sub
dec
lretw
popa
jge,pn
ret
aam
ret
or
dec
fcmovne
adc
in
mov
inc
add
add
loope
repz
cltd
mov
out
dec
mov
pusha
out
leave
shll
popa
jle
cld
xor
test
and
jns
push
mov
scas
clc
fs
jno
push
pushf
push
push
mov
push
das
push
hlt
addl
sub
dec
xlat
cld
popf
add
out
adc
fsubl
inc
xlat
lret
jle
jae
xchg
mov
xchg
cwtl
push
push
jl
jecxz
xchg
sbbb
cmp
push
mov
and
xchg
pushw
and
jo
in
xlat
or
mov
mov
and
jns
dec
lods
enter
adc
xchg
adc
xor
stos
insb
nop
push
jns
movsb
js
fdivl
adc
xchg
jg
test
mov
ffree
push
pop
inc
pop
call
je
fs
bound
negb
sbb
and
mov
jecxz
mov
push
inc
popf
loop
cmp
sub
sub
inc
movsl
lds
fdivp
pop
jp
pop
loope
insb
das
into
test
cli
pop
lret
add
ljmp
notl
cmp
je
movsb
push
add
cmpsl
hlt
lea
lcall
jecxz
test
pop
add
push
cmp
popf
jmp
sbb
cld
jb
in
shl
fstpl
ss
in
mov
add
lret
shr
push
push
push
in
xor
leave
add
imul
pop
lahf
rcll
in
mov
dec
mov
or
jnp
sub
push
pop
mov
aaa
mov
outsl
xchg
not
xlat
sbb
aas
push
movb
ds
popa
loopne
fsubrl
xchg
dec
adc
mov
cwtl
sub
shlb
test
or
xchg
push
xchg
sbb
loopne
addr16
push
jo,pt
or
xor
pop
data16
xchg
imull
loop
mov
or
rclb
sub
out
dec
mov
js
cwtl
mov
aam
cmpb
add
movsl
dec
dec
clc
push
mov
mov
dec
out
aas
movsl
in
jecxz
jp
dec
push
sub
scas
out
pop
push
xchg
adc
jl
jecxz
lahf
jbe
stc
fs
xchg
push
adc
lret
cwtl
ja
cmp
sub
lods
outsl
out
cmp
push
testl
lea
loope
mov
jbe
inc
add
aaa
div
jns
mov
cmc
mull
and
push
clc
xchg
repz
jle
cmc
xor
push
lret
in
fsubl
outsl
push
mov
fstpt
pop
rcrb
addr16
and
jnp
lea
sar
orl
pop
mov
mov
sbb
das
pop
stos
shl
loope
add
scas
xchg
jg
push
popa
test
outsl
jl
out
stos
ja
jmp
pop
or
xchg
cmp
rcr
push
test
pop
dec
adc
mov
add
enter
pop
inc
adc
mov
loopne
arpl
xchg
in
outsb
or
adc
scas
popa
xlat
jbe
push
pop
in
les
sbb
sbb
out
xchg
pop
push
sbb
xchg
aam
loope
cmp
outsl
gs
fiadds
repz
cmp
addb
shlb
jl
or
xchg
mov
xor
subb
jo
xchg
xchg
mov
mov
repz
dec
int
push
sbb
jg
push
mov
sbb
mov
insb
cli
call
mov
lret
push
jb
xchg
xchg
in
xchg
pop
lods
lahf
xor
adc
push
aam
shll
inc
xor
cwtl
fcmovu
nop
lods
out
test
js
repnz
add
or
insb
jno
popa
jns
nop
push
xchg
mov
cmpsb
popa
in
lret
lret
push
ret
cmpl
nop
cmp
outsb
jbe
not
adc
pop
add
fdivs
inc
cmc
push
push
mov
lock
sti
dec
jmp
imul
mov
push
lcall
and
mov
dec
pop
sbb
lock
lret
xor
pop
mov
adc
enter
pop
jno
sti
cmp
jmp
sub
sbb
movsb
adc
cmp
xchg
jns
mov
and
xor
pop
xor
sbb
xchg
gs
add
adc
data16
out
out
jmp
sub
es
inc
inc
into
hlt
fisubrs
inc
and
lods
movsl
out
pop
divb
sub
aas
popf
mov
rolb
test
scas
push
pop
clc
or
jg
mov
sub
outsl
std
enter
add
bound
lret
pop
jge
in
pop
andl
pushf
adc
mov
sti
div
test
ficompl
ret
lcall
mov
push
insl
imul
ja
mov
or
add
dec
mov
jle
xlat
stos
and
jmp
pop
mov
imul
xor
cwtl
mov
ret
jb
pop
push
out
test
or
and
dec
cwtl
cmp
das
mov
daa
sub
imul
call
movsb
mov
fcompl
sbb
test
xor
in
sbb
cmpsb
rcrl
fsubl
push
lods
cmp
daa
adc
push
aas
es
testb
in
xchg
cwtl
or
inc
pop
mov
shl
lcall
inc
leave
rorl
push
xchg
pop
call
jg
inc
ret
add
mov
add
mov
sbb
ljmp
aas
cmp
pushf
repnz
sbb
add
loope
xchg
das
repnz
push
adc
or
xor
jmp
mov
mov
fnstsw
ret
enter
addr16
inc
lahf
movb
stos
cltd
push
xchg
mov
cmpsb
mov
enter
es
inc
mov
int
shl
dec
iret
cli
dec
imul
decl
shlb
mov
xchg
mov
add
sub
push
aas
mov
push
jmp
push
rcll
sbb
pop
cmp
std
negl
dec
adc
dec
fmuls
dec
pop
dec
xlat
ljmp
js
stos
inc
mov
fidivs
mov
outsl
aad
fisttpl
jb
push
lock
sub
mov
xchg
mov
jp
xchg
mov
dec
shll
and
subb
inc
push
dec
fstl
cmc
adc
es
aam
mov
mov
in
pop
xchg
mov
repz
xchg
xor
pop
fdivrs
cmpsb
out
cld
aas
mov
pop
rcrl
inc
ret
fwait
out
nop
bound
adc
xorl
jb
rclb
jle
repz
leave
fucomp
lock
cmpsb
jo
pop
lahf
dec
sub
xchg
pop
aaa
xor
fs
dec
idivb
pop
cmp
fsts
lret
ja
xor
mov
popf
data16
cmp
notb
adc
fisubrs
inc
xor
popa
mov
int3
orl
insb
xchg
fidivl
add
into
sbb
mov
pop
dec
mov
test
loop
out
cmpsl
xchg
mov
stc
xchg
pop
and
divb
jno
fcomi
lods
mov
mov
pop
jno
xchg
push
sbbb
or
sti
es
adc
sbb
repnz
add
dec
jne
adc
push
aas
loop
aam
xor
je
mov
push
mov
test
add
dec
inc
sbb
aas
or
add
lret
jl
sarl
ljmp
lea
cmp
hlt
adcl
inc
movsb
fistl
jle
push
hlt
pop
notb
add
stc
xor
and
out
sbb
roll
xor
fcompp
aas
leave
out
cmc
mov
outsl
inc
dec
aaa
cmc
dec
mov
mov
stc
clc
je
jne
cmp
mov
xorl
xor
repz
xor
mov
inc
mov
mov
xor
mov
mov
pop
push
into
xor
leave
xor
jmp
sti
and
mov
notb
sahf
leave
jle
dec
xor
push
stc
or
loop
jle
test
xchg
sub
jmp
mov
sbb
imul
orb
jbe
outsb
adc
dec
cmp
ret
in
int
push
pop
or
push
sbbb
test
or
mov
pop
or
sub
sub
leave
ret
adc
mov
push
mov
push
sbb
cltd
ss
mov
iret
sbb
xor
xor
jo
mov
imul
call
jg
outsb
pop
or
repz
fidivl
sub
cld
imul
pop
add
pop
aam
pop
out
dec
outsb
lds
jp
sbb
inc
sbb
add
and
adc
push
adc
cmpsl
cmp
inc
out
cmpsb
fs
and
cli
shll
mov
popf
leave
mov
and
jmp
push
call
xor
daa
dec
dec
inc
sub
xchg
jno
sbb
in
or
pop
addr16
mov
sub
and
aad
std
dec
ja
jns
js
incb
mov
popw
movsb
out
jge
xor
fdivrs
ja
cmc
in
mov
hlt
cmpb
push
dec
jg
xlat
and
push
xchg
test
mov
loope
outsl
mov
enter
jo
daa
jg
lods
cmpl
push
jmp
out
cltd
insl
lahf
or
mov
mov
mov
ret
movsl
rcrl
jecxz
dec
fwait
xchg
mov
pop
or
sbb
bound
sub
shr
in
aas
shrb
or
in
je
lret
les
mov
xchg
mov
insl
sub
outsl
scas
call
rcll
inc
fsubr
jle
loope
mov
bound
iret
scas
cmp
test
aam
xor
inc
pop
push
jmp
cmp
jns
cmpsl
push
je
sub
std
fs
ficompl
xchg
add
pop
ret
fldlg2
subl
insb
les
test
filds
and
mov
dec
lret
out
xchg
add
orl
mov
cmc
xchg
out
sbb
or
xor
mov
mov
xchg
pop
jae
xor
add
xchg
push
pop
mov
cmp
xchg
add
rol
sbb
mov
mov
mov
movsb
mov
addr16
fnstsw
inc
push
cmc
lods
xor
push
mov
pop
cmp
inc
ficompl
push
pop
ja
mov
fdiv
adc
mov
pop
inc
xor
push
pusha
enter
xor
movsb
mov
jge
mov
push
add
dec
inc
pop
movsl
rol
out
sbb
mov
adcb
popf
mov
mov
xchg
cltd
mov
stos
jo
cwtl
addr16
jle
js
mov
jbe
xchg
jno
mov
sbbb
pushf
lcall
sub
movsb
push
jns
test
inc
insb
adc
pop
jecxz
out
addl
aam
int
or
loope
cld
push
jp
sub
jecxz
xchg
sub
mov
in
xchg
xor
lret
sub
cmpsb
mov
cmp
push
mov
dec
mov
stos
jl
xchg
xor
mov
bound
ljmp
xchg
aad
es
popf
loop
cmp
mov
lds
pop
test
filds
push
pop
or
fwait
call
pusha
jg
ss
mov
cs
rolb
or
pop
push
test
movsl
xchg
in
ljmp
cmp
daa
mov
push
jne
push
mov
push
ficoms
mov
inc
mov
mov
fidivs
test
inc
ja
inc
add
mov
sarb
inc
in
add
or
pop
cmp
stos
jne
mov
out
mov
xor
adc
es
push
inc
scas
loopne
mov
add
call
fnstcw
lret
scas
sbbl
mov
fcmovbe
xor
inc
rcrl
iret
pop
mov
jne
in
inc
lahf
xchg
mov
std
mov
mov
and
push
imulb
xchg
rcr
inc
pushl
in
or
fsts
add
into
test
jmp
mov
gs
add
xchg
decb
push
popa
fldl
aad
rcrb
pop
mov
jmp
cmp
jle
and
loope
adc
adc
adc
aas
sti
iret
add
out
cmp
fwait
or
xchg
sub
rcrb
mov
pop
jge
leave
repnz
dec
js
dec
xor
push
push
push
outsb
stos
inc
mov
sub
push
cmp
xlat
fstp
cmc
pop
lods
hlt
addr16
scas
mov
hlt
leave
ja
outsb
cmpsl
push
and
xchg
push
or
xlat
lds
lock
mov
pop
out
push
gs
inc
pop
std
fildll
mov
test
fbstp
push
insl
aaa
fmull
jle
inc
xchg
mov
xor
incb
and
addr16
roll
sbb
adc
sbb
test
roll
add
dec
ret
cmp
xchg
pop
sbb
movsl
adc
icebp
jne
cmp
push
dec
inc
leave
lock
sbb
data16
mov
pop
scas
mov
or
mov
pop
faddl
cmpsb
xchg
pop
in
adc
inc
adc
cmp
test
push
mov
imul
lcall
xor
aas
out
jae
adc
cmp
lea
dec
arpl
mov
adc
cmc
push
xor
pop
cmpl
gs
cmp
imul
daa
and
mov
addr16
adcl
cs
es
and
push
or
xchg
daa
cmp
or
or
sti
push
sbbl
adc
test
out
sahf
fidivrl
cltd
mov
test
iret
sbb
cli
sub
push
roll
mov
fldl2e
cmp
jecxz
fistps
xchg
push
xor
lcall
jecxz
rcrl
mov
pop
xlat
adc
push
hlt
das
push
pushf
and
cmp
fsubl
outsb
sti
bound
pop
push
lds
es
and
mov
mov
cs
dec
and
push
jo
push
lret
pop
repnz
std
mov
xor
jl
mov
mov
xor
or
pop
mov
cwtl
dec
ficomps
cmp
jmp
rol
cmpsl
ljmp
add
xchg
mov
lcall
cmp
cmp
jnp
add
stos
cmp
rcl
sti
mov
clc
mov
and
and
stos
xchg
test
cmp
call
fcmovnb
xchg
jge
in
jne
push
or
push
dec
aam
mov
jne
test
mov
add
push
arpl
adc
jb
and
lret
es
mov
mov
lock
ret
rorb
loope
or
mov
insl
lret
sub
xchg
cld
out
pop
loope
cmp
fwait
stos
jnp
inc
cmp
inc
clc
outsl
mov
jecxz
xor
jmp
out
sbb
cld
out
and
mov
sub
movsb
xchg
je
add
ss
icebp
mov
ret
ss
je
pop
or
jne
andb
add
bound
lret
inc
aad
inc
mov
shll
or
scas
cltd
xorl
inc
loopne
in
test
jo
sbb
aad
add
in
pop
sti
nop
hlt
xchg
outsb
add
dec
stc
arpl
sbb
out
das
xor
push
pop
das
xlat
fsubl
add
in
cli
shlb
mov
pop
outsl
sti
or
mov
xchg
jae
mov
push
fdivs
jmp
cmc
imul
arpl
jg
cmp
mov
xchg
dec
push
push
adc
popf
stos
lret
push
add
mov
lahf
clc
push
and
pop
push
pop
movsl
out
clc
inc
scas
mov
sbb
ljmp
ret
inc
shlb
dec
adc
and
push
aas
test
dec
mov
incb
pop
and
mov
cld
xchg
and
cmpb
xchg
lahf
sbbl
inc
imul
cmpsl
into
and
pop
adc
enter
push
stc
movsb
shl
mov
outsl
lods
add
mov
push
out
daa
and
nop
jge
sub
cld
mov
stos
mov
addb
out
sbb
scas
sub
ror
stos
and
jb
pop
pop
push
call
sar
mov
cmp
or
cltd
fdivl
inc
push
roll
pop
inc
imul
lds
dec
test
mov
lret
add
mov
cld
cmp
leave
test
dec
cmp
push
daa
ss
xor
inc
in
iret
lods
repnz
xchg
cmc
xchg
push
out
loope
inc
mov
sbb
subb
mov
pop
jae
mov
fimuls
loopne
push
inc
mov
pop
cmp
inc
das
ljmp
sbb
or
xlat
sar
dec
xchg
jg
push
dec
imul
sub
int
push
dec
mov
insb
push
cmpsl
sub
mov
test
jp
add
int3
lret
inc
stc
hlt
inc
inc
mov
jmp
jge
std
into
dec
js
mov
add
jl
add
mov
mov
aas
mov
std
test
test
jbe
scas
push
aas
stos
sub
jl
aas
mov
jp
int3
pusha
and
rclb
xchg
sbb
cs
dec
fldpi
add
popf
push
flds
sbb
pop
xchg
xor
sub
js
inc
sbb
lret
dec
movsl
xchg
fwait
int
mov
xor
xchg
adc
fistl
cmc
lret
mov
roll
add
sub
insb
xchg
aas
sub
into
repnz
loopne
sub
push
mov
enter
addr16
ja
in
mov
fstpt
ljmp
jmp
imul
lds
mov
push
sub
adc
jne
and
push
lock
xchg
lahf
pop
mov
jp
jae
ja
fildl
inc
aaa
jge
xchg
std
xor
hlt
inc
dec
mov
lcall
icebp
in
rclb
or
lods
dec
ret
mov
fs
sarb
and
sub
std
bound
iret
add
pop
into
sahf
je
xchg
push
dec
loopne
outsb
pop
inc
jg
adc
movsl
lds
dec
gs
sub
lret
or
and
xchg
dec
xor
sbb
inc
push
dec
xchg
mov
dec
int
push
lock
xchg
sbb
dec
je
xchg
pop
or
aad
stc
sahf
popa
es
jp
sbb
fistl
add
inc
stos
das
jl
stos
enter
movsl
xor
fcompl
xor
and
je
rclb
imul
data16
jle
jno
or
cmp
fnstsw
push
out
mov
movsb
mov
pop
es
js
filds
pusha
inc
pushf
cmp
xchg
idivb
out
mov
mov
xchg
mov
push
cld
xchg
cmp
add
outsb
movsl
sarb
popw
fdivp
enter
push
cs
incb
mov
adc
loope
mov
ds
push
cmc
ja
mov
xchg
leave
jne
cwtl
jb
and
xor
add
aad
leave
xchg
lock
adc
sub
addr16
in
dec
and
je
scas
sbb
mov
mov
xor
or
mov
lcall
insl
cmp
adc
lods
dec
or
fs
push
push
hlt
fsubrp
mov
call
mov
subb
push
outsb
nop
leave
pusha
dec
inc
xor
out
daa
loope
add
cwtl
movsb
jp
mov
outsl
movsl
mov
or
mov
ljmp
punpckldq
lret
xchg
shrl
fimuls
adc
dec
mov
dec
lods
cmp
clc
jae
imul
inc
and
or
jecxz
xlat
push
mov
into
shrb
ficoms
aas
test
cmp
imul
dec
add
cwtl
mov
pop
inc
sbb
adc
mov
xchg
pusha
push
dec
dec
std
sub
cmp
rcrb
and
mov
push
cltd
jbe
sahf
inc
jbe
lods
and
shlb
sbb
movsb
sbb
das
sub
test
cmc
leave
lods
lret
sahf
aaa
repz
push
test
mov
rclb
fisubl
mov
jmp
cmp
lret
outsl
cmp
jne
push
shlb
mov
inc
mov
pop
cs
rclb
sahf
popa
enter
inc
mov
loopne
or
movsb
push
jae
push
push
mov
stos
dec
fcoms
pop
stos
pop
jno
mov
lea
mov
mov
sub
cwtl
pop
sbb
and
sbb
out
test
fistpl
movsl
cmp
stos
cmpsl
push
loop
push
mov
je
or
jmp
push
jge
lret
push
mov
push
rolb
push
loopne
cmp
mov
mov
insl
and
adc
jo
ficoms
ret
mov
inc
sub
mov
ucomiss
mov
and
lods
dec
or
cmc
loope
jl
popf
arpl
repnz
and
stos
and
inc
out
cld
mov
loop
xchg
fsts
xchg
or
aad
aam
and
fidivl
pop
fisttpll
mov
mov
pop
fucomi
lds
sbb
xor
inc
loope
mov
xchg
loopne
sub
mov
es
adc
stos
hlt
jbe
dec
mov
push
int3
xchg
mov
pop
pop
cmp
shlb
adc
mov
push
loop
lods
push
ret
scas
fimuls
insl
imul
test
push
jae
xor
or
mov
lret
mov
mov
jo
mov
xchg
sbb
scas
cmp
divl
sub
mov
in
mov
sbbb
clc
sbb
sbb
jmp
sarb
inc
cmp
shrb
dec
jecxz
out
sub
push
and
adc
lock
jp
ficoml
jo
sahf
push
mov
ret
mov
and
flds
js
xchg
lret
clc
fbstp
dec
xor
imul
push
stc
imul
ljmp
dec
dec
je
stc
dec
or
cld
mov
imul
cmp
sub
and
rcl
jmp
cmp
cltd
jno
enter
rclb
pop
mov
mov
test
push
mov
popf
cmpsb
pop
add
mov
jle
lahf
jno
aas
cmpsl
lods
pop
dec
mov
add
out
sub
aaa
push
push
out
sub
fcomip
and
cmp
mov
inc
addr16
ds
inc
arpl
sbb
or
pusha
pop
lods
and
and
lret
push
mov
aam
out
jg
push
je
ja
cltd
movl
add
insl
mov
test
pop
js
jg
xorl
and
in
push
jl
and
ret
lcall
test
shlb
pushf
loopne
xlat
jecxz
mov
adc
fwait
adc
pop
mov
and
mov
sbb
or
pop
popa
int3
cltd
jno
mov
pushf
int
fsubrs
adc
push
xor
inc
das
mov
outsl
fldenv
cmp
and
outsb
mov
push
jp
adc
aam
imul
xchg
bound
jecxz
pop
sbb
movsl
mov
shl
cmp
push
ret
jl
or
outsb
loop
lret
cwtl
rorb
pop
cmp
dec
and
jecxz
adc
aam
sub
pop
xlat
cmp
pop
sahf
pop
sbb
shll
sbb
cmp
mov
insl
jg
pusha
outsl
clc
out
repz
or
loop
mov
cmp
push
cmpsl
and
sub
lods
sub
jmp
shrb
sub
push
cmpsb
xor
hlt
ficoml
aad
mov
leave
push
jle
xor
jp
sub
out
imul
test
sub
aam
mov
xchg
das
xchg
divl
rcr
mov
shlb
cmp
xchg
ja
dec
pop
rcll
xor
stos
cltd
ljmp
aas
rclb
loop
icebp
ja
or
add
cmp
daa
cmp
data16
subb
dec
push
fdiv
xchg
mov
mov
and
mov
xchg
fldt
shl
aad
in
xchg
ret
les
insl
adcl
mov
push
rcrl
lea
mov
cmp
or
repnz
int3
sti
aaa
icebp
inc
divl
lds
aas
inc
jle
int
xor
int3
jle
xor
xchg
mov
push
jo
in
push
sbb
mov
jecxz
outsl
dec
sub
hlt
cmp
imul
notb
mov
call
jo
add
dec
adc
sahf
mov
outsb
adc
cmc
outsl
notb
mov
dec
adcl
cmp
xor
dec
loope
cmpsl
xchg
test
mov
test
arpl
fistl
in
sbb
leave
xchg
imul
adc
mov
cli
lock
outsb
push
push
dec
or
sub
incl
pop
aam
sbb
pop
pop
push
dec
and
jge
and
dec
jb
xchg
pop
sbb
cld
movsb
cwtl
insl
sub
lret
xchg
adcb
dec
mov
int
mov
cli
ds
mov
xor
cld
test
cld
ljmp
xlat
push
icebp
inc
xchg
subb
pop
push
or
mov
push
or
sar
push
xor
dec
dec
imul
hlt
mov
subl
stos
test
add
xor
or
dec
insb
pop
xor
jbe
mov
xchg
jl
mov
rcrb
loope
rorl
mov
int3
pop
and
xor
xor
rcll
orb
mov
mov
das
fildll
aad
xlat
adc
call
cs
test
into
jl
dec
xchg
mov
inc
sbb
dec
pop
add
and
notl
les
jb
xor
insb
xor
and
iret
ds
jl
das
imul
fisubs
and
test
lods
insb
pop
movl
mov
pop
add
stos
roll
repnz
jns
sahf
push
push
sub
mov
inc
xchg
push
int
lods
xchg
xrelease
aaa
fistl
inc
xor
xor
in
cwtl
and
inc
and
in
fcomps
sub
mov
add
xchg
lock
stos
jo
out
in
fninit
lret
and
out
dec
jle
loopne
shrd
cmp
ja
jne
inc
sub
inc
les
repz
loop
repz
jmp
js
xor
iret
xchg
out
adc
adc
push
jne
sbb
dec
inc
push
sub
out
sti
fidivl
mov
sbb
dec
pusha
sti
mov
mov
push
fwait
and
and
pop
fisubs
ret
jle
jmp
and
mov
jbe
add
loop
mov
xor
rorl
shrl
out
loope
lret
in
ret
adc
pop
pop
pop
into
jae
adc
and
cs
pushf
neg
cmpsl
adc
pop
mov
dec
jge
xchg
inc
cmp
sub
add
lret
or
scas
jns
mov
sbb
stc
jecxz
outsb
sbb
call
movb
fbld
sub
jae
ds
mov
sbbb
mov
sahf
dec
lds
pop
mov
xchg
pop
fcomps
mov
mov
test
mov
cmp
inc
or
pusha
pop
int
ret
jns
sub
jne
lods
popf
sbb
xchg
add
adc
inc
push
pop
dec
lea
fdivr
outsb
cld
imul
push
adc
outsl
fistl
sub
imul
mov
popf
xor
mov
shll
mov
nop
loop
out
adc
loope
mov
adc
push
pop
mov
rcl
rol
filds
jae
mov
sahf
or
aaa
daa
inc
xor
lods
xchg
js
addr16
dec
jns
push
mov
cmp
enter
inc
sbb
and
adc
rclb
dec
xor
inc
jb
jbe
enter
das
fimull
or
sbb
inc
push
fbld
xchg
pop
scas
enter
cld
sub
pushf
cld
dec
jae
and
mov
pushf
hlt
jns
mov
icebp
xor
cwtl
and
in
sub
push
lcall
push
xor
aas
clc
mov
and
jae
scas
into
cs
xchg
mov
or
sub
or
jl
je
cmp
sbb
popf
and
mov
jo
push
jo
cli
gs
pop
fimuls
push
sbb
cwtl
lock
out
cli
neg
cmpl
xchg
xlat
lds
cmpsb
jg
add
fldcw
clc
stc
lahf
js
sub
mov
fiaddl
jb
pop
mov
jb
cmpsb
inc
cmp
xor
cwtl
das
add
cld
jecxz
xchg
test
sub
sbb
jl
les
cs
aaa
mov
pop
das
jo
outsl
andl
cmpw
dec
jp
dec
jb
mov
pop
push
sub
jge
div
aas
fwait
xor
jb
xchg
icebp
imul
nop
out
nop
jae
out
mov
ja
jmp
shl
mov
jb
xchg
push
mov
dec
mov
adc
mov
data16
jae
xor
xchg
pop
shll
lcall
dec
imul
shr
insb
dec
sbb
movsb
test
addr16
cmp
xchg
mov
jbe
add
mov
stc
imull
cmc
dec
ss
or
cmp
xor
lds
arpl
mov
and
aaa
push
xor
cld
cmp
rorb
jge
int
xchg
fisubrl
testb
cmp
inc
push
xchg
xchg
and
and
push
sub
nopl
dec
inc
bound
pushf
in
xchg
out
leave
mov
jae
sub
pop
adc
mov
fmul
add
roll
lock
or
js
loopne
mov
cmp
mov
ljmp
push
push
sub
outsl
mov
lahf
add
push
fstp
mov
shlb
sahf
push
xor
int
sbb
mov
repnz
jle,pn
andl
pusha
and
jge
lahf
out
jnp
inc
scas
adc
sub
push
cwtl
cmpsl
movsb
push
int
or
or
out
sbbl
pusha
test
add
icebp
pop
fcomps
jnp
fs
mov
subl
jge
mov
mov
adc
aad
loop
sti
stos
or
xchg
je
pop
in
pop
stos
mov
jg
sahf
rorl
fldcw
add
push
and
sub
clc
and
push
jmp
push
sbb
hlt
jo
std
or
pop
je
out
xchg
ljmp
inc
cli
mov
mov
mov
push
sub
addb
test
or
dec
mov
icebp
in
or
add
cli
mov
sbb
push
sub
movsb
es
sbb
cmp
loop
push
dec
in
xor
imul
loop
test
bound
shrb
icebp
dec
xchg
scas
stc
pusha
inc
mov
mov
pop
stos
vucomisd
test
fsubrl
xlat
jnp
and
dec
sbb
aad
pop
cld
sbb
std
cmpsb
arpl
and
sub
call
pop
ja
stos
cld
sub
cmp
ret
xor
mov
sbb
cmp
push
sub
js
dec
and
dec
mov
dec
loopne
pop
push
push
dec
fistpl
movb
in
xor
or
add
aaa
cs
add
out
orl
mov
loop
jecxz
push
notl
pushf
jmp
hlt
sahf
icebp
xlat
imul
movsl
divl
in
cwtl
lock
sbb
daa
out
adc
mov
push
pop
cmp
insb
cwtl
stos
fmull
mov
aaa
xchg
xchg
idiv
mov
out
push
pushf
mov
and
xor
in
lods
fisubl
cmc
mov
test
fwait
aad
and
fmuls
ja
rcll
mov
sbb
inc
jae
add
mov
mov
pop
pop
imul
fwait
fcmove
or
dec
xchg
xchg
wrmsr
fdivrl
mov
je
fldcw
fwait
lahf
aad
jl
xchg
push
fldt
shll
rorl
xor
xlat
fimuls
push
push
pop
cwtl
inc
cmp
xchg
mov
push
xchg
outsl
xchg
mov
subl
pop
pusha
inc
cmp
jle
mov
clc
fnsave
jl
mov
cmp
add
mov
fs
mov
push
adc
into
push
lock
add
push
stos
or
cmp
push
test
ss
jmp
mov
stc
inc
pop
jg
xchg
fs
jae
fisubs
div
mov
ret
mov
dec
int3
repnz
pop
adc
inc
inc
lods
xchg
and
add
pop
jnp
scas
int3
add
clc
push
pop
sbb
jnp
cwtl
int3
pop
sub
loope
add
push
scas
fbstp
sbb
jmp
xchg
cmc
or
out
jp
scas
arpl
mov
cli
xchg
mov
gs
add
cmp
jno
push
mov
call
aad
mov
xor
mov
mov
notb
cmpsl
sub
out
push
mov
cmc
push
fisubl
mov
cmpsl
jg,pt
bound
ds
and
jp
testl
test
xchg
push
ja
sub
addb
out
or
ds
clc
out
pop
and
fisubl
cmpsl
sbb
movsl
dec
or
and
sbb
loopne
and
jne
jecxz
in
es
sbb
pop
sub
aad
adc
push
dec
fs
push
inc
loope
and
imul
cmp
add
mov
in
loope
repnz
sarb
lret
cmp
sub
push
push
push
in
mov
cmp
mov
ret
mov
sbb
out
ljmp
cmp
scas
push
push
push
lret
sub
mov
add
cmp
in
popf
xchg
pop
jle
stos
out
sbb
test
dec
pop
loope
out
jecxz
mov
popf
rorl
inc
push
inc
or
mov
ja
add
push
negl
mov
cmp
cli
jl
mov
loop
xor
xchg
xchg
mov
jno
fs
sub
out
push
je
les
pusha
in
js
icebp
push
adc
jne
dec
dec
je
push
sbb
mov
mov
push
js
fistpll
mov
push
pop
repz
jecxz
ret
sbbl
mov
test
js
pop
or
sbb
xchg
ficomps
cltd
and
lods
push
pop
mov
mov
sbb
jne
dec
test
mov
mov
jns
mov
push
jb
loope
xchg
nop
mov
icebp
or
cmp
cmp
cli
sbb
gs
mov
xlat
lret
orb
cld
jno
negl
ss
pushf
mulb
add
sub
jns
xchg
lcall
sub
push
inc
inc
hlt
test
push
mov
sbb
inc
cmp
jne
mov
sub
aad
nop
mov
pushf
mov
push
orb
cs
mov
shll
mov
sub
and
sub
aam
addl
jg
sbb
fnstcw
pop
rcrb
sti
sub
mov
mov
fidivrs
pop
shll
push
add
loopne
push
cmp
jo
ljmp
mov
pop
cltd
inc
inc
sar
test
aas
xor
lcall
bound
insl
pop
fldcw
and
or
stos
in
pinsrw
fld
aaa
insb
adc
and
mov
mov
mov
add
push
fisttpl
sbb
out
in
stc
pushf
add
or
loopne
sti
das
jne
fstl
imul
sbb
dec
inc
sub
sub
pop
jle
adc
in
mov
dec
push
xor
lock
aaa
fistps
testl
push
jl
in
inc
inc
leave
and
adc
cmp
adc
mov
out
lods
xchg
cs
mov
mov
andb
dec
mov
push
jge
or
ljmp
pushf
mov
and
ret
popa
pop
mov
and
jle
jle
je
imul
and
jb
adc
stos
dec
add
mov
stc
sbb
xchg
mov
rcrb
cld
test
mov
ret
pushf
and
int3
push
push
test
fsubl
das
fdivr
jecxz
or
imul
shrl
ljmp
pop
push
jp
js
xor
jl
or
push
sub
lcall
test
jl
add
test
xor
shll
jb
sub
outsb
mov
hlt
setae
popf
enter
dec
sbb
cs
sbb
daa
push
cmpsb
lahf
test
dec
out
and
and
faddl
pop
loop
les
xor
cmp
mov
sbb
insl
and
bound
xchg
cmc
mov
mov
xchg
rcll
sbb
divl
psubusw
xor
push
in
mov
shll
sbb
sub
ror
xchg
mov
cltd
mov
or
and
xchg
cli
sahf
dec
pop
mov
fisubl
int3
sbb
cmp
mov
fidivrs
pop
fcoml
mov
mov
lock
in
roll
rcrb
lods
mov
negl
push
out
dec
shlb
ret
xchg
sub
not
pop
rolb
out
loope
bound
xchg
int3
pop
data16
push
mov
clc
mov
shr
add
adcl
jecxz
xor
mov
fisttpl
adc
jecxz
imul
sbb
sub
outsl
outsl
fildl
fadd
inc
xor
testb
xlat
out
xchg
inc
sub
xchg
jmp
dec
xor
mov
sub
mull
int3
loop
jo
mov
inc
leave
jnp
movd
adc
bswap
and
bound
aad
fldcw
stos
sbb
clc
push
mov
filds
mov
xchg
jb
in
xchg
loop
jbe
xchg
pushf
add
cs
adc
imul
dec
dec
or
out
push
push
scas
xor
sub
mov
rcl
push
xchg
and
test
mov
inc
pop
test
xor
fnsave
hlt
pop
imul
mov
lret
lods
and
andb
xor
cmpsl
mov
add
int3
and
int
xor
dec
jl
scas
push
mov
and
iret
cmc
add
and
pop
sahf
push
push
jbe
xorl
cli
in
or
out
adc
mov
fwait
xchg
pop
insb
inc
mov
sti
cmc
call
push
cmpsb
inc
enter
jmp
loope
push
sbb
jbe
jecxz
out
jp
in
adc
inc
xor
fcmovu
and
test
mov
mov
mov
pop
out
inc
fs
fmul
inc
pop
scas
insl
in
mov
and
dec
or
sbb
pop
inc
add
cmpsl
add
jecxz
mov
inc
sub
lods
mov
fdiv
jno
xor
insb
daa
bound
add
sub
mov
out
push
adc
fdivrl
pop
mov
nop
pop
cld
mov
in
sub
add
add
insb
jmp
std
stc
loopne
xor
or
data16
add
pop
sub
mov
mov
cs
data16
add
sbbl
pop
outsl
inc
mov
cmc
add
pop
xchg
xchg
mov
cwtl
xor
pop
xchg
adc
mov
ja
cmp
ljmp
rcr
sub
add
mov
das
int
stc
inc
mov
dec
imul
mov
mov
das
out
ret
aas
sbb
dec
or
push
adc
inc
iret
push
lds
icebp
mov
cmc
push
add
enter
xor
xchg
sub
pop
lods
push
adc
inc
clc
mov
incl
es
or
xchg
das
dec
mov
ds
xor
mov
lods
lcall
fimull
mov
or
mov
jl
int
daa
xlat
lret
mov
aaa
mov
lods
inc
popa
pop
adc
stc
loopne
inc
push
mov
ss
fnstsw
andl
jo
push
into
pop
lret
dec
jnp
js
add
enter
sbb
sti
sbb
scas
cmp
lcall
lds
inc
push
in
pusha
inc
sub
rolb
mov
push
fcoms
sub
adc
mov
or
add
out
sub
push
cs
jl
out
int3
or
leave
or
push
in
aas
ret
push
in
ja
xchg
push
pop
jmp
pop
cmp
jecxz
cmpsl
pop
xor
adc
mov
jbe
xor
mov
idivb
pop
or
bnd
sbb
repnz
scas
adc
or
inc
out
aad
xchg
cmp
push
ljmp
clc
movsb
adcb
mov
jp
hlt
mov
jne
ret
pop
jg
or
cwtl
das
push
sbb
into
lods
stos
pop
aaa
fdivr
dec
jecxz
lahf
mov
dec
stc
sbb
dec
mov
std
mov
in
jle
or
stc
sbbb
jb
icebp
xor
mov
mov
pop
xchg
gs
mov
sti
sub
xchg
mov
ja
js
ds
pop
pop
ds
jb
pop
repz
call
icebp
pop
adc
out
mov
push
arpl
jae
mov
arpl
insb
pop
and
lea
cmpsb
sbb
or
jle
jo
cwtl
sahf
push
and
and
aam
adc
jp
dec
imul
daa
aam
fst
addb
pop
rclb
mov
jg
icebp
test
jge
testl
push
sub
mov
lcall
push
sahf
outsb
out
and
loope
repz
ret
push
fmuls
aas
call
pop
clc
push
loope
test
scas
dec
dec
in
cmp
jmp
cmp
ds
dec
pop
movsb
xchg
pop
cmp
push
lret
adc
imul
cmp
mov
xor
fwait
sar
cmpb
and
stc
lcall
cmpsb
jns
cli
subb
sub
mov
pop
push
xor
orb
push
mov
jge
stos
ja
lock
cli
pop
cmp
jne
into
imul
pop
dec
and
xor
fisubrs
jno
mov
cwtl
sub
pop
push
sub
out
sbb
jne
loope
sub
sub
arpl
test
aas
aaa
inc
outsb
cmp
out
fbld
jg
dec
inc
mov
data16
mov
xor
in
mov
int3
mov
out
cmp
lahf
jmp
cmp
popa
loop
insl
inc
orb
dec
enter
fisttps
sbb
adc
push
ss
in
push
mov
pusha
subl
loope
xchg
push
sbb
mov
adc
daa
dec
call
jge
stc
xchg
sahf
mov
pop
inc
jae
cwtl
enter
aam
btc
dec
mov
sub
flds
je
cwtl
call
rcr
pop
dec
cmpsb
enter
push
push
addr16
dec
out
lods
pop
test
loop
xor
cmp
add
sub
jg
popf
les
stos
lds
gs
stc
arpl
outsl
xchg
mov
mov
ljmp
cld
push
cmp
ss
daa
addl
fcmovb
xor
iret
mov
fistl
lods
inc
push
jg
stos
aad
jno
fwait
mov
movsl
loope
imul
test
sbb
cld
insb
sub
int
pusha
jno
shrb
add
mov
adc
or
and
ljmp
aad
or
push
scas
xchg
lods
add
mov
notb
dec
or
mov
cmp
sbb
xchg
lcall
arpl
outsb
add
mov
sub
ja
inc
inc
dec
stos
andb
ljmp
jmp
cli
adc
outsl
sbb
call
and
jnp
outsl
sub
sbbb
lret
bound
and
js
mov
in
push
dec
mov
xor
and
test
cmpsb
hlt
repnz
push
bnd
imul
pusha
push
aam
in
or
push
mov
cmp
es
sti
jbe
inc
outsb
add
inc
xor
shlb
dec
mov
dec
bound
jo
push
outsl
pop
je
pop
pop
dec
movsb
in
mov
gs
cmc
lahf
out
mov
push
ja
push
mov
cmp
lret
dec
arpl
notl
sbb
test
sub
rcr
lcall
push
das
movsb
loop
aad
pop
mov
cmp
jge
push
popa
mov
int3
cmp
call
scas
nop
js
pop
mov
fdivl
add
arpl
mov
repz
sub
stos
aas
cmp
mov
ss
mov
jne
add
cmpsb
and
shrb
outsl
inc
dec
loope
xchg
add
inc
cli
scas
and
outsb
das
pushf
push
js
leave
sbb
and
cmc
push
jle
and
mov
pop
mov
or
push
adc
cli
xlat
into
cmp
cli
mov
cmpsb
xchg
xchg
add
sbb
cmp
adc
mov
je
fdivs
push
cwtl
mov
adc
sub
sbb
enter
nop
mov
call
or
loop
mov
or
cltd
inc
xchg
sub
mov
adc
mov
fnstcw
mov
adc
rclb
push
dec
sub
stc
sbbb
shrl
mov
lods
test
add
push
xchg
dec
xchg
push
ja
dec
sbbb
push
jb
sub
shl
sbb
xor
xor
cltd
jb
xor
adc
or
xor
xchg
lods
js
leave
cmpl
xchg
inc
jp
js
out
outsl
daa
stos
adc
fcoms
test
adc
mov
bnd
adc
fildl
mov
mov
cli
mov
sar
leave
and
stos
in
lcall
iret
lods
iret
or
pop
ficoml
pushf
stos
push
sub
es
cmp
rorb
int3
out
mov
movsb
imul
sub
addr16
pop
icebp
insb
sti
popa
and
cli
stc
jo
nop
movsl
retw
add
fistpl
push
leave
sub
movsl
inc
mov
sbb
sub
ja
outsl
or
push
adc
adc
sbb
gs
out
test
mov
roll
mov
cmp
mov
jg
jae
scas
sbb
sbb
and
cwtl
push
adc
mov
cs
push
sbb
lods
inc
fwait
mov
in
xchg
and
in
mov
outsl
cwtl
repz
adc
aaa
dec
movb
test
sbb
mov
in
xchg
movsb
sub
data16
jb
jl
add
ret
test
out
rcr
clc
mov
aaa
rol
shll
push
push
lahf
sub
xor
inc
arpl
data16
fistpl
mov
fstps
sub
js
pop
or
shrb
add
jg
push
aam
inc
sub
test
fistps
je
cli
sbb
xlat
push
mov
jb
cmpsl
je
in
in
outsl
scas
notb
out
sub
or
jl
aad
pop
dec
xchg
mov
jmp
fisubs
fimuls
xchg
mov
inc
mov
data16
loope
jns
loopne
pop
out
sub
xor
push
mov
jecxz,pn
rcll
movsl
loopne
and
push
cmpb
ret
add
addr16
sbb
call
std
aas
mov
mov
xor
pop
ffree
es
inc
mov
out
cs
sbb
into
mov
insl
bound
inc
adc
roll
repnz
aam
cmp
mov
jns
cs
mov
dec
xor
gs
ljmp
scas
into
ret
mov
dec
adc
lcall
jnp
fisttpll
lahf
push
addr16
lock
aam
mov
pop
outsl
push
icebp
icebp
push
dec
push
cld
or
stos
sub
pop
xchg
xchg
or
and
or
push
pop
xchg
inc
push
mov
xchg
leave
pop
mov
xor
sbb
inc
notl
xor
xor
es
stc
out
je
out
dec
pop
dec
cmpb
xchg
insb
sub
push
inc
pop
dec
inc
shlb
fldenv
sbb
xchg
jno
scas
sbb
push
jmp
jl
push
fsts
lock
dec
or
stos
hlt
les
enter
clc
out
push
dec
jmp
popa
jg
jae
or
sub
pop
push
add
fstl
inc
out
jae
sub
dec
outsb
ret
inc
aad
xchg
pop
push
pop
add
lret
test
adc
imul
lcall
pop
fildll
nop
pusha
adc
test
scas
les
or
sbb
cmp
xor
mov
imul
sti
cld
adc
insb
rolb
lods
aad
add
mov
xchg
daa
negl
xor
cltd
sub
add
inc
gs
cs
andb
gs
stc
xchg
xchg
movsl
pop
mov
dec
jno
inc
stc
xor
fwait
pusha
aam
inc
dec
xchg
push
or
lret
ss
insb
pop
mov
sbb
mov
push
jp
outsb
jne
add
xchg
and
mov
shlb
ljmp
stos
push
fsubs
in
popf
xchg
mov
movb
mov
fcompl
cld
dec
cmp
xlat
mov
str
les
jl
test
hlt
adc
mov
inc
xor
bound
test
inc
cmpsb
mov
add
arpl
cli
xor
shr
imul
popa
add
cmp
mov
push
cwtl
jge
pop
sbb
sub
pushl
sub
enter
flds
loop
inc
adc
lods
add
repz
ret
xchg
push
pop
fdivl
aad
hlt
shl
je
xor
pop
sbb
jge
and
push
mov
cld
je
push
sub
adc
adc
sbb
arpl
pop
in
add
push
jp
repnz
pop
push
xchg
scas
scas
adc
sub
push
mov
push
test
and
sahf
inc
adc
inc
xchg
test
popa
outsl
sub
pop
push
push
add
aaa
daa
dec
dec
gs
cmpsl
shl
dec
or
std
sahf
adc
cmp
in
movsl
mov
cmp
and
jge
jns
test
in
hlt
mov
lds
add
mov
insb
in
add
bound
push
xor
dec
iret
hlt
add
dec
mov
jl,pn
scas
notb
out
push
or
or
lods
mov
xchg
loope
dec
js
idivb
xchg
popa
gs
add
aam
popa
lds
outsb
int
pop
stos
inc
push
daa
xchg
stos
push
fcoms
aam
int3
pop
or
pop
sarb
mov
iret
add
push
mov
int
xchg
xchg
scas
pop
stos
addr16
lds
mov
fadds
dec
cld
sub
sub
mov
out
xlat
fwait
push
popf
les
icebp
hlt
push
bnd
xchg
rcr
pop
shll
mov
push
js
inc
xchg
jecxz
subb
push
add
jae
rorl
xor
and
arpl
inc
loope
mov
int3
nop
int
sbb
icebp
sbb
mov
or
cs
test
imul
sbb
add
adc
xchg
ret
arpl
jp
cmp
fists
cmp
imul
iret
imul
loop
mov
in
cmp
jb
mov
sbbb
lods
xor
fcompl
in
xor
xlat
mov
hlt
dec
fistps
outsb
sarb
rcr
outsl
add
push
dec
cwtl
mov
cmpsl
push
mov
mov
cmpsb
cltd
push
sarb
aam
dec
cs
sbb
rcrb
out
fldt
mov
cmpsb
sbb
rorb
xor
xchg
fstpl
or
out
cmp
and
bound
pop
push
dec
out
sbbl
fnstsw
aas
mov
mov
aaa
cld
add
mov
stos
xchg
pop
sub
scas
fldt
aaa
icebp
notb
popa
aaa
push
out
xor
aad
push
mov
inc
iret
mov
jl
pop
sti
push
push
inc
jne
mov
fs
jae
imul
pop
hlt
shrl
ja
xchg
dec
push
sub
adc
es
out
into
sbb
inc
imul
sbb
add
pushf
leave
sub
inc
pop
movsl
adc
int3
add
imul
scas
in
xorb
movsb
sub
int3
in
jbe
loope
outsl
loope
repz
or
rcrb
enter
pop
pop
lods
jns
test
setge
add
mov
es
sub
lods
push
add
inc
mov
push
call
mov
aas
and
icebp
add
aam
cmp
fldl
push
sbb
jmp
jbe
cmc
es
lods
jge
jge
adc
enter
lret
jb
dec
jbe
stos
test
std
and
inc
adc
je
or
in
outsb
sti
push
int3
into
mov
cmp
push
aaa
adc
add
in
mov
pop
push
xor
xchg
jo
cltd
cmp
or
stos
ret
or
push
mov
mov
int3
fwait
cli
push
pop
and
pop
jg
dec
jns
xor
mov
push
fistpll
sbb
add
and
or
sbb
jae
sahf
les
lret
ret
cltd
xor
fwait
mov
aas
mov
sbb
dec
sahf
mov
mov
sarb
xlat
std
jp
inc
lods
jne
and
loopne
nop
cmp
jmp
roll
cmovnp
jo
jne
inc
lods
loop
repnz
lret
scas
mov
and
fimuls
cmp
pushf
in
mov
and
and
shll
xor
movsl
mov
scas
pop
jns
je
and
cmp
popa
inc
leave
repnz
enter
pusha
dec
test
sahf
add
lret
pusha
add
enter
mov
mov
sub
jge
fstpl
sub
mov
dec
mov
push
es
pop
insb
cmp
ficoms
fsts
sbb
xchg
cwtl
andl
push
pop
pop
ret
lahf
jg
mov
mov
mov
nop
adc
lea
test
adc
xchg
std
mov
and
dec
jae
xchg
in
inc
xor
sbb
cmp
add
jbe
push
cmc
bound
sbb
sub
outsb
xchg
cwtl
xor
daa
ret
sysret
xchg
ficomps
jmp
outsl
mov
sahf
imul
sbb
lea
pop
push
push
dec
add
mov
mov
jmp
sbb
inc
out
pop
enter
cli
add
adc
lods
xchg
push
jbe
outsb
cltd
push
inc
aad
cs
sub
push
idivl
or
sti
lahf
test
repnz
jmp
push
sbb
scas
testl
ret
xchg
insb
hlt
not
shrb
rcrw
mov
fdivp
adc
cmc
sbb
loope
fildl
daa
imul
mov
shlb
sbb
mov
mov
scas
jo
ret
outsb
imul
in
int
adc
xor
add
das
outsb
inc
outsb
sbb
aaa
mov
dec
popf
icebp
jae
fwait
mov
lret
sar
insb
adc
stc
addl
sub
pop
fs
outsl
mov
cmp
dec
in
mov
cmc
inc
xchg
fisubs
rorb
sahf
jno
push
push
icebp
xor
cmp
jle
add
add
fstpt
imull
dec
push
jl
pop
imul
mov
jae
aaa
loopne
xor
in
fmul
outsb
sbb
push
js
aam
xor
jne
sub
hlt
jmp
into
lret
cmp
leave
icebp
inc
jo
clc
or
adc
das
das
pop
stos
mov
dec
jb
inc
xchg
nop
pop
idivl
inc
adc
aaa
cmc
and
daa
scas
test
cmc
mov
add
cmp
xor
rcll
stos
mov
in
pop
inc
cs
push
sub
mov
jmp
inc
sbb
mov
dec
jge
or
mov
ds
nop
xchg
fsubr
loope
ret
aaa
xor
inc
inc
mov
xor
or
ss
push
cs
ja
fs
inc
adc
mov
add
pop
xchg
cli
pop
cmpsl
ret
stos
mov
xorl
arpl
mov
nop
mov
push
orl
xchg
xchg
ja
xchg
sbb
out
ja
mov
subb
je
add
dec
cmc
pop
or
pop
hlt
mull
and
pop
push
jg
sub
ja
out
in
faddl
fnstenv
dec
mov
jne
pusha
xchg
push
add
pushf
pop
sldt
mov
add
arpl
insl
out
adc
adc
xor
xor
or
sbb
fldcw
movsb
cwtl
fistl
hlt
jb
lcall
xor
mov
add
jno
popf
sbb
je
les
leave
in
sbb
fwait
mov
std
shrl
fdivs
in
cmpl
cwtl
jne
out
fsubr
mov
nop
adc
jns
push
inc
dec
nop
popa
push
push
sub
and
and
lret
adc
and
pushf
cmp
lods
icebp
into
test
adcb
adc
mov
lods
out
ljmp
shrl
subl
sahf
aas
push
adc
sub
ds
mov
xor
lock
sbb
ret
cs
jmp
xchg
inc
xchg
out
aas
out
fnstcw
cltd
sbb
and
mov
icebp
mov
out
jns
out
loop
int3
or
push
stos
mov
push
cmp
adc
pop
ss
xor
enter
xor
cmp
icebp
mov
dec
out
out
stc
lods
stos
jecxz
mov
nop
jno
lahf
or
or
mov
or
repz
mov
loopne
xor
mov
xor
adc
cs
mov
adc
rclb
inc
test
mov
jne
or
js
fisubrs
cmp
in
push
loope
hlt
call
lds
sub
dec
sbb
lods
aaa
push
es
mov
sbb
and
mov
test
xor
or
push
cmp
lock
add
or
adc
in
xor
xchg
dec
push
in
ds
cmp
xchg
mov
addr16
sbb
negl
arpl
outsl
in
int3
js
repnz
mov
add
mov
jp
pop
fcmovu
fwait
popf
pop
xchg
add
fwait
jno
mov
nop
out
and
mov
les
add
jo
jne
sbb
and
push
loopne
je
mov
pop
aam
mov
dec
cmp
nop
push
mov
or
loopne
mov
sbb
or
mov
mov
cmpsl
jge
inc
push
inc
pop
mov
mov
fdivrl
aad
mov
push
jb
fildll
fwait
sti
aad
mov
sbb
shrb
fbld
push
xchg
add
test
pop
push
andb
jo
mov
jno
mov
shr
test
xchg
fnstsw
inc
pop
cld
jl
arpl
or
mov
popf
and
mov
or
jge
xor
dec
rcr
les
lods
add
push
das
sbb
aad
mov
inc
jmp
imul
add
pop
arpl
rolb
loop
push
and
jmp
int
cmc
sub
gs
out
cmc
mov
movsl
imul
xchg
jnp
cmp
cld
xlat
ret
push
cli
outsl
clc
fnstcw
hlt
dec
adc
fldt
push
mov
test
cmp
sbb
int3
hlt
and
lahf
mov
lret
scas
imul
push
and
xor
imulb
mov
pop
scas
lods
jns
cmp
clc
loopne
dec
xchg
bound
dec
cwtl
in
incb
jno
pop
adc
jle
ret
das
cmp
lock
inc
loop
jg
iret
std
cmp
mov
jne
sbb
inc
mov
testb
or
ret
xchg
mov
notl
rol
pop
jecxz
xlat
cmpsb
xchg
sti
pop
cmc
lahf
or
shl
popa
or
inc
xchg
aam
ret
test
hlt
clc
add
rorb
scas
cltd
mov
push
lcall
xor
inc
xchg
push
add
mov
or
or
decb
xchg
ds
ret
jg
lcall
cltd
icebp
cmp
ja
mov
loopne
cmp
ljmp
leave
movsl
bound
or
scas
test
mov
jae
cld
adc
ss
mov
lds
aaa
mov
out
nop
mov
push
push
lcall
shrl
ret
jo
cmp
push
cmpsb
push
in
push
or
out
insb
stos
aad
sub
rep
in
mov
inc
xchg
mov
outsl
ljmp
fwait
jl
shrl
mov
ja
je
out
sbb
negl
cmp
js
hlt
das
adc
adc
push
inc
hlt
sub
sbb
mov
pop
xchg
mov
sbbb
sub
jb
out
aad
jb
pop
adc
jle
mov
adc
mov
or
lods
pop
mov
push
out
mov
mov
imul
out
repz
lcall
test
inc
pop
movsb
cld
ret
cld
cltd
add
xchg
add
xor
dec
sti
jo
cmp
ljmp
mov
mov
pop
add
fisttps
insl
jp
cwtl
addb
sub
mov
test
cmpsb
je
out
xor
mov
repz
pop
dec
pop
push
xchg
adc
jle
xor
test
lret
pop
icebp
or
push
push
ja
inc
adc
pushf
mov
mov
sub
shlb
in
scas
cltd
add
addr16
sbb
outsb
jo
stos
mov
jo
pusha
fsts
aad
add
shrb
jg
cmp
repnz
inc
int
mov
ret
push
das
mov
or
pop
aaa
adc
or
popl
xor
and
dec
popa
bswap
divl
push
dec
stos
mov
fwait
sbb
insb
sbb
jae
inc
lods
es
cmpsl
pusha
dec
adc
inc
add
loop
test
jb
or
xchg
mov
sarl
inc
or
pop
mov
pop
mov
dec
hlt
sub
xor
cmp
inc
ja
out
std
shrb
push
in
int
xchg
sbb
xor
sbb
cmc
je
out
pushf
mov
addl
mov
xor
fwait
stos
test
sbb
sub
movsl
es
mov
sub
imul
stc
push
es
arpl
and
sbb
pop
sub
addr16
jmp
xor
fwait
sub
in
mov
xor
iret
stc
and
adc
push
push
movsb
or
mov
fcomps
xchg
in
dec
mov
jns
enter
mov
orl
fisttpll
add
mov
push
or
mov
push
cmc
movsb
out
pop
bound
add
es
pop
mov
xchg
mov
repnz
or
repnz
enter
mov
iret
push
mov
xchg
inc
xchg
jle
les
pushf
lea
mov
sub
jb
sub
test
mov
arpl
push
loop
push
sub
in
or
std
loopne
dec
cld
mov
cld
scas
mov
inc
leave
fisubl
int3
push
aam
add
jbe
pop
pop
lock
fs
inc
fs
jb
mov
fistpl
shlb
dec
cmp
in
jl
ret
ja
push
inc
push
or
xchg
mov
adcb
lret
nop
movl
in
aas
xorb
iret
out
xchg
cmpsl
fsts
inc
lea
leave
cmp
lcall
mov
arpl
push
inc
mov
add
push
shr
jmp
sub
lock
or
std
outsb
out
mov
cmp
inc
or
xlat
sahf
mov
sub
clc
jmp
addr16
push
dec
popa
les
or
cmp
sub
mov
jmp
push
jg
test
pop
mov
mov
fs
outsl
daa
pop
mov
push
xchg
mov
or
das
outsl
test
sub
and
cmc
or
out
mov
ret
inc
ret
cmp
fiadds
sub
adc
fstpl
mov
push
cmc
dec
jae
inc
fisubrl
adc
lret
lods
adcl
stc
dec
aaa
decb
sub
lods
pop
mov
mov
insl
repz
testl
mov
dec
push
add
inc
xor
xchg
push
cmpsb
xchg
fistl
in
push
adc
es
lret
mov
jb
fcom
and
into
std
mov
shll
fstp
sahf
or
pusha
fwait
outsl
pop
xor
lcall
ljmp
das
clc
loopne
imul
imul
sti
mov
inc
push
gs
ret
stos
ljmp
dec
fwait
ss
sub
inc
in
sbb
xchg
ficompl
sub
push
cmpsb
ljmp
sbb
sti
jp
fwait
gs
inc
dec
mov
fcom
push
push
xor
cmc
mov
sub
in
jmp
push
xchg
push
loop
inc
nop
enter
xchg
mov
dec
cmpsb
and
cmp
stc
jbe
pop
push
add
idivb
popf
jge
xor
lahf
imul
add
push
xorl
jns
jl
mov
ds
xchg
push
inc
mov
pop
clc
add
xchg
adc
mov
mov
push
jmp
mov
cmp
imul
mov
cmpsl
add
fcmovbe
pop
sbb
in
or
pusha
pop
hlt
fists
int
pop
xchg
cmp
adc
push
in
sbb
cs
or
shl
outsl
mov
pop
mov
xor
adc
adc
rcrl
fsub
loopne
loopne
movsb
dec
sahf
int
stos
fildll
sarb
jb
ret
lret
daa
jo
wrmsr
das
jno
subl
xor
fwait
pop
imul
insl
adc
addr16
icebp
and
mov
or
xchg
int
je
mov
scas
and
jecxz
lods
mov
cs
insb
insl
lret
movsb
inc
in
xor
mov
dec
add
dec
and
pop
int3
xor
sub
das
jno
testb
andb
mov
cmp
push
lret
adc
push
jecxz
jb
push
stc
pop
js
rcll
js
or
ficomps
ret
jecxz
xchg
jae
call
js
in
fbstp
mov
leave
and
xchg
shr
pmaddwd
lods
fs
jmp
lods
mov
jb
rcll
mov
dec
cmc
or
mov
and
lock
mov
jecxz
fbld
dec
jge
push
and
push
in
arpl
das
or
repz
daa
mov
popa
inc
inc
or
lods
dec
pop
aam
pushf
cmpsl
popa
sub
in
icebp
jb
in
push
and
and
icebp
xor
iret
arpl
sbb
out
mov
sbb
sbb
push
xlat
mov
sub
ret
movsl
push
lcall
clc
lods
lret
inc
add
rolb
add
xor
push
sbbb
jp
dec
movsb
mov
adc
shrb
mov
mov
jmp
adc
mov
lea
imul
and
jnp
stos
push
adc
roll
sub
int
idivb
in
adcb
xor
loop
mov
cld
outsb
adc
movsb
or
int3
int3
sub
lcall
jne
das
lret
pop
fidivs
mov
mov
pop
bnd
adc
inc
push
jg
xchg
lcall
inc
lock
jecxz
ja
add
fadds
xchg
or
sbb
mov
jno
pop
aam
repnz
adc
out
repz
add
jp
lods
xorl
cmp
xchg
pushf
call
dec
hlt
inc
jg
iret
sbb
subb
inc
std
mov
sarb
fcoms
dec
mov
cmc
mov
push
in
push
add
jmp
mov
dec
push
sbb
mov
dec
xchg
cmp
repnz
mov
ljmp
sbbb
ret
hlt
insl
xchg
fsubrp
cmpsb
and
push
gs
pop
inc
jge
cmpsb
inc
loop
popf
mov
movsl
mov
popa
out
cmp
pop
or
pushf
add
xchg
pop
xchg
push
cltd
push
test
push
cmp
ljmp
pop
xor
gs
lds
movsb
sbb
int3
mov
jno
jae
addr16
add
jnp
mov
loopne
cwtl
jmp
shll
int3
sbb
and
loop
stc
or
add
rorl
pop
subb
xchg
jp
inc
icebp
push
jmp
inc
xchg
insl
cmp
pop
adc
jnp
cld
mov
xchg
jne
cmp
mov
popa
push
xchg
data16
xchg
dec
aam
push
fisubrs
out
jo
sub
mov
and
pop
jno
push
pop
xchg
fisubrs
ss
mov
mov
lret
push
jno
mov
out
jp
leave
addb
out
popf
outsl
outsl
mov
test
or
add
filds
and
sbb
pushf
add
hlt
dec
aas
enter
aas
pop
js
xchg
pop
push
and
out
adc
jno
or
adc
or
movsb
jecxz
xchg
cld
add
int3
inc
lret
or
nop
inc
push
xchg
jmp
xor
lahf
push
push
out
insb
testb
cmp
scas
cmp
push
cmp
lea
out
repz
lahf
cmp
xor
mov
add
mov
loopne
mov
xchg
clc
stc
fimull
shr
push
jb
stos
fdivs
sbb
hlt
inc
insb
sbb
jg
mov
dec
int3
test
fdivrs
mov
scas
lods
clc
add
pop
mov
add
and
dec
mov
and
dec
jne
in
push
mul
sub
out
or
inc
xchg
dec
sti
fildl
push
jnp
stos
outsl
fs
mov
or
inc
out
cmp
cltd
out
insl
jne
lcall
sbb
jns
popa
adc
loopne
in
inc
sti
or
jmp
adc
sti
popf
or
cwtl
add
sub
cmpsb
mov
fwait
jne
roll
xor
ss
rolb
mov
in
jecxz
aas
pop
mov
jbe
pop
aas
mov
es
sbb
pop
jp
subb
divl
loope
iret
cld
jle
fsub
fucomip
mov
popa
mov
addl
sbb
cmp
xor
mov
out
cmp
adc
fld
sbb
in
aas
les
add
imul
out
rolb
test
sbb
fildll
dec
out
inc
imul
inc
ja
cltd
fldl
xchg
jmp
fcmovnbe
mov
mov
sub
movsl
push
jo
mov
ljmp
sbb
ss
loope
cmp
adc
mov
fstp
repz
dec
mov
cmp
enter
in
andb
aas
stos
fadds
daa
xchg
xor
adc
lods
icebp
mov
aam
mov
sahf
mov
rcrl
sbb
insl
xchg
int
data16
sub
aaa
test
push
cmpsl
cmpl
push
dec
mov
popa
or
daa
jl
xor
stc
mov
mov
push
jb
sti
into
data16
stc
mov
lea
mov
push
mov
lods
sub
lock
add
mov
xchg
lahf
fwait
and
xchg
in
das
test
push
mov
sahf
pop
cmp
mov
mov
mov
cmpsl
cwtl
lahf
add
dec
dec
cmp
js
pop
in
imul
movsl
addr16
lahf
lds
lcall
and
adc
int
inc
cmp
aaa
stos
imul
imul
test
std
push
mov
cmc
stos
pop
cmp
jge
jno
loope
mov
repnz
outsl
arpl
lea
push
mov
xchg
dec
aas
inc
roll
dec
mov
sbb
mov
pop
and
inc
xor
bound
fwait
sbb
scas
cmp
and
add
and
or
xchg
int
jb
dec
mov
divl
insl
jnp
test
icebp
gs
xchg
test
das
mov
dec
mov
adc
nop
cs
sti
popf
sub
jge
push
add
ret
mov
insb
adc
add
xchg
cmc
int
mov
sbb
dec
xchg
adc
lcall
mov
sbb
fsubp
xor
add
and
sarl
out
mov
push
push
fcomp
setge
loop
push
jle
outsb
fdivl
outsb
shlb
mov
pop
mov
jne
cmpsl
jnp
dec
sbb
cmpsl
ss
je
sbb
hlt
rorb
insl
mov
mov
out
cmp
std
iret
jl
mov
andb
jbe
mov
mov
inc
lret
iret
sub
xchg
and
sub
outsb
push
jge
xlat
cmp
or
sub
gs
cmp
inc
dec
scas
and
lahf
adc
mov
jg
xchg
push
jmp
sbb
je
lds
sbb
or
jae
mov
outsb
xchg
add
rorl
ljmp
inc
mov
outsb
push
ds
int3
dec
add
jns
and
add
lods
add
clc
pop
xchg
xchg
jne
and
iret
in
or
dec
neg
in
jl
outsl
and
outsb
pop
or
mov
ret
out
ss
push
jmp
ss
aas
fistpll
or
adc
pusha
xchg
es
or
mov
add
scas
shl
aam
push
nop
aaa
adc
or
fcmovne
rol
shll
mulb
scas
inc
fmulp
xchg
outsb
rcll
mov
mov
and
push
jg
cmp
in
add
movsb
xchg
mov
jne
ljmp
inc
in
pop
xchg
add
clc
cmp
jbe
addr16
lods
sub
fimuls
or
popf
mov
mov
inc
leave
xchg
xor
cwtl
lret
adc
sbb
inc
ret
add
or
fdivrl
mov
mov
and
lahf
lock
out
pop
mov
pop
pop
and
and
cld
ja
fbld
jecxz
jge
adc
enter
cmp
iret
xchg
add
icebp
js
cmp
movsl
push
jp
xchg
jbe
cmp
xor
maxps
inc
or
mov
cmp
mov
mov
mov
sbb
add
pop
xor
xor
jecxz
inc
inc
xor
rorl
mov
jge
cmpsb
ret
gs
andb
mulb
sbb
cmpsb
clc
xlat
sbb
das
sbb
mov
ja
sbb
addr16
or
mov
xlat
sbb
daa
testb
or
sub
jae
mov
jge
loop
mov
and
add
in
cld
in
insl
mov
xor
popa
cmp
lea
and
add
stos
dec
sub
repz
shrl
dec
sbb
mov
or
movsb
push
into
cltd
pop
insb
jecxz
push
add
fistpl
arpl
in
inc
sub
adc
cld
sarl
jbe
pop
test
test
mov
nop
adc
adc
leave
scas
loop
pop
cli
rcl
nop
dec
stos
inc
aad
fwait
sar
dec
cmp
je
cltd
dec
push
repz
jo
xor
add
sbb
pop
lods
das
add
or
mov
jb
mov
mov
push
xor
mov
jg
leave
or
xor
adc
push
inc
lret
xor
dec
and
adc
and
add
pop
mov
and
jmp
lahf
lock
test
nop
mov
inc
jp
popa
iret
test
cmp
and
adc
jge
out
mov
or
insl
inc
pop
jg
cmp
movsb
xor
sbb
loopne
mov
ljmp
pop
add
adc
dec
mov
xor
dec
xchg
fadd
addr16
mov
into
lods
cs
push
mov
scas
out
pop
pop
int
xor
add
out
inc
lret
mov
aas
push
adc
aaa
adc
sbb
or
mov
pop
das
sub
outsb
jmp
test
inc
insb
loopne
push
int3
sub
enter
fsubrl
dec
cmpsl
fmuls
sahf
add
dec
fldcw
cld
fwait
in
and
cmp
fld
scas
jns
rcrb
stos
stos
pop
mov
xchg
stos
and
ja
insl
in
lea
cld
cld
add
xchg
dec
fbld
pop
ret
into
inc
lods
mov
jne
rclb
sbb
iret
cmpsl
aad
adc
popa
pop
out
cs
jmp
adc
or
cmp
sub
lods
xor
jmp
inc
ja
ds
cmp
push
int
pop
js
das
clc
and
jns
xchg
orl
leave
jne
adc
push
fldl
pop
out
mov
lods
pop
mov
shlb
inc
xchg
jp
sub
sub
adc
mov
mov
adc
cltd
jl
out
pop
cmp
push
out
outsl
outsl
sti
inc
xlat
sub
mov
pop
lods
lods
mov
sub
das
pop
std
and
sbb
lds
sbb
stos
xchg
in
nop
or
fwait
xchg
imul
dec
sub
lret
icebp
ret
das
outsl
pop
sub
push
and
enter
and
leave
dec
sbbl
ret
mov
mov
sub
xchg
scas
cmp
xchg
fadds
ljmp
mov
insl
jae
pop
push
xor
pop
cmp
aas
adc
mov
test
out
lret
inc
cwtl
mov
pop
mov
gs
mov
xchg
inc
dec
cmc
add
jne
add
xchg
push
mov
sbb
stos
dec
cmp
ret
arpl
mov
add
ret
data16
outsl
jae
sub
push
cmp
test
pop
xchg
xor
xlat
std
jae
mov
inc
or
lods
xor
and
mov
dec
inc
pop
int
ret
sub
or
arpl
fnsave
cs
cmp
daa
loopne
dec
pop
out
inc
push
mov
cs
in
fidivl
xchg
cmp
push
dec
or
rcrb
sub
dec
jp
inc
mov
call
outsb
gs
xchg
iret
or
daa
jp
mov
pushf
pop
subl
xchg
pop
lods
push
lock
xchg
daa
push
push
adc
inc
or
sahf
pop
adc
das
lock
push
loop
sub
push
xor
adc
add
and
popf
sub
jecxz
dec
lods
movsb
mov
loope
cld
sub
inc
and
fwait
adc
xchg
test
xor
popa
dec
aaa
push
aaa
push
cmp
sbb
out
sub
mov
cs
js
insb
add
call
mov
adc
mov
ficompl
dec
xchg
cmpb
add
inc
lcall
xchg
imul
cmp
xchg
dec
dec
out
mov
inc
sub
inc
das
mov
sub
push
sti
xor
push
hlt
pop
insl
lcall
daa
test
inc
pop
orb
adc
mov
cli
fisubl
add
dec
imul
shll
mov
pusha
mov
inc
cld
int
push
cmp
sub
lret
jp
pop
pop
loop
stos
fiaddl
outsl
xchg
sbb
int3
orb
hlt
out
enter
mov
in
push
lock
enter
mov
imul
js
mov
dec
flds
fcomps
pop
xorl
pushf
pop
sub
outsb
mov
js
das
call
scas
jbe
mov
jle
sub
jbe
xor
add
lcall
push
loop
popf
data16
cmp
push
inc
and
daa
lods
pop
out
sbbl
test
addb
xlat
cmpsl
lret
sbb
sarb
jle
dec
mov
dec
mull
pop
jnp
fwait
imul
xor
push
andl
mov
sbb
jecxz
or
mov
xor
lea
mov
and
push
xchg
sahf
sahf
add
jnp
test
inc
dec
cmp
jne
push
mov
xor
aad
cmp
ljmp
out
mov
dec
gs
daa
cmpsl
pop
mov
lret
subl
mov
lret
fbstp
mov
jg
jle
addb
mov
pop
stos
scas
or
hlt
cmp
cli
adc
jg
sbb
xor
dec
inc
xchg
sti
jns
dec
xor
addr16
mov
dec
pusha
push
mov
dec
sbb
mov
inc
add
aam
push
test
pop
outsl
out
xor
ljmp
push
inc
lods
imul
xor
mov
sub
inc
mov
call
into
push
mov
mov
cli
push
jb
dec
iret
pop
test
out
xlat
inc
popf
sbb
fcmovnb
shlb
scas
stos
lods
lds
cwtl
fdivp
or
cs
inc
data16
mov
lret
sahf
xchg
fidivrs
dec
xlat
insl
js
int3
subl
and
push
lret
jb
pop
fisubl
mov
loopne
push
adc
lods
out
xchg
mov
test
jb
ret
fstps
shl
inc
jecxz
lods
aad
cltd
das
xchg
jmp
aam
jne
lret
jb
mov
dec
loope
lcall
jbe
mov
repz
clts
push
jge
rolb
repnz
jnp
pop
push
loop
xor
adc
jbe
loopne
inc
push
mov
loop
cmp
imul
int
push
test
clc
sbb
pop
dec
jae
jb
ficompl
hlt
fisubs
adc
or
xchg
cmp
dec
jle
out
lcall
push
loope
push
jecxz
mov
in
rcll
mov
out
dec
shlb
mov
push
inc
or
xchg
mov
testb
push
xor
cmp
adc
push
pop
xor
gs
or
js
mov
lret
outsl
daa
xchg
sarl
gs
rcll
out
jnp
sti
dec
mov
xorb
xchg
adc
js
jns
popa
iret
xchg
icebp
mov
xor
xchg
push
jmp
sahf
or
sti
bound
addl
lea
out
push
lock
push
xor
and
dec
xchg
je
mov
popf
push
std
mov
cmp
outsb
cmpb
test
sub
mov
mov
inc
sub
loop
sbb
and
je
inc
iret
jg
rorl
and
sbb
and
fisubrl
jge
xchg
mov
hlt
dec
mov
add
jl
cwtl
movq
sbb
xor
jns
jp
or
sub
cmpsb
jb
xchg
inc
inc
imul
xor
fistl
mov
sbb
pop
sbb
cmp
lods
nop
xchg
test
fistps
cltd
jmp
jl
push
out
dec
and
arpl
ja
repnz
loop
xorb
adc
xchg
sbb
push
clc
pop
lods
cli
add
ss
push
xchg
jo
jno
inc
aas
lods
negl
adc
lcall
aam
mov
popa
shll
dec
and
cmc
mov
cmc
lahf
sub
scas
cmp
sbb
fcmove
mov
rclb
xlat
sahf
adc
aam
movsl
out
cmpsl
sub
cld
arpl
stos
push
pop
jp
lods
sti
fistpll
les
xchg
int
fistpll
sti
or
gs
pop
fwait
pop
imul
push
out
pushf
stos
and
xchg
lret
test
leave
test
add
sti
mov
movsb
out
ja
popa
push
enter
mov
xor
cli
pusha
fdivp
inc
ret
aaa
jg
pop
scas
iret
sbb
mov
pop
pop
sub
mov
push
jge
daa
inc
insb
cmp
mov
repnz
sub
mov
out
subl
pop
adc
incb
mov
pushf
daa
push
arpl
pop
lea
rcrl
hlt
popf
pop
lods
or
pushf
loop
dec
mov
and
jmp
inc
stos
int
outsb
and
das
daa
nop
std
dec
imul
pop
imul
inc
sub
sbb
stos
std
push
mov
sbb
mov
push
rol
adc
cld
cltd
arpl
pop
xchg
cwtl
cs
sbb
dec
out
jg
loopne
sahf
mov
lret
jle
jnp
ljmp
and
jecxz
jnp
fwait
jle
cmpsb
stos
push
xor
stos
xchg
outsl
iret
xor
mov
in
xchg
or
add
pop
dec
fs
xor
cmp
and
repnz
rorb
imul
cs
je
inc
cltd
mov
push
push
ljmp
imul
add
out
movsb
or
ret
cmpsl
fisttps
in
and
test
push
lahf
loop
nop
mov
fisubl
aam
jg
jno
xor
jecxz
repnz
leave
xchg
sbbb
jle
and
mov
addr16
test
daa
cmp
cltd
sti
icebp
adc
out
iret
leave
adc
mov
xor
mov
insl
jge
xor
mov
out
xchg
inc
ss
fs
pop
andl
mov
ficoml
or
sbb
jge
mov
ja
mov
xchg
leave
mov
in
cld
les
iret
mov
fsubrl
pushf
add
adc
rclb
dec
sbb
pop
mov
cmp
out
sbb
lret
jo
sbb
mov
sti
jne
jns
jle
pop
rol
aaa
leave
xchg
test
jae
add
jne
push
jmp
add
cwtl
pop
aas
js
pop
cli
out
dec
outsl
adc
cli
fstpt
out
cmc
subb
hlt
xlat
pop
xchg
dec
cs
dec
in
cwtl
clc
xchg
add
cli
aam
push
add
enter
mov
cmp
test
dec
rorl
cli
sub
inc
mov
lahf
test
ret
add
fadd
lock
inc
jmp
out
push
add
dec
mov
jp
xchg
mov
mov
add
lea
scas
add
fildll
push
mov
scas
and
inc
mov
jl
cli
mov
or
rorb
sub
icebp
xlat
out
aad
les
xor
orb
or
lods
push
sbb
mov
mov
push
mov
scas
lahf
into
ss
add
dec
out
in
das
ljmp
arpl
and
xlat
cwtl
subb
jl
jae
adc
sub
jl
pop
mov
push
fwait
loop
xor
dec
sbbb
in
mov
mov
push
movsl
stc
jecxz
mov
ds
push
pushf
fsubs
jmp
mov
push
cwtl
mov
xchg
je
mov
sub
sti
mov
idivb
jmp
je
push
sti
cmp
bound
fcompl
icebp
int3
das
xchg
lock
or
ret
pop
push
jbe
push
push
jmp
pop
imul
gs
insb
push
in
xchg
sbb
mov
movsb
dec
inc
push
pop
lcall
mov
pop
ja
jo
imull
das
cli
adc
xlat
int
xor
mov
sti
cwtl
cltd
enter
daa
enter
push
add
sbb
enter
push
aaa
aaa
jns
in
pop
aas
and
movsb
dec
pop
add
mov
int
xor
pop
xchg
shrl
shll
imul
cmp
jbe
cmp
inc
pop
test
in
lods
test
fmul
ljmp
add
lahf
lahf
and
imul
lods
add
sub
cli
mov
cmp
fnsave
dec
mov
jns
sub
and
mov
and
mov
xchg
loopne
and
jg
aam
push
dec
hlt
mov
testb
aad
jno
cmp
or
dec
xchg
test
shrb
xchg
dec
cli
mov
jns
xor
jg
jo
std
or
mov
xor
test
mov
ror
outsl
push
push
pop
stc
je
lret
pusha
or
sbb
sbb
xor
push
lahf
je
mov
rorl
sub
dec
adc
cmovo
add
mov
sbb
dec
mov
test
subb
xchg
sbb
ja,pn
inc
mov
in
cmpsl
imul
xlat
sub
jno
cmp
cwtl
inc
or
imul
or
lret
sbb
cwtl
inc
jg
pusha
mov
repz
mov
iret
gs
faddl
ret
cmp
stos
fsqrt
subb
fstp
fildl
into
test
ds
cmpsb
push
andl
lock
fdiv
sahf
gs
cmp
out
mov
push
pop
out
dec
aam
lods
dec
cmp
dec
movsb
jnp
cmc
xorl
fisubl
leave
fildll
fdivrs
ficompl
das
mov
and
daa
pop
test
mov
lea
sbb
cmp
lcall
sti
test
aas
xor
outsl
adc
stos
mov
mov
sub
outsl
rcll
xlat
ss
pop
and
sub
stos
pop
or
dec
dec
and
popa
jo
xchg
sbb
adc
aam
cld
test
mov
sub
loopne
push
or
jno
add
sub
lcall
xchg
mov
mov
repnz
push
xor
sub
and
fistps
push
mov
idivl
inc
cmp
icebp
jbe
lahf
mov
xor
mov
pushf
sbb
cli
sbb
cmpsb
xchg
int3
loopne
and
pop
jmp
cmp
fs
xor
mov
pop
fstpt
xchg
int
sub
dec
cmp
fdivrs
push
or
hlt
cmc
add
ds
pusha
orb
scas
iret
pop
lods
lea
mov
mov
test
and
lods
or
stc
cmp
mov
mov
cmpsb
xchg
add
aam
fucom
in
xchg
addr16
dec
mov
popf
push
or
loopne
mov
mov
inc
leave
jae
popf
push
fsubs
lea
ljmp
outsb
add
imul
cltd
or
push
push
push
sbb
sub
sub
xchg
cmpsb
sub
mov
loopne
and
sahf
cmp
push
cmpb
aam
pop
loope
mov
cmp
mov
adc
inc
sub
mov
add
mov
xchg
movsb
xor
in
lods
lahf
loop
lock
loopne
push
sbb
cltd
sti
arpl
lds
pop
cld
pop
out
jle
xchg
push
aam
inc
push
mov
mov
push
pop
shrl
out
dec
les
inc
enter
sub
push
loop
int3
inc
xchg
push
pop
dec
ljmp
push
mov
pop
out
adc
push
scas
lcall
ljmp
out
inc
das
sarl
jle
xor
fistps
lret
sub
adc
cld
mov
xchg
outsl
or
sbb
mov
int
repz
insl
pop
adc
jle
movsb
enter
cmp
popf
ss
or
inc
filds
cmp
pop
dec
mov
das
js
and
add
andb
push
je
mov
test
xor
jge
mov
into
jl
cmc
sub
repnz
gs
add
dec
and
cmp
pop
mov
jmp
cmp
not
leave
lahf
jg
dec
push
loope
jmp
js
cmpsl
lods
test
sti
lcall
out
stc
lret
data16
sub
fimull
and
push
push
or
mov
push
mov
cmc
xchg
lds
stc
negb
mov
push
mov
inc
cltd
cmpsl
loop
orl
cmp
fcomi
es
pop
sbb
jmp
mov
sbb
sbb
mov
out
pushf
insl
movsb
roll
sub
mov
dec
dec
jle
fisttpl
jns
out
ret
cs
push
mov
add
test
xor
lcall
xor
test
pop
es
dec
mov
pop
fimuls
xorb
sbb
push
xor
cwtl
mov
loope
jge
jno
cmpsl
xchg
daa
push
push
cmp
arpl
sahf
mov
call
nop
or
sub
pop
xchg
push
xchg
mov
xor
sbb
and
push
jmp
cmp
stc
aas
mov
pusha
xchg
jnp
loopne
jg
jbe
xchg
in
pop
jae
cmp
mov
movsb
out
cmp
sbb
and
mov
sub
and
lds
cmp
mov
je
cmp
ret
mov
mov
cmpsb
subb
mov
xor
adc
lret
jae
pop
pop
push
inc
int
jns
xchg
in
sub
push
out
sub
lods
dec
lea
mov
stos
iret
dec
jno
jne
int
push
jb
ret
push
enter
movsl
rcll
push
prefetch
sub
cmp
or
ret
loop
mov
inc
test
adc
mov
inc
or
fildl
jbe
jge
ret
mov
stos
jg
and
sbb
mov
cli
into
and
jbe
jno
and
add
push
xchg
add
out
xchg
push
shrl
sub
cmp
mov
movsl
push
xor
dec
cmpl
int
inc
mov
or
xchg
sti
sti
ret
and
fsubs
and
pop
pusha
cmp
loope
mov
daa
or
test
sbb
sbb
notl
cmpsb
jbe
lods
dec
pop
pusha
xor
sahf
sub
test
sub
pushf
xor
addb
mov
dec
jns
sub
lods
mov
add
daa
jecxz
cmpsb
push
cmp
push
aam
jae
in
inc
cmp
rolb
les
cwtl
adc
inc
xchg
test
add
cmp
negb
inc
pusha
mov
jecxz
cmpsb
push
cmc
mov
cld
xor
fstp
adc
loop
inc
dec
dec
popa
notl
popf
movaps
push
pop
add
out
sbb
mov
jns
stos
ret
lds
sub
fstps
rorl
fistpll
inc
pop
outsl
cmp
xchg
mov
jne
std
lods
std
jle
lcall
dec
test
pushf
test
mov
add
mov
pop
lea
or
or
jecxz
unpcklps
fisttpl
xchg
cmpsb
out
das
ficomps
fadds
pop
sbb
fidivs
push
dec
or
push
cmp
movsl
jmp
add
lahf
arpl
xchg
cmpsb
add
xor
shl
cwtl
mulb
loopne
cs
pop
adc
movsl
sbb
fs
gs
mov
inc
js
int3
dec
dec
lcall
lods
push
and
inc
gs
pop
jmp
fisttpl
std
jg
ficoml
mov
scas
int3
add
cmp
shrl
cmp
js
mov
lock
ret
lock
push
repnz
test
cmp
lcall
movsb
icebp
adc
addr16
movsl
sbb
cmp
pop
mov
ret
ljmp
or
hlt
push
hlt
es
test
popf
sbb
stos
test
mov
cmp
jo
into
in
pop
xor
and
test
popa
push
ja
pop
pop
fidivrl
push
enter
mov
cwtl
test
sar
mov
adc
pop
loope
mov
icebp
jno
unpcklps
cmp
pop
xchg
inc
outsb
jp
lds
in
lock
pop
mov
sub
dec
xlat
fdivrp
mov
sahf
ds
loop
out
jae
or
mov
sub
shrl
arpl
outsb
orb
in
adc
nop
cmp
pushf
loope
cmp
inc
jge
or
xchg
test
fsts
and
ds
mov
pop
scas
rcl
push
dec
jge
movsl
xchg
add
adc
or
cmpsl
test
dec
or
mov
or
pushf
mov
out
int3
test
xor
insb
mov
int3
jmp
movsl
fidivl
or
mov
lock
add
xchg
dec
or
cmp
lahf
push
xor
ret
dec
mov
mov
jo
imul
cmc
jge
fistps
mov
mov
adc
lea
mov
mov
or
xorb
cld
sub
shlb
icebp
xchg
ret
loopne
cmp
imul
add
mov
mov
fldt
jl
add
cmp
out
in
repz
mov
xor
fldcw
xchg
insl
jg
push
push
insb
xchg
or
dec
enter
cltd
mov
in
inc
out
movsl
sahf
xchg
in
aad
sub
js
cld
testb
mov
pop
and
cs
arpl
repnz
or
fisttps
mov
into
insl
popa
je
sbb
push
inc
pop
incb
shlb
nop
pushf
mov
sub
scas
sub
and
add
scas
cmpsl
xor
rorl
fcompl
dec
loop
scas
pushf
add
into
divl
and
push
out
leave
popa
push
xchg
adcb
cmp
and
hlt
dec
divl
divl
pop
test
push
push
clc
iret
dec
test
xor
push
test
inc
xor
jno
imul
dec
fmull
sbb
sub
mov
decb
out
pushf
cs
sti
dec
pop
js
xchg
test
adc
stos
mov
movsb
pusha
in
lods
inc
push
adc
dec
shll
pop
sbb
mov
pushf
jecxz
imul
xor
xchg
cmp
int
mov
push
mov
into
sbb
push
syscall
xchg
push
lods
mov
test
fwait
adc
or
xchg
or
lahf
or
in
lods
scas
xor
sysexit
rolb
dec
hlt
imul
jecxz
in
pushw
jmp
loop
sub
int3
arpl
push
cltd
adc
cmp
cmp
aaa
rcrb
call
lret
movsl
loop
mov
popf
cmp
sbb
xor
hlt
mov
fwait
or
mov
aam
jns
mov
std
icebp
mov
sbb
inc
call
mov
shlb
cmp
xchg
jp
push
pop
adc
xor
ja
pop
jne
mov
movsl
out
fistpll
loopne
cs
mov
xchg
ret
movsl
addr16
mov
cmp
ds
or
es
fidivs
insl
mov
add
xor
stos
mov
int
enter
jns
inc
jne
pusha
int
fsubs
fnstsw
out
iret
ret
hlt
stc
sbb
es
cli
rep
and
ret
es
jmp
cmp
into
add
push
es
mov
insb
ss
nop
iret
jp
inc
jle
pop
ljmp
sub
jmp
nop
das
inc
push
xchg
sahf
jmp
sbb
push
adc
mov
enter
stos
or
mov
imulb
imul
das
addl
enter
fnstcw
cmp
inc
imul
cwtl
pop
outsl
pusha
enter
cmpb
push
mov
cwtl
repnz
sub
divps
daa
xor
mov
pop
in
shl
add
push
xchg
notl
mov
mov
xchg
insl
jnp
addl
mov
mov
sahf
repnz
cmp
xchg
dec
xchg
cs
vmovntdq
mov
xorb
jge
jns
adc
shll
sarb
xchg
cmc
dec
movsb
xchg
cmp
mov
repz
sarl
inc
add
and
push
imul
adc
lcall
push
mov
hlt
xchg
cmp
lret
cs
push
jns
jmp
cmpl
mov
scas
and
mov
gs
xchg
mov
mov
mov
add
rorl
lret
js
xchg
sub
jnp
dec
fwait
sbb
mov
mov
lods
lahf
pop
scas
pushf
mov
outsl
jae
movsl
sbb
sub
xor
push
ret
or
dec
lea
loope
or
movsb
outsb
pop
aas
pushf
movsl
xor
clc
add
adc
fldcw
mul
cmp
mov
mov
xchg
jmp
mov
outsb
mov
jb
xor
in
xor
sub
enter
popf
sub
mov
test
mov
inc
ja
incl
pop
sub
stos
insb
scas
cmp
cmp
cmp
mulb
int
inc
fnstcw
insb
lahf
dec
mov
das
jp
js
movsl
adc
shl
in
pop
pop
push
pop
dec
pop
arpl
ljmp
push
mov
scas
lahf
pop
aas
ds
aas
and
push
sub
add
jno
fsubrs
repz
cmp
repnz
popa
out
inc
hlt
test
sbb
sti
inc
cmpsb
push
arpl
mov
cmp
dec
sahf
cmc
and
xlat
pop
mov
and
stos
jo
and
call
aam
cltd
mov
clc
lds
adc
and
movsl
jg
aad
arpl
icebp
push
stos
push
rcl
jnp
jbe
ja
jne
fs
inc
addr16
or
in
xlat
jo
cmp
fistps
xor
push
das
cmp
lods
nop
sub
out
data16
fidivs
test
inc
lret
push
push
pop
loope
fcoml
or
and
cs
sub
jle
test
cmp
and
je
add
ficomps
or
add
in
jbe
lods
imul
and
popa
jns
mov
dec
std
cmp
add
lods
cmp
and
xchg
ds
jae
outsl
pop
hlt
dec
bound
out
scas
outsb
dec
cmpsl
dec
ficoms
sti
mov
iret
push
into
mov
mov
lds
mov
push
dec
jo
push
push
outsl
loope
mov
popa
mov
sarl
and
and
cli
adc
pop
cli
cmp
and
cmp
daa
call
lret
push
iret
push
shlb
lcall
or
mov
loopne
fidivl
in
or
cmc
adc
pop
push
popa
xor
fidivs
in
dec
mov
out
les
and
adc
jle
popf
pop
lods
out
jae
dec
in
dec
inc
decb
sbb
ss
pusha
stos
mov
xchg
inc
and
push
hlt
call
xchg
rcl
mov
jnp
push
add
or
inc
loope
inc
pop
sub
test
divl
ljmp
inc
in
sbb
mov
and
mov
cmp
cli
cld
pop
inc
pop
pop
push
cs
lahf
and
add
jbe
push
int
sub
add
add
arpl
jge
mov
add
sub
inc
add
es
lods
jo
insb
and
inc
sbb
sbb
mov
in
icebp
and
stc
les
push
lahf
add
inc
imulb
inc
jno
je
xchg
dec
add
fisttpl
mov
loop
js
jmp
leave
jge
pop
in
arpl
les
and
jle
mov
aam
imul
xor
jmp
sub
jb
add
loope
testb
mov
push
out
adc
xchg
pop
add
mov
pop
nop
sbbb
js
jne
add
test
mov
int
pop
or
addr16
dec
fnstcw
push
jp
xor
loopne
aam
mov
aaa
cmc
mov
int
cmp
inc
notl
xchg
movzwl
lahf
mov
sbbl
sub
adc
and
idiv
add
inc
stc
cli
cld
ljmp
jmp
xor
add
cmp
push
aas
roll
je
stos
push
lds
jo
popl
jbe
loopne
mov
out
dec
xchg
cmp
xchg
cmpsl
repnz
push
jno
mulb
jge
test
adc
cmp
sarb
cld
bound
cmpsl
nop
mov
mov
mov
sub
das
cmp
movsb
pop
mov
pop
add
mov
add
sub
and
xchg
mov
and
inc
xlat
jns
test
das
in
sarl
add
or
cmovae
insb
mov
addb
ja
pop
outsl
xor
test
clc
or
or
xchg
mov
in
push
cld
lods
mov
mov
cs
mov
ss
lods
mov
fwait
and
out
inc
inc
mov
xor
ljmp
jno
and
mov
xrelease
inc
add
lods
sbb
mov
insb
xchg
xchg
push
divl
enter
adc
sub
pop
mov
xchg
push
sahf
sbb
ja
bound
push
enter
es
scas
pop
inc
cmpl
outsb
stos
cmpsl
cmp
je
ret
cmp
movsb
push
repnz
pop
pushf
mov
out
pop
out
mov
adc
les
jns
shll
xchg
pop
popa
mov
dec
jmp
jle
adc
std
shlb
mov
mov
sti
pop
jl
push
jp
sub
hlt
jnp
mov
xchg
test
add
push
inc
mov
pusha
insb
movsl
mov
das
sub
mov
pop
pop
fstps
xchg
inc
mov
pop
dec
add
rolb
lcall
mov
xchg
movsb
mov
pop
inc
div
jp
ss
xchg
and
sub
push
cmp
mov
mov
push
mov
or
lods
or
xchg
inc
aad
in
and
das
jne
push
cmpsl
and
sub
sbb
ljmp
int
sub
dec
jle
jge
xchg
arpl
adc
pop
push
imul
xor
push
mov
dec
sub
mov
movsb
js
jns
outsl
es
addl
inc
mov
loop
enter
inc
mov
std
ret
dec
nop
ret
lea
hlt
mov
jg
sbb
xchg
dec
daa
std
or
push
and
jmp
lret
xchg
push
and
pop
jl
adc
mov
jae
and
or
test
jnp
lods
mov
and
test
mov
mov
inc
cmpsb
xor
and
je
loopne
decb
in
and
lds
jo
dec
xchg
cld
xor
hlt
adc
mov
xlat
fmulp
or
mov
jecxz
dec
mov
pop
mov
push
xchg
inc
mov
sbbb
movsl
sahf
mov
mov
cltd
nop
data16
add
jo
pop
xor
mull
push
add
and
movntps
add
loopne
sub
add
mov
sahf
es
fcmovnbe
cwtl
dec
pusha
xchg
dec
cmovl
sub
cmp
xchg
or
pop
jae
pop
adcb
jbe
das
and
int3
ret
aas
and
and
nop
fsincos
loope
mov
std
jmp
adc
cmc
dec
movsl
sbb
fisubl
mov
pop
aaa
pushl
xor
decb
enter
xchg
fsubl
test
jmp
inc
aaa
pop
test
push
xor
sbb
push
loop
sbb
sub
in
lcall
dec
in
hlt
push
test
lahf
mov
popl
aam
sub
mov
lret
cli
cmpsl
dec
or
les
mov
addl
pop
cmp
pop
cmpsb
sahf
insb
ret
pop
outsb
dec
sub
xor
loopne
jae
mov
imul
rol
test
xor
sub
adc
sub
xor
std
in
mov
mov
xlat
inc
scas
mov
filds
addr16
outsb
aaa
xor
push
add
test
pop
mov
pop
mov
lods
pop
lods
test
xchg
push
pop
dec
xor
subb
push
fidivrs
fldenv
aaa
fsts
xor
mull
xlat
mov
repnz
adc
scas
xlat
mov
add
pop
mov
xchg
je
adc
rclb
into
dec
cld
bound
push
xor
fdivr
outsb
scas
add
mov
lret
pop
mov
pop
inc
xor
enter
test
xor
es
lret
mov
jp
aas
xchg
scas
movsb
repnz
and
xchg
mov
add
cmp
cld
cli
mov
pop
ljmp
repnz
mov
dec
inc
inc
mov
push
sub
sub
mov
push
cmpsl
sub
mov
fildl
in
mov
test
rcrl
cmp
push
push
rolb
mov
cs
aaa
cs
aaa
mov
dec
cmpl
pmullw
adc
lahf
sub
imul
mov
xchg
filds
jns
or
testl
xchg
xchg
lea
mov
mov
out
pop
jbe
sbb
jmp
jp
sbb
movsb
sahf
scas
lods
in
sub
add
mov
imull
push
and
fdivrp
bound
sahf
ret
movsb
rcr
xchg
xchg
or
rcr
jmp
or
xchg
imulb
lds
cmp
jbe
pop
lods
mov
fstl
xchg
add
sub
imul
adc
pop
sbb
mov
pushf
or
in
sbb
mov
push
fsts
pushf
lcall
push
cmp
loopne
push
adc
adc
dec
jmp
outsb
mov
cmc
pop
mov
rcll
test
push
rolb
int
inc
push
or
jo
cmpsl
jmp
ljmp
add
or
adc
into
xor
loop
int
add
push
fadd
pop
cmpsl
adc
add
roll
inc
mov
sti
and
pop
std
sub
cltd
sub
inc
mov
daa
repz
push
iret
pushf
jo
les
test
mov
push
cmp
pop
sarl
mov
xlat
addl
or
shll
sbb
add
in
sub
push
sub
fisttps
movhps
inc
push
push
mov
outsb
mov
mov
lods
sbb
pushf
adc
stc
mov
or
dec
pop
add
push
fists
mov
xor
outsl
inc
jae
add
pop
cld
pop
xchg
stc
add
iret
inc
dec
gs
shll
xor
mov
imul
mov
mov
cld
in
sub
insb
add
test
stc
pop
fwait
in
or
leave
jp
js
in
pusha
push
xchg
cmp
rcrb
and
test
lcall
insl
sti
cli
std
scas
mov
jmp
lcall
jo
iret
xchg
cmp
andb
in
mov
out
lods
sbb
inc
mov
jg
xchg
lret
pop
jle
stos
or
cmp
ja
cmp
pop
or
bnd
xor
mov
gs
push
shlb
mov
lcall
iret
ds
cmpb
and
dec
and
push
clc
in
out
cmpsb
test
adc
xchg
jle
arpl
or
add
aaa
push
fisubrl
subb
and
ret
test
mov
lret
push
movsl
ficoml
test
jb
popl
call
xor
addb
call
arpl
jns
jae
add
and
mov
enter
ljmp
roll
sahf
sub
sbb
jb
jmp
scas
add
mov
cld
aam
push
push
mov
inc
or
stos
sbb
dec
sbb
cmp
fdivrl
cli
fisttpll
test
and
sbb
pop
jb
xlat
ret
xchg
pop
pop
stc
pop
int
stc
jle
hlt
out
je
leave
add
data16
scas
mov
or
lods
mov
adc
cltd
dec
cmp
mov
imulb
pop
aam
sbb
std
rorb
lods
add
sbb
xor
or
aam
sub
add
fcomps
mov
mov
stos
mov
cmpsl
mov
or
sbb
clc
insl
xchg
lods
rcrl
xchg
addr16
mov
mov
rcrb
jg
jo
pop
mov
leave
mov
sahf
insb
push
xlat
cmc
inc
jbe
mov
xor
fidivs
mov
andb
xchg
call
ret
adc
and
arpl
clc
lcall
out
jno
inc
sbb
jne
lret
inc
arpl
fistpll
cltd
cltd
and
cmpsb
mov
xchg
pop
daa
jno
mov
or
push
add
cld
fidivs
es
sti
mov
xor
adc
cmpsl
xlat
pop
stc
pop
xchg
cmp
test
testb
cmp
cwtl
jae
addr16
in
and
jno
aam
dec
mov
loope
add
pop
das
push
jbe
dec
add
inc
dec
sbb
cltd
cmp
arpl
outsb
sub
sub
and
sub
pop
sub
sub
nop
roll
mov
cs
ds
ret
jg
outsl
sub
push
cmpsb
addr16
hlt
push
jge
outsb
insl
xor
sub
cmc
jp
cmp
aas
loop
lock
add
js
and
repnz
outsl
sub
push
test
dec
test
adc
das
dec
das
mov
xchg
rol
pop
cmp
xor
cwtl
xlat
into
fnsave
into
imul
add
mov
out
pop
repz
daa
xor
xor
clc
outsb
insb
jmp
adc
mov
dec
shll
inc
push
lea
jg
and
sub
ret
ret
mov
inc
decb
xchg
lret
mov
test
jne
xchg
jmp
jns
popa
cltd
mov
in
cmpsl
movsb
or
add
jp
adc
stos
jnp
mov
test
add
pop
inc
sub
pushf
lea
xor
or
cmc
sbb
aas
mov
dec
push
insl
lock
sub
mov
mov
loop
inc
mov
daa
inc
stos
push
lock
aad
sub
add
inc
pushf
mov
jecxz
fmull
mov
shr
xchg
repnz
push
nop
pop
or
or
or
xor
push
mov
mulb
dec
lret
mov
out
or
rcrl
sub
xchg
jo
push
mov
test
pop
in
ror
xor
hlt
pop
bound
in
sub
nop
fistpl
test
inc
jae
mov
rol
clc
int
lcall
insl
aam
xchg
dec
rcrb
test
test
in
stos
bound
xchg
out
push
es
lods
jns
jns
fnsetpm(287
and
testb
and
imul
mov
mov
clc
and
out
sub
mov
xchg
cmp
jnp
out
pop
nop
pop
inc
pop
adc
outsb
stos
cs
ret
pop
pop
lea
imull
pop
push
mov
push
adc
or
lcall
dec
xchg
shlb
and
cmp
push
jns
and
push
nop
jne
mov
jle
add
repnz
jp
or
int
mov
sbb
adc
std
add
pop
ds
adc
icebp
popf
arpl
push
lock
push
lods
xor
jbe
call
mov
inc
ret
cli
pop
mov
pop
outsl
mov
inc
cmp
imul
xchg
stc
nop
cwtl
enter
adc
cmp
or
mov
xchg
pop
inc
shll
clc
lds
jg
das
pop
jb
xor
stos
sahf
ret
in
out
and
out
insl
push
dec
or
cmp
xor
out
jb
adc
push
xorl
icebp
imul
jmp
push
inc
and
jmp
fwait
sub
into
iret
mov
out
inc
push
inc
jbe
cmpsb
mov
jne
stc
scas
add
stos
sbb
loop
adcb
pop
jb
subl
stos
ret
push
sbb
cwtl
adc
xchg
adc
push
stos
ret
cltd
leave
push
add
dec
sbb
inc
into
insb
loopne
inc
outsl
test
lcall
aad
mov
fstpl
loopne
std
adc
loopne
xchg
mov
aas
dec
mov
xlat
arpl
pop
aad
ja
stos
int
xor
aas
cmpsl
imul
aas
mov
cmpsb
data16
div
and
sbb
testl
inc
jno
cli
arpl
cltd
test
push
and
add
add
das
or
jo
ljmp
shrb
add
jno
fistpl
pusha
adcl
mov
mov
push
or
jg
rcr
mov
outsl
sbb
data16
sahf
sbb
sbb
test
adc
insb
gs
rcl
aas
fucomp
mov
cmp
in
and
dec
scas
mov
adc
into
jo
and
pop
mov
les
das
bound
cmp
outsl
ss
outsb
xchg
jp
add
scas
push
jecxz
loope
mov
cli
test
and
push
jb
push
sub
pop
ljmp
movsb
in
push
std
fldt
add
loop
xchg
cs
cli
or
pop
xor
roll
test
testl
pop
and
movsb
push
test
bound
mov
dec
xchg
xorb
pop
dec
aaa
xor
mov
inc
adc
mov
pop
cwtl
imul
test
mov
pmaddwd
adcb
mov
mov
xor
aas
clc
call
int
push
push
dec
push
dec
das
mov
or
inc
mov
sbb
xlat
cwtl
mov
dec
std
ds
add
pop
idivl
das
rclb
and
shlb
adc
mov
arpl
call
inc
add
mov
push
jne
repnz
in
lock
sub
xor
push
push
sbb
sti
xor
cmp
sbb
repz
stos
xchg
jmp
into
repz
push
or
mov
add
hlt
xor
cmp
scas
adc
mov
jne
adc
push
popf
lods
lods
stc
gs
fsubr
push
imul
loop
data16
sbb
pop
ret
hlt
cmp
xor
push
loopne
cmp
xchg
xchg
push
pusha
sbb
push
test
cmp
mov
cltd
sbb
mov
outsb
mov
arpl
stc
xchg
int3
insl
pop
cmc
fcompl
aaa
sbb
pop
gs
adc
pop
inc
fdiv
mov
cwtl
xchg
mov
mov
mov
adc
sbb
jl,pt
subb
js
sub
jno
testb
aad
loope
stos
in
ss
mov
xchg
inc
mov
or
dec
mov
add
xor
or
pmulhuw
lods
inc
insl
or
jo
xchg
test
add
push
movsb
rcrb
mov
or
shlb
in
mov
test
mov
insl
lret
js
xchg
sbb
xor
sub
filds
xor
xlat
subb
jae
jbe
sub
push
data16
aas
test
stc
sbb
ljmp
jmp
pop
inc
scas
sarb
mov
sub
add
sbb
push
loope
pop
adc
insl
adcl
rolb
mov
or
mov
stos
lahf
ja
mov
int
cmp
jne
lret
repnz
pop
lret
orl
mov
xchg
push
dec
cmp
push
dec
pop
icebp
or
jmp
rcll
sbb
mov
xor
xlat
sti
jae
mov
lret
mov
dec
nop
sub
xchg
jmp
xor
push
cltd
ja
mov
mov
mov
inc
inc
mov
fsubrp
xor
mov
pop
dec
test
adc
inc
lret
mov
loope
repz
fdivs
sbb
sub
insl
pop
mov
bound
mov
mov
mull
cmp
push
arpl
or
shrb
adc
movsb
fisttpl
xchg
cmc
pushf
sub
shrb
sar
mov
lock
stc
xchg
lcall
das
jmp
push
fidivrs
sbb
jbe
pusha
popf
jmp
sbb
sbb
jp
test
pop
pop
or
lods
xchg
jno
out
or
add
js
cwtl
imul
xchg
inc
cmp
sub
and
mov
nop
aas
lahf
xchg
adc
mov
out
sub
inc
imul
xchg
adc
pushf
xor
mov
push
xchg
sti
daa
sti
push
pop
jp
incl
or
fsts
mov
scas
cmpsl
sbb
xadd
xor
pusha
push
nop
in
imul
xchg
sub
sbb
mov
jle
push
icebp
push
pop
mov
cld
xor
leave
mov
cmp
cmp
gs
lcallw
cmp
push
jo
push
cld
pop
call
add
pop
pop
or
inc
fistl
pop
jp
divl
cmp
add
cltd
dec
mov
stos
fiadds
frstor
fistps
aaa
mov
jg
es
lock
jb
add
fisubrl
outsb
pop
cwtl
xchg
je
push
lcall
dec
xor
cmp
mov
cmp
mov
les
icebp
jb
movsl
inc
mov
jae
mov
cmp
and
pop
mov
push
pop
pop
lods
mov
orl
int
and
push
jecxz
enter
dec
dec
test
and
mov
ret
add
pusha
adcb
jb
int
jns
cltd
dec
gs
xlat
data16
clc
shrb
addb
xchg
sbb
sahf
add
insl
add
xor
pop
add
ljmp
mov
push
xchg
push
bound
out
dec
sti
clc
sub
and
lods
pop
cvtps2pd
test
dec
orb
jne
negb
or
in
xchg
sarb
leave
jnp
or
insl
cwtl
test
out
add
or
cltd
jg
popf
and
jmp
sub
push
mov
jne
out
popf
pop
pop
dec
incl
adc
pop
push
sbb
hlt
lcall
cmp
push
xor
push
pushf
pusha
xor
jp
psadbw
mov
add
add
or
dec
push
and
or
loopne
imul
ret
lock
lret
pop
push
fs
je
mov
addb
cmp
xor
jae
lea
push
xchg
jo
cmp
sbb
push
cmp
cmp
ljmp
xor
push
repnz
dec
je
movsb
adc
pop
pop
mov
sub
sub
push
dec
lods
pop
sub
insb
bound
jg
jns
mov
popf
dec
fidivrs
push
loope
popa
iret
pop
mov
imull
inc
adc
leave
fsubr
mov
cmc
lret
repz
pop
jbe
orb
cmp
mov
add
mov
mov
sbb
xchg
jecxz
loopne
daa
xlat
inc
mov
push
div
sbb
clc
dec
fmulp
in
xor
fsub
call
aam
xor
push
fwait
or
clc
jno
push
jmp
push
js
roll
or
pop
rcll
push
clc
icebp
push
add
sub
xchg
push
and
cli
sub
ret
shr
jg
les
pop
das
xchg
dec
mov
shl
ret
cmp
fwait
in
xor
test
dec
outsl
or
cmc
cmpsl
mov
push
fdivrs
popf
dec
pop
ljmp
fadds
mov
shlb
lcall
int
out
gs
mov
xchg
mov
add
addr16
jnp
and
aam
add
add
icebp
test
jbe
cmp
push
jns
push
jne
dec
loopne
or
fwait
test
cmc
mov
notb
mov
addr16
mov
push
and
stc
jmp
ss
pop
mov
les
jle
call
nop
and
out
lds
in
int3
adc
dec
jg
movsl
jb
nop
sub
sbb
or
push
mov
lds
mov
aam
data16
jns
andb
jmp
cmp
mov
add
stc
popa
insl
inc
ret
mov
mov
popl
pop
mov
jmp
in
xchg
sahf
movsl
pop
dec
iret
pop
mov
jne
imul
ss
or
fld
mov
jle
adc
adc
dec
popf
fstps
test
js
iret
dec
cwtl
mov
or
lea
and
mov
or
inc
push
nop
push
or
call
lcall
out
daa
clc
mov
push
adc
cmp
push
fwait
dec
mov
adc
mov
inc
sti
pushf
fidivs
mov
and
ret
rcrb
inc
dec
dec
mov
out
cmc
mov
jno
xchg
sbb
sbb
pop
shl
push
xchg
lahf
bswap
sbb
sbb
sahf
xor
dec
popa
inc
dec
cld
mulb
fcomip
mov
mov
xor
pop
fwait
in
dec
cmpb
mov
fisttpl
cld
and
mov
mov
xchg
sahf
and
popa
pop
mov
je
mov
repnz
mov
cmp
jb
in
push
mov
mov
imul
add
mov
inc
out
clc
int
mov
arpl
sub
fldcw
imul
stos
cmp
xlat
cmp
push
lods
sbb
cltd
rorl
sub
sbb
and
hlt
and
mov
addr16
andl
int3
push
sbb
in
inc
mov
sbb
jmp
dec
sub
divb
call
inc
fcmovbe
dec
xchg
fsubs
mov
in
add
add
push
shrb
mov
fmull
loopne
mov
hlt
in
dec
loop
mov
pop
cmp
sbb
scas
dec
jne
cltd
mov
adc
pop
out
xor
sbb
dec
popa
int
inc
je
popa
mov
xlat
or
mul
dec
jp
in
test
into
divl
jo
adc
repnz
cmp
aam
jno
lahf
aaa
pop
out
push
lahf
incb
cmpsb
mov
jne
push
jbe
xchg
mov
jns
in
icebp
cli
xorb
sbb
pop
adc
mov
sub
cs
mov
mov
loop
push
aas
les
cmc
xor
mov
mov
jle
in
fnstenv
out
in
aas
adc
mov
or
pop
out
pop
test
xchg
cmp
cli
and
pop
cmp
mov
lahf
stos
push
and
pusha
mov
push
adc
imul
insb
inc
xor
mov
mulb
into
push
int3
cmp
or
fwait
pop
jge
pushf
sbb
and
inc
fistl
lods
adc
add
add
insl
adc
faddl
jbe
loop
push
inc
lret
outsb
in
stos
cwtl
dec
fsubp
jmp
imul
xchg
xor
scas
mov
lods
shl
or
rclb
jae
les
jno
or
push
mov
push
aad
test
add
add
sarl
cwtl
sub
mov
iret
test
jg
fwait
dec
pop
dec
mov
nop
movsb
adc
push
inc
push
ffreep
test
stos
add
cmp
or
push
int3
notb
xchg
cli
mov
imul
sbb
xchg
mov
mov
out
in
and
in
nop
arpl
and
push
and
xchg
popf
jo
mov
xchg
icebp
dec
mov
fstl
mov
sbb
dec
popa
mov
sti
xorl
cmpsb
dec
sbb
xchg
loopne
and
jbe
sub
add
stos
repz
sbb
leave
mov
popa
stos
loop
in
aad
push
cmp
fstps
scas
daa
and
shll
sahf
call
jbe
into
mov
sub
jmp
leave
sbb
mov
add
mov
sub
xlat
sahf
xchg
nop
test
roll
adc
jno
inc
jg
cltd
mov
aam
jle
popa
mov
lea
ljmp
testb
ljmp
repnz
xchg
mov
dec
sbb
in
lahf
mov
inc
cmp
dec
pop
add
xor
push
cmp
ds
cwtl
mov
mov
shll
sbb
jo
adc
lret
dec
pop
mov
add
mov
add
push
mov
pop
in
std
or
and
mov
pushl
test
mov
mov
and
pop
xor
dec
add
pop
add
sub
mov
xor
jl
lock
loop
pop
testl
addr16
inc
in
and
jmp
stos
movsl
mov
leave
xchg
sbb
xchg
je
mov
pop
or
sbb
mov
pop
sbb
pop
fs
xchg
ja
addr16
dec
mov
sbb
and
jae
pop
adc
dec
pop
aam
in
mov
lods
repnz
pop
shlb
out
in
out
mov
sub
out
cwtl
adc
mov
cld
rorl
inc
out
shlb
ret
rorl
sub
jp
xor
jecxz
mov
xchg
cmpsb
mov
cmp
test
cltd
dec
adc
mov
imul
or
repz
sbb
cli
fimull
xchg
mov
xor
sub
rcr
dec
sti
cmc
xorb
push
cs
sti
rcl
popf
dec
jp
xor
inc
into
xchg
cltd
adc
adc
imul
sub
push
ljmp
jb
sub
inc
mov
mov
pop
pop
xchg
mov
mov
mov
rolb
and
jno
pop
fcmovu
adc
mov
xchg
or
and
scas
dec
mov
int3
lret
jns
cmp
mov
fstpt
pop
xchg
or
xchg
and
push
cwtl
pop
hlt
inc
mov
sub
insl
sub
lret
daa
test
lock
push
xor
insl
jecxz
fcmovnbe
and
sbb
scas
sti
adc
js,pt
mov
mov
mov
push
pop
inc
insb
mov
add
notl
pop
xor
mov
arpl
pushf
mov
cmpl
cmc
push
sub
roll
scas
mov
inc
enter
mov
mov
pop
ja
dec
fistl
cld
add
into
pop
and
int
imul
cmpsl
sti
xchg
jmp
std
jbe
sub
enter
jb
xor
sbb
popf
and
dec
std
repnz
xchg
sbb
sbb
and
push
aas
lret
add
out
idiv
neg
in
pusha
fcomip
jbe
loopne
push
bound
pop
mov
adc
dec
imul
fwait
xor
and
xor
scas
std
lret
fimuls
mov
adc
stc
mov
inc
repnz
inc
movsl
and
loop
iret
or
mov
out
out
dec
dec
dec
cltd
xor
hlt
inc
push
insl
adcb
cmp
push
add
dec
sarb
es
add
sbb
cli
xor
jp
xchg
dec
dec
std
xor
call
dec
inc
and
sub
cmc
cmc
xor
xchg
lahf
sarb
insl
addr16
push
frstor
push
push
cmc
inc
rol
adc
push
cs
stc
xchg
adc
orb
push
adc
cmp
push
movsl
test
jecxz
mov
push
in
push
sbb
int
and
dec
loop
aam
imul
pop
mov
xor
packuswb
xchg
xor
cmp
lahf
mov
dec
mov
outsb
in
mov
mov
in
xor
sub
dec
cmp
out
mov
sub
loopne
cwtl
mov
lods
cmp
ret
adc
xchg
xchg
shlb
sbb
in
ret
or
out
cmc
loope
fwait
ljmp
stc
inc
or
sbb
icebp
mov
pop
scas
add
sahf
add
inc
dec
pop
js
decl
push
cmp
sub
test
lods
std
push
lods
sub
jb
adcl
jmp
pusha
xor
sbb
add
xor
fcmovnu
test
adc
jecxz
mov
popl
push
decb
jecxz
add
clc
jns
mov
mov
test
mov
loope
inc
pop
frstor
mov
push
lahf
jp
lret
mov
dec
mov
pop
push
nop
icebp
pop
mov
leave
std
incb
mov
xlat
scas
push
and
loope
pop
leave
xor
stos
filds
icebp
mov
jns
cmp
push
js
push
mov
and
sbb
pop
iret
mov
or
je
lahf
pop
repnz
cmp
mov
xor
repnz
adc
rorb
pop
push
inc
jb
dec
mov
inc
xchg
xor
push
outsb
jno
push
jo
bound
lcall
mov
cmp
sbb
pop
cltd
mov
add
lret
jne
jg
outsb
iret
test
add
outsl
movsb
clc
jge
lret
in
xchg
and
or
or
mov
mov
gs
das
sbb
add
pop
mov
aad
inc
setno
fisttpl
les
xlat
aas
mov
inc
mov
push
jns
out
mov
dec
cmpsb
push
cmp
pop
sbb
or
in
enter
les
andl
scas
xor
leave
jecxz
push
sbb
mov
dec
mov
cs
fldenv
arpl
mov
fidivrl
mov
xlat
in
and
mov
sub
jno
cmp
jle
jae
not
es
push
jns
cmpsl
jge
inc
or
in
jp
fimuls
push
fsubrl
add
gs
es
mov
pop
and
stos
stos
inc
or
mov
dec
dec
sbb
cmp
push
cs
lds
aam
out
jnp
jns
cmp
mov
shll
or
sbb
push
mov
ret
pop
pop
fwait
lcall
scas
or
add
mov
out
or
das
jmp
push
imul
dec
fdivl
popf
mov
cmpsl
in
add
arpl
jge
dec
adc
jbe
cltd
cmp
push
aam
outsb
add
push
dec
pop
jns
cld
outsl
and
repnz
add
loop
pop
imul
scas
lcall
xchg
call
jne
bnd
jbe
inc
ficompl
xchg
sbb
pushf
pop
jns
pop
arpl
dec
mov
dec
and
test
jb
les
fisubrs
mov
rcrb
mov
inc
sub
es
jmp
pop
sbb
jno
sti
push
fwait
dec
mov
pop
fdivs
pop
mov
mov
in
aad
out
push
rcrl
mov
xor
or
ret
sub
push
ret
sub
and
lea
dec
pop
inc
repz
std
icebp
xor
lcall
std
int3
xor
push
cmp
cmp
cltd
add
fnstenv
xor
pop
out
pushf
or
popa
sub
xchg
insb
jmp
jmp
push
xchg
mov
js
sahf
jle
lods
in
je
dec
and
adc
jg
xlat
push
mov
push
mov
lock
xor
rclb
mov
dec
adc
xchg
xchg
xchg
cld
out
adc
pop
lret
push
ds
mov
cmpsl
lea
mov
ret
push
ja
mov
mov
lock
push
push
mov
push
add
mov
clc
xor
cmp
out
sbb
inc
repz
push
sbb
mov
pop
aam
sbb
push
add
scas
mov
shl
jae
mov
rcll
push
imul
stos
and
xor
jmp
aam
lds
into
stos
add
push
add
cs
dec
aas
pop
inc
test
call
mov
fs
add
test
jo
enter
popa
pop
pop
pop
scas
mov
nop
sub
add
sub
aad
leave
repz
movsl
push
fisttps
jb
adcb
std
add
loop
xchg
mov
mov
push
sbb
movsb
out
ds
fdivl
or
cmp
ljmp
call
out
fcomps
xorps
adc
stos
mov
jnp
sti
cmp
loopne
outsl
testl
cmc
sarl
sbb
addr16
loopne
movsb
jecxz
jmp
adc
push
aaa
popf
jno
cwtl
pop
notb
sub
xchg
push
inc
shll
fsubrl
dec
sbb
mov
cltd
sub
dec
mov
mov
xor
std
adc
data16
fdivrl
mov
sub
xchg
mov
lea
xorb
xor
mov
and
out
sbb
sub
ss
imul
stc
mov
mov
pop
sbb
xor
xor
mov
cmc
lock
lahf
rcrb
push
cmp
out
mov
jmp
mov
jbe
into
cmp
rcrl
add
cltd
or
adc
mov
xchg
adc
scas
dec
scas
lds
sbb
cmpb
cmp
notb
inc
cmp
hlt
int3
ss
mov
mov
push
fsubl
sahf
xchg
in
add
xchg
rorl
into
mov
mov
ss
sub
jmp
mov
sti
add
sub
pop
mov
adcb
add
dec
pop
sub
out
mov
shlb
xchg
jnp
jecxz
xlat
cmp
cmpsb
rep
addb
xor
shrb
shll
xor
and
dec
mov
or
decb
adc
sbb
pop
inc
and
lcall
xor
and
lock
aas
pop
out
cmp
aas
mov
aas
dec
popa
lahf
pop
jl
inc
sbb
mov
and
add
push
or
mov
loop
fsubl
mov
add
pop
aam
pusha
daa
or
scas
ror
invd
xor
mov
shll
sti
js
add
das
das
mov
loope
and
mov
movsl
inc
add
cmp
push
sub
cmp
daa
fldcw
ljmp
jnp
fcomp
stos
pop
xor
sbb
add
pop
mov
cli
cmpsb
ret
inc
push
jbe
push
xchg
sbb
adc
inc
and
sbbb
cmp
mov
addl
mov
add
test
adc
dec
mov
in
xchg
jbe
aad
inc
mov
and
icebp
test
push
xor
add
add
inc
subb
lahf
or
xor
lret
mov
stc
in
mov
inc
rorb
push
and
mov
inc
or
and
inc
inc
mov
jnp
sahf
dec
mov
sahf
out
push
loop
testb
mov
pop
enter
inc
xchg
dec
jle
xor
ret
adc
fisubrl
ljmp
add
lret
stc
stc
adc
enter
mov
jle
out
or
test
icebp
testl
shlb
jmp
dec
push
test
jno
fwait
iret
lahf
mov
ja
orb
xchg
in
add
mov
into
ret
mov
pop
in
dec
pop
and
jmp
jae
shll
fs
daa
repz
popa
xor
in
push
push
adc
sbb
jl
out
andl
pop
dec
mov
inc
aam
cld
add
jge
jbe
in
push
cmpsb
lahf
mov
mov
cli
in
mov
sub
cld
das
lods
enter
ret
cli
fists
dec
inc
pop
lahf
dec
push
aas
xor
xor
iret
xlat
js
insb
in
mov
out
ffree
cld
jl
aaa
lret
inc
and
xor
popl
pop
jo
push
clc
adc
sub
jb
sub
sbb
js
or
insb
ds
add
test
xchg
les
or
or
ja
aaa
pop
dec
inc
mov
sbb
mov
jae
test
and
out
pop
lret
mov
add
imul
sbb
sbb
sti
push
mov
add
fnstenv
shr
inc
cmp
mov
mov
mov
fwait
pop
push
das
adc
iret
loop
dec
lea
mov
add
pusha
mov
outsl
mov
outsb
cmp
push
push
and
popa
cmpb
mov
jge
popf
popa
out
int
shlb
add
lods
cli
int
jmp
dec
push
jle
daa
add
gs
sbb
jge
pusha
fldcw
adc
stc
or
xchg
mov
sub
and
fstpl
faddl
and
jno
cmp
rcr
sub
dec
into
sbb
insb
cmp
pop
xchg
adc
aad
mov
push
jg
sbb
stos
xor
sbb
sbb
rclb
stos
movsb
leave
sbb
lods
pop
test
fildll
inc
enter
rcr
test
nop
mov
inc
cmp
lret
sti
and
fistpl
loop
outsb
jae
cltd
ret
imul
mov
adc
clc
pop
sbb
loop
scas
push
or
mov
in
add
fwait
inc
mov
lds
inc
inc
lds
xor
adc
jmp
std
mov
lock
and
ficoms
mov
sub
or
cmp
or
nop
xchg
ffree
fisttps
popf
leave
mov
jno
or
or
fsubl
or
lods
xlat
stos
inc
mov
add
sub
pop
nop
inc
jmp
jp
jne
xor
push
hlt
orb
in
clc
xlat
adc
adc
scas
pop
mov
pop
cmc
ja
aam
loop
push
pop
pop
sub
add
call
test
pop
sub
icebp
fnstenv
pop
lahf
or
ret
test
loopne
adc
imull
lock
mov
xchg
dec
sbb
cwtl
jecxz
xchg
ljmp
push
xchg
lcall
dec
das
shrl
lret
push
or
sarb
dec
mov
mov
jl
test
mov
push
mov
pop
out
in
jne
sbb
scas
aaa
mov
gs
loope
or
insl
mov
test
stc
mov
adc
cmp
je
pop
push
clc
push
xor
ficompl
in
add
pop
cmp
push
mov
mov
int
xchg
lods
cmp
and
test
dec
mov
dec
je
out
aam
and
dec
push
add
xor
lret
in
push
xchg
iret
and
movsb
inc
mov
dec
orl
mov
xchg
mov
mov
daa
xadd
sbbb
inc
int
lods
in
push
mov
test
sbb
push
fldt
xchg
ret
push
mov
cmpsl
or
sub
shr
fwait
or
adc
and
jne,pn
adc
add
mov
js
rclb
cld
movl
fildll
mov
add
push
cmc
xor
pop
mov
or
mov
push
sbbb
xchg
dec
addr16
arpl
or
lret
into
iret
push
negb
arpl
test
faddl
jle
mov
movsb
add
xchg
or
scas
lret
or
imul
adc
popf
arpl
jl
cmpb
test
test
or
pop
and
fstps
les
sub
fisttpl
stos
and
adc
sbb
ficompl
out
jne
mov
or
mov
adc
sbb
ds
fdivrs
mov
sbb
jp
add
pushf
jp
in
inc
or
scas
repnz
into
shll
hlt
dec
test
sub
stos
add
cmp
aaa
mov
out
jmp
xor
inc
push
sub
int
movsl
mov
roll
in
push
adc
popa
or
sbb
dec
xor
pop
inc
enter
fs
mov
add
mov
xchg
mov
xchg
ss
aad
cltd
dec
pop
mov
mov
add
dec
arpl
mov
mov
jne
gs
mov
addl
mov
mov
outsb
shl
arpl
jmp
jnp
and
divl
ret
es
movsl
sub
addr16
out
xor
push
loopne
pop
push
lret
jmp
pop
xchg
push
faddp
lock
sbb
mov
add
sbb
pop
movsb
ret
insl
adcl
push
insl
fwait
inc
test
cmpsb
scas
xchg
leave
sub
aas
clc
xchg
ljmp
cmpsb
sbb
cli
xchg
xchg
push
data16
fiaddl
sub
mov
mov
int3
outsl
cs
testb
xor
and
sti
pop
pushf
fnstenv
stos
jnp
fiaddl
cli
clc
add
fld
mov
sahf
ficoml
int
loope
mov
jecxz
rcr
cmp
xchg
cmpsl
push
jmp
xchg
inc
lahf
mov
and
pushf
xchg
js
into
sub
gs
or
and
and
push
mov
xchg
lock
aas
out
dec
lds
mov
enter
das
movsb
mulb
mov
mov
mov
dec
sbb
fs
pop
repnz
add
out
adc
mov
hlt
outsl
sub
sub
lret
push
add
stos
mov
cmp
pusha
jecxz
hlt
and
push
testb
adc
jns
inc
add
jae
inc
pop
testb
cld
dec
clc
mov
lcall
aaa
jle
cmp
or
in
int3
popl
nop
shl
sbb
loop
stos
xchg
repz
sbb
jbe
es
add
lcall
rorl
xchg
xchg
add
cltd
dec
xchg
push
out
sahf
push
adc
push
lock
adc
adc
addr16
mov
xchg
sub
jle
shrl
outsl
mov
xor
xlat
sti
push
in
in
mov
pop
xor
push
fcmovnbe
and
lret
inc
rcll
in
outsb
pop
cmp
or
or
int
sbb
mov
cmp
mov
mov
imul
ds
push
fsts
outsb
or
ljmp
loopne
in
idivb
mov
nop
add
std
bnd
fs
ret
sar
xchg
push
cmc
rorl
sarl
or
imul
pushf
scas
sbb
stos
inc
mov
neg
cltd
add
rcr
and
ja
xchg
add
mov
shl
dec
out
add
popf
mov
neg
in
push
xor
jo
mov
fmul
add
add
mov
out
frstor
inc
mov
pmuludq
lcall
mov
lock
sarb
mov
orl
dec
scas
jbe
push
cmp
jns
icebp
and
in
mov
push
sbb
mov
sahf
jg
fldcw
popf
pop
pop
inc
and
and
popa
dec
std
inc
xor
push
cmovb
push
ljmp
and
pop
test
movl
out
ret
push
cli
adc
pop
adc
aam
pop
mov
fiaddl
pop
out
sub
stos
mov
pop
push
into
std
test
and
es
xchg
jnp
adc
insl
fdivs
xchg
inc
fiadds
outsl
fnsave
mov
cmp
xor
pop
pop
mov
cld
mov
out
rclb
add
sbb
rorl
push
sub
addb
inc
pop
push
push
aam
mov
aam
lods
jb
jb
and
sbb
xlat
xor
out
jle
sti
adc
xchg
xor
adc
fldt
in
in
adc
xor
add
out
push
add
in
lock
loope
xchg
pop
add
and
adc
cmp
push
mov
lret
shll
lods
xchg
jmp
xchg
xchg
loop
pop
push
ret
std
mov
push
mov
leave
adc
or
dec
cltd
test
jne
pop
mov
popa
xorb
cmp
adc
mov
outsb
mov
lcall
mov
lods
mov
loop
cmp
mov
push
xchg
mov
loopne
lods
in
repnz
xchg
test
sbb
xchg
xor
mov
push
sub
mov
lcall
and
aad
imull
mov
cmp
shlb
je
and
mov
xor
dec
xchg
ret
cs
fdivl
and
loopne
aad
push
cmp
xor
pop
xor
mov
xchg
in
inc
lret
xor
ret
sub
jp
xchg
into
push
out
in
xor
in
testb
lret
pop
push
outsb
pop
movsl
stos
dec
cmp
cmpsl
nop
stos
inc
icebp
repz
std
dec
cmp
dec
data16
mov
fistl
xchg
xor
or
cmp
orb
lret
pusha
movsb
and
out
jo
push
cltd
shlb
lods
push
mov
test
nop
push
js
inc
outsl
mov
sub
mov
aaa
xlat
cmc
mov
xor
movsb
cmp
push
shll
push
lahf
adcl
call
sbb
dec
or
clc
sarl
pop
sub
xchg
sbb
loop
mov
cwtl
adc
jne
mov
cmp
sarb
pop
sub
add
dec
int3
xchg
mov
mov
jmp
repz
push
xchg
add
or
push
and
leave
cmp
inc
xchg
adc
fwait
nop
je
pop
jne
jecxz
lret
shrl
mov
push
lret
addr16
jae
cmpsb
pop
daa
push
lds
js
mov
fs
mov
imul
pop
push
push
mov
inc
dec
mov
cmp
xor
or
stos
call
fwait
sbb
adc
push
and
cmc
roll
mov
jmp
addr16
fsubp
add
and
mov
pushf
pop
in
push
std
push
xor
push
mov
test
push
movsb
insl
cwtl
lods
inc
jne
bound
mov
xchg
jne
inc
mov
aas
mov
dec
rcll
push
insb
cli
sub
in
pop
mov
add
mov
fs
ret
lock
mov
and
ret
in
or
aam
mov
cmp
pop
push
rorl
push
lock
sub
push
aad
test
pusha
sarb
fadds
call
mov
mov
xor
loop
xchg
inc
jne
ret
push
in
ret
mov
jno
jnp
ljmp
add
add
adc
mov
xchg
inc
and
dec
jge
loop
int
push
sarb
jp
jge
jbe
jmp
pusha
mov
mov
imul
add
mov
lahf
insb
sub
ds
push
das
inc
cli
mov
lcall
insb
outsb
fidivs
sarl
inc
sub
or
inc
xor
js
mov
xchg
cmp
dec
or
lret
testb
jo
xor
pushf
dec
div
mov
loope
ljmp
mov
shrb
call
repnz
lds
pop
mov
ds
push
mov
mov
push
jmp
dec
out
cs
test
lret
and
fadds
mov
lods
push
inc
addr16
jbe
or
ja
mov
xchg
sahf
push
insl
icebp
cmpsl
in
in
pop
subb
and
or
xor
pop
xor
dec
sbb
aam
nop
jo
popf
decl
jp
inc
loope
add
mov
adc
mov
subl
popf
aas
gs
loopne
das
lods
es
or
mov
xor
inc
leave
sti
jecxz
std
insb
mov
jno
dec
push
movsb
inc
sbb
test
sarl
in
adc
sub
lock
mov
nop
mov
sbb
mov
mov
ret
fisubrs
mov
inc
mov
sub
pop
jnp
pusha
inc
xchg
push
mov
mov
outsl
mov
adc
int
cmp
int
push
push
mov
adc
inc
mov
push
scas
lds
hlt
lods
jg
cld
mov
and
shl
xchg
les
ret
add
mov
or
jo
sub
or
fistpll
xor
ficompl
add
shll
jecxz
sub
sti
cs
inc
sti
mov
pop
popa
cmpsb
rcrb
sub
mov
enter
test
jns
movsb
dec
dec
scas
ljmp
js
push
adc
pop
jns
inc
mov
dec
jl
pminsw
jp
daa
adcl
sbb
je
loop
sub
cld
pop
inc
fstl
add
mov
frstor
mov
loopne
mov
fsubrl
push
cmp
cmp
pop
orl
lcall
jmp
dec
pop
jg
insb
xchg
push
and
dec
xchg
mov
pop
test
aas
mov
lea
lods
sub
jbe
xchg
push
rcrl
or
decb
push
xor
out
mov
fiaddl
lock
fildl
fidivrs
and
test
push
out
stc
mov
rorl
xor
or
leave
imul
xor
clc
stos
or
add
repnz
shll
dec
mov
jns
add
repnz
mov
xchg
out
pop
in
in
lret
repz
mov
add
dec
adc
mov
xchg
rcr
and
lea
pop
push
mov
decb
fcoml
int3
add
jae
xor
mov
hlt
jle
mov
pop
sbb
ficoml
test
add
lds
cmp
dec
icebp
lds
inc
mov
fs
loopne
jmp
jns
cmc
out
mov
push
push
leave
dec
lods
stos
lcall
jb
jle
jle
test
jno
icebp
sub
sub
pop
or
fisttps
sti
in
insl
add
adc
mov
movsb
mov
jmp
fmuls
stos
dec
lods
fcompl
jge
decl
pop
ja
mov
and
ss
inc
sarl
pop
jne
enter
lock
shrb
subl
mov
cmp
scas
mov
jmp
das
fwait
leave
ret
lret
xor
mov
icebp
add
cmp
add
outsb
xchg
mov
mov
ret
add
call
fwait
aas
lds
push
adc
jnp
push
dec
cwtl
bound
xchg
les
stos
or
xchg
sti
leave
test
push
add
pop
mov
sbb
adc
lods
iret
je
pop
out
int
inc
jno
sub
mov
pop
push
test
push
xchg
inc
and
pop
sbb
js
jnp
ljmp
test
fisubrl
xor
lods
mov
iret
iret
movsl
repnz
insl
sub
adc
lcall
and
push
paddusw
test
test
jge
ss
inc
mov
jne
pop
sahf
movsb
loope
mov
add
hlt
jmp
test
stos
dec
lcall
mov
sub
add
mov
push
cmpsl
and
in
inc
xor
add
lret
test
je
jb
push
ret
inc
sbb
pushf
adc
hlt
mov
sahf
in
cld
sub
dec
in
inc
ret
imul
adc
mov
pop
arpl
ds
ret
lret
or
imul
mov
push
or
fwait
insb
add
arpl
jp
mov
dec
xchg
test
jg
mov
sbb
out
mov
push
push
dec
push
or
imul
push
ja
stos
mov
push
cmp
and
sbb
sahf
nop
aad
aad
stos
repz
xchg
cmp
ljmp
ret
scas
xchg
aad
sbb
repz
es
mov
fcoml
push
push
xlat
hlt
iret
or
and
add
mov
dec
andb
jg
push
inc
mov
out
repz
add
adc
iret
pop
or
sbb
sahf
loop
aaa
cmc
cs
mov
rcll
mov
pop
dec
adcl
lods
out
out
sahf
ljmp
gs
push
mov
push
out
jecxz
mov
dec
jl
nop
mov
clc
push
je
jp
clc
sbb
js
out
jns
mov
xor
adc
mov
xor
lock
out
or
test
add
push
jp
push
or
lods
sub
mov
fnstsw
aam
icebp
in
jns
rclb
test
jb
scas
pop
js
pusha
cmpsl
jmp
or
cmp
pop
movsl
lds
aad
xchg
lds
dec
aaa
adc
lret
push
mov
call
mov
dec
or
lods
add
xor
imul
pop
clc
lods
int
cmpsl
mov
int
das
movsb
ljmp
push
pop
dec
into
in
outsl
enter
mov
sub
fld
push
adc
xlat
push
frstor
inc
sbb
js
jge
cltd
jb
cmpsb
gs
repnz
test
scas
mov
add
jns
sub
rol
mov
por
jb
rcrb
xchg
add
adc
aam
bound
lcall
fs
mov
lcall
hlt
ss
lods
in
cmp
add
cwtl
insb
ret
cmpsb
cmp
lret
sub
xor
and
in
cltd
adc
mov
dec
jne
loop
orl
mov
sbb
adc
and
pop
dec
push
test
aam
jbe
mov
sbb
push
shl
xchg
push
adc
pushf
icebp
mov
jge
in
jnp
mov
add
cmp
aas
inc
in
aam
jbe
test
outsb
xchg
loope
shl
mov
int
out
sbb
out
les
ljmp
push
aad
pop
fildll
out
lock
gs
incb
sbb
xchg
jmp
xor
movsl
jns
inc
mov
push
test
out
sbb
imul
add
xchg
cmp
stos
sub
out
jl
repz
jno
lock
movsl
std
dec
sbbl
mov
test
movsb
lcall
sti
sbb
int3
fcmovnu
hlt
mov
fcmovu
cmp
arpl
and
vcmpsd
add
sti
ja
lock
xchg
or
xor
jae
cltd
inc
adc
dec
push
movsb
push
xchg
loopne
stos
js
or
add
out
push
aas
dec
dec
pop
dec
das
pusha
fidivl
fwait
shlb
inc
out
and
subb
mov
dec
outsb
add
mov
mov
ret
daa
or
or
out
xchg
pop
pop
mov
insb
fimull
out
push
imul
jb
fbld
and
pop
cmpsl
mov
add
out
in
add
mov
jae
lods
cmp
mov
sbb
aam
push
pop
mov
push
sti
push
inc
sbb
out
inc
pop
lock
xor
push
mov
movsb
xor
push
cld
cmpsb
and
jecxz
mov
movsl
add
scas
or
inc
mov
aas
lods
push
or
sbb
sbb
shr
inc
cmp
movb
cli
push
je
gs
cltd
sub
and
xchg
stos
lds
in
cmpl
rorb
loopne
outsl
ljmp
out
pop
and
and
add
bound
xchg
mov
push
popa
aas
test
sub
mov
repnz
adc
xchg
fwait
mov
push
mov
cli
push
jle
add
or
sub
rolb
movsb
pop
cld
inc
sbb
std
xlat
jge
mov
sbb
push
mov
in
push
frstor
xor
loopne
cmpsb
ds
push
movsb
repz
pop
mov
pop
pop
xor
enter
cmp
or
fwait
xchg
add
arpl
outsl
in
jmp
hlt
stos
sbb
sbb
sub
sbb
or
shlb
fisttps
push
cs
outsl
lret
shll
shrb
hlt
fldcw
aas
sbb
test
fidivrl
adc
es
sbb
push
xor
ret
xchg
in
inc
inc
iret
in
loopne,pt
pop
ficoml
xor
add
adc
lock
inc
jp
and
into
stos
sarl
dec
mov
pop
testb
stc
mov
data16
add
fsts
mov
dec
jbe
mov
jmp
mov
rcl
inc
lock
pop
xor
mov
scas
xor
xlat
push
or
lock
mov
cwtl
adc
shlb
je
mov
cmp
or
lret
and
cwtl
sti
inc
lock
loop
add
mov
inc
lods
fldenv
push
ljmp
jecxz
cmp
fmull
mov
cwtl
mov
in
add
popf
xor
pop
xchg
mov
lahf
into
xchg
cmp
mov
push
ljmp
xchg
testl
xor
inc
adc
arpl
push
cmpsl
imul
dec
imul
push
dec
or
cmpl
jnp
inc
add
push
shrl
push
push
mov
pop
je
daa
pop
stc
xor
movsl
fistpll
test
push
xor
jl
mov
inc
fadds
and
xchg
std
inc
ret
popa
ret
inc
mov
xor
xor
cmp
jl
cmp
out
cmp
cmp
test
push
lret
xchg
mov
dec
adc
pop
scas
out
pop
cs
cmpsl
rcll
inc
repz
xor
sbb
and
mov
neg
test
xchg
push
fbld
sbb
and
jmp
mov
mov
scas
xchg
jo
push
pop
or
addr16
xor
inc
xor
and
les
mov
mov
push
jge
test
and
xchg
mov
cmc
push
cmc
movsl
fs
insb
dec
lret
mov
jno,pt
pop
mov
dec
or
push
pop
pop
cmp
fldt
movsl
out
int
push
push
mov
xchg
mov
lret
add
in
push
insb
mov
inc
sub
inc
dec
mov
cmc
mov
pop
jne
push
sti
lea
std
mov
jnp
outsl
add
lea
iret
gs
fnstenv
add
js
push
jae
fucom
and
sarb
cmp
pop
in
push
std
je
mov
test
inc
inc
inc
xchg
jb
sub
push
lods
lea
jmp
fldt
mov
aaa
into
xchg
sbb
pushf
pcmpgtb
mov
hlt
push
add
or
out
fwait
mov
and
sub
xor
pop
pop
insl
or
je
fcmovbe
mov
cmpsb
je
rclb
cwtl
scas
pop
lret
xchg
aaa
and
sbbl
and
stos
xchg
fs
nop
dec
xor
sbb
loope
sar
lcall
bound
cwtl
repz
mov
pop
les
mov
out
sub
sbb
fwait
mov
inc
aas
push
mov
mov
or
shlb
stc
dec
adcb
mov
add
xor
out
sub
imul
shlb
fcmovnu
push
sbb
push
shrb
mov
push
xlat
loopne
inc
xchg
rolb
outsl
ss
jecxz
and
adc
mov
xor
inc
movsl
roll
repnz
out
loop
ret
out
cmpsb
lds
jg
and
xor
mov
adc
mov
sub
jp
mov
popa
jecxz
pop
sbb
mov
ret
sbb
and
scas
sub
mov
push
cmpb
ja
or
cmpsb
mov
lods
test
push
std
mov
imul
inc
mov
add
cs
dec
inc
push
lret
jge
push
or
rolb
pop
dec
mov
imul
sbb
outsl
int
pop
mov
jo
daa
out
mov
jmp
or
mov
jge
jmp
dec
cmp
mulb
sub
daa
mov
lcall
push
movsl
neg
int3
sti
lock
pop
out
lds
addr16
scas
leave
or
mov
fldl
ljmp
fistpll
and
out
loop
mov
lods
aam
jmp
xchg
sub
pop
cli
pop
xchg
or
fimuls
sbb
popa
dec
jge
clc
dec
int
sbb
ja
cltd
push
and
cmp
mov
hlt
dec
andl
mov
movsb
iret
lret
js
leave
sub
test
cmpsb
pop
int
pop
rcrl
dec
pop
test
xor
mov
mov
out
test
in
jns
mov
js
xor
loop
lahf
insl
add
xor
lcall
cmpsl
addl
xchg
pop
lds
outsl
pushf
test
mov
sub
gs
pop
pop
mov
test
test
jns
repz
mov
ljmp
imul
addl
popa
inc
ljmp
jp
iret
push
in
sahf
dec
sub
or
daa
out
pushf
cmp
repnz
lcall
jecxz
inc
test
dec
adc
test
mov
insb
mov
loop
fldenv
test
inc
jo
and
test
xor
pop
sahf
push
mov
inc
jge
jno
ljmp
sbb
jnp
or
inc
xor
xor
pop
rcrb
xchg
xlat
xchg
sub
test
push
popa
push
inc
imul
dec
sbb
fs
jno,pt
xchg
mov
adc
pop
or
popa
cmpsb
add
adc
loopne
adc
inc
jo
popa
xchg
mov
push
lea
sub
popf
inc
pop
out
testl
add
fdivs
mov
jo
xor
or
fidivrs
repz
add
cmpsb
stos
js
sahf
and
pop
jg
lahf
jle
js
sub
dec
mov
pushf
rcrb
adc
sub
mov
pop
cmp
or
rcrl
pop
mov
xorb
bound
dec
enter
loope
fistpl
fildll
es
std
or
fwait
in
mov
hlt
outsb
pop
lods
push
lcall
push
shlb
sbb
rorb
ljmp
fistpll
mov
lods
push
push
xchg
leave
xor
std
xchg
enter
ficompl
ja
inc
mov
jecxz
and
pushf
and
stos
loope
adc
mov
pop
jmp
jae
sahf
addr16
or
xor
push
mov
sbb
push
stos
cmp
shlb
jnp
in
ds
mov
jmp
and
aas
cmpsl
mov
mov
push
rcr
lcall
push
loopne
repnz
sahf
inc
sbb
jns
sahf
imulb
jl
pop
out
add
movsl
rcrb
movsl
mov
lds
pop
in
mov
lods
sub
addr16
sbb
lea
jg
xchg
int3
stc
daa
dec
hlt
cwtl
in
repnz
mov
lcall
jmp
jle
lods
aaa
rorb
into
jp
pop
out
mov
pop
pop
lds
jmp
pop
xor
ret
cmpsb
pop
out
ret
cmp
sub
xchg
cltd
xchg
push
jp
lods
cs
adc
loope
mov
test
push
sbbb
dec
cwtl
cltd
push
inc
mov
cmp
jmp
jl
push
cmp
jne
mov
ds
vorps
jb
stos
adc
aam
jnp
mov
mov
fs
imul
arpl
fiadds
dec
sbbb
or
lcall
dec
outsl
int
lods
fistl
scas
arpl
rcll
dec
call
test
test
in
cmp
shrb
enter
stos
inc
and
or
add
mov
push
mov
sbb
add
out
push
mov
and
sub
lds
das
ud2
cmp
or
ret
push
inc
cmp
cmp
stos
icebp
bound
popa
shll
std
jno
jle
call
xor
add
push
mov
cli
movsl
and
and
mov
lods
mov
sub
jnp
in
mov
daa
pop
or
push
stos
add
sub
lahf
ds
lret
pusha
jbe
dec
in
arpl
inc
out
and
cmpsl
pop
out
xchg
cmp
sbb
add
adc
cmp
inc
scas
test
cs
ljmp
xchg
mov
es
cli
sub
cld
cld
push
lods
sub
push
mov
pop
cwtl
mov
adc
pop
xchg
jecxz
sub
or
xor
dec
xor
xchg
mov
pop
lcall
push
and
fistpll
popf
popa
adc
addr16
inc
inc
pop
fbld
mov
lods
add
mov
sbb
sbb
inc
bound
js
xor
scas
mov
xor
xor
xchg
push
mov
out
lods
fs
sub
sub
mov
push
mov
sbb
jae
pop
mov
pop
push
int
into
mov
push
sub
test
mov
push
xchg
cs
fwait
cmpsl
je
out
xor
inc
xchg
sbb
and
inc
loopne
in
pop
outsl
dec
lds
mov
lahf
cmp
test
fxch
pop
mov
call
dec
cmp
adc
cmpsl
psubd
inc
pop
sub
or
call
sub
dec
test
mov
cli
jnp
subl
add
enter
xchg
addr16
icebp
push
and
fldenv
popf
stos
mov
or
or
lods
in
mov
lret
rcrl
test
ljmp
dec
int3
adc
lds
inc
xor
push
test
add
cwtl
dec
frstor
mov
xchg
stos
cmpsl
dec
sbb
daa
xor
pop
hlt
stos
xlat
loopne
imull
clc
lcall
rorl
xchg
out
sub
or
into
inc
jne
sti
movsb
xchg
movsl
test
cmp
lahf
pop
pop
imul
mov
cmp
test
sti
push
in
cwtl
adc
adc
pop
lds
add
cmp
push
or
icebp
mov
add
mov
shrl
in
pop
cmc
sti
lcall
es
adc
das
je
pop
gs
and
xor
xchg
outsl
mov
lahf
lea
push
adc
int3
sar
movsb
stos
repnz
ja
pop
fstp
cmc
ja
adc
or
xchg
xorl
leave
fnsave
sub
push
cltd
fildl
mov
jbe
push
pusha
inc
test
mov
into
aaa
jmp
pop
lock
lret
sub
arpl
sub
fisubs
xorb
adc
xchg
jb
pop
pop
cs
cmc
mov
xchg
mov
aaa
lahf
mov
add
cmp
bound
xchg
inc
das
mov
mov
mov
jne
jge
sub
in
push
cli
lods
mov
std
imul
cmp
jb
sahf
push
in
jecxz
stos
div
jl
jmp
loop
ja
inc
xchg
mov
das
mov
lods
cmp
cmpsl
fmuls
mov
sub
jge
and
int
inc
int3
mov
ret
sbb
push
fwait
lods
jne
daa
test
loopne
fdivrl
ja
lods
rcrl
shlb
mov
fisubrs
pop
jbe
repz
dec
in
clc
pop
and
mov
daa
out
jp
fwait
sbb
cmp
mov
daa
setnp
mov
movb
jp
xor
xchg
in
push
xchg
adc
dec
cmp
loop
xor
pop
lods
mov
cmp
daa
enter
dec
xchg
push
mov
mov
and
sub
shr
push
clc
inc
mov
lret
xchg
test
cmc
push
xor
lcall
fcomp
decl
mov
fwait
pushw
iret
xor
xor
dec
pop
cmpsl
daa
bound
add
fsubrs
pusha
jecxz
js
aad
mov
dec
fdivr
int
xchg
mov
dec
xchg
inc
pop
lahf
mov
add
inc
ss
sub
sbb
inc
in
popf
jae
addr16
jg
and
inc
dec
mov
or
in
test
push
inc
mov
dec
inc
int
cmp
lods
pop
inc
and
xor
jg
inc
dec
add
adcb
jo
std
mov
xorl
negl
rcrb
mov
out
int
and
les
push
mov
mov
rorb
cltd
push
mov
push
inc
jp
cmp
repz
inc
fwait
insb
push
pop
xor
push
fbstp
jae
mov
xchg
dec
sbb
and
jnp
pop
mov
push
xchg
inc
in
bound
clc
test
xorl
push
mov
fdivs
xchg
ret
pop
fnstenv
das
adc
or
imul
cmp
push
cmpsb
mov
insl
aad
dec
pushf
iret
andl
sbb
ljmp
fidivrs
jno
fstpl
lds
sahf
fildll
add
jno
push
data16
mov
add
je
dec
sbb
xlat
sbb
mov
or
inc
pop
inc
xchg
in
int3
sbb
add
notb
or
jbe
mov
popf
jmp
nop
push
dec
sbb
push
inc
inc
push
jmp
in
xchg
jne
jle
mov
xlat
pop
icebp
int
icebp
sub
ret
scas
fwait
fwait
xchg
adc
add
adc
and
ljmp
push
sbb
jne
incl
jmp
roll
jo
test
lcall
ds
lds
js
dec
xor
mov
mov
movsb
stos
and
outsl
dec
test
push
push
jo
clc
adc
adc
lret
jb
test
pop
js
test
enter
scas
in
std
ja
jecxz
mov
shr
ja
das
mov
inc
dec
pop
in
ret
scas
adc
pop
adc
lcall
repnz
cmp
mov
lcall
les
stc
je
loop
xchg
scas
pop
pop
cltd
inc
nop
or
push
xor
clc
jb
pop
xchg
ss
add
inc
pop
cli
sub
addr16
fsubl
insb
iret
xchg
fists
rcrl
pshufw
js
jmp
lds
bound
xchg
lds
push
jp
jb
jl
inc
lods
incb
lcall
aad
fiaddl
mov
aam
sbb
dec
pop
or
mov
jns
lods
addl
inc
out
int
pop
mov
push
or
xchg
dec
bound
xor
and
ja
pop
loop
add
mov
sti
or
test
insb
and
int
outsb
movsb
jns
rorl
sub
pop
lods
pop
mov
jmp
aaa
push
gs
stos
jp
aaa
gs
imul
xor
sub
aam
stos
xchg
mov
mov
push
je
ficoms
and
mov
jmp
ss
ret
and
mov
push
sub
lods
sbb
movsl
hlt
xor
mov
cmp
cltd
mov
pushf
add
or
adc
add
popf
popa
daa
cwtl
pop
dec
sbb
sbb
loop
push
out
inc
sub
cli
jp,pn
mov
mul
sahf
xlat
mov
testl
mov
sbbl
or
cli
jns
movsb
sub
cltd
jp
rcrl
mov
pop
and
sub
test
cmp
dec
push
xchg
and
dec
aam
cmp
xchg
shlb
mov
xchg
mov
push
shlb
push
daa
or
lods
ja
dec
sub
sub
dec
adc
push
scas
sub
aam
mov
mov
mov
xchg
pushf
int
popf
cmp
test
addr16
sbb
xchg
mov
dec
dec
lods
ret
xchg
js
ret
shrb
in
lcall
inc
mov
or
adc
out
rcr
mov
pop
xor
xor
push
jo
pop
aad
test
movsb
dec
dec
lret
add
orl
and
jl
dec
imul
pop
mov
repz
mov
pop
jecxz
popl
adc
fistpll
mov
dec
and
push
aaa
loop
dec
sub
xor
stos
xorl
inc
pop
xor
lods
jae
sbb
push
aad
inc
jb
dec
rclb
mov
mov
dec
lret
push
cli
sbb
lds
jne
test
sbb
imul
push
stc
mov
adc
into
jmp
sub
out
jne
mov
or
fbld
in
and
bsr
add
push
movsb
adc
fdivrs
push
ret
sub
lock
ds
pop
xchg
inc
callw
imul
int3
mov
out
mov
repnz
mov
data16
frstor
dec
sarl
out
sub
mov
scas
sbb
mov
xchg
out
or
or
adc
loope
outsl
ror
jo
fs
push
mov
les
mov
es
fstpt
adc
mov
jb
icebp
mov
in
mov
sti
lahf
and
jl
imul
push
shrl
pop
adcb
adc
jbe
xor
sub
jle
xchg
loope
clc
dec
push
sub
lods
xor
push
lret
call
cwtl
mov
stos
sahf
add
inc
adc
mov
jmp
mov
xchg
push
add
inc
rorb
or
gs
aaa
daa
test
faddl
int3
xor
xchg
inc
adc
leave
lret
and
jb
imul
jge
pushf
mov
push
sbb
shrb
jb
jmp
sti
jno
pop
cmp
leave
stos
inc
mov
mov
lret
shl
daa
sbb
or
insl
sub
lret
lret
adc
push
ret
mov
test
inc
jno
xchg
xorb
mov
subb
push
dec
and
adc
test
sbbl
dec
mov
in
icebp
insb
sub
xchg
shlb
loopne
stos
mov
add
mov
sub
or
push
xchg
jl
adc
cmp
xchg
sbb
fisubs
cmpsb
lea
cmpsb
or
or
pusha
sti
pop
fidivrl
mov
mov
iret
iret
cmp
movsb
jo
push
push
fstl
inc
insl
push
mov
stos
xchg
dec
sub
xchg
add
in
repz
sarl
aam
sbb
into
lods
ja
dec
push
daa
xchg
adc
and
loope
je
sbb
fsubs
jo
aam
xchg
mov
stc
pop
js
adc
sahf
sub
sub
enter
add
lods
loope
inc
mov
ret
mov
pop
add
push
jno
aas
insb
dec
jle
xchg
call
stc
pop
stos
inc
dec
in
mov
addr16
inc
dec
cmp
mov
xor
movsb
lods
sub
bnd
negl
dec
inc
xchg
cmp
lret
movsb
stos
sbb
popa
shlb
iret
add
idivb
mov
sub
ja
or
mov
fists
pop
mov
ss
push
push
fcmovbe
rorl
dec
ret
cwtl
dec
ja
enter
lock
lods
xchg
push
insl
cld
and
add
movsl
popa
inc
ljmp
or
jae
repnz
dec
scas
pop
xor
pop
push
cmp
data16
jmp
mov
or
popl
adc
jle
add
out
pop
and
ret
mov
push
js
fildll
inc
push
and
popl
jnp
or
sub
adc
loop
dec
in
mul
mov
xchg
shrl
pop
jecxz
cmpsl
dec
jnp
and
stos
pop
pop
lods
jnp
dec
jno
cmp
add
arpl
dec
fcmovbe
or
push
addr16
dec
popa
sahf
jae
sbb
and
xchg
fsubrs
push
push
pop
fucomip
mov
scas
inc
out
pcmpeqb
mov
ja
xchg
ret
mov
jo
or
xlat
mov
mov
dec
add
sbb
mov
xor
mov
jne
mov
jg
push
xchg
or
rep
test
stos
loop
call
mov
sub
adc
mov
sbbl
cmp
aaa
mov
bound
jnp
mov
shrl
test
add
cmp
xchg
add
dec
mov
lret
int3
or
cltd
mov
dec
pop
sub
mov
fsubl
or
shl
mov
cmpsl
jae
jnp
or
lret
xor
jecxz
mov
adc
add
pop
into
lret
xor
ljmp
cmp
adc
dec
daa
adc
fistpll
je
add
pop
xchg
adc
ljmp
xor
lea
testl
imul
ret
mov
push
lds
mov
call
cld
mov
cli
lahf
cltd
xchg
js
cmpsl
cli
fcmovu
xchg
xchg
ficoml
inc
jb
scas
sub
lret
stc
or
mov
mov
imul
stos
push
sahf
sahf
loop
movd
out
ja
ret
imul
in
add
rorb
stos
addr16
out
sbb
rol
cmp
jbe
adc
pop
es
xor
lret
or
lret
or
or
outsb
inc
xchg
xchg
leave
in
jb
xor
fisttpl
push
hlt
xchg
sub
cmpsb
or
mov
push
leave
out
rclb
idivb
aas
mov
pop
bound
loopne
pop
stos
jns
sbbl
lret
push
pop
sti
and
jne
popf
xchg
xchg
cmc
aaa
clc
pushf
mov
nop
in
jg
push
sbb
xchg
leave
stc
xchg
jge
aam
mov
and
and
das
das
sub
sti
es
adc
inc
pushf
repnz
adc
adc
mov
das
jns
mov
negl
adc
jbe
xorl
jnp
jo
sarb
les
movsb
fidivrl
sub
xor
mov
ja
jns
pop
sahf
bound
inc
insb
jecxz
push
pop
inc
or
nop
adc
scas
xor
outsl
in
add
xor
les
out
fwait
jb
imul
test
cmp
and
sub
cld
push
flds
sub
xchg
xor
iret
movlps
or
shrb
dec
push
and
out
mov
or
mov
push
pop
lret
dec
lret
push
sub
pusha
fsubrl
lcall
sbb
mov
xchg
adc
xchg
or
xchg
push
test
adc
or
nop
insl
mov
push
or
mov
add
cmpsb
outsb
lods
movsb
es
dec
leave
lret
popf
daa
sbb
cwtl
sbb
and
inc
mov
xchg
push
sub
pop
xchg
in
scas
dec
in
ficoml
ret
lretw
loope
test
pop
addl
pop
outsb
ljmp
adc
cmp
mov
out
lea
ret
jno
mov
movsl
and
subl
mov
loopne
sub
jns
aam
xchg
inc
cs
or
add
fcmovnb
sahf
mov
lods
aas
xchg
arpl
mov
outsl
mov
push
sub
sbb
mov
arpl
pop
int3
mov
icebp
and
loopne
out
sbb
sbb
or
arpl
loop
jo
dec
sbb
pop
push
imull
pop
fcmovbe
cmpsb
jb
addl
xchg
inc
das
ficoms
cmc
mov
push
and
mov
das
cmp
cmpsb
in
ficompl
cmp
sub
faddl
pop
lcall
enter
pushf
outsl
sahf
cmc
dec
nop
jb
popf
aas
fdivrs
xchg
in
inc
xchg
mov
pop
inc
aam
ret
adc
inc
sbb
add
sub
outsl
sub
sub
outsb
sbb
mov
shlb
scas
imul
fmul
popa
je
rcl
cmpsb
bound
mov
clc
mov
dec
xor
jnp
xchg
sbb
sahf
dec
imul
xchg
sbb
mov
cmpsl
es
mov
fdivl
xor
idivb
mov
xchg
pop
inc
aas
cmp
lods
out
cmp
ds
ss
popl
data16
mov
push
inc
dec
lea
mov
sahf
lahf
faddl
out
or
pxor
pop
cwtl
adc
dec
in
push
pop
and
lcall
jle
lods
and
push
imul
and
push
pop
xorb
rcll
sbb
add
mov
movsb
in
leave
in
icebp
lods
movb
sahf
inc
push
xorl
mov
dec
mov
push
mov
and
jb
int3
sbb
aam
jmp
fcoml
jb
mov
pusha
stos
cmpsl
aaa
sahf
and
leave
pop
pop
push
jno
xor
and
mov
testl
imul
cmpsl
push
inc
xchg
pushf
mov
push
add
cwtl
icebp
jb
std
stos
mov
pop
or
adc
push
shlb
add
push
fcoms
bound
in
jg
cmove
in
imul
cli
out
jp
jg
aas
rdpmc
jb
movb
mov
loopne
add
scas
dec
cmpsb
adc
icebp
xchg
into
jle
test
mov
lds
jg
fdivp
push
adc
adc
or
shrl
cwtl
sub
and
add
mov
pop
mov
fcmovne
lahf
xchg
mul
push
out
sub
pusha
les
cli
std
iret
ret
pop
sbb
in
inc
int
mov
add
lds
jns
mov
jg
in
push
mov
aaa
test
cwtl
repz
call
insb
push
jecxz
dec
xlat
mull
or
mov
mov
jmp
out
dec
push
insl
hlt
repnz
in
sub
push
clc
jne
mov
sti
push
rcl
sarb
sbb
xor
mov
sub
adc
out
inc
loope
iret
imul
jnp
xchg
fsubrs
scas
mov
sti
std
sbbl
jb
jle
xchg
cs
pop
push
dec
cmpsl
xchg
mov
push
cs
cmp
adc
xchg
add
add
iret
xchg
mov
repnz
fiaddl
out
or
fstl
jae
sbb
aas
push
mov
sub
cmpsb
and
adc
outsl
jl
push
sub
sbbb
insb
xor
js
clc
push
roll
lahf
je
lahf
stos
imul
push
jnp
loop
ret
imul
add
mov
inc
data16
inc
sbb
add
push
jno
sbb
xchg
in
aaa
adc
sbb
adc
jecxz
test
stos
mov
clc
ficompl
in
adc
mov
pop
and
push
shll
xchg
and
or
jbe
aam
cmp
mov
mov
fisttpl
push
xchg
xchg
ret
test
aas
cmpsl
fisubs
sahf
push
lods
dec
loop
aas
mov
jp
insb
aam
mov
and
jbe
pminub
jl
lock
pop
daa
or
mov
mov
mov
divb
pop
mov
inc
out
sbb
fistpll
cmp
outsl
or
xor
int3
es
pop
lock
lret
sub
in
xor
adc
cwtl
loopne
cli
lods
mov
stos
add
daa
mov
dec
or
dec
add
test
sbbl
ja
ja
movsb
insl
jb
frstor
in
xchg
jnp
sub
cmp
cmp
insb
or
adc
jg,pt
cmp
or
inc
jbe
lds
std
mov
aaa
xor
sub
mov
or
jecxz
push
adc
add
ret
in
adc
mov
in
or
cmp
jge
xchg
imul
out
cmpsb
movsb
cmp
pop
push
movsb
cmpsl
into
cmc
push
adc
cmp
out
arpl
cmpsl
push
xor
push
outsl
pop
jo
xor
sahf
dec
call
insl
or
mov
xor
shll
loop
add
ret
ds
or
inc
or
imul
mov
mov
push
pop
adc
cmpsb
pusha
cmp
adc
je
and
mov
aam
add
insl
xchg
mov
cld
xor
adc
dec
cli
call
xor
sub
sub
test
fldenv
add
rorl
xchg
int
xor
xlat
push
out
and
mov
push
sub
xchg
push
mov
or
jae
sbb
and
fldl
inc
shlb
push
jp
cmp
cs
cli
jb
or
pushf
cmc
push
fwait
mov
mov
xchg
xor
xchg
jecxz
fwait
push
int3
and
call
push
cli
fdiv
in
mov
mov
loope
or
inc
jp
jae
mov
mov
inc
jb
dec
jle
imul
add
push
aad
loope
out
push
inc
cwtl
ror
mov
pop
stc
in
mov
xor
mov
dec
rcrb
icebp
fstps
into
xchg
scas
xchg
fcompp
pop
or
aad
hlt
nop
sbb
push
jns
jmp
mov
movsl
sbb
mov
int
mov
sbb
mov
int3
aas
lock
lret
ret
mov
subl
fnstenv
xorl
psubd
push
xlat
je
adc
test
xchg
ror
xor
cmp
or
jmp
dec
dec
sbb
inc
fsubrs
lret
fwait
dec
add
test
das
pop
or
lret
xchg
add
and
adc
imul
push
mov
xlat
cmp
aam
cmp
mov
ljmp
mov
in
xchg
clc
clc
and
hlt
push
pop
xor
outsb
jp
mov
in
cmp
aam
adcl
pushfw
cltd
inc
leave
int
stos
cmpsl
in
mov
inc
jecxz
push
daa
je
icebp
ret
pop
adc
out
and
stos
and
sbb
clc
cmp
repnz
inc
cwtl
and
aaa
jp
or
imul
mov
cwtl
jnp
or
outsb
lods
ss
add
mov
jbe
outsb
out
jb
xchg
and
int3
push
adc
lock
outsl
xor
cwtl
mov
or
mov
cmp
xchg
pusha
cmp
or
pop
or
push
mov
into
jl
stos
leave
test
and
adc
xchg
fnsave
outsl
xor
mov
cld
test
jo
or
or
pop
or
rcrb
cmp
and
into
ret
sti
cwtl
xor
pop
xor
mov
roll
mov
nop
mov
jg
xor
rorb
and
dec
test
cmp
int3
add
repnz
iret
mov
push
adc
ss
inc
divb
adc
ds
pop
mov
popf
daa
mov
dec
cmp
in
sarb
loopne
pop
test
daa
insl
cli
or
mov
leave
push
pop
jg
mov
cmp
cs
xchg
xchg
ret
mov
test
inc
int
aaa
and
iret
ret
test
rolb
fwait
out
fildl
mov
jecxz
xchg
call
mov
or
cmp
adc
sbb
ret
xchg
fnstsw
add
xchg
mov
and
dec
dec
mov
adc
pushf
push
ret
stc
arpl
mov
inc
sub
mov
xchg
stos
int
aam
aas
cmp
shr
add
xchg
mov
lods
and
sti
arpl
movsb
dec
mov
loop
jge
mov
xlat
icebp
jb
dec
outsl
adc
movsl
cli
addr16
mov
lea
jns
repz
frstor
aas
mov
push
int
fmull
mov
int
movl
cmc
xor
dec
cmc
loop
orb
mov
scas
cmp
add
add
mov
xchg
mov
movsb
mov
icebp
xor
scas
or
pop
inc
dec
xchg
add
or
sti
or
stos
imul
mov
xor
mulps
dec
arpl
jmp
mov
psubb
lahf
sub
cmpsb
adc
sub
xchg
inc
pushf
imul
stc
das
int
cmpsb
jnp
xlat
mov
mov
inc
jg
les
jmp
insb
ss
iret
add
nop
movsb
or
xchg
aas
fwait
out
aaa
dec
pushf
push
pop
xchg
jmp
fcmovu
out
jo
mov
dec
add
sbb
in
dec
mov
push
dec
sti
adc
xor
jno
lods
or
jo
sub
add
sub
test
imul
pop
lret
mov
daa
stos
xorl
sub
cvtps2pd
imul
sub
out
jmp
test
test
adc
jg
scas
daa
xlat
adc
inc
dec
cs
popa
push
inc
decl
dec
push
jg
shrb
mov
loopne
push
rolb
daa
and
sbb
sub
repnz
mov
clc
add
es
xchg
xlat
adc
cwtl
js
push
xor
fdiv
jmp
int
out
inc
push
mov
loope
setge
and
or
mov
popa
enter
sub
stos
cmpsl
sub
mov
cmp
outsl
rcll
lcall
xor
and
pop
jge
push
xor
rorb
fwait
pop
testb
jmp
imul
pop
dec
push
enter
add
fimuls
jae
in
adc
inc
xchg
jne
cmpb
sbb
mov
inc
pop
sbb
mov
or
les
xor
push
jae
push
shlb
jle
sub
nop
adc
clc
stc
jl
in
cmpsl
mov
ret
mov
xchg
jno
jo
pop
xor
in
cmp
jne
adcb
mov
mov
jne
xchg
sub
mov
out
sub
sbb
pop
loop
xchg
js
push
loop
pushf
add
xor
lds
adc
mov
in
push
add
movsb
out
imul
es
push
daa
xchg
int3
fsub
dec
addr16
xchg
imulb
in
pop
loop
dec
ss
inc
loope
andl
inc
fs
cmp
xchg
movsl
push
or
mov
imul
sub
lret
neg
mov
aas
xchg
pop
xchg
jle
cmp
xor
pusha
int
pop
dec
mov
pop
push
test
pop
lret
mov
hlt
adc
mov
sahf
xor
dec
sbb
fimuls
test
add
adc
lret
pop
cltd
js
stos
cmp
test
ds
imul
cli
aad
xorl
cmpsb
xchg
aad
fsincos
xor
rcr
clc
daa
pop
cmp
xchg
dec
pop
mov
stos
je
push
loopne
out
repnz
xchg
mov
add
gs
lret
stc
push
outsl
jmp
add
daa
insb
jns
lods
hlt
mov
mov
or
clc
pop
loop
hlt
mov
rorl
adc
or
pushf
adc
jmp
fwait
jae
mov
push
add
enter
ja
sti
sbb
mov
lods
jae
inc
mov
icebp
cmp
mov
and
inc
fldl
mov
je
cmp
inc
sbb
out
sti
ret
and
mov
ficoms
movsb
clc
cltd
cmp
or
pop
stos
dec
lret
ss
cmpsl
addr16
sti
insl
jo
push
jno
and
jecxz
out
jno
cld
inc
jno
shrl
fidivs
decb
sarl
cli
mov
in
jmp
dec
xchg
adc
dec
mov
add
enter
jmp
jg
and
mov
push
ret
jnp
mov
xlat
adc
dec
cmpl
push
pop
mov
stos
mov
pop
ficomps
cli
out
mov
pusha
out
shr
dec
cmc
popf
jno
subl
add
adc
xchg
stc
das
daa
push
cmp
int
cld
cmc
fistps
shrb
test
ret
ja
jne
in
adc
mov
rcrl
pop
cmp
mov
adc
push
lods
dec
push
fidivrl
xchg
roll
pop
es
xor
mov
dec
fldenv
jmp
and
mov
lret
test
stos
mov
fstpl
cmpsl
jno
insb
movsb
sbb
test
jo
xor
in
mov
pop
cmp
mov
jle
movl
sbb
dec
add
data16
fs
sahf
cmpsb
xchg
mov
dec
pop
xor
mov
idivb
fcmovnbe
fs
xor
jp
loope
nop
arpl
inc
sub
arpl
fcmovbe
xchg
or
mov
dec
push
mov
fimuls
mov
ret
sbb
mov
cwtl
leave
xor
inc
test
pop
pop
add
sbb
jae
push
int
sbb
adc
stos
fidivrs
inc
mov
add
data16
xor
xor
orb
push
mov
jno
les
inc
add
dec
loope
jecxz
sbb
test
cltd
cld
push
insl
test
mov
push
testb
push
cmp
pop
cmp
lahf
jb
jae
sub
in
fwait
out
jl
loope
pop
aas
hlt
push
int3
bound
adc
xchg
sbb
std
test
inc
ljmp
mov
pop
add
paddusb
outsl
out
jecxz
inc
add
sti
mov
xchg
inc
loop
aam
sbb
or
mov
into
cmp
test
cltd
and
stc
subl
dec
mov
test
pop
repnz
pushw
mov
stos
lret
test
mov
arpl
sub
dec
std
rorl
and
shl
imul
sar
rcr
or
pushf
rol
rorb
gs
das
popf
sub
aad
addl
push
sbb
adcl
sub
xchg
xor
mov
loope
inc
push
xchg
xor
dec
adc
jecxz
xor
or
pop
xor
pop
gs
jnp
add
mov
xchg
shrb
enter
xchg
in
cmp
shlb
cmpsb
testl
leave
insl
xchg
jge
jbe
or
adc
bound
fistpl
sbb
mov
in
ficoml
jl
nop
cmp
icebp
jle
cltd
in
jle
jmp
and
iret
or
cwtl
sbb
pop
push
inc
ss
push
fcoml
cmpsb
scas
test
rclb
insb
rcrb
cmp
mov
mov
sub
dec
sub
data16
jp
repnz
and
jnp
lock
scas
out
mov
cmp
and
js
incb
mov
out
xor
dec
stc
xlat
repz
push
rolb
mov
mov
pop
mov
stc
sub
and
repz
stos
das
jne
loopne
xchg
outsb
or
fdivr
je
xchg
lahf
in
in
xchg
loope
or
and
fbstp
dec
ss
cmpl
push
mov
push
pop
lahf
leave
pusha
push
enter
push
sbb
pop
popa
aas
js
in
adc
sbb
mov
jo
repnz
lcall
fbld
xlat
add
inc
aaa
xchg
imull
sbb
cld
inc
lea
sub
ret
jge
cmc
int
sbb
and
dec
or
pop
fs
cli
sbb
jnp
scas
xchg
mov
int
stc
mov
cmp
repnz
or
test
test
fcmovne
mul
cmp
push
or
cwtl
int3
stos
les
cmp
mov
push
or
mov
nop
push
subl
stc
cmp
stc
cltd
test
pop
jne
push
push
enter
cmp
pop
mov
in
pop
and
adc
out
les
cmpsl
idivl
fwait
cwtl
push
xchg
dec
sbb
cld
fwait
outsl
push
xchg
inc
push
lods
mov
adc
movsl
pop
lcall
test
pop
jns
add
pop
sbb
pop
sbb
loope
jb
shlb
in
loop
sub
lret
push
cld
add
and
add
ret
dec
adc
loop
xchg
push
mov
daa
xor
fistl
test
shlb
xchg
test
jno
jne
les
fcmovnb
inc
loop
pop
dec
js
repz
jg
ret
push
cs
add
xchg
mov
iret
fs
sub
dec
loopne
push
mov
imul
out
stc
pop
sub
clc
xchg
cli
je
push
push
cmpsb
jbe
loope
not
lods
lret
sub
xchg
jg
idivl
mov
movsl
clc
aaa
or
addl
clc
mov
int3
push
fwait
shll
sub
in
mov
js
push
add
cltd
sahf
sbb
mov
out
mov
xchg
enter
jg
mov
shlb
adc
and
mov
scas
enter
xor
cwtl
mov
loop
mov
cli
xchg
push
mov
pop
out
imul
je
push
mov
push
mov
in
das
xor
mov
fisubrs
in
jne
je
mov
test
and
mov
adc
cmpsl
push
insl
lea
sti
pop
mov
sti
pop
jge
jl
jg
xor
aaa
mov
sbb
int
adc
lock
enter
lods
enter
mov
or
push
faddl
lock
inc
ret
scas
adc
xor
faddl
gs
jp
pop
sub
out
pushf
mov
enter
mov
dec
fcoml
xor
or
xchg
mov
sub
dec
push
cmpl
push
adc
xor
cmp
pushl
ljmp
mov
cld
movsb
sbb
cmc
mov
cli
rcrl
mov
ljmp
out
pop
movsb
lods
jno
btr
es
sarb
mov
daa
mov
add
sub
in
lret
or
adc
push
jno
into
cmpsl
out
jl
and
fnstcw
test
rcl
mov
lret
push
add
inc
ja
mov
je
adc
xor
adc
ret
loope
add
lret
jmp
dec
sbb
dec
or
push
lret
jle
dec
movl
cmp
fdivl
imul
adc
sbb
xor
loopne
push
leave
jp
fwait
sbb
cmp
jmp
dec
aad
es
sub
nop
mov
cmc
iret
and
nop
or
bound
and
in
movsb
jb
loope
icebp
jne
cmp
scas
scas
mov
jnp
pop
xor
call
add
data16
pushf
xor
pop
mov
fsts
and
or
dec
adc
outsb
das
cli
out
test
sti
mov
sub
out
adc
or
fwait
shlb
mov
pusha
xchg
add
jns
rorl
adc
cmp
daa
sub
sarl
jmp
jo
das
mov
test
sub
inc
movsb
xor
inc
fwait
lds
mov
ret
rolb
add
push
jecxz
cmp
stos
rcl
fs
popf
or
push
fisttpll
popf
icebp
mov
lret
sahf
enter
jecxz
sub
loop
dec
xor
pop
sbb
pusha
adc
jnp
ds
mov
lock
push
dec
inc
aad
jb
jns
lcall
ja
sbbb
jae
adc
adc
int3
mov
jg
cs
mov
push
sbbb
xchg
jns
xchg
and
lds
inc
mov
xchg
push
cmp
dec
sarl
adc
es
aad
mov
adc
push
adc
lock
lret
enter
mov
fcmovne
insb
xor
pushf
ss
rclb
xchg
mov
jge,pt
movsl
clc
pop
imul
add
jne
push
jl
lds
nop
mov
out
icebp
sbb
or
cli
cmpsl
aaa
dec
fidivl
sub
pushf
adc
push
aam
mov
mov
inc
inc
dec
popa
pmaddwd
lock
mov
ret
fstl
sub
dec
jp,pt
in
sbb
aas
sarb
aad
xor
into
insl
xchg
xlat
cmp
sbb
jg
jns
arpl
repnz
repnz
cli
inc
nop
pusha
jecxz
mov
add
adcl
lock
xor
or
push
pop
sub
repz
or
daa
addr16
ret
sbb
push
popa
mov
pop
pop
cmpsl
sbb
in
subl
and
sub
stos
adc
divl
pop
imul
and
jns
sar
add
int
push
orb
mov
cmp
js
inc
movsb
cs
mov
pop
pusha
jnp
in
cmpsb
xchg
andl
dec
adc
shll
cld
pop
mov
sti
mov
pop
xchg
out
sub
jge
ret
xor
stos
jnp
dec
les
int
pop
sub
push
loope
pop
sbb
int
js
xchg
dec
ja
mov
notl
lods
lods
mov
adc
fsubp
dec
mov
xor
jne
test
xchg
ds
add
xor
sarb
xor
push
mov
mov
mov
mov
lods
xor
inc
or
mov
dec
mov
pop
pop
mov
in
inc
sub
pop
mov
shll
clc
sbb
add
dec
xchg
out
popf
mov
and
and
adc
jp
popa
loopne
sub
push
push
in
loopne
xor
xorl
add
mov
pushf
jbe
mov
test
js
add
outsb
dec
lret
les
lods
or
sbb
xor
mov
fisubs
sub
pop
sbb
cmc
sbb
cmp
leave
push
inc
jb
aam
cmc
inc
jge
sahf
pop
pop
pop
ljmp
mov
mov
dec
sub
stos
mov
test
cmp
std
sbb
orb
xchg
push
lods
jb
in
leave
jge
mov
xor
insb
push
sub
lods
cmp
push
fs
jg
lods
or
add
dec
les
mov
decb
pushf
pop
push
push
and
adc
outsl
ja
movb
test
popf
ss
and
mov
xchg
sub
adc
jmp
jl
or
std
mov
jmp
cmp
mov
pop
das
lret
das
mov
lods
dec
scas
in
mov
orl
pop
adc
outsl
add
pusha
pop
sub
jmp
notl
push
jmp
shlb
xchg
lret
out
imul
sub
fdivrl
or
pop
ss
xchg
mov
and
or
cmc
test
cmpsb
mov
fisttps
xor
mov
adc
ds
add
mov
xor
push
imul
jne
xlat
pop
sub
and
rcrb
ret
mov
cmpl
sub
xchg
or
cmp
aad
dec
or
testb
nop
push
fsubrp
outsl
xchg
pop
pop
aas
ret
jbe
jmp
repnz
mov
inc
lds
mov
cld
jl
and
cmpb
and
pop
mov
xor
shl
iret
mov
mov
fwait
adc
push
cld
push
js
iret
sbb
and
pop
mov
mov
add
sub
sub
test
jp
imul
pop
jo
cmpsb
pop
push
fmuls
sbb
loop
and
inc
inc
stos
and
jns
mov
and
dec
mov
in
fiadds
arpl
mov
inc
mov
xchg
ret
add
loop
mov
and
insl
lods
dec
or
xor
mov
sub
out
popl
outsb
fisttpll
mov
cmpl
fistpl
roll
jecxz
fdivrl
sbb
loop
jno
mov
call
mov
push
test
cmp
movsl
cmp
xlat
popa
or
pop
fmull
dec
ret
dec
out
loop
pushf
mov
pop
push
adc
stos
mov
mov
rclb
fcoml
jae
mov
ret
cld
fldl
iret
xchg
mov
sub
xor
je
iret
stos
jae
mov
mov
or
inc
aas
fnsave
mov
mov
sub
push
arpl
out
jnp
adc
pop
inc
inc
test
dec
scas
pop
jecxz
stc
mov
mov
xorl
mov
add
sub
push
mov
pop
push
and
cwtl
loopne
lret
insl
outsl
cli
call
cmp
jg
dec
or
push
imul
into
sahf
stos
test
mov
addr16
fists
movsb
cld
inc
xor
push
sahf
jecxz
shll
cmp
fdivs
mov
xlat
std
inc
add
imul
inc
or
outsb
daa
pop
insl
out
and
imull
insl
iret
outsl
xlat
cmpl
jb
adc
xchg
addl
mov
adc
cmp
cmp
movsb
sbb
cmpsb
mov
jmp
dec
imul
cmc
adc
and
loopne
and
ret
loopne
int3
rcrb
add
jl
mov
xor
lret
cmp
outsl
xchg
xor
lret
xchg
dec
pusha
xchg
lock
dec
mov
and
repnz
negb
shll
mov
or
pop
shll
adc
dec
sbb
addr16
jb
or
mov
negb
scas
movsb
repnz
dec
int
arpl
push
xchg
jne
xchg
cmc
jl
mov
lret
call
jmp
push
add
xchg
add
dec
inc
imulb
scas
pop
mov
pop
clc
add
ljmp
xchg
mov
or
ja
jne
movsl
mov
add
inc
add
pusha
jmp
test
inc
hlt
adc
adcl
movsl
sahf
jbe
mov
mov
int3
stos
out
fisttps
xchg
in
pop
inc
mov
clc
lock
pop
gs
outsl
push
shr
push
bound
pop
xor
out
mov
out
xchg
push
lret
mov
adc
mov
xor
outsb
xchg
and
pop
inc
sbb
hlt
jne
push
test
int3
scas
sbb
divl
scas
ss
sbb
insb
dec
pop
inc
mov
adc
in
xor
or
testl
dec
jmp
out
cwtl
jne
idivl
jmp
mov
pushf
push
mov
inc
adc
lahf
xor
mov
loope
inc
sbb
sbb
fisttpll
cld
nop
insl
push
mov
imul
rclb
pop
pop
clc
in
fxtract
mov
xor
das
xchg
lock
inc
xchg
add
aam
xchg
sub
enter
mov
add
in
xchg
je
arpl
add
cmp
pop
aas
scas
gs
repz
jle
jne
test
test
push
push
xchg
or
mov
leave
imul
xor
cmp
mov
mov
popf
jb
ss
adc
inc
mov
or
add
mov
jbe
xchg
xor
fistpll
mov
cmp
xchg
bnd
push
inc
push
jne
add
movsb
shr
inc
hlt
dec
xchg
xchg
clc
cmp
cld
xor
mov
movsl
jge
dec
out
daa
xchg
sub
pop
xchg
jl
pop
lahf
test
adc
lds
movsb
sbb
xor
push
adc
add
js
sarl
and
loopne
sub
daa
push
cli
stos
testl
aad
cmp
imul
mov
enter
sbb
in
xchg
xchg
es
sbb
xchg
mov
andb
mov
movsl
ds
pop
lds
push
les
mov
int3
in
cmp
bswap
or
icebp
jnp
jb
jno
test
adc
xor
mov
pop
out
push
sti
add
adc
mov
adcl
and
inc
pop
add
out
daa
insl
cmpsl
push
xor
ret
leave
jb
and
pop
xor
faddl
ror
ret
stos
cmp
ret
loopne
jno
loop
dec
or
loop
dec
imul
add
or
clc
mov
push
imul
sub
inc
or
bound
xor
push
rorl
inc
lods
dec
pusha
pop
stos
ja
xchg
or
pop
add
aad
pop
int
fnstsw
mov
or
repnz
and
mov
lods
lret
cld
pop
in
out
push
cmp
xchg
jle
or
pop
je
add
mov
dec
add
lcall
add
add
push
mov
les
dec
and
push
lock
repz
mov
cmc
jnp
movsl
adc
push
call
adc
jl
adc
sti
js
pushf
rorb
clc
xchg
fs
scas
mov
fnstenv
push
scas
sbb
lods
pop
xchg
std
xor
aas
mov
decb
cmpsl
jge
sbb
ja
push
lods
rcl
les
mov
add
dec
mov
ficomps
cs
lcall
mov
add
add
dec
push
mov
cli
pushf
loop
sub
in
xorl
fwait
jno
jl
jge
and
ja
add
push
or
cmpsb
movl
lcall
adc
and
bound
mov
imul
push
jo
push
xchg
sub
sar
mov
xchg
call
mov
por
cmc
xchg
movsl
stc
add
fisttpll
pop
jno
and
adc
push
mov
dec
sub
jb
inc
mov
sti
xchg
push
push
push
adc
jo
sbb
sbb
loop
jl
mov
ja
push
jnp
shll
das
jle
fld
inc
iret
jle
pop
lcall
jmp
push
stos
and
or
xchg
cmp
cmp
movsb
js
and
dec
lods
push
pop
mov
or
in
add
xchg
push
mov
sbb
push
xchg
icebp
repz
fmull
pop
enter
jns
test
dec
pop
nop
test
stc
add
pop
gs
cmp
cwtl
ds
mov
xchg
pop
fsubs
push
mov
pop
add
pop
add
flds
lret
mov
outsl
pushf
adc
dec
dec
jle
ja
inc
inc
add
push
push
sub
cli
lahf
and
pop
or
jle
fadd
adc
or
mov
imul
xchg
inc
mov
sub
ret
in
icebp
enter
sti
stos
jmp
fmuls
iret
test
into
fbstp
ffreep
fstps
daa
adc
sub
jo
cmp
jmp
aaa
xchg
or
mov
push
into
add
in
mov
fwait
sub
xor
lods
arpl
les
and
cmpsb
hlt
lds
ret
cmp
jmp
push
subb
pop
das
cmp
out
movsb
std
jp
movsl
adc
push
push
pop
inc
xchg
adc
jl
inc
dec
test
bound
xchg
push
insl
call
cld
sub
fstpl
or
hlt
cmp
and
mov
faddp
push
xchg
inc
xchg
sub
pusha
push
lcall
sub
xor
aam
int3
in
testl
xchg
mov
or
push
and
mov
add
mov
sub
or
loop
andl
push
idivl
jge
sbb
dec
sub
xor
addr16
movsb
and
push
ds
in
out
lea
imul
xor
jno
pop
pop
mov
mov
mov
push
and
push
jg
movsl
and
add
pop
mov
inc
xchg
push
filds
scas
jle
push
outsl
insb
dec
pop
or
mov
aaa
sub
fsubr
mov
mov
dec
scas
call
mov
stos
inc
fcomps
jbe
mov
pop
inc
shll
in
sbb
fistpl
pop
mov
fwait
cmp
dec
mov
ss
pop
add
loope
cwtl
out
pop
shl
lcall
mov
inc
and
rcl
aaa
pop
pop
in
in
and
mov
jmp
loopne
into
mov
mov
div
scas
push
fisttpl
out
xchg
mov
jecxz
js
into
in
es
orl
lahf
mov
pushf
or
push
cmp
pop
cmp
rcrb
out
and
lret
and
lcall
inc
cli
cli
cmpsb
addb
or
and
pop
jl
or
movsl
test
sbb
xabort
mov
scas
adc
pop
repnz
fnstsw
outsb
push
sbb
cmp
outsl
aam
push
jno
push
mov
repz
js
repz
test
popf
sarb
ret
or
lock
or
fadd
scas
inc
into
in
iret
loope
notb
lret
roll
mov
popf
pushf
xorl
bts
sbb
aaa
pop
test
or
fmul
std
cmp
int3
push
stos
ja
add
fstps
fisubs
fadds
sbb
in
stos
mov
subl
mov
daa
push
push
pop
out
pop
push
mov
inc
jge
stc
jo
insl
mov
mov
sahf
adc
adc
dec
dec
or
mov
jl
insb
adc
dec
sbb
xchg
scas
mov
shlb
dec
lods
xor
push
les
adc
or
mov
in
and
xchg
and
push
stos
xchg
xchg
mov
pop
int
cmp
jecxz
out
pusha
stos
mov
sar
ds
jno
dec
and
gs
cmp
lahf
pusha
aad
or
test
sbb
mov
hlt
shll
cmp
and
je
ret
pop
sub
dec
scas
cli
ficompl
sti
fwait
mov
lds
xor
adc
js
push
ficomps
ja
loop
adc
testl
jne
lods
mov
mov
inc
lcall
addb
lods
push
mov
clc
pop
dec
dec
js
test
or
pop
lret
cmpsl
lds
mov
fldenv
sub
movsb
enter
xor
iret
cli
sbb
jb
movsl
push
leave
inc
cltd
add
fdivl
push
sub
shl
xchg
lret
movsb
fstpt
jnp
inc
leave
lret
pop
in
lahf
int
sbb
mov
xchg
inc
ret
insb
xchg
notl
cmp
jbe
xchg
and
mov
adcb
je
inc
lret
in
sbb
das
gs
xchg
repz
fnsave
int3
repz
and
subl
xchg
shlb
repz
xchg
stos
rcrl
loopne
aam
and
repnz
hlt
orb
hlt
ss
dec
mov
push
nop
popa
sub
mov
mov
pop
mov
int3
int3
iret
jae
rorl
adc
or
and
adc
shr
inc
jge
sbbl
cmp
xor
and
test
xchg
lret
xorl
test
jmp
xor
loopne
sub
fsubrs
rclb
push
fdivs
mov
shlb
add
xor
outsl
fildll
jg
in
push
es
push
or
inc
push
push
aad
xlat
int
shrb
mov
dec
cld
lret
scas
insl
sbb
push
push
jmp
xchg
cmp
xchg
jno
adc
cmpsl
push
or
stc
inc
pop
rcr
test
nop
aas
scas
into
gs
and
hlt
out
adc
popf
mov
dec
mov
xchg
loopne
pushf
push
lock
sti
cld
dec
movsl
fucom
xchg
sbb
and
and
xchg
cwtl
adc
mov
or
xchg
ja
inc
pushf
inc
sub
push
jecxz
cs
adc
mov
sbb
shl
sbb
sub
mov
fisttpl
mov
mov
stos
dec
aad
rol
lods
mov
scas
sti
mov
and
dec
xorb
xchg
repz
push
add
vmovshdup
xchg
push
bts
imul
and
mov
daa
cmp
cbtw
bound
in
sub
repz
lahf
cmc
adc
mov
jmp
inc
popa
ffree
jp
das
add
jg
les
test
insb
dec
sbb
addb
push
cmpsl
pushf
push
stc
or
mov
imul
jbe
fbstp
dec
xor
pop
inc
ja
pushf
maskmovq
notl
lds
sbb
and
xor
inc
lods
and
inc
ret
add
push
inc
aam
test
mov
dec
scas
stos
scas
loop
push
cltd
add
pop
sarl
adc
mov
xor
xchg
xor
mov
ja
sbb
out
push
out
jmp
mov
mov
mov
mov
cmp
outsb
fmulp
pop
jns
xor
fs
divl
and
fldenv
inc
call
sbb
mov
add
dec
aad
stos
outsl
test
or
inc
push
out
xorl
jne
sbb
into
fadd
adc
pop
into
xchg
repnz
rolb
ret
aas
jl
mov
stos
pop
lock
sbbl
jmp
dec
fbld
add
sahf
lods
jo
push
ss
mov
fstps
ja
cltd
add
mov
out
inc
push
fisttpl
jecxz
out
push
pop
stos
pop
inc
cmpsb
popa
inc
pop
out
mov
sub
sbb
repnz
mov
mov
leave
sub
rcr
push
lods
mov
jle
les
insl
add
loope
mov
rorl
or
sahf
mov
icebp
cmc
dec
dec
test
ret
cs
cltd
add
into
repnz
inc
std
lods
dec
adc
mov
adc
loope
loop
jmp
imul
xchg
jbe
push
xor
stos
lock
pop
xchg
mov
xchg
es
push
es
aaa
es
mov
cmc
xchg
insb
std
adc
in
sti
movsb
inc
fsts
repz
inc
jl
add
cli
adc
push
clc
daa
popf
subl
xor
pop
inc
sub
jmp
pop
push
push
stc
adc
pop
movsl
test
push
dec
out
pop
sub
mov
test
sbb
xchg
popf
cmp
shrb
mov
scas
pop
ss
sub
andl
jbe
roll
push
xor
popa
sbb
pop
test
inc
aaa
add
mov
inc
es
inc
js
inc
aaa
lods
imul
mov
das
rcl
lret
xor
fisttpll
xchg
xor
fdivs
inc
insb
dec
rcll
mov
push
pop
jno
cmpb
jecxz
inc
mov
cltd
shlb
scas
sarb
orl
jns
add
inc
fistps
sub
pop
mov
mov
dec
scas
xchg
jns
cmpsb
outsb
push
addr16
add
jns
push
jbe
jg
sub
movsb
insb
imul
xchg
pop
jno
sub
insl
lds
adc
and
jle
adc
xor
fucomp
pusha
icebp
xchg
push
popa
test
dec
bound
mov
push
lahf
mov
mov
shll
sbb
pop
xor
outsl
jl
fsubrl
in
ja
gs
rorb
and
scas
jecxz
aas
mov
fcmovbe
sub
pop
jl
enter
sub
es
sub
pop
leave
rcrb
test
jnp
jnp
add
out
jle
sbb
out
dec
ret
ja
je
fldt
mov
inc
and
or
add
sarb
pop
or
mov
btl
sub
mov
cs
mov
shrb
ja
leave
mov
xchg
fs
insl
push
xchg
xchg
mov
push
aad
shl
int3
shll
ficompl
mov
inc
cld
pop
rcll
fisttpll
leave
add
cmc
cltd
mov
cmpsb
inc
add
mov
lods
inc
dec
shl
mov
xor
dec
sub
test
cmp
xor
xchg
sub
mov
cmp
pop
xor
and
pop
lret
jo
test
push
test
lahf
sbb
loop
sbb
jmp
sbb
out
mov
and
int
outsb
fwait
sbb
mov
inc
or
jp
mov
int3
jmp
and
loopne
ror
add
dec
ja
or
je
fistl
stos
ret
pushf
in
mov
mov
test
xor
push
cwtl
int
jmp
divb
adc
in
push
pop
addr16
loope
aaa
lea
inc
mov
and
aad
int
je
mov
mov
in
mov
dec
sub
jecxz
inc
lcall
sub
movsb
push
or
cmp
scas
xor
test
cmp
dec
cwtl
pop
ss
popa
xchg
cmpsb
jb
or
jle
aam
push
imul
push
inc
insl
insl
push
das
lahf
xor
pop
insl
push
popa
sbb
push
mov
pop
pop
mov
lret
xor
or
in
jne
mov
cld
int3
and
ja
shrb
sub
pop
dec
pop
inc
inc
cli
arpl
notb
or
sub
jmp
pusha
push
pop
int
stos
mov
adc
mov
and
mov
mov
inc
repnz
pop
mov
scas
fsubrs
lods
xchg
in
out
mov
jmp
inc
jae
sub
mov
and
sub
mov
cmc
jle
repnz
or
xchg
lret
jp
je
adc
inc
cs
add
rcrb
mov
sub
lods
push
mov
movsb
adc
dec
and
icebp
mov
das
jl
fldl
inc
xlat
push
mov
adc
push
add
jmp
sbb
fnsave
dec
sti
dec
cmp
mov
clc
mov
jne
je
bound
insl
lock
pop
pop
notl
sub
lods
xor
and
popf
pop
movsb
mov
inc
imul
cmp
rorb
mov
aaa
mov
pop
xor
mov
bound
cwtl
mov
xor
stos
and
sub
inc
fs
lea
out
out
fs
push
gs
sarl
mov
jge
xor
hlt
mov
push
jo
mov
push
sbb
cmp
lahf
out
sarl
cmc
sub
inc
add
dec
xchg
cmp
ret
pop
dec
inc
sub
mov
mov
lock
addr16
mov
sbb
stos
xchg
nop
xchg
xor
fwait
jo
sbb
inc
lds
and
inc
popf
lahf
cwtl
loop
cmc
pop
gs
adc
adc
in
pop
mov
out
dec
ja
lods
xchg
add
aaa
fisubl
je
pop
dec
xor
xor
imull
pusha
mov
or
dec
fiaddl
mov
mov
xchg
mov
sub
and
call
stos
jno
fildl
push
lods
andl
mov
je
or
lods
adc
pop
lods
pop
lock
aas
div
inc
jb
mov
in
loop
inc
pushf
adc
int3
stc
or
xor
push
push
test
imul
cli
xchg
fnstenv
out
push
xchg
test
jecxz
mov
ljmp
add
mov
lea
pop
dec
push
mov
xchg
pop
jmp
pop
cmp
push
xor
ret
xchg
sub
scas
and
mov
rolb
adc
lods
push
fnstenv
cltd
in
in
jg
in
add
mov
sub
in
jecxz
add
xor
xor
out
subl
and
inc
pop
push
outsb
daa
in
lods
les
aaa
cmp
nop
cmc
jnp
or
out
fdivrl
add
push
fisttpll
mov
jno
lret
pusha
xor
pop
and
or
pop
xor
mov
push
popf
fwait
mov
cs
jae
xchg
jb
add
icebp
cs
dec
push
in
imul
pop
dec
call
xchg
xorb
les
cmp
lods
adc
xchg
in
mov
gs
sbb
std
add
or
iret
mov
xor
pushf
dec
inc
pop
push
out
hlt
push
or
add
xor
fsubl
mov
sub
add
sbb
xchg
out
and
les
push
loopne
push
nop
mov
xchg
xor
xor
inc
jmp
sbb
data16
gs
or
mov
in
mov
push
mov
and
pop
pushf
lcall
adc
adc
pop
arpl
push
cmp
jl
ljmp
imul
jecxz
sub
xchg
outsl
add
lcall
cmp
arpl
dec
adc
mov
mov
leave
dec
inc
aad
inc
les
or
into
sub
shr
loop
mov
mov
lcall
cmp
stos
hlt
mov
in
add
rolb
cwtl
loope
movsl
jg
push
leave
dec
jp
ds
dec
sub
mov
out
lahf
js
push
mov
loop
bnd
sahf
inc
repnz
xchg
in
lods
jne
fnstcw
push
shlb
pop
cmc
ret
mov
lock
in
adc
mov
inc
add
dec
decl
and
push
xor
fs
push
jp
icebp
in
cmp
sub
repz
sbb
cltd
lahf
adc
call
je
cli
xchg
mov
mov
mov
dec
inc
lret
jno
inc
cltd
aam
fucomi
mov
rcrb
mov
leave
jno
dec
cmp
xorb
dec
pop
shl
mov
cmp
jg
cltd
icebp
movsl
mov
fstpt
mov
lahf
adc
push
push
jecxz
push
in
inc
xchg
mov
sub
dec
mov
dec
in
cwtl
xlat
push
xchg
cmp
mov
lock
add
xor
sbb
push
mov
xchg
hlt
lret
inc
ds
xlat
pop
and
sub
ja
push
es
dec
push
jle
jne
fimuls
cli
out
push
xchg
lcall
inc
insb
push
mov
lcall
cmp
cld
cmp
dec
pop
jle
xor
xor
aad
cmp
subb
pop
push
dec
das
popa
aas
pushf
imul
mov
outsl
adcb
loope
movsl
scas
dec
test
jg
dec
adc
xor
pop
int
mov
jns
add
cmpsb
enter
bound
in
cmpsl
xor
and
dec
mov
pop
out
lret
xorl
mov
mov
jae
jmp
jle
xor
aas
shl
iret
lret
outsl
shrl
jns
imul
dec
enter
adc
xchg
mov
test
scas
ffree
iret
icebp
popa
or
xor
ds
jae
aaa
outsb
sti
cmc
movsb
jns
or
mov
jns
dec
add
or
out
incl
mov
sbb
inc
xor
dec
jp
rcll
stc
push
divl
inc
sarb
pop
mov
repz
cmp
out
jns
and
mov
sbb
iret
jo
mov
gs
sbb
outsl
insl
popa
xchg
adc
lret
mov
add
mov
mov
fwait
int
das
lods
or
cs
cmpsb
movsb
xchg
leave
mov
sahf
pop
or
std
xorb
lods
bound
fbld
rolb
sbb
cmpsb
fs
dec
lret
std
xor
pop
clc
pop
cmp
fwait
call
popf
or
mov
mov
xchg
sub
outsl
lock
das
inc
xlat
test
fstps
fadds
lret
xor
loop
add
pop
mov
mov
xor
fiadds
cmpsl
aaa
xchg
mov
jb
es
mov
sbb
std
push
bnd
shlb
pop
xor
fdivs
in
xchg
repnz
pop
adc
jecxz
icebp
mov
xchg
cmp
hlt
js
sub
dec
ret
jb
and
mov
adc
inc
dec
sbb
mov
rcll
fisttps
in
daa
cltd
imul
push
and
inc
mov
mov
ret
cmp
cmpsb
add
mov
jecxz
push
fwait
je
add
mov
jne
and
outsl
adcb
dec
mov
push
inc
das
xor
out
popf
mov
and
add
outsl
outsl
je
dec
clc
decl
das
sbb
xchg
sbb
out
pop
lea
sbb
mov
inc
mov
aam
add
inc
xlat
add
inc
out
dec
and
fdivp
dec
dec
mov
or
ret
rol
les
dec
push
xor
cmp
arpl
push
push
ret
or
or
sahf
loopne
sub
cwtl
orb
mov
aas
or
aad
inc
test
outsl
jle
je
add
sbb
stos
sti
push
std
movsl
inc
imul
dec
mov
lcall
xchg
pop
push
inc
mov
adc
mov
sahf
pop
fs
xchg
outsl
enter
cmp
push
mov
xchg
scas
xor
aad
mov
enter
add
pop
cli
inc
jbe
test
adc
mov
jmp
push
sub
stc
mov
es
icebp
fildl
test
sbb
std
sbb
rorb
jmp
fidivrl
dec
dec
inc
imul
xor
sbb
testb
inc
cmc
mov
xchg
jmp
mov
and
shll
xchg
cs
test
arpl
js
das
mov
inc
cmp
stos
add
add
and
or
clc
push
fwait
adc
cld
sti
mov
lret
inc
popa
cltd
push
out
arpl
stos
mov
jle
mov
cmp
xor
mov
outsb
or
popa
adc
lcall
jae
popa
jae
cwtl
fs
jg
test
jns
bnd
ret
mov
sbb
movsl
in
pop
jo
lcall
xor
cmp
pop
pushf
mov
pop
psubw
and
pop
in
orb
imul
sub
dec
xchg
pop
in
inc
ss
mov
mov
popa
lds
dec
lea
and
call
les
mov
pop
xor
cltd
bound
mov
jo
xor
les
iret
mov
mov
sub
push
out
nop
xlat
cmpsl
push
dec
mov
xor
pop
test
pop
mov
push
out
mov
cltd
dec
cmp
push
icebp
fldcw
adc
ss
pusha
mov
stc
jnp
leave
bound
pop
jne
cmp
inc
int3
inc
gs
jns
mov
out
roll
test
pop
push
sub
cmp
aaa
insb
add
mov
sbbb
push
jno
pop
or
lods
enter
sti
sbb
or
fdivrs
sahf
addb
hlt
push
test
jne
arpl
out
out
insl
cmp
dec
cwtl
cmpl
mov
xchg
jl
test
mov
dec
push
xor
loop
inc
pop
nop
cli
xorb
std
ljmp
lret
aad
or
mov
jmp
jl
mov
fldl
inc
mov
out
cmc
nop
adc
orb
jns
ss
imul
fistps
popf
mov
cmc
fmulp
fmul
inc
sub
cmpsl
lahf
cmp
lock
sub
inc
lods
je
lock
fcoms
jno
mov
sahf
push
test
pop
sahf
pop
cmp
sub
fidivrl
push
xor
jmp
out
ds
mov
sub
out
sbb
fnstcw
fwait
pop
fsubrs
loop
adc
imul
adc
je
loop
fists
push
jns
gs
jmp
js
and
xchg
and
push
imul
xor
dec
xchg
and
add
and
or
jp
sbb
dec
dec
cld
std
pop
mov
and
push
and
push
lds
idivl
adc
hlt
mov
mov
adc
xchg
sub
sub
and
lods
aad
mov
mov
cmc
imul
icebp
les
sub
repz
jl
pop
out
mov
pop
es
mov
lahf
out
cmp
test
pop
in
xchg
mov
mov
inc
lds
mov
test
loopne
xchg
cmp
cs
js
cwtl
jnp
cltd
jno
test
sbbl
clc
xlat
movb
inc
rolb
mov
test
adc
out
jl,pt
movsl
xchg
inc
xchg
mov
pop
and
mov
jmp
arpl
or
sub
test
popa
testb
or
mov
outsb
push
add
lea
daa
mov
jae
in
jnp
lcall
ljmp
call
cmp
scas
sbb
push
and
nop
and
cmc
js
dec
jge
mov
or
push
push
add
sub
mov
pop
xchg
cmp
inc
pop
jge
mov
call
jne
add
dec
aaa
cmp
repz
pop
loop
dec
dec
adc
add
sub
cmpsb
and
sbb
jo
out
cmp
outsl
sbb
mov
mov
daa
loopne
jns
fdivp
andb
and
nop
cld
and
xor
es
ljmp
aaa
call
test
pushf
sbb
xor
mov
lds
clc
sahf
insl
xchg
iret
fsts
lret
mov
inc
andl
movsl
and
das
orb
lods
ret
call
jmp
out
call
lock
push
iret
shrl
jne
add
pop
and
mov
dec
aaa
or
movsb
je
pop
xor
xchg
fsubl
pop
js
xor
test
push
mov
xchg
jge
andl
mov
or
jmp
fdiv
ret
int3
jg
push
push
pop
fldcw
ljmp
cmp
stos
sub
insb
sbb
orl
js
and
ja
cld
lds
jp
and
xchg
push
dec
cmp
sub
pop
push
pop
xchg
lret
inc
data16
jns
cmp
stos
clc
push
stos
or
push
xchg
inc
xchg
xchg
push
mov
addr16
bound
push
lea
mov
lahf
lcall
pavgw
cmp
or
mov
sub
jmp
lcall
pop
cmpsl
mov
mov
mov
shll
mov
adc
xor
shl
int
dec
test
scas
xor
enter
pop
idivl
aam
gs
cltd
daa
lock
test
jle
and
add
test
pop
out
jge
mov
mov
in
scas
mov
lods
push
mov
in
mov
inc
dec
cmp
cmp
lods
add
in
arpl
out
leave
sahf
push
lea
add
fs
imul
jae
mov
fstpl
mov
les
ja
mov
push
cs
jbe
sbb
jle
enter
mov
xchg
adc
add
pop
jp
cs
add
dec
push
loop
inc
sti
dec
test
xor
jp
push
ja
das
sbb
rcll
jl
xor
jae
dec
add
icebp
mov
pop
cmpl
js
add
cmc
das
push
jns
xor
adc
xchg
add
fcoms
mov
inc
dec
sub
in
jge
push
adc
stc
mov
jne
jp
call
mov
stc
jg
cmpl
adcb
sub
insb
or
repnz
push
testl
mov
mov
xchg
xchg
fcmovb
fdiv
scas
jmp
mov
sti
push
push
sub
aad
in
add
dec
fldt
jl
divl
push
fisttpll
push
push
xchg
fadds
jae
mov
add
sbb
cli
mov
out
xchg
adc
imul
or
out
adc
aas
adc
inc
in
mov
dec
clc
hlt
aad
adc
xor
cmp
xchg
inc
and
sub
lods
cmp
push
mov
jecxz
jnp
push
in
xor
adc
adc
nop
int
xor
xor
push
hlt
inc
add
inc
lods
push
jmp
xchg
jbe
xor
push
insb
dec
test
in
mov
jnp
in
in
insl
or
imul
je
stos
enter
ds
faddl
mov
cli
pop
mov
cmp
aas
mov
cmc
mov
pop
fcom
xchg
mov
mov
int3
and
and
pop
mov
adc
jmp
sahf
and
mov
icebp
mov
mov
int3
dec
es
inc
push
fistpll
fwait
jge
aas
loope
mov
dec
aas
outsl
xor
lret
insb
pop
in
pop
xchg
data16
adc
dec
sbb
out
rcr
shl
hlt
xor
and
shll
daa
loope
push
push
or
jne
inc
out
sbb
ss
insb
lret
aad
das
repnz
loop
adcb
test
or
pop
test
jae
call
push
jbe
and
popa
inc
jbe
mov
fnstenv
mov
ja
and
and
mov
test
iret
lea
lock
jno
leave
movsl
xor
and
xchg
push
aad
sbb
and
orps
xor
in
mov
iret
inc
into
fbstp
scas
lahf
and
and
aam
push
cmpsb
mov
insl
ret
imul
cwtl
pop
mov
rcl
pusha
orl
bound
jo
into
test
inc
inc
jl
add
test
out
dec
xchg
mov
sub
shll
push
xor
or
adc
cmp
mov
mov
cmpsl
pop
in
xchg
sar
cwtl
mov
fisubs
push
fcoms
xor
fidivrl
xorl
pop
pusha
stos
sbb
pop
outsl
in
add
insb
into
xor
pop
data16
bound
pop
pop
repnz
add
jbe
insb
mul
test
xchg
jno
mov
mov
iret
addl
pop
fisubrs
pop
mov
test
jp
xor
pop
test
mov
fcompp
and
or
sbb
in
in
and
loop
repz
xchg
jae
sub
dec
jno
mov
cwtl
out
inc
jge
mov
pop
pop
mov
fwait
cmpsl
and
mov
repnz
mov
aas
cwtl
in
push
push
in
nop
call
adc
push
bound
dec
int
cmp
fstpl
scas
xchg
mov
aaa
pop
jl
int3
cwtl
in
popa
clc
inc
in
and
xlat
cmp
mov
and
cmc
pop
arpl
mov
in
cmp
sbb
std
pushl
sub
lds
aaa
jns
mov
shl
mov
mov
pop
rorl
xchg
mov
fsubl
ftst
es
stos
mov
xor
js
mov
sbb
jp
mov
repz
or
iret
repz
ret
push
add
cmpsb
mov
ret
and
inc
adc
orl
xchg
aas
mov
push
jmp
xor
mov
rorb
jle
shr
jg
scas
add
mov
fistpll
dec
clc
enter
lock
or
jno
jne
fwait
xchg
lret
cmp
lods
movsb
test
jge
clc
xchg
sbb
cmp
xor
jns
pop
xchg
jae
aaa
stc
pop
bound
dec
mov
dec
mov
xor
lret
add
inc
add
adc
outsb
mov
sbb
lods
mov
test
aad
enter
or
fldt
cli
es
xchg
repnz
mov
fsubrl
xchg
inc
push
loop
outsl
and
fnstcw
mulb
ds
dec
mov
and
jo
mov
rorb
cld
lret
xor
outsb
inc
add
pmaxsw
push
jbe
bound
adc
insb
popa
xchg
push
loopne
call
sub
cmpsl
iret
imul
and
jae
pushf
out
popa
fcomi
cld
jne
repz
or
sub
dec
cli
or
push
jne
cmpsb
xchg
mov
out
jbe
in
xchg
and
sub
call
addb
ss
mov
jmp
mov
lods
lret
imul
jno
std
jb
ss
in
imul
mov
movsw
adc
lods
cmc
add
xor
pop
mov
lea
xor
inc
addr16
sub
je
push
fs
and
pop
push
pop
add
adc
xchg
aam
imul
decl
in
or
xlat
mov
gs
add
leave
loop
int3
repz
bound
cmp
scas
pop
sbb
loopne
xor
pop
sub
push
sbb
inc
in
adc
pop
pusha
decl
pop
push
loopne
jg
std
or
aaa
jno
mov
out
dec
test
mov
cmpsl
test
test
sub
les
add
ss
test
andl
insl
cmp
sahf
leave
jle
aaa
xchg
mov
out
mov
cmp
mov
stc
lods
dec
into
imul
mov
xchg
fidivl
sbb
in
sbb
shr
lahf
mov
mov
in
sbb
add
fbstp
add
jo
pushf
jae
loopne
push
leave
mov
cmp
inc
push
jecxz
outsl
push
mov
and
push
inc
lretw
mov
loope
jne
and
inc
mov
mov
jle
addr16
scas
jbe
movsb
xor
add
dec
mov
enter
inc
inc
pushl
sbbb
pop
rorl
mov
mov
stc
dec
cmpsb
add
and
sub
cmp
mov
cmp
ret
mov
mov
add
and
aas
mov
sub
add
cmpsl
dec
mov
xor
push
xor
icebp
sub
lret
outsb
stos
lds
lods
in
mov
adc
xor
mov
push
push
cmp
or
fwait
add
lea
pop
push
pop
mov
daa
into
sub
in
dec
mov
sbb
xchg
rorl
dec
fcoml
in
sbb
mov
loope
xchg
cld
push
mov
in
lret
mov
fwait
pop
cmc
test
mov
test
test
stc
push
xchg
into
xchg
lret
push
into
xor
in
call
sbb
sub
out
sub
mov
pop
mov
mov
mov
int
imul
loopne
xor
pop
cmpsb
iret
popa
jbe
into
dec
pop
lock
sahf
mov
adc
mov
rcll
mov
and
testb
daa
dec
cmp
xchg
inc
mov
cwtl
mov
mov
fisubrl
add
mov
push
imul
outsb
fwait
sub
pop
xchg
ljmp
jo
cld
mov
popa
lret
mov
xor
mov
push
mov
jge
adc
xchg
mov
mov
sarb
cld
addr16
fsubrs
add
mov
jg
or
mov
popa
jbe
cmp
push
scas
into
fisttps
adc
rep
fmuls
nop
pusha
jp
push
push
inc
gs
sub
mov
test
xorb
movl
ss
call
movsl
movsb
pop
loopne
mov
pop
sub
add
jo
nop
xor
imul
mov
inc
cmc
jle
ret
clc
dec
repnz
pop
popf
xchg
sbb
sbb
cld
sbb
mov
ret
push
das
sahf
enter
shlb
and
dec
or
cmp
ret
inc
cmp
cmp
in
mov
rcl
adc
mov
mull
pop
fisubrl
dec
icebp
or
popf
out
rorb
mov
orb
mov
dec
fstpl
inc
cmp
int
repnz
xchg
jl
sahf
pop
fisubs
pop
add
addr16
lea
data16
test
lea
sub
shll
std
fwait
out
sbb
mov
pop
jge
push
repz
ljmp
add
ds
loopne
aad
pop
cli
and
xchg
jl
insb
pop
pop
ror
push
fdivp
aas
push
cmp
dec
andl
subb
pop
jne
in
outsl
sub
andb
mov
ficomps
and
les
xchg
sub
mov
xor
jb
push
push
cmp
in
rorb
jle
push
jo
scas
in
mov
jecxz
pop
popf
imul
add
and
and
jae
xorl
leave
jl
adc
xor
pop
add
dec
repnz
or
mov
mov
sbb
testb
aas
loop
xchg
sbb
mov
test
fildl
fists
sbbb
inc
inc
cmpsb
enter
cltd
jae
add
pop
dec
outsb
xorl
iret
jne
iret
hlt
scas
enter
lock
test
xor
adc
out
lds
inc
ds
pop
inc
arpl
shrl
lock
repz
jbe
js
out
and
xor
pusha
sub
arpl
inc
repz
scas
xchg
scas
sbb
mov
inc
icebp
jecxz
cmp
pop
fists
push
sti
call
daa
jne
pop
add
movzbl
rcrl
push
or
out
mov
insb
lods
sub
inc
add
pop
ljmp
int
addl
loop
sub
jmp
insl
cmp
jo
js
mul
jmp
fcomi
fwait
xchg
aad
mov
jecxz
cmp
sub
mov
repnz
sti
jbe
dec
outsl
cmpsb
fcoml
pop
fiaddl
test
out
ret
sub
xor
nop
push
filds
add
mov
mov
xlat
sub
add
push
mov
mov
jge
xchg
add
sbb
lock
enter
insb
xchg
cs
jno
neg
jle
and
enter
test
or
aas
and
imul
dec
mov
mov
or
xchg
mov
rolb
jl
js
sub
xchg
iret
xchg
dec
sub
mov
stos
cld
js
inc
call
icebp
pusha
mov
push
mov
or
int
inc
push
push
aas
dec
xchg
out
enter
or
mov
ret
and
adcb
loope
jl
pop
jmp
bound
cmpsl
inc
out
and
xchg
rcll
mov
test
inc
jb
inc
imul
lods
xchg
pop
mov
arpl
mov
in
sub
dec
jmp
pop
sub
cmp
inc
dec
and
adc
adc
push
roll
jl
push
mov
dec
lret
roll
push
mov
mov
xor
negl
jp
fimull
aam
repnz
cli
iret
stos
inc
or
or
pop
adc
inc
sbb
inc
inc
les
or
repnz
pop
pop
sbb
add
push
xor
repz
dec
and
scas
cmp
cmc
sub
les
data16
pop
and
movsl
cmc
jge
or
mov
push
mov
pop
sqrtps
cmp
sbb
pop
xchg
or
leave
ror
fdivr
mov
xor
lea
sahf
rcrl
add
push
test
add
jo
jno
imul
call
lea
jne
or
cmpsb
push
jmp
ja
popf
imul
aad
jge
lds
inc
xlat
jnp
jo
xlat
enter
jbe
scas
cs
jnp
adc
dec
cmc
mov
xchg
mov
fs
lret
sbb
daa
pop
fxch
icebp
lret
ja
jno
pop
es
mov
popa
jmp
orb
movsb
xor
xchg
sbb
roll
sub
shr
mov
and
imul
push
call
pop
mov
dec
aas
ds
ljmp
jmp
daa
cwtl
subb
addr16
outsl
inc
pop
scas
inc
jle
iret
or
push
sub
mov
pop
mov
mov
f2xm1
and
adc
mov
mov
push
inc
pop
xchg
and
lods
push
cld
mov
dec
repnz
lods
ja
push
outsl
jbe
or
mov
testl
xor
call
popa
adc
and
adc
sub
data16
cld
js
add
je
aaa
lock
imul
lock
cmp
push
adc
xchg
iret
fwait
jmp
jle
inc
add
icebp
rcll
xchg
dec
adc
pop
cmp
repnz
mov
adc
mov
jne
jb
orl
daa
roll
mov
xor
jnp
xchg
xchg
clc
popa
push
add
popa
icebp
daa
add
push
push
and
test
subw
iret
fbld
add
lahf
loopne
pop
and
mov
jmp
pop
lds
aad
and
push
inc
lcall
aaa
rorb
lret
push
ljmp
push
scas
mov
arpl
mov
jp
jns
loop
cmpsl
push
inc
mov
mov
inc
xchg
xchg
enter
pop
aam
mov
add
mov
or
push
xchg
cld
repnz
repz
and
add
dec
frstor
test
aam
out
cmp
aaa
inc
fldcw
inc
pusha
jle
xchg
add
and
loope
rclb
sub
ds
sub
sbb
enter
rorb
mov
jmp
pop
scas
ljmp
cld
inc
or
mov
xor
int3
popa
add
dec
sti
adc
pop
testb
leave
stos
xchg
scas
push
out
rcll
std
cmp
sbb
popf
cmp
daa
test
jmp
in
xchg
pop
pusha
mov
loop
fcmovnbe
mov
mov
cs
xchg
subl
dec
push
pushf
dec
pop
js
mov
xor
mov
cs
xchg
gs
xor
or
push
xchg
cld
jae
fwait
stc
sub
ss
xor
test
nop
push
jle
stc
scas
mov
faddl
std
sbb
adc
aad
scas
xchg
xor
xor
js
movsl
inc
jp
add
mov
mov
push
loope
and
mov
or
dec
sub
or
ret
mov
je
test
aam
dec
adc
int3
lods
cwtl
lahf
xorb
mov
or
mov
sti
sub
cwtl
dec
sbb
mov
dec
xor
pop
idivb
scas
jp
push
cmp
pusha
mov
out
lea
jle
adc
mov
xor
mov
fiadds
dec
in
fiadds
lahf
in
jne
sbb
cld
mov
lahf
adc
rol
add
test
cld
shll
pop
pop
shrb
lods
iret
ja
pop
inc
outsl
ficoml
xor
or
lods
xlat
aam
stos
mov
or
aam
sbbb
pop
adc
push
mov
jns
push
insb
scas
pop
jle
aas
insb
pushl
xchg
ds
jb
sbb
sub
das
cltd
js
lea
mov
adc
sub
test
data16
sub
cmpsb
sahf
pop
repnz
adc
ss
ja
push
inc
lcall
xchg
lret
cmp
pop
jo
mov
test
xchg
or
shrl
push
call
mov
cmc
popa
jb
dec
loop
xchg
call
movsb
rorl
mov
hlt
push
jecxz
inc
ljmp
pop
jecxz
mov
and
dec
and
jbe
test
inc
data16
vmread
jne
jne
or
mov
cmp
test
xor
test
xlat
int3
outsb
sub
mov
cltd
mov
shll
jnp
icebp
xchg
mov
mov
std
jae
aam
imul
or
bound
shrl
sahf
cmp
cmp
imul
in
add
adc
divb
xchg
xchg
jno
arpl
mov
cltd
inc
inc
pop
inc
add
add
bound
bnd
decl
cmpsb
fdivrs
fisttps
rclb
inc
cmp
push
imul
hlt
lea
add
inc
sub
enter
jl
pop
addr16
sub
lea
aad
xchg
rcl
int
xor
imul
insb
mov
jle
push
call
cmc
sbb
add
hlt
xchg
les
push
adc
push
repz
dec
dec
inc
ret
add
fcmovbe
adc
dec
jo
data16
popf
bound
push
add
inc
int
push
fsubrl
lods
cmp
mov
jnp
dec
xchg
jg
sbb
aam
jb,pt
mov
data16
in
cmp
pop
scas
jmp
mov
xchg
push
insb
loop
sub
ds
stos
push
faddp
sbb
shrb
adc
push
cltd
lods
jl
loope
cli
jp
xor
mov
sti
out
iret
stos
scas
jecxz
cli
xchg
inc
subl
aam
lds
std
jge
jl
jb
push
adc
inc
clc
mov
add
ljmp
push
and
data16
cmp
pop
pop
jp
adc
push
outsb
stos
decb
scas
mov
mov
jl
dec
mov
cwtl
push
popl
pop
lods
add
fucomi
cmp
inc
and
jmp
mov
pop
sarb
imul
cmp
scas
ss
mov
movsb
dec
push
inc
sarb
push
xchg
sub
jge
daa
aas
lcall
insb
sub
sub
icebp
aas
lret
jecxz
je
fdivs
mov
add
mov
push
and
adcb
negl
push
dec
in
or
mov
and
repnz
push
lods
or
jl
cmpb
jl
mov
cmp
insb
shll
pushf
dec
call
adc
outsb
add
xchg
divps
mov
adc
mov
add
rolb
std
enter
lret
lret
imulb
push
pop
pop
pop
cli
pop
pop
dec
popa
fimull
mov
mov
test
int
lcall
mov
adc
orl
stos
pop
sub
and
jbe
bound
lock
cmp
add
andl
cmp
jg
cmovbe
add
fildll
sti
rcll
aas
mov
or
pop
shrb
imul
sti
out
sbb
cmc
cmp
test
ret
push
fdivr
push
test
mov
dec
icebp
mov
aam
xor
leave
es
mov
push
mov
push
pusha
fsubrl
sbb
fwait
or
aam
cmp
stos
adcb
lock
aas
mov
test
sti
stos
test
push
lea
mov
push
xchg
shrb
sub
push
loope
dec
nop
mov
mov
test
repz
rolb
fdiv
mov
pop
push
and
lods
aam
jae
loop
jg
arpl
insb
inc
leave
subb
pop
addr16
xchg
outsl
loope
popf
cld
fdivrl
outsl
pushf
xchg
fs
sbbl
or
in
je
mov
mov
xor
les
and
pop
add
fdivrs
setg
test
mov
lods
dec
mov
mov
sbb
pop
lahf
jge
pop
pop
adcl
pop
mov
bnd
add
xchg
or
loopne
xor
mov
jo
popa
mov
sub
pushf
xor
outsb
mov
jecxz
sbb
mov
mov
inc
jle
lods
insb
out
inc
dec
aas
xchg
or
dec
mov
jb
in
and
cli
movntps
imull
mov
test
ficoms
jno
mov
jle
fwait
pop
inc
nop
in
add
sbb
lret
add
shl
lods
sub
add
and
lea
push
mov
fistpl
sbb
sbb
vpaddsb
insb
adc
cmpsb
dec
in
dec
dec
jno
sub
cmp
fdivrs
jp
mov
fcmovnu
ficompl
mov
shlb
jno
aam
push
sbb
push
mov
leave
leave
xchg
das
dec
popa
sub
push
inc
repnz
bnd
aaa
push
fcmovb
jmp
jnp
pop
cmpsb
sbb
mov
test
nop
and
in
daa
cmp
add
leave
imul
lds
aas
movsl
and
enter
dec
call
test
mov
jle
jb
sbb
push
andb
adc
enter
cli
mov
or
hlt
inc
mov
ja
inc
or
iret
lahf
jecxz
xor
aam
cmc
addr16
fdivrs
xchg
adc
xchg
jns
rcr
sbb
sbb
cmc
pop
pop
cld
or
add
ss
inc
mov
sbb
mov
xor
dec
bound
cmp
stos
xchg
xchg
test
jae
dec
mov
popf
fdivrl
push
jne
dec
fdivp
adc
andb
mov
mov
out
push
in
stos
pop
mov
xchg
stos
jge
mov
popf
mov
aam
mov
or
mov
arpl
cmp
dec
jno
xchg
xlat
lcall
sahf
lods
dec
sub
hlt
jnp
fmull
mov
lods
mov
les
clc
sbb
lret
pop
inc
push
pop
mov
pop
adc
scas
pop
xchg
into
mov
xor
shrl
mov
dec
xchg
cmpsl
cmp
xor
cmp
mov
jbe
lods
ficoml
sti
or
es
mov
adc
ljmp
mov
fcompl
inc
fists
repz
pop
pop
ljmp
xor
dec
mov
and
push
rep
and
adc
push
out
jno
jl
mov
or
pop
out
lret
sti
dec
dec
jne
jecxz
imul
lock
das
xchg
xor
lods
cmp
pushf
mov
sub
in
mov
aam
int
dec
je
cmp
cmp
xor
cld
cmp
aad
lods
nop
out
pop
mov
push
jle
orl
mov
xlat
cmp
mov
jo
pop
gs
mov
call
pushf
nop
push
shrb
cli
sub
and
add
iret
push
cmp
bnd
or
notb
mov
incl
das
pop
and
test
pusha
dec
faddl
sti
movsb
in
xchg
ret
dec
sbb
xchg
ficoms
mov
xor
jle
or
push
xchg
addl
pop
mov
push
mov
pop
xchg
int
sarl
mov
push
out
push
sbb
in
icebp
pushaw
insb
or
int
hlt
fisttpll
cs
scas
xor
xor
repnz
dec
gs
mov
mov
les
xchg
dec
mov
cmp
gs
xchg
mov
sub
mov
jns
rcrb
js
scas
arpl
xor
jb
test
push
push
shr
mov
out
mov
xchg
pop
lods
ljmp
mov
mov
jl
pop
pop
dec
xchg
pop
jns
out
mov
pop
adc
aas
mov
cltd
fidivrs
in
cmp
scas
jg
or
sbb
iret
xor
sahf
mov
push
shrl
xlat
arpl
push
adc
add
mov
movsl
jno
jp
fld
push
sub
iret
pop
or
and
xor
fadd
pop
xchg
sbb
in
dec
sbb
cmc
imul
cmpsb
pop
dec
inc
popa
movsl
inc
popf
imul
cmp
mov
lds
cmpsb
ds
mov
lds
or
fcmovne
and
pusha
xchg
lret
sbb
inc
mov
push
out
test
ficompl
fimull
shrl
mov
jle
adc
les
sbb
lds
jle
gs
int
sarb
sbb
leave
movsb
sbb
mov
dec
sub
push
mov
test
bswap
mov
shrb
imul
sub
jae
stos
and
pop
mov
jecxz
out
fisttps
adc
ja
xchg
add
add
and
push
inc
pushf
cmc
sbb
test
pop
popf
mov
mov
dec
xor
mov
jbe
lods
cmp
in
fdivrl
adc
cmp
xor
or
dec
hlt
int
ret
jmp
lcall
jno
stos
jg
mov
ja
xchg
push
pop
test
aaa
sahf
jo
inc
gs
jo
xchg
fdivl
das
and
popa
add
xlat
add
shrl
push
sbb
dec
sbbl
xor
sbb
dec
jg
mov
cmpsl
pop
adc
mov
xchg
arpl
out
popa
xchg
out
sti
pusha
ja
sub
and
adc
mov
xchg
out
mov
shrl
in
filds
sti
adc
jp
repz
cmp
dec
push
aas
inc
adc
cltd
xor
stc
gs
stc
lret
sub
mov
mov
popf
sub
imul
lret
das
cli
loopne
in
and
jnp
pop
sar
xchg
dec
jmp
sar
sbb
and
cmp
stos
sti
push
lea
mov
lcall
mov
hlt
push
mov
fwait
sbb
test
mov
and
jbe
or
inc
sbb
pop
push
call
push
cli
arpl
sbb
and
bound
cli
jnp,pt
es
mov
xchg
jmp
mov
xor
pusha
bound
ja
nop
pop
ss
pop
xor
aam
adc
mov
xor
xor
fisubrl
jns
test
stos
push
push
dec
mov
cmp
push
sub
mov
jle
mov
cmpsb
add
insb
jl
jge
push
sub
out
das
lea
fcoms
fmuls
sbb
and
cmpsl
and
sub
cli
fadds
xor
cmpsb
enter
hlt
adc
sub
jmp
jecxz
cmp
inc
ss
loop
stos
in
mov
xchg
lahf
or
jle
cmpsb
adc
movsb
les
cmp
cmp
lahf
sahf
enter
imul
flds
pop
dec
test
cld
dec
rol
sbb
hlt
lods
adc
sahf
xchg
and
fcoms
pusha
xchg
pop
pop
or
or
insb
sbb
shl
sub
add
sbb
xlat
pop
rcll
in
pushf
cmp
mov
loop
outsl
outsb
out
pop
inc
out
cmp
inc
and
cmp
cmp
jge
xchg
add
loop
popf
dec
fcomi
adc
out
fs
pop
adc
movswl
test
rcll
dec
mov
cli
xlat
add
sub
adc
in
mov
adc
sub
js
push
std
stos
pop
sub
mov
into
jl
inc
mov
cld
inc
clc
test
mov
fwait
js
adc
and
dec
or
add
jne
mov
outsb
es
in
dec
sbb
movsl
mov
leave
cmp
jnp
rcrl
pusha
ffreep
sbb
push
sahf
jbe
inc
call
push
adc
fsubl
aaa
cmc
cwtl
ljmp
adc
push
add
shll
push
mov
pop
stos
pop
jecxz
mov
add
cltd
negb
mov
sbb
push
pop
loopne
mov
jnp
pop
add
cs
push
imul
in
inc
jo
mov
lret
mulb
setge
mov
lcall
jl
or
std
jg
cs
sarb
pop
pop
add
mov
loope,pt
cmp
popf
popa
jp
jmp
das
aas
inc
jns
aas
jae
or
loop
fldcw
mov
inc
repnz
lret
scas
adc
lahf
cmp
adc
push
pop
cmp
xchg
pop
daa
mov
sbb
sbb
or
mov
dec
cmc
les
xrelease
add
cmc
mov
dec
mov
push
jns
jae
mov
adc
ret
mov
add
push
lret
in
inc
sbb
or
jmp
push
mov
pop
daa
arpl
push
fnsave
aad
mov
push
loopne,pn
cmp
lret
xor
mov
mov
pushf
sbb
add
std
jp
mov
iret
roll
or
or
sbb
test
jns
movsb
jge
int
sbb
mov
stos
out
sub
nop
out
xor
xlat
sbb
jne
popa
outsl
sub
dec
sahf
dec
jo
nop
xchg
cmpsb
imul
mov
inc
rcl
lcall
or
push
out
fsubl
leave
cmc
outsb
fstl
in
xlat
push
mov
dec
mov
ret
int
jno
test
cmpsl
cmp
mov
rep
call
test
fwait
es
imul
xor
mov
lcall
mov
jne
sub
xor
adc
dec
test
jmp
test
in
mov
out
adc
or
stos
fnsave
jle
sarb
ret
and
aaa
ficompl
int3
fidivs
mov
fwait
dec
dec
sub
lds
jecxz
into
mov
xor
and
push
fstpl
mov
shlb
cs
repnz
daa
fcoml
jle
push
pushf
sbb
repnz
or
shrl
ja
push
mov
mov
jae
into
mov
je
mov
xchg
push
and
adc
popf
and
adc
mov
inc
call
sahf
push
aad
notl
mov
and
add
int
cmpsb
xchg
and
sbb
add
xchg
xlat
ret
mov
sahf
jno
fnstcw
push
nop
push
mov
dec
mov
icebp
test
decb
mov
sbb
mov
jnp
orl
adc
fdivr
cld
icebp
popf
outsb
xchg
pop
push
cltd
cs
or
sbb
mov
in
sub
mov
shlb
xor
adc
lret
or
mov
xor
add
pop
jl
lea
mov
cmp
push
movsl
and
mov
out
push
jmp
imul
xor
dec
cmpsb
and
ss
ss
jae
sub
ret
ds
sbb
icebp
insb
insb
sti
aas
mov
mov
ja
lret
or
outsb
fcoms
jnp
mov
fwait
je
pop
dec
daa
pop
cld
arpl
mov
ja
and
in
push
ja
fdivr
fdivr
testl
pushf
add
lahf
int3
mov
cmpsb
push
ret
xchg
mov
mov
outsb
push
sbb
pop
jmp
loop
js
test
jecxz
pop
pop
lods
xchg
in
das
jmp
test
arpl
jmp
cld
fcmove
mov
xchg
scas
loop
push
inc
xor
nop
testb
pop
or
push
or
jmp
out
dec
sbb
shlb
and
gs
mov
mov
dec
iret
xor
mov
jecxz
and
sub
mov
ret
or
scas
add
sbb
aas
mov
dec
mov
nop
sbb
mov
mov
imul
mov
cwtl
sbb
and
add
ror
jmp
lds
shlb
and
stc
pop
sub
mov
enter
sbb
ret
jne
and
or
mov
call
adc
mov
cld
xor
push
leave
mov
icebp
cmp
jge
push
fst
or
cltd
incb
or
jns
adc
aad
rorb
lret
sub
add
in
imul
arpl
cwtl
xorl
es
lcall
in
or
das
jb
dec
adc
lret
and
fdivs
ja
lahf
mov
inc
push
push
xchg
andl
mov
jae
into
dec
mov
fstps
or
jmp
sbb
pop
lcall
push
add
cmp
sub
aaa
in
cmp
flds
add
add
addr16
fisubl
shr
mov
lahf
mov
adc
xchg
or
push
lods
rclb
lods
mov
mull
addr16
add
shlb
cmc
xchg
xchg
int
jg
xchg
mov
inc
iret
xor
dec
push
clc
nop
loopne
into
out
rclb
out
inc
mov
cmpsb
or
scas
xor
add
xor
pop
test
push
fisubrl
xchg
popf
int
pushf
push
mov
push
fiaddl
fs
lret
mov
push
pop
ja
data16
push
dec
nop
arpl
out
pop
sbb
shr
mov
inc
xchg
pop
in
pop
setbe
pop
pop
pop
sub
mov
into
cmp
daa
xor
adc
lds
push
adc
adc
and
inc
fcomps
push
in
sbb
cmc
dec
inc
sub
movb
push
cld
and
cwtl
push
imul
sub
add
out
jne
add
loopne
aad
or
leave
dec
mov
jnp
inc
inc
mov
out
and
js
iret
xchg
out
push
popl
fbstp
mov
sbb
sub
dec
xlat
jo
xor
xchg
push
and
fcmovb
mov
clc
stos
test
and
or
or
xor
loop
dec
lods
jp
dec
xlat
xchg
aas
scas
add
xorb
movsb
ds
mov
push
mov
and
inc
inc
scas
mov
cmpsb
add
push
int3
cmpb
or
dec
sub
test
pop
call
push
int3
rorl
or
xor
iret
jne
fidivrl
arpl
ffreep
xlat
jns
jge
pop
aam
or
sbb
ds
pushf
mov
out
push
fst
shll
push
inc
push
pop
jno
dec
xor
push
cltd
and
xor
pop
lcall
fwait
in
and
add
xor
pushl
push
gs
pop
outsl
iret
cmp
jge
inc
scas
sbb
or
pop
push
inc
scas
xor
mov
lret
mov
adc
sbb
add
loop
mov
cwtl
dec
jns
cmpsl
int3
mov
faddl
lock
pop
fwait
jae
jae
repz
movsb
jb
adc
scas
jb
lret
mov
ja
mov
xchg
pop
iret
xchg
daa
mov
nop
jbe
imul
push
lods
roll
xchg
inc
sub
aad
pop
inc
cld
jle
adc
or
push
pop
movsl
xor
outsb
pusha
ret
cld
repz
cmp
shll
pop
push
fs
ss
dec
adc
xchg
or
jb
mov
dec
xor
mov
fs
leave
mov
xor
xchg
dec
xor
arpl
insl
std
xchg
adc
popf
xor
push
stc
push
loopw
jl
idivb
and
push
mov
mov
pop
aas
jb
sbb
rcr
cwtl
add
pop
jecxz
mov
aam
push
adc
push
and
in
iret
jbe
jp
mov
or
bound
repnz
jo
rcrl
push
iret
dec
xor
je
shr
mov
int3
inc
xor
and
lcall
dec
in
inc
enter
fbstp
pop
rcrb
add
xchg
arpl
les
mov
xorb
pop
push
in
xor
and
adc
ja
inc
in
push
ret
and
insl
and
inc
sbb
in
or
mov
mov
jle
sub
jno
xchg
shl
in
pop
call
sarl
mov
aam
movsl
xlat
inc
loop
adc
xor
lcall
cwtl
out
rcrb
mov
bound
in
adc
sti
sub
and
jo
mov
dec
pop
push
daa
mov
mov
ret
mov
lret
inc
xlat
xor
inc
idivl
adc
mov
outsl
bound
jmp
inc
pop
adc
in
adc
les
mov
pop
mov
arpl
ret
adc
mov
xor
or
or
imul
bound
shrb
dec
daa
vpcmpgtw
dec
scas
in
xor
dec
sub
jne
ja
sar
inc
and
pop
loope
push
scas
pop
sbb
in
test
push
fdivr
cmp
push
sbb
cltd
bound
test
inc
nop
in
shll
negb
jl
jmp
or
mov
shll
shll
mov
shl
ret
push
dec
icebp
push
js
fnsave
cmp
jbe
add
test
xchg
push
lcall
xchg
rorl
mov
pop
inc
mov
ret
xlat
sub
rclb
mov
ret
scas
aas
dec
test
inc
jno
push
adc
aad
mov
ja
aad
sbb
stc
ja
sub
dec
dec
push
inc
pop
test
add
adc
rcrl
std
pop
mov
sub
pop
movsb
or
inc
cmpsb
imul
push
call
pop
xchg
mov
cs
pop
xchg
jns
adc
xchg
fsts
cmp
mov
lods
mov
push
fisubl
cmp
int
or
push
adc
nop
mov
sbb
or
lock
lea
push
dec
lods
xchg
pop
add
scas
inc
sub
xor
scas
sbb
sub
bound
clc
lods
fisttpl
cmp
cmp
insl
sahf
fcmovnb
add
in
aas
stos
mov
adc
jnp
addr16
lock
sarl
idivl
pop
loopne
dec
pop
xchg
mov
mov
nop
out
and
enter
cmp
dec
push
push
push
stos
cmp
in
xchg
out
dec
add
out
std
sub
insb
push
pop
je
lret
stos
sub
and
int
mov
xor
dec
ret
gs
sahf
sub
rcl
mov
and
shlb
xor
xchg
pop
push
rclb
inc
inc
mul
xchg
xorb
add
fsts
dec
jle
sub
fistps
rorl
push
and
push
int3
push
ret
ficompl
cmp
rcrb
pop
cmp
mov
or
negb
stc
rorl
inc
pop
lods
pushf
mov
scas
cs
aad
es
mov
lea
mov
ja
popa
repz
push
xor
xchg
inc
nop
fisubrl
dec
lahf
xchg
push
adc
xchg
sbb
cmp
call
adc
sbb
dec
in
icebp
xor
enter
xchg
jp
push
fcmovnbe
ja
pop
xchg
jle
mov
mov
aaa
loop
pusha
lods
cmp
ret
add
pop
xorb
inc
aas
cmpb
pop
xchg
xor
xor
rorl
imul
ret
inc
add
sbb
mov
jbe
je
jb
inc
mov
or
in
enter
std
adc
jl
popa
and
daa
imul
jne
test
jle
cwtl
shlb
sti
or
lods
mov
cmc
imul
js
jns
mov
pushf
pop
pop
push
fdivrp
test
hlt
xor
jp
jb
pop
push
or
cmp
jae
xor
xchg
pop
mov
movsl
icebp
jno
int
fwait
mov
mov
mov
outsl
cmp
fldenv
inc
or
shl
jbe
xchg
lcall
xchg
and
leave
insl
jmp
xor
fmul
sbb
out
cmpsb
out
mov
fnstenv
int
push
popa
scas
xor
mov
movb
jl
aam
out
mov
cld
adc
rorl
fidivs
rcr
mov
pop
sbb
dec
and
add
stos
lret
push
outsb
adc
pusha
das
mov
xor
insl
fisttps
insb
mov
pop
xor
jle
stos
js
cmp
enter
mov
sar
dec
dec
mov
adc
jge
scas
mov
xchg
push
jns
add
test
hlt
pop
xchg
sbb
push
cmp
inc
add
daa
call
cmpsb
in
jb
iret
cmc
subb
pop
adc
sbb
out
mov
jne
aas
cwtl
jecxz
sbb
sarl
out
cwtl
pop
movsl
std
fs
sti
insl
sahf
cmpsb
pop
dec
jl
jbe
and
and
repz
shl
ret
sub
fwait
idivl
mov
imul
stos
js
imul
cmp
push
push
frstor
and
ljmp
or
inc
lahf
sub
test
adc
aas
mov
mov
in
divb
add
jle
call
lds
insl
or
jp
gs
test
inc
jo
enter
cmove
test
inc
mov
mov
lret
push
xor
es
cli
push
outsb
push
stos
inc
fidivl
add
mov
xor
dec
std
call
hlt
mov
nop
jge
mov
push
mov
out
push
pushf
or
cld
sub
xor
fldenv
cltd
mov
aas
int3
and
mov
push
jg
insl
fsts
psadbw
xchg
adc
mov
xor
rclb
data16
addr16
dec
mov
in
push
add
jecxz
stos
jb
call
sbb
pop
cwtl
xchg
cld
movsl
lods
lret
mov
xor
push
push
adc
mull
mov
jno
call
cmp
jns
push
inc
cld
mov
pop
cmc
lock
les
jmp
int3
clc
or
mov
push
xchg
imul
cli
popf
push
stos
and
xchg
cvtpi2ps
mov
addr16
mov
dec
data16
cwtl
ljmp
nop
jno
lahf
fmul
mov
bound
xchg
imul
aas
jbe
adc
pop
sub
icebp
xor
jns
out
jge
pop
movsb
pop
adc
mov
inc
mov
or
scas
ljmp
sbb
pop
xor
nop
je
outsb
pop
inc
xor
cmpsl
mov
xlat
or
mov
inc
popf
cmp
sbb
fdiv
mov
push
lret
pop
cmpsl
mov
sbb
sub
test
pusha
add
sahf
fidivs
xchg
xor
stc
pusha
fs
repz
aam
out
xchg
andb
mov
pop
pop
xor
or
push
jns
sahf
and
out
adc
pop
icebp
mov
jnp
jo
and
mov
adc
pop
mov
push
or
mov
iret
pushf
jbe
testb
adc
sbb
lea
lds
pop
xor
xchg
cmp
sbb
rcl
shr
mov
imul
daa
pop
fisubrs
jle
pushf
jecxz
inc
cmc
ret
cmp
pop
popa
xor
mov
and
dec
push
cmpsb
in
out
stc
cltd
pushw
xchg
pop
xorl
xchg
or
popl
dec
sub
int
xchg
add
push
repnz
xor
lods
sbbb
fidivrs
addr16
iret
add
je
jo
sbb
xor
int3
add
sbb
shlb
or
bound
xor
or
sub
inc
sti
enter
cltd
scas
lcall
lea
push
cmpsb
mov
cmp
repnz
inc
int3
push
sbb
popa
cmpsb
jb
fidivrs
mov
pop
and
outsb
lods
xor
movsl
lock
adc
es
mov
rorb
add
push
js
sub
sbb
xchg
bound
mov
ror
dec
adc
adc
in
ret
mov
fcompl
jmp
pop
pop
mov
jge
iret
test
and
add
jle
pop
sbb
cmp
in
repnz
loop
out
and
mov
xor
and
jg
and
scas
xor
jecxz
test
push
stc
imul
and
fsubrs
lods
xor
leave
sbb
cs
stc
das
xor
hlt
std
sarb
push
xchg
push
mov
pop
pop
dec
pushf
sbb
push
cmp
out
fimuls
shll
xor
in
rorb
jmp
xchg
push
rcll
xchg
popl
add
ficomps
mov
insl
loop
sub
sahf
shr
dec
add
arpl
scas
sbbl
push
rcrl
cmpsl
lret
pop
cmp
pushf
jb
std
mov
sbb
sbb
and
xchg
xchg
fwait
push
idiv
xchg
outsb
subb
fildl
xchg
push
test
push
pop
gs
insb
push
xor
ja
and
dec
add
mov
inc
cs
mov
adc
push
leave
fxtract
mov
mov
push
xchg
sub
in
cli
sahf
or
push
mov
lock
add
mov
movsl
add
mov
aad
ret
jmp
sub
dec
in
out
aam
icebp
out
addb
mov
push
mov
and
sarb
jmp
cs
push
dec
add
push
ret
aad
or
leave
mov
in
mov
insb
lret
dec
inc
pop
pop
sbb
lahf
push
fidivl
rorb
mov
icebp
fwait
rorb
jmp
repz
or
or
sbb
and
movsb
xchg
push
mov
test
sub
test
lret
inc
fimuls
dec
jle
mov
aam
cmpsb
add
and
add
sub
jl
cltd
jecxz
ret
cmp
shrb
filds
jne
adc
xor
repnz
mov
repnz
add
sbb
mov
adcl
imul
in
int
add
cmp
loope
out
mov
xor
xchg
sub
pop
jb
push
xchg
lret
negb
fcomps
push
add
outsb
popf
xor
movsb
test
insb
dec
push
outsl
call
dec
insb
mov
cmpsl
insl
push
adcb
or
sub
jae
and
sub
add
jecxz
arpl
popf
aas
hlt
xor
pop
mov
hlt
ret
pop
out
sbb
xchg
loop
pop
loopne
hlt
loopne
xor
insl
dec
cmp
scas
add
lret
jae
lcall
push
nop
cmp
test
ret
and
pop
out
cmpsl
add
pop
pop
and
pop
push
push
cmc
iret
xor
sub
inc
loop
inc
sub
mov
mov
les
sbb
mov
dec
ret
stc
ds
jb
pop
fucomp
fcompl
imul
jbe
outsb
mov
lock
sub
xor
in
cwtl
xor
insb
push
stos
fst
or
or
scas
push
cmp
mov
movsb
mov
xchg
in
pop
scas
btc
outsl
and
push
divl
scas
or
xor
inc
mov
jno
xor
stos
xchg
movsb
into
test
add
stos
sbb
imul
std
out
cmp
jl
inc
inc
inc
inc
and
lea
or
xchg
cmp
scas
xorl
clc
fisttps
lret
fadds
je
push
sbb
push
aaa
aam
jbe
mov
jbe
push
adc
icebp
mov
call
mov
mov
jg
pop
rcl
and
out
out
mov
xor
xchg
pop
or
rclb
arpl
loop
scas
insl
sub
je
gs
daa
jo
orb
jl
sub
outsl
pop
fsubs
daa
in
xchg
mov
shlb
mov
sarl
xchg
pop
int
add
xor
add
cwtl
mov
adc
into
pop
mov
das
lea
xchg
xchg
push
push
dec
es
mov
pop
movsb
pushf
push
in
scas
lcall
es
sahf
aas
ret
loopne
fidivl
add
bound
adc
addl
ficompl
stc
and
jle
jns
addb
rclb
mov
cmp
adc
jbe
dec
sub
les
lret
repnz
icebp
out
jle
enter
sbb
lods
xchg
shll
pop
movsb
xchg
ds
cmp
pushf
loope
stc
or
push
dec
stos
incl
movsb
sbb
mov
imul
add
jmp
and
out
or
xchg
fwait
ljmp
adc
jne
adc
sbb
ficompl
mov
sbb
inc
js
jnp
and
jecxz
mov
mov
out
fdivp
lods
jecxz
gs
dec
jnp
cmpsb
stos
mov
popf
divb
adc
xor
push
sub
push
jb
je
dec
out
mov
sbb
and
ret
xor
jo
out
shl
in
xchg
cmc
sbb
cmp
xlat
push
ret
lcall
out
hlt
sub
ja
shrl
push
inc
adc
xchg
je
cwtl
push
lret
mov
mov
jle
or
popf
rcrl
loop
addr16
jmp
fmuls
mov
pop
int3
lods
es
jecxz
fisubrs
out
test
inc
outsl
cwtl
push
push
in
xor
stos
popf
test
pop
test
adc
bound
add
push
pusha
or
lds
rorl
insb
mov
mov
pop
addb
fwait
ss
cld
sub
incb
sbb
loop
jo
mov
bswap
mov
lret
lods
sbb
xor
xchg
inc
filds
popa
xor
rolb
adc
shlb
pop
xchg
movsb
push
out
out
xor
repz
in
dec
add
xor
dec
je
out
dec
adc
mov
clc
mov
jle
xchg
mov
jno
xchg
sub
ss
adc
dec
and
inc
push
and
push
add
xor
mov
hlt
or
into
adcl
sub
ss
cmpsl
mov
test
or
int3
push
imul
and
cmp
pop
sahf
or
andl
sti
leave
xchg
adc
call
testb
popa
gs
in
bound
mov
aad
jecxz
lcall
test
sub
cltd
adc
pop
out
sbb
pushf
das
mov
pop
icebp
outsl
jne
in
or
fs
mov
adc
mov
rcr
dec
jnp
lahf
roll
add
loop
jnp
mov
mov
ret
adc
pop
xor
je
fisubrs
cltd
sti
mov
adc
jbe
or
je
jne
mov
repnz
cltd
and
test
movsb
adc
lret
xor
gs
call
scas
xchg
sbb
in
ret
bound
movsl
ret
mov
mov
and
int
loopne
pop
scas
hlt
lahf
gs
les
sarl
rolb
es
movsl
and
jmp
je
lret
pop
mov
jbe
pop
adc
push
dec
cmpsl
imul
mov
sti
test
ss
fldcw
fistpll
mov
and
push
inc
movsb
adc
inc
outsb
sub
mov
or
dec
pop
adc
add
in
lods
and
push
add
push
adc
cmp
js
out
sub
insl
pop
int3
je
sub
lret
mov
imull
push
call
sahf
js
inc
inc
aam
test
insb
xor
push
inc
add
sbb
scas
cmpl
nop
jnp
sub
stos
into
in
adc
sti
xor
rcrb
sbb
popa
pop
stos
lds
mov
jge
in
loope
cmp
dec
push
jg
pop
gs
dec
or
test
lock
jmp
jnp
outsl
mov
std
pop
cltd
call
push
push
xchg
jg
ja
out
mov
inc
inc
icebp
cli
lgs
repnz
in
mov
and
stos
mov
repz
mov
pop
fistpl
bound
cmp
rcrb
mov
pusha
int3
or
push
mov
loope
orb
mov
mov
idivl
ficoms
xor
mov
lret
gs
stc
jns
fwait
or
add
mov
jnp
inc
mov
cmp
jb
mov
push
or
adc
pushl
in
mov
push
das
out
sbb
sub
arpl
add
test
xor
les
ja
ret
adc
inc
sbb
shll
in
sbb
add
mov
cmpsl
ret
fs
andb
adc
sbb
inc
push
adc
xchg
std
pop
add
push
aam
arpl
jno
pop
addr16
mov
leave
xchg
fcom
scas
push
cmp
push
test
in
outsb
addr16
dec
loop
lret
mov
cmp
add
fisttpll
sarl
in
dec
je
cli
mov
arpl
es
add
gs
je
dec
pop
mov
xlat
outsl
mov
clc
ret
fwait
and
xor
ss
insl
into
ret
mov
shrb
out
jecxz
xlat
mov
inc
jmp
push
leave
sub
popa
stos
pop
xchg
jo
insb
xchg
daa
dec
cmp
shll
dec
mov
mov
mov
mov
xchg
out
xchg
xchg
or
lret
movsl
icebp
ss
mov
clc
pop
jge
mov
fstps
stc
shrb
out
in
push
and
push
xor
movsl
mov
js
int3
xchg
cmp
fs
dec
adcl
mov
pushf
jecxz
dec
shll
push
pop
inc
out
call
out
fsub
mov
xor
inc
movsl
mov
pop
pushf
sub
xchg
jp
out
add
adc
cwtl
sahf
std
pop
pop
push
pop
mov
mov
mov
pusha
loope
subl
fbstp
push
cmc
jmp
or
idiv
test
loope
shlb
push
loopne
std
push
push
or
pop
sbb
out
xchg
mov
into
hlt
cli
fwait
push
mov
sbb
xchg
fdivl
lcall
mov
xchg
sub
or
scas
adc
inc
mov
ds
pop
xorb
aaa
xchg
inc
gs
adc
jmp
leave
sub
add
pop
out
xor
sbb
mov
into
lahf
lret
data16
aas
xor
xchg
outsl
push
jl
and
push
ret
sub
mov
lret
lods
jnp
aam
xchg
aaa
or
test
das
sub
shll
fxtract
in
add
out
clc
inc
pop
and
pusha
scas
ja
ljmp
jge
pop
push
adc
inc
push
test
mov
mov
or
call
push
es
push
idivb
pop
pop
sarb
sub
mov
mov
jnp
sbbl
les
inc
xchg
xchg
xor
fistpl
mov
lods
pop
jno
gs
lcall
xor
ja
cld
fwait
mov
mull
push
test
inc
jb
cmp
lcall
pusha
fldt
or
mov
and
pop
mov
sbb
pop
xor
gs
es
sub
mov
inc
jo
fcmovbe
rcll
std
lahf
xor
dec
loope
cmpsl
in
fildll
dec
movsl
xchg
xchg
pop
iret
adc
fs
mov
iret
sub
popf
add
dec
aam
sarb
add
and
sbb
stos
popf
inc
popf
ficomps
push
mov
mov
sbb
ljmp
push
pop
loopne
decl
outsb
mov
or
jns
mov
mov
dec
mov
iret
and
pushf
adc
outsl
inc
fdivr
mov
mov
cmp
ds
sbb
pop
ret
cs
mov
jnp
push
insb
mov
daa
nop
pop
push
pop
mov
ds
mov
scas
mov
out
pop
cmp
and
daa
pop
enter
pop
arpl
testl
mov
dec
pop
xchg
push
rcll
pop
bound
inc
cld
hlt
outsb
lcall
push
push
clc
aas
shl
das
inc
out
inc
xchg
add
out
xchg
push
test
aaa
in
push
ret
mov
add
ja
fldenv
addr16
fmul
ljmp
pushf
mov
cmp
sbb
xor
push
loopne
add
inc
mov
cs
pusha
xor
test
popf
xor
std
dec
mov
sbb
outsl
ja
loopne
insb
fcomps
adc
cmp
clc
jae
es
mov
fcmovbe
in
mov
pop
push
xchg
ljmp
scas
sbb
pop
pop
add
sti
in
xor
fadds
aaa
mov
testb
inc
and
push
fdivs
xchg
xor
cmpsl
lods
cmp
mov
jns
mov
sbb
mov
and
or
cltd
hlt
push
add
xchg
push
iret
shll
dec
outsl
movsb
push
cwtl
push
test
sahf
adc
dec
dec
push
or
xchg
les
hlt
testl
jno
cmpb
xchg
cmc
dec
dec
repz
cmp
mov
imul
sarl
or
pop
addl
in
cmpb
test
testb
xchg
addr16
lret
cmpsl
xchg
or
mov
js
or
in
stc
outsb
cli
cmp
jnp
iret
ret
pop
mov
jae
ficomps
sbb
lcall
loope
popf
xor
dec
int
push
push
and
jg
insl
addr16
rcll
fs
sahf
jnp
lods
xchg
ret
jbe
jb
mov
in
daa
iret
cmp
popa
enter
or
jae
clc
dec
push
pop
jns
iretw
mov
add
push
test
sbb
xor
inc
daa
or
dec
es
xor
push
adc
loopne
add
aaa
shlb
xchg
push
into
add
ror
jno
dec
out
enter
nop
lods
jge
xor
jmp
mov
dec
out
push
cmp
mov
add
mov
inc
cmp
popf
repnz
int
pop
and
jae
std
sti
xchg
std
dec
xchg
mov
jle
out
loop
out
gs
ret
sub
xchg
enter
lcall
andl
out
fsubs
fistl
push
mov
sub
cmp
popa
fistpll
fildl
mov
cmp
dec
lahf
sbb
sbb
pusha
mov
xchg
leave
push
xchg
out
aaa
dec
outsl
lahf
sub
sbb
pop
insl
dec
or
xchg
jno
adc
daa
mov
dec
xorl
mov
cmp
push
cli
lret
fwait
adc
loope
fcmovu
pop
call
inc
rcrb
aam
inc
push
mov
shll
sbb
mov
sub
jp
ficomps
and
mov
ja
mov
push
dec
lds
pop
xchg
dec
mov
ret
or
jge
xchg
inc
cmp
out
mov
cmp
scas
mov
leave
and
jo
hlt
pop
bound
addl
shl
in
jle
dec
sbb
lods
cmpsb
or
mov
jo
push
repz
mov
push
xor
add
adc
cmpsb
xchg
jne
pop
ret
xor
cli
mov
ds
or
xor
xchg
inc
push
idivl
std
shl
push
mov
add
sbb
or
xchg
sahf
std
push
and
xchg
out
stos
test
data16
sub
xchg
rorb
outsl
fsubr
lret
jp
jp
mov
roll
dec
sahf
or
push
add
inc
mov
add
aad
push
and
push
imul
popa
mov
pop
sub
in
fnstcw
pusha
sti
fildll
lods
in
or
hlt
pusha
fistl
pushf
enter
clc
fsqrt
ret
adc
fnsave
icebp
push
mov
in
or
jg
fsubs
push
gs
push
sub
jns
mov
call
cmp
notb
push
pop
sarb
and
xor
decb
lods
xchg
and
sub
cmpsl
pop
cmp
add
sti
mov
les
mov
in
dec
pop
and
stos
stos
jns
insb
jae
ficompl
and
sbbl
inc
bound
mov
inc
aaa
cli
ret
lret
pop
ror
fcompl
add
ss
or
jp
stos
cli
inc
gs
rcr
popf
aaa
and
stos
orb
push
or
inc
lea
push
scas
dec
cltd
mov
insb
mov
movsl
dec
pop
fcmove
popa
jbe
mov
adc
lret
aad
arpl
adc
inc
cs
add
leave
sub
xor
sbb
roll
or
fwait
pop
movsb
aam
test
lret
inc
mov
ret
fstp
add
sbb
mov
cmpl
push
pop
inc
aad
xor
xor
test
push
sub
add
outsl
mov
dec
adc
dec
add
push
pavgw
mov
lods
decb
push
lock
push
cmp
ror
mov
ret
sub
mov
stos
les
or
je
mov
test
lret
dec
movsl
fs
xchg
stos
repz
sar
dec
in
hlt
pushf
mov
inc
inc
loope
jl
cmp
rorl
mov
and
dec
pop
and
divb
fildl
aaa
aaa
aas
mov
xlat
sub
sbb
pop
and
insl
mov
push
mov
iret
out
in
scas
sahf
in
mov
stos
lods
outsb
jno
push
mov
mov
les
mov
fisttpll
jbe
push
std
mov
dec
cs
iret
pusha
inc
scas
pop
xchg
sti
dec
es
xchg
adc
in
xchg
addl
fldl
test
jbe
mov
mov
mov
mov
fisubl
into
std
test
xor
sti
aam
xor
cmpsl
pop
dec
jg
and
fstp
gs
lock
mov
mov
fdivrs
std
cmpsb
adc
adc
cli
pop
adc
cmp
push
int
aam
mov
sbb
bound
xchg
mov
mov
pusha
mov
ret
jae
fwait
inc
and
xchg
mov
and
pop
jae
aas
jbe
sub
outsb
push
sarb
dec
push
or
mov
xchg
mov
setl
push
add
dec
test
xchg
out
fs
sub
mov
and
mov
ret
xor
scas
jmp
ja
cmpsl
pop
loop
aaa
dec
fs
pushf
mov
mov
fbld
into
push
xor
mov
cwtl
and
mov
cmp
fwait
pop
inc
jmp
pop
lahf
cmp
adc
or
mov
pop
sbb
or
jge
add
cs
mov
push
cs
cmp
nop
fistps
inc
mull
mov
sahf
scas
dec
loopne
gs
or
test
add
gs
mov
pop
sarl
mov
adcb
test
icebp
aam
jae
dec
shlb
inc
ja
pop
popf
in
ljmp
inc
xchg
loopne
out
sbb
leave
ret
mov
mov
cli
mov
push
rolb
out
add
cmpsl
jge
xlat
add
xor
inc
sub
or
or
movsl
mov
outsb
in
iret
mov
sub
pop
mov
pop
out
sub
imul
jne
fwait
ret
xor
xchg
add
push
inc
xadd
movsl
ror
push
sbb
ret
xor
out
fadds
insb
push
xlat
push
cmpsl
in
dec
enter
outsl
mov
inc
cmp
std
lods
ficoml
loop
out
adc
mov
js
daa
mov
out
mov
scas
cmp
push
push
sahf
icebp
mov
or
add
jno
outsl
sahf
leave
ret
inc
inc
cmpsl
xchg
push
std
xchg
push
mov
xor
push
loopne
sbb
icebp
lcall
fs
ret
cmp
loop
dec
sub
xchg
adc
iret
mov
mov
popf
shrb
sbb
jge
mov
sbb
xchg
push
xor
mov
lods
xchg
pop
lahf
pushf
mov
mov
test
xchg
bt
dec
inc
aaa
shlb
xchg
imul
cld
jg
icebp
aad
jg
addr16
aad
pop
aas
mov
jg
fldt
ja
stos
or
lds
mov
pushf
shlb
push
lock
xchg
adc
xlat
insb
adc
xchg
data16
andb
mov
or
scas
out
cmp
dec
jbe
adc
std
nop
call
mov
scas
mov
lcall
inc
push
cmp
cmc
jbe
je
jno
aaa
mulb
icebp
scas
jle
sahf
clc
sbb
and
mov
fldenv
sbb
sub
cli
mov
add
stos
enter
fisubs
mov
enter
sbb
adc
lret
push
icebp
movsb
ss
and
frstor
inc
push
test
daa
and
mov
sbb
outsb
pop
stos
aad
push
jg
sarl
int
mov
fsubs
cmpl
cmp
adc
ret
pop
mov
jo
xchg
push
int
negl
xor
call
es
xchg
clc
xor
hlt
imul
faddl
cmp
jle
data16
pop
inc
xor
loope
cmpsb
sbb
push
push
xchg
loopne
adc
fdivr
xor
int3
push
adc
ret
out
and
ret
mov
inc
mov
rorl
xchg
jae
push
lods
dec
scas
mov
inc
lret
xchg
adc
test
movsl
roll
inc
mov
cs
and
rcll
push
jge
shll
push
jmp
push
mov
adc
jae
fldl
xor
call
push
pop
jl
fs
out
lcall
add
ret
ret
hlt
push
imul
std
push
mov
es
jge
push
stos
adc
jnp
or
ja
sar
mov
and
xchg
add
sub
cmpsl
add
loope
mov
leave
test
shll
inc
cmp
xor
push
popf
in
cmp
hlt
or
pop
int3
adc
lds
adc
sub
sub
dec
cmp
or
daa
shlb
sub
push
push
aas
push
mov
movsb
aas
fsubr
cltd
clc
mov
vpmacswd
jns
inc
xor
les
jp
sbb
push
dec
out
aad
fcoms
lea
xchg
mov
jb
scas
jo
inc
lcall
mov
or
xor
mov
subl
inc
mov
mov
mov
and
or
inc
lods
inc
pop
fwait
jno
mov
adc
lahf
mov
push
push
or
and
fidivs
imul
add
movsb
sub
and
aad
mov
stos
das
pop
inc
fists
in
or
push
insb
insl
mov
or
mov
call
mov
ljmp
into
stos
hlt
push
aas
call
add
mov
cmp
and
jg
movsb
mov
nop
mov
dec
insl
sub
sbb
stc
push
mov
ljmp
scas
dec
mov
cmpsl
popa
bound
das
mov
sub
push
pop
cmpsb
data16
andl
fstl
int
xchg
jge
xchg
or
shlb
iret
pusha
push
jno
dec
cmpsb
mov
or
scas
sub
mov
pop
aaa
sbb
jmp
push
sbb
inc
jb
jecxz
dec
dec
cmp
in
adc
xchg
xor
cmc
cmp
inc
cli
repz
inc
fwait
add
fyl2xp1
stos
arpl
pop
xor
enter
pop
xchg
ss
push
fs
ret
or
dec
lods
and
mov
pushf
pop
mov
and
lcall
adc
inc
imul
cmpl
sti
jle
pop
cltd
out
xor
dec
mov
mov
mov
jl
test
fcom
xchg
sub
aad
jnp
xor
or
out
lcall
xor
sbb
sbb
orb
loop
test
cmpsl
mov
and
imul
lds
cli
fsubrl
scas
push
or
mov
sub
imul
cmp
and
cli
scas
leave
imul
hlt
cltd
les
movsl
sbb
jmp
lcall
hlt
aad
xchg
sti
pop
or
pop
mov
or
pop
icebp
andl
inc
fs
js,pt
cmp
out
lcall
cmp
xchg
pop
and
or
adc
sbb
xchg
pushf
out
out
push
push
outsl
xchg
sub
lods
sbb
test
inc
outsb
test
mov
cli
lea
test
pop
pop
adc
push
les
in
sbb
jp
fdivrl
xor
lea
outsb
ret
and
sbb
pop
push
or
dec
shlb
in
push
rolb
add
pop
ret
adc
xacquire
pop
dec
add
jae
in
dec
ss
cli
les
xchg
sub
pop
sbb
jp
cmp
test
sbb
xchg
mov
out
sbbb
sbb
je
xor
rcr
mov
jl
pushf
inc
jae
sbb
rcrb
mov
xchg
or
pop
pop
or
pop
ret
mov
mov
mov
out
out
incl
adc
sub
icebp
in
pop
xor
push
in
mov
jge
loopne
icebp
mov
xorl
rcll
or
pop
or
mov
xor
jg
inc
pop
fs
sub
arpl
pop
pop
xchg
xor
lahf
xor
sbbl
mov
or
fdivrs
pop
out
mov
push
in
xchg
push
imul
cmp
and
ficoml
ret
out
dec
inc
or
fidivl
lds
rcll
in
cmp
mov
jmp
inc
or
repz
sub
mov
int3
loope
sub
pop
push
mov
arpl
hlt
aas
addb
aaa
stc
push
xchg
mov
mov
inc
mov
enter
mulb
test
shll
mov
ds
mov
sbb
rcrb
lret
add
daa
mov
in
add
std
imul
cmp
ja
lcall
mov
out
stos
jp
dec
and
jle
das
dec
mov
lret
pop
dec
jo
jae
xlat
fwait
and
sub
fisttpll
sub
loopne
popf
mov
inc
jp
pop
enter
mov
mov
push
hlt
inc
jle
push
cmpsl
sub
xor
movsl
std
jbe
fs
xchg
cmp
in
test
push
jo
insb
add
das
push
movb
inc
dec
rcrb
shlb
xor
jo
fiaddl
aam
adc
cmp
ja
pop
pop
imul
out
mov
aam
insl
xchg
inc
pop
test
cmc
mov
sub
jae
sahf
mov
or
into
xchg
dec
jle
out
jp
sub
sarb
cmc
jl
ljmp
lock
mov
dec
aaa
sti
pop
fsub
push
push
add
jbe
fdivs
sub
iret
movsb
int
dec
push
test
mov
call
hlt
in
pusha
cmp
imul
jecxz
and
mov
aam
mov
push
sahf
fstl
and
mov
roll
cs
shll
into
and
xchg
rep
test
fidivrl
imul
push
sub
orb
out
mov
cmp
jp
fbstp
int3
int3
mov
pop
push
sub
xchg
in
mov
sub
lcall
lea
mov
sbb
jp
lds
push
fisubrs
mov
push
outsb
fildl
adc
jo
rcll
addr16
data16
push
xchg
cltd
rorl
dec
frstor
shl
mov
inc
leave
je
pop
pusha
sub
test
push
jmp
or
rorb
sti
xchg
xorl
daa
imul
mov
dec
jp
xor
cmp
cs
xchg
push
ret
sub
cmp
outsb
test
cltd
movsb
aaa
imul
je
adc
lods
xchg
andl
out
fs
andb
sub
mov
pause
ja
jge
mulb
dec
sbb
loopne
mov
mov
inc
loopne
dec
stc
test
es
enter
push
cmc
ficoms
sahf
mov
mov
inc
call
jg
xchg
fiadds
shl
in
pusha
xlat
andb
es
push
stos
pusha
mov
xchg
test
jae
xchg
mov
lea
ret
sub
enter
inc
rcr
mov
jae
lcall
sahf
jge
addr16
sbb
dec
subl
in
adc
and
les
xor
fcomps
mov
pop
xchg
shr
stos
data16
add
fistpll
pop
outsb
mov
mov
sbb
add
imul
std
pop
decl
push
out
out
popf
scas
sub
pusha
or
mov
popf
das
loope
inc
aaa
fistl
mov
sbb
sbb
mov
insb
mov
sub
push
pop
jbe
jne
jnp
cmp
mov
popa
adcl
loop
jo
fsubl
jge
lock
jmp
mov
es
push
lcall
int
sbb
arpl
inc
xchg
mov
sub
scas
in
dec
inc
in
sbb
sub
dec
jl
or
das
xchg
cmp
jp
pop
mov
sub
jae
in
xor
inc
add
jmp
ret
stc
fldt
es
jne
and
sub
cmc
jbe
and
xor
adc
nop
jmp
ss
xchg
cs
mov
adc
decb
lahf
std
xchg
loop
or
pop
push
iret
cmc
mov
inc
jecxz
sbb
jne
in
mov
mov
test
int3
outsb
sbbl
movsl
je
add
mov
dec
fs
hlt
jbe
xchg
add
sti
cltd
xchg
ds
scas
popf
ljmp
mov
adc
xchg
inc
lea
cmp
clc
xchg
adc
mov
in
pop
lcall
arpl
ja
movl
cmp
pop
fmul
test
mov
mov
test
or
sahf
push
and
insb
loope
or
jno
fstpt
inc
fiadds
xchg
jl
cmp
dec
pop
jb
loop
sub
pop
mov
ficompl
dec
pusha
sbb
cmp
fiaddl
sub
jp
shlb
sbb
stc
mov
shrb
adc
pop
cmpsb
mov
dec
and
leave
pop
adc
jne
sub
lock
ss
ds
cmp
mov
fmul
sbb
add
lds
cli
xorl
shl
bound
loop
mov
cmp
jmp
mov
mov
mov
arpl
int3
jmp
clc
pop
into
sti
adc
xor
ja
xchg
sbb
inc
mov
rclb
je
adc
jle
dec
shrl
xor
aam
adc
in
jnp
add
xchg
out
lods
push
andl
pop
pop
fs
xchg
xchg
ret
mov
add
pushf
out
cmp
repz
xchg
data16
jbe
arpl
repz
push
cmpsb
int
adc
cwtl
shrl
lds
jp
icebp
mov
pusha
cmp
inc
xor
aaa
dec
mov
divl
enter
loop
fisubs
mov
jge
ds
loopne
inc
lock
bound
pop
roll
sub
jecxz
dec
pop
pusha
jmp
scas
ret
mov
xchg
jl
mov
out
add
clc
pop
test
imul
sub
testl
sarl
cmp
sahf
add
inc
scas
jae
jno
in
or
ljmp
jnp
stc
std
and
push
fldt
and
and
mov
sti
sbb
scas
test
lret
mov
jg
outsl
sbb
lock
push
out
xchg
aad
icebp
xchg
add
test
aad
hlt
adc
mov
lcall
xchg
add
cmpsl
xchg
push
test
icebp
divl
sub
or
cmp
movaps
mov
push
popf
pop
call
mov
sbb
cmp
rcrl
push
push
mov
js
into
jae
xchg
mov
rorb
cltd
in
ja
sahf
out
pop
jecxz
add
aaa
scas
xor
xor
jne
dec
cmp
rcr
adc
and
push
and
push
inc
lcall
jmp
idivl
flds
push
sbb
or
adc
sub
mull
add
stc
scas
jl
dec
mov
clc
or
or
inc
repnz
test
fstpl
mov
sahf
into
insb
popa
es
push
cld
sub
adc
sbb
cmpsl
mov
in
ja
popf
test
pop
jo
call
ljmp
push
sarb
aam
xorb
and
push
fiaddl
shl
jb
and
pop
mov
jge
movsb
addr16
int3
jae
xchg
sub
adc
cmp
xchg
aas
mov
idivl
cmovg
jle
sub
mov
aad
js
fcom
pop
les
mov
decl
outsb
xchg
sbb
iret
sub
xor
sub
fistl
popa
jecxz
pop
sti
inc
jmp
mov
sbb
cs
xor
or
in
or
xchg
mov
xchg
je
lods
add
adc
sub
loope
and
xchg
and
dec
pop
je
arpl
mov
hlt
push
fnstcw
aam
mov
inc
sbb
test
js
out
and
into
xchg
pop
insb
mulb
lcall
jno
sahf
dec
pushf
stc
mov
mov
out
mov
inc
cwtl
sbb
push
push
sbb
jo
mov
add
and
push
mov
cltd
cwtl
outsl
fisubrs
and
push
call
push
dec
mov
sahf
ficompl
fisttps
lcall
and
cmpsl
aaa
insl
mov
jle
xlat
repz
cmpsl
mov
pop
into
je
add
push
add
mov
stos
sbb
dec
popf
sub
push
xor
jl
push
aam
sbb
add
xor
lock
nop
push
rcr
int3
pop
in
mov
fdivp
push
or
mov
scas
bound
sahf
jmp
push
dec
dec
or
xor
rcrl
cmp
lahf
out
mov
sub
mov
mov
mov
or
pop
push
out
std
jecxz
sar
rcrb
jl
xor
fstpt
or
sar
xlat
test
out
lea
and
popa
lods
fimull
stos
xchg
out
mov
cmp
std
lock
in
test
lret
rol
mov
nop
negb
les
cwtl
cmc
lods
or
shlb
test
or
icebp
sbb
cmp
imul
pop
sbb
out
xchg
jnp
cmpsl
pop
xor
mov
das
mov
xor
xchg
mov
adc
ljmp
cmpsl
arpl
push
test
inc
dec
adc
insl
xchg
test
add
popf
ss
mov
or
cmpsl
mov
stc
repz
call
and
lahf
movsl
call
cmp
mov
daa
inc
jnp
mov
fwait
sbb
fld
sbb
xor
dec
shlb
cmpsl
cmp
mov
in
fadds
xchg
adc
jle
mov
int
test
add
cli
xor
jp
or
mov
pop
cmp
inc
jp
mov
mov
imul
shlb
jb
fcmovnu
lods
lret
xor
push
push
iret
pop
jecxz
push
icebp
gs
out
fsub
fsubl
pop
xor
lret
dec
sub
jl
repz
mov
arpl
cmp
lret
cmp
mov
ss
or
stos
and
sbb
mov
dec
repnz
pop
out
sub
fisttpl
mov
and
lahf
lret
xor
pop
addr16
xchg
jmp
xchg
int3
pushf
sub
movsb
cmp
movsl
push
cmpsb
ljmp
nop
xchg
or
sbb
mov
pop
orl
push
add
sbb
nop
jmp
jnp
xor
xor
and
xor
sbbb
int3
pusha
cli
cmp
add
sub
add
pcmpgtb
icebp
dec
sbb
ja
pop
xor
rorb
pop
and
test
pop
mov
inc
xchg
dec
addl
sub
xor
pop
rcrb
mov
push
mov
divl
xor
cltd
or
xchg
es
test
gs
pop
ds
or
ljmp
fs
das
jb
std
mov
jns
xor
lock
clc
xchg
push
mov
sti
addr16
icebp
push
sarb
pusha
mov
jnp
mov
fimuls
pand
mov
imul
stos
xlat
xor
cmp
inc
mov
cmp
add
outsl
and
insb
xor
imul
jae
insl
adc
scas
xchg
inc
loop
cmpsl
es
in
mov
fwait
sbb
cmp
mov
insl
addr16
mov
das
xchg
mov
jno
push
lods
pop
daa
dec
das
sbb
dec
and
leave
sahf
test
adc
movsb
enter
pop
sbb
test
xor
push
into
fcompl
jns
xchg
ja
mov
add
stos
int3
stos
and
roll
cmp
fsubrl
fstl
jmp
sub
aaa
mov
cltd
icebp
out
jl
adc
mov
cmp
pop
xor
dec
pop
sbb
mov
cmp
ds
sahf
bound
out
outsl
adc
or
cmp
push
push
adc
sar
cmp
xchg
sahf
mov
cmp
div
adc
out
jae
cmpsl
pop
mov
push
push
push
ljmp
fcmovnb
push
pop
adc
fsubrs
adc
rcrl
xor
pop
xchg
pop
jecxz
ja
push
test
in
sub
fwait
imul
fwait
push
push
or
cmpsl
rolb
pop
inc
icebp
call
sbb
adc
inc
mov
cwtl
adc
call
mov
fdivrl
mov
adc
lds
nop
and
jp
fsubrs
shrl
int3
mov
pusha
xchg
jae
ret
aas
push
sbb
in
dec
sub
xor
add
call
aaa
aaa
jne
subl
test
sub
gs
daa
repnz
std
fidivrs
or
lcall
mov
and
or
cmpsb
idivl
jle
push
pop
jbe
sti
adcl
rcr
pop
push
add
inc
pop
and
push
fildl
mov
aam
sti
cmp
frstor
cmp
outsl
pop
mov
pop
sub
pop
push
iret
mov
pop
shlb
das
sbb
popa
ret
stos
push
out
fdivrl
je
lods
pop
test
inc
add
sar
sub
fmuls
popf
push
movsb
and
mov
pushf
and
xor
dec
into
pop
das
arpl
xor
mov
out
es
inc
loopne
stos
pop
mov
mov
jp
adc
or
dec
cmp
sti
and
iret
lea
in
psllw
lcall
das
inc
jno
xor
pop
sub
aam
data16
jg
cmpl
int
sub
dec
jmp
cmpsb
ja
sub
fnstsw
insb
lahf
push
inc
test
ss
daa
fidivl
cmpsl
dec
ljmp
lcall
pop
hlt
das
dec
cmpsw
inc
fs
jne
add
sahf
insb
adc
enter
jecxz
mov
add
mov
push
aad
lret
add
lahf
cltd
xor
shll
dec
mov
or
inc
or
repz
filds
fildll
jb
iret
stc
and
ds
cmp
cltd
jmp
push
rcl
pushw
ljmp
mov
movsl
roll
int3
or
rol
outsb
roll
mov
mov
pop
lahf
aas
std
test
mov
jno
mov
add
shll
rol
enter
sub
dec
and
notb
xor
pushf
cmpsl
mov
cmp
loope
sub
movsl
stos
or
cwtl
aas
pushf
sti
add
imul
addr16
int3
dec
adc
popf
push
jb
cmp
popa
dec
addr16
sbb
fsubl
adc
or
sbbb
outsl
fwait
cmp
jbe
xchg
clc
mov
push
call
call
add
sbb
cmp
add
testl
pop
aam
xchg
es
inc
xor
push
mov
adc
addr16
or
cwtl
push
dec
cmp
ds
out
mov
and
test
mov
jnp
sub
and
sub
and
fs
das
nop
dec
adc
out
fs
popf
inc
push
aad
xchg
ds
ret
adc
mov
xor
pusha
inc
sar
int
movsb
push
xchg
cltd
test
cmc
aaa
jno
repz
scas
dec
test
pop
add
mov
stc
xor
cs
lds
and
jg
icebp
iret
cmp
mov
mov
js
testb
aad
pusha
clc
aad
sub
stos
bound
repnz
hlt
mov
jg
hlt
mov
rorl
mov
stos
push
in
push
loope
rcrb
lret
push
or
fabs
mov
dec
imul
xchg
pop
mov
lds
std
add
lahf
cmpsl
out
adc
pop
jnp
or
add
push
ret
stc
pop
xchg
sub
rolb
rclb
imul
pushf
sub
jo
pop
test
movsb
inc
sub
leave
add
xor
mov
test
aas
mov
mov
mov
xchg
enter
popa
xchg
push
and
mov
adc
stos
push
test
gs
arpl
push
pop
push
jl
in
stos
push
sahf
fadd
push
add
mov
scas
sahf
ds
jle
aas
sbb
adc
mov
push
out
adc
mov
cmp
mov
pop
jb
push
jmp
adc
popa
hlt
stos
je
mov
das
jae
lds
sub
cmp
and
stos
ret
push
push
push
fcmovnu
push
divb
or
push
adc
leave
sub
push
push
rclb
jmp
cs
fs
test
je
xchg
jp
in
dec
add
fsub
mov
dec
dec
jmp
mov
inc
cltd
adc
cmp
jne
js
pushf
mov
push
lcall
jle
loope
push
xor
int3
add
lds
and
sbbl
sub
lods
aaa
lret
outsl
fisubrl
or
sbb
shl
inc
xchg
cltd
andl
sbb
add
fdivl
fsts
sub
and
inc
sbb
xchg
outsl
movsb
mov
fbld
xorl
mov
xor
fsts
jl
pop
jp
sbb
cmp
mov
loop
aam
sub
or
int3
push
in
in
enter
out
enter
mov
or
fildl
ljmp
xor
in
xor
pop
mov
mov
or
xor
and
mov
shrb
and
jne
sar
pusha
inc
loope
cli
shl
and
inc
pop
pushf
jb
pop
push
orl
stc
leave
cmp
mov
pop
ret
jns
push
into
sahf
jle
mov
ficomps
jge
push
lcall
movsb
dec
xor
mov
fnstcw
fstl
aad
sbb
das
popa
cld
leave
sub
ret
jnp
push
inc
mov
loope
inc
stos
inc
mov
sbb
mov
cltd
dec
imul
pop
hlt
les
mov
push
push
and
fcomp
dec
inc
xor
sbb
fldt
out
out
push
lret
pop
call
xchg
in
or
test
aas
mov
dec
hlt
mov
xor
ficompl
sbb
shufps
mov
cltd
lret
xor
dec
or
mov
ds
cwtl
in
adc
insl
insl
pop
fistl
fcoms
push
addb
push
lret
mov
and
inc
fcmovne
and
mov
mov
mov
mov
mov
icebp
mov
imul
push
ret
lret
jl
sahf
pop
push
jae
push
subb
sbb
and
outsl
nop
outsb
sbb
cltd
adc
jno
outsl
icebp
adc
fldt
ret
xchg
fwait
jno
imul
outsb
sub
dec
out
std
mov
add
loopne
jne
int
mov
pop
arpl
movsb
sbb
aam
outsl
and
mov
cmpb
lret
dec
daa
jmp
lock
enter
xor
xor
xor
je
inc
cmpsl
outsb
aad
popa
sub
addr16
mov
mov
in
push
inc
ds
xchg
subl
lahf
loopne
jbe
daa
xchg
loope
jbe
mov
test
dec
call
cli
andb
pushf
ror
jbe
mov
xor
rorl
cmp
fists
lea
shr
xor
xchg
enter
int3
cld
mov
sbb
lods
pop
or
and
lcall
in
inc
mov
movsl
dec
sub
mov
loopne
or
adc
sub
push
and
fimull
imul
mov
pop
push
clc
stos
inc
mov
jp
in
ds
jecxz
mov
nop
js
add
jns
sub
mov
mov
dec
push
je
adc
lret
pop
mov
incb
pop
xchg
mov
imul
movsl
xchg
scas
hlt
push
jmp
clc
arpl
push
mov
fcompl
push
aas
inc
and
push
xchg
ret
les
loopne
in
stos
or
mov
sbb
sub
lods
sub
mov
lret
adc
inc
dec
or
stc
mov
popf
cld
mov
stos
adc
add
sub
iret
xlat
cld
adc
pop
das
sti
mov
sbb
test
inc
gs
ss
iret
scas
push
fdivrs
xchg
jle
ret
psubw
jp
push
mov
lret
icebp
xchg
test
pop
mov
cmpsl
inc
adc
les
sarl
push
pop
mov
mov
lods
xchg
mov
push
testl
add
xor
lock
adc
mov
out
lds
fistpll
adc
pop
xor
or
insl
repz
sbb
mov
xlat
pop
sbb
jns
insl
mov
je
add
stc
pop
jns
ret
lcall
dec
push
sub
comiss
test
int
pushl
jp
xor
sub
mov
adc
mov
mov
sub
xchg
cmpb
gs
pop
enter
mov
push
ss
mov
loopne
mov
push
or
dec
or
mov
lea
neg
sbb
mov
inc
pop
mov
xchg
push
orl
lods
cmp
add
push
mov
lods
cmp
xchg
xor
sub
or
cli
sbb
repz
dec
mov
xchg
push
dec
sub
lods
add
xchg
mov
leave
add
arpl
cmc
mov
into
ficoms
lret
pop
fsubr
lcall
push
pop
mov
pop
inc
mov
or
dec
cmpb
sarl
outsb
push
test
call
cmp
sub
out
lods
xor
jge
push
icebp
imul
shrb
scas
leave
inc
out
xchg
adc
dec
jecxz
sbb
imul
add
and
mov
cwtl
negl
mov
push
cmp
dec
arpl
cmp
fcoms
dec
or
inc
mov
lds
add
pmuludq
aad
nop
sub
arpl
or
or
sbb
and
xchg
mov
test
rcr
cwtl
mov
inc
mov
jle
loope
pop
popa
fprem1
push
xor
sahf
add
cli
sub
fsubl
clc
inc
repz
xor
dec
jg
cmp
les
movsl
popf
shrb
imul
cmc
pop
mov
xchg
in
add
test
leave
push
test
inc
add
test
sbb
sub
pop
stos
xchg
pop
adc
mov
aam
push
jo
pushf
leave
dec
or
push
sbb
cld
je
jg
movsl
outsl
into
sbb
out
cmp
jg
insb
inc
and
inc
jo
pop
sbb
inc
pop
lock
jl
scas
sub
lcall
jmp
js
xor
lods
push
icebp
sbb
mov
mov
ret
div
cmp
nop
out
rolb
pop
push
dec
mov
jns
mov
jecxz
imul
pop
sbb
adc
sub
jl
lret
xchg
or
mov
dec
cs
push
or
std
lret
adc
dec
dec
add
jmp
lds
mov
mov
sbb
int
push
loope
mov
pop
stos
fdivr
jmp
insl
inc
fdivl
adc
cmpsl
dec
insl
push
xchg
sbb
popf
clc
into
mov
mov
push
jnp
xor
in
aas
fcoml
jl
jp
or
fwait
loopne
je
cwtl
jle
fneni(8087
js
ljmp
and
outsl
xchg
and
icebp
jg
rorb
loope
cmpsl
jl
sbb
movsb
push
xchg
out
dec
or
mov
outsb
in
sbbl
mov
pushf
out
out
test
int
jnp
daa
mov
jae,pn
push
push
out
cmp
mov
inc
jl
xchg
sbb
pushf
and
dec
mov
pop
into
popf
inc
cmp
and
push
sti
inc
mov
fsts
leave
hlt
rcrb
loope
jo
dec
repnz
pop
sbb
inc
xor
dec
jno
lcall
cli
outsb
or
ss
nop
repz
clc
idivb
cltd
lahf
loope
mov
aaa
movsb
xor
or
es
mov
push
in
inc
add
inc
fcomps
jae
scas
dec
iret
push
dec
sbb
dec
dec
xor
mov
jns
mov
popf
mov
xor
push
jae
and
mov
cmp
sarb
jns
dec
push
lods
repz
movl
cmpb
jno
loop
ret
dec
enter
jbe
inc
xor
sub
idiv
sbb
scas
xchg
ja
push
pop
ss
mov
xor
leave
mov
insb
lahf
out
xchg
aam
mov
push
adc
sbb
cmc
scas
lea
inc
out
data16
mov
lret
sti
ficompl
loope
in
imul
push
in
mov
xor
cmp
dec
add
addr16
rcrl
xor
pop
mov
shll
sbb
pop
and
adc
mov
push
jmp
aad
test
shrl
add
sub
adc
repz
and
loope
movsb
ljmp
lea
pop
dec
pushfw
sub
insb
mov
xchg
xchg
inc
push
mov
xor
shlb
pop
nop
or
inc
mov
mov
rolb
iret
cmp
cli
and
ffree
into
mov
jbe
xchg
add
sarb
repz
mov
inc
sub
sub
pushf
das
mov
sub
sub
fdivrl
loop
jne
xor
push
push
inc
inc
aas
jae
aas
insl
nop
insb
or
das
in
sub
pop
jl
cmc
mov
lahf
enter
push
fnstsw
push
and
dec
or
jae
ret
pop
dec
add
jmp
jnp
pop
push
sbb
push
pusha
aam
pop
and
sub
sahf
xor
ret
push
mov
stc
cmp
loopne
or
lret
mov
aad
push
push
int3
inc
popa
or
or
ljmp
pop
mov
test
push
push
bound
in
daa
loopne
sti
adc
fistps
idivl
icebp
and
fdivs
inc
mov
ret
shrb
lds
push
fidivl
mov
div
ds
out
lahf
cmp
stc
fistpl
out
adc
and
ret
loope
mov
lret
xor
ret
jle
push
or
dec
or
rcrl
ljmp
data16
add
xchg
in
mov
mov
inc
jns
add
mov
xchg
dec
lea
in
bound
cmp
pop
je
add
sub
mov
test
rcll
push
in
fcoml
cmp
dec
iret
notb
inc
cwtl
mov
mov
xor
dec
ss
aam
mov
push
loope
jp
dec
sub
movsl
xchg
mov
pop
loopne
xchg
pushf
int3
add
and
lahf
in
xchg
add
pop
std
cwtl
fstpl
jle
in
lea
xor
inc
mov
or
inc
xor
mov
in
ss
adc
out
jae
mov
mov
scas
sbb
cmp
cltd
or
mov
scas
xchg
sbb
int
dec
int
lods
xchg
sahf
xchg
push
cmp
or
adc
enter
mov
setb
push
cmc
mov
xchg
pop
jg
subl
jns
inc
push
push
or
cltd
mov
xor
lds
aad
adc
popa
mov
popa
nop
out
std
pushf
adc
lcall
stos
sub
aam
mov
iret
inc
sbb
int3
orb
inc
je
jg
in
jp
mov
add
std
ret
popl
jp
hlt
xor
ret
ret
sub
jbe
adc
outsl
loop
jnp
lea
mov
outsl
jae
inc
fcoml
es
push
shlb
push
repz
cs
mov
inc
cmp
xchg
insb
inc
dec
gs
inc
blsic
fsubr
add
add
nop
into
fildll
out
in
std
test
xchg
lret
loop
add
lea
pop
dec
mov
adc
cli
stos
shlb
fwait
xor
and
iret
pop
adc
sub
xor
fidivs
lods
push
mov
push
jp
cmp
sub
mov
ja
fisttps
in
mov
and
mul
pop
lods
xchg
lret
lods
mov
scas
lods
nop
add
mov
jmp
add
lahf
pop
jecxz
push
jnp
imul
fldcw
dec
lcall
sbb
inc
sub
cmp
adc
scas
add
dec
mov
mov
sbb
push
push
pop
pop
dec
pop
jl
jl
in
test
push
sbb
dec
aam
xchg
movsb
dec
ficompl
pop
mov
inc
and
in
scas
stos
int
sbb
sbb
xchg
jo
dec
xchg
push
scas
fidivrs
scas
bnd
and
mov
cld
sub
test
das
cmpsl
xor
cmp
xchg
scas
xtest
in
mov
das
xchg
pop
sub
stc
jge
ljmp
jne
sbb
sbb
shlb
jmp
dec
push
push
add
cli
sub
push
movsb
add
inc
cli
in
xchg
fisttpl
mov
adc
faddl
daa
mov
jp
push
addl
inc
xchg
cmp
fidivrl
movsl
daa
test
enter
fwait
ja
and
pop
cltd
addb
fsubl
xor
jnp
fxch
adc
sub
addr16
mov
xor
lods
test
mov
sub
sar
sbb
popf
rcrl
arpl
test
jns
int
scas
test
clc
mov
sbb
fdecstp
je
in
fistps
xor
add
dec
pop
int3
lcall
and
add
xor
sub
add
call
cmpsb
push
mov
pop
jp
lds
push
add
je
add
cmc
js
cld
mov
or
push
or
popf
mov
xor
out
mov
nop
mov
sub
fildl
mov
leave
pop
into
pop
jle
repnz
mov
movsb
pop
push
jae
and
sbb
mov
push
int3
sbb
andb
fwait
xrelease
iret
ret
ficoml
cs
inc
lds
sahf
shrl
and
test
mov
sbb
dec
in
out
inc
push
add
cld
inc
js
and
js
cmp
clc
xor
push
adc
int
xor
sub
inc
xchg
fdivp
jge
mov
push
add
adc
or
push
jae
and
dec
mulps
dec
sub
sbb
lahf
pop
mov
or
xchg
in
fidivs
icebp
imul
sub
dec
cmc
pop
push
jmp
mov
icebp
mov
lahf
pop
jno
loopne
mov
add
int
cli
insb
or
arpl
pop
jns
ljmp
jb
lret
out
arpl
push
in
das
mov
fsubrp
xor
sub
cmp
loope
cmc
add
or
sti
cld
js
call
pop
mov
fldenv
adc
and
in
repz
pop
xor
aam
mov
dec
stos
xor
sbb
cltd
movsb
pop
dec
mulb
jecxz
cld
adc
adc
adc
leave
roll
cmc
rolb
cld
cmpsl
out
push
daa
jb
xchg
les
push
in
scas
jp
andl
out
ljmp
stos
ror
repnz
adc
lret
bnd
sub
andb
push
pop
and
dec
mov
push
scas
hlt
or
mov
adc
out
and
xchg
dec
sbb
jae
jb
jp
stos
arpl
push
stos
int
dec
std
clc
aad
das
mul
and
sbb
inc
je
mov
or
fwait
push
into
adcl
out
test
aaa
hlt
lcall
addl
inc
incl
cld
mov
pop
in
rorb
dec
aaa
dec
outsl
into
dec
mov
sbb
lret
add
sub
adc
into
imul
out
mov
gs
nop
lahf
rcrb
inc
and
pop
mov
jp
pop
fadds
jno
mov
je
push
enter
mov
mov
rcl
in
cli
push
fsts
or
cld
dec
cmp
pusha
repz
push
popf
lods
dec
pop
xor
push
mov
add
mov
js
xchg
lds
sbb
xor
pop
popl
std
add
mov
je
sbb
sbb
xor
sub
sub
push
sbb
push
push
test
sahf
mov
push
lcall
jno
std
mov
mov
fnsave
andb
pusha
lods
fildl
das
roll
clc
dec
or
scas
push
lcall
cmp
or
scas
mov
push
ja
fildll
lds
push
xorb
jae
jecxz
jl
mov
xchg
jle
rorl
repnz
pop
call
push
or
jp,pn
sub
mov
shrb
addr16
insl
repz
fmull
outsl
push
sahf
popf
push
call
lret
xor
cli
inc
lods
add
sbb
rol
pop
lcall
das
cmpsb
mov
ss
leave
pop
mov
adc
cmp
add
stos
iret
aas
je
lahf
ret
push
cmp
aaa
negb
popf
push
xchg
and
subl
pop
aas
push
idivl
ffree
shrl
dec
insl
js
lods
mov
adc
and
shrl
mov
and
jge
jl
clc
and
test
sbb
mov
push
cmpsl
dec
outsl
or
mov
aaa
lret
push
adc
sub
add
pusha
scas
dec
push
xor
mov
mov
js
mov
pop
orb
fs
sbb
sub
jo
imul
hlt
cmp
lea
cs
lock
xchg
repz
adc
xchg
loopne
or
iret
cmc
stc
dec
rolb
pop
pop
test
iret
mov
out
lds
add
int3
divb
ret
jg
cmpsl
data16
jbe
pop
int
aam
dec
repnz
mov
inc
push
mov
inc
xor
xor
xor
xchg
repnz
sarb
add
lods
cmp
pop
push
inc
aaa
repz
ljmp
mov
arpl
fdivl
aam
and
loopne
jno
dec
adc
ret
xor
int3
push
inc
stos
outsl
pop
in
mov
push
push
or
mov
mov
sbb
sub
sbbb
lahf
int3
inc
int
mov
dec
adc
xchg
mov
fisubrs
popa
lds
sub
fadd
shr
movsl
into
test
nop
outsl
adc
mov
cld
jg
popa
les
mov
das
jbe
popa
add
jmp
and
sbb
fisubl
test
cmp
stc
out
jno
cmc
ss
fdivl
pop
pop
add
pop
in
lahf
mov
mov
sub
inc
ja
outsb
mov
dec
and
out
test
cmp
mov
or
and
jne
daa
xor
inc
adc
adc
lods
imul
push
dec
das
mov
sub
orb
cld
hlt
xchg
sarb
mov
ret
pop
fs
inc
je
mov
popf
ss
jge
outsb
imul
test
mov
faddl
cmp
and
rcrl
jge
mov
dec
loop
push
loop
inc
iret
sub
aas
lret
rcrl
push
dec
add
iret
xchg
repz
gs
or
out
int3
adc
adc
mov
les
jmp
jbe
jne
pushf
cmpsl
mov
mov
xchg
out
addb
inc
cld
mov
out
jb
fsubrp
std
xchg
dec
add
pop
xchg
push
hlt
cltd
pop
out
movsl
or
int3
lahf
ficompl
pusha
jae
shr
loopne
jbe
mov
les
pop
and
ljmp
adc
inc
mov
jo
sbb
dec
mov
leave
xchg
movsl
cli
dec
addb
arpl
fadds
movsb
mov
filds
jno
cmpsl
sub
lret
mov
push
fmul
dec
jp
cmp
arpl
add
mov
cli
push
loope
lock
imul
adc
sbb
outsl
mov
inc
ss
jns
sub
ds
movsl
fists
lods
inc
mov
cmc
push
push
add
push
cli
enter
ss
bnd
mov
add
or
rcll
and
jb
stos
std
fscale
xchg
and
dec
ss
movsl
orl
call
sbb
dec
adc
dec
repz
lahf
dec
pop
aam
mov
or
push
ret
lock
aas
pop
push
notl
mov
adc
jno
pop
int
fidivrs
push
enter
cmp
cli
aam
sbbl
mov
out
loop
int
fdivp
in
imul
and
fiadds
sti
mov
aaa
adc
inc
and
jbe
lea
ds
repnz
cld
sbb
mov
cmp
jle
jg
leave
jg
cmp
addr16
sbb
int3
sub
mov
into
sbb
xchg
outsl
mov
jg
test
das
stos
imul
xchg
pop
add
and
sbb
insl
fld
mov
add
mov
mov
push
ret
sub
xorb
xchg
int3
test
das
rcll
popf
push
dec
arpl
add
push
xor
jnp
stos
jbe
movnti
sbb
arpl
sti
movsb
repz
pusha
xor
mov
or
inc
sahf
hlt
mov
insb
cld
es
out
pop
imul
stos
fcomps
das
mov
outsl
sbb
and
push
or
sbb
cmpsl
fdivrs
add
xor
sarl
repz
cmp
xor
jo
test
rcrb
xor
pop
mov
mov
ror
jle
dec
or
movsl
jnp
xchg
or
fsubs
mov
mov
shlb
ss
ds
cmp
pop
movsl
scas
fisttps
cs
in
fildll
sbb
stc
inc
sbb
push
mov
lret
jne
dec
mov
adcb
imul
scas
adc
outsl
jmp
sub
inc
pop
jmp
shll
jge
lret
int3
mov
shrl
xchg
inc
dec
pop
in
mov
cmpl
or
stos
pusha
or
popa
enter
loope
out
or
pop
pop
pop
aam
push
nop
lret
fisttps
or
test
sbb
adc
mov
add
or
cltd
ror
mov
or
sub
in
in
invd
test
test
mov
clc
stc
insl
cmpsl
cmpsl
lret
inc
cwtl
in
out
jae
leave
xchg
aas
sbb
clc
xchg
mov
cltd
out
leave
lret
mov
inc
or
mov
es
xchg
push
dec
push
jo
movsb
in
das
out
xchg
mov
mov
dec
pusha
out
std
test
push
stos
xchg
pop
iret
xchg
cmp
inc
push
fisttpll
sub
inc
leave
bound
xlat
pop
outsl
xchg
sub
je
mov
push
insb
cmp
add
jbe
scas
jno
push
out
fdivs
les
fisubrl
and
push
jo
rorl
pop
xchg
adc
pop
xor
inc
daa
stos
fnstcw
mov
push
lret
jbe
nop
flds
mov
dec
dec
ret
ljmp
ljmp
jecxz
pop
mov
push
mov
call
xor
cmp
mov
addr16
out
loopne
mov
out
cmp
sbb
hlt
jae
stos
sti
movsb
or
xor
test
or
inc
or
mov
int3
fistl
push
xor
stos
cmp
leave
pop
adc
inc
loope
dec
mov
mov
dec
mov
cmpsl
adc
mov
fcompl
std
cmp
xchg
fiadds
in
aam
mov
test
sahf
je
aad
sbb
faddl
add
xor
pop
fidivrl
lock
test
test
pop
push
mov
fcomip
jne
loop
call
iret
jg
gs
push
mulb
in
ret
mov
fcomps
insl
adc
jnp
into
sub
xchg
nop
jo
ljmp
lcall
jle
jnp
mov
jecxz
mov
aad
aad
nop
imul
popf
jge
ret
int3
ljmp
shlb
sbb
fdivrl
fidivs
inc
sarb
adc
out
sub
enter
fnstcw
or
and
jle
lods
jb
call
adc
cmpsb
std
and
fdivr
pushf
notb
sbb
mov
inc
enter
inc
dec
adc
notb
mov
fsubl
test
imul
jmp
xlat
ret
int
test
and
iret
push
jnp
in
sahf
dec
dec
nop
sarb
xor
fstps
cli
jl
mov
sbb
xor
aas
gs
push
adc
out
jb
xchg
sub
test
outsb
ret
xchg
sti
addr16
or
jae
scas
pushf
adc
insl
add
and
sbb
pop
and
fdivrl
mov
scas
jg
jne
xchg
gs
aad
sahf
add
add
int3
jae
add
sarl
jg
addb
loope
fcoms
test
adc
sbb
and
shl
in
aam
add
push
lods
dec
jmp
cs
mov
mov
data16
mov
pop
lock
int
cltd
pop
jmp
aam
jecxz
ficompl
shr
xchg
xor
jns
loope
mov
repnz
jp
dec
mov
loope
mov
rclb
pop
jg
dec
jb
inc
push
fs
bound
ret
scas
outsl
mov
push
pop
jl
addr16
out
jecxz
cli
js
cli
cmp
adc
add
sbb
loopne
mov
es
sub
mov
ret
push
popa
outsb
movsl
lcall
dec
adc
ds
loope
stos
cmc
and
mov
xchg
mov
bound
jmp
inc
or
loopne
add
push
cmpsl
mov
mov
fsts
and
jp
jg
scas
movsb
sarl
jo
dec
test
sti
sub
sub
aad
pushf
xlat
sbb
or
leave
fisubrs
push
pop
jle
hlt
dec
or
inc
xchg
jge
cmp
cmp
popa
stos
sbb
inc
adc
sbb
fcompp
dec
mov
jns
inc
iret
shrl
aam
aam
adc
sub
scas
mov
fsubs
mov
adc
cmpsb
pop
ljmp
mov
cmp
adc
and
dec
bound
adc
les
xor
mov
lods
aad
arpl
cmp
push
dec
and
cltd
stos
or
loopne
jecxz
push
xchg
loope
ja
push
mov
push
add
sti
sub
clc
push
outsb
and
imul
in
ret
jle
addr16
loopne
shrb
xor
iret
mov
sbb
ss
push
lcall
out
stos
push
xor
push
mov
xor
js
cmpsb
ds
mov
cmp
adc
enter
xor
and
ljmp
pop
sahf
mov
out
inc
jnp
bound
sub
pop
mov
mov
jp
push
dec
xor
mov
push
mov
incb
or
sub
loopne
jb
xchg
out
icebp
xchg
addr16
xor
jle
push
sub
clc
jl
cs
divb
push
add
cmp
scas
ds
cmp
inc
adc
adc
mov
clc
cltd
ljmp
cmp
xor
fwait
loop
adc
sbb
dec
aad
mov
pop
in
icebp
mov
adc
xor
sbb
ror
pusha
test
stc
adc
jle
push
shll
repz
sub
cmc
addl
pop
stc
stos
mov
cwtl
das
mov
mov
scas
mov
mov
shlb
cmpsl
gs
pusha
dec
and
inc
pop
mov
shll
movsl
xlat
fsubrp
sub
fisubrs
cmp
sbb
daa
mov
xchg
and
mov
sbb
or
mov
cmp
cmp
jmp
xchg
pushf
xchg
shrl
outsb
pop
mov
loopne
lods
xor
add
stc
movsb
lock
add
mov
mov
pusha
xchg
ds
lods
pop
cmpxchg
fs
xor
mov
negb
mov
addr16
setp
cmpsl
cmc
cmpsb
xchg
sbb
pop
mov
dec
sbb
ja
xor
add
adc
loopne
sahf
mov
and
adc
xor
push
aaa
sbbl
fstpt
mov
jo
movsb
in
movsl
inc
js
adc
lods
inc
leave
iret
cmp
or
pop
sahf
divb
pop
outsb
cwtl
sbb
scas
mov
je
pop
mov
aas
fwait
gs
pop
cmp
adcl
inc
adc
addr16
push
pop
jecxz
dec
dec
mov
out
mov
clc
mov
adc
dec
push
int3
fcomps
adc
test
mov
subl
adcb
cmpsb
movsl
and
add
jmp
mov
rcl
shrb
dec
out
ficompl
out
cli
ljmp
xor
mov
test
jmp
bts
in
dec
jp
iret
adc
addr16
fmull
mov
mov
out
sub
das
sbb
cmpsb
scas
jg
jecxz
int3
mov
sti
in
lahf
outsb
adc
pop
imul
inc
sub
mov
sub
fcmovnb
add
jne
inc
sub
loop
xchg
adc
dec
push
mov
leave
frstor
and
push
adc
in
push
push
push
or
sbbl
aad
loope
inc
mov
inc
adc
subl
inc
and
lock
pop
les
shll
push
mov
or
jp
mov
mov
add
hlt
add
aas
iret
es
popl
sarb
in
jae
data16
repz
cmpsb
push
inc
mov
sub
sbb
add
stos
fistl
js
pop
in
xchg
inc
loopne
add
inc
xchg
popa
loope
lods
lcall
xchg
cwtl
out
aaa
xchg
mov
clc
gs
mov
inc
or
gs
mov
mov
add
shl
div
outsl
sub
popf
mov
pop
data16
mov
inc
jge
sbb
out
push
loop
orl
sbb
cli
inc
and
test
loope
bound
shll
or
cmp
ds
push
jp
pushf
mov
loopne
or
pop
sub
mov
adc
je
loope
jns
xchg
add
out
mov
add
mov
les
stc
stos
sub
xor
or
add
inc
pop
movsb
inc
scas
jb
push
fadd
add
shrl
mov
adc
mov
dec
fwait
sub
out
pop
mov
repz
js
dec
push
jno
je
cmpsb
enter
gs
adc
add
stc
mov
sahf
pop
sub
sbb
xlat
ja
and
push
push
andb
stos
xchg
xor
out
or
lcall
cli
mov
pop
mov
jp
sbb
mov
lcall
add
shr
fbstp
mov
fidivrs
es
sbb
sarb
out
xchg
nop
and
sub
out
pop
mov
mov
imul
setge
mov
pop
std
mov
sbb
inc
or
sub
pop
or
les
clc
lahf
mov
int
ljmp
outsl
loop
jge
xor
sbbb
sbb
sbb
dec
lods
pop
push
insl
ret
push
cmp
add
add
pop
mov
in
push
shl
aaa
fnstenv
test
lret
pop
add
pushf
jg
and
pop
fstps
dec
push
mov
sti
mov
xor
mov
pop
out
mov
xchg
xchg
sub
sbb
jnp
or
int3
dec
insb
dec
test
jo
cmp
push
push
xchg
fimull
cmpl
xor
mov
int
push
jb
gs
movsl
xchg
sub
nop
enter
sbb
fndisi(8087
pushf
add
and
or
mov
mov
mov
xchg
movl
cmp
xor
mov
leave
lahf
xchg
in
stos
jne
xchg
jecxz
and
es
popf
arpl
cwtl
lea
push
add
add
fwait
jno
inc
insb
add
mov
bound
pop
shl
call
dec
cmp
mov
sub
push
mov
in
insl
das
mov
mov
cmp
sbbl
jmp
push
mov
xchg
out
cmpsl
jp
push
in
out
cmp
imul
pop
jle
popa
stos
les
out
jbe
ret
xor
and
push
lds
xor
add
in
lret
dec
sub
insl
punpckhwd
inc
outsl
mov
or
push
ret
repnz
mov
mov
incb
dec
add
int
inc
cmpsl
push
out
mov
outsb
in
shlb
outsb
xor
imul
sti
loope
jne
jl
cmp
pop
pop
sub
ret
jle
add
stc
adc
sbb
jmp
arpl
ljmp
jbe
fcomps
add
shr
icebp
inc
dec
inc
js
cmp
pop
inc
hlt
cmp
push
pop
cmp
mov
adc
movsl
aas
xchg
xor
outsl
xlat
add
adc
mov
mov
dec
inc
icebp
sub
out
sub
loopne
lods
push
out
cwtl
cltd
ret
mov
mov
pop
push
inc
cmp
push
pop
jl
sbb
sub
mov
cmc
call
xchg
stos
push
mov
sti
fsubrp
andl
fwait
cltd
pop
dec
mov
fmull
inc
pop
addr16
pop
adc
pop
jbe
and
mov
sahf
add
andl
mov
je
jno
push
cwtl
popf
jle
xchg
popf
rclb
lret
dec
adc
iret
shlb
and
xchg
sbb
fcom
mov
dec
aas
xor
movsb
pushf
aas
dec
out
pop
shlb
or
test
shr
pop
bnd
jmp
pop
out
and
daa
aas
xor
test
iret
xchg
dec
adc
aas
movsb
je
or
jae
mov
xor
push
das
cs
and
scas
sub
clc
mov
bnd
push
movsl
data16
push
mov
xchg
dec
ret
or
imul
in
sahf
stc
mov
and
xchg
mov
dec
loop
sub
ds
push
sbb
jns
scas
push
fdivl
add
addr16
cmp
push
pop
pop
push
and
push
adc
inc
adc
sub
in
xchg
iret
mov
repz
xchg
xlat
ret
add
stc
int3
mov
adc
ds
xchg
into
call
add
push
mov
lds
inc
xchg
adc
ds
add
ds
out
jmp
std
inc
aad
cwtl
and
cld
xchg
add
mov
hlt
fstp
add
mov
jae
ret
cmp
cmpsl
xlat
ljmp
adc
stos
cmp
cld
pop
mov
xchg
cmp
adc
push
mov
stc
jb
sahf
jp
jle
dec
cli
xor
les
test
mov
inc
addr16
adc
inc
or
inc
push
push
cltd
bswap
mov
test
xchg
push
xorl
scas
ljmp
cltd
imul
cmp
push
mov
xor
xchg
data16
adc
cmc
sub
cmpsb
or
in
lock
popf
cmp
sub
or
mov
in
cmpsb
std
pop
sbb
pop
outsb
add
xor
pop
xchg
outsl
arpl
les
xor
cli
xchg
js
outsl
and
fisubs
mov
fcoml
fldcw
test
fcoms
insl
out
fsts
insl
movsl
dec
in
shrl
fldlg2
add
jl
sbb
js
and
xchg
mov
cltd
lods
push
inc
jb
mov
out
adc
mov
lods
fs
xor
cld
nop
pop
fbld
jmp
call
sbb
jge
and
dec
and
les
adc
pop
xchg
push
mov
lahf
adc
in
inc
arpl
lea
fmul
add
inc
shlb
pop
in
xchg
push
jo
imul
adc
adc
add
aad
cmc
daa
lahf
pmulhw
cmpsb
ja
xchg
hlt
mov
xchg
mov
test
fisttpll
idivl
xor
out
test
icebp
and
pop
push
sbb
loope
in
outsb
mov
xor
outsb
imul
adc
jecxz
sub
or
ret
stos
push
sub
mov
data16
xchg
or
sub
jnp
pop
lea
out
cwtl
leave
popa
int
adc
insl
in
and
aas
stc
jmp
mov
and
cmp
dec
dec
dec
dec
rorb
sub
addb
adc
stos
jb
mov
stos
sbb
push
popf
ret
aaa
sbbb
iret
cli
lds
ja
pop
aas
push
add
push
push
dec
pop
dec
and
mov
sti
sub
adc
sub
add
push
out
xchg
jbe
out
scas
mov
pusha
out
jmp
sbb
roll
ficoml
jp
jns
xchg
daa
push
test
cld
ret
jl
stos
test
mov
mov
mov
lock
mov
mov
cmp
mov
pop
xchg
jnp
mov
jbe
outsl
ja
fcompl
jmp
sub
mov
outsl
xor
ja
xlat
mov
in
hlt
outsb
inc
xchg
mov
inc
or
mov
stos
mov
mov
mov
push
lds
adc
icebp
xor
cwtl
movsl
and
xorl
jge
aad
dec
push
jg
mov
int
popa
jmp
cmp
sub
daa
adc
dec
mov
or
dec
test
popf
jb
stc
scas
dec
xchg
dec
pop
testl
fs
in
or
nop
pop
cs
xchg
hlt
push
out
inc
sbb
nop
and
in
enter
loope
cmp
jecxz
pop
into
cmpsb
xchg
and
lock
icebp
adc
negb
or
into
fisttps
xchg
rorb
push
das
jo
mov
cmpsb
popf
adc
pushl
push
repnz
add
jo
pop
pop
xchg
pop
cli
or
lods
scas
mov
xchg
sbb
adc
mov
adc
aam
fisttps
add
lahf
inc
decb
pop
xorl
jmp
pop
mov
xor
cmp
push
mov
repz
lods
inc
movsl
mov
inc
je
shll
inc
add
inc
adc
clc
in
mov
xchg
push
jmp
lret
loopne
es
adc
pop
push
xchg
push
or
mov
lret
das
pop
lret
jbe
mov
cmc
jmp
inc
jp
xchg
adc
fdivrs
das
inc
popa
pushf
bound
mov
add
fisttpll
mov
push
xor
fstps
mov
mov
fcoml
inc
ret
mov
mov
insb
xchg
data16
in
dec
or
jle
pop
push
cmp
mov
aas
into
sbb
fists
stos
cwtl
fdivs
leave
dec
cwtl
mov
lea
mov
cwtl
pop
out
add
jmp
jbe
pushf
pop
or
xor
pushf
insl
jge
aad
push
inc
inc
cmp
popf
sub
sti
enter
lcall
pop
je
or
fidivrs
clc
shll
or
faddp
stos
mov
or
ljmp
ss
roll
push
cmp
inc
idivl
xor
sahf
fldenv
stc
mov
adc
pop
xor
xchg
filds
sub
jnp
test
stos
ja
xlat
popa
mov
imul
jne
sub
xor
out
insl
jb
iret
push
and
add
push
arpl
mov
nop
inc
mov
into
fsubs
push
add
mov
iret
mov
ret
mov
add
cmp
das
sahf
dec
sub
mov
roll
push
sbb
jp
mov
in
out
lds
and
mov
sub
sbb
jmp
hlt
add
mov
in
cwtl
push
xchg
insb
jns
cmp
inc
sbb
xchg
enter
push
subb
mov
sub
in
rol
cwtl
fistl
lods
pop
cmp
inc
mov
and
repnz
js
je
jecxz
scas
lahf
jb
hlt
mov
dec
add
nop
rcrl
add
out
lea
fsubrs
mov
mov
cwtl
dec
dec
popf
repnz
xchg
scas
aam
pop
push
aam
pop
jecxz
jg
jecxz
xor
mov
movsb
lea
outsl
movsb
xlat
imul
pop
lds
imul
ds
push
outsl
fwait
popf
mov
clc
xor
add
mov
sar
mov
add
pushf
mov
es
scas
inc
push
jmp
mov
pop
inc
cmp
das
and
mov
jg
inc
sbb
lds
incb
cmc
inc
dec
loopne
loopne
ret
or
cmpsl
xchg
icebp
stc
daa
push
stos
push
jp
popw
sub
push
sbb
pop
push
adc
mov
inc
roll
mov
adc
popf
mov
push
xor
mov
cmpsl
fwait
and
in
lret
outsb
pop
gs
das
fsqrt
sbb
gs
int3
pop
pop
pop
into
adc
inc
dec
mov
sbb
jno
daa
xor
sbb
test
jns
pop
sbb
jecxz
sbb
stc
jg
arpl
xor
test
incl
ja
pop
arpl
jl
daa
nop
add
daa
jmp
sbb
shlb
ret
add
jbe
stos
stos
push
lods
daa
xor
sbbl
test
sbbb
mov
sbb
jo
lea
iret
int3
mov
mov
in
dec
inc
icebp
test
dec
push
shrb
xor
bound
jnp
mov
arpl
addr16
les
lods
sub
and
sub
into
mov
test
push
loop
cmp
ret
dec
xchg
sub
mov
mov
pop
lret
cmpsb
add
idiv
cmpsl
xchg
lds
lods
fistl
cmp
cmc
movsl
sbb
ljmp
jp
inc
dec
dec
arpl
test
inc
jmp
es
stc
xchg
int3
sub
push
inc
xchg
stc
sarl
mov
imul
mov
cli
adc
push
cmp
mov
cmp
cmp
arpl
jb
icebp
mov
xchg
dec
call
cmp
dec
clc
sbb
inc
mov
adc
mov
push
dec
dec
or
out
or
cmp
int3
out
loope
mov
cmp
and
stos
jle
mov
aad
addr16
adc
xchg
xor
out
in
pusha
lock
stos
inc
cmp
arpl
jg
lods
aas
call
lds
lock
pop
sbb
fidivl
mov
in
cmc
sub
or
nopl
cmp
add
and
mov
in
inc
loope
push
mov
mov
fisttpll
cmpsb
xchg
xchg
and
jne
daa
movsb
leave
xchg
lret
imul
mov
stc
jmp
loop
jl
popf
sahf
sti
and
mov
sbb
jmp
add
mov
rcrb
bound
out
sub
sti
mov
psubusw
je
push
cmp
ds
inc
ret
xchg
adc
xchg
rcrb
fs
aam
push
aaa
pusha
cmpsl
xor
roll
fisubrs
adc
cmpsb
clc
inc
loope
pop
flds
push
pushf
mov
dec
and
inc
or
ljmp
stos
movsl
insb
xchg
icebp
xchg
lahf
stos
adc
notl
lods
out
lcall
sub
insb
inc
pop
aas
dec
push
loopne
mov
xchg
stc
cmp
mov
lret
cli
xor
push
rclb
inc
xchg
call
mov
fidivs
sbb
testb
cltd
mov
cmc
and
pop
push
scas
inc
xor
adc
mov
scas
fld
aaa
adc
xor
pop
cmc
push
popf
xchg
popf
insb
adc
repz
cld
clc
mov
xchg
add
sub
xchg
loop
dec
pop
iret
sub
jbe
dec
sbb
fxch
jg
jmp
mov
aam
add
movsl
sbb
add
mov
mov
in
ret
xchg
inc
pop
mov
xor
pushf
jo
ror
xchg
inc
rorb
and
mov
stos
mov
xchg
jns
shlb
leave
cmp
loope
leave
push
aad
sarl
test
push
aaa
push
nop
lods
add
arpl
ds
jg
jns
scas
sub
dec
push
and
dec
jb
lods
stos
sub
notb
or
sub
mov
jl
pop
shrd
mov
jo
sbb
adc
mov
add
andl
lods
mov
dec
mov
xchg
test
xor
cmovg
les
pop
cmp
into
push
xchg
adc
mulb
push
cmpsb
lret
shlb
stos
loopne
test
and
jae
pop
pop
ja
inc
cmpsb
aad
jno
xchg
xlat
stos
insl
jmp
mov
jp
fcoms
cmp
and
mov
xor
je
fstl
repz
stos
dec
mov
jmp
or
fdivl
cltd
and
push
mov
lahf
and
push
lock
mov
mov
js
cmpsb
scas
cmp
xor
xor
outsb
or
adc
pusha
push
outsb
je
mov
lcall
add
leave
dec
adc
movsb
jmp
je
jbe
rorl
pusha
scas
divl
aaa
nop
push
test
in
or
fwait
in
ffreep
xchg
pop
push
bnd
xlat
cmpsl
xchg
js
or
fcmove
dec
mov
sub
fstpt
in
outsb
insl
clc
xchg
sub
sbb
mov
je
lods
out
loop
bound
das
fsts
scas
xchg
sub
lock
ficomps
or
je
ret
mov
call
cli
xchg
xchg
test
adc
mov
mov
pop
ja
cltd
dec
out
xorb
aam
sub
push
push
scas
pop
sub
jp
add
ljmp
dec
rcll
ss
loope
ss
adc
jg
testl
hlt
push
or
mov
inc
sbbb
daa
cmp
ret
fwait
add
mov
call
je
cmp
pop
mov
cmpsb
cmpl
out
loope
out
inc
xor
scas
sub
dec
mov
add
cltd
xorb
dec
sub
lcall
loopne
jmp
clc
enter
int3
xor
gs
ficomps
sbbl
insl
pop
xor
in
and
cmc
dec
int
push
and
clc
xor
sbb
cmc
cmp
icebp
mov
testb
mov
fildl
in
add
sbb
lret
leave
cmp
fsubrs
sbb
adc
push
sbb
or
data16
insl
sbb
movsl
mov
pushf
fstps
sbb
dec
mov
test
sub
test
stc
rcrl
dec
push
and
add
das
push
fcmovnbe
cmp
sbb
xor
lret
mov
pop
mov
andb
xor
cmp
sub
push
jmp
adc
or
aas
dec
xor
pop
sub
pop
or
dec
inc
imul
gs
hlt
inc
dec
outsl
enter
mov
mov
xor
and
xchg
cmp
jo,pt
xchg
out
aaa
xor
out
out
stos
imul
jae
sahf
mov
mov
fidivrs
movsl
call
loop
cmp
repz
imul
adc
adc
fmulp
mov
dec
aam
jmp
cmp
mov
clc
inc
sub
into
adc
mov
dec
and
mov
insl
ds
cmp
xchg
pop
xchg
shrb
jmp
lock
rcll
sbb
mov
mov
xlat
inc
cltd
pusha
mov
data16
push
push
mov
andl
in
dec
insl
jnp
push
out
test
adc
xchg
push
lcall
sbb
sti
xchg
fldpi
inc
and
jmp
jne
mov
add
out
mov
push
adc
in
push
addr16
popf
mov
out
dec
ja
ret
push
inc
xchg
out
sbb
or
js
add
add
pop
pusha
push
xchg
out
xchg
es
mov
roll
std
add
push
out
sbb
dec
ds
cmp
insl
lds
mov
into
sub
ret
fs
outsb
sub
pushl
mov
or
mov
push
or
enter
push
stos
rorl
sub
aad
sub
or
arpl
loopne
dec
in
cmp
jmp
adc
jno
and
int
sti
mov
cld
jl
inc
inc
lods
aad
scas
daa
cmp
std
scas
xor
pop
push
xchg
cmp
cwtl
pop
xor
mov
in
pusha
loopne
pop
adc
cmpb
insb
into
daa
fisubrs
sbb
mov
inc
lret
cmpsl
dec
sti
mov
addl
jnp
pushf
jmp
lods
lahf
fisttps
cmp
popf
cli
inc
push
add
xchg
call
lret
mov
adc
mov
pop
mov
mov
pushf
sbb
jle
std
fisubrl
inc
push
mov
or
jecxz
ret
pusha
mov
mov
jecxz
mov
jmp
scas
xchg
pop
push
push
pop
test
push
adc
das
xchg
cmp
cs
add
jo
js
push
pop
add
cmpsl
stc
stos
test
mov
jnp
lea
test
jne
add
mov
jae
sub
out
test
or
test
and
jecxz
bound
inc
jle
jo
fidivrs
push
add
loopne
cmp
ljmp
mov
movsl
jb
shl
adc
pushl
jae
in
mov
mov
push
push
mov
jno
jl
sub
dec
add
mov
pop
call
in
test
cmp
arpl
fmulp
aas
pop
popf
jno
or
inc
jb
or
xchg
push
in
es
cmpsb
push
inc
or
std
out
cmp
adc
addb
nop
xor
lcall
sti
push
jae
xor
jnp
push
pop
cmp
cmpsb
cmp
jno
outsl
mov
add
mull
pop
les
jne
cmpb
pop
adc
inc
adc
outsl
and
mov
sbb
pop
lret
jns
xchg
xor
mov
and
mov
pop
stc
in
jnp
out
mov
jno
mov
out
dec
jb
jp
sbb
and
or
mov
sti
sar
in
pop
cmc
pushf
adc
mov
arpl
arpl
jae
lock
jbe
cmpsb
xor
add
jno
sti
das
test
adc
popf
arpl
pop
mov
add
out
jae
stc
icebp
aad
lds
xor
mov
lock
xor
addr16
cs
std
sbb
imul
dec
xor
push
dec
into
and
repnz
test
mov
sbb
sub
pop
mov
or
pop
mov
leave
mov
mov
adc
jp
jl
mov
sbb
pop
movsb
lods
sub
pop
popa
rorl
mov
push
mov
outsb
push
scas
pop
add
aad
pop
xor
mov
mov
lock
and
adc
push
push
into
pop
test
or
enter
sti
and
in
mov
stos
jmp
into
jo
fcomi
and
repnz
stc
xchg
ja
xchg
fwait
jl
inc
inc
pop
jno
jl
dec
mov
jbe
enter
ficoms
inc
in
out
js
cmc
jae
pop
jne
dec
fs
pop
inc
rorl
sub
jl
enter
jg
subl
mov
leave
lock
int
lret
xchg
jl
mov
adc
inc
xor
mov
cld
bound
ja
push
outsl
repnz
repnz
sub
rcrb
ret
push
rcl
jl
faddl
in
loopne
jb
mov
rcrb
jno
jge
testb
mov
pop
xor
lods
repnz
movsb
mov
sbb
jg
sbb
inc
std
mov
sarl
sbb
unpckhps
and
aas
push
test
dec
push
popf
mov
pusha
adc
jns
shrl
repnz
sbb
enter
aam
xor
inc
jb
outsl
imul
mov
cmp
xor
cmp
clc
cltd
andl
inc
cli
call
jecxz
imul
jle
gs
jnp
negl
jnp
or
pop
mov
jge
jmp
sbb
paddq
mov
dec
jg
jl
or
int
mov
dec
or
pop
fs
clc
mov
sub
push
in
cmp
push
nop
push
add
xchg
orl
int
fnsave
push
fs
hlt
movsl
cmpsl
mov
fimull
clc
sarl
add
jno
sub
sbb
xchg
xchg
xor
data16
es
ljmp
push
xor
sbb
add
fidivl
mov
xor
push
roll
rcr
mov
sub
or
add
bound
add
jge
das
test
jge
fimuls
movsb
clc
mov
add
inc
pop
mov
icebp
jle
popf
xorl
inc
sub
lahf
out
mov
cld
shr
or
sysret
xchg
xchg
jmp
and
mov
mov
mov
mov
adc
dec
lret
push
repnz
pop
movsb
mov
dec
outsl
mov
movsb
inc
outsb
jns
loopne
or
mov
je
sbb
movsl
push
pop
jns
mov
rcll
push
jge
xor
into
inc
mov
int
mov
sbbl
out
fld
sbb
pushw
sub
push
insl
fstl
xchg
mov
mov
loopne
ret
push
cmpsl
mov
inc
xchg
xchg
xchg
sub
iret
dec
movsb
mov
leave
iret
mov
ds
mov
stos
in
leave
push
scas
adc
dec
push
push
cbtw
sub
lea
loop
and
lret
pushf
mov
stos
mov
cwtl
mov
dec
adc
sbb
push
imul
je
fcoml
out
rcrl
scas
cmp
pop
push
aam
rolb
imul
repz
jp
mov
addl
inc
or
mov
ss
repnz
xchg
faddl
mov
xor
push
pop
dec
adc
xchg
and
sub
int3
test
aad
adcl
shrl
aaa
ja
inc
pop
lahf
loope
mov
mov
lret
xor
jl
dec
pushf
popl
fs
outsl
aam
push
adc
cmp
push
jecxz
sbb
pushf
mov
dec
pop
push
and
in
dec
stos
push
in
cwtl
pop
mov
and
sbb
icebp
pop
clc
orl
nop
push
rorb
call
dec
leavew
ljmp
aas
inc
dec
jns
mov
icebp
daa
jo
ja
ja
fdivrs
pop
adcl
pop
dec
sub
pop
jle
dec
or
jae
mov
fwait
dec
lods
pshufw
idivb
cmp
adc
cmpl
pop
mov
hlt
and
sbb
out
xor
clc
sub
cs
xchg
mov
movsl
insb
lods
dec
mov
cmp
outsl
push
mov
subb
inc
arpl
ret
inc
scas
jno
stc
stos
inc
push
push
cmp
pop
cmp
incb
mov
adc
jae
mov
jp
sub
xor
js
ret
push
cmp
cmp
jmp
insl
cmp
add
stos
adc
je
daa
in
je
lcall
out
loopne
push
and
ja
mov
jns
fbstp
jae
nop
inc
out
outsl
jg
cld
push
add
arpl
dec
out
inc
push
in
xor
jnp
mov
ljmp
scas
sti
icebp
and
xor
xchg
xor
adc
push
popl
xor
fwait
and
cld
into
push
cmpsb
movsb
jecxz
or
lea
adc
push
sbb
notl
push
insb
enter
subb
cmp
xchg
mov
add
cli
insl
decl
inc
pop
test
xchg
cld
dec
or
test
cmp
inc
lods
movsl
pushf
sub
mov
inc
addr16
lret
adc
jae
clc
stc
and
fs
jmp
data16
cwtl
cmp
gs
add
jg
and
cld
mov
cs
pusha
shrl
jecxz
pop
mov
sbbl
jo
in
iret
sub
roll
dec
and
sbb
jo
stos
and
or
sbb
lods
int3
cltd
das
xchg
pop
jnp
cltd
mov
lock
jnp
daa
in
pop
shll
repnz
fmuls
cmp
sbb
mov
add
fisttps
dec
pop
cmc
jb
in
xor
pop
ljmp
rorl
in
adc
test
mov
mov
push
xor
xchg
out
jmp
arpl
imul
xchg
push
cld
push
xchg
mov
test
mov
outsl
cmp
repnz
fisubrl
mov
sbb
jmp
hlt
dec
push
sub
push
frstor
xchg
stos
xchg
mov
push
push
pop
adc
into
fstps
add
pushf
stos
fs
lods
and
inc
stc
inc
int3
inc
inc
inc
jo
xchg
insl
lcall
in
out
cwtl
aam
popf
int3
pop
cli
jnp
movsl
dec
pop
cmc
jmp
lock
data16
scas
repz
mov
inc
test
adc
dec
cmp
jne
add
sahf
aam
dec
jb
stos
loop
or
movsl
loopne
push
outsl
jo
insb
mov
jnp
rclb
icebp
mov
mov
xor
arpl
jle
cmp
pop
inc
rcrl
inc
scas
lahf
lcall
movsb
or
mov
mov
fdiv
xchg
roll
xchg
push
or
sbb
inc
sub
pop
add
popf
sub
addr16
or
test
movsb
repz
sbb
es
arpl
stc
dec
sbb
mov
or
add
inc
add
cli
jo
movsb
lock
popa
jbe
addr16
ljmp
add
jg
cli
push
mov
imul
adc
roll
xchg
fisubl
xchg
imul
sti
movsl
xor
pop
mov
imul
outsl
fstpt
ljmp
dec
nop
inc
ss
ljmp
scas
pop
adc
mov
aas
into
ret
std
push
sub
jb
cmc
inc
fcompl
stc
fisttps
lret
xchg
jecxz
fsub
or
cmp
inc
mov
dec
push
mov
push
or
popa
cmpsb
cltd
push
leave
mov
sti
mov
and
addl
cmpb
adc
mov
inc
pop
xor
ficoms
test
movsb
testb
push
mov
add
mov
xor
das
mov
nop
ss
insl
lock
sub
inc
mov
mov
daa
enter
loopne
pop
cmp
jecxz
jp
bts
shl
and
add
jecxz
add
lds
cmc
repz
mov
and
dec
jmp
or
cmp
push
mov
mov
hlt
sbb
push
cmovb
jl
mov
jg
mov
ja
dec
cmpsb
push
and
xor
lcall
fildl
mov
lret
cmp
inc
dec
adc
pop
jge
mov
cmpsb
les
lods
sub
sub
fcmovu
ss
sbb
jne
popa
dec
insl
mov
mov
inc
jns
xor
adc
call
mov
fisttps
lods
jge
inc
xlat
jbe
push
xchg
imul
or
imul
dec
sti
push
ret
inc
cmp
or
test
jg
inc
repnz
gs
orb
jo
jg
ret
in
cmp
or
icebp
or
adc
stos
adc
sbb
out
jbe
aas
xchg
lods
mul
mov
icebp
rorl
sti
inc
sbb
mov
push
and
xchg
cmp
fisttpl
bound
cltd
fidivs
sbb
fstps
fidivrs
mov
and
mov
inc
fcoml
fisubl
jno
add
test
jno
fisttps
mov
pop
push
stos
mov
std
movsb
push
in
xchg
pop
add
fimuls
jge
insl
lods
xchg
fstps
pop
das
adc
test
cmpsb
sarl
xchg
xor
sbb
ret
jno
sbb
outsb
mov
in
push
sbb
enter
icebp
pop
inc
aam
push
js
aad
outsl
movsl
xchg
rcrb
adc
push
fisttpl
je
cmc
fstps
pop
stc
jge
and
push
ljmp
lea
jae
jo
jae
jne
mov
add
aaa
push
xchg
xlat
scas
xchg
mov
mov
inc
icebp
popf
mov
ret
lret
int
or
xchg
subb
sub
sub
push
sub
push
data16
jno
inc
rorb
ret
mov
mov
and
add
sub
daa
adc
nop
scas
ljmp
mov
mov
add
stos
pop
aas
push
cmp
js
sub
fldcw
orl
scas
mov
cmp
outsl
push
in
push
jae
push
pop
rcrb
out
popa
and
out
or
sub
jmp
xchg
stos
mov
call
pop
cmp
rcrb
mov
pop
sub
lock
or
cmp
xchg
out
fadd
jo
ja
add
enter
pop
or
std
and
mov
int
movsb
push
cmp
popf
adc
jl
call
aaa
mov
sub
aaa
sbb
cmp
pop
popf
rorb
ret
or
add
fistps
adc
scas
dec
fs
push
rorb
xchg
push
int
in
imul
pmuludq
sahf
dec
mov
cli
inc
in
add
lods
dec
jo
mov
popf
shlb
push
scas
cmp
movsl
pop
lret
outsl
adc
adc
mov
sub
dec
dec
mov
outsl
dec
cwtl
mov
jne
cmp
mov
ret
cmp
bound
inc
pusha
ret
pop
les
mov
sbb
insb
push
mov
mov
addr16
shlb
mov
inc
dec
add
cli
jne
into
in
shlb
pop
daa
cmpsl
sbb
nop
icebp
adc
cmc
mov
and
adc
jge
imul
cmpsl
jb
push
pop
pop
scas
test
mov
adc
into
shrb
mov
rcr
fidivs
mov
mov
dec
or
cmp
loop
pop
mov
aad
gs
mov
sub
add
jmp
popf
icebp
or
gs
adc
push
jo
and
push
in
loope
push
int
and
ss
jmp
out
or
in
nop
inc
sti
inc
loope
popa
add
dec
xor
or
jbe
mov
orb
cmp
pop
test
test
inc
cmpsb
dec
add
outsb
jmp
stos
leave
mov
cli
repz
push
mov
adc
xlat
mov
xor
push
jne
sbb
mov
hlt
mov
out
dec
sahf
stc
rcll
mov
or
insb
loopne
arpl
fsubr
cltd
push
add
jl
mov
pushf
mov
jbe
cmp
mov
clc
insl
iret
cmp
xor
ret
push
jns
aad
sub
mov
stc
mov
in
das
test
gs
fstl
sbb
lcall
sub
xchg
cmp
lcall
mov
mov
mov
dec
and
cmp
sti
jns
mov
sub
mov
pop
sub
cmpb
or
pop
jmp
and
fimull
xor
shlb
mov
in
and
or
pop
aam
jno
std
cwtl
and
mov
xor
add
jb
jo
test
cwtl
push
or
test
cli
cmpsb
mov
leave
xchg
mov
icebp
repnz
push
xor
pushf
aaa
push
pusha
aam
cmp
pop
loop
sbb
and
aaa
fldenv
sub
mov
sbb
mov
in
out
sahf
out
cltd
sahf
mov
pusha
dec
or
dec
xchg
std
roll
movsb
mov
pop
jle
dec
mov
cwtl
loope
out
nop
testl
xchg
test
mov
mov
push
dec
xchg
sbb
fdivs
fcomps
push
cmpl
inc
ss
cmpsb
pop
call
pop
clc
mov
call
loope
sbb
jmp
sub
add
cmpsl
lret
sahf
inc
jno
scas
sarb
pop
js
dec
aad
xchg
mov
add
adcb
dec
rcll
ret
push
xchg
in
popf
push
test
int3
sar
arpl
nop
mov
dec
xchg
into
or
into
jle
fisttpll
stos
mov
in
add
scas
pushf
js
adc
push
shrl
add
ficomps
int3
mov
andl
sbb
xchg
cmp
test
xorb
shrb
int
lahf
xor
stc
pop
loopne,pt
test
fldenv
push
mov
and
dec
xchg
and
ljmp
and
xchg
push
pop
ljmp
fcoml
push
divl
leave
adc
push
js
dec
or
fidivrs
xor
mov
pop
add
cld
mov
mov
add
ljmp
sbb
movsl
sub
and
pop
dec
idivb
mov
xchg
cmp
mov
push
cmpsb
push
sub
xchg
dec
cli
stc
mov
mov
cs
dec
mov
inc
call
xchg
sti
mov
in
movsl
inc
into
stos
inc
mov
sub
mov
sbb
jns
and
jae
in
push
ret
cmc
pop
pop
adc
rcr
push
imul
push
cmpl
repz
les
mov
dec
outsb
mov
fnstenv
scas
fcoml
xor
xorb
pop
les
rclb
fwait
notb
or
sub
out
jg
xor
sub
mov
jbe
mov
xchg
mov
jns
adc
inc
fisubs
repnz
fsubl
out
xchg
inc
dec
and
pop
hlt
mov
sbbl
adc
sbb
jp
fwait
jg
pop
mov
push
push
loopne
dec
lock
scas
jno
sub
enter
xor
jg
jnp
lods
and
sub
mov
pop
push
pop
pop
xor
jb
xchg
sub
ret
adc
ret
addr16
in
loopne
jns
dec
jmp
sbbl
arpl
cltd
mov
and
inc
or
and
shl
or
gs
ret
in
dec
adc
add
fdivl
in
mov
xorl
xor
jnp
or
inc
inc
and
lods
out
xchg
fisttpll
popf
add
ds
call
stc
test
or
orl
gs
aad
add
jne
pop
mov
push
or
sbb
jnp
rorl
fwait
scas
inc
stc
out
adc
jmp
xor
adc
and
enter
imul
mov
or
or
cli
daa
adc
dec
inc
clc
xor
sbb
sub
jo
imul
dec
add
icebp
or
js
in
insb
js
notl
shl
mov
cmp
cld
pop
push
pop
xchg
and
sbb
movsl
sbb
xchg
pushf
dec
andb
or
loopne
xchg
xchg
sub
outsl
repz
ret
mov
inc
std
fstpt
pop
xor
adc
addl
rcl
jl
jmp
mov
and
lods
cli
fisubl
xchg
ds
pusha
in
out
pop
inc
imul
lods
adc
jmp
stc
roll
push
insb
pop
mov
or
test
inc
jo
xchg
mov
cltd
jae
push
aaa
imul
aas
inc
ljmp
mov
sub
jnp
ljmp
loopne
mov
mov
sub
aaa
and
inc
or
mov
and
xorb
push
cmp
out
cli
or
call
and
xor
pop
aaa
xchg
mov
push
imul
jbe
mul
adc
popa
arpl
add
mov
mov
aas
push
inc
les
rcr
fisubs
xor
in
jp
xchg
enter
lds
adc
and
stc
cmp
into
repnz
lret
dec
lods
sbbb
loopne
dec
add
xchg
repz
into
idivb
ss
jl
sub
push
adc
add
lret
jecxz
add
outsl
hlt
cmp
mov
in
loopne
inc
cmp
stc
and
setns
dec
test
data16
das
xor
pop
or
jbe
test
xchg
pop
mov
inc
out
insb
add
ljmp
lret
aam
out
jb
mov
and
lds
xchg
rcr
mov
pop
lcall
inc
jb
lods
xchg
pop
out
loope
cmpsb
ret
pop
jp
or
fidivl
pop
shrb
push
mov
push
aad
gs
xchg
lods
enter
not
cli
xchg
pop
outsl
cmp
mov
mov
sub
out
push
pop
cmpsl
rclb
fidivrl
xchg
lock
xchg
mov
frstor
or
popa
mov
jb
xor
adc
adc
shrb
shlb
xor
les
dec
mov
faddl
test
dec
into
mov
mov
es
push
fsubs
sbb
lods
hlt
xchg
lahf
call
adc
jp
and
xor
aam
push
data16
gs
mov
ret
fidivrl
loopne
pop
sub
scas
cs
in
pop
push
push
movsl
mov
frstor
inc
mov
bound
adc
mov
cli
xchg
lea
mov
dec
mov
jb
test
jae
inc
mov
pop
mov
push
movsb
cmp
adc
cmpsl
loop
push
pop
aaa
das
sbb
mov
push
pop
mov
sti
mov
dec
ja
pop
and
add
mov
push
xor
inc
sbb
jb
pop
adc
mov
mov
push
inc
out
test
xchg
pop
mov
movsl
mov
daa
adc
jg
sti
jge
mov
sub
rcr
ljmp
lods
cmpsb
push
push
ss
lret
push
mov
loope
xchg
or
repnz
mov
loopne
xchg
decb
inc
jp
jns
int
imul
xor
jecxz
cmovl
adc
rcll
divb
imul
sbb
jp
inc
sub
test
jo
in
push
arpl
add
xchg
gs
jg
pop
repnz
dec
mov
sbb
cwtl
dec
mov
mov
andw
adc
jns
ds
cltd
cmpsb
and
and
sub
add
pop
mov
inc
or
fwait
add
inc
jne
adc
jne
jno,pn
inc
into
dec
jae
div
loope
cmp
pop
cs
xchg
push
inc
mov
and
out
xor
jne
pop
jp
out
mov
inc
mov
add
cs
decb
icebp
push
decb
xor
mov
pop
into
shll
lods
push
dec
cmpl
test
je
and
iret
push
inc
lret
daa
xor
loope
scas
cmp
jge
outsl
jecxz
lods
push
pop
add
das
subl
push
mov
roll
or
lea
rorl
popa
enter
movsl
or
jl
mov
icebp
imul
dec
push
or
icebp
cmp
fildl
jnp
call
jmp
sbb
push
roll
scas
cmpb
andps
sbb
int
mov
cmpsl
iret
add
and
leave
and
mov
es
push
dec
lock
add
sbb
dec
jb
test
mov
sub
add
inc
js
imulb
jbe
int3
pop
mov
jae
sub
mov
mov
inc
or
test
sbb
mov
and
cwtl
mov
mov
xor
rcr
mov
aaa
push
cwtl
mov
data16
cmp
sbb
and
out
pop
adc
inc
push
or
fcmovnbe
dec
pop
sub
gs
xor
in
imulb
test
lea
stos
push
lahf
lahf
adc
mov
insb
pop
inc
sbb
jo
sbb
cmp
jp
arpl
push
stos
add
aaa
sbb
push
mov
popa
sbb
subl
sub
jle
aaa
lock
roll
inc
fnstsw
adc
sbb
adc
sub
cltd
insb
cmpb
xchg
mov
push
sti
cmp
push
pop
inc
std
push
fwait
dec
ljmp
mov
xchg
addr16
xchg
imull
inc
xchg
mov
lret
repz
stos
out
inc
stos
int3
int3
adc
push
mov
nop
sub
xchg
or
mov
js
xchg
or
ljmp
adc
inc
jmp
stos
adc
pop
xchg
ds
push
mov
lods
jmp
imul
xchg
mov
inc
push
cmpsl
cli
ret
and
inc
in
cmp
push
mov
push
lcall
cmp
cmpsl
int
cmp
xchg
inc
rcl
mov
jg
inc
push
ljmp
add
fwait
aam
jne
push
push
ljmp
daa
pushf
dec
push
mull
xchg
sahf
cmp
lcall
xchg
enter
mov
xor
jbe
jl
xchg
pop
cmp
add
jp
or
cmp
jno
ljmp
lods
mov
iret
add
les
xchg
loopne
sbb
dec
xor
ja
call
inc
mov
mov
scas
repz
roll
lahf
leave
lock
jo
test
in
mov
out
lea
out
cmc
lret
mov
sbb
stc
mov
sbb
mov
das
aas
cwtl
dec
fwait
or
push
lahf
xchg
rclb
rcr
nop
ror
inc
or
jne
sbbb
pop
jbe
push
sarl
in
js
out
test
xchg
pop
in
mov
push
cmpsb
jmp
add
add
out
stos
js,pt
xchg
outsb
mov
mov
jb
leave
push
pop
and
mov
inc
lea
pop
stc
arpl
push
and
int
sbb
or
les
dec
arpl
inc
cmp
scas
call
or
cmp
add
in
mov
mov
pop
and
xchg
insl
jno
cld
add
test
dec
jp
xorl
outsl
aam
outsb
pop
push
sahf
and
or
aam
add
add
xor
jmp
inc
sti
scas
rorb
or
mov
xchg
sub
les
hlt
into
pushl
mov
pop
mov
cmp
cmc
loope
sub
or
push
in
cmc
push
loopne
mov
jp
int
bound
jp
mov
add
outsb
adc
mov
orb
cld
xchg
mov
adc
ljmp
xor
aaa
sti
add
push
and
jp
or
bound
or
or
lcall
popf
mov
in
enter
xor
cs
mov
into
and
mov
popa
ds
shll
jp
dec
xor
xor
mov
fistps
into
mov
outsl
call
xor
je
xor
sub
rcrl
add
xor
dec
push
rol
push
add
pop
sbb
int
xor
mov
dec
ret
cmp
dec
fadds
push
stos
xchg
jb
push
shll
mov
cltd
int3
add
dec
daa
sub
std
in
and
adc
mov
xchg
mov
push
jns
pop
leave
and
out
mov
cltd
push
in
filds
add
mov
inc
mov
sbbb
int
jae
xchg
loopne
push
sub
adc
ljmp
stc
aam
jbe
in
push
icebp
inc
leave
xchg
mov
mov
hlt
or
push
iret
adc
ss
scas
xchg
mov
out
inc
js
xchg
push
sub
scas
jp
mov
sub
sbb
mov
sbb
pop
inc
xchg
cwtl
in
xchg
fdivrl
cmpsb
push
xor
into
dec
pusha
imul
std
mov
imul
andl
sti
lea
inc
enter
jno
sbb
mov
js
aas
pop
stc
and
fstl
jbe
negb
js
push
jbe
sub
ja
cmpb
loop
sti
and
xchg
in
xchg
insl
or
dec
mov
lcall
mov
fdivs
test
out
cmp
imul
and
dec
movsb
sbb
movl
scas
sar
sub
addr16
jl
aaa
xor
cmpb
or
ds
cmp
aaa
push
rcrl
pusha
subb
in
push
ret
std
inc
jb
fwait
inc
sahf
and
sti
add
stos
jl
xor
scas
mov
dec
add
pusha
decl
call
fiadds
xchg
lcall
jp
xchg
mov
sub
mov
divb
push
test
inc
and
dec
addr16
push
mov
roll
pop
fstps
loop
jne
add
inc
pop
xlat
cmpsb
cs
sahf
dec
pop
inc
fwait
and
mov
dec
pop
jnp
pop
in
imul
push
test
jmp
jmp
pop
popa
mov
les
sbb
push
ret
sbb
pop
inc
and
xchg
mov
jmp
mov
add
ret
adc
and
insb
mov
das
fbld
push
out
cwtl
adc
xchg
mov
push
shll
sub
inc
repnz
mov
xchg
ljmp
inc
into
fisttps
jecxz
pop
iret
aas
lea
cmp
mov
pop
les
out
xor
sbb
enter
inc
arpl
push
enter
int3
lods
sbb
loopne
cmc
filds
lock
popl
jo
add
mov
ljmp
in
jp
pop
push
loopne
mov
or
cmp
or
in
mov
outsb
push
std
shlb
jae
leave
std
cmp
add
fadd
mov
scas
stos
test
sbb
mov
pop
mov
in
test
popf
aam
lock
lea
rclb
aam
inc
lods
and
jge
jb
adc
imul
out
icebp
fisubrl
in
imul
mov
ljmp
movsl
and
loopne
sub
sub
test
pop
fwait
test
dec
popa
jmp
shll
rcrl
rcr
inc
mov
aas
inc
inc
inc
jge
maskmovq
notl
call
mov
pop
in
aam
or
pop
mov
mov
aad
pusha
or
testb
sahf
pop
xchg
clc
dec
notl
mov
mov
inc
arpl
lret
mov
jmp
cmp
adc
xchg
pusha
push
scas
out
dec
inc
and
mov
mov
cmp
daa
dec
insb
and
xchg
jge
pop
pusha
jbe
movl
mov
das
cmp
inc
loope
cmpsl
xchg
cmp
push
jne
mov
aam
push
out
dec
stos
mov
adc
xchg
jno
aaa
add
les
xchg
mov
es
cli
jno
mov
loope
mov
add
mov
test
outsb
outsl
loop
push
lcall
jle
arpl
lret
sbb
rolb
fwait
int
or
pop
and
fidivrl
mov
pusha
dec
jns
adc
pop
mov
add
sbb
stos
xchg
outsl
test
jo
xor
push
arpl
aaa
jo
adc
or
std
adcl
adc
mov
shlb
arpl
aam
lcall
or
cld
push
cmp
sub
sub
repz
xchg
xor
lahf
mov
push
pop
lock
fsubrl
adc
jns,pn
xchg
adc
in
fldcw
sbb
jbe
jnp
sbb
add
inc
xchg
out
outsl
and
jno
add
dec
ss
mov
push
mov
cmp
xor
push
dec
add
pop
test
push
xlat
or
mov
cmp
aaa
cmp
or
xor
push
push
adc
xor
pop
xor
mov
and
imul
into
xchg
mov
cmp
cmp
jno
mov
cmp
sub
mov
adc
mov
sub
mov
mov
leave
xor
mov
push
xchg
push
lcall
loopne
cmp
repnz
int
movsb
pusha
pop
in
inc
nop
rcll
mov
mov
or
pusha
adc
sahf
pop
and
cmpsb
pop
dec
mov
push
inc
out
inc
sub
jp
orb
cmp
pop
mov
push
sbb
outsb
outsb
mov
les
inc
push
loopne
add
dec
mov
js
fistps
sbb
das
mov
jl
out
inc
cmpsb
or
fst
mov
fwait
sbbl
roll
mov
out
push
cltd
ds
adc
sub
imul
xchg
loope
idivl
pop
out
mov
pop
lret
lods
pop
pop
ljmp
push
cld
pop
dec
push
dec
xchg
clc
sub
push
stos
sbb
ffree
dec
mov
cmp
cmpsb
push
xor
and
cmpsb
add
lock
jg
mov
sbb
push
push
pusha
push
jne
jl
sbb
cwtl
outsl
xor
rcr
aas
movsl
or
aas
cmp
inc
dec
daa
sti
push
ja
xor
cmp
gs
or
sahf
mov
int
pop
jl
adc
addr16
inc
in
mov
hlt
daa
pusha
or
addr16
loop
std
lds
je
outsl
outsl
rclb
dec
popa
mov
sbb
cmp
stc
icebp
mov
fwait
jnp
in
fdivl
add
lret
loop
push
xchg
mov
nop
cmp
je
sbb
std
ss
inc
cmpsb
jns
ret
jne
inc
sbb
pop
add
jnp
and
cmp
push
repnz
idivl
int
pop
mov
movsb
roll
push
outsb
filds
jmp
test
add
in
push
mov
push
cld
sarb
mov
xor
ljmp
in
jbe
pop
in
iret
jnp
jg
sub
int3
leave
jns
sbb
lcall
pop
sbb
mov
inc
in
pop
leave
push
faddl
stos
scas
jae
xchg
mov
cs
cs
xor
ret
pop
pop
popa
sub
mov
jp
pusha
xchg
clc
jns
nop
push
es
cmp
jo
nop
int
lcall
sub
ds
sub
roll
push
clc
aad
xchg
stos
inc
cwtl
pop
pop
jbe,pt
inc
jbe
xchg
pop
imul
xor
sbb
and
mov
jbe
cvtps2pi
cli
inc
or
js
jns
pusha
lock
into
jo
lret
adc
rclb
into
out
mov
adc
aad
mov
imul
xchg
mov
out
jne
push
dec
jmp
pushf
fisttpl
arpl
jmp
xchg
add
xchg
dec
lods
rolb
arpl
jne
pop
push
test
jmp
test
data16
loopne
in
or
aaa
imul
cwtl
xchg
adc
xchg
loope
mov
in
mov
xchg
and
sti
mov
pop
jmp
scas
xchg
repnz
dec
push
shrl
daa
pop
or
ljmp
pop
sub
icebp
negb
imul
enter
mov
into
mov
cmp
mov
cmp
jb
lcall
mov
add
pop
lock
mov
mov
shrb
pop
inc
lea
repz
mov
cld
cmp
mov
loope
lahf
mov
jecxz
inc
test
cmc
mov
mov
cmc
test
cmp
dec
dec
cwtl
lret
test
xor
push
sub
cmp
mov
jle
inc
lahf
dec
adcl
xlat
pop
mov
test
sti
sbb
lds
jp
daa
push
or
push
xor
xchg
in
mov
mov
lcall
cld
or
aam
nop
ljmp
sbb
lds
into
push
lret
cmp
sub
insb
xchg
arpl
xor
sub
xor
xchg
jle
pushf
cli
xchg
mov
popa
testl
inc
inc
xlat
imulb
xor
dec
lods
push
mov
mov
shll
mov
shll
lods
jnp
push
hlt
inc
pop
jae
cmp
pop
movsb
stos
or
out
cmp
mov
aaa
out
sub
mov
sahf
shlb
mov
fstpl
fwait
call
lds
stc
lds
cmp
push
pop
cmpsl
or
mov
ss
and
xchg
sar
mov
lcall
sub
pop
push
les
outsb
popf
sbb
or
lds
daa
repnz
xchg
push
lret
adc
sub
cli
lret
sbb
data16
or
jmp
lahf
or
mov
fisubl
pop
stc
ds
mov
mov
push
mov
les
cmc
imul
orb
push
ret
dec
scas
mov
push
pop
out
aas
inc
sub
sbb
negl
jp
adc
ret
das
pop
je
fstpl
fwait
jnp
xchg
add
dec
pop
jnp
sahf
jl
addl
arpl
xor
sbb
mov
lea
mov
add
lahf
and
push
clc
push
rolb
pop
lret
adc
out
xlat
xor
cmp
lds
jo
into
cltd
cmp
nop
lret
cld
lea
push
jnp
cld
testl
jmp
cmc
push
in
pop
lock
clc
ja
and
lret
sbb
jbe
mov
xor
popf
xchg
ret
mov
ret
stc
lret
inc
lds
add
mov
jae
jmp
iret
jge
push
dec
or
iret
xor
stc
sbb
lcall
aam
and
push
xchg
shrb
out
cwtl
inc
fmulp
imul
lcallw
cmpsb
adcb
push
and
push
repz
call
xchg
daa
cli
cmp
lock
dec
out
mov
mov
push
sbb
pop
popa
divb
ret
in
cmp
inc
lahf
mov
ss
mov
sti
add
scas
push
or
add
shrb
outsl
pusha
xchg
inc
fmuls
aad
loop
scas
adcb
sub
mov
js
jo
jns
stc
outsl
jno
jle
jns
and
lods
sti
fnclex
add
mov
sar
cli
pop
jle
mov
mov
dec
fcomps
inc
mov
pop
lock
cwtl
add
mov
test
push
xchg
pusha
push
lret
xor
orl
add
lds
aaa
and
ret
inc
and
jnp
in
inc
dec
push
push
jecxz
xchg
and
mov
pushf
cmp
lds
int3
fsubs
and
stc
inc
inc
aaa
xchg
adcl
mov
jne
and
inc
stos
mov
pop
nop
pop
into
push
pop
pop
jg
pop
xchg
dec
andl
imul
pop
cmp
dec
cmpsl
mov
in
daa
dec
xchg
xchg
in
icebp
popa
stc
mov
mov
xchg
int
imul
fisttpll
loopne
test
push
mov
arpl
mov
ss
scas
cli
or
mov
rol
mov
das
inc
stos
cs
out
pop
pop
sbb
inc
in
jne
lea
jns
pop
out
mov
movsl
or
xchg
mov
dec
add
cmp
mov
negl
daa
lds
mov
sub
jle
push
insl
pusha
xchg
outsl
mov
call
mov
rorl
inc
lret
shll
sub
pop
int
add
es
xchg
mov
mov
inc
inc
outsl
pop
dec
fs
jecxz
nop
adc
lods
jecxz
mov
mov
push
sub
mov
mov
push
and
mov
inc
adc
cmpsb
sbb
hlt
inc
mov
movsb
jno
icebp
fidivrs
fs
mov
je
jg
push
add
mull
pop
fnsave
xchg
movsl
scas
lea
xlat
in
jp
mov
xchg
mov
mov
int3
cmp
jle
lea
pop
in
fwait
cmpsb
mov
fwait
mov
xor
mov
cmc
mov
imul
jmp
stos
xor
jp
imul
and
push
xlat
das
ss
jo
nop
stc
sub
cwtl
sar
shrl
lods
push
push
lahf
insl
sahf
ret
stc
popa
addb
mov
push
pop
rcll
mov
lret
out
mov
hlt
xlat
xchg
push
jp
shl
lahf
mov
push
gs
stos
je
ljmp
int
add
insl
mov
iret
xchg
xchg
pop
loopne
iret
movsl
xor
dec
dec
pop
pop
pop
sti
and
in
sub
xor
ficomps
dec
jmp
adc
sbb
xor
and
jge
inc
ja
push
xchg
cli
sub
pop
notb
loope
fs
lds
sub
push
cmp
ljmp
mov
sarb
xchg
jbe
or
pop
mov
xchg
sar
outsb
push
fildl
sti
mov
popa
sahf
in
movsb
xchg
lods
arpl
dec
cmp
adc
in
test
jae
pushf
stc
xor
add
xlat
movsb
add
push
xlat
xor
in
jge
cmc
and
sti
iret
push
and
sub
add
fmulp
jmp
inc
inc
test
out
sbb
xchg
aam
imul
stc
loop
pcmpeqw
rorl
adc
test
test
mov
sbb
les
frstor
push
mov
push
inc
fidivrl
and
sbb
sbbl
xchg
js
pop
ss
movsl
pop
mov
sub
inc
jb
adcl
rcrb
sbb
mov
or
ljmp
mov
call
sbb
addr16
add
lds
push
imul
inc
push
add
scas
imul
pop
ret
pusha
adc
mov
push
insb
jecxz
add
aaa
jo
xchg
jg
and
popa
andl
adc
es
out
pop
ret
pop
ja
pop
xor
cli
popf
inc
or
dec
inc
pusha
jecxz
push
sbb
jecxz
pop
xchg
sub
jmp
or
into
sub
mov
mov
imul
jp
jne
mov
insl
in
xchg
shrb
shll
lods
int3
out
fisttps
mov
mov
in
xchg
mov
lret
or
test
push
add
jle
cmp
mov
add
cmpsl
popf
ficompl
mov
xor
mov
sbb
in
lret
incl
imul
fisubs
cmp
jecxz
push
jae
mov
inc
jnp
pushf
push
ljmp
xchg
stos
pop
enter
fisttpll
into
daa
shll
lds
pop
pop
in
mov
jp
mov
push
add
int
orl
mov
das
jg
les
cmp
loope
cmp
jae
jmp
xchg
dec
or
cmpsb
lret
test
pop
adcl
adc
xchg
popf
hlt
mov
out
subl
cwtl
jecxz
adcl
and
fs
mov
push
or
and
mov
inc
std
sub
xchg
test
adc
fs
mov
popa
and
rorl
repz
scas
roll
mov
stos
inc
adc
cli
std
sbb
aad
jno
fistpl
les
stos
push
int3
mov
scas
sbb
mov
jnp
push
xor
dec
or
cs
add
scas
lods
mov
mov
push
pop
imul
mov
sbb
mov
daa
mov
fsubl
mov
fisubrl
fbstp
test
hlt
ret
mov
xor
ljmp
fidivl
mov
imul
mov
inc
jbe
ret
and
in
inc
mov
notl
lret
stc
insl
mov
lea
ljmp
cmp
aas
mov
rcll
or
lock
into
js
xchg
jno
adc
xor
dec
hlt
test
xor
xchg
cmpsb
fwait
fwait
lcall
sbb
dec
sahf
xor
popf
js
aaa
jne
xor
sarl
xchg
shlb
ret
mov
scas
push
xchg
fldl
imul
cmp
push
ljmp
xchg
clc
push
int
dec
sahf
into
call
push
dec
cwtl
test
cmp
pop
ret
fdivrs
stc
popf
fisubrl
xor
loopne,pt
mov
dec
cmp
pop
xor
push
inc
arpl
cmp
bnd
mov
in
imul
xor
mov
pusha
mov
lea
cmpl
jg
jmp
cmpsb
jbe
int3
dec
out
sbb
and
mov
inc
ds
dec
sub
stos
subb
mov
xchg
push
lock
incb
jge,pn
adc
stos
mov
mov
lret
xlat
scas
mov
or
gs
xchg
xchg
push
and
movsl
inc
fisubrl
or
insl
xorl
movsb
es
sbb
or
popa
jecxz
insb
idivl
cld
adc
jo
call
xor
lds
or
add
adc
cs
sub
sbb
scas
out
jge
pusha
repnz
test
inc
sub
lea
cmp
cli
aad
enter
sub
push
dec
xor
cld
and
sahf
mov
pop
scas
xchg
cmpsl
fisubrs
aas
pop
icebp
xor
sbb
lods
cltd
cmp
fbld
push
mov
ljmp
mov
das
mov
cmpsl
pop
lret
movsb
pusha
pop
cmp
mov
inc
jns
push
into
jnp
or
mov
movsb
idiv
sub
cld
out
repz
xchg
push
inc
xchg
mov
clc
cmc
repz
pop
adc
push
fs
incl
pop
xchg
icebp
dec
jo
test
mov
dec
push
test
popa
leave
cmp
daa
inc
leave
xchg
xchg
out
sub
movsl
sbb
jl
movsb
call
adc
test
inc
in
xchg
outsl
push
pop
pushf
cmp
mov
clc
bound
mov
adc
mov
cld
sub
scas
imul
movsb
rorb
jnp
popf
or
shrl
sbb
into
notb
pushf
out
pop
test
and
outsl
jne
pusha
std
sbb
or
ret
push
inc
mov
inc
inc
loopne
cmpsl
pusha
fmuls
test
cmp
lods
mov
addb
aad
hlt
mov
subb
arpl
and
mov
and
imulb
in
hlt
mov
les
adc
roll
mov
xchg
jns
into
mov
dec
mov
pop
jmp
pop
xor
js
fwait
stos
lods
rorb
in
clc
out
imul
clc
add
sahf
add
aaa
les
jmp
mov
mov
push
or
push
adc
lahf
lcall
mov
call
cwtl
out
fdivl
arpl
in
fdivr
data16
adc
cmp
dec
or
call
xchg
mov
sub
pushf
xchg
icebp
cmp
mov
xchg
test
test
adc
lds
or
add
or
cmpsl
imul
movsl
cmpsl
mov
jl
mov
ljmp
int3
fistpll
aas
sbb
mov
les
cmp
cli
and
sub
loopne
shrb
xor
mov
stos
insb
fwait
jmp
rol
mov
je
cmovle
pop
std
jnp
scas
clc
lock
mov
or
inc
in
loop
dec
mov
inc
lahf
pop
mov
sub
push
inc
ds
mov
and
jmp
cmp
sub
jecxz
push
aad
int3
or
outsl
cmpb
xchg
cmpb
or
xchg
mov
sbb
into
mov
adc
push
ret
into
mov
mov
jnp
decl
push
xchg
std
sub
leave
jno
pushf
dec
cltd
into
out
aaa
mov
cmpsb
push
or
test
pop
cmpsb
sub
push
daa
dec
notl
sub
bnd
adc
cmp
xor
add
adc
xchg
cwtl
movsl
repnz
pop
jle
add
rcrl
daa
outsl
out
nop
aaa
addb
pop
fiadds
xchg
movups
jae
out
sub
lea
xchg
add
push
outsl
add
jbe
push
dec
adc
rclb
and
xor
push
cmc
addr16
cmp
cwtl
inc
scas
mov
adc
mov
xchg
sub
cld
sti
jno
sahf
cmp
aam
push
loop
mov
aad
sub
cli
or
outsb
mov
inc
shrb
scas
xor
dec
mul
cmpsl
sbb
fdiv
imul
mov
inc
mov
das
mov
ret
inc
movb
lret
out
es
test
pop
jno
xchg
mov
hlt
iret
xchg
adc
lret
lods
mov
mov
and
and
mov
stc
adc
fucom
out
pop
es
insb
loope
push
insl
into
pop
sbb
lcall
movsl
lds
movsb
imul
mov
ljmp
jno
adc
inc
push
int
and
sbb
mov
sarl
xor
mov
sbb
mov
cmp
daa
push
mov
les
std
imul
outsl
push
bound
imul
mov
and
xchg
push
adc
pop
ror
test
fstl
insb
sbb
mov
jbe
push
iret
stos
mov
imul
hlt
jno
cmc
sahf
aam
notl
stos
sub
cmp
inc
rcl
mov
dec
jo
pop
dec
sub
in
add
out
sarb
in
mov
stos
into
xchg
xchg
ljmp
sub
popf
repnz
inc
jl
cmc
inc
sarb
mov
mov
jns
outsb
lds
mov
jp
add
pop
sbb
in
inc
pop
hlt
sbb
jle
sub
scas
lcall
dec
addr16
add
lock
or
orps
stc
mov
fwait
xchg
cmp
mov
rcr
mov
dec
add
mov
xchg
jp
mov
xor
std
inc
jmp
pop
repz
test
push
xchg
jno,pt
lret
clc
push
in
pop
shlb
mov
test
jp
out
daa
cmp
add
dec
pop
push
fwait
inc
sbb
in
pop
test
xor
xor
jne
inc
int3
je
int3
into
hlt
cmp
test
adc
pop
inc
cmp
in
mov
xchg
aaa
jmp
cmp
addr16
cmp
cmp
push
xchg
popf
cld
pop
pop
insb
push
add
into
nop
pop
sbb
or
sbb
mov
jp
push
sub
shrl
jp
int3
fstps
xorb
cmpsl
mov
imul
mov
aas
iret
jbe
pop
xchg
jbe
rorl
nop
add
das
aad
jg
fistpl
ret
dec
fwait
xchg
fists
jne
push
data16
dec
fwait
jmp
ret
mov
out
cs
or
fimuls
and
fs
je
sbb
das
int3
repz
xchg
pop
xor
insl
nop
ret
pop
cmp
scas
loope
cmp
cmp
fcoms
rcrb
mov
xor
mov
lods
push
push
inc
mov
pop
cmp
insb
stos
dec
stos
mov
dec
fiadds
xchg
fwait
mov
fmuls
sbb
mov
adc
sbb
xchg
pushf
pop
push
mov
scas
fists
movntq
lods
lea
or
bound
test
pop
in
push
mov
into
dec
xor
bound
sub
jns
add
cli
cmpsb
in
outsl
jecxz
push
ss
xchg
xchg
pop
add
movsb
ss
and
cmp
xor
movsl
fdivrs
adc
add
xchg
movb
das
das
sub
outsl
out
insl
data16
mov
adc
mov
jecxz
stc
xchg
xchg
arpl
in
or
ss
insb
cmp
cmc
jmp
sub
xor
rcrb
shll
mov
mov
sbb
mov
in
fisttps
jb
and
or
dec
inc
into
inc
addl
jnp
mov
xchg
adc
or
cs
fisubrs
push
cltd
cmp
out
sub
arpl
xchg
in
test
push
arpl
jne
in
mov
fwait
dec
fistpll
repz
inc
cmp
cltd
pop
repz
fisttpl
das
mov
mov
or
push
rcll
adc
cmp
mov
jne
jmp
mov
xchg
and
sarb
pop
inc
push
and
int
jl
cwtl
cmpsb
sbb
xchg
dec
inc
add
xor
enter
dec
pop
call
aas
sub
add
fadd
or
cmp
jo
xchg
popa
lret
addl
sbb
inc
push
or
mov
shrl
sbbl
fcmovnbe
mov
popf
imul
fs
testb
in
aas
inc
ss
xchg
and
mov
les
inc
aad
dec
mov
pop
cli
xor
cld
dec
cmpsl
stos
outsb
xor
cwtl
cwtl
push
imul
notb
push
cmp
mov
popf
adc
xor
in
dec
mov
pop
repnz
cmp
jns
cmp
test
loope,pt
fs
insb
repnz
in
mov
stc
cmp
in
arpl
sahf
rcl
lcall
and
int
cwtl
ja
sbb
push
repnz
and
stos
fwait
jge
push
xor
cmc
ss
nop
imul
sub
cmc
insw
inc
in
push
jno
or
ret
and
idiv
or
in
dec
xchg
cmp
lcall
mov
dec
jp
xchg
mov
jg
sbb
shrb
jg
cmpsb
ljmp
faddl
aam
mov
fs
repz
enter
mov
jne
sub
add
mov
xor
mov
aaa
mov
ds
nop
cmp
and
pusha
dec
sbb
testb
loope
sbb
repnz
mov
scas
call
jp
aas
in
or
cwtl
and
testb
cmp
mov
push
shll
inc
pop
and
popf
cmp
fwait
mov
xchg
mov
mov
push
lret
jnp
cmp
popl
ljmp
mov
push
in
mov
mov
roll
adc
xchg
div
push
iret
rcrl
insl
push
aas
jp
aam
add
cmp
push
and
test
and
shrb
or
push
sub
dec
jne
push
push
fnstcw
iret
sub
lods
cmpsl
sub
add
les
cmpsl
fldt
testb
in
out
sub
or
jae
gs
leave
ret
pop
push
pusha
int3
jmp
fdivl
test
mov
cmp
and
je
fadds
push
scas
xor
lods
clc
imul
inc
ss
fidivl
pushf
jmp
cli
pop
cmp
adc
cmp
roll
mov
mov
hlt
sub
mov
sub
xorb
clc
cmp
lcall
xlat
and
dec
shlb
out
int3
jo
add
dec
fstps
roll
xor
push
iret
test
cmp
test
divl
sbb
and
incl
mov
inc
push
adc
sahf
inc
mov
les
ret
jp
jns
or
stc
clc
cmc
fiaddl
inc
test
test
and
add
dec
or
inc
fcmovne
push
mov
xchg
stc
lea
mov
fisubrl
aad
gs
std
imull
das
pop
dec
lcall
dec
test
aaa
inc
inc
aas
je
mov
mov
nop
fs
ds
push
into
adc
jnp
gs
mov
dec
test
shlb
nop
xchg
push
mov
dec
push
fisubl
ficompl
outsl
gs
ja
movsl
mov
in
jae
sub
fstpt
jmp
fsub
push
lock
repz
and
iret
add
xchg
push
cmp
inc
loope
je
jg
sar
mov
xor
add
addl
test
mov
in
mov
stc
or
adc
add
xchg
pop
loope
mov
or
into
mov
adc
icebp
fmull
movsb
sub
lret
mov
clc
test
jle
daa
mov
ret
insb
cmp
lahf
filds
xchg
push
test
sbb
push
lcall
stc
out
inc
xor
seta
inc
jg
decl
addr16
popa
xor
mov
scas
mov
test
sbb
jbe
dec
hlt
mov
test
mul
or
repnz
cmovle
out
push
jl
mov
pop
cmpsb
sub
rclb
popa
hlt
lods
jl
lret
in
ja
pop
out
inc
pop
lret
fdivrs
in
dec
ljmp
cld
imul
hlt
and
repz
cvtps2pd
xor
les
or
cli
gs
out
sbb
pusha
xchg
leave
pop
xchg
fsubrl
or
fstpl
aas
sub
cmp
cmpsb
lea
inc
bound
push
rclb
mov
sub
jne
in
data16
adc
xchg
mov
inc
dec
mov
mov
add
adc
cmpsl
or
and
idivl
daa
pusha
push
sti
popf
rcpps
xchg
mov
ss
mov
outsl
loope
lods
sbb
dec
mov
xchg
mov
out
mov
lods
loopne
dec
add
push
idivl
gs
push
lret
js
dec
mov
inc
mov
pop
mov
dec
fldl2t
stos
aad
xor
xchg
mov
test
js
daa
dec
cmp
sub
push
push
sbbb
push
insl
ja
fwait
mov
dec
jno
xor
jo
or
jmp
jle
adc
mov
into
icebp
mov
fucomip
xchg
fisttps
rcr
aad
sbb
xchg
stc
cmc
mov
mull
decb
jnp
push
or
mov
lods
push
es
int3
fistpl
pop
dec
add
stos
xlat
ja
mov
push
stc
jbe
pop
ds
mov
sbb
scas
test
sub
aaa
mov
mov
and
lds
or
repnz
std
push
aas
and
addr16
push
sahf
xchg
aaa
in
and
cwtl
imul
es
loopne
jmp
mov
pop
setle
xlat
pop
mov
add
push
mov
sub
test
xchg
adc
test
data16
xchg
repz
mov
mull
mov
sub
push
jae
sbb
xchg
mov
adc
hlt
aam
sbb
xor
add
sahf
sub
shlb
xor
cltd
das
pop
xchg
outsl
fs
fisttps
lods
push
imul
fdivrs
xchg
xchg
out
push
or
sbb
adc
cmp
sarl
xor
mov
and
fisttpl
or
int
out
addr16
lcall
movsb
mov
rep
fists
pop
xor
mov
adc
add
add
pop
loopne
push
js
in
scas
ficoms
fisttpl
lods
dec
imul
or
out
movsl
and
dec
das
push
pop
inc
push
cmp
arpl
mov
mov
outsl
xor
sarl
popf
adc
fiadds
pusha
call
adc
aam
clc
mov
fwait
lret
outsb
addr16
mov
loope
nop
adc
mov
loopne
subb
sbb
push
sti
or
dec
out
pop
testl
paddusb
bound
jge
hlt
mov
pushw
adc
bswap
xor
push
adc
scas
and
fdivs
inc
cmp
rcr
and
mov
mov
arpl
jge
mov
mov
addr16
fnsave
imul
cltd
cwtl
mov
fdivr
adc
enter
fsubrl
mov
icebp
movsl
mov
adc
jmp
dec
jbe
mov
ret
push
ss
addr16
subl
push
pop
pop
shrb
xchg
aas
stc
jg
pop
xchg
mov
or
push
mov
adc
push
push
and
fiaddl
aas
xor
shl
test
icebp
out
lcall
nop
sbb
aaa
jno
jae
xchg
nop
mov
mov
adc
shlb
fnsave
test
xlat
mov
sarb
mov
adc
add
push
add
push
dec
sub
mov
push
scas
xor
and
pop
adcl
xor
jmp
or
lods
fistpl
orl
cmp
mov
cmp
mov
mov
adc
addl
in
dec
sbb
bound
dec
inc
int3
mov
imul
jno
in
jo
ffreep
pop
test
mov
daa
sarb
jecxz
ret
aad
movb
ret
icebp
sub
aad
or
push
repnz
fadd
in
arpl
push
xchg
push
dec
inc
mov
xlat
push
movsl
dec
int3
pop
dec
lret
and
mov
or
rorb
push
lret
mov
jl
cmp
in
push
add
rorl
push
lds
mov
mov
mov
mov
inc
fidivl
inc
mov
inc
inc
or
sbb
scas
pop
sub
pop
ss
shrl
nop
add
repnz
test
and
jg
outsl
push
push
mov
into
xor
dec
mov
jmp
iret
cmp
jae
xchg
mov
repz
sub
iret
jl
jno
out
mov
mov
sub
in
sub
add
insl
cmp
mov
leave
adc
xor
aas
cmp
cmpsl
divb
leave
je
mov
and
test
imul
jmp
dec
mov
pop
xchg
sbb
test
loopne
sub
lea
dec
add
push
dec
out
sbb
or
push
push
pop
stos
push
dec
mov
mov
add
stos
jae
out
xlat
push
mov
stos
mov
push
xchg
adc
fsubrl
or
add
jp
ffreep
sub
pop
sbb
pusha
mov
ficoms
loope
dec
xchg
lret
jns
push
lea
cmpsb
push
addr16
push
push
hlt
popf
pop
jb
push
hlt
rorb
pop
cmc
leave
lea
xchg
js
negb
push
dec
nop
aaa
mov
leave
add
pushf
icebp
mov
cmc
shrl
mov
adc
sarb
icebp
mov
ret
cld
aas
gs
test
push
sub
jmp
sbb
lret
cmp
stos
outsl
mov
mov
stc
adc
mov
popa
cmp
and
add
inc
out
mov
and
sub
xchg
push
mov
dec
incl
dec
mov
in
cmpsb
jb
js
insl
mov
cmc
lea
sub
sub
mov
lret
adc
nop
push
ss
cmpb
add
stc
cmp
mov
jnp
pop
inc
xchg
loopne
in
ja
ficoml
dec
fdivl
repz
pop
lret
testl
int
xor
mov
jg
mov
mov
rclb
test
mov
shrl
add
jle
dec
ds
lahf
jle
push
pop
xor
je
sbb
push
jge
loopne
mov
and
mov
ss
clc
addl
or
sbb
sbb
add
pop
cmc
xor
fnstenv
outsl
dec
jnp
loope
inc
test
mov
sarl
scas
mov
pop
jecxz
sahf
dec
popa
in
dec
daa
adc
mov
sbb
pop
mov
jg
jge
fisubs
xchg
xor
adcb
loope
push
xchg
jb
mov
push
lock
insl
mov
or
rcll
adc
mov
dec
fwait
push
aaa
int
push
push
iret
sub
out
clc
in
cmc
cmp
lcall
pop
cmpsb
jmp
pop
xchg
and
popa
dec
jg
fcmovbe
mov
adc
pop
xchg
lds
dec
adc
call
fwait
stc
std
outsb
push
in
movsb
sahf
bound
cmc
adc
test
xor
loop
push
stos
lods
popf
jecxz
mov
imul
push
xor
scas
out
lret
lock
mov
cmp
iret
inc
push
inc
out
lcall
stc
cmpl
je
pop
cwtl
adc
or
lret
ffree
std
mov
pop
movsl
add
stos
push
int
pop
repz
push
lcall
jne
lret
lcall
cltd
pop
mov
ret
call
sub
cmp
xchg
xlat
fcom
popa
mov
repz
gs
leave
enter
out
es
repz
xchg
push
out
xchg
rol
stos
fnsave
daa
stos
adc
lods
or
pop
ret
jge
insb
into
mov
mov
scas
fadds
mov
aam
add
rclb
dec
add
cltd
dec
xchg
jns
movsb
dec
xchg
dec
das
stos
mov
and
sbb
gs
push
mov
mov
adc
aad
fcmovu
repnz
lods
loope
insb
iret
or
stos
and
push
sbb
aas
adc
sub
cmp
sbb
xchg
aas
dec
lock
or
ljmp
and
xchg
push
in
add
pop
mov
xor
pop
jbe
cmp
inc
push
test
lds
xor
pop
push
mov
mov
mov
imul
adcb
push
loop
cmpb
or
sbb
js
xlat
and
cmp
aas
pushf
sbb
out
ds
jno
mov
lret
cmpsb
jb
xchg
sub
aaa
jbe
mov
or
and
call
dec
mov
cmp
push
enter
popa
dec
mov
sub
iret
lret
jne
ret
push
outsb
xor
arpl
jno
adc
ret
dec
mov
repnz
mov
cmp
sti
mov
jno
and
ss
movl
adc
pop
jl
mov
pop
or
inc
jp
push
cmp
sahf
sarl
rclb
ret
call
add
jl
cs
dec
lret
test
or
xchg
in
mov
mov
mov
cmp
and
mov
call
fiadds
notb
ss
int3
cmp
lret
adc
movsl
jo
dec
and
push
call
or
insl
int3
sahf
clc
stos
sbb
icebp
pusha
mov
adc
jg
adc
scas
mov
jg
add
loopne
in
jl
sbb
movl
xchg
loope
rorb
mov
mov
xchg
sti
out
sbb
jb
sbb
bound
push
xchg
sub
cmpsl
test
jecxz
ja
and
fwait
push
ret
pop
mov
inc
fcmovnu
sub
jo
int3
pop
jp
enter
cmp
ja
das
adc
mov
out
dec
xchg
loop
sub
cmp
hlt
lock
testl
sbb
cmp
jecxz
mov
sti
xor
sti
sbb
mov
add
xlat
inc
xchg
xor
xor
mov
repnz
lds
pop
or
hlt
out
dec
jno
pop
scas
cmc
cmp
inc
sub
lea
or
scas
push
jle
xor
lods
xor
mov
stos
dec
or
sbb
loope
fcmovnb
push
push
mov
inc
and
sub
test
gs
test
jg
in
push
cmp
rclb
pusha
pxor
das
pop
pop
pop
mov
enter
dec
xor
test
or
pop
mov
cmp
mov
jl
cltd
ret
test
lds
scas
and
adc
push
push
dec
mov
mov
adc
data16
ret
dec
pusha
dec
lsl
cmp
pop
sbb
dec
mov
mov
gs
shlb
sahf
mov
scas
lock
and
sub
adc
sub
push
mov
arpl
ja
sub
add
push
dec
mov
push
mov
push
mov
or
int
push
loope
xchg
adc
push
fs
inc
and
std
loope
mov
out
add
dec
shlb
xchg
or
clc
mov
cmc
push
aas
mov
aaa
pop
orl
addr16
push
sub
in
xor
sahf
jl
stc
out
test
std
hlt
loopne
mov
fsubs
int
sub
pusha
popf
xchg
lret
je
inc
jns
adc
add
push
and
dec
hlt
faddl
push
adc
test
repz
out
or
add
jns
lea
shrb
jl
pop
jbe
ja
sub
mov
sub
mov
xor
mov
popa
xor
subl
std
cmp
dec
inc
insl
adc
in
ror
mov
mov
insl
sbb
push
dec
pop
ljmp
pop
xor
outsb
mov
daa
pop
fiadds
and
lods
adc
fcmovnu
ds
xchg
lds
shrl
xlat
push
mov
stos
mov
outsb
xor
outsb
push
mov
cmpsl
sbb
movsb
mov
dec
es
cmp
jns
pop
sub
pop
in
push
jl
addr16
lods
std
push
mov
push
loop
dec
js
jecxz
rorl
dec
mov
jl
dec
mov
push
shll
mov
shll
dec
and
int
inc
inc
xlat
sbb
lds
push
in
leave
je
jns
xchg
jo
sbb
dec
ret
les
ficomps
test
cmc
in
sbb
das
inc
mov
add
cmp
shll
insb
jb
jecxz
lea
es
jae
enter
fisubrl
lods
jle
mov
cmp
add
nop
psraw
sbb
sti
cwtl
data16
and
aam
cmp
dec
ret
int
gs
dec
testl
fucomip
je
sbb
or
sahf
imul
mov
lahf
inc
inc
pusha
add
cmpsb
jb
sbb
stos
fsts
cmpsb
scas
jle
xchg
insl
inc
bound
and
ret
test
mov
inc
leave
fwait
fwait
mov
bound
mov
fwait
stc
push
test
sti
adc
sub
xor
jl
dec
cmp
lahf
mov
fprem
inc
cli
cmp
sbb
xlat
dec
mov
dec
jp
pop
stos
fistps
dec
inc
in
push
sbb
insb
sbb
sbb
push
push
cmp
xchg
pop
push
and
cmpsl
inc
or
xchg
shrb
or
push
mov
sub
ret
adc
jne
pop
loopne
push
sbb
push
test
pop
add
add
pop
icebp
pmaxub
and
cs
pop
mov
sbb
clc
or
jmp
cli
cmp
fldl
out
pop
sarl
adc
daa
pop
add
clc
fidivs
push
push
jbe
pop
mov
stc
mov
push
and
bound
outsb
in
add
inc
jg
cmp
jbe
push
shll
neg
mov
mov
sbb
stc
inc
cmp
dec
add
inc
xor
cmp
popa
in
mov
push
test
insl
lcall
insb
mov
inc
add
push
scas
cmp
loop
pusha
dec
xor
mul
mov
sahf
scas
std
push
adc
pop
xchg
adc
pop
repnz
mov
js
xorb
xchg
gs
jl
adc
insb
jecxz
mov
lcall
outsl
jb
data16
adc
in
in
jae
int
mov
push
js
cwtl
xchg
lret
push
adc
dec
shrb
clc
pushf
or
dec
andl
mov
fldcw
icebp
push
and
inc
mov
dec
add
call
push
mov
ja
fcoml
mov
add
mov
dec
dec
jecxz
and
out
cmp
or
loope
das
inc
loop
and
lret
sub
mov
lods
or
jp
nop
test
adc
push
testl
add
repnz
add
inc
call
mov
test
lea
mov
cmp
xor
mov
cmp
sti
add
dec
in
and
adc
jnp
mov
jbe
pusha
loope
mov
inc
mov
outsl
es
fiaddl
movsb
sub
enter
hlt
or
jecxz
fistl
push
je
jno
jl
adc
int
sub
jle
data16
sarl
aaa
roll
fwait
xor
fistps
or
lea
cli
or
xchg
push
icebp
mov
push
das
frstor
xor
cmp
mov
or
xor
sbb
int
test
cmp
enter
int
push
mov
sub
insb
clc
cmp
push
cmp
sbb
out
adc
js
mov
pop
xor
pop
cmp
jmp
mov
push
push
outsb
divb
pop
pop
push
push
inc
push
push
iret
bound
dec
cli
or
sub
or
leave
imul
mov
xchg
lea
sbb
cmpsl
mov
clc
pop
mov
ret
xchg
cli
stc
sub
mov
sub
in
outsb
mov
mov
mov
inc
test
aam
jbe
cmp
cmpsl
rcll
xchg
or
fcompl
pusha
out
xchg
mov
xchg
adc
out
enter
fsubrp
mov
dec
sub
stc
xorb
movsb
mov
and
cmp
inc
sbb
jmp
jp
push
pop
cmp
movsl
loope
xor
pushf
jb
outsl
lods
rorl
sahf
or
outsb
inc
gs
lds
add
cmc
mov
f2xm1
pop
sub
push
cmp
add
pop
repnz
jbe
cmp
loopne
add
data16
mov
jecxz
ret
dec
sahf
popa
stos
jno
nop
faddp
or
insb
nop
fisttpll
outsl
xchg
push
xchg
jmp
cltd
jl
ja
inc
andb
xor
pop
dec
jne
imul
sub
mov
sub
jg
pop
pop
pop
mov
pop
sub
and
xchg
in
mov
sahf
sbb
pop
xchg
jb
ret
popf
insb
xlat
xlat
add
mov
ficomps
pop
mov
jo
inc
adcb
divl
ror
inc
mov
jle
ret
lret
leave
in
or
add
xchg
xchg
xor
pop
out
mov
into
mov
lods
daa
mov
test
pop
aam
xchg
jo
sub
sbb
sbb
ret
pop
inc
cmp
mov
cli
mov
into
jae
adc
adc
adc
shlb
lahf
cltd
cmp
jmp
adc
in
jmp
dec
mov
out
xor
test
add
push
test
sub
sbb
and
fildll
sub
stos
sar
mov
loop
pushf
xor
adc
inc
sbb
xor
cmpsb
aas
sti
pop
sarb
jnp
sbb
ds
mov
sti
jl
inc
adc
push
mov
adc
in
add
hlt
insl
lods
inc
adc
xchg
cltd
or
push
mov
inc
gs
subl
mov
repz
sbb
les
negb
push
adc
pop
cmp
xor
aaa
pop
repnz
pop
clc
jl
mov
jae
mov
mov
sbb
pop
lea
notb
mov
dec
into
xlat
adc
push
sbb
dec
push
cmp
jne
test
scas
fmuls
and
repnz
add
fcmove
loopne
mov
ja
mov
xchg
addr16
cmp
add
add
pop
jmp
stc
inc
mov
loope
mov
ja
jbe
mov
shlb
add
jmp
je
or
mov
or
sub
mov
aaa
lds
mov
fdivp
test
sahf
decl
push
mov
mov
adc
ret
vcvtdq2pd
adc
lock
sub
movsb
cmc
lock
bnd
sbb
out
sbb
dec
jle
sarl
push
sbbl
pop
dec
dec
push
jo
lcall
adc
xchg
fldcw
jg
into
repz
cmp
pushf
or
mov
jl
pop
pop
or
add
test
jnp
and
sub
in
or
bound
mov
lds
and
xchg
popa
add
lock
xchg
nop
leave
cmpsl
push
bound
hlt
out
mov
dec
or
sub
seta
sbb
icebp
lahf
ljmp
mov
icebp
stos
lahf
int3
mov
mov
jne
cmp
pop
jp
rclb
repz
and
pop
je
clc
sarb
test
add
dec
call
add
ljmp
mov
dec
iret
ret
adc
adc
testb
push
pushf
scas
sti
les
jmp
es
stc
repnz
adcl
cmp
jae
mov
xor
lahf
xor
pop
and
pop
shrl
inc
pop
insl
arpl
out
or
or
jnp
or
and
pop
mov
call
mov
mov
mov
les
mov
mov
call
mov
mov
jns
loop
pusha
push
pop
arpl
sbb
cs
pop
daa
push
add
or
sbb
jo
push
sub
fstpt
sub
push
sub
dec
mov
mov
int3
iret
jp
and
into
stc
mov
loopne
dec
xlat
sub
subl
jnp
mov
add
ja
mov
iret
add
movsl
enter
sub
dec
xchg
aaa
sarl
pop
lret
or
mov
test
in
ret
mov
ljmp
outsl
rolb
in
aad
push
and
mov
add
inc
xchg
cmp
fstl
pop
xor
push
mov
xchg
rcr
cmp
scas
imul
or
dec
xor
les
sub
insl
sub
cmp
push
jnp
dec
mov
outsb
rcrb
jns
jle
jmp
rcrb
fstpt
sahf
inc
or
fs
je
clc
and
stos
fs
ficoml
fsubrs
pushf
and
xchg
adcl
jl
loopne
jp
dec
push
test
pextrw
or
dec
add
insb
in
add
lret
mov
push
push
ss
mov
in
pop
jg
adc
enter
pop
sbb
sahf
daa
sub
inc
icebp
shll
cmpsb
pop
jle
cld
cli
sahf
sub
lds
loop
inc
pop
mov
cmp
out
fcmovnbe
lret
inc
cmp
xor
dec
mov
push
popf
mov
jle
test
cmc
in
add
loope
arpl
jns
cli
xor
popa
popa
jg
jne
pushl
inc
ja
loop
jp
mov
jecxz
fsubs
fldt
imul
out
and
mov
push
mov
leave
aad
or
jne
push
xchg
and
aas
jne
gs
push
dec
inc
cmpsb
outsl
orb
hlt
adc
hlt
and
sub
and
pop
push
xor
xchg
and
mov
pusha
ds
imul
lcall
pop
sbb
cs
lods
add
aad
add
fwait
scas
inc
or
jbe
add
cmpsl
mov
xchg
lds
sbb
xor
or
pop
adc
jae
mov
push
cltd
and
negb
xor
mov
iret
cmpsl
scas
loopne
iret
and
or
xorl
ja
xlat
clc
cmp
fwait
out
adc
pop
loopne
aad
xor
fadd
mov
pop
pop
pop
lods
mov
ja
and
das
outsb
es
adc
inc
loopne
imul
push
pop
mov
sbb
fwait
imul
sbb
cmp
lcall
pop
test
jns
call
inc
xchg
outsb
jbe
inc
aas
pop
lret
or
push
test
dec
in
xor
in
icebp
mov
stos
lods
push
mov
sbb
sahf
mov
sbb
sub
movl
pop
push
inc
lret
mov
or
mov
in
mov
lahf
fiadds
inc
push
es
stc
cmp
adc
insb
sbb
insl
int3
out
mul
lods
mov
adc
movsl
dec
lods
sub
aas
subb
cmpsb
ljmp
call
shrb
mov
jb
aaa
lods
xchg
push
int3
add
or
insl
cmp
ret
repz
gs
sbb
add
jl
xchg
jb
arpl
inc
lret
xchg
hlt
mov
dec
mov
cmp
loop
inc
inc
push
pusha
dec
stos
cld
sub
popf
add
xchg
into
mov
bound
pop
leave
and
pop
ja
lea
jno
jge
dec
cmp
pop
lea
outsl
xchg
lods
and
mov
jb
cmp
or
int
and
xor
pop
imul
insb
jne
sbb
pop
fwait
test
cmp
cmp
movsl
pushf
mov
shl
xor
and
push
xor
int
mov
pop
in
jb
std
gs
mov
fisttps
jo
orb
std
xor
pop
pop
cmp
pop
bound
clc
mov
es
jbe
in
push
dec
fwait
gs
cltd
cmpsl
jge
xchg
push
or
in
addr16
test
cmp
mov
cmp
xor
pop
arpl
and
hlt
jne
or
loop
mov
inc
and
subb
xchg
les
sbb
inc
test
lods
or
repz
jp
xchg
mov
and
jge
jno
cs
iret
mov
or
dec
popa
sahf
gs
push
adc
test
cmp
cmp
into
fdivs
pop
jne
frstor
scas
push
fs
jmp
mov
jae
and
negl
iret
dec
imul
stc
mov
jae
fmul
fsubr
fstpl
movsb
pop
insb
fbld
movsl
or
rcrl
push
dec
ja
xchg
cmp
fists
mulb
jno
lea
sti
jmp
push
push
sbb
fimuls
dec
pop
dec
jae
test
test
and
push
mov
mov
addb
aaa
ja
nop
lds
xchg
mov
lret
test
outsl
ficompl
pop
divb
ret
out
call
and
inc
mov
sub
mov
add
popa
jmp
movsb
mov
loopne
rcrl
sbb
mov
scas
lahf
sub
stos
sub
xor
adc
insl
push
jl
loop
sub
lods
out
mulb
into
and
jl
bound
mov
adc
inc
mov
dec
jecxz
cmpsb
lahf
les
fsubr
ficoml
aas
mov
mov
sahf
push
fucomip
xor
push
mov
scas
lahf
mov
stos
loopne
or
fidivrs
lcall
jmp
jle
cmp
lcall
mov
cmpsb
adc
jmp
rcrb
inc
xchg
cmp
popa
mov
nop
js
mov
pop
and
lds
shlb
and
push
or
or
aaa
aad
pushf
shl
fcompp
cmpsl
int
cltd
inc
xchg
pop
scas
mov
jecxz
push
outsl
mov
jecxz
insb
dec
ss
gs
xlat
cwtl
dec
mov
test
add
adc
dec
cmp
test
mov
imul
jne
or
imul
repnz
cmp
mov
clc
add
mov
fisubl
mov
mov
jo
inc
rcl
mov
pop
test
mov
push
pop
mov
add
jl
into
add
fs
fisubrs
dec
and
mov
rcrl
pop
mov
dec
pop
std
pusha
xor
push
or
scas
sub
test
dec
mov
imul
inc
out
test
jae
pop
popa
push
ret
inc
call
jl
into
repnz
push
xor
into
adc
mov
inc
lahf
call
pop
icebp
cltd
mov
xor
dec
pop
pop
cmp
jnp
jge
fcomps
mov
inc
daa
ret
add
push
jnp
xor
and
lret
add
out
or
adc
push
cmp
mov
je
pop
mov
jo
jg
pushf
negl
dec
xchg
pop
mov
loope
xlat
jle
bound
sub
mov
cmovae
sets
adc
sbb
push
movb
jmp
ret
loop
xor
enter
xor
xchg
popa
xor
and
shll
clc
dec
hlt
adc
sbb
dec
or
and
int3
push
cmpsl
or
jnp
std
insb
adc
sub
or
push
or
mov
jo
cld
out
xchg
cmc
xchg
test
inc
sub
lret
mov
stos
pop
sub
lret
mov
imul
dec
xor
jle
fcoml
mov
mov
loopne
mov
inc
inc
dec
xchg
sbb
inc
fstpt
es
xor
mov
pop
cmp
lahf
dec
cltd
xor
pusha
rol
out
in
fdiv
mov
addr16
test
shrl
imul
mov
cmp
aad
icebp
cmp
xchg
cli
xchg
xchg
and
gs
int
cmpsb
jp
into
pop
scas
pop
je
neg
pop
push
xor
jle
std
movsl
mov
mov
cltd
lods
nop
lea
orl
outsl
movd
rcl
dec
xlat
loopne
xchg
int3
and
dec
jecxz
push
in
in
jne
out
pop
fmuls
rcrl
push
or
xchg
push
mov
aas
mov
aad
mov
shll
cmovnp
adc
pop
adc
sbb
dec
sbb
add
in
arpl
sbb
shl
pop
push
and
leave
adc
bound
lods
inc
adc
mov
pop
loop
push
in
cmp
inc
jg
cs
dec
repz
push
nop
sahf
xchg
dec
mull
mov
bound
in
pop
push
test
inc
std
loopne
jne
sbb
sub
mov
adc
fisubl
mov
sbb
or
push
add
jl
addr16
sub
imul
adc
mov
push
and
incb
xchg
sbb
scas
push
movsb
hlt
jbe
jo
imul
pop
and
jne
int3
xor
dec
cmp
xchg
xchg
add
test
adc
imul
loope
adc
xor
inc
and
fmuls
fiadds
mov
sti
popa
mov
cmpps
pop
loopne
mov
sbb
inc
xor
movsb
cmp
pop
ret
call
push
pop
mov
jb
aaa
pushf
das
test
and
adc
xorb
sub
cmp
loopne
jge
movsb
mov
cmpsl
pop
jl
shll
inc
jns
cltd
stc
arpl
push
push
jecxz
lahf
jmp
or
adc
pop
sbb
cmp
outsb
test
inc
push
daa
push
dec
movl
adc
mov
frstor
clc
mov
xchg
xor
js
inc
inc
mov
mull
pop
xchg
xor
or
sbb
adc
jl
inc
or
aaa
lcall
cmp
inc
lock
std
jg
imul
mov
and
mov
and
push
mov
cmpsb
dec
mov
cmp
fs
dec
inc
jle
sbb
jnp
mov
mov
popf
jl
and
movsl
test
jnp
dec
jb,pn
inc
jp
and
cli
movsb
popf
test
jg
add
in
in
ja
mov
daa
add
mov
add
je
jbe
ficompl
repnz
movsl
inc
adc
add
dec
adc
sbb
sub
outsl
adc
xor
bound
mov
dec
les
stos
cmp
popa
pop
scas
lods
mov
pop
xor
pop
loopne
push
inc
adc
call
add
mov
fdivrl
mov
mov
add
loop
ljmp
push
mov
sbb
jmp
orl
inc
out
push
daa
addr16
scas
std
jge
mov
mov
fdiv
cmp
add
jbe
cmp
dec
pop
adc
sbb
xor
or
lods
ss
mov
xor
xor
leave
ljmp
dec
ss
clc
jmp
mov
clc
mov
inc
jo
mov
pop
aam
cmp
ss
stos
dec
adc
adc
pusha
jne
aaa
sbb
rcrl
cld
out
stos
cmpl
xchg
xor
in
jno
cs
sbbl
pop
pop
sub
es
jmp
stos
repnz
push
jg
lcall
daa
mov
xor
pop
cwtl
xchg
test
ss
mov
out
enter
jae
mov
in
cltd
and
sub
lods
inc
fcompp
adc
pop
sub
ljmp
inc
sbb
or
xchg
and
cmp
push
shrl
pop
jae
dec
pop
testl
add
sbb
dec
cmpsl
inc
stos
jno
xor
call
in
add
insl
sub
pop
jo
push
or
jecxz
pop
xchg
sub
add
jnp
imul
jge
sbb
fnstsw
adc
dec
out
scas
jno
nop
mov
mov
mov
mov
xchg
jno
mov
and
arpl
into
add
rcll
mov
ret
and
aas
push
fisttps
or
pop
out
xchg
lds
mov
dec
mov
inc
xchg
xor
ljmp
xor
arpl
push
cld
dec
test
add
pop
clc
addr16
ss
mov
inc
fadd
mov
vcmpps
call
pop
fwait
xchg
fcmovnu
mov
mov
and
jg
mov
les
mov
dec
sub
mov
fwait
inc
pop
insb
jnp
dec
add
faddp
aam
pop
sub
inc
adc
sbb
push
and
cmc
int3
shl
inc
fwait
sbb
repz
xchg
and
test
repz
fidivrs
adc
adc
aam
repnz
push
push
pop
popf
dec
fs
jecxz
jmp
push
add
jge
lret
and
pop
lret
loop
in
and
mov
pushf
push
inc
cli
mov
or
loope
jmp
sub
adc
jnp
gs
jbe
sub
pop
inc
cwtl
aam
add
ja
push
push
adc
adc
jmp
out
add
loopne
jo
out
push
fwait
push
mov
fstps
adc
pop
pop
cmc
fstp
pop
push
in
fstpl
rclb
shll
inc
sbb
into
lea
stos
jecxz
mov
in
jne
mov
rol
js
test
fidivrs
push
lods
cwtl
orl
xchg
adc
clc
mov
push
mov
fistps
jns
mov
inc
stos
insl
jle
addr16
xor
ret
jmp
xchg
fidivrl
xor
fwait
stc
xorl
iret
mov
push
lea
lcall
sbb
jo
pop
dec
in
imul
and
enter
cmpsb
pop
or
icebp
sub
sub
icebp
ds
push
sub
cmp
loope
jge
cmp
xor
lahf
sti
or
jne
dec
and
mov
sbb
sbb
jmp
imulb
sbb
stos
push
and
cmpsb
xlat
mov
pusha
adc
adc
mov
mov
call
mov
xchg
add
xchg
pop
xchg
or
idiv
xchg
test
cltd
push
jmp
lret
push
fstp
rcrl
ja
cmp
pop
idiv
mov
in
or
shlb
lods
test
call
nopl
stos
aam
mov
scas
cli
cmp
ret
mov
insb
xor
fisubs
dec
mov
xchg
xchg
sbb
sbb
xlat
push
out
add
fucomp
inc
arpl
add
pop
cmp
and
adc
cwtl
pop
add
loope
lods
push
mov
mov
mov
xchg
or
inc
cmpsl
fdivs
inc
incb
or
mov
and
jbe
push
bt
stos
pusha
pop
mov
jb
inc
call
lea
xchg
cmp
ss
xchg
mulb
jmp
xchg
mov
out
add
mov
negb
push
sahf
dec
insl
xchg
xchg
xchg
or
push
pop
insb
xchg
add
js
leave
pop
jno
xor
popf
in
xlat
xchg
add
lea
test
and
push
fidivrs
mov
in
cmp
daa
out
pop
das
outsb
rcll
mov
in
dec
rclb
test
inc
dec
addl
aas
jp
inc
xchg
push
xor
sub
mov
mov
ror
xchg
js
xchg
das
roll
outsl
push
scas
scas
les
dec
stos
xchg
shl
sahf
fscale
pusha
ljmp
call
in
inc
rol
xor
pusha
xor
cwtl
and
ss
in
mov
sub
push
inc
inc
pop
jns
les
pop
mov
pop
dec
addr16
cld
add
loop
loop
xor
pop
or
add
not
cli
popa
lods
xchg
dec
mov
pop
and
inc
pop
out
pop
xchg
sub
fs
hlt
mov
lds
outsb
cmp
cmpsb
mov
mov
mov
sarb
mov
adc
xchg
dec
sub
mov
dec
or
aaa
cmp
enter
lret
pop
jae
loope
rclb
fst
aad
lods
daa
das
cmpsb
add
in
movsl
jge
adc
mov
movsb
cmpsb
cmp
dec
out
test
sbb
mov
cmp
push
push
xor
orl
add
sub
xchg
test
scas
jo
gs
cmpsb
out
and
jecxz
xor
jo
fcoms
cli
jge
pop
and
pop
fdivl
or
mov
dec
out
out
cmc
cmp
sarl
pop
jb
call
inc
shll
lcall
ficoml
and
data16
push
lea
daa
in
adc
or
loop,pt
icebp
idivl
push
xchg
mov
pop
data16
add
repz
sbb
sarl
or
push
add
cmpsl
mov
mov
jmp
leave
and
das
fisubrs
test
sub
push
add
inc
push
xchg
jle
repnz
lds
inc
inc
into
and
lret
mov
pop
lret
adc
stos
inc
or
aam
lds
mov
fisubl
aaa
sbb
sbb
and
insl
push
scas
mov
push
call
les
out
cmp
cmp
mov
mov
sti
and
jae
cmp
test
jp
add
jg
cmp
sub
test
pop
rolb
hlt
dec
sbbl
test
ja
xlat
mov
mov
add
addr16
mov
adc
mov
mov
ret
ret
sub
stos
mov
jb
fnstsw
idivl
mov
pop
insl
xor
sub
pandn
imull
cld
int
fsubp
xor
add
sub
insl
aaa
icebp
cli
and
fimull
dec
popf
aad
cld
sar
dec
dec
iret
es
iret
mov
mov
lahf
out
js
lcall
scas
xor
xor
pop
or
sar
dec
mov
lret
lret
xor
mov
clc
mov
cmp
in
and
or
decl
sub
mov
sub
shrb
cmp
popa
jnp
xor
or
fnstenv
or
sbb
adc
dec
xchg
mov
mov
popf
ficoms
rcrb
fidivl
adcb
xor
ret
outsb
int
call
mov
add
mov
sbb
adc
xor
xchg
adc
scas
dec
scas
jp
mov
jne
daa
and
sub
sti
dec
sbb
fstps
xchg
xor
push
mov
lret
pop
cmp
pop
adc
xlat
imul
xor
jge
enter
addr16
shll
clc
iret
inc
mov
js
jmp
dec
outsl
fwait
lret
mov
cld
xchg
mov
sbb
pop
lret
mov
cmp
lock
gs
pop
sub
dec
repnz
jne
push
imull
xlat
clc
fcmovbe
movsb
cmp
jp
rorb
aad
sub
and
imul
fs
cmp
int
add
call
mov
mov
inc
mov
pusha
jb
test
push
mov
rorb
dec
jp
xor
xchg
out
push
mov
add
push
shll
inc
arpl
push
test
ja
xor
or
fsubrs
mov
add
pop
cmp
xor
push
pusha
mov
inc
xchg
xor
insl
push
shlb
push
xlat
into
dec
or
pop
dec
mov
mov
out
into
mov
movsb
sbb
xchg
or
fwait
inc
popf
fistl
pop
repnz
cmpl
jae
fs
iret
xchg
cld
fstl
pop
out
jmp
sbb
out
bound
lret
xchg
push
repnz
jge
mov
out
test
scas
xor
mov
cmp
fldt
sahf
shrl
mov
sti
xor
mov
sar
mov
push
mov
shrl
add
mov
mov
cmp
or
sbb
loopne
push
and
mov
adcb
in
ret
pop
cltd
inc
and
sbb
xchg
test
ds
mov
mov
mov
pop
repz
xor
dec
or
daa
push
pop
rorl
out
es
push
dec
or
sub
jne
sbb
push
mov
movsb
jg
in
lret
clc
not
fcmovnu
sti
dec
or
dec
test
lret
or
pop
sbb
mov
fnsave
mov
push
jle
mov
sarl
ret
bnd
rorb
jp
popa
repnz
xor
xchg
jbe
cmc
pop
mov
jge
aas
hlt
ljmp
outsb
add
push
loopne
push
test
push
ret
add
and
andb
ss
mov
into
cmp
dec
mov
jo
sub
cwtl
jnp
mov
xlat
jg
jb
out
js
repz
xchg
pop
verw
loop
xor
add
enter
outsl
dec
push
jbe
push
in
test
daa
sub
jb,pt
sub
aad
and
xchg
adc
sub
dec
jecxz
out
sbb
mov
push
push
cs
dec
jmp
cmpsb
sahf
dec
mov
dec
sub
push
mov
popa
push
movsl
lret
addr16
stos
xor
fidivrl
out
adc
cmp
inc
mov
push
jns
fwait
xor
cmp
cmpb
sub
mov
mov
test
jo
fsts
push
cltd
lcall
sbb
lret
cs
sub
xchg
push
nop
jo
and
or
push
lds
aas
ja
call
scas
fdivrl
stos
add
test
sbb
ja
sbb
cmp
lcall
push
adc
clc
mov
pop
sub
in
jb
jo
jecxz
movsl
xchg
and
stos
cld
js
mov
shrl
and
dec
or
ja
push
icebp
cmp
jb
imul
sub
in
ret
sar
push
test
xchg
pop
sub
cld
fwait
mov
mov
jp
push
inc
mov
int3
dec
stos
fcmovb
out
std
popa
incb
push
adc
out
insb
das
imul
xor
xchg
aas
sbb
enter
test
dec
push
out
xor
ds
sbb
fsts
dec
data16
scas
orl
jbe
or
mov
sti
adc
push
int3
out
jb
add
nop
aad
and
sub
repz
adc
pop
pop
bound
jae
sbbl
and
sub
mov
aam
and
sbb
jnp
mov
popf
enter
mov
dec
lods
stc
or
push
sarb
scas
ds
or
add
jg
add
dec
jg
mov
andb
imul
sub
cmp
pop
or
xor
cmp
jae
insl
inc
jl
mov
insb
je
movsl
mov
xor
movsl
sub
shlb
outsl
frstor
fisubl
fucomip
xchg
inc
ljmp
addl
lret
mov
das
xor
sub
sbb
add
fwait
push
rcrb
stos
icebp
xor
pop
sarb
scas
mov
mov
add
rolb
bound
pop
movl
mov
adc
les
mov
adc
scas
les
jb
das
xchg
and
jmp
das
js
pop
pop
movl
out
scas
mov
fwait
in
dec
rorl
push
xor
rorb
sarb
js
outsb
popf
inc
sub
in
pop
mov
cltd
dec
mov
mov
adc
scas
cmp
jb
cltd
test
mov
lret
sbb
cld
sub
jnp
in
fld
das
loop
ss
leave
lahf
mov
nop
es
pop
and
sbb
jp
rolb
fdivrl
push
pop
or
andb
push
dec
cmpsb
jecxz
out
pop
das
stos
aaa
fldt
mov
movsl
xchg
and
shlb
inc
inc
push
and
mov
mov
dec
fisttps
fcomi
mov
inc
ja
lcall
mov
jb
mov
lods
jle
mov
fdivs
ret
lcall
lret
ds
cmp
loop
bound
lsl
out
jb
gs
jae
enter
jle
mov
lahf
ja
push
clc
or
stos
and
pop
adc
push
xchg
fildll
xor
add
jno
xchg
and
fs
fwait
das
das
mov
cwtl
jge
stos
mov
cwtl
mov
lods
aam
popa
cmpsl
push
xor
je
add
jle
sbb
add
cmp
arpl
into
adc
mov
shl
jl
sbb
int3
push
jb
fstpt
js
imul
sub
fsubl
cmp
and
adc
push
icebp
mov
out
inc
push
xchg
into
push
ficoml
hlt
xchg
xchg
pop
sahf
push
adc
pop
shlb
push
in
adc
test
sbb
add
mov
sub
sbb
mov
jae
xlat
subb
dec
xor
mov
jno
arpl
cmovnp
xchg
lcall
repnz
mov
dec
subb
inc
dec
pop
cwtl
mov
mul
sub
jnp
repnz
or
sbbl
lods
sti
xor
fs
jmp
bound
and
test
mov
jo
jge,pn
mov
xor
test
push
in
xchg
cmp
mov
pop
pop
je
inc
jo
add
xor
out
cmpsl
jnp
out
jge
sbb
xchg
imul
push
xchg
cmpsl
jge
insl
leave
add
shrl
push
sub
xchg
jb
adc
push
or
jnp
jge
xchg
or
mov
or
loopne
je
sub
fidivrs
mov
ffreep
mov
or
std
lret
xchg
fsubs
push
imul
dec
adc
dec
pop
cmp
xchg
jecxz
shrb
orl
cli
xor
xchg
arpl
xchg
fmul
scas
es
imulb
loop
mul
sti
in
ljmp
inc
xchg
jp
jbe
iret
jmp
pop
popf
insb
push
push
mov
add
xchg
sbb
sarb
mov
repnz
js
stos
outsb
bound
pop
std
fwait
leave
flds
xchg
sub
shrl
loope
sbb
cmovnp
shlb
jae
sbb
addr16
add
int3
inc
xchg
jnp
mov
mov
jno
push
and
xchg
cmpsb
test
in
movsb
addr16
dec
adc
mov
and
sub
mov
cmp
mov
jbe
mov
cmp
cmp
fisubrl
cmp
mov
and
mov
rcl
jecxz
loop
jmp
fiadds
xchg
andb
sub
aam
ficomps
mov
inc
sti
mov
mov
cmp
and
pop
out
stos
scas
mov
pusha
jg
pop
fwait
pusha
enter
mov
dec
ljmp
or
pop
int
sbb
out
outsl
imul
ret
mov
rcrl
lods
sbb
cwtl
cmp
cmp
decb
pop
sbb
js
xor
lcall
stos
das
lods
imul
leave
enter
dec
leave
xchg
cs
mov
adcb
das
lret
scas
pop
fwait
pop
arpl
mov
jno
xor
sub
sbbb
cmp
test
popa
sbb
inc
sub
mov
aaa
jo
mov
pushf
push
cld
outsb
adc
pop
jle
jb
icebp
outsb
mov
loope
repnz
pop
ret
and
aaa
insb
mov
in
sahf
mov
sarl
jl
adc
adc
repnz
inc
sti
pop
sub
sub
jb
push
pop
dec
call
movsl
loope
mov
mov
xchg
sbb
iret
adc
outsb
cs
cwtl
push
dec
lret
xchg
cmp
cmp
push
mov
addb
jmp
mov
cmp
inc
push
in
int
pop
ja
rclb
cmpsl
sbb
jmp
push
popf
sub
cmpsl
flds
xlat
xchg
cmp
lods
xor
jg
test
pop
dec
inc
test
and
pop
push
dec
sub
daa
fs
pop
push
push
jmp
lea
jae
test
fstps
adc
bound
rcll
and
mov
pushf
dec
ffreep
mov
adc
call
inc
aam
aas
int
les
rolb
or
adc
pop
pop
xor
loopne
cli
shlb
aaa
imul
pop
shrl
push
pushf
cmp
add
jnp
mov
cwtl
stos
sub
lcall
lock
xchg
pusha
xor
test
dec
xlat
dec
std
fstl
dec
rcll
pop
add
nop
mov
jl
in
aaa
cltd
fwait
test
sub
std
add
aaa
add
jp
push
mov
in
jmp
adc
or
sbb
imul
xchg
mov
nop
push
addr16
insb
mov
sub
cltd
cmp
lock
xor
pop
fistpll
out
rcll
sbb
into
cmc
lcall
jnp
js
push
add
pop
les
outsl
jge
outsb
pop
dec
dec
mov
sub
inc
dec
in
in
mov
pop
push
nop
mov
xlat
stos
les
fs
sbb
and
ja
mov
add
xor
push
jecxz
mov
cmp
scas
popf
lock
jne
xchg
adcb
out
push
adc
jge
pop
mov
inc
pushf
js
inc
fdivs
dec
push
mov
call
aad
adc
inc
mov
add
push
lret
es
and
cltd
jmp
sbb
in
adc
or
subb
xchg
loope
mov
enter
popa
mov
pusha
bound
or
mov
shl
divb
mov
add
cwtl
jp
push
sbb
or
add
lods
cwtl
popf
repz
std
dec
leave
sbb
gs
xchg
mov
pcmpgtd
add
xor
adc
repz
mov
imul
daa
jb
mov
jbe
mov
jmp
test
lcall
sahf
push
pop
pushf
loope
dec
orl
xchg
jns
or
sbb
mov
sub
sbb
xchg
bound
push
dec
adc
dec
cwtl
cld
sbb
jl
shr
inc
fwait
adc
nop
adc
scas
jno
pop
leave
push
and
jo
inc
adc
divb
pop
inc
pop
xchg
fs
cmp
xor
ss
dec
data16
lahf
push
and
pop
notl
imul
mov
jmp
out
xchg
das
jmp
ja
sbb
xor
xor
jge
testl
js
add
jecxz
push
jp
into
pop
daa
or
insl
int3
jbe
loope
in
imul
in
add
stos
daa
push
mov
movsl
outsl
push
fcomp
loop
add
add
cmp
ret
outsl
xchg
add
sbb
mov
xor
dec
mov
mov
adc
xor
movsb
das
sbb
outsl
xchg
and
and
mov
cltd
shll
stos
sub
mov
lret
test
mov
ljmp
inc
orb
mov
hlt
sub
loop
cmp
and
ds
or
out
loopne
sub
xchg
xchg
sub
subb
lds
pusha
lods
and
popa
jbe
mov
and
sbb
fdivl
xlat
pop
daa
xchg
or
mov
jp,pn
clc
lea
in
push
inc
push
xor
adc
add
mov
loope
mov
sub
stos
pusha
jae
out
jge
xor
loopne
dec
lahf
pop
dec
mov
cmp
cmp
aam
xor
pop
add
push
popf
xchg
dec
adcb
in
shl
cltd
push
mov
push
push
bound
sbb
or
fsubrs
jg
outsb
aaa
sub
pop
lahf
divb
in
pop
icebp
push
aad
rcr
testb
xor
mov
and
jbe
cmp
ds
stc
jl
add
xor
cmp
or
or
aaa
pop
popa
dec
fistl
push
jmp
mov
outsl
mov
test
mov
test
add
xor
cmpsl
nop
mov
das
jge
mov
sbb
cld
fs
int
imul
cwtl
cmp
ret
cltd
cli
jb
arpl
testb
xchg
nop
jecxz
add
dec
xlat
stc
pop
xlat
roll
xchg
adc
or
lcall
xchg
jnp
cli
loop
adc
pop
mov
push
outsb
mov
add
ret
pop
ljmp
scas
mov
dec
push
test
xor
mov
or
cmpsl
cmp
ret
mov
enter
int3
dec
cld
sub
shlb
movsl
test
lock
test
fildll
or
and
sbb
add
xchg
fbstp
sarb
stos
dec
xlat
mov
sub
xor
push
pop
sub
jmp
or
or
cmc
mov
pop
adc
pop
jb
testl
enter
out
mov
mov
push
shrb
dec
and
add
cld
jl
popf
dec
pop
sbb
mov
divl
negl
call
adc
pop
and
stc
xor
dec
fmull
out
arpl
cld
add
insl
or
jle
pushf
mov
dec
xchg
aad
sub
xchg
jg
push
xchg
fstl
enter
add
push
fidivrl
lea
movsl
push
cmp
adc
aam
movsb
pusha
iret
insb
sbb
lods
lret
mov
lock
fidivrl
pop
sub
inc
mov
jo
dec
gs
xor
mov
outsl
adc
sub
jmp
mov
mov
sbb
mov
and
pop
add
lock
mull
sbb
pop
pushf
jge
push
insb
add
rcrb
xchg
call
and
aad
xchg
fcoml
xchg
push
icebp
lods
jp
xor
insb
movsb
cmp
push
hlt
mov
dec
push
es
sbb
jmp
add
sub
jecxz
int3
je
mov
pusha
mov
sahf
pop
iret
ret
sub
es
mov
push
jmp
ret
push
jle
sub
mov
mov
sti
test
add
clc
inc
cmp
add
lock
jne
cmp
icebp
dec
add
lock
jle
cmc
pop
sbbl
or
lcall
test
lret
nop
cmp
add
and
adc
cmp
out
mov
loop
popa
gs
sub
cmp
mov
flds
jle
popf
dec
xor
xlat
mov
or
dec
mov
add
fmul
fldt
adc
hlt
jl
sub
push
push
jne
popf
mov
dec
inc
push
xchg
mov
and
push
fstl
ja
sbb
cmp
cltd
stos
stc
push
call
fldcw
bound
adc
adc
mov
loope
stos
fwait
adc
arpl
and
jnp
loopne
sbb
mov
movsb
es
cwtl
mov
out
mov
or
je
xor
popa
adc
push
faddl
fmuls
jo
dec
pushf
sub
pusha
push
cmp
jb
add
mov
xor
jo
out
cmpsl
inc
dec
jmp
mov
inc
pushf
loopne
mov
cltd
shll
push
dec
in
adc
addr16
and
fadd
lods
push
xchg
xchg
mov
sub
push
adc
fldt
shrl
es
test
jo
dec
in
cmp
and
or
imul
xorb
jge
pop
mov
cmp
cli
mov
ret
mov
rcll
inc
dec
and
mov
popa
decl
mov
sbb
dec
cltd
or
jo
js
jge
mov
sbb
xor
or
jge
push
xchg
ss
stos
adc
cmp
mov
mov
cmp
mov
test
fimull
adc
and
sbb
mov
xchg
sahf
xor
data16
lea
movsb
outsl
test
sub
add
sbb
sahf
pop
or
mov
insl
adc
adc
and
les
inc
dec
push
lcall
pushl
mov
in
rcll
test
add
jecxz
mov
sbb
in
cmp
inc
cmp
pushf
xchg
daa
data16
ror
push
adc
popf
dec
in
gs
es
push
je
fdivl
push
inc
test
jg
mov
mov
xchg
int
pop
in
mov
stos
xor
es
aad
xlat
pop
ret
dec
mov
cmp
adc
lock
lret
outsl
push
ljmp
jl
cmpl
adc
fstpl
mov
xchg
dec
xchg
insl
sbb
sub
push
lds
dec
cld
fldt
add
pop
les
ror
dec
ficoms
and
mov
push
pop
pop
das
int
addr16
lahf
lods
pop
test
into
jbe
fwait
mov
push
cmp
and
lock
sbb
pop
pop
mov
and
adc
or
int3
add
xchg
pop
dec
jbe
icebp
iret
sbb
or
or
popa
stos
mov
jp
lea
sbb
dec
push
out
xchg
inc
xchg
mov
mov
das
add
mov
shll
les
push
jns
dec
jb
cmc
xchg
xor
pushf
dec
inc
ds
popa
sbbl
cmp
mov
push
cmp
out
loopne
mov
dec
rcl
add
jmp
les
iret
cs
jmp
lock
fistl
loope
dec
incb
mov
test
js
js
loop,pt
xor
cmp
xchg
jmp
jns
daa
adc
mov
fdivs
outsb
ja
inc
sbb
xor
dec
outsb
inc
out
adc
cmp
mov
dec
les
aas
inc
dec
repnz
fidivl
jae
loop
add
pop
lahf
repz
fdivrl
xchg
add
or
int3
iret
dec
cmp
jno
loopne
push
mull
pop
adc
sub
xor
lret
bnd
sub
push
or
dec
dec
fistps
push
or
push
push
mov
sbb
sub
movsb
mov
cmc
adc
jl
jmp
mov
testb
fucomi
outsb
movsb
loop
mov
rdpmc
jmp
mov
mov
pop
or
xor
iret
out
dec
mov
mov
dec
cmpl
test
lea
or
call
cmp
jbe
jp
pop
negl
dec
cmpsb
jg
int3
xor
and
push
nop
jns
inc
out
jnp
pop
test
daa
adc
adc
xchg
push
mov
push
sahf
leave
out
or
sub
es
pop
push
mov
data16
jmp
jns
and
sbb
lods
add
cmp
mov
lret
mov
dec
hlt
mov
xor
dec
xchg
and
leave
mov
fiadds
ret
mov
fwait
xchg
loop
mov
cmpsb
sti
movsl
insb
mov
mov
insb
pop
adc
push
out
and
adc
pop
addr16
adcl
sbb
inc
xor
and
inc
jge
push
mov
fisubl
xlat
cltd
mov
mov
inc
jcxz
ds
xchg
adc
call
es
mov
pusha
cmp
sub
xchg
iret
repz
mov
jb
shll
imul
dec
test
mov
pusha
pusha
or
xchg
pop
jecxz
imul
fs
fstpl
rclb
pop
lret
dec
je
jecxz
push
test
add
or
sarl
jno
mov
sub
cmp
sub
add
cmpsl
popf
cmp
cmc
ret
arpl
sub
push
icebp
jne
movsl
inc
inc
lds
rcrl
or
jl
xor
sbb
xchg
xlat
xor
hlt
sub
ss
sti
mov
loop
sarl
xchg
mov
lret
mov
test
out
jge
jl
int
fcmove
dec
add
lods
dec
clc
and
aas
cld
xor
test
fst
movsb
push
les
subl
mov
repnz
lock
adc
movsl
icebp
jecxz
lods
add
dec
jge
xchg
dec
push
push
sub
push
jg
push
xchg
outsb
dec
or
dec
lock
insl
lcall
in
lods
in
pop
cmpsl
add
or
xchg
inc
xor
add
cwtl
jl
inc
jle
add
popa
xchg
lahf
push
popf
inc
xchg
push
mov
loope
jle
sub
push
das
frstor
hlt
sub
mov
stos
insl
jg
leave
rcll
mov
iret
aas
popa
pop
cs
andl
fadds
add
dec
mov
jb
std
mov
or
addl
pop
ss
fsubrs
out
stos
jl
arpl
bound
mov
ss
dec
jbe
xor
stc
in
dec
das
ljmp
mov
ror
xchg
pop
lret
add
mov
mov
pop
cli
jg
jge
or
pop
ljmp
sbb
int3
xchg
and
inc
icebp
cmpsb
stos
add
sarb
std
and
sub
test
pop
aas
and
imul
jae
lods
rolb
rolb
stc
jb
push
mov
fidivrs
pop
cld
and
je
jp
insb
mov
mov
xchg
les
push
dec
mov
or
dec
pusha
pop
push
leave
xchg
inc
addr16
das
mov
pop
std
mov
mov
clc
aad
push
pop
mull
daa
shr
sbb
dec
testb
add
or
mov
in
inc
fcmovnbe
adc
and
stos
xor
xor
xor
mov
and
fistps
sub
mov
or
push
xor
inc
in
popf
movsl
mov
and
push
ljmp
cmp
dec
cmpl
or
jmp
and
test
and
mov
inc
cltd
cmp
jb
mov
mov
out
inc
mov
gs
pop
sbb
jmp
pushf
push
or
lahf
cltd
xor
cmp
pop
and
push
pusha
push
jmp
jae
xor
jbe
add
inc
loope
push
scas
test
mov
ret
out
xor
adc
mov
mov
inc
jmp
dec
adc
dec
mov
in
mov
inc
or
test
pusha
xchg
sbbl
lret
mov
aam
fdivrs
inc
ret
pop
mov
inc
loopne
insb
mov
icebp
imul
sub
dec
daa
jns
jbe
adc
arpl
xchg
sar
jbe
cmpsb
dec
les
cld
wbinvd
stos
pop
enter
fnstsw
xchg
test
ds
aas
repz
sahf
out
mov
jge
std
es
add
adc
call
stc
add
push
mov
sub
stos
cmp
lahf
hlt
aam
outsl
push
add
push
pop
cmpb
lods
mov
hlt
jo
xor
cmp
inc
mov
rorb
pop
xor
xchg
out
test
dec
xchg
pop
pop
mov
sbb
ret
mov
push
movsb
ret
out
push
mov
clc
push
das
cmpsl
scas
movsl
and
cmc
stc
inc
pop
outsl
push
mov
push
cmp
and
shr
mov
xchg
xor
dec
pop
and
sub
pop
and
repnz
sti
mov
jae
mov
in
cmc
adc
mov
push
sub
mov
xor
push
and
movsl
jl
add
in
add
pop
jl
adc
push
rcrb
pop
testl
mov
fdivrs
jno
mov
cli
clc
jo
cmp
pop
dec
xchg
cmp
insl
aam
and
loope
stc
xor
mov
js
pop
xor
jmp
pushfw
cmp
bound
aad
mov
jne
int
mov
inc
dec
dec
lods
lods
cltd
xchg
mov
mov
xchg
jae
adc
test
xor
in
shrb
xor
rcr
adc
rcrl
call
ljmp
fstps
aam
popa
arpl
mov
cli
int3
add
inc
mov
out
mov
mov
outsb
or
pusha
fidivrs
dec
fcompl
dec
lods
aam
add
xchg
lcall
insl
arpl
lock
loopne
fisttpl
cmpl
adc
out
cmpsl
fwait
scas
add
cmp
outsl
jb
xlat
jb
rcr
cmp
in
xlat
xor
push
dec
clc
mov
loop
movsl
cld
in
and
fs
sbb
inc
adc
add
mov
dec
fcomip
in
mov
add
shlb
mov
aam
add
sbb
mov
std
fwait
mov
dec
inc
inc
cmpsl
in
add
cmp
scas
cld
adc
push
jge
mov
dec
mov
out
xlat
mov
inc
mov
negl
cmc
cmpsl
jle
cmc
inc
rclb
fldt
js
cli
jecxz
pop
mov
outsl
in
cmp
out
cmc
dec
push
call
jmp
and
and
adc
pushf
adc
mov
lods
out
clc
aad
mov
xorl
xchg
dec
dec
call
push
adc
sub
jge
adc
mov
jns
xor
clc
push
dec
and
repnz
or
push
push
sbb
or
insb
call
cmp
or
lock
inc
xchg
adc
xchg
adc
mov
jne
dec
outsb
dec
imul
jecxz
jb
mov
add
mov
inc
in
test
imull
mov
ds
gs
mov
xchg
aaa
push
inc
lds
sub
out
push
xor
movsl
adc
loop
jg
inc
movsb
rcrb
test
popa
lahf
fdivl
cwtl
push
push
in
or
lahf
pop
push
xor
mov
imul
xchg
insl
cmp
mov
pop
sbb
lock
je
mov
aas
aam
add
push
out
mov
je,pn
cmp
repnz
in
jmp
repnz
aaa
mov
loope
sbb
cmp
lret
mov
stos
cmp
aas
inc
or
push
mov
outsb
cmp
call
fadds
dec
out
pop
addr16
cs
lret
push
imul
popf
movsb
fwait
inc
push
push
das
fimull
and
dec
addb
pop
xor
mov
mov
inc
mov
push
or
loop
push
xor
xchg
or
cmp
mov
jnp
or
dec
les
pushf
dec
or
mov
sbb
dec
gs
fcmovb
pop
das
iret
aam
push
in
adc
bound
mov
mov
sbb
out
insb
hlt
out
out
jmp
call
push
loop
outsl
sbb
in
nop
fwait
cmp
mov
mov
or
loop
adc
ss
jbe
xor
adc
jg
stos
xchg
pop
cld
call
xor
inc
ds
clc
mov
nop
ds
cltd
add
loopne
ja
inc
fcomp
ficoms
pop
and
in
aas
and
movsb
jmp
std
sti
punpckhwd
addr16
js
outsl
pop
dec
inc
xchg
xor
push
push
mov
cmp
test
mov
pop
shlb
loope
add
in
push
inc
dec
mov
lods
fdivl
or
cs
inc
mov
mov
stos
ret
jae
aam
mov
inc
out
xor
inc
xchg
sub
roll
pop
fistpl
sti
dec
je
into
inc
incb
xchg
les
xor
jecxz
cltd
idiv
dec
cwtl
mov
xchg
xchg
inc
sbb
xorb
test
insb
mov
cwtl
inc
xchg
loope
in
jle
lods
push
xchg
pop
imulb
mul
loope
out
loope
push
rorl
or
loope
into
loope
pusha
adc
dec
mov
cli
out
test
cmpsl
pop
dec
xor
ss
cmc
das
mov
in
hlt
fstpl
or
mov
movsb
test
mov
data16
pop
popf
push
add
fwait
addb
inc
inc
mov
xor
fcmovu
push
movsl
shrb
sbb
pop
mov
std
jl
xchg
cmpsl
loope
xchg
cmpsb
nop
adc
out
jno
cmp
pop
mov
cmc
mov
mov
popa
mov
lods
faddl
std
out
sahf
xor
out
sub
popa
sub
inc
and
inc
out
aad
fildll
mov
and
sub
inc
ret
lea
call
aam
decb
lahf
jg
enter
loope
out
into
imul
push
fs
out
in
inc
sub
adc
xor
adc
fistpl
lret
movsl
inc
out
cltd
mov
xchg
mov
das
aad
or
and
mov
and
or
popa
pop
fucomp
rcll
xchg
test
gs
xor
sahf
into
lret
aas
xor
cmp
daa
mov
les
cmp
decl
and
xor
push
mov
stos
inc
add
dec
jbe
wrmsr
adc
inc
out
loop
test
cld
jne
push
loope
pop
jp
dec
aad
mov
adcl
add
imul
pushf
fldt
mov
adc
or
aad
les
bound
cltd
hlt
addr16
and
shl
in
cli
cwtl
inc
stc
jp
dec
dec
add
xchg
aad
test
andl
push
push
xchg
sbb
outsb
push
pop
adc
data16
pop
aad
xchg
and
pop
sub
or
push
inc
mov
xlat
adc
cmp
sub
inc
jmp
adc
cmc
push
jo
push
das
inc
cmpsl
jae
ja
test
lret
mov
popa
pop
leave
ret
add
mov
pop
sub
pop
inc
lods
jle
and
pop
mov
cmpb
xchg
mov
shll
push
sbb
dec
insl
daa
imul
pusha
in
inc
or
adcl
dec
xchg
out
paddd
out
cmp
jle
test
adc
stc
jae
mov
push
sub
jg
inc
es
idiv
xchg
mov
jge
push
xor
pop
test
sub
sbb
nop
xchg
jge
sarl
mov
mov
fwait
push
xchg
stos
arpl
sti
cmp
cmp
sbb
mov
outsb
iret
mov
std
pop
xchg
push
ficomps
into
repz
test
push
imul
and
pop
xchg
push
mov
andl
push
jb
pop
pop
outsb
add
xlat
push
test
loopne
push
bound
fisubl
es
dec
mov
aas
fs
cmp
adc
xchg
popf
and
push
inc
or
xor
inc
ss
sbb
out
int
jmp
sti
sub
imul
mov
nop
cli
pop
dec
stos
or
incb
lret
jo
dec
xchg
aas
pushf
xchg
xchg
mov
arpl
push
xlat
jecxz
and
sub
mov
xchg
xchg
mov
inc
aad
cld
in
clc
sti
xor
pop
shll
and
mov
lret
cmpb
aas
mov
adc
test
lahf
das
push
ret
dec
cmpsb
sar
das
leave
in
call
data16
push
daa
pushf
enter
cmpsb
and
cmpl
cmp
push
adc
outsb
push
mov
imul
bound
or
push
arpl
and
mov
fildl
lret
push
dec
stos
inc
decb
mov
sub
mov
sbb
rcll
mov
aam
inc
cwtl
in
jnp
or
mov
mov
cmpsb
mov
jb
fidivl
dec
popa
dec
leave
js
out
mov
test
sti
xchg
movsb
inc
dec
insb
dec
outsb
sbb
fdecstp
dec
mov
stc
dec
and
pushf
icebp
arpl
loope
mov
jmp
leave
cmp
pop
dec
and
nop
cltd
outsl
adc
jmp
push
push
adc
mov
xchg
add
xchg
shll
mov
bound
xchg
mov
dec
mov
lods
subb
jae
sub
icebp
jns
lahf
movzwl
xor
ljmp
nop
notb
cs
adc
mov
or
daa
pop
and
mov
xchg
adc
xor
mov
and
adc
lret
pop
pusha
test
movsl
or
mov
and
mov
out
out
aaa
es
cli
mov
dec
mov
xorl
pushf
sub
cs
test
ret
call
and
mov
cmp
push
lcall
aaa
jl
or
push
push
xor
inc
xor
and
sub
mov
scas
push
pop
nop
inc
mull
js
mov
jne
mov
mov
xorl
mov
mov
pop
pop
rcrl
repnz
scas
enter
pop
dec
loopne
loope
and
adc
pop
popfw
mov
gs
jnp
mov
sub
xor
xchg
sub
pop
jl
inc
mov
mov
inc
stos
aas
or
dec
mov
out
add
lods
xchg
scas
insl
xor
int3
xor
mov
cmp
aam
mov
mov
pop
jl
pop
mov
andb
lock
daa
sbb
push
or
push
std
mov
xchg
fbld
movsb
bound
rcrb
jg
mov
call
bound
jg
test
in
adc
std
imul
stos
loope
dec
add
sub
mov
mov
mov
enter
cmp
xor
jae
jns
push
scas
sub
mov
jmp
lds
aas
out
inc
adc
std
cmp
clc
shr
fs
ljmp
xchg
into
inc
or
test
loop
dec
mull
insl
push
cmp
lds
sti
orl
movsl
push
jae
dec
ss
and
cli
mov
loopne
inc
mov
mov
pop
clc
ss
xchg
push
repz
dec
mull
push
je
mov
jmp
adc
scas
add
mov
adc
jl
loop,pn
push
hlt
stc
sar
sbb
test
lods
dec
xchg
adc
lret
std
add
mov
pop
and
xchg
push
push
icebp
fisubs
imulb
fildll
push
jecxz
inc
insl
xor
enter
out
andb
jne
fisubs
cmp
fs
xchg
sbb
xor
jmp
fldt
jne
pop
gs
fidivs
sub
sub
xchg
add
insl
das
imul
imul
push
movsb
and
insb
cmp
mov
adc
and
sub
xchg
stos
repz
push
rclb
sub
mov
test
inc
cmp
sbb
cmp
jle
pop
sbb
pusha
sbbb
in
sub
xor
mov
lret
xchg
sahf
bound
sbb
xor
mov
icebp
les
push
fs
pop
xchg
jp
adc
addb
mov
or
lret
stc
adc
push
sti
add
sbb
cmc
mov
pop
clc
mov
sbb
ljmp
aam
xor
test
dec
mov
jl
add
add
lcall
insb
test
mov
lods
pop
sbb
jg
push
rcll
stos
fists
jae
cmp
inc
ret
xchg
inc
cli
mov
sub
sub
push
sbb
int
mov
xorl
cmp
xchg
popa
popf
cld
movhps
push
xchg
cltd
int3
shll
push
andl
cmp
cmp
cltd
out
imul
call
jbe
push
int3
fldt
mov
push
pop
mov
rcrb
testl
jle
into
cs
xlat
pushw
push
rclb
mov
add
add
loopne
mov
repz
mov
loopne
loop
mov
out
arpl
cmp
xchg
imul
je
daa
cmpsb
aam
mov
mov
mov
cmpsb
dec
iret
inc
fadds
sbb
sub
and
fsubl
pop
xchg
sbb
repz
loop
mov
mov
pop
ljmp
ret
xchg
cli
add
xor
and
sbb
cmp
pop
mov
and
jnp
hlt
mov
lret
dec
jl
and
pop
mul
dec
add
pop
xor
push
or
mov
jb
cmp
mov
lods
test
inc
mov
lock
dec
cld
adc
and
mov
or
mov
cmp
cmpsl
sub
sub
aad
xchg
into
mov
lods
cmpsb
bound
cli
pusha
rcrl
lods
adc
rcll
fwait
inc
xor
data16
mov
fs
jno
dec
jl
mov
das
lock
xor
imulb
jmp
push
in
xor
xchg
lods
mov
mov
mov
inc
and
movhps
pop
sub
pop
sbb
imul
mov
lcall
cmpsl
pusha
and
loop
dec
cmc
movsb
popa
mov
test
or
or
js
lods
pop
cmpsb
shll
jns
outsl
aam
jne
jb
pop
aam
adcl
xchg
mov
inc
gs
xor
mov
lods
jmp
adc
orl
out
outsb
in
adc
addr16
cmp
lahf
imul
xchg
jle
inc
xchg
dec
inc
mov
aas
sub
lods
mov
inc
dec
and
imul
outsl
imul
xor
stc
bound
insb
out
cs
xor
jmp
mov
sti
jp
inc
xor
inc
pop
push
stc
inc
cli
mov
nop
out
call
mov
mov
movsl
loopne
sbb
add
jmp
dec
mov
sub
or
xchg
mov
sub
inc
inc
jp
sbb
repz
rcrb
mov
sub
cmp
mov
sub
je
lret
in
lods
mov
jg
lret
sbb
lods
or
mov
xchg
and
adc
cmovl
mov
sub
push
aam
xchg
xor
mov
fidivrs
scas
aad
lret
jne
jno
out
repz
fwait
xchg
cmp
jmp
sub
int3
mov
push
fmull
dec
add
inc
cmp
ljmp
add
enter
jge
mov
or
popf
fld
and
das
dec
fsub
jp
shrl
inc
or
sbb
xor
fists
push
lcall
xor
out
jle
lods
pcmpgtd
xor
popa
mov
adc
setne
out
es
jecxz
popf
push
sub
mov
shrd
clc
xcrypt-ecb
cmpsl
into
stc
dec
dec
pop
add
insl
lret
fsts
daa
cmp
sbb
lret
xchg
test
lcall
ret
mov
cmp
xor
shrl
cltd
sbb
sub
loopne
lret
sbbl
aaa
test
cs
mov
xchg
inc
xchg
movl
insb
icebp
cmp
inc
inc
pop
adc
lcall
adc
leave
sbb
sti
mov
cmp
xchg
loopne
leave
jge
jmp
inc
into
or
jnp
lods
js
rorb
test
scas
cmp
inc
imul
push
push
jp
and
insb
aam
stos
pop
lret
sbb
jge
out
adc
and
mov
andl
int3
xor
hlt
pop
outsb
jg
mov
leave
dec
mov
testb
dec
mov
mov
je
daa
test
add
mov
mov
xor
add
mov
pop
sub
popw
add
aas
jge
pop
aam
or
es
cs
mov
int
dec
lods
and
adc
push
mov
adc
out
in
mov
cltd
lret
adc
and
xchg
out
or
imul
es
push
repz
jne
or
hlt
xchg
mov
pusha
mov
or
push
sbb
out
mov
comiss
inc
rcl
sub
mov
popa
inc
dec
cs
stos
cmpsb
loope
dec
fwait
das
in
loopne
pop
mov
aaa
dec
test
cmpsl
mov
test
cmp
outsl
shl
push
xor
sbb
shr
mov
cmpsb
jp
cmp
lds
xchg
clc
push
push
push
pop
nop
clc
stos
mov
pop
imull
popf
xlat
add
or
popa
in
es
ljmp
sbb
adc
dec
xchg
cmp
aam
dec
addr16
jbe
fmulp
repnz
and
repnz
int3
movsl
dec
sbb
mov
aad
icebp
mov
cli
mov
imul
and
mov
jl
sahf
or
or
adc
notb
xchg
mov
je
pop
inc
cmp
jle
lods
popa
daa
xor
ss
lret
push
mov
xor
sub
pop
ja
jl
adc
test
or
add
push
addr16
inc
adc
cmc
pop
or
aam
mov
pop
ja
mov
or
jo
hlt
inc
cld
incb
or
fxrstor
fdivr
add
cmp
or
inc
jno
mov
daa
adc
mov
sub
addl
mov
sub
fimull
cltd
das
push
xchg
pop
and
xor
adc
cld
out
inc
out
add
das
mov
xchg
std
add
int3
hlt
idivl
cmpsl
out
stc
lret
lea
popa
lods
scas
stos
xor
mov
subb
shlb
cld
dec
mov
add
jecxz
sbb
push
cli
leave
icebp
arpl
dec
outsl
lahf
ffreep
movsl
lods
lods
daa
pop
mov
push
mov
aas
test
cwtl
cmp
cli
mov
add
ljmp
lods
and
pop
jg
xchg
dec
xor
jmp
pop
jnp
iret
add
add
mov
and
mov
loop
push
ss
pop
inc
out
sub
dec
popf
xchg
or
push
dec
insb
pop
dec
mov
cmpl
rclb
in
subb
add
aad
mov
adc
xor
out
adc
pop
jno
adc
aad
insb
pop
push
test
sti
jl
loop
dec
mov
xchg
cmp
arpl
mov
push
jl
jae
add
mov
mov
pop
lock
ds
call
sbb
jp
pop
lahf
pop
mov
jo
or
sbb
ss
sub
lret
rolb
int3
pop
rcrb
ret
scas
xchg
hlt
arpl
cs
mov
out
mov
das
repnz
adc
sub
push
mov
dec
jl
mov
jb
jmp
popa
sbb
and
xchg
lcall
loope
push
enter
and
popa
jle
xorl
roll
call
adc
enter
xchg
je
and
ss
xor
xchg
mov
inc
sub
outsb
es
fsub
shl
xchg
out
nop
lds
lock
hlt
test
xor
adc
and
jne
add
cmpl
inc
xorl
fdivs
out
fldcw
ja
sub
inc
cmp
mov
mov
rep
mov
int3
call
mov
xchg
mov
loop
mov
mov
cld
mov
test
shlb
jl
push
or
outsb
mov
aam
mov
rol
mov
mov
popf
and
mov
mov
cmc
jo
cs
inc
jp
arpl
gs
push
push
pop
add
lcall
frstpm(287
inc
insb
mov
sub
ficoms
and
mov
shl
mov
in
dec
cmp
divl
ret
push
cwtl
pushl
xchg
and
pop
xor
push
cwtl
jne
cltd
xor
into
add
mov
xlat
mov
loopne
aam
cmp
adc
idiv
jle
lods
cld
xor
repnz
addr16
push
push
mov
pusha
inc
adc
fstpt
xchg
add
pop
fwait
mov
cmpsl
dec
cmp
lret
adc
int
mov
mov
jmp
jnp
sbb
sbb
sbb
mov
jmp
pusha
in
pusha
mov
out
imul
mov
mov
adc
jle
or
out
mov
in
pusha
mov
cmc
loop
mov
outsb
mov
pop
jno
cmp
dec
jecxz
insl
imul
clc
js,pn
inc
and
scas
xchg
jne
stc
pushf
loope
push
add
stos
cmp
sbb
movsl
movsb
push
xchg
pushf
in
sub
mov
incb
shll
jo
xchg
data16
fidivs
fisttpl
cmp
mov
int
cmc
mov
pop
imul
movsb
pop
test
push
cli
sub
aaa
jmp
pop
clc
loopne
out
popa
cmp
pop
sbb
push
jecxz
mov
hlt
into
mov
inc
pop
js
les
cmp
nop
in
mov
xchg
pop
or
jbe
sbb
neg
mov
xchg
jmp
cmp
fwait
mov
stos
xor
inc
ja
push
out
pop
xor
in
nop
jmp
jg
icebp
mov
mov
repnz
cs
insl
pushf
bound
out
xor
xor
movsl
push
ret
mov
cmp
mov
loopne
push
outsb
call
push
or
vphadduwd
cmc
xlat
sbb
pushf
adc
pop
mov
out
pop
nop
cltd
mov
mov
gs
mov
stos
mov
test
jecxz
sbb
push
xor
jb
int3
pop
dec
pop
or
sub
inc
jnp
push
inc
test
push
lret
xchg
cmc
cmp
loope
shl
dec
loope
push
push
add
mov
aad
addl
push
inc
adc
sahf
lahf
xor
pusha
addb
les
cs
xor
cmpsb
adc
lret
pop
fistps
pop
jp
cs
popf
mov
popa
loope
mov
aas
lds
fmuls
loope
sub
jle
bound
call
mov
or
repz
push
cmp
or
repnz
cs
mov
and
or
sbb
call
aaa
ja
clc
fisubs
mov
int3
outsl
inc
push
sub
inc
adc
sub
std
out
mov
xchg
ret
mov
pop
adc
xchg
divb
out
bound
pop
mov
push
and
xor
adc
ret
add
mov
into
ret
pop
cli
push
and
and
mov
fimuls
inc
push
pop
mov
mov
jecxz,pn
sbb
mov
ljmp
cltd
aam
sub
add
lret
outsl
outsb
and
pop
inc
aam
lret
sub
testl
lret
movsl
into
jae
int3
testl
cmpsl
sbb
stos
jbe
imul
cmp
outsb
mulb
mov
inc
push
nop
sti
in
xchg
xchg
and
jb
sub
enter
pop
ljmp
adc
lock
jp
daa
mov
xlat
dec
and
sbb
mov
xor
sar
insl
mov
nop
sbb
sti
push
adc
es
rorb
jbe
mov
int3
mov
inc
sub
imul
adc
adc
jo
jbe
outsb
shll
gs
imul
adc
sbb
rcll
not
dec
jge
xchg
and
xchg
leave
loop
inc
inc
out
out
mull
mov
or
mov
jae
sbb
add
sub
cmp
insl
lret
sbb
or
arpl
push
mov
jp
ss
mov
push
je
add
sub
cmpsb
jmp
add
addr16
jnp
dec
scas
repz
push
leave
cmpsb
dec
dec
jbe
cmpsb
shrb
in
xchg
mov
xor
jo
lds
outsb
std
cmp
xchg
sub
fbstp
xchg
jae
lock
and
test
test
aas
jl
sahf
mov
or
and
sbb
sub
inc
mov
rclb
add
inc
fsubrs
jb
sahf
push
push
adc
inc
push
sbb
addr16
inc
sub
and
xchg
pop
dec
or
scas
fsubs
insl
mov
and
mov
jmp
outsb
fwait
enter
pop
pop
int3
stos
push
rcrl
jae
inc
add
aam
mov
pop
sub
int
movb
clc
sub
arpl
push
mov
cmp
push
sub
and
outsb
fdivr
inc
jns
and
pop
mov
adc
add
and
pop
outsb
or
xchg
dec
stc
and
xor
xor
xchg
sbb
xor
xlat
scas
lcall
je
negl
loopne
mov
push
xchg
pushl
into
add
dec
mov
psubb
ljmp
fdivrs
nop
out
out
aaa
push
and
movsl
push
pusha
mov
add
xor
mov
insb
xchg
pop
jle
test
lods
dec
push
xchg
xchg
ss
es
pusha
enter
outsb
mov
sub
lods
dec
pop
mov
cmpsl
pop
les
xchg
aad
xor
loopne
jg
sub
jg
aas
pop
inc
push
arpl
mov
push
out
in
jb
mov
cli
mov
and
bound
xor
xchg
fs
inc
pop
sbb
outsb
inc
push
add
stos
push
out
rol
xchg
rclb
and
sbb
mov
daa
lea
push
sub
cmpsl
adc
mov
lret
stc
std
cld
dec
aad
cli
mov
outsl
mov
dec
jae
push
dec
cwtl
pop
jnp
fldenv
xchg
or
scas
push
jecxz
scas
subl
inc
scas
js
sub
push
pop
cs
sbb
push
jp
xchg
jmp
add
test
scas
aam
shl
jo
iret
adc
xchg
adc
cmc
ret
add
mov
pop
cmpsl
sub
dec
jle,pt
cmpsb
add
lock
mov
cmpxchg
neg
mov
dec
popf
insl
mov
pop
shr
inc
into
mov
mov
pop
or
xor
push
shll
adc
pop
sbb
xchg
cltd
in
ret
dec
mov
fs
paddsw
jb
jmp
sub
inc
es
add
push
jp
jp
addl
add
jmp
sahf
jo
jp
push
leave
jmp
xchg
mov
sbb
repnz
sbb
jne
sbb
mov
pusha
sub
xchg
xchg
pop
aam
jo
mov
js
arpl
out
out
push
ror
mov
add
pop
outsl
cltd
xor
stos
cs
lock
push
mov
shrb
push
add
adc
aam
imul
mov
lret
insb
pusha
xchg
cmp
cmp
sbb
jno
sub
lcall
mov
and
mov
int3
cmpsb
test
lret
rorl
xchg
pop
aas
test
insb
call
mov
cmp
negl
leave
std
xorl
cmp
jle
aas
pushf
out
out
cmpsl
pop
repz
pop
adc
inc
xor
push
sbb
lea
cmp
pushf
stos
hlt
cs
xor
aad
push
sahf
mov
call
xchg
hlt
sub
mov
dec
mov
mov
mov
adc
adc
add
pop
adc
adc
sub
pop
mov
pop
cwtl
lods
dec
ret
psubusb
push
lret
in
push
in
notb
loopne
bound
jge
test
inc
mov
popa
ficoml
and
jl
inc
adc
and
addb
pop
mov
inc
out
orl
pop
xchg
mov
pop
fadds
sahf
add
cmp
test
imul
aas
ljmp
jns
sbb
daa
mov
mov
out
cmp
or
mov
inc
sub
inc
mov
sbb
adc
xor
popa
lahf
lock
lock
xchg
rolb
ret
lret
sub
mov
stc
gs
or
int3
sbbb
mov
xchg
and
cmp
aas
pop
popf
inc
fists
lret
mov
pushf
loope
sub
jle
push
lret
xor
ds
aas
test
incb
and
sub
cmp
ret
push
int3
or
xor
jno
mov
mov
insl
cld
add
pusha
push
push
push
sbb
sarl
mov
push
das
jbe
roll
rorl
repz
sub
movsb
stos
test
sbbb
sub
push
mov
mov
js
push
scas
and
lods
shrl
sahf
inc
sbb
aaa
loopne
cmp
inc
loopne
aas
adc
xchg
clc
push
popa
mov
int3
inc
rorl
inc
cmp
sarl
loop
mov
push
aad
mov
loopne
test
shll
cmp
gs
out
mov
mov
jae
cli
pop
stos
cmpb
nop
pop
inc
arpl
data16
or
fsubl
rcrb
xchg
notl
dec
pop
pop
test
scas
int3
inc
aam
mov
call
lods
adc
mov
gs
mov
pop
mov
mov
push
pop
dec
out
gs
or
pop
adc
push
subb
xchg
cmp
cli
testl
inc
jb
mov
pop
cwtl
imul
push
pop
mov
movsb
dec
stc
movsl
das
or
in
xor
xor
imul
iret
and
and
rcr
mov
hlt
mov
sub
fwait
test
mov
sbb
std
and
insb
rol
lods
sbb
push
clc
les
mov
into
xlat
in
es
inc
jnp
mov
leave
mov
cltd
mov
push
dec
jnp
mov
jle
mov
bound
jecxz
rorl
inc
rorl
xchg
das
loope
add
pop
js
dec
jb
out
push
lods
in
mov
xlat
mov
lods
jg
adc
pop
leave
insl
mov
frstor
mov
addr16
xchg
cmpsl
lods
sbb
lea
sbb
sarb
cli
mov
jp
arpl
sbb
rorl
popa
fwait
xlat
cmp
pop
and
jp
movsl
xchg
je
mov
std
inc
jno
mov
mov
mov
inc
or
sti
cld
dec
sub
adc
stc
cmpb
or
leave
sbb
add
dec
sub
pop
sahf
insb
sbb
dec
sbb
test
cmp
aam
fsub
push
and
gs
cmpsb
sub
sub
dec
adc
fsubrl
cli
inc
sbb
mov
xchg
cwtl
sub
outsl
sub
pop
sub
xor
iretw
out
fwait
or
sbb
hlt
test
mov
push
loopne
mov
leave
xor
cld
push
jb
cmpsb
int
or
mov
pop
lret
ja
pop
sbb
pusha
jb
fmul
ret
mov
cltd
sub
mov
mov
or
jno
xor
xchg
lods
stc
push
outsb
dec
daa
inc
pop
jns
jno
push
ret
lea
mov
mov
adc
mov
outsb
rolb
lcall
andb
ret
jmp
mov
mov
fwait
lret
cmp
loop
nop
dec
addr16
xchg
fcmovb
push
ficomps
inc
xchg
push
mov
inc
or
push
mov
cmpsb
sbb
data16
mov
loopne
shlb
mov
cmp
pop
into
lods
ja
mov
add
pop
xchg
jo
cmp
sub
subb
into
ja
into
or
and
cmc
xor
popa
push
daa
mov
mov
ljmp
les
ljmp
pop
sti
arpl
mov
xchg
loope
or
dec
xlat
int
insl
femms
mov
xlat
inc
fstl
pop
cmp
inc
test
xchg
xor
dec
andb
or
sahf
sub
and
cli
mov
pop
push
add
addr16
pop
pop
pop
and
jb
mov
rcrl
dec
xor
cmp
pushf
inc
data16
shrb
into
add
dec
test
dec
jecxz
fdivrl
pop
mov
mov
and
ss
xrstor
sbb
inc
push
pop
adc
cmp
sbbl
mov
nop
int3
xchg
jecxz
or
rclb
and
mov
inc
and
sub
les
jge
sahf
je
pusha
inc
loop
loope
add
loop
inc
inc
popa
xor
mov
sbb
jo
mov
and
repz
add
data16
ljmp
add
pop
mov
cmp
push
jb
imul
js
push
in
xchg
addr16
arpl
add
xor
int
pop
data16
iret
push
jns
lcall
dec
add
inc
xor
sti
ja
fwait
add
inc
mov
sub
inc
mov
xlat
jnp
insl
out
push
in
pop
mov
lret
movsl
mov
cmpsb
xorb
cmpsb
std
lods
mov
std
sbb
js
daa
push
dec
scas
jge
jae
add
shrb
and
mov
lret
push
push
jns
sbb
xchg
and
jmp
and
dec
out
outsl
ss
dec
dec
outsb
dec
push
loope
bound
add
jp
jbe
cmc
cmp
loop
inc
adc
xor
shrb
fstpt
mov
das
sub
testl
aam
in
mov
push
hlt
das
xor
adc
xchg
cmp
or
lahf
sub
icebp
xor
add
xchg
rorl
push
cltd
cmpsb
adc
add
pusha
pushf
mov
cmpsb
ss
mov
mov
lret
and
jnp
pop
push
sub
add
jb
adc
ss
xlat
mov
dec
out
mov
jns
mov
mov
cmp
ret
out
mov
dec
fdivrl
dec
dec
rolb
call
inc
cmpsb
adc
dec
lods
xor
pop
std
jns
dec
pop
cmp
jecxz
push
daa
mov
pop
divb
push
popa
lods
jnp
into
pushf
dec
mov
dec
loop
cmp
iret
lods
or
pop
mov
inc
notb
aad
xchg
jge
xchg
mov
call
mov
sbb
int3
in
aam
aam
inc
jecxz
in
ficompl
xchg
add
pop
fdivl
inc
stos
mov
jecxz
test
and
stos
pop
mov
lods
mov
idiv
xorl
jne
clc
xchg
fldenv
rolb
sub
sub
xor
idivb
dec
sbb
filds
shll
add
insl
int
inc
or
test
ljmp
jo
pop
pop
jns
push
add
test
mov
lea
lea
subl
popa
inc
neg
xorl
mov
cs
and
pop
cmc
out
push
or
lret
cltd
test
nop
jmp
mov
pop
dec
sub
ljmp
loopne
std
inc
or
or
aaa
mov
pop
sti
xor
ss
inc
in
push
ljmp
rorb
stos
inc
lahf
xchg
lods
lret
pop
popa
mov
outsb
and
xchg
push
mov
mov
pop
or
mov
test
jo
pop
push
or
sub
sub
dec
dec
xchg
xchg
fwait
pop
idivb
scas
lds
inc
jno
sub
int3
test
incl
and
mov
xchg
jmp
adc
lret
and
mov
ljmp
jmp
inc
call
mov
mov
orb
dec
fisttpl
dec
adc
loope
and
push
inc
in
jno
stc
stc
mov
outsl
cmp
fwait
jp
fs
enter
add
pushf
push
sbb
clc
leave
mov
cmp
popf
fidivrs
in
jl
data16
lods
aas
adc
jns
pop
mov
push
xorb
cmpsb
into
or
dec
lds
aaa
iret
and
fmul
jo
decl
jbe
insb
cmp
pop
cmp
movsb
pop
xchg
in
xor
ret
and
and
mov
sub
inc
lds
jp
mov
pop
std
ljmp
mov
lods
imul
repz
sub
cmpb
and
mov
nop
decl
out
adc
mov
pop
dec
mov
cmc
xchg
out
enter
fisttps
sbb
fistl
cmc
inc
xor
mov
sti
repz
and
test
callw
popf
fwait
sub
shll
dec
nop
mov
or
push
push
dec
aas
push
jl
xchg
je
and
out
in
push
push
addr16
dec
push
cs
xchg
pop
xchg
lds
stos
adc
leave
dec
xchg
fs
pop
rclb
push
jle
mov
xor
out
lcall
push
aaa
push
inc
mov
mov
xor
cmp
hlt
dec
aaa
mov
cltd
xlat
ret
fwait
jp
iret
mov
xor
mov
out
loopne
or
pop
movsl
pop
clc
push
xorl
push
jae
out
int
jo
adc
mov
dec
mov
and
lods
mov
adc
je
jnp
jb
sub
int
push
loope
cld
inc
xchg
fs
lret
xchg
sbb
call
scas
jle
addl
jge
xor
push
mov
xchg
pop
mov
add
pop
inc
inc
sbb
or
pop
shl
inc
sub
xlat
sub
outsl
pop
movsb
dec
enter
ret
je
cmp
jno
gs
xchg
insl
fisubl
xchg
sti
pop
sbb
repnz
repnz
movsl
sub
inc
jecxz
dec
xchg
rcll
mov
mov
stos
xlat
ret
mov
or
add
mov
mov
dec
mov
jnp
jns
sub
leave
pop
xor
dec
dec
movsl
lods
push
adc
push
pop
out
loop
imul
and
pop
or
cmp
subb
sub
mov
cmpsl
js
sti
mov
sbbl
or
sbb
aam
mov
cmp
and
push
pop
sub
aam
xchg
push
rcrl
pop
arpl
aad
mov
ficoml
cltd
xchg
scas
cmp
in
mov
pop
int3
clc
rcrl
push
popf
loop
jns
leave
ja
pop
xor
mov
mov
inc
and
push
roll
xchg
adc
loope
out
repnz
ss
enter
fs
push
mov
pop
push
mov
fbld
lahf
dec
jl
xor
sar
nop
and
adc
clc
cwtl
dec
lds
pop
fsubp
test
cmp
mov
push
ja
pop
cmp
js
enter
pusha
filds
mov
ljmp
pop
scas
stc
xor
sub
inc
cld
cs
insb
adcb
sbb
addr16
lea
add
mov
mov
std
dec
or
pop
aad
mov
repnz
int
loop
dec
jnp
rcrb
ljmp
rcr
js
lret
hlt
es
insl
cltd
out
jp
lods
cmc
and
xchg
test
daa
fcompl
mov
arpl
es
dec
xlat
shll
aam
movsl
jbe
shlb
inc
int3
mov
xchg
lret
idivl
adc
lret
pop
adc
sub
stos
pop
pop
test
repz
inc
dec
cmpsb
test
add
test
scas
test
fldenv
loop
push
jmp
cmp
push
sbb
pop
data16
addl
ficoml
imul
icebp
outsb
stos
icebp
jmp
int
add
call
loopne
adc
imul
xor
mov
pop
icebp
cltd
daa
pusha
xor
out
xor
push
mov
push
roll
insl
push
mov
or
pop
pop
lret
mov
adc
inc
movsl
push
inc
dec
mov
cmp
jbe
fistps
inc
aam
jge
mov
or
dec
adc
pop
mov
cmp
mov
aas
xor
subb
lret
mov
jmp
sub
shrl
lret
jne
out
add
inc
and
push
jp
or
call
lds
pop
sub
call
push
or
lea
dec
clc
xor
jle
jns
or
inc
push
fs
mov
xchg
push
sbb
jp
mov
sbb
popa
sahf
mov
leave
xchg
inc
inc
xor
xchg
ret
and
mov
jmp
insl
xchg
shll
movsb
cmp
cwtl
testb
into
mov
movsb
and
and
in
mov
push
mov
lret
and
dec
lea
test
ja
xor
sub
movsl
xchg
mov
jnp
xchg
mov
adc
rcll
sbbb
pop
das
int3
sbb
mov
ja
xchg
stos
or
cmpsl
test
pop
dec
movsl
mov
or
jnp
adc
fucomp
out
jg
push
scas
inc
cltd
andl
iret
rcrl
lahf
std
je
pop
inc
aas
cmp
fnstenv
fs
popa
cmp
mov
test
xchg
add
enter
or
ss
mov
jecxz
push
aas
sbb
movsb
daa
mov
push
fstl
mov
data16
les
cmp
sar
inc
clc
push
xchg
pop
mov
cmp
xor
push
inc
outsb
jo
ret
dec
jg
inc
xchg
sub
dec
push
cli
mov
loop
loop
loop
mov
mov
xchg
cmp
mov
ret
mov
fnstcw
cwtl
cltd
in
cmp
ficompl
xchg
and
xor
gs
jo
and
test
cmp
rcrl
pop
out
fdivs
xor
and
jo
je
jne
cli
jmp
mulb
cli
xorl
fwait
mov
or
clc
jns
dec
fnsave
xchg
inc
pop
clc
lret
pop
lock
or
pop
insl
hlt
imull
mov
mov
mov
add
icebp
cmp
jbe
xor
shrl
inc
stc
out
sbb
cmpsb
jecxz
sub
cli
mov
mov
push
dec
sti
aad
clc
pop
mov
sti
jno
scas
sbb
xor
push
shl
cmpsb
iret
inc
mov
push
pop
push
inc
cwtl
push
sbb
iret
iret
adc
jns
outsb
pop
add
ret
lcall
jp
mov
or
xchg
shlb
sarb
lcall
mov
sub
stc
xchg
sysret
bound
add
rolb
and
xchg
jecxz
inc
push
or
sub
scas
leave
jns
addr16
mov
notb
lock
imul
int3
mov
add
pop
cmp
cmp
jnp
mov
push
cmpsl
aaa
repz
mov
and
lahf
add
daa
xchg
and
popa
lcall
shll
daa
arpl
and
jns
xchg
xchg
enter
jl
xor
test
push
mov
mov
test
and
lds
cmp
loop
jne
bound
cwtl
jae
xchg
aam
and
sarl
test
xchg
xor
pop
pop
aad
cmpl
fistps
mov
data16
sub
push
mov
pop
xor
xchg
push
xrelease
addr16
nop
fs
popf
arpl
adc
push
fldt
stos
and
movsb
inc
rolb
sub
nop
popf
jne
mov
mov
stc
mov
lock
xchg
std
test
add
movsl
jnp
cmp
nop
std
push
mov
xchg
shrb
jl
mov
fsubl
mov
nop
push
shlb
js
lcall
je
inc
or
xchg
test
bound
pop
fs
enter
dec
inc
pop
inc
daa
xor
push
ljmp
xchg
or
pop
shl
aas
imul
les
lods
addr16
out
dec
dec
pmulhuw
in
and
mov
adc
sbb
mov
push
out
call
in
iret
pop
push
dec
mov
pusha
rorl
mov
xchg
jg
outsb
faddl
test
lds
sbb
mov
mov
mov
cmp
jb
add
add
nop
xlat
cmpsl
xchg
stc
das
sub
push
fcompl
je
sub
leave
loop
dec
cld
lock
push
sti
in
or
cmp
cmc
inc
push
xchg
sbb
shll
pop
sub
fdivrl
inc
call
addr16
or
jbe
fbstp
cmp
lcall
cmp
popa
outsl
pushf
lret
dec
mov
popf
loope
lods
imul
xchg
pop
in
xchg
test
cmc
rclb
or
sub
cli
xor
cmpl
les
arpl
outsb
ficompl
data16
sbb
mov
xchg
in
and
lret
inc
mov
divl
es
in
popf
cmp
bound
cmp
inc
shrl
cltd
pop
mov
cmp
mov
hlt
leave
cmp
mov
out
pop
shr
addr16
lahf
lahf
cli
ret
inc
jl
jne
add
ss
out
jge
push
fxch
sub
sub
jge
aaa
or
pop
daa
fsubs
sti
push
push
fcoms
sahf
xor
xchg
mov
xchg
sarb
lods
push
xor
lret
pop
cmp
xchg
cmp
lcall
sub
loop
inc
loope
cwtl
adc
mov
push
icebp
gs
ror
mov
call
in
nop
jae
sbb
mov
cmp
lcall
add
xor
mov
leave
pop
in
fucomip
mov
add
int3
dec
mov
aad
sbb
and
mov
jp
lods
push
cmp
jp
push
imul
mov
xchg
shll
xorl
mov
xchg
jg
and
bound
cli
xchg
push
push
dec
dec
cwtl
std
adc
or
daa
push
insb
inc
in
pop
test
insl
fs
stos
cli
insb
lea
jle
push
push
jp
je
iret
lahf
clc
fistps
push
in
mov
jge
lds
daa
in
pop
pop
jmp
dec
push
push
dec
aam
fsubp
cmp
iret
mov
add
mov
push
push
jno
stos
jg
push
dec
in
sub
mov
mov
lea
xchg
mov
movsl
ret
scas
scas
and
lods
jnp
push
fsubp
stc
call
jmp
adc
lcall
pop
mov
or
pop
cwtl
sub
cmp
mov
sahf
pop
stc
xchg
aam
repz
jle
decl
movsb
test
cwtl
je
adc
notl
cwtl
outsl
mov
mov
fidivrl
sarb
add
xchg
xor
pushf
mov
jecxz
mov
xorb
sbb
pushf
jg
cmp
pop
fcmovbe
xor
add
aam
bound
je
pusha
mov
pop
cld
xor
addr16
sub
adc
push
jmp
fsubrs
jbe
mov
or
pop
subb
ror
ds
sti
jbe
daa
movsb
sub
jne
dec
jge
js
popa
cltd
je
jl
and
mov
clc
clc
pcmpeqd
mov
addr16
lea
jl
leave
scas
in
mov
xor
push
push
and
in
lods
mov
mov
lock
and
lret
and
std
lret
lahf
push
adc
imul
pop
dec
push
jmp
push
aaa
sub
aad
sub
stos
loope
aaa
hlt
mov
inc
fdivrs
aas
cmc
stos
imul
fucomip
jae
popa
loop
pop
cmp
or
dec
pop
scas
nop
mov
and
adc
adc
push
sbb
es
push
lods
shrl
mov
in
and
int3
cwtl
inc
fisubl
inc
cli
mov
insl
rcr
scas
ss
into
pop
sub
leave
mov
outsb
int3
sbb
adc
sarl
lea
cmpb
adc
jle
jnp
or
ret
je
int3
push
fnstenv
mov
add
mov
pop
sub
negl
dec
test
sub
xlat
shr
pop
pop
frstor
in
jno
scas
jg
mov
dec
ljmp
lds
mov
out
push
pop
add
pop
xor
out
mov
test
jge
jge
imul
mov
stos
lret
add
and
mov
lahf
pusha
lret
mov
repz
imul
mov
test
shrb
xor
fidivs
in
mov
or
stos
leave
fimuls
mov
inc
scas
dec
aad
ljmp
cli
lds
push
mov
add
push
in
arpl
cmpsl
jmp
fstpl
loopne
and
sbb
sub
mov
mov
cmp
xor
addr16
gs
rolb
sbb
push
arpl
test
dec
xchg
loop
pop
dec
and
inc
daa
xchg
clc
add
cmpsb
xor
dec
insb
push
gs
jp
negl
pusha
cmp
xchg
out
sbbl
and
sarb
js
test
stc
in
mov
sarb
outsl
pop
sahf
lret
mov
dec
fsubl
dec
int
cmc
inc
and
dec
mov
mov
or
shll
les
sbb
imul
add
std
ljmp
or
mov
das
pusha
rol
dec
mov
fildl
int3
sbb
rolb
loop
out
dec
push
pop
lods
cmpl
dec
repz
nop
mov
and
sbb
loope
lahf
xchg
out
sub
inc
adc
dec
mov
mov
jno
xor
adc
fidivrs
cmc
jecxz
das
roll
mov
call
repnz
mov
gs
pop
cmpsl
into
cld
nop
dec
jmp
pop
repnz
insb
dec
jmp
ds
push
mov
aas
jp
aam
xor
xchg
sbb
xchg
xor
in
jne
adc
mov
xchg
cmpsl
push
outsb
dec
sub
add
ss
add
mov
ljmp
adc
out
dec
sbb
add
subl
into
push
mov
test
xchg
or
inc
inc
jge
lods
daa
movb
and
sub
test
jg
int3
adc
btl
pop
inc
xor
inc
xchg
push
mov
mov
stos
out
jb
sbb
xor
loope
push
pop
iret
push
jg
add
popa
fwait
xchg
mov
es
xor
jo
dec
add
dec
inc
cmp
cmpl
sub
int
enter
in
cltd
mov
jle
push
mov
outsb
inc
and
ret
dec
mov
test
cmp
pop
imul
and
push
mov
rol
shrl
loop
cli
and
test
sbb
and
mov
loop
and
in
sbb
push
cmp
insb
add
nop
mov
dec
test
cmp
push
je
inc
aaa
sbb
mov
test
push
cs
mov
and
cli
xchg
cmp
fwait
mov
push
fdivr
ret
movsl
addr16
push
packuswb
dec
sub
jb
les
mov
fsubr
lock
dec
mov
mov
mov
xchg
pusha
dec
shrl
ud2
sbb
push
add
clc
push
mov
pop
pop
lcall
test
xchg
and
and
test
lock
push
inc
mov
sbbb
xor
hlt
xor
imul
shr
test
call
lods
orl
fidivl
pop
pop
bound
lock
fcmovb
fisubrl
cmp
xor
and
ret
mov
dec
loope
push
movsb
cmpsl
lea
aad
add
addr16
out
arpl
mov
mov
shr
sub
mov
out
out
sarb
pop
or
cmp
fsubr
cs
test
cmc
in
xchg
cmp
and
outsb
xor
dec
outsl
push
jge
push
out
clc
lods
mov
cmpsb
inc
cmp
orb
adc
fs
sub
mov
and
push
loope
repz
fwait
lret
ja
add
out
ret
shll
stos
js
pop
or
mov
out
arpl
xchg
js
pop
sbb
sbb
and
leave
dec
push
stos
jmp
fdivrp
outsb
push
imul
inc
xor
pop
insl
fucomip
inc
xor
push
push
sub
push
imul
pop
and
insl
adc
call
sub
and
popa
adc
xor
in
clc
imul
dec
fistpll
add
in
test
sbb
inc
adc
fidivl
icebp
xor
ljmp
cmp
imul
nop
push
dec
inc
inc
imul
jmp
pop
and
adc
add
mov
sub
lahf
fistl
in
fsubr
jge
xchg
jns
inc
pop
mov
add
and
mov
mov
add
andb
jne
std
dec
jbe
nop
mov
add
mov
push
or
adc
insl
push
sub
sbb
in
pop
jo
aas
and
das
sub
mov
popf
sahf
inc
js
stos
loop
jge
mov
int
xchg
sbbb
mov
mov
pushf
mov
add
mov
cmp
sub
push
in
inc
roll
inc
jmp
ret
lods
inc
mov
mov
jns
mov
xlat
add
pusha
nop
insb
and
cmp
packssdw
xor
mov
add
in
mov
mov
mov
popa
dec
addr16
lret
loop
push
pushf
xor
lods
cld
rcrl
cltd
sub
inc
fdivrl
es
jmp
cmpl
xor
loope
popf
mov
xor
jo
xor
scas
aaa
cmp
inc
mov
pop
cs
jle
adc
xor
dec
imul
insb
add
pop
repz
inc
jecxz
mov
std
adc
sbb
add
sbb
mov
dec
shr
cmp
pop
jmp
pop
mov
pop
cmp
rolb
out
outsl
test
adc
stc
push
arpl
xchg
mov
pop
inc
and
sub
mov
ljmp
hlt
faddl
stos
bound
hlt
adc
cltd
jge
pop
pop
in
movsl
inc
or
adc
sarb
inc
mov
jg
test
pop
adc
xor
stc
xchg
mov
mov
out
adc
cmp
popf
or
and
sti
pop
dec
rcrb
cs
popa
mov
inc
jg
cmc
xor
adc
mov
mov
push
lahf
aas
xchg
call
repnz
movsl
inc
fisubrl
mov
int
mov
ds
call
dec
jecxz
aaa
mov
std
xchg
inc
out
jge
leave
jmp
pop
xchg
inc
or
fwait
sahf
movsl
cmpsb
sbb
xor
popa
leave
sbb
mov
jb
pusha
and
mov
outsb
fwait
push
xchg
pop
sbb
bound
imul
push
pop
test
adc
pop
xor
or
add
fstl
jle
mov
loopne
adc
sbb
enter
test
fwait
pop
add
adc
in
ds
fisubs
int
xchg
fnsave
cmp
mov
jno
mov
adc
dec
fiaddl
mov
mov
add
cmpsb
xchg
popa
xor
pushf
sub
xchg
inc
call
mov
mov
lods
mov
sbb
xor
arpl
inc
mov
lcall
xchg
adc
xchg
inc
mov
je
mov
pop
push
and
loopne
lret
clc
xchg
push
push
lret
push
lret
sbb
adc
mov
rolb
add
andl
dec
jnp
and
sub
push
popa
shll
mov
and
dec
mov
fwait
cmp
xor
dec
mov
and
int3
add
lea
pop
sub
mov
push
mov
or
loope
pop
std
jbe
jmp
es
push
in
jae
and
and
inc
repz
mov
call
sbb
mov
jne
int
pop
mov
xor
aad
cmp
arpl
andb
jl
xor
cmp
push
cmpsl
clc
jb
loope
cmp
and
sub
test
push
out
stos
aaa
adc
or
stos
mov
cmp
dec
dec
testl
jne
in
mov
mov
rcrl
inc
inc
jmp
sbb
lea
pop
add
push
jge
mov
aad
leave
stos
add
sub
jge
cwtl
adc
jp
stc
test
out
mov
mov
sub
or
mov
mov
lock
pop
push
mov
shlb
pop
inc
and
cmpsb
mov
adc
aad
sbb
sub
and
imul
fidivrs
adc
cmp
out
inc
lcall
mov
out
ljmp
xchg
out
adc
inc
sbb
sbb
insl
add
jl
leave
cwtl
arpl
sub
mov
push
or
cmc
lock
sbb
or
cmpl
mov
jae
sub
cmp
into
adcl
das
cld
inc
imul
push
xor
xor
ret
inc
xchg
mov
xchg
ret
jbe
cmp
jge
push
es
add
mov
es
xor
or
enter
push
mulb
std
lods
inc
fwait
mov
ret
sub
cmc
xchg
fs
rclb
rcrb
xchg
mov
jp
mov
gs
int
add
cli
push
mov
das
in
or
adc
and
xor
adc
sbb
adc
mov
sti
ret
pop
movsb
and
mov
push
in
outsl
and
int3
ficomps
adc
add
add
stos
iret
mov
imul
insb
sarl
lds
pop
jle
pushf
sub
sbb
inc
ds
fs
cmpsl
out
lret
jl
and
inc
insb
cld
enter
lock
pop
xchg
mov
lcall
andl
rol
ror
sub
fldt
jg
mov
fcomps
lea
in
cmp
sti
std
mov
jmp
jmp
sbb
mov
leave
cmp
into
add
fwait
jge,pn
xor
mov
lahf
push
hlt
pop
pushf
dec
adc
cmp
ds
out
stos
xor
fldl
dec
arpl
xlat
xchg
aaa
lcall
fcmovnb
cmp
pop
dec
jmp
jecxz
mov
mov
fcomps
fcoms
cmp
jns
xor
push
movsb
sbb
xlat
pushf
xchg
push
cmp
test
insl
test
pop
adc
pop
sub
fmull
lahf
in
icebp
pop
lock
gs
push
dec
xor
xlat
test
in
mov
jns
sbb
sub
int3
pop
movsb
stc
addr16
inc
das
mov
or
push
fdivr
iret
subb
and
rcrb
lods
repnz
orb
cmp
nop
xchg
xor
fimull
xor
and
cltd
mov
fbld
pop
xor
in
jmp
jle
and
cmp
sbb
pop
cmc
jns
loope
popf
or
inc
cmp
mov
lea
mov
sub
fadd
cmp
push
addr16
shlb
pop
adc
sti
mov
hlt
popa
sub
jnp
jle
addl
shrl
imul
in
test
inc
sbb
sbb
es
dec
cmpsb
ljmp
stc
pop
shl
push
lcall
mov
loope
push
insb
jle
lds
xchg
xor
rcll
sub
sbb
rorl
inc
sahf
mov
mov
mov
push
mov
mov
add
dec
mov
pushf
sbb
cmpsb
shld
out
sub
neg
das
std
or
push
mov
sbb
icebp
push
loop
imul
sub
cli
fiadds
sti
inc
test
fdecstp
adc
xchg
aad
dec
mov
jb
sub
jp
mov
and
rolb
test
cmpsl
sub
or
add
imul
rcll
mov
pop
jnp
pop
jbe
sahf
or
popa
inc
ss
stc
mov
fnstenv
icebp
mov
sub
ss
aaa
mov
add
imul
ss
loope
push
xchg
aaa
push
pop
inc
flds
cmc
in
inc
cs
mov
push
lock
and
push
lcall
movsb
clc
data16
inc
repnz
mov
out
cltd
or
rorl
nop
xchg
pop
rolb
out
jbe
cmp
in
jnp
pop
add
xor
rcr
out
arpl
push
inc
and
mov
dec
mov
mov
ds
and
mov
adcl
popf
or
ret
jns
inc
scas
in
dec
aad
push
daa
fisttps
loopne
push
mov
les
ret
into
mov
lret
cwtl
xor
and
movsb
xor
cld
faddl
adc
mov
lahf
movsb
in
mov
push
mov
cmovns
fdivrl
pop
pop
lcall
xchg
pop
ficoms
in
sbb
lret
cmp
dec
push
pop
sub
mov
cli
cmp
mov
into
inc
test
mov
sub
mov
cmp
jo
jle
push
stos
mov
jecxz
mov
fs
jecxz
das
xlat
inc
push
stos
mov
popl
inc
jbe
lret
shr
orb
mov
or
loop
add
push
push
push
leave
sti
adc
inc
inc
sub
inc
mov
and
pop
das
pop
jae
xlat
insb
cmp
push
lcall
adc
mov
addr16
mov
lds
mov
lods
pop
xchg
mov
adc
out
jnp
sarb
pushf
jnp
sub
gs
fdivs
mov
in
lahf
push
shll
notl
sbb
loopne
lods
lahf
imul
push
sbb
imul
adc
addr16
dec
or
adcb
js
mov
aas
mov
shrb
daa
mov
js
ds
cwtl
inc
test
int3
sub
xor
adc
sub
std
pop
popa
sbb
movl
jg
cmp
sub
and
jl
mov
daa
out
data16
imul
push
push
fmuls
sar
rclb
fnstenv
int
dec
leave
cwtl
xchg
push
ds
cli
xor
inc
or
outsl
or
sbb
inc
mov
iret
sbb
adc
jne
add
dec
xor
jo
icebp
out
movsb
ljmp
mov
pop
divb
pop
adc
scas
dec
jns
orl
xlat
mov
clc
sub
iret
sub
sarl
push
pushf
addl
sub
je
and
xor
push
ret
mov
addr16
sbb
mov
and
fsub
pop
lcall
sarl
rclb
push
paddsb
pop
cwtl
fsubrp
addr16
xor
add
or
std
jns
or
push
outsb
sub
add
mov
movups
inc
and
aas
sub
sub
addr16
mov
loop
inc
jae
lods
mov
cmp
jge
jno
cltd
or
iret
adc
xchg
and
mov
or
scas
mov
mov
sbb
ficoml
jb
and
sbb
pop
outsb
bound
mov
lds
push
movsb
fwait
cmp
test
inc
sahf
mov
xchg
pop
xlat
inc
test
dec
mov
sbb
adc
insl
lods
or
pop
loope
rorb
xchg
jmp
sub
inc
ds
mov
sbb
inc
mov
inc
fsubr
push
xchg
in
fsubr
dec
aaa
popf
lods
jb
out
xchg
jl
and
cs
or
aaa
ret
repz
fbstp
nopl
mov
lods
push
mov
pop
fisttpll
shlb
mov
push
popa
cmp
push
fadds
jne
xor
pop
mov
jle
sti
push
jl
lret
cs
adc
jbe
les
push
sbb
dec
pushf
xchg
rolb
mov
dec
and
and
popa
sahf
or
and
xor
loope
leave
f2xm1
xor
mov
jg
pop
pop
aas
aaa
arpl
jecxz
outsb
daa
cmp
xchg
inc
das
and
sahf
ret
mov
outsb
arpl
mov
push
jp
shll
lock
pop
arpl
push
ss
jnp
sti
push
sub
scas
in
repz
cmp
fnsave
fs
stos
sub
jnp
loopne
imul
cmp
xor
mov
clc
jmp
std
cmp
add
and
test
sbb
pop
mov
inc
xlat
jae
inc
mov
inc
movsb
xchg
dec
ret
sbb
dec
out
sbb
inc
fistps
dec
pop
and
sti
aad
scas
fadd
lods
sti
test
repnz
repnz
pop
mov
pop
jnp
or
pop
xor
jge
or
mov
sbb
push
ret
jae
xchg
and
addr16
clc
bound
xchg
xchg
test
pop
sbb
pop
pop
xorl
imul
inc
pop
or
pushf
bound
popl
loopne
jecxz
sub
ret
mov
out
push
test
iret
pop
movsb
mov
fucomi
sti
push
mov
das
adc
sub
pop
xlat
add
xor
jb
pop
sahf
push
pop
dec
sahf
stos
insb
mov
adc
mov
or
pop
pop
rolb
stos
mov
lea
and
sub
aas
int3
testl
cmpsb
inc
mov
sub
fwait
pop
loope
jmp
test
and
lods
add
movsl
adc
cmpsb
cmp
sub
jne
sub
inc
iret
cmpsl
push
es
push
sub
mov
and
rorl
adc
imul
jo
push
or
push
dec
js
ret
and
lcall
pop
sub
or
jbe
rolb
out
sbbl
pop
mov
xchg
pop
stc
sbbl
into
inc
bound
pushf
in
mov
leave
movsb
out
push
sbb
pop
aas
add
inc
cs
push
mov
push
push
adc
cmp
rcrl
push
inc
les
xor
lock
xchg
popa
or
movsb
sbb
fs
and
shll
sub
filds
pop
sar
xor
nop
push
pop
push
jnp
cmp
sbb
dec
fsubrs
mov
push
xchg
adc
dec
dec
imul
xchg
lea
es
rolb
lock
and
xor
rcll
test
mov
pop
sbb
pop
jmp
push
bound
sbb
pop
cltd
and
loopne
and
inc
test
xchg
xchg
or
andb
ficoml
jno
loop
addl
sbbl
rorb
sub
mov
out
mov
pop
lock
or
inc
mov
mov
push
cmpsl
xchg
dec
imul
testl
mov
cmp
pushf
cmp
aas
pop
stc
fistpll
aam
mov
fiaddl
push
cmp
hlt
and
icebp
nop
lahf
sti
mov
push
push
pushf
mov
nop
push
inc
pusha
mov
fiaddl
mov
pop
jl
xchg
test
sbb
test
wbinvd
and
cmc
hlt
hlt
push
movsb
cmpsl
jle
xor
test
dec
scas
jg
outsb
dec
ret
jmp
popa
clc
iret
adcl
test
popf
lods
or
jl
fcomip
jmp
adc
jbe
add
leave
jae
adc
cmp
out
mov
add
inc
push
scas
iret
pop
mov
jb
shrb
add
cld
adc
mov
jge
jns
adc
pop
sub
repz
in
leave
lods
shll
add
mov
pop
jecxz
xchg
popa
call
mov
mov
pop
inc
ret
add
shlb
push
push
push
inc
stos
lock
inc
adc
fstps
sub
cwtl
imul
xchg
imul
into
paddusb
pop
fiadds
sub
mov
push
enter
mov
packuswb
adc
and
ljmp
push
in
gs
rolb
sahf
test
ja
loopne
lret
imul
ds
xor
sahf
xchg
push
push
ficoms
cwtl
push
outsl
mov
push
xlat
xchg
jge
push
cmp
movsb
add
loopne
mov
jmp
jp
mov
rcl
mov
xchg
mov
lods
add
xchg
loope
sbb
lods
and
mov
outsb
testl
lret
cwtl
xchg
stos
outsb
inc
mov
adc
adc
flds
addr16
ja
fsubrs
sbb
lds
cmp
ds
inc
jno
mov
xchg
into
jae
cmp
xor
pop
mov
push
fisubl
sbb
neg
jne
cmpsl
push
inc
stc
call
int3
xchg
pop
cmpsb
out
scas
incl
ja
pop
inc
cmp
imul
fildl
add
jo
cmp
popa
arpl
sub
cmp
push
fidivrs
and
mov
adc
movsb
mov
mov
add
aaa
add
in
jg
imul
addr16
xchg
adc
sub
push
outsl
aad
mov
sub
sbb
mov
xchg
test
mov
xchg
adc
fwait
pushf
pop
inc
dec
popl
data16
clc
inc
mov
push
sub
push
cld
jb
mov
aad
dec
fildl
int3
daa
out
pop
inc
mov
mov
pusha
fwait
lret
in
dec
cmp
lock
in
pop
data16
ss
test
fs
das
dec
test
dec
lcall
jl
test
clc
adc
xor
push
sbb
xor
in
jns
test
lods
cmp
pop
add
adc
mov
jae
sub
filds
mov
aam
or
push
mov
jg
xor
xchg
jnp
xchg
adc
pusha
movl
mov
mov
aad
jmp
jo
lahf
add
inc
cli
test
arpl
testl
jl
data16
nop
mov
ss
in
scas
sbb
cmpsb
mov
xchg
cmc
adc
shl
and
cmp
add
stos
mov
jae
ljmp
cltd
test
icebp
cmp
dec
andb
jbe
jbe
or
nop
xchg
inc
test
ja
fidivl
dec
xor
sub
popa
sbb
mov
cmp
test
xchg
push
sub
imul
fiaddl
pop
xor
and
cmp
and
mov
sbb
cmpb
repz
sti
or
in
mov
dec
xchg
push
test
push
push
adc
add
pusha
dec
add
jp
sar
lds
adc
or
xchg
mov
gs
push
xchg
lods
test
das
lcall
push
jp
jl
roll
popf
clc
outsb
shr
lret
mov
or
sub
cmp
cmp
fbld
jbe
out
mov
test
decb
frstor
js
lahf
xchg
cwtl
sahf
call
lret
out
test
push
cmp
lods
push
int3
enter
or
sub
call
cmp
jle
sti
call
push
aam
jp
clc
push
cmp
outsl
aas
or
jbe
mov
icebp
or
mov
jnp
adc
cmpsl
pop
imul
jle
notl
loop
mov
mov
push
in
into
mov
fsubs
or
sub
rorl
cmp
out
mov
fcmovu
sar
xchg
popf
inc
sub
js
adcl
sub
push
orl
pop
lcall
rcrl
push
shl
push
add
add
dec
adc
sub
fnstcw
dec
xchg
in
jae
in
and
jecxz
pop
sbb
icebp
lret
push
sub
mov
pushf
test
lea
mov
and
xchg
sbb
push
mov
add
in
das
fwait
mov
cltd
mov
mov
or
dec
push
jg
cmp
push
out
sub
sbb
lods
jns
adc
and
test
data16
xchg
jp
pop
pop
dec
gs
daa
jo
shrb
mov
cmp
dec
jo
and
add
mov
repz
jl
std
mov
lcall
inc
jbe
sti
adc
into
repz
leave
mov
inc
idiv
xchg
sub
dec
xor
lea
insl
pop
cs
ret
and
mov
xchg
pusha
adc
xorb
fsubl
mov
pop
cli
jp
ljmp
pop
dec
imulb
and
cmpsb
or
mov
dec
jne
add
cmp
and
repz
orb
adcb
jo
je
dec
ds
and
inc
sahf
adc
sbb
out
cmp
jns
psubsw
or
cld
or
ja
mov
sub
fcompl
sub
std
dec
sbb
aas
push
je
cmp
das
pop
xor
repz
jl
popf
sbb
bound
sub
or
dec
aas
cwtl
cmp
in
jno
xchg
and
je
jge
cmp
sub
sbb
xchg
pop
outsl
push
xor
xchg
or
clc
or
mov
jecxz
aad
pushf
loop
in
sub
adc
ss
inc
jo
stc
bound
jmp
out
lds
scas
mov
imul
mov
pop
scas
js
inc
push
xor
adc
xlat
add
shll
inc
jbe
aas
jae
xor
scas
pop
inc
mov
out
fsubr
mov
cli
and
out
inc
popl
out
inc
push
push
lds
hlt
fisubs
push
xor
sbb
js
cs
xchg
mov
fwait
movsl
mov
adc
inc
testl
jg
dec
popa
jecxz
adc
les
jbe
mov
mov
lret
and
mov
mov
ret
pop
pushf
fnstenv
fnstcw
stos
or
dec
push
cwtl
and
push
inc
push
jo
lock
lods
mov
xor
add
scas
fs
inc
mov
jge
jb
std
mov
push
add
cmpsl
push
or
sub
mov
rclb
ss
push
mov
mov
dec
rcll
jg
mov
enter
add
mov
jb
sub
and
xchg
cwtl
shlb
sub
push
int3
ret
sbb
leave
pop
aad
popf
xchg
inc
xor
jp
dec
jb
xchg
add
loope
daa
test
adc
aad
add
jbe
cmc
pop
mov
dec
es
xor
dec
xchg
daa
sbb
out
inc
std
xor
or
dec
cs
dec
or
dec
mov
adc
clc
fs
jl
cmp
add
xor
mov
loopne
out
xchg
icebp
pushl
cltd
jle
sub
js,pn
xor
icebp
loopne
lods
test
add
mov
das
in
bound
inc
pop
test
jp
mov
dec
or
push
xor
jbe
push
pop
sbb
rcll
xor
loopne
jecxz
mov
loop
push
lret
idivl
ret
std
dec
xchg
sub
popf
test
mov
jo
sbb
sbb
mov
and
shll
xor
mov
xor
sbb
sbb
jg
inc
lock
cmp
enter
dec
adc
dec
push
sub
lret
cmc
add
lret
rcll
insb
adc
jo
dec
sub
nop
xchg
xorl
movsl
push
dec
movsl
and
decl
movsl
loopne
outsl
in
jnp
es
push
sbb
call
mov
push
pop
push
cwtl
lods
mov
dec
pop
movsb
jl
xchg
mov
into
cmpsl
scas
push
es
mov
mov
cwtl
sub
neg
negl
lret
lret
dec
push
mov
sahf
cli
stos
mov
mov
popa
pmuludq
dec
cmp
push
mov
mov
inc
repz
pop
inc
jle
push
mov
lock
cmp
mov
clc
stos
fidivs
pushf
addr16
stos
in
jge
sub
and
stos
dec
sbb
loop
fldt
xchg
ljmp
cs
cmp
mov
push
lret
ds
add
ffree
pop
inc
lds
rcrl
push
jns
adc
sbb
mov
mov
and
jl
out
fsubl
pop
les
lcall
or
arpl
icebp
mov
sbb
mov
mov
aam
dec
js
pop
mov
pop
mov
sub
sbb
jge
xor
sub
push
decl
sub
mov
imull
sbb
out
or
xor
and
clc
pop
sub
fdivs
ljmp
add
imul
push
in
jbe
jno
arpl
jmp
mov
bound
test
test
int3
adc
dec
cmp
or
aad
jge
dec
jl
cltd
fadd
icebp
sbb
and
pop
stos
lods
into
into
add
sub
sub
push
jecxz,pt
lea
ds
les
popa
push
and
arpl
pop
movsb
arpl
ret
add
rclb
rol
cwtl
or
fwait
lds
jge
and
xorl
adc
out
adc
sub
inc
xchg
jns
jb
stos
dec
into
out
call
xchg
ds
push
sub
sbb
sub
call
and
xchg
mov
cwtl
gs
adc
jae
stos
fwait
setae
daa
cmc
mov
pop
cmp
push
mov
enter
aad
cs
mov
cmpsl
mov
imul
jle
test
sub
push
push
push
xchg
repz
inc
icebp
sti
mov
aam
subl
rolb
imul
imul
aam
adc
lret
pop
inc
cmpsb
test
xchg
insb
jne
push
ljmp
test
stos
rcll
testl
outsb
mov
hlt
sbb
fstl
popf
bswap
clc
std
inc
enter
xor
shll
ss
ficomps
xchg
sub
out
and
pop
insl
and
pusha
in
pop
mov
lock
arpl
sar
stos
fs
fwait
inc
popa
ds
lret
stos
flds
add
cwtl
inc
add
or
stos
mov
sub
in
notb
cmp
push
std
loope
mov
test
lods
lea
jle
jp
popf
pop
jmp
adc
cmp
loop
test
rcll
cwtl
cmp
inc
addl
aas
cmp
xor
pop
test
sbb
xor
jecxz
faddl
xchg
mov
cs
dec
xor
mov
mov
and
jbe
sub
stos
mov
outsb
inc
dec
or
je
je
imul
mov
out
das
aam
pop
sub
mov
jmp
mov
addr16
cltd
punpckhdq
sub
scas
ds
imul
ret
daa
cmpsl
inc
cltd
and
push
xor
adc
data16
fistpll
int3
or
lods
je
push
daa
fldcw
aaa
rcl
loopne
push
pop
jp
gs
mov
ret
imul
sub
adc
es
add
sbb
and
daa
mov
out
ret
mov
xor
stos
sbb
int3
sarb
sub
xor
xor
es
stos
loop
mov
push
jecxz
nop
push
sbb
mov
xor
xlat
push
jp
in
ja
push
fmull
insl
add
scas
mov
and
ss
subl
sbb
inc
cmc
loop
add
add
pop
dec
pop
push
aam
or
mov
cmp
jl
repnz
add
outsl
out
aaa
nop
mov
dec
fildl
hlt
dec
lahf
and
mov
mov
jb
clc
jbe
jl
jle
mov
adc
cmp
sbb
inc
xchg
sub
mov
cs
adc
adc
loopne
push
cs
mov
shrl
dec
test
fs
subb
xchg
cmc
or
sub
mov
pop
ds
es
add
in
mov
mov
outsb
inc
dec
jae
imul
data16
inc
mov
popf
in
popf
cmp
dec
pushf
mov
in
add
insb
or
outsb
outsl
insb
mov
mov
jmp
adc
adc
cmp
inc
jne
mov
subb
scas
insl
out
les
movsl
ret
test
mov
shll
push
sahf
shlb
sbb
rol
std
mov
cmp
mov
adc
xor
fsubs
dec
push
jge
xlat
scas
orl
xchg
sahf
shl
xchg
arpl
dec
jmp
pusha
mov
std
mov
movsl
fldt
int
and
int
xor
nop
arpl
fcoms
movsl
sub
pop
adc
gs
jo
xchg
push
adc
mov
pop
subb
cs
mov
xor
into
out
mov
jb
cmp
scas
jo
xor
lds
hlt
icebp
daa
add
adc
pop
or
mov
nop
repnz
inc
jecxz
mov
addl
and
or
pop
cmc
loop
in
outsl
ljmp
xor
xor
cmp
movsw
add
ja
mov
pop
jb
or
push
cs
aam
pop
mov
fistl
or
ljmp
cmpb
sbb
hlt
aas
inc
push
cli
inc
popf
push
xchg
cltd
ss
push
or
insl
or
shr
and
or
adc
cmp
mov
push
add
leave
mov
fsubrl
mov
push
aas
add
mov
and
jno
shl
jo
or
xor
subb
inc
mov
mov
pop
sub
xor
and
mov
adc
xor
sti
scas
dec
icebp
lods
add
cmp
sbb
add
ja
leave
popf
dec
dec
mov
adc
and
pop
imul
push
hlt
xchg
aad
xchg
inc
inc
mov
add
aas
fisttpll
xor
mov
push
xor
fiadds
loope
insl
fistps
dec
jno
movsl
rolb
enter
dec
loop
sbb
mov
inc
fwait
movsb
test
xorb
aam
xchg
mov
js
lods
das
push
fsubs
sbb
mov
xchg
jge
xor
xchg
mov
cli
inc
or
nop
rcrb
stos
push
mov
pop
and
pushf
not
jae
xor
jbe
xor
cs
xchg
cltd
cli
in
fstpt
cmp
subl
fwait
inc
pop
clc
xlat
push
mov
sbb
xor
cmp
stc
xlat
mov
insl
mov
or
or
xchg
mov
sub
mov
into
and
xchg
movb
inc
jne
loop
icebp
insl
dec
rcll
outsb
dec
mov
cltd
call
out
dec
and
nop
add
faddl
leave
lods
xchg
arpl
pop
mov
jae
jecxz
out
jge
decl
pop
aam
imul
psubsb
scas
stos
dec
shrb
out
adc
arpl
xchg
rcll
add
sub
lahf
adc
dec
aad
jnp
daa
rcrl
lret
mov
xchg
ds
nop
cmpsl
sub
icebp
mov
xor
out
xchg
inc
xor
push
mov
mov
dec
outsb
cltd
cld
mov
repz
ds
popa
push
adc
jae
imul
out
cmp
negb
lds
dec
imul
sub
pop
jmp
add
cld
dec
sbb
xor
aam
adc
shrl
pop
aad
bound
outsb
push
pop
xchg
mov
ds
adc
shlb
jge
in
aam
mov
jbe
sbb
imul
sbb
dec
inc
cltd
lea
jp
mov
add
fadds
push
xor
and
push
jp
or
add
mov
enter
dec
sti
mov
cwtl
jns
jb
leave
mov
negb
popf
inc
inc
inc
fnstenv
sbb
mov
cs
add
sarb
push
cwtl
loopne
fiaddl
mov
clc
outsl
or
jbe
add
mov
das
gs
fbld
push
sbb
sbb
xchg
or
int3
push
fcmovnu
or
fidivs
jne
popl
sbb
mov
shrl
testb
in
divl
sbb
fwait
cmp
sbb
mov
daa
sbb
andb
mov
movsb
adc
ror
fsubrl
inc
jecxz
aaa
jmp
jnp
aaa
inc
rcrl
cmc
hlt
cli
sbb
pop
decb
dec
inc
inc
test
push
mov
jg
jmp
bound
add
jno
testb
or
sarl
xchg
lcall
imul
mov
mov
sbb
mov
inc
mov
xchg
sarl
xorb
xchg
out
mov
mov
loope
push
pusha
scas
add
dec
sbb
in
or
les
mov
fimuls
sub
fwait
arpl
scas
push
jmp
or
cmp
dec
xchg
push
out
shr
pop
inc
rol
or
out
out
cmp
data16
xchg
call
lea
test
out
lar
xor
pop
shr
cmp
jno
push
pop
pop
or
and
add
push
mov
mov
or
mov
movsb
loopne
fwait
icebp
fiadds
and
sahf
mov
test
mov
je
lret
jae
imul
cmpsl
fldt
inc
xchg
jns
mov
cmp
cmc
dec
sysenter
cmp
add
xlat
push
ja
dec
pop
push
xor
xchg
out
mov
lods
xor
repz
test
jecxz
cwtl
adc
lret
jp
jmp
fisubrl
ret
mov
test
aaa
nop
ja
arpl
js
xchg
jle
sbb
and
push
movsl
lock
mov
adc
mov
push
pop
cltd
loopne
and
or
xchg
sbb
test
adcb
test
imul
mov
push
push
and
test
adc
pop
or
xchg
pushf
pusha
push
cmpsb
or
fstps
stc
xchg
aam
repnz
call
outsl
mov
mov
popf
jecxz
mov
mov
and
lret
sub
and
dec
mov
mov
sbb
aas
gs
arpl
mov
push
in
repz
mov
lods
int
ljmp
or
fdivs
add
imul
mov
mov
sub
sbb
neg
shll
in
xchg
inc
punpckhbw
sbb
ret
add
inc
push
not
int
adc
push
std
and
push
aad
insl
cmp
aaa
cmpsl
adc
pop
mov
push
xor
les
inc
mov
ja
outsl
out
sbb
mov
scas
out
sbb
pop
mov
jne
addl
sti
imul
push
pop
push
dec
jb,pt
mov
fcoms
leave
jge
and
dec
in
fucomi
loop
pop
mov
xor
stos
repnz
idiv
mov
xchg
push
pop
or
push
rclb
icebp
rol
add
aad
pop
add
sahf
xchg
fmull
leave
sti
sbb
repz
cld
andl
fiadds
pop
sbb
push
push
lods
or
cmpsb
sub
sti
add
mov
xor
mov
nop
xchg
sbb
jb
in
push
lods
or
add
mov
pop
xor
xor
ljmp
outsl
shll
add
mov
push
push
stos
out
enter
dec
scas
xor
sbb
adc
mov
xchg
jno
sub
xor
lret
inc
std
jge
xchg
or
loopne
arpl
repz
add
mov
aam
xor
decl
ret
fidivs
jp
jno
mov
or
fcomip
or
xchg
cs
pop
push
xchg
cmp
inc
cmc
mov
add
or
ja
in
arpl
dec
gs
adc
adc
adc
movsb
adc
inc
andl
jmp
fistps
sbb
and
les
sbb
jno
imul
outsb
sbb
lea
jcxz
pop
xchg
xor
inc
sbb
adc
test
mov
stos
loope
out
cmp
stos
bound
dec
sbb
les
insb
or
aas
sti
xchg
pextrw
push
push
mov
and
int
add
fsubrs
call
or
test
rcrb
xchg
movsl
cs
lods
dec
hlt
fwait
xor
lea
mov
adc
lods
xchg
push
bound
mov
cmpsl
push
xchg
fs
pop
or
xchg
mov
and
sub
cltd
sahf
rorb
lea
sub
mov
jl
or
decb
mov
arpl
xor
fisttps
scas
lods
insl
push
add
sub
jge
mov
xchg
xlat
es
imul
inc
repnz
daa
int
and
mov
lcall
paddb
inc
sub
std
pop
cltd
scas
add
vpmulhw
icebp
pop
dec
cmpsl
in
nop
pushf
stc
sbb
subb
or
add
mov
mov
push
aas
pop
mov
sbb
sub
iret
gs
adcb
dec
bound
mov
jge
jns
or
cmp
xlat
inc
data16
cwtl
cmp
xchg
xor
pushf
mov
sahf
test
xchg
fstp
mov
pop
lds
lret
sub
xchg
add
push
inc
fs
jo
xor
sub
insl
adc
lods
test
fwait
in
adc
cmp
cld
push
xchg
push
loopne
pop
test
sbb
aas
or
out
fimuls
out
adc
stos
cmp
enter
xor
mov
iret
mov
mov
adc
xchg
or
sub
fstl
or
ror
iret
cmc
fst
test
or
das
orl
sbb
arpl
cwtl
and
sub
push
and
jb
es
xchg
xchg
in
mov
ss
dec
add
cwtl
outsb
and
jle
jmp
jge
sub
add
test
dec
mov
adc
dec
fwait
in
pop
xchg
fcomip
sbb
add
aam
or
fcoms
in
pop
hlt
jecxz
sbb
pop
cld
aaa
pop
out
imul
adcb
and
and
push
lea
lcall
into
cmp
or
jge
bound
add
mov
pop
test
cmp
and
push
test
pop
mov
mov
rcrl
addr16
inc
push
push
popa
or
insl
pop
sbb
fnstcw
push
sbb
out
and
jnp
jl
data16
dec
pop
ja
jo
shll
jnp
mov
pop
xor
bound
xchg
sbb
loop
inc
stos
mov
into
add
out
push
cs
fistpll
das
cld
addr16
repz
pop
jnp
or
mov
out
cmp
jle
notl
mov
data16
rolb
pop
push
in
jge
popa
stc
adc
xor
inc
sbb
push
push
jg
mov
daa
sbb
js
cltd
cmp
loope
jle
mov
push
sub
jbe
ss
sarb
mov
dec
cmp
hlt
gs
scas
cmp
or
add
add
adc
fidivrl
and
aad
xlat
push
stc
add
daa
les
sub
xchg
imul
movsl
outsl
adc
cld
lahf
and
or
movsl
fwait
dec
sub
sub
mov
fs
bound
mov
lcall
cwtl
or
aas
dec
push
lods
int3
popw
or
test
inc
daa
jnp
and
shr
cmpsl
push
ljmp
dec
pop
dec
mov
xchg
iret
xor
out
movsl
in
mov
addr16
mov
adc
repnz
mov
lea
test
sub
iret
push
pop
mov
insb
mov
push
jb
mov
jmp
pop
ja
in
or
xor
fcomp
xchg
ret
inc
dec
xorl
outsb
cmp
add
data16
movsb
iret
lods
dec
dec
pop
insb
addl
fwait
cmp
mov
cmp
add
pop
les
pusha
sarl
lock
rcll
scas
jle
pop
mov
cmpsl
mov
dec
cmp
cmp
iret
xor
addr16
ret
ret
xor
pop
dec
inc
push
call
add
test
xor
jecxz
mov
je
iret
cmpsl
mov
repnz
std
insb
inc
push
inc
and
pop
xor
loop
sub
or
cmp
aaa
movsb
test
xor
push
mov
dec
loopne
les
daa
xor
addr16
cmp
daa
into
inc
mov
mov
cmc
ja
adc
inc
js
dec
lock
rclb
push
cltd
fbld
or
and
movsl
mov
inc
outsb
out
lock
xor
lods
or
mov
mov
sbb
mov
repnz
insb
mov
sarb
pop
pushf
sarb
xor
hlt
in
ret
push
mov
rorb
inc
sub
mov
pop
xlat
xor
and
ja
sbb
xlat
xchg
out
fsubrs
adc
jne
xchg
mov
jp
fadd
push
mov
imul
xchg
je
pop
pusha
addr16
sbb
stos
and
mov
or
xor
dec
outsl
pop
cli
nop
jl
jo
sti
popa
dec
repz
fs
xor
lcall
lea
outsl
lret
mov
cmpl
pop
shl
inc
pop
adc
scas
and
jno
cs
inc
sarb
lret
loope
xchg
idiv
fcoms
pop
jo
pop
arpl
es
adc
scas
jmp
mov
adcl
cmc
adc
xchg
sub
fldcw
add
test
scas
adc
in
test
adc
pop
push
test
std
adc
andl
fbstp
mov
xchg
add
xor
push
xchg
sub
test
cwtl
mov
in
addb
notl
cmc
xor
mov
mov
cmpsb
or
mov
xor
pop
shlb
sbb
rorb
or
mov
lcall
jo
cmp
testb
filds
mov
add
fwait
das
push
mov
pop
pop
pusha
ret
jnp
inc
iret
stc
mov
fldl
outsl
push
mov
inc
jle
jg
cmp
jbe
in
cmc
fstp
xor
xchg
mov
mov
pusha
sbb
in
fisubrl
add
jbe
mov
adc
push
sarb
pop
fstps
cmp
testl
mov
popf
lahf
mov
mov
sub
mov
dec
or
xor
mov
adc
in
subb
xorl
pop
mov
or
les
movsl
xchg
xchg
les
mov
mov
ret
xchg
notl
jle
hlt
dec
ss
addb
xor
gs
movsl
enter
in
and
or
dec
inc
mov
adc
arpl
dec
pop
push
jne
icebp
pop
adc
add
and
cmp
inc
decb
mov
push
push
or
push
repnz
imul
cmc
jns
mov
pop
inc
xlat
in
repnz
mov
iret
or
int
adc
jno
js
jge
ljmp
or
inc
out
out
xor
outsl
in
cmp
pop
subl
nop
inc
mov
push
jne
imull
cmp
enter
aad
mov
nop
lcall
cmpsl
mov
sbb
and
mov
push
or
lock
loop
lret
xor
xchg
gs
icebp
push
cmpsl
lea
xor
cmp
sbbb
push
aad
lcall
hlt
cmp
or
xor
fadd
je
bnd
xor
fimull
jmp
xchg
dec
mov
pop
jbe
in
sti
mov
push
lret
dec
pop
xchg
xchg
adc
call
loop
cmp
call
mov
sub
int
sbbb
inc
adc
sbb
push
xchg
adc
inc
jbe
data16
mov
or
sarl
cmp
test
pop
cmpsb
and
pop
mov
sbb
xor
ret
fs
imul
xchg
movsl
test
or
mov
adc
je
roll
daa
popw
mov
ret
fildl
adc
cmc
xor
add
sbb
pop
addr16
pop
mov
cmpsb
popf
fildl
loopne
fistpll
fistpll
out
outsl
jbe
push
in
xchg
test
nop
cmp
cmp
pop
jmp
lahf
nop
push
mov
in
add
sub
mov
mov
icebp
xchg
mov
out
sbb
cwtl
xchg
in
std
xor
fnstcw
repz
mov
ret
cmpsb
rcl
insl
jmp
lds
out
push
outsb
aas
stos
loope
fwait
scas
jnp
fs
test
cmp
fidivl
adc
adc
mov
mov
inc
jb
and
cld
or
fldt
rcll
ret
inc
xor
movups
cmpl
pop
jmp
xor
sub
mov
aas
fsts
mov
push
xchg
stos
or
or
push
dec
icebp
and
inc
aam
sbb
ss
mov
rorb
les
mov
mov
cwtl
or
adc
adc
push
subl
sbb
sbb
in
jp
mov
inc
add
hlt
jg
adc
aad
lds
sub
les
js
je
arpl
or
cmp
inc
or
add
lret
push
inc
xchg
xchg
pop
pop
int3
xchg
int
xor
sbb
ss
mov
inc
inc
dec
enter
inc
xor
cwtl
push
je
jecxz
mov
in
shll
lcall
cld
ret
cli
hlt
imul
movsl
dec
adc
cwtl
mov
rcr
adc
outsb
push
mov
repz
push
pushf
leave
add
mov
insl
lods
add
push
push
jp
and
sub
into
nop
adc
mov
enter
inc
xchg
sbb
adc
inc
popf
mov
fisubl
shrl
or
mov
push
movsl
aam
ss
mov
dec
in
nop
sbb
and
mov
lds
pushw
ret
push
and
test
daa
push
push
and
popa
cwtl
mov
jecxz
mov
sbb
sbb
fsubr
lcall
sahf
pop
sbb
add
xor
stos
cmp
xchg
adc
dec
and
cmpsb
sahf
and
push
fsubl
cwtl
dec
mov
xchg
addr16
fistpl
outsb
rolb
insb
mov
mov
xchg
mov
movsb
sbb
stos
xchg
sub
aad
mov
nop
iret
cmp
inc
out
bound
lds
stos
ss
jo
cmp
add
push
sbb
dec
and
or
or
push
pushf
jno
iret
push
mov
dec
js
mov
mov
movsb
outsb
xor
sub
adc
push
out
sbb
jp
dec
sub
xchg
mov
dec
lock
push
inc
pusha
mov
ret
pop
jo
into
pop
stc
movsl
ljmp
cmpsl
mov
cmc
sub
loopne
jg
fs
icebp
inc
mov
ja
jns
pop
repz
out
push
pusha
adc
cmp
lea
jbe
ss
push
xchg
pusha
movsl
les
adc
or
int
ret
cltd
inc
ret
mov
pop
sbb
jbe
xor
adc
jne
mov
pop
outsb
push
jno
jno
and
jb
sbb
cmp
enter
adc
adc
jne
insl
cld
mov
test
or
jg
lret
neg
xchg
dec
dec
pop
xchg
add
jnp
pushf
out
ja
rorb
mov
aam
jmp
sar
cwtl
in
inc
js
fcomps
bswap
and
push
xchg
xor
lods
jle
or
or
and
and
xor
cmc
jge
mov
mov
hlt
xor
add
ljmp
jge
dec
jbe
ja
stos
ret
mov
stos
ja
daa
arpl
fidivs
jbe
sbb
pushl
jbe
jae
adc
mov
rcll
xor
and
inc
cli
in
pop
mov
sahf
push
outsb
cs
clc
inc
sti
push
mov
clc
popa
hlt
jb
das
jmp
shll
sub
test
out
xchg
and
addr16
mov
adcl
mov
imul
gs
push
mov
pop
std
dec
sub
xchg
ss
jg,pt
clc
pop
pop
mov
lret
stos
sahf
push
gs
lods
adc
or
push
mov
jmp
aaa
pop
std
mov
cmp
loope
fists
jecxz
inc
cli
sbb
loop
int
bound
pop
dec
jle
pop
mov
call
lds
xlat
repz
push
lea
mov
cmc
cld
addr16
push
lock
sarb
popa
dec
add
je
mov
fisttpl
mov
dec
jecxz
test
in
pop
adc
sub
xchg
fsubrp
aam
push
je
js
repz
mov
ja
push
shl
mov
jae
dec
sub
push
xchg
mov
fdivrl
mov
in
lahf
jmp
sbb
mov
lock
sti
movsb
or
in
add
mov
pop
aam
push
fidivs
in
sub
dec
cmp
ss
push
stos
lods
outsb
stos
iret
xchg
sbb
pushf
xchg
movsb
jmp
jg
iret
mov
addr16
xchg
pusha
iret
pop
sti
sbb
push
sahf
fs
jne
out
sbb
dec
pop
xor
mov
fadd
push
lret
cmp
inc
xchg
push
nop
inc
mov
mov
jg
ljmp
jp
xchg
mov
push
aas
jecxz
in
hlt
cmp
leave
call
adcb
sarb
or
call
or
scas
rorb
lds
xchg
test
roll
sub
hlt
incl
xchg
cltd
jo
aaa
push
cmp
dec
les
xor
pop
iret
push
aad
js
out
dec
cmpsl
pusha
jl
push
sbb
daa
sub
add
mov
mov
ret
and
popa
jo
sbb
out
jns
das
add
mov
outsl
inc
std
ss
fwait
mov
gs
pop
xor
movsl
jge
ds
fnstsw
scas
mov
sbb
jge
sahf
fcmovbe
in
inc
cs
and
dec
int
andb
xor
data16
cld
sbb
clc
inc
test
sub
mov
sbb
movsb
cmp
fimull
aas
xlat
and
mov
inc
lcall
cwtl
cmpsl
mov
out
mov
es
jnp
test
inc
mov
sti
and
aas
cmp
cmpsb
aam
call
push
mov
pop
daa
xchg
pop
and
lods
mov
sub
inc
xchg
in
ret
in
out
out
push
sbb
aad
sahf
sub
ret
leave
repnz
mov
es
ljmp
mov
push
test
xor
loopne
lods
loopne
fidivrs
aas
mov
add
xchg
iret
mov
outsl
ss
inc
xchg
pop
in
push
sub
jbe
xchg
inc
sbb
fdivr
mov
cmp
dec
jge
sub
adc
xchg
push
test
xchg
add
lock
pop
fnstcw
cmc
insb
subb
pusha
mov
lock
mov
dec
faddl
jno
into
clc
lret
out
scas
sub
inc
fsubl
jb
jg
push
mov
fs
and
icebp
or
loopne
and
lods
xchg
jg
movsl
pop
or
mov
in
jns
ljmp
ret
xchg
test
push
popa
sub
mov
push
test
in
or
or
inc
enter
mov
pusha
movsl
insb
mov
inc
cmc
fisttps
push
lret
cmp
xchg
stc
jg
dec
push
push
fidivl
cmp
or
in
shlb
subb
sti
dec
or
inc
xor
shr
pop
jns
dec
jmp
pop
or
xor
inc
mov
jb
mov
push
loopne
mov
sahf
test
dec
stos
xchg
sti
xor
push
mov
inc
dec
test
sahf
out
stos
adc
jae
or
stos
lea
mov
movsb
fwait
mov
and
adcl
inc
aad
shll
jb
jmp
cld
addb
mov
in
inc
sub
rorl
pop
loop
loopne
in
test
mov
jne
ret
jmp
pop
sub
push
inc
push
fwait
scas
push
add
clc
scas
mov
fxch
add
dec
rorl
push
add
leave
push
sub
ljmp
lods
movsb
lods
ljmp
repnz
inc
add
enter
lret
dec
lock
int3
or
popf
das
push
clc
andb
add
push
clc
popf
xor
or
test
cmpsb
cwtl
and
mov
lcall
xchg
jecxz
mov
jle
jbe
sub
je
sbb
outsl
sahf
decb
mov
idiv
outsb
lret
jl
jae
pop
and
mov
jl
adc
cmp
jge
aas
mov
mov
movsl
sbb
aam
mov
hlt
imul
pop
out
inc
data16
das
inc
leave
mov
xchg
mov
lret
fnstcw
pop
xchg
fimull
insb
sbb
mov
mov
push
pop
pop
lock
xor
test
or
mov
adc
or
xchg
push
add
repz
aad
push
out
sub
aas
scas
out
pop
sbb
push
dec
inc
scas
jl
sub
cmp
add
imul
push
jne
lahf
aam
mov
xorb
cld
pop
leave
iret
pop
mov
mul
js
cmp
insl
packsswb
inc
movsl
xor
xor
cwtl
in
xor
insl
push
and
ljmp
mov
fdivrp
in
sub
in
notl
add
cmpsb
fwait
sbb
jle
aam
out
mov
and
or
cmp
mov
xchg
xlat
mov
ret
pusha
xchg
push
sarb
sar
ds
dec
xchg
js
mov
pop
loop
cmp
push
pop
in
inc
adc
mov
aas
repz
push
mov
xchg
mov
sub
pushf
mov
movsl
push
cmp
pop
out
xchg
test
or
test
sbb
into
int
subb
sbb
add
fimull
push
imul
pop
jl
pushf
pop
lds
xor
lea
pushf
mov
jecxz
mov
int
inc
pop
scas
in
arpl
test
loope
fistl
sub
adc
xlat
and
lret
jl
cmp
nop
gs
add
mov
jb
data16
out
je
push
sub
xchg
and
add
sti
xchg
cmp
adc
adc
hlt
mov
jg
cld
pop
lods
or
dec
inc
jge
mov
cmp
movsl
mov
xchg
mov
cs
push
or
fwait
cmp
and
push
fs
loopne
insb
sbb
das
das
fwait
jnp
lds
lods
add
out
mov
inc
ret
cmp
sahf
add
outsl
push
dec
out
dec
sbbl
cmp
loop
fmulp
loop
sbb
xor
dec
repz
dec
jl
movsl
dec
sbb
mov
andb
mov
rcl
adc
mov
mov
push
jae
sbb
pop
mov
jle
popa
cwtl
ss
inc
pushf
js
inc
mov
adc
mov
mov
cli
inc
xor
lods
arpl
push
pop
adc
cmpsl
pop
xor
jo
hlt
loop
xor
sub
pop
enter
iret
dec
lds
scas
repnz
enter
pop
inc
ljmp
je
pop
testb
inc
js
rcr
add
scas
adc
mov
push
mov
fidivs
inc
push
pop
sub
sub
fsub
jb
sub
cwtl
icebp
loop
xchg
icebp
jmp
fwait
jle
rcll
adc
pop
inc
out
dec
int
xor
out
xor
mov
jecxz
shlb
mov
xchg
push
sbb
scas
sub
adc
push
mov
loope
popf
xor
xchg
cmpsb
pop
sub
ja
push
add
jb
dec
push
leave
sarl
hlt
addr16
rclb
mov
push
cmp
jns
mov
add
enter
pop
aad
mov
aam
dec
push
loopne
mov
xchg
push
es
hlt
les
jbe
inc
pop
outsb
gs
popf
sub
sub
ret
jbe
xchg
das
cmp
and
sbb
pop
cmp
cmp
aaa
imul
sbb
lret
ljmp
out
jecxz
scas
stos
les
cli
out
and
ret
xchg
mov
adc
pop
mov
je
aad
loop
lret
cmp
lds
inc
jo
bound
mov
sub
or
sbb
jne
rolb
xchg
sub
adc
pop
dec
sahf
lret
fildll
push
sub
cmp
insl
jmp
ret
fs
jno
orl
push
outsl
mov
cli
mov
cli
push
dec
mov
loopne
push
xchg
lret
cmpsl
push
cs
adc
lods
dec
mov
xchg
jb
pop
push
dec
aam
out
in
push
test
cmp
mov
push
scas
mov
xchg
stos
lahf
sti
sahf
xor
mov
repz
push
adc
push
lret
or
xor
sti
cmp
xor
outsb
loope
daa
jnp
sbb
xchg
fsubr
lods
lret
jae
call
xchg
leave
jnp
insb
dec
and
dec
mov
loop
xchg
sub
inc
shll
lds
mull
fimuls
sbb
lds
cli
jecxz
mov
jl
push
sbb
lahf
cmp
inc
cmp
mov
xchg
aad
push
jp
mov
push
pop
mov
test
hlt
bound
adc
test
xchg
popf
adc
add
pop
and
loopne
mov
decl
in
xor
fistps
mov
push
sub
cmp
xor
or
es
adc
js
clc
xchg
pushl
icebp
sar
bound
xchg
call
inc
adc
adc
jmp
cmp
inc
jno
fcompl
adc
insl
dec
inc
push
in
cmc
mov
dec
lret
stos
lods
outsb
add
xchg
push
cmp
ror
out
xchg
or
fisttpl
add
xchg
inc
sbb
mov
fistpl
idivl
int
xor
ret
push
dec
sahf
hlt
clc
mov
scas
fs
mov
fnstsw
pop
xchg
xchg
adc
pop
mov
stos
push
fstps
or
insb
ret
lods
inc
cmp
loopne
cwtl
jb
in
pop
and
pop
xchg
mov
ret
std
lods
movsl
sbb
data16
adc
cld
jb
pushf
inc
jecxz
ja
mov
cmc
mov
xchg
xorb
call
jbe
test
cwtl
fnstcw
push
sub
adc
or
mov
sub
xchg
pusha
aaa
xor
push
insb
out
adc
pushf
arpl
sbb
xchg
lcall
and
cmp
sbb
push
xor
mov
ds
push
mov
mov
scas
add
cmpsb
cmp
sub
push
dec
push
arpl
dec
shr
std
enter
ja
mov
fbstp
jmp
push
fldl
cmp
je
and
mov
aam
hlt
cmp
lahf
push
xor
mov
fwait
lret
pop
ror
lcall
xchg
or
ljmp
sub
decb
fistl
ja
adc
mov
or
sti
xchg
pop
sbb
add
mov
inc
aad
sbbl
imul
insb
sbb
add
test
lea
mov
into
adcl
stos
add
roll
adc
jno
orb
sub
mov
sbb
fadd
push
shrl
pop
or
js
adc
pop
icebp
loop
addl
push
adc
mov
sti
dec
loop
leave
xchg
cmp
lods
or
inc
jmp
inc
sbb
in
loop
ds
popl
outsb
or
or
ror
ret
adc
jp
shl
jmp
sbbl
pop
pop
dec
ss
dec
sbb
push
push
inc
in
add
incb
mov
aaa
loopne
dec
cmpsl
adc
loope
sbb
sub
push
and
cltd
jecxz
push
cmp
jno
or
out
rol
ljmp
push
addb
movsb
lock
push
popa
jecxz
cmpsb
sub
dec
aam
sbb
jns
mov
arpl
mov
mov
mov
jno
mov
adc
pop
aad
pop
adc
sbb
mov
std
icebp
out
mov
loop
add
pop
mov
aad
fsubr
sbb
dec
xor
pusha
and
out
xchg
xchg
cmp
bound
adc
int3
ss
in
shlb
mov
test
cltd
not
dec
rcrb
fcom
sub
push
push
gs
jb
daa
std
nop
mov
xor
jnp
ds
shrb
in
gs
mov
jo
inc
pop
scas
push
sbb
xor
push
add
xchg
fnstcw
sub
test
dec
fimuls
mov
lcall
jnp
fdivr
xchg
mov
icebp
push
lods
pusha
stos
outsl
or
adc
pop
outsl
sar
xor
lcall
mov
push
andl
testl
cmc
and
fcmovne
hlt
mov
pop
dec
mov
xor
mov
push
popf
loope
add
cmp
insl
cmp
gs
push
rcrl
xchg
add
push
aad
inc
pop
clc
ret
mov
stos
lea
call
popa
cmp
loopne
pusha
movsb
test
repnz
or
mov
dec
push
dec
int3
sti
xchg
pop
or
addr16
xlat
inc
pop
xor
lahf
mov
call
and
fistpl
xchg
icebp
mov
jecxz
inc
push
std
jl
dec
and
pop
xlat
popa
cmovne
adc
es
xor
ret
andb
xor
push
lods
stos
xor
jl
mov
mov
sub
xchg
sbb
movsl
fs
mov
int3
sbb
leave
fcmovb
sbb
hlt
in
das
cld
std
outsl
scas
xlat
mov
add
add
sub
sub
push
or
mov
push
sub
mov
cmc
or
into
sbb
out
push
or
das
insl
xchg
shlb
sbb
sahf
addl
add
sub
sbb
dec
cmp
stc
pushl
mov
sbb
lock
sub
or
and
adc
push
xor
je
adcl
test
cmp
stos
push
int3
sub
lahf
roll
fs
fwait
sbb
loope
jle
cmc
orb
mov
or
or
sti
add
lods
out
leave
fs
mov
mov
dec
in
mov
cmp
fwait
jnp
les
mov
in
into
push
daa
dec
test
push
rol
popa
call
xlat
push
in
repz
push
add
loop
daa
icebp
xchg
adc
mov
mov
cmpsl
sub
and
loopne
stos
pop
ret
xlat
dec
mov
push
scas
stos
je
movsl
add
cmc
cmp
mov
mov
jae
cmp
cmp
loopne
cmpb
sub
and
mov
mov
lcall
std
outsb
cmpsb
or
and
repnz
iret
in
push
sahf
adc
in
inc
inc
dec
push
inc
jg
sbbl
sbbb
cmc
outsb
sbb
mov
call
jns
mov
in
push
enter
push
adc
add
sbb
in
scas
or
pop
fcmovnbe
cmpsl
call
repnz
movsb
lods
mov
lock
out
inc
sbb
bound
lods
fwait
dec
or
aaa
jb
shlb
icebp
enter
std
enter
inc
mov
imul
and
stc
xchg
das
fwait
insl
iret
inc
inc
jl
loop
es
pop
lahf
mov
stc
mov
push
aas
xchg
cmp
push
cmp
mov
es
cmovle
sub
fcompl
aad
cmpsb
test
cmpsl
sbb
xor
popf
pop
sub
pushf
nop
push
or
jg
sbb
aad
loop
xor
mov
loopne
inc
in
test
or
in
dec
xchg
fisttps
pushf
jo
daa
add
mov
lods
fucomp
mov
mov
pop
fs
or
lock
push
or
loopne
and
cmc
pop
pop
cmp
dec
rcr
loopne
jo
pop
ficoms
lahf
adc
pop
mov
ret
loopne
movsl
dec
cmp
and
xor
aaa
adc
dec
in
mov
cli
mov
imul
cmp
ret
push
pop
jae
roll
ja
aad
es
cld
xchg
lret
andl
push
adc
mov
push
sub
jl
xchg
std
sti
out
inc
xchg
or
call
lahf
das
fisubl
mov
outsl
subb
cmpsl
repz
test
in
mov
sbb
inc
cmp
int3
or
data16
jb
dec
jne
mov
imul
mov
cld
mov
adc
adc
pop
movsl
and
jecxz
jle
push
push
sar
pop
ret
cmp
out
push
push
out
inc
popf
or
sti
pop
push
ret
stos
pop
mov
icebp
out
js
add
icebp
jl
sti
xchg
cmpsl
push
mov
pop
xchg
int3
lods
lods
cmc
mov
cmp
add
pop
push
xchg
xor
movups
push
jb
xchg
and
std
xor
pop
jns
lret
ljmp
shlb
pushf
sub
dec
pop
mov
dec
mov
xchg
lock
dec
cmc
mov
cld
cmc
inc
lahf
pop
sti
fisttpll
daa
hlt
clc
data16
gs
cmp
fidivl
negl
mov
stos
pushf
pushl
pop
inc
std
pushf
jge
sbbl
mov
add
idiv
es
movsb
cmp
jg
xchg
pop
cmp
and
loop
xchg
bound
jmp
mov
fsubp
movl
lret
and
loopne
popa
cmpb
sbb
or
loope
ficoms
loop
or
jecxz
aam
shlb
xchg
insb
dec
dec
adc
lcall
jo
mov
xchg
mov
sub
jnp
mov
lods
cmpsb
inc
cwtl
pop
sbb
xor
jns
das
imul
mov
stos
repnz
jne
xor
add
push
adc
or
add
pop
mull
into
out
addb
sub
pop
test
push
push
cwtl
test
add
mov
push
sub
push
popa
add
roll
out
imul
adcl
mov
inc
rcll
cltd
jg
cwtl
inc
ljmp
mov
fmuls
xor
sub
jp,pt
in
call
cmp
call
out
push
push
daa
add
cmp
repz
pop
mov
sahf
sub
cmpb
mov
repnz
xchg
mov
enter
or
push
jnp
add
aaa
dec
jl
inc
pop
out
push
in
push
sbb
popa
insl
popa
mov
sbb
push
mov
test
add
jb
mull
aad
jb
pop
cmpsb
jne
add
movsl
mov
insb
sub
xchg
cltd
jb
xchg
fisttps
fcompl
stos
adc
js
mov
arpl
out
les
pop
iret
adc
lods
xor
jle
cmc
out
push
scas
mov
lea
test
add
ljmp
lahf
insl
fdivrp
mov
and
push
pop
pop
mov
push
rcrl
and
sub
jb
xchg
jp
fdivrs
test
mov
mov
and
pop
cli
mov
mov
mov
dec
icebp
mov
dec
test
jle
sub
and
mov
cmp
push
sbb
xchg
mov
and
add
loopne
mov
push
fs
rclb
inc
negl
inc
sbb
mov
push
lcall
mov
cmc
iret
jae
inc
push
inc
cmp
addl
ret
xchg
pop
push
out
xor
push
mov
jnp
das
xor
push
jbe
lods
or
push
cmp
pop
fcompl
imul
mov
shll
mov
jne
in
xchg
dec
or
pop
fimull
arpl
sub
fs
or
push
lods
hlt
add
loope
mov
in
sbb
xchg
cmp
inc
pop
sub
mov
jae
mov
xchg
cmp
jp
mov
decl
xchg
push
leave
clc
mov
mov
fwait
sub
add
or
sahf
rcll
gs
outsl
fcomip
and
arpl
xor
add
scas
jg
pop
or
fwait
mov
sahf
in
xchg
xchg
adc
and
xor
dec
and
xchg
add
xchg
push
sti
xchg
in
jne
loope
fldenv
ss
adc
mov
xor
and
sub
movsb
dec
adc
dec
or
push
mov
dec
je
popl
out
test
mov
je
gs
jns
adc
je
lret
dec
inc
cld
jp
test
rcll
xor
adc
test
fcoml
push
mov
imul
mov
mov
addr16
inc
xlat
shl
sahf
sbb
add
mov
push
inc
xchg
adc
sub
jp
jbe
push
in
mov
jle
loope
or
push
int3
dec
les
das
push
lods
pop
ret
and
dec
into
xor
fs
repz
mov
mov
push
xchg
inc
rorb
lcall
in
outsl
dec
mov
ret
dec
mov
mov
icebp
and
cmp
hlt
insl
flds
pop
or
push
hlt
cli
cmp
ljmp
xor
out
mov
push
add
cmp
hlt
pop
sbb
push
mov
sbb
ja
mov
imul
outsb
sbb
mov
jne
sub
test
int
add
sub
lahf
and
cmp
cmc
jne
repz
jno
in
or
fwait
cmp
mov
fyl2xp1
add
pop
dec
loope
add
fcmovb
or
lods
mov
or
cmp
dec
call
ljmp
push
sbb
jg
sbb
jle
mov
ja
gs
lret
add
mov
popf
aas
xorb
lret
dec
xchg
in
adc
xor
xlat
std
cmp
dec
cmc
ret
mov
xchg
lea
lea
sbb
mov
test
pusha
or
jmp
sbb
or
std
ret
and
js
aam
dec
adc
jae
xor
mov
aas
and
fwait
leave
in
in
insl
jl
sti
mov
je
push
pop
cltd
data16
mov
cmpsb
jmp
add
aam
or
inc
sub
int
xor
mov
mov
push
rcll
push
cmp
inc
and
ret
sbb
jnp
cmp
rorl
stos
or
pop
scas
mov
sarl
sbb
pusha
xchg
add
cs
std
mov
dec
iret
imul
jbe
sub
xchg
add
jnp
sbb
loop
mov
sar
out
mov
hlt
jp
pop
inc
mov
subb
push
sbb
jno
cmpsl
cmpsl
add
dec
inc
das
psubusb
sahf
dec
pop
jbe
out
sub
rorb
js
adc
stos
adc
adc
sub
js
xor
clflush
push
movlps
jne
or
pusha
jl
mov
xchg
stc
mov
xchg
cmc
sbb
push
cmp
aaa
loopne
adc
insb
or
ret
cli
push
ss
test
and
push
sub
mov
repnz
bound
and
jbe
js
outsb
sbb
xor
pushf
xchg
mov
inc
adc
xchg
repnz
hlt
or
dec
out
adc
je
and
jnp
shl
test
cwtl
pop
aas
dec
aaa
xchg
nop
stc
cwtl
dec
cli
jecxz
lea
push
out
in
sub
xchg
mov
push
lahf
pop
inc
scas
cmp
in
aas
pop
xor
mov
fiaddl
testb
pop
xchg
repz
mov
mov
lds
inc
mov
inc
fnstsw
fiadds
mov
gs
xchg
dec
jo
mov
mov
dec
mov
popa
jo
or
sbb
popa
xchg
out
arpl
pop
imul
stos
out
push
mov
mov
enter
jo
xchg
call
bound
push
mov
mov
aam
adc
ss
je
daa
xor
rolb
xor
jo
push
mov
fisubl
daa
xchg
les
cmp
lock
pop
lahf
pop
sub
inc
jae
dec
in
fsubs
jae
mov
push
enter
xor
jne
jae
mov
daa
inc
mov
xchg
ja
mov
lcall
xor
cwtl
push
jecxz
jecxz
cmp
shl
sub
rcl
dec
fs
pop
data16
inc
sub
jl
push
stos
jns
cmp
xchg
xor
jno
or
mov
dec
addl
sahf
pop
add
hlt
adc
cs
push
xchg
jo
mov
js
sarb
xlat
cmp
ret
fwait
pop
and
mov
inc
sub
test
hlt
pop
inc
pop
xor
and
aad
in
jae
lds
andb
and
in
ret
mov
xor
add
scas
in
ljmp
fidivrl
clc
cwtl
loop
adc
and
mov
push
repz
xchg
mov
jle
das
mov
mov
out
icebp
or
add
inc
lods
mov
jne
pop
popa
fsubl
out
jg
jecxz
pop
jl
dec
pop
mov
mov
dec
push
shr
adc
add
lret
subb
jno
xchg
enter
pop
cmpb
xchg
dec
cmp
popa
call
test
out
das
mov
or
insl
pop
test
sub
or
stos
cmpsb
xor
and
mov
adc
adc
dec
mov
adc
pop
mov
sub
rcl
aam
test
into
jle
call
push
daa
jp
dec
or
push
push
insb
xchg
shll
negl
mov
out
jae
xchg
aaa
ret
sarb
xlat
mov
and
iret
arpl
cmp
mov
nop
leave
mov
sub
xchg
nop
out
inc
pop
ljmp
ficoml
insl
sbb
out
adc
cmp
add
arpl
fsubl
push
es
jle
push
movl
outsb
ficomps
insb
bound
scas
mov
imul
int
pop
outsb
cmp
faddp
xor
insl
sub
clc
lea
sbb
addr16
movsl
sbb
or
fidivrs
out
mov
dec
or
push
pop
ss
rorb
pop
test
push
test
icebp
cltd
lods
cmpsl
mov
movsl
and
imul
or
outsl
sub
xor
add
jmp
sub
mov
cmp
xor
dec
mov
testl
pop
mov
inc
out
sbb
ret
pop
rcrl
ss
movsl
hlt
pop
out
ja
fnsave
sbbb
mov
dec
jecxz
lcall
cmp
cmpsl
lret
pop
xlat
or
and
outsb
xor
movl
xchg
mov
enter
dec
mov
ds
icebp
ficompl
lcall
scas
mov
notb
cmp
xchg
addr16
aam
adc
pop
push
inc
cmp
mov
cmp
sub
jns
loopne
sub
out
inc
lock
push
fadds
incb
ret
pop
cmpsl
push
je
sbb
mov
mov
mov
repz
push
sbbb
leave
popf
test
xor
pop
add
mov
push
sarl
pop
fsubs
sbb
cld
mov
les
insb
cld
outsb
mov
or
mov
and
cltd
sub
xchg
inc
cmc
insb
or
pop
inc
dec
xchg
adc
pop
aad
out
jae
add
push
cltd
sub
jnp
xchg
data16
sbb
mov
push
dec
cmpsb
mov
sub
aam
leave
repz
push
mov
push
lahf
cmpsb
jg
adc
shl
xor
cmc
shrl
jl
cmp
out
shll
ja
xchg
pop
out
mov
testl
inc
cmpsl
dec
adc
cmpsl
mov
in
insb
xor
cli
outsb
movsb
push
negl
and
mov
lcall
jg
out
sahf
stc
mov
es
cmc
xchg
jecxz
pop
enter
in
jo
arpl
cmp
mov
ret
or
or
daa
pop
cld
shrb
push
pusha
inc
inc
xchg
in
mov
stos
jmp
jl
loope
inc
fistpl
fwait
xor
mov
cli
in
addr16
outsb
sbb
jl
jns
xlat
lret
out
sbb
in
push
aaa
jbe
sbb
lcall
or
mov
divl
movsl
sbb
arpl
in
sub
nop
jmp
out
xor
pop
add
jl
in
insl
fmull
hlt
addr16
pop
cld
sub
dec
mov
mov
ficoml
jnp
jo
insl
fucomi
mov
out
cmpsb
lods
outsb
call
icebp
test
xchg
aad
mov
lock
cmp
fldenv
and
orl
cs
stc
jne
and
roll
xchg
pop
adc
fidivl
out
movb
call
sbb
sbb
sbb
adc
imul
test
in
dec
inc
jne
lret
shrl
dec
lods
add
movsl
std
roll
cmp
jnp
push
in
fstpl
sbbl
add
push
mov
pop
xor
mov
pop
and
xchg
rcrb
xor
xchg
leave
push
mov
imul
sub
push
cmp
xchg
out
mov
cmp
sahf
adc
mov
push
push
cwtl
mov
jl
lods
mov
inc
cmp
pop
mov
lods
pop
inc
sbb
ret
ljmp
push
and
bound
dec
stc
or
xor
inc
inc
test
sbb
imul
push
dec
shrb
inc
sbb
ret
mov
ret
fldt
nop
sarb
mov
insl
mov
push
popl
push
ljmp
pushl
lods
adc
addr16
test
daa
idivl
add
vrcpss
dec
out
cmc
shl
xchg
rorb
mov
ljmp
out
or
divb
mov
loop
pop
mov
fbld
neg
les
jns
mov
mov
into
push
mov
ret
xchg
xor
mov
add
mov
add
scas
rcll
notl
out
js
pop
or
fsubs
aad
fwait
push
push
adc
xor
fnstsw
fs
jge
cmp
rcr
das
inc
xchg
mov
inc
push
jle
es
inc
lcall
jge
pusha
mov
jmp
jae
sub
mov
jae
dec
sub
xor
fs
fsts
push
inc
mov
lcall
sbb
cs
mov
fwait
cltd
nop
mov
cltd
dec
xchg
or
arpl
mov
cmc
addr16
ds
sbb
ret
sub
mov
in
xor
jnp
outsl
pop
out
ffreep
push
cmp
mov
out
pop
and
mov
jnp
icebp
xchg
mov
sub
or
imul
daa
xor
fsubr
jp
xor
test
mov
push
push
fwait
cmpsl
ror
mov
mov
jl
adc
adc
mov
xchg
aad
xorl
mov
xor
jb
dec
mov
fwait
sub
mov
gs
mov
push
pop
out
sub
cmp
mov
mov
pop
shl
enter
loopne
in
add
pop
std
mov
enter
aas
loopne
xor
cmp
int
or
je
dec
jle
add
mov
mov
mov
movsl
aam
xchg
mov
jmp
in
les
aad
enter
add
ficompl
and
lcall
inc
lret
pusha
lock
mov
scas
xor
iret
bound
shl
stos
lahf
xor
popa
push
fadd
jp
stos
push
mov
dec
roll
xor
enter
cmp
jno
add
shlb
pop
inc
jno
sub
and
mov
mov
mov
loopne
scas
pop
and
push
test
fdivrl
dec
push
repnz
shrl
add
xchg
cmp
xchg
loop
xor
rcrl
cmc
xchg
popa
dec
mov
jge
pop
aad
out
aad
or
adc
jns
cmpsl
sub
cs
addr16
fldenv
aam
adc
scas
arpl
div
inc
mov
repz
daa
adc
jae
xor
push
xchg
sub
aad
jne
jl
push
inc
mov
sub
mov
loope
rcll
jg
aaa
cmp
scas
lcall
test
call
in
daa
outsl
repnz
mov
mov
lea
add
and
or
faddl
xor
mov
test
sbb
add
shrl
inc
loop
mov
pop
scas
icebp
sbb
sbb
js
jle
mov
imul
aas
mov
mov
dec
cli
push
cwtl
out
sbb
in
xlat
fisubs
jo
in
punpcklbw
adc
cmp
mov
enter
lret
dec
xchg
xchg
adc
jge
out
xor
sub
push
mov
xchg
testl
pushf
fsubr
dec
cld
xlat
mov
ret
xchg
sbb
mov
ret
test
inc
repz
jnp
xor
mov
ds
jge
xor
out
aas
sub
mov
cmpsb
mov
and
pop
out
sbb
sub
push
cmp
scas
push
mov
push
mov
mov
decl
aam
movsb
stos
cwtl
xor
jp
push
jnp
jns
scas
sub
mov
jge
xchg
notb
loop
xor
pop
push
mov
push
push
or
roll
sbbl
cltd
pushf
test
cmpsb
fnstcw
leave
push
mov
dec
mov
push
icebp
dec
jnp
pop
cmc
xchg
mov
adc
mov
mov
mov
arpl
pop
sub
sbb
aam
jp
sbb
pop
sti
fldl
divb
data16
push
fisttpll
fsub
sub
negb
push
mov
cmp
popf
push
mov
xchg
mov
cmp
lods
repz
test
cmp
jno
lret
cmpsb
cmp
xor
mov
pop
mov
inc
jecxz
push
jge
hlt
sti
adc
cmp
sub
push
pop
push
outsl
sahf
mov
pop
fisttpll
cmp
lods
out
test
inc
inc
dec
xchg
sahf
cld
ljmp
jmp
pop
sbb
inc
and
mov
fbld
faddp
xlat
xchg
call
lock
arpl
mov
inc
and
icebp
fldenv
bound
js
out
push
dec
adc
inc
or
loop
add
jl
mov
add
mov
or
inc
sub
xor
mov
lods
mov
mov
xor
sub
into
imul
popf
mov
mov
imul
iret
lret
hlt
add
imul
sarb
jns
insl
inc
lret
roll
add
in
sub
adc
call
sub
xchg
push
sar
sahf
mov
dec
mov
and
cli
loopne
rcll
jo
push
out
js
pavgw
cltd
fwait
cmp
lret
movsb
in
cmp
mov
cmp
lock
xlat
push
push
cmp
jle
xchg
mov
lods
sahf
test
mov
leave
scas
rcrb
xchg
mov
pop
scas
and
or
dec
sahf
les
xor
faddl
es
adc
enter
aaa
jb
rorb
in
shl
lea
mov
xchg
cmp
movsl
mov
push
mov
cmp
aam
nop
mov
inc
adc
inc
or
ljmp
aaa
imul
aas
and
js
dec
push
cmpsl
scas
mov
dec
cmpsb
xchg
lea
mov
out
ret
outsl
mov
sbb
imul
xor
in
pop
ljmp
pop
add
sub
pop
scas
push
or
stc
arpl
subb
andb
cwtl
jnp
sub
popa
cmc
mov
add
out
mov
push
add
lret
out
or
pminsw
pushf
loopne
push
arpl
xor
sub
xor
mov
mov
mov
inc
mov
jbe
outsb
sarb
push
or
mov
sbb
mov
aad
insb
mov
out
les
push
data16
fmuls
jl
and
sub
mov
enter
xchg
mov
fcoml
push
mov
or
inc
adc
pop
fs
fldenv
mov
mov
push
icebp
out
or
adc
aas
hlt
pusha
xchg
add
sbb
mov
ret
std
inc
je
loop
lock
dec
pushf
lahf
mov
inc
pop
sub
jp
mov
shrl
jae
push
push
mov
lods
sub
xchg
adc
xchg
test
aam
jns
fidivs
and
sub
mov
mov
and
mov
cwtl
cmpsl
dec
cmp
mov
pop
push
or
adc
insb
push
dec
sbb
add
scas
xchg
xchg
dec
push
mov
sbbb
and
adc
xchg
pop
jg
push
mov
ret
cmp
mov
imul
lds
add
add
pop
xchg
inc
sub
xchg
fdivl
test
addl
mov
mov
lahf
mov
add
pop
js
xchg
jnp
enter
cmp
pop
cld
les
dec
fildl
mov
push
xor
nop
mov
popf
jmp
add
xor
sbb
cmc
or
sbbb
roll
jle
cs
xchg
pop
daa
pop
pusha
cwtl
dec
icebp
xor
daa
insb
in
aaa
mov
adcl
arpl
inc
fcmovnbe
pop
orb
ficomps
jge
aas
dec
sbb
jl
stos
sub
ss
insl
inc
addl
or
rcl
xor
dec
insb
bound
fsubrl
xor
sub
test
das
xchg
sarl
mov
mov
subb
leave
jbe
xor
rcll
or
stc
lahf
xlat
jg
push
sbb
push
push
cmp
pop
shll
jbe
mov
data16
pop
ja
ficoms
add
xchg
rclb
mov
in
inc
adc
pop
adc
hlt
dec
cld
cmp
and
mov
shll
movsb
call
mov
aaa
cmp
add
ret
or
push
fsubrp
xor
mov
xlat
fidivs
icebp
push
mov
lret
mov
jne
lret
mov
lds
xchg
push
test
imul
mov
xchg
test
and
xor
push
push
or
push
hlt
fistpl
call
leave
test
and
xor
sbbl
add
and
fs
dec
push
lock
arpl
adc
mov
xor
out
sub
loope
mov
mov
stos
pop
pop
arpl
lds
scas
orl
in
xor
cmpsb
lods
sbb
push
stc
jmp
mov
shll
mov
jg
dec
sub
and
cmpsl
xor
or
sub
shlb
xchg
jl
and
pop
pextrw
lcall
mov
in
lods
in
lea
mov
test
mov
xor
xor
scas
sbbl
rcr
int
mov
inc
pop
sbb
jno
rcrb
push
xchg
xchg
imul
add
nop
and
jne
jo
je
adc
or
icebp
pusha
shlb
or
fidivrl
mov
imul
adc
stos
or
dec
pop
mov
js
ljmp
xlat
outsb
lret
leave
jmp
leave
and
cmpsb
xchg
test
daa
sbb
add
in
test
xor
insb
insb
and
xor
cmp
data16
fs
das
adc
inc
mov
jecxz
aad
sbb
movsl
xchg
pop
insl
out
cmp
jns
jge
stc
xchg
xchg
out
mov
std
push
scas
scas
fisttps
leave
add
iret
repnz
aad
push
sbb
nop
cmp
enter
xchg
outsb
ret
popa
outsl
inc
je
std
sub
jb
cmpsb
rolb
inc
aam
lea
adc
jle
idivl
pusha
ficompl
mov
rcll
lahf
es
sti
pop
pop
popa
loopne
int3
mov
clc
sbb
in
fstpl
repnz
pop
add
add
mov
clc
push
push
sub
imul
jnp
nop
cld
in
in
cmp
sub
aad
iret
and
scas
mov
adc
iret
dec
lods
mov
mov
cmpsl
xchg
xchg
ds
sbb
lret
shl
jne
jle
mov
arpl
sbb
fisttps
xor
jge
xor
das
mov
sub
jl
or
add
ret
in
cmp
mov
subl
scas
mov
iret
push
lret
mov
jb
orb
in
add
push
sub
in
mov
dec
idivb
jmp
loopne
jb
push
cmp
dec
stos
andb
push
jle
push
imul
lods
std
ret
xchg
add
cli
stos
imul
xlat
xchg
loopne
daa
pop
mov
xor
xchg
xchg
outsb
lret
push
or
inc
dec
mov
sbb
dec
sbb
pushf
cmpsl
push
addb
dec
jmp
lods
push
mov
mov
ja
fdivrl
sti
pop
js
jge
sub
test
clc
ror
stos
addr16
push
xor
add
int
xchg
jno
out
push
add
xor
add
insb
in
mov
jg
jne
fs
push
notb
clc
aam
jp
adc
xchg
dec
push
add
or
push
es
push
rcll
rorl
inc
dec
or
or
cmp
test
lea
sti
add
push
fimull
insl
out
es
cmp
jl
test
mov
test
jae
push
pusha
cmp
repz
sub
out
in
add
outsb
stos
icebp
adc
jge
enter
mov
loopne
push
or
inc
out
pop
ss
dec
inc
lahf
ja
in
pop
or
mov
test
mov
adc
icebp
and
jle
out
out
adc
dec
fs
sbb
jecxz
movsl
jp
or
sarl
xchg
lods
and
cmpsb
pop
fisubrl
mov
in
loopne
jno
call
push
repz
sysret
roll
leave
sbb
add
insb
sahf
lock
fisubrl
xor
into
aad
dec
andl
insb
sub
push
out
aad
pop
in
inc
test
je
mov
es
shrb
lods
jmp
sbb
mov
push
adc
rcrl
imul
pop
pop
mov
mov
pop
cs
pushf
stos
mov
ljmp
hlt
push
and
jmp
insl
mov
add
lods
jp
cli
imul
fnsave
adc
ficomps
insb
xchg
pop
fs
ss
xor
lahf
cmpsl
dec
lea
mov
mov
shl
test
mov
xchg
dec
bound
pop
fisubrs
dec
and
push
jp
leave
add
add
cmp
scas
jge
xchg
adc
and
mov
mov
adc
mov
pop
inc
xchg
fimull
adc
push
dec
adc
cmpsb
mov
inc
push
jle
add
imul
sahf
pop
push
and
mov
fwait
loop
or
push
sub
mov
xchg
cmovb
fcoms
fisubs
data16
push
orb
dec
stos
adc
adc
lock
xchg
sbb
lea
leave
imul
sahf
mov
dec
ret
adcb
es
xchg
stos
mov
sub
scas
pushf
xchg
and
and
int
jbe
mov
adc
mov
pop
push
iret
or
mov
xchg
and
mov
rorb
ret
and
sbb
jae
stc
dec
ljmp
aaa
or
enter
cli
pop
push
cld
sub
aad
enter
mov
mov
fidivs
test
add
add
or
addr16
pusha
ljmp
pop
jo
push
sbb
in
jbe
and
stos
mov
int3
push
arpl
cltd
and
sarl
jp
jmp
addr16
mov
jb
movsb
stc
rcr
add
fs
out
or
je
clc
fwait
aas
or
sahf
cmp
xchg
jle
pushf
push
das
stc
adc
ret
es
clc
lods
mov
dec
sub
sub
cmpsb
jno
shl
shr
jns
jg
push
ficomps
mov
cwtl
cmp
cli
mov
hlt
leave
aam
frndint
movsb
lret
pop
daa
jge
addr16
add
cmp
repnz
mov
mov
pop
dec
dec
pushf
xchg
stos
inc
test
push
mov
das
cmp
mov
imul
ret
mov
inc
lods
xchg
xchg
dec
xor
xor
cmp
push
fcoml
fidivrs
out
jl
add
sarl
cltd
sub
jae
pushf
into
cmc
in
jg
dec
add
mov
cli
leave
je
add
jp
mov
or
push
lea
jge
mov
shrb
gs
mov
dec
addl
dec
dec
jecxz
outsb
xor
daa
js
icebp
lcall
cmpl
jne
or
xchg
cmpsl
xchg
sub
lret
jmp
jp
inc
out
pop
clc
loope
or
mov
mov
lret
inc
pushf
movl
clc
adc
bound
jmp
lcall
sub
popf
mulb
cltd
add
psubsw
pushf
jp
ds
test
add
mov
sbb
inc
pusha
mov
inc
stos
pop
lret
xor
cmp
inc
in
mov
add
ljmp
adc
test
into
sti
push
dec
insb
jmp
cli
ret
dec
test
int
sarb
lret
shl
pop
das
inc
mov
test
popf
das
in
jne
enter
xor
dec
push
mov
lds
test
arpl
inc
stc
je
loopne
je
pop
out
push
aad
test
std
or
frstor
enter
adc
xlat
lcall
cmp
inc
int
repz
ss
lret
mov
mov
sbb
xor
ljmp
popl
and
imul
mov
jne
popf
sarb
jae
dec
addb
xchg
mov
aas
mov
stos
sbb
lods
fucom
push
enter
cltd
push
pop
repnz
push
push
aad
ljmp
sbb
adc
inc
outsl
pop
aaa
add
mov
mov
divb
mov
dec
add
xlat
inc
dec
and
mov
dec
jno
icebp
push
ret
sbbb
add
out
and
mov
fs
mov
fwait
stos
lret
and
mov
inc
insb
test
mov
and
mov
stos
xorl
jnp
pusha
mov
xlat
add
mov
adc
mov
xchg
sub
adc
addr16
push
aas
mov
xlat
daa
sti
mov
stc
push
sub
pop
push
je
mov
cltd
jae
in
flds
mov
push
mov
js
mov
cmp
pushf
mov
push
push
call
pop
outsl
out
or
mov
cmp
xchg
imul
xchg
fisubrl
mov
addr16
outsl
xchg
jmp
lods
lcall
adc
dec
sbb
lret
inc
xchg
adc
stos
into
sbb
cmp
aaa
int3
mov
sahf
ficompl
mov
xor
lret
jbe
cmp
adc
imul
outsl
test
mov
lcall
insb
push
cmc
sbb
fisubrl
add
and
loopne
ret
aad
lret
mov
xor
imul
jb
out
xor
xor
imul
ret
pushf
jp
fmul
xlat
movb
cli
leave
xor
rorl
xor
mov
xor
daa
dec
mov
fsubs
pop
ds
imul
mov
jge
cmp
aaa
xchg
shll
pop
or
mov
jg
addb
lds
cli
jmp
or
pusha
icebp
popf
test
or
or
sbb
mov
fxch
sahf
not
lcall
pusha
arpl
push
mov
lods
jo
nop
mov
scas
and
cmp
ds
mov
xchg
test
insl
fimull
test
cmp
dec
mov
cmpsl
adc
loopne
popa
inc
push
js
jmp
adc
dec
or
into
ja
xor
adc
sbb
das
fstp
gs
test
add
jmp
scas
sbb
test
out
cmp
mov
dec
jb
and
add
fcmovne
ss
enter
aad
mov
movsb
xor
add
insl
aam
shlb
add
pop
pop
in
xor
addr16
jbe
or
mul
int3
dec
dec
ret
movsl
and
jge
sahf
sbb
outsb
inc
mov
pop
loope
inc
sub
test
mov
fdivl
je
popf
push
sub
outsb
inc
sti
push
cmp
mov
push
push
jecxz
mov
hlt
int
dec
mov
dec
dec
ds
jbe
adc
lcall
pop
xchg
or
cmp
pop
jge
fists
lock
clc
xchg
js
fidivrs
repz
inc
insl
dec
mov
or
jge
and
fiaddl
inc
rcrb
sub
mov
lret
addl
add
mov
inc
inc
xlat
scas
fwait
pop
clc
cmp
xchg
rorl
push
dec
and
adc
fcompl
mov
dec
ret
mov
sbb
dec
aas
cmp
fldenv
fs
pop
idivl
jo
lret
movl
dec
jb
cmc
js
fs
sub
lea
push
inc
int3
adc
rcrl
and
shl
add
pop
sub
adc
dec
test
xchg
enter
cmpsb
add
jbe
mov
and
ret
push
daa
cmpl
pop
scas
std
loope
in
dec
divl
stc
aaa
insl
adc
add
or
cmp
inc
js
jo,pn
fwait
adc
imul
into
cli
faddl
dec
or
sbb
add
jg
sahf
add
jp
mov
into
lods
dec
popf
jns
cmpsl
shl
mov
sub
and
mov
fistl
cmp
pop
cli
rclb
lret
negl
cwtl
cmp
dec
inc
aad
call
and
ljmp
sbb
movb
out
inc
out
jae
mov
pusha
jbe
push
push
and
lods
cmp
sbb
fstp
in
mov
outsb
inc
sbb
add
push
out
in
pop
jbe
outsl
add
lret
std
sarb
sbb
jmp
lret
pop
ficompl
sub
cli
cmp
push
jp
das
inc
ds
xchg
packuswb
fwait
sub
cli
mov
jae
ljmp
sbb
iret
ss
jg
stc
dec
loopne
inc
sbb
inc
jle
cmp
add
pushf
repz
jns
push
ds
mov
mov
push
xor
or
inc
in
fadds
sarl
dec
flds
cmp
cmp
testl
sub
clc
sbb
and
mov
add
push
adc
add
mov
les
insb
pop
lods
in
adc
pop
jmp
enter
and
lahf
shll
lcall
inc
test
sub
pop
fcomp
mov
mov
dec
fwait
jb
push
add
push
sbb
xchg
push
call
mov
insb
mov
inc
ljmp
subl
cmp
gs
outsl
pop
fidivrl
outsb
aas
cli
scas
inc
cwtl
ret
hlt
push
jno
push
sbb
xchg
insb
sub
or
call
sahf
xor
push
fildll
lods
sub
imul
inc
sub
fmull
loopne
leave
xchg
cld
out
dec
pop
inc
push
out
jnp
jbe
out
mov
imul
orl
cmp
sub
xchg
enter
or
adc
cmpsb
pop
out
and
test
out
lret
popa
pop
nop
ds
leave
xor
fwait
cltd
ret
lcall
lock
or
test
stos
mov
jp
jbe
mov
fstpl
outsl
xchg
jno
dec
subl
push
add
repz
adc
sub
cmp
pushf
sahf
cmp
les
fildll
or
hlt
jp
inc
stos
or
and
lods
pusha
loop
jmp
scas
in
xchg
cmp
in
push
popa
pop
iret
adc
mov
sub
aad
idivb
adc
cs
aas
fisttps
je
adc
mov
jge
mov
mov
sbb
xchg
push
ds
sbb
pop
xor
movsl
arpl
push
and
cmp
or
mov
fsubl
lcall
pop
lods
sub
dec
stc
lds
je
loop
xchg
xor
rcrb
arpl
cmp
clc
stc
sub
push
incb
and
movsb
cs
jg
or
lea
xchg
sbbb
jg
and
icebp
ds
inc
into
adc
aaa
cwtl
sbb
imul
push
mov
or
pop
push
mov
lds
fsubrp
mov
jmp
and
jecxz
gs
out
push
out
add
push
cld
lds
mov
and
xchg
dec
pop
popa
stos
cmpsl
push
cmp
enter
test
int
testl
dec
dec
enter
cmpsl
mov
xchg
mov
cmp
test
and
sbb
xchg
fwait
adc
mov
sub
jg
sahf
rcr
pop
es
push
cli
xchg
lcall
movsb
cmp
pop
pop
sub
sbb
lret
test
xchg
adc
clc
pop
dec
fisubl
sbb
adc
arpl
cmp
gs
xor
divl
arpl
in
ds
popf
inc
jne
add
add
sbb
add
lret
outsl
test
sbb
sahf
mov
cmp
jo
adcl
insb
out
xor
lret
or
adc
and
and
and
pop
cmp
mov
shll
nop
jo
into
enter
sti
sub
pop
divl
fdivrl
mov
and
xchg
dec
fistl
subb
es
xchg
pop
adc
inc
inc
xor
push
mov
sub
fwait
in
xor
outsl
test
xchg
pop
inc
push
int
mov
testb
insb
nop
dec
mov
shrl
xchg
in
mov
inc
lcall
rep
cmp
repz
ss
and
cmp
and
filds
mov
jmp
fisttpl
loop
js
pop
mov
mov
lock
jp
sahf
or
mov
andb
mov
and
pop
or
lea
mov
loopne
and
cli
je
push
pop
stc
leave
aas
insl
pushf
outsb
lahf
adc
aas
mov
dec
fisttps
je
aas
out
mov
or
xchg
scas
es
sub
fstps
hlt
in
mov
mov
ret
int3
sbbl
mov
or
pop
ljmp
xor
aaa
popf
push
add
jne
das
shll
aam
cltd
repz
xor
enter
sahf
mov
dec
adc
pop
insb
pop
add
imulb
imul
jge
add
pop
cs
mov
test
sbb
and
shrb
xchg
jb
xor
sbb
ret
push
mov
xchg
cs
add
inc
dec
mov
pop
cmp
push
stc
int3
sbb
jle
aas
jns
repz
hlt
add
jl
bound
xchg
stos
inc
xorl
jne
sub
ljmp
mov
sbb
adc
imul
into
lcall
sbb
leave
pop
mov
ret
lock
mov
testl
sub
mov
lahf
in
xchg
aaa
inc
xor
and
cwtl
xor
fs
je
push
mov
add
fistpll
sbb
and
and
add
outsl
mov
clc
or
iret
scas
rolb
mov
push
popa
inc
xor
pusha
clc
cmp
orl
cmpsl
and
js
push
jo
rol
adc
mov
fwait
bound
pop
lock
mov
adc
push
push
mov
inc
popf
scas
stos
inc
mov
and
pushf
decb
push
hlt
push
mov
inc
pop
mov
out
lret
ss
aaa
lea
xchg
add
rclb
adc
pop
push
ret
xchg
jae
scas
and
jmp
in
or
test
cltd
aad
push
add
mov
mov
lret
shlb
mov
adc
sti
sub
and
jecxz
or
xchg
into
xchg
lahf
adc
inc
pusha
mov
cmpsb
and
or
cmp
loop
xor
sub
jno
jae
pop
in
int3
rcll
imul
pop
in
cli
jmp
cmpsb
dec
cmp
mov
xchg
mov
andb
mov
gs
jmp
clc
movsb
jl
rolb
push
sbb
pop
inc
out
popa
pop
shlb
sti
pop
pop
je
ret
jb
xchg
fisttpl
xlat
ds
mov
xor
add
negl
xchg
mov
jo
and
and
xchg
lock
movsl
fidivrl
push
out
push
pushl
shlb
jne
jb
test
out
adc
in
jo
dec
test
cs
xor
inc
icebp
xchg
adc
xlat
ret
imull
add
daa
pop
sub
mov
nop
xlat
inc
xchg
jmp
movsl
mov
pop
adc
iret
int3
enter
mov
push
ficompl
out
mov
mov
xchg
add
outsl
imul
fimull
negl
in
and
fwait
addr16
cwtl
and
or
jae
and
or
sarb
and
mov
sub
inc
and
push
mov
mov
pop
out
mov
cli
repz
sbb
pop
js
shr
enter
aam
sti
adc
pop
cmpsb
lods
fsincos
std
movsb
rcrb
inc
sbb
js
mulps
add
imulb
or
adc
xor
cmc
iretw
lods
mov
xchg
insl
enter
lcall
cmp
mov
inc
xor
ja
bound
fistl
bound
lds
fwait
xchg
jne
sub
sbb
test
or
xor
and
in
mov
lcall
mov
jb
jmp
mov
dec
imul
gs
xchg
loopne
inc
xor
dec
inc
jp
push
lret
fdivrp
cli
sbb
popa
xchg
pop
add
jge
pop
arpl
mov
lcall
pusha
data16
pusha
pop
or
pop
ljmp
rcrl
ret
bound
adc
add
in
mov
sbb
fnstenv
frstor
mov
shlb
movsl
ret
loope
bound
mov
inc
repz
add
xchg
cmc
ret
jmp
cli
or
xchg
push
adc
mov
cmpsl
out
or
pop
dec
push
dec
mov
test
lods
rorl
mov
insl
dec
jecxz
scas
adc
daa
subl
test
out
shll
pushf
pop
fisttpl
push
jnp
adc
add
pop
mov
ror
outsb
add
jle
pop
std
sbb
inc
cmc
pusha
pop
push
ss
lods
jne
mov
mov
pop
push
rorl
push
call
ja
repnz
sbbb
fcmove
pop
filds
outsl
inc
cld
adc
fwait
xor
lret
jo
adc
and
enter
in
js
ret
cmp
mov
inc
push
popf
mov
jb
push
int3
and
loop
xor
lret
xchg
xchg
pop
mov
push
arpl
dec
pop
xor
mov
jno
fnsave
pop
xchg
jg
cmpb
adc
jle
testb
shlb
scas
xchg
dec
sub
xchg
adc
or
mov
pop
push
pop
jbe
lods
fwait
rorb
jmp
jb
xchg
cmp
push
or
push
aaa
mov
test
orl
lahf
in
mov
adc
outsb
icebp
ja
loope
pusha
lods
in
xchg
icebp
int3
int
inc
dec
cmp
inc
cmc
mov
fisttps
addr16
sbb
scas
cmp
jne
sti
dec
mov
hlt
fidivrl
sub
adc
stos
pushf
fisttpl
popf
movsb
shrb
out
vpor
pop
gs
jmp
inc
fwait
mov
adc
testl
mov
enter
test
imul
sub
ds
ss
push
jp
hlt
leave
bound
psraw
xchg
stos
mov
scas
cmp
out
mov
xor
pop
cmc
adc
pop
xor
cwtl
add
daa
jle
mov
mov
es
xor
dec
btrl
or
cmp
negb
imul
lds
cmpsb
adc
push
icebp
cmpsb
or
inc
mov
push
or
in
add
dec
out
jle
mov
dec
mov
loop
test
daa
aad
repz
push
add
jl
adc
or
sub
inc
pop
jp
arpl
mov
popf
cs
mov
push
into
inc
dec
scas
push
cs
jge
xlat
pop
adc
lods
fstl
pop
cmc
inc
push
aas
xchg
stos
xor
bound
fimull
repnz
jp
push
xor
data16
ss
aad
add
loop
push
cmp
aaa
mov
fmull
mov
aam
sub
rcll
inc
xchg
stc
pop
mov
movsl
adc
xor
loop
mov
lret
xchg
out
xchg
stc
fxch
jl
xchg
cmp
mov
movsb
or
pop
dec
pop
mov
out
and
and
mov
adc
mov
mov
call
inc
add
in
mov
out
push
mov
jle
mov
mov
dec
pop
aam
div
test
sbb
fcoml
jle
mov
les
sbb
mov
lcall
mov
pop
add
push
fs
fs
jb
adc
sub
aam
int3
dec
pop
push
dec
mov
out
xor
je
mov
push
push
fidivs
inc
xor
pushf
push
leave
ffreep
and
mov
je
push
pop
test
cmp
faddp
jno
test
loop
push
dec
ds
mov
popa
mov
cmpb
movsb
insl
pop
mov
jg
sbb
stos
mov
aas
xor
mov
je
adc
adc
int3
push
mov
pop
das
sub
mov
jle
popw
scas
les
sbb
sbbb
jecxz
jbe
pushf
and
std
std
cmp
es
xor
dec
add
lcall
push
or
and
dec
jae
mov
lea
lods
sub
cmp
pusha
cmp
call
pop
mov
imul
xchg
mov
pop
fistpl
outsl
inc
pop
inc
into
mov
iret
mov
cmp
test
cs
incl
mov
mov
jae
in
sub
xchg
jnp
ret
pushf
loopne
fwait
jg
sahf
add
lds
and
mov
aaa
inc
push
and
sbb
cmp
push
into
xchg
ret
sbbl
adc
jne
and
lds
inc
sub
sub
cmc
jbe
test
cmp
hlt
jb
pop
dec
mov
pavgw
push
add
gs
push
test
cltd
xchg
aam
pop
nop
dec
popf
mov
xchg
push
setle
pop
and
mov
rorl
test
test
push
aaa
pop
shl
call
fcomi
pushf
rcl
push
push
js
xor
adc
jnp
push
mov
in
fsubs
jle
jnp
mov
imul
add
cltd
pop
mov
pushf
and
jae
cmpl
push
loope
xor
sub
push
stos
mov
movsb
cwtl
jg
in
pop
add
ficoml
imul
in
cmp
mov
lock
outsl
movsl
pop
fiadds
icebp
stos
jg,pn
out
jno
inc
add
inc
arpl
xchg
fidivrs
mov
mov
ljmp
aad
stos
or
push
inc
fstpl
outsb
out
pop
sbb
and
cmp
rcl
mov
cmp
dec
mov
in
xlat
les
mov
dec
xchg
jl
lods
sbb
push
push
sub
push
or
pop
jg
faddp
jnp
lahf
and
pop
repz
in
push
lock
push
jl
adc
push
mov
jmp
add
xchg
jge
inc
or
not
leave
sub
test
fldenv
arpl
jo
and
or
fwait
cmp
sub
nop
cmp
and
adc
cmp
mov
cwtl
popf
cmp
outsl
add
and
inc
xchg
mov
lods
int3
icebp
dec
xor
push
fidivrs
in
lea
int
scas
scas
push
scas
ret
mov
in
xor
or
cwtl
fists
mov
shll
jae
pop
mov
or
decl
int
inc
lret
xchg
inc
cmpsb
push
xlat
cmc
loop
mov
nop
dec
sbb
sbb
jmp
push
push
adcl
mov
hlt
repnz
xor
or
stos
enter
jecxz
or
sub
xor
scas
aaa
xor
mov
frstor
pop
mov
call
mov
pop
xor
popf
add
inc
test
fldt
and
mov
and
sarb
inc
rclb
jb
sbb
shll
xlat
jae
insl
sub
notb
int
lock
xchg
scas
sub
cs
rorb
inc
dec
cs
xor
arpl
mov
inc
push
add
or
into
dec
je
or
test
push
or
add
pop
scas
test
dec
cmc
sbb
inc
add
adc
jnp
popf
shll
mov
insb
js
loope
fldl
xchg
xchg
xchg
popf
jno
jg
push
loope
les
test
daa
mov
sahf
push
mov
stc
test
jle
nop
xor
icebp
mov
fiadds
cmp
adcl
adc
data16
lret
and
addr16
andb
xchg
aaa
pop
and
push
jmp
pop
mov
xlat
or
orl
pop
jle
je
in
lods
mov
jge
lods
xor
mul
pop
data16
add
mov
pop
out
or
and
lds
sbb
aad
xchg
jno
pop
dec
imul
xor
lods
ret
or
xor
mov
shlb
xchg
sbb
les
sbb
ljmp
inc
cli
loop
ret
push
adc
inc
sub
xchg
js
pusha
jno
fimull
and
decl
cmp
cmp
jecxz
xchg
data16
hlt
pushf
sbb
jge
repz
out
xchg
xor
in
dec
cmc
cli
dec
stos
push
leave
push
xchg
aas
or
sub
into
adc
dec
fnstcw
out
out
or
test
or
stos
aam
js
add
mov
ficompl
ss
mov
lcall
push
jne
sbb
inc
mov
jb
cmpsb
mov
shlb
add
fxtract
sti
in
xor
mov
mov
repz
gs
pop
leave
lahf
add
dec
subl
insb
mov
or
test
sbb
fsubp
xor
shr
int
add
inc
pop
aad
lret
fisubrl
or
cmp
push
lret
iret
fs
pop
sbb
sti
jecxz
jge
gs
pop
pop
push
push
pop
pop
mov
pop
pusha
sub
cld
insl
cwtl
xor
nop
lcall
cmpl
adc
inc
jg
lahf
lods
sub
icebp
xchg
mov
dec
cmp
or
outsl
jo
es
jne
sub
stos
sbb
in
scas
lds
lret
mov
sar
out
into
xor
adc
fwait
or
add
sti
xchg
je
andb
int
xchg
and
jecxz
push
xchg
ds
jmp
mov
push
adc
sub
ret
or
xchg
inc
dec
loopne
jne
rol
xor
jmp
cmp
or
fmull
lcall
cmp
nopl
xchg
repz
xchg
push
loope
scas
mov
lods
dec
xor
cmp
popa
aaa
mov
les
sti
out
shll
add
or
std
mov
icebp
pop
jmp
arpl
push
mov
push
lock
cld
movsb
enter
js
movsl
mov
mov
push
cmp
inc
adc
leave
movsl
add
outsl
test
inc
or
xchg
jecxz
jno
sbb
insb
sub
mov
mov
mov
push
inc
mov
cmpl
jnp
jns
cmp
icebp
mov
mov
push
or
imul
xor
es
lods
cmpsl
lea
out
or
jb
add
cmp
enter
lcall
adc
imul
mov
mov
xor
repz
loope,pt
jl
xor
mov
sbbl
movsb
pop
shlb
dec
xor
adc
fisubs
daa
mov
push
push
push
cmp
push
fimuls
fdivrl
inc
mov
pop
ljmp
mov
arpl
es
rcrl
leave
push
fs
push
sub
into
jl
inc
adc
or
mov
jl
mov
jns
dec
cld
add
sbb
ret
and
aam
sbb
mov
pop
icebp
incl
or
xchg
insl
dec
fwait
adc
inc
mov
cmc
xchg
mov
lds
sbb
imul
add
jo
jno
ljmp
mov
mov
outsb
xchg
sub
inc
aam
lea
fisttpl
nop
movsl
mov
jnp
xor
adc
add
movsl
enter
push
mov
or
dec
dec
dec
push
scas
nop
and
repnz
fnsave
xor
mov
inc
add
xchg
pushf
adc
cmpl
adc
fimull
add
inc
pushf
mov
push
jmp
mov
dec
outsl
xor
pop
mov
out
fisubs
xchg
es
rorb
out
xor
testl
xchg
pusha
pop
movsl
ss
rolb
push
sub
xor
push
xchg
mov
fisttps
add
inc
out
mov
mov
mov
sbbl
gs
jg
out
dec
out
push
repnz
fisubs
and
test
cli
lahf
push
mov
popl
ljmp
pop
xor
insb
push
mov
or
mov
into
jne
aam
hlt
jo
pop
js
int
and
gs
sub
in
enter
mov
out
pusha
scas
imul
xchg
or
repz
and
mov
jae
lcall
jb
popf
inc
lcall
ss
add
inc
rcll
lock
pushf
mov
lods
dec
xor
jmp
mov
mov
sbb
mov
mov
xchg
add
mov
push
jae
inc
xlat
scas
test
out
and
jp
stos
mov
daa
pusha
mov
jbe
imul
adc
pushf
cmp
cld
add
mov
cmpsl
jno
dec
clc
adc
ds
in
cmp
out
decb
sbb
inc
pushf
mov
sarb
mov
jg
dec
ret
in
scas
icebp
lods
lea
loop
cltd
decl
xor
dec
jg
cmc
fcmove
ss
cwtl
xor
mov
jg
in
push
loop
rol
fdiv
test
mov
sbb
imul
push
xor
fwait
mov
dec
out
jl
sti
push
sbb
mov
pop
inc
cwtl
inc
fdivrl
mov
sbb
sbb
dec
sarb
sarb
syscall
je
test
mov
int
mov
mov
enter
mov
push
movsl
ja
jb
mov
or
pop
sti
inc
mul
stos
pushf
outsb
mov
push
mov
cmp
mov
inc
inc
data16
push
nop
push
cmp
popa
jg
cmp
and
cltd
repz
imull
or
in
clc
lods
or
in
fidivrl
inc
adcb
mov
xor
scas
jbe
push
xchg
lret
jp
and
stc
pop
ss
aam
fcmovb
push
adc
sahf
aas
std
call
int3
push
sar
mov
adc
mov
hlt
pop
das
gs
lret
ret
dec
dec
out
ror
or
cltd
bound
pop
cltd
pop
in
addr16
stos
fidivrl
lock
jns
out
push
test
push
cwtl
push
in
mov
test
rcrb
orb
orl
add
mov
enter
mov
xchg
ret
ss
mov
xadd
jne
add
inc
fcmovnbe
mov
xchg
shrl
stos
cmc
mov
fwait
jp
std
jge
or
shll
pop
mov
rcrl
dec
adc
cmp
dec
mov
fbld
fdivrs
pushf
or
mov
push
push
dec
jmp
cmp
xchg
cmp
adc
enter
dec
test
dec
jmp
mov
cltd
rcrl
inc
scas
dec
scas
adc
mov
pushf
call
dec
dec
jae
cmp
rclb
rcl
repz
pop
and
jle
loope
and
push
sarb
into
dec
jae
lahf
adc
jne
js
jmp
test
shl
add
lock
inc
push
imul
es
adc
jecxz
xchg
or
inc
sahf
scas
jae
insl
test
dec
fdivrs
scas
xorl
es
leave
xor
mov
pop
jae
int3
loope
cmpsl
dec
adc
addl
dec
in
enter
push
mov
ja
lret
jbe
xchg
loop
or
push
xor
jl
xor
mulb
cwtl
mov
inc
popf
push
cmp
cmp
pop
sbb
fwait
and
lds
es
gs
ret
test
cli
inc
rep
ret
jbe
add
sti
cs
dec
push
cmp
decl
sti
xchg
jbe
in
imul
mov
jmp
jmp
insb
pushf
mov
fldcw
mov
std
sbb
insb
ficompl
and
mov
ds
out
testb
or
xchg
cli
lahf
sbb
and
sbb
pop
jne
xorl
sbbl
insb
enter
cmp
enter
iret
xchg
adc
mov
push
mov
inc
cmp
mov
pop
ficoms
adc
xchg
stos
or
sbb
and
cvtsi2sdl
sub
and
out
cmp
stos
into
xchg
imul
cmpsb
inc
and
test
mov
xchg
push
mov
add
inc
in
movsb
pop
popf
mov
and
jbe
filds
mov
loope
mov
xchg
comiss
test
add
movsl
insb
push
in
pop
scas
jmp
jns
pop
or
adc
or
or
in
repz
fcomip
push
ds
push
xchg
jnp
fistpll
clc
mov
loop
jge
icebp
mov
fistpl
out
lret
dec
xor
add
push
sbb
and
pop
inc
aad
mov
jmp
daa
jns
push
imul
dec
sub
mov
cmp
or
loop
jecxz
stos
xchg
in
and
loop
fistps
insb
pop
test
dec
arpl
sbb
cwtl
add
das
neg
lahf
outsb
xor
stc
scas
loop
jae
inc
insl
cli
mov
repnz
test
sbb
jg
push
lods
aam
cmpsb
dec
enter
mov
loope
push
pop
xchg
xor
pop
rclb
xchg
dec
shll
and
and
lea
sbb
hlt
cmp
sub
insl
cmp
sbb
add
lcall
mov
push
in
pop
insl
pop
nop
mov
mov
xchg
mov
add
in
sti
push
shrl
dec
popf
ljmp
sbb
mov
mov
mov
rclb
ds
adc
and
jl
push
bound
movsl
neg
sub
mov
lea
inc
shrl
pop
outsb
and
addr16
inc
jge
test
popa
jns
fidivs
xor
inc
dec
xchg
and
xchg
test
paddusw
cmp
xor
mov
adc
call
mov
leave
ret
push
jne
adc
arpl
mov
repz
push
xchg
push
test
dec
xor
clc
or
call
inc
xor
cmp
push
xor
mov
jae
jg
dec
xchg
dec
rcr
xchg
cmp
sti
inc
out
bound
sub
dec
arpl
mov
aam
jns
aad
mov
mov
movsl
cwtl
mov
mov
sub
ljmp
xchg
nop
jb
and
outsb
stos
ljmp
ja
in
jmp
testb
leave
lret
cmp
out
cmpsl
pop
dec
cmp
mov
mov
dec
inc
aas
rolb
xlat
in
sarb
pop
jno
lret
mov
iret
jg
cmp
stos
mov
js
test
stc
outsb
jb
xchg
stc
sub
in
ja
scas
inc
mov
out
cltd
xor
imul
repz
int3
outsb
inc
jb
adc
out
fwait
adc
adc
ret
push
xchg
cmp
mov
adc
xor
push
or
inc
cmpsb
xchg
jns
shrl
subb
cld
cmpsb
pop
cmpsb
insl
adc
shll
stos
out
mov
lret
xor
ffreep
pop
enter
aad
hlt
xor
pop
mov
out
movsb
push
test
xlat
jle
and
mov
loope
pop
pop
lds
sub
sbb
cli
fucomi
inc
ss
scas
xchg
lcall
xchg
outsb
mov
imul
xchg
sbb
mov
or
sbbb
ret
add
mov
outsl
addb
adc
cltd
loop
lret
xchg
in
xchg
push
inc
push
sub
dec
mov
test
fucomp
popa
push
jns
pop
sbb
repnz
mov
sti
pop
cmp
sbb
add
ljmp
mov
mov
inc
xchg
frstpm(287
fildll
in
mov
adc
jmp
mov
mov
and
add
and
mov
mov
ret
push
push
icebp
jae
scas
push
fldcw
dec
push
ss
xchg
jp
pop
std
dec
xor
inc
out
and
ljmp
jnp
jle
decb
xchg
jae
pushf
or
sub
mov
xor
sbb
adc
cmpsb
add
mov
dec
popa
out
fcompl
mov
sbb
add
outsl
ret
mov
adc
ret
jg
or
mov
xchg
add
jge
stc
fcoml
sub
lods
inc
xchg
jno
std
push
cld
inc
in
inc
loop
add
sub
jl
scas
sbb
sub
lock
fisubrs
xchg
leave
xlat
fwait
lock
das
mov
fcomi
jg
pop
push
push
pop
insb
jns
nop
mov
xor
push
fistpl
int3
mov
cld
pop
pop
shr
inc
pop
mov
sub
imul
xorb
mov
inc
jl
sti
add
aad
call
das
mov
lcall
jo
inc
mov
stos
sahf
xor
push
dec
jns
shll
lds
sub
jmp
popa
pop
xor
scas
mov
jns
jle
shl
jb
mov
push
add
mov
push
iret
mov
sti
out
jno
mov
stc
fsubrl
sbb
mov
arpl
loop
mov
sahf
pusha
lcall
xor
mov
gs
pop
jp
sbb
mov
sub
cmpsl
insb
sub
std
adc
xchg
fsubr
test
mov
and
fwait
lods
push
pop
imul
loopne
adc
mov
pop
arpl
adc
pop
sub
into
je
pop
js
pusha
inc
test
in
addr16
ret
jp
pushf
mov
int3
pusha
cmp
out
add
adc
and
iret
xlat
push
pop
test
loopne
lods
incl
mov
sbb
stos
mov
push
and
xor
cld
push
push
xchg
jmp
xor
aas
sbb
cmp
xchg
jno
mov
mov
xor
pop
xchg
in
sbbb
lods
push
pop
sbb
push
lcall
ja
push
sbb
sbb
ljmp
push
adc
bound
ja
mov
push
gs
sub
pushf
adc
in
rol
pop
push
daa
sub
inc
popf
and
jecxz
pop
ja
mov
push
mov
or
hlt
push
sbb
xchg
adc
pop
pop
mov
loop
mov
std
imul
inc
dec
jae
pop
dec
and
pop
cmpsl
fadd
mov
je
rolb
sahf
mov
mov
mov
mov
loop
mov
pop
mov
fdivrl
cmpsb
mov
mov
inc
test
rorb
or
sahf
pop
cmp
sub
inc
and
push
cmp
push
test
das
js
outsl
and
stc
dec
sub
jae
icebp
mov
lahf
mov
add
jae,pt
bswap
stos
mov
dec
jg,pt
shrl
imul
jg
dec
pop
test
cmc
dec
lahf
test
inc
pop
aad
inc
lcall
pop
fldl
pop
mov
gs
pop
add
gs
inc
pop
arpl
and
push
cli
sub
aam
inc
clc
popa
inc
imul
push
lret
fiaddl
cmp
lock
jb
movsl
or
int3
dec
insl
cmp
mov
push
fistl
mov
call
push
xor
xor
jge
test
sub
dec
jno
icebp
mov
nop
or
or
lock
sti
in
ljmp
xor
inc
shlb
and
mov
out
fistpll
inc
leave
sti
shll
out
negb
imul
push
outsl
stc
out
xchg
jno
mov
lcall
out
jno
xlat
fmuls
adc
daa
push
movsb
mov
mov
cmp
mov
jbe
adc
stos
adc
sub
mov
popa
or
test
sbb
mov
lock
cmp
mov
and
in
mov
js
jno
mov
or
ljmp
ret
test
sbb
push
iret
ret
xor
sub
loop
iret
pusha
ret
and
lods
js
sub
fsubl
aam
xbegin
inc
lahf
adc
sahf
icebp
mov
pop
xchg
aad
mov
lods
stos
inc
push
scas
inc
in
inc
and
and
jecxz
xchg
test
jge
out
jp
mov
ret
rclb
daa
aad
inc
mov
subb
int
stc
xchg
scas
outsl
mov
sub
cld
fwait
xor
sbb
dec
ret
lods
lahf
mov
inc
xchg
push
iret
jae
adc
imul
aas
mov
push
and
in
lods
mov
ja
sbb
mov
pop
les
and
cmpl
sbb
bound
fsub
sub
fnsave
mov
mov
dec
sbb
lcall
xchg
out
int3
stos
jmp
jns
nop
jb
cli
ljmp
pop
jbe
pop
sub
out
mov
mov
daa
lods
movsl
loop
xchg
popf
dec
inc
fidivs
mov
push
test
push
sarb
mov
xor
cmpsl
mov
push
leave
lcall
mov
sbb
pop
sbb
push
outsb
adc
cli
or
pop
div
xchg
mov
movsl
sbb
prefetch
or
js
or
mov
inc
lret
std
lret
in
pop
out
loop
pop
jne
push
repnz
cltd
leave
xchg
mov
xor
inc
and
pop
sahf
mov
stc
mov
cmpsl
lds
add
jbe
mulb
ror
lock
mov
mov
mov
shll
int
adc
call
adc
add
sbbl
lcall
test
pop
mov
xchg
or
imul
inc
mov
movsb
gs
shlb
sub
pushf
insl
dec
das
js
scas
gs
std
pop
dec
cmp
int3
jne
lock
fs
xchg
xchg
popa
popf
push
sbb
lcall
adc
pop
daa
and
cmp
aaa
mov
sub
jb
sub
lcall
pop
pushf
dec
sbb
and
sbb
mov
shr
xor
test
dec
and
outsl
push
and
es
adc
push
mov
inc
fistpll
push
lcall
push
pop
fs
cli
stos
leave
sbb
pushf
movsl
inc
jbe
pusha
mov
sarl
dec
xchg
pop
adc
dec
pop
jns
lock
out
test
cmp
add
sbb
cmpsl
rcl
sarl
ds
xor
xchg
popa
les
addr16
jne
lahf
adc
mov
test
repnz
dec
and
sub
iret
mov
dec
xchg
or
into
insl
vmovhps
adcb
sti
sub
mov
dec
push
push
js
loop
ljmp
xchg
mov
cmpsl
lock
stos
enter
pop
ficompl
aam
cmp
hlt
pop
stc
inc
mov
jae
cwtl
cmp
dec
idivb
daa
or
mov
data16
mov
pop
pop
adc
mov
xchg
into
outsb
jp
fildl
xchg
pop
pop
fcmove
add
jne
adc
xchg
and
dec
leave
mov
push
add
nop
mov
fisttps
mov
cld
sub
xchg
add
adc
scas
jge,pt
pushf
sub
adc
push
cmp
testl
ss
mov
les
orb
test
aaa
cmpsb
xchg
lcall
sbb
fs
add
adc
jecxz
int
cmp
imul
out
sbb
and
xchg
push
cmp
dec
inc
cmc
push
scas
test
push
sti
out
xor
add
sbb
pushf
movsb
inc
mov
dec
pop
call
lods
das
or
jno
pop
and
int3
scas
pop
mov
int3
jp
pop
xchg
imulb
loopne
imul
sub
mov
cmp
mov
pop
addb
pop
jecxz
push
adc
fwait
pop
dec
xchg
into
xchg
inc
jl
adc
cmc
xor
sbb
in
jb
xor
push
les
subps
das
popf
fisubrs
sbb
jo
frstor
jge
jl
inc
test
cmc
ds
lods
enter
adc
xor
orl
push
cs
out
dec
sahf
popa
nop
popf
cs
ss
ljmp
lcall
push
sti
jge
xchg
pop
insl
rorb
aam
and
push
sub
cmpsl
mov
pop
push
test
ljmp
ja
sub
xor
test
dec
in
mov
and
inc
jb
pushf
and
jb
jb
orl
data16
add
push
xchg
fadds
pop
push
mov
lahf
mov
sbb
push
lret
call
das
stc
shll
sbb
loope
xor
or
mov
fcom
add
or
sbb
jg
adc
fiaddl
loopne
xorl
fistl
ret
jno
mov
push
jge
inc
add
repz
push
sub
mov
icebp
xchg
jp
out
cwtl
jae
xlat
arpl
lea
call
outsb
or
sbb
xor
rolb
out
test
inc
pop
test
in
gs
fucom
jne
flds
sub
xor
test
shll
clc
cmp
stos
lea
or
mov
jle
push
mov
repz
pop
leave
js
cmp
xchg
rcrl
sbb
and
ret
into
outsl
fdivl
fcoms
cmc
add
inc
mov
call
mov
mov
xchg
push
sub
xchg
rclb
out
or
mov
je
adc
xor
dec
nop
enter
mov
fwait
cmc
in
inc
rol
jg
cwtl
and
xchg
mov
jmp
jo
lods
out
outsb
pop
push
pop
sbb
movsb
xchg
out
in
ret
dec
add
and
add
sub
gs
cltd
ret
push
dec
mov
addl
push
adc
sbb
jl
mov
push
mov
pop
stc
repz
jb
xchg
cmp
fwait
sbb
scas
popf
cmp
add
dec
filds
adc
stos
loop
sarb
in
mov
bound
fs
movsl
jb
lock
mov
mov
xor
or
test
add
test
xchg
sahf
inc
leave
repz
stos
add
jb
sub
repnz
xchg
popa
daa
add
inc
cmpb
and
dec
xor
icebp
and
lods
cwtl
push
dec
wrmsr
scas
into
push
mov
loopne
pop
push
ss
imul
sub
xor
sti
xchg
jbe
xchg
pop
aaa
or
pop
popa
pop
mov
xor
pop
js
inc
insb
mov
add
nop
cmp
add
in
add
push
daa
inc
dec
fistl
push
lds
sub
mov
sbb
sub
push
pop
stos
mov
lret
shll
mov
enter
mov
jns
inc
cmpsl
mov
nop
insl
push
xor
pop
lock
daa
daa
pop
mov
leave
xchg
cwtl
jg
stc
inc
std
push
sbb
add
and
stc
push
push
sahf
mov
mov
nop
and
sub
mov
dec
fs
aaa
or
lods
dec
daa
popfw
sbbl
xchg
pop
rcrl
shl
or
out
and
push
jnp
pop
mov
mov
cmc
test
xchg
ret
fwait
push
sbb
xlat
into
fsubrs
sti
push
xchg
or
notl
in
dec
mov
cmp
dec
jg
imul
cmp
mov
cmp
or
xlat
jne
pop
lods
jle
shll
dec
mov
pop
add
xlat
mov
xchg
bound
sub
dec
arpl
pop
dec
and
sub
add
push
and
push
iret
push
repnz
push
and
es
lock
and
outsl
mov
dec
pop
cs
sbb
mov
push
fwait
stc
dec
insb
movsb
pop
push
push
and
lcall
pop
push
cmp
test
in
lds
aaa
cmc
sbb
jge
cmp
enter
mov
mov
and
movsb
push
push
mov
sub
fdivs
mov
sbb
je
jmp
rcrl
in
adc
cli
js
xchg
sbb
jno
popa
out
fsubs
mov
inc
movsl
jg
push
jo
mov
shll
fs
mov
push
test
dec
aaa
sbb
push
jns
in
loop
dec
data16
xchg
test
imul
push
cwtl
lret
rcrl
es
push
test
addr16
ret
sbb
push
mov
leave
inc
pusha
lods
ljmp
rclb
pop
mov
scas
and
fs
inc
int3
sbb
inc
fldenv
add
jecxz
fwait
idivb
or
jp
in
mov
call
outsb
iret
int3
cmp
insb
in
lock
rclb
push
leave
push
imul
push
xchg
jle
std
mov
clc
adc
push
lods
popf
out
lds
dec
lds
jns
repz
arpl
dec
movsb
aam
inc
xor
adc
sarb
pushf
fbld
adcl
fmulp
divl
mov
in
push
fdivrl
repz
dec
cmp
xchg
mov
stos
bound
sub
mov
and
mov
into
dec
rcl
clc
repz
pusha
aas
sub
or
icebp
pop
push
in
out
xchg
cmp
or
dec
out
cmp
notl
ret
and
adc
xor
fadd
fstl
bnd
jnp
adcb
addr16
aas
lret
dec
aaa
divb
and
loope
filds
dec
and
mov
push
sahf
cli
cmova
cmpsl
sub
shlb
xchg
xchg
pop
xor
jo
sbb
push
ret
scas
sub
jecxz
aas
sbb
xchg
adc
repnz
cmc
bound
loop
push
shlb
lcall
push
call
int
mov
mov
popf
cmp
or
bound
mov
dec
into
add
rcll
stc
int3
pop
arpl
dec
inc
ja
mov
movsl
sub
mull
jg
adc
or
push
cwtl
lret
fs
cmp
or
cmp
jno
and
fs
lcall
push
dec
sahf
sbbl
sti
push
lods
shl
or
sbb
dec
dec
push
adc
mov
aad
pop
adc
sub
jo
popf
pop
pop
or
in
xchg
dec
sub
lcall
loope
cmp
ret
adc
imul
test
decl
push
mov
je
inc
pop
out
stos
mov
sbb
hlt
dec
cmp
popa
cmpsb
scas
push
call
jo
in
mov
ds
fistl
or
push
sbb
out
hlt
sub
aad
mov
mov
add
lret
lret
cmp
dec
out
inc
daa
sub
lock
jmp
mov
cmc
scas
cmp
insb
mov
mov
aad
cmc
add
push
fdivrs
push
daa
xchg
mov
daa
mov
cmp
inc
hlt
lcall
cmp
xor
dec
xchg
mov
xor
mov
mov
pop
jmp
push
pop
repz
popa
aas
sub
sub
sub
fcmove
add
mov
sti
sbb
clc
mov
lods
sub
push
in
xor
push
jp
dec
je
lahf
hlt
ffree
and
mov
mov
test
xchg
cwtl
xchg
adc
push
loopne
aam
stos
pop
push
movsl
xlat
popf
pop
std
gs
jnp
adc
ss
cmp
dec
sub
adc
or
pop
fidivrs
xchg
cltd
imul
loopnew
mov
pop
es
test
sub
fs
mov
jnp
push
lcall
mov
and
mov
jp
ljmp
xor
inc
xor
out
loop
pop
gs
jg
hlt
aas
jae
std
fs
insl
dec
sub
cli
xor
cmpsb
pop
out
idivb
inc
mov
shl
mov
dec
push
je
dec
notl
rolb
push
in
dec
add
add
sarb
inc
mov
mov
cld
xor
pushf
and
sub
dec
stc
movsb
sti
and
test
jno
sub
loop
lahf
out
sbb
lods
fbld
mov
mov
cwtl
push
test
jbe
pop
push
adc
lea
test
or
insb
fs
out
fwait
add
test
mov
cltd
stc
adc
mov
clc
mov
lds
mov
cli
cmp
sbb
push
sub
push
mov
push
cmp
in
popa
inc
repnz
jns
leave
mov
shl
jbe
jmp
fnstenv
adc
aam
mov
ret
jge
shl
daa
daa
lock
ljmp
add
mov
jnp
fstpt
mov
mov
adc
sbb
dec
aam
incl
adc
xor
jecxz
or
negb
clc
add
fcmove
insb
add
push
scas
in
std
movsb
fmuls
lods
fildl
test
cld
adc
dec
push
adc
mov
push
inc
sub
inc
popa
shl
in
aas
addr16
imul
cltd
ficoms
jle
inc
lahf
cs
cmp
nop
hlt
mov
stos
sbb
leave
insb
mov
push
jl
cld
ss
data16
jae
scas
ja
jno
aam
pop
push
dec
loope
int3
dec
add
fmull
inc
std
sbb
sbb
rorl
inc
pop
and
push
push
lret
cmp
cs
dec
gs
mov
jb
lods
jne
sbb
push
jge
sbb
je
dec
shrb
pop
add
push
movsl
inc
mov
mov
pop
push
jae
arpl
shlb
inc
sahf
and
stos
inc
or
mov
mov
movsl
add
cmpsl
inc
jmp
xchg
mov
xor
sbb
xlat
mov
jne
lea
sahf
icebp
or
les
inc
xor
fs
call
mov
loope
pop
push
xchg
scas
mov
out
mov
xor
mov
cmp
pop
push
fstpl
out
jo
jl
test
icebp
outsl
push
add
mov
mov
mov
mov
enter
rclb
loop
add
pop
sub
pop
mov
or
insl
shlb
pop
jo
push
inc
adc
push
stos
inc
xlat
aas
mov
inc
sbb
sbb
dec
inc
adc
mov
lret
jns
test
cmp
mov
jo
dec
addl
jp
fldcw
cmp
and
leave
push
gs
inc
pop
lahf
jb
push
add
jns
push
cs
popf
test
push
popa
lret
cli
testb
add
mov
cwtl
dec
popa
fisubs
fcmovne
into
push
sbb
jae
out
inc
push
pop
rorl
cld
jbe
xor
push
and
add
xchg
inc
mov
in
xchg
inc
jne
cs
test
fisubrs
xchg
and
divl
push
mov
push
xor
shrl
outsl
lds
shl
sbbl
popa
pop
sahf
xor
pop
mov
sbb
mov
inc
stos
jae
dec
dec
movl
mov
insl
and
cmp
test
add
shl
test
jne
push
xor
adc
or
sti
mov
leave
xchg
test
mov
nop
hlt
push
gs
imul
testb
ds
and
shrl
pop
test
sbb
push
bound
xor
sti
or
insl
mov
arpl
cmp
push
xor
jmp
push
repz
out
and
cmpb
daa
and
dec
add
ja
arpl
stos
sarl
cmp
les
mov
ljmp
dec
pop
pop
mov
loopne
mov
pop
mov
imul
popl
outsl
stos
push
verw
divl
ret
and
in
jnp
xor
cmp
scas
dec
mov
dec
push
and
and
mov
mov
jmp
cmp
testb
movsl
xchg
push
daa
fld
dec
sub
movsl
and
add
jno
xchg
dec
push
lock
xchg
and
sti
sbb
mov
pop
pop
and
pop
pop
lea
in
dec
mov
jl
scas
je
mov
sub
out
inc
mov
pop
mov
add
jbe
fldenv
lea
fnstsw
adc
mov
sub
lret
pop
int
adc
add
hlt
jge
xchg
jnp
maxps
nop
dec
lea
decb
jbe
mov
mov
or
pushf
stc
cld
rolb
cmp
sahf
push
dec
jno
into
xchg
jnp
xchg
mov
xor
in
ret
out
pop
adc
xchg
out
shl
pop
mov
pop
and
outsl
out
pop
inc
mov
addb
mov
jbe
and
xor
cmp
or
cmpsl
inc
addr16
decl
jae
fistpll
and
cmpsl
add
xchg
mov
sub
jg
cli
lret
push
andl
cmp
jle
jge
enter
lret
std
pop
ficompl
adc
jge
cmp
test
mov
out
mov
leave
pop
inc
sbb
fisttps
hlt
iret
hlt
pop
out
jl
mov
ja
push
xlat
dec
nop
adc
dec
les
or
adc
repz
jno
mov
add
fisttpll
xchg
mov
in
in
imul
fnstcw
and
loop
mov
sti
pop
sbb
and
fs
mov
outsl
or
int
jge
sub
and
xor
jbe
dec
sbb
mov
cmp
sub
add
repnz
movsb
clc
out
jbe
mov
mov
adc
add
push
and
addr16
out
jle
add
pop
xor
mov
jp
add
adcl
and
cmp
scas
pushf
pop
cmp
add
popf
lret
nop
cmp
push
jns
or
call
je
dec
int
leave
subb
shrl
or
jle
aaa
jp
daa
dec
in
xor
stc
lds
mov
cmp
push
in
cwtl
mov
mov
inc
or
add
pop
push
cmp
sti
pop
out
je
notb
call
inc
or
cmp
cld
mov
test
mov
negl
test
push
dec
pop
xchg
mov
sub
jbe
add
mov
xchg
in
xchg
cli
mov
xchg
cli
ds
jl
ss
jp
lds
jae
test
cli
aam
xor
fs
aaa
aam
shll
push
in
mov
jge
rcrb
mov
ffree
cli
pop
lahf
ljmp
xor
xchg
int3
mov
cmpb
push
stos
inc
push
test
jg
enter
adc
cmp
mov
xor
bound
pop
mov
daa
inc
inc
fmull
sbb
push
mov
mov
push
mov
out
lods
mov
xor
cs
xchg
imul
sti
inc
ficoml
out
cwtl
ljmp
dec
imul
cmpb
test
adc
ret
xor
cmp
sub
adc
sti
fiaddl
jbe
inc
add
je
mov
loope,pt
inc
jbe
in
xchg
roll
xchg
sub
cwtl
xor
stos
enter
xchg
pop
xor
enter
hlt
adc
ret
push
dec
addb
inc
lret
jg
xor
popf
mov
lret
mov
xchg
or
repnz
loopne
les
fmulp
sti
xchg
test
xor
fcom
cmpsb
xchg
mov
mov
std
cmp
push
adc
mov
stc
outsl
hlt
jne
cmp
mov
loop
xor
stc
out
pop
inc
aaa
rcrb
pop
daa
ds
pop
cwtl
scas
cmp
das
fistpl
imul
push
fwait
xor
jl
or
mov
mov
int
add
jnp
pop
sarl
pop
mov
fsubl
sbb
mov
xlat
pop
and
jns
stos
mov
not
pop
add
ficompl
xor
jp
cld
mov
scas
cmp
dec
add
lret
out
xchg
mov
mov
popa
sub
mov
into
fidivl
push
outsb
push
mov
fcoms
sahf
xor
outsb
test
xchg
call
rcrb
pop
loopne
push
cmp
sbb
push
test
aas
cmpsb
setle
mov
cmp
loop
dec
and
pop
mov
and
loopne
jae
scas
repz
hlt
les
cltd
clc
ret
stos
pop
andl
pop
clc
xchg
andb
dec
movsb
imul
mov
fsubrs
icebp
cmpsl
lcall
std
dec
mov
js
xchg
fcoml
and
mov
push
xor
out
xor
mov
rolb
mov
jg
fidivs
movsl
sub
pop
mov
ret
shrl
lock
les
inc
into
xchg
pop
lock
and
adc
hlt
loope
enter
sbb
inc
lahf
fidivs
pop
jg
jbe
xlat
push
sbb
mov
scas
pop
mov
xor
rol
and
pop
in
lods
sar
ret
pop
xlat
rorl
push
fisubrl
repnz
ljmp
aas
push
sarl
lods
mov
mov
sbb
inc
int
mov
cmp
lods
icebp
jp
mov
add
lret
insl
rolb
repz
or
mov
adc
pop
jle
push
mov
rcr
lds
ja
ret
movsb
mov
bound
lret
mov
pop
xor
mov
push
xchg
lret
add
jnp
sub
rsm
pop
rcrl
xchg
pusha
dec
lcall
add
out
jp
inc
sub
inc
inc
repnz
test
push
out
lods
mov
dec
je
sbb
cld
sti
arpl
addr16
imul
repnz
ret
sub
add
stos
push
jne
loope
add
icebp
dec
sbb
ficoml
pop
movsl
mov
or
out
insb
push
arpl
push
jno
adc
dec
adc
xchg
push
push
lds
ds
das
dec
outsb
aaa
pop
lahf
jl
cmp
iret
jno
ja
ss
fstpl
xchg
loope
pop
data16
pusha
pop
adc
popf
push
sbb
mov
pop
nop
jae
iret
mov
mov
nop
add
lock
inc
push
jb
xor
lret
bound
cmpsl
push
lcall
lcall
lcall
mov
jle
xor
test
loope
lods
mov
jbe
dec
cmc
xchg
fcomps
cmp
ret
out
mov
xor
sar
mov
test
fcomps
adcl
fidivrs
and
mov
pop
adc
out
jb
inc
imulb
adc
int3
stc
fwait
jns
ret
movsb
out
pop
in
daa
imul
imul
xchg
imul
into
xor
scas
xchg
popf
sbb
dec
inc
das
cli
cmp
lods
out
mov
movsb
sti
in
outsb
sub
xchg
or
dec
outsl
je
fs
lret
lock
mov
sahf
repz
hlt
imul
stc
jl
popa
jno
push
hlt
push
test
and
jnp
stos
mov
loope
pop
mov
ljmp
lea
verw
inc
xchg
mov
iret
out
jb
push
adc
je
in
inc
shr
in
out
mov
movsl
out
dec
mov
cmp
xorb
insl
loope
sub
mov
jl
xchg
mov
stos
je
xor
mov
xor
inc
and
out
fs
scas
les
cwtl
pop
pop
loop
iret
leave
mov
inc
js
cmp
fisubl
adc
jl
dec
jae
mov
mov
adc
out
subb
cmp
jbe
popa
in
or
outsl
rcrb
pop
nop
lahf
add
and
sub
lret
jb
xor
add
cmpsb
mov
adc
stos
push
pop
mov
dec
xchg
and
scas
scas
out
ficoms
fstp
xor
mov
enter
jns
pop
nop
mov
xor
jno
dec
out
cmp
mov
mov
dec
jl
jne
mov
adc
rcl
dec
push
jae
dec
leave
and
add
jecxz
xchg
fwait
push
stos
aad
enter
out
cli
mov
arpl
movsb
imul
dec
mov
in
shll
and
mov
dec
and
sbb
imul
dec
adc
add
adc
aam
mov
adc
fbld
fistps
rorl
fbstp
xor
subl
cmp
loope
mov
xorb
js
lods
dec
out
out
cli
push
in
jp
jl
orb
inc
pop
jae
shl
push
lods
pop
aaa
jmp
pop
testb
aas
divl
outsl
sub
mov
in
int
cli
adc
mov
pop
cmp
xchg
insl
imul
push
mov
xor
cmp
dec
mov
frstor
mov
pusha
imul
cmpsb
bnd
or
sub
pop
and
or
or
sub
cmp
imul
jle
clc
mov
gs
pop
out
mov
aam
testb
negb
pop
mov
add
add
add
jno
lcall
or
rcrl
cmp
stc
pop
adc
outsb
repnz
adc
push
mov
jecxz
sub
mov
and
dec
out
or
insb
push
movsl
xchg
mov
jmp
jge
call
sar
cmp
hlt
rclb
sbbb
mov
stos
jp
scas
and
femms
sbb
les
lret
movsb
test
push
mov
imul
idiv
out
mov
std
shll
scas
aam
pusha
cmc
dec
xchg
fs
fs
das
movsl
mov
sti
mov
sbb
inc
xor
push
cs
mov
ja
lods
mov
cwtl
arpl
sub
dec
xchg
xchg
xchg
je
outsl
push
lahf
xlat
inc
lea
add
pop
push
lea
cs
mov
mov
push
pop
hlt
mov
cmp
and
sub
jmp
aaa
lods
decl
xchg
fistpll
in
fwait
data16
mov
mov
pusha
pop
ljmp
xor
enter
sbb
in
jnp
xor
lahf
jmp
pop
ds
outsl
pop
rorb
mov
sub
adc
int3
aas
adc
bound
adc
repz
ds
sbb
sbb
lahf
fnstsw
fwait
xchg
stc
lahf
sub
fs
pop
lret
sbb
dec
cmp
aam
cmp
lahf
mov
dec
pop
fwait
pop
mov
sti
add
sbb
mov
stos
pop
stc
popf
cmc
popa
pop
stc
sbb
fisubs
mov
daa
jecxz
popf
add
mov
in
mov
aam
arpl
mov
fadd
movsl
inc
cmp
mov
mov
inc
mov
sbb
pop
scas
insl
lret
pop
aaa
adc
loope
pop
enter
movsl
movsb
mov
mov
cs
push
and
jg
mov
dec
jge
or
cmp
out
or
jnp
jno
fwait
mov
sti
push
rcrb
pop
sub
mov
inc
xchg
iret
pop
mov
loop
cmp
adc
loop
cmp
sar
fnstsw
jmp
add
or
loopne
aad
popa
shr
arpl
push
in
adc
rcl
and
sti
div
out
dec
int
test
mov
movsb
mov
jle
add
sbb
mov
mov
push
pop
shrb
mov
mov
aas
cmp
cmpb
hlt
push
lds
lret
inc
push
inc
xorb
ja
iret
sub
push
ja
add
cmp
and
push
dec
adc
inc
dec
out
push
dec
test
cltd
out
mov
mov
push
in
push
xchg
cmp
loope
push
aad
and
setl
pop
sub
jmp
xchg
mov
inc
xchg
fwait
sub
fnsetpm(287
outsb
add
loope
lock
cmp
and
ss
push
xorl
push
xchg
arpl
int3
jg
add
xor
add
out
pop
xchg
inc
fisttpl
mov
lcall
push
pop
movsl
add
push
pop
loopne
inc
mov
push
mov
mov
and
imul
xor
mov
sahf
movsb
push
adc
push
fcomi
sub
sahf
hlt
mov
nop
loopne
push
scas
sub
push
negb
shl
add
dec
or
add
inc
mov
cli
movsl
mov
mov
mov
in
mov
loop
fists
sbb
mov
mov
iret
cld
lods
mov
test
push
jle
lcall
scas
and
or
pop
adc
nop
repz
mov
adcl
imul
outsb
cmovs
aaa
sti
fsubrs
mov
insb
mov
fdivrs
jo
or
push
dec
mov
jne
inc
pop
mov
repnz
mov
push
mov
jmp
push
stos
movsb
iret
mov
out
std
cmpsl
jl
and
xlat
xchg
mov
aaa
out
sarl
mov
or
or
cwtl
jge
sub
call
frstor
iret
or
adc
or
out
cmp
push
icebp
add
mov
sahf
testb
aas
jmp
aad
cmp
xchg
jl
fidivrl
add
sbb
inc
loop
subps
push
imul
mov
jb
cmp
jno
mov
cmc
xchg
rcll
movsb
loopne
scas
inc
xor
sar
inc
push
mov
sub
dec
jnp
je
dec
sub
inc
fadds
out
xchg
mov
mov
jo
mov
xchg
jecxz
xchg
or
and
int
cmp
insb
or
pop
ja
inc
mov
loope
sub
lret
test
add
or
mov
lea
stos
fwait
pop
push
push
ljmp
xchg
js
lods
add
jb
sbb
or
sub
sbb
and
dec
mov
pop
aad
mov
in
xchg
lods
xor
sub
ret
pop
mov
into
fs
sub
call
jl
or
and
push
inc
scas
in
insl
sahf
aas
incl
fwait
int3
loopne
aaa
inc
inc
dec
sarl
and
sarb
aam
or
jecxz
xor
or
jnp
mov
sbb
test
cs
dec
sti
xchg
mov
jecxz
mov
fidivl
or
pop
cmp
cmp
jno
push
addr16
sahf
das
inc
dec
inc
dec
cmpsb
push
nop
test
jae
sub
lcall
adc
push
sub
mov
lret
jbe
and
or
mull
adc
arpl
cmpsl
scas
in
push
push
je
jmp
xchg
fcmovne
mov
loopne
js
dec
aaa
mov
push
sub
sbb
add
mov
mov
jge
pop
mov
sbb
jp
aas
sub
loopne
test
mov
lods
push
sub
andb
enter
sbb
js
lods
xchg
cltd
orl
mov
jl
dec
add
pop
fistpll
out
sarb
aad
lods
in
nop
movsb
mov
sbb
or
jo
aas
adc
dec
sub
roll
into
inc
js
addr16
popa
push
jb
push
xchg
flds
add
sub
lock
ljmp
xchg
cs
mov
scas
out
push
imul
xor
sbb
test
fstp
mov
lds
mov
icebp
nop
and
xchg
stc
adc
sbb
xor
in
in
arpl
popa
pop
push
nop
dec
fiaddl
push
dec
jns
mov
popa
fstl
xchg
cmp
xchg
mov
arpl
loop
in
mov
ret
xor
sub
mov
ja
out
hlt
push
pop
test
daa
sub
adc
add
out
stos
mov
add
rcrl
nop
jmp
sub
mov
out
pushf
cmp
mov
lret
push
neg
sub
cmpsb
add
enter
pop
mov
popa
loope
lods
mov
cli
insl
outsb
aad
jg
mov
stos
and
das
pop
jge
test
fldt
mov
ror
jge
pop
setno
dec
out
fisubl
int3
sub
dec
divb
into
and
loope
dec
adc
dec
or
cmp
ljmp
and
inc
xchg
in
enter
add
bound
jae
dec
stos
stc
bound
dec
mov
jmp
test
test
dec
push
rcrl
insb
cli
idiv
or
mov
xorb
fidivl
adc
cltd
lahf
lock
mov
aad
mov
lods
ret
cltd
push
in
pop
xor
xor
insb
jecxz
fbstp
mov
lods
mov
cmp
sub
pop
add
cmp
shll
sar
arpl
cmpsb
dec
adc
call
aad
push
inc
adc
ds
incl
cmp
scas
push
ret
sbb
out
mov
sbb
shrb
int3
or
in
xor
pop
xchg
sbb
jb
test
into
xchg
stos
mov
scas
into
pusha
mov
std
scas
cmpsl
in
mov
ret
nop
lds
mov
decl
xor
dec
and
jno
dec
xchg
mov
dec
lds
and
jp
jae
and
pop
add
fmul
inc
jge
cmc
mov
ja
lahf
or
cmp
pop
or
fcompl
pop
leave
xor
lcall
cwtl
sahf
shr
lods
fsubr
rcrb
mov
jnp
pop
jbe
stos
push
xchg
xchg
jbe
jl
or
lret
outsl
outsb
fisubrl
push
jne
mov
dec
cmpb
lock
scas
push
lret
jno
or
scas
scas
sub
cmp
add
sub
mov
lods
adc
sbb
fistpll
inc
mov
and
push
rol
and
enter
jmp
insb
out
shl
mull
ljmp
xchg
stos
ficompl
fwait
lea
push
imul
shl
pop
aam
pop
dec
outsb
fsts
jmp
and
out
cmp
jns
pop
inc
mov
lods
aam
pushf
mov
push
cmp
jbe
add
xchg
cmpsw
lods
mov
push
dec
xlat
push
loopne
push
mov
dec
cltd
xchg
aas
sub
mov
mov
mov
sbb
push
dec
mov
les
jmp
push
and
or
xchg
icebp
or
jne
test
test
loope
mov
push
lock
aam
sahf
loopne
ftst
jg
jp
mov
sub
mov
pop
cmpsb
in
out
mov
loope
int
lret
mov
or
mov
inc
mov
xor
mov
sbb
mov
xchg
aaa
xchg
icebp
adc
or
xchg
insl
add
test
mov
and
out
nop
mov
aad
mov
in
lret
imul
sbb
mov
mov
sub
std
je
mov
xor
push
outsl
insl
pop
rcrb
sbb
cld
dec
lret
mov
outsb
jns
adc
call
pop
dec
sub
ficoms
and
aas
xchg
or
lds
test
dec
mov
shll
push
jl
push
xor
inc
cmp
pushf
or
jo
negl
and
push
int
mov
fucomp
fisttpll
adcb
ljmp
push
or
imul
xor
xlat
lea
mov
or
scas
jl
stc
leave
mov
mov
jmp
xchg
cmp
mov
aaa
inc
out
push
mov
repz
fnstcw
cmp
adc
mov
and
add
hlt
xor
mov
push
sbb
frstor
xor
and
sti
mov
sub
mov
lea
or
into
xchg
loopne
addr16
cld
add
mov
and
push
push
std
pop
insl
sub
dec
mov
push
and
xlat
loop
mov
sub
mov
lret
sarb
out
dec
sub
outsb
paddsb
add
std
jmp
enter
fmuls
rorb
arpl
adc
push
sbb
inc
lods
rolb
dec
sbb
enter
jno
lret
mov
jo
loope
scas
mov
out
pop
add
stc
dec
xchg
sbb
aam
into
test
loop
fldl
int
lock
lret
or
fcomps
xchg
dec
cmp
sub
xchg
xor
cmp
cwtl
in
cmp
mov
sbb
jp
sbb
mov
sahf
das
add
lret
out
xchg
es
inc
inc
in
aas
cltd
cltd
in
push
test
jo
scas
sub
in
push
pop
mov
pop
and
repz
mov
fwait
sbb
scas
pusha
and
sub
sub
push
cmp
into
xor
das
sub
pop
pop
mov
pop
add
cmp
jb
pusha
sbb
adc
gs
jns
fwait
loopne
scas
cmpsl
mov
inc
fdivl
cmp
loopne
jb
mov
push
mov
fbstp
repnz
bound
sbb
or
sub
rol
push
and
mov
je
mov
cmpsb
ret
lret
push
stos
iret
sbb
sti
and
in
or
call
xor
cwtl
sub
cmp
leave
out
insb
bound
int3
xor
jbe
push
scas
icebp
push
fwait
sbb
repz
add
jmp
mov
stos
mov
mov
xchg
xlat
mov
or
xor
dec
clc
out
std
imul
add
jmp
daa
aam
add
inc
mov
idivb
call
dec
jne
shr
lods
daa
cmc
fstpt
mov
mov
out
xchg
mov
sub
pop
mov
dec
int
sub
jge
mov
or
or
mov
sarl
fiadds
mov
xor
repnz
mov
cld
add
iret
cmc
pop
adc
dec
add
pop
sub
cwtl
adc
into
lock
pusha
pushf
and
sub
cmp
jbe
inc
sub
lahf
or
fsubr
fdiv
loope
pushw
xlat
pop
ret
dec
rcl
pop
data16
aad
push
push
pop
push
loop
je
adc
pop
out
push
cs
fmull
stos
es
fistpll
movsl
int3
or
add
push
xlat
dec
or
add
lret
lcall
adc
shrb
cmp
cmp
and
jne
push
mov
movsl
sahf
jno
bnd
dec
imull
in
or
nop
outsb
rorb
or
xlat
in
sbb
sbb
push
iret
aam
clc
hlt
dec
push
sbb
xchg
mov
shr
test
arpl
sti
sub
dec
add
push
mulb
fwait
pop
or
aas
lock
push
hlt
cmp
mov
xchg
and
inc
jns
lods
clc
mov
and
mov
push
lcall
aaa
popa
dec
mov
fldenv
jns
cltd
pushf
rclb
xchg
xchg
add
ret
movl
sbb
leave
fldl
mov
leave
and
and
test
aas
pushf
and
fcmovnu
or
xor
fs
outsl
ja
and
into
lcall
mov
xchg
insb
imul
nop
or
clc
fs
sarb
add
out
jnp
push
test
cltd
sbb
ja
movsb
stos
push
xchg
pop
in
cltd
repnz
mov
xor
movsl
mov
shlb
push
addr16
pop
jmp
jbe
cmp
pop
mov
outsb
sti
dec
rolb
cmpsl
ds
add
stc
pop
ret
aam
fcom
adc
sub
push
gs
mov
shl
or
fisttpl
xchg
adc
shlb
popa
hlt
fs
jge
pushf
jecxz
int3
lds
addr16
sbb
shlb
pusha
sub
jecxz
out
xor
popa
inc
fldl
test
into
mov
inc
xor
xor
repz
popf
lret
stos
push
cmp
cmp
scas
les
out
mov
pop
mov
aad
roll
loope
mov
setns
sub
sub
lods
add
je
add
sub
push
jp
sub
cmpl
cmp
aad
das
and
xchg
push
fisttps
ja
lret
pop
add
clc
dec
ljmp
lods
loopne
xor
mov
testl
in
xchg
ljmp
inc
das
push
test
add
out
fs
xlat
cmp
icebp
push
pop
stc
xchg
lods
cmp
mov
cmp
add
mov
mov
sahf
jmp
mov
inc
mov
lea
aam
daa
cmp
ss
cmp
aam
inc
mov
aad
push
jbe
repz
jae
sarl
lcall
cmpsl
push
fs
adc
dec
sub
and
sub
inc
fildl
ret
popa
or
dec
loope
cmp
mov
jl
jne
loop
xor
sub
cwtl
push
loopne
or
mov
adc
xchg
cmp
ret
jbe
push
and
xchg
cmpb
cmpsl
sbb
inc
das
xor
jae
inc
push
cmc
push
cmpb
inc
mov
sub
out
das
push
sti
stc
xorl
je
ss
jmp
cmp
or
nop
xchg
rcll
int
bound
imul
push
sbbl
xchg
sbb
sbb
xor
outsl
out
lahf
fiadds
jb
xchg
iret
mov
jle
mov
mov
inc
xchg
push
cld
mov
into
dec
movd
aad
movsb
loop
jmp
jae
shlb
dec
jbe
xor
out
mov
xchg
pop
sbb
add
mov
or
std
xor
es
cwtl
add
add
add
push
add
loope
sahf
loopne
mov
pop
dec
pop
incb
lahf
push
xor
sbb
dec
sahf
les
pop
and
xor
cmpsl
scas
inc
negl
jmp
imul
test
enter
push
pusha
jg
std
sub
pushf
icebp
fistl
in
test
mov
ljmp
in
push
mov
mov
in
inc
mov
mov
std
xor
dec
xchg
jo
lret
inc
adc
jne
dec
sbb
cwtl
xor
std
adc
sbb
rclb
daa
fwait
test
aas
or
fstpl
sbb
mov
fmul
enter
jbe
addl
inc
loopne
inc
pop
cmp
fs
test
aas
or
mov
and
jb
ja
lods
popa
add
fs
int3
movsl
push
xor
add
mov
ja
frstor
mov
cmp
mov
add
enter
clc
and
xchg
stos
xchg
mov
rorl
jl
and
fcmovnbe
mov
stos
xchg
xchg
or
iret
in
xchg
ror
jnp
aad
arpl
aam
lds
mov
mov
push
push
xchg
int
rclb
in
mov
mov
das
cmc
popf
orb
enter
pop
test
mov
ja
jecxz
fistl
scas
repnz
inc
lods
loop
das
stc
and
ds
cwtl
and
cmpsl
scas
faddl
push
mov
out
int3
jbe
xorl
inc
xor
inc
mov
add
rclb
imul
stos
cmp
xchg
dec
xchg
jg
lret
adc
push
push
addr16
xchg
mov
or
dec
jle
inc
dec
sub
arpl
push
pop
addr16
mov
lret
xor
xor
cmp
jmp
sbb
lea
out
scas
sub
dec
pop
sbb
call
mov
lods
cli
or
jmp
iret
rcrl
out
dec
mov
iret
pop
jecxz
not
or
sbb
iret
sbb
ret
jecxz
jne
add
cli
ret
mov
test
fs
test
leave
dec
rorl
or
out
dec
and
pop
and
jle
xchg
jbe
cmp
out
xor
mov
sub
int3
mov
dec
adcb
xchg
dec
fiaddl
mov
adc
add
sbb
sti
pusha
iret
xor
push
dec
scas
push
adcb
int
sahf
or
lock
sub
inc
adc
lock
js
adc
frstor
loopne
and
bound
in
test
scas
arpl
fldt
and
roll
test
jle
out
cmp
sbb
push
cmp
jecxz
xchg
mov
adc
xchg
repnz
push
dec
sub
in
push
and
sbb
sbb
fisubs
mov
aas
sbb
and
mov
arpl
pop
cmp
pop
lock
cmp
add
and
ljmp
mov
sbb
inc
rolb
in
xchg
cmpsl
cwtl
inc
xor
pop
lret
mov
pop
mov
and
dec
xor
add
pop
divb
decl
bound
add
in
in
jp
jle
daa
filds
mov
into
fists
movsb
fdiv
cli
push
stc
nop
jne
cmp
ds
mov
loopne
fwait
call
dec
pop
mov
mov
idivb
ret
mov
xchg
cmpsb
fsubr
jle
pop
push
cld
rorl
repz
sbb
mov
addb
jl
sbb
out
mov
pop
ret
adc
sbb
jns
sahf
xchg
js
and
xor
sub
mov
add
popa
aas
ljmp
nop
popa
or
insl
mov
pop
and
scas
pop
xchg
push
sub
clc
jmp
mov
aam
outsb
push
xchg
lea
mov
rclb
xchg
ret
cmp
xchg
aaa
cmpsb
testb
pop
aam
rolb
xchg
dec
and
add
mov
cmpsb
jae
sbb
out
std
testl
test
and
xchg
adc
rorl
inc
pop
sbb
xlat
jecxz
outsb
daa
cwtl
test
idivl
mov
test
clc
loop
roll
xor
push
mov
ds
cmp
dec
repz
push
mov
call
stc
cmp
mov
push
fs
xchg
mov
mov
and
cmp
sti
mov
pop
jmp
dec
mov
popf
mov
jl
mov
bts
cmp
daa
test
pop
lret
insl
mov
inc
ds
cli
ret
fucom
mov
fidivrl
repnz
sub
xor
popf
jne
pushf
lods
cmpsl
fists
movsl
cltd
xor
sub
fdivl
jae
pusha
add
sub
lds
ds
push
or
xor
cmp
or
das
movsl
aas
hlt
stc
aam
mov
clc
jecxz
std
dec
and
iret
jae
pop
repz
repnz
add
sub
jecxz
pusha
sub
xor
and
pop
mov
ja
inc
mov
push
out
mov
shlb
push
mov
push
out
daa
rcll
mov
jo
lret
jns
jle
aaa
pop
in
jge
ret
xor
jb
enter
lods
inc
adc
in
dec
cmc
sbb
pushf
cmpsb
iret
xchg
fdivs
decb
sahf
iret
add
les
xlat
jb
push
sbb
xchg
jmp
bound
add
call
push
js
shrl
ds
ret
or
cmp
insl
lock
aaa
push
xor
push
cmp
sti
loop
add
push
push
and
fidivrl
pop
dec
ja
stos
hlt
lret
push
addb
into
std
jne
and
or
add
pop
out
in
xor
mov
shrb
mov
mov
cmp
xor
xchg
jge
gs
adc
sub
test
pop
repz
jbe
sbb
xor
movsl
mov
notl
jns
jp
call
xchg
and
andb
in
addr16
add
mov
adc
pusha
sarl
adc
orl
call
movsb
mov
and
mov
shl
mov
test
pop
mov
insb
in
cltd
mov
in
add
sarl
push
xchg
or
xor
lods
xchg
movsb
xor
std
enter
jbe
stc
mov
pop
nop
subl
pop
data16
sbb
push
or
and
pop
push
insb
jl
in
sub
adc
mov
imul
sbb
shlb
iret
xchg
push
rcrl
push
mov
mov
mov
enter
lret
mov
into
sub
sub
mov
or
and
push
cld
jecxz
cmpsb
rcrb
daa
dec
dec
fs
insl
sbb
lret
ret
jmp
push
aaa
dec
jno
or
sarb
xchg
cmp
fldenv
outsb
cwtl
les
xor
lock
outsb
or
xchg
sub
shll
lahf
sub
xor
fsub
jecxz
daa
inc
ret
loopne
mov
mov
dec
pop
mov
fwait
mov
adc
mov
rorb
inc
mov
std
out
inc
lret
mov
movsl
cltd
xor
cld
aaa
insl
mov
pop
inc
aaa
negb
dec
inc
sub
lock
repz
pusha
in
into
repz
lret
xchg
xchg
add
add
inc
cmpsb
stos
mov
stos
test
mov
stc
mov
outsl
ja
aas
adc
pop
int
inc
inc
rol
jo
push
in
or
lods
dec
loop
fmuls
mov
idiv
jnp
cmp
sbb
repz
cmc
in
mov
int
or
outsb
xchg
sarl
andl
arpl
mov
bound
fcmovnb
shll
jne
es
insb
aaa
ja
aam
scas
gs
aam
mov
sbb
jmp
pop
sub
push
inc
sub
xchg
pop
push
lcall
lahf
pop
lret
add
addr16
inc
out
iret
sub
adc
add
xor
sub
xlat
cmpsl
mov
inc
rcrl
sub
rcrl
push
and
mov
push
adc
loopne
in
push
test
mov
insb
cmp
add
mov
test
lods
leave
sbb
push
les
jbe
inc
sbbl
dec
jae
aaa
cmp
add
shlb
pop
lret
loop
in
mov
dec
mov
inc
add
inc
je
and
mov
clc
mov
inc
das
lds
sahf
cmp
mov
cmp
in
push
pushf
iret
sbb
mov
test
mov
lahf
mov
mov
js
jge
mov
sub
fnsave
xor
sub
jb
cmpsb
pop
aas
popf
pushf
cltd
mov
mov
cmp
jae
insl
add
jle
stc
xchg
das
les
das
dec
cmpps
adc
and
add
jge
or
movsw
movsb
ss
adc
cmpsb
xor
aad
mov
dec
jns
pop
cwtl
inc
leave
fistl
xchg
cld
mov
test
movsl
bound
mov
or
xor
mov
ret
sub
inc
jmp
fidivrl
mov
add
jae
cmc
sbb
or
or
jns
mov
gs
or
or
add
pop
nop
push
jb
popa
push
and
loopne
sub
dec
pop
jns
cmp
push
cmc
js
lock
adc
push
stos
pushf
and
pop
or
dec
mov
mov
xor
mov
pop
mov
hlt
enter
jo
pop
jae
cld
fstl
fstp
cwtl
fisttpl
dec
rcrb
push
inc
out
mov
sub
pop
push
add
or
mov
je
jnp
cmp
fdivs
int
in
aaa
cmc
or
and
fs
sbb
pop
xlat
cltd
lcall
or
std
scas
arpl
popf
jns
rorl
jo
ss
cltd
int
or
imul
cmp
jmp
mov
fdivrs
loopne
and
lods
mov
xor
movsb
or
sub
xchg
inc
pop
add
jo
xorb
add
cltd
pop
lock
js
mov
add
sub
std
adc
mov
dec
subl
xor
icebp
or
inc
sub
mov
test
mov
les
pop
hlt
jns
mov
dec
jno
sub
jle
jg
test
cli
push
decl
mov
sbb
dec
sub
sbb
sbb
test
sbb
lahf
push
ret
arpl
jns
test
sbbl
pop
call
in
ss
mov
sub
and
orb
push
jae
xchg
push
push
and
xchg
cmp
aam
test
je
scas
push
sub
cmp
cmp
mov
stos
outsb
and
incl
out
mov
xor
lock
xor
xor
fdivl
push
mov
rcr
mov
inc
jne
cmpsb
ss
jne
lds
lahf
inc
fsub
mov
pop
jle
loope
push
cmc
out
sbb
mov
xchg
mov
fucomp
int3
repz
push
mov
push
test
inc
fs
repnz
pop
test
sbb
sbb
mov
add
ret
mov
test
es
cmp
jne
mov
pop
movsb
lret
xchg
cmp
sub
lds
mov
ss
dec
sbb
cmp
inc
lea
mov
xchg
sub
push
sarl
mov
les
cmpsl
dec
ret
pop
fisubrs
lahf
xchg
xchg
in
int
mov
push
test
cmp
ljmp
push
inc
adc
xchg
fwait
mov
pop
cmp
jp
jne
leave
jb
int
mov
push
pop
cmpsl
jb
lea
fcomps
xchg
imul
outsb
iret
xor
dec
jnp
ret
subl
cmp
pop
and
inc
test
inc
sbb
inc
rol
pop
cltd
sti
inc
lret
ret
pop
fsubr
add
mov
jb
pop
sbb
add
in
repz
mov
sub
push
test
inc
inc
xor
ds
mov
insb
inc
in
pushl
pop
data16
fmulp
sarb
or
cmpsb
cpuid
mov
mov
pop
xor
in
repnz
sub
and
dec
sub
dec
mov
andb
movsl
repnz
jno
data16
aas
fstsw
test
es
adc
int
popl
clc
lods
cld
clc
ror
bound
jg
mov
aam
icebp
fs
mov
sbb
push
cli
jbe
pusha
jne
stos
and
mov
add
fsts
dec
das
bound
repz
push
out
in
roll
jl
gs
ret
jl
rorl
add
lea
inc
decb
xchg
jb
ja
jp
fcompl
adc
lcall
pop
mov
jge
loop
loopne
jo
ret
xchg
jmp
loopne,pt
add
inc
scas
push
dec
or
cmpsb
imul
jbe
add
adc
sbb
dec
jbe
inc
pop
push
cs
out
lret
ret
jmp
mov
xor
out
jns
out
jne
and
jne
mov
ja
pop
stos
pop
or
mov
push
sbb
cmp
push
hlt
push
test
jge
sbb
clc
inc
mov
mov
and
dec
dec
daa
sbb
mov
push
shlb
test
or
add
adc
imulb
mov
mov
sar
imul
add
subl
imul
pushf
dec
int
jb
outsl
pop
jae
roll
fwait
leave
popf
out
iret
push
adc
daa
sbb
pop
dec
repnz
js
mov
jecxz
add
loop
inc
or
divl
dec
and
push
or
loopne
test
lcall
lods
xchg
pushf
bound
sub
add
mov
ss
out
in
outsl
and
in
push
popf
fucom
cmpsl
jmp
repz
mov
sub
adc
in
je
fs
cmp
fmuls
out
bnd
pop
bound
out
cmpl
xchg
sub
cmp
lods
lea
pop
jo
sbb
push
sub
add
daa
ds
dec
ds
adc
pop
dec
sbb
inc
jge
mov
pop
add
sub
sbb
jmp
cmp
adc
daa
xor
in
lea
sub
cmp
or
cmpsl
repnz
bound
out
xor
int
int3
jo
mov
sbb
loopne
fisubrs
xchg
and
sbb
xor
or
dec
jbe
sub
xchg
push
clc
jecxz
fsubl
xor
pop
jbe
push
mov
adc
and
cmp
std
dec
jecxz
scas
cmp
lock
lods
lcall
xor
or
ficoms
gs
xlat
dec
repz
daa
aam
mov
pop
shrb
das
lret
cs
add
mov
hlt
cmp
cltd
cmpsl
mov
xchg
inc
les
mov
add
std
sbb
mov
inc
mov
popa
repnz
daa
dec
rorb
add
xchg
push
adc
faddp
pause
leave
add
adc
in
dec
jg
add
loope
xchg
ds
jnp
test
stos
xchg
outsl
jmp
xchg
xor
sub
je
sbb
and
lret
test
pushf
xchg
daa
mov
jge
enter
cltd
push
inc
pop
mov
out
jl
ljmp
negl
push
enter
jo
aas
sahf
jecxz
in
sbb
push
dec
or
inc
mov
movsb
rorl
pop
sub
popa
dec
cmc
fisttpll
scas
hlt
filds
in
push
mul
pop
sbb
mov
jl
in
mov
mov
jno
mov
mov
cmc
inc
or
and
fdiv
xchg
lahf
jae
or
inc
addr16
cmp
aas
push
inc
aaa
sub
mov
mov
enter
mov
mov
fld
cli
mov
into
inc
inc
xchg
ret
push
mov
in
shll
rcrb
or
stos
int3
add
fnstenv
push
mov
js
repz
jle
sub
sub
pop
jmp
xor
push
and
push
pusha
pusha
adc
int
leave
sub
aas
add
push
js
inc
insl
mov
jne
push
cmp
std
push
fcoml
push
pop
int3
mov
cmp
dec
jns
dec
xor
test
stos
fsubl
add
mov
push
jge
pusha
fwait
and
mov
add
pusha
fldenv
pop
ret
lods
pop
push
sbb
xlat
mov
gs
sub
out
dec
inc
lds
sti
scas
xorb
xor
addb
mov
mov
sub
mov
adc
cmc
inc
in
filds
pop
popa
pop
mov
movsl
jno
xchg
mov
jge
mov
xchg
enter
sbb
sub
inc
std
jge
leave
sti
mov
rcr
xor
push
push
mov
mov
pop
je
rcrb
adc
mov
jns
or
xchg
pop
push
and
outsb
arpl
jo
test
xor
mov
mov
out
xorb
jno
add
and
pop
add
sbb
loopne
push
pop
stos
je
aaa
sub
xor
pop
mov
in
ret
in
jne
sbb
fdivrp
add
sbb
xor
inc
cmp
fldcw
fsubl
notl
pop
cld
pushf
xchg
jb
enter
pop
lods
pusha
push
dec
xchg
lret
jecxz
sbb
aaa
loop
repz
pop
adc
xor
mov
lock
jle
push
clc
mov
mov
js
xchg
and
add
xchg
push
int
pop
cmp
jmp
cmp
sub
test
jg
into
or
pop
push
in
jg
ljmp
out
shr
imul
jge
inc
dec
outsb
sub
bound
stc
sti
jecxz
sub
stos
sahf
dec
out
movsl
xchg
mov
stc
jmp
mull
je
daa
into
in
adc
dec
inc
inc
mov
test
rolb
mov
mov
adc
jl
stos
out
xchg
imul
sbb
je
sahf
or
cmp
mov
jne
adc
xor
jl
outsb
adc
repnz
repnz
jae
xchg
in
mov
mov
test
dec
jmp
fsubs
cwtl
adc
mov
cmp
xor
push
sahf
dec
dec
adc
sbb
imul
mov
cmp
sbb
sti
push
pop
inc
les
adc
les
insl
xchg
out
push
push
aaa
add
addr16
mov
jmp
lret
lock
inc
insl
pop
stc
jp
mov
cmp
jne
jns
push
sub
pusha
xchg
loopne
adc
or
clc
sbbl
fistpl
and
daa
sub
or
adcl
xchg
ss
icebp
mov
mov
sbb
sub
push
cmp
add
cld
dec
cmp
insl
loop
fbstp
jbe
mov
rcrl
scas
push
cmp
imul
inc
cmp
popf
or
or
aad
cmp
lock
xchg
xor
fdivrp
push
cld
jmp
push
mov
adc
loop
mull
or
jmp
adc
and
test
das
mov
pushf
mov
mov
or
push
dec
mov
popf
mov
jo
push
pushf
adc
sbb
sbb
cmp
xchg
stos
cmp
adc
and
je
sti
mov
inc
iret
leave
jns
sub
idivl
ret
dec
jmp
cli
cmp
rorl
jecxz
movsb
test
or
adc
mov
dec
dec
stos
mov
dec
cmpsb
shl
or
sbb
fcmovnu
mov
nop
cmp
ret
lods
in
aam
js
jne
mov
mov
fsubr
or
mov
cwtl
clc
lret
icebp
cmpb
push
xor
xlat
test
int
jl
orl
mov
add
lds
jmp
dec
push
fwait
adc
loopne
bound
xchg
fisubrl
push
shlb
mov
xlat
pusha
sahf
cs
jnp
mov
fsubs
bound
push
jmp
sub
push
and
mov
sub
cmc
cmp
or
jmp
cmp
fldl
dec
dec
xchg
out
test
icebp
xor
cli
lds
pusha
ljmp
cmp
inc
fcoml
test
sbb
pop
and
es
bound
push
or
aam
fcos
push
mov
sarb
xchg
pop
rorb
icebp
sbb
push
dec
out
sarl
shlb
es
cld
jmp
inc
fsubrs
dec
jg
adc
ja
or
lret
lea
test
insl
cmc
pop
fmull
jg
xor
orb
jno
into
sub
xchg
xchg
and
mov
jg
repz
shlb
jo
sub
std
loop
jno
cltd
dec
nop
ret
andl
mov
loopne
push
loop
mov
popa
inc
lds
jns
fsubl
push
testb
sub
imul
pop
popf
fldcw
scas
stos
and
shlb
filds
daa
adc
fnsave
idivb
ret
out
ljmp
mov
insb
mov
adc
cmpsl
mov
jl
inc
xchg
adc
sbb
or
jo
ds
enter
fidivrl
insl
pop
lahf
push
xchg
lret
imul
jecxz
sbb
clc
packsswb
jb
loop
daa
hlt
mov
mov
inc
sbb
aad
jo
push
sbb
jae
push
mov
fimull
add
iret
and
dec
fsts
dec
outsl
lock
dec
xchg
mov
sub
mov
into
add
std
jno
fdiv
mov
pop
hlt
loop
pushf
call
sbb
popa
rep
mov
dec
xorl
fbstp
and
rcrl
push
mov
xchg
mov
flds
jno
xchg
jp
jnp
xlat
hlt
cmp
and
and
mov
cs
std
pop
jg
push
sahf
jg
adc
or
lods
mov
sub
test
sbb
mov
mov
aad
nop
sbb
and
jge
inc
lret
imul
clc
sti
rcrb
lods
std
mov
pop
sub
out
jne
mov
fldenv
in
mov
push
xorb
pop
test
push
sahf
xchg
xchg
lods
inc
call
cwtl
fisttps
inc
dec
out
xchg
cwtl
pop
movsl
push
bound
inc
jns
mov
in
popf
sbb
test
inc
mov
scas
xchg
sti
into
xchg
push
push
add
cmp
cld
outsb
cwtl
js
mov
shlb
cmpb
mov
push
pop
and
lods
sub
mov
mov
and
mov
repnz
dec
jns
rcll
rcr
js
gs
aam
xchg
sbb
dec
addr16
jb
fnstcw
test
xor
adc
and
loopne
repz
xchg
ret
dec
xchg
inc
call
xor
das
out
lret
xor
addr16
adc
sti
ret
push
jno
push
xchg
stc
out
and
add
cmp
push
mov
push
out
arpl
mov
fisttpll
dec
filds
call
and
push
cmpsl
adc
and
mov
mov
add
aad
jmp
mov
nop
mov
rorl
jmp
in
push
cmp
test
xchg
add
xchg
nop
ljmp
jbe
cmpsb
mov
mov
dec
pop
jl
inc
enter
add
and
out
jno
faddl
aam
pop
cltd
ret
jp
xchg
mov
leave
pop
or
loope
pop
push
je
and
test
pop
mov
std
fadds
xchg
xchg
jp
nop
enter
sysexit
data16
push
xorl
push
add
stc
aaa
mov
pop
dec
push
pop
cmp
push
xchg
or
aad
adc
pop
js
sbb
mov
je,pt
xlat
fisubrs
ja
sbb
std
stos
xor
xchg
mov
scas
inc
sti
cmc
mov
or
rclb
sub
xchg
add
sub
cmp
mov
or
in
xchg
das
cld
sti
push
xor
jmp
jmp
movl
sbb
movsb
jne
or
dec
cli
scas
jne
xchg
push
adc
enter
imul
fdivrl
addr16
andl
dec
lods
mov
and
lods
push
imull
xor
loope
and
cmp
jecxz
jecxz
jnp
enter
mov
fsubrp
cmc
mov
lcall
and
or
adc
cmpsl
adc
add
mov
data16
jns
adc
gs
cmp
fisubrs
imul
mov
jge
pusha
mov
push
popa
aas
popa
push
xor
stc
cltd
fcomip
inc
test
inc
xchg
dec
jns
out
jno
jae
mov
or
xlat
pop
add
sub
stc
fiaddl
enter
add
and
leave
mov
push
mov
les
sub
add
xchg
repnz
int3
push
or
ja
mov
lea
push
mov
test
notl
int
mov
pop
pop
int
fstpt
mov
sub
sub
mov
add
sbb
insl
pushl
not
adc
outsb
fildl
sub
andb
ljmp
int
xchg
leave
inc
cmc
out
sbb
mov
jne
adc
dec
pushf
push
gs
imul
jge
testb
stc
pop
fldcw
add
add
mov
push
or
loope
sub
mov
mov
adcb
sbb
shll
xor
jbe
xor
inc
and
pop
push
adc
popa
mov
shl
les
mov
pop
lcall
jne
push
and
mov
pop
js
dec
pop
sar
mov
lcall
mov
pop
jle
adc
pop
adc
gs
and
push
je
sbb
push
add
pop
stc
repnz
cli
xor
movsl
jl
jge
ljmp
push
push
push
and
dec
cmp
lcall
jl
std
cmp
mov
addl
in
addl
inc
addr16
call
in
js
inc
movzwl
jb
aaa
push
test
popa
fld
pop
xchg
mov
popw
sub
les
enter
and
push
lds
dec
mov
sahf
xchg
pop
repnz
ja
test
dec
pop
pop
ret
enter
mov
inc
mov
jo
test
and
adc
xchg
insl
pushf
mov
mov
jp
mov
decb
push
xchg
faddp
ret
mov
fildl
xlat
insl
push
ds
xchg
jecxz
xlat
sub
sub
nop
mov
lock
bound
pop
jle
pop
shrb
sbb
mov
inc
inc
sbb
dec
mov
pusha
fstpt
mov
add
es
add
mov
mov
push
outsl
scas
loop
push
in
mov
lret
jp
or
pop
mov
add
movsl
fcoms
sub
inc
imul
sahf
pop
sub
fwait
pop
lock
cmc
pop
sbb
jbe
adc
pop
out
push
cmp
add
cmp
popf
xor
lret
xor
and
cwtl
movsb
xchg
fwait
sub
lock
push
adc
jae
push
mov
mov
iret
popf
sub
jge
test
sbb
or
dec
insb
cmpsl
fcompl
push
out
test
js
outsb
lods
rcl
sub
pop
scas
adc
xor
xchg
pop
jae
mov
lea
frstor
insb
pop
out
dec
loope
push
aas
sub
cmp
ss
push
xor
adc
inc
jmp
loop
fmuls
xchg
outsb
dec
jbe
xchg
arpl
xor
adc
mov
mov
jl
xchg
mov
push
pop
jns
pop
cmc
xchg
jle
loope
mov
jo
jae
notl
in
mov
inc
pop
test
ret
pushf
ds
ja
lret
inc
int
pop
cmp
push
dec
dec
insb
insb
add
ret
sbb
lcall
jp
xchg
hlt
lcall
cmp
mov
enter
pop
xor
cmp
out
cld
rorb
xor
cmpsl
xor
lock
shl
out
pop
pop
stc
iret
dec
mov
push
ds
out
outsb
arpl
xchg
cltd
pushf
pop
adc
cmpsb
es
stos
fildll
jmp
xchg
xor
push
addr16
sbb
movsl
mov
pop
scas
icebp
fwait
jmp
or
sti
jl
ficompl
dec
leave
inc
popa
jb
in
xlat
dec
in
mov
loopne
push
outsb
stc
or
and
xchg
or
push
fsubl
es
dec
movsl
sahf
stos
and
add
sbb
shl
popa
xchg
xor
push
xor
cmc
xorb
sub
and
inc
pop
sti
add
push
or
mov
leave
imul
int
pop
cmp
pop
popf
test
adc
scas
xchg
stos
aas
cmp
js
mov
xorl
jg
dec
repz
clc
sub
incb
and
inc
imul
dec
lretw
std
or
pop
cmc
inc
mov
jmp
pop
nop
clc
cmp
rcr
fcompl
mov
sub
cmp
and
push
out
mov
fmul
jnp
scas
loopne
jp
mov
imul
lds
or
je
adc
or
lret
add
loopne
cmc
popf
inc
xchg
sbb
xchg
cmp
inc
or
add
scas
jns
stc
sbb
dec
or
sub
and
imull
xchg
cmpsl
or
nop
fiaddl
sub
cmpsl
dec
dec
xor
adc
xchg
pop
mov
loope
ja
jnp
lock
pop
pop
jnp
clc
jg
xchg
jecxz
or
rclb
test
es
movsb
gs
dec
fistps
daa
mov
mov
ljmp
adc
fidivl
aaa
inc
scas
arpl
sub
out
inc
mov
scas
aad
xor
mov
test
faddl
stc
ret
daa
pop
outsb
sbb
loope
ds
fs
cld
jb
inc
dec
push
int3
cmpb
je
and
mov
int3
js
repz
lret
jg
loop
xor
fdivs
lock
mov
imul
in
stos
ret
outsb
loop
movsl
sti
enter
add
or
notl
stos
and
dec
mov
ret
sbb
or
and
out
and
les
fcoms
ds
jmp
xchg
clc
iret
pusha
movsb
mov
out
pusha
sbb
dec
add
mov
dec
inc
pop
sbb
je
pop
mov
jle
jge
stos
rcl
adc
push
aam
or
sub
xor
or
jp
shlb
sub
lds
mov
bnd
cmp
popa
cmp
push
int
jle
push
aad
adc
xorl
or
scas
mov
hlt
mov
testl
jle
dec
ss
jmp
push
insb
xor
sbb
imul
jecxz
fisubrs
mov
dec
jbe
mov
ljmp
dec
ret
mov
aad
movsl
loope
in
sahf
cmp
mov
ret
js
out
cli
push
mov
jge
xchg
inc
addr16
adc
inc
jo
in
fisttpl
je
movsl
into
pop
cmp
add
mov
dec
xchg
movsb
insl
xor
in
repnz
mov
push
out
jmp
bound
insb
out
mov
dec
call
cltd
jle
push
arpl
fsubl
lea
movsl
cwtl
test
stos
rolb
stc
fisttpll
aam
jmp
lods
pop
clc
shl
or
test
jmp
mov
data16
jg
sub
aas
push
mov
fcoml
jnp
xor
sub
xchg
sub
dec
imul
or
fs
pop
in
mov
test
sbb
lcall
sbb
adc
into
mov
lret
loope
xchg
jno
xchg
mov
or
fsts
mov
xchg
sub
mov
int3
sub
mov
pop
subb
loop
mov
stos
andb
clc
scas
stos
rorb
mov
mov
xchg
gs
mov
xchg
lea
outsb
aam
sti
imul
inc
xchg
pop
inc
jp
mov
addb
icebp
xchg
xor
shlb
sub
push
stos
je
or
add
loopne
push
sub
mov
in
orb
or
push
andb
andl
dec
pop
xchg
mov
insb
pop
insb
xor
and
push
dec
inc
mov
ret
add
xor
mov
push
mov
fxch
and
xchg
stc
ret
imul
outsb
lahf
sbb
sti
aaa
dec
cmp
inc
xor
xchg
adc
and
mov
or
lods
pop
into
les
outsb
in
xchg
xchg
movsb
negb
dec
adc
lea
push
fsubp
mov
jo
loopne
ljmp
and
pop
data16
xchg
xchg
insb
jp
rolb
push
mov
sub
or
fbld
push
sbb
fs
sbb
je
mov
ret
in
mov
dec
adc
push
xchg
out
test
hlt
ror
inc
xchg
dec
ljmp
jecxz
lock
lea
mov
xchg
pop
push
clc
lock
das
sbb
mov
in
in
xor
adc
or
enter
xchg
imul
jo
pushf
cltd
jne
int3
cli
shlb
jo
popa
out
xchg
ljmp
jmp
lods
std
rcrb
in
fildl
or
adc
xor
repz
loope
or
sbb
cli
sbb
inc
loope
iret
xor
cmp
or
fildl
cmp
leave
jmp
in
and
push
inc
and
xor
lods
insl
ljmp
jmp
pushaw
outsb
aam
dec
xor
fsubrl
stc
mov
addr16
cmp
bound
movsb
lock
mov
in
jmp
jb
add
xchg
mov
or
insb
gs
loope
jnp
push
xor
les
push
and
rep
mov
cmp
ss
cwtl
mov
mov
dec
nop
mov
ret
sub
jl
nop
mov
add
adc
sub
repnz
rorb
mov
jae
jne
mov
xor
pushf
outsl
enter
pushf
lcall
mov
daa
ffree
mov
call
push
sbb
stos
fldt
mov
push
lcall
mov
fdivrl
pushf
add
and
dec
js
dec
jge
insb
sti
mov
clc
pushf
outsl
push
xor
adc
or
xor
scas
xchg
dec
les
jae
inc
shl
nop
and
cmp
mov
dec
rorl
lea
xchg
jle
sbb
push
push
mov
scas
jmp
sbb
dec
inc
xchg
enter
sbb
in
cld
dec
dec
jno
mov
test
in
imul
cmp
cmp
mov
mov
or
rclb
and
lock
lcall
mov
xor
mov
mov
shrl
cmpb
mov
popf
push
push
andb
scas
add
fiaddl
inc
mov
int3
jecxz
xorb
movsb
lret
xor
or
push
mov
test
mov
xchg
inc
out
frstor
inc
push
int3
push
sbb
repz
push
stc
dec
mov
and
or
sbb
leave
push
ds
shl
jns
je
ficomps
sbb
push
clc
mov
lahf
rorl
push
mov
inc
mov
pushf
jae
xchg
pop
sub
or
jl
pop
sub
xchg
mov
lock
pop
popa
xchg
sbb
je
in
cmp
mov
and
int3
adc
xchg
fnsave
dec
adc
fldcw
inc
insl
inc
sbb
push
lods
sbb
jp
cld
adc
jl
out
popl
mov
mov
xchg
ret
aad
pop
cwtl
push
adc
push
inc
xlat
jecxz
pop
jb
xorl
test
fucomp
or
outsl
ljmp
in
inc
xor
mov
jne
dec
in
pop
push
dec
lahf
aaa
clc
movsb
test
faddl
cs
inc
dec
pusha
dec
enter
aaa
and
cmp
xchg
icebp
cmpsl
movsb
mov
add
inc
nop
or
xor
and
mov
ss
push
xchg
popa
push
out
and
lahf
cmp
popa
inc
movsl
fwait
arpl
dec
push
imul
int3
call
add
lret
xchg
push
push
jle
push
sub
pop
in
popa
out
add
enter
cmpsb
push
mov
sbb
or
in
sbb
call
mov
push
in
xor
enter
idiv
jecxz
jbe
shrl
je
pop
divb
sti
push
mov
mov
pop
mov
cmp
push
loop
xchg
jne
lock
aam
lret
xchg
popa
fwait
scas
xchg
inc
pop
push
xorb
jmp
and
aam
pushf
leave
pop
jns
shll
adc
iret
jmp
jb
add
cld
adc
adc
add
xchg
loope
insl
push
mov
xor
out
inc
popa
std
push
dec
inc
mov
fimuls
cmpsl
xor
icebp
add
aas
inc
jb
outsb
bnd
into
ds
mov
or
mov
push
fs
out
outsb
inc
or
scas
pushf
inc
cs
and
jle
in
test
in
shrl
repz
scas
daa
sub
jnp
insl
int3
adc
and
add
lea
push
repnz
into
out
scas
adc
push
fwait
ret
cmp
lods
mov
adc
xor
incl
cmp
jg
lock
iret
dec
int3
fisubl
cli
mov
xlat
cmpb
and
mov
testl
pop
sbb
fmuls
or
punpckldq
mov
test
mov
mov
sarb
aam
cmc
lret
and
jb
cmpsl
xchg
jg
rcrl
divl
push
stos
lcall
dec
mov
xor
lods
cmpsl
or
push
mov
aam
imulb
std
mov
icebp
jl
sub
push
je
push
mov
iret
jbe
lahf
fdivs
mov
lea
push
jl
or
lock
std
cmp
pop
flds
jg
in
lret
test
incb
or
into
jmp
push
addr16
arpl
mov
adc
xor
js
push
shrl
push
xor
stc
jmp
in
pop
push
dec
test
rclb
sub
and
shlb
jne
push
in
cli
adc
dec
imul
aam
or
xchg
adc
cltd
fstpt
loop
push
mov
lods
mov
mov
ja
ret
repz
or
inc
sahf
mov
loopne
loopne
mov
loope
or
and
popa
push
mov
jl
mov
ror
je
rol
mov
enter
shlb
shlb
xchg
sub
and
mov
or
dec
cmp
es
cli
pop
mov
cs
sub
testl
into
and
jns
orb
fstl
pop
cmpb
inc
sub
stos
orl
movsb
jb
cli
lcall
or
adc
jo
or
fwait
mov
and
arpl
ret
lock
lods
loope
mov
les
xchg
xchg
movl
inc
add
pop
mov
adc
inc
xchg
rcrb
lret
xchg
into
and
test
cs
test
xlat
and
xchg
push
push
and
fwait
sarl
push
shl
testb
neg
mov
incl
pop
loope
fstpt
xchg
je
or
lds
ljmp
dec
aad
addr16
cmc
popf
push
mov
cmp
cmp
gs
xor
pop
jp
cmc
mov
fidivl
adc
or
jns
dec
addb
ds
ret
pop
sbb
add
inc
push
mov
sbb
jecxz
push
scas
mov
imul
pop
inc
mov
jo
mov
scas
lcall
xchg
sbb
fcompl
xchg
out
sbb
or
sbb
rcrb
push
lds
mov
rcrl
call
fisttpll
pop
cld
je
xchg
sub
push
jmp
into
shll
mov
jbe
sti
mull
mov
sar
xor
pushw
fcmovnu
xchg
aam
push
daa
jbe
jmp
mov
pusha
mov
cli
jp
fsts
decl
mov
push
push
ficompl
and
cs
dec
inc
push
outsl
xchg
hlt
shll
adc
loope
adc
push
leave
xor
stos
int
add
and
inc
jg
or
push
mov
jae
pop
scas
in
fadd
xchg
test
xor
push
and
xchg
mov
mov
mov
cs
sub
dec
or
sub
mov
pushf
pop
xor
pop
push
cmp
sbb
fnstsw
cld
scas
loope
gs
inc
mov
add
and
aas
cmp
xchg
or
adc
or
lret
mov
mov
add
ss
cmpsb
lret
push
ret
sbb
inc
shld
mov
lret
pop
inc
sub
mov
sbb
cmpsl
imul
ds
mov
cmpsl
lock
fdivs
test
xor
sub
or
mov
fisttpll
xor
filds
mov
cmp
popf
cli
idivb
in
or
out
mov
dec
mov
repz
sbbb
nop
in
sbb
clc
leave
pop
mov
cs
popf
xor
push
hlt
sbb
pop
jp
loop
repnz
or
mov
aaa
in
mov
cmp
roll
loopne
pushf
scas
add
ja
mov
sub
jno
mov
cmp
cmp
push
mov
mov
xchg
pop
mov
arpl
pop
loop
cld
shlb
and
out
fs
stos
call
cltd
jl
add
jg
inc
jbe
ret
cmp
fcomp
test
sarb
shrb
xchg
add
cmp
mov
int3
in
pop
ret
cmpsb
sub
cmp
jno
push
mov
nop
inc
aam
out
sbb
jp
sbb
hlt
jne
jl
test
pop
mov
mov
dec
and
jl
mov
dec
add
lahf
add
es
pop
or
add
movsl
adc
movsb
enter
adc
aaa
sbb
lahf
push
rol
pop
inc
aaa
push
movsl
sub
mov
pop
out
in
push
or
add
inc
cmp
xchg
adcb
jo
push
fwait
movsl
movsb
push
sub
loope
outsl
sub
mov
idivb
sub
lret
pop
sbb
and
sub
sbbb
lds
lods
mov
mov
xchg
mov
mov
test
jno
and
cmp
push
or
xchg
aaa
mov
or
push
or
out
loope
sub
lods
cmp
jecxz
dec
sub
lock
out
xchg
cmpsl
jl
sub
outsl
fdivrs
pop
shl
mov
out
xchg
inc
lahf
sbbb
loopne
jne
mov
loop
mov
cs
rcrb
lods
cmc
dec
add
dec
test
ja
hlt
sarb
mov
xchg
int
cltd
fisttps
outsb
sub
enter
and
and
lret
divb
js
sub
jecxz
popf
mov
das
stos
push
je
lahf
fldt
loope
rorl
mov
xchg
loop
push
mov
test
push
sub
out
fwait
cmp
jmp
add
je
push
and
lahf
loopne
and
stc
loope,pn
outsb
jb
aas
aaa
mov
push
call
rclb
mov
sbb
xor
int
inc
stc
and
xor
mov
cld
test
negb
sub
fdivrp
xor
inc
sub
hlt
and
imul
pop
mov
push
lcall
xor
inc
sub
fsubs
cmp
inc
enter
lcall
push
mov
dec
lods
sub
data16
sub
fistpl
aaa
mov
mov
xor
mov
jbe
push
sub
xchg
cmp
mov
cwtl
les
push
jne
jge
inc
or
outsb
ss
mov
push
sti
sbbb
scas
pop
fisttps
in
pop
pop
jnp
cmp
cmp
fcom
pop
xchg
and
inc
mov
cmp
test
lret
dec
sbb
loope
xchg
pop
leave
cmpsb
popf
xor
loope
ja
mov
fistpll
xor
push
xor
mov
cmp
arpl
mov
aaa
lahf
push
enter
push
cmp
imul
daa
in
loope
xchg
push
fsubr
outsb
cmp
pop
inc
cmpl
lret
or
int
xchg
iret
aas
das
leave
fs
int3
adc
and
push
sahf
insl
xchg
popl
push
jnp
mov
das
push
cmpsl
or
in
xlat
cmpsb
jns
sub
test
repnz
fcoml
pushf
popa
inc
xor
in
inc
push
xchg
push
or
shlb
jl
lods
sub
mov
xchg
cmp
loope
aad
shlb
inc
daa
cltd
gs
pushf
mov
ret
arpl
jno
or
jnp
fsqrt
loop
adc
xor
fwait
cmp
pop
and
gs
cmpsb
fdivp
lea
pop
add
daa
ja
and
lock
or
adc
push
mov
push
imul
ret
aas
push
shll
mov
and
clc
mov
pop
arpl
sbb
insb
or
out
stos
mov
lea
bound
mov
mov
outsl
jp
out
xor
jae
out
fdivs
cmp
and
clc
enter
les
mov
adc
addl
inc
mov
mov
shl
xchg
or
dec
push
xor
jmp
adc
mov
sbb
ret
in
fstl
sbb
add
sbb
scas
inc
push
ret
cmp
rolb
sub
repnz
out
mov
insl
lahf
and
jg
pop
mov
outsl
stc
xor
lds
or
pushf
sbb
xchg
push
mov
cmp
arpl
movsl
jae
ret
dec
push
lods
sub
fmuls
dec
addr16
add
jg
mov
repnz
loop
lahf
imul
pop
in
cmp
inc
mov
push
cld
add
test
rcr
ret
lds
data16
aam
rcrl
insl
roll
adc
push
test
xchg
cmp
sbb
sbb
addb
push
pop
popa
or
add
pop
jno
jle
adc
add
mov
or
test
clc
into
mov
nop
es
dec
lods
sahf
test
shll
cltd
fnstsw
cmp
stc
xor
sbb
and
cmpsl
fsubp
cmp
jbe
add
jo
sbb
fdivrs
sub
mov
insb
inc
fisttpll
xchg
push
jo
popa
in
fwait
inc
adc
adc
sbb
add
fisubl
scas
loope,pn
nop
xor
jb
or
bnd
xor
pushf
loop
cmp
enter
add
frstor
dec
pop
push
and
loop
or
sarb
flds
add
push
out
push
cmp
xlat
fidivrs
scas
cmp
js
xorl
or
push
pusha
push
sbbl
mov
sub
add
iret
mov
aam
fwait
push
pushf
jmp
inc
mov
mov
fucomp
in
in
cmp
dec
adcb
mov
stos
inc
or
inc
add
pop
push
mov
adc
ja
mov
cwtl
and
xor
jmp
enter
adc
jo
sub
xlat
outsl
ss
cmp
pop
in
pop
lcall
or
dec
and
test
shrb
insl
fimuls
pop
loopne
sbb
mov
mov
jb
repnz
pop
sbb
adc
dec
mov
push
sbb
xchg
icebp
lds
add
xchg
adcl
ljmp
cmp
test
mov
jmp
sbb
cwtl
and
popa
mov
add
mov
mov
adc
mov
pop
out
scas
leave
daa
movsb
adc
fstpt
sbbb
adc
lods
push
idivb
test
add
pop
fsubp
xor
addr16
insl
sbb
popf
sub
xor
repnz
xor
push
cmpsl
shlb
cmp
xor
loopne
pop
xor
lock
sub
pop
in
or
pop
out
mov
popa
out
mov
and
push
hlt
loopne
and
nop
xor
jmp
push
jo
mov
mov
sbb
push
cmp
sub
xor
sub
or
aas
sub
nopl
addr16
insl
xchg
adc
push
aas
pop
mov
push
stos
clc
pop
fnstenv
xchg
jne
imul
lret
mov
adcl
ret
inc
pop
mov
sti
shr
mov
mov
stos
or
je
pop
in
fwait
imull
rcll
rcl
and
mov
pop
inc
jge
sub
adc
mov
or
cmc
scas
mov
fists
lcall
cs
popf
pop
fs
sbb
mov
push
hlt
fldenv
dec
mov
repnz
pop
sbb
test
test
sub
xchg
dec
jmp
in
inc
loop
mov
lds
mov
pop
xor
sbb
cs
cltd
pop
mov
ss
data16
ret
fwait
sarb
add
cltd
cwtl
imul
jo
je
xlat
adc
xchg
lods
hlt
inc
out
xchg
pop
test
pusha
pop
pop
xor
les
arpl
cwtl
call
mov
mov
xchg
aam
arpl
je
fistps
mov
dec
cwtl
mov
cmp
arpl
jmp
stos
cltd
and
dec
in
cs
sbb
push
popa
icebp
js
movsl
jne
ljmp
or
mov
movsl
sbb
int
jns
jae
push
xchg
sub
ret
sti
in
fs
jg
data16
mov
int
insb
push
lods
lret
adc
xor
sub
cmp
pop
ljmp
addr16
dec
imul
seta
xchg
push
fisttpl
inc
pop
and
sbb
adc
ds
clc
jne
jno
lods
loopne
jo
adc
leave
outsl
stos
mov
pop
mov
rcrb
push
movsl
sub
dec
jle
mov
enter
jne
push
sbb
adc
or
je
test
push
std
cmp
in
xchg
add
pop
cmc
rcr
cli
mov
lret
es
and
adc
xchg
ret
cmp
imul
loop
push
mov
das
fsubs
outsb
jne
test
lcall
inc
xchg
lret
lcall
adc
loope
adc
sbb
dec
jmp
in
or
pusha
repz
daa
pushf
add
arpl
ds
out
mov
sbb
or
ret
filds
sub
xchg
push
or
iret
jle
xchg
pop
push
aas
lcall
lcall
aad
mov
mov
loopne
pop
mov
test
xor
shrl
pop
sti
in
jge
jne
sbb
in
cli
in
xchg
sub
popa
jl
repnz
mov
imul
dec
cmc
out
fs
adc
iret
or
mov
pusha
addr16
loope
jmp
int
push
pop
inc
aaa
pop
and
cmp
ja
pop
mov
jb
push
jo
push
cmp
inc
insb
xchg
lods
adc
aaa
adc
gs
cld
mov
xchg
xchg
and
add
scas
mov
aad
mov
adc
ficoml
mov
mov
push
stos
popf
cli
sub
dec
xor
inc
fisttpl
xchg
xlat
pop
sbb
sbb
out
scas
sarb
insb
or
or
fisubs
cmp
stos
mov
cmp
push
add
dec
je
lock
faddp
flds
sti
jge
pop
xor
add
jnp
jae
mov
je
pop
sub
sbb
jbe
ljmp
and
cld
pop
or
xor
dec
inc
sarb
insb
and
aad
mov
jbe
jge
mov
sub
imul
lods
mov
ret
faddl
mov
jg
dec
dec
xchg
lds
dec
xchg
js
push
mov
xchg
and
mov
subb
test
fstpl
stos
stos
xchg
or
mov
ss
ljmp
stos
pop
add
lret
insl
pop
or
out
pushf
adcb
jp
nop
dec
pop
cmp
xor
int
fildll
sbb
sbb
add
out
and
pop
adc
mov
add
mov
aam
test
dec
or
sub
add
loop
out
jno
cltd
sub
add
jp
pop
jb
and
xor
sbb
test
ss
clc
fcmovnbe
int3
stc
mov
push
xlat
cltd
in
dec
add
and
ja,pt
sbb
adc
xchg
sub
xchg
push
sub
xchg
cmp
jge
int3
shl
sbb
xchg
les
adc
dec
dec
dec
cmpsl
andb
cmp
in
movl
lods
cmp
dec
out
adc
or
or
jl
repnz
fsubp
push
push
adc
sbb
mov
lea
xlat
sub
mov
daa
and
cmp
aas
aaa
jno
mov
and
jo
js
sub
ja
xchg
push
mov
loopne
adc
cmpsl
mov
idiv
cmpsl
lret
mov
mov
lcall
fadd
and
lea
or
push
lea
out
inc
inc
or
add
shrb
pop
cmp
and
pop
xor
mov
ss
and
rorb
enter
mov
movsl
xchg
psrlq
addr16
push
xchg
lods
rcrl
sti
popa
ret
cmc
and
push
push
cmc
mov
insl
aad
shll
jmp
pop
xor
gs
je
jg
das
cmp
add
xchg
xor
mov
popf
lret
add
rol
out
cmp
shl
popf
outsb
inc
aam
sbb
js
sub
sahf
pop
mov
insb
and
ret
xor
aam
add
sub
ret
mov
ja
mov
mov
ja
or
lock
cmp
data16
xor
pop
das
mov
jno
inc
int3
mov
push
out
add
jge
ds
or
test
out
out
or
lret
mov
rcll
fs
add
hlt
ret
pop
xchg
clc
insb
aas
jb
and
out
jns
lahf
inc
push
xchg
jmp
sub
push
xor
arpl
ljmp
mov
fisttpl
sahf
xlat
mov
jnp
push
add
das
jae
scas
adc
jg
cwtl
push
leave
inc
lods
ljmp
cli
cmp
fsubr
pusha
xchg
aad
push
aaa
cmc
or
je
test
or
pop
mov
push
cmpsl
fisttpl
jne
dec
in
pop
and
gs
into
lcall
dec
inc
cmp
bts
adc
not
dec
icebp
mov
rcl
xchg
dec
jb
outsl
xchg
xchg
rcl
sub
orl
mov
and
xlat
inc
clc
dec
lods
mulb
int3
cmpsl
in
sbb
daa
sbb
sbb
push
inc
out
and
inc
pop
imul
enter
mov
dec
mov
popf
stos
sbb
leave
push
subl
mov
test
push
out
sti
jo
hlt
out
dec
xchg
xchg
mov
fsubl
in
mov
cmpsb
push
xor
hlt
mov
mov
jo
jg
mov
cmp
mov
push
arpl
fisubl
mov
out
mov
mov
fmuls
xchg
in
cmp
pop
scas
test
mov
mov
js
push
fwait
addb
or
notl
cmpb
cmpsb
scas
bound
dec
jae
aaa
popf
xchg
sbbb
push
xor
adc
in
jo
push
and
xchg
push
xchg
sti
dec
out
bound
add
std
lret
cmpb
pop
addb
leave
in
in
mov
jne
sub
push
jo
fimull
jns
loop
enter
push
inc
cmp
pop
jge
inc
dec
dec
clc
aad
mov
iret
orl
cmpsl
xchg
push
das
add
push
popa
mov
mov
movsl
dec
pop
and
inc
insb
fs
pushf
loopew
mov
mov
pop
outsl
or
bound
inc
cli
cs
adc
lds
ret
jle
adc
jecxz
lea
pusha
ret
and
mov
outsb
test
loope
shrb
test
adc
mov
xor
data16
xor
nop
push
out
ret
fwait
std
fs
or
cmp
scas
das
xchg
add
pop
les
jnp
push
nop
and
insb
loope
sbb
cs
outsl
in
adc
pop
xorb
inc
xchg
mov
mov
or
insb
out
mov
loope
call
aam
sti
mov
mov
push
jno
cmp
test
mov
add
flds
out
push
aad
jnp
mov
sti
stc
push
pop
int3
lock
daa
pop
lods
ja
mov
cmc
lcall
flds
push
jno
inc
jnp
pop
xor
mov
mov
loop
lret
repnz
jle
xchg
inc
add
mov
jbe
lahf
jg
repz
mov
sbb
push
and
mov
push
bnd
cs
mov
insb
push
mov
push
lods
mov
jle
mov
and
and
push
lods
xor
push
xor
in
dec
fmul
loope
test
sub
xor
and
stos
pop
repnz
mov
add
adc
xchg
adc
sbb
insb
xor
pop
aaa
pop
fwait
testb
push
push
subb
mov
xchg
bound
push
xchg
test
rorb
xchg
out
xor
into
test
add
insb
out
sub
cli
lcall
and
fdivs
mov
dec
test
and
mov
sbb
pushf
mov
ja
hlt
jnp
push
push
call
xlat
loopne
imul
test
daa
movsb
aam
xor
add
orb
pop
out
addr16
in
mov
xor
sub
add
rcrl
fstpt
filds
mov
outsl
inc
jae
sub
sbb
aas
mov
daa
test
ret
imul
pushf
mov
mov
out
pop
jmp
divb
mov
mov
cmpsl
mov
pop
int
or
jg
sbb
sub
icebp
jl
sbb
push
jns
outsl
add
int
mov
popa
les
hlt
je
dec
fistps
jl
cld
pop
mov
lods
xor
or
aaa
mov
pop
nop
bound
es
adc
lods
add
or
ja
xlat
mov
outsl
xchg
aam
std
aas
daa
subb
xchg
dec
add
fdivr
mov
in
xchg
subb
or
mov
in
cli
adc
scas
out
fcomps
div
xchg
mov
jp
xor
aad
and
enter
xchg
sbb
pop
jno
sarl
mov
gs
cmp
cwtl
mov
jecxz
in
or
jnp
sub
sub
lock
push
mov
pusha
jbe
jno
mov
fstps
adc
sbb
mov
and
xchg
jmp
fidivrl
push
inc
insb
leave
fisttps
and
mov
pop
adc
scas
cmp
mov
icebp
scas
sub
xchg
pop
jle
in
gs
ss
es
popa
fistl
in
and
jle
push
xchg
fldt
dec
addr16
pop
ss
cmc
xchg
subl
mov
sub
enter
push
cmp
adc
adc
jns
pop
xchg
imul
mov
jmp
pop
pop
pop
insl
push
or
mov
pop
adc
jmp
xorl
dec
outsl
loope
les
loopne
jno
sti
adc
pop
cli
jne
mov
enter
xlat
js
dec
gs
mov
pop
inc
sbb
popf
mov
mov
push
or
mov
sbb
jle
inc
pop
in
movsb
leave
adc
pop
jb
out
loopne
mov
scas
popa
and
or
inc
aam
push
add
mov
in
cmp
and
mov
shlb
mov
leave
and
sti
aas
push
bound
mov
sti
out
mov
inc
mov
cmp
jmp
das
cmp
test
es
jbe
arpl
add
mov
outsb
inc
mov
cmp
dec
stc
int
sub
push
in
stos
jecxz
push
addr16
sarb
add
test
jbe
push
rcrl
mov
mov
out
out
hlt
sbb
es
lock
adc
fidivrl
jg
or
lret
xor
jno
ficompl
sub
or
mov
cmp
mov
cwtl
cltd
xor
call
fstl
jns
sbb
mov
jge
dec
mov
fildll
rolb
and
add
mov
test
mov
mov
pusha
test
fmul
sub
fs
cmp
dec
pop
and
mov
mov
pop
push
into
push
mov
or
test
mov
sbb
jge
xlat
scas
mov
mov
mov
add
cwtl
mov
daa
mov
loopne
and
popa
push
test
add
fs
cmp
dec
insl
inc
adc
ljmp
mov
pop
pop
sub
or
out
push
ds
xor
inc
lahf
push
adc
testl
ljmp
js
pop
incl
push
xor
push
jne
pushf
lcall
stos
xlat
ja
fs
pop
pop
repnz
fs
icebp
xor
in
mov
cmp
and
hlt
jo
lds
sub
mov
mov
repnz
mov
and
imul
daa
cs
pop
sub
mov
into
scas
sub
test
pusha
fwait
jmp
xchg
stc
sbb
outsb
pop
pop
inc
cmp
add
inc
cmc
or
lods
lods
outsl
mov
xchg
stc
mov
repnz
in
in
popa
clc
insl
push
jns
repnz
in
sbb
jns
dec
insb
fwait
cmpsb
sub
aad
mov
cs
jp
lahf
pop
test
test
push
dec
fwait
add
push
int
aam
ss
lahf
ja
repz
dec
pop
in
jle
fists
push
stc
sub
adc
xchg
pop
push
push
fstpt
loop
ds
jl
xchg
jg
jo
xor
outsb
and
cmpsb
lret
fidivs
movsl
leave
pop
push
mov
shrb
call
mov
arpl
lahf
jg
lahf
mov
add
int3
adc
push
xor
push
xor
cmp
scas
cmp
insb
sub
loope
mov
sbb
or
mov
sub
xor
ret
xorb
push
jo
push
je
dec
inc
dec
movsl
adcl
and
dec
pop
fcompl
lcall
push
repz
in
xlat
lock
push
out
xchg
cld
sahf
xchg
mov
xchg
mov
stc
jg
inc
pop
mov
gs
aad
add
stos
and
pop
pop
mov
les
xchg
xchg
xchg
das
insl
ficompl
les
mov
cmpb
inc
shlb
mov
lock
xor
mov
push
jmp
adc
xchg
adc
mov
outsl
xchg
popl
cmp
pusha
movsl
dec
lcall
inc
jecxz
push
pop
hlt
imul
jbe
inc
mov
gs
jp
pop
pop
pop
fwait
sahf
imul
cmp
push
or
push
xchg
adc
cmp
out
aas
push
mov
xchg
mov
dec
xchg
xor
adc
test
jge
data16
scas
arpl
add
cmp
mov
loop
arpl
lods
insb
in
xchg
cs
in
push
xor
mov
daa
push
and
jmp
xor
out
push
cmc
mov
push
mov
fildll
call
mov
std
dec
push
pop
mov
jo
neg
xchg
and
out
out
loopne
add
xchg
or
xchg
movsl
data16
inc
out
je
sbb
inc
std
mov
push
mov
lret
jbe
sub
sbb
xchg
push
add
sub
outsl
clc
sub
cmp
std
mov
aas
adc
inc
add
push
daa
fdiv
push
leave
mov
adc
xor
pop
sahf
pop
sbb
cmc
mov
xchg
int3
mov
sbb
or
xor
add
out
mov
push
mov
sub
xchg
jae
jno
out
outsl
cmp
mov
dec
sbb
insb
fs
pop
insb
push
js
mov
mov
pop
movsl
icebp
mov
inc
jmp
les
adc
cmpsb
or
push
movsb
pop
scas
sub
repnz
sbb
hlt
jmp
popf
or
in
pusha
popf
addr16
mov
shlb
pop
jne
lret
data16
orl
bnd
mov
test
ret
insb
pusha
imul
inc
cmp
mov
or
and
lahf
sahf
xor
cs
mov
gs
cltd
fists
sub
out
and
cwtl
imul
loopne
out
push
or
aad
out
daa
cmp
imul
jmp
sbb
or
sbb
adc
divb
sub
mov
cmp
scas
or
lds
sub
mov
adc
inc
fimuls
and
lods
lock
add
xchg
xor
xchg
sbb
les
inc
test
cmp
pusha
das
arpl
cmpsl
add
sbb
mov
iretw
sbb
lods
cmpsl
dec
test
dec
jmp
mov
and
dec
push
dec
daa
mov
push
pop
jb
and
mov
sub
inc
lret
mov
nop
incl
lock
incl
aas
test
push
add
daa
popa
call
and
push
test
ds
jbe
inc
xlat
or
loopne
push
add
add
mov
stos
add
add
mov
pop
pop
sbb
out
aad
gs
jle
adc
fucomp
mov
sbb
and
xchg
lock
dec
xchg
adc
enter
xlat
xchg
ret
rclb
xchg
dec
jb
sbb
pop
test
loope
push
fisttps
mov
out
es
sbb
xchg
scas
sbb
sbb
lods
pop
inc
ds
hlt
or
xchg
mov
jnp
push
addr16
fs
insb
push
sub
dec
pop
lds
or
pop
test
movsb
cmc
ret
es
gs
dec
pop
xchg
mov
mov
popa
test
mov
stc
daa
fisubl
cmp
push
sbb
cmp
in
xor
xor
jl
popa
fdivl
cmpsl
jbe
ret
test
fs
push
shlb
xor
or
into
push
test
les
or
cmp
add
insl
or
pop
mov
xchg
xor
mov
mov
inc
cltd
lods
cmp
push
adc
int
cmp
clc
xchg
mov
ja
push
mov
mov
lock
push
jo
jp
aad
pop
and
pop
xor
and
ja
andb
mov
fwait
int
and
mov
or
cmc
filds
xor
ds
mov
sbb
mov
mov
inc
aaa
insl
jmp
cli
lea
mov
stos
les
xlat
sub
stos
xchg
daa
js
mov
mov
je
mov
lahf
cmpsl
inc
ds
cmp
sti
pop
xchg
cmp
jmp
inc
les
push
and
test
into
ja
add
mov
mov
push
repz
rcll
imul
pushf
repnz
jle
adc
cmp
or
int
and
fsub
cmp
jno
and
jns
test
push
ds
and
sahf
ds
xlat
fcmovb
cs
gs
andl
mov
fs
fwait
rclb
jmp
cmp
stc
ficoms
pusha
sbb
cmpl
jnp
jb
mov
andb
and
pop
cmp
xor
adc
popa
or
stos
mov
dec
ja
shlb
gs
stos
pushf
jbe
ficoms
iret
xor
js
loop
jmp
sbb
mov
mov
inc
adc
sbb
cwtl
sub
jg
sub
or
fwait
test
or
xor
iret
dec
jne
clc
outsb
xchg
int3
mov
mov
xchg
pop
push
ljmp
xchg
fmull
hlt
sbb
inc
push
pop
lds
push
jl,pt
adc
pop
clc
pop
adc
cmp
rolb
push
add
jbe
xchg
mov
adc
cmpl
push
pop
in
or
push
sub
push
mov
sub
jge
loopne
mov
jmp
xor
push
or
out
fwait
pop
dec
sbb
add
mov
addr16
mov
stc
inc
sar
insb
mov
aas
insb
dec
loope
push
bnd
stc
add
rorl
je
push
pop
mov
dec
add
scas
clc
imul
mov
out
lock
mov
out
mov
cli
test
push
mov
cli
pop
adc
xor
jge
adc
setno
in
aad
jbe
cmpsb
jg
test
into
xchg
sahf
into
test
mov
or
sahf
ret
jno
les
loopne
sbb
mov
pop
insb
ret
and
test
cmp
cmp
mulb
jmp
fidivrl
push
mov
mov
fucom
pop
testl
lock
sub
sbb
fnstsw
xor
push
sbb
mov
push
ds
push
jbe
mov
mov
mov
mov
jmp
mov
aaa
sub
push
mov
daa
lret
hlt
pop
jl
fcmovnb
sub
pop
fdivrl
xor
in
push
jecxz
call
es
imul
adc
scas
loopne
in
cmp
jmp
cmp
sub
sub
in
mov
stos
in
lea
faddl
mov
sbb
call
push
xchg
hlt
aam
imul
push
stc
cmp
mov
rcrl
adc
pop
cmpsl
hlt
sub
fisttps
sbb
icebp
cmp
scas
or
pop
mov
jl,pt
movsb
pop
adcb
sbb
add
xchg
pop
sbb
xchg
pop
lcall
jge
xchg
mov
out
pop
test
inc
das
or
fs
rcrb
mov
ret
hlt
cmp
jp
xchg
sarb
imul
mov
xchg
jmp
push
fnstcw
hlt
in
rolb
lcall
ss
lock
jecxz
fistps
add
out
mov
insl
sub
daa
pop
cmp
aas
xor
clc
add
scas
xchg
cmpsw
mov
xchg
pop
add
inc
rorb
sub
int
xchg
mov
cmp
jecxz
insb
pop
scas
pop
lods
sti
orl
negb
and
sbb
dec
lock
mov
scas
lret
cmp
fidivl
dec
cmpsb
cmp
outsl
fcmovne
and
or
xchg
jns
mov
aad
adc
mov
sbb
inc
orb
lea
js
psllq
aaa
mov
adc
jno
or
sbb
sub
push
or
push
add
cs
shll
out
pop
jle
inc
sub
stc
mov
fildl
mov
adc
inc
pop
or
in
ret
into
leave
mov
loopne
sub
mov
ljmp
adc
stc
mov
test
leave
ss
xor
sbb
orl
aas
mov
popa
daa
sub
ret
in
cmp
add
lock
test
inc
or
sbb
cmp
mov
inc
ss
cmp
mov
jle
gs
psubw
push
lea
push
jle
mov
inc
out
sub
push
push
test
mov
sub
sub
mov
jb
mov
mov
add
shrd
push
cmp
jp
mov
add
sbb
imul
jbe
inc
cmp
in
lret
sbb
leave
ljmp
add
repz
and
cmp
or
sub
daa
insb
out
fisttps
mov
or
in
fwait
push
gs
xchg
ds
jo
and
insl
push
fwait
pop
adc
sub
insb
pop
xor
ss
inc
add
pushf
jno
adc
and
hlt
ror
cwtl
fucomi
iret
lock
pusha
test
lahf
mov
adc
into
test
test
inc
fwait
push
fldt
pop
int
inc
lret
cltd
paddusw
imul
call
mov
push
lods
cmp
inc
cmpl
inc
or
andl
out
jo
cmp
fistps
mov
rolb
fmull
mov
clc
mov
sbb
xchg
in
inc
loopne
cwtl
out
bound
orl
adc
das
inc
out
jmp
push
push
xchg
nop
mov
adc
mov
dec
xchg
test
loopne
add
notl
cmp
sti
jae
es
mov
ret
sti
adc
xchg
push
aad
fs
pusha
mov
fwait
repnz
adc
mov
or
pop
inc
push
test
and
xchg
lahf
sbb
lea
mov
inc
popa
pop
mov
and
pop
xor
sbb
push
fimull
inc
jl
inc
sti
jbe
jg
leave
fwait
stos
outsb
sbbl
mov
inc
add
push
aas
out
ljmp
and
fs
es
adc
jbe
scas
mov
call
pop
aas
adc
inc
cltd
mov
push
inc
cmc
jbe
dec
rcll
jnp
adc
shll
xor
iret
dec
rorl
push
insb
stc
testb
adc
xor
fimull
ret
test
dec
ljmp
mov
or
scas
in
add
push
stos
push
push
xor
ficoms
xchg
fidivrs
mov
mov
fdivrl
adc
je
cli
leave
xchg
in
mov
mov
mov
sbb
push
sahf
pop
push
fmull
iret
notl
lds
loop
loopne
jecxz
cmpsl
testl
push
out
test
lods
mov
cmp
repz
fdiv
push
andb
int
mov
jbe
popa
outsl
mov
xor
cmp
sbb
jmp
sub
fstp
mov
popf
in
jp
sub
cmpsb
out
push
and
mov
xchg
rcrl
mov
sbb
adc
xchg
roll
outsb
mov
lock
shr
ret
lods
xor
daa
mov
hlt
in
popf
imul
mov
jbe
stos
mov
sub
inc
pop
and
ret
sti
sbb
sub
mov
sbb
inc
and
lods
sbbl
jns
js
sbb
push
add
jl
xchg
mov
jno
sub
aad
sbb
mov
xor
cmpsl
leave
lods
int
outsl
addr16
outsl
fadds
bound
sub
clc
in
mov
pop
push
dec
xorb
sbb
mov
js
and
xor
in
out
xchg
mov
out
cmp
addr16
popa
pop
iret
and
incl
pop
movsb
xor
js
int3
pop
lret
dec
push
into
or
es
dec
into
fsubrs
into
setp
mov
enter
cmp
clc
or
stos
movsb
je
jp
xchg
inc
mov
out
ljmp
push
mov
jno
mov
jo
aad
push
adc
out
inc
mov
mov
faddl
inc
add
jmp
jle
in
mov
je
mov
cmp
in
movsl
jg
nop
dec
test
inc
in
sub
decl
in
cmp
stos
fsts
out
xlat
stos
inc
inc
cwtl
pusha
into
mov
les
shrb
les
cmpsl
mov
pop
push
mov
addr16
out
adc
aad
cmpsb
test
push
popa
push
and
mov
shrb
and
cltd
xchg
test
out
in
or
jbe
sbb
test
rcr
inc
xlat
adc
insb
test
outsb
lods
cmc
or
fildl
xchg
iret
in
leave
or
push
mov
jge
cli
bound
mov
fwait
iret
es
push
push
mov
insl
bound
jecxz
fwait
imul
pusha
mov
dec
or
or
xchg
enter
mov
stos
imul
outsb
imul
mov
mov
mov
aad
push
les
mov
rcrl
lcall
fsubrl
aaa
pop
mov
sbb
sub
insb
push
adc
mov
dec
int
mov
xchg
popf
cli
push
push
inc
push
jp
imul
add
sbb
mov
dec
adc
lcall
xchg
and
cmp
cmp
mov
cmp
outsb
add
adc
mov
xor
outsl
dec
xor
pop
mov
add
mov
lahf
call
or
repnz
inc
lds
stc
inc
adc
or
dec
dec
cmp
imul
dec
movsl
xor
jo
inc
ror
xchg
mov
or
nop
fsubrl
jo
or
mov
sbb
outsb
mov
mov
sbb
scas
aas
mov
push
dec
arpl
lret
fdivrs
std
lret
or
loope
adcb
mov
lock
add
shlb
shlb
jae
mov
cltd
inc
pop
xchg
mov
aam
jg
pop
sbb
mov
or
popf
mov
mov
mov
stos
js,pn
les
fcmovnu
xchg
nop
pop
or
adc
xchg
lret
sbb
pop
iret
fildl
pop
pop
imul
ljmp
popa
inc
mov
lds
push
dec
fnsave
loope
pop
adc
aas
jecxz
ljmp
call
sbb
js
inc
popa
pop
les
lds
popa
pop
stc
pop
test
sub
fisttps
rcll
xor
leave
mov
pop
stos
jo
hlt
js
ljmp
leave
push
inc
adc
pop
sub
pushf
lods
pop
fiaddl
imul
rcrl
roll
call
outsl
push
and
inc
mov
insl
jne
sbb
js
movsl
movsl
test
dec
jp
lods
push
mov
inc
pop
sahf
fbld
xor
mov
jecxz
cmp
mov
insb
ja
pop
inc
mov
push
in
xchg
movsb
or
xor
cwtl
outsb
sub
testl
hlt
test
mov
pusha
in
jge
mov
jl
inc
xor
aad
xchg
or
fucomi
xor
adc
aad
mov
sti
mov
sbbl
std
push
out
xchg
mov
xlat
sti
pop
mov
mov
mov
shlb
outsb
or
and
lods
hlt
inc
xor
es
fidivs
orl
fdivr
dec
fcoms
and
adc
lods
push
pop
mov
jo
lcall
fucomi
add
ficomps
lret
sarl
lcall
and
xchg
or
jmp
fs
loopne
and
inc
icebp
in
pop
or
xchg
inc
xor
mov
add
mov
int
test
aas
mov
adc
pop
pop
fistpll
aaa
adc
sub
add
dec
imul
inc
mov
add
mov
loope
ds
xchg
pop
push
mov
fists
subl
lds
cmp
sub
jl
pop
or
out
inc
push
pop
dec
mov
xchg
sbb
clc
mov
sbb
bound
xor
add
adc
mov
dec
add
push
xchg
add
and
jp
push
sub
push
dec
leave
xor
cmp
add
or
jp
clc
adc
aad
pop
ss
add
adc
fmulp
xchg
outsl
aam
cmp
ja
mov
stos
adc
stc
push
xchg
mov
lret
ret
push
push
dec
cmpsb
out
push
lret
shll
sub
xor
pop
dec
cld
push
inc
fldl
jnp
es
sahf
neg
das
les
sbb
and
shll
adc
test
push
xor
mov
or
jae
mov
test
lret
fisubs
add
add
stos
or
and
bound
mov
in
rcr
test
mov
sqrtps
xor
mov
sbb
dec
pop
mov
pushf
push
pop
loopne
jl
sbb
add
xchg
pop
push
add
xchg
xchg
or
pop
and
cwtl
fcmovnu
or
xchg
cmp
jecxz
out
dec
inc
and
es
or
jbe
test
and
mov
push
outsl
imulb
leave
pusha
andl
aad
fwait
das
pusha
or
sbb
mov
sbb
into
push
and
mov
inc
setp
inc
adc
outsb
push
xor
sbbb
push
or
sub
test
xor
ss
test
ror
adc
rol
sbb
lods
or
fistpl
pop
mov
loope
lret
sarb
iret
dec
rcll
or
jmp
mov
jle
add
rcr
pop
imul
ds
shl
shlb
sub
sbb
je
mov
test
mov
push
cli
jg
jo
dec
or
adc
sub
shll
dec
add
popa
push
testl
mov
ja
xchg
mov
lods
dec
dec
cwtl
aas
loopne
pop
mov
imul
jb
jge
inc
in
xchg
pop
or
movb
dec
std
test
aad
jae
ret
sbb
shll
mov
out
ljmp
inc
mov
daa
dec
repnz
cmp
mov
pop
loopne
movsl
jge
inc
sbbb
adc
pop
aam
add
out
push
mov
add
or
xchg
sbb
fistl
rcrl
fcoml
bound
sub
mov
xor
inc
in
je
aad
div
jne
popf
pop
inc
pop
xor
add
jb
enter
push
aaa
xchg
test
cli
popa
push
pop
pop
outsl
lret
mov
pop
pop
xchg
mov
mov
loopne
sbb
adc
lds
insl
out
xor
dec
fbstp
jl
aad
and
adc
in
aas
mov
jp
addb
lret
ja
aad
xlat
or
das
and
dec
add
sbb
xchg
push
jns
fs
cmpl
pop
jns
push
scas
mov
ja
ja
pop
add
xor
xchg
add
jne,pt
js
cltd
lcall
pop
test
mov
dec
xor
add
repz
in
jle
jmp
mov
movsb
das
inc
push
and
dec
out
shrb
lret
jns
imul
jb
xor
pop
xchg
and
outsb
pusha
ret
cmp
push
cmpsl
xor
mov
aaa
adc
or
jbe
aas
push
sub
add
mov
into
out
ret
icebp
inc
sub
or
jae
dec
mov
rcrb
mov
aas
aad
aas
and
movsl
push
mov
cmpsb
mov
xchg
lret
adc
cmc
mov
mov
inc
cmpsb
xor
mov
out
repnz
and
dec
dec
push
push
shl
aam
rolb
mov
sbbb
jne
push
adc
scas
in
push
or
lds
pop
movsl
dec
push
out
cmpb
inc
fisttpll
dec
cwtl
dec
or
xchg
sub
je
repz
cwtl
mov
das
sub
js
cmpsl
mov
or
mov
int3
test
or
cmpsb
sub
mov
mov
mov
xorl
lea
inc
cmp
imul
mov
xor
loopne
ret
mov
jge
lods
xchg
mov
mov
and
inc
jnp
mov
sbb
push
dec
xchg
inc
xor
es
and
pop
xor
aaa
jmp
icebp
push
cmc
jo
adc
out
mov
jae
loopne
jo
out
jnp
and
enter
out
inc
mov
data16
lock
jmp
sub
adc
imul
outsl
es
scas
subb
mov
or
adcl
cmp
in
cmpsl
jne
ret
jnp
xor
mov
test
xor
adc
mov
popa
push
xchg
cs
loope
push
cmp
jmp
aas
sbb
int
test
lahf
out
lock
cmp
loope
pop
push
data16
stos
rcrb
movsl
vcomisd
mov
out
ljmp
ret
and
js
scas
fdivrp
movsl
pop
scas
ja
lock
cmp
stos
lcall
hlt
repnz
xchg
cmp
js
sub
enter
xor
and
push
arpl
and
cli
repnz
iret
mov
nop
add
xor
mov
sarb
mov
push
push
jae
enter
adc
push
fnsave
loopne
inc
in
dec
xchg
mov
push
nop
int3
cmpsl
aad
push
xlat
or
test
in
jo
in
sbb
lar
or
dec
scas
gs
xor
or
xor
xchg
sti
and
js
mov
mov
nop
push
popa
addl
adc
testb
pop
loope
jbe
mov
in
mov
add
or
inc
cld
cmc
sub
aas
lea
mov
or
out
sub
push
xchg
xchg
daa
in
jnp
sub
inc
adc
fdiv
sub
ret
les
fmuls
mov
cmp
sbb
jb
mov
add
mov
fbstp
cmpsb
fldl
jne
mov
loope
mov
dec
cs
test
call
in
and
push
cmpb
dec
jp
xor
sbb
rep
and
jns
pushf
bnd
lock
dec
jno
out
or
fisubl
or
mov
sub
test
mov
es
or
sub
rol
lea
jecxz
setne
insb
push
andb
js
out
xchg
js
adc
mov
pop
inc
sbbl
pop
pop
and
pushf
aam
mov
shl
ficompl
cmp
push
adc
mov
pushf
cwtl
stc
xor
test
xchg
in
xchg
push
xor
or
xor
push
daa
cld
pop
pop
or
xor
stos
xchg
stos
lds
xchg
test
jle
push
add
imull
and
and
repnz
mov
frstor
cld
or
xchg
add
test
leave
dec
jbe
pop
push
fdivs
stos
imul
and
std
or
mov
in
inc
rcrb
hlt
adc
imul
jb
lret
xchg
inc
add
inc
cmp
and
xor
outsb
sbb
outsb
sbb
pop
and
fsubp
shl
mov
jo
nop
adc
add
xchg
stos
xchg
lds
mull
or
loop
loop
cmpb
int3
ss
repz
xchg
mov
sbbl
jbe
fs
xor
or
push
inc
aad
cld
dec
cmp
jmp
add
clc
xlat
movsl
mov
jne
repz
ja
imul
sub
iret
fwait
cltd
iret
hlt
push
stos
ret
or
das
xor
mov
mov
inc
mov
pop
aam
mov
sub
lds
div
fstl
std
jae
repnz
repz
gs
shll
clc
inc
shrb
stos
jecxz
inc
inc
cmp
sub
fists
inc
or
int
push
sub
outsl
push
push
in
push
test
mov
fimuls
loope
adc
mov
mov
leave
gs
pop
mov
mov
inc
push
mov
and
sub
loopne
pop
mov
xchg
adc
imul
dec
fsubl
and
and
cmp
pop
out
jle
mov
lods
mov
push
mov
mul
mov
pop
inc
call
sarl
xor
test
fmull
mov
mov
cmp
mov
jg
ja
push
pop
int
dec
adc
mov
icebp
adc
enter
in
mov
push
bound
cwtl
imul
and
rcrb
insb
call
inc
ds
mov
xor
sbb
cmp
mov
js
sub
mov
mov
in
fs
jb
jno
or
pushf
lahf
xlat
pop
cltd
rorb
xor
jl
shlb
or
int
sbb
stc
mov
push
dec
cmc
xchg
testl
mov
insl
or
xchg
mov
in
push
imul
mov
je
pop
call
adc
jmp
fcoml
sbb
add
gs
adc
xor
inc
imul
shrl
fmuls
nop
mov
negl
daa
hlt
mov
cmp
shr
push
or
lret
or
cwtl
mov
pop
sbb
iret
push
stos
dec
or
iret
push
mov
mov
push
in
popf
sbbl
int
cltd
in
push
mov
cs
xchg
in
pop
jnp
ja
pop
sub
mov
cmp
xor
sub
inc
add
sub
dec
jae
mov
jo
xor
mov
mov
xchg
pop
pop
adc
dec
pop
inc
stos
enter
push
shlb
rorl
repz
mov
push
loop
add
jmp
sub
lahf
xchg
push
loope
push
stos
mov
xchg
cmp
sbb
dec
inc
push
repz
add
push
mov
pop
loop
mov
jno
cmp
rol
and
cmp
or
popa
out
jb
int
xchg
adc
daa
sbb
loopne
das
ds
inc
filds
jnp
loop
les
xchg
push
and
pop
lea
gs
lods
xor
mov
ss
cld
out
xor
test
nop
pop
clc
in
insl
jbe
add
jle
shrb
repnz
xchg
ficompl
jg
inc
cmp
mov
adc
mov
push
push
or
adc
test
push
test
out
repz
jecxz
rolb
lahf
pop
add
mov
ja
jmp
popa
push
xorl
mov
leave
imul
outsl
int3
pop
ljmp
fdiv
push
ds
ds
dec
jbe
pop
cmc
xor
imul
stos
shrl
cmp
icebp
xchg
xor
pop
dec
fisubrs
dec
imull
insb
loopne
cmp
loopne
movsb
scas
cmpsb
pop
pop
add
bound
rorl
sub
fdivrl
adc
divl
and
insb
xchg
adc
lock
mov
cld
in
sbb
adc
xchg
jno
movsb
mov
mov
xlat
xor
push
in
and
mov
jns
and
pop
or
push
adc
mov
fstpl
outsl
cmp
jp
cmp
test
roll
fwait
icebp
rcl
inc
jno
and
es
sub
jge
rol
push
or
stos
inc
cmp
je
mov
int3
dec
inc
enter
and
push
jp
or
add
add
push
sbb
sbb
fildll
das
notb
in
repnz
jp
addl
jns
stos
popf
inc
pop
xor
add
push
cmpsl
pop
adc
xchg
xchg
stos
pop
sbb
sub
sub
mov
push
ret
mov
push
mov
sarb
adc
add
mov
push
inc
fs
das
pop
xor
fs
push
xor
add
sub
jae
jl
in
push
cmp
enter
ret
movsl
dec
daa
pop
andl
pop
mov
mov
xchg
sti
outsb
jecxz
pop
std
and
shlb
dec
pop
pop
jb
outsb
mov
cmpsb
cmp
pushf
mov
push
hlt
ss
shl
fsubrp
popa
das
ret
cld
mov
push
cmc
mov
cmp
jns
and
or
mov
ret
insl
sar
xchg
call
shrb
or
ret
inc
leave
cmp
pop
into
jg
sub
jo
insb
fstl
sub
loopne
push
rep
jnp
test
dec
pop
sub
or
call
xchg
stos
mov
mov
mov
dec
test
mov
sbb
lods
test
sub
fadds
xchg
mov
dec
adc
sbb
inc
imul
popa
mov
in
mov
pop
ds
push
imul
and
rorl
js
add
popf
inc
test
xor
iret
test
inc
cmp
dec
stc
aam
xchg
in
jge
nop
call
iret
and
jnp
and
insl
cld
pusha
mov
fwait
xor
dec
jne
cld
sub
sub
xchg
cmp
dec
lds
mov
loope
dec
push
out
mov
iret
xchg
ret
cmc
out
xor
cmp
pop
mov
ljmp
in
pop
out
push
xchg
mov
aad
in
mov
add
sbb
ja
pushf
jb
mov
cmp
mov
nop
jns
leave
fptan
pop
add
icebp
lock
decl
cmpsl
pop
sti
sti
push
ja
in
inc
sub
dec
add
ficompl
fs
movb
stos
and
out
rorl
add
mov
leave
push
dec
push
push
stc
push
pop
xchg
lcall
out
xchg
adc
add
dec
repz
sub
js
test
cmpb
out
sub
push
insb
sub
aad
ret
jbe
int
mov
nop
daa
jg
mov
fwait
stos
scas
shll
aad
aas
push
pop
mov
xlat
push
mov
scas
cmc
loop
cmove
and
xor
mov
push
insl
fsubrs
popf
lods
imul
jae
ja
popa
cmpsb
cmpxchg
and
in
jle
icebp
xor
ja
pop
xchg
add
jge
add
mov
cmp
lahf
mov
jbe
push
cmpsl
stos
jle
and
call
push
mov
bts
inc
xchg
jo
pop
cmpsb
cmp
cmp
fisubrl
insb
pop
je
cs
aas
add
std
mov
sti
mov
ret
jmp
rcrl
call
in
int
popa
mov
stos
loope
dec
shr
lea
lret
mov
and
adc
xchg
in
sub
and
dec
fimuls
in
lods
mov
push
call
cmp
cmc
xor
int3
pop
xchg
mov
pop
rorl
call
mov
dec
jo
xor
jl
enter
call
sahf
pop
dec
push
add
cltd
mov
push
shrl
mov
push
ss
mov
sub
cs
push
jmp
lret
sbbb
popa
fiadds
hlt
popa
mov
push
hlt
arpl
cld
pop
inc
mov
loope
in
mov
int
inc
pop
xor
lods
dec
mull
jae
xor
and
nop
nop
jno
mov
add
sub
dec
push
das
inc
shlb
push
mulb
lahf
addl
pop
cmp
mov
pop
mov
adc
shll
sbb
cmp
push
daa
jo
dec
mov
fstp
and
xchg
jg
mov
in
inc
out
inc
push
push
xlat
fstpl
mov
add
push
cltd
stos
out
jnp
pop
vpshad
mov
push
lcall
adc
xor
inc
dec
inc
dec
fnstenv
sub
jb
xlat
jae
jmp
adc
sbb
fs
in
test
outsl
sbb
mov
xor
or
in
ss
xchg
sti
std
fcomps
out
push
push
mov
cmc
sub
out
test
out
out
icebp
cmpb
pop
enter
sarl
mov
lock
mov
mov
mov
call
mov
push
movzbl
xchg
inc
xor
sbb
push
xlat
jp
sahf
jg
push
lret
int3
mov
cs
sbb
andl
cltd
or
mov
cli
hlt
pushf
cmp
ss
mov
sahf
loope
sub
xchg
mov
sbbl
rclb
xchg
sub
jno
stc
add
inc
outsl
jg
shll
int3
add
hlt
pop
out
das
icebp
push
addr16
add
loope
pop
push
mov
jle
pop
jge
test
fwait
push
and
xchg
nop
es
push
loope
fcompl
int
mov
push
jne
fidivrs
xor
testb
jno
xor
lods
mov
sbb
ret
jle
and
call
arpl
jo
mov
push
and
cwtl
outsb
es
pop
rcl
jae
int3
xor
shrb
and
fs
sub
test
sbb
add
aam
test
por
in
out
adc
fdivrs
jbe
sub
adc
add
cmp
dec
in
inc
loop
sub
add
leave
and
out
lret
push
mov
sbb
lods
cmp
or
jnp
lods
add
repnz
pop
and
sbb
repnz
mov
pop
push
fadds
and
pusha
and
dec
pop
push
sub
inc
popa
pop
pop
das
inc
data16
cmpsb
mov
push
lahf
pop
jp
popf
lahf
mov
rolb
je
push
pushf
xor
dec
inc
adc
out
les
pop
xor
push
mov
out
dec
or
js
push
and
cmpsl
iret
sbb
in
push
inc
xor
imul
mov
lcall
push
mov
pop
push
add
mull
ljmp
mov
dec
pop
notl
push
inc
and
xor
rcll
cmpsb
test
sbb
sbb
outsb
lods
sub
ret
cmp
ja
cmp
rcl
aad
mov
dec
call
mov
and
lea
hlt
repz
fwait
push
das
cmp
jnp
in
imul
fstps
es
add
in
stos
not
iret
mul
mov
inc
sbb
lods
cmp
and
std
sub
pop
out
fcompl
icebp
jg
inc
mov
mov
aad
fwait
mov
sbb
sbb
aaa
and
jmp
add
pop
push
cld
pop
push
mov
fdivl
dec
jne
scas
mov
and
mov
hlt
sbb
leave
sbb
loope
inc
push
sti
lock
loopne
ljmp
movsl
ret
xor
js
movsl
scas
icebp
xor
iret
pop
pop
dec
xchg
add
data16
jmp
sub
pop
xor
es
stos
stos
or
xchg
jne
lret
out
sub
jae
push
bound
loop
pop
xchg
out
pop
pop
xor
icebp
xor
aad
adc
lods
inc
imul
jae
sub
xchg
scas
or
xchg
imul
xchg
sbb
lock
add
fcomp
jae
test
lahf
xchg
cmp
xor
cmp
and
ret
pop
pop
sbb
rcr
jns
add
fldt
push
mov
or
jp
insb
roll
push
data16
cltd
lret
lds
jne
dec
sbb
hlt
cs
pop
mov
cmp
sbb
test
out
repnz
mov
pop
jle
jbe
fwait
test
jp
and
mov
adc
imul
cmpsb
cmp
push
cwtl
lcall
fstl
or
imul
mov
js
subb
mov
aad
jmp
mov
cmp
test
cmp
ret
mov
pusha
enter
sub
xor
xchg
cli
inc
fldl
or
lret
mov
ss
adc
test
lret
push
sbb
dec
adc
jecxz
push
aam
pushf
xor
into
add
or
jno
xchg
stc
xorb
mov
scas
shr
bound
jno
jbe
mov
fiaddl
dec
sahf
outsw
sub
outsb
repz
mov
repnz
xchg
lock
push
sbb
test
xchg
insl
cmp
test
inc
mov
mov
lahf
popa
or
inc
xchg
scas
test
or
and
repnz
idivl
jge
out
les
and
int3
jbe
mov
adc
pop
mov
sub
sahf
sbb
int3
cmpsl
popa
pop
pop
jne
xlat
gs
dec
push
adc
mov
mov
push
popa
fsubl
xorb
clc
xchg
mov
das
sub
jp
sub
hlt
xor
loope
out
call
inc
jns
loope
dec
inc
xchg
push
push
xchg
movsb
out
xor
push
push
cmp
pushf
call
or
fs
fsts
cmpsb
jnp
jmp
addr16
and
enter
push
sub
fisttpl
shlb
pop
jg
stc
imul
clc
xor
or
push
mov
rorl
lret
mov
jbe
adc
and
fistps
fdivrl
mov
pop
js
and
lods
lds
sbb
fnsave
sbb
vmptrld
or
stos
cmc
sub
dec
cmp
cmpb
and
lea
loopne
leave
fidivrl
mov
inc
sti
jb
cmpsl
sub
lret
sub
pop
movsl
cmp
shr
insl
adc
sbb
insl
test
xchg
mov
mov
or
mov
mov
mov
ret
or
rcrl
pop
shl
push
fs
inc
adc
jns
sub
and
mov
int3
inc
mov
cmpsb
mov
lret
into
xchg
orb
xor
dec
in
push
jbe
cmpsl
aaa
aam
scas
pop
lods
inc
sbb
in
outsl
leave
repz
adc
jb
mov
mov
xchg
cmp
ss
lret
fwait
call
nop
or
add
in
cmp
fldt
mov
or
mov
inc
out
xor
mov
pop
movsl
mov
mov
loope
sbb
fs
xchg
push
rcll
lods
xchg
dec
adc
push
cmp
mov
into
lahf
fsub
dec
pop
mov
test
dec
test
cmp
scas
lea
int3
lods
xchg
mov
or
insb
pop
mov
xchg
pop
xor
xor
lahf
out
xor
xor
fdiv
inc
inc
aas
cld
fwait
dec
cs
outsl
sbb
daa
mov
cwtl
mov
int
inc
mov
sbb
lahf
xchg
sarl
lret
out
xor
aas
dec
testl
mov
pop
cld
xor
xchg
aad
imul
push
mov
adc
fs
mov
loopne
dec
push
out
pop
cmpsb
cli
inc
repnz
cltd
shll
ret
test
daa
insl
repz
or
push
shrb
lods
push
pushf
mov
sarl
push
out
fcmovbe
mov
in
pop
push
ret
jae
add
mov
cmp
sti
lds
repz
xchg
or
adc
push
dec
jbe
and
test
dec
sub
mov
sub
into
xorl
and
ss
shlb
add
stos
rorl
js
popa
adc
leave
xchg
lods
inc
adc
push
lds
add
repnz
jmp
addl
push
mov
sbb
dec
mov
jb
repz
repz
ljmp
add
sbb
movsb
in
fcmovnu
mov
dec
loope
jmp
add
daa
lods
mov
leave
jnp
int3
das
cmpsb
test
adc
or
mov
dec
cmp
stos
test
xchg
popf
in
shl
jbe
mov
dec
add
cmp
inc
jge
aas
push
das
mov
sub
fucomi
ss
adc
lods
negb
mov
xor
notl
push
inc
mov
shlb
test
cmpsl
pusha
pop
mov
insb
push
adc
mov
pop
vfrczss
or
imul
lods
add
mov
inc
fidivrs
xchg
leave
nop
push
pop
shrb
leave
pop
push
in
test
pop
and
pop
push
cltd
jle
roll
int3
sbb
fisttps
pusha
in
dec
jge
loopne
scas
dec
bound
ficompl
cld
mov
jg
mov
pop
mov
pop
test
pop
mov
stos
jmp
test
and
pop
or
lea
pop
add
jnp
dec
jo
sub
lock
data16
shlb
jb
jl
sbb
pop
push
std
adc
arpl
jne
sub
fisubs
loope
lods
shrb
ja
addb
js
mov
mov
mov
test
fcomp
leave
mov
popf
add
outsl
mov
js
add
hlt
xchg
mov
add
add
jb
out
sbb
lret
push
pop
daa
in
cmp
pop
adc
or
lds
shll
mov
popf
jae
addb
clc
sti
add
jns
add
ret
push
ljmp
mov
sarb
insb
xor
mov
xlat
sub
aam
mov
cmp
jbe
ficompl
es
inc
mov
fwait
ss
cmp
pop
xor
mov
jmp
lahf
push
cmp
popf
jnp
out
mov
rolb
aad
std
lret
mov
push
pop
jge
pop
out
mov
pop
add
jmp
pop
aam
jb
jmp
fs
pop
cli
jmp
sbb
in
add
outsb
push
cli
punpckhdq
cmpsl
jl
mov
mov
add
cld
arpl
out
gs
dec
dec
mov
and
loop
sub
inc
arpl
xchg
mov
loop
psubusw
mov
cmp
adc
add
and
aas
or
mov
ret
iret
jl
cmp
cmp
push
push
adc
stc
int3
in
lds
into
xchg
cld
jl
mov
jne
dec
adc
push
xchg
add
bnd
fwait
fs
dec
ret
gs
mov
aaa
sbb
lret
das
mov
pop
lock
jl
aaa
push
sub
addr16
pop
adc
mov
cmp
sub
inc
xor
and
sbb
add
lcall
and
sbb
cli
and
jecxz
leave
pop
rclb
stos
pop
add
lock
popa
xchg
lahf
mov
mov
data16
ret
and
fdivl
icebp
out
adc
ret
clc
lss
sbb
ljmp
push
gs
push
jg
jp
aaa
jb
add
out
jno
jecxz
adc
enter
cltd
rorb
mov
fiaddl
sub
cmp
mov
in
mov
adc
out
sub
outsb
pop
adc
sarb
notl
adc
mov
cld
inc
imul
pop
or
sbbl
mov
jl
mov
push
std
and
push
jne
js
scas
mov
sbb
aad
repnz
jns
ret
enter
test
lcall
inc
stc
inc
adc
in
pop
and
adc
outsb
jmp
add
sbb
inc
cmp
cmp
test
int
mov
cld
mov
incl
aam
push
sub
jae
pop
out
es
or
out
push
xchg
dec
mov
pop
mov
mov
cltd
jmp
mov
add
fsub
adc
lds
rolb
inc
mov
push
cmpsl
pop
adc
xchg
iret
das
call
sbb
mov
sti
sub
push
jl
dec
mov
lcall
cmpl
out
cmpsb
and
push
cmp
jl
jl
insb
inc
je
outsl
mov
mov
fnstcw
fwait
icebp
repz
xor
dec
pop
jecxz
mov
cwtl
and
or
sub
je
lahf
aas
pop
jno
push
jns
cmpsl
and
cmc
jle
outsb
popf
test
call
adc
pop
adc
imul
outsl
daa
and
cli
fwait
or
scas
aas
and
int3
ss
xor
inc
adc
outsl
mov
xor
inc
pop
movsb
inc
mov
lds
push
cmp
fs
pop
clc
mov
push
xlat
fwait
out
xor
jo
and
decl
aaa
icebp
add
xchg
push
pop
pop
std
pop
push
push
daa
sub
js
nop
repnz
clc
insb
cli
and
in
add
sbb
mov
aaa
xchg
push
add
cmpsl
adc
sub
dec
out
lea
jle
sub
sti
rcrb
push
dec
dec
das
adc
pushf
cmp
mov
adc
pop
sar
gs
clc
ljmp
aaa
sub
fdivr
minps
sub
js
jl
mov
sbb
dec
loope
mov
shrl
shl
sbb
cli
inc
sbb
xor
xlat
lea
mov
mov
movsb
jg
imul
pop
jg
xchg
fs
inc
pop
cltd
pop
lret
pop
roll
repz
cs
popf
or
test
jae
jne
pop
adc
scas
dec
push
cs
or
jg
sub
enter
fbstp
ret
push
mov
pop
lcall
jne
repnz
mov
ljmp
mov
jecxz
movsl
push
xchg
xchg
adc
xor
int
and
out
jg
push
mov
mov
fisubrs
sbb
sbb
jecxz
xchg
bnd
insl
xor
and
fcomi
xor
push
push
ss
xor
dec
or
es
aas
jg
loop
adc
fstpt
sub
mov
inc
add
lret
imulb
cmp
jnp
xor
sbb
fadds
sar
inc
out
jno
lods
cmp
ds
mov
xor
arpl
inc
adc
and
icebp
int
push
pop
loope
frstor
mov
jns
sub
mov
repz
cmp
lcall
test
push
div
add
int
outsb
cmp
mov
out
pop
loop
mov
mov
jb
push
mov
js
cmp
pop
sbb
xchg
cmp
ds
fistpll
shll
mov
jmp
sahf
cmc
dec
into
push
mov
fwait
cmp
add
je
arpl
push
icebp
xchg
xchg
and
sub
addl
cli
jge
dec
sbbb
mov
cmp
mov
cmp
pop
mov
or
scas
out
outsb
rorl
xchg
push
js
add
aaa
inc
xorl
sub
jecxz
cs
mov
pop
les
rcr
pop
js
push
in
push
jae
scas
cs
inc
push
dec
sbb
sub
fidivs
mov
pop
loopne
or
and
stc
and
add
stos
rolb
jns
mov
stos
leave
sarl
pop
xor
scas
add
fwait
in
sbb
mov
nop
adc
dec
mov
cltd
dec
jb
mov
adc
push
je
stc
mov
fwait
mov
and
xchg
icebp
mov
pop
gs
daa
push
nop
mov
push
shr
inc
dec
leave
or
jns
jb
pop
fidivl
hlt
mov
cmpl
pusha
cld
test
movsb
push
sahf
push
or
add
xchg
mov
cltd
add
xchg
inc
xchg
out
mov
jne
dec
in
in
sbb
ret
mov
add
pop
ret
not
shll
dec
mov
repz
out
pushl
aad
data16
mov
xchg
daa
ja
sub
call
std
shlb
cmpl
add
sub
sub
xor
pop
call
in
mov
inc
mov
stos
cltd
in
sbb
in
sbb
outsb
in
mov
and
clc
pop
adc
lea
inc
movsb
dec
fildl
fsubrs
or
std
sbb
xor
nop
sub
and
push
fisubrs
fwait
mov
shrl
jmp
xor
jne
inc
dec
mov
xchg
mov
sub
push
loop
push
jns
scas
inc
dec
push
fs
or
mov
inc
mov
gs
aam
mov
nop
lcall
and
shl
lea
add
js
mov
jo
jo
sub
mov
inc
push
mov
ja
xbegin
sti
sbb
scas
xor
and
mov
ficoms
iret
mov
aad
dec
mov
mov
pop
insb
outsl
jne
ds
mov
psrld
xchg
std
ds
fisubl
js
insl
adc
adc
or
out
test
imul
out
jmp
nop
xchg
sbb
or
lods
jecxz
xchg
cmp
repnz
es
cwtl
mov
fisubl
cmp
pusha
lea
movsb
or
cmpsl
int3
cwtl
mov
mov
and
xchg
fldl
mov
lds
sub
mov
adc
dec
sti
in
mov
mov
or
pop
in
inc
cmpsl
xor
inc
stos
xchg
mov
or
int3
in
cmpsl
or
fidivl
sub
adc
mov
cmp
adc
in
mulb
jg
mov
and
cs
mov
inc
jns
addr16
inc
fcomps
jne
int3
mov
fs
sbb
mov
faddl
mul
leave
xor
lds
shlb
lods
cmpsl
push
jmp
add
push
push
loopne
popf
outsl
inc
jle
rolb
leave
mov
dec
popa
dec
mov
pop
outsb
add
pop
arpl
add
enter
xchg
shlb
mov
into
dec
into
jl
or
inc
lods
and
and
mov
dec
dec
test
pop
repz
ret
into
mov
out
lret
insl
test
cmpl
scas
push
lret
imul
cmpsl
xchg
or
jae
aaa
ss
jge
sbb
test
daa
insb
xchg
fwait
push
dec
das
push
dec
fadd
shll
aam
add
dec
jne
call
fstl
jo
aaa
sub
push
add
dec
lock
xchg
div
jecxz
int
push
ret
jle
repz
lock
hlt
lods
jb
inc
cmp
push
scas
xchg
xchg
mov
lea
jno
jno
push
fwait
out
adc
mov
dec
mov
std
clc
cmp
lahf
push
fisttps
xor
sbb
push
inc
or
test
int
imul
lcall
mov
ljmp
xchg
jl
fsubs
xor
outsl
mov
push
fwait
std
sbb
jne
sti
loop
jno
fisubs
imul
mov
lcall
cwtl
leave
sub
xor
pop
sbb
jmp
popf
jno
jg
xor
dec
movsb
cmc
sub
mov
and
sbb
jecxz
dec
mov
fists
push
cmc
aas
xor
cs
xor
cli
push
fdivrs
loopne
cmpsl
jmp
stos
push
jb
adc
jne
sbb
ret
push
rcr
mov
test
push
ljmp
sarl
int
inc
pop
lods
jle
mov
mov
test
rcr
dec
mov
shlb
xor
pop
or
jbe
imul
sahf
fsubs
repz
mov
jne
fbld
inc
test
mov
mov
or
jnp
std
pop
xchg
jle
and
popf
out
pop
jl
hlt
push
out
and
ljmp
insl
andb
loop
test
inc
shrb
cld
sbb
xor
divb
or
pop
das
out
pop
jns
push
adc
aas
xchg
in
jmp
push
add
shlb
pop
xchg
jns
xor
and
js
fwait
mov
bound
ret
mov
adc
shll
test
jge
xchg
dec
xchg
push
mov
test
sarb
aad
sbb
push
enter
fwait
or
cmpl
push
xchg
inc
mov
mov
sbb
cld
sub
cmc
decl
outsl
icebp
sub
pop
push
add
sahf
and
int3
push
scas
inc
and
pushf
sbb
push
sti
xor
push
in
pop
cmc
test
or
dec
ret
dec
lds
inc
cmp
ret
hlt
dec
or
inc
jne
pop
mov
or
sbb
jnp
ss
out
xchg
sub
xchg
cmp
cmc
leave
roll
movsb
aad
cmp
push
loop
pop
aas
lds
jo
xor
movsl
inc
mov
rcl
adc
dec
enter
mov
loopne
int3
cltd
adc
add
and
adc
int3
ret
jb
fidivs
lea
jmp
stos
loopne
jl
push
jb
lock
cmp
scas
xchg
cmp
push
adc
mov
add
push
sub
cmp
jo
mov
push
xchg
call
adc
cmp
mov
jmp
sbb
inc
mov
sbb
fcmovnu
call
cmp
push
cld
mov
inc
xchg
sub
push
dec
mov
pop
test
inc
pushf
push
xor
sub
pop
enter
cmp
push
gs
xchg
addr16
aad
lcall
jle
lcall
mov
cli
cmp
fstpl
adc
sbb
nop
icebp
sub
xor
xchg
push
xlat
sbb
in
sbb
je
or
and
push
test
mov
dec
jo
adc
stc
iret
shl
add
rcr
insb
pop
pop
les
incb
subb
sub
lret
out
adc
xor
fisttps
xchg
pushl
push
cmpsb
popf
jbe
lcall
mov
xchg
lret
adcl
mov
jb
ret
das
in
inc
inc
shr
jae
xchg
push
mov
mulb
jl
out
call
and
sbb
mov
and
stos
jge
aam
jbe
xchg
hlt
out
jmp
cmpsb
aaa
daa
int3
pop
ficomps
sub
and
pop
mov
dec
adc
dec
xorl
cmp
sub
out
enter
push
fs
lds
cs
mov
pop
stc
or
inc
mov
inc
andb
loop
in
push
sbb
adc
lods
repz
es
inc
out
mov
mov
mov
repz
addr16
or
dec
mov
cmpsl
mov
cmp
into
xor
lods
sbb
iret
add
add
hlt
push
jg
ja
fisubrl
dec
xlat
mov
mov
test
xchg
push
addr16
test
jp
xchg
mov
and
cmp
jmp
das
mov
popf
std
pushf
out
in
sbb
xchg
rclb
int
popf
cmp
sub
dec
mov
in
or
and
stc
jg
mov
jo
call
mov
mov
stc
ret
neg
jecxz,pt
test
and
jae
mov
mov
loope
fmulp
pusha
subb
sbb
jns
push
scas
mov
or
in
data16
outsb
sub
cwtl
xchg
sub
cmp
gs
mov
jbe
jmp
inc
lock
rolb
ds
lret
sbb
mov
cmc
push
adc
sub
sbb
xchg
movsl
pop
xchg
clc
rorl
fsubs
jge
pushf
daa
into
mov
movsl
xchg
lods
ljmp
inc
test
cmpsl
cmp
mov
jno
jge
popf
es
cwtl
imul
arpl
fiadds
lret
mov
pop
inc
xchg
xchg
or
inc
xchg
sbb
push
push
sti
push
into
xchg
pop
pop
dec
mov
push
jmp
shrb
cmp
mov
fwait
cmpsl
push
ds
cmp
scas
shl
scas
cmp
nop
or
fldl
insb
mov
out
mov
addr16
or
or
push
out
mov
adc
pop
push
test
dec
pop
xchg
testb
cmp
xchg
mov
rol
add
or
frstor
pop
repz
push
dec
mov
and
add
xchg
push
add
jae
repz
rcll
hlt
popa
aaa
out
aaa
shlb
or
add
mov
fdecstp
cmp
outsl
mov
sahf
dec
in
lds
push
in
sub
mov
pop
cltd
ss
mov
sub
lea
mov
dec
push
push
adc
cmp
lret
stc
inc
pop
dec
sahf
mov
inc
or
cs
pushf
test
push
lea
xchg
popa
in
push
mov
jns
sbb
andl
xchg
dec
test
stos
in
mov
inc
imul
daa
jns
popa
adc
rol
jge
or
arpl
mov
push
inc
inc
out
movsb
jnp
ds
sbb
lock
rclb
jp
mov
pop
repnz
mov
mov
test
in
sarb
shll
loope
and
stc
sbb
dec
test
scas
fwait
pop
and
rorl
enter
imul
lret
js
bound
fisubl
dec
sub
jg
add
lcall
stc
cwtl
in
inc
dec
aam
dec
sub
stos
inc
and
test
sti
mov
add
test
shll
ja
jne
or
outsl
mulb
out
out
out
clc
fs
ret
scas
sbb
xchg
mov
pop
pop
vunpcklps
out
mov
outsl
rcrl
sub
mov
or
pop
push
leave
jns
xor
xchg
pop
aaa
test
popf
jo
or
add
dec
push
add
ja
adc
push
test
insl
push
xchg
shll
cmp
fucomi
add
or
push
dec
mov
repnz
push
inc
mov
pop
test
cmp
dec
add
test
or
inc
fnsave
adc
inc
leave
cmp
jb
mov
repnz
lods
not
adc
mov
jno
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
test
mov
loopne
lds
lahf
or
in
hlt
jae
cmpsl
sub
push
push
sub
lahf
push
sahf
sub
mov
imul
loop
pop
adcl
mov
jg
pop
adc
adc
add
ss
mov
popl
sbb
mov
xchg
not
add
cmp
xchg
mov
mov
scas
inc
icebp
sub
xchg
or
lock
rclb
dec
sbb
mov
mov
ret
gs
aam
rorb
mov
movsb
sub
or
hlt
dec
sbb
jecxz
xor
mov
mov
lods
mov
pusha
mov
popa
aam
rol
sbb
mov
cmpsl
outsb
sbb
inc
pop
xor
jnp
popa
ret
loop
xchg
mov
ljmp
mov
jmp
or
ret
inc
lds
cli
dec
xchg
inc
cmc
adc
mov
rclb
sub
inc
jge
and
sbb
fstp
pop
inc
xchg
or
inc
test
les
loop
xchg
movsb
movsl
arpl
rclb
cwtl
sub
leave
lahf
addl
push
es
ficompl
adc
jno
inc
mov
jle
lret
pop
sub
mov
lods
lods
xchg
ret
insb
mov
pop
imul
xor
cmp
and
dec
mov
push
lods
add
adc
dec
imul
add
faddl
inc
rcpss
lock
es
pop
mov
in
ret
fbstp
mov
adc
cmpsb
dec
dec
inc
pusha
add
mov
outsb
jno
aas
sbb
or
mov
scas
jbe
pushf
inc
mov
pop
mov
orb
pop
push
pop
inc
mov
and
dec
cmc
mov
jne
mov
and
mov
lret
or
cmp
or
ficomps
xor
mul
rolb
and
xor
rcll
ret
xchg
imul
rcll
add
jg
dec
insb
int3
push
cmp
add
std
pop
and
daa
fdivl
sbb
mov
cmc
lcall
push
xor
nop
in
insb
imul
cmp
aam
pop
sbb
stos
xchg
ds
pop
xchg
xchg
dec
sub
dec
lcall
fwait
add
add
call
push
mov
mov
pushf
lods
lcall
sub
jge
cmpsb
add
lds
cmp
pop
or
jbe
sub
sub
jae
pusha
xchg
pop
mov
popf
pop
push
pop
aaa
aaa
add
push
jno
xchg
in
int
and
jecxz
mov
addb
pop
iret
stos
fdivrl
scas
push
or
call
test
cld
dec
test
push
cmpsb
pushf
jl
inc
xor
mov
dec
sahf
add
cmp
and
fimull
lcall
into
pop
sbb
mov
insl
loop
pop
out
jbe
or
mov
xlat
dec
lcall
add
xchg
sbb
xchg
shll
inc
test
jae
outsl
je
xor
gs
dec
xor
daa
loopne
mov
mov
gs
push
aad
hlt
push
mov
in
sti
bnd
jo
shlb
xchg
mov
insb
arpl
and
scas
lret
mov
loop
pop
inc
lret
and
aam
xor
mov
add
je
sbb
push
xchg
xchg
xchg
xchg
fdivrl
shlb
cmp
sub
cltd
cltd
add
push
fldt
stc
scas
mov
inc
arpl
outsb
adc
lahf
popa
cld
xchg
not
pop
and
iret
cmp
lcall
adc
ljmp
mov
mov
roll
cmp
out
imul
rorl
repnz
mov
flds
add
push
push
scas
in
xchg
sub
enter
inc
ja
int
popa
dec
enter
mov
int
inc
call
dec
adc
enter
sarl
cmp
push
mov
loop
stc
cmpl
add
in
test
lahf
scas
out
pop
loopne
mov
and
sahf
mov
inc
shrl
shlb
in
ret
xchg
scas
cmc
mov
xor
add
or
bound
sbb
mov
jmp
mov
cmp
sub
pushf
int
sbb
mov
dec
sbb
xor
stos
push
les
outsl
sbb
push
das
leave
cwtl
and
sbb
push
and
out
stos
ror
ljmp
data16
cwtl
subb
xlat
fcmovnbe
popa
scas
in
sbb
incb
mov
movsb
push
cmp
xchg
xchg
or
adc
dec
iret
dec
push
push
cwtl
inc
cmp
mov
cmp
ficompl
test
dec
sbb
pusha
test
push
push
sbb
fs
outsl
xor
mov
jp
jl
xor
xchg
jle
clc
stos
sub
test
repz
aam
pop
jne
mov
inc
ljmp
test
xor
mov
adcl
dec
push
inc
repnz
push
push
repnz
xorl
imul
stos
jo
mov
add
jno
orl
add
push
adc
inc
mov
mulb
test
cmp
pop
lea
in
cmp
lods
inc
stos
inc
lock
dec
pop
sbb
cmpsb
popl
in
xor
int
sbb
jmp
je
fstp
mov
test
movsl
dec
xchg
cmp
lea
mov
push
sbb
iret
jnp
cmp
out
push
xor
enter
fwait
mov
mov
cmp
jp
dec
jmp
inc
mov
or
das
sub
movnti
cmpsl
shll
ror
mov
rorb
jle
stc
sub
fisubrs
bound
mov
aam
mov
popa
vpshufhw
push
loopne
fdivs
popa
xor
in
jle
dec
add
xchg
jmp
inc
insb
mov
fidivrl
inc
out
xor
xchg
gs
ficompl
inc
xor
rclb
sub
inc
jno
ret
fiaddl
das
jno
pop
rolb
les
lret
pop
mov
enter
ja
and
sbb
sub
mov
repz
cmovo
and
push
mov
sub
ret
mov
mov
call
xor
fildl
xchg
pushf
dec
sti
jae
or
xor
and
lret
jns
daa
mov
mov
in
popa
loopne
jnp
or
jbe
inc
aaa
imul
ljmp
pop
mov
xor
and
inc
and
cmp
popf
xchg
xchg
leave
in
mov
mov
xor
arpl
mov
enter
gs
sbb
icebp
aam
icebp
mov
loope
popf
fbld
lea
int3
daa
sbb
test
sbb
std
jb,pn
sub
into
lods
icebp
imul
xchg
sbb
out
mov
push
movsl
sti
lods
repz
adc
xchg
xchg
adc
or
or
cmpsl
adc
or
pusha
sbb
roll
bound
inc
or
das
push
faddp
ret
mov
out
out
or
test
sahf
mov
sarl
movsl
dec
ret
inc
stos
jae
pop
dec
in
sbb
mov
push
sbb
or
outsb
jmp
mov
mov
mov
out
pop
fucomip
sbb
xor
inc
mov
dec
mov
mov
cmp
xor
pop
inc
ja
nopl
fdivrs
sbb
stc
mov
lods
js
testb
and
idiv
std
je
dec
inc
movsl
or
mov
dec
loop
mov
repz
push
push
add
push
inc
sbb
dec
imul
mov
sbb
lret
scas
lods
inc
mov
into
adc
or
lret
inc
xchg
pop
cld
xor
insl
xor
syscall
or
stc
sub
inc
stos
inc
push
outsl
pop
pop
adc
inc
je
adc
cmpsl
arpl
mov
cmpsb
in
sbbl
aad
jb
dec
xchg
mov
test
and
mov
jo
xlat
dec
add
cmp
xchg
rorb
push
pushf
out
pop
je
mov
jno
ja
push
addr16
subb
sub
lods
cmp
adc
mov
inc
addl
imulb
mov
or
mov
nop
add
fwait
out
fldt
fiadds
pop
cwtl
mov
sub
lret
sti
fcompl
ljmp
loop
mov
mov
pop
xchg
ds
lret
repz
leave
popa
mov
hlt
push
mov
dec
inc
in
popa
outsb
add
sbb
outsl
xor
jl
lds
xchg
sti
mov
pop
mov
or
or
jg
data16
xchg
mov
dec
stos
arpl
dec
push
adc
loop
nop
fnstcw
jg
push
aaa
nop
pop
mov
and
mov
mov
cltd
pop
sub
pop
inc
pop
mov
repz
pop
pusha
ja
fs
xor
ljmp
or
movsb
out
mov
xor
and
imul
fwait
cmp
or
in
enter
inc
cmp
gs
inc
add
andl
fsubr
addr16
popf
xorl
cmp
stos
sbb
mov
test
fs
cmp
mov
imul
adc
sub
pop
pusha
sbb
dec
mov
xchg
jnp
loop
stc
xchg
jno
imul
jle
mov
pop
rcr
sbb
mov
subb
pushl
push
cwtl
jnp
push
push
inc
add
mov
and
aaa
pushf
stos
stc
ljmp
adc
ret
fs
pop
adc
mov
rorb
push
xor
mov
or
or
jo
mov
pusha
jbe
pop
es
adc
push
rcrl
in
xorb
cs
jb
jge
arpl
imul
add
jmp
jecxz
mov
dec
movl
bound
mov
rcrb
xchg
lds
movsb
mov
cmc
data16
and
sbb
mov
jae
dec
push
and
sbb
test
imul
int
and
mov
fiadds
cmp
push
jmp
xchg
je
fistpll
lcall
lret
out
push
pop
imull
mov
push
push
mov
pop
adcb
lods
ret
nop
lods
add
mov
insl
fwait
test
andps
sbb
cmp
and
push
dec
clc
push
fcmovne
hlt
xor
add
sub
mov
cmp
lods
pop
push
xchg
js
sub
jb
jae
outsb
jns
bound
lea
cmp
jo
lret
mov
mov
sbb
pop
mov
ret
inc
std
add
cli
add
cltd
jo
dec
dec
repz
dec
in
test
arpl
leave
daa
pop
inc
adc
add
loopne
lods
aaa
adc
mov
jo
xchg
js
push
lea
dec
mov
adc
mov
and
pop
mov
adc
jo
stos
dec
cmp
sarb
dec
dec
leave
outsw
or
div
dec
je
aad
loop
loope
or
repz
inc
mov
imul
jns
jmp
xor
sbb
dec
clc
cwtl
leave
sub
add
xchg
mov
mov
jmp
dec
subb
hlt
fcmovb
gs
mov
stc
sub
push
subb
push
mov
stos
xchg
addb
dec
cmpsl
jo
inc
iret
mov
jo
imul
ficoms
mov
test
mov
mov
arpl
pmullw
cwtl
mov
dec
mov
call
xchg
sub
int
scas
movl
movsl
test
mov
push
bound
test
popa
rcr
mov
push
inc
xor
xchg
mov
mov
inc
lret
daa
xor
popa
jge
es
and
cmp
roll
inc
pop
dec
mov
in
scas
cmp
cs
mov
repz
cli
jmp
popf
mov
mov
stos
fcmovu
repnz
inc
cmc
stc
fs
push
mov
es
and
pop
mov
and
std
jmp
jp
jne
push
cmp
xlat
lahf
mov
xchg
movsl
inc
fwait
mov
xlat
outsl
mov
or
ret
ss
cmpsl
or
and
mov
gs
mov
xor
dec
int
popf
xor
mov
adc
jne
inc
sbb
jg
xchg
arpl
and
push
in
inc
sub
inc
mov
pop
les
sbb
fnstcw
loope
jne
mov
adc
and
lods
push
movsb
mov
cmp
mov
inc
fsubrl
imul
add
addr16
stos
imull
mov
pop
xchg
or
loopne
inc
or
push
cs
leave
loop
ret
fsubs
xor
push
cmp
movsl
sbb
or
cltd
insl
push
jecxz
and
xchg
pushf
repz
and
es
lea
cwtl
add
or
adc
daa
dec
jno
aaa
int
loop
inc
jecxz
add
add
push
jge
adc
in
xchg
outsb
mov
ficoml
adc
movsb
sti
mov
mov
ja
std
pusha
loop
mov
movsb
fdivrl
jle
mov
ret
add
loope
ret
inc
out
sbb
pop
aad
cltd
loopne
or
xor
xchg
xchg
sub
call
dec
fsubr
push
hlt
or
pop
mov
hlt
rcll
sub
xchg
decb
faddl
and
and
sbb
mov
cmp
sub
or
loopne
mov
cmp
jnp
cmp
ror
or
pop
mov
out
push
xchg
mov
jecxz
je
lea
sbb
ret
push
loopne
mov
out
jns
xor
and
inc
mov
xchg
stos
out
mov
sub
imul
fimull
fisttpll
dec
mov
add
fisttps
cmpsl
jno
jge
and
dec
addb
mov
les
add
mov
mov
xchg
and
repz
imul
add
cmp
sbb
add
pop
test
push
rcrb
lea
pop
pop
divb
imul
pop
mov
pushf
jmp
add
and
out
pop
fsub
int3
bnd
sbb
mov
adc
in
inc
mov
push
sahf
pushf
and
mov
cwtl
mov
das
movsl
xlat
movsb
push
test
push
lahf
mov
ficompl
and
cmp
pop
mov
imul
daa
cmpsb
jmp
mov
inc
repz
out
outsb
outsl
sub
jp
sbb
in
push
dec
dec
enter
xlat
shlb
sbbl
repnz
and
mov
or
xchg
pop
cmp
test
clc
sub
jp
leave
mov
aam
jmp
pushl
dec
add
jne
in
clc
movsb
dec
pop
add
mov
stos
ja
and
and
push
insb
mov
inc
pop
pop
sti
jp
mov
insb
out
out
push
data16
sub
mov
cmp
jnp
jnp
sub
ror
pop
test
fisubrs
cld
mov
les
push
or
insb
ljmp
jnp
popa
bound
push
pusha
xchg
mov
repz
aad
sahf
dec
in
inc
mov
or
xor
daa
sub
jge
push
add
test
fdiv
mov
pop
int
add
or
stc
pop
outsl
jmp
sbb
or
lcall
push
ret
sub
ror
popa
or
lods
arpl
mov
push
jecxz
pop
sub
arpl
fldenv
loopne
mov
and
leave
pop
or
dec
xchg
xlat
addb
dec
cmp
mov
push
lret
js
mov
sarl
rclb
push
fucom
insb
movsl
hlt
pop
cmp
sahf
mov
out
outsb
rcl
and
push
mov
add
lods
enter
cmp
stos
add
pop
mov
lods
sbb
jmp
movl
mov
xor
inc
insl
sbb
dec
mov
inc
mov
pop
cltd
inc
or
stos
mov
scas
cmp
or
mov
add
mov
jp
lahf
nop
xchg
push
shl
mov
inc
jmp
mov
mov
iret
imul
push
fcoms
inc
inc
leave
aaa
cmove
enter
addl
shl
loope
imul
fxch
ds
in
stos
and
fisubrs
ret
dec
mov
jge
in
sub
js
jge
mov
clc
and
lret
fidivl
into
adc
mov
aaa
cmp
jmp
mov
imul
pop
inc
clc
adc
xor
lds
lds
mov
push
fs
fisttpl
cli
js
mov
push
ja
out
cmp
outsl
out
pop
mov
outsb
add
jecxz
push
mov
jo
cmc
add
xchg
out
hlt
dec
arpl
int
push
mov
rorl
addr16
or
jno
lret
inc
sub
xchg
mov
lea
rorb
hlt
xor
or
pushl
mov
and
or
lret
add
pushf
push
push
mov
shlb
ljmp
mov
cmpsb
bound
jecxz
iret
sbb
pop
dec
sub
in
movsl
fcmove
test
add
mov
inc
outsl
mov
mov
imul
mov
loop
or
xchg
fs
pop
popa
test
inc
jle
adc
pop
out
insl
or
jl
cwtl
imul
sub
in
mov
loopne
or
gs
push
sbb
mov
icebp
pop
out
mov
imul
mov
aas
xlat
cmp
rclb
jne
jns
pop
aaa
aas
testb
call
xchg
push
inc
lret
dec
es
out
cmp
adc
dec
outsl
test
jo
inc
mov
xorl
int3
fcoml
out
pop
fdivr
xchg
out
dec
jbe
jae
push
shll
int
clc
adc
mov
scas
inc
mov
insl
mov
add
mov
fmull
faddl
or
pop
repz
dec
jae
mov
jmp
dec
lea
orb
sti
lods
cs
sbb
aas
lds
daa
pop
sahf
mov
sub
lahf
inc
cmp
fldl
pushf
lock
mov
bound
and
mov
mov
icebp
jecxz
adc
sti
mov
std
mov
shll
mov
xchg
mov
xchg
sub
cmpsl
push
xor
sub
std
or
mov
outsb
popa
push
jp
rorb
sub
xchg
insb
js
out
sub
mov
xor
lahf
aas
lods
stos
mov
movl
xchg
outsb
out
pop
sbb
push
test
cs
or
push
in
out
iret
xchg
and
insl
fisubrs
pushf
loope
cmp
int3
je
fidivrs
das
add
pop
or
out
mov
sub
stos
jecxz
and
decb
loop
lock
sbb
cld
sub
arpl
pop
jnp
ret
push
xor
lahf
mov
push
aam
jnp
push
cmc
adc
mov
aas
iret
adc
or
sbb
ret
mov
jl
adc
stos
in
mov
xor
mov
popa
and
pop
outsl
cld
cwtl
add
fcmovu
cmp
testb
ret
fadds
dec
dec
repnz
adc
or
or
movsl
insb
imul
adc
add
dec
enter
xchg
test
xchg
ret
icebp
pop
push
loopne
xor
ss
fistpll
loope
push
mul
fmulp
aaa
mov
test
outsb
mov
jmp
inc
cmp
add
ljmp
fsubl
lea
push
pop
push
loope
loop
in
testb
add
aas
les
push
dec
int
stos
cld
xchg
lods
mov
ret
in
push
sub
adc
bswap
jmp
addb
xor
sahf
dec
pop
pushf
xchg
fwait
and
loopne
jg
mov
dec
repz
add
xchg
xchg
and
add
je
or
mov
in
mov
mov
dec
xor
test
sub
ret
cld
nop
dec
xor
push
xor
push
mov
arpl
or
ss
inc
adcb
in
pop
scas
cmp
or
insl
sahf
mov
imul
rclb
adc
mov
xor
fstpt
ret
push
out
cmp
lret
inc
stos
adc
xor
rcl
sub
mov
cltd
ret
mov
lret
insl
or
insl
clc
out
push
push
mov
mov
mov
in
loop
sub
lret
inc
shl
xlat
lahf
add
pop
xor
data16
cltd
imul
xor
movups
jb
faddp
aad
leave
scas
xchg
cmpsl
xchg
aas
add
fbld
nop
shlb
add
xchg
inc
cmpsb
into
loopne
sub
pop
push
iret
xchg
and
hlt
aas
mov
mov
cmc
cmp
fdivl
mov
pop
mov
mov
jp
shll
push
popf
mov
nop
jl
push
pop
scas
pop
and
sbb
jmp
and
xlat
mov
mul
fcompl
inc
or
ror
scas
outsl
jmp
push
xchg
or
inc
adc
fsubl
add
cli
cli
mov
push
adc
cli
push
sub
jle
pusha
mov
in
mov
push
add
and
pop
mov
cmpsb
sahf
pop
shlb
cmp
insl
insb
and
pop
mov
test
or
xchg
rcrl
or
popa
popf
rolb
outsl
jno
or
adc
rclb
push
adc
push
mov
outsb
mov
add
mov
xchg
cwtl
repnz
out
int
xchg
sbb
rorl
call
xor
les
jle
lret
aad
loopne
outsb
out
aam
aaa
roll
mov
jns
mov
fmuls
sbb
repz
fcomps
loope
aad
dec
add
fildl
stos
dec
leave
in
movsb
jb
insb
andl
lahf
sbb
pop
int3
pop
arpl
stc
or
lock
sbb
lds
das
daa
and
jb
push
popf
insb
mov
cmc
adc
xor
mov
dec
int
cmp
dec
inc
sub
enter
sub
cmp
xor
jmp
inc
inc
jnp
ret
push
and
test
xchg
fdivp
shlb
cmpb
addr16
ret
sti
dec
xor
mov
dec
sbb
outsl
nop
nop
push
jae
inc
orb
pop
or
xor
jne
sub
dec
sub
adc
loop
xchg
pop
add
cltd
mov
scas
fsubs
dec
add
insb
mov
jae
mov
hlt
push
ds
sub
ds
push
mov
cmp
sar
xchg
lret
lock
push
cmpsl
mov
imul
add
xchg
subl
sub
push
fld
pushf
mov
rorl
mov
movb
pop
outsb
jns
sbb
add
pop
fisttps
mov
pop
inc
fidivl
shll
scas
gs
fsub
and
cmp
arpl
call
inc
jp
sbbl
idivl
jae
mov
loop
dec
shl
stos
std
xor
add
out
xchg
fxch
arpl
mov
scas
gs
sub
movsb
push
cmc
cmp
decb
and
loope
pcmpgtw
cld
inc
stos
icebp
adc
sbb
mov
lods
dec
cmc
outsl
nop
mov
inc
push
mov
gs
hlt
popa
bound
jne
sub
xchg
or
aam
add
cmp
pop
rcr
jb
mov
xor
hlt
test
cli
mov
sbb
mov
ficoms
dec
xor
inc
mov
adc
ret
pop
mov
mov
fcmovnbe
imul
stos
popa
push
push
mov
ss
cltd
das
icebp
add
cmpsl
cmp
jne
cmp
mov
cmp
out
pop
and
ja
sub
in
mov
lcall
and
or
adc
repnz
imul
and
jb
push
push
das
fwait
adc
lods
sahf
fsubl
adc
push
dec
jmp
pop
fiadds
rcl
rcll
es
icebp
or
outsl
dec
mov
xor
pusha
mov
roll
in
mov
xchg
cltd
push
xchg
cld
out
popf
mov
mov
enter
or
outsb
aaa
adc
pop
jl
fcmovbe
outsb
add
std
shrl
iret
stos
test
jl
aam
xchg
sub
int
jnp
and
jae
mov
mov
xchg
push
lcall
sub
aaa
out
add
pop
mov
inc
mov
or
jbe
add
mov
andl
clc
dec
cltd
lret
pushf
in
je
aas
call
imul
inc
aaa
iret
arpl
sbb
lret
xor
lret
ficoml
jno
ficomps
fwait
test
test
fs
inc
fstps
or
cmp
adc
push
nop
cmc
pusha
jo
rcl
cli
hlt
sub
adc
mov
imul
lods
cs
incb
icebp
jo
jbe
inc
cmpl
shll
movsb
jge
jb
bound
xor
jg
push
sbb
jmp
lcall
jae
inc
xlat
cmp
sbb
mov
push
ror
outsl
xchg
pop
in
inc
cmp
lods
mov
mov
pop
pop
int3
scas
lahf
sahf
push
fimuls
subl
rcrl
xor
mov
inc
rcl
xchg
inc
icebp
aaa
test
xchg
inc
inc
fidivs
jle
mov
push
mov
addl
flds
or
add
mov
movsb
sub
xor
fidivs
rcr
mov
cmp
jno
ficoml
fidivl
fsubrl
loopne
push
inc
pop
rcr
cmp
adc
jb
jle
or
je
mov
adcl
insl
mov
mov
inc
xor
cs
adc
clc
xchg
in
sti
push
movsb
mov
lds
mov
xor
bnd
data16
sbb
pushf
lcall
sbb
dec
add
js
orb
sub
add
inc
dec
jmp
adc
rcrb
xchg
in
inc
inc
xchg
cwtl
xchg
xchg
scas
insl
push
cmp
dec
scas
outsl
xchg
cs
mov
push
cwtl
inc
loope
adc
inc
aam
and
jecxz
mov
jnp
cmp
and
fld
push
fbld
shufps
dec
sti
xchg
mov
js
dec
xor
cmp
outsl
sbb
xor
push
dec
popa
push
mov
or
enter
dec
and
lret
fldcw
je
adc
jmp
mov
rorl
inc
mov
push
cmp
test
scas
xchg
aam
rcll
push
add
into
dec
nop
inc
sub
ret
iret
push
sbb
les
les
cli
repz
inc
cmc
push
pop
je
mov
jb
mov
adc
fisttpl
add
scas
push
loope
xor
lcall
adc
xor
sub
or
gs
pop
xchg
add
cmpsl
pop
pop
xchg
pop
fmuls
xor
inc
lret
pop
fistpll
stc
mov
mov
ficomps
lea
cltd
inc
xchg
xor
or
cmp
add
arpl
inc
sahf
xor
ljmp
or
sar
aad
fisttpll
incb
ja
xchg
mov
repnz
test
sub
mov
lahf
mov
ss
repnz
test
loopne
scas
rcrl
cmp
stos
xchg
arpl
add
jns
push
movsl
ss
xor
sbb
cmp
hlt
mov
pop
loop
inc
pop
mov
or
pop
int
and
loope
iret
mov
xor
mov
cmpl
idiv
shrb
sbb
lahf
cmp
repz
test
bnd
test
xor
cmp
movsl
dec
cmp
loope
or
mov
or
in
addr16
xchg
or
pop
in
push
mov
mov
lret
je
push
push
xor
int3
sub
insl
stc
cwtl
test
loop
cs
mov
dec
stos
push
in
dec
xchg
in
inc
dec
inc
sbbb
dec
fistpll
push
fs
icebp
jae
sub
mov
ds
pushf
and
xchg
subb
pop
imul
aad
in
add
js
fs
jnp
lret
xchg
xchg
gs
test
sbb
dec
aas
dec
popf
pop
fsubl
faddl
jno
repz
and
call
or
orb
xlat
rcl
daa
lock
nop
jnp
fcoml
in
cmp
inc
je
and
dec
es
sub
fdivrs
mov
sub
fs
jle
stos
aad
cwtl
mov
pop
popa
arpl
cmpsb
mov
push
inc
rcll
rorb
jp
fsubs
cwtl
into
mov
inc
mov
mov
push
pop
js
dec
pop
outsl
pop
mov
inc
sbbl
mov
inc
and
xchg
push
jmp
gs
repz
and
and
fildll
adc
sub
leave
jl
stos
xchg
mov
in
insb
lret
ds
in
fs
push
imul
adc
dec
mov
inc
inc
fsub
scas
or
cmp
mov
and
div
lcall
xchg
push
mov
sbb
or
rcr
xor
mov
push
inc
je
dec
mov
mov
push
inc
pop
in
fisttps
leave
jno
rcr
jp
fcom
lea
dec
inc
outsb
push
nop
or
popa
mull
enter
and
sub
movsb
adc
test
mov
pop
mov
or
ljmp
shr
lea
pop
outsl
repz
mov
les
xor
cmp
dec
movsb
mov
decb
or
sbb
mov
shll
inc
out
push
in
xlat
mov
mov
fnstenv
mov
lds
mov
add
lods
sub
pop
cmp
sti
rcrb
aaa
imul
mov
xchg
dec
mov
inc
jne
repnz
shll
cmp
arpl
js
incl
cmpl
jns
add
xlat
out
sub
dec
lret
lcall
sbb
xor
scas
mov
repz
ds
sbb
daa
and
shr
lods
push
push
fadds
xchg
lcall
mov
mov
das
add
push
xchg
jne
hlt
movsb
cltd
push
mov
js
clc
pop
mov
icebp
xlat
cltd
mov
mov
pusha
js
inc
cmp
les
stos
adc
mov
inc
xchg
mov
pop
cmpsl
cltd
mov
shrb
fwait
les
xrelease
fwait
push
cmpsb
xchg
mov
or
cmp
jecxz
lahf
dec
out
mov
fwait
jae
or
cmp
add
sub
pop
jl
dec
xlat
adc
ja
and
mov
pop
mov
arpl
inc
daa
fnstenv
iret
daa
jg
mov
scas
push
jb
sub
sub
dec
mov
or
movsl
mov
cld
scas
sub
in
pop
aad
out
loop
or
dec
enter
shl
jecxz
adc
repz
inc
fwait
sbb
push
add
mov
addr16
std
adc
shrb
sbb
pop
lret
push
pushf
ss
adc
loope
push
jns
ljmp
and
lods
fidivrs
add
adc
mov
mov
and
shrb
je
sbbb
inc
test
cmp
and
movsl
jp
sub
mov
xchg
clc
mov
leave
fwait
push
fisttpll
lea
div
test
xchg
and
sub
pop
rorb
xlat
push
push
mov
cmp
shl
mov
es
lret
xchg
call
jmp
fmul
movsl
in
stos
push
int
xchg
ret
loop
stos
mov
addb
dec
lods
lods
iret
into
in
push
pop
shll
and
out
insl
call
pop
mov
iret
jecxz
std
sub
add
add
add
add
add
add
inc
xchg
pusha
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
insb
mov
add
mov
