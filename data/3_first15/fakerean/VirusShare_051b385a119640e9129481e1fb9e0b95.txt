push
mov
push
andl
push
push
push
mov
mov
mov
shr
sub
mov
and
cmp
jne
mov
mov
rol
and
mov
sar
push
and
mov
shl
pop
sub
mov
jne
mov
xor
mov
div
add
mov
sub
jmp
mov
xor
and
push
pop
mov
xor
div
mov
mov
sub
shl
mov
sar
or
mov
xor
incl
roll
mov
inc
cmpl
jb
pop
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
push
push
call
mov
push
call
mov
push
pushl
call
mov
push
push
push
push
push
push
call
cmp
jne
movl
jmp
jmp
andl
cmpl
je
mov
mov
movl
jmp
mov
xor
push
pop
div
mov
mov
shr
mov
mov
or
mov
mov
xor
push
pop
div
mov
mov
sar
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
mov
push
mov
mov
call
pop
cmp
je
mov
mov
xor
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
imul
mov
mov
add
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
push
call
pop
pop
leave
ret
int3
int3
fmull
int3
dec
jmp
adc
jp
arpl
jg
repnz
call
nop
or
enter
xor
sahf
sub
insb
fstpt
enter
ja
mov
lret
int3
adc
lahf
mov
push
mov
jbe
push
xchg
test
mov
inc
out
mov
andl
mov
xchg
pop
ret
bound
push
push
sbb
dec
mov
mov
add
fcompp
mov
sbb
dec
mov
ret
je
imul
fsubrp
xchg
test
and
xchg
add
dec
out
xor
adc
out
jecxz
test
sub
das
pop
dec
and
xchg
or
nop
fnclex
gs
pop
xor
icebp
sti
and
push
insl
or
pop
mov
out
lea
jne
fnstenv
inc
add
inc
out
dec
mov
add
scas
mov
and
pop
and
mov
lods
faddl
rcl
and
inc
fmull
dec
dec
es
out
mov
xchg
mov
popf
push
repz
fdivrl
icebp
adc
cmp
mov
fwait
inc
adc
or
sahf
enter
ds
sub
push
mov
lahf
loope
push
xchg
jle
mov
rclb
mov
pop
aaa
jnp
xorb
mov
sub
imul
mov
pop
out
popa
scas
repnz
jne
fsts
into
inc
pop
inc
sub
sbbl
push
jnp
out
pop
in
cmp
das
cmp
xchg
lcall
mov
pop
cmp
aam
stos
add
and
xchg
stc
or
fstpl
jmp
les
aaa
add
lret
cmpsl
xchg
ret
popf
pop
mov
testl
imul
mov
add
cmp
sahf
jl
or
adc
mov
sub
ret
mov
rorb
or
cmp
jle
mov
mov
fstpl
cltd
pop
xor
mov
sub
sub
cs
das
icebp
dec
loopne
mov
xchg
testb
mov
mov
lods
xchg
dec
dec
ret
mov
js
popa
mov
adc
add
pop
lods
lock
push
xlat
shll
pushf
jecxz
pushl
pop
add
and
xchg
ret
pop
push
cmp
mov
repnz
xchg
sti
cmp
pop
add
sub
leave
pusha
out
out
add
pop
rolb
icebp
inc
add
lds
mov
cld
mov
push
stos
or
js
fistps
out
mov
fdiv
push
repz
pop
rclb
je
outsb
imul
cmpsb
stos
addr16
pop
push
cmpsl
lret
add
stc
std
xor
cmc
cmp
not
dec
dec
je
jnp
mov
gs
jne
adcb
mov
pop
adc
jp
ret
cmp
lahf
cmp
lock
in
push
mov
outsl
std
xchg
inc
pop
stc
xrelease
test
xchg
ja
sbb
mov
mov
xor
adc
mov
psrad
adc
mov
dec
push
in
out
mov
mov
xchg
jae
xchg
pop
mov
movsw
sahf
and
mov
loope
in
and
jmp
mov
sbb
aaa
insl
sbb
repnz
mov
xor
lea
fsub
add
jbe
ret
lods
dec
mov
pop
emms
icebp
ljmp
sahf
add
in
jg
jne
xor
and
mov
stc
lds
or
outsl
pop
or
mov
adc
popa
aaa
or
or
lock
or
popf
lret
rcrl
dec
add
jmp
fimuls
daa
enter
sub
imul
fcomps
xor
and
out
gs
in
ret
repz
movsb
adc
xlat
add
imul
fsubl
in
dec
push
into
push
repnz
push
sbb
jg
adc
add
adc
mov
mov
jbe
and
add
dec
js
jecxz
mov
add
adc
mov
iret
mov
mov
rolb
adc
rolb
jmp
mov
les
dec
mov
imul
and
or
xchg
imul
test
or
pop
xor
insl
push
jnp
popf
cmpsl
add
dec
and
or
sbb
lret
movsb
cmp
add
nop
test
xor
orb
dec
gs
sub
mov
push
ret
mov
xor
aad
shll
sahf
push
imulb
mov
insl
data16
mov
lods
stc
outsl
or
mov
out
shll
inc
inc
adc
or
inc
sbb
xchg
add
lret
and
test
inc
pop
fldenv
push
lods
dec
nop
jmp
lock
jp
test
mov
shl
movl
out
push
fsub
and
push
push
pop
cmp
sbb
xchg
clc
push
xor
nop
cld
dec
scas
imul
mov
push
jmp
push
mov
push
or
mov
cmp
daa
xor
xchg
and
inc
xor
mov
pop
daa
cmpsl
ds
lea
push
insl
shrb
xchg
adc
movsb
out
mov
fwait
add
outsb
mov
push
dec
xlat
int3
mov
movsb
pop
push
cmp
add
pop
arpl
mov
and
roll
push
xchg
fxch
fisttpll
sub
loopne
mov
psubd
fldenv
cmpsb
push
sub
test
mov
shrl
stos
repnz
jle
movsl
sub
out
ljmp
in
mov
pop
ljmp
adc
lds
subl
dec
lods
lods
jne
jne
testl
sbb
inc
daa
hlt
loope
inc
pop
push
jl
mov
add
push
xor
push
lea
xchg
mov
out
lods
jmp
add
push
xor
add
outsb
push
dec
push
xchg
add
and
push
mov
dec
adc
ljmp
clc
mov
push
mov
ss
fdivp
cmp
daa
add
pop
jno
mov
lahf
js
fdiv
cmp
outsb
mov
cmp
sub
jmp
pop
jecxz
lret
dec
cwtl
jne
jle
pop
pop
aas
arpl
ljmp
movsl
xchg
leave
mov
loop
data16
call
andl
push
cli
dec
dec
jae
and
mov
aad
xchg
lods
lea
ds
lret
iret
clc
ret
mov
aaa
mov
aam
test
dec
stos
mov
push
or
shlb
cmc
mov
aas
dec
push
into
adc
xor
hlt
out
loope
ja
lcall
pop
pop
mov
fstpl
push
loope
mov
xor
or
push
push
xor
stc
imul
jno
movsb
inc
lods
and
mov
aam
dec
aam
lea
test
inc
adc
iret
sbb
lret
sbb
decl
mov
dec
outsb
pusha
fbstp
jo
lea
loopne
and
and
cmpl
mov
loope
outsb
cli
mov
sbb
incb
fcmovnb
addl
xchg
je
sub
jne
ficomps
sbbw
sbb
imul
inc
jnp
enter
repnz
mov
push
arpl
mov
cmp
and
adc
aad
sub
push
sbb
outsl
or
or
add
inc
jl
test
jp
fwait
in
lods
mov
cmp
arpl
scas
jl
cmp
dec
fcoms
shrd
into
mov
add
jae
push
push
gs
hlt
lds
jnp
test
mov
cli
arpl
stc
jb
push
arpl
imul
sub
push
mov
mov
icebp
xchg
in
popf
cmp
and
mov
jno
xor
fnstcw
js
and
jl
add
dec
or
test
fwait
xor
sbb
aas
fidivl
aaa
out
fucom
add
cmp
insb
push
sub
jmp
ret
dec
cs
adc
es
hlt
or
out
xchg
out
movsl
dec
incl
or
ret
daa
popa
int3
adc
jo
fdivl
imul
dec
fucomp
and
out
lret
xchg
fsubr
push
enter
mov
stos
stos
icebp
aam
mov
jnp
push
push
jg
jg
dec
cltd
cwtl
push
pcmpgtd
test
and
push
int3
sub
fdivs
jecxz
clc
or
fdivl
sub
sbb
add
repnz
je
cs
pop
movsl
in
pop
insb
loopne
sbb
dec
sub
test
and
pop
adc
and
lock
jb
imulb
pop
fcmovbe
loope
pusha
mov
in
inc
dec
orl
bnd
outsb
aaa
cmovle
jecxz
inc
xor
test
subb
mov
shr
cmp
icebp
test
rclb
sub
dec
lea
cmp
into
lock
fmuls
xor
nop
sbb
addb
test
adcl
push
js
sbb
mov
adc
xor
out
jle
and
inc
icebp
int3
cmp
cmp
mov
aam
pop
sub
pushf
mov
in
lea
pop
push
hlt
dec
cmc
adc
mov
pop
and
fidivl
pusha
je
inc
mov
fcmovne
sbb
loope
pop
push
push
aam
or
bound
sub
pop
xor
ret
xor
inc
or
mov
jno
es
add
mov
movsb
xor
imul
jns
orl
mov
and
leave
fisttpl
cmp
sbb
xor
xchg
stos
adc
jg
fs
loopne
mov
jbe
cli
scas
and
cmp
push
pop
test
sahf
aas
out
push
ljmp
nop
ds
subl
mov
dec
or
bound
cmp
or
shrb
add
pop
rcl
sbb
test
mov
repz
cmp
mov
add
in
adc
jge
jle
adc
jnp
mov
int3
fmull
adc
loopne
ja
cwtl
cld
xchg
jge
gs
xchg
xchg
nop
sub
pop
test
stos
loop
push
cmp
jb
aas
stc
sub
repnz
add
out
xchg
prefetch
push
pop
cltd
fistps
popf
insl
and
mov
adc
call
sti
cmp
push
fimull
repz
cmpsl
mov
lock
mov
out
enter
cs
inc
mov
adc
jg
sbb
sub
cmpsl
cmp
stc
loope
push
sbb
add
mov
cmp
fdivl
insb
stos
jge
adc
aaa
pusha
inc
sbb
test
jb
imul
mov
mov
mov
ja
js
int
jbe
sarl
push
movsb
dec
jno
pop
aam
adc
or
imul
push
add
xor
jmp
addr16
xchg
jecxz
stc
push
add
jge
test
bound
fmull
mov
clc
or
jg
mov
je
out
cwtl
cli
add
negl
cs
shrb
sbb
test
inc
loopne
fnsave
ret
push
cs
push
pusha
jnp
push
inc
pop
test
pop
mov
out
jp
xchg
push
cmp
mov
jl
movsb
out
and
mov
xchg
and
insb
je
sahf
ljmp
lea
enter
xchg
push
cmpsb
lret
dec
push
cmp
jl
in
jg
and
outsl
mov
notl
mov
rep
lock
push
mov
and
popf
or
xlat
sarb
mov
lret
divb
or
sub
orl
lea
je
inc
mov
dec
push
lods
pop
mov
and
inc
mov
les
scas
aad
add
push
scas
add
mov
pop
jmp
dec
movsb
cwtl
loope
mov
neg
stos
imul
or
test
adc
mov
fwait
jmp
dec
add
or
fistpll
mov
jmp
scas
inc
cld
lret
ficompl
outsb
xor
cmp
jae
lfs
lea
and
xchg
push
out
repz
push
das
jbe
data16
sub
push
push
fisttps
and
xor
xor
xchg
lock
std
jmp
ficoml
cmp
loop
bound
pop
or
pop
fisubs
mov
jo
testl
in
popf
movsb
sub
scas
push
push
inc
ja
adc
add
mov
pusha
mov
adc
sub
jno
outsb
loope
sub
aad
cmp
out
cmp
push
inc
pop
mov
and
jns
pop
shlb
pop
orb
pop
mov
lret
or
cmp
add
ficomps
sti
sbb
or
or
mov
pop
push
addb
mov
sub
shll
shl
ja
xchg
jae
test
les
les
fs
xlat
mov
mov
test
daa
insl
pushf
adc
imul
push
pusha
xor
push
push
es
mov
xor
pop
cmp
mov
sub
mov
clc
lods
test
sahf
mov
movsl
mov
xor
or
and
aad
jge
ljmp
xchg
inc
pop
jae
push
cmpsl
mov
mov
adc
or
mov
push
fcoml
pusha
fldcw
mov
and
cmc
mov
pop
xchg
mov
mov
clc
sti
xchg
das
in
mov
mov
inc
mov
repnz
in
lods
mov
mov
ret
and
jp
mov
jbe
fdivs
ret
dec
or
xchg
int3
rcrl
push
add
bnd
add
cmp
cmp
inc
stos
psubd
insb
mov
test
movb
inc
pop
aam
jmp
mov
cwtl
fstpt
inc
outsb
inc
sbb
xlat
arpl
fs
subl
loop
loop
inc
arpl
mov
pop
call
adc
lods
push
or
pushf
test
mov
xor
push
sub
fsubrs
pop
jae
nop
mov
ss
pop
or
in
ror
push
cmp
inc
jnp
inc
jnp
fs
xchg
fstpl
xchg
mov
xchg
lcall
mov
sub
xchg
dec
in
add
sub
pusha
cmp
xor
ja
scas
movsl
xorb
adc
push
lock
mov
movl
push
ja
lods
xor
cwtl
fs
push
shlb
arpl
cmp
add
out
inc
or
out
fst
out
in
sub
mov
shlb
fnstcw
push
aas
mov
movsb
or
gs
ljmp
hlt
and
cmp
ljmp
stos
dec
or
pop
mov
pop
cmp
add
sub
sahf
mov
std
and
movsb
and
adc
mov
mov
mov
pop
mov
jmp
adcb
lret
sti
add
in
clc
jge
subl
rcl
jo
lret
std
jb
sbb
sbb
sbb
jp,pt
mov
in
out
insl
or
mov
ficompl
lahf
sti
or
add
push
mov
flds
outsb
sahf
and
jbe
popa
cmp
adc
mov
inc
fs
into
mov
push
test
xor
xor
sub
cmp
clc
lret
and
adc
enter
or
mov
adc
shlb
insl
add
mov
inc
je
dec
pop
push
repnz
jno,pt
enter
loopne
and
mov
shr
mov
add
ljmp
mov
jmp
adc
lret
outsb
xor
rcrl
out
lahf
sub
jnp
xchg
in
mov
mov
mov
outsl
data16
push
movsl
sbb
shlb
mov
mov
mov
mov
mov
sub
jge
xchg
cmp
push
repnz
mov
aas
and
sub
xchg
out
adc
in
and
mov
push
dec
push
cs
fildll
and
pop
jl
push
push
or
add
in
cmp
out
pop
flds
jb
iret
andb
arpl
lods
dec
mov
and
aas
xlat
repnz
and
sub
inc
cld
push
fs
sbbl
jo
mov
ljmp
sub
xchg
scas
addr16
dec
cld
into
jmp
mov
iret
and
pop
dec
xchg
cltd
mov
adc
lods
aaa
jmp
sbb
out
adc
xor
cmp
call
mov
push
add
popf
repz
add
cs
cwtl
nop
cmp
sbb
sub
push
mov
sbb
pop
movsb
xor
adc
dec
adc
test
push
ljmp
xchg
insl
push
jb
sbb
ja
push
cwtl
jo
mov
subb
adc
push
ja
jle
dec
dec
loopne
fldl2t
ret
xor
inc
fucomp
add
les
hlt
inc
mov
cld
add
adc
push
ja
ss
and
mov
jge
dec
lret
and
cs
aas
mov
cmp
inc
enter
add
mov
xor
rorb
and
leave
xchg
lods
push
pop
ret
add
ss
ficompl
jns
js
andb
bound
int
xor
repz
sbb
int3
call
mulb
sub
xchg
ret
fwait
dec
add
aaa
out
lock
xchg
leave
xor
daa
inc
inc
daa
sub
or
add
dec
stc
ds
mov
dec
daa
popa
int3
sub
cld
adc
and
daa
jmp
mov
pop
std
sub
out
cs
lods
sbb
std
cmp
mov
test
push
adc
push
pusha
out
sbb
ss
adc
add
cmpsl
bound
outsb
pop
adc
pushf
and
pop
mov
mov
mov
ss
sbb
gs
jbe
mov
aad
push
faddl
cld
add
or
leave
movsb
and
or
jl
nop
mov
add
test
cmp
bt
mov
cltd
adc
cmp
pop
rorl
das
and
f2xm1
or
push
pop
mov
je
cli
subl
mov
mov
out
inc
xchg
rcrb
jae
arpl
ja
pop
ljmp
add
lods
lock
adc
xor
popf
jo
lock
lods
dec
push
bswap
insl
dec
fstp
add
scas
in
inc
jae
xor
cmp
imul
push
movsl
sub
adc
add
pop
es
add
xchg
bound
mov
xchg
adc
push
push
adc
pop
mov
xlat
adc
push
mov
popa
test
push
je
dec
out
shlb
in
repnz
mov
sbb
sbb
mov
sub
fmuls
sub
and
lcall
inc
std
dec
leave
xor
or
pop
push
loope
lods
inc
adc
and
inc
test
leave
rclb
mov
add
and
inc
loopne
xor
jae
hlt
lahf
cmp
mov
lcall
xor
cmp
test
cwtl
dec
push
sbb
loopne
loopne
sub
jb
ret
lock
shlb
xor
push
pop
std
mov
mov
pop
mov
xchg
add
jg
mov
jle
add
js
adc
mov
inc
fbstp
jg
jbe
out
sub
xchg
lahf
jb
in
sbb
inc
insl
test
lods
xor
int3
test
inc
push
mov
fstl
popa
cmp
shlb
ja
lock
out
add
xor
loop
iret
lods
loopne
mov
push
shlb
test
add
fs
and
xchg
push
push
pop
mov
int3
rcl
pop
js
sbb
sbb
sbb
test
push
loopne
out
out
sbbl
or
add
cwtl
js
call
loopne
mov
push
push
xchg
leave
pop
test
fwait
xchg
mov
xor
test
push
xchg
mov
inc
xlat
fimull
es
push
dec
add
sahf
sbb
fsts
dec
ja
in
int
dec
jmp
fisttpll
push
popf
jle
psubsw
and
inc
in
std
sbb
ss
adc
or
push
push
mov
push
mov
and
add
outsb
and
sbbb
jmp
loop
or
insb
fnstenv
or
mov
xchg
lods
jle
push
shll
xchg
fcomps
and
push
aam
lods
xlat
cmp
popf
mov
in
or
ljmp
sbb
scas
jae
repz
add
int
out
jle
out
daa
repnz
mov
xchg
cmp
insb
or
sub
push
cmp
jne
xchg
out
fcoms
out
pop
inc
rcll
dec
jns
and
add
pop
lret
sub
push
ror
sub
outsb
push
fnstcw
lcall
cmp
orl
insb
stc
pusha
mov
insb
aas
test
sbb
jne
incb
jecxz
fmuls
jmp
cmp
ljmp
movsb
pop
pop
lret
mov
push
or
lahf
xor
xchg
lea
jecxz
ss
call
push
jmp
lret
inc
sbb
cmc
mov
pop
aad
in
out
cmp
lds
pop
call
pop
add
adc
clc
add
mov
push
jo
inc
jbe
sub
idivb
cmp
xor
and
mov
outsb
mov
push
push
inc
inc
jno
mov
lds
push
dec
stos
and
add
int3
and
imul
mov
rcr
in
test
or
xchg
pop
adc
mov
mov
mov
lret
xorb
jg
nop
add
in
push
lds
stc
or
jne
imul
sti
sub
or
jne
inc
pop
hlt
xchg
arpl
jns
pusha
adc
pusha
in
mov
sbb
test
sahf
push
sub
dec
ret
sahf
adc
ret
dec
xchg
cmpsl
outsl
mov
sbb
insb
leave
xchg
push
loopne
cmp
cmp
test
aam
and
adc
sbb
mov
sbb
push
mov
dec
xchg
mov
call
mov
add
sbb
bound
mov
or
rclb
mov
jb
add
push
inc
stos
cld
cmp
mov
pushl
push
icebp
adcb
mov
fs
xor
js
rcrb
sbb
pop
pop
out
cmp
faddl
cs
jb
push
adcb
les
fsubr
call
mov
pop
int3
jbe
dec
in
fdivrl
push
pop
mov
fs
incb
dec
inc
xchg
push
stc
pop
xchg
or
mov
fidivrs
je
jmp
lds
mov
mov
int
cld
sarl
sbb
jne
sub
lock
xor
mov
fistps
jne
test
cmp
sbb
mov
xchg
jno
fdivrs
pop
icebp
sub
jne
mov
lret
gs
sub
push
jne
mov
push
xor
shrl
cmpl
adc
adc
mov
and
es
jl
mov
mov
addl
rol
mov
fwait
mov
xor
dec
mov
add
or
stc
rorb
outsb
jno
jp
and
jb
dec
stc
push
std
stos
scas
add
aas
icebp
inc
cld
stos
stos
nop
in
lret
lock
adc
jno
mov
fstpt
stos
dec
ja
cmp
fwait
aad
fstpt
mov
popf
das
loop
test
or
mov
mov
pop
cs
aaa
ljmp
mulb
test
fs
mov
sti
xchg
outsb
cmpsb
push
fstpt
sub
mov
andb
xor
xor
out
jle
sub
imul
movb
insb
fisttpll
iret
test
fdivs
jae
jne
inc
and
popa
es
roll
cld
push
insb
cwtl
push
shll
cmp
and
mov
pop
js
adc
imul
fadd
cmp
leave
sub
dec
jle
in
test
or
jecxz
jbe
xlat
repnz
sbb
jg
pop
shll
adc
addr16
mov
fidivrl
jg
vmovdqu
add
ret
cmc
fcomps
sbb
es
inc
daa
lods
sbb
jmp
sbb
and
outsl
xchg
xchg
cmpl
inc
outsl
ret
pop
jnp
jns
sbb
out
call
sub
lods
jg
jae
cmp
jne
loope
or
xor
enter
mov
sub
shll
aaa
jge
mov
lods
jb
xor
sbb
loope
repnz
ja
lcall
cmpsl
jmp
jecxz
aad
adc
push
ret
test
sbb
mov
pop
and
aam
repnz
popf
dec
out
loope
jae
shr
xchg
pop
stos
out
inc
sbb
inc
push
stc
mov
sbb
sbb
mov
inc
inc
stc
int3
sbb
lds
scas
sbb
pusha
sahf
or
cmp
inc
mov
fcomi
mov
xchg
push
xor
incl
in
pop
rcll
popf
sub
pop
in
les
notb
aad
jbe
push
inc
cmp
adcb
dec
jne
xchg
jns
xor
lds
sahf
clc
or
dec
mov
inc
pop
sub
jecxz
lock
stos
test
aaa
stos
pop
fisubs
fsubl
lret
dec
stc
jmp
addr16
push
es
popa
insb
aam
mov
imulb
mov
clc
stos
and
xor
adc
add
push
hlt
inc
dec
add
out
xor
mov
push
fildl
test
js
movsl
sub
jb
jmp
mov
ss
jmp
sbb
repnz
rcll
or
movsb
jbe
outsl
lahf
enter
adc
pop
lcall
xor
dec
dec
xor
shl
xchg
fistl
imul
add
sbb
in
mov
aad
sub
dec
loope
sbb
cmp
xchg
dec
sbb
xchg
pop
into
push
out
imul
leave
xchg
jne
xor
cmp
in
inc
xchg
push
ret
test
stos
pop
jl
sbb
enter
mov
mov
stos
inc
push
jecxz
and
lods
test
add
pop
inc
or
xlat
nop
js
mov
ljmp
push
cld
aad
push
xor
lret
fldenv
adc
rcrl
addr16
out
dec
mov
cld
dec
out
push
add
push
add
pusha
aad
xchg
sub
imul
int3
mov
xor
dec
rcrb
pop
push
testl
and
mov
mov
jge
and
lods
sahf
mov
mov
ljmp
sub
push
mov
cli
aad
ja
jle
gs
fstpt
push
push
fs
lds
leave
or
add
fwait
mov
cmp
gs
xor
cmpsl
aam
push
mov
jae
out
flds
pushf
jp
icebp
arpl
jb
fisttpl
cltd
das
push
imul
aad
push
popa
jae
jb
push
fiadds
clc
int3
add
inc
shl
test
mov
es
mov
xlat
pop
orb
shlb
jge
push
lea
sahf
cmp
ds
adc
icebp
push
orb
mov
in
cmc
push
mov
dec
cltd
outsb
jg
xor
add
add
cmc
inc
into
mov
or
out
imul
xchg
xlat
pop
mov
adc
sbb
sbb
jns
sbb
sbb
outsb
or
popf
stos
mov
push
push
push
inc
push
scas
pop
imulb
loopne
pop
cmp
push
leave
sub
lahf
mov
sti
test
xchg
xchg
fdivs
push
and
jno
mov
mov
mov
mov
bound
push
out
add
movsb
adc
sub
pop
repz
sub
mov
stc
andl
je
enter
pusha
icebp
nop
xchg
xor
or
aaa
xor
and
adc
je
scas
test
jecxz
adc
and
dec
mov
shlb
insl
jns
mov
dec
pop
lretw
mov
sbbb
loopne
sub
pop
popf
mov
jl
scas
imulb
xchg
cmp
sar
inc
cmp
test
jo
xor
ds
mov
jle
pop
ljmp
mov
clc
dec
fwait
ss
sub
rcrb
js
mov
cmp
pusha
lea
cmpsl
lds
jae
adc
lahf
dec
inc
inc
sbb
push
pop
daa
sbb
push
jbe
pop
repnz
and
xchg
outsb
addl
call
jnp
add
repz
stos
add
clc
enter
xchg
jnp
nop
xor
pushaw
and
fwait
stos
jp
sbbb
cmp
cmp
repz
shll
or
std
ret
cmp
jecxz
ljmp
mov
adc
icebp
and
push
fdivl
dec
ljmp
flds
cli
jne
xchg
mov
sti
mov
mov
sti
popf
mov
xchg
dec
mov
ret
lds
inc
into
xchg
cmpsl
mov
mov
ret
mov
movsl
mov
push
xor
jmp
xorb
into
stc
sbb
mov
dec
push
xor
and
push
mov
repnz
inc
stos
cmp
fwait
push
ret
xchg
out
popf
fmull
rclb
shr
movsl
js
pop
push
dec
scas
pop
lods
lock
jb
inc
scas
idivb
sub
lods
dec
sti
adc
mov
movsb
push
inc
mov
sbb
pop
cmp
push
pop
cmp
xchg
loopne
std
adc
push
push
pop
adc
dec
jno
aad
jmp
inc
cmp
jns
out
out
add
push
lds
gs
mov
push
add
dec
lcall
insb
scas
pop
sbb
inc
cmpsl
ret
gs
fidivl
ds
jecxz
lret
cmp
sub
sub
push
sbb
sahf
jne
pop
sbb
fimull
xchg
mov
lds
pop
scas
pusha
pop
ret
sbb
sbb
das
iret
cmp
mov
mov
push
insb
in
lret
push
lds
mov
test
les
je
xor
shrb
insb
jae
inc
icebp
leave
add
add
push
or
leave
repnz
cmp
xor
push
rcrl
sbb
cmp
idivl
inc
jbe
int3
aaa
xor
push
aas
stos
loopne
cmc
mov
adc
inc
sbb
sub
call
lret
fsubs
das
lock
test
dec
es
mul
dec
loope
rcrl
lret
cmpsl
add
rorl
xchg
movsl
mov
sahf
mov
decl
idivb
aaa
pushf
bound
mov
sarb
pop
cmp
mov
mov
pop
cmc
jno
movsl
xchg
sbb
add
mov
lahf
sbb
sub
mov
jecxz
loop
jns
ss
cmc
sub
push
jmp
scas
enter
inc
dec
lea
xchg
shlb
lods
add
popa
add
xchg
stc
xchg
cmpsb
xchg
mov
daa
repz
cmp
test
les
add
les
outsl
and
jle
xchg
or
daa
lods
shl
dec
xchg
or
sub
stos
movsb
ret
xor
pop
push
in
inc
or
ror
xor
mov
les
cmp
mov
outsb
inc
sbb
fistpl
mov
leave
shrb
pop
frstor
jl
aas
iret
addb
mov
sarb
ret
aas
mov
lds
cmp
les
out
xor
push
jnp
inc
out
add
pop
add
insb
jp
and
mov
and
out
pop
ljmp
xchg
xor
popa
int3
fmuls
add
outsb
call
pop
cmp
test
mov
inc
lods
mov
xor
call
cmp
pop
or
hlt
sahf
cmp
mov
lds
bound
loop
mov
pop
and
dec
stos
dec
jo
jbe
pop
xchg
jmp
aad
mov
ret
push
cli
into
cltd
ss
les
jbe
arpl
sahf
xor
popf
in
bound
xor
jecxz
loop
fnstenv
outsb
js
inc
cmp
lea
lahf
push
xchg
filds
les
dec
dec
and
jnp
push
push
bound
sar
hlt
add
push
inc
negb
pushl
pop
pop
das
rorb
adc
rcrl
inc
fs
outsl
jae
mov
les
cwtl
mov
dec
pop
inc
orb
loopne
aam
ss
xor
stos
xchg
mov
mov
and
cltd
dec
insb
scas
into
dec
fwait
ss
mov
jo
ret
clc
mov
fcomps
dec
add
mov
not
xchg
sarb
lret
pop
fistpl
incb
nop
sahf
fisttpll
push
jl
jbe
lods
cwtl
pop
test
aam
mov
inc
addr16
cmc
xchg
and
test
adc
dec
int3
jno
cmp
dec
popa
cld
xor
fstl
jb
inc
jg
pop
repnz
xchg
outsl
mov
aaa
push
pop
in
and
daa
xchg
mov
inc
dec
sbb
shlb
pop
js
repnz
mov
mov
shrb
fcoml
or
add
in
aas
lds
and
pop
add
and
add
sbb
int
orb
mov
lret
jge
out
adc
cmp
cltd
inc
stos
aam
sbb
cli
adc
lahf
and
aas
lea
push
mov
mov
lods
sbb
pop
xor
sbb
lea
dec
enter
fbld
push
ja
jmp
cltd
and
icebp
lahf
xlat
dec
dec
push
fmull
jle
mov
jo
cmp
clc
add
jge
hlt
cmpsb
jne
lcall
sub
add
mov
cwtl
arpl
mov
fdivl
and
loopne
test
cmp
inc
sahf
aad
mov
cmp
push
iret
inc
cmp
aaa
scas
mov
mov
aas
mov
and
mov
repz
mov
xchg
inc
adc
sub
adc
push
pusha
hlt
xchg
pop
orb
xchg
push
pop
add
mov
loop
xchg
aas
sub
clc
loop
cmp
popa
mov
lds
sbb
jb
pop
jp,pn
dec
mov
mov
ljmp
or
adc
rcll
popf
inc
mov
and
pmuludq
dec
movsl
cmp
jnp
shlb
mov
and
cld
mov
mov
cmc
cmp
mov
push
in
dec
enter
or
jg
iret
jae
mov
add
fwait
jbe
mov
pop
xor
jne
or
jnp
push
hlt
aam
out
xchg
and
ljmp
dec
lods
ss
outsl
xor
sarb
push
dec
and
mov
mov
arpl
pop
sub
and
inc
xchg
push
or
lahf
ja
sti
test
push
pop
lret
add
pop
push
dec
fcompl
int3
int
sbb
loop
add
mov
xor
aaa
lret
pop
insb
mov
xchg
out
mov
mov
mov
pop
inc
push
call
xor
fcomp
xor
pop
inc
test
dec
aas
arpl
sti
test
dec
sti
jp
fimuls
mov
out
test
inc
mov
idivl
mov
mulb
pop
xchg
insl
push
arpl
lcall
adc
mov
dec
cmp
nop
loop
leave
dec
fwait
push
in
clc
lret
sub
inc
out
lea
fs
xchg
pushf
pop
xorl
into
cmp
inc
push
xchg
addr16
mulb
dec
fidivrl
dec
bound
sub
scas
pop
sahf
nop
add
rcll
sub
int
add
xor
cmp
mov
mov
cld
sbb
testl
out
fcomps
clc
add
mov
rolb
lea
repz
dec
mov
dec
shl
and
xchg
mov
clc
push
sbb
or
in
dec
or
cmp
insl
sbb
pusha
jno
jge
or
nop
xor
aad
data16
cmp
out
mov
scas
dec
jle
mov
sarl
in
dec
into
mov
jnp
jge
xchg
out
sbb
sbb
mov
add
xchg
icebp
ret
arpl
sub
imul
pop
cmp
popa
clc
push
test
dec
js
push
test
xor
mov
popf
lds
xchg
adc
cmp
aam
mov
adc
push
or
xor
pop
pop
or
dec
sbb
cld
lock
or
data16
dec
aaa
andl
test
cmp
mov
mov
cld
add
stos
adc
dec
sub
lods
into
and
shlb
inc
and
inc
cmp
cs
inc
lahf
xlat
mov
mov
sub
je
mov
add
and
lret
xor
mov
and
and
scas
or
push
sti
push
imul
js
imul
sbb
enter
nop
bound
fwait
icebp
bnd
adc
out
pop
xor
in
sbb
push
mov
clc
mov
test
loope
pop
aaa
shll
push
cmp
jb
out
ret
aam
jo
rcr
test
decl
popa
adc
jbe
pop
leave
sub
in
cs
push
add
mov
fcoms
mov
shlb
dec
pop
mov
mov
adcb
inc
push
sub
mov
inc
outsl
scas
fstps
repz
std
mov
test
cmp
sarb
fcomps
lods
repnz
dec
or
incb
aas
xchg
lods
mov
push
aam
push
mov
xchg
aas
fwait
out
shr
addr16
or
out
ds
lock
pop
insb
and
hlt
jmp
mov
rorb
gs
sbb
xor
lret
xlat
mov
outsl
mov
mov
add
sbb
add
iret
ficomps
outsb
out
imul
dec
enter
dec
sahf
pop
cmpsl
mov
aas
xchg
inc
test
push
xchg
add
es
test
inc
pop
jb
lea
jb
pop
jno
mov
or
rcrl
out
aad
add
inc
pop
cmp
push
push
stos
add
movsb
insl
mov
xchg
add
out
repz
dec
push
push
dec
adcl
aas
sbb
mov
and
clc
mov
dec
lods
and
imul
cmpsl
mov
andb
add
cmp
or
add
out
and
xor
shll
sub
jne
sbb
jo
xchg
push
fwait
push
xchg
punpckhwd
push
pop
jle
cmp
mov
dec
pop
mov
jbe
jl
mov
push
inc
icebp
sbb
lahf
call
adc
inc
sbb
out
mov
ret
stc
add
aad
dec
sub
jno
lods
mov
jge
sti
xchg
adc
adc
fmul
jg
lods
ss
leave
dec
lods
ret
sbb
int3
add
inc
jle
data16
outsb
add
mov
and
push
jp
and
dec
inc
jecxz
and
test
xchg
inc
cmpsl
repnz
aam
lock
shrb
scas
jge
stc
adc
xchg
shlb
loop
add
inc
xor
data16
and
sub
cmp
scas
push
aam
push
lock
jecxz
lea
inc
icebp
in
sub
cli
mov
jno
sti
jbe
or
leave
or
cs
cwtl
jmp
cmpsb
test
push
lea
mov
sbb
xcrypt-cbc
cmpsl
pop
into
rcll
xor
popf
fisttps
xor
jecxz
inc
pop
jg
xchg
mov
jne
or
xor
sahf
andl
dec
cli
xchg
fcmovne
mov
cwtl
dec
and
xchg
adc
clc
ficompl
mov
inc
rclb
outsb
adc
insl
mov
push
adc
push
das
sub
nop
js
popa
cli
push
loop
ja
subl
aaa
or
in
sub
popf
mov
add
jno
dec
ret
enter
gs
popf
inc
in
cmp
dec
movsb
cmp
mov
adc
scas
out
jne
or
scas
ret
cs
and
sub
aas
xor
and
int3
adc
push
jl
or
push
popa
add
in
scas
cli
aam
push
pop
xchg
in
jns
push
out
js
lcall
push
push
outsb
push
mov
fisubrl
mov
mov
fld
jg
dec
xor
xor
inc
stos
dec
ja
jmp
addr16
xor
cmp
mov
push
outsl
lahf
dec
out
mov
gs
jae
mov
jb
jbe
add
xor
jp
push
mov
popa
dec
pop
in
push
divb
jne
sub
jmp
jp
or
sbb
dec
lock
cmp
cmp
fistps
negb
hlt
push
mov
xlat
mov
repz
bound
and
sub
push
cwtl
rorl
pop
xchg
mov
fdivrl
in
popa
ljmp
and
cltd
sub
add
inc
ret
int
addl
xor
mov
or
inc
in
cs
cmp
pop
pop
pop
lret
push
sbb
push
adc
insl
pushl
mov
ret
shll
gs
rorb
and
cmp
addl
inc
out
sub
mov
cmp
insl
inc
inc
test
push
push
scas
xorb
jmp
imulb
pop
js
or
mov
inc
mov
mov
loope
int3
mov
fcompl
and
lock
clc
mov
dec
int3
sbb
inc
sbb
xchg
pop
jb
mov
shlb
popa
lock
and
fucomp
mov
lds
je
add
mov
mov
or
fldcw
dec
push
loope
leave
lahf
xor
cmp
loopne
jg
mov
pushf
mov
and
cmp
popf
loop
nop
outsb
in
ss
and
xchg
sub
in
fcmovnb
dec
movzwl
pop
adc
mov
add
mov
and
sbb
add
dec
sti
add
iret
xchg
or
je
aam
pop
pop
ss
ds
adc
out
scas
or
mov
cli
sti
mov
jmp
jnp
mov
jecxz
xchg
aam
mov
push
adc
or
pop
fcomps
pop
add
or
sti
fnsave
icebp
stc
mov
call
adc
aas
push
out
daa
push
dec
inc
in
cmp
add
jecxz
outsb
jmp
pop
jp,pt
mov
inc
fsubl
daa
in
dec
popa
popf
pop
iret
andb
mov
jo
add
mov
xor
fists
ficoms
xchg
push
sbb
mov
aad
adc
popf
std
xor
cld
sub
test
dec
movsb
orl
mov
add
mov
mov
push
dec
mov
cwtl
movsb
dec
mov
dec
into
pop
xchg
jge
test
add
and
imul
pmaxub
sbb
test
fwait
dec
in
dec
cmp
out
add
mov
out
pop
movsl
adc
ss
sbb
leave
ret
mov
sbb
and
and
mov
inc
lods
mov
xchg
sti
push
out
out
repnz
pushf
js
push
scas
cmp
dec
inc
popa
mov
iret
rcrb
mov
lret
mov
inc
out
ss
jle
enter
mov
push
xchg
fdivrl
adc
push
loope
in
dec
test
cmpb
outsl
mov
int3
daa
pop
adc
in
arpl
or
cltd
orps
cmpsl
iret
lret
loopne
adc
fwait
into
cmp
repnz
jbe
jo
fbld
mov
push
test
cmp
adc
fisttpl
dec
in
shll
add
pop
xchg
arpl
sahf
dec
or
push
sub
push
jno
push
sbb
scas
imul
ljmp
xor
stos
imul
sbb
add
add
cmp
xor
lret
jne
imul
shrl
adc
and
or
or
scas
mov
sbb
roll
push
push
call
fcoms
sbb
jns
orb
xchg
or
in
add
ret
roll
jg
inc
int
sbb
dec
or
rcrl
fsubs
inc
cmpsb
fistl
xchg
push
or
xor
push
jne
jmp
andb
pop
add
push
imul
adc
subb
adc
jl
lret
xor
leave
pop
pushf
clc
sbb
cmp
bound
fisttpll
cmp
xor
push
out
dec
pop
aad
outsl
mov
loopne
insl
xor
repz
test
jnp
lods
and
mov
push
mov
inc
int3
sbb
loopne
std
ror
jne
dec
mov
mov
shl
testb
lds
sbbl
add
add
cmp
insl
cwtl
loop
lahf
repnz
mov
and
stos
xchg
cltd
lds
loop
cld
pop
or
fisubl
popa
sbb
outsb
rol
mov
dec
bound
es
out
cwtl
ret
sti
out
aaa
push
xor
aaa
lret
leave
cltd
fldt
sbb
mov
imulb
mov
out
jae
cltd
scas
sbb
out
xlat
mov
mov
nop
lret
test
inc
in
dec
popa
pop
int
pop
out
mov
jge
mov
fists
into
sti
and
shrb
cld
dec
push
in
daa
pop
pop
int3
or
cs
mov
das
aad
sbb
ficompl
xchg
or
test
push
ret
std
jge
das
outsb
sbb
enter
inc
jo
jbe
hlt
sbb
sbb
je
jnp
pop
lret
hlt
mov
inc
inc
stos
pop
into
push
or
rcr
jb
cs
cmp
jnp
cmp
mov
mov
push
loopne
lret
outsl
jl
imul
mov
in
adc
fcoms
pop
out
int3
aaa
push
or
daa
ja
push
cltd
sbb
and
mov
jg
cmp
hlt
pushfw
jne
insl
cs
fucom
aas
int
mov
repnz
sub
fs
sub
int3
jmp
fsubl
or
insb
xor
lcall
xor
fdivs
adc
aam
inc
aas
jbe
push
or
cmp
sbb
out
cltd
mov
fidivs
mov
inc
out
call
test
pusha
jg
jo
mov
ret
dec
mov
test
aam
ljmp
pop
and
bound
adc
push
push
sbb
inc
pop
arpl
loop
xor
insl
jne
cmp
nop
adc
inc
pusha
xchg
lar
into
out
pop
inc
icebp
in
bnd
movsl
cmp
push
cmp
xchg
xchg
mov
fsub
adc
test
mov
push
or
cmp
movsb
push
lret
xchg
adc
xchg
add
or
dec
pop
lahf
popf
or
mov
js
pusha
cmp
outsl
xor
movsl
aaa
xchg
add
aad
sbb
daa
mov
xchg
jge
push
mov
cmp
sub
enter
repnz
scas
xor
mov
cmc
pop
mov
mov
fs
mov
test
push
mov
mov
fnsave
xchg
sbb
aam
retw
fwait
xor
mov
mov
mov
cltd
out
loope
divl
xchg
rcl
push
jns
push
je
inc
sbb
inc
call
cld
in
sbb
xchg
mov
sub
loopne
loope
xchg
sub
pushf
mov
mov
and
pop
sbb
xchg
dec
xchg
lcall
in
jecxz
lret
lock
out
stc
sbb
sub
repz
std
pop
lods
std
jp
movsb
cmp
in
xor
jnp
jnp
lea
xchg
sbb
sbb
cmpsb
jno
jbe
leave
pop
scas
stos
pushf
jne
xchg
fiaddl
iret
sub
xchg
insb
dec
out
cmp
test
jb
sub
dec
jnp
push
xor
popa
mov
and
cli
mov
movsl
lret
idivb
and
fnstenv
pushf
shrl
data16
mov
pop
call
lock
adc
jmp
loop
jne
das
int
mov
push
cmp
mov
cmp
adc
addr16
or
js
loop
arpl
arpl
add
ret
ljmp
mov
ret
jp
mov
daa
inc
out
int
in
sbb
sbb
pop
mov
sbbb
mov
xchg
mov
in
xchg
lret
xor
in
add
jno
pop
ret
sahf
mov
add
sub
mov
repz
push
add
loop
mov
fisttps
sahf
jo
cmp
in
mov
lds
cmpsl
nop
subb
in
lods
testl
aam
mov
mov
mov
pop
cmp
into
ljmp
add
xchg
mov
mov
pop
imul
or
loopne
mov
out
ds
aad
inc
mov
xor
cmpsl
shl
dec
fstpt
imul
add
je
inc
jo
fcoms
fdivrl
cmpsb
divl
mov
shrl
mov
dec
sbb
testb
int3
mov
subb
mov
pop
orl
mov
or
sti
cmpb
cmp
div
mov
inc
xor
inc
rcrw
and
and
xlat
fadd
push
mov
xchg
adc
mov
mov
mov
cli
fcoms
loope
ja
test
xor
andl
pop
or
bound
outsl
jnp
mov
out
inc
das
lock
test
add
stos
stc
leave
flds
inc
cmpsb
cmp
mov
jbe
into
clc
xor
push
mov
pusha
cmp
pushl
jg
push
outsb
cmp
cld
mov
adc
fdivrp
fucomp
aas
test
dec
es
dec
xchg
cwtl
sbb
popa
or
fucom
sarl
ficomps
test
sbb
movsl
mov
mov
mov
cli
xchg
xor
xchg
outsb
jmp
pusha
inc
push
jl
ror
inc
pop
mov
rclb
jb
jo
jg
das
repz
xchg
cmp
das
mov
call
xor
jb
add
add
mov
mov
sub
or
lret
lea
rcrl
push
and
lock
dec
mov
jecxz
dec
js
dec
repnz
iret
cli
push
and
aaa
cmp
addb
adc
int3
pusha
cmpb
jle
in
fxch
mov
lcall
sar
mov
adc
jg
push
xlat
arpl
pop
xchg
fwait
lahf
popf
mov
popa
sbb
cmp
and
rolb
and
arpl
aas
and
cmpsl
test
or
mov
pop
push
sub
add
or
imul
call
jmp
cmp
shrl
cmp
inc
outsb
ud1
mov
jns
js
mov
jmp
out
fwait
push
fdivrl
mov
shrl
push
test
jle
jbe
or
aam
inc
sub
dec
loope
mov
mov
stc
in
mov
ret
enter
repz
gs
push
sub
sub
mov
test
movsl
push
imul
into
out
jbe
adc
mov
add
add
cs
loope
lret
inc
pop
jl
aam
mov
jae
jg
mov
cmp
mov
jo
add
shll
mov
in
adc
mov
mov
in
dec
or
out
lock
scas
mov
aas
std
test
int
cmp
or
mov
movsl
pop
sub
lret
repz
xlat
adc
or
loop
and
addr16
pop
shr
lock
mov
mov
orl
jb
mov
xor
cmp
mov
rolb
movsb
mov
leave
pop
aas
xorb
movsl
cmovne
daa
loopne
pop
sbb
scas
mov
mov
mov
lahf
or
les
sub
push
jmp
outsl
outsb
stc
js
jl
xchg
mov
push
or
pop
push
xchg
push
and
mov
push
add
clc
inc
inc
dec
pop
xchg
push
aad
out
jle
push
cmpsl
sub
push
push
or
packuswb
rclb
adc
and
ja
lods
inc
jae
xor
pop
adc
jae
pop
fwait
aas
iret
xchg
das
cs
icebp
sahf
ds
cld
popf
out
test
sbb
bound
push
xchg
lahf
lea
pop
mov
mov
inc
fidivl
inc
xor
jg
sbb
negl
fwait
in
sbb
and
aam
nop
xchg
notb
filds
sbb
xor
ftst
in
inc
fisttpll
ds
xchg
and
lods
in
cwtl
jns
stos
xchg
mov
daa
mov
scas
lret
push
and
lea
fcomp
lds
mov
dec
sti
cld
pop
cld
or
out
sbb
cmp
jecxz
mov
mov
mov
fiaddl
pop
inc
and
std
or
jle
fwait
jbe
call
adc
jmp
ja
icebp
lds
sahf
pop
mov
nop
icebp
lds
insb
push
int
imul
mov
inc
inc
sbb
popf
jne
shll
push
call
sub
aam
mov
mov
cwtl
xchg
into
lock
fistpl
std
cs
je
inc
dec
push
xchg
sbb
pop
ja
cmp
inc
mov
push
dec
pop
sub
push
mov
ret
shl
lods
mov
aad
mov
dec
movsl
ret
incb
jge
add
or
or
clc
aad
mov
outsb
je
xchg
cmp
dec
popf
out
loopne
shrl
or
pop
call
je
insl
pop
stc
add
inc
add
fstps
in
testl
stc
add
scas
mov
cs
loopne
push
dec
ss
xchg
loopne
lods
adc
inc
movsl
jae
add
sub
pop
xchg
cli
pop
sbb
mov
enter
xchg
jne
pop
pop
jl
cmp
in
push
jge
test
add
dec
inc
imul
ficoms
jns
push
or
rcrl
push
or
push
inc
fadds
lock
ficoml
xchg
jbe
mov
push
inc
fmuls
out
ljmp
std
movsl
scas
das
add
test
mov
enter
mov
sbb
add
jle
push
mov
jmp
add
push
mov
xchg
push
inc
xchg
sti
mov
inc
shlb
jns
dec
push
lret
mov
movsl
sbb
fistpll
popa
lcall
jp
add
repnz
jmp
jbe
cmp
push
daa
pop
xchg
orl
sub
inc
pusha
xor
sbb
aad
scas
aas
mov
jmp
call
inc
mov
out
mov
adc
lods
adc
mov
repz
dec
scas
lcall
mov
mov
ret
into
in
insb
sbb
mov
jl
inc
adc
xor
pop
mov
push
xor
inc
sub
sbb
in
test
mov
clc
and
repz
mov
lds
int
inc
lret
and
jb
mov
sar
push
push
jae
mov
mov
test
outsb
aam
movsl
es
xor
sti
decb
lahf
jns
ja
insl
jg
cwtl
pop
loop
jge
sarl
pop
decl
aad
mov
scas
mov
loopne
pop
cwtl
mov
dec
sbb
cmp
jno
aam
sub
shlb
and
adcl
sub
aam
das
andl
sub
add
fidivrs
xchg
push
sub
xor
stos
add
mov
fisttpll
dec
push
fcomps
jne
cltd
push
mov
fnsave
mov
cmpb
out
xchg
out
sbb
add
lock
pop
test
and
xchg
scas
push
jne
out
loop
inc
aas
lahf
mov
sarb
mov
movups
adc
cmp
mov
jmp
mov
sub
and
sub
jp
mov
mov
pusha
lods
add
shr
imul
out
sub
movsb
inc
cmp
add
orb
xchg
gs
ja
sahf
xchg
lds
cltd
inc
aad
cmp
or
xor
and
jmp
pop
repz
cltd
sub
decb
inc
stos
shrl
xchg
movsb
xor
jo
jnp
in
in
loopne
mov
hlt
sbb
aam
cmp
bound
das
mov
ds
add
sbb
clc
stos
sbb
mov
popa
sub
and
pop
aam
xor
daa
push
fsubr
cli
in
fsubrl
or
mov
push
jno
inc
adc
out
out
or
dec
jo
cmp
pushf
adc
or
mov
xchg
sub
loop
mov
loope
std
lret
xchg
out
cld
xor
fucomip
cmp
sub
in
cwtl
lret
inc
out
in
or
add
mov
testl
int3
outsb
pop
jg
adc
xchg
cli
pusha
loopne
aad
and
data16
jl
mov
jg
inc
loope
mov
or
fnstenv
nop
repnz
sub
popf
test
sub
jl
cmc
shrb
and
inc
lret
fcmovne
dec
repz
lcall
es
shl
pusha
jp
test
ja
es
and
lods
pop
gs
push
imul
pusha
jg
repnz
or
inc
dec
jb
gs
cmp
jae
pop
ss
das
mov
add
insb
cmp
lret
ret
ja
xchg
jle
adc
ror
add
rorb
xchg
xchg
mov
mov
pop
cli
inc
jb
inc
test
fsub
xchg
mov
mov
jnp
jae
dec
dec
bound
lods
mov
je
inc
repz
lret
popf
add
ret
add
stos
sbb
fucomi
sub
ficomps
ljmp
jnp
inc
mov
sahf
pop
or
xchg
filds
fistpl
xchg
lods
xrelease
jmp
push
mov
fisubl
xchg
les
lock
and
js
out
push
xlat
jmp
sar
movsl
adc
jle
bound
inc
inc
push
mov
push
jnp
xchg
les
inc
xchg
pop
cwtl
pop
dec
inc
push
fmuls
mov
push
pop
rsm
inc
xchg
mov
xchg
jae
push
pop
inc
cmpsl
pop
fwait
xchg
mov
cmp
xchg
cltd
loopne
out
ja
lea
and
into
lahf
sbb
fbstp
xchg
adc
pop
and
mov
adc
leave
mov
or
loop
push
xchg
mov
dec
out
fldcw
sub
shrb
push
les
lahf
cmpsb
cli
test
shll
mov
mov
sbb
xchg
cmc
lods
pop
inc
add
add
cwtl
sbb
shr
cmp
das
test
je
and
sub
push
lea
dec
jne
in
sub
lret
push
lea
pop
sbbl
jecxz
es
add
dec
xchg
mov
and
xchg
mov
js
bound
int
cmp
cmp
sub
insb
mov
shl
andb
mov
data16
aas
aam
repz
sbb
ficoml
mov
pop
dec
shll
push
shll
pop
add
cmc
add
add
mov
mov
loop
lahf
fs
xlat
out
inc
cmp
lods
cmpsb
adc
fnstenv
in
rclw
mov
pop
sbb
orl
pop
outsb
inc
jmp
jmp
push
jmp
pop
fdivl
dec
fs
mov
push
add
stos
sbbb
inc
mov
sbb
xchg
insb
lcall
cld
cmp
movsl
pusha
fprem1
cmp
and
push
imul
push
push
les
pop
or
roll
pop
sbb
jp
popa
sub
test
pop
test
fists
insl
or
sub
sub
sbb
cli
lods
adc
repz
cltd
jb
lea
sub
and
push
cltd
and
fdivl
mov
pop
mov
sbb
sub
mov
lret
cmpsb
add
arpl
add
cmc
mov
sbb
dec
cmpl
insl
fstps
sbb
cmp
fistl
xchg
mov
sbb
gs
xchg
xlat
adc
movsb
pop
cmp
leave
faddp
gs
dec
pushw
gs
mov
mov
xchg
inc
mov
js
push
test
out
cmpsl
dec
xchg
sbb
fld
adc
dec
mov
push
dec
fldt
mov
aad
or
dec
inc
movsl
out
shl
ret
test
insl
add
xchg
pop
sub
push
cmp
fdivs
push
cs
std
out
pop
xchg
sub
or
sub
dec
aas
movsl
nop
dec
or
adc
rcl
mov
popf
daa
not
lods
or
fsubrp
cmp
inc
jp
aaa
scas
mov
lods
subb
vmread
ja
jne
enter
ljmp
lahf
sbb
into
loopne
outsl
lret
push
ja
mov
jp
xor
jle
cli
xchg
mov
mov
test
aas
sbbb
jmp
xlat
pop
je
mov
add
lahf
dec
push
mov
fisubrl
add
xor
data16
das
mov
dec
sub
dec
cmc
add
mov
jle
aad
shlb
cmpsb
cmp
sub
inc
sti
xor
popf
enter
jns
xorb
mov
sbb
icebp
imul
or
into
mov
mov
xor
popf
pop
lahf
mov
es
push
inc
dec
sub
lea
xlat
sbb
sti
or
je
mov
popf
jnp
cmpsb
ds
ret
jno
les
mov
inc
ds
dec
push
xchg
aam
push
arpl
pop
fldcw
shr
cs
mov
ljmp
xor
mov
jb
or
bound
jecxz
xchg
in
fadd
out
lret
pop
je
addr16
in
shll
jge
cs
mov
xchg
jl
imul
push
xchg
outsl
adc
es
lret
stos
xchg
fs
jb
scas
xor
cmp
ret
shr
stos
xor
imul
cmpsb
mov
stos
jae
or
jg
xchg
dec
push
out
sarb
ja
pusha
xlat
mov
mov
pusha
in
sub
aaa
call
sbb
mov
addr16
fnstcw
loop
xchg
ret
std
fcmovbe
push
insl
mov
das
fadd
shll
or
movsl
or
mov
bound
insb
mov
sbb
push
cld
fsincos
outsl
fwait
sahf
lret
int3
cmc
out
push
xor
movsl
xor
out
xchg
lock
ret
pusha
gs
push
fwait
in
pusha
add
out
test
pusha
movsb
out
mov
aad
sbbl
jae
sbbb
addr16
mov
pop
dec
push
test
lods
pop
icebp
movsl
rcl
daa
std
jge
sub
lahf
or
ss
fdivrl
das
cmp
and
pop
out
leave
mov
mov
addr16
jp
xchg
inc
jge
sub
and
aad
dec
and
mov
pop
or
repnz
insl
push
ret
movsb
or
aad
add
xor
cmp
mov
pop
xor
adc
ret
fwait
lods
les
xchg
outsb
ret
outsl
movsl
jns
pusha
fcom
std
dec
add
dec
lods
std
cmp
loopne
mov
lods
in
push
pushf
mov
ljmp
fstl
sbb
inc
out
pusha
divl
lods
mov
fwait
xchg
out
cltd
xor
movb
rcll
nop
rorl
ret
jnp
jle
orl
push
push
sub
aam
in
fnsave
out
mov
push
rcrb
minps
lahf
cmp
lahf
daa
and
push
xchg
out
push
push
sub
pushf
fistpll
add
adc
adc
stc
push
insl
lea
daa
and
fwait
clc
lods
in
mov
enter
je
push
inc
sti
lret
pop
rcrl
in
outsl
in
pusha
push
push
movsb
lcall
test
sarb
js
mov
push
xchg
jmp
pop
mov
bound
jb
or
pop
mov
imull
pop
lret
dec
data16
fstl
cltd
in
and
inc
enter
mov
jnp
sbb
stos
dec
fimuls
pavgw
xlat
fiadds
daa
push
int3
bound
popf
push
sbb
xchg
icebp
sub
lahf
push
jmp
xor
dec
xchg
or
pop
arpl
imul
hlt
movsb
xchg
in
nop
movsl
cltd
push
mov
sti
xchg
leave
or
xchg
mov
rcl
mov
dec
mov
jo
jno
pop
ljmp
xchg
push
shlb
and
into
push
sbb
cmp
or
dec
dec
mov
fmull
dec
leave
xchg
cld
jmp
hlt
mov
and
loop
add
popf
xorb
and
mov
push
pusha
es
lret
adc
dec
jno
aas
inc
sbb
jg
aad
dec
push
pop
mov
pop
mov
aam
push
jmp
xor
inc
jp
mov
jecxz
daa
data16
adc
shl
inc
inc
xchg
xchg
mov
mov
pop
mov
pop
call
cmp
orl
bound
roll
mov
add
lods
cs
inc
arpl
xchg
in
nop
loopne
sub
sub
and
lret
dec
dec
jmp
mov
test
push
and
cmp
adc
lock
add
lods
sbb
xchg
pusha
adc
outsl
shlb
add
es
jne
xor
call
sahf
fildl
or
mov
mov
pop
bound
lcall
add
loop
rclb
lea
xor
dec
icebp
testl
imul
xchg
jno
mov
arpl
and
je,pt
stos
xor
jmp
dec
js
or
pop
sub
scas
xchg
aaa
aam
jge
push
mov
loop
lea
shlb
mov
sahf
repz
mov
pop
jnp
pusha
icebp
jne
push
pop
jno
jo
jne
xchg
scas
mov
xor
sbb
add
fdiv
jg
mov
pushf
push
pop
jae
repnz
cmpsb
and
adc
popa
dec
adc
add
sub
and
xor
cli
aaa
sahf
dec
imull
fstps
pop
movsl
mov
xor
or
sbb
jbe
sbb
push
loopne
or
jp
pop
sub
jb
rcrb
pop
pop
js
pop
mov
mov
movsl
int
addr16
lods
mov
jmp
sub
jmp
sub
xor
bound
jle
sbb
rclb
cltd
jne
dec
lret
aas
rcpps
jl
pop
jle
popa
lret
cld
gs
mov
mov
xor
jg
sub
dec
ds
inc
sub
sub
xchg
out
pop
pop
pop
lret
scas
loope
xchg
xor
cmpsl
and
lock
mov
or
pop
les
sbb
fisttps
data16
or
dec
icebp
repz
inc
les
loope
add
sbb
pop
or
dec
xor
std
pop
and
push
jb
pop
fldcw
add
pop
pop
rcll
or
imul
adc
bound
jl
int
inc
int3
adc
filds
hlt
inc
js
mov
aas
sarl
iret
sub
roll
or
outsl
cwtl
cli
push
push
and
jg
or
add
je
ljmp
push
mov
xchg
repz
call
sbb
into
inc
leave
jmp
and
lret
cwtl
adc
push
sbb
cs
inc
pop
gs
cmp
xor
jge
dec
test
test
cwtl
ret
outsl
add
pop
xchg
pusha
in
pusha
adc
aaa
ret
mov
jle
cli
test
mov
sbb
fiaddl
adc
or
daa
lcall
stos
and
aaa
loop
jecxz
pop
jle
rclb
lcall
sbb
add
xchg
jecxz
xchg
out
xlat
and
cmp
xchg
dec
xor
mov
add
cmp
mov
inc
call
sub
popl
mov
and
sbb
int
inc
arpl
pop
and
clc
mov
mov
test
orb
add
fnsave
lret
cmp
xor
jge
subl
xchg
jle
enter
jae
mov
xchg
ljmp
jg
in
mov
jmp
popa
cli
push
les
icebp
data16
adc
call
cltd
bound
ud1
sti
mov
adc
loop
and
inc
in
fdivs
adc
out
mov
sbb
sub
testl
mov
sub
ret
stos
into
mov
test
push
rclb
mov
mov
mov
mov
out
xchg
fsubs
gs
into
lahf
add
fdivs
gs
xor
mov
jmp
mov
leave
add
stc
mov
shlb
popf
cli
adc
xorb
gs
imul
pop
pop
sbb
mov
push
stos
or
outsb
mov
ret
add
cmpb
es
in
cmp
and
aaa
shrb
mov
pop
pop
push
shlb
mov
cs
mov
dec
rcrb
loop
aad
mov
xor
jnp
shrb
push
lea
sub
inc
lret
xchg
dec
add
les
out
sub
or
lret
inc
or
jb
mov
mov
in
cmc
scas
sub
ret
shr
jge
mov
fs
inc
ja
cmp
insl
out
repnz
rol
in
bound
dec
stc
cmp
xchg
popa
fsts
jle
dec
pop
pop
mov
adc
mov
loope
pop
ffree
lret
jmp
mov
adc
call
push
aaa
or
sarl
les
mov
xlat
rol
pop
mov
cld
insb
pop
add
push
rolb
shll
jno
lds
jmp
or
pop
sbb
loopne
jae
inc
sub
jne
and
jno
test
clc
mov
add
xchg
dec
push
mov
fcmovnb
loop
mov
push
stc
ja
jecxz
push
push
out
jns
or
repnz
and
lahf
outsb
fwait
sbb
imul
pop
adc
cli
mov
out
add
and
cli
mov
push
cli
jno
xchg
test
jae
push
jecxz
lret
pop
lock
repnz
in
popa
adc
stc
lret
dec
std
dec
movsb
add
movsl
add
addr16
or
sbb
outsb
lods
and
lds
loope
lods
testb
jo
pop
movsb
pop
pop
out
mov
jecxz
lods
xchg
xchg
jb
movsb
ja
add
push
leave
out
push
xchg
mull
mov
add
lret
aam
mov
sarl
sbb
movsl
dec
dec
cmp
icebp
push
add
cmpsl
ss
xchg
inc
filds
or
fisttps
xchg
mov
cmpsb
mov
inc
inc
js
push
dec
addb
test
xor
data16
pop
test
adc
adc
jo
pop
loopne
and
xor
sub
addr16
and
out
jo
and
mov
mov
adc
push
inc
jecxz
fnstcw
inc
sbb
or
gs
insb
lret
movhlps
push
push
jb
test
test
mov
or
push
inc
pop
scas
cmp
aaa
insb
mov
clc
xchg
jnp
testl
lcall
push
scas
push
push
pop
std
xchg
subb
pop
inc
jo
sbb
adc
adc
jl
or
mov
ss
in
xchg
push
imul
xor
or
lahf
push
xchg
sbb
inc
daa
stos
adcl
sarl
fnstsw
scas
in
lcall
xor
arpl
fadds
repnz
add
xor
add
cmp
testl
or
or
ror
clc
pop
fisubl
insb
sbb
pop
ret
jbe
movsb
bound
mov
and
mov
and
and
dec
dec
cmp
xchg
cmp
push
pop
jns
jmp
cmpsb
gs
out
pushf
dec
mov
pop
dec
jp
std
out
push
outsl
jmp
imul
jg
xor
mov
cmp
lcall
and
stc
sub
insb
mov
das
std
flds
adc
fs
cmp
sbb
int3
hlt
shlb
jle
push
arpl
jae
in
xor
mov
jg
in
aam
roll
xor
test
push
dec
adcb
xchg
lret
out
es
pop
or
in
push
leave
adc
sub
addr16
xor
mov
dec
sbb
je
xor
cmc
test
mov
add
addb
fcoms
enter
push
loope
pushfw
es
fwait
rorb
fs
jns
sahf
xor
xor
xlat
mov
cmp
jp
push
push
push
test
mov
leave
lea
and
aaa
scas
aaa
xor
pop
aad
bound
mov
in
fstl
in
pop
mov
inc
sbb
or
xchg
mov
dec
in
or
adc
sti
in
test
lock
or
int3
jo
jae
and
or
clc
pop
aam
mov
push
pop
push
adc
xlat
push
fsubs
ss
sub
leave
stc
jge
pop
repz
and
cmp
fcompl
xor
pop
arpl
pop
xchg
or
mov
and
insl
jl
push
dec
add
popa
mov
dec
mov
mov
push
lret
inc
cld
push
xchg
insb
sbb
in
movsb
mov
and
idivl
lock
imul
aam
repz
xchg
sbb
divl
std
mov
push
inc
add
daa
jmpw
icebp
movsb
cmp
mov
xchg
cs
test
pop
mov
dec
inc
jge
dec
mov
dec
mov
jo
repz
enter
icebp
in
push
ja
fildl
clc
xor
cmp
imul
out
fs
jl
dec
push
lret
xor
jmp
cmpsb
sbb
mov
push
adc
jecxz
add
xor
stc
push
pop
fdivrs
cld
cwtl
xor
lret
gs
push
aad
and
inc
addr16
dec
adc
out
ja
sbb
pop
sub
mov
out
test
jb
gs
out
jmp
cwtl
es
adc
adc
in
jnp
sub
je
gs
pop
or
insb
mov
imul
loop
fistps
insb
add
cmp
jg
mov
scas
in
bound
mov
xchg
pop
das
jmp
aad
sbb
dec
out
mov
aaa
jo
popf
test
fbstp
cmp
xchg
cmp
cmp
xchg
add
mov
scas
push
dec
pop
je
iret
data16
stos
rclb
inc
xor
pop
sti
and
mov
je
lea
and
pop
jne
xchg
jmp
sbb
loope
aaa
mov
mov
push
xchg
push
lea
out
fnsave
aad
aas
pop
adc
mov
and
les
sub
inc
loop
sub
push
inc
push
mov
or
jg
cmp
mov
mov
mov
bound
inc
add
pop
sbb
sbb
lds
mov
add
and
repnz
push
jae
jmp
push
adc
xor
fnstsw
inc
dec
push
dec
popa
adc
and
jbe
es
lock
cmp
and
test
dec
pop
popa
ficomps
mov
scas
cmp
lea
inc
sbb
mov
jecxz
xor
loop
jb
addl
xor
out
flds
cmp
movsb
stc
fcomps
sbb
loopne
mov
jecxz
xchg
nop
and
mov
outsb
addr16
les
push
fistl
sbb
call
sbb
jl
jl
stos
pop
adc
rcrb
aad
mov
mov
mov
js
stos
fwait
xor
and
add
stos
mov
jle
jo
pop
adc
mov
int
sub
lock
idivl
clc
push
adcb
xor
xchg
dec
cmp
into
mov
or
adc
xchg
roll
movsl
or
pop
sub
outsb
mov
mov
scas
call
inc
xchg
cmc
imull
lock
pop
subl
ds
clc
adc
pop
in
repnz
dec
xchg
mov
test
adc
push
mov
test
popa
and
pop
push
in
lahf
lahf
ret
test
add
jg
push
stc
repz
xchg
xchg
or
jl
loopnew
out
fisubs
add
push
dec
inc
fs
push
andl
mov
xchg
xchg
push
jl
xchg
sbb
jmp
mov
and
xor
jl
mov
add
add
cli
jge
in
out
insb
sub
cmp
jle
xorb
xor
dec
addr16
sti
sub
in
lahf
mov
xchg
in
pop
movsbl
pop
test
mov
inc
xchg
sub
pop
pop
insb
jno
push
fbld
sub
cs
inc
das
fwait
or
cli
dec
cmc
enter
push
ds
neg
push
xor
scas
adc
cld
cmp
jbe
inc
or
out
movsl
mov
leave
sbb
ret
pop
push
sbbb
mov
ljmp
inc
imul
cmp
inc
repnz
adc
jle
xor
out
lcall
ret
inc
popa
sub
sbb
and
or
insl
icebp
lea
les
inc
scas
int3
xchg
or
sub
push
pop
or
and
scas
out
sbb
adc
dec
lret
push
mov
jmp
push
pop
mulb
cmpsb
in
jns
shlb
insb
push
outsb
dec
sbb
les
out
mov
or
jmp
sub
mov
loopne
cmp
loop
mov
cmp
jb
cmp
aad
imul
jo
and
xlat
push
leave
shlb
adc
les
enter
std
push
mov
inc
fs
cmp
pop
pop
cmp
adc
and
mov
push
jno
push
iret
stos
jne
out
push
ja
addr16
ss
daa
jmp
in
mov
insb
or
fucomi
les
jb
gs
push
jnp,pn
jno
mov
aaa
xchg
test
cmpl
stos
call
outsl
repz
jle
and
subb
imul
inc
test
cwtl
xchg
test
push
loop
sbb
sti
pushf
hlt
mov
addl
repz
imul
dec
inc
outsb
fwait
sbbb
sbb
push
cli
outsl
push
jge
inc
mov
jno
rol
xlat
sub
adc
movl
test
movb
push
cmp
push
jmp
rolb
xor
adc
sbb
jg
adc
cmp
jb
xchg
cld
fcomp
lods
outsb
cmp
mov
out
dec
sub
lcall
and
ljmp
push
testl
ds
addr16
nop
mov
pop
mov
mov
lret
movsl
sbb
mov
xchg
es
inc
push
add
jae
in
mov
ljmp
cmp
push
jmp
hlt
iret
jo
lret
pop
xchg
mov
add
pop
and
int3
test
arpl
mov
xchg
mov
jle
inc
lea
mov
adc
jecxz
jo
shll
xor
rolb
and
cld
iret
dec
js
inc
je
orl
lret
pop
adcl
or
shl
sahf
adc
fimull
push
or
push
daa
xor
out
pop
cwtl
mov
lods
lods
adc
pop
insb
or
mov
cmp
mov
outsl
in
push
push
repz
lahf
insl
inc
pop
adc
mov
mov
es
stos
jne
sbb
sbb
inc
stos
cld
or
jmp
out
je
jg
adc
sti
push
inc
movsb
jae
mov
mov
insl
mov
lcall
jb
nop
loope
stos
inc
sub
adc
outsl
daa
scas
add
and
inc
or
jl
jnp
ja
js
mov
ds
push
mov
or
fisttpl
call
mov
xchg
clc
xchg
pop
inc
psraw
cwtl
xor
lods
cmpsl
jbe
cmpsb
rorl
sbb
enter
pushf
jnp
or
addl
xor
sub
js
mov
push
push
stc
jle
sub
sbb
jmp
inc
in
mov
into
popf
mov
push
mov
clc
inc
and
cmp
test
shrb
dec
lods
mov
cld
adc
xor
or
arpl
cld
sbb
sub
cmp
dec
sub
dec
push
cltd
movsb
jg
gs
jnp
cmp
xchg
dec
push
lock
lahf
nop
adc
je
jno
test
xchg
or
mov
jns
aaa
pop
xchg
sub
insb
imul
dec
pop
mov
leave
sbbl
mov
int3
mov
rcl
hlt
mov
cmc
or
xchg
loope
cmp
mov
test
outsl
pushf
inc
out
outsl
stos
nop
pop
popa
mov
dec
stos
pop
les
outsb
and
sahf
adc
cltd
add
xor
jl
pop
insb
lret
add
jecxz
cmp
push
push
push
dec
call
cmp
mov
pop
inc
adc
out
in
push
daa
jp
cmp
mov
push
sbb
ffree
push
push
ja
and
divb
mov
int
leave
test
sub
movsb
movsb
ds
flds
xor
or
test
int
xlat
add
sbb
sub
sub
data16
jg
pop
jb
sub
mov
or
jb
xor
push
test
aad
add
out
out
inc
out
sbb
pop
mov
mov
sub
cld
pop
repz
aam
mov
pop
loopne
sub
sbbl
or
xor
xor
stos
jmp
jnp
dec
jge
cltd
bound
pushf
jl
jle
sbb
jbe
aas
jge
and
jbe
cmpl
std
cld
daa
outsb
mov
push
cmpsb
xchg
push
outsb
push
add
add
stos
and
mov
pop
repz
mov
mov
mov
push
mov
sahf
adcb
shl
ret
dec
scas
int
mov
in
inc
data16
lret
mov
aad
movsl
sbb
fisttpll
fs
pop
pop
and
mov
andl
or
sbb
adc
test
xor
stos
pop
aas
jb
push
sub
and
aas
cmpsl
scas
push
ret
dec
imul
and
bound
jns
mov
push
mov
and
jl
cmp
or
sti
xor
adc
jns
stos
out
out
stc
je
ljmp
rorl
dec
mov
sub
mov
sbb
fnstsw
add
ja
stos
cmpsb
push
inc
xchg
xchg
mov
mov
or
aaa
mov
rcrb
sbbl
jp
fdivrl
inc
jbe
ja
ss
popf
xor
frstor
jmp
dec
dec
sub
xor
sbb
arpl
in
repz
inc
xor
cmc
fnsave
sbb
incl
sub
sbb
aas
inc
inc
fstpt
cmpsb
out
dec
lret
jb
sub
pusha
int
aad
adc
dec
in
dec
dec
les
mov
iret
xor
xchg
insl
cwtl
fidivrs
lock
mov
mov
pop
in
test
adc
sbb
mov
insb
pop
and
call
mov
jge
dec
or
xchg
fidivrl
xor
out
mov
addb
ret
sbb
cmc
fistpl
mov
fs
pop
xchg
call
lea
in
jns
sbb
cwtl
int3
mov
repnz
test
je
add
sub
cmpsl
test
dec
cmpsb
mov
jge
fbld
movsb
icebp
cmp
push
call
mov
movsb
pusha
fsubl
xor
loopne
stc
sub
pop
or
pop
inc
arpl
ja
lea
loopne
stos
or
inc
pop
jb
dec
roll
sbb
lahf
xor
cmc
jbe
and
test
dec
gs
data16
pop
ljmp
pushf
fisttpll
mov
lds
loop
test
rclb
lcall
imul
pop
icebp
lret
or
lods
push
cld
adcb
out
push
lods
inc
fcmove
mov
fisubrl
xchg
dec
or
cmpsb
pop
push
sbb
int
pop
sbb
mov
out
mov
iret
pop
decl
xor
ja
push
inc
gs
inc
shrl
inc
fnstcw
shlb
leave
int
imul
pop
push
fsubrs
mov
sbb
jbe
aaa
aad
jecxz
fidivs
xchg
and
jnp
outsl
or
dec
push
mov
xorl
pop
outsb
xlat
outsb
pop
mov
leave
orb
fwait
inc
test
sub
pop
js
cmpsl
loope
and
mov
xor
stos
mov
push
cmp
popa
sub
in
gs
pushf
dec
je
push
add
adc
repz
jle
shl
sub
aam
jne
mov
lea
int3
dec
test
icebp
pushf
das
outsb
push
and
sub
je
mov
dec
outsl
pop
lret
push
xor
lret
lahf
push
in
push
popa
push
cmpsb
sbb
test
pushf
jns
js
jne
test
loope
in
sbb
pushl
cli
jo
sarl
sbb
addr16
cld
lock
mov
outsb
lds
sub
dec
cmp
jnp
pop
push
mov
cmpsl
push
dec
test
jmp
xchg
int3
xchg
daa
push
arpl
call
pop
add
rorb
aas
imul
dec
loopne
xchg
ret
emms
pop
es
hlt
mov
adc
aam
xor
int3
inc
jae
adc
adc
aad
outsb
ljmp
mov
mov
xchg
call
sbb
stos
int3
sub
les
imul
xchg
scas
das
xchg
pop
xlat
andb
or
loope
nop
hlt
ljmp
lea
mov
insb
insb
jp
aad
mov
add
sti
cwtl
or
stos
xor
push
adc
scas
insl
inc
xor
std
out
aaa
xchg
int
xor
cs
xchg
dec
test
dec
mov
je
nop
daa
cmp
shr
lods
aaa
dec
or
cmpl
sub
mov
xor
sbb
inc
add
or
mov
fdivs
xchg
mov
out
bound
or
arpl
subb
imul
idivl
in
stc
enter
ja
sub
dec
inc
inc
mov
insl
push
sbb
dec
xchg
pop
cmpsl
mov
pop
lock
int3
movsl
lock
stos
stc
push
in
adc
xchg
push
sub
je
and
insl
clc
dec
inc
data16
je
dec
xchg
mov
push
cld
mov
stc
fidivl
rclb
or
adc
xchg
jl
punpckhwd
into
enter
cmp
mov
mov
push
inc
jmp
popa
sub
call
inc
dec
push
lods
jbe
movsb
xor
mov
fistps
fs
mov
push
and
fwait
inc
into
sbb
iret
cld
xor
or
pop
addr16
pop
mov
mov
dec
out
sbb
daa
mov
push
mov
pop
daa
bound
xchg
push
push
lcall
das
aas
push
sub
push
pop
mov
cmp
gs
sub
pop
popf
jbe
addr16
xchg
push
sbb
inc
mov
cmc
jb
sub
ss
loop
fnsave
sahf
mov
loopne,pt
ds
popf
adc
mov
adc
into
add
out
jne
sub
or
les
jno
ljmp
mov
lahf
stos
aam
push
add
addr16
push
adc
adc
mov
xchg
dec
jne
clc
jne
movsb
xchg
cmp
push
add
xchg
cli
jno
sahf
mov
js
subl
test
mov
mov
repnz
outsb
rcl
nopl
mov
xor
sbbl
inc
scas
int3
aaa
mov
and
cli
nop
shrb
shrb
lcall
data16
adc
push
dec
testl
add
ja
jmp
jns
lcall
adc
mov
jle
push
sbb
paddsb
mov
rolb
prefetch
or
icebp
or
fcmovu
mov
insb
sub
pop
int3
dec
fnsave
and
aas
push
pop
adc
cmp
push
incl
dec
or
and
aaa
sub
push
xchg
inc
mov
pop
ja
xor
lcall
jle
les
adc
add
dec
mov
cld
out
sbb
dec
int3
test
outsl
dec
mov
lahf
lods
je,pt
jae
test
paddd
aaa
das
jo
lock
jp
ss
rorl
pop
xchg
jo
pop
inc
hlt
pop
dec
ret
rorl
ljmp
orl
jle
fadds
sarl
into
cmp
inc
jle
push
sbb
xchg
cmc
imul
imul
loop
out
xor
add
mov
pop
adc
push
stos
cmp
in
dec
sbb
fucomip
mov
ret
push
leave
dec
sbb
sbb
mov
lods
imul
movsl
andb
jnp
test
ja
sub
aam
or
jne
inc
rcr
aad
or
pop
icebp
and
add
or
cld
jmp
clc
sbb
mov
xor
call
mov
dec
mov
mov
lcall
les
dec
mov
mov
fcomi
icebp
test
sbb
pop
adc
ror
vmulps
je
mov
pop
push
add
pop
lods
jns
outsb
pop
cli
adc
jno
pushw
ret
shl
in
les
jbe
sub
ret
xchg
pop
stos
xchg
movzbl
je
and
sahf
pop
adc
iret
push
mov
push
or
push
fstl
xor
mov
mov
add
and
daa
dec
lods
adc
or
dec
loope
jmp
cmp
mov
pop
push
dec
pusha
cli
push
in
test
jne
inc
cmc
mov
ret
cmp
jecxz
adcl
testl
cmp
cli
or
jbe
mov
push
jbe
or
or
and
push
popa
enter
arpl
jae
cmp
xor
sub
cmc
test
pop
jne
mov
sub
xchg
add
inc
xchg
mov
arpl
jmp
push
loop
xlat
inc
push
popa
pop
mov
into
fdivrl
popf
xor
adc
push
rcrl
push
mov
shlb
push
ljmp
dec
test
adc
insb
daa
pop
ljmp
into
push
and
jae
sahf
inc
cld
out
inc
cld
xchg
pop
rcrb
flds
cmp
bound
cmp
test
sti
jmp
daa
cmpsb
dec
bound
push
cld
mov
push
add
pop
inc
js
xor
test
scas
jg
jmp
push
hlt
aas
into
outsl
push
mov
sub
aam
cmp
inc
imul
push
sub
mov
popf
in
dec
xchg
int
and
fwait
xchg
aaa
mov
movsb
sub
inc
adc
outsb
sarb
pop
aas
test
add
sti
lods
lahf
cwtl
clc
bound
lret
sbbl
int
idivl
push
aas
idivb
and
cld
mov
push
mov
loop
mov
push
push
call
loop
pop
ret
int3
cmp
adc
aad
jg
mov
jg
push
pop
adc
dec
stc
push
repz
mov
test
inc
ja
dec
imul
fisttpll
outsb
mov
jmp
repz
scas
sahf
lret
jmp
icebp
out
je
popl
lret
jns
mov
pop
lds
sar
ret
dec
dec
mov
sti
loop
adc
fcompl
jb
and
inc
pop
lods
adc
outsb
les
fildl
xor
lods
aad
fdivrl
xchg
aad
xchg
add
or
cwtl
ss
loope
pop
push
sbb
loope
out
movsl
out
cwtl
outsl
test
mov
mov
jne
std
mov
mov
push
sbb
rcr
adc
das
xor
sub
jnp
stos
or
icebp
add
mov
in
cmpsl
xchg
pop
cli
mov
addr16
jmp
movb
out
sbbl
adc
repnz
test
cmpsb
xchg
outsl
push
mov
out
sub
xchg
jb
outsl
sub
and
cmp
pop
lea
incl
rcrl
insb
push
push
xchg
clc
adc
inc
xor
es
nop
cs
imul
sub
and
and
jl
sub
jecxz
fcomps
filds
outsb
dec
mov
xchg
enter
jbe
mov
pop
lea
fadds
jne
or
mov
outsb
stc
push
in
push
fcompl
rcrl
lea
adc
mov
jge
cmp
dec
or
pusha
or
push
sub
jl
pop
jle
or
jg
movsl
data16
incb
int3
sbb
cld
repnz
push
and
dec
imul
lcall
sub
out
cld
es
cmc
lahf
mov
xchg
jns
mov
cmp
push
popa
iret
sbb
scas
push
rcl
sub
jmp
jmp
mov
cmc
fs
cmpsl
push
adc
movsb
das
jno
sbbl
inc
std
mov
imul
mov
scas
cs
mov
and
add
movsb
pop
and
dec
bound
in
outsl
mov
ss
scas
fidivrs
fisubs
inc
pusha
mov
cmp
push
loop
pop
scas
out
sub
pop
inc
fistpl
inc
adc
pop
aad
inc
in
inc
mov
dec
stos
lcall
in
test
push
imul
in
aas
lock
into
adc
dec
mov
lods
adc
insl
jns
lret
insl
cmp
cmpsb
jg,pn
jl
test
add
mov
cmpl
fsts
ss
lods
out
addl
lret
cmp
and
jge
insb
sbb
call
xor
xchg
insl
imul
mov
jns
imulb
mov
mov
ja
mov
in
and
test
outsl
fiadds
jle
sahf
dec
xchg
lock
add
test
adc
xchg
and
mov
test
loop
lods
jno
jle
xchg
mov
push
push
mov
cmc
mov
jp
mov
in
shll
cmp
mov
popf
je
mov
lahf
jnp
xchg
add
rolb
lret
icebp
in
mov
pop
and
inc
jl
push
inc
add
adc
inc
push
mov
mov
inc
test
cmpsl
and
call
shrb
out
sbb
test
enter
pop
das
nop
mov
sub
sub
pop
lds
mov
sbb
sub
fs
mov
leave
and
addr16
inc
pop
das
or
loopne
mov
icebp
xchg
sbbl
ljmp
addr16
or
mov
or
inc
pusha
push
cltd
iret
push
andl
leave
inc
mov
das
push
pop
jb
inc
sahf
aam
jecxz
jle
outsl
sahf
rclb
aad
cmp
scas
mov
and
adcb
cmp
scas
adcl
mov
xlat
mov
cs
cld
jle
mov
lock
shlb
subb
xchg
xchg
loopne
cld
inc
pop
in
dec
mov
cmpsb
sub
pop
jne
loope
adc
out
lret
test
sub
mov
stos
cmp
fs
jecxz
hlt
stc
mov
sahf
cmpsl
xchg
push
fimull
jb
push
dec
js
pusha
push
jo
nop
scas
sub
ds
cs
sbb
ss
rcll
push
jno
cmp
adc
cltd
lods
mov
push
pop
push
push
dec
fsubrp
jp
inc
lahf
add
sbb
decl
or
cmpsl
test
or
loopne
es
insb
adc
pop
ja
inc
aad
sbb
mov
jmp
and
pop
in
xchg
jp
test
sbbl
in
jnp
shrb
sbb
fistpl
push
imul
lret
or
loopne
aas
hlt
repnz
cltd
mov
push
mov
inc
xor
jl
mov
stos
in
out
xor
xchg
in
push
and
dec
mov
jmp
sarb
mov
ror
xchg
push
mov
aaa
insb
fs
fsubl
repz
dec
das
xor
sbb
iret
jg
and
mov
ret
jp
sbb
lods
jo
inc
cs
faddl
or
xor
sbb
js
or
lcall
in
cli
or
push
popa
fcmovnbe
aad
cmpsb
sti
addb
aad
pop
mov
cmp
popa
dec
roll
cmp
adc
xor
imul
inc
div
push
cwtl
mov
mov
dec
lret
rcrl
popa
shll
mov
lret
xor
out
and
enter
xlat
push
jmp
mov
cmp
fwait
daa
cmp
nop
cmpsl
aad
movsl
pop
add
mov
jge
stc
je
xor
cmpl
bound
lret
aaa
loope
mov
lds
mov
mov
test
push
imul
mov
mov
jno
add
lcall
pop
mov
out
cmpsb
aaa
dec
jb
lret
scas
fdivrl
add
sarl
xchg
jnp
popa
sbb
xor
mov
jle
push
add
xor
xor
lret
sbb
sarl
aam
mov
adc
arpl
pop
andb
sub
ret
imul
pop
aaa
mov
xchg
and
pop
push
gs
rclb
rorl
xorl
adc
sar
push
mov
pop
and
ficomps
lcall
arpl
and
shlb
aaa
mov
pop
cmp
or
outsb
pop
popf
push
addr16
das
jecxz
lea
mov
test
fists
pop
test
nop
div
lea
scas
stos
jnp
add
imul
cwtl
out
push
mov
cmp
cmp
push
mov
aas
nop
testb
push
cltd
sar
loope
dec
cmc
cmp
jnp
in
lock
sub
pop
add
mov
xchg
mov
adcl
or
sahf
mov
inc
call
out
mov
xor
and
lods
pop
sbb
mov
sarb
loop
adc
inc
pusha
mov
rclb
xor
stos
sub
pop
pop
div
insb
inc
addr16
pusha
gs
lret
jne
iret
push
std
pop
lret
adc
shll
lock
enter
icebp
cmpsl
enter
mov
mov
leave
repnz
mov
inc
popf
sbb
and
loopne
inc
or
push
mov
mov
lds
insb
xchg
adc
leave
fisttpll
mov
dec
in
push
idivl
inc
stc
sub
ljmp
inc
call
pop
imul
push
inc
or
push
mov
lahf
dec
fptan
add
xchg
js
in
mov
mov
jp
mov
je
and
inc
pop
fnstsw
jmp
cmpsb
loopne
jecxz
xor
testb
push
jns
cmp
adc
movsl
xchg
jnp
adc
mov
push
xor
lahf
mov
movmskps
sbb
leave
cmpsl
outsb
pop
mov
in
cmp
add
lods
sbb
fistps
or
mov
fimull
test
popa
push
cmp
sub
ror
arpl
jge
aas
in
mov
sahf
fwait
xchg
mov
shlb
iret
mov
inc
cli
xor
pop
mov
add
pop
imul
jno
aaa
cmp
cwtl
add
loope
add
add
pop
sbb
mov
enter
imul
add
pop
ds
mov
pushl
sbbb
stos
inc
gs
fsubr
sbb
lcall
cmc
rolb
pop
mov
pop
dec
lahf
jbe
pushf
cmp
addr16
cmp
aad
adc
imul
js
or
push
lret
pop
and
aam
jmp
fwait
es
sub
fidivrl
or
xlat
out
sbbl
dec
mov
imul
mov
cmp
incl
scas
and
repnz
xor
test
jle
mov
push
or
in
xor
mov
xchg
movsl
aad
imul
cmp
adc
call
jp
fwait
sbb
sti
hlt
loopne
inc
add
xchg
lea
inc
arpl
dec
pop
and
jae
or
or
dec
mov
mov
jne
pop
enter
jmp
cmp
aas
rorb
adc
and
sub
jg
push
scas
cltd
lock
push
push
movsb
sub
rorb
js
fcoml
in
pop
aad
cmpl
mov
xchg
or
dec
pusha
enter
arpl
or
sub
pop
xor
js
enter
push
jg
ficoms
sbbb
sbb
jo
cld
mov
dec
pop
xor
fisttpl
mov
inc
xor
scas
inc
sahf
mov
stos
rclb
add
mov
out
mov
pop
ss
xor
push
les
sbb
cmp
adc
or
out
je
xor
mov
inc
mov
out
sahf
mov
mov
movsl
jp
loop
or
aad
in
jecxz
pop
jecxz
jnp
cltd
ja
xchg
xchg
fidivrl
aad
push
movsl
and
subl
lods
push
outsl
cwtl
into
xchg
or
ficoms
addr16
inc
repz
cmp
jbe
movsb
into
icebp
mov
push
mov
mov
pop
test
into
sbb
inc
and
dec
pop
dec
xchg
sub
mov
aam
push
mov
inc
cmp
shll
xchg
or
adc
lahf
xchg
sub
jecxz
rolb
mov
pop
mov
pop
inc
jl
divl
cli
add
mov
nop
les
xchg
pop
clc
clc
imul
push
cmp
pushf
dec
and
stc
dec
pop
inc
ds
pushf
cmp
jb
mov
outsb
pop
push
mov
test
fdivrl
ss
lea
mov
repnz
imul
lcall
and
cmp
pop
ret
stc
aad
cmpl
jl
cmpsl
sub
add
xor
fidivrl
mov
fildl
fcmovu
add
mov
mov
jo
add
jae
xor
jmp
mov
inc
aas
movsb
or
mov
sub
jbe
stos
out
mov
jbe
mov
add
cld
popa
lret
sbb
jmp
out
ljmp
or
jp
enter
ljmp
xchg
popf
ss
cmp
pop
jecxz
xchg
mov
push
xchg
data16
xor
in
sti
iret
cmp
xor
outsl
je
sbb
repnz
inc
dec
mov
xchg
xchg
sub
xchg
scas
push
or
xor
in
cmp
in
mov
sub
enter
sbb
mov
mov
push
rcl
jno
or
or
add
repnz
xor
dec
push
xor
pop
rcrb
push
push
lods
xchg
inc
leave
mov
scas
arpl
mov
add
ficoml
adc
mov
shl
je
push
xor
pop
and
sbb
mov
fbstp
enter
cmpsb
hlt
fistps
mov
or
or
dec
repnz
mov
popl
adc
xor
divl
sub
cmpsl
lret
scas
or
test
pop
mov
jbe
movsl
jnp
ss
or
ss
mov
or
push
int3
cld
fdivrl
adc
stos
sub
push
push
xchg
cmp
push
ja
ja
xchg
mov
leave
addl
cmp
inc
push
xor
movsl
mov
ss
lret
pushf
sub
mov
or
sbb
jo
pushf
mull
je
int
mov
bound
ficoml
mov
lds
fwait
pop
push
ds
push
inc
lret
lds
out
cmp
cmp
cmp
popf
cmc
fldcw
into
adc
fprem1
loopne
ds
ss
sbb
jmp
mov
int
mov
push
jno
ss
dec
repnz
sub
cmp
push
jmp
cwtl
push
xchg
and
scas
cmp
push
ja
mov
mov
fcoml
or
shlb
mov
dec
xchg
js
xchg
dec
dec
pop
pushf
test
shrl
push
xor
push
sub
or
jle
push
lods
fidivs
pop
pop
les
xchg
xchg
xchg
mov
adc
and
xor
mov
pop
cmpsl
inc
xor
outsb
das
mov
sub
pop
aam
rorl
dec
aas
sub
jne
xchg
inc
cmp
daa
int
push
cwtl
sub
pop
jp
mov
fildl
cld
je
sub
push
xor
movsb
ss
jp
cli
cmp
xor
xchg
cmpsl
cmp
cmp
test
js
add
dec
mov
popa
mov
xor
cwtl
gs
mov
cwtl
push
mov
dec
jmp
lock
in
neg
es
gs
stos
cld
sbb
inc
es
sbbb
add
loop
xchg
or
add
scas
out
xchg
sub
js
lods
shrb
ret
sbb
data16
inc
pop
push
cmp
fcoml
pop
pop
fsubrl
sub
stos
jno
mov
shlb
mov
or
mov
lret
push
fbstp
loopne
lea
and
sbb
xchg
imull
sbb
xchg
stos
test
iret
nop
nop
dec
xor
orl
sbbl
and
insl
out
add
lock
xor
sti
push
pop
sub
imul
test
enter
and
cmp
cmp
adc
sub
mov
add
adc
inc
xorb
scas
insb
xchg
aas
into
pop
das
pop
pusha
adc
insl
les
int3
ficompl
arpl
push
inc
scas
xchg
sub
addb
pop
and
add
cmp
inc
mov
negl
jbe
pop
stc
inc
fiadds
inc
pop
jbe
aas
data16
cwtl
pop
repz
pop
movsb
mov
insl
cmc
aad
and
xor
pop
mov
lahf
mov
push
fadds
psrad
jo
ljmp
std
repz
repz
loopne
sbb
bound
jmp
pushf
loopne,pn
dec
cmp
adc
imul
outsl
lahf
arpl
pop
outsb
dec
insl
and
mov
mov
fs
push
shrl
sarb
jecxz
and
cmpsl
inc
xchg
mov
mov
movsl
adc
and
fdivrl
jno
mov
in
shl
adc
repz
repz
or
xor
mov
jnp
sbb
cs
into
je
jp
sbb
xlat
cli
inc
xor
mov
add
xchg
mov
mov
push
xor
incb
and
add
cltd
sbb
popf
adc
enter
mov
jle
dec
lahf
sti
sti
leave
mov
cld
out
inc
xor
mov
xchg
lea
outsb
arpl
adc
pop
push
add
jae
pop
sbb
pop
mov
dec
mov
push
sarl
jg
jb
gs
or
sub
int
fldt
and
jmp
popa
jne
in
xchg
mov
inc
fucom
lock
in
pop
mov
push
call
or
les
outsb
cmpsl
pop
xchg
rorl
mov
xchg
lahf
adc
add
push
or
and
inc
sub
sahf
pusha
jb
insl
arpl
xchg
push
push
xchg
cld
cmc
mov
out
jg
mov
iret
adc
push
aas
add
mov
push
sbb
adc
dec
aam
xor
outsb
repnz
loopnew
iret
sarl
adc
jo
and
aas
hlt
adc
adcl
inc
adc
add
or
inc
xchg
mov
cmp
mov
push
jae
push
pop
orl
orl
add
push
sti
mov
aas
push
mov
inc
hlt
in
lea
dec
push
xor
outsb
cmp
fcomps
add
adcl
lcall
dec
mov
enter
lea
or
add
sub
repz
mov
sbb
inc
dec
mov
icebp
and
jge
pushf
mov
bound
inc
call
sub
scas
add
shll
addr16
dec
push
in
arpl
pop
sub
outsl
lds
lea
loop
nop
insb
jne
scas
mov
jne
xchg
lret
sub
push
mov
jne
stos
fdivl
lea
dec
xchg
cli
or
push
into
and
dec
lret
xor
jge
loope
imul
divb
shlb
mov
push
addl
aaa
mov
sbb
es
mov
idiv
inc
push
xchg
fs
adc
out
test
js
frstor
xchg
push
mov
inc
pop
and
das
inc
cmp
mov
mov
sub
cmpsb
out
dec
fidivl
push
iret
push
pop
in
add
mov
outsb
rcrb
ret
leave
inc
sub
xchg
shlb
jae
ret
or
dec
add
add
add
aas
adc
lods
inc
inc
popa
pop
in
popa
loop
xchg
pop
shl
add
ljmp
jae
xchg
jge
xchg
inc
cmpsb
push
lock
test
movsb
cmp
dec
add
je
and
xchg
test
mov
aaa
push
xor
testb
fsubrp
cmpsl
cmp
mov
and
mov
fistps
daa
data16
stc
sub
test
lock
mov
sti
arpl
int3
jg
xor
sbb
std
push
insb
sbb
leave
ljmp
pop
adc
push
js
jp
rorl
je
mov
js
push
arpl
outsb
rcrl
popf
es
mov
mov
xchg
jp
sbb
repnz
setbe
in
in
jae
mov
lcall
cmpsl
je
dec
insl
fmuls
mov
aaa
call
scas
lods
jne
subb
loop
mov
les
ret
jl
loopne
push
and
scas
inc
jecxz
inc
xchg
jne
dec
insl
push
pop
in
std
push
fdivr
nop
in
add
and
enter
ret
cs
pusha
fidivl
hlt
cmp
ds
pop
nop
decl
pop
loope
outsl
lds
mov
mov
pop
dec
jp
and
pop
xchg
inc
iret
andl
add
xchg
dec
push
ret
dec
push
pusha
sbb
jnp
inc
repz
ret
push
xchg
jle
test
mov
fs
cmp
mov
je
pushf
subb
stos
adc
lea
out
mov
xchg
mov
sti
ljmp
push
sbb
push
xchg
xchg
jne
repz
jl
imul
sub
fmuls
in
push
bound
gs
mov
cs
test
lcall
xor
ss
lea
inc
pop
insb
jl
lods
and
jae
push
jmp
jge
cmp
fwait
sbb
dec
xor
sarb
push
test
jno
or
sub
aas
ljmp
roll
jp
adc
outsb
cmc
mov
mov
sub
mov
cmpl
sbb
cmp
mov
jl
or
push
rcrb
outsb
jg
ret
sub
add
movsb
sbb
sub
icebp
stc
insl
add
loopne
pop
push
xchg
lds
adc
adc
test
pop
mov
mov
add
jae
adc
cmp
loop
das
dec
repz
jge
loop
xchg
rorl
cmp
mov
movsb
cmp
cs
addb
lret
push
push
jae
mov
jmp
nop
add
icebp
mov
or
pop
test
mov
loope
adc
fwait
add
cmp
xchg
or
cs
fsubrl
lret
lret
js
adc
test
hlt
je
fs
xchg
cltd
xchg
push
dec
mov
lcall
cmp
add
push
ljmp
pop
dec
iret
push
out
jmp
add
ret
or
cmc
mov
pusha
sahf
add
adc
jno
loopne
dec
loopne
dec
lret
fiaddl
scas
jge
inc
popl
mov
jecxz
inc
push
dec
and
inc
outsl
push
mov
ljmp
lea
scas
sbb
cld
cmp
fwait
loop
ret
je
dec
fstpl
sbb
fwait
mov
xchg
ficoml
pop
pop
lret
xor
adc
xor
rcll
jo
imul
jmp
pop
cmp
popa
popf
xor
inc
jae
leave
arpl
pop
sub
lahf
xchg
add
std
cltd
pop
xchg
pop
stos
dec
ja
out
ds
pop
inc
dec
icebp
mov
movsb
mov
rcl
xor
ljmp
ljmp
jnp
loope
add
jl
adc
in
cmp
xor
sbb
jb
stos
sub
mov
cmp
cmpsl
popf
movb
xlat
jnp
push
mov
cmc
xchg
gs
lea
mov
mov
xchg
loope
fwait
leave
int3
stc
cs
xor
jge
leave
jmp
sub
lahf
and
hlt
scas
fmulp
icebp
lods
mov
inc
fld
lcall
mov
lcall
mov
fwait
mov
cmp
fwait
mov
stos
ret
xchg
dec
push
jno
std
jne
push
mov
push
lahf
dec
xchg
jle
and
mov
sub
shlb
ds
push
sub
xchg
or
push
or
dec
inc
out
add
sub
loope
xchg
push
int
inc
sahf
insl
mov
ljmp
push
int
test
lods
pusha
fucom
sbb
into
outsb
mov
dec
inc
mov
jmp
dec
in
sbb
fidivs
adc
cld
xchg
cmpsb
jmp
test
cmpsl
arpl
pop
jmp
push
shlb
jbe
imul
stos
aad
dec
push
inc
aam
pop
mov
cwtl
push
cmp
fmulp
loope
ljmp
lods
imul
xlat
push
lods
inc
cmpsb
stos
imul
enter
insb
lcall
out
sub
rcrb
flds
sahf
inc
cwtl
loopne
aas
adc
inc
add
test
arpl
sub
dec
pushf
push
mov
xorb
xchg
imul
flds
add
neg
enter
fwait
and
daa
sbb
int
mov
out
imul
into
cld
cs
dec
cld
jne
push
xor
jp
scas
xor
push
mov
mov
icebp
or
cmp
in
or
adc
enter
jbe
pop
lea
mov
cmp
sbb
xchg
xor
add
sub
imul
sti
and
enter
jnp
jp
cmp
lock
testb
enter
push
add
rclb
dec
xchg
sarb
push
daa
in
clc
ficoms
cwtl
and
cmp
jo
mov
or
dec
xchg
add
pushl
xchg
inc
jp
clc
jge
cmp
nop
lea
cmpsb
xlat
dec
cmp
jbe
pop
push
mov
cmc
repz
jbe
dec
jecxz
arpl
push
std
mov
cmp
scas
into
add
push
pop
cmp
dec
testl
add
nop
jle
xlat
cmp
xor
js
andl
es
push
fstpt
mov
mov
sbb
mov
jg
push
adc
pop
rcl
cwtl
neg
and
pop
mov
es
cmc
pop
push
mov
and
decl
std
mov
sbb
jne
outsl
data16
int
add
shll
in
jae
sub
leave
inc
mov
add
sub
adc
and
push
fstl
dec
call
adc
stos
or
lods
in
mov
fcomp
incl
jmp
cltd
xor
loope
movsl
aaa
sbb
xor
cld
nop
mov
js
push
sahf
mov
cmovbe
add
rorl
mov
xor
vunpckhpd
scas
xchg
fcoms
adc
shrl
test
ss
add
pop
jo
push
out
mov
imul
mov
dec
fs
popa
fwait
rcl
mov
xor
in
inc
into
xlat
or
lahf
xor
and
js
test
repz
sbb
mov
aam
mov
das
adc
dec
fistpll
aad
pop
enter
mov
jl
jbe
movsl
ret
sbb
loop
call
mov
push
dec
stos
orl
out
pop
mov
jg
mov
or
dec
aad
pop
arpl
dec
pop
push
mov
xor
test
mov
cmp
jae
mov
outsb
insb
xor
mov
test
loopne
add
add
push
inc
push
shrb
mov
bound
aad
lock
jmp
notb
pop
pushf
mulb
xor
and
shll
mov
aam
mov
inc
xorb
inc
pop
int3
mov
inc
mov
inc
adc
jle
pop
sbb
sbb
pop
inc
ds
js
mov
mov
and
cmp
mov
outsb
or
cmp
in
hlt
arpl
cmp
ss
stc
btc
sbb
cmp
int3
das
lods
push
xor
pop
daa
filds
push
dec
xor
test
out
cmp
imul
gs
ret
xchg
xor
inc
adc
rcrl
xor
in
clc
rorb
mov
loopne
lcall
ret
imull
mov
lods
inc
pop
xchg
mov
shlb
cmpl
in
xchg
test
or
xor
push
out
cmp
mov
jb
inc
jbe
shr
dec
mov
add
mov
mov
push
and
xchg
or
xchg
pop
jle
xor
dec
out
insb
test
add
push
out
pop
xchg
push
or
lea
adc
lea
sub
sbbl
das
in
cmc
lret
xor
leave
clc
imul
mov
test
aam
mov
jo
and
add
les
cmpsl
shrl
lahf
rorl
cmp
add
loopne
and
fcoml
push
addr16
ret
in
ror
int
testl
cmpsb
pop
and
dec
js
push
xchg
sbb
outsl
push
cld
ja
lock
dec
insb
xchg
push
movsl
mov
cmp
mov
aas
daa
into
mov
pop
cld
jge
fisubs
mov
rolb
cmp
clc
jns
imul
test
lahf
lods
lock
cmpl
les
inc
cli
pop
adc
mov
lahf
das
cmp
pushf
sub
pop
ljmp
dec
mov
push
fnsave
jl
popa
aam
jae
push
adc
cmpl
pop
fstps
dec
loop
lock
loopne
xchg
ret
add
jl
or
mov
pop
lea
mov
pop
je
aad
dec
mov
and
dec
scas
mov
cmpsb
loopne
std
test
adc
mov
mov
or
insb
sub
xchg
or
add
in
jae
nop
icebp
inc
pop
sub
sub
pop
xor
jns
shrb
mov
sbb
repz
cmc
adc
iret
das
cmpsl
mov
aam
je
push
outsl
cltd
pop
rclb
lods
add
or
dec
xchg
sub
fisttps
pop
dec
xchg
es
ss
and
in
xor
push
or
sarl
sub
and
scas
aad
popa
dec
mov
aad
aaa
add
or
push
pop
sbb
cmp
mov
pop
mov
outsl
sub
dec
add
mov
jge
mov
out
jne
decl
cmp
ja
sub
xor
cwtl
pop
push
adc
outsb
jmp
ret
imul
imul
lret
push
andl
mov
loope
movsl
out
sub
inc
popf
insb
xchg
arpl
mov
cmpsb
leave
nop
enter
in
ret
insl
ret
mov
cmc
sub
in
outsb
sbb
jle
mov
lock
jg
sbb
ret
add
jle
xor
xchg
aas
pop
cmp
fs
mov
push
repnz
sarl
xchg
and
dec
es
in
movsl
lcall
movsl
sub
sbb
sbb
fwait
test
sub
jae
cmp
cmp
ret
divl
mov
sarl
insb
adc
jle
mov
or
sub
xlat
mov
cmpsb
ficoml
scas
jnp
xchg
call
mov
call
dec
and
cmp
dec
ds
mov
punpckhbw
cmp
xchg
xor
pop
fiadds
shll
and
xor
repnz
push
insl
dec
stos
push
mov
jns
xchg
mov
je
cli
cmpsb
push
in
pop
stos
xchg
adc
mov
pop
mov
and
dec
arpl
lods
inc
clc
xchg
add
xor
jns
xchg
dec
sbb
xchg
xlat
ret
outsl
imul
fdivs
fisubrs
das
sub
scas
add
push
rol
push
mov
movsl
dec
xlat
loop
mov
nop
adc
das
movsl
lahf
cs
icebp
je
adc
sar
inc
xchg
push
pop
xchg
mov
rorl
jns
jp
ja
sbb
adc
std
fdivp
mov
stos
jle
es
push
sub
and
xor
xor
pop
lret
sti
gs
test
fs
cmp
hlt
imul
inc
in
xor
int
jno
sbb
and
cmp
movsb
sbb
inc
cwtl
fwait
dec
loopne
int3
mov
fs
mov
push
pop
or
out
add
and
add
adc
sbb
outsb
sbbl
mov
gs
push
push
push
and
or
lods
push
aaa
mov
xchg
mov
xor
pop
gs
jno
cmc
icebp
into
int3
scas
adc
loop
sbb
lea
rorl
adc
fnstcw
cli
xchg
repz
stc
imul
aad
mov
sub
js
pop
pop
dec
cltd
adc
stc
jae
daa
arpl
nop
aad
into
and
mov
lds
sub
and
imul
mov
or
xchg
push
mov
jg
or
inc
inc
cmp
mov
dec
pusha
inc
cwtl
out
pop
jl
clc
adc
fldenv
getsec
ds
test
into
jno
hlt
jle
ja
dec
mov
dec
xor
cld
pusha
cmpl
adc
or
gs
loop
xchg
jecxz
xchg
and
xorl
mov
mov
cmpsl
mov
int
js
pusha
mov
ljmp
push
inc
cld
push
or
mov
dec
jmp
mov
fcompl
sub
fildl
add
lock
mov
jmp
fbld
pop
in
or
addr16
out
data16
outsl
pop
cmp
aas
lods
inc
push
mov
jae
mov
pushf
stc
push
cltd
mov
push
xchg
in
dec
adc
push
and
stos
jbe
movsb
sub
enter
cmp
loopne
incb
mov
dec
test
cmp
out
bnd
mov
pop
mov
cwtl
add
mov
sti
repnz
push
xor
fimull
lret
pop
gs
es
inc
mov
inc
mov
push
cltd
ljmp
in
out
mov
aas
push
lret
fcomps
cmpsb
cmpsb
ja
mov
filds
cmc
ds
ret
nop
iret
pushf
and
movl
inc
add
pop
in
jmp
inc
mov
xchg
cmpsb
adc
stos
scas
mov
add
and
daa
mov
flds
hlt
fldt
aas
out
cmp
push
pop
xchg
pop
sahf
push
cmp
inc
jge
or
pop
and
add
cs
in
push
dec
fnsave
xchg
jecxz
mov
cmp
xchg
scas
js
xorl
jbe
inc
mov
cmp
ficoms
adc
adc
mov
add
pop
aad
push
stos
dec
xchg
jecxz
xor
cmp
aaa
mov
add
sub
cmpsl
sbb
push
popf
outsb
leave
add
dec
jmp
ja
xor
cmp
sub
les
scas
fcom
popa
scas
fsubr
bound
or
mov
dec
mov
add
adc
fcomps
cmp
into
pop
insb
clc
cmp
jl
rcrb
pop
lret
adc
jg
push
sub
jl
xor
pop
je
inc
test
xchg
jno
push
nop
test
popf
rcrb
mov
and
scas
dec
dec
dec
lahf
jne
in
insb
and
cmpsl
xor
cmp
add
push
rcrb
lods
mov
push
sarb
test
jmp
mov
pop
std
sbbl
adc
insl
fstpt
arpl
mov
push
xor
mov
cmp
dec
fnstsw
cmp
cmp
ja
mull
or
mov
addl
lcall
rorb
ja
fcmove
add
call
mov
sub
push
data16
rcrl
pop
or
xchg
test
clc
xchg
fildl
fs
xchg
aas
and
and
sub
jbe
pop
pop
jne
inc
std
pop
cld
call
test
in
insb
or
xchg
pop
xchg
testb
addl
popf
push
cli
inc
loope
or
fcoms
scas
insb
pop
je
add
dec
call
mov
xchg
cmpsl
xor
stos
push
pushf
js
cmpsb
push
cmpsl
loopne
inc
leave
push
push
rcrl
xchg
fisttps
inc
mov
mov
push
xchg
inc
mov
stc
jb
push
add
inc
or
pop
xorb
ljmp
fldenv
jl
pop
bound
in
in
mov
daa
xchg
inc
cmc
mov
out
pop
popf
addr16
out
and
inc
orb
xchg
cmpsb
xor
or
call
cmpsb
cmp
ss
mov
mov
call
xchg
and
les
pop
movsb
sbb
xchg
jmp
shlb
inc
mov
int
mov
or
cmp
xor
inc
xchg
js
das
call
mov
fldl
push
mov
test
pxor
push
mov
in
sbb
aam
mov
jbe
jnp
xchg
mov
add
push
xchg
mov
ljmp
xor
push
jp
imul
and
ss
lock
insl
neg
shrl
add
and
xchg
push
cmp
inc
push
pop
xchg
cwtl
mov
xor
mov
dec
bnd
xor
lret
inc
sbb
gs
xchg
out
rcl
xchg
inc
sub
mov
sbbb
fsubl
inc
xchg
jecxz
cmp
stc
and
arpl
sbb
lods
shrl
out
sub
adc
movsl
imulb
je
cmp
sub
in
adc
push
dec
mov
sbb
rcrb
jmp
xchg
dec
inc
aad
jo
push
shrl
das
lock
insb
xlat
mov
mov
cmp
or
xchg
mov
ss
cmp
js
xor
fiaddl
sarl
popa
mull
les
cmp
push
adc
jb
inc
test
roll
popf
insb
mov
adc
mov
popa
fmul
gs
cmp
or
mov
cmc
jle
iret
jg
push
pop
cmpsb
lods
movsl
out
xchg
insb
repnz
lcall
xor
jmp
pop
push
sub
enter
dec
sbb
ss
push
sub
lcall
dec
inc
pop
loop
jno
lahf
scas
outsb
js
out
adc
in
mov
scas
sbb
daa
insb
adc
les
in
rorb
imull
fbld
fsubs
addr16
mov
cli
fsubs
push
pextrw
dec
sbb
lret
xor
ja
pop
or
int3
movsb
mov
add
and
jne
pusha
lea
adcb
imul
aas
loop
xchg
in
xchg
pop
aaa
in
test
jne
rolb
adc
push
cwtl
cmp
cmp
in
inc
cs
pop
push
in
sbb
insb
sub
cmp
push
cmp
jge
sub
in
or
fcmovnb
cmpsb
mov
sbb
ret
imul
jae
jnp
repnz
push
lods
mov
filds
dec
loope
adc
stc
mov
inc
icebp
push
dec
push
xor
mov
mov
imul
mov
ljmp
jecxz
test
sbb
sbb
imul
or
fistpl
pop
out
jb
add
int
mov
pop
ds
jae
outsb
push
and
pop
je
sub
add
int3
mov
dec
push
repnz
fwait
loop
sub
push
xchg
repnz
push
loop
pop
frstor
bound
andl
aam
inc
test
dec
in
and
cltd
lahf
mov
sub
in
sbb
roll
adc
mov
jae
mov
iret
cmp
lret
sub
fistps
jbe
addr16
pop
int3
add
scas
xor
push
lods
cmpsb
jmp
cmp
add
jo
mov
adc
loope
pushf
es
jns
test
js
push
data16
pop
pop
add
nop
js
out
nop
sahf
into
lods
rcrl
add
push
call
dec
xchg
lret
fwait
pop
jae
cmp
mov
mov
push
sub
xchg
bound
mov
jge
jne
dec
out
fstps
pop
or
mov
aam
xchg
shlb
daa
negb
call
imul
xchg
fucompp
mov
push
leave
fisubs
or
leave
mov
movsl
in
inc
outsw
aam
iret
inc
cmp
clc
hlt
xor
mov
lret
jle
adc
cltd
push
mov
stos
mov
lret
mov
pop
xor
sarb
hlt
data16
rcl
push
dec
lret
and
mov
inc
mov
jb
xchg
ja
shlb
sbb
or
sub
xchg
pop
xor
aas
int3
push
rolb
mov
sbb
cmp
fwait
dec
popf
mul
dec
push
rcr
mov
repnz
and
xchg
adc
mov
shll
xsave
push
xchg
movsb
push
or
inc
jo
xor
jge
and
sub
lds
cltd
sbb
push
repz
lret
mov
rcrl
out
popf
mulb
int3
lret
or
push
clc
clc
shlb
jp
ljmp
dec
sti
mov
out
andb
xor
jno
loop
mov
dec
test
outsl
pop
xor
and
jle
js
pop
rorl
sub
jl
push
pop
nop
icebp
shll
insb
xor
push
xor
mov
and
mov
int3
mov
pop
push
iret
cmpsl
or
cmpsl
and
xor
jne
addr16
push
dec
inc
cmpsl
lahf
sub
lahf
jb
mov
cmpb
out
xchg
nop
les
sarl
jne
mov
sarb
sbb
sbb
push
jmp
xor
shrl
xor
icebp
adc
je
inc
test
push
std
inc
sub
mov
jb
cltd
pop
icebp
and
adc
scas
xchg
inc
out
jnp
out
or
ja
jmp
int3
xchg
push
add
fnstsw
cmp
or
jb
mov
testb
xorb
out
cmpsl
mov
mov
pop
and
add
jo
xor
fisubl
or
mov
aaa
int3
mov
mov
adc
sub
orb
fmul
imul
dec
out
cltd
ss
jnp
icebp
pop
shlb
imul
sub
aad
daa
out
and
xchg
and
cltd
loopne
rclb
insl
cmp
addr16
mov
push
out
aam
daa
add
aam
movsl
cs
jl
add
or
aam
cmovns
dec
push
ret
ss
and
mov
xchg
jnp
das
fldt
jb
out
cwtl
cwtl
adc
jae
movsb
add
dec
inc
int
sbb
sub
mov
cmc
lock
mov
scas
mov
sub
scas
test
push
xchg
mov
cld
inc
arpl
dec
jg
imul
xor
push
ret
repz
and
aad
add
les
test
enter
xor
fcoms
cmp
ret
aad
pop
or
std
push
pop
xor
mov
fdivs
jecxz
cmp
jle
aad
push
aad
push
shrb
inc
add
or
xlat
shl
pop
mov
icebp
les
jle
incl
xchg
incl
cltd
loop
push
movl
mov
stc
mov
ret
inc
test
fistpl
movsl
sbbl
xchg
les
sbb
add
jnp
loop
js
pop
mov
mov
mov
out
in
mov
pop
divl
shll
cmpsb
mov
add
popf
mov
sbb
outsl
subb
icebp
adc
out
je
test
aas
mov
fisubs
sub
scas
adc
mov
inc
mov
cmpsb
ret
stc
shl
xor
popa
lods
jmp
mov
adc
subl
ljmp
mov
data16
icebp
lret
nop
and
pop
cmp
scas
stos
and
xchg
subl
sbbb
negb
scas
xor
outsl
sbb
popa
and
xlat
lcall
push
dec
mov
cmp
adc
imul
scas
sbb
dec
lock
inc
cltd
or
pop
or
aam
add
pop
jo
push
add
movnti
cmp
lods
sbb
or
sub
add
inc
jecxz
and
adc
inc
or
push
pop
or
dec
fiadds
dec
inc
fidivs
and
sbb
jle
je
js
cmp
add
inc
call
call
clc
fwait
dec
dec
lods
ljmp
jp,pt
adc
scas
add
mov
jecxz
arpl
mov
pop
outsb
fwait
ja
addr16
std
pop
or
sarb
pop
loop
dec
mov
add
dec
mov
stos
fsubs
push
push
push
dec
pop
ret
pop
mov
rcrl
sbb
call
das
scas
mov
jno
pop
xor
jle
popf
in
test
mov
sti
test
push
lea
xchg
popl
mov
pop
inc
mov
xlat
pop
xor
push
xchg
mov
sub
or
cmp
jle
or
fiadds
xor
xor
shrb
into
cmp
jno
mov
push
and
lea
dec
jbe
jp
pop
sbb
sub
sbb
sub
data16
push
out
gs
out
or
cmp
outsl
js
add
lcall
and
mov
mov
xlat
gs
dec
sbb
sahf
sub
mov
xor
imul
rclb
or
loope
subb
nop
push
int3
roll
jne
xchg
mov
scas
or
cli
push
sub
mov
sbb
sbb
mov
jae
pop
jecxz
mov
std
dec
call
mov
ja
pop
xor
push
insb
cmp
int
jnp
xor
cwtl
push
fisubrl
jno
xchg
arpl
fidivs
es
icebp
mov
sar
shrb
into
sti
dec
xor
pop
add
je
push
stos
dec
add
rol
inc
sbb
fisubs
jo
lea
mov
les
into
xchg
fisubl
and
sbb
xchg
sti
push
and
lret
xor
sarb
sbb
mov
iret
sbb
inc
dec
mov
jnp
adc
and
jnp
inc
outsw
mov
leave
pop
xchg
leave
scas
xchg
or
jae
stc
mov
jno
movsl
enter
cmp
xchg
xchg
hlt
pop
push
mov
xchg
in
add
pop
cmp
fsubl
dec
sub
cmpsb
jo
adc
repnz
cld
sbb
mov
and
xor
and
adcb
push
pop
and
sub
or
std
punpckhwd
test
pop
cmp
int
cmpsl
loopne
add
pop
cmp
mov
test
lds
pop
or
mov
stos
inc
ret
mov
inc
sbb
aas
fwait
imul
in
in
xchg
fldcw
mov
fucomi
jp
shlb
ja
into
faddl
mov
ds
jae,pt
call
xchg
xchg
mov
mov
xchg
push
scas
mov
test
dec
setns
adc
cmovns
jb
xchg
jns
cs
add
pop
imul
inc
aaa
imul
stos
lcall
sub
nop
dec
adcl
jbe
insl
push
scas
in
in
hlt
jmp
xor
outsl
std
dec
test
aad
les
and
jbe
jg
lock
int
mov
out
popa
mov
repnz
sbb
mov
subl
xor
jecxz
pop
inc
out
jg
xor
repnz
mov
in
xor
dec
mov
ret
lcall
shl
jmp
cmp
push
push
sbbb
add
mov
or
les
pop
dec
pop
adc
or
dec
dec
or
in
emms
push
hlt
pusha
lea
fsubr
pop
and
mov
xor
mov
ret
xchg
sub
or
sbb
inc
loop,pt
sbb
inc
sbbl
pop
enter
and
dec
enter
pop
lahf
dec
cs
sti
push
or
push
dec
vcmpps
aad
movsl
inc
inc
sub
lea
xlat
lcall
pop
mov
mov
sahf
sub
subb
sbb
jmp
scas
loop
inc
insb
and
popa
or
mov
test
cmp
sbb
jg
testb
xchg
popf
push
xor
in
mov
lret
jo
xlat
xchg
lods
dec
lock
push
xchg
scas
in
arpl
popf
mov
and
jae
mov
sbb
lret
test
push
and
popf
xlat
and
pushf
cmp
jbe
xlat
and
mov
pop
das
lods
pusha
cmp
int3
aad
shrb
das
push
sbb
jns
repz
daa
movsl
mov
imul
and
mov
sti
rcll
scas
lds
xchg
sti
imul
xchg
inc
inc
mov
dec
sbb
adc
aad
pop
lret
and
dec
in
mov
fdivrs
adcl
xchg
in
sti
inc
push
out
or
popa
outsl
and
outsb
out
fwait
mov
aas
add
mov
adc
add
inc
lret
mov
andl
xor
inc
mov
cmpsb
and
lods
xchg
sbb
xchg
out
rcrb
std
pop
mov
jo
push
scas
ja
aas
scas
add
push
stos
jo
sbb
add
out
xchg
aaa
cwtl
daa
out
xchg
push
pop
lods
pushf
adc
sub
loopne
popf
jg
fcmovnu
sbb
xchg
out
mov
aas
aas
lcall
jecxz
xchg
mov
imul
cmpsl
enter
adc
movsb
aam
aaa
test
in
mov
mov
xchg
cmpsb
das
hlt
sub
sub
mov
adc
push
test
sub
add
xor
daa
dec
jecxz
das
jnp
mov
adc
push
xchg
sbbb
mov
adc
jns
sub
mov
popa
inc
cmp
pushf
out
xchg
rclb
dec
pop
rcrb
sbb
sub
push
daa
cmp
jp
gs
mov
in
jae
xchg
pop
adc
jno
mov
sarb
test
mov
fwait
data16
mov
cwtl
roll
sahf
in
push
sbb
adc
jne
add
ret
dec
je
gs
cmp
ljmp
sbb
dec
xchg
repnz
scas
sub
adcb
inc
jp
shlb
push
adc
mov
ret
into
jmp
lahf
ss
dec
ret
inc
nop
jl
mov
jnp
shr
mov
sub
adc
cmc
lret
push
or
push
int
mov
hlt
cmp
inc
out
xor
out
hlt
scas
pop
sub
fsubrp
or
jnp
out
fiaddl
stc
and
ds
lock
cwtl
aad
insl
stc
enter
ret
call
jmp
jp
push
or
popf
outsl
and
sarb
lds
out
addr16
aam
mov
dec
xchg
clc
ret
out
and
push
or
mov
jle
mov
sub
jb
pop
xor
mov
xchg
scas
enter
add
sbb
cmpsb
jle
mov
shlb
mov
push
mov
iret
ss
jmp
push
xchg
and
sbb
ja
jns
pop
pop
mov
cmp
pop
das
sbb
in
lds
push
xor
test
addr16
mov
jae
pop
xorb
and
das
lea
in
push
fs
scas
jns
xchg
gs
enter
adc
adc
and
popf
ja
scas
fs
pop
push
pop
pushf
mov
inc
jb
pop
imul
jne
negb
push
lcall
xchg
push
cmp
int
gs
xor
jmp
push
lret
pop
cmp
fdivr
into
in
fwait
sub
ret
inc
mov
mov
cwtl
inc
insl
lret
jno
xchg
int
clc
repnz
add
mov
or
jno
pop
in
jne
jne,pn
or
stos
loop
push
cltd
ds
mov
xor
mov
jae
push
icebp
inc
adc
mov
pop
std
out
xchg
imul
pop
pop
xor
cmp
xchg
into
pushf
lret
jne
mov
mov
cmpsb
popa
mov
jge
and
test
inc
inc
jp
xchg
cmpb
mov
xor
cmpb
arpl
in
std
xchg
cmpsl
pusha
mov
mov
adc
in
add
cmc
push
pop
push
stos
xorl
clc
test
pop
es
cmp
sarb
repnz
lock
stos
inc
ret
data16
orb
jo
cmp
loop
insl
sub
adc
mov
pop
pop
xchg
hlt
arpl
dec
mov
push
mov
loop
lcall
inc
push
ljmp
lods
mov
jle
mov
xlat
aaa
loopne
xchg
jge
lods
dec
cmp
roll
cmpsl
mov
call
aaa
cs
movsb
movsl
test
xchg
pushf
pop
aad
mov
dec
test
mov
sahf
pop
jno
jmp
sub
xchg
jbe
or
jle
popa
test
lret
xor
scas
xor
xchg
adc
sbb
jnp
inc
movsl
jmp
xor
cmp
push
insl
or
inc
test
sbb
xchg
dec
ret
push
orb
stos
push
or
sbb
leave
into
into
and
rol
lret
add
in
sub
mov
mov
mov
sbb
pop
xchg
dec
repnz
negl
ret
push
outsb
in
adc
xor
in
add
lret
inc
or
mov
loopne
sub
mov
xchg
adc
jecxz
mov
pop
arpl
lahf
jmp
inc
imul
lods
inc
pusha
dec
jecxz
pop
test
inc
shlb
aam
std
inc
and
add
sbb
and
dec
in
ja
inc
call
mov
in
data16
out
insl
in
roll
shl
push
push
xor
mov
mov
cmp
pop
orl
cmp
cmp
popf
inc
test
jl
aas
addl
add
push
sub
dec
push
pop
arpl
sti
imul
xchg
xchg
aaa
or
filds
jne
and
xor
sub
jno
into
fists
hlt
fildll
not
sub
dec
cmpb
and
inc
push
insl
das
xor
lret
add
mov
nop
jecxz
cld
push
and
mov
cmpsl
in
popa
sahf
lahf
and
out
and
or
mov
arpl
ja
mov
inc
mov
pop
inc
lret
cs
out
out
cmp
mov
dec
mov
shll
data16
stos
inc
xchg
test
inc
or
je
mov
sti
js
int
dec
push
add
mov
fiaddl
test
mov
and
xor
lahf
and
rorl
xor
popa
pop
fidivs
xchg
mov
test
inc
sbb
gs
sbb
out
and
ret
mov
lret
pop
imul
mov
movsb
mov
int
xchg
test
jns
movsb
push
or
sahf
pusha
out
add
lret
shlb
jge
pop
jne
fdivrs
ds
adc
jbe
in
lahf
dec
adc
scas
fwait
call
xchg
shrl
xchg
push
popf
jb
and
stc
jns
mov
sbb
xchg
mov
dec
ss
sub
mov
mov
cmpl
enter
insb
pop
jnp
xor
ret
out
pop
rorl
mov
push
inc
arpl
lret
pop
sbb
dec
enter
lcall
xchg
cmp
test
cwtl
xchg
test
push
inc
add
cmpsl
mov
test
or
cltd
dec
movsl
test
or
xor
sub
enter
jmp
test
push
pop
cmp
sub
lahf
clc
jns
testl
sbb
test
out
sub
push
pushl
xchg
sar
and
rclb
dec
rcrl
pop
sbbb
loope
xor
add
in
jge
push
cmp
push
jo
pop
sub
push
cmp
std
iret
lret
hlt
add
fdivrl
lret
pop
xchg
add
pop
repnz
or
push
insb
cld
xchg
in
orb
push
push
or
fadds
fldl
cmp
icebp
mov
dec
sbb
push
jle
cmp
cmp
jo
les
hlt
sbb
adc
mov
in
movsb
mov
add
into
xchg
in
imul
push
scas
cs
or
sahf
inc
bswap
test
jb
stos
cwtl
and
mov
test
movsl
popw
pop
loop
dec
jmp
in
adc
push
sahf
lret
sub
sahf
dec
lret
aad
mov
aaa
pop
ss
inc
jae
lds
add
fmull
cmc
xor
or
popa
int
into
dec
push
or
push
xchg
daa
cmp
test
mov
aas
ja
pushf
pop
inc
lea
xchg
addb
ljmp
int3
imul
sub
cwtl
outsb
mov
out
scas
insb
outsb
sbb
inc
lds
mov
pusha
xor
jge
cli
mov
mov
cmpsl
inc
popf
icebp
xor
shrl
clc
ss
daa
fstl
incb
aas
inc
adc
xchg
shrb
rcr
jecxz
push
push
insb
dec
or
mov
shrb
movsb
xchg
sbb
in
sbb
subps
mov
xor
cmp
adc
sub
popf
dec
xor
loopne
lahf
inc
ret
repz
inc
jbe
xor
jbe
mov
jbe
sub
or
push
mov
mov
mov
push
add
loope
and
cs
ljmp
inc
adc
and
mov
adcl
divb
loop
test
scas
push
pop
jb
mov
or
xor
push
inc
mov
lea
jge
lock
movsb
pop
into
call
dec
mov
or
cmp
pop
xchg
push
jno
mov
dec
cmpl
es
jne
icebp
xchg
xchg
bound
push
jle
mov
cs
inc
mov
and
xchg
mov
mov
in
mov
xchg
jae
pop
mov
xlat
insb
push
jmp
filds
lret
cli
or
mov
fs
xor
add
adcb
movsb
rcrl
clc
inc
inc
sbb
push
mov
and
ss
rclb
xchg
testl
mov
mov
fistl
jp
xchg
sbb
push
fnstsw
add
sub
cmp
shll
inc
dec
scas
test
xchg
movsl
xor
push
sti
bound
stos
jmp
mov
and
sbb
xor
jp
push
mov
imul
and
jnp
push
shll
fidivrl
imul
mov
and
stc
test
mov
adc
and
inc
mov
inc
push
push
jg
adc
int3
mov
mov
test
push
sub
pop
test
dec
jmp
imul
scas
jp
stc
loopne
inc
and
int
dec
sub
into
daa
insl
or
popf
hlt
jle
hlt
in
shlb
in
jno
call
dec
shl
popf
xchg
arpl
insl
mov
xchg
jb
outsl
xchg
sbb
cwtl
pop
dec
fsubl
jnp
adc
aam
jnp
daa
stos
push
test
xorl
clc
inc
mov
daa
aas
gs
das
inc
xchg
push
xchg
mov
or
addr16
std
shlb
divb
push
cmp
jb
sub
jl
cmpsb
lcall
call
rcll
xchg
adc
stc
pop
cmp
push
cs
test
lea
mov
aam
mov
mov
and
faddl
add
mov
mov
xchg
cmpsl
cld
test
idivl
inc
mov
sbb
out
lsl
cwtl
shll
sub
sub
mov
mul
add
and
mov
push
ret
or
xchg
inc
xchg
insb
enter
mov
clc
mov
push
xor
outsb
cmc
mov
push
repnz
mov
and
pop
jmp
leave
into
sbb
push
push
xchg
je
mov
sarb
or
xchg
leave
pop
lods
ds
fistps
jl
inc
pop
int
add
scas
cltd
ljmp
mov
iret
nop
jns
or
outsb
repz
fwait
adc
movsl
mov
or
cltd
adc
inc
rcrl
lock
inc
fadd
or
or
push
in
cld
xchg
incb
mov
or
loope
dec
mull
push
push
lea
cmpsb
cmc
mov
loopne
nop
data16
and
aaa
ficompl
hlt
pop
jle
xchg
rclb
cwtl
jno
jg
jo
jl
pop
cltd
repz
sarl
loope
sbbl
add
push
iret
mov
mov
mov
negb
aas
inc
jb
loope
or
lds
mov
or
adc
cmp
sbb
cs
xchg
icebp
jmp
dec
ss
adc
add
push
dec
push
pusha
and
sbb
pop
shlb
mov
fdivrl
xchg
outsb
lret
inc
cltd
jle
gs
mov
dec
rcl
into
int
movsb
push
in
adc
adc
adc
mov
xchg
push
sub
xlat
push
popa
fdivrs
cmp
ret
enter
jo
add
clc
sahf
sbb
insb
add
and
movsb
push
popa
dec
ss
mov
cli
in
xchg
add
orb
cli
dec
dec
cmp
add
jb
xchg
shl
out
inc
inc
cmp
push
ljmp
mov
rol
inc
mov
cmp
pop
dec
test
and
xor
dec
sub
test
das
mov
mov
fstl
xor
mov
sub
fildll
mov
mov
addr16
imul
pop
vmread
xchg
lds
mov
or
popa
and
xchg
mov
pop
enter
xor
xor
dec
dec
jnp
sar
roll
int3
outsl
jb
mov
mov
rolb
arpl
push
aas
pop
ss
mov
sub
xchg
inc
aaa
jecxz
mov
rorb
in
push
or
push
pop
pop
jge
ror
adc
adc
js
add
mov
cld
xchg
inc
mov
push
mov
ret
cmc
pop
xchg
mov
out
mov
adc
mov
xor
ret
mov
dec
mov
sbb
call
ret
cli
adc
lret
test
jl
addb
pop
in
sub
mov
push
sbb
mov
cmp
jle
in
jmp
xchg
leave
ja
xchg
jp
xchg
insb
add
jns
mov
pop
sahf
out
les
pop
dec
adc
fs
not
pop
inc
sti
cmpsw
push
ljmp
mov
mov
clc
or
in
inc
push
xlat
push
mov
push
jno
dec
xchg
jge
and
jns
push
or
inc
push
addr16
dec
xor
mov
nopl
cltd
pop
sub
movsb
fimull
pop
imul
inc
jb
lds
sbb
add
imul
xor
pusha
loop
popa
lahf
cmp
pop
cmp
neg
shlb
cltd
icebp
out
sub
xor
cli
sbbl
test
int
stos
xchg
jle
jnp
movsl
sbb
rclb
adc
jecxz
sub
mov
mov
sbb
xchg
rcrb
mov
scas
popf
data16
sti
int3
movsb
idiv
pop
pop
ficoms
xchg
stc
pushf
aam
xor
xchg
movsb
jg
or
addb
push
das
ret
jmp
mov
sbb
dec
xchg
add
aaa
roll
loop
das
leave
sbb
hlt
pop
and
add
xor
mov
mov
std
dec
ret
push
mov
lea
fldenv
jg
jp
inc
ja
movsl
mov
or
xor
xchg
mov
adc
std
sahf
lret
cmp
fsts
pop
leave
mov
cltd
pop
ror
push
subl
testb
mov
data16
or
cmpsl
and
stos
pop
and
js
and
sub
mov
mov
cs
adc
sub
or
frstor
notl
push
frstor
sbb
adc
das
popa
lods
xchg
in
aas
jno
loopne
js
inc
lock
pop
mov
add
cmp
or
jb
xchg
and
add
mov
mov
in
dec
adc
pushf
out
mov
and
out
jp
adc
fcoml
stc
aam
ljmp
dec
push
jp
and
pop
and
imul
ja
mov
sub
pop
jb
cltd
insb
pop
mov
mov
pop
outsb
imul
bound
imull
inc
dec
insl
mov
xchg
add
cmp
push
loopne
dec
leave
or
jle
lahf
push
mov
push
sbbb
int3
push
imul
loope
add
bound
mov
cmp
mov
adc
psubusb
int
xchg
dec
or
cmc
daa
addr16
cs
fidivl
stc
call
cmp
mov
insl
push
or
adc
dec
ja
int
jmp
sbb
dec
cmpsb
sbb
mov
mov
cmp
xchg
cmp
jno
add
xchg
stc
and
clc
mov
dec
cwtl
mov
pop
inc
scas
inc
sbb
ljmp
sub
mov
mov
mov
bsr
jl
dec
mov
lret
sub
hlt
inc
cmp
fistps
aam
sarb
sub
pop
nop
ret
mov
cmp
arpl
or
test
pusha
inc
xor
lcall
in
sub
movsb
iret
rcrl
cmp
out
sbb
stos
das
pop
xchg
dec
inc
mov
je
inc
sbb
and
ret
pop
xor
scas
or
cmpsb
stos
sbb
nop
jmp
mov
inc
dec
jle
cs
inc
cmc
sarl
lahf
push
movsl
repz
jmp
mov
call
sbb
movl
hlt
dec
adc
out
cs
cmp
inc
je
pop
jp
cli
insb
insl
mov
sub
mov
push
icebp
or
and
add
enter
aam
push
push
pop
loopne
lock
inc
movsl
addr16
cmp
cmp
cmp
loopne
call
jp
mov
ja
dec
mov
hlt
dec
push
and
mov
sbb
mov
ljmp
push
movl
pop
mov
xchg
mov
mov
sub
subl
push
in
test
aad
jle
jno
test
fs
mov
sbb
cli
mov
xchg
jg
lock
adc
movsb
push
mov
les
ret
xor
aam
jge
jns
mov
adcl
and
lods
xor
lds
cs
movsb
mov
xor
mov
shl
sub
pop
jne
repnz
pop
cmpsb
outsl
repz
cmp
jbe
es
jae
and
aad
repz
sub
mov
imul
rol
add
insb
inc
js
sub
pushf
or
push
jnp
sub
fnstsw
sbb
jns
shrb
pop
mov
pop
rorb
inc
andl
inc
lods
mov
imul
cli
mov
ja
cmpsl
cwtl
lods
data16
add
cmpsl
or
xor
int
popf
dec
add
sub
mov
stos
lods
and
mov
mov
insl
jne
add
xchg
leave
outsl
outsl
mov
lock
shlb
dec
cmp
xchg
insl
testb
xchg
xchg
push
jl
mov
xor
jp
scas
push
mov
fstl
int3
push
mov
les
adc
jbe
push
cmp
inc
ret
and
mov
ret
mov
jge
lret
and
lods
dec
outsl
rcrb
call
cmp
stos
movsl
pop
sub
mov
push
add
jmp
jmp
xor
sbb
pop
pop
test
pop
pop
xor
aas
jno
pop
lret
sahf
test
and
lret
loopne
mov
push
shlb
lcall
jmp
movsl
inc
repz
jg
in
lods
lcall
push
push
mov
jge
movsb
pop
out
dec
imul
mov
sbb
imul
adc
sbb
cmpsb
xlat
arpl
mov
in
xor
aas
or
add
mov
jbe
and
and
shrb
jbe
adc
dec
dec
out
mov
mov
loop
mov
bnd
jle
or
fs
sahf
lods
jb
inc
xlat
mov
mov
pop
adc
push
loopne
inc
sub
add
adc
cli
cmp
push
loopne
xor
adc
jmp
mov
inc
call
pop
jl
push
push
sbb
xor
dec
sub
hlt
mov
dec
push
mov
int
xchg
inc
sbb
pop
mov
inc
inc
push
sub
jl
movsb
into
cmp
mov
cmpsl
pop
dec
xor
cmc
jmp
rorl
sub
repnz
leave
inc
sti
fsts
clc
and
cld
inc
jge
ficomps
adc
or
out
shlb
xor
ds
mov
lock
and
outsb
ret
cmpsb
or
fmull
in
pop
insb
and
mov
sub
int
xchg
sbb
jne
hlt
xchg
aad
lahf
loopne
shr
mov
in
movsl
mov
or
pusha
in
inc
push
add
mov
xchg
pop
cmpsb
addr16
fimull
mov
pop
push
mov
stos
inc
subb
add
out
sbb
shlb
pop
mov
mov
sub
pusha
adc
lcall
scas
mov
sbb
outsb
and
es
cmp
mov
pop
sub
jmp
loopne
mov
mov
lock
or
cmpsb
sti
push
sub
dec
stos
shl
pop
cmp
test
test
sub
dec
js
negl
xor
inc
and
repz
pop
xlat
push
aaa
out
inc
std
repnz
movsl
dec
ret
pop
popa
and
pop
lods
bound
fmull
cmp
mov
jnp
repnz
sbb
lcall
int
adc
jl
imul
pop
ret
nop
mov
ret
xchg
insl
jmp
xchg
mov
stos
push
xor
jecxz
mov
jae
pop
mov
dec
xchg
not
push
xlat
sbb
ljmp
jbe
push
aas
xchg
faddl
pusha
add
push
adc
scas
inc
adc
push
add
or
add
add
repnz
xchg
jns
sbb
dec
pop
ret
repz
or
jle
addr16
xor
jmp
je
xor
enter
in
cmp
add
pop
jo
add
dec
rol
push
popa
test
daa
cmp
mov
push
or
mov
mov
and
aas
and
inc
pop
add
shl
adc
mov
xchg
jno
das
jne
push
xchg
dec
fs
jo
lret
jne
sbb
leave
insb
lock
fldl
lock
push
jp
in
cmp
test
push
xchg
paddd
mov
push
sub
aam
fwait
inc
cmc
adc
sub
call
mov
or
pushf
sub
mov
movsl
adc
call
sub
mov
cmp
ret
add
imull
cmp
cltd
lods
das
in
sbb
add
sub
hlt
aaa
inc
cwtl
imul
mov
lcall
pop
stc
push
lret
mov
push
and
mov
dec
adc
jno
cmc
mov
adc
aaa
test
dec
hlt
jecxz
ds
adc
push
xor
clc
ror
mov
xchg
mov
loop
nop
dec
jecxz
dec
or
xor
pop
xor
xchg
jne
mov
mov
hlt
jp
mov
xchg
pusha
rcr
stc
arpl
jae
xor
lods
mov
xor
sbb
mov
xchg
or
xchg
mov
imul
ret
xlat
lea
xor
jmp
mov
fstpt
xchg
dec
icebp
push
add
xor
jae
jb
mov
jb
int3
std
adc
mov
in
insl
pop
in
lcall
outsb
xchg
cmp
jb
stc
cli
gs
scas
dec
add
aas
push
test
or
rcl
cmc
dec
sets
lsl
insl
outsb
jb
xor
and
push
cld
mov
cli
sbb
sub
repz
test
fcomip
jb
sar
push
add
pop
iret
ds
shlb
sbb
out
movsb
idivb
ret
fucomi
leave
dec
adcl
out
and
mov
movsb
adc
arpl
fdivrl
cmp
test
xor
sub
enter
adc
lret
enter
icebp
mov
pusha
sbb
fnsave
movsl
or
les
xorb
gs
stos
lods
sbb
add
jnp
das
stos
testl
push
adc
subl
pop
fstl
out
xchg
stc
cmp
lea
fsubrl
rclb
in
jae
mov
insb
adcb
jg
int3
mov
pop
sbb
outsb
sbb
push
fsubrp
mov
movsl
mulb
jp
pop
and
inc
dec
pop
and
or
and
imul
mov
dec
xor
rcll
lods
or
icebp
pop
sbb
lret
ja
or
sbb
addb
cmpl
ret
jae
or
mov
addr16
or
insl
imul
push
outsl
je
jmp
dec
mov
std
jmp
stos
loope
add
add
sarb
adc
push
in
cmc
or
inc
xchg
cmc
movsb
dec
sub
sarl
xchg
das
add
mov
bound
pushf
and
adc
hlt
out
xlat
outsb
dec
pushf
mov
jns
xchg
adc
dec
loop
mov
test
add
sbbb
mov
lock
dec
inc
mov
data16
ret
xlat
jmp
sub
movsb
subb
lds
movsl
mov
arpl
lret
sahf
push
out
or
shr
jge
int3
loope
add
mov
or
scas
mov
ja
push
xor
lods
sbb
sub
mov
cwtl
mov
out
rolb
ss
add
lret
fdivl
cmp
lea
movsb
scas
lods
popf
dec
cmp
daa
inc
adc
dec
rcll
loope
cmp
lock
movl
adc
jg
orb
lret
adc
pop
adc
in
fsubr
idivl
cmc
push
or
orl
add
xorb
adc
cmp
sub
mov
sbb
js
cwtl
pop
xlat
push
je,pn
and
inc
mov
inc
xor
lea
loopne
addl
jl
ja
pop
push
out
xchg
and
mov
scas
imul
outsl
inc
enter
inc
mov
add
cmp
loop
sub
out
mov
lret
xchg
xlat
lods
cli
insb
pop
cld
xchg
out
mov
xchg
lret
pop
xor
sbb
sbb
test
movl
jecxz
push
ret
test
nop
loopne
fcoml
mov
pop
mov
in
xor
inc
out
add
into
inc
xchg
and
sub
pop
xlat
and
cwtl
mov
mov
pop
mov
cld
cmc
inc
or
iret
push
sahf
pusha
inc
fwait
adc
and
jmp
or
add
push
outsl
js
xor
sub
ja
push
sbb
sti
rcrl
repz
sbb
fldl
mov
push
cmpl
lods
loop
add
add
push
add
mov
jg
mov
cmpsl
add
or
add
pop
mov
int
xchg
gs
or
cmp
jb
lcall
loopne
fadd
mov
add
lods
mov
lea
xor
jno
dec
test
mov
jge
int3
mov
xchg
pop
jmp
push
mov
xchg
cmp
mov
xor
adc
imul
inc
test
ljmp
jnp
xlat
daa
pop
cmp
out
leave
or
xchg
adc
jecxz
mov
mov
fiaddl
dec
push
adc
nop
sbb
push
es
pop
or
cmp
push
mov
ljmp
pop
call
rcrb
cmp
mov
mov
xchg
xchg
test
dec
js
sahf
jbe
or
addr16
sub
mov
lret
adc
and
dec
lret
dec
and
movups
fidivl
xor
inc
cmp
fwait
roll
adc
sbb
loope
xchg
aaa
int
push
lcall
pop
outsl
cmpsb
ret
add
cmp
push
out
or
ljmp
aad
jp
jbe
push
jne
or
nop
cmpl
xor
outsl
cmpsb
fbstp
sarb
jecxz
push
ja
out
or
adc
fisubl
repnz
xor
mov
into
lcall
fadds
fs
and
jmp
aaa
cmp
testl
idivb
cmp
ljmp
mov
sarl
sarb
aad
push
mov
stos
pop
or
jg
pop
mov
fmul
push
dec
pushf
js
cmpsb
mov
mov
mov
clc
test
popf
jbe
cmp
iret
mov
jb
add
inc
mov
jl
cmp
test
ss
int3
cmp
push
ja
in
cmpb
prefetchw
bound
bound
mov
cmp
mov
mov
leave
iret
fdivrs
das
pop
and
xchg
icebp
dec
cmpb
xchg
icebp
lret
or
or
popf
andb
fsubl
inc
insb
adc
inc
cmpsl
rcrl
int
icebp
and
mov
or
loope
push
sub
stc
rcr
scas
inc
or
mov
ja
cmp
jo
xchg
cmp
add
and
je
mov
xchg
cmpb
pop
lock
pop
hlt
mov
and
sbb
addr16
jmp
out
adc
mov
mov
mov
je
add
ret
out
xchg
ja
stc
pop
push
mov
push
popf
or
sbb
jnp
jle
jg
dec
imul
inc
lahf
mov
inc
mov
out
xor
sbb
loop
push
fwait
dec
inc
cmp
addr16
adc
sub
adc
or
push
sbb
xchg
insl
lods
imul
lret
sbb
in
and
hlt
or
test
frstor
mov
xchg
or
iret
aaa
sub
popf
or
jle
xor
or
loopne
rcrb
push
aas
jo
xchg
sbb
aad
andl
in
cmp
outsb
stc
pop
sbb
and
fidivs
dec
push
xchg
xchg
in
clc
divb
mov
pop
push
sbb
mov
and
or
aam
adc
or
push
sbbb
sub
and
mov
jb
mov
fisubrl
push
mov
popf
or
gs
sbb
in
shlb
jmp
mov
gs
call
mov
aaa
add
add
loop
mov
sti
shl
subb
dec
jns
sub
iret
std
or
addl
ljmp
fwait
fwait
or
sbb
into
pop
pop
mov
xor
jb
xor
mov
cmp
jbe
clc
cmp
cmp
sub
add
or
fldcw
ret
lret
sub
lods
test
pop
shl
dec
lahf
cmpsl
push
sub
xchg
cli
adc
mov
xor
add
lret
push
push
cld
fcompl
add
mov
pushf
hlt
clc
sub
popf
or
xchg
xchg
out
fildl
repz
inc
gs
test
hlt
mov
inc
mov
mov
jo
in
ret
stc
mov
dec
rorl
and
out
rcrl
imul
rol
repnz
or
mov
in
jp
hlt
pop
mov
xor
xchg
outsl
notb
aas
leave
cmp
iret
pop
iret
pop
ss
and
hlt
jno
iret
ret
xor
lods
mov
dec
and
les
fstpt
dec
mov
subb
loope
es
scas
daa
popa
out
push
jl
push
xor
ret
pop
push
les
xor
jmp
add
lret
paddw
dec
xchg
mov
imul
std
cli
xor
into
dec
inc
pop
push
inc
dec
dec
mov
nop
jno
jge
add
or
xchg
pop
cwtl
iret
bound
add
xchg
mov
int
fnsave
add
push
lahf
in
gs
push
cmpl
mov
aas
xchg
nop
adc
les
mov
sub
push
or
mov
jb
jo
xor
dec
cmp
mov
mov
jge
dec
push
es
xor
adc
das
adc
icebp
addl
dec
enter
popa
xchg
inc
or
inc
cli
push
xor
pop
sahf
dec
mov
push
outsb
stc
dec
popf
inc
fisttpl
loop
test
pop
add
shlb
sbb
push
inc
sbb
std
jg
inc
test
in
xchg
das
ret
cli
movsb
jecxz
aad
int3
outsb
cmpsl
push
aas
pop
push
bound
push
jns
add
mov
test
sub
dec
adc
orb
mov
cwtl
movsl
frstor
sub
push
clc
out
mov
fsubl
int3
ds
mov
mov
pop
sub
data16
jns
and
add
imul
pop
dec
dec
mov
adcl
test
fs
mov
sti
and
or
inc
xorb
outsl
add
sbb
test
dec
xor
and
stos
fbstp
cmp
icebp
dec
pop
add
or
dec
stos
and
pop
cmc
loop
sub
movsb
jg
call
shrb
movsl
sub
pop
sbb
loopne
cmp
add
bound
testl
and
ljmp
fisubrl
xchg
notb
push
lods
cmp
sarl
dec
sbb
push
jg
shlb
loop
jp
mov
inc
sbb
mov
shrb
lock
aaa
iret
xlat
les
and
ss
push
lret
fdivr
add
dec
movsl
outsb
push
movsl
arpl
sub
lods
jl
andb
sar
movsl
loope
test
ss
lret
jl
outsl
arpl
pop
xchg
xchg
xor
jbe
je
fbld
sbb
pop
test
arpl
fbstp
pop
fiaddl
add
andl
jbe
cmp
into
adc
sbb
inc
xor
data16
into
cmp
pop
dec
jl
gs
xchg
pop
rcll
out
xchg
xor
jo,pn
movups
mov
iret
es
inc
jmp
out
mov
xor
add
enter
ljmp
jne
sbb
outsb
mov
loope
push
pop
xor
mov
cltd
inc
lock
mov
mov
inc
inc
test
sahf
notl
loopne
lret
loop
xchg
leave
jne
mov
stc
outsl
pushf
movsl
mov
outsb
inc
mov
adc
and
pslld
sbb
insb
jb
insl
inc
jecxz
sbb
adc
mov
mov
cmp
and
pop
or
xchg
cltd
pop
dec
enter
pop
inc
stos
cmp
dec
pop
and
in
adc
add
sbb
orl
pushf
addr16
cmp
stos
and
xlat
add
and
jg
cmpsl
add
mov
or
mov
adc
xchg
xor
loopne
out
mov
addl
out
dec
test
movsb
push
mov
or
mov
lock
mov
outsl
leave
sahf
jle
inc
adc
mov
or
mov
and
mov
leave
nop
pop
stos
add
cltd
dec
xor
les
insb
imul
or
clc
into
aas
and
lcall
mov
loope
ffreep
jecxz
jecxz
test
aas
mov
xchg
out
push
or
sub
cmc
inc
addr16
addr16
mov
xchg
mov
sub
cmp
mov
push
in
push
mov
lods
nop
pushl
xor
inc
gs
divl
inc
push
in
in
inc
push
mov
clc
lret
repnz
call
jl
jae
adc
cmp
cmp
bound
dec
and
xchg
push
xchg
adc
xchg
adc
xchg
dec
lahf
push
add
adc
mov
scas
adc
iret
cmp
ljmp
dec
xchg
sahf
rcl
cmp
dec
lret
fucomp
loop
sbb
mov
sbb
aam
xor
mov
popl
mov
sub
mov
inc
add
das
test
mov
test
cmpsb
imul
das
scas
jb
out
adc
and
and
fldln2
pop
xchg
add
xchg
mov
je
add
mov
je,pt
jb
jle
int3
add
and
or
lock
jnp
movsl
pop
ja
int3
sub
aaa
loop
hlt
add
cwtl
inc
mov
mov
out
xlat
aam
inc
xchg
pop
sub
pop
jg
inc
or
cwtl
or
sub
lock
push
mov
fadds
pop
sub
adc
lret
and
std
clc
mov
jne
cmp
out
popl
xchg
or
stc
pop
pop
je
loope
dec
fwait
rorb
sub
outsl
movsb
jg
cmp
cmpsl
mov
jmp
mov
gs
inc
mov
add
stos
or
das
add
nop
push
inc
dec
iret
ret
adc
fwait
jge
mov
les
push
mov
jge
fisttps
in
inc
add
in
xchg
aas
popf
shl
push
outsb
pop
push
inc
lahf
das
push
sbb
jecxz
mov
push
addl
ljmp
pop
lcall
loope
and
pop
cmp
sub
pop
sbb
scas
stc
xorl
movsl
add
fcmovnb
cmp
and
sti
es
jg
inc
cld
in
into
jl
aam
adc
int3
push
outsl
mov
add
push
out
push
shll
mov
rcpps
out
dec
add
mov
xchg
sub
test
mov
add
cmp
enter
sub
mov
inc
sti
dec
xchg
call
push
int3
and
mov
into
dec
jecxz
pop
icebp
mov
inc
push
enter
ljmp
ret
hlt
rclb
push
inc
inc
stc
aaa
push
mov
shl
jmp
sub
mov
and
mov
test
shl
cmc
mov
push
mov
loopne
pushf
movb
testb
xchg
sbb
cmp
jge
and
push
addr16
cmpl
out
push
xor
xchg
dec
jnp
inc
mov
xchg
mov
dec
mov
jge
ret
scas
je
or
lret
out
sbb
test
push
lods
enter
cltd
cld
mov
xchg
sub
push
cmp
sbb
clc
popa
pop
notl
outsl
mov
sahf
push
mov
cmpsl
outsb
xchg
ret
pushf
cmc
hlt
pop
icebp
sbb
enter
xchg
or
aaa
adc
shll
pusha
cmpsb
lods
pop
out
push
mov
mov
mov
shll
mov
mov
pop
fcomps
mov
jno
jbe
dec
addl
xor
jo
fwait
push
xor
mov
ret
sub
lds
xchg
rcrb
icebp
jbe
push
jp
sahf
or
movl
lea
adc
movb
outsl
lret
sub
das
jge
adcb
push
ss
add
ret
pop
int
xor
lret
repnz
and
xor
mov
cmp
push
bound
lods
mov
cmp
mov
fisttpll
adc
and
inc
es
ds
jbe
mov
decl
pop
negl
aad
cmc
sub
js
insb
xchg
addb
stos
pushf
mov
adc
cwtl
add
lret
dec
ret
addr16
add
push
sub
lret
cmp
xlat
int
andl
inc
lahf
and
iret
mov
mov
imul
lahf
push
int3
add
sub
pop
xor
hlt
es
icebp
shrd
cli
repz
adc
ret
mov
push
cmp
ret
stos
xor
inc
cwtl
xor
dec
js
dec
outsb
dec
imul
lock
mov
pushf
add
pushf
stos
arpl
xchg
mov
addr16
push
jno
inc
shr
xlat
enter
and
dec
ja
cmp
adc
xchg
pop
out
mov
fisttps
fbld
adc
or
push
testl
sub
imul
mov
testl
pop
cmp
mov
fidivl
test
out
jnp
ss
lods
jmp
sahf
mov
fs
add
out
fwait
and
mov
mov
inc
cmp
or
jne
daa
dec
adc
push
push
push
mov
test
adc
ljmp
mov
and
and
mov
jl
mov
cmp
pop
nop
fucom
sti
leave
cmp
add
js
mov
pop
decl
or
or
add
add
sahf
xchg
dec
pop
xor
imul
pop
jne
ret
loope
add
jae
sub
popa
test
push
repz
inc
mov
test
out
cmpl
xchg
sbb
subps
fadd
inc
add
or
inc
fstl
push
mov
push
sub
or
scas
imul
gs
out
or
inc
inc
cltd
mov
or
mov
mov
push
in
idivb
cmpsl
fisubl
jo
cld
xor
sbb
xchg
jne
pop
or
outsl
sub
repnz
std
outsl
pop
es
push
arpl
scas
sbb
pop
xor
mov
xor
or
popf
push
fucomp
mov
cltd
lods
or
fildll
pop
pop
xor
cmpl
pop
jge
lods
push
fidivrl
imul
mov
and
and
hlt
pop
loop
cmp
jbe
cmp
in
lock
out
inc
insb
stos
insb
cmp
aaa
lret
jl
or
bound
mov
outsb
adc
mov
xor
aas
notb
dec
cmp
push
adc
movsl
sbb
mov
hlt
je
out
retw
idivl
inc
loope
xchg
in
dec
pop
add
arpl
pop
sbb
clc
gs
stc
and
out
sbb
mov
scas
pop
stos
iret
push
jae
jne
jle
cld
xor
dec
or
xchg
jne
sbb
stos
mov
xchg
in
call
in
jns
ja
xchg
test
xchg
xchg
insb
cmpsl
outsl
cmp
test
gs
pop
and
std
jo
stc
add
ljmp
out
lahf
cwtl
dec
sbb
push
or
out
stos
cwtl
sub
addl
inc
fisttpl
sbb
fsubs
scas
movsb
inc
add
xchg
mov
push
iret
inc
es
das
pop
jge
and
loop
add
pop
fbld
ret
mov
and
add
test
test
negl
enter
mov
js
mov
jecxz
dec
cmp
jne
pop
insb
scas
test
and
fs
mov
arpl
out
fwait
in
dec
xor
push
aad
cmp
es
shl
sub
cmc
lcall
in
pop
out
sti
outsl
inc
jge
daa
xchg
icebp
cmp
cmp
add
mov
pop
nop
adc
ds
jg
scas
dec
insl
ljmp
mov
out
je
shl
push
push
stos
out
pop
or
testb
arpl
sub
push
mov
int3
jg
mov
pop
mov
loopne
imul
sub
xchg
in
cli
mov
cmp
lods
in
decl
inc
jbe
into
dec
pop
xchg
jo
popa
aas
xor
pop
add
ret
jne
mov
mov
std
pop
and
and
mov
fcomps
mov
in
mov
inc
popf
inc
test
ret
in
fidivs
mov
mov
or
sub
dec
in
shrl
negb
movaps
std
cmp
jbe
nop
jnp
insl
xchg
xchg
jb
mov
and
sarl
addr16
insl
add
fwait
ret
lods
pop
push
into
pop
mov
lret
adc
jb
in
jmp
xchg
mov
sarb
mov
scas
jno
cmp
out
les
inc
sbb
xchg
sbb
mov
std
or
mov
xchg
mov
push
je
xchg
and
inc
dec
lds
insb
or
jne
push
xchg
outsb
push
rcrl
cmp
add
fcom
mov
add
ret
and
jnp
mov
mov
xchg
adc
nop
loop
loope
sti
push
mov
adc
ret
fwait
jb
add
insl
and
vmwrite
mov
in
or
inc
mov
pop
leave
pop
xor
jmp
pop
imul
cs
mov
sti
mov
sbb
push
lods
push
imul
sbb
mov
jb
clc
filds
int3
inc
in
mov
mov
daa
rolb
push
loope
inc
inc
dec
fcoml
rclb
lods
stc
roll
sbb
xor
pop
fldl2e
mov
cwtl
shl
sti
xor
lods
in
frstpm(287
pop
daa
lcall
icebp
jle
jg
lret
cmpsb
shlb
cld
jbe
pop
in
lret
xor
mov
jp
adc
xchg
insl
arpl
and
fwait
cmp
sbbb
pop
or
push
and
add
stc
adc
incl
into
inc
pop
loopne
lret
pop
pop
je
xchg
ja
mov
adc
ret
cmpsb
jno
add
mov
dec
aas
fwait
rclb
add
insb
lea
inc
loop
xlat
subl
jg
sub
push
scas
adc
add
mov
outsl
inc
pop
jecxz
rcrl
xor
sbb
js
sbb
popl
ffree
clc
rclb
outsl
xchg
mov
mov
popa
ficomps
sub
pop
in
add
das
pop
fdivrs
nop
fisubl
xchg
mov
mov
xchg
xlat
lock
mov
adc
push
lods
mov
ret
ja
push
cmp
test
repnz
sub
rcrb
cmc
stc
pushf
pop
adc
mov
mov
outsl
sub
popa
aaa
adc
add
les
out
data16
insl
mov
mov
mov
pop
popf
or
xor
push
push
cmp
ret
outsl
daa
add
xchg
dec
inc
mov
mov
js
jle
sbb
inc
sub
pushf
mov
pushf
sub
pop
pop
or
dec
xor
ss
cli
je
jge
pop
inc
shrb
bound
movsb
cwtl
fbstp
iret
mov
mov
inc
inc
test
ret
mov
aas
cmp
and
xor
faddl
or
sub
test
add
ficoml
daa
cltd
and
adc
pop
jge
lahf
push
insl
repnz
mov
lcall
xrelease
dec
rclb
mov
inc
in
aas
cmpsb
cmpl
mov
add
mov
adc
lret
test
jbe
daa
in
inc
push
inc
test
xchg
fmull
daa
mov
pop
xor
lods
adc
shlb
jae
pop
xchg
test
jb
inc
cs
fs
pop
loop
inc
mov
repz
mov
gs
push
push
ss
sti
cmpsb
xchg
lcall
cmp
xor
xchg
fmuls
pushf
adc
aam
loop
movsl
adc
repnz
fdivrl
pusha
aaa
int3
mov
rol
xchg
int
cld
cmp
adc
add
aad
mov
jle
repz
lods
loopne
enter
popf
fldl
dec
dec
sti
lea
int3
insl
into
push
sahf
sahf
xchg
sbb
lret
movsb
add
mov
scas
ja
xor
lea
pop
repz
shr
into
mov
cmpsl
in
inc
cmp
int3
pop
pop
aam
or
pop
addr16
push
xchg
push
add
fs
sub
and
jns
cld
mov
push
add
sbb
push
movl
shl
push
and
lds
mov
bound
mov
push
jno
adc
ret
jmp
and
ja
ja
mov
push
push
jle
lock
adc
and
test
je
add
or
push
lock
fnstenv
inc
lods
push
pop
adc
leave
in
imul
xlat
mov
dec
adc
and
xchg
jmp
pop
add
out
jg
out
addl
shll
cmp
sub
sbb
shll
int
add
int
jg
movsl
pop
xchg
outsl
fsubs
cmp
adcl
mov
inc
movb
add
lret
push
pop
jge
aas
xlat
sub
jle
xchg
xor
pop
mov
test
sbb
inc
fstl
enter
dec
mov
in
mov
test
std
ds
push
mov
mov
mov
xor
pop
mov
jle
test
pop
pop
in
repz
sarl
pop
jg,pt
inc
xlat
mov
pop
test
pop
pop
sub
xor
ret
repz
fsqrt
imul
out
out
inc
andl
xchg
dec
sbb
cmp
mov
push
iret
test
jecxz
mov
sub
repnz
call
fldl
stos
mov
js
sbb
aaa
push
cld
lahf
dec
sbb
mov
lahf
in
cmp
lock
lcall
jl
sub
je
fld
call
cltd
xchg
or
mov
pop
lock
jg
cs
push
dec
pop
aam
je
push
js
in
adc
sbb
mov
les
lcall
adcl
pop
into
test
push
inc
xor
pop
or
mov
shrb
test
movsb
sbb
imul
or
add
jle
jnp
ret
mov
in
aaa
push
ucomiss
movsl
inc
repz
stos
cli
loope
dec
outsl
push
rclb
sti
xor
fmulp
push
mov
mov
out
sub
inc
dec
mov
and
mov
into
sub
add
lcall
mov
xor
mov
mov
movsl
jbe
jmp
rcr
add
jg
les
in
cmc
sub
shlb
pop
xchg
adc
or
leave
mov
push
les
push
push
into
mov
xor
cs
fdivl
shll
lret
mov
mov
in
adc
test
mov
ret
push
cmp
sahf
or
pop
insl
push
mov
enter
inc
dec
or
add
mov
mov
popf
inc
cmpsb
out
inc
cmp
cmp
cmp
mov
sub
pop
sbb
lods
std
ficoms
sbbl
mov
outsl
cs
lret
sbb
mov
sbb
cmpsl
cmp
sti
inc
mov
and
sbb
push
lock
xchg
loop
outsb
rorb
mov
mov
test
adc
fstps
test
mov
imul
in
jae
mov
fldl
jg
and
divb
ljmp
daa
mov
test
cmp
mov
push
xorb
add
lods
sub
int
jge
jno
push
and
jbe
or
stc
mov
incl
pop
lahf
outsl
mov
insl
fbstp
pushf
jae
shl
mov
aam
and
sub
out
popa
test
ds
or
out
jne
xchg
lret
add
aaa
mov
ljmp
test
pop
adc
mov
cmc
fs
arpl
jne
movsb
and
mov
pop
lahf
repnz
push
das
xchg
data16
push
cmc
mov
cmp
popf
sbbb
lea
push
mov
sbb
into
cmova
jno
leave
cli
fistl
xor
or
sbb
ret
xchg
xchg
pop
mov
xor
push
shl
in
daa
jl
push
mov
fldl
lods
push
fwait
add
jmp
xor
in
push
pop
fnstsw
sbb
add
sub
jle
xor
out
or
mov
mov
aas
push
push
jnp
leave
out
mov
xor
test
in
pop
push
mov
jae
clc
sarl
aas
std
rcll
xchg
cmp
mov
imul
pop
fldl
int3
ja
jp
mov
sbb
lea
add
dec
aam
dec
jne
in
jae
jl
lock
mov
leave
lcall
mov
pop
add
adc
je
hlt
cld
fidivl
pop
in
negb
mov
ss
inc
xchg
or
stc
jnp
les
mov
aaa
cmp
inc
int
pop
pop
pop
or
ret
pop
nop
xchg
ss
push
xchg
test
mov
outsb
adc
xchg
inc
les
int3
or
out
push
test
fs
scas
inc
and
rcrl
aas
call
xchg
push
cwtl
fstps
lret
jecxz
jmp
loop
cmp
aaa
or
xor
sbb
inc
jg
mov
cmp
xchg
es
dec
mov
fs
pop
add
adc
or
mov
add
adc
cwtl
and
aaa
sahf
lea
sbb
orb
mov
in
in
popf
jg
dec
mov
sarb
adc
and
adc
ja
ret
stos
xchg
dec
shrl
or
fdivrp
inc
insb
add
mov
pop
mov
inc
pop
add
adc
sub
mov
das
cltd
push
subb
pop
clc
aam
mov
pop
mov
dec
jle
std
sbb
mov
stos
dec
in
inc
inc
jge
cwtl
insl
shll
sbb
dec
jge
in
jnp
sbb
adc
test
and
insb
iret
jecxz
and
shl
inc
or
frstor
subl
in
jmp
mov
and
fnsave
mov
adc
and
outsb
loop
call
lods
rcll
cmpsl
lret
mov
lcall
sub
jp
adc
dec
scas
jne
in
les
xchg
pop
test
jne
or
scas
dec
mov
cmc
sti
out
inc
lret
scas
sbb
xchg
leave
ss
addr16
fwait
sub
aad
ds
out
mov
cld
test
nop
xchg
iret
out
sbb
fwait
lahf
scas
xor
enter
jno
rcrb
decl
mov
cmp
mov
arpl
scas
testl
push
int
test
mov
sahf
push
and
xor
in
push
ljmp
jp
mov
lods
mov
adc
mov
or
xchg
jns
or
jecxz
mov
imul
ss
and
sahf
pop
add
fbstp
mov
sbb
addl
and
jne
sti
data16
clc
mov
popa
sbb
cltd
xlat
jae
sub
popf
jo
fiadds
inc
addr16
js
mov
sti
cmp
rorl
and
add
outsb
cwtl
xchg
pmaxsw
stc
and
in
jp
out
sub
xchg
dec
inc
outsl
push
jl
push
das
es
jmp
insl
rorl
rorl
sub
ret
or
inc
mov
jnp
cld
lret
sti
pop
xor
in
xchg
pop
push
prefetch
xchg
inc
xchg
js
cmp
inc
jmp
add
cmc
fmuls
test
cmpsb
jno
frstor
or
xchg
adc
pop
jge
dec
not
and
sub
outsb
mov
fnstenv
sarl
cwtl
sub
pop
test
push
dec
cmpsl
in
cmp
jns
not
das
loope
sbb
iret
mov
mov
and
cmp
lods
test
out
adc
adc
movsb
xchg
aad
mov
push
imul
or
cmp
add
mov
push
sub
leave
add
pop
sbb
cmp
pop
mov
push
sub
mov
jb
test
out
mov
arpl
jae
aaa
dec
sbb
xor
call
vshufps
fs
mov
fsubrs
popf
pushf
cmc
rcll
xchg
add
pop
dec
push
push
sbb
addl
jae
add
or
pusha
jns
inc
sti
scas
lahf
enter
xorl
enter
sub
cmc
pop
jns
mov
sub
dec
lea
adcb
mov
jb
addl
push
mov
cltd
add
and
or
jo
js
insb
pop
pop
pop
jne
or
xchg
lret
adc
sbb
mov
push
sbb
das
pop
ficomps
pop
adc
inc
push
push
mov
cmovb
xor
and
std
pop
sub
ret
add
inc
jp
pop
out
mov
call
dec
movsb
xchg
xor
push
inc
stc
inc
clc
sbb
ja
fucomip
es
clc
adc
data16
inc
push
leave
add
cmp
test
ret
add
cmpsl
shr
xor
mull
mov
fnstsw
pushf
push
adc
xor
movl
xor
sbb
ja
inc
rorl
sub
push
shr
clc
insl
adc
dec
sti
out
jno
inc
mov
aaa
nop
push
dec
movsl
pop
jbe
cli
cmp
lahf
jl
or
call
out
fs
mov
push
sub
mov
test
popa
mov
mov
repz
mov
mov
cs
pop
cli
mov
dec
cltd
cs
negl
inc
sbb
outsb
mov
daa
cmp
jg
rcrb
or
xor
inc
or
data16
das
sub
inc
dec
inc
push
adc
nop
mov
ret
jl
pop
movsl
mov
fcmovb
and
fadds
xchg
sbb
test
and
jnp
pushf
and
mov
adc
push
mov
fisttps
les
pusha
or
xchg
jg
inc
ds
aaa
fmulp
sub
xchg
fsubrs
xchg
std
pop
sub
push
inc
fwait
lahf
pop
outsb
pop
push
loope
fldcw
cmp
test
or
mov
int
movb
fisubl
addb
in
pop
cli
sti
and
add
daa
and
js
lret
cs
popf
popa
xchg
xchg
mov
popa
xchg
dec
ds
roll
or
dec
pop
add
mov
add
repnz
push
sub
fistpl
aad
or
ljmp
or
cmp
sub
jg
xor
xor
in
inc
sbb
mov
loopne
add
fs
aam
pushf
aas
cltd
mov
and
aam
sub
shll
rcll
push
mov
lret
pop
push
ret
mov
add
dec
lds
aam
sbb
movsl
mov
dec
xorl
sub
pop
mov
mov
pop
mov
rclb
daa
dec
cltd
pop
jle
xchg
ljmp
sbb
dec
inc
adc
cld
enter
lods
shlb
mov
mov
push
repz
mull
lea
xor
xchg
push
mov
in
adc
mov
mov
cmpsb
clc
nop
je
and
add
adc
popf
into
outsb
inc
loopne
movsl
rorl
jae
jb
inc
ret
cmp
mov
pop
cli
pop
jle
rolb
mov
out
sub
cmp
mov
adc
mov
xor
es
xchg
pop
xchg
push
hlt
push
stos
stos
mov
inc
jb
or
sub
inc
push
cmp
push
mov
clc
push
addl
orb
fdivrl
adc
inc
xor
orb
sbb
dec
dec
rcrb
fbstp
push
emms
test
js
mov
cmp
lret
pusha
or
mov
addr16
das
aam
stos
adc
inc
jb
pop
add
xor
cmp
inc
sub
sbb
push
ja
push
xchg
mov
insb
push
sbb
push
pop
add
imul
out
inc
jns
jnp
cld
xlat
cmp
sub
aaa
inc
push
mov
loope
mov
int
insl
xchg
gs
es
testb
cli
and
ljmp
fxch
fmuls
lods
mov
imul
das
lods
adc
call
pop
aaa
fwait
dec
in
fistl
stos
jmp
mov
xor
mov
xor
dec
adc
int
xchg
sub
cmp
mov
fwait
cmp
xor
pop
stc
mov
in
daa
test
push
adcb
jne
test
ljmp
and
cmp
cmp
xor
and
test
sbb
inc
adc
inc
call
pop
cmp
mov
adc
movsl
mov
jg
stos
jno
cmp
xor
arpl
xor
sarl
or
je
nop
sub
stos
inc
lods
mov
adc
mov
adc
stos
and
jle
sbb
lods
mov
imul
les
pop
inc
sub
js
rcl
inc
test
jbe
adc
xor
rorb
fisttpll
inc
jne
xchg
inc
int
cmpsb
mov
push
mov
data16
or
shl
aaa
mov
or
sbb
jno
jns
jo
mov
push
or
inc
mov
in
stc
push
movsb
xchg
mov
cwtl
mov
push
xchg
and
faddl
xchg
in
or
add
nop
mov
push
lds
jge
ficompl
mov
lea
sbb
inc
xlat
or
mov
les
idivl
imul
rolb
ja
sbb
rorb
sub
int3
adc
dec
xchg
adc
inc
nop
jmp
fisubrl
out
or
or
in
repz
push
xchg
rcll
jg
push
adc
xchg
test
pop
or
push
add
lret
repz
lods
stos
sbb
adc
fbld
lret
xchg
and
push
pop
movsb
mov
push
mov
int3
insl
xchg
sahf
adc
add
xchg
subl
dec
xor
fwait
add
mov
xorl
lods
dec
add
lahf
push
cltd
iret
shl
out
add
xor
pop
imul
xor
ret
push
loopne
add
add
dec
pushf
sub
dec
mov
scas
subl
std
jl
dec
js
arpl
push
mov
int3
jae
inc
call
fbstp
stos
adc
add
dec
push
push
fsts
repz
cmp
mov
cld
inc
push
jle
or
adc
or
sub
jge
lds
fdivl
jge
cmp
dec
lret
mov
mov
pop
xor
sbb
xor
push
dec
push
mov
ljmp
imul
sbb
jne
push
fs
les
loopne
xor
cmpsl
out
leave
sub
and
xor
xor
pop
adc
scas
mov
add
mov
fstps
jo
out
xor
jno
adc
popf
test
repz
mov
push
xor
loope
or
pushf
cwtl
mov
popf
movl
imul
push
or
jo
jae
push
cmp
cmpsb
jnp
sbb
ds
fildll
dec
inc
into
pop
or
xchg
data16
pop
sbb
outsl
repz
scas
fcompl
push
pop
in
push
outsb
fucomi
hlt
mov
push
jle
xchg
jecxz
cmp
lods
jne
pop
inc
sahf
dec
cmp
sbb
jle
outsb
js
xlat
in
add
mov
adc
dec
xchg
loop
dec
cltd
push
cs
in
fsubs
sub
call
sub
inc
fnsave
mov
aam
movsl
nop
xor
pop
pop
ret
stos
or
rcrb
inc
cltd
ljmp
ss
dec
mov
sub
fcmovne
out
sbb
into
push
mov
cmp
adc
push
dec
mov
std
jnp
jne
jge
nop
sbb
jb
xchg
pop
mov
roll
lret
push
adc
mov
daa
and
lea
ror
fs
imul
jge
mov
push
vphaddwq
fwait
pop
popf
xchg
jnp
mov
stos
mov
int
popf
mov
lret
imul
xor
gs
scas
xor
lock
lods
xor
scas
add
repz
push
inc
cmp
mov
dec
lahf
xchg
fnstenv
addr16
addr16
or
in
xor
repz
push
jo
dec
and
and
sub
mov
mov
bound
push
sti
and
adc
out
jns
lret
pop
push
pop
pop
pop
mov
out
jg
inc
jg
cmp
add
mov
into
xor
push
call
pop
movsl
inc
les
sbb
shrl
push
stos
xor
bound
nop
jp
mov
sbb
sbb
pop
lret
inc
xor
xchg
adc
pusha
mov
dec
fsts
push
testl
jb
out
cmp
jl
rcr
pop
ror
subl
rclb
jle
and
or
push
cmp
jecxz
rcrl
xor
mov
pop
mov
lea
xchg
cmp
fdivr
sub
jge
add
lret
dec
fdivrs
push
pop
or
pushf
cli
subb
sub
mov
ucomiss
in
adc
or
lea
pop
mov
std
sub
mov
or
das
mov
out
and
inc
xchg
cwtl
push
sub
lcall
sbb
sti
enter
std
sbb
adc
or
in
aam
cmpl
ss
mov
call
lea
es
xor
std
jno
lret
and
mov
cmp
arpl
mov
stos
ja
cmp
pop
pop
xor
sbb
outsl
cmp
and
in
push
mov
and
imul
sbb
addr16
aad
xchg
pop
adc
data16
xchg
push
and
hlt
data16
loope
jno
xchg
and
jae
sbb
iret
dec
jle
repnz
out
lock
popa
into
adc
mov
sbb
jnp
inc
dec
inc
das
fcoml
xchg
mov
inc
stos
fisubs
cmpsl
pop
stos
jne
jmp
pop
fimull
pusha
aad
xchg
or
loopne
aas
adc
add
sub
loop
fldl
lods
jg
jnp
scas
and
mov
pop
cmc
mov
dec
mov
shl
mov
ss
jns
push
mov
jmp
mov
imul
add
pusha
and
mov
adc
cmp
jno
dec
inc
loope
xchg
or
mov
inc
hlt
loope
test
or
mov
cwtl
les
sub
outsl
pop
imul
xchg
inc
pusha
jo
scas
lcall
jge
dec
into
mov
das
shl
fsubr
and
push
push
outsl
and
lahf
mov
aaa
mov
add
lock
mov
pusha
xlat
mov
js
jg
repz
idivb
add
stos
add
push
xlat
and
inc
cli
xchg
add
mov
shr
rol
push
adc
dec
cmp
push
xchg
lcall
add
xor
std
and
pop
dec
xor
inc
insl
addr16
pop
adc
cltd
mov
sbb
into
mov
push
scas
or
dec
sbb
push
adc
xor
mov
out
lret
sbb
mov
gs
push
scas
add
inc
rol
das
sbb
mov
inc
stc
adc
adc
arpl
shr
icebp
jge
mov
inc
in
shl
jmp
fmuls
loop
leave
push
dec
jle
mov
lret
xor
lcall
loop
pop
mov
add
iret
js
jo
jne
enter
jns
xchg
data16
mov
mov
shrl
mov
ret
inc
or
pop
ljmp
aam
filds
imul
lret
loopne
repnz
and
rorl
aam
icebp
aam
scas
push
push
sbb
xor
loop
into
cmp
into
mov
dec
sbb
repz
jp
mov
mov
inc
add
push
sub
xchg
or
arpl
popa
and
dec
adc
outsb
fisttps
adcl
lock
out
jae
lret
mov
ja
mov
adc
pusha
in
sub
stos
or
je
pop
sbb
pop
xchg
or
mov
push
adc
cmp
xor
pop
daa
arpl
mov
ss
ds
xor
in
jge
test
out
aam
sbb
les
les
xlat
adc
cld
dec
push
sub
jl
inc
inc
mov
mov
lock
push
test
cwtl
push
pop
dec
bound
jmp
das
loop
xchg
sti
leave
dec
xchg
dec
xor
call
push
scas
movsb
call
mov
sti
fs
mov
pushf
jg
xor
mov
sbb
mov
pop
in
pop
scas
jle
push
dec
pop
pop
stc
cmpsl
sbb
stc
add
arpl
test
outsl
test
xchg
xchg
fisttpll
pop
cmpsl
xlat
sub
arpl
push
adc
adc
xchg
ljmp
pop
popl
cmpl
and
testb
outsb
pusha
or
jl
jo
jbe
cmpsb
add
pmaxsw
imul
xchg
xchg
adc
inc
fcoml
into
shrl
in
push
mov
icebp
sbb
add
cmp
or
popf
lahf
inc
sti
dec
sbb
pop
jge
add
sub
xchg
cltd
imul
inc
popf
mov
inc
pop
lahf
dec
push
in
xor
mov
nop
outsl
enter
ljmp
jg
cmp
and
test
hlt
movsb
mov
dec
inc
incl
fwait
xor
or
ljmp
sub
addl
mov
add
jmp
loope
mov
inc
jmp
pushf
lret
or
adc
pop
xchg
pop
xor
xchg
clc
adcl
push
rcr
pop
jne
ffree
push
cli
sbb
mov
adc
shll
mov
xchg
push
mov
imul
addb
mov
xlat
fxch
cmp
insl
mov
out
jecxz
sub
aad
loop
pop
test
sbbl
fs
inc
pop
pop
cltd
out
mov
and
popf
inc
mov
jg
rolb
repnz
pusha
leave
sbb
xor
pop
pop
imul
imul
cmpsb
shl
fildl
mov
add
jp
lods
dec
push
fdiv
insb
sub
sub
push
movsb
ss
je
xchg
adc
mov
push
xchg
dec
cwtl
and
jnp
sbb
push
xchg
push
mov
lock
jb
mov
cmp
repz
mov
xchg
std
insb
pop
stos
cld
popa
aad
dec
xor
popf
out
in
repz
jecxz
adc
pop
in
adc
pusha
call
call
jmp
mov
mov
mov
jle
jbe
push
xchg
mov
add
sbb
sub
push
sub
push
fstps
sbb
ja
mov
je
push
stc
mov
mov
aad
sti
sbb
xchg
test
or
mov
dec
dec
xchg
ljmp
and
mov
data16
es
cmp
sarb
dec
push
xchg
clc
outsl
fstpt
dec
pop
icebp
pop
push
mov
adc
inc
xor
adc
pop
sub
mov
fsubrs
xchg
cmp
ret
jnp
sub
iret
and
inc
xchg
xor
jae
cmpsb
and
iret
adc
push
lods
mov
inc
mov
les
sub
fldenv
repz
ja
mov
pop
mov
jne
out
jecxz
rcrb
stos
push
test
sub
ret
lods
cli
xchg
xor
movsb
cmpl
inc
in
xor
cwtl
and
xchg
jg
add
dec
ret
adc
sahf
popf
test
xchg
loop
or
push
mov
add
into
inc
leave
lea
out
out
cmc
mov
xadd
daa
cmp
xor
add
nop
test
and
sbb
int
daa
cmp
sub
or
lods
popf
aad
cvtps2pi
push
inc
jne
mov
inc
and
aam
jo
movsl
das
mov
inc
dec
cmp
or
dec
mov
push
inc
dec
popf
mov
call
out
mov
or
ja
decb
or
lods
faddl
mov
and
repnz
in
xor
int3
test
xchg
sub
or
cmp
fs
jmp
scas
mov
add
int3
cmpsl
cwtl
cs
or
outsb
out
nop
mov
sbb
mov
repz
cltd
jno
data16
cmpsl
push
pop
xor
mov
jg
cwtl
sbb
jbe
inc
adc
mov
xor
pop
stos
lcall
fsubrl
ljmp
call
pusha
xchg
int
xchg
xchg
jge
sub
or
cmp
arpl
mov
lods
ja
pop
cwtl
out
pop
mov
int3
das
ret
cltd
mov
les
fdivrl
pop
ficomps
push
inc
stos
lock
inc
lea
fsubrs
pusha
out
mov
cli
mov
xor
popf
les
aas
xor
jnp
in
mov
adc
push
insb
push
or
cmp
insl
inc
sub
mov
jmp
xchg
xor
sub
popf
or
push
and
push
xchg
jns
imul
pop
or
add
jae
xchg
inc
push
aaa
scas
stos
stos
xchg
xlat
scas
inc
jge
jnp
inc
xrelease
fidivs
outsb
les
pop
inc
imul
divl
xlat
popa
pop
rcll
adc
add
out
into
movsb
sub
pop
dec
xor
and
xor
not
stos
mov
aam
cmpb
out
gs
push
in
scas
pop
sahf
adc
cmp
popa
lret
fs
lods
repnz
in
adc
leave
dec
ror
negl
sbb
mov
dec
das
dec
sahf
mov
cmp
notl
insl
int
out
inc
adc
cmp
pop
cwtl
out
fs
in
outsb
push
dec
or
dec
or
mov
mov
imul
std
adc
mov
cmp
insl
inc
cmp
pop
leave
in
out
and
lret
fdivrl
js
inc
xor
push
pop
pop
insl
sub
push
mov
nop
out
or
iret
mov
xchg
cld
adc
aaa
xchg
into
call
leave
inc
cmpsb
xchg
adc
or
outsl
adc
jns
cltd
and
mov
inc
aad
mov
ljmp
bnd
and
js
test
popf
xchg
mov
rcrb
adc
lahf
call
inc
dec
mov
insl
and
pop
mov
and
sahf
and
int3
fs
or
repnz
pop
jns
sbb
mov
arpl
push
mov
hlt
les
into
or
jne
jne
mov
sbb
in
and
std
inc
cli
cmpsl
test
xlat
shl
clc
xor
aas
dec
fdivl
cmp
push
dec
pop
nop
or
cs
addr16
sbbl
inc
stc
mov
insl
rcrl
mov
pop
lcall
mov
mov
dec
cs
xchg
ds
adc
mov
rcrb
pop
mov
cmc
mov
lods
jbe
xchg
or
and
jo
jl
xor
lcall
gs
mov
movb
int3
movsb
aaa
pop
insl
je
sub
jnp,pt
xor
ret
adc
lea
lret
dec
test
pop
mov
or
mov
push
xor
repz
movntps
movsb
insb
fs
inc
push
int
cli
outsb
jmp
mov
ret
inc
and
xchg
mov
and
stc
xor
mov
ljmp
inc
clc
push
mov
push
jl
mov
mov
add
push
in
push
adc
sub
imul
push
pop
nop
mov
push
outsb
sbb
adc
add
rclb
into
lret
jo
popf
sbb
and
fstpt
add
lods
mov
jle
pop
cmpsl
sbb
inc
xchg
add
es
and
cs
aas
sarb
push
cmp
lret
and
insb
jle
clc
in
lea
mov
repz
or
xor
inc
fs
xlat
cltd
flds
or
sbb
ret
shl
inc
leave
dec
cltd
adc
xor
dec
je
sub
xchg
dec
mov
ss
jne
xchg
inc
rorb
clc
mov
ficomps
sti
add
imul
popa
ret
fs
sahf
jg
arpl
jne
stos
mov
adc
jecxz
std
gs
stc
iret
fcoml
add
shl
aam
jns
xor
mov
rclb
add
ds
js
and
push
sub
sub
mov
std
pop
sbb
mov
jnp
mov
cltd
dec
lods
sub
xchg
pop
ds
fs
pop
insb
out
adc
cmp
dec
negl
mov
fcomp
ljmp
jbe
in
jne
fbstp
add
lds
xchg
test
bound
sbb
std
pusha
data16
or
nop
rclb
ss
adc
test
adc
inc
xor
push
and
insl
addr16
jo
in
adc
shl
jle
loopne
test
mov
inc
lret
pop
xchg
inc
jne
les
sub
fisubl
dec
add
pop
xchg
stos
mov
or
jnp
lods
insl
cmp
out
dec
mov
inc
mov
pop
push
mov
pop
mov
les
mov
sahf
icebp
jp
jmp
or
adc
xchg
xor
or
cs
push
mov
aad
ret
mov
mov
push
icebp
dec
in
mov
or
xor
std
mov
icebp
jns
out
stc
xor
fs
fmulp
pop
cmc
lahf
sbb
lds
cld
and
jno
insb
mov
xchg
rcl
inc
mov
xchg
lret
jbe
cli
ljmp
xchg
and
jb
shl
rclb
jl
push
imul
cmp
pop
das
adc
fs
lods
cmpsb
leave
aaa
mov
add
and
andl
jae
xor
sbb
ljmp
cmp
outsb
scas
stc
rorl
gs
mov
out
cmp
mov
test
pop
gs
les
xlat
mov
adc
loop
lods
out
sub
cmp
or
adc
rorb
xchg
lods
add
xchg
inc
and
frstor
es
push
cmpsb
pop
ret
inc
dec
addr16
push
scas
push
test
clc
sbb
adc
push
insb
ret
adc
sub
jp
incl
cwtl
aam
lods
sub
popf
test
xor
and
sub
loop
scas
iret
and
sub
push
lahf
lods
imul
aas
stc
xchg
jbe
xlat
xchg
fmul
adc
andl
add
aas
cwtl
xor
sbb
stos
jns
aad
inc
push
inc
sub
push
jbe
icebp
ds
add
arpl
jo
das
jnp
or
fcoms
cmp
mov
test
push
movsb
sbbl
das
cmp
jns
scas
sti
repnz
inc
dec
es
sbb
mov
jl
fisttpll
movq
inc
sbb
inc
dec
nop
insl
test
inc
das
les
fidivrs
or
sub
rcll
sub
inc
lret
inc
cmp
fstpt
test
arpl
mov
or
incl
imul
leave
mov
arpl
cltd
mov
inc
mov
adc
cmp
pop
push
sub
into
push
jecxz
das
outsl
sbbl
cli
mov
test
scas
pop
fwait
ja
stos
ds
jmp
inc
pop
mov
mov
ud1
xchg
adc
lods
add
xlat
and
fsts
or
outsb
push
bound
sbb
jg
scas
xor
std
pusha
shll
inc
mov
into
mov
adc
xchg
cwtl
pop
mul
xchg
insb
add
test
and
push
es
std
popl
adcb
xchg
dec
add
dec
push
pop
sub
cmp
and
add
insb
popa
stos
add
or
mov
pop
add
es
mulb
jmp
pop
dec
and
jl
mov
xlat
add
jl
mov
xchg
dec
pop
std
out
sbb
test
mov
mov
in
cld
xor
dec
mov
inc
popa
js
xor
out
push
ffreep
jae
ror
out
and
sub
sti
cmp
sbb
lock
js
mov
ret
dec
pop
xor
xor
jmp
stos
clc
jb
or
push
cmp
jno
jnp
push
daa
sub
fs
mov
inc
data16
cwtl
mov
loopne
into
jp
cmp
stos
pop
repz
call
incl
mov
aam
inc
mov
fsubr
jb
dec
xorb
pop
cmp
dec
pop
push
push
jle
cmpsl
in
mov
jmp
push
mov
and
adc
pop
test
cmp
jbe
xchg
xorl
push
add
ds
pop
lods
in
jno
jbe
mov
cs
pusha
js
bound
xor
loop
pop
xor
cmpsb
xlat
and
pop
out
lret
dec
ret
das
cmp
adc
in
sub
xchg
fistpl
jge
lods
pop
mov
pop
sub
pop
test
and
xchg
xchg
cmp
dec
and
push
mov
xchg
lods
mov
fdivrs
mulps
inc
lock
divb
hlt
sub
mov
dec
push
dec
vmovaps
fiadds
pop
out
adc
loop
xchg
jecxz
add
fldl
mov
dec
mov
ret
out
xor
dec
pop
cmp
movsb
mov
mov
mov
std
daa
int3
pop
popf
bound
fcmovb
fcomps
icebp
jae
ljmp
ljmp
mov
mov
jl
inc
add
lret
test
js
out
jnp
xor
xorl
adc
lret
mov
cmpsl
faddp
outsb
ret
imul
and
mov
push
mov
ret
mov
test
ret
mov
fisubs
sbb
cmc
and
clc
cwtl
cli
adc
out
mov
mov
test
in
cmc
movsl
neg
cs
leave
bound
insl
adc
mov
dec
push
mov
mov
stos
mov
push
repz
lds
fsubrp
xor
push
lea
lcall
subb
cmp
lods
pop
fisttpll
sub
hlt
sti
les
mov
mov
sbb
or
cmp
sti
sub
jp
shlb
fwait
push
insl
push
mov
dec
pop
cmpsl
bound
mov
pop
stc
add
mov
adc
aad
test
push
aaa
dec
jl
mov
jl
fbld
or
push
jno
mov
pop
decb
gs
cmp
sbb
inc
jecxz
fdivs
outsl
lret
cmpsb
or
inc
and
or
fs
add
popa
mov
mov
sub
push
lea
cs
cmp
mov
sbb
test
inc
es
inc
lds
fbld
or
cwtl
notb
cmp
add
mov
call
sub
push
and
push
mov
outsb
outsl
push
sbb
mov
testl
jnp
test
je
dec
add
mov
jae
insb
jne
hlt
dec
movsb
sbbb
xchg
push
orl
push
sbb
xchg
cld
sub
mov
sbb
jne
inc
js
adc
and
lcall
mov
dec
sub
adc
sub
adc
push
sub
adc
pop
xchg
ret
js
dec
jae
fs
int3
cmp
push
push
xchg
mov
inc
sti
mov
push
xor
mov
stc
in
cmpsl
mov
add
lods
mov
sbb
jb
add
sahf
xchg
test
pop
popf
sbb
mov
bound
lret
mov
jmp
jecxz
stos
out
imul
adc
and
xlat
insb
movsb
fnsave
cmp
ret
insb
mov
xchg
ljmp
and
or
xchg
loop
cmp
mov
sbb
inc
pop
nop
das
pop
lea
testb
jl
add
push
pop
aas
jmp
mov
imul
mov
xor
lods
imul
movsl
dec
xchg
xor
jge,pt
inc
sbb
inc
arpl
jne
sbb
outsl
sub
and
xor
xor
sub
sub
mov
jle
js
imul
insl
xor
bound
cmc
pop
mov
mov
xor
mov
das
pusha
mov
sub
ds
sub
testb
ficoms
jg
xchg
mov
repnz
scas
xchg
into
int
iret
mov
movsb
scas
mov
nop
cltd
out
pop
jge
cmpsl
sub
and
mov
addb
cwtl
cmp
inc
xor
mov
sbb
cmp
rclb
mov
cmpl
lods
cmp
in
ss
jg
push
iret
aaa
push
add
test
push
pop
xlat
ret
mov
fbstp
filds
cmpsl
pop
sbb
xchg
test
test
push
mov
out
sub
mov
je
mov
shll
sbb
sbb
mov
arpl
or
pop
cmp
test
jle
xor
imull
pop
inc
xchg
loop
repz
inc
cli
jge
scas
adcb
stos
inc
fsubrl
cmc
pop
jo
add
lret
aad
sbb
xchg
mov
fdiv
dec
add
sbb
insl
add
jp
orb
sub
mov
test
xchg
aaa
insb
lcall
xor
iret
lods
aad
inc
mov
mov
cli
les
sub
add
in
push
xchg
mov
dec
bnd
mov
ljmp
mov
jo
cld
nop
dec
add
mov
mov
add
mov
mov
enter
jecxz
xor
pop
das
jns
mov
imul
and
cmc
pop
jb
push
aam
imul
xorb
lods
aam
cmpl
jle
mov
rolb
xor
jle
dec
dec
ds
adc
aaa
in
jge
xchg
out
ficoms
jmp
jp
rcll
xchg
mov
inc
shll
sub
in
sahf
push
and
pop
mov
mov
mov
daa
push
out
mov
and
pop
lock
xchg
push
adc
adc
push
cmp
push
stos
adc
test
lahf
enter
xor
push
inc
xchg
push
mov
icebp
stc
push
dec
sbb
insl
cmpb
mov
mov
notb
jmp
inc
mov
movl
hlt
mov
push
aad
ljmp
or
insl
or
cmp
imul
mov
orl
mov
jne
cmpl
push
outsb
inc
leave
test
pop
adc
cmp
xchg
lods
inc
movsb
xchg
in
lret
int
push
push
push
call
jns
or
decl
xchg
sbb
cmp
das
adc
adc
lods
pop
add
xchg
fcompl
enter
push
inc
cmp
mov
outsb
inc
lods
cmp
stc
dec
and
push
sub
mov
in
ret
lahf
and
inc
mov
aas
sub
cmc
mov
dec
pusha
add
mov
jmp
sub
lahf
mov
jl
std
fistpll
mov
imul
dec
inc
in
mov
fdivrl
fs
fidivs
sub
pop
std
ret
sub
ja
pop
dec
shll
xchg
xor
inc
ds
loopne
mov
and
lock
push
inc
jmp
mov
xchg
mov
int3
pop
ret
shr
lods
mov
rcll
cmp
mov
push
and
ret
notb
push
pop
enter
mov
cmp
cmp
pop
add
pop
mov
fs
jp
adc
ficoml
cmp
inc
stc
inc
adc
scas
add
mov
leave
faddl
pop
mov
xor
xchg
stos
jb
mov
push
pop
sub
aas
fcmovnb
pop
mov
rolb
fldl
aad
and
shrl
bound
push
decb
aam
imul
jp
mov
push
push
movsl
push
sub
in
hlt
les
push
jle
enter
and
mov
scas
adc
push
sarl
sub
mov
xchg
and
rcll
add
fst
test
add
dec
push
pop
push
inc
mov
jno
shr
sub
xchg
movsb
shl
add
sti
push
mov
cmp
adc
sbb
and
and
cmpb
popf
int
jge
mov
mov
inc
test
mov
jbe
dec
sahf
jmp
dec
adc
popf
stc
andl
popa
cli
std
in
xlat
es
les
or
push
xor
aaa
mov
shll
imul
mov
push
sub
movsb
cmp
cmp
ja
je
adc
mov
das
in
xor
add
fwait
push
inc
pop
mov
incb
es
inc
adc
jae
cmp
push
fbstp
jg
or
stc
jno
outsl
jle
xor
sub
xor
jmp
jl
cmp
push
std
mov
dec
adc
je
jp
lcall
sbb
and
inc
js
inc
or
notl
in
test
lret
lcall
pop
imulb
test
pop
aam
mov
data16
cmpsb
xchg
or
subb
jnp
xor
scas
sbb
daa
adcb
nop
push
outsb
test
xor
add
rclb
xchg
jo
addr16
sub
jl
and
mov
and
imul
fimuls
roll
lock
sub
dec
inc
mov
aas
adc
aas
push
insb
imul
xchg
add
fcom
or
mov
cmpb
nop
jge
rcll
ret
mov
dec
lock
jbe
xchg
jb
adc
cmp
sti
xchg
or
adc
cmp
fadds
pop
push
mov
and
inc
and
mov
mov
dec
xchg
mov
mov
fsub
jbe
ds
pop
push
xchg
in
mov
inc
shl
mov
out
pop
divb
add
and
mov
xor
push
shl
mov
sub
sub
sbb
inc
pushf
in
xor
mov
push
jns
fmuls
in
sbb
cmp
lds
sbbb
imul
or
bound
aas
shlb
lds
lahf
jmp
popf
mov
pop
or
cmp
mov
insb
add
mov
es
pop
bound
cld
sti
jle
inc
vmovhlps
aam
push
adc
jae
aas
inc
sbb
mov
mov
xchg
dec
mov
dec
pop
lret
mov
clc
dec
insb
or
xchg
loopne
xchg
jmp
ja,pn
fwait
in
and
aad
les
cltd
bound
cli
pusha
fsts
xor
sbb
lods
xor
shlb
add
cltd
push
movsb
arpl
sar
inc
mov
out
pop
push
dec
iret
mov
adc
incl
mov
mov
orb
fldt
adcl
cmp
xor
pop
ret
jo
insl
je
mov
jbe
jae
pusha
push
das
pop
pop
std
jo
stc
inc
popf
xlat
das
sti
dec
cs
push
outsb
sahf
add
fiadds
jno
cwtl
repz
fidivl
hlt
cld
jne
rcrl
cmp
lret
adc
mov
pop
out
add
push
and
rolb
push
xor
mov
mov
cmc
inc
testb
xchg
push
js
and
je
rcrl
lcall
cmpl
adc
fwait
dec
popf
push
test
adc
mov
pop
movsb
and
mov
inc
mov
or
dec
sub
sub
sub
mov
out
lods
in
cmp
fs
jle
sbb
les
jb
push
xor
jecxz
mov
and
sbb
sarl
dec
subb
and
inc
xchg
cmp
mov
icebp
shlb
sbb
fcomi
fyl2xp1
lods
jecxz
or
push
sbb
mov
test
sub
pop
mov
and
push
and
test
pop
imul
mov
lret
insb
jmp
jnp
xchg
cld
cs
daa
push
cmpsl
sub
mov
inc
outsb
nop
xchg
fwait
xlat
adc
in
clc
call
inc
push
push
lods
add
xchg
fldt
loopne
scas
mov
fiadds
mov
iret
rorl
push
inc
lret
movsl
pushf
test
mov
inc
or
repnz
icebp
or
mov
int
sub
stos
xchg
fdivrp
inc
or
mov
loop
push
imul
add
pop
sub
out
jmp
inc
jl
pop
mov
mov
in
sti
xchg
sahf
movsl
addr16
fwait
outsw
mov
push
add
call
mov
add
pop
push
mov
arpl
mov
fbstp
imul
pop
mov
cmpsb
jge
outsl
xchg
jbe
or
push
and
stos
cmp
cmp
fisubs
mov
push
ja
mov
movsb
in
inc
lret
cmpsb
aas
cmpsb
int3
fbstp
push
adc
add
inc
fildll
push
js
xchg
sbb
divl
mov
test
subl
dec
ret
inc
pop
pop
scas
popa
scas
dec
outsl
mov
jp
fisttpl
in
insl
sbb
push
xchg
add
xor
sub
or
mov
cmpsl
cmp
enter
pop
push
in
dec
divb
pop
lret
shlb
add
mov
push
fisttpll
xorb
push
enter
mov
icebp
mov
imull
popf
push
nopl
repz
dec
jp
jae
dec
rorb
sub
pop
or
lret
je
push
pushf
mov
out
adc
pop
popa
or
and
sbb
pop
insb
fldenv
int
ret
add
rclb
lret
out
mov
ret
xchg
xor
jns
adcb
cmp
cmpsb
js
inc
sbb
mov
sar
mov
mov
sar
imul
push
inc
sub
sahf
push
cmp
and
jbe
lret
out
stos
out
decl
lret
xor
lret
inc
addl
pop
fwait
ljmp
fs
jl
jmp
mov
push
inc
jmp
lret
cmc
jecxz
cmp
push
andb
js
adc
pop
xor
pop
test
jb,pn
sub
sub
sbb
mov
xor
sbb
ret
daa
sbb
dec
jmp
int3
or
fldcw
addl
cwtl
xchg
pop
lock
jg
mov
or
aad
scas
mov
fsubrs
arpl
imul
sub
mov
out
adc
mov
xchg
mov
xor
push
xchg
int3
inc
js
sbb
movsb
pop
repz
or
pusha
scas
mov
sub
jp
push
push
sbb
push
test
mov
dec
pop
pop
inc
lea
arpl
xchg
arpl
lods
inc
mov
test
pop
cmpsl
je
sti
pushf
addr16
mov
jge
mov
dec
mov
mov
hlt
ret
clc
cmc
cmp
in
cmpsl
mov
mov
or
jo
dec
inc
xchg
fsubl
out
stos
push
dec
mov
hlt
jl
mov
pop
fs
int3
or
dec
or
dec
fdivrl
daa
int
ljmp
inc
jno
sub
cs
xor
jle
add
out
jne
xor
inc
add
sbb
pushf
push
adc
shlb
mov
push
mov
pop
jecxz
inc
push
lock
test
testb
sbb
mov
lods
int
push
sub
outsl
js
je
xchg
rcll
dec
movsb
adc
icebp
divb
cmpsb
xchg
jmp
jns
icebp
lea
hlt
or
imull
into
loope
test
into
inc
xchg
jmp
xchg
lahf
rolb
test
adc
xor
and
loope
rcl
lret
je
mov
cmp
cmc
push
and
xchg
inc
push
pop
divl
pop
xorl
repnz
out
or
scas
pop
pop
mov
sbb
fs
out
test
fistpl
insl
inc
subb
loope
cmp
jl
xchg
mov
push
sbb
mov
mov
and
xor
inc
ljmp
xchg
push
popf
fidivl
pop
mov
repnz
pop
push
mov
push
inc
faddl
loop
insl
xor
lods
cli
cwtl
pop
push
xor
lods
mov
inc
mov
subl
inc
pop
in
leave
pusha
inc
and
orl
js
add
push
ljmp
xchg
xor
sbb
insl
outsb
jnp
aaa
and
xchg
push
jg
rcrb
das
popf
ror
daa
push
xchg
pop
test
sbb
lock
fists
xor
sbbb
ret
stos
xor
jb
xchg
inc
lahf
adc
scas
nop
shr
fistpll
push
mov
lods
fwait
jge
jo
pop
ljmp
sbb
push
das
imul
inc
inc
outsb
call
ret
jne
call
sti
stc
loop
inc
cmp
pop
ja
xor
and
test
push
pop
imul
pop
lods
xlat
mov
popf
repz
popa
inc
push
loopne
out
out
xchg
sbb
adc
mov
mov
in
or
add
adc
sbb
ret
repz
pop
mov
out
add
lock
popf
subl
cmpsb
fildll
cmp
dec
stos
cs
outsb
ljmp
mov
movsl
inc
jp
insb
add
push
mov
mov
stc
push
jecxz
mull
lea
push
mov
push
test
fstps
rcll
dec
stc
pop
out
or
add
in
mov
loop
cld
lahf
pop
add
loope
lds
loope
lods
daa
add
cmc
jnp
sahf
push
ljmp
call
inc
ret
fwait
sub
mov
mov
lahf
push
shrl
js
bound
inc
xchg
dec
addr16
jmp
imul
loop
mov
or
cmp
imul
xchg
mov
fwait
pop
xor
std
push
test
scas
js
xor
push
test
test
movsl
mov
sbb
into
ret
jbe
jns
fs
in
lcall
xchg
or
push
jl
not
sub
cmc
pop
pop
or
lock
push
dec
push
lret
dec
loop
xor
hlt
or
rorl
mov
je
mov
sub
mov
clc
push
push
out
pop
or
out
and
sbb
mov
mov
movsl
dec
xor
xchg
ret
mov
call
inc
out
or
cli
dec
jp
shl
xlat
cmp
lds
scas
bnd
dec
std
mov
jb
push
push
inc
mov
repz
ret
mov
das
cmp
sub
scas
ret
sbb
mov
push
mov
test
rolb
lcall
inc
xchg
pop
sbb
out
lcall
pop
rcrb
iret
testb
dec
xchg
mov
jnp
add
roll
cwtl
mov
in
mov
inc
addb
xchg
mov
icebp
loope
or
mov
or
inc
push
enter
mov
shll
pushf
cmp
mov
sbb
in
xchg
jl
rorl
mov
data16
pop
ss
mov
xchg
jecxz
inc
ljmp
add
sarb
mov
cmc
xor
pusha
in
push
mov
cmpsb
mov
aam
cmp
bound
in
xor
mov
test
fs
and
test
in
and
ror
push
lret
and
jns
lods
xchg
adc
pop
mov
mov
cltd
mov
sbb
and
fwait
sub
andl
je
testb
loopne
cli
inc
sub
rclb
shl
sub
cmpsl
outsb
push
dec
xor
add
mov
push
push
or
icebp
mov
and
imul
pop
mov
xor
mov
enter
inc
mov
jle
aaa
inc
das
inc
add
add
cmp
inc
stc
call
nop
inc
inc
out
inc
outsl
jmp
ljmp
push
jns
into
lods
pop
push
fstl
imul
jno
push
das
cmp
xor
inc
adc
testl
mov
ljmp
jne
fs
dec
push
push
dec
cltd
and
fs
cltd
ss
clc
rorb
je
inc
jnp,pt
pusha
fldl
and
imul
sbb
cmp
xor
xchg
inc
dec
jle
mov
dec
push
sbb
jge
test
xchg
cmp
inc
pop
mov
fstl
sub
repnz
ret
sbb
loope
push
fildll
push
fisubrl
mov
in
dec
sub
test
jno
xor
int
jnp
in
xchg
mov
sub
push
sahf
mov
icebp
adc
inc
or
outsl
mov
pop
push
and
ljmp
aad
sub
adc
andb
pop
inc
f2xm1
test
or
aas
cmp
mov
add
cld
and
mov
jno
iret
inc
mov
mov
fistl
sbb
xor
fsubs
fsub
add
aas
addr16
lahf
icebp
hlt
jno
adc
xor
jmp
lock
aam
inc
pop
in
push
sub
pop
ljmp
jp
addl
cwtl
sti
pusha
nop
push
sub
scas
not
test
xchg
lods
test
pop
jl
inc
push
subl
scas
loopne
inc
ljmp
dec
orb
repnz
mov
sub
cmp
cmpsl
inc
xchg
pop
ja
add
push
ficoml
jo
hlt
xor
inc
pop
pop
fmull
sbbl
lret
jo
pop
pop
int
cmp
mov
mov
movsb
ljmp
jo
scas
pop
mov
adc
rol
sub
xorb
popf
mov
popf
xchg
loopne
xchg
lods
not
jmp
sub
cld
jp
in
psrad
mov
dec
adc
mull
shll
scas
adc
div
adc
mov
or
push
movsb
mov
push
call
nop
add
lock
dec
jae
and
faddl
sub
cmpsb
or
mov
mov
lods
push
bound
sub
mov
sub
sbb
cmp
mov
xchg
loope
push
in
adc
fnsave
inc
imul
andl
sub
and
dec
mov
bound
sarb
cli
or
popf
and
cs
sub
hlt
cmpsb
inc
xchg
sbb
rol
mov
xlat
inc
movsb
xchg
mov
das
xchg
mov
mov
sub
xor
mov
sub
add
sub
mov
fdivl
ficoml
stos
repz
sbbl
jl
inc
add
adc
into
or
sbb
in
add
inc
dec
ret
pop
cwtl
lret
xor
iret
aad
sbb
add
imul
push
push
adc
scas
flds
pop
mov
add
mov
jl
ficoms
ss
dec
daa
xchg
popa
lcall
push
sbb
sbb
pop
hlt
add
or
test
cmp
adc
dec
lock
int
pop
jbe
mov
push
cmp
dec
cmp
mov
sub
pusha
gs
and
push
aas
jg
ljmp
push
call
dec
dec
imul
mov
pop
div
scas
pusha
out
jge
arpl
jns
int3
repz
xchg
fists
push
push
mov
mov
fwait
out
xchg
lods
pop
rorb
and
cmp
movsb
rcl
lcall
xchg
and
loope
ret
push
fwait
out
jl
jge
pop
push
das
push
mov
dec
inc
xor
es
movsl
sbb
and
dec
test
mov
in
mov
adcb
popa
sub
cmp
sbb
test
inc
out
add
and
mov
or
das
sti
test
out
xor
pop
mov
cmc
shll
and
bswap
push
ret
cmpsb
cltd
pop
cmp
stos
scas
mov
sub
imulb
adc
imul
adc
jae
pop
sbb
mov
lds
push
popf
jne
into
add
ljmp
sahf
jne
ret
arpl
ljmp
loop
sub
cmpsb
popa
call
mov
test
xchg
sub
push
test
or
repnz
dec
ja
xorb
lea
lret
push
xchg
repnz
in
xor
cld
pop
fsubl
sbb
push
jae
push
ljmp
into
je
pop
mov
xchg
pop
push
imul
xor
sti
and
das
adc
pop
movsb
lret
adc
dec
xchg
movsl
pop
repz
aam
scas
notl
aas
inc
xor
mov
sub
dec
js
test
cmp
mov
pushf
pop
lahf
jae
and
popw
cld
fwait
cmp
mov
push
not
or
pop
dec
add
lcall
insl
stos
and
push
jge
dec
ljmp
gs
mov
cs
jbe
das
cmpsb
ds
or
rcrl
fistpll
rep
leave
in
rolb
sub
mov
push
pusha
pop
ret
test
mov
cmpsl
ret
xor
push
mov
sarl
xchg
push
mov
in
lret
mov
std
insb
sti
push
push
push
movsl
add
sbb
xor
inc
roll
sbb
pop
adcb
adc
push
mov
fwait
lret
jmp
jg
scas
bound
aaa
ja
mov
mov
add
mov
popa
sub
pop
sbb
mov
std
dec
aam
jnp
mov
dec
rcl
pop
or
dec
fld
movsl
sub
xor
aam
es
aam
scas
sahf
hlt
out
rorb
and
cmp
xor
sahf
pop
mov
mov
ret
hlt
icebp
jg
mov
decb
mov
add
sbb
add
ds
mov
sub
inc
addr16
xchg
push
clc
fcmovnb
rcrl
ds
xchg
adc
cmp
ja
sub
lock
mov
push
ds
mov
cmp
cmpsb
or
push
rcrb
inc
sbb
adc
ret
test
mov
int
adc
or
xchg
dec
inc
push
lret
pop
inc
roll
sbb
push
icebp
adc
stos
rorb
inc
or
loop
or
jns
leave
xor
jl
lds
mov
inc
dec
scas
cmp
fnstcw
cli
adc
inc
mov
inc
cmove
mov
cltd
es
cmpsl
jo
sti
or
add
pop
push
imul
mov
sbb
and
mov
pop
push
xchg
cmp
repnz
sub
insl
outsl
pop
jl
hlt
and
andb
jl
fmul
adc
xchg
out
xchg
mov
jmp
stos
shl
and
scas
sub
int3
nop
sub
dec
add
lahf
ljmp
pusha
pop
sbb
xor
mov
jo
je
sbb
scas
fiaddl
add
out
test
iret
add
mov
lds
pushf
cmp
mov
push
and
jns
dec
dec
sbb
push
cltd
push
mov
push
faddl
je
sbbw
dec
xchg
add
cmpsb
inc
jle
cltd
inc
insb
xchg
mov
xchg
test
mov
dec
ljmp
jl
hlt
lea
ds
cmp
mov
adc
mov
mov
jle
push
or
push
ret
mov
sbb
std
adc
xor
sub
xor
pop
lret
mov
sub
or
jno
sbb
shlb
mov
cmp
jmp
cmp
pop
xor
jmp
loope
imul
cwtl
cld
imul
sbbb
mov
sbb
in
imull
pop
add
test
inc
push
pop
jo
push
sub
in
lock
mov
addl
and
sub
mov
pushf
mov
pop
xor
mov
mov
sarl
sbb
nop
push
add
nop
xchg
xlat
aas
jno
mov
fdivrs
pop
lods
inc
lds
pop
stc
adc
and
bound
scas
cmp
lods
jo
cmp
inc
insb
push
gs
inc
sbb
popf
shr
cmc
inc
fstl
movsl
rolb
addr16
dec
ret
inc
dec
cmp
mov
mov
popf
or
cli
xor
in
in
push
shrb
push
lods
jecxz
cld
mov
in
pop
add
pop
in
dec
push
pop
add
arpl
xlat
pop
rcrl
mov
sbbl
ret
outsl
cld
xchg
shrb
pushf
rol
xchg
pop
loope
add
pop
bswap
xchg
ret
jnp
pop
adc
mov
xor
out
jo
jne
fcmovne
xor
daa
insl
add
mov
xor
roll
mov
mov
inc
test
ja
orb
adcl
int3
loop
outsb
sti
cmp
sub
pop
add
insb
cmp
lret
push
btr
pushf
iret
repz
lods
inc
dec
js
aam
pop
pop
jp
push
daa
pop
and
movsl
dec
movsb
push
arpl
fs
mov
outsb
sub
rcr
sub
lahf
std
push
xchg
xchg
xchg
jno
out
and
fnstsw
jno
ljmp
xchg
and
fidivl
mov
push
push
adc
push
add
pop
addb
and
pop
fwait
jg
daa
mov
das
jg
mov
push
dec
pop
cmp
xor
xchg
arpl
loopne
outsb
mov
and
jns
bound
inc
addb
out
pop
aas
cmpsb
or
int3
xchg
dec
das
fsts
repnz
sti
repnz
xor
fidivl
imul
xchg
add
push
cmpsl
jmp
cmp
xchg
dec
std
xor
dec
ret
push
pop
xchg
cli
xor
mov
or
adc
dec
scas
sbb
lret
adc
scas
or
sub
mov
push
nop
sub
std
xchg
js
mov
sbb
imul
add
add
push
pusha
ds
mov
mov
cltd
scas
jl
push
repz
jo
inc
leave
js
sbb
test
pop
insb
in
cmp
mov
push
fldl
ljmp
dec
pop
pop
stc
adc
cmp
hlt
ja
mov
js
movsb
jae
push
mov
jnp
mov
add
repz
sub
pop
leave
adc
cmp
mov
add
mov
test
xchg
mov
xchg
out
and
xchg
icebp
pop
mov
or
mov
movsl
pusha
dec
and
lods
jne
out
lods
mov
or
xchg
daa
mov
nop
xor
add
and
out
sbb
push
mov
adc
fldt
outsb
or
adc
mov
call
mov
lahf
jl
hlt
loope
push
xor
or
push
lods
and
pop
inc
not
pop
pop
cld
push
insl
test
lret
inc
xor
mov
fwait
repz
mov
popw
mov
lods
cmp
into
mov
mov
pushf
jne
dec
sub
xor
stos
fstpl
js
pushf
sbb
mov
dec
clc
mov
fsubs
or
sbb
es
jbe
add
pop
repz
daa
insb
mov
fldt
icebp
mov
adc
push
testb
inc
pushf
loop
cmp
sbb
push
mov
in
pop
nop
inc
fldl
jbe
shlb
push
mov
notl
xor
xchg
push
mov
cmp
bound
test
loope
leave
xchg
popf
or
nop
idivl
loope
fs
cmpsl
outsb
insb
jmp
ds
push
mov
or
sub
out
xchg
jp
jecxz
mov
sahf
mov
out
dec
fildl
add
loop
insl
addr16
xchg
andb
xor
jae
lods
pop
lahf
sub
mov
std
fisubrl
jnp
outsb
popa
in
in
mov
jmp
add
and
sbb
dec
push
jo
movb
fucomip
pusha
xchg
daa
stos
scas
sbb
add
das
jae
int3
les
jmp
jno
jae
popf
add
mov
fcomps
inc
sbb
and
or
lock
or
rorb
mov
popf
popa
leave
xchg
xor
arpl
mov
pop
or
xor
popl
je
mov
test
fisubrl
xchg
movsb
gs
dec
int3
les
add
push
popa
inc
pusha
mov
addr16
into
fadds
push
lcall
roll
scas
insl
lret
scas
push
dec
inc
mov
pop
add
push
add
lret
pop
mov
int3
pop
cltd
in
ljmp
int
jo
push
jns
jno
shrl
inc
nop
inc
sub
mov
js
sub
or
sub
test
and
mov
in
dec
or
adc
push
inc
fs
insl
lret
mov
imul
inc
rcrl
ljmp
add
movsl
and
ja
test
dec
icebp
xchg
sbb
fnsave
inc
mov
cmpsl
loopne
sahf
cmc
add
or
mov
sub
cwtl
mov
and
adc
push
mov
dec
getsec
mov
out
es
mov
lret
jge
mov
xchg
add
jb
or
dec
xchg
push
mov
lock
mov
inc
xchg
cwtl
pushl
pop
adc
push
sub
es
xchg
push
pop
cmp
xor
mov
call
sub
sub
leave
push
sub
inc
or
mov
jp
fmull
leave
in
adc
inc
inc
mov
scas
pushf
loop
lods
push
pusha
add
dec
lods
mov
scas
jmp
xchg
lret
xchg
and
test
push
repnz
sub
jnp
imul
test
shl
in
into
or
loop
ds
mov
sub
dec
adcb
jb
jg
ficompl
lods
lds
add
movsl
or
daa
cmpsl
inc
dec
out
push
and
and
push
cli
or
aaa
push
cmp
loop
sub
jge
cmp
out
aas
cmpsb
mov
lahf
add
push
bound
sbb
cmpb
movsb
xchg
cmp
test
into
add
cmp
xchg
fs
or
ret
cmpsl
push
mov
push
mov
xor
cmpl
add
stc
mov
loop
dec
mov
gs
sub
mov
fistps
pop
fsubrs
lret
imul
xor
push
inc
cmpsl
dec
adc
jne
test
add
mov
popf
imul
xlat
push
adc
mov
aad
loopne
pop
loop
mov
pop
insb
fstpl
jno
and
div
mov
shl
push
dec
xor
outsl
mov
pop
into
adc
int
xchg
test
mov
outsb
pop
xchg
add
cld
popf
push
xor
xor
sbb
ret
jl
mov
js
xchg
xchg
sbb
jg
orl
cmp
pop
stc
lods
inc
mov
inc
xor
ss
dec
inc
xchg
jae
sbb
push
fs
push
nop
fwait
mov
push
les
addr16
bound
dec
jge
pop
mov
es
push
xor
daa
jne
aam
mov
pop
mov
or
jg
fcomip
fnstcw
test
fdivrs
bound
push
fisubl
add
adc
jmp
dec
push
sbb
xor
outsl
and
adc
mov
ret
out
mov
mov
aaa
dec
das
fcoml
loopne
cmp
nop
push
rol
pusha
sbb
cmp
mov
cmpsl
mov
aad
imul
dec
sbb
mov
inc
dec
ljmp
cwtl
lds
and
xor
movsb
add
pop
jle
xchg
adc
push
mov
enter
push
dec
dec
repnz
cld
or
jecxz
dec
adc
loop
aad
dec
out
aas
lret
mov
xor
arpl
pop
cli
xor
dec
add
mov
lods
push
jne
mov
cmp
mov
cmp
dec
jecxz
inc
xchg
adc
cmp
aad
add
les
es
out
mov
pushf
push
xor
or
mov
daa
test
fnsave
pop
xor
sbb
adcb
aam
rcl
mov
push
movsl
mov
fadds
imul
mov
or
fisubrl
xor
rorl
ja
or
daa
in
cmp
repz
jbe
fnstsw
rcrb
xlat
dec
cmp
out
sahf
xor
fidivrs
cmp
xchg
out
testl
fimull
les
rep
xor
inc
cli
jge
into
add
sub
add
mov
and
cld
inc
jne
xor
adc
add
add
ds
ljmp
lcall
lods
clc
idivl
fcomi
jp
lahf
xchg
lods
rolb
outsl
adc
jmp
pop
mov
push
jo
sar
int
mov
add
int3
mov
pop
paddsw
xor
js
dec
sub
sbb
mov
adc
jl
fstl
cld
xor
push
mov
imul
insb
push
sti
gs
adc
inc
lahf
imul
mov
push
sub
xchg
push
adc
aas
ss
fadds
cld
hlt
je
sub
ja
ds
hlt
fildll
jns
rclb
dec
je
fcmovu
movsb
cmp
mov
clc
or
xchg
pop
jbe
loopne
mov
lods
stc
test
or
nop
xchg
adc
add
cltd
pop
mov
xchg
sti
sarl
pop
push
gs
cmp
mov
loope
push
adc
mov
mov
in
sbb
cmpsb
mov
mov
mov
dec
subl
xchg
mov
lahf
stc
add
test
jbe
push
popa
testb
lcall
stos
sbb
icebp
lods
mov
lock
push
adc
mov
nop
dec
in
adc
ljmp
fisttpll
adc
xor
hlt
mov
fcmovnbe
nop
in
out
xor
xchg
and
hlt
outsb
mov
cmp
sub
push
sub
das
pop
sbb
xchg
xchg
and
pop
mov
loope
jb
sub
ja
pusha
scas
insw
ret
push
pop
sbb
movsl
movsb
xor
fdivs
leave
mov
leave
mov
out
mov
data16
popf
xor
stos
fldt
roll
repnz
jmp
and
leave
mov
pop
push
stos
pop
popf
cmp
and
dec
push
xchg
mov
jns
imul
pop
pop
sbb
je
adc
stos
mov
mov
push
jmp
sub
pushf
cltd
xor
repnz
sub
les
sti
addr16
jg
mov
inc
lret
outsl
mov
jns
nop
rorl
in
mov
testb
in
sub
fwait
outsl
leave
scas
push
fucom
add
xor
lds
pop
fmul
cmc
scas
inc
mov
jmp
inc
push
jbe
call
int3
sub
sarl
lea
and
sbb
sub
xor
arpl
mov
in
pop
cmp
or
mov
cs
mov
inc
pop
call
test
lock
mov
mov
jno
mov
aam
mov
aaa
sub
cwtl
jnp
xlat
sar
aas
stos
ljmp
cld
xchg
sub
jp
sbb
pop
jle
jge
sub
inc
jo
gs
mov
cmp
int3
jmp
lea
mov
scas
xchg
or
faddp
in
fsubrl
clc
dec
adc
jge
negb
xchg
pop
jecxz
jb
ds
and
and
daa
cmp
in
inc
and
add
mov
push
sub
in
fldcw
xor
mov
pusha
sub
inc
ret
jmp
movl
add
jb
test
xchg
pop
xchg
lahf
and
sbb
jo
jg
lret
xor
movsl
test
cmc
xchg
cmpsb
mov
jae
dec
push
pop
mov
xor
ficompl
lds
push
enter
push
mov
leave
pop
pop
loop
xchg
mov
jbe
inc
sub
sbb
pushf
jmp
cmp
mov
pop
push
jle
or
popa
or
xor
push
add
jno
mov
ja
push
push
insl
sub
hlt
js
and
jge
movsl
imul
adc
sbb
cmpsb
in
and
pop
inc
addb
jecxz
addb
fildll
shlb
cmp
dec
out
xlat
inc
and
cmpsl
ret
fs
cmpsl
dec
fcomps
mov
clc
enter
stos
xchg
into
out
inc
pop
add
fs
or
ret
dec
dec
in
sub
lea
xor
fimuls
mov
push
test
ss
ror
push
adc
mov
inc
and
pop
mov
xlat
scas
and
mov
push
ret
movsl
dec
adc
mov
fsub
xchg
dec
or
mov
jae
inc
push
insb
dec
add
cmp
out
mov
fldcw
pop
jp
inc
dec
cli
in
cmp
add
fsubrp
rorb
insb
lea
js
fimull
subl
fsts
mov
jmp
aaa
cli
cmp
sub
mov
insb
dec
idivb
push
add
push
stos
add
mov
mov
lods
orb
push
les
int3
cmp
mov
out
push
adc
bound
mov
test
jb
push
xchg
inc
cmp
fildll
lret
test
js
jo
jb
fwait
push
add
mov
xchg
dec
sarb
lock
sarb
inc
sub
pusha
dec
adc
sbbb
ret
or
js
mov
xchg
jne
or
lret
jnp
icebp
xchg
xchg
mov
mov
mov
clc
fcomps
test
ljmp
push
sbb
jmp
sti
repz
lahf
push
mov
mov
cmp
stc
or
sub
sti
inc
fldpi
outsb
dec
mov
fs
pop
outsb
sbb
push
or
mov
rolb
pop
data16
dec
adc
shlb
xchg
enter
jl
lret
in
push
scas
rorb
xchg
add
aam
mov
sub
adc
shl
cmp
shlb
xchg
data16
xchg
xor
fsubs
add
lahf
js
xorb
fwait
in
nop
mov
xchg
rcr
xchg
mov
lahf
cmp
bound
xchg
inc
push
shlb
mov
or
sarb
xchg
ret
xor
lret
dec
sarb
jno
dec
pusha
loopne
aas
test
jbe,pn
mov
clc
es
dec
push
sbbb
mov
or
dec
shr
dec
mov
cmp
in
lock
and
xchg
mov
jp
fisubrl
mov
adc
lahf
psubsb
mov
or
icebp
orl
sub
mov
ret
ljmpw
loope
xchg
iret
mov
push
jl
sbb
mov
aas
fnsave
xor
lahf
push
sub
mov
dec
xlat
test
das
xor
fisttps
pop
xchg
add
in
cmp
mov
pop
gs
cmc
dec
mov
dec
dec
ret
imul
scas
fcmovnbe
cld
push
nop
cmp
out
data16
loopne
stc
mov
mov
push
inc
popf
push
mov
into
test
nop
push
in
cwtl
add
or
push
cld
sbb
cmp
mov
aas
jb
test
xor
mov
jmp
push
xchg
adc
cmpsl
jl
divl
push
rol
jecxz
and
add
stc
xchg
sub
pop
movsl
cwtl
scas
mov
mov
ret
adcb
or
mov
push
pop
jbe
jp
arpl
icebp
pop
popa
push
jnp
jns
test
inc
jmp
push
insb
ds
sti
shll
daa
mov
sarb
adc
call
cmp
add
push
or
push
enter
and
cmp
push
lds
sti
sbb
inc
div
cmpsl
jg
adc
sub
add
mov
jge
push
or
or
cwtl
in
movsb
sbbb
in
pop
pop
sub
dec
sti
pop
jo
add
lea
gs
xor
icebp
or
testb
in
jecxz
inc
cmp
push
xchg
hlt
cltd
sub
je
out
out
jae
stos
repz
add
mov
adc
aam
sub
jne
fsubp
cmpsl
inc
jmp
test
sbb
cmp
lret
lret
lods
aam
aas
sbb
cmp
jne
dec
mov
mov
add
dec
dec
lret
pop
outsl
adc
outsl
jbe
xor
or
sub
jmp
mov
fwait
adc
idivb
push
push
iret
cmpb
loope
loop
jge
mov
xlat
es
mov
and
loop
aam
push
bnd
cmpsb
push
mov
fcmovnb
fwait
mov
ss
pop
fistps
out
andl
cmp
inc
and
push
mov
int3
mov
or
shll
mov
and
pop
jle
ficomps
ja
adc
ja
std
or
stos
movsl
idivb
mov
movsl
push
sbb
fisubs
fdivrs
rolb
pushl
pop
jae
inc
inc
inc
sub
ret
jae
sub
and
repz
aas
xchg
int
add
popa
aam
and
mov
sbb
inc
sbb
jmp
mov
mov
fstpl
repnz
jp
push
inc
pop
add
mov
lcall
data16
xor
lds
push
push
mov
mov
mov
xorl
jne
leave
push
das
sbb
fstl
jns
popa
bound
imul
jmp
inc
fidivl
shr
lods
push
push
and
push
in
addr16
pop
add
pop
and
incl
pop
lcall
aam
stos
scas
test
mov
mov
sahf
inc
std
add
pushf
je
test
fcmovb
xchg
cs
sbb
cmp
cwtl
inc
sbb
cmp
and
popa
sbb
or
mov
test
loop
xchg
lcall
aaa
sbb
out
pop
in
pop
and
push
push
cmp
or
movsb
movl
mov
shrb
lret
inc
and
add
test
or
pop
aad
sub
outsl
inc
xlat
test
push
jg
lret
lahf
cmp
add
outsl
inc
sti
mov
lods
sub
pusha
dec
test
cltd
ds
xchg
and
shlb
sub
imulb
sub
or
push
inc
nop
pop
movl
xchg
in
gs
xor
mov
mov
sub
icebp
jb
cmp
into
and
out
push
mov
ret
int3
daa
aas
outsb
jle
mov
les
aam
sub
in
lea
dec
add
or
movsb
subl
fwait
negb
repnz
aas
sahf
rol
pop
add
ljmp
mov
ds
shll
cmp
push
or
popf
call
add
dec
xchg
xchg
pusha
xchg
fldl
cmp
scas
lea
sub
mov
jecxz
or
mov
in
and
jnp
push
sub
push
ret
jge
push
push
mov
test
jecxz
shll
push
testb
push
mov
pop
insb
push
inc
lods
cs
inc
or
dec
push
mov
cs
mov
outsl
xchg
inc
das
cwtl
or
stos
dec
push
mov
fbld
inc
mov
in
sbb
cld
sti
cltd
adc
and
xor
dec
inc
lds
and
inc
mov
cmp
pop
xor
xchg
xchg
shll
jmp
icebp
push
adc
es
popf
neg
mov
or
cmp
fcmovne
xor
outsl
and
repnz
sub
nop
pop
sarl
addb
xchg
mov
test
jns
loopne
lcall
test
sbb
mov
loope
sub
mov
sub
stos
ret
pusha
mov
loope
xor
dec
repnz
pop
dec
fwait
dec
xchg
adc
cwtl
and
or
pop
scas
or
lahf
and
call
loopne
aad
xchg
out
ljmp
iret
cltd
jge
frstor
pop
into
pusha
das
clc
movsb
inc
mov
rcrl
mov
inc
test
fstpl
and
sbb
jns
add
push
jp
pop
ret
dec
ljmp
jmp
pop
data16
in
stos
pop
in
add
scas
xchg
outsl
cmp
stos
or
cmpsb
cmpsb
jge
cmp
jle
inc
pop
mov
out
repnz
inc
test
imul
add
adc
or
fldl
ds
xchg
shl
pop
arpl
sub
cmpsl
stos
mov
or
into
push
addr16
mov
jmp
sub
push
mov
sbb
scas
sbb
nop
data16
lds
cli
jl
xchg
into
and
cmp
jmp
out
add
push
mov
xor
sub
add
sbb
psllw
xchg
pop
fldl
aam
inc
inc
mov
aam
rol
lret
dec
test
fstps
ljmp
ret
mov
repnz
loope
gs
lods
or
pop
sbb
adc
bound
pop
xor
xchg
outsl
rcr
mov
sbb
daa
ret
xor
jge
inc
stc
rcrl
add
xor
insl
xchg
loope
dec
int3
movsb
push
iret
push
jbe
lds
inc
xorb
ds
xchg
mov
mov
inc
lret
stos
pop
mov
xchg
jnp
adc
popf
shlb
mov
mov
outsb
pushf
cmp
mov
fists
jnp
test
test
mov
pop
xchg
aam
mov
xchg
sbb
push
insb
in
push
lds
push
ja
pop
jno
aad
sub
ljmp
or
xchg
imul
imul
data16
mov
dec
xor
xor
outsb
les
std
pop
inc
fstpt
loopne
cmp
xchg
sub
and
and
scas
pop
stos
cli
subl
jno
push
jle
and
add
mov
sbb
ret
lcall
mov
aad
dec
mov
rolb
or
push
sarl
xchg
xchg
xor
jecxz
orl
out
sbb
adc
mov
xchg
aad
sub
popa
cli
jns
inc
ljmp
jbe
loope
out
test
pop
jmp
sbb
cld
les
out
adc
cli
cmp
add
les
es
adc
sub
dec
mov
xor
shl
xor
aam
and
pop
loopne
aas
push
mov
jmp
scas
xchg
cmp
pop
orb
stc
das
iret
jg
pushaw
jmp
sub
pop
mov
dec
jl
mov
mov
cmp
add
enter
or
movsb
daa
mov
adc
push
imul
mov
ret
jecxz
shrl
mov
cs
mov
push
push
pusha
hlt
mov
repnz
xor
divl
jbe
repnz
push
loopne
test
sub
pop
xchg
clc
testl
cmp
mov
mov
dec
xor
loopne
add
lcall
sahf
jecxz
adc
mov
jae
into
push
xchg
add
xchg
xor
add
jle
mov
pushl
push
repz
mov
lret
imul
sub
jne
or
gs
add
sub
lds
mov
sarb
xor
cltd
jmp
or
imul
lahf
int3
jb
adc
mov
insl
and
jle
rclb
lea
ds
jge
jb
pop
push
stc
sub
lods
add
imul
sub
cmp
cltd
dec
sbb
mov
jmp
icebp
scas
dec
ja
dec
and
push
xchg
inc
adc
adc
hlt
loopne
mov
jo
lods
pop
or
xchg
cmp
pop
loopne
orl
dec
dec
push
push
jb
lods
cmp
pop
push
loope
cmp
add
into
adc
pop
shlb
cmp
push
mov
dec
sbb
push
jnp
iret
lcall
pop
xchg
inc
add
cli
fdivrs
popf
adc
movsl
ljmp
addr16
inc
movsb
ret
stos
outsb
dec
shrl
test
loope
add
jl
popa
sub
rep
add
sbb
jbe
arpl
das
lret
imul
pop
add
pop
add
sarb
jecxz
les
lcall
popa
cmp
inc
dec
sub
add
xchg
std
sub
dec
and
cld
xchg
shlb
test
out
xchg
mov
mov
mov
mov
je
je
rcrl
mov
xor
mov
nop
daa
lahf
adc
cmpl
popa
cmp
push
inc
or
notb
int
mov
out
cli
fistl
pop
xorb
fnstcw
adc
and
mov
add
or
flds
lea
pop
in
test
insb
gs
imul
jecxz
js
ret
mov
sub
xchg
pop
std
jcxz
cmc
inc
jecxz
pop
bound
push
fldl
in
das
lea
xchg
sbb
test
les
pop
loope
enter
mov
mov
fldenv
shll
adc
les
out
xchg
aaa
mov
jmp
sub
scas
std
cmpsb
dec
sbb
notl
aas
jge
aaa
in
dec
push
loopne
andb
in
sbb
mov
gs
jl
pop
pop
xchg
test
out
enter
and
ss
jo
push
mov
addb
outsb
cmp
add
insl
adc
inc
and
in
cs
popa
jb
stc
call
xor
fbld
in
leave
mov
cmp
xor
jae
sbb
clc
push
jne
adc
pop
into
or
ss
xor
sbb
fwait
xlat
push
ret
xchg
mov
lds
sahf
repz
test
pop
fcomi
fs
les
test
iret
inc
adc
cmp
mov
ljmp
gs
jle
iret
js
sbb
mov
mov
jns
stos
loopne
xor
jmp
xor
ffreep
xchg
mov
ja
adc
mov
in
sbb
inc
enter
pop
or
or
xchg
push
mov
cmpsb
sbbl
mov
lock
cli
inc
push
je
mov
cwtl
xchg
int3
xor
jno
enter
mov
cs
dec
mov
mov
ret
repnz
ja
sar
in
lret
lock
or
or
and
sahf
inc
cwtl
pop
in
imul
mov
cmp
in
jo
xor
jecxz
pop
daa
addr16
and
jns
pop
pop
inc
mov
mov
shlb
add
ss
lds
add
mov
cmp
and
push
xchg
mulb
sub
popa
aaa
push
fisttpll
scas
lret
add
mov
mov
fiadds
push
lds
sub
test
imul
imul
addr16
push
dec
iret
mov
sbb
adc
fwait
negl
mov
dec
jmp
xchg
dec
xor
aad
add
in
jp
popf
add
dec
sbb
pushf
stc
outsl
fmul
shr
popl
cs
faddl
inc
or
xchg
pop
mov
fs
sbb
lea
das
push
cvtdq2ps
popf
and
das
out
sub
dec
lock
push
std
out
icebp
adc
push
in
mov
push
ret
cmpsl
mov
adc
int3
add
mov
je
scas
test
cmpsb
enter
imul
sbb
mov
ss
mov
out
lcall
es
sbb
jge
jne
loopne
mov
push
sbb
xor
std
push
sub
je
inc
out
ret
adc
add
cli
arpl
lret
sub
sahf
and
adc
add
insb
loop
xor
in
incl
jmp
iret
shll
pop
adc
mov
iret
hlt
lcall
mov
test
movsb
mull
clc
and
jb
popa
notb
or
fldenv
mov
test
aas
out
daa
sub
xchg
in
pop
cwtl
mov
cmp
jno
push
lods
add
xor
mov
jns
mov
in
push
bnd
pop
das
jno
xchg
mov
mov
xor
fpatan
jle
testl
bnd
ja
adc
xrelease
push
add
adc
loop
jmp
arpl
mov
outsb
out
out
mov
aam
sbb
testb
cmp
clc
and
outsb
push
pop
das
jno
mov
cli
scas
push
popf
ds
dec
movsl
inc
sbb
add
inc
xor
imul
shrl
jmp
jecxz
dec
icebp
scas
shll
push
jmp
lret
outsl
pusha
loope
fwait
inc
push
pop
jnp
xor
and
inc
mov
jge
mov
lods
mov
dec
fwait
xor
jne
pop
adc
push
pop
xchg
push
pop
mov
subb
push
push
or
pop
sub
dec
outsb
fs
push
sti
or
mov
sbb
add
arpl
scas
jl
notl
xor
lcall
das
fimull
into
fmull
pop
addl
mov
pop
add
sub
dec
push
sub
test
mov
sub
pop
pop
xchg
shlb
inc
push
mov
int
add
lods
pop
lret
mov
js
stos
and
lods
add
mov
or
inc
jno
pop
push
or
nop
mov
mov
sub
jb
dec
repz
out
inc
mov
inc
popf
pop
add
pmuludq
int3
sub
or
mov
pop
jl
inc
sbb
cmpsl
call
outsb
push
pop
test
add
xchg
dec
mov
fimuls
pop
sub
xchg
mov
fsts
mov
imul
je
dec
shrl
cwtl
or
imul
inc
pop
adc
mov
test
pusha
push
loop
inc
dec
mov
add
hlt
in
dec
jmp
push
fsubrl
addr16
cmpsl
shl
ss
adc
loopne
popa
adc
ja
adc
cmp
lret
decl
mov
mov
sbb
loop
movsb
cmp
inc
xchg
cld
or
jae
mov
es
xor
call
aas
sbb
adc
stos
xor
push
out
int3
rcll
mov
lock
and
inc
or
and
jb
fcmovnu
bound
loope
xchg
insb
insb
repnz
lret
daa
mov
pop
add
adcl
outsb
cli
mov
insl
out
jne
mov
xlat
and
xor
fidivrl
mov
decl
scas
cltd
sub
neg
fsubl
xlat
call
divl
xchg
push
xor
je
jmp
pushf
pop
mov
fnstsw
adc
sti
xchg
sub
inc
add
cmpsb
or
lds
add
mov
into
cmpsl
cmpsb
fs
xchg
mov
loope
jns
jae
clc
out
mov
mov
das
inc
inc
jb
into
lcall
loop
roll
pop
inc
push
xchg
or
lea
lods
dec
xchg
sub
add
inc
repnz
negl
gs
mov
mov
loop
mov
mov
lahf
sbb
mov
mov
nop
jo
adc
jmp
imul
cmp
dec
lret
ja
dec
cmp
std
jbe
sub
int3
dec
movsb
cltd
xor
push
pop
fwait
xor
jg
pop
rcll
push
daa
add
add
ss
mov
jg
test
ljmp
int3
ficomps
pop
popf
mov
inc
cs
xchg
sbb
sar
xorl
sbb
std
jle
mov
xchg
add
fidivrl
das
mov
outsl
sbb
jbe
sub
test
jne
sub
adc
cwtl
adc
mov
popf
inc
stos
mov
xor
pop
add
xchg
mov
fnstenv
pop
mov
jle
sbb
sahf
les
xchg
insl
push
popf
inc
in
dec
fcmovu
movsl
xlat
fs
mov
cmc
mov
mov
mov
dec
push
std
aam
cmpsb
jb
cltd
jno,pt
fnstsw
jle
xor
loopne
xchg
xchg
pusha
rcrl
push
sbb
sbb
or
mov
lock
movb
inc
int3
mov
ds
jnp
repz
daa
push
dec
sub
inc
stos
movsl
lret
orb
sbb
imul
pop
inc
inc
out
mov
inc
in
lods
sahf
and
mov
add
xor
ss
mov
pop
push
push
mov
mov
jp
sbbb
push
out
fcomps
arpl
and
jnp
les
jbe
or
outsb
mov
lods
arpl
sub
xchg
add
jp
mov
mov
sbb
sub
mov
adc
fsubr
dec
mov
mov
mov
ret
les
dec
mov
stos
mov
jb
dec
inc
sbb
movsb
xor
xchg
jb
lods
jne
and
jb
push
call
popf
pop
xor
shl
repnz
lcall
inc
iret
js
mov
push
pop
ja
cli
lret
and
pop
ret
mov
pop
xlat
dec
cwtl
mov
pop
stc
imul
push
cmp
ss
rcrb
add
inc
pandn
dec
xorl
daa
les
cld
pushf
push
xchg
inc
in
insb
dec
and
dec
cmpsl
dec
int
imul
mov
sti
add
dec
test
lcall
cmp
sar
cmp
je
imul
cld
xchg
stc
iret
sub
clc
xor
push
inc
and
popl
repz
mov
xor
add
sbb
inc
popa
mov
adc
fwait
ja
pop
jae
gs
aaa
into
sahf
movhps
push
dec
dec
jle
fs
xor
ss
sbb
cltd
push
jmp
rorl
mov
pop
inc
testl
cmp
push
bound
sub
inc
or
jp
out
hlt
stos
insb
das
mov
xor
movb
jne
sbb
jecxz
xor
xchg
push
and
push
inc
jmp
fcmovnb
add
repnz
aad
fwait
imul
subl
adc
adc
mov
lcall
xor
jbe
imul
scas
in
xor
or
push
xorb
aas
sti
adc
inc
add
mov
xchg
sub
stos
pop
push
in
add
fs
mov
and
inc
out
add
jmp
fldln2
das
dec
adc
ret
jns
int
xor
sbb
ret
aam
pop
orb
xor
jmp
and
cld
je
xchg
mov
scas
cltd
jo
inc
add
dec
loop
sub
push
mov
xchg
push
aas
les
push
xchg
cmp
cmp
insl
xchg
gs
ret
popa
aas
pop
add
out
stos
std
je
mov
je,pn
sbb
xor
cmc
addb
lods
adc
add
test
xchg
lds
jmp
sbb
in
arpl
jns
cmpsb
imul
push
outsl
std
lds
cli
lahf
sub
fstp
aas
push
lahf
xchg
cmp
lret
aas
movaps
fcmovu
les
and
test
add
lcall
ffree
mov
aaa
cmc
push
gs
sbb
mov
mov
adc
sub
jmp
jbe
testb
push
imul
and
mov
pop
adc
mov
mov
push
cmp
xchg
loop
push
in
leave
sbb
faddp
add
dec
fildl
scas
jns
loope
imul
es
fidivs
iret
das
loop
sti
sti
sbb
or
jmp
mov
mov
loop
popf
xor
scas
in
adc
cltd
std
outsb
xor
push
ret
popa
lea
ficoml
pop
test
jmp
clc
leave
mov
inc
xlat
sbb
addr16
iret
xchg
lods
stc
fwait
inc
push
fstl
insl
adc
xchg
std
and
xchg
loop
daa
outsb
jns
mov
arpl
jp
dec
in
movsb
sub
push
and
mov
stos
inc
jae
in
mov
test
mov
aam
sar
and
mov
fcomp
add
dec
dec
loop
xor
icebp
popa
adc
dec
push
xor
sbb
sub
mov
enter
push
xor
sbb
ds
jae
cli
xor
imul
sub
xchg
loope
mov
in
adc
xchg
fs
shl
loop
mov
adc
push
test
pop
nop
notb
xchg
ret
and
add
sub
into
push
fistpl
int
int3
aas
inc
aaa
push
loop
xchg
pusha
daa
bound
fwait
inc
push
cltd
jmp
mov
push
push
push
adc
fnsave
sti
lret
fdivl
push
push
xchg
and
xchg
jge
push
or
or
push
movsl
and
call
sub
push
cwtl
aam
mov
mov
das
insb
fisubs
test
insb
jne
mov
xchg
ret
cmp
push
push
sub
mov
mov
cmp
pop
push
and
mov
repnz
fnsave
scas
xor
cmc
xorb
je
fsubrs
popf
or
scas
cs
xchg
sub
ljmp
xor
loopne
inc
cs
adc
adc
xor
adc
iret
push
sub
sarb
or
pusha
mov
sub
call
pop
or
and
and
mov
sbb
xor
pop
scas
inc
xchg
lret
sbb
movsl
cmp
movsb
ret
imul
xchg
scas
mov
andb
mov
sub
jbe
bnd
mov
mov
add
daa
jl
and
jle
pop
stos
repz
dec
repz
cltd
fsubrp
mov
lock
test
mov
mov
push
sub
lds
sub
jle
daa
cwtl
jae
lret
push
pop
adc
xor
pop
cmp
stos
jge
xor
nop
imul
adc
dec
xlat
xchg
dec
pop
inc
fstps
mov
dec
aam
sbb
jl
test
jnp
cmp
lods
dec
jecxz
jae
push
or
lahf
outsw
xchg
repnz
inc
fisttpll
jle
jno,pt
stc
sti
mov
mov
aad
add
xlat
cmpsb
popf
or
mov
sbb
and
call
fcmovu
outsb
mov
jae
adc
push
je
shrb
hlt
cltd
out
mov
sbb
dec
cmp
or
shlb
push
and
je
jns
dec
int
movsb
out
jmp
cmpxchg
bound
imul
into
lahf
insb
fsubrl
dec
xor
test
cwtl
mov
sbb
add
bound
mov
subb
adc
add
repnz
or
push
or
xor
sub
xchg
add
jle
jbe
mov
push
sahf
hlt
mov
fisubrs
scas
lock
addr16
pcmpgtw
cmpsl
sub
xchg
outsl
insl
xchg
pushl
or
push
inc
add
fsubrl
adc
lret
adc
sub
dec
sbb
or
jmp
sub
xchg
dec
popf
xor
cmp
pop
inc
fstp
xchg
inc
sub
lahf
lret
addr16
pop
je
xchg
lahf
int
cmp
shrb
xlat
jnp
pushf
inc
pop
or
hlt
inc
xchg
fidivl
clc
kmovb
push
xchg
clc
adc
mov
or
jns
and
fbld
pushl
rclb
pop
repnz
push
pop
xchg
jbe
test
cmp
xor
clc
ljmp
dec
push
je
into
xor
cmp
daa
mov
xor
out
insb
aad
sub
and
add
lds
push
push
push
mov
add
cld
das
inc
shl
out
add
add
in
clc
enter
mov
mov
mov
outsl
or
out
insb
dec
out
bnd
test
sub
add
adc
shlb
push
insl
sub
jno
addb
cmpsl
sbb
mov
dec
or
pop
or
jg
imul
pop
lock
scas
es
push
inc
add
test
repnz
dec
add
and
loope
jp
xlat
sarb
call
ja
in
cmpsb
fistps
push
sahf
dec
jp
cmp
mov
add
sbb
jnp
inc
out
out
push
mov
or
stos
fnsave
ss
mov
mov
add
cs
jmp
sarl
pop
std
pop
push
jmp
xchg
inc
test
pop
xchg
aad
xor
subl
in
int
sbb
fdiv
mov
xchg
jnp
sbbb
dec
test
mov
lock
add
xor
and
or
jp
int
mov
pop
out
hlt
hlt
jno
dec
sbb
out
pusha
adcl
xchg
and
sub
cmova
cld
add
bound
and
ret
mov
and
inc
lret
mov
sub
jno
out
pop
jo
out
pushf
iret
fmull
or
cmp
or
lock
cmc
flds
mov
cmc
pop
clc
or
scas
pop
xchg
faddl
test
inc
lret
mov
fcomp
jns
int3
les
jp
xor
inc
lods
xor
dec
cmc
neg
push
xor
push
jg
adc
test
cmp
test
sub
movb
repz
cmp
std
jnp
sbb
or
jns
in
out
cmp
lods
leave
cmpsb
or
xchg
pusha
cwtl
aam
push
and
adc
push
test
mov
ret
cs
insl
mov
mov
push
nop
pop
shrl
dec
push
insb
pop
js
push
jae
dec
cmpsl
mov
inc
aad
rcrl
clc
xchg
cmp
rcrl
ja
scas
mov
cmpsb
mov
ja
dec
rcrb
stos
aaa
cli
lret
fwait
pushf
int
push
cli
mov
xor
test
sbb
xor
test
pop
outsb
rcll
invd
icebp
pop
mov
sub
imul
subl
push
lds
cmp
popa
inc
hlt
ficoml
cwtl
movsl
call
dec
sbb
scas
aam
cmp
jg
int
jb
imul
and
loop
sbb
jb
add
jb
movsb
dec
xchg
or
jp
stos
jnp
icebp
mov
cmp
decb
lods
mov
out
gs
adc
inc
das
add
out
mov
jl
das
jle
and
inc
adc
addr16
or
push
clc
nop
sub
push
icebp
cmpsl
sbb
ss
push
cmp
jno
and
stc
movsl
test
jle
cmp
dec
add
xchg
int3
dec
aam
mov
sub
faddl
sub
and
jge
inc
push
daa
add
push
daa
je
inc
cmp
out
push
jo
cmp
push
adc
je
adc
rorl
dec
fistpl
fdivl
push
ja
push
sbb
bound
pusha
notb
outsb
or
fidivl
adcl
push
gs
xchg
sub
pop
mov
cs
mov
mov
mov
test
mov
add
cmc
shll
mov
sbb
lods
or
lods
sbb
dec
inc
sub
xor
loopne,pt
xchg
int3
neg
cmpsb
aaa
mov
loope
adc
mov
cmp
adc
fistpl
inc
jae
jl
xor
test
subb
and
xlat
and
xchg
mov
adc
outsl
adc
mov
sub
cmp
cmp
jno
jno
lahf
mov
roll
push
push
mov
jge
sub
dec
add
in
enter
mov
inc
rclb
dec
push
int3
mov
divl
mov
xor
movsl
repnz
pushf
stc
cmpsl
sub
and
inc
int
icebp
out
or
dec
pusha
mov
mov
push
das
stos
pushf
aas
ret
mov
jno
rcr
shll
lds
pop
push
and
pop
cld
adc
pop
sti
das
xchg
xchg
lds
add
cmp
jge
fmul
add
add
dec
mov
add
stc
lahf
and
inc
adc
sbb
adc
or
out
in
sub
cwtl
nop
cmp
outsb
lahf
fdivs
sub
popf
add
and
or
and
mov
pop
sub
call
aad
adc
inc
adc
ja
lahf
aam
xchg
dec
outsl
loope
lret
int
cs
push
and
xchg
adcl
ss
cmp
cli
hlt
jb
adc
mov
add
inc
arpl
lock
imul
sub
push
div
xor
nop
mov
adc
stc
sbb
je
adc
loopne
fidivl
es
pusha
inc
add
xchg
mov
xor
ja
in
xchg
push
add
adc
mov
lahf
iret
jb
jbe
mov
outsl
mov
add
xor
outsb
loopne
push
stos
hlt
push
repz
gs
fldenv
adc
scas
mov
lret
fwait
pop
fs
adc
cs
faddl
aam
shlb
sbb
pop
movsl
mov
ljmp
push
les
ret
scas
or
mov
sbb
xchg
and
cmc
jb
mov
xchg
push
sbb
loopne
fcmovu
push
jo
push
adc
cmpsl
inc
pop
test
xor
imul
cmp
add
xchg
daa
pushf
loop
fisttpll
addr16
sahf
lea
inc
or
repz
mov
push
or
xor
sahf
sub
repnz
fwait
pop
mov
das
xchg
pop
dec
mov
pop
dec
cmp
jo
orb
repnz
xchg
mov
push
jns
insl
test
cld
popa
and
incb
xlat
hlt
dec
xor
xchg
dec
xor
int
dec
xor
sbb
orb
xor
cwtl
iret
fwait
js
int3
addr16
mov
stc
mov
loopne
sub
cmp
cmpsb
adcl
pop
cmc
hlt
test
test
sbb
cmpsb
mov
out
loopne
data16
mov
pushf
test
mov
js
inc
test
sub
aam
in
or
mov
ficoml
test
mov
mov
std
jmp
es
fcmovnu
push
sub
and
inc
imul
mov
rcrb
cmpl
fisttpll
stos
test
lret
xchg
sub
xor
nop
jmp
lcall
inc
ss
insl
das
shrl
fdivr
inc
nop
mov
push
int
cmp
sbbb
leave
mov
adc
jns
ja
cmp
jnp
jnp
and
in
push
pusha
mov
repz
cmp
jo
loop
rcll
inc
cmp
nop
lret
adc
scas
xchg
fdivl
lock
mov
repz
cmp
call
jg
je
mov
push
push
mov
sub
pop
cwtl
jmp
iret
shl
push
ss
fmuls
lcall
mov
cli
ja
pop
push
int
pop
add
jbe
adc
cmp
gs
jne
and
jmp
adc
xchg
je
jge
mov
jge
cmpsb
fisubrs
das
mov
mov
aas
mov
pop
push
int3
inc
dec
mov
fnstenv
popa
or
outsb
shrb
lods
or
jg
sbb
xchg
sbb
in
addr16
push
mov
ficoml
test
xchg
ret
stc
fistpll
mull
out
mov
insl
fwait
push
dec
push
sub
fisttpll
lret
icebp
shl
mov
out
outsb
dec
add
mull
inc
scas
div
sbb
out
dec
popa
movsl
sbb
dec
cmp
push
inc
xchg
jecxz
and
imul
and
xchg
and
rcrb
ret
mov
fidivrs
dec
aam
insl
cmpsl
sub
dec
loopne
or
xor
push
sahf
push
push
push
push
arpl
sbb
sti
ja
push
ss
cmp
fidivrs
and
jo
ljmp
into
xor
xor
adcb
pop
mov
mov
sbb
xor
imul
into
mov
xorb
aad
mov
ret
in
lds
add
and
test
bound
or
push
repnz
xchg
jbe
mov
loope
push
stc
jl
inc
pop
clc
jecxz
xor
jg
or
xorb
int
sarl
ret
jl
cmp
sub
inc
in
shll
popa
cltd
inc
stc
sub
fcmove
mov
push
mov
xchg
and
lods
push
or
mov
mov
popf
xchg
xlat
pop
sbb
cltd
xor
pop
aaa
jmp
ja
lods
cld
jmp
mov
mov
mov
inc
dec
xchg
push
lret
and
mov
fwait
pushf
sti
add
sub
cmp
jo
push
cltd
jno
mov
ret
mov
add
lods
divb
jns
rorl
fcmovnbe
leave
out
mov
pushf
xor
dec
fwait
dec
in
pop
ret
aaa
sub
jb
inc
xor
pop
pop
cli
cmpsb
aaa
mov
xchg
dec
inc
out
mov
and
mov
mov
pop
nop
add
je
mov
mov
or
push
or
test
xor
scas
test
cmp
and
jge
int3
mov
ss
add
adc
pusha
pop
adc
icebp
ds
imul
xlat
cmp
inc
push
push
jns
inc
pop
push
mov
icebp
jmp
fs
xor
and
fdivp
bound
jp
mov
push
js
data16
nop
les
xchg
sbb
shll
mov
push
pop
cmp
pop
add
imul
mov
jnp
xchg
lret
out
add
repnz
cld
ret
dec
lock
jl
or
dec
fcomip
mov
cmpsl
cmc
jb
adcl
mov
mov
mov
imul
lds
test
ja
mov
out
sahf
loop
push
pop
xchg
shrb
cmpl
mov
jl
sar
rol
adc
or
outsb
xchg
mov
les
xchg
movsb
imul
cmp
xorl
sub
jl
cwtl
mov
cmp
sub
lahf
movsb
inc
sub
cmc
pop
enter
pusha
jns
imul
sbb
mov
and
mov
mov
dec
cmp
mov
jb
fs
pushf
fisttpl
scas
ljmp
mov
imul
dec
add
sti
add
in
mov
and
sbb
pop
cs
leave
add
inc
repz
psadbw
dec
ljmp
call
clc
jecxz
push
ljmp
xor
xor
xor
test
push
lods
test
cld
push
sub
cltd
push
mov
inc
faddl
inc
lods
ret
dec
in
jae
jo
push
push
sub
jbe
sbb
sub
add
ficomps
testl
lds
scas
sub
shrb
cmp
lcall
movsb
xor
std
cmpsb
ret
in
cmp
loop
pop
inc
sbb
xchg
shrb
dec
add
dec
adc
addr16
bound
test
cwtl
xor
movsb
pcmpgtb
sbb
jle
and
add
adc
cmp
cmp
stos
adc
div
xor
fwait
scas
xchg
scas
nop
shll
push
push
stos
data16
push
lods
jle
es
outsb
sti
jo
outsb
adc
fdiv
mov
data16
and
or
jb
inc
les
cltd
outsl
and
out
pop
lret
loop
icebp
mov
and
scas
mov
lret
sbb
call
daa
cli
repz
dec
mov
xchg
les
and
adc
sti
sbb
jno
pop
xchg
loopne
mov
pcmpeqd
mov
movb
jne
das
jo
or
jno
out
jl
jecxz
pop
xchg
lahf
mov
mov
jmp
xchg
in
cltd
push
btsl
int
imul
xchg
data16
add
pusha
sarb
in
push
lcall
les
fmuls
xor
xchg
inc
push
mov
lahf
jno
mov
or
push
fcoms
js
push
js
jmp
mov
and
pusha
sub
stos
jb
orl
xor
lcall
imul
sbb
pop
mov
push
les
adcl
mov
xchg
jmp
ret
adc
pop
js
loop
movsl
dec
icebp
adc
cmp
add
add
add
sub
aad
pop
xchg
pop
add
fbstp
inc
inc
inc
repz
gs
xchg
fisubrl
xor
enter
cltd
dec
jnp
add
repnz
daa
push
jnp
or
popa
add
out
adc
leave
or
sbb
aad
outsb
stc
jmp
addr16
xchg
in
add
movsb
mov
mov
sbb
lods
jge
mov
mov
push
das
div
add
xchg
lcall
push
roll
jnp
jns
push
push
mov
cmp
dec
insb
cmp
xchg
sub
add
pop
lcall
cmpsb
in
pop
jo
lahf
xlat
push
sub
jp
adc
push
movsb
icebp
add
aaa
sub
mov
sbb
insl
inc
hlt
mov
push
xor
negl
outsb
mov
ret
mov
dec
hlt
adc
xchg
and
add
jmp
imul
lret
das
rcll
lods
mov
fcmove
movsb
add
and
lcall
ret
lahf
cmp
adc
push
das
insl
popa
mov
outsb
imul
roll
cmp
lcall
and
push
dec
sub
xor
push
out
or
sbb
jne
lcall
movsb
or
xor
sar
sub
icebp
aas
and
fistl
in
out
lret
jns
inc
sbb
aaa
or
outsl
stos
cmp
mov
push
fadds
dec
mov
jno
inc
add
add
outsl
popf
or
fadd
in
mov
fsts
sub
sub
add
cmpsl
ds
fsubrl
test
xchg
lret
call
push
add
lret
fsts
lret
das
or
cli
cmp
pop
xchg
lret
cs
popa
andl
int
aam
daa
out
shrl
adc
dec
sbb
ja
mov
xchg
cmc
push
xchg
mov
popa
scas
and
dec
andb
and
dec
in
repnz
jnp
das
push
ficoms
dec
mov
xchg
xlat
outsb
xor
adcw
loop
out
fistl
dec
or
loop
jge
add
outsb
pop
addl
pop
sbb
popf
mov
inc
mov
inc
pop
mov
dec
bound
pop
and
sbb
outsl
dec
inc
fwait
mov
ret
shll
ljmp
adc
shr
fwait
dec
fistl
arpl
lods
xchg
lods
fnstenv
fstps
sbb
mov
mov
mov
ror
sub
adcb
out
subb
add
dec
mov
stos
arpl
fbld
dec
and
ljmp
mov
lock
sub
inc
mov
mov
psrld
mov
insb
sub
pop
or
push
add
pop
das
adc
push
or
jmp
fnstsw
adc
pop
xchg
es
outsb
mov
push
dec
test
stc
push
inc
xchg
mov
pop
lods
icebp
fwait
ss
xor
ljmp
faddl
movsl
clc
ds
call
out
pusha
in
add
pushf
or
cmpsl
std
dec
xchg
sbb
rol
fmulp
fstpl
nop
inc
lods
mov
adc
adc
mov
rcr
cli
je
pop
push
addl
add
es
hlt
fildl
lea
arpl
sbb
fnsave
and
and
cwtl
ja
xor
roll
xor
and
pusha
test
mov
ret
sbb
xlat
lock
add
in
mov
xor
inc
adc
fsubl
inc
push
outsb
and
mov
mov
inc
int
fcompl
aad
imul
jnp
mov
leave
push
insl
jmp
jmp
repnz
outsl
rorb
jae
es
inc
cmp
and
mov
cmc
cmp
fistpl
rol
lea
xchg
jne
into
loopne
mov
adc
in
mov
insl
aam
mov
enter
enter
icebp
mov
enter
cmc
push
add
sub
ret
lock
pushf
cmpsl
jne
dec
imul
and
mov
sbb
cmp
add
mov
mov
sti
jge
into
push
add
cmp
sti
sbb
ljmp
inc
in
pop
mov
repnz
jno
pop
jl
ret
mov
inc
imul
lods
jbe
jb
in
xor
fs
fisubl
into
mov
xor
and
xchg
dec
cmp
add
dec
xchg
pusha
repnz
pop
add
in
sahf
mov
push
mov
hlt
in
push
into
sbb
push
das
insb
xchg
mov
xchg
bound
mov
jb
mov
das
movsb
pop
popa
hlt
inc
jmp
loop
jo
or
cmp
and
or
out
pop
cmc
outsb
mov
out
ds
mov
dec
repz
in
push
cltd
lods
mov
call
push
fwait
pop
mov
mov
adc
mov
push
mov
add
lret
jge
xor
or
adc
dec
jbe
push
jo
jp
test
xor
mov
sti
hlt
sub
mov
pop
loopne
jl
cld
sbb
sahf
and
inc
sbb
jecxz
ficoms
in
imulb
ds
sub
gs
into
mov
subb
push
in
or
mov
inc
popf
aam
xor
mov
std
sbb
jbe
mov
divl
or
dec
int3
filds
loope
xchg
dec
jmp
out
pop
icebp
fsts
pop
bound
mov
sbb
fstl
imul
pop
xchg
jecxz
adc
sbb
jmp
pop
roll
insb
xchg
mov
outsb
mov
xchg
aaa
fs
jno
xchg
and
js
xor
push
ja
mov
popa
sub
ss
push
sbb
mov
xlat
push
lock
stos
sub
je
xor
mov
jb
fldt
jl
sub
jo
jmp
icebp
pop
out
xchg
test
ja
xor
xor
insl
xchg
xchg
adc
addr16
cli
sbb
jle
add
jne
shrl
dec
daa
pop
mov
and
xchg
xchg
imul
inc
js
bound
out
movb
push
mov
xchg
fs
subl
mov
pop
xchg
lods
fnsave
or
shll
stos
fadds
outsb
inc
leave
mov
ficoms
cmc
or
xchg
into
sub
inc
mov
call
cmp
jg
shl
and
daa
js
dec
gs
mov
lds
js
test
cmp
jae
insl
out
xor
dec
sub
int
flds
dec
adc
fldenv
stos
mov
outsl
xchg
bound
cmpsl
push
cli
lret
fistps
pop
dec
adcb
and
add
sbb
fildll
jl
cld
cmp
mov
negb
jecxz
inc
cs
pusha
addb
ja
add
push
or
test
xchg
xchg
push
lret
lcall
lahf
pop
pop
adc
lahf
adc
popa
jb
inc
sub
jmp
xor
mov
adc
jle
mov
xchg
or
int3
leave
dec
stos
in
mov
jge
push
xor
int
cli
adc
test
out
mov
stos
jp
xchg
or
clc
aam
mov
insl
jb
pop
scas
mov
inc
push
pop
push
movsl
jmp
ss
fisubrl
dec
add
sub
mov
sarl
pop
jae
mov
mov
push
into
loope
push
sbb
adc
mov
pop
xchg
jmp
cmp
cmp
testl
sarb
sbb
imul
in
xchg
jg
out
pop
sub
imul
push
movsl
cmp
inc
add
test
inc
cmp
test
xor
leave
lahf
dec
fisubrs
in
cmp
add
sub
sbb
imull
dec
je
je
push
pop
stos
mov
pop
clc
lcall
mov
and
jp
es
cmpsl
push
add
rcll
sbb
or
mov
cld
mov
pop
pop
lea
cmp
das
push
call
ja
cld
bnd
cmp
adc
adc
in
jg
pop
loop
cli
outsb
andb
mov
mov
dec
xchg
push
pop
test
aad
and
std
imul
test
les
xor
mov
add
adc
shr
mov
pop
sub
xchg
mov
andl
jle
pop
xor
test
es
loopnew
mov
sub
in
mov
jae
cmp
jmp
lea
adcb
arpl
scas
ficomps
leave
push
ja
mov
adc
int3
pop
mov
rorl
jecxz
data16
add
daa
les
fbstp
pop
fnstsw
inc
daa
push
andl
mov
lret
add
es
std
cmpsl
mov
dec
les
dec
hlt
leave
rcll
sbb
leave
push
add
iret
insl
in
xor
add
xor
inc
and
movsb
pop
xor
sub
repz
inc
mov
mov
pop
mov
mov
and
mov
rcrl
mov
and
sbb
std
sbb
inc
insl
push
sub
cmp
inc
ljmp
cmpsb
push
rcrb
in
xor
xchg
xor
imul
stos
pop
pop
and
and
cltd
subb
jg
aam
or
mov
mov
and
jl
and
ds
popa
addr16
sub
push
or
dec
mov
mov
xchg
sahf
push
jecxz
and
pop
lock
mov
dec
and
jle
movsb
sub
aam
cmp
ljmp
lock
rcrl
pop
arpl
iret
clc
add
daa
mov
pop
mov
sarl
into
cmc
sahf
mov
jo
pop
push
js
mov
dec
shll
xor
jecxz
push
mov
popf
jbe
sub
into
jge
data16
testl
push
mov
jl
jl
imul
sub
mov
xor
add
jle
cmp
loop
nop
negb
and
out
sbb
inc
push
mov
pushf
lds
or
pop
sbb
subl
test
inc
cmp
push
add
bound
imul
iret
test
out
out
pop
jno
pop
mov
push
sarb
pop
out
out
imul
out
cwtl
lcall
pop
repz
sub
cli
cmpsb
pop
cltd
fwait
xor
or
scas
or
int
aaa
mov
mov
inc
shlb
popf
jmp
xchg
cmc
leave
in
test
add
pop
insl
fidivs
jbe
lock
pop
add
push
mov
xchg
inc
pop
mov
aas
add
lods
imul
sub
sub
fsubrs
jge
pop
adc
mov
aaa
or
in
shrb
inc
shr
inc
pushl
cmp
mov
cs
fisubl
mov
pushf
mov
pop
jge
add
cltd
mov
test
out
mull
dec
imul
mov
and
loope
adc
lods
enter
xor
mull
aam
and
mov
push
je
cmpsb
add
in
mov
or
or
push
xchg
sbb
fistl
iret
add
and
xlat
or
aam
sub
cmpsl
cld
xchg
push
movsb
inc
or
pop
cmp
add
inc
clc
ljmp
leave
mov
xchg
xor
aas
in
and
add
cmp
cmp
cmp
in
xchg
fisttpll
cmp
adc
sar
shlb
call
add
mov
jne
les
aam
mov
pop
sbb
pusha
mov
aas
out
out
sti
cld
in
mov
sub
mov
xchg
insb
ret
mov
lods
push
xchg
fs
jecxz
test
mull
pop
pop
sub
out
sbbl
daa
mov
xor
sbb
mov
mov
aad
cmp
shll
jne
fndisi(8087
cmp
in
shr
mov
pop
loopne
popf
sub
cltd
push
pop
push
sub
mull
pop
jmp
jno
cmp
push
or
gs
push
mov
or
pop
std
adc
jmp
adc
enter
shll
sbb
scas
xchg
mov
leave
in
pop
sbb
jns
xor
movsl
sbb
stos
inc
mov
lds
cmc
and
jl
lds
inc
fnstcw
test
sahf
mov
mov
mov
ja
leave
out
pop
ficoms
adc
inc
xchg
and
out
fisttpl
pop
or
push
add
aaa
add
and
xchg
fbld
pop
jmp
stc
jae
push
push
xor
or
std
icebp
push
mov
or
adc
add
sbb
incb
cmp
into
and
jp
jb
ss
fnsave
xor
ret
mov
out
xor
stos
in
jl
adc
icebp
test
mov
lret
xchg
jno
inc
jl,pt
hlt
jne
int
ja
push
mov
lcall
adc
and
mov
add
cmp
insb
das
add
scas
addr16
sbb
vpsrld
js
or
punpcklbw
sub
xlat
or
dec
mov
pop
dec
daa
je
xor
push
push
pushf
frstor
in
cmpsl
mull
arpl
dec
pusha
imul
fsub
jge
xorb
or
cmp
mov
dec
mov
cmp
std
lock
ljmp
add
sahf
fcompp
and
or
pop
test
xchg
insl
cs
mov
jno
mov
aam
mov
pop
scas
or
je
and
jecxz
popa
sbb
push
cld
test
mov
pop
push
int3
dec
loopne
inc
mov
popf
out
xchg
ljmp
push
push
mov
add
fidivs
nop
push
arpl
mov
push
int3
gs
inc
imul
loope
and
es
sub
cwtl
imul
hlt
push
cmpsb
loope
inc
repz
xor
sbb
ds
jns
xchg
leave
out
push
xor
ja
xchg
movsl
dec
pushf
jp
cmc
out
pop
xchg
adc
cmc
fs
ret
rol
cs
mov
popl
out
aas
mov
mov
pop
and
jo
xchg
cmp
push
test
xlat
bound
xchg
enter
stos
js
jge
adc
out
pusha
icebp
lds
imulb
fs
sub
sbb
hlt
adc
xor
inc
mov
stos
gs
sbb
cmp
or
aaa
sbb
cmp
sahf
pop
mov
dec
sub
jl
lret
popf
mov
push
cmp
je
shlb
out
and
xchg
insb
inc
mov
sbb
ds
into
jge
dec
sub
pop
stc
mov
inc
mov
lock
pop
imul
mov
mov
insl
mov
shrl
mov
jg
aad
loope
cmpsb
mov
cs
sub
fiaddl
xchg
sbb
adc
xchg
fildll
in
pop
jo
or
jb
mov
xchg
mov
sti
jle
scas
mov
push
dec
in
mov
jmp
adc
mov
cmp
inc
imul
or
out
sub
push
mov
sub
xchg
adc
xor
fwait
and
pop
cld
movsb
mov
cmpsb
test
js
testb
cltd
gs
add
push
hlt
daa
in
andl
sub
aam
cmpsb
pop
add
mov
fs
inc
mov
lods
imul
mov
jle
or
clc
out
stc
mov
inc
cs
pop
popa
mov
in
mov
jl
insb
cli
divl
jns
sub
enter
adc
dec
pop
lods
insb
cmp
je
lret
js
inc
push
out
xlat
jne
cmp
inc
clc
and
xchg
lret
daa
andnps
fs
jecxz
cmp
push
lea
pop
imul
lock
inc
dec
lods
mov
mov
sub
test
out
push
in
adc
ss
insb
jbe
cmp
std
inc
popa
xor
jecxz
add
lock
jge
insl
cmp
out
aam
mov
dec
lods
lahf
fxam
push
daa
or
mov
push
sbb
mov
fdivrp
aad
jo
adc
xor
mov
rolb
mov
pop
mov
mov
dec
daa
test
xchg
mov
add
jnp
xchg
dec
push
outsl
inc
insl
and
iret
add
movsl
pusha
jae
inc
lock
fistpll
jne
cmpsl
cmp
fs
stos
mov
push
xlat
insl
dec
cld
jo
add
fmull
cltd
call
sbb
dec
jmp
icebp
mov
fwait
pusha
mov
adc
mov
sub
mov
cwtl
inc
icebp
xor
enter
sahf
xlat
jecxz
cmp
xchg
mov
push
call
jmp
xor
scas
sub
pop
rdmsr
sbbl
pop
aaa
and
add
stc
repz
push
popf
lcall
popa
cmp
pop
hlt
ret
xor
sbbb
enter
hlt
mov
insl
aam
jl
mov
jo
mov
jns,pn
pop
jo
leave
cmpl
jmp
dec
xchg
xchg
gs
hlt
xchg
testb
push
leave
jnp
popf
sbb
bound
adc
aas
stos
scas
cwtl
shrb
jmp
loope
in
shll
mov
xor
xchg
test
cs
cmc
push
cli
jmp
int3
movb
xchg
aam
xchg
xor
mov
mov
and
pop
dec
jo
andb
ficoms
push
push
sub
ljmp
pop
imul
dec
xchg
adc
push
dec
push
dec
inc
pop
mov
push
arpl
orb
in
xchg
jl
stc
jle
and
jns
mov
fidivl
loopne
sbb
outsl
mov
xchg
push
scas
mov
dec
out
orb
inc
sbb
lahf
xchg
sub
mov
or
pop
pop
and
rclb
push
or
ss
enter
lahf
xlat
cmc
pop
add
clc
xchg
mov
cmc
and
adc
or
outsl
adc
lret
aam
and
popa
inc
arpl
add
stos
adc
cmc
loope
xor
rol
pop
sarl
adc
mov
sub
dec
xor
cmp
sub
icebp
enter
sahf
lods
in
jl
xor
push
inc
int
or
cmp
sahf
cmp
hlt
lods
sbb
cwtl
sbb
jnp
jae
push
sbb
lods
push
push
sahf
das
fstpl
fdivrl
fidivl
shrl
or
aam
adc
mov
jmp
rcrb
ja
sub
mov
test
js
lcall
or
adc
rol
daa
mull
lret
inc
in
aam
xor
xchg
dec
adc
imul
inc
and
rorl
mov
cmp
push
cmpsb
fidivs
aaa
popf
xor
dec
fdivrp
inc
adc
xchg
ja
enter
mov
jle
les
mov
in
mov
jmp
in
inc
ret
adc
into
cltd
jbe
cmp
mov
pushf
inc
popa
inc
push
push
cmp
push
and
imul
pop
nop
add
push
sbb
fcoms
dec
inc
sbb
loope
sub
test
ret
sti
cltd
call
fisttpll
xchg
les
xor
pusha
ficoml
pushf
stos
ror
nop
xorps
adc
ds
loop
nop
aad
test
aam
pop
add
outsl
lcall
ljmp
cmp
or
scas
sti
xchg
call
loopne
sub
mov
mov
data16
jg
mov
mov
mov
int
or
out
jl
or
rcll
movsl
outsb
int
cmp
mov
dec
icebp
aam
out
mov
lods
jns
sub
notl
cmp
dec
jl
imul
dec
sbb
insl
inc
jo
mov
mov
jnp
and
addb
pop
inc
or
or
fndisi(8087
mov
mov
out
add
or
xor
data16
popa
ret
leave
pop
inc
xchg
shl
ds
lcall
fisttpll
push
inc
jns
push
dec
xor
stos
or
sub
mov
arpl
imul
ds
loope
mov
stc
pop
mov
addb
cld
pop
inc
mov
inc
scas
into
mov
jno
lcall
add
or
js
sub
lock
mov
push
ret
adc
mov
lock
call
jns
stc
pop
test
adc
mov
dec
cmc
push
push
das
pop
les
sbb
jge
cwtl
pop
lods
iret
xor
add
lcall
stos
xor
mov
sub
std
adc
test
repz
xor
inc
sub
push
shl
cwtl
push
inc
jo
int3
stos
mov
sbbb
call
and
pusha
fistl
push
push
and
outsb
fldcw
xchg
je
jb
mov
lret
add
shll
in
pop
sub
arpl
aas
push
xchg
mov
pop
aam
pusha
add
xchg
sbb
ret
jno
daa
mov
push
and
pop
mov
and
push
or
insb
cmpsb
data16
loop
xchg
push
fcmovnbe
test
pushf
dec
mov
adc
mov
push
xchg
push
push
mov
out
shr
adc
mov
dec
fsts
mov
push
stos
outsb
hlt
cmp
mov
xchg
dec
vpmacssdql
jnp
sub
dec
loope
or
imul
test
add
inc
xchg
stos
inc
fs
mov
pop
mov
movsb
jmp
je
jo
mov
mov
loop
xchg
xor
bound
cmp
push
pop
mov
cltd
jmp
outsb
into
rcr
ss
pop
lods
mov
std
dec
pop
push
inc
nop
out
popa
pop
nop
mov
xchg
fisubl
in
jo
cmpl
dec
xchg
fldz
add
mov
sbb
pop
imul
cltd
push
pop
xor
test
push
je
mov
sub
cmp
push
xchg
dec
inc
mov
add
mov
rcl
je
les
dec
mov
sub
ret
scas
xchg
das
add
mov
add
mov
inc
cmc
jmp
dec
imul
or
adc
mov
add
add
ds
pop
pop
jb
jl
in
mov
cmp
stc
mov
outsb
add
dec
or
jle
mov
movsl
jns
jae
xchg
jae
inc
shrb
xor
jecxz
dec
shlb
int3
or
stc
aaa
push
addr16
icebp
ss
mov
and
jne
xor
fsubr
push
mov
fnsave
nop
cmp
dec
data16
out
cli
dec
or
out
mov
or
sarl
and
pop
rcl
dec
jmp
rcr
test
jmp
jns
jb
into
pop
test
pushf
cmp
ret
jmp
dec
out
andl
xor
xor
inc
bswap
dec
insb
push
es
dec
fstps
xchg
in
mov
xchg
adc
test
test
cld
movups
in
ljmp
mov
leave
das
push
cli
fs
outsl
push
das
sbb
push
fsubl
int
push
push
stos
in
xor
push
and
subb
mov
sbb
cwtl
popa
mov
push
push
js
cmp
mov
mov
mov
inc
outsl
push
jbe
cs
adc
das
push
in
jnp
int
stos
inc
mov
out
adc
inc
test
xchg
xchg
mov
adc
lret
movsl
stos
mov
dec
mov
mov
sbb
mov
data16
xor
imul
stos
mov
xor
ret
ds
jl
in
fldenv
jmp
mov
std
loope
sub
dec
fnstsw
fisubs
loope
sbb
cmpsl
idiv
sub
push
js
or
cmpsl
std
lret
inc
insb
sti
jo
dec
aaa
fstps
cmp
jb
mulb
sbb
stc
cld
mov
gs
int3
sbb
push
push
test
xor
arpl
xor
cmpl
lock
popf
in
adc
pop
xor
js
xor
in
xchg
icebp
or
pop
pop
jbe
inc
mov
jp
sbb
repz
mov
sub
mov
icebp
mov
scas
iret
addl
jb
fidivrl
xor
out
jmp
int3
sbb
icebp
adc
sar
hlt
dec
out
and
int3
mov
add
lds
cld
test
push
and
add
int
push
fildll
fnstsw
cld
hlt
dec
mov
and
jne
lods
jg
insl
popa
jns
hlt
ficoms
cli
iret
testl
cwtl
inc
dec
or
push
and
dec
lock
adc
ja
out
rorl
dec
xor
in
cwtl
and
fs
dec
ret
lcall
aaa
sub
sub
pop
xchg
dec
test
stos
out
shrb
js,pn
fucomi
outsb
mov
call
cmp
enter
movsl
aad
aam
fnstsw
mov
sub
cwtl
fisubs
and
pop
or
add
imul
jecxz
movsl
xchg
push
movsb
dec
test
insl
mov
xchg
xlat
push
jne
scas
inc
into
movl
or
fistl
fdivl
lcall
hlt
lods
lods
dec
pushf
jno
jbe
mov
call
ljmp
outsb
mov
mov
xchg
lock
pop
dec
sbb
outsl
inc
xchg
cld
cmp
add
roll
bound
xor
push
movsl
lods
jb
mov
sbb
int3
or
mov
imull
cmp
mov
les
popl
shrl
push
dec
push
movb
outsb
push
mov
adc
mov
lret
sub
fldenv
daa
and
lea
shl
movsb
mov
push
push
inc
jb
cwtl
adc
mov
pop
mov
inc
adc
std
mov
pop
ljmp
jp
xor
xchg
andl
fs
addr16
pop
insb
push
imul
ret
push
movmskps
outsb
adc
icebp
xchg
adc
mov
inc
xchg
call
cltd
mov
out
xchg
test
lods
or
incb
xchg
push
sub
or
mov
movsl
lods
aad
stos
push
sbb
xor
sub
lea
dec
pop
in
pop
loope
pop
repz
int3
and
mov
test
mov
xor
dec
bound
or
pop
setne
cmpsb
filds
sbb
mov
stos
pop
cld
cmpb
mov
xlat
test
sbb
inc
loopne
fwait
mov
sub
add
sbb
xchg
push
int
data16
sbb
jmp
lea
dec
out
dec
inc
push
pop
and
filds
aaa
mov
out
xchg
add
adc
les
les
and
add
les
in
mov
inc
jge
sub
stos
jne
adc
dec
lahf
aad
push
or
cmpsb
addr16
shrl
cmp
or
in
rorb
loope
out
test
vpminub
movsl
pop
adc
xchg
sub
add
test
in
jecxz
adc
shrl
add
ret
push
jbe
ds
test
je
sub
cli
pop
andl
push
fnstsw
in
mov
mov
cmpsl
inc
and
sti
adcl
fdivs
jbe
mov
jp
mov
cmpsl
insl
push
mov
aas
mov
loop
pop
divb
xor
sbb
lea
fsts
add
test
or
outsb
out
push
push
ljmp
cmp
cmp
mov
mov
mov
dec
push
mov
sub
sbb
call
shrl
lret
out
cltd
fdivrs
jns
mov
movsl
jmp
fbstp
imul
push
and
xor
xchg
loope
mov
cmp
das
and
ss
mov
adc
push
mull
in
test
push
add
aaa
rolb
xor
add
daa
insb
pop
push
dec
xchg
ja
jle
scas
inc
sbb
int3
lret
pop
dec
sbb
fwait
and
jge
mov
cmp
or
sahf
inc
je
arpl
jmp
fs
mov
fsubrs
scas
jo
shrb
mov
inc
cmp
dec
pop
dec
jo
dec
and
loopne
scas
daa
push
out
bsr
add
sub
sub
push
outsb
mov
mov
mov
int
push
inc
lock
dec
push
fcoml
in
dec
push
cld
xor
insb
mov
pop
xor
xchg
repz
addl
mov
dec
out
int
adcl
popw
jle
les
mov
sbbb
and
xchg
icebp
xlat
pop
je
in
xchg
xor
push
stos
pop
out
pop
jmp
xchg
inc
fstl
inc
mov
cmp
mov
cli
inc
aaa
daa
int3
enter
mov
js
sub
pop
cmp
jg
popf
bound
cmp
dec
popf
jbe
sbb
jns
mov
dec
push
nop
out
aaa
mov
lret
loope
push
out
ret
lock
cli
xchg
ss
insb
aas
mov
adc
ss
in
pop
xor
divl
clc
xchg
jle
fidivrs
stc
inc
imul
addl
inc
mov
mov
iret
inc
cmc
push
inc
push
cmp
je
test
and
fstp
or
stos
pop
adc
add
push
fwait
add
mov
addr16
loopne
push
fwait
test
dec
xor
adcb
shlb
ds
sub
pop
fldcw
rcll
pop
fimull
dec
addl
outsb
push
xchg
sarb
addr16
mov
jge
cmp
jbe
dec
push
mov
stos
es
gs
fmull
es
movsl
inc
xchg
jnp
lret
xchg
fadd
jo
gs
loop
mov
imul
stos
popaw
sub
xchg
outsb
popf
ret
sub
dec
stc
mov
addr16
or
sarl
xlat
push
insl
push
add
add
or
movsl
ret
sub
int
inc
ja
cmp
add
in
push
push
decl
sub
aam
outsl
cmp
jbe
and
jl
jecxz
fidivrl
pushf
adc
pop
adc
lahf
jb
push
idiv
andb
cld
fmull
in
imul
std
pop
stc
push
inc
xchg
cmp
inc
jbe
mov
outsl
push
dec
in
bound
test
aas
decb
xlat
mov
dec
mov
mov
jb
andl
test
lcall
push
std
pop
incl
movl
dec
lds
sub
notl
add
es
dec
testb
loope
test
test
inc
ja
dec
xor
in
dec
cltd
push
fisttps
rolb
insl
stos
scas
cmp
xchg
sbb
push
jnp
mov
sahf
mov
adc
mov
add
xlat
call
xchg
xchg
adc
xchg
je
mov
push
das
sahf
icebp
loope
push
cmp
add
xchg
in
mov
rolb
scas
ja
addr16
in
adc
rclb
icebp
dec
mov
movsb
mov
aam
sub
ds
and
insl
scas
pushf
pushf
xchg
adc
jb
pusha
mov
jmp
stc
sub
ss
pop
jae
lds
dec
filds
and
xor
or
inc
mov
push
inc
lcall
dec
inc
pop
sbb
sbb
in
lahf
xchg
shll
pop
cwtl
dec
pop
sahf
add
popa
shlb
out
negl
inc
das
ret
jg
into
mov
fsubrs
gs
clc
mov
sbb
jnp
pop
sbb
inc
push
add
push
icebp
pop
cmc
ficoml
mov
or
pop
repz
mov
ja
lds
cmp
enter
fdivl
cld
dec
das
mov
adc
sbb
adc
imul
jge
push
orb
sbb
mov
ret
stc
pushf
sbb
mov
jnp
push
iret
cmpsl
mov
dec
vrsqrtps
pop
insb
decl
fstpl
mov
push
xlat
ret
hlt
iret
call
dec
pop
mov
push
test
dec
dec
fcoms
mov
mov
call
pop
or
movsb
fsub
addb
and
pop
add
rol
xchg
lock
or
add
es
or
bound
or
push
adc
pop
xchg
loop
scas
out
mov
je
jne
mov
nop
jb
push
ljmp
popa
sbb
aad
xchg
nop
jnp
pop
pushf
outsl
dec
lret
adc
ss
std
sbb
push
adc
cmp
fdivrs
xor
push
and
loope
push
pand
rorb
fisubrs
pop
insl
ror
outsl
fcoms
icebp
out
lcall
and
adc
xchg
mov
jge
xor
ffree
pop
sarb
mov
pop
and
ss
lock
inc
pop
xchg
or
sahf
ja
add
inc
ja
jbe
rclb
push
test
addr16
fs
or
hlt
add
xchg
insb
pop
test
rolb
sbb
sti
sti
call
jae
jb
negb
rcll
aad
fistpll
jns
mov
shl
out
inc
sub
ja
mov
ficomps
cltd
lcall
icebp
add
pop
add
shll
pop
lods
shrl
inc
mov
mov
shl
loope
and
arpl
leave
xchg
cmp
rorl
and
dec
add
jne
cli
adcl
aam
xor
add
pop
test
enter
and
push
jb
mov
push
jle
lods
dec
mov
xlat
mov
js
pop
push
dec
scas
ja
fcoms
inc
xchg
ret
hlt
push
dec
pop
and
xchg
lds
cs
sbb
jl
inc
pop
dec
ret
lea
jg
and
dec
mov
arpl
ljmp
xor
mov
mov
mov
fisubl
insl
jbe
pop
sub
insb
mov
icebp
xorb
nop
jle
loope
icebp
sbb
mov
outsl
outsb
xlat
or
test
or
lock
test
add
cmp
inc
pop
lcall
test
add
jge
fxam
enter
or
lcall
adc
pop
daa
push
cmp
mov
push
decb
fsubrl
testb
pop
incl
clc
adc
cli
inc
xor
add
je
xor
movsl
test
xchg
ror
lock
cmp
movsb
push
nop
out
jbe
nop
daa
into
int
rol
clc
sbb
pushl
add
pop
mov
fisttpll
cli
lods
out
fnstcw
test
outsl
and
mov
bound
notl
add
cmpsb
rcrb
cmovne
adc
in
xchg
icebp
xor
pop
jno
pop
jge
jne
loope
jp
fdiv
xor
mov
subb
inc
popa
jo
ja
hlt
jnp
les
pop
insl
sub
adc
fsubl
in
aad
negl
mov
ja
sti
rolb
ljmp
insb
scas
cmpsb
stos
sub
fisubrs
sbb
daa
jecxz
sub
mov
das
pop
cmp
jmp
imul
testl
out
call
in
mov
lock
mov
adcb
dec
sarl
pop
sbb
hlt
arpl
or
mov
fdivr
push
dec
adcb
xchg
pop
pushf
mov
pushf
jns
sbb
xor
addr16
and
xchg
xchg
ret
insl
dec
inc
fnstenv
cmp
sbb
dec
scas
jae
jge
jle
cmp
rol
and
jb
leave
addr16
mov
push
int3
push
lcall
add
dec
xchg
sub
push
mov
sub
inc
decl
push
popa
nop
dec
jns
jecxz
flds
sub
mov
sbb
jno
xchg
movsl
xchg
and
pop
test
out
push
mov
ljmp
ss
jbe
xchg
push
loop
sarb
aas
adc
lods
in
movsb
jmp
jecxz
mov
shll
aam
sti
jnp
push
add
sub
jge
call
repnz
gs
xor
sbb
cmp
push
cmp
push
orb
inc
fnsave
xor
andl
stos
ds
mov
test
jecxz
mov
cmp
xchg
push
adc
push
lret
jmp
mov
test
aaa
imul
shl
fcomps
shll
cmpsb
or
push
data16
fwait
pop
insb
lahf
cli
xchg
into
sub
sbb
cmp
shr
sub
lret
mov
sub
clc
xor
sub
sbb
push
mov
mov
das
mov
stc
cltd
dec
mov
mov
pop
jo
mov
sbb
or
loope
into
jb
mov
pop
inc
orb
and
cmpb
std
stos
cmpsb
add
cltd
sbb
mov
movsb
or
int
dec
pop
int3
aad
stos
push
pop
mov
pop
mov
cli
lods
push
pop
arpl
ja
icebp
jge
sub
cmp
push
pop
adc
fstl
stos
adc
push
iret
mov
shrl
fdivrp
mov
mov
ret
pop
mov
cmpb
push
xor
movsl
psubq
mov
jno
std
icebp
data16
sbb
mov
or
push
sub
daa
dec
fsts
jbe
fsubrs
mov
and
repz
or
or
testl
imul
std
mov
add
cmp
cmp
orps
inc
lcall
cld
insb
adcb
sbb
sbb
dec
test
mov
adc
mov
jmp
or
lret
xchg
out
mov
es
xor
aam
dec
stc
mov
enter
xchg
mov
cmp
add
test
sub
std
js
das
cli
jo
push
ror
sar
or
pop
mov
mov
bnd
push
fcmovbe
dec
aaa
push
and
pop
stc
jg
xor
mov
jge
imul
mov
test
stos
sbb
mov
loope
adc
fistl
fistps
iret
cld
cmp
mov
push
xor
mov
pusha
mov
popa
ss
movsb
fistpl
int3
loopne
push
jg
xlat
scas
mov
stos
pop
subb
dec
inc
jne
add
mov
adc
addb
cltd
fxsave
sub
jae
jno
fisttps
inc
cli
orl
stc
push
mov
add
mov
test
xchg
xchg
pusha
shrl
push
fwait
rorl
pop
push
loop
sbb
sbb
xchg
das
adc
lcall
andl
fucomp
push
enter
dec
jne
cwtl
gs
dec
push
jle
mov
sbb
xor
cmp
push
ja
add
scas
jge
int3
pop
inc
dec
clc
cmc
out
scas
dec
inc
sbb
bound
idivl
rcrb
add
into
sub
in
inc
jae,pt
xor
push
stos
sbb
mov
mov
cmp
aad
mov
lcall
lds
push
dec
jecxz
add
dec
lret
ja
jns
fsub
jo
inc
fcomps
int
sub
push
mov
adc
xlat
and
rdmsr
jp
lahf
lahf
gs
out
adc
fs
jg
mov
adc
arpl
or
aad
mov
in
mov
dec
pop
leave
cmpsb
data16
lea
adc
loopne
sbb
mov
xor
int
andl
push
mov
nop
and
pop
mov
pop
mov
imul
jbe
xchg
movsl
add
call
dec
xor
sub
xchg
mov
sarb
out
sti
dec
jne
cmp
cmp
and
movsb
insb
mov
and
sahf
dec
std
and
pop
and
mov
xchg
test
fwait
test
mov
sti
mov
out
push
cmp
inc
push
mov
jae
addr16
push
shll
fstl
cs
clc
repz
sti
adc
ljmp
or
scas
push
sub
push
pop
jno
notb
ret
in
jmp
insb
mov
or
adc
mov
dec
in
imul
sarl
sbb
repnz
sbb
cmpb
sbb
xor
jae
and
popa
adc
or
mov
icebp
xor
mov
cmp
pop
es
inc
insb
xchg
orb
pop
lea
jb
gs
or
insb
or
xchg
inc
push
add
or
xchg
pop
int
scas
sti
mov
adc
cmp
cmc
andl
add
ja
test
shrb
dec
xchg
test
fcoms
mov
das
mov
out
and
ret
mov
pop
and
ds
subl
xor
cmp
add
cwtl
mov
cwtl
lret
add
xchg
in
cmp
jg
mov
fdivl
sub
hlt
pop
pop
cmc
sub
pop
inc
cmpsl
mov
out
rcll
sbb
gs
add
pop
xor
in
clc
xor
inc
pusha
mov
xchg
jle
rolb
pushf
jae
cmpsl
fsubl
inc
lods
in
and
lods
xor
das
inc
stos
mov
mov
test
icebp
jb
inc
push
and
add
out
dec
into
pushf
shrb
ss
inc
jge
dec
inc
ret
inc
cmpsb
sbbb
daa
cmc
hlt
ss
cmpsl
push
lock
xchg
sub
jl
pop
or
add
out
test
mov
push
sub
loope
hlt
sbb
xlat
inc
fadd
aaa
les
jns
cmp
ret
cltd
push
inc
std
cmp
xchg
jb
popa
stos
sbbl
mov
lods
pop
jb
daa
orl
dec
lret
test
dec
mov
mov
lods
fnstsw
in
bound
lods
js
push
movsl
jg
adc
mov
xchg
push
and
mov
fisttpll
imul
jg
addb
movsb
sbb
xor
add
lcall
outsb
jg
push
dec
push
xor
or
sub
inc
jecxz
mov
adc
ljmp
call
ficoms
adc
pop
mov
inc
dec
push
aad
sarb
mov
in
ds
lods
inc
jge
push
sub
imull
ja
cmp
inc
das
cmpsb
in
ljmp
push
push
jmp
test
mov
cmp
in
imul
cmp
std
stos
push
jae
lods
lretw
lcall
into
in
adc
test
outsl
ljmp
pop
sarb
sub
push
mov
clc
xchg
cmpb
push
sbb
scas
pop
jae
mov
jnp
mov
stos
movsl
mov
jg
enter
int3
in
jb
hlt
and
pop
inc
cmp
hlt
std
push
iret
out
test
fistpl
icebp
xlat
sti
adc
arpl
popf
scas
push
in
js
xchg
push
push
and
jnp
jb
stos
outsl
insl
jno
jno
jae
cmp
jns,pt
lea
sbb
jns
scas
mov
scas
pop
in
in
out
cmp
xchg
gs
fsub
adc
mov
mov
loope
jae
and
ret
lahf
inc
andb
repz
enter
inc
std
repnz
push
push
mov
dec
fsubs
filds
aad
add
fldcw
mov
xchg
sub
mov
xchg
xor
imul
adc
inc
mov
dec
mov
aam
sub
and
aaa
ja
cld
das
popf
push
nop
mov
jecxz
dec
cld
movl
add
and
mov
mov
out
jne
inc
cmpl
mov
movsb
loop
fsts
pop
test
or
lods
mov
insb
push
cmpsb
orb
adc
int
xchg
pushf
cmp
mov
fcoml
clc
test
stos
in
push
in
and
insb
lds
xor
jo
ljmp
repnz
dec
mov
test
adc
jmp
leave
ret
inc
fisubrs
jp
xchg
mov
push
out
jnp
out
cwtl
inc
out
xchg
sbb
mov
pop
ror
ja
mov
lret
das
or
lcall
and
xchg
ss
in
mov
mov
mov
add
jne
lock
daa
jmp
dec
movsb
xor
xchg
iret
xlat
pop
sub
stc
ss
dec
jne
in
xor
sub
fisttps
jo
push
mov
xor
push
in
add
jae
lcall
lahf
dec
or
cmpl
popf
in
jge
lods
and
and
cmp
pop
jae
fldl2t
lds
cmp
inc
pushf
test
mov
push
out
test
jbe
xor
pop
out
xor
jl
pop
mov
aas
fcmovnu
scas
adc
jg
bswap
inc
push
aam
adc
jmp
lret
or
lcall
hlt
ja
cs
das
fwait
ja
fxch
ss
xor
push
and
jecxz
adc
mov
lock
arpl
sahf
cld
ds
pusha
repz
lcall
jae
add
das
int3
mov
mov
push
jo
push
test
xchg
mov
sahf
decb
xor
dec
lods
enter
sbb
outsl
or
push
insb
dec
sbb
sbb
cmp
jnp
sub
push
xchg
in
pop
dec
jnp
and
stos
test
cld
cli
push
xor
lahf
arpl
ja
into
gs
notb
mov
jp
dec
push
movsb
cmp
dec
and
and
xchg
xchg
xchg
xlat
push
push
inc
lock
mov
call
jbe
xchg
pop
loop
mov
jmp
mov
push
dec
jb
rorb
sbb
inc
mov
es
flds
bound
stc
icebp
cmc
dec
push
fwait
inc
lcall
test
push
adc
lcall
xchg
ljmp
sub
and
gs
and
pop
lds
fdivrs
orl
jb
adc
hlt
in
outsb
push
gs
jno
dec
sbb
dec
fiaddl
xchg
sub
inc
pop
sahf
sbb
xor
aas
lret
mov
notl
dec
ret
inc
add
dec
mov
push
lea
mov
mov
xchg
cmp
xchg
cmp
dec
mov
push
les
mov
mov
pop
loop
jb
and
icebp
stos
cltd
sub
mov
sub
cltd
push
xor
sti
lods
jnp
cld
mov
and
cmp
push
xchg
mov
outsb
outsl
jo
int
xchg
xchg
div
cmpsb
aaa
xor
push
test
outsb
mov
pop
pop
push
icebp
pop
dec
sbb
pusha
push
push
cmp
in
popf
rcrl
mov
add
dec
adc
xor
jp
mov
inc
mov
and
inc
push
dec
adc
xor
repz
imul
add
mov
movsb
push
jle
mov
sbb
cmp
loop
mov
data16
movsb
fs
adc
loop
idivb
pusha
push
xchg
lcall
addr16
dec
popf
and
mov
sub
imul
jmp
inc
sbb
movsb
or
push
arpl
icebp
xor
add
int3
cmp
adc
add
and
push
xor
pop
mov
cmpsl
iret
imul
sbb
add
xchg
iret
loope
out
jae
add
scas
sub
jmp
jmp
jb
xor
jo
xor
fs
mov
sub
inc
mov
dec
out
mov
dec
or
or
mov
loopne
int3
jo
enter
dec
push
std
imul
pop
es
popa
int
fcmovb
mov
lods
mov
hlt
in
stc
fsubs
push
ds
cli
out
mov
mov
inc
pop
mov
pop
test
sbb
xlat
ret
jb
fwait
andb
jmp
add
mov
sbb
andb
bnd
mov
shrl
xchg
faddl
mov
ja
aam
xor
es
push
xchg
fsts
outsb
in
xchg
daa
dec
es
mov
or
leave
xchg
inc
movb
mov
dec
jnp
xchg
ficoms
adc
movsl
jl
jle
decl
pop
jmp
mov
aas
pop
mov
or
mov
add
cmp
push
test
push
aam
sbb
jnp
orb
sbb
inc
outsl
push
push
in
mov
andl
jbe
test
out
hlt
and
mov
sub
and
in
xchg
popf
jne
jp
and
imul
sbbb
mov
test
das
mov
lahf
push
test
jg
xchg
aam
lret
bnd
nop
xchg
ljmp
pop
js
or
pushf
mov
xchg
pop
add
iret
cmp
mov
sarl
and
mov
push
pop
cmp
mov
into
call
push
adc
mov
cmc
cmp
test
pushw
push
ret
test
xor
mov
aaa
aad
push
outsb
idiv
mov
jns
or
fwait
sbb
xor
sbb
sub
mov
fcoml
loope
js
lret
loopne
and
pop
mov
out
arpl
mov
xchg
sbb
aam
neg
mov
negb
pop
add
out
or
or
mov
insb
cld
aas
out
sbb
popa
shrb
xor
sbb
lock
push
repnz
les
xor
and
cmpsl
dec
add
inc
lret
lods
pop
pop
inc
xor
je
jne
in
sbb
sbb
fimull
add
mov
mov
repnz
cmp
imul
les
pop
jge
push
mov
fsubp
in
gs
frstor
xchg
ja
pusha
fsubr
jo
inc
dec
sbb
movsb
push
test
jae
sub
fucomi
and
dec
and
mov
movd
outsb
push
mov
pop
or
mov
mov
cmp
test
aam
mov
or
pop
call
jae
loope
jnp
mov
push
lret
push
inc
pop
add
das
xchg
inc
imul
or
mov
cmp
inc
lods
cmp
sub
gs
adc
shll
scas
jge
lds
mov
sbb
add
or
pop
push
dec
and
fstpl
dec
mov
push
ss
inc
mov
jmp
addr16
dec
mov
stc
mov
ja
jne
pop
adc
imul
stos
ror
xchg
cwtl
inc
test
sbb
roll
lods
xor
into
mov
dec
clc
or
das
sti
dec
lret
sbb
xor
jg
cmpsb
ljmp
rcll
push
dec
adc
xor
mov
jle
test
cltd
bnd
pushf
push
add
push
out
dec
xor
xor
mov
push
test
in
les
and
jg
jge
and
in
lret
lock
adc
sbb
cmp
aas
jl
push
pusha
mov
pop
and
aaa
lds
ljmp
xor
in
jecxz
ret
inc
not
or
mov
and
sbb
inc
leave
mov
mov
jae
and
test
add
jecxz
inc
cmp
push
scas
mov
mov
add
das
adc
push
stos
mov
xchg
jp
xor
and
jne
lds
test
mov
xor
mov
ja
test
or
mov
sbb
out
and
outsl
in
jecxz
pop
scas
into
push
mov
xlat
and
call
fisttpl
movsl
pop
popa
push
sarb
std
dec
in
and
sbb
pusha
in
xor
push
notb
cmp
insl
mov
adc
adc
jg
mov
gs
xchg
icebp
xchg
jae
aaa
push
xchg
outsb
addl
aaa
xor
ret
jmp
ja
xlat
popf
add
bound
ret
adc
movsl
xor
push
mov
std
cmc
dec
or
ds
xchg
push
inc
aaa
stc
inc
jb
jl
mov
sti
xchg
in
ljmp
out
fwait
inc
add
and
ss
xchg
fbstp
mov
pop
adc
iret
xchg
xchg
pop
push
test
gs
test
pop
mov
loopne
into
js
ds
fists
cs
jnp
test
sarl
bound
out
sub
shll
pop
sub
aam
inc
sbb
inc
pop
mov
scas
lcall
test
add
mov
fcoml
add
mov
lods
xchg
dec
push
imul
aas
jmp
lods
cmp
jb
sarb
jmp
sbb
mov
rcll
xchg
lret
int
cmp
adc
cmp
cmp
rcll
pop
pushf
in
stos
je
jnp
push
ret
push
adc
roll
int3
push
mov
mov
mov
insl
push
mov
push
iret
inc
outsb
mov
out
mov
jbe
mov
ljmp
fwait
cmp
cmp
pop
jge
test
loopne
jle
popa
pop
xchg
cmp
ljmp
cmc
iret
fdivr
mov
sub
popf
shll
cmp
add
mov
std
dec
adc
mov
pop
jne
inc
add
dec
push
dec
and
push
add
out
or
mov
fistpll
mov
scas
cmp
xchg
push
into
xor
jo
cld
mov
cmpl
lcall
sbb
in
sub
fsubr
pop
sub
popf
xchg
adc
add
mov
js
js
or
mov
pop
pop
xor
cli
push
push
mov
sub
cmp
outsl
in
mov
sub
arpl
cli
inc
and
inc
scas
popa
push
xor
xor
mov
in
jae
jo
movsl
mov
mov
pop
jmp
aas
xchg
aas
adc
jnp
ficoml
js
xchg
cmp
fdivrs
outsl
dec
ljmp
out
pop
add
push
mov
icebp
test
sub
std
mov
cmpb
das
notl
aas
in
sub
pop
xchg
cmpl
jle
mov
and
add
push
stc
xchg
incl
int
push
int3
dec
movsl
fimull
shll
xor
mov
pop
cmpsb
push
fwait
push
test
mov
data16
clc
xchg
inc
add
inc
cmp
dec
push
mov
dec
ljmp
and
mov
push
fdivrs
dec
sbb
and
insb
pop
ret
dec
xor
in
sti
pushf
inc
sbb
popa
movsb
or
aaa
sti
and
mov
cmp
push
movsl
dec
push
test
aad
mov
pushf
push
lods
daa
andl
xchg
or
adc
cltd
aam
inc
into
push
pop
cmp
inc
icebp
mov
verr
andb
dec
jb
dec
sahf
xor
rorl
popa
xchg
out
outsb
or
andl
inc
cmp
add
cld
jle
roll
cli
outsb
loope
out
in
push
mov
cmp
xor
addr16
lret
push
sbbl
sahf
xchg
and
dec
xor
loop
js
sub
outsl
addr16
hlt
scas
shll
mov
mov
fistl
dec
cli
dec
mov
pushf
test
mov
test
pop
add
cs
sbb
xchg
stos
nop
ss
mov
out
jmp
imul
daa
cmpsl
clc
dec
add
cmc
xor
inc
push
in
and
pop
fidivs
and
cmpsb
mov
loope
xchg
push
push
mov
loopne
sub
mov
pop
xchg
and
push
xor
cmp
out
jp
mov
loop
cmp
and
out
ja
pop
and
call
cmp
lahf
aas
mov
shlb
in
repnz
dec
mov
stos
push
adc
add
dec
ret
xor
sub
jo
out
cld
pusha
arpl
loopne
dec
pmaxub
mov
into
mov
stc
jno
inc
and
sahf
mov
inc
and
mov
sti
arpl
daa
fistpl
imul
xchg
subb
jmp
lahf
cmpsb
push
dec
cli
test
not
fadds
rorb
pop
int
out
imul
adc
jecxz
xorl
mov
xor
jle
jae
xlat
push
shll
jmp
pop
pop
inc
test
mov
push
inc
loope
mov
cli
pop
xchg
or
icebp
xchg
lahf
inc
lret
out
cld
das
cs
jmp
xchg
dec
cli
sbb
xor
pop
and
nop
cmp
pop
jmp
jmp
lock
ret
stos
sub
imulb
ds
xchg
stc
imul
mov
dec
ja
ret
and
aaa
bound
jg
ret
pop
outsl
call
push
cmp
adc
adc
push
fcomps
ret
mov
scas
jo
hlt
xchg
sbb
rclb
jnp
push
push
movsb
pop
mov
mov
and
dec
das
fucomi
ja
daa
jbe
adc
loope
jecxz
mov
inc
mov
push
pop
rcll
aad
je
jle
icebp
imul
mov
add
psrld
mov
push
inc
or
subb
mov
ss
hlt
pushf
rep
sbb
mov
xchg
pop
scas
inc
popa
fdivl
jb
mov
sub
sub
popa
jle
jge
ds
call
cmp
dec
add
fists
mov
ret
rclb
or
dec
jns
xor
aad
pop
shr
andb
and
imul
push
push
add
xor
mov
andl
aad
add
iret
int
ja
adc
repz
movsb
dec
cltd
in
jp
shlb
loopne
pusha
mov
lea
es
mov
sbb
int3
aam
pop
pop
pop
xchg
aaa
nop
pop
xchg
out
push
int
fimull
jl
mov
mov
in
jl
ret
in
jb
imul
fcompl
xchg
add
test
call
ret
test
iret
test
mov
enter
call
roll
cli
sub
or
sbb
out
rcrb
stc
rsqrtps
loope
shlb
dec
push
rclb
jae
xor
mov
in
add
inc
sbb
jno
mov
adc
xchg
test
cmc
call
das
leave
lods
add
adc
shll
sbb
pop
dec
xor
sbb
jmp
mov
mov
adc
enter
push
and
cmp
fwait
inc
jmp
mov
test
addl
xchg
cwtl
xor
aam
pop
push
dec
cld
cmpsl
clc
sbb
pushf
dec
push
mov
push
sub
ret
xchg
gs
sub
aam
jg
sarl
adcl
aam
repnz
sub
jb
push
and
push
dec
pushf
mov
lods
mov
xchg
sub
adc
inc
lods
pop
int3
push
or
sbb
mov
or
mov
clc
daa
mov
scas
jp
sbb
pop
mov
sbb
pop
adc
push
test
lock
adc
jns
dec
call
adc
imul
jle
or
fsubs
push
lret
jmp
sub
sti
jne
loope
push
lret
xchg
sub
jecxz
mull
sub
shlb
outsb
add
xlat
adc
sub
push
lahf
mov
imul
add
push
sti
dec
mov
mov
cld
adc
or
pop
dec
lock
les
inc
sbb
add
inc
mov
fistl
dec
push
mov
dec
and
pusha
mov
dec
adc
dec
out
icebp
mov
jle
pop
dec
ret
xchg
loope
dec
jge
pop
out
mov
sbb
xchg
sbb
xchg
nopl
hlt
add
cmc
xchg
enter
mov
cmc
dec
mov
and
mov
mov
pop
or
aam
inc
push
pop
adc
xlat
cmpsb
out
push
fstps
dec
mov
push
or
mov
dec
mov
lds
aam
movsl
mov
pop
inc
sub
out
ret
test
xor
lret
aad
push
mov
adc
repz
loop
cs
push
into
test
lea
outsb
stc
stos
mov
mov
push
lods
cli
xor
sub
loop
dec
push
fistl
jge
out
fs
mov
pop
xchg
sbb
pop
dec
cmp
je
pusha
inc
sarl
xor
movsb
pop
pusha
imul
repz
push
sar
cmpl
xchg
jg
es
mov
xor
or
or
jae
fst
lods
out
push
mov
sbb
je
xor
inc
in
lahf
xchg
addl
int
loop
fwait
out
dec
mov
dec
mov
jmp
dec
mov
outsb
pop
push
ret
or
or
push
fmuls
cmp
outsl
inc
push
mov
cmp
or
push
push
xchg
dec
loopne
mov
movsb
nop
gs
cmp
inc
mov
sub
test
sbb
push
test
adc
pusha
add
push
cmp
enter
inc
push
lcall
or
and
mov
adc
push
cmp
std
dec
mov
mov
jnp
pop
cmp
pop
call
inc
sbb
imul
sahf
mov
push
pop
mov
add
out
mov
pusha
pop
jge
addr16
add
and
dec
or
jmp
xor
sbb
seto
jl
jecxz
fisttpll
and
or
or
push
adcl
add
lret
or
ret
mov
in
enter
pop
jo
mov
jnp
enter
mov
dec
insb
xor
add
sbb
dec
sbb
in
lds
adc
pop
cli
fwait
loope
inc
enter
inc
lgs
aam
out
and
int
push
aas
fsts
inc
pop
add
sbb
pop
cltd
add
sub
mov
mov
cmc
cmp
enter
cmp
cmp
repz
adc
pop
and
add
aad
stos
call
pop
fxch
fs
outsl
test
aad
inc
sub
cmp
lahf
add
pop
sbb
mov
inc
insb
jg
in
mov
insb
lret
sarb
repnz
add
mov
pop
or
adc
inc
mov
add
or
hlt
clc
inc
push
je
or
dec
dec
loop
add
inc
cmp
pop
xchg
lahf
mov
gs
scas
shrb
mov
sbb
int3
in
push
xor
mov
aaa
out
mov
mov
push
inc
test
dec
inc
sub
mov
testl
imul
mov
jl
xor
repz
cli
popaw
mov
jne
aad
lcall
mov
int
jecxz
xor
test
cmp
mov
fucomi
rcrb
std
andb
lods
imul
mov
movsl
jnp
mov
outsl
xchg
sbb
sub
test
pop
and
pop
mov
push
aaa
mov
fs
add
mov
cmp
mov
or
lods
push
out
jp
addr16
lret
pushf
or
out
mov
pop
lret
push
push
push
sti
sbb
arpl
iret
pop
outsb
jae
idivl
mov
or
int
movsl
jbe
push
clc
cmp
fimull
and
pop
inc
pop
sub
mov
or
aas
inc
cmpsb
inc
mov
out
add
pop
enter
stc
and
movsl
ja
jne
in
notl
mov
mov
add
loop
movntq
movsl
aad
loop
sbb
je
in
mov
fwait
push
mov
out
cmc
dec
or
test
imul
fwait
cwtl
push
imul
pop
mov
test
int3
sbb
push
int3
add
repnz
iret
lods
mov
popf
cmp
xor
cli
sub
pop
pop
mov
enter
jne
xlat
int3
movsl
cmp
shlb
out
outsl
mov
ret
fisttpll
cmc
cmp
jb
push
aad
adc
test
xchg
push
dec
addr16
js
lock
dec
pop
insl
xor
pop
mov
xchg
mov
roll
call
sbb
pop
movsb
enter
xor
pop
cld
pop
ret
jmp
shll
mov
mov
jne
cltd
insb
or
movsb
mov
jns
push
cmp
jecxz
mov
add
loope
mov
jl
aam
adc
sub
mov
pop
mov
sbb
dec
scas
sub
cltd
sub
lret
push
pop
addr16
out
in
inc
sub
inc
inc
sub
mov
loopne
push
aaa
pop
lds
xchg
xor
add
flds
test
js
dec
push
push
mov
imul
fidivrl
call
clc
add
imul
and
cmc
fs
aad
cmpsl
push
push
lock
sub
inc
ret
jmp
pop
mov
insb
jb
pushf
add
hlt
lahf
bswap
rcrl
sahf
sbb
add
push
ret
add
sbb
jae
aad
sub
fcomip
test
push
clts
dec
sahf
fnstcw
push
sbbl
adc
mov
jb
jae
cs
or
add
cmpsl
lods
fcomi
sbb
add
inc
adc
lret
push
leave
xchg
dec
sbb
xorl
loopne
mov
dec
or
icebp
insl
loopne
fidivs
and
cltd
pop
sbb
jge
loope
adc
sahf
jbe
ret
mov
mov
adc
dec
mov
cmp
std
popl
cmpsl
fcompl
xchg
repz
xchg
fildl
sti
xor
rorl
nop
loopne
push
and
mov
gs
pop
cwtl
mov
lods
dec
leave
sbb
in
push
test
cmp
inc
aad
push
pop
adc
mov
jb
fstpl
jge
in
sbb
xlat
mov
ja
movsl
aaa
mov
cwtl
popf
or
push
push
xchg
add
lds
pop
outsb
scas
adc
push
dec
insl
jp
push
enter
xchg
add
mov
mov
in
mov
loopne
fisttpll
ret
inc
cmp
ss
lock
dec
dec
push
aaa
xchg
xor
push
fs
dec
cltd
insl
pop
inc
test
je
mov
cmp
jmp
pop
lods
lods
pop
adc
push
hlt
or
fidivl
aad
or
jmp
stc
shlb
out
dec
mov
mov
xchg
out
xor
inc
or
xor
cmc
repz
and
xor
mov
jge
add
add
in
xor
sbb
je
sbb
mull
fidivs
movsl
lret
leave
fdivp
pop
sbb
mov
xchg
loop
add
pop
adc
aaa
mov
aaa
xchg
rcrl
out
inc
ret
jmp
cmp
add
out
push
lcall
mov
jl
es
push
fnstsw
adc
in
rcl
pop
cltd
icebp
pushf
imul
test
add
jb
and
mov
jnp
sbb
pop
inc
inc
aad
xchg
or
xor
sbb
test
sbb
inc
jge
andb
cmp
imul
mov
mov
arpl
push
mov
xor
mov
in
ss
aad
pop
leave
imul
push
mov
arpl
rcr
jbe
aam
clc
int3
cmp
cltd
xchg
sbb
out
iret
lcall
add
mov
mov
dec
pop
mov
bound
push
jmp
scas
out
lods
out
sbb
adc
aaa
xchg
bnd
or
mov
or
addr16
and
add
xor
orl
lret
cmp
js
xchg
mov
jmp
jmp
fisubl
out
lret
xchg
icebp
mov
rcll
inc
pop
xchg
xor
gs
fbld
in
inc
pop
jbe
pop
cmp
pop
std
lds
es
sti
mov
sub
mov
mov
testb
xor
cmp
imull
mov
movsl
mov
push
or
inc
hlt
daa
in
add
jno
lea
addl
aaa
cmp
aas
push
add
int3
mov
sbb
inc
mov
aaa
in
lret
mov
fwait
dec
cwtl
cmp
cs
adc
int3
ret
pop
orl
xor
into
out
mov
pshufw
mov
sahf
xchg
or
sub
mov
xchg
int3
mov
stos
lret
icebp
mov
mov
lahf
push
mov
jle
daa
gs
inc
jge
rcrl
jae
push
lahf
cwtl
pop
in
add
in
fs
orl
xor
out
addb
xchg
mov
push
scas
out
jne
addl
rorb
jg
dec
inc
stc
cmpsl
sti
adc
clc
xlat
bound
jae
xchg
pop
push
cmp
rcll
mov
stc
orb
xchg
mov
and
mov
push
sahf
add
fwait
push
xor
idivb
cmp
push
icebp
pop
test
jle
jmp
and
movsl
mov
mov
call
pop
icebp
popf
mov
std
push
add
repz
js
cmp
je
inc
add
mov
imul
cmc
outsb
shrd
inc
es
or
sbb
fisubrl
and
inc
roll
jno
dec
sarb
dec
mov
imul
mov
xlat
lahf
add
repnz
sbb
data16
mov
lret
push
movsl
jo
sbb
stos
cmp
cmp
mov
psubd
loope
pop
sub
adc
cmp
es
mov
pop
xchg
and
inc
sbb
dec
pop
mov
mov
pop
addr16
mov
mov
push
pusha
push
movsb
gs
push
icebp
ret
int3
and
sbb
mov
shl
add
js
ja
rclb
subb
loopne
xchg
inc
xchg
or
js
fcomip
insb
inc
adc
nop
shl
imul
dec
js
in
inc
test
sahf
test
cmp
add
jae
outsl
hlt
and
and
sub
jl
push
in
inc
mov
add
sub
xchg
pop
inc
jle
mov
mov
pop
mov
test
int3
push
xor
mov
sub
jmp
push
rcl
pop
and
outsb
pop
lahf
adc
pushf
rsm
and
xchg
sbb
shl
or
cmp
dec
dec
sbb
bound
push
out
out
cmp
adc
ret
sahf
movsb
sahf
clc
adc
push
jg
push
push
popa
add
add
mov
mov
cmp
pop
js
push
gs
push
push
insl
repnz
int3
aas
add
dec
and
jmp
or
fwait
dec
push
mov
cmp
imul
xchg
cli
jp
mov
adc
jl
data16
ret
xlat
or
add
inc
cmpsl
lock
jecxz
fidivrs
fstps
xchg
or
sub
pop
xchg
lahf
les
pop
and
add
repnz
adc
sbbb
in
out
xchg
pop
outsl
pop
push
xlat
inc
jge
xor
mov
in
lret
out
mov
fstpt
dec
sub
mov
repz
pop
mov
imul
jb
jno
jbe
xor
je
cmp
lock
daa
add
fcomps
pushf
push
mov
jo
shlb
lock
arpl
mov
add
jg
pop
lret
jb
lret
ja
dec
add
fsubrs
lahf
dec
cmp
decl
adc
bnd
push
push
inc
or
adc
adc
int
add
out
mov
aam
out
adc
jp
fdivrs
out
imul
and
xlat
or
adc
add
adc
ficoml
push
add
adc
cmc
mov
mov
sbb
xchg
dec
pop
jg
sti
lods
js
mov
mov
fistpll
mov
and
out
test
and
mov
lock
mov
es
mov
jb
and
and
das
lds
xor
cwtl
iret
pop
cmovb
push
stos
arpl
ja
popf
or
mov
gs
sbb
mov
adc
fdiv
test
jae
push
lahf
movsl
cmpsl
in
fidivrs
mov
sbb
shlb
ret
gs
sub
cmp
scas
outsl
xchg
jp
pop
xlat
in
in
cmpsb
inc
les
lods
fisubrs
jecxz
call
jmp
orl
ret
and
sub
cs
lock
mov
shll
test
lcall
movsb
dec
loopne
notb
inc
push
sub
cld
decl
les
pop
inc
jge
dec
sbb
es
subl
fs
add
push
inc
add
jge
jne
add
xchg
push
in
pop
mov
pop
mov
add
cmp
pop
scas
test
push
jne
jne
incb
mov
aas
push
mov
cmp
add
ret
pop
into
jg
add
push
scas
add
push
inc
cmp
push
das
loopne
dec
xchg
push
cmp
cmc
adc
shlb
pusha
push
mov
mov
mov
dec
insl
sbbb
inc
test
or
and
pusha
clc
or
mov
inc
push
insb
fsubl
mov
fmull
mov
or
out
cmc
and
arpl
mov
in
xor
cmp
jo
test
or
out
das
push
mov
and
ret
loope
add
mov
push
aaa
sti
pop
dec
xor
cwtl
mov
ljmp
ljmp
sub
jns
lods
addr16
dec
push
in
mov
cmp
pop
andb
cmpsb
adc
icebp
sbb
or
push
sbb
sbb
pop
inc
lds
in
mov
dec
subl
adc
mov
aas
testl
movsb
dec
scas
in
xor
xor
test
test
scas
les
pop
enter
sub
mov
rcrl
filds
sub
iret
mov
clc
cmp
pop
fcompl
cs
fsubrl
test
cli
testb
xorb
test
bound
mov
das
jmp
test
pop
sti
ret
rcrb
jo
jbe
cmp
jo
imul
sbb
cmc
and
xchg
jl
cmp
inc
mov
in
ds
push
in
adc
das
icebp
pusha
negl
sbb
pop
xchg
and
push
mov
mov
xor
iret
jo
xchg
jo
mov
mov
jns
stc
mov
mov
or
je
dec
sbb
adc
xchg
pop
loop
jbe
addb
pushf
adcl
add
pop
mov
xchg
sub
ret
lcall
mov
mov
mov
mov
in
dec
jge
dec
jecxz
stos
jbe
xchg
and
sub
fmulp
cmp
cmp
jb
sub
popa
ja
into
sbb
fcmove
add
test
push
pop
mov
outsl
sub
push
jge
or
and
jae
push
aad
mov
jnp
arpl
ljmp
pop
xlat
int3
fwait
mov
and
cmpsl
pop
pop
mov
jmp
test
lea
fists
mov
iret
xchg
sub
mov
aaa
xlat
add
ret
pop
cmp
ljmp
jae
pop
inc
jl
lahf
push
mov
icebp
and
adc
das
jo
sub
data16
adc
outsb
ficompl
lea
in
mov
iret
xor
ljmp
and
rolb
mov
dec
pop
pop
jns
mov
in
cmc
xchg
and
clc
push
xor
mov
stc
mov
mov
cmp
sub
jne
xchg
jl
neg
mov
mov
pop
stc
mov
aaa
cmp
pushf
roll
dec
imul
test
or
cli
stc
mov
into
xor
xchg
sub
mov
jo
xchg
fsubs
push
mov
lcall
mov
cmp
push
mov
mov
out
lret
or
in
or
mov
pusha
jl
xor
out
jge
gs
push
daa
mov
repnz
cs
pusha
arpl
xchg
xchg
nop
call
jg
inc
pop
sbb
inc
nop
ret
imul
inc
adc
jp
mov
enter
mov
push
and
jge
pop
sarb
rol
mov
xchg
nop
fdivs
xchg
faddp
inc
pop
push
or
out
adc
xchg
inc
mov
mov
xchg
mov
ss
stos
pop
dec
aam
xor
testb
loopne
sub
into
dec
dec
dec
mov
mov
mov
mov
mov
ja
pop
mov
fildl
dec
cmp
mov
cli
nop
xor
dec
xor
cmp
lods
xlat
xchg
jno
mov
xlat
push
popa
dec
aaa
lcall
mov
jg
addb
arpl
pop
push
lcall
inc
sbb
sbb
or
sub
xor
jp
xor
test
add
icebp
adc
adc
cmp
sbb
mov
mov
jl
xor
push
add
cmp
imull
das
in
lcall
inc
inc
subb
xor
lock
dec
cmp
pop
jge
cmp
loopne
and
jae
rcl
std
scas
leave
sbb
inc
popf
sbb
cmp
icebp
inc
imul
xor
sub
push
in
xor
sbb
jmp
jge
aaa
fnstcw
iret
push
stos
xchg
movsl
and
outsb
cmp
inc
pop
adc
dec
xor
mov
xor
mov
das
imul
jo
daa
jp
inc
and
mov
dec
dec
jo
adcb
and
aas
jae
push
cmp
push
sub
cld
outsw
rcll
sub
out
es
jnp
out
pushf
or
incb
xlat
jno
mov
movsl
insb
and
lods
mov
addb
je
push
repz
xchg
repnz
fmuls
mov
je
pushf
lea
mov
in
iret
and
pushf
cs
xchg
mov
sarb
sub
aad
shrl
aaa
or
aad
cli
inc
dec
int
xchg
mov
mov
or
imul
mov
cltd
mov
leave
mov
mov
or
inc
sarl
cmp
adc
out
mov
int
jnp
inc
dec
pusha
xchg
mov
out
stos
and
sbb
and
mov
xor
ljmp
mov
and
mov
int3
fistl
fidivrl
dec
js
sub
lret
push
mov
jecxz
cmpsb
and
mov
mov
adc
es
pop
shrl
adcb
lret
jl
call
push
inc
inc
lret
adc
popa
dec
mov
sbb
and
cmp
xchg
sbb
jp
add
mov
test
cld
xchg
or
fmuls
push
rorb
push
clc
in
das
jno
out
jnp
mov
xchg
sbb
and
mov
mov
in
sti
pushf
inc
hlt
enter
rcrl
outsl
add
pop
test
je
jmp
aam
icebp
das
mov
jns
push
scas
leave
cmpsl
scas
pop
pop
dec
imul
dec
jo
daa
out
imul
xorl
mov
push
rcrl
jle
sti
xchg
nop
xor
push
mov
dec
inc
adc
jge
jnp,pt
aas
call
and
jge
rorb
xchg
inc
cwtl
rolb
es
sub
sti
icebp
sub
ss
pop
xchg
cmp
stos
ss
gs
nop
xor
loopne
sub
mov
insb
pop
cmp
dec
vmovss
daa
sub
mov
jne
sahf
cmp
rolb
mov
sbb
stos
scas
stos
stos
cmp
mov
xor
scas
in
mov
mov
sbb
jmp
xor
push
jbe
ret
pop
xchg
inc
push
filds
fsubs
cmp
cltd
in
pop
xchg
xchg
push
popa
and
xor
addl
xor
jmp
aad
stos
adc
jp
xor
daa
subb
xchg
xor
push
mov
xor
add
cld
or
mov
pop
lcall
ret
dec
imul
or
cmpsb
std
lods
cs
psubsw
inc
insb
ja
or
mov
sbb
or
jnp
outsl
fistl
jne
int
test
inc
std
repnz
xor
rorl
cwtl
ja
sub
push
out
fwait
cmpsb
mov
and
aaa
cltd
or
stc
mov
outsl
dec
ja
mov
pop
xchg
divb
sub
into
loope
mov
pop
push
loopne
test
dec
aad
mov
sbb
dec
inc
mov
cmpsb
enter
inc
into
jnp
or
inc
dec
pop
fwait
inc
pop
in
in
call
in
mov
xor
cmp
inc
lcall
movsl
jno
stc
je
notb
mov
arpl
sub
add
pop
push
jbe
cli
adc
jnp
push
pop
xchg
add
and
and
lret
sbb
lds
xor
mov
lock
lret
pop
ss
aas
add
add
int3
or
aaa
aaa
sbb
dec
shll
in
fistps
jns
ret
pop
sbb
scas
pusha
js
orl
jge
mov
call
test
andl
push
or
pop
js
inc
xchg
jl
or
mov
out
cli
jne
loopne
repnz
mov
stc
and
cmp
xchg
int3
insl
fnsave
shr
xchg
sub
mov
mov
pop
jb
and
xchg
xchg
jnp
fldcw
ret
xchg
sbb
jmp
xor
push
xchg
xchg
sar
gs
dec
data16
inc
ficoms
movaps
dec
call
out
pop
push
iret
dec
cmc
mov
push
int
inc
mov
push
cwtl
out
jl
dec
add
sub
pop
loop
add
movsl
popf
cmp
je
scas
js
mov
aad
adc
jg
add
pop
push
cmp
pop
add
xor
mov
add
pop
or
test
jp
inc
sub
mov
icebp
paddsw
jns
add
clc
xor
sbb
das
test
incl
mov
pop
xchg
test
push
test
out
add
clc
dec
pop
jns
ds
sbb
push
shl
stos
xchg
jns
sub
xchg
mov
sub
lahf
mov
mov
fmulp
out
rorb
fstl
repnz
data16
cmc
mov
cmp
add
jno
rcrl
mov
into
fstpl
pop
test
pushf
inc
add
dec
out
incb
pop
push
cltd
and
imul
fsubs
jno
jg
adcb
jb
cli
jle
lods
ret
and
loope
sbbb
sahf
inc
pop
adc
mov
or
mov
push
orb
adc
int
sub
xor
movsl
push
lret
xor
mov
lods
sti
into
cmpb
andb
das
and
aad
cmp
call
inc
lret
imul
jle
icebp
ret
out
jno
push
lahf
fsubrl
mov
arpl
mov
and
loopne
mov
adc
jmp
cmp
jmp
jae
sbb
mov
cmpsb
jo
gs
jmp
test
or
inc
add
mov
stos
cltd
scas
adc
sahf
push
aam
add
rcr
loop
sbb
clc
mov
or
in
jge
mov
or
in
in
cld
out
lods
lcall
in
cmp
iret
lahf
sarb
adc
xchg
je
pop
adc
sbb
pop
mov
jb
cmp
push
gs
mov
pop
daa
subb
enter
push
push
fwait
out
mov
outsl
iret
xchg
std
dec
mov
mov
cmp
push
cmpxchg
pushl
jp
add
repnz
xchg
ret
gs
mov
loope
push
loope
push
int
push
dec
or
add
repnz
lahf
and
jmp
xor
pop
add
mov
adc
mov
repnz
mov
sub
lock
cmp
jl
dec
and
mov
dec
xor
push
js
addr16
loopne
jo
insl
inc
aad
sbb
jecxz
ljmp
adc
add
cwtl
adc
inc
rcrb
sarb
iret
js
xor
xor
shl
sub
roll
jno
xchg
cs
test
fidivl
loopne
sti
mov
cli
add
mov
fisttpl
rolb
call
add
outsl
pop
test
add
jecxz
ret
mov
and
rcll
add
xchg
flds
mov
in
xchg
fistps
xchg
enter
xchg
cmp
dec
xchg
xlat
push
scas
xor
dec
loope
dec
add
lds
test
bswap
xchg
cmp
loope
sub
sbb
push
xlat
inc
push
mov
mov
pop
mov
sub
in
mov
jmp
hlt
xchg
nop
rcrb
dec
sub
cs
sub
sbbl
mul
add
shl
test
mov
mov
cmc
sub
jo
repnz
xor
mov
mov
mov
push
mov
dec
mov
sbb
jle
pop
pop
pop
mov
xchg
sub
cmp
push
mov
sub
sbb
mov
rolb
rolb
mov
insl
xor
shrl
jmp
push
pshufw
adc
mov
hlt
stos
xor
sbb
stos
xlat
and
pop
jo
cmp
cmc
or
rcr
push
add
pushf
xor
or
shll
lahf
xor
jle
xchg
shl
jmp
mov
std
dec
cmp
and
movsl
out
push
xor
sub
minps
dec
lods
inc
pop
das
mov
popf
mov
and
iret
push
leave
and
xchg
or
cwtl
dec
add
jecxz
lret
jo
ds
cs
cltd
push
cld
push
or
mov
outsl
pmuludq
adc
pop
enter
jl
cmp
int3
popa
or
pop
sub
mov
cmp
repz
mov
int3
and
leave
hlt
fsubrl
cmpsl
aad
in
sbb
sub
dec
pop
push
jo
lock
outsl
adc
mov
sub
std
divl
push
sbb
mov
fildll
add
xchg
rolb
cmpsb
mov
xchg
imul
stc
mov
jmp
or
mov
mov
psubsb
xchg
jno
pushf
test
mov
loopne
xchg
jbe
cli
sub
adc
fwait
xor
sbb
pusha
subl
rorl
ss
mov
jp
lahf
dec
xorl
dec
cmc
dec
sub
fistl
pop
nop
lock
mov
iret
mov
out
loope
pop
xor
or
inc
out
insl
inc
xchg
cmp
xchg
or
inc
adc
xor
add
fstps
and
mov
inc
adc
mov
loope
mov
cmp
ljmp
cmp
jne
fisubl
xchg
iret
dec
test
pop
sbb
rcll
and
int
out
mov
in
out
adc
or
xor
jnp
sbb
mov
sbb
je
cmc
xchg
aad
out
leave
repnz
push
add
stc
jns
insb
mov
pop
adc
adc
ret
add
cli
das
adc
das
lcall
out
sub
xchg
and
leave
hlt
xchg
mov
inc
mov
mov
jnp
pop
fisttpl
andb
jne
cwtl
push
pushf
nop
inc
outsl
add
pop
dec
or
out
cmp
and
punpckhdq
data16
filds
add
subb
lock
xchg
adc
adc
or
jbe
adc
mov
montmul
cmpsb
inc
hlt
adc
xchg
test
inc
arpl
mov
ret
iret
dec
push
loopne
in
add
pushf
inc
dec
mov
inc
or
or
aas
adc
daa
push
int3
or
lds
inc
cmp
xor
sbb
pop
adc
fnstenv
lret
jne
cli
jl
jnp
insb
arpl
jle
lods
jg
pop
popa
mov
push
sub
test
stc
xchg
jge
add
mov
xchg
xchg
push
jae
adc
test
in
arpl
cmp
ljmp
add
xchg
repnz
mov
or
outsb
arpl
xchg
lds
dec
jl
sub
mov
dec
subl
pop
nop
dec
push
xchg
push
js
cmp
dec
or
loope
mov
cmovp
lock
aas
dec
es
mov
mov
inc
adc
inc
push
jbe
movsb
sbb
pop
lret
and
mov
dec
loopne
in
test
mov
pop
sbb
test
imul
mov
xchg
or
or
or
lea
jae
add
add
jmp
push
xor
mov
cs
dec
push
dec
shll
xor
inc
cwtl
fwait
inc
lock
lods
sbbb
and
mov
popf
addl
sbb
mov
aaa
xor
ds
dec
into
dec
push
divb
aam
pop
xchg
lds
aas
aaa
jne
xor
and
jae
nop
shlb
push
and
in
inc
dec
aad
bound
ret
fs
xchg
dec
lods
push
daa
cld
addl
fidivs
and
xor
lret
pop
xchg
mov
and
jae
push
jg
add
enter
pop
cmp
sub
or
shl
sbb
popa
in
aam
fdivl
addl
inc
outsb
sub
into
push
jne
sub
mov
aam
cmp
cs
int3
fsts
xlat
notb
xchg
int
das
push
sub
rcl
mov
iret
mov
sub
push
imul
jb
jle
dec
pop
and
add
cmc
inc
mov
lods
pop
and
jnp
aaa
inc
das
lcall
push
jne
std
lahf
push
les
cmpsb
add
push
div
push
xchg
jbe
das
and
jb
xorb
sbb
out
insb
ret
imul
adc
pop
dec
or
xchg
mov
sbb
ljmp
mov
pop
stos
test
dec
sahf
cmpsl
sbbb
sub
dec
negl
push
sti
jecxz
sbb
pushf
mov
pop
jg
mov
add
scas
push
and
pop
std
jg
fnstsw
push
addr16
mov
jmp
pop
test
dec
arpl
lcall
push
enter
outsl
cmpsb
push
sbb
pop
outsl
adc
and
push
lret
cmpsl
rcrb
adc
mov
pop
add
lods
fcmovnu
sub
push
push
sbb
ja
mov
sub
push
mov
xor
test
orl
out
mov
mov
mov
ret
ret
adc
jl
pop
push
in
vorps
xor
mov
or
aam
sub
sbb
aad
adc
or
mov
push
jbe
push
pop
hlt
cli
xor
jge
cltd
repz
xchg
call
clc
xchg
mov
dec
cmp
sti
sbb
popf
or
lret
cmc
int
insb
rclb
iret
ret
dec
push
lcall
aaa
mov
addr16
push
or
or
sub
or
or
mov
mov
push
shrb
jae
mov
nop
add
push
std
js
dec
mov
std
in
aad
popa
sbb
xor
scas
xchg
enter
jno
dec
mov
sti
xor
leave
rcll
cmp
inc
addr16
add
imul
push
mov
jno
or
jae
xchg
out
push
ret
lods
out
jnp
subl
mov
mov
sahf
movb
or
aad
pop
dec
mov
jne
mov
cmp
daa
lock
pop
ss
insl
fidivrl
adc
xor
sahf
jo
stos
out
pop
jo
pop
cld
faddl
mov
addr16
push
dec
mov
int3
sub
xlat
pop
push
popf
pusha
data16
adc
repz
or
sbb
mov
cmc
fistl
xchg
jp
ret
jne
xchg
push
in
jge
lock
add
lcall
in
pop
dec
sub
in
inc
imul
ret
dec
scas
out
aaa
cwtl
insb
ror
aaa
test
lahf
push
and
sub
sbb
push
out
jno
in
xor
xor
sahf
mov
in
or
ja
push
cwtl
mov
cmpl
stc
cs
jo
outsb
in
cmp
int
into
scas
or
push
notb
popa
mov
in
sti
shrl
push
dec
addr16
or
je
ret
dec
adc
ja
mov
je
dec
pop
fsub
pop
jg
inc
hlt
icebp
fs
jb
pop
ja
jns
dec
sbb
adcl
or
cmc
xor
jnp
das
mov
pop
xchg
mov
inc
or
stos
adc
ja
push
mov
mov
fldcw
inc
sbb
fidivrs
sub
xor
mov
adc
jle
sbb
jo
loopne
lea
and
pop
es
xchg
adc
inc
mov
inc
decb
push
mov
push
cli
imul
daa
clc
jle
push
and
inc
lahf
in
leave
inc
adc
cli
or
mov
rorl
jp
pop
in
mov
lods
jb
lahf
jmp
aaa
out
cmp
mov
sbb
mov
xchg
pop
scas
mov
push
and
lret
sub
cmpsl
adc
xor
pop
jl
lcall
inc
pop
inc
test
xor
adc
push
pop
push
test
xchg
dec
lea
loopne
sub
mov
jbe
xchg
sub
cmp
jecxz
pusha
imul
test
loop
lret
into
out
pop
rcrl
movsl
popf
fisttpl
cmpsb
jo
mov
dec
pop
in
bound
lods
ret
and
ja
addb
bound
jo
outsb
test
xlat
jns
sbb
out
and
outsl
xchg
movsb
loop
adc
cs
shrb
popa
push
pop
outsl
push
xor
mov
pop
ss
mov
and
shufps
xor
inc
cwtl
xchg
pop
push
aaa
outsb
sub
popf
inc
cwtl
aaa
out
jp
xor
pop
out
cmpsl
add
mov
movsl
andb
cmp
push
mov
cmp
int3
movsb
scas
sarl
fmuls
leave
dec
sub
sarb
or
jmp
movsb
sbb
mov
insl
pop
jae
adc
enter
sbb
push
dec
js
cmp
mov
xor
les
adc
mov
je
imul
mov
sub
sti
and
in
imul
enter
mov
xchg
test
sahf
sti
ds
rolb
insb
dec
mov
ljmp
fimuls
jnp
push
cwtl
jecxz
dec
repz
sub
stc
mov
sti
mov
fiadds
cld
ljmp
mov
xor
dec
push
loope
and
fcmovnb
cli
xchg
pop
rcll
mov
push
pop
loopne
or
mov
and
fwait
jb
xor
ret
scas
cmpsl
test
push
and
jns
out
cmp
test
add
lahf
or
add
xor
sarb
add
dec
repz
fwait
lahf
fidivs
pop
xor
mov
mov
pusha
or
push
jl
sbb
arpl
imul
lods
dec
imul
jo
scas
aad
sub
in
and
stc
cmp
push
shr
lcall
ret
scas
repnz
aaa
popf
pusha
dec
sbb
jg
sbb
jl
fcoms
cmc
xchg
outsb
pop
frstor
mov
pop
cltd
xor
in
popl
dec
pop
fisubrl
jne
clc
push
jmp
std
cltd
adc
arpl
adc
dec
mov
rcr
jbe
xchg
mov
adc
cmpsb
inc
out
hlt
jge
push
pop
fs
cmp
mov
mov
test
xor
lds
aad
mov
popa
mov
jg
lahf
dec
mov
cmc
dec
insb
aas
mov
xchg
pop
adc
mov
decl
inc
insb
cmpsb
sub
andl
shll
movsb
jmp
idivl
lcall
mov
iret
mov
das
add
fstps
rorb
loopne
inc
rep
or
adc
bound
jae
sub
or
jne
jl
push
cld
inc
int3
orl
adc
mov
and
aaa
in
jecxz
jg
arpl
inc
dec
cltd
fists
lahf
push
sub
push
into
jge
rorl
ss
xchg
mov
mov
gs
or
das
and
dec
jmp
dec
movsl
jp
jno
addr16
mov
or
xor
sbb
inc
dec
jae
cmpsl
insl
insb
cs
mov
pop
es
fnstsw
aas
sbbb
push
pop
daa
fcmove
jae
jns
mov
stos
push
push
push
add
xor
dec
add
rolb
mov
mov
jmp
das
gs
jno
push
mov
imul
inc
pop
add
inc
add
sub
inc
mov
push
in
popf
rorl
ljmp
xchg
jbe
xor
xlat
jl
aaa
push
cmp
xor
or
sbb
mov
mov
sub
xchg
push
adc
jmp
fnclex
cmp
mov
xchg
jbe
shlb
xchg
pushl
pusha
test
iret
test
into
fwait
sti
test
adc
and
in
xchg
lret
push
js
mov
jb
movsl
mov
iret
out
lret
movsl
jo
add
aas
cmc
xchg
pop
mov
fisttps
pop
cmpsl
in
shl
push
or
inc
mov
idivb
scas
and
and
cmp
enter
xchg
pop
adc
jle
gs
lds
jg
sarl
movsb
add
out
mov
inc
add
cmp
movsb
bound
js
xchg
in
addr16
adc
sub
mov
outsl
std
jmp
add
sub
gs
adc
dec
ret
pop
dec
repnz
inc
out
sub
int
cli
shll
jp
imul
fistpl
jle
fstps
jl
mov
lahf
dec
insb
dec
stos
inc
adc
push
stos
xor
dec
sub
adcl
mov
cmp
fldenv
pushf
gs
mov
aam
jae
in
data16
pop
fs
push
push
js
mov
mov
lret
jle
mov
xor
xchg
arpl
gs
mov
push
push
lock
push
repnz
xchg
and
xchg
pop
adc
and
loopne
scas
add
dec
popa
xchg
js
cltd
idivl
jge
push
bound
dec
cmc
lcall
adc
sar
fisttpl
mov
outsl
adcb
fmuls
or
adc
sub
int
lahf
mov
or
inc
jecxz
push
cmp
push
lcall
push
adc
pcmpeqd
add
fbld
stos
fsts
outsl
fbld
pop
repz
iret
lock
cmp
jl
xchg
cmp
dec
imul
push
roll
sub
or
pop
xchg
or
pop
dec
adc
dec
fstps
mov
sub
pop
int3
dec
xchg
lahf
daa
addr16
sub
ror
popa
sarl
pushf
sbb
shlb
jg
aam
out
push
adc
rclb
shr
xchg
push
ds
iret
in
inc
adc
xchg
jb
cwtl
sahf
pop
xchg
popf
movsb
std
aad
pop
inc
js
fstpl
dec
xor
sbb
mov
inc
pop
cmp
or
enter
push
aas
sub
dec
and
shl
jnp
push
stc
lahf
cmp
loop
int
sub
mov
mov
aaa
loope
cmp
bnd
xor
loop
les
adc
jae
loopne
movsb
or
fdivr
mov
arpl
push
insb
mov
les
lock
fsubrs
hlt
out
dec
mov
add
push
xchg
and
and
aaa
dec
out
rcrb
out
idiv
shrl
cld
dec
out
jp
aaa
jp
mov
les
or
fwait
sarb
mov
jbe
loopne
push
adc
in
lret
sahf
inc
xlat
pop
daa
mov
test
arpl
mov
mov
rcll
movsl
add
push
icebp
movsl
lret
icebp
or
dec
addr16
add
loop
nop
inc
std
movsl
test
dec
mov
mov
ret
push
pop
pop
lret
jb
ficompl
jo
pop
jno
js
insb
push
pop
aam
adc
adc
out
pusha
test
jbe
nop
xchg
push
or
xchg
sbb
mov
dec
pop
push
or
jbe
fidivrl
idiv
mov
sub
je
mov
sbb
push
jmp
insl
add
fdivl
stos
dec
decb
pop
push
data16
mov
ficompl
scas
push
roll
mov
push
repnz
or
mov
and
dec
push
mov
imulb
notb
mov
popa
rolb
jmp
icebp
dec
mov
inc
sar
cld
setns
cmp
stos
ljmp
dec
cmpsl
ror
mov
add
arpl
inc
movsb
sbb
jb
fwait
sbb
jmp
dec
fs
jmp
add
mov
and
out
xchg
add
ss
xor
cmp
ja
test
pusha
sbb
ret
orl
adc
sub
ficoml
daa
adc
fwait
and
and
xchg
sbb
adc
xor
nop
in
mov
push
sbb
xor
out
stos
movsb
xchg
pop
not
adc
push
aas
into
xchg
or
inc
xchg
xchg
mov
pop
mov
aaa
repz
pop
mov
pop
adc
mov
sahf
out
xchg
push
jns
add
cld
xchg
imul
ret
xchg
dec
ljmp
jbe
xor
decl
outsl
je
rolb
dec
cmp
call
pushf
mov
clc
or
dec
pop
push
inc
arpl
push
add
xchg
into
pusha
mov
int3
mov
movsb
rcl
lret
comiss
jo
repnz
xchg
push
js
pop
adc
pop
repz
mov
and
pop
pop
std
inc
mov
fwait
subb
addr16
add
cli
es
fcompl
popa
pop
push
mov
xlat
mov
mov
add
or
lret
addr16
sub
mov
inc
cmpsb
insb
lret
jl
dec
or
sub
arpl
enter
ret
les
int
adc
sbb
inc
pushf
push
and
sub
aam
push
subl
insl
jns
xor
nop
out
jl
add
loop
and
imul
loope
lods
ds
xor
enter
mov
fnstcw
loope
mov
dec
adc
cmpb
xor
das
gs
inc
dec
adc
or
adc
dec
mov
cmc
sbb
pop
mov
test
out
in
ficompl
xchg
xchg
cltd
push
cs
push
adc
das
inc
enter
test
decl
mov
aad
cli
add
push
push
push
mov
dec
mov
jae
jmp
sbb
out
enter
mov
mov
cmpsl
mov
cwtl
jecxz
lcall
mov
and
mov
add
inc
inc
or
scas
xchg
sti
lret
aam
loop
shrb
int
and
mov
loop
xor
cmp
test
cmp
jge
pop
lods
add
xor
in
hlt
push
lock
sarl
pushf
mov
mov
jecxz
or
add
stos
test
and
pop
cmpsl
fwait
imul
cli
xchg
xor
push
cwtl
ljmp
cltd
add
es
scas
imul
add
pop
add
or
scas
dec
push
inc
fsubs
aam
cld
fistps
xchg
jge
jl
aam
stc
add
mov
sub
fcompl
mov
and
rcr
aaa
andl
pop
mov
cmpb
adc
jno
in
loope
aas
dec
cmc
cmc
scas
push
dec
mov
outsb
sbb
movsb
inc
lock
insb
dec
lret
sbb
jl
xchg
int
xchg
pop
adc
xchg
push
scas
scas
fstpt
push
jl
push
push
xchg
repnz
inc
clc
cmp
repz
xchg
enter
ret
test
lret
aam
outsb
or
outsb
xor
cmp
lea
xor
add
pop
xlat
mov
iret
movsl
rorb
orb
aas
aaa
outsb
shl
add
daa
or
or
lret
cmp
scas
fidivl
pop
clc
pushf
jns
daa
inc
push
call
add
cmp
cmpb
insl
cltd
jb
ds
jnp
js
outsb
hlt
jno
xor
cmc
aam
mov
inc
clc
mov
jae
dec
test
lret
cmpsl
inc
fs
dec
pop
mov
cld
test
in
rclb
pop
les
insb
fimull
sub
mov
je
pop
xchg
add
popa
push
jb
xor
mov
xlat
aad
xor
inc
cmp
addr16
sbb
test
call
ret
outsl
push
jmp
mov
push
call
dec
lock
into
stos
sar
andb
and
mov
dec
xlat
adc
in
addb
lds
leave
popa
mov
mov
ret
inc
jl
mov
sti
lods
fildl
cli
sbb
dec
lock
push
mov
js
add
xlat
inc
cmpsl
push
inc
and
std
pushf
ljmp
mov
outsl
and
mov
lret
pop
push
in
arpl
bound
stc
mov
inc
xlat
sbb
out
aam
inc
out
cmp
add
add
jno
add
mov
out
jnp
notb
fucomi
pop
jnp
jge
pop
out
test
pushf
imul
push
ds
stos
fistps
or
mov
jnp
cmp
sbbb
nop
icebp
mov
xor
int
arpl
mov
sbb
or
pushf
enter
push
mov
xlat
mov
adc
cmc
pop
adc
jnp
pop
sub
sti
cltd
pop
xor
inc
mov
jbe
lret
test
xchg
mov
xchg
xchg
lock
test
cmp
arpl
jmp
xor
andb
cmp
aaa
nop
test
mov
ret
fs
xchg
mov
sub
js
cld
or
loope
jno
jno
in
fcomi
jns
loope
aad
cmp
aad
cmc
std
and
imul
cltd
and
addb
pop
lret
mov
aas
xchg
test
xchg
push
hlt
movsl
jmp
lret
mov
imul
mov
or
and
rcrl
int
inc
ror
xchg
fs
and
rcll
dec
xchg
push
shll
fnstenv
ret
sti
xchg
into
arpl
xor
cmc
lds
mov
pop
cmp
jbe
and
jb
xchg
xchg
lfs
int3
not
push
or
sub
push
push
int3
mov
cmp
fs
adc
pop
aam
sbb
sbb
lds
movlps
cmp
jbe
aam
scas
popf
sahf
icebp
push
inc
imul
adc
scas
rcrl
les
call
jnp
cmp
mov
sbb
mov
icebp
icebp
pop
enter
add
je
pop
gs
adc
xchg
pop
ss
insb
mov
pushf
xchg
jg
shll
sbb
pop
mov
push
mov
dec
mov
dec
leave
hlt
lahf
sbb
inc
jle
pushf
xchg
jge
stos
mov
mov
xor
mov
mov
push
mov
mov
mov
sbb
iret
nop
cli
adc
lds
mov
push
arpl
arpl
insb
mov
cmp
rcrb
inc
aam
sub
cli
and
push
jno
jo
pushf
xor
add
mov
xor
dec
jp
decb
inc
out
stc
push
es
add
insl
jno
clc
into
push
pop
mov
pop
jne
lcall
jl
daa
sbb
push
movsl
cmc
movsl
xchg
pop
jmp
and
adc
cmp
dec
inc
outsl
arpl
es
adc
loop
pop
mov
insb
nop
incb
iret
push
or
into
faddl
sbb
mov
inc
fwait
bound
dec
adc
call
xor
addr16
repnz
push
int
adc
jmp
jl
es
adc
mov
cld
jns
fst
hlt
or
push
sub
outsb
pop
bound
lcall
or
mov
mov
enter
loopne
mov
cmc
loop
sahf
je
test
bnd
das
dec
jge
cmpsb
push
sti
sbb
and
popf
xchg
inc
mov
xlat
imul
dec
lcall
cmp
mov
xchg
jl
sub
jmp
movsb
insl
sub
arpl
cmp
add
lea
icebp
mov
add
and
mov
repz
pop
mov
inc
test
mov
cs
lock
fidivs
add
ret
inc
sub
jnp
mov
outsb
jae
jne
call
mov
mov
aad
mov
dec
push
sbb
out
mov
sub
insb
sbb
add
in
stc
dec
leave
jecxz
push
jge
dec
mov
mov
repnz
and
cmp
ss
dec
out
lods
out
lcall
lock
scas
mov
in
xchg
mov
sub
daa
sti
push
sub
cltd
fdivl
mov
cli
adc
dec
test
daa
data16
lret
add
out
jae
mov
xor
jae
dec
and
cmp
xchg
clc
mov
dec
cmp
mov
cwtl
mov
imul
fnstcw
mov
jno
and
jne
lods
xor
xchg
push
adc
cmpb
lods
pop
outsb
fists
test
scas
into
popa
mov
inc
xchg
push
inc
ret
pop
pop
addb
xchg
int
push
jp
dec
xchg
jp
les
adc
jge
inc
mov
int
fcmovu
push
xchg
push
mov
out
stos
push
std
test
cmpsb
mov
mov
mov
xor
jnp
in
bound
cmp
mov
push
cltd
add
int3
das
pop
movsl
in
loope
and
sbb
in
pop
lea
rorl
outsl
mov
pusha
sub
dec
adc
adcb
lods
shlb
push
lods
dec
loop
enter
xchg
add
arpl
add
popf
mov
test
lcall
or
mov
mov
cli
out
test
dec
jbe
das
push
xchg
mov
sbbb
stos
jbe
fnstsw
cs
fildll
adc
lods
fs
push
iret
adc
sbbl
inc
fidivs
cmp
jns
pop
stos
shlb
faddl
ljmp
mov
lahf
das
sbb
call
out
inc
jecxz
xchg
js
sub
adcl
add
fisttps
mov
lea
mov
notl
std
add
ret
dec
push
popf
add
lods
jnp
lods
cli
sbb
test
pop
jg
pop
mov
inc
testl
insb
xor
std
clc
jns
aam
push
adc
dec
xchg
stc
cmp
inc
jecxz
enter
ljmp
repnz
jae
loope
mov
shll
sub
divl
dec
stc
lahf
xor
andl
jb
addr16
xor
arpl
je
inc
jle
roll
repnz
movsl
lock
shr
cmp
xor
in
adcl
add
mov
fistl
mov
icebp
xchg
pop
cltd
cmp
jns
inc
xor
push
iret
pop
inc
gs
lock
test
mov
call
and
inc
pop
aam
push
in
pop
les
add
push
xor
xor
mov
setle
jl
dec
pop
and
ficoms
sub
xor
dec
mov
mov
jmp
or
ja
push
daa
mov
mov
insb
rcr
ljmp
and
and
push
test
inc
sti
repz
loope
and
pop
or
pop
mov
dec
rolb
jno
pop
pop
lods
xchg
sbb
sahf
pusha
push
test
sbb
cmpsl
mov
insb
fdivl
push
mov
rcll
imul
inc
mov
pop
pop
enter
pop
sub
xor
cmpsl
rep
inc
inc
adc
rcrb
push
addr16
mov
jle
push
stos
pop
pop
fistpl
push
das
inc
lods
sbb
xchg
and
loope
fs
fbstp
xchg
fmull
jo
lock
jg
in
addr16
mov
je
ret
push
inc
jb
in
pop
cli
xorl
sbb
lret
daa
ja
cli
repnz
cmc
xor
daa
pop
out
mov
fwait
jle
into
mov
shrl
in
rolb
icebp
inc
or
cwtl
jecxz
push
aad
adc
cmpsb
orl
dec
insb
mov
ljmp
add
mov
push
fs
mov
fs
push
adc
add
add
fdivs
cmp
das
adc
fidivrs
push
aam
xor
sub
adcb
sub
movsb
lcallw
test
inc
inc
sbb
cwtl
mov
adc
gs
cld
mov
stos
shrb
lock
or
gs
mov
data16
lret
test
sbb
repnz
inc
insl
jns
or
mov
repz
out
mov
push
lods
sbb
aaa
test
roll
mov
inc
xchg
mov
xor
das
call
dec
sub
mov
xchg
dec
adc
pushf
lcall
jnp
sbb
mov
jp
rclb
arpl
pop
stc
je
pop
push
and
or
jb
js
jge
loope,pt
in
adc
mov
cmp
sub
cmp
std
mov
fidivs
push
xor
jae
insb
pop
ret
ja
scas
sbb
daa
pop
adc
mov
pusha
jo
mov
or
cmp
pop
gs
inc
lds
imul
inc
cwtl
int3
and
or
jmp
sbb
cmp
data16
out
in
adc
xchg
cmp
inc
std
fldt
loope
aad
repz
jp
dec
mov
push
ljmp
jbe
ss
mov
push
test
mov
inc
in
into
lret
int3
iret
scas
fnstsw
sbb
lods
jge
xchg
jmp
inc
loopne
insl
mov
stos
dec
or
mov
out
jmp
ljmp
inc
or
iret
incb
ret
push
sub
lock
and
cltd
xor
dec
popf
xor
xor
mov
push
test
incl
mov
mov
jnp
sub
sbb
pop
mov
movsb
movsb
ds
add
in
and
sbb
mov
sbb
outsb
in
mov
add
mov
xchg
sub
call
pop
adc
jle
mov
or
or
inc
push
shrl
loop
in
push
push
push
call
pop
js
repz
imulb
stc
cmp
and
nop
xchg
mov
repz
or
push
mov
xor
and
mov
inc
in
or
ret
int
movsl
inc
jns
stos
int3
aam
sbb
inc
js
popf
fwait
hlt
adc
insb
dec
inc
xchg
mov
pop
cmpsb
add
jae
jecxz
mov
insb
jnp
seta
aad
sub
sarl
dec
xor
dec
inc
enter
jne
jg
outsb
insl
test
xor
push
insl
shrb
sub
jmp
stos
pop
outsl
je
icebp
iret
xor
sti
jno
arpl
mov
xor
and
leave
add
fcompl
cltd
mov
jge
mov
push
mov
mov
imul
in
dec
xor
scas
btc
jecxz
cmp
lods
fstpt
data16
pop
sub
out
sub
and
pop
push
adc
adc
mov
mov
dec
mov
movsl
push
mov
jge
xor
pop
and
pop
std
dec
sub
imul
sbb
push
xor
daa
data16
iret
fnstenv
push
stc
and
xchg
sbb
mov
mov
loopne
aaa
jnp
sbb
xchg
sbb
or
mov
xchg
movsl
jle
fisttps
das
push
je
adc
push
ljmp
fsubrs
jae
mov
mov
mov
add
mov
push
lods
je
ja
sbbb
inc
sub
stos
pop
sub
mov
mov
andl
push
test
hlt
daa
xor
int
lds
sub
fmull
popa
mov
or
adc
pop
cltd
into
aaa
rol
inc
cmp
dec
xor
repz
lret
xchg
xor
inc
sahf
mov
mov
les
xchg
pop
lret
imul
lret
and
cmp
cwtl
and
cli
xchg
in
or
in
outsl
pusha
cmp
fstps
and
js
mov
and
push
pop
nop
cmp
xor
imul
das
pop
xor
dec
pop
xchg
bound
test
add
inc
sbb
enter
leave
mov
in
mov
mov
ja
xor
pushf
fistpl
aad
inc
mov
adc
stos
shlb
pop
add
aam
leave
outsb
adc
xchg
push
sahf
push
sbb
enter
imul
stos
lds
cmpsl
dec
jno
ret
sahf
jmp
adc
xchg
xor
cmp
pop
adc
mov
repz
or
ret
in
xchg
shlb
mov
fwait
pop
adcl
in
decl
lods
aaa
xor
add
or
xchg
in
jmp
dec
sbb
shlb
hlt
inc
sbb
addl
lret
mov
jg
cmc
cmpsl
lcall
negl
mov
mov
cs
movsl
dec
xor
pushf
into
in
or
stc
jno
mov
pop
repnz
dec
xchg
xchg
and
mov
into
daa
inc
mov
sbb
cmp
mov
dec
or
dec
shr
lret
sub
and
push
pop
jge
adc
lret
sbb
dec
xor
in
aaa
call
insb
inc
cmp
xor
jle
outsl
idiv
dec
sub
out
out
nop
ficoml
cmp
mov
sub
mov
add
pop
jnp
hlt
and
mov
jmp
ja
stc
push
mov
push
jle
cmpl
add
fbstp
into
mov
mov
insb
sbb
pop
mov
mov
cs
and
xor
ret
test
jb
iret
out
scas
movsb
lods
movsl
repnz
sti
push
test
jg
xor
fs
imul
pop
or
movsb
cltd
and
mov
rorl
sbb
test
xchg
jge
or
cmpsl
mov
xchg
mov
dec
cmc
fmul
vmovntps
mov
push
jecxz
mov
add
push
adc
dec
dec
jnp
mov
pop
ljmp
outsb
imul
jp
adc
xchg
clc
dec
leave
es
adc
mov
xor
je
stos
mov
lds
vpshaw
jnp
add
outsb
cmpsb
add
xchg
int3
cmp
fxch
stos
out
mov
mov
test
lods
sbbl
or
mov
ss
out
sbb
push
cmc
inc
or
xchg
in
cmp
add
nop
lods
mov
outsl
aas
sub
jno
stc
sbb
adc
xor
movsl
mov
mov
stos
fmuls
inc
shll
or
test
lock
incb
mov
xchg
les
xor
das
movsb
fnstenv
cmp
orl
sub
cmpsb
iret
mov
mov
push
and
xchg
fidivrs
out
test
fidivrl
mov
sbb
jns
ret
push
sbb
lea
xchg
in
xor
das
mov
xlat
mov
mov
xchg
xor
xchg
add
xor
cltd
mov
inc
push
push
and
scas
jge
cmp
mov
js
adc
test
push
int
pushf
mov
adc
lds
adc
cmc
cmp
in
xor
test
push
pop
dec
rcll
xchg
sub
rcrb
jmp
mov
adc
mov
aas
and
cmc
fsubs
push
notl
pusha
clc
das
mov
xchg
in
or
jnp
test
adc
adc
xchg
out
arpl
sbb
fadd
xor
jae
idivb
mov
or
sbb
mov
sahf
in
push
add
jmp
push
cmp
lds
cltd
and
adcb
jne
xchg
pop
shrl
mov
mov
enter
js
scas
in
imul
fnstsw
pop
mov
test
pushf
das
pop
cmp
push
leave
mov
adc
js
inc
sub
adc
inc
js
pop
mov
jnp
lea
out
or
mov
push
pop
add
bound
push
adc
sub
xor
es
cs
dec
mov
test
xor
sub
scas
jo
add
movsl
out
add
dec
xchg
test
or
mov
adc
icebp
cld
or
xchg
cmp
pushf
cltd
sub
sub
push
rclb
lret
out
sub
ficomps
insb
and
inc
rcll
lea
lea
in
aas
fcomps
xchg
jno
les
test
test
shl
or
scas
ret
pushf
lods
and
sub
mov
dec
mov
shrl
jmp
xchg
in
in
leave
pop
adc
cwtl
icebp
pop
mov
inc
scas
xchg
sarb
sub
aas
adc
in
aas
les
in
mov
cmp
xor
sbb
hlt
sub
cs
lcall
movsb
xor
fs
iret
test
aam
mov
out
gs
mov
cmp
cmp
les
inc
push
and
cld
test
mov
fwait
and
arpl
loopne
subb
xchg
xchg
mov
cmpsb
jmp
or
sahf
stos
sahf
mov
add
in
or
int
xor
sbb
pop
movb
pop
push
dec
or
push
frstor
xchg
dec
sub
sub
pop
inc
int
ds
scas
cmp
lds
out
adc
jbe
cmp
adc
inc
out
loopne
push
pop
stc
adc
add
sti
lahf
adc
push
mov
pop
dec
jecxz
cmp
mov
sub
in
ret
outsl
and
jg
and
inc
iret
int3
pop
neg
lea
popa
fidivl
cwtl
push
push
les
jge
mov
adc
cmc
sbb
punpckhwd
ret
pop
cmpsl
fnsave
push
rcll
ret
fwait
nop
imul
jl
and
sbb
sahf
into
ffreep
mov
cmp
sub
jle
in
divb
push
shll
aad
test
ljmp
andb
pop
adc
pop
push
ja
xchg
scas
mov
cltd
adc
jae
and
lods
inc
insl
xchg
nop
std
sub
adc
cmp
xchg
ret
jp
insl
jns
cmp
out
xor
dec
test
subl
subb
jl
into
idivb
or
data16
push
scas
jns
nop
mov
mov
fs
in
sbb
int3
pop
in
test
aam
inc
dec
loop
in
fs
out
mov
mov
into
pop
mov
ficompl
xor
sbb
out
sub
iret
jl
mov
addr16
and
sahf
adc
xchg
inc
scas
out
xchg
dec
insl
jl
flds
inc
jbe
add
jg
mov
sub
sbb
out
stc
cmp
push
sub
ret
push
pop
sarb
add
mov
fs
mov
pop
out
mov
sbb
and
lahf
cmp
mov
ja
sti
mov
in
xchg
cld
xlat
sub
in
inc
stc
sbb
jp
es
sub
or
ss
inc
pop
inc
or
lock
push
call
dec
jl
push
mov
add
push
and
dec
daa
push
les
xchg
mov
iret
cmp
add
hlt
pop
jge
dec
fbld
sub
xchg
mov
add
xchg
jns
shl
sti
enter
pop
aam
sbb
jg
mov
mov
insl
lret
mov
arpl
in
in
push
fcomip
ja
pop
inc
pusha
dec
push
dec
mov
mov
mov
mov
sub
add
sub
mov
adc
fbld
addl
lods
xor
xchg
jb
out
cs
push
and
lea
inc
scas
mov
aas
shrb
sub
lret
loopne
sub
xchg
add
aas
lret
int3
jge
fbstp
pop
ss
jne
movsl
xchg
cmp
fnstcw
and
jl
add
in
ficompl
pop
sti
or
repnz
dec
sub
lods
dec
mov
mov
ljmp
int
and
sub
sub
xor
jb
inc
call
xor
cwtl
mov
adc
lods
aam
in
jle
xchg
std
jl
xor
mov
mov
add
push
inc
ror
jnp
and
js
and
ss
mov
add
faddl
ljmp
jle
js
xchg
sarb
mov
and
push
cmc
scas
bnd
jmp
idivl
adc
lds
call
scas
int
push
xchg
mov
and
fiadds
test
in
bound
cmpsl
loopne
aad
and
sbbb
jle
jecxz
test
aaa
in
mov
icebp
push
sub
inc
insb
ds
js
test
test
dec
sub
imul
nop
sub
out
leave
sbb
pop
fwait
jns
sbb
nop
mov
xor
and
scas
pop
rep
inc
fidivrs
mov
daa
test
pop
xorb
test
xchg
dec
test
aad
adc
xor
enter
rorb
ljmp
push
loop
popl
push
mov
jge
push
addr16
es
xor
in
xchg
dec
into
xchg
xchg
xor
into
push
mov
xor
jl
ss
loopne
aaa
mov
xchg
adc
loope
push
xor
je
mov
in
orl
xor
lcall
test
dec
adc
jae
xor
xor
cmc
cmc
push
jne
mov
xchg
add
dec
out
xchg
lds
lds
pop
into
ljmp
xchg
lcall
sahf
cmp
nop
mov
repnz
repz
jg
andl
cmc
jno
and
aaa
enter
dec
in
rolb
test
subl
pusha
push
outsb
xchg
jbe
mov
pushf
je
je
cmp
test
jecxz
pusha
js
xor
movsl
mov
iret
out
mov
test
push
push
cld
adc
lcall
aam
out
xchg
sbb
in
into
in
bound
xchg
call
les
incl
lcall
push
pop
in
pop
ret
inc
aam
xchg
dec
jle
jmp
or
loopne
repz
push
pop
movsb
sbb
xor
adc
hlt
ret
imul
cmp
add
ja
pop
repnz
sub
mov
fisubrs
pop
jno
jmp
mov
add
push
fisubrl
mov
pop
pop
pop
inc
jbe
das
fmull
out
push
mov
icebp
add
in
add
orb
fistpll
cwtl
pop
mov
fsubr
fimuls
sub
test
cmp
adc
icebp
mov
bound
cmpsl
repnz
pushf
stos
add
mov
fmuls
hlt
mov
movsl
mov
call
jns
xorb
push
test
subb
xchg
add
popf
mov
dec
mov
idivl
repnz
loope
divl
jo
mov
stos
cltd
xor
mov
mov
mov
fcomps
cmp
xor
pusha
pusha
push
call
gs
and
icebp
mov
adcl
mov
mov
mov
inc
hlt
inc
inc
ljmp
or
xchg
cs
inc
nop
mull
push
fs
jl
adc
inc
mov
mulb
pop
scas
je
xor
arpl
sti
xchg
mov
mov
xchg
imul
mov
lret
xchg
lret
sti
cli
jle
mov
or
testl
daa
dec
push
add
xchg
or
jne
fildl
pop
adc
xchg
js
push
stos
in
jb
push
ret
dec
addr16
mov
jbe
out
push
add
mov
or
dec
mov
xchg
or
dec
ret
pop
adc
fiaddl
cmp
dec
push
pop
mov
mov
sarl
lcall
pop
mov
xchg
mov
cltd
pop
test
xor
jmp
push
hlt
sbb
mov
ficoms
sbb
lcall
or
lock
movsl
cmpsb
push
scas
movhps
cmp
lods
imulb
std
push
lea
pop
cwtl
ret
and
pop
or
xor
outsl
pop
cwtl
mov
xchg
stc
mov
addr16
out
push
mov
push
mov
aas
push
pushl
loop
push
mov
faddl
andb
push
pop
in
lods
jp
hlt
pop
and
lods
insl
jle
lea
subb
icebp
pop
jns
sub
stc
imul
sbb
fiadds
push
or
call
pop
inc
js
jo
cmc
int
movsl
ret
xor
lds
xchg
je
imul
fisttpll
fcmovnu
fdiv
test
int
repz
icebp
mov
daa
cmp
adc
mov
rclb
pusha
mov
dec
jecxz
jae
rorb
nop
or
js
frstor
push
xchg
and
jmp
mov
test
sbb
ficompl
loopne
loopne
mov
test
rolb
dec
inc
mov
adc
push
inc
hlt
mov
or
jo
shl
sub
fwait
imul
cmp
jbe
popf
mov
movsb
into
popf
outsb
out
inc
sub
imul
xor
inc
pop
adcl
ds
inc
dec
mov
je
adc
das
mov
cli
les
adc
jle
mull
int
decb
pop
stos
lds
pop
adc
push
xchg
or
push
mov
cmp
add
aam
dec
lahf
rcrl
mov
repz
xor
ljmp
cmp
and
adc
sbb
imull
inc
arpl
cmpsl
jl
ficoms
cmp
mov
test
mov
cmp
push
ror
add
sub
sti
loopne
xchg
data16
jge
pop
mov
pop
test
and
push
mov
fldcw
push
outsb
out
or
dec
cld
cmp
ljmp
or
sub
mov
test
xchg
pusha
mov
ljmp
adc
das
sbbb
lods
jno
loop
je
xchg
adc
adc
xchg
or
pop
ss
xor
and
imul
xor
jmp
pop
in
cmp
sti
std
jmp
xor
adc
nop
mov
dec
lods
ds
xchg
xchg
inc
push
push
movsl
outsl
dec
rol
push
dec
ljmp
pop
shll
scas
decl
inc
add
cmp
pop
lcall
sbb
sub
stc
movsb
les
sub
mov
dec
into
cltd
dec
or
clc
lret
sbb
inc
sarl
test
mov
add
movsl
adc
divl
sub
in
inc
stos
cmc
xlat
or
in
pop
testb
or
push
fimuls
add
inc
mov
jns
cmpsb
aam
imul
mov
in
cmp
mov
jp
out
outsb
xchg
loopne
scas
push
inc
ret
mov
add
dec
out
inc
cmc
sub
mov
ds
pop
jae
cmp
stos
pop
or
adc
mov
or
daa
sub
insl
in
push
cmpsl
mov
push
cmp
sbb
les
add
popa
repz
mov
mov
jl
lds
mov
aam
dec
xor
xchg
mov
test
leave
sub
inc
push
add
dec
cmc
and
rorb
jo
xchg
cmp
adc
xchg
movsb
add
jg
push
call
sbb
push
mov
lahf
shll
lods
fsincos
ljmp
out
cli
andb
aam
xor
xchg
and
adc
shlb
lea
stc
insl
shll
outsb
mov
jge
push
cmc
fbstp
mov
ret
jecxz
rolb
mov
pop
mov
std
int3
pushf
lock
outsl
loop
sub
mov
out
mov
ss
cmpsl
cld
sti
dec
mov
decb
jno
push
adc
scas
push
ljmp
mov
addr16
sahf
pop
dec
stc
bswap
in
push
ret
insl
pop
in
mov
inc
inc
testb
sub
cmpsl
jno
sbb
cmp
testb
repz
xlat
out
mov
cmp
dec
and
cmp
cmp
sub
sub
add
and
ret
mov
add
jbe
jo
aad
sub
add
out
mov
cltd
ret
test
lret
cmp
fisttps
jne
push
pop
fs
and
mov
sub
xor
out
push
outsl
xchg
sbb
sbb
lsl
push
push
mov
call
jo
pop
int3
test
dec
lods
pop
test
add
aam
sbb
stos
fs
push
sbb
shrb
aad
xor
dec
push
mov
rep
mov
sar
andl
inc
sbb
sbb
pop
sbb
xor
frstor
scas
in
lods
pop
les
push
fwait
push
out
fldt
mov
hlt
pop
push
mov
sahf
add
pop
dec
ljmp
xchg
jg
mov
pop
jb
orl
xor
pop
dec
adc
pop
icebp
mov
les
add
pop
adc
aaa
loope
dec
xorb
pop
add
outsb
and
adc
cmc
mov
lret
jne
clc
fldcw
mov
push
test
or
jg
sub
scas
adc
jo
xchg
outsb
bound
dec
sbb
stos
je
orb
push
inc
int3
out
xchg
fsubrl
into
cmp
cmp
mov
jb
add
mov
stc
fwait
sbb
hlt
adc
inc
aam
mov
sub
enter
mov
ds
test
fwait
hlt
lods
fsts
pop
cmp
repnz
out
dec
push
jbe
jmp
jmp
jns
pushf
push
push
lock
mov
mov
add
mov
dec
popf
std
inc
mov
aad
movsb
push
sub
pop
dec
lea
or
fldenv
push
icebp
xchg
imul
sub
adcb
cli
xor
inc
sbb
add
xchg
les
pop
rcll
pushl
add
aas
mov
xor
int3
push
dec
mov
xchg
imul
jg
jnp
pop
mov
jmp
or
stos
or
push
cmp
add
repnz
mov
pop
xor
dec
and
add
sbb
cmp
pop
gs
jecxz
adc
cld
adc
cli
cmpsl
and
in
imul
mov
rol
test
cmp
push
and
lea
mov
shll
and
call
cld
shrb
cmp
dec
adc
sbb
add
jbe
ret
je
mov
jl
xchg
lds
lcall
xor
je
xor
ficoms
fiadds
dec
mov
pop
test
sub
pop
mov
xlat
scas
and
addr16
inc
xor
pop
and
cmp
fimull
jb
pop
or
stc
jns
movsb
jae
jmp
mov
sbb
in
arpl
mov
and
js
pop
add
sbb
mov
call
pop
pushf
jae
pop
sbb
ss
sbb
jmp
inc
lods
xchg
pop
mov
ret
test
xor
or
imull
jnp
xchg
jmp
jg
mov
test
adc
sarb
mov
in
lcall
popf
iret
test
or
add
pop
sub
sarb
ja
movsl
cli
leave
nop
sbb
cmpsb
lds
sti
cltd
dec
pop
dec
ret
adcb
cwtl
or
xchg
rcrl
push
push
dec
ret
adc
and
dec
xor
dec
xor
out
in
fisubrs
jno
mov
lds
mov
imulb
adc
lds
popa
and
lahf
jb
jge
add
stos
popa
fisttpl
dec
push
push
fdivs
or
and
jle
adc
mov
ret
stos
repnz
adc
vpsubd
aas
pushl
ljmp
stc
scas
xor
stos
pop
popf
inc
sub
add
fisttpll
fcomip
cmp
xchg
jb
mov
pop
dec
inc
lods
scas
mov
cmp
cmp
jmp
arpl
or
dec
xlat
leave
lea
lods
aaa
mov
in
add
sub
adc
jp
add
cmp
fs
inc
cmp
dec
pusha
repnz
mov
push
leave
pusha
je
fiaddl
push
fwait
inc
ss
mov
test
test
ds
aam
pop
xor
movsb
xchg
inc
lock
ds
pop
bound
and
adc
xorl
sarl
mov
imul
dec
loop
push
popa
lahf
out
inc
jmp
fcomp
push
lods
lahf
inc
mov
mov
push
sub
ret
test
mov
or
mov
lcall
mull
push
mov
enter
test
sub
rorb
outsl
mov
xor
xchg
enter
bswap
mov
cmp
negl
sbb
lds
and
movsl
loopne
std
out
ds
loopne
out
or
in
or
adc
or
cmp
pop
add
pop
jmp
jns
and
xor
pushf
test
xor
mov
pop
add
or
sbb
mov
scas
mov
sbb
clc
jae
aaa
pop
loope
jns
jle
push
xor
mov
int3
repnz
mov
sbb
inc
mov
mov
cmp
test
jbe
icebp
loopne
call
push
in
enter
stc
clc
dec
test
int
and
mov
lahf
pop
mov
xorb
push
into
jns
aaa
push
mov
sahf
jbe
mov
cli
shll
out
jle
xchg
rcrl
push
shll
ffree
xor
cmp
std
icebp
mov
mov
stos
or
lea
xchg
mov
mov
add
pushf
es
ds
subl
mov
push
shrl
cld
lahf
out
mov
sub
jle
cmp
and
xchg
jge
adc
aas
test
fs
movsb
mov
bound
shlb
movsb
sbbb
repz
sahf
and
out
in
jecxz
gs
cmp
mov
inc
push
rorl
shl
mov
inc
sets
jno
pop
pop
xchg
stc
adc
test
xchg
cli
push
movsl
les
mov
add
push
sub
mov
cli
pop
pop
sbb
testl
mov
dec
xlat
cs
cmp
das
jae
xor
add
cmc
out
and
or
addr16
daa
clc
push
insb
or
rorb
sbb
push
push
dec
pop
and
sbb
push
std
ret
fbstp
cmp
sub
cwtl
icebp
mov
jge
dec
call
mov
jno
jo
jo
fiadds
pop
loope
sub
cmpsb
in
loopne
adc
mov
pop
popf
push
test
rcr
sub
pop
lds
pop
lret
imul
iret
fdivr
push
push
outsb
xor
cmp
and
mov
sti
shr
loopne
scas
mov
inc
das
adc
sub
repnz
sbb
addr16
mov
or
fadds
push
mov
adc
in
cmpsb
hlt
test
ds
xlat
lea
pushf
lods
call
xchg
jp
ffreep
xor
rclb
ja
lcall
sub
dec
outsl
push
sbb
fwait
sub
push
movsb
mov
pop
fiaddl
iret
push
popa
shlb
out
pop
or
incb
jmp
into
shld
fimuls
jbe
sahf
jg
in
push
fs
aad
sub
push
jae
lcall
mov
jmp
mov
cld
shll
xlat
je
aas
jmp
sbb
aam
add
cmp
sub
shl
push
stc
dec
fsubs
es
push
jmp
ljmp
mov
call
fdivr
xchg
dec
dec
fcmovu
or
scas
or
mov
mov
xor
or
dec
sahf
ret
jbe
clc
and
add
mov
lock
fnstcw
dec
jbe
inc
dec
mov
in
push
icebp
lahf
aam
stos
out
and
aam
movb
ret
jae
pop
imul
stc
imul
xchg
sti
sbb
push
arpl
jp
and
pushf
mov
mov
inc
aad
bound
jge
cs
imulb
repz
sub
sub
cmc
in
pop
in
push
or
sbb
and
pop
inc
movsb
xchg
es
fwait
pop
nop
in
adc
or
inc
push
imul
xchg
es
pop
and
xor
test
inc
pop
jge
xchg
fstpt
cmc
mov
xchg
inc
mov
outsl
add
es
leave
xor
jae
cwtl
aas
leave
insb
add
std
jle
push
add
test
adc
mov
lret
jle
sub
stc
insl
and
rolb
lahf
outsl
dec
add
hlt
jp
adc
lcall
out
adc
popa
ret
insl
and
push
xchg
mov
lahf
or
dec
mov
jae
in
lahf
add
and
xchg
popa
push
cmp
out
cmp
jns
jle
ljmp
insb
jge
into
cmp
out
jne
dec
mov
mov
mov
add
mov
sahf
out
stc
lods
sbb
pop
fs
mov
push
pusha
iret
add
or
hlt
test
sub
popf
out
xlat
pop
test
mov
mov
cld
pop
mov
ret
cli
jb
sub
jle
or
movsl
inc
push
dec
sub
pop
gs
outsl
cmpsb
cmc
popf
mov
mov
mov
add
clc
test
xor
xchg
push
add
mov
cmp
test
sub
dec
jl
cmpsb
pop
addr16
cmp
cmp
xor
iret
icebp
xchg
mov
dec
xor
jg
call
mov
mov
rcrl
jle
dec
pop
mov
mov
inc
adc
loop
addb
in
std
into
popf
mov
gs
mov
dec
sbb
mov
pop
jns
mov
mov
into
enter
xlat
push
sub
sub
dec
in
stc
inc
aas
insb
add
sbb
and
mov
xchg
mov
jg
jmp
pop
in
xchg
xchg
inc
cmp
gs
push
es
loope
mov
enter
call
xchg
add
sub
std
or
addr16
jmp
mov
cmpsb
out
add
mov
fsubrl
mov
mov
cwtl
jns
imulb
adc
arpl
inc
adc
mov
inc
fimull
negl
sbb
pop
dec
jp
fwait
testl
xchg
sbb
into
loop
andl
pop
mov
cmpb
add
or
lret
rcrl
scas
inc
jae
mov
lret
outsl
aam
mov
sub
cltd
loop
cwtl
sahf
cmp
jae
xchg
pop
lock
jmp
movsl
xor
inc
les
jae
adc
sub
lods
lsl
enter
scas
sbb
imul
or
mov
jl
and
int
popa
lods
push
aaa
mov
xchg
mov
sbb
out
ljmp
cwtl
xchg
jmp
push
jb
sub
push
pop
cmp
push
inc
adc
xor
inc
add
jae
enter
inc
sbb
adc
jl
hlt
aam
fnstsw
pop
ficompl
mov
xor
mov
inc
cmc
pop
insl
mov
pushl
sahf
jae
cmp
mull
jno
fnstsw
cli
dec
mov
sub
jno
jle
inc
adc
mov
sbb
inc
and
popf
xchg
pop
leave
adc
cmc
lahf
ja
stos
dec
jp
fmul
push
sbb
mov
mov
stos
lods
sub
lret
add
nop
clc
push
mov
xchg
and
add
mov
or
mov
lods
jnp
inc
mov
loop
xchg
into
adc
ret
mov
jbe
imul
mov
push
test
scas
pop
out
mov
push
mov
mov
outsl
pop
movsl
jbe
xchg
lahf
clc
dec
out
inc
ja
mov
adc
imul
cwtl
jl
sbb
loop
outsl
fs
scas
xchg
outsb
test
adc
popf
mov
pusha
fistl
push
jbe
je
mov
repz
sub
fwait
or
int3
ja
dec
mov
xor
scas
mov
mov
fwait
aas
dec
je
out
xor
in
cmp
leave
dec
lahf
add
mov
xchg
mov
mov
mov
pop
cltd
out
daa
lahf
sub
sbb
dec
mov
or
scas
mov
leave
inc
fwait
in
loope
stos
ljmp
sub
clc
jne
or
dec
cmp
mov
or
fistl
sarl
pusha
mov
jge
into
dec
mov
xchg
lcall
aaa
fiaddl
lahf
sahf
jp
hlt
xchg
dec
add
das
jae
das
in
add
xor
jp
sub
push
shrl
fbld
dec
pop
inc
dec
xor
outsb
aas
outsb
mov
imul
sbb
dec
xchg
ds
mov
adc
lea
andl
and
shll
insb
popf
scas
leave
js
jp
sbb
cwtl
les
cld
mov
sbb
test
xchg
into
leave
clc
mov
pop
cli
cmp
sbb
or
adc
sbb
pusha
xlat
and
andl
es
mov
xchg
fcmovbe
js
inc
subl
push
push
mov
fildl
push
loop
or
js
mov
cmpsb
mov
imul
inc
movzbl
cmp
mov
inc
mov
int3
or
dec
mov
lock
mov
fisttpll
or
outsb
testl
mov
or
adc
out
loop
ljmp
shll
mov
adc
push
mov
push
fldt
enter
ljmp
add
inc
xor
inc
les
movb
cmp
std
pop
mov
ficomps
mov
sbb
and
shll
dec
repz
dec
xchg
jge
jbe
push
push
sub
test
aam
add
lock
mov
mov
pushf
pop
es
call
adc
lds
inc
int
push
pop
and
pop
dec
out
repz
cltd
insb
mov
cmp
or
cmp
shlb
out
pop
push
daa
sub
xchg
repnz
into
das
ljmp
popf
lahf
fbld
sub
sub
adc
sbb
dec
fmuls
cmp
and
xchg
dec
mov
xchg
sbb
and
cli
and
in
idiv
aam
jne
mov
dec
lds
jmp
dec
mov
fdivrp
icebp
sub
lods
rcll
pop
pop
je
pop
jge
add
and
add
mov
test
mov
faddl
adc
sbb
aam
mov
xor
mov
pushf
push
mov
add
aam
repnz
dec
cmpsl
sarb
xchg
push
jle
push
pop
jge
jl
mov
adc
mov
lods
fucom
cmp
sbb
je
xor
jo
inc
xor
lock
mov
in
jnp
imul
sbb
dec
loopne
mov
xor
test
loopne
cwtl
ficoms
mov
sbb
mov
or
and
addr16
xor
in
loope
cmp
xlat
test
and
out
jl
js
ret
fidivs
jp
hlt
sub
std
jp
mov
jp
pop
lea
dec
mov
add
jp
pop
inc
lock
cld
or
imul
xor
lods
dec
negl
add
fldenv
sbb
lea
out
sbb
mov
mov
mov
into
test
out
inc
insl
ret
in
pop
add
and
mov
xchg
and
adc
or
xor
in
adc
jmp
mov
mov
gs
jg
push
pop
shl
mov
add
fadds
fsubs
loop
xchg
sarl
jl
aad
lods
fisubrl
test
gs
retw
aaa
insb
add
test
cmp
notl
cwtl
sbb
and
shll
cmpsb
mov
movsl
out
jne
in
xacquire
lret
add
mov
ret
stos
adc
xor
mov
cmpsb
jbe
cli
adc
enter
pop
cltd
mov
jp
scas
or
mov
push
inc
cmp
push
mov
jno
adc
pop
add
in
sbb
add
pop
scas
and
addr16
in
aas
fadd
inc
adc
lret
jge
pop
cs
sub
jbe
adc
loop
cltd
push
popa
mov
nop
sub
sti
lahf
push
jl
ja
mov
dec
fdivs
pop
and
or
and
mov
or
sbbb
out
sub
push
xor
cs
out
mov
and
aad
jge
lock
push
pop
inc
imul
pop
cmc
adc
out
pop
insb
jb
mov
or
aas
sti
std
mov
mov
xchg
jae
add
lret
jno
lcall
leave
jmp
push
scas
fisttps
call
lret
dec
sahf
mov
imul
mov
or
xor
cli
packssdw
repz
push
adc
inc
push
sub
adc
cli
add
xchg
inc
popf
add
dec
lock
loop
push
and
cmc
cmpsl
shll
ror
xor
iret
mov
push
ja
test
cmpsb
jo,pt
mov
outsb
ds
mov
push
stos
sbb
jns
repz
movsb
mov
lods
xchg
mov
les
sub
xor
call
add
loopne
popa
dec
inc
imulb
push
clc
orl
js
lods
jae
cmpsb
xchg
test
and
push
sti
inc
or
inc
ljmp
pop
mov
out
and
inc
movsb
inc
mov
cli
and
int3
out
cld
nop
pop
aam
bound
ss
ret
adc
decl
xchg
lds
push
mov
jl
mov
jno
pop
jo
jae
icebp
inc
sbb
mov
adc
cmpb
xchg
push
dec
inc
fisubl
cwtl
repz
bound
xchg
dec
pop
js
push
lods
pop
pushf
scas
jnp
out
ret
jne
int3
pusha
push
ret
pusha
addr16
cwtl
and
sbb
sti
imulb
jns
adc
lea
mov
stc
insb
scas
sub
lock
xchg
sub
xchg
sbb
insb
test
je
mov
xchg
push
test
popf
cwtl
je
mov
leave
jl
cmp
inc
lds
out
test
sbb
ss
cmpl
mov
imul
aam
sbb
jbe
sti
dec
mov
adc
mov
testb
nop
mov
test
pop
add
and
std
pop
subl
pushf
xchg
out
lret
shrb
xorl
dec
mov
cs
xor
mov
jbe
jp
cmpsl
push
xor
imul
dec
pop
push
xor
dec
test
jno
in
jg
in
inc
pop
psadbw
in
lret
dec
xsaveopt
jp
iret
mov
or
pop
insl
and
rolb
jnp
xchg
clc
dec
jns
testb
cmpsb
mov
mov
shll
inc
ss
aad
ds
loop
xchg
rcrb
dec
ja
pop
add
inc
push
jecxz
push
rcr
mov
sub
pop
inc
xchg
cmpsl
bound
and
pop
imul
addr16
fnstenv
sbb
lods
lods
fdivl
cltd
hlt
cli
pop
leave
adc
add
mov
inc
cmp
inc
add
add
jmp
mov
arpl
inc
xchg
sub
jb
cmpsb
bound
and
mov
lods
inc
sbb
add
lcall
loopne
inc
dec
jge
dec
loop
lea
mov
cmp
xor
es
jg
in
adcl
aam
addr16
je
pop
jae
pop
repz
and
lock
mov
mov
pop
inc
cmp
jle
jno
aam
mov
push
lcall
inc
xchg
inc
es
xchg
sbb
in
jno
stos
fimull
call
repz
inc
adc
lahf
xorb
daa
adc
xchg
stos
insl
sub
mov
in
outsb
int
inc
inc
movsb
sbb
pop
and
sbb
setg
mov
sbb
or
mov
addl
jl
lock
cmp
push
dec
mov
mov
dec
enter
ret
lods
sbb
add
hlt
and
jnp
je
ss
shl
mov
iret
pusha
dec
adc
subl
pop
or
aad
stc
popf
into
outsl
and
inc
push
insl
test
pop
and
xchg
xor
mov
repz
mov
pop
fidivs
dec
jle
out
pushf
cmpb
pop
jnp
iret
std
jmp
xchg
pop
stos
mov
iret
bound
cmc
push
repz
shlb
or
jl
dec
ud2
in
fiaddl
mov
hlt
push
mov
mov
mov
out
jnp
int
in
pop
sahf
push
push
sbb
stc
orb
adc
pop
jbe
lea
xchg
icebp
arpl
test
roll
movsl
stc
sbb
jg
or
int3
fsub
push
jb
adc
stos
arpl
sti
cmp
fmuls
insl
mov
inc
fwait
dec
insb
stos
add
aaa
rcl
sbb
add
pop
sub
idiv
xchg
aad
xchg
jecxz
movsl
aad
xor
in
movsb
jecxz
adcb
ljmp
jg
mov
aam
ds
push
lds
lods
jmp
daa
cmpsl
or
push
aad
cmp
sbb
xchg
stos
lea
mov
cmpb
incl
cmp
leave
sub
mov
add
lret
jecxz
dec
enter
les
repz
fs
cmp
iret
pushf
inc
popa
push
pop
inc
inc
cli
mov
mov
push
add
jp
jae
pop
lahf
fstl
inc
data16
pop
shlb
sbb
hlt
xchg
lock
jne
mov
fstps
xchg
jl
lods
fs
out
rolb
dec
or
stc
dec
in
insb
push
stos
pop
cmp
mov
or
aas
and
adc
and
pop
push
call
jne
nop
adc
jb
adc
push
aas
add
lahf
pop
mov
icebp
sbb
dec
mov
dec
mov
mov
dec
sbb
cmpsl
adc
pop
cmp
push
inc
xchg
je
push
xchg
jp
arpl
es
inc
je
add
lea
push
or
mov
lcall
cli
mov
andb
cltd
mov
out
push
icebp
inc
cwtl
xchg
jno
mov
add
push
hlt
push
fcompl
lds
and
cltd
mov
pop
dec
cmpsl
xor
es
dec
inc
adc
cmp
into
cmp
mov
imul
xor
jnp
mov
ret
into
mov
mov
pop
js
in
lahf
push
jo
ret
call
add
xchg
cld
mov
popa
sbb
push
nop
xchg
scas
jne
fs
pop
xor
das
adc
pop
out
iret
fwait
and
test
and
add
in
lahf
iret
xchg
dec
icebp
cmp
popf
push
jmp
cltd
mov
leave
imulb
sbb
add
push
ljmp
jmp
dec
fists
loope
mov
mov
in
fsubs
or
sti
push
sbbb
in
ljmp
xchg
call
decb
ds
pushf
fld
mov
mov
sub
ja
jge
jno
ffreep
push
jne
adc
cli
stc
pop
lea
jae
in
dec
add
sbb
insb
popa
pop
ds
mov
mov
mov
dec
inc
out
inc
out
mov
mov
fsubr
movl
jb
pop
out
push
insl
data16
iret
test
adc
add
rol
lods
icebp
scas
sti
aas
test
jecxz
fwait
push
jbe
fsubr
push
push
std
push
cmc
in
stos
outsl
mov
mov
mov
inc
mov
ljmp
sub
push
rcl
loope
je
scas
popf
inc
dec
push
sbb
add
iret
imul
push
and
out
jge
mov
icebp
outsl
push
mov
fiaddl
xchg
enter
test
inc
mov
mov
mov
ret
decl
pop
leave
jnp
inc
mov
stos
mov
pop
push
rcl
jno
scas
mov
push
pop
mov
inc
xchg
out
call
cs
mov
pop
in
enter
leave
scas
lea
lahf
fdivrl
lods
repnz
jnp
push
xchg
inc
in
mov
adc
insb
push
pop
pop
and
out
or
jb
hlt
cltd
insb
sbb
in
add
pusha
jmp
and
jecxz
inc
xlat
cwtl
loopne
ja
ljmp
sbb
pop
mov
pusha
dec
cmp
ljmp
imul
shrl
ja
pop
pop
add
sub
cld
add
fistl
or
and
fwait
psubsb
jg
shll
pop
in
ja
subl
inc
sbb
cmc
test
daa
push
lcall
out
cmp
cmp
or
ss
xor
dec
lock
loope
cmp
mov
dec
mov
insb
aad
dec
xchg
xor
mov
es
pop
push
into
xor
ljmp
cs
loope
pop
lock
adc
insl
pop
imul
cmp
es
fs
dec
out
cmp
jb
hlt
lcall
js
pop
mov
je
push
imul
and
dec
test
sar
xor
add
out
das
je
xor
dec
cwtl
lods
and
add
jg
filds
pusha
bound
lea
inc
mov
inc
push
into
stos
push
outsb
lahf
fisubl
sbb
add
lock
out
repz
test
add
push
movsl
movd
nop
jmp
jmp
mov
loope
aaa
mov
mov
test
adc
fxch
cmp
xor
out
and
sbb
jbe
inc
push
mov
lahf
push
inc
push
enter
leave
inc
jmp
arpl
fidivs
dec
xchg
sub
insb
xor
adc
clc
lcall
push
pop
gs
mov
mov
xchg
xlat
and
mov
push
stc
push
push
sub
imul
fidivrl
dec
cmc
inc
ja
int3
mov
scas
js
lret
imul
and
push
movsb
dec
inc
pushf
out
push
cmp
adc
sarl
mov
jp
dec
pop
stos
and
push
dec
pop
jne
lock
std
cmp
enter
in
mov
ret
test
test
arpl
hlt
fisttpl
adc
dec
mov
cwtl
xchg
sti
and
mov
test
mov
cmp
insb
icebp
xchg
cmpsl
sbb
sbb
and
xor
mov
push
xchg
cltd
sbb
push
xchg
in
loop
push
les
cmp
xchg
jb
aas
push
add
and
mov
cld
jg
push
iret
add
mov
xchg
or
add
mov
das
mov
xchg
imul
int
loopne
es
aaa
pop
mov
rorb
sbb
lcall
ljmp
out
pop
fst
shl
sarl
dec
hlt
mov
xchg
mov
hlt
xchg
sti
jl,pt
mov
push
xor
and
pop
scas
nop
int3
outsb
jp
icebp
repz
fistpl
stos
rorb
sbb
push
sar
sub
xchg
mov
add
loope
rorb
mov
rcll
shlb
fcomps
ficoms
push
int
dec
inc
or
and
icebp
arpl
mov
fs
or
leave
je
mov
xchg
mov
fldenv
push
sbb
lret
jmp
pop
stos
pop
mov
sbb
movsl
jnp
dec
pop
outsl
or
ljmp
push
sbb
ss
xchg
adc
sub
pop
inc
add
aam
fsubrl
pop
leave
mov
push
cltd
movsb
scas
jbe
jnp
xor
call
cmp
fs
mov
or
cltd
scas
xchg
lahf
stos
or
xor
pop
jb
sarl
pop
jmp
cmp
pop
rcl
or
es
mov
ret
jae
aad
insb
stos
cmc
int
movsl
cwtl
mov
or
cmp
jo
sub
pop
push
aam
pop
add
add
popl
fadds
mov
xlat
jb
or
push
dec
fdivr
cltd
or
push
iret
scas
idivl
lret
jg
rcrb
push
sub
add
sbb
dec
sbb
adcl
icebp
lret
pusha
sbb
push
dec
scas
sub
xchg
les
sbb
cli
mov
xchg
push
inc
jne
xor
int3
popf
pop
lods
pop
dec
les
lock
mov
adc
pop
data16
cli
sub
adcb
sbb
pop
cltd
ds
outsb
dec
jp
add
les
daa
cmp
shrb
mov
mov
add
dec
sbb
xchg
xchg
dec
mov
movsb
pusha
sub
jbe
mov
dec
mov
out
sub
or
data16
push
mov
push
lock
dec
movsl
iret
jo
or
inc
popf
or
pop
push
xchg
fwait
or
ror
fdivrp
ret
pusha
mov
add
push
mov
out
shr
popa
out
jne
sub
lods
pop
lcall
xchg
in
add
hlt
aas
jnp
incb
aam
adc
xor
xchg
jl
jle
dec
pusha
rol
rorb
lahf
push
dec
cmpsl
cmp
xor
dec
add
int3
stos
sub
popf
cmp
int
subb
pop
aas
arpl
jl
pusha
mov
lss
cltd
rorl
out
bound
cli
sbb
mov
mov
out
pop
ret
mov
aaa
out
lret
popf
cmpb
test
dec
xor
lods
cwtl
lods
mov
dec
sub
inc
shlb
iret
jns
std
fsubs
sti
nop
jne
rcrb
sub
dec
outsb
ja
pop
adc
flds
sarb
adc
ret
arpl
cmp
push
sbb
imul
sar
or
push
mov
mov
inc
sbb
push
fwait
pushf
shr
jg
jmp
add
ret
or
and
fadd
hlt
scas
xchg
sbb
cmpb
mov
scas
sub
fldl
stos
test
xlat
add
imul
xchg
arpl
sbb
mov
jb
pop
push
loope
adc
inc
adc
in
out
push
push
into
xchg
in
mov
pop
mov
or
jbe
clc
sub
lods
or
cld
rolb
or
mov
stos
in
cld
push
rorb
xchg
jp
in
lahf
jnp
sbb
fwait
clc
sti
inc
push
push
pop
aam
mov
mov
stos
or
pop
adc
es
mov
pop
cli
push
jl
mov
movsl
test
imul
mov
xor
lahf
in
cmpsb
rorb
xlat
mov
push
inc
out
sub
jo
mov
lea
sbb
es
fsubrl
add
or
fadds
cwtl
movsl
loop
inc
loope
cli
inc
xchg
mov
add
outsb
test
fcoms
shl
out
das
mov
mov
lds
dec
and
xor
pop
push
pop
std
cmp
cmp
sub
adc
out
andb
xor
test
ret
stos
dec
int3
xor
ret
negl
shr
add
outsb
fsubrl
test
xor
mov
fs
fildl
or
and
or
scas
inc
and
out
push
add
decb
loope
addr16
mov
sub
fldl
jne
cld
loopne
insl
fsubrl
add
stos
enter
mov
cs
clc
repnz
push
mov
jae
sbb
or
bound
pop
lret
cli
lods
imul
hlt
imul
les
sbb
in
jae
out
push
sbbl
mov
je
sub
ja
inc
fiaddl
lret
mov
jns
mov
aas
xchg
mov
mov
nop
inc
enter
int3
lea
enter
js
cmc
sarb
dec
xor
pop
push
imul
and
loopne
jp
sbb
mov
mov
mov
pop
push
pop
aam
aam
mov
xchg
mov
inc
sub
pop
stos
popf
mov
cmp
jo
jg
and
push
nop
clc
dec
xchg
sti
dec
or
add
or
sub
hlt
push
bound
nop
ja
push
sti
and
sub
push
outsb
insb
sarb
push
xor
test
mov
or
fdivrp
in
fs
js
adc
dec
lret
add
imul
lds
jecxz
xchg
pop
sbb
push
sbb
cmp
ffreep
pusha
jb
xlat
fdivr
es
pop
push
ljmp
add
cli
push
cmp
or
cwtl
out
mov
mov
test
add
jmp
jmp
sub
adc
sti
adc
xlat
testl
outsl
scas
icebp
mov
and
bound
lock
jnp
jno
mov
scas
cld
add
mov
adc
stos
and
scas
and
jae
cmp
test
jmp
lcall
gs
and
iret
insl
iret
lds
fiadds
push
les
ds
jecxz
mov
adc
dec
mov
fdiv
out
and
push
push
or
fisubs
out
mov
hlt
xlat
and
pop
mov
push
es
pop
cmp
js
mov
addr16
cmc
push
popa
mov
push
in
adc
adc
scas
mov
adc
daa
daa
movsl
jmp
loopne
push
pop
pop
sbbb
pop
lock
pop
addb
int
adc
lea
inc
or
fwait
addr16
mov
push
mov
ds
fnstenv
cld
xor
xchg
sbb
into
cwtl
mov
xchg
test
cmc
fwait
movsl
addb
xchg
in
sbb
lock
nop
push
cmpsl
pop
jnp
mov
xor
push
int
pop
fnstcw
inc
ret
sub
mov
add
out
sub
adc
dec
nopl
cmp
cli
mov
inc
jle
push
xchg
ss
xchg
pop
fimuls
js
pop
xchg
push
pop
imull
sub
outsl
sub
adc
sahf
xor
or
ret
sbb
test
add
jp
push
mov
add
aam
aad
inc
xor
adc
sbb
sub
xor
mov
pop
mov
frstor
add
lcall
mov
sub
popf
imul
sbb
pop
jge
mov
jge
lret
insl
xchg
xor
adc
push
fists
push
pop
out
mov
insl
test
fucomi
dec
in
or
add
push
fidivrs
mov
mov
imul
dec
sarl
dec
push
jmp
add
cmp
leave
jno
stc
jmp
popf
sub
jb
add
cmp
add
aas
ljmp
xor
or
and
popf
mov
andl
push
stc
xchg
shrb
hlt
jbe
mov
jmp
and
out
mov
pop
mov
aas
arpl
insb
push
in
imul
dec
divb
inc
fcmovb
mov
jg
dec
out
mov
or
xchg
xor
int
into
repnz
xor
test
sahf
call
cmpl
push
push
adc
sub
cmp
cmc
push
loopne
enter
or
fsts
jae
adc
movd
rol
lret
aaa
xchg
xchg
pushf
shlb
mov
leave
jae
nop
sub
jmp
clc
jl
pop
mov
jecxz
jne
fs
fmuls
mov
inc
sarl
cmc
pop
jno
fstl
inc
ss
stos
adc
lds
xorl
clc
sub
pop
jge
test
mulb
cmpsl
pop
dec
jae
dec
ret
xchg
cs
addr16
movntq
lods
dec
cmp
jne
and
in
ljmp
pop
outsb
lods
mov
insl
es
mov
fsubr
inc
jno
jo
xor
fcmovnb
mov
mov
movsb
mov
inc
cmpsl
int
pop
mov
pop
mov
pop
into
mov
push
mov
pop
xor
push
aaa
cld
data16
gs
stos
mov
test
int3
adc
clc
fistpll
xor
pop
insb
js
jecxz
sbb
or
stc
in
and
mov
mov
push
arpl
add
sarl
roll
jns
mov
shlb
imul
mov
in
movsl
out
sub
add
andb
cwtl
cmp
popf
push
stc
lods
inc
ljmp
cmpl
xchg
push
pop
rol
lahf
fnstcw
movsb
sahf
pop
sub
jle
call
xchg
mov
jae
idiv
cwtl
push
repz
cmc
loope
pop
pusha
sub
lahf
iret
ljmp
inc
aas
mov
mov
pop
out
mov
sarw
xor
push
mov
loop
xchg
insb
or
test
out
mov
clc
inc
outsl
je
pop
mov
leave
ljmp
push
sarl
lahf
data16
jno
test
push
mov
nop
pop
das
std
jnp
xchg
mov
imul
inc
jg
outsl
push
out
or
pop
repnz
in
sbb
ljmp
insl
mov
inc
lock
xor
outsl
adc
lods
jae
imul
inc
add
stos
addr16
fstpt
lcall
ret
pop
lret
or
pop
popf
fs
hlt
inc
inc
sbb
ljmp
mov
sub
push
ja
or
xor
test
pop
sub
inc
and
fwait
sub
lahf
and
cld
dec
idivb
sbb
push
loopne
jae
mov
rclb
pop
rolb
mov
fsubrl
or
cmp
xchg
sbbb
scas
xchg
mov
jbe
mov
jge
dec
es
adc
mov
mov
rcrl
addr16
stos
ret
jp
mov
mov
ret
mov
cmp
mov
or
mov
loopne
mov
ret
fwait
mov
pop
adc
mov
push
mov
orb
fsubl
pushf
or
and
out
fcmovnbe
out
insl
clc
in
iret
pop
rolb
inc
add
or
outsl
arpl
mov
js
jg
decl
dec
lds
ja
mov
cmc
daa
das
stos
or
int3
stos
shrl
jne
dec
jp
sub
andl
out
in
add
fisttpl
and
cmp
lock
sahf
fsubrl
ret
sarl
or
sbb
fnsave
jmp
cli
gs
lock
mov
push
insl
push
mov
push
int
nop
add
jecxz
inc
or
sub
add
cmp
add
test
cmpl
cmp
das
jae
push
movsl
iret
or
pop
sbb
sbbl
lds
mov
arpl
mov
dec
sbb
push
add
mov
sbb
add
mov
cmpsl
add
adc
push
adc
mov
movsl
pushl
std
cmpsl
pop
pop
mov
adc
rol
and
outsb
lret
inc
push
je
ret
pop
ret
nop
pop
or
leave
sub
xchg
mov
push
sub
or
dec
lahf
jecxz
and
push
fdivs
mov
cmpsb
outsb
xchg
fisubs
dec
aas
add
or
fildl
test
movsl
fs
icebp
jo
cmpsb
push
into
sub
push
lds
ret
jns
and
pusha
sub
or
push
inc
add
push
lcall
add
repnz
stos
fs
cwtl
sub
insl
mov
xor
xlat
repz
and
fdivs
push
mov
cmpsb
insl
push
fs
fsin
cld
orb
sub
sbb
repnz
lods
xchg
xor
fcomps
jmp
aam
test
int3
fidivrs
dec
negb
popf
mov
fisubs
add
or
and
jns
pop
stos
mov
jbe
sbb
bound
std
outsl
aad
jmp
jecxz
mov
insl
xchg
ss
jg
xor
pop
mov
enter
inc
popf
and
cmp
mov
push
mov
cs
js
inc
mov
sbb
loope
push
test
mov
inc
les
inc
push
mov
jnp
jg
push
out
lret
ret
xor
bnd
push
sbbb
andl
in
data16
das
cld
in
xchg
add
mov
ja
mov
mov
clc
xlat
jg
lret
ss
push
dec
xchg
shlb
cmp
loope
aaa
dec
ljmp
sub
movl
divl
push
seta
loop
vmwrite
aas
cmp
inc
jnp
push
sarl
sbb
scas
xchg
mov
add
lds
sub
sub
add
imul
insl
insb
int
cs
adc
in
aaa
daa
cmpb
and
lods
mov
add
sbb
inc
jp
mov
push
enter
nop
jge
in
cmp
add
xor
lea
inc
xchg
fcomip
xchg
cmp
push
pushf
or
pop
cmp
cmp
test
lret
filds
jnp
sub
cmpsb
jb
movsb
dec
je
test
push
inc
xchg
jmp
clc
adc
mov
stos
add
or
popa
sbb
push
call
lds
mov
je
mov
mov
aam
add
pop
or
jns
ret
mov
mov
or
jge
sbb
scas
js
push
xchg
push
jmp
jno
test
inc
or
popa
or
jne
testl
je
test
xor
sub
add
pop
cmp
jnp
push
sbbl
jns
mov
xor
jae
imul
add
add
mov
lock
int
push
cmpsb
popf
bound
dec
cmpsb
lret
inc
call
dec
mov
sbb
mov
pusha
lret
incb
sub
ret
pop
int3
jns
cltd
ss
ja
xlat
cmpsl
inc
ret
clc
decb
aas
push
mov
mov
inc
aad
adc
push
fidivrs
xor
ja
loopne
sub
imul
mov
lock
popf
jno
fcompl
mov
mov
mov
out
loope
test
jo
shr
cli
inc
inc
push
or
pop
or
and
jl
dec
mov
ja
add
mov
push
push
sbbb
leave
sbb
repz
sahf
hlt
inc
fisubrs
xlat
pop
xchg
dec
adc
sub
mov
cld
pop
addr16
rol
pop
cmp
test
sub
jg
or
lret
jae
jnp
lock
dec
mov
cmpl
jo
inc
in
fstps
std
or
push
in
dec
scas
pop
dec
push
cmpb
insb
cmp
mov
push
test
cmp
addl
pop
les
xchg
mov
jle
and
idiv
movsl
sub
or
adc
push
mov
add
push
jns
jo
mov
add
and
aas
stc
or
push
or
sbb
xlat
js
lcall
mov
test
xchg
cmp
sub
pop
fcmovnu
out
mov
and
test
jbe
cli
adc
sahf
cmp
loop
mov
mov
xor
jns
lret
inc
mov
xchg
dec
push
or
ret
mov
icebp
aaa
subb
jge
xorb
jl
lahf
jp
pop
pop
aam
mov
pop
mov
or
shr
ljmp
xchg
lock
push
je
hlt
pop
xor
add
cs
sbb
cmc
xorb
lock
pop
push
je
ret
mov
test
mov
jg
jl
pop
jmp
addr16
test
leave
sub
rcrl
data16
cmp
mov
jne
pop
adc
inc
mov
jnp
cmpsl
out
popf
jnp
push
cli
movsl
stos
or
leave
and
int
jl
rcl
lods
test
adc
gs
out
and
sbb
mov
int
jnp
int
mov
pop
push
push
xchg
rcrb
lret
outsb
adc
andb
sbb
cmp
sbb
dec
cltd
lea
iret
push
push
test
adc
inc
repz
imul
cmpsb
call
addr16
dec
jge
ret
sbb
or
xchg
nop
loop
add
imul
push
mov
shlb
bound
cltd
call
and
scas
mov
movl
push
das
dec
add
jno
xchg
repnz
add
inc
mov
dec
imul
lods
mov
push
repz
add
dec
cmc
ds
cld
nop
cmpsb
stos
popf
data16
pop
callw
cmp
lcall
ljmp
cld
je
aas
dec
and
xchg
imul
in
cmp
out
test
xchg
mov
lods
into
mov
int3
dec
enter
lock
mov
imul
pop
fwait
pop
imul
sub
dec
xlat
xchg
xor
out
std
inc
ljmp
add
cmpb
lods
lods
push
xchg
mulb
xor
pop
xor
mov
adc
sbbb
out
das
cmpsl
call
notl
sbb
mov
dec
sbb
repz
pop
xor
insb
add
jnp
rsqrtps
or
fs
movsb
testb
inc
add
es
cmp
xchg
xor
addr16
stos
mov
sub
jge
mov
inc
dec
fs
mov
gs
das
cli
mov
mov
or
ffree
lds
fidivs
jecxz
sub
dec
push
inc
sub
cmp
rorl
sub
pusha
js
mov
inc
nop
jmp
adc
dec
pop
inc
xrelease
sub
repz
pop
addr16
call
in
sbbb
loopne
cmp
out
sbb
mov
and
xchg
jno
cld
xchg
pop
in
xor
mov
insb
out
loope
mov
pushl
test
mov
gs
mull
loopne
loopne
inc
jg
and
add
mov
xchg
decl
xor
adcb
fsubl
dec
mov
push
cmp
movsl
lret
push
flds
inc
pop
push
dec
popf
in
xchg
mov
fwait
push
xor
outsb
add
xor
repz
pop
movsb
inc
add
cmp
xor
loop
je
dec
loope
pop
imul
push
loop
jns
gs
fdiv
leave
pop
daa
pop
jb
arpl
mov
enter
dec
movsl
add
adc
leave
dec
hlt
xor
inc
dec
fwait
cmpsb
out
add
and
aaa
xor
push
negl
or
lock
in
mov
sub
insb
push
mov
lahf
xchg
adc
int
cltd
in
mov
call
lret
mov
mov
shll
out
shr
push
test
out
repnz
add
sub
sub
jmp
jne
push
or
lret
xchg
shrb
or
lahf
xor
jbe
lret
in
or
jge
fdivrs
xchg
clc
sti
out
add
in
popf
sub
scas
jg
pusha
xchg
mov
es
add
scas
scas
sbb
ja
das
or
add
adc
aaa
stos
xchg
or
insb
jbe
arpl
dec
sti
loopne
les
stos
das
xor
fcompl
xor
pop
lahf
or
je
push
adc
je
repz
sarb
ret
mov
adc
aas
jb
pusha
or
loope
fwait
arpl
push
iret
adc
xor
addr16
sbb
dec
lret
cmpsb
pop
loope
xchg
ja
sahf
jbe
pop
loop
mov
sbb
xchg
pusha
mov
lock
repz
adc
in
add
imul
cld
mov
mov
fcompl
lock
adc
push
or
je
pop
xor
jno
sbb
cmpsl
fnstsw
xor
sti
lods
mov
inc
inc
push
fistps
pop
sbb
pop
push
push
mov
lods
mov
jae
lahf
pop
cli
cmpb
icebp
fildll
add
sub
jecxz
je
add
sub
pop
push
fs
pop
sbb
aam
popa
add
cmpl
sbb
or
ret
lret
leave
cmp
pop
xor
mov
fs
lea
mov
mov
cwtl
dec
push
fcmovnbe
jecxz
xchg
sub
outsb
shlb
stos
loope
lcall
jg
imul
shr
sub
jns
jmp
icebp
cwtl
adc
imull
fcomp
push
je
sti
cs
arpl
or
pop
outsl
mov
jns
push
xlat
test
dec
nop
iret
rorb
mov
mov
idiv
mov
orb
nop
sahf
push
jl
add
into
cmp
fistpl
mov
mov
xchg
mov
mov
out
mov
add
lahf
sarl
das
enter
in
movsb
mov
jbe
add
fstpl
xchg
loopne
fldl2e
add
imulb
clc
vpcmpeqd
push
es
or
cs
jb
arpl
jp
lock
test
idivb
xchg
clc
pop
gs
xchg
mov
and
les
test
leave
jge
dec
adc
mov
dec
pop
add
mov
aad
insl
pop
mov
nop
jns
or
lahf
push
fmull
adc
repz
jecxz
in
pop
sbb
dec
stos
or
int3
lret
sbb
daa
add
xorb
stos
pop
pop
pop
jmp
outsb
sahf
inc
or
ret
pusha
xchg
stos
mov
rolb
ja
push
or
mov
popa
sti
sbb
call
xor
inc
sub
in
push
fiadds
mov
aam
loope
data16
rorl
out
cmp
lds
int
dec
mov
mov
sbb
test
inc
sbb
mov
addr16
lahf
inc
shll
mov
dec
shrb
xchg
fdivrs
lret
rcrl
loopne
cwtl
cmpsb
arpl
cwtl
sbb
test
or
dec
add
xchg
mov
sub
stc
jb
pop
xchg
lods
pop
addr16
xchg
mov
mov
lahf
rol
mov
jl
mov
push
xchg
cmp
sti
rcrl
or
inc
es
lret
imul
jae
jmp
cmp
and
pop
push
lahf
or
es
xchg
dec
xchg
xchg
inc
inc
mov
cmp
inc
mov
cmpsb
xchg
icebp
jae
test
push
rolb
ds
mov
shr
push
mov
push
mov
mov
or
pop
mov
leave
inc
mov
xor
mov
fdivrs
pop
push
mov
lea
out
add
ds
and
inc
push
movsb
outsl
add
negb
sbb
decl
ret
sub
pusha
adc
bound
sub
dec
jmp
adc
imul
pop
popa
hlt
rorl
pop
xchg
out
inc
popa
imul
dec
mov
arpl
mov
js
out
xchg
scas
mov
das
lea
mov
pop
inc
addr16
ja
xor
and
in
orl
lret
les
jae
jg
mov
in
aam
adc
popa
push
mov
sub
jae
sti
icebp
sub
mov
xor
pop
notl
pop
and
jae
jbe
clc
pop
out
sahf
pop
xor
lock
imul
fstpt
test
sub
std
popf
xlat
fbld
push
dec
and
inc
sub
out
xchg
mov
shrl
stos
add
sar
out
aaa
mov
cmp
lahf
in
enter
test
je
fldcw
je
icebp
mov
sti
mov
repnz
loope
loop
movlps
mov
jb
sbb
push
pmaxsw
xchg
or
pop
adc
push
shll
cld
mov
push
mov
add
mov
add
test
mov
jmp
cmp
mov
jecxz
pop
int3
imul
repnz
orl
sbb
inc
push
sti
jb
xlat
mov
xor
ret
inc
lea
cmp
cmp
mov
divl
fs
sbbl
das
cmp
inc
rolb
sub
iret
dec
dec
cmpl
imul
adc
lahf
aam
mov
in
int3
mov
xor
mov
jae
jecxz
xchg
aad
in
outsl
push
fcomip
push
and
shrb
dec
pop
xor
out
mov
mov
and
and
pop
cmp
lret
cmc
or
das
fildll
ljmp
aas
push
roll
push
mov
push
or
mov
xchg
std
push
xor
enter
pop
dec
xor
xor
out
adc
sbb
insb
ffreep
and
ret
dec
jnp
inc
insl
negb
add
mov
sahf
mov
push
sbbb
or
into
or
xor
mov
and
or
jmp
push
add
inc
lret
push
ljmp
lret
stos
movsl
jle
sbb
or
clc
push
or
sub
shll
mov
movsb
hlt
jno
cmp
mov
cmpsl
out
sti
ret
cmp
pusha
xorb
dec
jns
out
pop
bound
mov
fwait
cwtl
fmulp
incl
les
out
mov
xor
push
push
inc
cmp
divb
cmovo
or
mov
jne
mov
out
xor
movl
dec
orl
rcr
in
cmp
loopne
mov
mov
and
mov
xor
mov
xchg
jle
mov
test
frstpm(287
shrl
jge
ss
fldenv
mov
out
cmpb
pushf
fistpll
mov
push
xor
mov
jb
cmp
sahf
je
cmp
dec
fstps
lret
mov
push
push
sbb
popf
cmp
data16
fdivs
xchg
or
mov
dec
into
fsubs
mov
dec
pop
mov
sbbb
ret
jecxz
mov
xor
mov
xchg
fstpt
rcl
add
mov
cwtl
sarb
xor
adc
imul
jl
or
adc
or
pop
fs
dec
fstl
nop
out
or
stc
test
mov
push
in
xor
and
and
push
jbe
jbe
aaa
out
nop
js
test
or
push
push
stos
ss
push
pop
mov
adc
cmp
sti
mov
stc
rcrl
push
xchg
out
xchg
jo
add
insb
iret
inc
push
push
inc
test
jno
mov
lds
pop
jns
jl
orb
push
push
repnz
cmp
cld
add
jno
add
not
mov
jno
mov
sub
xor
jbe
and
cmp
add
ss
cmp
pop
sub
jle
fisttpll
andl
adc
mov
mov
pusha
es
repnz
sub
jge
adc
and
mov
jo
pop
dec
aas
mov
inc
cmpb
push
xor
out
inc
xchg
mov
sub
insl
in
or
jmp
movsl
js
dec
pushf
aad
subl
dec
leave
adc
adc
imull
mov
sub
testl
sbb
fnstsw
fwait
and
pop
add
mov
add
into
stos
push
pusha
lret
cmpsl
xchg
mov
inc
and
repz
lods
les
pop
xor
ret
mov
jb
push
jo
add
es
cmpsb
pop
lods
add
aam
lods
mov
sub
xchg
jmp
push
scas
std
lock
and
fstpt
stos
or
data16
pop
dec
cli
test
xlat
mov
bound
mov
dec
sahf
pushf
fistpll
into
sbbl
iret
clc
sbb
scas
jb
repnz
testl
fimuls
int3
mov
push
lret
xchg
mov
inc
xlat
fadds
mov
pushf
pop
mov
test
test
movsb
gs
out
jecxz
add
fimuls
mov
push
pop
nop
fcoms
and
mov
mov
mov
insb
test
adc
mov
jmp
jb
mov
sahf
mov
gs
and
int
inc
sahf
ss
mov
nop
cmp
xchg
popf
or
orb
sbb
and
int
inc
sub
sub
mov
jae
mov
pop
push
add
mov
xchg
stos
fsubs
and
dec
fnstsw
lods
dec
insb
jmp
push
mov
inc
stos
mov
in
or
aas
push
and
lods
mov
stos
pop
adc
mov
ja
cld
sub
cmp
adc
ret
loopne
adc
pop
dec
lock
fcompl
mov
in
loope
mov
lea
or
in
mov
cmp
push
out
dec
push
scas
testb
cmpsl
mov
adc
aam
adc
imul
or
mov
mov
scas
lods
rorl
sbb
les
sti
repz
in
gs
mov
mov
sarb
lret
cmpsb
add
and
xchg
in
mov
sbb
cmpsl
out
rcrl
mov
xchg
cwtl
mov
mov
repz
fnstenv
insb
movsl
cmpsb
in
mov
mov
mov
jns
cli
jge
in
inc
pop
mov
ljmp
xchg
add
xorb
popf
inc
jle
xchg
hlt
ljmp
sbb
out
xchg
fwait
mov
add
inc
jne
out
cmp
in
imul
and
xor
jle
les
adc
mov
mov
adc
test
cmpsb
mov
mov
pop
add
or
fdivrl
shl
jne
lea
sti
push
mov
cmp
mov
popa
inc
repnz
ss
mov
cmpsb
lcall
call
or
cmp
dec
mov
xchg
pop
sbb
fistps
int3
hlt
or
ret
jnp
lcall
xchg
inc
jne
or
mov
mov
jmp
fstps
test
dec
int
jno
js
es
mov
jmp
pop
dec
cmp
inc
lods
arpl
sbb
xchg
sbb
repnz
adc
lret
xchg
pop
cmp
jmp
shll
jecxz
cmpsl
lods
push
pop
sti
mov
dec
sbb
or
lods
shrl
fsubrl
inc
mov
xor
mov
nop
mov
stos
ss
and
pop
or
jbe
fidivs
imul
sbb
sub
sbb
xor
dec
loop
jb
rorb
clc
inc
cmc
cmp
inc
mov
cmpsl
push
clc
stos
jge
mov
movsb
out
pop
test
lcall
add
adc
lea
ror
js
pop
sbb
jb
pop
scas
xchg
adc
mov
pop
fildll
pop
pop
hlt
mov
push
add
mov
lods
cltd
imul
push
fistpl
mov
pop
cmp
or
std
insb
sub
sar
cmp
mov
xlat
sub
xchg
or
lahf
xchg
pop
fidivrl
mov
inc
inc
dec
xor
enter
mov
mov
fstpl
push
push
sahf
push
sub
loopne
rorl
cmp
cs
jge
stc
and
sahf
repnz
shll
jae
faddl
xchg
and
xor
mov
jg
inc
or
xchg
lods
or
push
push
pop
sub
dec
cmp
or
push
xchg
adc
mov
cmc
and
in
lcall
inc
jo
fcoml
pop
mov
movsb
into
jo
cmp
movsb
int3
cmp
sbb
call
mov
fdivrl
adc
out
out
pop
push
add
mov
into
aas
sarl
cli
or
in
jmp
imul
andb
mov
ret
popa
mov
lds
add
sbb
jmp
ljmp
xchg
bound
or
sbb
xchg
cmp
fldcw
popl
bound
add
pop
pusha
cmp
lods
xchg
jae
push
mov
cwtl
aad
inc
arpl
js
or
sbb
pusha
push
cmp
fistpl
bound
pop
xchg
jmp
add
push
jp
jmp
fisubs
pop
aad
and
outsb
insb
xor
push
lods
push
pushf
test
pop
adc
orb
aam
sub
pop
jo
test
insb
sbb
jecxz
sub
lcall
imul
pop
xor
cmc
lret
repnz
mulb
lret
mov
out
add
add
mov
jne
or
andl
movsl
stos
aam
or
lods
push
jle
jl
push
mov
cmp
out
jne
loopne
js
lret
xchg
mov
pop
test
dec
mov
inc
stos
pop
dec
add
dec
stc
shl
hlt
cmpsb
cmp
adc
dec
jno
xor
xor
adc
into
adc
mov
ret
cmp
jb
xchg
fmulp
ss
inc
popf
out
cmp
or
dec
sub
test
dec
andl
add
icebp
orl
sub
push
mov
mov
xor
jmp
cld
gs
pop
jp
imul
pop
ja
xchg
fsave
dec
mov
push
lahf
mov
enter
ror
stos
inc
sarl
call
and
add
mov
add
cmp
aad
es
cmp
cmpsb
push
push
out
push
pop
xchg
and
mov
push
mov
movsl
in
js
ljmp
mov
sarl
cmp
cmp
lods
inc
cmp
rorb
jb
gs
mov
add
xchg
popf
dec
push
in
jg
aaa
and
inc
dec
and
jb
cmpsl
je
sub
divl
xor
addb
sti
cmp
cwtl
stc
xor
test
and
adc
popa
jecxz
sub
xor
mov
mov
loop
jns
sti
shlb
fisttpll
into
mov
inc
add
xor
add
pop
push
fstpt
arpl
mov
out
mov
cmc
mov
dec
jo
push
mov
mov
andl
lret
xchg
je
hlt
call
sbb
adc
mov
nop
xor
pop
push
sub
xorb
pop
arpl
mulb
mov
pop
cmc
add
stos
xor
in
daa
daa
cmc
jmp
sub
lods
inc
push
lods
sbb
push
adc
int
ret
movsb
lret
in
push
insb
repnz
xchg
in
xor
mov
xchg
xor
ret
adc
sub
mov
hlt
jnp
jge
adc
shrl
or
inc
test
call
and
call
push
mov
nop
mov
popl
mov
fists
mov
push
xor
mov
push
js
dec
adc
dec
sub
add
ret
pop
lea
mov
aas
sbb
add
call
int
jae
lret
inc
mov
insb
jne
and
enter
pushf
push
jne
pop
xor
push
ret
jo
jle
adc
in
fcoml
ds
jg
sbb
inc
push
sbb
xchg
and
outsl
pushf
test
inc
push
daa
das
mov
inc
push
xchg
xlat
xor
mov
xor
test
xchg
rorb
pop
and
dec
cld
jbe
ja
and
lock
adc
xor
add
aaa
xor
pushf
sbb
sub
test
call
enter
mov
cmp
out
cmp
test
push
inc
pop
or
cmp
push
xchg
cmp
xchg
dec
std
sub
in
nop
mov
dec
jne
lock
xor
adc
inc
sub
mov
int
shrb
mov
push
test
in
push
mov
scas
sub
sbb
mov
cmp
inc
pushf
notl
nop
jns
addl
and
push
push
loop
mov
imul
data16
add
test
or
xor
push
pop
cmp
addb
mov
mov
in
js
cmp
sbb
mov
ja
popa
call
and
mov
push
xchg
js
cmp
sub
push
les
xlat
xchg
cmp
aaa
inc
mov
xor
int
jns
mov
mov
faddp
mov
adc
in
mov
inc
lea
cmp
cs
mov
test
fsubrs
lret
stc
ss
lods
sub
rorl
pop
inc
pop
shlb
fcomp
bound
gs
push
xchg
inc
ljmp
fmuls
in
inc
ljmp
insl
loope
ret
mov
mov
pop
fstpl
jmp
es
lea
and
orb
xchg
jmp
add
lods
inc
lret
sub
lret
mov
jmp
jo
fwait
out
lods
push
cmp
lahf
cli
daa
movb
or
add
and
cmc
and
lret
adc
mov
add
sub
orl
inc
popf
push
in
mov
push
in
mov
shll
push
ret
inc
pop
movsl
mov
adc
arpl
scas
xor
add
dec
ljmp
xor
jnp
bound
pushf
dec
out
cmp
pop
cmp
fistps
push
add
dec
inc
dec
cmp
dec
pop
jo
mov
pop
add
test
leave
xchg
push
mov
das
mov
scas
jecxz
stos
push
aad
cli
jecxz
addr16
or
pop
and
mov
pop
sarl
fists
inc
jmp
add
inc
add
add
add
and
mov
xor
jg
cmp
lahf
jnp
mov
add
fistpl
or
les
xorb
lods
mov
pop
mov
mov
mov
cmp
mov
ret
in
mov
nop
mulb
adc
clc
addr16
rorb
cmp
xorb
mov
fs
addb
addr16
push
test
stos
cs
or
lea
jmp
rolb
cmc
ss
and
lahf
jbe,pt
daa
or
mov
lods
xchg
dec
lahf
inc
ja
push
cmpsl
shrb
repnz
pop
cmpl
mov
std
mov
dec
jbe
xchg
loopne
pop
test
jb
pop
jo
sbb
imul
roll
ja
rcr
mov
jo
jbe
push
movsl
jnp
add
les
pop
adc
jg
int
mov
dec
ds
xchg
xor
ret
idivl
push
cmpsb
xchg
icebp
imul
mov
leave
cmp
das
xchg
and
fiadds
jmp
mov
inc
xchg
lret
mov
outsb
cs
sahf
aam
and
adc
ja
lret
mov
inc
loop
jne
clc
and
icebp
cmp
jne
lret
int3
mov
xlat
or
and
xchg
adc
cmp
shll
jno
aas
into
ljmp
in
inc
jb
int
loop
xchg
xor
dec
push
inc
push
xor
add
or
in
dec
xchg
jno
js
ror
into
loope
shrl
xchg
mov
pop
sub
sbbb
jbe
mov
ret
stc
stos
inc
enter
lea
jb
mov
mov
dec
sbb
stos
push
mov
ja
pop
test
les
inc
or
stos
add
push
xor
leave
dec
push
std
sbb
mov
cmc
into
sbb
scas
xchg
and
push
inc
cmc
push
addb
les
inc
pop
pop
pop
jns
jecxz
inc
insb
scas
push
push
rclb
pop
xor
inc
push
push
pop
scas
daa
xor
xor
xchg
xchg
or
rcll
push
clc
pop
test
sub
pusha
enter
mov
int
mov
incl
into
ja
mov
sbb
adc
push
jne
jl
push
and
aam
jmp
and
push
pop
pop
fsubrs
cs
setb
cli
mov
mov
jl
fs
fmull
mov
sub
mov
out
mov
or
loop
je
inc
inc
jb
mov
mov
or
sub
or
int
rorl
lcall
shlb
adc
popa
xor
xchg
pop
xchg
xchg
imul
sarb
mov
push
icebp
xor
dec
sbb
xor
mov
inc
push
test
cmp
shlb
lahf
shl
cmp
xor
and
mov
test
inc
out
lret
dec
lods
repnz
fisubrs
cmp
mov
and
xchg
dec
mov
bound
imul
or
lds
inc
leave
and
cmpsb
and
dec
shll
icebp
sub
xchg
dec
inc
int3
mov
push
pop
pop
jb
jae
aam
mov
jle
xor
testb
cld
push
lahf
in
sahf
pop
insl
cmp
in
mov
mov
rcl
mov
aad
icebp
xchg
lds
stos
mov
sbb
and
lea
in
xchg
lret
rcll
sub
push
inc
outsl
lds
cs
inc
add
jecxz
fsubs
mov
outsb
sub
inc
cmpsb
mov
push
mov
sub
les
lret
xchg
movsb
sbb
and
int
popf
and
sub
xchg
jmp
mov
push
mov
dec
sbb
push
or
pop
xor
in
movsl
inc
fwait
mov
xchg
xchg
scas
pop
ljmp
jns
dec
cmp
stos
jno
insl
xchg
mov
sbb
inc
lock
int3
test
and
subb
and
fnstcw
call
adc
dec
lahf
in
xor
or
test
mov
mov
leave
mov
jb
rcrb
xor
insl
and
rcll
push
xor
jmp
inc
push
cmp
out
xlat
add
fsubrl
loop
movsb
cmp
pop
lock
fldenv
insb
pop
mov
jae,pn
lret
in
xor
jge
popf
pushf
push
cwtl
mov
and
out
jbe
jno
sbb
xchg
cmp
scas
sub
push
jne
mov
outsb
xchg
into
int
mov
xor
xchg
aas
inc
jb
mov
push
push
pusha
lock
adc
sbb
cwtl
popf
jno
stos
clc
add
cli
fcmovb
push
imul
mov
push
insb
orb
mov
fsubr
pop
xlat
adc
push
pop
dec
into
in
out
pop
ss
mov
test
jge
mov
cld
inc
adc
xchg
lret
dec
faddl
fwait
outsl
cmp
xor
fs
fistpl
out
aad
scas
add
movsl
es
ja
mov
fldt
jno
mov
cmp
mov
enter
sbb
jge
cli
out
and
int3
push
divb
aas
notl
jmp
add
mov
lret
adc
call
mov
fsubrp
pushf
stc
aaa
fisttpll
sbb
mov
pop
mov
mov
cli
arpl
xor
cmp
filds
and
xchg
jp
pop
testb
icebp
imul
addr16
mov
mov
lcall
jp
das
push
push
pop
jb
mov
or
ss
popf
aad
inc
in
push
jl
cltd
push
jns
fnstenv
xor
inc
les
add
rcr
jmp
shrl
or
sbb
dec
sub
sarl
dec
xor
test
mov
pop
orl
pop
scas
mov
scas
push
sub
cltd
daa
adc
jecxz
ret
inc
push
dec
idivb
push
xchg
in
cmp
push
sahf
out
push
push
pop
mov
sbb
push
jb
add
enter
add
psubb
jbe
jb
fwait
pop
fdivrs
cmp
movl
add
xchg
xorb
mov
cwtl
jno
xor
push
and
mov
push
adc
adc
aas
pop
sbb
dec
and
test
pop
mov
mov
jne
es
xchg
sub
and
mov
push
inc
inc
int3
and
clc
sbb
ljmp
data16
stos
gs
movsl
mov
dec
dec
repz
in
nop
sti
xchg
mov
ret
ffreep
mov
mov
add
sbb
inc
push
notl
scas
rorb
scas
mov
mov
inc
in
aas
jno
leave
outsb
das
leave
enter
jnp
pusha
pop
or
sub
dec
fisubl
add
sbb
and
imul
mov
popf
inc
or
stos
inc
pop
sahf
xor
mov
push
adc
insb
rcll
aaa
fcomi
cmpsb
mov
push
adc
or
aas
adc
scas
push
mov
not
aam
mov
roll
in
pop
mov
bound
pop
jne
addr16
neg
imul
mov
push
jle
out
icebp
dec
pushl
mov
psubb
and
add
stos
sbb
and
out
arpl
mov
lea
push
jmp
lret
pop
add
outsl
add
or
lret
and
inc
inc
out
scas
inc
lds
popa
mov
or
sub
pop
lds
mov
dec
fdivs
jno
mov
ss
jecxz
mov
pop
xchg
dec
pop
and
pop
fld
inc
sbb
dec
dec
aaa
mov
add
sbb
sub
push
add
and
mov
jno
jo
xchg
mov
add
or
dec
std
add
outsb
pop
shrl
inc
cli
push
ljmp
pusha
js
mov
icebp
push
cwtl
daa
pop
cmp
push
cmp
mov
mov
fnsave
addr16
mov
test
dec
xor
out
hlt
insl
xchg
lock
jecxz
push
or
mov
pop
outsb
cld
mov
fs
mov
std
jae
mov
xor
aas
scas
ror
add
lock
stos
pushf
pop
jno
sbb
scas
jl
int3
ret
fidivrs
stos
xlat
mov
cli
sbb
fwait
shld
pop
mov
xor
and
mov
lcall
sti
add
or
cmpsl
dec
jg
inc
in
lock
push
sti
hlt
shlb
ficoms
mov
test
jb
jno
aam
mov
mov
leave
or
gs
ja
enter
xor
mov
adc
sbb
sub
inc
call
mov
test
fs
cmpsl
push
mov
mov
incb
loope
negl
jle
cmp
push
leave
sub
loope
push
xchg
sbb
jno
aad
cmovs
lcall
mov
out
pop
xchg
inc
fs
pop
in
mov
mov
mov
sub
fs
and
cs
loope
jge
adc
mov
cmpsb
mov
cli
adc
repz
insl
into
aas
sbb
mov
stos
aaa
cld
incl
xchg
and
rcrl
fwait
jno
leave
inc
or
pop
fs
mov
mov
xor
test
push
jp
cmp
dec
rcl
mov
or
and
jno
mov
pusha
fistpl
add
pop
or
pop
fiaddl
pop
mov
adc
jmp
dec
popa
adc
xor
sahf
mov
repnz
pop
sbb
into
aad
xor
shlb
adc
sbb
jp
or
jmp
aas
push
push
jl
insl
adc
cmpl
add
arpl
dec
icebp
pop
daa
call
pop
cmp
cmp
xor
dec
sub
push
add
cmp
xchg
cmc
insb
enter
mov
aam
push
jnp
sahf
pop
jp
adc
adc
je
sub
popa
je
or
adc
add
lret
sbb
push
add
ljmp
xor
mov
aad
sti
jae
outsb
adc
push
inc
pshufw
divl
push
stc
outsl
and
sub
gs
mov
gs
loopne
shl
jne
adc
out
or
lret
jns
int3
insb
xchg
ja
fs
push
and
push
int
pop
cmpb
push
fimull
fyl2x
cwtl
rorb
mov
insl
flds
sub
fldenv
sahf
pop
jmp
dec
out
push
xor
push
inc
push
xor
hlt
mov
addl
into
ficompl
or
call
lret
arpl
mov
xor
aam
sbb
int3
inc
xchg
pusha
mov
or
mov
aad
pop
fnsave
loope
fistl
or
and
mov
xchg
pop
jg
mov
shr
rcll
push
or
test
inc
cwtl
xor
or
pop
jge
les
sub
outsb
dec
ja
das
cmpsb
dec
les
clc
xor
ljmp
dec
or
or
into
push
scas
out
mov
xchg
xchg
adc
insb
scas
bnd
xor
aas
in
jl
fiaddl
loope
inc
adc
pusha
shrl
or
nop
push
mov
sbb
adc
xor
xorl
xor
lcall
in
repnz
mov
scas
insl
inc
dec
cmp
and
popf
es
call
test
adc
pop
xchg
jp
mov
ret
cmp
and
cmp
inc
stos
push
ljmp
nop
mov
int
push
pusha
aas
out
movsl
pmaxub
mov
ja
jecxz
loopne
inc
mov
push
dec
incl
xchg
stos
in
std
iret
mov
and
cmp
enter
push
sub
lahf
adc
jno
add
aas
mov
outsb
stos
and
jns
push
pop
xchg
mov
lea
add
aas
orl
mov
xchg
adc
ffreep
xchg
mov
out
ret
xor
clc
adc
mov
xchg
and
aaa
or
subb
cmp
add
push
ret
pop
inc
sub
fcmovnb
pushf
rcr
mov
rcll
inc
rcrb
dec
dec
pop
pop
jecxz
and
inc
jmp
lahf
sbb
push
test
enter
adc
jo
shlb
push
neg
or
push
jne
and
dec
les
mov
pop
sbb
jo
mov
repz
outsl
les
pop
push
jb
sbb
pop
jecxz
and
cmp
jge
neg
cmp
icebp
es
les
push
mov
cmp
sub
add
loopne
js
leave
clc
or
jbe
lea
adc
std
lcall
inc
mov
pop
mov
int3
lea
dec
jg
push
sub
adc
movsb
loopne
aam
into
gs
sarb
jecxz
in
sub
adc
pop
insl
mov
nop
roll
adc
dec
push
xchg
movsl
ljmp
and
pop
call
outsl
pop
das
cwtl
lock
iret
push
lahf
jp
sti
mov
push
ja
aaa
sbb
pop
sbb
int
mov
xlat
xchg
addb
cmpl
xlat
rolb
adc
or
leave
mov
xchg
lcall
sbb
mov
or
daa
test
lods
aas
jecxz
sbb
pop
pop
fstpt
add
sbb
sbb
sbb
pusha
jnp
cmp
adc
ljmp
push
ror
cmp
cmc
or
outsb
jo
and
das
sub
jmp
rcr
je
jo
jg
mov
es
mov
dec
arpl
mov
into
cmp
mov
push
rorl
pop
scas
outsl
cltd
out
out
roll
ret
cmp
mov
jl
dec
adc
pop
cmp
out
dec
pop
movsl
xchg
sbb
adc
ficoms
or
pop
push
mov
jne
leave
add
ss
cmp
dec
out
data16
push
pop
dec
sub
ret
jp
ja
add
mov
dec
inc
aad
and
jb
push
dec
push
jne
dec
dec
cmc
jno
sbb
fdivrs
enter
dec
mulb
sub
ja
adc
lods
mov
lea
adc
xchg
mov
in
stc
lret
mov
movsb
inc
fwait
jge
jmp
xchg
cmp
fidivrl
stos
xchg
aad
adc
neg
enter
loope
clc
adc
aas
imul
mov
loopne
ja
mov
lds
xchg
mov
aad
icebp
xchg
lret
mov
lea
or
mov
mov
hlt
cli
and
xchg
out
push
adc
fnstenv
cmpsb
cmc
sti
mov
push
repnz
nop
test
dec
add
or
pop
adc
faddl
cld
fldl
cld
or
mulb
add
dec
mov
insb
push
cmc
fistl
jmp
cwtl
nop
insb
dec
test
shrb
mov
aas
cmp
or
adc
jge
outsl
xor
fistl
in
push
push
mov
sub
sbb
je
test
in
fsubs
push
lea
divb
adc
cmp
fcom
popa
cli
inc
xor
add
repz
loopne
out
ret
cltd
add
stos
movsl
movsb
out
sarb
add
jg
nop
shrb
cmp
gs
pop
cmp
or
and
cmp
push
out
pushf
cmpsl
jns
sub
mov
or
push
data16
or
add
ret
push
loope
push
xchg
or
imul
add
scas
cmpsl
pop
push
mov
push
imul
shll
and
in
scas
jnp
jo
out
lods
mov
and
xor
das
adc
fisttpll
sbb
repz
xor
cltd
out
add
shll
enter
stc
mov
stos
push
inc
mov
adc
adc
scas
gs
adc
test
inc
imul
insl
into
sub
mov
adcl
rcrb
mov
fldl
sbb
sub
or
das
mov
iret
stc
jbe
cmp
sbb
sbb
pop
and
ret
sbb
js
popa
cmp
in
sahf
add
int
pop
shll
test
inc
adc
inc
lret
push
xor
pop
jl
mov
cli
jno
push
sub
cmc
push
inc
daa
mov
fmull
lock
adc
lret
mov
pop
dec
fcmovnb
mov
sti
sbb
inc
mov
xor
aas
or
xchg
jp
mov
jmp
mov
xchg
sbb
cmp
xchg
insl
lret
cmc
adc
jnp
jns
popa
lret
in
xor
pop
or
xchg
inc
cmp
or
lcall
enter
loop
dec
add
and
divb
cmpsl
shrl
adcb
xor
dec
cltd
movsb
inc
subl
mov
xor
jno
mov
insl
insb
repz
test
cmpb
nop
insb
jnp
add
add
fisubrl
in
sub
fs
movsb
dec
and
in
lret
xchg
inc
les
pop
and
xor
test
mov
imul
adc
mov
mov
or
cmpsb
mov
jmp
xchg
add
xor
lods
cwtl
push
bound
xor
std
sub
lods
push
das
xor
int3
rorl
mov
xchg
adc
pop
adc
pop
mov
addl
hlt
cmpb
scas
mov
sub
mov
mov
les
ss
lret
mov
mov
gs
push
inc
mov
mov
jns
loopne
fisubrs
pop
xor
outsl
xchg
mov
xchg
cmp
outsl
or
sbb
lcall
ret
adc
inc
mov
repz
lret
jb
call
mov
inc
cmp
nop
test
enter
inc
les
xor
pop
insb
xchg
add
or
push
and
daa
int
or
adc
enter
sub
or
hlt
mov
sbbb
cmpsl
outsl
lret
adc
mov
icebp
jl
xor
js
mov
fstl
mov
in
es
loope
lods
sub
and
jne
bnd
adc
stos
insl
push
int
inc
lock
push
cmp
jp
and
lds
add
jno
and
fwait
push
lcall
rcrb
aad
adc
fbld
cltd
mov
jg
test
sub
jne
dec
mov
in
into
ret
or
and
ja
adc
sbb
js
cmp
std
stos
cmpsb
jmp
lods
lcall
sub
mov
data16
leave
rcrb
jns
xchg
icebp
subl
pop
in
fwait
pop
into
loope
jo
mov
jge
std
test
fdivrl
roll
fldenv
or
and
cmp
push
arpl
insb
inc
insl
test
sbb
aas
fnstenv
mov
pop
mov
adcb
mov
sti
inc
pop
xchg
pop
lods
xchg
mov
aam
cmpsl
outsl
movsb
add
mov
inc
inc
data16
mov
insl
shll
testb
fcomps
jae
test
sahf
pop
dec
shll
movsl
je
loop
out
mov
and
or
dec
jne
mov
fisubrl
testb
movsl
das
loop
call
or
mov
cmpsb
icebp
inc
clc
jp
xor
jle
sahf
mov
faddl
and
jb
test
sbb
sbb
aad
pop
pop
or
cmp
fiadds
or
sbb
das
stos
xor
push
xchg
pop
inc
cmc
jg
cmp
lret
test
mov
sbb
dec
in
xchg
sbb
pop
pop
icebp
or
fcoml
test
sbb
sbb
mov
outsl
imul
lahf
gs
xchg
mov
push
shll
cli
addl
mov
lods
sub
jo
outsl
push
stc
mov
sub
dec
jp
test
out
popa
insl
es
bound
xor
sbb
push
sbb
jecxz
movups
fadd
cmpsb
out
xchg
icebp
adc
mov
iret
or
stos
and
in
cld
std
sbb
xor
add
xor
sub
mov
mov
repnz
mov
push
lret
cmp
and
insb
and
cmp
mov
orb
aas
add
cmp
loopne
push
cld
inc
and
adc
dec
dec
icebp
xchg
out
add
inc
sub
push
inc
mov
xchg
fisttpl
jnp
push
incl
mov
jns
test
mov
gs
out
fsubrs
das
xchg
jmp
int
aas
daa
pop
mov
fsubs
gs
insb
movsb
cs
ret
pop
ret
cmp
jno
fmuls
iret
inc
push
cmp
xor
enter
or
sub
sahf
stos
push
stc
mov
hlt
scas
push
dec
mov
dec
or
sti
ret
in
sbbb
xor
imul
subl
jle
outsl
cmpl
dec
push
dec
adc
mov
pop
sub
cmc
pop
lret
je
rorb
mov
adc
mov
jp
cwtl
or
and
xor
push
pushf
add
arpl
repz
and
lret
fnsave
punpckhbw
dec
aad
mov
cmpsb
lods
cmpsb
insl
addr16
pop
js
fldpi
adc
push
loope
xlat
inc
sbb
andb
bound
cmp
mov
in
icebp
imul
pop
cmp
mov
lods
adc
gs
enter
jl
jae
push
into
sbb
push
test
addr16
movl
inc
dec
fiadds
mov
adc
pop
pop
setle
push
stos
lock
ret
hlt
mov
mov
mov
loopne
inc
jbe
daa
cltd
clc
mulb
add
cmpsb
gs
sbb
test
sub
xchg
xchg
pop
xchg
and
dec
xchg
repz
testb
lret
mov
xor
fwait
sub
int
mov
sbb
pop
xlat
popf
mov
lcall
loope
aam
adc
lods
or
hlt
add
sbb
bnd
test
arpl
jnp
outsb
aas
sub
jmp
and
in
sub
loopne
adc
cmpsl
push
ja
test
pop
les
xchg
cmpsb
or
dec
sub
hlt
push
daa
pusha
sbb
jecxz
inc
xor
fisttpll
sahf
nop
outsl
dec
jecxz
and
xor
int3
jne
and
stos
jl
jne
jne
push
loopne
adcl
push
loop
mov
orb
mov
mov
pop
movsl
xchg
jle
bound
xchg
mov
inc
arpl
add
sbb
lcall
mov
pop
and
jb
dec
mov
mov
aas
mov
adc
mov
adc
sbb
push
xlat
or
push
jge
xchg
xchg
addr16
pop
jbe
xchg
in
mov
aam
mull
push
hlt
test
call
test
cmp
mov
push
jp
ret
sub
jno
jecxz
orl
mov
jmp
cmp
lahf
mov
jnp
cmp
lock
mov
lret
movsb
idivb
andl
test
daa
pop
stos
sbb
xchg
cmp
xor
push
repz
roll
jae
pop
push
or
test
cmpsl
push
in
sub
movsl
mov
or
test
jecxz
adc
test
cld
into
jno
test
cs
into
push
loop
xor
jne
lea
cmc
daa
cltd
xor
leave
sti
mov
sbb
mov
ret
icebp
push
cs
mov
roll
nop
push
inc
pop
fdivrl
mov
test
xor
mov
test
int
dec
lods
or
sti
loope
daa
add
inc
mov
sti
flds
shll
and
rol
push
orl
pusha
mov
into
dec
cmpb
or
jecxz
xchg
mov
push
xchg
lahf
lods
and
cmpsl
scas
int3
xchg
sbb
or
jne
or
pushf
pop
arpl
das
xor
loope
mov
int
ds
xchg
lcall
pop
in
jmp
push
jl
push
mov
xchg
incl
sub
rclb
sbb
pop
je
add
in
jno
sbb
or
jl
xchg
sub
shlb
je
cmp
je
mov
mov
xchg
pushf
inc
push
inc
inc
gs
icebp
xor
jbe
fcmovnbe
fistpll
pop
pop
cmp
movsb
test
fisubrs
mov
pusha
pop
lret
dec
push
addl
loop
nop
push
in
cli
aad
imul
call
dec
sbb
push
movsb
dec
jns
xchg
loopne
dec
xchg
push
cwtl
push
es
inc
insl
mov
xor
sar
imul
sub
xchg
popf
stos
sbb
jecxz
adc
cmp
push
adc
pop
fisttps
xor
ja
mov
ret
loopne
mov
push
push
ja
inc
mov
pusha
xchg
sub
int3
outsb
sbb
or
sbb
pusha
xor
je
adcb
scas
mov
xchg
push
aaa
rol
xor
int3
push
xchg
push
mov
cld
sub
mov
push
adc
pusha
jae
movsl
add
daa
repz
or
scas
push
in
and
push
loopne
xlat
mov
in
sti
xor
lahf
cltd
not
ss
bound
dec
movsb
and
icebp
inc
test
mov
pop
xchg
pop
out
mov
inc
inc
and
or
cmp
es
jno
sub
sub
rorl
jns
dec
sahf
mov
outsb
jns
adc
adc
test
cmp
xchg
icebp
and
xor
mov
imul
out
pop
add
pusha
sarl
or
adc
adc
push
push
in
mov
xchg
les
mov
jmp
sbb
push
pop
enter
push
push
sbb
push
inc
into
inc
or
adc
jns
dec
lret
jno
lcall
subl
cmp
xlat
xchg
pop
loop
adc
push
or
jae
sbb
hlt
add
hlt
aam
mov
mov
out
movsb
test
add
cmp
xchg
sbb
cltd
push
sub
push
mov
add
inc
imul
pushf
paddusb
leave
ja
cmp
mov
pushf
inc
fs
rolb
lock
ret
ret
testb
jb
and
stos
mov
lds
push
fmuls
hlt
jbe
lahf
push
mov
add
mov
out
xchg
jmp
loope
out
fisubs
mov
sub
imul
mov
add
inc
xor
ret
stc
push
adc
pop
inc
mov
lret
fildll
push
lahf
fwait
xor
sub
push
mov
pop
mov
stc
lea
ret
mov
loop
jns
cmp
or
les
mov
push
dec
movsb
and
push
inc
fsubs
out
push
aam
pop
std
cmp
fdivs
popf
fs
jp
push
push
sub
add
stc
stos
ja
in
test
mov
lcall
sbb
mov
add
or
pop
ljmp
fsubr
xor
cmpsb
mov
mov
lock
add
outsb
arpl
pop
cmp
pop
sbb
sbb
ljmp
aaa
aad
mov
and
cwtl
sahf
das
pop
imul
adc
pop
pop
lods
imul
adc
dec
cmp
and
sbb
shr
popl
pop
popa
stc
int3
je
sub
outsl
adc
mov
xor
push
pop
repnz
jp
push
fwait
je
out
jmp
jbe
ffree
xchg
loopne
pop
sub
jo
out
movsb
cmp
loopne
push
rorb
pop
addl
jo
push
fnstenv
addr16
add
xlat
adc
gs
clc
dec
frstor
ss
testb
adc
mov
fcmovnu
xorb
scas
dec
jmp
clc
pop
cmpb
addb
aam
or
and
pop
or
pop
imul
dec
push
mov
rcrl
inc
cmp
das
inc
pushl
push
adc
pushf
and
or
adc
jmp
notb
out
fisttpl
xor
inc
ret
cltd
jge
shll
out
lret
cwtl
adc
pop
pop
test
mov
imul
pusha
xchg
ret
pop
mov
adc
mov
mov
sbb
out
fnop
xchg
mov
sarb
call
push
sub
lea
and
xor
lods
pushf
sub
cmp
jnp
gs
mov
xchg
inc
cmp
adc
push
dec
out
es
or
dec
lret
imul
cli
clc
jle
inc
add
and
into
sub
pusha
mov
mov
sub
mov
add
nop
les
jno
inc
jmp
mov
sbb
push
lock
push
pushf
pop
jge
pop
arpl
xchg
movsb
iret
cmp
lea
jle
and
mov
mull
dec
fwait
sbb
cmp
mov
repnz
daa
lret
and
sti
scas
ret
jg
or
scas
pop
cmpsl
outsl
inc
inc
add
inc
push
mov
cld
lahf
inc
sub
js
or
fimull
adc
rorl
sarb
dec
daa
into
and
push
hlt
adc
adc
aam
addb
mov
lds
adc
dec
int3
push
cmp
int3
frstor
jnp
pusha
mov
pop
mov
ror
jmp
jne
and
xor
push
sub
dec
mov
inc
cmpsl
fcoms
hlt
dec
rorw
cltd
fisttps
add
mov
mov
sti
push
std
popa
mov
in
sbb
adcb
mov
insb
mov
dec
dec
sahf
lods
cmp
mov
pop
stos
insl
mov
mov
sbb
ret
xor
fwait
shr
scas
xor
test
imul
adc
gs
jnp
les
adc
push
add
pop
imul
or
xor
sbbl
dec
sbb
popf
in
iret
jecxz
lcall
mov
mov
iret
mov
xchg
lds
jne
out
mov
mov
pop
stos
adc
pop
sub
pushf
fistpll
mov
repz
scas
mov
test
cmpsl
mov
xor
pop
sub
fincstp
sbb
xchg
pop
add
sysenter
adc
cli
cmpsb
xchg
jg
test
data16
sub
and
outsb
mov
gs
pop
mov
xchg
sbbb
ret
pop
je
ficompl
loope
leave
fnsave
pop
fs
sbb
lret
add
xor
lret
inc
xchg
and
adc
add
out
xchg
clc
pop
and
int
movsb
xchg
movaps
jb
movsb
loope
and
lahf
les
insb
cmpsl
negl
and
inc
ret
repnz
sbb
sbb
jae
jae
cmp
push
fidivl
adc
push
push
sub
mov
inc
mov
loopne
sarb
shr
jl
in
or
int3
mov
mov
adc
call
mov
loopne
mov
lds
test
pop
cs
mov
jge
or
xchg
fucomp
pop
outsb
pop
sub
push
xor
pop
mov
jno
adc
add
outsl
xchg
sub
jb
pushf
aaa
cmp
xor
mov
add
in
out
shrl
addb
pop
pop
mov
loope
push
inc
test
clc
test
push
lret
dec
cmc
xor
les
ret
cmpsl
xor
roll
pop
sub
pop
rorb
xor
in
sbb
aaa
adc
push
mov
jmp
out
push
pop
or
sahf
jecxz
popf
movsb
sbb
mov
mov
adc
jecxz
into
mov
out
scas
addl
cltd
pop
ret
ds
scas
cmc
shll
lret
mov
mov
lods
icebp
jae
out
decb
xor
js
insl
xchg
pop
mov
pop
mov
jbe
and
or
ficoml
sub
mov
int3
cmp
xor
sub
sub
in
ficompl
es
pop
and
fs
loop
je
lret
mov
inc
jno
push
jp
xchg
mov
jecxz
test
lahf
sub
add
mov
out
fistps
gs
mov
jae
jle
xchg
xchg
mov
push
cwtl
sbb
cmc
loop
rcr
in
push
xlat
inc
jne
fisttpll
ljmpw
bound
cli
pop
push
pushf
into
xchg
repz
js
xor
popl
out
bound
loop
nop
add
out
out
mov
fwait
dec
adc
inc
mov
push
rclb
adc
ret
ret
aaa
adc
loope
push
inc
sbb
cmp
rolb
dec
ds
ret
aas
sub
das
jnp
and
push
adc
repnz
mov
mov
inc
fimuls
pop
push
inc
in
repnz
xchg
add
mov
sbb
inc
filds
mov
pop
jbe
out
fsubrs
pusha
stc
sbb
int3
int3
imul
jecxz
pushl
lods
imul
cmp
hlt
sarl
minps
jnp
cmp
je
add
xor
movsb
clc
imul
push
cwtl
stos
dec
cmpsl
jmp
mov
shll
shrl
inc
mov
les
inc
mov
dec
mov
pop
mov
fsubl
rcrl
test
mull
mov
inc
bnd
in
sbb
sbb
lock
clc
pop
sub
mov
xor
out
push
mov
or
addb
pop
cld
sahf
sbb
sub
test
and
loopw
xchg
loope
pop
mov
sbb
xorl
pop
dec
or
inc
lds
sbb
or
test
xor
mov
dec
xor
xchg
out
pop
mov
cwtl
gs
jo
add
sub
mov
adc
sub
push
loope
subb
out
sbb
jae
bnd
and
rcrb
or
fmull
dec
cwtl
push
mov
adc
cmc
sbb
addr16
xchg
stos
adc
mov
adc
xchg
inc
stos
add
ljmp
inc
ret
aad
jle
repz
leave
push
daa
cld
shlb
adc
and
inc
out
je
das
insl
rcr
push
push
dec
nop
fisttpll
shl
gs
fstl
jae
inc
daa
cmc
movsb
xor
xchg
mov
aad
ds
fadd
insl
inc
add
sahf
and
jnp
in
xchg
lea
sbb
std
xchg
xchg
pushf
and
pop
lods
mov
leave
jmp
push
jg
mov
out
add
out
out
outsl
add
ja
shr
movsl
push
adc
jp
stos
sti
mov
mov
data16
arpl
aas
enter
mov
or
data16
xor
sbb
pop
fdivrs
xor
push
jno
sbb
xor
ret
and
push
add
dec
inc
rolb
in
int
loopne
or
loop
rolb
mov
enter
adc
fcompl
into
dec
push
daa
out
push
and
jecxz
or
lret
sbb
adc
mov
mov
lcall
mov
mov
mov
insb
sub
pop
js
and
cwtl
and
daa
lret
les
setns
push
std
ja
outsw
cmc
add
daa
stos
sub
cmp
mov
insb
scas
aas
lods
in
dec
dec
mov
cmp
jg
push
sub
shrb
push
scas
add
push
lcall
push
sbb
cmp
into
push
outsb
mov
push
inc
add
fwait
push
jge
or
out
je
or
arpl
and
mov
xchg
sub
inc
push
push
and
aaa
adc
inc
dec
mov
push
pop
stc
addl
ret
inc
jns
ja
jle
cltd
int
jno
les
add
dec
mov
into
mov
int3
cmc
out
iret
mov
mov
push
fs
in
lock
lods
jecxz
sbbb
xchg
lcall
pop
mov
jg
xchg
pop
shrl
ss
jp
test
addb
pop
cltd
arpl
insb
lds
ds
mov
xor
cmp
pop
pop
inc
jl
or
jmp
and
push
xor
subb
cli
loop
adc
imul
int
test
pop
pop
cmc
adc
fistpl
xor
test
mov
or
push
jmp
stos
jno
out
dec
ja
les
in
inc
mov
mov
cmp
out
mov
and
mov
vmovdqa
dec
cmp
test
jns
and
mov
in
fcoms
xchg
or
add
jp
sar
lcall
nop
and
pop
mov
sub
repz
mov
shll
jbe
fwait
xchg
inc
sub
out
out
mov
mov
pop
fidivrs
push
push
repnz
lods
mov
cmpsb
gs
sbb
sbb
add
popf
fsubr
stos
bnd
push
jbe
shl
fstl
cmp
cmpsb
inc
outsb
lods
mov
push
mov
leave
mov
int3
test
jbe
xchg
dec
aam
sbbl
inc
xchg
adc
sbb
xchg
jmp
jns
add
pop
adc
pop
or
arpl
xchg
cmp
popf
ret
inc
cltd
call
daa
mov
xchg
repz
jmp
scas
xor
clc
mov
mov
jae
add
dec
mov
mov
negl
jae
xchg
into
mov
les
loope
adc
in
dec
or
aad
aam
int
out
popa
or
add
jmp
xchg
mov
add
scas
rcll
repz
inc
je
mov
or
cmp
in
push
cli
es
lcall
jmp
inc
mov
mov
push
loopne
mov
xor
pusha
lret
xor
cmc
test
sbb
mov
mov
out
jae
jg
pop
cld
push
mov
pop
mov
fs
aas
dec
mov
stos
pop
jns
xchg
push
insl
sbb
in
stc
ss
mov
xor
shl
cld
stos
xor
dec
mov
and
xchg
loopne
and
inc
stc
add
xchg
dec
mov
xlat
es
into
jle
adc
jno
mov
sbb
ret
stc
push
sarb
sbb
testb
loop
cmpb
and
cmpb
les
les
push
sbb
mov
loopne
cmp
xchg
loopne
divb
rcrb
inc
mov
nop
movsl
test
std
lds
repnz
leave
sarl
rcrb
mov
int3
pop
mov
out
add
jle
sbb
or
fistpl
lea
inc
or
jb
add
push
vmwrite
pop
mov
mov
jae
and
jp
jnp
xchg
leave
imull
nop
lcall
dec
adcb
xchg
das
xchg
fistpl
sbb
jne
pop
cmp
push
sub
mov
jne
pop
or
inc
sub
ja
xchg
jnp
and
cltd
push
test
inc
aam
jbe
loopne
hlt
pop
addr16
stos
mov
mov
dec
mov
es
mov
cwtl
add
out
sub
adc
dec
xchg
mov
out
pop
mov
xor
mov
add
fdivs
rcll
inc
into
cmpsl
or
jmp
sub
cli
push
outsb
add
daa
jne
shr
xchg
cmp
cmpl
mov
in
adc
inc
push
cmp
sbb
dec
cmp
add
jns
andb
xlat
adc
adc
insl
dec
push
mov
aaa
jmp
divb
cs
mov
push
lods
inc
push
xor
push
and
pop
pusha
pop
cmp
dec
mov
arpl
push
or
mov
xor
inc
nop
push
movsb
lock
inc
out
jbe
ret
push
adc
pop
je
mov
inc
imul
pushf
jge
jne
loop
lahf
outsb
loopne
jnp
test
mov
jb
ret
sbb
aad
and
adc
test
inc
in
pop
lock
jmp
sub
out
xchg
aam
xchg
jo
dec
sbb
mov
push
adc
enter
jne
sub
jl
scas
cmpsl
neg
inc
test
mov
and
cs
xlat
cmp
repz
inc
mov
test
sbb
inc
call
jl
mov
leave
std
xor
inc
pop
xchg
data16
xchg
repz
testl
adc
sub
or
fs
ja
xchg
inc
cmp
and
cmpsb
mov
addl
inc
popa
and
out
push
and
adc
cli
jb
fimull
inc
mov
das
push
cmp
mov
mov
cmp
mov
mov
pop
pusha
mov
clc
adcb
and
cld
out
icebp
push
adc
jle
icebp
sub
adcb
jmp
or
mov
mov
test
inc
dec
cld
icebp
outsl
les
enter
lods
es
fsts
dec
ror
adc
ja
inc
pop
sarl
jo
popa
pop
mov
mov
lods
inc
inc
leave
aas
inc
imul
iret
jnp
jns
in
test
sbb
arpl
stos
sub
inc
pusha
insl
cmpsb
rorl
loop
mov
fcompl
and
out
jnp
nop
inc
and
and
movsw
xchg
psubd
xor
sbb
ljmp
jecxz
pop
cmp
push
data16
lcall
push
inc
sbb
mov
xchg
jmp
mov
adc
mov
lds
jp
clc
push
out
iret
mov
xor
ret
loope
or
aas
test
inc
xchg
addl
cs
push
inc
xor
jle
mov
dec
andb
or
or
pop
cmpsb
inc
push
imul
int
adcb
fs
push
or
sbb
xchg
shrb
in
mov
mov
cs
fwait
into
repz
mov
loopne
fistpll
filds
add
shrb
lcall
xor
mov
xchg
repz
shll
scas
jmp
lea
pusha
dec
jno
and
fistpl
ss
add
push
fwait
in
sbb
jae
fistpl
push
lret
ds
xchg
jl
test
xchg
pop
jge
daa
sub
lret
jp
repnz
test
push
xor
sub
push
repnz
lock
adc
mov
mov
xchg
push
ss
adc
cmpl
xchg
lock
mov
mov
andl
mov
rcl
imul
scas
mov
adc
xchg
test
xchg
cmp
push
out
jnp
cmp
int3
repz
xor
fnstenv
and
icebp
loopne
mov
fbstp
sbb
inc
or
mov
xor
fimull
jno
imul
mov
in
fdivl
push
inc
inc
daa
adc
dec
lods
xchg
cmp
and
xor
inc
imul
cmp
mov
sbb
cmpsl
fistps
sbb
jno
outsl
xchg
arpl
iret
xchg
aad
sahf
pmaddwd
stos
jbe
dec
cli
xchg
shr
cmp
mov
xor
out
dec
outsb
mov
out
adc
icebp
add
xchg
xor
dec
xchg
bnd
jae
or
xchg
outsl
sub
lods
fidivrs
dec
push
cmc
cmp
sbb
int
and
mov
ljmp
sub
jae
lods
loop
and
dec
xlat
push
mov
fwait
push
pop
sbb
popa
imul
fsub
lock
sub
loope
mov
dec
mov
adc
pop
cmpsb
or
js
out
mov
or
xor
xor
pop
sbb
lcall
xor
fnstenv
decl
dec
test
mov
in
sbb
or
jle
cltd
shll
adc
adcl
adc
add
pushf
xorb
jle
mov
sub
mov
push
jne
insb
shlb
fwait
jmp
sbb
je
popa
in
ss
jg
push
jo
sub
inc
or
notl
xor
adc
xor
dec
dec
icebp
repz
inc
fsubrs
inc
xchg
sub
add
fcompl
push
fidivrl
xchg
mov
rolb
xchg
adc
pop
mov
push
rclb
pop
xor
dec
iret
js
in
adc
out
or
or
les
fimull
test
popa
dec
dec
cmp
jmp
mov
iret
ds
or
xor
mov
jne
inc
push
jmp
pop
sub
outsb
mov
sbb
ficoms
sarl
scas
inc
sub
push
dec
sbb
iret
daa
pushf
ds
and
add
into
cwtl
sbb
rcll
fisubs
mov
sub
inc
notb
out
adc
jmp
stc
test
pop
data16
rolb
loop
sub
mov
and
mov
sti
mov
and
cmp
cmpsb
das
xor
dec
xchg
call
rcr
ljmp
pop
cmpsb
push
mulb
xchg
xchg
mov
idivl
test
cmp
jb
imul
cmpb
cmc
pop
in
lcall
push
adc
dec
insb
test
add
push
cli
xchg
mov
sbb
cli
dec
adcl
xchg
cmp
pop
xchg
repz
mov
aam
xor
cli
sub
inc
fadd
add
lock
push
outsl
roll
push
pop
loope
jle
mov
subb
xor
dec
mov
mov
lods
xor
mov
les
add
cmp
push
push
or
and
icebp
orl
filds
pop
movsb
iret
inc
ja
sub
insb
popa
xchg
es
jb
pop
adc
mov
inc
pop
adcl
pop
lds
out
dec
sbb
cmp
sub
sbb
outsb
xor
pop
dec
push
xchg
mov
sbb
lret
pop
rol
push
cmp
lock
inc
call
adc
xchg
adc
mov
subb
pop
jmp
jnp
pop
mov
sbb
cltd
push
fsubrp
cmpl
pop
divb
cli
movsb
mov
mov
jbe
xor
jbe
mov
xchg
sub
xor
pop
mov
mov
out
sbb
pop
jne
pop
sub
movsb
daa
jb
jbe
cmp
jmp
lea
insl
test
adc
add
movups
ret
js
mov
cmc
push
lahf
mov
aaa
jno
idivl
stos
sub
mov
lcall
add
jl
pop
pop
lods
fwait
sbb
mov
not
mov
sbb
imul
push
or
mov
dec
push
xor
mov
inc
jnp
hlt
cs
inc
dec
int
push
add
adc
and
shr
cs
shrb
add
popa
outsl
xor
mov
cs
sub
mov
popa
sbb
mov
mov
nop
push
lret
cmp
iret
fisubs
fwait
xchg
xor
or
mov
pop
lret
je
push
pop
xor
xchg
mov
in
data16
lcall
push
cli
jae
pusha
int3
sahf
js
pop
mov
jle
cwtl
jno
scas
push
xchg
and
xchg
jo
lea
nop
sub
sbb
sbb
out
ljmp
jmp
insb
fsubrs
xchg
adc
sbb
push
fdivrs
loope
dec
ret
dec
mov
dec
jge
xchg
lock
or
mov
push
xorb
xor
mov
adc
aas
push
pop
imul
movsl
jmp
inc
mov
sahf
jmp
stos
mov
mov
jnp
aaa
xchg
push
scas
lahf
inc
pushf
xor
pushf
and
jo
sarl
cmp
icebp
fbstp
cmp
xchg
sti
dec
lret
inc
pop
popf
arpl
stos
pop
pusha
lods
dec
xchg
das
inc
cmpsb
sbb
inc
cmp
mov
arpl
scas
xchg
das
adc
mov
jnp
ljmp
mov
xor
nop
aas
lret
cmc
fsubrs
sbb
sub
flds
out
aad
aaa
mull
jae
inc
push
cs
xor
pop
pop
ror
movsb
ret
mov
aad
ret
push
cmpsl
dec
jae
inc
out
sbb
inc
mov
or
pop
into
test
fistpl
test
mov
scas
or
xor
into
push
push
imul
mov
sbb
outsb
and
fisubrl
and
push
orl
aad
pop
push
push
xchg
pop
data16
push
pushf
ds
sti
mov
loope
neg
scas
sarl
push
popf
push
xchg
cmp
shrb
int
pop
and
xchg
cld
add
aas
pop
hlt
pop
or
mov
or
ret
adc
rorl
adc
adc
add
xchg
dec
xlat
inc
call
push
cmp
dec
jb
adc
inc
push
mov
or
pop
call
in
mov
insl
test
jns
push
push
out
mov
xchg
pop
push
sbb
dec
inc
loope
fsubs
aas
insb
mov
xchg
pushf
mov
xchg
pop
jae
stos
fld
out
jae
sub
inc
aaa
xor
xor
inc
adc
out
lret
cld
lcall
mov
pop
adc
loopne
xchg
imul
cmpsl
loope
add
xor
sub
mov
push
cs
dec
and
rcr
xchg
sub
jge
mov
lods
sbb
subl
iret
clc
mov
jmp
mov
cmovge
rcrb
cmp
popa
add
notb
movsl
adc
fisttps
push
insb
sub
ret
lods
jmp
jnp
in
lret
arpl
pop
dec
xchg
cwtl
jno
mov
jl
stos
insl
xor
push
mov
out
in
fcomip
mov
popa
jecxz
mov
adc
out
jae
cmc
push
jg
es
cmp
scas
stc
fnop
lret
push
insb
adc
adc
pop
cmpsl
orl
fdivrs
pop
or
adcl
xor
pop
xor
fs
clc
and
jnp
pop
call
mov
dec
dec
loopne
and
stos
insb
mov
cwtl
bound
xchg
jle
in
push
rorl
loope
std
movb
mov
xor
movsl
sub
in
mov
sub
cmpsb
push
push
cmp
hlt
adc
push
test
inc
push
ror
push
outsl
jecxz
inc
push
jo
hlt
pop
dec
mov
cmp
sbb
push
popa
orb
leave
enter
inc
and
and
pushf
adc
shlb
push
adc
int
xor
rcrb
loop
loopne
mov
sbb
pop
or
test
pop
push
sahf
daa
jmp
aam
ss
cli
xor
pusha
mov
daa
sub
aam
or
dec
push
in
pushf
or
ret
and
stos
inc
imul
sbb
cmp
pop
insl
mov
cltd
cs
xor
jmp
dec
jmp
inc
lea
and
aad
adc
push
dec
aaa
lea
nop
mov
bound
popa
and
in
stos
fwait
lahf
pop
or
jp
ljmp
call
scas
pop
bound
adc
test
pusha
fsubrp
dec
mov
ret
fisubs
out
repz
mov
lret
push
push
sub
mov
hlt
ret
in
push
ja
xchg
push
div
adc
mov
nop
nop
pop
or
mov
pop
jb
sbb
loopne
xchg
imul
arpl
push
dec
pusha
push
or
cmp
pop
cmpsl
dec
popa
aaa
xchg
adc
ljmp
add
sub
in
cmp
xlat
and
mov
xchg
xchg
fcompl
mov
or
popf
push
cmpsl
es
shll
inc
jecxz
dec
icebp
or
out
rorl
lahf
notb
addl
and
leave
lea
adc
ds
push
jl
pop
ljmp
movsb
and
cmp
fsts
pusha
cmpb
or
loop
nop
jb
ret
mov
ja
stos
cmc
dec
ja
xchg
stos
push
and
cmp
nopl
in
imul
lret
lods
jbe
in
orb
cmc
orb
fcompl
xchg
pop
popl
addr16
scas
mov
mov
test
adc
int
ror
daa
mov
push
xchg
cli
cmp
ja
cwtl
inc
mov
inc
xchg
adc
inc
or
test
pop
mov
popf
xchg
jg
or
gs
subl
adc
stos
push
lret
movsb
decl
ret
dec
cmp
int3
and
mov
xchg
dec
imul
pushf
gs
sbb
pop
scas
mov
add
inc
je
ja
mov
dec
push
sub
mov
scas
fstpt
sub
cs
mov
cmp
fimull
inc
lret
js
daa
mov
xchg
movsb
hlt
add
mov
mov
inc
cmc
lods
push
jg
addl
pushf
inc
cmp
addb
sub
adc
push
shl
add
pop
mov
fchs
out
mov
imul
dec
imul
jbe
imul
mov
data16
out
enter
div
add
dec
sbb
pop
mov
ficoml
inc
push
andb
popf
in
imul
stos
pushf
inc
jl
xchg
mov
sti
mov
inc
cli
add
cmp
pop
hlt
push
inc
lock
ss
mov
xchg
push
lock
scas
fistl
stos
inc
fcoms
ret
sahf
push
jns
mov
pop
xchg
xchg
mov
jno
pop
dec
push
gs
xchg
or
fcomp
fmull
aam
and
vpshad
nop
adc
out
xchg
sub
loopne
cltd
lea
cmp
jne
repz
jmp
loop
jns
and
mov
aam
xchg
leave
or
cmpb
scas
add
push
repnz
jecxz
pop
aas
ljmp
cltd
xchg
movq
aas
insb
ljmp
or
andb
xchg
push
push
adc
mov
jns
mov
jbe
popa
cmp
cs
hlt
out
hlt
outsb
stos
xchg
sbb
adc
and
pop
and
mov
fdivrs
in
scas
xor
add
pop
sub
add
or
leave
xchg
ljmp
xchg
pop
gs
lock
cwtl
pop
inc
cmp
fnstsw
adc
ss
std
daa
dec
push
cli
out
pop
or
push
ficoms
push
add
sbb
mov
arpl
data16
loopne
int3
dec
pop
jae
cmp
push
mov
popf
xor
aas
mov
jmp
repz
jne
xchg
cmp
adc
pop
enter
cmp
and
popf
add
scas
stos
test
sti
mov
pop
xor
inc
cmp
dec
mov
push
lea
test
jmp
loopne
cmp
sbb
int
sahf
repz
idivb
add
xchg
cmp
inc
xor
push
jl
adc
daa
inc
into
in
pop
and
jbe
cld
shrl
jmp
jp
imulb
int
outsb
sbb
test
sbb
push
nop
xchg
pop
lds
xchg
xchg
adcb
ret
mov
mov
insl
push
cmp
sub
or
lcall
jecxz
pop
testb
cld
cmc
mov
fs
or
inc
or
imulb
jno
mov
lahf
nop
fbstp
cmp
add
rcrl
lret
scas
adc
push
fwait
mov
lock
or
cs
sbb
fimull
dec
sti
popa
pop
add
mov
sbb
sub
and
jg
and
sti
movl
xlat
fidivrs
sahf
repz
enter
push
push
xlat
adc
orl
jge
xchg
cmp
jecxz
push
divl
pinsrw
push
and
xor
dec
cmp
push
into
cli
lea
int
ss
and
lds
cli
xchg
in
cmp
test
jg
mov
dec
sbb
and
adc
sbb
jl
shll
int3
out
sti
rcrl
je
movsl
insl
mov
push
jecxz
jbe
loopne
mov
loopne
data16
testl
out
test
jno
add
xor
pushf
nop
xchg
add
mov
mov
or
rcl
repz
sub
lds
pop
fistpll
hlt
cmp
mov
ja
out
mov
push
roll
mov
sbb
movsb
rcrl
in
mov
fs
push
movsl
push
mov
jo
arpl
lods
jecxz
add
fldt
mov
les
cli
cmc
mul
inc
mov
sbb
test
mov
scas
jmp
mov
push
pop
pusha
cmc
enter
test
cmp
jle
imul
aaa
adc
out
pop
sbb
mov
cli
sahf
pop
mov
mov
aas
pop
out
les
inc
sbb
mov
ret
add
add
ret
cwtl
in
xlat
psllw
gs
mov
lock
cmpsl
mov
fnstsw
and
sub
inc
lahf
dec
out
out
adc
adc
pop
stos
data16
lret
sub
faddl
add
add
out
push
jo
imul
xor
sub
mov
xchg
adc
or
pop
push
cwtl
add
inc
imul
jl
out
jp
imul
movsb
mov
and
push
sub
cwtl
cwtl
insb
pop
jmp
jg
sahf
flds
insl
fs
dec
cmpsl
mov
jge
mov
jge
out
cmc
aas
mov
dec
addr16
fiadds
pushf
in
jbe
xor
repnz
std
mov
ret
pop
sub
push
xor
push
pusha
hlt
sahf
push
adc
mov
test
or
mull
outsl
loope
addr16
enter
iret
dec
ja
sbb
sbb
insb
orl
addb
fcmovnu
mov
ja
lret
inc
inc
sub
add
fwait
xchg
lods
daa
rcr
cmp
les
in
push
mov
popa
daa
mov
fwait
cmpsl
mov
jl
dec
ds
test
sbb
unpcklps
les
xor
and
xchg
sti
sub
xor
jg
mov
repnz
or
xchg
dec
or
ja
and
and
push
push
xchg
dec
and
fwait
push
in
int3
cmp
sbb
xor
addr16
imul
aaa
jp
ljmp
push
out
int3
add
test
and
pop
rclb
hlt
into
xor
and
dec
imul
jmp
dec
cmp
jns
pop
repz
jb
icebp
xchg
lret
aam
icebp
mov
sub
outsl
and
push
test
and
pop
ljmp
sub
lcall
cmp
fimull
mov
decl
in
cmp
mov
xchg
sbb
shll
lea
inc
and
jb
lods
inc
das
mov
push
icebp
lea
lods
mov
dec
and
rol
xlat
jl
inc
bound
mov
bound
add
js
sub
add
jp
ret
mov
sbb
jecxz
push
adc
ds
and
rcrl
lret
mov
pop
data16
mov
arpl
fsubl
inc
lods
stc
shl
add
stos
pop
out
sub
mov
xorb
cmpl
jns
ss
test
rcrl
push
push
sub
out
test
pop
jno
mov
mov
inc
mov
ret
pop
jbe
jmp
fsubs
sbb
loop
pop
xchg
push
leave
push
sub
ljmp
sar
dec
or
test
fcmovbe
sbb
xchg
xor
das
popa
jecxz
pushf
idiv
jl
jae
in
aam
sbb
or
sub
cld
dec
rorb
xchg
imul
dec
cld
mov
jmp
rcll
ljmp
jmp
or
call
sub
pop
sub
push
jp
pop
mov
push
out
in
cs
adc
stos
ror
enter
pusha
mov
jmp
dec
icebp
out
sti
inc
mov
lahf
push
movsb
shlb
dec
xor
adc
mov
pop
in
or
dec
xchg
mov
out
sbb
repz
cmp
ret
gs
xchg
rolb
inc
mov
fistpll
add
ffree
sahf
test
and
xchg
push
xchg
add
pushf
sbb
lahf
scas
out
sub
push
push
push
cli
push
imul
mov
int3
arpl
jl
xor
popa
cld
xor
ljmp
xor
sbb
dec
nop
mov
inc
cmp
movsl
jo
push
xchg
popa
mov
mov
sub
adcb
sahf
cmp
fwait
push
in
and
dec
jne
xlat
ljmp
sub
or
mov
adcl
imul
jge
fsubrp
cmp
fbld
call
stos
push
daa
clc
pop
and
and
sub
pushf
push
movsl
stos
ss
sub
sahf
dec
inc
cs
cmpl
popl
pop
test
sbb
je
cmp
xchg
mov
pushf
xchg
fcoml
xchg
mov
loope
int3
js
and
icebp
mov
stos
sbb
xor
jg
into
lock
add
mov
xor
cmpsl
pop
addr16
fists
test
outsl
sbb
xchg
add
in
in
je
sub
icebp
and
cli
mov
addr16
aas
inc
scas
pop
jle
sbb
push
push
pop
iret
dec
xchg
and
mov
cmpsb
inc
xchg
jge
icebp
sbb
inc
pop
push
popf
ljmp
sub
sub
out
rcl
mov
dec
fdivrl
cmpsl
sub
ret
pop
inc
mov
jmp
or
cmp
popf
jo
xchg
jns
sbb
or
adc
add
adc
or
jp
xor
inc
add
daa
push
mov
dec
inc
cmc
stos
aad
push
cld
test
ret
mov
sbbl
subb
push
cmpsl
out
mov
repz
jns
push
add
adc
rclb
and
mov
lret
jno
stc
add
xlat
mov
pop
in
and
mov
mov
cli
push
push
push
sub
andl
sbb
out
cmp
lea
mov
dec
pop
fimull
stc
nop
xor
fs
testb
adc
out
lods
pop
xlat
dec
jle
pop
mov
scas
cmp
into
xchg
sub
daa
movsb
inc
ret
pusha
add
std
bound
movsb
movsb
mov
bound
mov
cmp
cmp
cmp
call
test
adc
lahf
dec
stos
dec
stos
add
repz
dec
test
xchg
push
es
or
std
pusha
pop
vmovq
dec
ljmp
scas
pop
inc
repz
test
scas
fwait
aam
sbbb
pop
jp
movb
pop
adc
jo
adc
aam
inc
xchg
fstl
icebp
sbbb
cmpsb
cmp
ret
test
testb
and
cltd
pop
insb
pushl
loopw
mov
sbb
or
cmp
sub
mov
pop
xor
mov
xchg
jl
pop
nop
stc
icebp
daa
pop
mov
dec
or
add
pop
clc
scas
out
jle
mov
ds
or
xchg
nop
jo
lods
jb
push
jne
xlat
xor
jmp
inc
mov
mov
add
std
lods
xchg
lcall
dec
and
insb
adc
xchg
mov
out
add
mov
dec
lds
mov
cmpb
idiv
test
je
cwtl
clc
gs
in
inc
xchg
aas
jl
dec
sbb
pusha
inc
out
adc
push
jl
sub
lret
in
gs
xchg
int
xchg
xchg
mov
scas
ds
sahf
aad
arpl
push
in
sub
xor
mov
sbb
in
in
movsl
cmp
repz
and
mov
lock
outsb
mov
or
idivl
mov
dec
ret
mov
sbb
movsl
sbb
lods
jge
rclb
push
or
test
dec
jb
and
inc
xor
hlt
push
call
enter
pop
xor
sub
jg
mov
cs
or
or
dec
test
in
sub
out
jb
mov
adc
es
pop
and
daa
lret
shlw
int3
xlat
std
add
mov
in
jae
stos
push
inc
stc
push
mov
arpl
pusha
insl
jb
inc
in
rcll
adc
rolb
adc
lret
mov
idivb
push
stc
rcl
sar
push
dec
dec
sub
lret
movsb
mov
sbb
ljmp
int3
sbb
cmp
fiadds
jne
xchg
mov
or
mov
lods
push
and
mull
rol
loope
daa
aam
incl
gs
pop
test
inc
movsb
mov
jne
mov
mov
add
mov
sbb
fstpl
mov
xor
jge
ja
out
es
cmp
bswap
dec
jo
ja
aad
test
shll
add
xchg
insb
aad
xor
out
adc
mov
fcompl
pop
push
dec
in
arpl
mov
lret
xchg
jbe
xor
mov
loope
pop
mov
jle
scas
insb
dec
in
inc
es
cmpsb
push
xor
push
xor
mov
mov
add
lock
and
rcrb
out
mov
fwait
cmp
jp
mov
ja
rolb
mov
es
out
sarl
sub
inc
mov
push
mov
push
es
push
xor
std
js
sti
lds
push
aas
xor
insl
sub
jmp
adc
pop
scas
shrb
dec
int3
or
jmp
push
xchg
mov
loope
jmp
and
lock
in
pop
ja
xor
xor
cmp
fstl
imul
inc
idiv
adc
push
repnz
xor
xor
enter
xor
lcall
test
jns
cmp
sti
push
dec
out
cmpsl
adc
fldenv
loop
lcall
cmp
mov
jl
pop
out
dec
ds
mov
lret
ret
adc
sub
sbb
push
aaa
and
popf
cli
mov
rcl
cmc
test
sbbl
nop
jle
int3
gs
inc
pusha
sub
imul
out
add
loop
mulb
out
cmp
pusha
jae
rdpmc
xorb
mov
adc
mov
sbb
adc
notb
jle
xlat
adc
dec
sbb
adc
jae
arpl
pop
in
add
inc
push
jp
fldlg2
adc
cmp
push
sti
pop
out
mov
rcll
mov
icebp
fnstcw
jp
repz
sub
and
iret
jmp
rcrb
or
fsubr
stc
push
xlat
push
jg
mov
stos
sbb
add
pop
int3
push
inc
dec
mov
sbb
lret
test
int3
in
jb
addb
lret
jno
stos
and
pop
popa
shlb
inc
test
cltd
dec
lds
lods
fdivrl
push
fwait
rolb
mov
mull
ficomps
aas
nop
js
std
clc
mov
jecxz
inc
sub
sbb
fs
mov
xor
xchg
and
cli
test
sahf
pop
andl
ds
mov
mov
hlt
stc
rep
mov
xchg
aad
mov
data16
es
mov
popa
out
pop
imul
imul
mov
fmuls
pop
clc
cld
pop
push
mov
rol
adc
and
sbb
xchg
inc
dec
ret
pusha
scas
or
cmp
pop
popa
push
stos
cmp
sub
jbe
add
repz
int
add
dec
ret
jl
scas
repz
loop
inc
push
loopne
jecxz
decb
pop
jo
and
fisubrs
jl
inc
loope
adc
lods
sbb
jno
add
stos
jmp
in
xorb
sub
sub
mov
push
and
insb
iret
jns
rorl
or
in
dec
cmc
push
ss
xor
daa
out
sbb
sub
cmpb
repnz
push
xchg
inc
mov
imul
fld
sbb
pop
clc
dec
jne
cli
push
jne
decb
mov
cmp
ss
dec
or
sub
lret
xchg
ljmp
or
sahf
cmpsl
cmp
cmp
mov
insb
dec
xchg
mov
cld
jne
loope
push
jecxz
mov
pop
push
cs
hlt
dec
pop
add
out
ret
mov
mov
or
movsl
out
stos
pop
and
popf
push
pop
mov
xchg
cmp
pop
ss
out
loope
cli
outsl
lods
rcl
pop
aas
lret
adc
pop
add
cmp
and
and
mov
cmp
add
out
out
lock
jns
push
pop
jge
mov
push
jbe
pop
xchg
cmp
scas
decl
sbb
ret
inc
and
cs
or
mov
jge
ss
jne
iret
cmp
jns
xchg
jg
stos
or
push
xchg
rcrb
stos
xchg
xchg
inc
lcall
pop
arpl
roll
subl
cltd
and
stos
dec
pop
lahf
sbb
fstpt
mov
jbe
enter
mov
cld
dec
loopne,pt
jns
adc
xchg
xor
data16
sbb
or
xor
fisttps
mov
xor
xchg
mov
mov
mov
jnp
cmp
ljmp
out
insl
mov
and
hlt
fmulp
mov
cmp
mov
push
mov
push
fildll
inc
mov
add
pop
into
pop
adc
adcb
sahf
repnz
fs
sbb
popf
shll
daa
dec
or
inc
jg
insb
push
js
fstps
lahf
ret
jno
push
out
rcr
cmpsl
sub
inc
insl
pop
popf
mov
add
inc
and
dec
xchg
sahf
data16
lods
mov
inc
addl
push
pusha
sbb
add
test
inc
xorb
or
mov
inc
jno
pop
jmp
jmp
and
inc
jnp
lea
sarb
jg
xchg
lret
pushf
fimuls
or
and
jecxz
iret
insb
repnz
adc
sbb
mov
mov
mov
out
cmpsl
rorl
cwtl
shlb
ss
movsl
ror
outsl
push
scas
cmp
out
scas
imulb
lcall
xchg
cltd
mov
mov
push
test
jne
sti
fmull
nop
pop
and
outsb
scas
lds
or
cmp
rorl
xchg
pop
in
cmp
or
bound
pop
movsl
cltd
pop
jg
and
or
add
xchg
aas
addr16
out
push
fstl
dec
and
mov
roll
dec
mov
mov
int3
rol
add
mov
mov
cmp
xor
pop
xchg
fistpl
pop
movsb
xor
cltd
fimull
push
inc
sub
pusha
cmpsb
jae
movsl
or
pop
sbb
ret
leave
test
xor
and
sbb
xor
adc
hlt
push
in
in
mov
jl
lods
jno
and
stos
imul
mov
cmp
insl
stc
push
mov
push
mov
dec
mov
and
adc
aam
push
out
jl
and
scas
xchg
jecxz
mov
jns
mov
jg
fwait
dec
mov
jmp
pushf
mov
sbb
dec
jecxz
mov
xchg
insl
xor
push
push
mov
push
inc
sbb
pushw
sbb
xor
cmp
mov
pop
adc
pop
iret
imul
lods
xor
add
shrb
fcomps
loope
jg
fidivrl
xchg
sub
inc
or
cmc
cli
cmp
out
pop
cmp
aam
jno
and
std
push
lret
popf
cmp
xchg
mov
inc
dec
mov
aad
pop
subb
push
shrb
pop
lahf
mul
lods
out
out
jno
lret
jns
mov
and
and
cmp
inc
aad
movsb
js
mov
mov
cmp
xchg
movsb
sbb
pop
lds
jbe
mov
dec
mov
mov
in
cmpsb
repnz
ret
stos
scas
ret
clc
mov
jmp
add
jge
pop
or
xchg
adcl
push
inc
repz
pop
or
fbstp
adc
cld
ret
mov
dec
dec
imul
rcll
stos
or
out
inc
aaa
lret
inc
fidivl
std
clc
or
in
dec
adc
adc
fistpll
in
je
jne,pt
mov
cld
mov
add
add
pushf
iret
mov
leave
stos
xor
lds
adc
xor
test
mov
mov
out
fisttpl
adc
cwtl
cltd
xchg
js
or
and
stc
test
repz
fcmove
or
aad
aaa
mov
push
fwait
lods
leave
lcall
inc
fdivrl
jge
mov
sbb
mov
lret
pop
jge
add
sub
out
cmp
enter
mov
data16
cltd
mov
inc
shll
push
dec
jno
dec
mov
xor
scas
idivb
push
out
lcall
fdivrl
mov
cwtl
mov
pop
shr
test
mov
iret
jle
mov
lret
inc
jnp
mov
pusha
je
adc
sbb
dec
scas
addr16
lds
pop
insl
dec
add
mov
negb
inc
stos
xchg
mov
cmp
add
mov
stc
test
add
lds
cmp
and
add
pop
movsl
nop
add
add
mov
push
fnsave
cld
mov
pop
cmp
shrl
lock
data16
jae
xor
andb
orb
xchg
mov
push
repnz
dec
mov
clc
xchg
pop
push
push
lds
repnz
jle
pop
pop
scas
sub
and
add
mov
lods
pop
cmp
imul
xchg
in
adc
inc
cld
push
mov
xor
pop
in
mov
mov
stc
testl
int3
or
es
popf
and
in
aad
push
add
adc
mov
add
mov
jp
cltd
xchg
shrl
arpl
rclb
and
imul
fwait
jo
xchg
bound
test
cmpsb
pop
movb
movb
out
jmp
or
repnz
lds
scas
leave
mov
shl
out
pop
lcall
test
popl
addr16
into
push
mov
push
daa
mov
outsl
mov
or
sbb
pop
sti
popf
addr16
dec
fbstp
add
add
sti
push
out
sbb
and
movsb
mov
inc
out
ss
mov
pusha
push
or
ja
cmpsl
or
movsl
repz
enter
xor
cmc
pushf
shll
pusha
int3
ret
push
add
push
iret
sub
in
and
loop
rorl
dec
aaa
test
xor
and
ret
iret
out
mov
jno
stos
inc
and
pop
adc
add
in
aad
aaa
lods
sub
sbb
loopne
sti
inc
adc
ljmp
ss
lods
sbb
jl
sub
xchg
rorl
ret
movsl
repz
sub
dec
sbb
mov
loope
mov
adc
cmp
add
test
cmpsl
adcb
sti
or
out
and
lods
mov
mov
xor
and
push
out
mov
aas
int
dec
cmpsl
sbb
pop
mov
push
pop
scas
xchg
sub
test
sbb
adc
test
jl
movsl
xor
pop
and
cmpsb
sub
lods
and
dec
clc
cmc
push
leave
inc
mov
scas
inc
push
jle
jg
fimuls
gs
adc
mov
inc
cwtl
shrb
fistpl
inc
push
jp
shrb
inc
jae
popa
out
enter
mov
mov
les
mov
xchg
sub
adc
stos
out
mov
leave
adc
repz
add
dec
aas
mov
sbb
and
add
fdivrs
pushf
xor
inc
sbb
adc
imul
popa
dec
xchg
cld
fnclex
fcomps
pop
pop
adc
shlb
mov
xor
push
in
adc
mov
lods
shll
idiv
icebp
lret
fbld
pop
mov
sbb
add
shll
lahf
add
ja
gs
pop
test
mov
pandn
icebp
pushf
pop
repz
js
in
cmp
jns
rclb
xor
fbld
mov
mov
mov
repz
out
mov
cwtl
xor
push
adc
jle
pop
add
hlt
negb
jl
add
das
adc
mov
jge
inc
ds
stc
xchg
pop
pop
loope
in
mov
xchg
outsb
or
and
daa
push
iret
out
roll
rorb
or
push
sahf
cli
or
mov
xor
xor
cltd
and
lods
repnz
fisubrl
popf
sub
xchg
mov
dec
outsl
xchg
xor
mov
xchg
lods
or
lea
and
movsl
into
out
fsub
mov
shl
imul
lds
pop
gs
aas
les
dec
push
aaa
xchg
std
adc
push
scas
daa
sti
shl
sbb
mov
cmc
pushf
clc
sarl
stos
lret
adc
adc
test
in
sahf
mov
sbb
jnp
shll
int3
test
andb
push
es
and
retw
out
pop
cmp
mov
cmc
inc
mov
sub
lret
cmp
push
orb
mov
sbb
push
jg
push
adc
data16
mov
jp
cmp
rcll
cmp
mov
sub
sub
stc
cmp
sbb
mov
jnp
adc
push
mov
push
and
sub
fbld
adc
ret
jl
mov
test
pop
out
jl
inc
cmpsb
out
fdivp
cmpsb
xchg
xor
dec
flds
sub
lret
push
inc
xor
dec
jo
jmp
stc
push
pop
js
sub
jl
sub
out
pop
lahf
jns
or
jp
xor
aaa
lock
or
cld
mov
and
incl
pusha
dec
sub
xchg
lret
mov
les
jbe
pusha
ret
fldt
sti
xor
fldenv
movnti
jae
shll
popa
mov
aas
xchg
arpl
inc
mov
jl
jle
inc
push
xchg
jecxz
jae
xchg
mov
sbb
xor
aaa
loop
dec
adc
pop
inc
push
loope
add
fldt
push
orb
adc
add
and
mov
pop
pop
add
stc
daa
mov
jb
aam
scas
mov
and
jbe
mov
faddl
and
sub
push
icebp
cmpsb
and
cmpsb
push
movsl
lds
in
sbb
in
call
movsb
loopne
es
dec
fsubrs
dec
fstpt
gs
jbe
xor
jae
sub
cmpsb
sbb
push
jecxz
add
mov
sbbl
add
dec
fwait
bound
and
sbb
test
inc
add
addr16
sub
sbbb
add
and
push
mov
xor
and
xor
and
lcall
push
pop
test
enter
hlt
or
dec
cmp
aas
xlat
decl
and
insl
dec
sub
nop
jo
adc
mov
push
adcb
ds
jle
in
fstpt
imul
mov
push
enter
leave
dec
pop
sahf
test
lcall
jbe
lods
aas
mov
fisubrs
adc
ds
ret
push
test
movsl
or
repnz
ret
xor
mov
insb
mov
in
dec
flds
popf
pop
or
testl
leave
fiaddl
sbb
inc
xchg
cmp
testb
aas
rolb
jbe
push
add
cmp
hlt
out
dec
add
pop
and
iret
push
inc
jo
lock
adc
inc
push
lret
add
jno
jbe
sbb
clc
mov
enter
jl
ljmp
rclb
mov
and
movl
call
xchg
add
test
call
mov
dec
aad
hlt
add
or
and
cmp
sub
bound
lock
out
mov
outsl
sub
dec
subb
aad
inc
or
jnp
outsl
add
aas
leave
mov
mov
jmp
sub
jns
leave
lea
lock
jae
mov
xor
testb
adc
jle
mov
in
push
cwtl
lret
cwtl
outsl
add
jecxz
ljmp
adc
cmp
sub
cmp
mov
sbb
leave
push
pop
inc
xchg
jno
sub
repz
xchg
loope
push
int
xlat
cmp
push
adcb
insb
adc
jecxz
xor
push
mov
cmp
in
shll
cmp
stos
popf
clc
flds
out
aas
xchg
pushf
xchg
das
cli
sub
lret
outsb
sbb
int3
jae
into
sub
addr16
add
dec
jmp
push
inc
fsub
cmp
loop
cmpsl
inc
jbe
popf
cltd
mov
and
mov
lcall
insl
rorl
test
pop
arpl
inc
push
sub
dec
adc
dec
movsb
pop
fwait
leave
jmp
stos
or
ljmp
mov
push
add
imul
jae
push
mov
std
loope
in
nop
cltd
fmulp
loope
sarl
mov
ret
mov
add
ja
fldt
inc
inc
shl
aas
cmp
verr
sbb
inc
sub
fwait
mov
cmp
mov
push
cmc
mov
and
xor
xor
dec
call
das
insb
cmc
iret
push
push
lods
pop
pop
test
cmp
xlat
sbbb
lcall
sarl
movsl
mov
test
daa
js
and
inc
int3
inc
push
xchg
rcrb
mov
push
jg
cmpsb
ficompl
ljmp
iret
hlt
test
sbb
mov
fnstcw
cli
ss
push
cmp
js
push
in
inc
insl
aaa
cmp
mov
scas
inc
or
inc
sbb
sub
cmp
mov
in
sbbb
jle
xchg
pop
mov
in
jo
xchg
jb
xchg
das
sub
inc
mov
cmp
idivb
or
lret
stos
lret
jge
pop
mov
jg
add
aad
xor
and
mov
das
mov
nop
rdmsr
xchg
dec
lret
pop
out
lods
ss
pusha
xchg
mov
cmc
rol
xchg
aam
push
int
xchg
stos
push
cmp
je
and
dec
pop
xchg
inc
jmp
cmp
mov
in
or
pop
mov
es
sub
fadd
decb
dec
data16
inc
xor
xchg
jge
push
mov
in
enter
mov
lret
nop
xlat
sub
mov
or
stc
sub
push
out
fisubrl
dec
stos
adc
pop
or
inc
jle
comiss
pop
cmpsb
lret
inc
movsb
push
cmpsl
loope
and
lock
push
cmp
nop
mov
lret
cmp
cmp
jbe
sarb
jno
ljmp
mov
push
arpl
mov
push
add
inc
jne
cltd
out
jo
es
sub
ficoml
pushf
sub
cmp
jo
rorb
jb
mov
push
arpl
mov
into
outsb
xchg
outsb
add
sbb
aaa
adc
pop
cmp
in
jl
xor
mov
add
sahf
xor
and
stos
pop
lods
mov
imull
inc
test
mov
mov
or
into
cmp
loopne
orb
and
fs
fwait
cmpsb
xor
es
sub
push
adc
ret
not
loope
sbbl
add
hlt
jl
es
test
pop
push
mov
inc
xor
js
or
js
in
and
adc
or
stc
xor
and
mov
popf
sbb
xor
arpl
dec
and
dec
mov
push
sbb
out
lret
out
lods
and
aad
repnz
in
xchg
rcl
mov
mov
sahf
mov
cmpsb
jns
jmp
pop
mov
cli
mov
sbbb
sub
pushf
stos
call
cld
cmpsb
push
mov
lret
fldcw
ret
imul
int3
movb
and
dec
push
mov
pusha
jbe
int3
mov
and
sbb
mov
xor
into
mov
cmp
xor
out
insl
pop
cmp
xor
pop
addl
and
cmp
stos
xchg
and
popa
push
jp
loopne
dec
and
orb
sub
adc
cmp
mov
loope
jg
mov
aad
xchg
rcll
repnz
mov
ljmp
clc
push
pusha
stc
pop
or
fbstp
cli
test
push
dec
leave
dec
cwtl
and
jge
xchg
push
divb
jbe
or
mov
mov
das
rcll
inc
push
in
iret
inc
sub
cmp
jo
dec
sti
jge
dec
imul
jle
cmp
cmpl
jecxz
mov
add
addr16
xchg
mov
xor
in
or
mov
js
adc
test
pop
or
xor
lcall
stc
enter
or
pusha
or
std
or
stos
cwtl
std
daa
pop
sub
mov
bound
in
pop
lock
sbb
cltd
xor
inc
and
popf
mov
sub
fsin
and
mov
jmp
mov
adc
popf
lods
loop
mov
mov
cmp
fsts
mov
and
icebp
je
fsubrl
jge
adcb
push
pop
inc
in
mov
out
into
push
pushf
xor
int3
ss
pop
in
ljmp
loop
mov
pushf
xchg
sub
xchg
mov
sbb
not
in
pushl
add
xchg
call
pop
mov
or
push
sbb
nop
pop
push
sub
cmp
addl
repz
subb
cmp
or
cmp
mov
rclb
jno
in
aas
aad
dec
mov
mov
jg
lcall
idivl
aad
sbb
stos
int
cmp
mov
mov
pop
push
dec
mov
mov
mov
pop
adc
xchg
cmp
imul
or
dec
add
xchg
outsl
movsl
push
hlt
jmp
dec
rcrl
bound
icebp
mov
pop
cs
negb
cld
mov
hlt
adc
test
fcoml
push
add
es
cmp
jg
ret
cld
and
pop
int3
push
jo
pop
das
adc
push
cmp
in
lock
sub
daa
in
add
pusha
fwait
adc
adc
ret
jb
sahf
cmc
insl
pop
sti
jge
in
add
mov
icebp
test
xor
cwtl
test
gs
aad
outsl
enter
cmpsb
mov
testb
and
push
jecxz
movsl
pop
push
clc
cmpsl
inc
test
lock
sub
jo
stos
arpl
push
fnstsw
lea
mov
mov
enter
push
out
data16
mov
xchg
je
outsb
lahf
pop
gs
push
jp
in
scas
fs
ljmp
mov
ljmp
lahf
rcll
fdivp
movsb
pop
cmp
jno
rcr
push
das
ss
xor
ret
dec
dec
sbb
or
add
mov
push
sbb
xor
lea
inc
mov
push
nop
lret
adc
and
jne
imul
cmp
fmull
daa
out
fdivs
sbb
outsb
mov
or
cmpsb
jne
xchg
dec
add
and
dec
mov
cli
mov
xchg
mov
mov
mov
xor
repnz
addr16
sbb
sub
je
and
aas
das
dec
and
inc
xchg
jb
movsb
in
sub
outsl
ret
and
and
stc
aad
movl
stc
xchg
ret
mov
in
mov
xchg
sub
fcomps
loop
icebp
fildl
ljmp
or
das
and
std
loop
into
add
jbe
sbb
pop
mov
pop
pop
cltd
inc
lcall
in
mov
lods
aam
inc
mov
loop
lods
aas
fcomp
xor
leave
sub
pop
popa
iret
pop
mov
stc
dec
clc
jno
mov
fadds
lcall
pop
mov
cmc
jmp
pusha
cmp
fstpl
lret
xor
repnz
in
xchg
notl
sub
dec
jmp
fwait
daa
aam
xor
jo
mov
inc
xchg
and
clc
dec
dec
pop
ja
mov
inc
pop
adcl
sub
jne
sbb
cmpsl
test
imul
pop
xlat
mov
push
stc
mov
add
pop
in
inc
rorl
outsl
jmp
xchg
lahf
scas
lcall
dec
das
hlt
sbb
mov
pop
or
testl
dec
mov
pop
xchg
aas
test
int
cwtl
xchg
in
mov
push
xchg
push
jae
jbe
lods
mov
pop
sub
imul
xchg
sub
push
std
repnz
mov
test
lock
lds
insl
das
jae
and
in
xchg
movsl
je
inc
jp
xor
push
push
std
cmp
cmp
inc
cmp
jp
es
add
mov
out
iret
push
insl
mov
es
or
mov
push
int
add
add
adc
pushf
sub
mov
mov
fsubrs
push
mov
adc
pop
jae
lea
pop
or
movsl
rcll
sub
sbb
testl
mov
adc
pop
jne
push
repnz
mov
fdivs
arpl
jae
bound
mov
mov
into
xchg
sbb
movsl
sarb
xor
outsl
shr
sub
int
cmc
jl
and
gs
xor
mov
shll
mov
repnz
pop
inc
push
pop
fistps
pop
leave
sub
jne
imul
sub
rcll
idivl
add
push
adc
xor
ja
or
stos
sub
shlb
pop
fstpl
add
dec
dec
mov
cmp
stc
push
mov
xchg
or
sub
int
add
push
jp
lcall
js
hlt
xchg
xchg
push
hlt
add
xchg
sbb
cs
mov
inc
mov
mov
lds
mov
icebp
lret
lret
ret
inc
mov
js
mov
fld
xor
shll
push
cmp
shl
imul
fimull
pop
push
mov
stos
shlb
out
and
sbb
inc
repz
movsb
call
push
shll
mov
xor
test
mov
cli
loop
frstor
jecxz
lods
insb
sub
mov
jge
mov
mov
adc
sub
xor
cmp
shll
inc
mov
cmp
add
sbb
add
fdivrp
and
fisubrl
push
loopne
or
call
dec
inc
ds
incl
or
mov
jge
sub
mov
xlat
mov
jnp
bound
push
scas
andb
xchg
pop
jno
cwtl
lret
mov
jmp
int
xchg
cmp
stos
or
mov
ficomps
and
sarl
xchg
movsb
cwtl
popa
jns
add
js
xor
stos
shlb
clc
stos
sbb
push
or
insl
repz
or
pop
js
repz
xchg
pusha
or
adc
cltd
push
mov
push
cmpsl
xchg
test
adc
dec
mov
ja
jnp
aad
popa
popf
sbb
mov
sarl
push
mov
imul
xor
repnz
push
cs
cmp
mov
cmp
jle
decl
mov
mov
jns
inc
jg
ljmp
xchg
pop
pop
sub
fsubr
pop
popa
imul
push
push
aaa
shlb
add
out
jmp
sti
push
out
sbb
cs
pop
push
cmovp
outsb
inc
mov
jbe
int
mull
xor
inc
movsl
js
push
xlat
imul
cmp
in
aad
mov
mul
mov
cmpb
out
xor
jmp
mov
arpl
add
add
mov
xor
stos
loope
fwait
pushf
add
dec
repnz
rol
xor
jge
pop
mov
lods
mov
jno
or
nop
sbb
xor
add
pop
faddl
sbb
or
jne
mov
testl
int
pop
daa
xor
adc
and
out
sbb
jle
push
cmpsb
stos
test
ret
sti
ljmp
mov
cmp
ret
jbe
adc
loopne
pushf
xchg
sbb
imul
push
outsl
push
fistps
cmpsl
cs
fstpl
adcb
lss
xchg
fisttpl
subl
in
rclb
clc
adc
out
mov
mov
imul
insl
arpl
ret
or
and
dec
add
test
push
sub
mov
and
insb
pop
sub
inc
loope
or
push
jmp
sub
mov
sbb
rcrb
pop
in
int
stc
push
test
lcall
mov
and
nop
das
and
out
jl
xor
sub
xlat
sti
fldt
sub
cmpsl
leave
push
pop
xchg
mov
xchg
nop
outsb
push
jmp
movl
cmp
lods
inc
mov
add
mov
iret
movl
sub
divl
popa
push
aad
and
add
divl
popa
dec
cmp
cmp
or
cmc
das
push
jae
mov
adc
jmp
mov
rolb
xor
leave
add
adc
jmp
in
inc
cmpsl
rorb
mov
outsl
mov
enter
roll
jae
test
add
mov
push
mov
sbb
lcall
lods
mov
mov
in
xchg
ds
clc
dec
loope
test
push
fwait
sub
mov
shlb
push
jbe
andl
dec
cmp
pop
ret
or
out
jecxz
sbb
popf
mov
mov
mov
in
or
lcall
jb
out
fstps
mov
shr
mov
js
cwtl
pop
jmp
mov
xor
cli
sub
test
mov
inc
xchg
mov
je
xchg
scas
repz
mov
adc
add
jge
xchg
ficoms
fidivrs
insl
aam
mov
test
jno
lcall
push
mov
xor
imul
xor
push
dec
or
mov
cmp
adc
in
sub
cmc
jnp
inc
jg
mov
jle
mov
and
enter
pop
out
pop
cmpsb
inc
push
sbb
sub
adc
add
jl
jb
dec
push
jl
adcb
cmc
pusha
sbb
into
hlt
scas
pushf
in
ss
mov
xchg
cmp
je
inc
mov
push
push
adc
daa
insb
ds
js
nop
push
push
daa
push
inc
adc
sub
aas
xchg
push
sbb
mov
pop
xor
push
les
pop
lods
and
aaa
mov
fcmovnbe
mov
push
pushl
call
jg
xor
mov
incb
pop
insb
sahf
movsl
lcall
inc
and
aaa
or
mov
insb
iret
js
subb
inc
lahf
push
mov
jns
inc
pop
sub
mov
mov
ret
lods
pop
shlb
mov
push
lahf
addr16
loope
movsb
adc
mov
xchg
dec
or
sub
or
dec
fldt
jl
jmp
cmc
jecxz
popf
add
inc
ror
push
rorl
andb
in
aad
out
push
push
mov
das
mov
push
out
adc
add
out
inc
dec
and
loop
xchg
jl
mov
mov
jl
push
add
hlt
neg
lods
mov
jae
nop
or
rorl
cli
dec
lea
cmp
lods
mov
or
pusha
in
jp
sbb
out
pusha
lea
jnp
or
rol
jge
xor
mov
fisubrs
xchg
je
jnp
or
sbb
das
int
insb
stos
push
cmp
and
xchg
jnp
pop
xchg
cmp
rcrl
push
dec
dec
nop
jle
lods
push
mov
das
jg
inc
outsb
inc
add
xor
fdivr
dec
pop
lds
js
dec
mov
pop
or
dec
in
sub
mov
cs
idivb
dec
in
sub
psubusb
loop
pop
adc
add
lret
pop
xchg
into
out
xchg
fnstsw
add
xchg
pusha
fnstenv
lahf
lret
lret
sti
jne
ss
bound
inc
xor
testb
or
repz
xor
cld
clc
stc
jmp
movsl
jns
popf
add
fs
push
mov
and
xor
fdivrl
aam
xor
cld
mov
pushl
xor
test
push
shl
xorb
xor
push
jnp
in
dec
sti
adc
inc
stos
das
lcall
jo
dec
mov
mov
stos
inc
xchg
jnp
mov
dec
jno
cld
xor
jl
fwait
fwait
fwait
hlt
test
sbb
cmp
clc
shl
in
push
cmpsl
fdivl
dec
xor
lock
shlb
cmpsl
and
add
mov
or
fwait
push
add
subb
mov
dec
or
out
add
fsub
dec
outsb
loopne
lea
fwait
cmp
fs
cmpsb
add
aad
jne
shrb
dec
sub
fimull
fimuls
pop
in
sub
in
les
mov
lret
sbb
lods
jmp
loope
repz
scas
psraw
orl
addl
sub
mov
int3
mov
pop
hlt
aas
jle
cmpsl
je
daa
hlt
adc
add
lcall
add
xchg
push
pop
bound
mov
lods
cli
inc
or
pop
mov
cmp
adc
sub
in
out
movsb
ljmp
mov
dec
dec
enter
jecxz
adc
xor
lcall
xor
sub
jbe
sub
and
cmp
adc
cli
mov
testb
fs
enter
dec
mov
test
jb
movsl
mov
pop
js
push
cmc
jne
stos
and
std
push
loop,pn
fs
jnp
cwtl
jmp
pop
in
pop
jno
mov
movsb
call
test
sub
push
pop
mov
jmp
pop
sbb
loop
mov
scas
add
leave
test
or
sbb
dec
fcomps
lret
inc
in
bound
sub
pop
xchg
ficompl
sbbb
sub
ja
cs
xchg
jne
out
out
ljmp
push
xchg
ret
sahf
push
js
loope
xchg
cs
pop
stc
xor
icebp
push
call
ret
xchg
pop
aas
and
sub
mov
mov
add
mov
jne
add
xchg
sahf
pop
add
mov
jl
pusha
dec
je
ja
into
sub
daa
fnstenv
inc
dec
mov
es
push
and
push
and
sbbl
cli
out
addb
and
add
mov
pop
call
mov
hlt
xor
jg
orb
sub
push
cmpsl
cmp
ret
loopne
out
in
push
in
cmp
xor
xor
ja
cmp
mov
push
outsl
push
pop
arpl
jg
aam
out
icebp
shrl
pop
cmpsl
mov
daa
inc
pop
pop
pop
xor
jne
rol
push
mov
repnz
pushf
pop
mov
inc
clc
pop
jge
stc
inc
jbe
push
sub
sahf
dec
mov
repz
fneni(8087
mov
repz
dec
popa
data16
sahf
mov
mov
int
jl
repz
sub
jge
repnz
pop
pusha
inc
sahf
push
inc
dec
pop
popf
jl
addr16
and
bnd
fidivrl
movl
and
xchg
jle
lock
xor
and
into
mov
add
movsb
stc
cmp
hlt
movsl
fsubs
jb
adc
cs
hlt
cmpsb
pushf
fbstp
mov
iret
inc
and
xchg
mov
dec
jns
jecxz
pop
push
mov
add
leave
xor
das
mov
mov
add
lods
aam
xchg
mov
lret
ljmp
mov
cmp
xchg
or
xchg
pop
cmp
mov
frstor
loope
xor
lods
daa
xchg
clc
dec
xchg
add
or
sbb
jb
cmp
fwait
pop
arpl
fwait
mov
mov
xchg
sub
cmp
push
adc
xchg
sub
movsb
mull
shll
shll
out
xchg
hlt
push
test
mov
in
jb
sbb
pop
pop
xchg
popa
lods
call
jb
out
pop
add
adc
and
sub
push
dec
jge
outsb
jbe
push
and
push
add
rcrb
ja
jg
fistps
enter
and
bswap
adc
xchg
and
pop
popa
movsl
repz
imul
rcrb
add
adc
jno
inc
mov
cmp
fidivrl
or
movsb
ss
xlat
fcoml
lret
pop
int
out
sub
add
jge
jns
mov
add
jne
adc
add
xchg
pop
cmpsl
xor
cmpsl
jecxz
ja
push
aas
cmp
push
pop
mov
ret
in
pop
jmp
adc
push
cmp
push
hlt
test
lods
stos
push
xorl
mov
rcpps
sahf
ja
adc
xorl
fisttpl
and
fs
out
xchg
cmp
push
pop
aaa
shll
mov
test
jno
cmpsb
xor
jae
adc
dec
cmp
into
loopne
and
pop
outsb
lret
mov
mov
js
xlat
push
mov
pop
imul
ja
out
mov
sub
add
pop
xchg
addl
pop
hlt
dec
movsl
sbb
push
or
and
inc
popa
xlat
sub
sbb
ss
mov
aaa
fs
jle
insb
iret
inc
adcl
mov
xchg
ret
call
add
icebp
mov
movsl
dec
mov
push
gs
loope
stos
cwtl
test
and
add
jns
pop
out
lahf
or
mov
insb
movsl
inc
pop
in
mov
loope
lds
in
or
inc
repnz
hlt
addr16
mov
xchg
sbb
fnstsw
xchg
shll
push
fdivrl
mov
int
mov
dec
cmpsb
pop
push
dec
repnz
xchg
jae
scas
adc
in
sub
jmp
xchg
cmc
or
push
insl
inc
xlat
cmp
mov
add
xchg
pop
hlt
mov
mov
inc
repnz
ret
xchg
lret
inc
sub
mov
mov
adc
sub
jle
push
jge
int3
loope
xor
fimuls
ret
aam
xchg
pop
in
add
push
xchg
mov
xlat
mov
inc
xor
adc
in
cmpl
dec
mov
fistl
insl
imul
fisubl
ja
sbb
add
xlat
popf
lods
lcall
add
insb
or
mov
push
imul
jge
decb
pop
push
imul
lods
adc
mov
pop
jnp
cli
ljmp
cltd
loop
xor
push
mov
sub
packssdw
cmpsl
sbb
test
cmpsb
test
cmc
in
adcl
jecxz
inc
push
cmp
cwtl
les
std
shlb
testb
pop
dec
cmc
mov
aad
sbb
dec
dec
push
je
adc
idivl
nop
fmul
jl
mov
jo
add
iret
push
arpl
xlat
mov
psubb
jns
mov
and
dec
cmpsl
push
iret
mov
xchg
movsl
xor
clc
xor
ss
sti
add
mov
fcomps
xor
or
lods
mov
loope
sahf
xchg
mov
rcrb
fwait
cmp
jns
xchg
ja
ret
stos
loop
je
mov
adc
repnz
sub
clc
sbbb
das
lds
rcr
mov
aad
repz
shrb
lock
pop
push
mov
adcl
lods
jecxz
cld
push
mov
adc
mov
repnz
loopne
inc
aaa
fisttpll
sub
dec
lret
cld
inc
mov
fdivl
test
rcl
xor
inc
and
add
mov
gs
aaa
mov
push
jge
xor
pop
imul
aas
and
sbb
xchg
cmpl
cmp
lcall
imul
xor
push
stos
test
push
mov
jnp
out
cld
dec
mov
mov
sub
imul
je
loopne
mov
loope
and
cmp
xor
inc
mov
cmp
xchg
int
sti
push
inc
push
mov
adc
dec
jbe
inc
fbld
popf
clc
bound
fsts
or
inc
cltd
mov
xchg
stc
mov
movsl
fisttpl
in
pop
bnd
xor
xlat
call
mov
out
aam
sbb
fsubrl
pop
mov
add
dec
or
aad
aad
xor
test
mov
and
dec
insl
out
xchg
rcl
adc
scas
inc
push
fs
mov
jmp
mov
and
lods
scas
cmp
xchg
inc
pop
fnstcw
ret
enter
sub
cmp
lret
pop
push
pushf
out
loop
lds
fcomi
ljmp
sbb
push
das
aad
jp
add
xorl
loop
inc
outsl
icebp
pop
icebp
sti
hlt
loopne
and
insl
cmpsb
movsl
stos
sbb
fsubrl
sub
dec
js
into
sarl
add
dec
xor
and
mov
ja
xchg
sbb
fmuls
add
popa
loopne
push
leave
sti
jne
push
sub
shrl
sub
popa
movsl
adc
aad
or
push
cwtl
mov
rolb
out
or
cmp
pop
mov
pop
mov
sahf
push
js
sub
or
or
push
inc
cmp
jmp
mov
jo
inc
inc
mov
cmove
push
cmp
pushf
adcb
test
and
jl
mov
mov
ja
decb
dec
mov
sbb
add
shl
mov
push
dec
js
xor
loop
bswap
pop
pop
mov
stc
inc
out
pop
sti
fwait
cmp
ja
pop
mov
and
movsl
jo
ss
ja
dec
cli
test
cmp
xchg
out
les
les
dec
cli
xorl
daa
daa
out
pop
decl
sbb
cld
int
add
rcrb
scas
dec
loopne
ds
inc
test
sub
in
sub
ja
jmp
scas
std
cmp
dec
lcall
test
and
cltd
xchg
push
push
dec
push
lret
scas
fistl
pop
js
mov
mov
add
pop
out
lcall
shll
pop
lods
dec
xchg
in
xor
nop
sbb
das
cmp
sub
push
and
mov
aaa
cmpb
mov
loop
mov
je
mov
push
lods
call
cmp
je
cwtl
les
ficompl
cli
lock
outsb
mov
ret
lds
push
xchg
cmpsl
cmpsl
jb
xor
gs
sub
mov
and
lock
sub
ss
mov
dec
cmp
imul
sub
sbb
adc
push
sub
and
int
push
cli
mov
test
in
test
fsubl
and
or
and
mov
outsb
leave
lods
icebp
push
out
or
stos
push
je
xchg
pop
ds
add
pop
adc
mov
dec
xor
ret
cs
imul
pop
xchg
aad
pop
test
cmp
fsubr
cli
xor
loopne
jnp
imul
mov
insl
stos
nop
pop
movsb
inc
jl
lcall
sahf
je
ss
jecxz
insl
and
pop
shrb
push
pop
mov
outsl
push
dec
xchg
gs
add
das
or
jle
ret
and
xchg
xor
call
mov
mov
les
popf
popf
fisttpll
lfs
cwtl
sbb
mov
imul
xchg
cmp
fldcw
xor
pop
jp
sub
pop
aam
lock
lcall
divl
ret
adc
sub
sbb
jae
sbbl
inc
pop
add
iret
jns
dec
pcmpgtd
test
or
adc
stc
cmp
or
jae
arpl
icebp
out
pop
sbb
shll
xor
repnz
call
mov
mov
and
and
repz
jbe
fsubrl
adc
cld
mov
mov
xchg
jle
inc
fs
js
stc
out
mov
pop
inc
sti
jno
push
push
cmc
sarl
pop
inc
mov
cwtl
and
mov
std
jl
dec
xchg
inc
divl
mov
jle
es
xor
inc
inc
sar
dec
ja
push
out
test
sbb
cmp
outsb
xchg
int
stos
jns
or
inc
test
aad
mov
or
pop
cmp
or
ss
cmc
cwtl
sbb
cmp
xchg
outsl
das
lcall
mov
ret
adc
cmpsb
jbe
cmp
and
scas
imul
xchg
pop
push
movl
jge
push
int3
adc
stc
cmp
loopne
nop
or
or
push
push
divb
mov
mov
in
mov
and
or
jle
aaa
mov
scas
sti
into
inc
pop
ret
adc
xorl
inc
sub
shlb
stos
and
inc
pop
xor
fcmovbe
push
cmp
mov
mov
push
jl
dec
sahf
inc
xor
jge
iret
out
aam
into
push
mulb
and
inc
pop
pop
lea
xor
daa
inc
mov
lcall
call
push
in
xchg
lock
or
dec
enter
xor
iret
mov
push
adc
in
nop
and
or
pop
scas
push
repz
lock
lret
inc
mov
int3
scas
pop
out
mov
push
pop
mov
ss
cmp
insb
out
orb
add
das
or
dec
dec
dec
mov
jns
repz
jb
dec
mov
das
and
in
out
xlat
insl
and
loopne
pop
mov
or
out
ja
push
sbb
dec
push
cmp
mov
call
adc
xor
dec
xchg
ficoml
jle
xor
add
sub
and
jae
mov
lcall
inc
inc
lods
push
outsb
push
pop
mov
outsl
movb
dec
jno
icebp
jge
adcb
movsl
iret
sub
les
sub
call
add
xlat
inc
dec
lret
aad
push
or
xchg
xor
out
inc
cwtl
add
aas
aad
adc
xorb
fidivl
xor
xor
mov
pop
lcall
cmp
inc
pop
inc
fmuls
adc
mov
mov
xor
push
sub
xchg
jno
cmp
push
fidivs
mov
cwtl
push
add
enter
out
stc
repz
cmp
xchg
cwtl
rclb
outsb
stos
cmpsl
pushf
mov
sub
mov
push
ror
icebp
iret
fpatan
jbe
mov
push
xchg
push
psrlw
stos
daa
jg
xchg
fisttpl
mov
adc
or
xchg
xor
mov
pop
in
sbb
cltd
pushf
stos
push
arpl
sbbl
mov
daa
mov
lcall
rcll
add
sti
push
popa
fwait
push
push
int
sbb
mov
popa
pushl
adc
jne
dec
loop
pop
rcrb
sbb
loopne
adc
ja
sub
neg
mov
in
in
jae
iret
lods
add
xor
popa
push
outsb
xor
jp
mov
mov
fisttpl
incb
jle
mov
leave
xor
xor
clc
js
in
shll
xchg
pop
cmp
cli
imul
sahf
daa
mov
scas
dec
mov
mov
mov
mov
push
mov
je
pop
push
pop
xchg
das
inc
cmp
cs
in
aam
mov
jmp
dec
mov
mov
js
cmc
data16
inc
fwait
sbb
clc
int
sbb
inc
add
xor
mov
or
add
ss
sub
push
popf
jecxz
pop
push
jp
cmp
jo
mov
sarl
push
jle
jp
fisubs
push
fistps
pop
fdivs
scas
mov
js
iret
fidivrl
adc
push
xchg
ljmp
push
seto
in
push
inc
dec
enter
bnd
push
andb
lcall
or
lahf
dec
cmp
xlat
xchg
xchg
cs
push
jbe
xchg
cmp
fisttpll
hlt
in
sub
xchg
push
cmp
testl
cmp
inc
or
cltd
mov
mov
in
and
or
adc
mov
pop
adc
cmpsb
jae
fimuls
fists
repz
push
pop
dec
pop
jle
mov
inc
cmp
test
imul
js
inc
std
in
stos
inc
jno
roll
jmp
push
aas
cmc
sub
mov
in
insb
mov
call
jo
jge
popa
dec
pushf
fs
jns
testl
aam
mov
loopne
jle
bound
xchg
or
psubw
mov
fstl
mov
xchg
je
enter
in
in
cltd
addr16
subb
xchg
push
es
fdivp
lock
andb
into
testl
xchg
sbb
aas
lods
mov
pop
pop
in
lock
mov
sub
xchg
iret
mov
ss
mov
pusha
inc
dec
pop
test
mov
inc
sbbl
sub
xchg
int3
movsb
out
mov
imul
lcall
dec
pushl
cmc
pushl
xlat
dec
test
push
jns
lds
test
lea
lock
jl
sahf
inc
cmp
divb
push
int
xor
mov
sbb
jmp
sbb
out
stc
add
xor
rcrl
inc
popf
pop
loope
xchg
scas
leave
push
addb
repz
stos
ljmp
sarb
dec
adc
scas
andb
adc
mov
loopne
xor
addr16
xor
pmuludq
scas
jle
in
addr16
shl
dec
hlt
push
jbe
sub
stos
ror
adc
dec
push
push
cld
mov
cmpsb
xchg
mov
decb
shll
lcall
stc
pop
into
cmp
cs
cmpsb
test
lret
mov
xchg
test
cltd
fcmovne
lods
fisttps
jl
dec
xchg
into
es
xor
add
ja
je
adc
mov
fisttpl
out
js
sbb
imul
or
or
pop
pop
xchg
mov
cmp
sub
push
je
lret
mov
cmp
mov
add
or
sub
aam
jnp
xor
subb
dec
push
inc
cmp
cmpsb
mov
xlat
inc
pop
xlat
rep
push
enter
pop
dec
and
jmp
or
mov
xchg
adc
adc
lds
in
push
sub
mov
sarb
pop
lds
das
mov
dec
add
mov
jmp
dec
mov
call
rolb
mov
dec
xchg
cmpsb
lea
mov
std
fcoml
ljmp
adc
daa
cltd
fistps
pop
dec
es
lret
pop
lds
mov
mov
mov
notl
ffreep
pop
mov
call
cli
cs
inc
ss
rcrl
sbbb
inc
sbb
adc
hlt
shlb
sbb
fcmovne
push
xchg
mov
adc
jmp
mov
pop
mov
push
add
fbstp
push
rorl
test
fiaddl
jne
add
insb
mov
ljmp
psraw
inc
in
mov
arpl
sub
pop
fs
sti
xor
sub
daa
sbb
adc
cmp
insb
outsb
fidivs
in
pop
es
inc
jo
sub
ljmp
hlt
leave
adc
xor
jmp
mov
or
dec
rcr
call
ja
insb
cmpsb
xchg
cmp
inc
or
mov
sub
push
inc
jl
imul
leave
xchg
mov
shll
inc
mov
mov
sub
out
cmp
jno
mov
loope
ret
sbb
jne
cmp
mov
sbb
xchg
xchg
mov
mov
inc
cmp
mov
call
cmp
dec
jl
sbb
popf
sar
js
inc
divb
pop
dec
ljmp
mov
pop
jo
inc
cmpsb
mov
sub
push
and
push
in
xchg
jns
jmp
ret
lea
xchg
ljmp
pushf
and
int
adc
lds
aas
outsb
js
pop
lods
add
xor
jno
das
adc
pop
mov
push
cmp
push
mov
cmpsl
jae
shll
sbb
xchg
jmp
jg
int3
aas
push
adc
movsb
int
fnsave
adc
mov
addl
xor
adc
sbb
jne
adc
das
insb
or
fucomp
fcoms
fwait
push
stos
sub
aam
leave
jp
xchg
and
stc
dec
adc
xchg
jl
push
leave
addl
mov
out
xchg
jg
pop
push
js
leave
push
cmp
mov
cmp
sbbl
sahf
push
sub
imul
pop
push
ret
jle
mov
cmp
cmp
sbb
add
adc
push
dec
fwait
add
icebp
xor
mov
mov
rclb
nop
mov
jmp
mov
insl
aad
push
push
pop
mov
scas
pop
dec
outsb
addr16
adc
nop
dec
mov
dec
inc
fisttpl
xchg
imul
mov
jecxz
test
popf
lock
das
xchg
rolb
cwtl
mov
mov
sbb
or
sbb
fs
lahf
xchg
sbb
pop
lcall
push
test
jo
push
dec
add
lds
aas
aad
icebp
fnsave
or
nop
sub
mov
cmp
ss
and
or
repnz
nop
sbbl
xor
pop
popf
mov
or
rcrb
jae
and
dec
mov
and
and
insl
int
mov
daa
test
fs
push
outsb
sub
pop
push
adc
outsb
movsb
test
adc
pusha
fdivl
lock
loop
rorb
dec
cltd
adc
arpl
sti
test
sarl
jp
mov
inc
pop
xchg
imul
or
iret
cmpsl
out
fcoml
cld
std
loop
add
in
mov
fcomip
hlt
sti
xor
lcall
adc
rol
fmuls
cld
das
fiadds
push
aas
cmp
cmp
mov
xchg
in
jbe
xor
xor
cmp
jne
add
fldl
loope
or
sbb
lcall
loopne
adc
stos
xchg
pop
adc
mov
xchg
ja
pop
mov
fimuls
stos
sarb
test
aad
inc
out
enter
fists
jle
test
or
mov
in
mov
push
mov
push
xchg
mov
enter
shlb
jno
mov
adc
int3
sbb
mov
and
xchg
sahf
add
call
hlt
sbb
imul
int3
cmp
sub
jne
cmp
and
mov
adc
loope
dec
ljmp
call
les
ljmp
jo
aas
lock
mov
xchg
jg
aas
pushf
mov
aas
jecxz
dec
test
das
clc
loop
xlat
ret
shlb
add
loope
sbb
out
jp
scas
xor
and
pop
loop
test
cmp
add
dec
test
aaa
leave
cmc
xor
fwait
mov
sub
lods
outsl
popf
adc
aad
filds
cmpsl
cld
nop
pop
fdivl
jno
mov
scas
loope
cmp
jecxz
test
icebp
div
sbb
inc
shl
xor
enter
push
gs
insb
std
ficompl
out
dec
fstl
dec
lret
sbb
jecxz
xor
jle
in
xchg
xchg
wrmsr
cmp
mov
mov
cld
icebp
cld
imull
xchg
or
xor
rcll
xor
jecxz
xor
out
jle
daa
pop
xor
xchg
into
xlat
jnp
push
test
mov
cs
jmp
mov
iret
jmp
xor
add
push
jo
jns
addr16
sbb
pop
enter
cs
add
test
mov
testl
pop
aam
xchg
add
repnz
jl
mov
xchg
pop
dec
fldl
dec
hlt
xor
push
lds
int
jnp
sbb
sub
xchg
and
fists
xor
movsl
mov
mov
jbe
sub
prefetch
jne
enter
in
jb
mov
lcall
arpl
sbb
pop
outsb
mov
xchg
mov
loopne
mov
and
fmuls
cmp
sbb
push
push
shlb
rorl
jo
sub
mov
sub
and
fs
jno
lret
insl
mov
sbb
rclb
ret
or
push
sub
xchg
xchg
mov
mov
pop
je
push
movb
jecxz
test
inc
rcll
push
inc
lcall
inc
sub
xor
mov
push
loopne
inc
sub
xchg
adc
aad
call
lahf
sbb
je
loopne
xchg
lret
mov
scas
sub
rcrl
js
stos
mov
dec
cmpsb
into
add
cld
hlt
neg
push
add
xor
jg
mov
sahf
xor
xlat
push
fsubrl
pop
fwait
mov
adc
mov
lahf
inc
mov
loopne
imulb
lods
fisubs
dec
mov
pop
fdivrl
addr16
pusha
mov
and
push
mov
sar
mov
dec
ss
notl
and
mov
push
fnsave
rorb
push
rcrb
lret
lahf
clc
and
stos
mov
ficoms
adc
xor
jmp
dec
das
rcr
cmpsl
addl
and
add
pop
testl
les
mov
push
dec
push
adc
adcb
jle
add
push
cmp
xor
sub
and
cmc
sub
mov
out
push
ret
pop
mov
jecxz
pushf
pop
xor
jb
in
in
cmp
fistpl
div
iret
ficomps
nop
sahf
ret
xchg
jp
out
aaa
adcb
pop
loopne
stc
add
testb
movsb
hlt
mov
jne
cmp
xchg
arpl
xchg
xor
jne
call
or
mov
adc
and
dec
mov
xor
shr
lods
sbb
push
xchg
lods
pop
dec
push
mov
clc
mov
in
ret
or
ds
xchg
sub
pop
jmp
flds
bnd
stc
cli
add
dec
in
shrb
and
mov
xlat
or
int3
out
icebp
movsl
cmp
lret
sbb
lret
addr16
pop
cmp
mov
xchg
pop
sbb
add
mov
test
inc
or
mov
jge
sbb
mov
adc
mov
sub
mov
jnp
leave
je
fmul
notl
pop
dec
pop
in
dec
popl
scas
fsts
or
mov
out
mov
push
popf
les
cwtl
sub
xchg
jbe
rorl
inc
out
es
popa
pop
inc
sub
stc
loopne
fisttps
in
sarb
xchg
enter
push
sub
xor
test
jnp
cmc
jp
insb
adc
lock
push
or
push
cmpsl
inc
mov
adc
add
in
lods
push
mov
mov
inc
pusha
xchg
fstpt
rorl
sbb
cmova
xchg
out
add
or
rcll
iret
push
ret
pop
sbb
inc
in
cmp
pushf
and
pushf
jo
jecxz
ds
mov
outsb
mov
push
cmp
sbb
or
jns
mov
or
ljmp
ret
ror
lods
mov
rcl
in
cmp
ss
pushf
out
or
ret
cwtl
adc
push
push
inc
sbb
sub
sbb
lcall
aaa
std
xchg
lret
add
fdiv
shrb
lcall
in
jmp
int
sbbl
cmp
xor
addb
fldl
xlat
xor
xchg
stos
cmp
push
xchg
cmp
clc
frstor
jge
jp
dec
jno
xor
popf
insb
sarb
daa
ss
test
test
orb
add
mov
rorb
je
sbb
js
xor
mov
cmp
in
dec
imul
inc
shll
xor
out
addr16
bound
jb
outsl
lret
popa
adc
inc
rclb
dec
or
adc
imul
xchg
sahf
cld
scas
dec
mov
lcall
mov
outsl
pop
repnz
fisttps
sub
add
inc
aam
or
dec
scas
cmp
push
std
push
clc
or
dec
cld
jp
imul
mov
addr16
or
or
gs
outsb
xchg
pop
iret
lods
xor
orb
sbb
iret
sbb
shlb
insl
mov
lods
jne
push
add
movsl
aas
push
jbe
inc
sbb
xlat
xor
or
enter
imul
push
pop
mov
sub
lock
call
dec
ret
clc
mov
dec
outsl
and
push
jbe
mov
shl
pop
dec
and
jb
adc
add
add
pop
jno
aaa
pop
lcall
std
insb
les
pusha
add
int3
sub
dec
and
lds
cmp
sub
mov
push
xchg
cld
jp
punpckhbw
shll
add
jl
sub
and
cmp
andl
and
dec
mov
pop
lea
or
inc
test
lret
xor
pushf
int
mov
in
lods
mov
push
je
cmpsl
push
cmp
dec
mov
add
aam
add
mov
fcmovu
mov
adc
insb
dec
add
call
inc
cwtl
xor
jle
sahf
cmp
sub
jno
push
lea
lock
mov
scas
sbb
fistps
test
pop
inc
cmpsl
sti
cmp
mov
jge
int3
mov
fisubrl
add
adc
dec
adc
push
fucomp
ds
push
popa
lret
inc
dec
cmp
dec
sbb
outsl
in
mov
ds
push
add
imul
fldl
test
ss
cld
and
xchg
add
aaa
sub
das
xor
inc
pop
sub
clc
popf
or
xchg
push
jmp
pop
dec
sub
or
js
add
ret
sub
out
cli
dec
ds
push
lds
decl
mov
lcall
jecxz
pop
stos
mov
repz
mov
cmp
adc
test
mov
jg
aaa
mov
in
and
fstl
int
mov
lods
addr16
and
inc
lods
sahf
inc
lds
fcomip
jg
inc
sti
leave
aam
cmpsl
sub
pop
mov
js
push
sub
aas
sbb
cli
xchg
cmp
push
aaa
pushf
dec
sbb
adc
lret
leave
cmp
add
mov
sbb
aas
imul
or
stc
fnstsw
ret
std
dec
mov
inc
mov
dec
or
add
ror
mov
dec
sahf
mov
jl
inc
dec
mov
push
sbb
rolb
ficomps
fistps
hlt
loope
push
inc
ret
mov
outsb
in
lods
mov
xor
xchg
out
lods
iret
lds
jmp
jecxz
es
pop
jae
sub
dec
pop
push
jo
or
inc
fstl
es
hlt
dec
inc
cld
dec
in
push
cmpsl
inc
mov
push
mov
bound
inc
xchg
fisubrl
xorl
push
js
mov
cmpsl
test
push
mov
mov
in
sub
pusha
in
hlt
movsl
adcb
mov
cli
and
sti
les
sub
push
dec
js
cwtl
dec
jecxz
xchg
ja
fisttpl
decl
inc
and
rclb
inc
inc
xchg
inc
dec
adcb
test
shll
xchg
adc
inc
testb
int3
pop
or
xchg
push
fbld
les
push
adc
lods
dec
push
sub
push
mov
rclb
call
mov
ret
cmp
repnz
daa
push
inc
jg
pop
popf
push
stos
cmpsb
cltd
aam
stos
mov
push
add
outsb
xchg
and
adc
mov
mov
scas
aad
mov
out
aad
pusha
and
lea
adc
jae
dec
xchg
insb
push
ss
jecxz
mov
fs
xor
push
jle
stc
mov
rcl
loope
sbb
mov
andl
cmp
mov
stos
sbb
adc
jl
dec
das
push
lods
mov
push
and
and
mul
rol
mov
loop
repz
iret
addr16
mov
jl
sbb
loope
sbb
insl
sbb
mov
adc
xor
dec
sub
bound
lods
pop
and
movsb
addr16
inc
mov
out
mov
into
push
iret
int3
add
cmpsb
sbb
or
enter
inc
out
subl
test
sub
iret
repz
aad
loopne
mov
rclb
out
and
xchg
mov
jb
dec
push
movl
and
adc
inc
push
sbb
insl
add
jmp
popa
or
pop
ja
xchg
adc
cli
mov
imul
gs
dec
add
xchg
mov
test
clc
mov
sahf
out
xor
push
les
das
notl
xlat
push
bound
cltd
icebp
cmp
pop
mov
xchg
xor
xorb
pop
cld
jmp
cmp
add
xor
cmpsl
arpl
aad
xchg
inc
add
ss
aad
data16
dec
loope
push
cmp
iret
daa
mov
jns
cmp
rep
iret
jge
mov
jbe,pn
icebp
xor
pop
mov
or
shll
sahf
lret
pop
xor
out
lret
cmp
sarl
pop
dec
push
popf
mov
mov
or
mov
cmp
xchg
add
and
push
lret
scas
jbe
cltd
xor
mov
add
xchg
jnp
and
pop
test
inc
push
jbe
test
movsb
cmpsl
mov
xor
into
xor
cli
call
lret
or
sub
inc
int
fisttps
jns
sahf
mov
call
jbe
cmpsb
incl
or
pop
dec
xlat
mov
push
mov
mov
addr16
cmp
jo
and
pop
leave
adc
xor
sbb
xchg
ret
leave
pop
enter
dec
add
dec
dec
loope
mov
xor
call
orl
int3
inc
add
movsb
cmp
mov
mov
pop
je
sub
xor
in
loop
inc
sbb
les
mov
test
fwait
stc
adc
test
iret
push
pop
ficoml
push
stos
push
andl
mov
pop
mov
es
mov
jo
bound
mov
sbb
add
out
pop
sahf
ret
movsb
arpl
fldcw
sti
inc
adc
mov
adc
push
sbb
xor
leave
mov
or
roll
add
dec
push
test
into
add
and
ds
sbb
sbb
mov
push
fildll
mov
add
mov
repnz
test
mov
cmpl
jle
lock
mov
gs
ror
leave
lahf
push
test
ret
dec
mov
xchg
cli
lods
push
insb
mov
imul
or
out
lds
les
inc
mov
jecxz
cwtl
xor
xchg
movsl
std
rorl
push
popl
jp
cmp
popf
scas
jns
xchg
shlb
sub
xor
jp
mov
test
movsl
xchg
push
shlb
inc
jb
pushf
jno
je
aam
or
push
fsts
leave
out
aad
out
or
fsubrl
sti
push
jg
push
xchg
aad
xor
lret
ret
fmull
sahf
aad
mov
mov
xchg
mov
xchg
or
dec
jne
push
ret
add
movhps
movsb
pusha
inc
iret
popf
mov
lret
mov
arpl
faddp
pop
out
mov
sbbl
and
les
fs
xor
add
xchg
cwtl
cmpsl
sbb
xchg
lret
inc
cmp
out
pop
ret
and
dec
mov
lahf
cmp
rcrb
imul
or
int
cmp
int
les
int3
cmpsb
add
add
imul
lret
and
push
jmp
and
cwtl
pop
xchg
movsl
mov
xlat
imul
cmpsb
stc
xchg
add
testb
mov
mov
movntq
fstpt
unpckhps
mov
sbb
mov
mov
adc
das
bound
adc
push
push
nop
in
pop
xchg
ror
add
mov
inc
fimuls
aam
pop
stos
inc
push
sbb
sti
loopne
mov
das
ret
fs
pop
cmp
daa
sub
into
pop
fwait
push
jae,pt
pop
fs
inc
dec
push
nop
in
push
xor
outsb
out
rolb
rclb
jno
jns
stos
fdivl
dec
daa
in
dec
negl
adc
mov
dec
loop
mov
mov
mov
push
xor
jmp
cs
jmp
adcb
daa
dec
and
pop
push
push
mov
sub
mov
xor
jne
inc
cmpsb
loop
rcrl
int
sarl
into
and
mov
scas
data16
or
mov
shl
int
and
xchg
push
mov
jmp
cwtl
cli
lock
lds
dec
push
mov
inc
pop
ret
xor
xor
mov
jbe
pusha
xor
mov
mov
repnz
test
mov
test
jmp
rol
cmp
push
inc
arpl
rorb
ljmp
imul
dec
adc
nop
outsl
stos
lcall
xchg
out
jp
in
scas
inc
arpl
out
mov
pop
xchg
cld
aas
cmp
inc
jo
stos
add
testl
in
out
pop
push
or
jle
push
aas
add
push
dec
dec
roll
jnp
cmpsl
xchg
mov
cmpsl
sub
dec
push
test
lret
outsl
mov
sarl
fdivl
mov
dec
push
inc
xorb
icebp
dec
dec
adc
mov
xchg
mov
aaa
mov
sbb
das
aaa
rcr
jge
cmp
ror
fisubs
sahf
ficoml
scas
mov
arpl
pop
mov
rcrb
int
cmp
sar
ret
mov
insb
and
add
mov
xor
leave
stos
bswap
loop
out
dec
inc
orl
ret
aaa
mov
xchg
lods
push
xchg
push
jnp
dec
and
std
arpl
movsl
adc
ja
outsb
mov
lods
lret
jae
jp
lret
sub
jl
inc
gs
dec
mov
ret
xchg
cltd
jb
push
das
mov
jae
test
dec
mov
jl
mov
jbe
push
mov
cmp
push
shl
sarl
popf
mov
xchg
mov
movsb
xor
sbb
ds
cmp
aam
cmpsl
sbb
inc
or
test
mov
aad
clc
adc
jl
push
xchg
flds
inc
mov
mov
adc
dec
jae
sti
leave
popa
cld
mov
pop
pop
pop
rcr
cmpsl
mov
sahf
aas
jne
mov
mov
jnp
lods
sub
ds
in
inc
sbb
xor
or
inc
pop
fsubs
mov
outsl
mov
iret
loope
adc
cltd
push
add
test
jecxz
pavgb
subb
pop
shl
cmp
lret
inc
rcr
loope
and
or
jns
outsb
arpl
pop
bswap
stos
add
movzwl
xor
and
leave
sbb
aad
inc
add
sbb
lds
fldcw
cmp
mov
jb
mov
rol
add
sub
repnz
dec
and
inc
push
and
add
mov
adc
jns
xchg
push
arpl
pop
inc
sub
out
or
xchg
dec
jne
xor
ret
xor
jl
in
mov
lcall
adc
insl
jno
add
lahf
sbbb
and
mov
stos
mov
notb
xlat
adc
inc
mov
adc
je
mov
pop
aaa
xor
in
push
mov
pop
pop
outsl
cltd
arpl
sub
adc
and
mov
mov
cmpsb
fs
leave
push
inc
lods
jle
sbb
fcomi
xchg
dec
sub
and
sbb
mov
add
mov
movsl
call
mov
ss
in
loope
xchg
sub
int3
jp
stc
push
leave
push
mov
push
outsb
ficomps
sti
fidivrl
lds
fidivs
ret
in
cmp
xchg
repz
out
cmp
push
xchg
jle
sbb
xor
popa
bound
pop
xchg
and
rcrl
add
mov
sahf
lret
out
das
pop
pushf
and
dec
mov
lret
mov
push
cs
xchg
std
addr16
stc
push
in
inc
pop
cmc
mov
ds
cmp
sbb
shl
mov
pop
mov
cltd
push
call
push
sar
arpl
sub
roll
aam
mov
pop
into
mov
shr
cmp
mov
sahf
popa
out
adc
pop
cltd
popf
mov
xchg
inc
xor
sbb
mov
push
adcb
mov
pop
pop
jae
sti
sbb
jae
and
je
add
and
repnz
loope
out
cmpsl
test
repz
mov
push
out
xor
hlt
sbb
pop
sbbl
jnp
adc
jmp
ss
jle
inc
push
pop
lret
jo
mov
xor
das
jge
into
pushf
dec
cmpsb
push
mov
jp
fisubl
mov
loope
nop
dec
test
enter
ljmp
jl
cmpsl
int
gs
fcmovu
jl
mov
jae
outsl
cwtl
pop
push
repz
jo
cmpsb
sbb
mov
int
adc
repnz
and
repz
mov
aam
mov
push
mov
xor
scas
test
and
mov
aam
ss
dec
pop
and
iret
and
movsb
mov
cmp
dec
insl
jmp
jns
xchg
adc
xchg
or
fdivs
mov
rcll
divl
mov
in
xchg
es
scas
pop
hlt
push
outsb
dec
cli
cli
mov
fisubl
or
mov
add
fsubr
rcll
les
xchg
ret
es
push
push
test
clc
or
sub
shll
fistps
js
sbb
sahf
jmp
pop
scas
fisttps
cltd
mov
lcall
cmp
sub
std
addr16
pop
stc
outsl
cmp
pop
idiv
push
cmp
or
adc
or
mov
or
aas
fwait
lcall
or
pop
js
sbb
adcb
sub
mov
stos
cmp
pop
stos
les
addr16
jl
dec
outsl
mov
sarl
stc
ljmp
mov
out
std
ret
push
sti
lds
xchg
or
fnsave
pop
mov
dec
jmp
nop
adc
mov
dec
mov
in
in
aas
pusha
xor
mov
cmpb
sarl
enter
jge
fistpll
inc
push
jecxz
ljmp
orb
cmp
push
into
fstp
add
xor
and
mov
fwait
sti
inc
lret
xchg
lods
add
xchg
test
jl
jle
cmpsl
insb
icebp
inc
hlt
mov
pusha
out
pop
pop
stos
pop
pop
pop
push
mov
dec
sbb
cmp
orl
cli
lcall
outsb
xchg
fmul
pop
inc
cmp
aas
and
sti
mov
repnz
or
xchg
shlb
cmc
scas
fimull
lahf
nop
add
dec
ret
inc
cltd
cwtl
int
pusha
push
je
xor
stos
mov
push
fbstp
ss
cmp
sub
mov
sbb
test
test
stc
cvtps2pd
sbb
es
cmpsb
test
es
icebp
mov
adc
pop
jecxz
in
mov
sub
push
or
pushf
dec
adc
jle
mov
or
out
sub
jle
stos
pop
loop
fs
data16
mov
pushf
xor
cmc
mov
fsubp
and
ja
sub
scas
lock
xor
popf
xchg
dec
mov
cmpsl
sub
pop
xchg
insl
mulb
jno
pushf
mov
addl
and
into
mov
xor
std
mov
mov
sbb
stos
out
movsb
out
outsl
mov
cltd
int3
or
dec
cmp
cmp
imul
jo
jae
mov
xchg
pcmpeqd
iret
sbbb
mov
push
lret
mov
in
pop
mov
insl
bnd
push
or
repnz
push
addr16
dec
mull
mov
cltd
loop
mov
cmpsb
adc
push
add
mov
popf
dec
pushf
ret
pop
jo
and
and
ljmp
fcomp
xchg
fldcw
jns
loope
adc
mov
cli
or
sbb
xchg
or
xor
add
inc
dec
mov
mov
xor
repz
nop
xor
adcl
ret
mov
mov
shll
cltd
and
lods
sbb
jnp
jns
lcall
imul
pop
or
mov
test
lret
repnz
add
mov
push
sbbl
mov
rolb
push
push
mov
cmc
pop
pop
pop
leave
hlt
adc
xor
cli
out
jnp
mov
or
test
and
dec
leave
ljmp
dec
mov
adc
mov
enter
mov
cmp
xchg
push
cmp
sbb
icebp
imul
lret
mov
into
xor
mov
dec
adc
out
and
and
push
xchg
mov
test
lret
scas
jns
jp
jo
sbb
mov
push
sbb
jp
fisttpll
sbb
xor
in
negb
filds
adc
sbb
sbb
out
xchg
ret
or
mov
fnstenv
shlb
cmp
sub
xchg
or
mov
les
sub
shlb
xlat
sbb
pushl
and
pop
push
enter
xor
mov
xchg
mov
je
mov
dec
loop
ret
insb
push
push
insl
ret
fdivrl
movsl
pop
adcl
push
jnp
and
dec
and
xchg
push
jb
out
xor
or
jmp
outsb
push
adc
pop
sbb
imul
push
div
mov
dec
pop
test
sarl
or
pop
sub
pop
xor
or
out
xchg
scas
enter
jl
pop
xchg
mov
lcall
inc
lcall
jmp
imul
mov
or
pop
xchg
jp
cmpb
mov
ret
sarb
or
stos
fwait
sub
js
or
ja
cmc
xorl
adc
imul
int3
gs
addl
push
adc
out
mov
insb
cmp
mov
cmp
out
jmp
imul
call
testl
jle
outsb
rclb
adc
add
adc
dec
push
or
push
dec
stos
mov
lea
icebp
ficomps
in
adc
inc
pop
jmp
outsl
test
negb
popf
out
and
dec
mov
xchg
mov
lods
jb
mov
insl
mov
test
jmp
stos
xchg
incb
addl
aad
lds
mov
popa
xlat
cli
daa
sahf
pop
and
int3
add
sbb
push
add
dec
mov
adc
lods
imul
cmp
mov
push
shrb
ret
fiaddl
fcmovnb
test
jns
xchg
loop
out
pop
pop
arpl
mov
addr16
mov
fsubr
imul
nop
jne
mov
ljmp
jbe
push
es
dec
stos
stos
lahf
lcall
mov
or
into
xchg
insl
repnz
xchg
mov
add
stos
inc
add
cltd
test
lahf
andb
push
jp
mov
pop
and
cmp
fdivp
int
out
aad
and
mov
mov
js
cmp
push
or
mov
pop
push
add
ja
enter
fs
add
cli
jmp
mov
pop
pop
push
add
mov
movsl
pop
dec
inc
push
xchg
jp
adc
pop
or
cmpsb
fmull
ficoms
cmpsb
inc
sti
adc
or
xchg
pop
in
int
push
mov
jnp
dec
dec
out
cmpb
std
xlat
scas
inc
insb
je
dec
mov
dec
test
dec
mov
aaa
sub
adc
inc
xchg
pop
mov
jae
mov
mov
cmp
xor
inc
or
das
pushf
mov
mov
mov
and
inc
lock
out
loope
inc
fstl
nop
cmpsb
xor
jne
dec
mov
int3
sbb
inc
mov
xchg
nop
icebp
jnp
adc
jb
jae
movsb
or
mov
cmp
aad
push
mov
dec
bound
dec
sbb
sarl
lods
scas
mov
cmp
dec
push
dec
mov
mov
and
mov
or
xor
adc
stos
in
mov
pop
loop
xor
ljmp
ja
jge
mov
jbe
sub
popa
scas
xchg
scas
loop
cld
pusha
push
lret
sbb
sbb
popa
push
andb
loope
dec
fs
popf
les
push
into
bswap
and
push
inc
aad
sbb
or
xchg
pop
idiv
xchg
js
lds
jne
jl
xchg
je
mov
jbe
stc
mov
push
fstpl
aas
add
aas
push
aam
aas
inc
fsubrl
ret
es
cmp
fwait
jne
cmp
jno
lods
and
sbb
push
jb
lret
sbb
sbb
xchg
fdivs
in
sti
ffreep
addl
orb
push
mov
adc
jns
setbe
dec
push
pop
mov
mov
pop
jmp
push
imul
sbb
pop
daa
out
test
scas
cmp
in
fs
push
and
scas
adc
and
jbe
push
call
or
ljmp
mov
cmp
dec
inc
pop
lahf
movsl
sti
aaa
incl
cmp
cmp
stos
jecxz
add
lods
push
loop
ficomps
popf
mov
fcoms
or
into
sahf
into
sbb
cld
ja
or
repz
lahf
push
jl
mov
jecxz
clc
std
cmp
daa
rclb
jb
add
mov
pushf
jb
icebp
pop
cmp
jg
ds
jnp
cmp
ljmp
aas
ss
into
xchg
and
pop
jns
xorl
jmp
ss
cmp
rorb
je
lahf
inc
xchg
adc
xchg
lods
add
movsb
popa
outsb
cli
jmp
lods
jbe
adc
or
and
fldt
xor
adc
or
mov
and
push
pop
movsb
add
dec
mov
jle
mov
sbb
mov
mov
fildll
mov
dec
mov
push
ja
lcall
add
loopne
pushf
es
pop
mov
leave
and
dec
ljmp
sbb
xor
pop
add
insb
sti
rclb
and
fcoms
cmpsb
jno
out
and
movsl
mov
pop
lock
test
mov
sbb
mov
dec
fiadds
xor
movsb
repz
lods
xchg
dec
repnz
or
out
mov
sbb
add
add
inc
movsb
xchg
int
push
lret
or
adc
add
pop
fcomp
adc
sub
out
fldenv
mov
push
mov
sbb
pop
jae
scas
jle
divb
adc
cmp
pop
sbb
pop
dec
arpl
mov
dec
adc
cli
cmc
int
push
mov
mov
xchg
fists
push
les
push
icebp
out
rcrl
xchg
shlb
cld
mov
stc
adc
cmpsl
fldenv
push
sub
sub
in
cmpsl
pop
xchg
cwtl
dec
daa
dec
jp
and
push
shlb
imul
mov
xchg
sub
test
sbb
mov
repz
adc
inc
insb
out
cli
push
push
and
les
cmc
stos
dec
mov
sbb
dec
in
push
loope
std
inc
mov
dec
aam
fnstenv
push
stos
or
or
pop
cmp
sub
out
cwtd
push
aam
and
sub
shrl
jb
into
mov
adc
lea
jbe
lds
push
inc
pushf
or
mov
jl
push
cmp
imul
inc
mov
jns
pop
jb
gs
mov
xchg
sub
cld
fisubs
xor
scas
xchg
pop
push
xor
jle
push
inc
leave
jbe
xchg
jg
or
stos
cltd
scas
mov
movsb
cld
ss
pop
lss
adc
jmp
out
pop
jnp
je
aas
out
mov
xchg
cs
mov
data16
es
andl
mov
xor
push
or
cwtl
lcall
in
popf
push
aam
leave
fwait
jnp
cli
jae
outsl
lods
dec
jg
sbb
mov
adc
jge
aad
or
xor
mov
dec
shll
push
leave
pop
sbb
sbb
and
adc
xor
aam
adc
push
add
mov
sbb
addr16
insl
rorl
ss
xchg
ret
mov
fdivl
in
movsb
jnp
push
in
fadds
or
or
shrl
enter
xchg
fldcw
or
cs
fnsave
movsl
mov
jg
dec
mov
jae
clc
pop
jmp
sahf
pop
cmpsb
aam
cwtl
in
jmp
or
xor
pop
movhps
adc
imulb
fs
or
popa
xchg
ret
inc
adc
loop
popa
and
mov
dec
xchg
popw
jecxz
mov
lods
stos
call
pop
aam
jo
inc
inc
and
pop
push
out
fisttps
rclb
inc
test
mov
call
repnz
inc
das
inc
inc
xchg
inc
hlt
push
mov
ss
subb
fstps
sbb
mov
lods
popa
loop
sub
adc
mov
rcrb
inc
imul
lahf
outsb
bound
dec
dec
or
adc
xchg
lock
mov
adc
lret
bnd
add
mov
js
xchg
insb
push
mov
xchg
out
jge
repz
xchg
and
je
sar
lret
sub
add
sub
mov
std
cmp
ss
ret
aam
fsts
xor
and
outsb
sbb
inc
out
mov
mov
mov
bound
in
pop
repnz
inc
xchg
cld
dec
out
sbb
xchg
dec
clc
mov
movsl
add
fstpl
pop
outsb
fcmovne
test
rcrl
mov
ja
push
or
insl
cmp
dec
sub
mov
adc
test
jb
scas
jl
dec
insl
jb
and
adc
adc
mov
fwait
bound
adc
popf
pop
movsb
and
and
stos
fisttpl
push
stc
sbb
lods
mov
pop
sbb
and
sbb
stos
and
dec
xlat
mov
movsl
mov
push
sbb
daa
mov
mov
pop
or
xor
sub
mov
xorl
mov
sbb
mov
ss
cmpsb
jle
dec
push
jb
clc
stos
rorl
mov
inc
mov
movl
jmp
shrl
dec
pusha
xchg
fsubl
adc
add
ret
movsb
adc
sarl
dec
ret
xor
pop
push
sub
fidivrl
mov
mov
jmp
dec
sbb
cli
and
aaa
scas
inc
test
dec
ss
cs
sbb
mov
ljmp
outsb
cmp
mov
mov
minps
adc
and
ds
subb
scas
dec
sub
stos
cmp
hlt
notl
rorl
or
pushf
rcrl
or
cmp
hlt
and
and
enter
stos
mov
inc
push
adc
stos
or
push
rcrl
push
icebp
movsl
repz
inc
bound
jne
cmpsl
cmp
decb
pop
cld
js
adc
scas
test
mov
out
popa
ljmp
mov
or
xor
mull
jg
xchg
mov
xchg
call
adc
dec
mov
pop
cmp
lea
lods
in
movsb
dec
cs
lods
pusha
pop
nop
pop
sub
adc
fidivrl
cld
stc
repnz
scas
mov
sub
adc
jo
ljmp
aad
push
movsb
mov
sbb
les
add
mull
and
stos
sub
pop
push
mov
loope
rorl
add
mov
stc
clc
sub
dec
out
adc
leave
mov
pop
xchg
ja
pop
xchg
add
cmp
dec
loop
fsubr
cmpsb
sub
xchg
lret
fistl
fcmovnbe
xor
inc
std
mov
dec
jmp
ss
xor
loopne
pusha
push
add
repz
fnsave
push
push
jno
sub
sbb
push
ja
add
xlat
loop
mov
xor
xlat
mov
cmp
pop
test
adc
mov
jge
or
out
ja
mov
sub
and
gs
mov
pop
and
cmp
push
test
rolb
or
ss
fiaddl
mov
shr
mov
jbe
or
jge
add
aam
repz
scas
push
dec
sbb
or
xor
push
ror
dec
mov
and
notl
inc
test
or
divb
subl
xor
in
cmp
inc
fiaddl
lock
mov
outsl
sbb
push
sub
mov
mov
xchg
and
sbb
jg
lret
dec
fisubrl
pop
cmp
mov
sbb
cmpsl
inc
fbstp
ljmp
pusha
rorb
fcmovnbe
add
into
mov
jge
dec
sub
imul
add
aas
mov
sub
jns
cmp
inc
mov
xor
out
mov
imul
cmp
idivb
fldl
out
mov
cmpsb
aam
cmc
mov
fs
lods
and
std
xorl
imul
out
into
es
filds
inc
cmp
jge
cmp
xor
add
popa
inc
sbb
ret
pop
cmp
fcmovbe
jno
cmp
pop
sbb
xchg
and
pop
ja
loopne
mov
dec
inc
xor
bound
push
sub
pusha
push
fisttpll
xchg
xor
sub
flds
rorb
mov
push
mov
push
cli
jae
jge
mov
sahf
jno
fs
loop
and
dec
adc
sub
pop
mov
sbb
loop
mov
push
dec
dec
shlb
out
mov
jne
sahf
dec
sbb
scas
loope
es
push
shl
roll
mov
push
je
inc
mov
int3
enter
jne
imul
pushl
pop
test
and
pushf
gs
pop
fcmovnbe
pop
negb
push
push
stos
addb
adc
cli
lods
movsb
aas
push
mov
data16
pop
push
cmp
sbb
rolb
or
ss
stc
cmpsb
pop
jns
sub
ss
shrb
jmp
lahf
enter
jp
mov
push
or
pop
cwtl
sub
inc
verw
adc
rolb
push
in
sti
js
xchg
popf
adc
or
shll
adc
out
mov
inc
xor
loopne
push
adc
in
mov
or
leave
movsb
push
jl
out
loop
pushw
lods
xchg
out
in
test
arpl
xor
out
and
popf
push
aam
mov
or
push
lds
inc
xchg
jge
lea
fistpll
mov
scas
jns
ljmp
js
push
mov
sbb
push
inc
mov
adc
stc
dec
jmp
stc
mov
nop
iret
sbb
pop
mov
dec
enter
add
pushw
sub
aam
or
out
testb
mov
or
mov
aaa
in
xchg
inc
insb
lcall
push
outsl
sub
pop
aas
push
insb
fnstsw
add
shlb
aam
cld
mov
lock
nop
imull
xchg
pop
cmp
xor
jne
pop
scas
push
sbb
ss
xor
das
sbb
lcall
mov
inc
mov
add
lods
push
aad
or
imul
pop
daa
out
or
sub
push
mov
pusha
lretw
xchg
cs
scas
cld
ja
dec
loop
push
or
dec
in
clc
xchg
sar
xor
aam
outsb
out
aam
add
lret
pop
jo
push
imul
add
xchg
cmp
pushl
jnp
sbb
mov
out
lods
fisttpll
loop
mov
push
dec
jl
and
sarb
aas
add
cmp
add
call
sbb
inc
mov
jecxz
frstor
pop
xor
push
movsl
xchg
lret
push
lods
cmp
ja
mov
cmc
push
and
xor
jle
in
loop
pop
cmp
pop
loope
cwtl
cld
mov
testl
cmpsb
xlat
or
scas
loope
adc
cltd
in
jmp
sub
jle
mov
pop
test
push
aaa
push
lret
pop
cmp
push
jb
pop
gs
xchg
rep
xchg
fisttpl
imul
movsl
xchg
dec
add
jbe
imul
lock
mov
cmp
mov
and
testl
add
cmpsb
lret
ret
mov
and
addb
int3
das
pushf
inc
cmpl
mov
sub
mov
rcr
into
cmp
scas
xor
jl
add
scas
cs
cmp
lret
xor
dec
cmpsb
or
xchg
stos
mov
mov
inc
add
xchg
pop
mov
jae
adcb
repz
lcall
cmp
gs
jmp
or
or
sbbl
loop
test
mov
cli
icebp
jle
cld
pop
aam
xor
pop
xchg
shll
lds
leave
fnstcw
popf
inc
pop
mov
rcr
adc
insl
repz
aas
push
popl
ret
pop
mov
lods
add
iret
cli
cmp
loopne
aas
mov
loopne
jae
jmp
out
adc
xchg
push
es
jbe
xor
xor
sub
xchg
cltd
cs
gs
clc
mov
loop
bound
add
faddl
lret
fsubrl
jle
mov
adc
cwtl
fmul
iret
in
dec
jp
testl
enter
push
js
scas
xor
sbb
ja
mov
sahf
scas
or
sub
scas
test
jns
inc
lock
fs
cli
js
inc
mov
enter
xchg
xchg
push
add
icebp
add
add
mov
pop
repz
mov
lods
jge
dec
push
mov
xorb
cmp
clc
and
insb
mov
dec
xor
fmull
push
sbb
push
in
push
enter
out
pop
imul
call
pop
cmp
cmp
dec
adc
jge
lock
out
faddp
push
scas
out
lahf
xor
mov
add
fisubs
add
lock
xchg
push
inc
mov
stc
push
mov
aaa
sti
pop
sub
cli
mov
add
nop
sbb
dec
xchg
pusha
xchg
jb
inc
cld
pop
ljmp
push
es
std
push
lods
adc
cmc
and
push
jns
cmp
sub
fstpl
shlb
dec
xlat
dec
loop
mov
or
dec
push
xchg
daa
push
out
xchg
mov
pushf
xor
push
pop
dec
add
divb
out
pop
mov
ljmp
push
xorl
sub
in
movsb
push
adc
xlat
push
daa
test
cmp
icebp
movsb
lods
mov
xor
fcomps
mov
mov
out
pop
cmpsb
popa
jg
lcall
mov
inc
inc
inc
dec
or
cmpsb
cmp
xor
dec
je
or
movsb
xor
mov
pop
lcall
lret
ja
inc
arpl
mov
test
add
inc
imul
jnp
mov
pop
sub
scas
repnz
lret
add
add
call
cmp
jecxz
bnd
cmp
fs
xlat
add
mov
sub
inc
idivl
bound
mov
pushf
enter
call
fs
push
xchg
inc
aam
adcl
insl
cli
fiadds
sahf
fistps
daa
add
outsl
repnz
push
mov
inc
cmp
ror
mov
and
push
orb
mov
leave
sub
cmp
push
ret
sub
loop
jno
sbb
dec
fstl
mov
shll
daa
sbb
scas
insb
orl
xchg
sbb
or
lds
adc
mov
sbb
cld
mov
loopne
aad
and
xchg
mov
add
and
mov
cwtl
xchg
scas
nop
scas
push
mov
rorb
les
std
adc
ja
inc
scas
ss
fildll
mov
out
je
inc
lock
mov
sbb
mov
leave
push
enter
xor
xor
outsl
xor
jae
daa
push
test
mov
mov
shrl
or
cmp
ss
mov
fwait
clc
mov
sti
es
inc
mov
shr
fucom
xor
mov
xchg
adc
fnstcw
or
add
mov
xlat
scas
ds
sub
decb
mov
lock
mov
sub
pusha
xor
mov
mov
rorb
shr
sub
bound
xor
and
rol
les
inc
adc
int3
and
imul
repz
mov
fildll
and
mov
data16
dec
lcall
je
ljmp
icebp
dec
aaa
mov
loop
aaa
mov
xor
fwait
pop
insb
sub
insl
jg
pop
pop
fadds
imul
loope
jmp
inc
jecxz
pop
fists
aam
jne
jmp
sar
mov
lcall
fs
inc
jns
ret
xor
inc
xchg
decl
adc
scas
mov
jbe
cmc
mov
pop
adc
cs
mov
int3
cs
mov
fldt
mov
cli
cltd
ljmp
stos
xlat
loopne
add
mov
mov
aas
dec
push
lds
in
test
lds
call
iret
xchg
pop
and
sbb
xor
dec
js
lock
push
dec
push
fsubl
test
and
insl
inc
popf
xchg
insb
mov
fcmovnu
xchg
cli
sub
add
adc
lahf
sub
dec
mov
pop
xor
push
sub
sub
xor
mov
xor
cmp
test
jp
mov
es
mov
push
data16
push
cmp
and
jmp
lcall
mov
jge
cmp
jne
sbbl
mov
imull
lret
or
call
int
inc
ja
in
out
jb
push
push
dec
icebp
and
ret
loop
sahf
mul
out
fistps
ljmp
fisubrs
fmuls
mov
es
sub
aas
or
lods
push
in
jnp
sbb
sub
arpl
jmp
out
sub
cmp
aad
mov
jo
cmp
daa
adc
xlat
and
xchg
lahf
into
int3
aas
aas
stos
cmpsl
lods
dec
dec
jne,pt
stos
jbe
nop
iret
rol
outsl
sbb
gs
pop
mov
mov
jmp
loopne
jp
int
cmc
hlt
pop
das
xor
in
stos
dec
int
mov
js
jo
mov
mov
jbe
loop
clc
shrb
and
push
js
loopne
sbb
lods
xor
xor
subb
ret
jae
in
test
dec
shl
test
movsl
xor
rcrb
xchg
adc
stc
push
mov
fcomps
lods
out
cmp
lea
jo
jne
fstpt
xor
and
ljmp
subl
xchg
or
lret
add
or
in
xchg
stos
leave
jno
icebp
lret
pushf
adc
aaa
das
cmp
enter
lret
cmpsl
and
lret
push
push
jecxz
cmp
pop
or
lock
out
mov
mov
xchg
lods
sub
push
add
ds
fsubrl
mov
mov
push
add
mov
adc
subb
sar
insb
xchg
bound
cmpsl
sub
pop
dec
jno
inc
insb
and
inc
push
inc
ret
data16
mov
xchg
mov
outsb
jno
adc
imul
adc
loop
cmpsb
lret
adc
sbb
push
es
outsl
or
cltd
aam
cmp
push
jecxz
cwtl
daa
dec
dec
mov
das
aaa
adc
fstpl
jl
dec
xlat
xorb
pushf
aaa
int
inc
ret
mov
pop
pop
addr16
ret
jo
pop
imul
adc
jge
arpl
mov
shlb
jl
lods
and
popf
movsb
sub
ror
xchg
sbb
mov
fisubrs
movsl
lock
cmp
fnsave
loop
adc
mov
and
jbe
stos
jmp
jge
or
xchg
and
mov
adc
fwait
rcl
out
push
sti
cmp
pop
imull
mov
push
mov
push
or
pop
dec
add
shlb
mov
adc
iret
repz
clc
outsb
mov
ljmp
shlb
sti
pop
pop
mov
cmpl
jae
lret
adc
call
sbb
fs
in
or
aas
pop
xlat
xchg
adc
push
mull
sbb
adc
add
or
inc
xchg
lods
adc
adc
push
jmp
psllq
xor
out
add
jns
cmpsb
orb
fbstp
xchg
imul
push
and
inc
int3
lahf
mov
mov
mov
inc
insl
outsb
jns
out
andl
fwait
out
or
icebp
pop
xchg
lea
pop
push
mov
and
dec
insb
mov
fldpi
cmc
push
pop
add
adc
pop
out
dec
test
jae
push
fcoml
mov
stc
cmp
insb
enter
lahf
imul
dec
xchg
or
inc
std
jns
mov
popa
fs
aad
jne
je
rol
or
scas
test
jbe
jle
cli
insl
pushf
xchg
adc
jg
lock
jno
pop
cld
sbb
jbe
fst
mov
jecxz
lret
push
push
mov
addr16
pushf
xor
push
push
stos
jmp
sbb
mov
jo
push
stc
and
jmp
ja
add
insb
sub
ret
xchg
in
pop
test
or
imul
jbe
push
ds
inc
mov
popf
testl
adc
popa
inc
std
call
mov
sbb
sbb
fnsave
jnp
and
and
je
cmpl
scas
push
pop
int3
xorb
pushf
fldt
or
mov
push
push
arpl
daa
mov
mov
roll
xchg
loop
scas
imul
lcall
in
mov
in
dec
or
pop
pusha
ficoml
add
scas
mov
cmpsb
or
jno
test
aas
fstpt
aas
inc
aad
and
fnsave
cmpl
outsl
mov
gs
aam
sbb
mov
jae
test
in
shl
xorb
in
ret
or
inc
and
insb
jne
mov
cmp
dec
or
aaa
movsb
adc
pushf
push
dec
movsb
in
cmp
loopne
or
test
lds
xchg
jbe
jmp
mov
dec
mov
flds
popl
jmp
push
push
push
fs
add
mov
fstl
fs
jecxz
lret
test
das
jmp
not
ljmp
inc
jo
inc
clc
push
arpl
js
jp
aam
fisttps
cmpsb
xchg
testl
insb
js
les
ljmp
push
test
mov
repz
dec
sub
sbb
push
inc
xchg
rcrb
popf
cmp
adc
mov
add
subb
mov
mov
xchg
iret
dec
lods
jb
pop
rclb
mov
push
push
add
aam
imul
aad
es
adc
fsubr
and
jl
sbb
or
adc
adc
and
xchg
enter
mov
movsb
sahf
jb
inc
sub
lret
jle
lahf
mov
mov
xor
jae
mov
arpl
out
aam
cmp
dec
mov
testl
iret
lret
jecxz
outsb
int
mov
dec
sahf
inc
mov
in
cmp
sbb
sub
scas
imul
mov
adc
xchg
stos
adc
rcr
inc
jmp
mov
xlat
add
xchg
notb
and
pop
inc
push
xorl
jl
and
loop
lock
or
or
mov
ss
mov
pop
cmc
in
loop
shlb
inc
adc
call
outsb
insb
cs
cmp
or
test
xchg
or
scas
in
or
xor
and
lret
loop
mov
out
sar
xor
and
sub
pusha
adc
and
sub
cli
xchg
pop
adc
sti
and
mov
pop
sarb
aaa
insb
imulb
jmp
ret
mov
das
ds
cmp
movsl
jnp
and
mov
sti
arpl
ror
sbb
outsl
loop
js
add
add
push
xchg
xchg
cltd
push
pop
lds
mov
das
mov
xor
cs
aaa
dec
rorb
dec
jno
adc
xor
mov
loop
mov
pop
jp
andb
cwtl
mov
out
movb
popf
shl
iret
pop
adc
adc
es
lds
xchg
cmpsl
call
jae
sub
aam
pop
andb
jecxz
sbb
cwtl
jnp
cmpsl
jg
mov
loopne
ficoms
pop
je
xor
fbld
sub
pop
or
addl
cli
cmp
cmp
std
lret
jb
invd
or
mov
pusha
insl
or
xor
cmp
inc
inc
cmpsb
xorb
xor
mov
gs
mov
add
ds
pop
sbbb
aam
lret
out
pushf
lock
adc
push
xor
push
push
mov
mov
push
push
fidivl
scas
ss
cmp
and
ret
cs
fs
sub
cli
clc
arpl
call
les
pop
mov
dec
inc
sbb
cmp
sub
out
jae
and
pop
ficoms
call
mov
clc
notb
inc
in
push
push
cmp
dec
cwtl
or
js
enter
int
dec
xchg
fwait
push
fidivrs
and
repnz
loope
es
outsb
xchg
and
sub
add
iret
add
mov
inc
and
jecxz
pop
sub
mov
cmc
ret
xchg
sti
pop
stos
fidivs
jle
in
sub
jnp
test
pop
xor
inc
pop
xlat
pop
push
xchg
pop
jmp
out
sub
jmp
movsl
dec
sub
mov
and
cmp
sbb
sub
or
scas
pop
je
cmpsb
and
sti
imul
imul
add
inc
inc
test
popl
dec
aam
popl
andb
and
mov
adc
jmp
icebp
lret
push
push
and
ret
movsl
xor
cmp
and
cmp
pushf
adc
imul
mov
jns
je
and
js
cmpsl
cmc
stos
push
pop
fimull
sub
jle
mov
outsb
lret
or
pop
popa
daa
insb
lods
repz
jge
dec
into
mov
push
fidivrl
inc
mov
pop
or
mov
push
call
in
repnz
mov
and
cmc
cmpsb
mov
je
dec
je
push
cmp
xor
jns
jp
push
or
bswap
xchg
jno
fldcw
mov
and
dec
ret
scas
jns
nop
adc
jl
sarl
dec
or
cmpsl
mov
or
stos
orl
mov
xchg
add
sahf
sbb
out
or
sbb
out
movsb
jnp
xor
pop
mov
inc
adc
sbb
mov
ficoml
ja
mov
lea
inc
mov
roll
pop
loop
into
idivl
popf
xchg
xor
arpl
cwtl
pop
mov
add
jl
int
fwait
or
xor
xor
nop
std
adc
out
cmp
sar
mov
rorl
adc
in
pop
pusha
jp
daa
lock
adc
lret
add
mov
xchg
jl
sbb
inc
sub
dec
imull
out
jbe
fnstsw
stos
mov
in
xor
xor
pop
imul
cmp
cmpsb
dec
jno
jo
or
aad
mov
push
and
movsl
sub
pusha
lret
push
xlat
movsb
mov
or
mov
adc
adc
jmp
mov
adc
cvtps2pi
in
xchg
mov
aam
int
adc
xchg
loop
mov
test
pop
icebp
in
into
add
in
sbb
leave
shrl
sub
xor
mov
xchg
xor
add
leave
push
add
xchg
pop
cwtl
rclb
rcrl
push
jnp
les
andl
dec
fwait
clc
leave
sbb
or
lret
mov
adc
jne
dec
xchg
lret
idivl
add
mov
cs
lret
aad
adc
mov
lods
iret
pop
repnz
cmp
mov
xchg
pop
cmpsb
ret
dec
jl
aas
addl
dec
sbb
in
and
call
sbb
sbb
xchg
cmp
sbb
cmpb
popf
or
push
add
arpl
fbld
xor
call
dec
lahf
mov
or
xor
test
insl
lret
inc
pop
mov
daa
inc
push
fisttpll
pusha
sbb
loopne
mov
cs
lods
pop
ror
hlt
enter
cmp
je,pn
cmp
adc
cmp
cltd
pushf
fucomip
cmp
mov
loop
jp
in
sbb
cmc
inc
fsubrl
psubb
out
adc
ret
pusha
shufps
pop
mov
js
push
sar
movsb
or
int3
decl
in
xorl
or
setp
xchg
lds
dec
jmp
push
or
jne
ss
mov
das
sbb
mov
and
mov
test
lahf
or
sbb
insb
mov
mov
testl
add
lret
jl
push
cmpsl
xchg
ret
adc
adc
clc
xchg
and
sysret
je
lret
test
repnz
jb,pn
out
sub
lock
add
repz
fidivrs
sbb
lock
out
xchg
mov
sbb
mov
push
push
stc
movsl
sahf
mov
sub
jle
add
test
test
aad
cmp
fldl
aad
jne
stos
test
mov
leave
daa
lods
xchg
out
jg
jp
shlb
fstpl
popa
out
fbld
fistpl
inc
popf
lds
dec
jbe
lcall
mov
testb
sbb
adc
xchg
inc
jo
add
ljmp
push
mov
sarb
mov
fwait
xor
in
sbb
stos
popa
nop
call
rcrb
das
mov
sti
jns
lods
jae
out
rcrb
mov
std
cmp
out
out
pop
and
iret
ja
daa
mov
stos
movsb
jge
lret
mov
jp
scas
inc
nop
incl
inc
idiv
mov
imul
rorl
inc
mov
out
shlb
roll
aaa
std
jo
push
xchg
adc
push
test
jp
out
xor
in
in
ficomps
orl
mov
mov
dec
pop
inc
in
outsl
jbe
out
jbe
pushf
out
mov
xchg
jg
pop
cltd
mov
xchg
xor
pushf
xchg
sahf
fucom
lahf
imul
cmp
xor
fs
adc
lahf
out
pop
shll
jmp
dec
sbb
or
add
cmpsb
std
dec
cmp
sbbl
cld
imul
adc
icebp
sti
xor
mov
pop
lcall
in
lods
inc
jae
ja
mov
sahf
shl
mov
outsb
sarb
jb
lret
rorl
push
fs
cmp
popf
nop
push
inc
pushf
add
push
dec
test
sbb
dec
test
movsb
dec
cmp
or
sbb
icebp
in
xor
pop
adcb
jns
outsl
leave
cmc
fwait
or
and
call
cli
ret
adc
push
dec
xor
jne
sti
adc
sub
std
mov
or
mov
xor
adcb
cmp
aam
rcr
lea
stc
shrl
fdivr
jnp
ja
push
stos
out
hlt
add
imul
cmp
xchg
shrl
cmp
leave
push
sub
sbb
scas
fs
mov
stc
adc
sbb
shrd
add
subl
jg
xchg
data16
mov
stc
inc
shll
jb
jge
in
int3
sub
fwait
pop
xchg
icebp
or
xor
cmpl
lea
dec
mov
in
fisubs
lds
pop
movsl
bound
out
inc
push
sti
mov
repz
pop
push
sahf
mov
call
rcrl
xor
pusha
les
mov
xchg
repz
ret
sbbw
push
je
add
pop
push
testl
in
mov
pop
out
mov
dec
ret
xor
inc
scas
js
scas
popa
mov
fldl
mov
xchg
in
push
mov
shll
shlw
pop
rcr
lret
mov
fidivrl
push
push
ljmp
aad
dec
or
mov
adc
jg
xor
outsw
push
inc
inc
faddl
scas
dec
in
xchg
xchg
sub
outsb
movsl
frstor
sub
push
repnz
jae
jecxz
imul
jle
ljmp
mov
sub
out
rcl
lahf
sbb
test
push
sub
std
in
scas
loopne
shl
jecxz
xor
cli
lods
xlat
jnp
jae
mov
sub
pop
add
ffreep
xchg
and
pushf
dec
nop
jl
pop
js
sub
aaa
mov
mov
lcall
jae
pop
push
es
or
sbb
test
cltd
jne
dec
sub
fstl
outsl
clc
lahf
inc
ret
fistpl
nop
das
pop
lahf
jbe
push
lret
faddl
pushf
adc
je
adc
xor
inc
pushl
mov
aaa
loop
mov
scas
mov
fisubl
push
popf
and
and
clc
push
pop
pop
push
inc
pop
or
jle
lret
sbb
mov
xchg
icebp
adc
mov
push
stos
in
add
cwtl
push
or
cmp
idivl
inc
arpl
popf
in
fldl
sub
xchg
roll
sub
push
jae
pop
scas
pop
imul
sahf
jle
loope
pop
hlt
in
in
rorl
cmp
pop
inc
insl
jne
pusha
cmpsb
lods
and
je
push
setle
out
add
stos
dec
out
jl
pop
addl
adc
stos
out
sub
nop
xor
adc
mov
pop
in
and
ds
cmp
push
adc
bound
pop
lret
jns
imul
mov
push
addr16
cld
cmpsb
loope
or
lcall
and
xchg
outsl
push
pop
adcl
js
push
popf
loope
cmp
int3
add
sti
lret
inc
or
enter
jno
movsl
pop
or
xor
adc
hlt
imul
std
xchg
out
jae
scas
adc
inc
mov
bswap
xchg
xor
lahf
mov
inc
inc
jge
ljmp
inc
fnsave
pop
ret
bound
push
jmp
imul
cltd
movhlps
push
inc
std
lret
popf
insb
lods
cld
out
xor
or
aaa
pushf
fldt
inc
sub
dec
xor
cmpsb
test
lods
pop
adc
dec
sahf
mov
mov
scas
push
scas
push
faddl
leave
scas
mov
add
dec
loope
gs
push
pop
nop
cmp
inc
rcr
jle
clc
sbb
sbb
fisttpl
push
or
sbb
add
push
cmp
test
mov
and
lods
gs
add
cld
pop
jp
xor
lods
shll
stos
mov
push
imul
stos
adc
jb
jns
jp
mov
imul
hlt
mov
mov
ret
in
rdmsr
movsl
sub
std
ret
and
in
mov
and
aaa
les
pavgw
cwtl
and
jb
cwtd
and
outsb
movsb
push
and
movsl
adc
xchg
dec
in
pop
mov
mov
mov
shlb
aam
ds
pop
xor
je
sbb
aas
adc
push
ds
orl
add
ljmp
mov
jbe
fidivrs
ret
leave
and
enter
jno
aad
jp
pop
sahf
dec
int3
fmull
cs
sub
cs
jle
push
cmp
adc
push
or
enter
sub
outsb
rolb
call
xchg
out
lods
repnz
outsb
jne
push
loopne
lret
add
or
dec
ret
jbe
inc
jl
pop
fs
scas
mov
mov
mov
shrl
add
and
xchg
lea
mov
arpl
add
aad
test
jge
push
stos
inc
jp
sub
icebp
dec
fisttps
scas
test
push
push
xor
shlb
xchg
or
or
pop
cltd
pop
push
and
or
rolb
and
inc
dec
xchg
cmp
mov
stos
push
xchg
sub
push
pop
jmp
add
dec
loopne
aad
inc
mov
les
push
aas
dec
mov
pop
lar
mov
cmp
dec
decb
repnz
sbb
jae
mov
dec
cmp
jno
push
leave
repnz
pop
cs
inc
dec
xchg
sbb
push
test
lds
iret
movsb
push
popa
pop
mov
add
add
test
ret
repz
mov
xor
ret
inc
fsubr
mov
pop
or
push
add
je
sbb
loopne
inc
or
add
sub
cwtl
addr16
ret
out
inc
jno
inc
pop
inc
jecxz
push
sbb
push
nop
sbb
hlt
push
inc
pop
mov
adc
lahf
lret
sbb
lea
cmp
imul
or
xchg
lret
lods
jo
fucomi
cmpsb
push
frstpm(287
or
in
mov
shrl
or
movsl
imul
inc
outsl
push
int3
sar
jne
xchg
mov
and
cmpsl
gs
and
lods
loope
lock
insl
inc
and
jo
and
jecxz
clc
sub
jae
cmp
add
mov
cwtl
call
jle
notl
dec
bound
push
jae
xor
cmp
sub
int3
cld
sbb
pop
mov
scas
mov
or
pop
loop
out
and
movswl
push
mov
sbbb
movaps
dec
iret
jecxz
clc
in
xchg
pop
add
aam
lahf
inc
stc
loop
loop
dec
popf
stos
xchg
sbb
or
or
inc
mov
lret
xchg
xor
popf
jno
out
jge
mov
jno
fimull
dec
jge
imul
arpl
inc
mov
mov
inc
jmp
sub
adc
cmpsl
sub
lods
fcompl
mov
mov
out
xor
jne
aad
and
add
fidivrs
xlat
fs
ljmp
xchg
es
jmp
cli
cmp
xorl
mov
xor
lret
icebp
or
in
nop
mov
ljmp
inc
arpl
test
out
dec
inc
mov
mov
ljmp
scas
jo
fldt
xchg
mov
into
ja
lret
push
aam
cmpsb
pushf
pusha
andl
nop
mov
loope
sbb
jecxz
repz
test
hlt
aam
test
int3
enter
subw
aam
jecxz
cmpsl
mov
add
jg
or
fimull
mov
out
xchg
idivb
sbb
mov
adc
inc
scas
sbb
mov
inc
cmc
pop
sar
mov
shll
lahf
out
mov
mov
inc
adc
add
int
pushl
notb
sub
push
pusha
xchg
fdiv
jns
inc
cmp
cld
jp
push
adc
jge
scas
movsb
mov
cwtl
jl
lea
popf
jnp
jnp
jno
iret
stos
icebp
xchg
adc
mov
icebp
lcall
call
mov
pop
popf
xlat
iret
inc
fists
dec
jecxz
rorb
scas
test
cmp
jae
mov
in
add
cmc
lcall
and
mov
jg
push
int
fldl
pop
scas
int
and
fs
test
jne
xchg
dec
or
push
xor
add
dec
aam
xchg
jno
fstpl
das
call
mov
test
pop
sub
dec
mov
cmc
mov
lcall
sahf
cmp
loopne
mov
scas
or
or
hlt
mov
xchg
clc
pop
xor
divb
imul
scas
adc
push
push
out
xor
add
pop
dec
jecxz
mov
jb
test
add
mov
xor
mov
mov
mov
enter
lods
rorb
xchg
add
mov
pop
shll
cltd
or
dec
push
inc
pop
fsubl
jb
jo
pop
inc
mov
mov
aam
out
mov
iret
out
outsl
jno
cli
jg
pop
push
dec
movsl
mov
leave
outsb
jno
das
cli
push
adc
loope
jne
leave
sbb
pop
scas
data16
mov
test
sbb
xchg
cmp
add
jo
jns
mov
mov
cmp
push
mov
push
jg
lret
gs
lods
and
inc
cmpsl
push
add
xor
outsl
les
jl,pt
rep
jae
arpl
pushf
mov
pop
cwtl
lea
outsl
pop
ds
xchg
notb
jge
cmpsl
add
xchg
or
int
push
mov
addb
push
cmc
sbb
mov
cld
test
scas
int
and
loope
loopne
shll
clc
sub
cwtl
xor
lock
fidivrs
sub
mov
mov
cld
sarb
inc
jecxz
int
fstpt
push
pusha
cmp
xchg
das
jle
sbb
sbb
or
sub
movsb
mov
jbe
cli
push
push
adc
out
icebp
mov
popa
mov
cmp
push
and
fcoms
int
dec
mov
or
scas
sahf
mov
and
loop
cmpsb
repnz
push
jle
inc
pop
movsb
and
push
pusha
pop
push
fmull
mov
testb
fldl
daa
aad
mov
push
xor
loopne
xorl
and
rolb
jp
lods
push
and
arpl
push
cld
jb
mov
push
in
jl
addr16
ret
insb
sub
mov
insb
push
lcall
pop
fidivrs
inc
std
stc
jns
insl
push
push
inc
mov
fmull
test
subl
adc
outsb
add
mov
dec
cmp
repnz
aad
mov
mov
jmp
scas
mov
mov
cltd
jge
pop
fs
dec
push
lock
rcrb
stc
sahf
xor
mov
test
ret
mov
or
xchg
lock
sti
pop
in
pop
lds
xor
dec
ja,pt
mov
hlt
inc
test
inc
imul
rcll
mov
ficoml
repnz
mov
pushw
jbe
dec
loopne
xchg
imul
and
pop
xor
add
push
xchg
add
ja
nop
pushf
jg
mov
jns
stos
mov
xchg
mov
xor
pusha
out
dec
push
pop
sub
cwtl
enter
adc
sbbl
clc
and
sbbl
push
mov
hlt
mov
or
dec
or
mov
push
push
hlt
mov
lcall
xchg
clc
pusha
lcall
lods
or
les
jns
inc
test
pop
test
jae
cmc
enter
mull
inc
mov
add
cmp
adc
and
test
xchg
ss
jbe
pushf
cld
pop
cwtl
imul
stos
bound
inc
and
in
dec
adc
mov
or
lcallw
sub
pop
in
addr16
js
or
or
out
fists
pop
add
add
leave
dec
inc
outsb
lret
testl
pop
add
in
je
jge
push
pop
in
mov
dec
andl
nop
dec
roll
dec
nop
rcr
sbb
call
int
iret
test
adc
cltd
mov
push
cpuid
push
int
sub
cwtl
sbb
jmp
cli
jle
fwait
or
leave
push
lods
or
mov
pop
inc
into
sbb
jp
adcl
std
xchg
or
testb
mov
jne
adc
sbb
repz
shrl
sbb
cmpb
push
pop
mov
push
dec
and
jno
sub
mov
stc
sbb
jecxz
in
int
jo
pop
push
inc
cmp
adc
sub
fst
lock
aas
in
jl
sbb
pop
dec
addr16
cmpsb
mov
add
into
jle
scas
leave
xchg
sbb
mov
imul
inc
sub
pop
jne
aam
and
lods
xor
ret
adc
mov
ljmp
cmp
or
mov
call
mov
ret
les
push
aam
into
pop
pop
cmp
jecxz
cmpsl
lahf
test
sub
xchg
xchg
es
push
out
ljmp
out
jp
movl
into
and
push
fbstp
xor
daa
imul
sub
icebp
stc
ret
pop
test
and
daa
mov
cmpsl
sbb
dec
call
bound
je
out
insb
fiaddl
add
test
imul
and
int3
adc
adc
sbb
sub
xchg
jp
fstpt
mov
pop
hlt
fiadds
push
std
mov
out
push
add
je
sub
ja
cmp
out
push
xchg
adc
dec
xchg
dec
int
cmp
jecxz
int
sub
aad
dec
das
or
in
or
xchg
cmp
push
adc
sahf
fldenv
orb
mov
in
sub
mov
mov
pushf
into
or
sub
or
sahf
jle
rcr
push
xor
ja
pushf
push
push
mov
mov
dec
shll
sbb
aaa
xchg
loopne
adc
rorb
pop
pop
rorl
dec
ret
jo
cli
inc
push
or
outsl
fsubs
sub
addr16
gs
aad
push
inc
pop
xchg
jae
test
ret
pushf
and
xchg
xorl
jge
xchg
lods
push
fs
popa
pop
js
mov
imul
mov
lret
lods
cmp
xorl
mov
loope
outsl
pop
dec
mov
xor
mov
in
mov
and
in
push
dec
push
or
sub
sbb
aas
addr16
test
in
fwait
insb
out
jmp
or
cmp
mov
fistps
dec
jae
push
jecxz
mov
xor
xor
inc
push
lods
insb
flds
leave
test
fwait
ljmp
xchg
push
inc
icebp
rcll
and
ret
lret
stos
addr16
mov
dec
imul
icebp
fistpl
stos
fimuls
push
add
fwait
inc
popf
mov
lods
pusha
bound
mov
inc
cmp
popa
fwait
loope
dec
in
or
xor
lods
inc
imul
push
jmp
lahf
lret
int
pusha
orb
fwait
mov
lahf
pop
mov
add
jge
adc
pop
jns
scas
shlb
xor
xor
mov
sub
rcrl
ffreep
or
cmpsl
outsb
mov
push
pop
mul
mov
bswap
mov
iret
xchg
jle
ljmp
outsl
push
push
dec
les
ljmp
cmp
aaa
push
pop
cmp
add
rcll
cwtl
sbb
ja
fildl
jl
push
outsl
or
fiaddl
inc
fsubrs
aad
xchg
mov
cli
clc
ss
cli
or
clc
push
push
adc
shll
popf
xor
xchg
pop
cli
mov
push
out
outsl
dec
push
ret
sub
lret
sbbb
mov
pop
cmp
jb
fcomp
and
xchg
jge
les
je
arpl
gs
xchg
loope
inc
pop
push
cltd
shl
popa
pop
adc
rcrl
mov
lret
lock
popw
lds
mov
inc
pop
jno
adc
lods
mov
push
in
testl
arpl
add
mov
fcmovne
or
jae
push
in
testb
mov
out
xchg
test
xor
in
shll
jae
and
cmp
cmpsb
xor
pop
mov
adc
adc
bound
jnp
push
mov
aam
aaa
adc
imul
xor
cs
xchg
and
inc
es
hlt
hlt
and
movsb
mov
pop
inc
add
jge
mov
sub
pop
mov
push
add
lods
repz
mov
mov
dec
shr
test
jns
adc
int3
popf
mov
stos
cmp
xor
scas
rolb
pop
ds
mov
sub
in
mov
dec
push
out
loop
xchg
shrb
mov
outsb
in
fsubp
cmc
jge
daa
ffreep
subl
ret
outsb
fcoms
dec
mull
xor
cmp
sti
inc
test
mov
je
fwait
adc
in
dec
adc
mov
jb
and
dec
pop
add
insb
cmp
xchg
mov
popa
cmp
cmp
sbb
loope
fadd
and
push
pop
es
popa
das
mov
loope
movsl
ffree
mov
das
push
call
mov
and
rcrb
and
or
fisubl
data16
xchg
sub
push
repz
mov
sub
mov
and
adc
cmp
mov
fimuls
jb
dec
sub
or
sub
dec
int3
lret
jno
pusha
pop
idiv
cmp
jge
ljmp
mov
or
sti
xchg
cmp
cmpsb
mov
in
mov
and
in
and
dec
outsb
push
xchg
lret
loopne
dec
dec
adc
dec
mov
sub
push
sub
iret
dec
cli
repnz
xor
pop
std
std
pop
addb
movb
lds
arpl
cltd
pop
loop
mov
cltd
jnp
stc
xor
sub
and
cltd
xchg
or
sbb
xlat
iret
push
xor
sbb
cmp
mov
std
cmp
cld
les
lcall
adc
xchg
add
repz
out
daa
push
push
cli
imul
add
out
subb
jnp
push
into
scas
adc
pushf
mov
mov
into
inc
sbb
cmp
pop
sub
xor
ds
push
lods
or
lea
popf
pop
cmc
add
sbb
lcall
emms
shlb
mov
jge
mov
sbb
aam
pop
mov
sub
or
ficoms
arpl
jne
mov
mov
push
inc
rolb
lahf
ficoms
adc
mov
add
cmp
push
das
inc
scas
out
test
filds
pop
dec
idivl
dec
mov
lods
adc
cmp
mov
jbe
fsub
push
std
ficompl
and
lret
fmuls
xchg
push
jl
inc
inc
ljmp
into
inc
sub
test
xor
add
neg
add
inc
pop
aas
int
mov
outsl
pop
scas
mov
sbb
ret
mov
xor
sbb
gs
ja
inc
aam
popf
cwtl
and
fisubrl
or
dec
lahf
mov
or
lcall
insl
cltd
push
mov
fwait
jo
bnd
mov
mov
sbb
lret
stos
leave
jbe
push
int
adc
pop
jle
jmp
enter
push
mov
push
or
les
adc
push
cmc
dec
jecxz
push
lcall
fcoml
scas
ss
mov
jmp
addb
dec
and
shlb
arpl
xchg
adc
in
addr16
mov
scas
rcrb
or
dec
dec
mov
cld
add
repz
cmp
ds
sbb
xchg
shlb
bnd
xchg
adc
cmp
adc
jecxz
push
mov
push
pop
mov
xchg
cmc
insb
push
lods
mov
push
ret
mov
push
jmp
dec
sbb
sbb
add
std
scas
clc
adc
xchg
push
add
or
push
or
dec
rcrl
pushf
daa
sub
clc
fsubrl
mov
jb
je
jge
ljmp
xorl
mov
dec
adc
dec
popf
xor
into
lods
mov
out
sub
aas
jo
movsb
test
jl
jbe
pop
inc
pop
push
xchg
ljmp
adc
xor
xor
sub
aad
lret
jb
das
int3
shlb
test
in
out
adc
ret
dec
fs
rorb
outsb
jge
scas
imul
daa
loop
adc
pop
sub
insb
adc
xchg
ja
sbb
push
cltd
mov
jmp
test
mov
lret
xor
inc
jecxz
add
in
pop
jle
jmp
loopne
pop
inc
xchg
ret
out
call
mov
jp
cwtl
lds
jle
xchg
mov
aaa
int
mov
sahf
fstl
cltd
or
sbb
fildll
sub
imul
mov
mov
sbb
mov
cmpsb
out
push
shlb
jecxz
sti
in
pop
ret
fcoml
icebp
cmp
and
mov
popa
xor
jnp
fldl
in
jmp
shr
inc
sbb
aam
test
or
aas
mov
sub
jno
jge
orl
pop
dec
or
jae
fcmovnb
orb
ficompl
sbb
mov
aas
lds
clc
inc
call
and
popf
xchg
addr16
sbb
add
mov
imul
andl
cld
mov
cmpsb
dec
test
xor
pusha
mov
push
sbb
push
andl
xchg
inc
sub
and
inc
mov
xchg
jo
cmp
test
pop
enter
pop
cmpsb
nop
xchg
std
std
inc
call
sbb
inc
andl
lods
xor
scas
lock
dec
cmp
mov
mov
out
inc
inc
sbb
sub
xlat
fs
xor
in
sub
cmp
addl
push
sbb
or
adc
lcallw
outsl
bound
add
cmpl
movsb
fsubr
das
aas
call
cwtl
push
and
mov
mov
popf
dec
sub
mov
xor
movsl
xorl
out
js,pt
fcomi
jno
jns
xlat
xchg
fistpll
mov
fbld
pushf
daa
lcall
jns
fucom
jp
ret
and
push
or
pop
les
jmp
sub
aam
fidivrl
loope
loope
fwait
sbb
js
arpl
mov
fcmovne
pop
arpl
inc
dec
das
jp
frstor
loopne
arpl
rorl
cmp
fs
jno
in
adc
pop
xor
js
sbb
andl
lahf
lods
pop
insl
imul
fsubl
popa
fwait
adc
add
addr16
mov
mov
addr16
cltd
cli
mov
push
jmp
lods
adc
pop
mov
mov
lea
mov
mov
outsl
insl
ds
sub
mulb
mov
xor
jae
or
xchg
jo
jno
adc
add
xor
test
or
inc
imul
dec
jno
frstor
xchg
jp
inc
daa
or
mov
imul
or
or
insb
cmp
push
mov
or
mov
add
dec
jl
test
outsb
lods
xor
in
call
jmp
jo
test
popa
and
loopne
negl
cmp
mov
mov
movsl
dec
addr16
adc
andl
out
cltd
pop
in
dec
popf
cwtl
es
pop
sub
or
je
call
cmp
test
into
jle
enter
push
insb
shl
mov
dec
ret
mov
fistpll
std
shrb
call
sbb
hlt
pop
ret
subl
loope
call
cmp
imul
mov
stc
add
xor
dec
push
scas
dec
fdivs
enter
push
fists
push
dec
pop
mov
daa
loop
sub
xlat
jnp
adc
nop
xchg
call
or
mov
icebp
add
push
add
mov
loopne
rol
leave
ja
inc
sub
inc
dec
ret
test
jp
or
sbb
fstpt
dec
mov
adc
ficomps
insb
or
mov
test
xor
xorb
ja
movzwl
cmp
les
xchg
sti
aad
scas
add
ja
add
dec
addr16
mov
inc
xchg
or
in
push
sub
sbbb
call
fnstsw
add
repnz
mov
int
movsb
fstpt
insl
push
inc
lea
sarb
shrb
dec
add
mov
pop
cltd
fistl
rclb
in
icebp
outsl
sbb
xor
dec
jns
or
test
inc
movl
je
inc
aaa
outsb
ja
mov
jg
fsubrl
das
sbb
and
pop
popf
lret
inc
inc
test
sar
and
push
enter
mov
fisubrl
cmc
repz
xor
jmp
subb
lret
std
out
mov
cmp
sti
xor
cmp
ljmp
popf
mov
mov
pop
test
sub
fnstenv
dec
out
imul
fstpt
add
or
sub
fiadds
dec
xor
sbb
push
push
dec
ret
lahf
insl
xchg
js
inc
dec
sbb
jg
ljmp
fcmovnu
jp
xor
insl
or
in
pop
ror
dec
add
fcmovnbe
cmpsb
mov
sub
mov
or
outsl
subb
jg
or
push
inc
cwtl
push
icebp
pop
or
xchg
cli
cmp
and
mov
add
sbb
jne
mov
sbb
add
sbb
movsl
aaa
fnstenv
add
add
xchg
leave
mov
push
sti
pop
in
pop
out
or
call
sahf
push
mov
sahf
sarl
int3
push
jmp
xor
lahf
popa
pop
and
jbe
bound
cltd
dec
pop
fisubs
xor
loop
cmp
jne
mov
insb
dec
popa
jecxz
lds
js
and
inc
and
mov
xor
jbe
ret
mov
mov
data16
pop
sbb
jo
mov
cmp
add
and
mov
xor
fbld
jp
dec
mov
std
stc
sbb
push
and
dec
in
out
mov
lret
movsl
bound
sahf
mov
xchg
mov
sub
fcomps
mov
cli
test
mov
lret
data16
fnstsw
sub
mov
into
add
xor
popa
or
dec
sub
sub
movsl
sub
sets
jmp
cld
adc
icebp
jb
icebp
lods
lods
push
jmp
xlat
pop
jae
cmpsb
jbe
xor
shlb
int
loopne
inc
xchg
pop
rorb
std
stos
jge
stos
mov
or
rcrb
ja
inc
mov
repz
push
xorb
and
and
sbb
add
add
repnz
jb
pop
inc
in
cmp
je
jae
jmp
cli
out
das
jns
dec
jne
enter
cld
mov
push
mov
fidivrs
inc
jp
inc
adc
jns
sbb
adc
inc
mov
add
je
xchg
js
pusha
aad
jno
stos
dec
sbb
jno
sbb
jp
xor
dec
ret
xor
loope
push
shlb
jecxz
in
fimull
pop
inc
data16
cmp
sarl
or
lret
sbb
jo
rcrb
roll
outsl
adcb
lret
mov
cmpsb
adc
insl
push
mul
mov
sti
iret
lcall
clc
adc
data16
lcall
inc
pop
lock
int3
outsb
dec
mov
pusha
mov
movsl
sub
loop
cmp
outsb
inc
jg
cmp
push
in
dec
sbb
pop
jnp
add
inc
ret
sbb
lcall
push
jg
sti
ja
je
pop
insb
sti
dec
js
push
mov
lcall
imul
push
sysenter
je
loopne
fisubl
pushf
sub
aas
outsb
pop
adc
loope
jmp
jno
repnz
popf
lahf
dec
in
nop
sub
xor
shl
fsts
sysexit
pop
add
arpl
push
xchg
test
stc
mov
jnp
xchg
cmp
ja
sub
ja
fisttps
push
cmp
mov
imul
mov
add
jo
es
dec
sbb
mov
adc
pushf
aad
test
out
sbbl
mov
ss
xor
faddl
add
das
mov
adc
cmpsb
js
jo
inc
pop
jae
stc
lds
xchg
pop
sub
mov
and
add
push
out
jecxz
pop
add
pop
xchg
mov
pop
stos
sbb
fwait
mov
aaa
jns
add
testb
add
sbb
sub
rcll
jns
loop
push
push
loopne
inc
mov
xchg
dec
sbb
jl
aas
cmp
test
push
test
sbb
outsl
mov
loopne
arpl
cld
enter
aas
inc
pop
mov
sbb
jle
and
cwtl
add
cmpsb
rolb
fwait
jg
dec
mov
mov
cmp
test
js
xchg
inc
jg
test
xor
testb
inc
adc
xchg
or
pop
rcrb
xor
push
jg
roll
or
icebp
push
sbb
mov
js
push
dec
push
push
jge
fwait
cltd
cs
inc
out
fbstp
dec
pop
add
dec
pop
mov
pop
xchg
in
test
jo
ret
push
push
sub
pusha
pop
mov
aam
in
pop
jns
mov
mov
jge
cmpsl
pop
push
cmpsb
ljmp
lods
loopne
sbb
and
flds
pop
enter
mov
out
movsl
arpl
pop
roll
enter
daa
jle
in
mov
imul
dec
jl
imul
cwtl
dec
addr16
shrb
push
adc
in
daa
ljmp
ret
repz
jb
in
mov
mov
dec
ret
ret
dec
sbb
cli
lods
out
inc
cli
addr16
jo
cmp
and
push
cltd
test
lret
lcall
ret
testb
mov
out
iret
cmp
and
pushf
daa
jnp
push
cltd
sub
clc
cmc
jge
into
stc
fisubs
dec
mov
out
stos
movsl
sub
lods
rorb
and
push
and
xor
gs
in
jb
push
xor
cmc
fldcw
cmpsl
push
and
sarl
in
cld
sbb
or
lods
pop
xor
repz
imul
dec
jg
stc
ficoms
inc
cmp
pop
inc
pushf
pop
mov
rol
ja
fs
sub
fs
pop
pop
jbe
push
and
mov
imul
test
jns
rorb
pushf
pop
je
fwait
push
add
test
sbb
jnp
popa
cmpsb
cmpl
lret
aad
std
push
fldt
mov
mov
inc
in
aad
inc
jnp
insl
fldl
setb
rorl
outsb
sub
mov
pushf
popa
jge
adc
std
xchg
ja
mov
daa
mov
xchg
mov
xchg
mov
sbb
imul
xchg
xchg
jmp
or
add
fdivp
aad
sub
cwtl
daa
sbb
in
dec
sti
push
cmp
cltd
add
cs
cmc
xchg
xchg
xchg
or
push
mov
dec
xchg
cmp
sub
stc
ret
jmp
or
inc
fsubrs
cmp
rcll
xchg
cwtl
push
dec
js
ficoml
inc
sti
nop
fsub
dec
js
je
xchg
mov
lsl
sbb
inc
fistl
mov
test
iret
dec
cltd
movsl
mov
jmp
popa
mov
mov
leave
pop
add
addb
cmp
je
popf
in
jbe
mov
bound
dec
jl
add
daa
mov
pop
inc
stos
mov
inc
jbe
leave
xchg
stos
daa
xlat
xor
andb
movsl
adc
into
mov
les
pop
sbbl
cmp
sbb
sbb
xchg
adc
add
stos
ljmp
decb
pop
push
test
sub
ret
xor
inc
adc
repnz
cs
or
pop
or
lods
pop
xchg
aas
hlt
lods
mov
push
je
xor
fidivrs
cld
push
int3
or
jp
test
lcall
icebp
jb
push
mov
clc
jae
icebp
inc
fbld
add
lock
adcl
das
rclb
cmpsb
test
sti
jbe
shrl
add
lea
cmp
mov
mov
faddl
in
mov
mov
pushf
mov
add
mov
pop
push
mov
adc
enter
daa
sbb
fs
arpl
adc
out
stc
inc
dec
mov
cmc
scas
mov
mov
shl
mov
ds
mov
xor
mov
adc
push
in
adc
and
loope
dec
dec
or
xlat
xor
ljmp
sahf
test
dec
mov
mov
inc
in
push
adc
pop
repz
mov
or
cld
xor
insb
push
push
mov
add
inc
mov
lahf
push
pop
cli
mov
and
sarl
push
push
pop
sub
repnz
mov
mov
lahf
and
mov
sub
fs
dec
fnsave
gs
lods
xchg
dec
push
es
sbb
cmp
jbe
add
mov
out
xchg
pop
das
shlb
jecxz
sbb
sbb
repz
pop
and
adc
sbb
mov
or
xor
mov
and
lods
lods
outsb
in
and
sbbl
push
cmpsb
aas
jmp
mov
dec
xchg
cmpsl
push
popa
add
addr16
sbb
inc
xchg
ja
ljmp
sbb
and
fwait
test
jl
ss
push
in
lods
out
jmp
dec
std
jns
ret
fmull
push
and
add
mov
imul
inc
ret
subb
shl
lret
inc
pop
dec
jmp
aaa
mov
lods
mov
out
imul
jne
je
lods
int
in
pop
mov
test
das
dec
stos
cmc
daa
push
sarb
and
stos
testb
les
pop
push
mov
xchg
in
xor
les
repnz
pop
mov
imul
cmp
sbb
jns
dec
enter
mov
mov
cmp
je
push
cmpb
popf
inc
aaa
xor
mov
xchg
aaa
ret
jle
js
fwait
into
pop
movsl
xchg
inc
loope
adc
fstl
xor
data16
pcmpeqb
call
push
rolb
pop
in
xor
inc
cli
ret
in
ljmp
push
out
xor
imul
cmp
les
imul
dec
in
inc
outsb
clc
ret
mov
jmp
dec
mov
fwait
push
test
add
push
xchg
arpl
fwait
movsl
pop
push
sarb
pop
xchg
es
jae
cmpsl
jno
xor
mov
cmp
mov
push
scas
mov
decl
mov
adc
js
shlb
pop
and
jl
push
pop
psadbw
pop
push
rol
in
xor
sub
arpl
lcall
fs
addr16
inc
push
or
jg
mov
ret
aad
mov
xchg
xlat
adc
shr
inc
and
scas
or
lods
iret
mov
push
in
inc
addb
das
stos
cmpl
lret
push
cmpsl
adc
inc
lret
hlt
vmwrite
das
and
rorb
or
cmp
arpl
inc
inc
arpl
scas
iret
fnstsw
scas
call
popf
push
negb
mov
mov
lds
cmp
dec
or
jg
fsubr
inc
icebp
mov
cmp
stos
aad
mov
aam
and
add
enter
cmp
frstor
mov
adc
inc
lea
mov
decb
inc
and
dec
sti
xchg
sub
dec
ja
pop
adc
mov
jne
push
xchg
sbb
inc
add
mov
sub
pop
clc
add
out
lds
cmp
push
xchg
jns
adc
jecxz
cmc
dec
push
and
push
xor
fcomps
pushf
into
lahf
push
mov
orb
jb
ss
adc
bound
push
xchg
stos
sti
shrb
and
cmp
imul
outsl
push
push
push
popf
cld
add
mov
mov
mov
clc
push
jge
jmp
repnz
mov
dec
pop
xor
jl
jns
insl
scas
roll
push
icebp
lret
mov
mov
mov
and
mov
push
hlt
arpl
in
lock
dec
sti
cmpsl
lahf
fs
adc
lock
pop
push
or
xchg
into
test
jg
mov
xor
mov
push
mov
inc
in
and
inc
filds
fwait
pop
sub
jl
fwait
sbb
jg
mov
repnz
movsl
push
xchg
pop
cs
stos
insb
sbb
cmp
mov
xchg
fcomps
inc
es
es
aas
fwait
ret
pushf
pop
outsb
movsl
lock
out
xchg
scas
xchg
jb
mov
jge
xchg
sub
jae
into
pop
std
adc
lret
pusha
mov
or
mull
dec
daa
push
cmc
popf
lock
inc
mov
pop
ret
lahf
mov
cld
push
fwait
loop
movsl
data16
xlat
jnp
dec
mov
pop
shr
dec
or
int3
je
jecxz
int
sub
jb
jecxz
add
xchg
xchg
popf
addb
jge
in
pop
stos
popa
mov
mov
xchg
mov
mov
out
mov
mov
xchg
dec
bound
rorb
jmp
jl
inc
out
adc
xor
rorb
out
jle
xor
js
lods
inc
outsb
pop
loope
jo
dec
pop
push
xchg
hlt
pop
fidivrs
jmp
xor
mov
add
jge
dec
sarl
inc
mov
popf
out
pusha
int
sbb
push
push
in
push
mov
lea
mov
sbb
clc
dec
mov
outsb
xlat
mov
out
mov
push
loopne
int
popa
inc
adc
xchg
test
lret
pop
jmp
lods
push
rolb
aam
sub
sub
in
cltd
and
adc
and
add
jecxz
mov
mov
mov
sbb
pop
inc
arpl
mov
popf
or
sub
addr16
scas
mov
lods
nop
fildll
and
sub
rorl
and
push
cmp
out
fst
sbb
cmp
and
jbe
cmp
lea
xchg
fcmovnb
scas
clc
push
pop
popa
inc
das
cmc
repz
mov
xor
in
hlt
into
fcomi
adc
push
mov
fldenv
aaa
in
outsb
call
push
ror
sub
aam
mov
mov
arpl
push
dec
les
rorl
push
push
pop
lcall
sbb
push
or
leave
scas
push
or
loope
pusha
xor
inc
xchg
stos
insb
fisubrs
sti
lcall
jle
lahf
mov
push
or
mov
or
popa
mov
xchg
ret
pusha
add
add
adc
out
inc
in
mov
movsl
aam
cmpsl
xor
push
mov
rol
xor
push
lahf
fs
inc
or
cmc
pop
sbb
jb
jmp
xchg
out
ja
jb
mov
outsb
pop
daa
adc
or
pusha
push
pop
enter
imul
dec
sub
into
movsl
push
dec
pusha
jecxz
add
dec
es
dec
shll
jns
cwtl
fisttps
jo
outsl
cmc
push
xchg
idivb
out
js
cltd
gs
cs
xchg
fdivp
in
ret
std
ss
fadd
xor
bound
scas
xor
sbb
dec
test
lret
pop
jns
xchg
vdppd
pop
cmpsl
jecxz
mov
sbbl
ret
adc
add
push
adc
add
js
loope
pop
xchg
pop
cli
mov
jmp
push
sub
test
push
std
jbe
pop
mov
sti
fistpl
mov
ss
rorl
fucomp
int
xor
cmp
fistps
push
imul
cltd
or
fildl
popa
bnd
fs
int
xchg
jl
addb
rcl
xchg
jb
inc
or
pop
adc
jl
int
mov
aad
rcl
outsl
add
cld
mov
addr16
and
sub
jmp
sbb
xor
xorb
movb
loope
sbb
int3
xlat
sub
and
fbstp
sarb
pushf
movsb
push
dec
jg
mov
mov
adc
push
push
insb
mov
iret
or
cmp
push
out
lret
push
jmp
inc
mov
stos
adc
add
xchg
pop
cmp
subl
xchg
repz
shlb
loope
movsl
adc
stc
add
sub
dec
dec
nop
adc
sbb
cmp
sub
add
push
loop
jno
shlb
bound
ljmp
mov
shll
mov
mov
gs
add
jp
sar
in
out
and
jns
scas
sub
cwtl
or
mov
jne
xchg
mov
xor
pop
jne
xchg
or
inc
fmull
cmp
leave
and
push
push
push
xchg
pop
or
mov
gs
sub
xor
jmp
or
scas
test
clc
out
mov
popf
or
pop
jo
cmp
sub
push
test
ret
pop
sbb
add
cmpsl
dec
xor
push
mov
dec
jnp
imulb
mov
adc
test
in
sbb
test
sar
sub
data16
leave
jo
rolb
inc
or
mov
xor
pushf
pusha
mov
testb
fisubl
mov
adc
push
nop
mov
jno
cmc
adc
cmp
dec
cmp
dec
mov
sub
data16
scas
push
mov
pop
push
mov
negl
pop
cwtl
sub
pop
and
push
repnz
das
fnstsw
aas
or
fildll
jne
call
call
stos
xchg
mov
int
scas
or
int3
adc
jp
in
in
cs
pop
sahf
aaa
xchg
add
stos
and
icebp
jmp
imul
jl
popf
adc
clc
cmp
jnp
enter
or
xor
popa
xchg
sbb
xchg
call
jg
lods
sbb
loop
mov
xchg
sbb
out
test
scas
test
lods
insb
jb
push
stc
add
or
imul
push
jae
sub
in
xchg
stos
daa
fsubr
fsubl
mov
fcompl
repz
pop
sub
xor
or
inc
jno
scas
out
sarl
loopne
cwtl
sub
pop
fldl
rorl
shl
test
cltd
fs
ljmp
jl
adc
xchg
xor
rcrb
mov
pushf
bts
add
insl
js
mov
xlat
cmp
sbb
cmpsb
sahf
sbb
sub
or
rclb
or
jbe
lods
and
idivb
add
sbb
mov
sub
mov
movsb
and
pop
pop
fists
sbb
jp
and
jb
cmp
mov
or
fwait
cmp
loop
and
xchg
cmp
xchg
adc
fdivrs
sbb
xchg
iret
dec
dec
les
pop
lret
rcrl
mov
mov
mov
shll
cli
daa
inc
jl
addb
imull
aam
cltd
mov
in
popf
jl
repnz
fwait
insl
pop
loope
jmp
aaa
dec
xchg
push
enter
arpl
inc
pop
out
cmpsl
xchg
les
imul
dec
mov
adc
add
mov
dec
rclb
imul
cmp
cmp
out
xchg
leave
stc
push
nop
push
push
xor
out
cltd
cmpsb
xor
jae
mov
cld
cmp
aad
xlat
mov
test
gs
lahf
es
lret
movsb
pop
mov
out
pop
mov
sbb
dec
mov
sbb
stos
ljmp
iret
sysret
jp
imul
push
inc
push
dec
pushl
stos
add
xor
jb
loopne
loopne
repz
push
jno
cltd
add
call
xchg
ja
in
push
cli
dec
and
fs
mov
loopne
push
push
or
and
xor
and
dec
sub
pusha
mov
mov
jg
xlat
push
or
mov
jb
inc
mov
nop
pop
fnstcw
jne
xor
mov
inc
sub
pushf
stos
inc
mov
mov
loopne
xor
out
push
xchg
pop
mov
mov
popf
out
mov
mov
pusha
xorb
add
outsb
outsb
test
out
into
mov
mov
cmpsl
fs
out
xchg
rcl
jge
fistpll
xor
mov
push
dec
inc
ja
dec
add
cmpsb
adc
adc
icebp
cmp
add
inc
decb
cmp
les
xchg
arpl
xchg
sub
push
xor
xor
xchg
inc
mov
testb
mov
dec
lret
jl
jecxz
and
test
test
inc
aam
xor
cmp
cmp
dec
jnp
inc
ss
rorb
add
test
aam
and
cmp
and
dec
push
mov
xchg
cmp
or
push
ror
jg
pusha
pop
dec
stos
xlat
fnstsw
mov
je
int3
test
pop
cmp
nop
leave
fcmovbe
jnp
incl
xchg
push
std
sbb
fisubrs
mov
jo
dec
aas
popf
into
mov
lret
loop
lret
xlat
test
and
xchg
xor
pop
dec
jae
div
push
cli
dec
and
loop
or
pop
jbe
pusha
stc
das
sub
outsb
sub
or
cmp
or
nop
ljmp
pop
mov
hlt
inc
pop
rclb
push
mov
add
add
and
sbb
lcall
test
mov
test
and
mov
jg
shlb
mov
aam
sub
decl
insb
lock
lock
cmp
bound
rorb
inc
ds
mov
xor
arpl
mov
aas
cmp
xchg
mov
xchg
push
pop
xor
cld
jmp
pusha
jns
jg
push
dec
add
sbb
movsl
add
pop
xor
fcoml
int3
mov
test
lods
jae
test
mov
dec
lds
imul
js
mul
movsb
fldl
and
aam
into
sub
fsubrp
lods
cwtl
xchg
popa
mov
hlt
mov
push
sbb
test
rol
in
push
sub
ja
xor
sub
push
jge
cwtl
into
jbe
popf
or
ret
xor
jbe
iret
gs
int
leave
inc
ret
ja
iret
dec
mov
stos
fsubl
test
xchg
and
loope
jg
xchg
mov
xchg
pop
ja
xchg
dec
stos
xchg
lods
fucom
push
test
rolb
add
aaa
ja
xorb
xor
shrl
cmp
pusha
in
xchg
out
test
cmp
movsb
lock
rorl
adc
push
cmpsb
fbstp
icebp
aas
out
fs
mov
add
test
les
jb
cmp
mov
push
roll
rclb
push
or
sub
fstl
fcompl
adc
shrb
stos
mov
loope
and
cmp
lods
ds
jo
das
inc
inc
mov
mov
jl
adc
pop
cmpb
loope
or
mov
scas
xor
push
adc
jnp
insb
frndint
jne
aad
cwtl
test
mov
mov
mov
sub
cld
pusha
movsl
xor
std
and
les
loopne
lds
jmp
push
aaa
xlat
jnp
ja
push
loope
loopne
ret
xchg
push
pop
aaa
xor
push
stos
pop
or
arpl
pop
dec
mov
stos
rorl
cmp
mov
and
fdivrs
stc
notb
scas
shrb
xor
jecxz
mov
and
clc
sbb
add
xchg
ret
sbb
mov
xor
imul
arpl
push
aas
or
iret
push
or
jecxz
xor
js
mov
cmp
push
mov
movsb
pop
add
xlat
adc
mov
loope
lods
add
les
push
shlb
jne
pusha
loopne
lds
adcl
or
mov
mov
cmp
sub
test
ss
fcoml
pushl
mov
inc
cmpsl
stc
sbb
jae
dec
cmp
xor
inc
rorl
lock
inc
loop
mov
bound
and
stc
dec
add
push
clc
mov
testb
jns
mov
cmp
push
xchg
dec
mov
jmp
xchg
jae
cmp
ja
test
xor
rol
imul
adc
jle
out
dec
or
mov
cli
cmp
jbe
dec
sahf
fwait
test
lods
scas
and
or
mov
inc
and
jb
sbb
jb
pop
dec
test
xor
dec
xchg
bound
mov
and
jne
fdivl
movsl
in
inc
sub
rcrb
gs
ljmp
lock
rolb
and
pop
jmp
fnop
or
pop
repnz
pop
add
out
sbb
push
fwait
jno
stos
adc
mov
or
stc
loopne
sbbb
push
lea
sub
aam
les
cmp
mov
les
sbb
aam
mov
sbb
arpl
add
icebp
mov
xorl
popa
aad
inc
outsb
or
lret
faddl
or
and
cmp
js
outsl
pop
and
fwait
dec
pop
mov
mov
addr16
in
and
xchg
adc
imul
jge
mov
fidivl
sar
sub
mov
div
push
arpl
push
inc
ds
inc
mov
sbb
pop
lcall
mov
sub
xchg
jmp
test
jle
adc
lcall
or
push
test
sbb
sbb
cmpsb
stc
dec
cmp
aad
rcrl
mov
or
fnstcw
out
mov
jo
push
ja
dec
popf
nop
mov
ss
mov
fists
stos
cmp
mov
aas
loope
sub
mov
dec
cmp
lock
mov
das
pop
ja
jl
mov
adc
iret
cmpsb
mov
jns
fwait
cwtl
jmp
adc
mov
fdivrs
es
sbb
xor
test
arpl
div
popf
xlat
pop
mov
adc
shlb
ja
lcall
sub
sarl
in
call
loope
xor
pop
push
pop
mov
cmc
and
popa
cmp
imul
cwtl
mov
mov
jecxz
out
cltd
shr
test
cmp
ss
test
xor
push
fdiv
adc
sbb
pop
jle
mov
jb
out
movsb
inc
idivb
cmp
mov
push
stos
sbb
sbb
jnp
fisubrs
lock
out
fsubs
les
dec
fadds
lret
push
adc
movsb
daa
cmp
xchg
movsl
xor
jecxz
test
add
stc
mov
arpl
aam
lea
ja
mov
jnp
cwtl
lock
mov
ljmp
mov
xlat
out
sbb
xor
xchg
js
mov
adc
pop
std
mov
sub
inc
jo
xor
mov
js
les
sti
jg
loop
cmpsl
inc
fstp
dec
mov
sbb
inc
icebp
hlt
divl
shrb
in
inc
jmp
enter
mov
addr16
push
xchg
aad
int3
loopne
fldenv
insb
xchg
fsubl
xlat
ja
jb
subl
rolb
mov
std
push
daa
out
movsb
enter
inc
and
nop
bound
mov
call
xor
fadd
test
mov
std
pop
jmp
lret
xor
sub
adc
and
push
pop
and
sbb
cmpsl
and
cmp
xor
div
and
jae
sbb
or
cltd
notb
js
rclb
fs
mov
out
xchg
arpl
adcl
sub
ss
pop
push
mov
or
add
mov
pop
lret
inc
out
imul
aam
ret
or
popa
in
add
lcall
dec
pusha
or
xor
mov
inc
pop
loope
mov
call
sub
scas
imull
mov
push
cmp
pop
ret
in
rcrl
or
push
ds
in
mov
les
mov
jne
jne
inc
es
sub
push
push
cld
fadd
and
rol
or
push
xor
pop
or
in
repnz
out
add
add
push
jg
or
hlt
mov
addr16
jecxz
jp
inc
jno
pop
mov
je
cmpsl
jg
mov
stos
lods
rcr
das
jecxz
sbb
test
hlt
mov
movsb
mov
mov
jmp
dec
sub
test
and
test
lret
mov
xchg
testl
jae
add
call
pop
add
out
mov
jmp
ret
mov
and
mov
jl
push
sahf
mov
push
xor
adc
je
ds
in
push
and
ret
inc
dec
mov
call
leave
out
xchg
ds
insb
mov
xor
jo
int3
push
mov
mov
lahf
ret
xlat
adc
jnp
popa
xchg
mov
fs
push
sub
out
push
in
dec
jge,pt
out
add
enter
fnstenv
cmp
shlb
adc
orl
push
outsl
outsb
jg
test
sbb
cmp
in
sbb
and
aam
jecxz
test
xor
jmp
mov
push
or
enter
xchg
push
lds
fdivrl
adc
cmpl
jle
cmp
outsb
push
lock
xchg
or
cmc
jno
add
push
stos
xchg
mov
cmc
je
jl
imull
mov
dec
push
or
sahf
lods
add
pop
and
adc
insl
fldt
popa
pusha
xor
mov
dec
xor
fwait
xor
add
adc
add
sub
aam
ret
push
mov
aas
popf
cmpsb
mov
cmp
leave
xchg
cmp
pop
adc
test
or
add
push
aas
stos
add
jnp
out
fsub
mov
icebp
data16
or
mov
inc
call
cmp
dec
fs
in
mov
lret
aam
adc
pop
cmp
int
ret
push
fld1
cmp
push
and
jecxz
hlt
cltd
inc
xor
adc
push
mov
test
ret
push
push
das
shll
fs
mov
mov
pop
pushf
in
sub
shll
fsub
mov
dec
adc
shlb
push
mov
rolb
add
lret
xor
mov
cltd
repz
cmpsb
outsl
mov
jl
dec
data16
cli
jge
cmp
repnz
cmp
incb
add
dec
and
inc
and
fmull
enter
adc
mov
xor
push
inc
pop
xor
pop
subb
sub
jno
cs
pop
dec
imul
add
call
add
jle
fcomps
sub
inc
fildl
dec
sub
test
push
and
sub
ret
sub
push
or
or
push
imul
insl
faddl
cs
jo
and
popf
mov
loop
std
jg
pop
loopne
rcr
xchg
lds
push
bound
jp
mov
lea
sbb
jbe
pop
out
inc
ss
mov
inc
jno
aaa
or
das
das
xor
dec
sbb
adc
out
inc
sub
pop
xor
loope
or
jb
mov
clc
jle
lahf
mov
pop
jnp
insl
and
add
or
ror
jne
or
adcl
aam
sub
sbb
imul
repnz
cwtl
push
pop
jns
movsb
jno
jae
xor
cmp
stos
pop
dec
insb
jp
daa
jbe
fistps
mov
icebp
sub
leave
cmp
in
std
mov
push
jb
push
xor
xor
jb
cmpsb
jl
inc
jg
cmp
std
xor
mov
pop
lods
pop
jle
aad
mov
adc
inc
ret
lea
xorl
xor
jae
int
jmp
mov
out
jge
cmp
sbb
cltd
xor
cmp
lods
mov
jmp
add
fcmovne
jno
adc
or
fwait
mov
cmp
sbbb
inc
in
loop
stc
dec
mul
cltd
leave
xlat
outsb
lret
inc
gs
mov
cmp
or
cmp
pop
dec
cld
xlat
mov
pop
stos
out
inc
scas
inc
repz
pop
addb
mov
roll
xchg
inc
mov
xchg
cmpb
pop
xchg
add
rcll
mov
movsb
fwait
jbe
sub
es
pop
inc
jmp
adc
pusha
inc
test
mov
and
loop
mov
hlt
jge
jle
xchg
xor
push
loopne
dec
jo
inc
call
add
insb
in
fld
or
sub
jae
lods
fwait
jbe
leave
pop
sub
in
out
mov
mov
xchg
ds
add
fisttpll
jle
test
inc
xor
lret
imul
push
or
push
jnp
mov
scas
std
frstor
inc
in
mov
jp
jmp
iret
pop
cmp
pop
cld
mov
aad
lods
pushl
stos
pop
test
mov
xor
inc
push
pop
inc
dec
fs
jmpw
xor
push
adcb
or
repz
jmp
adc
mov
pop
jg
test
ss
insb
pop
cmp
dec
jl
movsw
int
scas
add
mov
cli
cmpb
and
pusha
sti
loop
xchg
sbb
fisttpll
gs
aad
icebp
jge
mov
inc
popa
sbb
bound
pop
in
ds
add
shrb
mov
sbb
add
outsb
and
adc
mov
lcall
sub
negb
ja
adc
cmp
gs
sahf
outsb
fistpl
xor
pop
xchg
mov
leave
xchg
sub
sbb
insl
xchg
fwait
clc
fnstcw
movsb
ret
push
test
pop
sarl
jg
push
adc
mov
andb
jnp
inc
sbb
lods
aaa
outsl
jno
sub
sbb
adcl
mov
sbb
xchg
push
aam
bound
jl
test
jmp
and
pop
jp
leave
movl
in
sbb
inc
dec
cli
sub
inc
clc
rclb
adc
nop
sub
inc
inc
ja
arpl
lods
and
jecxz
lock
jne
add
jmp
inc
loop
lcall
and
xor
cmp
sbb
jmp
jb
xor
cmp
pushf
inc
pop
mov
cmp
adc
mov
pusha
fs
sbb
adc
mov
leave
sub
jecxz
add
into
or
pop
cwtl
int
cmpsl
dec
pop
ljmp
jecxz
fdivp
out
jns
cs
leave
xchg
pusha
rcll
add
scas
cmc
xchg
inc
jbe
ja
sub
xchg
jmp
push
add
sti
mov
sbb
clc
xor
int3
xchg
dec
jne
sbb
jp
sti
loope
mov
add
stos
in
and
push
lea
sub
mov
inc
daa
or
cmp
jle
jbe
mov
lcall
sbb
fnstsw
ficoml
insl
pop
jbe
out
fisttpll
push
movsl
adc
mov
rcrb
mov
repnz
mov
or
in
xchg
or
push
push
and
inc
and
mov
ret
jge
pop
aad
cmc
fcompl
daa
fdivr
xchg
xlat
int3
pop
xor
mov
lcall
sbb
and
dec
loope
pushl
xor
popa
repz
adc
cmpsb
mov
cmp
out
mov
stos
test
lret
mov
push
mov
sbb
xchg
mov
sarl
jns
es
gs
mov
push
sbb
ss
push
mov
adc
cmpb
nop
fwait
inc
adcl
scas
mov
in
enter
mov
rorl
in
nop
push
test
xor
and
push
xorb
clc
cmp
push
mov
adc
mov
push
fsubr
scas
add
stos
call
les
cmp
cmpsl
jmp
cmpsl
add
push
shll
rcrl
mov
fdivl
dec
dec
fs
sub
add
rorb
mov
sti
mov
jge
sub
cmpsb
movsb
xchg
mov
mov
xor
icebp
xchg
sub
aaa
and
cmp
add
cmova
or
andb
mov
mov
mov
call
and
pop
jne
test
jne
icebp
call
cwtl
push
jne
nop
movsl
inc
scas
mov
mov
mov
xchg
mov
repnz
aaa
out
popf
or
lcall
xchg
fwait
stos
sbb
jmp
push
dec
in
mov
xchg
lock
fcomp
rclb
push
add
push
add
pop
in
nop
enter
jl
fcoms
adc
push
mov
ret
test
and
xchg
inc
xchg
fdivs
xchg
push
sbb
sti
jle
lods
test
lahf
scas
xchg
cmp
lret
lods
ja
sbb
lock
lds
or
ds
mull
pushf
rcrl
subl
add
pop
insb
push
mov
mov
out
fsubrs
repz
or
sub
xor
iret
fs
pop
popa
mov
stc
in
test
jnp
jmp
mov
and
cltd
mov
jp
push
dec
mov
adc
add
lret
or
mov
or
pop
xchg
dec
aaa
fimull
dec
adc
loope
mov
inc
or
mov
xchg
mov
jnp
fidivrs
fcompl
mov
mov
nop
out
mov
out
in
sti
push
cmp
sbb
nop
dec
into
lahf
and
lret
andb
je
data16
loopne
xor
pusha
enter
stos
shrb
into
jmp
mov
nop
push
jno
leave
sbb
adc
scas
rcrb
mov
subb
imulb
cld
jg
mov
push
jno
movsb
insb
dec
xor
lahf
shrl
inc
hlt
out
xlat
lcall
and
insl
push
fcomps
pop
jae
lods
pushf
cmp
and
push
jae
in
push
mov
mov
mov
jl
jns
out
fadds
jmp
xchg
outsb
or
jbe
out
lods
pushf
movsl
stos
cld
lcall
or
inc
out
movsb
ret
xor
test
ja
cltd
insl
int3
sub
and
mov
push
jmp
mov
xchg
es
mov
mov
popa
mov
push
adc
mov
movsb
dec
jl
jle
push
aas
sub
test
loopne
lcall
push
sub
dec
jmp
xor
in
lods
inc
inc
mov
lods
stos
sub
out
fadd
pop
fiadds
fwait
adc
fdivrs
push
push
add
and
inc
clc
aas
lcall
sub
xchg
xchg
cwtl
cli
mov
jge
enter
cmpsb
dec
add
jb
hlt
pop
push
push
insb
testb
loope
pop
std
pmaxub
ficomps
xchg
lret
stc
jae
dec
loope
inc
jge
sbb
or
nop
popw
pop
rorl
and
add
inc
jne
cmp
push
sbb
add
mov
lds
xor
aam
push
nop
jnp
divl
jecxz
lea
xchg
jbe
sbb
jns
mov
imul
insb
jbe
add
repnz
inc
inc
sub
movsl
or
jmp
not
dec
jo
sub
dec
xchg
xchg
sub
inc
inc
out
or
jge
out
ret
mov
mov
cmp
out
lods
int
jmp
sti
xor
shll
lods
push
push
fisttpll
jnp
fcomps
arpl
mov
sub
fstl
xor
mov
ja
mov
jmp
jg,pt
mov
lock
mov
sbb
andb
mov
out
pop
push
shll
data16
loop,pt
ret
mov
xor
mov
leave
scas
and
outsb
stos
test
stc
cmp
lret
cmp
out
ds
push
jle
adc
popa
inc
movsl
pop
push
iret
ret
jg
cltd
leave
aaa
inc
or
dec
arpl
jno
mov
addr16
inc
in
stos
jne
pop
sbb
add
push
sub
pop
xchg
fsts
jecxz
ficompl
cs
pop
scas
add
andb
push
xchg
into
push
int3
dec
ja
jae
stc
test
push
and
cmpsb
daa
inc
jno
sbb
and
loopne
pop
jnp
push
jbe
dec
jmp
or
fwait
lea
test
adc
cmpsb
outsl
cmovge
in
mov
xchg
mov
fstpl
shrl
or
add
cmpsl
jae
out
jb
rorb
lock
adc
sbb
mov
in
or
sbb
bound
cld
or
jno
mov
mov
or
movsl
sbb
icebp
add
cmp
dec
or
dec
aam
mov
mov
rcrl
push
cmpsb
push
mov
lret
outsb
stc
add
adc
aam
jmp
cli
jne
out
icebp
fwait
movsl
inc
imul
bound
sub
jns
sbb
sub
pop
stos
jg
popf
jp
leave
lock
in
adc
in
rol
jmp
stc
jge
ret
ficoms
insl
push
sub
fistpl
sbb
in
push
sbb
test
rorl
mov
or
movsb
scas
cs
lret
scas
or
in
fsqrt
mov
test
cmpsb
xchg
test
jl
jo
outsb
andb
pop
jno
adc
arpl
negl
cmp
shrl
insl
jbe
mov
jae
jg
push
push
outsl
pop
xchg
nop
bound
fisubl
out
dec
insb
jl
lods
iret
jecxz
add
das
push
mov
lea
adc
push
jmp
cmp
push
xor
inc
sub
mov
movsl
fwait
repz
xor
xor
xorl
sub
scas
inc
push
cmp
dec
or
std
je
pop
pop
xor
adc
fldl
ret
es
out
insl
fsubs
std
adc
push
mov
pop
dec
inc
cltd
int3
sub
and
lea
repnz
xchg
jno
mov
mov
pop
cmpsl
test
rorb
std
daa
and
mov
add
dec
test
mov
ret
jne
sbb
cmp
out
loope
cmc
xchg
and
and
pusha
out
std
mov
test
mov
adc
mov
int
sbbb
xchg
loope
repz
test
pop
or
cwtl
shlb
sbb
sbb
adc
repnz
push
xchg
mov
unpcklps
push
imul
inc
mov
mov
insl
loopne
repz
leave
mov
push
xor
mov
dec
lods
dec
push
out
in
xchg
gs
dec
mov
xchg
sub
adc
popa
and
int
fidivrs
sbb
jo
sahf
sbb
cli
and
stos
pushf
js
out
test
inc
out
xor
and
ret
inc
jno
fldcw
stos
sub
fidivrs
test
push
mov
jl
pusha
in
add
inc
rolb
dec
or
gs
inc
push
mov
mov
ret
mov
add
push
daa
je
int3
mov
cli
rclb
js
mov
mov
xchg
lret
stos
shll
sbb
adc
adc
sbb
push
fimuls
orb
addl
pop
out
hlt
pop
shrb
mov
lret
xchg
sub
mov
push
dec
enter
mov
call
faddl
cmp
pop
push
sbb
mov
adc
mov
out
mov
jno
inc
test
sub
mov
stos
xor
scas
movl
lcall
in
mov
out
adc
and
jg
std
scas
das
lcall
cmpsl
mov
or
or
sbb
or
mov
in
imull
cltd
data16
iret
jle
push
mov
imul
pop
js
ja
cmp
decb
in
pop
cmp
jb
mov
xor
inc
sub
push
jne
cmpl
rorb
sub
jge
adc
insb
fst
stos
test
cli
iret
adc
pop
test
or
adc
pop
jle
push
test
push
sbb
negb
movsb
sub
shlb
out
cmp
in
test
add
hlt
mov
jle
sub
add
add
adc
repz
pop
out
pushf
xor
clc
mov
mov
xlat
pop
add
add
mov
xor
ja
icebp
loopne
xchg
subl
push
push
xlat
bound
mov
push
cmpsb
add
add
and
push
push
jb
mov
and
dec
xchg
out
mov
xor
jns
fimull
jns
in
es
or
adc
dec
fcoml
mov
mov
push
jne
test
in
aas
mul
mov
out
add
stc
dec
rorl
jnp
mov
add
mov
lret
push
mov
arpl
push
mov
outsl
dec
pop
mov
outsl
sub
push
jmp
mov
lret
sub
fs
std
dec
xor
mov
pop
gs
les
push
out
xchg
js
dec
xor
jmp
and
icebp
frstor
adc
push
cmp
cmc
imul
gs
mov
mov
push
shlb
add
adc
pop
idivl
mov
cwtl
ficompl
fdivr
push
sub
add
dec
inc
jns
sbbb
jl
cmpsb
mov
sbb
mov
int3
fnstsw
sbb
xor
loop
test
mov
test
iret
lcall
add
or
jge
push
data16
negl
and
fcoms
jae
push
dec
cmp
dec
mov
push
scas
lds
mul
push
inc
fimuls
sbb
mov
cmp
in
test
add
cmp
cmp
lds
jg
jmp
adc
lret
notl
stos
jns
pushf
jbe
stc
int
xcrypt-cfb
cmpsl
movsl
or
rcl
imul
lods
sar
cmpb
xor
cmp
sbb
out
add
and
je
xchg
out
sub
push
cmp
fstps
repz
xchg
xchg
test
jl
xchg
fsubp
sti
sub
xchg
sbb
test
in
test
imul
mov
cmp
lcall
test
jnp
push
inc
test
xchg
dec
ds
out
loop
mov
mov
xor
clc
ljmp
cmp
ljmp
je
xor
fwait
add
test
pop
add
movsb
dec
push
inc
or
jp
inc
data16
and
xchg
repnz
pop
stc
fwait
adc
cmpsl
shll
hlt
popf
mov
add
subb
jne
js
adc
cmpsl
movsl
adc
popf
mov
fisubs
mov
cmp
mov
sti
testb
lock
fadds
lret
ss
pushf
lcall
int
jne
or
fs
push
add
rcl
push
jle
mov
rorb
push
sbb
nop
pop
ss
stos
jecxz
int
jno
cmp
loopne
subb
int
mov
jmp
xchg
adc
aad
jnp
mov
lea
adc
mov
jecxz
mov
test
jle
int
in
out
bound
xor
lock
inc
xchg
dec
ljmp
push
push
daa
andb
mov
div
push
add
mov
cmp
clc
mov
xor
scas
pop
mov
push
or
and
orl
mov
ret
sub
inc
xchg
or
int3
xchg
mov
fxch
call
xchg
movsb
dec
arpl
sub
mov
call
push
sbb
stos
pop
xor
dec
outsl
jecxz
je
nop
stc
xchg
xchg
adc
xor
push
pop
das
jmp
pushf
js
popa
inc
lret
cmpsb
mov
add
sub
mov
ret
adc
xchg
add
out
lret
push
add
ljmp
into
mov
insb
jns
leave
push
pop
cwtl
xchg
sahf
sub
stos
sub
out
or
rcr
pop
xchg
popa
pop
repnz
adc
popf
int3
outsb
sub
sub
inc
lea
jmp
mov
addr16
xor
adc
pop
je
testl
iret
push
lock
fbld
adc
loopne
in
fs
xor
lret
mov
outsb
mov
jmp
sbb
fisttps
xor
xor
add
add
sbb
cmp
sub
rcl
adc
jp
sbb
jp
adc
jae
in
iret
dec
add
jbe
mov
add
movsb
jnp
mov
rcrb
mov
sub
jo
aam
cmp
xlat
xchg
fcmovnu
fiaddl
push
mov
ret
je
pop
aas
sub
cmp
sti
bound
and
jne
fldl
and
jbe
out
or
std
add
cmp
js
add
fstl
and
popa
mov
sbbl
or
popa
das
cmp
jbe
inc
fstp
cmc
je
pop
push
jle
lret
sti
xorb
test
inc
lea
call
fcmovne
in
ds
cmp
cmp
pop
mov
mov
cld
xchg
jne
pop
rolb
mov
jg
adc
daa
rcrb
repnz
fs
adc
ja
and
push
push
ljmp
sbb
pop
jo
inc
cmp
scas
push
pop
cmp
push
cmp
or
sti
stos
xlat
ljmp
dec
push
mov
mov
ret
ret
xor
xchg
mov
xor
jle
pop
stc
dec
mov
into
enter
sbb
inc
adc
jb
lret
sbb
push
cltd
pop
test
mov
stc
pop
xor
lret
sbbb
stos
adc
sub
sbb
into
movsb
fidivl
mov
movsl
in
sbb
mov
jmp
mov
data16
roll
test
fcmovnbe
sbb
pop
not
shll
int
push
sub
lea
fs
out
mov
push
cwtl
fimuls
fmulp
rcrb
inc
push
test
stc
pop
sahf
cli
js
outsl
cltd
dec
cmpsl
gs
add
in
and
sub
and
decl
inc
pop
shl
xchg
adc
pop
dec
add
jp
pop
sahf
inc
sub
push
pop
les
xchg
mov
daa
jb
addr16
adc
sbb
xchg
fidivl
mov
dec
push
lahf
sbb
pop
mov
int
lea
sbb
test
xchg
ljmp
add
dec
mov
daa
mov
sbb
daa
cmpsl
push
sar
xor
cmp
mov
or
adc
cmp
stos
movb
push
pusha
jae
lahf
mov
or
imul
sub
fists
pop
cmc
mov
push
cmp
cltd
pop
das
push
add
aas
sbb
stos
inc
ret
daa
pop
mov
jb
xchg
cmp
rolb
dec
cmp
xchg
sub
mov
je
xor
or
out
or
and
cltd
mov
inc
push
aas
inc
push
sbb
inc
decl
inc
jmp
xchg
fbld
inc
mov
push
sbb
add
fwait
push
pushf
stc
popa
dec
mov
clc
scas
dec
xchg
inc
pop
sbb
les
pop
pop
lds
enter
les
xchg
scas
pop
loop
hlt
pop
dec
cmp
mov
dec
push
sbb
rolb
and
sahf
or
dec
movsl
movsl
mov
and
mov
out
and
add
or
pop
out
sub
fildl
sub
mov
sbb
pop
lcall
mov
lahf
mov
insl
and
nop
jge
adc
inc
gs
cmc
pusha
xlat
add
jge
jmp
sub
mov
in
or
xor
pop
rorb
push
adc
test
xor
into
push
leave
loopne
inc
es
add
ja
scas
and
or
xchg
insb
mov
push
pusha
in
lret
cli
repnz
hlt
adc
mov
popf
push
sub
adc
mov
dec
outsl
push
jbe
mov
add
subb
or
mov
xor
movsb
test
ds
cmp
sub
fdivrs
dec
mov
pop
cmp
cmp
inc
jge
mov
xor
scas
or
mov
pop
jns
push
hlt
aam
cltd
jb
fdivl
mov
fdivl
inc
cmp
jae
outsb
addb
stc
mov
imul
xchg
lds
push
push
dec
xor
aaa
or
popf
inc
ret
cwtl
add
fldenv
sbb
out
ret
ret
ljmp
push
and
xchg
and
rcpps
cmp
pop
fidivl
sbb
pop
out
mov
ret
pop
rorb
jecxz
hlt
or
and
lea
dec
mov
mov
icebp
xor
dec
fcompl
jmp
out
andb
or
gs
cld
fwait
xchg
shlb
push
cmp
mov
or
ds
mov
test
cltd
cmp
mov
stc
mov
ret
jno
sbb
add
into
xchg
mov
cwtl
ja
xor
inc
inc
mov
aam
aad
sub
mov
inc
call
mov
pop
cmp
xor
adc
push
int3
in
lods
cmp
adc
push
shl
fcoms
faddl
sbb
pop
scas
ffree
add
shl
adc
push
loop
pop
lock
repnz
or
ret
out
mov
xor
cmp
outsl
addl
jl
stc
jge
xchg
ljmp
cmp
and
in
xchg
sub
aas
int3
int
aas
es
es
out
mov
dec
jecxz
imul
pop
negl
enter
add
rorb
in
popf
fcoml
mov
lcall
cmc
rol
adc
or
push
cmp
cmp
outsb
or
dec
mov
and
or
jge
add
dec
mov
mov
dec
addb
pop
mov
jl
fdivs
inc
adc
gs
jle
test
push
sti
dec
or
addr16
lds
lahf
mov
jnp
rcrb
lds
mov
mov
ds
xlat
sarb
jb
jle
hlt
arpl
dec
jbe
push
or
mov
jle
sub
out
stc
pushl
pop
sbb
int
repz
adc
push
lea
popl
xchg
xchg
xchg
rclb
push
cld
fs
pushf
stos
pop
repz
movsl
sbb
ja
clc
dec
dec
xchg
mov
mov
mov
rcrl
jle
fdivl
aaa
pop
pop
out
push
popa
cmp
push
sub
jmp
testb
mov
clc
mov
adc
inc
jne
xor
ret
mov
push
into
inc
cmp
dec
test
dec
daa
sub
imul
mov
shlb
mov
cmp
mov
sahf
jp
lds
aam
test
fists
xchg
xchg
add
mov
xor
scas
int3
ja
mov
lds
or
scas
pushf
mov
cwtl
addr16
cli
arpl
addr16
sbb
fxam
lea
dec
popf
fucom
sub
or
fcomps
mov
imul
pop
cltd
mov
sarb
loopne
push
test
loop
or
xchg
mov
adc
lret
aaa
aad
jmp
gs
stos
push
leave
dec
xchg
mov
out
push
aad
repz
dec
shrb
jae
cld
or
aaa
fldt
pop
push
lahf
mov
cmc
in
add
cmc
and
jmp
adc
in
test
popfw
sbb
xor
fnstenv
mov
ficoms
mov
rcl
arpl
ja
sti
lods
insb
xlat
xor
sbb
inc
push
mov
push
test
fs
xor
pusha
add
jno
inc
nop
int3
jge
pop
cmp
imul
pusha
test
push
xchg
pop
fistpll
fisttpl
add
shrl
pop
cmp
adc
pop
inc
lods
inc
or
subl
fidivrl
lahf
scas
xchg
addr16
dec
in
inc
out
jb
xor
sarb
mov
jo
push
mov
movsb
dec
sbb
inc
bound
rolb
push
mov
shlb
mov
jno
dec
pop
ret
notb
cmp
pop
dec
push
idiv
sbb
add
loope
lds
pusha
arpl
xchg
mov
pop
ret
mov
dec
pop
orb
mov
xchg
mov
lcall
mov
insl
ss
add
pop
push
mov
iret
imul
xchg
jmp
sbb
pop
xor
push
xor
mov
sarl
xorb
aaa
test
cmp
loop
or
fimuls
add
and
loop
xor
ja
and
jecxz
push
ja
movsl
cli
ja
or
and
es
dec
ficoml
insl
inc
into
dec
mov
push
mov
pop
pop
cmp
scas
scas
xchg
xor
dec
jns
out
imul
xor
ja
or
in
cmpsl
mov
pop
aam
sbb
cmp
lods
mov
out
xor
sub
mov
mov
and
repnz
mov
add
jmp
sahf
jae
jbe
mov
icebp
popa
test
nop
in
sahf
imul
push
lods
std
pop
sbb
enter
imul
in
jno
mov
cmp
rcl
inc
add
cmpsl
sub
stc
dec
push
adc
rcrb
sbb
sbb
or
sub
loopne
jecxz
stos
push
aaa
adc
movsl
daa
lods
mov
and
lea
or
dec
into
or
cmc
pop
xlat
imul
enter
neg
push
repnz
movsb
lods
push
xchg
dec
adc
cs
inc
push
xor
stc
jg
jnp
mov
or
dec
notb
sub
out
je
xchg
je
jecxz
pop
popa
jo
movsl
sub
jns
and
daa
mov
mov
scas
jbe
adc
shr
inc
hlt
cmp
sub
or
mov
or
lret
insb
jns
sub
mov
and
dec
and
movsl
movsb
sbb
movsb
mov
out
ss
inc
xor
push
adc
lcall
add
aam
pop
lds
enter
push
pop
hlt
popf
ret
push
jns
movb
dec
pop
pushf
xchg
xor
mov
cmp
push
les
inc
inc
sub
imulb
and
mov
mov
sub
test
cltd
dec
jle
in
imul
mov
push
movsb
dec
pop
adc
out
pop
sbb
sbb
lret
stc
mov
cmc
fisttpll
jg
xchg
mov
scas
arpl
push
insl
je
mov
lds
mov
dec
sbb
cli
or
pop
fsubr
xchg
mov
js
xchg
sti
pop
shll
ljmp
push
idivl
ljmp
in
repnz
push
add
xor
out
push
clc
jns
or
test
stos
mov
mov
mov
sbb
fcmovb
adcb
add
sub
and
fsubr
in
jmp
and
inc
popf
mov
dec
or
mov
daa
in
dec
push
popa
lahf
ljmp
inc
ds
push
mov
push
inc
fsubrs
imul
test
pop
xchg
dec
jg
adc
sub
adc
pop
arpl
pop
jns
mov
mov
hlt
cli
adc
icebp
ljmp
mov
clc
or
insl
out
dec
dec
scas
push
mov
pop
shlb
sub
ds
mov
std
popf
xchg
out
jns
push
or
dec
lods
dec
mov
pusha
pop
mov
jae
mov
gs
ss
cld
mov
adc
mov
lahf
fildl
sub
notb
mov
divl
mov
fbld
push
mov
js
push
pop
fs
sbb
imulb
mov
test
jnp
sbb
cmp
pusha
lcall
jne
bound
data16
cli
xchg
test
pop
push
jns
mov
sti
arpl
add
jecxz
int
arpl
and
cmp
mov
or
aam
mov
adc
int
add
cwtl
dec
and
mov
pushf
outsl
adc
je
out
add
adc
dec
addr16
mov
lcall
lods
mov
stc
lret
es
roll
fsubl
mov
mov
repnz
les
xchg
sti
or
outsl
inc
xor
incl
jmp
fstl
and
test
cmp
or
aas
rcl
lea
adc
jmp
outsl
gs
push
aas
mov
mov
lret
sub
dec
mov
ret
mov
in
push
mov
cs
jns
lds
mov
lods
pop
xchg
lret
pop
out
pop
orl
jg
scas
xchg
cs
inc
sbb
fisubrl
idivb
jg
ret
lds
std
sub
fdiv
jae
das
gs
in
std
mov
js
fidivrl
out
inc
bnd
fsubrl
mov
inc
fbld
movsb
call
jae
repz
or
xor
pop
in
cmpsl
imul
dec
push
adc
jns
std
mov
push
loop
add
sbb
add
clc
lret
cmp
les
pop
divl
jl
xor
mov
pusha
adc
dec
mov
ret
xchg
xor
stc
into
xor
in
insb
je
jp
cmp
cwtl
sbb
jmp
mov
arpl
pop
add
stc
adc
shl
dec
pop
iret
push
fcmovb
cmpsl
shrb
jl
movsl
push
xor
jb
sti
outsl
cmpsl
adc
xor
push
mov
adc
fs
mov
test
fwait
xchg
adc
lea
adc
js
inc
jo
mov
vcvtsi2sdl
imul
mov
outsl
and
jb
dec
xchg
jo
push
mov
push
push
insl
scas
mov
xchg
int3
jmp
pop
movsl
mov
pop
jmp
cli
incl
mov
push
cld
leave
xchg
sbb
mov
loope
popf
shlb
xchg
lock
movsl
adc
test
lahf
sub
adc
ljmp
lret
stos
sbb
daa
xlat
and
push
and
ret
dec
dec
mov
data16
pop
jno
lahf
hlt
scas
inc
jno
addr16
mov
pop
test
xor
sti
adc
call
cld
aaa
arpl
ss
mov
and
jb
jmp
xor
cmp
lea
jl
lea
cmpsb
xor
mov
shr
pop
adc
mov
es
cmpsb
mov
call
aam
fwait
imul
mov
jmp
sub
adc
adc
lods
mov
push
mov
mov
int
aad
leave
jmp
ja
inc
cmp
xchg
jbe
push
adc
and
jns
sbb
push
cmp
cld
lds
mov
xchg
or
xchg
mov
add
lret
push
pop
stos
xchg
test
repz
push
nop
int
out
push
jecxz
pop
arpl
sahf
je
ret
cmp
ds
cltd
mov
mov
xchg
mov
adc
mov
out
gs
es
jg
xchg
inc
mov
adc
xchg
inc
out
imul
add
xchg
mov
inc
mov
scas
rol
mov
ds
sbb
mov
mov
mov
rorb
jnp
inc
rcrb
jle
sub
iret
ret
sbb
jns
dec
push
loope
or
pop
or
divb
inc
pop
cmp
aad
fsts
mov
aaa
js
les
fsubrs
aam
inc
fcomp
test
aam
mov
daa
cld
addr16
push
mov
outsb
mov
cmp
mov
mov
mov
pop
pop
icebp
leave
int
push
sbb
mov
ljmp
out
enter
xor
add
movsl
gs
in
jl
jno
jg
lods
sub
dec
stc
cmpsb
push
int3
inc
jmp
adc
clc
ret
insb
and
cwtl
xchg
jns
add
mov
hlt
pop
jle
and
mov
stos
lock
lods
or
jae
add
sbb
lahf
push
aam
pop
inc
sbb
outsl
in
adc
adc
out
movsw
jp
in
icebp
xor
add
jge
sub
ljmp
jb
xor
inc
jae
scas
xchg
jmp
xlat
add
mov
test
fadd
cmp
ret
aad
filds
mov
subb
fnstsw
js
add
sub
sbb
cmpsb
xor
cs
scas
mov
aaa
lret
imul
sub
and
jp
adc
inc
imul
in
jae
nop
add
xlat
roll
adc
jp
fsubrl
popa
pushf
cli
cmp
fwait
test
mov
scas
jns
nop
jge
push
sbb
sbb
adc
jnp,pt
scas
and
xor
sbb
mov
arpl
shll
sub
inc
cld
and
cmpsb
push
fsub
sbb
xor
call
sbb
movsb
cmp
sbb
dec
mov
push
push
mov
inc
push
mov
pop
add
popf
add
inc
xor
shlb
cwtl
pop
pop
push
pushf
mov
cmp
nop
mov
adc
call
test
bound
xchg
scas
xor
xchg
aas
into
rcrl
inc
fwait
push
shlb
push
mov
sbb
lock
out
cld
mov
stc
test
mov
daa
cmpsl
repz
cs
xor
imul
test
aas
sub
dec
insl
add
pop
mov
xor
dec
xchg
ss
in
fwait
test
loope
sub
divl
popf
and
push
sbb
mov
xor
call
mov
es
movsb
outsl
dec
sbb
pop
or
and
mov
sbb
popa
push
jbe
ljmp
ret
sub
pop
test
movl
iret
dec
inc
push
mov
mov
pop
pop
push
mov
mov
jne
loope
push
and
xchg
in
cs
jne
js
mov
push
xchg
es
scas
fisubs
mov
push
pop
fisttpl
push
lea
dec
popa
push
rcr
xchg
or
sub
gs
sub
mov
mov
out
rorb
pop
test
outsb
xor
enter
push
pop
jecxz
ret
add
lahf
js
call
lcall
inc
clc
push
jg
std
sbb
leave
mov
test
push
or
repnz
xchg
movsb
call
rol
lret
je
mov
mov
cmp
enter
loope
popl
dec
icebp
aad
adc
mov
and
cmp
ret
inc
inc
repz
fimuls
xchg
sti
push
stos
sub
movsl
add
test
out
push
test
sbb
into
out
sti
jl
xor
shlb
popf
scas
jmp
push
add
es
sbbb
jl
fisttps
bound
imul
roll
test
sahf
lods
xor
out
or
dec
jno
mov
add
adc
push
das
inc
mov
dec
cmp
dec
sub
shrl
pop
xor
lea
push
arpl
push
test
inc
out
jp
mov
cld
lds
loop
pusha
mov
out
cs
test
stos
into
aam
adc
call
in
mov
cmp
testl
push
int
jle
sub
daa
cltd
movsl
xchg
mov
aam
cmp
sub
cmp
out
sub
jge
push
jg
fistpl
in
fs
sbb
jge
sbb
movsl
cmp
jmp
movsb
in
xchg
mov
sub
loope
repnz
ret
sub
xchg
add
pop
jecxz
cltd
xchg
mov
add
inc
mov
in
fisttpll
orb
mov
pop
jl
cs
mov
xor
pop
icebp
outsb
aam
sahf
sbb
rcrb
jns
fstps
repnz
mov
pop
fcmove
add
dec
pop
jnp
mov
int
jno
adc
push
fisttpl
cmp
orb
stos
leave
pop
lahf
adc
or
movsb
xchg
pusha
sbb
outsl
outsl
pop
enter
cmp
clc
xor
test
clc
mov
mov
je
xchg
adc
mov
movsb
xor
xor
out
inc
push
into
and
push
dec
dec
jmp
and
int3
hlt
xor
fnstcw
push
fistpl
mov
inc
xchg
je
cld
fsubs
cld
pop
sub
push
cmc
popf
ja
push
sti
adc
pop
jmp
sbb
push
mov
insl
xor
rcrb
mov
cmc
popf
mov
into
jno
inc
lods
fbstp
mov
and
outsl
xchg
sbb
dec
cwtl
cld
aas
adc
int3
das
cmp
mov
pop
lods
mov
adc
xchg
out
insl
cmp
es
lahf
je
in
mov
and
fiadds
int3
int
jnp
xchg
sarl
push
insb
pop
push
call
gs
jno
lret
mov
inc
stc
fiaddl
popf
dec
jl
out
call
cmp
cmp
push
lock
test
clc
in
dec
jae
and
push
mov
jmp
xchg
in
dec
stos
cmp
xchg
xor
sub
mov
xlat
push
enter
mov
jne
cmp
pop
dec
sub
cmpb
add
jnp
sbb
fucom
ficompl
jle
or
cmp
insl
and
std
xchg
lea
stos
mov
pop
dec
mov
jo
and
jnp
out
data16
jno
pushf
jnp
cbtw
cmp
pop
ss
and
fistl
pop
push
sbb
cmp
imul
mov
mov
mov
sbb
dec
cwtl
std
cltd
in
jecxz
inc
mov
insl
loopne
xchg
jmp
ret
pop
cmp
fs
aad
cmc
dec
push
das
jle
push
mov
jae
ds
sbb
mov
iret
aad
into
push
adc
sbb
addr16
inc
test
mov
lahf
lret
xor
push
pushf
cltd
leave
or
mov
mov
imul
jo
pop
pop
xor
and
xor
arpl
call
fimull
mov
jge
mov
inc
jge
gs
push
jg
pop
std
or
adc
xchg
xchg
subl
imul
sbb
xchg
jae
repnz
push
cmp
mov
mov
ret
bound
sbb
aaa
xchg
fsubr
and
int
outsb
ja
jne
xchg
mov
jmp
int3
test
dec
int3
outsl
mov
pop
in
jl
jmp
xor
dec
and
and
out
xlat
mov
mov
xchg
stos
push
xchg
stos
cli
cwtl
mov
lods
jns
pop
mov
and
in
add
clc
cmp
inc
insl
push
xchg
inc
ror
jno
mov
cld
cltd
mov
adc
mov
shr
fcoml
pop
cmp
inc
mov
lcall
sub
les
mov
ja
repz
mov
scas
std
outsl
mov
xor
xor
cmp
jge
sbb
add
jle
cs
sarb
sub
es
jno
jns
loop
xchg
fiadds
in
ror
sbb
and
mov
jnp
jbe
ficoms
push
fcomps
pop
xor
test
jo
out
or
lret
fst
std
fldl
lcall
ja
movsb
lcall
mov
mov
add
int3
xchg
mov
nop
xchg
xchg
js
out
out
dec
shl
inc
sahf
xor
push
addr16
jae
rclb
mov
sub
je
inc
jp
icebp
ret
mov
lea
repz
enter
cmp
std
es
dec
fldenv
pushf
negl
aaa
mov
psllw
push
and
adcb
xor
loopne
data16
inc
mov
pop
loopne
push
xchg
cmpsb
push
jae
or
and
sub
movsb
and
lock
inc
sbb
and
jmp
jmp
jno
imul
pop
cli
mov
hlt
popa
out
sub
mov
fs
sahf
popa
loopne
fbld
jl
mov
adc
pop
fiaddl
ss
aaa
pusha
push
mov
orb
sbb
cmpsb
in
mov
ja
jge
jno
and
xchg
mov
jmp
pushf
out
inc
mov
cmpsb
sbb
call
addr16
mov
jp
std
mov
pop
call
popf
sbb
imul
pop
or
dec
movsb
lds
inc
jbe
outsb
sbb
sub
pusha
outsb
ficomps
add
in
mov
pop
push
push
aaa
xor
inc
idivl
rclb
sub
sbb
fildl
mov
out
push
xor
push
sbb
pop
push
cmp
lret
jnp
inc
mov
adc
xorb
sbb
push
inc
push
arpl
inc
sub
leave
xchg
sbbb
pop
lods
and
int
xchg
sbb
mov
std
add
popa
aad
push
in
mov
sbb
sbbb
xchg
leave
pop
enter
in
xor
pusha
push
call
xchg
stc
repz
mov
mov
leave
stos
mov
push
pop
int
andl
and
lahf
dec
aam
rorl
adc
mov
jg
adc
iret
imul
fisttpll
mov
cmp
mov
xchg
xchg
inc
sahf
subb
jne
xchg
and
mov
or
jecxz
mov
mov
out
lea
cltd
jp
adc
mov
pop
ss
lea
push
jmp
arpl
inc
pop
xchg
mov
pop
lahf
movups
mov
in
popa
das
sub
imul
in
mov
xlat
mov
cmp
fldt
sbb
lods
lds
add
sti
movsb
aas
sbb
jb
outsl
je
pop
insl
js
outsb
fdivs
pushf
lcall
ss
outsb
fnstenv
loope
inc
lds
shl
std
mov
mov
addr16
in
mov
in
push
jbe
das
lods
iret
cmp
pusha
jmp
push
ja
fldenv
adc
xchg
int3
lock
cmp
xchg
adc
cmpsl
or
lds
jnp
inc
stos
pinsrw
push
or
into
xchg
mov
lret
mov
mov
pop
imul
inc
mov
scas
test
mov
lret
and
mov
lods
xbegin
lret
push
aas
push
enter
and
add
aas
add
adc
mov
jb
mov
jbe
or
push
cwtl
or
jnp
sub
repnz
mov
push
cmp
nop
mov
push
cmpsb
mov
out
cmpsb
sub
shlb
cli
outsb
jne
ja
adc
adc
or
sub
push
loope
scas
mov
test
sbb
bound
imul
je
mov
jae
adc
bound
jp
or
add
mov
sub
aad
out
xor
ljmp
hlt
add
sbb
pop
jb
mov
rcl
repz
pop
jecxz
push
sub
adc
sbb
pop
addr16
inc
ret
in
mov
push
loopne
inc
out
shrl
mov
sub
mov
aam
fwait
pop
loope
xlat
in
cltd
pop
push
xor
dec
insb
andl
pop
gs
xchg
push
js
inc
xchg
in
jne
mov
push
or
mov
jmp
fsubs
mov
sbb
ja
sar
xor
cmp
int3
sahf
mov
mov
jae
jg
in
sarb
loope
sbb
xchg
jb
ds
xchg
imul
or
push
cmc
pop
pop
dec
sub
add
jg
pusha
mull
mov
out
pop
pushf
ja
cmp
cmp
jp
rcrl
sbb
ja
push
mov
jmp
mov
and
push
add
test
jno
je
jo
inc
mov
adc
cmc
into
pop
adc
mov
xchg
jge
mov
add
or
addr16
cmp
cmp
pop
dec
pop
xor
sbb
add
js
div
mov
repz
pushf
inc
aam
mov
and
sbb
inc
add
or
mov
sub
xor
ficompl
cmpsl
add
gs
aas
bound
push
pop
test
mov
xchg
inc
and
xor
adc
mov
pop
sbb
mov
pop
xchg
cltd
test
ds
pushf
sbb
xchg
cltd
sti
mov
adc
xor
xor
into
push
test
int
iret
aam
int
cmp
je
lahf
jb
aaa
push
ret
mov
fdivrl
and
jns
xor
and
in
adc
mov
push
cs
enter
lcall
jge,pt
std
inc
dec
mov
push
int3
int
sarb
inc
pop
test
or
mov
sbb
fwait
imul
push
push
mov
cmp
inc
data16
mov
and
push
icebp
and
mov
sahf
cwtl
add
jg
adc
or
hlt
cmp
lock
dec
or
repnz
cltd
adc
ljmp
or
push
push
movsl
shl
jp
dec
pop
fnstsw
ljmp
scas
lods
inc
sti
xchg
mov
mov
push
dec
xorl
rolb
sub
nop
push
sbb
add
lock
mov
cmp
lcall
std
mov
scas
mov
aas
jge
mov
xor
movsb
xchg
stos
cmpsb
inc
outsl
cld
call
cmpsb
dec
ret
rcll
adc
test
mov
inc
xorb
jl
sahf
mov
cli
xchg
and
cwtl
push
push
jno
push
xchg
sbb
mov
ss
add
push
pop
lea
xor
pop
out
movsl
test
xlat
loope
daa
cmp
aam
repnz
ret
xchg
mov
xchg
cwtl
xchg
test
mov
int3
rcr
std
les
xchg
jno
mov
or
jae
fmull
add
stc
sub
lea
sbb
mov
iret
or
mov
sbb
sbb
mov
mov
pop
arpl
int
dec
cli
or
adc
pop
rorl
jge
divb
dec
imul
xor
pop
sahf
leave
push
push
dec
cmpsl
andl
pop
adc
add
in
movsb
add
sbb
mulb
add
ljmp
ja
test
or
pop
pop
lret
cmc
das
popa
mov
xchg
sbb
mov
adc
and
in
cmp
fwait
xor
loopne
popa
jle
hlt
inc
push
call
jle
enter
xor
add
insb
add
je
mov
xor
inc
sahf
jecxz
outsb
sbb
mov
inc
mov
sub
and
subl
inc
pop
rcll
adc
push
scas
pop
xchg
dec
and
add
data16
add
scas
push
mov
movsl
stc
add
stos
mov
aam
xchg
fnstsw
cmc
fstl
push
movsb
icebp
pop
ljmp
fwait
jno
dec
xchg
stc
add
xchg
cltd
dec
pop
mov
and
sti
int
sbb
in
push
pop
xor
or
add
mov
adc
push
inc
hlt
imull
aaa
ljmp
into
movsb
mov
movsl
aad
ret
leave
enter
sub
add
pop
and
orb
push
sub
jo
xor
sub
mov
add
mov
enter
fstl
aas
add
pusha
loope
pop
and
subl
inc
mov
jo
mov
adc
inc
jp
pop
jge
ss
add
push
mov
nop
cmp
and
fwait
cmp
push
mov
es
sbb
adc
int
iret
jl
loop
and
mov
fisttpl
inc
xchg
mov
and
out
jb
hlt
fbstp
cmpsl
pop
sarb
or
movsl
adc
xadd
dec
clc
inc
aam
mov
and
not
push
pop
jp
insb
sbb
jno
gs
ficompl
inc
push
mov
out
xchg
aam
or
cmp
call
sarl
fdivr
inc
adc
mov
xor
mov
mov
jmp
adc
adc
sbb
lock
dec
inc
cmc
cmpsb
sbb
jg
lcall
stos
xchg
mov
ja
jmp
loop
mov
dec
xchg
das
bound
aam
push
xor
pop
addr16
pop
xor
inc
dec
nop
add
inc
push
pop
fs
xchg
jle
int
or
xchg
mov
aas
add
mov
repz
add
mov
daa
jl
bound
aas
push
adc
or
mov
mov
mov
xchg
mov
push
andb
fstl
hlt
add
test
hlt
into
int3
test
mov
ret
shll
mov
xchg
nop
adc
sahf
shrb
ss
aad
shlb
cs
test
inc
ss
enter
add
sbb
dec
push
outsl
mov
jo
cmpsl
inc
push
je
lcall
push
test
mov
pop
fsincos
add
dec
std
xchg
in
pop
or
cli
std
jo
cmpsl
call
lret
xchg
ds
add
into
das
mov
mov
fnsave
cmp
mov
addr16
xor
or
bound
jmp
pop
xchg
aaa
sub
xchg
xor
inc
and
mov
pushf
insl
out
push
test
jl
orb
sbb
mov
aad
aas
outsb
ljmp
and
mov
mov
jb
loopne
inc
aas
inc
insl
jp
pop
jnp
ds
add
rorb
xor
hlt
call
ret
xchg
jg
lea
and
pop
pop
cmp
inc
mov
mov
xchg
jne
push
push
xor
sbb
adc
sbb
lret
cmp
xor
inc
mov
bound
stos
jae
mov
sbb
xchg
add
jnp
shr
jno
adc
inc
in
jnp
sub
filds
ficompl
sub
cltd
mov
cmp
pop
mov
loopne
cmpsb
ficoms
loopne
aad
in
push
fsubrs
iret
mov
fnstsw
inc
iret
pop
mov
mov
int
xor
dec
rcr
xor
stc
jae
xchg
lret
xchg
pop
jae
scas
sar
loop
push
sub
add
xchg
lret
lock
pop
std
adc
loope
repnz
dec
dec
mov
adc
push
sahf
dec
xchg
das
mov
popf
pusha
inc
jmp
push
or
and
sahf
xchg
mov
out
mov
outsl
call
jmp
jne
test
loope
cli
pop
outsb
mov
aad
mov
cmp
lcall
ret
arpl
jnp
and
sbb
jg
add
adc
push
mov
xchg
push
mov
movsb
add
out
clc
fiadds
lret
pop
aam
xchg
test
js
sub
rorb
ja
fsubl
ficoml
adcl
mov
test
push
push
push
mov
pop
mov
pop
jge
or
popf
push
cld
mov
test
int3
mov
push
ds
bound
insb
inc
inc
nop
adcb
mov
lea
mov
mov
inc
sub
ret
add
mov
addr16
inc
mov
jle
and
cmp
jo
push
cli
or
clc
or
cmp
push
push
fucomip
mov
daa
cltd
xlat
loope
decl
jl
icebp
mov
lahf
leave
jne
inc
and
fcoml
testb
test
push
stos
add
mov
add
fs
aas
sub
es
inc
jo
dec
jmp
scas
hlt
mov
add
sarl
mov
dec
jno
jp
sub
in
inc
movsl
in
iret
test
enter
lahf
lea
jae
test
cmp
dec
pop
lret
mov
jo
testb
dec
cs
stc
sub
std
or
jecxz
fstpt
sarl
inc
or
ficompl
ljmp
sub
cltd
fistps
mov
or
adc
call
mov
mov
mov
stos
enter
fs
dec
xchg
scas
inc
fisubs
lds
push
mov
mov
test
sbb
test
es
mov
ljmp
cmpsl
dec
fstl
pop
xchg
in
loopne
fmul
push
imul
and
sbb
mov
sbb
sarl
repz
xor
notb
stos
mov
mov
xchg
mov
fwait
int3
and
cmpsb
mov
mov
mov
fs
enter
ret
mov
jg
xchg
jmp
and
cmp
mov
mov
pop
or
das
push
cltd
jge
dec
sub
or
dec
cmp
push
add
adc
scas
cmp
pusha
bound
xorb
add
ret
pop
push
sbb
push
xlat
stos
sarl
mov
jl
incl
rol
adc
adc
xchg
fucomi
aaa
xorb
ret
sbb
fildl
jp
fcmovbe
and
stc
xor
xchg
repnz
rcrb
sbb
popf
subb
mov
popf
xchg
imul
push
push
outsb
and
cli
outsb
jge
scas
notb
lret
add
dec
xchg
das
dec
iret
outsl
add
movsb
gs
or
mov
int3
sahf
cwtl
xlat
ja
push
lods
leave
movsb
dec
or
cmp
pop
add
fimuls
xor
mov
xor
sub
sti
les
repz
inc
adc
or
in
or
sbb
int
mov
push
xor
sbb
test
call
clc
andl
sub
stos
cmp
xchg
cmp
dec
pop
loope
adc
loop
scas
sbb
ret
fcoml
ret
div
mov
jecxz
js
into
lds
mov
xchg
insl
aaa
xchg
arpl
sbb
inc
pop
scas
fs
pop
mov
sti
sub
sub
imul
xor
popa
adc
roll
and
sub
lret
and
lcall
xchg
cltd
sbb
aad
sarl
mov
out
scas
push
popf
ret
mov
enter
inc
xor
xchg
inc
std
idivb
repnz
sti
pop
xor
fstpl
js
xchg
xchg
ja
jl
stc
cmp
das
dec
mov
fisubl
test
cmp
ja
mov
bound
imul
xchg
xchg
pop
in
scas
adc
lods
daa
xchg
xchg
push
mov
inc
mov
test
and
xlat
add
pop
push
pop
fs
imul
push
out
inc
iret
adc
sub
sbb
adc
sub
pop
sub
cli
and
outsb
push
test
sub
lahf
sbb
repz
rcrb
dec
pop
pop
sub
shll
add
fidivl
clc
rcrb
pop
lock
outsb
shl
insl
add
mov
dec
test
rolb
add
shrl
enter
pop
mov
fld
add
outsl
xor
orb
cmpsb
and
inc
pushf
out
lret
testb
gs
pop
in
pop
imul
xchg
cmp
fiaddl
cmpsb
xor
jp
jmp
push
or
orl
stos
adc
mov
mov
mov
push
lods
sbb
cs
add
or
inc
stc
jmp
xlat
neg
jns
es
xchg
jl
push
mov
and
cwtl
push
into
call
leave
cmp
mov
mov
repnz
mov
repnz
xchg
idiv
cs
insl
sbb
test
sub
shll
adc
out
jmp
push
mov
jge
push
fsubs
fisubs
push
stos
test
add
shrb
gs
mov
mov
aaa
push
add
or
sbb
test
mov
jp
aam
mov
xchg
addr16
mov
push
and
mov
rcr
cld
pusha
jae
xchg
dec
sbb
out
sbb
add
and
jl
dec
pop
mov
push
inc
loop
and
push
daa
push
lods
mov
enter
mov
mov
in
lcall
iret
dec
inc
pop
loope
adc
dec
aaa
stc
popa
aam
add
fistpl
ret
xchg
cltd
add
ljmp
or
lret
sbb
xor
add
jnp
pop
mov
into
jae
xchg
cli
aam
or
cltd
fwait
roll
loop
push
push
sub
fmul
sub
jae
xchg
xor
adc
xor
int
adc
mov
in
lahf
push
mov
inc
pusha
sub
jecxz
sbbb
jge
mov
sub
or
adc
adcl
lret
jmp
jo
mov
ds
sbb
mov
mov
lahf
jmp
and
xor
sub
mov
in
adc
fmul
dec
cmc
mov
mov
mov
and
in
invd
pop
and
mov
xor
scas
bound
in
nop
ja
popf
adc
loope
xor
xor
lods
push
clc
sub
jns
lahf
sub
int3
xor
loope
aad
ficoml
movsb
pop
mov
stos
and
jnp
out
out
rcl
jg
adcl
decl
push
loope
pop
xchg
jmp
sbb
add
fdivrs
nop
push
addr16
pop
rolb
xchg
das
imul
lahf
push
pop
xor
pop
rcl
mov
negl
push
pushf
and
or
std
aad
mov
mov
adc
jbe
orb
into
ds
lods
jb
mov
loop
lret
mov
sbb
test
je
daa
add
cmpsl
xor
icebp
add
mull
push
imul
out
or
add
sub
mov
cmp
ljmp
fisttpl
adc
push
movsb
sub
inc
mov
sar
adcl
add
sbb
fld
mov
jns
stc
stos
jo
and
sub
and
lock
inc
xlat
pop
stc
sbb
sbb
imul
mov
push
push
outsl
cmpsb
imul
jae
and
lods
sub
aad
or
lahf
ja
ja
cmp
cmp
sahf
icebp
call
cmp
or
pop
pop
subl
js
int
mov
fucomi
mov
outsl
rorb
nop
dec
pop
inc
scas
mov
inc
pop
pop
or
jp
or
addr16
sbb
dec
or
addl
xor
out
mov
mov
add
add
jge
cmp
fsubrl
orb
mov
fistl
xchg
outsb
scas
test
pop
mov
pop
iret
lret
pop
mov
adc
movsb
hlt
inc
cmpsl
jmp
lret
inc
loope
fs
jg
sub
pop
lret
mov
and
lock
dec
pusha
test
mov
shl
shlb
xor
dec
rcrb
inc
scas
repnz
xchg
pop
push
les
pop
scas
ror
lock
aaa
pop
sub
push
sbb
rcrb
mov
mov
pop
loope
loop
rol
and
push
stos
les
je
orb
orb
xor
sbb
fscale
mov
dec
xlat
and
cmpb
fwait
jno
mov
or
and
cmpl
out
inc
imul
mov
add
mov
or
js
icebp
icebp
xchg
pop
add
jl
fdivr
xchg
inc
xor
dec
scas
bound
addb
std
aas
adc
mov
test
and
pop
stos
or
dec
shr
out
push
adc
mov
mov
mov
push
sub
xchg
cltd
jb
mov
dec
add
pop
out
jecxz
and
fstl
loop
and
divl
dec
filds
insb
shl
sub
sbb
xor
bound
mov
repz
cmc
scas
and
add
lahf
and
push
lcall
push
push
xchg
mov
adc
lcall
xchg
imull
inc
or
outsl
ljmp
cli
cmpsb
movsl
inc
daa
inc
aad
lods
es
sbb
and
lea
jmp
xor
mov
mov
jns
fidivrs
cmc
jmp
pop
cmp
js
jl
xchg
xchg
cmp
mov
dec
add
jecxz
fadds
dec
add
rolb
cmp
pop
jle
out
xor
or
and
aam
test
dec
clc
in
scas
cltd
inc
push
addb
xchg
inc
lret
pop
mov
add
pop
xchg
lcall
sbb
jae
inc
cltd
xor
rolb
cwtl
mov
cs
clc
out
push
fidivrs
mov
icebp
sahf
shl
cmp
aam
insb
sti
xor
and
and
inc
test
ljmp
pop
push
gs
sahf
mov
subl
push
mov
xchg
cmp
or
pop
jl
cmpsl
cmp
push
push
iret
leave
dec
or
daa
fildl
gs
insb
adc
add
outsb
cli
pop
xor
adc
xor
adc
stos
cli
mov
mov
or
sbb
lea
sub
aam
fsubr
inc
movsl
fstl
imul
imul
int3
lahf
or
test
lcall
stos
jns
jle
into
lret
xchg
add
adc
icebp
scas
out
pushf
and
arpl
jmp
xor
ds
andb
xchg
or
sub
insl
ja
loope
mov
shrl
dec
cmp
dec
adc
jle
std
pop
mov
mov
enter
or
ja
cmp
sbb
in
push
xlat
adc
xlat
lahf
push
mov
test
jbe
sub
mov
stos
dec
inc
cmpsl
push
mov
pop
xchg
frstor
xor
in
cmpsb
dec
mov
pop
add
sub
cmpsl
stos
xchg
out
ret
daa
and
hlt
aaa
mov
push
aam
push
addl
negb
addr16
clc
insl
push
inc
mov
add
les
inc
sbb
jecxz
repnz
mov
adc
adc
mov
sbbl
mov
mov
mov
inc
inc
mov
sbb
xchg
inc
mov
lods
sub
inc
push
mov
push
cmpsl
movsl
push
push
add
in
fcoms
lcall
mov
mov
adc
sub
popf
dec
insb
movsl
shrb
mov
sub
cmpsb
clc
aad
adc
pop
add
add
aas
daa
inc
cmc
decb
dec
adc
jecxz
shll
js
rcrb
or
mov
xor
inc
mov
enter
lahf
mov
movsl
sub
rcll
mov
add
inc
pop
lock
lahf
std
xor
xlat
push
add
movb
push
push
sbbl
xchg
aaa
shll
xchg
and
mov
ja
dec
mov
cs
xor
mov
cmpsb
cmp
imul
ret
dec
push
mov
lcall
shrl
mov
shr
cmp
imul
loop
xchg
cltd
or
cmp
sub
and
test
cs
fwait
mov
pop
jge
mov
rcll
aam
testl
sbb
cs
sti
mov
and
push
pop
pop
scas
pop
and
in
add
sbb
inc
add
ja
loope
jl
pop
xor
inc
push
jmp
jbe
and
fwait
lds
mov
pop
mov
clc
test
xlat
sbbl
mov
dec
cmp
mov
data16
mov
shlb
or
jge
js
xchg
xchg
mov
and
or
add
loop
aas
movsb
sub
rcll
xchg
iret
xchg
int3
xor
dec
mov
mov
clc
pusha
xor
add
pushf
fnstenv
jl
dec
lock
sub
push
push
xchg
das
and
dec
test
cmp
jne
popf
mov
dec
mov
fnstsw
pop
sub
mov
cmp
jecxz
dec
xchg
jnp
sub
in
test
xchg
jb
wbinvd
gs
cmp
ret
inc
jno
add
shr
cs
fwait
push
jecxz
pop
jle
adc
sti
inc
in
rolb
push
dec
jp
stc
int3
jg
push
ds
mov
push
cmpsb
add
addl
cmc
jnp
cmp
sbb
pop
sub
mov
sbb
out
jmp
lods
leave
or
stc
sub
test
and
mov
mov
fadd
popa
lods
inc
mov
int
lret
xchg
hlt
xchg
mov
mull
sti
mul
sbb
les
in
andl
ja
xchg
out
ds
jle
push
cmpsb
movsl
mov
cmp
and
jb
fxam
xchg
mov
mov
pushf
clc
push
daa
into
cmpsb
jg
mov
jne
arpl
jp
or
out
rorb
fnsave
mov
jae
jbe
jbe
test
scas
mov
cmp
and
adc
adc
sbb
dec
stos
jno
mov
hlt
icebp
dec
xchg
inc
daa
and
xor
xor
adc
dec
xchg
jp
dec
daa
dec
lcall
and
push
add
adc
inc
mov
push
outsl
mov
mov
mov
push
fsubs
jnp
mov
cmc
xor
adc
jnp
mov
stc
mov
cmc
add
int
sbb
xchg
jno
pop
cmp
sub
data16
sbbl
or
mov
add
ljmp
call
dec
sub
lret
aaa
xchg
jmp
fdivs
sbb
add
test
in
imul
xchg
push
add
xor
in
mov
stc
rcrl
mov
std
dec
or
or
mov
mov
or
and
hlt
in
pop
cmpsl
mulb
test
loop
jb
repz
clc
xchg
mov
xchg
pop
jno
push
jecxz
enter
xchg
sub
int
mov
stos
shlb
xlat
inc
ret
scas
mov
in
int
das
or
jo
out
add
fdivrp
aam
inc
or
jo
shl
push
data16
ja
cmp
insb
cld
cs
daa
xchg
xor
pop
add
inc
jo
movsb
dec
movsb
arpl
ret
inc
pop
sbb
cld
addr16
mov
clc
js
imul
jbe
xor
out
push
xchg
shlb
sub
sub
int3
repnz
lret
ds
inc
nop
dec
and
movsl
mov
addb
xlat
pop
jae
pop
cmpsl
xchg
lahf
adc
cltd
aaa
inc
push
daa
shl
sbb
mov
dec
or
mov
movsl
arpl
lret
fistps
sbb
push
int3
test
repnz
decl
aam
mov
mov
fstl
cmp
cwtl
add
js
lret
leave
mov
push
test
dec
sbb
mov
mov
jae
gs
or
xchg
mov
mov
add
imul
inc
and
arpl
fstpl
cmpsb
leave
rcl
cmp
pop
aaa
push
dec
sub
call
pusha
sub
push
or
aas
jo
jp,pn
out
jns
in
shr
xchg
out
pop
mov
mov
sbb
loop
gs
cmp
mov
in
xchg
scas
push
fwait
push
adc
add
out
loop
jl
xchg
mov
push
jb
mov
push
repz
std
es
call
push
pushf
xor
test
pop
addr16
pop
jge
sub
aas
cmp
scas
cmpb
push
js
mov
fdivs
dec
jle
xor
cmp
sbb
das
test
push
inc
push
das
ret
and
xchg
ds
into
lahf
mov
bnd
sub
mov
sub
lret
fsubrl
pop
push
fstpl
inc
mov
jns
or
popa
xchg
inc
dec
push
inc
mov
cmpsb
jg
clc
jo,pt
movl
add
sub
and
fadd
call
cmp
push
pop
in
movsb
daa
and
mov
sbb
dec
in
or
xlat
pop
les
sub
dec
mov
sti
jae
fidivs
inc
cmp
test
and
sbb
mov
mov
xchg
and
je
cmp
loopne
lret
shl
fsub
stos
xor
nop
sbb
sub
dec
mov
loope
aad
sub
mov
into
add
ds
cli
sub
inc
cmp
add
cmp
pusha
or
jo
and
popa
push
adc
lahf
sub
loop
jo
repnz
push
pop
adc
xchg
in
dec
divb
add
pop
mov
mov
popf
in
cmpsb
adc
jge
sarb
xchg
nop
test
lret
xchg
inc
push
rolb
pop
lret
movsl
dec
mov
fsubr
push
cmpsl
lods
into
pop
jp
cld
xchg
mov
add
sub
popf
jp
nop
mov
mov
leave
adc
xchg
sub
and
and
sub
pushf
cmp
mov
mov
js
jge
jb
cltd
aas
mov
scas
push
jle
push
out
and
push
lds
xor
dec
out
hlt
in
xchg
jge
cmp
mov
or
mov
xchg
fsubr
push
sbb
mov
push
add
or
lret
mov
orb
lahf
addr16
clc
fwait
sahf
xchg
xchg
loopne
xchg
rclb
popf
fldt
rcr
mov
in
leave
jecxz
int3
or
outsb
outsl
adc
test
clc
mov
add
je
push
sub
jnp
jmp
push
jne
push
jb
mov
stc
xchg
sbb
subb
and
lret
stc
pop
pop
sbb
inc
in
inc
les
addl
jl
inc
mov
into
les
inc
out
cwtl
in
push
inc
insl
sub
xchg
lea
repnz
push
mov
and
int
jp
or
xchg
fnstenv
mov
scas
inc
inc
lahf
push
mov
add
pop
test
movsb
dec
frstor
aad
xor
dec
cwtl
into
ret
test
outsb
enter
inc
lcall
cmp
fwait
add
les
int
and
mov
push
movsb
icebp
popf
sbb
dec
mov
and
xchg
or
enter
push
filds
pushf
idivl
xchg
sbb
call
cmp
scas
stc
js
in
jae
pop
cli
dec
fnsave
cmp
lcall
repz
flds
sbb
jp,pt
inc
aam
cmp
sbb
mov
inc
mov
inc
test
js
fidivrs
mov
lods
daa
xor
lcall
push
mov
scas
cli
fst
stc
pop
jle
leave
mov
outsb
outsl
jge
mov
test
cmp
mov
sbb
scas
xchg
orl
decl
and
loope
movsl
add
fcompl
je
lret
rcll
pushf
push
inc
clc
les
movsb
movsb
and
sub
xlat
pop
push
hlt
mov
or
fsubs
inc
idivl
test
repz
xchg
adc
aaa
lcall
rorl
lods
cwtl
stos
nop
lea
xchg
xchg
je
add
cmp
mov
mov
or
stos
test
jle
fwait
in
push
add
mov
push
stos
aas
lret
and
pop
mov
call
adcb
inc
xchg
pop
lret
movsb
sbb
lods
push
aas
pop
hlt
aas
cmp
dec
in
sbb
mov
xlat
sbb
dec
sub
mov
ja
loop
arpl
xchg
pop
imul
mov
rcl
xchg
and
pop
pop
out
mov
ss
stos
mov
scas
arpl
fwait
mov
sub
push
loop
jnp,pt
pop
mov
and
add
push
mov
sub
aas
xchg
or
bound
mov
fs
idivl
inc
xchg
push
add
sub
ret
pop
ljmp
jo
cmp
ljmp
test
pop
stc
xor
mov
dec
rclb
ljmp
and
cmc
and
adc
xchg
jbe
xchg
pop
jle
lret
sub
cmp
movsb
in
sbb
orb
andb
inc
stos
scas
mov
mov
daa
or
mov
imul
xor
lock
jge
in
pusha
ficomps
mov
jecxz
xor
in
adc
mov
cmovge
cmp
fcmovnbe
loopne
rorl
leave
mov
dec
push
mov
cmc
mov
jnp
das
mov
rcll
add
sarl
imul
mov
data16
sti
negl
aas
push
pop
inc
push
mov
es
xor
insb
ds
call
push
jae
add
movsl
into
push
sbb
imull
movsb
loope
mov
pop
xor
ss
pop
test
mov
data16
lret
gs
lds
mov
addr16
loope
or
push
leave
dec
jmp
push
xchg
outsl
jp
inc
adc
icebp
cli
push
xchg
jnp
push
adc
loope
aam
cmpsb
int
lcall
push
sbb
arpl
shr
es
bound
lods
and
jne
jne
jne
or
shll
add
xchg
dec
test
outsl
and
adc
sub
pushf
sub
jo
jle
and
push
gs
dec
movsb
mov
aad
mov
adc
adc
cmp
ret
sbb
fstpl
ret
icebp
or
movsb
sti
push
dec
fsubs
push
je
clc
inc
ds
jb
xchg
jns
pop
mov
cld
test
mov
sub
push
lods
out
sahf
add
mulb
xor
xor
ja
hlt
or
inc
test
je
pop
loopne
shlb
cmp
sbb
push
mov
dec
pop
mov
dec
sub
sub
sbb
sub
adc
mov
xchg
loopne
sbb
pushf
cmp
inc
loopne
fbstp
push
movsb
xchg
dec
loope
jns
adc
outsb
sbb
lock
aaa
loopne
jae
sub
lods
adc
xchg
shlb
xor
sarl
sub
mov
xlat
rorb
test
rep
inc
push
or
insb
std
inc
inc
les
xor
or
out
pop
nop
add
insl
dec
stc
mov
inc
xchg
sbb
aad
jle
call
fbstp
lods
jg
jbe
adc
mov
fbld
ret
mov
fldcw
xchg
shlb
push
sub
lahf
xchg
out
test
dec
call
sti
mov
push
movsl
shlb
jmp
sti
sbb
sbb
mov
or
dec
dec
rcll
pop
in
lods
movsl
jne
loop
push
add
cmp
xorb
stc
popa
dec
ud0
pushf
mov
xchg
mov
xor
fcomps
in
sbbb
xor
xor
icebp
jno
test
jbe
movsb
scas
add
lahf
xor
fstpl
sub
fcmovbe
and
sahf
aas
sahf
stc
bound
daa
popf
mov
pop
jns
dec
or
aam
mov
std
mov
mov
fcomi
orb
ret
sbb
mov
movd
xchg
cmp
dec
jb
enter
insl
mov
dec
cmp
mov
xchg
test
inc
aad
out
and
sbb
cmp
aaa
test
stos
leave
daa
imul
cmp
xor
sub
cwtl
pushf
or
inc
imul
or
inc
pop
jle
push
or
mov
mov
inc
outsl
in
popw
cltd
cmp
pop
out
push
sti
push
mov
mov
pop
into
stos
cld
adc
cltd
aam
sbb
das
out
pop
mov
mov
ja
in
pushf
add
stc
adc
dec
insl
das
and
js
dec
sti
and
dec
movl
into
xchg
shll
cmpsb
inc
sbb
sub
mov
mov
enter
sub
jno
mov
push
out
sbb
stos
lds
sub
imul
sbb
push
dec
pop
ja
inc
cmpsb
pushf
mov
aas
movsl
pop
cmp
shrw
lret
scas
adc
shlb
insl
cwtl
or
mov
pop
insl
sti
xchg
adc
jns
mov
data16
popf
xchg
dec
xchg
inc
fidivs
mov
fucomi
jmp
add
push
cmp
popa
pop
icebp
jae
xchg
mov
stc
daa
dec
ret
mov
sub
js
xchg
add
xchg
inc
inc
fimuls
scas
fstpl
mov
xchg
sub
aam
mov
clc
inc
or
outsb
push
add
hlt
mov
xor
ficomps
scas
mov
inc
js
cmp
ja
lea
jle
and
lea
adc
enter
mov
mov
and
push
inc
jg
add
xor
pushf
orb
gs
clc
lahf
imul
inc
sub
ja
fs
cwtl
or
adc
push
aam
cltd
inc
mov
rolb
out
ljmp
cs
rcrb
gs
add
pop
testb
movsb
and
fcoms
pop
scas
dec
sbbb
adc
cmp
stos
shll
lock
xor
popf
fbld
xor
pop
imul
inc
push
test
out
or
inc
clc
mov
mov
test
bnd
lret
dec
neg
dec
pushf
imul
lds
pop
jmp
xchg
inc
imul
add
mov
mov
cltd
cwtl
mov
jo
test
sub
pop
xchg
fists
mov
and
inc
fisubs
mov
cmpsl
popa
es
add
fcomps
aaa
jb
pop
shrb
inc
mov
and
cli
movl
pop
lods
mov
das
imul
adc
test
cmp
clc
les
sbb
nop
scas
cmp
das
mov
adc
lahf
push
jae
add
rcr
mov
xchg
dec
aas
out
push
outsb
xor
subb
push
cmc
mov
es
in
cmp
mov
push
aad
cmp
jbe
mov
lods
in
add
repz
sbb
lret
mov
std
lret
and
mov
repz
out
nop
cmp
stc
or
ja
push
push
popf
ret
in
xchg
stos
and
mov
lret
imul
les
xlat
xchg
aam
cmp
and
mov
into
sbb
stc
inc
push
sbb
mov
int3
add
cmpsb
jb
test
bound
inc
inc
jnp
lahf
xchg
push
setno
fildl
push
stc
dec
cs
sub
inc
stos
add
sbb
mov
add
adc
pop
pop
pop
mov
push
and
lock
fdiv
jae
sbb
xor
mov
mov
scas
pop
sbb
jl
pop
mov
inc
fidivrl
jmp
leave
jle
mov
mov
jg
push
add
into
cmp
or
inc
stc
dec
cmpsl
enter
clc
aam
scas
adc
xchg
mov
stos
mov
outsb
adc
je
mov
inc
pop
fucomi
and
xchg
scas
mov
sub
test
add
movsl
push
frstor
aam
inc
jno
out
cmp
xlat
mov
add
cltd
pop
movsb
test
pushf
adc
xchg
jo
adc
cld
fisubrs
ja
pop
pop
push
repz
movl
xor
inc
pop
repnz
dec
test
pop
cmp
cli
adc
inc
xorl
sbb
mov
mov
mov
mov
decl
mov
das
jecxz
jne
fwait
cmp
sbb
sub
jae
rolb
ja
jp
inc
mov
adc
jp
test
rclb
insb
sub
pop
mov
mov
cltd
insl
arpl
add
leave
pop
faddl
mov
push
int
adc
jecxz
sub
loopne
or
jmp
cmc
or
or
ret
and
or
adc
nop
shll
lods
movsl
or
fwait
hlt
adc
add
sub
insl
pusha
loop
out
cmp
add
mov
mov
push
scas
std
movsb
xlat
mov
xchg
stos
mov
scas
int
mov
mov
cmp
xchg
mov
lret
call
fbld
cmp
or
test
insl
xor
cmpsb
add
js
scas
adc
gs
inc
jno
mov
addr16
stos
dec
leave
das
int
sahf
cmp
sbb
or
lret
sbb
mov
mov
inc
gs
pop
add
and
adc
push
fiaddl
push
sbb
mov
add
popf
cmp
inc
mov
fucomp
nop
mov
imul
insl
mov
aam
scas
inc
dec
inc
fiadds
add
aad
add
scas
mov
stc
jecxz
scas
mov
fsubr
mov
clc
inc
js
outsl
gs
adc
sti
pushf
cli
in
popf
add
and
cmp
movsb
daa
repnz
jecxz
dec
test
jno
sub
movsl
mov
push
xor
sbb
loopne
test
mov
jae
ret
push
push
test
jns
mov
rolb
cmp
ss
mov
lahf
push
pop
lcall
jl
and
insl
loope
add
mov
cli
mov
cmp
cmp
sub
xchg
push
sbbl
push
fcoms
pop
or
push
mov
inc
in
mov
test
pop
sbb
movsl
xor
mov
fiadds
js
sbb
out
pop
lock
movsl
cmpsb
jle
xchg
adc
mov
int3
sbb
mov
push
outsb
inc
mov
dec
add
mov
adc
xor
inc
andl
inc
ud0
outsb
inc
jbe
repnz
pop
in
loopne
js
inc
mov
std
sub
jae
out
sbb
dec
repz
mov
repnz
clc
and
test
jbe
add
xchg
mov
cmpsl
int
out
cmp
mulb
sub
bound
dec
dec
xchg
mov
imul
mov
test
ss
pop
push
test
sbb
psadbw
in
incl
jne
cmp
mov
cmp
push
mov
ja
and
sbb
pop
cmp
ja
xor
in
add
lret
mov
movsl
xchg
sbb
dec
cmp
push
mov
mov
mov
popf
je
ja
push
mov
pushl
lock
cmp
adc
push
aad
or
xor
xchg
push
scas
shrb
lcall
shll
jb
ficoms
arpl
xor
nop
push
lea
or
icebp
xor
jle
jnp
cmp
outsb
push
aaa
xchg
mov
adc
inc
xor
xchg
push
or
adc
loope
mov
or
and
loope
outsb
int
aas
sub
aaa
and
addl
xor
sbb
fimuls
xor
sub
mov
bound
push
negb
ficomps
ret
xor
mov
push
jmp
leave
mov
imulb
lret
mov
adc
mov
mov
mov
mov
pushf
push
inc
icebp
fisubs
ret
push
adc
int
sahf
push
sub
and
adc
test
add
cmpsl
nop
jg
rolb
in
mov
jo
mov
loop
push
pop
add
movsl
inc
jae
jns
inc
faddl
and
dec
mov
mov
clc
inc
inc
iret
inc
test
add
mov
sub
out
inc
mov
push
fsubr
inc
popa
xchg
stos
xchg
aas
es
hlt
mov
mov
xchg
cmp
and
fildl
lods
mov
add
mov
sub
mov
std
fbld
inc
pop
push
insb
pop
test
repz
jns
cld
stos
xchg
mov
push
cmp
movsl
cmp
fidivrl
lock
mov
sub
andl
test
fs
dec
and
adc
sbb
lret
jl
mov
andb
xchg
mov
jl
movsb
rol
aad
lea
sbb
pop
jo
test
add
int3
adc
mov
iret
mov
mov
fidivl
testl
pop
adc
out
mov
pop
sub
lcall
scas
cld
stc
pop
in
jbe
cmc
mov
cwtl
lret
cmc
inc
inc
jne
mov
and
fsub
push
popl
gs
shr
lret
loopne
add
shl
rcl
mov
cwtl
xor
and
sbb
shlb
add
jmp
loop
scas
das
das
into
je
je
xlat
cmpsb
inc
sub
inc
rcll
jmp
pop
jbe
test
shrl
pop
jecxz
mov
popa
cli
ss
push
sbb
mov
ror
inc
sub
adc
ret
sub
mov
movsl
out
push
mov
insb
fcmove
jb
aas
xchg
adc
mov
icebp
stos
inc
push
mov
insb
inc
xchg
loop
in
jp
cltd
fimuls
dec
or
jl
and
jno
xor
or
in
stos
adc
cwtl
insb
sbb
inc
mov
add
adc
cmpsb
pop
imul
test
or
push
arpl
loopne
int
or
inc
sbb
mov
push
out
sbb
nop
mov
mov
clc
ret
loop
xor
adc
repnz
mov
scas
lret
mov
inc
fisubrl
fdiv
rcrb
pop
cs
popf
push
pushl
push
mov
notb
loopne
int
mov
js
rcll
inc
cmp
das
cmp
sti
xchg
daa
loop
xchg
or
dec
sti
addr16
lods
lods
test
and
or
fstl
inc
jg
ds
cmp
mov
adc
pushf
jb
fimull
pop
adc
inc
incl
mov
and
call
pusha
jno
std
and
add
pop
lods
mov
mov
cmpsl
add
sbb
imull
lock
fs
loopne
icebp
push
mov
popa
out
jo
cmp
insb
adc
mov
sbb
mov
inc
aaa
pop
ss
addr16
lock
outsl
cwtl
loop
sti
cmp
dec
jp
pop
or
cmpsb
test
subl
loope
pop
data16
fiaddl
mov
ret
and
jl
mov
popa
xchg
mov
std
rcrb
jns
scas
pop
js
mov
cli
cmp
xchg
inc
sbb
pop
in
lock
scas
adc
ret
idiv
or
xlat
mov
or
lods
mov
rorb
mov
xor
les
xor
cmp
fcmovu
out
lea
pop
add
nop
sbb
inc
insb
sub
dec
hlt
cwtl
adcl
int
das
push
mov
sbb
ret
xor
movsl
pushf
mov
movsl
dec
orl
adc
fildl
mov
flds
sbb
fsincos
inc
cmpsb
adc
push
xchg
bound
xor
dec
or
jae
mov
and
xlat
push
test
add
push
xchg
add
ficoml
insl
sbb
and
sbb
inc
lock
mov
mov
call
call
ret
xchg
pop
or
inc
mov
movsl
jno
imul
iret
divps
xor
arpl
mov
in
push
inc
lods
call
cmp
je
inc
jecxz
inc
or
popa
gs
jbe
adc
aad
sbb
ljmp
cwtl
pop
adc
jo
sub
and
lds
movsb
aad
call
lcall
inc
fwait
imul
inc
bound
scas
pop
push
add
stc
mov
dec
fimull
push
inc
andb
pop
mov
sub
daa
cltd
add
aas
mov
sarb
loop
movsl
sub
jp
ja
dec
mov
pop
movsl
cmp
ret
add
cwtl
int3
popf
push
test
lret
mov
adc
push
mov
loope
xlat
repz
hlt
dec
stos
and
ss
in
les
cli
scas
roll
lahf
in
xlat
mov
push
adc
imul
cli
dec
mov
icebp
mov
add
out
shrl
js
popf
sub
and
push
in
jle
cs
arpl
and
sar
mov
js
and
adc
fbstp
popf
popf
andl
test
loope
or
fcoms
mov
cmp
mov
cwtl
jae
xchg
sbb
fisttpl
ljmp
stos
pop
pop
cmc
push
cltd
fisttpl
das
in
inc
cmpsb
xchg
add
cmp
mov
in
or
adc
stos
or
cmp
es
xchg
xchg
lods
xlat
mov
jae
imul
push
inc
ljmp
xchg
adc
fbstp
clc
mov
mov
jecxz
arpl
shr
in
loope
daa
sti
jmp
lods
adc
adc
xor
out
push
sahf
sbb
push
loope
out
jno
cmp
and
inc
sbb
int
ljmp
pushl
lds
and
add
gs
out
fscale
jnp
lret
jne
mov
mov
rorl
xchg
xchg
fiadds
inc
ja
jb
inc
cltd
loop
add
add
icebp
and
std
cmp
xchg
jl
and
add
jo
pushf
fwait
cmp
mov
push
add
mov
bound
aaa
imul
push
mov
push
fcompl
rcrb
push
popf
pop
test
test
xchg
sarb
imul
xchg
push
test
scas
push
les
iret
mov
xor
adc
enter
popf
test
mov
mov
xor
push
dec
xor
in
nop
clc
cmp
outsl
outsl
test
icebp
or
scas
iret
mov
push
adc
ficoms
out
outsl
xor
sbb
das
out
pop
add
add
mov
pusha
pop
in
lock
sbb
shl
in
mov
push
mov
jle
out
stos
jl
shrl
and
jb
fisubrl
dec
inc
jge
aad
ret
ds
inc
pop
fs
xchg
cmc
xchg
add
dec
jbe
push
jns
inc
mov
stos
cld
int3
jmp
ss
lcall
add
pop
jns
pop
imul
out
and
fsubs
jo
jp
notl
add
xor
faddl
mov
cmp
sbb
mov
decl
xchg
jb
sbb
add
add
jle
push
popf
xchg
loopne
mov
lret
arpl
int3
cltd
int
clc
add
dec
mov
pushf
jnp
movsl
add
jg
push
cmc
push
sbb
repnz
dec
push
and
sub
sub
and
icebp
aas
pop
lods
mov
dec
mov
jbe
fwait
hlt
scas
mov
arpl
cld
sub
je
mov
xchg
xchg
mov
movsb
in
shl
addr16
bound
jbe
cld
adc
mov
mov
gs
popa
in
push
xchg
xchg
push
xchg
inc
scas
add
push
or
lock
and
cwtl
repz
xor
int
lahf
jbe
in
cmpsl
lock
xchg
loopne
sbb
iret
scas
mov
jns
je
mov
add
icebp
mov
ret
or
insb
int3
jl
add
aad
jecxz
aad
into
xchg
push
mov
xor
cltd
call
loop
and
cmp
push
inc
rcl
inc
loop
es
and
lret
scas
aaa
cmp
adc
push
shll
cmp
mov
jp
add
xorl
xchg
dec
lret
ss
cmp
mov
aas
mov
or
and
push
ss
or
shll
mov
adcb
sahf
xor
in
jb
addl
nop
or
mov
cmp
inc
cmp
ja
clc
pop
and
mov
jmp
add
lock
pop
in
push
xor
push
xor
pop
rcl
push
mov
daa
lods
scas
add
mov
pcmpeqw
jo
add
push
aaa
push
lods
les
mov
js
cmp
sub
dec
add
in
in
pop
shlb
std
sub
xchg
outsl
ficoms
cmp
mov
push
pop
mov
loop
cmpsb
mov
fsubrp
push
aad
clc
push
in
adc
in
cmpl
dec
push
inc
or
jae
cwtl
cwtl
or
add
das
clc
orb
orl
stos
mov
loop
or
pop
xlat
call
xchg
ret
divb
loopne
nop
xor
sbb
xchg
xchg
add
lods
pop
ret
repnz
lock
mov
inc
mov
jecxz
sub
xorb
cmp
outsl
mov
in
add
push
xlat
lock
and
stos
lret
pop
xchg
adc
gs
inc
inc
pop
fwait
imul
lea
jge
dec
pop
cwtl
cs
jg
stos
adc
pop
iret
dec
push
je
fisubl
jbe
cli
data16
fimull
or
loope
dec
sti
sub
clc
xor
shlb
sub
mov
add
rorb
sbbb
aam
daa
inc
lea
jecxz
fs
shrb
lds
insb
sbb
xor
pop
test
sub
inc
pop
adc
or
mov
fildl
out
xchg
pushf
pop
rcl
outsl
int3
pop
or
add
icebp
sbb
xor
inc
popa
jge
roll
cmc
lods
sbb
and
pop
adc
out
xchg
pop
cli
or
or
jno
fdivl
ds
sub
rcr
cltd
rcrl
lds
shrl
inc
sbb
fwait
push
dec
lahf
movsb
xor
mov
sub
xor
push
push
imul
xchg
sub
dec
jg
cld
hlt
and
or
movsb
rorb
dec
cld
sub
inc
jbe
sbb
repz
insb
vphsubd
inc
jno
popf
subb
shll
daa
and
outsl
adc
lods
ljmp
push
arpl
lret
add
outsb
jbe
cld
xor
xor
fstpt
out
add
push
mov
repnz
call
ds
ja
mov
in
addr16
dec
hlt
loop
mov
mov
dec
sahf
mov
jecxz
add
add
sub
notb
call
rolb
cmpsb
jo
xchg
loop
hlt
dec
pushw
je
ficoms
or
xchg
movsb
insl
inc
nop
sub
pop
xchg
sbb
pop
sahf
aas
or
fstl
lret
pop
sti
add
inc
addb
or
je
out
cmp
data16
lret
aas
xchg
mov
daa
out
xor
mov
jl
in
jbe
repz
jb
popf
push
push
daa
clc
lods
add
mov
das
xorl
xor
mov
test
mov
adc
hlt
push
rorl
movsl
mov
es
sbb
es
fs
mov
jp
jae
int
ss
hlt
jne
add
push
ljmp
jp
in
add
adc
xchg
andl
mov
cmp
fmul
cmp
xor
or
call
push
movsb
lock
sub
pop
dec
out
push
jae
push
jmp
adc
test
scas
inc
xor
int3
int3
mov
sub
arpl
test
xchg
inc
dec
lret
or
jmp
hlt
cmp
cmc
mov
iret
imul
mov
lret
cmp
adc
mov
out
scas
jae
sbb
cmc
in
in
out
push
into
aam
add
leave
xchg
lahf
cmp
ljmp
in
push
pop
push
cwtl
cmc
out
jb
in
flds
shll
and
sbb
cmp
pop
mov
adc
adc
insl
xlat
imul
mov
int
lcall
psubsw
fmulp
jnp
repnz
iret
or
jecxz
lods
add
mov
pop
lds
in
nop
pop
pop
jge
les
lret
repz
cmc
adc
lahf
test
pop
popa
stos
stos
pop
std
iret
fisubrl
adc
mov
or
outsb
test
pop
mov
cmp
out
push
add
scas
mov
ja
bnd
pop
mov
cmp
stos
in
mov
int
inc
mov
inc
test
movsl
loope
cmpsl
jle
test
inc
cwtl
add
enter
outsl
stos
xchg
push
int
andb
pusha
pop
mov
cmpsb
cmc
cli
mov
fdivl
or
push
add
imul
loope
adc
jmp
cmp
ss
sub
sti
dec
jnp
fdivrp
scas
xchg
in
inc
and
xor
xchg
mov
add
sarl
mov
rcrl
sti
or
popa
outsl
mov
adc
insb
and
xor
popf
fisttpl
in
pop
jecxz
xor
clc
sub
repnz
push
sub
push
adc
cmpl
or
shrb
adc
and
arpl
fsubr
iret
dec
jle
pop
mul
es
mov
pop
push
mov
movsb
sub
dec
mov
notl
scas
push
lret
leave
and
aad
das
stos
fildl
and
test
or
aas
xchg
aaa
jo
and
cmp
jle
insb
xchg
pop
push
dec
dec
jne
jg
rolb
cmp
lods
xor
rol
sbb
sub
in
les
mov
xor
xchg
xor
dec
sbb
push
mov
std
add
insb
add
fldcw
mov
call
aam
and
add
and
cmpsb
fisttpl
mov
adc
jmp
lahf
loopne
repz
mov
cmp
test
dec
mov
jmp
sbb
in
cmp
out
imul
insl
mov
push
mov
jns
mov
jmp
popf
in
mov
xor
lahf
xor
mov
mov
int3
fbld
dec
mov
jb
out
or
ja
push
js
cmpsb
add
xchg
nop
test
outsb
mov
jecxz
enter
inc
adc
and
sti
mov
mov
pusha
inc
pop
insb
frstor
mov
jae
and
mov
add
mov
dec
orl
or
call
pop
sahf
ret
mov
arpl
data16
aam
jg
dec
mov
lret
mov
jg
aad
jl
es
push
or
divl
xor
aam
bound
mov
jl
or
adc
fsubr
movsl
int3
pop
addl
data16
leave
sub
pop
sub
xchg
out
stos
or
addb
pushf
repz
es
loop
jo
hlt
dec
mov
xchg
mov
dec
mov
fistps
xor
and
repnz
jmp
sbb
jbe
movsl
xchg
pop
push
pop
sbb
sub
addr16
mov
jb
fidivrl
js
movl
fisttps
push
jne
mov
lds
push
nop
dec
jns
in
dec
popf
jne
ljmp
mov
mov
xorb
das
push
mov
loope
clc
jae
icebp
pop
or
pop
fstpl
std
mov
mov
xor
add
imul
lods
dec
lahf
sub
cld
std
mov
mov
popa
aaa
out
fld
jne
push
pop
mov
pop
sub
xor
sub
xor
mov
sbb
dec
aam
ss
movsb
cli
xchg
popa
jae
icebp
ss
cmp
je
data16
hlt
lods
es
add
add
jmp
xlat
cltd
shlb
scas
fsubs
xor
xchg
shr
stos
mov
push
inc
js
bound
mov
shlb
and
fnstenv
or
jno
cmp
mov
repnz
xor
es
in
sbb
xor
dec
int3
iret
ror
push
ss
inc
push
jbe
loope
imul
fistpll
jl
jae
pop
ss
ret
jp
mov
xchg
mov
pop
and
pop
divb
fxch
dec
xchg
sub
fsubs
push
and
sub
add
inc
cmp
sbb
or
sti
inc
mov
xchg
lcall
adc
push
cmp
popa
jecxz
mov
fisubl
test
add
mov
shll
test
mov
push
jns
imul
fidivs
xorl
lcall
mov
cmpsb
jmp
decl
xor
in
mov
aas
cld
outsb
hlt
fwait
rclb
cmp
aad
cmc
xor
loop
or
xchg
out
jp
lret
outsl
popl
add
loop
or
mov
popa
mov
mov
add
loope,pt
push
sbb
test
jl
mov
mov
test
mov
clc
pop
out
sbb
outsb
addb
cmpxchg
fcoms
stos
mov
rcll
xor
mov
adc
pushf
xchg
xchg
jb
sbb
pop
scas
dec
adc
adc
cmp
sbb
cmpsl
dec
negb
scas
lret
xchg
jo
cmp
shlb
add
xchg
ffreep
iret
dec
and
mov
dec
mov
xchg
cwtl
ficompl
in
xor
sub
and
push
aas
and
sbb
lcall
out
out
add
call
loope
std
xchg
pop
pop
push
sbb
xor
lods
nop
in
pop
push
push
sub
cmpsb
push
cld
arpl
mov
movl
jbe
add
push
jbe
fsubs
mov
cs
push
push
mov
or
and
or
icebp
push
addr16
movsl
xor
mov
or
adc
insb
dec
mov
mov
sbb
clc
inc
lcall
call
out
jb
sahf
icebp
push
inc
lret
dec
xchg
lds
or
shrl
or
mov
repnz
pop
dec
lock
cmp
or
jae
adc
sbb
push
rcl
insl
fldcw
mov
icebp
cli
add
rorl
add
les
decl
gs
in
outsl
adc
fwait
adc
fwait
fwait
xor
pushf
jnp
and
cmpsl
mov
insb
dec
popa
inc
pop
dec
fldl
out
mov
lods
out
push
cmp
inc
jg
pop
adc
test
mov
sub
and
pop
fdivrs
mov
sub
addr16
data16
sub
fstl
add
mov
iret
rorb
push
int3
fidivrs
mov
iret
es
xchg
addr16
ds
pop
cltd
outsb
js
in
mov
ret
or
addr16
inc
push
pop
inc
jae
pop
int3
mov
pop
outsb
cmpsb
fstl
push
add
sahf
movsl
inc
mov
div
pop
outsb
mov
fcmovb
and
lea
loope
cltd
rol
addr16
or
xlat
loopne
pushf
pop
inc
push
subl
jns
fwait
mov
adc
outsb
outsl
mov
cmp
inc
cltd
rolb
push
daa
and
sub
les
mov
adc
notb
repz
and
dec
fbstp
mov
pusha
leave
sbb
les
dec
xlat
fsub
jns
in
fidivrs
or
cli
fmul
xchg
fnstcw
int3
mov
mov
push
mov
dec
loop
dec
jp
adc
andl
push
loope
fsts
mulb
mov
jg
dec
mov
pop
call
outsl
jbe
push
loop
pop
mov
icebp
pop
fmull
fdivl
mov
into
movsl
jmp
into
adc
cmpsl
xchg
repz
xchg
ret
test
fsubr
inc
mov
mov
xor
cmc
lret
jmp
adc
mov
adc
and
adc
mov
int
xchg
mov
loope
mov
scas
fimuls
sbbl
sub
dec
lret
fistps
lock
or
adc
push
push
push
cmpsl
xor
lods
repnz
adc
out
xchg
cmpl
dec
cmp
mov
insb
adc
fmuls
add
out
cmp
xchg
add
cmp
xchg
clc
rcr
sbb
repnz
push
mov
insb
and
hlt
add
xchg
adc
and
decl
jo
into
ret
xlat
repnz
add
xor
mov
std
cli
inc
dec
ljmp
xchg
add
ja
jecxz
sbbb
loop
sub
mov
int3
pusha
fwait
push
es
aas
mov
addl
aas
stos
fwait
rclb
jns
inc
lret
in
or
rorb
xor
lret
dec
push
sbb
pop
push
sahf
filds
xor
push
or
mov
sets
outsl
dec
mov
and
cwtl
xlat
mov
faddl
jle
movsl
sbb
sbb
pop
popf
push
std
xchg
lcall
icebp
jge
sub
lock
cmp
aam
adc
aas
fucomp
flds
adc
mov
push
movsl
pop
pop
stc
out
dec
outsl
rcr
cmp
loope
fisubrs
dec
jno
sbb
jnp
out
pop
xlat
sahf
sahf
xor
xchg
mov
sbb
es
imul
pop
dec
rcll
imul
pushf
inc
lds
add
out
adc
sbb
and
mov
test
outsl
addr16
add
cmpsl
push
fnstsw
xchg
sub
cwtl
mov
loope
fidivrs
cs
shlb
out
adc
sti
jb
mov
jecxz
jns
sub
mov
pop
push
and
or
ficoml
sarb
ja
jge
das
sub
sbb
pop
loop
add
test
adc
test
mov
add
mov
mov
push
pop
sbb
movsl
adc
jno
add
sahf
xchg
movsl
sahf
or
imul
pop
mov
xor
int
mov
imul
xchg
in
sbb
xchg
lods
jp
sti
addr16
subl
push
mov
push
or
mov
std
dec
insl
popf
mov
loopne
inc
loopne
xchg
sarb
nop
add
jnp
pop
insb
pop
shlb
int3
loope
dec
aad
push
jns
test
mov
push
mov
adc
imul
mov
idivb
int
sbb
push
stc
pop
xchg
insl
dec
xchg
ds
xor
xchg
inc
pop
aam
test
ret
mov
xor
stc
cmp
xor
xchg
sbb
fsts
sub
mov
and
add
mov
adc
xchg
in
push
xor
mov
mov
es
mov
fisttps
incl
in
push
jno
mov
add
add
outsb
jne
les
fsub
dec
je
and
imul
mov
mov
xor
imul
lock
jne
shll
sbb
rclb
stos
aam
jp
cmpsl
leave
hlt
inc
mov
cltd
jl
dec
mov
cmp
and
push
pop
dec
push
out
sub
gs
cmpsb
xor
mov
jns
fmuls
mov
jmp
lahf
cli
in
ret
add
into
fsub
js
dec
push
inc
jb
lret
cmc
pop
repz
lret
nop
test
outsl
sbb
fldcw
insl
bound
xchg
aad
xchg
mov
ljmp
pusha
mov
xor
cmp
xchg
xchg
cmp
add
repz
pushf
sbbb
pop
push
dec
dec
mov
sti
int
cmp
in
in
mov
ljmp
xchg
aam
inc
movsb
jp
mov
push
xchg
pop
je
pop
test
dec
fcomip
add
jle
sbb
push
pop
jg
inc
lods
insb
fisttpll
push
mov
or
push
ret
fwait
mov
mov
shlb
and
jge
push
jno
in
xlat
inc
jl
pop
hlt
dec
popf
loope
movb
inc
in
mov
std
xchg
fcompl
push
imul
pop
repz
xor
pop
push
out
xchg
and
mov
orb
inc
jl
insl
and
sbb
push
pop
sbb
dec
imul
xor
pop
add
sarl
std
and
and
cmpsb
ljmp
mov
ds
pop
out
xchg
in
dec
in
mov
mov
sbb
push
add
aaa
cmp
and
je
scas
sahf
cwtl
lods
push
enter
dec
sarb
sahf
lea
inc
adc
in
enter
imul
cmp
xor
or
add
mov
xchg
inc
imul
cmp
or
ja
sub
aas
add
insl
pushf
js
mov
cmp
mov
sub
test
pop
int3
btr
jbe
cmp
jg
sub
nop
xor
aad
mov
pop
stc
inc
jp
repz
pop
fstpt
ss
jge
push
and
xchg
mov
pop
push
ds
mov
xor
inc
mov
in
test
outsb
hlt
ret
dec
xor
xchg
cmc
push
addl
test
popf
shll
or
push
bound
or
lcall
arpl
and
push
shrb
push
sti
into
lods
ret
sbb
clc
cmpsl
int3
mov
xchg
out
mov
out
js
mov
mov
sbb
dec
push
lock
push
pushf
icebp
aas
mov
mov
cmp
insl
lret
fld
mov
scas
hlt
cmpsl
lcall
test
movsl
lret
stc
or
mov
inc
push
cld
je
pop
daa
lods
pop
and
xchg
mov
mov
aam
inc
cmp
sbb
push
faddl
subb
in
xchg
add
inc
stc
pop
mov
bound
xor
xchg
mov
mov
adc
ret
aaa
rorb
pop
cmpsb
mov
push
jmp
mov
js
inc
push
fcmovne
or
pop
xor
mov
cmpsb
icebp
push
addl
and
jecxz
and
push
adc
dec
dec
and
cmpsb
nop
lcall
cmp
out
push
jp
gs
loopne
sub
cld
inc
pop
pop
adc
loope
lds
insb
mov
ljmp
mov
xor
stos
fwait
sub
dec
adc
cmp
inc
nop
sub
jae
push
xor
push
jle
sbb
sbb
pop
ljmp
add
cmpl
lds
insb
push
push
pop
lcall
adc
cmpsl
sbb
lods
mov
out
clc
push
sub
cmpsb
push
loop
jp
dec
cmpsb
push
xor
mov
mov
pop
mov
push
in
test
pop
dec
outsl
dec
sti
sti
repnz
nop
xchg
lcall
pop
in
stc
xor
mov
cltd
dec
in
mov
insb
sbb
jae
xchg
test
and
push
xchg
cmp
xor
push
andl
loopne
out
stos
das
fldcw
lret
cmp
xor
adc
je
xchg
popf
insb
inc
push
loop
push
loope
sbb
mov
pop
mov
fidivrs
adc
and
dec
cli
push
aam
xor
cli
sbb
adc
es
lods
mov
hlt
pop
movsl
or
test
mov
mov
pop
and
jl
xor
loop
sbb
stc
sbb
xor
rcr
aad
push
lcall
jecxz
cmp
mov
out
lretw
or
xchg
orl
cmc
mov
imul
loop
jbe
mov
out
push
icebp
cwtl
loope
fwait
jne
stos
add
aaa
cs
push
insb
sbb
jge
ret
cltd
idivb
xor
push
jbe
subl
dec
adc
int
push
imul
sarb
xchg
xor
cmp
mov
mov
mov
push
jge
in
xor
popf
or
ffree
push
and
mov
pusha
inc
scas
dec
or
in
xlat
lret
push
adc
outsb
and
lds
scas
ret
mov
insl
mov
stc
xor
fldenv
jns
nop
int3
outsb
xchg
hlt
sti
jnp
loope
dec
add
test
xchg
ss
es
rorl
inc
jg
xchg
mov
or
xlat
push
jno
out
cwtl
adc
mov
or
adc
fcoms
push
xchg
mull
xor
push
xchg
repz
in
xor
dec
lock
and
shlb
push
in
ror
inc
lret
push
loop
shrl
cmp
subb
orw
lret
lock
xchg
xchg
jp
cmp
bound
cli
adc
xlat
add
daa
xor
in
outsb
pop
stc
mov
push
inc
dec
mov
iret
mov
xchg
dec
cmp
test
sub
xlat
mov
inc
sbb
addb
stc
dec
loopne
dec
cmpsl
aas
test
jle
mov
jae
adc
jb
push
inc
in
inc
cli
cmp
push
lahf
scas
cltd
inc
repnz
sbb
imul
shll
jecxz
and
pop
xchg
sahf
mov
dec
jae
shlb
daa
hlt
iret
fs
dec
sbb
mov
sbb
lods
cmp
jo
lods
nop
mov
imul
xchg
push
das
lods
dec
push
push
mov
test
xchg
cmp
subl
sqrtps
aam
add
xchg
stos
jb
call
sub
fiaddl
sub
int3
dec
mov
daa
mov
push
iret
hlt
push
ljmp
sbb
mov
sbb
outsb
or
dec
in
mov
outsb
xchg
mov
in
lcall
mov
lods
push
imul
sub
cmp
push
jl
cmp
inc
xor
xor
push
out
dec
sub
sub
rorl
mov
mov
cs
not
fsubs
xchg
add
nop
mov
cmp
ret
fcomp
fildl
xor
xchg
and
or
scas
aam
iret
mov
adc
jno
cmp
inc
adc
jbe
outsl
aad
sti
jmp
repz
add
push
movsb
cmp
jo
jb
test
xchg
and
pop
aas
shll
negb
pop
in
rclb
in
ret
sti
jb
fcmovne
lock
sbbl
clc
jne
sahf
in
pop
mov
cmpsl
pop
pusha
shrb
sub
pop
jle
cwtl
mov
fwait
pop
pop
adc
pusha
push
pop
mov
cwtl
sbb
xor
loopne
cmp
clc
jge
adc
jl
cs
rcll
add
out
pop
adc
mov
cmc
dec
fwait
xchg
repnz
movl
out
shl
std
ds
in
sbbl
or
idivl
cmp
sub
pop
xor
lds
sbb
dec
call
test
lea
xor
jne
pop
fcomi
cmp
mov
xor
scas
stos
outsl
jbe
cmpb
mov
jb
or
aaa
xchg
jb
pop
xor
add
mov
addl
mov
es
add
ds
ja
jns
cmpsb
scas
jp
clc
mov
mov
fsubs
clc
mov
adc
sbb
add
xor
sub
sbb
push
stos
pop
xchg
shlb
mov
mov
jge
adc
cmp
and
test
mov
inc
clc
add
test
or
iret
idivb
arpl
hlt
pop
dec
outsb
xchg
xorb
push
stc
adc
push
mov
xorb
mov
stos
enter
push
jae
outsb
lea
and
test
jae
fistpl
jno
push
sbb
sub
fldt
mov
lock
leave
or
mov
adc
xchg
aad
dec
cmp
out
shrb
test
bound
sahf
cs
push
cmp
and
testl
mov
cs
xchg
test
adc
pop
cmpsb
push
push
sbb
mov
shlb
lods
lahf
daa
or
cli
xor
cmp
insb
dec
dec
push
test
inc
stc
mov
and
jmp
into
xlat
fucomi
cmpsb
sti
sbb
leave
dec
push
int
dec
and
test
sub
mov
push
dec
stos
icebp
and
fs
jnp
push
lock
push
stos
out
lods
loope
and
sahf
sti
inc
mov
mov
test
negl
xchg
dec
mov
lret
orb
enter
je
cwtl
inc
ret
mov
jo
dec
bound
mov
or
scas
inc
jge
les
dec
push
lret
add
inc
and
in
mov
arpl
rcl
sbb
adc
mov
sbb
fs
jge
pop
shl
ret
mov
lods
inc
and
cmp
adc
repnz
mov
dec
cli
pop
inc
imul
cs
xor
fdivs
ss
sbb
cmp
push
cld
sbb
sbb
sbb
pop
dec
cmp
inc
insl
cmc
mov
add
out
add
inc
sahf
dec
fdivr
lcall
gs
add
jns
or
cmp
and
roll
add
sub
or
pop
push
adc
xchg
mov
add
mov
pusha
add
jge
divb
int3
jno
cmp
cmp
jecxz
into
add
xor
and
and
cmpsb
or
mov
push
fbld
jecxz
xchg
dec
gs
loop
push
lock
or
jae
loop
andl
fisubrs
sub
int
addr16
or
inc
test
rcll
int3
scas
enter
inc
add
into
xchg
mov
mov
orl
or
or
fisubrs
je
dec
and
or
rorb
loopne
adc
jae
stos
je
popa
test
sub
and
test
or
lea
cmp
add
pop
cmpsl
fwait
stc
mov
cld
sub
adc
addr16
divb
jb
cmp
movsb
scas
inc
fmuls
pop
shr
mov
push
jnp
adc
jnp
ljmp
mov
xor
sub
ljmp
adc
inc
stos
dec
fdiv
cs
mov
shll
sti
mov
mov
sbb
fildl
mov
xchg
jl
movsl
mov
orl
popf
xchg
aam
mov
fldl
daa
and
lods
pop
and
sub
xor
inc
push
icebp
xlat
jne
aaa
xchg
sub
pushf
loope
and
push
cmp
pop
pop
mov
mov
cltd
adc
adc
fwait
inc
xor
pop
xor
iret
out
xchg
sbb
ja
jns
xchg
test
xlat
mov
popa
roll
pop
jno
or
out
int3
in
sti
pop
push
into
ret
mov
js
in
fstps
push
pusha
imul
pop
adc
cmp
lcall
pop
stos
lcall
pop
mov
les
push
mov
add
gs
cltd
shrb
push
push
lods
imul
lahf
aaa
adc
mov
fnstenv
cmp
enter
mov
stos
shll
hlt
cmp
cld
mov
mov
push
pop
dec
int
shll
xor
sub
dec
push
sub
in
adc
and
lds
adc
pushf
mov
mov
imul
jp
shrb
push
iret
push
push
cs
in
out
in
adc
outsl
inc
sbb
shlb
xor
ds
ljmp
cmp
xchg
lods
call
jbe
les
and
pop
and
jp
test
fs
out
pop
mov
pop
dec
jecxz
mov
iret
mov
pop
mov
xor
xorl
fcompl
cmp
loop
add
dec
shlb
push
test
ja
sub
push
notl
xchg
xor
call
or
adc
mov
pushf
shll
xchg
out
pop
dec
inc
inc
xor
xor
aad
push
ret
fistps
add
or
cmp
cmpsb
cs
adc
lods
mov
insl
movsl
and
jp
mov
sar
dec
dec
sbb
mov
mov
popa
icebp
inc
add
xchg
dec
sbb
mov
mov
cld
jb
xchg
iret
int
mov
out
out
enter
and
sahf
inc
test
ficompl
pop
or
inc
ljmp
lret
iret
mov
sub
jae
mov
in
shlb
andl
cmpsl
out
lods
inc
sub
adc
daa
lahf
mov
xor
cmp
mov
psubw
flds
cwtl
cmp
ret
pop
fmuls
jae
bound
arpl
loopne
push
mov
jg
enter
adc
repz
sub
and
ror
sbb
and
mov
and
jp
push
subb
clc
shl
pushf
mov
push
in
cwtl
cmp
pop
mov
cmp
push
pop
es
jo
int
sbb
xor
addr16
push
sbb
lods
xor
mull
mov
inc
outsb
mov
add
or
xor
mov
cmpsb
notb
fildll
jmp
stos
jbe
add
shl
shr
out
add
jno
pop
fsubrs
mov
subb
cmpsb
xorb
into
jbe
cld
adc
add
dec
mov
jg
push
add
xchg
addr16
and
sub
pop
jno
mov
out
data16
enter
mov
add
inc
jnp
dec
jmp
out
fnstenv
scas
push
testl
fnstsw
jg
dec
enter
and
push
inc
jmp
sub
pop
jae
cld
pop
jle
push
cwtl
ret
pop
fsubl
inc
push
repnz
xchg
mov
cwtl
aas
rdmsr
push
clc
sbb
lret
and
and
pop
push
lock
aam
sbbl
xchg
lea
dec
sti
inc
cli
ret
xchg
xlat
mov
js
in
repz
or
pop
test
fnstcw
jo
jmp
je,pt
adc
loop
adc
push
popa
or
sub
sub
or
std
inc
xchg
sbb
cmpsl
repnz
jnp
ljmp
push
inc
ffree
push
push
lods
adc
hlt
mov
repz
mov
or
in
jge
sbb
or
jae
mov
ret
or
sub
or
and
pushf
inc
insb
out
mov
ficomps
adc
mov
insb
int
shll
lods
in
mov
shlb
push
dec
mov
push
loope
lods
lret
sub
push
das
mov
insb
mov
or
out
inc
dec
pop
push
cld
push
push
cmpsb
sbb
mov
lds
ret
inc
imul
xor
jbe
std
mov
cmp
mov
cmp
push
sub
ret
ret
fiaddl
xor
jle
lock
and
cmpsb
clc
or
adc
or
shlb
sub
sub
xlat
mov
cmpsl
mov
loop
iret
or
sbb
adc
fsts
negl
movsb
ss
decl
pop
push
push
aad
pop
cwtl
jno
add
fldenv
pop
cmp
lods
mov
inc
sarl
js
fs
out
js
sub
pop
and
add
in
repz
mov
dec
arpl
cmpsl
lods
call
push
stos
in
ret
ja
xchg
mov
mov
push
aas
mov
cmp
dec
test
scas
je
pop
push
out
mov
loopne
inc
mov
push
aas
out
insb
xchg
jne
scas
outsb
fmull
lock
lcall
inc
sub
adc
mov
das
or
inc
xchg
sub
xchg
sbb
outsl
test
mov
pop
js
lret
sub
mov
fisttpll
jg
in
xchg
movsb
mov
roll
daa
mov
lds
xchg
out
inc
dec
ds
xchg
push
scas
mov
mov
testb
xchg
fsubr
pop
fidivs
xor
aas
adc
pop
push
es
out
jnp
test
xlat
rcrl
pop
adc
cmc
sahf
cs
pushf
fst
push
test
pop
push
int3
mov
push
imul
adc
sbb
in
push
mov
pop
sub
cmpsb
sti
adc
enter
mov
stc
pusha
push
std
mov
das
adc
inc
mov
mov
fcom
xchg
add
xchg
sub
jo
icebp
add
mov
push
xor
mov
out
daa
in
call
mov
gs
test
je
pop
and
push
sub
add
sub
mov
add
jl
sub
cmpsl
xabort
mov
outsl
sbb
bound
dec
sub
cmp
push
mov
jge
cmc
jno
loop
in
cmpsl
add
adc
stos
jp
mov
leave
xchg
pop
mov
xchg
mov
incl
int
xlat
cmp
mov
iret
loope
xchg
xor
push
xlat
cmovg
mov
adc
adc
mov
mov
aaa
in
mov
int
movsb
loop
imul
testl
cmp
mov
scas
mov
ret
sbb
push
mov
setl
mov
sahf
xchg
mov
movsw
jmp
lods
or
cmp
daa
mov
push
push
add
nop
sbb
dec
cmp
jno
mov
ret
xor
loop
bound
jns
inc
popf
mov
fxch
ljmp
or
out
mov
push
call
icebp
push
pop
sbb
xor
stos
loope
test
push
pop
popf
inc
push
xchg
fdiv
dec
mov
jnp
cmp
push
jmp
pushf
fisttpll
in
sbb
and
dec
icebp
loope
sbbb
dec
gs
push
inc
stos
repnz
in
loop
or
dec
lds
into
rclb
inc
sub
out
testb
pushf
sbb
xchg
xchg
xchg
pop
jnp
fimull
pop
jnp
fcompl
shrl
mov
adc
inc
sub
jl
nop
dec
pop
pushf
and
push
lock
lea
jno
out
fisubl
push
mov
xchg
push
sbb
mov
clc
mov
push
jne
jge
dec
sub
mov
scas
out
je
push
lcall
mov
add
jo
sbb
inc
inc
cli
jo
push
call
fdivrl
sub
fimull
and
rcrb
xlat
movsl
sbb
mov
xor
popa
into
xlat
inc
cmc
repz
not
sub
leave
add
decb
dec
adc
push
dec
adc
data16
xor
scas
sbb
lahf
and
mov
mov
shlb
stos
xchg
or
dec
dec
fbld
dec
sub
clc
repz
mov
data16
jmp
testb
pop
xor
loope
jp
filds
xchg
xlat
iret
or
mov
dec
lds
inc
pop
test
dec
sub
inc
ljmp
jmp
lahf
cltd
xchg
adc
lds
bound
test
xlat
sbb
mov
add
out
inc
dec
mov
pop
sub
cwtl
xchg
jnp
shll
jne
xlat
cmp
cwtl
lds
or
ds
loopne
jo
inc
lahf
add
loope
xchg
lds
movsl
pop
pop
xchg
jmp
jge
lods
dec
es
shll
mov
sti
inc
bound
idiv
or
pushl
adc
test
jle
mov
dec
inc
test
ret
lret
ljmp
xlat
ds
xor
adc
inc
push
lock
or
gs
dec
call
mov
inc
or
lock
push
dec
iret
outsl
sub
push
push
cmp
movsb
sbb
stc
sub
jge
pop
clc
out
sbb
mov
bound
ss
enter
in
or
movsl
test
push
mov
pop
push
out
test
push
mov
xor
jbe
movsb
addb
mul
add
mov
rolb
pop
push
mov
outsl
stos
cmp
jp
fists
add
out
sarl
sub
add
adc
adc
les
jnp
loope
icebp
dec
push
repnz
xchg
ret
sub
inc
loop
andb
bnd
rcll
and
loop
aam
cs
dec
cld
lcall
adc
repz
jbe
push
sarl
int3
mov
push
loope
xchg
stos
jb
adc
and
fistpll
popl
push
xchg
xchg
cmc
cmp
mov
pop
jmp
sub
repz
test
sti
mov
xchg
or
data16
popf
adc
sbb
mov
into
test
sub
mov
jbe
das
jmp
push
push
mov
push
cltd
mov
clc
dec
mov
cld
rcrl
sahf
mov
jg
data16
pop
faddl
inc
cmp
pop
test
loopne
mulb
jmp
push
cmp
xor
push
cmpsb
mov
push
dec
fwait
mov
sub
xchg
push
inc
scas
cmp
pop
pushf
in
loop
filds
mov
jle
fidivl
jge
mov
lds
imulb
orb
mov
lods
out
pop
cwtl
ds
dec
test
hlt
nop
clc
sarb
xchg
push
mov
cmp
and
add
popf
insl
cmpsb
sbb
cmc
pop
sub
or
outsl
subb
pusha
leave
lcall
jno
xchg
fldl
mov
fcompl
xor
mov
lock
popf
mov
jmp
mov
or
mov
sbb
iret
test
and
push
lea
adc
hlt
add
dec
les
fisubrl
sub
insl
add
cld
and
mov
xorl
pop
inc
repz
clc
xor
dec
and
and
bound
cmp
repnz
xor
jp
dec
js
setl
ljmp
inc
sbb
sbb
popf
adc
add
cmpsl
or
in
sub
lcall
inc
dec
jmp
test
add
adc
mov
in
shrb
add
and
scas
mov
ret
fiadds
mov
mov
jp
mov
mull
add
xchg
jl
mov
mov
or
lods
js
or
push
push
aad
stos
sbb
cld
inc
int3
cli
ss
adc
sbb
dec
out
mov
xor
in
mov
cmp
iret
push
rclb
xor
loopne
jns
adc
hlt
lock
vmaxpd
stos
jne
lahf
and
lret
fists
lret
sbb
push
inc
es
das
cltd
push
dec
outsl
inc
test
out
fwait
adc
dec
js
xor
mov
cmp
movsb
dec
push
stc
repz
adc
je
lret
aaa
xlat
xchg
pop
lahf
ret
or
shll
fld1
icebp
cmp
lcall
jge
aam
rcrb
lcall
shl
jmp
jb
dec
mov
stc
andb
loop
addr16
test
jmp
gs
xchg
pushl
cli
dec
jbe
cwtl
cmp
pop
test
das
in
sahf
and
pop
outsl
nop
insl
pop
ja
lea
lods
and
sub
mov
daa
jmp
lcall
mov
rorb
dec
and
test
push
xchg
sbb
pop
call
cmp
sahf
lret
adc
jmp
mov
pop
enter
add
hlt
movsl
mov
aam
lahf
xlat
lcall
pop
jl
add
adc
push
mov
sub
popf
xchg
enter
ret
pop
push
aas
cli
test
xchg
xor
in
leave
sbb
aad
push
sbb
aaa
xor
movsb
mov
inc
aad
mov
add
push
insl
rclb
inc
sub
jmp
ret
sti
mov
dec
mov
clc
jb
xor
or
test
cmp
sub
cmp
xchg
loopne,pt
sahf
jb
in
sbb
repnz
mov
mov
das
mov
sbb
in
and
mov
pop
mul
lcall
aam
std
stos
pop
sub
stos
orl
sbb
dec
pop
inc
lock
push
int3
cld
in
adc
cli
mov
paddd
pop
aam
xchg
mov
inc
fwait
pop
dec
mov
pop
shr
pop
bound
push
sub
pop
rorl
jp
mulb
rcl
sbb
inc
adc
stos
loopne
or
inc
mov
pop
adc
and
in
sbb
lods
sub
jle
cmp
push
and
divb
or
idivb
xchg
push
add
mov
adc
add
pop
cltd
mov
sti
jo
add
push
aaa
jecxz
es
jne
jl
mov
push
mov
cmp
ret
sub
mov
sti
in
imul
push
aad
mov
in
scas
xchg
inc
in
or
arpl
lahf
jp
jle
outsl
sub
cmp
mov
mov
and
sub
jo
xchg
inc
out
lds
push
mov
sbb
fdiv
add
repz
movl
inc
push
rorl
jo
out
sub
ljmp
in
movsl
fsubrs
dec
shl
mov
mov
push
movntps
sub
call
xlat
in
inc
data16
outsb
mov
mov
sbb
and
cmpsl
jecxz
fdivp
pop
push
pop
dec
dec
dec
inc
inc
pushf
cmp
out
xchg
push
pop
sub
aad
mov
xchg
roll
leave
jae
outsl
out
mov
lods
jno
push
lds
mov
mov
add
insl
cmp
jge
inc
jecxz
mov
pop
arpl
rorb
jp
cmc
leave
lods
repnz
movl
add
lret
pop
or
and
jle
loop
adcl
jp
into
insb
fwait
fsubl
dec
int3
adc
xor
pop
fsts
popf
cmp
int3
jns
icebp
sub
pop
xchg
jg
pop
and
scas
mov
in
cld
imul
adc
mov
ret
add
call
jbe
popa
cmc
mov
ljmp
aas
xor
push
adcb
call
inc
pop
dec
mov
sub
mov
pop
and
test
inc
and
push
jnp
ds
adcl
cmp
lahf
or
mov
subl
pop
icebp
stc
pusha
inc
xchg
out
mov
adcb
cld
mov
mov
incb
dec
in
pop
dec
loopne
mov
cld
int
movb
scas
push
das
xchg
push
mov
ljmp
and
ret
paddd
dec
test
jo
pop
cmova
cmp
adc
sub
jns
pop
in
jg
xlat
fdivrs
lret
xchg
clc
popa
mov
cwtl
add
mov
inc
movsb
jno
iret
js
mov
cmp
jno
adc
pop
mov
jmp
movsb
xor
push
xor
cwtl
and
adc
xor
adc
push
inc
mov
mov
cld
adc
cmp
push
outsl
daa
push
out
inc
cmp
sbb
imul
xchg
shlb
adc
cwtl
adc
add
rcl
test
push
lret
dec
insb
inc
daa
cld
repz
stos
outsl
repz
cmp
cmp
dec
pop
popa
jne
test
fdivrl
out
xchg
push
xchg
cmpsl
leave
xor
std
push
xlat
aam
jl
cmp
pop
add
lret
pusha
or
insb
mulb
jb
add
ret
movsb
mov
ja
mov
mov
ret
gs
and
cltd
cld
pop
mov
hlt
es
ret
push
inc
inc
inc
fdivrs
pop
shlb
popf
sbb
push
pop
add
out
inc
aad
les
xchg
adc
fwait
out
lock
cld
orb
lods
mov
push
sti
sub
adc
out
in
jns
cmove
xlat
insb
mov
jp
cmp
dec
mov
add
insl
push
mov
pop
xor
and
insb
ficompl
xchg
in
or
aas
add
push
push
pop
out
inc
mov
in
dec
xor
sub
add
mov
cmp
push
adc
scas
mov
adc
test
and
rorb
cmp
push
cmpsb
and
cmp
mov
jg
push
jg
xchg
cmp
bound
adc
xor
lds
jmp
xor
mov
andl
xor
ljmp
insb
mov
mov
mov
mov
imul
jge
mov
lcall
or
sahf
push
or
push
xchg
sub
shr
ljmp
lret
fildl
ret
cmp
ror
dec
xchg
jle
dec
push
jl
push
stos
gs
ja
arpl
inc
bnd
insl
mov
popf
mov
das
inc
sbb
in
fadds
fs
insl
loope
sbb
xchg
pop
jno
or
jnp
xchg
fsubl
mov
mov
add
push
shr
sub
stc
mov
cmp
subb
adc
mov
jg
pop
adc
jmp
pop
jno
adc
lret
mov
pop
and
dec
inc
data16
enter
js
cwtl
sub
inc
daa
js
out
or
xlat
mov
xor
rorl
and
mov
jl
push
push
jbe
dec
iret
xchg
cwtl
cmc
sub
ljmp
sub
and
inc
push
mov
jl
mov
leave
mov
inc
je
inc
cmp
ficomps
dec
jge
psrlw
xor
mov
jae,pt
jg
cmp
or
into
mov
pusha
and
xchg
loopne
outsb
outsl
mov
adc
subb
rcrl
sub
add
push
cmpsb
or
sub
push
icebp
push
sub
call
dec
pop
sbb
xchg
incb
adc
aaa
lock
inc
push
cmp
hlt
push
push
dec
push
pop
popa
addr16
cmp
in
mov
dec
je
mov
mov
bound
cmp
inc
inc
cli
push
ljmp
test
nop
imul
push
adc
lods
rcrl
xor
es
inc
in
lods
sbb
int
nop
jl
inc
xor
add
je
push
mov
push
cli
js
into
xchg
sub
ds
jge,pt
and
jns
mov
cli
loopne
imull
mov
or
vsqrtpd
xchg
add
scas
das
sub
cmpsb
movsb
inc
jns
rcr
std
in
cmp
mulb
in
mov
ljmp
sbb
idiv
xor
dec
xchg
mov
lret
push
stos
pop
gs
dec
test
lods
add
outsl
jb
fsubl
cwtl
out
mov
cld
or
mov
jnp
mov
imul
test
leave
in
mov
mov
sbbb
inc
lea
pop
push
dec
insb
jg
cmc
pop
fs
movsl
idivb
sbb
sbb
inc
push
push
push
adc
push
pushf
sub
push
jno
cmp
jp
fistl
cld
out
xlat
popf
outsl
js
imul
sub
sahf
psrad
mov
repz
add
jle
inc
out
push
fcom
mov
ss
sbb
pushf
mov
push
mov
test
ja
into
fdivrl
addl
lods
popa
test
cmp
jno
scas
xchg
add
cld
mov
xor
jb
xchg
and
xor
and
add
js
orl
out
jo
sahf
outsl
sbb
addr16
sub
test
adc
push
daa
adc
pop
pop
mov
jl
imul
repnz
fdivrl
and
push
cs
dec
xor
jno
stos
shl
ja
cmp
outsb
jb
insb
sti
xchg
rcrb
jns
pop
jns
mov
shlb
jae
mov
fstl
imul
pop
xchg
ds
push
loope
popf
add
dec
dec
mov
jb
pusha
xor
dec
pop
pusha
cli
xor
cmpsl
pushw
jmp
add
ret
iret
loopne
fstps
mov
hlt
in
and
inc
lahf
gs
ja
cmp
out
or
in
mov
sti
mov
mov
in
jbe
mov
push
sbb
or
arpl
imul
imul
mov
in
adc
and
std
xor
cmp
xchg
push
ret
inc
lcall
ljmp
adc
xchg
or
aas
inc
in
mov
sbb
xor
xor
mov
jnp
movsl
movsl
jne
mov
frstor
mov
pop
icebp
mov
aaa
xor
leave
xchg
mov
loope,pt
loop
out
idivl
cmc
repnz
xchg
fdivrp
clc
imull
sarb
pop
std
int
cld
lds
cmpsb
test
cmc
jmp
jb
sbb
push
dec
pop
test
je
sbb
jmp
inc
mov
call
mov
mov
call
inc
push
add
xor
rclb
test
add
fidivrs
push
cs
imul
dec
scas
pushf
inc
jl
rolb
arpl
jno
xor
ss
xor
jge
mov
in
mov
mov
ret
jge
cmp
push
pop
mov
out
xor
out
fmuls
ficoms
movsb
sbb
jmp
adc
sub
cmp
pop
xor
popa
ficompl
imul
xchg
add
add
in
cmp
addr16
mov
sbb
xchg
cmc
div
xchg
lret
aaa
and
add
int3
inc
push
pushf
outsb
push
out
out
dec
cmp
arpl
lret
pop
cmp
mov
scas
lret
xchg
daa
sbb
add
and
lea
xchg
ljmp
xchg
cmpsl
or
pop
hlt
int3
push
mov
mov
ss
jge
add
idivb
test
xchg
jmp
addr16
stos
mov
pop
xor
xor
push
test
xor
mov
mov
fs
or
jl
lds
xor
test
stos
daa
decb
dec
int
gs
push
jmp
adc
nop
dec
ret
push
sub
sarb
sbb
bound
mov
cld
enter
fisubs
fwait
xor
test
cmpsl
push
adc
arpl
dec
push
dec
add
and
fsubs
mov
popf
push
push
pop
std
scas
adc
in
dec
loopne
test
push
and
pop
pusha
int
es
jae
xor
xor
nop
addr16
and
int3
push
pop
pop
into
inc
fwait
add
jecxz
cmpsb
pop
in
xchg
xor
sbb
mov
mov
push
pop
test
sbb
push
mov
sub
out
cmp
jnp
das
lahf
inc
shrl
std
cmc
xor
nop
mov
clc
icebp
pop
sub
imul
cmpsb
cmpsl
add
data16
imul
jp
sub
inc
sub
out
or
out
je
mov
mov
lret
mov
mov
ja
cmp
icebp
leave
xlat
test
mov
xor
stos
repz
push
sub
pop
cmp
ds
mov
shll
testl
call
adc
movsl
test
dec
pop
or
rcl
subb
cmpsb
xchg
outsl
je
lcall
loop
mov
inc
std
jb,pt
inc
fisubrl
scas
jle
cld
mov
loop
faddp
pop
clc
sbb
dec
adc
ja
push
lods
jne
addr16
fists
js
pop
jp
push
push
mov
inc
jb
ret
push
ds
adc
push
adc
jp
and
xlat
adc
jle
sbb
push
test
sbb
xlat
fdivrl
lds
mul
loope
je
out
adc
in
mov
fcompl
cmp
insl
or
repnz
idiv
repz
std
enter
movsb
mov
pop
xor
mov
push
fmull
sub
fld
psubb
pop
pop
push
or
and
mulb
jo
shrb
repnz
dec
jns
ja
hlt
jl
push
out
lock
push
sub
pop
and
cmp
stc
test
or
dec
dec
push
push
inc
jge
fimull
push
rcll
pushf
pop
fdivrl
repz
xlat
ja
sbb
mov
lods
aas
cmp
cld
popa
test
aad
xlat
sbb
jmp
ss
fcoms
jne
mov
cmp
cmp
push
enter
mov
xchg
mov
movsb
sub
je
dec
fsubrp
sbb
xchg
cs
dec
xor
add
fisubrl
add
stc
lock
sbb
xchg
pop
fwait
movsb
xchg
insl
pop
jecxz
sbb
cmpsl
push
outsl
add
loope
fistpll
sahf
in
xor
mov
out
fwait
lret
sbb
imul
ret
push
dec
xorb
loopne
lret
sbb
or
in
pop
sahf
mov
mov
mov
pushf
es
imul
jmp
cmp
fwait
inc
or
sbb
push
bound
mov
aam
xchg
xchg
fistpl
popf
jne
cmpl
aas
push
adc
std
or
adc
pop
in
xchg
xor
add
jmp
jnp
lods
stc
and
std
cs
fildl
imul
or
add
add
cmp
pop
inc
inc
mov
imul
push
and
shll
negl
lahf
jns
inc
xchg
push
inc
add
ljmp
test
sti
lods
and
mov
xchg
push
sbb
or
jecxz
lret
inc
jp
out
cmp
dec
xorb
lods
pop
out
stos
jno
add
mov
adc
push
mov
push
fldenv
fyl2x
xchg
and
jo
shl
sub
dec
jp
mov
shlb
jle
fsubs
xchg
insl
pop
pop
pop
movsl
or
shrl
lods
addr16
push
xchg
test
fidivrl
sahf
cmp
add
ror
push
sub
movsl
sub
dec
setge
cmpsl
hlt
and
xor
arpl
imul
pop
lods
sahf
mov
bound
adc
and
jge
pop
and
pop
aad
inc
pop
gs
sarb
and
mov
mov
sbb
mov
mov
mov
xchg
xor
imul
int
loope
push
inc
int3
add
scas
stc
test
andb
negl
rcrl
xchg
adc
pop
dec
test
imul
jae
dec
mov
push
out
std
lcall
push
pop
mov
loope
cmpsb
icebp
lods
gs
inc
cmp
outsb
lods
std
mov
mov
and
push
sub
or
mov
js
xor
inc
dec
jb
jmp
popf
inc
repz
fisubs
cli
mov
test
clc
scas
mov
mov
cmp
dec
or
sub
push
xchg
sbb
sub
cmc
rcll
ljmp
or
sbb
lods
pusha
mov
lock
dec
gs
test
mov
push
sahf
sbb
test
sub
dec
jg
jne
insb
adc
adc
xchg
add
sbb
mov
jle
lods
movsl
daa
rcl
mov
lock
or
lcall
or
or
sbb
jmp
xchg
notl
jae
pop
in
mov
sbb
std
and
mov
mov
shlb
or
xchg
add
push
aam
cltd
xor
cltd
inc
inc
push
and
mov
je
cmp
adc
pop
dec
incb
lret
mov
cld
stos
lock
outsl
cmp
aaa
xor
sub
pop
adc
xchg
mov
inc
sbbl
xchg
loope
push
adc
sub
int
add
mov
lods
adc
xlat
lahf
and
movsl
lea
in
mov
je
sbbl
hlt
sbb
andb
cmp
jo
jg
mov
pop
pop
xchg
sbb
dec
jb
cmp
inc
and
pop
xchg
pop
push
leave
insl
jg
shrl
sbb
cmp
ficoms
imul
loop
in
clc
mov
cmp
loop
and
into
into
cli
shl
out
push
orl
add
insl
leave
jecxz
mov
clc
test
cmp
push
xchg
fldl
adc
adc
enter
add
jge
mov
cwtl
xchg
movsb
or
jae
rorb
xor
push
in
int3
pop
faddl
mov
fisubrs
mov
cmp
pushf
push
sub
lcall
repnz
out
sbb
pusha
enter
inc
ret
dec
pop
xor
shlb
into
subl
xor
jae
pop
lcall
in
pushf
test
mov
xor
add
fwait
xchg
mov
jecxz
inc
push
pop
lods
push
adc
clc
arpl
push
cmp
test
cmpl
arpl
mov
sub
pop
movsb
lods
fs
ret
stc
mov
incb
lods
pop
jne
mov
jne
sbb
jno
outsb
ds
pop
insl
out
mov
gs
sbb
mov
xor
dec
jg
mov
in
xchg
mov
xor
cmp
xchg
fildll
dec
out
dec
inc
outsl
mov
adcb
jmp
inc
xor
jmp
jnp
in
mov
sbb
imul
pop
jge
mov
ja
push
roll
jl
and
xor
fnsave
or
mov
and
mov
ja
fsts
pop
add
jae
fisttps
std
or
lods
movb
mov
dec
movl
inc
mov
mov
adc
jmp
rorb
lds
pop
adc
fs
inc
sbb
scas
or
lods
clc
add
cmp
test
pop
mov
je
jne
lods
rolb
arpl
ret
cld
jns
lcall
inc
jge
and
inc
add
push
jbe
cmp
int
in
out
test
xor
xor
pop
std
movb
outsl
pop
pop
inc
pop
sub
xchg
in
and
mov
adc
add
ret
mov
jne
mov
in
aad
mov
into
jns
divl
dec
stos
cmp
cmc
sti
fcoml
lock
or
add
jle
cs
test
inc
sub
jle
mov
and
inc
dec
dec
add
les
and
mov
ret
lcall
push
sub
movsb
or
inc
sbb
into
add
in
addr16
mov
cmp
xchg
nop
adc
or
mov
push
lock
mov
aaa
push
adc
movsb
loop
sbb
xchg
fldt
stos
jecxz
mov
mov
and
fidivs
xor
cmpsl
loopne
in
fs
mov
xor
rorl
jns
or
lds
lret
int
jl
xor
arpl
add
xchg
jno
fcmovnbe
xchg
mov
loopne
mov
pop
mov
dec
push
addl
fistpll
inc
sbb
clc
dec
dec
push
jae
mov
rcrl
pop
add
dec
push
inc
stos
adc
loop
push
and
jno
enter
add
jecxz
cmpsl
cmp
inc
cmp
imul
sti
jae
xor
es
mov
movsl
mov
mov
loopne
mov
repnz
xchg
xor
xor
rcl
lret
or
xchg
xlat
mov
int
xlat
sub
pop
push
mov
int3
pop
inc
sti
movsb
leave
daa
cmpsl
add
xchg
dec
jnp
test
or
cmpsl
push
jge
dec
pop
or
in
sbb
or
dec
jne
push
dec
adc
loop
pusha
mov
jbe
mov
mov
lds
or
mov
es
imul
or
add
push
xchg
push
add
pop
adc
adc
cwtl
or
popf
out
sbb
std
mov
and
movl
jnp
cmpsb
xchg
adc
mov
cmpsl
divb
icebp
xchg
mov
mov
repnz
cmp
aas
repz
fwait
aad
dec
cmpb
push
dec
ljmp
loope
ds
add
inc
mov
jmp
sbbl
mov
or
and
pop
or
xchg
repnz
neg
movsl
mov
xchg
les
or
push
xor
gs
jne
aas
lret
fcmovnb
pop
inc
out
mov
aaa
scas
inc
xlat
add
inc
lahf
imul
sarb
mov
jmp
subl
int
sbb
xlat
out
adc
enter
lret
jo
aam
pop
pop
mov
cmp
dec
lcall
push
les
test
push
and
out
shl
xor
stos
xor
xlat
adc
cmpsb
sub
jmp
lcall
dec
inc
jmp
jge
push
xchg
fistl
adc
and
mov
dec
pop
decb
jns
push
out
js
jg
sbbl
stos
rcrl
mov
jbe
add
insl
mov
jnp
mov
daa
sti
pop
insl
bound
dec
xor
add
or
pop
xor
mov
inc
inc
into
mov
xor
loop
mov
push
mov
or
int
mov
xchg
add
insl
mov
hlt
push
pop
lock
repnz
call
arpl
pop
jo
sub
pop
xor
movsl
sti
lahf
adc
lods
aad
dec
mov
popa
mov
xor
xor
push
into
lcall
bnd
imul
stos
dec
into
movsb
mov
xchg
ja
sbb
cmpsl
pop
sbb
movb
jno
fdiv
insl
mov
call
outsl
push
lret
loope
aad
pop
mov
ss
repnz
sbb
movsb
rcr
jl
js
cwtl
or
jno
sub
leave
mov
aaa
sub
fsubs
int
xchg
jg
push
scas
inc
int3
aad
in
mov
dec
sbb
pop
popa
push
mov
loopne
cmpsl
jo
bndstx
mov
cmp
push
push
push
je
imul
jno
adc
push
xor
add
jle
pop
push
leave
inc
sub
jl
int
xor
jno
pop
push
sub
mov
in
rcll
fs
sub
xor
std
jmp
inc
inc
decl
mov
shl
sub
ret
les
es
jmp
inc
into
push
hlt
mov
mov
push
jne
pop
sti
bnd
adcl
sbb
push
cmpsb
cld
pop
mov
int3
iret
clc
mov
rolb
enter
imul
call
sbb
leave
push
mov
mov
jo
testb
int3
and
aaa
jmp
outsl
or
mov
and
xchg
sub
fsts
mov
cmp
out
rorb
sub
jl
clc
inc
std
mov
fiaddl
jmp
jmp
sub
iret
push
mov
ficomps
cli
mov
inc
lods
and
and
loope
movsb
cmc
push
push
cmc
mov
jae
xchg
mov
shr
mov
dec
push
inc
adc
movsl
mov
cmc
insb
cs
inc
insb
fdivl
inc
push
or
dec
popa
cmp
add
and
fidivrs
aas
in
out
pushf
stc
popa
and
cmp
dec
jmp
cmp
and
sub
adc
and
pop
adc
cld
pop
sti
orb
mov
int3
in
leave
xchg
jae
mov
sahf
sub
xchg
xorb
jecxz
mov
es
divb
lahf
jb
jbe
insl
xchg
jno
cli
mov
push
cld
int
test
cwtl
dec
sahf
fnsave
ss
in
jg
push
imul
xor
std
into
rol
lods
fwait
dec
bound
push
into
movsl
cmp
cs
jg
mov
in
jecxz
push
stc
rcl
cmp
es
cmp
adc
insl
icebp
rcll
mov
cmpsl
test
mov
dec
and
mov
test
lahf
xor
hlt
jmp
jmp
mov
repz
jge
sarl
aam
xchg
int3
pop
and
sbb
or
shrb
in
stos
pop
mov
mov
frstor
jns
mov
shl
loop
xor
and
mov
push
push
pop
mov
loopne
and
sbb
leave
push
aad
fst
pusha
cmp
adc
jns
movsl
cmpsb
outsl
or
cmpsl
mov
mov
xchg
fstps
mov
and
fbld
xchg
pop
inc
jb,pn
push
cltd
add
fiaddl
fdivl
int3
or
sub
mov
dec
or
aad
xor
inc
mov
mov
add
mov
mov
sbb
dec
inc
push
sub
inc
shr
xorl
je
adc
stos
mov
fs
ror
bound
enter
pop
into
sbb
mov
mov
inc
dec
movsb
mov
std
xor
adc
out
dec
adc
enter
arpl
cmp
pusha
addl
test
and
cltd
test
jecxz
andb
test
pop
pop
in
jb
leave
je
push
popa
jne
shl
and
push
cmp
and
xchg
adc
xor
mov
loop
mov
test
dec
mov
fcoml
sub
test
in
push
add
mov
jne
pusha
xor
mov
imul
movb
adc
aam
mov
and
sbb
addr16
fcoms
aaa
pushf
cmp
xchg
mov
stos
fucom
ljmp
ljmp
pushf
lret
imulb
mov
sub
cs
rclb
enter
out
int
adc
jecxz
dec
mov
xor
sqrtps
push
loop
popf
and
jl
cmpsb
inc
adc
cmp
lahf
in
mov
push
dec
movsl
mov
lods
jo
subl
mov
sub
dec
ss
or
imul
cmc
pusha
daa
mov
enter
out
or
mov
rcl
out
int3
test
add
shr
outsl
sbb
ljmp
mov
aam
data16
xor
mov
pusha
out
mov
fisubs
fstpt
or
icebp
je
xor
mov
and
fdivl
mov
pusha
add
stos
fistpl
movsb
cs
sbb
pop
or
loop
int3
shl
insb
jl
mov
jg
aad
pop
ja
mov
lret
adc
decl
adc
cmpb
mov
mov
addr16
push
mov
xchg
mov
jmp
stos
pop
popf
orl
nop
js
movsb
orb
or
cld
mov
mov
movsl
jns
cld
out
sub
ds
mov
mov
leave
dec
notb
adc
arpl
and
xor
mov
jl
sub
cld
cmp
and
push
cs
adc
js
sub
icebp
repz
jno
pop
jnp
cmp
inc
pushf
push
dec
movsl
call
mov
inc
vphadduwq
jae
in
cmc
out
mov
mov
pop
rcr
ret
jnp
fcoml
mov
sarl
and
out
xchg
jg
pop
cwtl
lret
push
imul
push
adc
adc
ret
sub
outsb
sub
dec
push
aam
mulb
pusha
movsb
jae
rorb
pop
jo
push
or
push
inc
inc
je
sub
dec
es
rorl
cmpsl
sbb
push
pushf
dec
iret
mov
fisubrl
jns
dec
dec
cwtl
jl
push
fcmovbe
roll
sbb
dec
push
cli
vprotb
loopne
push
or
rcl
test
shlb
jae
movb
adc
jae
popa
lret
cmp
lds
cmpsl
orb
movsb
aam
in
testl
rcrl
jbe
push
mov
mov
pop
inc
pushf
test
pop
clc
xchg
jg
stc
sub
jae
test
and
sub
sub
rorl
popf
pop
mov
mov
jp
leave
cltd
addr16
test
js
scas
fsubrl
out
mov
sub
mov
loop
xlat
aad
jno
andl
std
sub
clc
pop
lret
mov
ja
repnz
in
cmp
nop
popf
lahf
lods
dec
in
mov
imul
inc
jne
fimull
pop
insb
push
mov
push
hlt
inc
mov
pop
into
test
insl
mov
ffree
rorl
add
out
cmp
jns
jle
inc
sub
int
mov
add
scas
test
or
test
jo
add
jge
mov
mov
mov
sbb
fsubr
add
mov
sti
test
add
push
setg
inc
leave
popf
or
ret
jmp
pop
cmc
sub
mov
or
nop
movsl
lea
aaa
mov
sbb
hlt
mov
inc
or
push
aas
mov
xor
or
das
outsl
jecxz
jle
push
enter
adc
mov
pop
xchg
loopne
xor
jae
test
std
clc
xorb
sbb
je
inc
and
cld
mov
test
inc
fbstp
not
testb
test
pop
scas
dec
pop
je
add
pop
loop
mov
ret
js
cmp
sbb
ljmp
sahf
mulps
mov
cmp
inc
scas
pushf
push
add
mov
arpl
jge
mov
dec
loopne
movsb
xchg
mov
push
outsb
loopne
xor
mov
ljmp
test
or
jg
leave
enter
add
sbb
mov
pop
inc
jns
ja
ss
mov
xchg
mov
dec
jg
push
js
pushf
mov
stos
lahf
or
jmp
pop
mov
xor
mov
scas
push
out
call
pop
mov
mov
cwtl
xlat
lahf
xor
jg
das
lcall
mov
repnz
cmp
xchg
adc
test
loop
sti
out
cmc
and
inc
sbb
push
pop
test
jno
push
arpl
popa
inc
data16
sbb
mov
adc
sub
movl
lret
sub
inc
cltd
ds
js
addl
jmp
pusha
test
push
mov
mov
ljmp
or
jae
arpl
or
xchg
loop
outsl
test
mov
adc
sti
pop
shl
lea
lret
movsb
or
xchg
rcrb
cmp
pusha
rcll
movsb
mov
lea
mov
push
jecxz
and
in
in
hlt
mov
add
mov
scas
ret
sub
stc
aaa
jbe
mov
fnstcw
aam
fsub
imul
mov
dec
mov
or
addr16
nop
mov
stos
mov
mov
mov
ret
push
mov
jo
lea
daa
cmp
xchg
int
dec
cmp
xchg
pop
push
mov
mov
add
cltd
add
jecxz
pop
inc
aas
mov
cmp
aas
push
sbb
sar
iret
and
arpl
adc
xorl
cmpl
add
stos
ret
or
push
inc
add
insb
inc
lahf
into
sbb
imul
in
or
sub
aas
fucomip
adc
sbb
mov
mov
popf
sub
or
das
cli
ret
dec
addr16
jbe
test
jecxz
dec
and
xor
cmp
fnstsw
mov
xor
lahf
adc
mov
jns
aas
dec
in
daa
push
jne
ss
xchg
add
pop
int3
or
inc
stos
lss
mov
jmp
inc
es
repnz
inc
aas
idivl
aaa
xchg
inc
aam
sahf
xchg
ljmp
push
lahf
cmp
in
push
loope
lods
mov
pop
lcall
gs
stos
and
cltd
jne
aad
mull
pop
rclb
push
aad
pop
xor
mov
fidivrl
loope
insl
and
lret
scas
rolb
lock
or
xchg
ret
inc
and
push
dec
jns
test
mov
jo
clc
jo
sub
xor
cld
add
lea
cs
outsl
aad
and
mov
movsl
xchg
push
test
icebp
enter
lret
jp
sub
leave
adc
push
pop
adc
mov
in
or
jp
mov
pop
js
bound
stc
popf
inc
push
sub
push
sbb
pop
push
pop
and
sub
sub
or
imul
cmpsb
repz
shl
dec
sbb
or
das
lcall
leave
daa
insb
cmp
jb
in
mov
add
lahf
lret
test
adc
push
cltd
mov
mov
aad
movsb
push
insb
and
or
xchg
out
fbstp
out
inc
and
test
mov
repz
pushf
imulb
cmp
mov
add
test
inc
inc
dec
push
jne
rolb
cs
jae
and
je
in
loopne
sbb
pop
int
push
sbb
movsb
movsl
dec
in
push
roll
push
int
mov
push
repnz
and
lods
mov
lret
xchg
mov
jb
add
arpl
clc
ficoms
hlt
outsl
mov
aas
cwtl
mov
scas
push
fs
out
movsl
jecxz
faddl
hlt
mov
xchg
data16
test
jno
dec
pop
ja
sti
push
sub
push
jp
or
js
mov
push
jecxz
mov
sub
addr16
nop
popa
cmp
xlat
out
aam
sub
iret
mov
into
jnp
pop
ret
js
lret
addb
lahf
cmp
pop
mov
dec
cmpsl
push
inc
ret
ret
pushf
sbb
xchg
lret
pushl
xor
inc
bnd
iret
idivb
dec
and
es
adcl
enter
xor
jmp
out
or
int3
loope
xor
sbb
or
push
stos
mov
pop
cwtl
lret
mov
ja
cs
push
inc
insb
loop
cltd
xchg
or
pop
inc
outsl
ret
shrb
jo
pusha
std
mov
icebp
shlb
les
std
add
loopne
outsl
mov
out
dec
adc
add
push
mov
push
mov
ds
xlat
insb
pop
nop
std
lret
pop
insl
sbb
sub
cltd
lds
sahf
sbb
cli
addr16
push
inc
mov
mov
call
fwait
sub
popf
sbb
pop
adc
adc
lock
shll
ret
adc
loop
pop
mov
or
stos
cmp
or
pop
xor
pop
add
xchg
jns
pop
mov
jns
or
aam
mov
sbb
jmp
lretw
jmp
fisubl
negl
push
jg
data16
data16
cltd
int
mov
mov
or
xchg
addr16
cmpsl
fistpll
push
cmp
xchg
adc
divb
jg
rcrl
push
hlt
movb
shrb
out
mov
mov
sbb
or
into
movsb
xorb
inc
ss
test
insl
pop
fwait
pop
push
jno
jnp
add
out
add
xor
mov
icebp
sbb
push
pusha
test
push
loop
lock
adc
or
out
xchg
xchg
iret
inc
leave
inc
in
sub
testl
psubw
pushf
mov
mov
pop
xchg
lret
push
xor
xchg
dec
cltd
ret
and
and
push
sar
fbld
cli
pop
push
push
push
subb
stos
fidivrs
aad
test
ss
repnz
xchg
cld
fstpt
and
add
push
push
xchg
fmull
test
das
sub
jmp
lcall
shufps
jo
loop
mov
cwtl
lock
fsubrs
inc
mov
mov
test
inc
mov
testl
mov
mov
and
test
jbe
cltd
hlt
cmpsl
mov
arpl
jmp
inc
push
aad
push
mov
fwait
mov
imul
pop
popa
movsl
adc
test
clc
aad
or
push
xchg
pop
addr16
ftst
mov
mov
jg
mov
lods
or
dec
leave
and
rcll
loope
pop
ja
repnz
js
adc
dec
dec
pop
std
shrb
push
xor
in
xchg
nop
pop
push
xor
mov
in
mov
out
adc
dec
pop
flds
sub
loopne
inc
cli
sarl
fistps
fldl2e
outsb
cmp
fwait
and
cmpsb
jecxz
ficompl
mov
leave
fcoms
bound
sbb
mov
repnz
repz
dec
lods
jb
ret
scas
test
jp
jg
or
lods
out
gs
jno
lcall
lds
xchg
fwait
imul
inc
and
fwait
mov
or
hlt
add
lods
leave
mov
mov
jmp
pop
loope
or
xor
iret
loop
test
mov
or
push
jp
out
jg
xchg
mov
test
out
or
movsb
mov
inc
test
xchg
xchg
pop
aaa
shl
ljmp
rorl
fdiv
call
movsl
adc
sarb
ret
push
fisubl
iret
mov
sub
arpl
inc
fs
lret
inc
cmp
fmull
shrl
into
cs
jmp
std
js
stos
cmpsl
mov
cmp
outsb
insl
lods
pop
adc
sbb
adc
fildll
insb
popf
push
loope
clc
adc
cltd
xor
sub
or
cmc
pusha
or
int3
sub
test
xchg
into
mov
pop
dec
test
mov
aam
les
cmp
xor
push
cmp
in
mov
add
aaa
sarl
push
cld
mov
rorb
mov
not
sbb
xchg
lods
subl
orb
add
inc
imul
popa
jo
sbb
rorb
adc
sbb
push
and
sbb
aam
mov
push
jne
arpl
dec
sbb
mov
jbe
jb
lahf
jae
sub
mov
sbb
ja
dec
adc
sbb
lods
jo
xchg
imul
fcmovbe
jecxz
dec
test
xor
push
in
jne
test
sub
stc
lahf
js
mov
daa
stc
fwait
aam
mov
mov
push
addl
pop
xlat
xor
jae
sbbl
jbe
and
jns
dec
or
orb
repz
push
and
imul
inc
aaa
cwtl
dec
out
and
cli
lea
xchg
imul
or
sub
outsb
mov
jo
out
pop
pop
cmp
arpl
das
arpl
xor
adc
jge
mov
insl
sub
dec
xor
ja
mov
pop
int
add
lock
imul
loopne
mov
test
popf
lock
cmp
ret
mov
clc
jb
cmp
lcall
push
cmc
fistl
lahf
jae
jecxz
popa
pop
inc
mov
cmp
sbb
sbbl
jmp
repnz
adc
dec
insb
scas
jg
or
sub
xor
dec
out
push
and
call
sbb
mov
xlat
ss
adc
push
imul
dec
xor
stc
in
xchg
and
jbe
mov
add
add
outsl
mov
xchg
cmp
nop
andl
pop
xchg
fdivrp
or
iret
mov
cli
xchg
mov
je
push
mov
adcl
and
cmp
pop
push
xchg
popa
mov
mov
jnp
sub
inc
sbb
mov
aas
jns
mov
in
mov
cmp
scas
les
add
pusha
popa
cmp
jge
cmp
int
and
leave
or
inc
jbe
mov
dec
pop
xchg
add
xchg
or
push
dec
cmpsb
dec
ja
cmp
ljmp
mov
rolb
sbb
loopne
mov
jge
push
icebp
push
je
mov
shlb
arpl
stos
push
stc
and
dec
out
push
cmc
insb
loopne
dec
jb
or
mov
jb
cmp
loopne
or
mov
cmp
mov
jecxz
xchg
dec
pop
push
xchg
sub
je
test
ss
jb
push
int3
lcall
pop
mov
mov
push
dec
sar
in
lock
dec
xor
mov
dec
testl
mov
pop
mov
test
out
jbe
pop
lods
dec
add
lods
incl
mov
sbb
enter
lods
adc
sub
in
push
popa
add
sbb
jl
dec
fwait
mov
hlt
rcrb
fiadds
pop
adc
jno
jge
sub
out
shll
je
pop
adc
jle
loop
insl
arpl
cmp
fdivr
stos
addl
in
inc
push
movsl
shlb
loop
sarl
repnz
mov
cli
xchg
mov
jo
adc
jo
inc
cld
and
jge
mov
mov
aam
call
xlat
jbe
mov
pop
push
out
iret
or
xchg
repz
mov
loope
pusha
std
out
jne
aas
mov
sub
ret
or
mov
loop
or
ret
jno
rcl
dec
and
out
jbe
lret
jbe
or
sub
data16
mov
mov
lds
stos
or
mov
lcall
add
jecxz
bound
xor
mov
clc
mov
mov
push
lods
sub
jb
mov
mov
add
test
imul
mov
sub
test
cltd
ffreep
cmpsb
push
or
sub
in
mov
rorb
scas
and
cmpl
nop
pusha
cld
test
movq
test
jne
dec
andb
cld
mov
out
into
loopne
mov
mov
cmp
mov
push
lods
jl
mov
aam
daa
xchg
imul
or
sbb
xor
pop
lock
dec
mov
pop
jecxz
push
mov
std
xor
xchg
cld
pusha
je
sbb
repz
in
roll
scas
jno
pop
popa
es
mov
pusha
leave
into
js
xchg
fidivrl
shl
mov
mov
sbb
fdiv
pop
xorb
aaa
in
cmpsb
push
push
cli
dec
shlb
imul
add
mov
pushf
movl
cmp
ret
in
sub
jmp
mov
aaa
xchg
jnp
or
mov
inc
repz
pop
icebp
addl
cmp
ret
ljmp
in
sub
cld
shll
dec
call
not
popf
movswl
adc
xor
adc
and
push
mov
cmpsb
ljmp
adc
jns
cwtl
sbb
repz
in
in
pop
cli
mov
shrl
ljmp
fmull
inc
into
jns
jle
inc
lret
jg
cmp
cwtl
fstp
add
scas
adc
enter
imul
push
daa
xchg
xchg
mov
push
push
popf
push
xor
pushf
jb
les
mov
push
jecxz
cmp
jl
into
sbb
or
pop
mov
cld
movsl
shrl
mov
push
mov
jnp
loopne
jne
int
wrmsr
fiaddl
sbb
push
popa
inc
dec
cmp
loope
jbe
and
mov
aam
test
xchg
mov
push
pushf
sti
icebp
jge
test
add
or
cmc
sub
test
in
sbb
mov
aas
movsb
push
mov
gs
add
jge
bound
hlt
xchg
lods
push
lcall
insl
test
xchg
scas
dec
scas
int
adc
arpl
add
dec
imul
xchg
mov
dec
int
into
inc
mov
dec
repz
adc
dec
test
inc
cmp
shll
fstps
inc
mov
pop
test
pop
sbb
mov
xchg
into
or
push
xor
cwtl
divl
push
cmpsl
add
inc
adc
or
mov
test
mov
cli
mov
pop
out
xor
mov
outsb
ds
cmp
cmpsl
pop
push
repz
inc
pop
ret
or
ret
repnz
arpl
bound
loopne
mov
int3
mov
pop
sti
cmp
push
mov
add
out
lcall
arpl
inc
sbbl
cmp
nop
xorl
xor
mov
fimull
jnp
mov
clc
cmpsl
jo
inc
lret
mov
outsb
fildl
out
sub
out
inc
stc
xor
shll
arpl
xor
sub
mov
repz
pop
sbb
fs
fcoml
stos
gs
fcoms
mov
jecxz
jge
addl
je
cmp
push
fisubl
mov
imul
or
into
mov
xchg
push
outsb
jg
pop
mov
cld
int
movsb
cmp
addb
hlt
addr16
aas
xchg
cmp
pusha
xchg
inc
lods
iret
jecxz
dec
xor
test
lahf
jns
fwait
ja
cmp
push
call
out
xlat
and
and
jae
sub
and
gs
jmp
push
dec
repnz
fbstp
out
dec
imul
and
fcoml
cmp
movsb
imul
dec
mov
pop
cmp
das
jl
iret
cmp
inc
repnz
leave
imul
jp
sub
out
arpl
pop
out
scas
push
and
sbb
jmp
adc
inc
shll
push
inc
movsb
loope
std
jmp
shll
mov
inc
inc
andl
cmp
test
divb
inc
mov
pushf
mov
push
movl
mov
jp
into
xchg
stos
packsswb
out
pop
mov
out
sbb
adcb
subl
cmp
push
jae
add
in
xlat
xchg
mov
xor
lahf
clc
sbb
gs
cli
add
gs
shrb
and
mov
enter
lock
loopne
and
push
aaa
xchg
fisubs
pop
cmp
fisttpll
lcall
dec
rcrl
inc
leave
dec
mov
jl
or
lcall
cld
push
psubsw
cmp
push
xchg
xor
xor
stc
xor
xor
sarl
mov
ret
dec
adc
sub
ja
sbb
es
das
and
adc
mov
dec
insl
push
sbbl
xchg
repz
pushl
cld
xor
int3
js
loopne
imul
cltd
xlat
sti
mov
test
xor
xchg
xor
imulb
test
rolb
popa
mov
aam
mov
mov
push
fcmove
mov
inc
mov
jl
sahf
pop
leave
xor
cmc
jb
sbb
and
and
ret
jbe
push
lods
and
jns
fdivrl
faddl
xor
aad
or
jle
adc
or
popf
jmp
pop
add
xchg
cmpsb
cmp
jp
jle
mov
sub
xchg
mov
sar
xlat
call
push
dec
mov
orb
cmpsl
xchg
xchg
mov
or
sahf
and
xor
cmpb
or
repnz
sti
jmp
cwtl
mov
sub
jnp
xor
cmc
fisubrl
adc
mov
int
inc
out
cltd
sbb
adc
mov
into
xchg
mov
mov
or
adc
dec
and
xor
lods
sub
loopne
push
dec
lods
sbb
ja
push
dec
mov
in
mov
jl
xorb
test
fdiv
mov
or
inc
pop
fldl
aaa
aaa
fistpll
pop
hlt
mov
add
pop
dec
cmc
lret
ss
popf
addr16
sbb
sarb
out
sbb
pusha
neg
ljmp
cmp
push
or
icebp
leave
push
ficomps
lahf
cmp
dec
mov
sub
dec
sbb
ljmp
pop
daa
adc
outsb
sub
adc
xor
aad
call
lea
lock
je
inc
push
stos
xor
inc
dec
xchg
dec
cs
sarl
pushf
and
xchg
enter
je
fcoms
push
pop
fsubr
sub
aad
lods
pop
icebp
adc
jno
mov
adc
adcb
aam
lahf
data16
lahf
ss
clc
xchg
inc
out
sub
fimull
les
dec
stos
loopne
sahf
mov
adc
pop
push
jne
jle
insb
dec
dec
jne
and
or
out
or
pop
loopne
cmp
fistps
push
pop
cmp
rolb
test
icebp
rcll
int3
sub
cmp
int
xor
faddl
ret
movsl
adc
lahf
insl
roll
push
call
jae
fs
push
cltd
and
xchg
lcall
mov
cmp
shl
fisubl
pusha
inc
xchg
mov
pop
cli
push
fadds
xor
js
xchg
adc
lock
cli
inc
cmp
push
or
push
adc
mov
adc
test
pop
sarb
mov
jge
arpl
pop
bnd
pop
in
and
std
dec
push
scas
cmp
in
pop
cmp
pop
es
je
mov
push
cmc
shl
rol
jns
mov
adc
and
cmp
test
push
int3
inc
dec
mov
jmp
fildl
js
jge
repnz
aad
fwait
jg
inc
mov
push
cmp
jg
aam
movsl
xor
or
mov
pop
mov
dec
lahf
sub
bound
mov
in
and
lahf
in
cltd
dec
and
jecxz
jne
mov
adc
daa
in
inc
or
loop
inc
stc
sbb
mov
fwait
or
adc
ds
mov
add
push
int
jmp
ret
mov
cmc
sub
or
mov
adc
jle
popa
and
js
jg
into
push
sub
stc
cmp
cmp
std
fwait
dec
das
shr
mov
fnsave
jge
out
cmpl
outsb
stc
push
js
fiadds
adc
fsubl
fneni(8087
sbb
lahf
sub
sbb
loopne
rolb
nop
fwait
push
jae
cmpl
jle
lahf
mov
pop
scas
jae
cmp
fsub
add
jge
push
dec
mov
sub
or
out
in
js
test
faddl
dec
push
cmp
push
adc
cmc
mov
push
sub
subb
push
loop
mov
int
mov
arpl
mov
lea
xchg
lds
add
or
mov
call
jmp
push
movsb
mov
test
cmp
or
cmp
sub
dec
lock
mov
call
inc
iret
fcmovb
sarl
shrb
mov
dec
les
incb
mov
imul
test
mull
into
jmp
filds
or
mov
in
addr16
insl
sbb
decl
ret
int
xchg
push
cmpsl
pop
cmp
inc
fdivrs
repz
or
pop
mov
lret
pusha
mov
mov
loope
loop
shlb
jle
pusha
sbb
xor
or
dec
inc
push
and
adc
rol
arpl
mov
aaa
sbb
gs
repnz
or
sub
in
cmp
adc
inc
or
xor
mov
sbb
daa
mov
es
inc
sub
xor
shrb
pop
or
xchg
sub
jge
cli
iret
in
ret
push
fabs
js
cmp
and
xchg
push
xchg
add
sub
movsl
mov
fs
out
jae
jmp
and
xchg
jp
sub
xor
add
cmpsl
roll
or
fistps
out
fildll
sub
adc
jmp
push
jg
add
outsl
push
xchg
pop
faddl
xor
xlat
js
mov
test
ficoml
in
imul
cmpsl
aaa
outsl
sahf
and
popf
nop
mov
or
push
adc
insl
lods
adc
jb
sbb
cmpsb
ret
sbb
cs
pop
cmp
cld
lahf
mov
cwtl
jnp
stos
inc
pusha
ret
out
out
lock
dec
adc
dec
jp
jl
or
js
daa
push
jo
xchg
std
xchg
rclb
add
mov
jb
add
fucomip
pushf
sub
cwtl
int3
inc
push
ja
push
jge
and
mov
push
dec
dec
jge
in
adc
stos
aaa
or
push
stos
cmp
pop
dec
repnz
cmp
ret
add
jo
sbb
cs
iret
dec
and
call
dec
out
into
subl
cmp
mov
fldenv
mov
push
sub
int
popa
stos
mov
or
out
imul
and
xor
cs
stos
mov
vaddps
test
das
jecxz
aam
dec
lahf
insb
in
push
cltd
fwait
cmp
jl
int
scas
ficoml
mov
popa
je
and
into
xchg
leave
jnp
jl
lods
dec
jg
sub
mov
int
inc
mov
nop
xor
push
iret
cmc
cmp
rorl
dec
aam
lea
ss
mov
ficoml
shr
add
inc
jmp
clc
inc
xorb
popf
xor
dec
cmp
mov
shrb
mov
mov
jo
pop
or
push
stos
mov
pop
pop
frndint
push
je
sbb
aam
inc
and
data16
sti
xchg
les
sub
testb
test
jmp
jb
ds
mov
test
notb
aas
adc
shll
sbb
dec
mov
test
mov
jle
shlb
mov
movsl
and
push
enter
mov
insl
adc
jecxz
adc
mov
sub
arpl
daa
jbe
pusha
fdivrl
insl
cmp
push
jne
aas
add
andl
or
mov
jp
jne
imulb
js
xchg
mov
repnz
inc
int
jg
outsb
adc
add
loopne
or
jnp
ljmp
repz
push
ljmp
and
aaa
outsl
and
add
jo
cs
outsl
lret
jb
inc
fcomps
js
into
cs
and
xor
loope
cmp
inc
and
and
arpl
aaa
push
add
sbb
mov
cwtl
dec
or
repnz
sbb
cmc
inc
rcrl
pop
xor
sti
jl
mov
addr16
and
in
fnstenv
mov
rcrb
xchg
test
cwtl
push
mov
push
xor
adc
scas
into
sti
mov
adc
inc
in
cltd
std
roll
inc
loope
dec
adc
inc
lret
xchg
out
scas
dec
dec
xchg
test
insl
xor
cmpl
push
pushf
das
fstl
in
pop
aad
rcrl
cmp
repnz
mov
test
fmulp
frstor
jmp
adc
lahf
cmp
rcll
rcrl
cmpsb
mov
sbb
lret
adc
std
push
cmp
push
pop
ds
push
pop
imul
xchg
popa
mov
lret
cltd
pop
insb
les
mov
xor
addr16
cmp
test
out
jno
sbb
sbb
pop
es
jmp
xor
sub
jbe
ret
lds
and
mov
or
or
iret
and
mov
addr16
pop
fistpl
lcall
xchg
xor
ja
movsb
into
mov
fcomps
nop
xor
jbe
push
pop
insb
loop
push
cmp
sarb
aad
xchg
out
outsb
lret
in
clc
cmp
out
movsl
inc
xor
mov
and
imul
out
cli
aam
xchg
add
dec
mov
stos
cmc
cld
shrl
aam
pop
xor
add
mov
cwtl
cmp
or
adc
jge
aas
mov
adcb
adc
pop
loope
pop
lds
push
stos
cmp
add
fnsave
dec
int3
outsb
mov
icebp
or
faddl
push
cmpsb
mov
push
je
call
cli
adcb
sahf
comiss
mov
mov
lret
iret
mov
mov
pop
fidivrs
pop
inc
inc
mov
cmc
inc
dec
push
clc
insb
xchg
fwait
aad
pop
scas
and
mov
fdivl
scas
movsl
in
add
aaa
and
mov
js
jno
ror
fwait
mov
pop
rorb
inc
xor
bound
jmp
sub
dec
aam
inc
inc
fcomi
adc
cmp
leave
cmp
xchg
ja
inc
lods
cmc
pushf
adc
adc
lock
ss
dec
push
fstpt
mov
pop
ja
pop
xor
or
and
fsubs
pop
mov
out
inc
in
sub
dec
sub
ror
sub
sub
adc
pop
push
push
movb
push
push
add
sti
adc
push
cld
pushf
sub
les
sub
mov
fbstp
xor
dec
pand
std
xor
or
filds
jne
inc
cs
rcll
gs
mov
movsl
popl
sbb
mov
out
mov
cltd
cwtl
aam
add
cmc
daa
or
aas
sbb
enter
push
jg
and
mov
rcrb
mov
dec
push
sub
ljmp
lret
cmpsb
mov
mov
cltd
fnstsw
or
in
push
or
pop
xlat
clc
mov
and
pop
mov
push
aam
mov
fwait
out
push
mov
in
pop
js
xchg
inc
mov
adc
mov
pop
repz
inc
pop
push
inc
xchg
jae
jb
xor
popa
xchg
lcall
push
imul
jnp
pop
ss
jle
nop
aam
mov
dec
xchg
inc
into
cld
jecxz
stc
sub
xor
lcall
sub
add
ds
or
pusha
test
and
inc
mov
add
das
inc
cld
mov
cmp
inc
in
dec
or
add
xchg
pop
cli
test
aas
sub
dec
stos
jp
mov
cwtl
inc
dec
jae
mov
aas
les
and
lods
jmp
stos
mov
scas
hlt
cli
int3
repz
dec
les
leave
mov
mov
shrl
loope
outsl
cmp
mov
dec
mov
dec
jmp
jle
sub
push
call
push
mov
pop
or
jp
nop
and
xor
pop
mov
sbb
rol
cmp
cmp
inc
addr16
sbb
push
jb
int3
jae
mov
test
cs
jns
add
fnstenv
jo
pop
popf
pushl
inc
mov
mov
nop
xchg
outsb
xchg
repnz
cld
shl
mov
mov
in
add
jmp
into
adc
out
adc
jb
in
jb
push
push
mov
loop,pt
sub
mov
or
inc
push
push
pop
loopne
jo
lahf
dec
jno
and
dec
mov
jg
jle
into
jne
repz
arpl
insl
jmp
test
mov
push
fnstcw
orb
push
add
int3
int
push
std
jp
push
pop
insl
xchg
cmc
lahf
xchg
test
and
dec
das
sahf
inc
sahf
fbld
inc
push
sti
xlat
loop
stos
push
jl
push
aam
popf
fimuls
adc
mov
fwait
scas
rcr
out
add
sub
rorb
cmpb
pop
lahf
mov
inc
push
mov
dec
xor
mov
sbb
jne
push
dec
mov
ss
daa
in
fs
mov
and
xor
or
int3
popf
mov
icebp
int3
add
movsb
je
insl
divb
pop
lock
add
push
pop
sub
sub
inc
mov
loop
xor
mov
adc
dec
fs
xchg
jle
imul
pop
push
or
js
out
xchg
cmp
nop
sbb
arpl
xchg
mov
cltd
scas
cltd
jmp
push
mov
push
sti
insl
mov
decb
jne
test
and
xchg
mov
mov
pop
fcompl
push
in
iret
or
ja
mov
cmpsl
xchg
xchg
loope
xchg
xor
or
hlt
and
mov
mov
add
cwtl
fsubrs
and
aad
xchg
sub
xchg
or
aam
les
das
xchg
dec
lcall
mov
movsb
je
inc
shl
addr16
stc
in
or
arpl
outsl
add
mov
jp
mov
mov
sbb
xor
jns
mov
xchg
sbb
daa
fwait
je
push
sub
ja
mov
mov
lds
pop
mov
mulb
sti
sub
repz
dec
or
out
sbb
cmp
sbb
push
popf
loopne
cmp
jg
mov
fbstp
jp
rcll
loope
xchg
push
push
cld
aaa
xchg
clc
minps
mov
push
jb
stc
add
rcrb
inc
pop
dec
leave
insb
out
imul
mov
and
lea
mov
xor
jnp
bound
into
add
inc
fcmovu
mov
outsb
dec
jo
jle
aaa
or
mov
dec
addr16
cltd
lea
loop
push
cli
add
shll
mov
and
je
inc
lods
pushf
dec
idiv
cwtl
and
sarb
dec
inc
int
in
mov
enter
gs
fs
inc
dec
xor
jmp
cmpsl
arpl
fcomp
int3
jnp
movsb
outsb
sbb
mov
dec
stc
out
jge
call
movsl
dec
sub
test
dec
jns
aam
pop
pop
jp
pop
jmp
mov
xor
adc
xchg
dec
out
push
add
cltd
mov
adc
scas
mov
aad
icebp
imul
push
subl
ret
and
fidivs
out
mov
pop
add
cmpsb
out
fwait
dec
mov
jmp
shl
jge
or
jmp
loope
fdivrl
cmp
pop
pop
xchg
in
xor
leave
gs
icebp
push
sub
scas
mov
bound
xchg
lret
stos
sbb
sbb
sbbb
lret
in
sahf
and
ret
inc
iret
aas
mov
or
or
aas
push
inc
addr16
inc
jno
aad
jo
je
push
add
pushf
rcrb
insl
ss
cld
mov
shrl
jo
shll
mov
fs
lret
mov
pop
mov
movsl
jns
loope
fs
jno
aam
sti
mov
inc
fcoms
das
inc
adc
daa
mov
jl
add
insl
adc
xchg
mov
cmp
arpl
stos
stc
mov
in
or
jnp
inc
cmp
shll
xchg
xchg
aam
decb
outsb
jl
mov
jmp
leave
and
lods
divb
fimuls
xor
orb
fimuls
add
mov
mov
sbb
jl
daa
jno
popa
sub
push
sub
adc
lahf
add
and
lahf
jp
mov
xchg
xchg
sub
sbb
out
adc
inc
mov
mov
aaa
out
arpl
dec
pop
lret
xor
mov
dec
into
enter
out
jne
jns
jp
inc
aas
pop
aaa
int
int
test
andl
mov
pop
xor
loop
in
icebp
enter
xorb
cmpl
sub
mov
movsb
and
es
pusha
mov
mov
bswap
sti
pop
aas
mov
add
mov
lcall
scas
bound
out
adc
outsb
mov
lds
stos
and
jg
hlt
xchg
int
addl
dec
call
sub
cmp
fldcw
or
rorb
pop
sbb
jae
sbb
jp
inc
int
int
fdivrs
dec
lea
mov
and
mov
jne
repz
push
fnstsw
jg
shl
ljmp
lahf
mov
fldcw
call
cmpl
negl
or
scas
cmp
int3
loope
push
jno
xchg
ljmp
or
cmp
dec
mov
sar
loopne
mov
inc
les
jecxz
jnp
sbb
loop
cmp
mov
pop
ds
bswap
cmp
push
ja
cwtl
add
mov
sbb
out
bound
sbb
addr16
inc
adc
out
sbb
pop
fcoms
lods
ss
mov
mov
and
xchg
xchg
cmp
cmp
sbbl
xor
mov
subl
or
xchg
mov
popa
push
sub
andl
jnp
pop
sub
sub
scas
scas
pop
mov
inc
xor
cwtl
loop
lea
jno
pusha
shr
fbstp
repnz
fldcw
and
dec
and
pop
dec
or
add
data16
jmp
jno
add
mov
loop
aas
int
test
sti
enter
jle
adc
adc
sub
notl
inc
mov
push
lea
lcall
fbstp
mov
sti
and
cmp
nop
test
pushf
add
cmpsb
jno
lcall
lahf
in
dec
nop
enter
add
fmulp
mov
push
js
pop
push
out
mov
xor
push
gs
loope
imul
mov
push
popf
adc
sub
lret
push
imul
mov
cmpsb
sub
push
xorl
hlt
sub
cmc
rcrl
adc
mov
mov
fs
out
cmp
ret
pop
lods
scas
out
inc
icebp
pop
dec
loop
mov
dec
jb
stc
int
mov
adc
inc
mov
mov
mov
inc
aas
and
in
into
es
int3
pop
in
into
push
ja
and
mov
mov
sub
aas
dec
ljmp
lods
int
jb
loope
icebp
jne
je
fsts
sub
mov
inc
push
cwtl
inc
ja
cmp
scas
daa
pop
mov
cmp
bound
xchg
pop
cmp
stc
enter
pop
pop
xor
pop
mov
xor
or
mov
xchg
or
fldenv
jns
push
out
jo
and
sub
cs
js
adc
iret
or
fcomps
cli
xchg
mov
mov
cmp
loope
or
or
pop
leave
or
mov
mov
or
std
jns
push
stos
mov
sub
add
sbb
or
sbb
mov
loope
inc
mov
sub
xor
jbe
stos
je
cmp
sbb
das
inc
mov
cli
stos
aad
mov
idivl
pop
aam
cld
lahf
jmp
jge
lahf
ss
je
mov
dec
cmp
sub
adc
pop
dec
xchg
push
mov
push
fistpl
dec
in
adc
mov
fwait
cmpsl
aam
call
mov
rorl
call
sbb
out
aam
add
mov
out
mov
arpl
add
jns
mov
lea
in
or
stos
sbb
jne
sub
sbbb
pop
adc
pop
mov
push
out
popa
adc
les
cli
dec
push
and
sti
and
or
sbb
xor
movsl
inc
pusha
daa
sbb
or
outsl
jmp
dec
testb
shrb
out
xchg
sbb
adc
push
test
and
inc
cmp
imul
dec
insl
out
jmp
bound
lea
push
push
repz
adc
pop
shll
pop
out
rclb
scas
subl
loope
setl
jne
cmc
xchg
lds
jecxz
out
push
cmpsl
or
sub
aad
scas
mov
iret
add
sub
push
mov
mov
add
imul
pop
cmpsl
mov
inc
loope
sub
pop
and
loope
sti
pop
and
pop
in
pop
ja
scas
insb
dec
call
insl
lcall
sub
jnp
pop
in
and
arpl
cmp
inc
xchg
out
sub
and
imul
arpl
dec
push
push
xor
cmp
imul
bound
cmpsb
lods
mov
lods
add
scas
scas
pop
inc
cs
adcl
call
dec
mov
pop
jge
and
mov
push
cmpsb
int
xchg
dec
dec
and
cmp
mov
push
xlat
xchg
jg
sbb
int
cwtl
fisubl
ds
dec
cmp
inc
popf
xor
cmp
xchg
loop
xchg
push
adc
sub
shrl
insb
int3
stc
or
test
adc
push
xlat
pop
pop
cwtl
sbb
adc
push
add
and
jmp
scas
jae
popa
fbstp
push
lds
pop
or
test
lahf
sahf
ja
in
lret
inc
test
cmp
aas
push
icebp
shll
mov
jle
hlt
sbb
sti
jg
adc
movsb
pop
jp
jecxz
fnstenv
addr16
cltd
outsl
add
sbb
cmc
ret
adc
shll
das
pop
rorb
in
loop
stc
aam
xor
xchg
sbb
jmp
jbe
sahf
cmpb
adc
dec
sbb
cmpsl
sub
outsb
mov
subl
push
adc
lods
add
insb
xchg
inc
fwait
lods
lds
fisubl
pop
dec
sbb
pop
call
push
shll
fcoml
es
sbb
or
cmp
cmpsl
sub
inc
mov
push
es
and
inc
or
popf
aam
hlt
xor
repnz
push
mov
ljmp
and
les
pop
cwtl
in
cld
push
repz
mov
addr16
test
insl
inc
dec
dec
dec
push
pop
push
sub
jl
xor
jecxz
ret
out
jbe
mov
jnp
push
xor
add
push
fcomps
stos
rclb
cltd
aaa
pop
sub
and
cwtl
jmp
sub
dec
lcall
int3
cmp
add
fwait
mov
call
sub
dec
leave
pop
dec
insb
fidivrl
sub
pop
ret
fsubrp
adc
adc
rcrl
in
stos
push
je
jno
cmp
dec
lcall
out
outsb
test
loopne
push
inc
dec
dec
test
push
js
out
pushf
into
jle
inc
pop
sub
adc
jl
and
imul
mov
and
dec
and
mov
mov
push
mov
mov
cmp
and
push
sub
mov
test
aaa
jecxz
or
sti
add
mov
inc
scas
jbe
adc
xchg
push
sti
xor
xor
dec
rcr
jl
fdivr
inc
sub
cmpsb
in
inc
hlt
aas
sub
lods
aam
and
pusha
adc
adc
fcmovnu
gs
mov
loopne
fs
fmul
pushl
cld
lret
arpl
or
sub
pop
not
testl
cmp
lret
out
repz
cmc
notb
mov
nop
movlps
jns
pop
shlb
push
in
mov
and
mov
pop
arpl
fbstp
push
cmpsb
add
adc
repnz
roll
mov
lret
sbb
daa
pop
rorl
xor
nop
aaa
xor
shl
adc
cmp
push
or
cli
jmp
loop
lock
pusha
and
or
mov
sbb
test
or
das
test
jo
pop
in
mov
lds
cli
fildll
adc
sahf
push
aam
sahf
insl
je
ljmp
push
xchg
std
dec
mov
pop
imul
je
xchg
loop
aam
mov
mov
xor
rolb
pushf
sub
xor
into
shll
lods
fs
adc
mov
ljmp
in
sbb
sbb
sbb
data16
aaa
arpl
insl
inc
loope
jb
xchg
xrelease
es
and
icebp
xchg
dec
ja
jmp
sub
cltd
or
mov
mov
mov
xchg
out
xchg
lea
push
test
xorb
mov
add
xchg
push
aam
jne
lea
and
xchg
and
in
clc
dec
dec
icebp
fsubs
push
xchg
and
jno
je
insl
and
int3
cld
bound
rclb
cli
sbb
scas
lds
xorb
pusha
test
pop
cmp
jmp
mov
pop
xchg
pop
dec
inc
js
jp
dec
incb
fimuls
test
inc
and
sub
adc
pop
push
pop
mov
out
xor
add
cmp
and
in
inc
aam
mov
or
pop
or
aad
add
int
push
cmpsl
xchg
mov
mov
xchg
mov
jbe
mov
jecxz
pop
push
cmc
cmp
mov
mov
frstor
test
pop
out
sbb
sbb
push
dec
mov
xor
cmp
dec
mov
push
dec
stc
frndint
jp
xchg
mov
jle
into
and
shrl
jne
lock
das
call
xchg
lods
les
cmc
pop
das
push
int3
int3
negb
mov
mov
adc
fwait
xchg
mov
adc
imul
cmpsl
mov
jge
or
mov
jne
sbb
leave
das
cmc
insl
pop
bound
mov
lret
cmpsl
jg
dec
fnstcw
addr16
inc
mov
pop
and
jb
xor
aam
lret
test
add
ja
jae
pop
cwtl
dec
std
xor
cmp
insb
cmp
pop
push
xchg
sub
scas
jno
xchg
pop
sub
insb
mov
inc
or
pop
and
jae
lock
dec
mov
lods
data16
repz
xor
arpl
arpl
dec
dec
add
es
aam
sub
lcall
mov
lahf
sbb
xlat
daa
push
inc
push
dec
cmp
mov
xchg
aaa
cmc
jnp
arpl
add
pop
pop
leave
xor
in
out
sub
xchg
pop
imul
inc
mov
outsl
fiaddl
push
dec
jg
and
inc
std
xchg
lcall
add
and
leave
jo
stos
and
mov
xchg
insl
and
arpl
pop
push
ss
push
dec
jbe
xorl
cs
bound
cwtl
test
cmp
scas
and
test
scas
test
es
jo
inc
mov
push
pushf
sub
cmp
aam
gs
or
rcrl
mov
fnsave
in
mov
jp
leave
mov
push
push
push
push
sbb
sbb
aaa
cmpsl
sub
jmp
addr16
lods
pushf
sti
adc
in
fcoml
or
stc
dec
adcl
orl
pop
adc
je
mov
in
cli
scas
and
aam
adc
mov
mov
cmc
seto
mov
xor
loope
and
aam
add
mov
nop
aas
xchg
adc
jno
dec
add
xchg
imul
mov
cmp
andl
repz
ret
mov
je
ds
pmullw
or
xor
dec
dec
dec
mov
or
inc
push
add
mov
dec
inc
loop
sarb
push
das
xlat
sbb
cmpsl
mov
out
sub
inc
mov
jns
addr16
jge
cmp
xlat
mov
inc
int
push
insb
inc
add
jo
jne
mov
in
add
or
ret
jno
repnz
lods
maxps
jl
notl
cmp
push
xchg
ljmp
xor
stc
cmp
icebp
pop
mov
jne
push
cwtl
int3
jp
add
inc
sub
xlat
insl
push
fxch
xchg
cmpl
iret
movsl
jp
add
shll
mov
sahf
xor
ljmp
pop
div
lock
dec
test
out
icebp
sahf
mov
inc
lret
dec
in
enter
xchg
hlt
add
lahf
int3
lret
lret
pop
sbb
sub
mov
cmc
les
and
mov
and
in
inc
sbb
test
mul
stos
out
sahf
sub
xor
cmp
mov
xor
popa
pop
ret
dec
xor
pop
sub
leave
or
or
outsb
mov
scas
fcom
push
mov
cmp
enter
es
sub
inc
add
jo
xor
xor
insl
cltd
mov
mov
lcall
cmpsl
dec
adc
pusha
mov
and
lahf
jns
cmp
sbb
and
into
hlt
data16
adc
and
and
int3
ss
arpl
dec
pop
shlb
xlat
cmc
cltd
ret
xchg
adc
adc
lret
jg
inc
mov
out
dec
cltd
fnstsw
in
shlb
fs
leave
cmp
aad
lret
add
sbb
in
rcr
stos
xchg
or
int3
mov
icebp
inc
xchg
mov
sbb
sub
xchg
cmovne
push
fdivrp
cmc
mov
sti
xchg
loope
stos
test
pop
fiadds
xor
add
adc
dec
xor
cmp
mov
jl
decw
lret
fsts
call
fdivs
ss
mov
xchg
loopne
mov
jns
lret
test
sahf
pop
mov
loope
sub
je
js
pop
inc
aad
inc
aaa
repz
sahf
std
jp
loope
movsl
jmp
xchg
ret
fildll
jne
bound
inc
pop
xchg
out
push
jge
jmp
jbe
lods
xor
decl
insb
lods
mov
out
lahf
aam
ficompl
sub
outsl
mov
out
test
lds
mov
jge
jmp
push
loope
pushf
lods
mov
push
inc
out
test
mov
add
sub
mov
repz
mov
movsl
cmp
adc
ficoms
out
cmpsl
je
push
icebp
addr16
dec
in
pop
mov
cmpb
in
mov
popf
arpl
clc
jl
scas
lret
imul
int3
add
mov
js
loopne
out
cmp
movsb
dec
cmp
aad
jecxz
push
cmpsl
aam
jle
jbe
loopne
xchg
jo
mov
push
jl
cmpl
push
pop
jg
cltd
push
pop
xchg
sbbl
repnz
inc
pop
adc
add
and
and
dec
mov
dec
fsub
push
jl
push
sub
fcoms
stos
es
dec
test
push
sub
push
cmp
clc
lds
out
outsb
ret
cmpl
cmp
outsb
inc
dec
outsl
jno
cltd
mov
sub
adc
in
mov
arpl
test
xor
cld
repz
jb
mov
repnz
push
dec
or
sahf
xchg
dec
in
ffree
mov
sub
mov
pop
divb
push
out
pop
fildll
enter
cmp
fnstsw
sub
rcr
iret
push
cmp
adc
aas
xor
fwait
cmpsb
sbb
xor
mov
in
or
lahf
mov
cmp
xchg
sub
movsb
push
out
jne
icebp
decb
pop
int
cs
aad
inc
jge
scas
xchg
imul
cwtl
add
pop
push
jg
dec
jl
div
in
mov
mov
or
outsl
mov
ret
cmpsb
sub
mov
vpshuflw
add
xchg
ss
adc
xchg
push
pop
imul
out
and
pop
add
xchg
cmpsb
pusha
movsb
pop
shlb
dec
mov
add
sbb
scas
sub
cmp
shll
jge
mov
mull
inc
sahf
ret
mov
push
pop
add
mov
test
mov
out
cmp
add
add
adc
nop
pop
push
pop
mov
xor
push
dec
pop
movsb
inc
idivb
xchg
insb
inc
and
or
xchg
leave
cmp
data16
jp
into
mov
push
inc
mov
xor
xor
xchg
push
and
cwtl
sub
inc
mov
loop
pop
pop
and
inc
add
push
adc
and
or
mov
pop
lea
fucomip
ds
push
xchg
mov
js
xchg
mov
aaa
dec
push
loopne
movsl
hlt
in
push
cmpsl
std
int
fisttpl
add
jg
lret
out
jno
xchg
pop
jbe
lods
jbe
popa
iret
cwtl
aaa
in
add
jge
xchg
stos
mov
xchg
push
xlat
in
or
pop
dec
push
mov
inc
sbb
dec
xor
add
scas
int3
inc
inc
sbb
aad
test
dec
cmp
xchg
push
addr16
and
push
push
push
daa
cmpsl
lcall
inc
loopne
or
mov
loop
add
mov
xchg
push
jo
in
sbb
icebp
es
setnp
dec
sub
lea
sub
sub
pop
mov
fnstcw
sar
pop
imul
fs
lret
addl
jge
stc
mov
das
adc
out
xlat
adc
sbb
andb
mov
pop
fnstcw
adc
lods
dec
or
cmpsb
std
xchg
mov
shlb
xor
mov
ret
push
xor
mov
xchg
or
adcl
cwtl
sub
push
les
cmp
popf
cld
fsts
inc
pop
lods
push
pop
mov
bnd
pop
or
loop
jmp
pop
pop
sahf
sbb
popa
or
and
pop
xor
xor
sbb
loop
push
sub
sub
movsl
jnp
xchg
push
jne
cmp
adc
mov
shl
shll
ret
out
loopne
push
dec
add
outsb
dec
mov
cmp
jg
adc
aas
popa
insb
mov
cmpsb
and
clc
addr16
sti
andl
outsb
xor
leave
add
jo
arpl
sbb
enter
sahf
xchg
out
push
add
adc
add
mov
pushf
inc
or
int3
push
leave
add
fidivrl
add
mov
pop
fnstsw
push
add
mov
push
pop
subb
lock
mov
lcall
push
xchg
lret
hlt
jo
mov
jns
pop
xor
int
mov
mov
stos
ja
rorb
js
fwait
cld
divl
jmp
mov
jl
xchg
mov
insl
adc
aam
imul
lcall
lea
inc
out
mov
inc
push
cmp
xchg
dec
jae
mov
dec
jnp
fsubl
aaa
mov
insl
cmc
sbb
jb
cmp
roll
jge
bnd
xchg
repnz
arpl
test
out
cmp
xor
ja
cmp
in
int
xchg
cmp
int
outsb
sbb
mov
push
shll
adc
addr16
sahf
push
lds
andb
pop
jp
jb
loopne
jp
imul
insb
add
jmp
ljmp
into
popa
adcl
or
es
sub
cmp
cmp
push
cli
test
cwtl
sbb
mov
sbb
pop
jne
mov
sub
or
lods
sub
rclb
xor
push
jbe
jb
stc
insb
mov
jns
daa
lods
pusha
lea
jmp
test
mov
loop
fidivs
sub
imul
jmp
add
jbe
mov
dec
in
int
xchg
pusha
dec
pop
mov
call
xchg
sti
adc
pop
add
icebp
push
and
repnz
xor
push
pop
inc
sarl
aaa
jne
xchg
sub
aad
mov
sbb
ss
lods
push
call
dec
cli
dec
popa
mov
loopne
dec
mov
inc
xchg
inc
cmp
pushf
imul
mov
aam
pop
mov
sbb
cmp
dec
jp
out
das
ds
pop
fmuls
cltd
mov
mov
lea
or
push
dec
jb
mov
mov
dec
pop
jmp
mov
add
push
dec
or
js
lcall
rolb
jge
xor
push
inc
push
popa
aam
cwtl
je
xlat
aad
pop
push
int3
jns
rcl
cs
in
dec
cmp
imul
mov
in
dec
xchg
cmc
outsb
xchg
cli
fs
enter
xchg
std
xchg
dec
mov
into
xor
in
fsubs
inc
xlat
mov
cmp
jp
xchg
or
lahf
inc
push
dec
ja
sbb
cmp
xchg
hlt
jg
and
adc
dec
cmpsl
add
out
shrl
aam
aam
mov
clc
out
inc
out
sbbl
into
sbb
push
scas
jmp
cs
adc
cmpsb
sbb
cmp
pop
xor
rorl
lret
cld
or
test
addb
out
je
out
cmp
insl
es
pop
xor
or
mov
mov
mov
mov
add
mov
insb
pop
adc
shrb
jp
push
mov
fstpt
popa
jns
sub
mov
sub
out
mov
addl
pushf
adc
push
cltd
pop
xchg
cmp
pop
or
cmpsb
leave
xchg
add
xchg
icebp
setnp
mov
mov
xor
hlt
mov
jge
pop
cli
lret
cmpsl
ret
aad
sbb
test
mov
adc
add
in
mov
jl
lock
lcall
clc
int
sub
adc
xor
pop
pusha
gs
jne
push
in
pop
lds
push
mov
xor
jp
int3
call
ljmp
mov
fs
ljmp
pop
in
inc
xchg
xor
jae,pt
inc
jmp
clc
sbb
and
sub
stos
in
jp
outsb
mov
lea
add
adc
sub
jg
fcompl
xor
mov
push
test
mov
push
sbb
sbb
fdecstp
outsl
sub
shrb
outsb
cmp
xor
push
out
and
dec
popa
and
push
rcll
inc
loop
inc
mov
ret
js
jbe
int
mov
js
aad
dec
and
pop
stos
jns
sahf
sbb
ret
out
xor
lahf
and
mov
add
fsub
adc
xlat
inc
inc
rclb
daa
mov
or
enter
imul
scas
or
je
sbb
call
sbb
cmp
or
je
fcomps
dec
jmp
and
mov
test
outsl
out
push
rcrl
addr16
mov
ja
cld
mov
jge
cmp
inc
in
pushf
push
mov
fiaddl
lds
divps
clc
out
pop
pop
mov
cld
sub
int
repnz
pop
ret
and
lods
jle
les
jmp
mov
jmp
add
xchg
sbb
or
out
shl
push
or
mov
mov
jae
fldcw
cli
repz
jl
cmp
or
push
repnz
add
xor
aas
xor
divb
cld
xor
enter
leave
dec
incb
push
inc
xchg
mov
outsl
and
xor
fs
cmp
xchg
and
xor
push
cmp
sub
sbb
stos
sti
dec
inc
std
mov
fadds
hlt
mov
leave
push
xchg
cli
fisttps
test
push
mov
outsb
clc
push
xor
popa
fcomps
jg
cmp
add
mov
inc
arpl
mov
xor
cli
lods
or
cmp
aam
xchg
test
ss
jne
int3
int3
or
sub
outsb
pop
sub
je
sub
mov
dec
pop
cld
dec
pop
js
sti
jmp
fidivl
xchg
dec
fisubrl
cmp
inc
outsb
test
stos
xor
enter
stos
jbe
mov
pand
or
fs
jns
imulb
in
mov
adc
cmp
test
movb
popf
jnp
sub
mov
and
mov
mov
leave
mov
dec
fldenv
pop
aas
or
sub
push
adc
pop
subb
pop
pop
cmp
sbb
mov
out
inc
jbe
ja
sbb
jmp
popf
mov
adc
mov
in
test
mov
cmp
xlat
jne
es
jo
cmp
test
jo
jns
sti
arpl
xchg
aam
ljmp
cmpsb
loopne
add
push
or
sahf
jb
or
mov
int
outsb
or
dec
xchg
mov
hlt
imul
push
xchg
sub
pop
mov
push
sbb
mov
ret
popf
add
mov
xchg
jmp
push
in
in
push
push
fiaddl
out
push
inc
cmp
repnz
xor
mov
mov
push
sub
xor
xor
sarl
insb
in
jge
mov
sbb
insl
stc
jbe
js
mov
push
subl
je
cs
dec
fs
pop
and
pop
mov
jns
das
xchg
push
push
adc
cld
cmpsl
xchg
mov
repnz
push
xchg
pushf
dec
scas
or
lcall
scas
sbb
addr16
cmp
in
xor
push
pushf
lock
or
xchg
push
push
icebp
and
adc
ret
jno
movsl
arpl
xchg
aam
push
add
jno
jno
pop
popa
lods
sti
fldt
arpl
xchg
inc
arpl
imulb
lea
test
push
dec
adc
add
pop
rcll
out
pop
mov
lret
loopne
fdivl
sub
stos
mov
out
icebp
aad
xor
mov
cmp
jnp
insl
and
inc
push
dec
lea
mov
pop
and
mov
stos
addl
mov
bound
inc
out
pusha
rorb
inc
cmpsb
stos
fnstsw
jg
inc
mov
mov
cmc
or
sbbl
icebp
adc
outsb
aam
adc
rcrl
inc
fcmovbe
mov
jnp
xchg
out
daa
test
sbb
mov
mov
orb
inc
lret
stos
rorl
mov
nop
pop
sbb
iret
jg
or
shr
jmp
inc
jl
out
xchg
cwtl
out
stc
clc
mov
cmp
fistpl
jmp
icebp
insb
inc
jmp
adc
mov
cmp
outsl
out
out
rcll
inc
cld
daa
cwtl
sbb
loopne
in
repz
lds
mov
jge
xchg
rolb
psubq
mov
test
lahf
mov
cmp
ds
clc
push
notb
adc
inc
cmp
pop
sub
jae
pop
pop
call
lret
sub
scas
xchg
inc
sub
inc
and
adc
mov
or
xor
inc
adc
jns
lea
inc
ds
fwait
pop
push
mov
cmp
xchg
mov
movsl
fwait
xchg
add
push
pop
inc
scas
addr16
shr
add
cs
movsb
xchg
out
add
and
cmp
mov
push
push
insl
jl
into
mov
call
mov
sti
iret
insl
jl
push
xor
dec
and
mov
xchg
mov
daa
push
scas
dec
es
jns
cld
and
fsts
lods
pop
insb
cltd
sub
fidivrl
hlt
std
push
and
es
mov
rep
pop
jecxz
sahf
and
add
jno
pop
pop
dec
int3
push
stc
dec
inc
inc
adc
lods
push
jo
cmp
cmp
pop
call
dec
cmpsl
add
pop
adc
mov
imul
leave
fdivrs
mov
and
std
mov
jns
mov
pop
xor
mov
outsl
mov
sbb
push
negl
leave
adc
rorl
rcll
jle
sub
frstor
fdivrl
jb
add
pop
cmpsb
push
mull
fsubrp
clc
add
sub
icebp
jo
aam
scas
addr16
pushf
cmp
in
or
in
xchg
jbe
ficoml
ret
in
xor
mov
adc
aad
sar
push
sub
ljmp
xor
movl
movsb
pop
pop
cmp
imulb
repnz
scas
aaa
mov
out
pop
xchg
adc
std
stos
jo
cld
outsb
mov
and
mov
push
push
mov
mov
xlat
jb
mov
jmp
andl
jbe
dec
in
mov
rorb
test
scas
xchg
cmpsb
cmpsb
cli
subl
mov
aam
add
data16
pop
pop
loopne
movsl
sub
mov
jle
inc
xchg
fs
fidivs
or
mov
shll
inc
out
add
lcall
pushf
mov
ret
cmp
cmpb
mov
xor
call
dec
daa
push
test
push
mov
lock
cmpsb
lea
lods
rorl
add
shrl
lret
cmp
out
pop
fs
mulb
lods
pop
cld
push
sbb
or
dec
dec
repz
enter
dec
pop
pop
divl
test
out
push
stos
lret
sub
inc
fwait
mov
inc
fcomi
pop
mov
insb
fwait
test
xorb
sbbl
mov
in
jbe
and
jmp
enter
mov
sub
lods
shrb
sbb
arpl
cmp
inc
sub
rcl
lods
add
stos
push
ds
cwtl
dec
dec
or
scas
nop
out
dec
xor
pop
pop
lea
scas
mov
lock
cld
sub
into
mov
xlat
xor
je
sub
push
lret
mov
clc
cwtl
or
insl
pop
and
insl
xchg
pop
out
jae
mov
sub
ljmp
mov
insb
movl
in
mov
ret
pop
dec
mov
dec
sub
sarl
ret
out
sbb
push
adcb
xchg
xchg
inc
movsl
lods
xchg
incb
mov
mov
fnstsw
xor
xchg
popa
mov
jae
decl
mov
loope
std
xor
push
dec
mov
adc
mov
stos
in
daa
lcall
jnp
pop
inc
adc
cmpsl
sbb
iret
les
mov
test
cmpsb
xchg
push
popf
dec
dec
or
add
xlat
inc
jb
mov
xor
ss
adc
dec
fisubl
movsl
enter
aaa
mov
test
pop
cltd
fstpt
clc
ss
lods
dec
xor
leave
sahf
ss
out
inc
movsb
push
sub
cmp
jae
loop
fcompp
adc
xchg
inc
add
pop
fidivs
cmp
jb
das
mov
mov
add
sti
fsubl
shlb
push
lcall
fadd
inc
add
jmp
cwtl
jbe
mov
mov
fisubrl
xor
in
fmul
aas
mov
sub
insl
mov
pop
loope
mov
and
xor
lea
dec
pop
outsl
push
lea
push
insl
cltd
xor
jnp
adc
lahf
popa
cwtl
test
fs
add
decl
cmp
inc
pop
lods
in
dec
jge
cwtl
dec
insb
inc
jo
hlt
mov
stos
mov
cmp
mov
mov
imul
ret
cmp
mov
insb
xchg
jnp
mov
mov
adc
leave
mov
xor
mov
lods
int
js
sub
mov
test
and
inc
cld
inc
mov
mov
or
mov
out
icebp
push
sti
test
lods
test
lock
push
in
jg
or
jecxz
mov
push
mov
les
inc
push
mov
ss
xchg
mov
ljmp
and
sbb
out
daa
add
inc
inc
cltd
movsb
inc
sub
mov
ds
jmp
enter
and
add
sti
sub
or
or
xor
dec
lret
rcrl
loop
push
mov
sti
je
cs
xchg
addr16
push
ljmp
xlat
pop
adc
sub
stc
int
mov
mov
scas
ds
inc
add
add
lcall
sbb
dec
cmp
sahf
scas
test
xor
jle
pop
dec
xchg
mov
xchg
mov
lods
push
in
fs
testb
push
cmp
mov
je
das
jne
sub
popa
adc
ds
or
shll
aad
xor
repnz
cmp
insl
inc
sbb
jae
stos
xor
repz
mov
shll
sti
fsubrs
loop
pop
inc
mov
rorl
call
stos
and
and
sub
xchg
xchg
std
hlt
mov
mov
cld
jl
std
ss
lcall
xor
and
and
lahf
dec
pop
inc
pop
push
push
xchg
daa
add
aam
fistps
sub
arpl
dec
out
inc
popl
movsl
inc
outsl
and
mov
adc
sub
cs
in
mov
pushf
out
das
sub
lcall
je
jno
sbb
scas
popa
inc
clc
xchg
inc
push
movsb
add
inc
movsb
rcll
cli
xchg
sub
pop
pop
jg
std
cmp
cwtl
pop
mov
or
inc
adc
dec
sbb
sbb
cmpsl
inc
xchg
fwait
pop
cli
pop
mov
pop
inc
imul
fisubs
jmp
subl
hlt
jno
xchg
jge,pn
push
add
out
add
adc
cwtl
or
push
in
mov
std
stc
cmp
iret
mov
jecxz
dec
mov
repnz
je
adcb
lods
cmp
pop
push
push
xchg
aam
mov
pop
in
std
cmp
sahf
adc
or
jmp
es
les
orl
mov
xlat
cmp
or
std
mov
mov
sub
sbb
and
ret
int
add
sbb
out
xchg
fiadds
testb
dec
mov
lods
outsl
xchg
push
push
and
icebp
outsb
jne
jmp
or
mov
sbbl
movsl
cmpsl
or
mov
aas
enter
mov
std
fisubrs
xchg
mov
fcompl
sub
dec
fnstsw
rolb
fdiv
scas
mov
pushf
lods
sbb
sahf
daa
testl
movsl
ret
fs
addr16
repnz
cli
and
jne
pop
lahf
fdivrl
outsl
cmp
cmp
jle
ss
add
not
shll
sbb
in
jne
lds
aad
pop
mov
je
movb
lock
lods
push
popl
outsl
divb
outsl
sbb
jmp
lcall
mov
add
cmp
lock
push
mov
mov
fisubl
or
inc
and
loop
mov
pop
bound
das
xor
push
lret
mov
gs
dec
addb
enter
stos
fisttps
inc
xor
xor
sets
xchg
ret
xchg
jl
outsb
sub
clc
cmc
lcall
jp
dec
mov
pushf
dec
out
xchg
call
divl
jnp
jle
mov
nop
push
xor
and
or
xor
pop
dec
jb
push
testl
outsl
mov
fistps
lods
fcomps
aad
aad
repnz
jg
adc
mov
jno
xor
jns
cmp
iret
inc
movsb
scas
jbe
fld
xor
lods
addr16
xchg
adc
adc
fisubs
lret
add
dec
mov
outsb
data16
jb
int3
jae
in
push
rorb
insl
rclb
loop
enter
out
leave
ret
in
ds
mov
push
xor
or
aam
jp
popf
xor
outsb
xchg
jbe
push
into
cmpsb
lret
pop
xchg
aad
sbb
enter
rclb
movsb
faddl
into
pop
jnp
push
dec
cld
scas
pop
out
add
cwtl
xchg
ffree
aas
ret
adc
aad
in
movsb
dec
aad
or
jne
call
xchg
xlat
jnp
xchg
xchg
xchg
sar
push
xchg
sti
cmp
fisttpll
mov
mov
inc
pop
cltd
push
pusha
cmc
stc
pop
mov
push
fists
or
and
xor
xchg
pop
xchg
mov
pop
das
cmp
ret
lret
mov
or
xchg
add
push
in
mov
call
inc
pushf
adc
xchg
xlat
mov
xchg
push
mov
pop
lahf
or
inc
sbb
mov
or
add
inc
data16
sbb
iret
adc
test
std
jbe
or
nop
mov
pop
xorl
stc
sbb
das
inc
sbb
push
pop
insl
fwait
sbb
lea
push
inc
insl
ss
push
xor
out
add
loope
xor
ficoml
mov
lods
pop
xchg
sbbb
mov
sbb
js
rol
sub
fbld
je
mov
cmpsb
ss
cmp
dec
cmp
icebp
mov
inc
lods
cmp
sub
jp
sub
add
lock
add
cmp
ret
dec
sbb
pop
jle
dec
cmp
andl
and
fdivl
fdivrp
inc
popf
jp
iret
pusha
frstor
ja
fcomps
pop
adc
push
pop
cmp
aaa
mov
mov
subl
and
jp
rcrl
mov
shrb
mov
lret
test
push
sbb
jecxz
gs
mov
add
jmp
jl
push
std
inc
or
xchg
or
mov
rorl
sbb
xchg
inc
mov
mov
sbb
pop
or
mov
ror
mov
movsl
mov
je
push
ficoms
sbb
mov
push
or
imul
push
mov
dec
cmpl
cmc
mov
cmp
fisubl
mov
cmp
mov
call
mov
in
int
cmp
je
jo
sub
lcall
out
addb
pusha
iret
lahf
ret
push
pop
xchg
cmp
mov
xchg
jmp
iret
push
fsts
push
mov
sub
inc
cmovne
loope
test
inc
jmp
fcomps
adc
pop
shll
mov
sar
push
fimull
sub
adc
adc
and
pop
call
fwait
adcl
aas
test
fsubrl
addr16
sarl
test
or
pop
mov
add
dec
push
push
sub
js
fdivrl
push
outsb
push
ret
sbb
push
test
int3
dec
and
movsb
inc
push
add
sbb
mov
pop
dec
inc
dec
jns
negb
movsb
fndisi(8087
lret
mov
clc
int
jne
sarb
jp
sarl
mov
add
lcall
mov
and
mov
add
dec
dec
fcmovbe
push
mov
cs
cmc
adc
stos
dec
or
sbb
sbb
mov
jmp
lods
push
push
push
ret
pop
jl
mov
repnz
xchg
sahf
pop
push
scas
inc
pop
mov
sub
ret
arpl
sahf
xor
pop
pop
sarl
sbb
pop
js
aas
mov
es
xlat
xchg
mov
icebp
clc
mov
jo
dec
addl
je
rclb
add
xchg
hlt
mov
dec
mov
jmp
or
mov
inc
icebp
pushf
xchg
leave
pop
or
push
and
fidivs
adc
add
nop
call
in
cmpsb
inc
call
outsb
fdivrl
sbb
pop
or
hlt
cmpsb
jne
and
pushf
jne
pop
imul
sbb
cmp
pushw
cmpsb
cs
adc
fs
out
adc
lods
sbb
add
jnp
jmp
test
andb
or
fs
mov
add
inc
ret
mov
sbb
pop
jb
mov
enter
sub
sbb
mov
xor
push
mov
stos
rorb
cmp
push
aas
sbb
popf
sbb
rcl
lock
mov
cmp
mov
xor
pusha
scas
xor
pusha
addr16
les
mov
fisubrl
cmp
loop
rorb
xchg
rolb
repnz
add
out
and
jne
jns
loope
loopne
lods
or
xchg
pop
cli
cli
cmp
mov
mov
push
mov
rol
add
mov
xor
aas
adc
inc
inc
lods
jns
std
cld
sub
or
cmp
mov
call
mov
mov
loop
fs
popf
adc
imul
mov
mov
push
xchg
faddp
cmp
ficoml
dec
repz
push
jne
inc
jbe
clc
insb
daa
ja
lcall
xchg
xor
xorl
out
xor
mov
es
mov
mov
cmpsb
pop
iret
stos
je
mov
lods
outsl
mov
jl
sbb
movl
pop
sub
mov
dec
clc
mov
add
mov
js
sub
push
cltd
aam
push
cmp
dec
mov
cmp
sub
mov
cmc
daa
loope
add
add
iret
insl
cmp
test
insl
add
lret
xchg
jge
repnz
inc
rsm
in
pushf
call
mov
subb
es
loopne
jne
or
ret
jmp
popf
icebp
cmc
and
cmpsl
fucom
jnp
popf
xchg
lods
inc
or
and
mov
fcmovnu
xor
out
pop
shll
jge
sbb
push
ds
dec
sub
mov
mov
inc
jl
push
inc
lcall
adc
adc
push
pop
popa
mov
ficomps
jb
out
test
addl
jae
jmp
fidivl
ss
mov
add
or
shl
js
jno
push
mov
scas
inc
or
int
push
jle
mulb
in
inc
xchg
and
push
aad
ret
pop
dec
add
mov
sub
cs
test
xor
jnp
mov
scas
sub
mov
insb
pop
adc
fidivrs
movsb
aad
push
fwait
push
std
fsubs
mov
sub
mov
ret
jecxz
pop
arpl
sbb
aad
dec
inc
adc
outsl
ficoml
mov
xor
pop
in
scas
mov
ss
aad
call
es
loopne
das
xor
scas
add
ja
and
push
mov
shrl
sbb
in
sub
js
outsb
pushf
inc
cmpsl
inc
add
add
les
pop
push
push
push
push
sub
movsb
cwtl
outsb
out
push
jg
push
test
rcrb
adc
lahf
mov
xor
hlt
mov
dec
enter
mov
in
cmp
ficoms
push
sbb
andl
mov
out
das
pushl
int
jg
cmp
jne
and
dec
and
sub
dec
xor
push
xor
mov
jl
sub
cltd
ffree
dec
popa
xor
popa
or
pop
int
add
jae
jae
mov
add
pop
negb
cmpsb
xchg
inc
mov
shrb
jl
andl
mov
dec
test
cmp
roll
in
inc
xor
inc
adc
ret
repz
cmp
fcoml
add
xchg
int3
add
xchg
push
pop
adc
loop
cld
xchg
xor
mov
mov
push
pop
mov
push
les
xchg
aas
mov
jge
scas
rcr
inc
sbb
lods
rcr
push
pop
and
cli
jo
test
js
mov
sar
rcll
ja
mov
mov
mov
insl
test
cs
sub
bound
gs
mov
es
pop
aam
sbb
push
shlb
dec
sbb
lods
inc
int
ljmp
jecxz
lret
and
xor
pop
push
cltd
dec
push
mov
sbb
pusha
cmpsl
xchg
fsubrs
mov
adc
gs
xchg
mov
lods
mov
pop
mov
fildll
push
mov
fiadds
mov
sti
sub
dec
incb
mov
sub
mov
pop
stos
add
loopne
jns
clc
lahf
flds
jne
pop
jae
mov
insl
push
sub
cmpsb
mulb
mov
adc
sbb
push
inc
push
adc
pop
adc
ret
mov
sub
cmc
cmp
ds
aad
fs
in
pop
insl
push
jne
jbe
push
and
es
aam
enter
aaa
or
call
fwait
mov
inc
xchg
fbld
ror
decb
icebp
std
or
push
mov
push
xchg
sub
jno
pusha
test
push
in
in
stos
stos
fsts
outsl
push
push
inc
dec
hlt
push
es
jge
push
mov
adcl
and
lea
das
ror
xor
and
mov
scas
daa
add
int3
pop
mov
or
adc
jb
sarl
call
addl
add
inc
fsubl
cwtl
cmp
ss
inc
jl
outsb
imul
test
addr16
pop
xchg
adcb
int3
inc
jnp
jl
test
mov
or
std
adc
movsb
nop
loope
add
sahf
ret
sbb
sub
sub
and
in
inc
xchg
rorl
test
cmp
jmp
test
push
xchg
xchg
sbb
cmp
aam
fwait
dec
jge
push
xchg
sbb
loopne
fnstenv
scas
cmp
test
cmpsb
sbb
jae
mov
jae
sub
adc
sar
dec
pop
mov
out
popl
lcall
out
cwtl
lret
or
mov
ret
stos
call
or
scas
pushf
jl
js
pushl
push
and
dec
ja
stos
pop
sbbb
test
mov
cmp
mov
rcl
lahf
dec
and
fs
ljmp
add
test
fsubs
test
lahf
sbbb
sbbl
xchg
pop
inc
mov
leave
dec
fdivrs
xchg
mov
cld
pusha
xchg
popf
idivb
cmc
mov
pminub
fiadds
mov
fadds
insl
shrb
mov
push
xor
mov
lea
mov
xchg
std
ja
sub
sbb
leave
hlt
pop
mov
sbb
popl
ljmp
jne
jnp
xchg
ret
cmp
pop
add
mov
das
inc
dec
insb
sbb
addl
test
sarl
add
sbb
clc
std
mov
cmc
pop
xchg
movl
test
and
icebp
lret
je
mov
sbb
and
dec
movsl
and
scas
pop
or
aas
test
cmp
inc
or
jne
mov
or
daa
xchg
sbb
dec
icebp
gs
negb
xlat
aad
mov
adc
fdivr
sbbb
test
xor
inc
xor
bound
aaa
in
out
dec
aad
out
es
xchg
cli
dec
repz
adc
pop
dec
cmp
sbb
push
lret
push
rclb
cmp
icebp
repnz
xor
dec
fstps
sub
cmp
cmp
push
cs
and
sub
sbb
popf
loop
ljmp
xlat
xchg
stc
xchg
jmp
add
std
incl
lret
push
pop
pusha
es
rcrb
pop
cwtl
out
mov
pop
push
or
and
out
push
xchg
mov
call
out
jmp
sarl
rclb
loop
lds
sbb
xchg
sbbb
sbb
cmp
add
mov
enter
mov
out
fdivrl
mov
sbb
cmpsl
sahf
adc
mov
lret
jbe
cs
repz
inc
sbb
and
stos
sbb
push
push
lds
and
pop
xchg
push
ds
xor
pop
daa
dec
mov
pop
gs
movsb
pop
aad
xchg
in
jmp
dec
aad
or
jae
jp
roll
in
adc
mov
loopne
push
mov
inc
insl
jne
jbe
out
ljmp
repnz
test
sbb
shlb
sub
xor
sbb
add
pop
std
adc
mov
pusha
cmp
sbb
push
cmp
in
and
cmp
and
mov
insb
sbb
stos
xchg
cmpsb
jle
scas
ficoml
andl
mov
dec
dec
and
pop
fistl
xchg
jns
enter
ret
mov
iret
orw
cmc
xchg
fiaddl
dec
push
mulb
jae
jnp
pop
push
test
xchg
icebp
pop
fwait
sub
jne
mov
shll
push
push
jge
and
out
xchg
pop
cmc
test
push
sahf
aam
xor
lahf
imul
fisttpl
in
xchg
rcr
pop
cmp
cs
sbb
or
iret
fsts
push
test
rcrb
xchg
aam
mov
mov
sub
repz
or
mov
sub
xor
subl
fwait
inc
or
pushf
test
ljmp
ss
mov
cmpsl
mov
dec
sub
ss
xchg
addb
shlb
data16
test
adc
xor
xor
mov
adc
jecxz
mov
sub
rorl
roll
pop
jl
sbb
out
int
pop
jne
xchg
rcll
cmpsb
cwtl
sbb
test
nop
repnz
inc
or
addr16
movsl
adc
mov
mov
mov
outsb
mov
push
sbb
adc
or
ret
sbb
cs
sbb
jmp
jae
jno
mov
ja
pop
dec
jp
sbb
pop
sbb
call
xor
movsl
inc
ljmp
and
push
jl
push
xor
add
in
sarl
shlb
mov
sbb
mov
mov
sti
pop
std
add
inc
xchg
pop
sbbl
push
incl
out
push
push
mov
jno
out
fidivs
shlb
imul
test
lret
xor
sbb
cmp
es
lahf
and
sub
in
mov
sahf
xor
xor
sbbl
hlt
pop
push
jo
xor
inc
sbb
or
rcrl
add
sbb
scas
xor
mov
sub
jnp
lret
xchg
mov
dec
test
mov
repz
faddl
push
in
mov
add
lcall
call
push
call
jae
push
push
inc
imul
fistpll
out
mov
fcoml
sbb
mov
xchg
outsl
push
jb
sub
add
stos
dec
stc
sub
or
cmp
cltd
pop
mov
test
mov
mov
xchg
adc
cmpsl
adc
mov
js
ljmp
popf
cmc
fwait
add
cld
das
scas
mov
fldcw
movsb
pop
inc
int
dec
mov
jp
stc
stos
adc
and
lcall
enter
pop
xchg
jg
adc
jmp
fdivrl
push
and
scas
ljmp
sbb
push
mov
push
outsb
cmpsl
mov
sub
fwait
ja
sbb
or
mov
popa
inc
mov
fsubr
das
mov
xchg
cmpsb
add
xor
pop
xchg
outsl
and
shll
push
fsubp
xchg
dec
fildll
aas
enter
mov
lcall
sbb
sub
fadds
jbe
daa
push
cmp
rcrb
imul
cmp
decb
test
lock
mov
repnz
jmp
xlat
xchg
add
arpl
xchg
out
or
pop
and
inc
sbb
movsb
sahf
jbe
les
mov
mov
fistpll
scas
mov
pop
pop
loope
and
cmp
jl
or
mov
sarb
sti
aaa
cmp
leave
add
mov
aam
jno
stos
cmp
repnz
repz
jmp
js
mov
pop
and
mov
push
lods
pop
loope
mov
stos
fidivrl
mov
mov
notb
data16
pop
test
out
mov
pop
in
xor
mov
lock
das
dec
xlat
test
popa
jle
add
pop
pop
push
les
in
lds
mov
mov
xchg
out
jne
mov
inc
mov
daa
insb
jae
pop
cmp
or
pop
aaa
jmp
sahf
cmp
cmpsl
jnp
leave
outsl
mov
loop
out
push
xchg
lea
dec
mov
jecxz
aas
movsl
xchg
mov
mov
scas
mov
ds
mov
push
or
adc
pop
in
xchg
or
mov
ds
cmp
ja
dec
jbe
dec
mov
adc
push
sbb
outsl
ljmp
int3
cs
out
sub
icebp
mov
test
mov
jmp
stos
fisttpll
call
daa
clc
in
mov
push
dec
dec
hlt
or
and
sbb
cmpsb
push
inc
fnstcw
add
add
cmc
ss
loop,pn
sub
out
negl
shl
jno
mov
gs
push
ffree
pop
add
loop
lcall
cmp
sbb
loopne
or
cwtl
in
dec
jbe
and
xchg
add
flds
cld
push
into
jp
add
xchg
movsl
and
add
fadds
push
out
mov
push
push
outsb
mov
adc
push
aas
sbb
in
test
jg
adc
mov
adc
pop
clc
dec
clc
imul
lcall
xor
lsl
out
mov
mov
push
pop
cs
in
sti
cmpsb
add
cmpsl
into
cmp
dec
pop
add
movsl
daa
add
mulb
lea
adc
mov
lds
lret
adc
movsl
adcl
cmp
loopne
mov
inc
mov
xchg
aad
shll
out
push
mov
xchg
xchg
and
pop
inc
adc
lods
mov
mov
push
push
mov
lock
movl
ret
mov
or
push
aas
pop
cmp
popa
test
add
sub
loop
cmpsb
paddusb
add
sub
je
fbstp
clc
fdivrs
shlb
or
test
or
or
xchg
cmp
cs
cmp
sbb
es
add
sahf
xchg
xchg
enter
cmp
add
roll
pushf
dec
cmp
jb
mov
sbb
push
jo
aam
or
aad
xchg
mov
xchg
jp
cmc
add
and
mov
stc
cmpsl
movsb
sbb
jno
adc
xor
out
inc
in
inc
or
sbb
inc
pop
sbb
test
fcoms
aad
lods
dec
jmp
mov
add
test
push
es
loop
out
addl
xchg
and
aad
fstl
icebp
jmp
push
sub
cld
cmp
jmp
fnstcw
xor
xor
jecxz
dec
gs
nop
out
dec
sbb
fs
stc
jl
les
rolb
and
ss
sub
rclb
adc
sub
repz
push
wbinvd
test
xor
or
mov
jecxz
dec
pop
les
jnp
out
imul
push
dec
xor
pop
in
xchg
xchg
xchg
arpl
insb
fidivrl
sub
jbe,pn
call
loopne
push
mov
sub
cmp
stc
and
out
xchg
adc
and
inc
fcmovb
inc
sub
mov
std
mov
jae
cmpb
xorl
jo
aas
xor
cs
in
or
cwtl
loope
push
sub
leave
push
test
mov
or
push
dec
jae
xchg
jae
lds
mov
dec
iret
jmp
outsl
mov
sub
inc
mov
push
fs
stos
cmpsb
mov
leave
dec
jo
cmp
cmp
shl
mov
shl
inc
ljmp
xor
push
cmp
subl
adc
jbe
jge
xchg
xchg
pop
cmp
ja
stos
das
loope
jge
fdivrs
sub
mov
add
cmp
cli
flds
aas
fsts
push
ss
fidivl
std
ljmp
mov
push
out
push
ficomps
out
in
in
push
arpl
insl
movsb
lret
out
sub
cmp
mov
es
aaa
xorb
std
test
sbb
add
rcll
test
dec
cltd
and
scas
shll
pop
inc
fldl2t
pushf
addr16
adc
sub
imul
jbe
dec
push
dec
mov
push
jp
es
ror
stc
inc
and
dec
add
jecxz
dec
xchg
mov
lahf
push
shll
in
out
nop
pop
push
daa
push
sarl
lcall
pop
dec
divb
repz
test
xchg
push
jmp
xor
pusha
jl
push
jle
cmc
repz
shl
push
mov
mov
xchg
push
fnstcw
cs
or
mov
cwtl
pop
jmp
lcall
cmp
jns
jnp
adc
and
ja
pop
mov
out
jno
enter
call
out
push
mov
call
dec
jne
push
pushf
repz
pop
rcl
xchg
push
addr16
push
int
negl
hlt
cmpsb
pop
stos
mov
adc
andb
or
das
enter
sbb
fidivrl
add
imul
push
inc
jnp
add
and
jl
mov
or
ljmp
loope
in
pop
lcall
bound
clc
jl
aaa
mov
mov
xchg
test
adc
or
sbb
insl
push
push
inc
scas
adcl
lds
bound
push
xor
push
dec
and
mov
xor
sti
lahf
sahf
inc
ret
mov
sbb
lret
inc
fists
mov
sub
inc
pop
xlat
add
scas
cmp
icebp
scas
pop
in
jno
jns
lea
xlat
movntq
out
xchg
push
in
sbb
mov
inc
jg
lods
mov
mov
cld
xchg
gs
sub
cli
and
int
fdiv
aas
fs
xchg
gs
mov
pop
sbb
inc
push
xchg
push
lods
incl
or
scas
sti
mov
sbb
push
std
inc
stos
adc
inc
test
test
lods
imul
sub
jnp
test
stos
imul
adc
popl
int3
and
in
addr16
push
jno
ret
inc
and
pop
dec
mov
adc
mov
cld
push
icebp
cmp
jae
mov
cmp
adc
fstpl
inc
sbb
clc
cmpsb
call
inc
xor
cs
lcall
mov
andl
test
in
std
mov
popf
hlt
scas
or
xchg
mov
pop
int3
xchg
adc
lock
pop
pop
adc
mov
fldcw
fisubrl
je
mov
hlt
out
je
push
jle
sbb
ds
aaa
scas
add
add
out
xor
daa
cmpsl
add
jae
das
test
ret
sti
ret
fnsave
push
cmp
lahf
scas
mov
bound
jo
xor
aad
pop
stc
mov
shr
cmp
addb
cs
cmp
xchg
lahf
lcall
out
popa
lods
xchg
arpl
sub
aaa
stc
shll
sub
rorl
inc
and
push
pop
inc
xchg
inc
outsb
push
mov
lea
loop
mov
subb
dec
sbb
out
and
xchg
ficomps
push
pop
cmp
and
enter
ss
fistpl
les
call
icebp
dec
lea
cltd
cmp
jne
aaa
int
add
pop
sub
loope
subl
or
add
fs
sub
fildl
xchg
data16
mov
add
fsubs
dec
adc
fwait
xlat
cmp
aam
sbb
jg
mov
imul
test
xchg
in
loopne
sbb
fs
push
ja
sbb
into
mov
lock
mov
inc
cmpsl
mov
adc
cmp
je
dec
xor
xor
and
pop
ficoml
jnp
scas
data16
mov
jno
icebp
cmp
into
push
into
xor
test
dec
jno
int
out
sahf
jp
xor
insl
cmp
repnz
movl
mov
pop
mov
outsl
push
mov
jne
les
fmul
mov
push
cmpsl
and
divl
jp
lret
data16
fimull
and
lea
pop
inc
outsb
fists
icebp
fisubrl
push
scas
aad
mov
dec
js
out
mov
fmull
cmpb
repnz
int3
into
movsb
cli
and
pop
fwait
xchg
movsl
cmp
push
adc
repnz
addr16
add
pushf
inc
and
xor
or
fcomp
sub
js
mov
push
sub
sbb
adc
inc
pop
mov
in
fwait
mov
add
rolb
fldl
insl
pushf
in
xor
pop
fldt
test
sarl
sub
pusha
and
push
js
in
and
out
mov
mov
data16
shrl
jge
jno
jg
pop
mov
dec
adc
mov
mov
dec
in
loop
std
push
rclb
icebp
vmovupd
jae
dec
hlt
out
sbb
daa
nop
mov
loope
bound
mov
cld
out
mov
pusha
std
negb
add
iret
adc
dec
push
push
xchg
dec
add
cmp
outsl
mov
jmp
push
xor
es
add
pand
call
cmp
pop
inc
jb
jbe
clc
push
pusha
arpl
dec
lret
shrb
gs
push
mov
jb
xor
cli
cmp
cs
leave
xor
mov
cmc
push
jo
rclb
sbb
je
mov
push
mov
stc
in
cmc
pusha
negl
es
push
fcoml
xlat
es
sub
insl
adc
outsl
jns
adc
loope
jbe
add
push
jns
hlt
xchg
push
mov
data16
rorl
fwait
push
push
xchg
adc
mov
cli
loopne
adc
gs
cld
je
lock
stc
or
cwtl
xor
int
lods
push
orps
jae
daa
and
xchg
leave
add
mov
icebp
in
notb
adcb
dec
decl
pop
xchg
rcrl
pop
mov
add
inc
sbb
push
xlat
fsubrs
add
push
arpl
mov
inc
jl
jne
out
jo
push
test
sub
add
stos
lcall
mov
push
nop
ja
push
push
dec
int3
xchg
xlat
jne
sbbb
push
cmp
jb
cltd
cwtl
inc
outsl
cmp
aam
lret
ffree
out
bound
mov
lret
xchg
cmp
mov
mov
mov
and
mov
fisubrl
lds
push
mov
pop
mov
adc
cmpsb
pop
xchg
inc
hlt
clc
enter
add
push
lods
jae
movl
stos
arpl
mov
std
xor
push
xchg
dec
int
inc
mov
fwait
or
inc
outsb
xchg
dec
test
jb
imul
loop
cmp
mov
push
mov
jge
jne
inc
pusha
adcl
sub
jge,pt
jecxz
mov
ficoml
adc
or
xchg
insb
in
outsl
sahf
ret
xchg
sub
sub
pop
xchg
mov
in
popa
movsb
pop
in
inc
mov
ss
sarl
mov
mov
lock
fwait
jl
xchg
and
mov
mov
mov
mov
adcb
xchg
or
add
and
push
jne
push
inc
cwtl
sbbb
push
or
outsl
xchg
or
das
mov
pop
and
rcrl
mov
std
push
xor
push
movsb
inc
xor
out
addr16
pop
xchg
out
insl
test
mov
fwait
sub
stos
inc
cltd
fcomip
cli
mov
mov
fidivs
mov
into
dec
mov
imul
test
data16
fimuls
int
cli
lods
pop
push
sti
pop
push
sti
rcrl
imul
sub
es
add
cmp
inc
sbb
xchg
scas
icebp
push
mov
sub
xchg
sarl
lcall
lahf
in
inc
in
xchg
js
sbb
jl
andl
push
inc
in
xchg
sbb
xchg
adc
bnd
insl
sbb
ss
aam
adc
push
inc
aam
scas
push
push
pop
dec
add
add
fcoml
xchg
int3
idivl
add
add
mov
das
inc
adc
test
movsb
out
pop
in
insl
push
cmc
mov
cmpsl
inc
or
or
adc
test
adc
pop
or
xor
lret
jg
add
jbe
and
leave
aaa
sbb
sub
xor
xchg
jns
and
lret
push
adc
sbb
sti
fldl
mov
fiaddl
pop
jle
leave
adc
enter
popf
subb
call
movswl
es
fstpt
dec
imul
jae
ss
add
out
shlb
xchg
mov
mov
dec
fsubrp
add
mov
or
push
sbb
mov
cmp
dec
stos
push
or
popf
shr
repz
jle
insl
pop
mov
mov
lods
sub
add
jne
cmc
out
pop
ret
xchg
mov
addr16
inc
mov
mov
dec
fistpll
push
shrl
test
inc
lret
mov
mov
enter
or
stos
sbb
fisttpll
sbb
flds
test
jb
rcll
push
mov
sub
cmp
push
in
cmp
xorb
xor
push
cmp
adc
sub
cwtl
dec
or
lea
push
imul
mov
repnz
mov
jno
pop
jns,pt
les
sub
sub
cwtl
cli
sti
add
loopne
xor
jb
xchg
imul
pushf
imul
nopl
push
or
imul
xchg
mov
pusha
mov
les
gs
shrb
std
jp
mov
adc
ja
pop
lds
lds
sti
mov
push
or
xor
push
inc
in
and
stos
xor
push
jb
or
rcll
mov
nop
pop
xorl
jno
sub
mov
mov
in
icebp
subb
addb
fdivrs
inc
xchg
sbbb
mov
stc
add
push
mov
test
and
push
cltd
mov
pushf
rorl
ret
fs
sbb
call
loopne
pop
and
sbb
inc
mov
mov
push
loop
push
out
mov
mov
nop
jg
repnz
mov
gs
jle
push
xchg
and
cwtl
in
xchg
ja
arpl
xor
loopne
mov
xchg
ljmp
mov
je
and
cmp
jp
dec
cmc
inc
ficompl
outsl
nop
sbb
cs
xchg
shlb
ficomps
inc
pushf
xchg
mov
shll
fmul
push
dec
stos
test
jecxz
outsb
pushf
shr
or
out
xchg
inc
int
push
push
jne
jo
outsl
jg
add
push
lods
cmp
ljmp
mov
movsl
dec
mov
sar
fildll
mov
dec
fisubrl
imul
sbb
stc
data16
mov
fcomi
jbe
fadds
xor
or
mov
adc
push
and
push
nop
dec
push
out
mov
jle
jmp
fdivrl
xchg
aam
movsb
hlt
cmpsl
jge
mov
mov
jo
push
in
jg
jle
dec
popa
es
shrl
in
lock
cld
jp
test
jl
nop
jnp
lcall
pop
or
mov
dec
dec
mov
cmc
inc
mov
sbbl
pop
mov
xor
stos
vpcmpeqw
fiaddl
xchg
pop
pop
xchg
sbb
mov
aaa
add
insl
iret
jle
mov
pop
shlb
shrb
adc
mov
push
inc
insb
xchg
mov
ljmp
mov
cmp
pop
fldl
in
add
testb
xchg
mov
hlt
push
sub
dec
add
sbb
enter
sub
popa
fs
xor
shl
adc
dec
lea
and
dec
sahf
pusha
stos
xchg
loopne
sbb
cmp
inc
jp
or
xchg
adc
fcmovbe
cmp
cli
outsl
adc
jmp
add
dec
roll
cwtl
cmp
es
inc
clc
loopne
mov
inc
ds
std
outsl
cmp
sub
adc
push
imul
icebp
sub
xorb
pop
out
scas
in
push
push
mov
mov
cltd
mov
xchg
mov
imul
ret
xchg
sub
bound
aad
push
xchg
popa
aad
mov
shlb
xor
jmp
int3
sbb
and
mov
lcall
jnp
mov
inc
movsb
iret
push
mov
xchg
and
popf
pop
add
lods
aaa
push
push
fdivrs
rorl
inc
enter
mov
addb
cmc
enter
xor
xchg
mov
pop
loope
xchg
mov
pop
sub
mov
aam
or
andb
movsl
sub
ret
fildl
and
mov
pop
gs
xchg
rcr
imul
inc
insl
loopne
sbb
and
mov
push
xor
pop
repnz
cmc
jle
out
daa
repz
and
ja
add
mov
sub
push
test
dec
dec
mov
nop
iret
xchg
shlb
dec
aaa
mov
stc
inc
stos
sub
in
ds
push
add
mov
insb
bnd
imul
movb
pop
and
xchg
sbb
lahf
lods
jb
ja
ds
outsb
js
xor
pop
xlat
mov
fwait
push
loop
lret
int
pop
xchg
out
in
xor
rcrl
ret
cmpsl
mov
sbb
rcr
and
ja
aad
lahf
gs
xchg
or
push
adc
or
add
jge
int
repz
clc
jno
out
idivb
xchg
xchg
out
aam
loopne
sarl
cmp
mov
xor
and
adc
lock
jo
push
or
test
repz
pop
punpckhdq
daa
pop
ljmp
sahf
sbb
mov
cmpsl
add
jae
jmp
sahf
js
fsub
scas
mov
cld
inc
adc
aas
mul
xchg
sub
sub
outsl
mov
dec
mov
adc
fs
stos
cmp
push
mov
sbb
mov
jmp
aad
mov
ficoms
in
pop
test
rcrb
clc
mov
loopne
scas
and
shll
add
rol
or
out
or
andl
mov
mov
mov
sbb
divl
fldcw
adc
cmpsl
xchg
cltd
loope
loope
jl
dec
jns
and
dec
add
and
test
sub
mov
xlat
jg
shlb
shlb
ss
jnp
pop
or
adc
pop
je
cld
aam
push
jmp
cs
mov
inc
rorl
imul
stos
arpl
out
and
pusha
xor
js
in
xchg
xorl
add
clc
xchg
jne
xchg
push
cmpsb
adc
sti
add
clc
cmpsb
push
sub
pushf
ret
pop
xor
movsb
lcall
add
cmp
fsqrt
jno
andl
lcall
pop
into
jo
outsl
pop
push
mov
leave
cmp
add
xor
leave
movsl
adc
rcr
fidivrs
or
inc
adc
rcll
push
mov
clc
mov
or
and
mov
inc
movsb
sbb
pop
ljmp
stos
aas
xchg
push
je
inc
fmulp
pop
or
ljmp
data16
leave
or
pop
and
lahf
test
hlt
jp
in
xor
movsb
js
and
insl
xor
into
mov
mov
popa
jmp
loope
stos
cmp
cmp
fsubrl
xchg
mov
sbb
pushf
stos
pop
shrb
xor
mov
jp
icebp
in
std
pop
xlat
xchg
cmp
pop
xor
aas
mov
xor
pop
dec
je
cmp
inc
shr
pop
push
adc
ja
jp
stos
lea
repnz
scas
mov
cmp
inc
fnstsw
imul
lea
arpl
aaa
aas
rorb
or
stos
add
jnp
and
mov
and
mov
cmp
shll
or
test
dec
add
fidivrs
mov
mov
sti
mov
bound
jae
add
movsl
jo
jnp
ret
or
lret
cmp
jb
cmp
or
imul
or
sub
cli
lods
pop
pushf
cmpsb
les
mov
mov
xchg
pop
fnstenv
xchg
dec
jg
mov
sahf
adc
rcll
mov
and
cmp
mov
mov
int
mov
cmp
in
add
jne
cmp
cmp
inc
xchg
popf
adc
ljmp
mov
jnp
dec
sub
pop
out
mov
js
rolb
call
dec
int3
popf
mov
ljmp
addr16
cld
rorl
lods
adc
pop
xor
pop
push
loope
into
inc
insl
mov
pusha
sbb
cmp
enter
xchg
add
jmp
outsb
sub
cmp
or
xor
lahf
jb
push
push
and
sub
adc
aas
adc
add
lret
mov
push
mov
cmpsb
mov
jg
add
cs
movl
rorl
aad
nop
mov
inc
xor
cmp
dec
shlb
push
push
and
neg
cwtl
lahf
imul
addr16
sbb
fistpll
int
mov
incb
mov
int3
sub
or
out
addr16
mov
mov
adc
xchg
test
cmp
add
inc
lahf
mov
jg
or
jne
out
mov
jnp
ror
cmp
mov
bswap
push
std
sbb
mov
push
mov
cli
mov
cmpsl
cli
adc
inc
mov
in
adc
push
xor
sub
push
xor
jp
mov
std
mov
jmp
xchg
mov
add
ds
aaa
scas
fistl
cmpsb
add
repz
pop
mov
stos
push
pop
testb
aad
arpl
mov
sub
push
mov
test
pop
in
jmp
jne
cli
subl
insb
mov
cmc
push
push
ljmp
jae
adc
pop
ret
popf
call
in
or
pop
jnp
out
xchg
lret
inc
xchg
push
ds
push
xchg
mov
in
popa
inc
jecxz
add
adc
dec
cmpb
push
xor
cmpl
xchg
add
lahf
int3
add
sbb
sbb
jecxz
jno
xor
jge
adc
pop
sar
dec
xor
push
jno
sbb
icebp
nop
lds
xor
scas
aad
roll
inc
mov
shll
mov
xor
and
jnp
sub
adc
mov
jecxz
hlt
mov
push
inc
cld
mov
test
daa
cli
push
and
xchg
fcomip
xchg
jle
int3
add
dec
jle
sbb
fwait
dec
jg
jp
xchg
push
repnz
add
js
sbb
pushf
add
int
jo
inc
pop
pop
ret
out
inc
xchg
sbb
mov
xor
in
xlat
scas
jg
nop
out
jno
xchg
jl
popf
mov
rcl
dec
imul
icebp
mov
ljmp
add
and
fs
mov
mov
shrl
or
sahf
and
xchg
daa
insb
repz
add
iret
pop
std
add
mov
das
addb
cmp
xchg
push
jae,pt
daa
pop
aaa
shlb
xor
movswl
mov
ror
test
aas
mov
inc
mov
cmpsl
sbb
jmp
push
mov
add
mov
sbb
scas
cmpsl
mov
pop
test
cli
mov
jmp
inc
cmp
mov
xor
cli
mov
seta
jb
push
aam
push
mov
daa
jmp
mov
push
dec
adc
insl
and
enter
cmp
movsl
and
mov
lret
repz
pop
ficoms
movsb
push
decl
add
pushf
pop
xchg
cmp
mov
or
movsl
pop
insb
sub
lcall
jge
inc
fs
cmpb
and
add
and
xsha1
cmpsb
iret
in
mov
into
add
andb
out
add
dec
lahf
cmc
icebp
sbb
dec
jne
cmp
fldt
dec
cmp
lea
fld
leave
inc
jle
aam
mov
mov
lea
out
loope
adc
mov
or
mov
imul
shrb
mov
jb
jecxz
push
adc
loopne
mov
daa
sub
add
and
cmp
sbb
sbb
popf
pop
in
in
push
mov
pop
in
iretw
dec
mov
push
insl
mov
js
shll
adc
cmp
mov
shll
sbb
pop
stos
nop
mov
add
repnz
cmpsb
jg
mov
push
sub
push
hlt
mov
xchg
stc
cmpsb
fsubs
add
jle
push
jbe
js
inc
push
sbb
fnstsw
cwtl
mov
xchg
push
fisubrl
cltd
inc
lcall
mov
mov
rcll
mov
out
inc
rorb
add
mov
cld
out
jmp
add
insb
inc
sbb
mov
xor
gs
movsb
sbb
push
idivb
jae
cmp
jge
shl
into
out
out
jg
xor
pop
mov
xchg
ss
push
repnz
jnp
cli
sbbb
push
stos
lret
inc
push
xchg
pop
xchg
gs
mov
out
mov
adc
jnp
mov
cli
xchg
mov
in
gs
aas
adc
sub
fs
fstpt
fistpl
les
inc
and
div
ljmp
ljmp
and
push
int
inc
int3
cwtd
sahf
dec
cmp
imul
inc
in
dec
lret
sbb
sbb
cld
xchg
or
into
pop
movsl
mov
out
pop
push
ss
jmp
add
in
addb
rcr
dec
mov
xchg
jnp
dec
push
aam
push
lods
movsl
outsb
frstor
nop
push
or
sbb
icebp
arpl
sbb
enter
adc
dec
inc
stos
and
mov
xor
loope
int3
loopne
inc
xchg
add
push
dec
in
leave
in
ja
push
shlb
movl
lcall
leave
in
push
mov
enter
shr
inc
dec
lock
or
jecxz
sub
lret
mov
andl
aad
and
cli
jge
call
stc
mov
gs
sbb
mov
sub
mov
cmp
movsl
das
jno
push
inc
fsubs
inc
jbe
cmp
lcall
js
inc
and
push
push
enter
adc
mov
fcoms
jnp
test
xchg
mov
jg
xchg
sub
andps
adc
loopne
ret
test
push
add
jo
ret
rcrb
outsb
sbb
inc
mov
sarl
repz
stos
xchg
rcrb
les
and
mov
push
xor
pop
dec
push
jge
orb
hlt
mov
mov
sahf
push
push
push
jge
mov
lods
mov
xor
jl
fistpl
cmp
mov
mov
dec
rol
jecxz
gs
fsts
dec
sub
mov
leave
ljmp
insl
jo
push
rolb
push
mov
bound
es
fidivrs
mov
xlat
data16
mov
adc
and
mov
xchg
lret
push
icebp
cmp
out
lret
mov
scas
mov
call
push
mov
out
xchg
push
mov
or
int3
inc
hlt
mov
movsl
ret
subl
cmp
or
inc
testb
aad
cld
test
mov
dec
ret
push
dec
sub
xor
xchg
xchg
lods
and
out
aam
mov
paddw
es
add
sub
add
mov
stc
lds
pop
xor
lods
sub
cmp
sub
add
loope
in
xchg
addr16
jecxz
movsl
fucompp
out
imul
adc
mov
inc
ret
push
stc
out
rcrl
idivb
mov
mov
lods
sbb
pop
cmp
pop
pop
outsb
mov
arpl
es
push
fistpl
push
imul
cmp
daa
and
mov
mov
imul
dec
rclb
pop
gs
add
pop
rcr
dec
ss
jmp
in
dec
mov
xchg
ja
mov
jl
adc
pushf
push
in
rolb
mov
push
or
xchg
daa
mov
jo
fmull
out
xchg
int
cmpl
es
call
pusha
mov
loopne
add
mov
inc
aam
sub
add
mov
ss
repnz
rorb
outsl
cmp
ja
pop
pop
and
xor
subb
dec
int
nop
sbb
xor
mov
popf
or
shlb
mov
ja
xlat
jecxz
cmp
scas
mov
and
rclb
and
stc
loopne
dec
mov
push
jecxz
mov
or
jnp,pt
pop
hlt
xorb
test
jo
lock
cmc
pop
stos
lods
loopne
std
pushf
or
add
mov
cmp
iret
jno
push
push
dec
mov
sub
idivl
daa
inc
sbb
adc
sub
xchg
xor
and
testb
fisttps
sub
cmp
lcall
mov
das
pop
jbe
sbb
xlat
call
cmp
int
outsl
fsts
mov
jns
jnp
aam
xor
adc
pushl
mov
repz
cld
inc
scas
imul
jbe
filds
stc
in
jne
adc
daa
sbb
lahf
jecxz
jb
lret
fwait
data16
jns
mov
mov
xor
mov
mov
and
lods
lea
test
mov
jne
xor
or
dec
add
pushf
mov
sub
mov
fcoml
insb
dec
mov
push
add
pop
mov
bound
push
repnz
xor
test
out
inc
inc
adc
sahf
xchg
jle
push
push
or
sub
ja
lahf
push
and
add
lock
xor
mov
mov
lods
pop
sbb
mov
lock
mov
jle
push
icebp
pop
pop
sbb
das
mov
add
mov
outsl
pop
lret
add
pop
pop
inc
push
roll
nop
mov
dec
jg
test
mov
repnz
adc
xchg
bound
cmp
stos
or
push
orl
dec
test
movsl
gs
ret
ds
sbb
mov
push
mov
stc
test
mov
paddw
rolb
jno
pushf
andl
xor
mov
in
imul
int
dec
jb
xor
test
and
or
out
outsb
xchg
mov
lds
push
push
mov
jle
sbb
bound
xor
out
xchg
and
pushf
pop
add
mov
mov
nop
mov
adcl
fistpll
rorb
pop
std
test
aam
ret
js
outsl
jg
lods
pop
dec
mov
lea
adc
or
in
movsb
sbb
cmp
push
push
add
jp
cmp
insl
and
push
mull
rorb
sub
aam
adc
scas
push
or
mov
loopne
out
pop
in
jae
and
push
jmp
sbb
or
pop
mov
jne
mov
cld
cwtl
test
idiv
in
pop
cmc
into
xor
lock
fwait
jl
lea
mov
frstor
mov
mov
fstps
or
into
sbb
cmpl
lods
cwtl
loope
or
pop
rorl
shll
mov
cmpsb
add
cs
sub
mov
and
aam
sub
xchg
loopne
dec
loop
cli
icebp
or
adc
loopne
das
aam
and
xchg
adc
inc
xchg
dec
subb
mulb
xchg
mov
push
pushf
imul
loopne
xor
cmpsb
aad
lods
push
mov
sub
inc
dec
pop
leave
arpl
arpl
test
jnp
xchg
loop
test
stos
mov
jbe
pop
shr
mov
sub
in
and
testb
popa
out
imul
js
sbb
mov
rcrb
js
clc
xor
outsb
stos
mov
jge
push
dec
in
xchg
leave
xor
mov
aam
stos
adc
imul
pop
pop
dec
test
sbb
mov
lcall
cli
sbb
or
mov
xor
mov
add
dec
add
pop
xchg
cmp
mov
cmp
mov
mov
aad
int
lahf
xchg
push
adc
push
mov
call
sbb
mov
decl
je
jmp
and
cmc
cmp
or
loop
in
iret
mov
or
or
pop
out
bnd
dec
fisttpl
jae
xchg
cmp
repnz
dec
ficoms
mov
xor
push
inc
popf
sub
cltd
ljmp
sbb
andl
fdivl
jp
mov
test
push
nop
pop
or
repz
adcl
lock
mov
mov
inc
cmpsl
pop
rcr
and
xchg
movsl
sarl
mov
shll
cmc
mov
push
movsl
nop
jne
pusha
mov
mov
jge
jbe
or
pop
jecxz
stos
mov
and
xlat
pop
push
push
pop
xor
cli
jecxz
dec
shrb
inc
xchg
jmp
scas
stos
nop
call
mov
or
lods
addr16
cltd
mov
or
int3
sbb
mov
test
add
fwait
push
cmpsb
or
data16
sbb
cwtl
xor
and
addr16
add
jb
push
nop
inc
inc
mov
lea
jbe
gs
loope
push
sub
outsl
mov
mov
or
imul
orl
mov
push
jno
jle
push
ret
jns
roll
ficompl
es
pop
jb
xor
dec
cmp
jl
stos
lahf
rorl
jnp
fsubl
fwait
xor
cwtl
jns
in
cltd
and
cmp
sbb
pop
mov
cltd
loopne
sub
mov
dec
xor
inc
mov
mov
cmpsl
pop
push
adc
mov
lea
in
andb
dec
inc
les
stos
imul
add
mov
divb
imul
cmpsl
outsl
add
rcll
xchg
pop
cmp
das
mov
and
push
inc
test
jae
fistl
add
ja
mov
jle
xor
pop
jle
mov
aaa
push
pop
hlt
add
cmp
mov
test
imul
mov
jae
cld
and
repnz
push
mov
jno
adc
popa
out
gs
pop
dec
xchg
movsl
jl
inc
je
pop
cltd
fisubrl
in
sbb
xor
sub
add
adc
fldcw
imul
sahf
sub
in
js
dec
add
jb
jp
sbb
out
jae
xor
fcomps
movsl
mov
push
out
adc
dec
cwtl
nop
pusha
loopne
jne
and
mov
pushf
xorb
jbe
jmp
adc
xchg
dec
ret
mov
out
rcll
mov
inc
loopne
jp
adc
dec
pushf
jnp
ss
mov
insb
sub
mov
xor
add
icebp
lods
push
les
lret
int3
dec
mov
mov
xlat
movsl
in
test
mov
pop
push
jbe
shll
std
inc
cld
cmp
cmpsl
ret
push
sub
outsl
mov
sti
fdivrs
test
jecxz
fst
js
bswap
or
aad
push
cltd
and
shlb
push
sub
addl
push
rorb
je
sarb
cmp
push
cli
cmp
jle
cmc
inc
inc
add
orl
adc
outsb
xchg
cmp
fsubrl
inc
mov
mov
pop
popa
adc
jp
sahf
and
stos
sub
pop
cli
cmp
test
int
add
xor
dec
jne
adc
push
cli
mov
and
rcr
mov
scas
gs
in
lods
jg
push
fidivrs
xor
imul
aad
rorl
outsl
scas
jmp
test
or
in
add
inc
and
lahf
xor
lahf
and
jbe
insl
imul
add
add
in
sub
and
jae
push
and
daa
adc
je
lea
jb
cmp
or
or
jmp
inc
rcrb
jp
or
xchg
xchg
add
sbbl
mov
lcall
jbe
mov
cmp
cmp
sub
leave
pop
sub
mov
shlb
mov
jb
pop
xor
xor
and
insb
xchg
test
andl
out
js
dec
xchg
cmc
loop
or
outsl
jle
in
ja
leave
inc
ds
lret
pop
jecxz
add
cmc
jl
jl
dec
xor
out
out
fisubrl
mov
pop
fisubrs
js
sbb
cwtl
pop
or
jae
adc
lcall
lods
jno
xchg
push
adc
aad
cmp
inc
pop
leave
imul
movb
jl
mov
ret
sub
jb
in
mov
push
cmp
pop
xor
nop
fwait
lahf
xchg
std
or
add
stc
clc
xor
shr
insb
xchg
addr16
sub
stos
add
xchg
pop
rcrl
dec
xchg
lods
lahf
ret
insb
mov
sub
in
es
addr16
leave
xchg
jb
inc
push
xchg
push
movsl
jg
jnp
repnz
pusha
imul
mov
push
inc
testl
mov
movsl
imul
sbb
sbb
sub
xlat
lcall
push
fdivs
or
sub
sub
pushf
sub
cli
and
sub
call
mov
imul
adc
pop
loope
jmp
and
fsubr
fistps
lds
pop
xchg
pop
xchg
test
ret
fwait
adc
push
cmp
subl
cmpsl
out
xchg
pop
ret
jp
dec
or
std
mov
mov
cmp
in
mov
mov
add
loope
iret
int
dec
movsl
mov
in
movsl
mov
add
mov
shrb
addr16
fstp
inc
mull
data16
jg
xor
ret
sbb
repz
lds
or
pop
xor
mov
push
rcrb
push
push
aad
mov
das
daa
push
and
and
mov
pop
add
push
xor
sub
inc
and
mov
inc
jo
mov
mov
push
icebp
aam
sbb
xlat
adc
cmc
sbb
cltd
mov
aam
sub
jge
xor
mov
les
jne
mov
sub
xchg
mov
stos
sbb
add
jne
and
and
push
jno
inc
in
icebp
push
push
xchg
sahf
push
lods
into
testl
pop
sbb
adc
int
dec
aaa
mov
or
loopne
enter
dec
jg
or
mov
stos
or
mov
xchg
lahf
or
adc
dec
pop
cmp
adc
loopne
push
xchg
sub
push
push
dec
add
adc
cld
fsubrl
mov
test
jns
jnp
push
pop
inc
pop
cltd
mov
clc
mov
lds
fidivl
mov
mov
loopne
sbb
out
inc
adc
pop
aam
add
lods
dec
dec
xchg
out
push
lock
pop
mov
pop
ret
adc
enter
in
mov
push
xor
adcb
push
xchg
push
lock
xor
sbb
add
add
push
addr16
imul
pop
pop
inc
ja
mov
jnp
mov
mov
scas
mov
ds
mov
int3
flds
aas
or
scas
sbb
pop
mov
je
xor
xchg
mov
sbb
jbe
inc
mov
repz
fmull
or
adc
xchg
loop
call
cmp
rolb
cmc
adc
sub
adc
pop
xor
sub
xchg
les
mov
iret
push
clc
in
test
inc
shlb
scas
and
daa
sbbl
jp
jns
mov
push
stos
mov
loop
jp
das
test
mov
test
mov
mov
mov
mov
jae
add
xor
shrl
mov
jp
aad
add
push
inc
jecxz
sbb
xchg
movsl
fs
sbb
sti
mov
and
or
and
std
sti
mov
mov
add
aas
jo
aad
lret
in
dec
lcall
out
insl
jno
ja
pop
xchg
test
cs
mov
popa
arpl
sbb
push
sahf
cmp
imul
ja
popf
mov
scas
mov
test
in
das
enter
icebp
push
jns
cmp
xchg
xor
or
mov
xchg
xchg
js
movsb
addr16
fidivl
adc
push
popf
sub
xor
psllq
xchg
test
fsubs
push
nop
mov
pop
repnz
std
movsl
push
mov
adc
into
and
pop
shll
inc
add
fwait
inc
sub
sub
add
sbb
sbb
adc
stos
ret
mov
fcomip
insl
out
pop
movsl
lods
dec
repz
lock
push
inc
push
arpl
adc
adc
push
popf
add
jns
jmp
divb
push
and
mov
das
xorl
imul
nop
or
gs
or
and
mov
arpl
aaa
mov
mov
mov
add
pop
stos
inc
test
call
and
popf
xchg
jne
adc
out
xchg
int3
pop
movsl
fwait
add
sbb
cmpsl
adc
dec
inc
push
xlat
dec
stos
and
test
xor
push
call
xlat
cmp
jle
mov
je
jno
add
int3
or
mov
testb
jp
xor
cmp
adc
repz
xchg
or
cmp
ds
inc
cmpl
aaa
and
call
popf
mov
cmp
push
mov
xchg
jne,pn
xchg
popa
push
out
inc
push
out
xor
xchg
xchg
js
insb
fistpll
fsubrl
and
dec
mov
push
mov
int3
add
mov
clc
leave
mov
inc
sar
rorb
adc
mov
shlb
mov
iret
aaa
pop
jg
lahf
fsubr
nop
and
in
adc
dec
mov
es
and
jge
outsl
dec
aad
and
std
into
out
cltd
cmp
inc
dec
ret
push
sub
adc
sbb
adc
sti
or
push
out
in
xchg
xchg
mov
cmpsb
out
std
mov
inc
pop
loop
lods
pop
or
lea
scas
hlt
cmc
in
dec
out
enter
xchg
lret
fidivrl
sbb
sub
jo
pop
dec
mov
xor
xor
lds
imul
or
sub
jp
sub
or
push
mov
mov
push
pop
fiaddl
dec
cmp
push
insl
repz
out
movsl
out
mulps
adc
incl
aaa
cmpsl
pop
sti
push
adc
push
xchg
jl
popa
shr
rol
lret
clc
movsb
xor
sbb
out
mov
mov
cld
dec
mov
mulb
adc
es
and
or
in
cmp
out
push
movsb
or
mov
js
cmp
push
movsb
mov
pop
jp,pt
rcr
adc
push
lcall
cmp
cmp
adc
aad
stos
and
and
jmp
or
femms
aaa
fsubrl
mov
mov
loop
adc
lret
aad
cmp
xchg
movsl
fcoms
cmp
out
inc
popa
and
sub
cmpb
pusha
aad
in
mov
xchg
nop
xchg
stc
pop
jl
in
sub
add
jns
pop
adc
and
add
idivb
dec
adc
mov
cltd
inc
xor
mov
dec
outsb
xchg
ret
mov
cmpsb
int
lahf
movsb
xchg
adc
cltd
sub
inc
jb
inc
mov
cmpsl
imul
notb
inc
insb
mov
mov
add
pop
bnd
lds
aam
adc
int3
xor
fucomp
or
mov
sub
push
testb
inc
rcrb
sti
push
in
jb
in
push
pop
add
jnp
cmpsl
push
movsb
data16
cmc
or
mov
jbe
inc
mov
je
in
in
xchg
adc
pop
jecxz
push
jecxz
or
call
jge
mov
rcl
push
jo
xchg
jbe
mov
cmp
sti
inc
push
pusha
ss
cmpsb
ds
mov
ret
lcall
sahf
sub
daa
test
and
xor
xchg
nop
mov
push
sbb
outsl
mov
mov
addb
add
xor
paddq
xchg
jg
das
loopne
test
xchg
lcall
xchg
push
inc
sub
add
mov
mov
sub
mov
aaa
add
push
pop
push
js
andb
loopne
dec
pop
adc
aad
lds
sbb
mov
adc
dec
inc
jecxz
xchg
jbe
pop
into
rolb
xor
int
cwtl
pop
mov
ljmp
shlb
adc
stos
jge
aam
arpl
loope
ds
jb
mov
repz
fstpl
stos
out
out
inc
sarb
and
push
push
and
lret
dec
xor
mov
jge
andb
leave
loope
mov
idivl
push
gs
adc
out
add
jl
ljmp
out
adc
add
mov
ret
cmc
movsl
mov
enter
sub
adc
inc
pop
data16
test
push
inc
out
xorl
incb
xchg
push
mov
jle
stos
imul
mov
push
mov
imul
cmp
pop
jnp
movsl
sub
das
das
icebp
cmc
add
cltd
icebp
xor
xchg
stos
in
jle
adc
inc
mov
mov
daa
dec
and
add
push
inc
addb
stos
bound
enter
sub
std
sub
or
call
es
push
out
push
mov
pcmpgtb
sbb
ss
push
or
imul
xor
cli
push
mov
aaa
movsl
pop
in
enter
inc
addl
xor
push
stos
daa
jp
fadd
aaa
scas
test
js
and
lret
decl
add
es
in
repnz
nop
shlb
jno
mov
nop
mov
xchg
jnp
mov
les
xchg
fdivp
arpl
ss
add
lods
jp
movsl
sub
sbb
aad
enter
ljmp
sbb
cs
jg
inc
imul
test
jnp
ss
pop
push
rorl
sahf
pop
bound
nop
fadds
pop
scas
fimuls
jecxz
xor
jo
das
jns
adc
test
adcl
shlb
mov
lea
push
loop
mov
inc
ret
adc
xor
shlb
jo
xchg
ret
adc
xor
cmp
xchg
mov
inc
or
add
pushf
jno
test
jmp
adc
inc
pop
popf
inc
adc
inc
or
jns
push
cwtl
xlat
pavgb
pop
inc
adcl
outsl
pusha
inc
mov
jae
popa
cmp
or
filds
ret
ljmp
inc
jle
sub
lods
ret
or
insl
mull
in
pop
mov
stos
xor
gs
add
out
mov
mov
xchg
test
add
adc
dec
fmull
sub
imul
ss
cld
pusha
in
bound
sbb
xor
mov
lahf
pop
and
fsubs
cs
or
and
jbe
and
dec
fwait
cmpsb
mov
orl
lret
test
jmp
dec
xchg
imul
jmp
arpl
mov
cltd
push
ficoms
xchg
pop
outsl
ret
dec
mov
jo
mov
add
cmp
out
js
sahf
inc
aad
in
inc
ret
ficomps
pop
fldenv
outsl
jl
daa
ret
jno
xchg
shlb
ret
or
pop
scas
fcoms
and
mov
fldcw
sub
int
dec
dec
fwait
sahf
sbb
jecxz
push
lcall
aaa
imulb
mov
cmp
cmp
bound
repz
xor
lods
ret
shrb
inc
lret
stos
icebp
push
cmpsb
subl
outsb
loope
bound
in
push
mov
mov
cmpb
jecxz,pn
push
add
outsl
cmp
lock
lcall
sar
jbe
psrlq
ret
pop
dec
cmp
jae
loop
ss
adc
adc
mov
sbb
push
xor
pop
pop
jge
cmp
adc
inc
pop
xor
jecxz
xchg
ljmp
xchg
jb
mov
mov
jmp
test
outsb
out
rclb
mov
or
jbe
scas
dec
sti
mov
mov
insl
cmpb
mov
test
das
cs
sahf
xor
popa
push
push
cld
mov
arpl
outsb
shl
lods
xor
cmp
dec
pop
mov
cld
mov
shlb
dec
or
push
push
jle
aaa
push
test
xor
repz
and
shlb
mov
into
enter
iret
cwtl
dec
sbb
xor
ret
ret
cltd
loop
push
xchg
or
pop
jge
sbb
jmp
mov
pop
rol
cmp
adc
je
shlb
dec
addr16
repz
jmp
add
int
inc
push
mov
pop
jb
lcall
xchg
into
ljmp
xor
sbb
fdivrs
jmp
scas
xchg
jmp
add
fists
mov
inc
xchg
ds
and
lock
pop
popf
push
inc
adc
pop
push
fldl
popa
xor
dec
test
repz
mov
movsb
and
and
jl
mov
inc
arpl
and
jecxz
cs
les
push
dec
pop
sbbl
jb
sub
ret
mov
push
mov
in
sarb
cli
mov
pushf
jge
lods
push
les
or
test
or
mov
mov
fmulp
sub
mov
fldcw
mov
lods
xor
out
push
inc
cmc
int
jb
data16
stos
je
out
rcll
sub
jp
xor
sbb
push
out
out
adc
or
jb
jbe
lahf
ds
mov
es
int3
inc
or
jne
or
push
int
adc
pop
ds
sub
shll
xchg
xchg
add
dec
add
pusha
jne
or
mov
mov
push
push
rcll
les
bound
mov
push
adc
clc
push
xchg
dec
jno
js
pop
xor
add
mov
jle
enter
push
and
mov
mov
dec
push
mov
dec
loop
push
pusha
jmp
lahf
push
daa
sbbb
out
lcall
xchg
rolb
imul
rcll
repz
daa
add
mov
cmp
popf
loope
cmp
add
lock
sbb
pop
jnp
or
xchg
xchg
inc
sti
and
dec
mov
je
sbb
shll
in
mov
rolb
jle
enter
stos
fcoms
andb
sbb
fmull
out
testl
test
sarb
je
add
adc
sahf
adc
sarb
mov
dec
cmc
test
insb
cmp
mov
cwtl
push
jmp
ret
mov
inc
lods
cmp
inc
jbe
popf
out
inc
mov
pop
fidivl
jae
sub
jmp
fcoms
jne
sbb
inc
mov
push
lret
or
push
shrl
int
call
shrl
sahf
call
xchg
ret
stos
push
dec
ja
bound
cmp
sbb
test
inc
cmpsb
loopne
push
push
ja
fdivrs
scas
lods
jb
cmp
push
jo
or
cwtl
imul
jns
shl
dec
lcall
dec
repz
mov
aas
stc
insb
lods
minps
fcomp
mov
movsl
fcmovnb
test
iret
int3
je
pop
fstpl
insl
cmp
gs
mov
bound
xor
cmp
sarl
xlat
jae
push
es
pop
cmpsl
insb
int
dec
jae
sti
mov
ljmp
push
dec
sub
lret
aad
outsl
xchg
dec
in
mov
xchg
lret
flds
rol
mov
adc
add
addr16
dec
fiadds
nop
shll
xchg
pop
ret
xlat
mov
inc
or
xor
push
push
jmp
pop
jno
lcall
out
add
repnz
insb
cmpsb
std
mov
mov
adc
je
or
sbb
push
xchg
cwtl
adc
and
popa
mov
pop
mov
aaa
call
imul
inc
adc
inc
test
lret
push
add
jecxz
sbb
sub
mov
cmpsl
jecxz
cwtl
fists
movsl
insb
add
nop
fbld
arpl
push
out
pop
cld
mov
loope
jge
sub
sahf
pop
test
in
add
or
popf
repz
add
je
arpl
repnz
add
daa
xchg
xchg
xor
insb
xchg
xchg
mov
inc
pop
shrl
fld
cmp
sub
aad
sub
aad
xor
lock
call
mov
jne
sub
pop
pop
ret
cmp
cmp
lea
out
pop
stos
popf
mov
aaa
inc
hlt
jns
pop
sbbb
lea
div
mov
mov
sbb
sbb
clc
sti
fsubl
and
mov
lcall
mov
push
mov
iret
in
ret
xchg
pop
sbb
inc
xchg
popa
lahf
sub
xchg
ljmp
sub
and
insb
aaa
push
ljmp
fcomip
jg
sbb
cwtl
adc
xchg
vmovntps
jge
test
ss
xchg
mov
outsl
iret
inc
xchg
imul
imul
jge
push
lods
notb
push
ljmp
cmp
mov
push
rcll
fcmovne
fwait
pusha
je
dec
mov
pop
in
lret
rorl
popa
pop
xor
faddl
clc
cmp
test
jle
mov
sub
aad
test
sbb
inc
mov
sub
xchg
add
in
or
mov
sbb
pop
xchg
xor
jecxz
inc
testl
xlat
mov
fisubs
fs
jno
xor
repz
cmpsb
inc
jo
pop
insl
sub
xchg
movl
sub
imul
enter
mov
and
out
les
xor
clc
cltd
lret
jns
push
scas
mov
sub
ret
into
inc
int
push
push
push
push
fdivrs
loope
cmpl
fcmovb
push
data16
push
or
subl
clc
add
js
test
jb
mov
adc
jecxz
jbe
pop
imul
dec
mov
iret
xor
pop
lock
push
sub
sbb
jle
inc
cmp
outsb
call
pop
jecxz
testl
lahf
ss
loop
mov
loop
mov
popa
pop
fwait
xchg
cmp
sbbb
cs
cmp
sahf
fcoms
jb
sub
popa
mov
jg
int
pop
test
xchg
in
jb
shll
xor
mov
or
cmp
xchg
mov
jmp
out
cmove
jb
enter
in
xlat
shlb
jg
mov
push
xor
mov
jb
pushf
cmp
pop
and
stos
sbb
jns
ficoml
sub
sub
push
pop
pop
out
cld
icebp
stos
mov
test
xlat
add
rcll
dec
sub
lret
addr16
inc
call
inc
rclb
cmp
dec
add
dec
jb
fldt
lods
mov
adc
mov
aaa
sub
aad
xchg
jg
orb
push
add
xor
rorb
xor
mov
xchg
sbb
or
jmp
pop
sbb
out
imull
sbb
pop
xor
xlat
fisubrl
lea
lock
jo
mov
sbbb
jbe
std
pop
pusha
psrld
outsl
sub
sti
xchg
cmp
add
xchg
int
push
repz
mov
sbb
fadds
add
or
aas
inc
aaa
cmpsl
insb
gs
movsl
push
loopne
fs
andb
repnz
mov
movsl
xor
cwtl
fistps
test
add
sub
sbb
xor
add
mov
push
cs
out
xchg
sti
jne
popf
sti
testb
roll
xor
xor
pop
loope
iret
popa
add
cmp
push
add
jo
clc
add
ficompl
cmpsl
push
xchg
outsb
lret
pop
rcr
ja
xor
in
mov
shrb
js
jp
xchg
test
add
fstps
xor
cmp
shlb
adc
push
aam
rorl
pusha
movl
fcmovne
lret
call
addr16
jbe
mov
mov
or
imul
shll
pop
xchg
jmp
pop
sbb
scas
mov
sub
mov
or
push
sub
xchg
mov
jb
movaps
or
mov
pop
fwait
lahf
sahf
inc
test
in
bnd
push
sub
push
mov
lret
mov
out
scas
xchg
add
jae
dec
inc
cltd
sub
cmp
aas
mov
adcl
sbb
clc
pop
or
jge
stc
sub
test
stos
xchg
fistpll
jecxz
adcl
and
cmpb
mov
push
stos
js
mov
or
in
aas
fadds
dec
jns
mov
cmp
daa
sub
outsl
out
push
mov
mov
sti
mov
push
mov
jmp
in
mov
jnp
inc
aam
mov
pop
imul
dec
and
pusha
pushf
jo
push
dec
dec
pop
add
loopne
leave
cmpsb
mov
adc
sahf
aaa
xchg
call
push
adc
pop
inc
pop
shl
imul
add
xchg
insb
es
jne
insb
mov
dec
call
out
popf
in
inc
jecxz
jl
sbb
shl
xlat
js
pop
add
pusha
adc
add
into
xchg
call
loope
inc
dec
jl
popf
sbb
mov
loope
jbe
insl
pop
stc
lds
ljmp
test
lahf
cmc
rcll
in
push
pop
jne
jns
sub
pop
adc
rol
or
inc
pop
xchg
subl
mov
push
aad
push
adc
les
dec
pusha
push
cs
daa
fnstcw
cmc
sarl
mov
lods
fdivrs
fiadds
adc
mov
pushf
loop
xor
fldcw
mov
xor
cli
sub
cltd
mov
divb
clc
insl
xor
fwait
add
lock
fwait
je
div
jmp
je
and
sbb
mov
ret
push
jl
lea
jno
les
ficoml
popf
and
test
adc
repz
adc
into
lea
add
pop
push
clc
push
fsubr
cli
mov
in
imul
cmp
add
std
adc
in
xchg
repnz
push
loop
scas
pusha
xchg
loop
out
stos
sti
inc
lock
rolb
add
push
lods
movsb
cmpsb
mov
and
nop
das
aam
testb
pushf
dec
xor
hlt
ljmp
repz
or
popf
mov
xchg
dec
mov
out
or
cmpsl
push
outsb
xchg
adcb
gs
std
sub
dec
les
adc
add
mov
pop
cmp
pusha
out
dec
jg
jecxz
xor
jl
cmpsb
mov
push
addl
add
push
add
cmp
scas
scas
fistpl
mov
bound
or
jl
sbb
lock
adc
inc
loope
repz
dec
imul
cmp
sub
or
out
je
aad
sub
out
and
push
cli
inc
or
repnz
mov
xor
mov
nop
aas
push
dec
ljmp
leave
pop
movl
or
xchg
pop
es
movsl
in
popl
cmp
repz
cmc
in
and
adc
jnp
mov
roll
push
std
jle
cmpsl
mov
inc
inc
adc
rorb
mov
loope
cmpl
jl
dec
stos
cli
mov
push
arpl
dec
xchg
and
mov
or
xchg
push
xchg
out
lds
sbb
jbe
pop
daa
test
popa
add
add
out
xorl
int
mov
mov
pop
ret
lcall
push
mov
adc
js
sub
add
add
adc
rclb
cmpsb
pop
jecxz
sub
jle
or
int3
pushw
faddl
add
push
push
cmp
and
xchg
sub
imul
shll
insl
cmc
and
enter
xorl
in
push
mov
mov
cmp
xlat
rorb
mov
daa
inc
test
jbe
nop
subl
hlt
dec
add
cmpsl
mov
sbb
fsubs
fimuls
sub
pop
rclb
je
incl
mov
pusha
mov
mov
call
mov
adc
insb
rcll
in
pop
push
jne
sti
mov
jmp
inc
push
add
int3
xor
jl
loope
mov
jmp
xor
and
jb
sbb
or
jmp
add
cmp
in
and
dec
jno,pn
lahf
nop
int3
ja
jno
push
test
movsl
stos
xchg
out
jmp
or
pop
aaa
pop
push
mov
mov
jb
loope
xchg
cmpsw
add
int3
cmp
mov
and
dec
ljmp
in
ds
call
pop
push
mov
xchg
les
outsl
addb
xor
push
icebp
mov
aaa
sub
pop
xor
lea
pop
fs
pop
pop
dec
filds
xchg
fdivr
push
arpl
add
das
lea
or
push
iret
enter
jmp
cwtl
sbb
push
cmp
jl
dec
in
jl
fidivrs
push
test
or
shll
mov
jbe
scas
hlt
jbe
loope
adc
jg
imul
lds
rorb
push
and
outsb
xchg
outsb
sbb
repz
pusha
mov
xor
add
filds
mov
dec
sub
adc
das
popa
mov
xchg
fmuls
xor
fwait
enter
pusha
repnz
aas
ja
stos
aad
cmp
push
cmp
add
pop
iret
mov
cmpl
aad
fimull
ret
cs
adc
inc
fnstenv
jl
push
adc
idiv
mov
jb
movl
dec
jo
orb
int3
stc
divl
mov
aas
fs
xchg
imul
ret
mov
outsb
pop
adc
sbb
adcl
scas
arpl
out
cmp
jle
sub
aas
mov
and
or
das
test
dec
and
mov
fmuls
inc
mov
mov
dec
pop
mov
push
pop
dec
xchg
in
lock
ret
addb
dec
popa
mov
stc
ret
dec
pop
repz
xchg
mov
dec
icebp
out
mov
adc
jmp
dec
sub
test
pop
repnz
cmp
shl
lea
pusha
cmp
mov
inc
sbb
dec
daa
imul
or
outsl
cmp
and
mov
push
adc
dec
or
fwait
cmpsb
pop
rolb
test
aam
jp
push
js
and
out
fidivrs
ss
inc
push
call
inc
call
aad
call
and
jno
mov
in
xchg
sbb
int3
or
push
sbb
cwtl
and
ret
cwtl
icebp
pop
mov
xchg
das
xchg
xlat
adc
inc
iret
addr16
sub
fmuls
imul
mov
pusha
clc
lds
mov
jp
andb
push
out
and
mov
addr16
push
jne
daa
inc
jmp
int3
repz
add
pusha
pushf
lcall
pop
andb
cs
jb
mov
lds
push
cld
xor
les
das
outsb
jo
and
test
adc
imul
loop
adc
sbb
push
jae
push
ffreep
xchg
cmp
cltd
in
adc
enter
hlt
les
in
and
rcll
mov
lret
lcall
lea
adc
jnp
adc
rcl
mov
sbbl
in
int
rcrb
ja
pushl
adc
lea
stos
movswl
cwtl
adc
mov
dec
xchg
xor
roll
sub
jg
repz
movsb
movsl
dec
rcrb
insl
enter
pushf
in
pop
int
or
dec
lods
and
inc
pushf
fmuls
gs
cmp
outsb
fucom
das
lock
mov
repnz
pop
in
push
outsb
outsl
jbe
cmp
push
fsubrl
jnp
sbb
add
repz
jle
in
sub
inc
nop
enter
mov
fidivl
jp
ljmp
jo
sbbl
dec
add
mov
sti
fisttpll
dec
lahf
mov
xor
add
push
test
adc
mov
jp
sarl
or
rorb
cmp
flds
pop
sub
aam
outsl
hlt
data16
mov
jns
out
and
xor
inc
fadds
sub
enter
jb
push
nop
insb
bound
jbe
arpl
and
pushf
in
lahf
cmp
andl
pushw
decl
pop
aad
xchg
daa
out
mov
mov
in
xchg
add
or
stos
cmp
jno
popa
imul
fadds
adc
shrb
dec
out
hlt
push
or
push
and
and
cmp
in
stos
shlb
jge
sub
arpl
je
mov
push
ss
out
in
stos
or
and
or
dec
addb
loope
cli
push
xchg
and
outsb
jbe
fildll
dec
pusha
call
rcrb
pop
pop
push
add
jmp
fisubrl
push
rclb
shlb
push
jne
pop
popa
push
ret
popa
ret
add
shlb
test
push
jae
scas
jp
dec
and
test
loopne
push
bound
cmc
imul
sahf
xor
pop
cmpsl
add
add
dec
mov
push
pusha
cmp
div
cs
xor
cmp
push
mov
out
outsb
or
jp
lea
pop
fmull
cmp
popa
out
push
mov
sbb
repnz
in
sahf
movsb
mov
out
nop
push
add
mov
bound
icebp
test
pop
in
jbe
mov
mov
es
sub
push
cmp
test
pop
pop
pop
rorb
fdivrp
es
sub
sub
out
fucomi
gs
pusha
pop
sub
xor
sbb
hlt
pop
pop
add
ror
push
sbb
test
or
aad
frstor
scas
or
inc
ret
fwait
and
xor
push
xor
test
rol
mov
jp
fiadds
adcb
or
es
adc
ret
jb
pop
jnp
orb
push
lret
lret
and
xchg
stos
mov
mov
dec
inc
les
mov
mov
scas
lea
nop
hlt
mov
or
sub
movsb
sub
mov
push
xchg
adc
movsl
stos
ljmp
xchg
hlt
xchg
sbb
sub
fdivrs
aad
adc
int3
jnp
push
shl
daa
icebp
add
sbb
jecxz
ljmp
or
xor
add
hlt
loop
popf
sub
sbb
adc
test
cmpsb
icebp
mov
enter
ss
nop
scas
add
sbb
cmc
cmp
xor
jo
jne
dec
xchg
jo
mov
or
or
loop
jp
adc
out
inc
pop
fs
xchg
xchg
or
dec
pop
mov
adc
mov
mov
mov
aad
xlat
mov
das
xchg
cmp
mov
xor
mov
cmpsl
cmp
and
and
sub
adc
lock
or
push
sbb
sbb
or
fnstenv
pop
pop
pop
xchg
imul
mov
adc
xchg
mov
xor
stos
rolb
and
pushf
insb
pop
not
aad
lar
mov
test
adc
loop
ljmp
ds
lods
enter
push
rcr
dec
testb
and
jnp
sbb
cvttps2pi
xchg
pslld
cld
lock
push
hlt
mov
inc
adc
stos
push
sbb
sub
jle
adc
mov
add
fwait
pop
das
psrld
mov
push
mov
dec
dec
adc
push
and
idiv
push
test
fnsave
sub
and
int
sbb
sbb
sub
cmp
pop
jecxz
cld
sub
loopne
les
movsl
out
push
cltd
in
xor
cwtl
rcrb
cmp
aaa
stos
dec
scas
test
jl
jno
jno
mov
mov
adc
out
jae
je
adc
sbb
adc
push
mov
pusha
movsl
popa
outsb
pushf
outsb
sahf
out
and
sbb
cmp
dec
cmp
leave
mov
mov
inc
xchg
push
push
pusha
and
popl
loop
jle
shrb
in
jl
fistpl
aam
js
mov
ja
jne
push
xchg
cmp
push
fcmovne
sahf
mov
and
in
push
incb
jle
inc
lods
xor
add
or
sub
gs
fimuls
xchg
jge
add
imul
mov
in
pop
test
fbstp
dec
xchg
repz
cli
xchg
sbb
mov
gs
sbb
jecxz
in
fstpl
and
pop
sub
or
adc
pop
mov
mov
sub
sbb
and
ret
pop
add
inc
cmp
push
and
mov
movl
js
mov
xchg
loope
mov
cmp
in
adc
cld
push
out
insl
dec
out
insl
pop
mov
or
xor
movsl
fcomp
into
jg
push
xor
jge
push
lcall
test
mov
vmwrite
jg
sub
dec
lock
fistpll
nop
cld
dec
ficomps
out
jl
pop
in
xor
xchg
mov
push
pop
test
add
insb
addr16
enter
and
ja
insl
cmpsl
pop
idivl
jge
sbb
lea
sbb
imul
xchg
mov
fwait
pop
fwait
nop
inc
in
notl
mov
inc
inc
xchg
stos
ss
loope
aam
pop
and
mov
xor
mov
test
add
data16
pop
stos
nop
not
push
push
aad
jmp
shl
scas
or
add
sbb
stos
xchg
cmc
aaa
stos
popf
hlt
mov
add
inc
mov
inc
xchg
je
dec
loop
stc
sahf
add
cmp
xlat
mov
fwait
cli
js
lods
popf
faddp
xor
das
inc
xor
adc
cmp
insb
out
push
pop
inc
add
push
xor
outsb
sti
sbb
jg
mov
lcall
mov
mov
jb
inc
movsl
pop
jp
pop
mov
adcl
rcrb
lret
ljmp
add
or
jns
jmp
sbb
pop
xor
pop
repz
popa
sub
cltd
repnz
nop
scas
or
mov
js
mov
cld
arpl
push
stos
pop
call
cmp
jle
loopne
sbb
pop
push
pop
scas
aaa
andb
fldenv
iret
cltd
adc
push
in
jnp
hlt
rcrl
mov
add
xor
into
ret
add
sbb
sbb
dec
test
in
sub
lds
sti
lret
enter
pop
cld
in
push
pop
push
stos
movsb
clc
dec
lea
je
clc
add
cmpsl
mov
jp
adc
push
loope
lret
out
jle
test
and
xchg
push
aad
ret
fwait
lret
pop
lret
sbb
mov
and
cwtl
loope
pop
mov
cmp
sub
pop
enter
ds
mov
test
aam
sub
mov
mov
imul
pop
or
sahf
inc
mov
pop
xchg
mov
outsl
mov
xor
cmp
pushf
mov
movsb
mov
sbb
jg
xchg
or
outsb
add
and
xor
inc
jle
mov
andb
arpl
aas
decb
dec
and
into
push
mov
data16
jb
scas
sti
repz
mov
imul
inc
inc
or
lds
sub
aas
xchg
in
inc
aam
push
pusha
mov
jne
subb
mov
fistpl
inc
sub
push
lret
ss
pusha
out
push
or
jl
dec
fistps
sahf
mov
insl
dec
insl
and
xchg
test
mov
insl
jle
or
mov
sub
sbb
sub
sub
or
dec
jge
jg
inc
mov
call
xchg
in
dec
mov
repnz
mov
push
insb
test
repz
dec
jbe
jl
lcall
xlat
insb
dec
pop
test
mov
cmp
jne
mov
inc
leave
sti
add
std
or
cld
out
in
pop
cmp
sub
push
popa
ss
shl
dec
jmp
push
jbe
aad
sbb
mov
adc
inc
jbe
nop
movsl
pop
xchg
mov
leave
sbb
aas
js
mov
out
cltd
scas
gs
stos
inc
adc
adc
push
call
scas
push
lds
add
dec
jbe
cmpsl
push
dec
lret
mov
mov
nop
imull
and
int
pop
movsb
stos
sbb
jo
outsl
add
lret
sub
in
testb
push
push
dec
out
jns
ljmp
pop
xchg
lret
negb
cmp
lcall
push
mov
pop
jo
sbb
enter
inc
xchg
in
test
in
fdivl
push
push
out
hlt
mov
hlt
push
jb
mov
fidivs
jg
pop
dec
push
icebp
add
je
adc
mull
add
xor
xor
maxps
lds
test
cli
xor
pushf
cmp
pop
push
ja
je
inc
sti
push
divl
sub
xchg
cld
push
dec
out
add
loopne
inc
jno
or
addl
sbb
add
pop
xchg
xor
mov
movlps
nop
fs
pop
or
call
sub
imul
mov
out
cmp
lret
pop
cmp
xchg
and
and
xchg
imul
add
add
or
push
xchg
movsl
mov
shrb
in
sub
das
std
jnp
dec
sbb
sbb
xchg
dec
les
mov
add
push
cmp
pushf
sub
fdivrs
jl
inc
pop
dec
jnp
push
lret
cli
or
popa
out
mov
mov
orl
mov
ja
mov
mov
aas
ljmp
mov
and
inc
subl
sub
add
mov
in
out
aas
adc
loop
les
mov
shlb
les
sub
lea
xchg
or
pop
or
mov
das
adc
gs
sahf
mov
push
sbb
lret
orb
lock
sbb
jle
push
jmp
cltd
cmp
lods
inc
idivb
negb
imul
jns
shl
leave
fistpll
jnp
jae
icebp
out
pop
dec
add
or
int
pop
mov
or
sbb
mov
jae
push
xchg
jbe
scas
inc
pop
inc
add
mov
xchg
sbb
mov
in
shrb
adc
xchg
js
jg
cltd
mov
cwtl
bound
jbe
mov
xchg
mov
cmpsl
cmp
aad
mov
and
adc
in
in
stos
fistl
sub
sub
fdivr
mov
icebp
xor
cmp
dec
nop
ret
out
pop
push
fimuls
fdivrs
adc
xchg
int3
jno
daa
rcll
cmp
and
data16
dec
std
in
pop
pop
mov
mov
mov
les
clc
jmp
cmp
xor
ds
push
push
aas
mov
adc
mov
or
rolb
sub
inc
les
jae
mov
pushf
xor
les
mov
insb
cmpsb
mov
or
mov
adc
out
jns
and
fcoml
mov
dec
in
mov
outsb
fucomi
inc
cmpsl
jle
les
fcomip
pop
aaa
ss
loopne
push
adc
je
and
loop
insl
iret
movsl
inc
push
or
fsubrp
adc
and
in
ja
push
scas
insb
in
sub
std
inc
jmp
dec
dec
mov
add
jns
call
xchg
adc
cmp
jp
xor
shll
cld
ljmp
addr16
cmp
aad
push
out
out
inc
and
jno
xor
fidivrs
mov
mov
or
pop
sarl
and
jo
jg
sub
lahf
nop
jmp
test
imul
xchg
pushw
popf
les
adc
cmpsl
loopne
sub
into
lods
sub
jle
fwait
repnz
lods
xor
arpl
and
and
xor
inc
lds
xchg
cltd
inc
lods
cmp
je
mov
pop
pop
out
jno
sbb
sbb
idivl
mov
stos
orb
xchg
lds
xchg
jo
cwtl
add
js
ja
lret
cmpsb
in
xchg
mov
or
push
cmc
mov
sub
push
mov
push
fistl
ds
sbb
popa
incl
aad
lret
mov
push
fimuls
jecxz
xchg
out
aas
xchg
fnstsw
clc
test
inc
pcmpeqd
xor
pop
imul
jmp
shll
adc
adc
rcrb
cmp
stos
shrb
mov
test
inc
cmp
lods
test
out
inc
divl
ror
inc
in
xlat
stc
add
xlat
pop
push
mov
in
cmpsl
leave
fists
sub
jl
add
add
jp
rcrl
xor
das
cmp
jg
xor
rol
inc
pop
sbbb
loop
jo
xchg
clc
pusha
subl
and
or
jbe
shl
mov
loope
test
andl
stos
xor
xchg
mov
dec
out
sub
fs
insb
push
test
lahf
adc
js
sbb
cmp
bound
sarb
insb
sub
adc
mov
jecxz
fstps
inc
imul
fsubp
js
xchg
jnp
and
cmc
out
or
into
pop
repz
repz
cmp
mov
jno
push
shlb
call
mov
imul
lahf
cmp
vaddsd
pushf
cmp
cmp
adc
negl
addl
and
bnd
push
add
ljmp
push
out
jnp
push
adc
and
or
inc
dec
stos
fcompl
or
cmp
inc
and
insb
xchg
imul
stos
in
lock
lret
popf
push
test
add
arpl
ja
out
out
aaa
xchg
and
les
push
loop
sbb
mov
test
mov
and
in
arpl
fs
or
movsb
enter
pop
popa
cmp
push
in
lock
ds
push
sbb
cs
inc
xchg
imul
mov
fisubl
cwtl
out
loopne
cmp
insb
xor
fcomp
ljmp
or
lds
ljmp
imul
rol
xor
sub
es
jp
loop
std
inc
mov
push
fsubr
movsb
roll
ljmp
and
leave
adc
and
loopne
mov
add
or
inc
icebp
inc
cmpsb
fistpl
mul
cmpsb
repz
test
adc
mov
dec
and
push
jae
jae
lods
ds
mov
ss
dec
cmp
pusha
rolb
mov
jnp
xchg
frstor
ja
cmp
push
jns
cmpsb
mov
adc
into
loopne
push
and
inc
ja
add
inc
jg
xchg
mov
jmp
int3
jge
ret
add
imul
or
or
aaa
ret
xor
jp
and
add
sub
repnz
push
xchg
shl
pusha
jmp
icebp
in
inc
mov
pusha
adc
xchg
sahf
jp
iret
xchg
daa
push
xchg
cmpsl
lds
gs
xor
imul
daa
in
push
jg
popa
in
fildl
lods
push
adc
inc
movsb
out
rolb
js
sub
lods
pushf
les
jbe
clc
push
mov
dec
in
add
dec
jns
loope
or
lcall
mov
dec
arpl
lret
daa
or
lock
cmpsl
mov
dec
nop
jl
push
inc
mov
adc
and
sbbl
pop
jmp
mov
pop
push
bound
jb
mov
fwait
push
in
mov
sti
daa
std
int3
jo
jo
lea
add
cmp
push
aam
mov
fidivs
jae
or
iret
mov
and
xor
mov
jbe
pop
xor
xor
sub
push
imul
repnz
xor
jecxz
push
addr16
xor
dec
xchg
enter
dec
in
clc
lret
push
scas
add
add
mov
push
push
movsl
jp
loop
repnz
cmp
shlb
int3
lahf
cmp
bound
pop
push
push
dec
dec
mov
stc
aaa
cmp
mulb
pop
xor
aad
add
sub
lock
mov
jne
or
xchg
sub
cmp
fcompl
sbb
cmpsl
and
cli
pop
sbb
jge
std
insb
sub
fsubr
and
push
lods
pop
cltd
jge
in
mov
mov
inc
loope
cmp
je
push
popf
cs
cmp
in
sub
jp
mov
adc
xchg
dec
inc
pop
jns
out
fcompl
std
clc
xchg
push
mov
repnz
jmp
inc
arpl
pop
push
fisubrl
repz
out
inc
jno
leave
sub
xchg
dec
pop
dec
leave
add
mov
movsl
imull
or
xor
pop
clc
sarl
sub
fst
sbb
loopne
mov
cmp
jno
mov
cmp
fimull
jno
in
and
xchg
push
movsb
iret
mov
adc
pushf
cli
adc
mov
pop
std
adc
ja,pt
sahf
xchg
shll
add
adc
mov
jae
mov
mov
loope
andl
jge
dec
mov
mov
mov
pop
sub
mov
pop
das
push
fcomps
mov
rcrl
xor
fwait
push
push
jnp
sbb
hlt
sahf
mov
cmp
push
int
sbb
clc
fwait
out
sbb
hlt
lahf
and
clc
xor
dec
movsbl
adc
or
adc
repnz
push
pop
int
cmpb
test
sbb
xor
add
mov
dec
dec
jl
push
cli
sub
enter
jnp
aas
ficompl
subl
rcrb
jle
dec
mull
mov
jo
pusha
rcr
push
imulb
sub
or
mov
inc
push
inc
inc
cmp
rcrl
out
shrb
mov
ljmp
loopne
lods
mov
sub
test
js
mov
sub
fdivl
in
add
mov
fistl
icebp
fsubrs
mov
aad
xchg
jo
aam
jo
movsl
push
or
out
mov
faddl
or
jp
cwtl
or
into
mov
jns
sbbb
xchg
icebp
xchg
js
cmpsl
loope
psllw
iret
or
rcrl
out
leave
shll
aam
lret
pop
mov
lods
ret
mov
out
int
pop
faddl
pop
lcall
xchg
cltd
jmp
pop
outsl
push
adc
dec
out
addr16
xor
mov
jp
cmp
in
and
je
out
mov
add
imul
imul
inc
adc
orl
sbbl
mov
inc
and
cmpsb
es
dec
andl
jne
jp
pop
inc
cmc
adc
ds
enter
movsl
pop
mov
fcoml
fs
pop
imul
fs
add
adc
cmp
pop
sub
jle
sbb
adcb
sbb
push
sahf
add
nop
xor
bound
push
push
mov
lret
loope
mov
pop
dec
or
adc
add
movsb
lds
or
fbstp
popa
jl
mov
inc
iret
xchg
dec
loop
add
ds
imull
mov
jno
into
mov
mov
dec
movsl
fidivs
shll
popa
mov
loopne
adc
push
aam
in
xchg
mov
call
pop
cmpsl
lds
lret
sbb
in
mov
inc
push
adc
jl
stc
in
push
dec
aam
iret
leave
xchg
push
cli
sbb
lods
mov
xchg
fidivl
adc
ja
inc
add
mov
mov
ret
sub
xchg
sti
or
mov
pop
jo
and
inc
push
in
sti
and
dec
mov
aad
bound
push
addr16
jp
jge
lds
xor
xor
out
pop
imul
int
xchg
sbb
mov
xchg
nop
cli
int
and
aas
xchg
sahf
or
fidivrl
std
jge
mov
dec
xor
jne
out
xchg
mov
sub
mov
in
stos
ss
out
push
shll
mov
xor
aas
inc
cmp
movsb
ljmp
jge
mov
mov
jg
je
cmc
movsb
add
push
out
cmp
enter
ja
mov
outsb
nop
sbb
ret
rorb
mov
add
jno
outsl
fstl
and
push
outsl
xchg
sub
pop
adc
addr16
mov
cwtl
scas
fisttps
jne
insl
icebp
pop
xor
fsubrl
pop
lret
std
mov
mov
or
sbbl
xor
fs
mov
pop
push
mov
shrb
and
cltd
jo
aaa
fdivl
test
xchg
adc
add
call
movsl
push
inc
push
inc
movsl
push
push
addl
cmpsb
rolb
jl
cltd
jmp
mov
push
lock
imul
daa
mov
or
test
jo
adc
jne
adc
push
jge
nop
mov
fwait
adc
dec
imul
arpl
popf
fbld
int3
adc
pushf
or
xor
jne
fisubl
mov
clc
mov
xchg
fnstcw
stos
push
or
pop
jle
out
or
incl
mov
or
aas
leave
inc
test
in
test
bound
jno
popa
subl
sub
adc
fidivs
rol
jne
inc
lds
add
cwtl
add
out
mov
inc
mov
and
jae
mov
popf
out
fimull
adc
mov
stc
pop
pop
aas
enter
or
aam
out
push
jnp
cmpsl
out
loope
fwait
add
ret
and
pop
lea
and
je
jmp
adc
xor
mov
and
movsl
gs
adc
xor
aas
cltd
or
and
out
lret
or
cmpsl
or
jmp
out
inc
repz
inc
sbb
fildll
and
out
lret
pusha
xchg
stos
rolb
xchg
xor
lds
push
xlat
inc
push
rclb
xchg
adc
ficoml
ret
sub
xor
inc
nop
andl
imul
gs
dec
adc
push
shll
cmpsl
das
jne
adc
std
imul
insl
fnstenv
inc
lock
adc
std
test
dec
rol
jl
fdivs
fisubs
popa
cmp
push
ja
mov
cmp
lea
mov
leave
dec
lods
push
stos
dec
testb
push
xor
hlt
push
outsl
mov
xor
gs
out
fsubs
inc
roll
imul
mov
sti
or
cld
pop
or
rolb
sbbb
insl
scas
ret
stc
adc
imul
movsl
cmpsl
leave
test
je
and
mov
movsb
scas
jecxz
paddusw
iret
inc
mov
jae
inc
mov
out
cmp
push
jmp
shlb
insl
mov
xchg
dec
lret
movsl
xor
jns
or
adc
push
lock
cmc
fwait
xor
cmp
dec
and
lods
jbe
lahf
mov
jnp
sbb
repnz
das
aad
sbb
testb
cli
fiaddl
pop
mov
fsubrs
and
fwait
mov
dec
outsb
stc
push
loopne
in
aad
out
movsb
fdivr
mov
lret
pop
lods
or
in
and
or
hlt
xchg
cmpsl
aas
ss
xchg
sub
je
jne
dec
cmp
pop
sub
add
sub
hlt
out
arpl
inc
incl
aas
inc
adc
xacquire
test
stos
aam
xchg
and
cld
mov
push
jbe
push
lea
lcall
and
cltd
call
cmp
add
pop
lock
push
and
lods
xchg
and
aaa
sub
test
stc
and
or
adc
mov
out
std
scas
sub
or
mov
pop
jnp
jge
xlat
arpl
or
jl
lods
fisubs
test
cwtl
sub
cmc
out
jbe
cmp
sub
jmp
stc
or
test
lcall
sub
mov
ret
imull
dec
sarb
int3
mov
sbb
or
sbb
or
xor
jne
call
lahf
lret
call
decl
fidivrl
aas
mov
sub
insl
xor
lds
repz
aam
or
int
cmp
into
sub
pop
adc
paddsw
out
ficoml
loopne
in
or
and
ja
popa
push
mov
cmp
hlt
ljmp
fcomps
mov
fistl
jb
sarl
mov
jecxz
xor
mov
ret
cmp
sub
loopne
das
lds
repnz
sarl
pop
xchg
enter
add
mov
js
stc
ds
test
push
add
stos
pusha
or
sbb
sti
xorb
hlt
in
fldenv
adc
lds
mov
inc
stc
mov
pop
stos
cli
mov
cmp
sbb
pop
xor
ss
add
lcall
fidivrs
js
mov
js
xlat
into
jae
pop
data16
add
cmc
push
shll
sti
sub
push
and
outsl
pop
push
inc
into
pop
insb
popa
fsubs
sub
sbb
shr
loope
jne
sti
popa
loopne
lahf
lret
insl
cs
shlb
jnp
sub
push
rorl
mov
mov
inc
mov
in
fcomps
incl
mov
mov
or
pop
xor
adc
xchg
cmp
arpl
cmp
fs
pop
xchg
pop
lea
js
pop
lret
mov
lods
jno
loop
imull
fmull
sub
int3
dec
in
adc
push
scas
inc
jg
push
mov
cmp
add
rcrl
jnp
pop
dec
inc
ja
addl
pop
nop
std
dec
inc
push
jecxz
nop
xchg
ja
push
stos
rcrb
jo
pop
jb
jmp
push
fldpi
cwtl
cwtl
jge
inc
insl
fiadds
add
mov
sbbl
jb
addl
mov
push
sub
mov
jmp
push
or
in
scas
shll
push
movl
clc
cltd
jb
lds
mov
popf
mov
pusha
jl
xchg
rcrb
cmpl
pop
push
aaa
outsb
jnp
dec
push
jbe
sub
sub
in
inc
and
push
and
int
xorb
adc
das
adc
mov
dec
mov
jne
add
mov
lahf
dec
daa
cmpsl
mov
jnp
stos
bswap
in
pop
cmpsl
push
adc
mov
dec
ljmp
xchg
sub
stc
jmp
gs
jecxz
test
scas
enter
clc
or
xor
stos
xor
jg
xorb
pusha
xchg
add
xor
push
xor
mov
test
ljmp
cmp
xorb
imul
out
xchg
lret
jp
mov
ret
add
out
cmpsb
push
pop
ss
dec
movsl
push
mov
jp
mov
out
leave
pop
or
fistpll
push
in
pop
and
or
or
imul
or
scas
divb
pop
push
adcl
imull
jb
in
repz
sub
jge
insb
inc
mov
test
push
aas
or
add
mov
cmpsb
jnp
imul
sti
mov
jno
movsb
je
add
arpl
test
test
cwtl
notl
leave
xchg
outsl
mov
pop
clc
dec
push
push
jle
sbb
cmpxchg
and
cwtl
and
loopne
insl
fs
or
popf
sub
ljmp
gs
js
in
push
push
add
mov
fstpl
xor
xrelease
lret
adc
pop
pusha
leave
std
jecxz
out
push
cmp
jnp
rcrb
jl
sbb
in
cmp
cmpsl
lea
out
cmpb
xor
sbb
lret
pop
push
inc
pop
cmp
mov
sub
fidivl
cmp
sbb
jne
hlt
adc
scas
popa
dec
add
jbe
pop
inc
xor
std
mov
orb
outsl
les
cmp
mov
shl
sti
jecxz
lea
sbb
xchg
or
xchg
xchg
xchg
mov
fsubs
cmp
or
mov
adc
mov
mov
jecxz
mov
loopne
out
and
dec
stc
pop
fmuls
stc
popf
jno
xor
mov
negl
pushf
repnz
fcomps
mov
xor
out
xchg
jne
pop
movsl
add
andb
movsl
adc
es
and
and
and
pop
dec
jnp
leave
add
add
adc
add
push
hlt
inc
mov
inc
push
sahf
mov
cmpsl
add
mov
sbbb
sbb
cmp
nop
cmp
sti
and
sub
push
mov
insl
stos
and
sub
xor
xor
leave
push
int
fidivrs
add
sbb
outsb
mov
das
lock
push
fsubs
cmp
sub
fcmovbe
sub
mov
jne
test
fisubrl
mov
mov
xor
mov
and
xchg
icebp
lods
mov
push
mov
pop
xchg
mov
mov
add
insl
test
lds
das
inc
adc
dec
aas
call
flds
xchg
dec
and
and
in
roll
push
adc
jo
inc
fidivrs
or
fidivrs
add
test
and
mov
add
xor
jl
lods
add
data16
int
lea
fisttps
into
xchg
and
sbb
loopne
cmp
test
js
sti
lret
test
lret
scas
into
out
testb
cmp
mov
cmpsl
scas
sub
popa
mov
icebp
inc
add
mov
lods
pop
sbb
inc
mov
lcall
lds
mov
stos
fadd
sbb
mov
fmull
repnz
push
sbb
pop
mov
repz
mov
xor
call
dec
repnz
test
or
mov
in
inc
rcll
cmp
or
push
cltd
add
pop
add
das
add
push
xchg
test
pop
pop
add
andl
cmp
adc
aas
mov
add
push
cmp
int
mov
sub
or
sub
std
repnz
pop
bound
ja
mov
sbb
mov
jl
aaa
jo
sub
jg
mov
push
inc
fs
les
mov
push
cmp
outsl
pop
inc
out
fdiv
scas
imul
inc
fsubs
push
or
mov
fs
out
sar
outsb
pop
mov
push
dec
in
dec
es
mov
mov
mov
test
and
mov
mov
push
rcr
negl
or
mov
clc
add
or
inc
mov
mov
mov
cmpsl
shrl
cli
pop
movsb
cmp
lea
dec
cld
push
push
push
add
cmpsl
xchg
cld
lcall
cltd
cmp
incb
jg
pushf
xor
xlat
sbb
repz
cmp
out
int
add
rorb
mov
lcall
rorb
sub
push
daa
sbb
inc
inc
int3
xor
cli
int
add
loopne
push
out
test
repnz
or
test
clc
push
je
js
test
movsl
pop
or
leave
sahf
adc
xchg
jg
lret
jle
mov
inc
cmp
outsl
xor
xor
pusha
pop
std
push
out
and
pop
add
pop
test
and
lock
add
inc
loope
sbb
mov
xchg
sar
jns
test
adc
pop
xor
jnp
push
or
int
and
inc
sbb
xchg
pop
adc
add
push
inc
push
cmp
xor
xchg
cwtl
imul
loop
imul
inc
cmc
jmp
xlat
sub
adc
cmp
cmp
mov
rcrb
sbb
sahf
lock
and
or
jmp
popa
cmp
imul
in
imul
repnz
lret
shlb
xor
test
mov
inc
jg
aas
xor
sarl
sbb
lds
outsl
les
cmp
and
data16
pop
add
pop
or
push
stos
test
xor
lahf
mov
pop
xor
adc
mov
or
dec
pushf
sub
loope
test
in
and
pop
cld
outsl
bound
adc
comiss
sub
or
cmpsb
mov
add
jmp
push
add
xchg
adc
xor
push
mov
fistpll
and
jmp
popa
xor
mov
inc
popa
xlat
cmp
scas
imul
cmp
outsb
mov
test
and
ret
ret
jae
in
popa
stc
aas
jmp
adc
inc
and
push
ret
pusha
test
dec
loop
stos
mov
pop
mov
ljmp
xchg
cmp
addr16
pop
cmp
sbb
dec
xchg
lret
mov
gs
and
cltd
fsubl
adc
enter
xor
jg
or
leave
call
pop
sub
fisubrs
call
or
jecxz
sti
mov
or
and
stos
fwait
inc
lcall
xor
test
push
outsl
jle
lret
out
jmp
stos
jno
add
xchg
inc
inc
jnp
call
inc
adc
add
js
or
lds
pop
inc
sarb
ret
stos
in
xchg
bound
test
or
divl
into
movl
in
sbb
adc
xchg
notl
xchg
pop
repz
and
adc
mov
dec
xchg
dec
bound
stc
dec
jecxz
sub
cmp
dec
sbb
cld
mov
arpl
addr16
cmp
dec
ret
or
inc
mov
pop
je
mov
rclb
lahf
icebp
fidivrs
std
fdiv
pop
mov
jno
add
in
xor
mov
jle
shlb
adc
test
in
jl
xchg
mov
inc
mov
out
sub
fadds
adc
es
add
jecxz
adc
pop
icebp
dec
in
jl
jo
fdivs
scas
stos
cmp
cld
mov
and
inc
sarb
into
mov
and
repz
push
sub
and
in
insl
push
pop
dec
inc
nop
push
lods
cmc
out
mov
jae
cli
sbb
fwait
sub
leave
incl
rclb
loop
cmp
iret
stos
lret
outsl
cs
adc
jle
mov
jle
cmp
dec
xor
subb
hlt
mov
scas
inc
inc
jmp
jl
stos
xchg
or
xchg
or
xchg
repz
insl
mov
add
jae
aaa
pop
and
inc
fld1
or
mov
jle
cltd
mov
cs
enter
inc
mov
jne
lods
pop
pop
in
into
jge
cmp
cmp
cmp
push
loope
orl
xor
mov
mov
add
push
scas
or
inc
in
add
daa
loop
and
lds
lds
fs
fs
cmp
sarb
xor
addb
pop
fisttpll
push
sahf
push
mov
dec
adc
push
lock
mov
scas
jmp
sahf
stc
dec
out
ret
scas
jg
fists
jecxz
xchg
sti
add
cmpsb
ljmp
and
or
testb
call
mov
lahf
arpl
movsl
push
lret
mov
cld
mov
lods
aad
jmp
xchg
lods
pop
test
mov
shl
pop
outsl
cmc
shll
or
cmp
lret
sbb
fcomp
adc
jbe
mov
lcall
dec
cmp
push
out
movsl
xchg
pop
push
and
pop
pop
pop
fs
adc
scas
xchg
cltd
lret
inc
xchg
mov
bswap
repz
pop
mov
sbb
popa
xor
pop
in
pop
jp
pop
inc
mov
add
mov
in
xchg
and
mov
sti
mov
cmp
lea
mov
cld
and
loop
aam
in
add
dec
lahf
pusha
pop
jb
dec
push
iret
push
pushw
jae
sub
jle
mov
xchg
and
add
mov
in
cmpsl
outsb
jb
hlt
jge
stos
call
pop
adc
lretw
and
call
push
mov
fstps
popf
push
adc
into
scas
aaa
repnz
jno
je
lds
stc
or
xchg
push
jg
shl
inc
ret
gs
xchg
call
stos
mov
lds
pop
sub
stos
xchg
and
jb
loop
jo
inc
lds
out
iret
stos
xor
xchg
dec
addl
xor
and
popf
push
loopne
movsl
movsb
push
pop
push
maskmovq
divl
lods
cmpsl
and
xchg
lods
or
fwait
pop
aad
filds
add
adc
cs
sub
lds
jl
pop
mov
cld
shlb
mov
in
xorl
insb
cli
pushf
ljmp
dec
je
loop
xchg
mov
jecxz
lds
sbb
call
aad
arpl
rclb
movsl
adc
dec
cmc
pop
ret
subb
mov
pop
mov
jb
push
inc
cltd
icebp
cmp
ror
pop
xchg
ds
adc
or
sub
fisubs
cmpsb
lock
dec
jle
and
test
movb
mov
pop
sub
fbld
inc
bound
imul
mov
and
dec
dec
iret
or
sbb
add
int3
aas
fwait
cli
push
xor
inc
aad
jle
dec
cwtl
add
dec
sub
cmpsl
popa
adc
ja
inc
dec
ds
or
pop
mov
or
inc
inc
adc
pop
inc
sbb
andl
mull
xor
push
mov
push
sub
jno
and
sbb
push
jmp
mov
xchg
cld
xor
pop
hlt
and
fs
cs
xchg
ret
add
lcall
inc
loope
xlat
scas
jns
xor
mov
fs
sub
int
inc
xchg
or
js
jge
adc
inc
adc
repnz
add
or
sub
add
nop
pop
inc
insl
sub
repnz
enter
pusha
out
mov
aad
push
jecxz
ud0
jo
stos
xchg
pop
xor
adc
xor
pusha
out
cwtl
out
test
inc
mov
int
cmp
pop
pop
lock
ret
dec
jg
sub
xchg
das
mov
dec
pop
lds
sbb
jmp
mov
adc
das
inc
leave
jle
lock
ret
mov
aas
pop
cwtl
nop
in
or
xchg
repz
xlat
int
sahf
mov
pop
lods
xor
mov
mov
fnstcw
idiv
lods
fsubl
add
fnstenv
adc
adc
fwait
sub
jbe
jmp
add
push
pop
jbe
lcall
cs
vpminsw
fs
lcall
sti
cmpsb
mov
and
cltd
jle
inc
adc
testl
and
dec
fsts
mov
idivb
test
movsl
sbb
fisubrs
and
adc
movl
pop
sahf
jl
pop
repz
xchg
nop
fildl
lods
orb
and
inc
sub
cmc
ret
mov
pop
lahf
imul
dec
pop
pcmpeqb
sti
or
gs
push
sub
cmc
or
frstor
test
dec
insl
inc
cli
mov
js
or
lahf
adc
mov
xchg
add
lahf
jge
push
out
js
adc
and
cs
aas
mov
mov
in
push
sub
in
jmp
in
pop
sbb
inc
js
imul
mov
mov
inc
ljmp
dec
popa
js
jge
cli
arpl
nop
mov
pop
xor
sub
in
lahf
adc
orl
loop
cmpsl
sub
xor
mov
and
stos
xchg
or
mov
jae
lret
xor
pop
inc
mov
pop
mov
dec
mov
outsb
cwtl
fsub
bound
push
pop
jno
lods
cmp
push
pop
sub
add
cmp
push
neg
daa
lods
cwtl
js
divl
repnz
mov
xor
lret
pop
hlt
loope
test
adc
dec
jno
xor
pop
fs
adc
xchg
inc
mov
in
int
mov
out
aam
cmp
popf
aas
dec
jmp
call
cmp
and
js
lock
push
jno
pop
enter
sub
and
cmpsl
pop
mov
stos
push
mov
push
cmp
fiaddl
aas
insb
loopne
jbe
push
sub
dec
pop
fistpll
mov
mov
and
int
fdivrp
dec
out
stc
or
test
je
cmp
and
repz
xlat
repz
push
jno
sbbb
jne
clc
or
sbb
inc
add
testb
xchg
dec
jl
testb
dec
push
mov
in
xor
rorl
inc
xor
sti
adc
cltd
xchg
pop
cmpsb
out
adc
and
sbb
ret
push
lock
leave
lcall
xor
sub
stc
mov
cmp
movsb
jne
pop
addr16
int3
add
jmp
mov
sbb
pop
je
divps
adc
lds
test
sbb
xor
push
les
pop
cmp
cld
outsb
out
adc
out
cmpsl
div
into
ficomps
mov
jb
je
mov
mov
sbb
add
jnp
xchg
aam
mov
push
repz
and
sbb
xor
dec
das
sub
push
not
jmp
dec
sub
inc
cmpsl
sub
ja
popa
popf
push
dec
mov
push
outsb
mov
aaa
dec
jmp
jg
test
inc
push
mov
mov
loop
or
jo
imul
decl
into
jno
inc
pop
mov
jb
inc
or
imul
stos
scas
lcall
sbb
jecxz
sbb
push
into
fidivs
fildl
xchg
ss
and
cmpsb
out
jle
leave
rcrl
jmp
mov
sahf
test
and
jecxz
adc
in
incl
cmp
dec
pop
mov
repz
imul
add
mov
and
flds
jmp
add
jl
fistpll
pop
or
fnsave
push
pop
into
lock
lret
pop
rolb
out
cmp
sbb
cmp
mov
add
repnz
push
or
mov
jl
fdivl
aad
lcall
dec
pop
lahf
inc
out
inc
ss
push
scas
inc
sbb
inc
iret
popa
mov
mov
test
js
pop
cwtl
and
pop
imull
inc
fadds
jl
or
aam
jbe
cmp
pop
sti
loope
sub
scas
loop
dec
jmp
gs
xor
push
dec
push
cmp
mov
cli
leave
mov
mov
pop
sbb
rcr
cs
add
out
subb
leave
insb
mov
lret
out
les
pop
add
sub
mov
jne
adc
jno
push
mov
mov
adc
sub
int
daa
adc
xor
sti
mov
cmp
sti
dec
adc
xor
or
add
push
adc
mov
repnz
loop
jb
fs
jle
les
outsl
movsl
adc
les
adc
cld
jne
mov
sub
and
jnp
jg
sbb
das
push
jge
jl
inc
xchg
push
pop
clc
fstpt
shl
xchg
xor
xor
push
add
xchg
in
enter
aam
dec
imul
or
xchg
mov
fcoms
addr16
push
or
push
dec
out
push
cmp
cmp
cwtl
mov
jbe
test
test
js
int
and
and
mov
xchg
xchg
ds
fstpl
leave
lahf
test
xchg
rclb
in
adc
xchg
int3
pop
nop
pop
dec
lcall
sub
add
outsb
mov
jle
sub
test
std
loopne
pop
lret
jle
push
push
icebp
fdivrl
pusha
cmp
int3
adc
outsl
mov
jle
in
popf
push
push
mov
das
out
ret
dec
push
nop
push
out
sbb
sub
sahf
pop
fldenv
out
arpl
xchg
fdivl
push
ret
pop
jae
sub
mov
mov
insl
push
add
ret
out
xchg
lret
or
inc
xchg
fdivrs
cld
adc
inc
cli
push
inc
clc
lcall
scas
lds
mov
sub
cmpsl
jecxz
lgs
stc
jno
lret
xor
jae
call
sbb
or
pushl
pushf
pop
jge
push
out
xchg
push
aam
insl
fs
nop
icebp
repnz
jne
cmpsl
ds
enter
das
insb
out
cli
cmp
xchg
mov
stos
mov
lcall
xor
sub
icebp
mov
mov
aad
outsl
and
lret
fidivs
and
dec
movsl
dec
or
les
pop
inc
and
jo
js
sahf
inc
jmp
sarl
xchg
cli
jno
adc
add
xchg
test
ret
outsb
mov
mov
xorb
outsb
jl
xor
mov
inc
iret
int3
ds
jnp
xchg
pop
push
jg
push
xchg
push
mov
pop
lcall
inc
pop
in
test
jns
rcll
pushl
add
xor
je
inc
fs
jmp
sub
jmp
sub
or
or
inc
insl
sbb
fstpl
scas
test
and
jge
xchg
sub
pop
xchg
outsl
scas
and
ds
xchg
jno
and
pop
aaa
adc
ja
bound
sub
mov
or
adc
adc
lods
mov
cwtl
mov
out
mov
je
push
mov
mov
dec
fstpl
ret
int3
cmp
fcmove
mov
xor
push
jg
jl
push
dec
cmp
movl
stos
inc
inc
cs
jmp
orl
push
push
addr16
dec
mov
cmp
jg
nop
fsub
popf
scas
add
xor
pop
add
sti
fistl
aam
arpl
jle
push
jnp
in
test
test
les
insl
mov
dec
mov
out
mov
testl
das
pop
std
pusha
cmp
andb
rcll
dec
in
fldl
and
jle
jg
jb
mov
mov
inc
jb
jno
insb
push
stos
ficoms
and
cmp
addl
insb
aad
test
inc
pop
in
push
popf
iret
pop
icebp
stos
mov
test
sub
sbbb
mov
pushf
mull
cld
cwtl
push
adc
cmp
jns
and
jns
shl
xchg
push
or
aas
mov
movsb
cmpsb
sarl
leave
xchg
repz
imul
pop
cs
cmp
cmp
movsl
sbbl
mov
stc
sahf
iret
inc
mull
mov
insb
push
cs
push
bound
leave
add
push
pop
sub
stos
movsb
adc
rcr
clc
popl
mov
clc
mov
clc
sbb
imul
mov
imul
xchg
scas
fabs
lds
adc
jb
popf
jns
or
xchg
lret
cli
cltd
ret
sbb
arpl
xor
mul
addr16
mov
aad
xchg
or
dec
int
ret
lods
xchg
dec
dec
loopne
sub
mov
nopl
mov
lods
pusha
mov
sub
sub
call
scas
out
notb
ja
pop
rcrl
lahf
jp
dec
dec
std
testl
dec
enter
mov
leave
and
aas
jp
cli
mov
mov
shll
test
in
pusha
out
movsl
or
leave
dec
and
xor
jo
push
jbe
lret
dec
pop
and
sub
or
lds
add
inc
sahf
jns
xchg
add
dec
popf
and
pop
add
push
fldt
jnp
mov
dec
lods
adc
mov
je
movsb
fnstenv
or
clc
mov
jg
aas
das
sub
call
cmpsl
sti
jo
push
fs
mov
insb
sti
dec
xchg
push
hlt
xor
push
xor
lret
in
mov
inc
and
or
xchg
mov
sbb
xor
mov
les
xor
cmp
inc
push
scas
pop
lock
xorb
mov
inc
xor
adcl
xchg
adc
mov
sarb
adc
in
outsl
rcrb
je
xchg
cli
add
inc
jecxz
and
jo
ljmp
mov
ret
push
fmull
add
aad
out
jbe
inc
xlat
aad
and
jg
adc
jbe
clc
adc
push
adc
sbb
mov
sbbl
xchg
je
adcl
inc
out
mov
fiadds
out
push
cmpsl
clc
jl
dec
sbb
leave
loope
add
cmp
imul
push
arpl
xor
xchg
icebp
sub
ret
jmp
xlat
ret
mov
shlb
mov
popa
push
cltd
std
popa
xchg
xchg
cmp
mov
adc
and
mov
inc
mov
dec
call
cmpsb
repz
jl
aaa
xchg
mov
sub
and
in
xlat
xchg
aaa
rcrb
icebp
cs
inc
dec
mov
clc
jg
lods
push
inc
push
cmp
dec
adc
cmpsb
pop
je
xchg
arpl
cmp
popa
inc
adc
cwtl
or
cmp
imul
pusha
das
fdivrl
cmpsb
mov
xor
dec
popa
push
add
aad
test
mov
push
incl
iret
and
xor
shlb
das
xchg
push
lods
test
shl
into
jo,pn
int3
out
pop
fsubs
int
xchg
bts
arpl
mov
or
xchg
dec
xchg
jae
cs
mov
add
add
sarl
gs
xchg
lret
fdivrs
or
lock
stc
cmp
mov
test
sbb
aam
ss
iret
xchg
push
xor
ja
gs
cmp
stc
mov
inc
and
fbld
outsl
into
sbb
lret
cltd
xchg
sub
idiv
xchg
pusha
xor
shll
jecxz
das
and
push
inc
aaa
lea
cmc
std
mov
fsubs
jecxz
jecxz
clc
add
xchg
ljmp
cli
or
roll
jno
sarb
inc
xchg
push
nop
sbb
jb
sub
ljmp
mov
push
sbb
pop
inc
lret
stc
mov
pop
sub
jp
mov
mov
dec
imull
je
pop
fstl
jns
xor
or
lock
pop
pop
js
add
clc
ds
mov
sub
in
adc
loopne
es
outsb
enter
push
loop
loop
sbb
clc
mov
or
inc
inc
lret
pusha
mov
adc
ss
aam
lret
xchg
sbb
pop
push
je
xor
xor
cmpsb
inc
mov
jb
cmpl
and
pop
sub
and
pop
out
div
icebp
pushw
pop
outsb
cwtl
push
add
ficoml
dec
std
sub
ljmp
leave
clc
iret
aas
inc
cmp
js
js
fstpl
das
lds
stos
jb
in
adc
and
movsb
mov
testl
add
and
int
xlat
mov
dec
sub
ret
loop
jae
out
pop
inc
test
test
pop
pop
jbe
mov
cmpsb
mov
dec
icebp
mov
push
int
out
sbb
mov
movb
movsb
scas
scas
enter
pop
stos
adc
and
sbb
aam
push
cwtl
cld
mov
sbb
inc
sahf
mov
out
sbb
xor
sbb
into
dec
adc
cmp
add
add
mov
iret
stos
pop
push
push
adc
movsl
insb
xor
jbe
in
adc
sub
dec
loopne
ret
lret
mov
dec
fs
mov
jge
cmp
jmp
jb
mov
test
scas
cmpsb
addr16
loop
cmc
std
pop
sbb
int3
or
xchg
xchg
adc
data16
fcomps
mov
outsl
fnsave
pushf
call
mov
push
adc
push
xchg
enter
loopne
mov
lahf
xor
rcrl
outsl
or
pop
pushf
mov
jbe
test
xor
lret
and
push
pop
mov
movsb
jge
sub
aaa
or
xchg
rcll
das
cld
mov
int
mov
test
popf
popf
fidivrl
mov
xchg
les
lea
test
add
testb
sub
cmp
lods
mov
push
cs
sbb
lret
pop
push
xchg
jmp
pop
js
arpl
pop
bound
outsb
rclb
pop
in
pop
mov
sbb
sbb
pop
out
mov
mov
in
and
xorb
jo
xchg
ror
push
das
stos
add
into
rcrl
stos
adc
dec
or
daa
fwait
push
xchg
push
dec
or
adc
sbb
fs
cmp
mov
mov
aad
pop
xchg
orb
negl
inc
addr16
fiadds
insl
movsl
iret
push
sub
and
pop
mov
sbb
nop
ret
jmp
xchg
mov
ror
pop
dec
lods
in
insb
out
test
jmp
sub
xchg
das
sub
xchg
pop
sti
insl
mov
ret
ret
xchg
adc
scas
jle
in
sbb
mov
popf
stc
outsl
lret
mov
divb
mov
mov
mov
hlt
adc
mov
push
xchg
or
into
idivl
add
push
jmp
xor
mov
jb
mov
jmp
cs
adc
cmp
add
dec
cs
mov
inc
cmc
push
jge
xor
rclb
push
pop
or
cmp
xchg
push
xlat
dec
cltd
cmpsb
cmpsl
hlt
pop
push
shll
xchg
mov
pop
in
out
or
xlat
dec
repz
scas
aad
push
cmpsb
adc
or
jns
mov
lea
sbb
repz
mov
stos
lret
mov
or
cwtl
dec
sarl
and
cwtl
ja
sarl
jp
out
data16
adc
insl
dec
insl
cmpb
jnp
inc
mov
mov
loopne
lods
pop
dec
jg
in
add
xchg
cwtl
in
jge
out
adc
xchg
sbb
sub
pop
adc
xlat
jns
xchg
xor
mov
xchg
cmpb
jns
xchg
das
fimull
dec
jns
inc
pop
or
popf
mov
add
jecxz
xor
lods
jmp
inc
sub
xor
aas
daa
movsl
cmc
fadd
stc
jp
js
fldcw
enter
int3
out
adc
lds
ret
mov
jge
xor
xor
mov
test
lea
pop
stc
xchg
sub
aaa
xchg
unpcklps
push
popf
pushf
imul
movmskps
xchg
xor
push
jne
pusha
push
push
jns
and
pop
inc
add
lds
ja
add
stos
mov
pushf
lock
testl
inc
or
push
cmp
jle
ret
ret
pop
inc
xchg
out
pop
adc
pusha
cwtl
rcll
xchg
xchg
mov
js
sbb
rcrl
jp
mov
aaa
or
xor
popf
push
pop
mov
xchg
fnstcw
fidivrs
push
imul
jne
or
ss
fsub
mov
test
dec
pop
popf
std
dec
xchg
mov
dec
hlt
fsts
cmp
lret
es
rolb
bound
adcb
sbb
cmc
jnp
mov
ss
fdiv
leave
loope
sti
in
inc
add
xchg
push
daa
rol
lods
ljmp
mov
ljmp
push
pop
mov
movsl
jno
enter
mov
ss
setp
mov
pop
or
jo
fwait
mov
insl
mov
push
pop
decb
mov
adc
inc
daa
inc
andb
dec
cmp
push
hlt
scas
and
sbb
push
xchg
mov
fistps
nop
outsb
push
cmp
add
into
ss
xchg
aaa
fisubs
add
or
lret
out
mov
jecxz
fnsetpm(287
jnp
add
jae
add
int
addr16
cwtl
xor
mov
aad
xchg
repnz
loope
mov
jl
mov
je
fsubs
mov
repnz
add
cmpxchg
rcrb
mov
lea
cmc
xor
xor
mov
aad
ret
mov
mov
xor
xchg
rclb
cmp
dec
pop
jmp
mov
mov
xor
enter
fldcw
add
pop
pop
sub
or
pop
or
inc
jl
pop
aad
xchg
or
push
jge
and
jecxz
mov
jno
push
mov
lahf
cmpsl
add
cmp
fstp
push
mov
fs
jl
adc
mov
sahf
fs
inc
rep
push
fsubr
or
mov
mov
std
jmp
fcomi
lods
xchg
popf
mov
jge
aas
inc
add
fdivl
sarl
outsl
xor
cmp
inc
jle
mov
ds
gs
icebp
lret
add
xchg
or
mov
push
stc
xchg
jmp
fdivrl
or
xchg
sbb
hlt
or
jp
lahf
pop
fs
das
and
xchg
xor
push
push
std
sub
jbe
clc
mov
push
je
and
cwtl
add
mov
inc
addr16
aad
xchg
cmp
xchg
cmp
dec
pop
push
or
push
mov
xchg
mov
out
inc
adcb
stos
jne
push
push
sbb
sub
cmp
push
jae
xchg
mov
idivb
loopne
adc
cmp
sbb
add
std
imul
sbb
pop
pop
sub
fstl
dec
adc
jo
enter
mov
sub
sbb
rep
mov
jmp
pop
scas
shll
sbb
or
loopne
mov
in
jg
subl
mov
ja
xchg
dec
sbbl
outsl
les
push
andb
sbb
push
mov
test
sbb
adc
popf
and
sti
pusha
xchg
in
pop
dec
xchg
repnz
and
int
jmp
outsl
fnsave
xor
mov
cld
pop
out
shlb
dec
mov
fisubs
jnp
pop
jge
divl
sbb
sub
inc
add
stc
enter
or
xor
dec
out
fcmovnbe
or
nop
icebp
aad
shrb
jb
bound
shl
aas
lcall
pop
xor
mov
cld
out
dec
mulb
cmp
sbb
mov
ja
movsb
imul
push
sub
sub
mov
lret
stos
push
rcr
mov
adc
mov
clc
pop
inc
jl
sbb
jb
subl
fwait
and
mov
mov
push
cmp
insl
in
jp
sub
ds
adc
add
cmpsb
mov
cmp
mov
push
sub
fisubs
pop
xchg
ret
addr16
into
pop
das
std
xor
jbe
scas
sahf
lcall
sub
inc
xchg
mov
lret
cmpsb
cmp
add
mov
adc
mov
adc
lods
pop
shl
jb
das
test
sub
jg
movsl
jne
xchg
faddp
mov
cld
inc
in
inc
ficompl
cmp
inc
xchg
or
subl
jnp
roll
call
add
scas
mov
xchg
mov
cwtl
cmp
pushf
mov
sbb
insl
jmp
mov
enter
pusha
adc
outsl
pop
ret
sahf
sbb
mov
mov
lods
test
ja
sbb
mov
cmc
sub
inc
cmpsb
push
jno
cmp
outsl
mov
xor
mov
addr16
jne
lods
mov
aaa
shll
push
add
aam
xlat
hlt
or
inc
add
add
jo
pushf
jle
aam
aam
lret
sbb
dec
add
cmp
push
aas
mov
xchg
icebp
icebp
jo
hlt
jns
inc
add
out
es
sbb
sti
movsb
ficompl
mov
das
add
test
ficompl
iret
scas
repz
mov
mull
mov
push
mov
push
movlps
lret
or
push
movsl
mov
pop
cld
shrb
add
adc
mov
mov
push
inc
mov
jnp
inc
out
push
inc
mov
or
pop
pop
mov
fwait
push
sbb
out
not
add
std
xchg
push
jne
stc
jecxz
int
test
mov
lret
mov
mov
fidivrl
xlat
add
shrb
lock
test
xor
jbe
pop
push
mov
cmpsl
lds
mov
imul
mov
int3
push
inc
movsb
xor
icebp
pop
iret
pop
nop
cmp
pop
mov
cmpsl
cli
stos
inc
sub
nop
dec
dec
mov
mov
xchg
sbb
loopne
inc
icebp
not
cmpsb
dec
or
jnp
shrl
mov
mov
adc
add
mov
and
loopne
push
sub
mov
stos
push
add
jns
scas
xlat
or
mov
ret
insl
xchg
test
adc
rdtsc
sar
jmp
into
popa
cmpsb
popa
adc
jge
arpl
jle
add
rolb
mov
inc
sbb
dec
xchg
fimuls
cwtl
add
rorl
cmc
imul
icebp
enter
insb
jmp
test
mov
mov
shll
cmpsb
jle
inc
inc
jbe
inc
sarb
subl
inc
in
lock
cmp
push
mov
sbb
ja
shlb
gs
ret
xor
std
je
jmp
jno
in
fwait
clc
mov
fsubr
pop
fldl
or
into
xchg
mov
push
ja
cmp
stos
and
push
or
or
sub
pop
fcomps
mov
pop
outsb
cmp
test
cmp
pop
cmc
cs
out
in
decb
jnp
mov
push
and
out
mov
inc
iret
add
mov
pop
xor
lods
cmp
stc
and
dec
add
fstps
icebp
mov
mov
test
jbe
fmuls
mov
jnp
mov
mov
add
dec
mov
and
in
call
loope
std
in
pop
add
pop
cmp
jnp
ja
sbb
xorb
test
sbbb
bound
push
inc
xchg
aad
or
adc
fbld
hlt
nop
fsubp
xchg
imull
dec
out
dec
test
lahf
int
push
dec
cmpl
and
jne
sbb
outsl
stos
stos
lret
bound
adc
ret
push
xchg
and
rclb
sahf
xor
xchg
sbb
call
pop
rcl
sub
xor
xorl
cli
clc
int
jb
jl
shll
fisttpl
xchg
xchg
cmp
jae
loop
dec
or
scas
mov
mov
out
into
cli
adc
loope
icebp
sbb
xor
sub
aam
and
imul
stc
mov
adc
popf
and
mov
dec
clc
inc
mov
ret
aaa
sahf
or
test
xlat
xlat
fidivrl
movsb
rcrb
adc
aad
jmp
lahf
mov
ja
pop
push
sahf
daa
xchg
mov
lahf
or
call
cmp
push
xchg
mov
sbb
cmp
push
nop
fsubp
jp
push
lret
xlat
out
clc
dec
mov
test
loopne
sbb
fisubs
inc
push
gs
fadds
jb
push
xor
xor
imull
mov
jns
mov
mov
xchg
jecxz
push
test
ret
fxch
ffreep
mov
pop
movsb
or
mov
jae
inc
sub
or
mov
or
lods
push
icebp
clc
jbe
mov
cltd
cmp
mov
or
jp
pop
loope
add
mov
cmp
cmp
jnp
ljmp
adc
pop
or
xchg
add
shrl
in
lods
pusha
fcoml
push
rclb
xor
mov
das
jl
mov
add
stos
pop
sub
jae
test
mov
add
mov
inc
lock
fdivl
dec
pop
call
adc
je
mov
jp
add
push
mov
arpl
mov
xchg
xchg
jae
pop
add
push
cmp
das
push
dec
jg
into
mov
mov
xchg
mov
lods
adc
or
shr
add
notb
imul
adc
nop
and
jmp
sub
insl
adc
and
int
mov
inc
xor
lds
jnp
shll
pop
mov
ficomps
out
out
js
mov
inc
repnz
fwait
and
rorb
add
lea
xor
pusha
cli
std
hlt
adc
jg
fs
push
jbe
ja
loop
add
lret
inc
inc
dec
mov
add
mov
out
sub
pop
xor
fucomi
mov
idivl
and
sub
push
dec
inc
and
cmp
addb
push
jg
mov
dec
mulb
xchg
orl
push
mov
out
and
je
sub
xchg
mov
and
fnstsw
push
jb
mov
js
xchg
aad
rcll
jne
clc
inc
adc
xchg
xchg
pop
loop
add
pop
add
add
mov
push
push
aam
stos
cs
pop
imul
adc
or
inc
jp
cmp
xchg
mov
fldcw
mov
xorl
shll
or
nop
or
mov
xor
cmp
sub
mov
dec
int3
cmpb
sbb
push
notl
js
fcoms
cwtl
mov
sti
cmp
inc
lret
or
dec
lds
mov
pop
ret
jecxz
rorl
jge
sbb
ja
jecxz
pop
lock
cmpsl
insb
dec
push
adc
int3
cmpsb
cmp
push
push
mov
daa
add
mov
inc
sbb
scas
dec
pusha
push
inc
jae
xchg
sbb
jno
cld
aad
or
mov
rol
fmull
push
push
mov
mov
outsb
pop
add
addr16
pop
ficomps
cmp
jle
push
mov
movsb
cwtl
sbb
movsl
pop
xor
in
rcll
add
xlat
andb
aad
or
insb
ror
or
pop
mov
mov
xchg
pop
fnsave
xor
inc
icebp
cltd
push
jle
cltd
cltd
stos
mov
movsl
add
add
pushf
test
out
and
xchg
out
rcrl
int3
pop
test
gs
cltd
adc
xchg
push
sub
ss
nop
pop
sbb
out
pop
je
mov
sub
inc
fcoms
add
leave
cltd
jo
adc
es
std
std
and
pop
test
dec
loop
mov
daa
aad
or
addr16
loop
iret
fsub
cmp
cs
mov
insl
sbb
mov
mov
push
adc
xchg
test
out
scas
dec
andb
cltd
and
cmp
inc
icebp
sbb
pop
inc
mov
in
or
out
or
in
shr
push
mov
clc
sbb
pushf
jae
lret
out
call
push
pop
xor
les
leave
adc
stos
cmp
push
stc
jecxz
imul
dec
xor
in
cmc
cmp
and
add
mov
jae
adc
cmc
push
sub
insb
pop
leave
mov
sbb
pop
cld
and
test
xchg
imul
sub
movsb
mov
cwtl
decb
dec
fadds
scas
jne
sti
adc
sub
bound
mov
xlat
ret
popf
xor
in
addr16
out
mov
add
inc
clc
mov
movsl
inc
and
rcll
inc
outsb
movsb
mov
mov
push
repz
divl
jp
ss
out
cltd
test
xchg
hlt
jnp
mov
push
movb
jae
or
aam
xchg
xor
les
cmp
testb
xor
mov
fldl
and
jge
jb
das
clc
jg
jle
push
add
jbe
shrb
add
dec
aad
xor
stc
outsb
add
xchg
sub
mov
out
xor
jo
push
movl
xchg
or
in
dec
jb
mov
adc
xchg
nop
stos
into
out
add
mov
mov
outsb
outsb
and
jp
xchg
dec
psubsw
sub
and
cs
fistps
dec
cmp
popf
push
repnz
fs
sbb
mov
xchg
xor
sbb
rorl
loop
add
cs
sub
push
cmc
daa
dec
add
shrl
stos
add
pop
adc
lods
std
hlt
xor
fisubs
and
stc
mov
add
xchg
test
rclb
jb
or
addr16
dec
rcrl
dec
ror
dec
cmp
xchg
and
gs
xor
jge
mov
adc
fistl
mov
sti
or
push
lahf
jae
aam
jb
out
mov
daa
jo
mov
sub
movsl
stos
adc
out
enter
loop
sbb
pop
outsb
cmp
shl
pop
into
sahf
pop
inc
int3
movsb
std
iret
jne
jns
sti
pop
mov
insl
lcall
out
clc
addb
cld
adcl
dec
lcall
fidivrl
ret
add
sbb
mov
sbb
cmp
inc
shr
push
xor
fisttpl
inc
icebp
aas
aas
cmp
rcr
push
sub
int3
shlb
roll
insl
sbbl
jno
cmp
aad
push
cli
xchg
iret
ss
dec
mov
popa
inc
mov
repnz
loope
testl
jno
subb
lods
repz
sbb
add
pop
pop
scas
sub
sbb
cmp
jbe
inc
adc
jb
ret
shrl
jp
les
enter
mov
ret
dec
jbe
iret
jge
add
jne
xchg
jmp
nop
adc
mov
lock
cmc
push
rorb
lock
sub
inc
jge
sbb
out
cmp
inc
fbld
fsubrl
cli
xchg
ret
sarl
stos
and
arpl
cmpsb
sar
arpl
in
popf
xor
popa
int
jnp
cwtl
lods
addr16
andb
test
jp,pt
popf
sti
and
lahf
jge
cltd
xchg
mov
dec
pop
sbb
test
cld
add
fiaddl
jo
insl
dec
cmpsl
jl
std
push
and
mov
mov
lcall
adc
and
imul
or
outsl
imul
and
jg
ja
inc
mov
into
inc
or
mov
or
add
dec
mov
and
add
sub
pusha
mov
jbe
xchg
sbb
mov
fisubrs
inc
xchg
lods
lods
or
sub
lcall
mov
sub
clc
mov
testl
in
xchg
inc
into
pop
mov
std
xor
popf
lods
push
xlat
das
push
adc
jecxz
or
and
cmp
xchg
push
imul
insl
jbe
int
dec
call
sub
cltd
or
cmp
push
push
pop
mov
adc
imull
inc
and
idivl
fwait
orl
xor
jecxz
faddl
xchg
pop
or
cmp
mov
cmp
ds
cmp
push
dec
testb
imul
add
sbb
aaa
fistpll
outsb
pusha
das
lods
outsb
cmc
leave
fsubrl
out
dec
sub
scas
fdivr
aaa
lea
push
and
xchg
subb
xchg
mov
and
cmp
pop
xchg
jge
outsb
jo
insl
adc
sub
sbbb
adc
fucomi
call
mov
leave
bound
jl
aad
adc
roll
or
and
mov
push
xlat
insl
sbb
xor
push
fnstcw
add
dec
add
inc
xor
push
push
jo
sbb
sarl
or
cmp
pop
push
imul
lds
lahf
sub
ss
inc
xor
cmp
lahf
add
test
imul
enter
das
mov
mov
lahf
push
mov
sub
insb
sahf
testl
cltd
and
and
mov
fdiv
icebp
jb
mov
ret
fs
mov
add
push
pop
mov
fstps
in
int3
imul
scas
push
aam
rcl
pop
lock
cld
push
xor
jge
add
outsb
jg
loope
test
or
in
pop
cmp
or
sub
mov
mov
fdivr
or
push
or
cmp
into
fcomip
xchg
push
dec
inc
aas
in
rolb
lret
push
push
roll
jecxz
jbe,pn
repnz
mov
mov
test
jne
rclb
dec
adc
mov
inc
or
sub
push
test
push
ds
xor
jmp
inc
mov
and
out
push
adc
mov
jle
cld
jae
sub
push
loope
aad
bound
or
jno
xor
add
inc
fidivrs
and
mov
bound
sub
std
mov
and
in
fiaddl
out
push
sbb
fucomi
leave
ljmp
cs
mov
fstpl
jnp
mov
insb
and
loope
mov
andb
xchg
mov
xchg
mov
aaa
cmpsb
xchg
shrl
pusha
out
or
leave
lahf
xchg
sahf
test
movsl
shrb
xor
push
cmp
mov
test
cld
jns
pop
xchg
ds
cmp
or
cmp
lret
mov
cmc
pusha
lds
shl
jne
pop
loope
sbb
sbb
rcl
mov
repz
shlb
push
ret
sbb
xchg
push
rcr
sub
xchg
adc
pop
cmpsl
out
test
js
cld
push
lods
rclb
jne
inc
pop
bound
pop
sub
add
outsl
or
ljmp
pop
rcl
push
je
push
insl
sub
imul
xchg
fwait
shlb
add
mov
mov
push
mov
xchg
mov
xchg
stos
add
mov
loopne
andl
pop
js
jge
sbb
call
xor
add
les
lods
pop
movsb
jno
fadds
mov
and
dec
xor
inc
push
mov
fistpl
je
inc
cmp
into
insl
fldenv
rolb
ss
nop
mov
and
shll
scas
xchg
jecxz
pop
leave
shll
adc
js
ss
sub
push
je
hlt
cli
pop
lss
in
adc
loope
dec
es
xchg
pop
pushf
lea
mov
repnz
mov
mov
mov
std
and
add
dec
fwait
mov
pop
mov
sbb
loope
enter
mov
arpl
mov
mov
popf
incb
cltd
imul
daa
mov
dec
das
loopne
movsl
fs
lret
insl
fdivl
call
int3
mov
pushf
cmp
rol
repnz
pop
push
pop
testb
aas
bound
nop
loopne
stos
dec
sbb
loopne
int3
fstp
pop
cmp
inc
pop
mov
in
dec
loope
sub
mov
mov
mov
sbb
xchg
loopne
shrl
pop
clc
pop
mov
push
out
adc
sbb
outsb
cmp
mov
mov
push
imul
ficoml
xlat
sar
mov
sub
js
mov
out
xchg
mov
dec
and
push
sbb
dec
pop
cld
idivb
cwtl
dec
aad
fwait
cmc
inc
movsl
cmp
add
jle
mov
mov
cmc
xor
mov
inc
xchg
push
ret
jnp
std
shrb
xchg
xlat
lods
in
push
xchg
into
jp
int3
xchg
push
or
cltd
pop
add
dec
mov
lret
out
into
and
jno
xchg
xchg
fcomps
jns
mov
xlat
lret
pop
fcmovbe
out
add
jae
aas
lock
mov
adc
jp
adc
jno
pop
ficomps
dec
add
sahf
cli
or
push
lods
arpl
lahf
in
daa
mov
ja
or
adc
mov
addr16
leave
xchg
and
mov
pop
or
add
aam
shlb
jg
cmp
sahf
in
call
jle
mov
pop
subl
rcrl
and
cld
cmc
lds
pop
mov
jecxz
ljmp
sbb
dec
sar
dec
xor
bound
cltd
mov
mov
into
push
add
ja
aaa
xor
sub
inc
repnz
loopne
pushf
mov
nop
mov
or
jb
push
push
pop
repz
iret
loop
and
dec
outsl
jp
sub
inc
ret
into
adc
iret
insb
scas
or
pop
mov
dec
out
add
test
test
sub
movsl
test
out
add
in
movsl
mov
test
push
mov
mov
aam
data16
jnp
mov
popa
jb
stc
cmpsl
rcrb
fs
push
push
push
push
std
shlb
pop
jno
jp
dec
ficompl
and
jae
outsb
xchg
fs
push
mov
xor
shll
or
rclb
inc
pushl
push
int3
pop
and
je
mov
pop
sbb
xor
hlt
les
ret
push
xchg
pop
gs
push
jnp
stos
testb
mov
addb
add
pop
jb
lock
mov
test
mov
mov
addr16
adc
or
rcrb
andb
les
js
ja
hlt
in
int
xchg
out
pop
repz
daa
inc
xchg
rclb
dec
pop
xor
test
dec
push
or
jmp
xchg
fldenv
shl
add
cmp
and
mov
cltd
cmpsb
push
adc
xorl
sub
jbe
enter
ljmp
cltd
add
nop
dec
pop
sub
imul
or
jo
xchg
outsl
shl
sub
popa
mov
push
outsb
pushf
imul
cmp
cs
movb
jne
movsb
data16
orb
add
popf
ds
adc
call
jp
mov
xchg
out
in
or
loopne
add
add
popa
push
pop
jge
fsts
mov
popa
and
aaa
ds
cld
fldt
jecxz
movaps
int3
imul
dec
mov
cmp
lea
shl
cmp
testl
negb
jmp
push
sahf
mov
xchg
push
call
xchg
pop
dec
xor
insb
pop
jmp
fs
sub
or
cmpsl
xchg
cmp
es
jmp
add
cmp
scas
fdivrl
div
mov
inc
sub
cmp
cmp
pushf
dec
cmp
pop
mov
test
mov
icebp
dec
mov
sbb
test
call
fwait
and
aam
lahf
jl
iret
shrb
sub
jmp
mov
adcb
push
subl
jl
in
cmp
mov
push
nop
pop
cwtl
popl
stos
sbb
pushf
xchg
xor
and
push
imul
insl
add
lcall
aaa
je
pushf
insb
leave
ror
mov
push
out
out
fisubs
das
inc
and
push
push
das
mov
iret
leave
add
out
jne
push
pop
fiaddl
push
or
or
repnz
jo
inc
pusha
sahf
mov
jbe
in
mov
cmp
jge
leave
pop
ja
dec
jmp
cmp
jnp
icebp
mov
enter
push
add
pop
sub
cmpl
push
sahf
lods
loop
mov
test
out
mov
push
inc
lock
loope
inc
aaa
pop
shrb
in
lret
pop
xchg
add
lret
lahf
jle
test
scas
inc
test
mov
add
mov
jo
mov
lret
and
sub
in
mov
cmpsl
int3
jp
shrl
shrb
sarb
adc
sub
xchg
dec
lret
sahf
subb
or
fcmove
fbld
ret
mov
test
inc
adc
fbstp
popf
add
push
push
fcom
and
jg
mov
into
jmp
inc
nop
stc
cwtl
ja
pop
push
mov
gs
mov
and
inc
out
out
test
and
movsb
dec
lods
push
add
sbb
cmp
aaa
cmpsl
xlat
loopne
insl
test
sbb
pop
xor
int
mov
ds
xchg
das
test
cltd
pextrw
pushf
inc
aaa
bound
inc
sub
jge
subl
das
xlat
fwait
es
into
mov
cmp
shl
add
mov
push
sub
fs
cwtl
pushf
add
push
mov
mov
mov
insl
in
adc
inc
sub
cmpsl
adc
loope
cld
les
pop
dec
cmp
jne
mov
dec
je
mov
and
rcll
add
popa
mov
cmp
sti
jecxz
inc
xchg
push
xchg
push
popf
out
ret
es
dec
std
pop
inc
out
sub
add
and
xchg
int
cltd
subb
aad
mov
and
jb
sarb
push
loop
icebp
inc
sarb
and
out
mov
lods
push
dec
sbb
test
mov
inc
pop
popa
pushf
leave
pop
jge
mov
je
dec
inc
push
push
lcall
mov
xchg
test
mov
adc
adc
pop
mov
push
or
insl
xchg
lahf
movsb
sub
fdivs
lcall
repz
lds
jb
ja
sti
push
test
mov
shl
adc
mov
subl
xor
fbld
mov
jle
inc
fcmove
sbbb
std
in
out
aad
aad
lock
mov
xchg
sbb
je
ficompl
cmp
mov
mov
pop
pop
ret
inc
subl
and
adc
movsl
jne
jne
out
out
add
bound
push
outsl
push
cmpb
jg
clc
push
aad
out
shlb
cmp
jmp
sbb
xlat
in
jp
sbb
leave
or
out
pop
inc
fyl2x
or
sbb
inc
jle
mov
push
pop
lods
push
xchg
add
scas
sahf
out
jno
add
mov
mov
addl
mulb
cmp
jecxz
enter
pop
pop
faddl
cmp
divb
mov
mull
push
push
xorl
mov
jp
in
addb
push
aam
cwtl
adc
loop
pop
mov
and
lcall
mov
or
lret
push
mov
das
pop
dec
aad
pushf
push
xchg
jle
cmc
sbb
icebp
inc
xchg
mov
mov
test
popa
test
and
mov
test
xor
cmp
into
stos
shrb
add
jb
and
shlb
fsubl
in
xor
dec
frstor
dec
aaa
mov
add
mov
pop
sub
shrl
scas
adc
insb
push
out
cmp
push
lock
sbb
repz
aaa
les
mov
dec
popf
outsb
adc
jno
push
mov
mov
push
pusha
lret
movsl
jo
dec
xchg
hlt
push
push
das
sub
rclb
or
jnp
cs
and
movsl
negb
push
sub
mov
into
add
fldl
enter
jns
adc
fstl
jmp
sti
pop
push
jns
fwait
add
mov
and
or
xor
xor
xchg
jne
xorl
inc
je
stos
mov
ror
jle
fs
lock
repz
lds
and
jge
mov
jmp
jns
pop
and
jae
fnop
cmpsb
loope
add
xchg
daa
bound
cmp
pop
mov
jle
test
push
push
jmp
stc
shl
ret
cmp
xchg
or
std
lret
hlt
push
in
loopne
jo
fsubrs
cmp
pop
scas
mov
enter
pop
mov
jae
std
iret
adc
lcall
out
cmpl
and
insb
in
jmp
push
call
mov
scas
dec
and
cmp
push
jnp
mov
ljmp
inc
out
call
dec
or
xlat
add
test
xchg
aam
bound
subb
pop
pop
pop
dec
push
cmp
adc
mov
sarb
mov
shlb
icebp
sahf
and
stc
and
mov
aaa
iret
cli
mov
jl
int
or
sub
pop
mov
cmpsl
add
imul
dec
cld
lret
mov
iret
movsl
subb
jns
in
add
sbb
push
adc
push
std
add
mov
shl
testl
sbb
or
sbb
pushf
nop
out
gs
je
ret
sub
dec
xchg
add
fwait
jl
pop
arpl
mov
pop
std
popf
shrb
mov
jmp
imul
push
je
add
nop
in
ret
fcom
sbb
adc
inc
lahf
mov
mov
jo
push
sbb
add
dec
mov
or
bound
shll
mov
push
sbb
pop
aam
push
jmp
and
aaa
inc
sbb
sub
mov
out
and
dec
in
ds
insb
mov
add
movsl
repnz
movhps
stos
pop
out
mov
push
mov
repnz
jbe
xor
mov
mov
scas
mov
icebp
ljmp
mov
dec
dec
negb
cmpsb
pop
out
xchg
into
int
jae,pt
imul
jb
ja
jge
sbb
sbb
mov
test
outsl
mov
mov
jp
mov
cltd
sbb
mov
sbb
out
in
sbb
xor
mov
jnp
jbe
lret
js
mov
cmp
xlat
pop
dec
cmp
in
inc
cmc
and
inc
imulb
adc
mov
pop
sub
add
sub
inc
mov
push
mov
mov
mov
int3
loop
jns
daa
jae
sbb
into
pop
dec
sub
or
rorb
pop
xchg
pop
gs
fsubs
or
push
pop
mov
inc
pop
imul
jo
and
loope
sbb
imul
outsl
sbb
push
imul
push
pusha
addl
test
xchg
push
cmp
addr16
dec
cmp
xor
push
adc
push
jg
into
xchg
push
int
push
scas
popa
jl
sbb
lds
outsl
test
sbb
inc
popa
pop
mov
adc
xor
lret
ljmp
and
xlat
stos
jb
adc
notl
push
aas
test
sbb
dec
je
xor
or
divl
in
nop
or
xor
pop
hlt
daa
cltd
jns
rcl
mov
and
and
in
frstor
or
or
sub
insb
pop
add
adc
shlb
aad
adc
data16
push
rcll
shlb
pop
loope
mov
cmp
jb
lret
push
popa
push
push
cmc
mov
add
test
or
outsb
xor
xor
dec
sub
and
pop
rol
jecxz
inc
sub
or
push
cli
cmpsl
push
movsl
enter
push
sub
int
fisubs
stos
mov
lea
daa
daa
adc
cmp
cmpsb
cmp
and
ds
iret
sbb
sub
leave
in
push
aaa
lret
loope
add
cs
mov
add
std
lahf
push
out
mov
sahf
lods
push
xchg
xchg
jg
lret
pop
adc
add
rcrl
inc
xor
mov
aad
fdivs
add
je
adc
test
push
fldcw
jp
and
mov
mov
loop
dec
and
aas
jae
decb
leave
cwtl
fadds
add
mov
mov
in
shlb
xchg
jle
xchg
inc
jb
orb
pop
mov
popf
in
mov
inc
jmp
mov
xchg
mov
mov
inc
lds
mov
btr
shlb
xchg
cs
cmp
mov
insb
cli
test
adc
enter
add
pop
das
stc
pop
loope
call
cmp
mov
adc
inc
into
data16
aaa
adcb
mov
int3
jmp
pusha
sub
dec
mov
scas
movsl
push
dec
bound
out
mov
sub
sti
push
icebp
scas
or
leave
daa
in
ljmp
enter
enter
lahf
push
push
lods
add
inc
push
inc
cmc
mov
xchg
shll
int3
jmp
jmp
je
jle
cmp
fiadds
pop
int3
and
out
sub
fmuls
lret
add
jle
daa
mov
push
addb
pop
xor
or
push
scas
sub
fstl
adc
loopne
mov
push
push
xor
push
inc
loop
fnstcw
insl
push
test
push
xchg
or
pop
popa
unpcklps
repnz
outsb
mov
dec
sarb
push
roll
leave
lods
jg
dec
pop
sahf
mov
dec
push
outsb
bnd
stc
shl
mov
mov
lds
cmp
bound
mov
xorl
cld
pop
push
and
jns
cmp
mov
data16
xorl
jg
out
sbb
stc
xchg
ret
cltd
xchg
out
or
sub
stc
dec
stc
inc
aam
add
adc
daa
dec
aam
push
mov
iret
fs
cmpsl
rcll
out
dec
mov
mov
ret
jge
xchg
inc
jmp
out
lret
jg
or
and
jb
ss
insb
cmp
pop
loope
add
test
test
in
lods
xor
dec
mov
inc
bound
loope
les
sbbl
mov
xchg
sub
test
stos
mov
call
inc
fidivrl
or
sub
repz
sub
cmp
sbb
inc
inc
jmp
frstor
aas
adc
fsubl
fsubl
shr
cmc
push
scas
sub
mov
aam
icebp
gs
scas
jno
add
push
out
imul
adc
lods
sahf
int
sbbl
shrb
mov
out
push
or
sub
jbe
hlt
ja
dec
push
pop
xor
mov
xor
fidivrs
data16
xchg
mov
dec
xchg
movsl
xchg
clc
ss
mov
jo
addr16
mov
cmc
sti
in
cmp
sub
dec
adc
cmpsl
sbb
mov
sarl
add
mov
ficompl
sbb
add
and
add
aas
std
lret
rclb
jg
orl
and
roll
push
out
jne
scas
adc
divl
and
roll
mov
inc
lret
inc
in
ss
pop
hlt
loop
repz
outsb
mov
or
xchg
das
mov
out
or
lret
mov
imul
mov
icebp
add
add
rcrb
cltd
inc
pop
mov
cld
push
xchg
cmp
scas
cmp
pushf
data16
gs
je
or
jle
or
adc
xchg
popf
movsl
lahf
jmp
lahf
jl
rcrb
movsb
into
push
dec
daa
mov
mov
or
xchg
insb
repz
icebp
aaa
or
and
xchg
dec
inc
in
mov
bound
or
lcall
mov
lock
push
or
pusha
leave
lahf
or
and
faddl
jge
pop
jle
test
pop
out
mov
in
out
add
mov
loop
in
sbb
lahf
push
inc
jne
push
jle
sbb
mov
add
clc
inc
cli
xlat
inc
inc
adc
pusha
jnp
ficompl
out
xchg
pop
add
movsb
cmpsb
or
jge
int3
sub
out
adc
pop
mov
xchg
mov
imul
sarl
jmp
xor
jnp
sbbl
push
push
mov
test
cmp
or
push
pusha
daa
test
mov
lock
pop
xchg
lds
xorl
cmp
mov
ficompl
jmp
pop
data16
fwait
dec
arpl
mov
xor
mov
fs
sub
jmp
test
add
iret
adc
or
int3
fnsave
push
shlb
movsl
mov
sub
outsb
inc
jl
sbb
ss
scas
enter
adc
jne
cmpsb
cmc
or
jae
dec
pop
xchg
add
test
es
cmp
xchg
repz
out
pop
sub
mov
shl
xchg
or
jg
scas
out
nop
and
pop
cmp
add
ret
repnz
mov
or
mov
sub
jnp
test
xlat
mov
popl
int3
mov
ret
pop
movsl
cmp
and
add
xchg
jns
dec
xor
arpl
adc
adc
inc
out
lea
jne
imul
outsb
xor
lcall
lea
dec
mov
mov
cmp
mov
ror
or
aas
rclb
mov
mov
adc
sbb
adc
scas
pop
stos
pop
push
mov
movsb
mov
pand
dec
subl
sbb
dec
call
mov
subl
sub
inc
aam
iret
das
mov
hlt
sbb
adc
ret
mov
jno
cmp
lods
xchg
movsb
scas
add
jbe
dec
dec
jnp
outsl
or
les
lret
fwait
mov
leave
dec
out
pcmpgtd
cmp
inc
cmp
je
aaa
jmp
ret
ret
and
mov
fnsave
orl
iret
sub
arpl
push
lock
ret
mov
js
test
sbb
lret
jle
sbb
decb
pop
aaa
bound
xlat
push
or
stos
or
leave
adc
push
and
cmpb
cli
xchg
adc
mov
adc
mov
xchg
mov
data16
push
or
cmpsb
mov
ficomps
outsl
mov
movsl
inc
xchg
or
sbbl
bound
sahf
pop
jge
mov
orb
bnd
xor
jnp
out
add
adc
mov
adc
ljmp
jl
pop
bound
andps
dec
popf
fsubp
pop
and
movsb
lret
outsb
pop
inc
lahf
std
ds
mov
pop
mov
icebp
cwtl
cwtl
cmpsb
xchg
pop
sbb
insl
inc
pop
pop
rol
shll
cld
fstps
dec
or
outsl
mov
jg
sarb
sbb
lea
dec
cwtl
adc
sub
mov
sub
xchg
aaa
jbe
ja
sarl
jge
test
divb
push
testb
or
aam
or
adc
jmp
loopne
push
push
int3
add
fwait
lahf
push
cs
fwait
insb
sub
xchg
mov
js
xor
inc
inc
daa
sub
outsl
sub
pop
xchg
sahf
into
sbb
pop
jge
stos
out
scas
sahf
out
data16
pushf
clc
jbe
ds
mov
jae
enter
shl
jno
in
xor
js
push
xor
aad
bound
pop
cmpsb
js
sbb
fdivl
imul
sbb
aad
lds
inc
aam
mov
inc
gs
jns
cwtl
pop
or
ja
jbe
sbb
pop
add
sub
sub
popf
fs
jo
cmp
in
leave
rorl
jge
xchg
mov
pop
lahf
lods
sarb
and
int
sub
mov
pop
iret
jmp
mov
fs
int3
xlat
js
xlat
sub
pop
xchg
xchg
inc
iret
inc
sbb
mov
hlt
popf
cwtl
jle
mov
mov
add
repnz
push
sub
lods
js
xorb
addl
out
sub
jge
push
outsl
xchg
mov
xchg
clc
das
sbb
inc
cs
inc
in
shlb
and
cwtl
les
rclb
test
mov
lods
mov
jns
ds
push
push
pop
and
mov
punpcklbw
ja
test
push
pop
jcxz
data16
pop
adc
jmp
xor
movsb
pushf
inc
mov
push
out
xor
fisubs
inc
shrb
fistps
sti
stos
mov
sbb
int3
xchg
cmp
xor
jge
push
jp
js
in
lea
mov
ja
mov
adc
incb
ficoml
dec
xchg
loopne
icebp
adc
repz
fnstenv
lea
mov
lahf
ret
jge
or
inc
jp
jle
ret
mov
je
aam
flds
jo
fwait
outsl
mov
adcl
add
mov
push
xor
lcall
mov
stos
and
and
dec
push
xchg
push
outsb
dec
sarb
movsl
mov
dec
xchg
adc
mov
mov
pop
outsl
shlb
mov
pop
sub
inc
jns
outsl
add
jle
pusha
ja
mov
popa
lcall
jae
aas
ja
pop
test
imul
xor
leave
int3
icebp
pop
lcall
add
push
sub
repnz
or
sub
pop
pop
sbbl
xlat
outsl
push
enter
jns
loop
push
repz
cld
ret
push
rcr
push
jg
imul
xor
adc
hlt
xor
pop
sbb
gs
es
stc
add
mov
add
lret
xchg
jne
cmp
movsl
stc
inc
xor
dec
xchg
std
mov
insl
lds
loope
adc
mov
pop
stc
scas
xlat
jae
fidivrl
pusha
sbb
adc
push
and
jns
pop
test
push
test
ficoml
movl
sbb
or
clc
xchg
fwait
jbe
inc
xchg
mov
imul
mov
dec
push
mulb
shrl
popf
stc
in
repnz
daa
jnp
mov
jmp
xchg
cmp
repnz
or
sbb
lret
icebp
jl
lret
inc
xor
adc
cmp
sbb
test
xchg
stos
push
dec
cs
xor
call
xchg
adc
ja
test
jmp
imul
repz
sbbl
pusha
cmc
cwtl
outsl
mov
popf
std
cmp
icebp
jne
cmp
loopne
imul
push
xor
lods
xchg
lock
jno
subb
lret
pop
pop
jle
cmp
fwait
push
xchg
rorb
or
add
xor
adc
push
mov
sbb
int3
jno
adc
cwtl
mov
cmc
jbe
adc
imul
xor
cmc
dec
bound
jae
jge
int3
inc
jae
xchg
jae
cmp
mov
add
jecxz
and
fisubs
movsb
stos
inc
mov
push
adc
dec
dec
xor
mov
inc
les
mov
sub
cli
in
cmp
add
inc
fwait
shll
mov
push
sahf
outsl
dec
and
lods
movsb
and
inc
jbe
jmp
lds
or
repz
adc
push
cmpsb
jno
xor
icebp
mov
pop
test
adc
push
pop
pop
cmp
jnp
test
mov
cld
in
add
lea
cmc
or
adc
arpl
adc
mov
mov
rcrb
mov
imul
pop
lea
and
xchg
int3
xor
shrb
push
add
inc
mull
mov
ret
rcrl
test
orl
lahf
mov
and
pop
jmp
jbe
cltd
lds
mov
sahf
mov
jo
dec
mov
mov
ficompl
mov
ss
mov
cs
jnp
xchg
lods
ljmp
or
xchg
jae
ret
add
dec
shl
lock
adc
insl
ja
mov
idivb
cs
and
cmp
mov
ret
out
int
mov
dec
shll
out
ret
push
outsb
bound
nop
int
mov
mov
cltd
aas
mov
xchg
xor
sub
mov
mov
mov
xor
and
adc
cmp
push
xchg
mov
rorl
mov
nop
sub
jle
dec
pop
bound
aaa
cmp
push
popa
cs
mov
xor
addr16
arpl
dec
cmc
push
shrd
mov
xchg
xchg
push
mov
jne
inc
add
add
mov
pop
inc
push
das
dec
dec
sbb
xchg
pop
mov
mov
ljmp
pop
in
cmp
sarb
repz
sub
xor
test
fs
lret
add
loopne
and
inc
cmp
or
orb
mov
jbe
add
push
jge
mov
sbb
in
clc
cwtl
xchg
xchg
jno
push
ret
xor
sub
shll
mov
inc
pop
iret
addr16
fwait
lahf
xchg
push
out
mov
es
add
sbb
out
stc
cmp
enter
push
out
ret
daa
dec
pushf
jp
out
call
sub
push
mov
pop
dec
push
add
mov
xor
daa
pop
xor
cmp
divb
nop
pop
imul
jmp
and
sti
add
aam
imul
cmpsb
repz
lret
xor
xchg
inc
in
cmp
stos
pop
stos
or
push
and
out
xchg
cwtl
and
xchg
andl
repz
cmp
lds
adc
and
inc
mov
jle
add
inc
arpl
notb
jb
push
cwtl
pop
outsb
mov
into
gs
fwait
xor
mov
ret
int3
mov
mov
mov
cld
push
inc
xchg
jp
sub
insl
xchg
lock
mov
dec
add
inc
nop
sbb
xchg
push
int3
jbe
dec
scas
jge
insl
add
pop
cs
cwtl
xchg
das
mov
add
leave
sbb
std
mov
cmp
iret
clc
insl
insb
pusha
and
dec
test
mov
xor
in
pop
shlb
out
aas
ss
cltd
je
leave
jle
daa
adc
int
fs
inc
jns
pop
loope
mov
mov
ret
cmp
xor
nop
jnp
orb
daa
lock
daa
pushf
ffree
mov
sub
jbe
xor
mov
sub
jg
jmp
repz
jecxz
out
es
mov
pop
lea
out
scas
mov
ljmp
pusha
mov
sbb
movb
aas
in
jbe
mov
shll
iret
pop
lahf
mov
or
pop
fstpl
pop
jmp
jb
int
jecxz
pop
imul
ss
push
ja
fmuls
cmp
sub
push
pop
stc
mov
or
adc
out
andb
pop
aad
bnd
mov
lds
mov
leave
adc
cmp
cld
dec
mov
das
cmp
stc
mov
imul
inc
repz
jecxz
addr16
add
cmp
in
aaa
popa
push
xor
sbb
lret
xchg
or
mov
cmpl
sub
add
lahf
jp
jle
shl
jbe
cltd
mov
test
data16
pop
loop
idivb
pop
add
adc
mov
pop
jg
lods
mov
and
ret
shrl
push
les
in
xor
and
mov
daa
and
sub
mov
jp
popf
or
je
insl
test
leave
fs
and
jae
jg
pop
jne
std
clc
addb
inc
cs
leave
testl
push
lcall
jmp
imul
push
xor
lds
cmpsb
push
outsb
ss
pop
mov
pop
cld
fcomp
enter
out
adc
lds
adc
clc
shll
rcl
test
cmpsl
push
push
mov
and
inc
xchg
bound
call
and
fcompl
jb
aad
jnp
je
imul
popa
leave
mov
cmpsb
lea
repnz
jnp
inc
mov
and
fpatan
loopne
int3
clc
sbb
adc
sbb
push
iret
ror
and
xor
or
add
xchg
pop
cld
into
mov
jno
xor
leave
fcoms
add
cmp
xorb
pop
sbb
mov
jecxz
inc
sbb
aam
jne
lods
xchg
into
sahf
ret
pop
mov
dec
jnp
xchg
jle
xchg
popf
je
pop
xchg
inc
js
shll
xor
pop
lahf
mov
movsb
xor
dec
or
or
jle
and
mov
pop
jb
mov
fldl
incl
ret
and
out
add
arpl
jle
test
ss
jo
mov
pop
xchg
adc
jno
jle
or
aad
call
daa
cmpsl
cmp
ret
jge
and
mov
jg
stos
stc
popf
leave
or
pop
movsl
fnsave
xlat
sbbl
or
imul
xorl
rcrb
sub
dec
test
add
sub
mov
adc
adc
dec
int
fs
or
jno
pop
negl
cld
pop
lret
mov
mov
push
fnstenv
outsl
push
je
mov
call
push
sarl
or
jmp
sub
pusha
enter
cmpsl
out
push
stos
and
pop
dec
sub
insl
sbb
out
mov
mov
cwtl
repz
or
or
lret
mov
cmpsb
cmp
push
push
fucom
xor
js
dec
sbb
cs
adc
sarb
cltd
xlat
inc
test
push
jle
rorb
cmpb
sahf
mov
pusha
push
in
stc
sub
lcall
mov
movsl
push
pushf
mov
ja
in
add
rorb
rcrb
push
mov
add
dec
sub
add
nop
int
test
ret
lret
inc
pop
stos
pop
int
mov
pop
in
in
cmp
lea
pop
imul
arpl
mov
mov
inc
xorl
cmp
dec
imul
pop
sti
ret
xor
dec
arpl
cmc
jno
jbe
lods
leave
pop
mov
bound
lock
mov
pushf
int
mov
and
lds
js
orl
jmp
test
dec
fsubrl
mov
adc
js
ss
adc
pop
mov
sub
outsl
xchg
ret
clc
divb
jg
out
js
and
negb
loope
push
push
in
sbb
jecxz
add
lret
bound
stc
shlb
push
in
xchg
xor
or
cltd
and
dec
je
dec
jecxz
test
or
and
pop
add
lret
push
lds
mov
scas
push
fidivrl
lcall
mov
je
dec
or
popf
xor
fisubs
iret
enter
xor
xor
shl
xchg
add
pop
or
xchg
popa
push
sbb
mov
roll
vmovsd
pop
sahf
inc
xchg
xchg
mov
imul
mov
fistl
sbb
xor
rcrb
push
mov
ficomps
pop
dec
xor
inc
inc
cmpb
sub
lcall
das
pop
push
adc
mov
sub
ljmp
imulb
fstpl
mov
ss
lock
andb
jp
and
int
xor
inc
in
jmp
xor
insb
hlt
add
and
mov
mov
outsl
dec
loopne
mov
push
cld
ret
push
mov
push
ret
xchg
imul
mov
ss
clc
pop
xchg
cmp
shrb
mov
lea
subl
ljmp
push
incl
jg
xor
jg
popf
jne
mov
adc
jns
dec
loop
sub
dec
push
cwtl
sbb
roll
popf
scas
mov
pushf
cmp
or
ja
dec
lret
pop
cmp
sub
adc
movsb
mov
fldcw
inc
dec
mov
or
imull
push
pushf
jae
mov
or
push
sarb
dec
mov
ja
or
fcoml
sar
or
lock
sub
aas
jns
xchg
scas
mov
aaa
aas
mov
mov
jl
sbb
dec
imul
stc
popf
test
shlb
push
mov
clc
mov
and
xor
into
or
xor
scas
lods
pop
adc
loope
movsl
xor
xor
test
pop
xor
fnstenv
xor
pop
je
lock
orb
pushf
jmp
push
bound
xor
adc
sub
jae
ss
mov
or
fisubrl
es
pop
add
jg
ret
mov
push
les
push
jb
out
jae
pop
xor
and
dec
jo
mov
jnp
into
outsl
aas
call
xchg
fistpl
push
lock
arpl
fdivrs
loope
jmp
pop
or
mov
cltd
ljmp
push
push
xor
rcrl
mov
mov
dec
fbld
or
cmp
cmp
imul
loope
dec
inc
jl
test
fimull
lock
gs
in
sti
sub
daa
sbb
push
push
and
es
lret
pop
arpl
lret
movsl
add
push
or
ret
sbb
xor
call
pop
pop
popa
loopne
jecxz
and
mov
mov
mov
push
out
pushf
prefetch
jne
outsb
xor
data16
stc
dec
adc
xchg
xor
insl
out
popl
mov
and
mov
jb
sbb
inc
ss
xorl
push
ret
or
sbb
inc
pop
out
xchg
sbb
xchg
xor
adc
testl
in
dec
lahf
adc
push
inc
adc
jge
mov
cwtl
mov
jne
and
gs
jp
call
adc
lcall
xchg
xchg
test
fwait
pop
jns
push
or
scas
gs
mov
ljmp
imul
jle
push
scas
out
adc
fwait
xchg
push
mov
pop
mov
aad
loop
xchg
pushf
lahf
sti
mov
fwait
adc
xor
hlt
pop
inc
in
jne
or
and
push
push
sub
jg
pop
mov
pop
pushf
dec
js
and
push
dec
out
imul
mov
lds
adc
mov
rorb
in
testb
scas
aam
out
jle
shl
push
jmp
adc
aam
sub
pushl
das
inc
xor
jg
sahf
lahf
and
insl
jmp
loope
jl
push
xchg
sarb
adc
push
hlt
sbb
lock
lret
sarl
jecxz
pop
insl
add
push
in
cmpsl
pop
das
jle
adc
mov
testb
jl
push
movsb
pop
faddp
clc
pop
rcrb
mov
shlb
or
jle
xor
adc
push
sbb
arpl
sti
aaa
adc
jne
add
decl
add
and
stos
gs
sbb
je
adc
imul
mov
jmp
mov
pop
mov
sub
mov
mov
push
pop
xchg
hlt
sub
or
pop
or
gs
adc
xlat
loope
mov
jl
movsl
jecxz
mov
call
mov
sbb
jno
push
rol
inc
in
stos
sub
xor
pop
loopne
jg
imul
jl
fsubrs
jnp
cmp
sub
mov
lea
mov
loop
lods
fsub
dec
aas
dec
xor
popf
xchg
mov
lretw
popa
jno
sub
sub
fldcw
xchg
popl
cmp
mov
push
mov
lock
xchg
mov
test
stc
fistps
xchg
lahf
call
xor
push
fcmovne
xor
xchg
jl
xchg
lods
dec
sub
xchg
cmp
test
push
cmc
aam
andb
xchg
cmpsl
int
push
push
lahf
loopne
add
cmc
or
add
mov
push
cmp
imul
and
jo
aaa
and
add
mov
mov
aaa
test
test
dec
add
push
gs
rorl
sbb
mov
xchg
inc
adc
shr
cmpsb
dec
bswap
lods
bound
xor
mov
sbb
inc
hlt
cmpsl
mov
bound
inc
xchg
out
jl
jp
mov
sbb
stos
pop
xorl
mov
divb
pop
or
cmpsb
ja
sub
mov
cli
mov
subb
add
ret
mov
mov
and
cmc
add
mov
leave
mov
call
ss
in
mov
sub
or
daa
rcl
mov
orb
adc
lds
rcrb
or
pop
or
out
or
iret
mull
pop
push
in
mov
and
xchg
cwtl
pop
or
fstl
adc
cmp
fdiv
cli
dec
test
cltd
out
add
mov
ljmp
and
push
rorl
int3
or
into
test
and
and
mov
sub
or
sub
inc
mov
adc
xlat
cltd
push
fsubrl
aas
lock
fisttpl
cs
insb
xchg
xchg
rclb
jbe
mull
mov
ret
lcall
jne
sbb
jb
pop
cmp
mov
xchg
shrb
jp
repnz
add
adc
or
hlt
inc
lret
mov
movsl
add
lock
negb
lods
add
cmpsl
pop
nop
xchg
ljmp
shrl
shrb
xchg
fmull
pop
push
or
aad
cmp
cmp
mov
xorb
into
xorl
pop
mov
add
js
sbbl
or
into
lahf
cmp
scas
pop
push
xchg
popf
and
scas
mov
inc
mov
cld
mov
int
ljmp
scas
xor
mov
popa
mov
arpl
jle
out
sub
mov
add
inc
xlat
mov
cmp
mov
call
popa
popf
xchg
and
jecxz
movsl
jp
inc
mov
lcall
out
or
in
ja
or
ficompl
pop
mov
mov
pop
mov
outsl
sar
xchg
push
adc
push
int3
and
jecxz
and
mov
cld
add
bound
mov
jecxz
lods
sbb
cmp
jo
cmpb
mov
lcall
xchg
sub
test
push
xor
push
les
mov
cmp
clc
loop
mov
pop
jp
insb
push
mov
sub
xor
push
testb
mov
ret
push
xchg
jo
sbb
adc
ss
mov
mov
hlt
and
ja
out
pop
jmp
xchg
fs
frstor
xchg
stos
jg
loope
dec
xor
testl
and
js
inc
xor
lcall
aam
cmp
cmovo
rclb
jnp
pop
push
inc
jmp
sbb
scas
or
je
shrb
addl
rolb
mov
adc
inc
pop
mov
inc
enter
mov
jle
push
push
stos
call
xor
xchg
push
ret
nop
sbb
inc
push
js
pop
jle
push
ja
fwait
call
adc
pushf
cli
lahf
add
aam
cld
arpl
in
cmp
add
xor
sbb
gs
mov
addb
rcll
mov
ret
frstor
and
scas
push
std
xchg
push
rol
lods
and
push
cmp
sbb
ja
jmp
adc
cwtl
mulb
cmpsb
dec
inc
inc
mov
jle
out
mov
lcall
mov
fsubs
dec
sub
sub
ret
mov
jecxz
jbe
mov
dec
cltd
xchg
inc
nop
insb
xchg
push
repnz
stos
push
mov
sub
std
mov
call
mov
cmp
mov
lds
mov
pop
sahf
xlat
aam
fwait
cmp
sub
adc
pop
outsb
xchg
inc
ret
push
outsb
sbb
imul
pushf
ja
and
lods
mov
xchg
jns
divb
and
mov
jp
pop
rcrb
dec
out
jae
inc
mov
and
jecxz
adc
cmp
clc
leave
push
sbb
adcb
push
cld
push
in
pop
push
shll
mov
das
lret
js
cwtl
cmp
dec
or
imul
cwtl
lret
adc
adc
test
outsb
test
shll
fwait
xchg
lcall
mov
sbb
jae
jae
pop
pop
test
cmp
lahf
stos
js
xchg
fldl
mov
adc
cmp
xchg
inc
adc
mov
mov
pop
push
cmpsl
mov
loop
xor
scas
sbb
dec
frstor
jbe
lds
adc
mov
dec
pop
and
iret
movsl
sbb
pop
cmp
aaa
popf
daa
imul
adc
push
frstor
pop
ja
nop
add
cmpsb
sbb
jb
sbb
ja
shl
xor
ss
lea
pop
inc
inc
mov
mov
jb
mov
enter
xor
mov
sub
push
and
mov
fdivrp
in
imulb
popf
in
pusha
sbb
pop
rorb
aas
push
mov
push
repnz
mov
sbb
push
and
das
sub
test
mov
pop
cltd
mov
or
repz
xor
aam
sub
loope
xchg
xchg
sub
cmp
rcrb
cmp
mov
jae
imul
imul
adc
add
dec
gs
pop
scas
xchg
push
fwait
dec
data16
pop
out
adc
pop
xor
in
mov
or
sti
mov
aad
cmpsl
lods
sbb
jg
rolb
sbb
fcmovne
inc
cmp
jg,pn
aad
jmp
pop
cmp
xor
test
jg
xorb
arpl
pop
mov
std
test
cltd
loopne
jle
mov
pop
lods
ss
adc
js
loope
pop
loopne
mov
cmp
mov
lret
cmp
mov
shr
subl
pop
into
shr
jb
pop
and
fsubrs
mov
gs
jns
gs
ljmp
push
cmp
icebp
movsb
and
fildll
mov
xchg
sub
shlb
push
cmp
loopne
inc
and
je
sbb
inc
into
adc
xor
sub
imul
cmp
xchg
mov
fsubrp
inc
inc
fidivs
and
in
in
out
push
fmul
movsl
negl
sbb
fnsave
cmc
sti
mov
std
shll
stc
mov
scas
fstpl
sbb
adc
cmp
rorb
sub
es
or
ja
add
enter
lret
or
cmp
in
stos
mov
and
inc
fcompl
jp
shlb
ret
push
mov
mov
pop
push
adc
ljmp
sbb
dec
pop
adc
insl
inc
add
xor
cwtl
inc
fcompl
pop
jecxz
shl
dec
or
mov
mov
mov
xchg
xor
mov
loopne
mov
xor
fimuls
aas
rol
sbb
rorb
and
outsl
jnp
outsb
and
mov
push
push
pop
movsb
inc
inc
ret
lcall
jnp
popa
imul
xchg
mov
push
pop
xchg
add
das
cmp
xlat
pop
bound
pop
cmp
mov
aaa
arpl
sbb
sbb
inc
imul
mov
fstpt
in
das
rcll
mov
and
addr16
cmpsw
shrl
js
push
add
and
cmp
dec
xchg
push
sbb
xlat
dec
or
mov
jno
arpl
mov
pusha
push
cmpb
cmp
aaa
pop
xor
outsl
cmp
rcll
roll
fwait
sbb
lock
shrl
std
shll
call
cmp
lea
mov
dec
icebp
push
ljmp
and
sahf
sub
xlat
pop
or
shll
and
lods
inc
outsb
xchg
dec
dec
add
adc
out
inc
pop
rclb
xlat
es
in
lea
xor
pop
xor
mov
mov
cvtdq2ps
cmp
inc
fisttpl
mov
add
mov
sti
clc
clc
fcomip
pop
lcall
lods
jbe
and
mov
mov
push
rol
sbb
test
dec
mov
inc
add
frstor
pop
mov
push
ret
enter
mov
jmp
rorl
aas
mov
lock
pushf
push
inc
push
daa
push
xchg
mov
mov
adc
mov
mov
les
sbb
cs
adc
psubb
hlt
test
sbb
or
pop
xor
test
cmp
jg,pn
push
popa
pop
popa
adc
sub
mov
scas
sbb
jmp
xor
rcr
cmp
stos
sub
mov
adc
push
push
sbb
fwait
pop
fwait
jbe
or
inc
pusha
es
insb
inc
movntps
leave
cmpsl
aad
sub
in
adc
jnp
push
stos
fimuls
fidivl
pop
cli
adc
jmp
movsl
inc
je
push
pxor
cmp
and
pop
je
popa
repnz
pop
mov
jae
mov
leave
add
add
lds
xor
loopne
in
iret
jp
push
cli
jg
mov
pop
add
cmp
push
das
xchg
add
movsb
adc
xor
lret
jns
xor
add
ja
enter
push
sbb
leave
jo
adc
adc
dec
std
xor
jbe
and
inc
xor
pop
mov
mov
outsb
fimull
sbb
mov
cli
inc
jb
hlt
or
icebp
jle
adc
or
push
pop
xchg
lret
or
or
inc
push
repz
subps
cmp
inc
and
enter
pop
sbb
cmp
iret
jl
push
pop
mov
aam
push
mov
test
push
fbld
cmc
and
clc
jb
lods
sbb
mov
mov
adc
pop
insb
dec
ja
adc
mov
pushf
orb
inc
push
stos
mov
aad
test
es
mov
cmp
pop
mov
jbe
movsl
out
out
xchg
adc
into
arpl
push
jecxz
test
push
stos
jg
int3
out
mov
sub
push
inc
ss
call
stos
in
scas
sub
ficompl
adc
mov
out
int
jg
scas
in
or
lock
aaa
sarb
push
out
mov
jl
js
push
adc
ficompl
int
fs
dec
pop
test
mov
sub
mov
or
aad
mov
fs
xor
add
cli
fcmovnbe
scas
dec
fldl
lcall
outsb
mov
lcall
addr16
xchg
andb
xchg
jge
mov
or
das
sbb
ljmp
push
pop
popl
sahf
mov
test
or
xchg
jo
inc
lret
fistpll
cmp
cld
dec
mov
add
cmp
or
jo
dec
les
pop
mov
les
push
xchg
or
push
jne
jae
jge
xor
fcoml
jecxz
stos
data16
rcrb
call
push
mov
xchg
mov
les
lahf
dec
imul
das
jnp
cmc
fidivl
or
and
fidivl
and
les
pop
les
add
test
lret
shll
mov
jb
mov
sbb
xchg
dec
add
mov
xor
dec
stos
insb
pushf
pop
cmp
jb
dec
mov
popa
xor
popa
dec
lods
and
scas
cmp
in
and
scas
push
mov
test
mov
daa
mov
ds
cmpb
lods
add
jp
int3
mov
data16
ret
hlt
pop
jge
mov
stos
xor
dec
ja
mov
std
loopne
sbb
jae
pop
mov
out
lea
pop
add
into
cmp
jns
in
test
sbb
adc
bound
jp
call
push
cs
inc
out
scas
adcb
adc
dec
jge
sbb
les
xor
cmp
xor
aas
mov
leave
sub
inc
gs
mov
and
hlt
sub
rcrb
push
data16
add
add
xor
xlat
stos
jbe
jmp
dec
dec
xchg
fbld
push
int
pop
mov
shll
xchg
or
add
rcll
pop
jecxz
lea
jbe
push
mov
bound
sub
std
jge
test
movsl
ror
jne
in
cli
repnz
arpl
mulb
fucomp
shr
mov
into
repz
jmp
adc
sub
jmp
loopne
jbe
js
mov
adc
int3
pop
adcb
leave
es
out
mov
mov
orb
fisubl
and
push
cli
sbb
mov
jmp
xor
push
ja
jno
mov
sbb
std
aaa
ret
lahf
hlt
or
mov
jmp
imul
mov
mov
loope
mov
inc
in
pop
push
inc
xchg
inc
stc
lcall
cmp
fistpll
add
adc
adc
fldcw
ret
pop
sub
sbb
mov
js
ds
addl
mov
jo
das
paddq
jns
dec
cmc
js
je
ds
mov
push
and
adc
fdivs
sbb
push
and
pop
pop
cltd
mov
imul
stc
inc
jle
test
out
lds
rolb
outsl
subb
push
inc
pop
clc
das
jb
icebp
xchg
lds
stos
sbb
mov
mov
arpl
push
repnz
insb
push
jbe
lret
pusha
push
imul
add
inc
mov
stos
rcl
pop
test
sbb
push
or
sub
jns
popf
sub
push
inc
ss
nop
sub
pop
jecxz
mov
jbe
int3
sti
jge
ficomps
pop
in
inc
jmp
jnp
lods
lods
push
je
sti
dec
dec
mov
mov
and
adc
xchg
cmpb
ss
stos
fs
jmp
xor
and
and
jle
inc
dec
test
jge
movb
lret
jge
in
jle
and
ret
cs
cmp
sbb
movsb
popa
adc
sbbl
mov
clc
mov
mov
imul
mov
push
add
loope
imul
and
and
mov
xchg
push
cmp
lds
popf
sti
popa
cmp
xchg
push
add
fmuls
mov
sti
mov
lea
aas
push
mov
cmp
dec
out
mov
rclb
into
cmp
pop
or
cli
test
mov
scas
pop
enter
mov
pop
stos
mov
repnz
mov
xchg
inc
and
pushf
mov
adc
jmp
mov
dec
mov
xor
aad
mov
jno
adc
sub
lcall
mov
enter
cmpsl
sbb
fnstcw
repnz
mov
jbe
pop
push
push
jno
insl
iret
dec
jmp
pop
out
cmpsl
ret
jns
push
and
js
xor
adc
inc
in
out
inc
popw
lods
mov
jg
fidivs
xchg
push
or
adc
testl
cmc
inc
in
inc
stos
or
or
lahf
xor
call
ljmp
outsl
add
jmp
sti
into
jae
push
fisttpl
sbb
cld
in
mov
cmc
mov
pop
idivl
or
outsb
aas
xchg
shrl
xchg
sbb
or
push
cmpsl
add
rcrl
inc
test
and
mov
mov
push
sbb
imul
xchg
enter
je
jl
mov
lods
mov
js
pop
mov
pop
pop
xchg
sbbb
or
je
into
in
xor
mov
test
lods
jo
into
int
fwait
bound
es
xor
mov
sbb
inc
add
push
mov
push
adc
cmp
add
gs
xchg
out
sub
cmp
cs
add
mov
add
cmp
mov
leave
in
in
gs
cltd
cld
int
cmp
sub
adc
stc
or
cmp
xor
and
dec
xchg
inc
cmp
jecxz
cmp
mov
or
test
stos
outsb
and
sbb
bnd
outsb
jne
xlat
add
inc
and
mov
lahf
fistpll
test
push
sahf
mov
cmc
jns
rcrb
fidivrs
loope
mov
mov
add
push
ja
insb
aaa
jle
shll
dec
sarb
mov
mov
mov
dec
dec
outsl
in
sub
ret
adc
dec
test
mov
int3
ret
push
jle
gs
enter
imul
push
or
pop
aas
xor
mov
std
inc
loop
cld
rorl
xchg
stc
xchg
jecxz
loopne
test
pop
cmpb
loope
mov
add
xchg
jge
popa
mov
fdiv
sti
scas
push
cmpsl
pop
xchg
call
sbb
aaa
cmc
ss
adc
popa
mull
popf
fadd
mov
popa
or
int
pop
adc
popf
inc
mov
or
aaa
andb
push
mov
lahf
lret
shll
mov
stc
fistpl
cmp
fcmovnu
fisubl
aas
rcrb
rcrb
dec
mov
xor
les
cltd
lret
push
dec
pop
cmc
sbb
or
lock
sar
dec
adc
sub
call
adc
dec
jb
bndldx
sbb
inc
xchg
dec
xor
sbb
add
inc
xor
popa
notb
lock
jae
xor
cmp
cmp
mov
jg
or
addr16
jg
dec
loopne
hlt
mov
mov
or
popa
jb
pushw
and
or
lret
dec
icebp
test
bound
pop
ss
or
cli
dec
stos
jle
push
inc
dec
or
ljmp
mov
pop
les
add
les
cmpsl
push
insb
mov
push
or
mov
icebp
test
repnz
dec
push
sarl
or
and
mov
in
pushf
out
scas
xchg
je
mov
jecxz
lods
sub
mov
sarb
call
stc
subb
inc
outsb
mov
call
jno
cmpsb
adc
inc
xor
cmp
add
mov
imul
psllw
jp
mov
xchg
mov
and
addr16
lods
pop
cmpb
or
loopne
push
and
imul
xchg
mov
hlt
jl
mov
xor
sbb
pop
inc
mov
adc
sbb
or
jg,pn
test
mov
lods
iret
cmp
leave
or
xchg
pop
pop
lret
jnp
fptan
sbb
dec
lds
sbb
shrl
or
shlb
dec
sub
pop
test
lods
jmp
orl
out
pop
sub
jmp
addl
mov
pop
test
push
pminub
in
scas
xchg
cli
jle
cltd
rclb
mov
and
int
fistpll
jmp
mov
ljmp
mov
pop
cltd
fimull
hlt
es
adcl
and
xor
rcr
out
lahf
jle
mov
push
xchg
jl
mov
pop
out
cmpl
push
xchg
popa
sahf
bound
cli
and
out
rolb
cmc
out
scas
and
dec
pusha
pop
cmp
xchg
sbbb
dec
lret
push
mov
lea
jae,pt
mov
jmp
in
sub
and
out
or
pop
fnstenv
add
jb
pusha
add
jnp
sbb
or
adc
test
testl
mov
push
or
into
jl
loopne
icebp
in
inc
dec
push
dec
mov
repz
inc
jno
int3
pop
into
lods
jg
inc
sub
cmc
or
fdivrl
mov
sbb
add
inc
ret
push
or
inc
push
dec
xchg
push
xchg
inc
dec
sub
insb
pop
mov
xchg
push
mov
sub
push
push
lods
mov
and
mov
mov
inc
loopne
adc
ds
add
cmc
mov
jne
insb
sbb
dec
push
jg
pop
jne
sbb
sub
dec
scas
aam
dec
rcrb
mov
or
push
rorl
cmpsb
add
in
in
pop
std
push
sbb
addr16
dec
lods
loope
insb
mov
or
mov
sub
jne
jg
fcoml
or
or
pop
cmp
sub
mov
dec
pusha
nop
enter
dec
dec
xchg
sbb
mov
movq
pop
add
mov
add
add
mov
rclb
movsb
xor
mov
push
pop
xor
lock
and
lds
imul
lea
dec
jns
sub
shrb
push
ret
rcl
aad
mov
mov
shlb
push
test
mov
in
aaa
push
shl
inc
lret
or
call
jle
cltd
jns
es
mov
jo
mov
frstor
add
jno
popf
call
inc
push
stc
and
jo
insb
xchg
loopne
cmc
pop
arpl
movsl
fistl
xchg
pushf
cmp
out
fdivp
inc
lahf
jg
mov
mov
push
shlb
sub
xor
and
cmp
mov
es
cmpsb
shrd
lock
out
test
ret
xlat
sti
hlt
lods
add
cmpsl
adc
imul
ret
sub
popa
push
xor
sbb
sub
bound
sarl
mov
icebp
inc
loop
or
push
mov
movl
cmp
xor
xlat
sarb
xor
push
mull
jp
adc
cmpsl
pop
arpl
sbb
cld
xchg
mov
xor
push
push
xchg
mov
cltd
scas
xorb
fwait
incl
outsl
das
add
insb
dec
or
pushf
test
and
pop
add
js
fcmove
xor
dec
popf
movsb
mov
pop
or
jne
adc
push
and
fstps
inc
je
xor
sub
push
ret
scas
lds
andl
in
xchg
sub
pop
popf
addr16
mov
mov
inc
sub
test
gs
dec
sti
test
xchg
popf
cwtl
inc
jge
movsl
addr16
fisttps
sahf
lret
push
movsb
shll
repz
xchg
aas
in
call
mov
push
and
pop
leave
mov
sahf
call
cmp
sub
fldl2t
lock
lret
cmp
aaa
push
mov
and
cld
cmp
outsl
xor
leave
xchg
pop
filds
lea
adc
xchg
mov
test
push
or
cli
pop
shlb
fcompl
add
imul
in
add
cmc
adc
out
and
pop
cmc
mov
jno
and
mov
test
push
xor
dec
das
sub
pop
adc
push
pop
int3
or
push
ret
scas
sbb
loope
shll
xlat
mov
fs
sahf
mov
inc
or
pop
scas
sub
mov
ljmp
cmpsb
daa
mov
mov
test
leave
jb
ret
adc
scas
xchg
sbb
jmp
lea
mov
cmp
mov
loope
inc
jge
inc
lods
lret
out
push
add
add
addb
js
std
insl
or
jb
lods
mov
jne
add
movsl
dec
subb
sbb
xchg
in
adc
xchg
ja
cs
adc
daa
cmc
xor
xor
jmp
fwait
jns
pushf
inc
adc
pmulhw
fildl
fsubrl
cmpsl
sbb
xlat
jo
xchg
into
jo
lods
adc
cmpsb
add
dec
fs
shll
jge
mov
pop
mov
pop
movsb
push
mov
insb
js
dec
push
lods
pop
scas
shrl
scas
jae
fwait
push
sbbl
push
les
add
and
or
in
mov
sub
rorb
adc
lods
icebp
cmpsl
push
movsb
sub
repnz
or
jp
add
insb
jg
mov
jb
and
pop
add
adc
add
sbb
push
jg
mov
adc
test
pop
push
out
stc
mov
pop
aam
adc
push
pop
cmpl
fstl
inc
repz
fiadds
inc
sub
inc
and
push
mov
sbbb
or
rcll
incl
mov
icebp
ja
cmp
jle
cld
les
jecxz
sub
jge
sub
push
ret
sbb
sbb
pushf
out
lea
add
xor
stc
or
sub
jle
mov
mov
cs
in
nop
leave
xchg
clc
push
jns
loope
dec
xor
dec
imul
and
ljmp
adc
shlb
pop
xchg
nop
inc
xchg
jl
xor
cmc
test
xor
movsl
repnz
sbb
mov
or
mov
pop
lea
mov
inc
or
js
pop
fimuls
mov
ret
cld
sarb
pop
jg
jle
mov
dec
iret
bound
ds
in
dec
jb
mov
add
xorb
xor
movsb
lahf
cmp
jmp
nop
push
lahf
daa
inc
adc
stos
cmp
adc
adc
je
pop
or
dec
lcall
sbb
out
icebp
mov
in
sub
sub
lds
rorl
jb
cmpl
inc
addb
sub
test
dec
rcrb
cmp
and
inc
in
int3
call
dec
and
out
add
pop
jle
aam
and
add
xchg
mov
lret
repz
lea
sbb
in
pop
outsb
sbb
test
mov
push
es
inc
inc
repz
xchg
mov
jle
mov
outsb
fiadds
and
push
iret
stc
xchg
push
ret
lret
addr16
lret
pop
and
fwait
fwait
repnz
into
outsl
clc
mov
inc
enter
mov
lcall
frstor
aaa
popa
sti
jg
fisttps
jne
orb
mov
ljmp
popf
pusha
xor
or
imul
pusha
pop
jmp
and
or
push
mov
pop
cld
pop
mov
sub
cmp
cmpsl
pusha
sub
and
dec
push
pop
pop
jecxz
cmp
out
movsb
test
loopne
inc
pop
aas
sub
jl
inc
mov
fidivl
push
insl
and
movsl
int3
nop
lds
jmp
nop
int3
stos
jo
insl
sbb
mov
negb
pop
sahf
cmpl
imul
mov
mov
xchg
push
xor
test
arpl
jle
fs
jno
sub
mov
and
out
ja
aad
pop
hlt
cmp
cmpsl
adc
xor
shlb
into
fisubrl
loop
mov
mov
sub
fs
mov
sbb
scas
fcoml
adc
sub
sarb
out
or
mov
fdiv
or
jmp
mull
or
repnz
stos
jl
test
push
scas
pop
loope
rolb
mov
xor
jecxz
mov
cmp
pop
sub
adc
inc
je
dec
test
mov
scas
and
cmp
sbb
sub
inc
popl
adcl
arpl
iret
sbb
adc
out
nop
inc
in
repnz
mov
fsubrs
in
ficoml
jbe
int3
sbb
movsl
pop
outsb
and
fwait
pop
cli
loop
icebp
gs
pushf
inc
xchg
test
gs
stos
xlat
cmp
clc
cmp
cmpsl
sub
inc
add
sub
les
les
and
xchg
ja
nop
fs
movsb
jmp
gs
imull
sarb
xor
loope
cld
sbbl
out
pop
mov
mov
test
notl
sub
push
jg
popl
cmpsb
lea
inc
xchg
cmp
pop
leave
inc
popf
out
mov
lret
outsl
icebp
lret
mov
ret
mov
mov
and
mov
cmp
and
aaa
pop
mull
outsl
pop
inc
negb
mov
cmp
xlat
jo
xchg
in
ja
push
imul
mov
test
rcrb
stc
cmp
cwtl
jmp
stc
or
push
ffree
adc
add
int
ret
jne
mov
rcrb
sbb
ss
and
adc
pop
jns
jl
dec
movntq
sub
ja
pop
loopne
jns
xlat
je
adc
or
push
pop
aam
out
jnp
xchg
adc
lcall
push
jecxz
push
mov
cmc
pushf
je
dec
sub
push
sbb
lret
inc
lds
inc
push
mov
std
and
es
rcll
js
sbb
enter
xchg
add
test
orb
add
fidivl
ret
scas
jg
insl
pop
xchg
shl
cmc
lods
cmp
or
add
shrb
pop
xor
lds
pop
pop
mov
sbb
int
mov
stos
imul
jbe
mov
cmp
int3
insl
xchg
push
push
test
rol
pop
test
dec
dec
cmp
stos
lret
insb
fwait
mov
data16
sub
bound
add
jb
dec
in
dec
pop
add
pop
add
incl
jo
push
scas
scas
daa
sub
icebp
cltd
mov
xchg
pop
mov
int
cs
and
pop
repz
cld
xchg
popa
leave
lcall
inc
iret
test
xchg
push
sub
mov
scas
or
add
mov
xor
sub
incb
push
inc
cld
fwait
lret
xor
mov
add
lcall
pop
cmpsl
and
aam
shlb
test
outsb
mov
add
mov
das
xchg
pop
cwtl
les
push
icebp
fdivl
in
cmc
jp
jae
imul
push
xor
pop
cmp
sub
fisttpl
pop
jbe
add
push
push
fidivs
pop
pop
in
or
enter
push
add
enter
or
jne
cmp
in
pusha
dec
jne
jo
push
push
pop
and
cmp
loop
push
mov
mov
jae,pn
add
lahf
test
push
inc
leave
mulb
cmpsb
pop
arpl
adc
sbb
inc
rcrb
stos
inc
add
add
or
mov
xchg
cmp
pushf
mov
mov
xchg
mov
jp
dec
js
jmp
mov
loopne
data16
lret
mov
scas
adc
test
fsts
inc
movsb
bound
adc
xor
xchg
sbb
repz
leave
shll
rcl
jl
fs
test
mov
mov
jmp
sbb
cmp
sbb
outsb
sbb
icebp
bound
xchg
lea
stc
xchg
aad
negl
sub
push
dec
push
fstpl
or
jb
leave
jle
adc
adc
test
xchg
sub
mov
xlat
rcrb
xchg
imul
xor
mov
imul
shlb
ret
imul
loope
and
shr
cmp
adc
ja
push
lret
or
mov
add
mov
pop
dec
push
addl
inc
add
push
lcall
in
mov
dec
mov
xchg
and
or
hlt
pop
lea
push
mov
dec
shlb
jns
loopne
popf
insb
push
mov
or
fwait
cmc
imul
aas
jne
pop
xorb
nop
jnp
das
imul
sbb
mov
aaa
mov
pop
popf
call
cmp
mov
nop
cmp
sub
in
lock
add
pushl
pushf
mul
lahf
inc
adc
mov
outsb
nop
or
jo
mov
fs
or
jno
out
inc
sub
lret
push
adc
je
push
addl
repnz
pop
and
xchg
push
fwait
xor
add
aam
push
xchg
imul
push
test
daa
rcrb
pop
stos
pop
cmp
addr16
loop
fidivrs
mov
cmp
jmp
cltd
out
mov
jae
outsb
xor
push
addb
std
mov
dec
cmp
in
xlat
add
loopne
mov
aaa
ret
movsb
add
add
xor
in
mov
sub
inc
jb
popa
cltd
add
out
xchg
mov
in
in
jle
and
push
mov
adc
in
cmp
mov
fistpll
lcall
lock
inc
je
enter
dec
xchg
data16
xchg
sbb
mov
jecxz
sbb
aad
mov
xchg
mov
pop
rolb
pop
pop
outsl
or
je
add
mov
into
icebp
inc
pop
jo
push
fsubrl
jecxz
xchg
das
scas
test
daa
xlat
fimuls
mov
cli
xor
lahf
imul
andl
xor
jae
mov
ljmp
cmc
pushf
push
xlat
push
in
enter
test
loop
mov
dec
lea
loop
stos
push
loopne
adc
sti
dec
mov
ja
adc
jle
lods
in
cmp
in
dec
adc
leave
pop
pop
icebp
test
push
lahf
sar
movsl
or
shll
jle
call
fdivr
xor
enter
lds
sahf
rcll
aaa
cmpsb
xchg
movsb
mov
or
dec
push
das
jge
test
adc
imul
in
sti
jp
imul
mov
mov
test
loop
sub
and
stos
and
arpl
jp
inc
mov
sbb
adc
iret
pushf
mov
push
sub
xchg
cmp
dec
js
pop
mov
jno
lock
out
sub
jl
dec
outsb
hlt
pop
scas
and
test
inc
inc
pushf
push
inc
fidivs
lret
sbb
dec
in
xchg
lea
mov
and
or
aaa
bnd
lock
cmp
aad
jl
push
pusha
push
or
test
stos
inc
or
leave
cmp
std
jle
cmp
cmp
pop
push
mov
dec
movsb
jb
and
in
cmp
cltd
push
mov
jg
pop
stc
or
mov
imul
addr16
mov
push
xchg
inc
cmc
dec
adc
dec
and
cltd
cmp
subl
fcmovnb
push
sbb
pop
fdivs
sahf
push
jl
or
mov
sbb
xchg
inc
lahf
pop
in
pop
aaa
insb
ss
adc
jno
fwait
test
pop
mov
popa
dec
dec
sbb
pop
andb
test
push
and
fwait
adc
in
enter
jnp
cmp
mov
je
mov
xor
lds
adc
xchg
adc
cmp
cmc
push
or
js
fiadds
popa
test
fidivrs
pop
imul
push
in
les
push
push
popa
and
sbb
sbb
stos
jp
mov
aad
adc
sbb
lock
aaa
lock
inc
xor
lcall
incl
mov
js
push
call
stc
jmp
xor
xchg
xlat
or
xchg
mov
jbe
xchg
dec
mov
push
xor
loopne
add
xor
mov
jecxz
ljmp
fisttps
lods
aaa
frstor
rcrb
sub
xchg
fidivrl
lock
fstl
ss
push
idivb
incb
rorl
xchg
or
cltd
xor
rorl
addr16
mov
xchg
push
pop
mov
ljmp
cld
cli
push
jmp
lret
inc
dec
fldt
call
and
jns
sub
xchg
mov
xchg
sub
mov
andps
pop
cwtl
jp
movsl
mov
sub
jle
add
cltd
inc
in
call
pushf
shl
in
scas
into
add
fistpl
shlb
in
fs
mov
lret
mov
add
inc
xchg
and
push
mov
mov
popf
pop
imul
jbe
push
jb
jle
out
jae
sbb
push
xchg
popf
popa
adc
mov
insb
or
xor
sub
pop
test
mov
add
sti
jb
enter
jb
sbb
mov
push
add
int
aaa
ss
hlt
popf
and
into
push
push
test
mov
js
ret
mov
cmp
inc
movsb
aad
stc
sti
and
jge
clc
mov
icebp
jae
mov
ja
in
xor
lret
arpl
cltd
movsb
int3
stos
jecxz
sbb
push
jp
data16
cmp
or
xchg
add
cmp
in
lods
pop
dec
lahf
adc
adcl
jle
ljmp
mov
out
mov
dec
ss
es
lahf
mov
push
insb
and
and
outsl
das
or
mulb
pop
movsl
test
xchg
pusha
fisttps
push
cli
scas
in
mov
inc
fisubl
mov
or
dec
js
rcrl
cmpsb
sub
push
imul
ljmp
mov
scas
lahf
pop
mov
cld
inc
sub
and
icebp
fistpl
js
xlat
push
add
fdivrp
stc
int
loopne
out
lock
movl
cmp
imul
pop
sub
sbb
ret
arpl
fdivrl
mov
fs
ret
inc
stos
inc
xchg
xlat
out
xlat
test
sti
add
shlb
test
mov
cmp
dec
in
sbb
movsl
stc
pop
sti
mov
pop
mov
call
fiaddl
leave
fbld
dec
fld
or
sbbb
filds
pop
mov
inc
and
cmc
sbb
inc
mov
loope
pop
push
sbb
cmp
jb
add
cmpsl
inc
xchg
nop
mov
hlt
mov
and
mov
inc
add
in
outsl
cli
mov
jo
mov
or
sbb
test
xchg
roll
test
sbb
sahf
ret
and
mov
inc
sub
or
xchg
adc
sub
hlt
mov
pop
ja
xchg
test
movsl
jecxz
repz
cmc
pop
mov
push
mov
out
call
loop
add
lods
jmp
fbld
movsl
dec
jnp
jno
pushl
push
sahf
icebp
add
inc
shlb
leave
imul
xlat
sbb
xchg
dec
mov
stos
roll
xchg
lahf
insl
iret
xor
seto
stos
in
fwait
shrb
inc
push
data16
lds
add
popf
jge
sahf
push
sbb
dec
and
fbstp
cmp
lods
jl
pusha
stos
mov
ds
ja
xchg
outsl
sbb
rolb
sbb
loopne
test
sti
lcall
outsb
push
js
xchg
fistpll
mov
cmc
paddb
leave
pusha
sbb
mov
dec
sbb
out
fstl
xor
mov
enter
loopne
call
stos
mov
xlat
push
cmp
jle
stos
mov
adc
sbb
dec
and
ljmp
jno
pop
pop
sbb
das
ljmp
or
sub
push
lods
std
push
xor
lcall
xor
mov
mov
outsb
inc
dec
xor
add
xor
push
stos
dec
call
ret
push
and
nop
add
dec
xchg
test
insb
negb
push
or
movsb
mov
or
pusha
xchg
push
dec
aam
inc
inc
xchg
cmp
cmp
add
pop
lahf
cmp
sub
add
jo
push
pusha
ret
add
fidivrl
xor
fidivrl
cmp
fwait
pop
ret
enter
out
js
add
movsb
repnz
sahf
push
fdivr
or
ret
inc
dec
sub
cmc
cli
xor
push
lds
mov
dec
adc
mov
iret
dec
mov
jecxz
das
ljmp
rol
adc
mov
mov
scas
out
add
add
xchg
insl
bound
and
rolb
sahf
jecxz
aaa
and
pop
dec
pop
outsl
loopne
jae
sub
and
push
ret
xchg
xor
dec
test
repz
loopne
imul
pop
adc
inc
negl
xor
imul
test
lock
jns
sarb
dec
push
mov
in
ljmp
sbb
pushf
sub
sbb
mov
shl
mov
inc
jmp
je
pop
lods
cmp
or
sbb
sbb
in
rorb
sti
dec
mov
jmp
lods
xchg
pop
pop
xor
fs
push
leave
push
into
int
xor
adc
mov
mov
mov
lds
cltd
popa
repz
movsl
pop
xor
inc
push
out
ja
stos
xchg
and
xchg
xchg
pushf
ds
insl
ret
data16
test
xor
fidivs
cwtl
in
pop
push
dec
inc
outsl
or
js
sbb
in
inc
dec
dec
push
loopne
xchg
lock
adc
aas
aam
rcl
js
pushf
in
pop
fistpll
fmull
pop
mov
ret
ret
add
inc
inc
movl
iret
fcomip
cmpsl
into
sahf
mov
pop
repnz
cmp
adc
dec
sub
xor
mov
mov
adc
andl
jae
xchg
int3
popf
cmp
hlt
cmp
aas
add
lds
xor
test
and
pusha
mov
jne
not
add
mov
int
sbb
and
inc
push
add
inc
pop
and
rcr
sub
hlt
cmp
and
dec
hlt
pop
test
fcomip
pushl
mov
lret
fisttps
sub
sbb
mov
push
inc
or
aas
sbb
mov
adc
ret
jle
dec
mov
int
pop
jno
pusha
loopne,pn
cltd
mov
inc
dec
flds
pop
rcrl
push
sub
xor
stc
mov
cpuid
mov
inc
add
xchg
mov
pop
call
mov
inc
add
add
enter
sbb
cmp
int3
inc
lret
and
mov
mov
shl
imul
gs
sub
pop
or
fsubrs
add
push
jns
push
sbb
loopne
adc
mov
push
pop
fnstsw
and
roll
add
into
gs
call
mov
jb
mov
cmp
and
incb
mov
add
imul
dec
call
adc
cmp
jns
scas
insl
gs
inc
ret
add
push
pop
lock
jb
imull
xor
push
mov
xor
cmp
inc
es
cld
frstor
inc
loope
and
xor
push
std
sarb
out
and
and
mov
inc
jmp
into
ja
dec
ficoml
das
dec
push
fistpl
nop
pop
ja
and
lods
fisubrl
dec
movsl
insb
inc
inc
addr16
mov
cld
or
aas
jbe
dec
pushf
test
loopne
fwait
pop
jne
add
mov
popf
push
xrelease
sbb
punpcklwd
aam
pop
jle
cltd
cs
cs
dec
movsl
inc
dec
lea
out
push
push
mov
cld
fsubrl
pushf
sub
dec
aam
fdivl
inc
push
stos
xchg
mov
pushw
pop
gs
int
movsl
jge
cmp
sbb
lock
adc
xor
sbb
fisubrl
jmp
orl
mull
push
aad
pusha
andb
lods
jne
xor
mov
sub
mov
and
hlt
rcll
inc
out
mov
arpl
inc
cld
add
pop
aas
jno
jle
xchg
lcall
mov
add
jne
jnp
fisubs
jne
das
sub
mov
movsb
mov
lea
lahf
xchg
inc
adc
jne
clc
push
pop
and
outsl
mov
jl
ss
pop
dec
leave
shlb
sbb
inc
stos
fsts
rolb
lahf
int3
and
movsl
mov
ss
sub
daa
shrb
push
out
dec
xchg
pushf
shrb
hlt
pop
lock
loope
sahf
popa
loope
repnz
push
push
stc
repnz
xor
mov
repnz
js
in
cmp
mov
rorl
rorl
out
mov
cwtl
pop
xor
mov
mov
jns
or
jne
add
sbb
out
les
test
mov
lock
std
lock
jecxz
xchg
cmpsb
push
ljmp
popf
into
stc
aad
pop
cmc
mov
or
push
cmp
cli
pop
movsb
xchg
repnz
cmp
sub
int3
aaa
push
fistpl
fsubp
adc
jns
jnp
test
cmpsl
les
lods
xchg
mov
aam
xchg
shlb
lods
push
pop
xchg
in
push
jo
cmpsb
inc
pushf
adc
rclb
pop
push
loopne
sbb
cltd
sub
dec
movsb
mov
jno
ret
fwait
movl
mov
movsl
int3
inc
repnz
leave
mov
sarb
lods
and
das
or
or
loop
push
cmpsl
rcr
adc
mov
dec
xchg
loopne
push
dec
mov
aas
cmp
or
sbb
cmpsl
loopne
icebp
lods
inc
imul
xchg
sbb
cmpsl
stos
pop
cmp
xor
shl
in
mov
push
notb
mov
or
adc
xor
adc
mov
test
xor
jp
xchg
xor
loopne
imul
std
lods
roll
jecxz
aaa
rol
mov
jbe
sbb
dec
into
std
sbb
adc
negl
cltd
xchg
adc
imul
or
aaa
adc
adc
clc
jge
sti
int3
xor
lds
jbe
sub
fdivrl
pop
gs
xchg
movsl
xlat
jb
mov
fwait
or
dec
adc
jg
mov
xchg
or
cmovno
cmp
xchg
pop
or
ret
add
add
in
sbb
lods
ja
data16
insb
pop
js
test
aaa
in
sarl
negl
cmp
cld
mov
leave
jnp
jbe
scas
pop
cmc
les
pop
inc
adc
jo
mov
fimuls
or
aas
pop
fistpl
jecxz
mov
pop
sbb
stos
push
push
cli
mov
movsb
or
push
sbb
adc
jne
pop
bound
jne
out
or
loopne
movl
adc
jae
cmpsl
mov
arpl
mov
mov
or
push
inc
movsb
mov
add
inc
jno
and
in
sbb
jnp
sub
pop
xchg
pop
jecxz
sbb
sbb
xor
inc
adcb
cli
xchg
fnsave
pop
inc
push
fistpll
push
aas
or
sub
fbld
or
stc
call
cmpsb
loopne
or
decl
out
cmp
xchg
push
gs
out
sbb
cwtl
shrb
dec
xor
xchg
add
push
pavgw
jne
mov
cvtps2pi
adc
imul
xor
dec
mov
insl
and
mov
pop
mov
rcrb
es
fsts
push
cmp
mov
sbb
loop
xchg
aaa
mov
fimull
push
in
ss
add
sub
movsl
stos
loope
push
jno
pop
xchg
xor
in
lret
ret
lods
test
aam
cmpsl
pop
fucomp
pop
int3
adc
xchg
pop
mov
xor
and
dec
inc
scas
ret
jge
ljmp
testb
mov
pushf
movl
mov
lret
add
stos
inc
mov
xchg
dec
hlt
sbbl
push
sbb
shrl
leave
mov
jg
jnp
add
cmpb
nop
out
xchg
leave
enter
hlt
rcrl
lret
js
in
jbe
jae
pop
cmp
cmp
dec
testb
push
inc
aas
fisttpl
aam
into
stos
fdivl
push
lods
mov
or
inc
pushf
push
lds
or
mov
stos
pop
mov
inc
andl
sbbl
dec
jne
cmp
add
mov
das
mov
inc
pop
jnp
xchg
cmc
cmp
jp
adc
sbb
xlat
xchg
dec
mov
cmp
inc
scas
mov
ja
jne
into
jecxz
xchg
adc
sbb
cmpsl
inc
cmc
mov
mov
xor
sti
mov
add
stos
aaa
push
jne
std
cmp
mov
imul
shlb
jge
test
sub
popa
push
popa
test
cltd
rcll
stos
pushf
jge
or
push
loop
mov
push
push
push
adc
mov
xor
push
sub
jne
jle
push
das
mov
dec
stc
xchg
inc
js
shl
dec
cmc
dec
sbb
cwtl
xchg
test
jge
popf
clc
pop
and
shlb
lret
mov
in
xor
jae
add
mov
sub
sahf
xor
push
push
add
cmp
dec
jns
push
push
bound
mov
jae
adc
cmp
gs
loop
dec
mov
inc
add
shll
push
subb
je
push
mov
jns
dec
cltd
cmp
or
add
aas
testl
or
call
xor
sub
sahf
add
inc
popa
mov
push
jle
insl
sbb
push
mov
movsb
ret
out
sbb
push
insl
sbbl
jl
mov
and
and
sbb
into
mov
push
add
and
scas
enter
jns
mov
xchg
sbb
data16
fstpt
push
mov
sbb
jo
push
stc
and
add
xor
mov
pop
cmpsb
xor
cmp
arpl
push
inc
push
cld
insb
rcrb
dec
inc
cli
ds
stos
dec
xchg
lods
cmp
data16
cmpsl
push
std
sub
scas
pusha
mov
mov
cmpsl
bound
cmp
cs
cmp
jnp
jg
push
mov
lods
in
mov
xor
cmc
mov
push
cmp
fcmovb
sub
xor
pop
jo
jo
icebp
pop
fwait
pop
imulb
push
jmp
add
mov
in
mov
mov
mov
sub
ss
popf
inc
addb
inc
push
dec
pushf
adc
fnstsw
mov
nopl
and
xlat
xlat
inc
adc
push
repz
lcall
fisttpll
ret
ret
call
pop
dec
cltd
adc
fbld
xchg
js
adc
xchg
push
cwtl
xorl
mov
xor
or
dec
int3
out
and
enter
fstps
iret
stc
and
mov
xor
xor
sbb
jmp
gs
add
repnz
dec
fstpt
mov
mov
xchg
popf
ds
sbb
pop
lcall
jle
mov
fisttpl
stos
cmp
es
into
sub
pop
mov
rcl
fiaddl
and
popa
sub
stc
stc
outsb
mov
repz
sbb
sbb
inc
and
mov
leave
lcall
fldenv
mov
mov
push
pop
stos
repz
std
faddl
and
mov
aas
out
jp
push
pop
mov
clc
xor
dec
pop
insb
mov
movsl
jbe
cmpsl
sti
fistl
adc
mov
cmpsb
push
xchg
cmp
cld
jno
xor
add
pushf
adc
pop
jmp
sbb
mov
sub
dec
lock
fwait
or
xor
xor
sub
sbb
cmp
add
mov
loopne
ljmp
in
xor
adc
jge
and
outsl
jnp
or
jmp
roll
inc
rcrl
sub
fsub
cmp
adc
push
andl
in
pop
jnp
aad
clc
nop
xchg
add
lea
add
fistps
ret
jbe
roll
ds
dec
cmp
xchg
lcall
jmp
xlat
jbe
dec
cmp
in
adc
cli
fnsave
addl
mov
inc
es
push
or
out
xchg
stos
or
mov
sbb
adc
cmp
lea
scas
lret
mov
repnz
push
aad
add
lret
push
ret
inc
mov
mov
in
push
je
pop
jno
aas
mov
lock
push
inc
int3
jb
xchg
add
xchg
mov
movsl
insb
adc
fldt
test
dec
mov
xchg
inc
pop
xchg
test
xchg
pop
rep
popa
fdivr
popf
fwait
pop
mov
roll
scas
sbb
and
sbb
add
outsb
insl
fwait
das
daa
or
cmc
xor
jp
push
push
sub
adc
or
xlat
xchg
or
sub
pcmpgtd
lods
js
imul
mov
jb
pop
mov
inc
ljmp
repz
fcoms
pop
sbb
adc
push
test
inc
cmp
pushl
pop
jne
lods
mov
in
ucomiss
dec
or
into
and
push
add
xchg
add
out
pop
cli
sub
inc
xchg
pusha
add
cs
add
mov
pop
lret
bound
cmovp
je
inc
pop
cwtl
mov
dec
cwtl
pusha
push
pop
mov
sahf
mov
or
cmpsb
ja
mov
xchg
push
sbb
hlt
mov
daa
es
ja
jo
mov
dec
cmp
mov
adc
xchg
jge
jecxz
dec
seto
lret
data16
adc
das
rcrl
xchg
aas
rcrl
jmp
mov
arpl
imull
imul
pop
pusha
ja
mov
js
je
fsubrl
mov
cltd
mov
pop
test
testl
sbb
jno
mov
mov
mov
fnstcw
sub
js
ds
stos
or
mov
and
addl
and
xor
cmpb
mov
and
push
xor
das
stos
loopne
mov
jae
lods
xchg
add
cmpl
aas
cltd
sahf
gs
int3
ja
fisubs
inc
outsb
mov
movsl
pusha
mov
outsl
cmpsb
xchg
mov
xor
pusha
push
mov
mov
clc
movsl
add
pop
mov
cld
and
push
add
adc
jle
xlat
cmp
fsubrs
push
push
bound
cmp
or
rorb
push
outsb
rcrw
lea
pop
repz
lods
movsb
dec
or
popa
dec
add
test
mov
cmp
jnp
pop
iret
arpl
xor
ficoml
pop
push
dec
shlb
lret
jmp
inc
arpl
scas
cs
imul
rol
push
mov
sub
or
clc
jecxz
add
fsubrp
cmc
rorb
mov
daa
cwtl
fcomp
insb
stc
xchg
pop
sub
sub
imul
cmp
enter
mov
sbbl
int
jl
xor
pop
jbe
leave
subl
insl
push
rol
inc
repz
cmc
cwtl
xchg
xor
scas
cltd
rorl
push
lds
xor
or
mov
add
into
in
test
pcmpeqd
dec
mov
out
outsl
and
fistpll
into
call
in
repnz
push
xor
push
std
and
les
xor
daa
or
pop
xchg
sbbb
aad
lret
lea
icebp
inc
lcall
pushf
addr16
das
sub
jb
das
movl
daa
lret
scas
jnp
jae,pn
inc
cmp
faddl
in
movsl
loop
push
xchg
dec
mov
fisubs
js
std
add
lock
push
jae
push
mov
mov
mov
fadd
jmp
bound
addr16
adc
jb
lods
ss
jo
sub
mov
pusha
cmp
push
and
push
cmpsb
jge
dec
rol
mov
lret
and
addb
loop
bnd
adc
pop
jo
pop
adc
adc
lahf
int
mov
addb
loopne
lcall
ja
xorb
xor
mov
scas
out
jl
cld
leave
adc
jmp
ret
fcoms
sahf
xlat
xchg
popa
dec
out
pop
xchg
rcr
jl
dec
pop
je
imul
in
dec
push
in
mov
out
or
pop
in
jle
or
dec
lret
sbb
push
test
dec
mov
add
cs
loopne
lahf
inc
jge
or
aad
js
jmp
sub
iret
adc
pop
pop
pop
je
fcoms
adc
ffreep
cld
mov
fisubrs
adc
loopne
push
jne
jo
mov
imul
add
adc
mov
mov
cmp
pusha
data16
push
loop
ljmp
push
adcl
out
cs
pop
outsl
pop
pop
and
lds
clc
cltd
mov
clc
and
je
test
sahf
addr16
mov
cmp
loopne
or
push
push
add
mov
cmp
push
mov
repnz
aaa
mov
sub
inc
rorb
je
jb
jecxz
mov
in
ss
pop
sub
xchg
test
sbb
lcall
inc
and
mov
js
out
mov
ror
sti
dec
test
mov
loope
add
add
bound
pop
push
add
xor
jmp
mov
add
shlb
repz
fidivl
arpl
pusha
clc
cmp
xchg
outsb
xchg
add
nop
jb
push
roll
daa
jae,pn
inc
addl
add
cltd
push
pop
xor
icebp
and
jecxz
aas
push
nopl
inc
dec
addb
mov
movsb
cmpl
pop
stc
fstps
push
test
sbb
jle
rclb
test
into
and
out
dec
mov
pop
lret
cld
cmpsl
mov
fmul
or
test
xor
xchg
lods
shrl
or
xor
lret
cs
cmpsl
jno
xchg
fdivl
mov
repnz
jo
xor
push
push
ja
pop
push
fnsave
aaa
lcall
dec
xor
add
filds
mov
cld
mov
sbb
sub
sub
scas
lods
enter
enter
adc
lret
sbb
add
mov
stos
dec
sahf
inc
data16
mov
aas
clc
aaa
jmp
sub
cmp
enter
sub
dec
push
add
adc
and
mov
dec
jge
inc
inc
mov
adcl
cli
push
mov
push
or
and
out
int3
cwtl
sbbl
aas
mov
stc
inc
cmp
or
addb
jle
lcall
int
outsl
insl
arpl
notl
loop
jb
fsubr
jns
xchg
ja
jge
into
imul
loop
jnp
dec
xchg
andb
cltd
and
out
adc
call
xor
lods
xor
add
jg
loopne
sahf
popf
mov
icebp
leave
repnz
imul
imul
sbb
aas
lahf
ss
pop
mov
inc
jge
lods
stc
sbb
and
out
into
fstpt
jge
cmpsb
dec
pop
cltd
jne
mov
mov
push
stos
or
mov
xchg
sub
or
add
hlt
sub
sbb
dec
rorb
pop
cmpsb
xchg
sbb
shl
xor
inc
cmc
inc
repz
test
xor
ss
sbb
push
mov
push
mov
dec
mov
insb
jp
movsb
mov
add
in
fmul
fs
xor
sbb
call
movsl
std
and
notb
xor
mov
leave
mov
mov
imul
call
xor
push
push
add
mov
xor
and
into
pop
pop
iret
cmpsb
inc
imul
pop
arpl
lods
outsb
cmpsl
mov
or
xchg
cli
bound
faddl
push
fcoml
negl
fcomi
mov
push
aad
adc
fadds
push
jno
cli
out
icebp
pop
pop
or
pop
lcall
pop
cwtl
bound
sbb
popf
jo
in
jl
or
push
push
lods
imul
xor
leave
pop
pop
jg
mov
push
out
push
mov
push
stos
daa
xchg
js
add
or
dec
mov
jl
cmp
lods
xor
jb
dec
test
dec
inc
fstl
fwait
adc
jg
cmpsb
push
inc
pop
scas
iret
int
lea
leave
add
in
and
push
inc
mov
xor
into
mov
pop
loop
int
cmp
std
jbe
test
mov
dec
fs
popf
mov
or
xchg
xchg
fsubrs
jp
hlt
inc
pop
mov
mov
or
pop
jnp
mov
sub
sub
add
inc
sub
aas
push
mov
lea
stos
jg
mov
mov
loope
add
sub
cmp
imul
xchg
repz
add
sub
jb
js
dec
sub
test
jns
imul
xchg
sub
jb
cwtl
cld
imul
xchg
pop
jb
cmp
fldl
out
repnz
std
push
in
test
jle
pop
outsb
in
cmpsb
ds
or
dec
xor
das
lret
fists
sbb
in
mov
in
mov
xor
xor
inc
es
movsl
scas
mov
jge
xchg
jb
sahf
imul
imul
js
test
mov
mov
clc
and
aad
jge
xchg
loop
mov
fistpl
pop
mov
dec
hlt
jmp
adc
in
call
sbb
mov
push
aaa
sahf
cmc
iret
das
sbb
lahf
or
jno
add
icebp
xor
or
stos
add
dec
cld
mov
jo
cmc
aas
loopne
or
xchg
popf
loop
inc
adc
cli
jmp
ret
xchg
aad
lret
inc
clc
out
push
mov
repz
pusha
cmp
add
rcrl
pop
cli
sbb
dec
sub
jns
mov
aaa
lea
mov
pop
mov
mov
xchg
sub
mov
popf
inc
shlb
ds
sub
insb
push
loopne
daa
jmp
adc
fwait
xor
sub
test
sti
jmp
xchg
testl
test
inc
gs
cltd
push
imulb
pop
push
xchg
inc
fistps
sub
out
dec
popa
out
and
mov
test
popf
adcl
int
jmp
jecxz
sti
lods
pop
lret
mov
pop
std
add
sub
in
dec
movsl
jne
addl
loope
nop
repnz
jmp
adc
in
test
int3
popa
pop
sbb
dec
dec
inc
inc
or
jns
xorb
cmp
scas
jae
sub
push
loopne
fdivr
int
fmull
fmull
adc
inc
scas
in
aaa
lds
sub
loop
imul
mov
cmp
cmp
in
mov
pmuludq
loop
mov
jecxz
cwtl
es
dec
xor
add
xchg
in
movsb
jmp
add
shll
jmp
je
xorl
sbbb
addr16
xor
scas
mov
shll
and
jmp
aad
dec
mov
sbb
xor
std
cmp
dec
cltd
or
pop
in
mov
push
push
or
test
out
aaa
mov
jp
sbb
jo
dec
sbb
and
imul
mov
fdivp
enter
iret
xchg
or
adc
xor
cmpb
int
dec
push
aas
cmpsb
aaa
adc
xor
inc
call
inc
mov
and
jno
jmp
mov
or
mov
mov
data16
lock
shll
mov
sub
cmp
lret
mov
jbe
int3
cmpsl
cs
pop
dec
jno
add
into
cmp
fdivrl
mov
jmp
mov
push
xchg
test
jo
sub
ss
les
fcoms
push
subl
cmp
jne
dec
popa
divl
xchg
mov
adc
sbb
or
ljmp
xor
loopne
pop
js
enter
mov
or
and
adc
xchg
imul
cwtl
cmpb
dec
popa
call
stos
mov
jbe
jle
jo
push
ss
fcoms
push
mov
mov
sub
aam
add
mov
mov
add
in
jmp
in
ljmp
stos
jmp
test
dec
xchg
lock
adc
push
jo
jns
das
pusha
mov
push
jns
scas
rclb
lahf
int
add
adc
jl
xorb
js
orl
cmp
adc
test
push
fldcw
xor
jp
mov
mov
sbb
iret
ja
xor
mov
dec
lret
and
mov
jb
in
popa
dec
and
aas
inc
mov
cmpsb
inc
sub
push
cltd
adcl
add
adc
test
xor
push
lds
pop
cltd
sbb
lea
and
jne
aaa
fcmovbe
movsb
dec
fstpl
fidivl
push
xchg
push
mov
inc
mov
push
mov
sbb
jecxz
sbb
pop
cmpsl
mov
roll
push
jle
xor
daa
enter
rcrb
je
je
or
in
or
and
cmc
dec
mov
in
and
dec
jne
scas
sbb
cmp
sub
leave
dec
xchg
or
sbb
sbb
ret
fmuls
gs
jecxz
sub
cmp
ja
jno
iret
fwait
rcrb
and
mov
iret
inc
lock
jo
cmpsb
out
mov
adc
fidivs
xchg
in
dec
push
dec
mov
adc
ss
sub
lret
mov
jmp
jns
xchg
jns
push
cmpsl
in
cmpsb
or
in
sbb
inc
sbb
adc
xchg
mov
mov
test
fsubl
jmp
xor
xor
jg
or
stos
mov
xor
clc
subl
mov
mov
xor
cmp
aam
sarb
iret
insb
xchg
ljmp
mov
aaa
lds
out
push
xchg
popa
and
out
loope
stos
dec
jp
jge
xor
cmc
ss
jecxz
mov
pop
cmpsb
inc
jno
push
push
sbb
jp
push
and
add
cs
push
insb
or
loope
mov
ret
je
je
cltd
cli
ret
pusha
cmp
idiv
push
js
test
or
pop
or
sub
js
in
mov
push
aaa
sub
jmp
cli
fcompl
shlb
jns
hlt
push
dec
or
mov
or
pushf
cmp
sbb
fisttps
subb
jne
int
ret
xorb
fwait
add
inc
push
in
rorb
mov
int
jbe
mov
cmc
ja
cmp
push
pop
in
mov
push
sub
push
popf
test
push
jns
xchg
dec
add
daa
push
loop
call
addl
mov
mov
cli
fistpl
sbb
addr16
leave
and
fbstp
and
or
mov
mov
add
push
jecxz
call
push
add
cmc
cli
cmp
jp
std
dec
repz
cld
cmpsb
mov
add
scas
push
rorl
nop
push
icebp
fwait
sbb
fdivl
addr16
push
ret
lahf
sbb
out
loope
xchg
xor
mulb
lret
sub
mov
cli
filds
out
sar
sbb
adcl
sahf
xchg
leave
decl
sbb
jbe
out
xchg
leave
jno
xchg
inc
pop
xchg
or
fistpl
orl
cmp
lods
inc
movsb
ret
lods
mov
loopne
jne
mov
sahf
pop
pmuludq
aam
jne
jae
mov
sub
and
mov
add
enter
rclb
jge
cmp
repz
sbb
sbb
cwtl
icebp
enter
cld
fmuls
or
ret
aas
add
push
sarl
fisttpll
jnp
scas
mov
adc
mov
cmp
xchg
inc
rolb
dec
popf
data16
sub
repz
lods
orb
std
push
sbb
popf
jmp
enter
leave
aas
inc
mov
andb
testb
and
cs
test
xorl
ret
adc
push
fnstenv
scas
add
inc
outsb
add
dec
xchg
xor
jns
and
cli
push
iret
xlat
inc
dec
mov
jge
add
dec
mov
dec
xchg
sbbb
xor
push
adc
inc
pop
jae
idivl
push
xor
iret
and
lret
movsb
add
inc
sti
ret
insl
mov
pop
pop
adc
push
sub
int3
cmp
shlb
mov
sahf
rcll
lods
add
push
aaa
nop
cli
mov
mov
pop
test
mov
dec
leave
or
adc
xchg
xchg
xor
popf
inc
and
popf
sti
mov
dec
outsb
stos
leave
mov
inc
into
aas
cltd
and
xchg
fmul
data16
int
dec
xchg
jne
lods
cmpsb
sbb
lret
icebp
out
or
clc
and
jg
push
xchg
push
scas
cmp
cmpsl
sahf
lret
repz
cltd
sub
outsb
mov
mov
repz
ja
rorl
jno
or
iret
pop
or
mov
push
out
shll
aas
push
mov
dec
imul
xor
lret
aas
xchg
ret
jb
dec
icebp
insl
repz
sbb
jb
cli
out
xchg
lret
fidivrs
pop
cmpsb
sbb
pop
mov
imul
lcall
xchg
cmpsl
sahf
cs
and
js
or
pop
mov
sbb
jl
sub
fdiv
inc
mov
xor
loopne
or
jge
int3
mov
mov
mov
loop
push
xchg
or
jp
push
sbb
cli
push
insl
aad
mov
aaa
xor
jp
xchg
inc
jbe
mov
dec
imul
mov
mov
push
jne
in
and
aam
sysret
sub
js
pop
mov
data16
pushf
stos
xchg
insb
out
int3
adc
stc
and
xor
test
scas
xchg
xchg
cmpsb
gs
or
flds
divl
mov
ljmp
shll
mov
sub
daa
lods
inc
ret
sub
hlt
add
aaa
mov
imul
orl
imul
or
cmpsl
movsb
jmp
ret
cmpb
std
loop
lcall
and
int3
cmp
cmp
add
inc
mov
sub
jbe
mov
cmp
stos
nop
cmp
icebp
mov
pop
fistps
xchg
dec
jecxz
add
jp
repnz
into
loop
lock
fld
fdivrs
pop
lcall
notl
push
repz
enter
aaa
mov
shlb
mov
mov
mov
out
pop
mov
aas
add
je
fildl
xor
cmp
fcmovnbe
test
flds
add
inc
pop
je
cmp
jle
es
ja
stc
dec
dec
fwait
bound
out
ds
inc
mov
cmp
lock
in
hlt
loope
bound
dec
jp
fwait
int3
lret
mov
aaa
lods
pop
shrl
cmc
mov
push
add
les
mov
aaa
fists
nop
ja
dec
scas
sbbl
mov
push
mov
push
mov
xchg
mov
test
test
in
hlt
push
adc
arpl
pop
and
cli
fimull
mov
sub
repnz
and
jl
rcl
xlat
mov
jae
pop
jp
test
sahf
jmp
mov
ljmp
pop
dec
add
sbb
jne
rcl
sbb
push
mov
adcb
jne
cltd
test
outsl
and
sub
sahf
add
addr16
inc
mov
gs
jno
imul
stos
inc
mov
mov
fmuls
out
aaa
adc
inc
imul
jns
mov
je
or
mov
out
adc
rcrl
ds
subb
add
and
mov
inc
pop
mov
imul
xchg
cmpsb
ret
mov
or
push
mov
je
mov
cs
ss
sbb
aaa
add
jbe
xor
pop
test
dec
push
cmp
sub
loop
popa
test
stc
jae
call
outsb
fs
shlb
aam
ret
xchg
xor
add
fsub
inc
adc
mov
aas
adc
repz
adc
fsubrs
mov
jne
push
ljmp
rcrb
aaa
or
jge
adc
jae
popa
stos
push
mov
jnp
stos
sub
or
inc
mov
cltd
cld
test
int
icebp
xlat
fidivl
iret
cmc
lret
mov
jmp
adc
lahf
iret
loope
dec
cld
xchg
lock
sbb
mov
lods
inc
lret
fnstcw
or
int3
push
sub
sub
push
nop
jmp
dec
cmp
mov
jo
sub
push
inc
hlt
jbe
and
mov
outsb
jl
out
rorl
in
jnp
shlb
popf
cmpsb
ficoms
ret
cmp
cmp
pusha
push
jbe
andb
inc
add
outsb
pop
xlat
lcall
cmp
outsl
icebp
mov
push
fdivrp
fldcw
mov
jne
stc
xchg
dec
pushf
add
pop
jo
out
jbe
push
add
adc
inc
fld
dec
xor
and
and
mov
in
test
nop
push
rorb
and
shll
outsb
cmp
jge
jmp
xor
adc
mov
in
fnstsw
cld
pop
jno
xchg
aas
enter
sub
cmp
mov
lds
and
cs
xchg
push
jle
fstl
jl
ss
xchg
pop
pop
dec
xchg
orb
xchg
inc
dec
dec
dec
icebp
sbb
inc
jb
cmp
aaa
mov
cmp
dec
cmpsl
leave
data16
push
jecxz
mov
push
out
add
push
or
in
pusha
xchg
fmul
iret
repnz
stos
int3
push
xor
push
dec
iret
cmpsb
mov
out
inc
int3
cmp
mov
cmc
in
neg
dec
sbb
int
icebp
push
call
jmp
out
aad
jno
ja
adc
sahf
sbb
rcl
xor
add
les
dec
mov
pop
loop
xor
push
lret
or
imul
lock
cmp
es
xchg
loope
adc
lock
aaa
shl
xor
mov
ret
stos
mov
jbe
filds
mov
sbb
insb
in
in
fsubs
dec
jns
jbe
or
jae
adc
jo
into
push
jl
mov
push
mov
add
xchg
xchg
lcall
loopne
inc
push
adc
or
sub
adc
add
scas
jbe
jl
mov
imul
mov
out
jg
outsb
jecxz
cmp
lock
sub
ret
daa
jmp
aas
pushf
hlt
xchg
xchg
ret
shll
inc
mov
mov
insl
cmp
adc
sub
mov
aam
dec
out
mov
lods
mov
into
repz
mov
scas
xchg
add
cmp
insl
test
mov
pop
movsl
xchg
je
lock
out
lret
jle
inc
mov
sahf
cmp
pop
stos
inc
in
xor
pop
or
sub
scas
ljmp
popf
iret
dec
pop
lods
jbe
xor
pop
and
test
mov
rcr
dec
jo
and
aas
ds
mov
push
test
jl
mov
iret
jg
push
sub
dec
add
jge
incl
push
jno
lcall
and
hlt
pop
shrb
dec
adc
push
push
js
notl
out
js
repz
outsl
stc
add
mov
and
jbe
out
stc
cmp
fimull
lahf
push
stos
push
jl
jns
mov
sub
mov
movsb
cmpsb
insl
repnz
pop
out
hlt
fs
xchg
fdivp
ds
inc
int3
push
je
movsl
jo
pusha
adc
cmp
adc
add
mov
popl
aaa
enter
push
ljmp
mov
rcr
shl
jo
daa
push
shlb
mov
add
and
imul
aad
jmp
xchg
jg
data16
fs
mov
nop
sbb
mov
orb
lods
sbb
sub
pop
insl
sbb
sub
pop
sbb
mov
lcall
jge
aad
sub
jb
dec
cld
pop
jno
pusha
push
inc
xchg
orb
add
and
cltd
dec
ss
rcrl
jle
push
fldenv
in
lret
insb
cmpsl
call
pop
adc
lcall
scas
or
jo
int
insl
mov
in
sarb
and
xchg
repz
orl
dec
jecxz
lret
cmc
incl
jnp
insl
jecxz
add
cmpsl
xlat
mov
nop
mov
xor
bound
mov
ljmp
xor
scas
mov
negl
add
xor
sub
clc
js
aam
mov
xor
insb
dec
sbb
inc
pop
push
vaddss
fs
mov
rcr
cwtl
je
jecxz
pop
add
mov
push
push
adc
bound
outsb
cmp
nopl
outsl
sub
jle
jne
adc
jns
out
or
mov
mov
sahf
ret
and
dec
inc
popa
add
decl
ss
xchg
es
std
cs
jae
sub
pusha
in
out
jp
fadds
cmp
fsubp
dec
jmp
mov
fimuls
jbe
sbb
add
mov
loop
pop
fstps
jg
sbb
mov
lcall
popf
repnz
stos
push
mov
pusha
jl
fucom
lds
enter
sar
vandnps
ret
repnz
cltd
mov
out
adc
popa
mov
cmc
lods
mov
fidivrl
roll
fucomp
jmp
stos
dec
push
or
call
out
xlat
push
insb
push
jg
lret
call
and
push
pop
lcall
mov
sar
cltd
in
jne
test
inc
push
movsb
sub
sar
adc
jg
shlb
dec
and
scas
xor
iret
negl
push
pop
adc
and
cli
push
sarl
pop
inc
add
shrl
int
push
xor
or
push
dec
add
push
mov
iret
aam
pop
inc
test
insb
xorl
jl
fldl
test
bound
jb
sbb
inc
neg
mov
mov
arpl
pop
jnp
sahf
repz
dec
test
mov
push
loope
lahf
xor
pusha
sbb
cwtl
pop
and
sub
cs
mov
cwtl
jp
lds
mov
pop
xchg
pop
push
out
lahf
sub
outsl
hlt
test
enter
mov
shrl
ss
jl
dec
xlat
repz
mov
cli
adc
int
jno
sub
aas
xor
add
mov
push
shlb
loop
negb
scas
jo
mov
dec
jo
inc
push
shr
add
pop
in
add
adc
lret
lods
push
mov
fiaddl
fdiv
ss
mov
in
mov
mov
or
or
xlat
pop
mov
dec
mov
test
jb
rcl
movsb
or
enter
mov
xor
xor
jge
mov
sbbl
aam
push
lcall
mov
mov
jbe
cmp
xor
cli
sub
std
add
add
push
sub
cs
or
or
jnp
mov
xchg
dec
xorl
inc
xchg
dec
xchg
shrl
icebp
test
out
out
or
push
inc
aaa
fstpt
out
dec
dec
in
mov
lahf
push
mov
icebp
jecxz
adc
lret
jmp
dec
rep
xlat
loop
aad
sbb
aam
xor
jmp
inc
jge
enter
fcoml
outsl
or
leave
mov
movsl
push
adc
pop
jo
sbbl
jne
test
arpl
lret
sahf
sub
cmc
xor
inc
clc
and
sub
test
inc
sub
les
mov
push
lcall
mov
cmpsl
mov
jnp
jecxz
jge
mov
jge
and
pushf
cld
push
test
std
xorb
inc
mov
dec
dec
out
dec
pop
xor
mov
les
test
loopne
ja
shrb
dec
mov
adc
popl
inc
jle
inc
mov
xor
jb
stos
or
mov
jne,pt
mov
mov
dec
xchg
leave
fwait
test
add
cs
push
fwait
xor
cwtl
imul
mov
mov
sbb
fistpl
shl
es
xchg
lock
push
loopne
movsb
lahf
fisttpll
data16
loop
xchg
nop
xchg
lds
hlt
dec
mov
mov
aas
push
iret
loopne
xor
test
subb
in
imul
mov
shrb
pop
shr
cmp
pop
jno
pop
mov
sbb
sbb
pop
push
int
pop
or
shrb
je
jae
xchg
lods
pushf
dec
or
xchg
dec
call
jle
ret
inc
lahf
repz
shll
jnp
cld
mov
nop
mov
and
or
mov
sub
mov
sub
or
fildl
sub
xor
push
push
aas
loope
iret
xorl
push
cmp
gs
adc
mov
or
popf
pop
jns
pop
jmp
scas
stos
out
cmc
pop
sub
and
jecxz
aaa
mov
inc
mov
xchg
pop
push
mov
clc
mov
dec
nop
aas
outsb
in
repnz
js
das
and
or
sbb
cltd
pop
jmp
jecxz
xchg
dec
mov
dec
push
rorl
mov
jle
sbb
cs
mov
js
call
mov
add
mov
mov
jne
fstl
adc
adc
and
out
sub
lods
and
out
jnp
jecxz
inc
lods
icebp
movsl
sub
mov
push
mov
addr16
fcmove
addl
add
jns
stos
push
daa
mov
scas
adc
ss
jno
inc
adc
pop
rolb
mov
lea
sub
lret
ret
cs
repz
movsl
lods
fbld
out
jae
fldcw
sbb
js
pop
mov
lret
cmpsb
lods
stos
aad
jns
std
add
and
in
es
rcrb
fwait
cmc
or
fsubrp
mov
sub
pop
jnp
mov
dec
xchg
inc
add
shll
inc
mov
je
iret
push
daa
xor
lods
jne
pop
test
jp
mov
and
popf
xlat
xchg
sbb
aaa
out
sub
arpl
push
repz
jp
adc
pop
je
dec
cmpsb
loope
and
stc
mov
pop
neg
roll
sbb
cli
or
mov
sub
pop
mov
aam
inc
lret
inc
cltd
jb
mov
ljmp
sub
xor
ret
pusha
mov
push
jmp
inc
dec
jae
out
lret
adc
mov
daa
push
movsl
insb
fdivl
mov
clc
movzwl
xor
lahf
hlt
imul
fildl
xor
cltd
imull
mov
cwtl
jno
sbb
pop
shr
fimuls
cs
in
push
fmuls
test
xchg
mov
add
adc
cmpsb
pop
push
xor
jae
out
sub
push
xchg
sti
and
int3
mov
pop
pushf
mov
jmp
adc
sbb
jmp
lret
add
into
push
jbe
js
cmp
pusha
scas
xchg
jecxz
lcall
mov
pop
mov
or
in
movsl
push
cmp
bound
or
inc
xor
pop
cmp
subl
adc
push
add
cmp
cmpsl
xchg
mov
jge
dec
push
jl
mov
mov
test
sbb
xor
pop
sbb
and
in
rcrb
outsb
push
inc
pop
cmp
and
insl
push
push
test
lahf
and
je
pop
into
ret
dec
push
push
or
and
or
repz
and
mov
int
cs
stos
test
inc
xorl
cmp
rolb
adc
xor
sbb
or
pop
jo
hlt
or
shr
rclb
loope
sbb
out
test
inc
push
xchg
xchg
aaa
inc
ret
inc
out
int3
fstpt
push
push
aas
add
mov
popa
xor
enter
or
xor
cmp
mov
arpl
pop
pop
popa
push
dec
jae
test
hlt
loopne
xchg
cld
jl
shll
pop
arpl
repnz
cwtl
jne
lahf
xchg
int
test
sahf
mov
mov
mov
repnz
fstpt
addl
cmp
ret
xor
add
nop
cltd
gs
push
add
ja
mov
or
sti
push
pushf
fsts
sbb
ljmp
add
arpl
gs
push
inc
mov
add
sub
mov
leave
xchg
cmp
dec
data16
shr
and
fs
inc
adc
ret
xchg
jp
or
lcall
sub
lods
adc
adc
jne
stos
std
mov
dec
aaa
sbb
addb
or
movsb
scas
or
jb
loop
pop
dec
iret
pop
sbb
sub
push
jo
jge
loop
xor
ja
mulb
loop
rclb
das
repz
push
in
and
push
jecxz
addr16
out
mov
faddl
gs
test
repz
jmp
xor
mov
cmp
hlt
outsb
testl
adc
xchg
js
arpl
jp,pn
jo
shll
xor
adc
sbb
lret
dec
sbb
pop
leave
and
outsb
mov
and
mov
pop
mov
xchg
sub
xor
lods
sti
and
dec
test
mov
stos
je
rorb
add
mov
test
and
and
pop
shlb
in
cmp
xor
push
subb
add
or
dec
push
cmp
adc
fisubl
aas
inc
mov
ljmp
push
outsl
cltd
push
sahf
mov
cli
mov
int
in
cmp
pop
je
aaa
repz
lahf
mov
int
or
adc
fwait
or
inc
repnz
sbb
push
sbb
int3
jp
leave
push
popa
xor
and
lret
sub
cmp
jmp
cltd
cmp
and
xchg
jecxz
push
xchg
mov
xor
and
jmp
gs
pop
popa
lods
push
lods
fwait
inc
popf
je
mov
mov
popf
mov
sbb
outsb
pop
and
arpl
mov
dec
cmc
jo
mov
jmp
loopne
movsb
and
dec
cmc
xchg
jecxz
or
lret
dec
mov
in
and
sbb
and
lods
andl
dec
or
mov
push
jle
sub
inc
sarb
mov
and
xchg
push
imul
pop
insb
cli
mov
and
pop
xlat
nop
sbb
les
jnp
cmp
out
cld
sbb
shrl
sbb
inc
imul
mov
test
xor
iret
and
sub
fnstsw
mov
or
jmp
stos
push
mov
cmpsb
push
lds
push
push
and
lret
in
mov
push
stos
out
mov
cmp
dec
dec
jo
roll
cmp
mov
inc
push
inc
adc
scas
les
cwtl
adc
dec
lret
jl
jle
or
cmp
xor
jge
dec
aam
pop
dec
and
pop
adc
int3
push
outsl
pop
sub
loop
jno
mov
jg
inc
sub
add
jmp
push
rcll
xchg
jecxz
or
fbld
sub
out
ds
negl
xorl
mov
pop
fwait
push
addr16
sti
popa
push
adcb
loopne
lods
lahf
cwtl
or
repnz
inc
jne
addr16
push
out
and
push
repz
lods
imul
aam
push
cmpsl
test
outsl
loop
mov
dec
ja
or
mov
adc
mov
int3
mov
dec
jmp
lcall
inc
orl
sbb
outsb
inc
in
bound
je
xor
loopne
pop
test
cmp
add
daa
pop
xor
add
mov
or
push
out
scas
jno
jno
es
xchg
mov
stos
xchg
mov
mov
and
mov
sub
popa
test
push
loop
push
ds
lret
nop
test
xchg
ficoms
jle
mov
arpl
out
pop
sub
inc
rorb
rclb
outsb
es
adc
popa
mov
sahf
sub
imul
xchg
fimull
dec
lds
xor
mov
xchg
out
lret
fisttpl
mov
push
in
add
in
add
in
and
sti
repz
sub
in
sub
push
jmp
outsl
adcl
fiaddl
dec
cmc
and
ja
or
in
sbb
or
mov
jnp
test
outsl
push
inc
mov
sub
fildl
rclb
adc
mov
jnp
pushf
pop
push
pop
cmp
pop
mov
or
fisubs
push
inc
dec
jne
jle
roll
cmpsb
test
in
and
repz
out
negl
mov
adc
int3
in
int
lret
jno
push
and
cmc
popa
outsl
leave
sti
pop
add
imul
cmp
push
add
sbb
jae
push
insb
imul
mov
xchg
dec
fstl
mov
sbb
fwait
cli
daa
test
xchg
enter
stos
mov
jg
push
leave
push
cmp
and
dec
loope
sahf
andl
in
lock
inc
mov
jmp
outsl
xlat
fwait
lea
jg
mov
push
xlat
femms
adc
je
dec
xor
push
sti
mov
pop
movsl
push
push
lcall
inc
fxch
mov
popa
mov
jne
data16
daa
push
subl
lods
fistpll
out
sub
xor
xchg
hlt
xchg
jnp
arpl
pop
mov
cs
fdivp
jb
mov
out
sbb
sbb
lret
lahf
frstor
add
cmpsb
cmpsl
add
sbb
cli
pop
dec
mov
lods
seta
bound
adcl
cmp
cli
insl
repz
lods
mov
clc
out
inc
mov
inc
andb
xchg
mov
aaa
arpl
sbb
repnz
xor
nop
outsl
mov
mov
pusha
xchg
add
stos
int3
or
in
inc
adc
das
stos
pop
fwait
aam
push
inc
movb
jne
mov
xor
xchg
out
cltd
push
cmp
or
adc
stos
sub
sub
or
push
and
mov
sbb
ret
repnz
out
push
jne
mov
test
fs
sbb
adc
and
shl
xchg
jnp
aaa
push
std
cmp
xor
ja
xchg
mov
lret
adc
in
je
int3
int3
iret
xchg
jl
mov
sti
pop
out
pushf
cmp
pusha
enter
push
es
shl
or
cld
iret
adc
or
adcw
shr
push
jl
sub
cltd
add
mov
sbb
lods
lret
fists
call
stos
outsb
xor
dec
mov
stc
test
pop
mov
lods
sub
aaa
stos
test
call
push
mov
ja
call
sbb
mov
xor
sbb
in
les
push
jl
jmp
adc
sub
mov
shlb
jle
mov
popf
xor
add
push
dec
xchg
sbb
or
pop
sbb
pop
aad
cmp
test
lcall
lahf
adc
adc
cmp
pop
ret
add
or
adc
daa
and
das
xchg
xchg
cld
aad
push
push
pop
outsl
cli
stos
insl
push
jge
add
cli
or
sub
sahf
ds
lahf
jmp
stc
inc
inc
mov
fistl
inc
loopne
aad
inc
in
arpl
mov
jae
and
and
mov
outsl
fldt
fwait
hlt
test
and
xor
int3
dec
cmp
in
xor
dec
jge
aas
test
and
out
lea
pushf
push
lcall
mov
gs
scas
pop
in
out
add
dec
adc
cmp
out
sub
push
dec
pop
and
arpl
jle
cwtl
xchg
ljmp
repnz
sub
dec
dec
lds
ds
sub
xchg
mov
pop
push
pop
fs
mov
iret
rolb
loopne
sti
mov
mov
push
push
fsubrp
scas
lret
pop
pop
inc
cmpl
loopne
fdivl
mov
jbe
les
loope
movsl
ret
movsl
orl
sub
mov
in
dec
lods
cld
ja
popa
lcall
cmpsl
adc
xlat
dec
stos
stc
test
test
add
pop
div
dec
mov
in
in
sub
clc
xchg
aad
and
xlat
xchg
dec
push
adc
mov
popfw
and
mov
xor
mov
lahf
fsts
data16
adc
fwait
lea
add
cmpsb
jnp,pn
cmp
outsb
std
lret
ljmp
test
xchg
fnsave
mov
add
es
fadds
sub
pusha
jo
arpl
cltd
out
jno
xor
xor
loope
out
daa
jmp
add
push
dec
push
mov
lods
dec
mov
xor
sahf
pop
sbb
cmp
jl
xchg
in
icebp
xchg
enter
jp
scas
out
jne
ret
add
dec
and
int3
jg
mov
dec
or
sub
aam
jmp
push
inc
dec
cmp
rorl
adc
cmp
jnp
adc
rclb
xor
jge
mov
adcb
cwtl
int3
out
mov
lret
nop
mov
mov
and
leave
lods
add
pop
inc
movups
pop
ljmp
xor
jns
insl
sub
mov
mov
mov
xor
cmpb
or
sub
repz
dec
adc
sahf
stos
inc
adc
xchg
add
inc
push
mov
insb
xor
mov
jl
out
loopne
jne
add
sbb
adc
jnp
out
pop
gs
loopne
push
pop
loop
jecxz
bound
lret
shl
adc
enter
int3
cmpxchg
cltd
cmp
inc
clc
lock
data16
loopne
rcll
dec
mov
shl
xchg
insb
or
adc
lret
push
pop
pop
push
xor
push
in
nop
sub
cld
movsb
fcoms
test
jg
sub
je
imul
popa
jo
push
inc
mov
xor
push
push
ret
mov
inc
sar
mov
shlb
lock
cltd
imul
fadd
mov
jle
out
mov
subb
add
jmp
test
jp
sbb
mov
sbb
add
jl
loope
out
dec
and
test
dec
loope
dec
adc
mov
ret
inc
mov
imul
sub
pop
xor
loopne
mov
aad
cli
lret
adc
xor
test
push
loopne
fstpt
and
mov
scas
iret
cmpl
mov
pop
mulb
gs
sbb
ds
dec
add
pop
imul
popf
jmp
mov
adcl
mov
scas
xor
into
or
cmc
and
and
arpl
imul
stos
imul
xchg
and
sub
pushf
mov
mov
xchg
add
data16
stos
scas
stos
imul
packuswb
sub
add
push
stos
add
sbb
mov
push
xor
stc
pop
outsb
cmp
faddp
jnp
push
push
ficoms
iret
pop
jo
ja
mov
pop
leave
sbb
and
aam
cli
iret
mov
adc
stos
lods
outsl
in
sub
lods
aam
call
push
in
add
push
out
inc
sbb
lods
mov
push
adc
push
pop
pop
and
ja
lahf
loope
fnstcw
ljmp
mov
inc
xor
sbb
xor
mov
es
push
adc
dec
jmp
mov
imul
mov
ljmp
pop
push
sub
mov
mov
inc
cmc
into
gs
lods
or
ljmp
int
int3
dec
shrb
mov
arpl
repnz
push
outsb
xor
cmpsb
sbb
mov
inc
sbb
dec
dec
dec
mov
pop
xor
fidivrl
or
pop
push
pop
jns
addl
mov
cmpsl
sbbl
repnz
pop
push
push
sbb
jp
adc
iretw
fsubrl
jecxz
mov
insb
fisubrs
pusha
into
aas
sbb
arpl
leave
sbb
int3
addr16
dec
in
rorb
fidivrl
sbb
mov
fcmovu
mov
xor
push
lds
pop
dec
int
insb
mov
push
mov
imul
mov
lahf
ret
cmp
inc
sti
movb
aaa
jno
xchg
cmp
push
leave
or
pop
outsl
int3
push
dec
mov
or
inc
mov
add
in
std
or
scas
push
mov
mov
int3
sub
cltd
jb
sti
cmp
stos
xor
and
mov
xor
push
loopne
fs
pop
mov
fsub
pcmpeqw
std
pop
adc
fs
bound
push
xchg
mov
mov
jecxz
cltd
into
jmp
pop
orl
cmp
inc
sbb
cmp
ret
aaa
fiadds
mov
cld
cmp
in
mov
mov
mov
push
in
inc
int3
loope
inc
sbb
orl
aam
and
jne
pop
adc
lret
out
std
adc
add
adc
adc
mov
jo
jb
or
gs
jb
adcl
movsl
pop
xor
jge
xchg
mov
or
push
sub
pop
das
pop
pop
xchg
jbe
push
xchg
lcall
addr16
push
xchg
shrb
cmp
jge
test
xor
mov
mov
es
jne
lret
lcall
mov
out
dec
jo
movsb
dec
mov
jb
pop
notb
jecxz
pop
call
mov
fs
dec
mov
adc
mov
xchg
lock
subl
fistpll
stc
sbb
mov
or
hlt
adc
js
inc
popa
dec
test
ja
rcrl
fists
sbb
aas
inc
fldcw
jb
push
and
test
xor
jmp
fisttpl
or
mov
add
into
add
fildll
fldenv
nop
shr
out
jae
xlat
in
push
mov
cltd
push
jns
js
dec
ret
mov
ret
and
inc
xor
jp
loopne
sub
cmc
mov
lock
xchg
cmc
xchg
bound
xchg
and
fildl
xchg
mov
negb
fisttpl
cld
jo
mov
daa
ja
jo
pop
adc
xchg
pop
mov
pop
outsb
mov
or
push
lods
lret
mov
nop
and
dec
cmp
sbb
cmp
test
xlat
push
leave
loope
cmp
cmp
cmp
mov
dec
inc
sti
adc
inc
cmp
and
jnp
int
addr16
ss
lods
repz
or
pop
or
and
sub
or
adc
cmp
repz
jmp
sbb
enter
adc
popf
add
in
je
dec
popa
push
mov
dec
lods
stos
data16
fisttps
popa
xchg
int
aam
mov
sbb
mov
into
iret
stc
negl
lret
sbb
stc
cmc
add
lret
dec
xor
xor
lret
dec
sbb
outsb
cmpl
ja
fs
mov
rorb
dec
pop
mov
fst
jno
out
cmpsl
and
lcall
jg
cmp
xchg
sub
dec
data16
cmp
fs
sub
shlb
jb
or
fimuls
push
loopne
arpl
mov
rolb
test
loope
inc
mov
mov
adc
dec
outsl
jne
xchg
jg
popa
popa
loopne
adc
stos
add
jae
cli
fmull
adc
fistps
shr
add
mov
cs
mov
loopne
xchg
out
xor
xor
in
in
fs
fcomps
mov
jae
bound
lods
movsb
cmp
push
dec
in
dec
or
andl
pop
shlb
movsb
jns
nop
xor
pop
in
pop
pop
jns
adc
stos
clc
popf
sarl
inc
mov
xchg
push
or
inc
ljmp
cmp
inc
mov
push
and
hlt
push
mov
dec
outsb
sbb
aam
pop
mov
cwtl
pop
cmp
dec
test
gs
inc
sub
mov
jg
fbld
scas
mov
je
pop
inc
xor
mov
cwtl
mov
mov
ljmp
mov
scas
cmp
aaa
ds
test
and
out
sbb
in
xor
and
clc
sbb
or
pop
push
loope
xchg
sahf
jecxz
std
cmp
fwait
inc
adc
xchg
inc
rcrl
sbb
cmpsb
or
mov
outsb
std
fdivs
jg
outsl
lods
sahf
in
sti
aam
dec
ljmp
push
xor
in
xchg
insl
jge
std
sbb
pop
hlt
push
gs
test
fsubrs
icebp
cmc
in
clc
pop
dec
sub
js
fwait
mov
sbb
movsl
dec
ja
rorl
out
insl
sbb
cmp
movsb
jge
sbbl
test
scas
xor
sub
sbb
int3
cmp
lret
rorl
inc
mov
aam
stos
out
inc
add
lret
pop
push
add
xor
rclb
mov
jno
pop
mov
sub
and
mov
and
out
xor
xchg
out
mov
clc
sarl
and
xchg
adc
es
pop
out
mov
sub
lea
sbb
jmp
and
call
push
adc
mov
adc
sahf
cmp
outsl
cli
mov
xchg
jb
jb
stos
adc
inc
pop
sub
shll
loop
jmp
sti
dec
popa
jo
cmc
jo
inc
out
in
inc
sti
movsl
lret
leave
lods
xor
test
push
mov
pushf
daa
ljmp
push
mov
sub
shl
dec
lret
fwait
int
pop
clc
and
divl
pusha
or
ds
mov
in
adc
adc
fsubl
mov
iret
test
stc
pop
mov
cmc
lret
cmc
inc
xchg
fwait
js
inc
test
cmp
daa
jb
push
orl
pop
mov
inc
out
loopne
loop
cmp
das
adc
jae
lahf
aas
cmp
or
in
jns
scas
sti
push
dec
sbb
ss
pop
pop
repz
pop
push
sbbl
xor
pusha
mov
into
lds
inc
sbb
mov
out
adc
pop
sub
in
xchg
jp
inc
inc
mov
mov
ret
add
mov
les
inc
out
ret
subb
sbb
arpl
mov
bound
ss
mov
dec
push
mov
dec
aad
lods
fmuls
mov
add
mov
mov
nop
mov
jno
adc
mov
jp
sub
jb
in
ds
out
inc
daa
pop
pop
sub
jne
sbb
mov
pop
push
mov
add
pop
inc
ds
mov
mov
push
out
push
fsubs
push
sub
jecxz
movsl
sbb
cmp
popf
mov
pop
push
mov
dec
or
dec
pop
jmp
imul
jge
in
arpl
stos
adc
mov
cmpsl
addl
inc
test
xchg
pop
adcb
push
imul
stos
aad
mov
fmull
xor
inc
adc
arpl
out
in
pop
aas
nop
mov
jg
dec
add
jge
movsl
mov
mov
inc
in
adc
jg
es
cmpl
fwait
dec
xor
aas
and
bswap
rolb
sbb
or
cltd
stc
inc
aas
sbb
stos
repnz
sbb
dec
and
loop
jmp
inc
or
insb
mov
popf
xchg
stc
into
sbb
dec
jo
fnsave
fbstp
fcoms
imul
aam
arpl
outsb
xchg
cltd
or
adc
dec
pop
jbe
or
imul
mov
sub
pop
add
mov
mov
cmp
pop
insl
int
pushl
sub
dec
into
cli
ret
mov
pop
mov
andl
sbb
cs
pop
fstpl
ror
sbb
pop
lret
or
ja
push
pop
mov
jae
in
jns
add
loope
fcmovnb
rorl
les
adc
mov
push
fsubs
cwtl
popf
mov
mov
popa
aas
add
push
jb
dec
pop
or
sti
das
cltd
push
lret
push
sub
add
add
int3
cmp
sbb
movsl
pop
cmp
push
test
jle
push
subb
outsl
mov
clc
sbb
jmp
xor
loop
jmp
imull
sahf
mov
rcr
lea
mov
nop
pusha
push
sarb
xchg
lods
xor
lock
add
into
scas
shl
cmc
jbe
fs
push
jl
jle
dec
add
popl
iret
lods
pop
mov
jo
mov
frstor
rcll
daa
adc
cmp
loop
pushf
jne
ja
mov
lcall
test
jl
pop
cmp
add
cltd
pop
sti
lret
insl
ret
insl
jge
decl
pusha
movsb
sub
mov
addb
iret
mov
add
imul
repnz
inc
sbb
lods
xchg
sar
clc
mov
pop
mov
push
inc
enter
sub
cwtl
push
loope
inc
cli
push
stos
add
loop
jecxz
sub
mov
adc
inc
push
inc
ljmp
dec
pop
add
imul
dec
es
push
and
xor
movsb
xchg
mov
loope
sti
test
arpl
in
jecxz
arpl
test
jbe
cld
mov
add
fwait
icebp
add
xor
sbb
adc
xchg
mull
sbb
xchg
ljmp
std
sub
iret
sbb
inc
lret
mov
lret
dec
sbb
mov
and
mov
popf
aaa
nop
xor
test
xchg
jmp
int
push
cmp
ss
mov
fildl
xchg
repz
push
ds
jnp
into
jmp
in
push
cmp
mov
mov
dec
js
xchg
orb
js
dec
imul
jnp
sbb
aaa
aad
out
flds
ja
sub
bound
cmp
es
imul
push
aam
push
adc
daa
inc
frstor
es
dec
and
adc
das
xchg
sub
cmp
into
fcmovnu
push
mov
cs
outsb
sbb
outsl
sti
cli
push
negl
fdiv
mov
ret
add
xchg
sbb
add
mov
scas
mov
mov
adc
ja
test
sbb
movsl
lret
icebp
sbb
mov
pop
mov
mov
push
jmp
xchg
in
outsb
test
cmp
pop
mov
leave
or
ret
ds
inc
arpl
jne
sar
ret
xchg
inc
rcrb
sbb
repnz
out
jne
mov
mov
loopne
inc
daa
imul
test
cltd
inc
adc
std
inc
mov
mov
xchg
and
fstl
pop
outsb
dec
aas
lcall
jae
pushf
out
sub
adc
pop
push
push
or
mov
aam
mov
push
imul
sahf
jns
add
fcompl
cmc
out
scas
lock
lret
cmc
stos
repz
mov
or
push
call
aaa
xor
inc
jo
repz
and
sbb
xor
pop
fwait
mov
adc
repz
xchg
and
pop
dec
adc
adc
jne
daa
stc
jb
mov
imul
cmpl
ds
xchg
jmp
inc
leave
out
out
data16
push
inc
dec
aaa
mov
mov
lret
xor
push
sbb
imul
addl
in
out
mov
sahf
fdivl
loop
iret
mov
jae
jmp
hlt
mov
mov
gs
scas
pusha
fisubrl
mov
adc
xor
cmp
call
fnsave
in
xchg
mov
movsl
inc
test
stc
jbe
fcmovb
pop
pop
add
or
pushl
mov
out
jmp
or
ljmp
jo
pop
xor
dec
add
int
mov
xchg
dec
mov
movsl
add
imul
mov
stc
cmp
lods
scas
mov
sub
jb
negl
inc
pop
fnstenv
mov
mov
xor
insb
out
pusha
push
iret
test
ret
loopne
mov
xchg
adc
sub
add
mov
or
cmp
test
mov
lods
repz
or
popa
dec
inc
outsl
mov
cmp
gs
fisubl
movsb
stos
ljmp
mov
xchg
mov
inc
les
ret
test
inc
adcb
or
or
loopne
enter
or
leave
sbb
cmc
push
adc
sbb
addr16
loope
rcr
aaa
mov
adc
push
popf
movsb
ljmp
or
aam
push
jmp
inc
js
adc
sbb
fisubs
push
fnsave
or
sbb
bound
jmp
in
mov
mov
sbb
leave
mov
movsb
push
lock
inc
push
leave
xor
int3
outsl
pop
addl
lcall
cmp
popa
shl
pop
in
adc
out
jge
mov
mov
pop
hlt
lds
clc
cld
iret
insb
into
pop
insl
leave
in
shlb
clc
iret
add
push
pop
jne
or
mov
aad
bound
mov
repnz
je
cmp
fmuls
sti
es
sbb
push
outsl
push
les
scas
push
xlat
lods
loope
cmpsb
pusha
add
dec
rorl
mov
fadd
pusha
add
loop
mov
mov
mov
aad
xor
mov
push
sbb
pop
leave
scas
cmp
leave
push
xchg
mul
jp
mov
xchg
outsl
push
dec
adc
mov
sub
mov
mov
mov
rolb
mov
les
mov
insl
add
add
andps
jno
sub
repnz
insl
push
inc
push
sahf
cmpb
adc
ret
mov
or
xchg
std
xchg
fistpll
xor
push
cltd
pop
out
mov
mov
and
rolb
inc
scas
cwtl
fnstsw
dec
outsl
sub
add
movsl
out
and
std
inc
test
mov
ror
inc
jl
mov
cmp
repz
dec
xor
jg
mov
pop
inc
jo
jae
and
jl
and
cli
std
fwait
cltd
lret
inc
leave
sbb
mov
inc
repz
mov
test
shll
mov
fstp
pop
or
mov
mov
push
jl
and
stos
push
cltd
mov
and
inc
aam
test
int
inc
xchg
lahf
ljmp
mov
aam
jmp
fs
iret
lods
dec
ja
movsl
decb
mov
call
mov
inc
push
cmp
push
fldl
pop
mov
in
mov
mov
cld
pop
repnz
arpl
sbb
rorl
ljmp
popw
sbb
inc
clc
int
jae
dec
cmpsl
fstpl
inc
dec
and
push
test
test
jo
mov
std
daa
stos
popw
mov
add
inc
cmpsb
or
fistpl
gs
sub
sbb
std
fwait
jb
and
xchg
cmc
rolb
jnp
repnz
mov
sub
adc
and
std
xchg
in
scas
stos
sbb
cmc
out
hlt
in
pop
mov
das
js
push
and
jecxz
into
jns
cwtl
push
xor
iret
pop
repnz
adc
xchg
dec
dec
push
popf
inc
pop
push
fs
dec
pop
jb
psllq
into
shll
inc
jns
jle
push
das
dec
sub
cs
mov
cli
stc
out
into
xchg
jp
push
aas
lods
cltd
lods
arpl
dec
adc
iret
or
cmp
in
mov
scas
pushf
jae,pt
inc
cmpl
dec
nop
pop
mov
mov
cwtl
repnz
push
outsl
scas
cmpsb
nop
xor
xor
hlt
or
add
jmp
int3
out
sti
ja
outsl
mov
pop
cld
or
cmpb
xor
lods
sbb
shl
cltd
cmc
pop
neg
fdivrl
test
push
out
or
and
icebp
rclb
aam
cmp
mov
bound
mov
pusha
cmp
cltd
rcll
jg
jbe
xor
xor
test
mov
jg
daa
jne
sub
lods
cwtl
loope
push
adc
repz
or
adcl
fwait
pop
cmp
jbe
cmpsb
push
xchg
dec
cmp
lcall
mov
xchg
pop
mov
pop
cmpsb
test
std
mov
adc
dec
mov
out
sub
push
sbbl
pop
popf
cmp
pop
je
enter
fidivs
pop
in
mov
stos
jmp
and
push
xchg
inc
std
or
in
dec
mull
jecxz
dec
dec
mov
mov
push
pop
sub
shrd
insl
mov
sbb
mov
pop
and
movsl
cmp
sbb
lahf
repz
inc
and
fisubrs
sub
jp
push
pop
int
imul
cvtdq2ps
aas
subb
in
in
add
movsl
xor
pop
mov
test
enter
shlb
inc
mov
xchg
xor
js
lea
adc
lds
sub
insl
dec
mov
shlb
jns
and
mov
and
je
xchg
ja
loop
cli
ja
and
mov
ret
or
add
mov
xor
adc
loope
jecxz
cmpsl
push
mov
ret
push
aad
inc
adc
lret
ret
outsb
rcr
cmp
test
imul
jp
dec
inc
and
or
xchg
jp
fimuls
nop
mov
dec
adc
icebp
mov
adc
jmp
mov
js
in
mov
in
sbb
cmp
or
int
hlt
leave
cltd
xchg
and
cmp
icebp
aas
push
mov
cmp
idivl
cwtl
and
pop
or
inc
xchg
rep
sbb
ret
add
push
push
std
stos
stc
or
dec
fildl
dec
and
mov
dec
or
and
xchg
enter
lret
push
xor
mov
add
clc
pop
sbb
push
mov
mov
or
xor
stos
enter
inc
xchg
das
fdivs
push
jp
and
pop
jae
lret
pop
jb
pop
fistl
inc
xchg
jp
lea
xchg
xchg
int
sahf
cmpsb
jp
sbb
clc
addr16
fwait
push
or
arpl
stc
adc
adc
push
lcall
or
rcrl
cli
repz
and
clc
dec
in
aas
mov
and
mov
popf
je
call
ret
add
ss
add
adc
testl
int3
sub
push
adc
jmp
outsb
test
fidivs
shlb
popa
add
mov
xchg
mov
mov
and
inc
incb
mov
lods
mov
ret
push
or
js
dec
cltd
inc
mov
inc
xor
mov
and
daa
xchg
sub
in
xor
fstpl
add
popa
and
fdivr
scas
xchg
adc
pop
mov
outsb
sub
add
and
adc
mov
fcomi
jns
push
xchg
lock
arpl
shl
pusha
dec
xor
mov
dec
pop
cmpsl
repnz
or
push
pop
cli
mov
push
int
xor
ljmp
dec
loope
std
and
sub
testb
pop
jb
out
dec
push
ds
sahf
in
or
fcoms
int3
sti
rorb
lret
popa
sub
push
mov
cmpl
push
je
sti
or
pop
dec
adc
dec
dec
mov
mov
inc
fwait
imul
adc
push
je
sahf
add
push
bound
jl
jo
and
and
pop
mov
jg
lock
lret
dec
xlat
out
mov
inc
or
sub
movsb
fstpl
loopne
dec
pop
out
mov
ja
jp
xchg
xchg
inc
imull
mov
into
lea
jno
xchg
pop
dec
lahf
lds
jle
xchg
fs
mov
pop
cltd
ds
mov
mov
jmp
sbb
iret
adc
test
adcb
pop
dec
ret
mov
std
clc
movsb
or
and
hlt
cmp
pop
test
xchg
test
mov
rolb
pop
idivb
push
mov
add
adc
insl
add
loopne
das
push
pop
mov
sub
dec
into
or
mov
xchg
je
xchg
lods
push
fistpl
inc
sbb
jb
jae
addr16
shrb
xor
add
test
lods
cmp
fxch
mov
fstps
je
fimull
sbb
xlat
jmp
test
push
pop
pop
cmp
rcll
sub
or
push
das
sub
pop
sbb
ret
cld
loop
cmp
out
lods
lods
and
inc
out
jl
lcall
cmpsl
shll
adc
decb
jmp
mov
rcrl
adc
shrl
mov
sahf
sbb
sbb
jnp
aaa
fs
pop
xlat
jae
add
cs
inc
xchg
mov
lods
cmp
jns
popa
xchg
inc
fwait
pop
fwait
roll
adc
xchg
add
js
push
mov
pop
loope
daa
dec
xor
dec
inc
xchg
push
pop
mov
cld
inc
dec
lret
pushf
mov
add
loop
outsl
fcom
loop
sbb
sub
out
enter
fsubs
cmpsl
rcl
pop
dec
xor
sti
xchg
sub
pop
adc
dec
xchg
inc
aaa
push
dec
mov
flds
push
mov
inc
sub
pop
inc
in
movsl
xor
xorb
sub
shll
fcompl
or
xchg
scas
out
mov
and
add
mov
mov
inc
fists
out
test
xchg
sbb
xor
into
enter
outsl
push
std
aam
wbinvd
rcr
out
call
popf
mov
int
add
xor
push
jae
pop
push
mov
mov
mov
insb
fiaddl
adc
pop
adc
in
inc
clc
push
sbb
pop
sbb
xor
arpl
out
cmp
add
sbb
mov
mov
jg
fwait
dec
test
out
dec
sub
inc
mov
daa
lea
inc
sbb
stc
ret
sbb
fcomps
dec
sahf
lods
mov
out
scas
sbb
mov
pop
mov
mov
cld
adc
xor
mov
fildl
sbb
push
lahf
xor
jge
arpl
aad
ss
pop
inc
das
push
dec
or
out
mov
jecxz
testl
fiadds
lahf
mov
xchg
add
cmp
push
lcall
or
popf
push
out
sahf
fadds
xorb
mov
in
inc
popf
xor
xchg
ds
in
xor
inc
cs
or
pusha
mov
xchg
repz
dec
outsl
sbb
addr16
aam
inc
rcrb
lods
cltd
pop
aad
dec
icebp
xor
sahf
sbb
sahf
push
in
sbb
push
mov
sbb
jo
dec
cmp
jle
push
mov
xor
mov
pusha
mov
stos
rolb
rcrb
fwait
xchg
and
xor
adc
ret
jne
push
pop
fsubrp
or
lock
sarl
xor
es
mov
add
test
dec
shrb
push
movsl
ds
lods
pop
mov
xchg
jbe
loop
mov
mov
mov
xchg
loope
ja
push
aaa
shl
xchg
inc
mov
dec
insl
fdivrl
dec
push
sub
inc
scas
push
xlat
xchg
jns
loope
fcmovnu
mov
lahf
imul
sub
inc
ljmp
add
testl
mov
in
addr16
addb
scas
ljmp
cmp
adc
repnz
and
mov
stc
and
int3
out
lret
push
rclb
mov
mov
sub
std
in
and
lcall
mov
mov
mov
out
adc
or
inc
mov
push
in
sbb
push
lods
loop
mov
jnp
adc
cmp
dec
add
cwtl
movsl
jp
fs
or
pusha
not
sbb
fstpl
lahf
pop
pop
cli
movsl
mov
push
ja
fsubrl
pop
jb
movsb
inc
out
je
push
or
inc
cs
js
push
ds
push
int
icebp
es
cmp
xchg
sbb
test
lods
dec
ljmp
push
add
lock
shll
or
cmc
push
movsb
and
fs
das
inc
outsb
pop
xchg
cli
test
cmc
inc
in
xor
sbb
adc
pushf
cmpsb
inc
imulb
adc
loop
mov
push
add
push
aaa
not
sbb
fists
xor
mov
es
sbb
adc
jecxz
jle
add
adcb
and
lods
jle
aad
cld
cs
std
mov
into
out
xchg
cmp
mov
sub
ljmp
and
sub
push
aaa
cmpsw
jg
scas
mov
inc
inc
and
test
xchg
sub
cmpsl
adc
mov
addl
xchg
add
aaa
pop
sub
ret
sub
icebp
sahf
cmp
andl
cmp
and
cmp
jbe
sti
js
sub
lods
mov
cmp
unpckhps
arpl
sub
ss
xor
or
lods
sbb
mov
adc
fimuls
stos
icebp
cwtl
aas
mov
or
mov
popa
rclb
sub
mov
and
test
in
xor
push
popa
add
pusha
andb
adc
outsb
sub
mov
test
xor
rcl
fmuls
dec
sub
sub
adc
mov
sbb
test
loop
push
jecxz
aas
or
xorb
jne
cs
testl
seto
cmpsl
ret
lds
scas
cmp
xlat
in
or
je
xchg
clc
or
dec
cmp
and
cli
out
repnz
lea
dec
ja
rcll
sub
add
cld
mov
rcrl
jg
dec
xchg
cmp
pop
rcll
insb
sbb
inc
sbb
xor
test
cmp
lcall
cmc
imul
jne
pusha
mov
mov
jae
ret
xor
jge
cld
fstps
ljmp
dec
xor
jo
fsts
inc
xorl
aam
or
dec
and
push
inc
and
jno
clc
push
cmp
mov
rorb
mov
inc
fs
inc
mov
movsb
pop
insb
stos
mov
pop
push
mov
mov
es
cmp
and
mov
in
jp
mov
mov
inc
in
cmp
xor
negb
xorl
xchg
and
add
pop
jge
gs
inc
stos
jl
or
outsb
mov
cltd
daa
pop
pop
leave
out
fwait
test
lock
jmp
leave
mov
sbb
pop
inc
add
pop
push
cmpsb
mov
pop
jnp
loope
sti
dec
in
push
ss
outsb
popf
outsl
test
mov
push
pop
loop
mov
pushf
loop
repz
mov
mov
mov
test
int3
ja
mov
insl
sbb
lea
loop
mov
jno
ss
pop
add
ret
sub
and
call
cmp
cmp
or
and
jecxz
in
push
outsb
xchg
xor
imul
leave
lods
fnsetpm(287
push
mov
in
push
mov
push
sbb
data16
daa
push
popf
inc
imul
jbe
mov
mov
mov
push
sub
idiv
movsb
cmp
and
pop
push
aaa
jno
gs
push
shl
mov
xor
cltd
xchg
push
inc
xchg
push
adc
addr16
pop
rclb
cmp
push
pop
inc
popf
push
out
dec
daa
ljmp
sub
mov
add
imul
stos
mov
enter
ds
scas
imul
loope
sahf
cmpsb
sar
in
pusha
and
js
xchg
cmp
icebp
mov
flds
sbb
andl
or
mov
in
aad
out
mov
cmp
jmp
cmp
cwtl
sti
scas
xchg
dec
push
cmp
std
ljmp
xor
cmp
add
cmp
mov
clc
iret
mov
es
or
mov
sbb
jmp
dec
in
sub
sbb
cltd
jae
cmpsl
add
and
cmp
cwtl
cmp
push
adc
jbe
push
scas
jge
xlat
inc
adc
push
leave
in
mov
mov
or
int
stos
push
sarl
xchg
mov
sub
sub
mov
mov
movl
mov
jns
inc
pop
mov
pop
push
inc
xchg
lods
imul
sbb
adc
movsl
sbb
jg
cmp
jne
mov
out
sarl
adc
jns
jle
ret
xchg
cmpsb
ja
sbb
std
lret
in
cmp
jmp
jnp
jle
test
xlat
jge
mov
dec
lock
mov
mov
mov
in
nop
adc
jns
adc
repnz
push
adc
xchg
roll
sti
repnz
pop
dec
and
pop
mov
xor
and
pop
mov
sbb
cmp
shrl
inc
in
cmpsb
data16
fdivrl
fbld
dec
shll
imul
jno
pop
jl
insb
insb
jl
add
outsb
pusha
in
testw
pushf
test
sbb
movsl
add
mov
pusha
push
add
push
cli
jecxz
js
cltd
out
sbb
xor
and
cmpsl
adc
adc
mov
push
mov
sbb
xchg
sbb
fucomp
or
jno
lea
inc
cs
shlb
mov
in
fwait
je
xchg
jl
adc
inc
add
push
enter
pop
popf
push
mov
dec
jl
int3
insb
pop
icebp
dec
aam
scas
repnz
outsb
fwait
inc
xor
mov
jmp
out
sarl
mov
icebp
frstor
push
push
stos
pandn
arpl
loopne
rcl
sbb
push
ds
stos
sti
les
repnz
mov
xchg
test
pop
dec
dec
jb
dec
jnp
cs
insb
xor
movsb
pop
push
daa
aad
ja
mov
insl
jo
arpl
push
add
sbb
dec
push
cmp
fildll
in
mov
imul
pop
pushl
jnp
in
movsl
cmp
sbb
decl
cmp
das
daa
shll
sahf
push
out
cmp
inc
cld
loope
mov
cmp
adc
mov
mov
push
sub
xchg
repnz
sbb
dec
mov
dec
leave
rcll
mov
inc
dec
xor
shl
add
and
mov
mov
dec
cmp
adc
cmp
pop
in
mov
ret
or
and
add
imul
dec
cmp
movsl
outsb
out
sarl
jb
int3
mov
dec
adc
shll
divl
out
pop
mov
shl
imul
pop
insb
es
sub
push
and
mov
dec
in
adc
ljmp
pusha
mov
or
test
jb
bound
int
inc
orb
dec
jnp
cld
insb
jge
movsl
mov
popf
pop
aas
ret
inc
dec
add
out
lcall
cmpsl
inc
dec
cmpsl
xchg
mov
cltd
xchg
adc
and
sbb
cmp
push
dec
inc
out
rclb
sub
lret
mov
push
out
sti
add
dec
lret
push
cmp
cmp
aam
hlt
cmpsb
lahf
les
and
loopne
sahf
inc
xchg
mov
mov
xchg
xchg
add
nop
mov
xor
sub
outsl
or
push
fadds
jo
push
adc
pop
sbb
ds
jb
xchg
push
pop
ja
lea
and
jnp
jae
addr16
inc
sbb
push
cmp
jecxz
cmp
cli
jns
jmp
mov
sub
or
add
jo
inc
xlat
mov
sarl
push
dec
cmp
mov
fmull
mov
dec
sub
inc
cltd
stos
divb
xchg
jae
jmp
push
xchg
mov
xchg
imul
std
inc
mov
mov
push
fsubs
pop
ret
fsubp
xchg
in
cmp
js
rcll
xor
pusha
adc
movl
repnz
or
mov
fmul
jle
sub
jae
cmp
cli
mov
jge
pop
pop
xor
xchg
and
es
test
repnz
cmpsl
sbb
test
inc
jle
addr16
sbb
inc
fcomp
pop
nop
call
ret
or
in
das
clc
jl
mov
or
ret
roll
out
and
in
inc
or
daa
push
popa
push
aas
mov
push
mov
jp
mov
ret
fnstcw
shr
cmp
sbbb
je
loopne
push
fwait
cmp
cmp
pushf
mov
mov
clc
ret
cld
sti
xchg
rol
repz
scas
mov
divb
aas
dec
pop
dec
pop
sbb
mov
sub
jno
bound
mov
loopne
jbe
inc
test
mov
pusha
inc
repnz
xchg
dec
rcrl
inc
xchg
aas
sahf
lea
adc
inc
lock
rorb
sbb
inc
insb
fsubl
sahf
jno
in
mov
and
adc
add
fisubs
or
inc
cmp
out
cli
rorb
xor
sub
pop
xor
xor
or
cmp
mov
or
and
pop
push
pop
mov
stos
icebp
pop
dec
test
mov
xchg
jae
xchg
cmp
nop
inc
pop
push
test
cmp
mov
mov
movsb
xchg
stos
fwait
or
push
aas
out
nop
mov
dec
insl
mov
pop
iret
mov
dec
mulb
xor
xchg
sub
jp
insb
dec
pusha
sub
add
sbb
bnd
popf
shll
inc
sub
ret
or
cwtl
icebp
fcomi
cmp
hlt
dec
jge
cmp
mov
mov
fdivrl
mov
sti
bound
pop
dec
inc
and
out
mov
ds
dec
pop
bnd
test
scas
xchg
dec
shl
mov
cmp
hlt
aas
ficoml
lods
negb
xor
inc
push
popf
pop
mov
cmp
nopl
iret
or
enter
mov
pop
inc
mov
rcll
rcrl
and
jns
jecxz
stos
push
cmp
mov
daa
xchg
adc
int
enter
mov
fwait
movsl
imul
adc
jg
mov
leave
and
pop
jl
repnz
sbb
jno
mov
loopne
cltd
push
repz
xchg
cmpsb
aaa
xchg
pop
cld
jmp
xchg
ds
mov
mov
mov
sbb
or
dec
cs
push
in
or
inc
push
sub
aaa
xor
das
and
insl
jne
adc
call
lock
test
cmp
test
arpl
test
icebp
dec
xor
pop
loope
aas
add
clc
fdivrs
add
dec
aas
mov
lods
not
jl
cmc
jae
inc
pop
xlat
incb
add
fwait
in
add
mov
hlt
lods
div
aas
jb
mov
shll
jecxz
xchg
or
test
lret
or
in
outsb
inc
jge
xchg
jp
pushf
out
in
jno
mov
hlt
iret
bnd
mov
sub
push
jge
arpl
ss
xor
sub
rclb
xor
jb
add
lahf
cltd
push
insl
mov
xor
mov
mov
stos
fisubl
inc
and
or
imul
cli
fldl
cli
inc
push
lret
sahf
xor
mov
or
shrl
data16
out
movsb
icebp
insl
pop
ljmp
lea
sbb
and
mov
pusha
pop
test
xchg
shlb
sbb
push
xchg
popf
sub
test
call
or
xchg
push
add
jmp
and
push
ja
cmp
jae
xor
fbld
jge
jns
mov
xchg
mov
adc
loopne
pusha
fstps
sub
and
add
xor
adc
rclb
xchg
hlt
push
cmp
insl
mov
xchg
adc
roll
push
cmp
ljmp
decb
lret
leave
inc
cmp
push
loop
xor
jl
fisttpll
insb
fisubl
cli
insl
flds
lds
mov
pop
fs
cmpsl
rorb
popa
mov
fimuls
xchg
mov
mov
mov
les
mov
stc
ret
cmp
xor
add
insl
fildl
or
push
push
je
dec
mov
jb
cmp
jno
cmp
sbb
xchg
fwait
mov
xlat
inc
mov
shll
repz
push
fdivrl
outsb
xor
lods
and
xor
mov
push
mov
pop
int3
popf
les
add
cmp
out
mov
pop
inc
mov
xor
sub
jecxz
int
aas
das
mov
les
or
jae
mov
in
dec
mov
dec
xor
ljmp
dec
mov
pop
jmp
xchg
and
fwait
sbb
pop
popf
pop
and
fs
add
and
dec
cli
xchg
div
push
fcomi
jne
add
scas
xor
jg
mov
sub
sbb
inc
or
subl
mov
sub
in
mov
jae
test
scas
inc
jmp
jo
popf
jno
and
jnp
cli
jmp
clc
mov
xlat
aad
or
and
xchg
imul
sbb
inc
push
andb
pop
ds
mov
mov
gs
sti
cltd
mov
in
push
pop
jle
popf
adc
fisttpll
jmp
push
icebp
and
bound
repnz
mov
mov
bound
std
es
inc
inc
mov
push
xor
push
sub
or
lods
and
sbb
shlb
or
bound
xchg
pop
jbe
jnp
mov
in
in
sub
scas
lds
mov
dec
lea
cmp
movsb
jo
sbb
jge
lret
push
and
es
lret
test
sbb
movsb
into
and
std
xor
mov
fmull
ret
out
nop
pushf
shr
fcoms
push
mov
jmp
out
mov
rcl
fsubr
add
aam
movsb
lds
dec
and
fmull
pop
shrb
jbe
loop
rcrl
or
jnp
dec
jbe
mov
das
out
out
lret
inc
xor
es
pshufw
mov
jecxz
test
aad
inc
xchg
pop
jae
xchg
pop
add
and
mov
cmp
rcl
pop
dec
dec
inc
mov
xchg
mov
clc
rorb
sub
in
adc
adc
imul
jnp
sub
sbb
sub
jns
pop
pop
into
sub
lcall
paddb
sti
inc
iret
mov
adc
mov
stc
inc
xchg
ss
daa
out
leave
out
loop
imul
int
cmp
mov
jl
ret
mov
int
int
dec
movl
call
or
clc
push
cmp
sbb
push
cmp
nop
fidivs
jge
hlt
js
and
or
jbe
mov
mov
mov
lcall
xor
shr
lahf
les
int
push
cmp
and
imul
cmp
cmc
adc
push
iret
mov
mov
shlb
loop
mov
rcrl
inc
xchg
xor
inc
nop
daa
adc
or
or
adc
cwtl
mov
imul
push
nop
cs
dec
mov
cmp
mov
adc
xchg
sahf
pop
or
push
mov
jle
xchg
xor
cmpsb
sbb
pop
mov
jecxz
add
scas
add
jno
test
or
pop
mov
xor
rclb
and
loope
icebp
scas
int3
or
pop
imul
lock
dec
sub
xchg
pop
cld
xor
ret
cli
or
jle
out
jo
loope
imul
sti
mov
stc
mov
fcomip
jg
in
cmpsl
cli
es
mov
xchg
jno
sbb
test
pop
mov
mov
and
add
mov
popf
cmp
dec
iret
loopne
xor
das
sub
sbb
sub
xor
mov
sbb
mov
aad
hlt
fs
sub
jmp
mov
sbb
aaa
shlb
fmul
dec
pop
mov
js
xor
fisubrl
pop
movsb
mov
sub
loope
cli
add
xor
cmpw
jne
add
jg
xor
das
sbb
lock
push
lods
addr16
bound
ss
xor
dec
jns
adc
mov
push
push
outsb
lock
fmuls
mov
push
inc
adc
add
mov
cmp
pushf
ret
cmc
push
xorb
scas
jbe
sub
mov
jp
test
and
bnd
cltd
xor
mov
in
dec
mov
and
fwait
out
outsb
addr16
daa
leave
mov
sub
ljmp
mov
xor
pusha
mov
pusha
mov
jnp
cwtl
icebp
jno
movsl
negl
xor
mov
cmc
pop
not
int
outsb
cmp
jg
icebp
and
out
mov
out
xchg
jne
mov
mov
cmc
sbb
cmp
gs
sbb
add
les
pop
dec
adc
xchg
add
orb
xchg
sarl
cmpsb
shrl
mov
mov
add
mov
les
jae
add
mov
mov
mov
stos
lret
incl
jmp
bound
insb
push
cmp
jge
cmp
mov
in
out
fstpt
mov
ljmp
sbb
and
in
or
out
cs
sti
js
insl
arpl
push
xor
add
cmp
cwtl
test
xor
loopne
lret
or
sub
and
add
sbb
inc
jae
test
xor
lret
xor
test
shl
mov
or
andb
push
and
pushf
adc
scas
mov
add
jo
push
repz
fistpll
mov
rclb
rcrb
call
push
imul
cltd
shrb
je
ja
xor
rclb
data16
stos
loop
out
cs
xor
adc
or
ror
jo
je
sar
xor
jmp
jecxz
mov
loop
cmp
loopne
and
insl
jb
das
leave
sbb
stos
jno
adc
and
cmc
sbb
in
jg
xor
add
adc
xor
icebp
mov
dec
add
push
rolb
jle
stos
es
adc
xor
les
add
hlt
push
int3
bound
jle
sbb
mov
pop
fcoml
dec
xor
cmp
cmp
push
out
movsb
pusha
loopne
fidivrs
sbb
xlat
ror
push
ret
cmpl
jb
mov
push
dec
repz
inc
rorb
mov
mov
roll
outsb
mov
xchg
filds
inc
jbe
xor
fdivs
mov
push
adc
cmp
cmp
addr16
dec
outsl
jg
cmpsl
int
add
lahf
shll
jmp
popa
js
mov
push
roll
not
mov
xor
xor
adc
stc
imul
insl
je
and
repnz
and
mov
and
adc
pop
stc
jecxz
sub
out
pop
push
lcall
and
leave
add
jnp
rclb
in
js
adc
jecxz
mov
mov
and
mov
xchg
shrl
mov
mov
jp
imul
sub
jl
jb
pop
mov
xor
xor
das
clc
mov
mov
cwtl
pop
ret
ret
or
adc
fisubrs
ja
dec
push
test
and
inc
and
push
lret
imul
lods
mov
movb
cwtl
and
lock
call
roll
out
mov
xor
push
mov
lock
repnz
ds
lahf
in
bound
aam
aas
pop
aam
movsl
inc
sub
xor
scas
ja
jns
push
pop
imul
imull
jl
jmp
pusha
imul
cmp
add
xlat
and
hlt
mov
pop
or
jb
jecxz
sbb
or
movsb
sub
in
fwait
jmp
inc
arpl
push
inc
insb
int
jl
xchg
negl
xchg
pop
and
mov
addb
xor
out
mov
cmpsb
pop
xchg
out
into
dec
movsb
lock
fdivp
es
loop
jle
enter
inc
pop
and
movsl
insb
std
xchg
dec
sbb
idivb
clc
pop
imul
je
adc
lock
cmpsl
pusha
dec
adc
add
lock
xchg
push
cmp
xchg
jmp
insl
push
xchg
stc
dec
sbb
push
popa
push
out
xor
push
mov
gs
sbb
push
jge
sub
xor
inc
stos
cmp
fbstp
outsl
inc
fidivs
clc
aam
scas
adc
lret
movsl
ds
jmp
mov
push
subb
push
xchg
xchg
or
inc
pop
rcll
xor
aaa
pop
push
and
xchg
cmp
call
fisubl
xor
pop
cmc
lsl
push
fstps
push
dec
sbb
mov
je
enter
push
mov
adc
lods
mov
daa
and
ret
movsb
cltd
mov
pop
daa
fisubrl
es
stc
add
fsubrp
mov
cmp
fimull
mov
stos
leave
or
push
std
adc
aam
leave
test
sbb
outsb
rcrb
xor
pusha
or
cmp
xor
jo
add
add
insl
out
cmp
js
add
lret
pop
mov
fadds
mov
jne
cmpsl
mov
fyl2x
pop
pop
push
fwait
in
insb
cld
scas
or
mov
jne
fbld
pop
daa
lods
inc
scas
es
dec
sahf
fcmovbe
pop
cmp
aas
adc
mov
xchg
mov
loope
or
loop
test
rclb
xor
rorl
xor
adc
out
sub
and
mov
out
cmp
ss
or
lcall
xchg
aam
ja
ret
inc
sbb
out
mov
loopne
ljmp
and
sbb
xchg
xchg
cmpsl
or
push
out
push
icebp
jge
mov
inc
jle
cwtl
in
dec
jmp
pop
mov
enter
or
mov
movsb
mov
fcomps
add
jmp
dec
jecxz
out
cmp
into
fwait
jg
jb
jnp
or
sbb
sub
push
leave
adc
add
insb
scas
inc
jecxz
cwtl
test
in
mov
or
inc
pop
into
mov
ret
mov
jge
les
inc
push
xchg
imul
xor
and
inc
jne
adc
push
loop
into
pop
jno
cmp
and
lcall
mov
je
mov
mov
mov
mov
ret
mov
mov
adc
cld
cs
nop
rcrb
hlt
xchg
and
imul
andb
xchg
xchg
ret
push
enter
ds
jne
mov
out
int3
clc
sahf
mov
fwait
mov
stos
or
stc
ficoms
shll
jnp
stos
push
jl
aaa
push
cli
in
ds
mov
jg
loop
sub
push
loope
sub
mov
mov
call
shlb
mov
test
and
shrl
sub
out
pop
lcall
roll
or
lret
sbb
sbb
add
add
shrb
adc
mov
insl
xchg
imul
pop
and
push
icebp
ja
popf
out
and
cwtl
stos
out
push
mov
inc
mov
stc
ljmp
icebp
pop
lahf
out
aad
push
pop
dec
sbb
and
outsl
cwtl
fwait
mov
insl
dec
add
push
loope
mov
lods
dec
adc
cmp
jmp
and
jbe
push
ss
push
clc
cmpsl
imulb
dec
scas
iret
push
sbbl
addb
cmc
mov
or
sbb
sahf
sub
lret
inc
adc
xchg
mov
or
dec
dec
dec
pushl
fcomps
test
ds
jecxz
test
adc
adc
rolb
inc
cmp
sub
test
pusha
xchg
shl
xlat
call
daa
jmp
ds
lcallw
int
push
sub
test
scas
cwtl
add
jge
or
jns
jnp
add
jp
fdivrl
pop
lock
push
pop
inc
repnz
sbb
lcall
movsb
outsl
in
pop
js
jecxz
jae
out
lea
mov
enter
and
aas
inc
xor
cmp
shlb
sbb
mov
xchg
sbb
adc
es
lret
inc
pop
jmp
aam
mov
sbb
mov
sub
movsbl
mull
out
add
loop
add
push
adc
dec
push
adc
or
lods
lods
ret
mov
mov
or
loopne
mov
out
push
jne
out
jo
imul
and
in
int
xor
out
mov
ja
sub
xchg
add
and
jns
jmp
ss
jb
js
push
push
mov
hlt
xor
int3
pusha
ss
push
leave
pop
xchg
andl
and
sub
adc
stc
sbb
jns
xchg
push
inc
stos
and
push
add
sbb
out
dec
sub
mov
fs
push
dec
enter
jp
pusha
dec
outsb
inc
lea
je
mov
rcrb
ljmp
push
push
test
adc
outsb
xlat
fists
cmp
or
movsl
push
adc
mov
test
mov
lret
leave
xchg
pop
fsubs
roll
fnstcw
xchg
arpl
mov
lcall
add
or
mov
cmp
add
imull
int
dec
and
mov
repnz
in
xchg
mov
sub
imul
mov
xchg
pop
sbb
adc
in
dec
mov
mov
test
push
rclb
sbb
inc
es
mov
in
inc
mov
rcr
scas
scas
push
pop
andb
cmp
mov
fwait
adc
sahf
scas
jp
mov
rcll
push
sbb
out
pop
push
mov
test
sbb
xor
cmp
bound
sar
or
or
push
repnz
lods
cmp
xchg
add
mov
rcr
addb
sbb
in
loopne
xchg
aaa
ja
lahf
lods
push
addb
pop
sub
ljmp
cmp
dec
sarb
pushl
jb
lods
jmp
inc
jne
add
js
push
xor
mov
lods
or
jmp
and
std
imul
cli
movsb
ja
dec
sub
sbb
cs
mov
pop
aam
insl
sub
in
popa
sahf
dec
divl
xor
aaa
insl
in
bound
stos
nop
loope
test
sub
dec
pop
pop
cmpsl
adc
sub
jg
addr16
scas
jp
outsb
roll
sbb
mov
fsubs
loop
xchg
and
or
leave
or
ret
int3
push
and
mov
pop
push
xchg
divb
fcomi
xor
jmp
mov
or
inc
dec
daa
mov
jo
jl
pop
push
mov
pusha
and
mov
sbb
pop
aad
mov
mov
jno
jl
xchg
mov
or
dec
pusha
sub
mov
xchg
cmp
fsubr
fwait
adc
and
subl
inc
push
into
int
cmpb
insl
mov
lock
cmpl
jp
les
cmp
mov
mov
popf
leave
imul
test
and
mov
push
sti
aad
ss
orb
fwait
pop
fisubrl
out
mov
lcall
add
loop
das
push
and
cmp
xchg
aas
filds
jmp
movsb
aas
add
or
jbe
inc
cmp
out
and
mov
mov
ret
jecxz
jb
inc
das
jns
pop
or
shlb
lods
popf
fidivl
xor
mov
lret
dec
data16
roll
dec
push
pop
sbb
loop
dec
ds
repnz
jbe
test
mov
pop
sbb
pusha
mov
mov
insl
fwait
cmp
mov
in
adc
sub
outsl
loopne
arpl
mov
in
pop
repnz
movsb
in
push
mov
jg
dec
shl
cmp
pop
dec
pop
or
push
out
lods
or
orb
dec
adc
cmp
lcall
add
scas
in
adc
pushf
inc
sbb
out
out
les
sti
mov
jnp
fisttps
ret
clc
hlt
sbb
sub
xor
xor
aam
mov
je
sub
lret
push
stos
stos
loope
jne
jae
mov
push
adc
cwtl
push
jnp,pn
stc
and
out
mov
ds
scas
int
cmp
cmp
fildl
shlb
mov
test
in
movsl
add
sbb
repz
dec
dec
enter
out
add
repnz
add
mov
push
imul
push
out
dec
mov
mov
mov
scas
mov
and
enter
adcb
dec
fldl
pop
or
sub
divb
sub
push
jmp
push
lods
push
rolb
jnp
xchg
iret
jp
sub
notb
mov
pusha
xor
sbb
loope
dec
add
push
cmpsl
mov
icebp
or
decb
orl
xchg
add
sub
std
in
cmpsb
or
jno
ds
movsl
xor
xchg
mov
jbe
sub
mov
mov
jmp
or
sbb
shll
clc
popf
push
push
dec
movsb
sbb
cmp
fwait
cwtl
arpl
and
mov
rolb
inc
scas
ffreep
repz
sahf
loopne
mov
pop
loop
jecxz
xchg
mov
nop
sbb
jl
add
rolb
or
xchg
sbb
inc
jno
fwait
out
xorb
mov
push
mov
adcl
lret
subl
fisttpl
fldt
xchg
pop
push
jmp
stos
push
adc
sti
and
sub
sub
test
loopne
jns
xor
fists
lds
inc
shr
into
out
mov
push
jae
or
xchg
sub
addr16
add
idivl
sbb
fdivs
xchg
dec
sbb
es
movsb
cltd
xchg
sbb
rcrb
adc
xchg
and
repz
mov
ds
ds
pop
mov
pop
fstl
xor
or
xchg
in
xchg
dec
dec
js
loopne
push
jecxz
imul
push
mov
icebp
xor
dec
scas
je
xor
mov
in
out
add
mov
sub
inc
clc
inc
or
mov
nop
fadds
stos
adc
lods
cmpsb
test
dec
cmp
adc
lods
insb
loope
cmc
adc
and
fcomip
xor
iret
loope
lea
sbbl
push
adc
dec
push
cmpsl
loopne
add
out
or
inc
jl
loop
add
push
sti
and
mov
add
jbe
addr16
mov
mov
faddl
mov
xchg
shl
pop
imul
sbb
pop
adc
outsb
jg
add
sbb
call
push
stos
mov
fcomi
icebp
insl
in
popf
mov
jns
mov
into
imul
cld
cmp
add
jecxz
repz
mov
flds
mov
outsl
adc
lods
imul
in
mov
aaa
xchg
iret
daa
xchg
addr16
divl
andl
mov
or
jnp
push
cmpsl
mov
ret
fldenv
cmpsb
and
mov
push
jp
mov
sub
push
dec
mov
inc
in
iret
xchg
ror
je
lahf
jg
shlb
pushf
in
test
loopne
outsb
lea
fmuls
cwtl
or
pop
das
arpl
out
dec
pop
mov
outsl
test
inc
adc
xchg
and
ret
cmpsb
andl
dec
mov
gs
repnz
sarb
fs
addr16
js
cld
adc
out
pop
adc
ja
pop
lea
jb
mov
cltd
jg
jmp
push
dec
ret
lahf
mov
pop
lea
mov
push
adc
icebp
inc
pop
adc
test
aad
stos
sub
shrb
lret
sbb
jno
shl
and
or
orb
mov
add
ss
pop
cltd
int3
test
in
int3
mov
push
xlat
dec
iret
and
jns
cmp
aas
adc
dec
lods
add
mov
int3
cli
push
pop
insl
sti
ss
push
lret
lret
sti
out
into
out
mov
fsubrl
ljmp
lock
jl
jbe
or
fcoms
adc
pop
aam
andl
in
jmp
adc
loopne
mov
stc
lds
jle
mov
add
cs
test
loop
test
mov
movsb
jnp
cld
jmp
xor
dec
jg
inc
push
mov
sub
pop
or
out
insl
jge
mov
push
mov
rcrb
outsb
mov
dec
popa
out
enter
or
and
popa
pop
dec
jo
enter
sbb
repz
ret
sbb
mov
and
push
pop
push
and
inc
lret
mov
ds
insl
sbb
ficoms
sbbl
lds
stos
call
sub
cmpsl
sbb
int3
adc
int3
pusha
mov
push
in
scas
push
push
add
stos
xchg
jp
cmp
and
rorb
pusha
sub
inc
in
push
xchg
jnp
pop
adc
mov
xlat
stc
mov
movsl
ljmp
xchg
pop
mov
dec
adc
xor
cmc
or
jl
jae
icebp
or
dec
pop
ss
xor
sub
lds
andl
cmpsl
aad
fwait
and
cmpsb
and
in
dec
aad
or
fldl
adc
push
dec
push
mov
jnp
insl
inc
das
push
ret
cli
mov
fsts
inc
sub
jle
in
sub
aad
mov
mov
mov
xchg
es
out
scas
out
les
loop
xchg
dec
sbb
adc
jae
and
pushf
push
sbb
inc
jl
std
fwait
and
pop
mov
inc
sub
or
decl
lea
pop
fwait
scas
mov
out
pusha
and
cltd
insl
mov
jnp
mov
add
inc
jmp
dec
scas
inc
dec
or
mov
or
pusha
xor
push
dec
leave
cmc
push
cmc
sahf
jno
inc
inc
xorl
loop
aad
pusha
mov
fbstp
inc
sbb
insb
pop
or
outsl
ja
mov
pushf
in
sub
xor
stos
sbb
lahf
js
add
cmpsb
push
dec
sti
test
dec
and
std
das
pusha
add
dec
nop
out
sahf
sbb
icebp
enter
mov
decl
daa
in
cmp
in
push
xchg
and
inc
pop
xor
cmp
outsl
imul
movsb
jle
and
outsl
or
inc
shl
dec
inc
add
loope
incb
movsl
call
outsb
jl
out
mov
imul
jl
dec
iret
out
xchg
inc
pop
inc
repnz
add
imul
in
inc
pusha
adc
xchg
add
xchg
lahf
adc
mov
fcmovnbe
sarl
pop
inc
mov
neg
inc
stc
push
incb
cmp
movsl
repnz
stos
push
rclb
pop
pop
inc
aas
sub
mov
pop
outsb
loopne
imulb
adc
lret
push
negl
sbb
test
lahf
out
out
pop
into
je
aas
mov
js
outsb
call
cmp
push
push
ljmp
jb
pop
and
mov
mov
mov
or
mov
ret
int
cmpb
mov
xchg
jecxz
pop
adc
xchg
int
xchg
lahf
lock
xchg
cwtl
inc
lods
cmpb
nop
sahf
mov
adcb
adc
sub
push
push
inc
jmp
hlt
ret
or
std
pop
and
dec
cmp
dec
xlat
fidivl
xchg
sbb
or
mov
adc
xor
popf
push
xor
mov
and
stos
daa
les
mov
adc
in
sub
push
clc
sub
xlat
push
mov
jns
pop
loopne
addb
enter
out
out
dec
inc
fbstp
mov
popa
xor
dec
pop
dec
cmpsl
sub
pop
incl
lahf
sbb
or
mov
ret
and
mov
pop
stos
dec
mov
or
mov
add
mov
shrb
mulb
loop
jl
mov
lds
or
pop
fimull
icebp
pushf
cwtl
push
rcrb
mov
inc
fstps
shrb
ficoml
bound
xchg
daa
ss
pushf
mov
call
fwait
add
jecxz
ficoms
jg
fimuls
adc
ret
lahf
mov
jge
xchg
pop
xor
daa
mov
sub
pop
inc
addr16
arpl
lods
pop
xchg
cmp
subl
insl
shrl
ja
cli
inc
nop
jge
dec
out
bound
pop
xor
inc
les
into
add
inc
cmp
cmp
out
and
cs
dec
add
int
xor
mov
jg
mov
shr
sub
pop
mov
enter
cmp
inc
aaa
gs
or
shlb
imul
sub
sti
sbb
test
ret
nop
push
lock
mov
es
mov
jnp
pop
pop
addr16
inc
push
add
loop
negl
lds
and
adc
fsubr
dec
push
in
xchg
xor
cmc
push
xchg
jecxz
out
sbb
nop
push
call
dec
sbbb
inc
pushf
out
xor
or
hlt
imul
mov
rcr
add
fldenv
xchg
mov
sti
out
mov
mov
mov
mov
iret
test
scas
xor
or
pop
or
sbbl
jnp
push
sub
cmc
mov
imul
sbb
js
fstps
ffree
ret
xchg
pop
sub
add
shrb
xchg
or
cli
mov
in
pop
js
ficoms
pop
imul
mov
stos
xor
xchg
test
pusha
les
add
xchg
ss
imul
mov
mov
xchg
in
cmp
push
decl
es
push
arpl
and
mov
push
repz
inc
dec
mov
enter
cmp
cld
dec
sub
jns
mov
fwait
dec
add
iret
pop
mov
xchg
inc
pop
lods
xor
mov
pop
popa
sbb
mov
pop
scas
add
xchg
inc
jb
inc
cltd
fldenv
cmp
xchg
push
add
aas
or
xchg
insl
cli
imul
roll
mov
ret
mov
inc
pop
lods
xor
test
dec
push
addb
xadd
sarb
shr
sti
push
mov
insl
push
dec
inc
clc
addr16
test
sub
and
xor
enter
dec
fldenv
fcompl
add
fisttps
sub
add
outsl
xor
xchg
psubusw
mov
sub
jl
mov
and
stos
ror
arpl
push
cli
insl
xor
int
scas
or
push
arpl
das
pop
ss
testl
mov
loopne
mov
adc
loop
push
fiaddl
xchg
in
sub
rcrb
sbbb
fnstsw
inc
mov
adc
pop
fwait
xchg
and
cwtl
fimull
push
movsl
add
adc
add
les
push
dec
pop
sub
xor
xlat
sti
gs
or
addr16
sub
sbb
jl
or
push
xchg
cmc
data16
cmp
rolb
loope
cmp
mov
adc
pop
push
stos
mov
scas
add
push
mov
adc
test
andb
inc
cmp
ds
leave
pop
sbbb
cwtl
jmp
inc
mov
and
outsl
fucomip
rol
jne
aaa
je
imul
add
insb
icebp
enter
stos
and
mov
mov
xchg
adc
std
xchg
lods
call
adcb
mov
mov
push
jnp
mov
nop
or
inc
push
inc
cs
leave
sti
jecxz
and
and
sub
xor
loopne
ret
cs
lcall
mov
inc
jp
mov
and
or
xchg
repz
cli
test
test
add
push
in
pop
jl
rcl
je
mov
mov
addr16
push
cmp
and
das
lea
xchg
sarb
test
or
mov
je
fs
lahf
test
stc
mov
lds
fsubs
into
and
and
ds
mov
testl
xor
jmp
jno
stos
pop
adc
fdivrl
test
and
shrl
inc
repnz
subb
pop
sbb
add
bnd
test
xchg
mov
pop
imul
pop
fdivr
ja
jmp
lcall
jg
inc
negl
jno
ds
test
pop
pop
fxch
sbbl
shll
push
fimuls
divb
inc
inc
push
xor
rorb
jg
pop
sub
lret
adc
ljmp
pop
push
repz
insb
addb
shlb
inc
add
jl
sbbl
xchg
lret
sbb
stos
pop
adc
adc
std
or
insb
out
fiaddl
nop
cmp
mov
xlat
xchg
xchg
and
xor
push
jl
ds
mov
movsl
lcall
mov
and
fs
arpl
pop
jle
out
sub
mov
sub
xor
add
test
sbb
sub
push
add
xchg
fs
xchg
mov
in
xor
sbb
add
lret
push
mov
aam
ss
mov
cmpsl
push
mov
popa
dec
insl
inc
add
loop
add
lods
add
xchg
and
jnp
aam
xor
gs
pop
xchg
aas
shl
aad
push
dec
gs
call
xchg
adc
pop
stc
inc
jge,pn
cmp
mov
and
pop
xor
in
cmp
sbb
out
frstor
cltd
mov
test
ret
push
push
push
sbb
pop
negb
mov
fbstp
sub
mov
push
adc
jnp
out
data16
sbbb
xchg
aas
mov
inc
or
pop
push
jmp
adc
int
mov
sti
lock
stos
dec
dec
adc
mov
push
xor
scas
pop
and
outsl
fdiv
out
pop
xchg
inc
jg
push
out
mov
mov
mov
sbb
movsl
das
addl
fistpll
fxch
mov
mov
dec
jo
arpl
cmp
mov
add
or
or
jo
xor
cmc
jns
lods
test
jb
and
aas
cmp
arpl
inc
inc
xchg
mov
cmp
mov
rcl
inc
popf
and
repz
mov
pop
jo
and
cmp
fwait
xchg
mov
ds
out
adc
roll
fistps
xlat
or
mov
mov
adc
cmp
jmp
and
jge
or
lods
mov
mov
test
mov
jbe
jp
pushf
push
jp
mov
jle
js
outsl
imul
in
pop
mov
in
jl
dec
sub
mov
lock
xor
out
or
push
pop
jne
out
dec
std
test
xchg
rol
xchg
adc
lcall
sbb
dec
das
lcall
repnz
jle
dec
rcrl
dec
mov
dec
stos
inc
bound
push
test
dec
sub
out
pop
jmp
fisubs
push
cmp
lahf
fwait
push
mov
popa
mov
decl
popa
inc
lods
cmpsb
xchg
jg
inc
jns
sahf
push
push
add
dec
pop
mov
sub
sub
scas
outsl
jbe
std
jge
and
and
adc
js
int
fcompl
push
push
stc
adc
jo
popa
mov
or
iret
pop
cmp
dec
add
xor
and
mov
mov
jbe
xchg
roll
loop
sbb
mov
fsubs
negb
loopne
push
lret
mov
enter
clc
sub
cmpb
pop
fisttpll
sbb
pop
xlat
dec
stos
fisubl
and
cmp
and
cmc
jo
dec
jne
call
inc
loopne
sbbl
and
daa
push
mov
pop
adc
ds
stc
mov
push
fdiv
jnp
lods
inc
bound
pop
popa
or
scas
mov
fistl
and
mov
pop
repnz
jne
popa
cmpsl
mov
pop
and
sahf
dec
inc
or
adc
jnp
fwait
pop
and
and
xor
pop
push
jg
cmp
idivl
inc
xor
jno
les
jb
cmpsb
ljmp
and
cmpsl
xchg
jecxz
dec
mov
jnp
ss
lret
or
loopne
ret
jo
xlat
pop
je
cmp
jno
mov
stc
and
xor
push
jp
xchg
call
das
sub
jl
push
sub
push
sub
or
and
and
xchg
inc
dec
mov
in
pop
sbb
sbb
std
fwait
dec
or
mov
cmp
pop
push
xchg
inc
or
dec
ret
dec
lock
out
int3
jle
pop
addl
call
aad
adc
dec
xlat
cmc
clc
int3
popf
mov
push
jnp
pushf
mulb
in
xor
shrl
dec
sub
xchg
popa
or
xlat
dec
inc
jo
jp
rcr
int3
dec
and
push
fcompl
into
or
in
fmuls
xchg
and
mov
pop
stos
push
mov
xchg
outsl
in
jo
push
fcomp
and
aad
stc
sbb
mov
pusha
xor
pop
jmp
nop
sub
push
add
aad
hlt
inc
adc
mov
lret
enter
push
js
aas
les
jbe
and
pop
cld
orl
testb
dec
jbe
mov
pop
push
xor
xchg
push
lock
pop
out
mov
fmull
dec
mov
out
aad
push
aaa
push
adc
jmp
xchg
adc
test
add
in
mov
ret
fwait
fwait
push
mov
and
push
pop
sub
stos
pop
ret
or
scas
sbb
and
into
rclb
shr
inc
dec
pusha
jne
sbb
lret
mov
stc
xchg
push
test
je
loopne,pn
cmpsl
test
push
call
cmpsl
ss
mov
xchg
sahf
das
inc
lret
mov
add
add
lret
data16
jge
stos
movsb
sub
mov
pop
push
leave
dec
call
sub
div
xor
dec
call
adc
xor
and
mov
and
dec
repnz
fcomps
dec
in
mov
cmp
push
pop
lcall
rorl
and
jecxz
adc
or
stos
cmpb
imul
popa
into
bound
fsubrs
imul
pop
rclb
shll
ret
mov
and
mov
lock
xchg
push
pop
jbe
hlt
cmp
dec
mov
test
mov
mov
cmp
imulb
test
dec
sub
xor
jno
mov
pop
sti
sub
movsb
rcrb
dec
pop
cld
pop
dec
aad
sub
pop
mov
pop
jg
dec
adc
insl
cmp
aam
inc
addb
push
movsl
jo
aam
les
adc
mov
jge
insb
inc
push
jmp
iret
push
leave
aad
jbe
cwtl
jb
stc
pop
inc
loopne
sbb
or
int
enter
cmp
enter
inc
push
incl
add
xchg
js
arpl
hlt
mov
inc
jmp
cmp
push
mov
dec
push
shll
push
incb
inc
outsl
std
mov
mov
call
clc
push
inc
mov
xchg
out
lcall
ret
push
and
push
adc
mov
mov
or
lret
mov
and
jbe
aaa
dec
mov
stc
popa
push
test
ror
mov
mov
in
das
inc
imulb
inc
and
je
mov
aad
imulb
mov
and
in
push
pop
adc
push
enter
pop
das
bound
mov
push
test
aam
and
cmpsl
sbb
xor
add
mov
pop
aam
mov
or
lret
xlat
pop
insl
js
sbb
test
imul
int
ds
adc
cltd
xlat
data16
mov
insl
xor
insb
aam
imul
cmc
js
jae
repz
mov
pop
pop
out
clc
sbb
pop
or
mov
jmp
sbb
out
stos
lods
mov
add
push
in
call
out
cwtl
scas
cmp
inc
ja
icebp
out
loope
mov
push
jb
xchg
out
and
mov
dec
das
pop
push
cli
mov
xchg
xor
inc
pusha
adcb
pop
adc
fimull
mov
das
cmp
pusha
aad
sarb
dec
movsl
pop
stc
lret
scas
cwtl
scas
shll
hlt
sbb
mov
loop
iret
pop
sarb
push
in
fsubrs
push
movsb
mov
adc
shlb
mov
xor
aam
jg
and
js
inc
xchg
xchg
addr16
mov
icebp
call
push
orl
xor
mov
stos
popf
inc
call
jecxz
mov
or
mov
pop
xchg
xchg
outsl
fdivs
fucomp
and
lds
in
xor
mov
add
jl
aam
aam
xlat
inc
push
addr16
iret
cmp
rclb
div
pop
cmp
lods
mov
push
sub
rcll
xorl
mov
test
ficoms
jb
dec
xor
movsl
into
mov
xchg
pop
pop
daa
pop
xchg
push
jo
or
cmpsl
rcll
add
dec
cwtl
or
imul
or
cltd
ret
pushl
xorb
or
ret
dec
out
leave
cmc
shlb
inc
or
dec
inc
les
imul
jl
dec
movups
scas
or
imul
addr16
lret
xchg
dec
mov
fldt
jge
add
fisubrs
dec
and
shll
inc
push
iret
xchg
inc
inc
stos
mov
fimuls
icebp
out
and
ss
movsb
fmull
in
pop
repnz
inc
lea
mov
push
test
cmpsl
xchg
push
push
dec
popf
pushf
lea
cmp
stc
mov
jp
flds
es
insb
fucomi
dec
mov
mov
pop
and
push
shll
int
sbb
loopne
sbb
aaa
inc
test
xor
in
add
mov
xor
rcrb
das
mov
leave
aas
xor
int
push
addr16
jno
add
stos
push
cmp
leave
xchg
shrl
push
mov
and
pop
fcomps
or
pop
sbb
push
or
push
add
subb
inc
jo
movl
inc
inc
hlt
adc
sub
insl
push
popf
inc
pop
pushf
inc
mov
incl
mov
idivl
push
loopne
mov
ss
pop
pop
cwtl
inc
pop
lea
movsb
imul
jle
xchg
pop
pop
pop
mov
mov
dec
test
xchg
lahf
mov
add
lds
cmpsb
cld
mov
jno
mov
push
pop
dec
inc
fstp
mov
push
push
int
ret
lahf
mov
dec
add
pusha
mov
mov
push
push
cwtl
jmp
mulb
jl
add
cmpb
push
lret
mov
lods
jmp
and
outsb
fildll
add
push
xchg
std
std
or
pushf
inc
in
push
in
xor
xchg
pop
mov
pop
js
lcall
lods
movsb
mov
cwtl
inc
test
sub
xchg
bound
iret
sbb
adc
jge
shlb
sahf
adc
jp
sti
cmpsl
jp
fcoml
mov
mov
and
repnz
push
xchg
and
stos
test
gs
jo
adc
movsb
mov
push
data16
mov
ret
push
outsl
out
adc
outsl
clc
ljmp
test
lret
xchg
cwtl
pop
adc
dec
cli
data16
mov
mov
or
call
push
sarl
iret
inc
pop
or
out
jmp
pop
push
push
lcall
shll
pushl
jno
inc
cmp
aaa
dec
daa
scas
movsl
pop
andl
aad
ljmp
fists
xor
in
cmp
pop
jno
dec
add
lret
jle
lahf
repnz
mov
cmpsb
test
bound
xor
adcb
dec
loopne
repnz
sbb
mov
mov
xor
lret
add
push
rcll
bound
cld
add
cmp
inc
or
test
mov
mov
addb
push
sbb
xor
scas
cmp
cld
add
mov
jle
lahf
mov
in
add
inc
inc
popa
lock
jne
outsl
mov
fdiv
mov
mov
enter
aaa
inc
scas
aas
xchg
clc
test
sahf
jl
mov
pop
mov
lret
pop
cmpsb
xchg
or
mov
lret
sbb
outsb
mov
pop
push
mov
sar
aam
jp
sub
test
cmp
sbb
dec
mov
adc
in
xchg
clc
pop
pop
sub
aas
push
enter
jge
mov
mov
cmp
testb
jg
repz
cmp
inc
push
stos
scas
pop
imul
mov
pop
pop
pop
lret
mov
js
je
mov
adc
push
lods
stc
ficoms
movsl
xchg
fadds
sub
and
xchg
out
jle
jge
pop
push
stos
adc
lret
sbbb
shrd
pop
dec
push
ret
pop
outsb
outsb
xchg
jmp
push
push
ja
pop
pop
in
jbe
fadd
ret
arpl
js
enter
imul
pop
jb
rcrl
flds
fwait
or
jmp
jno
cltd
mov
lea
mov
pop
push
xchg
hlt
xor
clc
mov
dec
fnsave
js
mov
and
in
xchg
repnz
xchg
mov
or
add
push
aad
rcrb
add
addr16
push
add
popa
cmpsl
pusha
xchg
mov
inc
lret
dec
inc
out
xchg
add
dec
imul
sub
into
mov
cmp
scas
xor
or
cmp
lock
sbb
mov
ret
cmc
insb
pop
pop
mov
lea
nop
and
push
mov
fbld
adc
inc
sti
mov
addr16
xor
mov
shlb
ljmp
loope
in
cmp
loop
xor
test
jmp
sub
lahf
push
out
imul
sbb
pop
imull
loopne
outsl
mov
fistps
or
pop
popf
pop
mov
loopne
and
ds
lcall
push
hlt
add
ja
xor
imul
xchg
js
rcrb
push
jmp
push
cmp
inc
fisubs
out
rorb
pusha
outsb
imul
cltd
aas
movsb
rcrl
ja
in
bswap
imul
aam
inc
mov
into
aad
mov
push
sub
push
jle
pushf
xchg
lock
loop
sbb
cmp
scas
inc
or
inc
mov
mov
mov
xchg
pop
jl
jp
je
sbb
push
and
cmpsb
aam
adc
dec
xor
mov
and
sahf
ja
gs
out
cmp
mov
pop
cli
cmpsl
mov
push
add
mov
inc
sbb
call
cmp
mov
jge
sub
nop
pop
pop
dec
test
mov
cmp
mov
inc
mov
repz
inc
mov
jbe
inc
ret
mov
pop
gs
push
cmp
push
pop
sub
movsl
mov
out
clc
xchg
rorb
sahf
dec
repnz
xor
jl
mov
inc
fwait
insb
nop
dec
daa
andb
sub
jne
xor
mov
xor
push
repz
mov
ds
xor
xchg
adc
lret
shll
mov
testb
mov
push
lret
jl
cmp
lcall
sbb
lret
sbb
push
cmpsb
dec
dec
aaa
xor
or
adc
imul
setg
loope
decl
mov
mov
rclb
pop
fwait
push
jb
insl
lret
sub
daa
xchg
dec
dec
push
vpaddq
mov
addr16
push
adc
cmp
adc
leave
std
in
roll
scas
mov
shlb
popa
outsb
and
fidivl
loope
fdivrl
je
jbe
rorl
das
mov
cvtps2pd
jno
jl
rclb
mov
dec
dec
lea
mov
enter
mov
scas
push
sub
shll
and
inc
dec
ret
es
mov
testl
adc
leave
in
clc
inc
lcall
xor
or
sub
stc
pop
xchg
loopne
sub
mov
enter
xor
dec
ss
test
shrl
xchg
jns
out
mov
pop
in
mov
js
mov
pushf
repz
xchg
and
jg
popf
and
test
cld
mov
cmp
aas
jmp
sub
ljmp
inc
cmp
pop
jae
ret
lods
jae
dec
jne
jecxz
cmp
loope
sub
push
cmp
fiadds
mov
icebp
pop
es
sbb
psubsw
notb
or
jmp
jns,pt
push
aaa
repnz
sbb
mov
arpl
cltd
nop
jmp
int
mov
mov
push
cwtl
sub
mov
dec
and
nop
js
add
inc
inc
mov
mov
sub
loope
adc
cld
lods
pop
inc
xchg
in
inc
fwait
cmp
lods
dec
pop
mov
cmp
push
adc
wbinvd
repz
aam
cmp
mov
jg
imul
inc
xor
lret
aam
and
push
bnd
pushf
adc
outsl
xchg
dec
jle
cmp
pusha
inc
mov
push
add
stos
lods
insl
push
iret
repz
subl
mov
adcl
mov
ja
mov
mov
icebp
fstp
movsb
dec
icebp
lds
sub
lcall
push
adc
sbbb
push
popa
add
mov
fldl
sbb
xchg
add
push
je
ljmp
hlt
icebp
aam
dec
xchg
push
pop
addr16
aas
pop
fs
push
dec
gs
jns
mov
aam
or
aam
mov
dec
test
stos
cmp
or
out
cld
jle
mov
add
sahf
and
rcr
out
cmp
jl
add
and
xorl
aad
scas
pop
cwtl
mov
mov
hlt
repnz
fs
or
xchg
out
insl
jecxz
mov
popf
repnz
test
adc
fldenv
inc
and
stos
jne
sbb
xchg
mov
add
or
testl
add
popa
mov
jnp
ja
xchg
jecxz
rorl
adc
mov
and
cmp
stc
push
test
js
fistl
xor
jno
mov
mov
loope
shrl
push
jbe
or
cmova
pushf
popa
das
stos
mov
aaa
mov
xor
jae
popa
and
jae
je
pop
lock
sbb
dec
leave
cmp
dec
mov
mov
popf
into
xchg
cli
shlb
push
sbb
outsb
call
xor
lret
push
ljmp
add
mov
dec
push
sub
lods
in
mov
xchg
clc
jmp
test
adc
mov
jmp
daa
sub
aas
test
or
call
cmp
jne
pushf
clc
mov
or
jns
inc
adc
dec
and
fsts
std
push
add
das
push
int3
xor
mov
loop
testl
cld
iret
push
dec
cmp
or
jo
push
test
inc
push
shrl
jne
sub
dec
mulb
pop
dec
roll
scas
and
stos
lock
jmp
mov
dec
cmp
ficompl
stc
sbb
pusha
adc
add
mov
jbe
mov
fucom
js
jns
mov
jo
push
fsubs
jl
pop
test
push
xor
imul
push
daa
pop
mov
fmuls
scas
adc
xchg
jns
mov
adc
push
push
popf
jo
inc
mov
mov
mov
sub
in
movsb
call
push
xor
pop
dec
ficomps
stos
orl
sub
loopne
rorl
jnp
mov
rclb
arpl
push
pushf
lret
loope
call
std
mov
dec
shrl
push
orb
mov
cmpsl
pusha
sbb
jp
mov
out
lds
add
push
cltd
popa
sub
sbb
fucomi
fcoms
shll
jp
loop
sbbl
inc
filds
divl
call
or
stc
mov
or
jecxz
cmc
add
out
lret
adc
in
adc
scas
stos
stos
ds
data16
jge
pop
stc
push
movsl
mov
repnz
pop
test
push
test
inc
outsl
test
sbb
imul
mov
xor
sbb
daa
add
push
adc
sbb
and
xor
fstp
fisubs
repnz
daa
out
or
cmp
xchg
dec
mov
mov
ficoml
or
jb
mov
das
scas
fwait
js
iret
leave
icebp
dec
inc
adc
pop
jbe
jo
int
jle
not
daa
scas
jbe
cmp
dec
clc
add
stos
ds
jo
pusha
out
lods
dec
addl
and
ffreep
jmp
adc
sub
ret
dec
in
jg
repnz
mov
sbb
mov
add
push
jo
sbb
ret
xchg
xchg
cld
fists
cmc
inc
sub
mov
adc
pop
fwait
jns
push
jbe
movsl
adc
scas
pop
push
cmp
and
ljmp
cli
lock
inc
cs
sbb
addr16
int
or
jns
icebp
lret
pop
cld
or
add
insl
cmp
cmpsb
add
loop
outsl
add
data16
test
mov
lcall
dec
inc
xchg
aad
gs
mov
jno
inc
add
test
out
inc
andl
lock
fwait
or
cli
aam
and
xchg
mov
leave
aaa
pop
test
push
imul
mov
xchg
xor
add
xchg
or
push
mov
repnz
pop
in
jmp
sub
cmc
pop
mov
jb
mov
and
enter
fldenv
add
dec
push
imul
fiaddl
pop
or
adc
insb
loop
mov
jle
sti
xor
ret
aam
or
ret
xchg
sub
mov
fwait
imul
adc
dec
jno
jmp
jg
test
mov
popa
mov
xchg
dec
sar
lret
jae
jecxz
and
sbb
rcrl
xchg
mov
fsubrs
sbbb
jmp
out
ja
fcoms
xchg
cmc
jbe
mov
les
mov
dec
add
mov
rcrl
decl
mov
imul
and
imul
out
nop
and
pop
enter
ljmp
jo
ret
cmp
jecxz
pop
ljmp
or
test
outsl
xor
jne
or
cmp
xorl
test
add
mov
dec
xchg
aas
mov
ret
leave
dec
pop
fldl2t
mov
mov
pusha
adc
call
push
jmp
inc
lods
add
sbb
pop
fisubl
movsb
pushl
outsl
or
and
cmp
in
pop
cs
sti
imul
in
fdivrp
xor
xchg
outsl
andb
stc
xor
push
cmpsb
mov
mov
mov
push
dec
scas
add
jns
int
mov
pop
cltd
std
icebp
jl
mov
push
mov
iret
andb
rolb
movsb
sbb
mov
adc
inc
insl
push
jno
push
es
rcrb
push
push
insb
js
scas
sarl
pop
adc
lea
adcl
and
sbb
or
rcl
js
jbe
or
dec
sbb
sub
or
dec
or
scas
jg
jp
jmp
es
aaa
sahf
sbb
in
lcall
aas
add
pop
clc
mov
mov
mov
jg
loope
outsl
jbe
add
mov
bound
ret
push
test
arpl
jl
ret
pop
call
dec
aaa
into
cmp
imul
popf
bound
cmp
pop
pop
mov
addr16
aas
aam
push
rol
add
loopne
mov
sub
cmpsb
add
jbe
cmp
cs
push
xchg
aaa
push
push
mov
push
jg
insb
in
add
sub
popa
xchg
in
sbb
popf
movsb
sbb
push
add
jg
ljmp
gs
adc
cmp
mov
rorb
lahf
xchg
jg
jbe
mov
adc
std
cmc
popf
sbb
add
out
xor
inc
in
movl
arpl
enter
lret
mov
xchg
mov
iret
jo
lret
sbb
cmp
sbb
in
jae
sbb
add
cmpl
pop
inc
imul
xor
inc
push
jae
sbb
mov
sti
mov
jbe
in
fsubrp
dec
adc
aaa
mov
js
lock
nop
push
jae,pn
push
sub
les
je
rcl
out
inc
or
jnp
cs
mov
fcomps
sbb
mov
xor
or
pop
dec
shl
push
inc
push
inc
jns
xor
nop
clc
pusha
loope
push
rcrl
loop
inc
mov
dec
shll
add
xchg
dec
cmp
jmp
jge
adc
pop
cld
vdivps
lods
cmp
ljmp
in
ror
mov
mov
stos
mov
jbe
cmp
adc
push
pusha
cltd
jne
or
mov
dec
lret
mov
lcall
push
dec
jno
xchg
dec
mov
xchg
notl
xchg
or
arpl
add
jae
ror
pop
push
scas
lods
and
inc
and
add
shl
push
sbb
and
pop
xor
incl
mov
into
sbb
icebp
sub
and
outsb
adc
push
fwait
mov
call
mov
notl
inc
fsubrs
pop
icebp
jb
test
inc
inc
jge
dec
mov
jmp
or
sub
push
scas
inc
scas
fbstp
or
pushl
jl
add
fiaddl
les
scas
cmp
mov
movsb
inc
outsl
mov
hlt
aas
pop
sub
pop
jmp
fdivrs
inc
loope
test
mov
jbe
adc
cmpsb
and
in
insl
outsl
sbb
icebp
add
cmpsl
pop
cli
rorb
xchg
sub
pushf
adc
sub
mov
repnz
or
fxtract
dec
push
sbb
mov
and
repz
enter
lods
sub
cmp
leave
cwtl
setp
stos
aad
and
out
cmp
jmp
aad
xchg
xor
add
in
push
into
dec
sti
lods
in
and
fwait
mov
scas
icebp
fnstcw
std
mov
push
in
outsb
xor
pop
pop
xor
mov
fs
loope
pop
int3
insl
divl
aad
or
xorl
pop
iret
nop
add
and
dec
int
inc
and
sub
movsb
pop
mov
pop
dec
out
dec
cmp
xlat
xchg
xchg
push
xchg
lcall
sahf
cli
mov
add
push
ja
push
push
lret
cmp
xchg
das
mov
hlt
adc
stos
pop
push
testb
push
push
mov
jnp
js
pop
xlat
jne
inc
aam
inc
outsl
into
lods
int3
xchg
and
or
loop
jmp
fiaddl
scas
imul
mov
notb
adc
mov
aam
push
xchg
ret
sub
pop
in
push
lods
flds
call
push
push
pop
mov
cmp
imul
hlt
mov
push
push
daa
daa
lea
aaa
iret
mov
popf
fwait
xor
je
inc
out
in
pop
cli
ret
push
fld
pop
add
xor
add
nop
or
insl
sbb
mov
xchg
xor
jne
in
mov
sbbb
sbb
ret
into
das
fs
push
outsb
clc
rcll
sbb
cmp
arpl
das
and
sub
lcall
xchg
in
js
push
push
and
fisubs
sbb
jnp
push
rorl
ret
in
push
adc
pop
aam
fcomps
stos
jge
pop
dec
cltd
test
ret
mov
mov
mov
ja
rcrl
push
dec
add
stos
push
cmp
or
jle
sub
sahf
in
xorb
call
sti
lahf
pop
jbe
and
cmp
ds
mov
lods
mov
mov
add
inc
in
sarb
test
imulb
pop
arpl
call
out
jns
repz
adc
in
jecxz
loope
mov
jnp
cmp
push
sbb
dec
adc
xor
pop
popa
adc
push
cmp
xor
nop
or
ret
mov
jmp
lds
jns
adc
add
xor
ret
leave
xor
xchg
mov
leave
xchg
in
jae
pop
jge
mov
mov
pop
lea
cmp
jne
inc
add
aas
cmp
dec
cli
ljmp
lahf
rcll
mov
add
push
out
inc
mov
jbe
pop
orb
sti
cltd
pop
xchg
pop
sti
lods
add
pop
enter
fs
outsb
mov
sbb
cmpsl
movsb
loope
stos
rclb
mov
jmp
and
mov
cmc
xchg
jmp
xchg
movsl
rclb
jae
mov
sbbb
ret
test
jb
dec
movsb
in
nop
mov
sahf
test
xor
or
sub
sub
aas
dec
gs
mov
add
cmp
dec
push
jno
jae
mov
jge,pt
sarl
xchg
sti
mov
div
pop
and
std
mov
enter
sub
xchg
push
mov
dec
data16
scas
and
xchg
push
lret
or
fxch
js
lcall
adc
pop
stos
push
repnz
lods
mov
inc
rcl
xchg
icebp
out
push
mov
fisubrl
ss
pop
xchg
sub
xor
test
rcll
cld
imul
lret
fs
sub
lds
je
dec
pop
mov
inc
call
inc
insl
xlat
jnp
mov
dec
sahf
sbbb
adc
mov
dec
mov
push
mov
insl
push
and
pop
and
and
es
in
pop
or
sbb
mov
nop
test
and
mov
rcrl
add
push
mov
popf
mov
mov
iret
add
xchg
xor
ja
xchg
jae,pn
push
gs
arpl
popf
or
outsb
sbb
rcrl
xchg
push
add
lret
pop
scas
mov
movsb
addl
pop
loope
leave
loopne
mov
or
mov
push
mov
not
inc
mov
lods
aaa
es
loope
leave
call
adc
out
daa
xchg
mov
repz
pop
push
lds
scas
pushf
icebp
sahf
inc
jnp
cmp
icebp
test
repnz
pop
cmp
aas
aad
out
lods
push
pusha
inc
scas
dec
mov
dec
sub
push
pop
cmp
xchg
mov
jnp
mov
test
pop
mov
lds
lret
lahf
pop
popa
xlat
jb
jp
loopne
sti
push
sub
jl
popf
pushl
and
mov
mov
mov
shl
mov
dec
insl
or
jns
or
les
cmp
or
mov
jns
cmp
cmp
fcmove
or
adc
ja
cwtl
je
cmp
xor
pop
xchg
and
xchg
sub
testl
jge
mov
lret
pop
jge
mov
mov
pop
imul
fwait
ret
mov
mov
test
cs
test
les
hlt
pusha
pop
or
out
lret
push
mov
pushf
inc
popf
lahf
jp
mov
and
movsb
loope
mov
in
outsb
adc
mov
outsb
sahf
nop
cmp
sbb
adc
pop
pop
push
jle
lcall
cmp
jge
mov
sbb
popa
int3
stc
jbe
mov
lcall
jp
push
mov
mov
dec
aas
jo
fisubs
jmp
pop
xchg
sbbl
neg
adc
pop
sub
ss
inc
pop
hlt
ljmp
pop
adc
jnp
push
jg
sbbb
ret
jno
fnsave
pop
inc
stos
loop
incl
dec
dec
stc
xchg
xor
fnstenv
sbb
pushw
stc
nop
xchg
xchg
repnz
jne
push
jl
cmp
mov
adc
sub
and
clc
out
xor
add
xchg
and
hlt
mov
or
lahf
mov
aam
adc
and
adc
fs
sahf
fs
shll
or
push
fdivr
pop
jae
out
and
xor
lahf
mov
mov
push
inc
cmpsb
push
xor
pop
mov
mov
jae
inc
imul
cmpsl
lock
in
jecxz
aad
lea
ret
and
aad
sarb
adc
xchg
cmp
mov
imul
adc
mov
frstor
sub
pop
insb
inc
mov
shl
insb
call
add
cwtl
push
push
in
gs
clc
jbe
push
ja
add
add
lea
and
mov
es
int
pop
repnz
push
mov
jl
inc
and
lods
shlb
xchg
std
mov
test
fsts
ffreep
ret
pop
aam
pop
mov
pop
cmp
ljmp
and
push
cmp
andb
or
fidivs
arpl
jo
mov
aam
stos
sbb
and
and
je
jno
add
popf
xchg
adcl
dec
mov
stos
sbb
push
jp
enter
jns
xchg
jo
or
mov
pushl
xor
dec
mov
mov
xchg
add
sbb
inc
inc
mov
pop
in
jnp
popa
sahf
mov
xor
scas
xchg
ss
ja
repz
mov
jo
popa
arpl
das
movsl
movsl
cmpsl
mov
pop
repnz
xor
and
test
sahf
mov
je
insl
jmp
xchg
loope
cld
or
test
les
jle
mov
cmp
push
out
popa
stos
leave
or
sub
ret
mov
cld
mov
ficompl
sahf
push
stc
cmpl
imul
out
cmp
imul
push
iret
repnz
sahf
push
push
shr
xchg
test
mov
add
into
into
gs
inc
shrl
push
inc
lock
jmp
and
test
xchg
stos
sub
movsl
cs
fisubrl
pop
pop
adc
data16
and
jmp
push
xor
jp
lret
jecxz
insl
mov
enter
in
test
adcb
icebp
sbb
stc
pop
call
sbb
mov
mov
mov
jns
pop
mov
push
orb
and
in
push
imul
cmp
inc
js
pop
xchg
outsb
fcomps
jecxz
sbb
and
mov
nop
lcall
lcall
int3
cmc
sbb
fadd
lret
xchg
pop
divb
orps
pop
and
adc
jo
pop
cmpl
push
je
pop
fwait
lock
rcr
sub
ret
jmp
mov
pusha
rcrl
outsl
xchg
js
and
out
push
jmp
and
mov
fmull
mov
sbbb
out
push
jp
test
jbe
xor
mov
mov
in
arpl
mov
nop
inc
insl
pop
gs
out
mov
and
xor
pop
mov
jmp
cmp
jl
xor
jecxz
cmpsb
mov
movsl
das
vxorps
ror
cmc
lea
and
xor
mov
je
orl
in
lret
adc
jo
movsl
std
loope
mov
aaa
xchg
pop
imul
mov
rcrb
sub
cmpsl
xor
lods
jns
jno
or
mov
jo
fdivrp
int
inc
lods
jg
jns
inc
pop
mov
adc
mov
xchg
cltd
fdivr
lret
fisubrl
stos
aad
or
mov
fstpl
jbe
ret
shlb
lock
sub
gs
cmp
inc
lahf
push
mov
dec
std
dec
inc
stos
push
add
fidivrs
add
push
push
xchg
fdivrs
fwait
stos
sub
ror
mov
mov
push
cmc
loopne
jne
lahf
cmc
hlt
dec
mov
negb
dec
inc
mov
negl
movsb
movl
jge
mov
cmc
loop
stc
mov
dec
aam
repnz
jmp
xor
rcrb
jl
push
inc
mov
repnz
test
jno
inc
mov
iret
stos
data16
xlat
test
add
scas
xchg
xchg
aam
or
push
cmp
push
add
inc
lea
das
shr
out
pushf
pusha
adc
sbb
mov
lret
mov
into
xchg
and
pop
sub
jmp
and
insl
cld
roll
sahf
fildl
lcallw
pop
jo
pop
jbe
xchg
adc
stos
leave
jnp
mov
pop
gs
inc
cmp
popa
adc
adc
mov
std
mov
add
leave
rcrb
xchg
adc
test
and
pop
dec
push
sbb
pop
cmp
lret
adcl
scas
adc
pop
fsubrp
push
pop
mov
ret
lahf
mov
add
adc
xor
push
movsb
adc
pop
xorl
daa
pop
xchg
ficoml
mov
xor
and
nop
or
and
lret
clc
cmp
ja
leave
scas
jb
mov
lret
in
inc
imul
stos
xchg
test
leave
popa
xor
xchg
data16
andl
mov
and
pop
push
push
test
add
or
pop
aaa
mov
test
xchg
loopne
lcall
jp
andb
fwait
sub
add
jmp
pop
stc
pop
rcrl
add
jle
loopne
scas
dec
lods
lods
out
inc
jp
in
add
push
add
mov
sub
movsb
out
mov
pop
jae
dec
add
cmp
pushf
jnp
add
xchg
push
inc
ja
add
repnz
call
leave
ds
movsl
and
inc
or
enter
movsb
fwait
push
int3
or
cmp
test
leave
cld
hlt
cmp
fimull
cs
dec
in
cs
push
sbb
push
dec
addb
in
rcrb
cmpsb
lcall
jae
inc
rcrb
sbb
xchg
mov
push
add
dec
xchg
xor
mov
cld
push
push
ja
movsl
mov
jne
icebp
inc
jb
shrb
dec
mov
fisubl
push
incl
pushf
clc
idivb
jo
mov
fstps
push
xchg
aaa
popf
and
mov
loop
inc
pop
dec
add
cmp
pop
popa
pop
xchg
andl
sti
sbb
popf
push
inc
test
loopne
push
fnstenv
data16
daa
jmp
icebp
mov
xor
mov
repnz
pop
inc
inc
nop
rcrb
sub
fs
xchg
roll
cwtl
cli
cmp
ret
clc
and
push
dec
les
cmp
adc
ds
cmp
in
stos
and
stos
cltd
xchg
aaa
xor
mov
icebp
dec
mov
sub
mov
sbb
xor
jp
loop
push
sti
xor
jno
pusha
inc
cld
fwait
test
mov
add
jge
jmp
add
divl
bound
xchg
je
repz
push
setnp
adcb
push
mov
sbb
sub
out
fs
ret
pop
jmp
mov
vprotd
push
and
scas
mov
jmp
shll
imul
xor
aad
movsl
sub
ss
push
jl
cli
lods
je
cmp
push
adc
flds
xor
arpl
in
push
dec
add
inc
cltd
cltd
ret
xor
je
test
adc
xchg
cmp
out
xchg
push
scas
or
pop
cmc
sbb
std
not
insl
xchg
xor
dec
or
dec
call
sbb
dec
imul
daa
adc
and
int
ror
in
pushf
imul
loope
popa
hlt
inc
lods
ror
mov
popa
aaa
jns
and
xchg
int3
sub
and
int3
mov
cmp
out
icebp
mov
push
push
cli
aas
loopne
loope
movsb
loop
sub
xchg
mov
sub
jbe
iret
or
pop
adc
loop
dec
lods
int3
int3
push
loopne
fbstp
imul
int
clc
jl
in
adc
xor
sbb
sub
aas
adc
sarb
nop
push
push
cmc
fdivr
iret
sbb
divb
cmp
mov
test
enter
lds
push
stos
fadd
hlt
pop
xlat
jns
and
fs
mov
test
inc
dec
cwtl
mov
fildl
stc
adc
push
pop
jb
idivb
sarl
push
repnz
mov
fcmovu
sbb
push
jle
inc
fnstsw
push
sub
das
mov
cli
and
lods
mov
mov
subb
movsl
xchg
fcompl
xor
call
call
lock
xchg
mov
pop
call
pushf
in
jno
out
push
and
jecxz
or
loopne
sub
test
pop
or
adc
loopne
ds
add
imul
sbb
xchg
test
das
mov
or
outsb
enter
jmp
sbb
fs
je
std
gs
adc
mov
subl
xlat
jno
jo
inc
cld
push
fsubs
imulb
js
push
fidivrs
popa
push
popf
mov
hlt
dec
mov
sbb
push
jl
lods
jp
xchg
jecxz
fdivs
lcall
pop
jbe
lods
push
std
mov
dec
test
repz
xor
leave
repnz
jmp
mov
pop
pushf
push
xor
xchg
jno
je
aad
cwtl
sbb
addl
out
adc
push
push
jle
in
jmp
stc
xchg
sub
and
sub
mov
cmc
jne
xor
and
sub
lcall
xor
mov
inc
mov
test
in
negl
out
fnstsw
rol
pop
push
push
dec
jo
cmpsl
xchg
mov
fcoms
push
std
push
subl
xchg
fs
pop
pusha
popf
ljmp
dec
into
inc
call
mov
cld
add
sbb
aam
repnz
stos
fstl
std
sbb
mov
ret
mov
les
aad
add
sub
mov
popf
push
cmp
jge
xor
inc
popa
pop
subb
ljmp
fsubrl
add
xor
jne
je
push
test
add
outsb
xorl
ss
xor
cmp
jbe
fs
jmpw
loop
icebp
dec
lock
pusha
imul
daa
jle
xchg
inc
insb
pusha
xorl
push
mov
rcrl
sar
cmc
and
add
lods
push
pop
mov
fcmovnbe
rclb
pop
imul
xchg
ja
ljmp
push
imul
rolb
loopne
ss
jecxz
fsubrs
push
xor
test
adc
adc
clc
jne
inc
movsl
lds
loopne
sub
push
mov
dec
lods
movsb
jmp
cmpsb
or
ret
pop
aas
pop
popf
pop
jae
cmp
xor
jle
pop
out
idiv
dec
mov
mov
into
lret
mov
xchg
lds
sub
jg
sahf
mov
push
outsb
icebp
pop
dec
mov
leave
cmp
sahf
test
jle
push
fwait
sarb
adc
imul
lods
or
out
stos
lds
mov
lahf
mov
iret
aas
pop
pop
clc
mov
mov
fiadds
adc
rolb
push
and
jp
adc
enter
xchg
mov
or
dec
rcrl
mov
negb
and
adc
dec
jns
fcomi
sti
out
paddb
outsb
xor
addr16
pop
xchg
loopne
inc
clc
in
jmp
pop
aad
push
sbb
push
or
lahf
or
xchg
test
mov
aas
sub
pop
add
cmc
movl
lods
in
ds
std
sbb
es
inc
jmp
jge
test
mov
incb
fistl
xor
enter
and
data16
dec
jmp
cld
fidivl
mov
lcall
aam
xchg
popa
cld
aaa
xor
push
xchg
icebp
mov
movsl
hlt
xchg
pop
nop
dec
movsb
add
dec
scas
sbb
jnp
dec
mov
inc
push
mov
pusha
mov
jmp
clc
xchg
adc
pusha
cmp
cwtl
mov
adc
int
add
jge
mov
jecxz
mov
cmpb
stc
sbb
inc
shlb
pop
sbb
add
fs
sub
cld
lock
mov
sub
sub
mov
jnp
cmp
mov
rol
test
jbe
filds
hlt
pop
pop
mov
sti
leave
cli
xor
fdivrl
or
dec
frstor
stc
ret
cld
mov
mov
mov
push
ret
outsb
adc
add
rcl
sub
and
add
inc
mov
mov
mov
fdivr
push
jge
lods
clc
cld
cli
mov
inc
pop
add
adc
fistps
mov
mov
imul
fs
xor
mov
lcall
xchg
sub
xchg
popf
pop
push
mov
in
fiadds
push
mov
rcrb
sub
sbb
or
loop
sbb
mov
iret
dec
mov
aas
push
je
and
xchg
inc
stos
xchg
xchg
lods
cmp
rcl
stos
pop
push
movsl
push
push
and
testb
loop
jnp
inc
cmp
popa
dec
stc
ret
cmp
push
mov
stc
mov
lret
cmp
das
lods
cmp
cmpsl
insb
pop
add
setge
cmp
outsl
inc
dec
pusha
mov
lock
push
sbb
push
and
adc
xchg
add
inc
enter
jo
sub
sub
pop
orb
or
sbb
push
je
in
into
stc
je
sub
dec
int
cli
push
dec
ss
jne
out
mov
dec
push
push
ljmp
jne
cmp
pop
mov
hlt
xchg
loope
push
add
pop
out
mov
mov
movsl
scas
jae
jg
inc
fidivrs
imul
idiv
mov
pop
inc
push
pop
mov
fldl
mov
xlat
mov
pop
jno
sub
inc
in
adc
or
add
jae
cmp
loopne
mov
mov
popf
mov
dec
fwait
sti
in
xor
mov
mov
mov
push
ret
add
jbe
enter
enter
cmpsb
lret
test
push
or
pusha
xchg
xchg
xor
mov
scas
loop
mov
sahf
jne
sub
in
mov
icebp
sub
adc
mov
loope
push
and
sbb
xchg
sbb
mov
inc
test
add
sbb
push
icebp
sub
fistps
imul
sbb
xor
stc
es
cmp
inc
lahf
ja
rcl
cld
enter
scas
int
dec
pop
inc
jbe
pop
cmp
mov
cmp
adc
cmp
fnstenv
pop
or
or
mov
xor
iret
mov
xchg
pop
fs
jb
out
inc
lock
cmc
pop
xchg
mov
pop
mov
jb
cltd
lea
sub
mov
jnp
leave
movsb
shll
dec
mov
xchg
mov
mov
fwait
mov
ret
pushf
cwtl
sbb
sub
mov
mov
mov
push
mov
sti
jp
xchg
pop
adc
inc
div
out
mov
dec
sbb
push
shr
mov
pop
inc
xchg
scas
scas
add
lds
sbb
stc
mov
mov
add
pop
inc
or
xchg
push
cs
std
push
rcrl
ret
lods
lock
fimull
mov
fnstsw
sub
iret
mov
imul
shlb
jecxz
push
add
ud2
cmp
xchg
jge
in
mov
imul
pop
push
pop
sub
loopne
arpl
out
repnz
ret
packssdw
es
jno
and
lcall
xor
push
mul
mov
mov
fadds
ret
jne
inc
test
pop
adc
mov
fdiv
daa
pop
push
das
xor
jae
mov
jmp
jno
push
lods
jp
into
dec
jb
sub
cmp
xchg
xchg
add
lds
scas
or
movsb
popa
mov
cmp
sub
into
cli
pop
test
pop
cmpl
sahf
pop
cmpsl
cli
xor
vhsubpd
in
clc
sub
add
xchg
jb
sbb
xchg
add
adc
rorb
add
lcall
mov
bound
jne
rcll
jl
loope
jno
in
dec
adc
cmp
out
pop
dec
aam
jns
outsl
and
pop
nop
sbb
scas
mov
out
jns
mov
cli
and
xchg
out
jmp
adc
out
mov
lds
adc
xchg
dec
pop
mov
fwait
imul
adc
push
lret
inc
in
mov
pop
dec
pop
or
dec
cltd
repz
and
outsl
and
inc
mov
xchg
mov
add
icebp
ds
sub
cli
cld
fwait
mov
iret
fwait
xchg
inc
add
sbb
cs
cli
adc
cs
pop
mov
stos
inc
je
stos
lods
ja
fiadds
xchg
mov
mov
inc
mov
pop
pushf
repz
add
pop
cmp
fs
sbb
jb
in
inc
adc
lea
jl
outsb
and
lahf
fsubs
shlb
stos
lds
add
in
stc
adc
aam
add
cli
push
test
cmc
insb
jle
iret
cmp
mov
in
sarl
movsb
pop
or
aas
shr
sub
je
jmp
dec
aas
cmpsb
mov
sub
lret
add
sub
and
into
adc
pop
ljmp
inc
fistps
hlt
mov
inc
daa
fldcw
push
and
lret
repz
das
lock
pop
sub
sbb
in
aam
cmp
popa
mov
not
inc
add
or
xchg
mov
popf
and
mov
idivb
add
movsl
mov
repnz
sub
push
sbb
xchg
ds
loopne
xor
rcrb
stos
inc
roll
arpl
ss
cmp
loop
mov
jno
test
ret
inc
int3
mov
xchg
inc
sub
ret
inc
mov
sahf
add
imul
add
mov
push
cmp
push
add
ret
aad
cmp
pop
cmpsb
data16
add
xor
int
sbb
das
mov
loop
and
enter
lds
sti
and
add
dec
hlt
jns
aad
push
adc
fdivrs
mov
es
popf
push
sub
inc
pop
adc
jne
shl
aaa
gs
ret
or
mov
lea
gs
mov
xor
popf
cli
loopne
ficoml
adc
pop
lea
aaa
aam
jecxz
push
leave
adc
or
ret
leave
test
adc
scas
lds
lea
mov
imul
inc
in
ja
insl
push
enter
fsubl
pop
dec
push
jae
sbb
inc
call
push
jle
jns
leave
cmp
xorl
inc
xchg
and
nop
push
lea
cmc
inc
jno
xlat
mov
in
jp
push
ffreep
cmp
mov
insb
loope
scas
test
fcomps
test
jge
in
pop
mov
sub
loopne
adc
out
in
das
sbb
or
pop
mov
scas
xchg
mov
cmp
xor
in
mov
add
rcr
add
aas
shrl
xchg
mov
idiv
pushf
lds
push
cld
dec
imul
dec
xor
sub
mov
jae
out
in
or
insl
in
mov
inc
cmp
aam
aaa
mov
and
jb
movsl
mov
xorl
jnp
pop
cmp
cmc
dec
push
mov
dec
pop
in
sbb
xor
push
add
aaa
mov
rcrl
bound
cmp
sbb
dec
addr16
rorl
fists
cltd
sub
push
pop
roll
loopne
pop
xlat
imul
mov
aam
mov
or
dec
dec
aam
add
cld
jb
inc
inc
mov
ljmp
mov
cs
ret
cmp
popl
jne
jo
scas
test
add
mov
add
loop
fistpll
arpl
mov
sub
push
comiss
sub
arpl
and
mov
mov
jge
mov
dec
out
loope
jo
cwtl
sub
test
mov
insb
pop
push
in
adc
mov
pushf
out
in
mov
sti
cli
fistpl
or
mov
xlat
repz
dec
fdivr
xor
jbe
pop
je
xor
pop
insl
jmp
xchg
jl
scas
lods
or
lea
or
nop
lea
daa
cltd
jne
test
push
lret
pop
shlb
lcall
enter
inc
subl
ds
mov
andb
pushf
push
lock
call
shrb
fisttpl
lcall
jmp
cmp
or
inc
imul
sub
pop
stos
inc
insb
mov
dec
dec
add
jmp
pop
push
sub
mul
fimull
nop
push
in
shll
push
adc
cld
push
enter
or
push
pop
sbb
bnd
mov
hlt
lret
outsb
cmp
xchg
mov
cmp
stc
test
jbe
sbb
add
mov
pop
std
jp
mov
push
cld
jp
sbb
aaa
jae
bound
pop
rcrl
cmpsl
pop
sbb
pop
rolb
xchg
sahf
mov
jno
addb
out
pushf
aam
sub
sub
dec
loope
inc
pop
pop
out
lret
lahf
sahf
adc
repz
dec
ljmp
jns
jmp
daa
outsl
mov
test
sub
dec
jecxz
fwait
stos
jno
jecxz
shrl
insl
fdivs
lods
lahf
xchg
mov
je
adc
mov
pop
mov
stc
xor
xor
and
mov
insb
repnz
test
xor
xor
loope
pop
mov
in
enter
mov
jne
inc
hlt
ror
mov
popa
out
fs
sarl
cmp
adc
sub
mov
gs
sub
dec
fldt
and
addr16
xchg
jg
jns
inc
mov
mov
add
icebp
ja
sbb
mov
or
mov
ficompl
jl
fldt
ficomps
mov
xor
sbb
mov
dec
fnsave
stos
jne
mov
aam
xor
shll
xor
out
mov
adc
leave
ret
pop
nop
xchg
ljmp
pusha
xor
leave
daa
in
xchg
into
add
ljmp
out
scas
fistps
jno
idivb
push
mov
mov
scas
cmp
dec
fbld
add
sahf
xor
push
or
jle
ret
pop
push
xor
xor
or
mov
loopne
fdivp
loope
es
in
add
js
push
das
adc
xor
jns
xor
scas
xor
imul
inc
in
mov
inc
sub
es
cld
ljmp
inc
pop
repnz
mov
lods
adc
mov
add
cmp
fwait
testb
sbb
fstps
ljmp
rorb
stc
jo
das
xor
scas
jb
test
xchg
jmp
mov
enter
xor
int3
mov
cmp
repz
mov
mov
pop
dec
mov
jne
mov
clc
mov
xchg
shll
mov
movsb
cs
sub
push
cli
add
fmull
out
scas
cmp
jbe
push
imul
inc
aaa
cmp
daa
add
mov
shl
outsb
fstps
or
add
or
cmpsb
jmp
sub
pop
cmpsb
pop
scas
push
repnz
shlb
aad
xlat
sub
je
lods
sarb
inc
test
orb
xor
lds
std
rcrl
les
mov
mov
mov
leave
andl
sbb
movsl
daa
push
or
mov
inc
jl
sub
jle
inc
mov
pop
aad
sarb
bswap
jbe
das
ret
push
daa
sbb
dec
int3
push
imul
mov
ja
adc
rclb
stos
push
mov
jnp
testb
mov
xchg
push
xlat
jae
pop
dec
add
popf
add
xor
jb
push
icebp
xor
arpl
pushf
add
outsb
in
and
out
test
add
jecxz
cmpsl
jmp
pop
in
mov
and
add
inc
pop
jns
popa
cmp
ljmp
jmp
imul
mov
jo
std
jp
or
outsl
push
push
dec
lods
call
sbb
lds
cld
dec
adc
addl
std
aad
lock
negb
mov
addr16
lods
mov
je
cmpsb
les
mov
add
adc
test
cwtl
xor
nop
repz
xor
sbb
test
sarb
pop
je
orb
test
adc
sbb
sahf
jnp
sbb
inc
nop
mov
loope
fs
test
xchg
fistps
repnz
or
fcomps
jle
aas
pop
mov
mov
loope
aas
dec
mov
mov
xor
mov
or
ds
in
fcmovb
sub
pop
dec
xchg
cmp
pop
clc
andb
or
int3
je
xchg
outsl
inc
out
inc
mov
push
fcmove
aas
stos
push
mov
cmp
mov
aad
in
mov
mov
dec
popl
gs
sub
jg
mov
rolb
push
and
add
push
inc
fbld
add
loope
out
sti
in
nop
bound
xchg
popf
cmp
xor
sti
jge
dec
and
insl
scas
sti
xchg
cli
and
movsl
arpl
nop
xor
js
xchg
movsl
data16
movsb
mov
dec
xlat
jne
or
fcmovnb
jae
pop
adc
push
push
test
xchg
es
mov
out
imul
dec
xor
sub
pop
lock
rcrb
fcmovnu
mov
adc
sub
jmp
pushf
sub
dec
xor
dec
mov
lcall
mov
dec
and
fisubs
cmpsb
je
jne
pop
push
xor
arpl
movsl
lret
rolb
lahf
add
pop
cmpl
lods
adc
sub
sarb
gs
adc
xorb
jmp
aam
test
dec
pop
pop
nop
jge
mov
test
or
push
inc
cmc
jae
xor
fucomip
loop
adc
adc
out
pop
xchg
stos
ret
imul
jbe
dec
fadds
sub
and
pop
xchg
mov
sbb
ljmp
xchg
cmpsb
test
lods
mov
insl
dec
dec
aas
xor
ss
mulb
jnp
adc
pop
insl
and
mov
mov
cs
pop
jnp
xchg
out
test
pop
mov
out
imul
jnp
mov
dec
fisttpl
test
cmpl
pop
shll
rclb
push
mov
cmpsl
movsl
fstp
addl
xchg
inc
push
js
xchg
pop
jbe,pn
fs
cmp
lret
daa
cmp
dec
loope
push
shl
mov
or
or
xchg
ss
hlt
adc
sbb
mov
test
dec
andb
push
mov
mov
sub
out
jl
jecxz
xchg
push
inc
mov
fmull
adc
mov
or
out
pop
push
cmc
inc
clc
icebp
adc
push
mov
mov
out
icebp
sub
adcb
fimull
outsb
mov
add
outsl
mov
clc
and
cltd
icebp
pop
aam
lods
fwait
inc
filds
sbb
mov
jmp
popf
jecxz
test
sbb
mov
arpl
xor
lods
out
mov
or
cmc
in
xchg
push
cwtl
mov
inc
sub
xor
loop
cmp
sbb
pushf
rorl
lods
dec
fists
xchg
xchg
rcrl
mov
add
jle
imul
rorb
push
int3
pop
clc
loope
dec
mov
xchg
lcall
mov
inc
mov
into
lock
and
sbb
movsb
aaa
adc
sarl
mov
ja
push
enter
sahf
in
mov
mov
outsb
fdivp
mov
dec
cmp
add
add
jg
call
int3
mov
push
sub
sub
xor
and
dec
test
fnstsw
test
push
jmp
inc
or
mov
stos
repz
xchg
ror
cmp
cmpsb
mov
xchg
in
js
call
aam
sbb
sub
cmp
repnz
cmp
hlt
lret
add
add
popa
fwait
ja
repz
jns
je
into
xchg
inc
shr
je
sub
mov
pop
mov
leave
dec
or
mov
loopne
adc
test
xchg
out
dec
test
inc
dec
in
pop
xchg
loopne
in
jle
add
xchg
addr16
dec
adcb
idivb
insl
inc
sarb
shr
ret
jo
mov
mov
mov
inc
mov
inc
fmuls
popa
das
rorb
dec
icebp
pusha
les
xor
js
mov
pop
mov
cmp
pop
test
xchg
dec
sub
add
jbe
lret
sbb
imul
mov
cmp
movsl
or
add
xor
es
push
mov
and
mov
xchg
outsb
mov
les
and
push
ljmp
lcall
cmp
cmpsb
icebp
aad
sbb
sbb
inc
nop
and
dec
insb
js
sub
mov
gs
in
stos
popa
dec
jg
xchg
je
push
testl
add
imul
lahf
push
mov
inc
and
inc
and
in
push
and
cmp
sti
push
popa
dec
test
or
dec
lea
xlat
mov
push
rol
jo
dec
mov
add
popa
mov
enter
stos
adc
bswap
and
test
cli
jno
aam
mov
popf
dec
dec
fidivs
fstl
shll
scas
ficompl
imul
aam
fiaddl
imul
pop
incb
or
xor
mov
jg
test
fs
in
stc
pop
xor
std
sub
push
cmp
push
mov
outsb
jae
xchg
rcll
or
repz
dec
cmpsl
inc
sbb
ret
pop
test
fcompl
mov
mov
push
ud0
adc
push
add
xchg
fildll
xor
das
push
push
icebp
push
test
je
dec
jge
jmp
sbb
insl
xor
xchg
xor
push
repz
push
in
cmp
fbld
inc
ret
mov
add
xchg
pop
push
movsl
dec
jmp
jne
push
push
mov
aam
xor
shlb
or
push
lea
push
not
inc
enter
aam
mov
es
inc
es
inc
jl
jb
int
cmc
xorl
mov
popf
stos
adc
and
ljmp
out
jbe
inc
iret
test
ret
xchg
pop
sbb
fildll
jge
int
mov
enter
fucomi
mov
or
stos
in
js
std
sub
into
andb
aam
fisubl
pop
jle
or
sahf
and
jno
dec
rcr
push
or
and
sbb
sbb
xchg
aas
mov
push
insl
std
push
stc
cmc
ret
mov
jb
sbb
pop
mov
add
push
push
dec
mov
sbbb
pop
std
pop
in
and
out
mov
mov
mov
popa
mov
sbb
mov
cwtl
jae
inc
addr16
int3
jne
mov
or
add
ret
lahf
fisttpl
dec
aam
inc
clc
mulb
imul
mov
sahf
clc
out
ret
push
loop
icebp
sbb
cmp
mov
test
push
nop
or
adc
test
lods
jns
fs
sbb
jno
sbb
push
clc
loope
loope
adc
mov
cwtl
shll
sar
sbb
pop
mov
dec
out
sbb
int
shlb
inc
addr16
mov
cmpsl
testl
stos
mov
arpl
flds
pop
pop
cmp
xchg
xchg
pop
incl
jne
sub
push
aas
xor
das
outsl
rorb
push
push
mov
cld
iret
xchg
mov
inc
jmp
rcll
and
or
ret
xchg
enter
rclb
aas
inc
inc
insb
add
rolb
xchg
cwtl
jbe
and
mov
test
jp
add
adc
xor
and
jmp
mov
in
mov
inc
lds
js
adcb
enter
ja
gs
jmp
iret
push
fiadds
lret
push
jnp
mov
xchg
inc
pop
imul
mov
mov
movsl
test
cmp
jg
lcall
xchg
pushf
xchg
or
push
pop
shll
out
and
stos
mov
inc
fwait
push
lahf
mov
push
cmpsb
jp
sub
push
sahf
mov
inc
and
addr16
in
sbb
cwtl
mov
mov
mov
xchg
cmp
imul
scas
xor
xchg
xchg
xchg
push
jns
mov
mov
sbbb
andb
sub
leave
or
jp
mov
cli
int
push
repz
mov
es
sbb
dec
mov
jns
pop
pop
ret
sbb
fs
mov
inc
outsb
test
rcrl
sahf
xchg
dec
imul
mov
cld
push
inc
add
fsts
cltd
scas
inc
mov
sub
sarl
pop
dec
inc
loopne
push
pop
ficomps
jno
jae
cmp
clc
push
jmp
daa
xorl
mov
cmp
mov
fadd
cmp
and
movsl
mov
mov
xchg
push
cmpsl
sbb
push
or
push
lea
lds
mov
les
aam
sub
push
xor
in
cmp
mov
push
std
fsubrl
jnp
mov
jle
popf
push
or
mov
aas
and
loopne
pop
push
or
pusha
sar
call
dec
cmpsl
inc
lods
xor
fbld
int3
cmpsl
push
scas
lds
xchg
sbb
fstpl
inc
or
jae
pusha
movsl
out
jns
rcrl
xor
pop
imulb
mov
sub
pop
test
adc
call
or
mov
mov
and
loop
movsl
xchg
cmp
inc
dec
fisttpl
cmp
addr16
mov
dec
xchg
pop
mov
pop
jae
pushf
lds
adc
mov
xchg
mov
cmp
outsb
adc
ret
stos
shlb
mov
stos
dec
in
rcl
pop
push
cwtl
mov
push
adc
push
rorb
mov
cmp
lds
shr
jae
int3
mov
sub
int3
mov
movsl
addr16
ret
cmp
out
jb
jg
or
aaa
rorb
xor
addr16
aaa
mov
pop
fwait
or
js
mov
out
xchg
out
sub
mov
dec
outsl
out
test
mov
mov
jecxz
cmp
dec
sbb
cmp
or
add
cwtl
repnz
sar
xlat
ds
and
jne
cmp
xchg
push
mov
out
shll
inc
inc
cs
andb
mov
insl
jo
dec
pop
fistpll
int
xor
aaa
daa
jnp
push
adc
test
and
push
push
leave
push
jecxz
into
arpl
ror
cmp
xchg
jne
mov
mov
pusha
xchg
cmpsb
cltd
jmp
xor
xor
stos
ffree
lahf
adc
and
les
hlt
xchg
dec
pop
xchg
aam
test
test
bnd
clc
lock
mov
jbe,pt
insb
daa
mov
lea
inc
imul
out
aad
aaa
push
xor
aaa
ds
shlb
inc
or
mov
dec
push
sbb
xchg
sahf
aam
pop
fwait
push
out
mov
ret
arpl
cmp
adc
lea
mov
mov
in
adc
inc
mov
xlat
cli
lock
or
call
mov
mov
lods
jae
fisubrs
nop
lods
and
inc
xor
inc
repz
pop
call
lds
mov
pop
stos
mov
sbb
andl
mov
mov
hlt
rclb
pop
fisubl
dec
adc
xor
repnz
push
push
jl
dec
push
mov
clc
pop
test
insl
out
dec
sub
fcoml
lods
testl
movsb
push
ja
fwait
jbe
ret
leave
cmp
in
push
jg
out
andl
aaa
in
mov
push
leave
mov
or
or
sub
pop
mov
mov
std
xchg
test
ret
pop
and
pop
insl
mov
cmpsl
xor
mov
movsb
aad
movsl
idiv
js
cli
fwait
mov
ret
in
les
dec
mov
xchg
cmpsl
mov
xchg
push
xor
jg
mov
cltd
nop
insl
lret
add
cld
sahf
incl
scas
pop
js
pusha
xor
mov
iret
mov
mov
fwait
call
pop
fistl
pop
add
or
ret
xchg
jp
rorb
nop
adc
lods
xor
dec
fwait
mov
std
insl
sub
clc
das
xor
roll
out
imul
out
aas
xchg
test
jnp
cs
lahf
push
pop
in
sbb
btc
shrl
jge
lret
lods
jbe
pop
not
push
pop
xchg
add
xor
mov
cmpsl
rcrb
ljmp
jnp
movb
out
fimull
iret
mov
and
call
pop
inc
std
pop
cld
leave
pushf
call
mov
mov
inc
out
jno
cltd
xor
dec
adc
shlb
out
lea
and
xor
xchg
int
xchg
or
and
je
adc
shr
jne
mov
mov
arpl
jmp
sbb
sub
or
dec
add
popa
int
jl
test
add
into
clc
mov
xor
movsl
cmp
dec
iret
icebp
or
xchg
ja
clc
xlat
mov
sbb
jmp
sub
adc
je
add
std
data16
or
dec
roll
std
stos
pop
fsubl
mov
mov
cwtl
jb
fs
dec
dec
pop
pop
push
xchg
sbb
shlb
xchg
jecxz
hlt
sub
or
xchg
pop
pushf
in
cmp
dec
pop
jecxz
dec
xor
and
mov
les
push
mov
pop
stc
jnp
pop
or
or
dec
call
jbe
mov
sub
jmp
sub
inc
mov
dec
xor
inc
stos
push
jmp
cltd
negb
test
jl
lock
imul
push
add
mov
jae
mov
lds
pop
inc
ss
mov
ja
fwait
xlat
outsl
insl
jp
shll
data16
mov
inc
jge
les
ja
test
adc
in
mov
mov
inc
xlat
data16
out
jb
cmp
insb
ja
push
xlat
hlt
inc
push
cs
fstl
fnstsw
fcompl
loopne
sahf
cmp
stc
icebp
sahf
in
scas
adc
inc
pop
cli
mov
dec
pop
add
jle
pop
pavgw
call
arpl
lcall
dec
int3
xor
ljmp
pop
jmp
and
pop
sub
sub
frstor
cld
mov
add
ja
cmpsb
idivb
or
mov
loope
lods
shrb
add
loopne
jbe
jae
outsl
pop
in
xor
xchg
dec
out
cmp
sub
dec
gs
xchg
inc
sub
popf
sub
aad
in
or
pop
pop
or
or
inc
mov
and
scas
push
sbb
mov
push
mov
data16
pop
jns
stos
mov
pop
dec
call
ret
dec
mov
adc
pusha
pop
adc
pop
jle
loopne
xor
mov
jo
loope
es
insl
pop
jp
rorl
outsl
int
inc
inc
lock
pushl
cld
xor
flds
sbb
aam
sbb
fwait
mov
push
pusha
cmp
jns
push
add
or
pop
outsl
jp
jns
push
inc
fldl
jg
mov
decb
lds
stos
jl
pop
sbb
push
out
mov
lock
rcr
and
sbb
cli
mov
and
pop
fstpl
sahf
mov
lods
rcrb
sarb
xor
enter
and
sbb
sahf
cwtl
mov
mov
mov
jge
lcall
faddl
mov
sbb
pop
cmp
fnsave
fwait
mov
mov
jmp
repnz
xchg
insb
cmc
int
imul
dec
orb
xchg
movsb
and
aam
into
cmp
stos
sbb
push
ja
loope
arpl
cwtl
mov
adc
sub
movsl
ficoms
outsb
mov
lcall
test
mov
in
pushf
mov
inc
dec
jmp
daa
pop
sub
into
test
push
mov
clc
in
push
int
cwtl
sbb
mov
xor
in
fistpll
std
imul
inc
loop
xchg
jmp
test
test
mov
in
outsb
lods
jg
setns
popf
pop
cmp
jge
jmp
roll
rol
es
int3
clc
addr16
ds
fiadds
stos
sub
div
mov
mov
jge
add
inc
repnz
loopne
or
mov
jl
outsb
loope
sbbl
mov
sbb
loope
push
in
add
test
mov
dec
daa
pop
pop
testl
xchg
fsts
push
jne
xchg
loope
and
sub
pop
push
inc
push
fwait
or
add
nopl
rep
daa
xorl
mov
jae
js
stos
and
ret
imul
neg
clc
inc
push
jecxz
mov
insl
mov
jmp
adc
fdivrp
push
mov
fs
mov
push
lods
div
mov
lahf
jbe
cmpsl
push
mov
and
push
sbb
mov
orps
mov
push
sub
push
mov
call
push
aas
arpl
cmp
sub
push
inc
int
push
xchg
andl
faddl
cmp
gs
push
jle
mov
inc
scas
ret
pop
push
aam
mov
into
lcall
lds
and
in
fwait
xchg
sub
pop
lahf
arpl
imul
mov
addr16
test
jnp
jmp
dec
sub
addr16
pop
shrb
cltd
jbe
lods
lahf
jecxz
icebp
add
dec
cmp
mov
add
xchg
push
push
adc
addb
cs
push
push
xchg
add
mov
aas
repnz
mov
mov
sbb
fdivrl
loope
ret
pop
cmpsl
jmp
or
jno
push
loope
adc
xchg
dec
dec
aam
fildll
divb
dec
push
mov
iret
ret
ds
addr16
repnz
mov
cltd
cs
ljmp
shrb
dec
inc
xor
ret
mov
mov
js
inc
cmpsb
repnz
cmp
sti
pop
imul
push
dec
push
add
inc
cmp
mov
mov
sar
ret
mov
jae
sti
pop
std
adc
pop
out
xlat
imul
icebp
mov
mov
push
jmp
cmc
fimull
loope
xchg
outsb
pop
test
fidivrl
jmp
les
dec
das
aad
jno
fdivr
cs
and
sub
imul
lret
pusha
test
dec
ja
jmp
inc
pushf
mov
test
mov
lcall
xor
lret
adc
xor
int3
adc
and
mov
ret
jl
outsl
push
repz
jge
adc
xchg
mov
adc
in
ret
and
inc
inc
std
mov
adc
ret
shl
test
ret
or
mov
fdivrl
jo
hlt
sub
out
push
in
test
dec
int3
hlt
cmp
fs
pop
into
cmp
mov
insb
fiaddl
push
out
into
lds
out
daa
pop
out
sub
mov
popf
cmp
inc
inc
aam
subb
je
and
mov
sbb
ds
cli
orb
inc
adc
imul
jge
mov
xchg
ljmp
jno
and
xchg
scas
dec
mov
push
cwtl
cmc
xchg
in
aas
cmp
leave
xchg
push
lcall
mov
aad
xchg
inc
loope
loope
jo
adc
push
loopne
fwait
xor
mov
sbb
add
aam
sub
adc
int3
in
mov
adc
xchg
push
ret
push
lock
push
je
adc
add
enter
aaa
or
jle
adcl
jge
pop
fwait
jae
mov
ja
mov
out
aad
sbb
out
cmp
or
out
test
jecxz
or
sub
lret
mov
lock
adc
dec
nop
mov
test
lods
daa
imul
sub
jae
ret
arpl
popa
cmp
dec
rcrl
sub
xchg
jns
icebp
and
rclb
lock
pop
jmp
in
repnz
mov
jnp
fldt
in
mov
pop
arpl
adc
pop
push
aam
fdivrl
push
jo
mov
dec
fiaddl
fwait
inc
add
cmp
fisubrl
out
ret
les
test
popa
mov
lods
cmp
push
mov
aam
rcrb
mov
ss
in
fisubrl
ja
push
jp
xchg
sub
mov
popf
imul
das
sub
sub
push
sbb
pushfw
sub
mov
or
sahf
scas
mov
leave
adc
xchg
aaa
fstps
addl
push
movsl
add
sbb
inc
or
jae
and
and
std
sbb
mov
mov
inc
std
and
stos
cs
enter
pop
fwait
cmpsb
xchg
or
rorb
or
aaa
out
js
pop
stos
inc
pop
les
push
dec
int3
mov
dec
das
arpl
lods
cmp
jmp
adc
gs
xchg
xchg
stos
call
das
xchg
nop
add
and
sub
dec
inc
sarl
pop
jle
jbe
les
scas
cmp
cmp
test
shl
add
push
in
cmpsb
mov
dec
pop
jbe
in
mov
xchg
mov
das
fsin
mov
pop
mov
adc
mov
sub
cmp
gs
mov
fdivl
stos
mov
sbb
jl
inc
loopne
popa
xchg
and
inc
inc
lcall
cmp
pop
ja
je
je
adc
scas
xlat
mov
popf
daa
pusha
shl
lret
mov
jno
imul
sbb
xchg
vsqrtpd
xchg
scas
mov
cwtl
std
movsl
xlat
aad
cmp
dec
jp
xor
xchg
jle
aas
cmpsl
iret
pop
and
or
js
jne
push
xor
loop
adc
cmpsb
test
jb
sub
cld
adc
lahf
xor
mov
push
in
xor
fwait
stos
out
inc
lods
inc
or
add
mov
jl
nop
into
mov
push
addr16
faddl
xor
sub
aad
or
adc
xor
or
push
jae
pusha
push
push
cmp
xchg
inc
add
stc
or
mov
mov
dec
mov
addr16
insl
dec
pushl
push
mov
jg
lods
jecxz
and
std
mov
adc
sahf
sub
or
push
jae
dec
sbb
jge
cmp
adc
push
repz
shll
push
aad
add
xchg
cwtl
movsl
pop
dec
in
adc
dec
lods
mov
mov
add
int3
and
push
jnp
sbb
ja
cmp
cmp
jl
sarl
mov
cmp
pop
pop
mov
sub
pushf
ljmpw
shrl
mov
adc
jl
clc
aam
mov
iret
lods
adc
inc
jg
and
ss
lea
repz
pop
es
mov
add
cmp
push
iret
xchg
stos
pop
push
aas
out
into
mov
xor
cmp
lret
mov
fs
mov
mov
sbb
stos
scas
sbb
stos
adc
sbb
and
jns
lret
shll
jns
stos
xchg
push
lods
sub
add
fld
cmp
sub
sbb
idivl
sub
cld
mov
pop
movsb
mov
pop
xor
js
notl
lds
jne
push
jbe
jne
notb
arpl
jae
mov
jno
dec
push
sub
mov
pop
subb
jne
out
fwait
ja
lret
xor
or
pushf
cltd
mov
xor
xchg
scas
inc
pop
xchg
jne
jg
fdivrl
sub
fisubs
push
lcall
xor
mov
sbb
mov
movsl
lds
enter
mov
popa
jmp
xor
addr16
fdivr
daa
xchg
xchg
push
xor
shlb
jl
pop
je
or
lcall
mov
push
outsl
repz
mov
xchg
clc
arpl
inc
cs
leave
hlt
mov
addl
shrl
ljmp
mov
sbb
movsb
ret
jecxz
mov
int
les
shl
jl
enter
ror
scas
iret
push
pop
lcall
repz
inc
aam
push
popa
mov
paddd
add
jno
ljmp
cmp
mov
movsl
lods
xchg
outsb
andb
xor
repz
sarl
popf
dec
mov
mov
scas
scas
mov
mov
sar
lea
push
fsubl
cwtl
xor
mov
popf
rcrb
int3
push
scas
pop
or
sbb
lret
pop
shr
pop
jne
sarl
pop
sbb
xchg
adc
out
add
nop
out
lret
cmc
lods
popf
push
push
mov
dec
sbb
dec
cmc
arpl
setae
hlt
rcrb
test
cmp
ja
xchg
imul
ljmp
fiadds
xchg
adc
push
test
pop
adc
aam
push
adc
test
push
ficoml
int3
cmc
test
imull
mov
push
das
jb
ret
lcall
mov
push
test
sbb
lea
sbb
push
xchg
or
shrb
lahf
xor
pop
ds
push
sub
xlat
scas
push
add
mov
jg
call
in
out
aad
xchg
sbb
loopne
inc
in
push
mov
cmp
cmp
dec
stos
mov
push
push
push
loop
xlat
fs
fisubrl
ja
loope
mov
xchg
pop
jno
sbb
mov
repz
scas
mov
fsubs
jbe
mov
or
xchg
repz
stos
jnp
inc
cmpsb
sub
push
mov
negb
add
cltd
pop
xor
scas
les
test
repnz
xlat
add
nop
sub
leave
ror
int
cmp
shrl
pcmpgtw
popf
jle
pop
les
test
bound
mul
sbb
cmp
cmp
or
lods
pop
scas
in
lret
xor
xorb
test
jo
stos
rolb
stos
add
mov
cltd
mov
xchg
sub
rolb
loopne
loope
jo
dec
dec
sub
jae
test
add
adc
testb
and
sahf
adc
ss
cmp
test
shlb
xlat
aad
sahf
mov
mov
jle
fnsave
in
ja
adc
mov
pop
xor
sub
repnz
jns
pop
icebp
mov
cwtl
adc
loopne
insl
jae
jbe
mov
fwait
sbb
or
push
cmp
push
mov
dec
js
int
sbb
adc
lds
decl
adc
subb
mov
adc
push
hlt
icebp
cmpsb
movsl
adc
dec
inc
mov
and
les
mov
pusha
cmpsb
fsts
cmp
and
adc
and
jg
dec
pop
jb
xchg
cmpsb
call
xor
fmuls
pop
in
lods
movsl
xor
mov
jns
repz
imul
adc
inc
gs
and
inc
insl
mov
mov
xor
xor
sti
out
ret
int3
loop
imul
mov
fildll
ficompl
inc
inc
test
movsl
fstl
loope
cmpsb
push
cs
mov
repz
push
xor
scas
push
stos
rol
sbb
int3
add
mov
fldt
inc
rol
sbb
push
and
mov
stos
push
pop
pop
adc
cmp
roll
fnstsw
pop
mov
jmp
mov
hlt
bound
xor
in
or
jbe
out
xor
leave
mov
pop
popa
dec
inc
xchg
fcomps
jb
cmp
rcrl
mov
daa
jecxz
imul
lds
mov
enter
xor
fcomip
add
insb
push
int
adc
jno
ret
arpl
adc
mov
adc
xlat
jl
or
shlb
mov
cmp
mov
in
fldenv
rcrb
fisttpll
in
sbb
and
imul
jmp
movsb
rol
cmp
movsl
cli
xor
lock
or
shll
jbe
and
xchg
sbb
cmp
movl
pop
mov
insb
icebp
rorl
rcll
int3
imul
inc
inc
aaa
rcrl
jecxz
jns
xchg
xchg
les
sbb
popa
jno
or
mov
stos
jns
fisubl
scas
and
ret
inc
cmp
mov
jp
shlb
jp
mov
pusha
in
movsl
notb
and
adc
mov
ret
movsb
cmp
pop
jp
lds
scas
mov
mov
ljmp
adc
les
xchg
stos
out
mov
mov
loop
in
fs
cmp
scas
dec
mul
scas
xor
dec
jl
cmp
aaa
aam
addl
outsl
cltd
sub
push
mov
jb
ret
aam
mov
stos
adc
aas
into
repnz
dec
pop
out
adc
mov
fs
push
mov
xor
push
fsubl
sahf
dec
dec
sbb
inc
jns
lds
sbb
or
cwtl
icebp
lock
movsb
add
and
mov
jp
pusha
jp
loope
lcall
leave
push
lods
scas
and
repz
jae
bndldx
insb
lds
inc
and
in
adc
sbb
mov
mov
outsb
cmpb
hlt
sub
sar
mov
je
ja
js
pusha
repz
lcall
test
test
cltd
jb
adc
fnsave
or
mov
das
or
jnp
out
sub
mov
les
add
pop
pinsrw
mov
mov
pop
aam
sti
and
adc
pop
loope
jg
dec
sub
enter
adc
mov
inc
pop
pop
push
ja
outsl
in
mov
mov
shll
add
adc
call
mov
pop
out
pop
cmp
cmpsb
mov
lods
ljmp
xorb
addb
mov
mov
jae
xor
imul
push
dec
push
xor
adc
cmp
stc
sub
sub
iret
mov
jmp
add
or
mov
pop
mov
sarl
lds
add
bnd
and
or
aaa
xchg
test
popf
int
or
add
imul
mov
dec
push
dec
mov
hlt
lods
push
mov
jnp
inc
xchg
outsl
sar
pushf
dec
stc
mov
ds
sbb
jb
xchg
je
add
popa
das
xchg
enter
xchg
jno
out
cltd
jg
sbb
jae
loop
or
mov
add
icebp
xchg
lahf
pop
subl
inc
out
dec
sub
xchg
int
xchg
xchg
pop
stc
loope
push
mov
loopne
data16
icebp
sub
xor
js
ret
test
addr16
jns
aaa
popa
cwtl
dec
addr16
aaa
mov
fcmovbe
jge
xchg
outsb
cmpsl
or
fiadds
pop
jne
jns
into
xchg
dec
dec
pop
sahf
or
push
jns
xor
call
xchg
pop
ret
and
es
ja
mov
in
mov
pop
scas
mov
xor
or
outsl
pmaddwd
insb
dec
shlb
xor
jmp
into
rorb
ljmp
js
unpckhps
rcl
out
lods
shr
cmp
sti
mov
fs
fdivs
andl
mov
in
daa
pop
lods
std
fwait
dec
sub
xor
pusha
jbe
jne
nop
xor
jns
fbstp
inc
inc
xchg
xchg
sahf
stos
testb
pop
xchg
and
cmp
mov
sbbl
lea
cmp
dec
lcall
mov
mov
jnp
das
jnp
negb
jbe
sbb
or
inc
cmp
and
pusha
jl
inc
iret
pushf
faddl
test
outsb
jecxz
lret
mov
adc
mov
rclb
and
sbb
mov
cmpsl
insl
dec
cmp
cmpsb
or
mov
dec
mov
popa
in
cli
jae
adc
xchg
ss
push
imul
bound
in
jmp
add
repnz
add
sbb
jae
pop
sub
into
and
bound
xchg
out
aaa
stos
std
sbb
loope
andb
push
cmpsb
sti
lcall
inc
push
rol
pushf
loopne
add
shlb
inc
flds
push
sbb
stos
je
xor
in
je
lcall
and
xchg
repz
and
push
out
cld
xchg
dec
inc
ss
cmp
push
gs
jb
outsb
fcomps
xchg
arpl
push
addr16
loopne
loopne
sub
and
shlb
mov
iret
jmp
sbb
pop
bound
clc
dec
mov
push
dec
aad
fcmove
push
mov
xchg
scas
sbb
push
cwtl
cld
or
test
xchg
fnstcw
imul
loopne
je
cmp
push
sarl
add
fiaddl
xor
lds
movsl
push
mov
daa
test
pcmpgtb
and
jae
add
pop
popf
out
repz
jne
sub
mov
or
imul
in
ljmp
cld
mov
stc
sub
lea
aad
xchg
add
push
std
sahf
std
mov
orb
lret
mov
cmp
leave
mov
shll
fwait
jmp
push
jle
cmp
push
ret
sub
add
lcall
mov
decl
add
arpl
cwtl
nop
pop
sbb
in
or
andb
icebp
fidivrs
fwait
ret
cmpsl
out
lods
xchg
in
and
jne
stc
mov
lds
jp
dec
push
jge
sar
dec
ficomps
mov
mov
inc
loop
sbb
add
mov
pop
xchg
imul
add
or
bound
jns
stos
mov
std
lock
repz
mov
sbb
jmp
add
jbe
and
xchg
sbb
dec
sti
push
mov
xchg
cmp
sbb
popf
mov
repnz
jge
cmp
insl
push
push
dec
pop
or
add
jmp
cmp
mov
jb
dec
fldt
mov
or
inc
pushf
xchg
jo
test
jmp
jmp
xchg
add
pop
push
into
push
mov
mov
inc
mov
jle
jne
ret
pop
repz
inc
cmpsb
repnz
call
data16
jae
test
je
fildll
fnstcw
ficoms
inc
jns
adc
push
mov
pop
sub
insl
sub
jb
mov
outsb
iret
cld
ret
fisubl
xchg
cmp
movsb
mov
scas
xor
pop
decb
leave
mov
inc
push
cmp
fmull
pop
jg
dec
movsb
movsb
imul
push
mov
dec
insl
shrl
out
xlat
clc
fisubrs
add
movb
adc
mov
cltd
lea
jbe
std
imul
cli
add
movsb
nop
inc
mov
nop
arpl
cmc
rcrb
xchg
xor
in
jp
daa
and
rolb
and
push
in
pusha
in
mov
inc
in
out
test
lahf
dec
pop
xchg
ja
cmpsb
sbb
pop
xor
les
std
jne
push
mov
std
addr16
call
and
out
mov
push
clc
jle
push
imul
jmp
sub
adc
stos
jb
xchg
rorb
popf
dec
imul
push
and
mov
inc
adc
dec
sub
cmp
aaa
pop
pop
sbb
add
scas
fdiv
inc
divb
pop
push
ljmp
pusha
jnp
xor
lock
dec
adc
mov
mov
and
cwtl
xchg
mov
cmp
adc
out
ret
addr16
push
test
xchg
add
fsubs
daa
pop
scas
cwtl
lret
lret
ret
mov
pop
xchg
and
and
xlat
scas
or
adc
inc
fbstp
adc
icebp
xchg
adc
inc
xchg
push
adcb
sbb
pop
push
out
test
in
cmp
jo
sub
mov
adc
dec
cmp
mov
inc
pop
jnp
sub
call
out
and
repz
pop
mov
repz
outsl
add
imul
imul
mov
stc
push
sbb
mov
cltd
in
and
add
jb
fldenv
dec
sub
push
in
mov
mov
cmpsl
mov
jno
and
xor
shl
outsb
or
lds
nop
fs
movsb
cli
xchg
dec
lret
scas
push
sub
pushl
add
std
addl
inc
jle
xor
sti
or
pop
jmp
pop
fadds
imul
fs
shrl
loope
and
cmp
mov
and
or
xchg
icebp
mov
aas
cltd
mov
push
xchg
mov
sbb
into
mov
out
or
xchg
in
sbb
push
fiaddl
imul
xor
and
rcll
mov
push
adc
push
repz
pop
xchg
fstps
loopne
mov
cltd
xlat
test
xchg
push
inc
jne
jb
push
scas
stc
add
repz
addr16
scas
inc
faddl
pop
data16
stos
and
dec
jbe
pop
sahf
jo
mov
test
push
cmpsl
inc
add
stc
dec
fmull
pop
cmp
and
and
jmp
lods
arpl
cmp
or
scas
mov
jle
insl
les
jmp
sub
adc
jne
inc
testb
xchg
sbb
stos
xchg
xor
lea
test
pop
in
iret
xchg
hlt
mov
cld
or
call
insl
stc
push
fstpt
int
cmp
mov
aad
or
xchg
mov
pushl
jbe
mov
cmp
in
aas
mov
xor
sbb
ds
fmull
pusha
sbb
or
push
enter
das
das
sarl
std
lock
sub
daa
push
mov
addb
jp
mov
pusha
pop
fnstcw
adc
pop
mov
in
xchg
mov
sub
jp
mov
call
and
add
in
int
fdivs
and
lods
sub
loop
mov
inc
and
xchg
popf
xchg
mov
je
fldl
imul
sub
fiadds
push
das
pop
test
dec
cs
aas
xchg
subl
andl
jge
ret
imul
xorb
xor
hlt
ss
mov
sahf
notb
rol
pop
lcall
jmp
cli
jb
xchg
mov
int3
mov
out
adc
sub
mov
aam
int3
pop
loopne
xchg
out
shll
rol
cltd
add
add
rcrl
js
pusha
jmp
push
inc
inc
rcrl
mov
add
cmp
popa
dec
inc
jno
leave
jmp
adc
push
xchg
loopne
out
inc
repz
add
stos
or
out
mov
adc
and
inc
cs
and
pop
push
je
adc
xchg
or
stos
clc
and
cltd
dec
dec
iret
rcrl
test
jne
mov
outsl
je
lds
jp
sti
in
xchg
xchg
popa
mov
arpl
mov
hlt
add
test
nopl
lret
sub
nop
clc
jmp
dec
nop
movb
dec
push
sbb
and
jns
mov
mov
lret
test
lahf
xor
inc
nop
fists
popa
call
xlat
sbbl
in
sahf
push
out
and
lods
push
sbb
push
inc
xlat
lock
lea
icebp
cmp
dec
xchg
inc
jl
xor
and
and
aam
aad
shl
pop
std
mov
push
or
xlat
iret
xchg
lea
mov
cmp
clc
xchg
sbb
inc
das
xchg
mov
fwait
fs
jae
movsb
dec
fsubl
inc
jmp
aad
sbb
and
mov
cmp
dec
test
jecxz
inc
clc
and
mov
fldt
add
dec
fwait
mov
xor
pop
jp
dec
sub
jo
push
popf
sahf
push
jp
add
lea
jge
add
sub
push
push
repz
stos
mov
imul
dec
sbb
pop
imul
sahf
mov
adc
adc
jmp
sbb
outsl
sbb
and
cmp
xor
dec
pop
adc
adc
xchg
adc
addb
arpl
xchg
hlt
or
pop
mov
roll
stc
push
fsubrp
aaa
sub
add
sbb
rol
or
adc
pop
pop
cmc
in
cwtl
mov
insl
adc
xchg
mov
fldl
adc
frstor
in
xchg
pop
out
loope
fwait
jne
jmp
hlt
cltd
dec
fimuls
loop
fnstsw
lret
test
test
rcll
je
rclb
mov
inc
or
enter
sub
shlb
inc
or
inc
push
daa
pop
adc
aas
scas
and
push
stos
xchg
jo
mov
mov
inc
jl
mov
out
imul
xor
icebp
repz
aad
jge
mov
sti
mov
mov
jp
and
add
adc
mov
mov
xchg
add
mov
sbb
lret
imul
push
xor
out
aam
adc
rol
push
add
push
mov
mov
cltd
ja
push
repnz
leave
mov
adc
fistl
and
test
sahf
sarl
push
jbe
stos
decb
test
pop
cld
ss
decb
jo
dec
in
xor
add
lea
pop
jl
jle
jne
add
sub
lock
xlat
ja
insl
xor
inc
int3
mov
cmp
gs
sub
jo
inc
xchg
add
push
xor
pusha
xchg
ss
in
movl
test
add
jle
mov
lcall
rcrb
outsl
and
push
or
cld
xchg
in
mov
sub
xor
push
jge
movsl
addb
out
nop
in
jno
lret
cmp
rcr
adc
stos
jno
lods
xchg
xchg
sub
sbb
sub
cs
pop
jbe
rcrb
scas
iret
lahf
lcall
sbb
adcl
inc
imul
icebp
cmp
idiv
jecxz
gs
ret
add
lret
xchg
cmc
mov
xor
es
leave
stos
sbb
loopne
inc
xorl
and
dec
jns
pop
cltd
and
insb
std
jnp
push
lahf
filds
pop
aaa
inc
cmp
dec
loope
pusha
sti
imul
mov
stos
addb
dec
sub
mov
cmp
enter
inc
mov
dec
xchg
rorl
xchg
sub
mov
dec
mov
shr
sbb
or
jb
xchg
ffreep
jno
lret
cmp
nop
cmp
mov
int
mov
fwait
test
xor
sbb
sub
push
cmp
rorl
fsubr
sqrtps
mov
cmp
and
sarb
mov
push
push
pushf
sbb
add
inc
cmp
cmp
dec
lahf
repz
out
mov
mov
push
inc
fndisi(8087
imul
pop
sub
std
push
clc
or
repz
clc
loop
mov
movsl
shll
test
pop
xor
cmp
pop
fistpl
sub
outsb
fs
pop
out
push
cmpsl
add
test
sub
add
add
icebp
xchg
and
pop
xor
or
or
dec
int
stc
mov
ds
and
add
data16
push
pop
inc
jbe
jge
cmp
ja
popf
add
pop
mov
arpl
fcompl
mov
dec
xor
jae
stc
test
push
imulb
mov
rolb
imul
mov
nop
dec
mull
adc
out
sbb
jl
rol
jae
inc
mov
loope
mov
pop
aam
rolb
dec
ror
test
daa
roll
shll
sub
jge
lret
insl
lea
loope
fmulp
cmp
dec
pop
push
enter
gs
mov
mov
add
and
test
popf
imul
xor
in
or
repz
cmp
sub
test
pop
sub
mov
jmp
movsb
xlat
lea
fdecstp
out
scas
add
adc
sub
movsl
notb
mov
lret
mov
flds
stc
pop
lret
int3
inc
sarb
decb
mov
xchg
push
jle
adc
cmp
jnp
pop
xor
xchg
pop
fwait
jns
mov
sub
loopne
mov
in
bound
lock
stos
pop
mov
in
mov
xor
adc
xchg
scas
xchg
popa
cmp
sahf
inc
std
xor
or
jecxz
pushf
pop
int3
cmpsb
movsb
pusha
imull
fcompl
cltd
mov
mov
and
push
and
sbb
call
dec
sub
lcall
push
add
ljmp
lea
jno
and
mov
sbb
xor
mov
pushf
add
popf
cs
jp
push
scas
push
and
mov
push
sub
jmp
add
enter
mov
push
xchg
call
xchg
sbb
lods
pop
nop
and
pop
inc
mov
sbb
jmp
and
mov
lcall
jge
xchg
out
fbld
push
jns
aad
pop
jnp
adc
inc
jecxz
lock
dec
lret
sub
test
outsb
pop
inc
test
mov
dec
test
cmp
das
in
aam
cmpsb
sbb
mov
or
xchg
adc
xor
dec
data16
sub
xor
sti
sbb
xchg
mov
notl
inc
mov
mov
outsl
fisttpl
mov
imul
sub
adc
lods
scas
enter
push
pop
push
scas
jns
repz
dec
mov
pop
shl
adc
pop
xchg
pushf
orl
push
imul
dec
pusha
jecxz
mov
inc
test
jp
inc
repnz
sub
and
dec
cmc
jnp
pop
test
xchg
adc
pop
xchg
aad
sub
pushf
sub
push
push
mov
push
cmp
adc
data16
or
mov
outsl
iret
shl
xchg
ret
mov
pop
cmpsl
ret
cmpsb
mov
push
ja
adcb
aas
push
cmpsb
xchg
les
cmp
xchg
dec
test
xchg
mov
xchg
inc
mov
mov
jmp
pop
icebp
pusha
push
addb
cmp
cmp
sar
mov
outsl
dec
and
xchg
sub
leave
loopne
inc
jne
pop
scas
sub
icebp
lods
mov
mov
stc
adc
mov
jbe
inc
xchg
out
jg
mov
dec
hlt
enter
mov
les
xchg
int3
xlat
cld
insb
mov
cmp
xchg
dec
lahf
cmpb
jb
xchg
popa
fsts
aas
shl
cmp
lock
mov
mov
loope
xchg
daa
mov
fwait
cmp
push
pop
xor
mov
test
pop
push
pop
xor
sbb
lods
dec
jno
add
pop
and
push
lock
push
hlt
lods
push
sbb
mov
push
adc
lret
stos
cmp
shlb
jp
pop
dec
pop
fisubl
mov
in
mov
les
fs
fistps
xchg
out
mov
inc
std
cmp
je
pop
and
fiaddl
shll
insl
pop
arpl
sub
fbld
and
test
sub
xor
jo
lods
rorl
repz
or
pushl
and
cmp
movsl
arpl
fdiv
fwait
mov
and
pop
cmp
arpl
pop
hlt
add
mov
push
adc
clc
insl
and
shll
add
ja
jbe
push
jecxz
pop
cmp
jns
lods
push
stc
pop
int
sbb
sub
insb
sbb
fists
cmp
out
fstpt
push
push
mov
fcoml
fcoml
adc
scas
or
mov
pop
and
fisubl
sbb
loop
clc
daa
bound
sub
push
loopne
jns
xchg
ret
in
ljmp
and
aad
es
fidivrs
xchg
adc
cmc
sub
out
roll
sahf
mov
rcrl
and
in
cmp
pop
xor
cmp
cmp
sbb
inc
in
sti
clts
cmp
dec
or
xchg
cwtl
ficoms
mov
ljmp
jg
sbbl
add
add
xchg
push
pop
mov
pop
xlat
les
mov
shlb
xorb
fcmove
push
and
sbbb
in
test
call
push
or
hlt
in
out
add
iret
ja
push
mov
enter
dec
cmp
push
mov
sbb
lock
sub
sub
sbb
je
in
and
scas
dec
jecxz
aam
adc
xchg
or
mov
int3
or
add
jno
cmp
cmp
mov
sub
push
xor
pop
or
cltd
shlb
or
lahf
mov
mov
dec
xchg
pop
inc
inc
xchg
pop
arpl
mov
popa
add
cmc
add
popa
xor
sarb
int3
add
pusha
cli
push
push
cmp
xor
movsb
inc
xchg
sbb
pusha
prefetch
push
pop
mov
fdivp
sub
and
enter
pop
or
cmp
movsb
scas
cmp
lret
xchg
scas
mov
fwait
orl
xchg
lods
mov
cmpsl
mov
lods
hlt
in
jecxz
sub
mov
cmp
fs
out
adc
aas
popf
test
lahf
int
jnp
scas
insb
xor
xor
out
out
pushf
aad
mov
shll
mov
xchg
jns
xchg
cmpl
jl
sub
movsb
rclb
scas
sbb
inc
jmp
stos
mov
pop
rcll
cltd
inc
dec
lahf
in
jp
test
mov
sub
js
scas
lods
rcrl
push
aad
shl
dec
daa
jmp
push
pop
aam
push
pop
jne
push
std
imul
out
jbe
sub
fnstenv
xor
mov
mov
out
cmpsb
mov
dec
cs
inc
leave
inc
lods
movsb
je
jo
cmp
jns
cld
xlat
jbe
and
inc
popa
mov
les
jmp
fnstsw
lds
jnp
inc
and
lahf
mov
into
xchg
nop
aam
aas
push
jo
movsb
xchg
sbb
fistpl
mov
xor
scas
dec
and
pop
pop
jne
hlt
lahf
mov
cs
cmp
ljmp
pop
or
push
sub
adc
popf
add
imul
pop
add
loopne
sbb
or
iret
xchg
push
std
fwait
addr16
or
add
mov
out
faddl
jp
inc
scas
in
ja
or
inc
and
or
mov
aad
add
cltd
fsub
ja
shll
add
arpl
cwtl
aas
add
pop
inc
jecxz
in
dec
cld
movsl
push
adc
repz
nop
cltd
shll
shl
lds
add
sub
adc
js
fbld
xor
cli
mov
mov
or
inc
pop
jge
pop
sub
movsb
fisubs
lea
add
and
jbe
sub
push
loopne
mov
aas
lock
stos
neg
bound
cltd
xor
aam
mov
jle
jle
test
lret
mov
loopne
lds
aam
sub
lods
pop
add
notb
je
daa
imull
fs
fimuls
cmc
cmp
dec
test
nop
lahf
sub
mov
and
jmp
packuswb
cmp
imul
or
into
sbb
outsb
loop
sub
sbb
jnp
push
hlt
push
xchg
push
xor
stos
xchg
lret
fisubrs
enter
fwait
pop
ja
scas
icebp
cmp
popfw
data16
std
adc
stos
mov
push
adc
adc
or
and
cwtl
push
test
jo
mov
pop
and
insb
mov
push
sbb
cmp
lcall
sbb
inc
cld
sbb
xor
clc
xchg
xlat
into
aaa
orl
stc
cmp
mov
stos
cmp
sbb
sbb
ds
stc
dec
ja
sar
xor
out
in
movsb
pop
int
arpl
add
mov
in
mov
add
clc
jae
sbb
mov
scas
cmpsb
pop
mov
mull
add
xlat
lock
insb
sub
imul
inc
adc
add
outsl
jecxz
filds
push
divl
rorb
dec
in
popa
adc
xchg
incb
imul
scas
adc
jecxz
mov
jecxz
push
clc
scas
or
movl
jge
inc
xchg
jg
out
aad
and
pop
mov
sbb
push
mov
xchg
or
xor
push
add
fiaddl
test
movsl
and
shlb
cmpsb
pop
add
cld
cmpsb
jae
sbb
iret
push
inc
mov
enter
fldt
into
push
movsl
lret
cmpl
les
adc
xchg
mov
fneni(8087
daa
test
lea
xor
add
leave
pop
movsl
test
idivb
lds
and
test
sbb
sbb
mov
daa
mov
push
fidivrs
or
shrd
mov
push
and
push
les
pop
daa
jno
movsb
test
data16
pop
or
call
fidivrs
push
mov
arpl
sub
daa
iret
xchg
pop
loope
shll
cmp
cmp
jge
xor
sti
out
mov
pop
cmp
fwait
or
or
pushf
fwait
outsl
sbb
sbb
jmp
jl
dec
jle
decl
sti
je
and
je
xor
dec
adc
xchg
shlb
adc
xchg
pop
push
imul
outsb
jg
push
mov
pop
inc
cmp
mov
test
js
push
hlt
fdivrs
sti
shrl
pop
les
jns
inc
jecxz
aaa
leave
sti
push
mov
decl
data16
add
add
int
xchg
inc
ja
loopne
in
add
outsb
and
mov
sahf
cli
fwait
mov
xor
je
int3
aaa
mov
scas
mov
mov
mov
add
push
and
in
inc
lock
imul
inc
rolb
aam
sti
scas
loopne
aaa
mov
jmp
incb
adc
mov
add
shlb
pop
ret
mov
xor
pop
lahf
insb
pop
mov
pop
pop
mov
sti
jp
nop
ss
or
lahf
fcompl
sub
jmp
and
cmp
dec
mov
iret
fisttps
mov
mov
inc
sti
addr16
mov
pop
outsb
mov
mov
stos
test
rcl
test
inc
xchg
xchg
xor
jecxz
mov
mov
gs
mov
mov
push
movsb
insl
out
sbb
aam
negl
cmp
es
outsb
nop
lods
fldenv
mov
push
cli
adc
push
mov
and
fwait
inc
lods
mov
mov
call
aad
cmc
pop
enter
ss
leave
stos
xchg
push
daa
fs
sahf
mov
adc
cltd
or
xchg
and
xor
push
jg
pushf
int
adc
jle
mov
and
sub
clc
pop
jmp
nopl
and
mov
fsubs
and
jne
dec
xor
in
movsl
xchg
cmp
add
roll
and
adc
jmp
adc
hlt
call
cmp
test
popf
mov
shll
push
xchg
addb
icebp
sbb
subb
pop
aam
and
dec
inc
jp
or
sub
xchg
or
aam
xor
fstp
inc
aam
inc
lods
mov
movsb
adc
andb
div
aam
mov
stos
push
ret
xor
jns
sti
mov
nopl
lock
testb
lahf
jns
mov
popa
aas
dec
mov
jecxz
add
ss
push
ja
mov
add
fbstp
sub
pop
inc
jmp
cmpsb
push
add
nop
xor
fcoms
out
mov
sbb
push
fimull
aaa
mov
data16
pusha
outsl
adc
test
or
xor
push
jmp
or
pop
inc
add
pop
addr16
clc
adc
push
arpl
int
inc
fcomi
inc
adc
xor
shl
lahf
scas
outsb
aas
mov
push
mov
out
jno
inc
popf
cld
xchg
mov
xchg
mov
setae
iret
arpl
fs
es
mov
pushf
xor
jns
or
into
sbb
push
push
movsl
ret
xchg
arpl
mov
ja
fwait
dec
ja
push
call
mov
test
or
or
pop
lods
mov
xchg
mov
in
add
ds
icebp
pop
stc
daa
cmpsl
ljmp
or
les
mov
push
loop
dec
add
add
mul
enter
add
jp
sbbl
cmp
xchg
mov
inc
pop
and
xor
sbb
sub
pop
loop
push
dec
mov
stc
or
cli
int3
insl
imul
or
mov
clc
jne
leave
jecxz
xchg
iret
xlat
cmp
inc
xlat
loopne
jp
fstl
cmpsb
fs
sbb
addr16
pop
cmovg
popf
cmpsb
ret
cld
retw
mov
xchg
pop
pop
dec
pop
psubusb
cmp
es
movsb
fistl
rorb
mov
xor
add
into
imul
test
mov
xchg
and
sti
pop
sbb
cmpsl
xchg
pushf
jmp
loope
mov
pop
pop
add
mov
scas
sbb
dec
jbe
mov
dec
inc
mov
pop
call
sbb
mov
mov
inc
mov
mov
inc
shr
les
and
scas
rclb
add
push
add
adc
fwait
arpl
adc
aam
pop
incb
push
mov
sbb
sub
scas
sub
scas
push
sub
mov
das
nop
fiadds
and
push
or
push
cmp
mov
jo
mov
pop
inc
inc
jae
adc
sbb
out
ror
in
or
inc
stos
sub
popa
push
xor
mov
imul
imul
mov
ds
mov
sbb
std
sti
sahf
push
mov
jne
shlb
fldcw
test
xor
add
loopne
pop
mov
std
ja
mov
jmp
cmp
les
jne
test
mov
mov
stos
inc
ljmp
push
adc
mov
in
clc
subl
fsubl
inc
cld
xor
pop
xchg
inc
out
call
push
pop
mulb
aad
jmp
bound
mov
xorb
es
mov
leave
jecxz
pop
sbb
aam
jne
out
cli
xor
ss
push
add
push
mov
mov
imul
rcl
and
jp
in
mov
inc
cmpsb
out
push
cli
fisttpll
mov
imul
sub
mov
call
add
add
mov
push
fcoms
faddl
push
rclb
xor
mov
pop
cld
lret
aaa
and
gs
jecxz
cmp
sbb
test
mov
pop
test
test
call
and
mov
cmpsl
mov
lea
in
out
rcr
pop
lret
mov
sbb
je
mov
ja
add
mov
lock
popa
mov
mov
in
fidivrs
addr16
popa
lea
sbb
fidivrl
into
cmp
outsb
cmpsb
out
pushf
ss
mov
lods
movsb
mov
lods
dec
or
daa
sti
lret
lock
hlt
imul
lret
stos
or
pusha
enter
clc
jge
loope
inc
mov
adc
jb
int
lods
imul
mov
test
fnsave
fcoms
xchg
mov
cmp
cs
pop
ret
add
xchg
rolb
inc
gs
push
test
jl
or
xchg
insb
cld
xor
inc
outsb
sub
mov
add
nop
int
mov
mov
adc
insb
pusha
cmp
pop
or
jg
lret
lods
mov
div
inc
mov
or
movsl
ss
lahf
leave
sub
lods
pop
mov
mov
lahf
lcall
dec
clc
and
pop
pop
push
push
adc
and
sub
inc
jge
pop
inc
sbb
je
addr16
dec
test
xor
cmpsb
mov
and
push
xlat
or
insl
jmp
pop
scas
movsb
outsl
call
test
test
addr16
es
out
leave
ja
dec
addr16
push
mov
lea
shrb
jle
cltd
fs
jb
mov
xor
mov
xor
mov
lds
ljmp
mov
adc
fs
out
push
dec
jmp
jno
insl
out
int3
mov
adcb
es
jo
and
mov
inc
out
push
loop
mov
xor
pop
out
es
adc
ret
adc
outsb
jno
mov
and
mov
and
mov
inc
in
icebp
cmpsb
sbb
cmpl
shrl
dec
push
rorb
mov
jb
cltd
fiaddl
push
mov
cltd
test
jg
jle
push
jg
or
inc
mov
inc
push
lcall
int3
xorb
cmp
outsl
mov
xor
xor
or
cmpsb
dec
mov
jge
stos
lcall
mov
lock
sub
movsb
push
jbe
pushf
scas
adc
cwtl
mov
jo
subb
dec
cli
jecxz
repnz
pop
cmp
repnz
adc
movl
dec
leave
fmull
clc
adc
and
test
cmpb
xor
out
mov
dec
into
mov
cmc
lods
sti
scas
mov
dec
enter
or
pop
bnd
inc
sbb
mov
shr
add
shrl
push
test
and
negl
fimuls
add
bound
enter
xchg
adc
and
mov
sbb
jne
cmp
lods
lret
je
sub
mov
mov
cwtl
arpl
adc
pusha
stos
mov
roll
shll
push
dec
pop
test
cmp
jg
mov
cli
addr16
sahf
pusha
and
icebp
cmp
repz
mov
jmp
sub
sub
addr16
adc
mov
test
add
mov
adc
jno
ror
into
fstpl
loop
shrb
adc
flds
xchg
lods
dec
into
fdivs
es
scas
test
into
cs
mov
lods
mov
pop
pusha
pop
cltd
mov
mov
xor
pop
jle
test
insb
jecxz
nop
call
add
hlt
arpl
icebp
and
jbe
pop
vpmacswd
lret
lcall
xchg
cmpl
inc
int3
push
imul
ss
adc
frstor
ja
dec
mov
sbb
pushf
and
mov
mov
or
mov
jecxz
mov
pop
fsubrs
jns
jp
sub
int
xorb
xchg
repz
repnz
mov
arpl
imul
sbb
mov
in
xchg
enter
pop
push
xorl
push
addb
cmpsb
icebp
call
sbb
stc
movsb
notb
jo
lds
adc
lret
icebp
outsl
push
dec
test
call
add
shrd
mov
cmp
cltd
jbe
or
daa
rcrb
rcl
inc
mov
inc
shl
adc
jns
das
adc
mov
jg
lret
xchg
std
ds
repz
testb
gs
and
push
cltd
push
fldenv
and
jg
push
pushf
outsb
ret
push
adc
testb
mov
jge
lret
cmp
xchg
stc
ds
aad
push
loope
cmp
loopne
loope
pop
subl
mov
xlat
or
mov
pop
call
or
cmpsl
jns
mov
ret
sarl
cli
pushf
xlat
cmc
push
fninit
int
add
push
cmpsb
scas
decb
mov
ror
mov
scas
mov
sarl
vandnps
inc
daa
ds
xchg
sti
scas
cwtl
sub
mov
mov
inc
xchg
or
stc
ret
cmp
lds
decl
dec
adc
lods
jle
fcmovnu
sub
jge
or
and
or
rcrb
mov
xchg
mov
jle
lret
push
ja
call
mov
or
cmpsb
jnp
fcmovbe
cmp
push
mov
loope
push
lds
test
pop
outsl
adc
ret
sbb
push
in
mov
or
pop
jae
int3
jmp
push
pop
sub
dec
push
jbe
int
push
arpl
mov
xchg
cmp
cmp
pop
popf
sbb
ds
out
insb
lret
jecxz
pusha
xchg
rcrl
in
inc
adc
mov
mov
in
xor
jne
fwait
ret
in
adc
mov
das
xchg
jo
or
push
jno
xor
notb
sahf
push
clc
shl
jbe
popf
sbb
and
sahf
imul
pop
int3
iret
or
js
cmpsb
and
iret
xchg
jmp
pop
and
pop
inc
lds
popa
cmp
fidivrl
and
leave
xor
mov
inc
sbb
pop
loope
daa
nop
in
pop
push
push
xchg
loope
dec
das
fisubrl
xor
inc
xchg
xchg
sahf
cs
or
mov
out
jo
gs
push
movsl
jb
ljmp
push
xorl
scas
push
repz
push
xor
mov
sub
rcrb
mov
loopne
fisttpll
adc
leave
call
outsl
xor
dec
imul
dec
test
jns
pop
jne
enter
daa
pop
addb
adc
mov
xor
in
add
jbe
cli
into
cmp
cmp
sbb
mov
imul
dec
loopne
shll
or
sti
ret
aad
push
cltd
loopne
cmp
test
mov
out
fisttpl
aas
arpl
mov
movl
xorl
mov
shlb
xchg
jae
pop
jmp
test
sbb
stos
xor
sub
subl
jno
test
push
cli
push
icebp
dec
ret
in
mov
mov
push
push
movsl
jbe
add
jecxz
lds
pusha
inc
test
ja
test
movsb
test
mov
xchg
jmp
cmp
and
cmp
dec
pop
pop
lahf
cmp
pop
mov
xor
insb
or
fisttps
inc
push
outsb
xchg
in
sub
jg
mov
loopne
dec
add
daa
or
repz
jnp
mov
sbb
add
mov
xor
jo
xor
inc
mov
fmulp
push
cwtl
sub
jb
call
outsb
int3
and
mov
decl
xor
int3
addr16
xchg
pop
xlat
sub
mov
jo
fcoms
cmp
push
jae
sahf
std
push
in
lea
fdivs
dec
jl
ja
xchg
push
in
dec
sub
dec
jmp
loope
mov
pusha
fimuls
les
mov
rcl
aaa
mov
fildll
mov
push
add
ret
scas
push
jae
or
sub
and
adc
lret
push
lcall
or
or
push
and
bound
sub
clc
test
sbb
xorl
dec
out
add
xchg
cwtl
mov
and
push
add
sahf
cwtl
repnz
out
inc
lock
icebp
xor
lods
xor
cmp
mov
lods
mov
je
es
pusha
mov
mov
fldcw
push
call
push
rcrl
lcall
das
stc
sahf
xchg
jb
stos
xor
adc
inc
or
movsb
xchg
repz
arpl
inc
test
stos
dec
sub
mov
jno
fs
push
aaa
pop
xchg
add
push
aam
aaa
ffreep
stos
notb
xor
cmc
pop
int
mov
xlat
lret
lcall
mov
inc
movsl
push
inc
das
mov
xchg
push
mov
push
dec
xor
cmp
pop
xchg
clc
imul
pusha
cmp
pop
aad
in
dec
addr16
add
xchg
lret
add
arpl
test
insl
lods
sub
enter
or
into
or
xchg
dec
sahf
sub
add
add
dec
clc
adcb
push
sbb
pop
cmc
sbb
popa
inc
lahf
lods
mov
mov
fiaddl
out
jne
cld
out
repz
ljmp
arpl
add
pusha
fisubs
push
and
sbb
inc
cmc
mov
lods
pusha
loope
dec
ja,pn
loop
mov
add
shrb
out
jecxz
movl
or
call
cmp
std
mov
push
jbe
or
outsl
cmp
lea
iret
pop
xchg
push
lret
add
lock
aaa
rcrl
stos
pop
or
fnop
lcall
vpshuflw
push
mov
pop
int
mov
pop
lahf
jo
jb
lds
shll
scas
pop
iret
cwtl
jns
repnz
push
mov
push
sub
jo
out
arpl
sub
pusha
mov
addb
cmp
jne
dec
ret
ds
push
push
xor
jnp
xor
std
jmp
mulb
or
jae
filds
das
out
xchg
mov
in
and
mov
lret
add
sbb
pop
divl
ficomps
inc
lock
add
add
jmp
mov
mov
adc
xchg
out
lahf
sahf
jno
mov
mov
imul
inc
iret
pushf
sbb
push
shlb
icebp
loop
testl
stc
ret
loopne
insl
pop
mov
jge
in
cwtl
or
imul
jb
mov
insl
test
mov
lea
jbe
sbbb
xor
sub
cmp
lea
ja
ds
mov
aas
jecxz
push
lea
mov
movsl
sti
cwtl
jmp
pop
rcl
adc
add
call
stos
dec
mov
jge
cmp
cmp
repnz
mov
mov
mov
mov
dec
xor
xchg
out
sti
stc
out
cld
clc
jp
jae
addr16
iret
aam
clc
add
pushf
mov
cs
mov
js
jge
jmp
fisubl
fwait
adc
add
adc
sarl
push
test
inc
inc
sbb
push
movsl
jge
ds
leave
sbb
jl
push
loope
push
shlb
mov
ret
push
orl
adc
push
testb
stos
dec
adc
add
loopne
jnp
shll
clc
or
stos
cmp
and
push
push
and
call
lods
fs
inc
jbe
fwait
cli
repz
jmp
lods
test
addb
push
scas
sbb
and
repz
mov
scas
hlt
icebp
jle
jns
aaa
fsubs
mov
cmpb
stc
pop
mov
jg
pop
cmp
add
iret
sahf
xlat
test
mov
mov
in
aas
lea
pop
cmc
or
rorb
xlat
aaa
mov
xor
xchg
cwtl
das
sub
and
test
mov
xchg
adc
xor
pop
hlt
pop
mov
shlb
clc
jo
call
xchg
add
hlt
jo
les
jne
jo
filds
mov
mov
sub
cmc
aas
fs
adc
mov
xchg
or
cld
push
push
mov
sub
outsl
imul
ret
mov
inc
loope
and
sbb
hlt
in
mov
in
fs
dec
insb
jp
jmp
pop
daa
dec
bound
xchg
aam
gs
push
cmp
loopne
dec
jo
cmpsb
gs
popf
adc
icebp
dec
daa
xchg
cmp
cmpsb
add
pop
mov
data16
jns
pop
xor
fucomp
imul
fisubrl
das
mov
and
in
fs
pop
xlat
daa
inc
jo
or
inc
repnz
mov
pop
push
or
mov
popa
sub
in
mov
sub
cltd
mov
mov
pop
sti
pop
rcl
xorb
fldl
ljmp
push
stos
jbe
dec
adc
dec
dec
dec
lock
adc
add
insb
mov
popf
dec
pop
cmp
inc
jg
push
sti
sub
inc
and
push
loop
out
push
mov
or
inc
ds
sarl
cmpl
jbe
jnp
dec
cmpb
jo
xorl
and
dec
sbb
out
pusha
inc
mov
dec
test
enter
adc
test
stc
add
cltd
sbb
push
pushf
pop
sub
mov
call
rol
das
add
jno
ret
mov
jp
sub
shr
cli
lcall
add
lret
pusha
or
inc
cmpsb
leave
adc
add
sbbl
or
sbb
sub
cmpsb
dec
int
subb
scas
cmpsb
dec
jns
fsub
adc
jl
sbb
cmc
push
in
adcb
xor
xchg
in
pop
in
repz
imul
aas
cmp
sbb
movsl
pop
pop
mov
jge
mov
insl
dec
idiv
loop
es
xor
imul
pop
cmp
hlt
testb
repz
test
loope
cld
icebp
das
insl
mov
mov
adc
ja
sub
push
xor
jo
iret
xchg
cld
ret
jo
mov
mov
dec
mov
mov
aaa
or
and
sub
dec
or
dec
stos
mov
mov
repnz
fwait
and
rcll
pop
mov
and
and
xchg
pop
fbld
and
out
jg
adc
pop
fsubr
scas
dec
push
adc
outsb
orb
in
dec
mov
pop
int3
lea
jg
filds
movsb
imul
ret
dec
movsl
sbb
mov
mov
push
mov
pop
dec
mov
mov
inc
repz
dec
mov
stos
push
mov
or
xorb
sbb
ljmp
imul
std
hlt
test
or
fcmovb
incb
loop
pop
rolb
jae
push
xchg
push
fistpl
xor
xor
shlb
xlat
pop
push
cmc
and
mov
test
std
or
sbb
sar
shl
cwtl
or
pop
cld
out
dec
loop
aaa
lods
cwtl
or
adcb
aaa
bnd
sbb
sub
and
dec
loop
imul
dec
adc
mov
aam
xchg
movsb
rcrl
mov
pushf
push
call
test
ret
dec
cmc
orb
dec
nop
and
or
fisubrl
or
sub
popf
cwtl
loopne
cmpb
xor
sub
and
pop
loope
inc
xchg
xchg
movsb
out
mov
jmp
sbb
add
fwait
stos
call
cmp
cwtl
repnz
jecxz
movsl
adc
mov
cmp
out
lds
es
cld
cmp
add
jecxz
jne
mov
mov
leave
jnp
push
mov
imul
jmp
out
test
cmp
inc
jne
addb
int
lods
aas
mov
pusha
pop
out
and
ja
mov
imul
stos
int
iret
dec
mov
push
cmp
fbld
test
dec
jnp
std
fadds
pop
test
imul
mov
xchg
xor
mov
test
and
daa
and
fmul
stc
rorb
sub
loopne
fs
rorl
sbb
shll
sub
cmp
jo
out
inc
cwtl
xchg
jmp
shr
mov
push
stc
inc
pop
scas
mov
xor
xchg
or
sbb
push
push
pop
lcall
outsb
push
xchg
ret
pushl
push
and
sbb
mov
jae
idiv
mov
das
mov
into
jns
gs
stos
js
dec
cli
sub
jnp
cmp
imul
lret
sub
ret
push
rcl
not
cmp
mov
pop
mov
inc
xor
ret
push
imul
loopne
and
pop
ret
jmp
dec
add
dec
jecxz
scas
or
jbe
mov
jns
push
mov
jge
in
adc
es
shrl
dec
sbb
push
enter
mov
imul
dec
push
jb
mov
loop
adc
xor
pop
ds
add
in
les
mov
cmp
sub
sbb
into
sbb
push
cmpsb
inc
fisttpl
rcll
js
add
fcmovnb
orl
fsubs
xchg
pushl
jo
sbb
cmp
dec
and
out
mov
nop
stos
in
and
lods
test
shll
dec
in
xor
sbb
dec
je
sub
subl
hlt
fnstenv
in
adc
addr16
lcall
jbe
pusha
cmc
adc
sbb
cmp
ss
jbe
or
cmp
loope
or
subl
sbb
sbb
mov
mov
adc
bound
stos
push
bound
test
inc
ror
lods
sahf
adc
lods
and
aas
movsb
cltd
sbb
in
int
in
or
mov
jp
cmp
xchg
movsl
outsb
or
out
xchg
push
lret
ljmp
mov
aam
mov
push
push
in
dec
fisubs
fiaddl
push
mov
sbb
cmovns
jmp
xchg
cmp
sbb
outsl
enter
and
jb
pop
aaa
movsb
jae
int
enter
and
inc
sub
adc
dec
sti
daa
inc
push
mov
jle
xor
mov
mov
mov
push
lock
add
pop
shrl
cmpsl
rclb
cmp
push
in
shrb
cmp
movsb
das
insb
adc
aaa
mov
popf
push
cwtl
mov
ret
mov
daa
add
jno
mov
bound
mov
add
into
shlb
inc
jne
dec
dec
adc
push
ret
ljmp
loopne
fisubs
xchg
aam
xor
insb
fisttpl
call
and
outsl
cmp
lcall
jo
pusha
stc
scas
xlat
and
cli
scas
xchg
cmc
or
mov
rcrl
ret
mov
rcll
insb
ljmp
xchg
xchg
mov
cmp
push
pop
inc
jg
out
dec
inc
iret
test
dec
ficomps
call
adc
cltd
and
dec
pop
fwait
mov
adc
mov
and
pushf
rcll
and
in
mov
mov
ret
sbb
mov
mov
in
in
pop
mov
call
pop
mov
xchg
add
push
inc
push
push
mov
sbb
out
out
sub
cmp
sbb
add
cmp
jp
push
loop
mov
ds
aaa
xchg
pop
ds
cld
and
xchg
aam
dec
dec
and
mov
call
sbb
xchg
mov
les
ret
jbe
mov
cmp
in
push
or
inc
addb
dec
xchg
dec
and
add
lret
pop
test
dec
stc
and
leave
mov
enter
xchg
sbb
int
jbe
adc
jp
jns
in
addr16
testb
js
ljmp
adc
ljmp
sbb
push
out
xchg
mov
adc
lcall
sbb
test
push
pop
insl
notb
lret
mov
xchg
mov
push
xor
xchg
icebp
pop
sarl
add
cwtl
adc
sub
fs
fbld
je
mov
je
shlb
loopne
xor
mov
cmp
jo
jp
loopne
push
sahf
xlat
incl
insb
sub
imul
daa
aam
mov
pop
test
push
pop
push
adc
inc
jl
or
fsubs
lea
xor
mov
fsubrl
and
scas
xchg
into
bound
outsb
add
shr
clc
ljmp
dec
pop
add
inc
cmp
xor
inc
lgs
out
push
dec
hlt
adc
inc
jne
or
icebp
adc
stos
out
xorl
or
xchg
and
mov
pop
push
fistps
push
adcl
iret
fsub
adc
inc
pop
cld
adc
dec
gs
fucom
push
lcall
fcoml
or
cmpsb
cmp
iret
cmp
sbb
xlat
add
das
mov
cmpsl
mov
test
pop
mov
sti
jnp
jbe
push
mov
mov
or
in
sahf
sbb
out
in
fbld
cmp
fdivl
leave
js
push
fldt
cld
cmp
or
repnz
repnz
add
mov
inc
jl
add
pop
test
jg
test
fiaddl
mov
mov
in
cmpsb
lahf
mov
xor
repz
into
mov
mov
mov
adc
mov
popa
rcrb
sahf
pop
es
xchg
mov
xchg
movsl
outsb
mov
mov
inc
xchg
cmp
mov
das
movsb
movsw
sahf
jecxz
insl
and
mov
int3
mov
sub
sbb
repnz
inc
xor
stos
in
dec
pop
in
push
jge
or
scas
push
jge
and
xchg
sbb
fsubs
jle
pop
popa
hlt
dec
xchg
outsl
lock
lcall
popf
sbb
cmp
insl
repz
add
or
xorb
int
add
andb
cwtl
rcrb
ds
pop
pop
mull
mov
mov
data16
inc
xchg
lcall
ret
push
lds
scas
pop
push
jle
adc
add
mov
test
int3
sub
inc
nop
test
shrb
dec
popf
xchg
jmp
push
pop
and
mov
adc
repz
mov
jg
repnz
mov
stos
fbld
rcr
and
pop
stc
shll
daa
xchg
inc
mov
fistpl
mov
mov
or
mov
pop
aas
ficomps
xlat
or
mov
sub
decl
iret
sbbb
sbb
cwtl
or
sub
xor
stc
jne
and
sub
in
push
popa
pushf
loop
push
rcll
or
stc
add
pusha
icebp
mov
sti
fwait
mov
lea
stos
push
cld
arpl
aaa
shrb
sub
inc
js
aad
mov
mov
xor
mov
cmpsb
sbb
addr16
out
test
test
jg
and
mov
inc
cwtl
jle
popf
sub
ret
xchg
add
sahf
je
jmp
sahf
sub
push
cmpl
ret
mov
jno
pop
cmpsb
adc
xorb
test
out
ret
mov
lahf
insl
repnz
outsl
scas
mov
scas
test
test
push
fidivrl
pop
aam
scas
sub
adc
add
push
mov
push
pusha
mov
test
cmc
xchg
sub
dec
mov
mov
in
pop
jae
xchg
and
movd
bound
pusha
std
and
mov
cmpl
adc
jne
cmp
fnop
add
push
fistps
fwait
das
pop
jmp
mov
jp
mov
mov
out
cmp
dec
testl
mov
lahf
fstl
leave
inc
sub
test
mov
xor
sbb
cmp
adc
pop
jp
cltd
sub
and
rclb
mov
aas
imul
out
cmpl
scas
mov
sbb
pop
pop
addr16
dec
loopne
test
xor
push
xchg
mov
xlat
mov
popf
and
cmp
inc
xchg
adcl
and
or
mov
and
or
jge,pn
popa
mov
cmp
adc
loop
jp
enter
loopne
insb
ss
loope
bound
pop
movl
mov
movsl
js
push
and
test
aaa
or
cmpb
cmp
mov
xchg
fdivr
ret
inc
filds
fidivrs
dec
aad
sub
jl
int
xchg
outsb
leave
fwait
cmp
outsl
movsl
inc
cli
sub
or
push
and
loope
or
cs
test
mov
or
into
jae
jb
ja
iret
xchg
mov
divl
fsubrs
loopne
pushf
adc
pop
add
push
insl
adcl
addr16
insb
sti
cmp
fistpl
mov
insb
lahf
dec
imul
mov
into
subb
cmpsb
or
xchg
cs
dec
sahf
cmc
sub
test
les
fsubp
inc
mov
sbb
stc
xorb
es
pushf
adc
jne
out
out
dec
sbb
stc
addb
cmc
dec
dec
sar
mov
xchg
call
add
popa
add
sub
mov
pusha
lea
iret
insl
lret
mov
aaa
je
lret
sbb
and
add
ret
pop
pop
jg
mov
aad
and
inc
movsb
insb
in
ljmp
or
js
sbbb
cmpsb
cmc
jno
xor
or
inc
lcall
loopne
pop
adc
call
sti
loopne
mov
mov
xor
cmp
popf
jno
std
inc
mov
gs
xchg
cli
test
pusha
lret
jb
stos
adc
mov
int
dec
aaa
xor
adc
mov
adc
pop
add
fwait
add
mov
pop
mov
fcmovbe
pop
add
jnp
push
mov
add
mov
and
sbb
xor
push
mov
scas
jl
mov
pop
das
das
sub
arpl
aas
gs
lea
mov
push
mov
and
cmc
add
cmp
dec
outsb
xchg
sub
movsb
push
aaa
dec
shll
arpl
and
inc
popa
movsl
sarb
movsl
ja
movsl
int
sub
imul
mov
xchg
stos
inc
fisubrs
mov
pop
jmp
xchg
jbe
clc
nop
sbb
iret
into
test
adcl
pop
hlt
and
ds
pop
test
jo
pushf
ss
jg
insb
lods
mov
xchg
ret
mov
imul
or
xchg
mov
arpl
dec
cli
iret
repz
fcoms
lea
sub
xor
sbb
adc
xlat
and
xchg
and
cmpsb
pop
mov
dec
dec
cmp
test
ja
aam
sbb
push
sbb
hlt
xchg
xchg
rclb
hlt
sub
mov
jmp
scas
add
mov
push
data16
stc
rcr
bound
addr16
and
mov
out
push
inc
adc
ljmp
xor
push
aas
adc
dec
inc
loop
push
mov
lods
xor
mov
mov
inc
mov
mov
xchg
mov
jge
imul
popf
fxch
sbb
add
xor
pop
push
pop
les
cmpsl
dec
xchg
add
or
mov
push
xchg
push
loope
push
jne
xlat
fbstp
xchg
adc
jno
xor
sub
inc
testl
lea
cmpsb
ja
orl
subb
imul
add
mov
aaa
sbb
dec
test
inc
out
arpl
mov
ficoml
mov
iret
jae
mov
pop
or
data16
movsb
fdiv
popf
ds
push
jnp
fdivr
xor
cmpsl
sahf
cmp
sbb
or
enter
cmp
dec
notb
pop
stos
repz
push
cwtl
lds
xchg
xor
push
sub
icebp
jmp
pop
pop
aad
inc
repnz
jge
mov
jg
clc
mov
adc
gs
gs
idivb
cwtl
jno
and
adc
and
push
xchg
outsl
xor
movsb
aam
ficomps
sbb
aaa
fsubl
lods
xor
out
mov
mov
cmp
adc
adc
test
in
movl
jge
cmc
jg
pop
jno
subl
lahf
mov
das
mov
es
test
mov
mov
sub
das
pop
sbb
add
pop
cmp
mov
fstpt
push
adc
mov
test
mov
je
sar
push
addr16
notl
xlat
and
andb
xchg
adc
push
lret
dec
test
fstps
nop
leave
pop
add
out
cwtl
jns
popf
mov
push
ja
lock
rorb
sbb
into
push
rorl
in
xchg
cmpsl
sti
mov
mov
or
scas
mov
leave
popf
icebp
pop
cmp
pop
push
lret
dec
adc
jns
ret
int
insl
lods
es
aam
scas
out
hlt
cmp
jle
arpl
loop
popl
pop
cmp
inc
xchg
push
add
rcrb
jmp
sbb
push
inc
xor
lcall
shll
cmp
xchg
pushf
xor
sub
ss
xchg
clc
out
gs
mov
test
sub
jge
in
xchg
jecxz
inc
subl
xchg
sahf
mov
jecxz
push
add
out
jbe
jl
daa
pop
dec
imul
mov
xor
inc
mov
inc
fstl
push
xchg
and
cmc
jns
push
and
push
xlat
rcl
mov
test
dec
lods
dec
out
pop
jg
or
insb
and
gs
lret
mov
or
jle
jo
jecxz
fbld
xor
adc
xor
stc
ljmp
mov
add
outsb
fistpll
sbb
and
jge
movsb
push
adc
jbe
idivl
mov
jo
mov
div
add
test
mov
callw
push
xchg
mov
inc
dec
jo
ss
push
ror
pop
pop
pop
aaa
pop
jo
loopne
add
test
fnstsw
test
cmp
testb
dec
or
iret
mov
or
fdivp
in
add
ds
sbbb
scas
sbb
dec
cmp
into
sub
push
out
xor
xor
push
mov
sahf
imul
add
sahf
insb
cmp
repnz
sbb
or
vsqrtsd
or
cmp
push
clc
xchg
cs
mov
shrl
adc
mov
adc
xchg
pop
ret
das
jge
cltd
and
sub
orb
rclb
push
sbb
movsl
hlt
imul
and
nop
call
or
shl
scas
inc
mov
jbe
jb
fidivrs
add
int
lods
push
sbb
mov
adc
cmc
stc
lahf
subl
cld
mov
xlat
lahf
push
and
cmp
xchg
lahf
and
ljmp
dec
adc
cwtl
pushf
push
mov
out
insb
inc
pmulhw
scas
jo
inc
or
add
out
filds
sub
bound
mov
push
mov
fdiv
test
or
mov
dec
or
mov
lods
fistps
int
stc
in
mov
mov
dec
push
lock
pop
roll
out
lret
jmp
daa
sub
cmpsl
xor
dec
lcall
sbb
inc
fstl
inc
mov
inc
push
cmp
push
push
adc
mov
nop
mov
jb
rcrl
je
shrl
jmp
out
pop
push
sbb
out
insb
popa
in
adc
push
mov
cwtl
notb
out
and
mov
test
aas
push
adc
int
loopne
and
push
rcrl
jne
mov
shl
je
sub
int3
fimull
bound
dec
pop
mov
lds
add
mov
icebp
adc
pop
scas
pop
lret
test
out
loop
dec
in
movsb
jge
push
ret
test
mov
inc
push
cmp
clc
cvtpi2ps
notl
mov
sbb
dec
push
push
sub
std
dec
fadd
pop
and
rorl
jnp
adc
sbb
xlat
jp
lret
jecxz
pushf
mov
jle
jecxz
adc
inc
adc
sarb
outsb
add
pop
push
sub
inc
pushf
ret
sub
jne
add
sub
cs
pop
into
je
sub
push
imul
inc
decb
sbb
mov
leave
inc
fldl
fucomip
jl
in
xchg
imulb
inc
cli
adc
clc
add
mov
adcl
test
push
hlt
out
and
shl
xor
pop
adc
jg
or
push
scas
jne
out
std
das
fwait
scas
push
mov
mov
in
jo
jmp
pop
cmp
cwtl
into
test
loop
sub
movsl
or
mov
and
orl
insb
inc
adc
rclb
jle
or
jae
std
out
addr16
pushl
or
mov
dec
lods
mov
out
ljmp
pop
inc
jg
repz
dec
imul
push
fsub
testl
mov
das
dec
ret
stos
aas
rorb
xchg
sti
jno
cmpb
cmp
outsb
push
inc
mov
dec
paddusw
add
lcall
xor
ss
mov
inc
lcall
mov
mov
jb
call
push
push
push
jae
cmovl
sbb
gs
sbb
dec
ret
test
imul
mov
push
mov
iret
jnp
pop
add
push
icebp
insb
or
movl
stc
mov
ret
aad
sub
push
mov
loope
mov
adc
daa
sbb
filds
insb
insl
xchg
and
jg
add
mov
pop
es
testl
int3
or
xorl
fcoms
fnstsw
mov
popa
jnp
jo
xor
inc
sarb
js
stos
sbb
enter
rcll
jbe
xchg
sbb
xor
bound
idivl
jns
mov
out
scas
xchg
leave
aaa
mov
fwait
xchg
loopne
and
ret
and
jp
inc
inc
loope
xor
pop
jo
repnz
cld
and
push
subb
push
cmpsl
sbb
das
lret
test
das
movsl
aas
shl
lock
mov
mov
mov
repz
xor
nop
fcmovnbe
out
mov
sbb
sbb
pop
or
push
adc
fwait
and
jnp
push
mov
jo
lods
push
fs
sub
inc
fcompl
out
sbb
mov
iret
jnp
sbb
js
imulb
cmp
jnp
xchg
test
out
ds
lcall
push
add
icebp
and
out
scas
jge
icebp
in
ds
add
xor
ljmp
out
loope
jecxz
pushf
test
cmp
mov
add
xchg
sub
jne
icebp
cld
enter
enter
inc
xchg
push
add
dec
insl
mov
scas
xchg
mov
lcall
inc
mov
lahf
int
aad
in
ja
loopne
loopne
movups
mov
pop
mov
cmp
dec
dec
push
lods
adc
sub
fldcw
in
cmp
sub
add
mov
adc
mov
shrb
dec
decl
or
or
popa
scas
pop
or
xchg
loope
inc
mov
fildl
add
stc
mov
push
mov
pop
mov
adc
mov
out
xorl
and
adc
mov
sbb
dec
xchg
ficompl
mov
or
ljmp
aas
out
mov
shlb
mov
loope
sbb
stos
inc
or
push
mov
mov
stc
lds
stc
pop
jbe
xchg
lea
and
rorl
push
outsb
dec
cmpsl
mov
add
adc
add
test
test
das
das
out
xchg
xor
sbb
xchg
mov
push
aad
sbb
pop
lcall
je
cmpsl
sub
into
push
ja
cmpsl
pushf
push
negb
aaa
or
adc
nop
mov
jne
lock
mov
test
mov
insl
and
pop
test
fsubrl
inc
pop
scas
push
pop
cs
cmp
aas
ljmp
adc
mov
pop
mov
sarb
sbbb
aad
cld
adc
mov
aaa
insb
mov
aam
mov
xchg
adcb
lods
pop
add
cmpsl
sub
lret
adc
push
popa
lret
dec
or
repz
dec
int
pusha
lock
andb
subl
adc
push
fdivl
push
dec
jp
lret
mov
inc
inc
push
ficomps
inc
js
aas
ds
out
loopne
mov
dec
jns
or
repnz
cmpl
je
mov
pop
hlt
xor
sbb
imul
mov
push
hlt
aaa
test
adc
aas
mov
cmp
lock
inc
adc
rcll
insl
sti
inc
inc
ficoms
pusha
jns
dec
idiv
add
pop
xor
pop
movsl
data16
cmp
jp
xor
mov
ret
adc
push
xor
pop
sub
dec
pop
lea
stos
sarb
xchg
dec
das
push
inc
or
clc
pop
sbb
sbb
dec
adc
pop
jno
add
lods
push
sahf
fwait
insb
inc
addr16
iret
in
mov
xor
add
hlt
and
xor
cmc
fnstsw
negl
push
fstpt
lret
aad
mov
ret
xchg
repz
xchg
popa
sbb
mov
adc
mov
pop
push
xor
push
dec
dec
jmp
adc
xor
mov
mov
and
gs
inc
sahf
adc
or
mov
pop
cmp
add
les
push
inc
arpl
and
movsb
inc
rorb
push
sbb
test
sub
push
ja
dec
je
xchg
jns
sar
pop
mov
pop
rcll
pop
add
push
mov
push
shrb
jecxz
or
cmp
cltd
fadds
jl
mov
je
out
outsb
mov
xor
mov
dec
fstpt
cwtl
xchg
ja
dec
gs
mov
xchg
stos
in
in
fimuls
sub
stc
inc
jb
mov
loope
dec
lret
pop
pop
mov
out
int
das
adc
adc
xchg
and
movsl
cmpsl
outsl
or
mov
jp
mov
sub
push
mov
jns
mov
inc
into
xor
fwait
cmp
insb
jnp
adc
mov
mov
nop
sub
inc
mov
cmp
ja
push
lods
xor
fwait
enter
test
sti
ljmp
test
lods
jle
js
testl
inc
dec
cmp
or
push
test
cwtl
add
loop
dec
lods
sarl
stc
mov
inc
mov
gs
push
leave
or
xor
shlb
out
outsb
and
sahf
xchg
lcall
add
inc
inc
addr16
cwtl
lret
in
mov
dec
push
imul
shll
out
adc
int3
push
mov
cs
dec
sti
addr16
sbb
inc
cwtl
aas
sbb
or
inc
sbb
xchg
jmp
and
xchg
mov
fs
dec
xlat
or
rcrb
mov
sahf
sahf
xor
adc
mov
mov
int3
push
popf
gs
lds
enter
and
sub
jb
xor
jne
add
sub
aaa
out
hlt
loopne
out
psubd
iret
stc
dec
cs
test
dec
scas
incb
sub
xchg
rcrl
push
int
xor
add
sbb
hlt
in
jno
lods
lahf
stc
out
ret
cs
ja
inc
pushf
xor
in
iret
and
sub
or
data16
daa
sbb
mov
dec
insb
mov
les
test
mov
arpl
xor
adcb
mov
cwtl
xor
out
call
push
dec
aaa
pop
cltd
pop
lahf
or
movsb
lret
jae
adcb
cmp
outsl
mov
mov
shlb
and
push
jns
jmp
add
jl
fwait
mov
fwait
shr
mov
and
lds
hlt
out
pop
lock
adcb
dec
cld
test
nop
mov
pushf
mov
sti
popa
stos
imul
lea
stos
cmp
scas
movsb
push
movsb
mov
fists
push
outsl
jns
repnz
add
insl
cmp
mov
int
add
cmp
sti
bound
xor
mov
ss
or
sbb
stos
icebp
sbb
fildll
stos
addl
and
jle
loop
mov
sbb
neg
mov
adc
mov
insl
adc
add
sahf
xor
push
ja
dec
js
sbb
sub
dec
in
enter
outsl
daa
pop
jg
roll
xor
rorb
push
xor
dec
int
push
stos
pop
xor
cmp
push
ss
lret
das
fidivrl
mov
push
hlt
leave
adc
mov
pusha
shll
sahf
adc
add
push
lock
outsl
aam
mov
popa
cs
adc
xor
push
add
mov
lods
pusha
inc
dec
shll
cmp
clc
xchg
add
loope
leave
cmp
scas
daa
mov
mov
push
in
push
subb
pop
pop
jnp
sysret
xor
out
hlt
fstpt
stos
mov
ljmp
repnz
jecxz
jmp
add
or
lret
sub
mov
push
sbb
lods
or
daa
cmp
cmp
xor
fldcw
adc
sarb
mov
stc
clc
out
test
xchg
dec
xchg
and
shr
gs
lock
out
cmp
dec
inc
add
pop
or
loope
sbb
xchg
or
ud0
lret
incb
pushf
ja
jo
adc
sbb
popf
mov
hlt
and
imul
push
adc
mov
cmc
sbb
add
adc
adc
cmp
inc
ss
mov
mov
insb
fcoms
scas
les
and
scas
mov
and
sbb
outsb
or
fsubl
mov
out
into
xchg
stc
icebp
out
or
das
push
push
nop
aas
mov
mov
jp
lock
gs
aam
push
jns
sub
in
dec
and
mov
and
and
iret
inc
or
test
push
rcrb
mov
clc
cmp
or
insb
je
add
sahf
aam
mov
addr16
fstpt
jmp
inc
lcall
fcoms
cmp
sbb
jae
and
pop
loop
stos
pop
ds
aas
inc
cmp
mov
ds
call
mov
sub
mov
mov
mov
dec
dec
sub
fildl
insl
pop
add
xor
mov
mov
cmp
mov
jnp
or
pop
push
scas
cmp
outsl
ss
cmp
daa
mov
lahf
or
adc
lcall
dec
dec
or
arpl
in
cmpsb
push
ja
and
dec
cmc
add
or
pushf
push
scas
fsubrs
repz
push
pop
adc
rcll
cmp
dec
cmp
jp
fstps
sbb
pop
inc
das
negl
enter
push
mov
xchg
stc
mov
jae
cmpsl
loopne
les
mov
cmp
xchg
mov
pop
sbb
pop
les
int3
mov
ucomiss
cmp
sub
mov
cs
test
xor
cltd
mov
invd
and
xchg
push
lahf
inc
add
shr
lds
pusha
mov
and
mov
inc
inc
cmp
sbb
ja
jne
jae
movsl
jne
movsl
or
repz
addr16
mov
or
jmp
dec
inc
add
sbb
imulb
lock
pop
je
xchg
out
cmp
rcr
call
pop
xchg
cmc
xchg
jne
xchg
or
jo
pop
mov
out
rolb
adc
aad
add
cmp
push
outsl
pop
cmp
das
mov
sub
out
outsb
jg
xor
pusha
out
inc
aas
xor
mov
push
xchg
mov
inc
pop
mov
add
hlt
xor
sub
addr16
in
loopne
cmp
push
add
into
pop
imul
rcrb
or
lods
in
mov
mov
ret
jle
mov
adc
inc
arpl
sub
bound
xor
jecxz
xor
dec
jg
xor
outsl
mov
sbb
loopne
inc
insb
mov
iret
adc
sub
icebp
sub
cmc
loop
dec
ret
in
and
outsb
div
pop
mov
testb
pop
or
insl
jl
pushf
mov
pop
dec
addr16
fdivr
pop
jbe
shll
and
jo
iret
insb
mov
addl
leave
mov
or
js
lahf
mov
stos
mov
fimuls
cmp
je
sub
pop
inc
adc
mov
into
jl
mov
loop
movsb
in
das
sbbb
mov
arpl
dec
mov
pop
xchg
xor
cmc
out
and
mov
clc
xor
in
push
ret
stos
movsl
aam
cmp
cmp
pop
popf
sub
mov
rep
xchg
jg
scas
adc
mov
outsl
insl
loopne
mov
lods
nop
mov
sub
rolb
dec
leave
mov
jnp
sub
dec
jno
or
nop
jne
sbb
xor
xchg
add
outsl
test
push
test
cli
or
cs
sub
sub
mov
es
sub
xlat
sbb
mov
movsl
and
pop
inc
addr16
imul
sub
je
add
or
push
dec
push
pushf
xor
pop
mov
xor
rcll
xor
fmul
or
xchg
stos
mov
aam
inc
fwait
mov
aad
pop
push
mov
push
mov
insb
mov
popa
out
dec
sub
scas
iret
imul
fdivrl
pushf
in
xchg
aam
clc
cmp
jae
or
sbb
xor
xor
mov
sub
je
punpckldq
xchg
aaa
mov
pop
fyl2x
add
fstpt
out
fsubr
mov
and
pop
int3
scas
mov
xor
dec
addr16
push
rolb
fstpl
repnz
call
sub
inc
bound
outsl
repnz
mov
cmpb
mov
inc
inc
xor
or
sub
add
inc
out
ss
je
pop
addr16
jp
lds
push
repnz
adc
pop
push
fsubrl
xchg
push
push
add
push
add
inc
sbb
dec
sub
and
or
sbb
lock
push
sub
mov
pop
push
pushl
mov
incl
pop
push
adc
sbb
push
adc
xchg
inc
imul
leave
loop
outsb
fnstenv
inc
rcr
cwtl
xchg
xchg
mov
mov
inc
mov
and
out
xor
inc
aaa
push
mov
ja
mov
mov
xor
out
and
cmp
imul
dec
mov
ds
pop
shlb
jo
popf
mov
and
fscale
jns
repz
pop
or
popa
imul
pop
cli
mov
inc
iret
mov
inc
les
xchg
inc
or
push
jg
scas
add
xor
mov
adc
and
pushf
mov
cmpsb
push
cmp
mov
in
xor
xchg
rcr
adc
sbb
mov
jae
pop
inc
mov
jmp
jbe
test
filds
idivb
outsb
jns
ljmp
mov
push
sti
ficompl
pop
dec
fidivl
shrl
pop
add
adc
sub
cmp
test
int3
les
shl
pop
add
inc
pop
add
inc
mov
push
pop
adc
or
pop
insl
nop
adcl
push
or
shl
cmp
insl
dec
test
imul
test
pushf
les
dec
adc
data16
and
adc
push
fs
fildl
mov
inc
push
sub
rcr
shrb
sbb
fldt
add
lods
addr16
mov
cltd
jge
inc
sbb
push
push
testb
mov
dec
mov
xchg
roll
lea
aam
dec
lds
aam
scas
sub
pushf
mov
inc
out
jnp
daa
aaa
pop
jno
icebp
jmp
pop
stc
xor
fwait
pop
xchg
in
jne
stc
pop
pop
and
mov
jo
lea
test
adcb
mov
pop
test
and
fstl
add
ficoml
popl
mov
pop
stos
jb
roll
adc
pop
arpl
scas
dec
test
out
aam
jnp
shl
rorl
mov
jmp
jb
popa
daa
add
jnp
faddp
mov
adc
mov
in
dec
shrl
pop
pusha
dec
xrelease
je
and
jnp
loope
sub
sbb
aas
pop
into
inc
cmc
movsl
in
push
aaa
outsl
xlat
xor
mov
cmpsb
adc
ljmp
cmpsb
sbb
pop
sub
dec
les
adc
imul
pop
add
jne
lods
fwait
push
inc
fldt
roll
jle
push
jnp
enter
push
push
lret
cs
jle
dec
leave
insb
cmp
mov
sbb
idiv
pop
mov
push
mov
mov
sti
push
xchg
test
mov
std
in
lods
xchg
addl
imul
xor
andb
adc
insb
sub
aas
sub
and
repz
shll
inc
xchg
jb
icebp
mov
lret
mov
popf
jmp
aaa
pop
fnsave
stc
sub
mov
shll
xlat
jecxz
cmc
xchg
lret
mov
push
mov
add
push
roll
push
iret
cmp
fdivp
fisttpl
add
cmpsl
cmc
sbb
xchg
lock
add
mov
insb
addr16
sub
out
or
pop
cmpsl
rcl
adc
pop
test
nop
inc
mov
test
lcall
shrl
outsb
cmp
lret
inc
push
mov
stos
imul
shl
int
dec
lds
and
ror
add
and
mov
das
scas
cmp
jmp
clc
popf
mov
iret
leave
notb
jmp
sbb
fmull
je
sarb
dec
scas
lahf
fnsave
in
jae
sbb
pusha
enter
pop
xchg
push
enter
insb
popf
pop
cli
mov
inc
mov
mov
negl
sub
xchg
pop
mov
shrl
add
or
dec
dec
inc
pusha
fisubrs
push
cmp
jns
or
ja
enter
mov
inc
mov
insl
imul
jns
sub
jmp
ret
mov
cmp
test
mov
mov
add
adc
push
sbbb
mov
sub
shlb
gs
sbb
lcall
adc
xchg
lret
aam
or
sahf
push
add
shll
loope
pop
push
dec
filds
xchg
in
int3
lahf
imul
fdivl
push
ret
enter
xchg
arpl
pop
mov
sarb
stc
add
fstps
mov
out
adc
ss
data16
mov
mov
xor
cmp
sub
ret
cmp
push
repnz
sti
pop
adc
xor
cmp
cmc
xlat
int3
xor
cmc
or
inc
cmc
adc
and
cmp
cltd
jecxz
or
xor
and
lahf
fs
test
icebp
decb
stos
in
sub
push
movsl
mov
lcall
mov
es
inc
sarl
add
xor
movsl
pop
push
push
out
sub
rcl
repnz
movsb
stos
sub
cwtl
push
or
adc
testb
pushf
lock
push
mov
jnp
sbb
pushl
sbbb
lock
in
mov
jmp
or
daa
xor
dec
daa
in
rclb
xor
pop
pusha
sahf
test
mov
fwait
mov
push
test
and
or
xor
mov
cmpsb
and
ret
cmp
pop
mov
dec
pusha
imul
js
movsb
pop
inc
incb
aaa
test
loope
jo
dec
leave
clc
cmp
bnd
adc
adc
and
divb
xchg
mov
add
sbb
cmpsl
and
daa
insl
jl
mov
or
cld
loopne
dec
out
push
add
mov
xor
scas
cli
xchg
or
sub
idivl
gs
lss
jne
add
std
movsl
idivl
imul
scas
inc
inc
xor
mov
imul
fistl
call
mov
dec
sub
and
shr
mov
and
ret
sbb
loopne
shrl
inc
xchg
push
cmp
sbb
inc
cmpsb
ror
sbb
ljmp
lds
mov
cmc
inc
icebp
stos
mov
movsl
bound
jle
inc
in
pop
cmpl
arpl
popf
mov
loopne
inc
lcall
adc
cli
xchg
out
bound
nop
mov
idiv
ret
xchg
imul
cmpsl
xor
adc
test
sbb
into
and
mov
or
sub
add
mov
adc
repnz
lret
adc
jge
subl
jmp
push
sti
lret
mov
imul
idiv
push
xchg
arpl
enter
les
add
rorl
jbe
enter
nopl
das
or
cltd
cmpsl
movsb
jl
sbb
add
push
in
jmp
out
mov
je
stos
lret
andl
xor
sbb
aas
sahf
ja
and
shrl
icebp
pop
fs
into
push
dec
movsl
push
ret
icebp
aad
shll
clc
inc
cmp
jp
jb
cld
inc
push
pop
enter
fimuls
cmpsl
mov
gs
push
jne
inc
js
cmp
daa
push
adc
je
in
mov
mov
les
add
mov
push
mov
cld
dec
negb
in
stos
lds
pop
mov
popl
xor
pop
dec
pop
popa
in
das
cwtl
sbb
aad
es
jecxz
sub
or
sbb
cmp
or
xchg
outsl
std
sbb
or
aaa
xor
rol
and
mov
cmp
fmul
decl
jno
dec
stos
sbb
shlb
mov
sbb
jp
movsb
jmp
ret
imulb
jle
insb
xor
jb
dec
pop
pop
jbe
loop
dec
lcall
out
or
je
fisttpll
push
stos
jmp
jnp
es
int3
jg
jae
test
cmpsb
in
mov
subl
shl
leave
sbb
cmp
loope
clc
mov
aas
sbb
xchg
push
jbe
or
iret
pop
lods
jp
cmp
iret
xchg
xor
or
mov
jbe
movsb
or
push
mov
nop
sub
adc
in
mov
mov
addr16
push
stos
lret
mov
jne
cld
xchg
out
loopne
mov
jp
cmpsl
into
xor
xorl
lcall
cli
pusha
lret
adc
inc
mov
mov
cmp
inc
mov
cmpsl
in
xor
test
sarl
fiaddl
push
push
mov
lahf
out
cs
test
aad
lret
arpl
mov
jp
sbb
xor
push
inc
orl
daa
in
stc
stc
out
in
lds
iret
adc
xor
sbb
push
push
inc
in
call
outsb
ss
push
bound
cmpsb
iret
dec
cmp
lahf
cmp
jl
pop
enter
ret
imul
push
mov
cmp
lahf
xlat
inc
mov
xor
push
push
adc
repz
xchg
lea
xlat
pop
jp
fldl
xor
iret
adc
push
jg
bound
lret
add
xchg
movsl
pop
mov
popf
subb
fstps
movsb
in
pushf
pop
mov
das
jne
mov
movsl
adc
in
inc
xchg
cmovl
jne
idivb
inc
mov
sbb
xlat
shrl
adc
stos
test
lods
xor
imul
stos
xlat
pop
xchg
pop
idivl
mov
inc
mov
sub
and
int
out
sub
notl
cmpsl
push
add
insl
fmull
je
inc
aaa
std
cltd
mov
cld
jg
repnz
add
mov
jae
mov
out
and
pushf
pop
inc
iret
arpl
jns
add
jmp
cmc
insl
sti
push
sti
jne
jp
call
popf
mov
adc
mov
mov
push
je
push
mov
inc
fsubrs
mov
adc
lods
sbb
sub
sub
cltd
xor
fiadds
jns
xchg
cmpsb
adc
jb
sbb
sbb
bnd
or
fucomi
jmp
fwait
mov
sbb
in
sbb
cmp
mov
push
push
ds
xchg
out
ljmp
in
mov
stos
push
repz
mov
mov
call
daa
cmpsl
jne
insl
dec
mov
les
mov
stc
mov
and
out
lock
std
icebp
xchg
cmp
aas
dec
aam
mov
insb
cmp
xor
sbb
and
fs
inc
mov
mov
sub
sbb
rcrl
push
ds
fwait
in
adc
xchg
cmp
dec
fiadds
dec
hlt
cltd
pop
outsb
jb
jo
aas
pop
rorl
jp
mov
cmp
fmull
jbe
hlt
jbe
jl
lea
dec
lahf
cli
add
popf
repnz
lahf
js
cmpsl
push
enter
mov
pop
lret
dec
xor
add
into
shrb
call
sbb
mov
dec
adc
fimuls
js
add
call
xor
ficomps
iret
push
lahf
and
pushf
push
bound
aad
in
jae
movsb
jmp
out
mov
xchg
mov
dec
add
xor
xor
cmp
mov
pop
and
inc
mov
mov
fisubrs
dec
cwtl
mov
dec
xchg
ljmp
xchg
mov
xrelease
mov
addb
fstpl
loop
or
faddl
dec
xchg
pop
xchg
fwait
cli
jb
sbb
scas
outsb
mov
lret
cmc
dec
sbb
fcmovbe
scas
lds
add
lods
add
insl
and
daa
dec
sbb
jnp
pop
dec
orl
or
lret
push
arpl
ss
cli
movsl
fistpl
xor
insl
push
jno
sbb
cs
sub
testb
jae
add
and
cmp
dec
mov
movsb
fisubrl
dec
mov
sti
call
sbb
xor
mov
repnz
mov
nop
imul
xor
orl
lds
cmpsb
pop
pop
sub
add
call
dec
inc
stos
push
addr16
inc
mov
sbb
sahf
js
inc
std
mov
sbb
inc
add
and
xor
divb
pop
push
iret
aas
adc
or
add
sbb
push
add
lcall
lahf
push
add
repnz
cs
cli
loopne
push
je
pop
ud2
xor
fcmove
mov
pop
lret
clc
sbb
shrd
les
popa
push
scas
sbb
jecxz
or
push
pop
addr16
sub
cmp
repnz
push
mov
cmpsb
out
das
pop
loope
mov
gs
inc
jns
inc
push
movsb
cmp
adc
jle
into
add
daa
inc
pushl
test
int3
repnz
cmp
push
int3
jmp
pop
popa
inc
lea
mov
fdivl
inc
cmpsl
rclb
imul
xor
sar
js
cmp
icebp
push
mov
fmul
jmp
dec
sbb
adc
out
call
mov
mov
popa
push
sbb
cltd
mov
add
jae
shll
jne
cmp
mov
shll
jmp
sbb
inc
test
or
stos
loopne
lahf
or
jl
push
jecxz
test
sti
pop
mov
popa
cmp
sbb
sub
test
dec
jbe
sub
bound
sbb
or
cmpsb
mov
or
xor
cwtl
push
popa
addr16
frstor
pop
sbb
push
jns
sub
shl
stos
and
add
mov
adc
fwait
ds
and
js
in
jne
nop
mov
lock
hlt
cmc
mov
fdivr
push
cmpsb
and
leave
xchg
push
dec
cld
xchg
js
emms
fs
cmp
mov
sti
push
sub
sbb
outsl
mov
cmpsb
fstl
inc
leave
xchg
test
or
jge
test
mov
les
xor
pushf
cltd
pop
lods
outsl
jge
add
and
add
test
push
adc
jg
inc
push
int
sub
and
mov
shl
xchg
lds
mov
enter
xor
inc
test
repz
sub
fimuls
repnz
add
adc
mov
jge
stc
movsb
jle
and
push
xor
inc
inc
push
jp
aad
or
movsl
cmp
jbe
xchg
dec
and
mov
lods
dec
pop
add
int
repz
dec
sbb
je
pop
jno
fcos
xor
cmp
scas
mov
sbb
idivb
test
inc
pop
insl
mov
test
cmpsb
nop
jl
adc
and
push
lods
ret
lock
push
pop
stos
test
jp
dec
dec
lods
insl
mov
mov
leave
jns
sub
and
add
addr16
aam
add
mov
sbb
or
loope
sbb
out
insb
adc
push
mov
sti
push
rclb
aad
pop
or
js
jns
jmp
cmpsl
rclb
add
test
in
jge
add
test
mov
popf
ds
test
add
mov
js
or
add
lret
es
cmp
lock
movsl
inc
daa
ret
fsubl
aas
mov
inc
add
jns
xor
and
add
push
cmp
jge
cmpb
imul
mov
scas
and
int
jb
fidivl
sub
jae
inc
inc
jmp
xor
ret
roll
lahf
cmpl
sbb
ficoml
inc
add
in
xor
js
and
cmp
aam
daa
je
cs
lcall
jl
int3
lock
mov
mov
ljmp
pop
xor
pop
popf
push
mov
movsb
lret
aas
xchg
ret
lcall
push
mov
mov
imul
dec
push
pushf
pushf
sbb
loope
inc
ss
test
jbe
sbb
scas
mov
xor
mov
push
clc
xor
in
sbb
mov
cltd
es
add
pop
pop
mov
ss
rclb
dec
mov
lret
fnstsw
call
shlb
imul
pop
cmc
outsl
jl
int
mov
fdivl
fidivs
jmp
and
cmpsl
lds
jbe
xchg
insl
repz
dec
int3
or
divl
push
xchg
mov
rclb
rolb
or
fadd
push
aam
fstpt
clc
cmc
xchg
in
inc
mov
subb
xchg
shl
fisubrl
hlt
mov
insb
cmp
xor
mov
scas
mov
rclb
stos
mov
sub
xor
jmp
fs
pop
sbb
lea
jg
clc
mull
mov
test
cmpsb
lret
imul
push
dec
xor
xchg
push
fwait
dec
mov
lods
mov
sti
adc
movsl
mov
in
xchg
jno
pusha
int
rorl
cmp
adc
int
xchg
std
lea
sub
inc
lds
hlt
lcall
subl
stc
icebp
daa
sbb
mov
pusha
pop
fisubrl
ds
sbb
inc
cmp
jbe
mov
jo
shl
fcmove
sub
xchg
and
inc
push
aad
pop
cmc
mov
mov
cltd
xor
mov
adc
pop
ja
sbb
xchg
negb
and
jp
nop
mov
jo
mov
pop
jno
add
jnp
xchg
stos
gs
ffreep
dec
icebp
xor
daa
insl
mov
jl
rcrb
adc
add
imul
add
orl
xchg
push
outsl
mov
cwtl
fldl2e
jns
dec
cmp
insl
sbb
inc
jae
pop
xorl
push
jl
push
add
fbld
adc
rcl
jae
mov
push
mov
mov
add
jecxz
and
push
pop
pusha
and
and
scas
jne
push
mov
push
add
xchg
jge
fisubrs
mov
fstpt
ss
adc
fscale
arpl
cmpl
xchg
jge
mov
xor
lcall
pop
adc
sbb
js
nop
lods
adc
pop
xor
and
fcmovu
add
adcb
push
lock
xor
hlt
inc
add
lods
fisubl
mov
mov
icebp
repnz
adc
add
xor
adc
fldenv
and
mov
mov
sub
cwtl
mov
mov
inc
xchg
mov
lret
jge
jmp
mov
fisttps
test
jno
mov
xor
sub
stc
pop
mov
mov
push
adc
hlt
dec
inc
aam
push
add
lret
enter
inc
jb
pop
and
stos
outsl
push
xchg
mov
inc
pop
test
push
int
dec
xor
inc
cmp
pop
sub
popf
rolb
inc
int3
and
pop
and
fisubs
mov
pushf
mov
outsl
lods
xchg
pop
jns
fsin
fistps
xchg
in
das
add
fwait
push
loope
jne
out
mov
lret
jno
mov
push
dec
push
mov
out
mov
push
push
jmp
jb
stc
cmpsl
add
popa
jmp
das
mov
sbb
add
out
mov
repnz
xchg
movsb
scas
xchg
add
lahf
out
cmpsb
movsb
arpl
sbbb
scas
fdivrl
cld
mov
pusha
out
jp
xlat
mov
pop
sbb
shlb
sub
mov
jl
orl
rcrl
lods
pop
pop
push
sub
cli
push
jge
pop
xchg
pop
pop
lods
hlt
xorl
sub
insb
mov
movsb
fs
inc
and
and
les
pop
rorb
mov
mov
int
cli
fdivl
dec
sbb
xorb
dec
outsb
lea
ljmp
shl
mov
negl
popa
sbb
inc
pop
int
fstps
pop
jmp
push
or
mov
jmp
rol
movl
mov
xchg
lock
cwtl
lret
cld
enter
in
popf
xchg
sbb
test
addr16
pop
jge
dec
pop
je
repz
stos
outsb
inc
out
push
fwait
leave
in
pop
js
adcb
cmp
sbb
pop
add
pusha
popa
push
sub
cs
lahf
mov
mov
sbb
scas
stc
aam
imulb
jmp
iret
sbb
js
shlb
and
sub
cmc
sub
xchg
lahf
imul
dec
inc
pushf
test
jle
pusha
stos
lret
jb
out
sub
pop
mov
cmp
mov
and
das
dec
shrb
sbb
cmp
jb
in
icebp
into
mov
inc
mov
scas
jnp
xor
mov
jbe
fs
cmp
pop
test
or
and
inc
xor
enter
orl
jnp
in
std
shl
mov
sub
mov
gs
mov
adc
ret
jp
es
add
jno
hlt
outsl
lock
imul
jmp
and
cld
je
shrb
add
mov
test
shrl
push
movsb
pop
xchg
outsb
xor
insl
mov
xchg
enter
add
add
arpl
dec
adc
loop
popf
mov
ret
or
adc
imul
andl
push
mov
sub
jne
xchg
pop
and
shrb
or
imul
fldcw
pop
xchg
ret
nop
adc
jne
imulb
mull
jg
adc
cmp
xor
and
add
fnstcw
adc
xchg
xor
inc
cmp
shrb
in
sbb
inc
mov
icebp
mov
fldcw
inc
push
cmp
out
push
mov
fsubs
inc
push
ficompl
rclb
call
loope
jb
dec
aad
sub
adc
fmull
dec
repnz
ss
mov
mov
or
out
add
adc
mov
pop
dec
clc
scas
faddp
mov
cmp
and
ret
fidivrl
and
sbb
xor
je
or
or
icebp
jns
subl
xor
mov
xchg
movsl
pop
lods
dec
pop
push
imul
dec
and
mov
sub
fcompl
movsb
js
lcall
or
and
cmpsb
test
scas
adc
out
imulb
fiadds
jle
je
push
adc
icebp
loop
je
lcall
mov
lods
mov
pushf
dec
in
mov
inc
fwait
adc
pop
mov
xchg
adc
mov
in
mov
inc
jns
pop
dec
fwait
xchg
lea
sbb
out
and
pop
and
test
cmp
insb
and
lds
mov
sti
pop
cli
fstp
xchg
jg
jnp
or
ret
push
cld
fiaddl
call
dec
xchg
outsb
in
push
hlt
adc
enter
sbb
mov
pminsw
push
daa
scas
and
push
adc
fldenv
push
fs
pop
xchg
push
das
or
gs
cmp
xchg
inc
mov
out
pop
sarl
push
jmp
loope
add
sub
shll
sbb
mov
add
mov
mov
lcall
pop
mov
pop
andl
aad
out
shl
loopne
sbb
jo
sti
fdivs
clc
loopne
cmc
out
sti
test
inc
add
mov
push
ror
push
imul
add
cmc
push
jne
xchg
mov
fistl
xchg
mov
lahf
inc
je
mov
sbb
and
jno
pop
popa
daa
lds
or
mov
pushf
inc
pop
mov
cmp
push
js
fs
sbbl
das
pusha
out
pop
nop
rolb
dec
dec
cwtl
ljmp
dec
sub
sub
cld
sarb
fcmovne
adcb
testl
sbb
mov
rcl
pop
imul
mov
pop
or
mov
dec
frstor
xlat
in
or
lret
pop
inc
or
xchg
leave
pushf
mov
cwtl
pop
mov
cmpl
minps
mov
pushf
jge
sbb
dec
out
in
cmp
sub
pop
sub
jbe
test
int
out
push
mov
jle
movsb
mov
mov
lret
add
mov
fidivrs
push
mov
inc
iret
add
ljmp
or
test
xchg
and
out
inc
inc
and
jecxz
fs
xor
adc
mov
adc
add
xchg
loope
sub
pop
enter
add
nop
mov
es
in
cmpsb
mov
inc
cmpsl
mov
fstps
sub
sub
jae
xor
mov
lret
push
pop
mov
shll
lea
fbld
test
xor
scas
in
jmp
mov
jb
pusha
iret
push
xchg
xchg
dec
dec
out
rcll
cmp
cmp
test
aas
cmpsb
mov
inc
fcoml
pop
inc
mov
mov
ret
adc
pop
sub
shrb
push
icebp
mov
cli
mov
fldenv
pop
mov
pop
jl
mov
jo
sbb
jl
popa
dec
push
pusha
pop
mov
add
imul
mov
mov
fldpi
add
cwtl
xchg
scas
xchg
stos
jmp
pop
sbb
stos
adc
pushl
mov
push
leave
and
sar
xchg
rorl
lea
in
dec
inc
fwait
inc
int3
popf
rcr
dec
mov
sub
lods
and
cmc
loop
mov
je
subb
jbe
jp
test
psrad
fidivs
inc
pop
popa
xchg
mov
sub
outsl
mov
dec
hlt
aam
test
jecxz
jbe
pushf
pop
xchg
test
jg
sti
fldenv
xchg
call
xor
repnz
pushl
arpl
out
sub
inc
push
addl
xchg
adc
adc
xchg
test
and
ljmp
jmp
in
mov
push
sub
aad
pop
in
std
cmpsb
mov
cmp
imul
xor
push
out
mov
jo
push
cltd
aam
add
rorl
or
jle
es
sub
and
in
movsl
aam
fucomip
popa
mov
and
pusha
sbb
jns
mov
inc
mov
push
jno
jae
add
pop
loopne
mov
ljmp
hlt
bound
jp
lret
fimuls
inc
clc
xor
cltd
addl
call
mov
dec
lahf
dec
xchg
adc
or
rcll
and
or
jo
inc
stos
push
push
push
cli
mov
xlat
clc
mov
pop
jae
add
xchg
sbb
adc
inc
ja
and
mov
scas
push
shrl
jmp
into
push
test
or
ja
push
inc
cmp
cmp
adcb
aas
aam
jae
pop
xor
cmpsb
mov
fwait
cld
mov
push
xlat
mov
dec
adc
pop
mov
push
mull
pop
xor
sub
sarb
mov
dec
bnd
in
inc
lods
jecxz
rcrb
add
mov
xchg
mov
mov
fistl
jecxz
cmp
aad
adc
or
and
jno
add
push
lds
movb
rcr
pop
xor
inc
mov
int
or
mov
int3
shl
ss
cli
jno
js
lea
stos
sbb
int3
faddl
jle
push
add
fmul
fcmovnbe
pop
inc
std
push
hlt
lock
add
test
mov
cmc
aas
test
adc
xorb
push
jg
adc
xchg
mov
mov
push
add
mov
cmp
or
sahf
sbb
lret
cmpxchg
mov
loopne
xor
dec
adc
xlat
out
adc
repz
jmp
std
push
lds
lret
pop
scas
adc
sbb
xchg
rep
or
cli
jo
mov
les
mov
inc
cmp
ficomps
pusha
das
and
loop
add
or
adc
shrb
pop
stos
jmp
mov
das
repnz
jne
xchg
iret
addr16
cmc
scas
dec
mov
shll
nop
ss
mov
imul
lock
ret
sub
adc
jg
sbb
jle
dec
push
popf
out
mov
mov
fiadds
scas
lret
add
or
jecxz
int
addb
add
push
sub
jne
mov
mov
add
cmpsl
sub
pop
jae
jle
imul
xchg
inc
xor
adc
push
sbb
adc
push
lret
mov
fsubrl
mov
shl
mov
mov
in
push
add
add
mov
ja
scas
addr16
fldcw
add
inc
arpl
and
ds
subl
iret
jmp
sbb
loop
sub
sbb
push
and
mov
add
push
mov
cmp
pop
push
inc
jb
xchg
xchg
push
pop
cmpsb
rclb
lahf
push
jg
das
andl
jns
shrl
or
mov
outsl
push
hlt
cmp
enter
xor
mov
ret
int3
repz
mov
pop
adc
mov
push
daa
dec
leave
outsl
inc
mov
jae
ss
outsl
xor
sahf
xchg
lds
lock
imul
xchg
enter
dec
jne
shlb
dec
scas
mov
sbb
jmp
jmp
nop
testb
inc
cmc
sbb
pop
sbbl
es
pop
fcmove
shl
call
int3
aas
cmp
sbb
addr16
sub
jnp
loope
or
std
dec
aaa
jae
jb
add
leave
jg
cmpsb
add
cli
dec
scas
push
jns
xchg
mov
icebp
cltd
jbe
idivb
jg
ffreep
orl
stos
pop
adc
jne
out
aam
or
stc
cmp
adc
mov
pop
or
pop
outsl
dec
and
xor
test
and
or
push
xchg
push
aam
fucom
repz
push
leave
adcb
mov
add
and
addr16
or
add
add
aam
aaa
jno
std
dec
pop
out
mov
jae
dec
negb
arpl
outsl
adc
jne
stc
das
push
out
sahf
sub
xor
xor
sbb
mov
pop
fidivs
stos
shrb
lods
adc
fildl
mov
pop
jnp
das
fsub
adc
lock
fimuls
andl
dec
pop
fldcw
or
and
call
ret
xchg
mov
idiv
addr16
lcall
ja
outsl
cmp
call
pop
lret
adc
adc
mov
mov
cltd
mov
stos
sbb
sbb
lods
push
pusha
popf
shl
andb
jp
push
rcl
push
push
out
push
xor
xor
loopne,pt
pop
cmovs
dec
mov
mov
gs
mov
clc
lret
addr16
pop
test
arpl
cmp
dec
in
push
dec
dec
lret
sub
mov
adc
aas
lds
pushf
jbe
push
and
pop
stc
jg
hlt
cmpsb
xchg
dec
jb
orb
add
or
mov
push
inc
jg
rcr
in
fcmovu
dec
add
jl
call
stos
ja
icebp
add
pop
popa
mov
jno
das
mov
gs
add
lods
fld
jle
int3
stos
xchg
repz
mov
cwtl
cmpsb
testl
cmp
cmp
xchg
sahf
sbb
fiadds
pop
mov
popf
add
lock
repz
outsl
mov
mov
in
out
popf
sbb
fisubrl
ret
daa
setle
push
cmpsl
add
fimuls
in
ret
inc
ret
sarl
xor
dec
pop
fcoml
in
lcall
loopne
std
or
into
out
jmp
xchg
push
cwtl
nop
aas
cli
inc
fs
fimuls
inc
repz
pushf
pop
dec
mov
orl
mov
jbe
cmp
ror
and
cmc
idivl
in
movsl
call
imulb
mov
call
int
push
jne
jle
mov
arpl
rcrl
sbb
push
fstpt
and
addr16
jge
inc
xlat
fwait
mov
fwait
push
cmp
in
lods
or
std
adc
xchg
fnstcw
mov
stos
pop
fdivrs
add
xor
fs
out
out
and
sub
add
add
fld
mov
roll
xlat
stos
add
aas
adc
pop
insl
pop
iret
add
jecxz
pop
insb
mov
xchg
jge
lcall
pop
xor
pop
fs
in
nop
ljmp
in
in
cwtl
sub
and
mov
jno
cmp
pop
cltd
sub
pop
ljmp
jbe
outsl
loope
jno
xchg
adc
mov
and
fdivrl
and
push
mov
sahf
ss
or
jle
or
jg
xchg
cmpsl
clc
jne
addr16
in
inc
pop
sti
ds
xor
jnp
pop
pop
cmpsl
xor
ja
nop
adc
push
stos
and
add
lods
rcl
aad
out
xchg
sub
das
or
lcall
jb
nop
xchg
nop
dec
or
packuswb
subb
jecxz
add
lds
jbe
lret
cwtl
push
dec
mov
ss
int3
ret
mov
sub
inc
xor
loopne
fcompl
leave
push
push
out
lods
lock
mov
adc
mov
add
imul
inc
sub
pop
pop
popf
repnz
in
lret
push
sbb
adc
insb
inc
dec
xchg
mov
push
mov
mov
out
push
dec
jmp
cmp
ds
fisubrs
out
sub
call
lea
mov
xchg
xchg
jmp
push
jp
dec
add
clc
or
out
dec
outsb
lock
mov
cmp
inc
cwtl
inc
addl
sbb
add
cmp
dec
sbb
sub
std
mov
adc
mov
leave
addr16
scas
addb
xchg
push
sti
insl
mov
adc
add
addr16
insb
negb
test
outsl
push
push
pop
cmc
inc
jmp
xor
jle
or
loope
aad
rcll
ja
xchg
or
das
popf
insl
daa
xchg
into
adc
fwait
jmp
in
scas
mov
jne
pop
push
fiadds
lods
and
insl
mov
ljmp
mov
lds
ficoml
add
movsl
xlat
jnp
shlb
dec
mov
in
std
sub
mov
and
aaa
rcrb
fisubs
das
sub
mov
mov
lds
dec
daa
stc
test
or
jle
nop
push
sbb
mov
je
pop
add
and
ss
push
and
std
ret
jae
fwait
mov
or
sbb
leave
cmpsb
pop
adc
adc
add
push
xchg
cmp
in
stos
out
lcall
stos
cmp
lret
fidivs
lock
daa
test
aad
movaps
add
and
outsl
mov
loop
jne
push
lahf
icebp
jmp
lock
fucompp
sbb
outsl
xchg
cltd
ja
test
mov
cmp
and
in
jb
test
add
jmp
fdivrs
and
enter
inc
push
loop
pop
sub
js
lods
cltd
sbb
lahf
jmp
in
cld
sub
movsl
xchg
xchg
push
mov
andl
xchg
add
or
jo
aad
in
push
jae
arpl
sub
sti
ljmp
cld
push
jge
daa
xchg
std
sbb
mov
es
mov
push
mov
and
orl
ljmp
cmp
xchg
call
test
lea
add
decl
jle
inc
cmpsl
test
out
pop
inc
int3
dec
push
insb
push
lret
fcmovb
mov
scas
fdivs
out
and
arpl
xchg
cmpb
dec
data16
out
mov
lds
push
cmc
dec
push
cmp
fistpll
out
jbe
pop
lods
xor
lods
xor
adc
orb
gs
xchg
push
xlat
out
sbb
pop
mov
stos
es
fstps
ss
push
push
aas
mov
inc
dec
loopne
or
sbb
mov
xchg
push
ss
aam
pop
push
or
imul
push
sbb
andb
fdivl
pop
ljmp
or
push
mov
mov
add
mov
in
xlat
mov
or
jle
iret
mov
das
xchg
gs
mov
cmc
clc
adc
das
pop
sbb
fldcw
sub
js
mov
inc
cli
and
cmpsb
mov
add
stc
lahf
sahf
movsl
pop
lock
sbbb
arpl
dec
enter
mov
jae,pt
insb
data16
jmp
add
cmp
and
pop
lock
jmp
psubw
sbb
pop
xorb
xchg
inc
std
dec
lods
jbe
jmp
and
sub
and
cmpl
movsl
push
add
add
mov
leave
lcall
xor
fwait
cwtl
out
andb
sub
mov
push
adcl
sub
data16
leave
popa
inc
or
push
and
iret
enter
ss
fistps
xor
sub
xor
inc
adc
xor
lods
lock
lds
mov
test
in
mov
xchg
mov
dec
popf
vmwrite
inc
in
pop
loop
cmp
push
push
jmp
inc
sahf
cli
test
imul
adc
daa
fildl
out
dec
sub
inc
jp
jno
and
cmp
dec
cmp
pop
sub
push
hlt
inc
inc
rorb
dec
out
je
sbb
mov
mov
scas
lcall
adc
mov
xor
xorl
cmp
mov
sub
fimull
pop
std
fiadds
mov
push
nop
jecxz
lret
lahf
sbb
cmpsb
push
scas
jge
pop
aad
mov
jo
inc
fisttpl
imul
push
xchg
icebp
popf
push
std
mov
xchg
inc
lahf
imul
repnz
sbb
inc
add
gs
cmp
fcompl
fs
fcompl
je
cmp
movl
mov
test
fisttpl
sub
adc
mov
out
jg
mov
adc
leave
mov
cmpsb
les
in
mov
mov
ljmp
inc
push
mov
es
sti
mov
pop
test
or
and
jg
in
movsb
and
push
mov
pop
bswap
inc
lahf
shrl
jp
inc
mov
cmpsb
adc
jmp
sar
test
jmp
rorb
pop
data16
lea
mov
repnz
pop
jmp
jo
in
ss
leavew
mov
add
or
pusha
pop
push
fnstsw
pop
out
jnp
push
cmp
or
inc
inc
cs
popa
or
repz
or
rcrl
push
push
jmp
leave
jge
and
lock
icebp
or
ficoms
push
stc
xchg
pop
and
or
mov
fmuls
add
movsl
clc
inc
lods
sbb
out
ljmp
mov
jecxz
js
xchg
loop
out
cmpsb
adc
mov
stc
adc
icebp
rorl
mov
add
xor
out
and
push
idivl
movsb
lcall
inc
mov
xchg
in
imul
movb
test
scas
cmp
mov
adc
in
mov
adc
movl
sahf
jns
jecxz
fisttps
push
mov
nop
lds
xchg
add
or
xor
je
mov
mov
push
push
and
sahf
inc
pop
xor
aas
dec
cmc
jmp
and
adc
jnp
ret
xchg
sbb
xchg
mov
lcall
cli
add
push
shll
push
add
mov
xchg
aad
test
hlt
lock
jns
ja
add
jno
stos
and
mov
inc
jo
push
adc
stc
clc
std
aas
shll
cmp
cwtl
jg
push
lret
xchg
or
push
lods
imul
popa
cmp
ficompl
dec
pushf
push
jo
insb
and
lds
xchg
jg
sub
cmp
inc
push
jns
sbb
xchg
fstpl
cltd
sar
mov
enter
mov
mov
test
fdivl
add
pushf
pop
fiaddl
xchg
out
out
ret
mov
add
fs
cmp
sub
sarl
icebp
scas
jp
dec
sub
mov
and
lret
cmpsb
lods
sbb
das
imul
jecxz
adc
lods
addb
jae
xchg
xor
jle
mov
inc
mov
push
and
clc
mov
sti
mov
test
test
repnz
xchg
mov
sbb
sar
jae
pusha
mov
mov
std
inc
jns
jge
ficomps
mov
test
or
out
int
and
xchg
jnp
sti
out
fs
outsl
inc
cmp
clc
mov
and
enter
mov
test
inc
sbb
enter
jns
inc
push
mov
clc
sub
flds
loope
jns
add
adc
popa
mov
mov
dec
loop
iret
push
fwait
clc
das
stc
insl
in
push
fldl
jo
cld
imul
jp
cmp
imul
stc
mov
aaa
cmp
shrb
pop
lods
ret
jg
addr16
jecxz
jae
jl
sub
call
mov
cmp
xchg
mov
pop
sti
js
cmp
arpl
sub
imulb
mov
cmp
push
adc
repz
push
dec
notl
lahf
adc
pushf
or
pop
test
sbb
jno
cltd
jp
test
mov
pop
jp
jns
mov
mov
inc
enter
xchg
loopne
fsubs
mov
jno
add
pop
mov
or
shl
aas
or
push
xor
arpl
ffreep
loopew
repnz
mov
xchg
pop
daa
mov
cwtl
fsubrs
aas
lahf
sbb
mov
jbe
jb
cmp
int3
lcall
or
arpl
ret
subl
ror
adc
aad
sub
pushl
stc
ror
movb
cmp
mov
icebp
mov
push
insb
std
and
mov
add
pusha
mov
sahf
loop
fnsave
enter
adc
cmp
aad
clc
in
sub
mov
test
sub
in
add
mov
jne
xor
cltd
stos
pop
repz
push
pop
mov
xor
int3
pop
pop
sbb
jns
in
mov
test
sub
add
sbb
hlt
push
addr16
mov
test
add
dec
add
pop
push
mov
or
lret
jecxz
test
push
sbb
decb
or
popf
clc
and
xchg
es
mov
and
inc
movb
sti
stos
je
sbb
icebp
and
sbb
add
fs
jmp
mov
push
outsl
mov
into
hlt
out
les
ja
cli
jle
cli
pop
jecxz
sahf
cltd
sub
push
sahf
or
add
loope
pop
xchg
sbb
pop
adc
mov
dec
mov
mov
cmpsl
dec
and
sbb
cmpsb
add
adc
imul
int
sbb
dec
mov
jge
pop
test
mov
repnz
imulb
test
clc
aaa
test
or
pop
fs
into
pop
daa
push
loop
add
xor
rorb
mov
dec
std
fsubrs
scas
mov
cmp
add
jl
mov
scas
and
dec
out
cltd
mov
insl
test
xchg
int
repnz
addb
cwtl
pop
jg
jns
pop
test
sbb
adcb
pop
and
mov
push
xchg
adc
push
ja
popa
cmc
mov
repnz
jge
adcb
mov
lods
pop
jae
call
loop
jge
push
xor
mov
xchg
mov
sbbl
dec
jp
xchg
jae
cli
scas
jg
push
popf
mul
cli
add
shlb
jno
push
pop
pop
and
rcrl
out
test
inc
les
push
or
mov
insl
mov
aas
flds
pop
mov
sub
daa
inc
dec
scas
push
mov
push
adc
xor
jge
int3
sarl
in
cwtl
fs
push
lret
cmp
jge
ss
in
jbe
adc
aaa
push
adc
mov
addr16
push
dec
add
nop
int
pop
inc
xor
sahf
scas
pushl
outsb
andl
jnp
cmp
cmpsl
out
inc
pop
mov
jg
xlat
sbb
out
cmp
loop
in
mov
cld
dec
pop
pop
xchg
adc
inc
fnstsw
sti
nop
fbld
push
cmp
aas
mov
ja
stos
icebp
out
mov
pop
imulb
sub
test
into
mov
cmpsb
mov
mov
or
fwait
maxps
push
hlt
mov
pop
sbb
jns
sti
jne
or
adc
ret
jmp
mov
adc
jmp
fwait
add
stos
cmpsl
mov
sbb
cmp
cmc
dec
sub
add
shll
std
iret
push
addr16
test
jns
insb
sub
cmc
pop
pop
es
aad
cmc
sbb
mov
mov
cs
fisubs
xchg
cmp
xchg
mov
imul
ffree
aam
jns
iret
ja
adc
sahf
scas
dec
cmp
xchg
adcb
sub
pop
xchg
lea
push
pop
and
sub
cmp
shrb
jnp
bound
ret
mov
clc
or
loope
orb
loopne
xchg
add
pop
jmp
lahf
cmp
ja
aam
jmp
scas
and
sti
jle
inc
xchg
or
dec
bound
les
inc
fiaddl
fsubl
pop
orl
icebp
push
lret
test
and
lcall
dec
xor
gs
sbb
hlt
mov
fs
xchg
mov
das
cmc
int
jns
mov
xor
lcall
pushf
imul
jge
lds
adc
push
mov
inc
pop
pusha
in
jb
aas
fidivl
sbb
xchg
test
cld
call
stos
mul
dec
fmuls
adc
subl
and
xchg
das
pushf
inc
out
lret
movb
lods
lods
lret
outsb
fs
inc
shrl
gs
and
sbb
dec
loope
inc
push
or
int3
push
add
daa
pop
jmp
ret
out
test
push
inc
pop
lods
fmulp
lcall
xor
adc
push
jb
jge
adc
clc
cld
pop
nop
loop
jp
mov
in
xor
scas
cmpsb
daa
dec
gs
repz
mov
repnz
inc
in
je
lahf
sub
xor
or
fistpll
cli
testl
sahf
xlat
shll
dec
and
dec
or
jno
push
push
cwtl
std
inc
and
repz
sbb
jno
add
push
mov
test
pop
or
push
xor
aam
mov
cmp
leave
sbb
jg
sbb
lods
jecxz
push
pop
test
jno
pushf
in
movsl
push
xchg
dec
pop
mov
mov
enter
xchg
sbb
xor
call
add
mov
pop
neg
inc
inc
das
mov
fisubrl
adc
aas
loopne
addb
and
add
sub
xor
aas
les
cmpsl
into
insl
loopne
cmp
xor
insl
adc
int3
pop
aas
pop
xor
mov
daa
pop
mov
jmp
jecxz
aaa
fldl
pop
adc
test
movsb
dec
inc
or
push
xchg
push
jle
push
cwtl
ficomps
sbb
ja
jo
idivb
or
je
mov
test
add
nop
jl
or
inc
movsb
and
imul
mov
dec
inc
aaa
inc
dec
xchg
cwtl
cmp
clc
mov
leave
inc
stos
mov
stos
mov
mov
stos
push
and
neg
cmp
pop
je
dec
scas
adc
mov
loop
jnp
loope
ss
jns
sub
imul
xor
mov
repz
cwtl
ds
xchg
movsb
fimuls
adc
adcb
pop
cmp
hlt
iret
or
dec
mov
cmpsl
popa
mov
cmp
push
orb
les
adc
mov
jecxz
orb
xor
insb
or
mov
pushf
popa
stc
xor
inc
daa
mov
aaa
sub
add
nop
jecxz
stos
in
jb
jmp
enter
cmpsb
mov
aaa
and
fistpl
mov
fldl
jno
xchg
aad
mov
stos
lds
sub
into
shrb
nop
pop
jnp
sub
movsl
mov
sbb
sub
mov
xchg
cmc
ret
psllq
bound
push
or
mov
bound
xchg
inc
and
xchg
mov
push
xor
push
bswap
sarl
call
hlt
movsl
and
ret
fmull
pusha
pop
sbb
inc
popf
adc
rclb
mov
scas
pop
and
jne
fnstsw
mov
popf
and
fimuls
xor
cmpsb
fs
out
icebp
repnz
rclb
add
fisubl
lcall
js
insl
mov
lds
jb
push
lds
lcall
sbb
xchg
jne
test
jns
repz
push
mov
push
test
je
xor
cmp
imul
mov
mov
push
xchg
push
outsl
jns
movsl
xor
cmp
imul
loop
mov
fisubrs
jle
mov
dec
xor
mov
ja
xchg
js
push
dec
or
stos
fidivrl
std
and
negb
ret
lret
mov
mov
xchg
fistl
popa
aad
push
mov
out
sbb
mov
push
xor
xor
fcomp
push
or
or
lret
inc
mov
pop
jge
dec
mov
hlt
icebp
push
aad
xchg
adc
rclb
test
cmp
pop
jns
or
xchg
mov
fiadds
xchg
add
idivb
lea
or
or
mov
cmp
sbb
inc
adc
mov
xchg
xor
into
aas
sti
push
daa
inc
mov
loopne
mov
ljmp
sbb
out
adc
dec
roll
in
sub
pop
dec
jb
enter
xchg
rcrb
sub
inc
sbb
pusha
in
mov
mov
loop
nop
bound
dec
loope
je
pop
ljmp
lret
fs
fs
sub
pop
daa
out
adc
rclb
jo
sub
fnstsw
inc
sbb
ljmp
lock
mov
ljmp
dec
add
mov
int3
lods
aad
rcrl
push
pop
jne
xchg
xchg
xlat
jbe
frstor
std
xchg
test
mov
mov
stos
adc
movsl
adc
jns
scas
les
mov
xchg
push
cmpsl
leave
test
xchg
inc
lea
jno
testl
or
jo
aad
mov
stc
ret
dec
lcall
gs
imul
fcompl
cltd
lret
fwait
popa
adc
ss
icebp
and
jecxz
mull
xor
lods
lea
movsl
or
fstps
push
and
pop
sarl
sahf
inc
pop
fwait
es
stc
xchg
cld
inc
jecxz
iret
sbb
clc
jae
push
movsl
dec
fsubl
push
testb
cwtl
xchg
xchg
fcmovbe
fdivrs
add
dec
clc
sub
repz
mov
and
not
pop
sub
xor
mov
fsubl
mov
xor
inc
jmp
mov
fimull
clc
sbb
rcr
cmp
pop
jle
mov
add
lcall
mov
jecxz
adc
xchg
jmp
and
mov
jns
std
jl
mov
lcall
mov
mov
mov
mov
in
out
repnz
fildll
test
mov
dec
adc
pusha
cli
mov
imulb
mov
test
cmp
mov
mov
adc
iret
fimull
loopne
push
clc
into
shlb
fcos
lahf
xchg
jl
push
xchg
mov
push
mov
or
or
lcall
push
inc
sub
and
fistl
stc
adc
mov
iret
pop
add
stc
repz
and
outsb
pop
pop
out
push
adc
dec
outsb
add
add
lods
jo
jecxz
inc
fmul
xor
icebp
flds
sub
xor
sub
out
pushl
or
jae
dec
sbb
inc
fucomip
mov
cli
sbb
cli
or
and
lret
adc
int
xor
shrb
adc
sub
fists
xchg
pop
xor
inc
push
jg
mov
pop
rolb
sbb
xchg
pop
dec
pop
pop
lcall
push
nop
pushf
and
cmp
movsl
popf
lods
mov
insl
aas
call
notl
loopne
ret
mov
inc
and
rcl
dec
mov
dec
mov
mov
push
add
incb
lret
xlat
imull
dec
push
out
movsb
lahf
xchg
je
pop
inc
lods
testb
lods
cmp
orb
ljmp
sahf
dec
rolb
outsl
pop
xlat
push
int
xchg
jecxz
cmpsb
cmp
movsl
xlat
pop
adc
inc
stc
in
adc
int
imul
loope
jl
lds
mov
outsl
bound
int
cmp
popa
das
sbb
xor
xor
jle
xchg
or
mov
xor
push
mov
movsl
mov
mov
repz
loope
aaa
test
xchg
inc
rol
jo
or
inc
lods
jne
es
mov
jp
pop
ss
add
dec
xor
lea
xchg
inc
insb
je
dec
cs
xchg
pop
inc
mov
push
jo
fwait
lahf
fnstcw
incb
jb
clc
and
std
mov
cmc
in
and
jb
push
jae
add
sti
push
sbb
aad
cmp
sub
cld
pop
cmp
pop
push
ret
in
movsb
dec
mov
mov
inc
leave
fisttps
jb
adc
mov
pop
fsub
push
pushf
sahf
push
imul
test
add
mov
xor
mov
inc
pop
stc
ret
nop
cmpsb
cmp
jge
mov
insl
aad
ret
je
cmc
leave
mov
mov
cltd
lahf
dec
out
mov
add
daa
push
mov
sub
rcrl
lods
daa
in
adc
sub
push
xorl
and
sub
cwtl
cltd
sub
jno
mov
cmp
lret
xchg
mov
scas
aam
lea
mov
stos
ret
push
ja
sub
jae
mov
clc
adc
lods
inc
lock
movsb
xchg
shrb
push
insl
mov
xorl
push
cs
movsl
inc
cmpsl
leave
xchg
cli
jl
xor
inc
or
and
xchg
fwait
sub
imul
dec
cmp
mov
loope
clc
mov
paddsw
add
pop
cmp
loopne
pop
cmp
jae
xchg
and
sti
mov
inc
sub
lret
stc
imul
dec
popl
fdivs
inc
mov
or
popa
jo
cmp
add
inc
imul
dec
cmpsb
push
xchg
aad
dec
jl
add
les
push
push
loopne
sbb
or
mov
mov
pop
xor
push
sub
out
adc
popa
das
mov
push
xchg
stc
stc
mov
icebp
js
or
add
insl
pop
fidivrs
xchg
sbb
push
pop
jmpw
nop
out
not
mov
fcomps
aas
cld
addr16
jmp
clc
int3
lahf
mov
in
popf
and
jne
sub
jl
dec
jns
xchg
sub
mov
jmp
ret
mov
pop
mov
loope
mov
cmp
xor
mov
sub
out
mov
sbb
xchg
add
dec
inc
into
mov
testb
sub
add
daa
sub
cld
xchg
jecxz
imul
jmp
jp
ret
inc
and
xor
mov
idivb
jmp
or
push
jge
fnsave
loop
lea
mov
lahf
add
cmp
cli
dec
lea
sbbb
cmc
ficoml
out
jae
loop
push
jmp
sub
push
push
xor
fmull
sti
mov
dec
or
sarb
out
loop
outsb
cmovge
cli
cmpb
push
xchg
mov
mov
dec
jl
adc
adc
push
and
add
xor
outsl
or
mov
push
mov
cmp
mov
xchg
ret
sub
lcall
jecxz
sub
xor
push
pop
xor
in
adc
lret
jbe
dec
push
sbb
movsl
loop
cli
pop
in
fisubs
movsb
in
xor
sub
mov
es
imul
and
clc
cmp
shrb
pop
cs
ljmp
mov
xor
xchg
lcall
popa
xchg
cmp
xchg
jecxz
sub
dec
cmp
in
clc
sub
cwtl
iret
cwtl
and
cmp
ja
pusha
test
jle
js
inc
sbb
incb
jge
popa
bound
bound
subb
lcall
adc
mov
ficoms
xor
pop
shll
jae
adc
and
or
lods
addr16
in
fildl
inc
inc
pop
addr16
loop
push
jle
or
push
pop
cmp
mov
pushf
and
inc
into
sti
cmpsl
push
int3
outsl
cwtl
js
inc
mov
test
shll
xchg
push
push
les
lcall
xchg
and
scas
fisubl
outsb
cli
mov
mov
cmp
jecxz
mov
js
test
sbb
mov
ljmp
dec
push
scas
cmp
inc
or
mov
push
dec
lcall
xlat
add
cltd
test
and
mov
and
mov
and
addr16
mov
pop
add
mov
jmp
popf
ficoml
inc
jge
mov
sbbb
xchg
sub
inc
xor
cmp
dec
sbb
inc
mov
leave
aaa
outsl
inc
lcall
ja
dec
mov
sub
add
sbb
ljmp
jns
mov
sbbb
and
mov
lret
cmp
outsl
fdivrp
movb
cmpsb
loopne
xchg
dec
or
lock
pop
sbb
xchg
jno
adc
jb
mov
mov
mov
jl
clc
add
fwait
and
shll
jo
inc
cs
enter
pop
inc
mov
shrb
lcall
sub
cli
les
lds
add
fsubl
or
out
daa
int
cld
xchg
sti
nop
mov
ja
xlat
push
xchg
sbb
lret
push
jl
and
scas
subl
mov
arpl
add
movsb
loopne
rorb
aas
pop
and
mov
xlat
mov
dec
mov
lods
cwtl
int
push
or
shr
push
cmp
in
cld
or
add
or
jl
pushf
mov
mov
sbb
sbb
sti
sbb
jne
push
fs
jae
push
mov
xor
sub
lcall
adcl
cmpsl
fstps
fnstcw
stos
sbb
adc
insl
push
das
jbe
fdivrs
pop
ss
in
add
shll
iret
sub
sub
test
aad
orl
cltd
or
add
add
in
cmp
sub
mov
cmpsb
or
cmp
mov
push
push
inc
add
and
lock
movsb
xchg
xchg
inc
mov
cmp
rol
insl
mov
add
dec
das
es
pop
insb
in
outsl
jns
xor
pop
sub
xor
pop
push
mov
lret
roll
data16
je
push
jl
ds
pop
movsl
push
jle
push
out
ficoms
push
pop
lds
sub
add
pop
cmpsb
mov
pop
xchg
pop
fwait
mov
sub
insl
arpl
pop
jle
add
cmc
adc
sbbl
fcoms
bound
cmp
jae
push
and
sbb
lods
jbe
inc
pop
cltd
fiaddl
add
xor
add
push
scas
aas
fsubrs
iret
insl
test
push
jle
mov
cmp
push
insl
and
fcmovnb
push
or
in
jb
push
mov
adc
cwtl
adcl
adc
testl
divl
mov
jmp
pop
inc
movsb
push
fldt
mov
mov
xor
pop
push
jns
push
sbb
sbb
dec
and
sbb
pushf
push
lods
jo
push
add
xorl
stos
adc
push
mov
mov
jne
pop
push
daa
stc
clc
sbb
sbb
or
mov
sub
sbb
mov
jb
xchg
inc
dec
push
lret
loopne
jno
cs
hlt
ret
aad
inc
mov
mov
jle
stc
fiadds
nop
ja
test
mov
decb
insb
rorb
ss
xor
ret
pushf
ds
push
jmp
sub
shll
sahf
call
pop
popl
mov
xlat
push
mov
or
into
inc
scas
js,pn
cmpsb
cmp
movsb
jmp
or
aas
pop
sbb
dec
push
xchg
lea
xor
add
in
fdivrs
push
loopne
jg
push
add
ret
fcoms
push
sub
mov
mov
js
push
fs
fs
push
ficompl
or
movsl
pop
xchg
xchg
sbb
mov
dec
imulb
mov
mov
daa
and
mov
lcall
push
sub
test
sbb
mov
aas
out
and
shll
cltd
shrl
mov
cmp
mov
test
push
sbb
call
add
mov
and
sbbb
lods
and
fistpll
jmp
pop
cwtl
fcmovu
shrl
mov
ficoml
or
push
aam
and
cltd
in
and
enter
test
mov
push
sub
faddl
sbb
jmp
adc
mov
sti
je
cwtl
stos
adc
lret
adc
arpl
mov
push
icebp
lret
cmpsl
ljmp
out
or
adc
and
pop
or
adc
shlb
in
in
or
push
bound
cmpsb
push
and
xchg
push
push
cltd
lods
lods
sub
ss
stos
xlat
cmp
cmp
jg
test
pop
into
mov
ja
in
lea
ljmp
cmp
mov
nop
mov
xchg
and
in
lds
mov
sub
addr16
adc
mov
adc
int
add
xor
lock
jae
mov
popa
fwait
aam
inc
push
fs
xchg
std
cmovo
in
in
cmpsl
js
mov
ficoms
dec
in
or
sub
test
lahf
aaa
out
int3
pop
movsb
or
pusha
mov
aas
mov
xor
xor
mov
ja
add
jae
cld
cmc
filds
out
and
dec
sti
dec
movsl
jg
imul
gs
aam
dec
mov
mov
mov
sub
cmp
xchg
mov
in
inc
xlat
inc
ss
inc
and
mulb
in
mov
movsb
or
cmpsb
mov
aam
cmp
dec
cld
fisttpl
mov
push
aam
mov
aaa
fptan
sub
je
scas
test
sub
sahf
das
mov
out
mov
test
nop
inc
pop
negb
cltd
das
jp
jge
leave
shl
push
cld
pop
xchg
pop
pop
pop
mov
fdivl
pusha
sub
sub
jne
or
pop
stc
shl
call
mov
xlat
call
popa
nop
sub
cmp
les
cmc
cwtd
sub
ficoml
ds
pop
out
scas
jmp
loope
add
mov
test
sbb
xor
iret
stos
adcb
in
push
jbe
and
fimull
xor
shll
pop
dec
xchg
dec
out
movsl
xor
jecxz
jno
push
dec
fldenv
mov
repnz
ljmp
jae
jg
or
std
cmp
cmp
sub
mov
mov
loopne
pop
xor
arpl
push
jle
icebp
sub
sbb
mov
add
stc
push
les
mov
movsl
rcl
ficoml
into
ds
or
mov
pop
jmp
outsb
jne
xchg
sbb
add
cltd
mov
jg
stos
fnstenv
negb
pop
loop
sub
lret
mov
ljmp
aas
clc
into
jle
xor
adc
inc
jp
enter
pop
xor
mov
sbb
xchg
xchg
mov
insb
sbb
sub
std
icebp
push
ficomps
fldenv
adc
pop
ds
xchg
sarl
js
int
xor
stos
xor
call
scas
lods
sbb
inc
mov
mov
cli
insl
adc
sbb
add
scas
jle
ljmp
push
mov
mov
xchg
jecxz
or
add
mov
jg
mov
mov
repz
or
loop
push
cld
and
and
clc
ret
jp
fldt
cmp
gs
pop
mov
sbb
filds
in
shrb
int
rorl
ja
push
test
cmp
xor
cli
movsbl
es
nop
xchg
push
jl
push
orl
pop
xchg
orl
ja
in
inc
sub
jno
test
sub
dec
fisubrl
add
repnz
repnz
mov
and
xor
sub
lods
jbe
inc
movsb
nop
xor
imul
loop
and
leave
sbb
adc
mov
je
roll
mov
push
rorb
imul
les
test
adc
popf
ret
cmc
fdivrs
sub
imul
ljmp
mov
cmp
push
pop
cmc
sti
jb
push
aad
push
popf
aam
push
test
test
xor
fstpl
or
mov
shlb
and
cmp
cmp
out
adc
aam
rcll
test
in
sbb
push
in
inc
lahf
int
data16
cmp
lret
xchg
mov
pop
vzeroall
mov
popf
jns
adc
dec
mov
pop
add
push
cs
dec
mov
mov
add
negb
mov
dec
push
imul
sub
lods
jmp
frstor
stos
mov
cmc
dec
inc
insb
sbb
andb
sub
clc
pushf
lds
repz
mov
rcrl
clc
in
adc
add
fwait
cmp
fildll
outsb
cmp
inc
fwait
mov
and
ljmp
sbb
out
dec
sarb
icebp
repz
leave
push
jbe
popa
jae
mov
call
cmp
and
loopne
pop
shrl
sahf
inc
fwait
xor
call
scas
mov
and
movsb
lock
into
mov
fnsave
adc
dec
notl
fsubrs
xor
ficompl
pop
jb
xor
rcr
or
jae
imul
xchg
cmp
nop
sbbl
push
fnsave
mov
or
stos
jmp
leave
shl
mov
pusha
icebp
dec
pop
or
fildl
dec
movsb
push
lock
push
cmp
mov
sbb
sub
stos
pop
dec
orl
mov
clc
jne
dec
call
lret
mov
ret
movsl
in
daa
pusha
xor
mov
js
sbb
fstps
sbb
and
daa
pusha
popf
pop
jbe
ljmp
repz
jecxz
in
or
add
jb
inc
inc
pop
ror
out
cwtl
into
arpl
ljmp
decl
adc
cmpsb
lret
or
leave
mov
inc
lret
cmp
scas
jg
xor
icebp
addl
stos
fs
push
jecxz
pop
icebp
mov
lods
xchg
xor
shlb
leave
mov
sbb
push
jecxz
into
mov
test
mov
push
or
and
cmpsl
dec
or
mov
jno
sbb
xor
clc
sbb
leave
sub
mov
subb
mov
mov
sub
mov
mov
addl
xchg
stos
pop
and
iret
mov
mov
jmp
sahf
or
add
or
push
sbb
std
inc
repz
push
insb
and
cmp
out
jp
loope
and
sub
cmp
cmp
push
jnp
aaa
lods
fisubl
cmp
sbbl
shll
rcrb
mov
lds
rol
cmp
testl
insb
addr16
adc
dec
mov
clc
movsb
mov
ljmp
dec
xchg
sbb
mov
and
add
adc
dec
fsubrp
push
nop
or
jmp
and
out
and
ret
inc
fcom
adc
shr
mov
lds
lret
mov
jmp
mov
inc
addr16
add
dec
adc
and
xchg
outsl
mov
sbb
xchg
mov
pop
lock
mov
mov
mov
jbe
mov
adc
jns
jb
int
imul
movsl
fistpll
sbb
movsb
mov
sub
sbb
push
fwait
movsl
xchg
dec
jecxz
nop
je
or
jl
mov
sahf
pop
mov
adc
xor
das
inc
fimull
pop
fs
movsb
mov
mov
sub
xor
add
lahf
xor
les
cmp
lret
pusha
add
pop
xor
js
cmc
cmp
adc
mov
fisttpll
mov
jge
daa
mov
sbb
outsb
testb
mov
shrb
inc
pop
aad
add
mov
dec
or
hlt
cmp
ficompl
xchg
fnstsw
dec
sub
adc
cmc
xor
push
mov
stc
xchg
jbe
dec
das
fs
aad
cmpsl
inc
call
xchg
xor
cmp
mov
cmp
ds
mov
mov
dec
push
jbe
int
mov
outsl
sbb
cmpsl
mov
or
adc
add
pop
adc
rclb
and
fildll
pop
pop
stos
and
jl
or
cmp
inc
sarb
mov
mov
mov
icebp
pop
daa
jb
or
fsubs
fwait
or
loopne
pop
mov
aas
fwait
imul
ret
push
mov
sbbl
cmp
setle
mov
adc
jbe
dec
jge
dec
xor
add
mov
bts
dec
cmp
lock
call
je
test
pop
push
mov
movsl
mov
xchg
cmpsb
sbb
bound
push
push
sub
stos
ret
inc
sbb
xchg
mov
mov
and
insb
jbe
jbe
insl
in
add
adc
sub
hlt
out
xchg
fisubs
stos
nop
insb
in
mov
xor
xor
cmp
or
sahf
dec
pop
mov
aaa
sub
ficoml
clc
mov
test
mov
jge
cmpsl
cmp
dec
scas
movsb
cld
lret
in
comiss
push
hlt
bound
pop
or
les
xor
xor
and
in
hlt
jge
mov
add
push
int
adc
cld
imul
mov
popf
lods
ja
test
fcoml
mov
in
or
aaa
xchg
inc
jo
sub
mov
lea
mov
cld
or
mov
aam
in
xchg
inc
data16
les
or
jns
mov
jb
sub
push
and
push
adc
test
rorb
rol
cmpsl
pop
push
fcomi
jecxz
xchg
xor
jb
fwait
test
adc
pop
or
xlat
push
dec
jmp
in
out
addb
pusha
icebp
repnz
push
jmp
add
in
cmp
sbb
div
sbb
sub
setns
adcb
mov
mov
dec
xchg
fadds
inc
popf
push
insl
pop
push
popa
mov
cmpsb
repnz
aam
shlb
stos
lods
push
xchg
mov
fidivrl
js
push
pop
add
jecxz
mov
arpl
mov
dec
adc
cmp
mov
pop
rep
mov
and
dec
sub
scas
pop
push
push
sub
lods
mov
imul
loop
push
pop
jo
idivl
dec
sar
add
popf
pushf
outsb
int3
sub
or
lahf
scas
mov
xor
adc
sbb
cmp
cmp
dec
lea
mov
and
inc
and
xor
jno
inc
push
mov
push
push
dec
lods
cmpsl
imul
aas
idivl
lret
adc
dec
xor
and
inc
cmp
shrb
jns
pop
mov
push
insl
and
inc
add
xchg
icebp
adc
push
rclb
xor
jne
in
xor
and
jl
xchg
adc
and
push
inc
jecxz
push
cmp
mov
cmp
inc
dec
out
out
pop
sahf
jns
inc
cli
push
cmp
sti
mov
fimull
inc
andb
pushf
shlb
mul
hlt
and
xor
add
mov
movsb
into
pusha
mov
jl
push
cmp
mov
pop
test
lret
popf
gs
cmp
lahf
sub
lods
lcall
pusha
and
sub
jae
jns
pop
das
cmc
idiv
popf
mov
cmp
adc
push
mov
sahf
mov
add
fstps
and
xor
pop
and
mov
mov
cmp
dec
cmc
adc
imul
std
push
push
bnd
rclb
inc
lods
mov
fistpl
push
jmp
adc
mov
push
jbe
adc
xlat
repz
mov
jg
inc
call
pop
sbb
inc
outsb
arpl
pop
jne
sbb
scas
xor
mov
jge
loop
mov
mov
jle
adc
or
scas
mov
aaa
and
aas
or
adc
mov
xor
jae
lea
aaa
jo
push
ja
add
add
lret
add
dec
cs
sti
ja
add
push
repz
pop
retw
fldcw
ja
pop
or
ljmp
xor
push
cmp
cmp
pop
test
sbb
cltd
mov
lret
mov
rcll
imul
sbb
dec
loop
cmp
add
xchg
mov
mov
or
sbb
mov
mov
fs
mov
mov
cmp
outsl
mov
into
pop
out
stos
sub
outsl
test
test
xchg
jmp
idivl
pop
repnz
ljmp
xchg
adc
push
inc
fsubrl
into
mov
or
pop
fimull
jmp
push
jne
adcb
jae
iret
lds
adc
jae
push
imul
adc
fdivr
dec
cmpb
and
mov
jl
jae
pop
mov
mov
pusha
xchg
les
add
add
or
fimuls
enter
scas
xor
cmp
adc
je
ds
mov
dec
out
pop
adc
daa
rcrl
out
jo
sub
std
adc
test
sub
push
fsubs
sbb
repz
push
lahf
fnstsw
movsb
cli
cltd
hlt
xchg
xor
popa
stc
xchg
jecxz
and
fmulp
popf
push
jmp
jb
cmp
data16
jb
add
mov
add
lods
pop
lds
or
leave
leave
imul
loop
call
mov
inc
mov
cmc
pop
xchg
xchg
pop
mov
pop
fs
shrl
movsb
movsl
icebp
lret
leave
mov
adc
sub
jp
rcl
test
sbb
mov
mov
and
enter
adc
enter
pop
xchg
inc
mov
cmp
sbb
mov
xchg
orb
pop
pusha
pop
inc
pop
loope,pn
pop
xchg
mov
ror
repz
pop
dec
xchg
cld
or
insl
xor
jmp
mov
fnstsw
das
adc
inc
mov
jg
cwtl
loop
leave
pushf
and
out
les
cmp
cld
xchg
enter
mov
xchg
xchg
sub
sbb
hlt
sbb
or
or
xchg
bound
aam
in
into
xor
mov
les
cmp
dec
lcall
push
sub
dec
fisttpll
fwait
pop
xchg
or
jne
pop
popa
jecxz
rcrl
rcrb
repz
jmp
mov
mov
sbb
popf
dec
in
sub
fsubl
orb
cli
mov
leave
in
sbb
lcall
fwait
les
sbb
imul
add
sub
std
ret
sahf
jp
test
inc
and
lcall
test
mov
lret
jnp
iret
pop
mov
adc
mov
adc
jge
jle
inc
and
push
xor
adc
sub
mov
mov
xlat
popf
push
jmp
jbe
pop
jbe
pop
fcmove
add
or
std
add
cmp
xchg
mov
and
adc
cmovae
out
jns
lock
jl
mov
dec
notb
vcomisd
inc
cmp
outsb
push
fbld
jb
repnz
push
or
and
mov
insl
mov
push
cmc
mov
or
pop
xchg
and
cmc
cs
sbb
int
clc
pop
inc
negb
mov
sub
sbb
mov
or
adc
fidivs
jge
cmc
popa
bound
fs
xorb
cld
pop
mov
test
add
lds
cwtl
daa
or
shlb
jb
xlat
or
movsl
fdivr
sbb
sahf
mov
cmpsl
push
inc
arpl
and
jbe
pop
inc
sbb
or
xchg
mov
sbb
jns
pop
cmp
fs
out
and
enter
jne
cwtl
popf
inc
dec
flds
test
mov
out
mov
out
mov
jb
outsl
jle
scas
dec
xor
enter
cmc
mov
punpckldq
sahf
mov
mov
pop
fmuls
out
and
and
fstpt
xor
in
and
cmp
inc
mov
repz
cmpsl
cmovae
xor
or
xor
imul
push
pop
xor
jo
test
cmpsl
notl
add
push
adc
dec
lea
scas
nop
test
inc
outsb
nop
inc
movl
push
sarl
mov
push
mov
lods
ret
jg
push
xor
mov
sub
js
sub
push
subl
inc
and
xor
aaa
pushf
xor
mov
fistl
jbe
inc
jle
sbb
in
mov
or
pop
xchg
and
mov
mov
mov
loop
cmc
jmp
lods
xor
ss
mov
or
jno
sbb
mov
outsl
addr16
ss
jg
daa
cmp
incl
filds
dec
data16
pop
sbb
xor
stos
lds
jl
loopne
test
loop
adcl
cmpl
sub
sub
int
inc
inc
pop
inc
adc
jmp
sbb
test
loope
idiv
into
and
aam
imul
shrl
hlt
fldt
out
push
add
jp
sahf
dec
push
mov
ficoms
jmp
xor
bound
xchg
xchg
sbb
mov
hlt
imul
aaa
iret
int3
push
cltd
icebp
in
inc
nop
mov
test
insb
repz
xchg
stos
mov
test
xchg
jno
jle
pop
push
sahf
lds
cmp
pushf
aad
jne
or
fstl
push
jg
and
jae
xor
lahf
adc
pusha
sub
inc
push
out
out
repnz
idivb
stos
inc
icebp
pop
jnp
gs
push
inc
shlb
pop
cltd
mov
in
jmp
pop
dec
jecxz
orb
leave
xor
add
pop
pusha
fiaddl
dec
mov
adc
mov
mov
dec
pop
aaa
jo
cmpsl
adcb
iret
xor
inc
adc
aaa
mov
lea
sub
jno
and
add
pusha
insb
mov
lds
jae
add
pop
mov
bnd
jne
mov
in
out
out
call
jle
stc
push
inc
adc
shl
cmp
int
out
les
adc
sub
mov
adc
xchg
or
imul
jge
push
jo
sti
imulb
jne
stc
mov
jg
movsl
mov
mov
test
test
sbb
int
mov
ds
andl
or
ret
cmpl
fcmovne
sbb
jae
mov
xor
mov
push
fnstenv
xchg
movsl
in
and
arpl
leave
jmp
fwait
ss
sbb
mov
sbb
cs
gs
push
xchg
xorb
shr
sti
cmpsb
pop
xor
in
cmp
lods
cwtl
pop
mov
js
cmp
movsb
jl
lcall
je
xlat
sbb
jne
xchg
in
les
adc
push
push
nop
lea
dec
stos
or
mov
in
sar
jmp
mov
ret
loopne
pop
push
mov
bound
cli
mov
sub
shrb
test
cmp
xchg
add
in
lods
dec
push
addr16
insb
add
popf
and
xchg
inc
adc
dec
or
or
or
lret
fdivs
xor
push
xchg
icebp
mov
add
dec
and
cmp
sbb
mov
adc
sbb
push
lea
jle
jae
jno
xor
call
push
cmp
or
daa
fiaddl
dec
stc
test
add
jecxz
dec
jmp
inc
push
xor
push
icebp
stc
pop
outsb
lret
scas
aas
mov
lods
mov
or
test
icebp
sbb
ds
pop
pop
stc
scas
movl
push
stos
cmc
iret
dec
cmc
stos
mov
add
cld
adc
sub
push
jge
popf
xor
adc
idivw
and
xlat
inc
shlb
lret
add
dec
jp
shl
sbb
mov
mov
andb
jbe,pt
pop
dec
or
sahf
dec
jmp
push
lock
inc
or
mov
sbb
rcll
dec
mov
lods
adc
icebp
and
and
mov
incb
shll
mov
inc
es
loope
xchg
insb
push
mov
add
mov
mov
popa
cmp
fcompl
mov
jg
in
imul
in
cmp
and
xor
into
or
addr16
lret
push
push
jecxz
cmp
cmp
dec
cmpsb
lds
insl
cli
mov
sub
jp
push
add
sub
cmpsb
repnz
cli
ja
and
arpl
xorl
cmp
sbb
jmp
cmpl
dec
hlt
bound
sbbl
movsl
popa
das
imul
nop
and
ret
add
roll
call
dec
in
call
adcl
jnp
fisubrl
cmp
cs
lahf
and
mov
sahf
add
pop
sub
cmp
or
idiv
mov
in
aad
stos
int3
xor
mov
add
stc
mov
xlat
pop
xchg
add
xor
ss
test
test
push
adc
les
mov
arpl
mov
insl
leave
jmp
jl
popf
stc
mov
push
or
xchg
mov
je
xor
in
inc
jno
stos
jno
pop
or
jbe
inc
cmpb
lds
jg
cs
cwtl
fistl
push
pop
add
ljmp
shll
mov
mov
pop
data16
rolb
call
sbb
dec
andl
jns
fisubl
or
lcall
jecxz
adc
fdivr
out
je
mov
test
call
jle
or
push
int3
sbb
sub
aaa
clc
outsl
lret
iret
push
or
or
xor
in
cwtl
in
ret
outsl
mov
adc
cmp
sbb
leave
xchg
pop
int
or
shrb
outsb
mov
or
sbb
icebp
jle
mov
xchg
adc
icebp
movd
aad
fimull
enter
fnstcw
pop
jp
ret
ss
xor
pushf
bnd
add
test
mov
xchg
dec
lret
mov
xchg
sub
out
lea
dec
aaa
cli
push
in
pop
xchg
sti
sub
mov
test
stos
dec
out
add
popa
cs
push
loope
sti
xchg
adc
jge
cltd
pop
scas
xor
mov
mov
adc
lahf
movswl
fisttpll
adcb
pusha
sbb
std
fs
arpl
push
aam
sbb
pop
jge
and
xor
enter
arpl
mov
stc
push
mov
inc
sub
push
pop
or
mov
or
pop
test
jnp
or
jecxz
stos
jl
lods
ljmp
clc
sub
insb
and
icebp
cwtl
imul
in
push
pop
jne
jno
or
scas
gs
pop
cmp
bound
shl
mov
ss
xchg
ljmp
rcrb
cmp
and
and
ficoml
or
push
daa
xchg
cmc
mov
sub
jbe
movb
loope
mov
cld
mov
leave
or
aam
fnstsw
fst
dec
out
mov
push
test
push
int
cwtl
jl
push
push
jge
stos
xchg
push
mov
out
pop
sub
andl
enter
out
add
cmc
fwait
xchg
inc
mulb
mov
repz
call
add
subps
inc
iret
lcall
iret
fsts
push
call
fucomp
mov
pusha
push
jmp
mov
push
cwtl
gs
icebp
test
call
sbb
pop
sub
rol
dec
lret
add
push
outsb
mov
mov
sbb
or
push
jnp
adc
or
inc
fildl
push
cmp
fcomp
idivl
sbb
out
or
xor
iret
cmpsb
loope
lcall
inc
dec
mov
lock
andl
push
pop
fistpll
andb
stc
mov
or
popa
inc
mov
leave
iret
mov
sub
add
lret
xchg
inc
sub
pop
cwtl
rclb
mov
lret
mov
addl
inc
cs
cmpsb
dec
push
iret
xor
add
mov
sbb
sbbl
adc
cltd
jp
in
sub
push
xchg
mov
push
push
sbb
idivl
lret
sbb
movsl
imul
aaa
test
mov
and
add
push
aaa
les
scas
insl
cmpsl
stos
jge
push
jmp
mov
nop
dec
lcall
sbb
sti
or
xchg
mov
in
lahf
sbb
or
pop
add
clc
push
adc
mov
pop
cmp
loopne
lcall
ret
in
and
repz
mov
loopne
add
adc
xor
ja
mov
mov
jp
add
std
ret
call
mov
les
idiv
outsb
popa
xchg
push
rcr
push
push
mov
sbb
outsb
fs
adc
in
call
jmp
mov
jae
ret
mov
and
xchg
push
cmpb
or
inc
xchg
sub
testb
lock
sarl
inc
adc
or
pop
add
ret
jg
jmp
movsl
gs
aas
or
mov
add
xchg
xchg
aad
jno
loopne
mov
in
shll
out
outsl
int3
lret
lea
lods
in
and
sbb
mov
sub
subl
push
pop
clc
mov
pop
out
or
lods
fiadds
push
xor
test
jae
bound
dec
pop
fistpl
or
je
shl
jne
jge
shl
push
xchg
cmp
add
mov
or
jmp
adc
adc
jge
mov
sbb
stc
adcb
clc
std
jne
lret
cmp
mov
cli
outsb
adc
jnp
in
adc
lret
push
or
pop
dec
dec
and
cltd
dec
jb
cmc
push
dec
dec
lea
sbb
push
fsubrl
mov
push
insb
adc
aaa
xchg
push
adcb
pop
ljmp
je
je
jmp
dec
outsb
mov
add
shlb
dec
lods
adc
sarb
xor
push
inc
dec
mov
nop
in
jnp
mov
or
lret
inc
xchg
cmpsl
sbb
xchg
mov
iret
add
lret
cmpsl
mov
fst
jae
jge
aas
add
pop
xchg
jl
test
nop
mov
hlt
fcoms
andb
daa
mov
cmp
jge
inc
mov
mov
call
and
push
mov
push
nop
lods
jo
test
push
stos
cmc
lahf
push
sbb
add
ljmp
pop
adcl
xor
pop
fcomps
pop
or
aam
inc
sbb
stc
stc
jl
enter
shrb
out
mov
mov
aam
pop
sarb
in
fidivrs
lods
jmp
ss
adc
xor
je
jb
es
xchg
ss
fisubrl
iret
pop
mov
sub
inc
pop
mov
sbb
pop
xor
aam
fs
lahf
xchg
xchg
rcll
or
xor
mov
inc
adc
bswap
stos
pop
in
pusha
not
shrl
mov
dec
inc
inc
mov
call
daa
call
mov
pusha
mov
arpl
and
aam
scas
faddl
cmc
inc
jnp
inc
mov
addr16
scas
cli
xchg
outsl
xor
pop
mov
push
dec
pop
lods
and
mov
fnstsw
adc
pop
ja
mov
arpl
cmp
xor
mov
paddsw
mov
and
sub
outsb
fisttps
movsl
sarl
out
test
cld
mov
test
leave
pushf
lods
inc
inc
leave
mov
ret
lea
or
xchg
call
mov
push
add
or
mov
rcll
call
into
lea
push
jecxz
xchg
mov
push
cmp
mov
mov
mov
and
mov
cltd
cmp
sbb
xor
pop
fildl
add
sub
xor
push
mov
mov
shlb
and
push
adc
outsl
sub
pushf
pop
jmp
jl
adc
lods
adc
mov
ficoml
mov
loopne
or
xor
hlt
in
push
lock
dec
ret
pop
cmp
mov
andl
add
sub
xor
outsb
mov
insb
dec
imul
pop
cmp
out
mov
dec
repnz
mov
xchg
sbb
xor
testb
mov
popf
lock
ss
aas
dec
xchg
dec
cmp
stos
sub
mov
sub
cwtl
cmpsb
mov
mov
lret
xor
cli
adc
mov
jecxz
mov
pop
sahf
negl
dec
clc
xchg
int
leave
add
mov
lea
cwtl
or
data16
sbb
xlat
mov
imul
cmpsb
xchg
arpl
cwtl
outsb
mov
outsb
pop
jne
bt
mov
insb
or
loope
adc
daa
dec
xchg
scas
ljmp
pop
mov
push
hlt
inc
inc
add
ror
xor
loopne
dec
and
jecxz
inc
xchg
outsl
jle
push
rorl
xor
sub
pop
dec
int
lods
jns
mov
cmp
test
out
pop
ss
jl
or
ja
popa
addb
fstl
sti
loopne
mul
cs
cmp
sbb
mov
nop
add
jg
insb
adc
xor
mov
sbb
push
fsubrp
sub
movsb
mov
loop
pop
xchg
sbbb
pop
scas
sub
jbe
jle
into
adc
mov
hlt
xchg
or
outsl
fcoml
fs
out
fnstsw
xchg
xor
jle
out
push
mov
pushf
mov
add
pushf
jne
enter
pushf
sbb
jecxz
sar
adcb
xchg
xchg
push
lea
adc
or
xor
jns
mov
mov
jns
mov
stc
mov
pop
pop
dec
fdivl
sahf
scas
fbstp
mov
xchg
aad
pop
mov
mov
push
int
xchg
and
push
pushf
or
inc
dec
fwait
and
ds
cmc
inc
mov
dec
pop
inc
cmp
inc
xorb
and
xor
xor
fbld
cmp
jmp
test
aas
and
in
sub
mov
lods
add
leave
fprem
fs
inc
fbld
push
cmpsb
je
incl
push
adc
popf
std
test
pop
dec
inc
insl
sbb
push
in
cmpsl
inc
mov
data16
stos
popl
rclb
repz
push
aaa
sub
sub
call
xor
aas
mov
sbb
or
mov
iret
int3
xchg
aaa
mov
sbb
sbb
dec
int
adc
xchg
xchg
popa
icebp
mov
ljmp
mov
scas
fadds
inc
mov
insl
jmp
iret
push
pusha
cli
in
sbb
fstpt
push
outsl
jo
and
test
mov
inc
and
inc
out
int
cmp
and
dec
xchg
cmpl
inc
popf
mov
js
in
loopne
cld
test
stos
fcompl
or
fwait
push
push
xor
inc
lret
clc
lds
ss
mov
je
or
int
bound
inc
jmp
and
out
dec
jns
clc
mov
std
je
push
adc
xor
add
aas
mov
out
jle
push
adc
movsb
xchg
jge
daa
sub
or
xchg
mov
ret
jno
jae
stc
and
and
fdivrl
movsl
imul
mov
pop
and
pop
push
mov
mov
lods
incb
xlat
add
mov
mov
repnz
cmp
cmpsl
mov
popa
add
mov
and
loop
push
xor
daa
test
insb
js
lcallw
sub
inc
scas
mov
cmpl
int
in
fsts
popa
rclb
sbb
fdivrs
push
int3
lahf
jns
push
push
sti
aaa
sti
mov
es
push
stc
bound
dec
cli
push
jmp
dec
jo
cmpsb
or
pop
sbb
push
adc
add
roll
lea
xchg
daa
out
sub
jecxz
and
jb
jnp
pop
adc
xchg
and
xor
pop
push
fisttpll
insl
mov
stos
stc
lret
push
sar
cmp
int
into
leave
xor
ret
pop
pop
jb
mov
pop
lahf
xchg
and
adc
and
jae
pop
push
aaa
xor
push
pop
rclb
xchg
in
cld
mov
in
xchg
jp
notb
xchg
push
inc
cs
jne
add
ja
loopne
stos
fsubl
and
add
push
xor
in
cmc
test
inc
sub
test
addl
es
inc
jnp
xor
dec
jmp
call
ror
lret
cmp
rcll
pop
inc
and
sbb
sub
test
insl
loop
sbb
cmp
into
adc
pop
pop
mov
or
ljmp
xchg
push
out
out
cmp
test
fcmovne
xchg
or
cmp
mov
xchg
out
je
leave
movsl
sub
mov
int3
fldln2
mov
push
push
push
pop
jb
push
test
pcmpeqb
sub
testb
push
imul
pop
je
in
ss
in
adc
les
fnstenv
jae
push
ds
fdiv
lcall
xor
popf
dec
and
sub
or
test
in
pop
insl
mov
jmp
insl
mov
mov
aad
loope
outsl
push
subb
push
and
push
push
imul
mov
mov
faddl
mov
daa
imul
dec
inc
stos
jmp
mov
addb
cmpsb
jp
mov
out
leave
fwait
mov
popf
or
aad
xchg
in
mov
adc
or
mov
xchg
and
jmp
fs
je
imul
or
xor
cmpsb
inc
xchg
jmp
jns
in
imul
sbbl
daa
push
lock
mov
int3
les
xchg
cli
insb
ljmp
stos
sbb
mov
push
push
rorb
adc
ret
ljmp
xchg
cmp
and
cmp
inc
cs
ret
out
xor
test
cmp
jno
mov
in
and
rcrb
push
pop
and
in
inc
rcrl
push
cmp
dec
ja
test
push
inc
lcall
mov
pop
xor
adc
popa
and
aam
loope
lods
sub
std
mov
arpl
xor
pop
insb
push
sbb
shll
loop
inc
jb
push
lods
repnz
sub
cltd
xlat
outsl
imul
mov
mov
adc
or
mov
mov
inc
out
cmp
pop
pop
jbe
lahf
roll
adc
adc
dec
decl
xchg
ret
pop
push
out
push
cmp
outsl
shlw
jp
mov
jle
jbe
and
sub
and
daa
adc
inc
and
cmpsl
jl
xchg
cmc
movb
add
and
shl
xchg
outsl
ret
stos
push
mov
mov
mov
jns
jnp
add
xchg
mov
jbe
repz
stc
mov
addb
out
rcr
aas
adcb
scas
hlt
adc
jl
inc
fs
dec
scas
movsl
push
dec
call
leave
push
dec
dec
or
movsb
add
pop
pop
push
outsb
inc
jmp
inc
ss
ss
mov
js
call
test
shll
mov
push
dec
push
or
push
fld
data16
cmpsb
push
sbb
pop
hlt
rol
pop
test
and
inc
dec
fsubs
into
jbe
hlt
mov
jg
in
das
int3
adc
jp
inc
lods
das
dec
xchg
jb
fadd
push
jg
adc
lret
pop
push
mov
xchg
lock
jae
sbb
pusha
es
adc
movsl
pop
mov
dec
insl
loopne
pusha
cmp
mov
or
ficoml
nop
bound
sbb
dec
lock
rol
pop
ja
je
fdivl
imul
jae
stos
lcall
ret
xchg
outsb
sbbl
push
and
mov
in
ja
mov
pusha
in
jp
sbb
push
cmp
stos
rdmsr
add
dec
cli
xor
dec
push
mov
adc
xchg
out
in
in
add
or
leave
ficoml
mov
std
jmp
cltd
mov
insl
xchg
and
or
fisubl
jg
sub
loopne
add
popa
test
ret
pushf
lea
in
pusha
ljmp
inc
push
push
jecxz
sbb
fsubrl
or
aad
mov
movsl
out
mov
pop
cs
mov
dec
mov
adc
mov
insb
insb
popf
dec
sahf
fcmovnu
lret
ficoms
xchg
mov
mulb
mov
jo
push
cmp
sar
sbb
jb
sbb
push
sub
dec
aam
lock
xchg
sbbb
pop
mov
sbb
es
cli
mov
adc
adc
int
push
inc
stc
gs
lcall
jae
cmp
add
mov
push
push
sti
jbe
or
push
imul
fucom
mov
jne
daa
loopne
cmp
pop
xchg
data16
mov
sahf
cmp
mov
aad
inc
mov
loopne
mov
stos
pop
mov
jbe
xchg
add
test
insl
sub
cmpl
add
mov
dec
jecxz
push
sbb
fwait
xchg
outsb
call
pop
xchg
xor
leave
mov
pop
les
mov
jmp
repz
fimuls
push
sub
lods
sub
cmp
cmc
aam
push
or
shlb
push
push
xor
xorb
add
or
or
cmp
imull
out
and
fwait
dec
xchg
imul
jmp
in
inc
pop
lock
push
push
lret
dec
enter
sub
jnp
pop
cs
test
and
and
shr
das
into
insl
cmp
test
xchg
repz
pop
pop
sbbl
sbb
add
or
fwait
add
mov
ficoml
push
js
aaa
push
jno
and
test
ljmp
lret
cwtl
push
js
inc
ret
push
add
notl
ljmp
mov
sub
loop
xor
out
rorb
andb
inc
pop
int3
out
pcmpeqw
scas
lods
jmp
lds
jecxz
mov
fidivl
push
aas
ud0
inc
xor
mov
insb
mov
fs
mov
mov
xchg
inc
in
outsb
sub
lret
xchg
or
ja
enter
xchg
cli
pop
test
fbld
test
imul
adc
jle
xor
rol
mov
in
scas
addr16
movsl
addl
rol
imul
rcr
cmp
test
mov
push
adcl
adc
sub
xchg
add
mov
scas
test
mov
pop
flds
test
xchg
mov
cwtl
cmp
mov
pop
or
test
xchg
inc
aam
insl
outsb
sbb
cmp
cmc
or
lods
mov
je
mov
mov
inc
mov
inc
popa
ret
push
into
xor
mov
mov
mov
aas
jns
sbb
dec
add
xchg
sbb
add
bsf
clc
pop
xchg
popf
in
fwait
mov
test
adc
jg
or
call
in
pop
pop
xchg
jns
imul
out
and
adcb
cmp
add
mov
xor
xchg
ss
repz
rclb
jnp
stos
jmp
push
ret
arpl
and
lahf
es
and
sar
roll
sbb
gs
push
jle
xchg
es
sbb
xor
mov
pop
add
nop
cli
out
scas
mov
mov
cmp
hlt
or
push
jne
mov
xor
mov
dec
cmp
aad
out
in
pminsw
add
int
push
scas
adc
sarl
adcl
pushf
shl
notb
push
cs
xchg
xlat
sub
pop
mov
cmp
int3
repz
fisubl
mov
and
testl
jge
pop
push
adc
push
insl
and
aaa
pop
adc
imul
push
adc
xor
das
das
fwait
test
sbb
test
or
mov
pop
imul
ja
daa
mov
mov
mov
fidivl
xchg
jmp
adc
bswap
shll
add
out
enter
inc
adc
or
shll
push
lcall
mov
jbe
dec
jnp
iret
jmp
out
ja
and
mov
dec
add
and
popf
cli
adc
imul
pop
xor
mov
push
sbb
pop
mov
in
stos
mov
inc
or
int
xchg
xchg
bound
rcr
fs
lock
push
and
pop
sbb
popf
cli
arpl
pop
testb
jae
pop
fwait
cmp
sbb
and
jo
pop
enter
and
push
adc
push
add
and
mov
arpl
enter
addr16
aam
cmp
mov
add
stc
addr16
push
push
sub
mov
dec
lret
xchg
mov
fbld
push
pop
fdivrl
hlt
arpl
repz
flds
add
cmp
pop
movsl
or
cmp
call
xchg
xor
sub
aam
fwait
mov
mov
pop
dec
and
lods
out
mov
testb
cmp
cli
or
fimuls
mov
mov
loope
aad
push
test
adc
hlt
insl
mov
cli
int3
push
sbb
nop
pop
jae
mov
fwait
aaa
mov
push
cld
scas
ljmp
bound
cmp
push
loope
xor
sub
data16
xlat
xchg
inc
push
insb
mov
jp
mov
or
lahf
inc
pop
add
xor
push
lahf
sbb
mov
xchg
rcll
lret
and
mov
inc
ja
mov
mov
into
test
lcall
dec
dec
mov
lea
rorl
mov
test
je
stc
dec
out
sub
je
call
dec
cmp
and
mov
cmp
sbb
push
mov
in
fisubs
mov
iret
push
sub
mov
test
cld
outsl
fwait
xchg
orl
inc
lahf
enter
cmc
repz
sahf
js
jnp
adc
dec
fisubrs
out
ljmp
mov
mov
cmc
jmp
lods
jge
and
pusha
or
scas
jmp
je
jo
cltd
pop
push
mov
mov
lock
fldt
imul
lahf
xlat
adc
repz
stc
pop
sbb
xchg
push
or
sbb
cmp
adc
xchg
jnp
repz
jle
mov
adc
jno
adc
adc
clc
repz
mov
aas
xor
out
cs
movsl
stos
mov
add
dec
daa
in
cmp
mov
cld
xchg
pushf
cltd
adc
pop
test
dec
fwait
lods
xchg
rcll
xchg
ljmp
insl
test
push
aaa
test
inc
mov
pop
inc
mov
mov
sub
pop
inc
fwait
iret
insl
and
inc
xchg
or
xor
sahf
and
ret
lea
push
stc
loop
or
dec
ja
push
stos
testl
movsb
xor
loop
lods
xor
push
sub
lds
inc
sahf
jmp
sub
leave
into
xlat
and
ds
xor
sbb
xchg
adc
ret
pop
sbb
dec
sbb
cmp
roll
lcall
sbb
adc
mov
lds
or
cmp
jl
and
fbld
push
xchg
pop
inc
mov
lock
movsb
into
xchg
mov
shrl
in
push
out
popl
test
jo
sahf
aas
cmpsl
clc
inc
repnz
cmpsl
jb
inc
add
and
addl
imul
dec
cld
add
loop
push
push
inc
push
xchg
inc
ds
or
call
push
test
mov
outsl
sub
icebp
xchg
pop
mov
mov
mov
out
bound
enter
sub
je
cli
cmp
push
inc
inc
xchg
shlb
test
mov
cmp
xchg
in
mov
sbb
jne
ret
movsb
stos
pop
inc
push
mov
pop
jno
pop
ret
sbb
outsb
ficoml
ljmp
sbb
push
pop
sbb
jae
inc
pop
icebp
mov
mov
push
and
inc
mov
cld
iret
enter
popa
sub
fldenv
jg
lahf
mov
fcmovnbe
inc
mov
or
in
mov
inc
out
fldenv
mov
lods
or
loopne
xchg
ljmp
jne
push
lret
inc
jecxz
in
daa
int3
mov
xorl
fnsave
lcall
rolb
lods
cmp
scas
insl
jle
mov
xor
loopne
rolb
std
rorl
gs
inc
mov
fbstp
sub
cmc
inc
insl
pop
aad
stos
pop
aad
loope
fnsave
movl
pop
gs
cmp
shlb
xor
test
test
into
mov
arpl
sbb
jbe
fsubl
mov
mov
and
sbbb
jnp
cld
icebp
push
push
out
mov
incl
or
xchg
fistps
outsl
or
inc
pop
or
jb
aas
popf
movsl
popa
insb
test
inc
add
lds
test
insl
sbb
loope
adc
xor
pop
leave
movsl
xchg
ds
int
jb
out
sbb
push
int
scas
xchg
popf
clc
xchg
pop
xlat
xor
pop
adc
xchg
pop
xor
cld
int3
ljmp
sub
std
mov
loop
jmp
mov
xor
mov
pop
xchg
loope
pop
lcall
push
add
add
or
out
push
leave
pop
mov
icebp
push
mov
sbb
inc
mov
lcall
test
insb
outsb
test
sbb
sbb
fiadds
stos
outsb
jle
sti
mov
pop
stc
xor
lret
loope
es
pavgb
repnz
cmp
sub
ret
push
cmpsl
mov
outsb
in
test
fs
test
mov
or
popf
cmp
add
outsb
inc
daa
std
js
imul
dec
add
hlt
mov
xchg
sbb
cmpsl
addb
mov
test
push
ss
cs
cmp
mov
or
sub
mov
fstpl
loopne
popa
push
pushf
daa
jmp
xchg
imul
mov
mov
and
bound
push
rolb
imul
lock
sbb
xchg
or
dec
rcl
xor
adc
and
inc
mov
push
or
xor
mov
stos
dec
dec
lcall
adc
fwait
loop
fisttps
mov
sub
cs
mov
mov
shlb
inc
xor
call
ror
jb
fldt
or
aam
jne
fadds
cmp
or
mov
test
inc
mov
xor
add
push
pop
and
in
aad
lcall
out
dec
push
jecxz
in
repnz
jle
adc
pop
arpl
mov
and
clc
xor
ds
adc
mov
mov
xchg
out
xorb
or
inc
aas
ss
mov
into
or
or
or
out
or
xor
fnstcw
inc
lahf
push
mov
in
push
in
push
dec
inc
mov
pop
xchg
lds
cmpb
insl
rorb
sub
shl
das
push
test
aas
ret
imul
dec
stos
fldl
inc
push
pop
cmpsb
in
cli
mov
iret
cmp
cmp
mov
xor
inc
xchg
sub
cmc
and
or
or
jnp
jb
imul
add
cmp
dec
out
test
adc
sub
and
dec
dec
iret
jl
sbb
inc
and
push
or
add
aam
mov
das
insb
dec
push
fcmovb
data16
push
in
das
and
in
push
cmp
jns
or
stos
sub
mov
adc
mov
mov
xchg
ret
movsl
or
pop
sub
in
stos
or
push
jmp
cmc
push
out
imul
ds
mov
or
jl
mov
adc
sbb
xor
xchg
xrelease
in
repnz
in
or
mov
add
adc
lea
or
cmp
outsb
push
jbe
hlt
jmp
mov
rorl
out
pop
loope
aaa
arpl
das
push
into
or
and
cwtl
mov
pushf
rcl
xchg
pop
add
cmpsl
xlat
inc
mov
fwait
pop
data16
ret
rolb
cltd
outsl
and
mov
cld
xchg
cmpsl
ds
ljmp
mov
lahf
inc
divl
cmp
push
adc
daa
cmp
les
test
or
in
mov
pop
push
repnz
mov
call
adc
mull
lret
imull
xchg
iret
pop
and
es
jno
sub
adc
sub
xchg
pushf
add
mov
repz
cs
mov
fisubl
mov
jp
es
popf
jbe
lret
ljmp
xchg
ljmp
rcr
xor
push
subb
push
les
pop
call
stos
repnz
inc
scas
cmpsl
sbb
push
shl
mov
push
mov
or
jne
mov
gs
cmpb
xchg
js
xor
in
stc
or
gs
mov
lea
je
test
js
push
shr
pop
outsb
jnp
xor
push
movsl
mov
ljmp
xor
dec
sti
xor
push
push
inc
push
sbb
loop
cltd
out
icebp
adc
sbb
je
xlat
scas
cmp
test
lds
cmpsl
inc
cmpb
mov
xlat
lret
sahf
push
sbb
jmp
mov
ja
inc
int3
xor
das
addr16
int
jb
mov
sbb
cmp
cmp
jae
adc
push
insl
and
xchg
push
je
dec
sub
xchg
mov
or
jnp
notl
aaa
sbbl
inc
das
jo
push
mov
data16
dec
mov
rcr
add
cmp
pop
cmp
rcrb
int3
push
inc
jae
testl
loopne
andb
push
sbb
fsub
jb
divb
inc
fwait
adc
gs
fistps
jp
add
mov
popf
mov
lock
hlt
sub
in
aam
lds
or
add
pavgw
mov
ljmp
pop
mov
add
fcompl
loope
dec
ja
ret
in
mov
jb
fnstenv
orb
mov
xchg
clc
aad
repnz
mov
pop
sarl
adc
lods
mov
push
dec
pop
mov
sbb
jl
dec
or
iret
mov
xor
mov
cmp
inc
and
mov
sbb
repnz
test
outsb
sbb
jp
inc
xor
mov
cmp
sub
lret
arpl
mov
jo
fs
mov
leave
dec
test
fidivrs
pop
jg
stos
push
or
iret
sub
push
xchg
xchg
pop
mov
and
imulb
xchg
bound
xadd
cmpsb
frstpm(287
pop
lods
cmpsl
or
inc
sub
xchg
iret
stos
std
add
in
and
shlb
popa
sbb
aaa
ja
fs
incl
mov
stos
cmc
jecxz
stc
adc
mov
outsb
jmp
scas
scas
jp
test
leave
fnstsw
in
into
out
dec
jns
aam
loope
rcrl
cmp
xchg
in
nop
dec
pop
xchg
lret
adc
int3
mov
dec
mov
jns
and
or
lods
daa
xchg
movsl
and
mov
xlat
push
pop
jecxz
ret
mov
lret
inc
das
aaa
mov
loop
cmp
scas
cli
mov
notb
popf
and
bound
clc
mov
bound
jle
in
gs
sub
and
ret
pop
loope
loopne
add
int
add
pop
jns
loop
push
push
pusha
sbb
cwtl
loop
iret
lahf
fsubrs
int3
mov
jne
sub
inc
inc
mov
dec
aad
jo
orl
les
push
mov
mov
cmp
sub
int3
push
inc
mov
pop
cmp
jmp
and
aas
xchg
sarl
inc
nop
lods
add
add
sub
xchg
xlat
hlt
mov
rcll
xchg
mov
pop
fdivs
ud0
jbe
popf
adc
push
inc
ficoml
mov
xchg
pop
mov
push
add
add
jne
scas
insl
mov
addr16
mov
jle
cwtl
ficoml
xor
stc
bound
jo
dec
pop
enter
cs
cmpl
lock
cmpsb
sti
iret
jne
and
subb
cltd
dec
scas
and
out
lret
nop
add
cmc
sar
mov
pop
dec
aad
cmp
xor
push
imulb
mull
xor
push
pop
mov
rcll
scas
xor
mov
das
xchg
fnsave
add
jbe
cmpsb
dec
xor
gs
and
in
push
fildl
pop
mov
xchg
or
and
push
or
pop
sahf
or
and
ds
enter
jecxz
inc
mov
pop
insb
xchg
jecxz
es
dec
cmp
mov
jne
stc
pop
out
test
pushl
add
push
mul
cmp
rolb
in
xchg
bound
or
mov
fs
jecxz
xor
adc
outsl
xchg
test
mov
ja
xor
out
jo
and
and
in
xchg
xchg
out
leave
add
fs
mov
out
pushf
incl
mov
pop
push
xor
cltd
popf
xchg
dec
movsl
movsl
pop
lods
push
sub
xchg
loopne
cli
jp
aas
rclb
mov
inc
pushf
push
insl
fadd
out
test
popl
roll
inc
push
sbb
xor
xchg
xor
lar
les
pushf
dec
negb
xchg
push
inc
scas
push
sub
mov
sti
notl
dec
or
xor
pcmpeqd
scas
mov
xchg
jl
ljmp
jnp
decb
daa
push
mov
or
into
jb
hlt
repnz
xor
mov
es
mov
repz
subb
mov
pop
mov
sbb
push
cmp
divb
add
popa
mov
pop
sti
in
adc
repnz
pushf
and
inc
das
xchg
mov
subl
pop
rorb
jnp
mov
fnstcw
and
push
sbbb
loopne
mov
add
into
popf
rolb
int
jb
push
push
xor
mov
jl
push
push
jae
sbb
adc
adc
fists
pop
ljmp
add
addr16
cmp
shlb
popf
xchg
mov
cmp
sub
cmp
cmpsl
js
inc
popfw
sti
fldenv
std
out
outsl
vpcomged
rcl
pop
call
jbe
adc
ds
loop
scas
inc
ret
xor
ljmp
loope
dec
mov
fld
xlat
sub
test
in
lods
hlt
out
add
scas
mov
sbb
and
stc
add
sub
mov
adc
addr16
out
adc
notl
dec
mov
stos
repnz
inc
cmp
cmp
int3
aas
mov
ret
push
call
dec
pop
cmp
jo
mov
inc
shll
sub
adcl
adc
out
mov
cmp
sbb
in
aaa
lahf
sahf
in
or
xor
cmp
insl
push
or
out
sarl
andl
pop
cli
push
xchg
fisubrs
out
push
jns
xchg
jle
lret
ja
test
xor
int
das
lea
aaa
enter
jnp
lods
lds
or
xor
andb
test
sar
inc
fdivr
int3
lahf
push
mov
push
bswap
lcall
test
into
bound
push
add
xor
pop
adc
or
adc
mov
in
iret
mov
push
loopne,pn
ds
xchg
imul
outsl
shrl
add
or
bound
ret
popf
rol
pop
mov
mov
pop
push
enter
or
dec
sbb
js
xchg
sbb
lahf
idivl
pop
dec
jg
sub
pop
dec
xor
clc
dec
clc
lahf
sub
mov
decl
inc
jo
icebp
xlat
dec
stos
push
push
in
jge
in
lock
fsubrs
hlt
aam
sti
aaa
xor
in
jmp
ret
jno
and
arpl
or
jmp
cmp
and
add
stc
xor
insb
jbe
int3
add
movsb
sub
lahf
sbb
fucomp
push
shl
pop
sbb
repnz
imul
cmp
out
sbb
pop
mov
mov
shll
inc
push
pop
out
push
scas
std
inc
mov
dec
shl
push
scas
fcom
mov
movsb
outsl
fwait
test
jb
jl
out
fs
pop
jp
xchg
out
pop
mov
jl
mov
adc
pop
ss
xlat
test
fwait
ret
add
and
jo
mov
adc
imull
or
pop
push
and
mov
imul
fs
push
xchg
sbb
jmp
incb
data16
sub
hlt
scas
in
lcall
jns
ds
imul
inc
lods
inc
inc
pop
cmc
add
mov
dec
loope
sbb
dec
sub
stc
jecxz
ja
subb
inc
insb
enter
loopne
ja
xchg
mov
jns,pn
ret
mov
ja
scas
adc
or
push
mov
arpl
mov
jp
or
cmpsb
cmp
pop
les
sub
and
int
jl
cmpb
addr16
mov
push
sub
stos
cltd
mov
xor
es
xchg
jp
leave
xor
push
mov
lds
scas
inc
add
imul
push
mov
pop
jmp
jns
shlb
sbb
xchg
mov
mov
out
adcb
mov
push
test
pushf
orl
cmpl
jecxz
adc
imul
push
outsb
add
enter
xor
lods
adc
mov
mov
lcall
sbb
sub
inc
jo
cli
imul
fwait
shlb
movsl
adc
mov
add
fisttpl
sub
sarb
int3
xor
test
cmp
pusha
movsl
pop
jmp
pop
pop
mov
jo
push
stos
jecxz
cltd
push
cmp
pop
dec
popa
sarb
push
add
mov
add
ficompl
adc
cmp
sbb
push
xchg
fwait
cmp
add
ss
xor
or
sbb
shlb
inc
mov
jecxz
pop
inc
mov
outsl
pop
mov
mov
mov
mov
sbb
sahf
aad
jg
pop
stc
inc
test
pushf
xchg
cwtl
fcompl
leave
sub
mov
sbb
aas
aaa
push
and
adc
push
pop
ret
adc
cld
jbe
jmp
pop
ljmp
imul
or
out
sub
pop
xor
cmpsb
shrb
in
pop
mov
xchg
scas
adc
sbbb
fwait
mov
mov
cmovno
fidivrl
push
cld
mov
and
dec
or
stos
and
insl
and
xchg
push
adc
lods
pop
pop
mov
add
out
mov
lock
adcl
out
leave
cs
mov
mov
adc
push
repnz
imul
cmp
mov
mov
cmp
sbb
lahf
mov
enter
pop
xor
mov
sub
xlat
jb
cmp
mov
cmp
pop
sub
es
outsb
dec
outsl
add
into
xor
ss
and
sub
mov
pop
push
rcrb
xchg
adc
jae
cld
xchg
stc
inc
push
mov
mov
pushf
pop
pop
xchg
and
jns
push
push
jnp
sbb
push
fsub
fwait
icebp
repnz
into
dec
inc
cmp
arpl
sahf
xchg
cmp
rolb
lcall
pop
hlt
test
dec
sarl
scas
in
push
mov
sub
sbb
repnz
or
push
and
mov
dec
inc
rol
jge
aad
push
pop
pop
fsub
adc
add
mov
pop
inc
ror
dec
jp
je
mov
or
lods
rcll
or
add
sbb
or
out
call
ret
mov
mov
fisttpl
divl
cltd
mov
pushf
je,pn
shrl
xor
sub
outsl
iret
cmp
push
nop
jg
mov
pop
xor
mov
bound
push
mov
fs
cmpsb
movsl
push
dec
adc
dec
std
sub
ds
fimuls
jmp
ds
out
sti
cld
cltd
test
jno
in
dec
stos
dec
xorl
stos
xor
sti
inc
repz
sub
lahf
arpl
mov
push
pop
push
dec
push
xchg
xchg
loopne
adc
adcl
cli
pop
mov
mov
test
cld
daa
lea
outsb
inc
mov
push
mov
xchg
inc
push
das
iret
dec
xorb
out
jne
cmp
icebp
sarl
arpl
mov
pop
pop
scas
mov
cmp
sar
fldenv
push
jmp
add
or
lea
xchg
mov
leave
call
xchg
sbb
mov
push
in
xchg
pop
adc
and
inc
cmc
frstor
mov
lods
or
ds
or
enter
fsubl
sbb
cmp
mov
mov
adc
add
xor
xchg
push
arpl
sbb
mov
sub
jge
mov
test
movb
bound
xchg
mov
aas
sbb
insb
aaa
fdiv
sub
lret
frstor
outsb
adc
pop
inc
xchg
xchg
cltd
faddl
outsl
scas
cmp
imul
loopne
cmc
loope
cmpsl
stos
inc
lahf
or
mov
ficoms
das
leave
add
add
lods
adc
sub
es
inc
mov
xor
cmc
or
int3
subb
inc
popa
add
mov
lods
test
repnz
enter
dec
pop
dec
jmp
insb
dec
insb
cmp
dec
jge
adc
inc
push
mov
inc
mov
adc
outsl
xchg
mov
insl
aad
cli
push
or
push
and
mov
inc
mov
ficoms
mov
cmp
and
cmpl
jle
rorl
mov
xchg
js
mov
mov
xchg
and
test
push
notb
sbb
mov
adc
xchg
mov
xlat
es
mov
orb
jo
sub
lcall
ffreep
pop
push
pop
test
jp
out
or
mov
jmp
and
js
ja
and
jae
jg
jns
sbb
jge
movntq
sub
fbld
mov
incl
js
and
adc
dec
xchg
xor
mov
or
mov
pop
push
pushfw
dec
fidivrs
jnp
xor
hlt
mov
lret
inc
xor
or
sbb
loope
xorl
icebp
mov
sahf
lret
jg
push
add
xlat
mov
in
or
jns
jno
dec
in
jmp
add
mov
fdivrp
fxtract
mov
mov
mov
add
aas
cmp
or
std
leave
popf
test
out
jbe
repnz
mov
sbb
and
push
push
adc
gs
mov
outsb
push
cmp
cli
lock
into
sahf
test
adc
iret
aad
cmp
in
dec
pop
push
push
sub
cmpsl
and
xchg
xor
dec
adc
das
cli
fwait
add
in
jecxz
inc
lret
mov
hlt
addr16
test
jmp
jae
ja
cltd
clc
xchg
lret
rorb
cmp
sbb
sub
sub
fsubrl
std
inc
int3
inc
pushf
outsb
ss
into
push
or
idivb
and
push
inc
mov
jns
xchg
xor
mov
mov
int3
jb,pn
lock
push
mov
xchg
jnp
movsl
mov
sti
mov
pusha
mov
out
cwtl
into
pushf
inc
inc
mov
imul
xchg
mov
les
sti
sarl
xor
icebp
sbb
pop
andl
in
cmp
sub
mov
adc
int
int3
sbb
ret
inc
lds
dec
push
push
and
adc
sbb
adcl
mov
pop
and
jmp
in
insl
add
in
aaa
in
stos
add
xlat
sbb
fs
test
insl
sub
cwtl
sub
int
xchg
cmpsl
mov
sbb
push
enter
cmp
mov
pop
cld
aas
sbb
in
ret
xchg
push
shll
setg
xchg
inc
je
inc
cmp
xor
pop
jmp
lods
aaa
bound
xlat
iret
push
jnp
cmpsl
jne
orb
dec
pop
jno
lods
xor
orps
idivl
insl
les
and
in
cmc
pop
mov
mov
xor
push
outsb
testl
add
and
jo
lahf
inc
xor
adc
das
pop
sti
xchg
test
xchg
gs
into
push
inc
inc
popf
in
cmp
hlt
cmp
xchg
mov
inc
test
pushf
jl
inc
mov
dec
mov
out
pop
mov
or
and
and
pushf
push
cs
pop
or
les
cmpsb
clc
push
sub
push
bound
cwtl
sbb
rol
shl
cmpsl
inc
and
jl
faddl
int
sub
inc
aaa
xchg
rolb
or
cmp
cltd
xor
xor
aad
pop
repnz
lret
and
xor
xchg
pop
fistl
push
ret
nop
nop
fldl
jg
inc
pop
dec
cmp
push
sub
or
adc
inc
js
ror
ljmp
lret
adc
aaa
cmc
out
xor
xchg
into
sub
add
es
xor
push
push
testl
fdivr
push
xlat
aas
mov
fld
and
stc
test
xor
adc
or
xor
leave
mov
pop
mov
ror
xchg
sub
sbb
pop
pop
inc
mov
push
jmp
adc
dec
dec
cltd
add
hlt
mov
push
dec
lods
xchg
enter
pop
jnp
xor
and
mov
ljmp
ficoms
cmpsl
dec
lea
inc
es
cmp
dec
testl
fidivrl
xchg
ret
sub
test
cmc
mulb
cltd
mov
mov
xchg
inc
push
cmp
lret
jmp
aaa
push
add
inc
je
sbb
xor
repnz
mov
cmpsb
lds
daa
rorl
in
sbb
adc
mov
inc
dec
cmp
daa
ljmp
lods
pop
idivb
jp
popf
push
insl
into
xchg
lcall
or
sub
bound
loope
xchg
sbb
aaa
xchg
mov
pop
mov
lock
push
jmp
rcrl
jbe
shlb
test
aas
mov
lds
mov
dec
inc
xchg
lods
lcall
push
inc
bound
stos
aam
jne
imul
add
mov
or
or
mov
call
cmp
sbb
lods
adc
mov
add
and
imul
fdivl
test
mov
ds
cmpsb
cwtl
dec
test
dec
adcb
add
adc
in
in
repnz
je
jmp
xor
rclb
fwait
mov
test
es
movsb
cs
les
negb
lods
push
mov
imul
mov
mov
sbb
repnz
jmp
ret
std
lahf
cs
push
int
mov
dec
mov
jns
push
jb
xor
faddl
xchg
int3
sbb
jo
sub
push
push
mov
push
fcompl
lods
jne
mov
cmp
inc
decl
ret
pop
decb
mov
inc
mov
in
inc
xchg
mov
xor
add
imul
mov
and
xor
sbb
iret
cld
jne
push
repz
fcmove
inc
rcrl
xor
mov
outsl
pop
add
jno
ficoms
dec
lea
jo
adc
lds
inc
push
or
movsb
xor
cmp
push
push
gs
mov
sbb
lea
into
jle
lods
jns
cld
fisubrs
fimuls
and
sbbb
jb
inc
sub
and
movsb
lods
es
js
lahf
test
xchg
cwtl
scas
or
jne
data16
dec
test
mov
xchg
adc
sbb
les
pop
jge
push
or
pop
pop
sub
pop
sub
les
out
shr
cli
and
sbb
jae
mov
loop,pt
fwait
adc
loopne
sub
outsb
add
gs
pop
adc
adc
dec
lahf
aam
adc
sbb
push
loope
paddusw
daa
stos
xchg
sbbl
mov
mov
pusha
jmp
jo
lds
outsl
xchg
sbb
dec
pop
inc
movsb
out
mov
pop
jo
inc
jo
push
xor
mov
mov
fldenv
jl
mov
mov
mov
pop
addr16
fidivrl
cmp
inc
stc
push
jno
addr16
pop
add
pop
in
pop
pop
pop
fistpl
and
push
mov
stos
add
out
mov
xor
mov
int3
sub
lds
jmp
adc
in
xchg
lcall
xor
inc
dec
push
cmp
lea
push
push
outsb
out
jg
add
and
sub
xor
dec
pop
sbb
inc
lea
ss
lods
cmp
inc
addr16
jecxz,pn
dec
push
and
inc
fistpl
push
jg
inc
add
enter
xchg
dec
sub
push
xchg
daa
orb
ja
push
stos
sarb
adc
dec
out
stc
or
rorl
aam
xchg
fdivrs
lahf
sub
adcl
cmpsb
xchg
jnp
add
dec
in
push
aam
xlat
and
mov
fisttpl
rorl
sbb
mov
loopne
or
xor
aad
mov
or
push
sbb
fcmovnu
mov
mov
and
and
aam
ret
mov
cmpl
push
imul
sbb
xchg
pop
jae
sarl
mov
scas
jo
popw
pop
jecxz
push
lods
inc
jae
shlb
cwtl
dec
inc
aaa
pop
dec
jb
out
out
lret
cmpsl
jmp
outsl
mov
sar
stos
lcall
pop
fdecstp
and
add
mov
movsb
adc
mov
push
mov
or
sahf
sub
iret
pop
push
lahf
insl
xchg
inc
push
jp
dec
out
add
lods
outsb
xchg
sbb
pushf
lcall
cmp
dec
test
aad
or
push
das
mov
mov
dec
aas
push
push
shlb
hlt
je
ret
dec
out
dec
sbb
mov
rolb
fldcw
fninit
push
cmp
cmp
dec
dec
pusha
outsb
fisubrs
imul
das
leave
pop
outsl
js
mov
ret
pop
sbb
popa
negl
lds
cmp
sub
mov
stc
xchg
add
xor
aam
jno
shl
mov
cmp
addl
loop
stos
add
inc
rolb
mov
es
ret
push
xchg
pusha
movsl
das
popa
xchg
mov
inc
js
nop
decb
or
jnp
fisttps
dec
inc
xchg
shlb
out
adc
pop
mov
lcall
ja
ret
clc
dec
inc
xor
std
vcvttps2dq
je
and
add
subl
xor
mov
dec
jae
add
sbb
js
cmp
xor
inc
or
test
imul
pop
and
mov
jo
push
cmc
icebp
lret
cwtl
popa
xor
xor
push
push
ljmp
fcomps
xchg
rcll
or
outsl
in
test
stos
jmp
xor
pop
dec
mov
mov
pop
pop
dec
out
mov
repnz
adc
testl
ret
xor
roll
movsb
ljmp
push
cld
cmp
jecxz
imul
icebp
cmp
cwtl
adc
ljmp
out
fldenv
int
test
mov
aas
sub
pusha
movsl
sti
fldl
ret
sarl
cmp
ljmp
lock
mov
sahf
inc
aas
idivb
add
add
xor
xchg
neg
adcb
mov
inc
jb
out
gs
dec
and
mov
repnz
sub
sbb
sti
adcl
xor
dec
ja
ja
cmpsl
mov
jne
jns
and
sub
xor
into
add
or
xchg
sub
jl
cmp
gs
xor
mov
inc
mov
loope
mov
dec
lock
or
insb
fdivrs
mov
out
sbb
dec
and
mov
movsb
add
or
jbe
nop
mov
aam
notl
push
jno
pop
adc
cmp
xor
sbb
icebp
testl
dec
add
or
ret
inc
or
mov
popf
sbb
pop
pop
pop
jge
sahf
add
adc
repz
out
mov
stos
push
and
pushl
jp
xor
dec
into
pop
das
aad
repz
lret
mov
repz
jle
pushf
out
out
dec
mov
push
popa
inc
pop
shl
orl
in
pop
or
movsl
subl
fcomip
sbb
aaa
pop
pop
fsubrl
sub
and
mov
cld
sbb
mov
scas
pop
add
int
or
xor
notl
sti
shrb
dec
xchg
pushf
fwait
add
cltd
rol
jns
adc
adc
cmp
xchg
into
pushf
add
inc
xchg
pop
stos
xchg
push
mov
mov
xchg
fwait
loop
and
je
mov
dec
jb
out
cmc
test
pushf
mov
jle
lds
test
xchg
adc
mov
inc
mov
add
fsubr
cmp
mov
fs
outsl
sbb
mov
mov
push
leave
add
cs
fwait
or
jp
lahf
and
jmp
cmpsb
push
mov
test
xor
repnz
cmp
out
inc
dec
ljmp
push
or
dec
insl
daa
test
imul
inc
aaa
mov
pop
out
adc
mov
inc
mov
push
sub
nop
je
pop
inc
ljmp
ljmp
movsl
mov
lcall
mull
leave
mov
js
mov
lret
mov
fildll
xchg
les
inc
pop
mov
faddp
enter
mov
lods
loopne
into
pop
and
jae
sbb
test
push
xchg
lret
mov
daa
dec
fiaddl
push
rolb
mov
push
lds
mov
and
aad
cld
repnz
jmp
test
sbb
or
loope
dec
xor
jp
js
xor
dec
xlat
inc
out
stc
fists
dec
pop
subl
clc
push
lret
pop
adc
stc
cld
inc
xchg
xchg
popf
dec
fstps
ret
dec
or
sbb
and
or
jmp
mov
dec
mov
ror
xchg
rol
in
xchg
mov
cmp
jne
add
testb
test
or
scas
sbb
cmpsb
xor
arpl
mov
sub
loope
and
sbb
pop
sub
push
test
in
notb
out
xor
dec
mov
repz
outsb
add
mov
popf
inc
nop
xor
lods
in
les
mov
ss
xor
or
mov
xorl
cld
cwtl
xchg
pop
adc
mov
sub
pop
add
es
stos
mov
dec
ljmp
push
or
sub
jl
fimull
pop
cwtl
mov
sti
cmp
inc
xor
jno
or
xor
lods
push
jb
adc
fsubr
dec
and
fprem1
mov
add
loopne
add
cld
icebp
roll
add
pushf
push
lock
pop
outsl
mov
sub
fdivrs
lock
scas
add
sub
out
out
lret
insb
sbb
mov
dec
pushf
leave
pop
xor
insb
ret
pop
aas
stos
int3
xor
repnz
in
push
sbbb
push
out
push
loopne
ja
cmp
push
fcomps
push
mov
lahf
dec
and
adc
mov
movsl
xor
push
inc
out
std
loop
mov
int3
and
je
ret
lahf
dec
xchg
xchg
pop
sbb
push
xor
sub
into
pop
pop
mov
xabort
xchg
and
or
mov
sbb
or
dec
stos
leave
xchg
ret
mov
out
adc
jns
inc
mov
pop
jmp
sub
mov
adc
inc
or
push
add
pop
or
insb
pop
movsb
jnp
cmpsb
mov
in
movsl
fildl
jle
cmpl
sbb
aam
test
xchg
shll
sti
sbb
pop
mov
xchg
push
push
and
out
push
adc
roll
adc
js
insl
stos
cmc
ja
sub
jae
mov
lret
int
adc
dec
fidivrs
fs
fistpll
and
push
imul
xor
lahf
add
pop
xchg
jns
dec
jb
and
fmul
rorb
inc
sub
and
mov
adc
mov
sti
icebp
and
or
add
jp
ja
inc
jb
and
xchg
cmp
outsb
inc
push
add
mov
or
cltd
pop
adc
or
jp
push
repz
pop
xchg
mov
xor
ds
cwtl
mov
cmp
andb
cmc
fnstcw
pop
add
jge
cmp
mov
and
lods
hlt
movsl
mov
bswap
aam
mov
daa
out
xor
clc
pop
pop
or
testb
fwait
ss
es
xrelease
movsb
repz
push
mov
sub
push
or
popa
sti
mov
mov
mov
sti
rcll
out
cmpsl
lods
push
xor
jo
jl
data16
into
mov
cmc
mov
or
js
fs
dec
loope
add
hlt
inc
out
sub
test
aas
icebp
test
fdivrs
cld
ss
pop
mov
aaa
jmp
stos
mov
inc
subb
cs
jnp
jl
notb
addr16
fmull
in
cmp
sub
out
fdivs
pop
mov
mov
mov
push
sti
sbb
into
lret
jg
test
lcall
aam
xchg
cmpsl
xor
sbb
push
int
jne
insb
xchg
cmpsl
inc
add
cmp
lds
push
mov
mov
icebp
das
push
sub
jmp
into
ficoms
aaa
addr16
mov
ss
stc
int3
insb
iret
jns
sahf
pop
inc
std
cmp
into
shrb
adc
mov
dec
lcall
cmp
add
jl
sbbb
pop
inc
outsb
cmc
mov
lahf
push
insb
xchg
enter
lahf
loope
fcomps
loopne
mov
adc
hlt
into
cwtl
cmp
filds
out
aad
or
mov
movsb
sti
notb
movsl
lahf
movsb
movsl
mov
out
dec
mov
push
popl
scas
cmpsl
test
jno
out
pop
loope
pop
lret
lds
adc
mov
insb
xchg
dec
ja
pop
cmp
xchg
jl
xor
sahf
mov
jmp
cmp
xchg
cli
roll
jae
cli
xchg
testl
sbb
inc
stos
lret
dec
push
pusha
in
add
and
enter
jnp
cmp
ss
scas
jns
xchg
pop
push
subl
int3
xchg
scas
imul
jae
xchg
loop
adc
jge
jg
lcall
aad
pop
mov
movsb
mov
mov
sti
fs
or
pop
push
sti
add
lods
mov
cmpsl
sbb
popa
iret
sarl
loopne
pop
stos
sbb
arpl
jge
or
sbb
rorl
or
push
xchg
adc
lahf
imul
push
adc
dec
xor
enter
inc
cli
mov
sbb
xor
jae
dec
pop
pop
daa
inc
ret
lcall
scas
mov
jl
popf
sbb
pop
mov
cmovns
repz
xor
lcall
and
dec
mov
adcl
sub
stos
movsb
adc
nop
pop
imul
into
dec
add
add
lret
push
repz
lock
xchg
adc
push
push
stos
fdivrl
jb
lret
and
push
rclb
mov
xchg
push
dec
sub
and
in
inc
dec
jno
mov
xor
push
xor
cmp
adc
int3
adc
jge
and
movsl
mov
xor
xor
xor
mov
pusha
pop
cmpsb
div
adc
inc
xchg
gs
mov
stos
add
pop
inc
add
sub
push
or
adc
push
int
lock
xchg
cmc
adc
daa
dec
lea
cld
repnz
xor
loope
out
lret
xchg
addr16
insb
adc
xchg
dec
pop
add
cli
js
pop
imul
jge
mov
mov
es
mov
jo
xor
clc
and
inc
sub
jle
imul
fst
pop
or
cmc
rolb
mov
mov
js
push
loope
push
mov
fimuls
jae
mov
and
es
cli
xchg
inc
xchg
mov
sub
das
lock
ss
movsb
test
dec
dec
lods
mov
and
sub
xor
stos
mov
mov
adc
inc
jle
scas
add
insb
aas
sbb
mov
mov
orl
jne
movsl
mov
out
ds
xor
sbb
sarl
xchg
out
mov
xchg
add
and
les
xor
outsl
bound
mov
sub
ror
pop
add
add
cltd
iret
mov
mov
mov
and
jne
jo
push
call
pop
insl
andb
js
lods
out
mov
push
push
xorl
cmp
jns
mov
mov
insl
notl
movsl
xor
mov
out
dec
fucom
or
into
movsl
inc
inc
imul
dec
push
sbb
out
das
xor
sub
jg
ds
pushf
mov
nop
or
movsl
lcall
out
push
sbb
adc
sub
cmc
test
pop
fwait
sahf
xchg
ret
mov
push
inc
dec
fistpll
fistpl
test
leave
jno
ss
mov
sbb
inc
lock
sub
and
cmp
loopne
stos
fdivs
aad
adcb
fstl
lahf
pop
insl
sub
loop
lock
push
pushf
xor
out
mov
lods
xor
cmp
ret
lds
jno
popf
adc
jnp
inc
in
rorb
imul
sub
and
out
inc
xor
or
dec
ljmp
or
cmp
movsbl
push
jp
popf
xchg
push
push
lock
fimuls
jge
add
int
sub
mov
out
pop
leave
cmpsl
lods
mov
cmpsb
mov
fucompp
or
mov
int
add
ds
daa
mov
lret
or
mov
xor
and
push
dec
lds
mov
test
jae
cmp
fcoms
es
ja
jae
test
mov
popf
push
ret
out
adc
imul
mov
or
fdivs
or
das
leave
jne
mov
xor
sbb
movsb
lds
add
cli
test
test
jl
pop
pusha
rorl
xchg
fdiv
insl
mov
out
add
sbb
or
das
adc
ret
cmpsb
lret
idivb
cmpsb
push
jp
test
cmp
lret
inc
sbb
dec
sub
mov
nop
jbe
bts
or
cmp
xchg
test
repz
js
push
inc
cltd
jg
ss
das
pop
jbe
push
jecxz
jp
jae
fsubl
cmc
xchg
call
adc
loope
aaa
lods
insb
inc
sub
jae
enter
insb
cmp
lods
add
outsl
ja
stos
or
nop
lea
add
mov
loopne
xor
xor
cwtl
dec
call
sbb
rorb
rcl
push
clc
mov
jae
js
pop
into
jbe
jne
lock
pop
mov
jecxz
int
negb
adc
sub
cmp
pop
mov
cmp
adc
lods
jmp
pop
addl
add
xchg
add
xlat
bound
and
lods
insl
mov
sahf
add
addr16
xor
jne
incl
dec
lea
sub
and
out
pop
cmpl
ja
ljmp
loope
jne
lds
sbb
movsl
pop
fisubl
arpl
fisubrs
adc
xchg
sti
or
sub
imul
add
std
fcmove
ja
mov
int
in
out
fdivrl
sbb
sar
dec
jle
jne
iret
pop
mov
mov
push
jne
fsubr
mov
sub
mov
push
jmp
and
and
sbb
sahf
pushf
mov
mov
fdivrs
mov
cmp
mov
mov
xchg
fldcw
dec
ret
rorl
pop
fbstp
mov
ja
lret
sub
mov
test
pop
inc
addr16
add
lahf
sub
add
into
sbb
inc
es
jno
daa
xchg
mov
sub
lret
lret
movsb
jae
stos
inc
outsl
xchg
sub
clc
mov
and
and
out
mov
sub
cmp
and
fwait
pushf
cli
sbbl
jg
clc
mov
or
or
xor
les
stc
cmp
cwtl
jmp
jns
push
dec
fldt
movsb
and
xchg
adc
popa
mov
stos
inc
fidivs
dec
sbb
pop
in
shlb
sbb
scas
jno
dec
cltd
add
in
lret
ret
in
outsl
outsl
jge
movsb
fisubrl
scas
lret
prefetcht0
mov
cmp
ja
pop
mov
cmc
and
cmp
cmp
mov
pop
adc
out
add
jbe
out
test
sbb
and
push
mov
out
faddl
data16
or
pop
jecxz
jl
and
jo
fs
fistps
mov
mov
in
mov
cltd
stos
or
dec
mov
mov
xor
or
mov
aam
mov
movsl
bound
xchg
push
mov
xchg
jns
or
mov
leave
inc
aad
sbb
add
jl
mov
lret
mov
pop
mov
sub
pushl
sbb
es
outsb
mov
mov
ror
sbb
and
bsr
call
jne
jb
lods
sub
jmp
inc
imul
push
mov
dec
cmpl
xor
jmp
dec
xor
xor
cltd
stos
xchg
mov
into
cmpsb
or
adc
adc
jae
add
add
or
mov
mov
xor
dec
or
xchg
adc
outsl
adc
or
dec
jmp
dec
mov
adc
icebp
dec
mov
inc
lods
push
jbe
fwait
mov
push
add
inc
pushf
movsl
out
out
cmc
in
lods
mov
mov
xchg
and
pop
sti
pop
fwait
rcll
mov
sbbl
mov
jle
ja
or
cld
jmp
pop
pop
xchg
pop
mov
add
jle
adc
sbb
ret
aas
int3
popa
sub
mov
push
jns
inc
push
jle
sub
scas
xchg
gs
cli
ret
inc
adc
pop
xchg
test
push
mov
xor
mov
imul
push
cmpl
nop
jl
pop
sub
fildll
js
mov
add
mov
mov
xchg
mov
cmp
lods
or
adc
out
into
into
mov
mov
call
outsb
clc
addr16
dec
mov
sti
pop
jp
ds
lahf
divl
xor
mov
add
ret
fwait
decl
mov
in
out
and
push
pusha
xchg
or
in
rclb
sub
sbb
in
fdivrs
push
dec
xrelease
mov
and
ljmp
pop
sarb
jecxz
mov
cltd
pop
adc
cmpsb
aad
fisubl
lods
pop
mov
sub
mov
mov
add
pop
mov
test
repz
cmc
mov
jo
mov
roll
jge
mov
push
jmp
call
stos
aad
pop
dec
jmp
mov
inc
je
bound
add
dec
ja
and
cs
ret
push
jmp
fwait
mov
xchg
pushl
ret
imul
sarb
test
mov
mov
rcll
test
rolb
mov
popf
adc
adc
xor
pusha
fisubs
leave
inc
test
pop
popa
adc
and
fists
gs
pop
test
and
pusha
xor
mov
mov
sbb
mov
sbb
test
lret
push
and
mov
hlt
imul
jmp
ret
test
pop
in
shlb
aaa
mov
mov
jo
gs
jecxz
mov
imul
in
sbb
jb
mov
mov
xchg
mov
inc
adcl
jg
sarb
pop
clc
or
cmpsb
iret
sub
pop
pop
xchg
push
jp
and
sahf
mov
inc
fucomi
rolb
and
push
ffree
push
daa
or
fisubl
add
and
int
sub
sti
mov
outsl
xlat
cmp
or
imul
fstl
xor
and
pop
mov
sub
dec
js
dec
mov
dec
xorb
pop
dec
jge
call
xchg
push
push
and
addr16
clts
pushf
inc
xchg
cmp
add
xchg
xorl
das
sub
jo
and
pop
dec
add
repnz
xchg
pop
cmpsw
push
lods
jecxz
out
pop
pop
pop
and
popa
push
push
pop
repnz
lods
adc
cmc
loopne
add
push
mov
xchg
mov
mov
mov
cltd
ss
addr16
hlt
dec
adc
add
add
adc
push
rorl
cmpsl
ret
pop
out
or
outsl
add
test
setno
fsts
jb
das
fiaddl
mov
imul
push
aaa
inc
call
jl
movsl
sub
cmc
das
cmpsb
push
and
pushf
in
pusha
or
in
xchg
in
push
jl
imul
push
pusha
inc
push
push
rcll
dec
cmc
out
xor
imul
xchg
push
push
adc
ret
and
xchg
jo
lcall
pop
push
sahf
loope
test
mov
add
lea
and
jbe
insb
mov
mov
mov
jmp
sbb
sub
xor
ja
mov
rolb
in
orps
ss
lret
mov
daa
cltd
imulb
lea
sbb
and
xchg
pop
cmpsb
sar
inc
cltd
lahf
pop
and
repnz
mov
pop
std
lods
stc
mov
stc
out
and
es
aad
jbe
xlat
xchg
mov
repz
nop
push
insl
push
xchg
lods
push
mov
xchg
stc
mov
push
or
ljmp
pop
mov
mov
pushf
xor
lcall
sub
out
xorb
repnz
shlb
add
mov
insb
call
xchg
imul
push
xchg
jg
xchg
add
jbe
fmull
pop
in
push
add
mov
mov
popf
pop
xor
or
adc
in
lods
test
pusha
jbe
pop
push
jns
mov
iret
jp
or
subl
arpl
inc
pop
or
imul
inc
sub
lcall
sub
mul
jne
insl
mov
cmp
sete
sbb
xchg
push
ret
sahf
stc
add
and
cmp
mov
iret
mov
frstor
cli
xchg
hlt
iret
xchg
clc
enter
leave
jecxz
jmp
into
sarl
push
add
ret
mov
xchg
sub
nop
arpl
es
call
push
je
test
divb
mov
sub
xchg
ret
pop
sahf
outsl
outsl
mov
push
out
mov
adc
xchg
jmp
pop
or
int
pusha
in
push
add
lret
dec
push
std
sbb
pop
sahf
jp
sub
fsubs
fisttps
and
arpl
jge
sti
mov
mov
inc
mov
mov
lret
push
lods
adc
xorl
or
jne
xlat
js
inc
push
mov
push
lret
aam
push
stos
mov
push
les
or
xchg
push
lcall
pop
fiadds
loope
inc
xchg
push
mov
cmp
je,pt
shr
imul
data16
rorl
xor
dec
nop
jne
mov
sbb
xchg
sti
in
ret
xlat
movsb
cmpsb
std
mov
shl
iret
jo
lahf
push
pop
adc
fistpl
add
out
test
loope
adc
sub
inc
mov
xlat
or
ja
jecxz
xchg
lods
and
pop
movsb
push
mov
mov
sbb
sbb
xor
lods
xchg
fidivrs
std
cmpsb
dec
inc
pop
aad
pop
inc
into
rolb
jg
push
in
popa
pop
push
mov
xchg
stos
incl
mov
fistpl
rol
sbb
mov
mov
mov
fbld
in
sub
call
shlb
sarl
mov
pushf
mov
ja
imul
push
and
xlat
sub
movsb
pop
js
ds
cmpl
inc
sbb
sbb
add
mov
into
and
push
mov
add
push
jo
mov
jg
icebp
ret
std
dec
xor
jb
sbb
scas
sub
rcr
ljmp
pushf
or
loopne
lahf
mov
jb
inc
cmp
leave
adcl
xchg
pop
mov
mov
idiv
mov
lret
sub
jns
mov
pop
out
dec
or
adc
mov
push
test
sti
push
jge
jmp
or
inc
pop
dec
lods
int3
lahf
and
push
sbb
jg
rolb
cmp
adc
bound
subb
aaa
jge
cmc
ljmp
sbb
jns
sub
rclb
inc
mov
je
scas
into
fisttps
enter
or
push
jne
invd
aam
fimull
pop
inc
repnz
fsubs
out
int3
adc
mov
mov
test
pop
aad
roll
xchg
adc
ja
jb
add
pop
inc
lds
cmp
sbb
test
lods
cli
add
rolb
jl
out
mov
in
mov
shrl
outsb
or
in
pushf
dec
jp
cld
mov
cmp
dec
xor
int
xchg
mov
fwait
xchg
push
cmp
add
mov
ret
push
add
or
mov
sahf
dec
hlt
stos
clc
push
mov
and
lret
je
pop
mov
and
adc
mov
jo
xchg
dec
xchg
call
pop
xchg
std
inc
xor
daa
sbb
dec
xor
xor
xlat
jle
and
xchg
sub
mov
mov
hlt
int
mov
mov
or
sbb
dec
div
cmpsb
sub
stos
into
aas
mov
je
mov
pop
mov
int
xor
ds
sar
dec
int3
xchg
adc
out
pop
scas
push
cld
enter
sbb
dec
sub
mov
sub
lcall
cld
test
mov
mov
adc
push
sub
jbe
loope
jle
test
lahf
xor
and
sub
movsl
push
sub
and
adc
mov
pop
adc
add
cmp
dec
das
or
cmp
nop
arpl
ret
popa
popa
andl
and
insl
dec
fstpt
xchg
mov
out
loope
pop
fs
sti
fdivr
push
mov
mov
lahf
or
fwait
scas
aam
mov
add
outsl
andl
mov
lahf
stos
daa
popa
pop
jle
mov
addw
push
ret
popa
out
adc
lods
mov
in
sbb
push
sub
adc
jo
lods
cld
add
in
repz
adc
sub
xor
dec
sub
hlt
stos
jmp
pop
jo
xor
dec
jb
addl
out
mov
mov
lcall
xchg
push
ljmp
cmp
testb
rclb
dec
cmp
rcrb
dec
and
rorb
and
or
add
mov
push
xor
xchg
push
xchg
fs
jp
nop
sub
fiadds
xor
xchg
nop
leave
sti
push
mov
push
or
sbb
add
lret
cmp
int3
adc
lcall
push
xor
pusha
pop
push
dec
mov
sbb
icebp
ret
fs
popa
je
test
push
mov
mov
cmp
pop
xor
sub
xlat
ret
imul
push
xor
movsb
mov
call
imul
es
mov
pop
dec
dec
addl
lods
mov
jp
inc
fisubrs
adc
clc
out
pop
inc
xchg
mov
xor
fisttpll
aam
mov
in
ret
dec
cmp
stos
data16
mov
insb
popf
ds
repnz
stos
bound
mov
inc
push
mov
xchg
push
mov
cmp
jne
mov
pop
pop
fdivs
nop
sub
mov
lcall
xchg
aam
add
sbb
cwtl
cmp
and
push
mov
iret
mov
sub
xchg
dec
lret
dec
out
ja
jnp
mov
sbbl
or
shlb
and
mov
fisubs
cmp
cmpsb
mov
sub
push
loope
movsb
pop
ds
in
xchg
shlb
stos
stos
jge
loop
fucom
icebp
aaa
push
inc
divb
cmc
sbb
push
jo
mov
out
jno
adc
mov
fidivrs
jb
loopne
dec
lcall
sub
fsubr
xchg
cltd
push
jo
sbb
pop
jmp
mov
imull
jbe
orb
push
jg
sbb
inc
mov
jbe
mov
and
aam
xchg
repnz
mov
fsubl
scas
and
scas
aad
mov
shlb
repz
xchg
cltd
mov
adc
jmp
subl
pop
mov
test
pop
push
es
and
out
mov
push
int
into
iret
xor
in
sub
repz
mov
mov
jnp
testl
jge
loop
ror
arpl
mov
imul
lea
cmpsl
mov
imul
ret
into
xchg
sbb
lds
push
aaa
and
out
fistpll
inc
loopne
loop
adc
fmulp
inc
sbb
dec
sub
sbb
xchg
dec
lods
mov
fucomi
add
add
cmp
inc
add
and
xor
adc
mov
or
insl
fcompl
arpl
clc
inc
xorb
cld
andb
mov
enter
jno
idivb
or
xor
push
pushf
lea
mov
pop
ja
jle
or
stc
and
sbb
enter
subl
pop
fdivl
fnstenv
pop
int
movsl
jmp
sbb
leave
cmc
out
mov
lock
out
and
jecxz
in
jo
in
loope
xchg
outsb
pop
mov
out
cmp
ds
cmpsb
xor
in
jecxz
pop
faddl
mov
dec
cmpsb
mov
ficoms
or
or
test
pop
cmpsl
mov
mov
mov
dec
rolb
mov
insl
movsl
push
fsts
imul
sub
lea
pop
cmpsl
popf
push
out
xchg
aam
cltd
lods
decb
jecxz
jo
lea
ss
lcall
popf
push
or
and
dec
sub
jns
xchg
mov
jp
pop
push
xor
cs
sub
fs
movsb
addr16
inc
sub
add
loop
jnp
cmc
test
into
jmp
sbb
xor
dec
ja
aam
and
jno
es
mov
shl
xchg
idivl
jp
mov
cld
add
mov
das
movsl
mov
add
push
jle
fidivrs
popa
add
lods
stc
loope
hlt
daa
mov
sbb
and
sub
bound
lods
cmpl
int3
stc
dec
jle
pop
aas
jge
lret
or
enter
mov
add
sbbl
inc
dec
sahf
inc
lock
repnz
sub
lea
inc
xor
cmc
pop
les
imul
stos
adc
shl
or
in
sbbl
and
movsl
out
xchg
psubsw
jo
jp
pop
nop
inc
xchg
add
outsl
cmp
add
mov
dec
into
fs
out
jns
push
leave
aas
jmp
push
mov
je
sbb
pop
out
and
pop
lret
in
mov
fs
pop
mov
shlb
jmp
inc
pop
js
and
jne
mov
int
and
jmp
cli
stos
sbb
mov
mov
lods
and
xor
jge
lds
pop
cmp
out
jge
notb
in
ret
andb
lods
mov
imul
arpl
and
cwtl
adc
fwait
out
xchg
loope
aaa
xor
jne
fsubl
lret
push
mov
movsb
pop
out
jbe
leave
jecxz
fucom
outsl
pop
pop
lock
jge
ret
dec
rcrb
cmp
xor
into
cmp
adc
and
enter
mov
imul
cwtl
ljmp
enter
mov
xchg
pop
add
popa
add
add
mov
mov
pop
cmp
add
mov
add
roll
jl
inc
push
insl
jns
dec
mov
mov
orl
pop
test
xchg
hlt
adc
addl
mov
fs
mov
out
push
or
add
rorb
add
xor
push
jle
loopne
cmp
out
cli
cmpsb
insb
cmp
icebp
jb
popa
fs
sbb
das
xor
rcrl
scas
pop
xchg
test
movb
ret
mov
jp
outsb
pop
test
imul
cli
sbb
adc
pop
imul
shll
mov
sbb
shl
mov
shrl
rol
push
fldenv
loop
int
cld
inc
aad
ja
push
ffree
imul
xchg
mov
push
sahf
lahf
mov
or
stc
nop
mov
mov
sti
pop
sbb
loop
bound
movsb
test
fstl
js
imul
or
xor
fists
mov
jns
pop
enterw
fcoml
sub
repz
cmp
loopne
mov
xchg
stos
out
imulb
pop
inc
stc
xor
aaa
imul
add
dec
int3
dec
xchg
stos
not
fwait
loop
mov
imul
int
cld
dec
or
aad
loope
xchg
js
mov
jbe
test
out
ds
inc
jnp
pushf
aam
mov
xchg
mov
cltd
mov
jp
pop
cmp
cmp
and
scas
mov
test
jle
test
cwtl
pop
mov
push
push
push
pop
out
imul
dec
mov
daa
pop
inc
sub
loopne
fmuls
fldt
test
test
repz
dec
cmp
sbb
xchg
push
inc
cwtl
pop
in
jl
dec
mov
or
mov
pop
out
xchg
jmp
lds
xchg
xchg
push
fdivr
push
pop
shrl
mov
loop
and
icebp
das
out
out
push
fs
pop
pusha
and
enter
xchg
dec
cmp
mov
mov
dec
gs
aam
xchg
add
xchg
out
push
sbb
dec
popa
mov
lds
mov
and
into
push
push
and
cmp
std
mov
mov
xor
insb
jge
dec
sar
insl
mov
or
jae
enter
mov
xchg
cmp
cmp
or
xchg
mov
incl
push
popa
out
add
mov
in
ret
out
imul
mov
mov
icebp
adcl
arpl
sbb
lock
xor
add
dec
mov
mov
jno
popf
in
subb
scas
aad
mov
std
jle
int
jnp
iret
mov
vmaxsd
int
pop
xor
cmp
loopne
and
pop
push
loope
pop
pop
add
scas
popf
test
sub
jae
les
popf
jb
mov
fbstp
jnp
popa
loop
inc
mov
xchg
inc
inc
sbb
stos
pop
sbb
fiaddl
pop
cmc
adc
hlt
fldl
test
fildll
inc
jns
in
cli
xor
movsl
loop
mov
fcoml
mov
clc
mov
mov
int
sbb
pop
push
sub
sahf
mov
and
sub
xchg
mov
int
xchg
or
lods
int
mov
mov
stc
and
fdiv
dec
arpl
in
or
aas
mov
scas
sahf
insb
out
int3
mov
pop
adc
add
pop
mov
sbb
aad
or
sbb
sti
inc
fnstcw
fdivp
inc
ficoms
repnz
rcr
mov
xchg
ss
jnp
cmc
lahf
mov
cmp
nop
dec
mov
je
xor
icebp
adc
je
inc
mov
add
push
jecxz
xchg
push
outsl
and
pop
sub
or
gs
notl
into
rorl
mov
notb
pop
btr
xlat
or
scas
jge
je
loopne
in
lret
out
in
adc
add
in
test
in
loop
or
sub
mov
sbb
das
icebp
adc
insl
jp
bound
xchg
mov
pusha
add
jne
rcrl
test
flds
and
cltd
add
pop
movsb
jno
mov
inc
push
addl
scas
and
int
and
xorb
mov
pop
ljmp
inc
cli
outsl
scas
jno
xor
push
sahf
sub
daa
hlt
dec
icebp
mov
fs
or
gs
call
push
sbb
rcl
std
iret
incb
mov
add
jg
or
push
daa
movsl
push
lahf
sbb
shrb
mov
mul
jae
ljmp
ret
out
sub
adc
mov
dec
mov
mov
inc
cmp
add
call
and
insb
sbb
cmpsl
sbb
out
mov
test
lds
rclb
mov
jg
stos
out
jge
xor
inc
aam
push
aaa
or
sub
xor
outsb
sbb
adc
cmp
ficompl
dec
xor
rdmsr
loop
and
sbb
mov
jecxz
xor
inc
jle
xchg
add
fidivs
stos
pop
mov
adc
add
jmp
and
jecxz
lods
imul
cmc
shrb
xorb
test
fsqrt
pop
stc
mov
mov
mov
add
arpl
add
sub
sub
cmp
mov
push
mov
ds
rcrb
ja
ret
rol
adc
push
in
dec
push
pushl
adcb
xor
jge
jle
inc
or
lret
inc
xor
test
mov
and
and
dec
adc
andb
lcall
xchg
popa
inc
lods
jge
jle
fwait
stos
cmp
leave
loop
and
hlt
add
or
pop
std
movsl
into
push
shr
sub
sub
lahf
loope
cltd
fcmove
push
les
pop
dec
jae
jb
loopne
les
sahf
add
loop
sahf
mov
xchg
pop
pop
out
jnp
test
adc
inc
mov
mov
js
les
sahf
inc
out
test
loop
xchg
dec
or
aad
in
jnp
and
xchg
jo
mov
mov
aaa
lret
xchg
mov
lds
je
pop
mov
push
cmp
lods
xchg
fdivs
std
jmp
adc
dec
imul
lods
test
xchg
ret
sub
lods
out
push
loope
rcll
ret
mov
mov
cmp
push
loope
push
jmp
push
push
fs
add
mov
cltd
xchg
inc
popf
ljmp
dec
insb
loopne
add
shll
pop
lods
push
xor
leave
jne
cmp
adc
outsl
xorb
stc
cld
divl
add
mov
movsb
cli
sbb
xchg
leave
test
sahf
dec
sub
add
add
je
cs
mov
gs
xchg
lcall
jb
lret
mov
test
mov
add
pop
loope
gs
sub
lods
inc
or
aaa
enter
aad
or
loopne
xchg
push
lret
test
cli
sub
jge
dec
pushf
and
mov
fwait
bound
inc
ss
and
jae
pop
roll
lret
pop
cmpl
pop
mov
repnz
or
loope
mov
popf
fisttps
stos
push
pmullw
lock
daa
pop
cltd
repz
jmp
mov
mov
push
pushl
fs
mov
xchg
lods
out
lods
into
sbb
int3
xchg
xchg
decl
sysret
dec
and
jo
sar
or
add
shrb
adc
dec
cltd
push
ds
pop
xor
sub
xchg
xorb
mov
jae
cmp
insb
sarl
out
popa
movsl
cmp
shll
iret
jo
jp
cmpl
pop
fmull
lock
cwtl
xor
ja
cmp
or
out
lods
mov
mov
test
cmp
xchg
mov
sar
inc
cmpsl
add
je
mov
cs
jmp
mov
das
mov
fisttps
roll
sbb
jbe
test
xor
xor
xchg
lahf
sbb
or
and
xchg
lcall
jbe
inc
push
push
push
mov
cmpsb
xor
arpl
out
std
popf
jmp
lahf
jg
rcl
lods
inc
cltd
js
cmpsb
xor
inc
pushf
mov
test
add
dec
and
out
sub
inc
pop
dec
push
inc
pop
mov
jl
adc
jbe
mov
sub
aas
mov
out
ret
xor
jns
int
popf
ror
adc
int
loopne
jae
xchg
and
jle
pop
lcall
mov
mov
dec
push
inc
shrl
lret
and
mov
test
mov
gs
adc
pop
push
inc
sbb
repz
fsts
mov
into
dec
or
dec
cmpsb
pop
dec
das
movsb
jo
pop
xchg
test
shlb
pop
repnz
add
addr16
lods
fwait
dec
bound
dec
imul
inc
mov
scas
sahf
leave
xor
rcrl
mov
flds
and
jmp
flds
test
movsb
into
int
addr16
fs
or
nop
jmp
in
push
and
fdivrl
aaa
mov
cmpsb
cli
lds
jmp
out
dec
incl
aas
mov
cli
adcb
fists
dec
mov
fistps
or
cmp
xor
mov
jg
stos
and
mov
movsl
push
out
jg
imul
mov
adc
insl
dec
ss
mov
fwait
es
sbb
cwtl
xor
mov
xchg
dec
test
push
pop
cmp
adc
cmp
or
fidivrl
add
add
sbb
cmp
aam
dec
adcb
jbe
push
lods
jno
xor
add
ljmp
int
mov
mov
negl
or
cld
jp
jnp
sub
push
call
icebp
push
jbe
or
adc
push
inc
mov
push
mov
jae
sub
xchg
loop
bound
add
outsl
repnz
in
mov
addr16
cmpl
cmc
pushf
test
jge
imul
jg
cmp
hlt
jp
mov
enter
or
push
add
aas
subb
xor
pop
mov
pop
test
das
sbb
daa
xor
gs
je
test
ja
out
push
cltd
push
pop
pop
out
enter
cwtl
aam
clc
movsb
push
insb
push
ljmp
and
inc
daa
ja
push
jg
xchg
data16
or
mov
inc
mov
jno
rolb
dec
mov
inc
test
dec
jmp
add
popf
adc
xor
shr
mov
ds
and
outsb
sub
xlat
cmpl
xchg
mov
push
jp
sahf
mov
aam
pop
repz
mov
jno
popa
xchg
outsb
jp
dec
bound
xor
sub
lds
bound
inc
aas
mov
mov
or
dec
inc
outsl
sbb
pop
mov
xchg
iret
cmp
ds
xorb
mov
xchg
leave
sahf
mov
out
data16
nop
xchg
and
dec
stos
mov
ret
mov
jnp
fwait
mov
pusha
popa
rcr
out
pop
aad
sahf
sti
pop
jne
sbb
jae
push
adc
pop
jle
sbb
in
inc
fstps
inc
lea
dec
sbb
cmp
pop
xchg
dec
xor
fcoms
mov
inc
ja
cmpl
into
in
inc
into
mov
inc
bnd
out
add
les
pop
or
dec
push
cs
enter
ficoms
sub
aad
or
ja
pop
lock
sbb
out
rcll
icebp
test
sub
and
adc
int3
test
push
cmpsl
ss
jae
sbb
inc
xor
inc
mov
xor
sub
pop
lods
xorl
leave
cwtl
cmc
mov
adc
sub
mov
fisttps
lret
lods
mov
or
adc
repnz
dec
jb
push
scas
mov
or
cmp
mov
pop
xor
dec
and
fmull
inc
inc
out
or
shlb
fstpt
mov
mov
sbb
mov
in
mov
mov
add
fwait
inc
repz
dec
sbb
lret
cmp
inc
mov
mov
pop
jnp
mov
lret
jne
dec
sub
pop
arpl
mov
sbb
pusha
jle
sbb
insl
pop
xchg
add
pop
inc
popa
sbb
or
outsb
scas
imul
and
es
repnz
outsl
fwait
cmpsb
ret
repz
imul
call
clc
ss
jg
popf
sbb
pop
nop
ss
pop
call
xchg
test
or
push
call
mov
stos
push
lods
fsts
push
lods
sahf
lods
adc
loopne
ret
popf
jne
fisttpll
or
mov
inc
lods
sub
sti
aam
loope
addr16
int
cmp
data16
aas
jno
rcll
push
cmp
mov
inc
cltd
cmp
cmp
pushf
add
out
in
or
sub
xorl
jmp
mov
cmp
cmc
call
or
jae
js
insl
inc
push
out
adc
mov
enter
out
les
xchg
shl
aam
pop
adc
cmp
push
push
insb
mov
xchg
aad
fisubrs
out
or
cmp
mov
inc
mov
movsl
shr
mov
cmp
das
mov
sbb
cmp
es
cltd
add
and
and
outsb
mov
aas
and
mov
cmp
lahf
or
jns
mov
dec
dec
inc
stos
cmp
jnp
cmp
cli
js
pop
fmul
repnz
mov
mov
push
es
fcomip
mov
mov
jle
add
adc
mov
sbb
mov
push
pop
sub
outsl
cs
sub
push
xor
cli
and
push
movsb
sub
push
je
clc
test
and
cs
mov
mov
nop
or
subl
or
lcall
xchg
incb
outsb
mov
imul
ret
cltd
or
nop
or
adc
stos
add
push
xchg
push
jo
add
xchg
inc
xor
xchg
add
xchg
push
mov
outsl
mov
sub
jae
outsb
call
cmpsl
push
in
stos
jnp
push
dec
dec
inc
ret
call
fisubs
pop
sub
fisttpl
xlat
leave
movsl
sub
js
stc
out
pop
mov
xchg
jp
inc
lea
pop
mov
sbbb
repz
int
arpl
inc
adc
and
in
xchg
inc
fsts
mov
sarb
les
xchg
xchg
sub
adcl
inc
xor
ljmp
push
flds
aam
xor
lock
cwtl
cli
jns
fdivs
pop
adc
rcrl
add
movsl
sbb
loope
xchg
test
jne
sbb
leave
sahf
lods
push
add
test
xchg
sub
xchg
cmp
add
scas
add
rorl
mov
mov
enter
lods
scas
sbbb
pop
test
shlb
ret
jp
cli
add
pop
add
stc
push
xor
mov
incl
out
test
mov
int3
jne
jmp
push
popf
mov
hlt
shlb
cmp
mov
or
cmp
sarb
mov
or
lcall
shl
fsubl
add
cmp
leave
pop
sbb
sar
nop
negl
cmp
xchg
popa
xor
int3
add
aam
shl
adc
fwait
pop
mov
addr16
nop
adc
lods
movsb
pop
pop
jp
dec
aas
xchg
pop
pushf
fdivrs
inc
inc
pop
test
and
nop
fsubrl
push
add
pop
add
sbb
out
sub
mov
nop
mov
fwait
sbb
inc
inc
and
jl
adc
or
nop
loopne
push
shll
sbb
jle
movsb
lret
out
xchg
sub
inc
stos
and
cmp
xor
stc
fisubs
bound
mov
and
int3
dec
fisubs
pop
pop
sub
mov
fwait
dec
add
shlb
dec
hlt
dec
push
lret
mov
mov
nop
into
xchg
loopne
sbb
push
xchg
es
movsl
out
gs
fstpl
pop
dec
mov
mov
inc
cli
sbb
mov
xchg
ja
cltd
incl
in
scas
enter
mov
fldt
loope
xor
mov
out
cmpsl
push
mov
imul
inc
lret
mov
mov
test
sti
adc
and
inc
sub
jecxz
jns
mov
jo
pop
ss
mov
adcb
rcll
sub
out
pop
scas
sbb
mov
movsl
mov
adc
xlat
jge
imul
sub
stos
push
sti
xchg
push
adc
es
mov
mov
call
sbb
shrb
pop
ds
lea
fnstenv
es
lahf
bound
lods
ss
mov
pop
push
sub
dec
dec
adc
mov
inc
xchg
aas
repz
cld
in
adc
jns
or
lock
mov
outsl
add
int
sbb
sub
ret
push
ljmp
test
sub
jp
and
psllw
sub
jg
clc
or
adc
jns
lock
mov
sbb
mov
jno
and
xor
xchg
into
and
pop
xchg
lret
gs
cs
iret
mov
push
lret
add
jecxz
push
pop
test
adc
popf
das
scas
lods
cltd
movzbl
jmp
xchg
xchg
push
cld
xlat
sbb
sub
imul
or
addb
inc
mov
frstor
xchg
push
dec
and
lea
mov
pusha
jno
add
les
icebp
mov
xlat
data16
ja
pop
ja
dec
adc
or
cli
iret
xor
xor
jnp
push
and
ss
pop
jnp,pt
jmp
iret
xor
push
mov
dec
mov
sub
add
pop
cltd
in
adc
nop
aaa
incl
shrl
adc
pop
shlb
test
stos
ja
push
in
cltd
mov
loop
push
jg
sub
test
mov
mov
test
loope
aad
pop
pop
cmp
mov
pop
mov
cmpb
dec
fsubs
leave
adc
add
jecxz
xchg
out
fistl
cwtl
in
inc
mov
aaa
inc
cmpl
ret
out
xor
dec
clc
xor
mov
push
sbb
out
mov
cli
pop
xor
mov
mov
dec
mov
mov
jecxz
inc
mov
fs
and
in
outsb
ss
add
mov
mov
loop
and
stos
add
or
cmpsb
jg
xor
es
movsb
mov
sbb
jle
mov
stos
les
nop
rorl
fnstenv
adc
sbb
inc
adc
stos
js
xor
nop
and
das
sub
and
mov
jmp
adc
add
out
lret
sub
test
cwtl
cmp
stos
jle
arpl
inc
and
xor
dec
mov
or
enter
lods
adcl
mov
outsl
ret
pop
movsb
mov
or
into
cmp
shr
inc
mov
mov
cwtl
das
xchg
movsl
pop
ret
out
xchg
dec
jbe
dec
mov
push
or
mov
pop
ds
into
cmp
lods
loope
es
adc
dec
push
rcrb
inc
inc
les
ret
imul
mov
and
lret
adcl
jle
cmp
jo
les
rdpmc
or
ss
inc
add
daa
das
nop
in
push
inc
jge
pop
sbb
xor
out
mov
mov
xchg
jmp
pop
mov
mov
push
int3
insl
adc
fcomi
pop
insb
pusha
rorb
cmp
push
mov
hlt
insl
sub
or
scas
dec
add
add
pop
cld
test
push
cmp
xlat
loope
loope
mov
cmp
mov
or
imul
mov
aaa
out
lds
cld
push
pushf
dec
loop
rorb
repz
fildll
shll
add
sub
sub
cmp
bound
std
and
push
dec
pop
inc
jmp
jne
sub
loope
scas
test
xor
call
adc
dec
pop
xor
lods
xchg
movsl
pop
movsl
imul
and
fdivs
stos
cld
stos
das
jle
aam
dec
mov
or
jle
bound
jmp
ror
lahf
or
je
loope
lods
push
mov
jns
je
ret
arpl
hlt
cwtl
push
or
mov
jns
jns
xchg
push
inc
mov
out
aas
test
sbb
fists
xchg
and
xchg
lahf
cld
sbb
jle
mov
sbb
mov
mov
add
jg
sbb
imul
and
ret
mov
adc
cmp
lret
add
jo
jbe
dec
or
adc
aaa
mov
and
mov
cmp
push
xchg
add
lahf
mov
mov
ss
and
iret
push
jmp
push
adc
nop
nop
cmp
mov
adc
je
jns
jecxz
vmaxps
adcb
in
imul
std
jmp
xor
add
cltd
push
pusha
imul
mov
adcb
out
mov
je
cld
pop
mov
sahf
xchg
lcall
mov
ljmp
out
inc
shr
pushf
sahf
jns
arpl
mov
daa
adc
adc
in
dec
mov
and
xor
scas
mov
dec
sub
bound
aam
outsl
xchg
lock
mov
ret
lods
mov
shrl
mov
pop
lock
lcall
jb
loop
xor
jnp
lahf
xor
xor
inc
mov
aam
push
mov
xchg
aam
cltd
add
rcll
fdivrl
adc
lret
repz
mov
mov
xor
push
dec
jge
mov
push
mov
adc
or
insb
cli
inc
enter
adc
popf
xchg
nop
fwait
scas
inc
imul
test
mov
je
mov
stos
cmc
push
xor
daa
sub
pop
bound
ret
ds
lds
pop
imul
stos
dec
rcrl
adc
pop
sbb
or
aaa
lds
aaa
add
push
push
je
test
xor
outsl
int3
jl
ret
xchg
xchg
xchg
mulb
mov
loopne
ljmp
jp
jmp
out
mov
lea
inc
add
cmc
js
dec
mov
dec
fcmovb
mov
dec
int
push
mov
mov
rcl
dec
loop
inc
int
lods
jne
inc
push
pop
lahf
stos
push
jno
push
jmp
lcall
cmpsl
mov
and
icebp
dec
adc
insb
jno
sub
push
cmp
or
movsb
sarl
stos
mov
cmp
and
les
fs
sub
out
dec
jno
dec
dec
fistl
push
pop
jno
pop
call
popa
cmc
cmp
sub
fadd
jge
out
lea
dec
push
je
mov
cs
jmp
xchg
cmp
fists
and
das
adc
icebp
sub
push
fbld
mov
andb
icebp
loopne
loopne
cmp
add
ret
ljmp
xchg
mov
sub
sub
lahf
xor
mov
mov
pop
addb
jbe
mov
and
mov
ja
pop
dec
cmp
mov
ds
inc
scas
daa
mov
aam
pusha
pushf
pop
loope
cmpsl
add
fiaddl
lock
cmp
mov
push
lret
iret
cmpsb
or
dec
enter
mov
into
mov
das
jns
and
push
inc
mov
test
outsb
pop
lods
pop
adc
gs
xchg
jle
lds
test
notl
mov
xchg
inc
lret
jnp
xchg
and
xor
mov
fldenv
xor
rcrb
faddl
cmp
dec
mov
testl
cli
sub
adc
xchg
js
lods
daa
popa
xchg
mov
mov
xchg
mov
push
test
jle
icebp
roll
mov
loopne
cmp
add
jbe
mov
addb
ret
and
adc
add
test
adc
lods
leave
in
pop
ljmp
sub
hlt
enter
insb
lret
sahf
cmpl
dec
add
jle
test
hlt
lods
sbbl
push
enter
loop
sub
hlt
cmc
hlt
add
outsb
mov
xchg
mov
mov
loop
push
in
fiadds
add
jno
mov
cmp
fistpll
ja
insl
dec
xchg
sbb
cmpsl
sbb
mov
imul
or
hlt
add
jle
sbbb
or
cltd
jae
or
in
or
aam
xchg
adc
sbb
push
jp
addb
inc
mov
cmp
mov
and
repz
sub
dec
fimuls
mov
add
sahf
jge
dec
stos
add
mov
das
daa
ret
sbb
repz
lret
pop
dec
aam
adc
aad
jg
inc
sbb
jl,pt
or
sbbl
lcall
adc
js
ljmp
jecxz
dec
lea
scas
imull
pop
and
dec
mov
lcall
ljmp
movsl
xchg
mov
sbb
mov
test
int
push
sarl
mov
mov
lea
or
mov
leave
es
stos
outsl
mov
shl
adc
mov
ret
fcomps
enter
out
add
cmc
mov
lds
jb
mov
sub
fisubrl
xchg
or
inc
cld
or
cmc
cmpsb
xlat
sar
gs
andb
or
rcrb
cmp
lods
jle
mov
in
sbb
das
pop
pop
int
decb
xlat
imul
test
aas
cs
sbb
in
in
je
vcvtss2sd
xchg
xor
sbb
mov
hlt
mov
or
sub
and
lods
loopne
or
js
cmp
aaa
mov
dec
or
xchg
cmpsl
pop
xor
scas
cmp
sbb
xchg
mov
dec
addr16
xchg
imul
push
mov
mov
scas
sbb
pusha
mov
push
lea
mov
aaa
mov
jnp
test
bound
and
stos
mov
and
mov
int3
mov
lods
pusha
in
lcall
in
ja
scas
xchg
outsb
dec
sbb
push
dec
xchg
jmp
lahf
shrl
movsb
fistps
les
adc
pop
adc
scas
and
es
sub
cs
ret
test
insb
loopne
add
mov
jns
test
leave
sub
pop
pushf
inc
and
fistps
jl
test
add
push
aam
adc
sbb
out
or
pop
dec
mov
dec
dec
cltd
jns
dec
add
and
loopne
pop
imul
popa
rorb
fsubrl
sbb
inc
pushf
and
xor
cmp
xor
jl
or
push
mov
cmpsb
mov
or
xchg
mov
jb
pop
fstpt
push
enter
or
dec
test
outsb
jmp
xor
adc
test
cmpl
out
xchg
sub
or
inc
sub
lds
mov
enter
and
nop
imul
insb
mov
insl
movsl
mov
mov
pop
mov
enter
add
mov
mov
pushf
lahf
mov
fcompl
in
jle
pushf
jne
sub
or
mov
xor
sub
xchg
jle
add
clc
xacquire
xchg
das
push
cmp
pop
push
push
nop
nop
test
out
fdivl
sbb
cmp
inc
pop
shl
daa
outsb
sti
fbstp
xchg
lahf
sub
mov
xor
push
and
jb
and
aad
pusha
ja
xchg
and
xchg
mov
cmpsb
xor
test
ffreep
pop
mov
sub
xlat
mov
xor
ljmp
fs
std
sub
mov
loopne
cmp
mov
or
out
mov
loop
iret
sub
aaa
stos
mov
in
es
mov
in
and
adc
jbe
lods
test
jg
inc
pop
xchg
push
pop
out
mov
push
and
xchg
inc
sub
dec
and
jno
ret
arpl
add
and
sbb
inc
stos
lea
mov
daa
jnp
pushl
cmp
mov
and
sbb
lock
fisubrs
gs
mov
fdivrp
rolb
insb
mov
int3
les
lea
mov
dec
dec
xchg
add
test
xchg
and
addb
sub
loope
or
dec
push
sbb
pop
into
inc
jmp
jge
stos
sub
pushf
or
pop
or
jnp
mov
or
lahf
es
xor
sub
mov
sbb
scas
aam
jl
push
mov
inc
mov
repnz
jns
out
ret
dec
clc
inc
mov
pop
xlat
jle
fiadds
lret
jp
or
je
xor
push
std
cmp
cs
stc
inc
mov
mov
scas
and
or
jno
stos
sbb
lcall
add
cltd
dec
rcr
pop
das
leave
inc
or
sub
add
xchg
sub
inc
test
push
loope
call
and
xchg
into
cmp
js
mov
dec
aaa
sub
sbbl
pusha
and
sub
dec
inc
jns
es
jmp
es
push
sahf
out
shlb
sahf
fisttpll
jg
adc
pop
in
adc
lcall
int
mov
orb
xor
mov
mov
push
fistpll
pop
out
mov
mov
push
imul
in
int
and
call
lods
mov
or
xchg
aaa
idiv
out
sbb
ljmp
xchg
adc
aad
pop
dec
lods
or
in
jbe
jae
aam
nop
jmp
xor
out
and
mov
sbb
jge
inc
xor
ds
sub
or
mov
les
repz
inc
mov
cmp
aaa
mov
aas
inc
lock
arpl
xchg
nop
inc
push
push
pcmpgtd
loopne
jne
scas
daa
cwtl
bound
inc
add
cld
and
lahf
dec
popf
pop
adc
fwait
lcall
scas
ss
adc
xchg
add
add
movsl
pushf
pushf
pop
pop
js
xchg
sub
das
cmp
pop
shrb
pop
sbb
xlat
sbb
stos
ja
bound
xchg
rclb
xchg
movsb
lods
xor
add
stos
xor
add
mov
mov
inc
lcall
sbb
into
pushf
sub
inc
fs
rolb
jge
xchg
sbb
mov
call
push
xlat
cwtl
pop
mov
push
and
mov
cld
pop
xor
xchg
jne
push
in
lret
aad
outsl
hlt
ds
and
or
push
or
or
rcl
mov
ret
je
int3
dec
mov
cli
fimull
lret
or
loopne
rcrl
pop
movsb
sbb
sti
xchg
cmp
arpl
cmp
div
into
pop
out
mov
sbb
push
sbb
imul
arpl
test
clc
adc
insl
jg
xlat
or
shr
mov
xchg
cmp
mov
jo
pop
sbbb
repnz
add
pop
pop
in
push
xchg
fwait
mov
inc
cwtl
inc
outsl
and
loopne
insb
push
imul
or
jecxz
jle
inc
xchg
int3
aas
icebp
mov
pop
rolb
push
xchg
mov
roll
dec
push
out
jp
scas
mov
lock
or
outsl
sub
aam
ret
cmp
xchg
test
push
loope
aaa
out
shrb
aaa
inc
and
clc
stos
iret
cmp
rolb
icebp
and
icebp
push
sbb
cmp
in
inc
xchg
and
sahf
push
and
xlat
cltd
es
stos
pop
mov
mov
jo
cld
scas
cmp
dec
pop
mov
inc
mov
test
popa
mov
mov
rorb
xchg
cmp
jo
fisttpll
dec
inc
ja
and
push
cmp
jnp
das
rorl
ret
adc
std
setnp
dec
mov
or
mov
lods
and
mov
add
mov
int3
xor
int
mov
aad
add
cs
test
decl
je
gs
pop
das
xor
lock
fcmovnu
push
pop
xor
sub
das
aas
push
add
and
loop
stos
jae
sub
mov
xchg
sub
mov
cmp
or
into
or
xor
xchg
popf
rcrb
sti
push
pop
loop
pop
movsb
adc
lods
fs
mov
jb
add
aas
xor
sub
pop
push
into
jno
jbe
inc
jmp
or
int3
add
iret
and
push
test
daa
push
pop
and
xchg
push
xorl
hlt
adc
push
test
cld
sbb
cli
pop
pusha
pusha
or
sub
sub
popf
int3
and
cld
mov
shrb
jns
bound
filds
mov
and
dec
dec
lods
push
inc
and
in
enter
lret
mov
dec
pop
pop
sahf
roll
loop
popa
or
cmpsl
roll
dec
xor
inc
cmpsb
cld
lea
mov
cltd
mov
imul
lods
fwait
rcrl
push
xor
pop
inc
jne
int3
test
pusha
lahf
adc
push
adc
mov
ljmp
add
stos
mov
out
test
int3
ret
jge
jbe
out
add
adc
fcoml
sti
test
int3
leave
clc
lcall
nop
and
pop
rorl
lea
test
lods
lods
daa
rorb
aam
sbb
pop
leave
shl
adc
dec
fisubs
adc
push
or
repz
or
push
adc
int3
mov
push
outsb
jb
cmp
mov
fldenv
aaa
jb
hlt
mov
adc
inc
in
jae
lea
or
pop
clc
pop
jns
call
aam
lahf
or
xor
inc
cmp
jmp
sub
rcrb
data16
xlat
nop
pop
gs
and
loope
sbbl
pop
push
int
cmp
inc
fs
jmp
in
add
pop
cmpsb
sbb
je
outsb
shll
sub
xor
cltd
roll
iret
loopne
and
dec
loop
fmulp
add
dec
xchg
xor
lods
fdivl
mov
out
in
add
in
mov
xor
pop
test
mov
fwait
test
popf
loope
icebp
pop
lret
mov
pop
dec
out
adc
sbb
repnz
insl
adc
mov
pusha
iret
imul
lahf
jnp
cmpsb
data16
pop
dec
in
lahf
dec
aam
js
mov
xchg
pop
xchg
cld
inc
mov
mov
gs
xchg
mov
loopne
das
jp
orb
cwtl
mov
inc
shl
dec
jo
stc
adc
rolb
push
push
jae
leave
ficompl
adc
adc
cmpb
inc
mov
or
add
adc
pop
mov
inc
and
in
add
adcb
pop
flds
shl
pop
out
adc
push
push
mov
dec
add
movsb
sbb
movsb
mov
inc
cli
fucomip
ret
or
xchg
cmpsl
xlat
pop
jnp
div
subl
rorb
movsl
cmp
ficoms
cs
ds
xor
add
mov
pop
mov
imul
cmp
loop
sub
stc
or
movb
ja
and
lea
negl
jmp
jne
mov
fldcw
jnp
stos
pop
mov
sub
in
push
push
jp
pop
jle
out
push
or
fldt
stos
jae
or
push
push
sub
into
clc
mov
add
addr16
scas
ret
lods
shrl
cmp
fiaddl
cmp
push
xchg
loope
fstps
mov
aad
xchg
in
pop
roll
shll
cmpsl
mov
cmp
lahf
lcall
ret
push
mov
lods
das
mov
leave
adc
das
push
push
add
cltd
jl
in
scas
xor
jmp
inc
inc
gs
fadds
mov
and
icebp
cmp
lds
shr
mov
add
popf
or
lods
xor
dec
sbb
out
dec
or
fimull
sbb
sarb
icebp
inc
rolb
xchg
jb
lret
add
ret
sub
xor
lock
mov
in
or
lods
insl
adc
add
rol
inc
add
ss
lea
in
mov
loop
cmpsl
mov
mov
xor
adc
xchg
rolb
lds
and
movb
pop
pop
and
test
enter
bound
das
fists
jae
imul
add
int
clc
mull
jns
aam
scas
fs
sti
andb
dec
pop
nop
jbe
add
inc
jo
stos
test
sub
inc
shrl
shrl
adc
rcll
les
inc
jmp
into
das
jg
leave
call
cwtl
sbb
mov
sbb
loopne
shrb
les
cltd
mov
lods
bound
cmp
rcrb
test
mov
call
jecxz
jmp
inc
sahf
loop
push
inc
mov
mov
or
fcomip
pop
add
and
stc
nop
loope
hlt
call
repz
add
stos
orb
add
popf
jbe
mov
mov
cmpsl
add
or
je
in
stos
jo
movsl
xor
push
in
ljmp
outsb
dec
add
inc
repnz
jge
lret
lods
xchg
xchg
popf
xchg
mov
lret
sti
imul
cmp
imul
sbb
mov
mov
pop
sbb
sub
mov
sbb
cmp
adc
aad
sbb
xchg
loop
cli
mov
jl
adc
xor
mov
add
imul
stos
sahf
xchg
and
out
nopl
adc
inc
xchg
cmc
in
movsb
and
aaa
mov
lea
inc
xchg
sbb
xchg
sbb
add
shll
dec
imul
cli
mov
sbb
or
mov
xor
adc
sbb
push
mov
cmp
and
sub
adc
mov
and
das
fists
cmpsb
push
cmp
loope
ret
rolb
jbe
repnz
xchg
mov
add
push
pop
cmp
std
xchg
pop
inc
orl
pop
or
mov
dec
dec
in
xor
cmpl
adc
es
rclb
std
lahf
mov
xchg
mov
mov
mov
addr16
mov
sbb
jne
out
xor
incl
mov
dec
repz
mov
inc
push
outsb
subl
mov
add
std
pusha
pop
dec
aas
sub
inc
pop
and
test
lret
gs
push
cwtl
fnsave
mov
shr
xor
dec
jp
aad
push
jb
setae
xchg
stos
jp
sub
mov
push
jecxz
mov
imul
push
add
pop
out
push
out
add
lret
pushf
in
std
mov
rclb
addr16
or
push
fyl2xp1
cmpsb
aad
out
call
jge
xchg
mov
bound
fdivl
cmc
out
fucom
cwtl
jbe
jl
mov
mov
sbb
sbb
push
push
inc
andb
xchg
mov
mov
or
xchg
aaa
cmc
cmc
push
jle
stos
lret
cmc
sbb
mov
xchg
adc
push
cmp
test
sbb
stos
stc
pushf
insb
add
pusha
sbbb
jp
xchg
in
imul
loope
lret
cwtl
jge
xchg
push
and
push
aam
push
rorb
pop
and
mov
mov
pop
cmp
test
nop
jg
sbb
roll
push
cltd
mov
test
xchg
bound
pop
jnp
out
pop
sub
sub
or
jp
cs
pushf
in
push
outsl
and
lds
jmp
and
imulb
cmc
pop
dec
mov
mov
cwtl
lea
lahf
inc
add
lods
test
pop
mov
cwtl
push
and
out
inc
fwait
mov
mov
cld
xchg
lea
mov
cmp
mov
adc
xor
sbbl
or
jne
sti
jno
sub
sbb
xor
outsl
cmp
ss
notb
cmp
cmp
mov
nop
fistpl
mov
mov
maxps
leave
sahf
jne
lret
lock
loope
inc
adc
cli
fidivl
decb
and
cmpsl
or
inc
ficompl
repnz
nop
pop
aad
push
cmp
xor
mov
cmp
int3
jge
jo
jle
cmp
ljmp
movsb
aam
aas
ret
ficoms
les
and
dec
or
pop
lock
cli
jae
cmpsb
aam
insl
in
in
pop
cmp
test
sbb
mov
xor
and
cmp
pop
mov
jmp
adc
bound
cmp
ficompl
cmp
addb
cwtl
out
out
adc
mov
icebp
gs
subl
out
add
movsl
xorb
shlb
popa
sbb
dec
out
loopne
push
add
lods
negl
ljmp
xor
incb
sub
xchg
pop
scas
dec
jne
aad
jge
aam
push
das
stc
sub
dec
addb
cmpsb
cmp
sub
push
cmp
js
jno
xor
std
aaa
out
add
xchg
movsb
fsubrl
sbb
into
jo
sbb
test
xchg
out
into
or
aas
ljmp
xor
cmp
pushf
fs
ljmp
xor
iret
fmuls
popa
in
pop
inc
mov
sti
pop
insb
fiadds
enter
rcl
add
mov
xlat
cmp
gs
and
adc
and
or
mov
movlps
push
fidivl
enter
add
adc
cltd
das
in
loop
dec
fsubl
xlat
and
jmp
adc
and
sub
aaa
orb
xor
rcll
pmulhuw
ret
in
pop
cmp
clc
stc
sahf
xor
adc
mov
push
inc
or
mov
scas
scas
test
jle
fisttps
inc
xlat
les
popa
jae,pn
inc
dec
les
in
cmc
dec
stos
push
cmpsl
into
cli
fcoml
js
out
inc
mov
js
pop
mov
out
or
fnsave
add
add
cmc
jno
push
in
jno
xor
push
xchg
mov
jmp
insb
push
xor
push
daa
nop
mov
test
push
loope
daa
add
data16
inc
test
out
xor
pshufw
loope
dec
das
xor
and
dec
mov
andl
scas
dec
xchg
cmpsb
lock
mov
push
cmp
pop
mov
pop
into
sbb
fstl
aaa
ljmp
or
sti
mov
cmpl
adc
xchg
iret
push
in
push
add
sub
aaa
xchg
or
mov
ret
inc
add
xchg
call
pop
inc
subl
dec
and
testl
call
cmpsl
mov
out
xchg
dec
mov
sub
loopne
push
pop
insl
stos
stc
pop
out
divl
mov
and
loopne
inc
xor
pop
cs
ljmp
mov
xor
xchg
lods
ffreep
sbb
xchg
push
jmp
pop
mov
mov
dec
mov
jo
mov
add
stos
sub
and
jmp
push
scas
and
jae
std
inc
xor
cs
fildll
mov
and
add
jg,pt
fsubs
inc
and
mov
lcall
push
sbb
or
stc
mov
mov
nop
movsb
outsb
inc
inc
into
jmp
push
fstpt
adc
adc
fcoms
out
je
test
xor
lods
jne
jnp
mov
adc
mov
and
or
out
nop
cmpl
xor
in
pop
loop
and
cli
cld
shl
mov
xchg
movsb
jle
or
hlt
enter
mov
clc
adc
leave
mov
and
sub
and
in
popl
inc
xor
mov
push
out
cld
jge
mov
repnz
es
fmuls
add
loope
pop
pop
push
adc
pop
out
sbb
cmp
add
mov
movsb
fistl
pop
xchg
scas
leave
jne
insb
clc
adc
fs
sbb
clc
pop
negl
scas
and
cwtl
sbb
je
xor
lods
sbb
pop
std
and
aas
hlt
cli
aam
lods
sbb
dec
aaa
loope
mov
mov
xor
leave
data16
movsl
jp
mov
sub
pop
repz
xlat
sbb
add
add
and
adc
sub
lret
pop
repz
daa
bnd
and
push
push
cwtl
jo
inc
cmp
jecxz
in
das
push
ret
cmc
cmpb
inc
int
das
mov
sbb
sbb
stc
push
cmp
cmpl
scas
mov
outsb
cmp
loope
scas
rcr
adc
xchg
fmull
pusha
xor
mov
mov
jp
lahf
int3
jmp
mov
pop
cmc
adc
sbb
mov
sub
int
dec
cltd
xor
clc
ljmp
iret
outsb
out
jecxz
icebp
adc
push
xchg
jne
insl
dec
and
pop
imul
jae
cmp
mov
or
ds
test
sub
popa
dec
mov
push
ss
jo
cltd
pop
jg
pusha
lods
stc
mov
imul
xchg
aaa
out
out
movsb
movsl
xchg
inc
mov
nop
sub
xchg
pop
push
jno
outsl
fsubrl
in
mov
inc
xor
inc
cs
mov
mov
adcl
mulb
adc
fcmovnb
add
fdivl
in
adc
jecxz
sub
adc
jg
addr16
mov
in
sbb
nop
out
loope
in
std
and
fildll
pushf
sahf
push
push
aam
lahf
mov
or
test
icebp
std
cmp
add
enter
arpl
mov
mov
fucomp
pop
dec
pop
and
icebp
shlb
jp
add
mov
jne
or
inc
in
jecxz
fwait
inc
cs
sarb
xor
repnz
scas
sbb
sub
in
lds
nop
fisubs
push
inc
sub
arpl
cmpsl
mov
repz
jmp
push
cli
test
lcall
mov
repnz
xor
por
movsl
lods
rcl
xor
mov
bound
inc
adc
cmp
and
jno
idivb
and
mov
scas
push
xchg
or
loopne
inc
inc
fprem
mov
loopne
jae
sbb
imul
mov
shll
xchg
sbb
jp
lret
sbb
fists
mov
es
sbb
subl
test
mov
test
mov
push
cmpsl
and
or
lods
stc
icebp
cmpsb
xchg
movsl
stc
add
stos
mov
jae
push
cmp
call
adc
cli
inc
jb
pop
jl
testl
cld
stc
jmp
and
pop
add
push
call
ds
andb
add
loop
pop
add
dec
and
stc
outsl
jnp
mov
popa
mov
dec
xor
out
push
push
aam
nopl
sub
xchg
cltd
arpl
xlat
pop
dec
mov
push
jae
sbb
xchg
cmpsl
add
xchg
and
push
int3
mov
aam
inc
jecxz
test
push
mov
mov
mov
and
xchg
inc
imul
testb
inc
lods
stos
insl
sbb
mov
fadd
frstor
icebp
gs
out
arpl
push
pop
outsl
out
jo
mov
je
fisubl
sub
mov
mov
ficoms
cmp
push
mov
add
mov
xor
ret
or
sub
add
xchg
mov
sbb
inc
pushf
pop
add
lods
nop
gs
cmp
fst
loopne
adc
movsl
cmpsb
adc
insb
pop
or
in
and
cltd
enter
adc
sub
data16
add
ds
jle
fwait
lods
mov
jp
aam
push
repnz
shrl
lret
sbb
dec
inc
test
mov
inc
lds
adc
imul
fists
addb
dec
push
push
dec
shl
pop
pop
and
push
hlt
and
popf
and
arpl
je
lahf
inc
std
fs
xchg
aas
pop
popf
popa
jbe
popa
push
nop
mov
and
jge
push
sbbb
adc
cmc
mov
and
push
and
daa
mov
loopne
inc
jns
aam
adc
fidivrl
pushf
cmp
mov
aad
cmp
sbb
jle
ljmp
hlt
sbb
sti
or
inc
pop
js
sub
pop
in
repnz
js
in
outsl
jg
mov
jno
lock
jmp
js
push
les
jb
out
in
fwait
ljmp
sub
inc
fcomp
mov
lea
test
mov
push
or
dec
ljmp
sub
outsb
fsubl
push
jecxz
in
aas
push
ljmp
aas
bound
cs
cmpsl
jecxz
adc
lret
lods
jl
mov
push
loope
mov
ja
shlb
lods
dec
mov
in
test
fs
sahf
mov
int3
mov
jnp
mov
xchg
iret
push
call
data16
jnp
ret
dec
icebp
leave
push
subb
xor
xor
pop
sbb
mov
mov
scas
andb
rep
jne
mov
orb
cli
rorl
xchg
mull
cmpsl
push
cmc
dec
adc
dec
mov
cmp
divb
push
insb
loopne
inc
pop
imul
dec
push
fcmovu
fdivrl
adc
call
xor
sub
jl
adc
aam
lods
push
mov
sbb
repnz
fdivr
mov
out
xor
popf
imul
mov
xor
push
sub
mov
fwait
xchg
or
testb
call
sub
mov
pop
pop
push
add
loope
lcall
movsl
pop
jp
aam
dec
ja
out
add
inc
mov
scas
cmc
ret
add
repz
and
scas
push
arpl
mov
popa
punpcklbw
mov
jno
push
pop
scas
jbe
push
pushf
sub
xor
xlat
jge
inc
jg
adc
in
test
push
pop
popa
mov
inc
cmp
into
lds
into
bound
add
cmpsb
int3
stos
pusha
pop
cmc
push
stc
test
insb
push
adc
mov
fdivrl
out
add
test
scas
out
fmul
push
cmp
mov
add
push
sub
mov
decb
int
bound
pop
xchg
sbb
mov
mov
inc
add
jae
or
and
add
test
and
int
ffree
xchg
sub
test
jb
lock
aam
jp
sahf
iret
pop
sub
ss
push
iret
pop
fdivrl
xor
mov
in
cli
movsl
mov
cmp
jnp
into
jmp
aad
adc
cmp
shr
cmc
outsl
cld
sbb
mov
test
push
rolb
dec
mov
mov
adc
mov
out
push
and
cmpsb
push
mov
jo
jns
popa
pop
xchg
xchg
jecxz
test
popa
into
mov
leave
shl
jo
icebp
subb
jae
adc
inc
adcb
mov
inc
cltd
lods
pop
mov
push
push
out
cmc
and
push
stos
out
mov
add
mov
and
push
push
test
jge
push
jecxz
icebp
mov
shll
test
xor
out
adc
pop
or
ss
in
push
lods
insb
inc
add
sub
inc
xor
ljmp
adc
inc
and
mov
iret
leave
xor
int
add
orb
jae
lret
ret
ja
mov
mov
or
cmp
sbb
cmp
inc
mov
pop
xchg
clc
es
pop
xor
repnz
mov
dec
out
pop
jb
fcom
jecxz
int3
test
xchg
sbb
popa
xor
ja
out
outsl
and
sub
jp
subb
cmp
mov
jecxz
ret
test
mov
xchg
mov
idivl
jnp
aas
adc
jns
es
insl
dec
fisubl
xchg
sub
mov
push
loopne
cmc
push
dec
fiaddl
pop
ds
arpl
dec
mov
in
lock
std
cmp
test
add
mov
clc
insb
flds
push
sti
lret
push
fisubs
mov
sbb
mov
push
int3
lahf
shlb
and
mov
ret
mov
cmp
ja
sbb
pop
xor
sbb
hlt
or
loope
or
cltd
aaa
adc
shll
shrl
test
or
push
mov
adc
or
mov
push
cmp
mov
and
or
add
add
xchg
jb,pn
sbb
imul
dec
les
mov
mov
seto
sbb
test
xor
ljmp
pop
add
aas
push
jo
xchg
cmp
in
in
cmc
imul
or
sub
int
sub
and
das
xchg
dec
popf
stos
push
js,pt
arpl
dec
or
enter
fimuls
mov
ffreep
fs
std
cli
hlt
cmp
iret
jno
add
in
inc
cld
imul
pop
out
jne
fdivr
in
int3
pusha
mov
aam
lods
push
mov
jmp
cmp
sti
adcb
outsb
mov
sbb
or
pop
and
fisubrs
or
xchg
cmp
gs
jbe
inc
stos
xor
or
push
push
lahf
popa
xchg
sub
cld
xorb
les
pop
loop
mov
pop
ja
pop
insb
jnp
mov
pop
mov
fcoml
lret
mov
adc
and
loope
cmpsl
lea
dec
fnstenv
push
cld
shll
insl
cwtl
pusha
testl
xchg
inc
and
sbb
pop
push
sub
aam
push
stc
adc
out
jle
rol
ljmp
cld
test
ds
daa
ja
outsl
fldt
sub
test
cld
test
fcmovnb
outsl
lret
jae
mov
aad
add
inc
aas
movsl
dec
sub
pushf
je
dec
and
inc
add
subb
aaa
mov
or
mov
mov
jge
mov
fisubl
pushf
test
dec
out
xorl
sub
inc
sub
stc
sub
inc
roll
sub
imul
push
push
adc
or
outsb
sbbl
pop
inc
pusha
movsl
pop
int
cmp
mov
push
outsb
bound
sub
frstor
pop
fimuls
lods
fimuls
pop
mov
in
shl
mov
adc
cmp
es
mov
adc
cltd
sti
pop
stos
ja
mov
xchg
inc
int
mov
xor
imul
adc
scas
scas
jle
sti
leave
mov
out
rolb
lock
jmp
xchg
daa
jmp
jmp
mov
daa
int3
outsl
cmc
bound
sub
pop
inc
pop
je
pop
xchg
adc
jno
push
add
xchg
into
push
cmp
push
imul
pop
std
pushf
scas
lcall
ds
pop
xor
adc
in
jge
les
repz
lahf
out
mov
orl
movsl
mov
lahf
and
hlt
bound
daa
mov
mov
out
mov
xchg
imul
daa
leave
xor
lods
das
lret
mov
cld
nop
pusha
js
dec
int
cmp
jge
mov
test
scas
add
jge
cmp
sbb
aas
pop
pop
sti
cltd
pop
inc
mov
mov
cmp
sub
and
xor
sub
sbbl
adc
push
jle
popl
and
or
addr16
sub
push
jle
jnp
mov
ja
mov
xchg
lcall
mov
xlat
add
inc
xor
mov
jne
sbb
inc
fwait
cmpsb
dec
sti
inc
mov
push
cmc
pop
xchg
movsb
xor
inc
aam
add
and
jnp
in
mov
gs
sbb
shlb
mov
popa
xchg
frstor
pusha
inc
ret
hlt
push
pop
mov
in
ss
jno
lock
fldl
ret
stos
fwait
jnp
aas
lret
xor
test
nop
dec
sub
subb
nop
ds
ja
mov
push
ja
xor
adc
dec
iret
or
push
dec
cmpsb
lock
sbb
mov
and
nop
aas
stos
lcall
pop
ret
xor
scas
inc
lahf
xchg
imul
or
or
in
enter
adc
or
push
cmpsl
mov
in
dec
mov
mov
mov
shl
aam
cmp
loopne
movsl
mov
sbb
sbb
push
push
xchg
lret
xor
pop
or
cmp
fisubrl
lea
mov
popa
pop
push
sbb
ss
bound
lahf
dec
cwtl
nop
push
add
aad
mov
repz
out
adc
rorb
mov
addr16
stos
mov
sbb
ret
and
mov
jno
mov
out
fidivrs
cmp
daa
aas
movsl
pop
mull
inc
dec
lret
push
fsubrl
js
sub
out
dec
nop
cld
mov
psrad
gs
fcmovnbe
mov
ljmp
lea
xor
xchg
pusha
sahf
add
js,pn
js
or
push
lret
inc
cld
ss
cmp
out
adc
ficoml
xor
cltd
and
push
or
ret
repz
add
fsubp
into
mov
sub
jo
add
inc
sarl
pushf
shll
fbld
xchg
jno
push
lods
sub
push
testl
pop
outsb
pop
cld
inc
fstpl
jnp
or
push
sti
cltd
inc
notb
insl
lock
hlt
jno
push
adc
inc
jne
cld
ja
or
hlt
mov
and
les
dec
aas
loop
push
cs
insl
lret
fistpll
in
mov
push
popf
mov
imul
xor
xor
enter
jno
scas
or
add
outsl
mov
adc
ss
mov
rcl
out
inc
sbb
or
jmp
or
xor
or
cwtl
cmp
std
mov
add
cltd
xor
sub
jl
jecxz
bound
cmp
cmc
getsec
mov
nop
aam
cmp
insb
stos
fs
push
popa
popa
rclb
xlat
sarl
call
in
jp
adc
pop
jp
jne
iret
faddl
pop
mov
cmp
hlt
add
test
cs
sbb
imul
sub
or
std
add
adc
pop
in
insl
fucom
mov
std
inc
aam
dec
jns
pop
jmp
sub
add
movsl
push
jg
mov
scas
lret
or
jp
mov
dec
dec
lea
mov
adc
mov
and
or
mov
add
notb
jge
pop
jbe
mov
pushf
push
je
mov
mov
insb
lods
dec
add
imul
cmpsb
jns
fidivrs
dec
fildll
data16
andb
rorl
cltd
test
je
jbe
aam
std
test
enter
inc
lahf
test
arpl
xor
mov
mov
jge
push
dec
mov
daa
mov
jge
roll
xorl
je
outsb
fisttps
adc
xchg
inc
xor
arpl
mov
dec
sub
jecxz
pop
xchg
mov
mov
es
loope
jb
xor
cmp
push
mov
or
enter
out
aas
dec
mov
push
xchg
jbe
pushw
xchg
pushf
add
testl
mov
xchg
icebp
pop
push
or
jbe
push
cmpsb
sub
in
mov
insl
repz
dec
data16
lret
and
xor
mov
inc
sub
mov
aas
les
mov
mov
push
push
push
lods
xchg
xor
mov
test
cmp
int3
or
pop
jae
sub
xor
in
aad
adc
dec
mov
mov
sub
and
xchg
aam
add
pop
movsl
cmpsb
loopne
add
pop
cltd
repz
mov
push
xor
pushf
jnp
daa
bound
jecxz
sarl
adc
iret
sahf
imul
adc
aad
mov
inc
pop
pop
jl
inc
mov
imul
inc
xchg
repz
repnz
push
lcall
test
xchg
mov
js
push
addl
sti
adc
adc
or
ja
subb
mov
stc
loopne
cmp
adc
loop
int
or
mov
sbbl
incb
hlt
frstor
mov
fistpll
int
xchg
das
outsl
push
push
lock
out
popf
repnz
dec
mov
jecxz
inc
mov
icebp
pop
mov
push
ja
mov
and
jmp
and
jl
sbb
ds
mov
in
mov
nop
in
cmp
ficoms
stos
sub
cmp
and
or
pushf
repnz
dec
sarl
cmp
mov
pushaw
nop
sub
in
test
cs
in
push
shrd
xchg
out
es
cmp
cmp
pop
xor
mov
daa
lods
mov
aam
push
sahf
test
out
add
cltd
sbb
pop
cmpsb
mov
popf
jne
sbb
dec
cmp
add
lcall
lods
mov
lods
out
sub
xor
stos
in
ror
pop
rcrb
test
outsb
mov
lcall
cltd
popa
and
or
and
lcall
push
pop
pop
and
lahf
arpl
and
sub
cmp
lods
data16
test
icebp
adc
cli
arpl
in
push
xchg
shrl
aad
mov
pop
gs
add
cmp
negb
or
inc
test
in
xor
fcmovnb
push
ja
mov
dec
mov
pop
daa
mov
gs
add
jmp
test
dec
inc
add
push
fs
stc
inc
pop
sub
in
rcll
repz
mov
stc
or
jnp
pop
fnstenv
and
mov
or
mov
icebp
scas
mov
cld
mov
mov
xor
movsl
jmp
jle
mov
mov
mov
lods
push
push
fistl
pop
xchg
out
mov
xor
idivb
cld
pop
movsb
scas
pop
add
test
in
sub
fisttpll
mov
ret
mov
lock
sti
rcr
push
aas
mov
test
add
jmp
inc
mov
les
in
lock
mov
mov
roll
mov
mov
xor
cli
fisttps
dec
pop
loope
insl
fcomip
cmpb
cmpl
adc
pop
pop
dec
and
xor
mov
and
movb
or
cmp
rorl
jae
jl
push
sbb
xchg
cmp
int3
fistps
enter
dec
lahf
add
lea
dec
xchg
test
mov
push
out
jl
xchg
jmp
sbb
and
cmp
xchg
gs
popa
rcll
maxps
dec
push
shrl
pop
pop
in
in
dec
out
jnp
test
stos
popf
test
or
clc
jp
mov
notb
rcl
or
or
sub
nop
sbb
adc
fists
adc
or
ret
shrl
ja
imul
scas
sbb
push
mov
add
cmp
outsb
aad
and
and
mov
inc
jg
push
es
sbb
xor
test
inc
mov
add
mov
push
pop
popa
xor
pop
fldpi
ja
mov
cmp
jmp
mov
push
int3
jmp
lods
jg
adc
adcl
sub
sbb
enter
dec
popa
add
mov
cmp
shr
dec
out
mov
loope
cmpb
mov
push
jp
adc
dec
or
xchg
xchg
lret
in
xchg
out
dec
bound
xchg
xchg
or
jp
aaa
jecxz
fs
push
xorb
sbbl
push
dec
push
jp
sbb
or
adc
arpl
inc
pop
mov
fmull
test
dec
adc
push
pop
push
pushf
fsubs
jb
mov
cmpsb
cmc
out
call
cmc
push
fcomps
stc
or
stos
or
push
cld
loopne
cs
jae
test
icebp
jno
pop
stc
mov
out
jle
test
movsl
dec
fstl
in
pop
adc
repz
xchg
shrb
cmp
add
bound
pushf
mov
enter
rclb
or
imul
sbb
cmc
push
stos
sub
jae
int3
js
and
and
adc
es
popf
or
lds
mov
dec
ds
mov
or
push
js
lock
mov
fsubrl
xchg
loopne
add
mov
mov
mov
cmp
inc
adc
pop
mov
xor
cwtl
jbe
repnz
push
push
jo
lods
cmp
cmp
add
movsl
roll
movsl
pusha
cmp
add
stc
mov
add
adc
ret
mov
add
pop
adc
data16
lcall
jns
movsb
add
lea
push
mov
repnz
mov
pop
xchg
ja
adc
mov
jmp
nop
xchg
pop
adc
push
mov
scas
push
pop
xor
lock
shlb
mov
int
lea
fdivrs
xor
or
push
inc
les
lock
out
jae
daa
lahf
dec
mov
out
and
cld
push
mov
push
lahf
xor
movsb
push
mov
movsb
testl
sub
sbb
cmp
inc
filds
ret
fsubr
push
xchg
adc
or
xor
ret
mov
imul
shll
test
outsl
sbb
fs
out
jl
rcl
in
dec
mov
stos
test
test
stos
int
and
xor
and
enter
add
add
adc
dec
inc
and
sahf
sub
mov
xchg
jno
inc
push
gs
xor
mov
sub
mov
imul
insl
adc
popa
enter
push
jg
adc
adc
dec
je
nop
gs
add
addr16
mov
inc
fistpll
push
inc
pop
or
out
cmpsb
lea
mov
decb
cmpb
xor
mov
in
fwait
imul
adc
mulb
rorb
sub
dec
mov
pushf
ljmp
cmp
out
add
or
cli
insl
gs
cmpsb
mov
pop
dec
xchg
add
sarl
jo
sub
js
or
shl
push
jg
sub
push
in
test
mov
xorb
ljmp
mov
or
cltd
cmc
subb
push
sub
mov
xor
data16
lcall
std
xchg
push
xor
mov
rol
xor
lea
cltd
dec
or
bnd
pop
lahf
js
aam
push
push
test
jnp
fwait
je
push
loop
mov
enter
xchg
imul
inc
dec
push
testl
or
jp
mov
sub
add
xor
inc
mov
mull
out
xchg
mov
xchg
mov
add
stc
adc
repnz
cmp
in
mov
xchg
and
xor
test
mov
jo
jae
lret
jbe
scas
push
clc
popa
outsb
pop
out
mov
push
aam
add
lea
insl
xor
lea
mov
xor
sbb
lock
xchg
mov
jge
lret
repz
outsb
ss
insl
sub
jns
inc
jg
gs
jg
push
into
dec
add
dec
inc
lds
xor
dec
adc
dec
je
in
push
pop
sub
xchg
in
outsl
inc
shlb
out
bound
aad
arpl
mov
lods
pop
popa
add
lods
and
in
jno
inc
push
data16
dec
les
rorb
mov
cmp
lahf
sbb
fstps
mov
jp
cmpsl
lret
insl
dec
push
imul
adc
and
mov
scas
in
aad
xlat
inc
test
jcxz
das
mov
dec
or
mov
jbe
ret
pop
mov
xor
dec
mov
cmpsl
clc
lret
mov
and
imul
imul
pushf
inc
xchg
pop
jge
sarb
push
push
les
aas
in
je
scas
push
inc
inc
lret
dec
inc
mov
mov
arpl
xchg
push
jbe
dec
clc
fcomip
sub
or
sbb
iret
mov
out
mov
xchg
cmp
mov
fistpl
sbb
call
sub
mov
mov
adc
push
cltd
lret
insb
push
jns
rcrb
cmp
pop
stc
out
out
ret
dec
jno
fwait
jle,pt
scas
or
sbb
xchg
je
add
xchg
mov
loope
aad
xor
js
pusha
adc
jle
daa
inc
loopne
mov
xchg
shll
pop
jb
imul
pop
adc
sbb
cs
cmp
jge
mov
cmp
lahf
dec
or
or
out
pop
in
add
inc
data16
addr16
notb
cli
loopne
fldcw
or
mov
jb
cmp
push
xor
inc
pop
cmp
call
mov
sahf
int
lock
enter
dec
xchg
adc
daa
sbb
std
mov
add
sbb
sbb
mov
gs
mov
iret
and
pop
push
imul
lock
loopne
ret
sub
push
lods
imul
scas
data16
mov
pop
lea
ss
jle
aam
pop
jg
push
pop
lret
in
inc
outsl
popa
filds
outsl
loopne
test
bound
cmpsl
imul
xlat
lea
inc
lahf
push
outsb
sub
jno
and
sbb
mov
cmc
pop
shrl
imul
in
xlat
shrb
mov
sub
mov
les
xor
cmp
cltd
leave
into
mov
xor
add
je
test
test
and
mov
call
sbb
shrb
or
shrl
inc
adc
push
fisttpll
mov
sti
pop
push
cmp
pop
stos
js
mov
negb
testl
and
jnp,pt
inc
push
mov
adc
sub
mov
jno
dec
dec
decl
test
mov
lret
or
push
xor
pushf
pop
rolb
xchg
push
fisubs
lock
mov
xor
add
mov
add
push
push
jns
stos
mov
lds
popa
mov
call
int
jb
jge
add
jae
cwtl
xchg
inc
xchg
ret
sahf
push
sbb
add
dec
stos
mov
loop
aad
push
inc
js
jecxz
insl
add
repnz
adc
cmc
sbb
test
outsl
adc
add
jmp
imul
mov
dec
xchg
adc
xchg
or
out
dec
lods
in
insl
mov
mov
mov
dec
addr16
popa
pop
xor
dec
sbb
push
sub
out
or
stos
add
pop
sub
push
inc
jecxz
or
cmp
add
icebp
xchg
sub
or
daa
pop
lods
jne
lcall
xor
cmp
jns
mov
lea
shlb
stos
xchg
mov
xor
sti
cmp
lahf
test
sbb
leave
lret
pop
sbb
or
cmp
divl
pop
insb
sbb
jecxz
stos
xor
pop
inc
inc
pop
adc
in
adc
js
stos
push
cltd
rorl
loop
or
adc
sbb
test
jnp
cmp
dec
arpl
out
mov
pop
push
ja
cmpsb
rorl
mov
mov
ret
adc
cmp
sub
and
sbb
shlb
fidivs
lock
dec
mov
ret
or
jae
out
sti
mov
inc
icebp
mov
scas
add
and
jbe
incb
es
scas
mov
xor
outsl
ss
aad
mov
loope
repz
js
mov
fdivs
inc
rcrl
stos
cmp
mov
add
in
fadd
jp
mov
lds
adc
jl
je
xchg
fs
cmp
cmc
mov
movsl
lret
jp
arpl
xchg
add
pop
cltd
out
sub
imul
push
and
rorb
sub
sub
int
mov
pop
loopne
cmpsl
mov
icebp
lret
lods
jns
lods
adc
cli
push
push
adc
inc
mov
jle
xor
mov
push
cwtl
aam
mov
jmp
sarb
xchg
sub
test
imul
lods
push
cmp
fs
mov
fdivs
arpl
ja
mov
xor
pop
stc
dec
cmp
xor
mov
push
ds
fneni(8087
cmpsl
jne
lods
ret
mov
or
add
rorl
daa
sbb
aam
mov
loope
jb
outsb
stos
push
ficomps
popf
shlb
jmp
inc
les
pop
or
pop
stos
cmc
add
jg
leave
pop
int
add
int3
jns
mov
jns
lods
lods
call
stos
dec
rcrw
in
lods
and
icebp
dec
test
sbb
inc
lea
ja
sbb
mov
shl
xor
mov
lods
bnd
or
sub
loop
sub
jnp
stos
and
call
sub
test
pop
ja
or
in
dec
inc
mov
jne
dec
insl
push
and
inc
rol
xchg
xor
addr16
out
cs
leave
mov
mov
sbb
or
mov
jg
xchg
aaa
inc
imul
cmp
cltd
add
lods
dec
pushf
insl
cltd
lea
mov
jecxz
int3
sar
and
dec
loop
in
aas
xchg
mov
jae
stos
in
inc
test
sub
sub
or
mov
cltd
das
test
mov
pop
inc
xchg
daa
pop
push
adc
cmpsl
mov
loopne
js
xor
pop
jecxz
xchg
or
iret
popf
mov
inc
pop
add
out
hlt
daa
lret
dec
sub
push
mov
mov
inc
loopne
pushf
xor
cmp
test
jle
jle
push
cmp
test
ss
cmpsb
xchg
js
cmp
dec
mov
or
out
clc
in
ljmp
cmp
xor
sbb
sbb
xchg
jg
push
lods
je
movsl
mov
in
daa
not
sarb
jmp
cmp
mov
mov
push
inc
bnd
add
jno
pop
pusha
das
push
ffreep
shl
popf
ret
in
loop
xchg
mov
sarb
lahf
mov
daa
loopne
inc
mov
xor
aam
or
orb
and
leave
add
pop
and
lods
xchg
bound
add
fsts
push
mov
add
enter
fadds
fimull
mov
and
stos
lds
push
test
aas
add
add
fwait
test
mov
jne
test
mov
aas
add
mov
mov
rcl
les
sub
sbb
mov
mov
push
inc
test
rcll
mov
push
add
or
jmp
mov
xor
xor
jle
fsubrl
inc
sti
add
fwait
sarl
rcll
inc
xchg
add
cmp
cs
xor
mov
or
mull
nop
jnp
jbe
push
mov
add
cmp
push
or
outsl
or
fidivl
int
push
inc
scas
jmp
push
xchg
in
cmpsl
xor
idiv
pop
pop
jb
call
pop
pop
and
gs
clc
xchg
aas
bound
aas
sub
push
out
pop
cmpsb
pop
inc
rcrl
ds
ljmp
cmp
lcall
psrld
inc
idivl
aas
jecxz
dec
lods
push
dec
inc
xchg
xor
fcmovu
xor
xchg
xlat
sarl
sbb
jb
ss
cmpsb
imul
xchg
cmc
ja
filds
leave
jbe
lret
stos
ret
pop
push
in
add
fs
or
imul
sbb
pop
push
popf
lods
inc
lods
in
jge
test
pop
pusha
jbe
dec
lock
fnstenv
shrl
pop
mov
pop
pop
inc
push
xchg
mov
das
shrb
sub
jae
leave
jle
pop
mov
cmp
pop
and
imul
int
and
mov
and
sbb
movsb
clc
mov
jmp
sbb
mov
pop
rorl
jns
lret
vmulss
pop
xor
jns
cmp
je
lods
clc
fildll
sahf
test
fs
out
fistps
popf
je
cmpsb
jbe
jns
imul
in
adc
les
and
mov
cmp
xchg
adc
icebp
push
jle
repnz
push
clc
mov
inc
or
shll
fsubrl
out
push
jne
orb
sbb
xchg
cld
pushf
xchg
ja
mov
clc
or
incl
or
movsl
push
xor
out
push
pop
fwait
dec
adc
push
test
mov
xor
in
mov
xor
xchg
push
jmp
imul
sbbb
xchg
jl
and
jge
push
push
pop
js
out
and
mov
loope
je
and
pop
adc
and
pop
fisttps
add
sub
movsl
mov
ss
sub
sbb
in
mov
divb
mov
test
mov
lods
jo
push
xchg
inc
iret
jo
stos
pop
fdivrl
pusha
or
dec
into
push
cmpsl
cmp
jbe
fwait
cmp
aad
sbb
jge
mov
sub
cwtl
sbb
cwtl
out
mov
pop
cmp
jge
xor
pop
ss
std
in
jnp
stos
fwait
add
mov
xchg
dec
test
sbb
aaa
loope
sbb
lods
insb
pop
lds
push
push
adc
mov
xor
mov
int
scas
sub
out
imul
cmp
fs
jl
repz
and
adc
sub
sbb
push
cmp
jg
test
je
jb
jb
cmpsb
or
lcall
mov
roll
pop
cwtl
lods
inc
mov
loop
mov
push
xchg
loopne
and
inc
mov
test
push
sbb
test
inc
pop
aam
sbb
out
test
push
mov
imul
sub
jle
xchg
mov
xchg
into
lods
lret
cli
inc
fstpl
nop
xor
in
mov
mov
les
sti
xchg
push
dec
xor
and
xchg
ret
sbbl
ds
fs
jbe
xchg
adc
daa
arpl
jecxz
pop
xchg
mov
sub
jl
int3
aas
bound
sbb
jae
xchg
inc
sti
es
imul
lahf
jns
xor
dec
pusha
dec
mov
pop
mov
mov
mov
cld
popf
mov
fldt
jmp
jle
aad
mov
clc
mov
divb
lret
jge
jp
mov
ja
xor
add
inc
in
std
pusha
add
mov
dec
sbb
mov
push
test
mov
pop
jp
inc
sbb
xlat
push
pushf
add
mov
fsubl
push
fadd
dec
ret
add
cmp
mov
loope
pop
enter
cltd
lahf
das
out
pop
adc
inc
or
sub
pop
movsb
int
pop
pop
inc
repnz
xchg
popa
and
shll
mov
sbbb
filds
clc
mov
jg
mov
add
aad
lds
loop
loopne
insb
repnz
insl
insl
push
sbbb
jge
pop
dec
data16
inc
xlat
lea
xor
lods
xor
out
repz
jae
jmp
jmp
xor
out
mov
sub
lahf
mov
pop
push
test
in
and
cmp
cld
imul
ljmp
movsb
push
js
addr16
mov
dec
sahf
lret
mov
jae
or
adc
inc
inc
movsb
and
orb
xchg
fdivrs
fwait
adc
jnp
lock
xlat
repnz
add
nop
cltd
mov
fwait
mov
push
out
jl
js
inc
cmpsb
or
test
rcl
setnp
repnz
cs
xor
or
ret
test
jnp
test
jl
int
insl
shl
lret
mov
sbb
push
rcl
gs
insl
pushl
dec
stc
sete
imul
mov
movsb
sbb
cmp
adc
adc
data16
add
mov
dec
dec
gs
ja
popa
lods
pop
dec
imul
jl
cli
fnstsw
pop
cmp
add
ds
hlt
cmp
rclb
mov
sbb
xchg
stos
fdivs
insb
xchg
mov
mov
or
sub
inc
je
push
mov
out
loope
xor
jno
dec
adc
xchg
in
mov
xchg
inc
inc
leave
sbb
and
lods
leave
lea
ret
movsb
repz
xchg
add
push
cmc
mov
push
in
clc
stos
sbb
popa
aaa
addr16
xchg
popf
cmpsl
add
adc
je
jecxz
test
neg
pop
add
movb
das
sbb
xor
mov
call
lcall
xor
add
sarl
leave
push
and
push
pop
cld
ljmp
adc
mov
ja
inc
sub
out
cmp
dec
jbe
addr16
push
repnz
loopne
scas
test
testb
sub
fldcw
fldenv
test
pop
es
cmpl
push
int3
out
pushf
sub
stos
popl
mov
movsb
or
mov
imul
popa
cmp
inc
in
cmp
jnp
gs
mov
pop
jg
gs
and
test
dec
out
push
mov
sub
adc
pop
inc
sbb
jb
lea
and
int
sub
out
jmp
in
je
faddl
or
or
cli
inc
enter
sbb
cmp
dec
fiadds
fdiv
outsl
mov
jle
aad
repnz
icebp
arpl
out
mov
popa
adc
jns
inc
fimuls
and
mov
xchg
in
dec
jns
xchg
pop
out
add
mov
xchg
mov
inc
cmpsb
daa
dec
lea
inc
jle
pop
xor
in
outsl
lcall
leave
adc
rcrb
add
cli
loop
adc
xchg
bound
pop
jne
out
in
inc
icebp
cmp
icebp
insb
mov
sub
inc
lds
xor
adc
ss
jb
sarl
fcoml
mov
and
sbb
inc
outsb
jl
adc
add
cmp
inc
dec
ja
cmp
inc
jnp
mov
sub
mov
pop
je
pop
loop
push
jo
ja
push
ljmp
je
das
lods
test
test
cmp
inc
cmpsl
adc
add
xlat
cmp
movsl
adc
xor
cli
in
imul
pop
pop
dec
adc
lods
adc
push
add
pop
mov
repnz
repz
pop
inc
adc
out
cltd
dec
ljmp
rclb
loopne
inc
incb
mov
push
rcl
cmp
ja
fstps
or
lea
sbb
movsl
int
shll
ja
cli
mov
cwtl
add
inc
je
jmp
mov
sub
add
aaa
lock
pop
aaa
scas
enter
adc
insb
jns
clc
adc
sbbl
xchg
js
in
add
push
hlt
fistl
mov
dec
push
loope
cmp
pop
cmpsl
mov
mov
stc
xor
lret
fdivs
pop
mov
sub
ret
cmp
and
bound
int
pop
mov
inc
es
lcall
inc
std
add
das
mov
cmc
mov
push
push
xor
lcall
push
fidivl
xor
adc
push
mov
mov
shll
or
xchg
xchg
jmp
jae
mov
movsl
mov
mov
into
arpl
out
shrb
pop
in
xchg
jle
xor
adc
aas
cwtl
cmc
out
mov
aaa
dec
xlat
xchg
adc
scas
dec
mov
fdivr
lahf
mov
xor
or
pop
lods
mov
insb
xor
cmp
inc
cmp
pop
sbb
jle
adc
inc
jo
cli
fbstp
dec
xchg
icebp
xchg
je
movsb
jnp
lods
cld
rorb
dec
call
pop
int
leave
adc
lcall
lahf
pop
jl
aaa
imul
jge
jmp
ds
js
test
ljmp
testl
loopne
jo
cld
in
test
and
xchg
leave
dec
fsubrs
fdivrs
aaa
cwtl
insb
test
popf
inc
test
lock
jae
aaa
xchg
add
and
sub
stos
xchg
dec
dec
andb
mov
mov
adc
mov
jp
aad
call
sbb
pop
sbb
jecxz
lahf
jmp
and
sbb
pop
js
mov
xchg
mov
das
addl
jns
adc
or
aad
shr
in
jb
int3
jno
mov
pop
jne
xchg
int3
outsb
mov
add
adc
mov
mov
negb
fwait
into
sbb
test
lcall
mov
iret
cmp
ja
lret
sbb
sub
arpl
loope
mov
sub
sub
dec
cwtl
xor
lea
cmpsb
hlt
popf
test
sbb
daa
cmp
aaa
adc
fldt
cmp
ja
dec
or
cmp
lret
cmp
popf
hlt
and
adc
out
dec
loop
jle
insl
rorb
sbb
call
sub
int3
enter
cmp
aas
int
sbb
stc
cld
sub
lret
rcrl
shl
rclb
fistl
sbb
and
fldcw
push
push
push
loope
sub
and
mov
push
jge
daa
push
sti
xor
add
je
jb
out
imul
mov
jle
test
cmp
lds
gs
xchg
les
adc
idiv
jge
out
test
sub
mov
mov
push
xchg
xchg
jae
cmp
sub
add
adc
xchg
pop
dec
fucomi
movsl
cmc
stc
fs
and
sbb
xor
jae
lds
imul
push
jns
dec
fs
push
fs
loop
decb
mov
fisttps
or
cld
xchg
out
es
pop
mov
aad
jmp
sub
into
fdivrs
ljmp
stc
fisttpll
push
push
adc
xchg
xchg
or
push
sbb
bound
notb
or
pop
mov
mov
mov
testb
sbb
xchg
addr16
xchg
cmpsb
inc
cwtl
fisttpll
test
and
or
sbb
test
subl
fisubs
pop
lods
aas
sarl
jg
inc
mov
sbb
jns
stc
and
inc
mov
cmp
jp
std
xor
inc
jns
push
loop
jge
lahf
movsb
fdivrp
pop
mov
lahf
loop
xchg
sbb
ficompl
fs
lds
rcr
jecxz
or
dec
rcr
shr
sub
repz
mov
cmp
or
lret
jbe
pop
or
stos
xchg
xchg
push
call
xchg
add
jae
xchg
jl
mov
dec
push
jns
outsl
std
pop
jmp
add
iret
ret
out
sub
xlat
add
xchg
aam
scas
dec
jge
xchg
outsl
fbstp
test
pusha
mov
outsl
mov
cmpsb
shlb
insl
into
lcall
scas
dec
arpl
cmp
ret
mov
in
lock
outsl
sbb
xor
addb
mov
cmp
mov
adc
ret
int
sub
push
xchg
pusha
adcl
stc
in
fs
mov
in
jno
dec
out
shrb
sub
sahf
jnp
push
mov
inc
test
dec
frstor
xchg
inc
cmp
fwait
jbe
pusha
imul
dec
pop
mov
and
jo
daa
mov
push
dec
inc
or
push
les
lods
pop
popf
dec
icebp
jp
push
dec
cltd
lock
clc
cwtl
jge
mov
repnz
mov
dec
stos
mov
imul
mov
ds
mov
xchg
outsl
popa
add
pop
ficompl
test
mov
test
lods
js
hlt
sbb
add
mov
push
stos
xchg
mov
fucom
shlb
inc
cmc
gs
fsubl
push
repnz
and
cs
jnp
inc
inc
and
ficoms
ja
xchg
mov
repz
sarl
ljmp
push
jmp
inc
repz
cmpl
stc
dec
push
incl
pop
ret
inc
sbb
gs
xchg
int3
push
test
in
jb
fistl
cmpsb
inc
or
repnz
insb
xchg
aaa
and
insb
add
pop
mov
lret
xchg
push
jbe
orl
pop
fbstp
pop
jle
jmp
les
repz
mov
cmc
mov
xchg
fcoms
cmovo
cmp
or
repnz
fsubrl
and
call
add
xchg
cmpsb
test
cwtl
push
enter
add
out
stos
inc
pop
aas
xor
hlt
pop
ret
fists
push
lret
lea
push
inc
jb
daa
in
fsubr
pusha
jnp
idivb
nop
lahf
shrb
lods
add
or
sub
fisttpl
out
call
test
fimull
xchg
jg
dec
in
fcmove
and
in
or
out
jg,pt
stc
mov
bound
adc
xchg
jp
mov
pop
xchg
xchg
xor
xorb
inc
pushf
loopne
insl
and
rcrl
in
cltd
mov
cs
cmp
repz
stos
stc
shr
es
pop
cmpsb
cmp
mov
fcmovb
adc
daa
fcompl
jecxz
xor
inc
cwtl
jb
add
ret
push
dec
into
ljmp
jbe
in
xchg
aaa
into
mov
pop
dec
ja
negb
lods
loopew
mov
mov
lods
xchg
inc
jecxz
sbb
lret
arpl
jae
mov
cld
incl
adc
mov
mov
icebp
pop
sbb
sahf
rcll
and
aad
hlt
jge
test
add
mov
cmp
add
ss
arpl
adc
pop
mov
push
aas
js
push
push
jno
fwait
xor
idivb
dec
jns
test
inc
sbb
insl
pop
insl
cwtl
sar
mov
loop
lret
push
cmp
xor
aam
mov
pop
jbe
or
add
xchg
aam
sub
xor
sbb
subl
dec
aaa
sahf
cld
pop
stos
dec
mov
and
test
or
xchg
testl
std
aaa
adc
mov
rclb
ja
or
paddusw
mov
jge
inc
imulb
mov
pop
xchg
addr16
dec
sbb
push
jle
mov
mov
int
xchg
cmp
xchg
add
fiadds
inc
adc
sbb
xchg
enter
mov
pop
xor
test
test
sub
mov
mov
dec
dec
adc
lahf
adc
dec
dec
clc
out
dec
jns
mov
cmp
orl
push
jb
fcomi
mov
movsl
and
lret
add
jmp
mov
mov
pop
pop
cltd
mov
es
xor
inc
insb
cld
icebp
xorl
xchg
movsl
sbb
cmc
jle
je
sbb
aas
daa
mov
or
sub
leave
xchg
into
mov
mov
fcmovnu
jle
hlt
das
mov
or
pop
dec
jae
inc
cmpsl
loopne
sub
push
inc
repnz
aad
mov
icebp
ljmp
ja
inc
and
sub
rorl
or
stos
decb
inc
sbb
adcl
mov
hlt
cmp
jmp
add
dec
cmp
add
inc
ja
adc
and
inc
add
fsubrl
outsb
lods
incb
sbb
pop
fldenv
lock
cwtl
dec
dec
pop
add
lahf
jmp
lods
pop
in
or
jae
or
adc
dec
nop
mov
stc
mov
insl
jne
push
sbb
popa
xchg
jmp
clc
adc
mov
clc
dec
xchg
sbb
ljmp
and
lcall
testb
ficomps
xor
loope
jl
jno
repnz
jmp
fistpl
lds
pop
ret
js
push
push
sbb
push
mov
pop
inc
das
popa
push
push
test
lahf
cld
mov
and
or
xchg
mov
adc
xchg
js
cwtl
subb
mov
shrb
dec
insl
xchg
push
xchg
add
mov
add
jns
js
mov
ljmp
pop
xchg
jecxz
pop
dec
lcall
in
mov
xor
mov
mov
xchg
pop
jae
ja
sbb
cmp
rcrb
cld
xchg
and
shr
adc
test
dec
dec
sbb
pushf
leave
add
jae
cmpsb
add
push
jns
adc
arpl
inc
outsl
push
aaa
mov
mov
inc
mov
clc
sub
leave
cltd
xchg
aam
ss
test
pop
mov
shl
dec
pop
add
dec
pop
ljmp
sub
push
lcall
mov
mov
cmpsb
arpl
loopne
mulb
int3
sub
loopne
mov
adc
jmp
aaa
cmp
xlat
fstpt
cltd
cmpsb
out
jp
das
nop
xchg
dec
lret
sbb
dec
negb
mov
out
xchg
jp
mov
sahf
adc
int3
or
js
jbe
xchg
xchg
xor
mov
iret
sub
sti
lock
and
add
inc
call
ljmp
push
inc
icebp
lea
jb
xor
pushl
and
mov
ja
adc
push
sub
cmp
scas
int3
push
cmp
test
call
and
popf
mov
pop
mov
aam
add
push
scas
pop
mov
out
int3
loopne
std
and
add
mov
scas
repnz
ss
fdecstp
mov
jg
push
imul
into
sbb
lock
insl
faddl
notb
mov
sbb
repz
cwtl
xchg
or
leave
jo
add
cmp
leave
and
dec
dec
xchg
fisubs
dec
cmpsb
lret
cs
movsl
inc
out
aas
mov
cltd
sbb
xchg
test
in
xchg
rorl
xorb
and
add
popf
cmpsl
lahf
push
mov
xor
inc
pop
cwtl
out
mov
inc
or
not
les
sbb
ss
mov
xchg
dec
fwait
xchg
xor
push
movsb
inc
push
adc
cmp
test
inc
pop
sub
mov
outsl
imul
mul
jno
shlb
int
stos
icebp
push
jg
in
pop
push
and
icebp
sub
xchg
decl
pop
jns
push
or
mov
lcall
xor
cmp
fldt
or
jae
jno
popf
dec
insl
cmp
or
sarb
jae
enter
cmp
mov
outsl
pop
ljmp
pop
jae
scas
lret
dec
xchg
lahf
xor
roll
mov
pop
cmp
mov
sti
pusha
mov
fs
int3
rep
sti
daa
pop
inc
icebp
lods
jnp
dec
fdivrl
xchg
xor
scas
and
mov
jne
imul
mov
fdivs
sbb
push
push
lods
lret
fnstsw
es
mov
gs
scas
scas
cmp
and
mov
test
sub
fsts
add
mov
inc
mov
push
xchg
mov
pop
shll
jg
push
add
pop
adcl
popa
cmp
loopne
cwtl
xchg
rol
ljmp
mov
mov
sub
and
daa
inc
outsb
push
mov
xchg
cmpl
mov
nop
cmp
in
repnz
movsl
lods
call
call
dec
js
push
aaa
loopne
push
test
pusha
arpl
cld
inc
call
test
lds
fisubrl
outsb
or
inc
ds
xor
xor
scas
xchg
ret
adc
das
int
imul
je
or
sub
adc
pop
and
xchg
stos
out
test
fidivl
pop
push
jno
jns
imul
sbb
add
and
cmp
divps
out
gs
and
aad
cmp
stos
and
jae
push
fnsave
mov
xchg
adc
sub
dec
mov
sub
shrl
lock
cli
cmp
rcrb
clc
push
mov
fistps
cmp
lock
cmpsb
std
pop
jmp
xchg
push
xlat
clc
add
loope
mov
clc
gs
adc
push
adc
ficoml
bound
mov
mov
cli
pop
cmp
xor
mov
mov
sub
xor
stos
arpl
sub
inc
xor
push
mov
xlat
hlt
rcrb
ss
icebp
cli
xchg
xchg
movsl
outsl
jle
test
loope
push
sahf
rcr
insl
mov
fnsave
aad
ja
push
out
and
push
insb
and
sub
jecxz
dec
push
adc
push
test
mov
repz
sub
imul
xchg
cld
stos
sbb
scas
xor
sbb
std
in
dec
mov
loop
rep
inc
push
es
pusha
orb
push
xchg
loope
adc
mov
popf
inc
mulb
nop
xchg
sub
mov
or
push
cmp
in
insl
sbb
sub
lods
xor
lock
jb
js
idivb
stos
nop
leave
pop
insb
enter
or
je
mov
cmp
mov
xor
push
pusha
xchg
mov
std
cmc
lds
shl
push
or
xor
jo
mov
call
dec
sub
into
mov
fld
adc
inc
cwtl
mov
cmpsb
loope
popa
or
or
jecxz
dec
fdivrl
loope
push
mov
jg
push
bound
and
pop
icebp
test
xchg
xlat
enter
jecxz
cmpsl
jmp
jg
sub
or
xchg
mov
or
lea
in
rorb
nop
fdivs
adc
enter
lret
xor
addr16
fsubs
icebp
ss
adc
testb
inc
scas
sub
leave
add
js
inc
int
mov
in
cmp
adc
inc
fs
lods
add
xor
add
test
shll
and
sti
jns
dec
imul
es
pop
lahf
insb
fxch
mov
inc
sahf
out
stos
popa
pop
or
sub
xchg
cs
fsubl
into
aad
mov
xor
or
sbb
sub
and
mov
sti
enter
jl
lock
insb
xchg
inc
mov
push
popf
incb
jecxz
cs
mov
in
jno
jae
pop
xchg
daa
jb
inc
inc
cld
fcomps
xor
icebp
mov
inc
sub
stos
add
outsl
pop
pop
dec
adc
add
push
mov
insl
cmp
cmp
rep
cmpsb
xchg
test
or
out
mov
or
or
rorl
loope
adc
lret
fiaddl
jno
scas
push
lea
sbb
push
mov
call
and
hlt
call
call
xor
jno
outsl
or
pop
fisttpl
dec
jns
pop
pop
pop
or
add
push
test
fldl
shll
jecxz
push
fs
out
xor
cmp
adc
push
fcomps
dec
es
arpl
pop
dec
loope
fsubrs
nop
pop
pop
cmp
or
and
cmpsl
test
inc
jmp
sub
or
mov
fs
test
xor
imull
sub
mov
mov
jae
jmp
repnz
cwtl
add
or
lcall
cmp
xchg
fwait
jle
jecxz
int
ret
stos
ret
movsb
mov
in
push
or
mov
push
repz
cmp
les
in
and
sub
cmpsb
mov
std
aad
jae
imul
rcrb
insb
mov
adc
sbb
cmp
test
cmc
inc
pop
jge
sub
repz
jnp
lret
mov
lods
subb
lcall
lds
mov
ss
sbb
push
clc
xchg
lods
popa
mov
or
push
enter
icebp
mov
push
push
push
in
stos
loop
dec
and
and
sbb
js
xor
fstps
add
out
lods
inc
dec
jecxz
notl
call
pop
mov
inc
inc
enter
out
cltd
xchg
pop
in
bound
iret
jae
mov
ret
add
sub
cli
sti
fs
jnp
and
sbb
push
decb
mov
popf
push
cli
xor
push
fdivl
sete
test
or
dec
scas
xchg
movsb
loopne
mov
add
out
push
outsl
jmp
jb
fwait
dec
mov
pop
push
mov
shll
xchg
scas
lsl
jecxz
jb
cmp
test
jg
jge
and
cmp
jle
mov
add
insb
lahf
ret
repz
mov
cmc
cs
insl
lcall
jecxz
pop
xchg
inc
int
out
or
pop
xchg
popf
jb
mov
adc
inc
xchg
inc
push
sub
dec
jnp
push
int3
mov
xchg
mov
sbb
pop
mov
sub
int
cmp
loopne
xor
xor
inc
loop
in
movsb
inc
and
test
stos
mov
dec
xchg
mov
mov
xchg
cmp
test
ljmp
cmp
pop
mov
jbe
lea
hlt
sbb
xchg
mov
lahf
sub
fists
pop
fmuls
leave
mov
adc
cmp
inc
gs
stos
stos
lds
divl
push
push
shr
lret
mov
mov
dec
int3
adc
mov
mov
inc
ljmp
jb
aas
xchg
mov
outsb
loopw
fwait
out
mov
mov
add
in
inc
cs
sarb
dec
xchg
loop
mov
stos
xor
mov
cmp
push
xor
dec
cmp
xor
mov
sbb
push
mov
adc
pop
imul
cmp
add
jnp
das
es
frstor
push
adc
jnp
dec
and
xchg
add
lret
addl
push
sets
gs
pop
adc
mov
xchg
repnz
jl
subb
addr16
and
add
nop
std
lcall
lds
gs
sbb
andl
pop
jge
or
repnz
jno
mov
fbld
iret
pop
push
xchg
jl
cmpsb
cmpsl
mov
nop
in
xor
xchg
or
add
xor
cmp
notb
jns
pop
mov
fmuls
pop
adc
push
cmp
add
sbb
fsts
cmp
mov
cld
popf
lret
out
xor
ret
shll
stc
sub
ljmp
lret
addb
cwtl
xor
ja
call
mov
arpl
test
jp
inc
je
and
jl
pmullw
js
xchg
adc
stc
data16
dec
mov
inc
adcb
mov
ds
stos
sti
and
in
inc
sub
fildl
ror
stos
adcb
jae
mov
inc
sbb
xor
sbb
jmp
cmp
pop
andb
test
int
mov
and
mov
fldl
jmp
pop
enter
cmp
gs
aam
imul
adc
dec
icebp
dec
daa
in
add
push
and
stos
mov
ss
or
insl
mov
call
outsl
imul
fsts
dec
xchg
push
jo
mov
add
mov
jnp
cs
jmp
inc
mov
xor
rclb
mov
push
pusha
stos
nop
dec
pop
push
jl
sti
rorl
push
mov
cmpb
adc
leave
movsb
incl
dec
mov
mov
ljmp
sbb
test
out
jle
sub
sub
mov
test
outsb
fs
pop
xchg
sahf
dec
jb
cwtl
in
fwait
inc
xchg
clc
dec
pop
pusha
cmpb
loop
testl
adcb
movsb
cmp
fists
cmp
and
lods
dec
xor
rorl
add
push
mov
xchg
jb
mov
jns
loope
mov
jns
xchg
shll
sub
push
cmp
cmp
mov
ret
insb
xor
mov
rorl
push
fcmovbe
out
gs
push
or
rolb
mov
psadbw
stc
dec
adcb
in
in
inc
sti
gs
jo
jnp
mov
and
stos
jns
jmp
mov
pop
mov
add
or
add
push
add
cmpsl
mov
out
pushf
mov
fsts
aaa
lea
cmp
and
xchg
or
pop
xor
out
ljmp
jnp
jne
sbb
fists
iret
std
jae
and
sub
mulb
adc
aad
orb
shr
popf
sgdtl
sub
mov
cmpb
cmp
jo
cmp
adc
mov
inc
or
lahf
adc
fiaddl
ret
scas
mov
xor
push
int
jle
adc
jne
xchg
sbb
outsb
pop
push
xchg
add
sbb
inc
mov
sbb
mov
in
push
out
jae
leave
xchg
sbb
add
xor
sbb
sub
rcrl
jl
pop
jbe
cmp
mov
aas
rorb
outsb
xchg
jbe
rcr
jnp
xchg
ja
pop
iret
fimuls
mov
dec
cltd
mov
in
cmp
dec
jge
sub
das
push
mov
cltd
sbb
add
int
cmp
push
sub
inc
fsub
jne
push
ret
mov
sahf
push
int
aam
lahf
test
loopne
ljmp
stos
xchg
jae
mov
mov
clc
mov
push
and
cltd
leave
cmpsb
cmc
nop
dec
adc
or
outsl
lods
ss
mov
gs
inc
pop
testb
or
mov
imul
mov
push
or
aas
imul
pop
adc
iret
inc
adc
sbb
adcl
fimull
hlt
lea
test
and
mov
jge
imul
imul
inc
jns
jbe
test
pop
fimull
inc
xchg
xor
jle
out
mov
and
in
fldt
sub
xchg
pop
mov
mov
ds
movaps
mov
xchg
cli
adc
jnp
mov
jmp
clc
pop
clc
stos
mov
mov
fwait
aad
push
and
loope
and
mov
xchg
mov
gs
lcall
mov
fucomp
cli
sub
adc
leave
outsb
add
dec
mov
cmpsl
sbb
movsb
js
xor
add
adc
sbb
add
test
mov
ret
xlat
push
pop
js
xor
push
cmp
pop
jmp
cmpl
xchg
pop
mov
push
mov
cmpb
movl
rcl
popw
jne
mov
sub
imul
mov
ljmp
sub
xchg
or
or
mov
ljmp
dec
sahf
mov
lret
mov
cld
jne
not
xor
cmp
sbb
sub
cmpsb
out
je
pop
aaa
jg
scas
fistl
addr16
jmp
cmp
decl
js
leave
mov
push
pmulhuw
inc
jp
xor
lahf
test
clc
in
mov
ds
inc
out
sahf
and
fwait
test
jb
mov
sub
sub
xchg
mov
pop
je
or
arpl
jns
push
cmp
sub
jmp
mov
pop
repz
sbb
cmpsb
xor
daa
aam
ret
jno
lcall
sub
adc
push
or
cmpsb
inc
mov
xor
int
pop
fcmovne
lahf
int3
mov
insl
mov
push
fprem1
iret
inc
test
ljmp
sub
fnstcw
mov
movsb
sbb
mov
add
js
xlat
fstpt
aas
sbb
dec
xor
lret
loope
xchg
loop
cmp
out
xchg
test
or
jne
es
inc
and
rorb
lods
or
xor
mov
mov
in
xchg
hlt
dec
lcall
lcall
addr16
rcrb
popa
mov
adc
sbb
pop
push
ret
sub
push
push
dec
sahf
xchg
int3
or
push
rclb
fiadds
xchg
vcomiss
dec
adc
xor
cltd
sahf
sbb
or
sub
loope
nop
push
mov
adc
mov
push
mov
sbb
mov
cmpsl
pop
push
movsl
pop
jmp
and
inc
mov
inc
add
jle
lahf
push
xchg
fsubl
nop
shll
data16
outsl
push
jl
les
dec
sbb
fbld
xor
shll
push
jl
fwait
daa
jno
les
and
and
insl
jle
movsl
flds
rcr
pushf
xchg
lcall
lds
mov
rolb
xchg
scas
shll
add
jbe
scas
inc
daa
xchg
inc
sub
ret
imul
pop
jmp
sarb
xchg
fs
outsl
int3
repnz
ret
mov
fisubrs
jae
sbb
std
xor
dec
mov
xor
aam
insb
fnstsw
jg
mov
jge
leave
pop
hlt
jns
mov
sti
sbb
loope
xchg
xchg
sbb
enter
sub
inc
aad
sbb
call
je
hlt
xor
adc
fs
or
repnz
push
add
sbb
nop
push
in
mov
addr16
gs
sub
mov
pop
pop
or
imul
lods
fdivrs
sub
ret
sub
mov
or
outsl
adc
in
enter
inc
mov
iret
jbe
into
imul
mov
imul
in
fdivr
orl
scas
int
and
test
fwait
pop
outsl
fstl
dec
push
fisttpll
movsb
int3
jecxz
pop
mov
out
fistps
pop
es
add
insl
mov
pop
adc
nop
ret
jae
mov
xchg
repnz
ja
add
or
add
ret
adcl
fistpl
jecxz
test
pop
inc
jmp
inc
and
sub
fnsave
jb
fcoms
and
adc
fst
jo
aas
pop
mov
in
dec
xor
cld
or
inc
push
mov
mov
dec
loop
rorb
pop
inc
pop
sub
icebp
int3
mov
pop
out
nop
push
out
dec
mov
nop
adc
pop
xchg
jp
lret
cmp
pop
shlb
mov
xchg
mov
inc
fisttpll
and
xchg
ret
lods
or
mov
jl
jp
dec
push
pop
pop
in
sub
adc
lds
jb
je
dec
push
sbb
jge
dec
test
jae
pop
ljmp
fdiv
fistl
xor
fwait
cmc
xor
cmpsl
incl
imulb
inc
or
out
pop
ret
inc
sahf
cs
pop
mov
out
bound
daa
aaa
mov
xchg
sbb
out
insb
xlat
xor
es
into
rolb
rclb
ret
aad
mov
sub
sar
lods
in
filds
insl
xlat
mov
fdiv
push
scas
cmp
adc
sub
enter
jecxz
xchg
pop
inc
fdivrs
dec
inc
sbb
jns
cmp
rcr
pop
cmp
mov
imul
fidivrl
mov
movsl
jmp
push
test
lds
sub
test
enter
addr16
mov
test
mov
icebp
dec
or
notb
mov
in
jp
xchg
mov
cwtl
add
out
mov
aam
imull
xor
mov
pusha
inc
xchg
outsb
push
fsubrp
mov
aas
aaa
xchg
or
push
dec
mov
jmp
mov
leave
mov
out
add
fsts
in
lret
push
mov
out
es
mov
cmpsl
push
movsb
cmp
lret
inc
negb
scas
loop
in
fdivrp
fdivrs
push
pop
jge
add
lea
lods
add
and
cltd
ja
mov
movsb
jbe
js
mov
xchg
inc
or
push
ja
sbb
push
inc
in
rcr
xchg
xor
sbb
jns
xchg
dec
cmp
ret
sub
dec
es
mov
fs
mov
cltd
scas
jmp
add
test
clc
fwait
add
daa
mov
xor
cmp
rol
mov
mov
dec
pop
js
jmp
jecxz
cltd
sbb
push
cmp
dec
lds
int
repz
subl
lret
add
hlt
mov
pop
int3
out
shrb
es
mov
and
into
lcall
add
adc
out
sti
lods
fwait
roll
jnp
scas
lods
stc
outsl
mov
imul
cmc
cmp
xchg
lods
lods
inc
xchg
sub
outsb
lea
inc
jbe
data16
fwait
out
jg
mull
les
mov
jmp
adc
imul
pop
sbb
sahf
inc
dec
inc
and
or
adc
mov
loop
push
inc
mov
divl
push
sbb
push
orl
aaa
jg
loop
jb
push
cmp
xchg
jnp
fdivr
mov
push
mov
scas
mov
cmp
xchg
xor
sub
inc
scas
jae,pn
mov
pop
dec
push
hlt
pop
pop
inc
gs
xchg
fidivs
mov
divb
pop
repnz
xchg
loope
and
and
push
dec
mov
inc
jmp
lods
cwtl
adc
mov
repnz
js
out
cli
call
adc
out
and
int
inc
and
popa
enter
stc
xchg
mov
add
outsb
cmp
add
lock
pushf
js
mov
iret
cltd
test
out
push
insl
sub
push
push
xchg
pop
pushf
and
mov
mov
xor
aas
dec
inc
daa
out
or
test
pop
nop
sub
push
in
sbb
sarb
and
arpl
sbb
jae
push
invd
imul
and
add
es
cmpl
xor
push
negl
jmp
rorb
arpl
cmp
add
mov
in
push
sub
xor
inc
add
std
pop
dec
xor
add
add
lcall
stos
sbb
push
clc
inc
or
jecxz
pusha
sbb
addl
ja
rclb
in
push
cmp
xchg
add
lods
scas
add
testl
scas
cmp
movsl
adc
jge
pop
sbb
xchg
inc
push
loop
lea
stc
cltd
pushl
push
loopne
mov
push
mov
je
outsb
arpl
sahf
lcall
or
push
mov
mov
jge
cmp
lods
fcomi
out
scas
aas
enter
test
mov
cmpsl
push
insb
inc
inc
push
and
fsts
ja
inc
jo
lods
adc
popf
dec
add
pop
fisttpll
sbb
arpl
add
shl
rclb
sub
stc
mov
push
sahf
jle
loope
mulb
scas
jp
sbb
adc
push
sbb
mov
insl
add
cmp
pop
bound
cld
and
in
fwait
pop
or
or
rcrb
stc
pop
xchg
push
ljmp
add
cs
popl
outsl
gs
dec
bound
in
sahf
lcall
inc
rorl
pop
xchg
mov
cld
pop
jae
fstpt
and
and
sbbl
pop
cld
lahf
into
inc
xchg
aas
pusha
rcrl
xchg
aaa
icebp
test
mov
jp
out
mov
mov
inc
xor
push
bound
mov
enter
mov
rorb
sub
clc
repz
add
aad
mov
mov
adcb
js
mov
jl
xchg
mov
test
out
out
xor
jbe
dec
pop
int
mov
out
test
loop
mov
cmp
into
insl
or
cs
xchg
outsl
dec
dec
jl
int
sbb
popa
push
stos
jno
and
pusha
inc
cltd
push
cmc
cld
or
xchg
out
dec
mov
fisubrl
pop
xor
jo
jno
adc
push
test
syscall
je
clc
shll
add
sub
pop
push
aad
sub
adc
es
imul
xor
pop
pop
shll
jne
arpl
addr16
fnstenv
icebp
shll
scas
lods
cmp
cli
mov
scas
cmp
or
xor
or
sub
or
pop
mov
mov
dec
hlt
ljmp
mov
cltd
sub
mov
add
popa
outsl
clc
mov
mov
ds
loopne
and
shll
mov
pop
and
xlat
add
dec
fadds
iret
loopne
cmp
repnz
sub
sbb
push
inc
pop
sbb
fsubrs
outsb
pop
jae
and
adc
into
inc
push
outsl
fdivrs
test
xlat
movsb
mov
stos
add
rcrl
mov
mov
fists
mov
lret
into
mov
insb
fcompl
sti
inc
rorl
shr
xchg
mov
test
stos
dec
inc
adc
sahf
inc
dec
xor
lret
inc
dec
cwtl
pusha
mov
and
sub
scas
ja
inc
out
cwtl
pusha
push
shl
cmp
sahf
inc
pop
iret
cltd
push
daa
xchg
test
filds
sub
cmp
sahf
or
int
add
jno
push
cmp
or
repz
inc
pop
mov
shlb
push
ds
in
sbb
cmpsb
dec
jne
inc
mov
inc
mov
cmc
inc
fisttps
dec
inc
jae
ss
mov
iret
and
cmp
xor
pop
rorb
pop
icebp
dec
rclb
js
xor
das
out
lcall
aad
ss
push
push
popf
les
ja
jb
mov
out
lcall
lods
insl
aaa
shll
enter
sbb
lock
push
scas
imul
and
xchg
sub
jae
lods
nop
daa
xorb
mov
xor
scas
enter
dec
inc
cmc
scas
push
sbbl
push
cs
bound
xchg
ja
inc
and
fisttpll
mov
dec
in
xchg
xor
adc
out
in
mov
mov
decl
xor
fistpll
cld
push
ljmp
cli
sbb
stos
pop
jg
cltd
lret
mov
mov
adc
stos
inc
dec
xor
xor
xor
mov
xor
inc
cs
std
repz
test
pop
pushf
shll
ds
fdivr
mov
jmp
pop
test
outsl
push
sub
arpl
mov
mov
aad
sub
lcall
cmp
leave
xor
in
je
lock
cwtl
rcrb
in
xchg
cmp
xor
ds
sahf
lds
xor
jno
repz
ds
inc
push
xor
or
or
adcb
aam
aas
cwtl
push
fst
cs
test
dec
adc
ret
xor
jnp
inc
dec
mov
test
pop
jecxz
sub
xorl
pop
sub
adc
sbb
inc
fidivl
je
xor
mov
stos
xor
jp
sbb
ret
dec
es
mov
mov
push
adc
fwait
lods
pushf
lret
mov
mov
sub
mov
pushf
add
or
cmc
shrb
and
test
div
scas
dec
cld
daa
test
inc
fwait
out
popa
sbb
dec
inc
loope
lock
xchg
xchg
outsb
divb
jnp
icebp
mov
or
insb
rcr
xchg
jb
aam
ret
dec
xor
xor
ds
sbb
mov
xchg
cmp
ret
gs
jo
pop
cmpsl
dec
push
stos
ret
dec
mov
inc
push
xor
insb
pusha
mov
test
mov
imul
std
loope
out
pop
mov
add
fcmovnbe
sbb
mov
pop
xorb
bound
lods
dec
inc
iret
sbb
add
in
jmp
or
or
lock
sahf
jo
sar
pop
push
in
dec
xchg
shlb
dec
and
dec
subb
fcoms
leave
cmp
inc
cmp
push
jo
xchg
cmp
outsb
in
cmp
movsl
and
int
and
insl
mov
xlat
pop
pop
cmp
fcoms
in
jl
jmp
adc
movsb
mov
jnp
cmp
jl
mov
and
add
dec
mov
cli
pop
xchg
outsl
ror
xchg
out
aam
mov
in
sub
lds
leave
rorb
add
or
mov
test
test
arpl
jle
and
fmull
push
push
jae
add
daa
sbb
mov
adcl
mov
and
sarb
push
add
pop
jae
rorl
jge
addb
push
ljmp
xchg
inc
or
mov
jmp
sarl
sar
insb
adc
outsl
sbbb
imul
pop
ss
das
jmp
mov
add
or
stos
pop
or
jbe
outsb
insl
inc
pop
xlat
push
cmp
jbe
pop
es
in
jb
jnp
ret
mov
cmpsb
leave
inc
je
and
mov
add
negb
adc
mov
dec
lret
popf
insb
cmc
icebp
test
scas
xchg
ja
mov
scas
mov
cs
or
imul
fists
data16
out
mov
jle
sub
and
mov
xchg
lea
clc
cmp
push
rcrl
in
movsl
adc
cmp
aas
shr
icebp
les
or
pusha
ficompl
popf
jo
push
adc
push
mov
clc
add
inc
cmp
test
imul
adc
insl
js
loop
movsl
sahf
pusha
cmova
jns
cmpsl
lods
ds
xlat
outsl
inc
incb
lods
mov
inc
daa
xchg
ljmp
test
cwtl
ja
push
aaa
inc
fdivr
pushf
clc
nop
inc
pop
adc
fistpl
mov
pushf
sahf
or
cmp
cli
adc
arpl
xlat
pusha
arpl
sub
mov
inc
adc
and
dec
xlat
jns
cld
stos
add
sbb
aas
stos
iret
cmp
cmp
mov
push
mov
cmp
inc
and
xchg
cmp
dec
repnz
pop
aas
leave
fwait
pop
ret
pop
xchg
in
bswap
cmp
mov
fucompp
cli
and
ss
aam
mov
in
xchg
lahf
adc
add
out
lea
or
bound
mov
dec
out
aad
add
nop
bound
je
push
add
in
ljmp
out
or
mov
xchg
je
test
sub
xor
sbb
int
int3
xchg
mov
jo
xor
in
into
dec
xor
xor
adc
push
test
leave
lods
nop
inc
adc
add
dec
shll
roll
push
hlt
jecxz
pop
jno
enter
dec
pop
inc
hlt
sub
xor
mov
sbb
test
sub
sbb
jo
aaa
test
sarl
mov
or
aas
repz
sub
jbe
xchg
imul
and
mov
and
mov
mov
or
int
sbb
lret
aaa
cmp
mov
cs
fs
adc
lea
movsb
mov
scas
icebp
cmp
push
add
jp
lcall
mov
lcall
adc
cltd
sub
inc
mov
stos
rolb
xchg
or
sub
lock
push
adcb
repz
ljmp
xchg
mov
or
sbb
pop
push
aad
xchg
sbb
xor
mov
stos
pop
push
jns
push
and
ljmp
test
sbb
loopne
pop
xor
mov
adc
pushf
out
jmp
pushf
push
mov
mov
cmpsb
jmp
fdivrl
pusha
add
mov
fcoms
fsubs
push
dec
push
add
mov
fsubrp
jae
inc
pop
jnp
cmp
loope
push
es
mov
add
ret
sbb
mov
mov
das
and
out
pop
dec
push
and
add
jmp
mov
mov
sub
int
iret
pop
inc
scas
pop
push
and
scas
jno
cmp
jo
xchg
fldcw
jne
and
mov
in
scas
xor
cmp
xchg
and
addr16
cmp
push
in
fsubrs
pop
and
loopne
pop
cltd
jo
sbb
add
in
scas
mov
lods
xlat
cltd
or
cltd
cwtl
or
adc
push
shll
inc
scas
mov
mov
jmp
or
pop
lods
mov
mov
imul
pop
push
lods
mov
jg
ljmp
sti
mov
fidivs
hlt
dec
cmpl
jmp
xor
xor
sub
push
inc
sub
addl
push
pop
clc
lds
pop
inc
scas
and
insb
xchg
lods
orl
fbld
add
xchg
push
movsb
mull
jp
inc
mov
in
pop
shlb
pop
adc
es
aas
stos
ficompl
addr16
mov
mov
rclb
or
dec
adc
jnp
iret
daa
jg
mov
and
mov
test
mov
in
stc
jg
cmp
movsb
sbb
sbb
xorps
pop
and
xchg
negl
lret
repz
mov
loope
xchg
cwtl
adc
adc
push
popf
outsb
fistpll
xlat
add
mov
fs
shll
mov
inc
push
adc
sahf
or
mov
aas
out
stos
and
mov
pop
fcomi
in
addr16
sbb
sbb
pop
aad
and
lret
call
dec
pop
pop
test
xor
push
movsb
ja
inc
mov
aaa
mov
mov
repnz
pop
cmp
and
loopne
outsl
aam
ljmp
imulb
ret
sub
mov
inc
pushaw
inc
cmpsb
clc
inc
iret
out
inc
shld
mov
sub
mov
adc
dec
push
loop
fs
and
jne
pop
das
pop
loope
scas
sub
push
cltd
pop
stos
mov
inc
setge
scas
ret
testb
cld
jb
sbb
out
jecxz
mov
or
fdivrs
mov
jmp
stc
inc
jg
insb
fs
xor
xchg
mov
and
mov
cmp
in
jge
and
ret
shrl
das
aam
sub
sti
inc
idivl
in
adc
imul
mov
lret
mov
js
dec
scas
jecxz,pn
dec
mov
pushf
xor
jmp
adc
jbe
sbb
mov
lcall
imul
jb
into
lock
mov
push
dec
mov
xchg
sub
or
cwtl
or
rorb
popa
push
xchg
sahf
jl
shll
clc
xor
add
jno
outsl
jecxz
repnz
push
push
sub
es
in
jge
movl
mov
push
xorl
mov
add
out
mov
xlat
fimuls
jbe
fdivrp
and
pop
jne
jo
push
scas
cmp
push
dec
cmpsl
lret
mov
jle
sbb
add
adc
dec
xor
mov
repnz
sub
mov
pop
out
xlat
inc
ds
inc
xor
jbe
inc
cltd
aaa
int
mov
pop
lret
xor
add
dec
into
mov
jge
dec
push
dec
pop
ficompl
jne
inc
push
jae
pop
ss
pop
sub
test
ja
gs
xor
mov
into
sbb
sbbl
fs
xchg
gs
and
and
lcall
sbb
mov
scas
stos
in
addl
sbb
jae
or
jo
loopne
scas
jo
ljmp
and
push
das
xchg
mov
stos
mov
popa
xchg
mov
nop
adc
mov
in
shll
cmp
pop
pusha
mov
fsts
xor
lret
adc
pop
ss
arpl
dec
sub
push
mov
xchg
adc
fimuls
push
pop
mov
daa
push
jecxz
dec
fs
pusha
std
add
or
rep
les
adc
call
mov
test
mov
iret
add
xchg
xlat
dec
fwait
sub
jb
mov
xorb
test
loope
loope
adc
sub
imul
xchg
les
mov
std
movsl
jge
insl
fucom
lds
int
mov
mov
push
pop
jb
pusha
in
call
outsl
out
pushf
add
sub
and
shll
sbb
sbb
adc
sbb
push
jp
mov
mov
sbb
jo
adcl
xchg
fsub
xchg
enter
dec
xor
mov
dec
inc
push
xor
dec
push
mov
push
icebp
xor
test
xchg
pop
test
add
adc
mov
mov
jp
mov
movsl
mov
ss
cwtl
mov
shlb
push
jmp
daa
mov
sub
pop
rcr
rcrl
aas
stos
mov
fucomp
mov
adc
mov
sbb
cmp
mov
jns
dec
mov
jne
bound
icebp
or
or
nop
dec
adc
xor
shr
js
xchg
imul
cmp
mov
sar
fcmovbe
stos
lods
lret
subl
dec
and
mov
aad
add
and
pushf
aas
xchg
in
and
imul
jno
mov
rcrb
in
jmp
enter
ss
lea
jbe
push
lahf
imul
insb
test
jle
jo
movsb
sbb
popa
lock
push
add
fildll
jl
mov
jecxz
fcoml
or
pop
jne
hlt
dec
mov
fs
jge
xor
and
and
cli
jmp
mov
mov
mov
mov
or
sbb
sub
movsb
int3
stc
pop
cmp
or
push
popa
and
sub
or
and
daa
test
mov
push
jnp
dec
sbb
jae
xor
cmc
ret
cmp
fpatan
pop
jle
add
mov
and
mov
mov
mov
jb
subb
cli
and
and
stc
fs
stc
sahf
and
ds
rolb
xor
mov
in
test
insb
popf
ret
cli
cmp
adc
stc
ffree
push
push
cmp
shrl
dec
push
sti
dec
and
inc
fwait
xchg
loope
pop
push
xlat
or
push
aaa
cmp
xchg
pop
pop
test
lea
bound
fistpl
pushf
movsl
jmp
xlat
loope
push
fiaddl
mov
cld
arpl
gs
dec
and
sahf
dec
popf
sbb
sbb
dec
and
cld
ljmp
xchg
shlb
je
data16
and
in
sbb
clc
xchg
or
lahf
mov
dec
xchg
mov
fmull
call
roll
fwait
arpl
test
xchg
add
call
test
jb
and
fisttps
xor
das
mov
imul
cmp
mov
loope
inc
jae
mov
into
xor
sbb
sub
mov
sahf
add
mov
jbe
jns
aam
push
inc
cld
fildl
outsb
gs
insl
inc
dec
cmp
cmpsl
mov
clc
pop
fs
xlat
mov
pop
arpl
out
push
and
sbb
or
leave
aam
cmpb
add
add
js
xor
jno
leave
pop
out
and
adc
loopne
xchg
nop
xchg
add
sbb
dec
imul
jo
push
test
fwait
pop
enter
into
lods
xchg
fmuls
aaa
mov
sub
mov
loopne
xchg
sub
ror
xor
pop
dec
arpl
xor
dec
jae
pop
inc
out
mov
scas
xlat
lds
inc
push
jp
loopne
scas
mov
leave
notb
adc
out
adc
and
pop
idivl
mov
push
pop
stc
jle
insl
rcll
popf
subl
mov
clc
xor
fld
ja
xor
data16
pusha
xchg
xor
lea
or
xchg
enter
sub
outsb
mov
or
cmp
mov
repz
hlt
scas
jns
sbb
out
mov
inc
insl
je
arpl
mov
dec
push
fbstp
or
jmp
cmc
je
lcall
aas
lret
mov
fwait
insl
les
xchg
outsb
hlt
and
les
inc
xchg
push
sbb
shr
out
int3
in
out
call
push
enter
push
dec
in
mov
pushf
mov
lret
idiv
divb
test
sbb
and
dec
inc
mov
mov
aas
movsl
inc
leave
mov
in
mov
dec
inc
dec
lahf
jnp
mov
aas
mov
add
lods
xor
jo
jecxz
mov
pop
lret
and
jmp
fstpl
out
jns
pop
and
xor
xchg
jl,pt
int
dec
push
sbb
in
dec
push
fidivs
imul
and
inc
push
neg
pop
out
hlt
fdivs
sub
pop
call
and
subb
or
and
xlat
jecxz
pop
pop
aad
outsb
mov
mov
movsb
xor
and
repnz
inc
addr16
or
movsl
lret
push
xlat
sbb
in
inc
aad
push
sbb
jl
mov
sub
mov
imul
imul
fistl
mov
cltd
filds
push
jle
shr
mov
push
test
or
adc
shrb
and
pop
cltd
ret
decb
imul
frstor
stos
mov
jmp
outsb
pop
sbb
xchg
stc
push
pop
sbb
cs
jge
cwtl
rolb
inc
adc
jbe
iret
stos
cli
fdiv
fdivrl
pop
jbe
cli
mov
push
test
cwtl
enter
outsl
test
xchg
rcll
pop
aam
xchg
add
aas
mov
clc
ds
cltd
adc
push
mov
jmp
dec
mov
inc
push
cs
push
test
lahf
hlt
aaa
es
stc
xchg
jge
or
dec
xchg
push
pusha
dec
movsl
daa
sbbl
call
ds
xchg
leave
or
mov
scas
lcall
movsl
sub
jb,pn
ja
lret
stos
adc
les
ds
mov
shll
shrb
cmpb
sub
iret
sub
pusha
movsb
call
loope
shrb
sub
or
inc
rorb
mov
insb
outsl
insl
idivb
ljmp
out
in
cld
xchg
stc
int
and
movsl
sub
aaa
fistpl
pop
cwtl
nop
stc
imull
cmc
insl
pop
add
in
dec
pop
add
mov
fildll
into
ret
js
push
adc
dec
push
hlt
jne
add
mov
lea
mov
adc
mov
dec
add
fsts
jl
mov
jae
in
cld
jns
jp
add
xor
lret
sub
fwait
xor
cli
push
mov
test
ds
mov
repz
add
xchg
gs
popf
enter
enter
pop
inc
adc
or
jg
and
jns
jp
mov
adc
xchg
mov
jp
xchg
sub
add
loop
sbb
in
pusha
cmp
stc
movsb
cmc
adc
les
addb
pop
xor
orl
mov
rclb
jg
jnp
lea
sbb
shld
mov
les
cmp
ss
jp
repnz
test
jno
dec
inc
std
mov
sti
jae
test
bound
cmc
jl
inc
frstor
and
push
in
sarb
mov
inc
jmp
in
rcrl
pop
pop
and
movsb
das
add
fcomps
adc
sahf
add
ret
mov
xchg
cmp
xchg
js
mov
repnz
repz
jecxz
enter
les
leave
not
aas
insb
mov
les
mov
gs
cli
adc
sbb
push
dec
or
xlat
sbb
push
jb
xor
xchg
mov
or
dec
inc
in
pop
scas
fsubrs
jno
lcall
in
jle
lock
mov
jnp
outsb
in
sbb
dec
lahf
hlt
jns
movsl
push
out
dec
dec
jnp
xlat
fisttpl
jno
jmp
or
push
iret
and
into
sub
dec
dec
xchg
mov
rcll
repz
std
mov
pshufw
or
xor
sahf
aam
sub
in
fs
das
out
jae
rcrb
cld
insb
push
fimuls
cmc
repnz
fstp
lods
mov
in
dec
cmp
mov
in
xor
rol
pop
pushf
nop
mov
int
mov
jnp
xchg
and
fcomip
lret
cmp
or
or
rorb
add
out
mov
or
and
cmp
inc
jno
pop
stos
test
in
mov
cwtl
pop
ret
loop
mov
sarb
pop
lahf
leave
fadd
cmp
adc
jg
stos
test
ds
mov
or
cmp
ds
ret
je
sub
into
pop
dec
fs
xchg
ss
repnz
mov
es
cli
inc
loop
and
lods
add
cmpsl
cmpsl
call
sbb
mov
adc
mull
arpl
insb
mov
jns
inc
or
jno
add
mov
mov
xchg
repz
pop
cld
jecxz
adc
jnp
repz
gs
and
lea
loop
add
aaa
das
jl
fists
call
in
mov
in
jo
in
adc
mov
push
dec
and
lret
repnz
in
cmpsb
xchg
leave
aaa
mov
enter
dec
xchg
xchg
inc
aaa
dec
insl
xchg
cld
std
mov
into
repz
cmpsl
and
sbb
xor
loope
sar
jno
add
jecxz
push
inc
sti
jns
ljmp
sahf
test
mov
or
nop
ret
das
sarb
fidivs
nop
inc
loop
adcb
cli
pop
mov
cmp
push
sub
test
outsl
inc
inc
add
push
mov
adc
pop
pop
jae
jo
outsb
jl
pushf
imul
divb
jl,pn
cmp
pop
aaa
add
lret
adcb
int3
out
aad
jae
jo
xor
enter
adc
cmpsl
ss
enter
lock
xor
jne
jp
xlat
outsb
inc
adc
cli
ret
sbb
push
test
jno
clc
dec
daa
sub
mov
aam
popf
cmp
cmp
push
cmp
cmc
jo
test
outsb
xchg
lock
sub
mov
add
xchg
add
jne
hlt
adc
and
xor
xchg
cmp
adc
hlt
scas
inc
xchg
sbb
jp
inc
outsl
pop
push
sub
rcrb
imul
movsb
aam
pushf
dec
push
adc
sar
arpl
ret
pop
xchg
pop
test
xchg
and
jne
insl
addb
lahf
xchg
xchg
negl
sbb
loope
lahf
xor
inc
pop
nop
push
ret
pop
mov
or
scas
lret
xlat
fldenv
dec
dec
loop
movsb
clc
movsl
in
cmp
subb
xor
mov
les
push
jecxz
dec
or
fdivrp
sbb
push
test
cmp
add
inc
iret
ja
bound
mov
rcrb
dec
movsb
mov
push
popa
or
mov
sbb
and
mov
aam
xchg
mov
mov
movsb
cwtl
test
lods
scas
fnsave
mov
adc
add
sub
xor
dec
leave
pop
es
jne
cs
fstpt
addl
jle
arpl
cwtl
loop
inc
pop
lock
cmp
push
mov
mov
or
xchg
push
mov
pop
or
fcmovbe
call
enter
orb
outsb
mov
mov
mov
jns
ret
or
pop
je
cmp
sbb
push
popf
mov
popf
sbb
xchg
movsb
shl
jne
xor
fwait
ljmp
scas
test
dec
xor
loopne
adc
into
push
push
scas
mov
sarb
fwait
sbb
repz
mov
and
adc
mov
cwtl
imul
jno
out
in
sub
aad
add
mov
mov
add
scas
js
jno
fiadds
mov
cs
adc
jns
adc
outsb
ret
jl
cmc
pop
aam
mov
pop
xchg
inc
mov
fnsave
fldenv
xor
push
pop
xchg
repnz
jmp
cmpsb
insl
mov
xchg
jle
lret
f2xm1
mov
out
mov
cmp
in
icebp
sahf
jne
dec
imul
add
ljmp
test
jmp
or
aad
inc
filds
inc
fdivl
pop
ds
xchg
jle
lds
test
imul
adc
popa
shlb
or
jno
dec
or
jg
je
lret
jbe
hlt
mov
jne
imul
repnz
sarl
add
mov
clc
outsb
mov
fdivs
dec
pop
lea
add
push
in
cmp
xchg
test
jae
jae
outsb
test
aad
cmpsb
sub
lods
daa
cmp
xchg
imul
in
bnd
and
mov
imul
std
ret
mul
lods
ret
test
cld
in
movsl
mov
ljmp
mulb
mov
mov
enter
push
xchg
mov
push
imulb
cmpsb
jno
aas
addr16
push
cmp
push
cltd
push
or
push
pop
or
mov
nop
sbb
ss
mov
mov
cs
dec
out
mov
fs
sub
add
mov
sbb
ljmp
push
int
add
aad
testb
push
xchg
push
rcl
xchg
pop
sub
push
inc
add
jae
adc
cmc
add
clc
inc
loop
push
std
mov
inc
xor
push
mov
jle
vphadddq
idivl
sbb
mov
dec
xor
pop
repnz
dec
in
outsl
jmp
pusha
fdivs
jg
or
pusha
movsb
mov
and
pop
setb
popa
push
pop
or
inc
aam
js
mov
push
ficompl
repnz
pop
pop
stos
icebp
ljmp
js
dec
jne
outsl
test
sahf
xchg
icebp
inc
push
iret
lods
stos
arpl
mov
cmp
imul
pop
imul
pop
mov
inc
ljmp
or
sarl
xor
adc
ffree
scas
aam
sub
pop
sub
lock
dec
mov
cli
mov
xor
sti
lds
jne
iret
mov
out
mov
pop
sub
enter
das
aad
pop
mov
jmp
in
mov
fsubrl
mov
or
dec
sub
shlb
fdivrl
adc
sbb
int
or
dec
stc
xor
jae
sub
or
jge
adc
mov
mov
cmpsl
mov
add
movl
subl
pop
jge
mov
adc
add
pop
rolb
hlt
aad
mov
jg
int3
or
mov
shlb
sqrtps
sbb
addr16
pop
mov
gs
add
adc
and
push
sbb
jo
pop
mov
and
imul
repz
lds
jae
daa
addr16
adc
mov
xchg
cmp
and
mov
in
dec
dec
bound
sub
daa
idivl
movsb
aas
fstpt
push
pop
mov
insb
ja
test
out
arpl
cmp
dec
sub
sub
xor
test
sbb
inc
jnp
add
jge
xor
mov
test
mov
push
aam
mov
push
jle
fcoms
adc
cwtl
bound
lds
push
cmc
fwait
cmp
pop
or
mov
dec
icebp
mov
xor
push
push
add
push
fisubl
xor
loope
ret
out
pop
icebp
pop
mov
subl
hlt
dec
push
gs
sub
push
cmc
inc
push
test
mov
sub
pop
mov
lods
adc
hlt
sub
cwtl
or
lods
adc
icebp
out
dec
adc
nop
mov
jmp
push
or
movsb
cli
stos
dec
dec
fs
ficoml
fildll
pop
mov
daa
mov
js
xchg
xlat
mov
sub
stos
repnz
inc
mov
xchg
xor
xchg
sub
dec
ret
and
inc
repz
inc
push
inc
jo
sub
lds
xlat
or
mov
xlat
inc
jmp
jne
or
stos
mov
movsb
sbb
sbb
xchg
dec
sbb
mov
call
cmp
cmp
and
fnsave
sbb
add
mull
lcall
or
pop
repnz
cltd
adc
mov
xor
out
movsbl
mov
arpl
jb
loope
sbbb
mov
out
insl
stos
sub
mov
mov
jbe
sub
in
test
cmpsb
pop
inc
fs
pop
xchg
push
in
inc
mov
push
adc
je
je
inc
stos
rcr
popf
js
cwtl
inc
je
xor
cld
das
test
enter
int
inc
scas
shl
dec
jb
xor
mov
scas
xor
jp
out
test
mov
mov
into
sub
mov
or
jecxz
call
xor
call
dec
stos
or
dec
pop
aaa
mov
cmc
mov
std
add
into
add
xchg
and
shl
das
xor
xor
lret
xor
pop
lds
xorb
push
scas
loop
hlt
aad
sahf
push
scas
ret
sbb
xlat
mov
dec
dec
xchg
xor
andl
xchg
jns
pop
loopne
and
push
nop
mov
repz
popa
and
inc
popl
or
aas
sub
dec
push
push
pop
ss
out
out
jecxz
ja
fisubs
movb
dec
push
mov
pop
mov
rcl
sarl
dec
xchg
or
nop
or
js
pop
mov
stos
rcrl
xchg
jns
fisubrs
adc
mov
sbb
nop
repz
inc
inc
sbb
shll
clc
cmp
fldenv
adc
jno
add
pop
lahf
fistps
data16
add
pusha
mov
stos
mov
in
sub
and
cmp
das
xchg
dec
adc
jbe
leave
adc
push
leave
inc
mov
imul
pop
sub
test
cmp
dec
in
add
jns
jne
fiaddl
dec
add
sarb
adc
sub
jns
lds
ja
push
inc
xor
pop
imul
fwait
mov
in
loopne
sbb
cmp
add
popf
mov
add
jbe
pop
sub
pop
xchg
inc
arpl
dec
enter
xchg
add
or
dec
pop
jb
mov
repz
shll
sbb
bound
pop
sar
add
fwait
and
pop
inc
insb
lret
mov
cmp
mov
scas
pop
movsl
xchg
ja
push
xchg
jns
push
pop
cmp
xor
int3
stos
and
iret
push
mov
testl
das
pop
push
imul
popf
xor
jno
mov
cmp
fpatan
xchg
add
nop
test
fisubs
fidivs
fcmovnbe
mov
add
lahf
xor
stc
jle
ja
pop
lock
or
popf
inc
pop
jbe
jecxz
add
cwtl
mov
call
lret
sbb
cmp
xchg
nop
pushf
xor
aaa
jno
inc
divl
cld
shll
cwtl
lcall
sbb
fdivr
into
push
fs
lahf
out
loopne
ljmp
mov
fstpl
dec
xchg
jb
jno
add
loope
fnstsw
cmpsl
es
sbb
popfw
and
lahf
addr16
inc
sub
sbb
int3
repz
add
lcall
push
inc
shrl
fwait
das
add
and
mov
scas
jbe
jae
mov
push
scas
mov
sub
inc
xchg
popa
sbb
dec
add
pusha
or
adc
mov
repz
fwait
icebp
aaa
sub
stc
sub
or
scas
jg
cmpsb
mov
ret
push
dec
and
adc
xchg
xlat
fisubs
mov
test
mov
push
aaa
bound
ds
xchg
add
adcl
cmp
adc
lcall
cmpsb
inc
and
mov
mov
adc
addr16
int
pop
ret
sub
and
push
mov
dec
aaa
aam
popa
loope
pop
mov
mov
mov
or
inc
jg
stc
jno
cmp
fidivs
call
dec
push
ret
cmp
popa
das
stc
xor
pop
or
sbb
add
push
jmp
loop
insl
ret
jnp
push
aam
data16
xchg
sub
popa
push
sbb
sub
dec
aam
inc
add
cwtl
sub
push
mov
dec
cmp
xor
fs
fstl
test
cmp
les
into
pop
aad
filds
push
iret
fists
dec
add
int
mov
inc
inc
mov
adc
mov
push
mov
push
fldcw
xor
push
pop
hlt
jecxz
jl
sbb
sbbb
bound
xchg
je
xchg
aaa
xor
pop
popf
sub
and
shlb
ret
mov
rclb
loopne
ret
sarb
mov
scas
push
int
mov
dec
in
fnstsw
daa
popa
or
dec
inc
loopnew
mov
ljmp
inc
outsb
or
sub
stc
jne
cmpsl
int3
adc
jp
out
in
scas
xor
or
insb
out
add
inc
in
in
jmp
addb
xchg
cli
or
idivb
fdivr
push
xchg
or
mov
jmp
push
jo
push
cmp
push
out
xor
mov
ret
imul
mov
push
push
sbb
shlb
jmp
iret
mov
fwait
nop
xlat
das
dec
out
and
sub
in
cmpsb
mov
cmc
xchg
cmpsb
sahf
mov
fstp
mov
add
mov
bound
mov
or
xor
rol
pop
out
adc
or
mov
xchg
loopne
pop
add
mov
pop
mov
lret
xor
and
dec
repz
aas
jne
nop
stos
insb
into
cltd
push
mov
ljmp
cmc
ret
lock
out
adc
in
ret
fsubrs
fadd
xlat
inc
push
orps
or
or
mov
push
jo
or
scas
stos
inc
mov
sub
ret
adc
sbb
pop
push
push
subb
ds
sahf
fistl
sub
pop
xchg
or
adc
cmp
push
pop
pop
imul
mov
mov
fdivrl
pop
jb
cmp
inc
sbb
jo
mov
cmp
test
push
xchg
dec
cmp
dec
pop
jmp
out
mov
cmp
fnsave
dec
call
pop
xchg
pop
sub
dec
dec
jmp
les
cltd
arpl
xor
push
mov
out
lods
dec
xchg
aad
test
cs
call
ret
push
loop
push
gs
mov
add
cmpb
call
hlt
xor
adc
mov
shll
ficomps
fdivr
mov
sub
fcmovnbe
pop
mov
mov
cmp
push
cmp
push
repz
aaa
fstpl
popf
push
stos
and
pop
inc
fists
adc
xchg
loopne
cmp
mov
jecxz
sbb
outsl
jmp
add
dec
iret
loope
jp
js
add
std
daa
test
fadds
stos
push
pop
jmp
dec
jo
adc
std
push
les
aaa
mov
sub
std
pop
dec
adc
jp
cmp
sti
jbe
clc
pop
imul
xchg
fisubrs
push
jb
sbb
jle
mov
dec
or
je
xor
inc
loopne
push
cltd
jb
cli
or
sub
in
adc
aas
fwait
movsb
xchg
sarl
test
insl
mov
xchg
pop
mov
test
jno
push
icebp
dec
xchg
pop
inc
lcall
inc
aam
xchg
jg
imul
sbb
in
pushf
jle
iret
xor
enter
pop
push
mov
fdivl
pop
pop
rcrb
scas
pushf
aad
dec
cltd
mov
divb
push
push
call
jns
jae
add
jmp
mov
inc
int
pushl
popa
fsubrs
adc
fcoml
add
lods
cmp
lea
xor
push
cld
mov
add
out
jmp
sbb
jmp
xor
pop
push
je
cmc
pop
cmp
int3
stos
inc
xor
outsl
xor
push
das
sub
ds
xlat
out
rep
push
loopne
sbb
push
les
stos
ljmp
jmp
dec
je
pop
std
cmpsl
jb
inc
aam
cmp
not
jp
rcl
shrl
ds
rcrb
out
and
xlat
cwtl
out
fstpl
outsl
imul
adc
push
mov
mov
add
and
faddl
jns
in
jecxz
out
or
adc
lcall
ret
inc
add
mov
jbe
popf
fyl2xp1
lea
mov
jecxz
adc
roll
imul
daa
jmp
mov
sub
ret
clc
mov
rcr
js
out
rcll
fst
fdivr
fwait
push
sbb
push
dec
fldl
xchg
jle
push
in
mov
pop
mov
aaa
rcll
frstor
outsl
cmp
in
repz
xor
or
push
pop
and
ret
mov
dec
in
scas
pop
outsl
jle
cmc
nop
dec
jmp
mov
fwait
jns
pusha
pop
jl
mov
jne
jae
ret
mov
mov
les
sbb
mov
cld
leave
inc
adc
int3
lahf
dec
add
lods
loope
lock
in
fimull
cmpsb
pop
cli
es
and
lock
outsb
xlat
dec
push
scas
loopne
test
inc
mov
mov
and
ljmp
cmpsl
and
inc
pop
addl
xchg
mov
push
and
je
fwait
in
pop
lcall
sahf
mov
lea
decl
orb
pop
xor
push
repz
sub
stc
movsl
imul
idivl
pop
mov
pop
inc
mov
add
jmp
mov
cmp
lock
outsl
cli
lods
jnp
mov
neg
fs
aam
out
lods
in
outsl
xor
into
les
lods
pop
lret
adc
repz
movsb
scas
jp
inc
push
cmp
call
scas
pop
imul
movsb
or
aam
cmc
jmp
xchg
sub
std
mov
inc
test
je
scas
inc
test
pop
pop
arpl
aas
out
mov
lahf
dec
adc
jmp
inc
cmp
jg
popf
pop
mov
inc
popf
adc
xchg
popf
daa
sarl
inc
fisubl
inc
movd
and
lock
inc
stc
mov
loop
lret
dec
test
sbb
and
lret
jae
sbb
scas
out
mov
and
lds
in
xchg
fidivl
in
hlt
add
imul
add
xlat
cmpsb
cmc
push
repnz
cmpl
cmp
mov
shll
sbb
jbe
mov
outsb
pop
pop
cmp
mov
rorl
push
dec
cmp
aam
pop
leave
mull
in
int3
sbb
je
xchg
sub
sahf
sub
ror
inc
pop
xchg
lret
xor
push
xchg
jge
sub
mov
pop
jns
jp
sub
mov
cli
cmp
or
sbb
cmp
cmp
mov
out
cmc
cmpsb
xchg
mov
bound
aaa
movsb
shl
mov
xor
jecxz
add
lds
mov
stos
cwtl
pop
cmc
gs
ds
popf
mov
adc
xorl
mov
dec
leave
jno
xchg
mov
push
mov
cltd
aad
inc
jmp
stc
imul
mov
xchg
sbb
std
out
add
subb
in
lea
inc
xor
push
pop
out
and
decl
shrl
imul
inc
xor
ja
mov
imull
xor
dec
cmp
adc
mov
imul
enter
mov
sub
mov
or
aam
inc
fbstp
and
jl
push
jno
mov
inc
jl
pop
jle
into
adc
sbbb
pop
in
mov
pop
xor
inc
movsb
rcrl
lods
cmp
add
mov
adc
cmp
shll
push
insl
fnstcw
and
jne
sbb
add
and
or
test
adc
cmc
mov
cmp
pop
fs
sbb
inc
and
testl
xchg
cmc
outsb
or
dec
scas
mov
data16
cld
adc
mov
jne
xchg
out
das
ds
paddsw
rcll
stos
repz
cmpsb
mov
adc
xchg
testb
sub
cmpb
xchg
mov
fs
fs
data16
stc
fisttpl
in
subb
repnz
or
lret
pop
push
fdivr
cwtl
mov
aaa
push
jmp
adc
sub
xchg
out
stc
mov
cmpsl
push
adc
pop
aad
lcall
xchg
arpl
lahf
aad
adc
mov
mov
orl
fs
push
mov
sbb
mov
pop
scas
or
mov
mov
js
aas
in
dec
xor
adc
pop
aad
and
loop
jne
and
fstpl
jb
dec
subps
mov
aad
dec
xor
pop
inc
add
mov
mov
rcll
jb
lahf
and
cmp
repz
adcl
pop
mov
ja
pop
xor
movsl
mov
lods
inc
cmc
ret
add
gs
xrelease
sub
mov
loop
movsb
pop
out
jecxz
stc
mov
ret
cmp
stos
xor
and
mov
mov
cmp
pop
shl
rol
shll
push
mov
out
test
adc
repz
mov
xor
jmp
ja
sub
idivb
jmp
inc
js
inc
jl
mov
ds
inc
outsb
adc
or
loopne
std
movsl
pop
jae
insb
adc
add
aad
jecxz
ja
imul
mov
jle
mov
mov
call
push
xchg
inc
ljmp
push
rcrl
imul
addr16
cmp
and
pop
js
adc
jb
loop
xchg
cmpsl
outsb
jb
sbb
fwait
xlat
lcall
cmp
jb
aas
or
imul
stos
test
ds
je
jns
cwtl
jne
cwtl
test
insl
shrl
mov
jmp
mov
insl
jge
xchg
dec
movsb
jle
fildll
or
pop
cmp
insl
pop
add
repz
xor
dec
pop
test
fldenv
and
jo
adc
sub
mov
push
pusha
es
aad
and
mov
pop
shll
stc
mov
push
cmp
loope
clc
stos
aam
loope
push
fdivl
cmp
pop
inc
add
cs
popf
push
dec
xchg
mov
jbe
mov
cmp
mov
aas
jb
outsl
and
mov
js
dec
cmp
jmp
fisttpll
movsl
add
and
pslld
dec
ficomps
shr
cmpsl
mov
loop
scas
jg
jge
dec
pusha
pop
outsl
fmuls
icebp
mov
addl
or
addr16
ret
push
rclb
cmp
clc
or
lds
mov
aas
test
lret
enter
jb
inc
sub
push
push
adc
std
sarb
add
pusha
mov
inc
jmp
pop
rcl
out
lret
xchg
push
or
mov
mov
fwait
adc
scas
popa
jg
shl
into
mov
pop
sbb
lea
xchg
mov
sub
mov
fimull
pop
add
jae
add
xchg
mov
addl
or
inc
push
or
inc
ds
adc
aaa
and
push
adc
add
xchg
and
out
in
out
movsb
lret
push
lds
les
pop
fbld
push
les
fiaddl
mov
fiaddl
jae
icebp
push
stc
pop
xor
frstor
push
push
lcall
pop
xor
push
jl
sbb
scas
ret
lea
push
xor
push
loope
sbb
jns
sbb
daa
xchg
aad
cmp
jg
jo
test
repz
sub
test
sti
add
lock
in
fiadds
push
dec
clc
xchg
in
pop
mov
roll
xor
pop
inc
cmc
jae
jl
movsb
jecxz
or
sarb
fmul
ss
dec
mov
push
push
jo
pop
adcb
mov
dec
push
into
ret
or
add
pop
mov
mov
cli
mov
ficoml
cltd
sub
mov
jns
xor
sbb
out
pop
jns
in
push
xchg
dec
mov
cmpsl
adc
or
cs
and
addr16
cli
or
in
shlb
jne
mov
push
stc
xchg
scas
cmp
js
aad
mov
add
add
pop
lcall
fdivrs
repz
mov
out
sbb
sub
in
inc
mov
dec
push
aaa
loopne
add
pop
in
jecxz
hlt
xor
addr16
aam
push
mov
fcomi
inc
das
sub
inc
psubw
push
enter
xchg
daa
aaa
push
loopne
sbb
sahf
lods
rdmsr
push
push
test
repz
addl
sahf
xchg
sub
shrb
out
dec
movsb
mov
mov
mov
adcb
inc
movsb
ret
jo
push
push
sbb
sbb
xor
jmp
push
insl
out
jo
fiaddl
jne
jmp
mov
push
ljmp
jns
pop
ljmp
lahf
and
dec
imul
pop
hlt
into
scas
fiaddl
dec
mov
cld
pop
add
dec
or
je
sbb
lds
xor
jle
adc
mov
cmp
push
scas
int
pop
pusha
fs
xor
push
push
rorb
xchg
pop
aam
lret
dec
dec
pop
or
or
leave
xlat
ss
or
xchg
cmpsl
sub
push
dec
icebp
mov
and
popa
jne
add
jg
cmpps
adc
nop
push
in
add
jnp
jne
repnz
push
pop
js
jnp
ss
and
stc
aaa
mov
push
bound
sub
bound
sub
aaa
addr16
stos
shrl
fists
or
in
jmp
movsb
scas
jbe
ljmp
dec
jbe
ret
cs
mov
rol
xchg
mov
movsl
sub
mov
jbe
fst
out
ds
fs
mov
xchg
xor
and
ljmp
mov
inc
sbb
dec
adc
cmp
popa
lods
daa
adc
adcb
and
jo
mov
call
ds
dec
mov
pop
cld
leave
cmp
mov
cmp
push
pop
add
ficoml
cld
leave
dec
sahf
pop
arpl
or
jecxz
pushf
imul
je
loope
push
mov
fxch
push
mov
daa
fdivrs
or
dec
mov
or
sbb
adc
stos
scas
or
fnstenv
mov
aas
into
stc
jns
call
mov
enter
mov
dec
or
enter
shlb
sub
and
gs
add
pop
stos
or
add
aad
jg
sbb
mov
and
scas
mov
shrl
add
dec
fs
repnz
lret
mov
es
out
shl
mov
test
sbb
lods
aaa
mov
add
int3
inc
add
testl
pushf
std
xlat
cmp
xchg
sti
cmp
push
jle
fistl
in
call
cltd
jae
add
fstpl
dec
jecxz
icebp
mov
jns
addb
mov
fiadds
sbb
flds
ljmp
add
push
pop
add
push
add
push
call
cmp
sub
mov
leave
sub
sbb
leave
popa
jle
adc
mov
fwait
in
shll
sbb
sub
sbb
sbbl
out
inc
sbb
and
push
fst
jmp
stos
jecxz
dec
mov
les
pushf
pop
les
add
outsb
setne
push
cmp
inc
jl
push
addb
fs
inc
add
dec
mov
mov
daa
dec
mov
cmp
shrb
mov
dec
je
cld
ret
or
push
ret
mov
add
arpl
mov
inc
sbb
pushf
loope
inc
cmpl
xor
pop
daa
pop
jl
fisubrl
jns
mov
cmp
cwtl
pop
cli
jg
movsl
sbb
xchg
and
cltd
insl
pop
mov
repz
xchg
pop
jl
push
adc
les
xor
shll
add
out
xor
enter
cmp
mov
dec
xchg
ret
jne
sub
dec
xor
enter
or
and
mov
mov
inc
gs
add
repz
sub
mov
push
adc
adc
jmp
fimuls
int3
fs
mov
adc
sub
xchg
je
mov
jp
inc
cmp
cmc
mov
mov
cmpsb
and
bound
and
push
cmpsb
call
add
cmp
stc
jmp
xor
jecxz
mov
jp
int
rclb
xchg
out
icebp
mov
lret
and
dec
inc
jnp
mov
xor
jnp
inc
scas
sub
pusha
pop
and
in
xlat
mov
push
add
mov
add
fcoml
xchg
sbb
add
cmpsl
inc
xchg
stos
int
pop
js
mov
jb
int
xorb
pop
push
cmp
cltd
lcallw
push
enter
or
sbb
push
dec
jno
mov
ss
in
into
out
int
inc
fsubl
pop
bound
xchg
movhps
inc
jg
in
sub
jne
sub
push
lods
cmp
push
icebp
sbb
imul
bound
jnp
xchg
cmp
repz
or
cld
mov
and
add
ljmp
or
inc
push
xchg
insl
adc
adc
or
mov
mov
jno
or
test
or
dec
cmp
sub
test
das
adc
std
daa
jo
shlb
ljmp
and
xchg
mov
push
dec
sub
lock
jae
push
adc
shll
add
fiaddl
cwtl
or
mov
cmp
push
jne
dec
test
xor
cmp
xor
xchg
dec
sbb
cmp
popf
mov
ljmp
stos
pop
mov
stos
cwtl
mov
mov
push
or
cmp
in
cli
mov
in
lods
inc
pop
push
shl
pop
adcw
pop
int3
das
pop
cs
jb
jo
repnz
test
mov
push
jae
pushf
das
dec
jne
fstl
xchg
out
ss
mov
cmp
imul
frstor
imul
arpl
fwait
pop
dec
adc
clc
mov
shl
imul
std
or
or
mov
xor
and
jmp
lods
bound
ljmp
xchg
mov
dec
outsl
scas
jmp
outsl
scas
push
lret
add
dec
and
mov
xchg
mov
lret
xor
inc
dec
jmp
out
or
cli
sub
xchg
cmp
bound
lock
ja
stc
mov
ljmp
es
jmp
fcoms
shlb
pop
xorb
push
push
pusha
sahf
jge
icebp
sub
sbb
ds
jb
pop
mov
lret
mov
push
test
filds
sub
rcr
add
or
inc
push
push
dec
jle
mov
dec
jmp
xorl
mov
sbbb
inc
hlt
shll
inc
and
incb
mov
add
into
push
insb
mov
js
fsubl
outsl
popa
cmp
mov
mov
call
push
jge
push
sbb
lcall
pop
dec
pop
fsubrl
jmp
jne
xor
mov
rorl
jns
out
jne
loopne
repnz
lcall
push
scas
mov
sub
sub
jl
lock
sarb
sub
and
lea
jne
add
lds
mov
dec
xchg
xchg
insl
inc
jecxz
movsb
shll
subl
and
xor
push
and
lds
mov
leave
cltd
lods
push
adc
dec
lret
insb
ret
cli
cmp
dec
sbb
sub
jb
pop
out
jbe
lea
insl
ret
cld
jo
adcl
mov
adc
sbb
lahf
sub
sbb
rcr
addr16
stos
mov
mov
mov
mov
cwtl
jbe
cmpsl
add
mov
scas
pop
in
mov
andl
sub
add
rclb
or
repnz
mov
clc
jg
mov
dec
shrl
and
iret
into
repz
mov
push
gs
je
mov
sub
inc
scas
jg
jl
stc
out
jne
popa
lea
lea
mov
cs
xchg
push
dec
push
into
or
fs
mov
dec
bound
adc
insl
fimull
xchg
mov
xchg
lock
scas
movsl
push
subl
mov
xorl
add
sbb
mov
cli
in
push
ljmp
push
xchg
fsts
bound
inc
dec
pop
jnp
ja
fwait
push
lret
dec
jnp
adc
mov
mov
je
data16
test
or
jns
mov
mov
movsl
lcall
xchg
add
test
pcmpeqw
mov
mov
repz
dec
aas
into
mov
nop
jo
cld
ljmp
xchg
and
bound
add
inc
das
adc
xchg
enter
mov
or
adc
cmp
or
inc
adc
or
adc
mov
je
sbbb
xchg
xchg
popf
and
ja
xchg
sub
les
or
jno
data16
outsb
push
jo
daa
sbb
mov
insb
sub
lret
or
shl
es
insb
lret
imul
mov
rol
jl
lret
sub
test
jecxz
cmp
add
jno
pusha
movsl
or
sbb
xlat
cmp
repz
fisubs
lcall
xchg
std
add
jnp
jnp
inc
fisubrl
es
mov
insl
out
sbb
jg
shl
pop
jne
jg,pn
stos
xchg
out
jae
sti
aad
add
add
rolb
pop
mov
push
xchg
cmp
fidivrl
in
sub
arpl
cmpsl
ds
loope
or
cmp
add
repz
nop
mov
and
mov
mov
inc
loope
add
push
jp
dec
lods
jle
neg
xorb
dec
icebp
and
push
aaa
lret
les
xchg
lea
jb
cmpb
xchg
cmp
cmc
add
pop
test
das
jl
popf
mov
insl
push
xchg
fcomip
xchg
jecxz
dec
and
inc
dec
cli
add
int
adc
fs
gs
pushl
iret
call
inc
inc
xchg
inc
data16
and
cmp
pop
mov
mov
out
out
lahf
and
hlt
and
fdivr
test
lret
dec
mov
out
push
jo
in
or
cmp
inc
push
jno
fiaddl
test
int
incl
inc
repnz
movsl
nop
dec
push
sub
inc
dec
sub
jl
idivl
repnz
jns
in
xchg
jae
inc
cli
enter
adc
jp
clc
push
sbb
inc
or
mov
test
ja
mov
adc
lcall
xchg
adc
stos
inc
push
mov
insb
cmp
pop
inc
movsb
mov
pop
mov
hlt
loope
xchg
add
dec
lock
cld
mov
add
aam
icebp
rclb
scas
in
lods
leave
ja
pop
jb
daa
sub
aaa
push
mov
push
adc
sub
mov
push
mov
rcl
cli
les
inc
out
xor
jb
outsl
xchg
sti
cmp
pop
fldenv
cmp
std
mov
push
inc
loopne
daa
pop
sbb
xlat
fsub
or
repnz
xchg
mov
push
shll
mov
or
or
insl
lds
stos
nop
mov
nop
push
movsb
push
sbb
xchg
add
rclb
lock
fdiv
int
or
mull
call
inc
push
adc
jp
xchg
int3
inc
iret
pop
sub
mov
movsl
imul
arpl
and
scas
sub
or
ret
sbb
xor
dec
jecxz
jle
dec
push
dec
pop
dec
movsl
roll
cmp
jl
ljmp
cs
push
sbb
icebp
and
mov
out
int
or
loope
cwtl
sti
dec
test
mov
and
mov
mov
pop
or
in
popa
inc
out
fs
lcall
sub
outsl
dec
sbb
push
inc
stc
das
xor
mov
into
and
mov
dec
mov
inc
insb
xor
adc
das
mov
insb
repnz
enter
inc
xchg
fs
push
adc
pop
mov
setnp
pushl
movsl
sahf
dec
ds
pusha
imul
das
stc
aam
hlt
int
mov
push
or
jg
das
or
jnp
aaa
add
mov
add
push
and
roll
fcomps
xor
xchg
push
inc
ljmp
xlat
jmp
hlt
test
out
call
dec
insb
inc
mov
loope
pop
xchg
pop
or
mov
push
jnp
mov
inc
scas
mov
pusha
add
jo
jmp
adc
add
cmc
add
add
add
add
mov
call
add
cwtl
or
lcall
adc
incl
incl
jg
pop
imul
insb
mov
cmpsb
rorl
out
ret
and
stos
cmc
mov
pop
sub
test
mov
dec
cmp
sub
cmp
sub
xchg
inc
mov
mov
stos
or
and
aas
jg
nop
stc
mov
cld
xchg
repz
lea
dec
call
insb
ds
and
lahf
mov
jl
daa
in
clc
mov
jo
sarb
push
cld
mov
sbb
mov
jg
xchg
pop
sar
daa
pop
aas
jns
ret
dec
lods
dec
xchg
jbe
cmp
test
jns
mov
inc
push
test
mov
dec
cmp
into
pushf
push
addr16
test
mov
lahf
xor
imul
xchg
imul
rcr
ficomps
cmp
mov
cld
data16
xchg
cltd
inc
mov
mov
sti
cltd
ret
pop
sahf
orl
jno
idivl
mov
ljmp
lea
rorl
mov
lret
push
jmp
cmpsb
add
out
pop
dec
pop
std
and
lcall
add
call
jle
fildl
std
aad
mov
cwtl
out
and
ja
int3
add
mov
icebp
jns
xchg
insl
pop
sbb
movsb
bound
sbb
lret
xor
aas
inc
mov
jne
sub
imul
outsl
jecxz
bound
sahf
xchg
or
xchg
adc
mov
cmpsw
pop
xlat
xor
jo
mov
push
sub
aaa
pop
sub
mov
inc
insb
movsl
jno
mov
jbe
xchg
dec
and
sbb
adc
or
outsl
push
aam
lcall
and
leave
xor
pushf
mov
sarl
popa
adc
pop
mov
icebp
je
push
jns
andb
pop
push
sbb
in
cwtl
cmp
inc
push
xor
imull
push
or
mov
sbb
mov
mov
bound
xchg
sub
mov
jbe
mov
mov
xchg
adc
lods
or
lea
cwtl
dec
sbb
xchg
jne
jl
cmpsb
push
jo
out
ret
das
test
xchg
aam
mov
add
jg
test
test
adc
out
loopne
mov
outsl
dec
jno
cmpsl
fisubrl
add
add
push
pop
int
xor
mov
or
push
mov
sub
mov
lock
shll
and
push
cmpsb
mulb
cmp
and
and
cmp
roll
pop
popf
jmp
pop
add
in
fdivrs
testb
gs
inc
lea
mov
insb
movsb
xchg
pop
int
push
das
inc
sub
mov
cwtl
sbb
cwtl
add
sub
cwtl
jge
or
jle
adc
or
std
or
out
out
fistpl
es
outsb
jnp
subb
xor
inc
mov
je
pushf
lods
add
cwtl
cli
push
jle
imul
inc
jecxz
rcll
cli
or
xor
mov
fildl
icebp
in
shrl
push
push
jo
dec
out
inc
cli
aaa
and
pop
inc
aad
push
clc
test
bound
insb
dec
test
test
mov
and
out
inc
or
mov
ds
mov
and
or
test
mov
jno
push
shlb
test
sub
mov
dec
add
push
cwtl
sbb
pop
sbb
adc
cmp
mov
sarb
cld
jnp
scas
xlat
mov
dec
and
mov
imul
in
fs
rcrb
orl
push
mov
cld
mov
out
jbe
pop
negb
fcoms
minps
int3
mov
mov
out
cmpsb
int
movsl
or
mov
fimull
jge
test
cmp
xchg
shll
in
enter
roll
iret
lcall
daa
inc
jno
aaa
xchg
pop
cmp
out
mov
loope
fistpll
outsb
ss
sbb
jge
xchg
cmp
and
adc
and
cmpsl
repnz
into
addr16
adc
sbb
es
mov
mov
xchg
cmpsl
fcomps
dec
sbb
jne
adc
add
insb
xor
ret
sub
xchg
pop
in
bound
je
test
pop
ja
sub
aas
mov
pop
xor
repz
enter
and
lret
jge
add
dec
dec
sbb
stc
inc
mov
fcmovnbe
bts
movsb
test
xor
sub
fsubl
push
xchg
mov
xor
lods
sub
jno
les
movsb
fadds
loopne
arpl
out
cmp
pop
popw
decb
jp
pusha
inc
scas
cmp
mov
shlb
pusha
push
es
sbbb
push
push
cmc
shlb
add
clc
push
pusha
shlb
cmp
inc
lcall
pop
xchg
push
jns
push
cli
mov
imul
out
sub
negl
pop
test
push
mov
aad
movsl
xor
push
aas
push
repnz
xchg
sti
in
lds
js
in
inc
lds
jecxz
aas
cld
test
shr
sahf
dec
xchg
adc
into
and
decl
adc
adc
test
push
sahf
or
and
cmc
je
sbb
jp
push
push
push
sbb
repz
xor
jo
jnp
cmpl
mov
mov
js
cltd
jg
push
xchg
push
dec
push
or
imul
scas
jle
mov
jg
std
adc
xchg
cld
add
dec
dec
test
jg
xchg
add
mov
call
sbb
popf
sub
pop
js
sbb
into
push
sbb
loope
mov
jp
sbb
movsb
push
cld
test
inc
mov
iret
pop
rclb
inc
mov
fisubrs
push
fs
ja
subl
mov
sub
icebp
out
sbb
bound
out
jp
repz
mov
ljmpw
push
stc
jne
lock
movsb
pop
xchg
push
mov
push
dec
mov
cmp
scas
sub
or
loopne
outsb
and
aaa
lahf
mov
inc
ds
sbb
add
xor
fisubl
cmp
add
mov
movsb
es
je
push
imul
inc
mov
fidivrs
fstl
ds
cmp
xor
outsl
test
vmwrite
xor
ret
pop
inc
popf
incl
pushf
jne
dec
icebp
mov
das
rclb
stc
stos
mov
ret
dec
adc
mov
shll
repz
and
orl
stos
stos
lret
add
sub
pop
mov
dec
pop
fldcw
stos
push
pop
pop
lock
pop
pusha
push
popa
ret
arpl
incb
and
and
jle
gs
jmp
sbb
in
add
inc
stos
filds
js
sub
sti
mov
icebp
testl
add
or
in
sti
je,pn
inc
data16
xchg
push
mov
scas
sbb
mov
xchg
cltd
push
add
cmp
test
lcall
add
cmpsl
push
fdivrl
sub
ret
push
fstps
outsl
scas
push
cmp
xchg
add
das
pop
or
inc
adc
xchg
push
jle
sbb
jns
lret
test
pop
scas
jmp
int
cmpsb
cmpsl
xchg
lret
mov
sub
dec
adc
iret
das
jne
in
cmpsb
add
cli
out
ljmp
jno
stos
pop
jp
mov
sti
push
daa
and
adc
pop
lea
insb
xchg
and
pop
add
pop
jb
sbb
insb
cmp
jne
lods
cs
je
mov
pop
test
lahf
clc
fwait
pushf
popa
or
xorb
inc
and
je
cld
sub
js
in
sti
out
pop
in
or
fwait
lock
lds
popf
icebp
clc
in
sahf
outsl
adc
cmp
adc
stc
xchg
sarb
loop
push
fmuls
mov
pusha
cmp
cmp
mov
inc
pop
inc
mov
mov
and
mov
lds
mov
lret
sbb
in
sbb
leave
test
ffree
aaa
sub
dec
cmp
inc
nop
mov
lods
fistpll
add
cmp
test
jno
xchg
lahf
cltd
imul
insl
jle
jge
dec
mov
mov
bnd
das
push
js
leave
and
aaa
jmp
out
dec
popf
mov
sbb
loopne
je
dec
subl
xor
cmp
clc
or
mov
mov
dec
roll
rolb
bound
add
andb
and
or
fwait
mov
out
dec
in
dec
mov
add
xor
jecxz
shr
js
stos
call
xchg
sub
cwtl
cltd
sti
mov
xchg
jp
test
popa
outsb
fisubl
dec
push
lret
outsl
mov
jnp
xor
xchg
mov
cld
test
addr16
jo
xlat
ret
jecxz
stos
rorl
enter
daa
movsl
aaa
sbb
lea
inc
add
call
andl
ficoms
jmp
in
jl
push
xor
mov
loop
xor
jmp
pop
lock
push
in
loop
add
adc
dec
adc
jno
xchg
or
xchg
xchg
imul
pop
mov
stos
scas
or
das
loop
jbe
pop
push
data16
cmp
or
mov
iret
push
and
xchg
insl
gs
push
ljmp
jge
sbb
jecxz
inc
sbb
aas
cmpsl
lret
aas
xor
mov
cmp
cmc
inc
and
pop
lock
mov
repz
push
push
sbb
js
arpl
clc
push
inc
add
add
movsl
aas
dec
cmp
sub
pop
nop
push
pop
sbb
mov
xchg
ja
mov
fwait
imul
je
dec
jg
movsb
jno
cmp
ficoml
mov
lcall
xor
ss
mov
jne
or
mov
sub
outsb
push
mov
scas
sub
sub
outsl
mov
mov
pusha
push
inc
inc
sbb
pop
inc
out
add
loopne
addr16
bound
push
leave
pop
pop
mov
dec
gs
mov
in
mov
and
je
pop
add
cmp
adc
push
test
or
cltd
dec
sub
sbbb
push
lock
cwtl
mov
mov
pusha
inc
xlat
mov
cmpsb
out
xor
xchg
subl
or
repnz
mov
push
cmp
adc
js
aad
das
sbb
shlb
pop
fmuls
jecxz
mov
jg
mov
stc
in
jg
xor
das
das
mov
push
and
test
decb
in
insb
dec
cs
cmpsb
lock
aaa
inc
sub
mov
shrl
pop
cmp
inc
jl
or
fisttps
in
xchg
pop
out
jle
jl
push
jle
stos
fidivrs
ret
and
icebp
aad
push
or
push
test
into
sub
aam
xorb
mov
in
jg
lds
dec
fsubrs
adc
movsb
sbb
in
insb
inc
inc
jmp
loope
xchg
adc
xor
fsubs
inc
cmpsb
push
cld
inc
add
xorl
ljmp
jl
jl
imul
mov
ret
leave
data16
ja
jl
sbb
test
dec
xor
ljmp
push
cli
add
xor
cmp
mov
leave
test
das
in
jmp
lds
imul
enter
dec
xchg
loopne
dec
bnd
pusha
ljmp
pop
dec
pop
gs
mov
js
cltd
cmp
push
adc
push
xchg
push
cli
pop
inc
add
fisubrs
mov
mov
dec
pop
fisubl
adc
test
test
push
cmpsl
and
sbb
rorb
sti
ficomps
xchg
jnp
or
aaa
cmp
mov
mov
shrb
xchg
xor
clc
sbb
add
xchg
xor
xchg
mov
pop
repz
es
xchg
jb
iret
pop
jb
std
adc
in
lcall
psubb
push
notb
dec
mov
fcompl
push
scas
ret
xchg
imul
insb
out
test
rol
xorb
aad
ficompl
addr16
repnz
or
fnstsw
add
jg
movsb
push
jnp
fs
jb
push
add
loop
out
xor
xor
test
int
sti
adc
orl
pop
clc
out
sbb
jno
mov
or
mov
push
and
sahf
adc
inc
in
pop
xor
pop
lods
mov
test
push
add
or
push
dec
sub
icebp
fwait
mov
fmul
pop
sahf
insb
int3
jo
mov
dec
lahf
push
push
out
mov
and
mov
movsl
jge
rcll
dec
pop
or
inc
lock
fdivs
xchg
or
loopne
jnp
or
fwait
shrl
out
xor
sub
dec
add
sarb
jg
push
lods
dec
mov
push
or
bound
outsb
and
test
sub
pushf
adc
rcr
incl
xchg
aas
sub
push
mov
stos
push
test
jl
popf
imul
cld
dec
sub
jle
mov
xchg
leave
or
pop
sub
cmpl
sub
gs
pop
cmp
mov
loopne
loope
or
inc
lret
xor
cwtl
loope
jb
mov
pop
aas
subl
out
cmp
push
loopne
sub
lret
pushf
in
add
pop
test
inc
mov
test
cli
das
xchg
ret
aam
jns
or
sbb
repnz
inc
dec
push
lret
cld
lds
sub
clc
in
sbb
adc
test
jo
mov
xor
mov
in
mov
mov
mov
daa
cltd
and
outsl
enter
sub
bound
mov
lahf
flds
sbb
aaa
aad
scas
aas
je
fstps
out
mov
sub
jns
add
inc
jmp
push
mov
ret
dec
pop
mov
mov
jb
nop
pop
sti
dec
dec
dec
mov
and
sbb
sahf
into
xor
jo
push
pop
sub
adc
test
lahf
scas
dec
mov
fldl
ss
int
repnz
arpl
mov
fwait
and
outsb
test
pop
xchg
cld
mov
shrl
xor
inc
dec
lods
ds
add
jle
adc
jmp
aas
popa
lods
loop
push
sbb
imul
cmovle
incb
fdivp
inc
sbb
mov
data16
in
in
into
mov
loope
rcr
scas
fists
mov
pop
in
or
je
rorl
cmp
iret
push
cli
xor
or
sub
pop
gs
aam
std
cmp
push
jne
xchg
getsec
mov
add
jmp
jns
mov
int
aaa
insb
jb
mov
out
test
lcall
repnz
sbb
gs
shll
and
xchg
adc
push
mov
stos
inc
adc
xor
mov
jae
or
mov
inc
dec
shll
adc
push
pushf
and
ds
xor
push
stos
shlb
pusha
and
jl
jg
aas
mov
lret
push
js
pop
aad
dec
pop
rorb
enter
pop
push
sbb
xchg
xchg
test
icebp
pop
mov
insb
inc
mul
les
sbb
push
xor
sbb
ss
incb
inc
lods
sarb
in
mov
and
mov
add
popa
push
jle
testl
cs
dec
fcoms
in
insb
adc
pop
movsl
shlb
cmp
pop
inc
push
add
xchg
sbb
xor
es
add
mov
adc
xchg
add
pop
push
stos
movsl
pop
jecxz
and
cmpsl
inc
sbb
dec
ss
and
imulb
push
sahf
sbb
inc
inc
push
pop
dec
out
enter
sub
xchg
push
xchg
xchg
pop
mov
rcrl
adc
dec
lcall
pop
mov
mov
sahf
dec
sarl
sbb
stos
jle
rcrb
add
std
mov
mov
sti
mov
sub
jbe
add
lret
je
lret
lret
inc
cli
pushf
sub
mov
repnz
lret
inc
mov
inc
cmc
xchg
in
mov
pop
call
xchg
jno
movsb
data16
lret
es
stc
mov
inc
aaa
mov
lods
push
in
jbe
adc
and
rcrl
sub
out
jno
in
mov
cmpsl
jae
cli
cmpl
jno
lret
cmp
xchg
push
lret
dec
cmp
fsubrs
icebp
push
bndstx
mov
add
jnp
pop
or
cmc
out
dec
enter
push
adc
push
inc
es
pop
adc
sub
and
sub
jo
mov
sti
pop
fs
fisubl
call
push
add
dec
cltd
std
mov
inc
rcrb
add
xor
pop
push
movsl
outsl
loop
jae
xchg
dec
xchg
xchg
push
ds
aaa
add
test
stos
inc
lret
aas
ds
mov
xchg
mov
pop
mov
mov
insb
jne
lret
and
jnp
outsb
dec
rcll
inc
mov
xor
clc
or
mov
icebp
call
test
arpl
mov
or
loope
stc
pushf
xchg
fstps
out
loopne
xchg
adc
inc
cld
sub
xchg
add
in
pop
ret
sbb
jo
test
hlt
outsb
fists
rorb
ja
mov
pusha
pop
cmp
ret
data16
into
lret
add
incb
push
sbb
and
sbb
int3
and
jnp
pusha
sahf
repnz
xor
xor
lret
jne
push
je
push
scas
mov
pusha
mov
loopne
imul
sbb
and
js
add
ljmp
xchg
fsubr
fwait
mov
enter
in
pop
mov
popa
pusha
adc
lock
jmp
es
inc
cmpl
xor
cltd
mov
xor
jne
inc
xor
mov
insb
sbb
xor
push
fidivl
push
dec
leave
mov
mov
dec
lea
mov
mov
mov
cmc
sbb
ds
js
or
cmp
test
dec
or
mov
gs
push
push
popa
mov
dec
fwait
lahf
clc
xlat
mov
push
iret
test
or
lea
lods
cld
pop
mov
aaa
xor
and
std
inc
lcall
clc
adc
sub
imul
jb
xor
sbb
sub
mov
mov
push
inc
std
imul
xchg
jo
lods
lahf
adc
adcb
jbe
xchg
sbb
testl
push
inc
cmp
sub
jo
mov
mov
lods
pushf
fimuls
test
dec
test
aad
or
scas
add
push
pop
ja
jecxz
sar
lcall
enter
stos
cmpsb
xchg
outsb
sub
pop
or
jp
dec
es
sub
mov
es
adc
add
rorl
repnz
iret
testb
and
xor
std
sti
adc
pop
jne
jb
std
fcoms
mov
cmp
mov
xchg
into
adc
jo
mov
int3
aas
pop
addr16
lods
adcl
into
ja
inc
push
jne
inc
sub
popa
scas
mov
imul
rcrl
dec
cmp
mov
pop
or
sub
clc
inc
lea
inc
fwait
dec
push
mov
cs
fistps
mov
dec
stos
mov
inc
in
scas
pop
xor
je
add
aaa
xor
mov
add
repnz
adc
fisttpll
mov
pop
xchg
outsl
xchg
jg
inc
iret
xor
sub
frstor
dec
jae
pushf
mov
sahf
mov
lods
aad
lret
jmp
dec
inc
pop
push
lea
aad
loop
gs
lret
and
add
pop
inc
mov
fsubrs
pop
or
mov
or
das
ljmp
nop
mov
repnz
aas
stc
cmpsl
mov
dec
xlat
jecxz
ret
mov
pop
mov
jbe
sbb
sarb
lods
cmp
pop
add
xchg
test
adc
cmp
inc
pop
mov
mov
subl
fsubs
rcrl
sbb
adc
repnz
and
out
insb
or
enter
jbe
out
and
mov
or
dec
mov
insl
or
inc
pop
cltd
inc
pop
mov
into
mov
pop
inc
adc
cmpsl
ds
fistps
rclb
pop
sub
sbb
sub
add
adc
enter
pushf
push
sbb
inc
popa
cmp
decl
push
jne
in
inc
lods
inc
icebp
and
mov
cmp
fwait
xlat
insb
enter
ret
or
cs
fstps
dec
cmpsb
insb
inc
cltd
xor
cmpsl
mov
inc
outsl
ret
dec
daa
cmp
add
stos
jno
cmp
movd
jle
cmp
out
or
mov
roll
enter
int
roll
add
aas
mov
divl
inc
movsl
test
bound
inc
iret
das
arpl
and
std
fiaddl
aas
popa
adc
leave
xchg
xchg
mov
in
std
out
jb
stos
mov
out
fstps
je
push
pushf
es
aam
repnz
fs
add
in
or
cmp
adc
int
jo
adc
push
dec
pop
fidivrl
imul
adc
jae
aad
in
inc
dec
mov
scas
shll
mov
loope
cmpb
cmp
sub
sub
jbe
aad
decl
les
int3
add
push
sar
cmc
push
fidivs
movsb
pushf
popl
fnsave
cld
mov
insb
stos
scas
fucomi
dec
mov
pop
fldl
sti
or
repz
cmp
imul
push
jns
or
push
xor
jne
dec
mov
or
mov
jo
sti
jl
sbb
jg
call
leave
mov
mov
xchg
daa
fwait
imul
adcb
sbb
xchg
sbb
int
leave
gs
shl
popa
jne
les
loopne
sub
xchg
popf
enter
out
add
xchg
xor
les
inc
test
xchg
fcomp
cs
lds
xor
imul
je
insl
insb
sar
inc
or
xor
or
aaa
pop
adc
jbe
popa
pop
ret
push
cmp
inc
xchg
mov
js
pop
aas
fdivrp
mull
leave
lods
sahf
in
sahf
aaa
pop
push
mov
out
pushf
loop
out
fimull
ja
cli
xor
push
mov
cli
mov
xchg
cmpsb
sub
xor
cmp
push
orl
jg
push
les
inc
insl
inc
or
call
leave
outsb
scas
test
fdivp
fmul
or
sub
fcoml
test
stos
sahf
xchg
jae
add
sub
test
ret
push
aam
testb
cmp
lret
mov
push
lods
test
scas
mov
adc
xchg
xchg
lock
dec
mov
outsb
jae
mov
mov
callw
lods
push
jae
mov
fwait
mov
das
mov
cmc
push
inc
jbe
mov
pop
inc
shll
leave
inc
push
mov
stc
add
push
and
fdivl
call
test
mov
not
mov
stc
xor
aam
cmp
jbe
push
movsl
sbb
xchg
push
loop
leave
cmp
pop
cli
sbb
out
push
adc
xor
mov
adc
jno
sbb
cmpsb
xor
icebp
ret
mov
jg
in
mov
mov
sub
nop
bswap
push
btc
aaa
lock
jo
hlt
jmp
outsl
adc
cld
negl
inc
adc
imul
pop
mov
lods
pop
jg
das
add
lods
hlt
test
xor
and
xor
bound
icebp
out
fadds
and
imul
push
cmp
xchg
and
cmpsl
arpl
pop
mov
add
adc
pop
call
scas
imul
and
mov
cltd
loopne
mov
nopl
jp
and
leave
loop
ror
inc
mov
xor
test
ss
addr16
aad
jae
jbe
pop
adc
outsl
mov
push
inc
mov
fwait
test
cmp
mov
mov
jo
in
lret
pop
jno
jne
pop
rcl
add
pushf
insl
adc
movsl
icebp
lret
cvtps2pi
inc
sbb
loope
out
sub
add
cmp
or
mov
and
nop
jmp
lret
pushf
std
lds
mov
xor
negl
ret
pop
js
sbb
repz
cmp
bound
xchg
mov
inc
dec
test
mov
orb
stos
cwtl
or
cld
loopne
push
cmpsb
aas
ficomps
sub
lock
repz
cmp
sub
push
or
mov
das
out
pop
out
adc
out
xlat
data16
gs
in
jg
pop
mov
stos
movsl
mov
adc
push
clc
cmp
mov
pop
sub
and
mov
and
pop
adc
pop
movsb
adc
push
fisubrs
xchg
insl
sbb
cmp
movsl
bound
add
mov
mov
mov
add
lret
leave
push
popa
notl
sbb
adc
int3
or
jno
scas
xchg
addr16
rcr
daa
popf
sbb
inc
pop
cld
fisubs
sbb
clc
andb
cmp
mov
outsl
aam
mov
movsl
mov
and
insl
jp,pn
aaa
pop
ds
orb
add
fcoms
jnp
fwait
cld
clc
jl
push
dec
jne
and
inc
sbb
jle
jo
data16
jle
fcoml
pop
sti
push
dec
inc
pop
rolb
sbb
inc
stos
inc
pop
test
repnz
cmp
or
scas
lret
jns
jb
imul
push
rolb
cmp
loope
push
out
pop
jp
xlat
dec
gs
mov
jge
or
mov
cld
or
dec
ret
mov
adc
std
cmp
mov
test
jns
cmpsl
dec
scas
aad
mov
sub
insb
jo
mov
push
iret
dec
add
int3
js
insb
scas
cltd
in
jp
mov
popa
mov
stos
pop
sub
stos
aad
mov
into
lea
fwait
pop
pop
inc
fwait
lahf
into
out
fsubrl
shl
mov
adc
adc
inc
stos
stos
push
jbe
enter
gs
jne
jo
adc
sbb
mov
movsb
loopne
gs
scas
push
ficoml
aam
and
sub
pop
push
daa
mov
divl
mov
scas
jns
adc
nop
jns
jo
and
aaa
mov
sbbl
pop
mov
test
int3
mov
inc
lock
jle
lcall
sbb
xor
inc
mov
adc
ljmp
mov
push
rorb
fildl
hlt
add
mov
mov
test
add
xorl
shlb
subb
outsb
arpl
mov
add
inc
pop
mov
fsqrt
sarb
bound
lret
inc
repz
mull
xor
jecxz
mov
jb
mov
aaa
shrl
pop
xor
sahf
les
lods
sub
cltd
xchg
sbb
jle
dec
cld
fists
or
lret
xor
je
shrb
mov
mov
ficoml
jbe
lods
out
outsl
push
outsb
sbb
loope
in
incb
shll
jne
push
fisttpl
and
aas
push
and
or
into
push
enter
mov
enter
xchg
pop
sub
add
ret
test
push
rorb
or
inc
xor
or
pop
xlat
pop
pop
cmpsl
or
in
stos
dec
dec
pop
mov
xchg
das
mov
adc
aad
lods
jmp
pop
mov
jmp
jns
loop
lods
ret
aaa
mov
mov
xor
lret
pusha
xorb
push
mov
not
inc
jge
push
jb
xchg
xor
inc
and
pop
sub
shr
scas
testb
cmpl
repnz
sub
stc
leave
stos
out
gs
hlt
push
ficomps
stos
insl
imul
cmp
mov
dec
ljmp
bound
test
in
ret
jg
aas
jl
outsb
sarb
rol
jb
jp
gs
or
shl
fsubrl
jnp
mov
jge
push
andl
int
cmp
mov
aad
in
aam
inc
enter
cltd
dec
aaa
lods
sub
mov
push
sbb
mov
ljmp
fsubrl
dec
sub
cmp
sbb
jns
dec
les
dec
dec
mov
les
mov
adc
pop
out
fimull
insb
sub
out
mov
dec
fwait
roll
push
jae
mov
data16
or
rcrl
ret
adc
mov
xor
jae
vpandn
xchg
ljmp
mov
fsubrs
xlat
or
xchg
repz
xchg
lret
inc
dec
adc
gs
out
psllq
call
fistpll
orb
xchg
pop
mov
inc
dec
sbb
inc
int3
mov
or
xchg
inc
lcall
jo
ss
aam
sbb
scas
pop
imul
outsl
mov
dec
mov
pushl
leave
repnz
mov
inc
or
ds
mov
and
pop
fdivrs
jp
call
dec
mov
jecxz
dec
cs
xchg
sbb
insl
xchg
pop
aaa
cltd
hlt
push
pop
add
pusha
addr16
inc
inc
in
pop
cmp
xor
pop
cs
rcrl
roll
sahf
xchg
push
fwait
test
lcall
mov
out
loope
xchg
sub
jae
jbe
les
cmp
jne
add
pop
insl
int
mov
int3
in
mov
or
push
leave
push
pop
outsb
sbb
adc
push
inc
xchg
les
mov
mov
inc
out
xchg
xchg
in
mov
lahf
in
sub
sub
lods
and
repz
imulb
xchg
jno
int3
rorl
cmpsb
xchg
insb
lcall
iret
pop
mov
jae
out
push
inc
dec
hlt
sbb
or
push
orb
mov
rorl
imul
or
mov
fnstenv
pushf
dec
pop
addb
cwtl
and
inc
lds
cmpsb
out
arpl
pop
bound
inc
mov
aaa
xor
loope
pop
and
movsl
lds
in
test
push
pop
xchg
mov
pop
adc
lock
mov
lahf
fnstcw
push
ficoml
push
dec
xlat
pop
es
or
dec
icebp
test
lret
call
sbb
cmp
sti
pop
mov
jbe
pop
sahf
push
cli
orl
outsb
dec
jmp
jle
adc
sbb
mov
std
mov
dec
loopne
mov
jl
in
dec
aam
sti
push
sbb
into
adc
adc
cwtl
or
push
ljmp
popf
lret
nop
ss
ret
outsb
dec
inc
sub
je
jmp
pop
enter
fdivr
mov
jg
test
add
rolw
fs
inc
dec
decl
in
mov
mov
aad
aad
dec
mov
push
mov
cmc
jne
int3
decb
inc
pop
dec
fmuls
fcomps
test
repz
push
mov
in
icebp
and
shlb
int3
and
js
push
xchg
stos
arpl
cmp
pop
mov
pop
in
cli
rcll
push
pop
shlb
sti
jge
xchg
sub
mov
sbb
hlt
adc
or
std
insl
mov
inc
lret
jb
out
aas
pusha
insl
dec
xchg
xchg
jmp
mov
xor
inc
pop
das
mov
push
jge
cmp
ds
push
add
repnz
mov
cwtl
sbb
dec
cmp
mov
mov
ret
push
std
dec
xchg
ds
lock
aaa
push
lds
pop
in
inc
add
aaa
repz
aam
and
add
adc
push
shlb
xchg
lret
mov
sub
inc
ret
or
aas
btr
pop
cltd
cltd
in
sub
dec
jns
or
pop
into
pop
jp
mov
mov
out
dec
jnp
jnp
ret
les
adc
pusha
test
mov
mov
out
cs
les
scas
daa
sub
cli
xchg
movsl
out
mov
loopne
pop
popf
jecxz
dec
jmp
sub
and
cmp
push
incl
sbb
cmp
add
cltd
rdpmc
test
lods
sbb
xchg
adc
or
lds
inc
adcb
push
ds
lcall
pop
stos
inc
lds
pop
std
jno
cwtl
sbb
and
adc
nop
xlat
or
out
aas
sar
pushf
pushf
mov
dec
push
mov
icebp
aam
jae
jae
ret
sub
add
xlat
cmp
or
xor
mov
jmp
test
stos
xchg
outsb
push
aaa
lods
out
and
xchg
mov
fisttpl
ss
pop
out
jge
inc
push
mov
outsb
imul
mov
dec
inc
mov
xchg
or
push
sahf
inc
cltd
test
das
hlt
or
mov
daa
insb
nop
imul
add
or
lahf
add
pop
outsb
call
pop
mov
mov
out
mov
and
sbb
dec
cli
scas
pshufw
jnp
jmp
iret
mov
mov
adc
addr16
add
jl
sub
cmp
add
mov
ror
xchg
dec
add
out
push
lcall
fwait
or
mov
mov
dec
add
or
add
clc
data16
fidivl
adc
addr16
adc
lock
sub
mov
aam
inc
nop
loop
jle
mov
jl
xchg
jo
fidivs
sbb
pusha
xchg
sub
push
mov
add
pusha
popf
inc
sub
pushf
cli
in
je
loope
inc
adc
pop
or
sahf
mov
and
mov
pop
lahf
pushf
xor
pop
mov
push
xchg
push
lods
or
jge
sbb
loop
int3
popf
loopne
sub
fsubrs
pop
outsl
pusha
mov
xor
and
fstp
dec
call
push
call
jb
or
negb
pop
ja
fsubl
mov
inc
mov
and
sub
test
imul
inc
movsb
test
cmp
sahf
and
jl
dec
dec
mov
jge
jne
pop
jnp
outsl
loop
xchg
cmp
mov
cmp
in
adc
icebp
or
cmp
xchg
ficoml
adc
das
lods
add
mov
adc
cmp
and
jp
jae
bound
mov
pop
add
dec
push
inc
cmpsl
andb
rcll
cmp
ss
jb
dec
push
call
sbb
dec
lret
clc
imul
inc
test
or
xchg
cli
es
int3
add
mov
jne
sub
xchg
loopne
jle
ljmp
xor
aad
or
js
lds
jge
sbb
push
call
add
push
andl
mov
dec
imull
add
mov
repnz
jbe
push
adc
cmp
push
pop
mov
xor
add
mov
dec
sbb
inc
dec
data16
cmpsl
cld
shl
out
dec
jp
mov
int
adc
es
inc
sahf
popa
ret
pop
lret
dec
add
dec
mov
outsl
xor
mov
xchg
add
mov
ja
test
les
insb
out
sub
xchg
and
out
bound
push
dec
adc
sub
sub
rep
shlb
js
lcall
fists
inc
ret
sub
pop
dec
ljmp
out
ss
or
cmp
xchg
mov
outsl
mov
add
xor
xchg
cmpsl
xor
pop
inc
xchg
push
xchg
mov
arpl
insl
sub
or
aaa
sbb
jl
xchg
xor
enter
sbb
push
out
faddl
or
pusha
js
mov
sub
cs
pop
fbld
movsl
shlb
jle
test
jnp
jb
pop
or
pop
cmp
inc
hlt
or
cld
hlt
jo
mov
xchg
int
push
stos
sti
pop
andb
adc
pop
data16
add
enter
es
xor
adc
mov
sarl
outsb
push
jns
or
cmp
add
sti
cmp
mov
loope
out
lcall
mov
cltd
and
jae
popl
cmp
mov
fstpt
das
push
je
ret
sub
cmp
loope
fisttpll
mov
mul
or
xchg
movsl
mov
mov
mov
bound
xorb
cmpsl
pusha
sub
mov
mov
enter
shrl
test
clc
jb
shll
iret
ds
test
nop
ds
test
sub
add
add
fbstp
pop
jl
pop
sbb
inc
and
inc
ljmp
notb
fcoms
decb
outsl
cmpb
scas
dec
outsb
adc
dec
das
ficomps
pusha
pop
jb
lret
jl
pop
call
negl
inc
aad
daa
dec
lcall
cli
out
or
pop
in
add
call
adc
test
inc
adc
add
mov
or
lods
into
shl
sub
push
inc
pushf
cltd
inc
add
adc
mov
test
imul
rclb
sub
cltd
movsb
call
ljmp
mov
push
jnp
jbe
mov
out
mov
push
inc
xchg
insl
es
cmp
stc
sbb
in
sbb
cli
push
pop
mov
jmp
stos
adc
cmc
aam
add
cwtl
xchg
mov
pop
sbb
push
pop
push
xchg
fisubrs
add
add
mov
rol
pop
lret
dec
out
data16
imul
push
rcrl
fiadds
push
inc
dec
push
fwait
xlat
pop
ds
out
jns
lock
in
jb
lods
jne
adc
and
add
cmc
jecxz
imull
mov
mov
ret
push
lock
dec
jb
jp
jp
push
adc
in
sub
mov
cmp
pusha
jg
push
or
push
pop
sarb
iret
mov
in
push
dec
sub
jmp
mov
push
mov
jmp
mov
xchg
lcall
pop
or
loope
jmp
loop
jecxz
fists
ret
addr16
lret
test
fstps
cmp
mov
add
ja
mov
and
icebp
mov
xchg
fcmovb
add
jp
enter
xchg
mov
cmpl
fs
outsb
test
inc
lods
and
or
int
test
pop
fs
adc
sti
jmp
inc
pop
jnp
jmp
into
imul
pop
dec
ljmp
mov
movsl
addr16
add
mov
sub
cmc
xor
ror
imul
out
jno
push
mov
add
push
xchg
into
xor
xor
arpl
sub
dec
mov
adc
sahf
insb
cmpsb
cld
cmp
mov
push
scas
addr16
mov
jge
xchg
mov
mov
jo
mov
bound
sbb
jno
repnz
cltd
sysenter
jge
lods
xchg
cwtl
icebp
add
mov
mov
inc
jp
lock
cmpb
fbld
arpl
jmp
das
inc
sbb
xor
jmp
bound
sub
sub
les
cmp
cmpl
mov
cli
fwait
bound
popf
lret
movsb
enter
cltd
ja
sub
cmp
cmp
lods
push
fisubrl
inc
cmpl
mov
sub
sbb
loope
movsl
lds
arpl
cwtl
adc
leave
mov
int3
cli
or
sub
or
adc
cmp
rol
outsb
icebp
les
dec
imul
mov
xchg
imul
rclb
or
sti
jb
sub
and
dec
dec
outsl
mov
movb
out
pusha
bound
mov
jbe
iret
in
mov
stos
push
je
add
pop
aas
sbb
mov
cmp
fs
lods
sti
mov
adc
add
das
das
jo
push
dec
pusha
fimuls
push
xchg
pop
jl
dec
push
sub
adc
mov
pop
ret
fucomi
mov
scas
mov
push
gs
mov
xchg
mov
inc
je
inc
inc
push
mov
mov
sbb
add
push
ret
cmp
jnp
xor
xchg
mov
mov
jecxz
add
jnp
movsb
add
call
push
scas
inc
jmp
loop
pop
std
fildl
test
movsl
cmp
mov
cwtl
mov
loop
jecxz
mov
lea
mov
sbb
jg
push
cmp
popa
sbb
in
xchg
sub
mov
dec
lods
dec
or
or
sbbl
dec
loope
ss
xchg
not
addr16
pop
dec
mov
mov
ret
sub
fbstp
pop
xor
fs
out
lods
iret
sbb
sub
fldt
push
sbb
out
sti
sbb
in
scas
cmp
and
repnz
aas
jge
dec
ret
push
lea
and
je
clc
jnp
sbb
adc
sarl
mov
iret
or
pusha
push
cwtl
adc
and
pushf
and
adc
notl
xchg
mov
std
imulb
shlb
enter
cltd
fsubrl
dec
add
aad
cmp
popa
inc
mov
mov
dec
mov
lods
pop
push
vpinsrw
ljmp
push
shrb
mov
jmp
adc
cmp
scas
mov
out
cmp
add
mov
dec
jnp
add
xchg
mov
pusha
sub
rol
ss
or
into
mov
rcrl
adc
out
clc
lcall
aam
push
mov
pop
jae
lock
negl
fstpt
jp
pop
mov
and
stos
sbb
inc
adc
push
stc
dec
mov
push
loop
nop
ret
cmpsb
lock
pop
cmp
test
xor
aaa
sarl
ret
pusha
fidivs
clc
or
cmc
popa
jp
jnp
sbbl
xchg
inc
xchg
and
mov
aad
adc
jge
daa
cwtl
add
lcall
movsl
mov
test
push
test
add
and
out
inc
in
xchg
xchg
add
testb
xchg
push
stos
ljmp
push
dec
push
push
xchg
lahf
inc
and
ss
aaa
sahf
mov
adc
fldcw
and
out
mov
lret
icebp
mov
pop
popf
xor
lahf
test
fildll
xchg
cmp
fwait
and
cltd
push
movsl
ret
loope
add
xor
movsb
and
rcrl
aad
gs
push
fmull
out
test
xlat
lods
leave
jle
stos
pop
mov
sbb
push
sahf
adc
push
and
lock
icebp
sub
ljmp
push
jne
aam
xlat
popa
repz
fs
jae
jmp
adc
gs
pop
cmp
and
add
imul
xchg
push
pop
sub
insb
iret
inc
mov
fcomi
jae
in
xlat
pop
inc
adc
xor
xchg
inc
fdiv
popf
add
jo
add
sarl
adc
dec
push
sub
sbb
inc
mov
add
push
js
leave
push
jge
cmp
xor
xchg
and
jns
push
rcrb
bound
sbb
or
adc
push
xchg
cltd
mov
into
xor
adc
dec
add
fnsave
push
ret
fcoml
in
aas
xor
mov
leave
cmp
scas
fistps
jp
dec
mov
dec
dec
fisubrs
scas
pushf
inc
cmc
addr16
sbb
xchg
mov
lcall
rol
ret
lods
or
jno
inc
outsl
stos
into
inc
sub
adc
jbe
sbb
xor
loopne
mov
mov
or
gs
add
jecxz
pop
fwait
dec
xchg
fildll
cs
xor
sub
pop
adc
jle
jns
arpl
mov
push
xor
sub
xor
sbbb
add
fistpll
jge
clc
mov
cs
imul
add
pop
jge
cmp
xchg
mov
pop
push
pop
mov
sbbb
das
add
mov
nop
push
imulb
data16
es
add
imul
pop
xor
aam
adc
das
mov
and
test
jb
adc
lods
nop
push
test
out
insl
shlb
and
rcr
jge
bound
push
daa
pop
aas
in
into
loope
gs
lret
mov
adc
bound
dec
stos
fiaddl
add
mov
sbb
incb
mov
aas
mov
jp
push
push
dec
pushf
stos
int3
jl
push
push
mov
push
pop
cld
pop
dec
fnstsw
outsl
mov
sbb
pop
lods
or
mov
out
test
cld
mov
mov
dec
aad
adc
mov
cli
add
sub
sti
out
out
inc
add
sub
cmp
test
cmpb
and
xchg
add
loope
ret
addb
inc
mov
in
mov
loope
pusha
sbb
rcrb
mov
sbb
xlat
and
aad
jmp
mov
into
fs
pop
push
mov
add
fdivrl
clc
outsb
in
inc
outsl
int3
mov
mov
mov
push
stos
adc
ds
adc
rcrb
adc
repz
xchg
dec
cmp
push
lds
test
lahf
push
leave
int
jbe
jno
add
xchg
iret
adc
jge
and
sub
cld
jg
push
and
mov
jl
xchg
fwait
jae
test
stos
ret
imul
test
sub
cmp
mov
jmp
push
loop
mov
push
movsl
or
push
in
icebp
xchg
push
movsl
pop
mov
pop
or
ret
xchg
aam
jne
cltd
pop
sub
mov
xor
cmp
xor
jb
jnp
rcrl
inc
jae
mov
add
es
push
mov
dec
pusha
dec
clc
xor
jns
jecxz
in
sbb
fstpt
insb
out
mov
data16
hlt
add
cmpsl
cmpsl
push
mov
repnz
pop
pop
mulb
nop
jmp
mov
outsl
xorl
mov
xchg
fiadds
mov
mov
jmp
test
or
fldcw
mov
hlt
iret
repz
push
pop
mov
pushl
push
sahf
mov
nop
sahf
notl
mov
and
pop
push
pop
mov
dec
mov
pop
shld
xchg
jb
outsb
mov
cwtl
gs
add
jp
pop
pushf
stos
push
inc
es
and
pusha
cmpsb
stos
push
popa
mov
sbb
mov
into
xorb
pop
roll
mov
rcll
ja
fimuls
fists
xor
dec
popf
test
jle
jle
or
xchg
mov
push
push
mov
sub
or
sbb
daa
in
adc
rcrb
mov
sar
fsts
ss
in
add
mov
loop
dec
add
and
adc
daa
xchg
rorl
fistpll
mov
mov
test
pop
jbe
scas
or
mov
cld
pop
test
pop
repz
aaa
test
test
pop
cld
clc
or
stos
mov
pop
popa
push
pop
ljmp
shrb
push
test
cmp
popa
lods
fistpl
sub
sahf
push
cmc
shll
jb
sub
pop
insl
mov
xor
xor
xchg
cltd
pusha
lea
sbb
mov
push
lcall
jns
pop
mov
pop
xchg
fisubs
je
scas
stc
sub
adc
mov
insl
push
push
iret
adc
addb
and
and
arpl
sub
jp
les
movsl
or
cli
sub
push
mov
or
testl
adc
cmc
lock
cmp
rorb
add
jge
cmp
adc
mov
mov
inc
loop
es
fisubs
outsb
push
jae
stos
int
jo
pop
scas
test
lahf
repnz
lea
jl
popf
ja
xor
sbb
mov
mov
push
in
mov
addr16
repz
mov
jae
scas
nop
stc
inc
mov
stos
loop
cmpsl
mov
insl
inc
sbb
outsb
adc
divb
and
mov
dec
gs
movsb
cmp
push
push
xlat
inc
insl
lock
ret
and
fcomps
aaa
push
popf
xor
leave
out
ds
outsl
aad
test
pop
test
movsb
pop
lcall
xlat
sahf
cmp
adc
sahf
xchg
call
cmp
into
push
mov
inc
jmp
repnz
inc
mov
dec
aas
out
pop
dec
mov
fdiv
aaa
data16
jecxz
pop
aaa
fprem
and
sahf
xor
inc
jnp
loope
movsb
shlb
les
adc
rcr
adc
xchg
repz
inc
hlt
lahf
and
fwait
dec
setne
mov
pop
loopw
imul
dec
cs
ljmp
xlat
mov
push
rolb
dec
jl
add
mov
shlb
aad
adc
lret
daa
add
fidivrl
push
inc
sbbb
add
fmuls
gs
xor
mov
xchg
pop
push
iret
mov
cmp
jecxz
inc
push
inc
push
popf
es
lret
imul
sub
and
jle
and
push
or
rcrl
cmpsl
pop
jl
lcall
cmp
pop
add
loop
pop
jmp
popa
cmpb
aas
in
and
cld
jl
jbe
jno
xor
addb
pcmpgtw
mov
jno
fcmovnbe
aaa
pusha
in
jns
popf
xor
mov
and
and
scas
mov
xlat
shlb
mov
cld
jnp
pop
mov
ja
lret
shr
adc
bound
push
mov
push
add
xor
imul
repz
or
lret
sbb
lock
jle
mov
data16
repnz
jo
cmp
outsl
shrb
shll
negl
push
ds
lcall
xchg
outsl
imul
jmp
test
es
jbe
imul
add
shr
push
ja
mov
push
pop
push
out
test
pop
mov
mov
jmp
cmp
push
sahf
mov
scas
push
jae
fsub
sbb
fdivs
push
and
sub
jge
scas
out
iret
cmpsl
in
shrl
xchg
sub
xchg
adc
cld
inc
dec
jle
dec
stc
sub
mov
pushf
cmp
sub
mov
test
sbb
mov
mov
cwtl
cmc
ljmp
insl
out
inc
inc
and
sub
ret
data16
fdivs
das
mov
testl
fucom
cmp
lock
jbe
push
ss
scas
stos
sub
sub
jmp
enter
push
js
sti
adc
cmpsb
lea
adc
shrl
mov
xor
mov
push
pop
insl
aam
adc
pop
xchg
jge
jo
dec
ljmp
adc
scas
mov
or
push
out
shll
call
ret
push
stos
pop
jp
scas
repnz
dec
mov
push
bound
test
repnz
xchg
outsb
cmp
jg
nop
leave
jnp
gs
pop
insb
out
sar
dec
xchg
aas
push
out
fisttpl
lcall
inc
repnz
jl
testb
std
mov
ret
jecxz
jbe
cmp
insl
repnz
jl,pn
push
add
iret
cmpsl
and
decb
repnz
jl
pop
sarb
adc
add
mov
mov
add
cmp
xor
dec
mov
arpl
loopne
iret
xchg
and
xor
xor
jno
push
and
inc
push
mov
sarl
or
insl
and
js
push
or
or
ss
mov
mov
mov
cld
mov
stos
out
jge
sbb
mov
jo
add
in
dec
pop
icebp
push
add
jne
adc
mov
jne
stc
inc
push
iret
ja
nop
mov
or
push
aam
push
jbe
stc
dec
add
out
call
mov
add
scas
andb
js
jl
dec
cs
fimuls
in
hlt
xchg
lock
adc
imul
inc
xchg
jb,pt
ljmp
cwtl
leave
mov
xor
inc
andb
add
xlat
sbb
cmpsb
cmpsl
lods
test
rcll
mov
insl
inc
pushw
adc
push
push
pop
jne
dec
out
fsubrs
addr16
fnsave
dec
push
or
je
push
xor
bound
cmp
jg
or
adc
enter
mov
shrb
cmp
addr16
movsl
sbb
pop
mov
xchg
repnz
jns
jecxz
mov
leave
sahf
enter
aaa
cmp
mov
push
xor
inc
sbb
dec
and
mov
mov
dec
cmpsb
mov
test
and
cwtl
pop
xor
cld
faddl
lods
sub
testb
rolb
jle
xchg
negl
inc
jge
bound
mov
jnp
outsl
push
cmpsb
mov
pop
lea
xchg
xchg
sarl
xchg
andl
lret
cwtl
addl
dec
dec
jbe
hlt
incl
pop
popl
pop
iret
ficomps
jmp
sbb
jb
lods
inc
pop
mov
arpl
dec
add
stc
jg
ds
and
out
push
mov
fdivrl
repnz
fdivs
mov
fdivrs
cmp
test
inc
sbb
jl
inc
cmpsl
movsl
dec
in
enter
dec
push
pop
fisubs
cmp
lret
jp
gs
rol
lds
repz
fs
pop
negl
fnsave
jae
ret
mov
adc
pop
pushf
lea
mov
lds
sub
xor
mov
bound
cli
idivb
test
fwait
mov
jmp
sti
hlt
xchg
and
pop
imul
mov
xor
xchg
jle
xchg
stos
jecxz
cmp
jae
rcrl
es
fstps
stc
sbb
icebp
cmc
mov
lret
mov
adc
subb
les
shrl
pusha
mov
jb
add
movd
roll
pop
adc
jecxz
xchg
xor
inc
jg
and
lcall
xchg
sbb
mov
mov
je
ss
ljmp
and
cld
xchg
sub
jle
sbb
push
vandnps
int
jle
js
shll
ds
scas
aaa
ret
push
lock
xchg
mov
jns
cmp
out
inc
push
push
xorb
adc
pop
mov
push
push
imulb
shrb
insb
jge
push
cs
push
cmp
out
cld
jb
aaa
xor
sub
aaa
sbb
pop
je
lods
ds
cmp
push
lcall
addr16
lds
mov
cmp
lea
in
lret
data16
stos
hlt
add
cmc
push
cmpsb
lea
mov
cmpsl
rcrb
js
and
sbb
lods
imul
je
dec
sub
shr
xchg
mov
scas
mov
add
and
xor
push
mov
inc
xchg
out
fildll
cmc
movsl
aaa
dec
add
imul
adc
jecxz
sub
or
jo
arpl
cmp
and
jl
cmp
add
sarl
lods
outsl
or
je
cmp
scas
mov
stc
jecxz
mov
test
mov
hlt
int
mov
pop
addr16
cmp
stos
daa
pop
and
std
jns
cltd
jne
push
mov
cli
pop
imul
nop
jecxz
dec
out
adc
cmp
sbb
into
mov
cmc
gs
mov
or
popf
push
sbb
std
xor
pop
outsl
imul
xor
sarl
xor
dec
icebp
adc
scas
cmp
cmp
or
in
daa
mov
dec
cmp
jecxz
out
xor
mov
fldl
lds
gs
cmc
pop
cmp
push
in
cltd
into
add
addr16
jb
sub
loopne
movsl
das
roll
aad
in
fnstcw
nop
int
iret
shl
loop
and
mov
mov
mov
xchg
lcall
subl
std
mov
dec
push
ficoml
mov
mov
lds
jmp
jmp
shl
mov
gs
cmpsl
pusha
sbb
stos
test
lods
adc
add
xchg
pop
arpl
adc
les
ret
stos
xor
or
mov
lcallw
insb
push
sbb
jmp
imul
jle
jo
dec
lods
add
sub
mov
cmp
outsl
das
push
jl
nop
cmpl
xor
sbb
pop
mov
xlat
cltd
or
push
pusha
aaa
mov
in
int
mov
in
rolb
jge
out
sbb
push
and
mov
scas
dec
les
fwait
xchg
js
cmp
xchg
sub
sub
adc
cmp
sub
ret
leave
xchg
jmp
pushf
ja
and
pop
imul
fisttpll
pusha
subl
js
mov
out
xor
mov
out
cmp
add
mov
lods
xor
mov
cmp
pop
jge
jno
lock
jl
enter
out
stc
add
aas
rorl
aas
push
mov
pushf
push
mov
mov
xchg
or
dec
mov
test
push
call
jle
mov
sub
sbb
aam
cmpsl
outsl
inc
icebp
andps
add
sbb
and
les
and
push
xor
fidivl
adc
add
cmp
test
daa
inc
loop
sub
in
ja
sbb
lods
stos
enter
lds
and
rcr
dec
inc
mov
rclb
mov
test
out
shl
lret
fstl
ret
mov
or
into
and
in
dec
fidivs
mov
inc
xchg
mov
addb
mov
in
push
ror
sarl
push
aad
les
jmp
int
add
mov
dec
scas
or
aad
repz
sub
dec
xchg
scas
insl
pop
pop
cmp
shlb
cmp
jne
lahf
or
and
xchg
push
rcrl
dec
mov
aad
lock
in
in
dec
icebp
xchg
rcrl
aad
outsl
in
popf
cs
mov
inc
add
iret
cmp
cmp
cltd
dec
push
scas
mov
cmp
es
outsl
push
ds
popf
push
test
mov
jb
andl
inc
jno
xchg
scas
shll
mov
mov
fwait
lcall
ficoms
stc
hlt
xchg
andl
lahf
std
mov
lcall
insl
add
mov
fwait
xchg
arpl
push
mov
sbb
movsb
xor
les
scas
sub
in
and
cltd
mov
xchg
dec
cmpsl
jmp
orl
pop
repz
push
mov
fdiv
negb
xchg
pop
jp
je
fistpl
sub
daa
orb
movsl
popf
push
mov
cmp
adc
cmc
insb
aas
mov
out
test
sub
fs
mov
jg
dec
dec
inc
mov
mov
sub
lods
in
scas
stc
loop
jp
sbb
adc
roll
add
sbb
mov
dec
sbb
xchg
and
inc
hlt
loopne
rorl
add
sbb
xor
out
js
divps
adc
lods
ret
shrb
loopne
lret
shll
dec
pop
repz
pop
jbe
pop
cmp
cmp
outsb
xchg
and
add
jae
cmp
mov
inc
repz
in
mov
dec
xor
adc
aas
push
movsb
inc
push
movsl
js
fistl
es
shrl
mov
ja
ret
fs
inc
push
fwait
pop
pop
mov
or
mov
sub
pop
pmulhw
lahf
lods
inc
lret
cs
push
xchg
scas
jecxz
mov
ja
mov
mov
pop
pop
dec
xchg
subb
mov
xchg
int
notl
arpl
aaa
jle
mov
inc
in
aaa
pop
push
jge
in
dec
rorb
or
ds
jp
push
ret
xor
pushf
cmpsl
cmp
cld
cmpsb
xchg
call
inc
adc
lea
dec
pusha
jae
xlat
xor
sbb
xor
ret
fwait
sahf
fwait
loop
outsb
ficoms
in
insb
add
or
jle
pop
xor
shlb
xor
test
or
and
add
test
inc
jmp
daa
cmp
imul
std
mov
push
add
je
inc
arpl
lahf
cmpb
mov
jle
mov
test
cmp
xor
dec
sahf
es
mov
lds
call
lock
jns
cmp
aam
mov
cli
sub
repnz
push
pop
push
jbe
rorl
aaa
fcom
sub
lahf
adc
dec
xchg
pop
in
or
std
push
sub
repnz
cmp
inc
jb
dec
cmp
xchg
xchg
cmpsb
mov
gs
jmp
out
pop
mov
popf
repz
adc
sbb
or
jl
add
adc
inc
mov
ret
adc
jp
mov
or
dec
xchg
clc
orb
jbe
cld
xor
test
or
pop
fadd
inc
pop
and
data16
shr
and
pusha
lock
pop
mov
sub
ret
push
int3
pop
xor
adcb
add
shl
jnp
fs
dec
jns
stos
sub
lock
push
pop
ljmp
inc
mov
out
addl
or
jmp
xor
fs
insb
sbb
cmp
add
das
jmp
outsb
iret
repnz
loopne
popl
xchg
xor
in
ffree
call
out
outsb
add
push
mov
rol
and
mov
movsb
mov
pop
sar
adc
and
sahf
push
in
xor
mov
movsl
mov
dec
pop
inc
mov
fbstp
sbbb
cmc
lret
cld
cmpsl
or
fisubl
les
and
ret
into
shlb
dec
test
or
adc
cld
cs
xor
add
lds
and
js
jae
loopne
mov
xor
test
rclb
xor
call
or
or
add
dec
aam
mov
jns
sbb
daa
push
or
daa
ret
cmp
scas
adc
pop
mov
fcos
jg
jns
fcoms
insl
or
idivl
cltd
mov
xor
bound
aam
iret
mov
outsl
sub
test
xor
add
mov
mov
insl
into
mov
out
jae
jl
lock
shlb
mov
jne
add
popa
cmp
inc
adc
int3
std
push
cmp
jmp
sbb
je
dec
pushf
xlat
imul
ror
addr16
inc
dec
cmpsb
xchg
add
mov
sbb
add
stc
js
insb
shll
adc
insl
pavgw
mov
pop
or
sub
add
negb
loop
adc
dec
mov
and
jae
or
fnstcw
popa
xchg
push
arpl
fstps
add
mov
add
sbb
pop
mov
push
mov
popf
femms
lods
mov
stos
sbb
shll
sbb
movsb
pop
push
dec
test
adc
dec
test
test
lock
xchg
aas
pusha
leave
inc
repz
fldenv
popf
xor
in
movsb
inc
insb
mov
aaa
lcall
push
dec
xchg
aam
outsb
pop
jo
cwtl
cltd
xchg
fs
stos
or
ret
pop
add
popa
push
fwait
test
testl
mov
add
imul
imul
outsb
cmp
jno
adc
sub
push
aaa
xlat
notb
inc
fwait
sbb
aad
pop
cmpsl
xchg
adcb
fcoms
repnz
xchg
ret
xchg
cmp
xchg
lahf
repnz
ret
shrl
xor
xchg
jp
xchg
xchg
add
dec
ret
cltd
aad
out
daa
test
xchg
lods
scas
add
es
cmp
jecxz
das
or
ss
ret
aas
ja
fisttpl
ret
sbb
fwait
aas
cmp
cs
xchg
dec
mov
mov
mov
sbbl
fcomi
std
xor
xchg
stos
sti
pop
and
testb
aam
ss
xorl
add
testl
cli
sub
inc
int
mov
aaa
push
inc
jge
xor
js
dec
xchg
xchg
test
andb
jae
cmp
outsb
pop
jecxz
mov
test
sbb
jnp
js
and
cmpl
jns
mov
dec
pop
in
out
mov
ljmp
cmc
dec
loope
test
jnp
out
mov
mov
in
daa
aad
mov
jne
popa
pop
iret
cmp
shr
mov
pop
ret
mov
push
cmp
pop
outsb
inc
test
push
mov
repnz
inc
test
mov
lahf
pop
lahf
mov
adc
inc
and
outsl
jne
mov
or
dec
inc
jl
nop
or
ss
jl
push
cmp
lret
in
add
mov
or
lds
lds
movsl
stos
test
xor
xchg
fidivrs
arpl
cmp
movsl
cmp
mov
cwtl
pop
mov
jle
fstl
addr16
ds
daa
ret
rorl
mov
dec
fstenv
adc
enter
add
mov
mov
mov
jge
or
xlat
pop
sub
out
arpl
fdiv
xor
jmp
cmp
insl
dec
pop
lea
adcl
stos
dec
imul
dec
mov
cld
rclb
sub
mov
xchg
dec
xchg
mov
push
cmpsl
lock
mov
adc
cld
test
xchg
add
orl
push
popf
pop
jl
icebp
test
out
adc
xchg
pop
sbb
in
pop
shrb
loop
insb
cmp
incb
adc
es
mov
orl
leave
lock
data16
insl
pusha
lods
inc
mov
imul
icebp
inc
pop
dec
test
xchg
xor
gs
push
pop
jo
inc
jmp
add
xorb
and
pop
nop
mov
xchg
and
scas
call
bound
ret
mov
mov
mov
jmp
push
mov
jbe
lahf
jl
jecxz
pop
aad
out
jl
pop
outsb
sbb
and
rorb
add
mov
xlat
sub
fidivrl
add
cmp
jae
cmp
lahf
gs
push
push
sub
add
into
or
insb
xchg
push
push
in
fnsave
fcomi
lea
cmp
cltd
cmp
dec
xor
loop
out
aas
pushw
pop
das
jle
sbb
insb
push
in
imul
stos
lret
push
int
cli
out
add
int3
insl
out
in
ja
dec
jmp
push
aaa
add
mov
loop
sub
jle
and
push
xchg
pop
or
xchg
or
push
mov
aas
arpl
dec
js
aaa
lods
popa
movsl
xchg
aaa
push
sbb
push
ljmp
lds
push
mov
mov
insl
sub
add
pop
jae
push
sbb
cld
xor
push
cs
pop
jbe
test
cmp
mov
ret
mov
incb
adc
arpl
adc
cmp
and
fnstsw
shll
in
and
in
test
into
in
cmp
lret
adc
sub
pushf
mov
fcmovnb
insb
cmp
push
test
xor
std
dec
mov
frstor
adc
hlt
test
jne
pop
fdivp
and
shl
insb
orb
push
pushf
jns
dec
mov
pop
mov
iret
cli
scas
sbb
xor
test
and
xchg
or
jns
pop
shrl
mov
fisttpll
iret
xchg
aam
dec
sub
lahf
outsb
outsl
clc
xchg
add
mov
scas
sarl
cli
out
aam
sub
movb
push
rcl
fstpl
subl
pop
mov
lea
ljmp
in
mov
add
ss
or
sub
mov
in
lock
in
mov
cmc
lret
xchg
int
andb
push
sub
rcr
push
divl
icebp
push
push
aaa
cwtl
add
test
mov
sub
loopne
repz
push
add
add
loope
push
jecxz
sbb
in
xchg
mov
jl
jnp
inc
mov
cltd
lea
inc
imul
inc
jne
mov
inc
imul
push
imul
or
jo
dec
ljmp
fmuls
sbb
and
add
push
mov
push
mov
inc
lret
out
pop
out
jge
sbb
push
sbb
loop
mov
jne
add
fs
repnz
repnz
pop
jle
inc
cwtl
pushf
sbb
mov
stos
dec
aaa
mov
fsubrs
lret
mov
jbe
push
fistpl
mov
mov
arpl
mov
pop
cmp
test
aad
call
cmpb
es
mov
rclb
mov
xchg
out
mov
ss
push
mov
inc
pop
arpl
xor
lahf
mov
test
push
add
jg
adc
lcall
push
lock
hlt
xchg
sti
fildll
loop
scas
repz
mov
ucomiss
cmp
xchg
inc
xor
lea
ret
ja
andb
dec
lods
call
repz
cmp
call
push
mov
jp
adc
jmp
call
mov
xchg
push
adc
scas
testb
push
orb
fdivl
imul
rcll
mov
cmp
dec
jnp
je
scas
pop
jo
lds
jb
adc
imul
pop
sub
aas
mov
or
xchg
xchg
sbb
std
xchg
mov
add
movsl
jecxz
int
lods
or
push
fdivs
and
sub
adcb
into
lds
clc
pop
enter
xchg
lods
mov
jno
cmp
test
pop
adc
pop
sbb
testb
dec
icebp
test
vpcmpeqw
mov
outsl
dec
pop
mov
and
js
fmull
clc
pop
add
push
pop
push
or
inc
fldl
cmp
xchg
test
and
xlat
dec
test
xor
sbbl
test
jbe
test
mov
in
mov
inc
insb
aad
out
je
pop
sbb
sbb
xor
dec
das
sbb
out
push
fs
test
lahf
dec
mov
aas
testl
cwtl
addb
cmp
data16
sbb
sub
aaa
mov
jmp
jo
adc
shrb
push
fsubrs
lds
push
inc
xchg
fwait
es
in
sbb
loop
push
fs
pop
xor
js
lods
jne
xor
push
rcrb
xor
adcb
xchg
push
mov
xchg
test
cmpsb
and
xor
sub
xor
and
cli
int
jno
rcr
js
xchg
and
and
rol
xorl
mov
jmp
mov
sahf
add
dec
push
or
cmp
mov
aas
loopne
aaa
xchg
fisubrl
mov
lock
pushl
pusha
stos
add
mov
pop
xor
xchg
inc
addb
add
fisubl
jmp
xchg
mov
fdivr
shl
dec
inc
lret
repnz
xor
push
xchg
imulb
mov
je
pop
push
lods
mov
out
push
int
sub
pushf
pop
les
mov
fwait
test
mov
mov
outsb
or
mov
cld
out
and
and
fisttps
insl
lcall
fsubl
shlb
pop
test
pushf
mov
and
sub
hlt
popa
popa
lds
std
testl
imul
cmp
daa
faddl
lock
lea
push
outsl
or
out
jmp
mov
push
insb
pop
push
dec
fmull
adc
aas
in
fldcw
xchg
cwtl
in
pop
sub
nop
aas
test
test
add
push
mov
cwtl
sbb
ljmp
out
dec
dec
push
scas
icebp
out
popf
mov
jnp
add
leave
sbb
imul
out
dec
xor
xchg
inc
cmp
lods
sbb
sbb
lret
es
outsl
stos
inc
lods
jle
popf
push
lods
iret
movsl
aaa
xor
xchg
jecxz
push
rorb
daa
mov
dec
mov
sub
dec
in
arpl
mov
sbb
arpl
iret
leave
jp
in
and
mov
sbb
imul
pop
stc
cmp
and
test
push
adc
je
bnd
lret
cmp
pusha
es
inc
and
sub
jno
lcall
push
pop
vshufps
daa
mov
adc
out
fcomi
mov
out
xchg
fs
call
xor
add
xorb
lret
out
lcall
fimuls
loope
xor
testl
sub
test
jno
push
jo
out
xchg
or
xor
das
fadd
decl
push
xchg
and
aas
sahf
lret
ss
xchg
jg
into
pop
pop
out
push
hlt
xor
sub
cli
inc
fcomi
mov
and
movsb
in
xbegin
cmp
jl
in
jge
inc
mov
pushf
imul
enter
inc
mov
lds
jge
pop
addr16
int3
dec
lahf
inc
lcall
mov
lahf
lret
ficompl
out
outsb
or
or
sub
xchg
jae
dec
push
sub
or
lods
stos
shrb
jmp
lds
mov
popa
fdivrs
repz
bound
cltd
aad
xchg
xchg
or
dec
loop
cmpsl
rcll
mov
mov
stos
inc
aam
push
lcall
hlt
inc
mov
leave
stos
hlt
mov
sub
adc
xor
mov
sbbb
xchg
cmp
jne
sub
pop
pop
xor
push
add
and
in
fcmovbe
mov
mov
insl
or
cmp
jl
test
push
sub
push
fwait
xchg
aam
cld
push
aaa
or
mov
les
jb
xlat
lock
xchg
or
pop
adc
xchg
jae
in
add
or
sbb
std
cmp
sub
pop
mov
nop
fcmovbe
dec
dec
out
std
lds
pop
push
aam
dec
lret
sub
arpl
mov
xchg
in
imul
mov
xchg
cmp
push
in
ficoms
jo
stos
dec
pusha
outsl
enter
lahf
in
and
cmp
mov
xchg
mov
push
push
cmpsb
push
cmp
cmp
loope
sub
jmp
xor
mov
dec
xchg
movsl
jns
mov
rorb
clc
sarl
inc
jmp
repnz
xor
fildl
pusha
stc
out
ret
fwait
arpl
push
in
imul
imul
inc
mov
nop
mov
popa
movsb
jg
pop
and
cwtl
cs
cmpl
fidivrl
mov
lds
jg
mov
insl
or
xchg
add
push
pop
cmpsl
xchg
push
sbb
repnz
sbb
inc
imul
add
mov
pop
and
adc
mov
iret
pushf
leave
jno
inc
add
dec
daa
jo
xchg
shll
push
outsb
mov
cltd
lret
sub
filds
cwtl
repnz
test
adc
lods
mov
out
pusha
jnp
pop
jns
and
inc
scas
call
cmp
pop
loop
mov
test
cli
dec
je
jmp
aam
add
sbb
lock
add
scas
pop
rcr
pop
test
xchg
imul
xor
fwait
xor
rclb
cli
lea
mov
mov
mov
push
pop
mov
add
cmp
aam
add
cli
jo
mov
stos
pop
loop
scas
jl
call
sub
or
cwtl
adc
xor
loopne
insl
testl
adc
mov
xor
imul
pop
cmc
rclb
dec
inc
mov
shr
call
std
inc
pop
mov
fwait
add
les
add
lods
cltd
push
mov
lcall
jecxz
or
jecxz
orb
aas
repz
sti
push
jmp
in
add
fistps
cmp
stos
cld
jg
jae
fprem
or
ret
push
cmp
push
xor
lods
dec
std
in
mov
and
hlt
inc
js
int3
enter
pop
ss
ret
arpl
ja
int
outsl
xchg
xchg
dec
mov
js
mov
xorl
add
dec
jae
mov
imull
outsb
add
rcr
insl
adc
les
xchg
jns
pop
shl
sahf
call
push
jg
icebp
in
negb
sbb
mov
adc
decl
popa
cmpb
ljmp
jnp
dec
aam
ret
js
aaa
mov
mov
lcall
xor
jae
sub
shlb
test
in
subb
push
test
iret
mov
mov
mov
xor
xchg
add
mov
sbb
ret
dec
dec
pushf
mov
cmpsl
pop
mov
mov
sahf
jb
stc
mov
inc
daa
cmpsb
out
lds
fiadds
mov
cmp
dec
testl
sbb
aam
lret
mov
cs
test
loop
add
mov
popf
popf
call
or
add
inc
sbb
int3
xor
inc
push
mov
les
mov
pop
call
stos
jl
sti
lods
lods
fisttpl
out
mov
scas
cmc
inc
fs
mov
sub
and
xlat
das
cli
mov
inc
repnz
shlb
test
xor
adc
mov
mov
or
add
xchg
outsl
in
or
lcall
mov
mov
push
dec
out
xlat
scas
sub
hlt
jmp
xchg
fisttpll
pushf
out
repz
xor
in
mov
or
add
dec
test
push
mov
sub
mov
xchg
jp
mov
push
movsl
adc
xchg
mov
insl
out
fcoms
bound
cmpsb
mov
mov
cmpsl
jnp
sub
subb
in
or
push
jns
cs
xchg
mov
rcrl
sahf
jge
mov
jg
ss
les
in
inc
repnz
cmc
ret
push
popf
cld
sub
outsl
dec
add
and
imul
xlat
dec
ds
mov
in
jno
lcall
lret
int3
cld
dec
leave
or
jo
jecxz
lahf
dec
adc
add
pop
jbe
xchg
les
das
mov
pop
dec
xchg
xor
movsl
sbb
xchg
hlt
mov
ror
in
ja
adc
fwait
daa
loop
mov
add
sub
imul
fidivl
out
push
jl
jb
imul
out
cmp
scas
pop
mov
mov
pop
sub
xor
sub
mov
nop
mov
or
and
jbe
frstor
fidivrs
inc
insb
inc
les
es
jb
scas
push
cli
jbe
clc
test
popf
aam
push
cwtl
testb
fildll
jp
enter
jmp
mov
pop
idivb
push
popf
rolb
aad
lret
fnstcw
add
dec
out
dec
loope
pop
ss
jno
push
and
sbb
loope
mov
ret
lock
inc
cmc
js
mov
pop
enter
pusha
sti
cmc
add
xchg
mov
scas
cmp
cmp
test
repnz
rolb
scas
rorl
or
es
and
pop
test
cmp
lods
or
aaa
jnp
fwait
dec
pop
inc
inc
xchg
js
xor
sub
and
dec
jge
popa
ja
lret
mov
or
inc
clc
and
lahf
movsb
data16
call
pop
or
add
in
pop
fdivr
jg
fstp
lock
jmp
mov
add
jbe
and
xchg
lea
cmpsb
sbb
fs
sahf
les
ret
movsl
popa
enter
xor
xchg
or
pop
imul
pop
mov
mov
inc
sub
fwait
subl
andl
fidivl
je
test
ss
xor
into
rcr
jns
pop
add
fcompl
call
leave
mov
pop
scas
sti
sbb
lahf
push
fcompl
inc
sbb
and
xlat
movsb
and
out
lcall
add
add
push
jmp
mov
subb
and
inc
icebp
push
in
fisttps
mov
mov
or
orb
dec
shll
pusha
aaa
and
scas
mov
cmpsl
mov
sub
idivb
sbb
add
pop
jns
xchg
xor
out
outsb
lcall
shlb
cmp
sub
sub
lds
sarb
fildll
roll
jbe
fldt
cmp
jp
inc
jmp
xchg
or
push
fwait
lahf
lods
push
shll
mov
in
clc
adc
jns
dec
mov
pop
push
hlt
jp
xor
stos
cmp
jnp
rolb
jns
sbb
mov
outsl
fxch
xchg
fsub
pop
scas
out
test
addl
mov
inc
xor
xlat
pop
jg
rolb
mov
mov
or
orl
lods
add
pop
sub
sub
hlt
push
sbb
inc
lcall
add
mov
mov
mov
pop
lods
jecxz
iret
jb
je
insl
push
pop
stc
mov
adc
xor
rcr
mov
xchg
add
jb
jp
shlb
push
mov
sub
outsb
sub
rcrb
imul
mov
lock
movsl
fbld
sbb
sti
cmp
jo
jne
int3
data16
xchg
mov
xchg
stc
lahf
cmp
fadds
push
sbb
scas
std
cli
repnz
lret
jbe
hlt
das
mov
fwait
dec
push
testb
mov
jge
cmpsb
or
dec
imul
cmpsl
sub
movsb
sbb
pop
stos
fidivrs
mov
dec
fisubl
lret
and
xor
sub
cmpsb
pop
mov
or
or
add
lcall
add
jo
pop
fdivs
aaa
push
push
jae
out
mov
adc
arpl
nop
xchg
in
lret
pop
iret
sbb
orl
imul
push
push
mov
sti
mov
pop
and
mov
fisttpll
les
jne
mov
arpl
mul
xor
or
mov
shlb
flds
mov
lret
jmp
adc
js
test
mov
add
inc
add
sbb
sbb
adc
sub
xchg
jp
push
mov
cs
push
xchg
xor
jns
clc
test
mov
loopne
inc
dec
aaa
jo
cmpl
xor
sub
outsb
push
shl
dec
insl
xchg
cmp
icebp
adc
sub
dec
inc
inc
andl
inc
cmp
pop
jo
pop
push
add
mov
rcrl
dec
pop
or
mov
xor
dec
push
ljmp
arpl
test
adc
enter
ss
cmp
and
or
iret
pop
pop
scas
xchg
testl
dec
iret
mov
mov
shrl
sbb
scas
xchg
or
cmp
push
push
out
hlt
shlb
or
roll
js
inc
aas
jo
stos
bound
mov
cmp
push
xor
hlt
sub
ret
sub
test
mov
mov
sub
mov
fidivrs
fimull
fs
or
xor
mov
iret
jnp
in
pop
xchg
inc
ret
mov
pop
imul
adc
xor
mov
stos
push
and
stc
test
loopne
out
add
pop
jmp
lret
pop
sub
and
int
lret
rep
cmc
aas
cmpsl
test
nop
je
inc
inc
pop
and
ja
mov
in
sbb
inc
dec
xor
sbb
mov
daa
push
loop
cmp
mov
stos
jae
nop
sub
lds
in
jnp
push
push
adc
or
mov
xchg
or
xchg
outsb
mov
mov
divb
push
jg
adc
mov
sub
dec
mov
adc
sub
es
cmp
cld
callw
movsl
inc
pop
pop
aaa
mov
cmp
xchg
js
aam
faddp
loopne
and
js
pop
nop
bound
and
fldt
cmp
mov
jno
ficoml
in
sbb
mov
or
lahf
inc
sub
lods
shrb
out
fs
mov
test
aam
jns
stos
sub
outsl
mov
sbb
add
pop
or
hlt
aad
rcrl
inc
mov
xor
jae
jbe
adc
add
adc
loopne
sti
sbb
or
fbld
bnd
int3
xor
repz
js
sbb
mov
das
push
mov
dec
shll
repnz
fsubs
aad
adc
or
cmpsb
ret
jge
cmp
and
scas
add
dec
xchg
sub
cmp
push
loop
lret
call
popa
imul
movsl
push
in
mov
push
stos
mov
sbb
cmp
sbb
das
leave
pop
out
daa
int3
mov
xchg
scas
inc
stos
rclb
mov
adc
andb
test
std
jo
in
loope
insl
push
mov
loope
iret
icebp
test
xchg
les
xchg
loope
lods
cmp
pop
lret
out
test
mov
pop
and
shrl
aad
shlb
push
insb
sub
push
mov
push
mov
fwait
pop
push
jge
loop
add
xchg
dec
dec
pop
sub
loope
test
mov
adc
gs
test
cld
int
cmc
push
shlb
arpl
insl
add
aaa
xchg
push
mov
cld
ret
mov
ljmp
mov
int3
ficoms
subl
sbb
mov
add
in
add
lods
xorb
sbb
cli
leave
mov
xor
daa
jb
daa
ror
jmp
outsl
mov
push
mov
repz
and
mov
and
shll
fcomps
in
mov
sarl
sahf
mov
cli
xchg
mov
ss
sub
pop
xchg
aaa
out
xor
add
ds
dec
js
out
std
out
xchg
fucomi
mov
push
sbb
xchg
insb
cmp
xlat
dec
fcmovnbe
bnd
sti
int
dec
iret
scas
sbb
mov
imul
ret
mov
mov
nop
hlt
pop
call
mov
mov
xchg
pop
loope
xchg
xchg
and
mov
loopne
pop
sbb
iret
sub
cmp
sbb
mov
lds
aas
pop
jle
movsb
nop
lock
fwait
mov
insb
dec
pop
and
mov
pop
repz
xchg
xchg
xchg
mov
jge
cmovae
sub
pop
insl
add
stos
lods
outsb
and
push
add
in
in
and
mov
pop
jbe
repz
and
flds
xchg
push
jne
clc
cmp
or
sbb
cmc
stc
xchg
daa
aas
rolb
push
adc
adc
push
mov
in
fs
inc
jae
add
pop
test
int3
cltd
mov
sbb
inc
jne
ret
outsl
dec
add
cmp
fwait
inc
fisttpll
xchg
loop
sbb
std
mov
and
inc
mov
fmuls
int3
mov
sbb
jmp
arpl
nop
lret
imul
xchg
dec
in
adc
gs
popa
cli
inc
push
cmp
dec
daa
or
ljmp
jecxz
aam
push
xor
or
aas
addr16
add
loope
xchg
lods
imul
rdmsr
in
jbe
mov
data16
outsl
push
iret
xchg
iret
gs
out
mov
adc
adc
rcl
adc
cs
stos
rcrl
fiadds
fldl
pushf
xor
test
pushf
addr16
sbb
outsb
sub
or
dec
jne
xchg
pop
push
and
sbb
xchg
cmpsb
or
cmp
xor
repnz
push
shrb
imul
xchg
cmpsb
sbb
sub
jb
or
lcall
mov
cmpsb
loope
test
mov
inc
dec
sub
jle
and
sbbl
clc
divl
pop
cmpsl
jmp
inc
nop
outsb
or
int3
push
sub
jg
icebp
sbbl
and
dec
and
push
push
mov
in
outsl
push
mov
test
mov
fdivrs
repnz
xor
mov
das
mov
nop
sub
mov
sti
filds
insb
cs
and
push
test
icebp
shll
insb
jmp
mov
lcall
in
and
pop
ret
in
inc
inc
int3
add
mov
jg
aaa
and
push
sub
add
lods
in
mov
mov
arpl
aad
mov
xchg
jmp
gs
sub
add
shll
cld
ds
mov
and
sbb
mov
sahf
or
sbb
mov
mov
stos
inc
stc
pusha
sbb
adcl
add
push
mov
stos
adc
mov
add
pop
imul
scas
mov
mov
jbe
xchg
lds
push
mov
mov
roll
movsb
testl
sbb
sub
mov
sbb
push
push
es
imul
les
mov
movsb
daa
push
in
in
and
or
outsl
in
call
sub
jmp
push
dec
icebp
imul
sub
adc
stos
out
xor
add
mov
fwait
fwait
scas
fdivs
pop
inc
pop
xor
xchg
sarl
jg
bound
pusha
scas
int
mov
add
stos
jmp
out
in
xor
dec
ss
fmul
pusha
fwait
mov
jecxz
subl
pop
popf
xchg
or
or
sub
fbld
fistpll
push
push
cld
cwtl
and
lcall
mov
or
sti
mov
ret
push
cmp
sub
push
test
xchg
scas
je
sbb
cmp
lahf
cli
das
test
add
inc
adc
mov
add
push
popa
xchg
in
jnp
dec
sub
lock
orl
push
leave
and
mov
sbb
sub
outsb
inc
out
enter
clc
sub
sub
stos
add
shrb
mov
hlt
sub
dec
pop
cmp
mov
imul
or
adc
push
sbb
and
fdivl
imul
mov
dec
enter
sub
mov
or
dec
sbb
test
sbb
sbb
dec
xor
sbb
mov
adc
jne
jl
pop
push
adc
mov
jle
mov
xor
mov
sub
scas
jmp
orb
xor
outsb
rcl
into
dec
fdivl
mov
loope
lret
out
addr16
push
push
rclb
dec
nop
xor
sub
loope
push
dec
mov
in
ret
fldt
and
mov
xchg
mov
addb
xchg
ficomps
adc
dec
aas
das
movsl
daa
or
mov
xchg
pop
mov
in
sarl
loope
add
adc
clc
pusha
cld
in
rclb
fistps
orw
xor
mov
cld
stos
icebp
cmp
scas
mov
pop
cmp
in
add
ss
movsb
leave
xchg
inc
xor
aaa
aas
xchg
mov
xor
mov
decb
ds
in
bound
fstpl
andb
cmp
xchg
inc
dec
imul
mov
jl
arpl
mov
and
pop
ljmp
stos
lea
and
mov
sub
int
ljmp
mov
sbb
test
push
repnz
enter
in
add
hlt
imul
mov
pop
rcrl
push
jg
outsl
cwtl
sbb
lock
pop
subl
add
dec
popa
popf
inc
push
rcrl
pushl
orb
mov
scas
popf
cld
mov
jl
dec
addr16
scas
sbb
insl
mov
mov
in
scas
ljmp
mov
mov
or
inc
sbb
cmp
icebp
adc
imul
stos
test
notb
push
lods
or
in
sub
pop
pop
fsubs
aad
movsl
push
jbe
outsb
mov
divps
fldt
test
or
add
lock
mov
stos
out
cmp
les
mov
loopne
imul
mov
dec
insl
pushl
ja
cwtl
icebp
pop
sub
dec
adc
jbe
aad
shl
jmp
or
shl
mov
hlt
adc
xchg
ljmp
adc
mov
sbb
fs
add
shrb
fstpt
iret
pop
loop
stos
jno
fstpl
mov
bound
cmp
dec
xor
scas
mov
sbb
or
arpl
test
mov
inc
insb
loopew
inc
jnp
pop
cmp
rorb
xor
pop
and
adc
push
sub
stos
xchg
mov
testb
fstps
cmp
mov
nop
inc
push
ja
or
ljmp
stos
add
stos
repnz
fimuls
popf
push
jle
xchg
aas
push
lods
test
das
icebp
movsl
inc
mov
movsb
mov
pop
and
sub
js
pop
cmpsb
in
pop
cwtl
xor
addr16
sub
jp
pop
repz
iret
in
mov
inc
cs
pop
stc
test
cld
and
cmovge
and
cmpsb
lahf
and
test
mov
das
lock
out
cmp
xor
fdivrl
in
in
or
repnz
xor
mov
sub
sbb
insl
nop
test
fisubs
int
fwait
cmp
or
xchg
fcomps
jo
xor
je
push
mov
lds
mov
push
sti
push
gs
lea
sub
ja
sub
enter
ret
xchg
push
mov
mov
outsb
cmpsl
or
scas
dec
dec
in
pop
scas
xchg
xchg
pop
lahf
cmp
push
jmp
leave
in
dec
mov
or
push
ret
das
aam
jle
test
cs
push
mov
xlat
cmp
inc
daa
gs
loop
sub
cmc
mov
or
mov
insb
nop
vpcmpgtd
loopne
dec
mov
rclb
nop
movsl
lret
mov
pop
xchg
and
xchg
dec
arpl
int3
pop
push
fisttps
sbb
mov
stos
sub
inc
imul
out
pop
mov
aam
insb
sub
test
pusha
popf
shlb
repz
cmc
iret
mov
or
jp
push
mov
sub
icebp
mov
imul
and
sar
sub
mov
inc
jg
push
xor
xchg
cmp
movsl
xchg
inc
cli
clc
sbb
jge,pn
dec
aad
jb
clc
fistps
add
loope
push
mov
xchg
ds
mov
adc
or
hlt
add
cmpl
xchg
popa
fstps
xlat
mov
imul
loopne
sub
dec
js
mov
inc
outsl
test
fcomps
stos
enter
les
aas
push
mov
mov
xchg
and
pusha
mov
cwtl
pop
sbb
and
pop
mov
lods
pop
cmp
test
icebp
aam
test
popa
cmp
mov
fwait
or
push
insb
imulb
or
or
mov
jae
push
xchg
sahf
ss
pop
add
jg
cmp
push
ficompl
mov
mov
lahf
test
xchg
cmp
pushf
push
xor
mov
mov
fnstsw
stc
fstpl
fnstenv
xor
lea
nop
cmpsb
mov
xchg
cmp
mov
mov
cs
inc
das
addr16
inc
pop
xchg
stos
repz
aam
les
cmp
decb
xor
aas
cmp
popa
out
cmp
std
pusha
push
out
out
insl
push
or
or
ret
into
enter
or
jnp
js
test
lock
mov
loop
pop
xor
outsb
sbb
cmp
adc
push
jmp
nop
fsubl
sbb
adc
cmp
out
aaa
addb
mov
loope
mov
inc
cmp
clc
imul
cmp
stc
lea
inc
xchg
sub
pop
in
xchg
int3
dec
fildll
in
cli
idivl
cs
mov
mov
cmp
add
in
scas
out
test
test
jnp
pop
sti
xor
xor
loop
cmp
in
add
aas
in
out
pop
psllw
push
sti
scas
js
cli
imul
lcall
pop
mov
in
sub
bound
xchg
rcrb
lods
mov
and
and
mov
dec
ja
adc
xchg
out
cs
jg
mov
fst
pop
push
and
xor
xchg
shl
xchg
inc
test
and
shlb
fldl
insb
jne,pt
shlb
jo
xchg
fs
sarb
jb
dec
ficoml
jo
imul
hlt
into
cmpb
mov
adcl
mov
jmp
outsb
xor
in
sub
dec
add
jnp
push
imulb
pushf
dec
add
pusha
stos
pop
pop
mov
jno
mov
inc
jbe
loop
pop
pop
in
repz
aad
inc
jb
push
xchg
and
dec
mov
adc
xchg
mov
inc
lds
out
lret
or
mov
and
ret
inc
or
std
dec
sub
movsl
jmp
add
sub
gs
dec
int
lods
xchg
add
es
push
add
sbbl
lock
adc
insb
pop
aas
cmpsb
mov
push
sub
pop
adc
data16
rcrl
mov
xlat
pop
enter
shll
outsl
inc
xor
jl
lahf
xchg
out
inc
cmpsb
stc
sub
insl
inc
aam
clc
cmpsl
lcall
adc
mov
inc
loopne
dec
or
loopne
xchg
jl
pop
cld
fwait
lret
in
xor
add
aad
mov
andl
xchg
lods
add
stc
fiadds
lock
cmc
mov
leave
das
loop
data16
push
mov
jns
dec
mov
lcall
movl
ss
inc
ljmp
out
or
sub
pop
inc
add
mov
inc
mov
xchg
cld
ret
pop
add
data16
or
rorb
and
mov
mov
fstl
arpl
dec
fidivs
jg,pn
add
sub
lods
rcrb
xor
sti
jnp
je
xchg
and
jl
or
sbb
add
pop
inc
dec
dec
movsb
xchg
int3
ror
push
mov
shrb
adc
adc
jl
loop
pop
jl
mov
add
outsl
push
mov
scas
ja
lea
imul
shlb
xchg
pop
mov
push
in
mov
inc
data16
cmp
loopne
and
and
mov
or
lcall
cmp
and
ret
stos
orb
or
mov
mov
mov
int3
shll
push
bound
faddl
pop
fucomip
push
mov
mov
xor
sbb
sbb
mov
add
loop
orl
mov
cmp
push
mov
bound
pop
cmp
std
imul
ljmp
out
mov
popf
pop
jp
jle
pop
pop
push
pop
in
xor
pop
fwait
xchg
cld
mov
or
dec
test
out
pushf
scas
cltd
test
mov
pop
pop
je
ja
xchg
lods
cwtl
push
fdivrs
shlb
das
lea
pop
dec
cmp
push
and
mov
mov
fistl
shll
fiadds
fnstenv
popa
aad
mov
push
jns
add
das
dec
inc
xchg
pop
sbb
mov
repnz
add
pop
subb
add
imul
test
jnp
mov
jbe
fisttpll
fidivrl
sub
dec
add
mov
mov
cmp
adc
inc
imul
in
aaa
repz
pusha
mov
xor
loopne
pushf
leave
dec
and
adc
lcall
loop
xchg
stc
cmpb
add
jne
pop
add
shrb
lods
jnp
or
sub
ss
cmc
pop
xor
inc
or
shlb
imul
pop
hlt
movsb
and
ljmp
insb
or
and
adc
or
sub
pushf
sbb
mov
pusha
scas
sbb
pusha
sbb
jp
or
jl
xlat
repz
jb
es
jae
aad
push
sbbl
insl
pop
xchg
pushf
lea
xchg
add
stos
xor
clc
lret
dec
jmp
or
mov
xor
loope
jae
es
imul
loope
add
rol
jle
imul
adc
loope
dec
test
xchg
addb
xchg
orl
cmc
aam
imul
dec
mov
imul
sbb
inc
lds
xchg
add
push
jb
pop
stc
int
iret
mov
sbb
push
pop
jne
mov
sbb
xor
inc
or
add
fcoml
add
cmc
push
popf
push
cmp
loopne
cmc
xor
nop
mov
add
jmp
xor
cmp
out
push
adc
cli
adc
arpl
pop
push
sub
ljmp
or
push
stos
pop
dec
jo
insl
cld
mov
xchg
add
cld
xor
stos
shlb
mov
xor
cwtl
sbbb
and
ds
lret
das
jne
int3
add
fidivrl
icebp
mov
aad
imul
mov
into
lcall
xchg
divb
cmpsl
xor
andl
dec
jno
test
jge
fscale
jge
lods
mov
sbb
out
jl
jae
add
shr
inc
xchg
rcl
arpl
xchg
outsb
mov
movsl
mov
stos
cmp
cmp
lahf
pop
cmp
jb
or
lcall
or
nop
push
cmc
mov
jb
sbb
rorl
movsl
pop
shlb
mov
mov
adc
dec
mov
popa
cld
push
xchg
clc
dec
or
shl
movsl
xor
es
inc
mov
ljmp
loop
cli
sti
out
hlt
mov
cld
scas
cwtl
jge
mov
mov
icebp
mov
lret
scas
mov
pusha
lcall
jb
dec
add
frstor
cmp
faddp
dec
leave
lock
test
cwtl
jo
dec
jmp
mov
arpl
stc
in
pop
mov
idiv
mov
push
sub
xorl
push
scas
loop
sub
imul
add
jmp
test
std
inc
sbb
stc
dec
popf
push
pop
out
pop
adc
cld
movsl
xor
orl
movsl
push
jecxz
push
adc
lea
insb
mov
push
jbe
popf
mov
or
or
jl
test
xchg
mov
dec
sub
popf
out
dec
ja
mov
loopne
xchg
ja
xor
mov
and
scas
daa
dec
ror
add
mov
sti
adc
ss
sub
int3
xor
mov
or
xor
push
xchg
add
jle
pushf
orb
lods
data16
cltd
add
cs
sub
pop
sbb
xlat
adc
ss
dec
sbb
xchg
hlt
xchg
xchg
add
inc
mov
xor
bnd
mov
mov
stos
xor
xchg
mov
out
outsl
arpl
mov
fstps
push
ljmp
out
xchg
sbb
ret
pop
mov
sub
jae
mov
add
nop
out
fistps
inc
bound
addr16
mov
test
jl
inc
add
clc
inc
into
cmp
dec
stc
in
mov
test
xlat
pop
push
aam
push
decl
add
add
cmp
cltd
and
call
xor
inc
dec
inc
xchg
cltd
js
aas
sub
lcall
lea
or
pushf
call
sti
sub
dec
push
xchg
enter
xchg
les
dec
nop
in
sub
das
cmp
mov
repnz
sub
jne
in
push
lret
es
rorl
int3
sbb
js
jmp
adc
add
cmp
adc
es
mov
sbb
ret
lcallw
in
push
sbb
mov
push
push
movsl
cmpsl
sti
mov
cmpsl
in
test
out
hlt
pop
into
jg
ss
push
gs
bnd
dec
cli
cwtl
std
xor
push
cmpsl
in
xchg
imulb
and
xor
testl
dec
xor
lret
dec
lret
stc
data16
iret
mov
mov
mov
sti
jge
int
movsl
imul
imul
mov
cld
das
jae
xchg
mov
scas
xchg
gs
testb
mull
sbb
mov
adc
xor
cmp
out
jg
add
xor
dec
sbb
lcall
ds
xchg
imul
push
dec
xchg
inc
sbb
ss
mov
mov
sbb
xor
rcrb
movsb
imul
repnz
mov
cmc
sub
push
call
push
lds
out
cmc
daa
adc
clc
nop
sahf
sbb
fadds
add
dec
pop
jp
or
jbe
stos
nop
xchg
scas
data16
enter
popa
clc
dec
add
ja
mov
push
inc
push
jnp
int
insb
sarl
ja
mov
dec
mov
sbbl
stos
jae
mov
das
in
sbb
add
ret
sub
xlat
mov
test
cltd
dec
cmp
out
lods
test
lods
in
adc
and
pop
jbe
inc
lds
clc
outsb
dec
dec
pop
pusha
and
mov
sub
inc
pop
sbb
clc
bound
inc
inc
aad
lds
jnp
std
pop
loopne
push
and
xchg
aad
rcr
inc
pop
dec
stos
push
out
mov
pop
jo
inc
cmp
sub
into
sbb
pop
stos
jp
xchg
inc
push
cwtl
jne
ljmp
pop
rol
mov
xchg
lcall
mov
dec
cld
arpl
outsl
loope
cmp
imul
incb
lahf
and
pop
mov
sub
xchg
jno
cmp
jne
shll
push
sub
icebp
push
cmp
push
jle
or
mov
cli
mov
adc
mov
sub
jge
jne
add
mov
sub
cmp
adc
aad
movb
xlat
notl
xchg
dec
push
cltd
dec
mov
mov
mov
shl
imul
in
add
gs
arpl
mov
push
mov
mov
leave
in
pop
popf
sub
imul
sbb
xlat
jecxz
imull
in
mov
inc
je
mov
inc
movb
jne
stos
bound
ret
pop
jle
clc
jno
cwtl
ss
loop
aam
bound
cmpsb
sub
add
shll
cmc
add
push
jmp
daa
mov
jae
icebp
or
pop
cld
mov
sahf
push
insb
mov
stos
add
pop
clc
pop
mov
mov
xor
fnstsw
mov
les
inc
ja,pt
mov
add
cmp
cmp
mov
mov
or
cmp
jl
jae
pop
lea
mov
std
add
call
fsts
fwait
or
jg
mov
adc
cmp
mov
jae
jl
jl
xchg
jo
loop
setge
fisubs
sbb
or
sbb
sbb
hlt
or
imul
cmc
lock
into
js
inc
xor
sbb
inc
lret
loopne
push
fstpl
call
jge
in
mov
pop
std
push
inc
xchg
or
inc
adc
faddl
jbe
in
shrl
ficomps
fs
sti
rcll
add
dec
fs
push
aas
cmpsb
hlt
rcrb
sahf
int3
push
jmp
int
sbb
add
flds
xlat
aam
es
bound
bound
in
aad
push
imul
pushf
orl
xchg
stos
or
in
add
dec
loopne
jb
push
ja
cmc
and
push
lods
jae
push
in
jbe
mov
cmc
push
cli
dec
push
push
inc
lea
stc
pop
gs
jmp
dec
sar
lods
icebp
fsubrp
jg
sarl
sub
sbbl
arpl
inc
mov
notb
xor
inc
nop
sub
fs
add
addb
out
and
cmp
in
mov
pop
add
sti
aam
imul
movsl
mov
or
or
test
mov
into
mov
imul
pop
fwait
sti
pop
inc
ret
or
insl
xor
xor
negl
and
push
adc
mov
pop
cmpsl
xchg
js
setbe
sbb
inc
xchg
scas
pop
cmpsb
adc
pop
iret
sbb
mov
lcall
xor
jno
aam
sbb
mov
outsl
sahf
sub
xchg
in
test
jbe
cld
cmp
jle
xchg
mov
jns
adc
test
fisttpll
add
imul
movsl
out
mov
jno
aaa
xchg
push
cmpsl
jo
jnp
inc
xchg
fdiv
inc
pop
in
call
mov
arpl
dec
add
dec
stos
scas
push
pop
inc
pop
jnp
pop
addr16
les
ret
pushf
sbb
sub
test
loopne
stc
adc
cld
add
jmp
jbe
mulb
fwait
mov
adc
jmp
stos
push
pop
addr16
xchg
call
subl
jecxz
scas
xor
movsl
clc
mov
fists
rclb
clc
lret
mov
sahf
inc
lock
cmp
or
sbb
sbb
outsl
lea
sbb
in
cmp
jecxz
movsb
mov
add
addl
mov
jbe
xchg
outsl
fsubr
cmpl
jo
hlt
les
jo
xchg
out
xor
inc
jle
jmp
push
pop
add
in
mov
sub
rcrb
xchg
inc
mov
mov
ja
or
push
cltd
in
xlat
jecxz
js
or
fs
and
adcb
loopne
hlt
inc
shr
or
inc
mov
cs
repz
movsb
sub
add
inc
xchg
out
cmp
lcall
dec
popf
insl
imull
mov
repnz
addr16
xor
sbb
xchg
fwait
movsl
in
movsl
enter
fisttpl
or
icebp
ror
mov
sti
fists
imul
rolb
daa
lea
out
cmp
pop
jno
mov
mov
setnp
xor
jb
pushf
jp
jnp
mov
ret
imul
push
aam
adc
dec
imul
or
xor
and
gs
rcr
mov
loop
out
cmp
xchg
cld
add
dec
pop
ret
push
std
mov
nop
cwtl
or
sub
mov
lret
and
push
jge
data16
mov
cmp
das
sub
cwtl
repz
lods
scas
jl
and
and
mov
insb
popa
cmp
iret
adc
sarl
fidivs
repz
pusha
jne
movsl
mov
test
lods
jo
mov
icebp
movsl
dec
pusha
repnz
mov
xor
pushf
fsubrl
add
and
mov
xor
loopne
mov
loopne
pop
pop
das
sbb
mov
pop
mov
mov
ret
mov
mov
mov
pop
sbb
xchg
loop
inc
pusha
loopne
dec
add
jecxz
sub
ljmp
lret
loopne
mov
das
jno
loope
mov
cmp
mov
adc
jg
out
mov
or
dec
jg
add
aaa
subl
faddl
ss
js
mov
test
into
push
or
dec
mov
in
inc
sar
testb
ficoms
xchg
es
aaa
mov
xchg
aaa
push
mov
ror
jae
addr16
inc
xor
fiaddl
lock
pop
mov
repz
jae
adc
sub
add
inc
xchg
and
in
push
leave
mov
pop
push
xor
push
fwait
stos
cmp
movsb
and
pop
out
das
jle
or
sti
adc
push
inc
jno
ret
mov
cmp
mov
sbb
stos
fwait
adc
fadds
enter
in
push
pop
rol
test
imul
sti
and
fistpll
mov
in
dec
jns
repz
gs
iret
inc
lret
jo
aaa
cmp
cs
adcb
xchg
cmp
or
addr16
imul
loope
shlb
dec
xlat
dec
mov
in
mov
ljmp
ss
add
incb
aam
add
bound
cmp
pop
ret
cmp
cmpsl
adc
pop
in
lret
lea
lret
mov
test
xor
enter
adc
popf
pop
sbb
push
mull
stos
les
mov
cs
ret
out
ss
dec
sbb
xor
and
aas
adc
cmpsl
out
add
xchg
cmpsb
adc
push
jno
pop
xor
ficomps
push
xor
insl
iret
sub
adc
inc
popf
add
ja
jmp
rcrl
jp
sbb
and
shll
mov
and
enter
inc
std
test
fcoml
xor
push
or
in
bound
add
jo
xchg
or
pop
fprem1
pushf
mov
lds
xchg
inc
mov
outsb
movsl
arpl
aam
cmpsb
ret
pop
mov
mov
out
push
fnstenv
xlat
push
pop
ficomps
dec
mov
add
es
lahf
lea
hlt
cwtl
jnp
jle
cmp
or
or
test
fwait
xchg
shrl
daa
stc
mov
mov
adc
mov
or
cs
xor
out
pusha
mov
push
clc
jo
cmc
add
push
gs
or
push
mov
fsubs
mov
mov
push
mov
bound
cli
into
push
xorl
iret
daa
inc
int3
mov
dec
testl
xchg
inc
jae
fwait
imul
mov
adc
nop
adc
mov
aaa
std
ffreep
lock
adc
out
fwait
aam
out
add
pop
test
cmpsb
cwtl
jg
sti
leave
test
nop
dec
jg
movsb
repnz
enter
sub
sub
shrb
mov
scas
mov
add
push
iret
cmp
inc
sub
jnp
lcall
jnp
test
dec
hlt
test
dec
add
push
cmp
mov
inc
mov
push
mov
outsl
cmpsl
push
jbe
mul
jmp
inc
mov
imul
push
pop
iret
xor
and
stos
out
cmpb
fs
paddusb
mov
js
mov
mov
int3
ja
adc
add
pusha
aam
and
fidivrs
fs
push
dec
or
bound
movsb
clc
les
mov
out
out
enter
sti
push
mov
ljmp
jb
lods
movsl
insb
jge
stos
pushf
xchg
or
push
pop
jae
inc
adc
loope
push
inc
mov
inc
mov
loop
mov
leave
inc
cmp
mov
mov
mov
aaa
push
sub
and
cli
lea
sbb
jb
in
and
popa
shrb
lea
xor
fisubrs
movsl
sbb
in
cwtl
fnstsw
inc
cmp
cmc
add
pushf
pop
jno
fsubl
inc
xchg
aam
or
cmpl
cmp
stc
stc
push
xorb
sti
mov
popf
lahf
xchg
or
pop
outsl
add
sub
or
push
int3
daa
jecxz
xchg
mov
cld
mov
cmp
rcrl
inc
xchg
imul
je
lods
aam
and
pop
xor
mov
jae
call
nop
pop
cmp
loope
fstpl
lret
push
jmp
aas
inc
xor
pop
loop
pop
pop
adc
adc
xchg
out
lret
add
push
push
imul
lods
push
test
jo
cmc
push
mov
sub
jo
int
ljmp
out
movsl
sub
test
insl
dec
sub
mov
ret
ss
pop
inc
int
ja
insl
fnstsw
push
dec
or
mov
mov
sar
gs
mov
ret
out
bound
fs
xor
add
push
jnp
inc
out
cmc
incl
daa
mov
outsl
arpl
loopne
sbb
rcr
or
fcoms
into
mov
mov
std
xchg
lcall
loopne
pop
fs
jbe
or
dec
mov
and
jbe
add
aas
fcompl
xchg
pop
ret
cs
xchg
and
sub
arpl
lahf
jp
inc
mov
xchg
inc
int
sahf
imul
xor
fwait
lock
inc
inc
movsl
dec
shl
xchg
pop
fbld
repz
mov
loope
add
cmp
cmpsl
lahf
sub
adc
test
push
jbe
xor
lcall
addr16
inc
ja
mov
xor
dec
jb
data16
or
add
xchg
xchg
jl
cmp
nop
mov
jecxz
test
sub
lcall
cmp
pop
fs
adc
mov
push
movsb
push
cmp
jg
or
dec
imul
data16
fwait
mov
daa
loope
mov
push
mov
adcb
cmp
repnz
lea
test
aam
mov
dec
movsl
fistl
jnp
adc
add
xchg
sub
and
and
adc
test
shlb
pop
cs
mov
push
mov
cmp
dec
pushf
xchg
dec
add
xchg
sub
or
fcoml
and
std
loop
int
mov
inc
js
push
or
nop
and
push
mov
sbb
addr16
pop
mov
sarl
jns
add
and
add
jge
out
jae
add
add
mov
ror
push
imul
dec
push
data16
or
sub
jno
repz
inc
inc
nop
jne
jnp
sbb
cmp
xchg
mov
bound
jle
push
jg
inc
push
sbb
jo,pn
pop
mov
add
sbb
lods
xchg
cmpsb
mov
and
mov
arpl
xor
ljmp
push
or
movsl
cs
mov
pop
jp
mov
cmp
divps
out
cld
jo
and
aas
aam
cld
in
cltd
mov
ret
aas
fadds
fstpt
jp
cwtl
cmp
jbe
mov
push
pop
dec
ss
push
mov
pop
imul
and
dec
jbe
es
mov
lcall
testl
jl
mov
jg
cli
lock
aaa
mov
cmp
cltd
orb
sub
adc
dec
dec
jge
gs
outsl
mov
mov
popf
push
adc
or
mov
fsubs
adc
add
mov
cmp
stos
pusha
push
add
sub
add
jb
das
cmc
pop
test
data16
add
add
outsl
push
jnp
or
imul
adc
sti
cmp
jmp
xchg
or
cmp
add
inc
mov
out
rol
out
pop
xorb
sub
xor
jp
lahf
repnz
in
mov
push
shrl
jae
inc
scas
pop
add
cmp
int3
push
shlb
push
mov
xchg
jae
fs
add
mov
fs
pop
addb
pop
loope
dec
inc
cltd
pop
inc
movsl
or
out
xchg
lahf
inc
icebp
sbb
xor
insl
or
mov
jb
and
movsb
cs
imul
pop
das
xchg
lcall
shll
shll
mov
pushf
shlb
inc
jl
adc
test
aas
in
subl
adc
push
mov
flds
dec
add
mov
push
mov
xchg
sbbw
xor
jecxz
mov
xor
or
leave
jle
sbb
xor
in
mov
loop
inc
inc
xlat
cltd
mov
adc
imul
imul
and
and
pop
movsb
push
adc
int
aam
cmp
frstor
xchg
xchg
in
xor
jnp
aas
test
and
mov
inc
push
pop
push
jne
sbb
sbb
jns
sbb
jae
cmp
xor
nop
xchg
mov
mov
sti
or
scas
dec
cmc
xor
adc
mov
ss
sahf
dec
mov
and
pop
lret
sbb
loopne
push
fidivrl
enter
adc
js
fisubl
mov
nop
fs
lea
pop
push
cmp
out
mov
mov
pop
mov
cmp
push
ret
mul
xchg
or
or
fisubrs
shlb
aam
adc
mov
and
jne
subl
sub
add
sub
add
outsl
and
insb
add
xor
repnz
mov
lahf
movsb
pop
inc
call
mov
jmp
dec
data16
lds
sub
in
mov
push
pop
mov
inc
cmpsl
mov
pop
pop
dec
fisubrl
sub
mov
add
dec
gs
or
aad
pop
jns
scas
or
aaa
or
and
jnp
adc
fcompl
fwait
cwtl
and
call
fcmovbe
xchg
lea
sbb
stos
add
jns
or
je
add
mov
mov
ret
sahf
sub
and
das
mov
xor
dec
jmp
movsl
xchg
fmul
xor
jle
inc
xchg
lret
dec
pop
subl
xor
idivb
mov
pusha
movsl
mov
dec
mov
adc
jns
fwait
push
cmp
imul
iret
mov
mov
mov
pushf
gs
mov
mov
jno
sti
loope
jmp
xor
outsb
sbb
nop
xor
loopne
pop
mov
xor
fnstsw
test
push
pop
cmp
dec
adcl
addr16
xchg
sbb
add
mov
movsl
int3
cmpsb
mov
sti
pop
clc
mov
nop
mov
ds
push
pop
stos
mov
jge
enter
pop
nop
fisubs
mov
faddl
cmc
cld
sahf
scas
pusha
and
and
push
pop
xorb
lcall
sbb
bound
outsb
out
or
pop
mov
sbb
fstps
sarl
inc
js
jge
lcall
push
stc
mov
cmp
dec
outsl
mov
sbb
xor
ret
es
mov
insb
outsl
loop
mov
jl
inc
sbb
add
sub
pcmpgtb
cmc
cmpsb
push
int3
hlt
popf
lock
shr
stos
lods
pop
cmp
rclb
and
mov
imul
adc
adc
cmp
mov
jne
into
cmp
cmpb
xchg
pop
rcr
mov
pop
adc
mov
repnz
mov
xchg
mov
addl
lret
mov
fst
in
xchg
imul
rcrl
mov
fwait
popa
sbbl
mov
ficompl
mov
out
in
fwait
cld
out
cltd
outsl
loope
cmp
movb
jg
dec
cwtl
es
dec
pop
test
popf
push
adc
add
push
mov
icebp
xchg
dec
pop
jno
jl
in
jge
xor
mov
faddl
data16
int3
jbe
out
rorl
jmp
mov
divb
fs
mov
cmp
xor
fldenv
jmp
leave
fs
fdivs
jp
sti
aas
dec
jo
mov
mov
pushf
rcrl
mov
sbbb
jnp
leave
stos
int3
fistl
fnsave
mov
push
push
dec
enter
sti
int
fs
movsl
lods
aam
roll
gs
out
cmp
xor
mov
pop
mov
and
inc
and
jge
pop
dec
mov
fdiv
push
push
mov
sti
pusha
xchg
cmp
out
fs
int
bound
or
sub
into
mov
adc
int3
add
and
sbb
iret
fcmovnb
add
mull
xchg
enter
push
out
xchg
pop
dec
add
lock
jnp
cmpsb
and
arpl
or
jmp
inc
push
idivl
test
sbb
rolb
sbb
fildl
pop
xchg
cmp
push
scas
xchg
mov
add
adc
ss
sub
lahf
pop
cmp
out
sbb
sar
shrb
les
dec
adc
cmpsl
mov
dec
xchg
pusha
mov
cmp
xlat
mov
subl
js
sub
mov
dec
fsubs
push
out
movsb
mov
mov
jg
jmp
cmc
enter
or
sbb
rcrl
loopne
cld
mov
lds
cmp
push
xor
gs
ljmp
xor
mov
mov
xchg
aas
shlb
popf
jb
mov
and
aaa
mov
movsl
icebp
jns
outsb
pop
das
mov
and
pop
sub
orb
sub
push
xchg
je
inc
fidivrl
test
shrb
adc
push
ds
int3
pop
imul
subb
popf
je
xor
leave
imul
dec
pop
cmp
les
jg
jl
fsubp
jno
dec
adc
cmp
movsl
adc
scas
mov
dec
dec
and
aaa
mov
inc
xor
add
inc
outsb
adc
jns
sub
sbb
jo
sahf
mov
dec
imul
pusha
in
inc
xchg
push
pop
mov
inc
cs
loop
adc
xor
or
lret
testl
and
int
adcb
fldt
or
dec
mov
sub
aas
adc
add
cmp
imul
mov
mov
adc
adc
push
or
sbb
adc
dec
mov
gs
imul
adc
and
xchg
pop
je
inc
jno
push
fwait
adc
push
jmp
int3
aad
mov
mov
add
dec
mov
mov
stc
fwait
sbb
outsb
sbb
test
cmp
sub
lods
jmp
pop
in
jle
xchg
inc
adc
outsb
xor
cltd
jecxz
adc
call
jne
pusha
and
dec
frstor
sbb
loopew
xor
inc
daa
adc
mov
pop
mov
insb
push
ja
lods
icebp
pushf
mov
push
int3
xchg
dec
sahf
mov
lcall
dec
jns
popa
out
js
outsl
xor
xor
lcall
add
mov
mov
ds
bound
add
test
xchg
into
jmp
shlb
push
jno
xchg
adc
scas
je
call
outsl
add
aam
scas
cmpsb
xchg
xchg
ret
xorl
rorb
xor
xchg
test
cmp
not
arpl
fwait
push
mov
and
call
rclb
push
dec
fistpll
add
data16
push
bnd
jl
pop
cmp
or
or
mov
inc
mov
push
cmovae
mov
pop
les
sbb
out
test
xor
stos
pop
mov
and
insl
xor
jo
lahf
add
jb
cmp
mov
js
arpl
pop
push
sbb
xor
pop
jge
out
pop
stc
mov
push
mov
inc
mov
dec
and
jg
sahf
insb
inc
or
stos
sub
jns
xchg
movsb
mov
xchg
mov
xor
xchg
or
sub
and
xchg
and
insl
jno
hlt
out
or
cld
fstl
push
mov
sarb
pop
std
inc
mov
in
cmp
add
leave
cli
mov
aad
je
decl
add
or
push
cmp
lds
rorb
mov
lods
aas
sti
add
mov
pop
xchg
jecxz
push
adc
pop
nop
inc
pop
mov
inc
in
push
sub
mov
push
add
mov
pop
sbbl
data16
push
xchg
decl
cmp
fmuls
mov
and
cmovs
sbb
add
iret
pop
test
lret
pop
sbb
enter
push
adc
das
lret
xorb
lods
sbbb
jecxz
das
cwtl
lds
dec
scas
stos
mov
movsl
sbb
leave
aaa
xor
loopne
push
xchg
mov
and
mov
push
pop
sub
imul
stc
arpl
rcrl
cwtl
dec
sbb
push
mov
lods
packsswb
inc
in
ror
pop
ss
stos
sbb
dec
or
jnp
inc
test
mov
aas
pop
lods
pushf
pop
jle
jb
iret
shll
loope
mov
int
lcall
in
jbe
push
jmp
xor
je
and
lea
lret
cli
repz
xor
mov
mov
xchg
inc
inc
mov
pop
js
mov
rclb
lret
call
mov
push
sti
cld
mov
lahf
jp
adc
arpl
add
or
xor
mov
push
xorb
cli
pop
jle
mov
das
sub
fdivl
jo
mov
and
mov
adc
out
in
xlat
std
insl
addb
lock
inc
inc
mov
lret
xchg
adc
ja
test
push
cmp
jns
subl
hlt
lods
fbld
xchg
jne
xorl
push
adc
sbb
xlat
enter
cmpsl
jecxz
fidivrl
add
push
lret
stc
pop
mov
sbb
lahf
mov
sti
sub
mov
popa
hlt
dec
loop
push
lahf
js
aam
xlat
andl
adc
and
pop
and
jbe
imul
adc
add
inc
fs
pusha
sti
push
scas
sbb
xor
jnp
pop
adc
sti
sub
push
mov
dec
adc
mov
mov
xor
pop
dec
das
fstl
std
jnp
push
out
cmp
lds
xchg
jge
mov
xlat
pusha
mov
incl
add
dec
ret
fstpt
adc
daa
repnz
or
into
jg
cli
xlat
sub
addr16
cmp
in
push
repz
fnstsw
gs
or
and
xchg
add
inc
shrb
pop
cmp
imul
js
enter
fists
pop
inc
ljmp
pop
js
rorb
lods
cli
out
lcall
and
cmpsb
hlt
dec
jae
inc
ljmp
out
or
jno
notl
int3
adc
jbe
add
in
in
sub
lcall
in
mov
in
lcall
popa
cmp
sub
push
push
fistpll
sub
inc
jnp
xor
lcall
adc
mov
arpl
cmp
insb
sbb
push
hlt
imul
mov
pop
adc
fst
sbb
repz
inc
pop
mov
fsubl
ja
pop
out
push
subb
mov
xor
jnp
jnp
push
in
xchg
pop
addr16
mov
inc
dec
xor
stc
sarl
test
hlt
popf
xchg
sbb
sbb
fidivrs
orl
ja
or
daa
inc
xor
mov
jg
pop
push
sti
nop
jp
add
mov
inc
jo
hlt
subb
stos
dec
pop
jge
xchg
es
jae
into
insb
and
popa
sbb
lods
mov
cmp
outsb
popa
mov
add
jae
or
mov
jp
and
mov
das
or
push
push
fnstcw
jae
sbb
cmp
in
push
out
dec
pop
movsl
pop
push
mov
lret
inc
test
adc
cwtl
add
mov
push
push
mov
xchg
orl
mov
in
aas
subl
push
shl
pop
or
mov
repnz
paddq
aam
imul
out
jle
dec
test
sbb
mov
fwait
mov
ret
xchg
jae
imul
jmp
negl
inc
pusha
sub
and
nop
pop
inc
inc
mov
mov
fnstenv
je
adc
test
into
mov
mov
cmp
jmp
push
jno
mov
stc
filds
into
mov
enter
ds
aam
lds
pushf
je
add
push
lcall
cmc
jno
fstl
inc
add
das
xchg
into
mov
into
dec
xchg
fsubl
cmp
mov
and
lods
push
addr16
repz
push
enter
or
add
data16
loopne
adc
repz
iret
test
and
test
mov
inc
orl
mov
jge
mov
sbb
mov
add
or
mov
out
mov
mov
jecxz
inc
sub
cwtl
fcmovnb
notl
enter
sbb
movsb
inc
stos
daa
popf
jmp
pop
sub
je
mov
and
pushf
lahf
sarl
mov
loope
xorb
cmp
mov
bound
test
jbe
sbb
xor
jl
loop
xchg
add
je
dec
dec
aaa
mov
sbb
and
in
lcall
add
pushf
mov
sahf
add
jg
inc
push
dec
insl
fbstp
adcl
cmp
sub
mov
mov
sub
inc
loopne
jo
pop
enter
fldcw
mov
jmp
iret
or
pop
push
sbb
xor
mov
into
out
jo
in
ret
dec
gs
lret
sti
inc
add
retw
call
push
push
jae
mull
xchg
imul
or
mov
subl
pop
pop
sub
mov
rcr
cmp
test
mov
repnz
popf
mov
xchg
shl
mov
push
cwtl
sti
cmp
add
popf
dec
lea
jmp
lds
mov
repnz
mov
or
inc
shll
or
fs
fmulp
mov
andb
movsb
lahf
cmp
push
call
mov
addr16
inc
mov
pop
push
cmp
pushf
pop
ja
and
es
pop
gs
rorb
rcrb
inc
cmp
adc
and
push
xor
std
stc
add
jns
xorb
leave
mov
popa
aam
imul
cs
ret
int
sub
jo
fstpt
cld
leave
push
ja
mov
inc
scas
rclb
nop
adc
push
push
in
cltd
push
jbe
inc
mov
lfs
dec
cmpsb
or
fnstcw
sub
mov
mov
jmp
inc
sti
rolb
sbb
jbe
ret
mov
mov
and
mov
mov
dec
or
mov
jg
sub
push
xor
adc
fs
leave
repnz
je
dec
pushf
push
ja
dec
and
movsl
movsl
in
pop
sub
iret
or
xchg
lret
insl
or
aam
stc
push
jg
test
jmp
sbb
xchg
fdiv
inc
es
xor
push
cmp
clc
inc
pop
push
dec
mov
push
lods
fildl
cli
insl
pop
aad
out
lods
pop
cmp
fmull
loopne
leave
xchg
dec
push
out
daa
fs
jg
push
into
mov
push
sub
stc
insl
jle
sbb
push
push
pop
adc
fstps
push
es
mov
test
pop
ljmp
out
sar
push
fld
scas
xchg
cmp
xor
std
arpl
dec
out
mov
inc
mov
xor
push
out
adc
imul
sbbl
ss
scas
push
fldl
icebp
cmpsl
pop
addb
cmp
push
dec
clc
inc
sub
testb
mov
pusha
das
mov
xchg
call
cld
out
adc
mov
dec
jmp
pusha
call
notl
stos
jge
loope
loope
les
enter
xchg
pop
outsb
push
rcrb
sbb
clc
add
push
xor
fbstp
jno
xor
ds
outsl
rolb
sub
nop
jns
sub
dec
std
mov
iret
or
test
jmp
or
cmp
sbb
in
notl
mov
ficoms
xchg
adcb
push
cmp
mov
sbb
and
out
sub
repz
aad
cmp
dec
push
dec
daa
xor
cmp
dec
jecxz
nop
jmp
sti
adc
sub
outsl
dec
outsl
dec
adc
xchg
lret
aaa
mov
dec
inc
je
stos
in
xor
jle
xchg
out
scas
and
jno
js
lret
mov
stos
aam
xor
mov
pop
lds
cld
repz
es
push
lret
jecxz
inc
adc
fisttpll
inc
adc
lods
pop
imul
insb
ss
into
in
cmpsb
mov
jecxz
xor
sub
push
push
shrb
mov
into
add
lcall
call
xlat
mov
jae
adc
dec
cmp
dec
rol
jb
mov
pop
dec
mov
xchg
and
sbb
addr16
fisubs
sti
pop
shrl
xor
shll
imul
sub
jg
popf
dec
js
pop
sbbl
jle
ret
adc
mov
pop
aas
mov
xor
insl
add
shll
xor
fnstenv
cmp
push
fadd
sub
cwtl
mov
je
cmpsb
pop
test
sub
cmpsl
int3
or
xchg
negb
sbb
adc
mov
bound
insl
pop
jl
out
int3
gs
mov
jno
mov
in
lods
lea
lock
scas
sti
jno
xchg
sbb
les
inc
add
or
push
cli
mov
jle
sahf
inc
test
and
inc
fadds
icebp
jle
mov
add
aad
pop
jmp
xor
shrl
in
loopne
and
notb
sti
fdiv
ja
xchg
lods
insb
sub
jae
out
push
aad
cmp
shlb
adc
je
arpl
out
insb
push
mov
sbb
fists
xor
stos
pop
jg
xor
inc
shr
push
jne
sahf
out
bound
shr
push
lods
sbb
sbb
aaa
xchg
inc
enterw
or
push
mov
shll
inc
adc
xor
dec
sub
jae
push
mov
repnz
mov
sub
mov
lds
movsb
int3
stc
cmp
mov
dec
inc
out
ret
push
xor
jl
inc
mov
into
faddl
or
lret
pop
adc
push
sub
xlat
sub
mov
push
add
icebp
stc
mov
fldt
xchg
mov
int
loopne
push
or
mov
cs
jne
and
nop
dec
inc
xor
psrlw
insl
ss
fstpl
sub
mov
xor
arpl
imul
mov
faddl
sbb
jg
pop
scas
andl
adc
nop
xor
das
fwait
stos
call
sbb
call
loopne
lock
and
ret
pop
shll
xor
jge
mov
and
push
insl
xlat
jmp
in
in
dec
popa
int
imul
mov
lret
push
push
cmp
mov
shl
out
pop
stc
mov
jecxz
notl
mov
popa
mov
test
inc
enter
push
or
loopne
pop
inc
push
jecxz,pt
je
jnp
shl
dec
ret
in
lods
cmpsl
lcall
and
in
mov
jle
lret
sbb
fsubp
adc
or
aaa
repnz
lahf
mov
arpl
dec
shlb
jae
dec
dec
mov
imul
xchg
jbe
mov
mov
fs
jae
xchg
push
adc
fstl
jnp
sub
fists
ja
cmp
mov
inc
jns
sti
mov
or
push
adc
cmp
enter
xor
push
iret
cmp
fbstp
imul
pop
insb
sub
push
xchg
mov
xor
mov
xlat
jl
cmc
mov
xchg
sbb
clc
outsl
mov
in
insl
sub
xchg
nop
in
jb
idivl
ret
je
arpl
inc
mov
ljmp
idivl
daa
into
js
sbb
add
negl
lret
test
xor
stc
fildl
inc
xchg
pop
pause
movsl
inc
test
stos
cmc
push
cld
out
push
addr16
orl
xor
xor
and
test
dec
stos
pop
dec
inc
in
mov
data16
int3
inc
dec
xor
loope
push
daa
je
lea
or
repnz
in
pop
cmc
xchg
data16
pop
aas
sbb
iret
push
cmp
cs
mov
xlat
sahf
add
mov
lret
xchg
int
mov
lds
cmpsb
scas
lock
jle
call
ret
inc
jne
add
jecxz
cmp
push
idivb
loope
mov
and
lahf
or
bound
push
mov
subb
je
stos
loop
mov
outsl
out
stos
mov
and
das
movsl
push
rcll
push
aad
lcall
ljmp
enter
sbbb
or
jge
pop
les
ljmp
repnz
in
rcr
imul
or
idivb
aas
call
out
and
xor
mov
daa
xor
icebp
pop
insb
loopne
lock
fucompp
lret
outsb
and
pop
sarb
sub
test
push
or
mov
mov
lds
push
fwait
dec
jl
mov
loop
mov
mov
inc
insl
int3
aas
popl
int
jb
cli
jmp
pusha
cmc
cmp
pusha
lret
xor
popf
pusha
cmpsl
pop
daa
aam
adc
pop
ror
push
js
xchg
jo
imul
movups
jecxz
out
push
inc
xor
test
mov
loope
pop
ss
push
sbb
idivl
stos
fnstsw
cmp
notl
jle
sub
inc
in
dec
popa
sbb
iret
and
stc
pop
lea
outsl
cmpl
pop
cs
imul
andl
push
call
std
mov
fisttpl
stos
pop
and
aad
jg
dec
ret
lea
mov
xor
or
jge
xchg
dec
ljmp
mov
fidivl
xchg
sub
mov
sbb
js
pusha
jmp
mov
mov
mov
imul
pop
mov
out
push
mov
mov
divl
jl
cmpsl
mov
pushf
fists
outsb
xchg
sbb
aad
out
mov
das
aad
xorl
js
mov
test
push
inc
daa
loope
lcall
cmpsb
inc
arpl
aaa
icebp
int3
enter
inc
shll
mov
and
add
movsb
pop
test
jle
sub
jbe
test
out
push
xor
inc
mov
test
loopne
or
xor
xchg
lret
pop
arpl
xor
out
or
add
add
out
mov
fisubrs
mov
xchg
out
lcall
js
inc
mov
jge
js
negl
mov
fwait
adc
adc
jne
jne
mov
call
out
and
inc
inc
push
in
cmpsl
js
xor
test
adc
lcall
xchg
sbb
arpl
jmp
jbe
sub
je
roll
cld
mov
cmp
lods
les
pop
bswap
dec
ja
jno
and
and
mov
testl
pop
rcll
loopne
mov
fsts
xchg
jnp
cs
pop
mov
pop
push
sahf
add
lahf
jae
or
movsb
enter
pop
ret
fisubs
jnp
sub
push
mov
xchg
js
outsb
out
mov
jae
sub
lahf
mov
addr16
nop
xor
outsb
popf
iret
fdivrl
jnp
mov
mov
into
cmp
js
btc
mov
add
sub
mov
jb
push
inc
mov
into
cmpb
popf
fadd
xor
sbb
xor
divb
mov
push
cmp
iret
pop
pop
in
hlt
lock
test
insl
push
jg
stos
hlt
add
fidivl
push
gs
pop
xchg
mov
xchg
ret
jae
ja
sahf
xor
push
dec
mov
movsl
mov
or
inc
jns
cmp
pushf
bound
or
imul
sub
mov
xchg
rcr
iret
lret
in
jecxz
or
mov
push
inc
xchg
rcrb
test
pop
pop
and
jne
fwait
or
arpl
jp,pt
fucomp
lea
lret
adcb
inc
add
cmp
sub
adc
fistpl
push
das
cmpb
inc
xor
or
xchg
dec
lea
cmpsl
mov
inc
cmpsl
add
incl
outsb
push
mov
mov
sbb
and
push
mov
mov
mov
aaa
stos
inc
mov
mov
mov
and
data16
cs
lret
sahf
push
outsb
cs
sbb
enter
add
popa
int
sub
aad
les
cmp
push
cmp
mov
fmul
lods
sub
jge
popf
mov
leave
mov
test
cmc
lret
movsb
add
imul
jae
cwtl
cmp
add
jmp
and
in
mov
xchg
cmp
test
movsb
add
inc
push
jmp
xor
and
jecxz
sub
dec
push
jnp
ja
iret
jbe
cmp
into
repz
jmp
pop
dec
cmc
inc
inc
outsb
mov
xchg
pop
and
or
xlat
jae
dec
push
in
mov
and
xlat
hlt
insb
aad
dec
daa
call
pop
push
cmpsl
clc
mov
mov
pushf
and
jae
lret
mov
dec
cmp
test
mov
xchg
jp
ret
inc
push
outsb
jmp
cmp
pop
popa
mov
bound
push
inc
mov
mov
lahf
or
in
push
addr16
mov
and
jmp
iret
das
cmpsl
pop
jecxz
or
mov
out
lret
jns
unpcklps
lea
adc
add
or
push
or
xorb
xor
xlat
xchg
aas
push
xchg
in
leave
inc
cmpsb
rorb
mov
mov
jno
mov
sahf
jmp
fwait
xlat
out
inc
push
iret
jl
in
inc
stc
imul
pop
mov
lret
leave
add
dec
out
je
inc
jb
aas
push
sub
aam
clc
je
or
test
xchg
inc
mov
sub
jmp
jo
daa
xchg
pushf
das
mov
leave
cmpsb
imul
pop
cli
adc
adc
mov
ds
push
mov
xor
xchg
pop
mov
dec
push
mov
or
pop
hlt
stos
idivb
movsl
loop
xchg
xor
test
mov
mov
popa
sub
dec
jbe
cld
mov
sbbl
adc
popa
stos
push
inc
push
out
or
inc
sub
jge
mov
rcl
loopne
enter
cld
inc
or
frstor
shl
dec
jge
cmc
pop
push
mov
mov
scas
lods
scas
mov
shr
xchg
sub
pop
mov
pop
sub
pop
mov
push
out
aad
sub
adc
data16
leave
xchg
jp
lcall
jp
out
arpl
mov
inc
mov
jle
cmp
out
and
sub
mov
jle
sbb
xor
int3
outsb
dec
imul
ud2
js
out
mov
lret
sub
push
hlt
or
out
push
adc
mov
aaa
and
sbb
mov
jae
outsb
xor
ss
push
push
jae
out
or
nop
lods
fs
outsl
je
cmp
and
or
mov
mov
orl
xchg
mov
or
push
inc
cmp
lock
lret
sbb
enter
addb
sub
cmp
ljmp
and
rcrb
ljmp
mov
inc
mov
popa
xor
add
flds
test
lcall
pushf
lea
xor
dec
pop
addb
mov
and
std
in
lock
ficoml
pop
fistps
scas
mov
sbbb
mov
xchg
xor
lret
sub
xor
jb
or
in
fsubrp
mov
fcoms
pop
movsb
loop
mov
shlb
shll
addr16
sub
sub
popa
shr
pop
push
fsub
xchg
lcall
mov
sub
push
mov
scas
lods
into
sti
ja
inc
test
sub
and
mov
cltd
push
imul
mov
mov
xor
movsb
jle
loop
xlat
jae
hlt
repz
fstps
loop
iret
shll
orb
dec
mov
popa
or
jmp
cltd
adc
xor
fisubrl
xchg
push
imul
adc
mov
jge
mov
ret
adc
add
into
or
xchg
or
fld
add
clc
pusha
in
adc
jno
jecxz
pop
lahf
dec
les
movsl
pop
xchg
orb
xor
pop
movl
add
xor
push
sahf
sbb
push
push
aas
mov
dec
cwtl
add
jns
jp
sbbb
mov
leave
int3
dec
dec
mov
mov
cmp
jb,pt
jb
addb
xor
arpl
ja
stos
stos
loopne
or
mov
cmp
fwait
mov
mov
in
sbbl
jae
icebp
and
lret
and
popf
sbb
popa
cli
into
inc
mov
leave
adc
adc
movsl
push
xchg
inc
push
cmp
pop
cmp
and
xor
and
pop
rcr
mov
outsl
pop
dec
lea
fcompl
out
dec
bswap
test
sbb
push
mov
in
add
adc
jecxz
jne
jle
mov
cmp
xlat
and
jae
fcomp
cs
mov
sub
in
std
pop
xor
sub
fcmovnu
inc
pop
fcmovnbe
sbb
pop
lds
jmp
addr16
mov
pop
jecxz
int3
enter
xor
stos
push
pop
ds
sbb
js
loope
xor
mov
push
jmp
xlat
and
in
in
fcom
jbe
jl
and
push
repnz
adc
mov
in
rol
pushf
sbb
lock
adc
insb
clc
das
imul
inc
sbb
jbe
js
jmp
enter
mov
arpl
loopne
jno
outsl
and
lds
or
cmp
movsl
sub
mov
dec
inc
xor
add
enter
gs
mov
cltd
loopne
push
dec
inc
int
cmpsl
adcl
mov
shll
in
pop
in
mov
sbb
gs
cltd
clc
pusha
inc
call
dec
fs
lahf
addr16
movsl
and
repz
sahf
lcall
xchg
xchg
xchg
dec
jne
mov
push
cmpsl
imul
js
aaa
mov
and
notl
sub
lock
jbe
mov
jae
mov
fwait
xchg
mov
pop
aam
andb
ffree
add
sahf
dec
mov
push
arpl
xchg
aas
or
mov
fnstenv
inc
jmp
adc
data16
mov
pop
xchg
arpl
pop
push
fsubl
lea
mov
ret
jns
hlt
xchg
or
mov
push
and
clc
sbb
xor
mulb
sar
dec
lea
push
daa
mov
mov
sbb
pop
xchg
ret
push
jae
imul
mov
dec
add
and
fiadds
cmp
mov
mov
scas
or
ror
out
adc
insl
or
fucomip
mov
jle
lea
call
aam
test
leave
mov
dec
insb
shlw
insb
xchg
cmp
call
mov
ss
inc
leave
add
pop
daa
jl
adc
cmc
lods
pop
cmp
pop
push
push
scas
add
gs
and
jle
cmp
and
mov
filds
xchg
insl
bound
or
mov
cmp
mov
xor
cltd
xchg
jne
xchg
popf
nop
hlt
mov
out
mov
mull
in
shr
or
jmp
add
lods
mov
or
cmpsl
call
inc
test
loope
pop
jg
mov
dec
cmp
xor
jae
leave
add
add
jp
fsubrl
add
jl
sbb
push
pop
ljmp
out
leave
pushf
imulb
push
ror
jge
jb
or
jp
stc
or
add
daa
sub
lret
xchg
lea
mov
pop
ss
xchg
xrelease
adc
imul
and
add
call
dec
mov
pop
jbe
jne
mov
clc
pushf
insl
jmp
adcb
js
fcmovnu
cld
mov
shrb
pusha
jo
cmpsl
sub
call
dec
aaa
fistps
pop
arpl
xchg
cmpsb
leave
cmc
or
mov
dec
in
pop
push
in
repz
rclb
adcl
fs
or
mov
or
dec
std
mov
mov
sbb
int3
push
jnp
inc
add
popf
out
mov
pop
jg
jmp
lds
insb
jecxz
push
test
sbb
subl
addr16
jmp
arpl
sbb
inc
jmp
mov
xor
xchg
xor
sbb
mov
sub
cmp
dec
ljmp
in
pop
scas
add
icebp
je
sbb
and
mov
stc
push
in
jne
adc
or
adc
inc
es
inc
mov
cmp
jb
xor
in
cli
xchg
aad
lret
cmp
mov
xor
mov
pop
and
outsb
rcr
mull
ds
dec
aaa
or
adc
mov
addb
es
aas
mov
cmp
push
pop
sbb
mov
push
xchg
je
or
xchg
push
jg
push
gs
jecxz
lahf
sahf
in
hlt
jl
roll
aas
ss
cmp
movsl
sbb
and
sub
jnp
popa
jo
mov
jmp
aad
outsb
push
mov
aas
dec
pushf
in
mov
xor
jg
or
cmc
loop
notb
imul
jg
xor
jae
dec
cmpsl
mov
stos
ds
bound
stos
sbb
jg
pop
daa
and
xchg
sub
lret
push
sahf
or
push
test
sub
fstpl
inc
cld
fildl
push
adc
movsl
out
jecxz
push
lret
iret
rcr
test
mov
std
push
cmp
movsl
pop
push
fstpt
xor
xor
pop
fisubrs
mov
js
loopne
push
ffree
and
pusha
mov
fsubp
mov
cltd
add
adc
dec
inc
pop
xchg
aad
scas
mov
pop
cmc
pop
or
ljmp
and
dec
lods
and
cli
mov
lret
pop
js
lahf
test
adc
sahf
fistpll
hlt
jno
dec
aad
push
insl
lret
and
insl
aas
stos
mov
jae
inc
in
push
add
xchg
jae
sbb
jns
into
cmp
dec
shrb
out
insl
sbb
daa
shrl
xchg
in
mov
lret
fisubs
lds
stos
scas
rcll
mov
jbe
sahf
inc
jge
lret
push
notb
and
add
hlt
sub
lret
add
mov
rcrb
ja
pop
push
mov
mov
insb
in
clc
dec
ret
cmpsb
sub
cmp
lock
lds
movb
xchg
jno
jo
outsl
pop
aaa
cmp
lret
fucomp
pop
fsubrs
inc
or
xor
jo
mov
mov
outsl
and
push
mov
repnz
out
scas
sbb
mov
cmp
mov
jmp
push
xchg
inc
shrl
sti
inc
and
push
xchg
inc
push
mov
cmpsl
cltd
mov
fucom
pop
xor
add
or
mov
mov
push
imull
mov
mov
addb
push
dec
push
test
pop
sahf
rcr
xchg
dec
add
sahf
push
push
mov
mov
xchg
add
mov
imul
mov
xchg
lahf
and
fdivp
mov
pop
inc
je
ret
jbe
cmp
push
int
shr
je
fucomip
rorl
outsb
pop
fildl
lock
scas
cmpsl
jns
rolb
stos
and
pop
incb
mov
cld
dec
pop
inc
and
pop
inc
push
inc
xor
pop
push
test
xor
add
shll
pushf
pop
xor
out
stc
fmull
out
fistps
jb
pop
mov
xor
mov
dec
ss
push
pop
rclb
int
pop
ret
xor
scas
jnp
xlat
mov
pushf
push
xchg
xor
adc
pop
arpl
out
sti
pop
pop
out
out
inc
jp
cmpsb
daa
mov
inc
call
movsb
jmp
leave
xor
adc
sarb
cmp
icebp
inc
repnz
ljmp
aad
sub
add
je
jge
and
stc
js
sub
push
mov
dec
lea
push
mov
cmp
adc
push
popf
pop
pusha
sahf
inc
sub
pop
fsubrl
adc
push
lret
stos
and
push
dec
cltd
arpl
repz
push
lds
fcmovb
sub
xchg
xor
rol
shl
sub
lcall
pop
fcoml
xor
inc
loopne
divl
int3
dec
cld
hlt
loop
dec
mov
addb
mov
sub
testl
repnz
mov
mov
or
xchg
sub
ljmp
scas
adc
adc
adc
jo
cld
insb
add
mov
scas
and
jecxz
inc
cmp
nop
pop
ja
in
jno
or
mov
incl
pop
and
cmc
adc
roll
imul
pop
adcl
xor
xor
mov
jno
jne
pop
xchg
jge
cld
sub
mov
push
outsl
ret
lods
xor
add
or
mov
fldt
sti
and
scas
sti
in
adcl
push
or
loopne
xchg
mov
mov
lods
xchg
push
mov
push
mov
push
pop
add
fsubl
dec
push
xchg
push
insl
call
mov
icebp
loop
pop
xchg
movl
clc
sub
mov
mov
fwait
push
dec
stos
xorl
cmp
aaa
stos
sub
rolb
sbb
std
aaa
jae
mov
mov
push
divl
xor
dec
mov
cltd
test
jns
popa
fcmovbe
xchg
or
dec
shl
rol
xchg
pop
jg
jg
imul
sbb
sub
dec
jmp
in
je
popl
adc
jbe
ud0
leave
out
lock
mov
adc
cmc
popa
roll
popf
mov
sub
inc
xor
xor
mov
xchg
push
mov
xlat
inc
or
pop
movsl
jmp
into
jo
iretw
inc
or
lock
lret
pop
incl
mov
mov
fwait
xchg
scas
dec
pushf
jl
aas
cmp
loop
enter
xchg
insb
cltd
xchg
and
das
fs
daa
mov
mov
add
ficoml
jecxz
mov
sbb
adc
hlt
call
popf
adc
pushf
andl
fdivrs
and
jmp
adc
fildll
and
cli
punpckhwd
ffree
stos
pop
sti
mov
pop
dec
sbb
jmp
push
jno
sbb
sbb
mov
xor
mov
sub
pusha
and
cmp
adc
fisubrs
rcl
ljmp
cmp
aam
aas
lret
call
mov
jb
jmp
pop
adc
pop
jle
inc
xchg
stos
inc
jnp
adc
dec
pusha
xchg
mov
jmp
or
data16
insl
out
leave
or
int3
mov
sbb
fs
test
iret
dec
arpl
push
xchg
mov
fs
dec
ret
lock
hlt
call
dec
jecxz
push
cmpsb
cmpsl
lock
xor
xlat
adc
dec
std
pop
push
jno
xor
mov
mov
add
sahf
lahf
icebp
into
sbbl
sti
rcrb
lock
dec
lahf
pop
mov
or
iret
inc
insl
loop
sbb
lahf
adc
cmp
aaa
or
dec
jge
into
fwait
and
ja
stos
scas
xchg
cmp
mov
in
das
stos
xchg
jne
mov
cmpl
push
mov
adc
or
mov
cmpsl
pushf
dec
mov
inc
adc
cmpsl
nop
int
cmc
ss
bnd
ja
test
mov
mov
push
inc
mov
jge
sub
and
pop
jecxz
popa
inc
and
ss
push
test
xchg
jmp
push
mov
repz
inc
rcr
mov
pop
xor
rorl
jecxz
inc
loop
cmpsl
mov
adc
hlt
popa
bound
mov
in
dec
mov
stos
imul
sub
or
movsb
add
testl
stos
nop
popf
je
fwait
movsb
inc
sub
and
out
mov
lods
inc
enter
add
jns
sbb
mov
push
and
jns
push
jmp
push
push
shlb
je
out
bnd
cmc
push
mov
adc
pop
repnz
jae
test
jae
out
enter
mov
iret
loop
mov
push
fwait
and
les
push
cmpsl
mov
pusha
ret
or
repnz
push
cmpsb
ret
adc
ljmp
jle
pop
xchg
insb
cli
dec
hlt
sub
mov
mov
fldt
insb
loope
jp
or
mov
bound
jg
fadds
cs
stos
data16
sub
in
movsl
mov
mov
pop
mov
jnp
push
in
sub
test
in
sbb
sbb
and
push
stc
and
lods
divb
xchg
xor
sub
enter
mov
aam
xlat
xchg
aaa
jbe
js
xchg
push
mov
sub
mov
push
add
dec
lcall
fsubrs
xchg
addr16
mov
shrl
sbb
jmp
lock
icebp
in
sub
sbb
xchg
ss
popf
in
xchg
xlat
aas
cltd
adc
mov
imul
and
test
popf
pop
xchg
sbb
test
clc
aam
mov
mov
addl
dec
jbe
shll
mov
xchg
adc
jne
jbe
scas
mov
mov
loopne
mov
jle
xor
sub
sbb
mov
inc
mov
nop
lahf
pushf
inc
push
das
rcr
jnp
xor
out
ja
test
fisubrl
mov
jle
pop
sbb
in
fisubrl
imul
pushl
xor
push
fstps
imul
adc
cmc
lret
jg
out
and
push
cmpsl
std
out
out
mov
or
sbb
daa
xchg
stc
xor
xlat
adc
mov
call
fisubl
jge
rclb
testb
sbb
outsb
push
fs
push
jae
scas
loop
push
mov
mov
inc
and
in
cli
lret
sbb
dec
push
sbb
push
and
scas
fwait
mov
mov
pushl
das
sub
dec
cld
adcl
xor
aas
cmp
add
loope,pn
or
ljmp
mov
aas
jne
or
add
movsb
cli
adc
push
hlt
pop
mov
xor
lcall
jecxz
xchg
cltd
cmp
adc
push
xchg
jl
cmp
dec
hlt
sub
setb
push
iret
repnz
mov
mov
js
clc
sti
das
xchg
aam
cltd
jmp
ja
mov
push
fsubr
insl
jle
imul
jnp
adc
mov
push
lret
jne
icebp
push
pusha
push
fs
mov
adc
sbb
cmp
lds
jns
push
mov
popa
jg
loope
cli
mov
dec
sbb
pop
pop
jbe
lret
outsb
addb
in
pop
jo
aad
jmp
and
and
push
push
and
sbb
adc
stos
push
ret
fnstsw
mov
ss
mov
test
je
jl
lret
mov
pop
mov
push
mov
xlat
data16
push
push
xchg
xchg
cli
mov
test
or
add
sub
int
cmp
and
push
push
pop
cwtl
dec
mov
cltd
or
jb
mov
mov
icebp
inc
test
adc
mov
jbe
lahf
enter
jecxz
scas
or
pop
lcall
mov
mov
ja
or
ja
mov
inc
add
cwtl
das
inc
or
jle
or
push
in
in
fdivr
lahf
push
mov
cmc
ss
cmp
in
bound
lret
mov
mov
adc
inc
scas
nop
adc
push
sar
push
pop
ja
push
add
mov
jb
fs
cmp
cwtl
mov
mov
mov
scas
hlt
aaa
test
mov
pop
aam
fcoms
push
xchg
aad
cmpsl
js
xor
sub
sub
push
cmc
rorb
inc
test
out
pop
ret
popf
and
add
xor
and
imul
pushw
push
pop
in
mov
ja
xchg
dec
and
int
test
fisubrs
cmpl
in
sahf
inc
and
or
ret
dec
lcall
test
sbb
fisubrl
jo
mov
add
mov
xchg
ja
pop
dec
dec
pop
jno
sub
out
or
sub
out
mov
sbb
mov
pop
cmp
stos
aaa
jmp
fwait
mov
and
popf
lds
push
cmc
gs
iret
iret
add
cmp
pop
mov
clc
pop
push
sub
xlat
out
data16
push
ds
je
dec
push
stos
push
xor
mov
inc
mov
add
sbb
xor
inc
push
or
xchg
jae
lcall
sahf
jecxz
xor
shlb
push
repz
jbe
pop
inc
inc
cli
jo
push
dec
rcrb
mov
shl
jecxz
jge
mov
scas
test
clc
cli
inc
lret
inc
inc
hlt
add
and
and
je
daa
fimull
sub
pop
fcomp
int
xchg
jo
inc
dec
in
loopne
xchg
cmp
mov
popa
push
mov
push
lret
in
jecxz
pop
int3
cmp
int
mov
orl
aam
pop
cmp
push
fnstenv
fsub
out
hlt
sbb
jns
add
ret
fcoms
inc
cli
loop
dec
inc
push
popa
jge
addr16
aam
fs
sub
je
mov
ss
cwtl
pusha
ljmp
sub
int3
inc
and
inc
sub
fwait
sahf
mov
pop
sub
push
mov
nop
jg
dec
mov
test
les
pop
xor
dec
insl
outsb
add
bound
out
movsl
mov
mov
std
mov
ret
pop
test
and
push
loopne
sub
mov
push
in
jo
cmpsb
popl
inc
sahf
and
inc
in
int
mov
daa
cwtl
arpl
out
cmpb
jg
add
scas
cmc
pop
xor
cmpsl
test
mov
jmp
unpckhps
inc
mov
in
jge
cltd
sbb
push
add
jns
dec
sbb
mov
mov
fldl
dec
push
ret
leave
push
scas
mov
and
and
push
push
pop
in
push
jne
xchg
rolb
test
mov
fcomip
push
shl
adcb
mov
jmp
test
push
pop
enter
into
xchg
cmc
inc
cmp
sub
cmpsb
pop
outsl
adc
jae
jmp
aam
mov
mov
sbb
out
pop
jo
jns
jae
movsl
movsl
mov
cmp
mov
or
divb
fwait
int
shll
std
sub
add
push
test
loopne
xlat
dec
fs
xchg
lret
addr16
fistl
inc
adc
movsl
stc
sub
mov
mov
jmp
call
cli
mov
cmp
daa
xchg
in
pop
pop
xor
push
fnstsw
add
ljmp
sahf
pop
in
and
cmp
lock
negb
jg
sbb
push
leave
imulb
aaa
jnp
mov
subl
test
jl
mov
repnz
cmp
ja
cli
sbb
inc
jb
sahf
inc
cmp
adc
mov
pop
movsl
mov
ja
xchg
cltd
push
lea
push
adc
push
scas
jmp
mov
cmp
aam
and
mov
mov
addr16
jns
push
xor
xor
inc
clc
inc
imul
xchg
xor
into
cwtl
jecxz
push
iret
add
inc
inc
movsb
sarb
ficoml
xchg
mov
push
push
add
addr16
mov
xor
push
push
mov
loop
stc
fbstp
out
out
test
pop
xorl
mov
mov
pop
mov
inc
lock
sbb
sub
insb
je
pop
sbb
insb
xor
sub
loope
fsubrl
sbb
mov
xor
inc
test
clc
ret
mov
xchg
insl
pop
sbb
popf
jle
pop
or
daa
shlb
xor
and
mov
mov
adc
repz
or
pusha
pop
testl
mov
movsb
fidivrl
clc
or
mov
adc
sarl
adc
rcrb
dec
xor
add
push
into
filds
cwtl
ja
dec
data16
jbe
or
pop
adc
sub
pop
arpl
out
adc
mov
mov
ficomps
sub
mov
test
outsb
inc
popf
hlt
mov
repnz
repz
cli
hlt
sbb
shrl
xchg
insb
jns
les
mov
inc
lds
pop
push
in
fldl2t
ret
inc
pshufw
jae
sbb
icebp
out
push
pushf
mov
jle
xchg
inc
stc
mov
sbb
jmp
cltd
popf
inc
dec
and
push
daa
cmp
inc
sub
scas
cwtl
add
jge
pop
and
push
loope
popf
jecxz
dec
jb
pop
pop
lret
popa
test
repz
fdivs
cmp
add
into
add
adc
sahf
push
pushf
push
jae
xchg
aaa
and
cmpsb
jno
imul
adc
hlt
leave
out
or
leave
fs
xchg
stos
mov
repz
inc
and
in
pop
popf
jle
ficoml
lret
mov
jns
addr16
add
imul
sub
in
inc
jae
add
cli
fisubs
dec
enter
insl
icebp
sub
mov
jae
shrb
and
xlat
pop
push
cmpl
mull
int3
and
out
mov
push
mov
lock
lds
out
lock
jno
pusha
jl
push
cmp
loop
dec
frstor
gs
iret
inc
in
int
and
dec
insb
pop
out
inc
xorl
xor
sub
ljmp
and
imul
jbe
inc
xchg
arpl
das
jns
xor
aas
into
cld
insl
mov
jns
push
mov
cmp
dec
movsl
jne
lods
jns
push
push
les
fdiv
mov
js
movsb
add
leave
test
filds
mov
mov
inc
test
pop
clc
xor
andb
das
addr16
inc
clc
imulb
sub
mov
cld
testl
and
imul
in
and
pop
jecxz
fidivl
test
cmp
ss
loopne
clc
icebp
loopne
montmul
cmpsb
inc
scas
and
insl
cmp
mov
insl
pop
xchg
mov
fwait
inc
out
jae
dec
and
mov
inc
shll
mov
push
push
in
pop
outsb
icebp
hlt
dec
cmp
das
mov
inc
sub
xchg
enter
cwtl
adcb
dec
cmp
xchg
enter
mov
or
inc
scas
stc
mov
push
enter
leave
dec
or
adc
push
mov
push
and
movsb
in
jp
cli
jle
jns
aad
dec
xchg
shll
push
call
in
push
push
push
adc
lret
in
lds
push
sub
bound
jmp
lock
popf
cli
loop
test
nop
int
jnp
cmp
pop
mov
dec
mov
pop
imul
cwtl
aaa
inc
icebp
lcall
pushf
or
outsl
andps
loope
push
jae
ror
out
dec
jb
cli
lock
std
orl
pop
jo
cmp
adc
mov
call
jno
in
cmp
int
mov
call
fistl
xchg
pop
mov
mov
or
adc
cvtps2pd
lcall
leave
sbb
mov
jecxz
roll
inc
gs
fdivs
lock
clc
xchg
dec
out
cmpb
sub
testl
movsb
mov
lds
hlt
lea
lret
in
pushfw
dec
xor
bound
movsl
cmp
or
insb
mov
out
pop
ja
xchg
mov
add
jne
ds
pop
adc
repnz
adc
jge
lret
incb
pop
xor
jmp
fldenv
out
push
lret
dec
mov
ret
push
pop
xchg
aaa
push
or
bound
sub
imul
inc
outsl
jne
inc
sbb
jae
dec
fs
cmp
dec
jmp
shrb
nop
jmp
adc
in
xlat
push
sub
fildl
int
inc
xor
jecxz
fcmove
loop
movsb
or
popaw
xor
in
sbb
push
in
and
xor
roll
lds
cmc
cld
adc
inc
movb
outsl
fdivl
movsl
push
loopne
sbb
enter
jl
and
in
push
ss
rorl
ja
sub
nop
inc
and
ja
mov
push
cmp
jg
nop
mov
roll
or
push
stos
std
fidivrl
call
and
sub
ljmp
cwtl
jp
sbb
xchg
add
lods
or
outsb
mov
loopne
stc
jno
dec
cmp
pushf
cli
sbb
aas
fildl
lds
lods
sbb
sbb
pop
cmpsl
jmp
jl
call
ret
lret
iret
insl
enter
shrl
mov
popa
xchg
out
mov
test
rcll
fnstsw
stc
enter
xor
dec
mov
jnp
jl
mov
popa
jmp
push
lods
loopne
jbe
out
imul
insl
push
push
mov
push
mov
jl
adc
inc
stc
fcom
pop
push
pop
mov
dec
aaa
mov
sbb
lahf
sub
idivb
std
or
jae
sbb
cmpl
or
mov
inc
add
outsb
clc
pop
fs
das
into
push
sbbl
add
pop
js
ret
ror
repnz
push
mov
pop
dec
jno
cmc
aad
outsb
repz
add
and
shlb
orb
mov
pop
inc
arpl
aad
push
outsb
push
mov
mov
andl
mull
pop
ret
dec
fwait
dec
jae
add
loop
xchg
stos
lds
or
jg
inc
dec
add
stos
mov
mov
aam
popf
mov
std
repnz
lret
lahf
and
sahf
dec
popa
cmp
add
lea
jne
les
add
jle
push
add
bound
jo
sub
addb
nop
mov
sbb
in
push
icebp
add
cmp
dec
in
jno
shll
mov
push
pusha
jge
xor
out
sbb
loopne
pop
shr
mov
or
add
popf
jno
movsl
in
push
jbe
testw
ljmp
icebp
pop
cmp
dec
in
inc
sbb
sub
addl
dec
stos
mov
mov
push
stc
jo
fld
jle
xchg
mov
jns
jg
sti
shrb
or
sub
push
push
push
loope
arpl
jl
pusha
cmpsb
pusha
push
dec
lret
fdivs
push
das
ret
xchg
and
dec
aad
mov
xchg
adc
gs
dec
arpl
mov
add
movsb
enter
fistpl
or
addr16
ja
push
mov
mul
dec
lcall
je
in
test
fcompl
mov
jo
nop
jno,pt
out
and
dec
xchg
add
push
dec
adc
adc
sub
jne
bound
call
shll
mov
hlt
or
and
sbb
jle
mov
addr16
hlt
lret
add
jge
sbb
push
and
cmp
pop
out
add
mov
ljmp
xchg
xor
ret
lcall
imul
data16
and
cltd
outsl
out
shll
mov
jp
leave
add
lret
loope
cs
ret
out
rcll
push
rolb
sbb
mov
jbe
lods
mov
sbb
sbb
push
xchg
or
sti
cli
scas
adc
out
repnz
xchg
or
scas
ss
mov
les
mov
lcall
leave
lcall
inc
and
xor
push
jae
pop
test
pop
and
lock
sbbl
add
dec
add
push
jnp
scas
flds
in
inc
mov
icebp
sub
mov
mov
push
mov
int3
repnz
mov
jmp
xchg
adc
fbstp
movsb
aad
adc
js
sub
sub
mov
aas
push
xchg
mov
jle
sub
xchg
das
xlat
lea
adc
fwait
ret
jge
insl
push
xchg
or
pop
iret
jb
jo
pop
add
push
orl
fs
and
decl
and
sarl
or
xor
push
call
out
mov
jbe
push
stos
imul
testl
xor
stos
jmp
fidivl
xchg
or
pop
mov
inc
sahf
sahf
sbb
outsl
lcall
fisttpll
push
arpl
sbb
inc
out
into
sub
or
push
xlat
cmpsl
pop
xor
mov
ror
add
xlat
xchg
fisubrs
push
cld
imul
leave
mov
lcall
loope
movsb
clc
pusha
out
lock
enterw
mov
andl
dec
jge
dec
movsl
push
out
sbb
sahf
and
int
xor
or
xchg
lahf
mov
out
xor
out
outsl
stos
xacquire
adc
test
pusha
stc
jl
loope
sbb
dec
imul
mov
call
enter
sbb
xor
outsl
dec
loopne
call
jg
movsb
repz
das
sub
fstl
adc
fs
stos
sbb
lcall
sub
sub
daa
dec
loopne
jmp
sub
dec
xor
and
push
div
pop
jmp
push
push
mov
or
pop
jb
popa
sbb
jo
pushf
bound
jb
sub
inc
push
xchg
xchg
xorb
test
mov
lret
jno
repz
popf
mov
test
out
test
cmpsl
jb
test
mov
inc
mov
shrd
stos
mov
fdecstp
mov
mov
sub
jne
lea
push
jle
pop
movsl
outsl
mov
jno
push
shl
cmc
sub
pop
insl
dec
push
inc
ret
cmc
ret
adc
cmp
mov
loop
sbb
negl
push
mov
pushf
sar
or
push
cmp
xlat
repz
push
jne
inc
jecxz
push
adc
in
mov
jns
fistpl
fisubrl
ret
cmp
jb
adc
shlb
stos
repz
sub
sarb
mov
cs
cmc
insl
mov
fisubs
pop
fnstsw
sub
jno
sahf
sub
cmc
dec
xchg
das
dec
test
inc
sbb
scas
xchg
sti
and
test
and
sub
xchg
out
inc
adc
inc
sub
dec
fwait
pop
pop
cwtl
sbb
fwait
sub
xor
sbb
in
fadds
push
out
call
ljmp
jl
jo
pop
sbb
xchg
add
imul
mov
repz
jg
mov
les
mov
lods
add
iret
cmc
mov
add
call
push
lret
clc
and
push
xor
cs
xchg
scas
in
jae
lret
dec
inc
mov
hlt
bound
stc
push
iret
and
cli
notb
mov
xchg
outsl
stc
dec
push
sub
imul
push
pop
lods
loope
sahf
cmpsl
add
jb
mov
negl
jns
js
mov
daa
jp
aaa
adcb
cld
push
clflush
jne
jno
mov
jl
bound
pop
call
jmp
xchg
movsb
stc
push
mov
jne
hlt
dec
lahf
test
sbb
das
sub
int
and
icebp
aam
mov
sbb
fcomi
xchg
mov
fistpll
je
lods
out
mov
rcrb
push
xor
test
idivb
lds
fisubl
jnp
xor
out
and
data16
in
std
mov
sbb
ja
push
imul
hlt
jecxz
fidivrl
rorb
jno
add
movsb
mov
or
testl
loop
push
jo
xor
pop
incl
xchg
add
test
push
or
xchg
add
cmp
cmp
fwait
add
jmp
cmpb
aas
jb
or
out
or
mov
sbb
dec
sub
mov
rcll
ss
push
jo,pn
testb
cmp
out
std
jae
dec
je
adc
inc
cmp
fadds
cmp
jg
push
outsb
adcb
push
test
rcl
scas
movl
push
sub
lods
icebp
sbbl
lcall
mov
fstl
icebp
sarl
dec
je
fs
lea
push
xchg
aam
push
xchg
xchg
and
ror
in
add
mov
sbb
cmp
jmp
fdivl
jne
mov
rclb
ljmp
jp
add
adc
push
movsb
pop
mov
dec
fcoml
shll
add
js
inc
jecxz
into
rcrb
push
pop
icebp
arpl
or
and
inc
lcall
mov
icebp
sbb
movsl
negb
or
dec
addl
jp
bound
loop
clc
scas
cmpsb
mov
jle
stos
sbb
inc
enter
lret
movsl
shll
aam
dec
ljmp
pop
cmp
lea
mov
les
faddl
xchg
enter
outsl
ret
jo
sub
dec
adc
or
addr16
ss
roll
jp
lock
xchg
cmpsl
inc
sub
data16
daa
push
mov
xor
xchg
sub
mov
mov
and
push
into
test
jo
repnz
stos
and
adc
dec
sub
leave
inc
mov
mov
or
imul
test
int3
lret
sarl
pop
xchg
lret
inc
lock
xchg
pop
lahf
repnz
pop
ljmp
lcall
sbb
lods
sub
mov
sbb
popa
adc
mov
dec
leave
mov
xor
dec
adcb
leave
imul
clc
inc
cli
xor
dec
hlt
pusha
bound
fldenv
mov
aas
loop
jbe
adcb
cmp
pop
xchg
add
push
and
lret
loope
je
cmpsb
in
nop
dec
data16
lea
push
icebp
and
adc
mov
scas
sbb
inc
scas
inc
and
add
pop
mov
aam
stc
test
mov
test
lds
popa
dec
jbe
std
mov
aas
jge
out
cltd
js
mov
adc
jns
sub
jl
mov
adc
sbb
xor
imul
adc
jp
mov
icebp
cmp
xorl
call
mov
add
in
adc
sub
sbb
xchg
add
or
and
ret
cs
or
cmp
mov
ret
call
mov
cltd
jbe
mov
inc
inc
pop
mov
dec
test
test
mov
addb
sbb
fistpll
add
mov
mov
dec
adc
xchg
mov
movsl
pop
mov
jae
add
jge
dec
add
andl
ss
sbb
mov
repz
std
dec
push
or
mov
inc
cs
or
dec
pop
jmp
adc
cwtl
push
fstl
sbb
in
inc
push
push
or
dec
dec
out
jle
pusha
pop
sbb
cmp
xchg
push
push
mov
outsb
xchg
inc
push
ljmp
pop
test
or
pop
aaa
cmpsb
stos
fs
sbb
add
cs
rcrl
cmp
pop
jbe
aas
dec
loopne
inc
jmp
test
fdivrp
adc
js
pop
and
mov
lods
inc
int
adc
divb
mov
fists
mov
popf
mov
std
popf
mov
jnp
and
mov
adc
add
ds
and
dec
jle
rcrl
push
cwtl
jl
lods
jo
ret
jmp
inc
mov
lcall
ret
movsb
pop
jo
clc
xchg
test
cvttps2pi
js
leave
add
sbb
push
ljmp
cli
jnp
and
shrl
add
aaa
stos
sbb
xor
sti
or
rorb
rcrl
out
inc
shl
or
sti
test
fldenv
fisttpl
mov
mov
pop
sub
mov
mov
mov
push
pop
pop
lret
shr
xchg
xor
lcall
ja
add
adc
stos
loope
jecxz
jbe
sti
and
inc
mov
adc
ffreep
rcrl
dec
aad
mov
bnd
xchg
clc
cltd
lret
xor
in
and
xchg
mov
pop
dec
movsl
dec
arpl
pop
lcall
add
clc
jno
xchg
mov
sbb
cmp
add
stos
sbb
pop
pop
js
jmp
inc
mov
addr16
lea
je
push
ffree
mov
test
scas
clc
xchg
iret
leave
pop
rorb
rdtsc
sbbb
repz
push
stos
cmp
push
jae
sbb
xlat
push
mov
outsl
mov
sahf
test
xchg
sub
push
jne
cmc
cmp
sbb
cld
pavgb
dec
jmp
mov
inc
xchg
popf
adc
jno
inc
adc
inc
mov
sbb
cmp
jb
xchg
lcall
daa
mov
int
repz
jae
cmp
sbb
jg
dec
sbb
faddl
sbb
scas
xor
push
xlat
aam
or
ss
mulb
pop
jnp
rolb
mov
repz
push
push
inc
pop
es
jae
push
adc
lods
add
sbb
xchg
fmuls
inc
and
cmp
pop
negb
das
adc
jae
xchg
mov
push
popa
je
add
xor
and
push
int3
dec
das
xlat
sarb
cmp
or
mov
jno
jne
or
inc
data16
dec
adc
xchg
ds
fisubl
dec
insl
mov
bound
and
cli
dec
fimull
add
fisttpl
xchg
push
and
mov
add
jbe
jo
cmp
lock
fdivrl
mov
xchg
insb
inc
mov
loopne
mov
jnp
stos
stc
sub
add
jae
das
test
mov
jmp
lret
jmp
lds
sbb
cltd
cmc
mov
int
xor
gs
stc
movsb
leave
push
imul
and
scas
shll
cwtl
cmp
stc
test
test
cmp
sub
or
mov
xchg
rclb
dec
hlt
fidivrl
jmp
sbb
andl
leave
mov
dec
js
ret
add
xchg
ljmp
add
cmp
add
lcall
add
jecxz
rcr
loope
sub
adc
out
push
iret
pusha
xor
jmp
lods
xchg
gs
pop
add
xor
pop
lcall
nop
xchg
mov
inc
fidivrl
jo
pop
and
addr16
adc
xchg
add
jo
fidivs
xor
bound
jle
pop
xchg
sbb
mov
insl
add
dec
jno
fisttpl
push
pusha
loop
insb
jbe
popa
cmp
loope
lock
cmp
shl
es
les
mov
ret
lret
adc
pushf
test
adc
dec
fdivs
mov
pop
test
scas
ljmp
adc
rcrl
dec
in
enter
inc
adc
bound
mov
leave
out
enter
das
sbb
pop
add
xchg
adc
roll
jge
outsl
dec
adc
imull
int3
in
or
sbb
out
mov
cmp
add
test
xchg
mov
lods
cmp
xchg
aam
and
jo
lcall
cwtl
xchg
jno
inc
jmp
sub
mov
les
pop
dec
jp
lret
push
adc
push
lret
sarl
pop
imul
in
aam
pop
fldt
in
enter
add
jle
adc
inc
pop
and
in
sahf
lea
cli
jnp
dec
xor
inc
cmpsl
mov
pop
lea
mov
jl
and
or
jns
decl
push
xchg
push
add
dec
adcl
jne
pop
ret
std
popa
mov
mov
es
and
test
popf
arpl
pop
push
outsb
ret
push
or
mov
das
adc
rolb
rcll
sub
adc
into
ds
les
insl
pop
sahf
cmp
std
in
push
cmp
pop
mov
jp
pop
mov
shl
bound
or
jbe
jg
loopne
sti
jle
setle
jo
cmp
shl
cld
icebp
scas
adcl
addr16
test
ljmp
jo
dec
les
add
out
lock
or
leave
pusha
sub
fildl
fistps
pop
push
movsl
jnp
lds
loopne
pop
adcb
imul
enter
cmp
adc
imul
xchg
push
or
jmp
adc
aaa
pop
adc
notb
fsubrp
es
or
ret
sbb
inc
inc
pop
notl
mov
pop
movsl
mov
jge
fs
push
insl
std
add
mov
mov
ss
hlt
sub
xor
pop
std
sbb
or
pop
ja
lret
mov
sbb
lcall
push
sub
insl
ret
mov
xor
fistps
lds
dec
mov
dec
mov
lds
ljmp
dec
int3
mov
push
add
mov
out
adc
jecxz
sub
add
push
sbb
outsb
cwtl
mov
repnz
mov
mov
mov
push
push
mov
sub
repz
out
jbe
stos
aad
in
push
sub
pusha
ds
jb
sbb
pop
adcl
pop
mov
push
xor
sub
cmc
sub
fldt
push
inc
pop
dec
sbb
data16
sbb
jbe
push
sub
adc
movsl
push
add
cmp
dec
jle
es
mov
adc
stos
arpl
jle
sub
push
cld
sbb
mov
aam
inc
ret
inc
or
hlt
jb
jo
pop
into
mov
mov
scas
add
pop
out
inc
data16
push
in
xor
jmp
lahf
mov
pushf
jne
adc
imul
or
filds
es
cld
push
xor
in
test
mov
sbb
xchg
lcall
xchg
shr
gs
test
out
lods
add
sub
test
lods
out
fstps
jmp
sbb
mov
mov
sbb
xor
pop
cmc
fisubs
xorl
xchg
into
leave
jo
jmp
adc
cli
xor
pusha
dec
in
pop
and
xor
xorl
lret
es
jl
xchg
lds
mov
enter
and
popf
cmp
imul
mov
daa
jmp
inc
jae
cltd
sub
insb
push
es
cmp
movsb
das
lods
aas
clc
jle
popf
mov
icebp
movsl
scas
hlt
mov
xchg
nop
mov
push
and
or
push
xchg
add
test
sti
sub
ret
and
xchg
add
movsl
inc
das
sub
icebp
and
lods
fidivrs
dec
aam
add
imul
test
adc
mov
xchg
iret
xor
rcll
and
loop
inc
add
fwait
xor
xchg
cwtl
loope
pop
push
imul
in
adc
or
sarb
push
ljmp
push
cmp
adc
mov
add
dec
and
cmc
imul
jnp
andb
insl
push
pusha
aas
aas
pop
pop
mov
inc
push
test
mov
xchg
loopne
push
mov
inc
mov
out
dec
fadds
dec
xchg
sbb
add
mov
or
xchg
mov
inc
fucomi
jnp
dec
jmp
add
or
enter
test
jecxz
dec
int
fcoms
cmp
jno
stos
cwtl
cmp
sbbl
cmp
in
jmp
add
sti
les
sbb
push
push
lahf
rorl
mov
dec
popf
repnz
push
dec
push
fsubl
xor
sub
add
lea
mov
cmp
mov
jo
pop
dec
xlat
adc
aam
orb
popf
jle
mov
ja
out
xor
dec
push
xlat
lods
inc
or
ja
xchg
dec
push
mov
jge
cli
mov
mov
mov
hlt
jns
sub
mov
dec
mov
lea
arpl
add
and
ds
lods
or
and
imul
push
sarb
mov
sub
pop
je
popa
pop
lret
cmp
mov
xchg
aad
and
leave
sbb
fs
add
sub
mov
out
dec
or
in
adc
sub
pop
dec
rcr
sbb
dec
lea
push
rcll
mov
add
lret
and
fmuls
dec
and
mov
mov
fdivrs
iret
inc
nop
lea
sbb
or
cs
jae
enter
mov
dec
cmpb
sahf
add
mov
icebp
dec
cmp
mov
ret
iret
mov
dec
and
out
ja
dec
inc
dec
fisubl
mov
div
add
cmp
add
lock
xchg
lods
and
jb
int3
push
adc
sbb
xor
cltd
jge
add
scas
push
test
into
inc
mov
xchg
jl
adc
or
jo
popa
and
xchg
adc
ficoms
lods
test
enter
test
mov
bswap
mov
sbb
arpl
test
push
fisttpll
arpl
cmpsb
out
jo
mov
cwtl
mov
jae
cwtl
call
mov
mov
lods
mov
mov
and
dec
negb
jne
mov
cmp
xor
mov
adc
lods
inc
dec
push
push
and
jae
xchg
insl
jbe
mov
cmp
sbb
cltd
or
sub
jge
pop
ret
adc
ja
ret
fdiv
inc
mov
and
pop
js
scas
push
lcall
insb
or
mov
xchg
sub
cmp
add
lahf
int3
lods
push
and
push
test
sti
cmp
xor
add
mov
xchg
jmp
icebp
mov
daa
cltd
lcall
lods
xchg
sbb
cltd
enter
mov
dec
push
sub
mov
xor
popa
inc
repnz
and
movsl
jp
mov
in
test
nop
rorl
std
cmpsb
adc
sbb
leave
pop
fmull
ds
mov
das
test
push
push
das
push
test
jno
mov
rcrb
inc
outsl
or
mov
jns
lods
ret
iret
jb
lcall
pop
cmp
movb
movsl
out
outsl
and
mov
cmpsb
mov
cld
jg
rcr
lods
lods
nop
stos
pop
popf
jno
pop
add
push
aaa
jecxz
repnz
cmp
mov
js
mov
cmc
ds
nop
cmpsb
add
dec
push
dec
pop
stos
outsl
adc
mov
dec
and
out
lock
pushl
jp
fadds
sbb
push
push
fstl
xchg
fs
sbb
mov
jne
outsl
pop
mov
xchg
add
cs
push
ljmp
out
pop
fisttpll
jge
adc
push
pop
mov
test
fwait
hlt
clc
and
or
xchg
jno
jl
fadds
ss
adc
ret
pop
hlt
or
lcall
movsb
stos
push
cmp
pop
fwait
mov
or
push
push
mov
loop
mov
out
pop
shrl
cmp
cwtl
adc
negb
popa
or
dec
pop
pop
jle
fsubl
or
stos
lods
sbb
aas
iret
int
data16
fwait
stc
dec
cmp
out
sarb
inc
xor
mov
pop
nop
aam
cmpsl
test
pusha
ret
es
cmp
mov
scas
sub
jmp
sub
mov
adc
xchg
inc
jns
mov
hlt
jmp
icebp
repz
stos
jle
push
out
push
imul
push
and
mov
ja
inc
addb
adc
sarl
pop
enter
int3
sti
adc
das
imul
xchg
scas
cmp
fwait
cmp
cmp
and
sbb
sbb
test
jle
jge
cmpsb
pop
mov
jecxz
add
mov
jae
sub
insl
xchg
and
fimull
sub
xchg
popf
jae
arpl
andb
icebp
stos
int
mov
push
xchg
xor
dec
jne
arpl
out
mov
loope
inc
scas
sub
xor
push
int3
mov
test
or
dec
cs
or
scas
adc
push
push
jp
cmp
xchg
stos
mov
daa
pop
fs
loope
add
push
pop
in
cmp
test
ret
or
xor
outsb
ss
ret
sbb
shlb
lret
push
pop
aaa
repz
imul
aam
sub
adc
dec
andl
lret
call
xchg
ss
sub
and
mov
addr16
mov
jp
push
imul
pop
call
or
ss
jmp
ljmp
lock
ret
loopne
cmpb
icebp
pop
cmp
mov
lcall
mov
mov
dec
lock
pop
cli
insl
cmp
or
das
sbb
and
pop
push
push
pop
loop
pop
cltd
add
inc
cmpsl
cmp
mov
int
cmp
push
ficompl
out
jecxz,pt
mov
popf
sbb
inc
lahf
push
jne
sbb
mov
loope
fdivrs
sbb
mov
in
ret
pushf
xchg
sub
lret
movsl
pop
xor
lcall
inc
xchg
and
cli
mov
leave
je
test
or
les
jae
ljmp
arpl
mov
mov
flds
mov
aam
faddl
mov
lea
cltd
icebp
adc
push
sub
cmp
inc
pop
stc
nop
pop
fwait
andb
inc
cmc
and
fcmovnbe
loopne
orb
cmp
xor
lret
leave
dec
icebp
jbe
inc
sbb
stos
out
leave
cmp
rcrl
jg
sbb
test
out
add
mov
in
frstor
mov
xchg
sbb
aas
sahf
add
enter
stos
xchg
scas
pop
xor
ljmp
ds
jbe
mov
and
imul
lods
cli
mov
pop
mov
cmp
ret
push
or
outsb
mov
out
sarb
mov
xor
sbb
movsb
cmp
jecxz
pop
imul
test
xor
out
ss
inc
ja
dec
out
mov
je
push
jl
push
dec
push
scas
lcall
xchg
lret
data16
test
sarl
inc
stos
mov
push
push
jl
iret
push
popf
jp
subl
mov
call
inc
mov
mov
cltd
scas
into
jns
orb
push
jnp
sub
outsl
stos
rcl
sub
sbb
outsl
sti
push
mov
repz
test
push
repz
lret
and
mov
or
jecxz
mov
sbb
pop
pusha
xor
in
adcl
cltd
mov
repz
bound
pushf
imul
mov
adc
filds
pop
adc
jae
push
sub
dec
and
aad
inc
int
outsb
cmp
sbb
leave
add
cmc
hlt
int
xlat
incb
sub
jmp
xchg
into
sahf
xor
xchg
stos
cmp
add
mov
jle
mov
add
fcoml
adc
adc
pop
iret
jne
jl
add
std
loope
daa
lahf
mov
push
jb
adc
insl
sbb
inc
cmp
jmp
mov
mov
add
mov
mov
adc
inc
cmp
stos
jg
push
mov
jo
inc
dec
imul
ja
jnp
mov
sbb
pop
mov
or
idivb
cmp
jbe
dec
jg
ffree
push
loop
movsl
stos
or
in
push
repnz
cli
mov
sti
pushf
mull
mov
aaa
cmp
in
cmp
and
add
gs
xchg
inc
loope
in
ds
mov
movsb
test
fidivl
cmp
cmova
insl
inc
lock
pusha
fldl
xchg
pop
pop
pushf
cmpl
and
jno
enter
jp
dec
aaa
mov
inc
js
or
fstpt
mov
inc
cli
xchg
adc
sub
xor
mov
loopne
fidivrl
sub
repz
inc
test
ret
add
sti
mov
orb
xchg
ret
pop
stos
mov
ficompl
sarl
iret
cmp
pushf
scas
add
mov
sub
adcb
pop
lods
rep
mov
repnz
add
cld
jl
xchg
decb
fldl
adc
jl
sub
out
mov
stos
push
inc
movsb
lods
pop
scas
push
sub
loope
push
ja
pop
cltd
push
jecxz
jg
push
jecxz
sbb
xor
movsb
mov
inc
dec
addl
je
aaa
sub
loope
hlt
scas
and
lret
mov
js
shlb
ja
mov
les
and
xchg
xchg
sbb
mov
push
aam
insl
xor
hlt
mov
loopne
fcompl
call
aas
mov
push
inc
inc
lock
adc
mov
fistl
in
sbb
sub
mov
daa
dec
add
outsl
test
push
xor
mov
add
jp
xchg
adc
outsb
stc
aam
or
nop
aad
ret
test
push
mov
jmp
and
push
lds
jo
sub
fistpll
and
lea
push
add
fistps
sbb
adc
stos
lahf
cmp
and
scas
pop
int3
jge
pop
jnp
xchg
sub
mov
add
cmp
hlt
or
dec
out
cmp
lret
dec
add
pusha
jno
xlat
add
ficomps
mov
test
pop
dec
push
cwtl
ret
into
push
cmp
pop
mov
shr
mov
xchg
dec
test
xchg
lock
repnz
loopne
stc
ljmp
mov
ret
add
addr16
cld
mov
jmp
rcrl
add
lret
movsl
pop
ja
push
inc
scas
pop
imul
jnp
in
scas
hlt
insb
dec
push
ja
pop
mov
es
insl
cwtl
or
sub
sbb
sbb
jo
mov
add
jg
enter
sub
adc
cmp
push
fdivrs
mov
cmp
pop
pop
add
add
lods
andb
cwtl
inc
push
lea
lea
hlt
push
lahf
ret
sbb
aaa
icebp
testb
cli
mov
in
or
scas
bound
jge
out
inc
inc
loope
xor
mov
hlt
cmp
pop
cmp
ret
sub
inc
outsb
jno
scas
popa
mov
add
sub
ret
scas
cwtl
mov
movsl
loopne
push
mov
cs
sub
mov
icebp
pusha
and
xchg
mov
int3
daa
push
inc
pop
mov
decb
jle
leave
das
jns
lods
rcl
xchg
sbb
jb
sbbb
fcoms
inc
std
mov
shll
mov
cmp
dec
les
ja
lret
cld
xor
jecxz
xor
addr16
movb
and
fstpt
je
ds
leave
xchg
jne
jne
or
sub
push
out
add
es
jmp
mov
lds
ret
gs
cwtl
pop
loopne
gs
sbb
lods
push
jg
jg
xor
xchg
jp
jns
adc
addr16
adc
out
cld
dec
addr16
mov
outsb
dec
cli
cltd
cmpsb
imul
ret
mov
push
push
out
jg
add
sarb
push
mov
mov
pop
gs
push
fisttps
jmp
test
int
ror
mov
mov
fstl
pop
shlb
les
jnp
sarl
pop
mov
xor
push
jmp
mov
jo
xor
add
ud1
cmp
jmp
cmp
mov
jb
fmull
and
out
hlt
sbb
sbb
test
push
mov
xchg
ret
sar
shll
dec
adc
into
mov
arpl
dec
call
adc
inc
mov
cmpsb
test
rolb
jmp
mov
mov
xchg
jge
xchg
add
and
pop
pop
test
lahf
mov
or
ss
xchg
sbb
cmp
jbe
test
scas
cmp
xchg
aaa
clc
mov
push
xlat
cmpsb
iret
sub
push
sub
inc
add
push
xchg
gs
lcall
out
lahf
mov
xor
imulb
aad
mov
xor
pop
repz
popl
call
ja
loop
jmp
sarb
dec
jno
push
pop
pushf
sti
and
cmp
jb
mov
loopne
das
loop
sbb
adc
add
sbb
lahf
loop
sub
mov
int3
icebp
pop
mov
dec
jl
hlt
test
and
dec
scas
sub
dec
add
mov
arpl
jp
idivl
inc
jmp
ljmp
sub
pop
inc
xchg
adc
call
mov
pop
push
push
push
scas
mov
andb
repnz
nop
outsb
and
mov
pop
popf
adc
stos
and
mov
push
mov
popa
push
mov
idivl
push
jns
scas
scas
je
jb
add
xor
inc
mov
out
lret
mov
repnz
in
mov
sarw
dec
in
xchg
mov
cli
ficomps
jp
popf
enter
xlat
adc
mov
shll
push
cmp
push
int
dec
outsl
ret
jle
rclb
xchg
dec
xor
cltd
call
or
shr
jge
mov
ja
xor
pop
dec
push
inc
sbb
jge
test
sbb
push
mov
cmp
mov
mov
xchg
or
leave
mov
repz
pop
mov
sub
xchg
dec
pusha
mov
sbb
push
int
jns
leave
inc
lea
mov
ret
pop
xor
or
xchg
loop
into
cli
sti
cmp
mov
push
popa
push
mov
xor
adc
xchg
sbb
sbb
fwait
mov
nop
mov
rclb
cmp
imul
and
lds
xchg
fdivl
inc
and
cli
xchg
sar
xchg
or
push
in
pop
mov
jl
sar
sbb
lea
jg
or
cmp
jge
icebp
sti
repnz
imul
dec
out
jne
mov
pop
lock
mov
mov
pop
movsl
and
in
fnsave
push
sti
ss
mov
mov
jb
jne
scas
jnp
or
jns
fisttps
insb
and
aad
arpl
cmc
push
in
push
fstpl
insl
cmc
jmp
xor
flds
lea
dec
inc
pop
mov
outsb
sub
ret
dec
mov
out
movsl
push
sti
mov
adc
jmp
movsb
ret
adc
and
das
cmc
mov
sub
cmpsl
cmc
loope
ds
nop
and
inc
pusha
push
icebp
dec
inc
and
sbb
aad
mov
das
adc
xchg
daa
fs
fsincos
pop
inc
dec
daa
push
cmpl
jnp
lds
cmp
mov
cmp
test
test
dec
pop
push
out
ljmp
jo
xchg
into
mov
xlat
sub
cmp
sar
jb
scas
enter
xchg
addr16
jb
jg
add
gs
cmp
inc
hlt
dec
insl
or
xchg
pop
and
mov
sti
mov
xor
jecxz
test
or
fcomi
mov
out
push
mov
in
leave
test
notb
shrb
xchg
push
inc
mov
push
sti
fidivrl
ret
cmp
scas
lock
inc
sub
push
xor
int
inc
add
je
cmp
pop
shrb
cli
pop
mov
mov
test
mov
cli
ss
es
push
push
dec
gs
push
in
icebp
cli
pop
push
popa
mov
sub
jecxz
aam
xor
cmp
into
jmp
sub
popf
clc
sbb
adc
shl
sti
fdivs
stos
adc
in
icebp
push
lcall
mov
les
popf
cmp
in
andl
repz
out
jp
test
insl
lods
in
pop
test
jmp
xor
loope
in
mov
sub
loopne
test
lods
mov
add
add
lahf
cli
mov
xchg
shrl
int3
add
js
imul
cld
jbe
push
adc
mov
ret
add
sub
mov
jb
mov
dec
pushf
jns
dec
mov
adcb
in
push
inc
jle
data16
push
cli
out
xor
ror
xorb
mov
jns
cmp
and
outsb
pop
pop
ud2
repnz
cmp
loope
or
lods
outsb
adc
insl
test
insl
xchg
decb
cmp
out
xchg
inc
pop
cwtl
cmpsl
push
cmpsb
cmc
loope
fincstp
cwtl
xor
insl
push
out
int
push
xchg
cmp
bound
in
inc
ja
xor
ljmp
rorb
dec
adc
pop
cmp
mov
inc
cltd
gs
inc
sub
xor
inc
xchg
ljmp
ja
add
js
push
mov
push
sbb
movsb
lcall
mov
adc
call
movsl
iret
and
xor
rcr
pop
iret
cmp
pushl
jmp
pop
mov
dec
cmpsb
cmp
stos
aas
loopne
lods
push
movsl
sti
cmp
into
inc
jns
aaa
leave
cld
das
sbbb
fstl
jp
adc
arpl
repz
push
enter
in
cmp
xor
inc
hlt
daa
adc
testb
sti
scas
jns
mov
jno
mov
cwtl
sbb
hlt
add
test
jno
inc
in
out
mov
fldenv
out
out
cmpsl
sbb
jno
and
cld
mov
into
icebp
call
shlb
out
outsb
xchg
in
and
mov
adc
pop
scas
dec
jne
pop
inc
mov
add
call
cld
ljmp
cwtl
fadd
stos
cs
sarb
xchg
mov
mov
mov
sub
lret
push
into
xlat
mov
or
xorb
sti
arpl
cmp
xchg
lahf
cmpsb
or
jno
loopne
hlt
out
lcall
mov
xlat
dec
pop
ljmp
iret
jmp
pushf
aaa
jae
pop
aam
lret
add
adc
mov
sub
int3
fisubrs
push
and
sbb
lock
test
push
sub
inc
push
xor
mov
orl
rclb
out
out
jge
insb
inc
leave
negl
jns
mov
add
mov
jmp
dec
xchg
mov
mov
push
mov
mov
sub
pop
sbb
or
pop
pop
xor
xchg
enter
dec
mov
into
mov
inc
test
pop
or
mov
inc
mov
sub
cmp
dec
cmp
leave
cmp
pop
shll
ret
ja
vpmacssww
xchg
out
cwtl
dec
or
push
int3
movsb
insl
cmc
push
mov
jecxz
sti
jg
xchg
dec
cltd
pushf
push
popf
mov
lcall
sbb
arpl
pop
xorl
xchg
xchg
inc
push
xlat
nop
and
in
push
outsl
jb
cmp
stos
std
stos
cmp
lods
or
divb
mov
add
mov
cmp
leave
cld
jbe
sbb
mov
mov
push
mov
sbb
cld
lcall
adc
inc
mov
out
mov
fistpll
mov
sub
lds
lea
mov
xor
arpl
outsb
xchg
fistpl
mov
adc
dec
rcrl
outsb
jecxz
inc
outsl
xchg
repz
lahf
mov
pop
xor
sub
outsl
xor
push
pop
les
js
jmp
dec
sub
xchg
es
dec
movsl
or
fcomi
inc
add
scas
lcall
jae
lea
adc
sbb
or
jbe
les
inc
cld
leave
imul
and
dec
or
addl
and
test
mov
mov
repnz
add
sahf
mov
movb
lahf
mov
aad
sub
stos
jecxz
xor
pusha
fnstenv
xor
lahf
cmc
andb
in
mov
cwtl
push
in
into
dec
and
dec
ud1
divps
cmc
inc
test
int
add
stos
les
mov
aad
insl
addl
jns
or
jg
jmp
jl
cmp
aas
addr16
add
lods
into
xor
clc
shll
jl
fists
sbb
lock
aas
popf
mov
imul
or
and
lock
cld
adc
sbb
mov
test
mov
cmp
pop
iret
leave
jno
mov
sbb
sarl
inc
xchg
pop
adc
outsl
mov
or
mov
push
adc
imul
add
imul
outsb
mov
mov
xchg
mov
popf
jns
adc
stos
add
pop
test
xchg
pop
xchg
mov
popa
and
es
ss
cmp
insl
inc
push
and
test
sbb
xchg
jecxz
mov
lock
rcrl
lret
pop
je
xchg
xchg
cmp
daa
jg
stos
cmp
das
lret
movsb
sti
out
mov
jbe
mov
fiaddl
xor
sub
outsb
mov
sub
mov
or
mov
and
lret
xlat
in
mov
negb
cltd
cld
scas
jo
jnp
mov
icebp
pop
mov
or
popa
mov
push
or
and
sbb
cltd
sub
push
les
cwtl
pop
and
out
sbbb
jnp
mov
mov
pop
jecxz
out
push
lret
jp
jl
xchg
mov
add
cmc
lcall
ljmp
push
cmp
aam
and
jno
test
adc
adc
jl
aas
pop
std
dec
jne
sbb
call
adc
mov
jmp
mov
jmp
mov
mov
adc
rcl
outsb
and
cwtl
in
mov
fdivr
adc
pop
mov
jo
loop
loop
xor
cwtl
xchg
jnp
inc
push
sbb
dec
je
push
sar
cmc
aam
add
cwtl
adc
mov
popa
cmc
mov
cmp
rolb
add
push
aas
push
lahf
jnp
ljmp
cltd
repz
jle
ret
pop
adc
test
or
mov
push
jg
aam
test
add
cmp
cmpsl
jge
aam
xlat
jl
xor
inc
mov
xor
push
xchg
nop
mov
cmp
push
push
cmpsl
clc
mov
imul
popf
xchg
and
lahf
xor
shl
jne
push
jl
lods
fadds
or
test
push
iret
xor
mov
scas
icebp
je
inc
sti
into
and
dec
icebp
cld
inc
pusha
testl
inc
inc
mov
sub
scas
add
pop
sarb
lcall
push
dec
xchg
addr16
jne
data16
push
mov
into
xchg
fidivrl
std
sbb
adc
and
push
imul
push
cmp
hlt
aas
int3
mov
adc
sbb
dec
mov
cmp
jns
pop
add
sahf
sahf
mov
push
inc
test
stos
push
mov
sbb
ljmp
mov
inc
in
inc
dec
es
and
movsb
xlat
movb
enter
sub
cmpsb
cmp
cmp
notl
icebp
stos
jae
cld
inc
in
int3
hlt
and
call
push
mov
push
pop
movsb
decb
sti
sub
out
loope
pop
call
jb
clc
hlt
pop
lahf
ds
test
lcall
fdivrs
add
outsb
fwait
ss
popa
cmp
add
arpl
addb
push
mov
push
push
mov
sti
stc
mov
dec
or
mov
in
mov
fidivrs
insl
add
cwtl
add
test
rcrl
pusha
xor
push
in
dec
push
xchg
outsb
dec
addb
sub
movsl
and
mov
mov
fwait
data16
dec
dec
ret
mov
dec
jp
jecxz
sbb
pop
mov
sbb
sub
scas
das
inc
lret
into
or
imul
int3
push
test
jg
arpl
test
cmp
and
cmpsb
add
inc
and
cli
bound
clc
lds
shlb
xchg
gs
test
cld
lahf
inc
sbbl
ret
pop
je
cs
dec
push
push
shlb
pop
outsl
and
push
stos
pop
int3
jo
inc
or
popa
mov
sbb
cmpsb
mov
lcall
test
or
inc
aas
pop
cld
jge
push
and
movsl
sub
sbb
push
lock
mov
ja
mov
fisttpl
out
sub
xchg
pushf
jecxz
dec
fwait
pop
and
test
fs
sbb
outsb
sahf
xchg
mov
popa
sbb
andb
lea
stos
jl
inc
popa
cmp
mov
je
dec
repnz
sub
pop
stos
in
inc
dec
mov
leave
scas
dec
rorb
and
stos
and
sbb
pop
nop
jno
sub
repz
pop
inc
jns
dec
scas
xchg
rorb
sti
xor
in
ja
enter
mov
mov
sahf
dec
cmpsl
aad
mov
shrl
cld
mov
cmp
inc
xor
pop
es
mov
xchg
cli
out
inc
push
inc
out
dec
cmp
jle
cmpsl
popa
lock
adc
popa
add
pop
adc
add
out
test
xor
mov
push
dec
jo
inc
mov
sub
mov
add
mov
xchg
push
jp
xchg
push
add
mov
inc
lods
aas
mov
out
cli
lcall
cltd
cmc
aas
lock
push
mov
cmpsl
xchg
add
cmp
ljmp
sbbb
scas
test
xorb
push
notb
sub
add
xor
sbbb
movsb
gs
not
inc
fwait
and
jno
and
mov
popf
jecxz
cltd
mov
xor
mov
hlt
adc
push
add
mov
push
std
inc
pushf
xchg
sbb
loope
jg
mov
jo
xor
cmp
fstps
int3
mov
jno
cmpsb
bound
popf
sbb
and
subb
push
mov
insl
cmp
dec
pusha
fisubl
enter
cltd
sbb
push
jno
dec
push
lods
mov
dec
adc
adc
xchg
enter
test
xchg
mov
call
jno
js
or
adc
adc
cmp
les
cmp
xchg
ficoml
dec
or
push
xor
jne
xor
je
mov
xchg
sbb
jo
and
icebp
enter
cwtl
outsl
das
jecxz
mov
mov
push
aam
and
xchg
sahf
ja,pn
jecxz,pn
add
inc
std
rcrl
push
cmp
lea
ret
cmpsl
ds
inc
nop
and
pop
xchg
xchg
outsl
outsb
xchg
lds
xor
jno
mov
fs
inc
mov
sbb
orl
cmpsl
jmp
imul
add
paddsw
add
and
jp
push
jg
addb
xor
lret
jmp
fistl
fcmove
pop
fs
fisttpll
fcoms
push
mov
dec
lods
pop
sbb
mov
into
mov
pop
scas
add
test
lock
test
add
ret
pop
jmp
jae
inc
mov
xchg
sbbl
mov
scas
and
inc
in
inc
int3
mov
push
in
ret
sbb
mov
push
push
dec
es
out
ret
or
int3
or
popf
dec
dec
push
inc
inc
cmp
mov
repz
call
cmp
xor
test
sub
add
in
fdivs
xor
pop
ficoml
mov
push
jbe
push
shr
in
xchg
daa
cmp
or
shl
pop
test
xor
inc
cltd
dec
add
dec
xor
mov
add
mov
ja
in
imul
jns
cs
ljmp
pop
jb
testb
sbb
rol
lahf
mov
ret
xchg
cmp
mov
mov
lds
scas
movsb
sub
dec
mov
shll
fnsave
cwtl
sbb
sbb
jl
enter
arpl
ljmp
pop
mov
clc
push
flds
push
roll
movsl
jecxz
shll
loopne
fidivl
cltd
ja
sub
sub
pop
pop
add
xor
pop
icebp
mov
imull
mov
pusha
dec
movsb
jle
mov
scas
add
out
out
int
push
xor
xlat
push
cwtl
loop
dec
sub
push
stos
or
jb
je
cld
push
mov
pop
bsr
dec
push
add
add
mov
or
dec
add
dec
jmp
mov
pop
in
fadd
push
and
idivl
mov
push
mov
sbbl
pop
jae
shl
cld
rcrl
hlt
jne
mov
sti
mov
jp
lahf
inc
add
add
call
sub
nop
inc
xor
add
sub
in
or
jne
inc
fisubl
push
stos
out
adc
insb
dec
jb
jle
inc
adc
fiadds
and
outsb
repnz
outsl
lret
adc
shl
daa
es
and
xor
cld
test
out
adc
or
mov
aam
jp
sbb
jp
in
jp
cmp
hlt
pop
sbb
dec
das
aas
mov
push
push
or
scas
xchg
insb
data16
dec
das
stos
test
subb
insl
mov
dec
inc
nop
mov
and
and
push
sub
push
call
lret
jne
loope
fidivrs
jae
sbb
or
test
daa
adc
push
push
or
lea
cmp
add
sbb
jle
inc
push
dec
in
out
sub
add
outsl
and
or
test
jge
xchg
fwait
decl
ds
jmp
je
mov
out
or
fcoml
push
mov
dec
xchg
test
das
int
push
roll
pusha
jecxz
ret
mov
popa
jb
out
xor
pop
sahf
jbe
popf
das
sub
test
mov
sar
push
sbb
inc
jle
xor
pop
pop
mov
jmp
or
add
sub
mov
ror
movsl
inc
std
mov
mov
test
sbb
xchg
push
in
push
and
fcomp
idivl
cli
push
inc
stc
mov
jmp
insb
fdivrl
push
insl
hlt
or
dec
fisubl
pop
inc
fbld
mov
stos
js
lock
push
sarb
shll
lods
mov
rclb
sub
cmp
xchg
lret
adc
lret
sarl
mov
pop
pop
cmpsb
or
test
sbb
testl
ret
lock
ja
icebp
xchg
sub
mov
jno
pop
imul
push
mov
add
ret
fcos
mov
or
int
jo
and
pop
xchg
add
iret
testb
mov
icebp
js
mov
mov
fdivrl
add
insb
pop
push
lcall
sbb
outsl
iret
ja
jno
ss
or
ljmp
push
in
mov
jne
lahf
jb
jecxz
les
pop
lods
sbb
and
mov
rolb
inc
dec
xchg
fstl
inc
jmp
add
mov
jecxz
dec
pop
jge
sbb
addl
das
sbb
cmp
scas
std
add
hlt
sti
test
mov
test
fwait
shlb
aad
add
cli
out
mov
out
loopne
mov
cmp
xchg
mov
les
and
push
inc
out
aaa
cmovl
cmc
cmp
jne
fmuls
in
lods
mov
out
leave
test
popf
pop
test
xor
mov
out
lret
inc
fadds
push
pop
ffree
sub
fdivl
testb
adc
xor
adc
divl
push
xor
enter
call
pusha
mov
ljmp
sub
bound
inc
cltd
jmp
mov
push
sbb
add
push
sbb
scas
adc
js
or
jl
mov
jge
push
or
sarb
lret
push
xor
movsb
icebp
add
rclb
dec
jle
icebp
pop
in
jmp
lcall
cld
aad
cmp
scas
mov
ljmp
jbe,pt
stos
fs
sbb
lock
pop
pop
movsb
fnsave
shrb
jle
pop
xchg
inc
dec
andb
aas
mov
jg
daa
add
setp
aam
stos
lret
testl
nop
mov
pushf
pop
and
iret
cwtl
jne
jp
lret
adc
loopne
shrb
mov
int3
mov
or
pushf
and
xchg
fisubl
pop
dec
xor
adc
xor
mov
rcrb
cmp
cmp
xchg
dec
sub
sub
addr16
xchg
mov
rcrl
sti
push
pop
stos
loope
adc
bound
stc
inc
dec
lods
sahf
push
and
mov
stos
xchg
lcall
insl
and
lods
xor
jecxz
push
shr
sarb
loopne
cmpsl
lods
pushf
push
pusha
and
ret
push
movsb
in
xchg
inc
cmc
jae
sub
adc
xor
pop
lock
inc
fwait
sbb
daa
xchg
sbb
inc
or
mov
mov
stos
or
fisttps
push
aaa
dec
jp
mov
mov
and
mov
mov
pop
jnp
pop
lds
mov
pop
add
and
fscale
adc
leave
sub
or
inc
inc
and
test
ret
js
mov
xchg
pop
and
mov
mov
rcl
call
shll
call
popf
xchg
ss
mulb
xor
pop
cmp
jns
fcomps
sbb
lea
push
and
popf
or
xchg
mov
iret
popf
pop
sarl
jb
cmp
push
imul
or
inc
popf
or
jp
pop
lds
xor
push
stc
pusha
push
test
mov
out
add
in
add
xchg
ljmp
jg
insb
je
insb
dec
xor
mov
pop
outsw
cmpb
inc
sub
pop
cmpsl
scas
in
std
int
test
jl
pop
mov
jmp
pop
sub
aad
loopne
lret
push
dec
adc
xor
rorb
sub
jno
subb
adc
xchg
pop
in
out
insl
lds
or
xlat
nop
leave
mov
pop
in
call
xchg
pop
mov
mov
fdiv
inc
or
lcall
ret
ret
scas
cmp
ja
xor
cmpsb
sbb
call
clc
aam
enter
add
in
je
mov
int
jecxz
inc
xor
xchg
pop
pop
pop
pop
in
adc
push
mov
outsb
jnp
es
shrl
and
sbb
cld
dec
xchg
lret
dec
or
mov
sub
xor
jl
add
cs
and
cmp
sti
push
add
stos
cmc
idivb
ret
int3
mov
cltd
mulb
and
mov
insb
push
call
frndint
add
add
cmpsl
icebp
pop
pusha
aaa
adc
rcrl
mov
aam
xorb
loopne
hlt
jns
iret
fwait
jno
out
dec
idivb
das
jge
test
jnp
jb
push
mov
add
sub
fcompl
ret
lcall
test
mov
cld
sub
stc
insb
cltd
xor
fisubrs
mov
mov
in
out
sub
outsb
jo
or
mov
ficompl
sti
mov
or
lds
sub
sbb
and
aaa
cltd
cmpsb
and
push
push
hlt
inc
addr16
in
and
mov
stos
or
filds
pop
and
or
stos
int3
std
jg
lea
dec
pop
scas
dec
js
dec
popa
xchg
mov
sub
push
sub
sub
lods
mov
inc
pop
inc
cmp
leave
mov
pop
aad
jg
mov
dec
out
cmc
push
das
push
into
dec
or
in
xor
cltd
and
add
pop
pop
in
cli
adc
and
scas
jbe
inc
or
call
sub
test
or
bound
mov
pop
add
into
xchg
into
mov
ret
ficomps
dec
testb
mov
loop
xor
sbb
dec
sub
popf
icebp
xor
add
pop
lea
ja
fs
insb
cwtl
faddp
sbb
add
into
hlt
sbb
sub
mov
jbe
jge
cmpsl
or
pop
lods
enter
bound
sti
xchg
in
bound
xchg
lock
xor
mov
inc
and
imul
nop
sbb
in
mov
jge
pop
xchg
pop
call
sbb
outsl
sbb
lahf
xor
mov
xchg
inc
sbb
jns
mov
es
jmp
aad
iret
add
jmp
iret
pop
mov
fsub
jg
shrl
lcall
mov
adc
sar
xor
je
jo
mov
leave
imul
test
int3
dec
push
adc
insb
pop
insb
hlt
daa
and
divb
lret
sub
sahf
cmp
sub
aas
in
mov
daa
mov
fadd
xchg
sbb
jmp
and
add
sbb
bound
scas
lahf
cwtl
mov
ljmp
push
lcall
mov
test
bnd
insb
popa
in
or
dec
fcomps
cmpsl
icebp
push
enter
cmc
add
xor
mov
hlt
in
or
fs
fsubl
pusha
jns
out
lret
js
or
mov
mov
int
mov
pop
xchg
sti
sub
subb
leave
cs
ds
outsb
stc
cmp
inc
sbb
mov
cmp
sbb
inc
mov
nop
xchg
imul
pushf
scas
xlat
inc
loope
pop
inc
push
xchg
push
sar
xchg
aam
pusha
lock
jne
aaa
pop
pop
sbb
stos
pop
stos
cmpsl
push
ror
lcall
or
jmp
lds
arpl
adcl
push
xchg
lret
jb
mov
mov
add
sub
mov
int3
subb
pop
cmpsl
imul
mov
popf
xchg
xchg
inc
clc
jb
xchg
push
mov
lcall
movsb
sub
loop
popa
out
xlat
jnp
leave
jg
mov
jo
lret
aam
push
xchg
movl
scas
adc
add
mov
and
inc
std
fdivl
push
inc
mov
leave
xor
jecxz
inc
inc
add
setp
adc
jecxz
loope
sub
cmp
pop
shll
jecxz
je
pop
mov
jg
cmpsb
jo
jae
outsb
push
cmp
or
pop
jge
sbb
xor
or
jmp
ret
outsb
mov
jp
jle
push
int
pop
lcall
push
lods
fwait
xchg
insl
sub
or
bound
js
sub
xor
mov
inc
test
test
xchg
fmulp
mov
lods
repz
lock
xor
lcall
out
fidivl
cmpsb
aad
sahf
icebp
cmp
add
scas
push
ficoms
fisttpl
cmp
xchg
outsl
pop
inc
call
aam
repnz
lods
pop
mov
je
test
xchg
lock
push
enter
popf
fistpl
mov
dec
lods
fsubrl
push
sbb
cmpsl
insb
cmp
iret
cmp
pop
sbb
sbb
push
add
clc
cmp
jle
lcall
ret
aam
fisttpll
pusha
adc
cmp
mov
iret
mov
das
hlt
repz
jb
ds
addr16
or
jl
ljmp
movsb
jne
or
ret
inc
lods
pop
mov
pop
add
inc
aaa
hlt
in
repz
repz
not
or
pop
add
lret
mov
xchg
or
cmp
xchg
sub
jae
scas
dec
pusha
and
mov
imul
fstps
inc
stos
movsl
loop
syscall
int
push
loop
push
sub
in
or
cltd
repz
mov
aad
sub
clc
fwait
push
imul
add
test
jnp
sti
pop
and
into
xor
andl
sub
jno
xor
repz
xor
stos
mov
mov
inc
adc
xor
and
push
xor
aaa
in
push
mov
scas
xor
push
outsl
leave
fldcw
and
stos
jae
adc
xchg
dec
inc
mov
outsb
aas
add
and
repnz
mov
bound
pusha
repz
je
fs
out
add
rolb
dec
sarb
jae
jecxz
popa
in
and
jecxz
adc
mov
sbb
add
push
cmpl
std
xchg
mov
pop
sbb
mov
xchg
pop
dec
out
push
pop
shl
lods
in
shrb
movsb
xor
xchg
call
mov
movsb
xor
xchg
xlat
sub
andl
xchg
xor
jmp
mov
mov
shrl
push
bound
cmp
mov
add
jo
mov
adc
dec
adc
push
sub
inc
lds
jns
sbb
pop
mov
inc
inc
outsb
sub
dec
loop
xchg
cmpsb
ja
mov
and
ja
movq
pop
lods
jns
or
imul
out
xchg
and
cmp
dec
mov
sub
pop
push
and
aas
xchg
sbb
push
push
int
jecxz
jmp
cmp
das
xchg
data16
adc
dec
sbb
in
pop
mov
jne
and
sbb
in
jp
sbb
popf
cmc
clc
shrb
adc
mov
test
lods
push
cld
ja
mov
rcll
fnsave
outsb
insl
mov
cmp
jno
cwtl
pop
dec
push
lcall
out
xor
push
loop
lods
pop
les
jmp
pop
clc
add
data16
push
stos
stc
sbb
ds
sahf
sub
in
loopne
mov
test
lds
cs
pop
lods
popf
pop
in
mov
dec
pop
xor
mov
xor
dec
jno
add
iret
sti
add
fadd
out
mov
xlat
ljmp
adc
mov
jno
rcrb
stc
lahf
jg
sbb
cld
nop
xchg
stc
jg
arpl
cwtl
inc
pop
jle
sbb
int3
sub
jmp
gs
pusha
insl
adc
cltd
push
jmp
popa
dec
in
repnz
jbe
mov
mov
popf
dec
jmp
not
mov
les
add
sub
test
fwait
jnp
dec
rcrb
mov
icebp
mov
ss
imul
aas
in
int
arpl
cmp
dec
mov
mov
jge
push
sub
xor
mov
data16
aas
lret
or
ljmp
adc
sub
xor
pushf
testl
repnz
inc
inc
push
test
sbb
ret
adc
jae
mov
xchg
fistl
push
loopne
pop
in
imul
xchg
mov
lds
sbbl
aas
ljmp
dec
cli
int
adc
lret
cli
pusha
or
xchg
scas
jb
jb
out
pop
mov
repz
mov
gs
and
in
mov
js
popf
into
rcll
pop
cmp
add
adc
mov
outsl
stc
jb
push
test
outsb
int
std
push
xchg
sbb
xchg
ja
mov
mov
in
push
icebp
ljmp
subb
cld
sub
enter
ret
or
aaa
jae
push
js
test
out
jp
nop
stc
daa
punpckhwd
popf
stos
inc
sti
sub
iret
outsl
fdiv
push
cmp
hlt
sbb
xor
sub
inc
sub
xchg
inc
gs
push
push
sbb
pusha
inc
cmp
sub
test
test
xchg
mov
cmp
imul
cmp
push
push
int
fxam
mov
lock
shll
insb
loopne
dec
shll
and
xor
les
ret
insl
adc
ret
cmp
ss
cld
aaa
xchg
bound
gs
stc
mov
jo
add
ret
test
sub
sbb
scas
orb
ret
fsts
addr16
scas
aas
imulb
add
mov
add
outsb
lret
cmpsb
repnz
imul
addb
mov
xchg
lret
addr16
stc
push
jns
inc
repnz
pop
lock
fwait
test
lods
cld
cs
ret
jg
or
jl
cmp
jbe
add
mov
dec
ret
jge
out
jge
add
or
xor
rol
dec
jecxz
mov
call
mov
addl
rolb
lock
add
lret
mulb
push
cmc
rorb
or
dec
lret
test
and
mov
push
data16
push
push
sub
inc
fldenv
outsl
push
stos
ror
mov
jmp
out
jo
sbb
mov
sbbb
add
sub
and
pop
sarl
nop
jno
gs
push
mov
std
xchg
stos
adc
xchg
dec
fbstp
push
aaa
pop
scas
aam
ljmp
popf
cld
pop
mov
ret
lods
repnz
in
sti
adc
sub
pop
enter
cmp
jnp
repnz
and
push
push
into
int
js
mov
scas
mov
int3
mov
lds
mov
imul
imul
pop
mov
jo
scas
or
sbb
sahf
push
xchg
addb
add
pop
in
mov
movsb
push
push
outsb
std
sub
shl
xchg
ja
adc
or
jo
jbe
test
push
dec
push
xlat
push
push
dec
mov
mov
fs
arpl
mov
pop
les
ss
xor
mov
xchg
repnz
shlb
xor
mov
cwtl
fstp
dec
mov
and
and
xchg
xchg
cmp
out
and
or
leave
mov
mov
xor
and
mov
into
cmp
lcall
mov
lea
loop
cmp
adc
jecxz
jp
fs
popf
mov
insb
push
pop
add
into
lods
nop
add
in
cmp
mov
mulb
inc
sub
fadds
add
xor
movsl
push
inc
sub
rcrb
mov
cld
mov
data16
repnz
cld
sahf
ds
fucomi
lods
lret
jo
inc
sub
out
mov
sub
ss
mov
incl
add
mov
mov
popf
sbb
xchg
jp
sarl
stos
call
mov
loopne
cmp
mov
ret
mov
ds
lret
sub
inc
jbe
sub
mov
mov
loop
and
shlb
repz
lret
scas
jg
dec
xchg
cld
cmpsb
mov
mov
xchg
push
daa
pop
push
jae
cwtl
lcall
jns
mov
sahf
jecxz
inc
cmp
paddw
mov
or
popf
stos
aas
fcoms
movsl
push
xchg
jle
std
mov
test
inc
pop
xchg
and
mov
jns
jo
adc
in
adc
xchg
sbb
mov
cld
shrb
mov
dec
in
pop
push
xchg
cmp
das
repnz
frstor
add
mov
popf
xor
call
addb
dec
movsl
pop
mov
adc
gs
or
jne
push
es
xlat
cltd
push
or
iret
es
dec
shrl
jle
pop
or
ds
in
adc
call
cmc
pop
cs
xor
cli
push
lods
or
dec
adc
pop
pop
lcall
dec
fnstsw
push
and
ljmp
clc
outsb
mov
add
aaa
mov
cmp
test
bound
push
outsl
mov
je
rcr
imulb
adc
jb
popa
inc
mov
les
xor
mov
xchg
inc
mov
test
pop
jl
mov
jns
pop
mov
add
jl
rcr
lahf
xor
add
stos
add
cmp
push
mov
xor
cld
out
mov
cmp
sbb
pop
decb
stc
push
imull
jp
pop
dec
add
sbb
jle
xor
dec
stos
ds
pushf
jb
mov
aaa
xchg
sub
inc
mov
movsl
lcall
add
test
sbb
pop
cmpsb
sbb
and
imul
iret
dec
decb
fs
cmp
inc
loop
mov
fisttps
test
pop
repz
push
add
fcoms
out
sbb
cmp
cld
and
jne
clc
sbb
mov
dec
dec
push
arpl
sub
mov
mov
roll
and
int
lock
push
aad
and
push
lcall
add
addr16
int3
fld
cmc
inc
and
and
das
jg
mov
imul
adc
repnz
sbbl
ficoml
daa
inc
xlat
mov
cmp
cmpsl
daa
outsl
push
es
outsb
or
pushf
fistps
std
dec
je
pop
imul
xor
adc
mov
cmp
mov
cmp
mov
mov
in
out
jbe
mov
mov
jo
mov
push
or
int
dec
or
sbb
rclb
mov
ja
xchg
jns
jns
push
popa
push
in
movsb
stos
xchg
js
fs
jb
stos
cld
out
and
cwtl
and
cmpsb
or
pop
mov
ret
sbb
int
imul
imul
cmp
inc
sbb
clc
in
repz
adc
push
test
push
lods
rcr
adc
jb
push
pop
xlat
push
loope
sarb
jl
or
or
jae
xor
rcrl
out
icebp
cld
sahf
cmp
inc
repz
fdivrp
sub
adc
daa
inc
cmpsb
add
xor
and
js
movsl
in
in
cmp
aaa
jg
jle
faddl
mov
add
jmp
xchg
sbb
jl
cmpsl
pop
fwait
jle
aam
pop
mov
jo
adc
jle
xlat
mov
sahf
add
js
flds
xchg
les
xchg
insl
inc
inc
dec
nop
fnstenv
out
sub
lahf
mov
add
sub
pop
popf
fldl
mov
std
shlb
mov
hlt
xlat
xchg
outsl
pop
lds
lock
xor
clc
aad
je
or
cmp
push
xchg
sarl
je
ljmp
std
loopne
iret
xchg
mov
push
test
mov
mov
push
and
mov
cs
popa
fists
push
jl
dec
jo
int3
jnp
mov
jns
das
insb
or
loope
js
and
clc
cmp
rorl
mov
pop
pop
into
mov
adc
out
cmpsb
pop
mov
inc
pusha
dec
and
fmuls
loope
add
insb
mov
sbbl
outsb
mov
add
lods
inc
jbe
add
mov
repnz
pusha
fiaddl
mov
xor
mov
ss
lret
cmpsl
mov
loop
adc
fistpl
cmp
jge
push
jl
push
int3
jmp
jbe
cs
xchg
inc
adc
mov
inc
mov
mov
xchg
in
in
sbb
pop
incb
pop
out
pusha
cli
aaa
aaa
stos
outsb
fstps
add
pop
sub
test
inc
fistpl
cmpsb
test
sub
aaa
push
repnz
sbb
lds
clc
rclb
bound
xor
sbb
adc
psubq
cmovbe
cmp
mov
rorb
or
adc
out
movsl
cmp
fbstp
in
loope
push
mov
popa
mov
cwtl
xor
xchg
sbb
clc
mov
fstpl
jmp
inc
gs
inc
push
ud0
fs
scas
inc
xor
cmp
pusha
mov
adc
fs
fwait
cwtl
ret
js
adc
mov
inc
pop
xchg
loope
xchg
mov
jno
mov
dec
nop
lods
jge
cmp
scas
insl
test
pop
xchg
add
sub
inc
sub
div
push
cmp
ljmp
pop
mov
insb
xor
push
mov
sub
push
pop
je
dec
jle
jecxz
jnp
adc
pop
out
lock
jge
add
sub
xor
into
js
test
jp
movsb
dec
xor
push
ds
dec
into
fs
das
lods
lahf
add
push
pop
test
lret
pop
add
jae
dec
pop
push
cmp
add
clc
nop
push
int3
lods
ljmp
hlt
and
mov
cmpsl
test
test
adc
jmp
xor
pop
stc
sbb
or
fwait
mov
insb
jno
daa
mov
shll
fstpl
cli
mov
call
dec
in
inc
scas
push
xor
sbb
dec
sti
push
pop
push
mulb
bound
mov
test
jge
xor
pop
out
lea
push
int3
adc
mov
nop
mov
push
mov
adc
adc
and
in
fcmovnbe
push
add
add
pop
repnz
cltd
das
sbb
inc
jno
dec
addr16
paddb
clc
movsl
xchg
mov
cmp
inc
jae
jno
sbb
mov
addr16
mov
lods
xor
push
jp
cmp
sub
les
rorl
ds
or
sbb
inc
pop
cmp
iret
in
aaa
adc
movsl
js
adc
sbb
mov
pop
lret
push
in
lahf
scas
mov
jne
xor
push
push
xchg
lock
push
fldt
push
or
jnp
jne
sahf
arpl
mov
jmp
push
insb
fcompl
sub
xor
adc
inc
push
stc
jno
nop
jne
mov
adc
rcl
pop
sbb
mov
lds
adc
addr16
sub
jne
adc
shrl
icebp
mov
cmpsl
inc
fistpll
inc
jae
jb
sbb
fistpll
in
mov
jo
aam
pop
pop
inc
mov
ljmp
shll
fisttpl
imul
fildl
jne
adc
lods
imul
lock
add
aad
out
dec
out
insb
adc
je
mov
pop
daa
jp
adc
in
ss
inc
js
test
cmp
xor
repz
enter
mov
cmp
rclb
jmp
add
or
and
insl
jmp
ss
and
add
out
dec
loope
out
add
dec
into
add
xchg
sbb
dec
sahf
xlat
jb
in
inc
mov
fdivl
in
mov
test
ret
xchg
imul
fmul
fisttps
mov
daa
pop
inc
inc
push
pop
dec
movsl
andl
fstl
filds
dec
fimull
dec
mov
sub
add
stos
mov
xchg
inc
sub
add
mov
xchg
mov
sbb
stos
lret
push
fs
mov
jecxz
sub
sub
mov
sub
bound
xchg
mov
ficomps
loop
aaa
repnz
test
outsb
pop
push
es
insb
jp
ljmp
xor
mov
jecxz
and
mov
fmull
mov
push
aas
or
sbb
mov
sub
int
add
add
inc
sbb
decb
into
push
loopne
cmp
pop
mov
rcll
adc
mov
test
and
xchg
movsb
orb
mov
mov
adc
or
lock
adc
pop
sahf
ljmp
push
aam
mov
cmp
add
inc
mov
sbb
js
in
movsl
insl
jecxz
and
push
or
mov
lea
dec
nop
xchg
push
jae
repnz
arpl
pusha
jne
sarb
or
xor
dec
adc
cmp
sarl
fs
movsb
adc
xor
mov
stc
sub
enter
andl
lods
dec
test
test
cs
push
pop
lret
and
sti
mov
stc
jne
std
sahf
adc
xchg
cmc
push
dec
aam
push
xchg
popf
cltd
es
push
addr16
call
bound
inc
lock
pop
js
scas
test
shlb
mov
fists
int
mov
popf
jo,pt
xor
cld
cmp
and
int
inc
and
cwtl
jno
gs
mov
mov
adc
xor
lea
fdivl
fstpl
lods
mov
xor
add
enter
rcrl
lret
bound
nop
inc
outsb
shll
cmp
push
pop
xor
adc
fisubs
movsl
jae
jo
adc
or
in
aam
mov
mov
sbb
pop
out
xor
loopne
push
jns
repnz
lea
scas
imul
stc
add
sbb
ss
mov
cs
sub
bound
sub
inc
mov
adc
out
pop
jo
pop
add
xor
out
scas
xchg
xor
mov
pop
xor
or
test
dec
jg
dec
xchg
lock
test
decb
fdivrs
inc
jp
xchg
cmp
ret
in
ret
jg
sub
stos
out
cld
insb
stos
dec
sub
add
rcrb
and
popl
xchg
pop
sub
mov
popf
pushf
call
pop
subb
mov
std
dec
test
stos
ffreep
insb
add
adc
stc
ret
dec
dec
mov
push
js
lret
dec
mov
mov
sub
jmp
adc
mov
push
mov
jns
cli
mov
xchg
je
push
cmp
shll
adc
and
dec
dec
rcr
add
xchg
hlt
jns
push
fmul
jb
fstps
dec
pop
stos
mov
rcrl
mov
dec
aaa
lock
test
xchg
pop
mov
stos
adc
mov
loope
jle
nop
cmp
inc
adcl
jecxz
loop
popa
inc
jbe
mov
sub
xlat
jle
push
or
lds
aaa
dec
jbe
and
mov
push
cmpps
jae
loopne
scas
ja
cmc
push
sbb
adc
mov
adc
dec
push
pop
or
xchg
pop
in
push
xor
ror
sub
xchg
xor
lods
xor
pop
clc
xchg
stc
jge
and
pop
fidivrs
push
ds
dec
mov
imul
lods
mov
lcall
movsb
and
shlb
mov
push
add
push
lcall
fwait
jno
jmp
sub
test
fidivrs
xchg
sub
fstpt
ficompl
mov
lods
xchg
fdiv
mov
loopne
xor
shl
pusha
shlb
loope
test
jae
dec
ret
test
adc
and
fisttps
clc
push
jae
add
mov
shl
insb
leave
imul
xchg
pop
mov
mov
loope
jge
or
sbbl
xchg
sub
adc
in
hlt
out
stc
adc
test
mov
jne
or
ja
sub
dec
xor
imul
fcoms
push
xchg
in
mov
in
std
pop
mov
outsl
hlt
lret
fcompl
mov
fdivl
popf
jge
adc
jnp
or
pop
push
dec
cld
sahf
std
test
bnd
jne
scas
xchg
inc
sbb
outsb
dec
adc
das
jge
pop
sub
ds
nop
cwtl
jb
inc
cmp
or
ljmp
lods
mov
cwtl
jl
stc
add
addl
mov
jge
in
fisttpll
outsl
loopne
cmp
cmpsb
aam
cld
xor
adc
adc
and
int
gs
ret
sub
xchg
mov
mov
mov
test
or
add
stos
fiadds
aas
lock
xchg
adc
test
jb
add
hlt
add
xchg
jno
sub
xchg
stc
icebp
sbb
mov
adc
bound
jp
jae
cmp
or
test
push
cli
fs
shll
aas
sahf
adc
mov
outsl
shll
and
gs
inc
jge
sbb
add
mov
pop
es
lcall
cmp
or
jo
pusha
cmpsl
sbb
stos
mov
or
stos
sarb
or
cwtl
call
lock
dec
mov
add
bound
xchg
cmp
test
mov
stos
fwait
arpl
and
adc
mov
lahf
popa
pop
pop
js
jnp
stos
stos
cltd
outsb
xlat
sbb
cmp
cmpsl
call
leave
outsb
pop
movsl
mov
push
sub
cmp
cmpsb
mov
cwtl
dec
sbb
cmp
fdivr
popa
test
mov
lret
repnz
push
and
mov
loope
sti
xor
jmp
mov
fildll
imul
cli
or
xor
or
xchg
sub
fidivl
insl
lds
jg
insl
cmp
dec
stos
arpl
scas
pop
clc
sbb
cmpl
idiv
sbb
dec
pop
inc
dec
inc
dec
pusha
and
jo
mov
dec
jp
ss
fbld
orb
test
jmp
and
lahf
in
rorl
gs
test
adc
xlat
cli
add
jno
push
das
inc
movsl
aad
jmp
hlt
mov
ljmp
mov
cmp
push
push
adc
pop
ret
adc
pop
scas
outsb
mov
mov
fwait
xchg
adc
inc
fnstcw
dec
or
ljmp
mov
int3
mov
mov
mov
aad
dec
inc
mov
dec
add
js
sbb
ljmp
add
lret
fsubr
sahf
cltd
push
in
xor
and
lods
ret
push
xchg
sti
int3
xchg
inc
daa
and
int
mov
test
and
daa
es
arpl
mov
bound
adc
dec
rcll
sub
mov
mov
je
jmp
insb
mov
scas
ds
and
xor
pop
or
mov
hlt
mov
pop
addb
iret
dec
jo
or
jmp
push
jge
sub
push
cs
iret
xchg
les
loopne
adc
call
repz
jb
jmp
lahf
inc
jmp
mov
mov
inc
or
into
es
rol
xor
jmp
lahf
aam
adc
sub
lea
ds
mov
out
repz
rcrl
xor
mov
cmp
shrb
stos
arpl
cmp
cs
push
jnp
pop
movsb
mov
sbb
sbb
sbb
mov
xchg
out
mov
mov
dec
bswap
add
push
jp
loope
ret
push
or
pop
ds
sbb
imul
adc
inc
insl
pop
int
jl
mov
dec
jle
jno
xchg
pop
lret
mov
cmp
imul
mov
sub
shl
lret
enter
lds
fcomp
cmp
cmpb
add
pshufw
pop
mov
adc
xchg
les
add
add
and
je
je
call
ret
xor
and
sbb
subl
push
ss
mov
gs
cmpsb
out
js
es
cmp
lock
fldl
addr16
in
dec
fiaddl
mov
ret
jecxz
mov
xor
jbe
lahf
insl
pop
stos
rol
adc
xchg
mov
and
mov
dec
add
sub
push
movsl
jmp
sarb
inc
sub
push
fildll
shl
adc
mov
push
mov
push
pop
mov
lods
mov
mov
stos
ret
pop
jmp
pusha
mov
popf
pop
aas
out
in
push
lret
pop
sub
cmpsb
mov
hlt
push
ret
popa
cmp
jns
mov
aaa
into
std
popf
mov
pop
leave
rorl
add
cmp
add
jbe
in
daa
jb
lcall
scas
ja
sub
mov
mov
test
scas
test
in
adc
push
push
jmp
xor
mov
les
loope
mov
call
add
dec
in
xchg
aam
sub
pushf
mov
stos
aad
bound
inc
sub
call
xchg
jns
icebp
ror
leave
lock
fcoms
cmc
scas
inc
lret
mov
cli
sub
in
mov
out
push
xchg
into
xchg
pop
sub
jne
mov
mov
dec
andl
xchg
or
cltd
into
mov
pop
int3
arpl
mov
imul
fwait
cmp
ljmp
lret
fdivr
inc
sub
fs
js
xchg
adc
test
insb
adc
rolb
xor
mov
cmp
mov
add
cs
or
fistl
out
fcmovnbe
dec
sbb
out
or
loope
inc
and
sbb
sbb
rclb
mov
popf
lods
loop
mov
mov
lcall
gs
inc
ss
or
mov
cmpsb
in
and
add
shll
jns
pop
ljmp
shl
loopne
jge
mov
out
and
jl
andl
dec
jmp
out
mov
inc
fdivs
inc
adc
lahf
ds
add
or
aaa
leave
sub
sbb
and
push
adc
call
out
adc
jg
pop
daa
pop
mov
es
stc
lods
pusha
movsb
push
sbb
or
ret
call
js
lahf
icebp
inc
imul
outsb
push
xor
mov
call
orb
and
test
int3
aad
lret
rcrl
xor
mov
negl
cmpsl
xchg
push
lcall
iret
cmpsl
addl
ds
dec
adc
fsubrl
sbb
dec
mov
xchg
out
stos
aad
loope
or
sbb
std
mov
push
loope
jae
or
sbb
dec
pop
pop
cmp
mov
pop
lret
out
out
test
lds
jecxz
push
ficoml
and
arpl
mov
cmp
push
pop
das
ljmp
sub
inc
adc
add
lods
xchg
xor
inc
ljmp
xor
dec
stc
test
mov
lods
inc
insb
xchg
dec
repz
mov
pop
lods
xchg
mov
mov
lret
fildll
xchg
add
adc
pop
xchg
insb
xchg
into
enter
dec
jle
sbb
push
sbbb
mov
rolb
push
subb
sub
dec
add
pop
rcl
data16
data16
mov
adc
pop
xchg
imul
add
icebp
pop
aaa
cli
outsb
popf
lret
outsl
mov
push
shl
lcall
add
dec
push
and
adc
sub
mov
adc
in
or
sarb
jmp
inc
mov
test
mov
clc
xchg
xor
aam
fsubl
leave
push
mov
jge
mov
std
mov
leave
push
push
fldl
xchg
jle
lods
xor
mov
jmp
clc
out
popa
mov
jne
jl
xor
jg
jg
xor
mov
fs
sbb
pusha
or
icebp
aad
ret
xor
cmpb
sahf
lods
dec
adc
loope
dec
xor
ljmp
repz
rorb
mov
filds
jmp
dec
les
dec
push
or
ret
cmp
and
sahf
xor
mov
or
int3
outsl
add
jns
test
sbb
jae
sub
adc
pushf
icebp
les
loopne
fs
add
jae
ljmp
xchg
jge
and
fdivrs
jne
mov
push
push
pop
pop
xor
mov
sbb
jbe
es
add
xlat
mov
imul
fcmovu
jae
mov
dec
xlat
loope
popa
ss
lret
jecxz
cmpb
out
push
int3
lret
out
dec
and
push
fcoml
out
aam
cltd
cmc
fs
cmp
cld
jne
sbb
aas
call
and
ss
jl
dec
cmc
lods
cmp
or
sbb
rclb
mov
rorb
xchg
and
push
mov
push
hlt
scas
sahf
jle
out
mov
push
adc
push
out
mov
rolb
sub
int3
push
out
push
mov
or
and
jmp
outsl
adc
fs
fdivp
test
aad
mov
fs
sub
test
pop
daa
xchg
scas
stc
adc
mov
mov
lods
shr
mov
mov
inc
insb
gs
loopne
mov
cmpb
fdivrp
adc
out
lret
aad
add
or
repz
dec
loop
les
ret
push
iret
or
jno
mov
movsb
push
orb
cmp
inc
scas
pop
inc
add
push
scas
add
and
loopne
cmpsb
mov
gs
add
pop
jo
pop
int
test
arpl
mov
shll
or
xchg
scas
push
and
scas
rep
sub
int
sub
sbb
or
pushf
pop
and
test
roll
mov
rorb
sub
jb
mov
pop
and
and
pop
cmc
inc
ss
inc
xor
push
sbb
dec
pop
xor
pop
pop
dec
add
pushf
stos
nop
cmc
jb
push
sbb
test
bound
add
aas
je
cmp
dec
ds
jmp
cli
mov
les
xchg
inc
push
mov
in
sub
scas
in
sub
mov
ficompl
std
pop
icebp
out
xchg
push
movaps
lret
inc
sub
ja
loopne
sub
inc
aaa
lock
loope
push
xchg
leave
and
jle
and
mov
and
gs
mov
addr16
adc
dec
dec
lods
add
push
jmp
stos
and
push
mov
sbb
jno,pn
scas
test
fsubr
mov
test
push
fsub
mov
dec
stos
or
and
xlat
cmpsl
rorb
test
lods
cld
adc
add
rcrb
mov
cmp
mov
push
push
and
sbb
xor
xorb
push
lds
mov
das
outsb
xchg
clc
rcrl
dec
dec
inc
and
scas
call
push
mov
lretw
pop
mov
adc
push
mov
or
je
in
jge
fwait
cld
inc
lret
ret
mov
xchg
inc
add
xor
loopne
cwtl
adc
fidivs
sahf
fldenvs
inc
push
sub
sbb
insb
pop
pop
andb
fildll
adc
cmp
je
push
pushf
jmp
loop
jnp
push
ret
ja
fildll
cld
icebp
jbe
sahf
test
cmp
or
pushf
mov
adc
repz
push
dec
xchg
mov
pop
repnz
cmpsl
ret
repnz
fimuls
fstpt
neg
jp
adc
testb
cmc
movhps
daa
bnd
cmp
lcall
add
mov
or
repnz
aad
inc
adc
fwait
push
popa
sub
xchg
lret
push
lock
add
mov
inc
gs
ret
test
into
or
test
mov
push
mov
inc
sub
pop
push
sub
stos
jb
je
outsl
lods
or
fiadds
stos
cld
inc
cmpsl
jl
push
push
dec
test
mov
pop
jl
lea
out
or
popf
movsl
jecxz
mov
mov
test
pop
cwtl
mov
ret
sbb
mov
push
cs
cli
dec
xchg
push
mov
mov
out
xor
shrl
and
xchg
loopne
xor
mov
fwait
test
ja
mov
std
shr
xchg
jbe
adc
xchg
in
xchg
mov
xor
js
es
or
ret
daa
pop
lods
or
test
push
lcall
dec
aaa
inc
push
dec
icebp
adc
rolb
mov
push
shl
jl
in
mov
cmp
into
jbe
inc
jecxz
lcall
xlat
mov
add
push
dec
sahf
cmp
jg
jb
inc
mov
adc
popa
add
lods
pop
iret
or
push
mov
push
daa
mov
rcrl
movsb
sub
out
pop
mov
sbb
jbe
push
enter
xchg
call
mov
loope
psrlq
cli
sbb
jno
decb
add
in
stos
bndmov
mov
test
lods
pop
icebp
ds
movsb
adc
dec
and
lods
cmpsl
mov
inc
js
daa
add
jmp
data16
loope
ja
add
cmp
cmc
mov
dec
jmp
fimuls
and
stos
mov
lods
out
adc
or
insl
out
inc
push
xchg
call
mov
cmp
shrb
je
adcl
std
ljmp
and
lods
xor
in
addb
sahf
sbb
jmp
add
js
and
mov
mov
jbe
jae
and
cmp
dec
push
int3
sbb
out
sbb
mov
lcall
fcmovb
ljmp
movsb
mov
test
in
scas
loop
and
cmp
and
lds
push
out
out
shr
test
ljmp
insb
cs
lret
mov
loopne
sbb
pop
pop
mov
int
nop
fadd
and
and
sub
das
lea
enter
adc
pop
xchg
mov
fucomp
xchg
orb
jno
lret
lea
in
lock
dec
push
mov
hlt
lcall
xchg
stc
jle
mov
test
insl
int3
xor
inc
mov
add
lock
sarl
inc
adc
test
je
sbb
adc
sbb
adc
and
sti
stos
in
fst
and
add
pop
xlat
ror
cli
push
repnz
dec
or
int3
int3
sub
and
xchg
add
out
mov
loopne
xchg
pop
mov
sub
cmpb
cld
scas
sbb
jno
sub
lret
add
incb
add
out
dec
rcrl
dec
pop
pop
sti
out
mov
sub
push
je
ss
repz
xor
lock
nop
pop
cmp
in
mov
je
aad
popf
bsf
pop
adc
nop
jns
lret
inc
mov
test
mov
popf
insl
addl
sahf
out
sbb
call
sti
inc
xchg
mov
lea
enter
das
lock
add
rclb
mov
loop
movsl
shr
or
and
cld
stos
ret
and
loop
fs
add
clc
clc
jmp
mov
jb
sbb
lock
jle
stc
stc
and
arpl
lea
and
sub
aad
and
loope
jmp
push
les
push
cmp
fidivrl
adc
test
dec
mov
jle
fwait
or
das
adc
dec
aam
outsb
bnd
dec
sbb
cmp
adc
leave
pushf
jno
shll
rorb
xchg
pop
sbb
inc
push
fdivl
shlb
sbb
add
gs
and
sub
test
push
adc
add
stc
mov
sbb
sbb
push
jne
jae
mov
mov
pop
clc
sbb
sub
mov
cmpb
movb
ja
and
push
aad
fidivl
scas
out
mov
in
ljmp
dec
imull
and
lds
add
lret
xor
inc
xlat
dec
jae
push
xlat
xchg
jge
and
test
sub
adcb
jo
adc
sahf
clc
lea
pop
sbb
mov
push
and
out
ss
inc
dec
lods
push
pop
mov
push
add
es
cld
andb
push
leave
lret
out
notb
jae
jb
popf
add
fwait
pop
mov
test
cmp
inc
jg
popa
movsb
jl
mov
add
xor
mov
loop
jbe
push
push
imul
inc
out
lret
add
push
and
mov
in
mov
pop
lds
pop
xchg
push
scas
push
iret
test
cmp
sbb
lret
int
cmpsb
dec
xchg
and
in
push
dec
mov
popf
sbb
frstor
out
test
mov
cmpb
js
dec
nop
imul
cmp
cmp
lods
mov
cmpsb
rclb
das
rcll
sub
std
jg
lret
push
arpl
ss
int3
loop
add
pushl
mov
dec
stos
lods
ja
pop
fdiv
jg
cmp
loop
mov
and
test
sahf
stos
pushf
mov
xchg
shl
sbb
incl
mov
inc
xchg
dec
jne
or
mov
aad
mov
add
ss
in
dec
jge
push
push
mov
push
push
jg
aaa
xor
xchg
ja
push
mov
lods
push
mov
mov
xchg
icebp
xchg
call
or
add
push
add
jne
fs
push
paddsw
or
xor
mov
js
lea
rcr
mov
push
pop
rol
adc
mov
test
dec
test
imul
inc
push
sbb
lods
enter
in
pop
lods
stos
bnd
mov
jmp
iret
out
test
pop
mov
ror
xor
mov
sbb
adc
loope
fistpl
add
and
push
fdivs
ljmp
mov
stos
rol
adc
jle
scas
sub
out
add
jns
dec
push
cltd
add
cmp
add
sub
push
movsl
sub
adc
cmp
mov
orl
out
sbbb
ds
out
out
das
je
jl
sbb
cmp
lcall
outsb
or
sahf
xchg
scas
xor
jg
adc
jp
scas
lret
lods
adc
test
mov
cltd
test
dec
dec
out
mov
aam
outsb
mov
or
mov
xchg
cmpsb
mov
xor
jmp
mov
outsb
or
lret
stc
clc
mov
push
or
jp
mov
sahf
lea
sub
lods
mov
push
xchg
dec
int
arpl
sti
push
xchg
sub
test
push
lds
out
call
mov
mov
inc
push
dec
fwait
out
and
jnp
jb
xchg
mov
jns
dec
add
rclb
sbb
insb
test
out
add
add
fnstcw
ja
jl
xor
inc
mov
mov
mov
call
and
mov
push
push
add
dec
pop
scas
add
inc
sub
push
in
mov
jne
push
sub
push
inc
push
sbb
jno
jns
out
xor
ret
lods
adc
mov
ud0
xchg
xchg
mov
out
mov
imul
sbb
popa
xchg
mov
sub
pushf
add
fisubrl
sub
shlb
fmull
in
in
fisttpll
xchg
dec
mov
jge
mov
pop
sub
popf
xor
dec
dec
cmp
add
repnz
cltd
inc
mov
aaa
jp
ss
subb
mov
push
lret
shrl
dec
add
je
push
xchg
je
mov
cs
jb
scas
pop
lods
adc
cs
lods
out
test
sub
or
xor
jg
scas
xor
in
out
out
mov
cmp
ds
daa
sbb
sbb
pop
montmul
cmpsb
test
cmp
int3
mov
sarl
lret
pop
pop
ds
popa
pop
jbe
cmp
in
das
inc
scas
pushf
pop
adc
sub
xor
ja
push
inc
pop
push
xor
imul
push
mov
add
unpckhps
dec
insl
dec
cmp
lret
mov
lret
scas
mov
jge
pop
mov
push
dec
imul
mov
add
adc
cmp
push
adc
movsl
pusha
in
sub
xchg
mov
shrl
cmpl
repnz
js
mov
mov
jo
leave
and
sti
repz
outsb
adc
sbb
test
mov
aaa
in
decl
inc
icebp
pusha
adc
xchg
inc
or
add
out
pop
mov
cmp
filds
mov
fisubl
pop
cltd
inc
dec
lahf
das
jbe
mov
aas
les
in
xor
adc
xchg
push
inc
incl
push
inc
xchg
aas
ja
cmp
pop
cmp
arpl
movsb
add
insl
sub
insb
mov
mov
outsl
sub
jmp
pop
xor
jae
int
cs
inc
mov
nop
add
gs
fsubs
das
mov
lret
fiaddl
nop
into
dec
xchg
cltd
mov
jecxz
jb
sbb
ret
xchg
and
arpl
cli
in
sub
sahf
pop
jecxz
ja
imulb
dec
mov
xchg
fs
dec
divl
test
xor
sti
insl
fcompl
lods
imul
out
sti
ss
pop
bound
cwtl
daa
cmpsb
roll
jae
lds
cmp
ja
call
or
push
cmp
aaa
out
mov
sub
in
negb
jl
bound
cmp
out
adc
fildll
xchg
loopne
test
ss
sbb
xchg
lock
lea
cmpsb
cmpsb
popa
mov
push
xor
adc
imul
mov
lcall
xchg
mov
cmc
movsl
jo
push
adc
lret
sub
jl
mov
ds
mov
push
mov
xchg
bnd
sub
cmpsl
push
lock
call
xchg
jmp
insb
aad
enter
lock
cmp
pop
mov
or
clc
in
pop
pushf
pushf
sub
lock
mov
xlat
das
out
push
loopne
dec
movsl
das
mov
ret
cmp
push
setle
addr16
add
dec
sub
out
push
push
out
or
cli
adc
rcrb
mov
add
mov
jbe
lock
aad
jp
ret
das
push
pop
pop
pop
pop
pop
dec
xchg
pop
or
xchg
lahf
push
inc
imul
clc
ret
or
shrl
mov
jecxz
jp,pn
sub
ficoms
orl
loop
outsb
scas
shr
xor
dec
pop
cwtl
mov
mov
mov
adc
insb
dec
pop
dec
call
mov
ror
in
orl
pop
in
shrb
jl
adc
push
mov
jle
mov
inc
sahf
imul
add
dec
push
adc
jb
cli
adc
cmpsl
mov
mov
aad
repz
imul
test
jmp
xchg
jge
sbbb
mov
stc
cwtl
leave
inc
jns
sub
popa
pop
mov
cli
and
xchg
ja
mov
cwtl
inc
mov
scas
mov
dec
adc
pop
ljmp
ljmp
out
xor
lahf
inc
sbbb
lea
test
xor
mov
jl
lock
daa
xor
insl
or
xor
cld
das
jg
add
in
sub
arpl
xchg
filds
add
push
and
test
adc
push
and
mov
xchg
dec
mov
xchg
pop
test
xlat
adc
lahf
jo
xchg
add
mov
mov
xchg
loope
sbb
andb
out
sub
rorb
mov
icebp
lods
pop
push
insl
sbb
sbb
cmp
mov
lcall
xor
pop
mov
jle
lahf
dec
push
inc
js
and
shlb
and
ljmp
cmp
dec
mov
popf
mov
and
pop
je
dec
jecxz
add
cmc
pusha
cmovp
inc
or
pop
stc
fistpl
bound
lcall
cmp
out
xchg
cmp
inc
push
mov
jns
sbb
lock
push
xor
sbb
cmpsb
pop
mov
dec
ret
inc
mov
ljmp
cmpsl
lea
out
sti
ret
test
add
xor
loopnew
mov
loop
cmpsl
inc
inc
test
pop
mov
hlt
jl
push
fld
or
inc
mov
lods
sahf
mov
leave
push
stos
loopne
fs
js
push
push
sub
xchg
fmul
cli
cmp
sbb
fs
inc
ret
cwtl
xchg
adc
jecxz
pop
xor
mov
retw
dec
insb
push
push
dec
jp
push
test
mov
fdivl
mov
iret
fisttpll
cmpsl
jecxz
xor
mov
cltd
fs
insl
xlat
rclb
pop
cmp
mov
jmp
aam
pop
adc
sub
stos
push
loop
sti
mov
xor
push
xor
jg
push
stos
jge
mov
sbb
pop
jg
mov
cmp
xor
pop
mov
pop
jno
and
pop
jno
jb
test
inc
std
jp
xchg
xchg
add
cmp
test
or
test
pop
push
loop
rcrl
mov
les
mov
fwait
jbe
mov
mov
xchg
aad
imul
loope
in
outsl
pop
pop
push
int
mov
mov
loopne
xchg
sbb
mov
sbb
sbb
popf
add
loopne
push
mov
test
push
incl
ljmp
dec
dec
sbb
dec
dec
cmpl
stc
enter
ds
or
mov
je
add
sub
mov
jmp
adc
mov
in
lea
sbbb
mov
sbb
lret
movsl
mov
movsb
add
sub
in
repnz
bswap
insb
dec
and
add
cmpsb
add
jp
sbb
push
insl
cs
adc
sub
sbb
ja
or
int
or
add
lock
lods
sub
push
adc
arpl
stos
mov
jns
leave
ja
sub
dec
dec
mov
and
ds
adc
lods
out
jae
aaa
in
lcall
sarb
idivl
sbb
xor
flds
or
inc
insb
cwtl
xor
cld
out
ret
pop
mov
and
adc
gs
cmp
jnp
cltd
xor
sub
inc
lcall
outsl
orl
jmp
sub
loopne
sub
mov
stos
push
fisttpl
jnp
js
jbe
icebp
xchg
jg
mov
mov
pop
std
cmp
or
bound
sub
jns
dec
repnz
dec
mov
loope
push
and
jl
in
dec
lss
push
clc
mov
dec
sbbb
xchg
test
cwtl
pop
cmpsb
iret
mov
xchg
lret
pop
aaa
adc
mov
dec
ljmp
aad
ds
cmp
push
dec
mov
imul
not
inc
push
push
mov
sarl
mov
in
sti
push
jmp
ds
and
ds
dec
jge
mov
xchg
fcomps
ficompl
icebp
pop
xor
adc
mov
call
xchg
pop
out
xchg
je
test
xchg
inc
xchg
inc
nop
lahf
mov
aas
xlat
aas
push
jg,pt
pop
or
out
stos
jmp
sahf
pop
hlt
ja
or
rorl
testl
in
std
jl
test
pusha
xor
pop
cmpsb
or
stos
jb
stos
jg
cli
xor
out
xor
fmulp
cld
shrl
cmp
repz
imul
cmp
repz
jmp
pop
push
outsb
pop
in
lahf
nop
jp
pop
dec
xchg
sbb
repz
mov
stos
xchg
scas
cmc
imul
loop
ret
jecxz
sbb
aaa
pop
cmp
scas
xor
xor
adc
cmpsl
test
and
hlt
jl
xor
push
inc
outsl
push
ret
addr16
jns
xchg
sarb
aam
mov
adc
rorl
je
in
aad
mov
mov
mov
add
add
fsubrl
faddl
test
fidivrs
xchg
jbe
pop
popf
negb
ds
cwtl
popa
adc
inc
daa
subb
mov
sub
xor
add
mov
xlat
xchg
xchg
adc
and
mov
shrl
xor
imul
pop
enter
insb
call
add
call
sbb
and
mov
movsl
or
cs
aad
mov
jns
dec
int
pop
data16
ret
test
shll
dec
cltd
cmp
xchg
sub
adc
idivl
add
jno
cmp
insl
movsl
aas
adc
pusha
scas
das
xchg
test
push
dec
cmp
push
mov
mov
add
inc
out
xor
pop
dec
in
pop
sub
cld
pop
or
fidivs
jae
repnz
repz
mov
int
in
lret
xor
push
push
sub
cmc
dec
pop
cmp
ja
sahf
mov
mov
mov
repz
popf
fldt
push
pop
lcall
imul
and
test
das
rclb
jle
outsl
add
bound
lcall
sbb
test
and
add
aaa
push
rol
aas
lea
fildll
fldt
test
or
push
enter
pop
adc
jbe
hlt
inc
lea
or
daa
jecxz
pop
rcll
rcll
call
jmp
mov
outsb
jo
cltd
ss
jbe
cmp
xchg
mov
shrb
fwait
jl
roll
pop
mov
push
xor
push
xor
repz
testb
and
push
inc
in
shlb
sub
sbb
mov
or
lods
arpl
adc
mov
pop
cld
iret
add
push
jp
gs
test
cmp
xchg
rorb
cmc
push
push
mov
out
stos
mov
ss
scas
and
jno
ljmp
adc
lret
mov
inc
int
xor
inc
cmp
imulb
jmp
adc
std
stos
int3
cs
or
jle
leave
adcl
iret
or
fists
ss
mov
cmp
mov
sti
mov
addr16
adc
push
rcl
jp
inc
fsubrl
jp
hlt
lds
daa
sbb
cmp
pushf
divl
rcr
aad
call
jmp
sub
ss
les
mov
cmp
int3
mov
push
push
inc
inc
call
outsl
dec
das
outsl
push
dec
jne
mov
daa
pop
add
push
mov
enter
rorb
js
and
or
mov
mov
pop
jg
xor
pop
cwtl
mov
inc
or
test
cmp
orl
stos
daa
faddl
adc
mov
dec
mov
and
xchg
ror
lock
or
jp
jbe
or
add
cmc
xor
sarl
add
fcmovbe
dec
adc
mov
and
mov
int
xchg
cmpsl
int3
lret
dec
sbb
jno
mov
mov
xchg
mov
xchg
inc
mul
jmp
and
and
mov
or
cmc
jp
push
jl
test
push
test
mov
mov
hlt
shrl
or
or
out
arpl
pop
lods
xor
mov
xlat
je
imul
gs
dec
xor
pop
and
push
push
into
inc
add
adc
add
add
mov
dec
gs
fsubs
fmull
mov
mov
out
movsb
out
bound
fs
pop
cmpsb
aaa
pop
and
push
cmp
addb
int
mov
test
mov
aam
in
push
jbe
and
mov
mov
cld
sub
cmp
xlat
test
aas
jmp
mov
jmp
xor
fwait
mov
dec
fsubs
outsb
xor
mov
daa
adc
jle
mov
xchg
cmpsl
fs
pop
ret
insb
fcom
mov
pop
sub
lds
push
push
mov
mov
cltd
push
mov
mov
out
mov
addr16
aas
outsb
test
ret
pushaw
pcmpgtd
lret
xor
jl
or
fistpll
inc
mov
leave
into
jle
pop
mov
push
sti
dec
pop
out
in
xchg
lahf
cmc
insb
xor
stos
cltd
jmp
push
notb
std
es
stc
cmp
in
jb
mov
jns
jae
mov
sahf
negl
mov
inc
mov
mov
in
mov
cwtl
pop
adc
jmp
pop
cmpsb
outsb
ret
popa
sub
pushf
loope
xchg
add
int
xchg
rcll
inc
cmp
cmp
cmp
imul
lods
xor
and
es
mov
adc
push
mov
xchg
mov
lahf
cmp
xor
icebp
jecxz
pop
lock
pop
mov
jge
push
pop
cli
js
rclb
mov
das
addr16
insl
sbb
insb
dec
jo
push
cmpsl
push
das
jnp
jae
shll
xchg
test
pushl
test
ss
adc
rcrl
lcall
push
sbb
and
mov
fnsave
add
ret
push
push
or
roll
cmpsb
lret
in
xchg
outsb
fucomip
sti
mov
test
mov
repz
clc
push
fsubl
imul
pop
mov
sub
sub
fldenv
xor
addb
aaa
dec
and
jnp
pop
dec
fs
or
dec
movsb
xor
push
or
inc
xchg
jae
sub
jnp
dec
push
jnp
pop
popl
in
xchg
pop
aaa
test
movsb
rorl
loop
test
ficoms
sbb
in
leave
adc
pushf
push
cmp
pop
push
dec
xchg
fisubs
lret
mov
pop
push
adc
mov
cmp
into
mov
clc
cmp
ret
xchg
rolb
outsb
scas
and
add
bswap
mov
push
cmp
jecxz
lods
mov
scas
lea
fsubrl
subl
pop
jp
push
jg
cmc
out
add
loopne
outsl
scas
dec
sbb
push
fs
cmpb
in
ficompl
cld
or
sbb
dec
sub
and
adc
loop
push
sub
sti
xchg
in
ret
sbb
sbb
dec
popa
cmp
fisttpll
push
shll
jbe
mov
fists
fwait
aaa
push
pop
aam
scas
jns
mov
push
gs
push
push
js
xorl
in
jbe
mov
xchg
ficoms
mov
outsl
fnstcw
orb
aam
lea
adcl
xchg
mov
sbb
insl
push
mov
pop
aam
sahf
xchg
outsl
jg
sbb
mov
xor
jbe
cmp
invd
lret
subl
sbb
shl
shll
push
inc
xchg
inc
xchg
sti
pop
inc
inc
xchg
int3
int
jp
jae
mov
aaa
jp
pop
imul
loop
dec
jle
mov
insb
push
inc
ja
aam
push
cli
push
add
ffreep
mov
test
cmp
lret
outsl
mov
push
pushf
inc
push
leave
fisubl
scas
std
push
mov
popa
pop
sub
mov
fistpll
fisubrs
push
or
and
pop
les
jnp
leave
rcrl
xchg
push
cmp
mov
in
lods
hlt
pop
jl
jnp
adc
push
andb
inc
scas
ds
pop
ret
push
add
stos
sub
movsb
test
out
push
dec
das
jg
push
aad
scas
add
dec
test
pusha
scas
iret
jl
ja
fnsave
in
xchg
xor
loope
mov
sbb
cltd
jmp
cs
out
sbb
js
ret
mov
cmpsl
adc
clc
out
out
mov
mov
sarl
loopne
add
cmp
popf
sbb
mov
or
and
lcall
sub
pop
nop
das
cltd
lret
lock
in
repnz
adc
js
aaa
xor
scas
xor
dec
imul
aad
sub
arpl
sbb
ja
cmp
test
adc
pushf
stos
in
push
pop
ficoms
cwtl
lret
jne
ret
clc
mov
and
scas
pop
fsts
adc
xor
in
test
sub
test
jl
jp
call
gs
jmp
dec
popa
mov
inc
stos
jb
test
mov
sbb
lahf
xchg
les
je
out
cmp
pop
jmp
fs
ss
adc
rcrl
les
in
add
hlt
adc
sub
add
push
mov
jne
xchg
xchg
iret
xlat
pop
cmp
pop
push
xchg
lret
xchg
subb
or
jg
ljmp
push
jno
push
cs
push
dec
mov
cmpsl
mov
mov
mov
out
repz
xlat
mov
mov
test
xchg
stos
movsl
mov
adc
adc
mov
rcrb
icebp
dec
add
mov
popw
call
call
lds
jno
outsl
mov
adc
iret
fwait
xchg
aad
pop
xor
dec
rcrb
adc
xchg
jb
xchg
pop
cmp
dec
fwait
bnd
mov
out
jl
mov
iret
adc
shrb
pop
inc
ss
int
ds
push
sbb
scas
sbb
pop
dec
imul
clc
std
or
add
adc
movsb
movsb
adc
popa
popf
jb
lret
stc
std
xchg
cmp
ret
insb
pusha
jl
sub
hlt
imul
mov
push
loopne
jns
and
mov
in
xor
shlb
push
cmpl
arpl
cmp
jp
jne
cmpsl
cmp
or
out
cmp
jo
and
mov
xor
dec
or
and
lret
js
pop
mov
fisubrs
mov
test
out
int3
or
adc
ds
dec
xor
sbbl
push
fiadds
mov
xor
xchg
inc
pusha
xchg
jg
inc
pop
fists
mov
cmp
xchg
scas
dec
fcmovb
fldz
outsl
jbe
scas
mov
fs
pop
xchg
loop
xor
dec
and
jecxz
out
pushf
enter
or
scas
ljmp
mov
sub
adc
push
cmp
outsb
ret
lcall
js
dec
popa
jo
lock
mov
repnz
push
jmp
enter
fwait
push
or
dec
jg
jnp,pn
jb
cld
xor
mov
ss
adc
xchg
bnd
outsl
jb
ljmp
fldenv
push
jae
jecxz
mov
dec
or
mov
leave
in
daa
sub
in
icebp
push
test
fcoml
ret
popf
outsl
xchg
xor
sti
sarl
fwait
cli
addl
mov
rol
push
and
fsubl
fstpl
pop
dec
movaps
stos
cwtl
js
pop
lods
test
aaa
test
orl
lret
out
pop
dec
sbb
lret
std
mov
clc
adc
jmp
inc
iret
xchg
outsl
mov
xorb
dec
push
inc
out
aam
pop
bound
and
xchg
inc
push
dec
movsl
js
in
pusha
mov
imul
or
stc
jl
test
cli
cwtl
lcall
mov
enter
xchg
insl
mov
lock
insb
ret
dec
daa
in
and
shl
xor
cmp
testl
push
addb
mov
xchg
push
cmc
inc
ret
push
scas
or
xor
add
fdivs
imul
xor
sbb
push
pop
adc
and
push
jns
daa
cmp
call
cmpl
in
cmp
cmp
xor
pop
test
inc
inc
sbb
sub
mov
adc
fidivl
outsl
test
xchg
push
adc
mov
dec
sub
xchg
mov
xchg
iret
add
fs
or
mov
cmpsl
popf
pop
adc
add
inc
les
push
test
mov
or
call
jb
push
and
nop
scas
xlat
shll
xchg
jle
test
sbb
fwait
add
fisubl
repz
dec
sbb
xor
mov
shll
add
or
mov
push
incb
cmp
mov
pop
adcl
cs
cwtl
or
fnstcw
pop
stos
xor
out
clc
pop
jae
jg
pop
add
mov
jo
jg
push
fs
negl
ss
adc
xorb
sub
cmp
inc
in
push
jmp
push
inc
popf
in
scas
shl
hlt
push
push
and
inc
sbb
lret
push
ja
mov
jns
insl
adc
fsts
mov
sub
mov
into
pop
js
imul
notb
gs
jo
dec
xlat
pusha
addb
push
sbb
push
push
dec
xor
mov
in
out
xchg
in
dec
les
sbb
mov
aas
xchg
jo
and
ja
rcrb
jnp
add
js
stos
mov
add
rcl
xorl
rcrb
movsl
fisttps
sub
jge
gs
ljmp
dec
out
cwtl
xor
mov
ret
lret
cmp
adcl
movsb
pop
mov
mov
jge
decl
cltd
loop
push
jno
lods
pop
jmp
add
or
jp
loopne
and
inc
les
aam
ds
inc
add
stos
adc
lea
xor
nop
adc
js
inc
sti
push
call
pop
hlt
insl
xchg
xchg
pop
pop
pop
outsb
out
inc
push
mov
bound
sub
xchg
lret
jbe
mov
add
pop
pop
fdivl
and
inc
lds
push
inc
push
and
js
mov
inc
jp
jae
or
call
stos
fucomi
pop
aad
xor
int
jae
xchg
inc
push
jo
cs
mov
inc
push
lea
fdivrs
or
cmc
add
inc
cmpsb
dec
stos
dec
cmc
cwtl
jge
pusha
rorb
outsb
shlb
pop
cltd
mov
ljmp
orl
in
ret
stos
xorl
aas
cs
or
add
cmp
test
jmp
push
mov
movsl
lret
mov
pop
cmp
xchg
xchg
repnz
in
pop
mov
arpl
sti
aam
fistpll
xchg
jae
dec
and
lret
loopne
movsb
cli
add
cmp
push
loop
push
js
push
xor
pop
imul
dec
pop
inc
iret
idivl
xchg
lcall
stc
cmc
push
jp
shrl
psubsb
arpl
mov
pushf
loopne
push
push
testl
or
pop
decl
inc
and
xchg
push
mov
mov
cmp
stos
mov
in
jg
aam
sub
sbb
into
lods
or
sub
cli
in
sbb
inc
and
add
add
pop
inc
out
fucomip
rorl
les
cmp
push
filds
mov
jno
mov
icebp
mov
daa
xchg
mov
insl
jmp
xlat
sub
stos
hlt
jmp
dec
enter
pcmpgtb
jne
outsb
fidivrl
test
adc
jb
cmpb
dec
xor
in
fmuls
or
mov
xor
into
push
rclb
mov
loope
sbb
mov
fimuls
jmp
cmp
call
sub
jo
divb
sub
loop
aam
das
jge
je
dec
lcall
repz
pop
pop
lahf
sub
movsl
jl
cmp
mov
ds
xchg
jg
pop
xor
jbe
xor
sub
and
popf
sub
dec
fisttpl
insl
jp
jge
mov
in
loopne
cwtl
jb
jae
adc
cmp
cmp
mov
inc
xchg
sahf
cmc
mov
fisttpll
push
mov
add
and
pop
sub
mov
xchg
sarl
dec
je
std
add
insb
pop
ret
in
mov
mov
or
cli
pop
cmc
shll
xor
dec
faddl
inc
mov
data16
lret
pop
enter
aad
dec
fmul
mov
push
and
inc
jmp
orl
sbb
testl
in
hlt
sub
int3
cmp
hlt
leave
aas
dec
mov
das
nop
test
pop
aam
adc
jp
mov
adc
fucomi
and
push
loope
cli
mov
sti
lea
addr16
enter
pop
ja
inc
push
movsb
adc
dec
lds
cld
ret
pushf
and
add
sub
popa
push
sub
xchg
pop
sbb
loop
dec
cs
xchg
mov
aam
mov
mull
mov
lods
mov
xchg
fwait
jmp
ret
xor
dec
xchg
mov
stc
out
pop
add
cmpsb
ficoms
sbb
in
sbb
sub
push
jmp
lcall
movsl
ficompl
sbb
test
fimull
ret
clc
or
cmp
int3
or
cmp
into
enter
lods
dec
ljmp
idiv
mov
ds
push
and
xchg
lret
lcall
xor
mov
rcrb
xchg
iret
roll
mov
nop
push
adc
sbb
or
dec
mov
xchg
ss
das
loope
xor
insl
and
cltd
mov
lcall
cmp
sbb
mov
cmp
cmpsb
push
and
pop
clc
icebp
repnz
cmp
cwtl
leave
cmp
test
push
push
inc
inc
daa
and
mov
inc
insl
fstl
sahf
sbbl
popa
push
test
lret
arpl
into
jecxz
push
cmp
and
in
lret
insb
pop
fisttpll
lods
inc
cltd
aad
cmc
stos
lahf
arpl
dec
xor
addr16
sub
xchg
pusha
ret
repz
lds
pop
xchg
dec
bound
sti
out
and
dec
call
addl
jo
loop
les
lock
adc
notb
add
repnz
mov
cmpsl
adc
mov
ljmp
xor
insl
jns
mov
inc
xor
lcall
outsb
gs
sar
mov
jmp
sub
sub
xor
cld
iret
adc
and
xchg
iret
fwait
or
pushl
bound
push
dec
or
mov
mov
repz
scas
aaa
out
cmp
out
xchg
popa
hlt
pop
push
call
jg
test
mov
inc
ljmp
sbb
nop
xchg
out
mov
stc
fisttpl
dec
addb
daa
call
mov
pop
ljmp
xchg
imul
xchg
dec
das
negb
mov
push
xlat
cmpsb
icebp
and
stos
js
jnp
sub
sahf
push
xchg
sti
test
lods
dec
shll
sbb
cwtl
lsl
xchg
push
pop
sub
and
sub
lds
fs
mov
into
test
jecxz
xor
stc
mov
jl
scas
aam
rcll
xchg
and
pop
mov
adc
and
xchg
outsb
sbb
arpl
int
and
test
loopne
enter
imulb
lcall
scas
ret
lea
fstl
jns
bound
imul
shll
mov
and
arpl
jp
fsubl
clc
add
pop
xor
lods
mov
push
lahf
out
push
pop
aad
inc
dec
das
testl
xlat
xchg
push
xchg
arpl
lock
shl
adc
pop
mov
jo
movsl
cmc
dec
nop
lcall
cwtl
daa
int
repz
dec
sbb
iret
ds
mov
push
pop
test
out
sub
nop
pop
in
dec
pop
xor
mov
rcrl
xchg
cmp
shl
mov
push
push
xor
sub
and
xlat
cli
int3
lret
lahf
cmpsb
xor
adc
and
sub
mov
push
mov
js
cmpxchg
mov
add
cmpsl
pop
loopne
pop
std
xor
mov
push
cmc
xchg
lock
cmpsl
mov
movsl
iret
je
mov
or
xchg
lods
jmp
add
dec
or
jns
mov
ds
aas
jle
mov
dec
mov
sub
sub
sbb
cmp
mov
cld
push
pop
aam
les
inc
sub
cmp
call
push
fdivrl
imul
dec
xchg
xchg
mov
sbb
out
orb
outsb
pusha
jp
in
add
lea
repnz
adc
sbb
mov
add
sarl
fwait
imul
lret
cmp
in
stos
mov
push
adc
push
sbb
xlat
imul
adc
add
sbb
std
mov
insb
mov
xor
jge
fidivs
fcmove
jg
movsl
loopne
mov
fwait
dec
leave
adc
mov
and
js
clc
sbb
lods
xchg
lahf
push
sbb
hlt
into
repz
xchg
sub
dec
pop
mov
not
jl
push
or
mov
in
int
cmp
mov
dec
xor
xchg
insl
scas
and
repnz
adc
adc
or
cmpsb
test
mov
scas
aas
push
hlt
push
jno
xchg
jae
rolb
pushf
mov
inc
bound
pop
sti
dec
lcall
int
lds
push
push
arpl
add
mov
dec
stc
mov
rcrb
es
mov
jno
sub
xchg
sub
dec
xor
inc
cmp
push
repz
out
pop
xchg
jnp
subl
xchg
inc
xchg
pop
and
jno
pop
mov
cmp
inc
outsl
mov
stc
imul
xchg
sub
xchg
movsl
push
lods
adc
pop
out
push
cmp
negl
mov
jb
cmp
jnp
jp
rolb
dec
jae
sarl
sti
mov
call
hlt
or
jg
and
push
sub
adc
sub
add
shlb
or
xorl
fcoms
inc
hlt
data16
adc
inc
mov
mov
dec
lcall
mov
xor
and
xchg
push
loopne
icebp
lods
imul
push
rolb
mov
dec
daa
xor
pop
mov
fcom
ficoml
nop
test
out
movsl
insl
push
movsl
js
jo
add
rorl
rol
jo
cltd
jg
cld
arpl
lcall
push
orl
dec
adc
shr
je
rclb
mov
iret
jo
xor
cltd
inc
jle
aam
out
inc
jge
sbb
jg
jg
inc
sarl
mov
add
jbe
cmp
pop
test
fistps
cmp
sbb
or
push
stos
push
movsb
push
gs
leave
jge
dec
ljmp
jo
shr
xchg
jae
popa
and
fbld
js
gs
jae
add
sbb
cmc
fsincos
push
dec
mov
clc
mov
fstl
inc
xor
sbb
out
inc
add
loope
es
popa
adc
xchg
dec
xchg
js
fcomi
add
pushl
or
and
add
dec
or
mov
popa
mov
pop
popf
push
mov
cmc
je
iret
jl
cwtl
cmp
cmpxchg8b
push
shll
sbb
inc
push
add
das
daa
add
dec
fstpt
inc
jl
xchg
push
incl
loopne
pop
lret
jg
xchg
fidivrl
out
fwait
ret
cmp
xchg
ret
sbb
xchg
jecxz
adc
nop
js
decb
imul
js
movsb
pop
cmp
push
xor
push
leave
mov
adc
jnp
mov
movsl
cmp
arpl
out
jp
cmp
inc
fnstsw
mov
psrad
and
ret
loope
add
xor
lock
mov
stc
or
in
andl
ja
out
jle
ror
mov
sbbl
aad
leave
lds
faddp
mov
cmp
adc
das
rorb
cltd
jp
ds
pop
aas
icebp
lea
xor
jno
sbb
push
lret
push
cs
in
mov
ja
add
xor
out
jmp
hlt
sbb
stc
and
lcall
cli
stc
pop
jmp
pop
sub
mov
data16
test
sahf
or
pop
add
jg
inc
cmpsl
mov
pop
test
sbb
sub
ret
adc
rcrl
pop
je
and
cs
sub
rclb
jns
jne
rcl
xor
data16
jne
inc
mov
mov
jg
dec
in
jns
mov
lods
mov
daa
imul
stc
cmpsl
add
push
daa
out
or
outsb
push
movsl
mov
sahf
lret
rol
xor
push
pop
xlat
repnz
mov
xchg
insl
cmpsl
test
mov
push
xchg
ret
mov
jbe
mov
lea
imul
mov
push
pop
cmp
and
xor
lret
adc
pop
cld
mull
xor
aad
sbb
test
cmp
aad
jle
dec
mov
into
push
pop
add
mov
rorl
mov
test
or
push
sbb
loope
lret
sub
mov
dec
push
fstpt
push
cmp
dec
pop
xor
lret
js
adc
int
sub
sahf
test
hlt
inc
nop
js
aaa
push
push
mov
out
pop
gs
mov
xchg
mov
jle
jne
dec
add
outsl
out
inc
pop
jb
jns
sub
sbb
loope
mov
call
inc
xchg
push
in
imul
data16
out
jnp
mov
pop
ss
and
inc
das
shlb
movsl
cmpsl
sub
dec
out
icebp
and
fwait
aam
lock
leave
inc
push
fsubr
mov
push
outsb
xor
add
scas
inc
or
mov
xor
sub
jne
daa
in
jb
pop
mov
dec
mov
ret
jae
xlat
add
push
sbb
lcall
sub
out
mov
nop
je
push
pop
std
scas
cmp
jo
mov
xchg
jecxz
push
repnz
xchg
lock
int
inc
pop
push
add
mov
addb
inc
jmp
sbb
lods
lock
mov
or
repnz
jo
into
fildl
dec
jle
push
fxch
or
jp
push
pop
xchg
icebp
and
ret
sbb
js
dec
iret
faddl
push
lods
shll
pushf
mov
sbb
dec
mov
test
mov
into
out
jb
or
test
cmp
xor
leave
bndldx
out
sbb
mov
jne
adc
push
scas
ss
dec
xchg
mov
push
incb
cmp
imul
dec
enter
nop
or
mov
cmp
lods
lret
or
cmp
adc
fcoms
pop
pushf
cmp
scas
in
xor
in
xor
lods
not
mov
test
cmp
hlt
or
mov
test
mov
mov
rcll
mov
jns
jbe
add
sbb
inc
pop
dec
mov
mov
or
addl
dec
in
pop
sti
lods
xchg
jne
or
adc
or
fsubr
das
mov
xchg
xlat
push
mov
les
mov
jnp
icebp
pop
jg
sbb
adc
ret
pop
rclb
pop
repz
mov
lahf
xchg
push
movsb
or
push
or
mov
inc
shll
in
test
sub
lea
out
fisttpll
pusha
mov
out
xor
and
mov
xlat
inc
pop
mov
pushf
xchg
ffreep
out
mov
xchg
dec
clc
mov
xor
sub
mov
push
jo
subb
adc
lods
dec
popf
jae
cs
xchg
call
lods
in
scas
fiaddl
lea
jl
push
int
fwait
idivb
out
out
outsb
xor
xchg
inc
fldl
fwait
es
push
xchg
xor
mov
xchg
mov
add
sub
psubsw
cmpsb
mov
add
loopne
mov
mov
nop
aas
inc
cmp
xchg
ja
sub
shll
cmp
loopne
jae
push
or
and
pushf
mov
inc
aas
arpl
add
or
shrl
iret
adc
mov
xor
shll
adcb
mov
loop
stos
es
pop
adc
inc
arpl
inc
out
fwait
sub
movsb
jo
lods
sub
jns
jp
and
inc
popa
or
jne
add
xchg
pop
ret
jp
pop
inc
sti
outsb
insb
je
push
lds
outsb
andb
push
int3
xor
mov
popa
mov
cltd
cmp
mov
mov
ret
sti
outsl
dec
push
or
mov
adc
jno
dec
adc
pop
mov
mov
icebp
stos
iret
pop
mov
xor
adc
stos
or
dec
aad
jmp
lods
loopne
push
mov
lds
int
lods
in
call
or
insl
inc
push
sti
mov
mov
pusha
jle
cmpsl
and
cmpsl
cmc
push
mov
dec
add
std
push
imul
in
mov
movsb
fsts
lcall
pop
mov
es
shl
inc
cmp
loope
mov
cs
pop
int
pop
xor
adc
inc
arpl
inc
call
cmpb
xor
inc
mov
lods
scas
mov
inc
sub
mov
mov
mov
lds
test
xor
stos
lods
and
enter
sub
inc
jae
xchg
lcall
insl
dec
mov
ds
testl
sbb
adcb
es
sub
push
int3
sti
fs
cltd
in
js
push
and
lret
je
and
subb
jbe
add
shll
pop
ljmp
insl
scas
scas
mov
push
aaa
mov
inc
sbb
cli
xchg
push
adc
and
inc
cld
dec
adc
add
data16
jp
xchg
clc
call
or
jne
or
xchg
mov
pop
sub
mov
mul
dec
and
adc
pop
xorb
mov
inc
ret
add
and
push
sbb
sub
fisubl
mov
hlt
xchg
movsl
insb
js
jecxz
mov
lcall
pop
push
cmpsl
cmp
adc
movsb
add
mov
orb
dec
fdivs
xchg
aad
ss
int3
xor
adc
cld
and
incl
jge
inc
or
aas
test
dec
sbb
jecxz
dec
addr16
dec
dec
lret
sahf
ret
imul
mov
int
mov
fistpll
push
cmpsl
sbb
sti
and
call
pusha
je
stos
loop
test
sbb
sahf
outsl
sub
in
popa
lods
jo
rorl
sbb
adc
insb
cmp
dec
testb
call
and
imul
xor
outsb
lar
dec
cs
dec
iret
mov
jns
imulb
orl
pop
lret
adc
stos
mov
xor
dec
mov
fdivs
fsub
or
push
cwtl
sbb
loopne
xchg
out
outsl
cmp
sti
test
in
popf
loop
daa
scas
mov
xchg
jno
shll
bound
xor
dec
add
daa
inc
adc
jbe
xchg
dec
dec
pop
rclb
cmp
inc
jne
in
jecxz
xchg
rcrb
mov
cmp
push
test
pop
jle
push
arpl
out
sbb
ds
pop
or
push
mov
nop
mov
xchg
jg
xchg
xchg
mov
jnp
add
xchg
jge
sbb
fildll
xlat
inc
insl
imul
jae
cs
outsl
mov
sbb
pushf
push
pop
mov
repnz
pop
pusha
and
std
mov
add
stos
cltd
push
mov
les
lcall
pop
jns,pt
outsb
or
mov
jge
push
or
xor
sahf
je
outsl
jp
xchg
sbb
fldenv
pop
mov
mov
sub
mov
or
test
mov
mov
sti
pop
pop
or
das
lret
pushf
test
push
push
outsb
sbb
enter
add
xchg
fcmovne
mov
sub
mov
sbb
mov
add
in
pop
aam
mov
call
xchg
dec
mov
jo
in
clc
pop
bound
mov
test
test
cmpsb
das
jecxz
loop
sub
divl
int3
push
movsb
and
cmc
pop
sbb
lock
jp
test
mov
mov
and
sbb
jns
stc
pusha
inc
jb
mov
mov
xchg
stc
xchg
push
js
fistpll
jp
std
mov
clc
xor
cmp
movlps
xchg
clc
sbb
pop
shll
dec
stc
xchg
mov
mov
movb
fidivl
jae
mov
xor
or
int3
cs
popa
imulb
push
fchs
repnz
inc
jmp
adc
imulb
cmp
cmp
add
add
mov
xor
cmpsl
pop
out
in
test
aam
xor
imul
cmp
adc
dec
push
dec
xchg
add
xor
push
mov
into
jmp
repz
cwtl
imul
sbb
jo
pop
inc
sub
jno
cmp
leave
in
pop
xchg
das
aaa
and
fstpl
push
jle
cld
jmp
inc
pop
rcrl
mov
rorl
sbb
jge
mov
inc
outsb
ficompl
lcall
outsl
lds
les
lods
fsubl
les
pop
xchg
add
xchg
sbb
cmp
test
leave
xchg
in
ret
test
jno
xchg
das
es
outsl
enter
stos
mov
std
or
adc
mov
sbb
movsl
flds
mov
cld
fwait
jb
cld
loopne
jnp
xlat
nop
aaa
mov
sbb
push
jb,pt
add
sub
xor
aad
cs
divl
jb
sub
stos
sbb
dec
inc
jge
daa
std
jnp
pop
push
int3
jmp
cmovne
adc
ret
cmpsb
lods
pop
das
fcompp
shrl
jns
ja
pop
mov
dec
sub
sub
add
or
cmp
iret
add
test
rcl
mov
ss
loopne
adc
leave
fdiv
iret
frstor
mov
fdivl
lea
cld
mov
int3
call
add
cmpsl
push
push
subl
or
dec
jmp
sbb
pop
pusha
mov
mov
sub
cmp
iret
fdivs
out
jne
cmpsl
arpl
loop
loopne
xor
aas
stc
out
mov
cmpsl
pop
inc
bound
fwait
test
xchg
fidivrl
nop
mov
ficomps
ljmp
dec
inc
push
cs
adc
test
movsb
popa
int
and
xchg
clc
rcll
add
rorl
xor
stos
scas
xlat
ss
out
and
ret
loope
sbb
sbb
sub
lret
inc
test
mov
outsb
pop
push
lods
jg
insl
xchg
repz
loop
lods
movsb
cmp
jg
dec
cmp
cmp
pop
add
mov
pop
inc
fucomip
jae
out
xchg
fiaddl
fsubs
xor
pop
jb
add
and
sbbl
dec
push
call
data16
push
fwait
jno
jo
jns
insl
das
pop
inc
xchg
sti
icebp
and
es
mov
in
inc
adc
insb
jbe
lcall
ret
cltd
adc
lahf
mov
dec
test
insb
jbe
cmp
pop
insb
xchg
fstpt
pop
popf
subl
lock
jmp
std
xor
jp
shll
loop
sbb
jno
sub
scas
dec
jb
inc
cmc
mov
sub
gs
test
mov
sbb
aaa
dec
mov
xchg
nop
inc
mov
push
sti
outsb
loop
mov
jmp
adc
gs
dec
dec
or
cld
les
inc
data16
adc
push
mov
sub
push
call
mov
mov
xor
xor
push
lods
std
mov
in
dec
fidivrl
and
cmc
gs
pop
add
cli
jp
fwait
push
add
fmuls
jge
movsl
rcrb
add
cmpb
mov
rorl
sbb
or
cmp
mov
scas
hlt
jle
jp
pusha
fimuls
mov
dec
jb
push
pop
les
cmpsb
addr16
sub
in
mov
sub
test
push
adcl
add
sbb
jecxz
addb
inc
sub
and
jno
or
sub
sbb
jecxz
ror
xchg
lds
lods
aas
fisttpl
inc
sahf
ret
repz
aas
int3
push
mov
jge
pop
jecxz
pop
jnp
lock
ja
test
imul
xor
inc
pop
inc
sub
movmskps
mov
lods
dec
inc
rcrl
adc
test
imull
lahf
xchg
gs
movl
xor
jbe
mov
jae
cmpsb
bound
fstl
dec
inc
hlt
dec
loopne
push
aam
adc
push
stos
push
ljmp
mov
loop
test
jns
push
inc
adc
add
add
insl
jle
in
jb
push
jb
sub
mov
pop
pop
stos
lahf
scas
jmp
lock
or
xchg
push
dec
inc
push
mov
add
sbb
push
lods
daa
test
sbb
mov
out
adc
push
stc
sbb
repz
in
push
add
jae
mov
sub
fnstsw
mov
adc
or
daa
mov
cltd
loope
enter
inc
cmp
mov
daa
popf
ficompl
and
mov
in
and
inc
xlat
xchg
adc
pop
insb
lahf
jbe
ja
das
fcomp
daa
les
punpcklbw
pop
cmp
mov
movsb
push
and
sbb
sub
jmp
in
mov
mov
push
pop
popf
cmp
or
mov
cmpsb
repnz
or
addb
fistpll
adc
movsl
subl
mov
jne
in
push
cmp
push
enter
sub
cmp
pop
fwait
out
stos
jle
push
into
push
and
std
jnp
xor
sahf
sub
test
stos
push
inc
mov
push
mov
cmp
push
repz
ficomps
fisubl
fidivl
push
xchg
mul
pop
xchg
fnstcw
jbe
pop
adc
or
daa
std
movd
dec
sti
out
cs
nop
cwtl
ret
xor
adc
paddsb
aas
shlb
fldenv
dec
mov
jle
js
repz
add
loopne
leave
in
mov
aaa
jns
nop
test
pop
sub
dec
jmp
add
push
dec
mov
dec
or
push
pushf
jb
je
adc
sbb
mov
jge,pt
cltd
div
jge
icebp
pop
inc
je
loopne
and
dec
loope
jns
shr
push
enter
xor
add
mov
rclb
out
orb
cmpsb
mov
adc
lds
loop
cmp
addb
xchg
mov
push
in
in
shl
xor
iret
fsubl
pop
idivb
fistps
xor
xor
in
xchg
dec
or
pop
aad
add
in
cltd
and
js
aaa
sub
or
lds
jo
ret
sub
inc
jmp
pushf
mov
out
loopne
xchg
lahf
sbb
lret
aaa
in
xchg
dec
outsb
jno
mov
xor
mov
scas
cld
rol
outsb
jns
jnp
mov
out
push
repnz
mov
jmp
and
and
into
fcmovb
test
in
cmc
jno
negb
stos
jg
pusha
aaa
inc
adcl
sub
jmp
mov
sub
push
and
jae
xchg
icebp
pushf
ret
imul
mov
push
fisttpl
subb
outsb
adc
and
pop
jae
mov
mov
mov
pusha
xor
daa
imul
lea
sbb
int3
imul
movsl
fistpl
stc
imul
and
xchg
call
pop
sbb
sbb
push
pop
adc
and
sahf
lahf
imul
mull
inc
push
jno
movsl
push
cmp
andb
or
lret
cmp
adc
cmp
jbe
lret
call
es
xchg
add
iret
fiaddl
mov
test
stos
bound
push
xchg
jo
dec
rcrl
rorl
jge
xchg
mov
push
jbe
xchg
cltd
leave
add
repz
cld
push
sub
insl
iret
loop
gs
aaa
mov
rcll
xchg
cld
jns
push
aad
je
lods
pop
jp
clc
je
addl
ret
lret
sti
cmp
pop
cmp
pusha
mov
ja
xchg
pop
fldenv
repnz
pop
fisubl
add
popa
add
rolb
push
jle
or
xchg
call
icebp
xor
push
pop
jae
in
adc
xchg
sbb
jecxz
enter
jbe
dec
xor
test
divb
inc
ficompl
ss
leave
lods
dec
icebp
jne
mov
stos
mov
std
dec
addl
mov
lret
or
es
pop
inc
mov
or
sbb
pop
pop
insl
mov
jae
clc
sub
cmp
pusha
jge
adc
inc
sub
jne
in
icebp
mov
popa
mov
inc
mov
ljmp
ret
mov
jecxz
mov
cwtl
sub
loope
jns
popa
add
push
lahf
push
or
aas
arpl
aas
xchg
add
ret
rcl
mov
test
pop
adc
xor
pop
fisttpll
and
div
pusha
push
inc
out
aad
std
inc
pop
or
mov
testl
mov
popa
idivl
lea
gs
mov
push
shll
xchg
aam
in
test
cwtl
popf
dec
sub
sti
sub
mov
push
stc
inc
imul
sbbl
pop
mov
and
pop
xlat
jge
pusha
xlat
mov
in
push
and
adc
mov
mov
in
mov
push
outsb
jae
iret
xor
sbbl
jbe
xchg
pop
pop
dec
mov
or
shlb
inc
sub
push
sbb
mov
mov
fnstsw
sbb
and
xchg
jle
loopne
mov
add
insl
movl
mov
push
out
daa
jno
pop
fldl
jbe
sbb
push
and
sar
mov
xor
ljmp
shll
or
dec
clc
jno
inc
ds
cld
xchg
or
arpl
adc
mov
movsl
sbb
xchg
mov
push
addr16
rol
in
cs
repz
addb
movsb
loopne
jge
jl
pop
add
arpl
fldl
pop
push
stos
mov
sahf
loope
lret
dec
jne
cmp
imul
mov
jmp
fcomp
xchg
push
dec
and
add
test
stos
scas
mov
mov
push
out
mov
cltd
jg
pop
sbbl
mov
fsubl
and
jo
int3
xor
sub
jb
pop
sahf
loopne
insb
xchg
es
fdivrs
mov
stos
in
dec
sarl
inc
and
pop
test
mov
lea
mov
repz
imul
inc
punpckldq
jnp
jmp
and
dec
sub
lds
jl
scas
dec
icebp
aam
sbb
xor
xchg
ficompl
push
mov
fs
pushf
inc
ret
or
push
xchg
das
pop
dec
push
lds
pop
cmpl
mov
xlat
fs
sbbb
ja
mov
mov
jne
push
cmp
dec
aam
pop
or
pop
and
dec
ret
fs
ret
ljmp
jmp
push
sbb
ds
subl
fisttpll
jbe
cmc
cmpsl
es
xor
cld
cltd
or
insb
pop
cmp
push
mov
loope
in
mov
add
xchg
jb
mov
push
mov
sbb
cmp
cmp
cmp
lret
pop
xor
adc
popa
int
cwtl
es
neg
pop
lret
repnz
and
pop
sub
and
push
add
inc
out
sbb
nop
inc
in
ljmp
dec
push
mov
lahf
xor
pop
inc
in
bound
add
or
add
das
dec
xchg
xchg
shr
dec
cmc
dec
cmp
test
add
nop
sbb
cmpsl
dec
xchg
pop
adc
sbb
mov
cmp
in
push
rorb
pop
add
int
push
std
and
xlat
cmp
test
orb
add
cmc
add
loop
mov
sbb
inc
dec
in
pop
fisttps
es
fstpt
aam
adc
lahf
sbb
jle
lret
lods
test
hlt
xchg
lret
mull
push
scas
test
rcl
adcl
sbb
rorb
jo
pusha
push
mov
fildll
add
sti
sub
push
pop
out
mov
or
adc
inc
sub
inc
or
sarb
shrb
and
sbb
repz
mov
imulb
jmp
rolb
ljmp
dec
ja
sbb
cmp
les
pop
cld
pop
popf
cli
mov
inc
xchg
adc
insb
repz
pop
or
sti
mov
jl
lock
popa
into
nop
cmp
pusha
xchg
test
or
scas
pop
lock
hlt
xchg
inc
mov
mov
cmp
jb
mov
cwtl
xor
sbb
sarb
cmp
pop
sbb
insb
xor
adc
ds
iret
adc
jmp
mov
xchg
in
add
sub
enter
or
rorb
cmp
loope
fwait
sarb
sbbb
repz
dec
gs
lahf
bound
mov
arpl
push
testl
jnp
out
xchg
mov
call
sub
test
inc
lds
xchg
aad
test
test
mov
mov
insl
int
dec
movsl
insl
inc
repz
fisttps
add
mov
rcl
pop
in
sub
fldcw
sub
sbbl
inc
scas
test
push
mov
hlt
sub
lret
mov
xchg
lret
xchg
jg
call
sub
inc
push
or
inc
jae
arpl
ds
pusha
sub
mov
shrb
cli
push
jo
push
sub
mov
or
enter
nop
incl
loop
outsb
cmpsb
in
and
mov
inc
dec
jns
sbb
repnz
jmp
xor
mov
dec
xor
aam
in
mov
clc
dec
mov
inc
rorl
mov
mov
lret
sar
test
test
cmp
jle
hlt
inc
push
inc
jmp
mov
jb
sbb
adc
jnp
inc
mov
mov
fmulp
les
lret
xor
xchg
dec
or
shll
xlat
cmpsb
repz
push
bound
fnstsw
mov
jbe
pop
or
cmp
fisttpll
jge
cmp
cs
addr16
idivl
add
mov
adc
xor
in
out
sbb
jae
push
mov
sarb
mov
mov
out
mov
in
push
pop
lds
je
push
cmp
nop
mov
sub
and
pushf
test
mov
cmp
mov
add
add
pop
mov
mov
popa
loope
mov
in
imul
push
pop
mov
cmpsb
push
pop
mov
scas
pop
inc
pop
inc
int3
push
xor
aad
push
loopne
shrb
sub
fcmove
inc
sub
add
daa
addr16
fldcw
scas
fdivr
cmp
sub
inc
xor
add
xchg
mov
mov
mov
cltd
xchg
xchg
ret
mov
lret
ret
test
ret
xchg
xchg
fisubrs
mov
bnd
sbb
push
das
pop
fisubrl
mov
and
cmc
mov
jp
sbb
inc
sti
cmp
xchg
pop
fiadds
mov
sbb
inc
out
mov
nop
push
xor
repz
push
xor
xchg
push
or
jecxz
out
in
cmpsb
stos
iret
sub
inc
push
add
mov
test
mov
pop
dec
push
loope
and
fbstp
xor
lcall
setl
or
add
das
jbe
movsl
xchg
add
lahf
dec
bound
jmp
addb
mov
and
jle
jns
jbe
fimuls
repnz
outsb
sbb
icebp
or
gs
stos
out
jle
or
mov
call
mov
inc
cmp
xor
cmc
jge
or
fcoml
sbb
mov
repz
in
stc
xchg
inc
mov
pop
enter
dec
jmp
mov
fdivs
or
dec
lcall
xchg
push
adc
daa
mov
js
pop
std
sbbl
mov
dec
daa
mov
mov
sub
sub
fxch
mov
sbb
aaa
stos
lods
pop
into
js
pushf
mov
test
inc
jp
int
xor
ds
dec
imul
xor
dec
sub
nop
sub
mov
fyl2x
loop
shr
addr16
ret
cmp
add
stos
pop
inc
sbb
cmp
jb
outsl
icebp
xchg
xchg
or
outsb
sbbb
rcr
lahf
andl
loop
cli
pop
call
out
mov
add
mov
ss
adc
popf
and
movsl
stos
ja
mov
hlt
xchg
lret
sub
dec
jae
mov
repz
fidivrl
xlat
mov
mov
sub
jae
pop
flds
xchg
fcomi
cltd
push
ds
push
dec
aam
inc
rolb
pop
mov
iret
or
add
mov
fmulp
dec
sbb
sbb
int
push
test
mov
ret
add
mov
pushf
mov
xchg
add
xor
das
pop
das
fldl
or
notb
les
test
ljmp
bound
iret
cmc
cs
ja
sub
lret
lcall
pop
or
adc
pop
lock
lcall
lods
lahf
cmpb
mov
cmp
and
push
cmp
inc
dec
mov
stos
pop
jg
sbb
lods
adc
mov
addl
faddl
cmp
test
nop
mov
shlb
dec
xor
xor
fiaddl
xor
insb
jb
addr16
add
data16
push
sub
dec
in
stc
add
lret
push
xor
pop
js
xor
test
fdiv
repz
loop
testl
cvtps2pi
jae,pt
test
mov
dec
popf
sub
lea
shll
inc
xor
xlat
push
adc
or
in
jne
sarl
mov
shll
mov
movsl
sbb
sub
jb
lret
stc
je
bswap
sarb
fisttps
ja
add
adc
inc
daa
inc
scas
mov
cld
jbe
add
cltd
fldcw
cmp
mov
test
out
ss
fwait
mov
pop
divb
adc
xorb
adc
lahf
inc
mov
lods
test
add
stos
jb
ljmp
inc
aad
popf
fisubs
test
inc
xchg
mov
adc
sub
scas
popa
mov
outsl
insb
xchg
adc
push
jns
popl
stos
mov
pop
add
mov
lock
ss
ljmp
ss
rorb
insb
push
mov
cmp
lret
pop
dec
pop
push
xor
and
jb
mov
in
inc
xor
cltd
sbb
adc
lahf
mov
je
mov
or
xchg
inc
lock
push
fisubl
mull
cli
inc
jno
jno
pop
cmp
cmc
xchg
inc
rclb
fs
add
inc
dec
scas
js
in
nop
movsl
ret
subl
test
mov
xchg
xor
mov
sub
cmp
das
flds
stos
orl
xchg
mov
out
xchg
mov
gs
enter
fst
decl
pop
nop
std
loop
dec
fisubrs
push
out
int3
das
xchg
iret
or
insb
sub
insl
rorl
cmp
cltd
inc
popf
dec
cmpsb
ret
test
mov
lock
out
xor
dec
inc
cmp
and
or
dec
andl
test
adc
pop
test
lcall
fnstcw
jp
out
mov
stc
cli
out
pop
scas
hlt
lret
aad
inc
clc
mov
mov
std
jae
dec
daa
movsl
test
insl
and
out
adc
cmp
out
arpl
push
sbb
xor
inc
repnz
jmp
and
rol
push
cmp
mov
xchg
rcr
ljmp
jp
mov
loop
add
lret
sbb
cmp
subl
dec
dec
pop
mov
push
inc
mov
sahf
lret
into
xor
imul
sub
mov
and
xchg
sub
fstps
imul
cmp
loop
push
dec
call
leave
inc
in
outsl
and
xor
xchg
sub
stos
lock
adc
cmp
push
xorb
fstl
cwtl
pop
jne
out
xchg
and
dec
jmp
pop
dec
icebp
xor
jns
icebp
js
push
jecxz
add
dec
lea
mov
lcall
mov
faddl
std
aam
adc
shll
cmpl
jbe
cmp
mov
aas
mov
in
lea
push
cmp
mov
loope
pop
push
pushf
cmp
jns
push
xor
dec
add
cwtl
negb
cld
and
fbld
push
dec
push
insl
out
mov
fbld
nop
addr16
push
pop
fiadds
sub
xchg
sbb
and
pop
icebp
mov
bound
stos
in
and
imul
xor
jecxz
cmpsb
sub
or
pop
mov
jmp
shrb
ja
pop
mov
mov
test
cmpsb
mov
mov
xor
ljmp
or
test
lahf
imul
mov
xchg
mov
ljmp
das
inc
loop
cmpsb
rcll
jne
cmpsl
xchg
test
pop
jno
or
mov
faddl
sarb
add
adc
mov
fsubl
mov
jl
dec
shll
xchg
ds
mov
fdiv
test
xor
and
jl
mov
add
ret
add
push
test
inc
xchg
pushf
cld
mov
cmp
adc
or
xchg
inc
pop
and
out
add
ss
or
dec
fsts
popa
dec
ret
lds
and
incb
psadbw
into
adc
pop
fmuls
pusha
jmp
jns
aaa
pop
movsl
fcmovnb
add
jns
adc
or
out
add
and
jge
mov
xchg
imul
push
cmp
sub
xor
std
test
mov
cmpsl
adc
and
lea
push
mov
dec
pop
lret
rorl
inc
in
loop
test
popf
clc
sti
jg
ss
pushf
mov
lods
push
pop
xchg
int3
jns
in
push
push
cmpsl
divl
xchg
pop
mov
bound
in
sar
ljmp
xor
add
lods
retw
sub
lods
fmuls
mov
pop
ja
jp
scas
add
pop
push
cld
xor
dec
rcrb
push
sbb
mov
in
pop
push
and
ljmp
mov
loope
mov
sub
fisttpll
fists
push
inc
ljmp
repnz
or
mulb
fimull
pushf
adc
mov
sbb
pop
icebp
mov
add
test
jecxz
pop
dec
lock
dec
aaa
int
fmull
adc
or
aad
cmp
pusha
std
push
pop
mov
dec
stc
add
push
jb
fisubl
mov
ret
push
push
jns
sub
mov
bound
pop
jmp
inc
movsb
loope
jl
push
fidivl
and
ret
jbe
aam
pop
push
push
mov
sub
dec
das
xchg
lock
sub
cmpl
scas
pop
pop
inc
pop
jmp
and
stos
mov
sbb
fistpl
cmpsl
and
jae
bound
mov
gs
ljmp
dec
cmpb
incb
cli
shll
push
pop
and
call
insl
cmpsb
pop
lcall
movsb
or
inc
out
push
lahf
and
in
cmp
scas
push
lahf
jno
ret
xor
insb
inc
icebp
pop
mov
sub
inc
xchg
inc
push
aam
je
loop
xchg
out
xor
cmpsb
jecxz
loop
sbb
repnz
xchg
addr16
int3
fsubrl
or
jo
movsl
and
jb
hlt
int
push
mov
pop
pop
fs
fdivrp
out
pop
sbb
or
and
xlat
fs
leave
lret
cmp
shrl
inc
xbegin
fwait
in
cli
dec
pop
cmp
mov
sub
test
xchg
jg
mov
int
repz
stc
insl
aad
or
mov
jne
loopne
adc
scas
ja
cmpb
or
pusha
cmpsb
jge
fisubrl
add
nop
push
add
or
or
cltd
scas
jge
xchg
lcall
dec
fwait
mov
fsubrl
cltd
aam
inc
fidivs
push
ret
mov
orb
gs
lds
leave
push
jmp
or
sub
or
push
sbb
arpl
leave
add
pop
mov
push
daa
iret
adc
shl
push
pusha
push
js
mov
roll
jmp
adc
outsl
push
loopne
adc
shlb
sbb
sbbl
lcall
mov
adc
inc
sahf
jae
fxch
pop
add
cmc
adc
mov
cwtl
push
test
lods
mov
ss
push
addr16
and
xor
dec
sbb
sub
es
inc
add
cmpsl
lcall
inc
nop
lret
lods
xor
inc
repnz
int
pop
push
fwait
popa
pop
jecxz
fs
xor
cmp
loope
out
icebp
jo
sbb
ljmp
es
fwait
loop
hlt
shlb
lcall
or
pop
loopne
fldt
into
xor
push
ja
stos
pop
jo
in
mov
adcl
clc
stos
loop
shlb
xchg
lds
lahf
aas
add
imul
sub
iret
push
inc
cmpb
xor
xchg
xor
repz
ss
pop
bnd
insl
imul
xchg
push
mov
or
mov
sub
fst
cld
lea
in
sbb
lret
mov
inc
jmp
aad
imul
ss
push
jb
sub
and
dec
inc
daa
xor
filds
jp
fs
daa
cwtl
std
mov
lods
mov
pusha
sub
mov
inc
aaa
sbbb
lret
xor
fwait
cmp
sti
add
sub
mov
xor
mov
nop
push
inc
xchg
add
mov
icebp
movsl
mov
jnp
fidivl
testb
lock
shl
incb
or
dec
lret
cmc
jbe
and
sub
mov
xor
or
jne
call
fwait
lock
mov
or
es
jno
daa
test
sub
pop
xchg
adc
sti
xorb
adc
jg
cmp
ds
inc
inc
or
sbb
xchg
sbb
enter
cmc
jmp
mov
scas
push
mov
popa
mov
jmp
inc
adc
xor
icebp
xor
popf
lahf
sbb
adc
aam
sbb
add
inc
xchg
cltd
push
mov
cwtl
push
jne
lods
and
and
cmc
pop
leave
add
arpl
add
cltd
sbb
fisttps
sub
xor
mov
cmc
outsb
or
test
inc
sbb
jbe
leave
in
xchg
pusha
int
repnz
lahf
loop
loopne
adc
ljmp
adcb
mov
ja
pop
ret
mov
insl
mov
iret
mov
iret
cwtl
das
popf
mov
mov
cmc
loopne
stos
inc
aaa
fwait
inc
or
aam
outsb
in
adc
loopne
int
fs
dec
push
or
or
add
iret
pop
mov
xor
data16
fsubl
call
jbe
sbb
rolb
mov
dec
js
movsb
inc
popa
mov
mov
insl
mov
mov
nop
push
mov
call
sbb
xchg
movsb
jmp
pushf
lahf
jmp
and
stos
sub
outsl
das
mov
xor
outsl
xor
pop
hlt
pop
sbb
sub
and
loope
lods
jg
cltd
push
mov
mov
in
adcl
xor
sbbb
fmull
xchg
pop
and
fdivl
jne
or
mov
aad
and
addb
cmp
fidivl
insl
mov
inc
imul
adc
shll
lahf
sub
stos
lds
stc
clc
lea
jge
xlat
fnstcw
dec
les
js
mov
icebp
mov
pop
xorb
pop
mov
jg
cmp
jns
sub
test
sbb
out
call
mov
pop
xor
pop
push
cmp
lea
push
mov
lahf
call
in
iret
mov
movsb
cmpsl
nop
jb
cltd
setl
bound
pop
or
cmp
icebp
iret
addr16
adc
rolb
bound
into
fnstcw
add
cs
outsl
ja
xchg
mov
out
nop
push
or
pop
jmp
aad
mov
add
cmpsb
shl
jg
or
insb
push
lahf
lret
inc
in
push
loope
jge
jg
xchg
loopne
and
adc
sub
jmp
inc
and
sbb
cltd
out
aam
inc
push
jns
add
push
stos
push
mov
mov
js
xchg
push
pop
mov
fdivl
jne
jp
les
fxam
hlt
xchg
pop
cld
and
test
out
mov
jbe
mov
xorb
lea
pop
mov
insb
out
jp
dec
dec
insb
sbb
push
cmp
push
mov
iret
int
es
cli
and
sub
cli
orl
js
jl
sub
testb
ret
add
test
mov
das
push
add
dec
add
pop
pop
mov
ja
inc
stc
hlt
movl
inc
cmc
hlt
adc
sbb
stos
lods
loop
outsl
jecxz
or
outsl
dec
leave
sbb
js
lret
je
shrb
mov
arpl
inc
adc
mov
movsb
push
xor
sbb
ss
jbe
les
xchg
jl
cs
ss
push
into
xchg
and
inc
fs
sub
mov
movsb
adc
addr16
cmp
push
mulb
dec
inc
sbb
rcr
out
mov
or
sub
lds
dec
loop
jp
ja
adcb
stos
lock
enter
shl
and
aam
clc
stos
sub
loopne
or
inc
add
mov
cwtl
or
cmpsl
rolb
cmp
mov
jle
insl
pop
in
movsl
inc
mov
mov
cltd
out
lahf
loope
enter
pusha
cmp
xor
and
nop
jecxz
ja
adc
inc
or
in
sub
int3
lahf
xlat
sarb
lret
mov
mov
pop
cs
xor
dec
inc
adc
xchg
dec
inc
imul
mov
fisubrl
mov
iret
and
faddl
mov
cltd
dec
inc
and
repnz
fimuls
jle
xchg
fadds
out
int
and
les
mov
dec
test
dec
inc
mov
loope
dec
cmpl
push
push
orb
cmpl
pop
lods
xchg
inc
jmp
psadbw
aas
out
xchg
pop
mov
out
push
lea
xchg
sub
int
inc
xor
xchg
adc
mov
lea
int
push
push
mov
mov
push
push
add
into
mov
stos
call
movsl
repnz
xchg
cmp
andl
dec
or
ret
mov
pop
mov
jo
xchg
xchg
push
mov
mov
fsubs
fcompl
push
mov
mov
fcmovnu
sub
mov
ss
loop
lea
std
adc
inc
push
dec
lods
jg
or
sti
repz
inc
adc
out
xchg
pop
popa
sbb
stos
sub
std
inc
add
mov
aaa
add
loop
test
sbb
push
jbe
lahf
insb
dec
loopne
mov
gs
loope
insl
insb
add
inc
stos
clc
lcall
mov
outsl
pop
dec
call
xchg
mov
push
pop
stos
fwait
or
xchg
in
cmp
add
loop
inc
mov
pop
pop
push
cmp
push
leave
mov
mov
rcrb
cvtps2pd
dec
lret
rcrl
test
ljmp
je
sbb
data16
andl
cwtl
stos
mov
sub
outsb
cmc
adc
ja
filds
outsb
xchg
pop
xor
movsb
mov
pop
fsubs
out
mov
shr
les
adc
movsl
adc
sub
pop
xor
and
arpl
or
fsubrl
loopne
cwtl
push
push
and
or
add
in
mov
cmp
mov
xlat
and
call
mov
out
or
orl
test
cld
sbbb
adc
pop
push
push
jbe
pop
jle
add
imul
jl
scas
jge
out
mov
int3
pop
mov
daa
sbb
cmc
adc
imul
test
cs
ds
mov
mov
inc
inc
ljmp
pop
lds
mov
stos
or
stc
cmpsl
stos
sbb
inc
inc
cmp
fnstcw
out
jnp
mov
jb
jnp
in
in
test
lea
xchg
ljmpw
arpl
sbb
sti
ret
subb
push
lahf
lret
push
iret
rorl
stos
push
pop
ret
fs
dec
mov
sahf
mov
cmc
jne
fists
jle
sti
pop
push
movsb
iret
lds
imul
out
sub
lds
leave
subl
add
popf
shl
rclb
sti
jle
inc
pop
dec
sbbb
dec
sbb
inc
popf
mov
sbb
mov
jbe
int
call
jne
dec
arpl
and
pop
testl
sbbl
pushl
call
jo
es
adc
push
ds
test
pop
icebp
aas
lods
push
in
xlat
stos
or
bound
inc
jns
xchg
sbb
in
mov
lods
mov
and
fists
xor
in
jl
cmp
push
movsb
pop
add
int3
or
ret
jbe
mov
adc
fdiv
pop
mov
push
sbb
xor
neg
mov
inc
push
add
add
lods
icebp
test
pushf
data16
xor
sbb
mov
xchg
aam
imul
mov
iret
dec
fs
stos
mov
into
jle
jl
je
xchg
cmp
dec
call
push
mov
popf
rcll
int3
fwait
cli
add
mov
int3
or
pop
or
shl
mov
or
sbb
xor
cmp
cltd
sub
fiadds
aam
dec
sub
dec
jecxz
pop
push
xor
popf
dec
out
mov
jmp
negb
sbb
or
aad
enter
negl
int3
xlat
test
mov
or
add
mov
mov
xor
out
jbe
lgs
adc
jne
mov
sub
push
sub
cli
ss
fnsave
in
insl
pop
fstl
add
xlat
or
add
pop
cmc
cld
push
mov
push
mov
or
stos
inc
icebp
push
cli
int
pusha
push
fdivs
fcoml
negl
or
js
mov
dec
mov
and
dec
lock
dec
add
add
push
adc
jbe
and
pop
inc
xchg
mov
arpl
pop
pushf
movsb
movsb
test
cmp
fsub
or
sub
mov
std
or
sub
not
or
dec
xchg
test
out
aaa
or
inc
fdivl
add
adcb
fucomi
dec
decl
addl
movsl
dec
mov
insl
adc
or
xor
mov
rclb
add
jo
push
enter
pop
pushf
mov
add
hlt
cmpsb
shll
jge
sbb
push
lret
or
inc
xchg
repz
aad
or
sbb
fnstenv
xor
mov
jmp
jecxz
jne
std
lcall
sub
sahf
push
jns
jecxz
or
dec
jl
out
mov
repz
cmp
stos
sub
out
jmp
add
cwtl
int3
cli
mov
sbb
or
xor
sahf
or
fldl
movsl
sti
lea
ficoml
loope
and
ds
push
xor
dec
or
lea
sub
push
lock
xor
shl
or
adc
loope
add
and
push
mov
ficoml
dec
and
add
jp
pusha
cmp
sbb
add
cmpsb
mov
in
cmp
icebp
dec
dec
clc
pop
xor
jmp
inc
ss
xchg
dec
inc
pop
push
dec
dec
adcl
ficompl
lds
fcoms
js
xor
lret
jns
adc
leave
dec
push
addl
push
sbb
and
in
pop
bound
loope
push
inc
shrb
lds
aam
das
xor
dec
insl
xchg
mov
jge
mov
lahf
jnp
and
call
dec
scas
mov
xlat
fldl
or
or
or
pop
mov
mov
ret
cld
push
daa
rolb
leave
lcall
mov
bound
push
jg
int
mov
out
jo
test
dec
mov
ret
push
ficoms
jbe
pop
push
daa
jmp
repnz
add
mov
int3
and
adc
sub
xchg
andl
jns
stos
xchg
aas
gs
imul
das
jmp
ds
jge
jae
popa
inc
popf
pop
push
jmp
dec
pusha
inc
mov
push
inc
aas
jmp
or
adcl
pop
inc
xchg
or
dec
lock
or
mov
cmp
push
push
fcmovnbe
dec
mov
cmpps
lds
es
fdivrl
cmpxchg
and
adc
outsb
dec
mov
lcall
mov
decb
dec
dec
fildl
mov
sbb
jmp
pop
mov
or
sbb
daa
fsubrl
shll
les
call
jle
jg
mov
lea
sub
inc
mov
mull
jno
push
cmp
out
adc
xchg
sub
in
xor
push
cli
std
add
iret
dec
loop
cld
adc
push
daa
or
js
mov
movsl
int3
pop
jo
rolb
mov
mov
add
jle
scas
sbb
add
ret
and
jno
mov
sbb
cmp
jle
fwait
imul
ret
sbb
outsb
add
push
mov
aam
popf
jnp
xchg
loope
jne
iret
mov
lods
pop
jmp
test
pop
dec
outsb
sahf
mov
aad
add
and
fsubrp
dec
and
std
mov
repz
addr16
cmc
shr
std
imul
mov
lret
jbe
mov
mov
pop
fidivs
mov
cmpsb
xchg
xchg
mov
jl
cmp
movsl
aaa
push
cltd
and
fildl
cwtl
test
dec
movsb
adc
mov
cmp
adc
jge
ss
ja
push
pop
dec
or
xchg
mov
mov
int
hlt
or
sub
divb
inc
nop
mov
or
rcl
pop
pop
fdivl
bound
loop
and
pushf
loope
add
fiadds
cmpsb
add
add
jle
out
cltd
fiadds
cwtl
cwtl
xchg
xor
lods
adc
lret
fisttps
push
inc
xor
cmp
insl
sbb
lds
aad
xchg
mov
nop
jl
cltd
test
shll
test
push
xlat
sahf
jg
aaa
push
rolb
mov
sarb
jae
shrb
mov
ds
outsl
inc
or
aam
mov
mov
adc
fistps
cmpsb
push
xor
pop
or
cld
push
pusha
and
aam
cmpsl
popa
pop
mov
mov
ficoml
inc
xor
popa
gs
stos
cmpsl
xchg
hlt
icebp
xchg
jg
fcomip
cltd
jmp
rcrb
xor
out
arpl
icebp
mov
sbb
lea
insl
xlat
into
hlt
mov
pop
sarl
inc
lock
push
push
repz
insl
add
and
dec
push
pop
add
popf
xchg
xchg
daa
test
cmpsb
lods
sar
mov
rorl
inc
xchg
bound
add
ja
xor
inc
pusha
xorl
loop
repnz
mov
out
leave
jb
mov
fnstenv
dec
cli
das
bound
push
xchg
test
xor
sbb
mov
add
out
rolb
sar
cmpsl
sub
or
cmp
push
sbb
ficomps
xor
push
xchg
or
xchg
fstpt
out
fldt
adc
out
xor
das
push
aad
movsb
push
sar
sbb
shlb
movsb
les
dec
je
or
iret
fstpt
or
insb
lea
mov
imul
fwait
stos
pop
out
mov
pop
dec
inc
jnp
rclb
js
test
jg
sbb
lds
or
mov
add
insl
enter
test
cmp
mov
fwait
out
adc
xchg
testb
rcrb
imul
lahf
outsl
sar
lcall
lret
mov
sbb
xor
ret
fcom
push
scas
jno
sbb
xor
pop
or
push
xor
bound
insb
pop
push
sar
cld
ss
cwtl
out
loope
xchg
cmpsl
dec
scas
cmpsl
in
fwait
int3
enter
mov
nop
pop
xor
mov
and
repnz
lret
fidivs
in
adc
es
jo
mov
push
cmp
cld
aam
or
fs
pop
xchg
sbb
dec
sahf
repnz
dec
imul
add
cmp
scas
mov
mov
add
roll
sahf
cmp
add
xor
adc
xlat
roll
fidivl
mov
test
pop
lds
dec
ds
out
out
andb
cmp
adc
xchg
outsb
push
jne
jns
inc
shll
sbb
popa
das
das
push
push
out
shl
fmulp
movsb
dec
fbld
inc
pop
movsl
and
repz
mov
inc
sbb
mov
mov
shlb
jnp
xchg
push
jl
push
shlb
outsl
in
call
push
scas
sub
pushf
rcrl
sbb
ret
inc
jnp
pop
xchg
push
call
dec
lret
outsb
xchg
cwtl
hlt
jmp
shr
jmp
loop
fstpt
mov
icebp
mov
outsl
adc
dec
push
mov
jbe
mov
cld
push
lret
add
mov
addr16
xchg
hlt
fwait
and
call
ds
daa
mov
enter
lods
mov
fsubl
xor
lret
in
fmuls
add
jge
mov
rolb
shl
loope
push
cmovle
xor
pop
rcrb
push
push
outsb
or
into
adc
dec
imul
in
xor
test
and
pop
jno
lds
push
jno
in
pop
sub
ja
push
ficoml
cli
inc
cltd
xlat
cmpb
cltd
dec
xor
mov
test
cmp
push
xor
out
mov
rcrl
shr
and
lcall
fmul
popf
cmp
adc
scas
and
in
jne
fs
xor
xchg
mov
jo
lods
cmp
cmpsb
cmp
and
cmp
mov
outsb
ret
in
adcb
inc
mov
cmovle
push
jno
mov
divl
orb
mov
mov
push
inc
or
sti
xor
pop
bound
out
inc
mulb
dec
out
mov
stos
lret
jmp
dec
add
xor
in
test
mov
test
inc
push
int
fisttpl
push
pop
popa
cmp
aaa
xchg
enter
pop
js
lods
cltd
pop
cmp
aas
xor
push
call
ret
rol
scas
sub
int3
lretw
es
in
fs
xchg
int
in
rcr
stos
iret
test
imul
lret
xor
loopne
rcll
testb
sysret
sbb
lcall
jmp
fwait
adc
xchg
add
in
ret
fiadds
addr16
ja
int
mov
dec
sahf
std
sti
outsl
nop
push
bound
cmp
push
dec
fs
nop
dec
push
ror
mov
call
add
xchg
add
popa
mov
xor
in
test
or
cltd
and
lret
cmp
mov
pop
xchg
sub
fldt
mov
jno
leave
scas
or
ret
xor
sub
mov
mov
pop
out
out
cli
inc
inc
loope
sub
push
ficomps
push
fdivp
in
xchg
mov
mov
mov
mov
addb
add
and
push
and
push
imul
mov
mov
loop
insl
fs
cmpsb
dec
out
leave
int3
sub
adc
cmp
mov
push
fwait
mov
add
push
add
sub
leave
inc
mov
addr16
jle
sub
mov
outsl
adc
xor
fisubl
sub
cmp
or
cmpsl
stc
insb
mov
outsl
loope
adc
cmpsl
adc
or
xor
pop
xchg
pop
or
aad
mov
aas
jbe
cwtl
scas
add
cmpsl
movsl
testl
mov
and
repnz
sbb
es
inc
and
popf
ja
pop
sub
out
aad
loopne
scas
lcall
fstpt
inc
mov
sbb
cmp
pop
add
xor
and
and
mov
int
or
add
insl
int
into
cmpsl
mov
lock
adc
imul
cmpsb
add
int3
add
mov
loop
lds
shrl
dec
push
ja
das
lahf
lret
std
mov
ffree
orb
cmpxchg
dec
sbb
cmpsl
popa
loope
mov
ss
inc
ficomps
lret
jle
lea
aas
out
into
cmpsl
jge
mov
and
cmp
fstpt
xchg
xchg
add
pop
add
out
inc
gs
cmpsl
sahf
xor
adc
inc
and
repnz
sbb
stc
mov
sbb
mov
and
jns
mov
and
dec
lods
xor
cmc
xor
stos
ret
popf
or
popf
imul
and
test
pop
xor
sbb
cli
inc
loopne
push
mov
das
xor
sbbl
or
cmp
jb
lret
xchg
mov
push
lds
inc
out
pushf
popa
push
arpl
ljmp
jl
popf
dec
addr16
aad
mov
xor
pop
movsb
clc
movsl
xorl
adc
in
mov
inc
fisttps
mov
out
mov
idiv
xor
popf
aas
push
dec
inc
jae
daa
call
pop
push
aaa
mov
push
mov
push
fdivl
loope
leave
adc
popf
int
pop
imul
mov
ljmp
ds
or
sbb
aad
test
pop
jns
test
lret
jecxz
imull
push
xchg
popf
mov
scas
mov
out
inc
sti
psubw
mov
adc
cli
lret
push
in
xchg
cli
or
sbb
js
and
inc
gs
or
push
test
shrl
mov
sub
inc
sarl
pusha
dec
fs
leave
out
outsb
sar
pop
fcomp
push
xor
mov
inc
sarb
sub
test
clc
repz
mov
or
divl
mov
mov
cld
insb
jne
push
ja
mov
mov
outsb
ret
xor
dec
sbb
cmp
mov
or
fwait
mov
cld
call
fdiv
mov
jbe
loope
push
xchg
xchg
mov
sbb
mov
push
push
loop
rcrb
dec
lcall
pop
jg
mov
inc
fs
arpl
nop
and
shll
xor
sbb
and
stos
mov
cmp
and
mov
push
addr16
add
lret
popa
mov
mov
mov
cmp
cmp
sbb
add
fwait
int
mov
cli
pop
mov
movsb
imul
fnstsw
fs
sub
mov
push
dec
xor
or
in
sub
add
lahf
sub
mov
push
aad
lret
fcomps
jo
outsl
jnp
and
in
add
mov
stos
mov
ret
cs
popa
sub
push
adcb
je
int3
xchg
xchg
je
ja
mov
cmpsl
in
cmp
fcompl
xchg
adcb
push
inc
movb
mov
mov
test
mov
outsb
lcall
lcall
adc
hlt
or
imul
cmp
and
in
loop
push
insb
sti
mov
jno
add
movsb
int
mov
lret
dec
inc
cmp
divb
pop
sub
stc
push
xor
mov
les
rcrb
inc
add
mov
mov
mov
pop
addr16
inc
out
lcall
xchg
or
repz
mov
aam
ret
xor
jae
xor
ret
stos
or
push
inc
lahf
or
mov
cltd
test
lods
or
fbstp
cmpsb
add
lds
movsb
in
aas
cmp
gs
imul
jl
int
ljmp
add
insl
mov
mov
lods
fldenv
sarb
xor
jne
inc
push
sbb
test
or
xor
pop
jo
mov
jmp
les
dec
gs
and
stos
popf
in
inc
inc
cmpl
mov
jbe
imul
and
lds
jp
push
cld
lahf
sub
and
cmpsl
inc
dec
aaa
ljmp
mov
push
pop
sbb
jmp
xor
push
scas
or
jo
sub
adc
lock
xor
mov
les
mov
popf
adc
or
fwait
and
cld
je
sub
mov
or
xchg
outsb
insb
shrb
jle
pop
jne
insb
sahf
stos
push
std
inc
daa
mov
idivl
xor
push
xchg
ja,pt
imul
push
icebp
adc
movb
int3
adc
outsl
pushf
mov
add
and
jns
xor
push
pop
lock
loope
mov
stos
dec
jns
xchg
hlt
ror
mov
push
lods
enter
sbb
pushf
and
out
es
dec
xor
adc
fcoml
cli
inc
lahf
jg
xorb
lret
daa
push
sub
daa
push
jmp
dec
fdivs
dec
add
sarb
sti
dec
sbb
lods
mov
cmp
loopne
jmp
lock
jns
int3
dec
add
aad
mov
mov
fst
ja
add
dec
push
mov
imul
ja
cmc
into
inc
fbstp
sbb
dec
sub
ds
push
push
outsb
jno
push
adc
jle
push
adc
xor
sbb
aas
jno
outsb
dec
adc
out
ja
push
out
or
in
adc
out
sbb
mov
add
dec
nop
cmc
xor
movsl
xchg
jg
add
sahf
icebp
scas
movsb
push
mov
addr16
test
in
aaa
xchg
jae
mov
mov
out
gs
mov
out
shll
pushf
sbb
pop
stos
cmpsl
mov
fsubrs
mov
mov
pop
fdivp
push
push
in
je
pop
mov
fcmovnu
ficompl
inc
lret
bound
xor
pop
les
jp
enter
inc
mov
je
ljmp
into
jno
shlb
adc
arpl
sub
jnp
gs
fsubs
jecxz
push
cmp
fistpl
ja
rcrb
mov
dec
ficompl
into
imul
icebp
sbb
adc
jae
sub
jg
push
mov
in
je
lds
jae
xchg
loop
sub
xchg
push
sbb
sub
sub
cmpsb
mov
jno
inc
fimull
sbb
lahf
lahf
stc
push
jno
xchg
jnp
insl
lret
loope
xor
adc
or
lds
shrl
mov
jae
mov
and
sbb
dec
into
push
sbbb
insb
sub
sti
add
rep
mov
mov
mov
add
cvtdq2ps
push
out
push
shrb
push
sbb
jo
incb
dec
cmc
push
jno
jp
and
shlb
sub
lock
popf
and
jp
sbb
mov
in
lahf
lds
jmp
lret
jg
inc
jecxz
movsb
aam
into
jmp
sbb
fs
data16
jbe
add
lahf
sbb
mov
mov
loopne
mov
inc
in
sbb
es
dec
mov
sbb
imul
out
imulb
insb
enter
arpl
jecxz
aad
cmp
pop
test
lock
imul
dec
repnz
jnp
push
add
jl
jge
add
daa
addr16
dec
pop
outsb
scas
popa
xchg
iret
xchg
push
mov
shl
or
lds
aas
jbe
adc
fdivrs
daa
lcall
sbbl
jle
clc
add
jns
push
push
lock
popa
lea
outsb
mov
inc
repnz
orl
cmp
adc
add
adc
fcmovne
in
in
push
cmp
mov
lcall
or
sub
add
cmp
mov
pop
push
push
shrl
dec
cld
push
pop
jbe,pt
mov
test
mov
adc
rcll
add
sub
cs
in
and
emms
adc
mov
cmp
and
sub
fs
stos
cli
jmp
pushf
je
scas
les
imul
xor
std
scas
pop
inc
mov
sub
add
sarb
in
jo
xlat
test
dec
xlat
dec
add
clc
in
dec
add
mov
lds
mov
rorl
lock
bound
fistpl
nop
adc
lock
add
lods
pop
sbb
jl
shll
inc
and
xor
cmp
push
or
test
and
xchg
out
and
xchg
xchg
fcoml
add
loop
iret
fucomi
pop
adc
pop
ret
std
push
jl
jb
mov
hlt
and
bound
xchg
fiadds
jns
jno
mov
dec
int
decb
dec
sbb
sbb
icebp
mov
movsl
stos
xor
testb
xor
push
int
mov
or
xor
jp
push
push
aaa
dec
clc
in
inc
push
inc
in
sbb
lods
jmp
cld
mov
cmp
push
xor
lahf
xor
push
cltd
adc
movsl
fistps
arpl
and
push
outsb
adc
mov
cmp
movsl
loope
mov
push
mov
jns
mov
xlat
pusha
lods
jp
cmpsb
pop
flds
sbb
pop
aas
mov
sub
or
imul
jge
int
sbb
sub
rol
xor
cwtl
jbe
lods
gs
stos
lods
mov
jno
cmp
inc
and
fnstcw
sbb
stc
cld
imul
sbb
lods
dec
adc
cmp
loopne
rolb
fld
pop
mov
bound
jb
cmc
insl
inc
rcll
cmc
xchg
xchg
cmp
in
add
push
bound
jbe
shl
out
dec
aaa
cmpl
in
out
push
lea
xchg
into
sub
std
ljmp
add
xchg
ds
jns
fimuls
dec
mov
mov
or
pop
out
jge
push
popa
jne
sti
xchg
sbb
jecxz
lret
leave
je
stos
pop
sbb
ds
push
and
out
inc
test
scas
loopne
mov
gs
fnstsw
adc
cmp
push
clc
and
push
xor
mov
std
cld
fdiv
adc
dec
cld
shrl
sahf
int
insb
add
push
testl
jae
notl
fldcw
clc
mov
push
jge
fwait
push
pop
in
inc
pop
orb
cmpsl
xchg
xor
mov
xchg
insl
and
pop
and
sbb
into
or
mov
cmp
cmp
add
inc
inc
es
jae
push
adc
sbb
out
mov
addl
pop
out
pop
mov
pushf
in
push
lsl
or
lret
dec
in
out
cmp
jns
inc
popf
add
movsb
or
andl
xor
push
jp
lods
add
pop
lds
pmaxsw
xchg
sbb
jl
mov
sub
test
xchg
mov
add
jmp
in
out
daa
lret
and
clc
repz
lret
popf
ljmp
push
xor
fsubr
out
mov
outsb
aaa
xchg
pop
scas
int3
outsl
dec
je
mov
pop
roll
add
movsl
mov
push
rcll
aas
jge
hlt
ss
es
and
or
or
inc
mov
imul
sub
jae
in
add
jbe
dec
or
mov
nop
adc
in
out
mov
lods
cmc
cmp
inc
loope
test
ret
inc
sbb
pusha
inc
pop
shlb
sbb
test
xor
jne
mov
push
jnp
mov
leave
clc
push
xchg
push
mov
push
cmc
cmp
aam
and
or
call
adc
cmp
outsb
xor
dec
sub
adc
pop
jge
ss
in
pop
xor
add
jbe
sub
mov
icebp
xchg
push
push
mov
pop
imul
imul
cwtl
arpl
jbe
out
in
xchg
lods
xor
or
jle
shrb
jbe
lcall
push
pushf
shrl
sar
out
int
mov
lds
cli
movb
xor
daa
jbe
jae
pusha
push
cwtl
dec
dec
push
out
scas
pop
xchg
in
xchg
mov
bnd
xlat
psubb
cmc
add
inc
ds
fsubs
push
sub
mov
std
sub
lret
inc
jl
out
inc
or
jmp
fsub
mov
lods
int3
jle
inc
aad
or
xchg
and
or
or
sbb
or
mov
in
mov
filds
dec
sbb
rcrb
shrl
push
stos
inc
inc
loop
dec
movsb
inc
ja
sbb
lods
lcall
je
jmp
rcrl
orl
jnp
push
inc
cmpsl
fistpl
inc
and
lods
call
iret
mov
push
fistpll
push
in
mov
or
cmp
cmp
sbb
out
and
pop
sub
mov
imul
lods
jo
ret
jmp
aam
into
push
scas
jae
mov
out
push
aam
add
dec
adc
and
pop
mov
xchg
in
movsb
into
cmpsl
and
mov
mov
pushf
cmp
mov
aaa
enter
jle
jecxz
sbb
fidivrs
sbb
aad
jl
push
outsl
or
scas
les
iret
xchg
lcall
xor
dec
push
push
sbb
cwtl
dec
aad
loopne
jmp
or
adc
addr16
add
xchg
je
enter
pop
rorb
inc
cmp
xchg
pop
or
ret
xchg
fmull
lret
adc
jg
pop
movsl
loop
insb
lahf
lods
iret
push
jl
insb
aaa
dec
fisubs
pop
jl
cwtl
jnp
sbb
ret
aad
dec
cmp
xchg
cwtl
cld
enter
adc
sub
ret
mov
pop
loopne
cmc
dec
mov
scas
lea
lods
popa
insb
inc
xchg
jmp
shr
mov
pushl
popf
xor
test
in
mov
pop
push
or
add
insl
and
jecxz
stc
pop
push
push
jl
mov
ss
fidivs
adc
clc
imul
cmp
mov
lock
out
dec
aas
negl
add
ss
lret
xchg
in
bound
jg
mov
faddl
push
xor
push
dec
jne
mov
cli
adc
or
out
mov
xchg
mov
repz
mov
push
xchg
ljmp
int3
lock
mov
push
mov
out
out
add
into
pop
insl
into
adc
jecxz
cli
mov
push
adcb
fdivr
or
mov
cmp
insb
pop
rorl
inc
xchg
repz
sahf
jns
push
int
and
insb
or
fdivrl
jmp
mov
mov
out
adc
pop
sbb
dec
pusha
pop
sub
jae
sub
lahf
sbb
stc
cmp
mov
lret
mov
lds
cmp
adc
xchg
mov
add
clc
mov
aaa
mov
inc
arpl
rep
scas
test
or
mov
ret
jl
repnz
cmpsl
scas
dec
aam
ljmp
cmp
xor
jo
push
push
je
out
inc
scas
cli
mov
inc
fcomps
stos
loope
in
call
mov
and
xchg
nop
mov
pop
push
dec
fldl
mov
cmc
jmp
mov
jl
pop
cmpsb
paddusb
sbb
test
and
cmpsb
adc
sbb
mov
jle
lods
aad
pushl
mov
mov
jle
flds
and
lret
out
add
out
gs
shll
mov
movl
sub
mov
test
es
rcpps
mov
mov
mov
aam
addl
loope
pop
stos
jno
std
divb
ja
repnz
cmp
mov
jbe
inc
clc
jb
push
sti
pop
dec
push
jae
push
imul
popa
push
jo
sbb
enter
and
jl
testb
push
sbb
pusha
or
das
into
call
push
sub
rorl
xchg
movsb
les
adc
mov
and
or
push
mov
std
pushl
out
pushf
aaa
vmwrite
inc
xchg
shrb
repnz
jns
xor
pop
cld
dec
pop
sbb
loope
shl
filds
cmp
or
cmp
not
inc
mov
and
mov
sbb
cmpsb
jns
scas
xchg
int
lcall
xchg
outsl
sbb
mov
repz
pop
pop
xchg
mov
or
cmp
pop
out
cmp
add
enter
jp
mov
xchg
lahf
mov
xchg
mov
add
outsl
stos
andl
stos
add
in
xor
out
and
xchg
adc
cs
rcll
cmp
jge
dec
mov
sub
fsincos
xor
test
mov
and
adc
mov
repz
push
outsl
push
xchg
adc
dec
ds
sub
mov
adc
pop
mov
inc
dec
iret
movsl
adc
out
jle
setns
mov
lret
xchg
xchg
inc
dec
cmp
dec
cwtl
stos
out
roll
jb
push
or
shl
xor
rorb
fidivl
stc
aam
and
sbb
cmp
int
cld
subl
pop
int
and
movsl
ss
ljmp
push
xchg
cld
addr16
sbb
in
add
out
mov
mov
jle
sub
shlb
and
pusha
pop
jge
loope
mov
fs
call
pop
aas
push
or
popa
popa
sbb
mov
pusha
rolb
fidivs
mov
mov
stos
repnz
add
pop
out
mov
add
loopne
scas
xlat
fstps
fiadds
pop
out
lock
cmovle
sub
pop
add
or
and
movsl
inc
sub
testl
hlt
dec
roll
dec
js
adc
jne
fbstp
inc
in
lds
mov
pop
pop
stc
scas
addr16
scas
jle
mov
pop
xchg
push
dec
mov
jp
rorb
jecxz
cs
bound
fisttpll
lea
adc
push
xor
mov
les
idiv
call
add
jns
loopne
push
aas
pop
xlat
shl
push
les
and
lret
test
jecxz
pop
push
mov
sub
adc
push
mov
add
push
cli
mov
das
mov
and
sub
imul
mov
lds
adc
in
das
adc
mov
sahf
and
subl
incl
push
cmp
mov
adc
subb
xchg
push
or
mov
int3
out
xor
rcrb
leave
xchg
std
call
aaa
pop
sbb
sbb
mov
int3
cmp
test
pop
insl
and
push
add
scas
ljmp
and
insb
xor
imul
rcll
es
cmp
push
pop
sbb
mov
shrl
aaa
sub
enter
dec
mov
dec
dec
outsl
cli
add
lea
mov
jae
and
xchg
imul
dec
mov
in
fldenv
sbb
add
in
push
test
mov
pusha
pop
jmp
push
dec
dec
in
sub
rorb
mov
cmp
mov
xor
clc
sub
push
in
test
les
jno
mov
jecxz
xor
sahf
or
insb
mov
add
rorb
sub
or
movd
mov
adc
out
mov
jns
lods
xor
sub
mov
jnp
mov
pop
pop
inc
mov
es
jno
xchg
or
ljmp
addl
cs
test
pop
adc
cld
dec
repnz
dec
jp
int
and
dec
out
mov
dec
inc
pop
inc
jl
call
fndisi(8087
shl
mov
mov
xlat
sub
pop
xchg
loope
dec
movsl
mov
mov
cmpsl
pop
inc
mov
push
sbb
rcrb
mov
mov
mov
imul
sub
fwait
in
in
out
aaa
popl
cmp
clc
dec
hlt
repz
loopne
jno
into
in
mov
nop
pop
or
sarb
loope
fsubs
pop
fdivrl
or
aam
stos
push
jge
in
mov
dec
xchg
dec
dec
inc
mov
mov
push
dec
inc
rorb
inc
add
fsubs
dec
js
mov
push
fisttps
and
mov
lods
pushf
mov
cmp
dec
repnz
xchg
lods
negl
ficoml
sub
mov
add
les
aad
adc
inc
lods
std
cmp
stc
rcr
pusha
pushf
out
dec
popa
mov
jle
inc
aad
imul
pop
lcall
jle
in
leave
jp
ficomps
fwait
jp
pop
sub
inc
outsb
js
cmp
dec
imul
mov
movsb
push
test
pop
out
cmp
mov
imul
push
push
xor
inc
push
call
cmpsb
dec
inc
xchg
jmp
sar
jmp
or
and
aas
xchg
ret
orb
adc
lds
add
into
cmp
enter
jo
push
adc
adc
sub
test
repz
clc
daa
xchg
sub
jmp
and
sbb
xchg
mov
ret
rolb
mov
and
mov
mov
pop
mov
movsb
repnz
sbb
add
push
sbb
push
call
adc
out
out
hlt
add
adc
test
loopne
inc
and
dec
dec
xor
mov
mov
inc
xchg
jbe
jnp
subb
push
cmpsl
mov
into
pop
dec
in
pusha
sbb
pop
sbb
repnz
inc
and
ret
xor
negb
mov
pop
nop
jmp
xchg
cmpsb
loopne,pt
sahf
sbb
xlat
cmp
mov
sub
test
jbe
and
movsl
int
mov
cli
lods
dec
rolb
je
imul
pop
arpl
stos
hlt
shll
pushf
daa
out
flds
cmc
out
test
bound
lret
push
push
aam
in
jecxz
cs
xor
fnstcw
lcall
push
mov
inc
arpl
pop
rcl
rcrb
jo
lret
stos
push
out
ficompl
lds
scas
or
lcall
lea
cmp
jle
pop
push
shrb
xor
push
or
add
enter
lret
fmul
jp
movl
inc
scas
add
sub
incl
mov
pop
inc
jnp
mov
xor
adc
pop
jo
lea
sar
hlt
js
cld
aad
jno
add
jge
mov
fidivrl
add
in
dec
dec
addr16
fcmovnb
xor
cwtl
scas
shl
popl
inc
cmovne
loopne
das
clc
ss
nop
xchg
faddl
dec
mov
in
sub
mov
jb
pop
pusha
fcmovbe
or
xor
fildll
or
int3
mov
stos
cmp
mov
push
and
std
mov
loop
xchg
mov
push
pop
fmuls
pusha
loopne
mov
or
negb
fstp
sahf
xor
mov
add
sub
dec
test
popa
xchg
rcrb
popa
in
fwait
add
mov
rorl
add
mov
and
mov
cmp
lods
movsb
adc
add
pusha
mov
outsb
dec
xchg
into
pop
ffreep
clc
add
push
stos
cmp
adc
out
insl
cmp
jne
js
or
push
ss
ret
and
shrl
xchg
jae
jmp
test
jg
test
xor
pop
das
pop
ja
stos
mov
and
stos
les
xor
outsl
and
jbe
jne
loop
stc
pushf
cmpsl
fucom
push
jo
lock
testb
xor
mov
ficomps
mov
cmp
push
mov
push
fnstsw
mov
out
jns
xchg
js
push
xor
push
mov
push
push
adc
popf
sbb
mov
fidivrs
mov
ljmp
adcl
inc
mov
inc
xchg
sbb
cwtl
leave
movsb
inc
xchg
mull
mov
mov
push
push
push
pop
jnp
push
gs
jge
sub
jo
fdivrp
jae
and
inc
scas
inc
and
sti
push
movsb
pop
data16
push
push
pop
repz
jecxz
mov
mov
adc
dec
pop
push
out
out
clc
mov
inc
mov
add
mov
in
iret
divl
popf
xchg
add
mov
pop
mov
rolb
lahf
xchg
sbb
stos
shrl
scas
pop
or
mov
xchg
cmp
push
cmp
imul
pop
and
movsb
lds
imul
lcall
movsb
cmp
sahf
dec
add
test
insl
sub
fdivrl
xchg
addl
push
sbb
daa
inc
scas
inc
mov
insb
clc
and
femms
xchg
mov
rorl
xchg
test
sbb
push
das
loop
push
out
xor
hlt
mov
sti
mov
push
nop
cmpsl
pop
jnp
cmp
pop
mov
out
mov
and
lret
xorb
push
ja
aaa
xor
xor
mov
jge
xchg
mov
out
jbe
cmp
push
les
in
insl
insb
ret
pop
inc
jbe
or
cltd
sti
in
sbb
dec
jl
lcall
data16
sub
fisubrl
lds
mov
and
inc
out
pop
cmp
inc
mov
das
jae
lds
push
js
inc
out
or
shrl
jmp
fcmovnu
sub
nop
sub
pushl
mov
xchg
in
sarl
cmp
jmp
clc
jecxz
clc
pushf
mov
mov
sub
incl
mov
in
test
cmpsb
or
add
jb
mov
mov
dec
lcall
pop
faddl
mov
mov
jo
pop
les
int
arpl
mov
fiadds
pop
mov
mov
stos
jno
dec
jo
dec
data16
mov
push
loope
loopne
test
jmp
xor
and
or
sub
cltd
jmp
lret
pop
mov
and
cmp
in
dec
jb
les
popf
cmp
pop
lods
push
mov
adc
cmpsb
lods
xorl
leave
aaa
jnp
out
sbb
es
dec
and
mov
sub
or
das
add
in
push
jb
or
sub
push
aad
push
fld
loopne
xchg
test
sub
lret
stc
pop
leave
dec
mov
ret
sbb
cmp
or
mov
aad
add
or
lods
lret
imul
cwtl
pushf
jecxz
push
arpl
stos
mov
xlat
cld
jle
popa
imul
push
insl
jo
sub
adc
scas
andb
dec
mov
imul
jne
jg
dec
sbb
cmp
xor
sub
sti
push
orb
cmp
cli
inc
add
xchg
das
ja
fsubr
and
dec
inc
shr
pop
cmp
inc
mov
in
inc
cmp
mul
fst
adc
ror
jnp
jns
std
shlb
xor
out
mov
xchg
ss
jae
xlat
sbb
imul
jle
les
adc
fisubrl
bound
xchg
cmp
pop
jo
xchg
cmpsb
fsts
jp
push
mov
cwtl
sbb
or
stos
jno
rcll
stos
push
int3
fcmovb
sub
lret
rcrb
inc
push
xchg
pop
adc
ljmp
jle
inc
les
push
mov
pop
xchg
mov
stos
jge
fisttpll
cmp
adc
jecxz
cli
loope
sub
push
jo
bound
and
into
sub
roll
cwtl
inc
pushl
xchg
cltd
std
cmp
dec
test
xor
pop
divl
mov
cmp
in
and
test
add
ror
jg
cld
jmp
inc
aaa
mov
and
or
push
sub
jae
mov
mov
xor
jle
dec
mov
pusha
xchg
shrl
cmpsl
xchg
cltd
mov
sbb
mov
push
test
and
and
jmp
cmpsb
shrb
inc
aad
mov
cs
mov
pop
repz
jle
roll
lea
push
mov
inc
add
jno
ds
sbb
pop
pop
pusha
addr16
mov
data16
jb
inc
add
inc
repz
inc
int
repz
push
mov
add
adc
pop
pop
dec
xorb
xchg
and
daa
mov
dec
jg
pop
and
pushf
outsl
aad
imul
adc
jl
cmp
mov
mov
mov
cmp
fiaddl
mov
hlt
xchg
dec
adc
stc
test
pop
sahf
sbb
pop
daa
icebp
int3
dec
xchg
js
xchg
xchg
aad
test
jne
inc
out
rolb
imul
pushl
into
outsl
adcb
mov
jae
pushf
daa
insb
rcrb
xchg
cmpsl
lahf
sub
cmc
sbb
dec
jo
lea
or
adc
fucomip
gs
cld
cs
fisttpl
in
add
sub
jo
mov
lds
scas
mov
push
pop
cmp
fmul
lahf
mov
stos
aad
aaa
aaa
xchg
mov
dec
scas
xor
xchg
adc
push
mov
jns
push
adc
popa
lea
fwait
repnz
xor
leave
fildll
test
pop
jmp
push
insl
jmp
sub
jns
jmp
pop
jle
test
lahf
loopne
and
jae
lcall
mov
mov
enter
xlat
xor
cli
bound
dec
aas
out
int3
and
dec
sub
ret
scas
cmp
inc
ds
xor
mov
lcall
clc
pusha
es
jg
test
inc
stos
push
push
sub
cmp
mov
mov
jle
les
lods
roll
in
insb
xor
sahf
sahf
pusha
push
dec
dec
sub
pusha
stos
add
stc
popa
xchg
sub
test
dec
mov
repz
gs
jnp
xchg
test
outsb
les
inc
mull
repnz
sbb
push
es
add
ret
cmp
jmp
jl
outsb
scas
mov
sti
daa
mov
js
cwtl
ljmp
xchg
mov
xorl
fucomip
jg
or
jmp
jmp
mov
repz
inc
mov
movsl
iret
jb
test
call
sti
dec
lods
inc
or
push
dec
mov
daa
aad
in
in
lret
or
and
ret
sarb
dec
mov
cmp
lods
dec
and
add
inc
iret
cmc
or
out
movsl
stos
jl
sti
js
xchg
mov
rcrb
push
fimull
jl
lea
mov
sub
mov
ret
push
cmpsb
cltd
xor
dec
imul
add
insb
mov
pop
mov
sub
shlb
inc
jmp
mov
cmpsl
pop
shl
movsl
sub
mov
jl
test
jno
lds
pop
adcl
pop
icebp
inc
out
jne
dec
aaa
fisubrs
mov
shl
orb
testl
lahf
nop
cmp
fistpl
dec
sbb
lds
pushw
and
movsl
xchg
fs
or
repnz
imul
inc
xchg
nop
pop
enter
rorb
mov
rclb
add
fldz
scas
rorb
sbb
adc
adc
xor
adc
cmp
stc
outsl
ret
cmp
and
pop
pushf
add
stos
sub
das
and
hlt
dec
xlat
push
daa
mov
mov
xor
incb
sbb
xchg
adc
divb
lock
aas
clc
push
dec
pop
mov
ja
cmp
inc
and
dec
in
xlat
or
dec
pusha
xor
xchg
lock
fldl
ljmp
insl
xor
and
xor
ret
fwait
cmp
cmp
push
outsb
sar
pop
aam
lods
ret
and
shlb
call
jae
pop
pop
inc
repz
out
imul
or
dec
adc
call
sub
inc
cmp
push
jns
das
pop
scas
in
popa
cmc
ja
out
icebp
sub
push
add
movsl
mov
inc
xor
inc
outsl
inc
pop
lret
jg
stos
ds
pop
mov
fidivrs
lret
aas
lock
mov
addr16
or
mov
mov
mov
test
enter
out
mov
in
loopne
or
fs
sub
jae
mov
in
cmpl
rcrl
mov
ret
mov
orl
and
cmp
icebp
push
and
loope
sbb
mov
jb
pop
sub
loop
fisubrl
dec
movsb
stc
cmp
fistpll
push
shll
lret
push
xchg
ss
xchg
pop
div
xor
je
sbbb
xchg
mov
mov
insb
dec
mov
mov
mov
mov
lock
fucom
ss
cmp
push
ret
push
cwtl
int3
nop
xchg
xorb
mov
divb
cmp
mov
cmp
outsl
sbb
lea
pop
mov
jmp
add
sub
xchg
lret
shr
ret
mov
stc
std
push
sub
test
dec
jmp
push
mov
notl
lods
adcb
mov
movsl
jo
cmpsl
pop
cld
push
popa
xor
stc
add
arpl
or
xchg
add
xchg
movsl
xor
pop
xchg
cmp
icebp
mov
sub
lret
jb
mov
cmc
pop
adc
inc
jecxz
mov
mov
pop
sbb
cmp
sbb
int
in
cli
and
xchg
sbb
mov
lret
jmp
ficoms
push
sbb
sbb
jns
sub
ret
test
outsl
cmp
mov
jo
xchg
push
push
lea
stos
sub
adc
repnz
loopne
or
push
aam
pop
pop
fdivp
mov
sub
bound
adc
cmc
out
jno
iret
test
jle
inc
sub
hlt
les
ss
cltd
mov
clc
int3
mov
into
arpl
movsb
mov
xorb
test
push
test
pop
out
test
int
aam
adc
dec
enter
ss
popa
call
add
push
iret
fsubs
sub
mov
sbb
sub
pushf
popa
mov
in
pushf
pop
inc
aam
mov
mov
xchg
xchg
mov
jmp
leave
lods
jecxz
sbb
mov
shrb
dec
outsl
ljmp
mov
cltd
stos
je
dec
xchg
jmp
daa
add
fcomi
jns
cwtl
mov
ficompl
lret
add
adc
mov
daa
sbb
mov
insb
lods
mov
mov
lcall
dec
pusha
gs
ljmp
leave
sbb
or
mov
and
jne
in
push
cld
jb
xchg
push
mov
add
inc
popf
add
push
cmpsl
mov
popl
push
xor
add
aas
outsb
inc
outsb
jns
lcall
pusha
fisubs
mov
or
int3
xchg
pop
int
adc
sub
dec
dec
sar
jbe
ret
cmpsl
sahf
mov
and
cmp
push
push
push
pop
push
inc
add
out
test
adc
fstpt
cmp
mov
or
jmp
push
stc
jecxz
mov
stc
std
or
scas
daa
aad
hlt
fdivs
rorl
lds
mov
push
in
mov
in
ror
adc
cmp
lea
scas
and
les
jno
sahf
mov
outsl
test
hlt
ret
les
jmp
lahf
or
inc
push
jns
imul
pop
mov
dec
outsb
lret
in
imulb
cltd
daa
add
pop
dec
adc
imul
jns
jae
xor
fwait
adcl
out
inc
jnp
cld
mov
cmp
mov
push
inc
sbb
xorl
xchg
rclb
jnp
fdivrs
pop
mov
fnsave
push
outsl
test
sbb
subb
das
push
xor
cwtl
lea
mov
pop
xchg
lahf
add
jle
popf
xchg
mov
sub
jbe
mov
ret
mov
push
jg
xchg
mov
pop
jb
aaa
sub
je
dec
aam
and
leave
pop
jns
enter
adc
iret
stc
es
out
popa
mov
xor
mov
xor
aaa
ret
std
orb
dec
pop
mov
mov
cmp
dec
pusha
pop
add
and
imul
add
push
pop
add
or
shll
imul
lock
enter
push
sub
jae
fistl
ds
bound
cmp
stos
pop
ds
add
aaa
mov
cmp
sbb
js
push
mov
inc
das
mov
sub
daa
movsl
shrl
addr16
push
lcall
xchg
push
jle
imull
xchg
das
je
shlb
add
fs
xor
sub
aaa
ja
cli
popa
adc
push
in
xchg
data16
idivl
into
sar
cwtl
bound
push
jl
mov
stos
popf
add
xor
sti
repz
ret
mov
mov
fdivrl
lea
sub
adc
adc
push
lock
orl
lret
hlt
jno
subb
repz
cltd
xor
sbb
pop
add
aas
fsubrl
cmpsl
rolb
inc
jmp
int
push
xor
dec
sbb
ret
das
test
xor
ds
add
out
ret
jne
cwtl
mov
mov
dec
mov
mov
push
push
adc
jl
xorb
leave
dec
sbb
xchg
cmpsl
jno
xchg
in
add
push
bound
and
popf
hlt
jge
fcoml
xchg
push
int
in
add
clc
in
in
addr16
push
ljmp
cmp
or
sub
sbb
pop
wbinvd
data16
cwtl
mov
arpl
jmp
roll
mov
inc
push
or
loope
shlb
mov
mov
sbb
out
xchg
int3
int3
cli
mov
xchg
int3
ja
insl
popa
and
pop
pusha
xor
ds
cmp
xchg
lods
ficompl
cmpsl
iret
inc
mov
pushf
scas
and
clc
arpl
dec
test
aad
xor
lock
ret
lahf
mov
or
jbe
data16
dec
repz
arpl
mov
adc
mov
fcmovb
addl
cwtl
scas
stos
lret
add
sbb
js
push
sbb
shr
mov
lret
sub
les
test
dec
and
inc
cmp
test
outsl
xor
popf
cwtl
sbb
pop
inc
adc
lahf
pop
aas
dec
push
ljmp
jl
inc
mov
xchg
dec
pop
ficoms
cmp
int3
pop
and
fildll
fcomi
das
sti
shll
cmc
int
int3
push
xchg
and
pusha
sub
pop
in
scas
ret
pop
sti
pop
xchg
loopne
push
fmull
add
pop
sarl
cmp
sbb
divb
mov
jb
dec
aad
sarb
test
jge
and
dec
or
lahf
notl
repz
repnz
cmp
xor
in
sbb
ror
push
pop
push
or
ljmp
or
jecxz
cmp
popa
mov
gs
add
add
ja
rolb
lret
cmp
nop
in
lret
push
movsl
adc
lods
insl
fists
out
pop
cmpsl
in
inc
std
test
cltd
decb
xchg
jg
sub
or
push
jae
inc
inc
cmp
xor
push
add
and
shll
test
dec
add
outsl
cmpsb
mov
push
js
decl
aas
xchg
inc
cmp
std
sub
call
iret
xchg
and
in
mov
cmp
xor
and
xor
push
fildl
ret
pop
xchg
push
jno
xor
sub
xor
test
mov
fsubrl
out
dec
int3
call
sub
cmp
adc
es
rorb
and
xor
adc
mov
inc
inc
push
mov
sub
pop
mov
in
loope
inc
je
roll
insb
pop
or
mov
out
adc
rcll
rolb
sub
cmc
loopne
sbb
mov
cld
lahf
lahf
dec
addl
adc
inc
push
aam
ficoms
mov
or
sub
addr16
inc
push
out
out
cmp
pop
pop
or
xchg
xchg
and
iret
dec
dec
pop
push
jl
pop
push
sub
aaa
jnp
into
sub
out
or
cmp
xor
sub
push
xchg
sbb
xor
pop
lods
jmp
dec
ds
and
fstps
xchg
jecxz
and
push
dec
lea
fdiv
jbe
je
dec
stc
dec
cli
lcall
push
and
aaa
outsb
into
cmp
jp
or
fdivrs
lock
fiadds
dec
dec
sbb
jg
inc
lods
sbb
ljmp
mov
push
pop
adc
nop
lret
lea
icebp
jecxz
sahf
and
inc
out
jle
dec
cmc
lock
push
aas
cmpsb
push
je
dec
cmp
aaa
xchg
mov
out
xchg
stos
movsb
fcmovu
leave
push
je
mov
mov
or
xchg
xchg
arpl
fcoml
inc
pushf
ds
pop
mov
xchg
cli
sub
mov
cmp
and
sbb
outsl
ljmp
mov
or
fcompl
or
pop
test
mov
jmp
mov
div
push
lock
lahf
and
adc
dec
dec
push
adcl
iret
cmpsl
stos
sub
xchg
pop
adc
xchg
repz
mov
movsb
out
lret
sub
aas
mov
xchg
daa
loope
fimuls
mov
leave
cmp
popa
jne
and
xchg
stos
mov
gs
je
scas
iret
pop
daa
jle
add
aas
xor
andl
inc
xchg
cwtl
jp
mov
lret
xchg
cltd
les
sbbl
scas
sahf
ret
addl
mov
jecxz
pop
and
sub
cmpsb
inc
push
cmpsl
adc
loope
inc
inc
mov
stos
sbb
cmp
arpl
aad
cmp
xor
fisubl
lods
push
bound
mov
stos
js
pop
xchg
into
movsl
test
inc
fcmovu
mov
sbb
dec
jp
jp
sbb
insl
adc
jmp
push
jnp
enter
dec
cli
js
or
aad
inc
cmpsl
hlt
push
cmp
sahf
cmp
and
lock
lods
insb
sub
add
push
dec
push
cltd
loopne
sub
push
sbb
in
dec
adc
and
mov
sub
xchg
into
icebp
popf
out
dec
rcrb
es
jo
fwait
daa
adc
shlb
push
mov
mov
ja
in
xor
jp
xchg
jp
add
mov
arpl
jp
push
cs
jl
inc
sub
xor
sub
lds
cmpsl
xorb
ret
push
mov
loopne
imul
das
and
rcll
inc
sbb
test
scas
adc
sub
test
es
sarb
and
mov
ljmp
sub
enter
cs
dec
js
inc
push
out
repnz
jne
test
mov
mov
fs
call
and
data16
dec
mov
arpl
xor
dec
rcrb
xor
fnstenv
xor
mov
scas
das
ds
mov
xchg
sub
das
lcall
xchg
push
iret
mov
mov
lret
adc
popl
sbb
test
and
and
and
jo
fstl
rclb
ret
cli
je
xchg
out
shl
mov
dec
lds
cli
iret
js
mov
rcrl
xchg
xor
dec
mov
xlat
xor
inc
mov
test
push
sbb
push
out
inc
mov
mov
mov
dec
pop
cmc
sub
jecxz
cmp
aas
mov
incb
rcr
dec
loopne
mov
or
clc
or
stc
mov
jl
lret
adc
ret
aaa
xlat
ret
dec
clc
xor
mov
pushf
dec
mov
leave
out
dec
push
xor
ja
mov
pop
xchg
push
push
sub
add
sbb
and
pusha
addr16
xor
or
mov
pusha
push
mov
test
pop
mov
push
fidivrl
daa
or
cwtl
lods
jno
mov
lret
inc
push
mov
cmp
lret
adc
sti
sub
arpl
fmul
int3
mov
addr16
xchg
add
push
dec
fsts
aam
cmpsb
cwtl
inc
inc
lods
and
mov
cmpb
ret
sbb
repz
stos
shll
stc
inc
and
inc
cmp
mov
ss
in
push
pusha
push
push
std
sbb
fwait
loop
pop
cs
mov
jmp
pop
sbb
hlt
jp
push
jno
and
add
bound
pop
imul
jmp
imul
xlat
outsb
xchg
sbb
loop
jnp
mov
shr
jno
xlat
inc
loope
pop
sub
sarb
dec
push
xchg
mov
push
pop
sahf
xor
into
push
ja
push
dec
mov
or
pushf
xchg
daa
pushf
cmpsl
dec
adc
jmp
push
in
cmpsb
push
sub
inc
xor
cmpsb
sub
fadd
test
cmpsl
test
mov
enter
mov
jmp
mov
pop
int3
adc
in
incl
and
pop
add
lcall
xchg
and
mov
movsl
cs
dec
mov
cmpsb
xchg
cmc
es
add
push
push
cmpsl
leave
xchg
adc
xchg
mov
lret
xchg
push
fs
xchg
daa
out
popf
sbb
fistps
mov
out
mov
sub
inc
insl
cwtl
out
mov
clc
cmpsb
pop
cmp
shr
iret
cmp
lods
sbb
mov
sbb
mov
lcall
movsb
es
inc
ds
inc
jle
or
cmpsl
jnp
jno
jbe
decl
mov
xchg
jle
cmpsb
dec
mov
adc
xor
jl
jno
out
xchg
jp
fbstp
mov
std
adc
mov
and
jl
outsb
jl
lea
xor
pavgw
stos
jl
sti
int
dec
test
xchg
pop
test
adcl
out
pop
test
push
push
and
xlat
cmpsl
insl
mov
pusha
scas
sub
xor
mov
push
xchg
int3
and
roll
adc
xor
jns
test
lahf
adc
int3
fistps
sub
call
jb
sbb
inc
dec
daa
mov
push
sbb
sbb
cmpb
andb
jbe
fistpl
pop
xor
jo
xor
pop
leave
loop
sub
inc
fimuls
rcrl
dec
out
aas
std
jge
stos
xlat
jle
push
insb
popf
cmpps
mov
pop
pop
in
xor
sbb
push
dec
arpl
dec
inc
sbb
push
out
lahf
mov
mov
pop
mov
loope
adc
loope
sub
and
decl
mov
pop
fnsave
mov
dec
stc
rorb
clc
or
mov
and
into
add
in
push
lods
mov
sbb
dec
dec
lret
cmpsl
sub
cmp
test
je
gs
mov
mull
fildl
pop
mov
out
jmp
mov
jnp
pop
or
xor
dec
push
lcall
fistpll
sub
insl
jnp
cmp
pop
and
lret
dec
adc
or
in
dec
mov
inc
jno
inc
repz
xchg
sbb
testb
jno
mov
mov
fdivs
sti
and
inc
ss
loopne
icebp
pop
xchg
sar
daa
mov
stc
int
inc
pop
mov
or
push
and
mov
push
fldl
pop
push
test
sbb
and
dec
repnz
ljmp
push
loopne
cwtl
cmp
ss
cmp
dec
cltd
inc
inc
xchg
lock
call
or
or
xchg
insl
int3
out
mov
les
addr16
shl
pop
pop
add
add
dec
icebp
add
loope
mov
mov
or
xor
inc
add
jl
cmc
and
loope
xchg
jge
ljmp
div
mov
inc
push
leave
sbb
int3
adc
gs
stos
xor
test
shlb
push
inc
cmp
fs
pop
hlt
push
popf
pop
pop
mov
push
xchg
pop
je
pop
shll
fadd
fs
push
popf
aaa
adc
and
or
popa
popf
inc
jb
and
cmp
lret
push
push
nop
test
push
mov
inc
shlb
rcl
adc
lcall
pop
mov
test
sahf
xchg
and
mov
cmpsb
outsb
rcll
jmp
xchg
int3
jg
jge
adc
ret
pop
jg
ret
mov
push
ljmp
cwtl
sarl
add
mov
arpl
aad
shrl
popf
adc
mov
sbb
test
push
sub
in
in
hlt
adc
jg
cld
arpl
jne
fadds
inc
mov
cmp
xor
pop
xchg
push
jmp
add
or
sbb
mov
or
jno
mov
shr
pop
int3
movsl
mov
arpl
add
mov
mov
inc
ljmp
aam
xor
decb
test
aas
inc
out
xchg
jge
inc
ret
xor
cmp
arpl
lods
and
push
add
push
out
aas
push
or
test
push
cmp
dec
sub
loop
push
fcoml
mov
arpl
lret
rcrl
push
inc
out
jae
jne
fbstp
and
ss
arpl
xor
inc
outsb
std
jbe
dec
mov
pop
pop
sarl
mov
jb
daa
mov
adc
call
push
sbb
sub
push
jle
inc
call
adc
sbb
pop
mov
fs
or
inc
adcb
cli
repz
push
pop
jg
setg
jnp
inc
repnz
out
xor
mov
int
pop
mov
xchg
pmullw
ret
jns
sar
stos
xchg
xor
mov
inc
insl
push
addr16
push
cli
pusha
ret
movsl
pop
aas
js
mov
and
dec
mov
enter
pop
out
adc
mov
mov
fimull
dec
shl
mov
scas
xchg
cmc
cmp
int3
leave
xchg
sbb
push
scas
push
jns
cmp
sbb
adc
mov
nop
mov
roll
cmp
scas
notl
mov
add
push
lock
aaa
fdivr
xchg
inc
inc
popf
test
test
cmpsb
lods
xchg
mov
out
mov
je
push
xchg
inc
fistpll
lods
fldenv
stc
and
ds
mov
xchg
arpl
imul
aas
rclb
xlat
jmp
mov
fcmovu
push
add
mov
pop
popf
lea
and
dec
dec
add
jmp
nop
popf
iret
inc
jbe
aad
push
or
subl
pop
cmpb
ret
cmc
jl
cmp
stos
sti
out
ret
lret
aam
jnp
mov
inc
and
das
into
dec
lock
push
sbb
xchg
mov
dec
cmp
pushf
popf
mov
in
push
mov
push
inc
xor
mov
imul
jl
rcrl
jo
test
mov
push
cltd
mov
sub
js
xchg
mov
cltd
push
mov
dec
mov
push
dec
les
aas
mov
orl
cmc
push
lock
in
std
xor
insb
jg
scas
in
enter
mov
imul
xor
rorb
movsl
not
xchg
pop
pop
pop
je
sbb
adc
cmpsb
jg
shl
adc
push
clc
adc
fistpl
mov
out
movsl
mov
pusha
mov
fsubrs
cmp
call
loopne
hlt
push
mov
and
fmulp
xor
daa
jnp
jbe
popa
push
ficoms
lods
dec
dec
lahf
mov
push
test
push
aaa
nop
push
and
ret
daa
xchg
repz
cld
xchg
cmpsb
adc
ss
or
std
scas
fadd
inc
int3
and
decl
xchg
push
adc
divps
dec
popf
movsb
jo
jns
push
shl
or
sub
jo
pop
xlat
fdivrl
test
fimuls
insl
mov
dec
clc
inc
or
movsb
in
dec
mov
mov
jge
push
xchg
inc
ret
icebp
push
jge
lds
mov
fistpl
lods
push
mov
dec
mov
sub
push
inc
adc
jl
inc
sahf
or
hlt
mov
xor
or
jne
adc
push
add
fnstenv
mov
movsl
sub
popa
sub
call
push
xchg
adc
jmp
pop
push
mov
fdivrl
ds
sti
repnz
cld
xlat
jnp
cmpsb
xor
sbb
test
sbb
aaa
ja
fwait
lods
popf
mov
pop
dec
stos
pop
pop
movsb
add
inc
sahf
pop
insb
dec
mov
inc
ficoml
mov
mov
push
mov
imul
cmc
mov
jmp
dec
aam
mov
pop
inc
or
movsb
mov
sahf
xlat
shrb
sbbl
sbb
pavgb
cmp
xor
outsb
jmp
jle
mov
ss
insl
xchg
mov
je
jmp
sbb
jo
fprem1
pop
lret
mov
dec
imul
int3
fcompl
add
pop
mov
data16
pop
mov
xor
popa
push
lcall
fwait
test
push
ffree
jge
push
xchg
xchg
push
fwait
adc
mov
icebp
mov
sbb
add
pusha
xchg
shl
scas
repnz
jp
rcrl
mov
mov
mov
jp
jne
rcll
dec
sbb
scas
shll
ds
shrl
push
popa
adc
or
pop
push
popf
inc
sub
data16
fnsave
mov
push
or
sbb
adc
ret
cld
cmpsb
lods
icebp
push
inc
enter
xchg
lret
cmp
cmp
push
xor
fcmovnb
lahf
cltd
add
xor
pop
rclb
push
jl
sbb
jae
push
add
cmp
fcmovnu
xorb
popf
push
in
nop
mov
filds
jge
mov
int
outsl
clc
push
pop
jl
inc
dec
repnz
xor
pop
xchg
les
mov
pop
outsb
add
xor
jge
aaa
fwait
xor
cwtl
or
aad
pop
mov
sbb
lds
rcr
test
int3
fisttps
popa
int3
or
pop
outsl
bnd
push
jmp
pop
adc
pop
fs
inc
fnstcw
add
inc
fsubrl
cmp
push
lret
xchg
gs
sarl
add
inc
filds
mov
imul
gs
nop
mov
sahf
push
sub
data16
repz
sahf
or
push
mov
jp
jmp
inc
xchg
inc
ret
or
sbb
jle
or
pop
pop
negl
fsubrs
rclb
shl
fnstsw
cmp
repz
shrl
sbb
das
inc
fildl
xchg
ljmp
fisttpll
mov
icebp
push
sub
inc
pop
arpl
mov
adcb
movsl
hlt
orl
cmpsb
aad
bound
jbe
cli
mov
dec
xor
ljmp
gs
imul
mov
rcll
sub
sbb
icebp
mov
ss
adc
add
jle
cmc
sub
shll
inc
pop
rcr
or
xchg
subl
add
fadd
test
inc
mov
int
mov
arpl
pop
pop
scas
js
push
out
jno
testb
lcall
pop
test
inc
notb
loope
leave
add
scas
sahf
lods
or
sbb
ret
xor
sub
inc
dec
mov
or
shll
lods
jne
jnp
insb
lcall
js
adc
mov
fdivr
jle
mov
fcos
in
idivb
addb
mov
sub
into
dec
push
cmpsl
pop
in
fcomp
push
repz
ds
out
aad
push
jge
in
scas
je
mov
push
dec
adc
pushf
sar
mov
push
mov
or
xchg
cmpsb
into
jnp
mov
pop
mov
push
shlb
gs
cmp
sub
rol
fmuls
lods
scas
mov
test
out
xor
fidivrl
sbb
insb
push
mov
pop
add
or
cmc
loopne
jp
xchg
or
add
ljmp
jne
xor
or
in
les
inc
push
push
push
inc
shll
xchg
sbb
sub
mov
and
jge
fwait
mov
mov
xor
fsubr
shlb
in
cltd
and
das
and
ljmp
test
popf
mov
xor
out
imul
jl
push
sub
push
movsl
insl
shl
push
outsl
inc
gs
int3
scas
call
addr16
xchg
repnz
sbb
idivb
and
jge
jae
adc
inc
iret
jmp
push
or
arpl
cmova
cmp
pop
dec
idivl
push
inc
and
fsubr
movsl
orl
mov
add
jb
cmp
das
test
jp
push
sub
adc
inc
inc
mov
shl
movsb
stos
in
sbb
orl
sub
jne
lods
adc
jecxz
movsl
aad
movsb
adc
sub
add
cmpsl
and
pop
pop
push
mov
scas
clc
test
iret
movsl
push
pusha
jne
pop
mov
sbb
outsl
xchg
fstl
mov
sub
lods
push
ljmp
movsl
rcrb
push
xchg
lcall
add
gs
fildl
ja
adc
out
jle
pcmpgtb
add
sub
mov
sub
jecxz
inc
hlt
aas
sbb
sub
sub
lcall
pusha
js
rorl
dec
aam
cmp
mov
mov
push
add
xor
jno
outsl
dec
cmpsl
jb
inc
add
adc
addb
out
rcll
aam
pop
ljmp
das
sub
xchg
pop
dec
lahf
stos
loopne
sub
popa
or
push
push
movups
ss
fidivl
fwait
div
xor
xchg
mov
push
sbb
mov
shlb
inc
push
fmul
sub
fsubrl
inc
movhlps
fnstsw
sbb
pusha
aad
xchg
cmpsb
imul
pop
mov
dec
mov
push
sub
jge
fstl
mov
mov
shl
mov
mov
cmpsb
inc
or
push
pop
data16
clc
push
mov
out
incb
mov
xchg
movsb
mov
dec
sub
mov
inc
xchg
pop
and
cwtl
mov
test
repnz
pop
or
addl
xor
sub
clc
lcall
imul
inc
rolb
ss
adc
cmp
jbe
mov
pop
jge
sbb
dec
hlt
ds
sub
shl
xchg
mov
mov
mov
xor
push
xchg
lods
nopl
je
sub
fildll
adc
adc
decl
je
je
int
mov
mov
orl
es
sub
push
sbb
ds
popf
xchg
push
clc
jae
mov
lret
mov
lahf
sbb
std
repnz
cmp
or
xor
xor
rcr
jl
or
jl
lea
push
inc
mov
mov
loop
mov
test
push
lock
ds
test
mov
xor
nop
inc
popf
dec
dec
mov
ret
xchg
imul
scas
mov
popf
mov
lods
add
rorl
mov
lods
sub
cmpsb
fldcw
add
xchg
xchg
push
mull
xchg
dec
stos
sub
pop
mov
shll
test
sbb
aaa
shll
idivl
testl
pop
mov
and
dec
mov
popf
mov
cmp
ljmp
xor
test
imul
fistpll
sbb
sbb
test
mov
das
xor
push
sbb
mov
adc
scas
cmp
mov
lods
adc
fsubrl
add
test
or
cmpb
call
clc
outsl
push
addr16
pop
sbb
movsb
pusha
sti
imul
or
xchg
jo
sbb
or
mov
push
into
push
jl
mov
in
push
push
aas
lahf
dec
test
mov
cmp
jae
loop
push
andb
xchg
sub
mov
fidivl
pop
jb
lds
sub
or
bound
outsl
cld
or
mov
fildll
add
add
lock
lret
pushf
and
shll
jnp
mov
mov
ret
out
xchg
inc
mov
lret
add
test
add
push
mov
push
test
fldpi
cmp
stos
push
pop
lea
xlat
mov
push
mov
jle
xlat
jae
sbb
mov
jns
dec
out
add
push
rorl
xor
or
mov
xor
sub
push
mov
push
in
xor
push
sub
xlat
cmp
jmp
stos
xchg
push
les
mov
jp
ljmp
movsl
notl
inc
aas
pusha
pop
inc
sub
fs
xlat
dec
cmp
sbb
lcall
jne
pop
loope
push
cmp
aaa
add
sbb
dec
imul
and
push
movsb
call
fiaddl
mov
icebp
loop
and
lret
mov
jmp
push
sbb
jle
mov
pop
iret
leave
xchg
loope
loop
sarb
pop
out
push
mov
sbb
aas
lods
outsb
test
push
data16
cmp
popa
rolb
nop
mov
loop
in
rol
mov
mov
outsl
mov
fcmovnbe
clc
inc
into
aad
les
push
mov
rcrb
sub
add
xorb
pop
bound
lods
enter
notb
add
js
loopne
rolb
mov
cmpl
jp
repnz
clc
push
leave
popa
adc
mov
call
mov
mov
xor
scas
bound
adc
scas
dec
add
cwtl
jno
push
adc
nop
adc
xchg
mov
and
dec
pop
rclb
xor
push
jecxz
mov
cmpsl
mov
fdivrl
mov
mov
into
mov
testb
outsl
mov
cs
dec
or
lahf
fbstp
dec
lods
int
icebp
xchg
dec
movsb
fnstenv
mov
inc
fs
adc
and
push
add
mov
or
iret
fwait
cld
test
daa
inc
lock
sbb
fcomps
lds
xchg
cmp
inc
mov
lea
adc
jnp
add
pop
push
stc
cmpsl
inc
pushf
outsb
mov
cmpsb
call
test
cs
addr16
push
aam
adc
cmp
cltd
in
pop
stc
clc
lea
jp
cmp
pop
mov
or
xchg
or
dec
sahf
cmp
push
div
lret
or
js
add
inc
push
imul
inc
inc
cmp
add
xor
sub
add
sbb
sbb
test
push
sub
add
fldenv
push
adc
sub
fsts
push
fwait
push
lcall
cmp
sub
jae
and
cmpsl
out
pop
shlb
gs
hlt
jb
xchg
shl
rcrb
loop
fidivrs
dec
test
mov
or
mov
cmc
pop
cmp
int
xchg
mov
ret
and
mov
pop
cwtl
lods
jp
and
mov
mov
gs
lahf
sbb
ret
ds
xor
jl
sbb
mov
xor
je
shll
sub
mov
out
dec
sub
or
imul
push
push
xchg
jne
pop
mov
dec
arpl
sub
inc
testl
jnp
mov
mov
movsl
xor
sti
addr16
xor
loop
mov
pushf
dec
rorl
fistps
ss
pop
es
mov
mov
and
pusha
sbb
out
xchg
pop
fadds
out
jp
lret
shr
test
fs
pop
fwait
mov
cs
mov
pop
jno
stos
or
jbe
cs
pusha
adc
sub
rorb
xor
cwtl
sub
pop
mov
pop
lds
cli
jo
test
stc
std
mov
pop
push
pusha
aad
cmp
add
lds
pusha
xchg
mov
dec
cmpsl
nop
shr
push
hlt
leave
pushl
fcompp
mov
mov
cmp
mov
in
adc
adc
test
inc
aaa
mov
mov
push
aas
xchg
mov
mov
popa
fidivs
mov
cmpsb
push
mov
and
jmp
push
xor
repnz
mov
mov
cmp
fiadds
or
mov
jecxz
into
mov
lea
inc
insb
fwait
add
scas
sbb
sbb
inc
les
xchg
adc
xorb
inc
shrl
xor
lret
and
jp
mov
or
inc
xor
fmull
outsl
mov
xlat
mov
fldenv
xchg
int
xchg
imul
arpl
xor
sbb
pop
ret
enter
mov
add
xor
adc
lret
mov
cmp
pop
clc
mov
push
sbbl
or
pusha
imul
jns
mov
cmp
sub
cs
or
mov
es
mov
cmp
iret
lret
adc
jmp
add
stc
shl
sbb
cwtl
jb
cli
add
ss
push
lahf
loop
aaa
call
mov
lret
sahf
add
movsb
aas
add
jb
cmp
aad
dec
adc
xchg
insl
sub
dec
leave
in
push
push
mov
xchg
push
ror
and
enter
xchg
or
and
xchg
lahf
std
pop
test
or
mov
push
sbb
and
js
repnz
add
inc
ret
jg
cmc
lea
xchg
bound
lret
xchg
xchg
mov
sbb
repz
sahf
jno
mov
pop
pop
arpl
fwait
dec
add
sbb
cltd
sub
pextrw
nop
jbe
xlat
lret
jp
or
test
test
test
mov
mulb
pop
sbb
ja
mov
sub
fldl
and
out
mov
dec
rcrb
mov
inc
push
jp
and
aad
movsb
ja
ds
mov
enter
cmpsl
push
dec
xor
sbb
adc
xchg
ljmp
jge
jl
popa
mov
jmp
push
or
popa
es
lods
fs
and
xchg
repz
stc
add
lcall
jns
cld
test
sub
sysexit
and
sub
icebp
xlat
mov
imul
jl
das
test
sbb
sub
imul
cwtl
dec
clc
and
ror
push
add
mov
test
xchg
adc
decl
scas
mov
push
lock
or
push
les
xchg
stc
push
inc
jo
enter
cltd
push
mov
cmp
jl
mov
sbb
mov
cmovne
dec
clc
mov
outsl
add
push
pop
aam
push
mov
mov
pop
test
leave
mov
pop
into
cmp
lret
loop
cli
sub
dec
push
pop
mov
sbb
and
add
jmp
mov
and
insb
or
mov
roll
pop
jg
negb
mov
pop
adc
sbb
push
dec
in
stos
adc
frstor
and
aad
or
scas
inc
cltd
dec
or
mov
push
fwait
push
xchg
inc
out
mov
add
pop
shll
dec
daa
inc
mov
inc
lea
inc
add
sub
push
stos
push
push
orb
pop
push
int
out
dec
out
je
rcll
jo
inc
rol
cwtl
out
cmp
xlat
pop
fstl
test
test
dec
jo
add
cmp
in
inc
aam
xor
or
push
mov
mov
jns
adc
push
mov
mov
sbb
add
je
and
fmull
pop
loop
cmp
dec
inc
test
ficoml
xchg
dec
movsb
jb
xor
fwait
imul
rclb
lock
sbb
adc
inc
dec
int3
push
sbb
push
pop
sbbl
cmp
inc
pusha
adc
mov
popf
cmpsl
xor
test
xchg
lahf
fidivrl
addps
push
xchg
fmuls
mov
add
daa
pop
add
movsl
mov
clc
loop
pop
out
fldl
lcall
push
pop
mov
icebp
add
pop
addl
adc
mov
mov
dec
mov
xchg
loop
and
daa
cmp
sbb
cmp
mov
sub
jb
mov
mov
fiaddl
sub
repz
and
imul
mov
sub
mov
dec
or
xchg
dec
stc
sbb
jl
ss
cmp
movsl
and
out
sub
push
cld
loop
sbb
mov
add
fnstenv
pop
jge
rorl
push
push
pop
cmp
call
bnd
mov
stos
fstpt
scas
mov
dec
stos
jmp
sbb
lea
dec
jge
xor
jbe
outsb
ret
jmp
cmp
inc
imul
cs
call
mov
dec
xor
shrb
adc
testl
sahf
mov
jae
jecxz
pop
cld
push
cwtl
xchg
out
cwtl
frstor
xorl
or
xchg
iret
outsb
pop
popa
adc
mov
jne
repz
push
leave
rcrl
add
xor
mov
movsl
and
adc
test
inc
adc
adc
pusha
mov
pusha
test
jmp
cltd
mov
jg
xor
repnz
popf
inc
and
sub
insb
adc
imul
dec
jle
outsb
lret
icebp
fnstenv
lds
ja
xchg
adc
cltd
sub
iret
sarb
push
sbb
pop
daa
test
dec
sbb
out
jg
loop
xor
ss
adc
loopne
hlt
clc
push
stos
adc
push
sub
pop
cld
lahf
add
and
xor
mov
jae
or
ss
lea
cmpsl
loope
or
mov
push
mov
sbb
outsl
adc
jl
inc
jb
outsl
sub
in
and
lcall
in
xchg
popl
adc
mov
xchg
out
xchg
out
ret
je
or
lods
cmp
jp
xchg
rcr
loop
dec
push
lea
pop
jecxz
jae
out
sub
sub
lret
repz
pop
or
push
and
pop
mov
btr
push
xchg
xor
or
xchg
xchg
insl
cmpsl
inc
movsb
jg
xchg
dec
inc
inc
adc
int
inc
push
pop
xchg
leave
adc
push
cli
sbb
or
ficoml
jg
mov
mov
and
pop
mov
sub
sarl
ret
hlt
int3
clc
mov
and
adc
fnstsw
hlt
jnp
test
adc
insb
in
or
push
xchg
and
fs
out
cmp
push
ljmp
cs
jg
xor
add
popa
movsb
rcr
add
cmp
or
lcall
test
jb
or
imul
loopne
nop
cmpsb
and
jb
xor
cmpsl
mov
stos
int3
mulb
lret
dec
mov
stc
in
enter
lods
repz
xor
push
lods
pop
cmp
and
pop
push
cwtl
push
mov
mov
fwait
loope
arpl
xor
cmp
push
add
cmpsb
into
sbb
js
cmp
sub
sbb
fidivrs
test
outsl
add
mov
dec
dec
iret
jp
dec
lods
cld
fbld
dec
and
jae
jno
mov
add
out
dec
mov
cmp
aad
pop
and
lret
arpl
mov
push
pop
cmp
push
xor
out
divl
stc
cmp
adc
mov
testl
mov
idivb
aam
xchg
sbb
shlb
scas
js
test
lret
loopne
jp
clc
stos
pop
sbb
mov
int3
scas
aas
into
xchg
push
clc
jmp
outsl
push
les
daa
iret
adc
xlat
test
pop
sbb
and
jle
adc
mov
ret
insb
dec
cmpsb
xchg
mulb
dec
cs
dec
xchg
mov
dec
or
cli
and
mov
fst
push
push
jmp
sbb
mov
lret
shll
int3
jno
gs
pop
pop
out
pop
pop
jno
imul
jnp
neg
add
dec
out
gs
xchg
xlat
in
push
jns
imull
fadd
and
cmpsl
mov
ljmp
sahf
cli
popa
roll
call
mov
imul
test
add
repnz
push
xorb
mov
out
sbb
mov
or
and
rolb
fcoms
fidivs
sub
or
add
inc
dec
sub
inc
jmp
cltd
int3
pop
stc
and
fadd
clc
mov
mov
pop
jae
cmp
push
ja
jnp
mov
in
sti
shl
int3
outsb
imul
int3
mov
nop
outsl
mov
test
ret
ret
pop
ljmp
sbb
divb
enter
mov
push
xor
pop
xor
call
mov
leave
stc
mov
sbb
movsb
fbld
jo
xchg
jmp
pop
mov
add
xlat
mov
dec
add
lret
fistl
adc
cmpsl
push
push
cmp
dec
inc
jp
push
and
adc
mov
jnp
add
outsb
push
add
jne
pop
dec
ret
es
shr
hlt
cli
or
ret
scas
movsb
int
cs
gs
shrb
int3
push
addl
adc
loope
cwtl
xlat
mov
sub
mov
jno
aam
fdivrl
dec
xchg
mov
cmpl
cmp
fisttpl
sub
xchg
mov
pop
push
mov
xchg
cmpsl
loopne
out
add
and
mov
push
push
inc
mov
add
aam
jno
lret
lods
scas
mov
or
mov
in
push
repz
sti
mov
ret
lahf
call
pop
xor
inc
mov
mov
call
shl
enter
mov
add
push
incb
test
xchg
sbb
ret
xor
repz
mov
mov
xchg
and
je
fimull
ds
push
cmp
insl
cmp
sub
cmp
notb
mov
enter
cwtl
fwait
leave
jne
xchg
data16
jb
gs
cltd
xchg
xchg
cmp
jae
mov
cs
cmpsl
sahf
stc
cmp
testl
mov
jo
fsubl
ljmp
lret
mov
jae
sbbl
roll
in
imul
mov
jae
dec
in
fstp
popf
test
mov
push
jne
inc
stos
dec
lock
sbbb
popa
push
inc
add
cs
sbb
mov
push
into
mov
xchg
js
pop
push
push
addb
sahf
and
jecxz
sub
in
mov
adc
stos
mov
jp
sbbl
lret
aam
xchg
sub
and
xor
pusha
in
or
daa
mov
pop
and
push
jp
dec
push
xor
inc
push
xchg
stos
dec
push
pushfw
stos
add
add
sbb
add
ljmp
loope
mov
and
pop
shlb
cwtl
and
dec
cld
and
outsb
jb
pusha
mov
out
or
add
into
idiv
mov
push
test
stos
dec
adc
fstps
add
es
setle
add
rorb
int3
jae
stc
cwtl
pop
add
movl
call
adc
sbb
fistl
cmp
frstor
jbe
jnp
mov
mov
or
pusha
std
mull
sbb
push
jnp
dec
dec
popf
and
retw
or
pop
cld
inc
pushf
imull
adc
pop
push
pop
add
lret
test
inc
xchg
pushf
mov
inc
jnp
loop
lods
and
shll
sti
sub
xchg
mov
cmp
filds
inc
mov
rorb
mov
cmp
popa
imul
adc
sbb
inc
les
fisubs
mov
xor
pop
mov
hlt
jnp
mov
adcb
lcall
xchg
push
dec
out
les
rcrl
lock
push
xchg
loop
xchg
push
pop
cmp
dec
je
jns
pusha
out
mov
sbb
add
sub
jnp,pn
mov
stc
cltd
jle
cmp
mov
cltd
hlt
or
imul
ret
jbe
or
or
js
and
adc
div
xor
fists
repz
int3
jle
loope
sbb
js
aaa
xchg
dec
sbb
mov
sarl
add
lods
push
cwtl
adc
popf
idivb
lret
into
fisttpl
push
jbe
inc
jne
xorl
mov
mov
aaa
adcb
int3
cmp
fcmovnbe
flds
jge
xchg
dec
in
dec
out
insb
jmp
cmc
xchg
movsb
sbb
mov
inc
cmp
sub
mov
mov
mov
cmc
out
push
sbb
inc
fldl
jmp
dec
add
cwtl
add
sbb
xchg
sub
aad
aaa
dec
rcll
fucomip
stc
data16
std
mov
je
xlat
push
mov
loope
out
cmp
cli
or
fistps
push
daa
arpl
or
inc
aas
pop
stc
repz
jb
std
and
mov
movsl
std
fstps
insl
fildll
pushl
popf
dec
pop
hlt
xchg
jb
inc
inc
fs
test
push
addr16
je
push
leave
out
scas
mov
adc
fmull
add
fwait
jbe
xor
jno
cmp
push
inc
mov
mov
in
pop
test
push
loope
xchg
mov
enter
jbe
lds
sub
shlb
mov
mov
lret
das
sub
sub
push
outsl
mov
int3
cmp
push
mov
lret
or
xchg
popa
lcall
mov
or
push
lret
andb
lcall
out
mov
lods
lods
jmp
daa
js
stc
push
cmp
imul
aas
les
lahf
and
mov
inc
inc
cmp
xchg
mov
sbb
test
ror
xor
fwait
ss
sbb
fildll
adcl
or
lret
inc
jp
mov
and
push
roll
and
mov
cmp
inc
mov
adc
lods
inc
imul
int3
repnz
dec
mov
aas
xchg
mov
repnz
ljmp
ret
push
cmp
out
fistps
or
cmp
cmp
daa
mov
sbb
xchg
movsb
test
or
ret
push
mov
dec
lret
stos
push
add
fxam
cmp
xor
mov
cmp
pushf
push
outsl
cltd
and
mov
cli
cmp
iret
jnp
sub
add
xchg
or
adc
das
cmp
or
lret
jae
repz
push
push
imul
xor
popf
into
add
addr16
popf
push
push
add
icebp
cmp
xor
dec
out
fwait
and
lahf
jmp
mov
fbstp
cmpsl
in
sub
pop
or
mov
dec
pop
inc
xlat
cltd
jl
cmp
push
movl
insl
or
out
inc
xchg
pop
mov
jnp
xchg
mov
lds
fdivr
pop
pop
mov
ss
and
imul
add
stos
cwtl
mov
pop
sub
cmp
loope
enter
ss
xor
mov
push
dec
mov
xor
or
xchg
jl
pop
shll
cmp
dec
mov
push
ja
pop
inc
or
lds
in
xor
sbb
dec
sub
into
push
sbb
cmc
and
dec
test
out
push
in
lock
mov
stos
lods
and
aas
inc
es
cltd
pushf
jge
aad
pop
or
cmpb
mov
xor
scas
in
pop
add
scas
mov
mov
loope
sti
adc
in
cmp
and
sub
pop
ficompl
lcall
xor
iret
xor
ficoml
rcll
rcll
imul
jne
sti
jo
aam
fiaddl
xchg
js
add
pop
jo
mov
leave
mov
sub
sub
mov
test
pop
pop
xor
sub
xchg
lock
or
mov
push
bound
addl
lcall
or
push
add
inc
adc
or
lret
lret
outsl
xchg
jne
arpl
lea
mov
movsl
aaa
mov
push
cltd
xor
push
cmp
xor
and
or
into
dec
stos
or
das
dec
jnp
push
dec
cmpsl
push
xchg
push
ds
add
cmp
xchg
in
adcl
test
xchg
in
dec
lret
stc
sub
push
xchg
or
enter
mov
mov
mov
pop
lcall
in
mov
or
or
push
stos
push
rcrl
into
fstps
lea
push
push
inc
pop
push
adc
mov
inc
jae
or
enter
loopne
and
les
xor
xor
movsl
sbb
jb
xor
cs
faddl
add
outsl
sbb
jns
lahf
mov
mov
and
jbe
adc
mov
mov
jbe
orl
lahf
addr16
lahf
in
pushf
loop
sbbb
stos
sub
imul
mov
inc
xor
inc
pop
and
insl
stos
and
stc
shr
pop
lds
ret
dec
dec
mov
xor
dec
jge
imul
sarb
shrl
mull
out
push
or
jl
cmp
fcomps
dec
dec
xlat
test
push
out
jbe
in
xchg
lods
push
pop
sub
cltd
sbb
add
add
out
outsb
sbb
daa
daa
pop
rorl
pop
mov
insl
dec
add
lds
or
imulb
testb
mov
rorl
push
jo
rorl
cmpsb
mov
inc
dec
mov
rclb
sbb
inc
sub
les
aaa
jg
pop
rolb
outsb
les
add
lret
push
mov
mov
adc
fcompl
test
into
xchg
push
pop
xchg
mov
add
inc
add
mov
adc
sbb
and
xchg
xor
dec
cld
les
push
push
sbb
pop
lret
jns
sarb
aaa
jp
ljmp
jnp
fisubrl
mov
add
or
push
hlt
inc
cmp
icebp
inc
into
inc
xor
push
pop
push
out
inc
jnp
into
mov
data16
movsl
decl
in
jns
fdivrp
xor
mov
mov
inc
xor
out
jecxz
cmp
inc
cmpsl
dec
rcrb
push
les
jb
sub
push
pusha
fisubrl
into
insl
sbb
add
jae
pushl
int
xchg
pop
inc
in
mov
sbb
loop
sub
dec
das
movsb
mov
xor
jns
aam
xor
dec
mov
sbb
loop
imul
dec
xor
jmp
dec
mov
movsb
cwtl
aam
cmpsl
fildll
iret
int
cs
sbb
test
stos
movsb
lahf
xchg
mov
xor
jns
ds
add
jns
add
iret
in
roll
jns
testb
and
sub
jecxz
jle
jg
sbb
addl
sub
pop
mov
lods
clc
clc
shll
push
and
mov
mov
mov
pop
cld
xor
aad
scas
sahf
outsl
into
fdivr
cld
loopne
clc
divl
lret
jp
hlt
leave
lock
and
or
dec
stos
stos
jle
push
or
pushf
cltd
cli
sub
repnz
lcall
in
sbb
les
sub
or
sbbb
imul
adc
cmp
shlb
aas
xchg
mov
pop
add
icebp
sbb
sbb
mov
mov
lret
je
test
or
pushf
jns
cmp
push
push
push
inc
mov
addb
daa
insb
das
fwait
aas
nop
sbb
ds
roll
mov
cwtl
sub
aaa
inc
sbb
mov
cwtl
jb
lea
mov
loope
in
sbb
fwait
inc
push
call
dec
jo
cmp
imul
dec
mov
mov
jbe
cmpl
leave
filds
pop
dec
cs
xor
sahf
pop
and
insl
stos
mov
adc
adc
aas
mov
pushf
jle
mov
adc
fincstp
sbb
aaa
das
xor
inc
push
jns
push
scas
nop
testb
int
shlb
lret
test
jae
xchg
dec
lds
cwtl
sarl
cmc
decl
and
fisttpl
nop
jns
pop
cmp
inc
fsubl
insb
arpl
test
and
fcmove
xchg
dec
lret
add
into
mov
add
pop
popf
shl
out
lcall
mov
aaa
mov
rclb
cmp
ds
cmp
adc
pop
jmp
enter
std
popa
shlb
mov
mov
dec
dec
iret
scas
mov
jo
mov
mov
sbb
test
aas
ret
sbb
pop
add
shl
push
out
dec
aam
dec
outsl
pop
adc
jno
mov
cs
popf
leave
in
or
dec
les
adc
mov
xchg
idivb
mov
test
mov
out
rcrb
stc
pop
inc
imul
sub
push
fs
je
push
ret
movsl
out
into
outsl
in
sbb
push
pop
jge
pop
sub
rcrl
mov
rcll
mov
dec
jno
push
addl
enter
sbb
inc
sbb
les
out
adc
fbld
movsl
mov
stos
cmp
ret
add
inc
test
push
lods
cmpsb
outsl
adc
mov
jbe
adc
inc
decl
test
pop
ror
sub
cld
mov
dec
fcmovu
mov
mov
mov
fldl
inc
fwait
push
sub
flds
pop
xlat
aam
jp
jl
and
lahf
cmpsb
jae
sbb
add
dec
loop
es
or
fistps
int3
outsb
cmp
test
mov
addb
adcl
mov
push
cmp
rcl
or
jno
push
jnp
lcall
hlt
push
stc
js
mov
push
add
ficoms
jmp
fistpll
dec
mov
dec
imul
out
pop
mov
insb
sbb
mov
rcl
inc
xorb
jno
cltd
lahf
in
into
cs
mov
xchg
jae
mov
sub
push
cmp
dec
sbb
in
mov
xor
test
test
cmc
sub
push
jp
call
push
sbb
jle
loopne
and
inc
xchg
dec
imul
mov
out
int3
sbb
jae
jbe
xchg
mov
scas
pop
in
sub
push
mov
div
in
mov
stos
adc
and
sbb
aad
shr
mov
pop
mov
movsl
mov
cs
xor
lods
fstl
inc
mov
bound
and
inc
add
daa
stos
xchg
or
out
mull
mov
xor
nop
aam
das
lods
pop
cmpsl
mov
std
mov
inc
and
xchg
and
and
aas
sbb
lds
addr16
dec
add
mov
pop
sub
and
add
mov
push
movsb
add
inc
adc
xchg
lret
les
loop
xchg
vaddss
ret
stos
aad
or
ljmp
fsub
es
fldlg2
push
jl
adc
add
fwait
sahf
add
aaa
xchg
imul
jb
shrl
fnstcw
enter
repz
insl
push
fisubrs
xchg
push
xor
cmp
repz
test
cld
imul
lods
fimuls
dec
jbe
imul
out
cmc
adc
out
dec
adc
or
jno
push
mov
stc
loop
insl
rclb
jae
xchg
ds
aaa
inc
cmp
xchg
ss
cmp
add
icebp
and
mov
clc
mov
and
lahf
jno
subb
and
mov
std
in
je
imul
in
add
cmc
fwait
int
jae
dec
in
sub
add
and
xor
mov
sub
adc
mov
movsl
fld
and
mov
xor
hlt
clc
cmp
jns
fucomp
jnp
sub
popl
enter
cmp
dec
push
outsl
cmp
fidivrs
add
call
mov
mov
sbb
mov
dec
adc
loop
add
cmc
in
pop
ds
xchg
or
xor
mov
cmp
pop
orl
fldl
dec
pop
mov
rol
mov
mov
lds
inc
je
adc
stos
aaa
and
mov
scas
push
mov
lcall
arpl
hlt
xchg
dec
push
inc
sbb
js
cmpb
adc
repnz
ja
ss
adc
cmp
jno
cmp
fs
nop
fcomps
dec
cmp
xor
mov
xor
je
test
inc
insb
imul
pop
cmp
jnp
in
jle
xchg
mov
lods
inc
mov
imul
test
push
xchg
pop
es
mov
lods
xorb
lock
test
je
lcall
sub
sub
jp
popf
cmp
movsl
out
jne
bound
adc
cmpsl
les
pop
push
imul
mov
xor
jb
repz
lret
fcoms
jae
push
adc
pusha
lret
lock
dec
fisttps
pop
popf
lock
and
mov
mov
daa
xor
push
stos
inc
movsl
sub
jne
dec
rclb
outsl
mov
stos
leave
jp
mov
xchg
repnz
lret
sub
insl
rcll
sub
insl
pop
push
cmp
jnp
jae
jmp
out
push
xchg
fidivl
mov
andl
addr16
and
and
xor
mov
pop
test
and
dec
clc
inc
mov
and
push
add
cs
mov
mov
mov
ds
es
out
jns
enter
sbb
mov
xchg
outsl
jnp
mov
pop
mov
xor
jae
mov
pop
les
jle
cmp
push
je
ret
pop
add
ds
fwait
xor
push
imulb
xchg
jmp
mov
inc
inc
leave
add
jge
mov
sbb
repz
add
mov
xchg
push
adc
add
pop
mov
sub
mov
pushf
dec
pop
cmp
pop
sbb
jge
sub
sbb
data16
shrl
leave
and
and
lcall
cltd
mov
imul
or
mov
jns
loop
mov
jle
mov
cmp
sub
cld
add
test
pop
jns
or
sub
or
adc
int3
mov
jge
add
cli
mov
test
leave
sarl
sbb
sbb
rcrb
mov
test
xchg
push
and
push
jno
jp
loope
bound
out
mov
dec
leave
push
neg
mov
popf
lock
pop
sbb
sub
inc
into
mov
mov
jle
jl
fldenv
sub
std
fwait
lds
mov
or
jno
out
out
or
idivb
clc
int3
scas
push
negl
pop
adc
push
adc
cmp
push
mov
ljmp
lret
sbb
ljmp
in
inc
adc
test
scas
testl
mov
mov
push
xor
int3
mulb
sub
sbb
lea
iret
aaa
lret
ds
mov
icebp
cmpsb
mov
icebp
subl
mov
or
dec
sub
rolb
xchg
test
fs
js
add
and
or
mov
sbb
loope
mov
mov
jbe
aaa
rclb
enter
sahf
fdivl
push
cmp
mov
sub
ljmp
pop
lods
imul
push
mov
xlat
cmp
loope
das
mulb
gs
out
xor
and
in
ret
push
sbb
movsb
rcrl
jg
rolb
insb
mov
mov
gs
cld
dec
lea
insl
sub
in
loop
jns
sub
imul
mov
dec
or
add
lock
test
pop
ja
push
orb
cmp
add
mov
out
jmp
jae
ljmp
push
and
cmp
xor
fwait
pop
loope
mov
js
sbb
cmp
fwait
jnp
add
leave
inc
pushf
jle
adc
inc
movl
jns
ds
clc
sti
jl
scas
fstl
mov
cld
es
jns
or
scas
xchg
fistpll
push
pop
nop
rolb
shrl
sarb
mov
jae
data16
or
jne
pop
dec
repnz
insb
cmpsb
xlat
xor
pop
jge
sbb
fmuls
movsb
adc
cmp
push
push
adc
popa
inc
jp
mov
xor
int
jb
mov
sahf
icebp
mov
outsl
jge
enter
pop
lods
lret
inc
enter
mov
stos
shrl
push
repnz
mov
push
pop
push
andb
cmp
outsl
js
je
push
pop
pushf
xor
rorb
movsb
sub
into
cli
mov
jecxz
pop
push
xor
pop
outsl
addb
das
mov
test
lahf
jecxz
or
inc
jle
orb
push
sub
jns
dec
ss
test
dec
lret
xchg
mov
mov
sub
loop
cmpb
aas
shrl
jbe
sahf
pop
jecxz
js
pop
inc
in
dec
inc
popf
andb
push
xchg
out
ja
addb
ret
lock
jl
cs
ficompl
movsl
int3
inc
pop
jnp
bound
add
lcall
repz
push
hlt
das
xchg
stc
mov
mov
rcll
or
mov
adc
scas
ret
mov
ds
xor
or
inc
and
pop
lahf
xchg
jo
repnz
push
cmp
pushf
sbb
push
sbb
or
pop
mov
pop
in
insb
ret
sub
fwait
adc
iret
push
sub
mov
pop
movsl
dec
pop
sub
movsl
subl
pop
stos
inc
int
scas
in
ret
xor
cwtl
mov
xor
inc
xor
arpl
outsl
in
int
inc
mov
pusha
ljmp
out
lds
adc
pop
xor
jne
jno
push
push
mov
lods
pop
mov
repnz
addb
testb
test
das
xchg
das
in
sub
xor
cmp
dec
loopne
inc
pushf
notb
jecxz
inc
lcall
sbb
xlat
jle
dec
cs
loopne
popf
dec
xor
mov
shll
ss
mov
clc
repz
call
and
std
mov
pop
es
mulps
jecxz
xchg
add
mov
mov
std
rcl
mov
inc
cltd
or
imul
inc
outsl
rcll
sub
out
cmp
loop
mov
sub
nop
sub
sbb
sbb
jge
mov
orb
aaa
and
mov
mov
push
fldl
cmp
in
cmp
popf
pop
sub
lret
clc
in
stc
push
dec
outsl
add
or
iret
ret
and
fsts
enter
icebp
test
hlt
jecxz
sarb
or
inc
xor
andb
push
mov
addr16
mov
jge
and
cmpsl
sbb
and
ret
in
mov
cmp
xor
pop
pop
aam
sbb
scas
and
pusha
sbb
inc
mov
aas
or
add
lahf
movsl
cli
and
cmp
ja
mov
add
mov
sti
das
dec
sbb
ret
jmp
mov
das
push
adc
jae
sub
push
shl
repz
push
mov
out
in
call
pop
insb
push
mov
add
push
repz
pop
mov
das
adc
adc
roll
add
jg
adc
lods
mov
xchg
repnz
pushf
out
call
add
cmp
ret
xchg
out
mov
pop
add
enter
add
jo
sub
enter
and
movsb
and
mov
adc
xlat
pop
adc
shll
sbb
loope
shr
and
mov
in
dec
cmp
je
sbb
pop
loop
xlat
or
into
mov
dec
cmc
adc
sbb
inc
jne
dec
int3
inc
mov
mov
inc
or
or
aaa
lcall
jb
mov
in
mov
imul
test
aad
lret
and
dec
movsb
and
pop
aad
icebp
fs
xor
cmc
mov
mov
lock
dec
push
fcoml
push
xchg
rcl
imul
fwait
pusha
je
popa
psraw
stos
notl
push
xchg
ret
int3
mov
xor
fisttpll
push
nop
rclb
in
sahf
mov
push
jno
mov
loop
mulb
je
sahf
rol
loope
cs
std
lret
rep
mov
push
popf
mov
cmpsl
int3
cmp
push
ds
mov
nop
mov
insl
adc
call
jmp
mov
loope
ret
push
jbe
shl
movsl
push
repz
jno
and
adc
jbe
mov
subl
testl
add
ds
or
mov
aad
dec
push
jnp
lcall
or
shlb
scas
fs
jecxz
call
sbb
arpl
jl
arpl
int3
mov
and
sarb
ficoml
xchg
and
xchg
and
dec
mov
jle
push
cmpsb
fsqrt
sti
cmp
cs
pushf
fldl2t
leave
mov
inc
xchg
outsl
insl
sub
test
xorl
sub
test
mov
jp
lea
mov
int
pop
and
negb
fs
out
rep
adc
lods
into
neg
andb
push
gs
mov
pop
mov
pop
std
jecxz
ret
mov
out
and
fsubs
addl
aad
sub
cmpsl
mov
or
fstpl
test
push
sub
movsl
cld
aaa
inc
sub
mov
pop
and
mov
jae
std
dec
int
iret
stos
sub
mov
lods
test
pop
dec
push
sbb
out
ljmp
inc
pop
sub
fnstsw
pop
mov
ds
jmp
movsb
inc
cmp
mov
inc
aad
xchg
mov
enter
in
es
xor
or
in
pop
cmp
push
aam
pop
add
cmp
jl
mov
fcom
push
inc
push
ljmp
lea
or
adc
inc
push
push
cmpb
pop
or
cmp
test
loopne
fnstcw
das
lods
loop
lahf
mov
dec
icebp
lods
call
aaa
jmp
icebp
outsb
pusha
xchg
fisubs
stc
inc
adc
in
bound
xor
add
out
fcomps
xchg
ljmp
and
lods
push
xchg
aad
push
cmpsl
adc
cmp
adc
add
mov
dec
xor
movsb
sub
adc
shrl
icebp
lds
push
imul
jp
xchg
or
shrl
add
push
jge
dec
sbb
pop
xchg
dec
aad
jecxz
dec
in
push
or
xor
mov
pop
test
in
jne
lock
lods
adc
mov
sbb
sub
enter
flds
lods
push
and
addr16
xchg
in
mov
dec
les
out
test
sbb
pushf
pop
cli
shrl
das
push
fwait
mull
sub
std
pop
jno
inc
cwtl
or
imul
rcll
adc
sbb
and
add
mov
xchg
testl
jbe
cmp
neg
fcmove
xor
movsb
ret
add
jns
das
add
add
mov
les
subl
cmpl
dec
inc
cmp
in
rcr
repz
sbb
nop
into
lea
pop
popa
mov
ret
pop
out
std
into
sub
lcall
mov
sbb
jne
ret
add
mov
jecxz
call
xchg
fcomps
les
cmp
sub
loop
outsb
or
jno
out
adc
adc
div
cmp
jns
pop
adc
lock
test
push
hlt
mov
xchg
jl
or
out
sbb
xchg
daa
mov
shrb
imul
ss
inc
jns
mov
xor
fwait
imul
ss
xchg
lret
xchg
pop
adc
cmp
in
gs
inc
ja
das
xchg
bnd
or
popa
adc
and
je
add
pop
push
bound
add
jno
imul
repz
mov
pop
adc
aam
clc
sbb
and
sbb
dec
add
sub
jnp
fsts
test
scas
dec
rcr
imul
das
test
sbb
jne
lcall
adc
xchg
dec
jmp
test
rorb
dec
rorb
dec
push
lahf
cmp
jg
xchg
and
fisubrl
dec
out
out
push
mov
hlt
mov
aam
sti
fwait
xchg
xorl
pop
mov
lret
jmp
repnz
scas
add
loope
aaa
pop
jb
and
or
movsb
mov
mov
daa
pop
push
nop
xchg
inc
push
pop
xor
push
leave
jl
out
and
pop
jmp
insb
inc
roll
mov
cmp
les
sbb
push
or
mov
xchg
jge
icebp
xchg
sarl
call
add
adc
test
ljmp
fwait
dec
in
idivb
rcl
push
sahf
pop
outsl
in
lahf
cwtl
cld
jne
inc
sub
cmp
inc
shlb
jno
mov
jecxz
adc
push
cmp
push
pop
ja
cs
xlat
loope
jae
and
bound
insl
inc
lret
mov
mov
jbe
insb
and
inc
mov
cwtl
mov
call
lds
or
repz
in
movd
sarb
loope
adc
xor
xchg
add
sub
and
or
test
mov
push
shlb
sbb
mov
pop
lret
andb
lock
jns
out
jecxz
imul
js
fists
loopne
iret
add
push
loope
and
push
call
ds
inc
cmpsl
adc
xor
out
lods
mul
scas
xor
out
sub
and
and
push
and
or
aaa
test
mov
aaa
pop
mov
mov
rcrl
pop
pop
push
data16
aaa
xchg
ret
cmp
xor
pop
pop
lods
pop
idivw
mov
cld
ret
push
push
cmp
mov
int
and
ss
xchg
mov
pop
idivb
sub
int
in
movsl
xor
ja
mov
inc
add
mov
sbb
xor
shrb
sub
add
xchg
rcrl
sahf
sub
out
lock
xlat
loop
addr16
fwait
fwait
icebp
adc
cmp
add
and
mov
aam
adc
xor
rep
scas
or
xchg
or
jl
cmp
dec
movsl
jge
push
in
push
enter
popa
sti
icebp
clc
sub
push
push
add
test
call
adcb
xchg
leave
in
fisttpll
cld
stc
psllq
mov
testb
ljmp
lock
andb
jns
adc
push
xchg
mov
test
dec
orb
xchg
rcrl
jle
idivl
adc
and
xchg
les
push
xor
sbb
push
sbb
sub
jns
push
ljmp
mov
sub
inc
insb
dec
gs
stos
and
int
dec
pop
inc
out
rcll
xor
adc
dec
stos
pop
add
push
loop
jo
lock
int
push
sbb
cmp
stos
xchg
add
not
jb
cmc
rcr
lcall
imul
sub
push
ja
adc
push
addr16
dec
xchg
or
lock
sub
test
dec
hlt
dec
inc
mov
int3
cmp
inc
inc
shlb
fstps
push
pop
test
mov
adc
cli
cld
push
pop
mov
scas
mov
js
mov
inc
dec
test
loope
aam
mov
jb
out
jne
sti
cwtl
cld
mov
mov
xchg
cs
xchg
add
pop
jle
cmc
and
mov
cli
mov
and
xchg
test
js
adc
enter
lock
fmuls
push
shll
mov
or
cmp
and
les
ljmp
hlt
outsb
insb
jno
in
inc
mov
fisttps
lret
lret
or
mov
jl
push
cmp
jae
imul
dec
call
mov
aad
je
fs
mov
rcrb
aas
lods
pop
mov
inc
jae
mov
mov
cmp
popf
aam
jmp
mov
dec
mov
in
clc
mov
inc
xchg
adc
pop
xor
popa
sub
ror
sbb
adc
iret
rorl
insl
push
cmpsb
mov
rclb
iret
and
jb
xor
jg
and
xlat
pop
dec
jp
aaa
mov
hlt
xor
dec
pop
xchg
mov
loop
outsl
xchg
adc
inc
cmp
outsb
movb
mov
jp
push
mov
lds
ja
jae
push
sub
popf
xchg
cmp
dec
jno
sub
or
ss
nop
mov
cmp
fwait
scas
mov
inc
and
repnz
incl
call
inc
or
les
jne
cmpsl
add
add
jmp
rclb
inc
sbb
dec
out
lea
pop
fbstp
sbb
sarb
enter
cli
or
push
sbb
add
inc
jbe
mov
push
jbe
repz
pop
push
inc
fs
mov
adc
inc
daa
or
and
movsl
adc
dec
out
in
cmpsb
fwait
out
push
cmpb
lahf
mov
push
ret
or
rcll
je
or
xchg
lahf
cmp
hlt
adc
mov
cmp
lds
adc
jmp
pop
cmp
lods
fsubl
xchg
into
fmull
xor
jmp
xor
movsl
xchg
bound
jno
shr
scas
ljmp
sub
push
sahf
je
mov
sub
xor
xor
pop
cwtl
inc
add
std
mov
xorl
xchg
xchg
push
cmp
and
adc
pop
std
fimull
jge
or
inc
je
fiadds
sub
ficompl
xchg
lcall
daa
mov
cmp
test
dec
mov
xor
popf
loope,pn
les
push
sbb
mov
sub
in
fsubl
test
mov
jne,pt
ffreep
dec
inc
mov
pop
dec
aas
jle
sbb
inc
mov
xor
adc
adc
imul
lea
jg,pn
pop
int3
mov
pop
sub
add
xor
andl
hlt
icebp
fsubrl
jecxz
mov
aad
out
push
loope
jb
sub
sub
push
pop
mov
adc
rdmsr
cltd
dec
pusha
add
sbb
and
lods
inc
cmp
cmpl
movsl
movl
fs
insl
push
leave
sbb
gs
mov
mov
pop
inc
orb
jmp
lcall
loope
les
arpl
xchg
push
test
pop
jb
movsb
adc
in
iret
lods
push
sbb
daa
jnp
jge
adc
loope
jo
dec
push
imul
stos
repnz
xchg
mov
or
out
jno
mov
sbb
jmp
frstor
mov
shll
adc
ss
lea
adc
es
add
jb
ret
cmp
jno
adc
movsl
dec
sub
icebp
filds
aaa
shll
cmp
or
mov
in
adc
lods
dec
push
jmp
mov
cmp
pop
push
add
push
jnp
decl
xchg
loopne
inc
jns
mov
xor
outsb
pop
mov
hlt
aam
test
pop
jg
mov
fldenv
rolb
pushf
cmp
add
lods
lods
xchg
outsl
das
inc
and
pop
jb
add
iret
ljmp
pushf
push
daa
jg
inc
push
lods
out
jl
cwtl
xor
test
mov
gs
scas
sub
jbe
mov
imul
loopne
shll
mov
aam
shll
movsl
aaa
stc
call
stos
cwtl
mov
call
mov
pop
pusha
jg
js
jp
call
lahf
shlb
mov
sbb
jno
jb
dec
dec
ret
and
jbe
fimull
loop
ficoml
jne
lods
push
mov
cmp
mov
inc
mov
popa
sar
mov
out
and
or
inc
xchg
add
cmc
sbb
mov
and
lret
mov
loop
scas
sbb
pop
xor
sbb
jnp
mov
xchg
ljmp
fidivrs
int
fsub
pop
jns
add
cmc
ljmp
pop
fcoml
jmp
fcomps
into
pop
push
xchg
inc
dec
push
adc
pop
loope
adc
pop
addr16
lock
stc
jne
dec
jbe
cmpsl
pop
jg
mov
dec
or
dec
testl
lea
xchg
gs
push
and
jp
push
xchg
dec
cli
shl
loop
ficoms
scas
mov
xor
xchg
nop
jbe
fidivs
mov
aaa
gs
dec
add
mov
aad
in
jne
xchg
icebp
arpl
xchg
adc
xor
ljmp
and
fcmovne
jb
lods
pop
fadds
jge
lcall
js
call
jb
scas
icebp
lret
push
iret
lods
repz
rcrl
fsubl
dec
add
pusha
outsb
push
or
addl
or
pop
jne
push
mov
daa
push
inc
jmp
sbb
hlt
push
xor
or
jno
int3
xor
cmova
sub
or
stos
sub
xor
jae
out
ret
pusha
or
mov
lods
loop
cmc
pop
loopne
adc
push
popf
dec
call
mov
xchg
aad
dec
pushf
jnp
jecxz
cmp
dec
xchg
add
fs
cld
sar
mov
cmpl
mov
cmp
daa
cmp
mov
movsb
sub
sbb
mov
idivl
lahf
lods
ja
int
sub
ret
xlat
push
ljmp
sbb
les
jge
cmp
stos
test
test
enter
push
push
mov
ljmp
jecxz
fisubs
mov
arpl
das
aas
mov
mov
in
fisttpll
xor
xchg
and
xor
outsb
pushf
sbbl
sbb
inc
push
int
in
xor
clc
pop
mov
mov
add
pop
sub
xchg
cld
sub
in
push
ffree
les
fistps
or
out
dec
jae
popa
mov
xor
lret
add
and
flds
cmp
fldcw
fiadds
adc
dec
mov
inc
or
push
dec
in
jle
jns
adc
shlb
fstp
and
or
popf
adc
cmp
xor
aas
fimull
or
sub
js
in
add
outsb
mov
in
xor
pushf
movsb
adc
outsb
rorb
imul
outsb
or
pop
jle
lcall
in
push
rcrl
aam
sbb
sahf
or
xor
jp
mov
in
movsb
jbe
les
jg
sbb
daa
xchg
in
push
dec
insb
icebp
xchg
lret
pop
sbb
jl
pop
push
out
pop
lock
lea
push
nop
popl
add
mov
lds
or
sbb
out
pop
ret
adc
adcb
and
mov
adc
mov
push
mov
xor
pop
pop
mov
cmp
hlt
mov
cmpsl
xchg
push
push
xchg
xor
dec
dec
cmpsb
insl
fcomi
push
xor
xchg
mov
movsb
sub
imul
lcall
lret
iret
sub
jge
mov
inc
ret
pop
int
mov
sbb
jmp
sbb
push
push
push
pop
out
in
daa
pop
int
xlat
lds
dec
rcrb
push
add
leave
data16
repz
call
dec
out
cmp
scas
out
mov
test
into
lret
adc
clc
adc
pusha
je
dec
loopne
in
setle
jb
pop
fs
inc
std
cmp
sbb
xchg
jecxz
push
jns
mov
fnstcw
add
mov
push
inc
rclb
lds
and
stos
jnp
test
cmp
cli
ret
decb
mov
bound
sbb
into
push
add
add
push
arpl
sub
jmp
add
mov
lods
loope
jb
xor
cli
loopne
arpl
adc
or
shlb
mov
adcb
test
ljmp
mov
push
mov
inc
cmp
cs
and
scas
insl
call
add
mov
adc
push
cli
jnp
mov
adc
rorb
aam
jecxz
inc
push
sbb
xorb
push
sti
cli
and
mov
lcall
outsb
cltd
mov
xchg
cmpsl
adc
cmpsb
in
into
jecxz
jp
cmp
shrb
sbb
push
fwait
mov
push
xor
or
sahf
fldl
adc
outsl
sbb
fsts
cltd
rclb
push
stos
adc
fwait
jmp
es
int
or
call
pop
jb
xor
mov
movsl
idiv
shlb
cltd
dec
xchg
ret
xchg
mov
repz
ss
sarl
negl
mov
jmp
xor
lods
mov
jnp
dec
xchg
ss
cwtl
iret
js
xlat
ds
sbb
stc
movsl
jbe
lods
rorb
in
cmp
jp
mov
or
jecxz
push
or
or
dec
push
imul
push
sbb
jle
inc
push
iret
mov
jg
bound
mov
and
xor
lret
outsl
fisubl
sub
adc
out
aas
inc
mov
mov
fistps
cs
imul
orl
cmpsb
shll
mov
fldt
dec
into
fwait
add
out
ja
rcrl
inc
shlb
cmp
adc
aad
dec
dec
or
insb
in
icebp
ds
dec
or
cld
mov
xchg
gs
adc
lcall
inc
lods
adc
adc
ljmp
out
sti
xchg
sbb
cli
dec
int
adc
es
xchg
xchg
or
testl
cmp
jl
outsb
test
mov
leave
sub
ljmp
sub
mov
jg
rcrb
loop
inc
add
xor
rclb
push
cmp
jae
sbb
push
shr
jo
adc
shll
or
sbb
mov
pop
cmp
cmc
insl
orl
arpl
stc
dec
dec
popa
or
scas
inc
lret
or
or
sub
or
leave
in
rolb
icebp
inc
jae
daa
mov
cmp
das
hlt
and
js
xor
gs
sub
cmp
jecxz
adc
in
in
sbb
ja
cltd
sbb
or
jns
jno
push
mov
jbe
push
xchg
out
xor
ds
loop
add
mov
inc
faddp
push
scas
fs
push
xor
out
sbb
mov
stc
xchg
out
mov
or
mov
lret
xor
imul
sbb
xchg
stos
in
xor
jmp
gs
das
popf
ss
inc
test
sbb
or
imul
cmp
int3
aaa
inc
xor
sbb
add
test
jnp
nop
sbb
jmp
aad
or
out
stos
sub
dec
inc
dec
add
xchg
shll
sbb
in
fmull
repz
lods
aam
and
and
jne
lods
mov
jno
jg
dec
xor
addr16
cmp
sub
fnstsw
lock
movsl
push
repz
xor
add
push
cmp
mov
testb
xor
les
xchg
cmc
sbb
rorb
xchg
mov
imul
lgdtl
shll
int
cmp
int3
enter
shrd
cmp
std
or
test
push
push
sub
cmc
jle
xchg
shll
and
sbb
clc
xchg
outsb
gs
mov
or
or
sub
test
push
push
pop
mov
in
adc
or
int3
nop
clc
push
xchg
push
in
enter
pop
sub
popf
bound
jb
cld
int
add
jns
lock
lea
ret
mov
xlat
xor
push
push
sbb
ljmp
cmc
fsts
pushf
rorl
push
mov
jge
cmc
fsubs
xor
test
inc
mov
pushf
dec
fiadds
in
jne
mov
or
dec
mov
aad
test
in
cld
into
loop
push
xor
xchg
pop
jle
push
cli
adc
les
pop
pop
aam
sub
lds
push
test
call
xchg
mov
jmp
pminsw
jae
psubd
fnstcw
lret
push
or
pop
inc
xlat
and
mov
out
push
clc
stos
mov
jle
jg
mov
jnp
push
ror
and
ret
fs
loope
mov
pop
outsb
cltd
aad
nop
xchg
and
fadds
or
cmp
jle
shrb
pushf
dec
pop
addl
out
mov
cmc
xchg
fmuls
mov
jb
xchg
leave
and
mov
dec
repnz
aas
adc
ret
stc
inc
mov
lods
sbb
shll
xchg
pop
and
aam
movsl
lcall
in
add
popf
and
loope
xor
fstpl
sbb
lahf
roll
dec
xchg
fsubrs
jb
jbe
cmove
xor
ds
mov
aam
pop
inc
add
jmp
jge
sbb
pushf
add
push
fstpl
sbb
ret
imul
repnz
jg
shll
xchg
and
cltd
mov
mov
aam
sbb
sub
bound
push
xor
sub
mul
ss
xorb
add
nop
adc
test
push
int
xchg
push
mov
repz
notl
insl
push
mov
cli
cmp
inc
sbb
iret
pop
pop
pop
mov
aad
jnp
mov
mov
shrb
xor
test
daa
mov
jne
push
add
add
xor
mov
faddl
scas
sub
stc
sub
xlat
icebp
loopne
movsb
pushf
jno
xchg
sarb
stos
add
sbb
notl
lods
add
and
outsb
enter
int
stc
leave
inc
mov
shl
pop
xor
xchg
mov
loopne
es
or
stos
xlat
aad
push
cld
jbe
enter
fmulp
push
int3
push
and
in
scas
orb
xor
lcall
inc
insb
pushl
mov
and
rcr
xchg
call
push
push
cmp
fildl
xchg
jp
test
insb
inc
sti
stos
adcb
scas
inc
xchg
test
mov
sahf
sub
call
mov
scas
or
dec
jno
pop
and
xlat
add
pop
mov
or
in
cmp
insb
test
sub
pop
lea
or
xor
and
inc
xchg
inc
lahf
jb
in
pop
xchg
or
jns
fnstcw
lock
jo
nop
nop
cmpsb
pusha
bound
cmp
scas
cmp
movl
int3
mov
stos
mov
sbb
repnz
jbe
xchg
pusha
jbe
pop
mov
add
int3
or
add
xchg
jno
daa
cld
test
int3
cs
push
xchg
mov
popa
mov
cld
jnp
jecxz
push
push
enter
adc
push
popa
aad
ret
aad
and
bound
notl
xor
in
cmp
rolb
out
leave
movsl
push
mov
mov
out
js
test
add
sub
xchg
data16
cmp
data16
and
dec
mov
pop
iret
inc
add
and
or
adc
sub
adc
xchg
mov
lret
popf
nop
lea
xchg
cmp
xchg
cmp
mov
sub
mov
fcmovne
pop
bound
ljmp
movsl
inc
inc
mov
lock
movsl
mov
std
into
in
daa
push
lret
pop
stc
scas
int
leave
dec
jne
lret
out
lods
lds
and
dec
mov
sbb
out
bound
add
or
fidivs
and
sbb
pop
push
nop
nop
xchg
mov
test
stc
ja
inc
out
mov
xor
lret
mov
aas
fsub
or
and
test
test
scas
or
stos
mov
stos
mov
jecxz
out
cmp
xor
sbbb
rol
adc
inc
ljmp
sub
push
mov
ret
or
and
loope
inc
push
loope
mov
jns
insl
sbb
roll
jnp
pop
into
add
push
xchg
add
adc
movsb
adc
notl
dec
push
into
lahf
xchg
popf
mov
arpl
mov
add
xchg
mov
stos
sbb
add
xchg
dec
rorl
cmpsl
lock
mov
xor
fcomp
push
movsb
add
mov
dec
and
pop
mov
jmp
sub
pop
fiadds
int
sub
mov
icebp
jae
and
add
sub
xor
xor
or
mov
fwait
and
push
and
xchg
push
test
and
sub
mov
lret
test
mov
mov
cmp
ret
jl
or
pop
sub
jmp
cs
mov
testl
sbb
lods
cmp
mov
xor
cmpsb
push
pop
inc
xchg
or
clc
cmp
test
test
jne
les
cs
insb
sarl
inc
test
xor
aam
xor
jecxz
dec
xor
xor
push
lcall
push
sti
in
mov
adcb
or
lock
jnp
and
push
mov
push
std
cmp
lahf
insb
cmp
testl
mov
pavgw
push
or
and
or
les
insl
repz
jmp
shr
cmp
subb
add
mov
gs
jge
sbb
sbb
nop
mov
lods
in
jge
cmp
das
pop
pushf
int
icebp
scas
pushw
dec
mov
mov
sub
xor
push
in
dec
aas
inc
fnstsw
jbe
fidivrs
mov
and
test
mov
stos
sub
sbb
cmp
jge
add
scas
inc
add
push
sbb
mov
int
fsubl
xchg
lret
arpl
push
dec
je
jmp
je
push
inc
arpl
stos
mov
in
and
pop
push
fsubp
push
xchg
mov
xchg
hlt
or
in
mov
test
or
jo
pop
xor
jle
aaa
push
jbe
bound
inc
add
pop
pop
clc
stc
lods
or
cld
cwtl
hlt
rol
nop
jl
ss
ja
adc
sub
sbb
ret
outsl
mov
daa
cwtl
jg
fimuls
in
les
fisttpl
adc
das
leave
lret
dec
lret
sub
leave
xchg
xchg
mov
subl
icebp
sbb
xchg
iret
mov
ja
jno
or
pop
sbb
insb
sub
fsubs
cmp
jae
jecxz
jne
push
push
jns
pop
mov
or
cmpsb
inc
and
addb
inc
sbb
xchg
lods
rol
jle
cltd
inc
insl
pop
bound
pop
xchg
rol
lcall
mov
test
mov
sub
mov
sub
insl
setge
loopne
inc
sbb
mov
cmp
jbe
and
push
rorb
or
cmovno
in
and
cmp
mov
inc
lods
inc
jmp
rcl
mov
in
scas
jae
lret
icebp
cmp
jp
push
cwtl
hlt
in
mov
jge
or
jecxz
cmp
jns
insl
sub
xchg
sbb
mov
pushf
mov
jge
gs
jns
mov
mov
xchg
int3
push
add
push
cli
sub
xchg
inc
sub
aam
xor
scas
daa
addb
ja
lods
mov
lahf
test
pop
clc
pop
add
xor
out
adc
shl
cmp
addr16
xor
mov
cmpsb
into
fldl
loope
lret
mov
cmpsl
inc
mov
and
fwait
out
movsl
mov
xor
push
repz
cs
push
insb
cld
ljmp
mov
js
test
jb
adc
out
push
push
mov
faddl
les
in
and
pop
dec
inc
stos
adcl
popf
cmc
lret
mov
sub
insl
repz
push
mov
popf
dec
aad
pop
xchg
adc
es
or
inc
dec
jmp
fs
pop
pushf
push
mov
data16
xchg
pop
shll
cmc
data16
mov
add
mov
dec
xchg
jb
jnp
fstl
mov
sbb
xor
jbe
sar
fwait
imul
in
or
or
jl
mov
cmp
jbe
and
mov
fildll
mov
aad
mov
js
out
outsl
pop
pop
push
mov
pushl
lret
sub
jecxz
xor
cmp
add
cmp
xor
sbb
rclb
xor
and
shl
and
and
push
jge
push
jnp
xor
ret
adc
jno
imul
and
push
add
jae
sub
arpl
fadd
je
in
outsl
pop
pop
pop
repnz
jo
pop
or
and
ljmp
sahf
imul
repz
jecxz
repz
repz
ret
inc
scas
dec
neg
push
outsb
add
fstl
sub
push
adc
outsl
mov
mov
inc
stos
pop
inc
popa
adc
or
jp
lcall
mov
lock
cmpsb
push
push
repz
loop
inc
ja
add
jbe
movsl
pop
or
mov
cmp
pushf
dec
xlat
or
jae
cmpl
push
add
hlt
in
dec
pop
mov
dec
gs
xchg
mov
repnz
dec
xchg
testb
in
aaa
into
add
fisubl
aaa
adc
clc
sbb
out
jmp
mov
clc
pop
inc
inc
and
bound
daa
or
pop
int3
jmp
in
lea
push
inc
mov
push
mov
xchg
push
aam
cmpsb
jmp
out
stc
dec
pop
daa
out
aad
rcrl
pop
pushf
nop
jo
fildl
idivl
xor
push
xor
sbb
stc
out
push
nop
mov
mov
mov
xlat
stc
testb
mov
shll
xchg
shl
push
ret
jge
push
in
mov
mov
enter
cmp
nop
iret
adcb
push
xchg
ja
mov
mov
shlb
jl
and
mov
fsubr
adc
push
xchg
insl
mov
addr16
shll
fcmovnu
mov
sub
cmp
hlt
dec
fiaddl
pop
or
ja
test
mov
add
and
aaa
mov
jl
flds
jns
and
iret
shl
gs
push
add
jb
xchg
xchg
xchg
adc
fcom
scas
fadds
shrl
shlb
cmp
stos
testl
and
pop
pop
mov
jo
adc
fwait
in
and
mull
aam
fsubp
sub
xor
lds
testl
xor
jp
push
std
jnp
mov
stc
mov
mov
push
flds
cmp
dec
mov
jne
xchg
and
decb
fiadds
xchg
mov
mov
testl
movsb
in
jb
cmpsl
sub
cmpl
xor
mov
adc
test
jl
lret
and
adc
add
cmp
sbbb
cmp
xor
inc
ss
jb
lret
pop
push
xor
mov
adc
outsl
lods
in
dec
arpl
jae
mov
gs
jno,pn
sti
xchg
sti
pop
das
xchg
ret
push
pop
dec
add
pop
sub
daa
test
jp
scas
cmp
out
mov
sbbb
ds
mov
test
pushf
sub
fidivs
add
mov
out
inc
test
mov
insl
test
dec
cmp
mov
lds
cmp
sub
inc
sub
iret
cmpsl
adc
adc
in
or
pusha
loop
dec
cmpb
mov
cli
add
mov
or
xchg
adc
or
fimull
inc
inc
mov
outsl
data16
push
xlat
sub
push
add
pop
or
addb
sbbb
int3
add
fcmovnb
push
sub
push
dec
clc
loop
sbb
int3
adc
xchg
das
cmpsb
mov
or
jns
add
jne
push
sbb
mul
lods
sbbl
mov
jns
mov
negb
aad
mov
adc
outsb
jno
clc
push
adc
daa
and
rolb
mov
aam
loope
pop
ss
jmp
and
shr
inc
cmp
adc
cmp
jmp
mov
leave
out
cmp
push
hlt
clc
ljmp
and
mov
les
fldcw
dec
in
ss
out
popf
add
sbb
stc
test
iret
mov
xor
adc
push
jns
add
call
add
aaa
enter
inc
push
or
xor
add
int3
cmp
mov
mov
fs
clc
mov
pop
inc
lret
out
fwait
in
mov
shll
add
push
pushf
scas
jp
xlat
negb
in
adc
dec
xchg
call
stc
sub
arpl
ror
dec
test
aaa
push
dec
js
fsts
addb
mov
shll
xor
ljmp
int
int
das
cli
nop
push
push
xchg
push
add
enter
push
add
jge
inc
sub
adc
cmp
push
rcl
shlb
adc
out
test
bound
add
dec
xchg
xlat
xchg
lret
mov
jmp
out
cli
cmp
jae
cld
jg
shr
xchg
xor
sub
inc
fwait
lcall
inc
test
lret
outsb
add
jecxz
add
push
jp
lock
pop
ja
stos
fimuls
dec
in
xchg
lahf
pop
jmp
xlat
sbb
aaa
jne,pn
mov
pop
dec
out
in
jmp
mov
inc
lods
inc
std
pop
jmp
negb
pop
dec
jo
iret
dec
aaa
outsb
jne
mov
and
shll
sbb
test
outsb
mov
sbb
mov
andl
dec
jno
dec
gs
push
xor
cmp
cmpsl
adc
pcmpgtd
xchg
fcomi
fnsave
mov
mov
jmp
lds
test
lock
fwait
mov
or
je
push
mov
mov
repnz
mov
xchg
ss
ret
andl
out
arpl
stos
xlat
jmp
lret
testb
dec
sbb
push
sbb
fwait
js
inc
aaa
pop
arpl
int3
cli
hlt
mov
test
les
sbb
int3
adc
inc
ja
dec
xchg
mov
stos
movsb
scas
add
shll
mov
int3
lods
incb
lahf
idivl
shlb
dec
mov
mov
dec
out
push
std
push
scas
dec
aaa
std
shlb
xchg
mov
int
jg
clc
mov
cltd
mov
rol
dec
sbb
sbb
add
mov
cmp
aas
cmp
fidivs
jg
ja
and
iret
fistpll
add
ja
out
mov
inc
jl
rorl
and
push
push
daa
shrb
mov
stos
imul
add
pop
stos
das
iret
jp
data16
aaa
push
xchg
loop
incl
mov
cmp
mov
mov
pop
lcall
imul
ja
lds
loop
xchg
xchg
test
outsb
cmp
xchg
dec
mov
xor
sbb
mov
xor
sbb
mov
cwtl
sbb
dec
dec
and
jge
cs
mov
ret
jo
pop
adc
dec
notl
fcomp
ret
in
aas
repnz
js
andl
subb
sahf
jp
dec
arpl
dec
jae
sbb
lcall
inc
inc
sbb
faddl
and
mov
imul
sbb
cmp
xor
nop
xlat
cmp
jg
insw
or
cmp
notl
adc
mov
mov
insl
cmp
fdivr
addr16
jo
mov
dec
or
outsl
sbb
rolb
jle
add
int
ja
inc
mov
inc
int3
add
aad
mul
loopne
cmp
pop
gs
loopne
jno
popf
lods
stc
clc
inc
ds
jp
push
push
inc
add
ljmp
pop
mov
jmp
sbb
mov
sbb
orl
xchg
ljmp
adc
in
pop
pop
nop
in
xchg
aas
rcl
inc
stos
push
repz
lahf
rol
cmp
lahf
jb
xor
popf
add
mov
rcl
or
push
rorb
and
pop
cmp
push
sbb
pop
push
inc
pop
scas
and
mov
cmp
push
mov
jbe
ja
test
in
or
leave
fdivrl
pusha
pop
lahf
popa
mov
loopne
dec
hlt
cmp
imul
mov
push
out
sub
sbb
push
insl
jmp
dec
pop
cmp
xorl
fildl
push
sbb
adc
xchg
inc
inc
pop
mov
lahf
pop
cmp
test
stos
xor
inc
test
bound
cld
or
jb
and
lahf
adc
and
rol
adc
inc
neg
psrad
addr16
sbb
push
adc
pop
lods
push
lcall
add
push
cltd
dec
xlat
add
jg
outsb
aam
popf
outsb
jnp
stos
pushf
adc
stc
test
lock
inc
mov
mov
add
nop
cmpb
add
xorl
out
pop
push
cmp
aaa
lock
jno
xor
jmp
lods
mov
stc
mov
fwait
cmp
dec
popf
mov
adc
mov
fsubrs
je
dec
mov
pushf
cmp
not
jne
xor
pop
cli
aas
jecxz
cmp
add
in
ss
outsb
lahf
das
sbb
push
int3
inc
jo
cwtl
enter
aaa
lods
xor
cmpsl
xor
push
sub
out
sub
dec
jge
sbb
mov
pop
insb
test
mov
xor
push
pop
in
dec
xor
enter
push
sbbl
add
test
fbstp
test
aad
adc
jg
je
jl
inc
jo
gs
or
adc
dec
push
push
push
negl
fsubs
leave
leave
mov
sbb
out
xchg
pop
and
int3
int3
add
fnstcw
sbb
cmpsl
lahf
sub
mov
push
adc
shlb
cmc
jl
in
addr16
push
lods
inc
ret
int3
sub
icebp
rorl
in
adc
cld
movsb
test
std
sub
daa
dec
insl
inc
dec
push
mov
sbb
cmp
test
lret
adc
mov
add
cmp
cmp
pop
nop
in
mov
mov
and
mov
ljmp
es
fistps
fimuls
orl
syscall
jp
int
pop
inc
cs
movsb
cwtl
gs
pop
call
daa
stc
imulb
pop
arpl
jns
xor
mov
dec
mov
push
cli
mov
sub
push
out
movsl
in
xchg
pop
and
pop
out
add
and
cmp
pusha
into
pop
mov
mov
lock
fs
inc
lock
int
scas
ds
mov
cmpl
cli
xlat
add
mov
enter
mov
xchg
aad
sahf
ds
push
loope
outsl
mov
xorl
fistpll
test
repz
lock
add
nop
add
xchg
push
shl
inc
ret
ror
in
jecxz
nop
movsb
mov
and
xor
fildll
push
cmpsb
xor
in
negl
frstor
out
jns
in
inc
lock
mov
jge
and
mov
xchg
cs
popf
ss
jb
or
push
rol
clc
dec
test
xor
dec
sub
push
fs
test
mov
lods
je
or
rcrl
pushf
jnp
mov
add
ja
fdivl
mov
out
push
popa
stos
adc
push
sbb
ljmp
mov
and
or
movsl
imul
aaa
js
hlt
fsubs
les
add
mov
jmp
idivb
sarb
out
cmp
mov
cli
push
mov
mov
dec
cmpl
mov
xor
ss
jne
fadd
stos
rorl
sub
lea
mov
or
in
sbb
icebp
inc
jp
and
xchg
ret
or
ljmp
in
lea
fiadds
fdiv
pop
jp
xor
pop
cmp
mov
mov
sub
nop
scas
aad
int3
scas
ja
cmp
mov
inc
fcmovnb
bound
je
mov
aaa
jle
jnp,pt
hlt
int
mov
add
shl
mov
lcall
cmp
dec
repz
scas
jne
pop
mov
enter
ja
sub
mov
in
xchg
divl
mov
jne
rcrl
dec
inc
sahf
jg
sub
xchg
xor
popf
xchg
dec
in
xor
loopne
xchg
or
sbb
sub
cmp
mov
data16
enter
push
add
pusha
fs
push
aad
pop
loopne
aas
mov
test
push
cmp
loope
adc
sbb
jmp
test
out
sub
pop
aam
aad
xchg
xchg
cmp
mov
gs
sub
dec
and
std
jns
iret
ret
lret
add
jge
stos
icebp
jbe
cmp
sti
xchg
fs
nop
sub
mov
xor
out
jmp
push
or
popf
jbe
or
push
daa
xchg
pop
dec
cmc
jne
xlat
lods
mov
adc
sbb
push
aam
in
inc
adc
add
jl
push
jg
xchg
pop
fisubrl
loopne
mov
out
xor
and
sti
inc
les
add
xchg
add
outsl
sbb
xchg
push
sahf
pusha
push
stos
dec
xchg
xor
push
test
or
jae
or
dec
mov
js
or
out
outsl
into
mov
int
sbb
xorb
jb
ret
mov
pop
add
add
daa
push
cs
pop
dec
xchg
inc
addl
push
scas
and
xchg
jecxz
rcrl
mov
push
daa
push
loopne
jo
lea
rcll
xor
ss
push
out
xor
jl
or
sub
mov
or
ret
xor
sbb
xor
mov
sub
addr16
test
push
adc
idiv
imul
push
lret
mov
sbbb
mov
fcoml
sti
push
fwait
lahf
inc
or
jmp
jmp
mov
aaa
adc
out
xchg
jo
fimull
jae
mov
xchg
out
jno
xchg
lds
fstpt
adc
push
adc
mov
stos
pusha
lods
lcall
repnz
inc
subb
or
fildll
push
movsb
shrb
mov
in
fisubrl
popa
aad
push
test
cltd
ds
test
jne
data16
sbb
in
dec
and
out
mov
in
xchg
jge
stc
leave
aaa
push
jne
ss
lret
sbb
mov
cmc
sti
sub
rorl
inc
cmp
nop
mov
leave
add
test
pop
jne
ljmp
xchg
js
jbe
dec
int
scas
fdivrs
xlat
lock
lret
aam
sub
cmp
inc
inc
rorb
sbb
stos
mul
xor
test
int
jo
jns
in
js
cwtl
jmp
mov
les
test
std
cmpsl
xchg
mov
xor
sarl
sbb
in
sub
fmuls
js
or
jl
inc
or
insb
dec
adc
add
jmp
xchg
fistpll
pushf
jne
jecxz
adc
fs
gs
fmul
inc
mov
arpl
enter
sbbb
dec
mov
dec
push
push
jno
mov
loopne
or
cs
sub
and
in
ds
xchg
and
cmp
push
xor
xchg
dec
rcrb
push
and
pop
cmp
xor
cld
clc
sti
nop
ffree
data16
sbb
test
mov
ret
pop
daa
fcmovnbe
fldt
mov
cld
xor
mov
stc
mov
fnstsw
popf
les
loope
or
dec
test
outsl
iret
loopne
jmp
xchg
test
shrb
shrl
cld
clc
sub
inc
in
ret
je
scas
lods
sbb
loop
das
out
inc
cmc
fildl
and
dec
lret
mov
jp
sahf
test
lahf
or
cld
test
inc
sbb
sbb
in
cmp
cmpsl
out
aad
xor
adc
icebp
loop
inc
shlb
bswap
ret
jbe
hlt
and
inc
mov
mov
mov
iret
das
les
sub
insl
scas
dec
repnz
in
in
jo
jg
mov
icebp
cmp
pop
mov
push
aas
cwtl
call
push
xchg
sub
mov
xchg
loop
mov
xor
leave
mov
ss
adc
jle
pop
inc
popf
sarb
mov
cwtl
and
jns
loop
cld
fistps
push
lahf
sub
push
sti
mov
idivb
int
sahf
push
mov
adc
jle
mov
push
sarl
daa
sbb
push
inc
jge
shlb
inc
ljmp
and
pusha
sub
clc
xor
jecxz
lods
nop
inc
aaa
test
pop
sti
cwtl
fistps
sbb
or
outsb
pushf
mov
mov
xor
push
ret
rcl
sbb
test
push
adc
mov
mov
std
adc
iret
sbb
and
pop
push
test
mov
data16
jp
cli
push
xchg
inc
jl
lahf
dec
mov
xchg
adc
inc
jb
andl
dec
ret
xchg
xchg
mov
add
dec
cli
int3
xchg
les
jge
cmp
insb
push
mov
movsb
int
sub
lret
pushf
jno
cmc
dec
in
add
dec
ds
pop
adc
jmp
outsb
icebp
pop
out
xchg
dec
pop
mov
cmp
xchg
fldt
adc
push
jns
and
mov
daa
fldcw
pusha
nop
dec
push
pop
enter
jmp
jno
mov
jo
movb
jns
add
sbb
inc
jp
cmpsb
push
add
arpl
mov
cmp
imulb
sahf
lret
sahf
testl
jns
jo
push
jo
inc
stos
fwait
pushf
xchg
movsb
xchg
jnp
scas
mov
rolb
cmpsb
arpl
fwait
bnd
xor
xacquire
rolb
xor
inc
cmpsl
cmpsl
lahf
test
mov
mov
pop
aam
adc
add
mov
cmp
aaa
lods
std
push
and
sub
leave
mov
es
lret
repz
sub
jle
cmp
ror
xor
jecxz
mov
rcll
leave
mov
aad
sbb
pop
cmp
ja
scas
jbe
or
loop
int3
jg
mov
sub
sbbb
inc
cli
pop
dec
mov
push
adc
sbb
js
dec
mov
mov
push
or
mov
xor
mov
xchg
adc
popa
je
xchg
stos
fstl
jmp
stos
cld
in
push
and
aam
sub
cld
adc
ljmp
aas
sbb
cs
sbb
xchg
xlat
std
xor
and
cmpsb
sbb
fiadds
test
pop
mov
cmp
repnz
xchg
cmp
iret
ss
sarl
dec
cmp
jb
out
loope
sbb
xor
fimuls
jg
inc
addl
imul
xor
por
mov
xchg
stc
stos
addl
loope
cli
lea
adcb
inc
and
in
push
mov
lahf
imul
movsb
pushf
fisubl
frstor
jle
jle
xchg
push
stos
aad
cmp
out
cmp
add
cmp
je
popf
pop
xor
push
notb
imul
pop
sub
movsb
mov
xchg
ret
sahf
out
scas
lods
repz
lods
lcall
ss
mov
sbb
pop
ret
ret
or
lock
sbb
daa
mov
jecxz
inc
cmpb
mov
je
test
cli
jmp
jnp
jno
insb
outsb
add
add
xor
pop
lods
or
dec
pop
movsl
outsl
dec
mov
mov
shrb
cltd
nop
call
mov
cltd
out
sub
in
jo
insb
incb
sub
dec
and
ret
es
hlt
sbb
nop
aam
push
call
cs
shl
push
or
or
push
mull
adc
mov
jmp
push
pop
repnz
cmpsb
cmc
cmp
imul
out
mov
aaa
xor
xchg
enter
pop
outsb
dec
or
cli
fstl
adc
lret
into
adc
leave
mov
lock
add
push
shr
hlt
aad
aaa
shll
jge
xchg
add
push
mov
frstor
mov
xchg
cmp
bound
test
or
insl
push
in
sarb
push
cmp
jg
push
mov
and
push
fcompl
insl
scas
xchg
and
mov
sub
popw
test
and
mov
ss
imulb
cld
out
cmp
add
and
gs
cmp
call
insb
aam
inc
outsl
pushf
mov
das
outsl
add
mov
es
int
sub
add
inc
orb
jns
or
rcrl
sti
or
je
sub
hlt
filds
lret
gs
out
daa
jg
xor
mov
pop
iret
das
sub
lret
lret
lods
push
cmp
adc
in
push
out
cvttps2pi
stos
cltd
or
or
cmpsb
dec
test
scas
lock
insb
jo
mov
out
outsl
push
pop
jnp
sub
pop
sbb
pushf
inc
call
fsubr
call
mov
lods
repz
mov
call
mov
or
mov
loop
jno
inc
fs
mov
in
adc
pop
aaa
push
shrb
fldt
loopne
fsubrs
sarl
dec
shlb
movsb
cld
mov
ljmp
fldt
fs
rcr
xor
jbe
sbb
xchg
gs
clc
xchg
popf
and
dec
das
into
add
push
xor
loop
mov
cltd
or
xor
jnp
add
xchg
xchg
das
mov
fimull
scas
aaa
jmp
mov
addl
cmp
mov
lds
cmp
inc
inc
or
cli
lea
or
adc
insb
dec
out
test
jecxz
mov
arpl
pop
xchg
mov
rdpmc
add
cmp
xor
mov
sub
push
insb
mov
sub
push
dec
nop
insl
or
add
jge
and
mov
mov
sub
xlat
push
add
cmp
call
mov
mov
cwtl
and
add
andb
mov
dec
push
pop
adc
loopne
mov
fmull
push
mov
in
fs
jle
adc
cmpsb
adc
push
mov
aad
inc
jbe
lahf
xchg
sub
xchg
jle
mov
xor
or
pop
addr16
push
out
lods
setp
jl
sbb
rol
movsb
pusha
adc
ss
mov
dec
jae
lds
xor
push
inc
arpl
push
into
sahf
cmp
in
xchg
iret
mov
sbb
jge
int
test
lds
cmpsb
push
fistpll
ret
les
and
xchg
es
jmp
mov
jo
mov
dec
dec
mov
bound
loope
popa
nop
ss
es
das
xchg
loope
fisttpll
bound
frndint
add
mov
lcall
add
bsr
lock
orl
mov
fcomps
lret
bnd
adc
cmc
xchg
and
dec
outsl
mov
mov
adc
pop
repz
inc
adc
insb
jge
or
les
xor
fidivrl
inc
jo
int
shll
jmp
jne
pushf
cmpsl
jge
mov
loope
adc
dec
rclb
sbbl
sub
clc
int3
cmp
adc
outsl
xor
mov
dec
rcrb
repnz
sub
xor
mov
aad
jecxz
in
cmc
sub
pop
xor
fadd
push
mov
and
mov
aas
out
rcrl
jae
pop
dec
jp
repz
sahf
xor
sbb
xchg
push
or
notb
test
or
cwtl
mov
lock
mov
test
mov
rcr
add
xchg
sar
push
xchg
mov
jg
mov
pop
push
adc
or
mov
fstl
arpl
loope
jge
jo
xchg
or
sub
cwtl
cli
add
stc
hlt
add
fadds
loopnew
pop
dec
aad
popf
xor
jge
push
rcrl
aaa
mov
pop
mov
adc
xor
mov
mov
arpl
fs
xchg
popa
sbb
dec
imulb
jae
push
mov
in
fwait
aaa
pusha
mov
jecxz
out
sbb
xchg
add
int3
push
sub
ret
sub
cmp
dec
or
push
scas
and
repz
cmp
fimull
lahf
popf
out
lds
cmp
dec
pop
dec
lods
dec
push
mov
and
out
inc
lds
cmc
cmpsl
dec
sti
packssdw
mov
cmpsb
push
or
xor
pop
mov
sub
fsubp
inc
std
sub
push
mov
insb
aaa
adc
out
arpl
pop
outsb
adc
cmpsl
xor
inc
xor
lret
sarl
cmp
jg
lea
enter
or
negl
mov
and
jbe
inc
push
outsl
push
mov
mov
jp,pt
outsb
jg
sbb
dec
pop
int
jmp
push
stc
pop
or
mov
sbb
sub
cld
xchg
and
add
fadds
subb
lds
sbb
inc
mov
xlat
enter
data16
outsl
mov
enter
add
insl
cmpsl
in
adc
jmp
mov
pop
or
repnz
sbb
outsl
dec
nop
push
inc
and
sbb
popf
mov
cmp
jmp
xchg
ljmp
ret
dec
mul
sbb
mov
xor
add
popa
lret
icebp
mov
mov
cmpsb
xlat
loope
mov
sub
call
fcoms
cmp
mov
in
add
fadds
push
or
enter
loop
cli
clc
outsl
aaa
jg
xchg
mov
mov
test
inc
push
cli
cmp
lret
jg
mov
jb
lods
out
xchg
push
adc
ljmp
loope
sub
jns
ss
xorb
lahf
cli
fadds
out
and
mov
jg
mov
fsubs
mov
mov
xchg
inc
push
lcall
jmp
in
repz
adc
in
add
cltd
out
arpl
pop
aas
jo
mov
mov
lcall
mov
or
xchg
sub
fnstcw
push
add
int3
xor
test
mov
out
pop
push
xor
sub
mov
sub
call
gs
jmp
jl
or
mov
mov
xchg
jno
popf
loopne
mov
fcmovnu
push
lret
cmpsl
sahf
mov
ret
xlat
mov
pop
inc
cmpsb
inc
aaa
iret
pop
sbb
aas
orb
dec
mov
imull
dec
add
addr16
out
push
cmp
push
inc
dec
call
imul
fs
cmp
add
insb
jp
pop
jge
and
mov
fldcw
and
and
loop
lret
fsts
pop
aad
pusha
push
and
mov
imul
lret
mov
icebp
in
mov
inc
nop
daa
lock
inc
ds
sahf
sub
jb
mov
repz
outsb
inc
add
lcall
dec
push
xchg
mov
mov
inc
fimull
loope
stc
xchg
divl
xor
or
hlt
mov
push
call
fbstp
jnp
mov
adc
aad
sub
in
xchg
pop
mov
mov
add
xor
dec
lahf
adc
inc
mov
push
imul
out
mov
xor
or
mov
fldenv
int3
xorl
mull
ja
push
in
out
std
jp
xchg
add
imul
push
sub
leave
jp
leave
out
jmp
jmp
roll
pop
dec
js
ds
jecxz
cli
push
xchg
in
mov
inc
stos
in
jae
clc
xchg
push
shlb
pop
ljmp
adc
jne
and
enter
scas
mov
fisubl
pushf
add
adc
rorb
push
dec
jb
and
inc
fbld
shlb
hlt
dec
adc
repnz
popf
rcl
inc
notl
ljmp
in
mov
xor
in
xor
jge
xor
push
add
add
fsubrs
loope
loop
pop
sbb
sub
cltd
out
lock
out
adc
call
sub
test
xor
mov
jmp
into
int
inc
push
pop
xchg
in
xlat
xchg
sbb
mov
inc
mov
jg
add
lret
xchg
or
pop
sub
lock
push
pop
adc
mov
mov
gs
sahf
add
mov
jns
mov
adc
jnp
add
add
push
cmp
pop
lock
pop
div
fcomps
xchg
fstl
cmp
pop
loop
dec
scas
jns
lea
in
jne
addb
xor
js
cld
and
push
and
xchg
rolb
dec
icebp
or
in
mov
or
cmp
xor
inc
cltd
pop
jae
enter
aas
sti
add
popa
fcmovne
cltd
cmp
fsubs
add
jle
addl
pusha
test
jno
mov
push
int
xchg
outsl
sar
push
xchg
inc
and
lds
fidivl
mov
or
sub
test
pop
in
repz
mov
jo
push
pop
jo
inc
lods
jl
mov
imul
stos
sbb
push
sub
cld
mov
xchg
cli
loope
repz
mov
mov
ja
mov
cs
jg
imul
xor
adc
pusha
jnp
sub
fadds
sub
mov
cmp
fcoml
sub
iret
jle
cltd
ja
out
mov
xchg
mov
mov
sub
push
or
iret
jb
xlat
mov
sub
add
pop
fldlg2
loope
mov
scas
jno
jecxz
jg
inc
test
xor
nop
push
outsl
lock
scas
mov
jp
out
add
int3
arpl
aad
jle
arpl
cmpsb
mov
daa
fiaddl
std
in
cwtl
or
es
sub
cwtl
push
pop
test
lcall
ljmp
out
mov
push
loope
jb
js
gs
xchg
cld
popf
and
inc
push
xchg
lahf
in
test
adc
adc
sarl
lods
dec
mov
xchg
push
pop
testb
hlt
imul
xor
fistps
das
jmp
mov
add
je
stos
cmpsb
mov
out
mov
rorb
jg
xor
xchg
cmp
loope
in
clc
mov
pop
pop
inc
and
fnstenv
inc
repz
int3
jge
or
mov
jbe
mov
jne
and
dec
pop
lock
fimuls
shlb
jecxz
xor
sub
push
inc
sahf
sbb
arpl
jbe
mov
das
push
cmp
adcl
mov
jl
fldl
je
cltd
popf
out
int
pop
sbb
in
cmpsl
fdivrs
or
imull
stos
inc
cld
cmp
lea
jnp
jnp
cmp
loope
imul
outsb
pop
into
test
adc
icebp
repnz
jle
jae
hlt
cmc
sbb
or
stos
cld
ret
stos
sub
loope
fsubrl
aaa
addr16
add
xor
ficoms
je
or
mov
cli
jb
lods
mov
xor
mov
push
dec
xchg
mov
pop
shrl
je
insb
mov
push
jno
pop
test
lcall
push
loop
rcll
ss
xchg
mov
add
ret
es
shlb
mov
int
xchg
dec
jle
add
mov
ror
inc
push
pop
into
sbb
push
or
sub
jg
mov
sub
dec
pop
leave
gs
mov
or
jecxz
arpl
pop
int3
mov
notl
loop
xchg
cltd
jnp
hlt
test
cltd
sbb
std
adc
fstps
scas
add
lds
cmp
dec
fisttpll
in
sbb
lods
sbb
sbbl
cvtpi2ps
pop
mov
insb
pop
jp
mov
loopne
data16
cmp
mov
loop
or
sbb
lcall
fistl
test
es
push
cmp
push
dec
pushf
mov
push
fmuls
imul
inc
lret
mov
mov
push
adc
xchg
mov
xor
push
int3
sbb
xchg
mov
stos
gs
aaa
push
adc
or
dec
arpl
lret
mov
dec
cmp
xorl
mov
in
ljmp
xor
lock
push
dec
jnp
sub
sub
daa
cmovbe
sbb
iret
call
xchg
jp
lea
shrb
mov
outsl
scas
repnz
pop
pushaw
xchg
mull
std
fisubs
nop
lods
push
scas
add
jnp
mov
push
cmc
cmp
inc
push
mov
pop
sbb
pop
out
or
lock
adc
and
pop
sti
mov
in
mov
and
cmp
push
sti
and
add
fwait
outsl
sti
add
stc
xchg
out
cmpsb
shll
push
sbb
test
bound
xchg
pop
das
pop
mov
ljmp
std
and
shl
and
mov
adc
adc
lahf
add
dec
or
jl
rcl
out
leave
lock
daa
mov
bnd
mov
shr
push
mov
mov
loope
stc
pusha
sbb
mov
shlb
sub
pop
stos
add
cmp
out
cmc
adc
cld
mov
or
inc
ret
fildll
iret
mov
or
daa
iret
jle
mov
insl
jmp
mov
rcl
mov
add
subl
pop
mov
mov
jl
lock
out
push
pop
mov
pushf
sub
sbb
add
push
xchg
or
icebp
test
arpl
test
push
jb
mov
adc
push
pop
notb
dec
jle
popa
cmp
cmp
cmp
jle
cmpsb
mov
xchg
cli
push
pop
enter
jbe
jne
xor
xor
out
or
stos
out
jno
push
fdivs
lods
pop
mov
test
mov
push
xchg
lret
push
fsubp
cwtl
mov
fwait
ja
jnp
xlat
add
sub
pop
cli
cli
dec
sarl
data16
sbb
adc
rcl
ret
fnstcw
ficompl
jo
std
jg
jg
add
in
or
je
push
scas
adc
popa
std
xor
and
lahf
push
decl
push
mov
adc
jg
aad
mov
sub
xchg
aaa
xchg
pusha
shl
jmp
xor
jns
sub
jmp
cmp
nop
sub
adc
mov
jl
ss
mov
xchg
sub
lock
pop
dec
and
movsl
jge
mov
ljmp
jmp
mov
cmp
ja
bound
dec
jmp
push
movsb
xchg
dec
imul
leave
mov
jge
ret
int3
clc
push
add
test
das
mov
gs
rorb
mov
fisttps
insl
dec
lret
imul
push
mov
sqrtps
cltd
aaa
inc
enter
mov
cmp
test
mov
nop
mov
jo
mov
mov
mov
and
mov
mov
clc
shl
mov
in
and
stos
sub
mov
xor
pop
stos
out
add
ljmp
in
xor
mov
cmp
add
lods
mov
sbb
xor
inc
xchg
std
cmc
aaa
clc
fstpt
cli
pop
mov
push
data16
sub
jmp
xlat
iret
les
sarb
xor
ja
sub
pop
pop
push
add
js
xor
jmp
xor
dec
stos
and
mov
cmc
insb
test
stos
jb
int
inc
add
sbb
adc
ds
xchg
dec
inc
mov
aad
and
jns
jle
push
mov
push
gs
push
test
pop
movsb
xor
sbbb
and
test
push
addr16
xor
jp
jno
sub
je
cmp
mov
idivl
xchg
add
into
in
push
out
fidivrs
fidivrs
adc
adc
sahf
imul
xchg
out
stc
lods
xabort
mov
and
jle
push
fidivs
dec
jge
push
push
test
or
int
jo
enter
xor
addr16
data16
es
jne
in
mov
fcomp
jne
xchg
loopne
faddl
push
es
cmpsb
sbb
push
dec
mov
xchg
xchg
fxch
push
fcoml
daa
mov
nop
sarb
dec
cld
and
ds
and
rorl
push
jnp
shrb
sub
adc
push
inc
ret
mov
adc
mov
sub
dec
xchg
dec
mov
rcll
ljmp
test
fldl
jnp
pop
sbb
orb
ret
push
int
aad
adc
pop
and
and
or
scas
out
int3
jl
andl
mov
ja
mov
jmp
dec
cltd
push
fwait
incl
sbb
test
mov
xchg
push
inc
mov
test
fbld
std
xchg
cmp
outsb
mov
fdivrs
jge
mov
dec
and
aad
mov
or
hlt
push
out
and
jo
js
rcrl
xor
jl
and
stos
jne
sbb
jo
push
jg
test
int
movsl
push
or
popa
inc
std
xor
add
les
inc
fldt
mov
scas
inc
and
int
out
sub
ljmp
cld
add
mov
xcrypt-ofb
cmpsl
test
adc
flds
leave
stc
mov
daa
ds
popa
cli
sbb
sti
dec
xor
int3
dec
out
push
pushf
dec
xchg
es
inc
jo
loopne
cmp
gs
xor
mov
mov
pop
outsl
pop
outsb
movl
cltd
fcmove
sbb
lea
sub
hlt
shlb
aaa
cwtl
call
inc
sahf
xor
mov
stos
les
or
outsb
xor
pop
mov
pop
xlat
loope
insb
rcrl
or
xor
outsb
sub
ret
std
mov
sbb
fwait
mov
repz
int3
shrl
mov
mov
and
mov
mov
sarb
mov
or
lods
in
add
decb
cmp
aaa
cli
jns
pop
imul
lods
scas
loopne
rolb
int3
js
pop
popa
shlb
les
pop
fdivrs
xchg
push
xor
jp
dec
sbb
mov
icebp
sub
fbld
lret
nop
jno
stos
dec
mov
cmp
scas
nop
xchg
gs
mov
sub
aad
xor
loope
xchg
cli
xchg
mov
imul
push
clc
sahf
repnz
loop
xchg
cmpsl
loope
and
jge
xor
pop
inc
std
mov
lock
push
subl
outsb
jl
ret
in
aad
test
fldcw
lret
jo
mov
into
xor
and
pop
stos
add
add
jne
std
ud2
das
lods
ret
or
aas
into
fstp
push
fwait
sub
cmp
push
push
leave
lret
sarb
push
xlat
mov
shlb
mov
mov
mov
rclb
ds
xor
das
loope
adc
cltd
jne
fisttpll
scas
cmpsb
test
repnz
call
mov
std
sub
fwait
mov
sub
mov
mov
nop
bound
xchg
xor
inc
xor
mulb
orb
pop
mov
and
dec
movsb
ror
dec
lock
xchg
or
dec
addb
pop
adc
add
gs
call
ljmp
push
mov
add
stos
popa
pop
pushf
xor
nop
push
scas
push
push
fnstenv
fimull
and
loope
jae
push
les
repz
test
sub
aaa
lods
mov
jno
mov
cmp
sti
lea
inc
mov
lds
mov
and
sub
rcrb
popa
inc
sub
jb
fists
jmp
stos
mov
xchg
cmp
jae
inc
mov
dec
xchg
pusha
jle
xor
jno
pusha
xchg
inc
hlt
loope
xor
mov
cld
lahf
ja
lahf
adc
dec
in
mov
sbb
sbb
fwait
and
push
mov
mov
lods
dec
xchg
ljmp
or
sbb
mov
fildll
jp
inc
dec
into
sbb
notl
cmp
shr
scas
and
aad
cmpsl
xor
andb
fwait
mov
mov
imul
xor
adc
xchg
jg
mov
mov
pop
jbe
aad
xchg
sub
push
mov
gs
mov
js
lds
xorb
and
iret
sti
jne
aas
push
ret
mov
mov
jno
adc
inc
int
fcomps
mov
ret
addl
mov
aam
and
sub
cli
clc
mov
jge
ret
cmpsb
loope
repnz
add
xchg
adc
mov
xchg
in
mov
jecxz
lea
pop
cwtl
ficomps
mov
xor
mov
divb
jne
adc
mov
cmp
sbb
push
cmpsb
enter
inc
test
lahf
mov
lods
in
les
jmp
and
jb
loopne
push
movb
mov
sub
addr16
pop
mov
xchg
and
lock
pop
jmp
cmp
add
add
inc
insb
movsb
pop
xchg
push
in
test
pusha
inc
test
dec
ja
testl
mov
or
add
mov
testl
mov
aam
jg
outsl
fsts
ret
cltd
stos
mov
aaa
xchg
iret
shlb
int
daa
add
push
rorl
enter
lret
fstps
push
pop
xor
mov
pop
jecxz
loope
cmpsb
mov
aaa
andl
inc
out
push
lcall
nop
push
lret
test
sbb
into
push
sbb
in
inc
test
cmp
mov
inc
test
aas
imul
clc
cmp
fiadds
mov
in
pop
lds
imul
les
loop
in
and
leave
push
repz
std
test
jmp
mov
fucom
sbb
stos
mov
inc
das
pop
mov
dec
stos
stos
scas
fistl
ret
addr16
cmp
push
xchg
sbb
fcompl
and
dec
sbb
sbb
sub
ret
fsub
xchg
mov
cmp
aam
mov
mov
mov
insl
mov
sbbl
cmp
or
pop
mov
inc
addr16
push
mov
movsl
mov
or
mov
adc
xor
icebp
inc
sbb
in
mov
mov
cmp
dec
and
cwtl
mov
sbb
or
mov
popa
jmp
loopnew
pop
clc
mov
push
xlat
mov
and
popf
std
dec
cmpsl
aas
xchg
sbb
setne
dec
xchg
sbb
aad
jo
push
push
xlat
pop
mov
pop
pop
out
xchg
inc
lods
pop
sub
aad
mov
fdivp
mov
mov
fsubrs
stc
in
mov
sbb
into
ret
clc
ret
mov
inc
divl
cmp
out
sbb
fs
movl
shrl
movsl
lock
mov
mov
add
movsl
xchg
ljmp
mov
and
xor
test
movl
lds
fwait
mov
xchg
ret
dec
inc
stc
mov
and
fists
inc
std
shlb
insb
cmpsl
scas
filds
test
sub
adc
fs
ja
xorl
outsb
sub
stc
mov
push
mov
hlt
mov
jnp
dec
push
mov
test
out
popa
mov
ds
jge
rorl
clc
andb
data16
divl
mov
repnz
cmc
dec
test
fwait
mov
aas
lret
dec
inc
pop
fdivl
in
xor
lret
mov
cmp
movsl
cmp
rol
lcall
mov
lds
mov
imull
sbb
data16
and
push
sbbb
sbb
cmp
push
fsubp
fisttpl
jae
minps
inc
dec
rolb
fucomp
icebp
nop
scas
jns
push
daa
add
add
cld
add
mov
add
loope
rcrl
pop
data16
and
bound
test
ja
ss
outsb
mov
jb
add
ds
cmpl
xchg
mov
mov
cmpsl
jo
mov
sub
jne
sbb
mov
addr16
jb
jge
aaa
push
dec
jbe
jnp
sub
cmc
repz
xchg
pusha
xchg
out
xchg
pusha
cwtl
xchg
cwtl
and
mov
arpl
and
inc
pop
inc
mov
in
mov
lods
iret
or
in
xchg
jge
push
enter
jmp
xor
popa
add
outsb
lock
mov
loopne
or
push
clc
in
stc
or
lahf
cmpsb
jecxz
push
addr16
pop
aam
dec
pushf
ja
lret
imul
push
xor
cli
xor
cmp
sub
outsl
cli
frstor
push
cmp
pop
mov
insb
mov
push
mov
lcall
fs
adcl
test
sub
mov
adc
aas
pushf
daa
js
and
out
clc
int
xchg
dec
out
sti
jecxz
and
mov
xchg
cwtl
lock
aas
mov
cld
pop
cmp
dec
push
add
dec
aad
fldl
rolb
nop
push
ffree
bound
mov
cmpsb
jmp
mov
fstl
push
xchg
pop
leave
fwait
add
out
mov
stos
out
stos
add
mov
lret
xchg
cmpsl
or
scas
addb
mov
sbb
adc
ljmp
stc
mov
in
in
add
sub
mov
aam
mulb
pop
pop
jne
xor
xchg
xor
or
cmpsl
mov
pop
pusha
add
mov
push
adc
push
shlb
dec
xchg
les
jno
aas
dec
lds
shlb
test
dec
sbb
push
sub
iret
and
sbb
jns
into
scas
mov
push
popa
push
cmp
xlat
out
aas
std
xor
xor
es
ljmp
subb
inc
les
addr16
cmp
fwait
push
xchg
add
xor
pop
xor
xchg
repz
adc
sbb
fdivrp
sub
push
insb
adc
adc
popa
dec
add
inc
jbe
mov
mov
pop
aam
jmp
xor
cli
es
mov
cmp
insl
xor
in
inc
sahf
xchg
pop
push
sub
mov
mov
mov
js
cmp
fistpll
clc
add
scas
jb
dec
sub
jns
addr16
adc
and
or
push
or
sbb
cwtl
pop
psrad
jns
jmp
std
cwtl
scas
or
popf
cmp
nop
cmc
cmp
mov
lcall
ss
insb
and
cmc
jge
fisttpl
daa
popl
sbb
mov
sar
es
ret
push
mov
data16
mulb
pop
sbb
ja
xchg
xchg
les
mov
call
pop
scas
pop
test
xchg
repnz
icebp
jl
loopne
aaa
cmp
into
inc
dec
test
stos
add
jb
bound
rorb
aas
loopne
pop
repz
jg
gs
sub
adc
xchg
adc
cwtl
jecxz
sbb
dec
cltd
cwtl
cld
add
and
scas
je
cmpsb
mov
push
scas
mov
xor
push
in
out
push
out
add
mov
cmp
xor
pop
dec
stc
ljmp
xlat
dec
in
lahf
imul
push
aam
lods
sahf
cmpsl
hlt
add
repz
js
dec
push
mov
jno
jmp
sub
xlat
push
mov
and
sub
data16
add
jne
das
and
mov
xchg
call
call
lock
lcall
arpl
mov
stc
mov
cmp
cwtl
xchg
adc
xchg
sub
enter
pop
mov
xorb
sub
xchg
cmpsl
js
lret
xor
and
add
mov
xor
inc
inc
push
pop
mov
stc
inc
or
test
das
movsl
mov
sub
mov
xchg
jg
lahf
add
addb
xor
lahf
mov
sbbl
jns
pop
out
leave
scas
in
or
lea
and
xor
mov
push
inc
pop
sti
push
push
sub
nop
jp
push
icebp
je
dec
and
je
push
cmp
cmp
sqrtps
stos
push
add
push
inc
fwait
das
jp
sti
inc
sbb
push
or
push
cwtl
xchg
fs
dec
es
rcrb
dec
outsl
pop
mov
dec
jnp
fcmovnu
subl
fistps
movsl
sbb
adc
mov
lods
ss
adc
push
cmp
pop
mov
popf
mov
fucomip
xchg
or
push
std
xchg
sbb
or
mov
xor
loopne
and
fidivs
adc
and
mov
aam
daa
push
or
mov
stos
xor
clc
negb
inc
lret
andb
imul
mov
test
das
cmp
cmpb
lock
fcoml
dec
dec
mov
sbb
cmpb
rcll
shrb
mov
sbb
movsb
push
or
push
int
orb
inc
and
aas
pop
scas
loop
xchg
imulb
rol
ret
push
aam
mov
repz
add
mov
cmp
xchg
repnz
fucom
and
jg
jne
cwtl
mov
jb
xor
pop
cli
mov
mov
mov
sbb
repnz
pop
sbb
enter
jns
cmc
cmp
push
sbb
aad
dec
aaa
cmp
or
lcall
sti
jo
jb
add
fcmovnbe
pop
xchg
or
adc
shll
mov
ljmp
lahf
into
mov
popf
pop
mov
js
lea
sti
pop
cld
jb
repnz
adc
xchg
lret
call
mov
and
pop
lods
xchg
sti
fnstenv
adcl
fists
rcr
rolb
cmpsb
popa
mov
outsb
icebp
out
jle
data16
jae
or
pushl
adc
lea
cltd
mov
jae
arpl
add
jne
lea
cmp
sbb
adc
pop
mov
fcoms
adc
mov
xchg
enter
mov
dec
or
test
out
or
xlat
paddsb
or
mov
fbld
popa
arpl
cltd
jecxz
cs
xor
cli
sub
jecxz
movsl
xor
ds
jecxz
jle,pn
inc
push
lret
mov
in
in
mov
scas
test
lcall
sbb
inc
rcll
fs
adc
orb
mov
jne
inc
stc
jle
jle
xorl
lret
jecxz
test
loopne
scas
lods
cmp
sti
sub
fisubs
data16
aad
cmp
sbb
xchg
ja
mov
sub
hlt
xchg
jmp
push
xchg
aam
out
mov
sbb
imul
scas
and
and
out
ja
pusha
jecxz
ja
mov
mov
mov
imul
adc
dec
movsb
adc
pop
loop
fs
inc
inc
xchg
lock
xchg
imul
cwtl
mov
das
fldcw
test
int
icebp
inc
jp
push
sbbb
out
es
je
and
jg
inc
test
push
pop
push
jmp
adc
movsl
enter
mov
cwtl
jno
xchg
lcall
add
gs
pop
mov
add
ret
mov
pop
jne
sub
mov
mov
pop
out
frstor
xchg
and
loop
adc
add
sub
mov
cmp
and
pusha
pop
mov
icebp
clc
push
push
inc
repz
fwait
sub
mov
dec
inc
mov
adc
dec
add
vminsd
outsb
dec
sub
test
and
cmpsl
push
rclb
outsb
lea
out
das
and
adc
jle
mov
xchg
into
lea
inc
add
mov
fcmove
push
fisttpl
inc
mov
push
hlt
inc
xchg
popf
sbb
and
xor
fsubrs
ret
adc
cmpb
mov
and
pop
cmp
add
add
adc
or
mov
and
jbe
out
sbb
scas
xchg
cltd
xchg
mov
adc
mov
sarb
dec
stos
pop
scas
js
pop
scas
leave
flds
jbe
mov
cmpsb
sub
or
mov
hlt
sahf
jae
out
push
dec
xchg
jbe
xchg
xlat
cmpsl
ljmp
inc
push
enter
insl
xlat
fbstp
testb
out
add
inc
fadd
divb
push
mov
xor
js
xchg
jecxz
in
xchg
mov
lcall
adc
sub
outsb
je
mov
divb
pop
mov
pop
sahf
adc
mov
bound
loopne
test
rolb
shrl
test
add
cmpsb
mov
in
fs
push
arpl
mov
sbb
add
popf
jae
sti
outsl
jae
dec
mov
in
xchg
cmp
fs
stos
lods
sbb
cwtl
fdivl
out
sub
jmp
push
mov
xlat
add
inc
inc
mov
loop
adc
add
jge
dec
push
loope
sbb
mov
scas
sub
cmp
push
stc
scas
rcrl
testl
pusha
out
mov
push
push
add
fs
dec
add
and
outsb
call
movsl
ss
lret
out
jmp
insl
sbb
jbe
xchg
inc
pop
xor
pop
loope
mov
adc
inc
pop
in
andb
inc
mov
pop
test
add
daa
adc
outsb
adc
pop
push
xchg
fnsave
roll
mov
adc
in
icebp
cmp
ljmp
sarl
inc
add
cvtps2pd
pop
add
jno
stos
push
cmc
in
push
and
lds
into
je
inc
lahf
xchg
lret
jnp
push
jb
divb
in
out
jnp
inc
xor
or
mov
adc
fldt
rol
cmp
imul
sahf
in
femms
add
xchg
movsb
pusha
frstor
icebp
aas
dec
int3
xchg
es
faddp
repnz
xlat
pushf
push
adc
push
sahf
mov
adc
gs
inc
stos
jmp
cwtl
jnp
insl
movsb
sbbb
cmpb
jg
sbb
sub
repnz
lahf
or
fcomps
push
rcrb
sub
fs
mov
scas
cmc
add
push
lahf
push
int3
dec
push
dec
push
iret
inc
fistpl
repz
push
rclb
xchg
divl
ficompl
dec
dec
daa
fimuls
push
xchg
or
push
xchg
aam
mov
pusha
ja
mov
in
add
inc
sbb
gs
xchg
dec
and
xor
mov
out
in
loopne
push
xor
das
inc
xchg
mov
lds
sub
push
adc
cld
push
mov
stos
add
jnp
sarl
leave
sbb
aaa
jo
push
mov
dec
adc
mull
mov
dec
cmp
xchg
call
mov
jbe
loope
add
fistps
dec
or
ret
stc
xor
mov
mov
fidivrs
mov
faddl
push
mov
shufps
xor
pop
ss
pop
mov
jne
dec
mov
push
xor
mov
cmp
packssdw
add
xchg
stos
test
push
testb
pop
add
push
mov
sbb
mov
lcall
mov
pop
xchg
pop
xchg
xchg
lds
add
xor
das
int3
jae
jbe
bound
addl
pop
cwtl
push
mov
pop
or
cmp
imul
int3
scas
icebp
and
adc
in
add
xchg
and
rolb
or
out
push
or
mov
xchg
pop
inc
add
testl
cld
aaa
out
subl
mov
or
dec
push
cs
adc
ret
push
int3
cmp
xor
jns
jns
std
imul
movsl
or
push
add
pop
add
mov
inc
pop
push
ret
fistl
hlt
into
mov
sub
mov
xchg
out
adc
daa
pop
inc
push
push
jecxz
int3
jno
add
scas
inc
or
push
or
lahf
jnp
push
push
jb
mov
mov
push
jge
dec
fidivs
int3
mov
xor
iret
add
dec
add
pop
or
push
cmpl
roll
arpl
mull
or
aam
fnstsw
movsl
mov
out
cmpl
outsl
mov
and
imul
xor
mov
cli
sbb
mov
mov
insl
push
sbb
repz
sbb
xlat
and
idivl
sub
mov
repnz
inc
enter
arpl
xchg
push
fcmovnu
out
stos
sub
movsb
sbb
testb
test
out
adc
inc
sbb
mov
cmp
divl
fcompl
cltd
inc
or
cmp
aas
fstp
aas
in
cmpsb
insb
cmp
fcompl
cmp
addr16
pop
mov
daa
mov
and
nop
xchg
push
pop
cmpl
mov
jmp
inc
adc
and
pop
dec
push
sbb
loopnew
and
add
fwait
iret
lret
cmp
sbb
je
pop
mov
sbb
inc
mov
inc
mov
xchg
xchg
cltd
pop
xor
inc
cmp
outsl
bnd
les
xchg
inc
std
je
mov
adc
xor
aam
mov
aam
jo
repnz
xchg
mov
idivb
dec
xor
out
cmp
push
jmp
xor
cwtl
mov
xor
xor
mov
ljmp
int3
xchg
into
sbb
mov
dec
push
dec
xchg
dec
inc
jns
add
ljmp
mov
add
mov
rorl
xor
add
cmpsl
pop
les
xchg
mov
sbb
shl
push
push
adc
subl
jno
xor
movsb
pop
ljmp
xor
mov
cwtl
insb
aaa
mov
cmp
jno
cmp
mov
or
mov
mov
icebp
test
mov
call
pop
inc
test
addr16
loope
dec
test
pusha
arpl
add
fiadds
mov
jl
repz
aam
jnp
dec
mov
add
cs
lods
dec
aam
jne
mov
adc
testb
mov
sub
shl
iret
cmpsb
outsl
inc
jmp
int
push
xor
rcrb
sbb
add
inc
inc
mov
mov
fs
jl
lret
sub
add
jg
xor
dec
mov
imulb
mov
in
fadds
insb
out
enter
js
push
xor
xor
sti
ffree
or
jbe
mov
popa
addb
sbb
pop
jnp
fidivrs
test
fwait
or
clc
pop
sub
push
cs
sbb
lock
mov
jmp
mov
ds
pop
inc
lods
mov
outsb
xorb
shrl
adc
movsl
jb
or
lahf
push
in
push
je
ja
in
jg
push
repnz
cmp
mov
jne
pop
mov
shlb
lea
xchg
xchg
add
addr16
movb
data16
xor
ss
popa
xlat
lcall
adc
popf
leave
xchg
lds
nop
cmp
call
lret
or
sub
aam
add
gs
fisttpl
subl
aas
xchg
dec
das
mov
mov
test
std
movsl
lcall
repnz
jmp
dec
cmp
pop
cld
mov
movsl
in
inc
js
xor
imul
push
pop
popa
clc
mov
xchg
sarb
pushf
cmp
mov
jbe
cmp
ficoml
cld
push
js
inc
jno
and
cwtl
jns
lret
xchg
popa
mov
and
jnp
push
leave
stos
in
jmp
add
inc
push
loope
stc
lahf
mov
adc
dec
push
mov
gs
inc
and
jne
jge
repz
ficompl
and
ret
faddl
lock
mov
cs
and
push
or
fnstcw
xor
mov
sbb
pushl
mov
or
xchg
jmp
push
sbb
xor
cmp
push
jmp
sti
pop
aaa
push
and
lret
xchg
sub
std
or
mov
mov
jno
pop
mov
pop
pushf
fisubl
movsl
dec
int3
push
mov
inc
lods
jb
into
jne
mov
sbb
sub
in
jb
lret
mov
adc
mov
push
dec
int
mov
sbb
aaa
and
xlat
std
movb
jno
fisttpll
in
cwtl
es
dec
das
mov
subb
push
or
insb
cmp
mov
jle
sbb
filds
push
adc
add
mov
lock
in
inc
lods
adc
jmp
push
pop
adc
pop
iret
push
cmp
sub
xor
mov
lret
int3
jge
sub
sti
out
je
cmp
and
fwait
push
dec
or
dec
add
jbe
ds
movsl
pop
jbe
inc
cmp
mov
cmc
pop
xchg
sbb
rclb
mov
sub
inc
inc
sbb
fwait
iret
call
and
shl
fs
mov
dec
inc
pop
jecxz
dec
insl
mov
in
call
or
inc
imul
sarb
mov
mov
sahf
insl
je
gs
aas
cli
aas
add
pop
loop
mov
test
sub
and
int3
mov
pop
ret
and
inc
add
stc
pop
daa
test
sub
fldz
or
gs
fcmovne
in
rol
mov
mov
divb
popf
add
fisubrs
lret
out
pushf
jnp
push
jbe
divb
hlt
stos
or
cwtl
jg
sub
fistl
add
mov
jns
outsb
lea
mov
dec
dec
push
mov
xor
lds
fisttpll
xchg
xchg
lock
sbb
mov
or
pop
dec
insb
cltd
mov
xlat
jbe
dec
xchg
add
test
scas
shlb
mov
adc
iret
shl
sbb
movsb
sbb
adc
nop
xchg
cwtl
leave
mov
gs
push
adc
sti
jbe
inc
push
sub
movb
out
outsl
jp
popf
dec
sub
dec
int3
andl
data16
stos
hlt
xor
cmpsb
rcll
sbb
and
ret
push
lods
leave
adc
les
jmp
jmp
popa
es
mov
pop
test
pusha
ret
xchg
inc
jp
sub
adc
and
dec
outsb
movsl
js
sub
mov
rcl
shll
test
int3
mov
outsl
int
pop
dec
xchg
xchg
cwtl
xchg
mov
test
push
jecxz
adc
pushf
out
fs
into
and
jnp
mov
ret
aaa
mov
ss
inc
jecxz
stc
xor
cli
repnz
mov
xor
pop
cmp
cltd
push
and
aam
push
mov
pop
fsubs
enter
inc
pop
fisttpl
mov
push
mov
fildll
mov
pushf
inc
jne
cmpsb
lods
rcrb
notl
push
sub
sbb
ficomps
addr16
adc
aam
inc
cs
in
push
rol
lea
xchg
call
inc
or
pop
xor
pop
jae
jbe
push
loope
push
mov
xchg
ret
xchg
mov
and
nop
fstps
jp
sbbb
cli
pop
xchg
rorl
mov
dec
mov
leave
add
jb
xor
xor
rolb
and
dec
and
cmpsb
mov
lds
enter
jmp
or
mov
lret
fbld
and
dec
sbb
mov
xor
aas
xlat
ja
stos
shrb
or
jle
pop
arpl
lock
sbb
mov
lret
add
xor
mov
dec
fsubs
mov
mov
adc
imul
lcall
dec
sti
pop
dec
js
sub
add
xchg
mov
loope
shrl
lock
aas
insl
push
dec
push
and
fisttps
xchg
push
jmp
lret
call
dec
mov
movsl
cmp
out
cs
jecxz
jns
sti
push
lds
mov
les
cmc
das
sub
ret
xor
insl
mov
out
imulb
jo
shll
sbb
add
pusha
lods
lds
and
cmp
andl
or
mov
loope
jns
sti
psrlq
iret
or
shll
out
stos
rol
lea
loop
in
loopne
mov
jne
pop
arpl
inc
and
xchg
test
mov
leave
imul
jno
mov
push
enter
mov
stos
outsb
xor
or
lock
xor
out
icebp
insb
and
cmp
pop
xor
cmp
xor
mov
scas
adc
push
out
in
pop
push
and
push
add
push
mov
jnp
push
daa
out
std
rorl
adc
jo
sbb
adc
nop
pop
repz
pop
xor
mov
fisubl
dec
outsl
sub
jne
movsb
push
mov
inc
hlt
or
mov
xlat
gs
jp
repz
pop
cmpsb
or
into
clc
add
cmp
push
int3
push
pushw
inc
push
jbe
mov
or
popf
push
jge
adc
xor
and
sub
jns
repz
leave
sbb
pop
dec
addb
jmp
fsts
cmc
xor
filds
mov
cmp
xchg
dec
mov
loope
inc
sti
or
fiadds
scas
in
jg
cmc
arpl
push
mov
in
dec
lds
enter
xchg
adc
push
lock
fnsave
dec
pop
cmp
loopne
out
mov
add
pop
mov
addr16
sub
jae
xchg
outsb
sbbl
xchg
mov
dec
aas
imul
inc
mov
call
mov
mov
xor
rep
ds
and
push
pusha
mov
pushf
ret
out
cmp
jo
pop
iret
lret
jecxz
pop
cmp
movsb
mov
push
xor
or
jae
push
lcall
rol
ljmp
xor
sub
jmp
pop
sbb
daa
jle
into
lret
sti
cmpsb
testl
aad
aam
cltd
or
das
mov
xor
mov
and
insl
pop
sub
push
push
push
clc
scas
push
cmpsb
sbb
sub
pop
test
enter
lds
les
cltd
fs
cmp
push
fnstcw
add
xlat
outsb
and
push
add
icebp
fs
fwait
xchg
inc
mov
or
arpl
pop
mov
push
inc
stos
sbb
jno
cwtl
adc
cmpsb
add
push
sbb
push
movsl
mov
push
pop
lahf
cmc
add
add
gs
and
pop
subb
dec
push
push
lods
jne
es
filds
dec
scas
pop
ret
ljmp
in
cmp
fldt
lds
pop
and
addr16
inc
pop
push
in
adcb
call
pop
and
inc
jbe
xor
mov
into
add
jg
and
jnp
xor
ljmp
xchg
mov
push
push
lea
mov
and
adc
bound
pop
pmuludq
mov
pushf
lea
mov
fs
imul
push
jae
pop
push
add
test
xor
pop
fs
aad
stos
push
loope
in
shr
psubsb
ret
adc
arpl
ss
sbb
insl
cmp
popa
arpl
ds
mov
insb
mov
pop
or
decl
cwtl
pushf
mov
popa
pushf
add
ret
imul
cmp
aaa
test
or
jmp
pop
in
sbb
je
xchg
add
rorb
cmp
gs
mov
into
outsl
aam
pop
stc
shrl
int3
and
or
cmp
fistpll
adc
pop
in
jge
std
ljmp
fmull
push
push
or
int3
sbb
adc
dec
push
cmp
icebp
call
sub
sbbb
push
shrb
int3
cmp
cmpsl
sbb
pop
outsl
jbe
in
pop
xchg
addb
xor
lret
mov
and
sbb
push
fbld
jno
mov
mov
cmp
std
push
mov
pop
pop
sbb
lds
inc
cwtl
mov
out
and
lock
aaa
push
lret
or
and
xchg
mov
fimull
out
push
add
add
dec
mov
stos
dec
jo
pop
jb
fwait
pop
iret
mov
mov
icebp
sub
sbb
inc
cli
inc
push
out
sbb
out
arpl
loope
fld
push
mov
cmp
xlat
pop
test
scas
and
xlat
mov
jns
test
sbb
xor
test
icebp
jle
test
cli
loope
mov
idivl
loopne
roll
mov
mov
repz
xor
cmc
sbb
subl
ja
outsl
or
loope
call
sbb
mov
jnp
push
adc
aad
dec
sbb
rorl
loop
out
ret
push
mov
repz
cmp
push
imul
hlt
rorl
in
xor
lret
outsl
sub
add
xchg
push
sti
mov
dec
loope
jle
icebp
js
sbb
push
push
icebp
out
rep
sbb
xor
or
xchg
in
call
push
jns
mov
dec
clc
add
xlat
dec
add
dec
inc
lods
iret
jmp
add
xchg
cmp
out
adc
cmp
cmp
xorb
mov
js
jns
and
sbbl
in
enter
sub
xor
inc
pop
filds
inc
pop
ret
call
lds
xor
aaa
cmc
popf
ret
push
inc
cmpsl
roll
pop
popf
popf
fldl
and
stos
mov
jns
scas
js
and
xchg
jge
mov
pop
mov
xchg
jle
push
clc
fs
mov
aam
cmc
mov
push
or
mov
cli
mov
pop
scas
lahf
popa
sbb
fwait
dec
mov
rorb
loope
shlb
cs
jae
push
aam
dec
push
jmp
fnstsw
sarl
and
pop
decb
cmpsl
mov
push
aad
sbb
xchg
inc
popf
call
cs
sbb
dec
add
lods
lcall
add
inc
test
fistpl
sub
push
cmp
or
sti
out
lock
sbb
and
mov
hlt
fadd
pop
xor
and
inc
jle
in
cwtl
xor
scas
jae
icebp
sbb
leave
popf
out
fistpl
sbb
push
mov
adc
repnz
or
fldz
xchg
add
fistl
mov
jb
mov
sahf
fldt
mull
js
out
cmp
ret
mul
mov
mov
mov
xor
int
aad
gs
test
out
push
ret
ret
cmp
dec
cld
rcl
inc
lea
mov
xchg
lds
cmc
dec
xor
daa
xor
mov
add
jae
add
sar
or
lahf
sahf
test
fs
scas
xchg
out
loopne
ficoml
adcb
mov
push
push
test
cmp
inc
add
ret
mov
pop
stos
testl
sti
lock
mov
stos
jb
sbb
mov
mov
movsl
dec
or
je
jl
shll
mov
push
and
loop
push
jp
push
fwait
out
out
mov
mov
test
cli
mov
fs
jbe
mov
lcall
mov
adcb
adc
popa
adc
outsl
sahf
fwait
stos
cmp
pop
int3
and
sub
imulb
and
ret
pushf
popf
push
stos
add
or
inc
mov
mov
out
out
mov
clc
mov
mov
mov
mov
je
add
dec
adc
int3
adc
jge
addr16
iret
jnp
inc
out
mov
jp
dec
outsb
mov
lret
push
cmp
adc
jno
mov
cmp
xor
mov
test
jne
je
xor
inc
or
and
push
addb
pushf
push
lds
shrl
mov
lret
or
pop
mov
mov
cld
mov
fbld
cmp
iret
in
fcmovnu
out
rclb
dec
xlat
dec
mov
js
mov
jb
adc
inc
mov
push
insb
or
popa
mov
fcoml
sub
push
push
xor
inc
mov
sub
inc
leave
xlat
les
rorb
jnp
scas
data16
push
rolb
aad
pop
xchg
mov
adc
sbb
out
mov
adc
cmp
cmc
and
and
dec
andl
nop
in
movsl
ja
mov
imul
push
icebp
dec
arpl
cmp
dec
arpl
add
pop
adc
xchg
dec
in
sub
sub
pop
hlt
into
cmp
ljmp
aas
adc
lcall
or
ret
pop
scas
int
or
fnstsw
jae
std
adc
cs
mov
mov
xlat
inc
or
mov
add
addl
lods
jo
sub
mov
aam
and
sub
dec
adc
stc
add
push
sub
inc
sbb
lcall
push
movsl
xor
pop
shlb
loopne
mov
daa
add
adc
ss
shll
cmp
cld
sti
and
lahf
pop
ficoml
lock
mov
push
addr16
in
sbb
cmp
push
jns
lahf
lcall
inc
jmp
repz
dec
inc
push
ljmp
inc
adc
jae
fs
sbb
push
leave
or
je
scas
xlat
mov
in
add
inc
push
shrb
dec
cmc
jne
jbe
inc
mov
cmpsb
arpl
nop
loop
into
ud2
les
mov
pusha
fld
inc
call
xchg
and
int3
arpl
sub
xorl
sub
sete
push
or
adc
shl
xchg
inc
pop
mov
push
mov
pop
dec
outsb
sahf
xor
das
xor
lods
and
xchg
inc
scas
jp
cmp
aam
cs
xchg
inc
cmp
mov
shlb
pop
sbb
push
out
jle
push
out
cmp
insb
mov
sbb
lret
scas
and
push
aam
addb
and
fdivl
sbb
sbb
sub
lret
xchg
jne
jge
jae
mov
cmpsl
lcall
les
mov
push
sub
popa
popl
xlat
xchg
leave
push
adc
jns
ficomps
cltd
repnz
popa
jle
test
cmpsb
sbb
xchg
xor
and
dec
push
shrl
lods
mov
ficoms
mov
rcrl
lods
pop
xchg
mov
push
and
icebp
lods
adc
pop
fstpl
dec
mov
xchg
testb
pop
pop
in
mov
mov
pop
cmpsb
mov
mov
loope
mov
das
cltd
call
ds
xchg
mov
jo
arpl
dec
outsb
je
xor
push
sbb
sbbl
dec
xchg
xchg
movl
xchg
out
ds
adcb
push
sub
cmc
jecxz
aam
or
pop
adc
shl
aaa
push
fldcw
test
enter
cmpsl
or
rcrl
rorb
lret
and
out
xchg
mov
out
push
or
aad
and
out
add
mov
stos
pusha
pop
fimull
lahf
xor
push
mov
xchg
jne
mov
or
jnp
add
sub
andb
and
adc
ret
sub
shr
lret
adc
push
cwtl
inc
mov
popa
mov
mov
push
cmp
movsb
mov
cmp
testb
in
mov
cld
jne
andl
mov
imul
xchg
dec
roll
ja
lods
xchg
je
jns
movsb
add
sbb
ja
mov
mov
xchg
jbe
out
push
rcl
ljmp
push
lds
aad
stos
fwait
subb
dec
mov
and
mov
jmp
aam
and
jnp
mov
sub
xor
jne
insb
sbb
jne
lret
aam
int3
xlat
vsubpd
xchg
jae
sub
insl
inc
ljmp
nop
push
lret
pop
insl
sub
or
int3
imul
mov
je
pop
clc
pop
sbb
cmpsl
mov
xchg
mov
adcl
xor
jmp
mov
cmp
adc
jnp
pop
or
sub
pushf
sahf
and
dec
rclb
ljmp
pminsw
dec
jbe
shrb
in
xchg
pop
add
shr
xorps
popf
pop
ud0
inc
pop
jle
sahf
pop
test
xchg
arpl
mov
push
push
das
dec
test
or
xor
fdivrs
cmp
fs
dec
inc
pop
xor
mov
lds
fwait
dec
cmp
mov
faddl
xor
mov
faddl
cmp
in
xorb
mov
cld
scas
inc
into
inc
cmpsb
ss
sbb
pop
mov
pop
cmp
cmp
jmp
dec
in
mov
and
out
cmp
xor
or
ss
loopne
icebp
std
push
sub
rolb
sub
jno
mov
mov
jae
mov
mov
inc
jbe
dec
xor
pop
xor
add
in
jl
push
test
call
push
add
dec
jb
andnps
push
stc
pop
xchg
adc
push
dec
addl
int
fnstcw
and
xchg
loop
mov
movsl
xor
and
icebp
and
fildl
mov
mov
xchg
mov
xchg
sti
jg
test
ljmp
ret
pop
sbb
into
xor
mov
vunpcklps
ljmp
incb
or
mov
clc
cmpsb
jbe
iret
std
mulb
sbb
lret
mov
popa
add
fs
andl
loopne
and
jp
ficompl
mov
jge
pusha
std
pop
icebp
scas
imul
xchg
rolb
adc
or
push
fsubrs
jg
add
loope
popf
push
dec
out
mov
xchg
inc
ds
cwtl
hlt
in
xchg
push
sbbb
pop
ljmp
arpl
push
scas
in
adc
in
shrl
mov
jnp
daa
or
inc
nop
inc
lds
pop
jae
and
push
push
sbb
adc
inc
xchg
push
stc
or
js
popf
mov
out
shll
negb
dec
jne
fiaddl
dec
jae
movsl
inc
sub
jne
push
aas
inc
ret
cli
cld
and
loopne
pop
mov
subl
rcll
mov
popa
fildl
shlb
jl
xchg
testl
out
adc
and
push
pop
cmovp
int
cmp
mov
push
loopne
rol
push
aas
lret
out
xchg
pop
lahf
pusha
jbe
and
add
unpckhps
mov
ffree
xchg
mov
das
xor
and
mov
dec
sub
repnz
sbb
mov
or
popa
fnstenv
jge
xor
sti
std
push
jge
in
dec
mov
and
hlt
insb
jle
push
and
or
cld
inc
adc
or
inc
rorl
dec
fcomp
into
popa
test
jne
push
jno
daa
sub
pop
popf
cmp
pop
ss
push
dec
fidivrl
pop
inc
stos
pop
es
adc
cwtl
inc
int
daa
mov
fs
jle
stc
jno
mov
xchg
sar
call
nop
ret
lcall
cmp
xor
and
filds
xor
xor
neg
lds
lret
mov
push
sbb
mov
sub
sub
pop
push
xor
lea
das
push
jns
jnp
push
mov
mov
adc
inc
pop
mov
scas
sub
or
xor
insl
push
rol
call
cmp
cmpl
pop
fwait
cmp
xchg
xor
adc
clc
dec
fistpll
repnz
xor
cwtl
sub
cmp
push
push
sub
jl
add
cli
fcmovnbe
test
test
adc
js
and
mov
sbb
push
sahf
insb
aam
decl
mov
cmp
fiaddl
mov
cmp
cmpsl
jp
or
mov
xor
push
inc
fdivs
insb
mov
add
cmp
cmp
sub
das
lea
sub
imul
add
sbb
and
icebp
mov
or
jb
fxch
adc
or
xor
and
popa
aad
pusha
lret
call
xchg
mov
pop
call
shlb
and
imul
out
imul
out
xor
add
pop
popa
pop
bnd
outsb
clc
idivl
jmp
inc
pop
mov
add
mov
popa
bound
in
pop
je
push
mov
or
add
mov
cmpsl
push
incb
outsl
sar
sbb
push
fstpl
test
cld
popa
xor
sub
rcl
push
ja
mov
xor
xchg
xor
loopne
or
add
gs
loope
aam
insl
or
fwait
mov
aam
xchg
icebp
out
data16
jle
fdivr
loope
int3
fs
pusha
xorps
aas
xchg
sti
lret
cmp
notb
dec
mov
sbb
adc
inc
cmpsb
mov
mov
mov
cmp
inc
outsb
aaa
cmpsl
xchg
sub
sbb
in
dec
mov
out
pusha
shl
xor
insl
jge
mov
ja
data16
cmc
jl
sbb
mov
orl
xor
inc
imul
push
push
std
in
test
xchg
test
negb
xchg
daa
and
mov
int3
into
test
pop
sti
in
fstl
in
and
jp
xlat
iret
test
cmc
pop
cmpsl
mov
ss
push
insb
sub
sti
ret
push
mov
xchg
xchg
divb
mov
sbb
jge
sbb
sbb
jge
mov
add
sbb
jge
shrb
pop
mov
fcoml
xor
mov
insl
mov
movsl
inc
pop
rcll
loop
adc
xor
pop
pushf
imul
xor
jno
lret
or
jge
nop
gs
dec
jno
pop
test
pop
insb
xchg
loop
mov
pusha
movsb
bound
ss
int3
mov
bound
aaa
stos
aas
imul
xor
add
mov
fwait
je
ucomiss
cmpsl
mov
aas
mov
lods
lcall
std
inc
stc
push
mov
loopne
push
clc
mov
cmp
stos
pop
xor
shll
rorb
popa
test
jg
and
lods
je
inc
ds
iret
mov
imul
mov
hlt
sbb
xorb
sub
xor
inc
inc
stos
dec
sbb
xchg
pop
add
fadd
adc
in
icebp
jo
cli
and
lds
sbb
out
sbb
xor
jae,pt
xorl
cmp
mov
and
lods
jns
iret
leave
push
sub
add
push
mov
push
stos
ljmp
loopne
and
cmpsl
xor
fmul
mov
cwtl
mov
push
aam
sbb
xchg
sbb
ss
mov
imul
test
in
icebp
cltd
xchg
push
filds
push
je
aaa
mov
loope
push
enter
adc
inc
push
mov
jnp
repnz
pop
and
clc
out
shl
bound
sub
subb
mov
insl
mov
mov
push
sbb
adc
inc
dec
out
cltd
xchg
imul
jmp
cltd
jle
xchg
dec
xor
ss
movsl
and
data16
cmp
addb
cmp
cmpsb
dec
stc
sub
mov
xor
add
and
cmpsb
or
mov
aas
sub
mov
ds
cmp
add
add
sbb
repnz
dec
jb
push
test
add
nop
popa
out
pop
sbb
in
mov
mov
popf
cmpsb
outsb
pop
push
xchg
xchg
mov
ficompl
sahf
jae
dec
adc
daa
or
mov
mov
cli
insl
mov
lds
ljmp
clc
xchg
cmc
test
call
andl
shrb
aaa
adc
aas
push
fsubrs
jg
cmp
mov
mov
inc
aaa
mov
or
sub
xchg
mov
xchg
mov
and
push
pop
mov
je
adc
sbb
mov
scas
lcall
testb
sbb
pop
aas
lods
jns
jbe
adc
mov
sahf
jbe
fmulp
call
dec
movsb
out
cmp
or
inc
fsubs
add
add
cmp
push
sbb
or
mov
mov
movsl
popf
sbb
or
movsl
femms
push
or
movsb
icebp
iret
jecxz
bndstx
sti
cli
jo
hlt
test
xchg
cmp
adc
inc
cwtl
insb
pop
dec
dec
loopne
mov
orb
push
mov
mov
xlat
adc
fwait
push
sbb
jno
sbbl
lret
clc
pop
or
cmpsl
pop
mov
mov
pop
sub
jle
xchg
mov
clc
and
jge
int
mov
lods
adc
xor
leave
add
and
pop
aaa
loop
and
enter
cmp
sbb
cmp
pop
dec
mov
pop
pop
daa
xchg
fiadds
inc
in
and
dec
sti
repnz
filds
add
xchg
es
ficoms
sbb
or
fs
lahf
test
add
xor
and
and
test
mov
cmp
and
rcr
repnz
mov
imul
push
push
outsl
and
outsl
sbb
out
sbb
dec
mov
cwtl
roll
adc
cmp
out
mov
xchg
loope
lret
cwtl
mov
sub
lock
xor
push
jbe
outsl
jl
mov
push
fisubrl
lods
push
jbe,pt
jecxz
sub
sub
and
aad
cmp
adc
jecxz
push
jb
and
or
test
jge
aaa
mov
repz
ss
push
xorb
out
out
pop
loop
fst
js
repnz
xchg
add
mov
ds
ret
mov
jo
loop
popf
movsb
push
js
xchg
ss
lods
stos
lret
popa
jp
jle
in
cmp
jge
jne
jecxz
addr16
pushf
cmp
je
mov
cmp
xor
shl
mov
ret
dec
fiadds
add
dec
scas
xchg
mov
ds
setnp
movsl
cli
repz
call
sbbb
lahf
push
push
ljmp
leave
cmpb
cmp
aaa
leave
and
dec
ja
jnp
mov
push
mov
mov
sub
sbb
mov
jns
pop
xchg
push
mov
lods
jp
xor
sbb
nop
ja
int
ret
insb
ds
mov
int3
sub
push
or
insb
ret
nop
mov
pop
js
jmp
std
pop
jne
and
dec
mov
mov
cmp
xor
or
pop
and
repnz
mov
cmp
or
dec
cwtl
and
jns
lock
push
cmp
out
cmc
add
fisttpl
pop
xchg
scas
incl
push
mov
push
xor
sub
loopne
and
mov
sbb
inc
xchg
inc
mov
adc
pushf
unpcklps
cmpb
lds
mov
sbb
ja
push
gs
jns
xor
imull
push
push
sbb
add
out
pop
sub
push
daa
mov
insb
mov
scas
gs
std
inc
testb
and
xor
inc
sub
jmp
insb
movsb
dec
mov
repnz
je
fucomip
pop
outsb
jns
lds
fsubrp
jg
divb
xor
xchg
popa
js
je
les
sarl
dec
xchg
xchg
inc
adc
adc
or
stc
test
pop
imul
out
sbb
scas
lret
or
xlat
add
cmp
and
popf
cmp
js
push
lods
adcb
loopne
insl
cmp
ret
insb
and
movsl
popa
dec
inc
xchg
in
dec
xchg
mov
lods
dec
pushf
cmp
jno
cmc
ss
scas
andl
shlb
cltd
xor
mov
lods
sahf
jp
jge
aaa
adc
popf
lock
mov
mov
icebp
add
push
jno
hlt
push
loope
pushf
xchg
or
in
enter
adc
in
sbb
ds
or
adc
inc
outsb
lods
add
mov
in
jno
enter
ret
push
popa
cmp
or
loop
mov
in
adc
nop
cltd
in
adc
out
mov
fists
dec
cmp
cmp
mov
out
push
mov
rorb
mov
popa
pop
cmpsb
lret
xchg
add
in
nop
dec
les
call
jle
xlat
js
shrb
sub
imul
aas
push
scas
lcall
cwtl
rolb
or
pop
or
and
lods
arpl
popa
jno
add
cmpsl
and
daa
popf
aad
inc
aas
or
lret
cmp
pop
movsb
insb
add
cmp
and
sarl
jecxz
cmpb
dec
xchg
stos
hlt
add
xchg
xlat
rorl
stos
rclb
fnstcw
fidivrl
mov
negl
fldenv
nop
push
int3
out
jecxz
popa
sub
outsl
pop
push
xchg
jl
jne
mov
mov
add
jg
std
mov
and
test
push
pushf
mov
out
sub
push
jbe
outsb
outsb
imul
dec
or
std
shlb
int3
cmp
push
in
add
loop
add
imul
jg
xor
inc
xchg
xchg
pop
and
aad
mov
inc
push
sbb
lret
or
fsts
adc
dec
sbb
xchg
cli
shlb
mov
push
cmp
mov
out
dec
push
pop
out
sub
lret
sub
hlt
lods
jmp
cmp
xchg
cmp
notb
push
mov
xor
add
lods
xor
and
cld
pop
lods
or
mov
pushf
jbe
xchg
imul
sbb
pop
mov
and
mov
dec
ss
int
insb
in
dec
test
mov
cmc
sbbl
xchg
jp
pop
xchg
loop
inc
rol
add
mov
ss
jl
mov
push
sub
pop
in
cld
les
pop
cmp
mov
and
leave
lods
add
nop
xchg
andb
mov
cmpb
add
mov
imul
aad
sub
mov
lahf
and
pusha
repnz
divl
es
or
jnp
mov
mov
rcl
inc
nop
dec
fmull
int3
leave
dec
push
cmpb
sub
insb
sub
outsb
pusha
pop
aaa
push
sbb
xchg
lds
out
xor
pop
pusha
pop
push
scas
out
sub
test
lahf
push
pop
fwait
test
test
test
push
mov
mov
mov
loop
xlat
pusha
push
aad
cmp
mov
aas
jb
aam
js
insl
pop
fucomp
jbe
mov
nop
fisttpl
push
xor
adc
fsubl
or
xor
add
jg
xor
sub
out
out
mov
push
loop
lea
pop
subb
jno
faddl
cmp
adc
xchg
cltd
lcall
cld
dec
in
inc
dec
stos
pop
and
jae
xchg
adc
push
addr16
test
dec
mov
ja
arpl
addr16
lret
dec
roll
sarl
insl
lahf
loop
cwtl
cmp
sarl
enter
inc
cwtl
sbb
xchg
jmp
adc
outsl
pop
add
xchg
call
leave
xchg
sbb
call
adc
mov
or
out
and
in
mov
rcrl
int
test
stc
push
pop
popl
idivb
fcom
xchg
mov
popa
mov
test
adc
inc
jb
fdivs
popf
mov
dec
repz
repnz
sbb
shll
dec
push
data16
push
arpl
fdivl
scas
outsl
sbb
scas
lret
add
jb
rcrb
or
and
sub
adc
lcall
cmc
pop
int3
jp
xor
cs
xchg
push
add
mov
sti
in
xlat
ret
xor
pop
cs
sub
sbb
lock
mov
insl
jbe
jne
inc
mov
xor
andb
imul
adc
es
pop
push
mul
push
lock
dec
mov
cld
test
pop
aas
push
daa
cwtl
or
repnz
xchg
mov
or
adc
jo
fadd
sarl
scas
fmull
jle
ficoml
cmp
scas
sub
jae
ljmp
lcall
add
adc
test
outsl
jnp
cmp
loop
jb
pop
xchg
and
dec
xchg
cltd
mov
sbb
fldt
call
lret
cmp
clc
xlat
pushf
push
sub
into
xchg
mov
xchg
loope
dec
inc
in
das
addr16
and
pop
pop
jle
jno
sub
pop
ja
xchg
ljmp
cli
popa
inc
lcall
push
xchg
dec
push
aaa
or
aad
clc
pop
inc
jno
push
imul
pop
cmp
sahf
sub
into
sbb
jbe
shl
dec
ret
push
cmp
ljmp
std
jge
jecxz
and
xchg
dec
push
out
push
dec
push
jle
shll
mov
loop
cmp
push
mov
aam
dec
sti
mov
ja
mov
in
outsb
mov
leave
in
popa
mov
loope
add
mov
mov
data16
shrl
inc
xchg
or
push
cmp
jmp
icebp
popa
sbb
fwait
imul
add
hlt
negl
arpl
inc
sbb
pop
sub
and
ljmp
add
mov
xor
jl
inc
leave
popa
dec
repnz
mov
movsb
jl
push
sbb
jmp
arpl
inc
repnz
mov
sti
popf
mov
aas
adc
mov
cld
adc
mov
cmp
jmp
std
push
fidivrl
jmp
cmc
cmc
sbb
test
lea
mov
push
call
cs
jne
fildll
ret
adc
ret
pop
xor
lea
mov
cwtl
scas
iret
ret
outsl
or
jno
aas
lea
cmp
or
fmuls
cltd
add
movsb
rcrl
pop
sub
loopne
in
cltd
enter
mov
xchg
jecxz
gs
sub
mov
int3
movsl
cmc
mov
rcr
scas
add
jae
xchg
lret
jecxz
xor
jecxz
mov
adc
mov
clc
cmp
or
push
dec
xor
stos
push
mov
mov
jo
cmp
xchg
dec
inc
test
sub
xor
xor
into
hlt
jp
mov
std
lds
sti
jno
jle
out
icebp
jmp
imul
push
push
jbe
pop
mov
ss
sub
roll
pusha
sub
out
add
mov
cmc
clc
pushf
and
mov
and
ja
inc
shlb
jae
xor
clc
ficoms
add
sub
cli
fadd
mov
xor
sbbl
sub
ret
scas
test
adc
mov
mov
dec
icebp
and
push
push
mov
add
das
inc
ret
movb
adc
addr16
pusha
test
cmp
int3
xor
mov
lcall
sub
shlb
sbb
push
push
outsb
add
or
stc
gs
dec
jb
out
inc
inc
inc
xchg
in
sub
imulb
std
xchg
int3
or
inc
pmuludq
fdivrs
out
aas
addr16
inc
insb
jmp
out
lods
xchg
mov
pusha
xchg
data16
nop
xchg
js
cmp
sub
dec
movsb
stc
mov
dec
mov
outsb
and
jp
aam
sub
add
ret
das
add
testl
std
mov
sub
insb
sub
push
scas
lret
ror
mov
idivb
xchg
mov
sbb
jl
add
adc
clc
call
ret
rolb
movsl
xor
mov
sub
cmp
and
or
cli
push
jge
mov
push
cmp
daa
imul
fcomip
aad
cmc
and
ret
sbb
add
enter
push
lahf
in
sub
pop
sub
add
dec
loop
sub
and
cmpsb
les
in
lods
test
fnstenv
push
mov
pushf
fwait
enter
lods
imul
fcompl
add
pop
xor
hlt
fdivrl
mov
pop
mov
repz
movsb
adc
in
push
les
mov
or
aas
push
stos
pop
scas
or
mov
sbb
scas
inc
iret
rcll
cmp
cmpb
mov
xor
fisubrs
and
lret
sub
jb
scas
cmp
jp
cmpsl
clc
fidivl
pcmpeqb
add
and
xor
cli
std
inc
into
fcomps
adc
inc
mov
fprem1
push
aam
outsl
addr16
and
xor
push
int3
lods
and
xchg
scas
inc
out
inc
rol
data16
imul
adc
mov
ret
divb
push
mov
push
iret
mov
jg
and
iret
cmpsl
push
fwait
cmc
xchg
jmp
pop
dec
sub
pop
scas
sbb
xchg
push
push
cwtl
xchg
pop
fdivrp
xchg
imul
hlt
jmp
fwait
add
and
lock
shll
mov
aad
pop
cs
lds
outsl
mov
subb
mov
sub
jle
pop
rcrl
inc
jne
fcmovne
mov
in
xor
out
add
in
cmp
test
mov
xchg
fldenv
pop
and
addl
jne
mov
push
jae
loope
jnp
xor
sti
psrad
lods
add
push
xor
adc
pop
mov
xchg
jmp
imul
jbe
inc
nop
xor
test
std
insb
or
imul
inc
pop
or
divb
outsb
jp
fwait
mov
sbb
fisubs
push
jmp
imull
enter
pop
inc
push
fistpll
adc
mov
je
les
push
lods
aad
inc
ret
jbe
mov
dec
dec
cmp
cld
xchg
dec
jle
cmp
test
repnz
imul
imul
jl
std
adc
mov
lret
xchg
arpl
sbb
adc
lahf
push
xor
push
pop
mov
ficompl
lock
push
push
test
cmc
sub
mov
mov
js
sbb
ss
xchg
shlb
or
stos
pop
imul
scas
pushf
fstl
daa
xlat
mov
ret
bound
or
je
addr16
add
ffree
clc
dec
xchg
push
and
sbb
mov
imul
lea
gs
fldl
adc
xor
sub
adc
int3
or
push
and
jg
push
sbb
mov
mov
in
enter
push
mov
jnp
mov
xor
ss
xchg
test
es
xchg
out
or
shrb
cmp
iret
fnstcw
leave
xor
subb
mov
dec
mov
dec
mov
aaa
add
test
mov
ljmp
cmc
inc
stos
pop
imul
jle
test
xor
lret
pop
cmp
pushf
inc
sti
shll
test
xchg
sub
int
aam
test
pop
or
inc
out
cmpl
push
adc
gs
test
dec
stc
inc
xorb
dec
mov
out
std
pop
cmp
rolb
and
adc
enter
xor
outsb
xchg
cmp
push
cs
mov
cmp
xchg
ljmp
push
pusha
lea
adc
lret
or
mov
push
notl
mov
inc
sbb
mov
jo,pt
jge
sub
lret
dec
and
push
adc
rcrl
aam
sub
mov
test
mov
loopne
dec
add
mov
inc
or
dec
test
xchg
test
jle
cli
push
es
leave
xor
scas
test
mov
pop
and
inc
cmc
cltd
add
dec
fcmovnb
mov
add
rclb
xor
jg
lds
movl
imul
push
push
pop
jo
mov
jo
data16
adc
rcrl
pop
ficoms
je
shrb
ds
xor
xlat
pushf
mov
sbb
scas
cs
popa
mov
pop
call
inc
out
xor
pop
dec
jns
mov
or
movsl
bound
inc
pop
push
negb
ret
sub
pusha
leave
mov
jb
and
xchg
ljmp
xor
add
xchg
push
mov
insb
in
xor
cld
xor
sub
xor
mov
aam
sub
jp
mov
dec
rorl
jecxz
pop
out
jno
popf
sti
inc
fmul
shl
clc
xor
in
ljmp
xor
cmp
jmp
xchg
test
push
bound
fs
mov
ret
dec
das
jp
adc
add
lahf
stc
inc
imul
and
adc
imul
push
push
jb
xor
and
icebp
stos
cld
pop
ss
pop
push
mov
xchg
xlat
sub
inc
stos
adc
xchg
jo
mov
mov
loopne
and
dec
xchg
cmp
push
push
push
aad
jo
aad
cwtl
jne
sub
rep
sbb
pop
or
or
sub
mov
pop
inc
insl
js
cltd
mov
movsb
adc
and
sbb
divb
adc
adc
xor
jb
mov
loopne
ss
mov
and
stos
xchg
xchg
cld
movsl
xor
cmp
repnz
mov
lock
ja
pop
mov
fcmovnu
sbb
sbb
mov
aam
incb
mov
out
aaa
push
test
mov
popa
mov
mov
push
mov
xchg
jle
sti
pop
jo
jbe
push
in
std
mov
incb
add
inc
adc
lods
fs
cmp
imul
cmpsl
dec
outsl
rorl
xchg
out
shll
cmpsl
inc
and
in
arpl
hlt
xchg
cmp
mov
repz
ja
sub
pop
jg
fldl
sbb
fldenv
fldt
test
rcll
divb
rcr
sub
jns
and
aad
and
push
push
loope
shll
push
sar
fcompl
xchg
lods
xchg
cmp
mov
hlt
add
xor
mov
lods
dec
fisttps
pop
adcb
int
jb
leave
shrl
idivb
xchg
nop
mov
std
sub
loopne
gs
or
fisubrl
int
xor
stos
insb
cmp
xor
mov
mov
mov
or
aaa
lret
adc
mov
gs
cmc
ret
mov
push
rcll
jb
dec
leave
pop
xor
xchg
pushf
xor
call
jecxz
pop
pop
jae
add
je
aas
shrb
fsts
ds
push
push
push
xchg
sub
out
ret
sahf
rorl
cmp
xor
call
mov
push
out
rcll
push
shlb
stc
mov
mov
pushf
fstl
aas
js
shll
stos
fdivrs
sub
aad
loope
cmp
push
faddp
ds
test
in
jl
les
or
or
leave
pop
push
into
test
adc
in
out
push
jbe
mov
or
sub
sbb
xlat
mov
fwait
add
mov
lea
sub
inc
fwait
into
mov
test
push
jne
mov
push
in
add
rol
push
test
push
loop
enter
imul
ficompl
std
dec
push
add
dec
hlt
movsl
and
xchg
push
push
or
mov
leave
sti
sub
in
jnp
xor
xchg
sbb
cmp
pop
mov
mov
dec
jmp
xor
cltd
inc
jge
cmpsl
add
fwait
lcall
push
cmp
dec
test
je
cmc
sub
outsl
popf
add
push
pop
in
test
push
xor
cltd
subl
aad
inc
or
js
dec
out
sti
daa
jae
push
popf
jae
lds
and
js
ret
add
add
loopne
fisubrs
andl
mov
lret
cmp
out
aaa
rcll
pop
out
lret
lret
test
addr16
adc
add
adc
pop
fnsave
scas
call
scas
mov
enter
dec
mov
mov
jae
sbb
repnz
jmp
lcall
or
je
movsl
fistl
or
adc
addl
shlb
fistpll
inc
rclb
xchg
sbb
xor
jle
mov
sbb
loopne
jmp
je
jne
sbb
mov
cmp
aas
mov
lea
ljmp
sbb
add
aad
cltd
mov
mov
add
js
mov
mov
fwait
inc
mov
jg
mov
ss
add
pop
push
mov
pushf
push
and
jnp
int3
pop
mov
pushf
aad
add
cmpsb
add
lea
ja
incb
jmp
xchg
outsb
aas
sbb
jle
xorb
and
in
sub
xchg
sbb
dec
mov
push
push
test
mov
cmp
dec
dec
dec
push
mov
imul
jecxz
scas
mov
mov
jns
pop
mov
cmpsb
cld
inc
inc
jne
fidivrs
sbb
sbb
scas
in
xchg
fsubrs
mov
adc
adc
sub
push
das
inc
stos
lret
imul
xor
into
mov
xchg
dec
orb
enter
bound
jecxz
mov
jmp
inc
cld
test
or
dec
adc
sub
push
decl
loopne
adc
ss
jg
mov
push
mov
dec
sti
andl
in
insb
movsb
sbb
lret
fdiv
frstor
mov
sub
or
xchg
clc
fiadds
out
sbb
pop
imulb
jbe
inc
popa
jbe
repnz
pushf
pop
and
gs
idivl
or
adc
sub
jmp
mov
ret
fdivrs
loopne
cmp
sahf
ljmp
jae
xchg
mov
mov
sahf
xor
adcl
mov
pusha
mov
sbb
add
sbb
inc
push
leave
aam
scas
xchg
sbb
jmp
bound
inc
push
or
subl
mov
mov
sbb
jnp
cmp
cs
xchg
loop
sbb
cmp
pop
mov
dec
enter
out
mov
jns
mov
dec
inc
outsb
sbb
sarl
popa
enter
aaa
or
pop
xor
daa
inc
outsl
xor
xchg
push
pop
pop
imul
mov
in
es
into
push
leave
mov
push
and
push
mov
mov
shrl
sub
fistpl
adc
mov
push
stos
sub
jge
xchg
imul
xchg
pop
add
xchg
cmc
or
pop
push
sbb
cvtps2pd
into
in
ret
movl
rcrl
sbb
enter
cmp
inc
insl
nop
leave
imul
push
shrb
shl
outsb
pop
mov
cmp
mov
adcl
leave
cltd
jns
jb
pop
xchg
jo
mov
jno
stos
sub
jnp
jp
xor
or
fcmovnu
inc
dec
fisubrs
dec
cmpsb
cmp
mov
xor
test
mov
pop
scas
je
mov
loopne
jne
stos
arpl
jno
test
jle
jl
and
addb
or
jp
cld
movntps
or
test
mov
fisttps
jns
jge
inc
dec
shll
orb
mov
cmp
mov
outsb
sbb
pop
ret
inc
aad
repnz
testb
pop
inc
insb
inc
mov
xor
movsb
ss
mov
lods
sbb
sbb
and
repz
and
popa
sbb
jne
jb
xchg
jb
push
ret
out
pop
icebp
and
int3
pop
inc
jecxz
and
adc
sbb
sub
test
pusha
pop
out
jb
jo
rcrb
pop
push
jp
and
sub
add
fnstsw
int
mov
push
mov
jbe
inc
cmp
jmp
or
loop
repnz
daa
andb
mov
mov
dec
pop
xor
sbb
push
and
into
sbb
mov
ss
xor
jmp
andb
in
ljmp
repz
ret
jp
cmp
stos
xlat
imull
ret
xchg
jmp
cmp
je
jo
dec
pop
adc
nop
mov
pop
mov
lds
dec
mov
sti
ljmp
xor
ds
mov
push
icebp
lods
mov
xlat
loop
je
fistl
pushf
fsts
fisttpll
push
in
adc
addb
mov
sub
sbb
xchg
xlat
sub
sbb
xor
cmp
mov
aaa
xchg
xchg
mov
xchg
fs
std
loopne
ficoml
xchg
or
in
pop
inc
lret
pop
xchg
jp
mov
sub
mov
xchg
call
iret
out
hlt
jae
shll
scas
sbb
add
jnp
or
pop
xchg
sbb
push
js
mov
adc
stos
sub
ret
out
inc
pop
jae
in
loop
test
arpl
push
pushf
xchg
es
or
adc
mov
mov
mov
xor
xor
in
shll
fcompl
mov
jb
shlb
scas
or
dec
addr16
cmc
push
loope
icebp
stc
sqrtps
xchg
aad
js
aas
jns
sahf
push
mov
inc
mov
loopne
imull
mov
int
dec
add
push
pop
jne
ficoml
lock
jns
fwait
mov
movsl
and
popa
iret
pusha
addb
loopew
push
xchg
inc
cmp
add
xor
and
mov
cmp
or
test
mov
fnstsw
insb
xchg
data16
rcr
int
add
cmpsb
jno
dec
jns
push
mov
cmc
adc
ret
daa
cwtl
adc
pop
ds
inc
fisttps
ljmp
dec
jl
xlat
jle
mov
mov
adc
mov
mov
mov
sti
dec
fs
sub
pop
mov
cmp
insb
pop
cli
loop
xchg
nop
add
lret
push
ljmp
sbb
js
pusha
sub
dec
pop
stc
iret
inc
cmp
in
add
push
pop
xlat
jmp
pop
jmp
sub
test
add
clc
andl
inc
cmp
mov
xchg
adc
fmull
pop
sahf
out
stos
push
outsl
lahf
icebp
add
xor
pop
aad
jge
psrlq
loopw
fcoml
jne
pushf
and
mov
insb
popa
pop
mov
cmpsb
sbb
sbb
jge
insb
imul
aam
or
enter
movsl
cmpsb
xlat
add
loope
cmp
adcb
pop
dec
jns
mov
push
scas
in
and
inc
outsb
adc
ret
push
mov
rorb
arpl
shr
xor
jns
sahf
test
xor
jns
push
cltd
jge
xor
push
sbb
int3
lret
addr16
addr16
js
shll
sbb
push
adc
add
jmp
fidivrl
push
in
jns
mov
jae
in
clc
mov
pop
imul
cs
dec
cmp
fdivrp
pop
dec
sbb
or
nop
and
fisubs
sbb
std
mov
and
add
test
aas
xchg
jae
add
adc
repz
mov
push
pop
sbb
or
lock
sub
ficompl
cwtl
sbb
outsb
adc
sbb
add
scas
xor
sbb
push
pop
call
mov
add
xchg
xchg
aam
jge
lods
jg
dec
das
and
and
cmp
negb
jmp
or
loop
mov
mov
ja
xchg
es
ss
das
jecxz
mov
int
sbb
movsb
cwtl
mov
setle
dec
loop
aaa
in
les
or
mov
xlat
andl
fldt
xor
mov
nop
mov
add
mov
push
dec
pushf
gs
js
sbb
sbb
out
pop
cmovb
shl
rcrb
lock
loope
mov
icebp
roll
mov
or
into
mov
movsb
sub
popa
inc
push
mov
xor
push
mov
sbb
call
lret
xchg
sbb
icebp
aaa
xchg
mov
aaa
bound
add
rcrl
cmpsb
outsb
movsb
stc
or
lock
push
test
sub
push
aas
sub
jo
jo
sub
lods
mov
ljmp
push
clc
cmpsl
mov
jns
mov
and
out
push
push
jp
ss
push
add
repnz
adc
inc
push
sbb
cmpb
call
jne
sub
repz
and
mov
lock
push
fsubr
gs
jns
mov
xor
iretw
movsl
sbb
add
adc
std
push
inc
sbb
sbb
pop
pop
and
push
xor
shl
inc
jl
jae
call
cmpsl
jno
inc
mov
jge
mov
xchg
pushf
sbb
int
xor
lea
stc
imul
add
psllq
sbb
cmpl
xchg
stc
sub
cmp
jnp
ret
cltd
add
dec
adc
out
inc
insb
mov
out
and
or
xor
and
les
xchg
and
mov
es
and
fadds
or
inc
mov
mov
test
enter
mov
mov
lods
sub
aad
xor
jae
jae
cli
xchg
xchg
pop
jne
mov
jp
in
repz
adc
add
sub
add
add
sbb
mov
pop
or
pop
movsl
xchg
adc
push
inc
pop
fcomp
pop
xabort
rcrb
les
or
push
addr16
pop
cld
mov
call
xor
orb
ss
xor
jae
mov
mov
out
jmp
or
hlt
fdiv
mov
jmp
xchg
jecxz
inc
and
insb
or
xor
sub
imul
mov
cld
fadd
cmp
lcall
sbb
cmpsb
jo
jo
xchg
loope
ja
out
fcom
enter
or
fidivrs
dec
in
jnp
mov
in
fnsave
dec
clc
cmp
sti
ror
pop
in
xchg
cmp
and
call
lret
and
and
lahf
mov
rclb
xor
pop
sub
leave
mov
xorl
push
and
jb
out
daa
add
jb
call
mov
cs
lock
test
dec
xchg
and
dec
sub
sti
add
or
imull
mov
sti
psubsb
add
cmp
fs
pop
lods
xorl
icebp
movsl
cwtl
stos
inc
mov
cmp
fdivs
adc
adc
inc
pop
cmp
sbb
xor
jmp
push
add
xor
lods
fimuls
or
push
mov
pop
in
adc
ret
inc
test
std
arpl
es
outsl
mov
cwtl
xor
scas
nop
int3
jmp
or
cmp
fiadds
mov
and
cli
sbb
push
cmp
pushf
dec
shlb
lret
ss
inc
sbb
test
inc
fisttps
dec
outsl
fcoms
enter
js
mull
pmaxsw
sub
add
mov
dec
in
mov
lock
mov
iret
xlat
inc
xor
push
inc
xchg
jo
scas
arpl
popf
leave
insl
jmp
adc
js
pop
inc
and
leave
movsl
adc
dec
enter
and
pop
fistpll
sbb
rclb
mov
hlt
pop
sub
shll
push
les
ljmp
push
push
incl
dec
add
lods
stos
jmp
stos
dec
inc
fwait
jb
lods
dec
loope
add
cld
add
dec
add
popf
dec
push
push
adcl
rorb
je
mov
jb
cs
addps
xchg
lret
roll
je
mov
inc
fs
or
jp
mov
xchg
lds
popa
cs
or
test
fs
sbb
add
xchg
pop
cmp
les
cmpsl
hlt
cmp
xchg
pop
push
sub
je
ffree
sahf
mov
test
xchg
add
sti
dec
cmpsl
jmp
and
xor
repnz
lret
sbb
inc
and
add
jl
inc
ja
mov
cmpsl
mov
cmpsl
call
mov
add
test
pop
call
js
mov
lahf
movzbl
negb
in
int
adc
xchg
xchg
setge
fsubl
repnz
xchg
loop
ss
xor
fcoms
repnz
ljmp
cwtl
or
xchg
scas
int3
add
lock
nop
mov
push
lahf
imul
adc
pop
test
hlt
mov
xchg
push
ljmp
in
mulb
lret
in
pop
repz
inc
push
mov
adc
pop
hlt
scas
dec
loopne
repnz
xor
in
and
jmp
out
inc
add
scas
ds
dec
leave
mov
mov
mov
aaa
jmp
aas
and
mov
add
in
pop
cmc
popa
notb
mov
mov
sub
adc
movsb
aam
sub
xor
addr16
jo
es
ljmp
insb
and
adc
sti
sbb
xor
xlat
sarl
lods
ds
jmp
dec
dec
push
dec
or
jl,pt
sbb
adc
xchg
pop
push
rcrl
and
ret
int3
xchg
jmp
nop
push
addr16
fwait
out
mov
into
xchg
outsb
dec
jno
aam
jb
mov
xchg
aam
repnz
jg
fiaddl
add
or
ret
jae
fidivrl
pop
in
sub
fwait
aaa
inc
fidivrl
pushf
mov
into
sub
adc
pop
cmp
rorl
lds
push
xor
fiaddl
pop
mov
xchg
jmp
adc
dec
add
iret
adc
lds
xchg
hlt
add
and
sub
popl
push
add
sub
mov
push
mov
lret
jmp
dec
add
xchg
mov
pusha
or
cmp
mov
mov
inc
and
mov
jmp
or
adc
jae
and
pusha
mov
fildl
jge
inc
movzbl
ljmp
or
adc
jae
mov
outsb
cld
sub
je
cmp
mov
xor
jp
xchg
inc
push
mov
sub
rcrl
dec
and
dec
clc
inc
rcr
fisubrl
repz
test
or
sub
add
xchg
push
jp
pusha
popa
cmp
sbb
lds
js
cmp
sbb
arpl
sbb
cmp
mov
mov
lds
xchg
test
or
test
xchg
int3
sub
testl
xorl
sbb
mov
push
cli
xor
add
jge
les
movsb
int
add
inc
outsb
lds
daa
mov
lea
adc
sbb
incl
xchg
inc
in
xor
sub
stc
inc
sbbb
xchg
nop
or
mov
repz
dec
inc
out
add
popf
scas
outsl
out
call
fisubl
shrb
xchg
fsubrs
push
or
sbb
lret
std
cmp
mov
in
sub
lock
loop
popf
sbb
ss
lea
push
jge
out
adc
fcmovnu
push
pop
insb
mov
or
ret
fdivrl
daa
cmp
mov
and
pop
sub
scas
testl
popa
ja
xchg
in
pop
stos
in
dec
sub
pop
repnz
test
cmp
insb
mov
jp
stos
dec
or
mov
popl
fcmovu
aaa
mov
test
or
in
adc
fsubs
frndint
das
dec
or
int
adc
inc
mov
loop
dec
add
mov
fwait
pop
dec
mov
das
xchg
inc
push
pop
jo
pop
adc
mov
or
ss
cmp
sub
or
pop
push
sub
filds
jbe
stos
fstpt
jne
cmpsb
sub
push
jae
imul
pop
ds
jnp
mov
inc
fisttps
cmpsb
cmpsb
inc
into
push
pop
mov
jbe
jecxz
jnp
mov
pop
imul
push
add
push
cli
ljmp
loope
stos
icebp
insb
push
mov
jno
and
adc
pop
inc
mov
daa
push
pop
pushf
arpl
or
pop
inc
leave
int3
rolb
pushf
add
adc
insl
js
inc
add
gs
fsts
cmp
fcmovnu
jb
cmpsl
pop
mov
xor
repz
out
inc
inc
sub
fistpl
sub
mov
dec
lock
scas
iret
xchg
aam
in
leave
pop
pop
add
or
pop
xlat
js
cmc
addr16
push
push
mov
adc
push
pushf
js
aas
in
adc
push
fwait
sahf
stos
aas
pop
ret
gs
test
pop
mov
aas
xor
into
xor
sbb
cmc
sbb
and
test
fwait
dec
push
and
and
mov
testl
mov
punpckhbw
ret
pop
mov
mov
pop
adc
inc
sbb
fldl2e
sbb
sbb
jmp
dec
jmp
push
jecxz
jg
ret
sbb
pcmpgtd
inc
xchg
mov
jbe
das
rdtsc
xor
and
dec
bnd
jle
inc
icebp
mov
mov
push
push
mov
data16
mov
inc
mov
mov
je
call
xor
lock
aad
mov
and
jle
push
xchg
mov
rcrb
xchg
arpl
push
adc
xor
dec
jmp
out
inc
cmpsl
push
cmpl
je
hlt
jg
push
mov
add
mov
push
aaa
je
cmpsl
jecxz
adc
fildl
mov
push
adc
inc
scas
pusha
mov
ds
jle
cmp
ret
xchg
fwait
insl
icebp
cmp
arpl
add
sti
jp
outsb
imul
mov
adc
aam
arpl
repz
fcmovnb
cmpsl
pop
mov
pop
sbb
add
push
vpslld
aas
mov
pop
sbbb
cmp
es
xor
adc
cmpsb
fisttps
add
and
pop
xchg
repnz
test
push
jmp
fwait
xchg
cltd
dec
loope
movsl
fs
add
xchg
push
push
mov
push
insl
fcoml
test
inc
lcall
jge
cmp
out
enter
adc
ja
add
lret
push
push
adc
pop
add
push
test
icebp
push
int3
sbb
popf
pusha
fwait
rclb
xchg
pop
in
add
testb
inc
mov
pop
jmp
push
jb
addl
insl
fs
pop
enter
fstps
aad
jae
cmp
sbb
pop
lret
enter
xchg
inc
adc
outsb
mov
push
lods
rclb
sti
hlt
cs
fldl
push
mov
sbb
dec
xor
xchg
out
xor
add
push
out
mov
inc
mov
add
mov
sahf
jmp
daa
mov
cmp
xchg
nop
mov
aad
sahf
andl
sub
fwait
sbb
add
jge
repz
mov
aad
idiv
mov
imul
out
adc
jae
pop
cmp
popa
and
rorl
rorl
cmp
fstl
cmp
or
jmp
jp
mov
xchg
cmp
je
sti
adc
or
push
jg
jle
mov
in
or
jae
push
mov
xchg
sbb
xchg
scas
sbb
jne
repnz
daa
notb
sub
mov
cwtl
daa
scas
cmp
pop
rorl
shl
fisubs
lahf
pushf
insb
clc
and
out
aam
mov
adcl
sub
shlb
shll
sbb
and
dec
das
xchg
out
aad
in
jge
mov
adc
es
cs
mov
test
in
je
dec
imul
xor
push
aad
dec
and
mov
pop
cmp
mov
aas
inc
cmpsb
dec
pop
push
xor
mov
inc
sbb
jo
add
push
fistl
push
imul
pop
sti
icebp
mov
fnstsw
jae
sbb
mov
add
xchg
dec
mov
into
sarb
push
inc
scas
fildll
and
lahf
pop
xchg
pop
sbb
push
adc
jbe
inc
push
jae
imul
hlt
cmpsl
sbb
call
push
cmpsb
or
in
xlat
test
mov
mov
stos
add
or
hlt
cmp
jl,pn
rclb
pop
ficomps
fidivrl
shll
push
push
leave
xor
loope
dec
stos
sub
imul
shlb
or
push
jnp
test
repz
mov
jge
nop
adc
ss
xchg
push
out
push
jnp
sub
ds
icebp
adc
sbb
call
sbb
jno
adc
jl
pop
pop
mov
addr16
jge
sahf
in
pop
js
push
jo
jle
or
mov
push
jbe
lret
das
sub
pusha
pop
jg
sub
mov
subb
mov
add
add
mov
push
stc
aam
popf
push
adc
and
add
mov
les
sbb
or
loope
or
idivb
mov
pushf
movsl
sub
js
and
xor
shr
xor
fstl
cmp
mov
popa
fistl
fs
cli
inc
push
pop
inc
adc
inc
push
loope
in
out
dec
test
and
jle
idivl
insl
mov
adc
test
jo
sbbl
add
jo
das
mov
ss
out
stos
enter
mov
jb
inc
out
dec
sub
dec
mov
xchg
sub
push
outsl
lcall
in
pop
mov
iret
push
mov
pop
lea
loopne
mov
mov
fiaddl
sbb
jg
add
inc
test
aaa
sti
adc
add
inc
test
pushf
in
fnstcw
push
sti
add
sub
lods
and
repnz
pop
and
xor
shll
pushw
and
mov
out
imul
outsb
jno,pt
xchg
mov
std
sbb
clc
cmp
pop
pop
scas
in
sub
fistpll
iret
inc
or
sahf
outsb
aad
pusha
test
hlt
add
add
xor
jbe
loop
in
test
mov
in
push
insb
cld
jno
inc
jmp
inc
mov
jmp
scas
ret
sbb
pushf
inc
ret
jo
ds
test
dec
lret
and
scas
inc
or
fsubrp
xor
fdivs
scas
xlat
imul
jbe
push
ss
cltd
addl
adc
mov
sub
pop
pop
push
mov
cld
mov
jns
loope
fists
xor
pop
ds
jmp
add
sbb
adc
lods
push
mov
or
push
pop
and
dec
mov
cmpl
jns
aam
dec
hlt
add
push
mov
push
mov
inc
mov
shrl
mov
xor
and
fs
icebp
add
je
fwait
cli
lret
jp
mov
ret
mov
jmp
mov
sbb
xchg
push
je
adc
test
jp
ljmp
fwait
xchg
xchg
mov
mov
cwtl
fidivrl
and
xlat
inc
outsb
int3
mov
cwtl
bound
stc
sub
fstpl
dec
mov
hlt
sbb
push
imull
daa
sti
insl
hlt
std
pop
jge
test
testb
adc
xchg
insl
inc
or
pushf
lahf
andb
sbb
pop
mov
sbb
push
loope
mov
outsl
xor
test
cmp
pushf
iret
jle
lods
mov
in
addr16
dec
stos
enter
imul
xlat
ja
inc
mov
add
lock
adc
inc
out
jne
test
test
cmc
fstpt
nop
mov
nop
gs
inc
mov
sub
repnz
mov
push
cltd
xlat
adc
xor
sbbb
or
cwtl
adc
pop
xchg
mov
cltd
mov
xchg
lock
sahf
and
xor
cs
cmp
out
rorb
or
loopne
test
jo
push
fldt
mov
mov
mov
nop
jmp
in
mov
mov
cmp
xor
adc
loopne
and
mov
sbb
cmp
cmpsb
loopne
in
cmpps
cmp
pop
mov
fstl
cs
out
js
mov
add
ljmp
mov
jne
movsb
test
test
insl
pop
xlat
add
push
ret
xchg
mov
pop
pop
sbb
push
leave
lret
sub
pop
sahf
and
mov
ljmp
adc
mov
stc
and
icebp
sbb
out
jecxz
popf
sub
leave
dec
ret
insb
aaa
scas
mov
dec
push
lea
mov
adc
jp
xor
push
mov
aad
aad
xchg
lea
jns
xchg
cmpb
test
pop
imul
pop
in
mov
js
cmc
sub
xchg
mov
je
adc
jo
stos
pop
fmuls
int3
gs
or
mov
add
mov
xchg
aas
mov
cmp
pop
adc
cmpb
ss
lock
inc
push
movsb
enter
sub
add
sbb
inc
cwtl
popf
add
mov
inc
in
std
cmp
cmpsb
add
ret
and
sub
cmp
and
popf
inc
and
stos
mov
mov
and
cs
jbe
stos
bound
push
in
inc
adc
in
fs
or
cmp
cmp
stc
rcll
movsl
lret
fs
xor
in
mov
or
jg
push
lods
inc
dec
cmp
orb
or
xchg
btr
pop
pop
push
sbb
jmp
sbb
add
sub
mov
mov
mov
dec
sti
fsts
stos
xor
dec
sti
xor
add
sbb
mov
sbb
insb
inc
movsl
add
iret
popf
dec
int3
js
sbb
mov
push
adc
jb
add
dec
addr16
dec
clc
ret
out
bound
sbb
leave
jmp
cmc
rolb
popa
fisubs
cld
xlat
add
adc
insl
xchg
mov
mov
es
data16
push
xor
addr16
mov
fdivrp
es
mov
sbb
xchg
add
push
push
es
jne
mov
je
xor
push
push
jne
inc
aas
mov
ss
dec
lret
cld
nop
fdivl
jle
aaa
inc
pop
aad
je
inc
repz
loop
clc
lret
fucomp
stos
aas
pop
xchg
lea
dec
into
ljmp
sub
lret
in
push
and
inc
push
in
cmp
sbbl
popa
sbb
mov
out
mov
cmp
pop
andl
jmp
mov
ss
push
testb
or
test
rol
xchg
add
aaa
aam
pop
fs
and
inc
push
mov
daa
int
push
mov
ret
aad
pop
ja
jp
push
aam
or
pop
xchg
adc
sti
jae
push
mov
xor
cltd
cltd
test
daa
negl
mov
add
cmp
ss
mov
push
jae
iret
xlat
popf
pusha
cmc
push
cmp
stc
setno
dec
fldcw
cmpsb
mov
jl
jge
loope
das
add
out
cmp
mov
fldl
cld
sub
fst
xor
loopne
lea
aad
jbe
mov
and
mov
xchg
push
sbb
in
into
or
aaa
sbb
pop
mov
call
pop
cmpsb
adc
cmp
je
sbb
repz
cld
mov
sub
add
push
jo
dec
sbb
dec
mov
clc
mov
and
push
xor
lea
orb
in
push
sti
fisttps
sbb
xor
testl
xchg
cmp
ds
lods
fwait
jle
in
pop
and
int
adc
jns
pop
xchg
stos
fdivrp
movsl
sbb
pop
mov
pop
mov
mov
jge
mov
into
popa
ljmp
fwait
xchg
inc
cmp
popf
fisttpl
jne
arpl
movsb
xorl
fld
leave
leave
mov
xor
mov
mov
push
jns
lock
pop
xor
lock
pop
bound
and
jle
loop
insb
jecxz
outsb
pop
daa
fwait
imul
js
iret
js
leave
adcl
bswap
inc
call
loopne
popf
jb
out
mov
rolb
fcomp
add
jp
pop
repz
jns
cmp
dec
int
adc
inc
xchg
pop
arpl
sub
pop
add
jne
mov
cmp
lret
leave
or
and
add
test
cld
in
loop
popf
pop
xor
mov
sbb
or
or
cli
dec
pop
stc
mov
dec
and
mov
popa
out
imul
mov
subb
sub
fnclex
push
and
cmc
sub
and
pop
in
mov
cmpb
outsl
leave
in
cwtl
cld
push
push
mov
xor
mov
int
sarl
sbb
mov
xor
sbb
les
push
mov
cmp
lods
push
fdivl
arpl
jmp
sbb
mov
jae
icebp
pusha
out
dec
push
push
pop
xor
popf
out
push
xor
adc
mov
ret
popf
add
mov
jl
das
loop
dec
popa
pop
out
xchg
or
push
outsl
imul
jne
inc
adc
mov
shlb
test
fstpl
mov
push
jbe
mov
inc
repnz
cmp
sbb
shll
sahf
cmc
adcb
adc
fsubl
into
test
vpunpckhbw
rcl
jns
cltd
jbe
push
jnp
stos
ds
pop
sub
mov
xchg
iret
add
ja
addl
adc
mov
gs
add
cwtl
aam
sahf
ss
movsb
pusha
andb
jnp
cmpl
push
imull
les
push
ficoms
mov
xchg
stos
aad
push
hlt
lock
repnz
stos
fnstcw
push
movsl
mov
lods
scas
loopne
dec
sub
fisubrs
lea
cmpsl
pop
mov
stos
or
pop
mov
jns
rcr
xchg
xchg
movsb
ljmp
lahf
and
stc
and
mov
or
bound
adc
mov
add
jmp
inc
xlat
fstpl
popl
dec
dec
fcoms
xchg
pop
cmpw
pop
push
fcmovnb
push
or
movsb
and
xchg
loope,pt
cltd
xchg
lahf
outsl
and
pop
lret
xorb
mov
cmp
fldcw
mov
ljmp
arpl
pop
cmpsl
sbb
popa
lret
test
inc
shr
test
movsb
js
in
cwtl
cmp
lods
out
addr16
mov
mov
xchg
lea
adc
jle
adc
cmp
ljmp
andb
insl
jp
js
sub
rep
enter
lods
leave
mov
and
pop
stc
popf
mov
xor
mov
xchg
das
dec
js
aas
scas
jb
cs
push
out
push
add
push
inc
inc
sub
or
ftst
sahf
dec
jo
sahf
dec
imul
nop
cs
push
aaa
dec
iret
daa
cmp
mov
mov
xor
pop
fs
inc
out
jmp
mov
pop
negb
sub
add
aam
pop
loopne
push
and
ficompl
dec
popa
push
fbld
xor
mov
or
push
faddl
loop
cs
pop
add
xorb
jmp
push
pop
xlat
and
mov
mov
repnz
pop
adc
and
fstl
jle
cmp
mov
mov
inc
rclb
dec
das
xor
movsb
jmp
addr16
in
lea
inc
jge
mov
aas
jo
cmp
or
xchg
push
enter
rcll
mov
mov
bound
pop
cwtl
int3
mov
arpl
fwait
mov
push
test
repz
hlt
jecxz
mov
in
push
popa
xorb
inc
sub
cmp
pushf
xor
add
adc
sub
enter
and
movsb
popf
push
int3
fidivrs
pop
xchg
fstl
xor
fs
cltd
ss
movsl
cmp
out
mov
adc
xchg
lea
retw
insl
jle
stos
iret
notb
imul
mov
lods
and
inc
and
movsb
dec
shlb
clc
lock
pop
xchg
add
xor
or
sub
int3
jno
sub
mov
sti
addr16
mov
sahf
cltd
roll
jp
xchg
mov
sahf
out
sbb
cmp
adc
popa
adc
fwait
lahf
push
cli
cmc
pop
and
sahf
pop
sub
faddl
test
dec
pop
jae
mov
jno
cmpsl
cmp
pop
repnz
sub
jns
sub
cmp
les
ds
fdivrs
cli
add
faddl
loopne
aaa
cmp
jns
jmp
mov
sbb
cli
xor
adc
or
jmp
insb
mov
in
and
test
ret
inc
mov
xor
mov
inc
movsb
clc
dec
sbb
std
sti
jbe
call
enter
lods
pop
dec
push
je
adc
pop
pop
decb
rolb
xorl
fsubrs
cmp
pop
push
and
lea
leave
adc
sbb
adc
cltd
out
pushf
jo
cltd
or
inc
sub
fisttps
iret
cmp
pop
mov
shrb
xchg
daa
pop
fidivrl
sti
inc
loop
pusha
sbb
xchg
xchg
loopne
pop
xor
mov
push
dec
push
xchg
out
mov
or
popa
and
lds
icebp
pop
mov
idivl
aam
add
dec
cmp
dec
js
sahf
sbb
push
cmp
test
xchg
pop
pop
cmp
insb
mov
mov
fiadds
mov
jno
sbb
add
or
inc
jge
dec
outsl
pop
lods
and
fisttpll
leave
int
xchg
jno
inc
mov
stc
popf
and
pop
std
cmp
fistpll
adc
out
jno
pushf
sti
xchg
xchg
inc
lret
jae
orps
in
add
movsl
das
mov
shll
mov
test
mov
mov
xlat
jmp
mov
add
and
loope
push
shl
or
adc
cmp
scas
subl
add
sbb
mov
mov
stc
cli
sbb
fdiv
mov
out
mov
int3
test
add
sub
adc
outsl
push
pop
xlat
ret
test
fldcw
sub
bnd
xchg
cmp
imul
mov
data16
int3
jle
cmc
test
lret
fistl
jns
cmpsb
nop
pop
and
fisubrs
sbb
pop
xchg
sbb
mov
outsl
mov
jmp
mov
int
mov
test
mov
daa
leave
mov
cmpsl
clc
lahf
mov
lods
scas
cmc
test
aas
mov
test
aam
ljmp
bound
sahf
shl
loopne
ljmp
xchg
push
jge
data16
mov
push
xor
cmc
jle
test
loop
rcll
out
or
xor
das
push
stc
outsl
mov
lret
repnz
iret
sti
mov
pushf
out
es
sub
or
dec
pusha
lahf
dec
insb
xchg
mov
fs
and
idivb
in
sbb
lods
cmp
out
cmpsb
mov
add
les
pop
pop
aaa
inc
cld
dec
aad
push
lcall
or
inc
test
adc
call
out
or
lcall
out
bnd
stc
outsl
add
test
fisttpl
jmp
in
sub
adc
lods
mov
xor
inc
adc
clc
mov
outsb
outsl
push
int3
jge
or
push
pop
iret
inc
popf
test
int
push
adc
sarl
dec
mov
mov
in
dec
das
stc
popa
sbb
cmp
mov
dec
and
cli
in
xchg
and
cltd
das
into
inc
push
dec
mov
jae
imul
push
jae
in
subl
xor
aaa
divb
rcll
sbb
sub
scas
or
loope
leave
loop
mov
jge
ror
addb
daa
cs
add
mov
subb
mov
inc
push
divb
pop
arpl
inc
add
and
add
add
mov
and
je
inc
push
push
test
mov
maskmovq
testl
and
popf
push
in
push
push
jo
rclb
xor
mov
fs
test
sbb
lea
inc
clc
stos
jb
in
mov
das
push
cmpsl
jmp
mov
mov
mov
data16
subb
and
push
mov
std
icebp
fstps
fdivp
mov
inc
test
inc
sub
popf
adc
sbb
lds
jo
adcb
decb
mov
jno
add
adc
jmp
mov
mov
push
subl
mov
xor
lock
mov
sbb
hlt
jmp
clc
jp
lock
xor
inc
or
sbb
push
push
sub
out
inc
fs
cmpsb
pop
in
movsb
adc
sbb
inc
shlb
clc
add
lcall
cli
add
push
cs
test
in
insb
mov
pop
test
dec
cltd
or
lea
js
outsl
dec
stos
stos
dec
xor
xchg
mov
idivl
xchg
andb
push
aad
enter
lcall
movsl
lods
addr16
cmc
mov
popf
fucomp
stos
stos
pop
dec
aas
rcrl
inc
push
and
jbe
pop
clc
mov
mov
cltd
pop
jp
mov
and
ss
mov
and
xchg
ja
mov
icebp
repz
gs
repz
mov
shll
das
or
mov
push
cmp
inc
mov
movsl
imul
jl
repz
mov
dec
xchg
sbb
pop
jge
ret
cmpl
lret
std
pusha
pop
inc
pop
push
sbb
pop
ss
dec
or
mov
cld
push
loopne
and
movsb
adc
mov
inc
mov
sbb
xchg
icebp
mov
push
push
cli
jp
nop
or
sbb
cmc
flds
rcll
jl
cmpsl
fwait
ret
les
test
sub
imull
sbbl
mov
pop
push
pop
sbb
mov
sbb
in
jmp
nop
jecxz
roll
pop
push
in
xor
mov
jp
mov
pop
pushf
inc
in
xor
cmc
lret
dec
jp
out
call
popf
or
cmp
dec
dec
sub
xchg
cmp
aas
add
ret
mov
push
stos
xor
pusha
ljmp
and
adc
aam
stc
mov
and
or
dec
mov
xor
inc
mov
inc
push
and
in
and
fidivs
icebp
cs
sbb
aaa
and
sbb
clc
rcl
movsl
add
inc
dec
mov
adc
movsl
cld
insb
icebp
push
int
xor
popf
jns
sahf
gs
mov
mov
scas
jo
xor
icebp
hlt
leave
les
pop
ret
movsl
je
xchg
add
inc
outsb
sti
fs
and
jmp
cltd
addr16
cmp
outsb
xchg
sub
bnd
ret
lea
les
mov
and
inc
dec
push
ja
xor
adc
cwtl
jmp
mov
pop
into
xchg
and
icebp
add
mov
push
sub
jl
fnstcw
mov
dec
addr16
jnp
dec
mov
jle
lea
push
mov
mov
neg
shlb
cmp
addr16
lds
mov
out
enter
lea
stos
nop
mov
add
jl
iret
mov
fsubrs
or
daa
int3
sahf
inc
cmp
movsl
jmp
push
xor
add
pusha
sub
pop
cmc
xchg
mov
xchg
xlat
inc
loopne
mov
xorl
data16
xor
inc
rcr
cld
dec
outsb
outsb
mov
or
call
ret
adc
xchg
mov
pop
sbb
cli
cmpsl
inc
fnsave
outsb
or
sahf
dec
scas
jno
scas
lret
addr16
or
or
xchg
inc
adc
cwtl
or
popf
insb
fiaddl
icebp
dec
cmp
loop
jecxz
mov
faddp
fwait
adc
mov
mov
xor
adc
lds
in
cltd
add
cmp
pop
mov
into
lods
jnp
lret
inc
sbb
gs
jae
fsub
or
add
jl
out
push
sbb
pop
xchg
pop
push
int
dec
mov
sub
or
cli
or
notb
mov
cmp
cmp
adc
aam
xlat
je
ss
and
fbstp
lcall
mov
scas
mov
fadds
push
push
psllw
lcall
and
push
mov
add
push
mov
imulb
add
add
movsl
jae
mov
mov
bound
fcoms
ret
clc
shlb
lret
xchg
movsl
pop
push
or
xchg
test
sbb
inc
xor
cmp
mov
mov
jl
xchg
mov
scas
jo
or
outsl
pop
add
xchg
notl
outsl
inc
mov
enter
push
and
jg
adc
icebp
fmuls
leave
lret
mov
imul
mov
es
add
scas
pop
mov
inc
jo
ret
adc
inc
add
dec
cmp
push
sub
scas
and
cmp
and
shll
fsubr
std
out
xor
sub
jmp
fistpll
loop
dec
lods
mov
nop
fdivl
frstor
mov
mov
adc
inc
out
jmp
pop
add
add
mov
cli
xor
xchg
imul
sbb
and
cmc
sbb
push
rol
adc
add
sbb
cmpsl
lds
xlat
xor
pop
loop
stos
inc
idiv
daa
push
es
cmc
pop
outsb
mov
cmp
pop
scas
mov
cmp
scas
xchg
xchg
insl
call
fidivrl
xchg
arpl
stc
lds
jmp
sti
rcll
sub
pop
cmpsb
imul
xor
lret
cmp
data16
push
outsb
int3
xor
popl
icebp
in
pop
in
mov
test
mov
fmull
test
xchg
mov
xchg
add
add
jle
out
dec
test
add
dec
and
repz
pop
or
inc
sub
add
into
pop
test
jge
es
and
push
nop
dec
jns
test
icebp
clc
call
push
adc
ret
fwait
push
adc
dec
loopne
rcr
dec
pop
lods
js
pop
pop
cmpsl
and
repnz
mov
iret
sbb
jne
push
dec
ljmp
test
pop
or
xlat
xchg
or
jbe
std
xor
call
xchg
mov
inc
mov
xor
pop
jge
xchg
cs
xor
push
into
dec
aas
mov
dec
ficompl
dec
cwtl
jb
sub
loope
pop
sarb
fisubrs
adc
adc
pop
xorl
stos
rcrb
xlat
loope
mov
jle
jle
and
aaa
mov
test
xchg
push
outsb
mov
fistpll
or
mov
mov
jno
mov
popf
insb
shrl
dec
rcr
loop
or
xchg
cmp
jne
push
cmpsb
lock
lods
add
scas
push
jae
loopne
ret
pushf
dec
aaa
ja
jl
lock
sbb
pop
push
cmp
ret
sbb
add
mov
or
fwait
mov
shll
push
add
dec
inc
jb
push
cli
cltd
sub
mov
fs
pop
shr
or
push
imul
mov
push
mov
add
xchg
imul
xchg
addr16
sti
loop
dec
cmp
bound
cwtl
test
sti
xchg
adc
xchg
jp
xorb
xor
push
hlt
add
rclb
aam
add
sub
enter
inc
cmp
aam
pop
jne
jge
and
mov
adc
scas
stos
scas
in
pop
cmp
mov
jl
fdivrs
inc
jge
push
in
pusha
cltd
xchg
les
inc
sbb
mov
pop
pop
jge
sbb
movl
ror
clc
les
lods
jp
js
mov
add
mov
xchg
adc
call
outsl
sbb
nop
mov
in
push
aaa
dec
leave
repnz
hlt
inc
sahf
mov
and
insb
out
mov
loope
jle
mov
jno
cmpsb
cwtl
fadd
sub
xor
add
sbb
mov
cmc
xchg
cmp
mov
and
mov
rorw
sub
sub
ljmp
sbb
jae
push
mov
shrb
sti
lds
mov
mov
pop
leave
mov
push
cli
jbe
test
shlb
inc
hlt
cli
cmp
pop
mov
out
in
pop
js
clc
mov
sbb
icebp
sbbl
xor
and
in
enter
xor
test
cwtl
and
inc
pop
sub
fldcw
int
sahf
xor
lock
sbb
adc
jnp
push
push
xor
std
ss
ss
cmp
push
iret
pop
daa
mov
lods
sub
je
cmp
jnp
cmc
mov
popf
xor
add
jae
ud2
call
mov
push
popa
neg
or
enter
inc
andl
jnp
mov
mov
enter
mov
and
insb
sub
sbb
push
enter
mov
jmp
rorl
jb
push
call
es
jmp
or
mov
adc
shlb
mov
dec
cmpsb
gs
leave
sub
dec
fistps
lret
jne
lods
xor
fistpl
pop
adc
dec
mov
pusha
push
dec
cmpsb
mov
xchg
cs
scas
out
xlat
adc
or
xchg
xor
sbb
xchg
mov
aam
xlat
sbbl
outsb
enter
sub
or
lock
mov
pop
aaa
outsb
inc
or
fldcw
ffree
popf
lcall
mov
hlt
ja
addr16
push
insb
xchg
out
adc
jl
mov
pop
mov
dec
push
fistps
mov
sbb
aas
lret
test
mov
sbb
test
mov
sarb
js
push
cmc
lret
fcom
test
fisubrs
adc
ret
fdivl
scas
ljmp
ret
lods
adc
loop
inc
adc
push
pusha
lods
fsubrs
fs
hlt
pop
loopne
add
jle
jbe
stc
sti
arpl
sub
jbe
test
push
popa
sahf
inc
adc
inc
fucomp
add
stos
movsl
int3
adc
cmp
add
inc
pop
jne
jg
in
mov
add
in
adcb
mov
test
cmp
jl
cmp
lods
ficomps
fwait
pusha
stos
incb
sub
pusha
add
loopne
xchg
imul
fistps
cwtl
xor
les
insb
ljmp
aas
je
pop
adc
aam
fwait
push
and
outsl
mov
mov
shl
aas
aad
neg
gs
cmp
push
aas
inc
mov
xor
push
xlat
add
insl
imul
adc
jo
adc
add
add
jo
iret
jge
clc
stos
xchg
mov
jae
decl
loope
push
orb
pop
and
dec
and
ljmp
pop
xchg
add
mov
adc
push
int3
in
cmp
sbb
test
scas
cltd
pop
pop
into
push
sar
add
stc
pop
sbb
ficoml
add
imul
lahf
dec
push
jl
jno
shr
cmc
lahf
fmuls
and
adc
cmc
in
mov
sti
nop
cmp
std
sub
adc
jb
mov
popf
inc
dec
sbb
push
jle
imul
inc
test
cmp
stc
and
lea
leave
dec
dec
mov
popa
movb
sti
in
fisttps
pusha
jnp
sti
dec
ja
jno
scas
ds
or
xor
arpl
mov
add
pop
fwait
mov
xlat
subb
lret
data16
dec
mov
hlt
sub
pop
out
je
sbb
enter
test
cltd
rclb
leave
sbb
pop
cmpsl
cltd
into
addr16
stos
sub
mov
lcall
jnp
sbb
pop
loopne
sub
push
fdivs
cmp
fidivrs
fnstenv
mov
aas
mov
xchg
or
dec
pushf
mov
mov
ret
stos
shl
jb
fistps
and
cmp
xchg
les
rclb
fnstcw
push
dec
test
mov
outsb
cmpsb
inc
dec
fbld
jmp
call
add
mov
aad
vmptrst
out
sub
cmc
call
xor
enter
sti
jmp
dec
xchg
add
push
mov
sub
daa
lods
fisttpl
lds
test
pushf
imul
decb
xor
mov
mov
and
ss
ljmp
fcoms
pop
in
mov
call
xchg
cwtl
jp
push
lret
push
fwait
adc
xchg
gs
or
mov
mulb
mov
xor
cmpsb
push
sbb
sbbb
lahf
and
cwtl
aam
icebp
jns
mov
cmp
aas
jg
filds
xchg
fmull
sbb
and
push
addr16
mov
cmp
repnz
clc
or
adc
mov
jmp
cmp
inc
mov
in
or
std
sbb
daa
jecxz
adc
je
movsb
jae
in
dec
cmp
lcall
sbb
sub
mov
int3
jae
xorl
push
fs
cwtl
dec
aad
cli
shll
cli
test
dec
cs
lahf
dec
das
or
add
fstl
xlat
inc
mov
dec
loope
pop
mov
loopne
fisubs
mov
adc
mov
sahf
sbb
adc
jae
pop
push
test
push
sbb
pop
iret
lods
fcompl
pop
test
arpl
enter
lahf
loopne
or
popa
sahf
mov
ds
push
push
xchg
roll
dec
add
lods
pop
jle
ja
jecxz
test
outsb
push
push
mov
sub
cmp
lret
shlb
adc
sbb
sbb
mov
fstpt
and
lock
and
cmp
sbb
movsl
pop
xchg
push
sahf
jmp
scas
cld
jp
sbb
stos
inc
jecxz
lods
addr16
stos
insl
push
stos
push
jb
mov
and
aas
loop
push
jg
xchg
jne
pop
sbbl
pop
inc
or
loop
xor
jno
imul
xchg
icebp
push
sbb
jmp
pop
add
sbb
push
addr16
inc
dec
cltd
mov
leave
iret
in
test
divl
outsl
inc
sahf
mov
jbe
fwait
outsb
jnp
jl
call
loopne
dec
mov
sub
es
cmp
loope
or
mov
push
mulb
mov
pop
inc
jb
inc
sbb
jne
hlt
popl
pop
nop
movsb
sar
gs
lds
or
pop
xchg
mov
mov
sbb
and
mov
sbb
out
daa
cmp
and
dec
cli
mov
jbe
jle
in
or
loopne
js
add
pop
nop
sbbl
and
outsb
and
je
xor
mov
cmc
mov
add
bound
shrl
repnz
adc
sub
and
fidivrs
loopne
jns
movsb
jp
push
pusha
inc
je
mov
lods
add
sbb
xor
dec
daa
sbb
mov
cli
call
ret
push
push
cld
cli
fistpll
std
negb
sbb
mov
fildl
arpl
or
lock
arpl
cmp
cwtl
pop
mov
std
push
scas
rcr
dec
adc
jno
adc
pop
jae
rolb
sbb
sbb
xchg
xor
cli
jb
leave
sahf
mov
xchg
movsb
addb
pusha
push
jecxz
xor
and
insl
adc
dec
out
cmpb
cmp
mov
stc
enter
out
outsb
fcom
jb
aaa
or
pop
cmc
adc
pop
fldenv
xchg
in
mov
test
leave
clc
ret
mov
push
jb
imul
test
or
push
cmpsl
sti
mov
pop
repz
pushf
jge
mov
std
pop
mov
cmp
popf
add
addr16
cmp
test
arpl
call
call
aaa
lock
fildll
and
std
xchg
mov
pop
pusha
shr
pop
sbb
incl
push
ret
imul
jno
frstor
outsb
movsb
stos
scas
inc
inc
pushl
pop
ret
sbb
divb
lds
fiadds
int
pop
mov
dec
adc
mov
add
aad
add
out
aaa
add
jb
into
sahf
dec
ficoml
fisttpl
sub
xchg
out
pop
pop
xor
int
adc
add
inc
pop
add
es
jb
xchg
jmp
sub
xchg
inc
repz
call
add
fsubrp
or
idivl
inc
inc
pop
lcall
ficompl
pop
and
rclb
add
jns
jecxz
inc
mov
jne
or
stos
add
pop
loopne
pushf
xchg
cmp
inc
and
pushf
add
jl
xchg
dec
mov
scas
adc
mov
and
sub
xchg
fdivs
push
out
int
xor
push
mov
adc
mov
add
mov
sbbb
push
sub
lea
and
lods
mov
inc
push
dec
and
xor
add
jbe
mov
iret
and
add
shrl
mov
adc
loopne
jecxz
aas
mov
fdivrl
arpl
jl
sarl
pop
mov
xor
cmp
hlt
xchg
pop
and
cmp
into
cmp
fprem1
jnp
add
add
cwtl
pop
imul
ja
or
sbb
xchg
adc
xlat
jp
xchg
jo
pop
mov
jbe
sbb
outsb
jp
aas
pause
loope
fmul
mov
dec
pop
subl
fsub
mov
inc
pop
sbb
mov
mov
jge
sahf
inc
push
dec
test
inc
shll
cmp
inc
stos
out
inc
mov
jne
mov
setl
and
shll
push
add
push
cmpsb
js
pop
push
mov
push
fbstp
repnz
in
mov
mov
mov
insb
scas
mov
jmp
mov
mov
incl
push
xchg
lds
in
sti
or
lret
popa
xor
push
dec
ret
enter
and
fcoms
arpl
idivl
inc
or
test
pop
sets
test
ret
mov
in
xor
ljmp
push
es
xchg
jbe
xchg
mov
inc
mov
std
pop
cli
push
arpl
add
fwait
std
sbb
mov
or
push
cltd
arpl
aaa
fidivl
fdivs
xchg
insb
cmpsb
loopne
jnp
adc
jge
call
push
xlat
xor
insb
and
mov
push
lret
push
jnp
pop
cli
sbb
inc
mov
xor
or
sub
cmpxchg
std
sbb
jne
test
sar
add
fisubrs
xchg
repnz
cmp
pop
cmp
fs
das
jecxz
push
pop
xchg
push
push
test
or
dec
and
push
frstor
jge
lea
pop
xlat
rcl
dec
mov
arpl
mov
cmp
jno
adc
inc
jo
in
mov
xchg
jmp
aaa
add
icebp
mov
ror
loope
add
dec
negl
les
or
jns
imull
cld
iret
sahf
subb
xor
pusha
and
adc
add
or
mov
mov
loope
xor
insl
clc
jo
std
sub
repnz
mov
mov
icebp
pop
add
and
loop
xlat
inc
push
push
mov
jns
mov
push
les
rcl
pushf
int
ss
ljmp
movsb
dec
pop
xor
mov
adc
rolb
int3
test
fwait
xchg
test
ds
dec
pop
push
xor
jl
add
sbb
out
popa
and
sahf
je
push
mov
fs
in
mov
outsb
cmp
add
or
mov
mov
push
sub
daa
adc
pop
mov
in
aam
cs
mov
adc
sub
fisubrs
xchg
mov
fildl
fsubr
out
xor
cmpsb
add
popa
mov
jno
adc
data16
add
jns
xchg
cmp
push
mov
jnp
add
xorl
mov
stos
and
jmp
jne
es
in
pop
mov
stos
xchg
adc
or
mov
mov
stos
mov
pop
xor
cmp
xchg
push
sbb
ds
sbb
repnz
stos
add
mov
flds
mov
jno
sti
mov
out
fdivs
push
lds
dec
or
pop
outsl
jmp
mov
stc
or
dec
dec
das
mov
mov
in
cmc
xchg
or
dec
cmp
mov
xor
out
mov
sub
jne
mov
fnstsw
std
sbb
adc
xchg
loope
aam
cld
loope
add
push
fxch
daa
test
rol
les
aam
sahf
xlat
vdivss
mov
dec
inc
daa
mov
jecxz
fistpl
sbb
rorb
nop
adc
inc
jb
add
mov
mov
test
addb
hlt
fnstcw
pop
xlat
insl
fs
dec
mov
xchg
sub
cmp
xchg
out
or
inc
xchg
sub
loop
pop
mov
dec
add
adc
mov
mov
test
pusha
iret
aas
lahf
pop
xor
lea
imul
sahf
scas
stc
lods
cmp
aam
sbb
xor
add
dec
mov
lea
adc
mov
mov
or
lahf
mov
js
rclb
hlt
cmc
jae
lret
ss
fwait
icebp
lds
cltd
stos
lcall
shll
push
or
fcoml
fldl
mov
mov
ja
mov
lahf
xchg
sub
xor
or
test
xchg
cmpb
sbb
sub
sbb
xchg
push
adc
loope
jne
sahf
fdivl
ja
mov
lahf
fwait
shrb
xchg
ffreep
mov
push
test
push
inc
rcrb
jne
popf
push
shr
in
jmp
pushf
les
mov
push
nop
xor
dec
dec
insb
lret
sub
outsl
pusha
jl
vmread
iret
mov
jnp
push
mov
mov
fmuls
icebp
das
push
lret
pushf
cmp
xchg
jno
mov
popf
test
xor
lea
inc
addr16
cmc
jmp
cmpsl
mov
cmp
sbb
cmp
cmc
adc
mov
mov
loopne
and
mov
sub
cmpsl
aad
lods
jecxz
xchg
and
outsl
add
lret
jbe
loop
mov
iret
xchg
gs
cmp
cmp
call
dec
cmp
jbe
xchg
push
mov
pop
stos
mov
in
fildl
loop
and
jne
mov
inc
mov
sbb
cmpsb
jb
fwait
insb
and
shlb
pop
jno
test
adc
stos
cmc
fmull
cmc
fucomi
lods
popa
mov
push
lret
mov
sbb
jno
pop
movsl
sti
pop
xchg
push
sbb
int3
sub
mov
ss
orl
repz
outsb
and
popf
in
push
adcb
cmp
scas
sbb
jge
push
in
mov
ficoms
mov
jns
lret
mov
cmp
sub
sbbl
xchg
loope
aas
mov
push
fadd
subl
mov
adc
mov
movsl
fbld
cmpsb
test
mov
cmc
cmp
call
mov
mov
mov
push
test
add
daa
pushf
sub
mov
pop
push
jle
repz
jns
jae
add
sahf
jno
jmp
mov
mov
mov
lea
sbb
adc
xchg
insb
mov
aas
in
rol
scas
dec
scas
ret
sbb
mov
pop
push
mov
ret
sub
sbb
sub
dec
cmc
mov
lcall
lods
inc
ss
inc
ss
mov
jmp
push
rcrl
or
sub
xchg
add
mov
lret
pop
sub
lret
and
pop
aas
xchg
add
pop
das
popf
dec
in
pop
mov
cmp
ss
sbb
test
mov
imul
adc
rcr
push
rolb
push
push
insb
dec
xchg
xchg
add
push
leave
xchg
sub
in
test
test
sbb
decl
loop
lret
sahf
int
ret
es
lret
mov
mov
scas
dec
test
in
push
push
in
rorl
fildll
ds
adc
test
imul
push
rcrb
lret
jge
or
and
lds
stos
jmp
add
incb
and
cli
ss
mov
lahf
xchg
xchg
dec
ret
cmp
mov
sbb
mov
xchg
push
mov
cmp
add
jle
push
rcrb
adc
xchg
inc
sub
mov
imul
mov
mov
or
outsl
push
dec
pop
cli
xor
xchg
and
jecxz
fnstsw
fmull
add
xchg
adc
inc
daa
inc
mov
push
cltd
adc
xor
xchg
inc
cli
fcmovu
enter
lods
xchg
mov
or
aam
pop
push
xor
mov
cld
test
test
xchg
xchg
andl
dec
push
shl
jmp
xor
adc
test
jns
sbb
sub
outsb
out
sbb
mov
push
lcall
lcall
cmp
mov
ds
pop
push
iret
jne
mov
cwtl
or
add
pop
pop
lods
loope
fnstcw
shll
xor
cmpsl
sahf
mov
into
test
xchg
movl
jle
push
lds
cmp
out
xchg
loope
ljmp
push
sub
xor
jmp
push
jl
xlat
imul
fidivrl
out
sbb
aam
pop
loope
inc
mov
mov
fsts
sub
aad
xor
das
cwtl
adc
cmpsl
xor
sbb
in
pop
fwait
or
cs
ret
leave
adc
dec
adc
sub
lcall
es
xor
cld
xchg
add
loopne
bound
jbe
mov
outsl
pop
insl
mov
cld
push
pop
dec
test
pop
xor
pop
inc
hlt
shrl
out
sti
or
int
das
dec
mov
add
rcll
xchg
dec
pop
jl
cmp
cmp
sub
push
es
subl
sbb
dec
cmp
xchg
cmp
cmpsb
dec
and
test
xor
adc
in
fists
sbb
cmp
test
mov
in
int
xchg
sbb
jbe
jecxz
cs
mov
decb
sti
lret
loope
xchg
loope
or
push
xchg
addr16
les
or
subl
je
cmp
mov
xor
push
arpl
pusha
mov
adc
push
add
incb
xor
mov
sub
insb
lahf
adc
lds
insb
mov
jge
pop
shl
push
ja
mov
cmp
rep
mov
add
mov
fs
les
rep
mov
cmp
jne
mov
and
mov
dec
or
lds
inc
sbb
negl
sub
pusha
in
add
outsb
push
xchg
cmpl
pop
xchg
xchg
clc
scas
rcrb
lret
and
xchg
mov
pop
add
sbb
fisttpl
arpl
test
jns
inc
aaa
js
sti
and
cmp
lods
push
pop
mov
mov
inc
imul
call
sub
jp
xlat
fwait
subl
in
ljmp
popf
into
popa
adc
pushf
pop
pop
dec
lret
cmp
inc
dec
xchg
lock
pop
popf
ret
repnz
pushf
inc
in
lds
adc
xorb
add
inc
mov
out
mov
inc
pop
insl
out
xlat
fldt
lods
test
lds
call
enter
mov
xor
test
fstpl
repnz
xchg
fbld
scas
mov
jmp
insb
pop
mov
cmp
jmp
xor
cmp
aad
mov
jbe
xchg
dec
lcall
enter
jmp
scas
fcomp
in
xchg
enter
jmp
push
pop
fdivs
xchg
aas
iret
outsb
jo
and
data16
xchg
jp
arpl
sahf
jg
cmp
nop
xor
arpl
fdivr
and
fisttps
ret
mov
adc
test
orb
iret
ljmp
mov
inc
mov
inc
pop
test
fnstenv
sbb
cmp
out
stc
sub
xor
aad
jl
sub
pusha
mov
jecxz
dec
lret
push
sub
cmp
jg
test
jg
add
gs
push
xchg
fnstcw
jg
aad
cmp
mov
or
sub
cmovl
pop
test
in
cltd
inc
loopne
mov
leave
push
aam
mov
jp
sbb
jge
popf
push
cmp
xchg
adcb
adc
idivl
iret
adc
xchg
in
sub
sbbl
fsubrs
or
sub
sub
in
scas
push
pop
jle
sub
std
iret
cmc
rorb
pop
push
fisubrs
cmpsb
inc
cmc
and
dec
pop
xor
dec
xchg
sbb
xor
and
and
jl
iret
insl
sub
sti
call
popa
push
dec
out
sub
mov
and
mov
push
inc
mov
fwait
orl
jnp
and
inc
cmp
push
aaa
popf
add
xchg
add
mov
lret
sbb
je
std
std
sub
scas
je
inc
enter
push
or
sbb
cmc
sbb
fwait
gs
add
imul
test
mov
push
push
js
cmp
push
arpl
daa
div
xor
sahf
pusha
cmp
lds
xlat
or
outsl
repnz
dec
and
fldenv
and
dec
test
pop
fwait
mov
push
ss
xor
iret
mov
cmpsl
push
negb
bound
clc
jnp
pop
add
scas
sti
mov
jno
in
sub
and
mov
enter
mov
xor
leave
fnstenv
push
pop
inc
push
out
hlt
cmp
adcb
stos
sub
jb
lods
sub
jo
mov
sub
xchg
adc
leave
sub
lds
lods
mov
inc
gs
jno
fcoms
push
pop
xor
adc
pop
out
mov
add
push
push
loop
pop
xchg
inc
test
ficompl
and
mov
sub
cmc
inc
fcoms
jno
lods
fiadds
adc
mov
dec
xchg
or
lea
sbb
lock
add
dec
add
sbb
or
les
cmp
hlt
jge
dec
stos
test
test
lds
daa
jne
dec
dec
ret
push
jb
sub
or
cmp
out
inc
shl
lea
xor
and
push
es
addl
dec
inc
push
or
cmpsb
push
les
inc
jg
andb
xorb
in
add
sbbl
xor
in
addb
cld
inc
cmpsb
adc
xor
frstor
and
push
add
int
ficoml
mov
cmp
scas
mov
pop
inc
test
cmp
jns
or
mov
mov
arpl
fiaddl
inc
lcall
sbb
rclb
jns
int3
and
int3
jg
or
jle
adc
xor
out
add
add
daa
mov
mov
dec
out
cmp
jl
jle
test
popf
jmp
dec
sub
cmpsb
lods
andl
add
vcmpsd
ror
fcmovu
mov
xor
push
push
out
faddl
test
jno
push
push
ja
lret
adc
daa
xor
loopne
gs
push
jg
xorl
push
icebp
dec
out
iret
mov
movsb
in
out
jmp
mov
cmpsl
adc
mov
sub
sub
inc
orl
std
or
xchg
hlt
mov
dec
loope
mov
dec
xchg
inc
lock
mov
inc
leave
adc
or
leave
loopne
or
lcall
xor
es
mov
dec
in
inc
lahf
or
add
test
in
cli
add
jnp
jecxz
je
fsubrp
mov
cmp
aaa
repnz
pop
xchg
add
or
test
jle
andpd
out
xchg
shrl
push
mov
shll
dec
and
mov
push
add
aas
dec
push
pop
call
add
jbe
mov
dec
and
inc
aaa
icebp
test
ficompl
rcrl
scas
pop
xor
loop
add
add
xor
pop
sub
dec
push
jl
jo
popf
lcall
out
orl
xchg
aam
and
inc
aas
xor
xchg
cli
cmp
dec
aaa
add
out
loope
dec
cmpsl
pop
pop
sbb
out
jmp
fsubrl
dec
aaa
sti
loopne
movsl
mov
sub
sahf
inc
jmp
jge
fcmovne
inc
xchg
dec
xor
stc
out
push
loop
cmp
mov
pop
xchg
dec
arpl
inc
cli
rol
loop
push
mov
mov
pop
insb
orb
pop
je
push
add
fninit
addb
cld
inc
sub
repz
dec
inc
insb
inc
es
loope
clc
xchg
jno
inc
dec
cmp
xchg
push
push
push
or
jp
cmp
pop
or
loop
jge
push
mov
push
sbb
mov
push
pop
sub
xlat
mov
jo
arpl
sub
xchg
sahf
mov
adc
pop
or
adcl
jg
test
push
push
ss
sysret
pop
fsub
addb
jp
push
xor
rorl
cmp
hlt
es
test
imul
cmp
fs
cmc
dec
xor
jb
jcxz
pop
mov
pusha
adc
lret
mov
js
js
pusha
adc
jl
sbb
mov
push
clc
pop
fldl
adc
bound
pop
in
jbe
add
shll
push
adc
shrb
jge
lret
daa
and
stos
cli
fistpl
lcall
aaa
mov
out
icebp
enter
int3
sbb
shlb
mov
ja
mov
test
xor
adc
fsubrl
push
in
fcomp
pop
clc
clc
mov
lods
jge
add
or
pop
in
xor
mov
and
push
jl
jbe
frstor
mov
in
xchg
jns
insb
jecxz
sub
scas
push
add
mov
es
adc
pmaddwd
repnz
je
adc
xor
es
orl
sub
push
enter
pop
es
mov
incl
mov
mov
xor
add
jmp
xchg
jp
cmp
movsl
dec
push
xor
sub
fisubrs
or
cwtl
push
cmp
jl
pop
adc
aas
mov
popf
dec
add
sbb
cmp
in
scas
mov
insl
push
loop
xor
pop
shlb
dec
mov
lods
mov
jle
mov
cmpsl
cmp
mov
inc
outsl
daa
cs
out
cmpsb
loope
movsb
jmp
mov
imul
xchg
inc
das
fwait
xor
lret
jmp
bound
pop
dec
leave
addr16
jge
cmp
mov
mov
pop
cwtl
jbe
pop
dec
mov
push
idiv
cmpsl
scas
lret
cli
loopew
lcall
push
xchg
sub
fcomps
cltd
sahf
mov
inc
cltd
fcompl
test
and
mov
dec
int
xchg
push
xchg
sbb
adc
adc
je
jg
fiadds
dec
cmp
fnstenv
into
mull
mov
xor
push
pop
cltd
movsb
pusha
jmp
js
mov
lds
std
mov
fstps
fnstenv
push
xchg
dec
fstpt
xlat
sahf
jae
imul
dec
adcb
sti
imul
cli
imul
in
orl
sbb
jnp
scas
or
inc
das
dec
or
stos
lret
outsl
lahf
int3
aad
jno
popa
imul
cmp
lret
sub
pop
nop
push
lds
mov
xor
add
sbb
ja
sub
cwtl
mov
ja
inc
pop
into
sbb
adc
lret
subb
mov
test
subl
mov
mov
jnp
shlb
jbe
stc
cmp
adc
cmpsl
sub
sub
cltd
push
out
imul
xor
xor
inc
jmp
icebp
push
mov
insb
mov
ret
sbb
pop
sub
lock
dec
adc
filds
xor
push
scas
mov
scas
mov
sub
fildll
aad
fwait
shlb
sbbl
adc
ljmp
rorl
sub
lds
lods
mov
sub
xchg
popa
push
pop
add
jno
adc
sbb
bound
mov
and
out
cmp
rcll
push
pushf
scas
push
add
adc
and
lock
js
rorl
cltd
testl
pop
inc
dec
das
imul
xrelease
mov
xchg
into
or
mov
mov
mov
mov
mov
mov
and
das
sub
repnz
jns
inc
in
es
sbb
cmp
push
ficomps
xchg
fimull
jg
and
or
ja
mov
std
gs
xchg
mov
adc
push
mov
imul
pop
std
push
mov
mov
gs
jp
ficomps
inc
or
adc
jmp
les
dec
movsb
jge
adc
mov
jge
clc
jp
jle
outsl
popf
lcall
addr16
dec
hlt
xchg
inc
cmp
sbb
xor
test
fdivl
push
out
sub
xchg
sbb
or
or
stos
loop
addl
scas
int
mov
es
stos
pop
nop
push
cwtl
cmp
movsl
add
lods
pusha
adc
cltd
push
pop
mov
aam
inc
or
shl
mov
int
sub
fisttpll
adc
repz
sbb
int3
shrb
xchg
pop
arpl
xor
mov
mov
fistpl
clc
mov
rcll
fcom
je
jle
test
jg
adc
inc
push
adc
jg
imul
lret
inc
sub
sub
outsl
mov
int3
loop
shl
in
aam
leave
jg
mov
add
cmp
mov
shr
ficoml
dec
ret
cmp
cmp
dec
mov
dec
sub
mov
mov
xchg
lock
sub
add
cmpsb
and
popf
mov
pop
inc
les
mov
syscall
cwtl
js
or
mov
int3
lods
xchg
xchg
subb
or
insl
out
scas
cmp
sbb
je
push
add
data16
pop
push
inc
cmp
mov
mov
cmp
addr16
adc
and
mov
push
idivl
dec
sbb
cmpsl
push
inc
xchg
arpl
dec
or
jne
jge
imul
xlat
and
add
popa
aad
push
push
mov
jae
lahf
xchg
out
mov
dec
mov
or
nop/reserved
pop
jmp
fmulp
aaa
push
lret
in
shll
test
shlb
hlt
adc
and
sub
dec
lea
xlat
add
lods
sahf
int
xor
gs
pop
xchg
es
jnp
pop
push
or
in
and
test
adc
add
mov
sub
sub
sti
cmpsb
pop
test
dec
inc
aas
adc
fwait
test
adc
mov
int3
aam
mov
sti
pmulhw
loope
test
xchg
mov
stc
dec
shrb
adc
xor
dec
jns
insb
push
cmp
movsl
push
subl
cmp
ss
ss
and
mov
sub
mov
lahf
call
push
mov
lcall
fldl
iret
sub
sbb
out
sub
imul
aam
sbb
lahf
inc
stc
sbb
sub
hlt
fldl
outsl
mov
mov
pop
mov
adc
movsb
pop
xchg
hlt
add
lahf
mov
mov
add
xchg
int3
push
leave
pushf
sub
clc
sub
sti
push
imul
push
jae
jmp
pop
in
pop
rcl
je
add
adc
in
add
push
das
or
sub
sub
fs
idiv
xchg
mov
xchg
mov
adc
push
sahf
mov
jns
pop
xchg
cmp
sahf
movsb
cmp
add
int
scas
aaa
dec
fwait
addb
pop
loop
lods
cmp
dec
jecxz
jle
jp
mov
xchg
ljmp
pop
dec
xor
pop
cld
in
jbe
adc
aaa
cltd
rcrl
jmp
xchg
fisubl
aad
arpl
inc
dec
jnp
loop
mov
loope
scas
test
addb
iret
movl
jo
push
hlt
test
cmc
shrl
push
push
push
mov
fistps
into
jge
adc
cmpsb
pop
ror
outsl
mov
mov
outsb
lds
imul
pop
pop
adc
or
fiaddl
mov
xchg
cwtl
push
insb
dec
aam
inc
adc
adc
mov
decl
cmp
shl
out
in
mov
insb
movsb
in
sbb
push
repnz
pop
and
pop
imul
and
mov
shr
int3
sbb
sbb
cwtl
jb
push
xor
test
mov
int
push
inc
xlat
mov
sbb
mov
sub
and
jge
cltd
mov
sti
lock
push
mov
test
xor
adc
jmp
hlt
lret
xchg
push
push
push
adc
sub
testb
cmc
lods
insb
cmp
xor
inc
sbb
or
push
jmp
inc
mov
and
test
sbb
stos
mov
int3
cmp
dec
add
out
lret
mov
negl
pop
jno
jecxz
mov
icebp
hlt
or
mov
sti
fcmovnbe
inc
movsb
bound
fwait
sub
lret
adc
mov
into
lods
xchg
popf
les
shll
or
movsl
dec
gs
xchg
push
stos
cs
imul
jb
pop
aam
in
scas
aad
out
mov
in
ret
jae
push
mov
mov
stos
adc
add
jg
stc
push
pusha
mov
movsb
sbb
sub
scas
mov
push
adc
xor
js
dec
mov
mov
test
sub
cwtl
pop
or
xchg
scas
and
inc
ret
fwait
sbb
cmpb
cmp
or
or
cltd
sub
add
adc
jae
lods
icebp
mov
and
jp
ss
adc
push
in
xchg
ds
and
add
loopne
subl
ljmp
adc
arpl
dec
out
xorl
shll
mov
mov
mov
mov
popf
aam
pusha
pushf
fimull
mov
push
and
jno
xor
in
inc
scas
push
mov
and
xor
xor
jmp
shrb
imul
push
rcrl
xlat
les
inc
inc
stos
cmc
sub
bound
push
addr16
cmp
cltd
sbb
inc
das
xor
mov
fadds
add
lcall
testb
mov
mov
outsb
imul
leave
cmp
add
dec
rcrb
or
mov
stos
aaa
in
xchg
loope
imul
mov
shrb
addr16
mov
pushf
mov
stos
or
mov
sub
mov
enter
fidivl
loop
mov
push
cmpsb
fwait
out
repnz
cwtl
bound
sarl
cltd
iret
popf
dec
and
jp
sub
jle
mov
xchg
dec
jno
stos
and
xor
fiaddl
add
and
xlat
push
les
add
bound
pop
scas
jmp
inc
xlat
fisttps
mov
sub
sbb
push
cwtl
add
jne
push
jle
in
int
xor
shll
pop
pop
outsb
xchg
mov
cmpl
jae
or
sbb
leave
jge
lahf
js
sbb
dec
mov
lods
xor
inc
addl
out
sub
mov
inc
ret
cmpl
iret
subb
and
mov
push
out
dec
das
je
test
fwait
or
sarb
gs
xlat
out
sarb
push
das
mov
push
outsl
cmc
mov
into
in
pop
xchg
dec
jns
mov
hlt
dec
fcomi
shll
mov
xor
jae
mov
mov
movsb
push
cwtl
inc
sbb
dec
js
les
inc
dec
into
add
popf
std
test
mov
and
rcll
testl
mov
mov
or
jae
cli
incb
mov
mov
inc
imul
pop
movaps
adc
pop
loop
cmc
ret
and
out
xchg
outsb
popf
dec
pop
mov
fisttpll
inc
orl
lahf
pop
mov
sub
aad
movsb
mov
rcrb
mov
or
pop
ror
mov
neg
addr16
cmp
pop
mov
lret
into
jl
pop
enter
cld
xor
pop
cmp
mov
jmp
shll
in
aam
call
add
nop
rcrl
leave
ljmp
cmpsb
lret
jno
jle
lods
jmp
popf
push
sub
dec
repz
inc
mov
push
add
cs
push
subl
ret
into
lahf
inc
rorl
mov
push
test
jp
sub
gs
negl
std
or
dec
stos
loope
push
das
mov
add
add
mov
pop
pop
xor
add
orl
das
mov
xchg
stc
stos
rcrb
repz
cmp
mov
es
push
stos
adcb
jb
fldenv
xor
cmpsl
lods
xor
xchg
cs
mov
mov
xor
sahf
xor
xchg
mov
or
jo
jb
jnp
adc
sbb
aaa
sub
cmp
add
push
mov
arpl
fstpt
adcb
adc
pop
mov
aad
dec
add
in
test
sub
mov
mov
lock
cmp
test
pop
pusha
repz
cld
movsl
inc
test
or
pop
cmpsb
jae
xchg
lret
cltd
jmp
sbb
bound
mov
adc
out
sbb
adc
cs
cs
sub
scas
test
jl
mov
mov
lods
cli
ljmp
mov
push
or
data16
loop
scas
stos
or
pop
push
call
push
cmp
in
push
pushf
lahf
ret
pop
repz
cmp
fcmovnb
into
leave
loopne
imul
sti
fistpll
fcmovb
jb
mov
cli
mov
lret
add
add
xor
ljmp
mov
test
cmp
jnp
cmpsb
rcll
outsb
xchg
call
xor
or
loop
push
orl
cli
aad
sub
mov
cwtl
sarl
push
lcall
cld
lret
push
cmc
cmpsb
addb
cld
add
push
sub
fsubs
xchg
lods
jge
popa
int
jb
xchg
xchg
add
out
pop
mov
mul
out
outsl
dec
aas
push
stos
shl
pusha
mov
test
mov
and
iret
loop
popf
insl
popf
mov
ja
xchg
adc
mov
stos
add
mov
or
ljmp
mov
xor
fbstp
sarb
mov
shrb
jg
hlt
mov
sbb
and
or
xchg
pop
add
dec
mov
test
jnp
xor
popa
push
adc
inc
add
jo
mov
ja
hlt
mulps
ret
add
inc
imul
jns
or
cmp
aad
or
cmp
cmp
out
repz
pop
push
in
jno
add
rcrl
push
adc
jae
xor
fwait
adc
mov
fs
ret
sub
mov
mov
push
push
imul
mov
add
mov
push
jmp
mov
push
or
mov
xlat
jne
jp
inc
ret
lods
int
hlt
out
mov
adc
sub
dec
test
loop
xor
cmpsl
mov
add
or
mov
enter
sti
inc
or
inc
add
and
dec
and
xchg
xor
rcrl
mov
xlat
push
adc
sub
jae
mov
out
stos
jo
mov
xchg
test
scas
xchg
adc
jns
mov
fwait
adc
jne
mov
add
stos
fldt
je
lret
mov
aaa
rcll
jo
xchg
sbb
mov
cmp
mov
push
mov
jo
test
into
xor
mov
xchg
loope
or
push
xchg
mov
jl
or
cmpsl
push
xchg
sub
imul
cmp
icebp
adc
scas
jmp
mov
mov
bound
sti
dec
sti
jmp
push
daa
push
push
sbb
adc
out
push
pop
ret
mov
push
or
add
cmp
jle
arpl
ss
xor
mov
pop
filds
pop
daa
adc
and
add
push
and
and
fsubrs
andb
test
fdivrl
bound
pop
enter
ja
in
cld
pop
js
cmp
imul
insb
inc
inc
stc
or
aas
mov
push
scas
fisubrs
cmp
in
test
imul
loope
sbb
leave
mov
jp
pushf
fdivrs
cwtl
ret
push
cld
repnz
stos
imulb
add
lods
and
mov
adc
mov
sbb
std
clc
xchg
cmpsl
stc
push
enter
xor
cwtl
aaa
or
out
mov
sub
pusha
out
cmpsb
sbb
rorb
add
icebp
mov
outsb
dec
cwtl
sahf
addr16
jg
xor
push
inc
fdivr
sbb
add
cli
pop
sbb
xor
repz
dec
icebp
cmp
adc
insl
sbb
sub
cmp
and
mov
out
and
dec
fwait
arpl
mov
clc
jecxz
mov
les
cmp
and
cmp
daa
inc
es
lcall
in
clc
das
lret
leave
push
shll
int3
jge
decl
stc
das
iret
movsl
push
and
sbb
ss
in
pushf
int
cmp
ret
insl
jbe
jcxz
test
adc
pop
rcll
mov
dec
xchg
mov
arpl
sbb
and
decb
adc
scas
in
jnp
push
imul
out
addr16
or
frstor
and
jne
adc
lret
pop
outsl
mov
adc
add
jno
call
mov
aas
int3
dec
xchg
jbe
or
test
and
and
mov
outsb
sbb
jb
into
dec
lods
aaa
in
inc
xchg
stos
jmp
add
or
aad
xchg
cmc
dec
in
and
lret
outsl
fstpl
sahf
jmp
ret
mov
cmp
jnp
dec
xchg
sub
dec
arpl
dec
mov
inc
mov
adc
mov
xchg
and
dec
dec
fimuls
mov
std
sub
or
cwtl
sbb
int
sub
sbb
mov
pop
mov
xor
aaa
jle
mov
push
clc
mov
inc
jae
pop
push
add
inc
inc
out
into
sti
xlat
arpl
cmp
str
ds
scas
add
int3
lahf
es
shlb
in
xor
stos
daa
fsub
or
or
mov
das
jmp
test
mov
pop
adc
cmpsb
popa
inc
mov
popf
xor
or
cmpsb
or
push
sbb
loope
push
xchg
or
pop
test
mov
xchg
adc
out
bound
adc
mov
pop
mov
scas
xor
aad
mov
test
insb
loopne
mov
inc
bound
add
push
sbb
mov
outsl
mov
bound
loope
jge
jge
sub
push
cld
ljmp
outsb
pop
sbb
sub
cmpsl
call
sub
xlat
mov
pop
fwait
push
cli
cmp
push
sbb
faddl
adc
out
and
arpl
mov
dec
sarl
ljmp
cmp
cmpsb
ds
mov
mov
ret
cmpsl
sahf
mov
bound
arpl
xchg
out
mov
jno
subb
mov
xor
xchg
add
push
adc
ljmp
inc
xchg
jl
jnp
lea
and
adc
jge
je
in
or
fdivl
mov
fstl
xor
popaw
jae
sti
shlb
fcoms
xchg
jnp
lods
ja
jmp
hlt
xor
jnp
pop
mov
dec
stos
add
pushf
outsb
or
jecxz
add
xchg
decl
xor
scas
mov
add
aaa
mov
mov
jmp
and
dec
mov
mov
and
dec
inc
push
and
xchg
pop
hlt
add
jnp
pop
jns
mov
call
xchg
or
adc
push
cmp
inc
mov
adc
ds
es
push
inc
cs
adc
mov
into
pop
sbb
jb
enter
xor
lock
xorl
dec
xchg
dec
xor
fimull
mov
divl
add
loopne
dec
fisttpll
lods
repnz
push
mov
cmp
pop
mov
pop
mov
dec
push
insb
cli
xchg
pop
cmp
jmp
inc
cmp
leave
js
inc
mov
rolb
in
ja
jmp
xor
fdivrl
insb
mov
clc
push
inc
jmp
mov
ja
fucom
xor
sbb
fldcw
sub
xlat
pushf
dec
inc
cmp
ficompl
int
and
aas
std
and
lea
jmp
dec
les
dec
popf
je
jne
leave
insl
cs
push
pop
push
mov
push
xchg
js
push
xor
xchg
lret
cmp
sbb
xchg
mov
loop
mov
jae
cwtl
ljmp
fwait
dec
fnsave
xchg
cmp
es
test
pushf
dec
push
mov
jno
xchg
out
pop
sbb
pop
insl
test
mov
pop
pop
cs
lea
rcr
rolb
xchg
jg
push
out
test
and
and
popf
jmp
mov
xchg
mov
test
sahf
xchg
lcall
or
fdivr
add
sub
add
fstl
lret
subb
dec
mov
jae
xor
inc
dec
repnz
and
add
in
dec
cmc
fisttpll
sahf
in
inc
pop
les
jbe
dec
sahf
in
daa
mov
mov
movsl
movsl
xor
mov
mov
xlat
fadd
mov
dec
push
xor
inc
mov
and
repz
and
push
push
movsl
pop
cmp
xor
add
rorl
sub
mov
mov
xor
cmc
shll
cmp
movsb
or
pushl
add
rcll
cld
pusha
dec
ret
ds
iret
add
push
aad
or
mov
dec
in
sub
pop
cwtd
cld
fs
add
sbb
hlt
jns
inc
imul
ret
xchg
sub
jbe
js
adc
xor
cwtl
ret
inc
mov
mov
mov
movsb
xor
or
mov
push
cmp
adc
or
dec
in
pop
xlat
add
mov
das
inc
stc
ljmp
dec
leave
cltd
dec
sahf
or
fldenv
mov
mov
xchg
inc
leave
jecxz
adc
push
cmp
bound
cmp
xchg
lcall
shl
aas
add
pop
mov
minps
test
mov
popa
cmp
mov
iret
xor
lods
dec
ljmp
mov
or
leave
add
pop
sub
adc
in
insl
mov
jge
mov
ja
jmp
inc
insl
repnz
xlat
jle
fwait
stc
jns
cmc
popa
das
nop
cmpsb
jnp
dec
loope
mov
inc
xor
jns
outsl
add
bswap
pop
inc
mov
mov
or
inc
mov
shrb
jns
fmull
dec
mov
mulb
adc
and
lea
dec
and
aas
push
or
xor
push
ljmp
das
mov
or
mov
push
insl
scas
pop
inc
and
sbb
mov
lret
int3
loopne
test
xchg
inc
lea
push
outsl
and
jae
lea
inc
lcall
mov
push
daa
fsubrs
stc
add
mov
testb
rcl
daa
insb
dec
jno
clc
mov
cmp
outsb
jmp
subb
or
add
push
mov
in
or
test
imul
push
frstor
xchg
cltd
out
imul
dec
mov
repz
push
adc
jnp
inc
fisubl
cmpb
jno
jns
cltd
mov
push
notl
fisubs
mov
and
lea
pushf
jns
aaa
adc
jle
arpl
aas
aas
arpl
ss
lock
mov
mov
pop
das
cld
jne
adc
pusha
mov
rorb
in
push
outsb
outsb
aam
pop
testl
inc
mov
aam
xchg
jo
mov
cli
mov
arpl
int
repnz
int3
arpl
hlt
cmp
jge
and
inc
test
pop
dec
mov
cmp
addr16
rol
faddl
lahf
sub
dec
mov
clc
aaa
mov
ja
adc
icebp
xchg
jo
dec
inc
mov
in
pop
loopne
dec
cli
and
hlt
insl
int
clc
jge
and
cmpsl
cmp
and
adc
inc
jae
gs
lahf
cmp
xlat
inc
jle
imul
dec
add
pop
jp
leave
lret
nop
lods
movl
test
fwait
mov
sbb
jecxz
lret
imul
dec
sbb
or
das
mov
icebp
cmp
inc
hlt
movq
or
push
push
sbbb
out
leave
dec
sbb
jae
inc
std
xor
inc
lds
adc
std
test
ja
dec
or
mov
std
mov
arpl
loope
add
xchg
loopne
fwait
je
rclb
outsb
test
mov
xchg
addr16
sbb
jp
xchg
inc
popa
push
pop
push
pop
icebp
in
sbb
push
push
inc
or
fildll
movsl
and
mov
mov
loope
xor
test
fcmovb
bnd
push
mov
xor
insl
aad
out
add
inc
adc
inc
mov
or
cmpsb
push
mov
insl
loope
push
notb
cmpsl
push
es
push
xor
icebp
xor
and
test
mov
lock
cwtl
in
mov
mov
jae
mov
xchg
xchg
push
jge
add
jae
push
test
in
add
mov
mov
ds
mov
cmp
mov
cmp
mov
imul
cli
test
inc
in
mov
jp
sahf
adc
and
bound
mov
xor
xchg
jno
shll
sub
imul
add
aad
call
adc
stos
mov
mov
cmp
pusha
add
sbb
enter
rolb
mov
pushf
loope
cltd
dec
sti
jae,pn
add
jmp
stc
imul
jo
push
sbb
xor
stc
sub
cmp
jb
fdivr
stos
notl
incb
lods
mov
and
inc
push
sub
ret
movsl
push
mov
imul
pop
and
mov
lods
inc
mov
cmp
and
xor
cwtl
out
insb
cmp
inc
lcall
push
adc
push
cmc
fwait
and
in
bound
out
jno
dec
pop
ret
aad
xchg
mov
cmpsl
pushf
cli
push
enter
adcb
js
or
cmpb
adc
jo
jbe
and
aad
jmp
icebp
and
mov
mov
dec
lea
sub
push
out
sub
fsubl
decb
xor
jp
adc
daa
idivb
movb
aas
cmpsb
ficompl
mov
cltd
fwait
adc
dec
pop
cli
lods
fdivl
cmp
dec
mov
mov
stos
in
mov
stos
mov
mov
mov
test
xor
sub
pop
dec
push
ror
pop
aas
add
push
sahf
lods
shlb
sbb
mov
ljmp
jae
loope
and
or
ret
jp
cs
sbb
sub
sarb
sub
mov
sbb
std
jns
jb
mov
dec
sbb
shrl
sub
repnz
push
cwtl
rol
es
xorb
sub
fnstenv
je
lods
add
pop
xlat
in
xchg
sub
cwtl
cmpsb
mov
jle
ljmp
mov
movsb
nop
xchg
bound
sub
fisttpl
dec
incl
out
cmp
mov
or
stos
cmpsl
cmp
and
pop
sub
cmp
je
cmp
aad
ret
ljmp
mov
jl
movsb
jae
lods
sbb
in
negl
lods
jge
mov
sub
jnp
or
xor
mov
fsubl
sti
stos
mov
movsl
add
rorb
xchg
js
xchg
lods
inc
pop
pop
es
cmp
leave
cmc
pop
ja
mov
xor
sahf
leave
stc
or
pop
ja
test
aaa
push
rcll
jg
cmp
js
orl
in
pop
push
lahf
dec
xchg
push
loopne
cmpsb
jg
ljmp
popa
pop
sbb
ds
pop
cwtl
add
stc
xchg
adc
nop
cmpsl
mov
pop
mov
mov
addr16
jo
xor
dec
pusha
repz
out
rcl
push
sbb
xlat
sbb
test
dec
jbe
cli
dec
shl
fidivrl
inc
movsb
push
loopne
jns
orb
xchg
xor
outsb
aas
mov
sbb
out
andl
xor
aam
xor
popf
movsl
xchg
push
fsqrt
inc
or
pop
cmp
cs
iret
std
xchg
fisttps
mov
mov
push
test
lds
xor
cmp
in
xchg
inc
ljmp
into
lcall
or
je
cmp
add
push
push
iret
adc
cltd
xchg
test
addl
pop
leave
stos
int3
jae
xchg
mov
push
fwait
jnp
push
les
int3
and
pop
push
cs
clc
lds
sbb
ret
mov
cltd
repnz
rorl
scas
or
in
sbb
mov
push
sub
es
cmc
push
lcall
movsb
out
xchg
in
les
and
push
outsb
fwait
cld
mov
add
sbb
lock
cmp
and
stos
push
lods
cmpsb
adc
pop
and
inc
movsb
xchg
dec
ss
imul
jne
test
pop
sti
inc
shrl
int
aas
fwait
mov
popf
dec
addl
and
dec
xchg
loopne
mov
fdivrp
ja
mov
mov
call
push
jb
xchg
out
add
mov
cmp
syscall
push
addl
inc
out
popf
repz
cmp
lds
xor
mov
or
jb
xchg
and
mov
adc
pop
insl
movsl
hlt
lahf
sub
les
push
inc
fcmovnu
mov
mov
dec
or
shrb
inc
pop
push
jp
cld
xchg
xor
jns
xadd
sub
jmp
push
sti
and
add
pop
iret
and
int
push
dec
test
mov
cmp
dec
enter
jle
fistps
jne
jbe
aam
repnz
push
cmp
fstps
jp
xchg
jno
and
mov
push
test
pop
in
push
sub
fadd
cmc
mov
in
fsub
mov
lcall
or
mov
pop
iret
popa
push
int3
cmp
mov
lret
xchg
mov
pop
xchg
insl
jae
mov
lahf
fwait
fwait
lret
lret
jecxz
popl
push
ret
test
ds
cmp
aaa
jbe
outsl
dec
fwait
mov
push
imul
test
adc
stos
loop
aad
dec
scas
mov
push
xor
in
movsl
adc
adc
mov
mov
fst
mov
cmp
insb
sbb
dec
cmp
ss
lret
stos
aas
push
int3
jmp
or
sahf
mov
mov
inc
movsl
push
sbb
mov
add
cli
out
pop
lock
mull
xchg
pop
inc
cmp
dec
mov
lods
xor
jnp
mov
in
push
push
ljmp
sub
add
popf
inc
sbb
call
je
sbb
insb
or
test
loope
sahf
imul
stos
int
shrb
mov
aam
xor
lea
fcoms
jmp
cli
xlat
lea
outsl
cli
xchg
mov
pop
sub
xchg
xor
adc
fildll
popf
push
mov
push
ja
adc
or
xor
popf
sub
push
enter
sbb
xor
jge
cmp
sub
stc
push
or
cltd
loop
and
mov
outsb
mov
hlt
pop
mov
xor
push
sbb
aam
push
cmp
push
sbb
add
mov
lret
mov
mov
jbe
inc
add
cmp
cld
dec
push
xchg
cmp
data16
ds
loope
xor
mov
add
xchg
fdivrs
jbe
fidivs
scas
push
pop
xchg
test
sbb
fwait
nop
or
sbb
fidivl
sub
popa
popf
test
int3
jge
adc
jp
adc
jno
sbb
jmp
cmpsb
fists
jecxz
mov
ljmp
pop
inc
in
int
es
mov
int3
sbb
mov
xchg
iret
dec
or
cmpsb
push
aad
mov
push
inc
bound
arpl
pop
in
pop
test
xchg
ret
fsubrp
cltd
ds
add
sahf
adc
test
cwtl
mov
dec
mov
cmc
lcall
sub
pop
push
inc
ret
fldcw
cmp
adc
int3
outsl
cs
filds
add
mov
inc
push
sbb
cmp
mov
je
adcl
js
fs
out
xchg
or
push
mov
dec
ja
xchg
aaa
loop
rcl
push
inc
push
dec
push
mov
sub
out
fadds
sub
cmp
sub
mov
xor
sub
icebp
xchg
sub
inc
xor
ljmp
pop
in
cmp
jge
mov
pop
xor
repnz
fisttpl
inc
mov
and
mov
js
cmp
je
test
inc
xchg
pop
lea
dec
insl
mov
jb
insb
mov
ljmp
outsl
mov
push
mov
mov
add
dec
mov
bswap
loope
dec
mov
dec
mov
decb
inc
cmp
scas
loope
cld
ja
fbld
cmp
mov
pop
xlat
jo
pushf
int3
sbb
cmp
mov
xchg
pop
push
adc
xchg
sbb
fidivrl
sub
out
dec
lcall
icebp
and
jle
shlb
outsl
lea
and
lods
and
fisubrs
mov
ljmp
inc
mov
out
sbb
push
sbb
or
add
adc
xchg
sbb
cmp
jecxz
push
imul
pop
xabort
fisubrs
inc
pop
dec
sub
mov
imul
daa
es
cwtl
lahf
fdivl
or
out
pushf
test
cmc
pop
shll
inc
inc
aam
or
rclb
and
jno
mov
shll
pop
arpl
in
xchg
insl
sub
xor
cmp
sub
test
adc
mov
fiaddl
and
sub
or
xor
hlt
es
lret
js
je
jmp
jb
movsl
aad
fdivrl
cltd
sub
inc
push
filds
xlat
testb
imul
lcall
jp
rolb
and
scas
cmp
gs
in
arpl
imul
mov
enter
mov
pop
jbe
iret
inc
and
popf
push
stc
and
push
mov
xor
jb
inc
sbb
int3
je
ljmp
decb
pop
mov
push
aad
push
in
cmp
lret
mov
and
and
dec
xchg
sub
addb
repnz
mov
orb
ja
sbb
out
jbe
rolb
je
popa
pop
jne
sahf
stc
movsb
aaa
repz
scas
bound
push
das
leave
call
aad
inc
insb
mov
adc
jecxz
loop
dec
ret
sub
push
ret
rorl
orl
das
sbb
cmp
mov
and
cli
dec
push
push
pop
testl
imul
aaa
and
fstpl
mov
cmpsb
push
xchg
cmpb
aam
mov
lods
add
outsl
lods
sbb
push
int3
pop
sub
inc
stos
out
fcoml
jo
jnp
jns
or
or
or
fwait
loop
outsb
sub
mov
addb
xor
dec
xor
push
jns,pn
jl
xor
loopne
dec
xchg
ret
pushf
push
mov
into
sub
cld
xchg
cmp
dec
mov
mov
push
pop
add
jge
ds
mov
dec
xor
and
add
pop
mov
scas
into
and
clc
shlb
movsb
scas
adc
sti
fcmovbe
aas
sti
xchg
lea
test
repz
xor
iret
adc
xlat
jl
ret
xlat
mov
jbe
rclb
out
adc
loopne
outsb
push
push
lods
std
or
dec
sbb
adc
jnp
push
inc
dec
mov
pop
cmpsl
fildl
pop
mov
pop
xor
dec
aas
sbb
adc
cmp
popf
int
std
cmp
add
stos
mov
repz
rcrl
push
add
gs
js
mov
mov
movsl
cmp
ja
cmpsl
test
fimuls
bswap
test
lea
adc
cmp
mov
pop
xor
shll
xchg
out
fsubs
call
pop
testb
cltd
mov
inc
rorb
xchg
data16
repnz
jp
add
inc
call
xor
in
leave
int
imul
jmp
add
mov
xchg
and
shl
sbb
fwait
sub
lea
inc
inc
dec
xor
fildll
sar
sbb
ljmp
push
es
in
push
out
cmp
popf
daa
imul
outsl
dec
clc
xor
test
cli
dec
loope
xchg
fnsave
test
data16
pop
add
push
nop
insl
or
fildll
shrl
dec
adc
jl
dec
cmpsb
sub
add
adc
out
mov
mov
popf
xchg
and
lret
jg
dec
lods
mov
push
cmp
loopne
push
or
sub
inc
cmp
jle
rcrb
in
cwtl
mov
push
inc
add
std
ds
fadds
cmp
push
push
sti
jmp
pusha
inc
movsb
inc
and
outsl
push
not
pusha
jno
pop
loope
mov
or
popa
fisubrs
test
jp
push
outsb
aam
or
mov
inc
xlat
inc
cmp
dec
cmp
clc
push
mov
stos
mov
and
das
lods
fcompl
mov
inc
push
xchg
ljmp
in
loope
test
ds
clc
repnz
sub
aas
mov
jo
or
xor
mov
inc
inc
cmpsb
rcrb
hlt
mov
xchg
stc
ja
pop
mov
xchg
lret
jmp
movsl
es
outsb
aad
mov
push
pop
arpl
aam
mov
add
sbb
cli
shll
inc
testb
cs
mov
push
pop
cli
mov
repz
stos
fldcw
or
popf
cmp
pop
adc
xchg
mov
push
or
add
js
sub
fisttpll
imul
cmp
adc
scas
adc
cmp
adc
ror
loop
lds
jp
inc
std
jmp
cld
inc
mull
pop
push
aad
popf
popa
dec
mov
cld
mov
dec
lcall
repz
ret
fldcw
cld
and
test
mov
and
and
out
xchg
insb
xor
outsl
xchg
or
mov
sub
xor
xlat
loope
pop
and
xor
stos
cs
fcmovb
xchg
cmp
xlat
push
sub
and
ret
into
cmpsb
lock
cmp
insl
push
jnp
jle
jp
sub
divb
inc
xchg
xor
push
lahf
jl
sti
sbb
ds
adc
mov
enter
jp
sub
mov
inc
push
aaa
adc
je,pn
push
orb
xchg
mov
enter
shl
je
test
mov
or
rcll
subb
in
sti
inc
inc
inc
cmp
xor
mov
test
sbb
pop
insl
push
mov
aaa
repnz
xchg
dec
ljmp
mov
and
xchg
mov
mov
mov
jl
test
cmpsl
sub
dec
and
addr16
in
test
mov
sub
test
mov
adc
sub
jecxz
and
mov
cli
inc
lret
inc
divl
adc
lea
pop
into
pop
jno
lock
ret
mov
mov
pop
in
adc
cltd
js
jae
xchg
gs
insb
pop
jb
pop
inc
xchg
aad
cmpsb
sbb
dec
inc
sbb
sub
repnz
or
push
push
jb
dec
adc
lret
ja
in
mov
notb
aas
icebp
mov
sbb
jo
pop
xchg
xchg
loope
fsubs
jmp
sbb
push
jl
in
sti
lcall
fs
cmc
fcoml
sub
rorl
add
push
mov
push
fdivp
push
ret
in
push
mov
fcmovne
and
add
mov
les
adc
mov
leave
xor
sub
iret
fwait
dec
fwait
xchg
hlt
mov
push
cmp
dec
out
push
push
outsb
cmc
dec
out
out
in
test
cltd
dec
pusha
pop
lods
test
and
pop
xor
pop
pop
mov
cs
xchg
mov
out
testl
sbbl
mov
inc
fisubl
jbe
inc
sub
jecxz
mov
mov
xlat
stos
clc
loop
clc
inc
fidivl
sbb
fwait
jbe
stc
mov
xchg
mov
ljmp
xor
xchg
es
xchg
andb
jnp
add
lock
loopne
call
mov
std
insb
inc
rcr
sub
sarb
mov
mov
das
push
sub
sti
adc
cld
jno
fdivrl
pop
adc
push
jne
and
mov
and
mov
les
jb
jno
cmpl
push
stc
sub
sti
fstpl
lret
clc
in
cmp
leave
clc
push
sub
jae
dec
mov
xchg
xchg
aaa
pop
jecxz
jmp
push
cmpsb
sbb
xchg
mov
std
push
insb
enter
push
test
mov
cmp
sti
imul
mov
popf
adc
shlb
in
aam
pop
jmp
xor
and
fistps
xor
jnp
jno
je
and
inc
les
add
ficoml
and
cmc
out
sub
ret
add
dec
cmpsl
xlat
push
add
mov
push
insb
sub
mov
mov
mov
aad
lret
xor
stc
pop
jb
shll
adc
bound
lcall
pop
out
negb
dec
sbb
mov
sahf
lods
jp
test
shll
loope
in
jbe
ja
xor
clc
bswap
sub
mov
jecxz
push
xlat
xchg
adc
loop
hlt
ja
aas
shll
pop
cwtl
rcl
inc
dec
mov
or
rorb
sub
adc
into
ret
scas
lret
adc
hlt
imul
pop
into
addr16
add
in
cmp
aas
cs
xchg
mov
mov
fbstp
sub
inc
mov
mov
xchg
out
aaa
cmpsl
xchg
sbb
sub
daa
mov
iret
or
cld
push
ljmp
pop
and
or
fmuls
pop
call
pusha
sbb
dec
xor
sbb
pop
aaa
lret
pop
inc
and
pop
jecxz
lock
out
cld
xchg
cld
iret
xchg
jg
pop
movsl
jnp
loop
jb
bnd
popa
inc
push
or
pop
cmp
sti
inc
xchg
pop
loopne
mov
xor
mov
roll
mov
repz
imul
fs
les
cwtl
in
pop
out
push
ret
stc
cmp
fistpl
and
dec
ficomps
or
mov
mov
sub
lret
inc
sbb
dec
and
lret
jl
cmp
popa
mov
inc
and
lret
xchg
dec
adc
and
fmuls
cld
mov
popf
inc
push
sbb
xor
mov
mov
bound
int3
and
daa
add
aam
cmpsb
aas
inc
das
lods
dec
adc
gs
and
mov
movsb
jge
push
gs
inc
outsb
mov
fisubrs
or
push
idivb
aam
inc
add
cmp
pop
or
mov
lods
jmp
jp
mov
add
jle
idivl
daa
cld
xchg
nop
imul
out
pop
pop
mov
xor
pop
cmpsb
mov
pop
outsl
test
jecxz
js
imulb
dec
repz
adc
notl
loopne
loope
daa
test
or
xlat
stc
es
cwtl
xor
cmc
sbb
pop
fidivl
int
scas
inc
push
pushf
adc
popa
loope
xchg
lock
inc
mov
sbb
sbb
dec
jns
mov
dec
xchg
xchg
xor
push
push
xor
das
fisubs
push
push
iret
sarl
inc
test
mov
or
movsl
iret
pop
popa
out
andb
aaa
adc
and
cld
xor
rcll
mov
rcll
dec
add
jl
or
push
add
loope
xchg
mov
dec
movsl
int3
inc
lds
xchg
or
in
pusha
mov
jl
dec
mov
js
test
addr16
cmp
cmp
push
sahf
xchg
clc
lahf
out
rorb
sarl
test
xor
fiadds
fs
out
cltd
jge
mov
xor
dec
sarb
ss
xor
in
sbb
add
jb
out
mov
jecxz
push
push
push
pop
jae
mov
in
shlb
push
inc
sti
in
inc
xchg
pop
xchg
cmpsb
imul
pop
out
cltd
cmpsl
mov
scas
fwait
push
arpl
cmp
xor
xor
mov
mov
outsb
pop
xorl
mov
scas
pop
jne
xor
and
mov
scas
jmp
adc
or
lret
fmuls
sub
aad
sbb
mov
xchg
cwtl
dec
in
xchg
sahf
rorl
mov
and
mov
lock
jo
xor
leave
cmp
jb
data16
jmp
xchg
xchg
mov
or
shll
adc
jge
mov
movsb
test
push
push
jmp
lcall
pop
int3
insb
and
lods
decb
or
inc
mov
dec
mov
inc
iret
mov
popa
fsincos
sub
loopne
data16
or
xlat
mov
cmc
dec
mov
dec
xlat
inc
ja
jg
das
xchg
push
mov
or
insl
and
lock
icebp
inc
cmp
inc
push
xchg
sub
sub
xor
mov
orb
add
jp
lcall
xor
ds
loopne
xor
mov
mov
in
push
je
mov
repnz
add
sub
js
jmp
xor
lahf
sub
stos
xor
mov
xchg
xchg
bnd
push
enter
outsb
fwait
or
test
add
push
or
jmp
jne
sbbb
jno
movsb
inc
xchg
cmp
mov
lcall
add
mov
arpl
push
outsb
icebp
in
insl
xrelease
std
xor
mov
jp
jb
xchg
outsb
lret
mov
mov
pop
loope
push
inc
inc
cld
fs
js
jp
mov
xchg
lds
jge
adc
insl
mov
add
sbb
jae
inc
in
mov
cli
movsl
lods
and
pop
lea
dec
aaa
popf
or
pop
cwtl
mov
adc
addr16
iret
cmp
push
stc
imul
movsb
mov
xor
or
add
imul
rcll
and
sub
sub
cmpsb
push
ret
rcrl
xchg
dec
fidivrs
sub
test
gs
mov
lea
sub
lcall
push
xchg
jecxz
push
insl
push
mov
jg
popa
loopne
xchg
push
popa
int3
lods
push
inc
imulb
cmp
mov
push
xor
xchg
xchg
cmp
push
sub
jmp
jns
addr16
sbbl
sub
adc
push
sbb
xor
add
mov
outsl
mov
repz
mov
push
aad
lods
icebp
leave
mov
xchg
ljmp
cmpsl
js
loope
push
pop
pusha
test
fldenv
mov
imul
sbb
push
mov
outsl
sbb
ret
xchg
cmpsl
nop
xor
ficoms
pop
sub
hlt
aam
inc
dec
nop
and
cmp
pop
ljmp
pop
cld
js
js
out
cmp
pop
in
and
add
lcall
sub
dec
cli
and
add
pushf
mov
into
mov
cmp
mov
xor
mov
push
out
jl
fwait
inc
cmp
aam
dec
mov
push
das
sbb
xchg
cmc
mov
test
ljmp
pop
push
sbb
fidivl
and
sub
add
add
and
flds
mov
mov
dec
mov
ss
mov
iret
fisubs
sarb
and
mov
lea
xchg
arpl
jg
xlat
cmp
xor
mov
lea
out
inc
sub
push
sbb
insl
or
jl
jnp
and
adc
loope
xchg
aad
xchg
xchg
push
out
int
enter
mov
scas
inc
gs
insl
mov
pop
daa
mov
mov
mov
lods
cli
pushf
fimull
add
sub
mov
lds
push
jge
jp
push
dec
out
fldenv
cmpsb
fdivs
cmc
iret
shll
add
mov
xchg
enter
add
xchg
stos
dec
mov
mov
push
inc
movsl
push
hlt
gs
arpl
or
jl
jnp
jbe
xchg
mov
lods
out
cltd
jle
mov
cmpsb
out
loopne
loopne
in
push
ret
mov
sbbb
loop
jbe
insb
inc
insl
xlat
out
in
push
pop
scas
inc
outsl
scas
or
fidivs
rol
or
filds
sub
jns
pushf
mov
mov
cmp
adc
gs
aad
mov
loop
mov
ljmp
addb
shlb
lods
xchg
cli
call
clc
push
arpl
jbe
lret
ja
dec
sbb
lcall
push
push
js
jns
push
push
imul
fsubs
loope
imul
test
bound
lcall
push
adc
jecxz
push
push
mov
push
adc
jle
lods
in
imul
pop
cmp
mov
push
dec
outsb
sub
scas
es
mov
push
out
xor
lods
or
mov
ja
cmp
ss
push
in
mov
mov
xchg
insl
jns,pt
inc
cmp
dec
xor
sahf
loop
es
mov
out
xchg
ficomps
mov
and
es
movsb
mov
cmp
insl
mov
dec
sub
jecxz
sbb
add
mull
nop
push
jmp
daa
lcall
in
lcall
or
jno
call
test
enter
fmul
test
inc
pop
dec
push
jnp
and
mov
inc
ja
fsubrl
repz
iret
pop
cli
jg
movsl
lods
outsl
mov
or
cmc
xorw
mov
out
cltd
push
das
xlat
and
fs
adc
jl,pt
dec
mov
nop
addr16
or
in
mov
ret
fisttps
out
pop
out
add
popa
mov
aas
mov
mov
and
add
mov
ret
sbbl
and
and
aaa
outsb
lcall
addr16
add
mov
add
jo
bnd
loop
jmp
pop
add
jne
enter
xor
inc
mov
lock
std
xor
pop
out
mov
bnd
inc
test
les
lcall
jnp
pop
out
loopne
sti
stc
jb
mov
loope
sub
mov
mov
jb
or
scas
setns
mov
out
sub
inc
stos
fwait
lret
inc
dec
repz
shl
sahf
aam
idivl
scas
push
add
popa
fidivrl
test
pop
pushf
in
or
ror
xchg
sbb
lcall
dec
fidivl
imul
dec
adc
push
jns
es
es
sub
dec
pop
lds
adcl
out
push
cmc
mov
lea
leave
mov
nop
xor
pop
push
lea
add
les
adc
push
xor
mov
pop
loopne
inc
mov
mov
call
test
call
orl
bound
sub
mov
rcrl
incb
pop
push
std
push
scas
push
mov
jne
sbb
cwtl
push
in
pop
xor
adc
fistps
test
xchg
jl
mov
xlat
out
in
cltd
push
sub
ja
cmp
test
dec
rcrb
mov
call
and
xchg
cmp
dec
bound
stc
rcll
mov
mov
mov
push
popf
shrd
mov
dec
sarl
rcr
adc
aam
add
sbb
dec
cmpsb
pushf
push
pop
xchg
daa
jb
sbbl
mov
cmp
scas
and
sti
lods
daa
loop
jbe
shl
cwtl
jecxz
sbb
xor
or
xchg
mov
sbb
aam
lcall
cwtl
mov
sub
lcall
cmp
push
inc
in
jge
pop
fs
pop
xchg
lds
and
icebp
rcrl
jno
scas
and
or
jecxz
scas
add
into
call
push
cld
mov
jp
adc
in
push
hlt
xchg
out
sub
sub
fistps
inc
dec
mov
xchg
outsb
and
xor
mov
cmc
jecxz
dec
push
test
sbb
mov
xchg
pop
test
pushf
fwait
aam
jns
and
insb
je
or
loope
pop
in
push
sub
xchg
jb
scas
mov
fistps
outsl
hlt
pop
lods
inc
out
movsb
mov
push
inc
sbb
jb
inc
in
mov
xor
jns
jp
aam
lods
ja
sub
outsl
push
pushf
ss
mov
cld
mov
cmp
fmul
mov
inc
cmp
test
mov
sbbb
jno
mov
mov
mov
jb
mov
fdivs
mov
jbe
movsl
dec
pavgb
daa
test
push
lahf
adc
out
cmp
jae
mov
das
pop
mov
push
in
mov
scas
push
add
and
jle
outsl
ss
push
or
adc
lods
xchg
mov
in
lods
mov
jge
push
push
push
popa
lahf
mov
inc
dec
adc
jmp
lret
cmp
jae
jb
fidivl
adc
mov
dec
mov
aaa
add
xchg
out
inc
mov
mov
pcmpeqw
cwtl
sub
cld
pop
pop
cltd
jns
cltd
out
mov
repz
dec
cmpsl
mov
mov
mov
pop
mov
mov
in
push
lcall
scas
jp
cmpb
daa
mov
push
pop
enter
sti
nop
mov
cmp
mov
jo
xor
stos
repz
mov
js
mov
and
in
ss
sbb
jo
cltd
lock
repnz
orl
push
jge
out
popf
inc
sbb
and
jge
cmp
push
outsl
mov
shlb
mov
scas
lods
lds
popf
pop
andl
lods
in
gs
cs
jge
sbb
cli
mov
cld
cmp
insb
inc
or
js
mov
inc
lcall
lea
ja
test
sbb
xchg
mov
lahf
xchg
push
stc
pop
leave
sbb
mov
xchg
out
mov
inc
ljmp
push
popa
push
jbe
jl
lret
inc
cmp
xor
imul
stos
stos
clc
pusha
ret
aam
add
rorl
or
movsb
xor
xchg
add
je
cmc
pop
or
out
clc
pop
jnp
bound
lock
or
cmp
scas
popf
sar
mov
xor
faddl
les
jns
xlat
notb
add
clc
in
xchg
mov
frstor
push
mov
sbb
jg
mov
in
ljmp
loope
xchg
pushf
pop
mull
pop
inc
lea
mov
sub
sub
scas
cmp
shll
xor
inc
xlat
pop
aam
pop
or
insl
lods
pop
sub
xor
dec
pop
fldenv
sbb
mov
les
inc
pop
fisubrs
jmp
or
add
into
jg
sbb
xchg
push
push
push
sbb
adc
test
divps
call
das
addl
cmp
push
jnp
loopne
in
adc
inc
pop
jecxz
mov
mov
sbb
and
loopne
or
xchg
push
dec
fnstsw
xchg
lods
push
jecxz
rorb
adc
pop
push
lods
and
push
fnstenv
dec
adc
mov
jp
int
push
call
je
lods
mov
xchg
insl
fnstcw
int
pop
test
mov
out
and
adc
adc
inc
leave
adc
movsl
out
ja
push
popa
mov
dec
sbb
in
xchg
shl
call
cmc
jo
mov
stc
outsb
xlat
sarb
loop
fwait
cmp
into
pop
cmpsb
mov
outsl
sarl
xchg
lcall
gs
dec
mov
cmpsb
lods
bound
pusha
inc
sbb
push
icebp
jnp
lds
push
pop
mov
xchg
add
scas
xorb
jne
insl
scas
xlat
loopne
pushf
sub
jmp
fld
push
fcoms
adc
push
imul
repz
data16
lods
popa
mov
int
mov
test
rolb
fcoms
push
in
or
into
cmp
frstor
mov
pop
int
lea
mov
adc
mov
jg
push
xchg
test
in
adc
add
jne
lods
out
and
push
mulb
adc
out
push
push
push
cmpsb
test
daa
and
cmp
bnd
nop
push
ret
lcall
cmp
lret
jmp
and
push
lds
enter
fsubrs
sub
jo
jmp
or
fisubrl
add
mov
aas
add
sub
add
add
jne
dec
lret
sti
pcmpeqb
les
mov
xchg
pop
sub
mov
lds
mov
divl
mov
jmp
psrad
mov
mov
xchg
ficompl
dec
imul
loopne
insl
les
add
xor
xchg
fimuls
cmp
sbb
xor
iret
sarl
sub
add
mov
lcall
adc
stos
pop
inc
outsb
mov
roll
fstpl
cltd
and
shl
addr16
xchg
lcall
dec
sub
daa
xchg
pop
jae
push
vmwrite
mov
sbb
push
mov
jecxz
jb
dec
or
or
popa
mov
and
icebp
pop
mov
adc
mov
or
cmp
out
jnp
fists
insb
sub
mov
adc
test
cwtl
fidivrl
enter
ret
mov
testb
or
stos
in
clc
cmp
shl
jle
stc
adc
idivb
imul
call
mov
jl
mov
mov
sti
test
add
fucomp
add
sub
xchg
jl
mov
lock
mov
js
test
bound
xchg
sub
scas
loopne
inc
jnp
stos
xor
adc
adc
ljmp
cmp
mov
std
jecxz
out
icebp
in
fisubrs
sub
mov
adcl
and
lea
lock
and
jbe
daa
mov
xchg
les
pop
test
call
mov
lcall
pop
sub
and
dec
stc
scas
lds
inc
xor
insb
mov
fucomp
lds
adc
je
dec
mov
xchg
sti
dec
xor
enter
push
dec
popf
inc
and
or
call
sbb
les
dec
pop
pop
inc
fdivrs
jno
imul
push
inc
cmpl
pop
xchg
jmp
add
push
mov
out
fdivrl
jb
dec
ret
mov
lahf
ret
adcl
andb
cld
xor
hlt
cmp
pop
out
push
fists
sarb
rol
mov
inc
add
and
enter
sbb
jge
ja
jns
dec
jg
add
push
in
jp
dec
add
dec
lret
xchg
popa
push
xchg
pop
ljmp
loopne
jbe
je
shll
fisubrs
test
add
sub
stos
imul
sahf
test
lods
pop
push
push
mov
add
ret
adc
shr
pop
leave
fidivrl
enter
dec
ja
mov
xchg
mov
cmp
pop
lods
loop
test
jb
cwtl
out
sbb
jmp
out
stos
rorl
jne
addr16
xor
pop
push
xor
jns
pop
xchg
dec
outsl
pop
dec
add
flds
stos
je
clc
mov
sub
xor
nop
rcrb
jmp
out
ret
xchg
mov
pop
xchg
sbbb
adc
pop
repnz
subl
jle
sti
les
push
sub
call
sbb
mov
adc
xchg
xor
cld
and
test
jl
lahf
cs
into
inc
add
enter
xchg
pop
xor
icebp
jbe
imul
rorl
scas
dec
xor
shr
aas
dec
or
push
dec
fcmovnu
test
add
out
cmp
pop
mov
mov
cmpl
dec
pop
push
dec
and
jmp
fwait
pusha
cwtl
adc
stos
cmp
dec
hlt
adc
mov
loop
iret
shl
das
dec
sbb
or
ds
rorb
ss
sbb
lods
popf
sarl
push
xchg
jne
notl
ret
xchg
cmp
inc
fstl
pop
nop
inc
and
pop
cli
sbb
ret
adc
sub
sti
jecxz
dec
jno
lea
icebp
scas
pop
inc
mov
pop
sti
mov
out
daa
cmp
xchg
jge
insl
loop
test
jl
stos
xchg
fadd
xchg
shll
out
les
and
inc
loope
xchg
insl
or
test
mov
inc
adc
jmp
jge
adc
loope
mov
sti
fdivp
int3
pop
jnp
mov
mov
mov
sahf
mov
cmp
sbb
adc
cmpsl
jnp
loop
sub
push
pop
sub
add
pop
push
jmp
push
dec
in
lcall
inc
aad
mov
dec
dec
dec
lods
fld
fistl
stc
adc
mov
inc
inc
pop
jecxz
cmp
inc
sbb
adc
pop
pop
out
ret
xchg
xor
pusha
push
xchg
pop
xchg
push
adc
add
sbb
adc
sub
adc
cld
aas
cmp
mov
ljmp
jp
jno
rcrb
push
mov
ret
insl
repz
sbb
into
sub
or
sbb
adc
lods
pushf
inc
movsb
fs
or
pop
pop
pop
test
out
xor
dec
inc
jb
loope
xor
daa
pop
add
add
and
sub
js
inc
outsl
jmp
fs
mov
lock
sbb
mov
pop
stos
inc
int3
es
ljmp
cld
lahf
loopne
insb
scas
mov
je
loopne
test
dec
cltd
fmul
jae
shrd
in
mov
jp
pop
xchg
jge
in
ret
pop
xor
add
dec
xor
popf
fistl
xor
getsec
shll
loopne
es
jne
movsl
add
mov
xchg
mov
les
mov
repnz
dec
xchg
sub
dec
push
js
dec
jp
imul
stos
out
push
pop
ljmp
adc
cmpb
push
adc
or
pop
inc
lods
arpl
fidivrs
hlt
dec
fstpt
push
in
dec
mov
stos
and
add
stos
push
je
and
and
adc
cli
sbb
push
aaa
push
adc
imul
mov
scas
add
xor
sarb
ret
inc
fstl
push
mov
jmp
and
inc
inc
mov
push
pop
ret
mov
add
dec
jp
int
xor
dec
std
and
push
rorb
dec
pop
pusha
or
inc
xchg
scas
and
jne
jecxz
je
jp
lret
sbb
ret
xor
rcrb
sub
adc
and
cmpsb
or
jae
jb
aaa
cs
dec
aas
stos
pop
sub
adcl
icebp
out
stos
inc
fistpl
or
fldl
dec
out
push
adc
cmpsb
pop
lods
cmp
clc
and
adc
testl
andps
pop
push
inc
jo
adc
mov
pop
aad
or
or
fdivl
leave
mov
bound
push
pushf
cltd
movsb
add
sbb
mov
scas
xor
int
ja
pop
inc
jb
or
jp
enter
stos
mov
push
cmp
mov
loopne
movsb
cs
add
mov
push
adc
adc
mov
fwait
or
cmp
pop
xchg
aad
popf
fistps
lock
repnz
lcall
das
sti
adc
insb
and
fcmovnu
add
inc
cmpb
jge
insl
sbb
subb
cmpsb
add
jns
mov
es
nop
xchg
lret
imulb
gs
mov
add
add
std
inc
or
inc
inc
and
sahf
hlt
adc
sbb
inc
clc
pop
mul
out
push
lds
xlat
sbb
or
in
lcall
jg
dec
xchg
add
push
pop
daa
inc
push
jle
negb
mov
sub
hlt
sbb
push
ret
ja
std
hlt
sub
pop
stos
fistl
fdivrl
xor
or
xor
sbb
sbb
xor
mov
mulb
pop
push
add
and
rolb
lods
inc
xchg
inc
cmc
pop
ficoml
cmp
lret
popa
add
imul
mov
dec
mov
push
bnd
nop
pop
xchg
lds
or
push
rcr
dec
mov
xor
test
fldcw
arpl
xor
mov
jb
push
xchg
mov
pop
pop
add
fnsave
popf
adc
and
popa
pop
ret
jmp
loop
mov
xchg
lcall
out
pusha
mov
fisubrs
xor
mov
push
stos
ficoms
into
vpmacssdql
inc
enter
cmpsl
inc
xor
xchg
pop
aas
mov
inc
test
jno
mov
cwtl
fisttpl
sub
test
xchg
fs
movsl
add
push
inc
adc
sti
insb
es
dec
pop
ljmp
popa
xlat
xor
and
push
xchg
repz
in
test
pop
push
mov
arpl
xchg
xlat
push
jmp
sbb
inc
roll
int3
fcmovnbe
insb
jno
mov
add
cli
out
movsb
cmpl
lods
cs
in
imul
mov
mov
test
fbstp
pop
lcall
out
cwtl
push
arpl
subb
pop
addr16
jno
mov
xor
jnp
push
mov
jmp
stos
push
and
cld
jecxz
mov
adc
pop
inc
les
test
push
or
jns
icebp
cltd
call
pop
pop
add
jo
cmpsl
xchg
outsb
std
dec
inc
orl
jno
inc
insl
pop
lret
stos
and
add
pop
pop
in
repnz
inc
jmp
out
and
sub
ljmp
dec
lahf
pop
and
int3
in
inc
mov
push
and
imul
sub
ret
cmpsl
leave
dec
inc
gs
out
mov
lods
adc
xchg
movsl
into
scas
adc
in
std
sbb
jmp
data16
and
push
add
sbb
repz
add
dec
shll
and
lcall
dec
clc
aaa
ret
leave
cmp
jp
cmp
mov
lret
fsubp
mov
daa
cmpsl
push
sbb
mov
stc
dec
lods
xlat
es
inc
and
aad
sub
dec
push
mov
ss
inc
add
fbstp
scas
mov
jl
adc
call
add
pop
xchg
cmpsb
dec
sbb
bound
in
lods
jmp
mov
mov
xor
pushf
mov
fistpl
test
push
dec
imul
js
pop
shll
mov
aas
and
nop
xchg
fwait
shlb
fldt
sahf
mov
sub
mov
pop
cmp
lods
loop
xor
inc
sub
pusha
jmp
sub
pop
movl
shlb
cld
push
adc
lods
jno
push
inc
ror
outsb
leave
dec
in
mov
jnp
pop
insb
andl
mov
test
das
adcl
push
xor
ja
std
adc
shl
mov
enter
dec
test
push
pop
testb
hlt
sahf
out
or
imul
mov
pop
add
negl
inc
adc
rcrl
bound
or
das
nop
das
dec
aas
iret
mov
cmpsl
pop
adc
xor
inc
dec
fnstsw
xchg
and
sub
enter
sub
push
cmp
mov
mov
xchg
sub
fistl
ljmp
push
mov
cmp
adc
pushf
pushf
movsb
setge
fisttpll
mov
mov
pushf
fisubrs
jae
fstp
jb
inc
sti
test
out
cmc
das
insl
das
popa
lds
pop
add
fsubrl
cs
jns
shr
or
cmpsb
and
push
cwtl
mov
insb
lods
mov
mov
mov
les
out
dec
cli
leave
mov
insl
bound
fnsave
inc
lock
jo
and
nop
dec
inc
divb
fxch
mov
jg
fiaddl
or
xorb
xchg
inc
inc
loope
ja
jno
and
push
and
jbe
ret
add
push
add
jo
mov
nop
clc
cli
xchg
loop
icebp
push
inc
pop
push
shlb
fistpll
pop
std
int3
adc
jns
fisubrs
xor
push
aaa
or
mov
pop
add
stc
aaa
pop
outsb
lahf
mov
and
aad
push
jge
pop
xor
xor
and
les
popa
mov
sbb
iret
fdivrs
outsl
xor
out
cmc
int
jns
add
sarl
test
sub
dec
push
les
mov
cmpsb
push
scas
adc
fld
or
into
jle
cmp
arpl
rcl
out
aad
pop
xor
jae
push
dec
enter
or
add
mov
cmp
rcll
out
pop
add
push
add
xchg
shrl
lahf
add
adc
pop
dec
jecxz
aas
jne
nop
add
out
loope
js
stos
clc
leave
sbb
mov
call
sbb
mov
inc
fistps
jge
imul
jmp
sahf
addr16
shlb
mov
jo
mov
dec
sbb
gs
into
es
cmp
movsb
mov
dec
mov
push
lahf
out
mov
add
and
leave
pop
pushf
xchg
mov
adc
rcrb
lret
mov
out
xor
mov
popa
in
mov
push
shl
mov
push
daa
fsubrl
jnp
test
push
nop
insb
das
push
movsl
dec
pop
xchg
call
mov
or
mov
xchg
cmp
fists
pop
sahf
or
test
mov
out
xlat
test
insl
test
pusha
inc
in
dec
add
sub
dec
stos
pop
mov
adc
xchg
scas
cld
adc
and
and
pop
stos
imul
add
inc
divb
aad
frstor
and
dec
stos
call
mov
pop
or
and
mov
inc
int3
inc
pusha
add
xchg
scas
repnz
aad
push
js
loopne
sarb
mov
cs
mov
movsb
movsl
and
jns
inc
adc
iret
push
pop
js
adc
mov
mov
filds
movb
arpl
mov
out
cmpsl
mov
icebp
pop
into
cli
notl
or
xchg
jo
scas
dec
loop
sub
pop
imul
sbb
pushf
push
lahf
xchg
fimull
xorl
mov
dec
mov
pop
inc
call
sahf
lret
bound
insl
test
xchg
xor
scas
into
mov
sbb
sub
icebp
cmp
dec
or
rclb
icebp
scas
or
jmp
mov
add
mov
mov
dec
mov
lret
jo
sub
lods
xchg
fwait
aaa
xor
or
or
cmp
lcall
lret
xor
imul
call
imul
lods
inc
xor
mov
stos
adc
xchg
jb
xor
push
cmp
scas
push
dec
add
sbb
xorl
lds
fsubr
adc
stos
dec
aam
les
sub
pop
xorl
mov
incl
pusha
sub
jg
addb
aas
pop
xchg
data16
pop
fdivrl
cld
adc
outsb
jnp
lock
adc
mov
outsl
mov
lea
iret
sahf
xor
dec
outsl
js
dec
inc
leave
pop
or
lock
cmp
fstpt
add
in
sub
dec
test
sub
in
mov
mov
inc
fld
or
jae
cmp
add
test
dec
xrelease
out
cmc
push
aas
pop
and
mov
and
mov
lret
cmp
mov
stos
fwait
stos
push
in
dec
test
bound
inc
mov
rorl
ss
fisttpll
push
cmp
xor
cs
repnz
jae
pop
sbbl
fildll
stos
inc
push
dec
shlb
jl
xchg
loopne
scas
scas
pop
adc
xchg
cwtl
or
cli
push
lods
jp
mov
add
pop
hlt
sbb
cs
cli
mov
jne
stos
incb
fucom
sbb
in
inc
dec
das
fcmovnb
sarb
sbb
add
cs
push
int3
mov
push
lock
mov
lahf
mov
pop
sbb
jp
fsqrt
mov
push
out
ret
fwait
icebp
repz
sub
cmp
outsl
lods
pcmpgtw
push
mov
jge
cmp
frstor
jecxz
mov
leave
ds
test
xchg
sbb
xchg
mov
mov
add
out
hlt
mov
or
xlat
mov
inc
or
cmp
test
add
into
bnd
fmul
dec
cmpsl
int
add
mov
xchg
lahf
sqrtps
outsb
sbb
mov
aaa
sub
arpl
cli
into
mov
daa
pusha
and
sbb
out
sub
mov
and
push
pop
fisubl
pushf
and
xchg
arpl
jnp
and
cmp
mov
adc
clc
mov
pop
mov
jecxz
jae
lock
mov
in
mov
adc
out
popa
cld
test
push
mov
xor
jns
xchg
stos
inc
mov
mov
bound
pop
je
mov
xor
sbb
jb
mov
inc
and
fidivl
add
fsubrp
notl
and
imul
mov
insb
or
push
popf
test
pop
mov
mov
fcmovnbe
fdivs
mov
mov
add
repnz
outsb
stos
std
rcr
ficomps
add
arpl
push
adc
push
leave
pop
jo
mov
je
leave
or
int
add
push
iret
sbb
shrl
sub
clc
cmpsb
out
add
xchg
out
or
stos
lret
pop
in
loop
das
sub
xchg
fsubl
jne
loope
xchg
jne
sub
daa
inc
and
xchg
icebp
lods
pushf
repnz
mov
shlb
and
cmc
cmp
jmp
in
in
xorps
int
add
jg
cld
mov
movsl
pop
mov
sbb
jmp
xor
jg
xor
inc
clc
mov
gs
mov
xchg
pusha
leave
push
pop
mov
shlb
mov
push
push
into
push
es
xchg
sbbl
out
add
mov
ds
inc
sti
inc
pop
and
dec
cmpsb
leave
add
outsl
iret
les
test
addb
pop
popa
pop
pop
cwtl
add
xor
xchg
das
sar
xor
dec
adc
iret
mov
adc
xchg
call
jns
sub
call
mov
jp
fimull
popa
dec
xchg
jmp
data16
sahf
xchg
sarl
mov
push
push
mov
rolb
pop
shlb
push
inc
xor
loop
out
sub
xchg
jo
or
jp
adc
or
lret
xor
cltd
ret
imul
test
dec
pop
fnstcw
inc
lahf
xchg
sub
mov
fwait
pop
sbbb
push
cmpb
and
sbb
xorl
sahf
pop
in
ffreep
out
push
push
jmp
pop
lods
dec
scas
dec
dec
stos
pop
sub
movsl
push
mov
pop
xchg
inc
push
xchg
lea
lea
or
pop
add
test
adc
jne
xchg
test
sti
push
mov
mov
cs
aaa
mov
cs
std
mov
pop
cld
pop
mov
mov
lcall
sub
push
stc
push
ss
mov
outsb
loope
jmp
stos
pop
in
pop
lcall
test
fstps
out
mov
inc
sbb
fmuls
add
jne
pop
test
hlt
pop
arpl
shr
cmp
push
jmp
in
mov
lcall
in
mov
pop
mov
mov
pop
inc
inc
movsl
arpl
cmpsl
mov
test
test
inc
dec
push
out
lods
lret
pop
into
repnz
shlb
and
mov
js
jg
xchg
incl
jg
ret
imul
dec
cmp
pop
lret
jb
push
pop
add
mov
adc
lahf
push
test
std
and
push
pop
fwait
shll
push
rclb
fidivrs
fs
and
mov
imul
sbb
mov
stos
mov
mov
or
adc
sbb
sahf
push
mov
xor
shlb
popa
outsl
cmp
sub
jecxz
mov
lock
mov
test
push
jae
dec
ja
pop
mov
icebp
imul
xor
dec
jns
rol
pop
out
sbb
inc
adc
inc
cmp
sub
lods
mov
push
xchg
cmp
sbbl
mov
popf
add
je
push
fucomi
clc
lcall
in
lds
pop
ja
cs
test
dec
hlt
mov
sub
or
fsts
aad
jmp
es
movsl
mov
pusha
test
cmpsb
dec
xlat
push
add
jno
in
pop
xor
xchg
ss
stc
and
pop
nop
mov
add
mov
jne
push
jg
popf
aas
cmp
mov
iret
cli
pushf
inc
aam
jns
data16
cs
int
xlat
ljmp
lods
leave
xor
sbb
sub
mov
in
lock
cmpsl
popf
lcall
sbb
sahf
int
ja
test
mov
gs
and
mov
or
inc
aaa
repz
xchg
sub
mov
xchg
mov
mov
push
js
pusha
fildll
xlat
in
gs
xchg
je
imul
mov
inc
ja,pt
pusha
outsl
in
mov
aaa
out
mov
movsl
cmp
mov
shlb
cmp
pop
add
mov
push
mov
jg
outsl
arpl
mov
je
lods
shlb
cld
sti
sbb
loopne
popf
jb
dec
sbb
icebp
xchg
lahf
ja
outsl
jno
adc
test
gs
mov
jge
and
bound
subl
sub
adc
out
lcall
dec
and
adc
xchg
js
mov
cmpsb
std
aaa
xchg
add
cmp
fs
xor
stc
mov
xchg
xor
cmp
xor
ret
cmp
push
stos
xlat
jg
jle
add
push
add
push
test
push
stos
cwtl
and
xchg
xchg
or
lret
inc
cmc
es
lock
imul
sbb
pushf
sbb
nop
ret
insl
add
inc
push
mov
je
jmp
pop
fs
mov
and
push
int
and
int
push
lods
aam
lret
loopne
scas
mov
push
dec
pushf
ja
movsb
movb
daa
aas
sub
test
loope
push
jge
cs
rol
xchg
dec
mov
and
in
in
ret
aam
adc
mov
daa
mov
shll
lods
inc
testl
mov
call
or
lea
pavgb
adc
clc
dec
xor
xor
imul
cld
js
movlps
mov
pop
cmp
xchg
xor
das
push
or
inc
cmc
or
mov
cmp
in
adc
push
outsb
stc
mov
stos
jecxz
cmp
jle
jecxz
inc
es
test
mov
mov
xor
adc
xchg
aas
sbb
or
daa
dec
pop
sti
mov
sub
movsb
sub
addr16
fwait
repnz
test
cli
xlat
sti
cmp
sub
dec
lret
daa
insl
mov
or
push
add
jmp
lcall
int3
lret
push
mov
sbb
and
repnz
mov
cmp
into
je
cld
repz
scas
adc
dec
cmp
subl
sahf
shrl
cmp
insb
push
mov
aam
hlt
cmp
xchg
mov
mov
dec
enter
xchg
testb
sub
cmp
mov
hlt
adc
cltd
sahf
aam
divb
or
add
sub
cmp
mov
xor
cmp
aad
daa
add
pusha
hlt
pop
scas
aad
xor
or
enter
jae
int3
jbe
or
lds
sbb
pop
sub
jp
cmp
sbb
fldcw
int
fs
pop
adc
fsub
movsb
pop
mov
sbb
jno
xchg
cmp
adc
inc
das
jecxz
stos
jge
add
jl
cwtl
dec
add
outsb
jl
sub
pushf
jmp
mov
sbb
pop
push
fwait
shl
in
pop
mov
int
out
bound
pop
imul
dec
sub
jecxz
data16
outsb
ss
aam
fnstenv
cmc
js
jns
mov
in
xchg
rorl
mov
scas
cmpsb
mov
rcll
mul
hlt
call
rcrb
and
pusha
and
lret
mov
or
imul
xorb
and
outsb
xchg
or
in
in
call
mov
mov
mov
sub
pop
jmp
cmp
fdivr
pop
lahf
dec
dec
sbb
out
mov
and
adc
pusha
cmc
sub
jl
fcoml
add
lds
mov
sbb
add
mov
sub
push
sarb
or
cmp
in
movsl
es
aad
mov
sub
push
jl
inc
adc
jb
movsb
lgs
inc
cmp
jno
stc
js
inc
jmp
mov
xchg
cs
pop
push
fsts
mov
xor
cmp
xchg
ret
dec
cmp
imul
cmpsb
sbb
jmp
ds
fwait
dec
lods
test
xchg
jne
dec
insl
push
in
push
or
sbb
or
inc
adc
jbe
rorb
sub
loop
shrb
call
pop
adc
sub
sti
sar
insl
push
outsl
jo
shl
adc
jno
leave
ds
push
in
mov
xchg
outsl
adc
sub
push
scas
jno
aam
adc
loopne
sar
rclb
sti
cwtl
cmp
pop
cli
or
mov
lcall
jno
repnz
jge
sub
xchg
cmc
iret
enter
inc
aad
mov
push
push
fdiv
movsb
fs
ret
icebp
pop
adc
xchg
nop
ljmp
and
xlat
stos
fwait
jne
mov
shr
enter
cld
lcall
lret
es
loopne
xchg
lea
outsb
test
cwtl
out
adc
add
or
or
in
aas
les
imul
sahf
adc
les
xchg
fstpl
mov
stos
jb
loop
sub
mov
sbb
inc
xor
inc
xor
fsts
jge
cmpb
dec
pop
mov
addb
ret
sbb
inc
sub
mov
adc
inc
push
mov
cmpsl
rcrb
sahf
jne
jmp
clc
sbb
jg
inc
pop
cli
cmc
in
cli
pop
in
mov
mov
out
in
xchg
loope
int3
in
cmp
out
pop
and
js
arpl
popa
jmp
mov
fisttps
or
outsb
mov
and
jo
lahf
adc
cmc
pop
in
aaa
jmp
iret
or
lahf
fidivs
mov
aaa
scas
insl
andb
push
insb
mov
jno
and
inc
mov
fwait
subl
jbe
loope
adc
xlat
jge
pop
pop
movsb
adc
xchg
dec
mov
aad
movsb
mov
cmp
lahf
add
cmp
idiv
sub
arpl
dec
insl
or
cs
loopne
in
dec
dec
cmp
js
pop
shrl
lods
inc
push
sub
cmp
icebp
mov
xor
cs
add
loope
push
lds
outsl
fstps
dec
or
fiadds
nopl
push
mov
aad
mov
cli
and
rclb
and
pop
jge
pop
test
mov
sub
add
pop
mov
rolb
movsl
cmp
adc
mov
sub
std
adcb
lds
jg
push
xchg
jno
pop
pop
sbb
fisubrs
xchg
lods
adc
shl
les
jnp
movsb
cmp
jns
mov
repz
inc
xor
cwtl
or
shll
adc
rolb
fs
cmp
in
insl
les
mov
jo
inc
insb
lret
call
je
xor
movsb
lods
popa
sbb
cmp
cmp
or
ja
and
test
in
add
xchg
in
sbb
mov
jmp
jle
push
cmp
inc
bswap
inc
and
lea
xchg
sbbl
mov
insl
ds
jecxz
int3
nop
mov
repnz
jmp
add
lock
sbb
es
testb
repnz
loop
mov
mov
stc
or
lahf
xchg
lods
xor
int
out
cmp
xor
sbbl
add
and
fsts
inc
les
sub
movsb
lea
subb
xor
xchg
mov
mov
add
rol
fidivl
xchg
out
imul
iret
xchg
cmc
cmp
push
and
jo
inc
mov
jecxz
and
out
popf
int
cmp
fdivr
stos
jge
or
and
call
pop
xchg
push
or
sbb
es
inc
sub
aad
stos
push
negb
pop
adc
aad
in
add
aam
sbb
das
and
mov
roll
stos
inc
lret
jecxz
push
add
cmp
or
cltd
mov
pop
sahf
pop
mov
hlt
popa
adc
dec
leave
cmp
sub
push
cmpsb
inc
mov
dec
or
sbb
rorb
les
cmp
adc
data16
fildl
js
inc
sbb
xor
inc
subl
andb
jb
jecxz
mov
stos
mov
or
sub
push
inc
push
or
aas
fildll
xor
jb
push
dec
mov
add
pop
lcall
xchg
or
xchg
push
cmp
arpl
loope
sbb
push
repz
xor
inc
xchg
sbb
popf
sub
cltd
idivb
insl
xor
iret
inc
rcll
stos
aas
cld
inc
std
inc
sbb
sbb
jnp
mov
nop
data16
inc
dec
idivb
dec
xlat
push
mov
xchg
dec
push
mov
push
xor
add
arpl
mov
popa
mov
jne
lahf
xchg
rcll
add
in
pop
cltd
fbld
push
push
jne
movsb
dec
xlat
rorb
push
fmull
out
scas
shlb
mov
stos
push
mov
mov
jmp
cwtl
les
ror
insl
mov
rcpps
jl
imul
popf
addr16
enter
std
aas
dec
inc
rcll
movsb
inc
mov
pop
mov
inc
mov
pusha
or
ss
jle
push
mov
cmp
aaa
push
push
rorb
int
std
popa
das
push
mov
or
dec
ror
cwtl
call
insl
push
and
imul
push
negb
adc
imul
cld
mulb
xor
inc
sar
fisttpl
or
mov
jle
xlat
loope
cli
imul
clc
sbb
mov
dec
shlb
inc
out
xchg
imul
ja
add
mov
push
adc
cmpsl
aaa
add
lods
stos
or
and
gs
aam
cs
and
mov
inc
xchg
add
dec
sbb
lret
sbb
jl
sahf
stc
xor
wbinvd
fmuls
mov
out
outsl
xor
push
xchg
cltd
mov
xor
mov
push
aas
jb
inc
stc
xor
mov
frstor
dec
mov
cmp
pop
arpl
call
mov
stos
pop
std
xchg
sbb
out
testb
bound
jg
aaa
test
xor
hlt
mov
xor
xchg
mov
test
sub
movsb
cmpsl
mov
inc
in
aam
mov
push
ret
in
sbb
xchg
xchg
sbb
xchg
ljmp
arpl
ja
notb
sub
sbb
adcl
jmp
pop
je
sub
aas
jle
sbb
xchg
inc
adc
sbb
call
push
icebp
das
sbb
pop
push
inc
stos
sbb
jns
in
test
push
mov
sbb
movsb
orb
cs
and
jns
sbb
or
xchg
adc
xor
cs
and
jg
push
int3
mov
xchg
or
ja
int3
mov
repnz
xor
pop
mov
lea
mov
push
loope
ret
xchg
ret
sub
loop
test
pusha
enter
lods
fcoms
pop
push
push
sahf
je
into
fwait
mul
lea
movsb
mov
jne
test
sub
push
jl
xchg
outsl
mov
inc
pop
outsb
pop
cmpsl
fiadds
setnp
push
mov
push
push
clc
or
test
pop
lds
arpl
sbb
scas
dec
inc
dec
mov
jecxz
jbe
clc
ljmp
and
cmc
adc
lods
orl
out
stos
sub
lods
dec
rclb
mov
pop
mov
pop
or
movsl
dec
mov
test
adc
pop
add
mov
push
jge
jnp
hlt
cmpsl
jge
outsb
sbb
or
jb
dec
fwait
jmp
push
xchg
sub
mov
out
fwait
mov
daa
dec
lock
rorb
out
push
mov
mov
scas
sub
cmp
outsb
xchg
cmpsl
add
fdivrl
daa
fwait
xor
pop
pop
pop
fsub
jae
pop
mov
test
mov
repz
ja
ljmp
enter
push
sti
pop
lds
sub
inc
xchg
fnclex
mov
or
mov
cwtl
repz
into
je
xor
pop
mov
jnp
xor
test
inc
iret
fstpl
sub
mov
mov
push
inc
es
fsubs
int3
cld
cmp
sbb
or
inc
shlb
sbb
test
lods
les
aam
or
into
push
movb
cmpsl
jge
push
je
push
movsb
inc
icebp
pop
imul
mov
push
jmp
mov
xchg
shrl
inc
shl
scas
push
gs
mov
adcl
mov
fs
hlt
outsb
adc
dec
lds
and
jl
loop
or
insl
add
int3
mov
out
xchg
mov
adc
and
mov
xchg
into
push
cmpsb
cwtl
mov
cmp
imul
outsb
dec
pop
push
inc
jp
mov
pop
addr16
xor
adc
jns
leave
dec
push
mov
outsb
push
and
lods
aad
stos
mov
sbb
lcall
iret
aas
je
mov
subb
jge
movsl
mov
jb
cmp
mov
xor
push
pop
jbe
push
jns
and
mov
pusha
xor
pop
call
mov
pop
lahf
nop
adc
jp
aaa
mov
pop
cmc
cmpsl
adc
add
fdivrs
in
and
lret
orb
xor
adc
adc
fiaddl
and
sub
mov
and
cmp
jecxz
ret
pop
pop
push
hlt
out
cli
xchg
add
in
mov
dec
or
xchg
je
mov
add
mov
arpl
xlat
lahf
in
out
mov
outsl
add
call
sbb
pop
and
fsubp
sbb
loopne
fcmove
subl
iret
pop
mov
and
repnz
aad
dec
mov
inc
loopne
jp
pop
and
std
xchg
sbb
insl
adc
cmp
arpl
ss
sub
add
pop
fistl
pop
sarl
cmp
or
push
mov
push
sub
shrb
sub
js
je
jle
xor
and
cmp
pop
mov
sti
in
std
inc
ja
test
stos
push
push
stc
test
and
mov
or
rol
jmp
out
popw
cmp
call
xor
loopne
mov
out
dec
cmc
in
cltd
add
cmc
orb
daa
adc
mov
nop
add
cmpsl
in
dec
loope
sub
push
repz
or
inc
vpmacssdql
xchg
fldt
xchg
mov
jmp
xchg
aas
out
popa
dec
jl
shll
mov
test
push
add
les
mov
negl
imul
mov
jmp
adc
mov
pop
jno,pn
xchg
movsb
pop
add
pop
dec
leave
pop
repnz
cmp
add
repnz
fimull
mov
and
inc
mov
leave
out
sbb
mov
test
sub
test
inc
pop
push
xor
or
mov
leave
xor
fwait
adc
mov
addr16
adc
imul
lds
sub
pop
leave
adc
cld
es
mov
sbbb
lcall
mov
sub
push
fmuls
xor
xchg
sub
pop
repnz
popa
adcl
push
stos
ss
mov
outsb
mov
in
lds
xchg
por
mov
sub
loop
sbbl
addb
mov
cmp
pushf
mov
adc
pop
js
dec
nopl
stc
lds
stos
cmc
bound
push
lcall
ss
mov
pop
mov
das
mov
dec
mov
pop
movsb
jo,pt
push
mov
lods
xchg
add
ljmp
mov
xchg
sub
and
lret
adc
test
jbe
inc
sub
sbb
adc
clc
push
mov
outsl
dec
mov
xchg
fistl
xor
lahf
jecxz,pt
inc
imul
ja
cli
push
jne
push
cmp
addr16
lea
jno
cmp
fsubrp
jp
fcompl
or
add
mov
lcall
testb
mov
jbe
adc
add
popf
add
outsl
test
xor
outsl
stos
mov
mov
out
movsl
jns
sbb
pop
xor
jo
test
adc
inc
inc
clc
cwtl
lret
push
xor
xchg
in
lds
push
pop
cmp
sbb
pop
pop
mov
ret
in
mov
insb
jb
add
cld
lcall
adc
mov
or
aad
pop
mov
or
aam
or
push
mov
cli
into
mov
push
mov
gs
jmp
out
mov
mov
or
mov
hlt
in
or
cs
out
subl
dec
or
insb
jns
popl
inc
stos
jp
push
mov
movb
in
outsb
mov
xchg
popa
decl
daa
jl
push
dec
mov
add
dec
xchg
enter
sub
xchg
mov
ds
push
repz
and
lods
push
idivb
cmp
xchg
movmskps
add
ffree
sub
test
cmp
pop
pushf
pop
jge
jno
cli
cli
xor
fs
adc
add
xchg
jno
jge
xchg
mov
mov
leave
lahf
arpl
or
call
fsubrs
dec
push
and
mov
mov
loope
mov
cmp
cld
mulb
mov
add
adc
fidivl
int
inc
lret
jmp
loop
movsl
rol
fiadds
and
sub
cmp
push
test
or
test
jmp
std
cltd
test
sub
pushf
pop
push
mov
xor
mov
or
push
pop
xchg
and
sbb
lret
pop
test
xchg
pop
add
add
add
and
sub
mov
pop
outsl
pop
adc
mov
das
jno
dec
sub
jb
dec
jmp
lcall
daa
pusha
in
jle
push
pop
or
or
adcb
aad
call
and
pushf
out
pop
mov
fldcw
lcall
iret
jno
shrb
inc
or
or
inc
mov
pop
xchg
xor
push
sbb
ds
cmp
adc
das
lods
outsb
or
inc
adcl
sub
xchg
add
push
mov
inc
mov
addr16
cld
test
aad
xor
js
imul
mov
lds
fwait
cmpsl
jbe
enterw
vmovups
jns
add
mov
rcrl
or
cmp
lods
lds
cmp
dec
repz
loopne
sub
stc
adc
xor
mov
adc
cmp
loopne
out
sub
jno
shlb
or
ljmp
xor
cs
in
add
sbb
mov
pop
mov
or
sub
mov
xchg
or
jb
jp
xlat
rorb
or
inc
lcall
xor
push
xchg
sub
push
gs
push
loopne
lcall
add
dec
and
xchg
popa
sar
or
insb
in
mov
out
mov
in
fidivs
or
sti
loop
js
cmp
repz
pop
idiv
adc
bound
sbbb
enter
xchg
fdivrl
pop
clc
pushf
xor
dec
inc
and
addl
xchg
and
push
lcall
push
add
or
lahf
push
inc
jnp
push
mov
and
pop
inc
mov
insb
repz
cwtl
outsb
mov
adc
call
lret
movsb
and
dec
push
stos
sub
out
fsubrp
mov
pop
inc
and
jae
sbb
dec
push
test
loop
mov
test
sti
pop
mov
xor
and
and
sub
or
dec
sti
adc
jae
mov
shlb
into
pop
mov
jle
push
nop
into
mov
faddl
or
cmp
pushf
and
mov
imul
in
push
mov
incb
sub
adc
pop
ret
pop
add
inc
loopne
pusha
sbb
adc
adc
inc
aas
jmp
push
fcom
outsb
out
cmp
mov
shlb
lret
and
xchg
or
sbb
xchg
iret
lahf
repz
push
xchg
in
popf
adc
fsts
ss
add
mov
adc
daa
mov
add
ret
mov
leave
stc
cmc
cmpsl
mov
push
or
dec
sub
aaa
sub
dec
lahf
xor
xor
mov
xrelease
sbb
divb
push
sti
add
xchg
subb
pop
out
push
outsb
mov
sti
lcall
imul
shlb
cmp
mov
call
dec
push
ret
cld
loope
mov
fxam
cmp
or
bound
out
push
aad
aam
or
into
mov
mov
dec
mov
ss
sbb
out
sub
jmp
in
fdiv
daa
adc
lret
adc
add
add
popa
mov
push
or
mov
adc
mov
in
mov
es
xchg
cmp
sbb
mov
mov
cld
jle
xor
sahf
out
dec
rorb
dec
pop
dec
cmp
mov
in
addr16
loop
repnz
sti
sub
jle
dec
adc
sub
pop
pop
add
dec
scas
dec
shrl
aas
out
fbld
mulb
adc
dec
fisttpl
stos
lods
and
pop
out
lock
mov
xor
mov
pop
das
aam
inc
or
in
and
dec
sbb
push
mov
lea
mov
and
clc
adc
inc
loop
xor
push
movsl
lea
pop
fcompl
inc
fdivrs
popf
mov
sbb
ret
int3
mov
mov
into
imul
aaa
jno
iret
and
pop
scas
mov
call
mov
idivl
cmp
adc
or
and
mov
addr16
pop
lret
inc
mov
pop
push
clc
enter
jg
cmpsb
in
xchg
aas
jmp
cwtl
jo
inc
stos
add
push
orb
pop
push
xchg
push
add
jne
sub
dec
aam
add
dec
pushf
sbb
lds
popf
xor
movsl
mov
dec
shrb
mov
dec
fwait
mov
mull
nop
mov
out
negb
jmp
es
jecxz
jns
les
test
cwtl
shrb
test
lea
add
imulb
ljmp
popf
sub
pop
sahf
pop
and
xchg
fnsave
and
sub
sbb
and
push
mov
xor
sbb
test
add
outsl
leave
test
shll
inc
and
mov
mov
mov
int
pop
add
jg
mov
xchg
shr
icebp
xor
into
mov
inc
mov
sbb
xchg
cmpsl
push
xor
sbb
lret
mov
into
das
jl
lods
xor
int
cmc
ja
dec
xlat
pop
cltd
fidivs
jbe
movsb
sub
and
mov
mov
inc
and
rcr
or
dec
repnz
sbb
cmc
adc
cmc
dec
lahf
lcall
jo
loope
jne
xchg
insb
jb
mov
push
and
fisubrl
push
rclb
add
das
mov
sbb
pop
psubsb
repnz
fisubrl
popa
pop
lcall
pop
lahf
dec
jne
inc
into
lret
dec
lods
loope
in
sahf
mov
jno
sub
mov
push
xor
xchg
addb
sbb
out
andb
fsubl
and
insl
test
add
mov
clc
call
and
fildll
or
mov
jecxz
add
push
add
sub
sub
jno
and
adc
jge
movsb
or
jl
mov
je
cmpsb
jl
popf
mov
ret
imul
flds
cwtl
hlt
mov
jo
cmc
dec
fwait
mov
mov
or
adc
jb
push
xchg
mov
out
dec
aaa
adcb
lds
lds
cmp
cltd
dec
sub
sub
das
dec
xchg
inc
and
mov
jg
into
imul
ss
ljmp
stos
inc
rcrl
dec
adc
je
sbb
mov
scas
adc
jmp
sub
cmc
rclb
jge
sub
js
insb
into
enter
fadd
xor
and
test
ds
inc
inc
xor
push
add
lret
dec
jbe
or
cmp
movsl
and
adc
mov
cltd
les
loope
sar
mov
inc
xor
cmp
jecxz
scas
adc
stos
test
lods
jnp
pushf
das
sbb
jle
push
stc
jmp
push
adc
sbb
xor
movsb
fistps
mov
inc
xchg
or
mov
push
xlat
imul
lds
loop
call
and
cli
inc
das
xchg
adc
and
sahf
xlat
aaa
pusha
push
mov
xor
sbb
imul
cmpsl
and
ret
je
in
sub
cmp
pop
mov
jecxz
pop
sub
ss
fwait
jmp
movsl
shlb
ljmp
inc
ret
aas
stos
xor
xor
inc
inc
ja
and
and
pushf
testl
pushf
xchg
add
test
mov
adc
or
add
pusha
jmp
push
movsl
daa
push
ds
push
xchg
sbb
pop
aam
test
mov
pop
stc
js
dec
jl
test
push
stc
mov
xchg
popf
call
sub
dec
or
out
stc
push
daa
sub
inc
shr
test
jne
and
mov
and
test
in
in
lea
imul
xor
stos
add
js
adc
jmp
jge
cli
test
lock
adc
adc
sbb
jp
or
push
mov
fcompl
test
ljmp
jg
xor
inc
or
pop
inc
fs
cmp
rcrl
xchg
mov
jmp
lcall
cmp
std
jl
das
fistpl
ds
hlt
jp
push
out
fdiv
rcll
lcall
sub
ficomps
push
fmuls
fcmovb
mov
iret
sub
iret
fbstp
cli
jmp
mov
cltd
call
inc
jmp
ss
lods
inc
cmp
xchg
sbb
shlb
loope
cltd
push
ret
loop,pn
test
dec
fildll
push
jb
mov
cmp
adc
and
xchg
pop
in
movsb
xor
jge
sub
pop
insl
jmp
push
cltd
xor
inc
mov
shrl
loope
popf
lea
or
mov
dec
dec
mov
jne
movsl
punpcklwd
add
xor
in
mov
rep
inc
cs
push
mov
clc
mov
orl
inc
sbb
adc
pop
and
dec
or
in
mov
mov
mov
in
push
lret
std
inc
xor
mov
inc
pop
adc
nop
out
test
repnz
faddl
dec
lods
scas
xchg
mov
mov
fsubs
inc
and
mov
dec
push
test
push
movzbl
fisubl
lds
mov
fistps
call
movsb
je
and
mov
outsl
xchg
jo
outsl
pop
in
das
repnz
in
loop
mov
sahf
fisubl
or
idiv
mov
or
mov
cmpsl
adc
lret
xchg
fsubrl
imul
jl
rclb
pop
inc
inc
mov
and
rorb
movsb
or
add
push
mov
daa
scas
push
cwtl
in
mov
test
jg
icebp
pop
adc
dec
dec
mov
mov
inc
xchg
and
imul
adc
int
mov
or
lret
pop
pop
jmp
imul
rolb
sub
les
stos
push
xchg
mov
add
inc
movsl
mov
out
ljmp
push
sti
push
repz
sti
je
xchg
sbb
dec
xor
lods
orb
cwtl
imul
sbb
sahf
repz
pop
les
pop
pop
sub
cmpsl
into
dec
mov
sbb
adcb
inc
rorb
aad
adc
mov
out
cwtl
jns
inc
lea
mov
inc
xor
ret
das
stos
testb
push
jo
imul
inc
xlat
adc
push
repnz
sub
ret
sub
push
pop
jg
mov
sarb
loope
pop
pop
imul
jl
adc
daa
negb
gs
mov
add
popa
cmp
xchg
pop
roll
fcos
mov
adc
mov
jmp
inc
inc
cmp
dec
pop
dec
adc
loope
mov
lods
add
lods
cmpsb
xchg
sbb
in
mov
mov
mov
lret
wbinvd
aas
sub
adc
imul
sub
std
out
ss
add
fldt
jae
jbe
lods
jnp
xor
sahf
rcr
js
mov
aad
popa
and
jne
inc
aam
int
xchg
cs
ljmp
and
test
mov
test
sbb
mov
cmc
xchg
pushf
jl
outsb
je
sub
mov
or
mov
xchg
jle
movsl
xchg
inc
ljmp
push
push
aad
sarb
outsl
pop
outsl
sub
mov
insl
xchg
sbb
ret
jne
pop
or
add
xor
or
rorb
gs
add
pop
push
xchg
repnz
jns
mov
xor
dec
and
inc
fs
push
dec
mov
sub
inc
lret
dec
enter
push
push
fwait
mov
or
jbe
mov
outsb
mov
daa
shll
fwait
shrl
push
subb
mov
push
aam
and
addr16
inc
pop
insl
fstl
sub
fidivrl
mov
loopne
xor
push
in
in
arpl
test
fucomp
in
sbb
data16
sub
mov
and
outsl
in
cmp
push
cmp
dec
xor
xchg
push
mov
mov
stc
adc
inc
xchg
filds
gs
mov
pusha
mov
push
push
test
xchg
xorb
sbb
inc
pop
push
adc
mov
push
ret
enter
pop
stc
jae
sahf
sub
lock
pop
push
jecxz
adcb
popf
ljmp
jnp
mov
sub
push
inc
in
ret
dec
inc
inc
int3
sub
inc
dec
cs
insb
sbb
xchg
pop
gs
mov
nop
xchg
push
xor
jp
loop
outsb
mov
cmp
aad
aaa
cwtl
lds
and
and
and
inc
bound
push
push
jne
pop
arpl
shll
push
ds
cltd
lea
mov
decb
jnp
fisubs
jb
or
pop
fwait
int
shl
ret
ficoms
mov
jae
in
in
mov
jg
pusha
cwtl
addr16
sti
popf
gs
push
mov
and
int
cmp
sub
fcoml
lock
gs
sbb
cmp
aad
inc
sub
mov
cli
mov
adc
movsb
fmull
ret
fidivrl
jno
decl
push
pop
adc
cltd
push
and
mov
fldcw
and
dec
cmp
jae
inc
or
inc
inc
xchg
push
in
popf
mov
hlt
clc
cmp
and
jl
jno
pusha
rorb
dec
mov
mov
lret
push
and
inc
inc
sub
sbb
mov
push
aad
in
or
mov
mov
xor
jmp
add
mov
dec
js
dec
out
cld
xchg
dec
adc
mov
cli
and
jo
dec
mov
ja,pt
push
mov
call
test
sbb
and
cmp
outsl
test
jnp
or
je
imul
fs
or
lahf
imulb
ds
jmp
es
adc
sub
into
mov
xchg
out
xor
jge
stos
fdiv
push
scas
jle
sti
sbb
xor
pop
iret
popf
xchg
pusha
enter
cltd
fstps
mov
ret
out
xor
jne
stos
inc
mov
inc
push
adc
dec
push
mov
bound
scas
fwait
jp
loope
pop
inc
pushf
push
adc
jecxz
or
aaa
out
jmp
insb
test
adc
aam
lret
sub
push
jnp
dec
out
mov
mov
and
jne
lods
aaa
xchg
xor
movsb
push
leave
out
stos
pop
fiaddl
in
jle
out
inc
pop
dec
adc
jl
lock
add
add
roll
push
sbb
out
mov
fisubs
sub
jnp
jge
or
push
shlb
cmp
mov
push
iret
lock
push
cmp
add
icebp
enter
ss
ficoml
outsb
sub
push
cwtl
ret
xorl
pop
push
mov
or
mov
sub
pop
les
mov
mov
push
bound
mov
mov
xor
lock
cmpsl
pop
xchg
cmc
int
add
int
gs
inc
dec
pop
mov
mov
test
std
jnp
mov
and
sub
ja
stos
and
imul
cld
lock
mov
scas
or
cmpsb
incb
in
ja
ret
nop
dec
roll
mov
movsb
or
sahf
bound
in
rol
inc
ljmp
pop
pop
pop
sbb
cltd
jl
inc
gs
hlt
and
mov
mov
aaa
stos
loopne
retw
push
jle
cmp
inc
leave
dec
xor
sub
sub
adc
sub
dec
xor
mov
xor
xchg
push
ja
jo,pt
add
push
gs
sub
lods
outsb
in
push
movsb
ds
adc
jb
dec
cmp
adc
push
xchg
aas
ja
movb
cmpsb
cmp
subb
mov
daa
xchg
bound
lock
je
mov
aad
pop
dec
gs
pop
and
mov
push
or
xor
and
loopne
sahf
mov
sbb
stos
shrb
movsl
dec
or
fstp
or
inc
outsb
cli
ss
jl
stos
out
shl
mov
push
je
ficoml
iret
fidivrl
push
mov
pop
cmp
testl
jl
xor
icebp
and
popa
push
je
push
scas
cmpsl
loop
stc
add
jmp
xor
shll
lea
cld
leave
into
push
push
adc
outsb
in
fwait
ljmp
out
insb
sbb
cmp
mov
adc
imul
or
dec
xchg
repnz
outsb
cmp
inc
jle
in
mov
adc
jbe
adc
xor
lods
popf
sub
popf
or
lret
lahf
mov
add
adc
call
ds
scas
and
push
stc
push
lret
xchg
xlat
xor
inc
or
xor
xor
loope
fcomp
sbb
push
shll
data16
adc
mov
jl
jmp
push
jnp
mov
pop
frstor
daa
aad
fcmovnu
xchg
arpl
int
test
addl
and
loopne
ror
and
mov
roll
mull
movsl
sbb
sahf
loopne
insb
xor
lock
mov
out
fstps
out
push
inc
std
imul
ret
and
or
mov
jle
mov
movsl
addr16
mov
cmp
cltd
and
adc
jmp
mov
xor
push
rorl
lods
mov
or
orb
xor
movsb
gs
mov
cmpl
ja
into
push
push
adc
stc
cmp
push
fcoml
clc
cltd
stc
xor
sbb
mov
add
stc
push
aas
rorl
stc
sbb
clc
lods
xor
fmulp
int3
out
ds
repnz
cmc
pushf
outsb
out
setne
or
xchg
fwait
jns
lock
jb
jecxz
or
push
repnz
jp
aas
test
adc
dec
in
xchg
jmp
out
rcrl
dec
adc
sets
rorl
or
stos
lea
or
jg
lret
jle
subb
arpl
repz
clc
xor
xlat
popa
inc
push
add
neg
js
in
loopne
cwtl
jmp
pop
pop
outsb
cmpl
add
push
jge
pop
push
inc
mov
jb
cmp
cli
mov
lods
adc
addr16
lods
jecxz
xchg
movsl
shl
movsb
or
mov
in
jle
cmp
loopne
sub
pop
adc
jbe
cltd
ret
xchg
test
loope
mov
out
les
imul
sbb
jae
push
stc
aam
cld
mov
fwait
cli
cmp
int
xor
icebp
adc
dec
and
test
addr16
and
pop
pop
sbb
rorb
xor
xchg
sbb
cmp
push
rol
pop
outsl
dec
push
sbb
jle
sub
test
mov
or
fimull
out
adc
int
mov
inc
fstpl
lret
ret
ficoms
std
cwtl
xchg
aam
jle
cmpl
add
out
loop
popf
xor
sti
add
pusha
fs
mov
aam
in
ret
sbb
pop
push
testb
and
sbb
fld
xchg
mov
mov
mov
jae
mov
sarl
sti
test
dec
pop
mov
hlt
push
lahf
dec
inc
ret
xor
pop
dec
adc
sbb
mov
icebp
mov
repnz
rcll
push
mov
or
push
scas
xor
and
cs
in
stc
cmc
cmp
push
pop
add
ljmp
inc
enter
jmp
xor
mov
sub
xor
movsb
mov
jp
lods
sub
sbb
dec
testl
lret
in
push
dec
xchg
pop
or
ret
add
aad
ss
inc
cmp
cltd
mov
mov
ljmp
outsb
sub
sti
add
cmpsl
dec
jnp
push
rolb
call
repnz
xor
sbb
inc
insb
leave
mov
sahf
clc
out
gs
pop
xchg
aad
push
loop
ljmp
fdivrl
out
mov
out
add
sbb
sti
cs
and
sub
xor
add
popf
jle
rolb
jnp
pop
test
xor
push
pop
cmp
mov
pop
incb
or
cmp
mov
add
xor
mov
jno
outsl
mov
insb
mov
xlat
dec
cmpsb
jge
lret
push
cmp
loopne
into
loop
dec
int3
add
rolb
mov
mov
mov
out
jg
loopne
xor
bound
jo
or
mov
loopne
movl
sub
aaa
rcll
jp
dec
push
or
icebp
repz
xor
cld
jl
pop
call
or
sti
ret
int
test
test
mov
jbe
insl
and
cs
lds
out
mov
out
div
lea
cmc
call
dec
inc
mov
inc
add
imul
addr16
adc
mov
enter
push
inc
mov
cmpsl
xchg
or
jecxz
mov
adc
lods
loopne
es
sahf
sub
popf
cmp
xchg
lret
inc
jl
nop
ret
lahf
and
out
sbb
jmp
push
arpl
xorb
insl
lret
ss
adc
or
inc
mov
iret
xorb
je
add
std
and
push
mov
dec
lahf
xchg
stos
std
mov
pop
mov
mov
lods
in
dec
pop
push
add
loope
cmpsb
pushf
inc
mov
cltd
add
sub
sub
js
int3
in
ret
jg
mov
mov
push
mov
mov
icebp
inc
xlat
testl
mov
add
loopne
or
in
adcb
addl
add
jg
mov
cmpsl
clc
fyl2xp1
cltd
mov
stos
or
and
adc
inc
fists
mov
inc
inc
jo
mov
mov
mov
lret
gs
mov
fisttps
inc
mov
test
xchg
pop
mov
es
imul
mov
dec
cld
arpl
shlb
mov
adc
inc
aam
sbb
xor
fmulp
call
push
arpl
mov
inc
ss
cmc
push
add
inc
add
adc
cmp
and
imull
outsl
add
dec
fldenv
cmp
mov
dec
pop
loopne
and
loopne
lret
mov
negb
insl
mov
jmp
jbe
push
out
cs
ret
dec
pop
mov
icebp
add
call
and
stos
iret
mov
mov
sti
mov
in
dec
cs
xchg
loop
int
enter
mov
out
dec
cmc
jle
fcoml
xor
les
inc
out
and
sbb
add
dec
lcall
jne
add
cmc
cli
gs
loop
filds
cmp
stos
xor
int
mov
loopne
addl
jp
sbb
ret
ret
loop
or
push
sarb
filds
cs
ret
xchg
or
call
scas
loopne
and
adc
pop
pop
lret
sbb
les
ljmp
lds
shlb
mov
push
sub
mov
enter
in
jnp
mov
sbb
lea
repnz
push
sub
shrl
fs
mov
inc
adc
lods
or
loopne
mov
les
mov
push
mov
gs
push
or
in
popf
jmp
and
pop
jecxz
sub
test
cmp
movsl
popa
dec
out
ljmp
pop
fidivrl
mov
ret
xor
mov
mov
enter
jle
jo
in
lds
xchg
aas
mov
orb
movsl
test
sbb
cld
pushf
xchg
movsl
dec
jae
dec
mov
js
lods
add
sub
jmp
mov
lea
ret
fmull
push
mov
mov
scas
cmp
scas
lds
pop
aad
icebp
push
shlb
push
cwtl
fnstenv
xchg
outsb
addr16
je
sub
inc
jge
jbe
pop
pop
sbb
mov
pop
dec
inc
push
loope
mov
divb
push
sbb
or
inc
mov
fisubl
inc
cltd
sbb
in
sbb
lds
add
mov
mov
leave
push
push
fdivrs
cltd
leave
add
or
test
xchg
mov
push
inc
aaa
dec
jge
xor
cmpsb
dec
mov
add
stc
add
popa
pop
pop
jle
jno
adc
lods
fcmovnb
scas
out
pop
mov
mov
sub
int
mov
push
or
loope
lds
shrl
xchg
dec
or
sub
stos
out
fstpt
jle
fwait
loope
popf
xlat
lds
or
xor
scas
push
push
fs
pusha
mov
daa
imul
xchg
mov
cld
popf
xor
push
cmp
mov
and
daa
jns
pop
cmp
ss
in
sub
int3
mov
cli
lahf
loopne
dec
jle
popa
mov
dec
fs
lods
sar
mov
andb
enter
cmp
add
in
jns
push
jp
push
jne
int3
leave
xor
pushf
clc
cld
outsl
lcall
in
pusha
inc
aam
cli
mov
outsb
cwtl
insl
sub
ret
imul
jne
lret
or
xor
sub
mov
mov
arpl
and
pop
daa
xchg
mov
mov
mov
inc
scas
pop
jge
mov
mov
lods
sti
cs
push
push
aad
push
mov
and
call
jl
inc
mov
mov
mov
fdivr
add
xor
or
testl
and
mov
lea
js
xor
mov
test
in
call
imul
cs
lahf
cmp
adc
scas
and
setne
mov
push
mov
clc
mov
ret
rcll
and
add
cld
hlt
mov
fldenv
sahf
pop
pop
adc
dec
jae
rcrb
pusha
aam
cmp
es
jl
pop
jge
push
je
fwait
pop
lock
cmp
jno
and
adc
cmp
lret
xor
ret
xchg
lret
repnz
xor
insb
sub
dec
add
fwait
jne
push
iret
aad
pop
ret
mov
xor
inc
mov
mov
into
scas
lock
jbe
nop
aas
sbb
mov
xor
cltd
sub
and
jl
adcb
inc
xor
lret
stc
mov
test
test
dec
push
mov
lret
insl
iret
jl
out
into
adc
push
loope
xchg
js
inc
push
repnz
add
aad
outsl
repz
and
jecxz
data16
data16
movsb
bound
inc
sub
inc
push
cld
xchg
cwtl
mov
adc
xor
add
int3
mull
fwait
lret
mov
adc
push
jmp
out
mov
imul
inc
icebp
push
shl
mov
out
sbb
add
add
xchg
iret
cli
lds
jbe
push
lods
cmp
inc
mov
mov
mov
adc
and
fs
sbb
lods
pop
mov
jbe
inc
xorb
ds
popa
aaa
add
or
es
xlat
mov
aaa
sub
dec
pushf
add
xorb
or
popw
xor
add
cli
and
and
insb
incb
iret
ss
sub
lods
fdiv
cmp
sbb
mov
roll
cmp
mov
inc
shll
mov
iret
push
imul
adcl
mov
sub
jns
aam
xor
stos
out
testl
mov
jnp
sbb
pop
call
jb
cltd
jg
lds
rcrb
xlat
addr16
addr16
ficoms
jno
mov
adc
pop
aas
sbb
cmp
mov
jecxz
and
jecxz
jns
push
fmull
sbb
data16
pop
cmp
aas
aaa
pop
lcall
pop
pop
dec
imul
jns
insb
jo
outsl
test
insb
shlb
sub
sub
xlat
sub
sub
out
lret
sahf
int3
mov
inc
dec
pop
xchg
dec
xchg
arpl
pcmpeqw
je
cmp
lret
aad
lcall
aas
data16
imul
cmp
pop
popf
nop
iret
sub
add
decb
sarl
dec
jno
in
or
cli
out
adc
sti
dec
outsl
xor
and
mov
mov
shl
adc
pushf
mov
lret
clc
mov
add
pmaxsw
jo
mov
push
push
jnp
out
pop
imul
sbb
dec
shll
leave
inc
andl
dec
push
mov
aas
imul
or
shrb
mov
or
mov
xchg
push
imul
mov
leave
aas
and
addr16
repnz
fidivs
mov
lea
pop
xchg
call
xchg
add
stos
cmp
popf
cs
xor
lods
into
add
mov
dec
jnp
xchg
mov
push
push
dec
mov
in
lcall
and
imul
inc
push
rcl
jb
adc
loop
sub
cmpsb
pusha
lcall
out
adc
cmp
aaa
fldcw
sub
pop
adc
add
mov
add
test
mov
jge
cld
test
jg
cs
shll
imul
cmp
lret
mov
pop
pop
gs
incl
roll
fcom
add
out
jecxz
aaa
cli
mov
ret
out
mov
inc
xchg
sub
cli
add
sti
push
pop
xchg
inc
lret
dec
in
movsb
fisttpl
out
mov
int3
ds
xchg
jp
mov
mov
mov
sbb
dec
in
mov
push
aas
pop
pop
pop
pop
mov
outsl
imul
repnz
and
rclb
lcall
push
data16
mov
addr16
insb
imul
mov
mov
sbb
jns
and
loope
push
jp
insl
aas
and
repz
push
fsubrs
inc
mov
incb
andb
inc
mov
xchg
lahf
cmpsl
cmp
das
xor
sbb
or
insb
jb
fdivs
cmp
jnp
jecxz
add
ljmp
int
xchg
stos
repnz
fcomp
xchg
sbb
jno
sbb
and
dec
and
cmp
int3
rorb
fwait
mov
aad
repz
dec
scas
ret
adc
lods
popa
aad
and
push
mov
dec
xor
fsts
stos
jne
cltd
jb
movsl
pop
test
mov
pusha
pop
arpl
pop
cld
pop
jbe
pop
mov
rorl
add
jl
cmp
cmp
bound
mov
std
push
fs
adc
dec
push
dec
loop
and
cmc
cld
xor
push
pop
push
nop
mov
pop
adc
imul
cmp
inc
xchg
push
addb
push
popf
repz
out
pop
add
jne
adc
jnp
cmp
pop
std
add
rcrl
addr16
fwait
out
and
lret
add
sbb
gs
mov
outsb
test
sub
lds
inc
jbe
int3
test
outsl
fwait
cwtl
int3
pop
stos
pop
leave
test
mov
adc
js
cltd
mov
loopne
stc
ret
mov
pop
arpl
inc
jle
mov
adc
lds
lret
dec
loope
shrl
xlat
xchg
jl
mov
mov
imul
inc
addl
pusha
lock
outsl
roll
repz
in
lds
sub
cmp
shl
push
xchg
jb
or
mov
clc
les
mov
ret
rcrl
jae
lcall
jecxz
enter
loopne
cld
or
pop
adc
test
lret
negb
std
cmp
sahf
into
push
cli
out
push
add
das
and
fcmovne
xchg
cmp
mov
pushl
scas
and
dec
dec
pushl
stos
fisubl
mov
repnz
or
lret
fmuls
mov
or
adc
imul
push
pop
push
js
push
and
xlat
push
mov
jecxz
jbe
out
xchg
mov
sub
aas
icebp
sbb
mov
shlb
adc
or
call
jmp
lea
mov
test
mov
pop
fsubl
fidivrs
mov
and
mov
mov
add
rcl
add
clc
sbb
pop
fwait
and
rol
xor
push
clc
lock
cmp
mov
push
xchg
or
adc
rorl
movsb
je
test
push
iret
shrl
nop
mov
loope
or
sbb
push
dec
int3
iret
lahf
inc
push
out
jecxz
xchg
mov
addr16
enter
fbstp
test
jo
mov
add
lea
xor
cmpsl
test
dec
loop
lcall
in
cld
jne
add
shrb
shll
sub
hlt
xchg
andl
add
cmp
stos
stos
xor
nop
mov
or
xor
mov
jno
shl
addr16
sub
lods
push
cwtl
es
jb
mov
adc
jbe
mov
lock
test
jp
in
repz
movsb
sub
enter
push
push
inc
push
mov
gs
in
ds
cld
lods
cmp
insb
out
pop
cmp
ficompl
lds
imul
jb
pop
jb
cwtl
mov
xor
testl
jns
pop
lret
jg
into
cmp
lods
and
xor
test
xor
inc
xchg
and
xchg
popf
or
bound
addr16
and
scas
cmp
cmpsl
scas
pop
jnp
mov
loop
jp
xchg
fimuls
mov
dec
xchg
add
push
jmp
xchg
outsb
xchg
fnstsw
xchg
data16
jge
sbb
sbb
add
sahf
call
nop
lcall
mov
inc
lods
imul
mov
fistpl
imul
ljmp
cmpsb
imul
cmp
icebp
les
cmp
mov
enter
lret
test
jnp
inc
mov
push
scas
mov
or
cs
push
daa
loope
push
push
imul
xchg
movsl
xor
adc
loopne
rcll
fstpl
popa
mov
sti
cwtl
test
pop
ja
lret
pop
add
stos
js
out
cld
mov
jge
jecxz
inc
pusha
jno
es
mov
sub
out
mov
lock
push
mov
cmpsb
pop
mov
fildll
ret
xchg
fadd
pop
test
jge
add
fcmove
jae
xlat
cmp
sub
mov
pop
jl
or
ja
mov
xchg
shll
test
jle
jg
mov
repz
cmp
sahf
leave
jmp
addb
sahf
xor
xchg
mov
out
in
fdivr
in
pusha
xor
sub
scas
mov
cltd
in
fldl
mov
dec
aas
dec
daa
test
inc
cwtl
and
jmp
xchg
add
stc
mov
mov
jbe
repz
int
lods
sub
push
pop
pusha
pop
ret
aam
nop
push
loopne
int3
scas
ss
lea
cmp
ljmp
sub
ss
cmp
and
int
xchg
cmpsl
loop
pushf
int3
ss
lcall
pop
sbb
outsb
cmp
in
xor
push
xor
lret
rcll
pop
sbb
fwait
and
enter
in
stos
mov
dec
pushf
and
xor
mov
add
sub
fdivs
shll
mov
lea
jmp
adc
pop
fwait
pop
ja
add
ret
lods
ss
leave
fisubrl
mov
lods
in
cmp
jmp
lret
push
mov
fimuls
ds
fisubrl
mov
adc
mov
and
pusha
pusha
mov
lret
shr
inc
mov
lret
int
mov
jae
lods
int
inc
inc
std
fisubs
jl
negb
ret
mov
inc
pop
mov
pop
xorl
sbb
push
mov
cmc
jno
mov
leave
mulb
cmpl
or
out
fdivl
mov
adc
fsubrp
mov
push
pop
adc
js
xchg
push
popf
xor
loop
sub
shll
pop
loop
xor
gs
jb
xchg
sub
add
lret
inc
and
gs
ret
pop
or
cltd
std
inc
inc
and
push
pop
cltd
loope
aas
bound
mov
lcall
mov
loop
xor
cmp
jp
ret
mov
xchg
push
adc
stc
xor
sbb
push
int
push
cmp
repz
stos
xorl
jae
cmp
fs
and
cs
add
cmp
addr16
mov
inc
mov
lock
popa
enter
sub
and
pusha
lock
sbb
cltd
pusha
cmc
or
int
push
add
insb
push
adc
jg
sbb
inc
in
mov
jl
into
andl
push
int
xor
mov
cmc
jmp
out
pop
adc
lods
hlt
fsubrs
mov
lock
add
xor
jle
add
nop
mov
int
push
xchg
or
mov
sahf
mov
aam
jmp
mov
mov
mov
xor
and
jmp
push
xor
notl
mov
out
lret
push
fsts
ret
sti
xor
mov
lret
outsb
lock
xor
insb
pop
dec
dec
mov
ds
pxor
jnp
jae
aas
xor
rcr
jbe
ds
pop
inc
push
scas
jo
pop
jle
or
adc
adc
xor
xchg
sahf
sbb
insb
js
pop
orb
fsubs
mov
and
arpl
rcrb
push
negb
insb
shlb
jle
sbb
sti
sub
cs
icebp
mov
iret
jne
mov
aam
ret
arpl
cmp
pop
lahf
scas
fiaddl
stc
mov
push
sbb
dec
push
and
cmpl
insb
sahf
fildl
mov
jno
inc
divl
in
fisubs
mov
iret
lcall
je
rcl
xchg
cmp
xchg
loopne
cld
add
aam
int
push
jae
daa
call
cmp
inc
adc
push
jge
mov
xor
dec
mov
gs
mov
jo
sbb
iret
pop
outsl
and
lcall
je
cwtl
std
jne,pn
ja
xchg
and
in
xchg
mov
cmp
mov
icebp
jo
cltd
das
dec
add
lock
sarb
mov
jecxz
cltd
sti
mov
mov
sub
test
lret
imul
call
dec
push
jbe
mov
loope
arpl
out
loopne
jmp
out
fldt
cltd
stc
and
xchg
loopne
or
rcrl
mov
icebp
mov
bound
movsb
add
fwait
mov
call
sbb
xchg
xorl
cmpsb
lock
test
iret
and
aad
leave
decl
pop
cmp
mov
clc
sbb
fstpl
xor
push
scas
push
cmc
cmp
xor
cmp
xchg
adc
es
je
dec
inc
push
xorl
cmc
fimull
sbb
in
pop
adc
jb
cld
stos
add
pushf
sub
xor
sbb
inc
sub
lds
adc
and
aaa
mov
push
inc
incl
ss
adc
ja
push
lock
rcr
loop
imul
in
aad
mov
repz
pop
xor
add
fnsave
fbld
xorl
in
std
out
jb
ljmp
push
stos
adc
cmc
stc
test
dec
test
xchg
or
arpl
std
divb
lea
mull
pop
jb
xlat
xchg
and
push
daa
lods
sbb
and
test
das
jno
jle
orl
or
movsb
cmpsl
fld
ds
mov
cltd
in
in
inc
or
mov
cmp
int
adc
lcall
lcall
xor
sarl
fldcw
in
int
mov
test
pop
popl
xor
adc
xor
call
scas
dec
and
add
jo
dec
push
aad
and
jg
ja
imul
jne,pt
or
inc
cmp
rorl
push
movsb
cld
fwait
sub
loopne
jns
push
insb
ret
imul
sti
mov
es
loopne
push
push
mov
add
add
dec
outsb
cwtl
adc
push
cmp
pop
cmp
loop
sahf
add
es
js
push
mov
add
movsl
pop
mov
orb
in
sbb
hlt
mov
pop
gs
dec
outsl
movl
shll
out
xor
sarl
loope
movsl
pop
sbb
and
cmp
fcoms
call
pop
jle
sti
inc
je
and
das
sbb
pop
ffree
paddw
mov
call
icebp
bound
rol
repnz
mov
cmp
add
std
aas
iret
les
push
cmpsl
jge
aas
adc
push
and
ljmp
sbb
mov
jne
sti
daa
mov
loope
xchg
cmp
std
lock
adc
jmp
fistl
and
mov
sbb
push
sbb
stc
addr16
xlat
push
les
data16
mov
call
xor
xchg
push
iret
jo
cmpsl
ja
mov
lahf
dec
inc
lea
test
stos
out
add
sub
and
outsl
mov
cmp
arpl
dec
inc
cmp
cmc
inc
popf
lods
and
xchg
outsl
push
rorb
iret
lods
adc
mov
in
push
movsb
cmp
out
out
pusha
loope
aaa
ret
cltd
call
pop
xchg
fdivl
pop
jnp
in
sbb
pop
pop
mov
lds
xor
xor
out
mov
cli
add
xchg
nop
xlat
or
jnp
or
xchg
inc
sub
sbb
inc
sti
in
and
lock
nop
sbb
mov
shll
pop
popf
orb
jns
or
lret
gs
inc
pop
pop
icebp
sub
jmp
jnp
hlt
movsb
rcrl
xor
jl
inc
imul
cmpsl
data16
inc
push
inc
into
push
add
adcb
out
push
fs
shr
xchg
adc
adc
add
mov
inc
pop
sti
mov
add
rorb
pop
dec
loope
div
fimull
inc
mov
lods
jge
bound
es
mov
xchg
mov
lahf
mov
adc
inc
call
mov
jg
daa
mov
sub
sbb
sarl
xor
sti
imull
test
insb
cmp
push
adc
das
cmp
into
and
jns
fdiv
add
enter
xchg
push
leave
mov
push
je
out
mov
add
mov
leave
mov
add
pop
lods
mov
push
ja
out
int3
mov
inc
or
mov
out
dec
add
fnsave
daa
dec
mov
std
jno
pop
lods
inc
mov
out
mov
xor
sbb
jns
pop
inc
jecxz
jl
mov
pop
lcall
iret
pop
xchg
out
mov
jnp
and
les
sbbb
push
sub
aaa
dec
js
repnz
lea
fldenv
xchg
inc
out
mov
test
sahf
ljmp
lcall
fidivrl
pop
jnp
dec
push
cmp
aad
jge
fwait
mov
and
test
push
jge
xorl
ret
fstps
dec
push
cs
mov
cmc
or
leave
push
lds
cmp
scas
or
and
inc
fucom
sbbb
sbb
adc
out
cmp
popf
lds
enter
or
mov
popa
scas
fistpl
scas
and
popf
cmp
jae
xchg
adc
jle
push
jbe
dec
je
mov
stos
xor
cmc
dec
push
test
push
jae
pushf
pop
and
sbbb
aad
mov
jecxz
cmp
push
sub
in
push
or
sbb
stos
out
ret
mov
pushf
aam
add
and
sti
es
gs
out
push
add
lahf
adc
daa
stos
mov
clc
sti
adc
xor
lds
add
push
cli
das
add
lock
leave
xchg
aam
add
or
sub
in
jle
mov
add
imul
xor
cmp
movsl
call
xchg
out
aaa
jne
mov
data16
in
mov
iret
es
push
lahf
cmp
lds
pop
popa
aad
loopne
out
test
and
outsl
cld
jecxz
add
out
xchg
rclb
cld
mov
pop
xorb
pusha
inc
fwait
cmpsb
cltd
outsl
cmp
xchg
jg
rcrb
jp
es
mov
mov
fcmovb
cmpsl
cmp
mov
shlb
popa
and
and
sbbl
popf
addr16
dec
xor
aam
sub
cld
ret
pop
xchg
stos
jnp
and
out
fisttpll
add
jge
test
inc
dec
sbb
movsl
ret
mov
ret
jle
cli
mov
cmp
mov
jae
mov
lods
cwtl
sub
js
add
shl
sbb
cmp
int
mov
jbe
pushf
or
repz
mov
mov
push
bound
in
out
dec
ds
push
mov
out
cmpsl
leave
pop
xchg
scas
rorl
sub
mov
inc
arpl
popf
lahf
mov
xor
cmpsl
cld
dec
mov
movsb
shl
jge
into
add
jne
sahf
push
lret
dec
mov
dec
pusha
mov
imul
aad
push
adc
divl
push
dec
add
xchg
and
sub
sbb
xchg
ds
cli
cmp
rcr
xor
fmull
pushl
or
fidivrl
cmc
jmp
fldcw
xchg
sbbb
or
and
sti
pusha
mov
mov
loop
pop
mov
stos
pop
fisttpll
mov
scas
aas
and
shlb
mov
push
jb
jns
ljmp
insb
subb
fisubl
ret
xchg
mov
jg
pop
leave
mov
and
pop
cmc
inc
jp
das
sahf
push
les
rcrb
xchg
pop
in
insb
dec
ret
enter
je
subl
lret
insb
dec
xor
or
add
or
sub
nop
outsl
adc
inc
jae
and
or
ljmp
add
outsl
xchg
or
add
fbld
add
imul
loop
repz
outsb
ss
mov
xchg
and
xchg
in
pop
pop
pop
shll
pop
mov
mov
call
cs
pminsw
lds
mov
out
sbb
push
cmp
lods
adc
int3
and
repz
dec
sub
dec
movl
jae
stc
and
xor
adc
mov
rcrb
dec
call
cli
mov
cmc
xchg
sub
mov
push
push
or
lock
push
enter
aaa
dec
les
and
push
adcl
push
xchg
aam
pop
jmp
lea
daa
iret
or
cli
or
mov
fs
cmp
push
push
mov
dec
shrb
mov
push
mov
mov
mov
aad
jmp
pusha
inc
ja
adc
dec
pusha
pop
sahf
aad
out
popa
sbb
pop
fs
jnp
mov
jp
xchg
insb
je
push
pop
mov
outsb
or
mov
jl
dec
add
sbb
sbb
xchg
and
sub
mov
cli
cmp
fwait
repnz
mov
or
add
iret
mov
inc
clc
sub
fcomi
sub
and
scas
incl
aaa
stc
cltd
imul
add
mov
aam
lock
sub
out
mul
loope
and
je
cmp
push
daa
sub
pop
push
or
loope
xor
sahf
add
rcrb
inc
sarb
imul
and
fdivl
add
xor
pusha
gs
stos
jo
mov
lock
xchg
lock
fs
inc
dec
pop
sti
inc
push
adc
add
and
mov
xchg
mov
jnp
test
jl
jb
test
les
push
sub
push
mov
xchg
pop
jno
shl
mov
ljmp
idivl
cmp
fcomp
lock
jle
iret
pushf
push
jbe
aad
aam
test
scas
push
sahf
sub
mov
je
and
ja
test
jnp
sbb
cmpsl
lret
insb
in
dec
adc
mov
into
mov
cwtl
ret
dec
or
fwait
mov
inc
fdiv
subb
sarl
in
adc
xchg
mov
push
aas
jbe
inc
scas
data16
mov
lcall
daa
loopne
fbld
outsb
xchg
add
scas
lea
mulb
sub
es
loope
stos
cltd
xchg
sahf
subl
push
pop
movsb
ljmp
sbb
out
xchg
pop
mov
dec
xlat
inc
dec
fldenv
lods
cmp
adc
jnp
dec
or
shr
in
or
mov
push
das
add
testb
in
pusha
jb
insl
aas
mov
inc
pop
pop
pushf
cmc
orl
mov
enter
pop
pushf
out
das
faddl
jecxz
lds
pop
push
and
add
bound
imul
ret
imul
sbb
jbe
inc
jge
push
cmpsl
sbb
mov
add
arpl
es
pop
fistpll
inc
mov
enter
mov
push
roll
xor
dec
pop
fldl
aad
popa
mov
push
les
mov
pop
jmp
xchg
pop
mov
or
push
mov
fmulp
mov
adcl
xchg
jae
jne
sahf
into
xchg
rolb
lahf
mov
into
adc
add
cwtl
mov
mov
mov
mov
lds
cmp
fldt
mov
pushf
shll
cwtl
aas
loopne
es
jge
mov
hlt
fiaddl
addr16
test
cs
inc
repz
and
scas
fdiv
pop
xchg
fs
dec
jo
add
push
push
pop
xor
inc
fs
or
ffreep
sub
shlb
in
adc
mov
mov
clc
inc
arpl
sti
push
push
out
sbb
cmp
jo
int
and
fs
fsubrs
cmp
xchg
bound
in
lods
mov
sub
xor
xor
inc
and
test
outsb
push
std
add
xor
or
xchg
in
movsb
mov
mov
aas
xor
xchg
icebp
jmp
xor
idiv
pop
jne
jno
or
pop
xor
shlb
and
mov
mov
mov
jae
and
mov
int3
pop
and
mov
mov
jno
daa
pop
mov
adc
pop
add
fisubs
and
cmp
lret
mov
int3
aas
sub
aaa
ja
loope
mov
in
jecxz
xchg
cmp
call
mov
in
push
push
xchg
lret
das
neg
jne
lods
push
sub
cli
pushf
lcall
cltd
add
ret
cwtl
std
gs
repnz
fmull
ret
mov
scas
add
jge
aad
fidivs
sbb
add
insb
cld
or
sbb
sub
jno
enter
ds
mov
xchg
pusha
xchg
push
cwtl
push
adc
pop
shl
and
int3
insl
dec
mov
std
pusha
xchg
sub
xor
adc
fisubl
lock
scas
pop
or
inc
imul
notb
pop
mov
add
scas
lods
cmp
movl
incl
aaa
mov
arpl
repnz
fistpl
test
pop
ds
mov
xchg
mov
ja
cmp
mov
sub
js,pt
xchg
roll
fstl
push
imull
movsl
sub
loope
mov
or
xchg
sub
and
and
or
lret
xor
enter
arpl
adc
xlat
inc
and
sub
in
mov
mov
xor
mov
jmp
in
push
add
mov
jno
scas
insb
push
push
std
xor
add
or
cmp
mov
jmp
enter
pop
lea
pusha
mov
ret
xor
push
jmp
and
iret
mov
xchg
xor
iret
add
movsb
pop
mov
movsb
outsb
fs
mov
je
mov
scas
push
test
imul
ds
pop
leave
mov
inc
cld
and
mov
cwtl
ss
xor
fcmovb
loop
in
outsl
mov
adc
lock
dec
cmpsl
or
sti
or
jge
mov
jmp
or
sub
xchg
les
inc
jno
inc
xchg
or
out
adc
lahf
fimull
movsb
leave
inc
sub
ja
mov
mov
push
adc
scas
dec
add
or
jb
jmp
loope
inc
push
mov
and
and
std
movsl
xchg
mov
xchg
lods
popf
fcomps
lods
shll
adc
add
addb
push
cmp
mov
xor
mov
fmull
nop
lods
cmp
xor
ficoms
push
aaa
sbb
int3
incl
out
out
inc
push
add
xor
jmp
aas
inc
mov
out
lods
aaa
mov
loope
push
sub
out
les
cli
push
aaa
sbb
shll
std
mov
into
daa
push
push
in
test
fdivrs
shll
scas
add
lods
in
jb
outsl
shrb
sbb
nop
push
pop
scas
cmpsl
mov
mov
in
insb
movsb
movsb
jg
xchg
les
test
xchg
pop
jb
push
popa
mov
in
adc
mov
sub
adc
push
sahf
daa
jp
jg
sub
jnp
add
jle
aam
mov
test
cmp
fidivrl
push
push
push
push
ljmp
cmpb
adc
cmp
lods
inc
push
or
sahf
adc
xchg
xchg
xor
addr16
jb
shrb
mov
or
xor
inc
popa
jg
subl
out
pusha
cmpsb
daa
xlat
cmpsl
cmp
xchg
dec
sbb
mov
and
xor
sbb
add
mov
cli
add
pop
push
mov
jnp
adc
jae
mov
das
mov
jg
movsl
cmc
bswap
push
adc
dec
mov
in
xchg
stos
add
and
fstl
fisttpl
xchg
das
je
aad
hlt
cltd
cmp
push
cmc
mov
arpl
dec
pop
adc
push
lahf
cmp
jmp
inc
inc
leave
lea
dec
lret
sbb
cmp
xchg
movsb
sub
pushf
sbb
push
out
rcl
push
inc
sub
sbb
jb
sub
sub
cmpsb
mov
xor
jno
cmp
xchg
loop
mov
fwait
psubusb
dec
mov
inc
dec
mov
add
inc
xchg
mov
jg
in
or
nop
pop
fadds
out
fsubs
xchg
and
pop
out
xor
and
push
and
mov
lret
test
jmp
nop
add
inc
sbb
fadds
subl
pushf
mov
pop
fldenv
add
in
mov
int
sub
cltd
sbb
mov
fdivp
mov
mov
icebp
dec
hlt
in
imul
and
inc
jge
add
lds
aad
lods
mov
jne
stc
cmpb
pop
jne
xchg
dec
lea
dec
dec
adc
xlat
adc
daa
popa
aam
xorl
jp
mulb
mov
mov
pop
inc
popf
cmp
stos
stos
xchg
pop
pop
fmuls
je
cltd
nop
aas
pop
mov
cli
fdivl
mov
gs
lea
push
sub
adc
repz
push
int
dec
jge
psrad
inc
jmp
pop
adc
and
ss
enter
mov
mov
pop
sbb
jle
out
shlb
in
push
push
xor
pop
jg
cld
out
cltd
cmpsb
mov
mov
fisubrl
test
mov
mov
cmpl
jnp
jne
imul
push
mov
or
cld
gs
pop
pop
popa
cltd
aad
std
mov
lock
out
lock
call
push
ja
inc
in
outsb
fmuls
lret
inc
gs
in
std
mov
cld
ret
or
neg
jmp
pop
xor
js
popf
fldenv
mov
shll
aad
mov
dec
mov
jnp
mov
testb
or
and
dec
jecxz
mov
push
xor
cmc
loopne
and
xlat
jb
sti
sub
mov
movzwl
and
cld
jmp
fwait
pop
mov
push
mov
out
fdivl
and
je
out
adc
lds
pop
rorb
scas
xlat
push
and
jno
insl
pop
clc
out
mov
or
dec
or
mov
jnp
test
sub
cwtl
sub
enter
push
clc
cmp
lret
cmp
and
enter
inc
mov
or
xchg
dec
ja
mov
mov
jl
cmp
dec
dec
inc
and
mull
lret
cmpsl
pop
jo
in
std
or
les
test
xchg
jne
fnstcw
cmp
mov
iret
dec
inc
sub
int
ss
adc
xor
or
aam
dec
sub
addr16
cld
cmpsl
dec
sbb
push
fiadds
fmull
pop
rclb
mov
das
xchg
dec
xchg
fsubrl
inc
jnp
jno
scas
insb
hlt
mov
das
icebp
lret
jmp
rcl
xor
das
movsl
out
sahf
clc
fiaddl
addb
xor
xchg
ss
int3
icebp
and
sub
push
push
jbe
pushf
pop
dec
pop
in
sbb
xlat
out
or
pop
leave
lcall
cmp
mov
inc
fwait
andb
orl
insb
jo
xchg
dec
ds
std
cmp
insl
stos
jnp
xor
jo
arpl
sar
fsubrs
imulb
addr16
xlat
loope
mov
lret
dec
cmp
cmp
xor
loopne
xchg
or
fisttps
clc
fimull
std
mov
jne
add
lods
arpl
inc
pop
push
jnp
test
xchg
cmp
mov
pop
sbbb
jecxz
dec
push
xor
xchg
pop
movsb
aaa
mov
popf
cmpsb
mov
cmpsb
sbb
fwait
cmpsl
xchg
fnsave
andb
mov
add
out
inc
jb
outsl
insb
add
mov
dec
inc
adc
cmpsl
dec
jp
xchg
mov
jle
scas
es
loope
push
push
ret
xchg
pop
aas
movsl
hlt
xor
xlat
icebp
mov
lcall
sbb
pop
test
jle
fwait
mov
dec
pop
aam
punpcklwd
inc
xchg
lea
std
popa
pop
repnz
and
push
cmp
add
sbb
enter
push
insb
fcmovu
sbb
rcr
cwtl
movsb
mov
inc
cwtl
out
mov
sahf
fiadds
hlt
das
repnz
out
xchg
iret
sti
mov
or
imul
xor
fcomp
add
arpl
leave
mov
lahf
jbe
add
mov
cmp
xchg
cs
aad
cmpl
mov
insl
in
stos
push
push
sahf
mov
dec
cmpsb
test
push
jo
cli
mov
aaa
lock
out
mov
call
popf
lahf
cltd
and
mov
mov
push
push
daa
push
call
inc
ja
out
pushf
call
decb
out
int3
fs
sub
out
push
ja
xor
popa
je
cli
sahf
into
testl
iret
and
mov
rorl
inc
cmp
sbb
repnz
stos
dec
ds
inc
mov
imul
inc
stos
hlt
sub
testb
in
pushf
pop
push
inc
push
in
into
jp
lods
mov
sbb
inc
cmpsl
jbe
jmp
inc
scas
adc
loopne
mov
add
clc
stos
xor
in
sbb
mov
out
gs
xchg
jmp
ret
cmp
mov
in
aam
adc
push
cmp
and
movsb
mov
out
jo
nop
sub
push
mov
fdivs
adc
xchg
adc
xor
push
in
bound
add
push
insb
adc
out
jmp
in
inc
bound
lods
call
movsb
and
push
in
mov
inc
hlt
adc
push
cli
fwait
jnp
cmpsb
adc
mov
add
dec
pushf
sub
pop
mov
jne
add
ds
fcmovnbe
dec
cld
sub
add
mov
dec
notl
pop
in
leave
dec
cmp
pop
mov
mov
rcl
add
pop
mov
lcall
mov
inc
push
cmpsl
xchg
into
inc
jle
dec
pop
xchg
mov
lea
jnp
cld
xor
icebp
inc
lcall
push
xchg
mov
into
clc
lret
out
pop
sti
adcl
ljmp
ja
in
arpl
jmp
lret
aas
jo
loopne
ret
pop
pop
xor
dec
push
mov
and
cmovo
pop
sbbb
loop
insl
pop
mov
jle
aad
dec
ret
mov
fildl
movsl
scas
dec
stos
nop
adc
hlt
push
inc
jno
jle
and
dec
or
jb
add
addr16
xor
shlb
adc
inc
mov
addr16
inc
jl
push
cmp
es
add
xor
rcrb
mov
loope
fwait
and
mov
or
push
ljmp
int3
aam
adc
jmp
jecxz
subb
xor
addr16
js
push
mov
mov
nop
and
cmp
or
lcall
pushf
cmp
adc
scas
daa
add
fisubrs
or
sbb
in
dec
hlt
sbb
mov
ljmp
cli
pop
hlt
fnstcw
inc
pop
cmpsb
popf
mov
xchg
jg
adc
lods
arpl
cld
clc
add
xor
jbe
xorl
adc
shll
xor
test
mov
mov
adc
or
lret
mov
jp
flds
dec
or
leave
jg
xchg
pop
incb
dec
add
jecxz
fdivs
push
add
inc
mov
out
and
insb
sub
loop
cmp
push
mov
and
push
jle
sbb
sub
mov
jns
mov
mov
jl
mov
jnp
push
shl
sub
xchg
push
cmp
cmp
xchg
divb
std
mov
out
insl
test
iret
xorl
ds
xchg
arpl
lods
mov
push
xchg
ss
pop
dec
sub
lods
inc
mov
lahf
xchg
sub
decb
imul
push
mull
xchg
cmp
dec
push
xchg
mov
xor
ds
sti
mov
xchg
pushf
enter
mov
push
ret
cmp
and
in
fisubs
insl
in
gs
icebp
fisubl
mov
xor
sbbl
jp
jmp
mov
jno
and
shrb
jo
cmp
aas
xor
pop
test
xor
out
aam
lea
int3
test
jp
mov
mov
push
dec
inc
inc
and
adc
aam
mov
jmp
add
jge
in
and
fiadds
hlt
in
andb
jmp
rcrb
cli
add
in
insb
aaa
sub
push
rorb
push
or
or
js
mov
mov
pop
lds
or
lret
lret
cmp
xchg
packsswb
testl
mov
dec
aas
and
aas
xor
repz
sbb
fadds
xchg
jle
mov
mov
cmc
in
push
fistpl
lahf
addr16
push
mov
lahf
push
lock
int
test
adc
dec
mov
test
out
cmp
jecxz
adc
loop
mov
and
imul
leave
adc
rcl
mov
mov
pop
in
and
int
xor
and
xchg
adc
xchg
xor
sbb
sbb
gs
push
cs
push
sbb
fcomip
jp
push
stc
test
dec
or
int
mov
cmp
xchg
xor
cltd
sub
lds
jne
lock
and
ljmp
sti
dec
push
popa
jne
in
inc
test
mov
push
cmp
in
leave
xor
test
inc
mov
mov
sti
loope
imulb
enter
mov
sarb
or
ds
mov
push
jo
sbb
stos
pushl
cmpsb
cmp
ja
cmp
test
adc
add
jg
ret
pop
xor
scas
cmpsl
aam
or
add
mov
cmp
mov
arpl
xor
sti
push
int3
cmp
dec
sti
das
inc
fdivrs
bound
icebp
fistl
repnz
cs
bound
cs
insb
and
leave
xor
dec
arpl
xor
cmpsl
jmp
in
je
pop
jno
sub
sub
cltd
mov
or
adc
inc
test
mov
jg
clc
je
movsl
cmp
js
xchg
shrb
cmp
fcom
out
add
mov
push
inc
cli
fwait
jp
adc
mov
inc
adcb
add
push
add
jmp
jbe
push
cltd
add
dec
fs
xor
shr
call
mov
cwtl
push
cmp
add
imul
adc
int3
mov
xchg
int3
test
or
hlt
aaa
call
cmp
cwtl
push
and
pop
cmp
dec
popf
arpl
nop
inc
outsl
insl
imul
push
inc
mov
cmp
xchg
adc
sarl
fincstp
inc
or
xchg
mov
out
adc
adc
call
mov
mov
xchg
pop
xchg
mov
std
ljmp
aam
fisubs
dec
les
test
pop
hlt
lret
jno,pt
outsl
ret
mov
cmp
xchg
xchg
add
pusha
push
dec
inc
ja
push
xchg
lahf
mov
ret
stos
pop
or
sbb
in
js
jmp
loope
cmp
mov
cmp
cmpl
test
rol
andb
dec
or
out
xlat
mov
pop
imul
popa
aaa
mov
add
jp
xor
xchg
test
pop
int3
pop
cmp
adc
mov
pop
push
push
sub
dec
sbb
pop
pop
and
push
aas
outsl
xchg
mov
inc
dec
push
and
es
fsubrs
in
lret
iret
aad
bound
push
jl
out
insb
incb
iret
mov
pop
jnp
push
or
and
icebp
arpl
push
push
notb
aaa
sbb
loope
push
fcompl
push
mov
fadds
dec
push
pop
sub
mov
sub
mov
scas
loopne
jb
mov
and
sbb
xlat
orb
add
pusha
push
inc
pop
aam
mov
push
sub
sahf
mov
cmpsl
cmpl
sub
push
push
jbe
aad
test
mov
hlt
xor
fdivr
push
popa
movsb
pop
iret
mov
loopne
dec
push
daa
aam
dec
lods
or
xchg
fstl
ret
push
mov
scas
sahf
mov
push
mov
sub
xchg
aas
cmpsl
pop
ficoml
int
mov
mov
sub
call
imul
lcall
dec
sub
mov
or
pop
adc
jne
and
test
jbe
add
int3
pusha
cmp
push
inc
loop
push
mov
push
out
push
mov
pop
sub
xchg
test
jno
mov
es
xor
xchg
sub
ds
nop
pop
mov
sub
lret
cwtl
test
pusha
xorl
rcrl
xchg
and
or
das
dec
insl
push
mov
fistps
jo
sbb
pop
mov
mov
popa
jbe
hlt
mov
xchg
int3
inc
adc
push
cwtl
pop
imul
and
lcall
pop
jo
mov
mov
rclb
out
cmpb
scas
xchg
fs
dec
imul
insb
loopne
addb
sahf
mov
bound
inc
nop
shll
jge
add
or
imul
icebp
ffree
cwtl
rclb
dec
push
bnd
push
fsubs
adc
or
cli
mov
iret
jae
arpl
push
test
adc
lcall
pop
je
fbstp
xchg
sub
dec
pop
fadds
sbb
xchg
in
ret
sub
or
imul
je
mov
or
in
pop
mov
rcr
rcl
add
or
and
fsub
jmp
adc
xor
jle
dec
test
jmp
push
push
mov
rcll
aad
mov
int3
xor
addr16
or
shll
adc
pop
fldz
iret
sahf
push
lret
div
jmp
push
mull
pop
aas
pop
cwtl
insl
add
or
push
cli
ja
scas
cmc
imul
sbb
push
enter
add
sbb
test
and
adc
movsl
push
int
mov
push
sub
lret
mov
add
jbe
sbb
movsb
xchg
or
mov
insl
xor
lock
mov
popf
call
insl
ljmp
lcall
outsb
xor
addl
push
jge
aas
xor
pop
jno
xor
push
cs
sub
out
jb
sub
mov
sahf
cmp
ss
dec
aas
mov
mov
sbb
out
call
or
aad
lods
outsl
inc
jecxz
loop
xchg
mov
and
pusha
fiaddl
jecxz
fnstenv
xchg
out
dec
pop
cmpsl
ljmp
loopne
jnp
mov
addr16
jp
test
sub
hlt
jns
or
mov
stos
mov
cld
sbb
sbb
mov
dec
pop
push
in
ljmp
push
push
stc
adc
inc
ja
mov
sub
sbb
mov
lret
cli
jl
sub
cmp
test
sbb
jne
adc
mov
jo
and
mov
popw
fmull
mov
mov
insl
out
dec
aas
or
jne
pop
jge
xor
int3
jle
push
jnp
jb
in
arpl
xchg
dec
push
shlb
sbb
inc
dec
push
push
and
mov
or
jae
ss
mov
mov
inc
or
in
ret
lods
xor
push
adc
adc
push
dec
in
push
cmpsb
orb
cwtl
fwait
xchg
or
mov
cmp
addr16
repz
into
jno
hlt
adcl
cmp
jle
jl
mov
add
movsb
mov
fcompl
nop
pop
shrd
das
int3
sbb
add
cmp
into
pop
and
fistpll
dec
aam
dec
ficoml
stos
stos
push
push
ror
mov
insl
aas
and
fimuls
inc
adc
lea
jmp
cld
icebp
inc
in
nop
xchg
fwait
dec
icebp
jge
mov
stos
mov
mov
jmp
dec
lods
mov
xchg
push
mov
lret
iret
lods
cmpsl
adc
cltd
in
test
mov
ret
add
imul
ljmp
in
cwtl
or
mov
mov
ss
test
push
popa
mov
jl
mov
add
cli
mov
xor
or
push
ds
push
mov
sub
adc
add
pusha
cmp
rorb
mov
push
pop
aaa
pop
and
fcompl
scas
rorb
jecxz
mov
or
repnz
clc
inc
sbb
adcb
push
push
adc
mov
jp
fwait
adc
gs
je
daa
loop
jae
insb
jge
daa
shr
push
mov
cmc
out
pop
fistps
mov
stc
incl
xchg
aas
or
cltd
cs
xor
sbb
hlt
fsubrs
xor
mov
cmp
enter
mov
aad
push
jnp
sarb
int
mov
loope
adc
insb
addr16
test
cmpsl
push
mov
sub
daa
enter
andb
mov
into
fidivl
adc
bound
xchg
mov
enter
xchg
std
icebp
cmp
add
mov
push
push
in
sar
push
insb
lret
in
movsb
hlt
jne
cltd
and
cwtl
add
in
sarl
shll
mov
scas
mov
push
test
mov
mov
push
xchg
repz
add
inc
mov
xsha256
cmpsb
push
sti
in
cmp
cmpsb
mov
lds
aaa
xchg
nop
and
xchg
aad
pop
cmc
lods
call
mov
sub
or
popa
stc
lretw
mov
cli
scas
mov
fwait
mov
inc
push
sub
iret
ja
mov
xor
and
jmp
sbb
mov
dec
ljmp
add
xchg
popa
movsl
insb
and
jmp
shl
push
aam
push
sub
xor
jmp
adc
dec
pop
in
xchg
and
mov
xchg
sahf
ret
or
dec
shrb
popa
mov
sub
stos
out
mov
sbb
mov
pop
les
push
add
ja
mov
jae
arpl
lcall
into
cwtl
jl
ds
pop
mov
pop
cmpsl
loope
test
mov
pop
clc
das
repz
js
adc
test
jo
mov
jg
mov
lds
fwait
aaa
or
aam
dec
push
jae
xor
loop
inc
mov
sbb
loope
pop
sbb
jns
stos
lret
aas
adc
cli
xchg
movsl
xor
jbe
scas
add
inc
add
leave
mov
dec
pop
mov
push
lahf
outsb
popa
popa
shl
lret
mov
sahf
add
outsl
jl
jo
push
dec
dec
jmp
outsb
sbb
add
addr16
xchg
pushf
inc
jbe
scas
mov
test
repnz
cmpsl
fcmove
mov
fidivl
leave
jg
sub
xchg
mov
outsl
push
add
mov
mov
andl
sbb
jb
std
inc
jmp
add
aam
pusha
pop
or
pop
pop
cmp
inc
mov
xor
jnp
jnp
or
test
ss
movsl
jmp
mov
out
fcoms
adc
jnp
mov
mov
or
jg
lock
ret
imul
scas
inc
mov
xor
mov
shlb
lods
pop
sub
movsl
inc
add
test
inc
sub
loopne
test
push
jae
movsb
hlt
mov
nop
jmp
sub
pop
adc
sub
loop
mov
call
stc
adc
fisubs
mov
sahf
cmp
jbe
dec
stos
cmc
xlat
mov
movsb
aaa
jg
inc
into
and
stos
je
imul
subl
and
test
mov
mov
xchg
sub
test
hlt
stos
jb
jg
pop
push
lods
lds
and
cli
lcall
jb
dec
or
outsb
fdivr
les
jg
pop
xor
lret
mov
sub
nop
mov
dec
into
xor
js
fildl
and
les
and
xchg
pop
ja
repnz
or
xor
push
fiadds
movsl
call
in
ja
or
movsl
inc
push
mov
dec
aam
data16
mov
f2xm1
xchg
fstps
inc
adc
shll
mov
test
push
fmuls
mov
mov
je
add
out
cltd
mov
push
out
jecxz
cs
lods
ror
xchg
dec
aam
rcrb
mov
sbb
and
pop
cmp
push
cmp
mov
pop
call
in
es
movsl
mov
js
dec
cs
pusha
je
add
pop
repz
dec
sub
xchg
push
mov
int3
mov
and
shl
push
insl
push
push
cmc
add
pop
dec
dec
mov
jmp
push
jl
sub
jecxz
sahf
mov
inc
sub
jmp
mov
in
ss
xlat
pop
fsubrl
push
punpckhwd
out
ret
push
mull
inc
sub
insb
mov
lret
lods
and
icebp
and
dec
add
or
xchg
inc
in
cs
scas
icebp
imul
jnp
push
popa
sbb
lret
inc
in
cltd
mov
aam
add
push
xor
mov
out
adc
cmp
sbb
add
icebp
icebp
shrl
cltd
out
cmp
add
pop
dec
outsb
gs
mov
out
xchg
lods
mov
push
pop
repz
stos
ljmp
shrl
outsl
xchg
push
push
sbb
push
jmp
cwtl
or
test
shrb
xchg
mov
mov
lret
push
adc
aad
pop
loopne
xor
aam
jecxz
repnz
bound
xlat
adc
adc
aad
push
xor
sub
dec
inc
mov
pop
xchg
repz
shrb
push
adc
inc
jl
jp
leave
push
inc
jns
lods
lahf
pushf
or
out
insl
into
push
jbe
mov
mov
icebp
xchg
xor
or
adc
aas
jecxz
or
pop
and
daa
sahf
mulb
int3
cmc
xor
mov
call
testb
scas
push
mov
jge
cld
call
and
pop
fwait
into
cmpb
aaa
out
int
xchg
paddw
sbb
jb
dec
xchg
dec
cmc
inc
add
sbb
xchg
xchg
push
aas
jecxz
pop
out
mov
mov
dec
in
or
add
fnstenv
pop
push
add
adc
jmp
int
mov
hlt
enter
inc
xor
imulb
pushf
hlt
xchg
adc
jle
sbb
jge
cwtl
push
pop
jg
push
mov
and
lret
rcrb
push
les
enter
jle
cmp
out
xor
hlt
test
inc
loop
xor
in
mov
inc
mov
lahf
rcl
jle
push
out
mov
xchg
push
mov
int3
out
je
iret
scas
icebp
sbb
cltd
fwait
cmc
add
fsubrp
in
add
inc
xchg
sahf
pop
mov
cltd
mov
nop
xchg
repnz
outsb
insl
lea
scas
add
inc
outsl
mov
push
inc
addr16
and
std
jg
repnz
pop
sbb
or
lods
cmp
mov
add
mov
imul
notb
inc
push
hlt
stos
cmp
cmp
push
loop
pop
cmpsb
sub
xchg
int3
je
dec
mov
adc
rol
lret
into
push
test
push
mov
je,pn
pop
sub
mov
mov
divb
dec
sub
jg
aam
jmp
loope
hlt
in
dec
lret
loop
jbe
fnstsw
pop
sub
add
jle
sub
sbb
cltd
les
mov
stos
inc
jo
loop
cld
icebp
inc
and
fcomip
xor
xor
daa
scas
popl
imul
sub
xchg
xchg
xor
jno
dec
push
push
adc
xor
jno
ret
cmp
adc
cmp
in
dec
push
sub
add
xor
or
orb
ret
bound
arpl
or
icebp
call
mov
and
push
sarl
lret
sahf
enter
in
xchg
stc
push
sbb
add
les
aad
sti
das
ja
lds
aad
sub
cmpsl
jge
hlt
rcr
cld
outsb
xor
push
lods
insl
into
mov
sarl
push
xchg
sub
cmp
test
pop
mov
call
or
popa
xlat
lret
dec
int
push
test
mov
fdivl
arpl
and
out
xchg
jnp
int
sub
and
aam
xchg
aas
int3
xchg
and
mov
and
mov
ljmp
aad
loope
mov
test
sbb
fsubp
mov
and
int3
cwtl
shl
xchg
cmpsl
es
sub
push
add
popa
stc
adc
push
jecxz
pop
cld
std
sbb
mov
aad
xor
mov
movsb
mov
rorb
adc
popa
pop
pushf
std
mov
addl
lds
movlps
add
cld
mov
dec
adc
push
popfw
sub
adc
sbb
cmpsb
dec
pop
pop
jne
sti
into
push
push
subl
jno
pop
mov
mov
jne
mov
mov
iret
leave
xor
daa
xchg
loop
mov
aam
lock
sbb
lock
loope
insl
jl
add
loopne
xor
mov
outsb
push
aad
mov
aam
pop
jg
mov
aas
mov
xor
insl
sbb
pusha
push
xchg
xchg
add
lods
out
cld
jnp
int3
add
or
rcrb
push
xchg
pop
push
and
lock
fidivrs
pop
sbb
mov
sub
movswl
add
imul
dec
imul
pusha
and
push
xchg
add
sahf
push
sbb
lret
xchg
adc
jle
rcll
ficomps
xor
dec
inc
out
mov
gs
sub
add
cli
sbb
fiadds
rcll
jns
add
movsb
in
mov
mov
pop
pop
out
sbb
pop
ret
mov
xor
shr
pop
dec
and
out
and
dec
mov
lea
stc
push
loopne
insb
adcb
into
xorl
or
mov
add
cs
not
in
sbb
jb
add
stos
xor
mov
fprem
xchg
out
repnz
outsl
sbb
pusha
icebp
xor
push
lahf
push
ss
jnp,pn
dec
aas
outsb
adc
bound
popf
pop
inc
push
sbb
imul
sarb
xor
xchg
and
push
out
sbb
xchg
add
jne
add
jg
and
stos
shl
jge
xor
out
dec
bound
stos
stc
les
mov
jae
cli
iret
movsl
mov
cmpsb
or
lods
and
mov
adcl
push
ret
mov
arpl
xchg
jmp
or
mov
adc
inc
addr16
cmp
popf
sub
jae
jbe
cmp
mov
sub
push
movsl
jg
lock
add
mov
mov
in
in
les
mov
insb
fldt
iret
in
std
int
rclb
andl
sbb
nop
jl
sbb
arpl
pop
mov
push
mov
leave
mov
xchg
cmpl
pop
or
dec
mov
jmp
pop
lret
sub
mov
sub
pop
jbe
imulb
loop
in
dec
adc
xor
mov
sti
pmaxub
dec
cmp
cmp
pop
loop
jmp
and
push
mov
and
jno
daa
fcmovbe
cmp
movsb
lock
pop
push
pop
decl
mov
repnz
xchg
rol
xor
cmp
test
mov
aas
pop
inc
lods
pop
psubw
push
mov
shll
loope
data16
inc
cmp
dec
in
add
sarb
pop
pushf
stc
movsb
adc
sbb
pop
fstl
xchg
xlat
xchg
xor
mov
fwait
gs
xchg
pop
xchg
jnp
bound
paddusw
std
adc
lahf
cmpb
shr
repz
sahf
cmp
sti
fcmovne
test
aas
pop
daa
xor
cmp
sub
aas
lret
fldl
and
jl
mov
jae
push
ret
xchg
stc
insb
push
mov
int
test
pushf
cmc
push
mov
inc
xchg
fimuls
pop
xchg
in
pop
ror
addr16
iret
sbb
sarb
or
bound
lret
lahf
ds
mov
out
fcoml
mov
bound
jge
ds
aaa
int3
mov
xchg
adc
sub
in
dec
or
loopne
xchg
ds
bound
lock
or
int3
or
push
sbb
push
lods
insl
add
fwait
mov
mov
stos
cltd
xchg
ss
repz
push
sub
mov
icebp
xchg
pop
inc
stc
addr16
arpl
mov
outsl
call
dec
sub
xchg
and
mov
xlat
fwait
pop
push
dec
out
xchg
jl
scas
nop
test
stc
gs
sub
sub
cmp
popa
push
ja
mov
push
mov
mov
int
and
jbe
scas
aaa
mov
mov
dec
push
pop
sbb
xchg
push
mov
mov
push
repz
dec
test
aad
cmpsb
xor
mov
jl
inc
sub
cmc
xchg
sahf
ss
xor
sti
push
mov
add
lods
inc
xchg
popf
and
sub
daa
cltd
out
fisubl
sbb
mov
out
in
and
outsb
aam
sbb
jg
inc
mov
lcall
xchg
fisubrs
das
lret
jmp
ret
push
pop
sbb
in
pop
jb
inc
subl
cli
data16
in
jge
adc
mov
xchg
jl
sbb
jle
inc
mov
repnz
rorl
jle
addr16
gs
mov
ret
cmp
aam
imul
or
or
mov
sbb
rorl
cmpsb
mov
pop
push
cltd
xchg
into
addb
fistps
pop
out
push
cwtl
loopne
mov
gs
sub
popf
xchg
lds
enter
andl
mov
adc
ret
int
sti
cli
jecxz
negl
jo
mov
test
jbe
in
test
cmp
loope
mov
mov
adcb
xchg
psubw
jo
icebp
cli
mov
hlt
mov
in
sub
cmp
lods
inc
repnz
shrb
sti
test
js
mov
into
pop
cmp
out
ljmp
loopne
inc
push
fisubrl
test
fwait
out
stos
loope
cltd
xchg
std
sar
mov
add
pusha
leave
sbb
or
push
mov
ss
gs
jae
call
pop
es
sbb
cmp
lea
inc
movsl
setge
dec
test
cmp
insl
xchg
pop
jl
popf
pop
adc
inc
out
pop
jnp
fsubrs
andb
pop
mov
inc
push
add
mov
gs
popa
push
jb
pop
dec
aad
arpl
jno
mov
and
repnz
xchg
ret
sub
push
cmpsb
or
mov
adc
mov
mov
in
push
test
cmp
stos
mov
fcmovbe
add
cmpb
in
js
inc
popf
cmp
mov
dec
cmp
les
in
xchg
jns
insl
xor
insl
mov
shr
faddl
sarb
int3
imul
fisubl
call
pop
mov
jne
int
sub
and
in
sahf
ljmp
jbe
aas
inc
call
xchg
ja
dec
lea
xchg
push
cmp
pop
inc
jmp
adc
mov
mov
sbb
inc
and
outsb
rclb
dec
dec
pop
and
push
jecxz
push
lahf
cmp
inc
cmp
loope
arpl
sbb
enter
rclb
mov
push
push
mov
nop
pop
lret
adc
fs
fstl
mov
push
stc
cwtl
mov
test
sbb
sbb
in
mov
hlt
jnp
outsb
inc
bound
pusha
idivl
js
adc
or
jns
sub
jmp
inc
in
jne
popa
in
and
push
ljmp
ret
mov
pop
cmpsb
inc
cmp
cli
mov
xor
adc
gs
outsb
inc
mov
push
aaa
cmp
les
xchg
cmpsb
repz
mov
sti
stos
stos
xchg
push
xchg
aaa
adc
cmc
mov
addr16
sbb
cmc
insl
dec
jno
decl
or
xchg
rolb
inc
inc
outsb
pop
int
dec
mov
loopw
jnp
insb
push
mov
repnz
cmc
lret
hlt
push
pop
sar
sub
ds
ljmp
cmp
fs
mov
test
pop
ds
call
popa
adc
shll
mov
dec
scas
out
loope
lahf
daa
and
test
mov
mov
and
pop
inc
sbb
movl
pop
cmpsb
pop
jp
in
out
xchg
cmpsb
out
leave
stos
stc
jnp
dec
movsb
movsb
out
jge
sub
adc
arpl
jl
pusha
jl
je
test
test
nop
test
pushf
lds
add
xchg
imul
cmp
push
mov
insb
gs
or
cmpsb
imul
popl
xchg
or
int
or
cltd
subl
mov
sub
jl
inc
lea
scas
fs
jmp
or
add
cmpsb
inc
jae
lahf
push
mov
loop
fistps
mov
lds
popa
int3
cmp
lds
xor
imul
push
pop
pusha
or
clc
addl
dec
xor
or
lahf
jp
and
hlt
push
ja
xchg
or
shlb
pop
jns
xor
popf
jbe
dec
or
lcall
rcl
or
xor
stos
push
or
ljmp
inc
push
inc
push
lock
stc
fwait
andb
pop
stos
sbb
test
sub
movl
inc
pop
xchg
push
loope
lcall
into
dec
out
cmp
les
cmp
incl
pop
mov
cwtl
push
jb
adc
ljmp
jge
mov
nop
pop
sub
xor
dec
hlt
out
lds
push
mov
daa
cmc
lods
sbb
push
adc
cmp
fsub
lock
sub
sub
add
pop
mov
xor
add
lock
adc
add
ss
loop
shll
aad
jbe
jl
fldl
and
xor
aam
lock
cmp
mov
andl
jmp
dec
rep
out
add
movsb
cmpsb
cwtl
cmpsl
sahf
scas
insb
lds
fsubl
inc
je
push
pop
into
add
mov
and
lahf
jae
mov
dec
xor
jmp
shlb
mov
nop
loop
push
cltd
ss
lods
imul
jl
adc
mov
xlat
mov
int
int3
dec
ret
or
pop
out
pop
popf
push
or
xor
std
test
out
hlt
pusha
mov
dec
int3
cmp
jb
push
jnp
imul
push
push
jb
adc
xchg
add
jecxz
pop
inc
sbb
push
inc
and
mov
outsl
fistpll
mov
push
in
mov
aas
xor
mov
js
push
movsb
jl
dec
in
cmpsl
and
pusha
pop
mov
ljmp
sub
or
lahf
arpl
cli
or
push
xlat
stc
incb
int3
pusha
movsl
or
pop
mov
add
cmpl
insl
mov
es
pop
loop
jecxz
xchg
xchg
sbb
adc
or
ss
lea
jne
es
sub
add
stos
scas
add
out
fcmovnu
nop
cmp
jns
add
push
inc
int
or
push
or
xchg
cmp
pop
jae
es
int3
gs
jecxz
insb
stos
and
adc
jmp
ret
pop
repz
fldl
mov
and
repz
les
es
ds
out
jecxz
aas
xor
xor
push
push
pop
push
div
xlat
pop
outsl
adc
push
sahf
lret
mov
or
adc
xor
pop
nop
dec
mov
vpcmpgtb
loop
or
xor
mov
hlt
mov
sbb
push
inc
push
sbb
mov
xor
dec
testl
lds
dec
sbb
js
sub
mov
adc
pop
add
js
add
fistl
xchg
mov
sarb
loope
pop
dec
in
push
repnz
dec
sub
push
mov
js
cmpsl
cwtl
jbe
nop
sahf
orb
or
pop
test
popl
jge
decb
iret
icebp
fdivl
std
inc
stos
ret
inc
mov
and
enter
andl
and
rclb
mov
insb
scas
xchg
jg
shl
int3
xor
pop
mov
xchg
jnp
jno
jo
xor
dec
clc
pop
loopne
imul
pminsw
stc
imul
add
sub
mov
mov
add
and
add
xchg
loop
inc
faddl
fildll
clc
or
mov
loope
or
stc
popa
mov
push
cmp
inc
sarb
inc
les
inc
fimull
mov
inc
xchg
cmc
mov
jne
shll
push
and
test
dec
scas
jp
aas
mov
push
je
dec
push
mov
outsl
arpl
imul
mov
push
cmp
push
mov
popf
or
xor
pushf
repnz
sar
pop
sbb
push
mov
and
mov
cwtl
ljmp
rorb
fisttps
repnz
sub
insl
ljmp
mov
jne
sbb
lods
fmull
push
test
adc
enter
jns
popf
aad
xlat
and
or
xchg
pop
push
xor
lods
test
dec
stc
out
cmp
mov
sbb
cmp
mov
sbbb
sub
aam
inc
and
aaa
loop
mov
cmp
pop
sbb
cwtl
dec
jbe,pt
test
arpl
xchg
ret
sbb
inc
add
pusha
popf
ja
insb
outsl
repz
cmp
dec
gs
test
test
fcomps
fdivrl
jo
inc
fimuls
test
inc
mov
int3
aas
inc
xchg
iret
cmp
je
sub
jb
xchg
mov
es
cmpsb
arpl
mov
inc
mov
adc
inc
imul
sbb
jp
fidivrl
iret
pop
cmc
out
test
sbb
out
push
aam
aas
xor
sbb
lcall
stos
mov
adcb
xor
cmpsb
addl
adc
idivl
dec
adc
cmpsl
pop
xchg
or
arpl
ffree
sbbb
ret
pop
xchg
out
enter
scas
adcl
pushf
test
pop
repnz
push
addr16
inc
push
test
imul
mov
push
dec
push
mov
dec
leave
dec
fsubrs
das
mov
sbb
hlt
pusha
ret
in
xchg
aaa
jge
repz
cmp
cmp
mov
sub
mov
lret
fwait
in
scas
pop
imull
push
lcall
dec
lods
mov
push
cld
xor
fisttpl
leave
pop
pop
push
movsl
push
filds
push
pop
pop
mov
fnstcw
hlt
ret
sub
and
je
stos
xchg
pushf
lods
rcl
xor
cmc
push
rorl
jp
adc
sbb
test
stc
pushf
addr16
stos
aaa
inc
sub
xchg
pop
or
mov
pusha
outsl
in
imul
xchg
cmp
in
lds
in
and
xchg
xchg
cltd
or
jo
push
scas
cltd
imul
xor
ljmp
or
leave
lea
fbld
in
inc
clc
and
jne
rorl
cmc
fidivs
ss
es
sbb
in
int3
mov
jmp
pop
pop
stos
xchg
insb
aam
dec
andb
out
je
in
xchg
mov
push
xchg
pop
stos
or
mov
jmp
mov
xchg
sbb
mov
or
adc
cmpsl
jne
insl
jbe
xchg
sbbb
mov
aas
pop
xchg
push
mov
call
pop
jecxz
dec
fbstp
inc
cmpsb
mov
mov
xor
lds
dec
pop
or
ret
xchg
pop
cmp
mov
stos
pop
or
pop
adc
scas
jecxz
xor
int3
jecxz
push
mov
xor
and
scas
jo
aad
adc
pop
movsl
jbe
enter
negl
and
aam
mov
add
and
mov
pusha
ror
and
cmp
aam
out
movb
loopne
in
outsb
fbstp
xor
les
cmp
jp
dec
das
lea
roll
lahf
mov
inc
std
imul
dec
inc
cli
scas
jg
icebp
in
ss
nop
xor
in
jmp
aas
pop
xchg
fs
jbe
lea
pop
popf
insl
inc
and
jg
xchg
mov
leave
testl
sbb
add
sarl
in
scas
mov
xchg
push
sti
in
addl
xor
adcl
sarb
push
inc
test
sub
in
xchg
push
daa
stos
xor
pop
pop
push
jae
mov
scas
mov
xchg
mov
add
movsl
pop
cli
inc
mov
scas
xor
fistpll
into
xchg
decl
sub
lods
cmpb
and
inc
mov
xor
push
cmp
jl
push
sub
lret
mov
dec
fistps
push
and
adc
popf
and
fldl
sub
push
mov
jge
or
inc
pop
mov
lret
and
sub
adc
inc
mov
rcrb
loopne
push
xchg
hlt
mov
push
stos
mov
and
loope
or
mov
add
inc
cmp
popa
lcall
fcomps
cmpsl
mov
sar
or
pop
daa
call
int3
stos
pop
inc
fimuls
jecxz
lods
ret
lock
std
xor
xlat
mov
fists
cmp
pop
jne
mov
sbb
scas
lods
add
mov
inc
pop
icebp
test
sbb
jns
jge
in
or
and
dec
addl
mov
adc
into
sbb
xchg
cmpsb
and
xor
lahf
jns
or
das
jno
sbb
mov
outsb
lds
out
fstps
jg
lods
pop
repz
movb
jno
push
imul
jns
test
dec
mov
std
out
xchg
push
mov
scas
mov
push
cmpsb
mov
jecxz
daa
ret
or
cli
fisttps
insl
and
in
dec
mov
fs
sub
mov
loope
sbb
xchg
inc
jmp
push
jb
andb
mov
add
jbe
rclb
adc
imul
adc
test
stc
push
sbb
aas
cwtl
or
pushf
xor
mov
into
sub
mov
push
cmpl
add
or
aaa
pop
mov
push
xor
loopne
ret
sbb
ja
lcall
sarl
jecxz
aas
test
adc
fiadds
jmp
cmpsb
dec
andb
stc
lods
pop
les
lock
inc
pop
adc
popa
loope
gs
mov
inc
cmpl
add
mov
jmp
jbe
xor
mov
xchg
cs
out
scas
addr16
jg
roll
add
pop
adcb
scas
xrstors
into
sbb
in
push
jno
bound
mov
inc
mov
or
mov
inc
outsl
shl
lret
movsl
cmc
fstl
sbb
mov
dec
pushf
pop
inc
out
shrl
cltd
dec
jno
repnz
ss
jb
adc
mov
xchg
dec
pop
and
or
push
add
adc
mov
add
jo
mov
and
add
ret
mov
or
arpl
enter
dec
xor
sub
mov
pop
xor
pop
sbb
add
lock
push
mov
or
test
ljmp
stos
loope
inc
mov
push
push
ficomps
jae
mov
in
push
xor
repz
sub
sub
push
inc
adc
insl
pop
mov
inc
jnp
dec
mov
push
fisttps
pop
cmp
inc
sbb
xchg
cmpsl
repnz
mov
push
sarl
les
jae
sti
mov
inc
pop
push
dec
incb
int
jns
dec
mov
lods
xchg
cmp
or
movsl
jp
out
inc
je
loopne
outsl
mov
sub
ret
mov
subb
lcall
leave
scas
rcl
xchg
mov
negb
push
fisubl
fstps
pusha
cmc
jne
es
jmp
inc
test
jae
sbb
pushl
add
js
mov
xchg
int
scas
inc
cld
dec
mov
loop
push
jle
cmp
jo
mulb
adc
jbe
mov
adc
mov
mov
nop
dec
addl
jo
xor
push
dec
or
and
xchg
add
ret
cwtl
dec
orb
out
push
ret
addr16
andb
dec
or
xchg
pop
enter
adc
add
xor
or
sub
adc
mov
hlt
les
sbb
mov
je
and
ds
cmpsl
cmp
sub
les
fsubrs
sbb
cmp
xchg
stos
je
lods
mov
adc
xor
dec
or
dec
cmc
lock
mov
adc
push
xor
xchg
aam
insb
xor
dec
and
jo
addr16
and
mov
sbb
xchg
mov
cmpsb
or
push
pusha
out
sbb
pop
sahf
fcompl
push
scas
xchg
jbe
xchg
cwtl
popf
xlat
push
sub
aaa
adc
into
sbbl
mov
mov
or
jno
gs
xor
sti
fnstcw
jbe
call
pop
popa
aam
inc
adc
out
inc
mov
fdivrp
mov
test
imul
ljmp
es
mov
cmp
in
fcom
push
out
mov
cli
das
adc
sbb
xor
mov
lods
dec
testb
push
xchg
or
stos
add
dec
or
jo
mov
sbb
testb
loope
orb
cld
pop
or
add
ljmp
xor
inc
jle,pt
fisubrs
out
sub
add
jg
push
frstor
out
jne
orb
inc
int3
ja
mov
lcall
imul
xor
pop
fistps
pop
out
adcb
in
js
das
fwait
mov
into
roll
dec
scas
adc
data16
mulb
mov
ja
adcl
pop
fnop
scas
push
movsb
out
mov
sub
mov
addr16
mov
and
aad
dec
add
iret
inc
dec
pop
fisttpll
loope
add
imul
jecxz
pmuludq
sbb
and
jns
add
jle
sbbb
and
in
xor
push
sbb
jne
stos
adc
addr16
imul
dec
scas
pushw
xchg
xor
push
fwait
mov
adc
fnstenv
jbe
sub
rcrb
mov
or
pop
inc
jg
push
test
and
xchg
ja
push
lret
ret
jno
mov
ds
adc
outsb
push
mov
ret
roll
mov
cs
cmp
cmp
fisttpll
add
mov
or
cmp
idivl
mov
sti
ljmp
repz
loop
movsl
cmc
pop
dec
dec
shll
mov
push
test
movl
sub
or
rcll
xor
dec
int3
or
jp
jbe
movsb
and
dec
push
sbb
shll
pop
in
cli
mov
test
push
repz
loop
enter
cs
iret
mov
push
loope
dec
cli
scas
and
mov
testl
iret
xchg
ja
mov
mov
or
jecxz
push
mov
in
jmp
sbb
mov
xchg
mov
jg
xor
aaa
cmp
lret
xchg
xor
imul
in
mov
jmp
mov
push
stc
int3
mov
xor
mov
out
or
push
cmp
lret
push
jmp
mov
les
dec
data16
dec
popf
mov
push
xchg
pop
es
mov
jbe
add
cs
gs
inc
int
add
dec
aam
adc
pop
and
lret
push
fdivrl
push
adc
mov
push
xchg
daa
inc
cmpsb
out
test
ja
outsl
adc
sub
pop
out
aam
sti
mov
dec
test
jl
cmpsb
xchg
out
loope
mov
mov
mov
push
into
mov
mov
paddb
scas
ljmp
mov
ret
data16
pop
dec
in
sub
mov
inc
in
pop
insl
cmp
stc
stos
pop
idiv
mov
aam
mov
jno
pushl
sbbl
lds
iret
jnp
adc
mov
jle
sbb
loope
jne
sbb
or
cmp
xchg
xchg
pop
stos
add
dec
cmc
push
aam
stos
lcall
or
sub
inc
jmp
jle
std
sti
lcall
jp
mov
repz
dec
cmpsl
xor
out
repz
xor
mov
mov
pusha
pop
fnstenv
lea
mov
mov
fidivl
jecxz
loop
or
pop
sub
mov
test
subl
sar
jb
outsb
jmp
pop
cmpsb
or
push
sub
bound
xchg
std
scas
daa
adc
adc
push
mov
xchg
adcb
adc
bound
xlat
ds
sub
sub
aaa
jle
ja
fnstcw
icebp
stos
jl
cmp
imul
sarl
movsl
sub
dec
fs
add
out
jp
xchg
sub
or
pop
add
notb
test
push
mov
push
lret
adc
jno
sub
rclb
cmp
in
pushf
mov
jb
push
inc
mov
mov
clc
dec
lods
jo
cmp
sub
adc
mov
adc
ret
jp
js
mov
push
cld
mov
fists
cwtl
jmp
movl
into
push
ja
stc
or
into
lret
out
xchg
test
sbb
insb
js
xlat
jo
sub
inc
cltd
je
ss
or
out
divl
jns
inc
pop
daa
inc
outsl
js
inc
aas
push
mov
or
out
push
aas
push
mov
dec
xorl
pop
and
adc
push
in
adc
cmp
pop
popa
ret
lea
mov
lock
pop
mov
iret
inc
xor
repz
in
jae
in
xchg
lds
add
imul
cli
movsb
xor
jb
push
pop
sub
sbb
inc
inc
sub
cmp
adc
fbld
inc
cmp
and
js
std
movsl
test
push
push
ret
push
cmp
cmp
or
push
xchg
cmp
clc
push
sbb
pop
sti
fwait
or
mov
int3
push
push
push
sub
and
insb
jge
ret
mov
sub
mov
cmc
jge
in
lcall
lret
testl
rorb
or
dec
ret
jns
mov
lret
pop
and
xchg
dec
push
mov
out
sbb
jg
mov
leave
and
jnp
jbe
ds
mov
lods
pop
loop,pn
sbb
dec
sbb
and
sbbl
cmp
lret
pop
or
cmp
mov
mov
ret
mov
sub
cmc
mov
sub
sar
pop
fs
add
xchg
pop
stos
jnp
cmp
push
pop
mov
dec
sbb
popf
push
call
and
loope
lret
incl
addb
ds
or
xor
pop
mov
push
mov
xchg
pop
sub
insb
jns
out
sbb
xor
pop
sbb
xlat
aaa
jle
int3
jo
mov
mov
mov
or
sub
out
xor
sbb
int
nop
sbbl
dec
lds
cmp
cmpsb
int3
lret
bound
adc
mov
test
cmpb
cmp
sub
mov
aam
jmp
mov
in
add
jmp
inc
cwtl
adcb
xchg
aaa
lahf
aam
and
pop
mov
xor
aas
sbbl
add
stos
pop
ja
mov
pop
or
ror
ss
cs
xor
xchg
inc
xchg
out
aas
mov
mov
cmpsb
test
cwtl
jl
inc
mov
adc
adc
rcll
jmp
inc
and
in
pop
lea
scas
lods
enter
cmc
nop
add
adc
jo
loope
int
adc
adc
lods
xchg
xlat
test
in
or
dec
sbb
xchg
out
shrl
push
inc
pop
call
out
mov
or
xchg
and
cmp
lret
xchg
jae
sahf
fwait
loope
push
ds
sti
rorl
inc
jge
pop
xchg
fs
mov
mov
sbb
pushf
sub
arpl
or
and
xchg
add
sti
out
movsb
xchg
xor
pop
jns
movsl
je
mov
sub
imul
pop
or
clc
mov
dec
fs
add
and
pandn
mov
cli
sbb
mov
loop
imul
xor
fistl
rcr
and
add
sbb
and
mov
das
or
out
pusha
fstl
and
mov
es
imul
dec
ficomps
add
out
scas
mov
lcall
andl
mov
cwtl
into
leave
or
push
call
sbb
dec
fnsave
or
inc
shrb
xchg
ds
xor
pop
stos
adc
inc
sbb
sbb
mov
fldt
roll
xor
loope
popa
push
popl
clc
push
pop
mov
jno
or
mov
add
imul
cmpb
xchg
sub
jp
lcall
dec
cmp
jae
jbe
adc
fists
cmpsl
mov
push
les
pop
mov
imul
jge
iret
test
fadds
cmp
sbb
cmpsl
xor
lahf
xchg
xchg
loop
hlt
xchg
addr16
add
mov
jle
mov
outsb
mov
scas
push
jmp
push
sbb
in
and
out
aad
pop
insl
jecxz
mov
xor
mov
xchg
xor
sbbl
dec
xor
inc
repnz
jo
push
xchg
mov
repz
shl
movsb
pop
fdivr
mov
push
jo
icebp
xchg
cwtl
cmp
pop
gs
shr
gs
js
into
push
xchg
mov
xor
shll
pusha
jmp
inc
into
inc
clc
mov
lock
loop
stos
push
mov
mov
shll
mov
cmp
mov
sbb
xchg
fcomps
fadd
add
adc
rcl
insb
dec
fmuls
lds
out
int3
addr16
fidivs
mov
add
ja
jmp
or
pop
lret
push
lea
mov
and
pop
jae
push
mov
dec
xchg
les
cmp
or
mov
cli
adc
push
movsb
fwait
push
jmp
fcoml
enter
cltd
and
mov
and
dec
cwtl
adc
pop
loope
pop
pop
mov
mov
mov
loopne
adc
mov
loope
dec
add
aaa
xchg
sub
add
mov
repz
xchg
add
jo
testb
iret
lahf
push
sub
pop
push
push
aam
fnstcw
pop
or
inc
adc
fyl2xp1
scas
push
test
mov
adc
dec
jne
push
xor
stos
incl
fcmovnu
pop
and
into
movsb
mov
int3
push
xchg
and
bsr
in
sahf
fiadds
inc
pop
into
sahf
and
sub
adc
or
cmp
cli
sub
cmp
sbb
cmpsl
sbb
icebp
fwait
or
das
clc
lea
outsl
mov
xchg
test
inc
movsl
xchg
leave
rorl
inc
mov
mov
daa
loopne
mov
cmp
dec
insb
insl
inc
shr
clc
fsubrp
into
stc
dec
not
xchg
inc
push
jbe
dec
sbb
sub
push
push
jmp
fidivl
test
mov
movsl
mov
jecxz
stos
stc
pop
in
iret
sbb
or
aaa
xchg
adc
testb
xchg
gs
xchg
gs
mov
sti
mov
xchg
daa
or
scas
jbe
mov
or
or
jge
sub
push
cs
aad
out
xchg
aaa
sub
lret
xchg
mov
loop
push
movsl
xor
stc
push
dec
out
fs
mov
sbb
imul
cmpl
ret
enter
push
pop
enter
and
scas
pop
movsl
das
mov
je
mov
push
and
lea
jns
xchg
and
add
in
lods
and
cs
dec
bound
adc
lcall
data16
adc
je
mov
ret
gs
cmp
cmpsl
test
jge
or
outsl
jb
aad
sbb
je
lock
jecxz
sub
mov
data16
mov
push
cld
adc
xlat
sub
nop
divb
sub
cmc
or
mov
ss
push
inc
subb
xor
outsl
push
sub
sahf
rol
lcall
mov
push
inc
jb
shrl
dec
bnd
ss
xchg
sub
jle
push
xchg
push
ret
loopne
xchg
arpl
gs
jae
testl
shr
add
ja
push
cmc
scas
fsts
sub
mov
jp
xchg
push
and
push
dec
sbb
pop
mov
ds
jp,pt
jmp
daa
shr
jmp
jle
inc
mov
or
out
mov
popf
fnstsw
jmp
in
mov
or
inc
mov
sbb
in
aad
gs
data16
ror
or
fcmovnb
pop
mov
loope
outsb
and
std
popf
push
cmp
int3
mov
into
repz
repz
lea
aam
xor
bnd
cmp
push
push
add
lock
insl
xor
das
jnp
aas
scas
sti
jne
inc
mov
lds
mov
jg
lcall
lret
fldt
push
and
sub
out
scas
and
loop
jmp
loop
pusha
cmc
sbb
or
pop
xlat
shrl
rcrl
cmp
das
shll
push
or
cmp
inc
and
inc
gs
insb
inc
jg
mov
jne
fwait
pop
jl
les
outsb
mov
cmp
adc
cmp
dec
popa
cmp
mov
jne
inc
insl
fstpt
out
mov
mov
push
nop
lds
xchg
lods
mov
push
mov
test
cli
shl
popf
pop
mov
shr
pop
push
push
push
or
fxch
aas
pop
jmp
or
push
pop
jo
push
jbe
add
scas
enter
pushf
push
fsubrs
lds
pop
out
jns
pop
fsubp
imul
in
testl
arpl
jo
pop
lea
lea
mov
dec
scas
xor
rcrl
cmp
arpl
xor
aaa
or
rorl
jl
out
popf
push
mov
mov
inc
xorl
add
pop
jl
inc
cmp
popf
xchg
scas
in
mov
popf
loop
cmp
jo
arpl
xor
cli
std
inc
mov
imul
pop
xlat
das
adc
leave
mov
test
loop
jl
iret
in
test
loop
push
inc
arpl
push
out
scas
loop
xor
mov
fstpt
cmpsb
fimull
lcall
mov
jne
ds
repz
mov
push
stos
pop
jle
or
cmp
mov
pop
dec
in
pop
push
xchg
fisubrl
rcll
sub
adc
mov
loope
inc
insb
sar
pop
and
sbb
jmp
test
push
iret
xchg
es
cmc
test
filds
mov
in
fwait
lret
js
jns
or
cmp
push
pop
xchg
inc
and
fisttps
addl
loop
lahf
sbb
mov
iret
inc
stos
arpl
add
sahf
mov
sub
popa
cmp
mov
addr16
cmp
add
pop
sub
jmp
mov
jne
dec
cmc
push
sbb
insb
inc
data16
ds
ss
enter
es
and
in
sub
test
arpl
pop
fsubrs
and
aad
xor
jns
mov
pop
sub
xlat
jl
inc
stos
lock
or
fwait
jecxz
call
push
orb
cmc
add
js
sahf
jo
lret
jnp
out
pushf
lods
aaa
sbb
push
mov
dec
icebp
out
rorb
out
inc
jg
in
or
or
pop
inc
mov
shr
add
or
push
inc
jecxz
lret
push
test
lds
hlt
mov
pop
pusha
repnz
cltd
inc
sbbb
xchg
pushf
jecxz
test
inc
jge
mov
jo
sbb
mov
sub
dec
in
sbb
lock
and
std
mov
sbb
popa
pop
sub
out
incb
lahf
and
fstpl
mov
mov
mov
push
leave
loope
out
jno
cmp
push
sahf
sete
mov
scas
dec
dec
cltd
mov
xchg
lcall
push
push
xorl
xor
xor
and
icebp
ret
xchg
xchg
pushf
pop
dec
mov
loope
add
sbb
mov
cmp
in
sar
sub
dec
xchg
mov
std
int
call
addr16
jp
mov
es
out
ss
dec
mov
nop
dec
arpl
fcoml
or
xchg
adc
aam
leave
jns
add
inc
out
test
mov
add
adc
cmp
ret
jmp
in
cmp
das
cmp
fstpl
nop
mov
ljmp
sub
das
dec
sbb
out
cli
pop
or
mov
aas
push
out
enter
shrb
mov
xor
stos
mov
inc
test
push
ja
jmp
fidivl
shlb
lods
push
cmp
out
adc
subb
cs
ret
cmp
out
int3
xchg
push
cli
mov
in
pop
adc
jns
xor
decb
or
xor
dec
mov
jmp
shl
inc
mov
mov
jge
cmp
inc
or
jnp
pop
sub
into
in
lret
cli
sub
xchg
fwait
and
addr16
push
adc
add
mov
gs
sub
lds
mov
push
arpl
push
jge
inc
repnz
xor
dec
mov
stc
add
dec
push
add
lcall
mov
add
sub
imul
and
js
sar
xlat
pop
add
mov
negl
es
adc
shll
xor
int
inc
iret
jg
je
push
add
sub
out
out
pop
and
divb
xchg
sub
dec
aad
push
jb
inc
enter
adc
lock
jne
adc
movsb
loop
push
push
movntq
out
mov
sub
arpl
js
adc
subb
xchg
mov
sbb
fidivrl
sbb
adc
rcl
fnstenv
popa
dec
mov
daa
push
inc
cwtl
sbb
mov
packuswb
lret
into
add
js
js
jl
jle
clc
dec
test
data16
jl
jns
push
pop
pop
notb
aas
loop
lods
push
mov
sub
mov
ret
lods
ja
jnp
or
into
gs
jo
jg
adcb
icebp
repnz
dec
fcmovnu
mov
data16
lahf
jle
shrb
loopne
dec
ret
pop
mov
adc
adc
xor
add
sub
rol
cwtl
mov
pop
adc
sub
mov
sub
out
stos
xchg
mov
push
jo
mov
jge
mov
repz
ss
mov
and
xchg
xchg
lea
pop
xor
pop
jecxz
fwait
adc
push
stos
adc
pusha
push
dec
cmp
xor
incb
or
sub
imul
xor
cmp
mov
pusha
or
ss
aaa
xlat
popf
out
add
mov
lds
lret
adc
jne
or
pop
xchg
xchg
mov
addb
xchg
popa
int3
into
add
fisttpll
orb
mulb
and
in
mov
cmpl
or
add
mov
out
mov
sbb
fs
sub
insb
fcmovnu
js
icebp
push
xlat
push
mov
sub
cli
in
outsb
xlat
loopne
clc
xlat
push
outsl
fcoms
hlt
and
lret
and
outsl
out
mov
xchg
sub
negb
test
jp
movsb
or
mov
cmp
sti
shr
xor
xor
mov
inc
loopne
hlt
fildll
mov
push
jnp
sub
cmp
xchg
mov
inc
scas
out
push
mov
xchg
add
mov
pop
xchg
xor
or
mov
popa
mov
jno
cmc
push
outsb
sbbb
and
popf
mov
mov
mov
fcompl
add
xor
rol
in
data16
xchg
data16
test
inc
mov
jecxz
test
outsb
pop
popa
xchg
ds
mov
gs
jg
lds
dec
mov
loope
mov
push
pop
movsb
xor
xor
imul
adc
pushf
jg
out
mov
rclb
fistpl
push
inc
add
popa
out
cmp
adc
fucomi
inc
cmp
inc
daa
outsl
push
and
or
push
sub
mov
js
lds
pop
inc
push
scas
icebp
pusha
or
dec
addl
pop
pop
insb
push
repnz
daa
rolb
dec
push
aad
gs
cld
push
pushf
inc
outsl
pushf
stc
inc
adc
into
mov
dec
adc
push
jo
mov
xlat
test
pop
lds
add
mov
sub
call
sub
pop
inc
cld
push
and
mov
lods
fistpl
out
ja
nop
pusha
shl
sti
ret
add
or
push
sbb
sahf
or
out
sub
xchg
mov
popf
xchg
bswap
inc
jge
lds
or
mov
push
push
repz
push
add
or
add
adc
daa
xchg
mov
sahf
pop
test
loope
dec
pop
inc
test
pop
ret
cli
or
cmc
es
rcll
ds
sub
cmpl
sub
lods
jo
hlt
repz
aaa
les
and
jg
jmp
insl
in
test
stos
or
fsubl
jmp
loop
pushf
push
sub
pusha
pop
repz
mov
dec
jns
adc
and
push
clc
push
add
xchg
cmp
adc
cmp
mov
decl
hlt
sar
test
push
push
sbb
add
ja
mov
mov
es
aam
push
inc
pop
inc
test
js
mov
pop
insb
add
es
repnz
aas
cmc
cmc
push
jns
inc
or
sub
jbe
out
xchg
xlat
cmp
xor
int
xor
cmpsl
inc
cmp
xchg
jbe
bswap
icebp
or
dec
sbb
mov
rclb
loope
push
xchg
arpl
cli
sub
mov
sbb
and
dec
mov
int3
lret
xchg
roll
inc
enter
mov
xchg
sbb
popf
leave
imul
mov
stos
mov
dec
imul
inc
sarl
pop
stc
sbb
loope
mov
leave
jl,pn
aad
inc
inc
cmpsb
inc
inc
pop
andb
popl
mov
pop
mov
int3
cli
inc
pop
mov
dec
mov
fistl
jne
or
cmp
jb
or
test
nop
bound
push
fcoml
sub
es
xor
push
aas
adc
push
jne
rcr
aam
adc
shll
outsl
addr16
lcall
inc
xor
dec
mov
and
push
int3
mov
imul
cld
xchg
dec
add
mov
sub
xor
imul
int
mov
mov
or
lds
add
ret
movsb
div
lods
testl
lcall
int3
int3
cmc
jl
outsl
imul
lods
in
dec
dec
daa
and
jp
or
dec
imul
add
or
cwtl
mov
add
filds
loopne
in
les
jae
dec
mov
sbb
xlat
fs
push
aam
mov
xor
test
cmp
pop
movsb
push
ja
clc
xlat
mov
adcl
jge
mov
mov
jmp
sbb
into
fld
and
push
lods
imul
aaa
loop
mov
mov
fnstenv
cmp
xchg
dec
pshufw
or
cmc
loopne
jae
shrb
clc
negl
cld
push
imul
add
icebp
adc
in
sub
xor
push
cmp
jb
mov
fcoml
aas
std
das
mov
out
pop
stos
dec
lcall
adcb
mov
mov
cmc
fidivrs
sub
xor
cmpsl
mov
push
cmp
cmp
or
or
cld
lret
sbb
cmc
mov
jg
cld
mov
fiaddl
icebp
mov
xchg
sti
divl
push
shrb
push
andb
aas
cmpsl
and
jnp
test
push
sub
mov
inc
inc
push
test
xor
lods
ja
and
fadd
mov
mov
stos
dec
push
xchg
ret
sbb
xchg
jge
mov
mov
aaa
loope
imul
test
inc
adc
adc
gs
rolb
lods
mov
add
rcl
les
jg
jbe
mov
and
inc
lock
sbb
arpl
cmp
test
pop
inc
push
mov
dec
cli
cmpsl
xor
lret
in
pop
fwait
arpl
mov
push
cltd
xchg
cmp
lock
sti
cmpsb
dec
jns
stc
mov
jb
in
jg
mov
notl
inc
jmp
sub
scas
ja
jbe
cmpl
sbb
data16
push
sub
add
inc
pop
sub
pop
pop
pushf
mov
scas
repz
push
jo
loopne
mov
test
jge
cmpsb
sbb
pusha
arpl
adc
or
ret
push
loop
dec
loop
mov
pop
and
movsl
jge
mov
lods
in
inc
scas
in
jl
and
xor
sbb
fwait
xor
or
cli
decb
iret
in
push
or
mov
test
adc
push
pushl
add
arpl
lock
sti
jno
repz
test
jns
outsb
xchg
loope
jbe
test
sti
pusha
insl
adcb
out
mov
pop
lods
out
and
cmp
jge
mov
ret
sbb
ja
lea
sub
stos
shlb
mov
cltd
pop
lds
ret
aad
mov
imul
mov
and
ja
mov
mov
cmp
mov
cld
mov
push
shlb
dec
scas
cmp
int
mov
jg
aad
in
or
roll
imul
fwait
nop
cmp
mov
mov
or
ficomps
lret
out
mov
int3
or
test
dec
cmp
sub
and
sbb
imul
adc
out
pop
test
pusha
xchg
lock
adc
mov
lcall
push
and
adc
sbb
push
sbb
icebp
adc
push
dec
adc
rcl
orb
adcb
push
cmpsl
pop
fs
and
mov
jbe
dec
lret
dec
mov
loopne
and
pusha
inc
sbb
inc
insl
out
maskmovq
mull
xor
push
insl
push
pop
dec
jp
mov
adc
js
push
stc
xchg
jp
test
int3
fisttps
add
xchg
into
test
xchg
aas
adc
mov
push
int3
jl
push
cmpsb
iret
xor
jb
mov
lret
xor
mov
pop
out
mov
subl
sbb
add
or
loope
pop
sub
sbb
in
xchg
push
or
repnz
lret
cld
cs
dec
sbb
push
fdivrl
push
test
loope
or
data16
cs
int
push
sbb
pop
or
xor
xorb
sub
add
add
lock
mov
adc
pop
and
addr16
or
cli
lods
pop
inc
mov
xchg
test
jp
push
outsl
cs
into
mov
repnz
lds
pop
movsb
cmp
lcall
mov
push
stos
jb
in
cmp
inc
cmp
push
xchg
cs
inc
add
mov
mov
test
push
add
adc
mov
subl
lea
lods
lret
add
outsb
pop
int3
dec
notl
xchg
inc
mov
repnz
mov
stos
arpl
or
imul
out
mov
scas
mov
fdivrl
adc
sub
stc
adc
dec
mov
jne,pn
mov
dec
lods
xor
dec
xchg
sub
sub
mov
aad
mov
pop
aad
mov
aaa
add
je
mov
mov
dec
mov
mov
mov
sub
add
popa
outsb
jno
mov
clc
lret
cmpb
stos
xchg
mov
mov
push
es
ja
push
xchg
daa
sti
xchg
sub
ret
lods
aaa
shrb
lock
aas
sar
arpl
adc
rcr
mov
incl
cltd
xchg
addl
adc
int3
ds
mov
mov
dec
push
push
or
incb
es
pop
addb
jle
mov
sbb
mulb
stos
mov
rclb
rcrl
repz
ljmp
adc
ss
decl
cmp
into
mov
lods
movsl
mov
inc
or
pop
es
jge
js
add
popa
and
jo
loope
cli
inc
call
jns
in
jns
pop
cwtl
sbb
dec
mov
rep
sahf
xchg
dec
jne
adc
lds
ds
pop
jmp
and
out
dec
out
add
push
movb
add
insb
xchg
cmp
jmp
adc
pusha
add
cli
lea
and
sahf
sbb
lods
cli
repz
xchg
shlb
jge
mov
bound
int3
sbb
je
mov
lods
fstl
nop
lahf
test
int3
mov
jmp
jo
sahf
and
push
xor
movsl
or
mov
mov
inc
push
enter
das
les
jbe
rorl
insb
lcall
sub
mov
xor
in
icebp
sub
je
test
add
xchg
loopne
xor
xor
sahf
sbb
cmp
ljmp
data16
gs
adc
in
and
rcrb
dec
jae
xor
pop
in
shrb
pop
in
or
addb
push
fmuls
in
mov
cmp
dec
add
test
sub
leave
sub
pusha
cmp
dec
repnz
or
cltd
mov
pop
pop
cmpsb
mov
sub
ja
dec
and
add
add
in
or
jno
adc
fcoms
enter
daa
nop
ds
ds
or
or
dec
movsl
xor
or
loope
mov
aam
ret
xor
test
cmp
mov
clc
ljmp
shrb
jb
imul
inc
loop
dec
mov
add
rol
testl
xor
push
lahf
sub
sbb
lock
add
inc
call
adc
stos
push
sbb
add
cmp
test
or
add
sub
das
lock
pop
hlt
ss
jmp
push
mov
xchg
ficoml
in
push
std
stos
aas
lock
adc
jle
movsl
xchg
test
mov
mov
loop
and
sbb
pushf
adc
xchg
mov
fwait
sub
xor
lret
popa
adc
push
mov
jnp
loop
call
gs
popf
call
loopne
xchg
mov
aad
jecxz
add
jecxz
int
aas
push
pop
xor
xchg
arpl
mov
or
pop
movsl
cmp
mov
sbb
sti
mov
mov
jnp
inc
pop
cmp
ret
shrl
out
and
je
std
add
lcall
sub
fwait
jne
and
mov
lcall
jp
inc
aad
pop
aad
cmp
lds
in
loopne
pop
mov
movsl
addr16
sbb
dec
add
lock
and
and
dec
and
shrb
imul
xchg
cmp
dec
sub
sbb
fnstsw
loope
inc
ljmp
pop
pushf
loop
mov
xor
test
gs
rcrb
imul
jne
jno
cli
ljmp
rorb
loop
lahf
les
fmuls
inc
adc
inc
sub
sub
mov
jle
sub
xor
cmpsb
mov
lock
inc
lcall
mov
mov
dec
inc
push
sbb
xor
pop
insl
ds
dec
pop
push
mov
arpl
push
loop
or
aad
cmp
mov
and
ja
fimuls
nop
test
or
mov
mov
cmp
aam
data16
enter
and
dec
sbb
ds
lods
xchg
pop
and
daa
push
inc
insl
sti
cmp
outsb
je
pop
cmc
mov
xchg
jno
mov
adcl
stos
test
push
loopne
fcompl
cmpl
xor
add
addr16
mov
icebp
mov
mov
imul
lods
push
lea
cmp
mov
mov
pop
pop
or
mov
stos
mov
inc
fisttpl
cld
sbb
popf
mov
cmp
push
xor
sbb
lods
fcmovne
iret
lods
testb
outsl
divb
aas
scas
fstpl
fwait
cmc
ljmp
dec
and
int3
cmp
outsb
cmp
addr16
cmpsl
cltd
adc
push
xchg
sbb
subl
mov
incb
enter
jmp
call
mov
scas
pop
dec
rol
aad
sbbb
push
clc
cs
andb
dec
dec
fstps
pop
filds
in
les
mov
inc
xchg
test
mov
add
hlt
mov
repnz
dec
into
mov
aam
and
aad
test
in
icebp
adc
xor
mov
xchg
dec
imul
xor
insb
dec
push
pop
pop
sub
mov
stos
or
xor
xchg
xchg
cld
lahf
mov
or
dec
and
cmp
je
pushf
sub
les
les
mov
push
paddsb
shll
hlt
mov
and
adc
jnp
inc
les
add
fs
inc
cli
push
adc
shll
in
ss
imul
fldcw
out
addr16
shrb
push
push
dec
or
int
gs
arpl
loop
sbb
mov
cmp
xor
ljmp
mov
pop
xor
cld
mov
sbb
xor
movsl
sbb
xor
fbld
sarl
pop
cmpsb
roll
xchg
in
repz
sbb
cmp
rcll
pusha
and
sub
pop
lds
imul
leave
and
cmp
add
mov
add
jp
lcall
mov
faddl
lcall
test
std
out
fs
in
gs
inc
out
out
xor
xchg
rol
and
dec
dec
gs
fdivr
and
add
and
lods
imul
sbb
test
dec
jno
outsl
mov
push
pop
adc
aad
add
popf
jmp
faddl
adc
loop
xchg
shr
std
inc
rorl
int3
mov
xor
or
out
dec
fiadds
test
xchg
ss
add
cmp
xchg
mov
push
mov
cmp
gs
adc
mov
test
ljmp
fidivl
push
push
adc
push
adc
inc
mov
gs
loope
sbb
sub
into
inc
jne
mov
mov
das
frstor
mov
dec
fsubrl
ret
inc
add
cmc
dec
push
mov
aad
dec
stos
cli
pop
xor
mov
les
cmpsb
in
movsl
lret
in
push
xchg
adc
aam
jg
mov
sbb
add
push
in
jle
add
push
into
mov
dec
jl
xchg
leave
fcompl
xchg
test
sub
pop
pop
jns
in
aas
test
and
and
pop
loope
push
inc
outsl
add
out
daa
push
push
imul
sbb
and
or
std
movl
movsl
movsb
mov
jnp
xchg
jae
cwtl
in
xor
push
sar
testb
pop
xchg
rcrb
mov
push
cmc
jge
into
pop
dec
xchg
or
roll
push
sti
add
test
adc
jno
out
cmc
lods
push
add
push
test
in
jo
pop
pop
jo
das
adc
into
mov
sbb
lods
and
popf
or
cmp
outsb
adc
ljmp
fadds
mov
iret
adc
inc
lahf
or
or
mov
or
cmp
loope
adc
and
push
push
inc
sub
in
pop
add
add
daa
sbb
jg
adc
push
mov
popa
mov
cwtl
adc
out
lods
mov
loope
fs
mov
mov
je
clc
leave
loop
push
enter
adc
in
mov
popf
xchg
hlt
rclb
cmp
das
xchg
nop
mov
inc
cli
sbb
add
inc
pop
mov
sub
push
insl
push
pusha
cltd
cs
xchg
push
inc
or
add
mov
push
mov
xchg
pushf
bnd
mov
cmp
in
adc
mov
dec
xchg
xor
in
ds
xchg
test
je
push
push
and
in
mov
cmp
and
insb
jns
lea
mov
dec
sbb
jbe
push
push
call
divl
aaa
and
addl
push
insl
mov
stos
popa
ret
and
enter
negl
mov
fnstsw
jg
mov
mov
rol
cmp
pop
jmp
out
sub
insl
jmp
jnp
shrb
push
mov
add
testl
push
shll
lahf
in
jo
inc
cld
cwtl
dec
loopne
and
adc
leave
dec
push
jo
lods
mov
test
push
hlt
sbb
inc
lods
jl
lock
arpl
mov
jnp
out
int3
daa
int
test
test
lock
out
mov
clc
shrl
pop
and
sbb
adc
outsl
stos
movsb
test
repnz
mov
sbb
sbb
ljmp
cmp
shll
jno
push
mov
pop
mov
mov
daa
dec
dec
push
adc
movsb
xor
out
inc
pop
pusha
mov
xchg
in
sahf
filds
add
cmp
insl
xor
pop
scas
add
mov
add
loopne
cltd
ljmp
fidivrs
sbb
scas
add
mov
and
je
lret
pop
and
into
sbb
into
hlt
jmp
mov
and
sbb
jne
lret
das
pop
pop
sahf
sahf
mov
mov
ja
mov
out
jae
mov
popf
add
int
sub
cwtl
outsl
outsb
and
and
xchg
xchg
sub
sbb
outsl
cmc
cwtl
push
sti
pop
mulb
xor
imul
mov
mov
outsl
cli
inc
fs
ljmp
jge
ljmp
pusha
mov
mov
xchg
lret
loope
sbb
bound
sbb
addr16
test
les
xor
rcr
scas
or
inc
repnz
iret
push
outsb
adc
les
lock
aaa
mov
mov
dec
push
jg
sub
rorb
test
push
fwait
movsb
sbb
add
xor
mov
mov
dec
sbb
inc
or
outsl
inc
pop
or
push
pop
push
mov
test
das
jp
std
xor
mov
inc
insl
fcoml
orb
or
lods
sbb
cmpsb
xchg
push
test
pop
mov
lret
insb
iret
sub
fdivrs
pop
clc
mov
hlt
and
clc
add
mov
pop
lock
jecxz
push
fstpl
jbe
sbb
xor
popf
mov
pop
mov
lods
sbb
mov
sbb
add
push
shll
sub
loopne
or
cmp
xor
scas
xchg
hlt
iret
loopne
arpl
push
mov
mov
cmpl
fistpll
bnd
lahf
stc
xor
mov
cltd
ret
aas
jmp
scas
fstpl
mov
add
or
cmp
lahf
in
adc
xchg
pop
pop
cmp
xchg
pop
rclb
ficoms
fistpll
mov
xlat
in
add
sti
inc
pop
pop
add
cmpsl
testb
dec
aaa
sub
add
jmp
mov
jnp
out
fwait
adc
adc
push
push
icebp
hlt
and
ss
push
imul
cltd
nop
pop
aaa
add
repnz
cmp
mov
cltd
mov
scas
dec
push
std
push
and
out
xor
lahf
jbe
scas
sbb
mov
clc
add
jle
shr
pop
xor
dec
aas
fadds
scas
pop
mov
test
cmp
mov
push
das
pop
jecxz
push
or
mov
popa
mov
add
cmpb
mov
cld
pop
rcll
jo
aas
xchg
lret
mov
shlb
pop
inc
pop
sub
xor
lock
inc
imul
push
ret
mov
test
xor
jo
lea
dec
data16
sti
xor
arpl
lcall
hlt
loop,pn
test
mov
ss
imul
cwtl
cmp
xor
or
inc
jbe
sahf
test
push
les
pop
inc
and
xor
mov
sub
pushf
cmp
daa
mov
lret
jecxz
jns
loop
lahf
jae
xor
inc
sarw
add
imul
dec
pop
lahf
push
loop
stc
push
mov
out
dec
insl
push
in
mov
insl
add
cld
xorl
shll
sbb
push
pop
popa
and
loope
mov
in
add
ljmp
repnz
jb
push
jl
cmp
pop
xchg
cmp
dec
dec
pop
sub
jnp
outsb
cld
sub
mov
mov
jae
push
jne
sbb
in
iret
scas
pushf
icebp
scas
sub
ljmp
xor
push
xchg
clc
inc
inc
mov
inc
jo
sub
adc
shll
dec
sbb
clc
inc
arpl
xchg
xor
pop
cmpl
sti
pop
jns
bound
je
xor
enter
data16
out
cli
divb
fildl
push
aam
loopne
adc
xchg
cs
cmp
adc
add
iret
push
lods
add
out
stos
jle
or
push
jecxz
jge
mov
mov
loop
std
fstpt
xchg
sbb
or
std
in
inc
jb
dec
sbb
cmpsb
loopne
mov
gs
jnp
or
ret
jmp
jg
or
shll
mov
and
movsl
and
sbb
cs
add
pop
mov
imul
arpl
out
iret
or
xor
mov
int
insb
push
mov
notb
and
cltd
add
js
sub
pop
xor
pop
dec
mov
scas
mov
or
and
add
inc
int3
push
out
cmp
pop
das
add
jmp
sub
out
mov
push
inc
ret
lods
or
sub
sbb
mov
dec
pushf
xchg
jb
cmp
mov
mov
pop
pop
mov
xlat
xor
xchg
mov
push
inc
enter
or
cmp
mov
ficomps
dec
scas
xchg
jbe
xchg
mov
int3
mov
aam
pop
rolb
dec
stc
dec
mov
lods
imul
or
and
outsl
adcl
adc
pop
pminsw
imul
xchg
xchg
dec
mov
mov
rcrb
mov
scas
adcb
push
cli
int
sub
ret
shrl
and
mov
fimuls
shlb
mov
push
inc
jle
mov
repz
push
movsl
insb
in
hlt
mov
test
psubw
fcomps
adc
ret
cli
inc
fldt
mov
pop
mov
pop
loope
fwait
aas
xor
test
add
es
nop
adc
popa
les
jne
jno
hlt
cli
and
or
add
rcll
push
lret
xor
ss
push
xchg
cmp
loop
outsb
push
cmp
and
adc
sub
pusha
dec
pop
lods
insb
bound
iret
ljmp
add
xchg
sbb
add
insb
cmpl
addr16
and
pop
sub
cmp
and
pop
cs
jnp
xor
dec
leave
fistl
pop
mov
add
jno
and
repz
jae
sub
mov
jb
or
dec
cmp
push
adc
idivb
subb
daa
xchg
ds
sbbl
fstps
xchg
sub
jmp
pop
adc
mov
out
and
cmp
in
pusha
xor
or
xchg
mov
test
andl
cmpsb
das
scas
andb
pusha
rcll
call
xchg
lret
adc
mov
push
push
and
aaa
cmp
repz
pop
pop
movsb
dec
lods
bound
cltd
fisubl
push
sbb
mov
lods
mov
int
faddp
xor
inc
aaa
imul
lods
mov
std
and
add
int
clc
int3
xlat
jmp
rorl
mov
nopl
mov
dec
in
ja
pushf
jmp
or
and
call
mov
cmp
adc
fwait
les
test
inc
into
adc
mov
sbb
andb
ret
ds
mov
inc
je
jbe
imul
das
jnp
xchg
imul
in
shl
lahf
lret
push
pushf
insb
mov
push
sbb
test
loopne
adc
mov
movsb
inc
xchg
sub
in
mov
mov
add
push
pop
and
movsl
and
int3
lock
push
js
scas
or
cmpsb
add
adcb
push
pop
outsl
loopne
ljmp
jecxz
and
dec
hlt
cmp
cli
adc
fxch
pusha
icebp
mov
adc
leave
es
jb
adc
cmp
push
in
mov
fld
and
aam
jbe
cmovbe
add
or
and
rorb
xor
push
stc
jge
cmpsb
js
sbb
cmp
add
loope
and
and
push
in
fs
jl
ds
adc
stos
jg
lea
jnp
jmp
mov
add
push
das
dec
ds
inc
insb
or
push
jg
leave
in
mov
pushf
xor
popf
sbb
xor
push
jmp
mov
or
inc
int
or
fstl
and
xchg
mov
xorb
aam
mov
mov
mov
bound
and
and
sub
mov
je
inc
leave
fcomi
fdivs
fs
stos
push
or
mov
cmpsb
pop
imul
jp
nop
xchg
imul
gs
pop
adc
idivl
mov
enter
fcmovnbe
int3
outsb
mov
sbb
sub
jl
gs
mov
test
and
fwait
cmp
xchg
cmp
rorb
jbe
test
mov
mov
aam
xchg
ljmp
mov
adc
xor
mov
mov
imul
pop
mov
mov
loope
jmp
addr16
cltd
mov
pop
fildll
sbb
repnz
and
mov
cmp
sub
dec
call
outsl
out
cmp
negb
daa
mov
cld
lret
or
in
cmp
test
add
leave
loopne
adc
lahf
or
dec
lret
clc
jl
mov
adc
xchg
sbb
inc
sahf
dec
imul
mov
jmp
cmpsl
push
test
fsubrl
rcrb
test
std
jnp
jo
pop
mov
add
pop
and
movsl
jecxz
incb
iret
pop
and
scas
sub
adc
sbb
insb
push
loop
push
out
jo
in
call
xor
loop
aam
jo,pt
dec
enter
push
out
movsb
or
ret
adc
aam
outsb
lods
cltd
lods
pushf
jg
or
push
repz
sahf
push
mov
in
push
fisubrs
nop
adc
lret
sub
dec
rcr
inc
stos
hlt
mov
out
cwtl
outsl
add
and
dec
jge
pop
mov
jne
xchg
ljmp
addr16
mov
ljmp
fmul
mov
cmp
adc
xchg
sarb
bound
in
add
sar
out
cmp
ret
push
inc
rcll
pop
popf
rorb
push
je
sar
dec
lcall
nop
lds
cmp
dec
adc
fwait
jge
or
jmp
idivl
das
xchg
jbe
xor
fst
in
ret
test
scas
jnp
pop
pop
mov
mov
lods
and
cmp
lahf
test
adc
xor
lock
cs
add
jmp
imul
vmovsd
adc
mov
or
nop
pop
or
loope
sti
shrl
ja
pop
push
shrl
sbb
icebp
jle
faddl
push
paddw
ljmp
add
addr16
mov
ret
test
or
pusha
mov
add
jmp
mov
pop
add
shl
clc
cmpb
fucomip
sbb
push
data16
js
push
icebp
push
int
sub
movb
outsl
mov
imul
in
lds
pop
cmp
ljmp
xchg
clc
mov
xor
pop
sub
dec
cmc
movl
iret
jmp
jne
fnstsw
adc
mov
mov
or
sbb
inc
xchg
pop
mov
and
mov
loopne
rcrl
push
mov
lods
xor
fldenv
adc
jnp
inc
mov
xor
mov
adc
xchg
and
push
sub
jne
jne
push
aas
jns
xor
in
sub
fldl
inc
cmp
popa
mov
jmp
fiadds
adc
mov
daa
ja
ss
es
or
aas
sbb
mov
inc
fwait
xor
xlat
rcl
in
xor
ror
lret
mov
inc
fldcw
daa
insl
sub
pop
dec
and
aaa
jne
rorl
je
out
sub
mov
popf
dec
inc
cli
xchg
insl
inc
xor
push
lock
jns
daa
rol
lcall
fldcw
aas
enter
pop
loopne
in
jl
scas
xor
int3
outsb
adc
rcll
jg
xor
xor
xchg
and
fwait
and
inc
ss
sub
loopne
mov
je
leave
adc
jne
dec
cmp
jge
inc
pop
pop
bound
dec
mov
cmovge
adc
aas
mov
nop
jo
notb
add
xchg
push
xor
mov
cmp
rcll
jbe
les
bound
repnz
pop
repnz
loop
filds
jnp
or
fists
and
cmpsl
xlat
add
add
std
jmp
mov
nop
xchg
mov
in
xchg
push
int3
mov
cld
xchg
outsb
cmc
cmpsl
push
sub
dec
ret
push
pop
sub
popf
inc
add
inc
fdivs
outsb
lret
sub
rorb
loope
mov
iret
xlat
inc
fsts
pop
shrb
lds
sub
dec
sbb
sahf
shll
sub
cwtl
es
mov
mov
sbb
subl
inc
xchg
add
xchg
xchg
inc
sub
fcoms
insb
js
mov
aam
sar
and
dec
imul
cltd
cmp
jo
pop
cltd
add
in
andb
mov
enter
pop
pop
fidivl
mov
popf
in
lret
test
push
roll
lock
sub
xor
pop
jns
mov
mov
in
outsl
add
in
jnp
xchg
movsl
out
lods
fcomp
dec
and
pop
dec
push
outsb
or
jnp
sub
jno
cli
cmp
lcall
scas
lahf
loope
leave
orb
pusha
int3
test
jecxz
into
mov
rorb
xlat
test
mov
addl
dec
inc
mov
es
test
lds
add
sub
adc
cmp
and
mov
cmpsb
inc
popa
sbb
xor
jle
insl
jg
ret
or
mov
imul
daa
sub
and
popf
outsl
xchg
sbbb
lret
ret
stos
call
push
lds
insl
test
lock
rcrb
add
cmp
movsb
add
jmp
jnp
xchg
std
push
mov
das
xor
js
dec
mov
pusha
fcompl
mov
sub
insl
mov
dec
add
pop
aad
adc
es
sbb
cwtl
aam
xchg
mov
xor
add
or
fsubl
dec
enter
mov
xchg
test
inc
outsb
cmp
js
cmp
sbb
out
jmp
repz
inc
fistps
outsb
shlb
push
mov
jo
mov
sub
push
loopne
scas
jno
cmp
rcr
dec
mov
add
sbb
cmp
xor
js
mov
sbb
sahf
cwtl
div
mov
lcall
inc
leave
sti
and
cltd
icebp
in
mov
jmp
es
xchg
loopne
add
xor
mov
ret
data16
aad
insl
call
cmp
pop
out
pop
mov
cltd
cmp
or
icebp
lcall
je
lret
push
cmc
mov
mov
cmpsb
dec
and
or
sbb
inc
dec
xchg
xor
test
mov
jecxz
jb
js
andb
test
inc
sbb
divl
lcall
mov
sbb
mull
shrl
dec
xchg
orl
mov
push
ds
insl
adc
notl
ret
and
mov
jle
add
push
fcompl
pop
adc
testl
cs
mov
xchg
adc
mov
inc
arpl
aas
pop
filds
insl
fcomp
sub
lret
cmp
rorl
bsf
fmuls
pop
movsb
inc
cmp
std
inc
pop
negb
or
sbb
xor
mov
cmp
inc
int3
fistl
pop
pop
sub
xchg
in
push
imul
ja
cmpsb
addr16
pop
xor
jae
lret
jmp
movsl
cmp
push
ljmp
push
loope
mov
iret
jnp
pop
push
jns,pt
fldenv
dec
and
add
push
push
rclb
sub
adc
push
ftst
cmpsl
pop
inc
cwtl
push
daa
mov
and
lock
in
mov
aad
int
clc
mov
add
sarb
adc
fcoml
push
jne
dec
lods
scas
aas
sub
mov
aas
mov
mov
or
sbb
pop
or
xor
sub
sub
loope
jge
sub
inc
mov
je
clc
xchg
pop
insb
test
leave
lods
stos
data16
pop
je
pop
push
add
xchg
lret
std
adc
mov
aaa
int
int3
sub
movsl
enter
sbb
mov
dec
lret
mov
push
inc
aas
add
int
cmpsl
shlb
sbb
lahf
jp
sarb
pop
inc
mov
mov
push
decb
xchg
shrb
lahf
pop
cltd
jg
test
test
outsl
add
js
mov
in
mov
adc
ret
pop
outsl
aam
sub
loopne
mov
subl
jle
mov
cs
subb
mov
xorb
aad
addr16
xor
in
sbbl
ficoml
mov
adc
aad
pop
mov
aad
push
sbb
xchg
test
pop
sbb
or
pushf
inc
mov
xchg
dec
mov
movsl
shll
data16
test
xchg
mov
pop
pusha
dec
in
rorb
mov
sbb
adc
cmp
imull
in
cmc
cli
pop
xchg
pushl
and
dec
mov
inc
mov
mov
dec
das
lods
mov
punpckldq
or
loopne
mov
sub
lea
mov
movsb
gs
outsl
addr16
bound
out
lea
mov
stos
sub
jo
in
xor
ds
shlb
fistpl
cmp
cmp
insl
xlat
into
and
daa
data16
rclb
add
jmp
xchg
fstps
or
ljmp
mov
loope
mov
ret
js
inc
xchg
mov
add
add
pop
cmp
imul
mov
mov
jns
pop
in
sbb
iret
add
jne
jae
movsb
and
movl
push
shlb
xchg
cmp
mov
xchg
ljmp
mov
aas
push
or
pop
out
xchg
repz
push
or
mov
scas
in
aam
nop
lea
int
sub
fsubs
mov
das
jno
out
jns
mov
xlat
sti
xchg
pop
rcr
adc
mov
push
fmuls
pop
gs
fs
jae
and
jae
insl
imul
add
adc
fs
pop
add
pop
dec
add
jl
add
scas
add
mov
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
dec
pushf
addr16
xor
jg
mov
adc
emms
add
pushf
dec
add
gs
xor
add
jns
aam
add
ja
cmp
adc
pushl
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
or
xor
xor
xor
xor
xor
xor
.byte
