and
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
hlt
adc
mov
cmpl
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
push
push
inc
add
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
cmp
add
lea
push
mov
mov
sbb
inc
add
mov
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
arpl
inc
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
sti
inc
add
mov
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
sti
inc
add
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
add
std
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
and
push
adc
add
movl
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
test
inc
add
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
pop
sbb
pop
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
xchg
inc
add
out
je
add
or
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
dec
stc
inc
add
inc
cwtl
shl
mov
add
add
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
push
call
mov
xchg
add
add
push
add
lahf
add
popf
push
add
add
mov
stos
add
int3
cld
xchg
jb
add
cli
push
scas
add
pop
jno
mov
add
push
push
push
lea
push
push
push
push
push
call
enter
test
add
xchg
xchg
add
shl
push
in
add
rolb
jno
jns
mov
lret
add
add
mov
bound
js
shr
mov
mov
add
add
test
stos
pop
cmc
add
jns
add
pop
popl
push
push
push
push
push
push
call
lea
test
addb
add
into
pop
pop
xchg
add
add
pop
jns
into
add
xchg
add
flds
pop
xchg
roll
mov
add
filds
fcoml
cmpsb
xchg
icebp
add
xchg
add
into
jl
mov
fiadds
add
mov
ror
add
add
add
addl
ja
hlt
add
roll
adc
hlt
add
add
pop
push
push
push
push
push
call
pop
mov
add
imul
aam
fiaddl
aad
xchg
aad
jne
test
pop
into
pop
flds
jmp
clc
mov
add
test
jp
push
jp
add
add
test
add
enter
jb
add
push
jmp
lock
add
mov
xchg
out
mov
cltd
mov
nop
jno
add
lds
addr16
push
mov
lea
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
add
pop
mov
add
jnp
add
cmpsb
add
cld
add
add
add
pusha
faddl
add
push
add
xchg
bound
add
rcr
push
std
xchg
pop
mov
mov
add
scas
mov
icebp
popa
arpl
pop
cmc
push
xchg
add
pop
push
push
push
call
jns
pop
add
aad
js
arpl
out
movsl
add
jecxz
add
test
add
jmp
loop
int3
fiadds
pop
add
add
jecxz
add
add
pop
rcrb
add
int3
int3
add
add
push
aad
add
push
jmp
add
add
jo
mov
int3
enter
scas
jge
cmc
add
pop
call
call
push
push
push
lea
push
push
push
call
add
jmp
add
out
ljmp
add
test
push
add
add
add
fiaddl
aam
lahf
add
jp
add
jb
jae
add
imul
cld
lea
pop
push
push
push
lea
push
lea
push
call
add
mov
add
pusha
xchg
add
mov
add
mov
flds
data16
pop
add
jge
push
pop
add
adcl
add
testb
mov
aam
bound
pop
call
push
push
push
push
push
lea
push
push
push
push
push
call
add
hlt
imul
xchg
data16
pop
add
xchg
add
mov
mov
out
push
add
arpl
clc
rcrb
xchg
add
mov
mov
mov
xchg
add
add
push
mov
mov
push
mov
add
fdiv
add
pop
jmp
push
push
call
add
add
add
fs
fwait
mov
add
xchg
out
add
mov
popa
fistps
aam
addb
frstor
xchg
pop
in
out
push
cmpsb
jnp
mov
insb
mov
add
jb
xchg
xlat
ljmp
add
push
mov
fisubrl
jle
fldl
loop
out
pop
std
std
mov
aam
bound
pop
ret
mov
push
lea
push
push
push
lea
push
call
xchg
add
add
fcomps
jnp
jle
pop
pop
add
pop
add
aam
add
add
jae
push
pushf
addb
add
mov
pop
add
mov
lea
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
add
mov
fwait
xchg
add
aad
add
add
xchg
movl
add
roll
data16
jp
addl
mov
mov
add
lods
lcall
cltd
mov
add
hlt
jne
hlt
lea
pop
add
add
push
push
lea
push
lea
push
push
lea
push
push
push
call
rclb
mov
test
mov
mov
add
aam
jge
pop
shlb
pushf
add
mov
add
out
xchg
add
cli
lea
mov
add
pop
mov
jle
add
pop
add
push
push
lea
push
push
push
call
add
mov
ret
out
nop
add
lods
add
mov
stc
addl
mov
adcl
mov
add
push
add
out
add
add
jl
pop
pop
out
add
add
pusha
adc
mov
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
rorl
faddl
xchg
add
add
xchg
out
add
pop
add
mov
pop
imul
add
jge
cld
mov
fildl
stos
je
jle
lret
mov
rolb
add
shll
arpl
pop
xor
push
lea
push
push
push
push
push
push
push
push
call
add
xacquire
mov
test
jno
incb
sar
int3
out
imul
lock
cmpsl
mov
leave
pop
sarl
ja
add
add
leave
cltd
mov
pop
push
subb
pop
xchg
mov
je
clc
add
add
out
add
bound
push
add
add
pop
add
push
push
ror
push
and
add
xor
inc
sub
shl
dec
shr
pop
add
pop
push
lea
push
call
stos
add
jl
xchg
push
cltd
mov
fnstsw
mov
xchg
push
les
push
lret
add
add
add
ret
add
add
scas
out
push
xchg
loopne
add
addr16
movsb
xchg
mov
xchg
add
jae
into
jno
xchg
pop
sahf
aam
out
jae
stos
add
popa
or
jne
push
push
push
push
call
mov
imul
add
data16
mov
in
pop
jno
add
xlat
fiadds
jne
test
add
std
scas
add
add
jecxz
add
add
add
add
pushf
addb
lea
pop
call
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
add
out
data16
mov
push
pop
shll
pop
int
xchg
add
sti
lock
fiaddl
fcmovne
add
add
lods
xchg
add
mov
add
cmp
add
push
add
cmpsb
add
add
add
pop
mov
push
push
push
push
push
push
call
jbe
ljmp
cmc
push
add
fucomi
add
mov
movsb
add
jp
add
add
cld
jne
add
cli
jge
add
pop
add
int
mov
lea
pop
movl
push
push
push
push
push
push
call
add
add
scas
jnp
add
add
add
add
add
enter
add
mov
leave
mov
add
call
add
xchg
movsb
scas
aam
add
add
leave
add
jge
repnz
add
add
lret
mov
hlt
lea
pop
lea
push
push
push
call
in
loope
arpl
add
mov
les
jle
add
js
add
add
add
mov
mov
add
add
add
in
add
pushf
add
shl
mov
lea
pop
push
push
push
lea
push
push
call
add
xlat
xchg
std
push
push
mov
rolb
pop
add
cli
icebp
xchg
gs
push
add
xlat
push
mov
cli
addl
add
add
out
movb
lds
add
add
add
add
stos
adcb
add
pop
pushl
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
mov
add
std
push
add
fwait
in
cwtl
add
add
rcrl
rcrl
mov
add
imul
xchg
mov
lea
pop
pushl
push
push
push
push
lea
push
lea
push
push
call
add
add
mov
add
iret
faddp
insb
add
add
jae
add
push
sarb
mov
add
add
sbbb
add
pop
call
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
mov
gs
mov
push
xchg
mov
jl
jle
add
push
les
out
in
int3
stc
int
jle
lcall
call
mov
push
test
add
add
mov
jp
add
pop
add
add
test
jle
add
mov
lea
pop
pushl
push
push
push
push
call
fcmovnbe
pop
cld
loop
pop
xchg
add
add
add
jp
test
testb
mov
ljmp
add
add
cmpsl
shrb
push
add
into
add
sarb
add
add
add
popa
in
add
add
add
add
rcrl
mov
lea
pop
pushl
push
push
push
lea
push
push
push
call
fsubl
faddl
add
add
add
add
add
mov
lds
add
add
add
data16
lret
lods
add
mov
lea
pop
call
push
push
shr
not
push
sub
add
sub
sub
pop
add
inc
pop
push
push
lea
push
push
push
lea
push
push
push
call
iret
mov
imul
add
add
mov
jge
hlt
add
add
loop
add
mov
aad
add
jl
bound
add
rcll
incb
push
lock
xchg
add
addb
and
add
add
and
jne
call
push
push
push
lea
push
lea
push
push
lea
push
call
jmp
test
mov
stos
lahf
add
clc
mov
add
mov
movb
into
add
add
fsubrs
xchg
add
add
mov
xchg
add
addl
cli
add
push
fucomi
add
loopne
add
xchg
add
popf
mov
add
add
add
pop
push
push
push
not
sub
ror
add
push
or
not
add
inc
lea
sub
shl
xor
pop
pop
push
push
push
call
test
and
lret
fildl
testb
add
cmpsb
mov
fsts
nop
add
add
test
imull
ret
std
add
xchg
add
push
add
add
pop
add
push
add
add
add
pusha
or
push
push
push
push
push
push
lea
push
push
call
add
add
roll
insb
mov
add
mov
add
add
add
pop
mov
call
aam
addl
mov
idivb
add
add
loope
xchg
mov
imul
sti
xchg
out
cmc
jo
push
lret
mov
add
pop
mov
add
aam
bound
pop
call
mov
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
jl
add
out
mov
lret
mov
mov
out
add
push
imul
mov
xorb
out
jae
out
add
push
aam
loop
fadds
lret
nop
xchg
scas
lcall
cld
repnz
loop
add
scas
mov
lea
pop
push
push
push
push
push
call
add
pop
add
jne
addr16
cltd
call
add
add
lahf
fists
div
int
add
movl
ret
add
mov
add
lods
fdivs
imul
fldl
pushf
sub
ret
jo
add
addl
xchg
rorl
add
pop
adc
add
roll
mov
lea
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
fildl
pop
test
add
add
add
xchg
mov
add
add
lahf
fwait
add
ja
sahf
idivb
addr16
pop
lock
pop
push
loopne
sarl
push
add
add
push
add
movsb
cli
les
cmpsb
pop
add
add
add
mov
add
add
int3
push
mov
data16
pop
in
ret
add
add
push
push
lea
push
call
mov
movsl
pop
fdiv
add
add
mov
add
add
mov
call
mov
push
in
ljmp
add
fldl
add
add
push
jb
add
add
mov
mov
lea
pop
add
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
jge
mov
pop
add
popl
jecxz
add
iret
stos
lret
add
xchg
pusha
fwait
arpl
fs
add
add
out
add
add
mov
xchg
arpl
mov
mov
jo
test
test
add
mov
add
les
xor
xor
push
push
push
call
mov
push
add
test
add
lea
add
pop
lret
add
add
incb
ja
jp
add
add
fdivp
add
push
add
data16
xor
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
in
add
cmpsl
add
iret
stc
add
in
lods
add
mov
mov
pop
add
add
add
add
add
stc
arpl
loopne
add
add
jns
mov
mov
add
je
jno
push
add
jmp
movl
lea
pop
add
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
out
stos
add
mov
stos
add
pop
les
lcall
testl
int
add
fwait
add
mov
add
int
fldl2t
shlb
test
add
add
cltd
mov
jne
add
shl
add
cld
add
lcall
and
add
push
push
push
push
push
call
lcall
cmpsb
fadds
fdiv
jnp
outsl
add
add
addb
pop
push
add
add
popf
in
add
add
push
scas
les
add
adc
outsl
int
mov
push
push
pusha
mov
sahf
add
push
push
add
add
adc
push
mov
xor
push
push
lea
push
call
xchg
add
mov
add
add
add
mov
scas
add
scas
pushf
pop
add
mov
push
test
add
addr16
add
mov
add
add
add
loope
jno
fmull
lock
push
lea
push
lea
push
push
call
add
mov
mov
js
ljmp
nop
js
add
add
jo
cmpsb
std
je
rclb
pop
out
iret
insb
mov
add
mov
xchg
movsl
fcomi
add
mov
lea
pop
pop
push
push
push
call
add
push
lret
xchg
in
push
icebp
add
cmpsl
add
data16
mov
add
int
test
lods
add
roll
add
add
test
xlat
add
jae
add
add
mov
add
xchg
popf
jnp
sti
add
pop
add
add
out
loop
add
add
pop
mov
push
push
push
call
add
flds
add
jne
sarl
popa
add
mov
jmp
out
add
negl
add
add
mov
add
add
pushf
add
push
lcall
pushf
enter
add
mov
test
cld
lea
pop
xor
push
lea
push
push
lea
push
push
lea
push
call
mov
mov
add
enter
mov
imul
mov
mov
lock
add
fstps
cwtl
lret
jne
jmp
lcall
lods
xchg
add
les
mov
add
mov
nop
in
ja
xchg
mov
lea
pop
add
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
cli
add
add
fxch
out
push
data16
add
addr16
add
add
les
stos
les
out
push
push
mov
add
add
add
add
mov
lea
pop
push
push
push
push
push
call
add
add
add
xchg
leave
in
add
cwtl
mov
add
int
les
in
aam
mov
loope
mov
iret
fdivl
hlt
xchg
add
xchg
push
pop
jo
mov
add
les
inc
or
imul
add
add
test
add
pop
cmpsl
mov
add
iret
jp
add
add
fndisi(8087
add
add
pushf
mov
add
rolb
movsb
add
add
std
cld
add
jecxz
mov
hlt
lea
pop
sub
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
xchg
xchg
add
out
add
xchg
mov
jl
add
aad
test
cmpsb
add
add
insb
addb
xchg
lcall
mov
xchg
jne
add
data16
add
pop
push
fidivrl
add
mov
sahf
out
add
add
arpl
mov
mov
sub
push
push
push
push
push
push
push
call
xchg
movsl
add
push
pushf
add
xchg
add
shlb
ror
xchg
ja
add
add
lds
lret
add
iret
add
xchg
mov
add
loopne
add
in
hlt
add
mov
mov
push
add
test
add
mov
lea
pop
rep
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
add
outsl
jmp
jp
add
test
lahf
add
add
push
fldl
add
jbe
mov
add
add
les
shlb
add
jb
jp
loop
imul
lea
pop
mov
push
add
sub
sub
pop
add
add
push
xor
sub
pop
add
push
pop
mov
push
push
push
push
push
push
push
call
fldl
enter
add
test
cltd
add
imul
flds
imul
mov
loope
mov
push
add
add
jp
data16
pusha
pop
push
lret
mov
imul
test
jns
add
std
incb
add
rol
mov
push
sar
clc
add
lcall
les
add
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
out
addl
add
add
stos
cmpsl
add
add
stos
movsb
add
mov
add
add
add
mov
jns
cmc
add
popl
add
add
imul
mov
loop
add
mov
add
fcomps
addr16
add
push
lea
pop
mov
xor
push
add
not
add
pop
mov
xor
push
push
push
push
push
lea
push
push
call
scas
pushf
add
push
nop
pop
aam
add
nop
xchg
ret
mov
pop
mov
add
stc
fadds
nop
rolb
mov
mov
mov
add
add
push
pop
push
push
pop
add
hlt
add
add
notb
add
add
add
icebp
mov
out
xorl
cmpsl
aad
roll
push
mov
in
shl
add
mov
lea
pop
add
add
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
cmc
testl
add
add
enter
je
mov
out
add
jl
lods
lock
add
add
rcrb
xchg
add
add
stos
jecxz
add
mov
lea
pop
mov
push
push
rol
push
sub
add
inc
rol
inc
xor
sub
sub
dec
dec
pop
ror
pop
push
lea
push
push
call
xchg
fldl
add
xchg
add
add
ret
xchg
jno
push
add
lock
mov
add
into
bound
stos
cwtl
aam
pop
fildl
neg
lods
mul
jns
sti
add
add
clc
std
mov
add
jae
add
add
mov
movsb
loope
xchg
mov
popf
pushf
add
add
test
mov
add
mov
mov
les
jne
push
not
shr
pop
call
push
push
push
shl
push
or
not
add
sub
sub
pop
add
ror
inc
pop
push
push
push
lea
push
call
add
add
loope
xchg
add
jae
mov
loopne
add
popa
add
add
add
add
add
mov
add
xchg
mov
add
xchg
jnp
add
clc
push
test
imul
add
cmpsb
les
add
scas
jnp
add
pop
lea
jl
lods
mov
leave
enter
bound
pop
push
push
push
push
push
push
push
push
push
push
call
add
repnz
fs
pop
pop
pop
push
mov
mov
out
test
add
mov
add
add
stc
add
add
add
je
push
pop
add
add
add
add
testb
fmull
rclb
rorb
clc
push
push
lea
push
lea
push
push
push
push
push
push
call
add
movsl
add
add
sti
lods
add
mov
in
push
add
shrb
cltd
fistl
add
add
add
jns
add
test
repnz
add
in
mov
ret
xchg
cmpsb
out
repnz
pusha
jb
add
mov
scas
add
add
clc
pop
jno
add
mov
int
in
add
les
mov
push
lea
xor
pop
add
push
push
push
push
call
add
add
add
add
add
add
add
pop
popf
pop
mov
add
arpl
icebp
add
xorl
orb
add
mov
mov
lahf
popf
fxch
add
push
add
lea
add
add
mov
lea
pop
add
add
push
inc
pop
mov
push
push
push
call
fstl
popa
xchg
add
add
add
mov
pop
add
jp
aam
add
push
add
mov
lahf
out
add
add
out
les
pusha
roll
cmc
add
rcll
add
in
test
jae
fsubrp
jecxz
jbe
sti
stos
add
xchg
lea
pop
xor
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
mov
mov
flds
add
jbe
xchg
add
add
mov
lret
xchg
lds
add
push
shll
test
add
mov
mov
mov
jge
add
add
lods
mov
lea
pop
add
push
not
sub
sub
shr
pop
add
push
add
dec
lea
pop
push
mov
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
xchg
loope
aam
push
fadds
add
add
add
lcall
mov
xchg
pop
mov
mov
jb
loope
add
mov
stos
add
subl
fiadds
int
cmpsb
rorb
xor
push
push
push
lea
push
push
push
push
push
call
add
add
or
add
add
add
jge
add
lahf
add
add
mov
lret
add
xchg
lods
xchg
out
fcmovbe
js
lea
mov
movsl
jle
add
add
iret
fs
push
add
pop
popa
add
int3
lea
pop
add
push
add
add
pop
add
push
push
push
lea
push
push
lea
push
lea
push
call
fiaddl
mov
sahf
add
clc
roll
mov
add
testb
aam
shrb
add
add
cltd
add
fldl
add
fmull
push
push
call
test
push
into
pop
and
add
add
add
mov
add
loop
push
mov
mov
out
loope
pop
addb
lods
outsl
add
add
mov
or
dec
and
imul
sub
add
shl
lea
pop
mov
xor
push
lea
push
push
push
lea
push
push
push
push
call
fistl
sahf
lcall
add
addr16
stos
push
add
test
pop
mov
movsl
add
xchg
mov
add
pop
xchg
stc
enter
add
jmp
add
movsl
stc
int3
pop
jp
popa
add
testb
add
aam
mov
mov
add
jmp
xchg
les
add
add
mov
loope
add
ret
lea
pop
or
je
push
push
push
push
push
lea
push
push
push
push
push
call
add
les
add
cmpsb
in
lea
outsl
push
add
add
mov
pop
mov
std
xchg
add
popf
lret
mov
xchg
ljmp
fcoms
cmc
add
add
add
lcall
pushf
mov
lea
pop
mov
xor
push
lea
pop
mov
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
mov
je
mov
add
addl
repnz
lret
ret
xchg
add
sti
sub
add
mov
add
add
fcomi
jo
mov
shr
fs
add
mov
test
add
mov
xchg
mov
jo
into
add
add
add
clc
xchg
iret
add
pop
xor
push
lea
push
push
push
push
push
push
push
call
xchg
mov
push
xlat
lret
mov
hlt
add
add
add
out
pop
incb
lods
add
pop
hlt
mov
rcrl
test
fiaddl
add
add
push
mov
mov
cld
add
popf
add
add
add
add
stos
add
mov
out
add
and
les
add
push
add
shl
pop
add
push
add
lea
sub
ror
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
mov
add
pop
add
cmpsb
fildll
jle
jo
ja
jae
add
add
test
xchg
std
add
add
add
lods
movsb
rcrb
shll
fwait
add
stc
add
add
xchg
add
in
mov
xchg
clc
add
pusha
pop
roll
add
add
data16
push
dec
ror
sub
pop
mov
xor
push
push
push
push
push
push
push
call
mov
add
lods
mov
add
mov
roll
add
mov
xchg
add
jne
add
add
add
cli
mov
push
fwait
add
les
lock
lea
pop
pop
push
push
push
lea
push
call
arpl
and
add
push
add
std
clc
add
cli
push
call
add
hlt
jae
mov
add
ja
add
pusha
stos
loop
scas
in
add
add
jmp
add
cli
pop
icebp
js
add
mov
add
mov
mov
lea
pop
rep
push
push
push
push
push
push
push
call
clc
sahf
out
in
std
leave
add
add
fiadds
fsub
add
add
xor
loope
lea
fimuls
aad
mov
cld
add
xchg
pop
jae
add
mov
fldl
faddl
in
cmpsb
gs
mov
ret
add
jl
fcomps
add
jmp
faddl
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
popf
add
add
jp
pop
and
xchg
pop
add
add
roll
cld
idiv
nop
mov
mov
add
add
push
imul
add
add
in
add
cwtl
pusha
add
out
pop
shrl
int3
lea
pop
xor
push
lea
push
call
xchg
add
cwtl
ljmp
add
addb
fnstcw
add
addl
test
int
lea
pop
xchg
ja
add
stc
add
push
add
mov
add
shrb
add
add
pop
jne
sahf
xchg
ljmp
mov
xchg
push
add
pusha
add
rcr
stos
add
add
aad
add
fbstp
arpl
pop
add
push
lea
push
lea
push
push
lea
push
call
lahf
cmc
jmp
add
push
in
mov
lea
mov
sti
insb
xchg
stc
add
nop
push
lods
add
push
add
add
xchg
bound
mov
out
loopne
add
les
push
mov
mov
andl
mov
xchg
push
fwait
clc
fildl
fwait
pop
add
lahf
fists
push
mov
mov
fmull
leave
je
mov
push
push
lea
push
push
push
push
push
push
push
call
add
addr16
add
stos
neg
add
stos
add
add
push
test
add
add
add
add
into
mov
add
xchg
mov
jge
sti
xchg
add
add
pop
add
push
push
push
push
push
call
jnp
add
mov
scas
rcr
sarb
mov
mulb
out
pop
jecxz
add
add
add
clc
add
out
add
add
pop
flds
decb
adc
add
rep
push
rol
sub
lea
pop
pop
push
push
push
xor
add
lea
dec
add
lea
sub
pop
lea
sub
not
pop
push
push
push
push
push
push
push
push
lea
push
call
in
add
imul
add
lods
add
test
nop
add
add
add
add
jno
gs
imul
mul
pop
add
incb
xchg
mov
push
cltd
add
lock
std
jnp
cltd
rolb
int
add
idiv
rol
nop
add
fiadds
mov
int3
lea
pop
pop
mov
push
lea
pop
mov
push
add
ror
pop
mov
jmp
push
push
push
lea
push
push
lea
push
push
push
call
mov
lods
cwtl
jno
mov
push
add
add
mov
mov
mov
add
jo
mov
jo
mov
add
add
add
lret
add
leave
mov
lea
pop
push
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
js
cmpsl
add
into
add
shlb
xchg
mov
mov
out
cli
add
mov
add
mov
into
add
mov
lret
add
add
xchg
mov
mov
rol
int3
lea
pop
add
push
push
add
pop
push
push
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
mov
mov
add
add
pop
popl
cmc
add
add
cld
push
fsts
insb
add
add
mov
jl
add
add
out
jle
add
lcall
flds
lock
add
push
xchg
jge
in
pop
jb
add
add
add
test
movsb
add
negb
mov
lea
pop
push
push
push
push
push
push
call
pop
mov
mov
add
into
add
jecxz
add
mov
incb
lcall
jecxz
fiaddl
movsb
xchg
out
add
pop
adc
jno
pop
mov
push
ror
dec
add
pop
pop
push
pop
pop
push
dec
pop
pop
pop
push
ror
ror
lea
pop
leave
push
inc
rol
pop
ret
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
addl
shrl
push
add
lock
add
xchg
outsl
call
xchg
pop
add
add
cli
je
add
add
mov
mov
push
pop
call
add
mov
roll
add
add
popa
push
add
mov
lea
pop
mov
add
push
sub
add
shr
pop
push
push
push
sub
rol
pop
push
push
pop
push
push
push
push
push
call
rcl
add
pop
out
pop
add
mov
xchg
add
add
in
int3
mov
add
add
add
popf
in
fdivr
test
pop
mov
add
mov
add
pop
ret
mov
fnstcw
add
xchg
mov
ja
add
add
add
pop
movl
addl
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
add
mov
add
jns
aam
les
add
add
push
pop
mov
icebp
flds
sahf
mov
in
add
add
add
add
cli
rolb
jne
add
add
mov
push
xchg
push
add
mov
push
jno
mov
push
mov
add
pop
test
je
push
push
push
push
lea
push
push
push
call
xchg
lcall
mov
add
sti
push
add
add
mov
icebp
add
testb
arpl
cld
mov
aam
jo
jno
add
add
in
mull
mov
cwtl
jo
add
pop
xchg
std
pushf
add
mov
add
int3
lea
pop
mov
push
not
inc
shl
xor
pop
pop
pop
push
add
rol
pop
pop
push
shr
pop
pop
leave
push
push
push
push
push
lea
push
call
add
mov
leave
pop
add
mov
add
arpl
into
jo
add
pusha
mov
fsubrp
add
movsb
add
pop
mov
jp
clc
add
nop
add
add
mov
push
scas
add
add
pop
mov
int3
push
roll
mov
lea
pop
ret
push
push
shr
add
pop
mov
add
push
sub
pop
push
push
lea
push
lea
push
push
call
popf
jge
add
out
addl
mov
sarb
add
andl
add
vorpd
add
popa
add
add
testl
mov
std
fildl
xlat
in
rorl
add
insb
xchg
pop
push
push
push
add
inc
add
add
pop
push
push
not
inc
ror
dec
pop
testl
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
add
add
bound
mov
cmpsl
add
push
clc
ja
out
add
add
push
add
xchg
out
scas
add
add
scas
clc
jl
aam
mov
pop
jmp
add
call
add
add
add
movsl
add
add
pop
addl
push
lea
push
lea
push
lea
push
push
call
add
popa
mov
movl
nop
arpl
add
enter
pop
add
repnz
add
mov
add
into
mov
mov
popf
movsb
mov
fwait
add
pop
mov
lea
pop
push
push
lea
pop
call
mov
push
not
pop
pushl
push
inc
shr
pop
push
push
push
dec
dec
shr
pop
call
push
lea
push
push
call
mov
or
add
test
add
xchg
filds
add
mov
mov
popa
jae
mov
jge
add
icebp
rcrl
adc
mov
mov
add
jecxz
mov
add
xchg
add
jno
mov
add
jmp
pop
add
add
cli
add
add
add
popf
sti
rcrb
mov
lea
pop
cmpl
jne
push
inc
shl
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
call
imul
add
mov
add
sahf
add
cli
add
nop
sahf
into
les
jo
test
cld
push
mov
fisubl
jle
pusha
mov
lret
add
mov
addr16
add
adc
scas
add
xlat
push
mov
mul
shlb
test
hlt
mov
cld
lea
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
xchg
add
add
repnz
add
stc
andl
add
stos
gs
add
scas
pushf
mov
pop
iret
push
std
mov
pop
xorb
lea
pop
pop
push
rol
pop
leave
push
lea
push
lea
push
push
lea
push
call
lock
add
add
int
add
lock
nop
jecxz
aad
add
stos
cld
jp
xchg
iret
mov
mov
add
jge
lds
js
mov
mov
movsl
add
add
add
mov
lea
pop
ret
push
push
lea
push
lea
push
push
call
sbbb
into
je
insb
loopne
mov
fadds
add
add
int3
cltd
add
mov
push
mov
jno
add
nop
add
popa
add
jo
mov
rolb
add
add
add
push
pushf
out
add
add
add
push
add
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
fwait
jno
push
add
out
xlat
mov
jmp
in
xchg
std
add
lods
out
xchg
mov
mov
add
add
add
add
arpl
ficompl
jns
flds
mov
push
add
call
add
jecxz
sarl
xchg
sahf
fiaddl
cmpsl
mov
pushf
mov
outsl
sti
xchg
add
shrb
pop
mov
add
push
shl
dec
sub
add
pop
push
push
ror
dec
pop
push
push
push
add
pop
push
push
inc
add
not
ror
pop
movl
push
lea
add
xor
pop
push
push
dec
shl
rol
sub
pop
call
push
push
not
shr
add
add
pop
call
push
push
push
push
push
lea
push
push
push
push
push
call
lods
addb
add
add
lds
shr
mov
xchg
add
roll
andl
test
jnp
andl
mov
fadds
xchg
mov
rolb
lret
add
pop
test
mov
testb
nop
add
stos
pop
mov
add
add
imul
add
mov
lea
pop
subl
push
push
push
call
popf
add
add
add
loop
test
ret
in
int
mov
add
add
xchg
pop
int
add
mov
test
mov
std
lock
lods
mov
std
add
xchg
xchg
push
add
mov
add
scas
in
jb
mov
lea
pop
cmpl
jne
push
rol
inc
pop
pop
push
lea
inc
lea
pop
pop
pop
push
sub
rol
dec
pop
pop
leave
push
rol
pop
ret
push
push
push
push
push
push
push
push
call
push
add
add
call
mov
ljmp
add
imul
add
add
add
push
test
mov
add
add
mov
fsubp
add
pop
push
add
movl
mov
sahf
in
loopne
jnp
popa
xchg
jecxz
add
in
add
mov
push
add
aam
bound
pop
push
push
push
call
cmpsl
lods
add
xchg
pushf
loope
add
jmp
cwtl
out
lret
xchg
rcll
in
lods
add
loopne
add
add
rorl
fadds
loopne
add
mov
loopne
mov
ficompl
xlat
lea
or
in
push
push
lea
push
push
push
push
push
call
add
gs
mov
add
add
iret
mov
add
stc
add
add
add
pusha
popa
xchg
ja
sahf
jae
push
loope
gs
jae
add
pushf
mov
add
mov
lea
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
add
xchg
add
mov
mov
fidivrs
jo
lock
add
add
les
add
fnstenv
add
addl
les
add
xchg
cwtl
xchg
icebp
cli
add
fadds
scas
add
not
add
fmull
push
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
xchg
lahf
add
cld
test
popf
jae
mov
add
in
mov
add
add
lret
add
lods
jecxz
fwait
add
popf
out
xchg
jp
add
add
scas
add
add
add
cmpsb
jnp
mov
lea
pop
push
push
shl
sub
pop
push
mov
push
lea
push
push
push
push
lea
push
push
call
iret
add
call
mov
adcl
fiaddl
fs
add
mov
sar
mov
push
lds
loope
lods
cmpsb
pushf
cmpsl
out
ja
xchg
add
jne
shrb
add
add
add
add
pop
lea
sub
push
push
call
add
addr16
rcrb
xchg
mov
outsl
add
popa
jbe
mov
insb
xchg
xchg
add
add
scas
mov
fildll
mov
add
add
xchg
pop
fs
mov
add
add
add
imul
add
add
pop
mov
shr
push
push
lea
push
lea
push
push
push
push
push
call
cwtl
stc
lret
popf
add
ret
push
add
ja
push
les
out
cld
les
shl
mov
lds
jle
fcompl
scas
jb
push
rorl
pop
add
mov
push
push
call
add
add
add
int
test
fdecstp
add
push
add
jmp
in
lret
shlb
cwtl
xchg
in
mov
add
xchg
or
add
out
push
mov
lea
pop
mov
push
sub
lea
pop
add
push
shl
not
xor
pop
add
mov
push
push
push
push
call
pop
popa
jl
add
add
xchg
sahf
add
hlt
loope
xchg
ja
add
addb
sti
add
mov
imul
add
into
notl
pushf
repnz
cld
stos
add
ja
mov
scas
jecxz
out
pop
add
scas
mov
add
pushf
add
add
out
int
add
std
out
mov
lea
pop
mov
push
lea
push
push
lea
push
call
ficompl
fsubrl
add
sti
mov
xchg
into
in
ja
arpl
add
cmpsl
add
scas
mov
mov
testb
add
out
pop
xchg
add
push
test
add
orl
cmp
jne
push
push
push
lea
push
push
push
push
push
push
lea
push
call
fistl
into
movsb
outsl
and
add
add
out
bound
lret
push
add
lahf
push
popa
add
mov
testl
xchg
add
pop
insb
mov
outsl
push
in
rolb
fimull
fwait
jp
lock
in
add
testl
les
mov
cld
lea
pop
cmp
jne
push
shl
shl
pop
mov
movl
push
not
pop
jmp
push
add
sub
ror
pop
mov
mov
push
inc
inc
inc
pop
sub
jne
push
push
push
push
push
call
mov
cli
add
out
shrl
mov
jl
fldl
lock
mov
jmp
xchg
mov
imul
add
add
add
push
add
bound
fdivs
push
add
xchg
mov
add
add
mov
cmc
add
cld
cmc
out
pop
jne
mov
lea
pop
mov
push
add
pop
movl
jmp
push
add
inc
pop
mov
push
push
push
push
call
add
mov
mov
popa
leave
aad
add
add
fadds
xor
pusha
add
aam
add
add
add
add
add
pusha
add
add
imul
call
push
mov
iret
popa
jno
addb
add
add
jae
add
loope
xchg
imul
mov
push
add
pop
cmp
jne
push
push
push
push
push
lea
push
lea
push
call
mov
xchg
add
rolb
add
cli
pop
jns
add
jno
repnz
pop
mov
add
mov
add
add
movsb
int3
jo
add
add
lea
add
lods
imul
jo
add
scas
cmc
add
lahf
add
add
neg
add
pop
jl
add
fs
lret
add
in
les
inc
adc
shlb
shlb
add
pop
movl
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
add
hlt
mov
add
add
add
fldenv
fldl
fcmovnbe
cld
add
in
add
lahf
add
add
add
mov
fndisi(8087
fmulp
lahf
mov
mov
add
lods
cwtl
out
in
add
mov
and
cmc
jno
xchg
iret
add
xchg
add
lahf
test
add
pop
jmp
push
xor
lea
pop
mov
push
xor
xor
add
pop
cmpw
jne
mov
push
push
push
push
lea
push
push
push
call
add
add
push
mov
add
push
add
out
jne
add
add
add
nop
mov
lret
add
cmpsb
loop
sti
addb
push
push
leave
push
pop
xchg
add
add
add
les
jne
fistpll
add
add
or
cld
push
notb
imul
add
add
xor
add
push
dec
pop
pushl
push
shr
ror
shl
pop
pop
mov
push
sub
pop
mov
mov
push
push
not
push
push
pop
add
rol
add
dec
sub
shr
pop
not
lea
add
pop
push
push
push
push
call
mov
mov
mov
les
add
aam
mov
add
add
lea
jbe
out
mov
add
out
add
test
add
mov
les
push
sub
pop
call
push
not
xor
pop
cmpl
je
push
push
xor
shl
xor
add
push
push
pop
add
rol
sub
add
pop
rol
sub
xor
lea
pop
push
xor
rol
ror
pop
push
push
push
push
push
push
push
push
push
push
push
call
test
add
lock
add
add
add
add
add
add
jbe
pop
outsl
loope
jo
out
jp
iret
add
lock
add
fwait
pop
fcmovu
cmp
cmpsl
push
scas
pop
add
mov
add
lods
add
add
repnz
push
add
pusha
jecxz
mov
lea
pop
call
push
xor
inc
pop
cmpl
je
push
push
add
push
xor
add
sub
sub
sub
pop
add
pop
push
lea
push
push
push
push
push
call
add
pop
mov
jno
add
add
subb
addl
mov
movl
add
std
push
add
mov
add
add
add
shll
outsl
push
test
out
popl
fst
mov
mov
lea
pop
push
push
xor
sub
pop
call
cmpl
je
push
push
ror
not
inc
not
push
sub
add
lea
sub
ror
sub
dec
inc
pop
not
dec
pop
push
push
push
push
push
push
push
lea
push
push
call
add
out
subl
add
clc
scas
bnd
xchg
xlat
push
bound
add
out
add
add
add
hlt
add
add
mov
add
add
js
mov
lea
pop
push
push
ror
add
ror
add
pop
call
push
push
push
push
push
push
push
call
xchg
pushf
push
in
jp
mov
fisubs
rolb
mov
mov
std
add
cwtl
fadd
in
mov
scas
hlt
add
mov
iret
add
add
add
sarl
xchg
mov
lea
pop
cmpl
je
push
push
push
and
add
ror
shl
shr
sub
sub
shl
pop
add
shl
pop
push
shl
ror
shr
sub
pop
push
push
sub
ror
pop
call
push
shl
not
pop
cmpl
je
push
push
sub
inc
push
sub
add
dec
sub
sub
pop
rol
add
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
stos
xchg
pop
jecxz
mov
int3
xchg
pop
add
nop
popl
push
add
pop
test
js
lock
mov
add
negb
js
add
fisubl
icebp
mov
mov
incb
add
ret
roll
loopne
add
js
stos
gs
add
mov
jb
push
add
mov
add
mov
lea
pop
push
push
lea
push
push
push
call
lds
add
add
jo
jne
cld
add
add
aad
add
data16
push
movsl
loopne
add
cld
add
xchg
add
add
roll
rolb
je
add
add
push
aam
mov
add
mov
add
mov
add
add
add
mulb
lea
pop
call
push
lea
push
push
push
push
call
fildl
add
add
xchg
add
out
mov
mov
add
std
pop
addl
aad
in
popf
imul
push
push
jns
imulb
loopne
mov
cwtl
imul
add
add
enter
rcll
call
add
mov
add
nop
cld
outsl
jecxz
hlt
lea
pop
cmpl
je
push
push
shr
inc
push
push
pop
add
not
sub
inc
pop
sub
shl
pop
push
not
pop
push
call
push
pop
cmpl
je
push
push
inc
push
sub
add
dec
shl
sub
lea
add
dec
sub
pop
xor
add
pop
push
xor
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
shlb
add
in
mov
add
mov
cmc
add
xchg
jle
jecxz
xchg
add
mov
push
outsl
add
mov
jecxz
filds
add
lret
pushf
out
imul
mov
lret
add
pop
call
cmpl
je
push
push
sub
dec
push
xor
add
not
shr
ror
sub
add
shl
lea
pop
lea
pop
push
push
push
push
push
push
push
call
push
mov
mov
fldl
fisubl
data16
mov
addl
add
data16
jbe
add
out
testl
xchg
add
mov
enter
add
xlat
fsubrs
add
out
add
mov
int3
lea
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
out
shrl
add
add
roll
add
jo
in
add
addb
out
divl
add
push
add
pop
subb
add
add
add
add
cmc
arpl
xchg
push
hlt
add
xchg
add
add
test
mov
mov
sbb
call
push
push
push
push
push
push
call
add
iret
js
js
add
add
push
rorl
mov
add
add
rcr
add
add
call
mov
repnz
mov
lea
pop
cmpl
je
push
push
sub
add
push
or
inc
add
sub
sub
xor
pop
pop
push
lea
push
push
push
push
lea
push
push
push
call
imul
add
add
add
jae
cwtl
lea
pop
xchg
add
popa
addb
imul
rcrl
add
mov
mov
add
mov
lea
pop
push
push
sub
pop
call
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
push
pop
je
xchg
jbe
call
add
add
jl
sarb
in
add
fwait
add
in
int3
add
add
add
add
cwtl
cwtl
rcll
add
push
sahf
int
xchg
add
lahf
bound
add
add
and
cmpl
je
push
push
xor
not
push
or
inc
add
shr
sub
sub
dec
pop
sub
xor
pop
push
sub
shr
rol
pop
push
call
push
push
push
push
lea
push
push
push
lea
push
push
push
call
xchg
in
add
xchg
pop
cmpsb
add
add
add
add
add
mov
out
add
scas
mov
add
add
pop
mov
cld
lea
pop
cmpl
je
push
push
add
shr
add
push
sub
add
sub
not
not
add
pop
pop
push
sub
not
pop
push
push
push
lea
push
push
push
call
add
testb
in
xchg
aam
lock
jno
leave
mov
mov
in
xchg
hlt
add
add
jge
add
int
out
mov
jb
lret
outsl
add
mov
xchg
pop
mov
ljmp
add
lret
add
movsb
jo
mov
add
add
xchg
ljmp
push
add
mov
int3
lea
pop
call
push
push
call
add
add
aad
add
mov
fsin
adcb
jno
add
xchg
in
add
add
add
add
add
mov
fwait
add
mov
add
loop
mov
mov
lea
pop
cmpl
je
push
push
add
push
or
not
add
sub
inc
pop
shr
lea
pop
push
sub
add
pop
push
push
shl
not
pop
call
cmpl
jne
push
add
pop
mov
movl
push
push
call
add
mov
popa
add
jo
mov
add
add
add
std
add
add
add
addb
add
jmp
cwtl
mov
add
in
add
add
mov
mov
lea
pop
jmp
xor
push
xor
pop
pop
push
push
push
lea
push
call
jecxz
mov
add
rcl
stos
add
add
imul
add
test
add
mov
jne
int3
lea
pop
pop
push
inc
xor
pop
pop
push
push
push
push
call
add
add
movsb
fiaddl
flds
mov
movl
popa
add
jp
nop
lahf
add
add
add
std
pushf
pop
add
rolb
push
push
add
add
add
sahf
mov
lea
pop
pop
leave
push
xor
pop
ret
push
push
call
call
hlt
mov
into
add
test
jae
fiaddl
rcll
hlt
mov
addr16
add
push
add
push
add
scas
add
mov
out
add
mov
lea
pop
push
push
ror
pop
mov
push
push
push
lea
push
lea
push
push
call
jl
popa
aam
add
mov
call
icebp
add
pop
ficoml
xchg
pusha
out
int3
movsl
mov
pop
add
pop
cli
in
out
test
mov
lea
pop
add
push
lea
sub
xor
pop
cmpl
jne
push
push
ror
add
push
push
pop
add
sub
sub
sub
lea
shr
pop
lea
not
pop
push
push
push
lea
push
lea
push
push
push
push
call
add
repnz
sti
int
add
jae
jecxz
cli
movb
scas
lods
pop
mov
fiaddl
pop
movsl
mov
push
mov
add
xchg
movsl
fstpt
add
add
add
out
pop
add
popa
push
add
testl
into
add
add
pop
pushl
push
lea
ror
shr
pop
call
push
push
lea
push
push
push
push
push
push
push
push
push
call
sti
loopne
add
cli
push
add
mov
mov
push
out
imul
test
mov
add
loope
jns
add
fsubr
cmpsl
lock
jl
add
add
int
scas
fs
mov
mov
add
test
add
add
add
filds
testl
add
sub
dec
pop
jmp
push
not
add
pop
cmpl
je
cmpl
jne
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
add
add
movl
stc
testb
lods
flds
pop
jge
ror
xchg
rcrb
add
out
sti
push
jge
lret
add
add
mov
add
pop
ljmp
mov
addr16
rolb
mov
lea
pop
leave
push
inc
pop
add
push
inc
not
pop
pop
push
xor
shr
rol
pop
pop
push
ror
rol
pop
pop
push
push
push
lea
push
call
add
jp
mov
add
ret
loop
add
add
popf
pop
mov
mov
aam
add
add
lret
add
lods
scas
add
add
add
add
js
pop
cmpsl
pop
add
mov
fmull
push
push
push
push
push
push
call
add
add
mov
stos
add
add
test
cltd
add
jmp
cwtl
xlat
add
add
fcomps
fcmovnu
add
loope
fmull
push
lea
pop
add
push
lea
pop
ret
jmp
push
push
lea
push
push
call
pop
add
xchg
add
data16
cld
sti
pop
add
mov
add
fcoms
add
push
mov
jmp
cmc
test
add
int3
add
pop
jl
aam
bound
pop
cmpl
jne
push
push
add
push
or
not
add
shr
xor
add
ror
sub
rol
pop
pop
push
push
push
push
push
push
call
add
add
imul
je
add
pop
mov
push
add
add
mov
xor
cmpsl
add
push
pop
add
add
mov
add
add
lcall
icebp
jo
scas
mov
add
sti
idiv
data16
ja
loopne
add
scas
mov
mov
add
add
test
nop
add
aad
mov
mov
lea
pop
pushl
push
add
pop
call
push
push
dec
xor
pop
call
push
push
push
push
lea
push
push
push
call
jecxz
testb
jne
repnz
mov
push
add
cld
add
add
fmul
mov
add
lods
mov
cwtl
hlt
in
addr16
add
mov
lea
pop
jmp
push
dec
dec
pop
cmpl
jne
push
sub
dec
pop
mov
push
xor
pop
mov
push
push
push
push
call
add
jo
test
add
bound
add
lods
push
addl
add
cwtl
lds
xchg
add
mov
add
add
js
add
add
add
add
add
add
mov
pop
je
movsl
add
add
addb
nop
cmpsl
add
movsl
jecxz
ljmp
add
add
fcompl
movsb
pusha
mov
lea
pop
push
push
push
add
push
sub
add
sub
sub
pop
sub
shl
pop
push
lea
push
lea
push
push
push
push
call
mov
add
add
add
add
add
add
add
add
in
stos
add
add
add
add
mov
enter
add
add
sahf
add
rcr
add
mov
jb
add
add
pop
push
add
aam
add
incb
xchg
mov
lea
pop
pushl
push
rol
pop
call
push
lea
sub
pop
push
call
push
push
shl
push
or
not
add
sub
sub
inc
dec
pop
sub
shr
xor
pop
push
sub
rol
inc
pop
pushl
call
push
shr
pop
call
push
push
inc
rol
dec
push
or
not
add
add
lea
sub
dec
dec
inc
pop
xor
sub
pop
push
push
lea
push
push
push
push
call
cmc
xchg
xchg
add
mov
push
add
in
mov
divb
mov
add
jae
push
add
cli
mov
in
mov
add
mov
lea
pop
pushl
push
not
pop
call
call
push
sub
pop
lea
push
push
not
rol
push
push
pop
add
shl
sub
add
pop
shl
pop
push
push
lea
push
lea
push
call
mov
add
fucomi
add
add
pop
add
bound
fisttpl
mov
iret
mov
add
add
mov
add
add
ret
test
les
jne
push
push
call
jmp
add
add
cmc
add
jmp
add
into
sub
add
add
push
add
flds
icebp
ret
stos
add
in
add
aad
add
pop
pop
mov
popa
add
mov
lea
pop
call
push
push
push
push
push
push
push
push
push
lea
push
call
add
mov
in
add
shll
sahf
lret
add
jbe
add
bnd
fidivs
jp
add
arpl
add
ret
add
in
testb
mov
into
cmpsb
add
in
in
mov
push
mov
sahf
ret
mov
mov
add
mov
add
mov
lea
pop
call
push
push
add
push
xor
add
inc
lea
sub
add
not
pop
not
inc
xor
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
push
add
add
jnp
mov
jo
mov
cltd
mov
les
add
subb
add
add
insb
mov
xchg
add
add
add
pop
add
push
mov
add
xchg
add
enter
jne
cmpsb
test
add
cld
lea
pop
pushl
call
push
push
push
lea
push
push
push
lea
push
push
push
push
call
clc
add
addl
push
add
add
in
add
push
testb
mov
jp
add
int3
add
je
popl
nop
xchg
add
bound
xchg
mov
add
add
xchg
scas
out
mov
fwait
test
rolb
fcoms
mov
lea
pop
call
mov
push
push
not
sub
xor
push
or
inc
add
ror
not
shr
sub
inc
pop
shl
pop
push
dec
ror
pop
pushl
push
inc
sub
pop
call
push
push
push
push
lea
push
lea
push
push
push
call
add
out
mov
add
add
outsl
jle
add
bound
lea
mov
add
add
add
movsb
out
popa
imul
add
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
push
call
lcall
pop
out
add
mov
add
ret
jns
loope
add
add
mov
in
lods
rcll
jne
add
add
add
add
add
pop
rol
add
rolb
popl
ljmp
add
shl
out
mov
sti
stc
add
scas
add
add
js
add
pop
call
push
push
shr
push
sub
add
sub
sub
rol
sub
sub
pop
rol
pop
push
pop
pushl
push
push
push
push
push
push
lea
push
push
push
call
fadd
add
mov
fisubrl
add
out
add
pop
hlt
push
std
out
jmp
add
add
add
add
popf
pop
jne
add
arpl
cmpl
mov
out
add
jbe
jo
mov
lea
pop
call
push
push
push
push
lea
push
push
lea
push
lea
push
call
arpl
add
add
mov
add
add
xchg
in
add
test
add
mov
add
jle
add
in
add
add
mov
add
pop
pushl
call
push
push
sub
sub
push
or
inc
add
inc
ror
sub
shr
ror
pop
inc
inc
pop
push
lea
push
push
call
lock
add
mov
add
test
add
stc
add
ja
add
add
add
icebp
add
movsb
mov
add
add
cltd
add
pop
mov
jne
fiadds
add
add
js
test
stos
add
cld
add
add
add
testl
les
jne
push
lea
push
lea
push
push
push
push
push
call
add
leave
flds
popa
mov
popf
add
push
add
xchg
stos
mov
in
in
jno
lahf
cwtl
mov
add
pop
add
cli
test
hlt
mov
std
outsl
add
add
sbb
call
push
push
inc
add
lea
shl
push
and
add
inc
sub
sub
sub
add
sub
pop
inc
pop
push
push
add
push
push
pop
add
sub
add
sub
pop
not
xor
pop
push
shl
pop
call
push
push
lea
push
push
push
push
push
push
push
call
clc
shl
into
add
push
add
stos
xchg
sti
mull
cmpsb
add
add
bound
fdivrs
jb
lret
add
add
cmc
add
add
jo
sahf
add
add
jno
cld
add
into
add
add
add
int3
lea
pop
pop
dec
jne
push
dec
lea
shl
pop
call
push
not
pop
jmp
push
not
dec
pop
call
push
push
dec
add
push
or
not
add
inc
add
sub
add
shr
pop
shl
inc
not
pop
push
push
push
push
push
call
add
xchg
cltd
push
pop
rolb
insb
add
push
add
mov
jbe
fdiv
add
add
xchg
add
jp
testl
add
add
enter
add
add
mov
shlb
add
add
rolb
out
stc
add
pop
pushl
push
lea
push
lea
push
call
xchg
pop
add
add
add
pop
add
push
add
add
push
stos
add
frstor
add
je
add
pop
add
jb
mov
add
xchg
fwait
aad
ljmp
add
pop
call
push
push
push
call
mov
xchg
add
aad
fistps
test
pop
add
mov
cmpsb
lcall
add
add
mov
lds
call
mov
stc
loop
pop
add
faddl
repnz
add
iret
add
outsl
into
xchg
add
lea
pop
push
push
push
push
push
push
push
call
test
outsl
aad
add
add
insb
ret
mov
popf
arpl
mov
add
jl
add
into
lret
addl
fwait
cmc
mov
rolb
in
add
add
add
mov
lea
pop
call
mov
push
sub
shr
sub
pop
lea
push
push
shl
xor
push
push
pop
add
not
rol
rol
sub
ror
rol
pop
shl
pop
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
pop
jl
jl
imul
ret
jmp
into
add
pop
add
lea
add
addb
add
int
roll
mov
stos
jbe
add
add
outsl
jge
out
add
jbe
xchg
mov
js
aam
bound
pop
pushl
push
push
push
push
call
pop
jge
mov
add
add
add
mov
add
add
add
lea
jecxz
add
leave
arpl
addb
add
add
fiadds
push
mov
add
sahf
push
add
add
testl
lea
pop
call
push
push
push
call
fisttps
hlt
push
add
lods
add
sti
xchg
add
xchg
lods
arpl
cmc
fdivp
push
add
add
push
push
imul
pop
movsb
push
add
ja
ficomps
movsl
add
jle
mov
mov
jmp
add
add
mov
in
ret
add
add
popa
or
shrb
out
push
push
shl
sub
ror
not
push
or
inc
add
ror
ror
sub
add
shr
pop
lea
xor
inc
pop
push
dec
dec
pop
pushl
call
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
push
std
ret
pop
xchg
add
push
add
arpl
in
fsubl
add
add
cwtl
cmpl
cli
pop
mov
movsb
lods
fsubp
add
les
add
add
mov
add
pusha
fs
add
jmp
add
lea
pop
call
mov
push
shr
inc
sub
pop
lea
push
push
add
push
or
inc
add
sub
ror
pop
rol
rol
dec
pop
push
sub
pop
pushl
push
rol
not
pop
call
push
push
push
push
push
push
push
push
push
push
call
mul
js
gs
add
mov
lahf
cmpsl
add
add
imul
xchg
add
loopne
add
lea
add
jp
add
add
jns
les
add
push
sub
sub
sub
pop
push
push
ror
xor
dec
not
pop
push
push
inc
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
pushf
pop
jno
add
data16
loopne
add
fs
clc
mov
pop
xchg
ret
add
add
out
orl
imul
push
fsub
ret
add
mov
out
cwtl
add
out
scas
mov
add
sub
jne
push
push
not
sub
dec
push
or
not
add
sub
sub
sub
pop
pop
push
rol
pop
push
push
sub
pop
call
push
push
add
ror
push
or
inc
add
lea
inc
ror
inc
sub
shl
pop
dec
pop
push
shr
rol
pop
pushl
push
add
sub
pop
call
push
push
add
dec
pop
call
push
push
not
shr
xor
push
xor
add
lea
ror
sub
sub
sub
pop
add
not
ror
pop
push
ror
pop
pushl
push
lea
push
call
add
jae
add
insb
push
pop
add
xchg
add
add
aam
add
add
mov
mov
pop
fidivrs
add
mov
int3
lea
pop
call
push
push
lea
push
call
add
pop
imul
add
arpl
popf
add
add
mov
add
xchg
add
add
add
subb
mov
jns
mov
mov
lea
pop
call
push
add
rol
lea
pop
jmp
pushl
push
push
push
lea
push
push
push
call
add
jbe
add
add
fwait
add
lods
lret
jmp
out
mov
pop
add
shl
sti
pop
add
cmpsl
in
add
pushf
out
mov
loopne
sti
xchg
pop
mov
lea
pop
mov
jmp
push
push
inc
sub
add
push
or
inc
add
shr
ror
sub
shl
ror
pop
not
sub
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
add
add
movb
iret
add
mov
add
pushf
je
in
add
addr16
mov
scas
gs
cli
xchg
int3
add
imul
jae
add
mov
pusha
and
jne
call
push
add
add
pop
push
push
lea
push
lea
push
push
call
les
popf
fldl
mov
add
les
mov
fistpl
int
add
add
lret
iret
add
mov
xlat
test
add
into
add
bound
add
pop
fsts
into
add
rolb
mov
push
add
add
add
add
add
xchg
add
add
add
jno
leave
add
add
fidivl
add
call
hlt
lea
pop
call
push
push
lea
shl
push
or
not
add
add
shl
sub
rol
pop
sub
sub
xor
pop
push
lea
push
call
push
test
add
in
cwtl
pushf
ja
add
add
in
pop
mov
fwait
add
scas
add
jle
mov
add
mov
mov
sbb
add
faddl
add
gs
pop
test
add
add
add
leave
roll
push
call
pop
add
add
mov
mov
mov
lea
pop
pushl
push
lea
push
push
push
call
lcall
add
scas
add
scas
faddl
add
in
ret
add
fs
add
add
mov
jbe
pop
push
lea
pop
in
scas
cld
add
add
into
mov
in
loopne
add
add
mov
mov
pop
add
repnz
mov
mov
add
nop
mov
xchg
jmp
lea
pop
call
push
rol
ror
pop
push
push
push
push
lea
push
push
push
call
les
jmp
pop
mov
jne
pop
pop
pusha
add
mov
pop
mov
add
add
mov
add
add
jae
mov
cwtl
shll
add
add
mov
mov
add
xchg
add
imul
scas
std
add
arpl
pop
testl
xlat
push
add
mov
bound
pop
call
leave
push
inc
add
lea
pop
add
push
sub
pop
pop
push
push
push
push
push
push
push
lea
push
call
push
add
mov
add
fisttpll
jne
lods
add
jae
pop
scas
add
add
add
scas
mov
nop
push
xchg
xchg
add
ret
mov
pop
add
add
movsb
gs
add
add
lret
add
addb
movsl
add
jno
mov
xlat
shr
jo
add
xlat
xchg
add
pop
pop
push
push
push
lea
push
push
push
call
add
jo
sahf
nop
add
add
add
pop
int3
pop
fcoml
mov
fidivs
std
cltd
add
mov
insb
mov
push
mov
jb
shll
in
mov
testl
pop
mov
add
add
lea
mov
rolb
add
movsb
test
data16
cmpsl
clc
test
iret
add
fisttpll
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
push
add
in
xchg
int
add
lret
add
pop
add
adcb
add
sti
mov
js
mov
in
rcr
jae
enter
aam
flds
add
add
add
pop
pop
push
lea
push
push
lea
push
call
jnp
movsb
lret
hlt
mov
fwait
xlat
hlt
pop
xchg
pop
cmpsb
xchg
idivl
idivb
jmp
push
add
insb
loopne
jge
jno
fildl
insb
in
repnz
push
sahf
scas
lahf
cmpsb
xchg
jns
ljmp
add
faddl
add
xchg
js
mov
scas
pop
roll
out
lahf
test
mov
jno
jae
cwtl
mov
nop
out
movsb
jge
mov
lea
pop
leave
push
lea
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
add
lods
imul
add
add
lods
add
pop
ja
add
jae
add
scas
add
lret
add
clc
add
mov
out
jbe
aam
add
add
push
add
push
lret
add
cld
pop
add
add
add
pop
add
push
lea
push
lea
push
push
lea
push
push
push
push
call
popa
jns
add
add
lods
add
xchg
pop
iret
insb
mov
push
roll
clc
push
add
rolb
push
arpl
mov
add
jecxz
movsb
popf
shrb
data16
rolb
ja
pop
stos
add
in
add
int
jge
mov
mov
out
jmp
std
fsub
add
pop
push
pop
add
mov
add
les
push
push
push
push
call
fstl
stos
add
lahf
add
scas
imul
movsl
mov
add
jp
test
lcall
in
xlat
xchg
xchg
add
push
add
xchg
lods
mov
scas
outsl
lret
hlt
jo
into
jb
mov
int
mov
lea
pop
leave
push
push
push
push
push
push
call
mov
js
pop
notl
mov
lret
repnz
add
aam
add
jl
rcl
rolb
fs
in
add
roll
jae
cli
pop
mov
lea
pop
ret
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
xchg
add
jo
loop
add
mov
lds
mov
add
add
int
out
mov
add
add
sti
fstl
jo
add
pop
add
add
add
add
pop
push
push
lea
shr
pop
mov
cmpl
jne
push
lea
push
push
push
push
push
push
push
call
add
iret
shrl
std
fiadds
push
add
incb
sti
sbb
xchg
add
add
test
je
add
add
mov
lea
pop
mov
push
push
call
mov
mov
xchg
add
scas
and
add
add
cld
add
add
add
lea
jnp
add
loope
add
in
add
mov
outsl
add
pop
add
add
mov
lret
lods
test
xchg
add
mov
add
movsl
add
add
call
mov
lea
pop
jmp
mov
push
xor
pop
and
xor
push
push
push
push
call
xchg
add
add
add
into
imul
iret
lret
add
add
je
add
push
nop
out
add
add
insb
add
add
les
js
test
add
push
add
mov
movsl
mov
mov
jge
add
add
lea
pop
xor
push
push
push
push
lea
push
push
push
push
push
push
call
add
lahf
enter
push
ja
in
pop
icebp
add
add
out
mov
add
add
mov
cli
cmc
add
rolb
xchg
aam
loop
xchg
mov
add
std
jbe
add
sub
rolb
push
call
push
add
add
rcrb
in
mov
gs
add
push
jno
jp
push
fiadds
call
add
icebp
out
add
into
add
outsl
data16
add
pop
xor
push
lea
push
lea
push
lea
push
call
add
add
fstp
add
stos
add
jnp
iret
mov
add
lret
mov
mov
mov
test
popf
add
add
ljmp
add
pop
add
mov
lret
add
pusha
add
add
add
add
scas
pop
add
sahf
add
pop
dec
sub
push
sub
pop
jmp
sub
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
popa
add
flds
jnp
js
jl
add
scas
iret
add
int3
xlat
arpl
add
add
jne
add
add
add
add
ljmp
int
rclb
pusha
and
xor
and
fdiv
in
push
push
push
lea
push
push
lea
push
push
push
call
mov
mov
lods
les
addr16
test
int
cwtl
scas
mov
add
add
lods
add
add
lock
mov
add
mov
ficompl
jecxz
enter
mov
cld
lea
pop
pop
sub
push
push
push
push
push
lea
push
push
push
push
push
call
add
jge
int3
add
loopne
ffree
scas
xchg
xchg
mov
std
add
out
mov
mov
pushf
cld
add
stc
push
pushf
lds
push
pop
adcb
xchg
add
mov
imul
scas
shr
add
push
mov
add
add
je
popa
idivb
sub
cmp
jp
decl
dec
cmp
push
push
push
push
lea
push
lea
push
lea
push
push
call
in
add
enter
pop
aam
fs
jp
scas
jmp
loop
popa
add
jle
add
add
in
add
mov
repnz
push
push
add
mov
push
sarl
add
add
jnp
jl
cmc
add
xchg
loop
add
mov
movsl
rcr
add
sarl
add
pop
sub
mov
push
lea
push
call
xchg
add
enter
stos
mov
mov
roll
filds
addr16
add
cltd
loope
pushf
add
addb
jae
add
add
fadd
cmpsl
add
pop
outsl
testl
data16
lcall
jp
lods
jl
add
add
add
movb
mov
lea
pop
shr
push
push
push
push
push
push
push
lea
push
push
push
call
add
mov
cld
out
xchg
bound
mov
add
popa
push
add
fcmovbe
imul
add
add
rcr
lods
lods
mov
clc
int
add
add
cmpsb
push
pop
add
fistps
add
add
icebp
mov
jecxz
add
data16
mov
loop
mov
add
lea
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
adc
add
stc
jmp
pop
bound
out
jb
jl
in
add
neg
add
xchg
mov
aad
xchg
cmpsb
mov
add
cmc
jnp
bound
std
out
jecxz
fst
push
add
xchg
add
xchg
imul
jbe
add
mov
add
sti
add
add
pop
jne
add
pop
sub
pushl
push
lea
push
lea
push
lea
push
push
call
gs
add
mov
sahf
loope
add
aam
mov
mov
mov
mov
xchg
add
add
imul
test
add
add
aam
add
xchg
mov
add
add
pop
pop
push
lea
push
push
push
call
add
add
add
popf
data16
jnp
add
pop
sbb
xchg
add
test
add
bound
add
je
add
mov
jecxz
popa
mov
aam
bound
pop
shr
and
push
sub
shr
rol
pop
sub
cmp
jne
push
inc
pop
leave
push
push
push
lea
push
push
push
call
add
add
add
push
mov
pop
cmc
add
add
add
add
scas
mov
fldt
addb
fwait
add
std
add
fcmovbe
add
pushf
xchg
pop
movl
lea
mov
add
les
add
add
roll
stc
add
mov
add
ficoml
mov
lea
pop
ret
push
push
push
push
push
lea
push
push
push
call
mov
pop
popf
addr16
mov
cli
in
add
fucom
add
pop
jecxz
add
add
push
mov
fadds
mov
jmp
push
je
leave
add
jp
xchg
cmc
aad
mov
add
push
mov
add
jecxz
add
add
mov
lea
pop
push
push
push
push
push
push
push
push
call
add
pop
add
add
jecxz
jecxz
arpl
aam
push
rolb
push
add
clc
pop
add
add
pusha
push
imul
popf
add
mov
add
out
test
mov
pop
stos
clc
add
lock
popf
mov
out
add
jge
add
add
pop
jle
add
add
enter
add
mov
lea
pop
mov
push
sub
pop
add
push
lea
inc
ror
pop
push
push
push
push
push
push
push
push
call
mov
stos
loopne
push
xchg
lret
add
sti
mov
sti
push
icebp
fldl
mov
pop
in
add
add
insb
imul
add
lods
bound
scas
in
fwait
add
add
mov
mov
cmpsl
mov
add
fstps
les
mov
mov
add
aam
mov
stc
lods
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
mov
add
add
add
add
add
jae
movsb
xchg
movsb
add
add
jmp
out
rcr
imul
add
jmp
add
movsl
push
hlt
lea
pop
push
push
push
xor
rol
dec
not
pop
mov
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
movb
pop
mov
cmpsb
mov
add
add
add
mov
in
imul
add
loop
push
jmp
add
stos
add
push
add
cmc
add
add
pop
mov
add
loop
add
testl
add
pop
add
mov
xchg
add
add
add
cltd
mov
lea
pop
lea
push
lea
push
push
push
push
push
lea
push
push
push
push
call
jecxz
popa
faddl
lds
addr16
faddl
pop
ret
add
lock
sarb
add
les
add
mov
add
xchg
add
shll
add
movsl
popf
test
add
add
mov
add
pop
sub
push
inc
pop
mov
push
push
push
call
sarl
xlat
jbe
jp
mov
jmp
lret
push
pop
jbe
push
addl
add
add
std
add
negb
add
add
add
movsb
ljmp
mov
aam
add
mov
mov
lea
pop
shr
push
shr
shr
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
call
fcmove
mov
add
loopne
add
stos
jmp
stos
jp
jnp
push
add
in
pop
arpl
add
popa
shr
jnp
fs
fwait
add
sbbb
xchg
add
in
enter
push
lock
hlt
lea
pop
mov
push
add
not
pop
add
push
add
sub
inc
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
into
clc
add
add
into
add
mov
cmpsb
xchg
xchg
add
rorb
cmc
push
mov
mov
loope
test
lea
pop
add
xor
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
push
flds
add
add
outsl
add
add
add
add
add
mov
add
push
xchg
fsubrs
xchg
leave
popa
mov
mov
lea
pop
mov
push
push
push
push
lea
push
push
call
add
add
add
add
fiadds
add
repnz
nop
add
filds
add
xchg
jmp
add
add
stos
add
add
add
push
add
jl
jl
add
add
add
mov
leave
mov
lea
pop
and
push
lea
push
push
lea
push
push
call
roll
fiaddl
mov
add
roll
add
add
add
mov
add
add
flds
pop
xchg
push
add
add
add
pushf
fsubl
cmpsb
vpaddb
jbe
add
cmc
mov
jns
mov
xchg
mov
lea
pop
rol
push
pop
rol
xor
push
push
push
push
lea
push
lea
push
push
push
push
push
call
in
add
add
enter
add
loopne
addb
ljmp
addr16
in
lods
push
add
mov
lods
repnz
xchg
add
mov
cld
stc
jae
arpl
add
mov
add
add
data16
cmpb
jne
push
add
not
lea
xor
pop
add
cmp
je
push
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
jge
loop
add
add
out
add
add
mov
mov
add
add
push
mov
mov
clc
add
flds
add
add
iret
add
cltd
aam
add
pop
mov
add
outsl
addl
mov
add
fbstp
mov
lea
pop
add
push
lea
push
push
lea
push
lea
push
call
test
loopne
shr
loope
add
flds
add
lcall
add
add
add
add
fnstcw
mov
in
add
add
mov
lea
pop
cmpl
jne
xor
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
mov
push
add
mov
pop
mov
rolb
mov
pop
jge
add
testl
into
faddl
mov
xchg
add
stc
add
add
cmpb
jae
add
cli
jb
xchg
in
call
and
pop
push
push
push
lea
push
push
push
push
push
push
call
xchg
cld
add
mov
scas
jnp
mov
lcall
add
clc
in
add
add
add
jle
out
add
ljmp
rolb
add
jo
enter
add
call
fsubs
aam
bound
pop
push
sub
xor
pop
pop
push
push
lea
push
push
push
push
call
jl
aad
mov
sahf
lock
add
iret
clc
in
pop
scas
imulb
imul
testb
int
pop
shl
add
add
add
add
loopne
add
lcall
mov
add
int
fadds
mov
fcoml
loopne
add
cli
add
xlat
stos
add
add
pop
in
push
mov
lea
pop
pop
leave
push
lea
pop
ret
mov
push
push
push
push
push
push
push
push
call
xchg
lods
jecxz
mov
push
mov
add
mov
push
mov
add
push
in
nop
jae
add
lea
mull
add
mov
outsl
sub
test
mov
add
add
mov
lea
pop
add
push
push
dec
rol
sub
pop
push
push
lea
pop
add
push
rol
sub
ror
pop
xor
push
dec
dec
rol
pop
add
push
add
pop
add
pop
push
push
call
add
movsl
cwtl
add
add
add
add
add
add
add
andl
scas
in
je
add
aam
add
addl
pop
mov
cmpsb
jae
in
add
mov
add
jb
jne
aam
add
nop
push
add
add
mov
nop
mulb
add
add
push
in
push
mov
lea
pop
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
mov
add
mov
mov
test
add
add
stos
push
mov
add
xchg
mov
mov
add
leave
add
lcall
add
jns
aad
roll
add
fs
out
arpl
sub
add
lods
sahf
xchg
add
pop
mov
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
xchg
add
add
out
xchg
add
add
jne
pushf
ret
roll
filds
mov
add
lcall
mov
xchg
add
jle
lea
add
popa
add
in
add
scas
add
and
push
not
rol
not
pop
call
push
shr
ror
pop
xor
pop
push
push
push
push
push
push
call
movsb
aam
cmc
jmp
add
add
add
mov
lahf
aad
push
pusha
cmpsb
add
jbe
mov
jae
insb
add
add
add
testb
add
loope
lret
add
sahf
add
pop
add
cmpsl
add
add
fldl
add
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
push
add
push
sti
add
add
popa
pop
mov
add
ret
mov
loop
add
pushf
loope
add
scas
call
add
movsl
repnz
push
add
cmpsl
add
mov
push
stos
in
add
out
out
push
mov
add
mov
mov
add
mov
add
add
or
int3
lea
pop
pop
push
lea
lea
pop
pop
pop
push
lea
push
push
call
js
add
fwait
xchg
add
add
add
mov
call
cwtl
xlat
jo
mul
xlat
add
int
add
add
add
add
fldl
add
clc
fwait
add
mov
add
add
cwtl
add
add
aad
push
int3
add
add
icebp
mov
add
mov
les
push
add
add
shr
pop
ret
push
push
push
lea
push
call
cld
pop
into
addb
jmp
std
xchg
cli
ljmp
add
cmpsb
mov
mov
xchg
xchg
add
add
mov
mov
add
les
add
fs
cltd
fsubrl
add
add
cltd
add
test
add
lcall
jnp
les
xchg
mov
mov
lea
pop
push
push
push
call
imul
add
add
repnz
push
mul
loop
arpl
out
add
test
mov
add
add
call
imul
jge
imul
mov
add
leave
enter
loopne
add
mov
mov
fdivrs
movsl
imul
fwait
add
testl
add
xchg
or
in
push
add
rol
xor
shl
pop
add
push
push
ror
dec
lea
pop
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
mov
rolb
cmpsl
add
out
add
cld
add
in
lea
scas
in
repnz
xchg
add
add
jmp
sti
add
in
add
add
rcrl
add
xchg
add
sub
push
pop
push
mov
push
push
push
lea
push
push
push
lea
push
push
push
push
call
filds
xchg
int
fdivrl
mov
add
pusha
scas
add
xchg
mov
jno
pop
iret
stc
cmpsb
jo
nop
add
add
add
data16
ja
testl
add
add
cld
add
xchg
add
jmp
push
test
je
add
mov
add
add
pop
push
push
push
push
lea
push
push
lea
push
call
add
mov
add
add
js
je
add
add
add
bound
mov
out
add
add
add
push
add
mov
add
scas
add
add
add
popf
fs
insb
add
gs
jmp
add
add
pop
pop
push
push
push
lea
push
push
call
insb
stc
jmp
sahf
add
mov
add
aad
insb
add
add
add
jl
mov
int
in
outsl
cltd
cwtl
xorl
mov
in
add
stc
lods
add
add
popa
xchg
pop
add
les
out
push
add
push
mov
lea
pop
lea
sub
push
push
push
push
push
push
push
push
call
rol
add
push
adcb
scas
mov
mov
xchg
fadd
ja
add
push
mov
add
mov
mov
add
pop
sar
mov
lea
pop
mov
push
lea
push
push
lea
push
push
push
push
push
call
pop
fidivl
add
mov
add
imul
fldcw
mov
xchg
int
add
add
out
add
jb
stos
add
ffree
subb
add
add
out
lahf
lret
mov
imul
popa
and
ljmp
ret
divw
xchg
add
pop
add
mov
push
pop
add
pushl
push
push
push
push
call
pop
add
mov
add
add
add
pop
hlt
jmp
add
mov
mov
in
add
add
nop
jae
ret
add
pop
add
jge
add
fstpt
pusha
add
lods
mov
cltd
add
lds
pop
popl
push
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
call
jge
pop
sti
mov
shl
aam
add
call
add
add
add
arpl
add
enter
add
lcall
movb
add
mov
push
fsubp
add
add
cmc
mov
loopne
add
add
jge
nop
add
lods
fldl2t
jne
insb
cmpsl
mov
movsb
fiaddl
mov
lea
pop
add
xor
push
lea
pop
lea
push
dec
pop
mov
push
rol
rol
add
pop
add
push
xor
shr
pop
xor
push
ror
shl
pop
rol
nop
push
push
call
add
jmp
mov
add
add
add
pop
std
add
fcoml
fstps
add
shl
in
idiv
lcall
jne
int
add
faddl
cmc
popf
xchg
mov
pusha
or
push
xor
pop
xor
nop
push
sub
lea
shl
dec
pop
nop
push
xor
sub
ror
pop
inc
push
push
push
push
push
push
push
push
call
loop
jecxz
xchg
jbe
add
loope
add
pushf
mov
outsl
jl
fnstsw
add
mov
add
add
add
add
add
les
pop
add
add
ret
add
add
stc
les
fimull
insb
mov
lea
pop
nop
push
inc
pop
nop
push
shl
pop
cmpb
jne
push
push
lea
push
lea
push
push
lea
push
push
call
add
mov
rorb
arpl
out
ljmp
add
pop
loope
jmp
vpcmpgtb
test
fwait
rclb
add
push
stos
mov
add
jl
les
inc
pop
ss
nop
push
push
lea
push
push
lea
push
push
push
lea
push
call
std
mov
lds
add
xchg
stos
add
fwait
add
mov
ja
imul
leave
xlat
add
add
rorl
jnp
into
add
add
lea
add
nop
mov
lea
pop
nop
push
shl
shr
pop
cmp
je
push
push
push
push
push
push
push
call
add
add
fsts
je
add
lret
enter
add
mov
movsl
add
mov
add
hlt
add
addl
jmp
add
add
push
mov
add
add
mov
in
test
pop
addl
mov
fwait
add
add
add
rcrb
lret
mov
lea
pop
nop
push
rol
pop
nop
inc
push
push
push
lea
push
push
push
push
push
push
lea
push
call
addl
jp
ljmp
add
flds
xchg
lahf
out
rcr
add
add
add
add
rcrb
jge
test
mov
ficomps
push
add
cltd
push
add
add
movb
jecxz
addr16
add
add
in
out
jl
leave
mov
int3
in
cwtl
cwtl
stos
mov
mov
lea
pop
nop
nop
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
jmp
jp
imul
arpl
add
test
lret
mov
jb
js
mov
jbe
add
rolb
add
rcr
mov
push
add
mov
add
loop
push
add
lahf
repnz
add
popa
pop
fiaddl
xchg
add
add
xchg
imul
sub
jne
jb
push
sub
pop
xor
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
xchg
push
leave
xchg
add
add
scas
add
fwait
out
insb
not
add
add
in
bound
fs
in
add
mov
ffree
aad
out
lret
add
add
pusha
rcl
mov
xlat
mov
push
bound
test
add
push
imul
mov
out
pop
add
ficoms
add
add
add
cmc
add
mov
lea
pop
jmp
mov
push
lea
push
push
lea
push
lea
push
push
push
call
mov
push
push
lret
add
xchg
addb
add
ljmp
push
cmpsb
mov
clc
add
movb
stos
call
add
ja
push
popa
add
pop
add
push
shl
sub
add
pop
movzwl
mov
push
lea
pop
add
push
push
push
call
mov
mov
out
mov
mov
add
mov
call
pop
add
pop
loope
push
mov
lret
in
xchg
xchg
in
test
push
mov
add
add
jge
sti
addr16
mov
lea
pop
mov
push
rol
pop
xor
push
lea
pop
xor
push
ror
inc
sub
pop
shl
push
ror
pop
xor
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
lea
add
fstps
xchg
arpl
add
add
jne
add
add
into
add
mov
filds
mov
add
add
add
xchg
mov
add
add
add
add
cmc
mov
add
lcall
cmc
imul
js
add
out
popf
add
mov
lea
pop
shl
push
push
lea
push
lea
push
lea
push
push
call
jo
add
fisttpl
add
xchg
mov
jnp
testb
mov
jmp
add
mov
pushf
add
push
add
shrl
test
into
xchg
icebp
push
mov
add
add
add
add
fstl
movsl
add
lcall
sbb
dec
nop
add
loope
push
push
push
push
push
push
push
lea
push
push
lea
push
call
pop
xchg
add
imul
je
add
add
add
out
add
add
test
mov
std
hlt
add
test
xchg
js
add
add
mov
stos
aad
mov
mov
jnp
jp
add
cli
mov
add
mov
lea
pop
xor
mov
push
shr
rol
pop
add
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
fiaddl
add
add
iret
add
add
jge
add
add
lret
mov
call
pusha
xchg
fsubs
fmull
push
push
lea
push
call
add
lods
add
add
movsb
xchg
fadds
fistps
add
add
add
pop
jle
mov
rolb
add
push
add
add
add
xchg
ret
icebp
idivb
aam
bound
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
fwait
data16
mov
add
movsl
jp
mov
rolb
pushf
jecxz
int
rolb
mov
add
lcall
add
cmpsl
add
add
add
imul
pop
add
add
add
lds
mov
and
pop
leave
push
shl
not
sub
pop
ret
push
push
push
push
push
push
push
call
mov
mov
in
mov
ror
add
lret
les
add
add
add
add
add
out
addl
add
push
in
lods
add
add
add
mov
lods
add
in
add
pop
mov
push
sub
pop
push
push
rol
shr
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
mov
add
out
mov
outsl
icebp
pop
mov
xchg
add
add
popf
add
push
add
popa
int
addb
std
add
add
jnp
add
mov
call
add
arpl
mov
lea
pop
push
push
push
push
push
call
add
imul
lods
outsl
andl
add
pop
add
push
gs
add
loope
jne
lcall
mov
rcr
mov
arpl
pop
mov
mov
push
add
shl
shr
pop
mov
test
je
push
shl
dec
sub
pop
mov
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
xchg
add
lahf
in
pop
jae
mov
jbe
test
add
add
add
add
lahf
add
clc
into
add
add
add
mov
xchg
pop
add
test
add
fisttpl
pop
test
je
mov
push
sub
sub
lea
pop
mov
push
xor
sub
inc
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
add
movsb
std
lret
push
jbe
out
add
nop
std
lods
add
pop
add
enter
add
jno
sarl
nop
leave
add
jbe
aad
in
pop
add
popa
ficoms
add
add
out
add
frndint
add
add
add
add
outsl
mov
flds
mov
add
mov
lea
pop
inc
push
push
call
add
stos
add
add
add
int
add
loope
add
lds
mov
jle
add
hlt
mov
push
xchg
add
rclb
orl
or
rorb
test
add
add
add
push
lea
pop
mov
inc
push
push
lea
push
call
jp
pusha
mov
add
add
jb
add
scas
movsl
test
add
add
stos
add
pop
sbbb
add
mov
add
fbstp
scas
add
fcmove
add
shlb
cmpsb
into
add
in
mov
add
leave
loope
mov
lea
pop
cmp
je
test
jne
push
lea
push
call
mov
add
mov
add
push
mov
in
movsl
add
mov
mov
faddl
add
add
insb
in
addb
xchg
popa
in
xchg
cmpsl
filds
push
ljmp
gs
add
add
add
lahf
mov
pop
xor
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
mov
sti
jecxz
add
push
pusha
fistpll
lret
push
push
lds
idivb
add
out
pusha
add
mov
add
mov
lea
pop
pop
push
lea
push
push
push
lea
push
push
push
call
arpl
add
add
movsl
add
add
out
popa
add
out
imul
into
iret
add
hlt
out
aad
add
faddl
pusha
add
aam
add
jbe
pop
add
jle
xchg
add
ret
xchg
movsb
pushf
add
push
add
movb
add
add
add
xchg
sbb
pop
push
push
call
add
add
add
pushf
lds
add
popa
add
push
add
xchg
push
add
pop
xchg
jbe
add
add
add
testb
mov
jecxz
add
mov
js
xchg
sti
test
pop
xchg
stc
jo
lods
add
lret
in
enter
xchg
xchg
into
push
ret
imul
shrb
pop
mov
lea
pop
pop
pop
push
ror
pop
leave
ret
push
push
lea
push
push
push
push
call
mul
jle
add
out
add
loope
pop
in
add
out
pusha
add
sarb
add
stc
add
add
add
add
aam
add
fistpll
faddl
scas
mov
lea
loop
out
add
mov
out
add
mov
add
test
roll
push
cli
mov
lea
pop
mov
push
shl
inc
pop
inc
push
lea
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
fldt
cmpsb
pusha
movb
rolb
in
cli
stos
mov
ljmp
jge
xchg
push
pop
add
xchg
add
push
xchg
add
add
enter
lock
add
bound
add
shlb
add
xchg
xchg
xchg
add
add
lods
add
add
sbbb
add
xchg
add
mov
mov
lea
pop
cmp
jne
push
lea
push
push
lea
push
push
push
push
lea
push
call
popl
add
add
ret
add
mov
hlt
add
lea
les
leave
test
jl
add
out
add
xchg
pop
mov
xchg
add
add
add
stos
add
repnz
fwait
add
add
pusha
mov
hlt
lea
pop
lea
push
push
call
aam
add
test
lea
xlat
scas
loopne
jl
test
mov
add
movsl
aad
loopne
add
jecxz
mov
imul
add
pop
data16
add
xchg
leave
add
roll
iret
mov
lea
pop
mov
push
xor
dec
not
not
pop
test
je
push
push
call
mov
add
testl
push
add
cwtl
add
test
add
loopne
add
clc
fs
add
add
loopne
add
frstor
add
into
add
mov
les
faddl
ljmp
mov
scas
add
in
fiadds
in
in
add
add
out
loopne
mov
lea
pop
mov
push
shl
pop
add
cmp
jne
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
add
ja
add
mov
mov
pusha
fcmovnb
add
add
pop
aam
int3
push
mov
mov
ret
add
cltd
mov
ret
test
movsb
fwait
push
pushf
jbe
add
push
add
pop
mov
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
add
mov
lahf
cmpsl
movsl
add
sti
add
add
mov
jns
out
add
add
push
add
add
scas
ljmp
iret
test
fs
clc
mov
add
popf
cmpsb
imul
mov
add
add
adcb
mov
pop
lret
stos
mov
lea
pop
test
je
push
add
shl
add
pop
mov
push
shr
ror
pop
add
push
lea
push
push
push
call
movsl
shll
shll
out
stos
mov
iret
mov
mov
int
out
jae
pop
jbe
cmc
rcr
add
mov
add
jmp
pusha
loopne
call
mov
lea
pop
cmp
je
push
shl
pop
jmp
push
inc
shl
pop
xor
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
mov
xchg
jbe
hlt
add
add
add
add
add
push
mov
add
testl
out
jbe
cmpl
mov
cltd
rolb
fadds
add
add
add
mov
testb
add
int
bound
add
mov
lds
pop
add
pop
pop
pop
push
xor
sub
not
pop
pop
pop
push
add
sub
shr
pop
leave
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
in
cmc
mov
movsb
mov
popa
mov
mov
add
aad
add
leave
aam
cmc
in
add
add
add
aam
lcall
add
cld
mov
aad
mov
push
add
add
add
xchg
arpl
add
mov
fisttpll
add
add
pop
ret
push
push
lea
push
lea
push
lea
push
push
call
add
sti
shl
mov
je
loop
mov
jge
pop
add
add
shlb
fs
add
pop
add
push
enter
repnz
add
fnsave
add
mov
jb
add
pop
mov
pop
stos
push
mov
jne
aam
jo
jle
out
jo
mov
lea
pop
lea
push
push
push
lea
push
push
push
call
lret
cmpsb
movl
add
add
mov
xchg
add
add
mov
mov
add
std
add
fdivr
jp
add
add
lds
add
sbb
pop
push
xor
rol
pop
pop
push
sub
shl
pop
pop
push
push
push
call
add
mov
aam
fucomi
ja
out
add
add
clc
add
pop
ljmp
add
add
add
cmc
test
xchg
add
mov
arpl
leave
push
sub
rol
add
ror
pop
ret
push
lea
push
push
push
push
push
push
push
push
push
call
stos
int3
addl
push
add
add
lea
push
add
pushf
mov
push
lahf
bound
repnz
add
cli
add
call
add
add
pop
mov
pop
push
push
lea
push
push
push
call
add
into
add
mov
lret
xchg
sahf
addl
mov
add
enter
arpl
imul
add
push
imul
add
add
mov
add
mov
add
movl
xchg
add
aam
add
lea
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
add
mov
cli
cmc
add
roll
int3
lret
fldl
add
add
add
ljmp
add
xchg
jecxz
push
cwtl
movsl
pop
fstp
fsubs
add
into
mov
lea
pop
pop
pop
push
push
push
push
lea
push
push
push
call
hlt
cmpsb
mov
add
mov
insb
add
je
add
push
fucom
movsb
movsl
pop
add
pushf
push
rorb
xchg
stos
add
mov
test
add
fnsave
insb
fwait
mov
fstpl
push
push
stc
subl
jno
clc
add
add
out
je
add
popa
outsl
mov
lea
pop
leave
push
push
push
push
push
push
call
incb
mov
aad
mov
add
bound
movl
out
add
mov
jns
add
jnp
fstpt
push
ljmp
jecxz
aad
repnz
xchg
add
add
xchg
mov
sti
add
mov
add
mov
lea
pop
ret
xchg
shll
icebp
je
dec
add
xorl
loope
je
repz
je
pop
movsl
je
xchg
enter
xor
jne
sub
xchg
inc
sub
rclb
inc
nop
or
mov
or
add
pop
xor
jae
mov
call
bound
not
pop
push
xchg
push
test
lret
mov
std
sbb
add
or
mov
orl
xchg
xor
jmp
rcrb
fs
xlat
imul
sahf
inc
in
mov
data16
stos
add
fnstcw
mov
cs
adc
sub
and
mov
mov
xor
or
mov
or
stc
in
sub
cmp
fidivrs
das
dec
mov
pop
loopne
out
into
mov
adc
xchg
loop
add
loopne
rorb
fistl
jo
dec
cltd
leave
shr
jns
call
mov
and
inc
jo
mov
cwtl
pop
adc
or
inc
aad
mov
jne
or
or
shlb
enter
and
xchg
das
stos
push
mov
xchg
lods
add
movsb
jl
and
mov
cmpsl
xor
and
leave
lcall
jecxz
mov
scas
cwtl
sbb
lcall
adc
orb
pop
mov
movsl
gs
pop
ficoml
cmpsl
dec
adc
cld
cmpb
rorl
and
push
loopne
mov
fcmovu
pop
push
fistpl
cmp
push
xor
inc
mov
test
sbb
iret
push
loop
cld
rorb
jl
dec
aas
lret
flds
jge
repnz
fdivrl
cmp
int3
fldcw
pushf
lcall
pop
das
xor
add
and
mov
inc
push
push
mov
pop
xchg
xchg
movsb
jecxz
and
nop
xor
dec
ja
data16
add
dec
jno
dec
nopl
fadds
into
loope
cmp
fsubs
rol
in
push
mov
int3
mov
or
data16
aas
adc
inc
cltd
mov
xchg
int3
dec
in
in
sarl
add
outsb
clc
leave
ret
xor
mov
jns
dec
fucomip
icebp
gs
fcoml
loope
cwtl
mov
cwtl
push
jno
pusha
xor
mov
push
pop
ljmp
subb
out
jbe
lret
push
pop
shlb
mov
xchg
push
inc
dec
add
mov
mov
stc
loop
addr16
or
loopne
sbb
mov
and
into
add
xchg
inc
out
scas
and
pop
dec
movsl
jb
dec
mov
stos
sbb
fs
inc
mov
mov
xchg
mov
adc
mov
and
lcall
pop
mov
mov
fs
cmpsl
scas
xor
arpl
and
lock
xchg
loop
jmp
out
flds
call
mov
dec
aaa
mov
xchg
inc
mov
sub
inc
jae
loopne
int3
jp
lods
rcrl
xchg
sub
repnz
shll
shrl
call
in
mov
ljmp
movsl
popf
dec
sub
mov
pop
adc
mov
es
mov
xor
fsubrl
shr
push
pop
cli
orps
mov
test
aam
lcall
or
out
loopne
imul
mov
movsl
jl
in
loop
pop
dec
mov
sbbb
frstor
and
mov
push
pop
dec
mov
repnz
gs
bound
in
cmpl
sbb
pop
fdivr
adc
pushf
std
nop
aaa
scas
pop
ret
out
lret
xchg
call
lock
mov
inc
mov
cmp
test
stos
push
cli
cmpsb
dec
std
push
add
pushf
jne
loope
jns
je
stos
divl
lods
and
movsb
jmp
jmp
cmp
pop
push
pop
xor
mov
cmpsl
xor
push
dec
fiaddl
cmp
push
int
jg
mov
xchg
push
fcmovb
mov
insl
or
in
jmp
dec
push
arpl
inc
in
jle
test
adc
jo
hlt
shlb
je
das
dec
jo
xchg
push
imul
and
loop
or
cmp
pop
pop
cs
insl
faddl
mov
test
cltd
stc
or
push
push
test
das
idiv
jbe
ret
jb
pushl
adc
daa
psrad
mov
sbb
lds
sbbl
fdivrs
xchg
rcrb
sbb
pop
mov
out
sete
aaa
pop
iret
xor
vpaddusb
fcmove
outsb
pop
clc
faddl
pop
iret
or
pop
mov
xor
daa
mov
dec
cmp
scas
and
movsb
jge
sti
mov
cmp
push
jg
fsts
int3
lds
lea
pop
in
dec
mov
inc
lds
pop
jnp
in
outsb
jb
add
mov
popf
jb
out
inc
push
enter
test
fcomps
rcrb
imul
jecxz
ss
jnp
lret
fidivrs
rcrl
mov
inc
dec
mov
mov
jae
mov
and
fs
ret
stc
xor
sub
xor
popa
inc
cs
repz
pop
mov
out
and
dec
xchg
aaa
xor
jae
pop
addr16
inc
xchg
hlt
dec
mov
lods
adc
and
or
shlb
popa
andb
into
dec
or
loopne
xor
js
daa
jae
or
jno
push
stos
or
repnz
stc
rorl
lods
movsb
mov
sub
and
sub
ljmp
test
daa
sbb
and
ljmp
jns
dec
cmp
cmp
shll
inc
push
pusha
add
and
and
lcall
jne
daa
scas
mov
int
jmp
notb
xor
loop
popf
xchg
dec
ret
push
xor
mov
push
stc
call
imul
or
xchg
dec
xchg
repz
bound
xor
xor
add
jns
add
jmp
push
mov
fcmovu
sub
lea
pushf
xchg
outsl
inc
rorb
xchg
dec
cvtdq2ps
inc
lods
xor
dec
mov
sub
das
mov
inc
test
pop
mov
idivl
mov
jg
icebp
fs
push
and
xor
cmpsl
or
lds
xor
scas
inc
out
dec
mov
arpl
xchg
enter
lahf
in
ficoml
mov
fisttpl
jmp
filds
sbb
xor
in
fistps
jmp
jecxz
dec
pop
inc
stc
sbb
neg
add
cmp
xor
shlb
movsb
add
mov
mov
in
arpl
lods
arpl
pop
mov
xchg
out
cltd
adc
or
loop
push
das
das
xchg
xchg
sub
dec
cmpsl
gs
dec
test
mov
scas
fnstcw
mov
loope
shrb
dec
cmp
push
or
mov
mov
out
repnz
inc
and
jmp
sub
cmpsb
cmp
lock
call
dec
in
repz
inc
mov
jg
jnp
setl
cmpsb
in
and
mov
lods
or
xchg
outsb
in
sub
mov
push
data16
or
xchg
jp
rcll
fdivl
push
pop
xchg
lcall
xchg
nop
in
sub
mov
fbld
icebp
stc
pop
fwait
test
mov
sub
out
sub
in
xor
bound
mov
inc
mov
daa
pop
inc
lea
stc
pop
xchg
cltd
and
mov
sahf
cmp
sahf
mov
ljmp
cmc
cmp
stos
nop
xor
iret
rcll
cmpsl
scas
mov
in
xor
add
leave
test
lods
inc
dec
ja
leave
sub
les
lods
mov
jecxz
mov
mov
push
add
sbb
dec
loop
mov
dec
vrsqrtss
xor
nop
add
shlb
or
add
repz
xchg
enter
lds
sub
jecxz
push
in
ljmp
test
in
repnz
movswl
and
pop
xchg
iret
dec
int
fldpi
jno
or
jle
imul
sub
sbb
rclb
cmc
testl
les
pop
xchg
mov
sub
mov
mov
jbe
loop
pop
jge
xchg
mov
mov
ret
add
sahf
lods
sbb
jbe
fsub
sub
mov
es
insl
fisttpll
and
dec
lret
push
mov
push
sub
dec
jecxz
xor
pop
push
sbb
mov
clc
imulb
push
ljmp
cmp
shl
jmp
movsl
bnd
jl
xor
cwtl
and
enter
dec
and
pop
stc
js
imul
mov
xor
popa
push
pusha
cs
jae
push
imul
arpl
and
push
out
ret
or
pop
pop
test
dec
fldcw
xchg
sub
and
adc
pop
jp
cld
mov
mov
pop
insb
arpl
xor
cltd
lahf
mov
jns
es
data16
xorl
stos
mov
lahf
ss
scas
push
je
cmp
icebp
push
and
fcomi
add
push
popf
mov
fldl
popa
jp
ja
pop
das
inc
movsb
sbb
or
dec
jge
sbb
test
jg
int3
sbb
out
js
test
sbb
stos
cs
out
decb
add
or
jnp
push
test
pop
or
cmpsl
notl
mov
push
iret
cmp
insb
xchg
addr16
cld
in
fiadds
aaa
in
xchg
shl
out
dec
leave
xchg
mov
ss
test
rcll
sbb
fiadds
outsl
outsb
outsl
lock
xor
rorb
fwait
test
ds
test
out
sub
jmp
aam
mov
push
loope
add
pop
gs
pop
adc
xchg
shll
hlt
ljmp
or
jge
ret
stos
xchg
call
dec
jnp
mov
push
cli
inc
scas
aas
jg
insl
in
dec
xchg
cmp
xlat
inc
cs
mov
or
rclb
aam
pop
cmp
xchg
mov
and
negl
inc
and
push
sarb
cmp
leave
mov
rcr
inc
lods
in
xor
mov
mov
stc
push
mov
scas
pop
mov
adc
cltd
mov
mov
repnz
cmp
addr16
pop
lds
pop
xlat
xchg
add
lods
imul
xchg
lods
or
jecxz
rol
je
fists
jb
addr16
les
sub
jb
in
js
rolb
sub
cwtl
xchg
xor
or
repz
add
sbb
lods
out
mov
sub
push
stos
and
clc
stos
dec
das
hlt
je
mov
lret
adc
icebp
sbb
nop
scas
inc
aam
ss
enter
mov
lea
add
addr16
es
dec
sbb
ja
mov
sahf
inc
push
lock
mov
adc
jle
mov
pop
adc
adc
data16
mov
jne
das
loope,pt
dec
xchg
addr16
jle
mull
pop
movsb
in
insl
sbb
shll
or
mov
cmpsb
in
adc
mov
cmp
sub
jnp
or
insl
jmp
add
xor
inc
stos
aas
sub
out
inc
mov
jns
dec
das
cmp
test
lods
sub
or
or
mov
mov
shrl
sbb
sub
mov
addb
pop
mov
lahf
push
mov
pop
mov
cmpsb
push
jge
stos
mov
mov
aad
pop
cmp
or
sbb
pop
les
mov
pop
add
movsb
dec
adc
push
rdpmc
pop
aas
cli
and
arpl
fidivs
lcall
fisubrs
push
scas
jns
les
rorl
sti
inc
add
jecxz
clc
inc
xor
xorl
cmp
daa
push
mov
mov
push
jp
mov
sub
push
iret
mov
xchg
pop
add
mov
bound
outsb
arpl
into
jb
call
push
daa
or
sub
sub
ds
lcall
outsl
lahf
popf
add
sar
xor
sub
dec
ljmp
enter
sub
adc
lods
aaa
idivb
das
xchg
or
xchg
push
or
mov
loop
loope
sub
push
call
jecxz
mov
leave
xchg
hlt
jbe
adcl
cmp
mov
dec
incl
and
mov
pop
xchg
sbb
cmc
cmp
and
pop
movsb
ljmp
clc
add
pop
push
add
setb
ror
sar
push
and
mov
sti
mov
cwtl
mov
push
bound
call
aad
push
sarb
jmp
mov
xlat
fwait
xor
xchg
arpl
jmp
cmp
lock
xor
iret
mov
iret
test
or
adc
clc
dec
and
xor
sub
push
ret
test
dec
sbb
je
lahf
mov
mov
scas
and
stc
je
jae
lods
js
fbld
test
call
ror
pop
dec
jnp
and
xchg
fdivrl
pushf
inc
and
xor
or
adc
mov
setnp
pop
cmp
push
sub
call
in
jmp
lock
mov
sarb
mov
in
cwtl
adc
sub
cmpsb
sub
jmp
lods
out
inc
fbld
xchg
adc
xchg
stos
xchg
adc
imul
out
pop
jne
insb
rolb
mov
push
push
inc
adc
popl
dec
daa
or
cmp
sbb
fs
int3
dec
pop
pop
loop
pushf
cmp
mov
sbb
cmp
xlat
dec
mov
fcmovnb
aaa
push
xchg
xlat
aad
nop
mov
jnp
decb
inc
dec
adc
adc
lock
xor
jns
es
sti
in
flds
shrb
pushf
push
add
mov
aaa
or
sub
ror
shlb
sbb
inc
cmpl
cmp
aad
jmp
jns
ds
xor
xor
sarl
pop
xor
clc
mov
dec
jnp
sub
mov
loop
mov
mov
das
jns
xor
inc
lods
push
cwtl
xor
xor
or
insl
push
dec
sbb
lods
jo
mov
cmp
or
stos
mov
push
mov
add
jbe
pop
addr16
add
dec
dec
cwtl
loop
lods
sbb
in
jmp
or
sub
or
mov
push
jno
enter
jnp
aas
stc
pop
nop
cmp
sbb
jp
sbb
call
clc
xor
jl
scas
les
push
jp
mul
sbb
in
jmp
sub
sub
or
cwtl
pop
add
dec
dec
lds
call
xchg
std
sbbl
dec
es
in
jns
loope
dec
add
pop
jno
add
je
mov
cmp
clc
out
orl
std
adc
pop
mov
stos
es
lds
ss
jno
inc
cli
push
and
sub
mov
flds
mov
andl
sahf
mov
data16
add
mov
fstpt
mov
loope
in
fcoml
cs
mov
or
cmp
cmp
ret
movsb
sahf
lea
push
mov
mov
push
lret
ret
aam
test
addr16
jb
jnp
mov
dec
jg
iret
cltd
push
cltd
jo
insb
push
cld
pop
sub
lcall
jb
xchg
out
jno
mov
pop
push
shlb
add
testl
loopne
sbb
mov
cmp
rcrb
xchg
xor
bound
pop
mov
sbb
lahf
mov
dec
sbb
push
sub
aas
adc
inc
mov
cmpsb
inc
jnp
mov
cmpsb
add
lret
bound
rclb
xchg
xor
test
mov
or
test
add
in
popa
add
lret
mov
out
pushf
cltd
add
iret
loopne
jg
sub
add
lahf
jae
roll
push
frstor
popa
jae
dec
mov
in
movsl
in
dec
sub
std
sbb
lock
das
jne
add
shl
mov
mov
les
push
jns
mov
fdivrl
sub
fs
jl
ljmp
iret
push
bound
fsubs
and
lock
pop
lds
xchg
aaa
mov
xchg
or
sub
sub
gs
movsb
xchg
notl
mov
es
pop
xor
repz
dec
adc
dec
mov
sub
adc
data16
cmp
aam
subl
xor
rcrl
jne
push
xor
lahf
and
sti
js
in
cmpl
mov
jmp
xor
cmp
or
and
mov
frstor
mov
mov
xchg
insb
pop
inc
mov
jmp
xor
insb
cld
rolb
fdivrs
int3
lds
adc
cli
lret
int3
cmp
div
test
popf
inc
lods
lea
out
mov
cmp
fisttpl
cltd
cli
scas
xchg
iret
mov
rcll
and
sbb
scas
imul
aam
and
xor
sbb
push
aam
dec
xchg
mov
push
cmpsb
jp
aad
repnz
out
sbb
mov
add
ret
popf
andl
sbb
mov
mov
lods
xor
lds
dec
leave
int
xchg
inc
out
push
xor
cmp
mov
aad
xor
ret
mov
adc
lods
dec
dec
adc
ret
std
vcvtpd2dqx
ret
inc
ret
add
sub
movsl
xchg
aaa
fsubrl
dec
clc
cli
rcrl
xlat
in
xchg
adc
imul
pop
iret
xor
out
add
daa
add
movsl
push
and
fdivs
sbb
fisubrs
mov
dec
sti
pop
cli
roll
fs
lds
inc
daa
popf
and
cmp
jg
pop
cmpsb
or
cmpsb
fucomp
adc
pop
rcrb
push
int
fnsetpm(287
add
push
mov
sbb
dec
lock
ficomps
aas
sbb
add
nop
pop
pop
jns
call
xor
lcall
push
dec
pop
enter
dec
out
xlat
jae
dec
and
int3
cmp
out
outsb
pop
sbbl
inc
lret
sbb
xchg
push
sbb
loopne
xchg
fdivs
addl
sarb
inc
js
notl
jo
mov
imul
or
stos
shr
sbb
pop
std
fiaddl
orl
jl
mov
mov
loopne
lahf
push
mov
cmp
adc
fucomip
add
xchg
enter
cmp
sbb
test
push
inc
pop
out
and
xor
testb
xor
scas
test
pop
mov
cmc
out
adc
ret
comiss
lods
add
or
inc
mov
movsbl
shll
lods
out
lret
inc
lea
push
das
mov
out
int
add
lods
imul
in
pop
jge
push
push
hlt
test
insb
loopne
sbb
push
mov
push
mov
jns
fs
mov
scas
daa
add
xchg
mov
test
cmpb
or
xor
adc
aam
push
mov
stos
jne
js
addr16
pop
pop
fucom
or
sbb
shlb
jmp
test
repnz
fs
ljmp
ds
stc
jbe
add
xchg
xchg
inc
call
subb
xchg
sub
mov
insl
pop
sahf
and
shll
mov
mov
imul
push
mov
xchg
ficoml
push
mov
adcl
fstps
xchg
rclb
xchg
fwait
pop
xor
test
pop
pop
push
sbb
mov
insl
inc
sti
fstl
subl
push
sbb
in
jnp
aaa
jmp
xor
sbb
and
cmc
or
push
adc
notl
and
cmp
xor
or
idiv
rorb
push
pop
icebp
xlat
mov
sub
out
rcll
arpl
mov
aas
insl
gs
mov
fbld
lahf
push
and
mov
mov
jo
inc
jbe
inc
dec
adc
lds
pusha
imul
aas
mov
push
inc
into
pusha
popa
mov
mov
push
insl
lret
lea
ds
inc
rorb
aad
fsubrl
xor
dec
sub
sub
icebp
sti
mov
xchg
push
mov
outsl
enter
or
scas
pop
mov
xchg
ss
and
imul
xchg
dec
in
xorb
rolb
popa
inc
xor
push
mov
xchg
and
adc
iret
clc
cmp
mov
lds
cmpsb
psubusw
call
lret
arpl
enter
pop
out
sti
jmp
xchg
int3
xchg
nop
jle
pop
jmp
jae
rcrl
in
jns
inc
mov
sbb
push
or
scas
mov
leave
dec
stos
or
fisubs
xchg
ror
sbb
xchg
andb
push
inc
add
or
cmovs
inc
or
mov
loopne
xchg
hlt
loopne
je
mov
jl
out
push
je
adc
pcmpeqb
jae
jp
cld
test
movsb
mov
lods
cmp
ss
mov
xorb
out
in
ds
scas
subb
push
stc
adc
fadds
cltd
fcompl
xor
stos
xchg
stc
idivl
push
es
lea
pusha
lock
mov
shl
and
mov
adc
push
fadds
mov
fcoml
movsb
sbb
decl
inc
jno
pop
sbb
stc
or
push
pop
dec
inc
insl
clc
push
in
pop
ds
pop
iret
shlb
stc
outsb
mov
mov
xchg
adc
addl
out
mov
jbe
test
jge
popf
shlb
arpl
pop
cmp
add
mov
test
mov
fstpl
adc
inc
mov
cmp
jecxz
outsl
lea
movsl
mov
push
iret
pop
pop
jle
fsubrs
out
push
out
je
cmp
jl
pop
mov
lcall
call
jp
push
inc
pop
mov
cmp
jno
cmp
push
pop
arpl
pusha
popa
dec
xorb
pop
push
pop
adc
lea
xlat
push
sub
pop
sub
adc
dec
stc
add
jbe
mov
cmp
fisubrs
xlat
sti
mov
jg
repz
mull
lahf
sbb
nop
aam
ret
mov
fwait
push
sub
mov
xchg
jb
test
divl
push
or
xchg
movsl
repz
outsb
xchg
inc
xchg
pop
out
das
sub
push
add
mov
call
daa
mov
adc
xor
mov
jo
cmpsl
mov
in
cs
leave
push
mov
cltd
cmp
or
loopne
pusha
cmp
in
adc
iret
dec
cmp
js
pop
repnz
inc
mov
cmp
dec
mov
rol
out
inc
dec
fs
dec
icebp
sti
cmp
pop
push
jbe,pn
lahf
mov
jae
fisubl
add
sub
pusha
adc
mov
sti
mov
js
jnp
cmp
sbb
into
sbb
out
mov
inc
enter
push
shrb
xor
sbb
bound
sarb
rclb
loopne
add
and
xchg
adc
shll
movnti
mov
fwait
add
inc
mov
sbb
xchg
cmp
lret
sub
aad
shll
pop
mov
iret
jne
test
or
push
xchg
sub
fcomip
pop
stos
xchg
out
icebp
lea
fsubrs
std
mov
es
jb
mov
lahf
jno
xchg
xor
push
aaa
cwtl
dec
imull
add
pop
ljmp
sbb
adc
fstps
cld
mov
out
ret
push
pop
ljmp
test
lretw
xchg
mov
fidivrs
stc
nop
inc
fsubs
lds
push
jge
jle
push
or
cmpsb
cmp
xorb
aaa
xor
cmpsb
popa
add
arpl
add
cmp
cmp
jb
add
or
mov
shrb
sbb
clc
mov
popa
test
sbb
pop
aad
out
push
in
fists
lock
call
flds
std
ret
mov
jnp
idivb
xor
aas
imul
lahf
xor
lcall
loope
xor
popa
push
push
xor
xchg
xor
or
jp
lods
std
push
les
push
loop
fwait
mov
popf
push
pop
push
mov
pop
push
pop
cmc
adc
scas
gs
insl
cmpsl
js
dec
adcb
in
add
xor
xchg
rclb
sar
adc
mov
fmul
inc
sub
push
movsl
aam
xchg
sbb
loope
loop
jle
test
pusha
lods
pop
scas
lds
out
sub
lcall
sbb
iret
out
mov
shlb
aas
ss
mov
pop
mov
dec
push
mov
mov
jb
xchg
outsl
ja
mov
mov
xchg
filds
pop
jmp
dec
gs
inc
mov
xchg
adc
sahf
jl
fidivl
cltd
or
cmp
lcall
into
fwait
cli
mov
in
popf
jecxz
fbstp
xor
dec
mov
std
xchg
cld
sbb
fstpl
int
sub
xchg
cltd
cmp
jae
xor
sbb
stos
fnsave
push
nop
mov
jl
orb
adc
sub
adc
lods
test
arpl
inc
rcr
inc
lahf
push
test
and
add
mov
xchg
sti
fucomi
test
mov
pushf
outsl
pop
sti
loopne
dec
sti
hlt
testb
push
in
loope
mov
dec
xor
cmp
nop
in
mov
lcall
jmp
lea
js
or
out
sbb
je
and
test
aaa
jp
jae
jge
mov
sub
ret
jne
dec
sub
add
mov
inc
imul
jge
adc
insb
dec
xchg
pop
lds
scas
sbb
mov
cwtl
imul
push
mov
cmp
sti
fwait
and
loope
scas
mov
ret
pop
in
in
sti
adc
insl
add
xorl
lea
scas
xor
xor
xchg
mov
shl
push
rcl
xor
out
mov
test
ficoml
repz
push
pop
jns
mov
inc
sbb
outsb
cwtl
pop
or
adc
cli
in
adc
mov
mov
int
lds
xchg
and
mov
cmp
ljmp
aam
mov
xchg
xchg
mov
pop
scas
pop
jnp
sub
sbb
das
ficoms
adc
out
mov
jne
mov
inc
inc
shlb
ss
ret
jp
jl
addr16
daa
xchg
inc
fcompl
sti
add
cmp
adc
inc
iret
hlt
push
jbe
inc
stos
int
or
push
pusha
mov
xchg
das
popf
sub
shrl
hlt
in
fnstcw
int
mov
mov
arpl
push
or
and
ja
dec
lret
das
out
aad
xor
in
push
jo
pop
jb
add
shll
sub
dec
adc
dec
add
dec
jl
es
and
push
lret
int
dec
jo
mov
xchg
jbe
mov
pop
mov
shr
sbb
sub
sti
adc
lea
jb
repnz
idivl
pop
mov
jge
xchg
inc
dec
cmp
xchg
mov
or
gs
push
arpl
sub
imul
jmp
pop
mov
mov
out
shrb
ljmp
mov
pop
clc
nop
fdiv
push
scas
pop
sti
out
jnp
mov
adc
mov
out
mov
dec
cmp
hlt
xchg
incb
addr16
repz
outsb
xor
jnp
sti
mov
std
cmp
leave
pop
incb
addr16
or
ret
out
nop
out
push
mov
push
cmp
or
sbb
xchg
add
pop
popf
rclb
inc
imull
pop
sub
jg
fldl
or
cs
xlat
jb
jb
pop
mov
xlat
mov
lods
dec
enter
and
mov
xor
dec
dec
xchg
lea
adc
push
les
aaa
mov
jo
rolb
dec
xchg
repz
popa
dec
cwtl
cmp
popa
scas
jg
cmp
sbb
or
jecxz
mov
enter
call
ret
pop
pop
sub
stos
sub
int3
testl
or
test
add
fwait
outsl
shll
jo
mov
addr16
fisttpl
js
negl
cmc
inc
mov
sub
push
bnd
pushf
sahf
das
mov
fdivs
pusha
ret
inc
test
xchg
shr
pop
add
out
jge
outsl
adc
aaa
pop
mov
stos
add
mov
dec
pop
mov
test
arpl
mov
and
dec
xchg
add
adc
add
xchg
and
popa
jnp
popf
in
not
fwait
in
insl
cmp
ret
sti
movsl
cli
sahf
dec
mov
or
hlt
pop
xchg
jne
mov
mov
sbb
or
push
test
mov
pop
sbb
pop
mov
fcompl
ljmp
std
scas
xchg
xor
sbb
xor
mov
call
aad
sub
inc
imul
sub
and
icebp
or
sbb
push
mov
sub
scas
xchg
adc
cmc
mov
lret
jne
or
fsub
lret
push
lods
mov
mov
cmp
test
shl
shrb
jp
push
mov
sti
das
xchg
movsb
push
mov
jge
pop
mov
lret
push
loopne
cld
fistl
mov
push
jne
pop
movsb
jne
loope
out
scas
xorl
mov
pushf
mov
stos
xorb
cmp
mov
or
jl
xor
imul
xchg
dec
jmp
imul
roll
loop
push
into
cmp
jb
xor
es
push
popa
vmread
dec
mov
inc
push
test
aaa
xchg
outsl
mov
sbb
pushf
movsl
jns
jp
lods
in
loop
popf
cmp
jo
mov
int
mov
scas
mov
inc
es
mov
mov
inc
loopne
cmpsb
fs
outsl
dec
adc
aaa
imul
or
xchg
dec
out
mov
mov
clc
loope
and
jl
in
cmc
jno
jbe
mov
xchg
ss
or
and
mov
insl
stc
adc
stos
enter
shl
int
xchg
xchg
mov
xchg
movsl
pop
push
inc
xchg
add
jecxz
in
xchg
int3
loop
inc
divb
stos
inc
adc
inc
adc
cmp
add
mov
sbb
add
pop
out
jbe
or
cmpl
mov
test
adc
xchg
xchg
xor
lcall
sub
loop
jge
sub
xchg
push
popf
adc
je
mov
inc
das
jbe
sahf
icebp
sahf
outsl
inc
pop
dec
and
out
js
jne
or
xor
out
outsl
out
xor
sbb
mov
repz
nop
decb
inc
clc
std
pop
ja
dec
fldl
and
inc
popa
push
jb
jmp
daa
mov
add
xchg
mov
sub
sub
push
and
icebp
aas
aas
clc
enter
and
lds
pop
arpl
inc
mov
dec
mov
test
mov
fisttpl
sbb
pop
dec
bound
mov
fcmovb
inc
jg
jp
dec
aaa
xchg
inc
mov
hlt
pop
pop
js
dec
or
or
mov
adc
das
mov
out
js
jl
and
mov
andl
mov
pop
pop
jae
pop
cld
repz
pop
pusha
out
push
nop
stos
jecxz
mov
ljmp
and
xlat
aad
cwtl
cmp
movsb
cmp
adc
scas
test
sub
aam
cmp
stos
rclb
fs
or
xor
dec
mov
sub
and
stc
or
ret
pop
cmpsb
add
push
jnp
lahf
mov
sub
xchg
imul
arpl
lcall
setle
addl
xchg
lret
les
mov
fwait
roll
cmpsl
mov
xor
idivl
ljmp
dec
test
xchg
jnp
sub
shlb
push
mov
into
cmp
add
and
sbb
jbe
repnz
iret
jge
icebp
and
and
mov
cmc
sarl
in
sbb
lock
and
cmpsl
movsb
incb
sub
dec
mov
sahf
mov
sbb
and
jns
jecxz
adc
cs
cmp
and
xor
push
cltd
movsb
xor
and
add
orl
inc
pop
mov
ja
adc
es
pop
and
and
adc
jb
imul
add
or
je
mov
and
adc
cmp
imul
aaa
xchg
add
xor
adc
stc
aas
ja
rcrb
clc
insb
sub
and
popf
fsubrl
push
mov
push
dec
xchg
inc
sub
add
popa
cmp
shlb
mov
xlat
lahf
inc
out
leave
lods
jnp
jmp
push
loop
jbe
mov
cmp
jle
mov
push
les
and
pop
inc
push
and
jge
ljmp
and
sub
xchg
out
mov
mov
dec
outsl
lds
sub
inc
iret
xor
arpl
dec
add
ss
test
pop
inc
add
or
es
pop
mov
fcomip
ss
push
fnstsw
in
jl
addl
mov
outsl
in
mov
subb
leave
mov
fisubrs
loopne
and
fisttpl
pop
pop
sub
mov
add
pop
sub
xlat
ja
leave
ja
sbb
push
pop
pop
sar
pop
test
jbe
cli
xor
pop
mov
jl
lret
jg
test
cmp
dec
mov
pop
pop
lret
add
adc
ljmp
in
movsbl
mul
dec
movsl
loop,pn
add
jmp
jmp
mov
mov
insb
imul
arpl
sbb
pop
mov
jmp
push
ss
cld
lret
je
cmc
mov
add
scas
inc
lahf
in
stc
aam
iret
repz
pop
fstps
adc
add
jb
mov
pmaddwd
add
rcll
jns
mov
mov
les
sarl
icebp
or
cmp
nop
ds
cmp
das
xchg
idivl
xor
pusha
loopne
mov
mov
insl
xor
sub
dec
dec
setno
aad
leave
mov
xor
mov
in
orl
or
test
lock
div
pop
cld
and
and
inc
dec
mov
es
imul
inc
or
push
outsl
icebp
rcrl
xor
ds
jb
inc
aam
cmp
outsl
mov
push
xchg
cld
leave
and
pop
subl
pop
pop
add
int3
mov
sarl
or
add
cmpsb
mov
add
jge
fildl
xchg
push
test
or
daa
sub
test
xchg
inc
or
sbb
int
lods
sub
cltd
imul
pusha
fmul
repnz
xor
sbb
subb
jle
orb
or
mov
xlat
popf
fwait
pop
das
add
inc
imul
push
xchg
jbe
mov
or
add
mov
fldenv
loopne
add
mov
scas
xchg
repnz
jmp
lret
fwait
int
pusha
and
lcall
mov
push
or
std
adc
rorl
xor
scas
test
test
cmpsl
add
fsubs
sub
scas
pusha
test
push
xor
push
pop
inc
mov
xor
ss
and
adc
rcrb
inc
dec
in
push
andb
adc
ret
push
imul
gs
jno
sub
rcrl
jb
outsb
stos
movsl
xchg
xor
ret
es
ljmp
mov
jno
mov
mov
push
or
pop
add
mov
lret
popa
sub
fstpl
in
xchg
jns
pop
pop
dec
cmpsl
stos
xchg
pop
out
dec
leave
inc
sbb
ret
cmp
or
stc
inc
fwait
xchg
xchg
xchg
movsl
mov
pop
jns
mov
mov
dec
sti
negb
add
mov
scas
cmpsl
and
dec
fs
ret
pop
sarl
inc
sub
into
ret
and
add
cmpsl
add
cmp
fwait
push
push
fistl
push
decl
jmp
jbe
rolb
add
test
ja
nop
mov
insb
daa
sbbb
and
jb
jo
inc
dec
jl
std
and
iret
imul
jnp
add
rcrl
in
push
mov
and
insb
xchg
lret
or
jg
push
out
cmp
divl
hlt
movsl
fsubl
mov
sub
test
cmpsb
enter
repz
data16
pop
lahf
push
arpl
sbb
sbb
or
add
addr16
sub
cltd
cmp
or
std
dec
inc
inc
sbb
cmc
or
adc
inc
jle
or
inc
scas
enter
inc
mov
sarb
dec
test
lds
iret
lahf
sbb
into
mov
add
scas
push
ljmp
aam
adc
fisttpl
push
fimull
jmp
mov
mov
push
cltd
cltd
jecxz
gs
adc
repz
sbb
inc
push
pop
sahf
and
movsb
aad
or
and
cwtl
mov
mov
cmc
mov
sub
mov
jg
ljmp
in
cmp
xor
adcb
mov
pop
leave
mov
popa
je
shlb
jge
shrb
adc
ljmp
dec
repz
rolb
push
insl
incl
aaa
ret
imul
mov
lcall
xlat
in
fdivr
jns
xchg
je
or
sub
mov
mov
cmp
mov
mov
fdivr
subl
xchg
int3
sub
out
pop
cmpl
jp
push
sub
daa
xchg
loope
mov
test
mov
mov
faddl
sbb
lret
xchg
xchg
mov
cmp
lret
mov
lret
adc
int
jb
sub
push
xor
ret
mov
or
dec
push
icebp
xor
orl
dec
roll
lahf
or
xlat
sahf
and
mov
push
daa
dec
jecxz
movsl
push
dec
jmp
subb
mov
aam
fmull
mov
subb
out
xchg
imul
or
lds
sbb
fsubl
sarl
into
pop
mov
in
repz
in
push
das
adc
sbb
fimull
addr16
in
aaa
test
inc
mov
aas
xchg
aas
repnz
scas
scas
cmpsb
and
es
getsec
hlt
push
mov
push
sarl
fucomp
inc
stos
xor
sub
add
cmp
pusha
sti
mov
adc
roll
xlat
pop
inc
dec
push
jae
jg
sub
push
xchg
int3
shrl
mov
pop
add
mov
xchg
out
xchg
outsb
cs
push
and
orl
shlb
sbb
pop
or
enter
dec
adc
jg
movl
push
inc
jnp
sarl
xchg
cs
scas
cmp
sbbl
cmpsl
push
pop
pop
test
je
or
mov
pop
xchg
shl
jno
mov
es
insb
nop
ljmp
adc
fisubrs
js
imul
mov
mov
lcall
addb
repz
push
stc
shll
js
add
or
sbb
mov
cmp
or
mov
lock
jnp
jbe
cmp
pushf
and
int
imul
xchg
pushf
mov
sub
sbb
gs
push
not
shlb
add
ret
rcl
aad
daa
sbb
fistps
mov
push
std
cltd
or
jl
sbb
cmpsb
call
sub
nop
fcmovnu
fcmovnu
push
mov
insb
pop
adc
daa
shl
inc
fistpll
scas
jbe
fwait
mov
mov
adc
push
mov
loope
fdivrl
inc
cmc
leave
and
stos
test
ret
or
test
sbb
mov
mov
in
or
push
arpl
add
ds
test
cmp
or
push
pop
and
xchg
lods
les
ds
stos
into
and
lock
out
jno
push
test
call
test
dec
and
and
cmp
adcb
lods
test
rclb
xchg
xchg
cltd
cmc
mov
sbb
mov
mov
xchg
icebp
fiadds
cmp
jnp
mov
cmp
call
xchg
inc
mov
mov
out
jp
mov
dec
aaa
push
int3
or
into
icebp
aad
inc
mov
popf
out
xchg
cmpsb
push
xlat
mov
and
outsb
add
xchg
cmpsl
aaa
pop
fcom
and
adc
mov
mov
andb
inc
stos
push
dec
in
jp,pn
dec
mov
sub
jae
pop
lods
cld
mov
xchg
stos
push
mov
mov
pop
xor
mulb
dec
ret
test
arpl
fs
shll
or
fwait
mov
and
addr16
lcall
mov
jp
mov
cmpsl
mov
cmp
jmp
pop
and
mov
fstpl
mov
or
adc
adc
lret
mov
mov
rol
test
xchg
fstps
mov
mov
pop
outsl
mov
fwait
jmp
int
push
popf
loope
sarb
fistpl
push
jmp
sahf
mov
iret
sbb
andb
mov
ret
sub
sbb
inc
icebp
imul
jnp
loop
cmp
push
lods
movsb
rolb
jmp
or
pop
inc
xor
out
aad
sub
cmp
push
inc
test
mov
and
out
scas
mov
or
bnd
sbb
icebp
push
aaa
or
sbb
xor
push
xlat
fisubs
and
out
adc
out
rcrl
and
scas
test
scas
push
ret
pop
inc
inc
rorl
cmp
mov
mov
adc
das
jae
or
jo
shlb
or
cmpsb
aad
loop
xchg
ret
adc
ss
push
mov
gs
adc
fincstp
and
jae
inc
cmpsb
pop
out
out
js
fs
xchg
add
ret
xchg
ror
lret
and
push
cmpsl
bound
pop
cld
and
loop
jg
mov
inc
pop
xor
arpl
clc
imul
rolb
dec
inc
icebp
pop
je
sbb
add
or
into
mov
in
xchg
stos
inc
mov
push
cld
test
push
arpl
imulb
fiaddl
fidivrs
daa
psllq
xor
adc
pop
es
sti
mov
adc
mov
add
sub
pop
out
xchg
loope
xchg
cmpsl
testb
pop
sti
cmpb
insb
push
jle
bound
mov
push
leave
mov
pop
mull
add
outsl
inc
add
push
das
loope
pop
and
test
aaa
inc
imul
stc
testl
lret
and
mov
jle
mov
daa
rolb
insl
shlb
and
rclb
xchg
adc
xor
adc
sbb
mov
mov
xlat
aam
lock
sahf
dec
arpl
in
imul
fmulp
adc
or
add
inc
push
pop
fdivl
sbb
mov
mov
ljmp
sbb
xor
lods
mov
les
hlt
out
icebp
and
or
mov
dec
aas
mov
xorb
pushf
mov
add
push
imul
add
pop
mov
ja
clc
mov
jne
dec
mov
push
lods
popa
je
adc
aad
cmpsb
outsl
add
xor
or
cmp
inc
out
pop
or
mov
xor
sub
mov
aas
pop
pop
jbe
lock
xor
lods
mov
cmc
xchg
pop
subl
loope
pop
pop
inc
cwtl
or
movsb
les
sub
enter
xor
das
and
pop
lcall
outsl
loopne
push
mov
jae
andb
sar
mov
les
shlb
xchg
fnstenv
jge
mov
insl
outsl
push
in
sbb
sbb
and
or
adc
in
nop
scas
sub
stc
insb
stc
pop
or
pop
pop
loop
adc
outsl
push
or
xor
lahf
into
mov
adc
inc
dec
cmp
iret
mov
push
enter
icebp
push
sub
xchg
in
xchg
icebp
in
pop
fcoml
ja
sbb
sbb
lret
outsb
in
sbb
ds
push
lods
mov
adc
orl
pop
mov
push
pop
leave
lret
add
je
data16
shrb
xchg
mov
stos
or
jmp
gs
fcmovnb
es
push
jb
fistpl
stos
sub
rcrb
pusha
sar
add
lret
xchg
mov
lcall
jb
mov
add
in
stos
imul
push
xchg
sub
je
xor
jmp
popf
jo
nop
fadd
jg
jo
sub
scas
ds
sbb
sub
pop
adc
mull
jnp
push
jecxz
psrad
leave
add
lods
inc
sbb
loope
pop
sub
scas
repnz
jl
xchg
stos
pop
adc
xchg
or
pop
jb
push
loope
popfw
sub
cltd
lds
xchg
nop
rclb
sarl
test
inc
cmp
pushl
repnz
into
fwait
cmp
das
sub
cmpsb
imul
fldenv
sbb
xor
push
loop
ret
loopne
bound
sbb
bnd
mov
sub
daa
cmp
jns
sbb
ja
dec
pop
push
add
mov
inc
and
cmp
mov
jae
xchg
lods
push
cli
or
fsubrs
lock
dec
test
mov
cmpl
pop
xchg
fadds
mov
stos
test
mov
insl
xchg
shrb
dec
adc
cmp
push
cld
dec
mov
xchg
lret
xlat
cmc
pushf
mov
mov
push
xchg
mov
stos
subb
int
loop
sbb
lods
mov
popa
lock
pop
mov
jb
or
sbb
jb
ds
ss
mov
xor
sub
push
inc
sub
and
inc
cmp
rep
and
sub
das
adc
sub
pop
mov
xchg
push
mov
or
inc
cmpsb
xchg
shlb
pop
dec
jbe
cmp
mov
mov
std
int3
imul
pop
push
inc
or
pop
ljmp
sahf
xor
xor
mov
mov
adc
mov
lret
and
test
mov
mov
rcrl
leave
insl
push
sub
cmpsl
push
in
rcrl
adc
push
mov
cmp
lods
jecxz
or
fidivl
cli
push
aas
testb
jbe
test
fistps
add
or
adc
jno
mov
imul
dec
xchg
pop
fwait
in
push
sbbb
ja
and
addl
jecxz
inc
out
jnp
movsl
push
clc
sub
sub
cmp
cmc
out
dec
jb
in
icebp
sbb
inc
push
pop
push
sub
xchg
pop
sub
in
lea
cmp
sti
inc
cs
xchg
xor
ficoml
pop
xchg
mov
mov
nop
mov
out
icebp
sub
in
jle
aad
and
xlat
mov
adc
mov
or
lds
push
mov
test
clc
jns
fbstp
adc
sbb
adc
xchg
cmp
and
jnp
ret
cli
jge
mov
int3
dec
sti
sub
push
enter
aas
lods
push
js
cmp
jmp
cmp
sub
sbb
adc
aam
xchg
inc
mov
xchg
push
into
xor
mov
and
lahf
and
fnsave
adc
ja
adc
sahf
lods
jb
dec
jle
sub
jo
push
addr16
or
pop
mov
xor
push
in
add
je
add
jne
mov
fisttpll
pop
test
xlat
ret
cmp
hlt
mov
mov
arpl
stos
in
xchg
ret
sbb
fiaddl
test
jns
stc
int3
sbb
push
cltd
dec
xchg
adc
push
cli
or
mov
xor
movd
or
sub
sbb
pop
icebp
sub
lret
and
mov
adc
mov
scas
push
int
mov
stos
adc
sub
mov
mov
sub
dec
dec
arpl
ffreep
mov
lods
xor
mov
ret
repnz
les
xchg
ret
sbb
xchg
rcl
and
pop
sti
sub
data16
adc
mov
jnp
jnp
or
pop
push
aam
jno
outsl
js
dec
and
cmpsb
rorl
idivl
subl
daa
xor
rcll
cmp
adc
mov
lock
out
ljmp
cmpsl
cwtl
ficomps
xchg
inc
mov
xchg
test
notl
imul
pop
add
mov
cwtl
test
jbe
and
mov
mov
pop
push
loopne
sbb
or
sbb
lds
jl
into
add
loop
mov
clc
jl
mov
cmpsl
push
xchg
int3
xchg
jmp
add
jg
fildl
lock
sahf
sbb
xchg
out
outsb
testb
jo
push
mov
cmp
scas
adc
push
test
or
clc
icebp
mov
ss
and
out
js
jns
iret
dec
divb
in
lods
sbb
pop
dec
mov
adc
lret
fwait
mov
gs
in
mov
in
push
xchg
aad
sbb
iret
inc
mov
sahf
jg
adc
mov
add
mov
mov
ljmp
call
inc
test
mov
add
pop
lret
sbb
inc
repz
stos
mov
leave
and
jp
jb
add
ja
je
into
enter
pusha
insb
shll
repz
lock
dec
loop
cmpb
sub
imulb
negb
sbb
adc
pop
adc
int3
xor
test
jecxz
dec
popa
jno
adc
js
mov
lcall
outsb
xchg
mov
xor
js
xchg
jle
jge
push
mov
cld
loopne
xchg
inc
daa
pop
xor
add
repz
jecxz
cmp
push
popf
mov
push
or
into
fs
pop
ror
push
rorl
xlat
and
cltd
jnp
mov
or
inc
insl
cmp
sbb
je
sub
dec
insl
dec
mov
ret
insb
mov
call
cmp
inc
jmp
js
mov
out
cmc
jg
mov
inc
or
call
jnp
aas
xchg
andl
cs
mov
cs
sbbb
mov
sub
adc
in
cmpsl
in
xor
and
xchg
inc
les
negb
push
fsubrl
xor
cmpsl
xchg
das
daa
clc
mov
scas
push
xor
sbb
gs
in
lea
shlb
jo
int3
mov
gs
sub
out
loope
loop
sub
sbb
dec
rcr
xchg
mov
mov
lea
pop
cmpsb
outsl
dec
mov
outsb
in
push
and
push
test
movsb
mov
aad
mov
mov
add
mov
imull
xor
push
add
adc
in
jle
adc
inc
adc
xorl
scas
jl
push
add
test
push
ja
pop
sbb
add
aaa
negb
push
or
cmp
lods
adcl
push
mov
inc
rclb
adc
mov
jnp
stos
jle
das
lcall
outsl
jbe
cmp
or
xchg
push
mov
pop
mov
or
out
in
stc
pop
inc
sbb
inc
je
add
add
push
je
idivl
int
lea
lcall
mov
and
adc
stos
pop
mov
sub
movsl
xor
test
add
xor
stos
adc
test
xchg
mov
lret
cld
into
mov
gs
daa
mov
roll
push
xchg
cmp
mov
leave
shll
repz
test
mov
imul
repz
loope
pop
mov
sub
xchg
mov
add
cmp
pushf
mov
rcrb
mov
push
lods
dec
jnp
insl
stos
cmp
inc
push
mov
popa
call
leave
aas
popf
push
push
popf
icebp
inc
lret
xchg
sbb
mov
ss
cmc
int3
stc
xchg
insb
mov
stc
xchg
mov
fdivl
sarl
add
xchg
in
ja
aaa
int3
fistpll
sbb
ljmp
mov
fists
outsb
adcl
insb
fadd
lods
sarb
pop
sub
push
popa
lcall
cmp
nop
add
sbb
loope
inc
xor
inc
mov
dec
nop
mov
or
xchg
xlat
stos
jle
pop
scas
out
or
xor
daa
jge
cmp
stos
int
xor
sar
scas
dec
insl
sub
sbbl
mov
inc
sub
mov
lret
add
adc
ds
inc
outsl
arpl
xor
pop
or
adc
inc
enter
dec
inc
ret
add
scas
loope
mov
into
sub
mov
push
mov
fs
adc
fimuls
les
pop
or
fadds
scas
push
xchg
and
sub
int
sub
pop
stc
push
mov
cmp
xor
cmpsl
enter
pop
adc
xchg
and
or
fsubrs
lahf
insb
int3
pop
adc
lret
in
sub
cli
push
add
outsb
or
sbb
lock
ds
out
ret
cmp
pop
adcb
adc
rorb
test
adc
add
pop
mov
jp
daa
xor
roll
jge
mov
xchg
add
das
ds
loop
or
scas
out
test
mov
test
pop
jnp
push
jecxz
xchg
addr16
scas
push
ja
shrb
dec
xorl
xor
lods
icebp
out
out
shll
mov
mov
push
fisubrs
out
sub
repz
and
lods
push
pop
mov
lods
pusha
xchg
enter
mov
push
inc
push
ret
push
icebp
jbe
mov
inc
sti
jecxz
mov
fpatan
mov
xor
out
test
fsts
xchg
dec
sbb
je
xor
enter
cmp
in
or
xchg
mov
adc
pop
lea
popa
or
loopne
jmp
sti
sti
hlt
push
sbb
pusha
outsb
cmp
ljmp
mov
jbe
xchg
repz
stos
call
or
mov
mov
push
gs
mov
test
pop
sub
cmpsl
cmp
jmp
inc
sbbb
mov
push
add
sahf
pop
fldt
aad
pop
outsl
hlt
lods
and
mov
push
pop
mov
sbb
jl
in
inc
push
push
shr
mov
lahf
add
push
xchg
jne
aas
adcl
adc
inc
xchg
pusha
xchg
stos
and
xor
gs
es
inc
into
dec
pop
and
test
xor
bound
dec
mov
scas
sahf
adc
addr16
fisubrs
addr16
mov
mov
xor
outsb
addr16
fdiv
data16
daa
cs
mov
cld
push
sub
outsl
mov
leave
icebp
pop
jp
mov
sub
pop
es
pop
imul
std
sbb
out
int
pusha
mov
leave
xchg
test
xor
cmp
movsb
popf
call
pop
xor
fidivrl
xor
push
sub
jnp
mov
push
mulb
push
out
xchg
pop
pop
mov
and
stos
loopne
sarl
sarl
mov
dec
jmp
fistpl
sub
mov
pushf
lcall
shl
adc
mov
movaps
xchg
adc
mov
add
inc
add
mov
mov
andl
popf
xchg
sub
aam
clc
jp
jmp
shrb
jmp
icebp
orb
sub
jo
fnsave
mov
aad
into
daa
jb
pop
gs
add
xchg
jle
jo
xor
xchg
fsts
dec
insl
sbb
inc
jle
clc
jg
cmp
sbb
enter
pop
pop
mov
jecxz
or
rolb
pusha
add
in
scas
mov
aad
pop
je
mov
pop
leave
out
ffreep
shll
insb
dec
lea
add
dec
repz
loopne
sbb
dec
pop
cmp
sbb
in
cmp
les
push
xor
sub
mov
adc
jg
or
jg
jbe
xchg
and
jbe
and
sti
mov
lret
mov
addl
sbb
fidivrl
pushf
sahf
mov
leave
lahf
aad
adc
out
daa
aad
push
xchg
mov
push
addr16
push
outsb
adc
add
out
dec
lds
add
jge
push
jp
shll
ds
sub
jo
fiadds
mov
sti
ja
loopne
test
sub
lret
test
mov
movsl
mov
and
cmp
cmpl
lret
and
dec
mov
or
push
xchg
sbb
test
loopne
das
and
fcmovb
mov
into
pushf
jmp
sub
ds
in
insb
jmp
mov
inc
andb
ret
sub
jo
and
into
aam
xor
outsl
mov
mov
gs
xor
cwtl
pop
stos
sbb
rorb
fdivrp
xchg
mov
or
xor
jb
jbe
cli
pushf
or
mov
sub
icebp
fisttps
sbb
lcall
cmpsb
jge
into
dec
loop
mov
push
std
push
xor
ret
xchg
cltd
mov
pop
sbb
ds
or
mov
adc
out
fcomip
aam
fucom
loopne
push
icebp
add
xor
movl
sahf
fsub
sub
or
inc
cmp
or
rcrb
push
xor
push
lahf
jno
xlat
push
xor
jge
mov
and
aad
add
xor
sbb
xchg
push
repnz
inc
mov
das
fimuls
cwtl
adc
jns
push
lahf
jne
popf
sbb
mov
and
and
add
mov
pop
xchg
clc
add
push
test
add
in
dec
mov
xchg
xchg
or
inc
xchg
inc
fwait
push
push
popa
or
enter
push
loopne
shrl
mov
mov
insl
repnz
pop
jp
ljmp
xchg
leave
call
mov
or
arpl
dec
or
push
pop
cs
cmp
mov
dec
lret
mov
dec
cmp
pop
mov
sub
popa
sbb
mov
les
fistps
xchg
pop
or
xor
ja
orb
add
loop
mov
mov
pop
shlb
clc
xor
add
mov
inc
mov
xor
movsl
int
bnd
into
ljmp
lock
push
test
dec
imul
and
sahf
jg
jmp
adc
xor
fnsave
cmpsb
push
or
out
dec
sbb
mov
aaa
into
pop
aad
sub
adcb
into
pushf
jge
pop
jl
sub
mov
jo
in
inc
arpl
daa
stos
or
push
sub
jecxz
mov
inc
pop
mov
inc
jg
push
push
sub
in
test
push
test
out
jbe
jecxz
je
pop
sbb
push
test
fsts
cmpsl
jmp
incl
and
cmp
ret
ja
sub
mov
stos
mov
inc
xor
or
xchg
inc
lret
cmpsl
lcall
in
out
xchg
push
mov
xchg
mov
and
sub
or
test
fildll
int3
lcall
je
mov
xor
stos
nop
mov
jmp
cmp
jae
mov
rcrl
outsb
push
mov
pop
adc
jle
imul
and
mov
lods
add
cmpsl
insb
roll
add
sti
add
lods
xor
out
push
call
jb
mov
jle
add
fimull
ja
cmpsb
cltd
lret
test
pop
lea
jb
xchg
mov
xor
arpl
and
push
loop
outsl
jno
sbb
ret
hlt
inc
sbb
sub
enter
addr16
dec
roll
fwait
and
shrb
adc
adc
mov
push
xor
aam
fnstsw
push
add
mov
sti
push
push
shll
xchg
mov
push
fstps
imul
jl
xlat
pop
push
sbb
mov
adc
pop
push
movsb
pop
aad
jb
mov
test
cwtl
insl
repz
and
jle
frstor
jle
aad
jmp
jae
pushw
xor
aam
decb
jnp
out
sub
lea
js
lds
pop
roll
into
lock
out
jae
push
shrl
mov
push
inc
mov
pop
rorl
lock
lret
or
xchg
fsubl
pop
mov
push
adc
cld
mov
repnz
ljmp
lret
inc
sub
and
shr
scas
add
add
cmp
xchg
mov
xor
sbbb
add
in
add
mov
ror
pop
stos
sbb
call
adcl
inc
sbb
imul
scas
cmpsb
xchg
mov
jae,pn
add
and
or
cmp
sarl
mov
pop
das
push
jmp
and
jl
pop
xor
mov
jnp
inc
push
cwtl
xor
lcall
xchg
repnz
dec
ja
fmuls
ds
xchg
and
out
cmpsb
dec
ss
or
insb
lret
mov
add
pop
pusha
cwtl
pop
cmpsb
dec
adc
sbb
lock
shlb
or
call
les
pop
dec
jle
push
aaa
fcmovne
jl
jbe
jmp
in
inc
arpl
in
push
push
push
popf
icebp
adc
sub
jp
fsts
xchg
mov
cmp
popf
jno
sub
or
cli
xchg
add
arpl
sbb
xlat
cmp
nop
sbb
sub
lcall
mov
out
jle
and
sti
push
mov
dec
add
rcrb
adc
sbb
mov
push
dec
jmp
push
int
sbbl
out
pop
dec
push
adc
data16
loop
icebp
pop
dec
stos
xchg
ret
jb
shrl
inc
adc
and
sbb
xchg
out
push
ljmp
add
pop
xchg
je
cmc
or
int
mov
popa
lods
mov
xor
pop
test
cmp
pop
push
std
xchg
mov
in
rorl
ja
int3
test
xor
and
xor
je
xor
testb
mov
sbb
sbb
and
mov
out
test
outsl
test
xor
cltd
adc
orb
loopne
insb
hlt
movb
les
push
xchg
mov
pop
ficoml
or
cmc
pop
pop
jle
arpl
cltd
dec
js
insl
pop
sub
out
aad
or
mov
mov
test
xor
and
sbb
xchg
mov
fwait
or
pop
and
add
icebp
inc
xor
add
test
pop
leave
and
push
xor
sub
jg
into
sbb
lds
xlat
jmp
cmpsl
mov
sahf
adc
push
adc
cmp
mov
outsb
cltd
cs
add
mov
scas
pusha
rcl
mov
or
and
loopne
fldcw
sub
test
lret
cli
clc
popf
out
scas
mov
notl
push
mov
ret
cwtl
test
test
xchg
or
sbb
mov
dec
add
sbbb
das
mov
cwtl
push
iret
cltd
and
js
lcall
cmp
dec
out
enter
ss
and
js
rclb
and
add
mov
pop
mov
or
dec
inc
ljmp
adc
or
jge
in
pop
jns
lahf
decb
mov
fsubrl
iret
int
int3
mov
add
push
sti
fisttpl
xor
and
jb
jno
and
cmp
jns
neg
jle
adc
lods
int3
cmc
enter
test
dec
mov
cmp
out
shll
mov
dec
and
xlat
pop
jmp
and
movsb
and
lods
popa
mov
xor
xor
and
test
stos
mov
cmp
cmp
push
xor
out
jne
es
mov
push
out
mov
and
je
cli
add
arpl
or
push
adc
push
xchg
outsb
xchg
xchg
mov
add
sub
xor
xlat
insl
out
xlat
insb
ret
stos
xchg
fcomps
xchg
cmp
arpl
cmpsl
push
pop
les
aad
jp
push
and
cli
out
mov
xchg
jnp
fadds
icebp
inc
sub
sbb
sbb
mov
mov
cmc
lea
pop
ljmp
cmp
adc
stc
jmp
and
xor
and
daa
cmpsb
decb
testb
and
xchg
inc
cmpsb
xchg
sub
and
cmpb
fdivrs
out
repz
push
jns
addb
dec
pushf
mov
and
mov
ja
int3
mov
in
add
out
scas
cmp
add
lret
jne
pop
xchg
repz
ja
push
into
mov
dec
je
lods
jbe
add
lcall
loope
jp
jg
jmp
shl
mov
nop
mov
xchg
movsb
mov
mov
cmp
test
or
in
jae
pop
inc
lock
jo
popa
aas
pop
stos
cltd
insl
fldenv
fdivl
xor
pop
les
gs
orb
cmp
inc
xchg
inc
testl
ficomps
jecxz
or
mov
addl
push
jp
pop
mov
pop
in
lds
fdivs
sub
push
insb
mov
cs
popf
pop
cmp
sub
into
addb
lahf
fcomps
xchg
gs
fimull
push
int3
cld
les
dec
inc
push
inc
imul
add
xor
shrl
mov
jns
jmp
cmpsb
push
sti
lods
out
mov
add
dec
stc
test
pusha
stos
push
stos
mov
dec
sahf
fmull
dec
or
imul
pop
and
adc
mov
fwait
in
adc
xor
adc
pop
jo
test
pop
sahf
pop
loope
push
int3
repnz
push
cli
jmp
out
outsb
pop
and
stos
xchg
dec
fnstsw
lea
mov
mov
int3
in
mov
jmp
mov
jbe
mov
cwtl
cltd
int3
daa
add
sti
loope
fs
in
test
enter
sub
adc
aas
lcall
sub
sub
cmp
add
jo
stc
adc
xchg
into
arpl
gs
or
stc
push
xchg
adc
vmread
cmp
lds
call
addb
adc
push
cwtl
mov
add
lds
sti
jns
cmp
js
and
push
enter
adc
pop
mov
insb
lock
notb
adc
test
cvtdq2ps
mov
repnz
int
mov
in
mov
data16
xor
xchg
jg
shr
jo
pop
sub
inc
arpl
lret
subb
loop
lods
adc
add
pop
add
inc
mov
mov
mov
test
and
cmp
cli
outsb
inc
mov
int
add
sub
sbb
inc
inc
inc
nop
enter
push
and
adc
test
jle
hlt
call
push
aaa
aam
xchg
cmpsb
fdiv
outsb
sub
int
adc
xchg
rolb
add
cmp
mov
adc
xor
nop
and
inc
and
lock
cmp
mov
arpl
pop
sar
imul
cmp
inc
cmp
xlat
iret
les
shrl
loope
fstl
sahf
pop
add
cld
or
mov
mov
push
lock
imul
sbb
xchg
rorb
out
ss
movsl
ret
out
add
orb
xchg
pop
outsl
in
daa
popa
les
andb
jl
pusha
mov
lret
fstpl
movsb
jno
xor
xchg
inc
lea
cmc
out
and
jmp
mov
pop
sub
arpl
adcl
jmp
mov
lahf
int3
mov
imul
pop
in
jge
sub
pcmpeqw
dec
add
loope
test
jl
mov
pusha
insb
pop
mov
in
xor
mov
ljmp
mov
enter
insb
aad
in
and
les
mov
pcmpgtd
sbb
fcmove
sub
or
stos
mov
aad
pop
mov
std
lahf
mov
mov
lods
sub
jp
pop
leave
jnp
sbb
in
xchg
cmp
adc
fcompl
or
push
mov
stos
fnstsw
daa
rorl
imul
aad
fidivrs
xchg
jae
outsl
jns
adc
inc
sbbl
jecxz
lock
shrb
repz
pop
int3
cmp
mov
pushf
adc
pushf
push
test
dec
cli
out
sub
add
lds
add
stc
shlb
in
cmp
pop
pop
sub
push
pushl
mov
pop
sub
cltd
fsts
sbb
pop
imul
xchg
lahf
outsl
rorb
mov
lods
pusha
push
and
mov
sub
sub
xchg
push
cmp
cs
lea
fstps
fimuls
mov
push
inc
cmp
fstps
fisubrs
mov
inc
fld
hlt
ret
push
fildl
aas
aaa
ljmp
aam
sbb
pop
ficoms
out
arpl
lcall
pop
or
data16
divb
pop
adc
push
das
cmp
lahf
sti
and
mov
je
xlat
movsb
daa
fs
lret
jg
sbb
loopne
xor
mov
xchg
pop
fsubrs
pop
outsl
pushw
imul
or
cld
cmp
mov
adc
mov
pop
dec
sti
jecxz
push
cmpsb
inc
add
or
enter
cmp
sbb
stos
stc
add
fstpl
mov
shlb
out
and
insb
test
pushf
mov
cmp
add
bound
test
rcll
adc
iret
lds
insl
pop
aad
test
pop
les
fildl
xor
xor
test
leave
cmp
cvtpi2ps
ficompl
jns
mov
pop
pop
cmp
sub
pop
adc
mov
mov
daa
sub
test
jmp
test
dec
jo
outsl
cmp
ficoml
rolb
xchg
idiv
pop
jae
rorl
xchg
rcrb
hlt
add
inc
jmp
aad
jno
or
cmp
iret
pop
xor
xlat
jo
sti
call
mov
fisubs
mov
mov
mov
fsubr
mov
add
hlt
mov
sbb
jbe
mov
sub
aam
fwait
pop
lea
aaa
mov
pop
shlb
das
subl
or
pop
xchg
cmp
mov
mov
pop
popa
mov
push
xor
in
mov
shll
and
dec
loopne
ss
setg
cmp
leave
mov
inc
movsl
sub
fwait
mov
sti
push
pop
repnz
pushf
mov
outsl
xchg
cmp
inc
mov
or
jge
addr16
int3
inc
add
push
int
mov
push
out
ds
jne
sbb
mov
jl
dec
shlb
movsl
xlat
imull
sub
repz
jl
adc
xchg
sub
lret
pop
and
sub
or
push
mov
push
nop
jle
xchg
lods
sub
into
int
inc
and
fdivrl
or
in
mov
pop
sbb
or
aam
jmp
dec
loopne
stos
sbb
xchg
pop
mov
jbe
jns
rcl
mov
or
adc
imul
and
mov
jne
jae
fnstcw
add
and
xor
imul
pop
movsl
aam
loopne
mov
pop
pop
and
pop
add
insb
lret
test
fwait
movsb
jg
jle
test
enter
ret
add
loop
inc
imul
push
in
sub
imul
fsubl
gs
test
push
std
arpl
rclb
imul
jno
jp
test
jmp
pop
xchg
pop
das
adc
mov
dec
addb
add
mov
jecxz
scas
push
push
jg
pushf
jecxz
sbb
mov
aam
nop
xor
sub
or
adc
xorb
adc
mov
cli
dec
xchg
jmp
loopne
or
inc
inc
push
dec
xchg
test
inc
data16
xchg
out
decl
loope
sub
xchg
outsl
sbb
clc
mov
push
add
dec
popa
pop
jmp
rcrl
dec
stc
push
addr16
mov
push
mov
addb
out
add
sar
or
std
test
fsubs
push
pop
rol
cmp
xor
dec
push
lcall
cmp
cli
addl
jp
inc
stos
dec
in
sub
sub
sub
sub
mov
push
shll
add
inc
popf
pop
es
pop
xor
pop
ficompl
arpl
mov
jnp
mov
sub
adc
jg
push
fwait
pop
icebp
inc
mov
adcb
gs
imul
adc
xlat
lcall
cmp
in
flds
push
aad
ja
pop
jno
inc
jl
inc
repnz
sub
ret
shlb
mov
enter
scas
push
lldt
lods
push
dec
xor
and
not
mov
jnp
push
push
ja
dec
js,pn
sub
jle
mov
xor
imul
sbb
pop
cmpb
sub
out
jns
or
dec
jo
push
jno
push
out
xor
and
lds
push
sub
shrl
rorl
out
cmpsl
insl
mov
mov
or
dec
jmp
push
dec
icebp
pushf
aam
jnp
outsb
push
hlt
mov
icebp
inc
mov
ret
sti
mov
jge
sub
and
ds
jns
pushf
lds
fwait
ss
into
adc
iret
rcrl
adc
inc
sahf
jg
lahf
mov
mov
aas
cltd
pop
jg
fimuls
and
iret
adc
sbb
push
xchg
popa
or
or
adc
nop
push
or
orl
and
cltd
std
testb
inc
scas
outsl
fidivs
xchg
ficomps
sub
xchg
jp
aam
cltd
jp
ficompl
mov
jnp
dec
mov
and
cs
jg
cmp
lods
pop
int3
in
rorl
jns
stos
dec
jmp
push
fimull
push
iret
sbb
and
ficompl
push
pop
adc
std
pop
jmp
pop
sahf
dec
xor
lcall
fdivl
push
inc
shl
inc
add
fidivs
out
mov
pusha
cld
lods
testb
mov
cmpxchg
lahf
xchg
outsl
scas
push
dec
pop
mov
and
jl
rol
fs
cmp
inc
in
mov
xorl
clc
push
push
cwtl
movsb
jb
fidivs
and
pop
imul
out
or
movsb
js
jg
mov
pop
xchg
jnp
push
dec
imul
inc
pushf
sarb
daa
jbe
pop
mov
mov
add
gs
arpl
into
inc
icebp
jl
insl
push
int
xchg
int3
jl
xchg
push
xor
mov
sub
lret
or
data16
sahf
adc
add
add
loop
lods
divl
pop
ja
add
xchg
xchg
sbb
push
push
std
xchg
fldl
imul
jne
mov
leave
pop
call
push
hlt
xchg
out
add
jb
lret
in
adc
jmp
mov
int
fnstsw
rolb
test
sub
repnz
test
aaa
popa
outsb
add
pop
sbb
xor
bound
imul
sbb
cmc
je
pop
mulb
fyl2xp1
inc
jle
cwtl
adc
dec
mov
or
xchg
xor
add
in
movsl
seto
and
cmp
out
push
add
adc
or
adc
push
popf
dec
pop
jecxz
bound
cmp
lcall
xor
inc
mov
in
iret
cwtl
mov
inc
sbbl
or
xor
aam
test
aas
ja
fldcw
pushf
push
mov
sub
add
test
mov
clc
mov
xor
dec
sub
sub
lods
sub
mov
out
std
enter
in
sub
ds
mov
adc
and
loope
push
in
jne
cmp
notl
aas
mov
dec
les
sbb
rorb
mov
pushf
and
mov
mov
push
or
test
pop
cmp
popa
pop
xor
int3
xchg
cld
mov
movsb
std
arpl
and
test
mov
loope
mov
loope
dec
cmp
mov
adc
pop
cwtl
and
int3
dec
sbb
push
jbe
int
cs
fwait
sub
lods
sbb
and
loopne
loopne
sbb
jmp
fwait
mov
xor
pop
jge
xor
xor
fs
mov
js
fsubr
nop
mov
pop
xchg
pop
leave
cmp
xor
xor
imul
outsb
rcl
jae
aaa
jp
loop
push
mov
popa
jb
sahf
push
lret
mov
enter
into
mov
into
sbb
and
pop
fnstsw
cli
mov
stc
cmc
jmp
sbbl
push
dec
pop
call
clc
jge
lret
gs
call
add
jns
ret
dec
push
sub
icebp
in
jecxz
loop
stos
cmpsb
and
jmp
inc
fnstenv
inc
mov
pcmpgtw
jae
cmp
enter
inc
jnp
test
mov
inc
scas
mov
aas
inc
jae
bnd
dec
sub
xor
addr16
imul
sub
add
int3
cmp
and
xor
ret
lea
cmove
lock
cmp
push
xor
mov
dec
add
aaa
xchg
pop
pop
push
and
fistpll
pop
push
or
push
loopne
test
fdivrl
jo
shrl
inc
jns
lret
xchg
sub
int3
loopne
or
testb
stc
inc
inc
fwait
test
dec
pusha
pop
sbb
insb
loope
aam
xchg
gs
pop
lock
adc
mov
mov
inc
mov
and
dec
gs
jge
sub
adc
imull
add
mulb
mov
jno
cltd
ret
dec
shrl
push
pop
js
mov
cmc
ret
hlt
rcr
dec
add
js
ljmp
mov
popf
shrl
xor
cld
mov
pop
std
xchg
pop
icebp
xchg
cmp
loope
mov
mov
popf
and
ljmp
movsl
or
inc
xor
mov
outsl
popa
xor
push
mov
dec
sarb
jbe
scas
or
xor
aam
test
cld
mov
out
fwait
or
xchg
imul
push
jnp
lret
mov
jo
mov
pop
imul
mov
dec
cltd
mov
mov
addr16
add
cmp
xor
mov
add
test
inc
loop
test
sbb
in
inc
mov
in
pop
cmp
arpl
cmc
push
adc
leave
into
sub
or
dec
repnz
stos
imul
movsb
xor
test
outsl
jne
icebp
mov
lods
mov
jb
pusha
andl
xor
cli
fwait
pop
mov
mov
daa
stc
lret
stos
imul
mov
pop
push
add
mov
fistpl
pop
or
cli
hlt
mov
mov
adc
inc
jb
and
les
xorl
mov
clc
lds
jae
out
sti
inc
xlat
test
xchg
mov
or
inc
mov
mov
and
or
ljmp
sbb
jae
std
daa
mov
adc
mov
mov
mov
jge
jmp
sbb
aam
or
movsb
mov
push
pop
cmpl
aam
enter
cmp
scas
jp
and
mov
push
lds
std
insb
sti
dec
stos
clc
cmp
sub
outsl
aad
stc
jecxz
xor
sbb
flds
imul
shlb
jecxz
addr16
orb
fs
adc
gs
negb
nop
adc
in
rorb
mov
xchg
jb
pop
sti
cli
xchg
mov
inc
inc
loopne
push
sub
dec
sub
call
loope
out
mov
popf
stc
out
ss
cmp
and
pop
shrl
notb
jbe
shl
push
cmp
xchg
dec
stc
mov
or
cmpsl
push
cli
ss
ja
lods
pusha
cld
add
adc
xor
jbe
out
stos
ss
pop
xchg
sbb
or
xor
push
jecxz
xchg
push
mov
adc
pop
lods
ret
fnstcw
clc
ss
pop
cmp
add
mov
in
add
xchg
push
cmp
lock
arpl
jecxz
mov
iret
lret
push
nop
mov
aam
or
shrb
in
dec
rcr
jnp
dec
out
mov
cmpsl
rcrl
sbb
pop
jae
xor
mov
inc
xlat
mov
js
push
pop
int3
fidivrl
outsl
xchg
movsb
mov
xorb
stos
stos
sub
rorb
mov
adc
outsl
xlat
mov
jmp
int
rcr
out
bound
adc
cs
push
incb
loopne
adc
cmp
iret
sub
repz
fistpl
dec
inc
and
push
lods
and
repnz
movsb
fwait
icebp
popa
and
push
mov
mov
lods
cmpsl
or
addb
or
aam
mov
inc
scas
imul
arpl
test
cmp
dec
adc
cld
pushf
or
xor
enter
sbb
xor
xor
push
mov
cmpsl
inc
adc
lahf
aaa
movsl
dec
mov
dec
rcrb
daa
stos
jecxz
jmp
jns
push
and
aam
stos
cltd
inc
sbb
xor
and
jae
mov
sbb
test
or
jb
dec
in
insb
je
sbbl
insb
sbb
into
pusha
jns
xor
adc
mov
sub
aam
mov
sbb
pusha
cmc
fsub
pushf
add
popa
or
push
arpl
outsb
stc
and
addr16
sub
lea
sbb
cmpsb
sbb
scas
xchg
stc
adc
imul
cmp
insl
scas
mov
jne
mov
sub
repnz
mov
movb
aad
subl
leave
and
sub
out
clc
sbb
shrb
inc
add
stos
cmc
mov
hlt
aaa
add
shlb
lock
in
movsb
lcall
fst
adc
xchg
adc
loop
add
xlat
nop
loop
sub
cmpsl
hlt
jg
shll
sub
mov
iret
cmovle
dec
das
sub
jno
mov
decb
cmp
cmpb
pop
or
cmp
jae
push
adc
orb
mov
insb
push
adc
push
mov
dec
cmp
push
cmpsb
jmp
xchg
test
jmp
hlt
pop
inc
inc
adc
sbb
adc
divl
repnz
cmovae
cmpsb
int
push
add
mov
push
dec
and
mov
ds
add
test
lds
mov
fiadds
pop
mov
mov
je
mov
mov
sbb
mov
lods
jbe
aad
mov
fisubrl
mov
or
dec
shlb
fidivs
mov
push
ds
push
jbe
stos
mov
clc
call
or
rclb
adc
cli
mov
imul
inc
mov
xor
mov
dec
add
inc
push
inc
call
mov
adc
push
scas
push
or
in
cs
add
mov
repz
sti
jg
and
push
inc
dec
pop
je
jecxz
inc
cmp
cmp
divb
xorb
outsb
test
jmp
subb
shll
mov
dec
xor
cmp
xor
xchg
sbb
push
mov
insb
lods
jmp
pop
sub
insl
xor
fnstcw
andl
lods
adc
xchg
aam
fucomip
jecxz
cmpsb
insl
fmul
mov
inc
pop
lods
push
repnz
xchg
shlb
pusha
into
cmc
jbe
std
repz
mov
ret
and
ret
aam
mov
mov
pop
stos
mov
inc
pop
in
in
lcall
das
or
dec
testb
or
xchg
jmp
jecxz
mov
filds
xchg
jne
out
sbb
dec
daa
stos
lock
pop
cmpsb
xchg
ss
imul
cmp
movsb
and
and
daa
mov
mov
imul
scas
jp
adc
adc
movsl
jae
into
jmp
and
sbb
or
or
add
push
sbb
xor
mov
sahf
and
jno
mov
lret
test
inc
cmp
loope
andb
jecxz
jecxz
jmp
out
fdivl
fcompl
frstor
mov
ret
ret
repnz
leave
call
mov
mov
lahf
mov
jno
mov
pop
mov
dec
cwtl
xchg
cmp
mov
lods
lods
inc
daa
jnp
ss
push
jp
pop
sub
cs
setle
mov
pop
gs
outsl
test
das
jp
or
jb
fistl
loopne
shr
stos
push
cli
lahf
jle
xor
cmpsb
xor
pop
cmp
sti
mov
jg
sub
or
jae
pop
xor
add
lcall
adc
push
mov
xchg
movsb
pushf
dec
cltd
dec
dec
cld
daa
add
pop
test
je
outsb
or
dec
rcrb
loopne
std
lret
lods
add
xchg
sbb
hlt
pop
push
and
sub
test
stos
pusha
sub
push
pop
bnd
cli
pop
jno
pop
les
push
add
jp
pop
rcrl
sbb
test
les
out
fbld
mov
dec
or
jno
popa
popa
jl
fisttps
xchg
mov
xchg
mov
ss
icebp
xchg
push
shr
hlt
push
roll
fnstsw
mov
add
mov
les
and
xchg
ficoml
ss
addr16
jl
sub
test
push
lcall
mov
out
xlat
das
dec
xchg
fs
xchg
jp
cmp
jg
enter
mov
adc
test
call
aad
or
inc
rcrl
and
mov
adc
sbb
jo
push
cld
stos
xor
fidivrs
stos
inc
imulb
or
insb
call
xor
mov
mov
dec
inc
xor
mov
adc
ret
invd
popf
push
add
mov
jg
mov
aad
add
icebp
ds
andl
aam
inc
push
fisubs
inc
jbe
arpl
adc
adcb
add
cltd
mov
loopne
ss
dec
iret
mov
dec
sub
jecxz
push
in
mov
add
push
insb
push
xor
std
adc
xor
das
lcall
sbb
xchg
cmc
loopne
das
dec
jecxz
mov
aas
jno
sub
pop
or
mov
sbb
hlt
fnstsw
mov
and
pop
icebp
jnp
mov
cmc
ja
jns
mov
nop
jp
add
cltd
mov
sub
xchg
adc
or
pop
mov
pop
fwait
cwtl
adc
jecxz
addr16
mov
aas
inc
sbb
cmpsb
adc
jmp
pop
pop
push
sbb
xor
cs
scas
cmc
push
inc
xorl
pop
xchg
fidivrs
push
dec
and
jne
repz
lret
xchg
sbb
add
iret
mov
sar
pop
mov
xchg
xchg
mov
inc
inc
loopne
loope
add
push
and
je
mov
mov
lds
loope
mov
mov
cmp
leave
repnz
jne
jae
xor
jae
xchg
mov
push
outsl
fists
sbb
rorl
es
or
ds
jl
outsb
insl
cmp
mov
xor
adc
ficoms
lea
cli
and
cmp
int
sub
repz
sub
and
jb
incl
pop
call
fldl
shll
test
and
xor
test
pop
adc
adc
gs
scas
sbb
out
aam
test
push
repnz
dec
or
outsl
jp
cmp
in
pop
push
inc
mov
call
lods
sub
pop
adc
gs
data16
dec
sbb
cmpb
shrl
fwait
repnz
adc
rcll
rorb
mov
jecxz
pushf
out
sub
adc
popf
fwait
clc
mov
std
fisubl
mov
pop
cmp
adc
pop
jge
leave
bound
idivl
rol
xor
xorl
mov
test
xchg
in
pop
lods
inc
out
sahf
xlat
dec
inc
loope
orb
adc
adc
enter
aas
ljmp
ljmp
mov
call
inc
mov
prefetch
or
mov
mov
out
pop
mov
std
test
mov
push
mov
sbb
jo
test
xlat
push
mov
jp
cmp
adc
fwait
add
clc
shlb
xchg
sub
mov
inc
jle
xor
movsl
jns
mov
mov
sbb
or
mov
sbb
sahf
notb
dec
pop
mov
and
jge
mov
addl
add
dec
push
imul
daa
lods
adc
mov
pushf
mov
shrb
mov
stc
scas
and
and
pop
arpl
lea
in
adc
adc
call
adc
outsl
add
push
xchg
xor
lods
addr16
xchg
mov
pop
lahf
dec
xchg
push
mov
pusha
xor
sub
cmp
fstp
mov
lods
inc
jp
jle
xor
dec
inc
mov
cmp
xor
ret
pop
or
adc
or
jne
stos
dec
fwait
mov
jns
js
cmp
int
jle
dec
jp
insl
push
xchg
pop
mov
mov
sub
xchg
cmp
push
mov
movsl
mov
push
or
fs
gs
dec
pop
stos
push
imull
mov
add
pop
lret
fs
push
mov
xlat
outsl
push
and
loopne
rorb
add
mov
push
enter
mov
addr16
aam
les
aad
xchg
aad
pop
ret
nop
sub
lods
inc
fwait
not
pop
vmaxps
pop
push
je
outsl
lret
stos
stos
lret
push
or
xrelease
inc
aam
fsubp
lods
mov
ficoms
and
jno
dec
leave
and
mov
repz
hlt
nop
cmp
sbb
cld
sub
mov
xchg
bound
in
pop
daa
ffreep
lods
jno
push
xchg
icebp
adc
dec
ljmp
mov
popa
push
cmp
int
or
repnz
addl
imul
add
lods
cmp
cmp
flds
xor
movsl
inc
lcall
fistl
jno
and
cmp
pop
movsl
lea
inc
mov
rcll
popf
in
and
push
cltd
adc
insb
lcall
in
dec
cmp
movsb
repz
xor
sahf
es
arpl
xor
cmp
pop
push
leave
push
mov
push
out
inc
inc
sbb
fwait
xlat
jg
jge
fs
loopne
and
mull
adc
movsb
or
sbb
adc
xor
outsb
xchg
sbb
mov
cmp
push
or
add
xor
adc
xchg
push
out
pand
xor
sti
mov
test
and
int
xlat
in
dec
pop
incb
clc
pushf
sti
icebp
adc
push
imul
ret
mov
sbb
clc
sub
sti
inc
in
jne
popf
mov
daa
mov
inc
xor
hlt
cwtl
adc
lret
mov
data16
ja
ds
jge
out
inc
aad
mov
cmp
cli
cmp
int3
arpl
jge
fidivl
cmpsl
idiv
jecxz
ja
sub
js
pop
je
out
push
loop
cld
cmp
sub
mov
pop
les
and
sbbl
sbb
clc
push
xor
lods
xchg
cmp
stos
sbb
ss
inc
lea
cmp
clc
fwait
dec
aad
xor
jmp
push
adc
push
mov
mov
mov
jle
hlt
sub
stos
push
xchg
movsl
xchg
mov
orl
xlat
mov
mov
scas
lods
push
or
mov
ret
jbe
fcmovne
dec
lret
mov
out
sbb
scas
ja
push
jae
xor
imul
rolb
push
add
or
in
ja
push
pop
ret
and
mov
xchg
gs
cmp
fwait
sarb
pop
jge
fsubrl
and
ficomps
popl
movsb
int3
add
cmc
xor
cmp
xor
rorb
daa
dec
loopne
jg
jno
outsl
lods
push
test
and
negb
flds
fdiv
sbb
ja
je
and
in
push
jp
fldenv
cmp
mov
sahf
xchg
les
sub
js
pusha
lret
jge
rcr
mov
in
leave
roll
xchg
pop
lods
arpl
jo
sub
cld
pop
in
cmp
xchg
outsb
les
add
cmc
mov
xchg
push
inc
lock
mov
add
shrb
ja
mov
std
pop
mov
ret
jg
fs
mov
jbe
pop
push
and
inc
jo
cmp
int
sub
and
lcall
sbb
in
addr16
push
imul
lcall
outsb
sub
mov
enter
daa
loopne
insl
push
icebp
insb
daa
mov
mov
andl
dec
adc
push
icebp
repz
mov
mov
leave
cmp
sub
enter
rcrl
xor
loope
jb
inc
dec
and
std
mov
js
dec
mov
pop
enter
sub
dec
lcall
insb
sbb
adc
inc
mov
inc
call
mov
fisubrs
popa
pop
pop
int
add
dec
push
fsts
out
lods
jb
xchg
insb
or
inc
xor
pop
push
jp
and
outsl
sbb
shl
es
xchg
mov
idivl
mov
lahf
cmp
fiaddl
pop
inc
fimull
imul
mov
pop
inc
xlat
arpl
xor
adc
icebp
xorb
cmc
jp
fsubs
jle
jg
dec
and
pop
jne
or
gs
test
dec
jb
mov
mov
cltd
mov
mov
dec
insl
push
and
testb
mov
mov
ljmp
add
adc
hlt
jae
jb
into
sbb
mov
jno
notl
adc
mov
sbb
xor
mov
mov
sbb
cwtl
cmp
adc
scas
sahf
jnp
testb
push
mov
pop
ret
subl
movsl
rcll
mov
push
loop
jmp
pop
scas
loope
test
dec
push
stos
scas
leave
lret
push
adc
cmp
jbe
push
mov
les
fsts
xchg
pop
int3
fldl
aas
leave
and
aad
mov
dec
adc
lahf
cltd
test
xchg
inc
mov
pop
inc
shrb
jbe
cmp
into
fdivrl
popf
cmp
mov
pop
repz
test
movsb
xchg
pop
cmp
stos
loope
ret
sub
test
daa
jne
cs
enter
push
and
mov
iret
pop
orb
xor
or
jnp
jl
stos
and
cmpb
movsb
incb
mov
fmull
xor
fwait
and
ficoml
ss
xchg
cmp
fisubs
mov
sub
xor
popa
mov
xchg
push
inc
adc
inc
jl
inc
sti
fstpl
xor
dec
insb
jl
sub
loopne
shlb
mov
scas
mov
out
adc
dec
dec
daa
lahf
dec
cmpsb
popf
pop
push
insb
jge
dec
and
ja
movsl
cmp
sbb
xchg
test
pusha
fimull
test
mov
std
cmp
mov
or
jae
jecxz
imul
inc
testb
and
imul
pop
rcrl
test
js
out
loope
arpl
add
jb
add
add
scas
fnstcw
mov
jp
outsb
fdivs
push
adc
xor
popf
inc
repz
addr16
loope
push
stos
xchg
cmc
xchg
sub
cmp
sub
push
pop
insl
std
mov
jle
jne
stc
adc
push
stos
jnp
lcall
jle
jmp
ret
sbb
data16
mov
xor
aas
pop
jnp
dec
js
imul
insl
aaa
data16
mov
mov
mov
addr16
insl
pop
std
cmpb
xor
call
subl
fwait
mov
xor
adc
shlb
dec
loope
std
repnz
enter
xor
inc
mov
mov
aam
inc
lds
sbb
ljmp
into
and
push
push
xchg
xlat
xchg
in
les
rol
jp
imull
into
pop
dec
ja
xor
inc
add
jecxz
sbbb
xchg
mov
cli
je
inc
rcrl
imul
loop
leave
mov
jmp
frstor
fldenv
push
cld
or
push
push
push
push
test
daa
cmp
daa
inc
nop
mov
fwait
mov
int3
lret
call
divl
xchg
in
scas
je
mov
sbb
sub
es
in
jl
sub
cmovno
fsub
lahf
xchg
call
sbb
dec
pop
fldenv
sti
xor
inc
xor
inc
cmc
pop
jae
mov
cmp
mov
imul
push
repz
mov
es
iret
cltd
mov
aas
into
mov
jns
sbbl
mov
sahf
lock
adc
js
mov
push
mov
stc
pop
sub
sti
loop
dec
or
cmp
dec
xor
mov
andb
mov
das
mov
popa
in
lock
iret
mov
inc
cmp
mulb
add
cs
rcl
movsl
lcall
and
fidivl
sbb
mov
pop
mov
test
sub
out
jmp
addr16
js
pop
mov
hlt
push
cmpsb
lahf
data16
jmp
bound
adc
inc
or
in
int
pop
inc
push
fisttpl
orl
lods
insb
push
cmp
popa
mov
mov
lret
push
lret
or
ret
dec
out
and
jne
out
mov
push
push
lahf
mov
nop
ret
jbe
fisttps
sbb
mov
fs
out
leave
add
repz
sahf
push
mov
std
mov
bound
jg
in
test
je
imul
pop
rep
mov
dec
loope
pop
mov
das
insb
je
and
cmc
xchg
movb
mov
push
mov
sub
inc
mov
fmuls
enter
xchg
hlt
pop
cmpsl
out
out
fimuls
fmull
aam
loop
leave
jo
add
adc
leave
fbld
mov
push
or
shrb
and
pop
cmpsb
adc
push
push
push
cs
mov
lock
into
pop
call
je
sub
outsb
ds
push
bound
in
mov
xlat
pusha
mov
xor
in
filds
xchg
mov
in
dec
out
pop
mov
mov
adc
fisttpl
subl
dec
fildll
shlb
dec
pop
inc
lret
mov
pop
xlat
stos
ss
and
jne
add
and
cs
mov
rol
fimuls
mov
je
ja
testl
inc
or
inc
leave
inc
cmp
jo
sub
icebp
cmp
push
testb
push
cmpsl
dec
notb
adc
hlt
mov
shrl
push
cmpsl
leave
shll
pop
pop
popa
inc
in
rol
or
jbe
mov
insl
adc
dec
inc
push
in
jnp
cmp
mov
push
xor
sbb
inc
pushf
outsl
repz
cli
xor
push
push
xor
rcr
or
sub
mov
out
xor
fstpl
daa
and
inc
insb
fwait
outsb
sbb
push
pop
adc
cltd
adc
add
xor
push
fimull
push
repnz
arpl
jae
mov
mov
xchg
xlat
adcb
clc
mov
mov
sbb
xor
dec
add
js
call
sbb
ljmp
shl
fsubl
push
add
jno
and
add
xchg
icebp
mov
dec
roll
das
fmuls
orb
mov
adc
sub
das
icebp
lcall
jle
pop
ret
pop
xchg
cmpsb
mov
in
cld
ret
nop
inc
jmp
gs
jmp
cs
push
stc
lea
mov
pop
xlat
adc
aas
stc
stos
cmc
or
bound
pop
je
fstp
mov
jge
out
xchg
dec
xchg
xchg
sbb
pop
add
jecxz
fwait
jae
aad
shlb
pop
pop
add
leave
rcrb
cwtl
test
jmp
jo
xchg
imul
lret
js
scas
jnp
cmp
push
lds
lea
or
packuswb
incb
int3
std
inc
aas
fdivr
leave
aas
dec
push
outsb
mov
leave
sub
movsb
push
loope
adc
jmp
pop
mov
jae
sbbl
cs
or
jnp
push
mov
xchg
add
es
xorl
ja
inc
lret
push
ret
or
mov
and
mov
out
push
fiaddl
dec
jl
mov
pop
or
outsb
mov
cs
push
lret
jo
in
pop
enter
daa
shrb
mov
dec
fmuls
jg
into
pop
fdivs
stos
inc
inc
mov
mov
jecxz
repz
mov
ss
fwait
loope
mov
cltd
fsubrs
outsb
dec
ja
mov
push
test
outsb
dec
dec
jmp
stos
and
adc
xchg
and
lcall
push
xchg
inc
aaa
jle
adc
dec
out
repz
mov
push
jb
fs
sbb
aam
adc
cmc
jl
inc
arpl
enter
jp
pop
push
sti
jg
fsubs
loope
aaa
mov
mov
xchg
lock
cmp
addb
xor
sub
daa
sub
mov
repnz
sub
cmpsb
inc
cmp
outsl
sbb
stos
mov
pop
pop
jae
xchg
sbb
jo
lret
lock
adc
fstpl
cld
stos
jbe
test
xor
inc
stc
xchg
repnz
addl
jno
sub
push
fistl
jae
xchg
sbb
mov
rol
mov
mov
and
xchg
mov
ljmp
in
imul
es
dec
pop
divl
cli
pusha
lcall
into
sub
loope
pop
jns
mov
pop
inc
pop
scas
mov
push
mov
push
xlat
insb
cmp
push
repz
mov
inc
jb
push
and
and
jns
fidivl
inc
inc
xchg
and
jmp
xlat
out
fadd
sbb
cmp
shr
xor
mov
pushl
xchg
outsl
jp
xchg
daa
add
jb
roll
fidivrl
fsubrp
jno
push
and
outsl
pop
popf
sub
ds
fs
jo
lahf
or
jl
or
stc
pop
pop
adc
repz
push
stc
mov
push
jmp
ss
xchg
add
sub
cmovg
xor
mov
and
jb
push
adc
add
mov
sbb
push
add
std
push
pushf
mov
stc
inc
mov
add
flds
jbe
jecxz
push
jo
mov
cs
push
rorb
mov
std
es
arpl
sti
add
loope
stc
mov
or
bound
sub
out
iret
inc
or
xchg
ret
jo
in
mov
int3
daa
mov
lods
sub
dec
cmpsb
iret
cli
test
xor
or
mov
les
or
lret
mov
rclb
call
jl
jecxz
mov
gs
sbb
xor
jb
popf
mov
push
mov
iret
inc
mov
jo
sub
and
in
add
int3
jbe
out
jno
in
jno
das
idivl
cmpsb
inc
dec
ss
and
or
mov
aam
mov
cmc
sbb
addr16
popa
test
testl
dec
in
add
mov
inc
adc
data16
or
ficoms
mov
xchg
mov
int3
gs
es
inc
jp
out
shrl
mov
ljmp
jmp
xor
sbb
pusha
mov
or
mov
out
icebp
push
push
mov
pop
mov
pop
lock
cmp
stos
xor
sti
mov
and
pop
ficoml
loop
inc
push
jmp
bound
or
add
movsb
cmp
and
jg
push
and
ds
insl
ret
inc
ss
xchg
out
daa
into
add
adcl
idiv
js
jnp
jnp
shll
shr
xchg
and
jecxz
inc
imul
jp
cmp
stos
jle
cmp
aad
jae
add
adc
das
lea
mov
lahf
fs
push
push
jne
sarb
pushf
adcb
stc
pop
mov
mov
xor
push
jge
cs
imul
adc
pop
jecxz
fstpt
or
mov
mov
mov
out
mov
imul
ret
ret
incl
loopne
lcall
jae
or
add
inc
adc
inc
lock
push
mov
scas
push
xor
icebp
imul
xchg
or
pop
and
add
shll
enter
pop
mov
pop
call
lea
dec
sub
iret
adc
in
jp
in
dec
sbbb
ds
cmc
push
dec
xlat
xor
dec
and
push
mov
sub
movsl
mov
movsb
mov
mov
into
sub
ret
jecxz
movsl
cli
clc
pop
sub
mov
out
push
iret
adc
ljmp
dec
sub
mov
push
popf
dec
test
sbb
xchg
sbb
cs
shlb
shlb
int3
ja
rcrl
frstor
inc
lods
pop
lcall
xlat
lcall
adc
mov
lods
subl
jl
mov
jmp
lret
and
push
rcll
pop
push
mov
adc
inc
fdivp
arpl
andl
inc
pop
lea
jp
xorl
and
repz
aaa
xor
lret
aas
pop
insl
xchg
ret
mov
push
mov
and
into
sbbb
leave
push
ret
adc
dec
add
fsubl
inc
iret
inc
movsl
cmpl
inc
jl
sbb
rcll
fnstenv
dec
shll
div
and
jmp
leave
dec
cmp
mov
jae
mov
loopne
dec
cmp
imulb
mov
lahf
jb
scas
sarl
sbb
sti
fwait
ds
sbb
lahf
bound
rcrb
inc
and
popf
adc
hlt
scas
mov
data16
gs
push
inc
jo
mov
jg
ljmp
loope
cmc
jmp
push
adc
dec
mov
cmp
or
and
mov
push
pop
ljmp
lcall
sbb
sub
inc
jle
dec
mov
test
out
and
mov
lcall
fiadds
mov
inc
daa
cltd
iret
mov
mov
or
mov
addb
push
lea
xchg
xchg
cltd
stos
into
push
pop
add
lea
cmc
push
jmp
sub
or
int3
dec
xor
roll
lcall
cmp
inc
dec
fistpl
add
stos
cmp
call
loope
dec
out
ds
outsl
cmpsb
xchg
mov
mov
out
shl
push
in
aam
fists
adc
negb
lods
mov
inc
arpl
jnp
xor
das
mov
fnstenv
jno
fimull
aas
inc
inc
and
or
out
insb
inc
sub
imulb
pop
mov
mov
mov
loopne
andb
mov
pop
stc
dec
pop
aaa
sub
add
pmovmskb
jecxz
aas
outsb
scas
cmp
dec
dec
add
jmp
pop
call
and
sti
dec
jnp
pop
inc
shrb
pusha
not
mov
push
fsubr
jp
mov
cmp
mov
sbb
mov
jl
ljmp
fidivrl
inc
cmp
push
std
pop
mov
test
js
push
mov
ljmp
xor
cld
mov
clc
xchg
cmc
jns
cmc
cmp
movsl
cmp
push
loope
xor
cmpsb
adc
sub
pop
iret
test
push
fs
aam
outsb
in
call
fstpt
or
xchg
mov
push
fsubrl
pop
jb
testb
sti
and
pop
sbb
dec
sbb
sbb
je
jns
mov
aas
inc
fisttpl
pop
out
dec
insb
lcall
int3
push
sbb
shll
sbb
filds
mov
ficompl
adc
ret
mov
lret
addl
xchg
sub
mov
pushf
movsl
out
pop
inc
iret
pop
or
lret
int3
clc
and
cmp
ja
les
mov
dec
in
xchg
push
or
setne
cmp
fidivs
inc
jno
dec
cld
sbb
sahf
add
mov
and
ficoml
clc
mov
arpl
lods
faddl
ja
repnz
cmp
pop
jg
rcll
jp
mov
lahf
inc
push
dec
xchg
arpl
stos
xor
ds
xor
les
out
mov
lcall
insl
jmp
setbe
mov
mov
fdivl
sbb
les
adc
or
push
mov
vmwrite
sbb
sub
rep
fninit
mov
xchg
mov
stos
xchg
push
in
test
mov
or
hlt
into
mov
and
stos
sbb
iret
or
rolb
add
xor
cli
mov
dec
out
out
and
pusha
test
mov
push
cmpl
loop
xor
incl
mov
gs
sbb
aas
cmp
fwait
jecxz
jecxz
decl
adc
fistl
cs
push
out
adc
adcl
out
adc
xor
mov
test
or
push
sbb
test
lahf
pop
leave
cltd
cmp
rorl
test
cmpsl
and
inc
add
insb
aad
out
inc
xor
fstpt
jbe
call
sti
loope
pop
loopne
jb
jns
outsl
aam
and
push
imul
pop
inc
into
les
cs
add
add
ret
inc
sub
cmp
add
das
dec
aaa
pushf
inc
popf
cmp
and
xchg
setns
push
fisttps
lahf
xor
push
call
ror
fisttps
jb
push
shrb
cli
fistps
movb
cmp
ret
ja
xor
xchg
fildll
dec
and
jl
mov
or
mov
mov
iret
std
lods
jg
rcll
pop
fs
pushf
enter
mov
and
mov
fisttpll
mov
mov
lret
adc
xchg
leave
shll
test
jb
cltd
dec
mov
add
lcall
xchg
js
xor
adc
push
fildl
mov
in
es
lahf
test
repnz
scas
and
mov
xchg
in
jmp
adcl
fwait
mov
into
inc
leave
rorl
aad
stc
loope
cwtl
cmp
pop
jp
jnp
test
lds
mov
sbb
cmp
nop
ss
jne
aad
mov
and
cmpsb
mov
pop
repnz
test
or
iret
rolb
cmp
push
cmp
into
pop
into
std
mov
aad
cmp
sbb
jge
adc
dec
or
fst
cmp
scas
pop
xchg
fisttpl
mov
sar
inc
mov
xor
mov
inc
cmp
repnz
outsb
aaa
icebp
cs
jmp
cmp
cmpsl
cltd
outsl
jne
std
and
cli
inc
push
inc
push
inc
jle
pop
inc
dec
dec
push
cli
cld
push
in
mov
mov
cmpsl
outsb
inc
shrb
jo
jle
inc
popa
cltd
pop
xchg
xchg
sbb
sbb
shrb
adc
lds
sti
inc
sbb
shr
mov
mov
sahf
mov
cmpsl
sub
inc
roll
mov
cmp
orb
int
sub
cmc
mov
mov
sub
or
lea
adc
scas
loop
mov
repnz
in
sti
cmpl
add
je
or
int
add
xor
pop
push
loopne
sbb
aaa
xchg
inc
and
xchg
jmp
sbb
xchg
cmpsl
mov
adc
ret
mov
ja
pop
pop
jne
cmpsl
cmp
ljmp
ss
int
xchg
mov
xchg
fs
mov
push
shrl
movsl
sbb
lcall
sbb
mov
test
and
cmp
sbbb
icebp
cmpsb
ja
ret
mov
jge
test
sub
sub
mov
fistpll
int3
add
enter
or
mov
stos
pop
pop
dec
nop
fisubs
dec
push
stos
push
and
pop
scas
je
push
mov
push
pop
xchg
fldt
push
imul
fisubrs
inc
add
imul
add
and
xor
jns
or
pop
xor
mov
inc
daa
out
push
faddl
fsubrs
jb
and
iret
mov
mov
add
cli
jno
dec
or
push
mov
imul
dec
js
inc
jbe
outsb
add
xor
adc
fsubl
xchg
dec
pop
push
ss
cmp
mov
das
fnstcw
ja
push
leave
and
dec
cmpsl
out
addr16
pop
cld
xchg
pop
push
mov
dec
xchg
dec
inc
addr16
jo
jp
negl
mov
inc
adc
sub
and
ja
sub
jecxz
popf
aaa
push
cmp
xchg
in
xor
adc
pop
add
movsl
jg
mov
fwait
enter
int3
inc
je
fs
loop
js
movsl
xchg
cmp
xchg
fsubl
aam
loopne
xchg
or
les
sbb
inc
jae
mov
inc
repz
jnp
aam
scas
sub
sub
cwtl
icebp
pop
push
sbb
ret
js
dec
jns
mov
pop
inc
cli
xor
call
shlb
data16
push
cwtl
outsb
mov
dec
push
mov
leave
repz
les
push
mov
movsb
push
mov
xor
pop
jnp
fdivp
xchg
mov
dec
pop
fwait
or
xchg
jmp
adc
push
repz
cld
daa
dec
loop
mull
stc
push
ja
and
cld
push
mov
adc
cmpsl
fbld
jne
jmp
bnd
movsl
dec
xchg
mov
ljmp
sub
pusha
popl
adc
rolb
or
sub
push
stos
inc
lahf
xchg
jg
pop
pop
cmp
jno
jl
std
aad
add
cmc
fisubrl
sub
and
sbb
and
xchg
xlat
dec
jecxz
jge
xchg
jmp
outsb
int
lods
and
cwtl
mov
in
jnp
dec
hlt
mov
xchg
les
popa
sub
leave
or
aaa
xchg
xor
data16
xor
lods
dec
int3
mov
push
cmp
dec
add
jne
inc
xor
xor
mov
pop
add
mov
jecxz
lret
outsb
add
pop
dec
sbb
xor
lcall
mov
xchg
cwtl
inc
js
xor
xchg
xchg
adc
xchg
inc
and
dec
loopne
ja
outsb
ljmp
xchg
loope
xor
in
jge
stc
out
dec
mov
pop
cmpsb
fistpl
jb
push
push
mov
mov
dec
mov
dec
leave
xchg
or
inc
lods
sbb
mov
iret
ja
dec
push
cli
xor
inc
sbb
iret
fwait
push
cmp
sbb
push
jge
imul
sub
incl
mov
repz
call
jmp
sbb
mov
ds
pop
push
sahf
xchg
sub
fbstp
clc
inc
lahf
and
popf
xlat
cltd
movsb
outsl
sahf
xchg
ret
fwait
push
fidivs
lds
inc
jno
pop
int3
sub
jecxz
and
fstpt
xchg
fcoms
push
inc
repnz
lds
jae
dec
cmp
aam
inc
inc
mov
xor
lahf
cltd
fisttpl
xor
sub
mov
in
lea
inc
addr16
push
sub
sti
into
jle
xchg
test
jbe
sbb
mov
movsl
xor
lds
or
xchg
pop
mov
mov
or
out
push
cld
mov
arpl
negb
hlt
sarl
imul
jnp
dec
xlat
mov
clc
dec
sarb
xchg
jge
hlt
movzwl
int3
lds
dec
call
jp
mov
add
stos
imul
inc
sahf
cmpb
dec
pop
pop
test
and
mov
cmc
cmp
pop
lret
mov
and
cli
stos
push
psubq
mov
movsl
or
inc
sub
xlat
inc
test
push
mov
sub
cltd
into
je
in
insl
dec
adc
sbb
out
lcall
stc
pop
jae
add
mov
shrl
xor
inc
cmp
and
cmc
add
mov
orl
iret
andb
movsb
xor
ficoms
dec
outsl
pop
jg
pop
inc
push
dec
jnp
ret
jne
aaa
jle
jns
push
mov
dec
loope
inc
les
and
and
mov
push
cmp
scas
jae
clc
rclb
pop
stos
mov
cmpsl
enter
xchg
je
stos
or
popf
repnz
cmp
pop
push
into
rolb
dec
repz
cmp
stos
and
lods
sahf
and
ljmp
mov
in
cli
out
xor
pop
jb
xor
das
testb
fdivl
xchg
sub
sbb
hlt
cmpsl
rcll
cwtl
push
push
add
and
xchg
mov
xchg
sbb
in
dec
inc
xor
shl
jbe
fidivs
imul
mov
mov
outsb
les
inc
fs
sub
sub
jge
xchg
xor
in
fstpl
push
movsb
pop
das
imull
lds
mov
push
out
and
mov
rorl
or
or
lods
sbb
test
gs
adc
sub
xchg
int3
popa
mov
fwait
aas
jnp
int
xor
fwait
xor
gs
repnz
insl
push
sub
ja
or
jbe
and
mov
in
xor
sahf
int3
add
ret
test
fiaddl
push
scas
stos
pushf
mov
test
and
subl
add
stc
fs
pop
sbbb
or
lcall
pop
inc
sub
jge
call
outsl
ds
adc
add
js
jecxz
sti
inc
jecxz
push
notb
lahf
incb
xchg
lcall
fisubrs
jo
decb
cltd
push
add
xchg
pushf
mov
insl
sti
lcallw
and
dec
imul
or
mov
gs
push
fiadds
cmp
mov
test
ljmp
loopne
dec
clc
in
stos
fistl
shll
or
mov
das
roll
sbbl
and
or
pop
sbb
sbb
fisttps
jle
adc
inc
xor
addr16
movsl
mov
xor
mov
stos
decl
imul
mov
mov
mov
test
jl
std
push
jne
jl
dec
test
rcrb
dec
mov
lods
pop
filds
call
in
imul
out
dec
mov
and
add
imul
cmc
mov
sbb
push
fnsave
xchg
fwait
push
jo
and
sbb
sbb
ja
mov
adc
jne
mov
push
add
iret
mov
sarl
fnstcw
sub
inc
jle
xor
scas
push
lock
leave
pushf
fidivrs
mov
xlat
push
mov
adc
mov
and
jnp
sub
test
ret
or
aad
leave
fnstenv
xchg
or
lods
insb
xor
sub
fisubl
les
fcompl
aas
movsb
fcmovnu
and
push
add
imul
adc
stc
imul
punpckldq
shll
cmpsb
push
int3
jne
out
mov
and
stos
out
and
ror
loopne
sub
sbb
call
out
dec
lret
mov
int3
adc
mov
cli
inc
mov
jle
call
add
lea
push
pop
xchg
cwtl
add
sub
sub
xor
jl
lret
mov
mov
insl
out
outsl
test
xchg
or
rclb
cli
lcall
enter
lret
sbb
data16
jecxz
test
xchg
shrl
push
xchg
xchg
jno
out
sub
mov
adc
cs
mov
pushf
sahf
ret
xlat
andb
ret
fsub
sub
and
cwtl
jmp
outsl
pop
dec
sbb
push
js
jle
or
push
xlat
fbstp
arpl
add
dec
loopne
stos
push
insl
pop
xor
imul
mov
xlat
cmc
subb
fsub
fcmovnbe
mov
cltd
jbe
mov
cmp
push
sub
cmpsl
adc
cmp
mov
sub
and
sub
stc
and
cmp
sarl
pop
repz
jbe
push
mov
stc
pop
dec
add
xchg
aaa
sbb
data16
add
or
rcrl
mov
push
test
stos
jae
loopne
aam
mov
outsl
and
jp
cmpsb
int3
adcl
mov
fisubrs
orl
and
mov
fimull
test
add
lret
in
jle
xor
int
mov
test
xchg
addl
div
loope
or
js
fildl
je
xchg
inc
inc
sbb
not
push
test
daa
or
cmp
add
es
cld
inc
cmp
mov
gs
mov
or
rcrb
andb
test
leave
lret
adc
sbb
or
dec
push
stc
outsl
pmuludq
mov
xchg
test
mov
jecxz
add
mov
mov
repnz
sbb
push
push
ds
jp
sub
sub
imul
mov
mov
lret
jmp
jne
inc
rcr
cmp
test
jae
imul
dec
in
cmp
sub
sub
fstps
xor
es
and
push
xor
or
les
test
push
ljmp
pop
cwtl
pushf
cmp
xorb
pop
inc
mov
gs
and
loop
jmp
mov
enter
mov
xchg
mov
jno
sbb
mov
xlat
scas
push
mov
rcll
inc
lds
iret
mov
push
jns
pop
dec
mov
mov
dec
xor
pusha
call
pop
add
enter
ds
xchg
stc
inc
icebp
ret
scas
push
sub
pop
or
xor
xchg
pop
mov
mov
pop
mov
mov
imul
xchg
sbb
xor
push
mov
roll
int
das
in
test
xchg
dec
movl
jge
mov
or
pop
pop
je
scas
inc
pop
outsl
fsubrl
mov
mov
mov
push
push
shl
rorb
or
pop
les
push
aam
mov
repz
aas
jno
push
adc
xchg
fwait
out
loope
shrl
ja
fistps
add
push
aad
icebp
movsl
insb
shrl
mov
mov
pop
pop
push
and
aam
repnz
or
mov
out
int3
push
aas
add
mov
repz
xchg
ror
ret
adc
xchg
lds
sbb
jb
jecxz
mov
in
imul
clc
repnz
sbbl
in
arpl
sub
xchg
pop
into
popa
insl
lds
mov
js
push
mov
push
bndldx
lahf
sbb
popf
adcb
pop
insl
dec
xor
xchg
shrb
mov
xor
dec
push
xchg
xor
xchg
cwtl
inc
out
xchg
rcrl
in
jbe
push
xor
lcall
add
dec
cmpb
dec
mov
fildl
repz
and
sbb
in
ret
add
mov
int3
and
dec
mov
add
shll
std
pop
aaa
sbb
je
dec
mov
and
cmp
ffree
xor
pop
leave
mov
test
xchg
adc
xchg
xchg
adc
fucompp
in
aas
add
test
mov
std
add
scas
lahf
inc
jnp
popl
inc
pop
shlb
lea
sbb
mov
mov
sti
lret
js
fimuls
add
js
xor
stos
cli
insb
lods
addr16
out
xchg
daa
repnz
pop
sbb
cs
cs
call
adc
mov
outsb
or
jecxz
inc
roll
jnp
loop
xor
sti
pop
mov
out
lods
and
cli
scas
add
pop
xchg
xchg
adc
cmp
or
dec
jb
jb
je
add
jb
pusha
lahf
pop
jg
or
adcb
cmp
adc
sbb
cmpsb
insl
jg
inc
clc
lret
adc
pop
push
mov
mov
filds
inc
jno
in
adc
ss
or
jae
sahf
mov
xchg
pop
sbb
mov
and
xchg
dec
dec
fwait
mov
cmp
stc
pop
jnp
addr16
sti
lds
xor
pop
pop
push
cmp
jge
or
sbb
sub
jne
sbb
mov
insl
lcall
in
rclb
inc
es
mov
jg
aaa
mov
pusha
add
xchg
rcl
cmpsb
mov
in
mov
movsb
mov
aas
and
cltd
mov
ss
imul
outsb
sbb
cmp
mov
test
call
flds
cmpsl
jo
popa
xchg
xorb
jne
mov
orb
xchg
adc
push
aaa
call
fdivrl
rclb
add
fwait
enter
push
sti
shll
ljmp
ret
add
out
fldl
sbb
mov
lret
ds
or
dec
stc
or
sub
lods
notb
ljmp
xor
pop
or
jle
push
scas
and
scas
imul
fdivrl
out
scas
imul
jno
data16
fcmovnu
cmp
lock
out
mov
pop
iret
out
pop
xor
shrb
mov
or
aam
add
outsb
xchg
repz
add
rorl
xchg
xchg
scas
cld
fmul
mov
flds
scas
cmc
jns
push
ret
xchg
pop
mov
push
lret
mov
jg
idivl
lret
pop
fisubrs
je
inc
ds
and
add
sbb
arpl
jae
int
dec
mov
jle
inc
inc
mulb
dec
mov
lods
repz
xchg
bound
loopne
and
fmull
pop
daa
lret
inc
pop
and
push
cmpsl
jp
popa
dec
xchg
inc
xor
mov
mov
cmpsl
stos
mov
jmp
data16
xor
addr16
push
enter
mov
scas
popf
sub
inc
cld
cmp
insb
lret
pop
aam
ret
js
sbb
filds
fwait
push
mov
xor
jb
push
inc
jae
je
cmpsl
leave
mov
cltd
fdivrl
ficomps
imul
inc
lock
or
cs
inc
fld1
push
in
push
inc
push
icebp
jbe
arpl
sbb
add
cmp
jecxz
mov
inc
icebp
adc
pop
sbb
mov
scas
int3
mov
mov
cmc
cmp
lods
cmc
push
sub
leave
mov
mov
mov
nop
xchg
cmp
lcall
cmp
dec
shlb
sarb
enter
pop
jne
loopne
mov
outsb
and
pop
stos
xchg
jmp
mov
dec
mov
mov
popf
mov
pop
shl
dec
lret
fnstenv
gs
jmp
jns
push
popl
push
cli
sbb
addr16
popf
mov
pop
cmp
lods
andl
pop
jp
jmp
in
idivb
or
into
cmpsb
or
fcoml
or
pop
loope
or
xchg
cmp
shlb
cmpsl
sarb
xlat
mov
in
roll
adc
mov
jl
cmp
push
sub
insb
push
ret
mov
ffreep
jne
rcll
dec
jmp
jge
addr16
inc
sub
xchg
cmp
hlt
das
ret
stos
pop
movsb
and
fdivp
jle
cmp
sahf
sbb
in
pop
fdivl
out
sub
in
and
test
and
jbe
jecxz
mov
mov
enter
push
into
push
inc
add
loop
xor
push
mov
in
imul
or
loopne
cmp
popa
je
int
and
mov
ja
lods
mov
and
std
mov
test
lahf
pop
test
xchg
fwait
push
mov
loopne
inc
adc
sbb
mov
dec
cmp
subl
cmp
mov
lahf
imul
xchg
pop
test
mov
sub
cmp
arpl
jp
add
xchg
xchg
popa
and
mov
fcom
sub
loop
pop
inc
sti
scas
ret
out
sbb
mov
fstl
sub
inc
les
mov
es
mov
cmpsb
pop
inc
push
cmpl
adc
loop
add
rolb
inc
aas
jb
add
mov
sbb
outsl
rclb
fidivl
les
dec
inc
aas
jmp
jecxz
mov
cmpl
cmp
jb
cs
and
test
or
ret
jb
jmp
dec
jl
lock
cmpsb
mov
insl
pop
and
fists
and
lods
mov
push
loopne
outsb
inc
cli
push
call
lods
cmp
jae
cmp
popf
rcr
jl
lods
push
mov
add
jecxz
insl
pop
hlt
dec
dec
jmp
or
je
ja
cmp
pop
pop
inc
in
aam
rclb
aam
jl
lret
add
mov
push
mov
cmp
jl
pop
sti
xchg
xlat
xor
test
dec
cmp
jno
arpl
or
stos
sbb
inc
rorb
lea
clc
test
outsl
fildll
sub
icebp
add
ret
imul
hlt
push
sub
push
roll
jns
shl
out
int3
pop
mov
and
sub
sub
ljmp
sub
sub
dec
fcmovbe
stos
sub
push
add
rclb
cmp
mov
stos
js
and
inc
pushf
mov
mov
inc
hlt
pop
data16
scas
dec
or
int
test
push
sub
pop
sbbl
popf
out
outsl
jbe
jno
mov
sbb
mov
enter
cmp
inc
pop
shlb
fdivrs
push
push
or
jne
push
jbe
inc
push
repz
jo
mov
add
sub
pop
loope
jmp
mov
jae
xor
sub
push
lret
stos
rcrb
lret
push
inc
mov
xchg
dec
lods
and
push
je
jl
subb
outsl
inc
and
js
jae
enter
jbe
jle
lock
fs
inc
test
or
xchg
pop
pop
pop
pop
cltd
cld
add
ss
out
pop
push
cmp
adc
movsb
mov
push
jl
out
jl
xor
push
mov
push
ja
sub
add
imul
mov
lret
jae
cs
adc
mov
push
outsl
pop
push
or
lret
inc
insl
sarl
pop
adc
cli
pop
inc
fcompl
push
in
dec
test
aad
xchg
xchg
sbb
sub
das
and
xchg
xor
push
xchg
psubsb
clc
dec
data16
icebp
subb
sub
mov
jns
adc
les
jg
jns
push
push
push
in
aaa
adc
xor
pop
test
roll
ficoml
xchg
xor
mov
and
fisttpl
outsb
dec
adc
cmpsl
lods
adc
ds
popa
lret
inc
push
adc
cmpsl
push
rorb
sbb
les
aaa
fsubp
imull
data16
jno
loopne
pop
jo
and
pxor
icebp
negl
sbb
addr16
leave
pop
ja
xorl
jp
add
out
dec
lcall
fidivl
das
pop
mov
sbb
xchg
add
add
out
flds
psllw
mov
adc
test
flds
lcall
and
sub
push
sbb
std
gs
sti
pop
dec
adc
repz
aaa
stos
std
scas
arpl
and
in
sti
pop
xchg
cld
fcom
sbb
rcrl
push
mov
push
xor
out
add
and
test
sar
inc
dec
int
xchg
and
inc
int
mov
mov
shlb
aad
pop
rol
mov
popf
outsl
sub
out
cmp
and
imul
call
and
test
ss
aam
and
setle
je
sub
out
mov
rcrb
push
ffreep
xor
or
fs
stos
jne
test
mov
add
pop
pushf
lcall
xchg
fdivs
call
add
insb
arpl
rcrl
push
add
cmp
dec
mov
xor
or
rcll
in
mov
fldl
and
data16
jns
jbe
fdivr
mov
sbb
mov
fwait
xor
mov
xchg
inc
int
out
daa
pop
jns
jnp
xchg
jp
out
hlt
xchg
test
mov
jmp
lods
in
nop
fdivs
jg
xchg
rorb
or
fdivp
push
mov
jmp
mov
ficomps
push
xchg
lods
jmp
rorl
jg
dec
das
fdivr
mov
mov
cmpsb
lock
lds
and
and
fwait
cmpsb
sbb
pop
jae
mov
daa
inc
aas
les
add
movsl
lahf
lds
xchg
scas
inc
adc
mov
cmpb
mov
insl
or
fwait
jge
lods
xor
stos
jne
cmp
outsb
iret
adc
mov
ds
xor
xchg
mov
lahf
sub
mov
push
arpl
sbb
ljmp
adc
mov
repnz
mov
xchg
lcall
pusha
pop
aas
adc
scas
aas
das
lahf
jno
mov
push
mov
call
adc
movsl
and
popa
pop
push
out
mov
xchg
lods
jno
icebp
inc
or
xor
mov
in
or
popl
rcl
dec
jmp
xchg
pop
roll
test
insl
dec
popa
or
fsubs
push
jbe
in
jge
cmp
xchg
mov
dec
hlt
sub
jno
push
mov
fdivrl
cmc
call
fs
ret
adc
sub
mov
xchg
invd
pop
mov
push
sub
inc
fnsave
out
test
mov
cld
add
mov
xor
divb
movsl
xchg
fwait
mov
push
sbb
and
leave
cmpsb
pop
int
out
xor
ljmp
aad
test
or
sbb
and
inc
fsts
cmp
outsl
or
addl
movsb
sub
ds
inc
dec
and
pop
rolb
fidivs
mov
dec
push
dec
inc
fsubl
pop
aaa
and
cs
add
sub
std
js
pop
aam
sub
push
into
loopne
mov
push
xchg
dec
xchg
jne
xlat
test
ljmp
aas
pop
std
jl
lea
movsl
loope
shll
ret
xchg
sbb
scas
dec
ss
push
or
pop
in
cwtl
xchg
hlt
out
cmpsb
std
inc
cmp
iret
mov
push
jo
scas
pop
jle
shl
out
imul
push
imul
mov
out
mov
pop
ret
lcall
pusha
cmc
inc
push
push
aad
nop
push
add
cmpsl
int3
xchg
xchg
inc
adc
test
cwtl
popf
arpl
xchg
insl
and
std
pop
push
dec
sub
jb
sub
sub
jne
sarl
or
out
aad
shll
cli
mov
lahf
cmp
imul
xor
jg
jbe
xchg
dec
pop
jl
add
xor
inc
mov
int
push
mov
mov
pop
xor
mov
popf
push
insb
out
xchg
popa
mov
jmp
pusha
and
xor
imul
lock
jp
ret
in
outsl
add
sub
adc
int
sarl
pusha
or
xchg
pop
dec
out
out
insb
pop
and
call
mov
push
out
dec
dec
sti
movsl
int
jp
repz
or
xlat
mov
fsubrs
jg
push
push
push
inc
and
or
add
sbb
mov
fwait
dec
aam
imul
cmp
ret
pusha
inc
js
pop
lods
dec
lret
cltd
shl
and
fmull
cmp
sub
sbbl
jl
jge
cmp
mov
sub
xchg
mov
add
clc
hlt
mov
ljmp
sub
sbb
imul
out
in
add
pop
data16
inc
and
mov
pop
pop
dec
int
jne
lret
movsl
lret
adc
jmp
out
aas
ret
jg
add
cmp
jbe
nop
mov
mov
jnp
xchg
sbb
jmp
adc
sub
adc
lods
fucomi
and
xchg
fldcw
push
icebp
sub
jne
repz
sahf
xrelease
leave
outsl
jp
enter
jnp
lds
cs
cmp
mov
cmp
xlat
and
mov
jo
sbb
pusha
pop
pop
pusha
sub
aas
cmc
sahf
les
scas
push
cmp
ljmp
mov
sub
mov
and
xorb
push
popa
mov
jne
popf
out
lods
pop
mov
leave
mov
cltd
mov
mov
pusha
mov
jno
cmp
mov
xor
mov
icebp
pop
xor
xor
mov
aad
push
push
xchg
pop
mov
jg
sbb
xchg
pop
into
xor
ljmp
mov
cmc
mov
fdecstp
xchg
mov
cmp
jp
cld
filds
xor
sbb
dec
mov
sub
push
lods
inc
dec
into
sahf
es
insb
inc
mov
push
or
pop
js
clc
jae
in
mov
xor
lret
pop
and
clc
mov
push
mov
push
add
mov
adcb
jae
mov
popf
aam
loopne
pop
jo
out
lock
das
cld
leave
push
pop
jnp
movsb
xchg
repz
sbb
cltd
sbb
mov
clc
jecxz
mov
xor
std
sbb
scas
xor
mov
mov
sbb
add
aaa
lods
cmpsl
lods
jnp
ljmp
pop
fiaddl
jp
mov
gs
loop
jns
enter
lret
push
and
jl
pop
inc
insl
push
daa
mov
fnstcw
xchg
adc
fdivr
iret
jns
pop
pop
pop
enter
mov
sbb
aas
add
in
cli
scas
scas
shrb
add
jne
jmp
aas
mov
xor
pop
xor
aas
sub
cmc
ficomps
insb
and
xchg
dec
gs
xchg
out
outsl
hlt
push
js
mov
movsl
cmp
mov
ffree
jl,pt
movsb
repz
xor
ljmp
cmp
xchg
add
es
cmpsl
mov
cmp
or
repnz
jp
repz
push
xor
sbb
ror
push
ljmp
jp
jmp
ja
xchg
test
mov
int3
jno
jne
ljmp
stos
mov
clc
pop
pop
inc
mov
jge
lods
stc
lahf
sub
xchg
je
popa
sbb
dec
cld
mov
aas
aaa
int3
jbe
shrl
test
jecxz
and
cmpl
cmpl
ss
cmp
movsb
sbb
orl
or
push
xor
sub
icebp
shll
cmpsb
pop
sub
cmp
and
adc
sub
cltd
aad
push
lcall
repz
imul
mov
xchg
mov
and
movsb
out
pop
sbb
pusha
aam
mov
shrl
repz
or
mov
mov
fidivrs
push
push
inc
jp
stc
out
test
out
jle
xor
fsubp
cmc
and
jg
adc
add
mov
outsl
inc
jecxz
sbb
mov
mov
mov
out
jp
adc
cmp
or
ss
push
fs
adc
adc
xlat
jle
clc
push
add
cwtl
hlt
insl
pop
push
cmpsl
clc
or
test
popa
rcrl
pop
or
pop
mov
outsb
push
jne
cmpsl
mov
clc
cld
or
push
mov
popw
adc
test
sbb
or
mov
sbb
arpl
xchg
pop
mov
and
xor
into
sti
mov
aaa
out
push
in
dec
in
mov
mov
or
fidivrl
and
push
push
jle
or
or
addl
mov
and
cmp
popf
je
mov
dec
push
mov
xchg
mov
cld
aam
and
xchg
or
or
std
ljmp
or
sbb
imul
pop
add
icebp
jecxz
xor
inc
mov
cli
test
fsubrl
test
scas
jo
scas
ljmp
lea
xchg
mov
mov
jge
xchg
xor
in
cmp
pushf
push
or
push
push
dec
dec
cmp
sbb
cli
mov
cmp
add
lcall
pushf
cmp
mov
fwait
inc
lock
adc
dec
imul
inc
mov
adc
out
shlb
aaa
shll
push
rcr
stc
mov
sbb
jno
movsl
jb
sub
jmp
rcrl
push
mov
pop
and
scas
test
pop
rclb
les
fs
xor
pop
ja
jns
popf
inc
lods
insb
jp
rcll
xor
movsb
fisubrl
xchg
jmp
lds
mov
fisubrs
sub
mov
mov
enter
sbb
add
jecxz
xlat
mov
cmpb
adc
loope
or
cmp
lods
jp
lds
data16
pop
push
add
cltd
test
xor
aam
sub
push
aad
jb
arpl
xchg
addr16
mov
sbb
inc
imul
repnz
xchg
pop
jbe
jns
rorl
sarl
testb
lahf
pop
lods
jge
pop
add
int
push
sub
push
or
xchg
in
leave
inc
inc
xor
cli
mov
jo
cmp
or
push
pop
or
mov
pop
add
lea
fdivl
pop
xor
dec
pop
jge
xor
out
xchg
aad
adc
sbb
repz
dec
mov
in
mov
neg
ficoml
lds
lahf
insl
andl
ret
popa
inc
call
lock
xorb
test
in
or
jmp
inc
mov
bound
scas
iret
ret
leave
push
dec
frstor
stc
xor
push
mull
lcall
mov
scas
add
pop
or
adc
cmp
outsb
pop
push
inc
jmp
pushf
xorb
shl
mov
jbe
cmp
ret
and
add
xor
mov
push
rorb
fnstcw
in
hlt
shl
gs
js
es
in
jmp
cmp
rclb
mov
pop
xorl
in
or
pop
and
sbb
mov
ret
js
cmp
fdivrl
outsb
es
lret
sub
stc
dec
mov
jns
and
mov
bound
jle
inc
pop
out
dec
jmp
imulb
in
stos
mov
pop
leave
addr16
ret
or
into
mov
or
addr16
daa
push
outsb
pop
aas
aas
imul
jl
test
dec
loope
popf
pop
stc
mov
loope
je
dec
es
arpl
rolb
outsl
clc
cld
sbb
pop
xchg
jecxz
aaa
pop
addr16
sbb
and
cmp
mov
add
hlt
js
mov
mov
pop
ljmp
in
pop
jns
mov
cmp
test
loop
int3
add
or
push
add
inc
xchg
sbb
sub
shlb
es
push
and
xor
icebp
lods
loope
enter
popf
adc
jmp
int
fsubrs
mov
mov
inc
add
xlat
mov
xchg
xor
outsb
divl
bound
iret
arpl
jnp
or
mov
imul
arpl
mov
pushf
xor
sub
decb
iret
mov
mov
cmp
lea
mov
sbb
adc
fyl2xp1
aad
into
loope
mov
mov
movsl
dec
cmp
out
xor
imul
repz
adc
mov
inc
push
loop
mov
in
je
mov
or
dec
mov
mov
pop
cmpb
daa
mov
shlb
mov
sbb
int
cmc
pushf
add
pop
ja
ljmp
nop
std
push
fs
push
repnz
jns
fisttps
sub
pop
je
stos
enter
jl
hlt
cli
adc
sahf
mov
xor
push
cmpsl
aam
ret
mov
aam
cmp
aas
idivl
int3
cmpsb
push
xchg
mov
in
stos
sbb
cmc
in
jnp
mov
dec
or
shlb
jge
out
xor
inc
sub
pop
sbb
out
xchg
mov
add
scas
mov
jo
inc
sub
in
xor
sbb
push
adc
clc
cld
jl
xchg
test
pop
cmp
orb
test
mov
imul
mov
or
arpl
stc
or
stc
stc
js
pop
ret
sbb
daa
into
and
mov
dec
cmp
sub
and
outsw
ret
mov
pop
clc
movsl
and
jp
cltd
out
cmpsl
dec
sbb
enter
and
jle
xor
mov
frstor
insb
cld
fists
enter
sarl
and
dec
jecxz
notb
gs
fistps
out
leave
pop
mov
sbb
adcb
out
push
xor
cmp
xor
sbb
jge
sbb
loop
bound
mov
negb
test
add
add
push
fldenv
or
mov
inc
xor
cmp
out
mov
nop
int3
inc
ret
jo
mov
insb
xor
popa
pop
in
aas
push
or
xor
xor
stc
push
push
mov
test
xchg
lahf
shlb
pop
mov
call
xchg
iret
or
rcll
dec
xor
and
test
jl
out
push
ret
stos
in
add
test
xor
inc
jbe
enter
lret
push
test
aas
ljmp
or
cmp
repz
js
sub
sbb
mov
jb
jb
cmp
jle
dec
add
sbb
out
mov
mov
jo
or
xchg
dec
adcl
adc
mov
loope
mov
out
icebp
adc
dec
loope
insl
and
jg
dec
in
xchg
test
addr16
shll
hlt
dec
or
mov
add
lahf
inc
fdivrl
ss
push
dec
xchg
lahf
jge
mov
stos
ret
es
pusha
repnz
add
in
lahf
and
iret
aas
sbb
das
and
jge
jmp
imul
lea
cwtl
xchg
lcall
cmpb
inc
lahf
cmc
sub
loop
xchg
pop
mov
add
and
out
stos
repz
imul
or
pop
jle
pop
mov
push
pop
lret
add
dec
repz
lea
popa
daa
icebp
sbbl
enter
push
push
int3
jae
punpckhbw
add
xchg
pop
xchg
sbb
outsl
push
repz
jae
jecxz
lods
addb
test
cmp
stos
arpl
xor
jae
inc
mov
je
std
cmp
ljmp
xlat
icebp
stos
sahf
sbb
mov
cmpsl
add
push
and
sbb
nop
mov
ror
push
push
test
dec
scas
pop
jp
push
mov
pop
push
pop
mov
jbe
ds
fisubs
xor
cs
mov
in
cmc
dec
jecxz
dec
mov
jae
pop
test
and
xor
les
jo
insb
pop
push
pusha
xchg
push
mov
outsb
xor
or
inc
aas
mov
xchg
jl
shlb
xchg
adcb
adc
sahf
xchg
cltd
mov
push
scas
xchg
fildl
sbb
aad
pop
inc
addr16
cmc
js
sub
jnp
and
push
mov
dec
hlt
outsb
dec
in
pop
mov
filds
mov
addr16
les
cmpsl
pop
sti
mov
lcall
mov
xchg
cmpsb
adc
addr16
dec
and
out
mov
mov
or
dec
sbb
pop
jo
xchg
jmp
sbb
mov
and
movsb
imulb
out
mov
orw
pop
jo
cld
test
ds
and
scas
xchg
test
mov
in
sahf
push
sbb
pop
pusha
mov
push
xor
fistps
jecxz
mov
shlb
ljmp
mov
push
xchg
popf
dec
cmp
pop
push
jg
sbb
cltd
and
add
cmp
popf
mov
out
inc
testb
in
movsl
insb
push
js
cmp
mov
dec
stos
fstps
shlb
int3
mov
jo
into
pop
outsb
cmpsb
sub
jecxz
xchg
sbb
xor
insb
loope
sub
push
pop
inc
faddl
pop
mov
ja
inc
pop
push
bound
sub
mov
xchg
aas
jbe
or
fwait
sub
jo
jp
je
mov
lods
sahf
pop
fdivrs
incl
incl
pop
lcall
cmpsl
es
mov
rcr
pop
jb
sahf
cmp
adc
mov
cmpsl
out
jb
and
inc
adc
js
cmp
and
jl
lea
bound
pop
jno
mov
repnz
scas
xor
pop
pop
iret
es
xchg
clc
test
and
in
pop
pop
sbbl
aas
mov
fstpl
dec
cmp
fs
mov
insl
xor
pop
dec
mov
sahf
adc
jno
lods
mov
or
aas
das
hlt
cmp
scas
push
in
fistpll
push
imul
out
pop
add
push
sbb
cmpsl
cmpsb
mov
jmp
dec
imul
mov
adc
decb
mov
xchg
lret
mov
repz
pop
pop
loopne
dec
int
or
jo
fisttps
clc
in
jnp
clc
repz
xchg
xor
cwtl
addl
decb
xor
adcb
aas
pop
scas
imul
xchg
fucomip
xchg
fimuls
push
loopne
inc
mov
mov
les
xor
sbb
dec
imul
in
sub
loop
sub
cmpsl
mov
fnsave
imul
or
lock
fisubrs
and
sub
daa
push
cli
push
ljmp
mov
xor
les
sbb
movsl
sahf
adc
lea
lods
ljmp
out
outsb
repnz
jbe
adc
in
sahf
insb
sub
mov
iret
scas
cld
cld
cmpsb
push
ficomps
xchg
out
into
mov
in
jge
ja
sbb
xchg
sbb
loopne
and
push
adc
int
mov
in
loope
adc
push
leave
cmp
ja
mov
jle
sbb
push
iret
arpl
jnp
pushf
adc
and
cmp
cli
add
fwait
nop
les
or
outsb
scas
dec
pushf
sub
xor
xor
aam
xchg
cmp
and
dec
inc
mov
add
pop
jae
rolb
push
inc
mov
call
test
mov
sub
push
mov
pop
push
arpl
rolb
xchg
and
js
es
xor
std
out
movl
rcr
ja
lods
jge
mov
out
ljmp
movsb
xchg
out
aas
inc
cwtl
into
pop
rorb
ljmp
sub
push
icebp
xchg
aaa
dec
push
jo
sub
jbe
add
mov
lahf
push
pop
jns
sbb
cwtl
aad
inc
jp
sbb
fidivrs
push
cmc
sub
bound
mov
xchg
xor
cltd
aad
adc
sahf
jge
shll
inc
push
imul
into
ljmp
inc
std
out
jb
cmp
pop
jmp
lea
cli
lods
fcompl
mov
pop
xchg
es
movsl
sbb
push
hlt
mov
aad
mov
sub
fwait
repz
fisubrs
mov
mov
mov
and
nop
dec
fisttpll
mov
movsb
sbb
rcr
and
pop
mov
loop
ret
cmp
inc
cmp
or
mov
or
das
popf
rcrl
das
xor
cltd
call
shl
push
push
fs
adc
add
jae
adc
fdivs
mov
push
sbb
dec
sahf
cmp
sarl
adc
loope
mov
sub
dec
push
cmp
pop
mov
scas
xchg
xchg
and
fcmovnbe
rcrb
mov
jl
pop
inc
jmp
pop
push
pop
add
fs
sarb
add
icebp
shl
ds
mov
cmp
stos
in
fwait
out
mov
ret
adc
lods
mull
mov
das
jmp
jg
call
ret
or
sbb
mov
mov
ljmp
jmp
xor
sbb
ss
push
mov
sbb
adc
rcr
in
cmp
ljmp
xor
loopne
gs
jb
das
xchg
xchg
outsl
push
cmp
into
mov
inc
int
loop
pop
inc
jp
pop
cmp
xlat
jp
pop
cmp
cltd
adc
and
xor
les
sub
xor
nop
out
lods
mov
lret
add
mov
mov
outsl
lret
xchg
pop
cmp
leave
mov
orb
adc
xchg
and
or
data16
nop
pop
jmp
mov
popf
jle
popf
aaa
inc
jne
icebp
pop
mov
mov
xor
out
sub
divl
fsubp
fcmovnb
push
int3
outsl
ret
fidivrs
adc
mov
mov
shrb
mov
push
lds
or
add
mov
lods
and
pop
inc
xchg
cmp
and
jno
jecxz
out
pop
sbb
and
inc
mov
xor
cmpsb
mov
adcb
xor
out
test
repz
insl
rcll
fwait
mov
or
xchg
or
or
pop
cmp
push
in
push
roll
jmp
add
add
out
mov
jns
cmp
filds
xchg
sub
movsb
push
cltd
jp
push
mov
pop
xchg
lods
ss
jecxz
lret
and
and
inc
inc
cs
pop
leave
xchg
aas
std
and
jecxz
mov
xchg
clc
adc
mov
or
pop
inc
jb
adc
adc
mov
jecxz
imul
push
cmc
jp
ljmp
mov
dec
sbb
pop
add
jns
popf
sub
das
cwtl
cli
sub
or
dec
icebp
fwait
pop
sbb
push
and
jl
in
dec
mov
daa
xchg
jmp
xlat
xor
mov
lahf
mov
sub
mov
popf
lahf
xlat
in
shll
add
ret
sbb
leave
lods
pop
xor
push
fstpt
cli
xchg
addr16
xchg
bound
mov
scas
xchg
idivl
int3
sbb
notb
cs
in
jno
mov
insb
push
mov
dec
out
mov
push
daa
sub
cs
jne
movsb
or
cmp
jmp
mov
mov
jae
fisubrs
xchg
fimuls
inc
sbb
icebp
sti
fadd
inc
mov
push
lcall
mov
adc
mov
sub
inc
cltd
nop
cmp
inc
add
mov
and
push
rcll
adc
lock
mov
sbb
xlat
cmpb
push
test
sahf
jns
dec
pop
xchg
xor
aam
add
outsl
aam
sub
mov
andl
ds
pop
call
icebp
inc
bound
xor
repnz
mov
sbb
icebp
sti
cmp
jle
call
jle
mov
stos
arpl
push
insl
sub
sahf
cmp
jae
xor
cmp
add
imul
mov
mov
inc
lock
inc
fs
ficoml
pop
adc
adc
test
push
and
test
mov
xchg
jge
lcall
daa
dec
ss
mov
or
or
mov
sti
addr16
shlb
adc
xchg
push
cltd
cmp
addr16
call
arpl
test
sbb
mov
lret
int
mov
dec
mov
stos
into
scas
mov
push
lcall
es
cltd
xchg
mov
dec
decl
jno
cld
mov
dec
clc
test
cmp
lret
fsubrs
dec
jne
mov
and
dec
push
incb
mov
sub
mov
scas
inc
fwait
jle
call
mov
mov
sahf
push
mov
lret
in
pop
lods
nop
loopne
pop
shll
ds
popw
push
ljmp
mov
xor
popf
xor
sahf
arpl
mov
imul
xlat
push
mov
push
push
pop
mov
mov
pop
and
add
jmp
pop
ss
sbb
sbb
xor
xor
inc
loopne
test
dec
cld
push
mov
mov
adc
stos
in
xchg
ss
in
xor
push
push
cs
pushf
aam
lea
filds
mov
jb
cmp
hlt
xchg
xchg
adc
dec
je
adc
pop
ljmp
mov
lds
or
test
mov
add
insl
mov
loope
fstl
or
out
fwait
mov
dec
mov
scas
daa
addr16
aad
mov
scas
push
cmp
and
es
scas
xchg
gs
and
inc
scas
movsl
jb
jbe
pop
mov
push
mov
jb
insb
sub
and
dec
sahf
cli
inc
cmp
lods
ljmp
sbb
lahf
jecxz
aas
sub
iret
mul
add
cmp
jne
or
push
pop
inc
lret
out
mov
out
pop
movsl
aam
ret
and
enter
adc
sbb
ret
out
inc
ds
adc
add
shll
fsubs
xor
xchg
popf
fdiv
mov
or
dec
std
ss
adc
push
or
cmpb
stos
ds
pop
mov
pop
mov
sub
sbb
imul
mov
mov
xchg
jae
mov
daa
cwtl
push
and
jno
stos
aad
jle
lock
mov
pop
dec
ss
mov
imul
pop
jge
inc
test
push
cltd
push
inc
xor
add
and
sub
testb
fdiv
decb
in
imul
loop
mov
fnstcw
adc
les
mov
inc
mov
add
js
jno
repnz
ja
jmp
ficomps
cwtl
sub
ret
cld
lock
imul
outsb
jae
mov
sti
mov
lock
xlat
mov
xor
mov
push
iret
shlb
mov
adc
mov
ficomps
xchg
or
test
in
ds
fcomi
in
call
jo
push
aas
hlt
mov
mov
mov
pop
dec
jp
scas
sarb
insb
inc
push
lret
fucomip
inc
bound
jmp
mov
dec
std
xchg
bnd
add
mov
jnp
inc
fstl
mov
mov
mov
pop
cwtl
mov
push
popf
negb
mov
add
filds
lret
sbb
jnp
fsubs
jnp
mov
mov
or
push
cld
lcall
clc
jno
mov
pop
nop
xchg
xchg
jle
testb
dec
xor
or
pop
pop
jmp
mov
mov
lcall
add
filds
test
pop
or
mov
jae
mov
test
mov
pushl
leave
imul
sbb
loop
push
filds
pop
and
pop
cmp
and
sbb
mov
xchg
fwait
or
and
sub
andl
ja
in
mulb
dec
addb
mov
sbb
call
adc
test
jg
push
les
xchg
cmc
leave
shll
jb
push
dec
std
jbe
cmp
sub
jb
dec
pop
cmp
xchg
jg
mov
sahf
xlat
sbb
subb
xchg
scas
mov
mov
xor
lret
mov
inc
add
and
cld
in
jno
sbb
scas
pop
frstor
sbb
and
stos
pop
nop
mov
out
sbb
mov
les
cwtl
imul
cmpl
insl
popf
stos
cltd
sub
push
lret
aad
xor
cmp
push
dec
dec
fstpl
adc
xor
aam
stos
popf
enter
in
cmc
gs
jg
xchg
fldt
test
mov
jbe
sbb
push
int3
mov
repnz
cmp
inc
into
cmp
out
xchg
or
lods
fwait
dec
sub
xor
dec
pop
add
insb
out
cmp
add
outsl
pop
adc
pushl
ja
mov
mov
scas
mov
dec
incl
and
ljmp
cmpsb
jbe
imul
jbe
inc
pop
call
and
jmp
jbe
xchg
repnz
std
mov
mov
repz
dec
fs
mov
jo
mov
iret
lds
in
scas
dec
clc
mov
in
push
pop
fstpt
in
in
stc
lods
inc
push
test
test
enter
call
xchg
imul
divl
inc
aam
cmp
test
test
repz
fistl
rcrb
xor
es
cmp
dec
ljmp
jo
xor
add
fcmove
cmp
repnz
imul
pop
mov
xchg
je
inc
cmp
bound
fldenv
adc
pop
aaa
insb
test
shlb
repnz
loop
sub
sbb
adc
addl
loope
insb
popa
repnz
add
rol
sbb
adc
stc
add
shl
loopne
adc
mov
lret
cwtl
orl
adc
jne
adc
mov
mov
mov
xchg
imul
push
jbe
out
cmp
pop
fcomps
hlt
mulb
outsb
lods
sbb
jns
aas
cli
push
pop
xchg
fcomps
cmp
fnstsw
pop
and
nop
test
fisttps
sub
push
pushf
pop
adc
mov
xchg
ret
jbe
cmp
out
xchg
xchg
ss
sbb
mov
mov
sbb
fcmovu
lcall
cmp
clc
cmp
add
add
imul
cmp
cltd
hlt
ljmp
xchg
bound
gs
pop
out
pop
mov
cmc
popa
adc
push
cli
mov
imul
pop
int3
pop
inc
xchg
ucomiss
cmpsl
jne
push
cld
mov
mov
jge
cmpl
pop
cli
popa
daa
hlt
jg
fwait
mov
lahf
arpl
and
arpl
dec
fildl
dec
mov
fwait
dec
mov
lods
out
mov
rolb
ds
test
pop
fsubl
ffreep
repnz
cmc
xor
cmp
xor
mov
ja
arpl
xchg
popa
pop
push
outsb
push
mov
inc
lock
pop
outsb
jns
test
enter
mov
push
dec
push
xchg
jg
bound
jp
xchg
ss
int3
cs
push
sbb
fwait
mov
test
sub
cmpsb
mov
sti
cwtl
std
jg
daa
shrb
push
lret
adc
daa
decb
pop
outsb
ss
lret
les
jp
mov
das
cs
pop
lcall
rclb
sub
xor
push
jle
decl
mov
fwait
ds
repz
popf
cltd
fs
lock
leave
std
jno
in
movsb
mov
loope
pushf
mov
or
jl
jno
push
mov
mov
xor
int3
jbe
inc
add
outsb
movsl
fcompl
and
aad
sbb
adc
xor
mov
mov
movsl
stc
fiaddl
sbb
loop
mov
push
sti
movups
inc
shlb
push
mov
mov
addr16
cmp
push
mov
pop
cmpsb
fisubrl
pop
aaa
pop
mov
pop
lock
and
xchg
sti
rcr
icebp
cmpsl
mov
xchg
add
pop
jbe
testl
insb
lahf
fcomi
jb
push
les
inc
repz
insb
hlt
leave
je
sbb
aad
aas
gs
popa
gs
jns
es
inc
div
push
adc
nop
cmp
jo
cmp
movl
xchg
sub
xchg
test
adcl
push
shrb
popf
ret
mov
pop
or
xchg
lock
insb
fisttpll
pop
adc
inc
jae
cmp
and
adc
shlb
jb
repnz
dec
adc
cmpsl
je
xor
std
and
int
cs
test
pusha
pushf
inc
aas
imul
mov
mov
jae
ljmp
pop
jo
test
dec
je
adc
fildl
xchg
pop
dec
adcb
jbe
mov
fwait
aad
movl
add
mov
fcomp
push
mov
jmp
addps
loope
jo
sub
scas
mov
insb
cmp
cltd
inc
loope
arpl
pop
into
in
xchg
mov
push
push
mov
mov
jle
dec
or
aas
fcoms
pop
ret
sti
sbb
aas
mov
ds
cmp
mov
sub
mov
dec
cmp
inc
test
push
scas
popa
mov
dec
jns
imul
xchg
jg
adc
jl
or
xchg
xor
pop
in
fmul
mov
ja
pop
add
mov
add
test
pop
pop
mov
mov
iret
and
add
int3
pushf
and
fwait
bound
cs
out
out
pop
push
dec
dec
test
xor
inc
xchg
pop
aaa
mov
clc
jmp
repz
lods
push
cmp
jmp
fsubrl
fwait
pop
and
flds
or
dec
nop
adc
and
out
leave
lea
loope
inc
enter
sbb
mov
arpl
push
fsubrp
es
sbbl
shlb
enter
jecxz
dec
pop
out
rolb
aad
add
dec
mov
fwait
incl
adc
lods
je
push
mov
add
pop
xor
jae
push
movsl
ror
cwtl
xchg
cmc
clc
push
idivl
sbb
sbb
arpl
stos
inc
xchg
push
sub
rolb
adc
dec
fisttps
pop
movsl
sbb
adc
ds
xor
sub
xor
pop
push
dec
mov
fnop
fsubrs
jne
sti
push
stos
insb
cli
lds
lea
xchg
mov
mov
inc
imul
dec
adc
test
test
cld
push
add
xchg
mov
int3
sub
iret
dec
nop
cmp
push
jl
cmpsb
ja
ret
sub
mov
adc
ljmp
lret
movb
pop
scas
stc
aad
push
inc
jae
mov
fsubp
jmp
pop
xchg
daa
adc
test
jae
push
mov
and
mov
pop
adc
andl
pop
mov
jb
insb
mov
pop
jecxz
clc
mov
or
into
bound
enter
jmp
aam
imul
push
lods
and
dec
xchg
mov
mov
mov
jbe
inc
jae
out
jecxz
stos
or
cltd
aad
add
lcall
lahf
dec
ret
test
pop
gs
clc
sbb
and
scas
add
outsl
aad
stos
xchg
inc
lea
pop
jo
lock
mov
cmpsb
dec
stos
mov
loop
bnd
shr
nop
jnp
dec
jmp
jge
and
into
push
stc
mov
dec
adcb
pop
orb
sbbb
jno
or
cs
inc
in
shll
jecxz
cmp
xor
mov
repz
mov
sbb
push
fmull
cmp
jmp
ss
push
lods
adc
inc
and
mov
mov
sub
sbb
xor
in
std
leave
inc
jns
and
and
sbb
orb
orb
xchg
dec
xor
inc
repz
out
dec
cs
mov
iret
pop
push
jne
and
cmp
cld
mov
xchg
loope
jecxz
xchg
mov
in
repnz
xchg
ret
xlat
or
imul
cmpsl
std
loopne
rcr
dec
hlt
add
das
inc
movsb
mov
mov
sbb
sub
adc
loope
sub
xchg
aaa
lret
stos
pop
jmp
ss
call
imul
fistpl
pop
pop
js
pop
dec
popa
cmp
pop
mov
mov
xor
scas
xor
fwait
mov
outsl
mov
mov
mov
jp,pn
stos
or
inc
js
mov
mov
stc
dec
repnz
movsl
scas
jne
mov
aas
jmp
push
test
pop
stc
std
arpl
push
test
out
jb
clc
aas
shrl
sub
mov
mov
daa
jb
cwtl
arpl
loope
jo
fdivrl
pop
jge
push
outsl
lahf
cmp
out
and
mov
push
xchg
and
mov
add
mov
xorb
inc
in
jge
xchg
cmpsb
js
fldenv
add
jg
fwait
xor
dec
repz
pop
push
ficomps
mov
or
clc
inc
iret
xor
jmp
test
dec
jp
xchg
mov
inc
add
in
es
mov
push
dec
sbb
fwait
aam
cmp
dec
cmp
sub
rcr
pop
negl
lret
xor
cld
ljmp
mov
sahf
cmp
fdivs
sub
shlb
mov
mov
ret
pop
and
or
out
push
sbb
ds
or
insl
scas
enter
leave
fnstsw
std
or
xchg
adc
loop
int
ficomps
lea
jge
xor
cld
popa
xchg
cli
add
push
push
push
xor
lret
add
sahf
push
inc
aad
inc
icebp
or
add
imul
inc
xchg
sub
pop
leave
lods
sbb
xchg
mov
xor
xchg
dec
push
mov
stos
sti
fwait
xchg
gs
mov
ret
pop
fisubrs
mov
inc
fwait
adc
jg
out
xchg
int3
sub
push
inc
mov
aaa
dec
pop
jo
mov
sbb
sub
dec
pop
cld
rolb
outsb
mov
sbbl
jecxz
test
mov
pop
sbb
clc
mov
icebp
mov
gs
and
lods
in
add
sub
fcoml
pusha
fs
call
test
insb
out
hlt
rcrb
jl
and
inc
iret
lahf
rorl
dec
mov
ljmp
jg
sub
fimull
mov
roll
ss
movsl
dec
mov
inc
inc
test
jno
dec
xchg
cli
ret
rcll
sub
sbb
addl
sbb
pop
mov
mov
fiadds
mov
aas
repz
das
pop
rcrb
mov
dec
repz
arpl
movsl
mov
das
aad
jo
inc
cld
mov
pop
sub
jp
ja
pushf
sbb
std
push
pop
flds
cld
and
cmpsb
cltd
cmp
sbb
jns
mov
test
sti
int3
js
ficoms
ja
pushl
xchg
sti
repnz
jg
test
push
das
lcall
jae
mov
mov
out
es
jg
or
xor
cmp
clc
test
jg
sahf
int3
mov
dec
add
orb
pop
cmc
mov
and
sub
sub
or
mov
adc
add
cmpsb
jmp
imul
mov
pop
and
jl
leave
lcall
mov
sbb
and
cmp
push
or
xchg
adc
push
push
xor
out
cmp
push
loop
repz
repnz
cmpsb
xor
clc
or
lahf
into
imul
dec
pop
dec
jbe
mov
lret
stc
loop
and
shl
rclb
lret
dec
mov
mov
pop
mov
cmpsl
aad
outsb
icebp
pop
icebp
adc
add
push
aad
sbb
mov
jl
lcall
mov
das
and
sbb
add
xlat
fsubrs
int
pop
cmpsb
dec
mul
pop
sub
sbb
xor
add
inc
jnp
aas
xchg
movsb
test
pop
add
cs
andl
mov
and
imul
sbb
fldl
add
ret
jl
jns
lret
fstpt
imul
mov
xchg
js
mov
inc
test
mov
sahf
adc
ftst
sub
add
clc
outsl
sbb
jecxz
pop
leave
shl
pop
adc
outsl
addr16
push
jmp
pop
xor
in
jmp
or
fsubrp
fmulp
pmaxsw
add
iret
jp
xchg
jmp
and
pushf
cmp
mov
and
fs
scas
test
mov
cmp
cmp
bound
dec
aas
sub
iret
lods
inc
cmp
push
push
pop
or
jle
lods
ljmp
insb
cmpsl
mov
movsb
pop
notl
cmp
sub
je
sarl
stos
push
xchg
aas
pop
mov
add
dec
add
add
sub
xor
jmp
xchg
idivb
pop
sub
pop
push
cld
stos
adc
mov
insb
or
add
sub
add
jp
js
scas
inc
mov
iret
push
jbe
mov
xor
das
push
cmpsb
int
testb
lods
cld
enter
mov
or
jg
inc
imul
or
ret
dec
icebp
push
xor
mov
in
out
xor
pushf
adc
mov
lret
fisttpl
inc
jmp
ficoms
call
decb
movsl
ss
mov
nop
dec
inc
cmp
jae
outsl
loopne,pt
lret
cmp
test
mov
inc
pop
pop
sub
into
jle
int3
or
fiadds
psrad
mov
leave
or
xor
mov
and
rcll
rol
loop
fwait
xor
cmp
sbb
cmp
ljmp
out
mov
xchg
out
je
out
jge
frstor
test
inc
push
push
mov
push
movsl
popa
mov
inc
mull
mov
jle
lods
push
dec
and
pop
outsl
call
cmp
xchg
or
xor
dec
jmp
pop
aas
cmpsl
lods
push
add
xchg
fmulp
fnstsw
stos
sbb
popa
ja
fwait
jmp
clc
xchg
mov
sbb
push
fidivrs
stos
in
daa
js
hlt
mov
loope
cld
out
push
push
insb
dec
mov
mov
imul
loope
mov
pop
es
lods
out
and
mov
mov
rcrb
add
cli
negb
and
cmc
hlt
xchg
push
cmpsb
cwtl
mov
ret
dec
cmc
xchg
fs
jo
mov
mov
mov
or
dec
aam
nopl
and
in
pop
jecxz
add
sbb
pop
or
addr16
in
test
adcl
inc
add
es
insb
mov
iret
cld
xor
lea
or
arpl
sbbb
imul
iret
jb
jmp
add
adc
testl
xor
out
cmpsb
adc
xor
call
cmp
cmp
aad
insb
push
pop
mov
divl
das
addr16
outsl
push
mov
hlt
popf
mov
mov
mov
mov
mov
clc
rorl
mov
adc
mov
sub
pusha
mov
gs
in
testl
sbb
inc
pop
sbb
out
cs
cmp
fwait
and
lock
into
movl
aad
rdmsr
cwtl
push
add
jmp
jne
jg
adc
adc
mov
add
popa
subl
cmp
mov
jae
addr16
or
mov
mov
in
dec
xor
in
lds
mov
adc
fldcw
sub
mov
jmp
lcall
sbb
mov
jmp
mov
aam
dec
sbb
add
dec
jns
add
pusha
mov
enter
add
fisttpl
movsl
sub
mov
rcl
pop
push
xchg
mov
dec
mov
mov
outsl
mov
ds
add
rcll
add
sub
test
enter
jnp
xor
cwtl
mov
in
ret
stos
mov
cmp
call
insb
jb
rolb
sti
push
or
sub
sub
xor
out
or
mov
orl
push
mov
mov
out
push
push
or
sub
and
sbb
cmp
je
stos
mov
fisttpll
movsb
cwtl
stc
mov
sbb
out
out
nop
outsl
jnp
outsb
inc
lds
inc
jbe
clc
push
testl
dec
pop
dec
mov
pop
xchg
cmp
enter
sbb
mov
test
fldt
inc
cmp
pop
xor
movsb
fnstsw
cld
ss
adc
add
ret
mov
daa
cmp
xlat
xchg
pop
pop
push
inc
sbb
ss
jae
pop
fmul
stos
loopne
insb
cli
sbb
icebp
rcrl
jae
adc
test
sahf
pop
push
cld
std
mov
dec
lret
cmp
cli
cmc
fwait
movsl
cld
pop
cmpb
mov
push
lds
sub
sbb
lcall
cs
jo
mov
bound
jp
push
and
xchg
or
sub
xchg
sbb
xchg
xchg
lods
or
jp
push
push
add
or
adc
shrl
add
dec
lahf
gs
ljmp
std
repnz
clc
jnp
hlt
imul
adc
out
sbb
jbe
cld
mov
jmp
cmp
outsl
mov
inc
mov
out
scas
jbe
pop
push
insb
push
jae
andl
test
inc
jl
cli
and
je
xchg
add
fsubl
out
cld
jne
adc
push
dec
adc
inc
sbb
leave
lock
jns
mov
lock
jne
push
outsb
pop
mov
ret
ret
es
es
jb
adc
shll
sbb
pushf
jge
xlat
sbb
les
xchg
xchg
iret
dec
mov
fildll
mov
cwtl
mov
lahf
pop
and
cwtl
xor
shlb
xchg
enter
stc
dec
nop
in
sub
mov
je
lds
stos
mov
and
aad
fs
push
sub
jg
sub
outsl
sarl
mov
sti
cmp
or
in
xchg
inc
stos
push
and
sub
test
test
push
in
fistl
das
sbbl
xor
xor
push
enter
xor
xlat
arpl
loop
rorl
test
movsl
sbb
push
arpl
dec
pop
xchg
rcrl
and
jne
incl
push
stc
sbb
es
cs
mov
xchg
mov
cltd
sub
inc
imul
push
out
push
dec
inc
push
sbbl
cmc
sub
hlt
gs
cmp
mov
and
stos
mov
dec
cmpsb
clc
str
mulb
jge
xchg
pop
psrad
xor
stc
sub
mov
hlt
test
sarb
sahf
adcb
out
out
add
xor
pop
cmp
adc
data16
aad
mov
sub
add
push
mov
or
je
cwtl
pop
pop
push
bound
test
pop
stos
popa
loope
push
cltd
pop
mov
cmpsl
out
pop
mov
or
pop
scas
into
xor
arpl
pop
orl
lods
add
repz
lods
adc
das
xlat
mov
jbe
mov
in
rcrl
pop
ret
xchg
les
ror
add
jecxz
push
fnstenv
inc
pop
cltd
pop
xor
gs
sbbb
dec
jmp
repz
dec
mov
test
pop
xchg
inc
std
int
sti
sbbb
test
mov
dec
leave
outsl
mov
pushl
out
out
inc
lock
dec
adc
addr16
pop
daa
xchg
add
test
clc
pop
push
andb
add
inc
sbb
daa
mov
pop
enter
stc
jp
addb
in
push
ljmp
mov
data16
ficomps
out
mov
mov
movsb
mov
xchg
enter
rcpps
adc
sti
dec
inc
cmp
and
add
pop
sub
sti
xor
jae
jns
fsubl
or
or
cs
dec
push
ret
ror
lea
outsb
sbb
xchg
or
mov
adc
lret
xorl
xchg
imul
ret
lock
dec
lods
or
lcall
and
repz
lret
lret
cmp
ja
or
mov
scas
call
repnz
inc
fadds
or
pop
out
sub
pop
int3
movsb
push
repz
sahf
mov
cmp
arpl
rorl
aaa
or
push
in
jecxz
sub
mov
vunpckhps
xor
bound
out
test
pop
shrl
shll
mov
pop
in
and
cmp
inc
sbb
hlt
cmc
mov
sahf
pop
sahf
dec
dec
jmp
mov
cmp
cmpsb
in
mov
arpl
movsl
test
pop
and
adc
and
xor
fbld
leave
imul
cmp
sbb
add
out
push
jnp
inc
sub
popa
mov
mov
and
cmpsl
dec
dec
daa
insb
dec
imul
add
in
sbb
aaa
jno
scas
cmp
test
jmp
mov
ljmp
push
and
je
jg
jecxz
jns
dec
mov
jl
cltd
mov
sar
shl
inc
or
lock
mov
mov
xchg
subl
sub
jnp
imull
addb
dec
inc
and
or
add
push
mov
dec
pop
jb
les
dec
add
mov
xchg
push
cli
rcrb
mov
xlat
or
jmp
mov
push
sti
dec
pop
xchg
hlt
pusha
lret
mov
sub
and
add
mov
outsl
xchg
fidivs
shlb
cmpb
nop
xor
jle
xchg
enter
inc
cs
add
sti
dec
xchg
xor
outsl
or
inc
sbb
mov
fisttpll
in
xor
imul
in
lods
dec
or
shlb
fiadds
xor
dec
shrl
repz
mov
mov
add
adc
fwait
inc
inc
inc
dec
jle
sahf
cmp
leave
mov
mov
cltd
aad
jp
mov
add
add
xchg
adc
fstl
mov
daa
pushf
adc
inc
jp
cmp
dec
lea
lods
cmp
sbb
mov
mov
cmpl
sbb
or
xor
js
mov
mov
push
fs
cltd
mov
in
xchg
cld
xchg
push
cmp
xchg
mov
dec
jae
stos
sub
cld
cmp
fsubr
cmp
mov
or
fnstenv
insl
cmp
jge
arpl
pusha
adc
push
insb
ljmp
push
xlat
testl
cli
xchg
xchg
std
xlat
js
jecxz
dec
cs
jbe
push
into
sbb
ja,pn
jg
xor
push
test
push
and
mov
cmp
outsl
add
aas
sub
enter
fwait
xor
jo
cmp
fs
pop
xorb
cltd
scas
cltd
jge
je
push
mov
xor
jmp
test
or
callw
mov
test
hlt
arpl
sbb
ds
hlt
outsb
xchg
ss
inc
inc
jg
cli
or
test
test
push
iret
and
mov
sbb
sub
fisttpll
in
mov
xor
mov
jle
enter
subl
sub
js
in
dec
jg
stc
cli
inc
adc
mov
test
mov
mov
dec
je
add
xor
mov
test
stos
lea
movsb
pop
cltd
test
jae
xor
out
pushf
sbb
jbe
movsl
mov
test
mov
sbb
dec
pop
mov
jp
mov
loope
dec
jb
xchg
test
push
clc
ret
sub
sahf
jns
xchg
xor
test
push
lds
cmpsb
sahf
xchg
jns
outsl
lret
sub
cmp
and
jnp
xor
cmp
fnstcw
into
mov
push
xchg
test
cmp
loope
add
es
in
rcr
dec
add
or
fnclex
js
shlb
mov
repnz
dec
outsb
mov
add
lock
xor
in
ret
subl
jmp
push
dec
in
loop
pop
mov
ds
insl
mov
push
stos
in
adc
jo
pop
cmp
insb
ss
mov
stos
lea
sub
hlt
push
hlt
sbb
sbbb
add
mov
cmp
mov
js
subl
inc
rcr
insl
pop
das
fsubrl
fildll
mov
cmp
lock
sbb
out
nop
mov
movsb
and
iret
ss
fs
cld
inc
lahf
jo
or
mov
gs
hlt
testb
push
push
arpl
push
xchg
cli
jp
inc
lods
lods
jbe
popf
or
outsl
shr
loope
ret
hlt
add
daa
lock
fwait
jnp
pop
ror
push
in
leave
pushf
int
or
mov
mov
jmp
sti
pop
fcompl
jne
enter
jmp
inc
popf
xchg
rorl
and
lds
cmpsl
in
jg
sbb
sarl
adc
xchg
sub
ljmp
jecxz
jbe
fidivs
or
lock
jae
push
sti
fdivs
rcll
xor
mov
and
xor
jecxz
aad
mov
mov
scas
out
idivb
movb
xchg
push
add
cmpsb
popf
ss
icebp
inc
fildl
mov
js
cmp
xchg
sub
xchg
xor
mov
adc
xchg
pop
add
mov
jecxz
mov
pop
fdivrl
icebp
add
orl
stos
mov
aam
pop
mov
pusha
mov
cld
dec
mov
adc
repz
xchg
push
push
subb
push
clc
imul
xchg
ljmp
shlb
lahf
leave
sbb
add
inc
push
xor
sahf
adc
dec
dec
sbbl
lods
dec
test
imull
push
push
mov
pop
mov
push
add
and
adc
scas
pusha
xlat
outsl
xchg
jmp
mov
xchg
cmpsb
call
hlt
je
and
mov
ret
jl
leave
inc
jne
aam
pop
shlb
pusha
cmp
lahf
xchg
fldt
dec
xchg
mov
dec
shlb
mov
je
lea
call
subl
out
scas
jmp
cmc
jmp
or
dec
lock
xor
popf
mov
pop
sub
shlb
nop
cs
arpl
shl
push
pop
push
cli
mov
xor
bound
jnp
lds
inc
mov
movsb
jnp
pop
stc
and
inc
js
les
out
ret
loope
and
adc
inc
xorl
add
cmp
add
lahf
pop
cli
cmpsb
sbb
es
fwait
test
jecxz
push
inc
aas
xchg
inc
scas
xor
sti
inc
incl
cmp
fldt
jne
mov
pop
pop
inc
dec
rcrl
adc
inc
push
rcll
or
push
clc
push
dec
mov
mov
in
push
les
dec
push
add
mov
or
xchg
aam
subb
repnz
jns
fists
call
inc
and
flds
sub
xchg
mov
decl
and
lret
sub
mov
jmp
ficoms
and
mov
xchg
repz
pop
loope
stos
jne
pop
cmc
sti
sti
gs
cmp
fstps
xor
js
jae
lahf
je
jl
pop
mov
cld
outsl
or
ljmp
jae
dec
lret
pop
lret
mov
pop
add
xchg
lcall
sbb
pop
cmp
sub
imul
dec
jle
inc
dec
cwtl
sbb
jb
dec
mov
lret
insb
fistpl
adc
mov
aas
testl
mov
jle
push
ret
cmpsl
adc
mov
and
sub
repz
pop
in
insb
sti
dec
popf
in
daa
xchg
adcl
mov
aas
sbb
dec
aaa
clc
jne,pt
clc
insb
mov
push
jbe
pushf
lods
es
pushf
fimuls
inc
lea
int3
jp
arpl
mov
lahf
mov
xor
repz
jg
mov
stc
in
mov
xchg
out
ficoms
add
and
cmp
adc
lcall
loope
mov
dec
inc
in
ret
mov
sarb
lret
fiadds
dec
sahf
mov
adc
out
push
lahf
test
and
fs
xor
sub
lahf
daa
cmp
mov
lret
hlt
add
mov
pop
mov
mov
popf
addr16
xor
pop
mov
push
loope
out
andl
into
daa
jne,pt
addr16
push
mov
mov
inc
adc
outsl
jns
fbld
ss
repnz
int3
jae
xorb
je
ljmp
decb
add
and
xor
xchg
fwait
hlt
cmpsb
adc
mov
out
push
fcmovnu
mov
int
outsl
jns
and
xor
inc
mov
mov
sub
daa
cmp
push
andb
aad
adc
popf
pop
or
shrb
cld
or
lock
mov
inc
mov
int
negl
push
test
outsw
xchg
mov
xchg
adc
roll
and
push
jno
aad
dec
push
and
xchg
outsb
clc
lock
scas
dec
pop
cmp
adc
and
jno
add
adc
sbb
out
jg
push
jne
out
dec
int3
movsl
aaa
sub
or
inc
repz
adc
pop
cmp
aas
negb
inc
cmp
ds
inc
lahf
outsb
push
outsl
mov
and
jo
addr16
cmp
mov
push
sub
pop
scas
mov
addr16
or
sbb
arpl
push
pop
fs
sbb
gs
data16
shrb
or
les
jmp
in
ret
xor
stos
pop
push
pop
xor
sbb
jecxz
push
and
xor
test
adc
push
cld
inc
mov
mov
mov
mov
sub
pop
ret
int
pop
clc
repz
fwait
dec
jbe
add
cwtl
stc
or
es
nop
fimull
cld
cmc
push
push
aad
add
int3
or
and
adc
loopne
test
out
mov
fbstp
adc
or
sbb
sbb
stos
inc
roll
test
pop
cmpsl
cmpsl
pop
nop
in
ljmp
movsl
cmpsl
std
xor
rcrl
mov
pushf
bound
inc
xchg
mov
sub
imul
xchg
jl
std
fiadds
xchg
jecxz
es
mov
movsl
push
lcall
mov
fisttpll
add
ja
add
or
cmpsb
into
dec
inc
int
sub
adc
push
pop
inc
xchg
jne
mov
imul
movsb
add
ret
mov
push
jl
sbb
inc
dec
pusha
mov
jno
jle
cmp
xor
mov
pop
cmpl
insb
call
xchg
dec
xor
and
xchg
pusha
hlt
sub
jb
add
xor
cwtl
mov
pop
mov
pop
dec
fidivrl
das
lret
es
cmp
mov
push
pushf
call
jl
sub
inc
aad
imul
or
pop
scas
scas
hlt
adc
jns
inc
pop
imul
es
repnz
cmpl
add
inc
mov
cmpsb
ror
out
mov
xchg
inc
daa
pushf
scas
or
and
orl
daa
or
dec
daa
cli
sbb
pop
mov
pop
das
insb
pminub
xchg
lcall
in
mov
fadds
lret
sbb
mov
pop
in
and
out
adc
rclb
adc
lcall
xchg
cmc
lret
push
sti
pushf
adc
movsl
mov
loopne
pop
cmp
mov
sub
add
aaa
inc
mov
pop
stc
add
fisttps
push
lcall
pop
das
and
and
std
test
sarb
dec
add
mov
xchg
cmp
jecxz
outsb
add
lea
sub
or
mov
in
pop
repnz
jp
cmp
repnz
inc
sub
ss
mov
dec
js
mov
and
pushf
pop
mov
dec
dec
xchg
cld
dec
test
loop
pop
cli
hlt
aas
rcll
xchg
mov
shlb
imul
jns
dec
xchg
test
ja
xchg
test
xor
je
sbb
jmp
mov
xor
das
into
jae
cmp
outsb
into
hlt
in
dec
fildl
jmp
push
push
mov
ret
sti
stc
add
jp
insl
jmp
negl
lods
in
cltd
stc
sub
sar
aaa
je
leave
push
mov
test
lahf
aas
xchg
test
pushf
jae
add
lds
push
cmpsl
fs
in
mov
push
repz
out
pop
xchg
xchg
mov
add
cli
fnstenv
movsb
push
push
sbb
push
cmc
push
push
cmpsl
adc
adc
add
sbb
inc
push
push
test
push
push
orb
test
inc
je
xchg
jmp
cmp
mov
push
push
popf
inc
push
jno
mov
mov
pop
cmp
popf
clc
movsl
and
les
out
call
repz
ds
add
mov
dec
push
adcl
push
loopne
xchg
movsl
and
loope
sub
mov
sbb
shll
clc
rorl
insl
arpl
pop
pop
adc
mov
and
sbb
lret
and
xor
movsb
mov
mov
sub
test
mov
adc
nopl
ljmp
notl
xchg
mov
push
in
stc
sbb
stos
add
jl
mov
outsb
dec
xchg
ret
inc
jmp
jne
repnz
lods
aas
pop
push
cmp
clc
mov
push
neg
and
mov
or
inc
cmpsb
or
daa
dec
sarb
fisubl
and
psubusb
nop
mov
iret
mov
sub
xchg
mov
push
enter
addr16
xor
sub
mov
add
pop
xchg
pop
ret
xor
pop
jae
push
push
and
fidivl
in
mov
dec
out
lea
mov
stos
sbb
aam
std
lock
jno
icebp
int
pop
xchg
dec
int
inc
add
or
in
adcb
pop
lret
lcall
xchg
jo
add
repnz
push
and
les
in
iret
xchg
mov
or
pop
fxch
lea
divb
add
loope
ret
pop
sbb
out
sub
insb
jp
xchg
cld
pop
inc
mov
xlat
data16
shl
insl
rep
out
cmp
pop
mov
pop
call
jmp
xchg
cmp
stos
fmull
ljmp
jg
xchg
test
jb,pn
cmp
pushf
aam
iret
or
insb
std
int
iret
jecxz
sar
inc
insb
mov
jge
mov
mov
pop
hlt
adc
cmp
inc
call
inc
push
mov
mov
int3
mov
jb
cwtl
xchg
test
fdivr
mov
push
push
cmp
xchg
inc
xchg
aas
cwtl
ret
lret
mov
jecxz
movsl
test
sarb
jo
add
pop
adc
fisubrl
pushf
push
pop
rcrl
dec
dec
mov
sbb
cmp
xchg
adc
inc
lods
fcos
push
out
rcrb
out
lods
mov
cmp
jno
push
std
shrb
adc
dec
popa
mov
movsb
hlt
sub
pop
sahf
cmp
lahf
mov
daa
cmp
repnz
pushf
shrl
adc
push
sub
popa
xorb
push
jne,pt
or
xchg
stos
sub
or
cmpsl
movsl
ja
cmpsb
int3
out
xor
adc
sbb
jl
arpl
dec
popa
xlat
rorl
xor
idivl
popa
adc
adc
bound
ret
adc
xlat
xchg
iret
xor
push
out
xchg
add
mov
pop
jg
in
inc
mov
dec
cld
pop
sub
jl
in
loop
ja
sub
inc
shlb
in
fsubrs
jge
data16
aad
jae
jns
ja
icebp
and
xchg
xor
and
mov
sbb
xchg
push
push
dec
cmpsb
aas
dec
icebp
std
pop
leave
sub
xchg
dec
inc
jmp
shll
fadds
push
lret
fwait
int
shrb
fwait
aam
jmp
push
insl
mov
push
rolb
jne
aam
rolb
mov
adc
mov
adc
lret
insl
loopne
lds
cmp
loopne
push
and
lahf
bound
fs
dec
jb
jl
dec
xchg
adc
int3
cmp
push
mov
jno
push
aas
add
stos
dec
out
and
sbb
dec
push
adc
inc
rcl
pop
mov
sbb
xlat
xor
scas
inc
cmp
cwtl
les
jg
or
pop
stos
stos
repz
xlat
in
daa
inc
sub
loopne
lcall
bnd
fcmovu
pop
std
mov
cli
jg
clc
into
xor
jmp
add
out
ja
out
bound
aaa
jb
cmpsl
icebp
xchg
mov
mov
imul
and
js
jl
mov
aam
push
xchg
nop
and
sbb
sbb
mov
push
xor
stc
adc
pop
js
pop
jo
inc
xor
je
loope
add
outsb
push
mov
cwtl
setp
popf
lcall
xchg
push
sbb
aas
dec
imul
or
ds
les
cs
sti
orl
jp
inc
lods
jmp
xchg
outsb
inc
hlt
push
inc
fwait
lahf
add
sub
jnp
sbb
movsb
aaa
xchg
pop
adc
mov
addr16
fcmovnb
pop
iret
mov
xor
push
cmp
out
in
movsb
je
fimuls
shr
mov
push
aad
or
fwait
jmp
inc
aas
sub
dec
loope
mov
mov
ja
mov
fnstenv
xlat
mov
outsl
mov
jns
scas
bound
enter
ret
inc
mov
dec
mov
sbb
xor
dec
sub
je
mov
jp
repz
inc
mov
xor
lret
shrb
stc
int
pop
push
xchg
sub
jns
rolb
lcall
sarb
xchg
push
mov
and
imul
xchg
jmp
out
addr16
mov
scas
inc
push
cwtl
fs
sahf
and
ss
xchg
dec
test
xchg
in
shr
leave
sub
fcmovnb
push
fildll
fwait
lock
out
ljmp
outsb
lret
test
jl
cmp
mov
daa
fsubr
pop
ss
in
jl
outsl
inc
aad
pusha
and
push
add
xor
pop
mov
push
dec
sub
and
test
int
in
jbe
fldl
add
xlat
into
inc
stos
sbb
cwtl
mov
fwait
int
xchg
xchg
add
rcr
fnsave
popa
jle
dec
in
data16
cmpl
xchg
pop
mov
insb
insl
or
xchg
in
scas
push
xor
icebp
add
mov
adc
lea
ret
add
std
cmp
rorb
mov
dec
xchg
fwait
popl
aas
pop
lahf
jno
insb
lahf
fildll
add
and
incb
into
push
push
pop
and
cld
or
sub
pop
fptan
push
push
xlat
in
pop
jns
inc
pop
fcompl
inc
arpl
xchg
rorb
lods
dec
inc
fcmove
mov
das
cmp
das
ss
add
cmpsl
fnclex
ss
test
xor
in
roll
icebp
lods
ficomps
mov
in
cmp
faddl
mov
inc
pop
add
jns
and
dec
clc
clc
mov
lret
xchg
enter
push
cmpsl
cmp
add
or
jle
in
inc
cmpsl
dec
and
push
dec
aaa
iret
arpl
shll
add
scas
cmp
mulb
sbb
xchg
jl
pop
jg
add
xor
pop
sub
sbb
lock
insl
insl
and
cmp
cmp
shrl
xchg
pop
enter
push
jae
aam
jmp
stos
hlt
adc
lret
mov
mov
rcl
xchg
mov
and
sbb
mov
adc
pop
xchg
adc
fwait
out
insl
push
ss
inc
fiadds
xor
mov
sub
jecxz
sti
ljmp
out
aam
dec
ret
mov
aad
pop
cmpsb
fcomi
fnstenv
mov
xor
mov
mov
out
je
cmp
mov
in
sahf
mov
pop
pop
inc
leave
ret
pop
mov
cmpsl
add
dec
or
sub
and
xor
out
mov
sbb
bound
cwtl
xchg
dec
dec
adc
xor
je
add
movb
or
pop
shrb
cli
popf
addr16
add
bound
add
adcl
dec
mov
xchg
lret
mov
jns
mov
gs
mov
stos
popf
mull
fneni(8087
jnp
cmovno
and
xor
xchg
inc
and
mov
adc
loop
sbb
stos
repz
rcrl
inc
cmc
jl
mov
pop
scas
cmc
mov
fwait
mov
icebp
add
mov
aaa
out
js
lret
ss
dec
and
mov
movl
ret
mov
jnp
adc
mov
lods
cmp
xor
test
sub
testb
jg
pop
test
jns
fld
mov
sub
mov
ret
iret
mov
inc
push
cltd
mov
lret
outsb
popf
je
cmc
jecxz
mov
xchg
aam
or
jg
dec
mov
imul
jp
popf
test
mov
push
aaa
jle
mov
pop
jbe
jae
push
push
test
xchg
int
mov
and
test
sbb
mov
lods
in
loopne
add
jecxz
addr16
lea
rol
xchg
ss
xlat
add
pop
sbb
push
jno
push
mov
cmp
xlat
adc
ljmp
push
into
daa
enter
push
dec
jns
pop
push
jl
cmc
insl
fidivl
mov
arpl
mov
mov
test
test
cld
sbb
nop
daa
xor
mov
xor
push
out
ds
dec
mov
in
flds
dec
dec
ds
test
xchg
add
in
and
orb
ds
lcall
mov
jns
out
pop
leave
pushf
repz
or
sbb
pop
stos
hlt
shlb
xor
and
xchg
xor
dec
pop
jge
mov
jp
push
nop
jp
mov
mov
mov
cld
mulb
and
mov
or
fucomip
das
or
adc
pop
loopne
inc
mov
loopne
xor
xor
cmc
leave
jnp
test
or
repz
dec
cmpb
sub
jne
fcoml
xor
rcrb
adc
pop
fwait
int3
cmp
pop
push
lods
cltd
enter
and
push
fs
test
divl
lret
jmp
sub
dec
pop
ss
test
xor
push
dec
pushf
outsb
pop
in
inc
les
gs
cmpsb
out
push
cmc
out
pop
xchg
loop
xchg
xchg
scas
or
push
adc
dec
cmp
fcompl
mov
fwait
pop
xchg
push
inc
pop
loope
push
cmc
xor
es
sbb
loop
cmp
jl
loopne
jnp
fiaddl
mov
aad
test
call
mov
inc
jo
jg
fcompl
fcoms
pop
cmpsl
lock
icebp
das
jnp
ret
roll
cmp
mov
cmp
test
adc
scas
shrb
mov
iret
add
xchg
xchg
jge
push
push
xchg
lods
pop
inc
cld
jae
mov
push
ss
jl
rcl
into
pop
jne
les
movsb
neg
push
in
dec
mov
cmpsb
fucomp
cwtl
rcrl
lcall
into
cmc
and
lea
jno
sarl
mov
movsb
adc
adcb
es
pop
mov
out
xor
into
lret
sub
das
dec
in
ljmp
sbb
mov
mov
dec
jecxz
lds
das
mov
mov
cmpsb
push
dec
inc
sbb
imul
aad
push
test
lock
fs
pop
inc
sub
outsb
and
mov
push
mov
xor
cmp
out
xor
xchg
pop
jno
inc
sub
mov
sub
test
mov
clc
xchg
pop
and
inc
pushf
mov
cmpsl
test
psrld
addb
popf
rcr
push
lock
fstl
in
lock
push
sub
incb
ret
pop
rcll
inc
nop
mov
enter
scas
orl
mov
movsl
cmc
mov
sub
jne
and
shl
cltd
fisubrl
pop
rclb
insb
jmp
xchg
cltd
jns
and
push
test
sub
fstps
push
lret
mov
lret
jmp
pushf
sub
fldl
pop
dec
arpl
aam
dec
shll
or
ljmp
hlt
les
mov
jmp
inc
fs
and
pavgb
jbe
adc
cmp
pop
ja
xchg
cmp
mov
mov
sbb
test
pop
out
divb
stc
mov
out
mov
jg,pt
out
leave
push
jg
pusha
in
jae
sub
mov
fs
test
sbb
jns
mov
paddw
mov
mov
xlat
in
dec
ds
pop
mul
not
xlat
xchg
mov
leave
ljmp
mov
movsb
fisttpl
out
xlat
dec
pop
scas
sub
pop
cmc
jne
cmpb
pop
jge
clc
ret
lret
loop
or
out
leave
in
loopne
cwtl
cmc
and
arpl
pop
pushf
xchg
mov
repnz
xchg
cmp
int3
dec
icebp
xor
fistpl
into
jmp
ljmp
pop
stc
mov
xchg
stc
cmp
xchg
push
inc
xchg
pop
mov
adc
outsl
lods
popf
insl
and
data16
xor
cmp
sub
daa
hlt
push
lds
add
cmp
push
pop
cmp
xchg
and
jns
push
leave
pop
stc
insb
adc
negb
add
enter
xchg
ret
aaa
leave
mov
addr16
cmp
sub
cld
cld
hlt
daa
fnsave
jo
mov
add
icebp
ja
jge
mov
mov
cmp
inc
or
or
push
cmp
mov
sub
pop
loope
in
incl
dec
push
mov
fdivr
test
mov
ret
mov
dec
popa
dec
jae
push
cmp
add
jb
add
sbb
sarl
xchg
dec
inc
daa
cli
in
loop
jge
in
xchg
scas
push
mov
in
scas
xor
adc
dec
imul
lret
xchg
mov
xor
mov
lret
sbb
adc
out
sbb
or
xchg
pop
mov
stos
rolb
dec
xchg
loop
mov
add
xchg
add
das
lods
das
lahf
mov
dec
ja
xlat
pop
adc
pop
sbbb
sbb
pop
mov
aas
stos
aam
xchg
out
pop
sub
les
cwtl
lock
adc
pop
outsb
in
aas
mov
mov
push
ds
or
sbb
rorb
vpaddw
lods
pusha
or
out
loopne
sbb
sub
push
mov
mov
fisubs
mov
ret
pop
mov
imull
pop
movl
in
in
sub
sub
cwtl
add
out
pop
inc
lret
and
call
push
repnz
clc
fdivrs
arpl
push
movsb
mov
in
mov
ljmp
jmp
jae
insb
or
aad
hlt
adc
sbb
pusha
notb
or
fcoms
js
adc
sub
and
mov
aad
out
mov
mov
xlat
int3
push
mov
jecxz
sti
push
aad
pop
lea
cmp
icebp
lahf
jg
dec
in
push
pushf
outsl
mov
out
cwtl
test
dec
mov
arpl
in
or
test
rcrb
jnp
cwtl
cmpsb
lret
push
xchg
loopne
shrb
mov
or
gs
aaa
lods
inc
dec
add
daa
mull
cmp
jle
xor
mov
pop
inc
xchg
sub
ficoml
mov
mov
nop
aas
push
mov
mov
lcall
nop
dec
pop
scas
cli
data16
cmpsb
not
pop
mov
bound
inc
xchg
insl
add
xchg
clc
inc
cmp
les
xchg
pop
orb
pop
xor
fstps
xlat
dec
repz
mov
iret
cmp
call
jmp
popa
hlt
pop
cmc
cwtl
mov
inc
ljmp
sbb
pop
repz
rsqrtps
mov
pop
add
push
inc
dec
pop
adc
cmpsl
mov
or
push
scas
cmp
cmp
push
adc
and
pop
clc
add
int
ds
aaa
push
push
add
xorb
pop
aas
inc
push
or
push
pop
scas
js
out
dec
or
ud0
insl
xchg
mov
icebp
fstp
or
in
xor
call
jg
adc
sub
int
mov
sub
push
mov
hlt
outsl
inc
push
push
aas
cmp
pop
cli
xchg
push
inc
pop
pop
inc
mov
inc
push
inc
add
shll
mov
loope
lret
scas
xor
aad
movsl
jg
fs
add
mov
inc
or
or
std
sub
mov
loop
mov
mov
fnop
lcall
mov
dec
jns
js
mov
icebp
or
push
mov
and
sbb
push
mov
outsl
xchg
in
xlat
add
ss
pushf
cmpsl
mov
jo
scas
mov
pop
xor
mov
mov
xchg
jecxz
fildl
adc
movsl
pop
adc
and
loope
shl
xor
je
mov
mov
jecxz,pn
and
into
shrl
outsb
lret
xchg
out
xor
jno
and
shl
mov
xlat
inc
in
mov
cmp
sar
mov
repnz
push
push
xor
popa
jmp
mov
mov
scas
int3
lock
rcrl
cld
mov
call
out
xchg
adc
mov
and
mov
fists
mov
sbb
mov
in
mov
mov
dec
push
scas
mov
jo
push
jmp
push
dec
fmuls
out
dec
fisubs
aas
mov
dec
add
out
mov
sbb
ret
add
in
mov
push
xchg
addb
nop
adc
in
in
in
stos
shlb
sbb
or
adc
sbb
adc
daa
xor
out
xchg
cs
dec
ljmp
cmpsl
insl
jmp
in
push
xor
hlt
dec
bswap
ja
jno
insb
sti
dec
push
or
pop
xor
loopne
xchg
xchg
pop
add
sahf
mov
and
push
mov
test
fiaddl
mov
mov
fbstp
and
lods
jle
gs
cwtl
lahf
lret
sub
jle
popa
mov
adc
jnp
inc
jne
insl
ljmp
cmpb
jmp
cmp
push
lret
stos
clc
adc
aaa
sbb
pop
cli
fwait
ljmp
cmp
std
ror
iret
enter
lahf
loope
mov
mov
in
and
in
sahf
mov
out
push
mov
in
mov
cmp
pop
push
repz
lods
sbb
jbe
roll
das
jmp
add
dec
pop
xchg
ret
sbbb
xchg
pop
jl
adc
xchg
cmpsb
adc
or
cs
aad
faddp
pop
popa
xchg
adc
pop
or
je
xchg
xorb
sbb
fcom
mov
cmp
xchg
dec
test
cmp
push
inc
lea
adc
lds
sbb
int3
sub
mov
cmpsl
cmp
rorl
sub
addr16
adc
and
fistl
aad
loope
aam
cmp
push
test
mul
insl
lods
mov
mov
aaa
xor
add
sbb
ds
xor
les
pop
xor
dec
outsb
scas
lds
test
outsb
in
cs
mov
sbb
in
inc
ficoms
mov
sbb
sub
mov
mov
xor
insl
leave
mov
push
cltd
inc
push
scas
lret
add
popf
nop
mov
and
or
dec
lahf
add
addr16
add
mov
dec
mov
clc
ja
pop
shl
movb
sbb
xor
shlb
fst
loop
sahf
idivb
mov
shl
push
pop
lea
sub
xor
out
push
cmpsl
pop
kmovw
cli
test
js
stos
enter
or
clc
jno
test
ficompl
std
lahf
mov
or
mov
repz
fnsave
xor
jl
out
adc
movb
aam
ljmp
data16
orps
pop
loop
and
or
inc
cmp
push
repnz
sub
mov
test
lret
sahf
mov
jl
inc
mov
inc
fisubs
jne
xchg
mov
push
or
sbb
fs
and
jne
cld
mov
lods
test
and
inc
mov
jne
test
popa
dec
dec
outsb
xor
xor
in
mulb
and
fcmovnbe
nop
fxch
cmpsl
aam
imul
pop
test
push
jns
adc
nop
xchg
repz
jp
xchg
or
mov
xchg
push
inc
pop
pop
pushf
sbb
aad
jge
sbbb
loope
jmp
rolb
or
dec
mov
xchg
stos
sbb
push
add
lods
sahf
notl
xchg
lret
mov
rolb
ret
das
dec
sub
push
rcl
push
xchg
mov
cmc
pop
fistl
jge
rorb
or
call
add
pop
daa
out
jnp
sub
leave
mov
jle
or
sub
aas
mov
aad
or
push
cmp
add
fists
ret
cmp
add
rcll
push
orb
lods
push
inc
pop
mov
scas
pop
xor
enter
cmp
xchg
hlt
dec
int3
call
cmp
pop
rcr
flds
push
scas
adc
outsl
stos
xor
inc
sbb
rcrl
popf
xchg
sar
movsl
movsl
and
xor
xchg
pop
push
cmpsb
xchg
out
daa
ds
in
loop
sub
sub
fisubrl
sbb
mov
loopne
adc
dec
add
push
movsb
scas
dec
adc
jl
cmp
add
pop
mov
leave
or
mov
inc
cmp
and
jp
adc
cwtl
pop
idivb
sbb
fidivrl
rorl
xor
sbb
push
cmp
sub
mov
pusha
pop
push
fbstp
adc
out
add
xchg
insl
push
test
fs
cmpsl
icebp
enter
aas
ds
sbb
pop
add
lret
inc
jp
test
or
fchs
push
cmp
cltd
daa
pop
sub
aaa
push
xor
pop
sub
cmc
jbe
jne
mov
std
inc
in
repnz
or
addr16
fists
cwtl
lcall
loopne
mov
ss
jae
imul
dec
or
sub
mov
cmp
adc
sbb
add
mov
mov
ds
or
xor
lods
mov
gs
leave
fnop
push
xor
and
test
cmp
jecxz
scas
jnp
and
jmp
add
sti
xchg
ror
js
mov
and
in
pop
lds
bound
enter
mov
mov
test
pushf
adc
sbb
iret
mov
jne
sub
jne
or
std
xor
pushf
xorl
dec
roll
pop
std
mov
rorl
push
out
sub
int3
repnz
bound
mov
in
and
lret
stos
cmc
ficomps
int
sbb
lret
push
cmp
pusha
pop
in
xor
jecxz
fisubrs
rcrl
call
movsl
dec
bound
mov
adc
adc
sub
cmc
std
popa
loope
and
push
push
sbb
mov
ret
stc
sbb
xchg
xor
cmp
sti
pop
or
test
pop
mov
inc
in
jmp
nop
bound
out
dec
xchg
jae
jae
push
push
cs
movsl
shll
mov
xchg
xchg
and
pop
jmp
inc
lret
push
inc
mov
lock
sbb
or
or
inc
push
inc
and
mov
inc
rclb
sbb
push
mov
sti
movsl
shll
xchg
das
mov
pop
ss
aas
data16
in
sub
inc
inc
inc
outsl
fimull
out
test
mov
ljmp
fcomps
mov
jo
jmp
cld
dec
sbb
jnp
shll
or
adc
je
hlt
subb
outsl
xor
out
mov
cmp
adc
push
aam
stos
jno
les
pushf
mov
sub
movsl
clc
nop
sub
dec
ret
scas
dec
mov
sbb
and
mov
decl
pop
xor
inc
and
xchg
hlt
loope
cmc
xchg
sub
scas
jl
subl
mov
out
scas
xor
mov
cmpsl
sarl
mov
inc
popa
sbb
pop
xor
add
push
jg
add
rcrl
push
fxch
jecxz
push
int3
adc
jmp
dec
sub
mov
and
ss
test
and
or
jns
hlt
jo
xchg
jb
mov
ret
xor
stos
adc
lcall
pop
rclb
pop
sti
pop
je
pop
jmp
xor
stos
jae
cmp
ja
punpcklbw
mov
nop
daa
jb
and
out
and
pop
je
lret
and
cmc
push
cmc
incb
jno
add
pop
adc
adc
pop
lcall
lret
aad
mov
push
xchg
popa
sub
push
xchg
mov
in
cmp
push
testl
xchg
and
sub
pop
pop
bound
mov
int
in
mov
xor
xlat
xchg
mov
or
outsl
and
inc
ret
cmpsb
insl
adc
push
push
lods
mov
cmp
cld
adc
xlat
mov
scas
xor
jae
inc
cmp
mov
test
xor
lds
rolb
add
cmp
add
ss
jns
in
push
sbb
xor
das
sub
inc
sbb
jg
sar
ret
fisubrl
xor
and
insl
ds
insb
lods
dec
push
mov
mov
add
fwait
nop
or
lahf
lods
sbb
jo
scas
mov
cmc
adc
add
loop
aad
insl
adc
aas
dec
push
sahf
jmp
sbb
aad
or
push
inc
pop
and
inc
sub
mov
pop
sub
test
pop
lret
push
repnz
aaa
in
inc
inc
add
jle
jl
loopne
inc
insb
sahf
mov
jp
jns
pushf
or
sbb
addr16
je
fdivrs
and
xchg
or
push
sbbb
jbe
mov
ror
inc
push
sub
in
pop
inc
push
mov
sbb
mov
ss
cs
test
mov
jecxz
xor
nop
fmul
cld
das
sbb
cmp
sahf
adc
fsubs
test
insl
mov
push
push
cwtl
jle
lds
or
and
push
pop
inc
dec
in
xchg
xchg
scas
pop
dec
push
add
test
sub
mov
out
and
jge
popf
jmp
push
jb
imul
sbb
ss
leave
cmc
jge
dec
push
or
push
bound
fisubl
movsl
and
push
dec
mov
and
xor
js
mov
mov
pop
xlat
xor
cld
pop
jmp
mov
inc
iret
mov
mov
push
lcall
stos
fiaddl
pop
xlat
lds
fs
pop
test
jmp
cmc
cmp
lea
fucomip
ret
jecxz
insl
pop
mov
xchg
bound
mov
lret
pop
add
cmpsb
and
mov
push
pop
sbb
ret
xor
or
pop
adc
or
add
xchg
scas
inc
mov
jmp
jb
scas
cli
movsb
add
sub
xchg
outsb
sbb
add
jae
fiadds
xor
fldln2
fidivrs
mov
sbb
stos
xor
sbb
repnz
in
mov
push
lahf
add
jl
lcall
dec
jmp
push
or
xchg
arpl
cmpsb
pop
mov
ss
push
jle
inc
insl
loope
test
in
andb
adc
xchg
call
mov
mov
mov
test
inc
cltd
jo
inc
ja
or
or
jmp
push
jno
mov
notb
sti
pop
add
bound
test
jbe
adc
sarl
mov
mov
pop
mov
pop
jae
fmuls
lods
jp
push
push
jnp
ror
sti
adc
sbb
es
fucomi
xor
lds
push
sbb
mov
out
dec
mov
mov
xor
icebp
ficoml
sbb
and
xorb
dec
scas
sub
sub
aaa
fisttpl
mov
mov
fisttpl
ljmp
aas
add
sbb
cld
cld
repnz
pop
mov
xor
sub
sub
aad
cmp
rcrb
aad
outsb
cmpsl
lahf
hlt
fwait
sbb
jecxz
mov
notl
imul
and
frstor
xor
mov
adc
out
and
sub
dec
js
mov
pop
push
inc
xchg
sti
inc
dec
cmpsb
js
test
push
fnstenv
out
sub
lds
iret
testb
inc
cmpsb
mov
xor
sub
mov
or
add
adc
dec
imul
shl
mov
xor
inc
pop
outsl
fsts
jae
daa
and
jae
fstpl
aad
nop
adc
loopne
mov
sub
inc
pop
fisttps
sub
dec
dec
sahf
test
pop
sub
mov
adc
mov
push
add
stc
cmovb
cwtl
gs
pop
sti
xor
dec
xlat
rcrb
fnstcw
sbb
lret
outsl
push
pop
mov
lods
shr
mov
xor
lret
cmpsb
aas
mov
inc
pop
cmp
cmp
ret
pop
in
lods
mov
je
mov
inc
cmpl
add
clc
sub
push
pop
mov
inc
mov
sbb
dec
movsl
jns
stos
mov
mov
mov
in
movsbl
mov
adc
add
outsl
xlat
push
fsub
imul
das
inc
cmp
xchg
pop
cltd
push
cltd
adc
test
out
add
sub
std
rclb
dec
cmp
sbb
in
rorl
jns
mov
shll
icebp
push
pusha
fists
adc
push
cmpsl
in
pop
bound
test
push
dec
das
shlb
les
push
scas
jns
push
loopne
outsl
jmp
inc
pushf
jae
int3
ficoml
cmp
mov
jge,pn
daa
cwtl
mov
mov
inc
lret
in
pusha
ficomps
hlt
jno
testl
aaa
xor
adc
pop
lods
pop
xchg
sub
pop
movsb
push
es
aaa
cld
sbb
out
test
xchg
dec
or
std
fldl
hlt
mov
cmp
sbb
sub
push
push
inc
mov
cmp
mov
js
add
push
pusha
aad
mov
mov
mov
shr
pushf
lds
pusha
lock
xchg
imul
cmpsb
or
rol
jl
mov
lea
xchg
les
push
ss
adc
nop
mov
inc
pop
pushf
cmpsb
out
mov
push
ret
sbb
push
mov
iret
fidivrl
cwtl
pop
add
fs
mov
mov
std
nop
dec
pop
out
cmp
in
in
inc
cwtl
dec
mov
pop
cs
lret
or
lahf
loope
ret
xchg
mov
cmpsw
int3
or
loopne
mov
rcr
jecxz
push
add
negb
movsb
addr16
jecxz
adc
sub
dec
mov
mov
jmp
insl
mov
gs
add
mov
rcll
pop
jge
call
call
pop
adc
inc
adc
xor
mov
cli
xchg
sti
js
lock
sbb
sahf
inc
dec
and
jae
adc
cli
lahf
push
push
push
arpl
xchg
cmpsb
adc
lds
scas
je
in
insl
mov
test
sub
rcrb
ret
and
ret
outsl
out
lea
ret
mov
inc
cld
push
cli
hlt
inc
das
add
repnz
sbb
mov
mov
xchg
adc
cld
dec
cmpl
sahf
cmp
mov
rcr
jns
push
mov
dec
mov
dec
dec
fs
add
mov
or
add
addr16
inc
mov
sti
sbb
das
out
dec
or
push
sbb
shrb
imulb
pop
inc
inc
movsb
xor
mov
push
xchg
in
pop
xor
stos
and
mov
loop
hlt
push
mov
addr16
icebp
xchg
xchg
and
insb
scas
aaa
mov
aas
add
ljmp
mov
dec
jns
inc
fld
icebp
cmp
fcmovu
pop
cmp
sarb
enter
xor
dec
enter
clc
nop
test
call
outsb
mov
push
pushf
fdivl
mov
sti
push
jmp
rclb
sbbb
xorb
inc
std
adc
in
push
adcl
push
gs
nop
and
cmp
shlb
cld
ljmp
test
cmp
outsb
insb
push
das
dec
add
sarl
xchg
decl
clc
mov
std
pusha
or
xor
imul
fisubrl
stos
fmuls
jp
iret
xor
rcll
mov
lods
mov
adc
cmp
dec
int3
mov
mov
xor
das
push
icebp
pushf
xchg
push
add
mov
and
mov
and
jmp
pop
cmp
push
dec
fists
loope
xchg
rclb
stos
fwait
mov
jnp
call
xchg
shll
fwait
andb
jno
push
jno
arpl
add
and
stos
stos
jne
js
scas
das
push
fwait
xor
pushf
mov
rolb
outsb
adc
ret
mov
in
jg
clc
jno
dec
xchg
adc
movsl
mov
sahf
xchg
push
pushf
xchg
mov
add
bnd
shrb
jle
mov
fidivs
push
out
mov
test
scas
fldenv
xor
sub
stc
push
push
xchg
loope
sbb
inc
cmp
pop
aad
jge
stos
push
hlt
and
adc
mov
add
pushf
xor
sub
repnz
adc
idivl
push
pushf
fisubrl
mov
adc
mov
sti
push
jbe
xchg
mov
sbb
adc
in
dec
push
test
mov
pop
fnsetpm(287
or
mov
pop
adcb
push
pop
add
sbb
movsb
dec
fmul
push
jnp
and
ljmp
int3
in
movsl
lret
xchg
fs
movsl
or
add
data16
gs
jnp
imul
insl
cmpsl
xor
out
loop
dec
push
in
sahf
dec
sub
jo
adc
aas
xor
lret
jecxz
das
xchg
jl
ljmp
jnp
iret
stos
loop
pop
xchg
fstps
inc
call
mov
hlt
or
sbb
mov
jnp
xchg
jo
lods
addl
adc
xor
mov
pushf
mov
rcrl
sbb
ret
inc
pop
mov
jae
mov
mov
jo
dec
xor
or
mov
and
mov
cmp
sbb
push
ljmp
cmp
pop
movsb
push
adc
jecxz,pn
daa
aad
mov
mov
ljmp
bound
fwait
cld
insb
jmp
cmc
icebp
lret
xchg
and
add
aaa
pop
ss
mov
mov
mov
adcb
setg
jnp
jle
incl
mov
mov
pop
sub
lea
adc
push
orl
xor
imul
mov
inc
and
dec
insb
fs
je
jns
dec
sbbb
jno
aaa
dec
aam
xor
in
mov
cmpsb
cwtl
dec
push
movsb
cmpsb
sub
mov
pop
adc
add
shlb
sahf
mov
mov
sub
bnd
jno
jne
jg
xlat
std
pop
popf
inc
xchg
add
jmp
daa
pop
jmp
add
std
fcompl
arpl
fs
xor
jecxz
cmp
scas
mov
mov
xor
sbb
int
or
xor
xorl
in
cs
sbb
cmp
adc
int3
mov
xorb
and
push
fs
pop
xor
sbb
or
xor
rclb
xor
jmp
outsb
sbb
mov
and
lret
add
adc
insl
inc
sbb
mov
jb
add
ffree
adc
or
push
jno
lret
jle
outsb
push
sub
cmpsb
into
pop
loopne
iret
es
out
cld
idiv
xchg
push
loop
ds
in
enter
pop
addr16
dec
add
fsts
mov
sbb
leave
pusha
arpl
add
out
pop
daa
mov
test
inc
inc
and
aaa
fcomip
sub
adc
imul
xor
fidivl
mov
jbe
out
faddl
jb
and
sub
sarb
in
das
jb
sbb
dec
mov
loop
fsubrl
cmc
test
jne
jnp
mov
sbb
mov
addr16
popa
add
dec
pop
out
popf
pop
ljmp
inc
adc
mov
push
add
test
adc
pop
mov
or
pop
pop
aam
jnp
or
xchg
scas
insb
mov
jmp
ljmp
loop
leave
in
push
lret
out
jg
sub
pop
pop
mov
jp
mov
shrl
add
pop
and
sahf
sbb
dec
ljmp
ret
pop
sbb
dec
stc
mov
xchg
ret
or
mov
push
dec
js
aam
mov
subb
pop
mov
rorb
nop
je
mov
push
cmpsb
unpckhps
sbb
and
pop
ss
js
jae
jns
pop
push
adc
in
jb
jbe
mov
ljmp
xor
mov
xchg
pop
sub
xchg
fdivs
out
call
enter
ljmp
xor
ss
xchg
xor
cmp
in
xchg
repz
fucomip
fists
xchg
in
stc
adc
out
sbb
xchg
pop
mov
dec
pop
outsl
xchg
inc
andl
mov
mov
or
test
pop
repnz
push
mov
cmp
push
in
or
mov
add
sbb
jbe
mov
sub
es
sbb
rcrb
loop
lret
lret
sbb
mov
inc
mov
jge
ljmp
mov
ret
dec
fstps
fwait
test
das
shl
pop
adc
pop
xorl
mov
stos
or
sbb
adc
lds
shlb
mov
pop
in
and
cltd
push
or
jne
mov
out
insl
xor
fs
sete
sbb
cmp
pop
jno
mov
movl
adc
mov
add
mov
jecxz
pop
clc
adc
xlat
fildll
push
ljmp
cmp
xchg
pusha
sbb
ljmp
adc
dec
add
sahf
cs
mov
ret
fwait
pop
push
pop
mov
inc
orb
mov
dec
in
push
ret
inc
fisubs
mov
push
push
cmp
cld
adc
nop
jo
push
lock
add
outsb
sbb
test
add
insb
mov
pushf
xor
xchg
in
ret
dec
mov
fistl
fisubs
xor
movsb
mov
loop
jno
pop
pop
fimull
movsl
movsb
addr16
mov
sub
clc
nop
and
mov
push
arpl
sub
test
add
or
sub
mov
cmc
cld
out
test
cltd
mov
stos
out
xchg
push
and
jnp
and
mov
mov
outsl
mov
inc
les
push
xor
shlb
mov
mov
popa
xchg
hlt
cmpl
rorb
pushf
inc
rcrb
sub
and
and
cmpsl
mov
jo
mov
cmp
pop
jb
loopne
jne
shl
ret
jecxz
lret
int3
push
imul
in
mov
add
in
mov
sti
pusha
xchg
test
jecxz
mov
enter
outsl
pop
lahf
sahf
mov
icebp
pusha
nop
jns
cs
addl
jmp
in
push
sub
and
push
pop
ds
ja
stc
xor
fsubs
dec
test
mov
movsb
hlt
push
xor
jmp
xor
xchg
jo
outsb
add
and
fmul
shlb
push
mov
lret
cmp
and
sbb
in
and
jg
popa
and
and
stc
pop
jecxz
ret
mov
push
pop
test
sub
out
shl
xchg
je
gs
stc
jg
lods
mov
cmc
pop
inc
sbb
push
shl
sar
xchg
mov
fincstp
push
jmp
dec
mov
fsubs
lea
xchg
inc
or
jl
xchg
lcall
dec
push
add
stos
loope
imul
nop
and
mov
xchg
sbb
cmp
jne
lcall
jecxz
push
movl
and
push
test
xchg
dec
add
ljmp
aas
gs
scas
hlt
adc
mov
adc
sub
sbb
and
pop
ljmp
nop
inc
js
mov
in
or
in
pop
movsb
cli
mov
mov
call
jns
popf
push
ljmp
notl
adc
out
jb
insl
jb
dec
lock
aaa
or
into
lret
stos
jmp
jnp
ds
mov
clc
xchg
and
mov
outsl
shrl
gs
cmpsl
push
pop
push
jbe
push
add
subb
pop
out
cmp
repz
mov
dec
add
add
aam
mov
lods
sub
mov
nop
jge
adc
dec
arpl
xor
ret
imul
and
hlt
or
ja
lea
mov
mov
loopne
push
jo
inc
scas
cmp
pop
je
add
dec
gs
hlt
mov
stc
push
mov
dec
in
lret
lret
push
and
pop
pop
push
and
gs
cmp
mov
mov
push
add
and
inc
pop
push
xor
adc
addr16
lds
dec
aad
ss
mov
dec
push
cmp
roll
pop
jle
in
push
lcall
and
jbe
testl
and
es
lods
push
xchg
adc
pushf
movsl
lods
mov
je
in
mov
pop
das
dec
loope
std
nop
adc
pop
fdivl
lock
or
lea
pop
out
pop
sub
or
jmp
jne
pop
pusha
cmp
inc
icebp
xchg
mov
inc
je
sti
mov
push
cmp
adc
lcall
sub
mov
cmp
lods
or
filds
insb
std
test
mov
fldl
out
pop
outsl
pop
addb
ss
jo
inc
aaa
pusha
jg
mov
and
mov
ret
push
data16
sbb
push
dec
push
int3
mov
cmp
aaa
jg
in
push
push
dec
inc
aam
in
cmp
fcomps
lret
sub
out
dec
ret
decb
jge
popa
add
push
lcall
mov
pop
mov
cmp
movsl
mov
pop
cwtl
jb
or
pop
orl
sbb
cmpsl
cmc
add
movsb
arpl
adc
add
jge
jg
clc
xor
popa
add
xchg
pop
dec
mov
lea
adc
lret
lds
out
sti
adc
fwait
mov
pop
sbb
jp
jg
mov
cmpsb
icebp
jge
xchg
call
insb
pop
enter
dec
pop
lret
loope
jge
mov
or
mov
rcl
sbb
xor
sub
sbb
push
push
mov
sub
imulb
repz
jns
sbb
mov
idiv
cmp
dec
dec
popf
jp
xor
repnz
lds
mov
push
popf
fldl
jg
scas
out
outsl
ficoms
movsl
mov
dec
fistpll
xor
movsl
scas
loopne
mov
cmpsl
pop
adc
nop
cltd
mov
imulb
jg
outsl
mov
mov
stos
shrl
mov
fwait
adc
add
loop
mov
stos
in
mov
repz
aad
dec
jmp
loope
addr16
inc
nop
leave
jge
test
stc
movsb
int3
fbld
or
aas
out
std
pop
and
out
dec
mov
sbb
ja
mov
test
outsb
stc
xor
or
sarl
push
adc
sarb
xor
ret
int3
cmp
sbb
icebp
xchg
push
dec
xchg
outsb
inc
aam
push
xor
xor
in
js
jg
jle
mov
shl
popl
fisubrs
ja
insl
shll
scas
insb
inc
xchg
xor
dec
adc
aam
adc
inc
in
iret
mov
sbb
gs
xchg
cld
leave
dec
aam
insl
fsts
push
xor
cmpsl
mulb
cs
mov
add
sub
addr16
bound
aam
test
out
push
mov
adc
push
push
stos
lods
push
js
adcl
aad
dec
add
mov
jecxz
out
xor
push
sbb
cmp
int3
pop
inc
jl
stc
xchg
repnz
js
mov
and
mov
not
mov
jbe
push
lret
in
pop
dec
aad
push
cmp
or
mov
out
sbb
adc
rcll
fwait
in
fcom
mov
leave
out
aaa
fildl
sbbl
nop
or
push
sub
leave
xchg
xor
stos
pop
dec
add
inc
aas
loop
dec
lods
dec
mov
add
lods
int
inc
lahf
cmc
ret
ss
jmp
xor
sbb
inc
sub
pop
aad
lahf
test
dec
in
hlt
jg
in
imul
inc
jbe
mov
movsl
ss
push
xchg
popa
inc
cmp
ja
test
mov
xorb
in
mov
inc
sbb
mov
imul
fists
test
mov
jg
popf
xor
movsl
mov
cmp
out
sbb
push
cmpsl
ret
ja
btcl
sub
pop
stos
call
shll
test
shrl
add
iret
jne
mov
mov
jecxz
loop
mov
sbb
xor
or
mov
xchg
xchg
push
pop
test
push
mov
push
add
jbe
jg
jbe
sub
push
repz
bound
fnstsw
xacquire
mov
test
pop
pop
imul
add
imul
sbb
push
pop
int3
repnz
mov
loope
cmp
mov
mov
pop
pop
enter
rolb
cld
adcb
icebp
add
ret
test
push
jmp
dec
test
and
xor
jle
xchg
stc
adc
sub
shll
push
cmpsb
stos
or
ffree
aaa
sbbb
mov
xchg
sahf
dec
imul
scas
push
lods
test
mov
test
rcrb
jecxz
adc
in
in
fsubs
ds
cli
inc
or
rclb
lahf
push
mov
sub
rcll
aam
jp
push
xor
and
sbb
cmpsl
fsubrp
bound
lahf
push
inc
mov
pop
jne
pop
imul
clc
negl
xchg
mov
inc
and
push
jbe
xlat
in
dec
mov
add
xor
dec
lods
sbb
mov
cmp
lock
mov
sub
cli
sub
push
dec
bound
mov
cmp
out
ljmp
mov
bound
jp
addr16
ss
jae
popf
add
scas
sbb
insl
in
scas
push
sub
mov
mov
mov
es
sub
adc
icebp
mov
inc
std
sub
outsl
mov
in
daa
jp
or
imul
je
jno
fs
push
out
rcll
sahf
sbb
jno
adc
js
shrl
int3
jge
out
mov
data16
ret
clc
cmp
sbb
out
jecxz
leave
xor
aas
movsl
push
sbb
leave
daa
pop
adc
sbb
mov
fwait
outsl
cmp
mov
daa
lods
enter
mov
iret
pushf
fldenv
cmp
ds
roll
std
out
push
jg
xchg
adc
mov
adc
push
dec
out
or
ret
in
jge
jecxz
pop
leave
pop
push
popa
popa
sti
inc
jnp
mov
in
mov
or
in
mov
inc
or
test
idivb
adc
push
adc
ss
mov
movsw
das
adc
xchg
cmc
leave
ja
daa
aad
cmpsl
mov
rclb
jmp
sbb
addr16
dec
dec
lahf
loop
sub
pop
imul
lock
dec
pop
mov
jbe
xchg
outsb
push
mov
popf
hlt
aas
repnz
std
movsb
and
adc
in
xchg
jo
xchg
lret
mov
push
ja
xchg
or
mov
xchg
mov
dec
jmp
movsb
cltd
outsl
xchg
dec
mov
shll
pop
insl
inc
push
inc
repz
pop
imul
shrb
pusha
push
mov
pop
loopne
rorb
xchg
lock
rolb
nop
lods
pop
insl
repnz
fwait
addr16
daa
jo
cmp
sbb
dec
add
cmp
outsb
or
cmp
jb
add
xchg
cmp
push
add
pop
or
movsb
ljmp
imul
push
sbb
fdivrl
lds
sbb
insl
pop
inc
fsubrs
movsl
ds
fucomip
jp
aad
lods
aam
add
mov
subl
jnp
test
into
sub
push
fcomps
push
pop
loopne
add
adc
orl
repz
lea
and
mov
add
shl
imul
ja
add
sub
mov
or
pop
into
rcll
cmp
std
inc
sbb
or
dec
jp
mov
outsl
inc
or
iret
jbe
ss
or
add
adc
sahf
sbb
push
imul
ficompl
imul
adc
test
rcr
xchg
dec
fcomps
add
ds
jge
inc
int
cmpsb
inc
cmp
imul
andl
je
and
lea
adc
sub
inc
push
ljmp
inc
pushf
pop
cmp
ss
xchg
push
dec
fdivl
and
cmp
iret
jbe
mov
jne
idivl
leave
and
aaa
loope
jecxz
push
cmp
push
push
mov
pop
insb
push
and
stos
push
and
aad
ds
mov
jl
dec
mov
xor
stos
sahf
cld
cmp
sbbl
pop
out
mov
test
insb
test
addl
jecxz
xor
pop
jmp
cmc
mov
mov
fiadds
add
pop
imul
cmc
ss
loop
imul
xor
clc
cmpsl
jle
repnz
in
add
test
hlt
jl
mov
sub
bound
or
mov
test
les
mov
enter
sbb
ficomps
test
push
mov
or
vpsubw
push
das
pusha
popa
decl
in
cs
mov
cmp
ret
sti
fsubrs
pushf
stc
mov
sub
xchg
test
jb
lds
jae
stc
mov
out
pop
pop
cld
mov
arpl
mov
sbb
inc
int3
sarl
mov
pop
mov
adc
lods
jbe
fidivl
and
outsl
inc
sti
inc
push
sbb
and
mov
add
xchg
je
add
loop
mov
ds
mov
aas
mov
adc
dec
sahf
pop
cmp
cltd
dec
dec
jb
jns
xchg
in
jbe
pop
gs
xchg
lcall
frstor
xor
mov
push
mull
je
arpl
pop
jb
pop
sbb
xchg
sbb
stc
data16
push
jae
adc
repz
sbb
cmp
jb
and
stos
ret
or
or
movsl
add
adcb
pop
mov
sbb
and
jo
in
push
in
xor
sbb
ret
cwtl
repnz
mov
es
or
or
cmp
push
jae
sbb
dec
popa
pop
jbe
insb
iret
and
outsb
addr16
add
jns
shll
std
xor
lock
push
ret
dec
jns
cmpsb
sbb
adc
imul
jnp
mov
imull
and
inc
in
sub
in
mov
jle
pop
jne
mov
mov
jno
and
repz
xchg
pop
cs
mov
mov
push
cmp
hlt
push
ss
out
pop
inc
mov
xchg
fisubrs
and
mov
push
in
push
ja
inc
adc
ja
mov
and
ljmp
cmpsl
jecxz
and
mov
nop
dec
loop
mov
mov
jp
pop
enter
aas
mov
pop
mov
stos
pop
inc
pop
test
push
sbb
shlb
xchg
jb
xchg
and
fwait
shll
jl
stos
jne
loop
cmp
jbe
repnz
adc
lcall
mov
jns
sub
lret
lods
mov
jne
pop
jmp
lods
and
mov
stc
js
and
leave
jns
pop
push
es
sub
shll
roll
mov
fcmovb
pushf
jl
push
and
daa
push
clc
xor
cmp
in
fsts
or
xchg
sub
cmp
rcll
dec
lea
mov
sbb
pop
push
xchg
std
mov
popf
push
aas
in
lock
out
inc
roll
sbb
pop
push
cmp
adc
shrl
inc
sub
lock
mov
push
addr16
aas
les
outsb
dec
ja
push
add
rcll
lock
mov
xchg
add
dec
jl
and
cmp
or
xlat
cmp
jne
dec
xchg
mov
xchg
leave
imul
push
imull
mov
loope
in
mov
sbb
xor
stc
or
push
add
push
adc
or
and
mov
movsl
xchg
es
mov
jmp
pushf
lcall
xchg
je
or
pop
es
pop
cmpsb
mov
lahf
loopne
xorb
ret
dec
fsubr
js
add
add
lods
xchg
fisttps
in
or
inc
pop
jmp
push
leave
mov
push
mov
inc
lds
out
js
out
or
out
sub
add
cmp
mov
and
cmc
jecxz
jecxz
loop
cmp
cmpsb
jl
pop
scas
mov
mov
add
idiv
mov
inc
arpl
adc
fwait
mov
mov
ret
sub
mov
add
and
div
xchg
xchg
pop
sub
cmc
pop
sti
mov
sub
arpl
xlat
or
aad
push
lock
push
push
sarl
cmpsl
mov
dec
lret
jmp
ja
jecxz
lcall
dec
imul
lods
fstpl
nop
pop
jae
xchg
xlat
sub
out
inc
or
sub
cmpb
leave
mov
add
int
clc
lock
sbb
dec
add
mov
movsl
out
out
jae
lcall
icebp
xchg
je
fwait
loope
dec
lret
mov
popf
rcrb
fdivl
or
in
add
dec
int
jmp
dec
jg
adc
push
fwait
outsb
arpl
cmpsb
fcompp
lock
sub
add
stc
xchg
and
mov
in
outsl
aam
push
ss
xor
idivb
mov
add
inc
inc
in
in
cmpsl
cmp
mov
enter
test
mov
test
mov
jb
xor
push
es
movl
xchg
push
jae
xchg
sub
js
scas
lcall
jbe
cmpsb
out
inc
pop
cld
cmc
out
sub
loopne
pushf
iret
das
dec
mov
push
push
popa
inc
or
mov
add
adc
in
shll
insb
push
lods
sarb
mov
push
sub
mov
jg
mov
sbb
cs
lea
je
rclb
in
rcll
inc
push
sbb
stos
pop
inc
jo
or
aad
repz
out
je
jg
add
dec
dec
loopne
test
fldenv
js
jle
rolb
sahf
test
adc
mov
dec
scas
fadds
pop
sub
push
cmpsl
ds
les
xor
sbb
jno
or
mov
push
add
testl
fnsave
outsl
int3
je
and
or
mov
push
imul
test
lods
mov
xorl
mov
add
cmp
or
or
sbb
les
jbe
sti
outsb
sahf
mov
out
xor
xchg
aad
push
sbb
loopne
ja
fs
das
and
sbb
repz
dec
xor
xchg
mov
sbb
push
cmp
popa
pop
and
push
or
xchg
das
inc
dec
push
cld
add
in
dec
int3
pop
lret
lret
cmp
jmp
mov
jg
add
mov
cmc
test
outsl
dec
in
je
jg
xchg
cmp
fidivrs
out
dec
add
pop
lock
adc
jmp
or
jb
enter
movsl
adc
inc
hlt
cmp
jecxz
push
ret
add
xchg
add
repnz
sahf
cmp
je
dec
adcb
sub
pop
fcmovb
mov
into
jge
mov
lret
das
xor
pop
outsl
push
stos
or
sbbb
mov
mov
sub
les
fdivrs
inc
sbb
pop
aas
idivb
fucomp
scas
or
aas
imul
jle
dec
scas
push
movsl
ds
rorl
xchg
fadd
in
add
mov
rcr
xchg
nop
sub
mov
es
movsb
mov
rclb
mov
mov
sub
dec
and
pushf
and
add
insl
inc
sbb
xchg
dec
jle
pop
std
inc
sub
ss
pop
pop
jg
mov
mov
mov
aaa
mov
dec
rcll
je
sahf
sbb
lods
mov
pop
pushf
inc
adc
mov
fisttpl
mov
fsubrl
jno
sub
adc
jp
or
mov
out
in
gs
shr
ja
xor
aaa
sarl
pop
mov
mov
clc
adc
rorl
in
xchg
leave
int3
or
push
pop
sub
je
ret
inc
sub
mov
test
in
cmp
lods
push
into
cli
jle
and
aam
jae
mov
push
push
add
xor
fidivrl
lods
call
inc
add
bound
add
aam
test
pop
push
ja
push
pop
bnd
and
aam
fisttps
test
jmp
jecxz
sub
cmp
mov
test
push
or
or
stc
ret
push
fdivrs
int3
es
jecxz
push
or
add
or
inc
add
xchg
mov
clc
insl
outsb
mov
lock
cli
in
mov
fstl
frstor
mov
aaa
adc
pop
cmp
mov
mov
xlat
sub
ljmp
lret
test
cmp
aaa
addr16
shrb
iret
adc
dec
hlt
mov
fistl
popf
sbb
test
out
or
loope
pop
push
jae
sbb
pusha
addr16
gs
stc
leave
and
test
inc
dec
dec
sub
inc
lods
ds
xlat
or
inc
jp
sbb
jmp
mov
out
loop
or
xor
dec
sbb
fdivrl
arpl
or
pusha
aaa
stos
aam
push
sbb
daa
imulb
xchg
add
pop
das
mov
mov
repnz
dec
lods
and
adc
idiv
test
lods
xlat
dec
push
xchg
iret
mov
sbb
pushf
lods
inc
xchg
imul
int3
xlat
in
rcrb
cmp
pushf
or
inc
lret
lret
cli
sub
sbb
cmp
inc
ret
xor
adc
test
adc
or
adc
decl
push
imulb
out
fimuls
dec
jbe
pop
push
push
cmp
adc
fdivr
test
inc
ret
cmp
ret
push
sbb
fimull
fisubrl
repnz
xor
sbb
adc
cmp
addb
lret
js
sub
imul
jo
push
out
sti
imul
sarb
bound
pop
mov
pop
subl
mov
mov
stc
cmp
int3
js
rcrb
lds
lcall
push
test
inc
fisttps
mov
xor
cmp
push
add
adc
xchg
mov
mov
sub
lahf
pop
sbb
mov
xchg
cmpsb
dec
sbb
or
fiadds
shrl
fidivl
in
pop
insb
jno
xchg
cmp
jnp
push
fsubrs
dec
cmp
iret
push
addl
sbb
mov
cmp
insb
mov
inc
or
xor
mov
jg
mov
lcall
test
scas
dec
xchg
aas
jns
movsl
cmpsb
cmc
sub
and
jle
sub
enter
and
push
int
nop
ret
scas
xchg
inc
mov
mov
xor
scas
cwtl
jl
add
dec
xor
adc
daa
xchg
jns
test
pop
js
lret
in
pop
fldcw
fsubr
ja
movsb
test
cltd
call
or
call
mov
sbb
leave
pop
and
add
add
cmp
inc
mov
fwait
aam
or
xchg
ret
mov
sub
repz
push
movsb
inc
push
sti
mov
lock
inc
data16
mov
push
jns
mov
and
inc
cmp
mov
pop
bound
pop
rclb
fwait
adcl
aas
fsts
mov
inc
add
cmp
pop
imul
ja
fcompl
pushf
test
push
addl
test
mov
jbe
rol
add
push
inc
lds
inc
sub
sub
push
fcoml
popf
not
jnp
push
xchg
clc
icebp
lock
stos
jno
cmp
xor
mov
aaa
mov
sub
cmc
fwait
or
aas
inc
test
insl
aas
scas
or
lcall
jecxz
ljmp
or
xchg
mov
sub
or
jbe
xchg
lcall
adc
outsb
sbb
in
loopne
inc
add
sub
or
cmp
fs
push
pop
dec
lahf
push
ret
iret
cmpsb
test
or
pop
mov
and
and
jle
out
and
cmp
clc
lods
je
xor
inc
stos
dec
aas
lret
or
inc
cmp
dec
ret
mov
mov
xchg
or
jmp
sti
ss
xorl
out
mov
das
cmp
ljmp
jns
hlt
into
fwait
inc
fidivrl
jne
dec
subb
frstor
sbb
jl
pop
push
dec
dec
jmp
lahf
sbb
and
jl
or
mov
adc
fimull
icebp
push
call
mov
inc
das
xchg
cmp
jl
pop
cmp
push
lock
push
jmp
sub
mov
add
bound
es
jmp
cltd
push
push
cwtd
cld
stos
add
scas
xchg
push
lahf
cmpsb
mov
jl
mov
or
repnz
sbb
in
pop
pop
clc
and
xor
xchg
popa
ja
cmc
leave
es
fidivrl
ret
fiaddl
pop
mov
imul
clc
and
arpl
mov
test
jo
in
or
pop
xchg
xlat
pushf
mov
xchg
test
push
sub
pop
push
scas
shll
aam
jb
ret
xchg
add
lods
aaa
inc
jb
dec
inc
and
jns
pop
sbb
or
cmc
shll
stos
pop
nop
pushf
ljmp
sti
jg
fstps
sbb
cmp
cmpl
and
ret
jbe
movsl
pop
pop
fisttpl
jo
adc
fiadds
xor
iret
outsb
mov
xchg
outsb
pop
push
jp
lret
clc
add
jae
xor
cmc
mov
repnz
pop
andl
call
pop
fwait
insl
lods
repz
pusha
imul
or
fisubrs
jne
jne
sbb
pop
rcrb
cld
data16
and
sahf
daa
into
cld
dec
loopne
mov
outsb
mov
mov
mov
inc
dec
imul
push
outsb
gs
shrl
jno
pusha
adc
loopne
push
into
push
icebp
je
ret
ja
in
adc
cmpsl
rolb
adc
stc
push
imul
cmp
push
push
ret
hlt
test
or
mov
popa
mov
lea
sbb
loope
outsl
cltd
dec
jecxz
and
adc
pop
insb
push
test
fcoml
je
adc
iret
arpl
mov
jae
stos
push
xlat
adc
fs
stc
es
repnz
fadds
jbe
dec
mov
outsl
or
cmc
test
ret
push
cmpsb
cltd
sub
pop
iret
xorb
jbe
popf
add
out
pushl
cld
loopne
popa
icebp
into
cli
dec
ja
stos
xor
pop
sbb
adc
repz
push
fdivrl
arpl
push
cmpsb
push
popf
push
idivb
insb
sub
lret
shlb
aad
mov
std
mov
fistpll
add
pop
imul
push
pop
adc
xor
dec
lods
mov
notb
loope
mov
pushf
mov
lds
adc
lea
rcrl
jne
test
mov
push
push
std
cltd
adc
in
repz
imulb
int
popf
mov
adc
mov
cwtl
dec
mov
cmpsl
gs
stc
repnz
ud0
lods
pop
mov
xor
or
jno
pop
fcmovnbe
pop
jl
jmp
inc
sbb
mov
incb
xchg
mov
inc
inc
fldcw
lcall
mov
sbb
mov
aam
push
sbb
jmp
xor
adc
inc
fists
insb
sbb
push
loope
pop
xor
mov
sub
inc
iret
out
dec
pop
pop
dec
inc
sti
ret
and
jno
add
test
push
mov
mov
mov
push
cltd
fwait
clc
addl
int3
cmp
pop
shl
adc
in
cli
dec
xor
hlt
jmp
mov
pushf
jb
sbb
cmp
push
out
or
aaa
popa
mov
pop
cmp
push
test
dec
subl
rol
push
cmp
cs
mov
sub
subb
or
inc
add
sbb
push
pop
pushf
cmp
mov
sbb
mov
mov
push
inc
push
jmp
cmp
call
stos
insb
sbb
iret
mov
push
jbe
xor
and
in
jb
push
push
ljmp
xor
sbb
and
int3
xchg
movsl
lock
movsl
imul
sub
jnp
roll
mov
xor
inc
int
ds
aaa
cmp
ja
test
stos
and
push
test
out
xchg
adc
sub
jle
repnz
daa
xchg
pop
repz
loope
dec
cmp
out
and
push
xchg
fsubrl
std
mov
adcb
pop
sub
mov
test
jge
cmp
cmp
dec
mov
pop
popf
jge
jle
aas
mov
and
cmp
lock
dec
dec
mov
lcall
ret
call
sbb
pop
xor
cmpsl
pop
mov
cwtl
cwtl
push
mov
push
dec
fstps
mov
dec
test
push
xor
enter
outsl
sub
inc
shrl
insl
pop
dec
outsl
loop
repz
push
jnp
mov
dec
dec
outsl
or
sub
shll
repz
aam
add
repnz
cli
adc
inc
mov
pusha
insb
sbb
xchg
dec
push
aaa
cli
stos
into
lock
scas
add
push
pop
inc
mov
jns
sbb
dec
adc
jecxz
mov
xchg
sub
lea
push
xchg
mov
mov
or
mov
out
add
sbb
arpl
lea
mov
lcall
jo
cmc
call
sbb
test
std
lock
lock
movsl
mov
leave
adc
inc
pop
pop
jae
cmp
mov
int
inc
filds
jmp
loope
fidivl
js
pop
mov
fs
inc
pop
and
pop
loop
jecxz
in
and
sbb
sub
dec
stos
xor
dec
mov
and
cmpsb
fcompl
gs
cmp
adcl
cmp
adc
ds
inc
nop
and
je
and
repnz
xor
shrb
mov
jbe
and
push
lds
or
sbb
push
fisubs
clc
mov
stc
mov
mov
fldenv
add
xor
xchg
fs
movsl
xchg
xor
incl
sahf
icebp
push
movl
fisubrs
push
in
push
ret
cwtl
fnstsw
xchg
sub
inc
or
dec
add
pop
jle
sub
and
jns
pop
mov
int
add
fildl
gs
fisubl
pmaxsw
mov
sahf
test
test
sbb
pop
xchg
inc
gs
fucom
mov
dec
pop
hlt
out
adc
fadds
push
sbb
add
stos
mov
in
cmp
jp
out
mov
xor
arpl
icebp
cmp
ds
pop
sub
or
xor
test
jmp
sbb
push
or
leave
mov
xchg
push
and
dec
pop
out
imul
loope
push
mov
fidivrl
test
jmp
sub
addl
shr
mov
mov
fincstp
inc
leave
jo
cli
sbb
push
xor
xchg
nop
cld
lret
in
int
loopne
rorb
jl
cmp
dec
sbb
xchg
daa
outsb
test
leave
mov
inc
and
or
dec
mov
push
sub
ds
inc
dec
icebp
pop
sub
mov
pop
pop
push
jae
mov
cmpsl
out
xor
loopne
mov
add
jg
je
mov
pushf
push
scas
sbbb
inc
xor
xor
push
incl
xor
cmc
add
dec
ficoml
xchg
add
push
or
mov
push
out
or
dec
mov
add
les
sub
pop
test
jno
loope
mov
fidivrl
xchg
test
fildll
test
mov
cmp
xchg
jb
adc
adc
dec
sti
mov
nop
push
sahf
add
aam
leave
hlt
adc
int
xchg
mov
and
leave
mov
inc
and
cmp
lret
sahf
daa
pop
fnstsw
fdiv
sbb
lret
mov
mov
cmpsb
shrd
fwait
sbb
mov
push
jle
push
mov
out
in
jg
xchg
dec
shll
fimull
push
test
data16
adc
insb
aad
stos
and
mov
loopne
cmp
or
push
mov
gs
or
call
loopne
adc
insb
sub
ret
mov
pop
push
lret
notl
lds
xchg
scas
lret
ljmp
pop
in
mov
stos
sub
cmpsb
out
xor
jecxz
rolb
jl
push
fs
enter
inc
stos
fsub
enter
add
mov
mov
adcl
aaa
stos
negb
mov
mov
pop
aas
adc
push
icebp
rep
fbld
jg
cs
sub
adc
aas
enter
insb
es
push
jl
adc
push
sub
xchg
jg
and
gs
jl
lock
push
xchg
and
inc
adc
jae
dec
jo
dec
and
xchg
fs
inc
test
or
pop
nop
mov
sbb
inc
divb
sti
adc
xor
lock
or
sarl
lea
xchg
mov
outsl
out
mov
movsl
cs
lret
lret
mov
mov
sahf
pushf
je
sbb
jp
sub
ljmp
mov
sbb
in
mov
pop
dec
fisttpll
lods
jecxz
outsb
or
cmp
test
jo
inc
add
arpl
mov
lret
cwtl
xchg
stc
cli
inc
mov
pop
mov
dec
lea
jne
aaa
fs
mov
pop
or
add
cld
mov
sbb
push
loope
fwait
sbb
push
dec
pop
and
mov
add
mov
mov
or
pop
test
int3
gs
push
and
test
aaa
test
cmp
xchg
sub
push
ror
dec
cwtl
jle
ja
in
ds
cld
stos
aaa
bound
mov
mov
adcl
xor
adc
sbb
or
mov
inc
push
dec
bound
fs
inc
imul
or
das
dec
lret
les
aam
mov
push
inc
push
pop
or
scas
repz
inc
xor
inc
into
das
lock
and
inc
out
push
mov
mov
orb
add
pop
push
cs
and
cmp
inc
pop
fnstcw
fdivrs
or
mov
and
pop
or
jb
pop
sbb
fwait
xor
mov
aam
dec
cld
mov
hlt
jno
hlt
dec
mov
mov
sub
xor
mov
call
jae
add
js
pop
mov
lret
jno
enter
push
jle
jnp
je
int
xor
outsb
enter
fstpl
aas
xor
adc
out
xchg
mov
jmp
pusha
andb
mov
loop
mov
jo
stc
xor
or
or
cmp
sbb
xor
mov
enter
mov
fbstp
and
xchg
lret
arpl
inc
es
out
add
and
bound
shl
arpl
xor
mov
mov
or
jns
mov
fiadds
push
out
dec
subb
or
idivb
repnz
pop
mov
cmpb
or
push
jae
sub
push
fnstsw
pop
ret
lcall
push
shll
in
adc
add
loopne
xchg
mov
adc
pop
sahf
sahf
cmp
ret
das
mov
pop
popa
lret
lret
repz
pop
or
lret
es
adc
jp
dec
std
rclb
imulb
xchg
lahf
ja
pop
cmpsb
stos
clc
xchg
mov
push
push
pop
out
daa
jmp
frstor
das
push
shr
pop
cmp
cmp
xor
cmp
bound
pop
in
mov
xor
ds
call
cmp
mov
leave
jmp
je
fidivs
add
pop
mov
push
jno
xchg
dec
mov
sbb
adc
test
sub
stos
jecxz
xlat
pop
sub
adc
xchg
inc
in
push
lods
sbb
xchg
cmp
jo
dec
fadds
mov
cld
add
push
dec
aad
mov
clc
pop
mov
or
js
and
or
repnz
gs
or
les
mov
cmpsb
xor
pushf
idiv
iret
jg
rclb
pop
dec
cli
push
mov
pop
cmp
in
jae
and
xor
mov
xor
push
push
or
add
pop
outsb
jnp
xor
or
cmp
sbb
int3
cwtl
outsl
das
in
dec
popl
pop
ficoml
inc
pop
gs
in
insb
jno
mov
jb
test
pop
or
loopne
lods
or
ss
fiadds
and
inc
or
ret
int
adc
mov
dec
leave
mov
fstpl
inc
mov
out
addb
pop
pop
dec
fadds
mov
leave
xchg
mov
xchg
inc
lea
shll
and
ret
imul
xor
mov
rclb
mov
fstl
mov
mov
nop
dec
insl
and
pop
lods
cltd
notb
or
in
cs
adc
scas
xchg
clc
pusha
push
cmp
push
sub
jl
jne
jmp
test
inc
push
sbb
mov
xor
xchg
rorl
iret
adc
in
lahf
mov
add
xor
dec
orl
pushf
cld
jge
rorl
repz
and
std
dec
push
cmp
mov
fstpl
adc
jno
in
sub
push
js
inc
xlat
jg
aam
jp
mov
push
pop
xlat
add
test
push
idiv
addr16
lods
aad
xchg
or
shrl
pop
lock
mov
pushf
dec
pop
inc
push
and
fdivl
pusha
in
mov
adc
add
js,pt
and
pop
cs
insb
pop
mov
les
or
repz
jg
or
jmp
test
mov
jae
adc
repz
pop
cltd
outsb
ret
imul
andb
into
cmp
pushf
add
mov
loopne
cmp
dec
push
jmp
sbb
inc
test
sbb
insb
in
and
adc
xor
add
add
je
or
sub
xchg
mov
test
icebp
inc
adc
xchg
inc
mov
add
and
pop
adc
inc
rol
sub
cmp
add
imul
adc
popa
lods
je
sbb
ljmp
aas
icebp
dec
enter
lods
std
repnz
in
or
ljmp
or
lcall
mov
fists
cmp
sti
in
insl
popa
jb
stc
pop
and
loope
inc
jbe
fwait
sbb
testb
mov
dec
mov
jo
loop
sbb
frstor
dec
test
push
sub
pop
cmpsl
xchg
in
incb
ljmp
int
dec
int3
jp
loop
rclb
movsb
push
scas
jge
add
int
and
loopne
out
ss
lods
rcrb
jnp
fmuls
adc
call
mov
xor
cmc
jmp
pop
push
and
adc
enter
leave
pop
mov
aam
out
fucomp
js
xor
enter
xchg
stos
jge
add
fidivl
sub
orl
xchg
out
push
jle
orl
or
mov
les
notb
sbb
pop
cmpsl
xchg
jnp
mov
xor
idivb
inc
or
loope
push
repnz
sbb
ljmp
mov
test
pop
mov
dec
fmuls
pushf
add
jae
xchg
addb
jnp
or
or
mov
inc
popf
into
jge
cltd
out
leave
xchg
add
mov
and
and
mov
adc
push
and
mov
test
mov
out
fdiv
pop
push
cmp
sub
mov
xchg
sub
repnz
rcrb
mov
add
push
ret
mov
push
outsl
cmc
insw
pop
bswap
lahf
leave
sahf
or
test
jg
pop
xchg
jle
mov
inc
xchg
hlt
mov
insb
mov
faddp
ret
outsb
nop
loope
insl
pop
mov
mov
lcall
aas
mov
cmpsb
xor
shrl
xor
cmpsl
sti
outsb
inc
and
ds
stos
ficoms
aad
mov
lcall
test
insb
add
cld
outsl
adc
or
je
pusha
cmp
shr
mov
fsub
cmc
std
sbb
cmp
inc
and
push
cmpl
sbb
cmp
pop
sub
or
int
mov
adc
cli
cs
inc
dec
subl
je
dec
insl
jae
dec
mov
outsl
inc
push
push
push
dec
jbe
dec
rcrb
jmp
pop
imul
and
fidivrs
fdivrl
rolb
sbb
inc
scas
adc
clc
fistpl
push
push
dec
mov
cld
pop
and
lock
pop
fcoml
xorb
mov
dec
data16
aas
pop
add
and
test
insb
sub
int3
and
adc
ficomps
xchg
daa
mov
inc
inc
dec
or
daa
lcall
mov
pop
fisttpll
sub
rcll
push
cli
push
and
pop
mov
data16
jecxz
or
mov
out
push
cmp
int
std
adc
dec
aam
popf
jl
dec
rol
outsb
in
sbb
or
inc
mov
mov
mov
lahf
mov
xor
dec
xchg
out
xchg
mov
pop
push
outsb
jmp
dec
sbb
pop
dec
jmp
add
fmul
mov
fstps
std
lret
push
mov
sub
ret
ret
or
fsts
in
mov
lahf
mov
push
hlt
jbe
mov
sub
mov
cmp
cmp
dec
fcmovb
mov
jp
push
popa
int3
movsb
sbb
inc
jge
pop
adc
xorb
out
push
jmp
mov
push
and
xchg
movsb
xorb
fcmovbe
or
and
xchg
test
sbb
xchg
push
push
addr16
lea
add
cmp
insb
addl
popf
inc
repz
shlb
paddsw
rolb
fcmovnbe
cmp
jle
stos
and
cmp
sub
movsb
aaa
lds
add
sbb
mov
jb
mov
add
mull
mov
sub
mov
jle
adc
popf
loope
xchg
inc
jge
flds
ljmp
jae
or
cmp
dec
mov
out
outsl
bswap
mov
notl
xchg
test
jg
cmp
add
icebp
mov
cmp
mov
mov
daa
inc
jmp
fnsave
pop
pop
lcall
lock
shlb
shll
outsb
jo
mov
testl
mov
arpl
xchg
aas
dec
scas
mov
outsl
movsb
fistl
scas
iret
jne
mov
frstor
into
repnz
cmp
sbb
stos
iret
loop
xchg
test
scas
fsubr
xor
aas
daa
jg
lret
xor
mov
inc
ljmp
lea
rorb
out
pop
bound
pop
cli
lret
xor
ret
pushw
jae
mov
outsb
orb
mov
iret
jp
nop
adc
sub
and
dec
in
fldt
js
loop
lds
fldenv
mov
pop
lcall
shrb
loop
out
fstpl
ret
lock
jmp
cmp
movsl
sub
mov
push
or
cli
movsl
fwait
rclb
sub
adc
imul
aam
mov
cmp
and
scas
out
xor
pop
jp
push
lods
sbb
les
adc
and
inc
mov
xor
and
sti
js
in
mov
rorl
repz
xor
jno
mov
jmp
push
add
cld
xlat
mov
in
fnstsw
mov
outsl
xchg
pop
ja
scas
mov
insl
dec
mov
or
push
xor
and
pop
and
pop
cmp
fldcw
add
outsl
pushf
dec
mov
inc
and
out
out
lock
xchg
inc
jg
push
addr16
inc
or
stc
cs
cwtl
icebp
mov
fsubrp
ljmp
dec
bound
xchg
test
xchg
xor
add
pop
push
mov
cmp
fnstcw
nop
dec
mov
pop
flds
and
subb
mov
adc
push
rolb
cmp
data16
mov
add
add
adc
aaa
lcall
repnz
pop
fbstp
les
mov
pushf
rcll
icebp
push
xor
xor
jp
clc
gs
gs
jmp
lret
rorb
pop
mul
ja
movsb
jmp
xchg
push
xlat
scas
in
jbe
and
fimuls
push
fstl
scas
push
lret
dec
or
pop
cs
jno
push
fs
mov
sub
cmpsl
mov
adc
mov
mull
sbbb
xlat
sbb
xchg
loop
cmpb
xchg
aam
pop
xor
insl
or
add
mov
jle
add
paddsb
imulb
ljmp
add
sbb
ljmp
cld
xor
loop
cmp
push
xor
adc
pop
pop
push
ret
jo
aas
sub
pop
testl
xchg
push
inc
mov
out
fstpl
orl
shlb
add
push
jmp
mov
fs
mov
inc
xor
pop
inc
sub
imul
outsl
push
inc
inc
sbb
sub
push
fcoms
lret
or
outsb
push
roll
or
xor
inc
loope
add
fcomp
stc
mov
pop
lret
test
adc
outsl
dec
and
out
xlat
adc
int
mov
and
mov
fbstp
push
fwait
call
mov
repnz
sbb
lea
push
push
jae
push
imul
mov
jmp
rol
or
clc
popf
jbe
std
mov
clc
arpl
push
lcall
dec
fbld
pop
scas
scas
aas
lahf
negb
addr16
fwait
pop
je
jo
sub
and
mov
jo
xor
lcall
push
loopne
xor
sub
mov
lea
lcall
mov
jne
mov
dec
call
mov
jo
dec
subb
jp
into
ja
lds
push
push
outsl
xchg
dec
iret
data16
lods
xor
and
sbb
lods
mov
mov
and
filds
clc
push
push
out
js
xchg
leave
lret
rol
ds
test
add
or
xchg
mov
adc
add
cmp
adc
dec
sbb
adc
inc
push
xchg
rorl
push
xchg
inc
repnz
mov
mov
push
lods
sbb
lock
xor
nop
out
bound
inc
push
pop
call
adc
jle,pt
aam
mov
cli
sbb
jecxz
mov
mov
lea
mov
pop
add
pop
pop
push
daa
mov
stc
jmp
inc
scas
lret
xor
pop
dec
in
or
mov
repz
popf
out
mov
cmp
push
fwait
dec
lock
repnz
cmp
dec
pop
jnp
mov
ds
add
lret
or
dec
push
push
test
fsubs
mov
shlb
mov
push
sub
daa
sub
dec
int
dec
add
xchg
fistpl
inc
pop
pushl
aam
ljmp
call
dec
push
cmp
jle
sub
add
ja
mov
das
negb
jnp
mov
pop
fldenv
imul
andl
jg
xchg
enter
popa
iret
ja
je
cmp
push
jb
inc
pop
rcrb
nop
fsts
popf
mov
cmp
addr16
mov
stos
add
cmc
cmp
insb
jl
outsb
xor
jbe
aas
dec
pop
or
ja
inc
dec
mov
rcl
cmp
loope
pop
jp
mov
fildll
mov
sbb
add
lret
data16
push
xor
popl
sub
sti
lcall
insb
aam
mov
and
adc
clc
mov
ja
lock
mov
jl
mov
add
fstps
loopne
and
mov
mov
call
aam
outsl
imul
jns
or
insb
lahf
xchg
add
push
and
or
dec
xchg
sahf
div
or
push
movsb
data16
push
les
cwtl
dec
daa
push
inc
cs
push
fnstcw
push
repz
std
pop
mov
test
enter
inc
add
push
mov
test
pusha
jmp
cmpsb
in
xchg
inc
ret
xor
or
cmpsb
pop
enter
inc
pop
aas
std
inc
fwait
lds
std
xchg
jns
cmp
outsb
push
sbb
lcall
cltd
movsl
shr
and
inc
iret
push
int
sahf
push
or
in
adc
mov
test
cmp
dec
shrb
pop
fdivs
pop
dec
outsb
ret
daa
mov
movsl
aam
loopne
mov
ret
xlat
add
stc
cmc
stos
mov
cmpsl
sahf
and
mov
xor
inc
mov
mov
and
dec
adc
jmp
pop
dec
out
sub
xchg
inc
loopne
fcoms
pop
cmpsb
mov
lahf
jl
mov
sbb
ljmp
in
cld
sub
and
mov
mov
or
jns
pushf
inc
lret
and
outsl
stos
out
bound
lods
adc
pop
ret
cmp
sbb
mov
ret
cmp
sti
insb
xchg
push
inc
mov
push
dec
movsb
adc
in
test
scas
adcl
repz
mov
or
ret
repz
fstpt
xor
pop
fiadds
sbb
pusha
bndldx
lret
clc
clc
popf
xchg
les
inc
jge
je
cmp
mov
aaa
add
fwait
insl
filds
out
in
xchg
push
fsubrl
dec
insb
fadd
mov
sbb
cltd
jbe
lahf
xor
gs
fmull
mov
push
pop
into
popa
and
add
ss
sbb
push
ret
cli
prefetch
or
sub
dec
scas
rcr
add
pop
andl
and
imul
in
or
cmp
gs
hlt
mov
push
aas
imul
push
enter
popa
jle
push
push
dec
mov
test
mov
sti
push
fstp
sub
cwtl
js
push
test
pop
xor
jmp
mov
shr
popa
popf
cmpl
xor
push
pop
push
mov
insl
xchg
mov
cwtl
jbe
or
or
jle
and
shll
clc
fisttpl
sub
mov
out
mov
add
mov
aaa
lret
bound
and
dec
mov
mov
sahf
in
push
add
or
jmp
subb
das
outsl
les
xchg
std
jp
xchg
push
int3
icebp
cmp
nop
test
repz
faddp
mov
loop
adc
icebp
iret
jns
nop
aas
int3
or
adc
stos
dec
pop
adc
sahf
sub
cmpsb
jb
add
das
and
lret
or
adc
push
dec
sbb
in
push
out
ljmp
or
cltd
xchg
pop
add
and
adc
xchg
add
cs
test
stc
icebp
cmpsb
jo
call
aad
jecxz
cmpsb
fstpt
sub
push
sub
jle
mov
in
ja
loop
or
mov
lods
stos
mov
jo
sub
push
sub
aaa
ja
mov
loopne
mov
mov
xchg
sahf
les
push
dec
and
xchg
jp
or
or
push
icebp
xorl
mov
dec
outsl
cld
les
idivl
pop
dec
push
jge
fisubs
inc
ficomps
push
push
push
xchg
ds
inc
out
cmp
xchg
mov
mov
sti
cmp
stos
xchg
mov
push
xchg
add
dec
pushf
pop
inc
repz
xchg
dec
push
test
mov
hlt
push
fs
std
pop
cmpsb
ret
popf
fstpl
mov
lea
mov
inc
cmp
dec
or
int
mov
lods
nop
idivb
jg
pop
es
xor
and
mov
gs
sbb
insb
pop
mov
dec
mov
sub
insb
jle
xchg
sahf
orl
cmp
and
xor
popf
insl
das
push
or
or
loopne
int3
push
xor
jmp
pop
sbb
or
mov
dec
rep
xchg
mov
push
popa
ss
popl
mov
push
ja
sbb
inc
in
aaa
xchg
inc
mov
dec
xchg
push
ret
int3
sub
fbstp
jns
ficompl
and
popf
mov
arpl
cmp
ja
pop
pop
sub
xor
enter
sahf
loopne
pop
pop
push
xorb
lods
push
cmp
in
lock
aam
imul
nop
jnp
add
push
test
sahf
or
insl
pop
daa
inc
xchg
pop
dec
pop
out
aam
scas
dec
adc
adc
mov
inc
pop
cmpsb
xor
or
jae
or
mov
xchg
fst
xor
xor
fscale
dec
js
mov
ss
xor
lret
and
stos
inc
jle
sub
cmc
xchg
sbb
push
fcmovnu
shrb
popa
push
daa
sbb
jle
repz
lock
dec
lea
rcrb
and
mov
adc
loop
mov
inc
repz
stc
pop
dec
dec
jns
mov
mov
sti
imul
inc
enter
std
ljmp
jne
inc
mov
dec
mov
aad
loop
push
cmpsl
sub
sub
sub
dec
in
dec
inc
sub
sahf
in
xchg
jl
jae
dec
mov
subb
dec
jle,pt
testb
or
pop
lahf
xchg
xor
jbe
mov
mov
or
xchg
jmp
gs
mov
push
lock
jo
adc
and
mov
pop
ljmp
or
push
sbb
and
sub
cmp
dec
lea
pop
dec
pusha
fiaddl
inc
sub
push
pop
subl
shr
ss
push
sbb
inc
repz
leave
xchg
adc
cltd
cmp
mov
sub
sbb
mov
xor
cmp
jae
push
and
dec
cmp
rcrb
enter
inc
imul
mov
addb
add
cmp
adc
xchg
dec
add
call
outsb
jge
pop
inc
cmpsl
inc
jno
sbb
xor
insb
in
shrl
test
outsb
push
jae
jmp
dec
std
fisubrl
icebp
push
sub
sbb
mov
xor
sub
negl
lods
sbb
sti
imul
scas
add
out
fists
jle
inc
add
es
push
addr16
push
xchg
mov
dec
adc
inc
flds
sbb
es
aaa
and
lcall
pop
adc
imull
cmc
jne
push
shll
bound
inc
popa
ret
psrad
bound
cmp
mov
inc
inc
sbb
test
rolb
dec
imul
dec
adc
testb
mov
add
jmp
test
xor
cli
sbb
xchg
ja
adc
rep
fnsave
aam
mov
pushf
pop
cmp
jbe
jns
jp
adc
shll
ss
fldenv
daa
mov
mov
andl
or
mov
lock
push
rorb
pop
lds
lods
push
bound
xor
jb
and
lea
cmp
ret
insb
or
lret
inc
shl
lods
sub
cmpsl
sti
push
sub
clc
xchg
push
hlt
js
prefetcht0
adcb
rcr
xchg
mov
sub
add
mov
mov
das
pop
rcrb
imul
adc
cmp
pushf
shr
loop
fwait
fwait
xorb
aas
enter
jae
aas
mov
stc
sub
mov
addl
dec
pop
pop
jno
sub
jbe
xorl
jl
jo
pop
popf
mov
mov
mov
in
xchg
mov
sub
nop
loope
xor
add
test
inc
stos
push
gs
loope
loop
and
jmp
or
pop
mov
in
inc
scas
add
xor
into
icebp
dec
lret
xchg
jg
pop
loopne
loope
movsl
out
imul
and
sbbb
pushf
mov
push
dec
in
and
push
sarb
sub
popa
add
or
mov
aad
inc
xchg
push
mov
ljmp
loope
and
scas
or
cmp
inc
hlt
mov
dec
and
in
and
fiadds
sbb
inc
mov
pop
lea
cltd
in
test
outsl
push
jbe
cli
ljmp
cmc
lea
rorb
dec
out
imul
pop
push
shlb
test
jo
push
cmc
in
cmpps
bound
pop
sbb
or
scas
sub
mulb
sbbl
movsl
xchg
int3
loop
jne
and
mov
mov
jg
push
bound
clc
in
mov
sahf
jge
xor
scas
loopne
rcll
call
pop
hlt
and
adc
lock
gs
jns
push
outsb
mov
ljmp
jbe
cli
es
xchg
cwtl
sub
push
shll
pop
push
pop
or
cs
cmpsb
in
jne
cmpb
testb
xchg
sub
xor
js
adc
sub
insb
sbb
jg
cmpsb
xor
fiaddl
ret
mov
mov
sub
xchg
pop
mov
nop
add
fcomps
out
push
cmp
pop
fisubrs
or
inc
arpl
pop
sub
inc
lods
pop
mov
fisttpl
mov
aaa
jmp
arpl
adc
dec
andl
dec
jnp
add
jns
or
pop
cmp
nop
pop
jae
iret
adc
mov
pop
lcall
jnp
push
xor
outsl
into
mov
int
sti
mov
hlt
jae
jbe
aaa
popfw
loopne
pop
bswap
lahf
sarb
nop
hlt
push
hlt
sbb
jbe
loope
pop
xor
jp
sbb
imul
int3
daa
xor
cmpl
xlat
sub
pop
push
insl
push
mov
inc
pop
mov
int
adc
mov
sub
cwtl
test
jg
addr16
sub
clc
mov
sbb
jnp
mov
pusha
xchg
xor
test
in
dec
or
movsb
pop
mov
popf
in
mov
jmp
daa
adc
inc
call
fwait
and
fstpl
mov
fsubs
push
mov
sub
jecxz
jmp
pop
pushf
insl
fdivr
mov
adc
xor
shlb
dec
lods
xchg
fdivs
cmp
xchg
or
ds
cltd
jb
loop
fs
xchg
mov
aad
sub
mov
jb
pop
adc
sub
out
push
test
xlat
outsl
outsb
test
int
push
cmp
mov
push
mov
leave
add
arpl
sub
push
sub
in
sbb
mov
mov
sbb
xor
add
lea
fisubrs
in
sbb
int3
out
idivb
pushf
mov
lret
int
mov
jne
inc
notb
lcall
cwtl
pop
cmpsb
and
fdivrl
stos
fistpll
cs
or
adc
cmp
mov
popf
dec
in
dec
fbstp
out
stos
and
sub
mov
mov
mov
mov
sahf
adc
lahf
dec
and
sub
mov
xor
jecxz
adc
out
enter
testb
insb
mov
push
fcomi
incb
adc
ffree
xchg
fstpt
jg
push
andb
push
sbb
mov
mov
int3
add
fcoms
aas
es
dec
out
addb
sbb
jno
iret
out
xchg
repnz
lds
ret
inc
fsubrl
repnz
imul
arpl
or
inc
add
mov
sub
jo
shlb
jno
mov
stc
pusha
mov
lret
adc
jl
int
xlat
xchg
outsl
cli
mov
gs
xor
push
es
dec
xchg
fiadds
movsb
mov
cmp
loop
add
ror
inc
pop
mov
sub
pushl
sahf
lret
jle
pushf
cld
les
call
lcall
ret
push
pop
addr16
sbb
aas
jl
cwtl
fldt
ds
push
stc
sahf
mov
arpl
lret
push
fwait
mov
jmp
and
jns
or
bound
mov
sbb
pusha
cmpsl
test
cmpsl
push
in
decl
sarl
repnz
lods
nop
iret
fildll
push
testb
fstl
aaa
dec
push
dec
jle,pt
stos
inc
ja
and
adc
push
pop
rorl
sbb
nop
ja
and
out
mov
in
scas
sti
daa
int3
pop
and
fcoms
sbb
jg
sbb
movsl
and
adc
dec
push
lret
cltd
dec
int
mov
and
jge
pop
sub
pop
mov
cmp
xchg
insb
jle
inc
add
cld
push
ret
fstl
xor
or
out
jae
call
arpl
and
adc
inc
mov
data16
fsubrs
sti
pop
push
imul
mov
popf
inc
push
out
out
jb
sbb
ss
xchg
jae
aas
stos
mov
lret
push
lcall
xor
rol
cmp
mov
lods
or
xor
aas
cld
mov
inc
push
adc
test
adc
arpl
imul
jecxz
sbb
scas
cld
push
jb
adc
test
lock
cmp
arpl
sarl
xchg
lods
push
inc
mov
fwait
imul
pop
mov
loop
jle
dec
inc
insb
ja
ss
xchg
popl
inc
and
ret
mov
push
jl
xlat
or
xor
cmc
faddl
xorl
daa
dec
call
ret
and
mov
stc
push
inc
jmp
cs
loopne
sbb
test
sub
mov
xlat
xor
xorl
fildl
pop
ds
clc
mov
out
mov
ss
ret
mov
mov
jns
fwait
or
and
stc
mov
push
and
inc
mov
and
fidivrs
push
out
and
mull
mov
movsb
cmpsl
daa
test
cltd
lock
mov
or
movsb
aaa
sbb
mov
add
sbb
xor
sbb
pop
outsl
add
pop
sarl
add
and
add
sub
cld
mov
mov
loop
mov
int3
mov
push
bound
lret
push
add
imulb
or
pop
mov
mov
scas
das
cmp
mov
dec
out
mov
sub
dec
sub
dec
shlb
aas
ficoml
mov
sbb
shll
in
pop
nop
dec
jae
cmp
insl
imul
xchg
adc
or
sahf
jo
mov
mov
xor
and
daa
and
lock
add
mov
xor
mov
cwtl
inc
cmp
in
ljmp
pop
int
add
sbb
pop
outsb
xor
sub
scas
mov
rcl
push
flds
aad
xchg
jecxz
movsl
adc
fnsave
push
dec
push
add
es
aas
adc
movsb
repz
mov
sbb
inc
jecxz
out
xchg
sub
push
jecxz
xchg
fldl
roll
push
or
mov
shlb
cmp
mov
test
xor
push
and
jle
std
out
jmp
notb
out
ja,pn
add
sti
pop
adc
sbb
enter
pushf
mov
dec
daa
shrb
or
mov
xchg
mov
loopne
mov
jmp
push
aaa
icebp
xor
xchg
mov
call
in
mov
incl
and
inc
arpl
stc
cmc
sahf
or
int
push
adc
add
insl
xor
inc
and
push
cmpsb
popa
imul
push
xchg
call
pop
jno
add
pop
hlt
incl
and
iret
mov
in
outsb
inc
outsb
dec
mov
jmp
jb
dec
fadds
xchg
outsl
data16
jecxz
inc
jae
int
in
dec
std
adc
ret
popf
mov
or
daa
add
jp
mov
fstpt
mov
xor
aaa
negl
lods
fstpl
jnp
insb
lods
push
and
xchg
mov
mulb
mov
repnz
or
test
loop
in
adc
in
xor
sbbl
add
xchg
jecxz
stos
push
sub
inc
rorl
push
jecxz
sub
adc
sbb
hlt
or
pop
fldt
mov
push
jmp
ja
jno
incb
leave
int
push
push
leave
mov
nop
imul
sub
lock
insb
clc
fldt
mov
aas
xor
jbe
leave
push
sbb
or
pop
mov
cmc
in
mov
das
dec
js
xor
ret
cmp
repz
nop
jbe
daa
pop
jle
mov
jne
enter
push
and
stc
rorb
xor
mov
dec
jno
ss
pop
push
mov
sbb
lcall
mov
in
mov
sbb
and
mov
out
pop
dec
mov
pop
pop
call
out
mov
cmc
or
lahf
je
push
aas
pusha
sub
push
shll
insl
dec
call
mov
adc
mov
andl
sbb
lea
roll
mov
mov
cmp
outsb
subl
jle
mov
xchg
icebp
gs
pop
inc
inc
roll
mov
sbb
dec
mov
mov
add
xchg
sbb
fidivs
stos
fwait
push
ret
repz
out
and
scas
inc
cmpsb
fsubs
mov
and
and
cwtl
stc
repz
xor
jne
pop
push
in
or
nop
inc
sub
decb
leave
sub
sbb
push
mov
fists
xor
lret
shr
lret
iret
das
or
or
lock
cmp
sbb
mov
es
test
aam
ret
int
jns
xor
iret
movzwl
ds
xchg
push
jp
out
int
test
xchg
push
push
orb
and
aad
cmp
ret
jnp
outsb
or
jne
jg
push
repnz
or
xorl
test
and
std
mov
leave
push
insb
inc
jb
lock
add
sub
pop
stc
test
sub
and
mov
loope
ret
xchg
mov
jns
xchg
out
aad
and
jno
mov
mov
cwtl
mov
pushf
movb
sbb
cli
sub
lcall
incb
out
lock
mov
addr16
dec
sbb
pop
out
bound
add
mov
shrb
notb
loopne
sub
inc
adc
in
les
lret
jmp
jb
jp
inc
sub
lock
sub
pop
loop
and
jmp
aam
loopne
sbb
push
push
les
and
mov
cld
or
push
mov
movlps
sub
loopne
mov
push
mov
and
rol
enter
das
fs
dec
sbb
cltd
xchg
bound
dec
lds
mov
pushf
cbtw
out
cld
push
push
adc
or
add
xchg
sbbl
aad
div
mov
mov
pop
inc
jnp
xchg
jle
es
lcall
sub
rcll
sar
and
adc
push
sbb
push
jg
into
lret
mov
cbtw
sti
jp
sbb
pusha
sbb
pop
pusha
scas
imull
sbbl
nop
jb
dec
dec
movsl
sbb
mov
cs
popf
in
or
mov
push
jo
fsubs
xchg
mov
test
lahf
std
lock
popl
mov
fwait
mov
ret
fldcw
popa
int
lret
push
mov
pop
call
cwtl
test
add
cli
in
sahf
jb
sbb
push
nop
sti
xor
cltd
std
outsl
cmp
xchg
pop
and
fcomp
std
fisttpll
into
int3
xor
dec
test
sbb
dec
popf
cmpsl
in
arpl
sbb
in
dec
mov
and
repz
xlat
fimull
aad
sub
add
divl
enter
out
aam
push
xchg
and
xor
xchg
jmp
xchg
fadd
js
mov
in
push
ds
adc
xchg
gs
jnp
cli
add
dec
popf
push
xor
dec
xchg
push
mov
or
mov
ret
nop
cmp
les
insb
incl
jnp
cmpsb
dec
je
mov
fimuls
iret
outsb
sarb
sbb
adc
and
std
aam
mov
cmc
arpl
add
jl
adcl
stc
faddl
outsl
inc
jns
mov
mov
mov
xchg
mov
jmp
sar
dec
mov
sbb
mov
sbb
lods
out
mov
add
xchg
sub
int
jb
xor
xor
push
lret
push
sbb
lahf
jle
insb
outsl
mov
or
test
fistps
ret
aaa
mov
fdivrs
xor
ss
insb
cmpsb
pushf
pop
daa
adc
mov
xchg
insb
popf
mov
dec
dec
in
pop
ja
mov
loop
adc
testb
jo
inc
andl
cmp
xchg
xor
je
pop
cmp
nop
aad
pop
pushf
push
jnp
in
shll
mul
stos
sub
sbb
pop
push
fwait
enter
ret
out
adc
test
mov
add
sub
cmp
clc
insl
cmpsb
mov
fildl
out
iret
cmp
outsb
jae
fmull
mov
mov
or
clc
sbb
popf
xor
xor
ljmp
aam
loope
out
mov
jl
ds
and
mov
movsb
xchg
pop
mov
add
cli
pop
jge
dec
jmp
fs
out
sbb
mov
aad
es
js
xchg
test
push
push
in
stos
dec
test
cmp
addl
xor
lcall
lcall
mov
pusha
jp
push
push
addr16
stos
in
inc
aad
fwait
xchg
fst
popf
adc
jecxz
lcall
rolb
testb
dec
lcall
dec
and
std
lret
shlb
cld
sub
cmp
mov
scas
mov
fists
jno
repz
ret
shr
add
push
mov
sub
mov
cwtl
das
sbb
fs
xor
jnp
filds
dec
xchg
and
stc
and
mov
mov
cli
int
stc
shrb
in
stos
mov
ficoms
stos
cli
roll
cmp
inc
xchg
ss
fcompl
dec
xchg
shll
xor
rolb
nop
ljmp
mov
add
ficoms
cmp
and
xor
cltd
arpl
add
jecxz
inc
out
adc
mov
aas
mov
sbb
outsb
xchg
loopne
dec
inc
fs
adc
jne
movsl
int
pop
mov
cmc
arpl
adc
popa
mov
les
pop
daa
sbb
sahf
push
ja
push
xor
mov
xchg
and
fstps
pop
outsl
pop
push
push
mov
jmp
test
fmull
ret
mov
mov
es
lock
pop
pop
jge
ss
push
cmpsb
jl
mov
add
mov
fwait
repnz
leave
fildl
cmp
mov
aad
and
dec
je
ss
ljmp
lods
push
sbb
and
iret
dec
mov
mov
pop
inc
lock
mov
mov
inc
pop
jmp
mov
pop
movsb
xor
into
pop
out
cltd
jg
xchg
pop
sbb
loopne
outsl
sbb
call
adc
xor
sub
dec
insb
mov
and
xor
cld
test
pop
fdivl
aaa
mov
test
int3
out
inc
xchg
xchg
xchg
pusha
iret
fsubrp
inc
pop
lock
or
sahf
dec
xlat
push
pop
sub
fisubs
outsl
mov
movsl
sbb
movl
push
add
mov
cs
in
xor
and
outsb
insl
scas
add
ret
mov
pop
stos
push
pop
sub
push
push
mov
fcmovu
mov
ss
and
pop
xchg
or
imul
aad
inc
or
lret
sub
sbb
mov
or
mov
push
inc
ja
mov
cmpsb
push
outsb
orl
cmpsl
and
insl
sub
xchg
push
adc
int3
mov
je
scas
lret
jmp
subb
mov
lret
das
xlat
dec
ftst
pop
fildll
loope
data16
or
push
push
scas
int
xor
out
mov
pop
or
outsl
xchg
sbb
jns
icebp
jo
hlt
aas
scas
cmp
ss
andb
sub
add
or
mov
push
std
loopne
sbb
push
or
lock
jp
mov
mov
inc
xor
fldenv
jl
fldl
sub
jae
js
imul
mov
push
push
mov
dec
insb
jmp
jns
jo
mov
in
add
iret
adc
test
pusha
outsl
fsubrs
dec
or
dec
xlat
lret
cld
test
or
mov
cmp
fwait
aas
xchg
dec
std
pushf
in
mov
xor
movsl
mov
inc
mov
sarl
add
mov
jb
into
mov
or
fs
dec
sbb
xor
mov
mov
cmp
dec
fiaddl
jne
jae
jecxz
orl
lcall
icebp
addr16
cmp
ficompl
lods
dec
push
inc
sahf
push
push
push
out
and
pop
push
push
cltd
xor
rorb
mov
pop
sub
cld
stc
inc
arpl
bnd
or
je
adcl
and
and
xor
mov
mov
test
fildl
loop
pop
ficompl
loopne
mov
push
lcall
ljmp
xchg
push
adc
int3
push
add
out
mov
push
inc
xchg
aad
jne
popf
or
insb
mov
addr16
xchg
mov
fcmovbe
icebp
jb
loope
clc
dec
jnp
mov
jo
lods
clc
xchg
fsub
xchg
outsb
sub
and
sub
mov
adc
enter
int3
int3
gs
cmp
dec
arpl
xchg
or
mov
mov
jp
inc
ljmp
lock
cmp
push
xchg
js
mov
test
je
inc
test
push
sti
js
xchg
jbe
insb
out
out
inc
mov
mov
jno
scas
lds
sbb
lret
push
or
data16
repnz
inc
sub
push
push
mov
xchg
pop
pop
fsubrs
cmpsb
aaa
jmp
stos
test
fcmovu
repnz
outsl
xchg
inc
mov
outsl
jae
jge
cmp
shrl
mov
xor
out
mull
lahf
adc
jns
pop
lret
mov
pop
inc
pop
data16
dec
dec
lret
cmp
adc
add
or
out
pop
mov
pop
fcmovb
push
mov
push
lock
xchg
ret
xchg
mov
lret
fimull
fcmovne
jge
rcll
push
pop
fs
mov
iret
fs
dec
pop
pfacc
cmp
leave
dec
lods
jl
hlt
loope
jns
adc
adc
fs
mov
mov
mov
sub
xlat
test
add
cmp
dec
xor
repz
jl
fwait
jmp
sbbb
cmc
insl
enter
daa
adc
in
lds
mov
cmp
lret
xor
sub
in
xchg
cld
into
jmp
xor
das
jb
sub
sub
cmp
dec
aas
popf
jbe
push
ds
fldenv
jbe
cmpl
js
mov
mov
pop
mov
or
pop
pushf
inc
das
cltd
dec
mov
in
dec
jae
cmp
mov
roll
and
fcmovbe
push
and
aas
jbe
in
cmp
es
and
adc
cli
fcoms
loop
movsb
jo
cmp
mov
mov
jge
ret
or
mov
push
push
sbb
xlat
fisubl
movsl
int
hlt
xchg
dec
scas
shlb
cmovg
imul
ret
xchg
xchg
movsb
jmp
cli
dec
or
lret
popf
jno
xor
pop
fsubrl
mov
mov
in
mov
push
jg
test
adc
lret
jno
movsl
push
xchg
xchg
lods
sbbb
mov
mov
daa
out
and
jmp
sarl
sub
stos
sbb
cmpb
cwtd
lock
cmpl
xor
imul
leave
xor
cmp
jb
adc
andb
jne
sbb
cs
cld
popf
movsb
lcall
testl
out
mov
jo
into
jne
stc
jp
mov
inc
pop
push
and
ret
xor
arpl
adc
pop
and
xor
inc
dec
cmp
inc
inc
movsb
daa
out
adc
xor
xor
cltd
pop
insl
xchg
adc
in
push
pop
std
aad
fdivr
lods
dec
dec
movsl
xchg
or
sbb
outsl
mov
and
shlb
fimull
push
clc
push
rorb
mov
hlt
scas
mov
cmp
adc
or
pop
or
movaps
loop
or
sti
int
inc
or
imul
sbb
sarb
xchg
pop
fsubr
push
inc
lods
add
and
jo
sub
fmul
dec
inc
sti
loop
jg
jne
push
inc
dec
int3
int3
pop
cmp
pop
jae
push
dec
in
or
js
add
sub
fdivr
mov
add
in
test
jno
mov
cmp
and
iret
iret
adc
jp
push
jg
subb
mov
insl
xchg
aad
sbb
mov
cmp
push
fs
mov
or
mov
adc
inc
ficoml
es
iret
ljmp
in
imul
dec
sti
rcrl
cmp
dec
js
in
mov
test
dec
sub
daa
mov
mov
mov
rclb
lock
ret
sub
daa
push
aad
leave
sbb
fs
inc
mov
xor
enter
scas
jb
jg
dec
cs
xchg
xchg
arpl
push
les
int
js
sarl
mov
sub
and
daa
add
push
mov
push
mov
jle
inc
hlt
out
test
lret
or
out
push
sbb
aad
mov
jle
incl
fninit
or
mov
xchg
xchg
inc
cmc
push
jecxz
push
push
lock
inc
lods
push
lock
pop
imul
xchg
mov
enter
out
dec
stos
arpl
cmpsb
sub
out
int
and
mov
test
xchg
shrb
iret
idivl
pop
or
leave
inc
cltd
mov
inc
lret
enter
push
mov
sbb
rcll
clc
jl
fisubs
mov
fistps
in
mov
sbb
mov
adc
addr16
dec
xorl
mov
or
fs
dec
addr16
mov
lcall
hlt
jge
test
xorb
pop
sbb
cmp
lock
mov
inc
cmpsb
aaa
jo
dec
ret
jnp
js
pop
mov
lret
push
cmp
xchg
js
or
ljmp
sbb
xchg
cwtl
mov
dec
xor
pop
insl
cwtl
push
inc
pop
loop
in
xchg
int3
pop
mov
push
xchg
jb
inc
ror
or
jbe
mov
pop
ret
lcall
aam
jp
incb
sbb
jp
push
jo
lret
mov
mov
fisubl
add
aaa
test
arpl
jle
aas
aam
aad
popa
xchg
xchg
push
pop
rorb
cwtl
fwait
jne
and
xor
test
mov
in
cmp
mov
das
inc
in
pusha
xor
in
xchg
push
call
add
fimuls
sub
into
sub
push
pop
mov
mov
jne
push
bound
jecxz
cld
or
mov
arpl
or
fdivrs
mov
in
loope
add
outsl
loopne
into
cmc
add
inc
enter
mov
in
sub
cmp
push
ds
push
inc
cmc
test
cmp
rorb
sbb
imul
fimuls
shrl
xchg
and
xchg
push
pop
xchg
rorb
pop
sbb
mov
xor
testl
inc
cmp
inc
mov
jp
les
cmp
and
repz
roll
mov
mov
movsl
xor
inc
add
test
in
or
fadds
out
cmp
add
gs
rol
cwtl
int3
in
scas
das
sti
stos
xchg
xor
and
mov
push
sub
lea
pop
dec
fbstp
push
xchg
add
jns
lret
repz
outsb
and
cmc
imul
lahf
xchg
or
jns
push
mov
test
aad
in
inc
mov
lret
pop
loopne
pop
repnz
xchg
mov
pop
pop
sub
cmp
adc
jle
or
mov
fistl
out
gs
fstpt
insl
adc
outsl
mov
cmp
call
rclb
pop
pop
push
xor
add
jmp
sub
pop
outsl
push
push
jnp
add
jb
aad
jne
pop
pop
mov
movsl
jae
out
lret
cltd
mov
and
push
or
ljmp
incb
xlat
mov
mov
mov
cmp
push
je
dec
fs
ja
sub
inc
dec
push
cmp
pusha
push
xor
and
and
pusha
inc
cmp
xlat
cmpsb
cmp
movsl
test
fldlg2
sub
mov
insl
xor
cmp
sub
lret
sbb
pop
std
movsl
hlt
les
ret
dec
bound
std
imul
inc
xor
cmpsl
gs
mov
cs
cmpsl
insl
loope
shr
mov
xchg
notl
xor
cmp
mov
outsl
or
mov
and
push
pop
mov
incl
mov
adc
jb
roll
inc
icebp
mov
cli
f2xm1
in
xor
sbb
xchg
pop
inc
push
rorb
xlat
aam
inc
les
jnp
call
mov
dec
adc
iret
ljmp
xchg
mov
hlt
sbb
nop
sahf
lcall
push
rclb
xor
ret
cmpsb
xorl
pop
xor
xchg
divb
mov
aad
cld
int
adc
movsl
adc
add
fsts
pop
test
dec
test
nop
pop
hlt
add
test
fcmovnu
stc
cmpsb
xor
xlat
fdiv
jl
xchg
inc
xchg
sub
push
and
outsl
add
sbb
and
mov
inc
xchg
daa
xor
sbb
ret
std
enter
shll
out
xchg
div
add
arpl
add
es
das
xorb
cmp
insl
push
lea
jo
xchg
dec
adc
aaa
scas
mov
lock
shrb
adc
fldt
pop
sub
out
sub
mov
sbb
cmpsl
add
cmpl
mov
aas
add
or
cltd
cwtl
fistpll
fadds
sub
int
ja
pop
repnz
jecxz
sahf
xchg
jecxz
mov
cmpsl
pop
jae
daa
jbe
lock
mov
movsl
mov
mov
adc
mov
push
cld
xchg
xor
repnz
fisttpll
pop
mov
jno
ficompl
fmul
lret
add
imul
jmp
push
and
dec
lock
mov
and
scas
fsubrl
pop
and
or
pop
mov
sub
inc
inc
into
inc
ret
jno
xor
mov
xor
cwtl
push
sub
cmp
outsb
add
jno
fs
mov
popa
cmp
mov
outsl
fsubs
repnz
mov
nop
jae
repz
ljmp
shrl
pushf
mov
lret
inc
sti
lock
int
popf
xchg
mov
hlt
ljmp
xchg
stos
add
outsb
mov
and
mov
xchg
dec
mov
mov
jnp
mov
mov
sar
add
pusha
xor
mov
movsb
stos
loopne
pop
fwait
test
push
push
mov
xor
xchg
sbb
aam
ss
push
aam
lock
int3
fmull
mov
xor
sub
sub
shrl
scas
cld
xchg
das
jle
loopne
add
das
dec
std
sub
lock
movsb
xchg
inc
inc
popf
imull
xchg
xchg
dec
pop
xchg
xchg
sahf
xor
inc
scas
xor
lea
xabort
sbb
in
jbe
scas
aam
pop
dec
dec
cmp
jmp
cld
mov
movsl
daa
test
xchg
jae
cmp
push
xor
fwait
cmp
out
or
xor
mov
ljmp
leave
fsubr
das
add
jmp
jb
mov
cmpsb
jns
jo
xchg
lds
ljmp
mov
add
mov
fldenv
dec
xor
test
iret
adc
sbb
pop
adc
sub
pop
sti
aam
sub
std
push
lock
js
leave
mov
mov
mov
sub
lcall
imul
stos
imul
cwtl
inc
roll
test
mov
je
lds
adc
mov
repnz
push
lret
and
in
ss
push
pop
xor
call
jne
mov
int
stos
cmp
stos
sub
aaa
mov
clc
sbb
dec
adc
and
into
mov
inc
scas
rcl
fs
xchg
mov
scas
push
xchg
sbb
mov
jno
aam
mov
hlt
cmpsb
mov
cmpxchg
imul
jo
mov
out
out
add
test
cmp
and
jle
icebp
insb
and
sub
popa
xorl
add
pop
cmc
loopne
aam
inc
or
shll
cli
popf
cld
adc
pop
xor
aas
jl
xchg
push
xchg
mov
cli
aam
push
sub
xor
in
mov
bound
mov
fstps
mov
out
outsb
shll
pop
push
mov
push
divps
pop
test
cli
lret
dec
outsb
test
cmp
cltd
jp
fmull
fsubrl
mov
or
subb
les
or
xchg
lods
adc
jmp
xchg
push
jecxz
scas
test
jg
xor
lds
push
pop
test
mov
lret
arpl
sub
mov
mov
fucomp
pop
pop
mov
outsl
fbstp
lret
mov
imul
add
sbb
test
xchg
xchg
addr16
pmaddwd
adc
jge
out
subl
xor
push
dec
test
repz
pop
pop
sbb
popa
adc
mov
pop
mov
addr16
adc
gs
rol
ret
lret
jne
sbb
mov
push
dec
xchg
cmc
cltd
push
ds
aas
stc
js
pop
sbb
mov
lock
aas
enter
xor
outsb
lds
movsl
int
das
pop
outsb
les
xor
push
push
mov
sub
iret
stc
addr16
out
pop
jge
pushf
xor
sbb
xchg
inc
pushf
pop
fisubl
repz
mov
test
adc
and
xchg
or
cmp
cmpsl
mov
mov
push
push
inc
cmpsl
sbb
xchg
mov
dec
scas
mov
shll
jnp
push
or
mov
out
stc
pop
out
lock
dec
dec
mov
dec
pop
fs
sbb
ret
xor
jg
ja
mov
jno
lret
je
std
mov
sahf
jo
and
pop
xlat
push
cld
mov
and
dec
adc
stos
pop
push
lods
dec
adc
sub
mov
mov
pop
fwait
mov
jge
sub
xlat
mov
xchg
fistpl
js
je
mov
popf
sbb
sub
push
arpl
enter
fidivrl
clc
cltd
adc
fistps
in
mov
or
test
adc
inc
lods
imul
cmp
xchg
jg
sub
aas
stc
cmp
lret
add
fldcw
lock
mov
push
sub
cltd
sarl
fcompl
cmp
fists
sub
daa
pop
cmp
adc
test
jle
enter
ret
int
sbb
sbb
jnp
push
call
sti
adc
xchg
sti
xchg
mov
sahf
mov
lahf
adc
test
mov
mov
es
ja
mov
mov
push
outsl
xchg
sbb
or
inc
mov
lret
and
stc
sub
mov
sbb
cmp
push
int
sarl
push
adc
dec
sahf
testl
rcrl
xchg
push
mov
cmp
pop
jnp
insl
pop
or
ret
sar
lret
xor
sbb
xor
sahf
jmp
xor
aad
aam
pop
mov
cmp
scas
adc
xor
mov
fwait
pop
jp
xor
jne
lea
pop
sub
shlb
jno
int3
mov
inc
fisubl
adc
pop
push
in
dec
in
jae
ja
mov
loopew
inc
cmp
imul
incl
cmp
testb
push
xor
mov
fsubrl
inc
mov
out
sub
add
enter
mov
inc
addr16
jno
mov
imul
in
or
xor
js
sub
cmp
rep
pop
pop
or
push
scas
adc
cmp
aam
paddusw
mov
mov
out
mov
cmp
lahf
xor
movsl
add
arpl
or
lahf
ret
fwait
in
rcrb
in
push
pop
jb
mov
jno
jno
fs
gs
fcomps
inc
add
adc
jecxz
gs
fbstp
inc
jmp
add
inc
or
js
cmp
test
xchg
inc
sub
pop
pop
aam
dec
mul
icebp
mov
mov
jge
leave
push
inc
or
jp
lahf
dec
add
sbb
jb
add
sub
stos
dec
jle
pop
xchg
pop
lods
std
into
inc
mov
cmpsl
mov
fwait
mov
lods
jnp
xchg
adc
push
aad
jb
jp
cmpsl
stos
ss
push
inc
sahf
and
notb
mov
sbb
add
mov
movl
cltd
movsb
pop
fists
popa
mov
cld
jno
sub
lcall
pop
cmc
xor
jmp
jns
stos
xor
mov
out
addr16
int
insl
xchg
mov
or
xchg
movsl
lret
jnp
lahf
test
sub
and
imul
subb
and
push
xchg
popf
call
mov
rorl
dec
cld
mov
mov
jb
sbb
into
dec
iret
repnz
or
imul
jl
and
jmp
lock
cmc
inc
xor
mov
in
ja
push
int
jp
and
loope
add
loope
add
mov
xchg
inc
std
mov
mov
xor
sbb
xchg
and
ss
dec
pop
xchg
mov
repz
bound
push
add
xchg
pop
mov
xlat
mov
pop
xchg
jp
xor
xchg
and
pop
call
imul
cs
push
xor
js
enter
fwait
xchg
adc
dec
std
cmp
andb
xor
xchg
iret
mov
icebp
sbb
mov
or
or
cmc
push
push
mov
test
int3
adc
stos
pop
nop
sub
or
push
mov
push
or
mov
jbe
push
add
inc
mov
xchg
inc
js
lea
add
pop
cmpsl
rolb
push
adc
scas
aas
mov
add
cld
fs
lcall
jl
inc
xchg
fidivs
iret
jae
inc
add
mov
mov
leave
cwtl
in
push
adc
sub
push
dec
shlb
jg
clc
jmp
aas
jge
jge
loope
push
mov
sbb
sbb
cltd
pop
sbb
cmp
daa
push
xchg
mov
test
sbb
in
mov
jg
mov
mov
jne
jbe
fcomp
pop
mov
push
in
cltd
push
push
lds
mov
lods
lcall
mov
ja
adc
fidivrl
push
push
jmp
hlt
pop
arpl
mov
mov
popf
das
jmp
add
sbb
sbb
daa
aam
adc
pop
incb
out
mov
dec
fstl
imul
addr16
pushf
out
dec
xchg
outsl
pop
mov
and
or
repnz
insl
mov
out
in
shll
insl
sbb
mov
int3
daa
dec
out
mov
xor
hlt
xlat
dec
mov
jecxz
lahf
loopne
cmp
daa
cmp
in
cltd
add
jmp
call
pop
mov
sbb
mov
push
push
mov
xchg
jge
out
scas
push
in
ljmp
cmpsb
xlat
add
cli
dec
repnz
add
daa
and
mull
add
push
xchg
int3
mov
inc
cmpsb
scas
jnp
and
xchg
cmp
mov
dec
fs
xor
mov
arpl
jg
lea
pop
cmp
dec
dec
daa
scas
jg
mov
xchg
mov
call
dec
mov
mov
pop
es
call
pop
jae
sub
or
shrb
out
out
xchg
insl
pop
inc
movsl
test
jge
js
popf
in
shl
cmp
mov
cltd
push
int
mov
pop
xchg
xchg
out
shlb
add
test
fstps
xchg
les
jns
and
pop
cmp
mov
pop
mov
mov
add
cmpl
int
ret
sbb
sub
lahf
divb
dec
dec
jp
adc
sbb
clc
call
dec
movsl
mov
xor
jns
inc
clc
in
iret
imul
xor
and
jp
cmpsb
mov
hlt
push
inc
addr16
sub
les
iret
and
bound
es
lock
jno
movsl
sbb
mov
push
inc
mul
xchg
xlat
cs
hlt
and
btc
mov
enter
or
leave
jg
popf
mov
cmp
jne
outsl
mov
add
adc
incb
jo
xor
pop
stos
push
cmp
ret
jl
out
movsb
pop
mov
jb
adc
mov
xlat
xor
shl
and
push
cwtl
imul
daa
sbb
ret
lcall
je
divb
test
mov
mov
jb
pop
addl
pop
mov
push
pop
xchg
stc
out
popa
sub
lock
jnp
in
and
mov
push
cmp
xlat
sbb
rolb
xor
cmc
or
imul
pop
cmp
in
fcomps
sbb
mov
fadds
xchg
push
cmpl
sbb
pop
fadds
frstor
inc
and
xchg
shrl
inc
jb
outsb
fstpl
dec
sbb
orl
in
dec
popa
lret
and
xchg
aaa
das
adc
out
cmpsl
mov
pop
xor
fdivrl
push
push
stos
sbb
push
dec
fwait
lea
push
adc
shlb
dec
scas
inc
xchg
pop
or
push
push
loop
and
cmp
push
cmp
ret
in
mov
or
movsl
iret
sbb
outsl
mov
pop
or
mov
lods
push
js
sub
fucomip
hlt
setne
ja
fisubrs
push
sbb
or
arpl
pop
pop
loopne
in
movsl
pop
cld
inc
ss
pop
push
mov
test
mov
test
aas
or
fistl
sub
js
sbb
sub
into
idivb
pop
lods
mov
lods
cmpsl
xchg
mov
insb
sbb
scas
jp
push
xchg
lcall
sbb
jp
sub
stos
fprem1
imul
push
icebp
xchg
pusha
lock
xchg
movsl
jp
enter
fs
fcom
fs
dec
push
add
add
cmc
mov
jge
es
mov
rolb
jne
subb
ret
add
clc
movaps
hlt
xchg
out
dec
pop
sub
dec
jae
and
dec
mov
cwtl
inc
mov
dec
fwait
or
xchg
adc
ficoml
jns
push
fstps
bound
cmp
cmpsb
or
rcll
or
popl
in
xchg
stos
into
mov
mov
cli
aam
cld
in
lahf
test
jbe
leave
mov
in
aad
addb
xchg
imul
sub
sub
jns
xchg
shrb
mov
into
sbb
das
mov
jle
filds
andl
and
fstl
mov
cmpsb
mov
cmpsl
mov
loop
push
pop
mov
rcrl
sbb
in
pop
fdivp
test
inc
frstor
ljmp
lea
pop
xor
ljmp
int
shr
cmp
dec
out
sub
push
cmpsl
test
lahf
mov
ret
mov
rclb
fs
mov
jle
mov
testb
test
je
lret
stc
push
nop
cmc
test
cli
pop
fidivrl
cmc
das
pop
jns
orb
outsb
mov
mov
pop
jb
hlt
out
mov
stos
mov
popl
push
cwtl
pop
out
out
cmpsb
xchg
mov
popa
ret
inc
loope
js
and
push
pop
das
nop
lock
in
mov
les
dec
inc
call
and
in
stos
ss
stos
flds
aam
sbb
xor
cmp
push
jb
push
mov
call
popf
cmp
cwtl
loope
and
push
cmp
inc
pop
iret
bound
sub
movsb
lret
pop
iret
test
push
adc
imul
daa
repnz
xor
addb
sbb
repnz
stc
sti
push
repnz
lods
push
mov
and
cmp
mov
call
lock
dec
hlt
pop
cmp
insb
jne
ret
mov
sbb
adcb
mov
aaa
xchg
lahf
aam
jno
cltd
jnp
sti
aaa
jne
jl
lock
pop
and
cltd
pop
or
xchg
push
dec
dec
jl
fwait
lahf
sbb
rclb
aas
push
jecxz
and
dec
insb
loope
imul
mov
jp
mov
or
hlt
mov
sub
mov
fnstcw
jecxz
out
int
or
out
pop
fimull
mov
stc
mov
push
sub
lret
clc
push
addb
ror
ja
cs
mov
or
ds
cmp
adc
clc
xchg
mov
cmp
insl
add
in
jne
jno,pn
arpl
imul
adc
jp
mov
subl
das
aaa
mov
jne
into
lods
mov
outsb
imul
mov
and
add
push
stos
push
sahf
xchg
pushf
lcall
popa
daa
push
sbb
mov
clc
cltd
jge
out
js
arpl
mov
rclb
int3
dec
scas
jmp
push
push
pop
flds
dec
daa
xchg
add
or
mov
cmp
orl
in
mov
push
leave
cmpl
iret
ljmp
aam
jb
cld
loopne
pusha
inc
das
sub
pop
mov
enter
pop
and
push
xchg
loopne
mov
je
out
in
das
out
xor
sub
aas
xchg
cld
mov
das
mov
lret
push
cwtl
out
rcl
push
and
repnz
stos
out
xor
repz
outsb
and
inc
mov
shr
mov
dec
xchg
dec
outsb
mov
repnz
in
xor
popf
dec
pop
in
cwtl
sar
popf
aaa
out
rolb
xor
lret
mov
aam
pop
jne,pn
lods
ja
test
fsubrs
cmp
xlat
lcall
out
mov
data16
jmp
pushf
xchg
or
or
leave
mov
rcl
out
int
test
push
sbb
sub
jb
arpl
jb
loopne
jne
pop
push
mov
and
xchg
push
int3
in
aam
mov
sbb
mov
mov
push
push
mov
out
push
ficoml
pop
aas
shrl
imul
negl
jno
push
out
insb
loop
sub
insl
out
sti
std
insl
push
sub
cmpb
adc
cmc
or
or
mov
movsl
sbbb
push
xchg
test
gs
mov
push
in
push
push
mov
sti
or
das
insl
mov
outsb
daa
jnp
add
loopne
adc
sbb
or
ret
mov
push
push
ljmp
mov
mov
pusha
aad
mov
sbb
test
bound
pop
push
xchg
insb
mov
mov
sahf
out
jb
jl
ljmp
pop
stos
fdivs
push
cmp
push
add
add
dec
sbb
repnz
ret
sahf
das
rcrb
loop
add
adc
clc
push
fwait
out
hlt
test
pop
mov
lahf
push
push
mov
jne
lock
stc
mov
pop
test
dec
sbb
nop
and
jb
bound
dec
nop
pop
ret
mov
flds
xchg
sahf
loop
mov
dec
in
movups
mov
ds
xchg
xor
cmpsb
int
fidivrl
fisttpll
cld
sbb
mov
and
arpl
lahf
bound
aam
cmp
cmp
fwait
pop
xor
sub
fnstenv
push
push
and
loopne
jge
cmp
imul
out
repz
xor
int
pushf
stos
sbb
fdivr
adc
js
xchg
adc
dec
inc
sub
jae
or
or
sar
mov
clc
jmp
dec
adc
and
in
mov
xchg
inc
pop
add
je
cmc
cmp
adc
dec
into
sbb
aaa
cmp
lds
mov
or
imul
aad
cltd
jp
mov
mov
xchg
dec
aad
adc
mov
sub
fnstenv
mov
jmp
aas
and
das
xor
jnp
push
add
push
mov
pop
and
sbb
or
stos
bound
add
daa
sub
xchg
fidivrs
cs
xor
sbb
roll
cmp
rorl
pop
xchg
adc
jmp
pop
and
xchg
cmpsl
dec
cs
mov
inc
xor
lea
push
mov
push
movsb
idivl
cli
inc
pop
ret
and
icebp
shr
pop
dec
jnp
lret
inc
cs
jp
insb
add
stc
loop
shr
jns
sti
xchg
loop
push
lret
ret
sarb
into
imul
add
fists
sub
add
call
xorb
mov
cmp
popa
pushw
jae
dec
stos
and
mov
dec
popa
stos
xchg
dec
add
push
mov
mov
fidivrs
push
jmp
jns
mov
jbe
and
and
stc
inc
adc
mov
and
push
test
mov
cmp
shll
loop
xchg
das
sub
xor
and
mov
cmc
fldl2t
sub
mov
idivb
adc
push
cli
stc
int3
mov
adc
lret
pop
mov
aaa
inc
dec
add
lods
and
loope
fimuls
jnp
ljmp
lods
jge
leave
cmc
not
mov
push
sub
mov
mov
mov
mov
push
mov
or
loop
add
or
ja
sbb
add
push
test
pop
lods
and
mov
sub
push
inc
mov
xor
xor
ja
outsb
xor
and
aad
jbe
in
jno
subb
jo
mov
dec
push
pop
jb
out
sar
sahf
add
push
fs
out
lret
xchg
shll
dec
mov
push
sbb
mov
popf
pusha
adcl
and
pop
sbb
hlt
add
jae
out
cmp
or
lds
ljmp
je
shlb
es
inc
jns
push
xor
shll
mov
adc
add
push
loope
imul
cmp
fs
sbb
xchg
lahf
mov
mov
loop
pusha
add
mov
imul
sbb
lret
cld
fdivr
mov
sub
ret
lods
int3
dec
hlt
cmpsb
iret
aam
dec
dec
enter
int
inc
cli
imul
inc
fadds
mov
inc
adc
adcl
repz
xchg
xchg
jl
subl
push
cmp
jl
popf
jae
pop
inc
sbb
xor
dec
inc
mov
lcall
or
lds
sub
daa
lods
rcrb
scas
sub
inc
adc
adc
in
or
movsb
in
popa
sub
mov
xchg
xor
jo
cmpb
sti
fdivs
mov
inc
lret
ffree
xchg
xchg
mov
pop
sbb
cmp
sub
dec
push
sahf
lods
adc
xchg
sub
push
jp
jbe
push
lret
cmpsb
adc
jne
xchg
das
push
and
mov
pop
sub
repnz
dec
jg
shrb
shrb
xor
dec
ss
adc
xor
in
add
loop
xorb
mov
xchg
shrl
mov
push
sub
adc
imul
in
mov
inc
xchg
sbb
mov
dec
arpl
dec
or
enter
outsb
mov
mov
add
xchg
cmp
inc
or
out
add
push
inc
outsb
jl
stc
push
or
xor
jecxz
shl
mov
repz
outsl
adc
sub
jbe
cs
pop
stos
subl
sahf
jecxz
std
or
and
dec
je
daa
or
lret
mov
cld
mov
iret
jne
or
pop
enter
or
lods
and
jbe
dec
cwtl
adc
aas
int3
repz
fdivrl
orl
lods
in
inc
xchg
enter
push
cmc
aaa
outsl
jns
fldl
sbb
sahf
out
idivb
ret
aam
inc
inc
push
push
jbe
stos
or
mov
mov
sahf
push
popf
adcl
aad
cmp
xor
adc
pop
aaa
lds
jmp
sbbb
insl
sub
cltd
inc
subl
xor
std
cmpsl
shll
and
push
mulb
inc
shl
push
into
mov
sti
das
cmc
mov
mov
sbb
pop
test
xor
xchg
sbb
out
push
pusha
sub
mov
sub
push
es
in
fidivrl
sub
loopne
cmp
cmp
in
sbb
xchg
sub
sub
icebp
fimull
lcall
mov
inc
mov
daa
xor
mov
dec
in
cmc
loop
ljmp
pop
fs
negl
rol
xchg
sbb
addr16
fwait
sarb
addb
lret
int
xchg
aas
push
lcall
jecxz
mov
addl
sbb
sub
jmp
es
adc
lea
mov
or
popf
push
iret
sbbb
insb
sbbl
cmp
popa
in
jbe
aad
enter
sbb
aam
fistps
popa
push
dec
mov
iret
push
mov
dec
or
adc
jg
sbb
xchg
in
in
shlb
push
jg
jb
fimull
cmp
movsb
dec
test
out
outsb
fimuls
pop
sbb
sbb
mov
cwtl
jne
repnz
pop
xchg
lret
outsl
mov
xor
push
jl
jle
jmp
and
jle
daa
xchg
aas
adc
dec
shlb
mov
int
mov
cltd
dec
xor
ss
fisubl
mov
cmp
xor
xorb
push
jo
xor
lahf
fcmovnbe
add
jg
xchg
mov
jl
loopne
pop
xlat
mov
sub
pop
pop
inc
dec
jge
in
adc
fstl
jb
roll
push
inc
mov
xchg
sub
mov
das
inc
add
mov
imull
cmp
pop
jle
dec
inc
or
adc
push
sbb
icebp
test
xchg
xor
or
cmpb
out
mov
mov
enter
andl
cmp
xor
adc
lret
andb
enter
mov
daa
mov
cmp
inc
in
jns
pop
add
testb
ret
subl
test
jp
sub
mov
or
sbb
inc
mov
adc
fwait
inc
xchg
fnstsw
sub
push
xchg
xchg
xchg
or
inc
xchg
or
adc
scas
sub
adc
orb
xor
jnp
mov
cmpsl
js
xlat
jge
xchg
dec
cmpsl
and
add
add
out
sub
sbb
insl
xchg
subb
or
ds
sub
xchg
ret
loopne
aas
inc
push
cmpsb
mov
jnp
pop
arpl
enter
inc
fcomi
or
in
imul
arpl
adc
ret
mov
cmp
lret
sahf
push
movsb
xor
andb
je
inc
ret
pop
dec
cmp
inc
loopne
pop
push
or
sbb
cmpsb
sbb
inc
icebp
sbb
jle
jo
mov
fs
jg
jle
pop
jns
movsb
mov
or
movsb
ficoml
rcll
repz
dec
andl
mov
enter
lret
mov
jecxz
and
xor
nop
hlt
sub
inc
stos
test
int3
fldt
jmp
fmull
push
jg
cmp
icebp
mov
add
add
push
lods
cmp
lock
ljmp
jg
jle
pop
rol
push
es
movb
bound
fmull
push
hlt
repz
ljmp
pop
or
popa
adc
negb
aas
inc
mov
fld
out
test
and
addr16
scas
push
mov
les
jbe
cmp
push
das
bound
movsb
arpl
fwait
and
lret
jle
sbb
inc
mov
jns
pop
neg
and
xchg
xor
sbb
das
mov
mov
scas
mov
ja
jg
inc
ret
jne
les
xchg
fdivs
cmp
shlb
cmp
pusha
fs
out
cli
sbb
iret
lcall
cmp
dec
inc
bound
fstpt
testb
inc
xchg
cmp
sbb
mov
inc
push
cmpsb
xchg
roll
pop
test
mov
add
mov
jno
push
push
mov
xchg
fildl
sbb
sarl
cmp
pop
movsb
ss
not
inc
cmc
sub
aaa
adc
sbb
push
or
lock
fs
in
xchg
mov
mov
sbb
jo
dec
mov
icebp
push
xor
inc
pop
fidivrl
push
adc
mov
push
or
xor
push
ss
pop
xor
xchg
test
ljmp
notl
sbb
pop
and
jo
xchg
cmp
add
push
arpl
lods
sub
movsb
jnp
mov
imul
test
jne
lods
mov
mov
out
es
mov
aas
stos
xchg
xchg
lods
push
fildl
adc
sub
ja
into
push
es
cltd
dec
and
gs
stos
outsl
add
or
and
and
inc
out
xchg
int3
push
xlat
push
loope
lea
ljmp
pop
dec
popa
pop
rep
scas
pop
pop
add
jecxz
jmp
add
clc
jl
fldt
hlt
test
ret
xor
jbe
pop
jge
push
ja
xchg
cwtl
nop
adc
clc
mov
fmul
push
and
imull
mov
jmp
mov
fs
adc
out
mov
sarb
jne
scas
adc
push
stos
movsl
push
nop
xchg
gs
dec
sbb
sbb
fdivr
mov
shrl
jmp
xor
jle
sbb
fadds
movsl
mov
xchg
mov
adc
cltd
dec
push
or
mov
mov
dec
mov
mov
xlat
pop
sar
ja
add
jecxz
sahf
sbb
lds
inc
ja
leave
sub
fsubrs
aam
xor
pop
sti
lods
pop
subb
int3
stos
push
mov
lret
lock
xor
pop
in
test
pop
gs
xor
das
sub
fists
int
pop
mov
fidivs
mov
and
dec
adc
daa
push
outsl
jg
daa
mov
push
xchg
incl
xor
int3
dec
pop
push
mov
xor
test
mov
lods
mov
push
xor
cmpsb
out
ds
loopne
dec
dec
xlat
mul
pop
mov
scas
or
push
dec
movsb
and
add
test
sbb
test
clc
shrl
test
mov
jge
outsl
movsb
stos
cmp
push
arpl
fisttpll
or
cmp
lea
mov
pop
sub
inc
xchg
lahf
movsb
out
pop
jnp
or
add
std
inc
xchg
dec
repz
jbe
pop
adc
adc
xchg
or
pop
mov
sub
pop
inc
mov
cs
cmp
adc
jns
jp
push
add
sbb
int
js
add
fsubp
jbe
sbb
mov
cmpsl
xchg
out
xchg
lods
in
fcomps
mov
or
and
push
jg
xchg
push
movsl
cmp
xor
jl
sbb
sub
cwtl
inc
sub
adc
jnp
idivl
ja
lret
das
sub
sbb
idiv
sbb
fistl
sbb
jp
cmp
scas
imul
shll
inc
ret
hlt
test
out
adcl
inc
mov
jp
push
test
lods
aas
nop
mov
dec
jp
out
sub
mov
cli
xor
mov
out
sahf
ret
rol
push
stos
fsubl
jo
fwait
push
and
stos
bound
pop
lea
cmp
sub
fdivs
dec
lods
mov
aaa
or
inc
cmp
jmp
clc
sbb
inc
out
push
dec
data16
ljmp
sbb
mov
sti
repz
out
pop
movsl
test
jb
test
adc
lds
inc
cmpsl
inc
adcl
mov
push
mov
mov
sub
ret
push
dec
mov
lea
push
lret
les
pop
les
xchg
inc
outsl
xchg
nop
or
push
push
add
adc
pop
cmp
out
and
in
sbbl
or
pop
xor
add
dec
or
loope
mulb
adc
ss
push
mov
cs
xor
pop
ficompl
pop
test
or
repz
test
adc
lods
sub
xchg
aaa
inc
xchg
lahf
sbb
fstl
add
xor
test
or
mov
sub
pop
mov
outsl
lods
enter
pop
imul
pop
stc
mov
push
or
mov
xchg
add
mov
cmpsl
push
imul
testb
xchg
cmp
adc
into
mov
pushl
cmp
test
adc
arpl
bound
mov
cs
ret
pop
add
test
out
je
stc
dec
adc
int3
movsl
xor
xchg
lea
dec
cltd
loop
push
push
test
iret
movntq
xchg
bound
push
xchg
cmp
movsl
mov
test
xor
sahf
lock
mov
push
mov
jbe
insl
dec
jle
xchg
les
scas
cmp
dec
adc
push
lret
mov
fdivl
sbb
mov
lret
sbb
adc
mov
jbe
mov
imul
pop
push
int
iret
sbb
lea
jle
mov
sub
sub
inc
test
in
fwait
xchg
out
mov
fldcw
and
push
push
std
sbb
xor
inc
fmuls
ljmp
cmpsl
push
sbb
shlb
mov
mov
lcall
imul
inc
add
loope
sbb
sub
daa
aaa
cwtl
sbb
push
enter
and
ret
es
jecxz
stos
fsubr
cmp
nop
push
inc
lret
or
insb
fcoml
mov
inc
int3
cmp
fcompl
rorb
mov
dec
fbstp
scas
push
mov
stc
jnp
xorb
enter
lcall
or
test
testb
mov
cmp
mov
sub
leave
cltd
push
daa
xchg
ficomps
aam
sbb
sub
xor
mov
add
and
jae,pn
fistpll
fwait
cmp
xor
xchg
or
mov
outsb
inc
cld
mov
ljmp
mul
cltd
adc
jg
stos
and
mov
and
stos
imul
data16
jnp
push
nopl
sbb
lea
dec
test
mov
das
jnp
test
cltd
jg
inc
mov
es
inc
or
jcxz
jno
icebp
test
fnstcw
xor
arpl
cltd
fdivl
jg
adc
ror
xchg
fdivrs
sub
and
adc
push
jnp
aaa
int3
lods
sbb
mov
jno
jo
clc
fimull
out
sub
shll
fbld
cmp
lock
cltd
and
xchg
inc
mov
mov
pop
push
mov
lret
cld
leave
in
mov
psrlq
out
push
sbb
jnp
sarb
sbb
cmp
data16
cmp
push
aaa
or
sbb
cmp
lret
push
cmp
add
sbbb
pusha
aaa
adc
aad
pop
adc
xchg
sub
mov
add
mov
pop
leave
imul
daa
jle
imul
sub
insl
jo
xchg
mov
pop
mov
mov
or
scas
ret
dec
mov
inc
lahf
leave
jle
dec
and
cmpsb
xchg
movsb
xor
or
out
lret
sahf
xchg
pop
dec
das
dec
negb
lret
cmp
push
adc
std
xchg
and
test
mov
jb
sub
leave
ficompl
cmp
dec
cmpsl
mov
sub
aam
or
fidivl
inc
imul
jnp
adc
cli
jp
sahf
mov
push
jb
or
cli
rolb
cltd
add
sub
mov
xor
jns
xchg
sbb
adc
ret
data16
cmp
iret
js
hlt
lea
shrl
dec
jne,pn
add
adc
cmc
inc
push
sub
cmpsb
in
pop
test
lea
jo
xor
sbb
fsubl
jne
xor
inc
std
ljmp
or
add
movsl
aam
sub
fsubrl
mov
sub
jp
inc
insb
pop
stc
mov
jp
out
dec
mov
aam
inc
ret
cmp
inc
sbb
pop
orl
mov
daa
and
cmc
and
xor
mov
adc
adc
icebp
push
mov
or
cwtl
xchg
inc
cmp
pushf
out
jl
sub
push
push
insb
inc
enter
mov
cwtl
cmovo
popa
in
rolb
fisubrl
mov
das
xor
lahf
ret
aaa
xlat
addl
xor
xor
in
fs
stos
test
inc
add
repnz
bound
sbb
jecxz
lahf
addl
jge
jae
or
push
pop
lods
sub
adc
dec
movsl
outsb
push
mov
dec
pop
xor
aas
push
mov
xor
sub
mov
add
int3
inc
mov
pop
mov
jb
sbb
pop
sbb
lahf
cltd
mov
jbe
xor
fisttpl
add
push
ret
pop
push
iret
mov
or
dec
cmc
mov
aam
hlt
jno
or
push
out
outsb
push
cwtl
pop
ljmp
call
fsubrs
xor
lcall
and
jmp
fcoml
lret
jnp
adcb
push
inc
pushf
xchg
mov
xor
dec
sbb
clc
fstl
xchg
fs
test
aad
in
lds
mov
inc
sbb
adcl
adc
sbb
insl
xchg
das
out
in
jg
dec
cmp
iret
cli
xor
dec
clc
xchg
lret
adc
xchg
cltd
push
fsub
movsl
push
xor
dec
xchg
rolb
mov
idivl
cli
or
jge
cld
adc
out
fidivrs
pop
nop
std
cmc
leave
roll
adc
lods
cli
cli
lock
rclb
adc
mov
push
cld
xchg
lea
into
sub
lcall
in
into
push
mov
imul
dec
test
cmp
xor
rcrb
xchg
pop
and
lahf
das
mov
imul
sbb
loop
cmp
push
sub
mov
inc
es
mov
scas
pop
je
and
xchg
jbe
xchg
dec
jns
pop
mov
ret
dec
test
call
fdivrl
das
mov
stos
fwait
pop
test
mov
jo
cltd
js
shl
inc
imull
in
test
jge
lds
xchg
cmp
add
mov
push
or
ja
push
cmp
les
bound
cmpsl
and
xor
jle
lret
pop
add
mov
mov
sbb
jecxz
sub
sub
mov
or
mov
or
mov
adc
or
ja
call
inc
sub
fldt
jb
stos
pushf
sbb
inc
adc
and
jnp
sub
xchg
and
subb
sbb
aas
loopne
outsl
cmc
jb
dec
int
dec
push
push
dec
imul
and
lcall
xchg
pushf
mov
rcl
push
jl
repz
dec
cld
into
ljmp
mov
mov
out
fcomps
leave
inc
ret
cli
push
ja,pt
xor
cs
mov
dec
push
in
fisubrl
push
shl
add
xchg
push
xor
xor
scas
pusha
mov
xor
fstps
jmp
ds
cmp
and
jmp
sub
pushf
imulb
aas
push
inc
pop
adc
rcll
mov
add
in
adc
adc
push
mov
or
in
cltd
and
out
sahf
or
jo
stos
bound
mov
dec
lock
pop
and
mov
pusha
pop
insl
pop
ljmp
jecxz
lret
pop
pusha
mov
mov
shll
pop
repnz
into
enter
pop
shll
repnz
inc
popl
and
pop
lds
xor
gs
test
pop
dec
or
add
movsb
stos
xchg
iret
movsb
xor
mov
pop
xchg
jmp
push
push
ret
repz
jbe
inc
movsb
repz
pop
adc
stos
aam
inc
inc
mov
inc
mov
out
xor
es
out
jle
push
mov
std
ret
rcrl
sti
mov
mov
sbb
xor
xor
mov
sub
ret
mov
test
push
push
outsl
xor
mov
push
mov
addr16
or
cli
jmp
sti
mov
add
hlt
call
dec
or
stos
dec
addr16
nop
mov
mov
testb
ret
jge
mov
and
das
int
lret
or
repz
inc
fs
stc
icebp
mov
bound
push
xchg
or
loop
lret
sbb
sbb
push
int
jae
ja
icebp
mov
sbb
push
hlt
outsl
lahf
rcrl
mov
jmp
shlb
mov
pop
pop
rcll
mov
pushf
js
adc
add
insl
repnz
dec
pop
xchg
xorl
dec
and
cmp
cmpsl
fildl
add
in
ret
mov
and
jnp
mov
dec
dec
jns
push
dec
fwait
stos
jg
insl
mov
push
push
shr
cmpsl
shll
les
js
mov
ficoms
ljmp
iret
sub
jno
clc
aaa
ficompl
mov
stc
xor
mov
mov
push
ljmp
dec
and
into
sub
mov
ja
popl
cli
sub
add
out
adcl
rcr
mov
fcmovu
and
xchg
adc
pop
test
sar
addr16
jecxz
clc
outsl
mov
dec
xor
or
cmp
addr16
call
loope
and
dec
test
popa
xchg
mov
push
aas
or
adc
jecxz
mov
int
negl
pop
mov
mov
shll
call
or
mov
hlt
mov
inc
sub
xchg
fcomp
gs
lret
std
fldenv
rcll
shll
mov
popa
aaa
push
test
fistpl
out
gs
lret
orl
cwtl
and
push
aad
mov
push
fiaddl
xor
xchg
add
fstps
xchg
mov
nop
fstps
jnp
mov
and
sbb
pusha
sti
or
je
sub
sub
dec
dec
pop
inc
jmp
push
push
mov
data16
int
xchg
adc
xchg
xchg
popf
mov
movl
out
loop
and
jmp
ja
movsb
inc
into
pushf
cmp
lret
les
cltd
mov
adc
pop
arpl
addb
sbb
cli
sar
ja
pop
cmp
out
push
pop
jg
in
scas
pop
adc
pop
int3
hlt
arpl
shlb
or
pop
ljmp
jo
xchg
out
add
mov
lods
and
mov
or
mov
jns
aam
lahf
mov
leave
xchg
push
jecxz
insl
jmp
jnp
arpl
pop
pop
and
ja
div
or
dec
pop
pusha
cmpsl
mov
mov
in
js
insb
dec
add
inc
cwtl
xchg
add
push
fsubrl
fmuls
shlb
divl
int3
sti
xchg
in
xor
jecxz
dec
cmp
mov
fldt
dec
jne
mov
shll
sbb
dec
add
xor
and
ja
or
test
stos
outsb
sbb
fsubs
adc
and
inc
dec
call
adc
jo
xor
lock
mov
ljmp
sbb
mov
pop
cmp
sub
fisttps
pop
stos
mov
loope
aam
mov
lahf
dec
stos
and
inc
xchg
popa
cmpb
stos
repz
outsb
xchg
cmp
mov
pop
pop
rorl
aam
repnz
insl
push
dec
mov
mov
std
sub
jnp
sub
cltd
xor
aas
daa
push
bound
sub
jnp
adc
mov
mov
rcrl
dec
aas
addr16
push
rcr
jae
add
jb
lock
aam
push
sub
and
push
sub
out
cltd
sbb
loopne
ret
xchg
ljmp
movsl
and
push
jae
mov
ja
mov
mov
jle
nop
mov
adc
add
out
fwait
pop
or
bound
jecxz
dec
inc
jno
dec
rolb
fwait
stc
ficoml
stos
push
pushl
push
pop
out
cmp
test
mov
xchg
sbb
push
xchg
in
inc
test
popa
xor
cmpsb
cli
fstps
dec
mov
fimuls
lods
mov
push
enter
stos
inc
pop
and
sahf
int3
jmp
clc
out
neg
lock
pop
pop
push
popf
mov
xor
subl
xchg
inc
jmp
xor
inc
test
into
ret
add
pop
rcrl
xchg
pop
lret
ficoml
sarb
add
push
imull
popf
pop
popf
push
mov
pop
in
rcr
into
nop
fstpt
sbb
inc
pop
call
xor
fisubs
cmpsl
shlb
ret
add
mov
int3
sti
xchg
mov
lods
pop
jmp
nop
outsl
mov
jbe
popa
sbb
jl
popa
sbb
repnz
imul
rcl
add
sbb
mov
push
mov
lahf
inc
dec
mov
and
orl
dec
add
lods
sbb
sbb
bound
out
cmp
fmulp
popa
pop
pop
sbb
stos
inc
loope
xor
xor
mov
add
mov
cmp
add
shrb
xchg
pop
xor
into
add
sarl
sbb
mov
scas
rorb
pop
jae
pop
push
mov
jp
arpl
mov
mov
adc
cmp
push
mov
dec
sub
push
xchg
adc
fwait
jb
pop
lea
out
push
jg
lret
lock
aad
adc
or
mov
mov
lods
lock
dec
jp
dec
stos
in
mov
xchg
inc
dec
mov
imul
bound
int3
xchg
pop
adc
mov
jle
sti
xchg
sub
or
cmc
leave
dec
jge
std
mov
push
mov
arpl
bnd
aaa
mov
cmpl
or
sub
call
jns
jbe
or
mov
cmp
es
pop
xchg
cmp
sub
xlat
fwait
push
dec
fistpl
lcall
sti
sti
push
insl
out
pop
imulb
sbb
mov
mov
fdivrs
nop
push
xchg
push
xor
aas
loopne
paddb
jb
dec
mov
mov
sbb
ljmp
jbe
subl
sbb
es
sbb
jbe
adc
pushl
push
sahf
out
loope
dec
push
mov
push
cli
pop
or
cmp
aaa
sti
cli
xchg
mov
cmpsl
int
lahf
jae
and
in
push
wrmsr
push
xor
movsl
test
cmp
loope
subb
mov
push
push
mov
or
push
dec
outsb
cmp
stc
test
xor
sbb
jmp
std
fimull
push
je
adc
loope
mov
sub
adc
add
fildl
xchg
lcall
hlt
and
xchg
xlat
fs
xor
jnp
xchg
shll
popa
mov
cmp
mov
test
push
outsl
in
shll
add
addr16
pop
adcl
shll
add
push
mov
aam
test
and
shll
imul
cltd
push
push
jno
push
rcr
push
incb
faddl
adc
int3
xchg
xchg
push
jmp
jb
out
mov
sub
decl
or
lcall
ljmp
int
jb
add
xchg
arpl
sub
hlt
xchg
cmp
dec
ds
and
push
jns
pusha
cmp
cmp
insl
pop
jns
loopne
mov
dec
orb
add
pushf
pushf
cmp
nop
sub
popa
rcll
sub
dec
fs
mov
mov
sbb
call
mov
loopne
lds
xor
cltd
inc
das
cmp
cmp
pop
mov
sub
test
popa
sub
cld
push
fsubs
cs
lods
scas
add
movsb
sub
inc
ret
icebp
iret
add
insb
ss
aas
fiaddl
es
stos
fisttpl
popf
das
add
cmpsb
cmp
cmp
or
imul
in
push
data16
inc
notb
push
sub
cmp
fld
enter
in
into
xchg
nop
movsw
inc
lock
outsl
add
cmp
call
pop
sahf
fcoms
loopne
mov
mov
rcll
sbbb
adc
incb
enter
inc
stc
cmp
or
mov
add
jne
sysret
cmp
or
sub
adc
sbbl
ds
inc
cmp
dec
sar
pushf
xchg
mov
scas
lods
fstpl
and
inc
jge
lcall
pushf
and
push
sbb
jb
pop
sub
fisttpll
inc
jb
xchg
inc
roll
bound
in
in
pop
call
insl
emms
push
mov
arpl
fucompp
mov
nop
pop
out
cmp
pop
fcmovbe
test
pushf
sbb
inc
outsl
dec
xor
push
or
and
push
jle
mov
pop
ret
mov
dec
decb
inc
ja
push
xor
cmp
jae
inc
pop
out
clc
fcoml
or
xor
shl
pop
hlt
adc
mov
int3
lock
ret
lods
and
inc
pop
aam
xchg
mov
imul
fcmovu
xor
popa
in
adc
mov
cltd
jne
cs
pop
sbb
cwtl
lret
out
lods
sbb
jne
icebp
mov
dec
adc
mov
mov
lcall
jg
add
out
inc
jge
pop
mov
xchg
sbb
das
adc
clc
aad
std
jp
xor
mov
inc
mov
pop
sti
cmpsl
inc
jecxz
push
lret
pushf
lcall
test
sub
int
js
lret
xchg
pushf
push
pop
es
mov
loop
jo
int3
lods
and
andl
add
addr16
es
shlb
adc
les
sti
xchg
jno
mov
xor
pop
xchg
in
cli
movsl
xchg
in
loopne
xor
ljmp
repnz
scas
cmp
mov
je
repnz
cli
rcrb
adc
lcall
sub
clc
enter
out
fcmovbe
inc
icebp
push
dec
ror
jbe
dec
jmp
shll
int
mov
pop
xor
fs
mov
ret
or
icebp
add
mov
loope
mov
test
jecxz
bound
push
jnp
mov
jo
xchg
xchg
adcb
stc
and
pop
lcall
fistpl
add
xchg
rolb
sub
inc
test
push
rorl
cmpsb
cmpsb
mov
or
push
in
mov
test
dec
daa
cmp
sub
pusha
fsubl
aad
and
in
lock
loopne
icebp
sahf
out
mov
push
pop
pop
xor
sbb
xchg
sub
fcomi
pop
pushf
mov
fcmovbe
add
faddp
pop
sbb
or
cmp
adc
mulb
enter
jle
xchg
aas
out
sbbb
sub
rcrl
adc
mov
dec
out
or
xor
outsl
pop
mov
jo
mov
lret
jae
sar
aaa
add
adc
pop
inc
lods
popf
add
jg
jae
xchg
dec
fldt
xchg
sahf
mov
fistpll
sub
and
aaa
mov
push
and
clc
int3
movsl
xchg
sub
pushf
mov
test
and
add
loopne
nop
mov
or
push
imul
mov
cmp
xor
jno
adc
sti
sub
pop
mov
mov
adc
in
movsb
sub
mov
or
int
popa
fbstp
lock
lcall
push
cs
mov
mov
dec
mov
rcll
jmp
xor
lret
adc
add
inc
sub
out
das
or
cmp
fdivrs
cmpsl
inc
dec
fwait
jnp
mov
aad
jbe
stc
jnp
mov
mov
faddl
iret
ret
mov
ret
mov
jmp
je,pt
dec
xchg
xor
orb
jp
inc
enter
in
jo
xchg
push
push
fsubrs
mov
sarb
mov
or
stos
insb
lods
imulb
ljmp
mov
repnz
jbe
lea
adc
aad
into
in
sarb
iret
dec
out
mov
jae
insb
dec
add
in
in
mov
sbb
mov
adc
jno
mov
jnp
xchg
loopne
fsubs
mov
push
jecxz
and
jae
loopne
mov
mov
pushf
push
insb
das
jle
test
xor
mov
int3
daa
mov
call
xchg
ss
mov
inc
mov
inc
jae
pop
lcall
dec
dec
jne
das
aam
arpl
inc
mov
push
xor
out
test
ficoml
enter
sub
ss
cld
mov
jbe
loop
lock
jo
orl
call
cmp
mov
ficomps
cmp
call
mov
fiaddl
cmp
add
xchg
iret
dec
loop
push
pushf
ss
aaa
ficoml
xchg
stc
dec
fsubrs
mov
fdivrs
iret
or
in
pop
jbe
gs
pop
mov
pop
setno
sbb
and
mov
xchg
stos
test
int
js
ss
out
aam
add
dec
inc
dec
roll
pop
dec
xor
or
ds
push
bound
mov
shr
enter
cmpsl
xor
xorb
jne
int3
cmp
psraw
cs
push
leave
rcll
out
pop
cmp
push
lret
inc
jae
mov
xchg
mov
mov
dec
mov
lea
loopne
lret
push
dec
scas
das
push
divl
dec
outsl
sbb
dec
sbb
mov
add
out
call
lret
cmpl
push
sarb
push
push
repz
repz
pop
dec
gs
mov
xchg
xchg
add
mov
ja
push
mov
and
pop
mov
insl
add
lods
std
push
lahf
xor
test
pop
sbb
mov
jle
or
cmpsl
and
cli
inc
mov
mov
xchg
call
icebp
adc
push
aaa
xchg
rclw
push
lea
push
push
pop
addb
jle
adc
mov
jge
test
mov
movsb
mov
sub
movsb
add
pop
lcall
out
add
mov
sbb
jp
xor
ja
mov
je
cld
cmpb
jmp
in
or
cmp
pop
pop
leave
lcall
push
jl
sbb
fmuls
or
popf
push
dec
mov
loop
inc
aas
addr16
add
or
or
adc
dec
fmul
or
shl
sbb
fstpt
xor
and
scas
jae
out
pusha
stos
jae
das
mov
out
sbb
push
dec
cmpsb
testl
adc
loop
inc
lods
jno
outsl
rolb
jae
dec
js
in
xchg
in
out
test
pushf
fsubr
fimuls
mull
sbb
lea
loop
sub
xor
jmp
dec
jg
popf
ljmp
pop
out
leave
and
bound
mov
sub
es
fmull
or
loope
pop
scas
out
add
sbb
or
mov
xchg
icebp
cwtl
and
push
jl
pusha
xor
out
push
mov
add
mov
xchg
adc
adc
imul
mov
call
fdivrs
cwtl
xor
pop
insl
test
repnz
jne
xchg
or
ret
lahf
or
scas
dec
fisubl
mov
mov
jno
out
imul
mov
loope
cmp
dec
sub
mov
inc
mov
stos
fldcw
cmp
sti
lcall
xchg
loop
cmpsb
mov
sub
cwtl
or
or
push
lods
rolb
js
loope
das
sub
cmp
cmp
cmp
mov
mov
cmpsb
leave
lock
mov
mov
inc
popa
out
mov
dec
inc
mov
xchg
pop
divl
sbb
shlb
shll
js
push
jbe
outsl
adc
test
xchg
dec
push
and
subps
ja
shr
sub
shlb
xor
jp
fnstcw
mov
jle
popf
aaa
mov
adc
push
mov
js
add
or
divb
jge
xchg
sbb
xor
lret
dec
and
orl
sbb
ret
loopne
mov
inc
popa
push
inc
and
mov
popa
inc
addl
cs
and
fcmove
ret
lds
or
test
lods
sub
xchg
in
pusha
pop
jo
mov
push
mov
push
mov
jbe
push
xchg
in
mov
mov
fcmovne
sbb
jo
call
pop
insl
mov
lcall
mov
mov
idivl
xchg
out
arpl
int
lods
sub
xchg
clc
cmpsb
and
pop
push
ror
sub
ret
rolb
adc
mov
pop
hlt
and
adc
fwait
adc
stos
sub
mov
dec
mov
adc
jae
cmp
sub
push
xchg
cld
jp
xchg
add
cmp
jae
imul
scas
mov
push
sub
lods
shrb
lahf
fsts
adc
adc
sub
js
mov
push
test
hlt
stos
inc
cltd
mov
lods
sbb
enter
roll
out
dec
mov
sbb
dec
push
outsl
cmc
push
in
mov
and
adc
jno
insb
xor
inc
clc
aam
jae
add
dec
mov
pop
out
stos
cld
mov
popa
ds
hlt
xchg
sub
pop
cltd
rep
jecxz
inc
mov
cmp
loope
xchg
sub
iret
fs
pusha
add
jno
mov
xchg
cmp
repz
loope
or
addb
lods
xor
sub
inc
jnp
addr16
jle
pop
leave
out
ja
rcrb
cmp
divl
into
js
and
pushf
or
ds
hlt
push
xchg
shl
loopne
xchg
add
jns
hlt
sahf
mov
or
into
sub
lcall
pop
fs
cmc
xchg
fdivl
js
jg
sbb
xchg
cmp
xchg
lds
pop
xchg
pop
cmp
jg
push
and
mov
mov
push
jb
mov
pop
xchg
add
push
jecxz
popa
jle
or
jl
mov
push
pop
pop
out
data16
imul
and
movl
shr
cmpsl
popf
cmp
iret
mov
lcall
data16
cmp
add
cmp
and
call
in
out
popf
addr16
bound
mov
loopne
aas
inc
push
bound
adc
loopne
mov
jnp
mov
mov
mov
ficomps
mov
call
cmpsl
xlat
popa
stos
push
pop
cmp
xchg
jbe
enter
sbb
stos
add
addb
add
xor
lods
fs
xchg
test
scas
outsb
push
xor
add
jo
jno
movsl
or
adc
xor
adc
push
fidivrl
push
and
mov
push
addr16
cwtl
and
jno
ret
cmp
push
xor
cmp
adc
mov
dec
ss
cld
mov
and
xchg
sub
scas
into
sub
push
iret
mov
js
inc
xor
mov
jecxz
xchg
push
adc
pop
cmp
shl
addb
shl
cmp
rol
scas
sbb
insl
std
cmp
pop
mov
lahf
adc
adc
mov
cmp
sub
sbb
sub
adc
movsl
mov
sub
cmp
les
std
mov
shlb
es
testb
js
imul
ficoml
mov
movsl
mov
xchg
lock
addr16
jbe
mov
push
in
out
lahf
popa
aas
xor
jns
cli
shll
lea
or
inc
fldl
mov
pop
mov
cmp
outsl
push
sub
testb
insl
in
loopne
adc
xchg
cmp
xor
sbb
pop
fs
or
pop
dec
les
pop
ror
je
mov
aaa
shlb
jmp
push
mov
cs
push
fs
jbe
cmpsl
mov
rcrl
inc
shr
cwtl
dec
and
je
mov
jmp
add
push
rcl
out
mov
jb
sti
jl
scas
cmpsl
in
xchg
push
adc
fdivrl
icebp
inc
dec
aas
xchg
leave
stos
dec
test
cmp
int
bound
lods
push
sbb
sub
jle
add
cmp
add
mov
adc
sbb
lds
decl
lret
xchg
pop
sbb
adc
popa
jo
mov
int
cmp
lods
scas
inc
ret
mov
js
jae
push
mov
dec
mov
out
in
mov
dec
ljmp
pop
jecxz
rcll
repnz
cmpsl
gs
mov
test
xchg
dec
cld
sbb
inc
cltd
in
mov
stc
rclb
xchg
dec
cmp
test
xor
cld
popf
push
inc
lea
aas
aaa
pop
mov
es
icebp
lods
mov
cmpsl
mov
pushf
jno
inc
jbe
repz
ja
cmp
fdivs
js
xchg
lock
sbb
xorb
test
jg
ds
addr16
add
mov
je
xor
mov
fdiv
mov
nop
mov
xor
mov
and
insl
inc
iret
sub
jmp
xchg
xor
dec
iret
inc
mov
ret
mov
or
sbb
imul
jb
dec
adc
mulb
shrb
mov
cmpsl
push
rcll
test
gs
xor
jl
lcall
sbb
into
mov
xchg
mov
lds
adc
cwtl
std
lret
outsl
imul
movsb
xchg
xorl
sbb
mov
fisttpll
lods
movsl
dec
ds
dec
cmp
shl
shll
jbe
push
addr16
and
sub
or
jmp
or
jecxz
add
mov
loopne
dec
xchg
sub
dec
pop
dec
and
fdiv
sbb
dec
dec
jle
push
pop
test
add
movsb
in
rep
mov
stos
test
sbb
mov
movsl
cmp
and
pushf
in
sbb
dec
fdivs
sub
xchg
mov
scas
stos
movsb
pop
repnz
data16
cs
pop
das
aam
dec
paddb
inc
inc
mov
hlt
out
push
dec
cmpsb
or
cltd
jbe
icebp
push
fwait
add
mov
jae
push
sbb
mov
adc
adc
lods
jge
addl
jg
ds
dec
pop
in
jns
js
shll
imul
in
roll
inc
xchg
std
mov
bound
pusha
cmp
adc
mov
add
dec
mov
sahf
jne
int
mov
call
and
subl
push
nop
push
hlt
clc
pop
sub
fldcw
jno
sbb
dec
sub
inc
jnp
mov
fcomip
test
mov
sti
mov
lcall
push
mov
xor
mov
mov
mov
int3
push
in
inc
fs
stos
xchg
xchg
mov
loop
mov
dec
mov
push
lods
lahf
cmc
es
cmpsl
mov
inc
sbb
lret
mov
cltd
jae
mov
pop
cmpsl
andb
cli
and
insb
int
hlt
daa
xchg
push
mov
ret
sub
push
scas
mov
cli
xor
cltd
jns
xchg
psubw
cmp
cmp
cmpsb
call
inc
push
mov
fstl
es
and
cmpsl
call
roll
inc
jle
loop
test
popf
in
lods
add
out
std
dec
icebp
xor
xor
mov
outsb
test
jle
xor
aad
sub
fabs
loopne
cwtl
add
test
mov
rclb
in
push
add
add
outsl
insl
outsb
push
push
inc
mov
pop
xor
pop
movl
sub
add
and
test
ret
imul
pop
or
rolb
or
dec
divb
dec
dec
ficomps
out
sarb
mov
xlat
scas
and
repnz
jmp
cmpsb
push
and
inc
add
adc
test
push
sti
adc
xor
or
mull
fs
aad
inc
sub
dec
sub
pop
fnstsw
mov
sub
sbb
xchg
in
add
inc
outsb
mov
mov
test
sbb
mov
mov
in
mov
popf
inc
push
andl
mov
test
inc
outsb
sahf
cmp
cmpsl
xlat
mov
mov
or
pop
mov
mov
jbe
lods
psllq
jg
push
addl
push
add
sahf
mov
rolb
sub
inc
push
std
adc
dec
movsl
jle
cmpsl
add
jl
adc
add
in
loop
or
les
sbb
shll
cmc
jne
jle
sbb
sbb
sbb
outsl
xchg
fldenv
loop
aam
popf
data16
mov
push
jnp
jl
stos
adc
vpermpd
add
mov
stos
xchg
push
lods
jns
pop
repnz
push
sbb
mov
push
lahf
lock
repz
rcrb
ja
pushf
push
or
int
pop
test
jl
in
pop
adc
sub
test
sbb
push
push
xchg
pop
shrl
negb
in
jecxz
xchg
movsl
mov
fstpl
stos
in
push
mov
movsl
divl
mov
mov
dec
sbb
outsb
push
daa
push
movsl
mov
jp
dec
jecxz
and
pop
cmp
and
push
cmp
fisubrl
daa
ja
xor
out
sub
fwait
add
dec
push
xchg
jmp
out
sahf
jae
lahf
sahf
std
loopne
repz
inc
pop
adc
cmp
in
cmp
vhsubpd
out
iretw
mov
add
jg
and
pop
inc
push
xchg
out
mov
insl
push
out
push
stc
lods
jl
fdiv
push
lahf
imul
gs
mov
imul
ret
test
mov
sub
mov
int
cmc
js
stos
mov
jo
mov
jmp
sbb
jle,pn
pop
xchg
arpl
add
mov
pop
inc
push
cwtl
push
movsl
sbb
sbb
loopne
pushf
leave
imul
das
icebp
and
xchg
jp
sbb
sbb
out
insb
sbb
popa
filds
mov
or
adc
lret
ffreep
arpl
out
mov
jnp
xor
lea
imul
adc
repz
xchg
jmp
pushf
jp
dec
adc
mov
lea
sub
cltd
aam
inc
sub
pop
adc
mov
es
hlt
out
cltd
jb
mov
pop
adc
cs
sbb
mov
xor
push
ljmp
jno
adc
add
cmp
in
dec
pushf
xchg
sbb
push
jmp
imul
in
aam
dec
ds
mov
cli
movsb
xor
fdivs
mov
inc
push
push
or
lahf
jp
add
aaa
jno
add
jg
popf
add
inc
insl
stos
lds
or
rolb
pop
xchg
and
cli
or
push
xor
fidivrl
push
mov
cmp
push
xchg
dec
or
test
cmpsb
jle
ret
add
jo
or
popa
ja
cmpsb
outsl
cs
popa
mov
movsl
dec
fwait
xchg
add
xor
mov
lret
mov
lret
adc
je
repz
mov
mov
nop
test
aaa
mov
sub
js
sbb
mov
hlt
enter
push
push
push
fstl
inc
xchg
adc
inc
push
icebp
mov
fbld
xchg
fcmovu
jg
xor
outsl
pop
pushf
inc
mov
scas
in
repz
lods
popf
cld
pusha
inc
cwtl
fistps
xchg
movsl
dec
add
into
inc
jl
bound
iret
push
imul
andb
or
dec
cs
push
out
pop
repz
clc
xor
sbb
mov
pop
push
dec
sbb
dec
cltd
jmp
mov
sti
shrl
and
cmp
or
es
loopne
inc
lret
ja
ret
js
cmp
xchg
mov
xchg
dec
cmp
sbb
xchg
xor
cmpsl
sbb
outsl
mov
pop
lods
call
jno
imul
outsl
adc
gs
push
jge
addr16
testl
xlat
shrb
and
stc
clc
jle
bound
inc
xor
bound
mov
leave
jns
cmc
mov
ljmp
inc
ss
imul
ljmp
inc
push
cs
sub
out
rcrl
sub
les
test
movsb
adc
and
movsl
mov
xchg
cmp
cmp
cmp
jmp
orb
ljmp
jns
mov
and
adc
sbb
add
or
jmp
enter
inc
testl
add
je
aas
les
xor
lods
insl
out
xacquire
adc
imul
cli
xchg
xchg
xchg
ret
xlat
dec
daa
mov
adc
pop
ja
popl
movsl
mov
popa
sub
adc
ds
rcrb
jbe
jae
gs
fdivl
cmp
fiaddl
iret
addr16
adc
pop
sbb
mov
outsl
cmc
inc
sbb
push
das
jge
outsl
out
inc
ljmp
stc
mov
mov
or
add
imul
int
inc
xchg
pop
cli
fs
dec
lock
inc
ret
or
mov
push
cmp
pop
xorl
outsl
std
fdivrl
fldenv
out
jmp
in
test
icebp
pop
cmpsl
enter
push
out
in
jg
popa
imul
add
jno
mov
call
lods
inc
aaa
adc
add
inc
or
cmpsl
mov
jno
mov
out
sbb
fldl2t
mov
sbb
mov
pop
jns
adc
leave
jg
mov
cmp
rcl
lcall
aam
lahf
push
insb
call
dec
sbb
or
ljmp
rorl
data16
mov
jbe
stos
cli
loope
or
mov
xchg
shrb
push
test
insl
sbb
adc
inc
out
jbe
arpl
fdivr
mov
and
icebp
shlb
test
push
int3
xor
es
mov
pop
daa
scas
adc
nop
mov
loope
aam
fildl
int3
jbe
repz
test
sbb
out
add
pushl
xor
insb
mov
mov
push
mov
orl
lods
movsb
cmp
jne
ljmp
or
imul
mov
push
xchg
jne
jmp
xchg
mov
xlat
jle
jmp
out
inc
cmp
icebp
lret
scas
xor
roll
out
ss
xor
mov
mov
jns
xchg
and
je
ret
int
cli
mov
test
sbb
add
into
repz
repz
inc
mov
pop
mov
inc
mov
mov
ja
dec
fstpt
outsl
inc
leave
pop
jp
scas
and
and
js
mov
sbb
das
adc
test
and
mov
sbb
adc
jno
rcrl
outsb
pop
call
aas
sub
or
lret
xchg
insb
pop
outsl
addr16
pusha
stc
cmpsl
js
inc
xchg
loopne
mov
leave
lret
mov
adc
enter
mov
xchg
fyl2x
pop
mov
jmp
cld
cmp
push
xor
dec
test
jne
pop
shlb
and
adc
pop
lds
call
or
fwait
daa
jae
inc
mov
daa
xchg
mov
add
mov
pop
mov
popf
loopne
push
xor
inc
aad
fcompl
cmp
mov
jbe
nop
in
adc
or
and
xor
std
cmp
adc
repnz
mov
fstpl
aas
cs
cmpb
pop
inc
lcall
mov
pop
sub
mov
cwtl
pop
xchg
xchg
pop
mov
lods
pop
and
mov
fnsave
sahf
fs
dec
inc
insb
inc
xor
xor
gs
ds
js
pop
lock
into
stc
pop
mov
push
push
les
pop
bound
lcall
add
cmp
fimull
imul
cmp
adc
lret
call
jl
push
pop
lock
and
lock
idivb
imulb
jae
lock
fimull
adc
test
sbbl
loopne
hlt
add
mulb
mov
pop
movsl
xchg
lcall
inc
fs
aad
mov
mov
add
xlat
adcl
fidivs
js
xchg
mov
xor
jnp
pop
inc
cmc
jae
rclb
ss
xchg
push
add
and
into
xlat
cmp
mov
pop
xor
adc
inc
jle
mov
popf
or
adc
mov
dec
mov
rcrb
pop
loope
mov
push
mov
cmp
xor
mov
pop
ss
mov
inc
inc
xor
daa
outsb
aas
and
jne
sub
push
mov
leave
mov
jae
adc
test
inc
lds
fsubrs
xchg
imul
scas
and
xorl
daa
fmull
mov
jno
sti
xor
push
add
test
jg
movswl
mov
icebp
data16
in
notb
lahf
add
out
gs
stos
lds
mov
iret
mov
mulb
cmp
into
add
mov
or
lods
dec
fildl
gs
das
jp
or
jae
cli
add
outsl
push
out
pop
test
dec
mov
xchg
insl
xchg
fidivrs
pop
pop
jo
cli
pushf
xadd
jmp
add
ljmp
cmp
int
fidivrl
adc
js
xlat
push
sti
jge
call
or
daa
xchg
mov
pop
cmp
pushf
fwait
push
cmp
incb
and
pop
insl
in
fld
xor
dec
pop
or
add
in
lret
mov
ret
push
jle
xchg
mov
inc
cmpsb
icebp
inc
gs
inc
cmp
sbb
lcall
or
jno
repnz
sbb
int
jp
fsubs
pop
xchg
sti
pop
adc
pop
lahf
out
in
push
and
adc
ret
pop
icebp
jno
adc
pop
rcrb
mov
xchg
and
sbb
ret
add
and
cli
sub
sti
or
sub
mov
je
imul
xor
inc
addr16
aaa
in
lea
xchg
push
pop
roll
jmp
and
mov
cmp
insl
add
loopne
jns
ljmp
lods
mov
dec
rorl
insl
shll
stos
lret
lcall
ljmp
mov
scas
add
insb
repz
cwtl
nop
jns
xor
xlat
ljmp
pop
jmp
fdivl
sub
inc
ret
adc
or
inc
scas
pop
fld
imul
test
inc
lahf
out
jle
jmp
outsl
sbb
decl
pop
gs
xchg
hlt
cltd
imul
cltd
add
pop
adc
xchg
sbb
js
or
mov
das
push
mov
push
out
pop
aam
outsb
movl
je
popf
fs
add
xor
lea
lock
lret
lods
jne
rorb
fwait
daa
pop
lcall
mov
cwtl
aam
inc
call
or
add
pushf
ljmp
aaa
stc
ljmp
jns
repz
mov
add
jmp
jmp
xlat
sar
add
mov
in
push
sbb
sbb
and
xchg
lcall
imul
in
dec
jl
mov
in
test
mov
cld
hlt
pop
out
push
jmp
stos
pop
sub
cmpsl
dec
fs
cmp
fidivrs
push
sub
xchg
aad
cmp
mov
rorb
iret
cmp
dec
push
sbb
mov
push
in
adc
mov
pop
pop
sub
ffreep
std
insb
lret
cmp
mov
out
adc
lret
sbb
push
jnp
gs
mov
and
fcoml
mov
stos
loopne
xor
xor
xor
lods
dec
mov
mov
pop
and
or
movsl
lea
pop
adc
in
cmp
push
pop
fbld
int
outsb
fldenv
and
jl
aaa
jns
mov
sbbb
xor
fistpll
das
call
out
stos
out
cmp
push
push
adc
pusha
movsl
mov
cmc
add
adc
mov
js
adc
xchg
fistpl
repz
sub
lcall
adc
dec
mov
jge
push
push
int3
hlt
movsb
jne
ljmp
inc
lods
add
push
adc
insl
push
mov
popa
push
out
or
xor
fcomps
xchg
mov
xor
and
pop
cmp
addr16
dec
adc
xchg
cwtl
ror
adc
pavgb
pop
test
mov
cmpsl
xchg
testb
cmp
into
cmp
pop
add
pop
dec
pop
loopne
xchg
xor
jecxz
lods
mov
add
into
clc
xlat
mov
or
shl
dec
and
lahf
aad
mov
mov
rorl
mov
and
pop
push
pop
sbb
test
fsubs
andl
jb
inc
add
mov
jl
fs
js
cltd
mov
ret
pop
cmc
dec
stos
xor
inc
pop
ss
push
movsb
js
popa
mov
dec
sahf
mov
aaa
adc
dec
adc
fdivl
rolb
iret
xor
cwtl
xor
xlat
imul
ret
jge
push
incb
fildl
or
pop
insl
addb
xor
icebp
add
sub
cwtl
or
mov
or
push
lds
or
push
cmc
pop
sbb
inc
cmc
or
push
call
pop
mov
push
in
xchg
vmwrite
es
mov
mov
popa
mov
push
mov
fs
push
xchg
xchg
pop
frstor
addr16
aad
sub
jg
outsb
les
or
bound
and
mov
cwtl
push
cmp
add
jnp
dec
int
xchg
mov
push
gs
cwtl
xchg
lret
add
mov
scas
testb
dec
addr16
cmpl
incb
out
mov
mov
push
jmp
dec
or
mov
xchg
fdivr
test
push
dec
stc
or
std
and
out
shlb
sbb
imul
mov
jmp
sub
mov
test
push
leave
std
xchg
xchg
adc
cmp
mov
jno
inc
insl
popa
fistpl
mov
fsubr
jp
sub
sbb
xchg
cmp
insl
mov
sub
not
mov
xlat
and
mov
enter
xor
jg
lret
popa
xchg
mov
inc
jns
adcl
std
or
insl
or
or
cmp
push
jns
and
popf
add
jns
push
inc
lea
mov
mov
in
andb
iret
pop
leave
stc
adc
or
cmc
std
pop
fistpl
xor
inc
push
fwait
adcb
sbb
lock
mov
les
test
and
sbb
fstpt
addr16
add
sbb
xor
mov
add
add
xor
inc
outsl
lods
scas
pop
fsubrs
insb
test
enter
mov
aam
and
lret
das
imul
aad
xchg
adcb
and
mov
hlt
jnp
and
test
and
xor
dec
adc
and
add
mov
or
mov
mov
add
xchg
mov
add
and
jle
xor
scas
add
loope
mov
xor
and
adcl
mov
aas
jmp
adc
jmp
push
hlt
addr16
lahf
mov
movb
inc
std
ret
cmp
mov
mov
jecxz
adc
fs
stc
rcrl
test
sarl
iret
subl
sbb
xor
test
inc
jne
fld
add
mov
test
mov
pushf
fnstenv
cmp
clc
cmp
in
push
jp
and
xchg
in
shl
xchg
pushf
dec
data16
push
loop
imul
les
roll
rorb
add
imul
xor
adc
test
and
mov
cmp
xor
ljmp
or
pop
add
icebp
mov
mov
push
fisubl
add
sub
add
xchg
adc
test
xchg
jge
dec
inc
clc
shll
and
jecxz
xor
lret
repz
pusha
divl
jmp
test
and
out
outsb
jecxz
mov
cwtl
test
push
lret
xor
shlb
test
cmp
mov
xchg
mov
mov
bound
out
ds
loopne
jge
inc
pop
xchg
push
out
push
sarl
ja
add
add
or
fisubrs
cmp
xor
mov
or
icebp
cwtl
add
inc
sti
in
sbb
mov
or
sbb
in
mov
loop
adc
popf
mov
in
inc
xor
sub
aaa
cmpsb
fs
lcall
fwait
shlb
push
push
stos
bound
data16
std
cmpb
fdivrl
pop
lods
mov
dec
add
xchg
movsl
in
ljmp
add
xor
sbb
pop
mov
lret
pop
add
jns
push
mov
enter
jnp
sub
mov
mov
jae
jns
lds
xchg
neg
movsl
sub
pop
testb
push
xor
movsb
ret
mov
fisttpll
mov
into
scas
xlat
sub
jnp
js
aam
sub
movsb
inc
adcl
lea
pushf
xor
adc
test
mov
ss
lret
add
jp
lahf
cmpsl
mov
pop
icebp
aas
add
xchg
inc
inc
das
out
lods
addr16
mov
xor
fs
mov
mov
ss
cmp
and
popf
or
test
arpl
mov
add
or
outsb
mov
out
pop
cmp
dec
push
xchg
mov
fnstsw
lods
mov
pop
sbb
je
cmp
lds
movsb
ss
sti
add
push
jg
mov
bndstx
stc
mov
adc
iret
sbb
cmp
xor
into
andb
sbb
ret
mov
pop
dec
adc
ss
and
jle
jmp
mov
cmpsl
xor
aad
adc
pop
jns
mov
lret
std
inc
jbe
dec
xor
rorl
rorb
xchg
sub
addb
jecxz
and
mov
jge
hlt
push
add
fdivl
xor
lea
scas
cmp
cmp
dec
xchg
cmp
xchg
push
or
stos
cmp
dec
mov
pop
das
mov
lds
clc
ret
cmc
in
ret
stos
jmp
cwtl
or
aas
jb
adc
arpl
test
fimull
push
lcall
xor
jae
jg
int
push
push
cmc
stc
movsb
mov
jne
arpl
repnz
mov
loop
jb
adc
test
bound
and
repz
ja
xchg
pop
daa
jo
xor
cmp
scas
call
gs
arpl
mov
mov
cmp
pop
xorb
dec
in
push
push
pop
mov
cmpsl
xchg
sbb
mov
inc
lea
cmp
sbb
or
outsl
sahf
mov
xor
mov
pop
stos
hlt
mov
mov
mov
fsubl
xor
sarl
dec
cmp
dec
shlb
pop
mov
shl
cmpsb
push
sub
call
fistps
movsl
mov
xchg
sbb
mov
inc
jae
shl
and
pop
jp
push
push
int
mov
and
pop
fcom
sti
hlt
mov
sti
xchg
insb
jb
jl
rcrb
imul
adc
sbb
out
jne
out
mov
arpl
push
push
scas
aad
xor
ret
stc
ret
mov
inc
mov
pop
lret
mov
nop
mov
xchg
or
pop
dec
in
inc
aaa
pop
mov
int
sbb
pop
jle
mov
xchg
aas
cmpsl
stc
mov
jno
lds
or
cwtl
loope
push
jo
insl
xor
jmp
addr16
data16
pop
jnp
and
insb
adc
or
dec
data16
inc
cmpsb
pushl
inc
movsb
popa
popa
ret
sti
or
nop
lahf
cmp
loop
cmp
jp
jg
pushf
lock
ljmp
test
dec
imul
dec
or
cltd
shlb
jp
mov
subb
dec
cmc
mov
insb
adc
stos
fsubrl
mov
xchg
mul
cli
aam
xorl
adc
ja
or
xchg
add
into
jno
insl
pop
imul
in
aad
iret
ja
test
je
fnstcw
mov
push
imul
lret
mov
push
pop
dec
pop
je
jns
out
aam
dec
push
icebp
test
adc
fsubrs
inc
jp
ret
leave
icebp
jg
jmp
mov
push
mov
enter
jae
dec
pop
pop
shll
lea
xor
arpl
fwait
inc
popl
hlt
dec
scas
adc
sub
imul
movsl
cmp
pusha
lahf
xchg
cwtl
ja
sbb
dec
hlt
xlat
sarb
add
stc
pop
jno
fistps
dec
movsl
sub
cmp
inc
enter
ficomps
shll
inc
and
sub
aas
and
inc
dec
mov
sub
lret
inc
or
jp
or
sbb
fisttpl
jnp
fdivrp
pop
movsl
scas
sahf
cmc
jo
jle
pop
stos
dec
icebp
xor
cmpsb
push
loope
mov
fucom
xor
sbb
add
js
sbb
shll
jb
xchg
enter
mov
lret
sahf
add
test
xchg
push
xchg
xor
xchg
mov
and
ja
pop
cmpsb
scas
jecxz
push
sbb
jmp
test
repnz
xor
and
push
fmull
add
into
mov
daa
rcrb
ss
xor
adc
test
inc
mov
cs
pop
mov
fildl
pop
xchg
jecxz
int
data16
int3
aaa
jne
imull
lds
or
in
push
outsb
iret
and
fstpt
out
xchg
es
in
xlat
cli
mov
inc
popl
push
push
in
in
dec
mov
out
jb
scas
ss
sub
rol
add
pusha
jmp
push
dec
icebp
fdivr
leave
or
mov
push
dec
lds
sbb
dec
ss
xchg
out
mov
adc
outsb
hlt
pop
popf
neg
lcall
mov
pop
jl
xor
pop
test
leave
and
adc
push
adc
push
pop
and
xor
jl
and
mov
gs
xchg
xchg
lahf
push
jno
scas
adc
mov
mov
scas
and
xchg
jecxz
sub
mov
std
sub
mov
and
jb
mov
shl
mov
pop
and
mov
adc
dec
cmp
loope
loopne
sub
push
leave
add
mov
pop
imul
gs
mov
pop
and
pop
push
call
push
pop
xchg
jmp
ljmp
insl
jb
sub
jbe
push
or
leave
js
flds
add
cmpl
mov
xor
lret
lock
or
sub
imul
sbb
in
jge
add
and
pop
pop
std
int
insl
adcb
ja
adc
xor
repnz
test
aaa
mov
negb
insl
adcb
ds
dec
push
out
cltd
inc
mov
popl
repz
aaa
or
sub
imul
jg
popa
ret
pop
rorl
mov
push
pop
add
cmc
xchg
aad
or
mov
xor
pop
push
sub
lods
rcrb
lea
xor
rcll
mov
adc
test
lods
addr16
push
popa
mov
lcall
mov
ret
popl
adc
sub
jbe
icebp
ljmp
lds
xor
roll
xchg
xor
imul
push
xorl
jns
aaa
push
imul
scas
jg
ds
test
mov
pushl
ficoms
or
ja
out
push
aaa
mov
xor
push
xor
add
adc
mov
and
dec
int3
pop
jb
xchg
loopne
aas
dec
cmc
mov
xchg
jbe
inc
mov
test
push
popa
ljmp
mov
sbbl
dec
sub
adc
cli
mov
sub
movsl
push
push
int
bound
in
cmp
jge
fmull
test
xchg
xlat
cld
mov
insb
pop
jmp
std
or
push
in
out
icebp
data16
jmp
fdivs
adc
fidivs
leave
mov
stc
nopl
mov
jmp
in
inc
jmp
addr16
mov
lock
mov
sbb
test
or
addr16
pop
jg
addr16
lahf
cs
hlt
sbb
push
adc
mov
js
jge
lahf
dec
jae
loope
in
mov
cmp
or
daa
jo
push
lret
clc
scas
dec
adc
and
fldenv
sarl
and
fsubs
xor
dec
jae
or
jl
cli
xchg
jae
scas
push
ds
iret
outsb
imul
popl
mov
dec
out
push
and
sbb
decl
fs
dec
mov
push
cmp
xchg
mov
enter
sub
push
std
icebp
cwtl
cli
mov
push
dec
xchg
cmp
ja
jno
cltd
popa
cmpsb
xchg
xor
jecxz
sub
sbb
mov
imul
mov
dec
ljmp
dec
inc
lahf
xor
out
sub
cmp
sbb
xchg
jp
repnz
hlt
repnz
mov
xorb
sub
push
outsl
xchg
je
add
in
loope
es
xor
push
fwait
loopne
mov
cwtl
xchg
add
shll
mov
dec
das
ret
rorb
bswap
pop
stos
dec
decl
sti
subl
mov
sub
ror
repnz
sub
pop
mov
pop
sub
out
shl
leave
hlt
imul
data16
mov
loope
and
pop
sub
out
lods
fcoml
and
pop
lods
or
jg
sarb
jnp
mov
fisttpl
imull
lods
mov
mov
lods
push
pop
mov
jl
cmp
call
cltd
hlt
dec
or
lsl
push
jnp
subl
mov
aad
push
pop
xchg
fmull
aas
jmp
push
push
sbb
or
pusha
pop
mov
pushf
cmp
jbe
pop
sbb
cmc
dec
in
in
sbb
outsl
iret
adc
mov
mov
ret
test
addr16
and
je
fcmovu
nop
inc
lods
xor
pop
push
push
push
or
add
push
loope,pt
stos
pusha
xor
lret
push
in
jp
pusha
push
xchg
cmp
and
shlb
and
push
and
dec
fists
lret
in
xchg
mov
sub
rorl
fwait
aas
push
ret
pop
notb
push
testb
push
cs
adc
movsl
add
push
jp
fwait
lods
in
jp
dec
jp
mov
jle
mov
jae
xchg
mov
int
push
rclb
pop
jo
add
mov
loop
in
scas
or
sahf
stos
mov
scas
imul
ret
sbb
add
and
ljmp
sub
aam
int3
pop
push
inc
pushf
outsb
sub
ret
adc
lret
mov
cwtl
push
popa
sub
push
aas
je
rep
mov
leave
inc
arpl
lret
jl
jle
into
icebp
stos
in
dec
repz
loop
gs
sbb
jmp
iret
xchg
out
scas
ss
xchg
es
aaa
sbb
push
sti
lahf
push
lret
sbb
jmp
cmp
aas
xchg
or
mov
rcr
iret
sbb
cmp
lcall
nop
xor
adc
dec
vpaddusb
cld
mov
sub
push
push
std
loopne
pop
fimuls
lock
orl
out
lea
dec
xchg
leave
popf
pop
dec
cs
jb
test
xor
xor
fsubl
push
ss
andb
mov
addr16
mov
mov
int3
pop
sbb
dec
fidivl
in
sahf
push
stos
pop
mov
outsb
lcall
sub
inc
add
push
aas
mov
add
cs
scas
gs
movsl
test
nop
pop
insl
cmp
cltd
mov
rcll
push
sahf
jecxz
and
dec
add
push
jmp
xor
enter
iret
cwtl
sahf
mov
clc
shrl
adc
sbb
adc
hlt
xchg
jmp
mov
mov
int
dec
pop
icebp
mov
push
jb
and
pop
mov
std
test
jp
xchg
sti
loope
rolb
icebp
shlb
mov
je
jg
stos
je
test
js
ja
jae
test
push
and
call
add
shlb
nop
in
test
inc
mov
inc
pop
int
xor
data16
pop
jmp
lock
lock
pop
sbb
in
adc
cs
pop
sbb
push
adc
stos
mov
jg
out
adc
pop
sbb
sbb
loopne
arpl
jnp
xchg
mov
stc
cld
icebp
pop
test
dec
sub
or
orb
xchg
mov
mov
fistps
fnsave
xor
roll
xlat
or
xchg
mov
fyl2x
push
cmpsb
cli
dec
dec
jl
aad
cmp
mov
dec
xchg
loope
add
mov
pop
mov
std
roll
and
dec
jne
rolb
adc
loopne
outsl
inc
addr16
xor
sarb
addr16
mov
dec
cmp
std
lock
or
mov
xchg
cmpsl
nop
jnp
pop
add
xchg
dec
cwtl
xor
lea
sub
dec
inc
xor
xlat
xor
push
std
stos
push
outsl
fisubrl
or
xor
mov
inc
sarb
push
sbb
decl
je
jl
lock
enter
mov
cmp
hlt
sub
cld
les
jae
pop
cmp
hlt
jb
add
and
inc
popf
in
mov
adc
stos
mov
test
jo
insb
mov
and
xlat
js
sub
push
jbe
sti
pop
push
sbb
mov
and
pop
pop
bound
or
add
scas
nop
cmp
lock
lahf
scas
sbb
mov
push
rcrb
ja
loope
push
mov
mov
add
push
and
jae
call
mov
dec
pop
fisttps
or
iret
cmp
test
fs
mov
or
xor
inc
jmp
loope
in
inc
mov
gs
push
mov
mov
mov
or
lret
and
xor
or
dec
or
popf
and
dec
fcompl
ljmp
test
scas
imul
aam
loopne
arpl
pushf
fucomp
rcrb
test
mov
sub
ja
xchg
push
out
cltd
mov
daa
mov
add
sub
xchg
sub
hlt
push
jmp
call
std
sbb
loop
fs
insl
add
cmp
add
call
je
fcompl
repz
enter
jne
pmaddwd
fstl
ds
arpl
sub
iret
and
lcall
push
push
je
xchg
sbb
lock
in
inc
leave
test
mov
inc
cs
clc
aam
push
adc
outsb
nop
iret
jl
test
dec
imul
jmp
sahf
sahf
fcom
inc
pop
mov
fistl
inc
mov
push
gs
xlat
cmp
push
mov
cmp
mov
out
pop
lahf
adc
sbb
xor
add
hlt
sahf
cmp
and
sahf
subb
xchg
ret
cmp
dec
and
decl
inc
cltd
popa
in
or
mov
cmp
jae
xor
bound
sbb
mov
in
add
lods
fisubs
push
and
dec
xchg
insb
or
xchg
mov
outsl
arpl
in
cli
mov
cmpb
jg
ret
rcr
jae
fwait
repz
pop
xor
dec
dec
inc
loope
jbe
sbb
push
xchg
scas
ss
stos
fadd
dec
mov
inc
sbb
outsb
cmp
lea
or
push
jo
jg
dec
ja
imul
xchg
dec
call
out
test
idiv
xor
push
jp
mov
mov
adc
imul
cltd
mov
leave
sahf
fdivl
and
testl
xchg
xor
cmc
sub
and
inc
dec
sub
jbe
mov
jo
xchg
lods
mov
mov
in
push
xor
test
ljmp
addl
adc
adc
data16
shll
cmp
dec
lds
icebp
or
gs
jo
mov
push
push
sub
ja
dec
sbb
push
or
mov
ret
cmp
ljmp
push
lahf
inc
lret
adcl
sub
fldcw
es
push
pop
add
sbb
pop
jne
clc
dec
add
test
cmpl
insb
loopne
pop
hlt
aaa
jne
scas
inc
xchg
daa
out
hlt
icebp
in
pop
sbb
cmp
jb
jg
sub
cs
sbb
xor
std
jb
push
cmpsb
stos
mov
mov
pop
inc
movsl
outsb
fdivrl
data16
pop
sbb
jb
cmp
repz
push
cltd
sub
sbb
cs
push
aam
add
or
lock
or
or
push
mov
sub
arpl
add
aad
outsl
sbb
es
addr16
add
mov
jbe
leave
rorl
adc
je
mov
lret
lds
dec
jecxz
sbb
xchg
pop
in
add
push
loop
pop
or
xchg
pop
adc
or
mov
outsb
dec
or
gs
lock
outsb
pop
loopne
ljmp
fnsave
loope
aad
scas
cmp
leave
pop
imul
push
push
cs
loop
or
das
scas
jg
inc
popf
xor
mov
inc
insl
shlb
mov
xchg
pop
out
fnstcw
enter
add
pop
in
into
mov
cmp
rolb
imul
xchg
mov
xor
fxch
jno
aas
out
dec
lcall
mov
mov
dec
out
popa
mov
or
dec
cmpsb
jo
jmp
inc
lods
into
push
mov
mov
ds
mov
das
orl
inc
cwtl
jl
mov
loop
jp
and
push
out
push
mov
test
clc
xchg
mov
push
into
rol
push
and
aam
inc
adc
inc
cmpsl
lret
push
lret
test
pushf
push
icebp
scas
lcall
sbb
mov
mov
sbb
and
outsl
in
aaa
dec
jl
or
mov
rcll
jle
cli
ljmp
pop
pop
adc
mov
dec
mov
dec
aaa
mov
lret
int
adc
lock
jge
mov
xor
test
pusha
add
test
ss
lahf
sub
adc
sub
or
inc
xor
xchg
cmc
lock
push
mov
or
test
pushf
push
mov
xorb
cld
xchg
cli
ds
or
stos
insl
jp
inc
fidivrl
jmp
aad
mov
scas
icebp
scas
mov
mov
icebp
mov
loope
loopne
pushf
repz
pusha
mov
push
xchg
out
shr
pop
dec
mov
mov
fmul
pop
loopne
add
lret
loop
add
jnp
sub
lcall
nop
lahf
loope
xchg
icebp
mov
int
psubd
fwait
inc
stos
fmuls
stos
mov
sarb
add
cwtl
inc
mov
pop
enter
or
rol
ljmp
inc
movsl
inc
xchg
xor
lret
jbe
adc
int
in
inc
jmp
xor
jmp
in
aaa
push
ss
xchg
xlat
xlat
xchg
and
mov
lcall
