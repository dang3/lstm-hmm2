sbb
add
mov
xchg
jmp
add
outsb
daa
xchg
loopne
into
or
push
sbb
daa
mov
insb
mov
test
xlat
movsb
call
mull
cmp
mov
sbb
sbb
arpl
dec
test
popf
aad
or
mov
pop
xchg
and
es
jno
sbbb
sub
fstpl
pop
pop
ret
mov
test
and
in
mov
sub
out
mov
lea
mov
movsl
in
jecxz
jmp
fstpl
mov
mov
hlt
fsubl
rol
push
pushf
pop
mov
dec
popf
fstl
cltd
repnz
sub
popa
test
pop
sbb
fisubrs
jle,pn
sbb
daa
or
adc
mov
enter
cmp
pop
shlb
ja
cmp
sbb
xchg
inc
inc
xor
cs
dec
lcall
shrl
or
int
ss
scas
in
push
cltd
rolb
repz
repz
mov
repz
sbb
cmp
mov
push
lret
inc
mov
mov
int
movsb
loop
sbb
dec
adc
push
fidivs
pop
and
enter
fdivrl
icebp
jg
lock
and
inc
cmpsb
xor
shl
fiaddl
push
dec
mov
aas
jl
add
mov
inc
jo
jle
xor
fimull
shll
std
test
dec
xchg
jmp
fwait
adc
add
jnp
addr16
mov
xchg
mov
xorb
lret
cmpb
popf
mov
mov
addr16
inc
stos
popf
out
sub
in
cmp
and
jnp
into
int
push
sarl
mov
stos
xor
enter
bound
cmp
addb
xchg
cmc
pop
in
add
lret
jg
cltd
sub
jmp
or
cmp
test
sbb
inc
pop
lcall
lea
xchg
jb
push
lret
jmp
pop
sub
shl
and
dec
xor
dec
pop
inc
jno
fsubl
jle
cmc
xor
sbb
xchg
lret
cmp
inc
mov
lock
shl
mov
test
repz
or
xor
xor
mov
andb
fdivs
mov
bound
bound
and
cmc
icebp
loop
inc
jmp
mov
in
pop
jb
or
or
lahf
sbb
jnp
sbb
cmc
fsubl
insl
mov
dec
les
push
int
lahf
mov
mov
negb
out
mov
ds
pop
xchg
cmp
push
push
imul
xor
and
mov
xlat
sbb
xchg
aad
dec
sub
lea
gs
mov
js
clc
test
push
lcall
or
notb
inc
dec
xchg
int3
push
mov
rcrl
and
dec
hlt
mov
sbb
or
mov
dec
mov
lods
push
gs
loop
adc
iret
cltd
ja
sti
sbb
loope
xchg
test
inc
insb
lock
fxam
and
adc
jbe
xlat
sub
cmp
cwtl
cltd
jl
adc
arpl
in
mov
inc
pusha
xchg
push
jg
mov
in
repz
xor
fsts
add
cmp
add
pop
jmp
lcall
xchg
pop
loop
cmp
cs
sub
int
in
inc
or
add
push
xchg
stos
add
scas
mov
clc
sbbl
push
imull
adc
push
xor
mov
mov
jg
dec
dec
loope
push
leave
mov
push
fisttpll
les
inc
dec
bound
dec
cmp
mov
dec
int3
scas
add
out
xchg
mov
xchg
out
and
cmp
inc
mov
gs
xor
hlt
js
loope
iret
fldenv
cmc
jge
inc
lea
xchg
jmp
test
mov
pop
cmp
scas
test
dec
pop
or
dec
mov
sub
and
fwait
out
out
jmp
mov
lods
jecxz
dec
add
in
and
popa
ret
fbstp
aad
in
in
push
shll
test
sti
mov
adc
add
or
jle
jns
add
sbb
int
imul
hlt
stos
push
sbb
dec
cmp
pop
push
es
adc
and
cmp
inc
pop
and
xchg
imul
pop
inc
dec
sub
mov
add
cmpsl
jae
dec
add
adc
jae
dec
daa
cmp
push
lock
push
aam
jns
paddsb
mov
sbb
repnz
jnp
je
cmp
jecxz
fstl
jg
scas
adcb
xor
ja
dec
push
mov
lods
pusha
out
test
jae
and
mov
push
cltd
out
call
add
add
dec
mov
dec
or
xchg
adc
cmp
fldl
sbb
mov
jbe
xlat
loope
mov
push
inc
add
leave
iret
xor
ja
xor
orl
jne
inc
fwait
or
rcr
fstps
data16
or
inc
mov
ja
daa
push
repz
sbb
imul
lods
inc
xchg
push
mov
mov
xchg
jno
mov
clc
jecxz
inc
xor
jbe
jns
dec
sub
dec
xchg
sbb
repnz
jecxz
mov
sbbb
mov
test
out
add
dec
js
push
addl
ljmp
lds
push
orb
pusha
and
ds
xchg
xlat
pop
insb
or
sbb
and
out
fsubp
inc
popa
jmp
inc
pop
and
iret
inc
mov
rcr
dec
sbb
popf
pop
mov
addl
out
sub
pop
cmp
aam
xor
inc
mov
cld
push
mov
js
in
push
mov
jmp
push
xor
and
xor
lods
mov
aas
daa
adc
testb
fnstsw
aaa
sub
lea
cld
pop
out
aaa
out
xor
pop
shr
ret
enter
rolb
pop
bound
push
hlt
pusha
not
es
gs
aas
stos
or
mov
idiv
sbb
inc
out
cmp
mov
pop
negb
jns
xor
push
repz
lds
jmp
daa
pop
push
jns
jae
inc
add
adc
ja
xor
lret
mov
fiaddl
adc
xchg
or
insl
mov
mov
stos
inc
pusha
out
sbb
jnp
js
mov
adc
lds
xor
pop
rcrb
fwait
jl
push
dec
lret
mov
fs
insl
gs
pop
dec
lahf
xor
fadd
cmp
bound
iret
rolb
bound
dec
pop
mov
dec
cltd
in
aad
mov
repnz
pop
mov
ficoms
adc
add
imul
std
sub
sbb
sub
xchg
inc
push
mov
inc
arpl
out
or
add
ja
mov
out
dec
add
pop
dec
dec
push
lock
inc
or
mov
pop
decb
cmpsl
fcoml
mov
jle
jge
sbb
je
mov
sbb
push
bound
popa
mov
cmp
fbstp
ret
jl
jne
mov
pusha
push
mov
cwtl
xchg
mov
push
mov
aam
fnstenv
fimuls
cmpsb
icebp
push
outsl
inc
xchg
cmpsl
xor
jb
jle
jo
pop
mov
cmpsl
adc
cltd
pop
or
add
movsb
add
adc
mov
xor
mov
mov
aad
dec
push
xor
pop
xchg
std
iret
mov
lods
pop
mov
leave
sahf
add
mov
pop
cs
dec
mov
mov
in
cmp
push
test
mov
out
push
sub
add
aad
das
dec
push
jns
mov
push
imul
xchg
aaa
dec
in
lds
dec
inc
xor
notb
or
ret
push
aaa
dec
movsl
jbe
lret
pop
or
cld
into
push
ss
daa
push
fsubrp
rcrb
pop
add
jne
popa
mov
and
rcll
mov
jecxz
xchg
ss
inc
cmp
jnp
jecxz
cltd
add
and
cmp
pushf
shlb
and
outsb
test
fisubrs
into
cmp
adc
jmp
jnp
adc
imul
or
lds
das
mov
imul
sbb
inc
adc
mov
pusha
inc
adc
jge
test
adc
jle
out
sbbb
imul
and
fs
add
pop
out
push
dec
cmc
xchg
mov
sub
sarb
xor
jecxz
xchg
mov
push
cld
scas
dec
je
fdivrl
sbb
out
add
pushf
adc
pop
mov
sbb
pop
inc
call
popf
cmpsb
pop
jo
xchg
aam
inc
mov
ja
les
adc
jb
test
in
xchg
or
insb
pop
loop
mov
inc
lds
orb
xchg
lds
mov
sub
mov
sbbb
and
mov
popf
dec
jg
fisttpll
imul
fucom
stos
lret
pop
lock
leave
sbb
mov
cmc
xchg
sahf
mov
cmpsl
jnp
add
das
cmp
aam
jl
ja
jns
xlat
jge
ljmp
fmuls
xchg
loope
sarb
inc
mov
or
push
stos
mov
clc
sub
mov
scas
lea
lret
bound
or
outsb
or
or
adc
mov
jnp
faddl
add
mulb
adc
aam
mov
decb
fidivrs
iret
pop
push
arpl
jge
mov
pop
pop
rcl
lret
push
mov
addb
scas
scas
push
sarl
lock
sub
bound
dec
jecxz
rol
or
scas
popa
mov
or
stc
pop
fcmove
mov
add
lock
lea
cmp
scas
add
loop
std
sbb
pop
jo
cmpsl
or
cmp
sbb
repnz
int3
xor
xor
push
out
sbb
icebp
push
add
dec
cmp
test
push
insl
mov
mov
xchg
and
bound
iret
es
fs
sub
stc
or
ds
loopne
mov
cltd
and
jb
cmpsl
ret
dec
out
cmp
mov
aas
hlt
in
jecxz
jg
std
and
loopne
lods
nop
fcmove
jmp
xchg
mov
js
push
bound
lock
int
mov
add
stos
xchg
fisubs
in
cs
mov
mov
ror
fsts
push
or
dec
xchg
hlt
adc
sbb
lods
push
jle
addr16
js
pop
jle
cmp
xlat
cmpsb
add
rclb
cltd
clc
loope
mov
popa
repz
or
sub
aam
enter
inc
je
inc
test
fcmovnu
pop
rcrl
jl
sub
xor
inc
addr16
push
lea
iret
fmul
push
pusha
jge
ss
ret
mov
gs
dec
adc
add
addl
jg
shrb
push
push
push
mov
mov
sahf
fisubs
das
sbb
pop
aaa
xor
and
lods
mov
adc
dec
xor
aam
stos
cmp
push
mov
xchg
repz
addr16
data16
stos
mov
jae
pusha
lock
lods
cmp
mov
fistps
pop
das
pop
aas
sbb
xor
outsb
xchg
fidivs
aas
popf
xor
fldt
insl
or
loope
lahf
outsl
out
pop
inc
pop
icebp
test
cs
adc
dec
xchg
jp
pusha
ffreep
leave
cmpsl
jecxz
xchg
pop
xchg
dec
mov
fwait
mov
fistl
push
jbe
std
lea
movsl
dec
clc
mov
mov
cmpsb
js
jno
sub
test
jno
mov
dec
ja
mov
aaa
frstor
loop
test
mov
lods
ret
xchg
mov
cmpb
pop
sbb
shlb
jmp
popf
stos
hlt
popa
xchg
xor
mov
daa
dec
fnsave
jge
or
lods
adc
mov
mov
lahf
xor
rorb
fildl
pop
push
xor
sbb
cwtl
sahf
and
shrl
jge
pop
lret
adc
fwait
xchg
cmc
test
shrl
jg
and
xor
addb
or
bound
lods
jnp
fstps
repz
push
out
shrb
ds
sbb
cltd
inc
outsb
mov
movsl
adc
push
xchg
jmp
out
mov
mov
fsubrs
sarl
stos
jbe
lods
imul
shrb
xchg
aad
jp
xorl
xchg
ja
aaa
inc
add
mov
xchg
mov
int
jb
cltd
mov
popf
out
insl
push
movsl
dec
aas
lret
mov
out
cmpsl
mov
and
jmp
xlat
mov
imul
sub
mov
pop
xor
stos
mov
xor
shr
loope
sbb
loope
mov
inc
pop
cltd
cwtl
cmc
dec
pop
pusha
cmpsb
pop
stos
out
add
fwait
or
aas
hlt
inc
fs
jmp
lods
mov
push
and
sub
pushl
mov
dec
xchg
dec
pusha
xor
cwtl
adc
adc
jle
pop
cmp
or
inc
xchg
lret
inc
push
out
xchg
outsb
push
pop
mov
sbb
imul
aad
orb
in
cmp
add
sbb
push
cmp
push
mov
in
in
testl
mov
outsl
jbe
mov
or
mov
mov
insl
test
inc
xor
inc
into
xor
inc
in
enter
in
aad
cmp
sub
sbb
pop
aas
inc
pop
mov
into
gs
ret
cmp
pop
jmp
xchg
jmp
in
pop
nop
mov
fld
rol
mov
cmp
jp
or
jecxz
loopne
cltd
mov
int
shll
pop
add
xor
add
push
ret
stos
add
popa
push
cmp
imul
ja
dec
cmp
shlb
jmp
sbb
shlb
xchg
mov
lds
xor
jbe
sub
xor
pop
loopne
mov
inc
stos
adc
daa
sti
xlat
push
adc
push
jecxz
fildll
ret
mov
add
insl
xor
xchg
call
mov
cmp
jl
stos
adc
or
mulb
pop
ss
les
adc
inc
or
lock
lock
cmp
std
cmpb
std
roll
lods
sub
pop
div
sub
cmc
cld
hlt
dec
mov
idivb
pop
and
outsb
or
xor
lea
fildl
adc
push
in
jg
fnsetpm(287
int3
pop
in
repz
hlt
cmp
rdtsc
jns
inc
shl
xchg
cmp
or
pop
push
xchg
cmp
aas
dec
into
mov
mov
fnstsw
sub
mov
mov
popa
cmp
ret
pop
or
push
pop
shlb
sbb
les
ljmp
cmpsb
mov
movsl
imul
out
notl
sahf
cli
insb
push
sahf
outsl
or
and
adc
sti
and
jl
dec
mov
push
popf
scas
shrl
decl
cmpsl
into
std
push
pop
outsl
js
or
adc
mov
jae
mov
out
sub
imul
inc
iret
or
and
sbb
jle
inc
out
and
push
arpl
xchg
and
daa
mov
dec
pop
stos
inc
fsubrl
or
rorl
pushf
dec
cmp
push
and
out
or
add
xchg
lock
rorl
sbb
push
pop
ficompl
cvtpi2ps
into
pop
or
push
cltd
dec
pusha
push
hlt
dec
xlat
and
subl
push
dec
ja
loop
dec
clc
adc
push
jo
les
ja
push
and
sbb
cli
movsl
sti
lea
addr16
or
mov
and
lahf
int3
jo
mov
mov
pop
or
push
in
sbb
in
hlt
gs
lods
or
popa
ja
add
adc
scas
push
outsb
test
in
addr16
stc
repnz
xor
mov
outsl
and
stc
icebp
sbb
testl
rol
lods
lods
dec
push
cld
shll
cmp
mov
xor
pop
sti
test
scas
fdivl
ss
stos
aam
mov
dec
cmc
push
mov
xchg
pusha
out
jo
out
pop
jno
stc
sbb
into
fwait
daa
dec
xchg
pop
pop
daa
enter
xorb
mov
mov
push
inc
xor
aad
inc
adc
mov
leave
or
into
enter
lahf
jl
mov
jo
shlb
das
adc
and
aaa
add
dec
push
mov
pop
mov
into
rorl
bound
mov
pop
loope
push
sbb
ss
cmpsb
push
lds
cld
cmp
inc
jle
push
mov
in
pop
lcall
jno
mov
sbb
aad
dec
push
or
hlt
std
pop
add
and
dec
sbb
in
cmp
mov
cmp
push
cs
imul
repz
mov
lds
mov
fists
dec
fdivrl
inc
fcompl
movsl
cwtl
push
xchg
inc
pop
or
out
and
sub
pop
hlt
mov
fmul
imul
jnp
push
movsl
inc
jo
cwtl
lock
daa
adc
push
xchg
mov
rclb
mov
or
mull
push
mov
xor
add
xor
cmp
icebp
loop
pop
inc
xlat
ret
push
pop
dec
inc
mov
xchg
cmc
jle
in
push
shll
adc
xor
mov
lods
push
add
push
ljmp
shrl
inc
fsubrl
mov
lcall
sub
and
loope
aaa
addl
cwtl
jge
pop
inc
push
dec
jnp
fwait
neg
insl
jne
int
cwtl
subl
mov
dec
out
xchg
mov
adc
mov
dec
xchg
sbb
ret
adc
jns
jae
lds
push
push
push
lock
test
add
dec
sbb
test
sbb
mov
inc
xor
in
stc
inc
sbb
mov
sarb
fs
add
lods
lds
xor
in
cmp
sti
mov
inc
adc
dec
push
push
orl
sub
lods
add
pusha
inc
xorl
hlt
jp
iret
mul
les
and
ret
stos
sti
rcrl
pop
fldl
inc
and
ret
xchg
jno
outsb
adc
add
rclb
jne
mov
fs
or
xchg
xchg
xor
leave
xchg
fisttps
ficomps
push
sub
es
ror
push
jbe
lcall
dec
cmp
xchg
sub
popa
fdivp
lahf
pop
fcom
cwtl
xor
sbb
orb
clc
fimuls
sbb
clc
imul
cld
or
or
add
pop
sahf
lea
and
sub
mov
sub
les
xchg
xor
pop
fmull
and
xor
loope
xor
imul
mov
je
shl
lods
or
bound
xchg
arpl
lret
sbb
cwtl
push
ja
hlt
out
jecxz
inc
rorl
in
pop
decl
add
dec
in
mov
inc
into
sub
xor
lea
scas
inc
arpl
mov
mov
stos
push
lds
xchg
cwtl
jp
insl
daa
in
loop
push
push
and
repz
or
mov
fisubs
inc
loope
jecxz
sbb
jle
ljmp
iret
fwait
cwtl
inc
cmp
bound
stc
pushf
inc
pop
fistpl
andl
or
adc
aaa
adc
jl
sub
push
cltd
cmp
xchg
xor
pop
xor
ja
negb
sub
add
cmpsl
mov
into
stc
jl
push
push
sub
adc
mov
dec
stos
testb
scas
xchg
out
pushf
cmp
pop
jae
clc
and
sbb
outsl
in
sub
or
adc
out
jne
fstl
test
push
cwtl
xor
mov
notl
das
jecxz
data16
mov
pop
adc
arpl
or
jbe
addr16
xchg
ret
sub
outsl
mov
dec
jns
pusha
insb
lcall
xlat
insb
pop
dec
stc
imul
scas
pushf
lahf
sbb
test
sub
movsl
add
adc
inc
jle
loopne
or
shll
mov
adc
adc
dec
xchg
mov
mov
mov
xchg
lods
loope
mov
sbb
lds
testb
ds
cmp
jge
lret
jb
cmp
sbb
mov
mov
mov
pop
mov
je
mov
lock
cmp
icebp
xchg
mov
jbe
mov
lret
test
pop
and
sti
adc
dec
jle
mov
cmp
popf
hlt
mov
push
ficoml
inc
bnd
xchg
jp
add
add
xor
pusha
mov
ljmp
or
aaa
pop
std
jge
ret
in
addr16
lds
mov
cmc
jecxz
or
les
cltd
xchg
sarl
or
cmp
pop
cld
and
push
loopne
mov
mov
ret
arpl
or
mov
in
or
enter
gs
dec
pop
sahf
aaa
daa
pusha
testl
lds
test
fidivrl
adc
lcall
xchg
xchg
fsubs
ja
jnp
aas
jp
ret
or
sti
mov
hlt
push
pop
loopne
xchg
popa
cmpsl
jg
mov
call
hlt
je
lret
in
inc
jo
push
call
xor
arpl
leave
clc
data16
inc
sbb
jle
lds
sbb
std
push
dec
into
inc
sbb
rorl
xchg
cmovbe
sti
in
mov
and
adc
inc
lea
daa
mov
xlat
fbstp
xor
test
jne
mov
pop
and
pop
outsb
js
sar
fwait
xchg
insb
jo
or
mov
leave
push
lds
rcrl
mov
iret
cmp
nop
mov
cmc
insb
popa
insl
hlt
cmpl
xlat
outsl
mov
mov
movsb
bnd
cmp
push
xchg
pop
push
mov
dec
or
add
cmp
dec
xchg
sbb
push
mov
push
test
stos
inc
pop
js
lahf
jno
inc
mov
scas
in
lcall
out
mov
xchg
sub
sti
fdecstp
xor
lds
inc
or
pusha
push
jl
jg
lds
jno
pop
mov
xchg
mov
dec
ret
mov
mov
or
and
loopne
iret
sbb
adc
shr
jle
and
outsl
ss
or
xchg
cs
shrb
cmp
popa
jbe
fdiv
fcmovb
jmp
sub
pusha
mov
mov
pop
clc
pop
xchg
dec
mov
mov
mov
int
test
ret
cmpsl
lods
jae
mov
aad
jmp
mov
ror
xor
enter
xor
scas
xor
push
push
mov
mov
add
jge
mov
push
xchg
das
bound
jmp
aaa
in
aaa
pop
aaa
push
jge
push
lahf
stc
daa
out
push
mov
aaa
sbb
sbb
int3
sbb
loope
cmc
ja
cmc
cld
mov
xchg
cmp
jp
loope
arpl
xchg
or
loop
xlat
xor
lret
aas
ds
out
sti
lcall
aaa
mov
inc
jno
cmpsl
sahf
in
mov
inc
cpuid
ja
loope
hlt
mov
lahf
xor
pop
stc
int3
push
ljmp
lret
mov
and
inc
test
movl
data16
mov
mov
and
cmpb
mov
pop
mov
nop
repz
add
or
push
or
push
xchg
insl
add
mov
adc
in
fidivs
mov
jmp
stos
adc
push
flds
mov
arpl
ss
fisttpl
or
xchg
pop
lret
xchg
and
fisubrl
lretw
pop
pop
push
js
popa
pop
adc
mov
xor
jge
dec
nop
mov
mov
ja
and
jae
and
sub
mov
and
mov
leave
add
pop
cmp
negl
les
imul
cmpsl
push
add
stc
jl
lret
mov
ja
leave
pop
or
cmp
add
gs
lcall
rorl
xchg
pop
test
sbb
cmp
cld
test
pop
fbstp
pop
inc
outsb
pop
push
scas
rcrb
fnstcw
adc
or
sbb
push
mov
paddb
in
jecxz
out
lret
lret
icebp
outsl
or
bound
push
adc
push
lods
xchg
int
out
insb
xchg
or
pop
js
or
pop
movsb
mov
pop
popa
mov
and
inc
add
sub
mov
xchg
jge
mov
mov
cwtl
in
sahf
sbb
sub
fdivp
xor
push
jae
and
clc
test
sahf
xor
mov
mov
in
ret
and
cli
testl
testb
lcall
push
cmpsb
pop
jbe
inc
stos
or
sub
into
sbbl
int
inc
mov
sub
or
cmp
into
lahf
mov
xchg
icebp
and
lods
inc
shlb
push
dec
sbb
stos
sub
xor
addr16
sub
pop
leave
sbb
sbb
or
pop
mov
icebp
imul
xchg
scas
out
mov
sub
pop
out
arpl
mov
pop
lods
addr16
fidivrl
xchg
rclb
sub
dec
rorl
arpl
in
pop
inc
mov
fisubrl
loope
xor
dec
sbb
lret
fdecstp
inc
scas
lods
es
cld
sbb
and
lahf
mov
mov
jbe
mov
stc
sub
aaa
call
mov
imulb
lods
test
cli
out
xchg
sbb
imul
aad
sub
mov
imul
and
and
rcl
pop
rclb
jnp
jne
imul
pop
add
fildll
cli
repnz
dec
je
lea
ljmp
shlb
shlb
ffreep
hlt
adc
sbb
cmp
cmpsb
bound
jp
mov
es
inc
shrb
aas
lahf
ds
mov
pop
scas
sub
loope
or
xor
mov
das
xor
sub
mov
jge
jae
ljmp
cmpsl
cld
cmc
xor
out
imul
xchg
push
outsb
pop
cmp
shll
enter
aas
in
rolb
in
lds
adc
jecxz
mov
out
lret
mov
js
rcl
loop
sub
mov
xchg
push
std
mov
pushf
jo
fimull
add
out
ds
cmp
mov
in
mov
cmpsb
or
jae
cwtl
aaa
pop
mov
jecxz
inc
popa
cwtl
jo
xchg
orl
mov
mov
add
add
rorl
shr
cli
push
das
or
mov
or
and
cmp
fwait
mov
data16
xor
sub
mov
scas
adc
das
lods
pop
dec
jbe
xchg
add
sub
or
xchg
mov
popa
xchg
aas
rcrl
add
adc
mov
test
xchg
fst
pop
push
pop
and
jmp
sbb
adc
stos
inc
xor
sbb
test
inc
icebp
pop
push
imul
xchg
adc
pop
imul
stos
rorl
adc
mov
adc
mov
inc
xor
rorl
dec
mov
jb
adc
inc
in
addr16
xchg
js
cmpb
mov
xchg
mov
push
or
add
adc
add
xchg
dec
xchg
push
mov
jg
mov
mov
mov
adc
outsl
loope
pop
or
ror
ja
pop
pop
sbb
push
clc
stos
xchg
pop
pop
fiaddl
and
sbb
loopne
test
mov
pop
mov
pop
mov
andb
adc
sub
mov
fdivrs
xlat
out
mov
lods
rorb
inc
push
icebp
jno
push
push
xchg
push
mov
mov
ljmp
loop
push
mov
fldl
or
or
insb
mov
std
xor
sub
sahf
pop
out
dec
lock
inc
pushl
cli
push
push
inc
sti
cmpsl
js
sub
jmp
pop
xchg
lods
lods
mov
dec
sbb
push
sbb
fdivrl
mov
aam
mov
stos
out
loopne
movsl
pop
mov
cmpsl
or
cmpsl
and
inc
pusha
cmpsl
repz
gs
out
push
clc
pop
xlat
push
shlb
cmp
outsl
jae
mov
cmp
ret
shlb
cltd
std
mov
jg
es
push
push
test
inc
push
push
cmp
sbb
stos
ljmp
call
ljmp
or
adc
xchg
xlat
ljmp
add
mov
in
cmpl
js
clc
mov
scas
mov
sub
jl
out
cmp
push
cwtl
movsl
dec
jecxz
or
out
lret
cmp
inc
fldt
mov
pop
cmp
mov
sbb
lret
sub
adc
adc
push
jge
inc
cmpsb
add
push
ds
iret
mov
aad
fistl
in
sbb
pop
data16
inc
inc
sbb
pop
in
outsb
lock
mov
jle
loopne
push
popf
or
xchg
repz
lea
pop
cmp
pop
inc
je
cmp
fbstp
push
aaa
pop
jbe
imul
stos
lcall
fs
mov
dec
into
fsubs
clc
cmpsl
sub
sbb
pushl
fwait
sub
pop
mov
sbbl
mov
adc
loopne
mov
iret
adc
daa
or
adc
stos
cmpb
xchg
in
lcall
aam
cmp
jns
scas
gs
in
mov
and
loope
dec
jmp
and
out
js
bound
jge
push
sahf
or
insl
push
or
ljmp
or
loop
out
push
inc
inc
sbb
test
xor
icebp
inc
test
inc
cs
adc
fiaddl
ljmp
mov
fcoms
inc
jge
leave
icebp
pushf
xchg
fnsave
push
pop
adc
xlat
js
push
or
and
insb
mov
sub
xchg
cmp
js
out
pop
push
push
push
and
sbb
jecxz
push
dec
cmp
sbb
xlat
adc
add
ljmp
xor
cmp
xchg
jecxz
mov
push
cmp
mov
movsb
insl
or
push
cmp
lods
jns
in
jp
or
dec
je
scas
mov
outsl
mov
into
push
out
xchg
loop
lcall
push
mov
cmp
aam
sbb
or
jle
bound
add
incl
in
int3
adc
push
icebp
sbb
gs
push
popf
push
out
int3
cmc
aad
xor
dec
out
mov
ret
xchg
andl
cmp
inc
repz
xor
cs
sahf
xor
aad
lock
js
loope
imul
in
mov
add
paddd
xchg
cwtl
mov
fsub
push
xor
inc
jecxz
rol
fmull
add
or
pusha
out
push
dec
popf
sub
inc
subl
mov
push
cs
outsb
push
push
fldcw
mov
fiaddl
mov
les
or
or
mov
inc
dec
leave
ds
xor
add
add
ss
and
push
xchg
je
scas
sub
inc
sahf
fldenv
dec
shrl
and
xchg
add
add
idivl
cmp
jp
insl
xchg
out
cmp
xor
xor
insl
lods
add
into
pop
xor
in
repz
sbb
pop
xor
sbb
adc
fs
insl
jo
mov
cli
sti
aad
fisubrs
pop
negl
ret
mov
popa
sbb
daa
mov
ja
sar
ret
add
xchg
jb
and
pop
mov
sub
stos
fmuls
js
dec
lods
cmpsb
xchg
xchg
icebp
jo
adc
mov
xchg
jb
sarl
mov
jno
mov
aaa
push
test
outsb
jbe
repz
jmp
sub
int3
pop
inc
or
enter
int3
jnp
cmpsl
inc
cmp
mov
aam
fadds
in
inc
daa
lock
adc
add
ljmp
mov
push
fs
xchg
cmp
jp
mov
jne
add
fwait
mov
jb
inc
or
into
or
sahf
or
dec
cmp
lods
pop
push
ret
mov
std
pop
lret
mov
push
adc
jp
cltd
inc
lods
sbb
loop
jnp
adc
lret
xchg
cmpsl
mov
je
push
in
rclb
xchg
add
push
and
jecxz
or
clc
pop
mov
ja
sub
mov
loop
filds
jecxz
gs
xor
xchg
adc
aas
les
loope
lret
cmpsl
fwait
or
xchg
xor
sbb
mov
mov
rclb
sbb
mov
mov
fidivl
mov
stos
or
test
add
dec
rorb
adc
push
out
jl
clc
sub
in
pop
or
pop
mov
in
cmp
in
sbb
fs
sahf
notl
ficoms
xchg
fsubs
add
cmp
xchg
mov
mov
and
test
jne
out
fsubrs
rcr
dec
jmp
out
mov
movsl
inc
pop
sbb
or
sbb
mov
and
sub
ret
popa
aam
inc
mov
invd
or
jecxz
inc
rorl
mov
and
xorl
shll
pop
or
pop
push
pushf
decb
cli
adc
pop
jle
mov
inc
inc
dec
jge
push
cmp
js
mov
pop
nop
idivb
ja
loopne
lahf
sub
and
stos
cmpsb
inc
out
or
and
fidivl
and
mov
xor
jne
xchg
insl
in
mov
ja
dec
cltd
pushf
inc
dec
jecxz
pop
push
mov
xchg
dec
mov
repz
xor
sbb
dec
jo
pop
push
lock
pop
xchg
cwtl
jge
xchg
xchg
xchg
xorb
inc
loope
xor
das
imul
cwtl
cmpsb
xchg
imul
idivl
add
dec
rorl
mov
test
cmp
outsl
cmp
sbb
dec
fs
adc
fdivs
xchg
outsb
push
mov
aas
scas
rorb
rolb
mov
or
in
adc
rcll
add
jbe
mov
shlb
mov
popf
fsubl
sahf
push
outsl
inc
mov
adc
and
shl
mov
iret
mov
in
push
adcl
lret
or
push
repnz
push
cmp
fwait
mov
jmp
out
js
xchg
mov
in
add
rclb
lret
out
addr16
mov
dec
arpl
mov
aam
loopne
cmp
ret
sub
leave
mov
jmp
dec
daa
jb
xchg
sbb
out
das
pop
xchg
sub
inc
mov
mov
aaa
inc
dec
mov
lgs
stos
arpl
cmpl
int3
push
dec
inc
jmp
aam
and
and
mov
imul
add
pop
adc
subb
mov
push
in
hlt
icebp
hlt
mov
nop
pop
mov
stos
add
dec
into
fcmove
mov
add
ds
int3
sarb
push
pusha
inc
jle
es
int
mov
stos
ja
add
loope
or
cmp
push
and
out
scas
jl
cmp
pop
push
cli
insb
mov
add
push
lahf
xchg
iret
jne
sbb
fldenv
mov
cltd
ss
test
lods
sub
xchg
push
pop
je
jbe
push
cmp
mov
jecxz
aas
int3
pusha
cmp
jo
mov
xor
subb
sbb
dec
and
or
mov
adc
push
dec
jp
jmp
shl
pop
shlb
jg
popf
or
cld
pop
outsb
xchg
push
mov
add
in
or
int3
inc
and
xchg
pop
xchg
add
sbb
xchg
les
adc
push
add
cmp
inc
mov
pxor
sbb
notl
pop
lds
cmpsl
leave
pop
roll
cmp
int
call
maxps
mov
add
or
lcall
and
and
add
ret
push
dec
imul
pop
xor
sbbb
cmc
jecxz
mov
adc
fistps
pusha
gs
sub
lret
leave
xchg
cmp
push
inc
je
jmp
pop
xor
pushf
jbe
ret
mov
and
mov
fs
mov
mov
push
xor
stc
inc
ffreep
aas
stc
cmpsb
mov
in
pop
addr16
call
nop
test
mov
ja
pop
bound
jne
inc
inc
fdivs
ret
stos
in
repnz
mov
js
mov
ret
xchg
xchg
cmpsl
or
pushf
mov
inc
or
leave
rcrb
ret
into
sahf
cmpsb
stc
cmpsl
jnp
in
out
ss
xchg
imul
addr16
in
or
inc
sbb
enter
mov
push
inc
mov
repz
movsb
add
mov
mov
jl
sub
dec
cli
or
cs
dec
mov
cmp
dec
jg
cli
lods
pop
dec
pop
pop
xlat
cmp
or
fsubr
sbb
sahf
das
cli
push
mov
sub
int3
pop
push
adc
mov
out
inc
inc
pusha
mov
test
icebp
shrb
aad
sub
adc
daa
and
insl
into
and
cmp
xchg
xor
shl
flds
jl
insb
test
xor
inc
jle
test
dec
sub
cli
inc
xchg
xchg
fiadds
push
fcoms
sbb
add
enter
ja
rolb
ds
jns
clc
mov
repz
clc
stc
or
add
mov
adc
cmpsl
dec
ljmp
xchg
sub
dec
aam
mov
jne
stc
cld
inc
jl
xchg
in
popa
mov
or
shlb
sub
mov
xchg
ljmp
fcom
inc
sbb
test
xchg
or
lock
add
cli
add
pushf
lock
subl
les
lock
inc
out
fnstenv
jne
mov
decb
dec
leave
pop
mov
adcb
testl
incl
sub
fidivl
out
jmp
sti
jmp
mov
xor
jne
dec
xchg
fsub
add
or
cmp
xlat
xchg
dec
jne
cs
sub
addl
shlb
or
jb
mov
movsl
and
orl
jnp
scas
sbb
jl
pop
sub
out
cmp
out
or
sub
push
or
jge
xchg
int
arpl
dec
loopne
pop
xor
inc
pop
cmp
push
jno
adc
or
imul
jo
and
jl
pop
mov
push
dec
cmp
bswap
andb
jle
xor
mov
pop
pop
sbb
pushf
and
in
or
dec
xor
add
ret
mov
rorb
scas
xor
push
lret
out
jno
int
dec
xchg
jle
movsw
push
adc
mov
xchg
xchg
xor
repnz
mov
cmp
jno
rcl
cs
imul
mov
je
or
pusha
xor
daa
scas
dec
mov
inc
imul
test
popw
test
loopne
ret
cmp
cli
xor
add
fcomi
lret
add
mov
test
loop
dec
mov
and
push
mov
jle
xchg
cld
or
cmc
pop
pop
in
xchg
mov
xchg
fsts
inc
cmp
mov
add
sbb
xchg
add
pop
std
jmp
inc
or
pop
mov
pop
jmp
test
ss
and
cmp
shll
fwait
adc
inc
dec
jmp
cs
test
jecxz
pop
jl
adc
xor
fwait
ss
ds
xchg
test
adc
push
es
lods
in
ja
xor
fwait
xor
js
movsl
bswap
stos
aaa
arpl
les
mov
cmpsb
xchg
rcrb
cmp
push
lret
aas
mov
xchg
fcompp
dec
bound
sub
lods
div
sarb
rclb
xor
insl
inc
out
loop
ja
jp
popa
sahf
lcall
mov
mov
mov
sub
push
push
push
add
in
call
dec
fcompl
into
jl
ja
mov
push
pop
and
loop
mov
divl
outsl
aad
and
movl
or
mov
add
loopne
scas
dec
push
stos
add
je
movsl
lds
mov
inc
dec
dec
std
in
mov
and
dec
cmpsb
push
pop
rcrl
sti
neg
mov
cli
fldt
xchg
cmc
loopne
jb
jnp
scas
in
adc
cmc
in
xor
adc
mov
out
in
jle
scas
fs
leave
xchg
insb
in
cmp
sbb
jl
pop
int3
mov
jge
adc
fidivl
insb
sbb
xchg
aam
ret
jge
cmp
fwait
inc
jg
outsb
scas
adc
pop
add
aas
cmc
fwait
and
cmp
out
add
inc
mov
push
jae
sbb
jnp
xchg
jg
sti
sahf
xor
vmovddup
cmp
hlt
pushf
decl
pop
je
xor
pusha
mov
sbb
popf
addr16
fs
in
sar
xor
adc
xor
pop
xchg
xchg
and
lea
pop
xchg
or
shll
ds
test
sti
add
sbb
fmulp
out
push
lds
icebp
out
push
xchg
aam
loope
aam
sti
in
cmp
and
cmp
pop
movsb
or
adc
adc
xor
jge
scas
arpl
lock
in
dec
xchg
jp
cs
hlt
cld
lret
loopne
sti
shll
mov
and
dec
and
mov
imul
ficomps
pusha
jo
adc
movsl
imul
shll
dec
ret
mov
cmp
and
jg
dec
xor
and
xchg
push
fs
xlat
sub
xlat
inc
lret
out
repz
or
nop
rorl
mov
ret
adc
dec
vcvtss2si
loopne
sbb
nop
jns
lock
cmp
loopne
xchg
shl
sub
addr16
pop
push
mov
cmp
jg
mov
and
mov
bound
clc
jecxz
mov
push
gs
movsb
pop
cs
push
pop
aam
mov
cmpsl
inc
popa
adc
jne
faddl
mov
cmp
daa
or
push
imul
filds
xlat
xor
out
aas
test
test
pop
movl
test
and
ret
sub
cltd
subb
ds
inc
sbb
das
je
scas
gs
aam
loop
dec
or
push
adc
fistpll
mov
fs
jl
and
sbb
hlt
pushf
and
jp
arpl
cli
xchg
xchg
aas
xor
add
cmpsb
dec
push
lea
jecxz
add
cs
insl
out
xlat
mov
add
sub
ss
xlat
repz
out
ja
pusha
test
and
adc
jae
cmp
lcall
ljmp
dec
cli
mov
decl
adc
xor
pop
xchg
mov
ret
jns
fists
das
cmp
sub
scas
add
lcall
dec
lahf
adc
push
stos
ret
mov
pop
adc
mov
fsts
jg
mov
out
xor
ja
xchg
js
andl
pop
shlb
push
jmp
pop
repz
mov
fdivs
cmpsb
sub
dec
inc
dec
dec
push
pop
mov
test
xor
fiaddl
es
dec
sub
ja
sub
mov
out
pop
push
or
add
ret
repnz
push
xchg
leave
clc
stos
into
adc
in
dec
fucomip
js
outsl
imul
in
or
or
mov
stos
xchg
jae
sbb
fucom
loope
mov
inc
shrl
inc
mov
mov
hlt
lds
out
mov
sbb
into
pop
ficompl
adc
adc
cmc
nop
popa
jne
adc
outsb
mov
push
mov
nop
dec
lds
cmp
vpcmpgtw
lods
stos
fs
arpl
xor
fs
mov
and
in
ja
and
xchg
or
roll
push
gs
push
xor
mov
jbe
ret
dec
pop
jp
adc
xorb
dec
lock
sbb
jl
or
movsb
mov
jae
das
jns
mov
push
adc
mov
not
es
pop
push
adc
cld
leave
movsl
dec
dec
mov
sub
fildll
pop
mov
loop
mov
push
js
jge
push
fsub
lret
jg
imul
mov
dec
add
add
add
lret
pop
mov
push
dec
mov
jg
rorl
jg
adc
aas
mov
xchg
dec
push
xor
xor
pop
mov
imul
dec
sti
aad
test
and
cltd
mov
inc
fisubrs
xchg
sbb
ret
sub
and
mov
add
adc
addr16
sub
cmp
dec
std
add
outsb
std
inc
mov
mov
mov
mov
in
mov
inc
pop
ljmp
repz
adc
mov
rcrl
or
push
xor
xor
clc
lret
fnstcw
shlb
xor
fidivrs
push
adc
sti
and
sbb
fbstp
push
xor
call
fs
fsts
in
imul
cmp
aad
xor
test
das
imul
push
mov
movsb
cmp
and
jp
push
inc
shlb
fstp
mov
fiadds
or
xchg
enter
xchg
into
mov
aaa
shl
xor
mov
and
mov
sub
movl
leave
inc
and
xchg
out
xchg
or
clc
pop
std
sbb
add
xchg
dec
out
notl
dec
push
add
adc
cmp
cmp
push
lahf
stc
fldcw
pop
mov
xor
std
add
inc
jns
xchg
fildll
or
and
xor
fiaddl
cmp
push
loope
call
mov
cmc
js
ficomps
stc
jno
bound
jmp
sub
inc
cs
inc
flds
cmp
xor
jno
jns
xor
fs
daa
aas
int
stc
inc
lret
lret
cld
cmc
test
xlat
mov
push
imul
int
ljmp
addb
mov
push
fldcw
call
cmp
enter
jno
jbe
ss
rorb
jge
rolb
cmp
bound
pop
and
arpl
and
or
xor
or
xor
or
cmpsb
rcll
aam
cwtl
lret
adc
shrb
stos
aad
scas
pushf
cmpsl
or
fadds
mov
decb
jne
and
data16
push
imul
ljmp
data16
mov
adc
icebp
pop
cwtl
mov
dec
cmp
jle
inc
adc
or
mov
sbb
inc
mov
dec
inc
sahf
repnz
jns
sub
lock
mov
mov
ljmp
sbbl
repz
cmp
mov
xor
pop
jbe
shlb
cmp
and
cmp
ljmp
daa
push
sbb
sbb
popf
sub
jbe
push
cwtl
ljmp
data16
out
push
mov
jmp
push
outsb
loopne
adc
je
jno
push
call
das
mov
xchg
push
mov
mov
inc
or
push
pop
cmpsl
stos
mov
sarb
xor
add
arpl
mov
pop
xchg
add
mov
lds
and
push
into
push
push
inc
add
cltd
push
xorl
pusha
lcall
push
in
imul
sbb
in
xor
fmul
xor
mov
scas
call
sbb
fsts
add
dec
je
lea
jbe
adc
adc
ljmp
xor
fwait
div
push
sbb
push
cmp
das
ja
out
sbb
sbb
push
mov
shrb
push
pop
pop
cltd
mov
and
movsb
mov
loope
xchg
shl
in
cmc
xlat
and
mov
cmp
pop
cld
mov
jp
insl
xor
xchg
sbb
sub
sbb
iret
pop
loopne
mov
cmp
sub
lahf
add
addr16
in
ja
pop
notb
mov
push
add
test
cmc
or
jae
add
popa
call
mov
adc
pcmpgtd
and
ds
fcmovb
fldenv
ret
sub
leave
sub
pop
rcrb
mov
mov
dec
sar
dec
pushf
jnp
mov
xor
arpl
or
jno
out
in
xchg
test
das
addb
dec
push
popf
adc
or
fbld
cmp
mov
das
sar
xor
push
dec
lods
mov
sbb
aas
loop
mov
cmp
sarl
dec
adc
xchg
jns
shrb
insl
pop
lret
push
push
lcall
shrl
test
pop
insl
and
inc
ret
aad
fsubr
add
decl
call
arpl
andl
insb
push
jecxz
pusha
lcall
pop
push
fldenv
and
xor
lds
ja
int
insb
xlat
jns
imul
sti
mov
aam
inc
and
dec
fldenv
outsb
xchg
xchg
repz
fdivrl
fldt
push
dec
sub
sub
sbb
push
push
mov
cld
stos
xor
dec
into
xor
popa
jo
mov
mov
mov
adc
mov
xchg
pop
jns
jmp
ja
sbb
mov
add
fstps
push
lea
sbb
fidivrs
sub
nop
fstl
scas
outsl
pop
sbb
arpl
sbb
and
addr16
push
lahf
movsb
cli
lcall
xchg
adc
imul
sbb
cld
outsl
push
jmp
mov
scas
hlt
in
sub
call
pop
push
pop
sahf
insl
clc
xadd
jbe
inc
cmp
sbb
cmpsl
xchg
aad
pushf
xor
ja
movsb
in
sub
cltd
sub
inc
inc
mov
lods
sbb
push
and
or
pop
in
mov
adcl
pop
aaa
add
ret
negl
ja
ja
cmc
mov
xchg
out
insb
aam
mov
inc
jns
jmp
xchg
and
cmp
and
push
lea
sub
in
insb
cs
in
or
inc
jle
sti
cmp
ljmp
fs
les
inc
xchg
mov
int3
ror
cmc
pop
jns
ds
jns
out
lret
sti
inc
je
mov
jge
int3
add
mov
push
mov
mov
pop
push
in
pop
sbb
mov
inc
ljmp
cltd
pop
xchg
insl
inc
xorb
mov
xchg
fstl
xchg
or
jg
xor
ret
mov
jecxz
loopne
or
cmp
add
loop
jg
imul
or
xchg
aas
jmp
sub
rcrb
add
sub
jb
jl
ret
pop
leave
inc
push
fdivl
mov
mov
inc
push
imul
lds
mov
mov
mov
push
cmp
dec
js
lods
notb
into
addr16
add
push
jo
mov
jge
rorl
rcrb
cmp
lret
push
imul
push
pop
pop
fbstp
scas
mov
insb
mov
dec
sbb
dec
dec
dec
repnz
mov
aaa
rclb
dec
in
dec
cli
pusha
popf
hlt
sti
sub
sub
jbe
adc
fcmovb
jp
push
jnp
push
xor
mov
pop
xchg
mov
lods
shlb
sbb
jb
and
xlat
call
mov
mov
mov
cmp
push
adc
test
add
or
or
inc
adc
les
cmp
xor
and
popa
imull
xchg
loop
mov
mov
sbb
faddl
xor
mov
inc
mov
add
inc
sti
into
mov
stos
das
pushf
popf
test
mov
sbb
stc
test
std
push
jne
imul
lret
and
stos
lret
sbb
sub
idiv
dec
or
inc
testl
popa
xor
das
popa
lds
jecxz
add
sti
insb
in
popf
dec
dec
xor
std
hlt
xor
in
sbb
inc
xchg
push
jo
stos
push
and
xor
jo
sub
fistpl
fsub
icebp
out
ret
sahf
jl
enter
or
fdiv
into
jne
ret
fcomip
cmc
jmp
shll
stc
sbb
roll
xor
jmp
cmp
cmp
and
sbbb
sti
mov
bound
dec
push
pusha
or
in
hlt
pop
popf
dec
lock
fsubr
into
mov
les
pop
movsb
cmp
inc
xchg
popf
add
sub
inc
mov
shrl
push
adc
daa
mov
cli
fisubl
popf
out
jl
inc
sub
ss
dec
mov
push
ret
jl
stos
repz
movsl
arpl
faddp
scas
decl
in
shlb
adc
xlat
in
leave
dec
adc
cld
les
je
orl
mov
and
mov
stc
push
clc
enter
ret
xchg
out
mov
imull
mov
fisttps
cmpl
sti
fwait
das
push
or
mov
pop
mov
in
xchg
xor
sub
cmp
mov
ds
adc
mov
fimuls
mov
hlt
nop
add
in
repz
cmp
ret
outsb
dec
sub
shll
lcall
inc
aaa
lds
fstl
jmp
push
mov
mov
clc
pop
inc
fsubrs
loope
repz
out
sbb
jge
cwtl
xchg
push
jp
stos
in
rcr
sahf
mov
sbb
dec
jne
jne
in
pop
mov
pop
fdivl
xchg
enter
or
and
cmp
push
lods
lcall
inc
push
xor
jns
dec
sti
push
cmp
jne
arpl
adc
sub
daa
and
stos
outsl
mov
cld
and
or
stos
adc
test
xor
xchg
mov
dec
and
cmpsl
pusha
mov
sbb
xchg
lods
je
push
ss
sarl
scas
adc
and
mov
loop
adc
and
sbb
cld
jb
ljmp
arpl
xchg
jno
outsl
cmpsb
mov
mov
lret
xor
mov
or
pop
xchg
test
sbb
sub
push
xor
hlt
mov
mov
test
aaa
imul
or
xor
out
pslld
roll
pop
rcrb
adc
into
inc
mov
rorb
jg
xor
rcll
ljmp
add
adc
cwtl
scas
push
cmp
aaa
push
jmp
stos
repnz
mov
loopne
gs
clc
stc
xchg
daa
dec
shrb
xlat
xchg
mov
sub
imul
and
mov
rsqrtps
nop
ds
mov
rorb
sti
loope
jge
lds
sbb
call
out
cmp
sbb
xor
mov
xchg
in
movsb
and
cmp
jns
mov
sub
mov
movsb
jg
xor
in
pop
sub
mov
loop
sbb
mov
mov
dec
ds
push
scas
mov
in
mov
mov
dec
out
push
in
mov
cmp
in
test
xor
rclb
and
shl
cmp
ljmp
imul
jle
aas
lcall
and
stc
and
aam
xchg
mov
adc
mov
fcompl
mov
mov
dec
lahf
inc
dec
lock
push
xchg
push
cmp
adc
push
mov
cmpsb
out
loop
mov
cmp
cmp
adc
add
mov
add
clc
imul
in
enter
fldt
push
lahf
in
mov
gs
push
jo
decl
adc
sub
mov
push
xchg
cmp
mov
out
mov
clc
test
mov
sub
mov
pusha
or
dec
push
rclb
sbb
fsin
push
pushf
xor
pop
loop
pushf
cmp
test
fnstenv
sbb
and
cwtl
xor
mov
stc
repnz
sub
insb
or
fldt
int
test
in
negl
xlat
jbe
int3
enter
stos
dec
pop
sbb
adc
mov
inc
cmp
in
adc
xorl
imul
cmp
cmp
jp
mov
subb
fsts
xor
jg
mov
xchg
pop
push
xchg
push
xchg
xlat
jnp
bound
pop
or
inc
xor
pop
xchg
fildll
and
test
aaa
cld
lods
jo
push
cmp
cld
imul
and
xor
sub
scas
popa
jb
inc
mov
xor
mov
or
dec
xor
mov
adc
add
in
jae
lret
sti
insl
loope
or
ret
mov
sub
pop
stos
jle
ljmp
mov
fyl2x
dec
xchg
shl
dec
cmp
xchg
push
cmp
cld
or
cmp
jnp
push
xchg
jns
cld
cmp
rsm
stc
xchg
sub
mov
out
mov
stc
push
or
gs
arpl
xchg
repz
dec
in
push
jmp
lret
or
cmp
enter
lods
mov
pushf
mov
push
or
mov
xor
cld
les
mov
xor
adc
sub
pop
or
dec
jle
test
cmp
sbbl
popf
fsubs
push
lret
bswap
dec
dec
xchg
aam
ljmp
aam
cmc
icebp
es
cmpsl
inc
mov
scas
movsl
stc
sub
testl
mov
push
sahf
mov
cmp
add
sub
sub
gs
add
xchg
iret
xchg
imul
xchg
inc
sub
in
push
outsl
repz
or
inc
inc
pop
xor
mov
cld
mov
xor
aad
call
out
xor
insb
mov
xchg
add
rcrl
or
mov
xchg
push
dec
ret
cmp
inc
mov
rcl
jmp
mov
cmp
xor
and
push
inc
pop
movsl
xchg
sub
std
bound
xchg
mov
push
pop
scas
inc
loopne
jl
test
push
jmp
push
push
sbb
sub
inc
inc
jmp
xchg
dec
outsl
loopne
sub
scas
pop
sarl
jb
pop
shll
sub
sbb
inc
pop
mov
pop
sar
jg
fistpl
xchg
bound
sub
mov
sbbb
adc
cmc
xor
mov
jmp
leave
aaa
movsl
xchg
jo
rcrb
cmpsl
xlat
inc
imul
ja
xchg
int
inc
test
sub
adc
jb
and
push
sbb
mov
adc
imul
inc
push
daa
mov
adc
push
fstpt
bound
orb
jmp
push
sub
jo
push
sub
dec
dec
lock
loop
sahf
mov
cli
mov
adcb
dec
or
sbb
and
insb
inc
out
in
sbb
lea
outsb
out
push
cld
mov
shlb
in
scas
add
cmp
insl
mov
sub
movsl
shlb
mov
subl
inc
ljmp
dec
cmp
adc
sbb
addl
loope
mov
test
sub
mov
sahf
stos
xor
mov
ja
and
repnz
pop
push
aas
mov
jo
sbb
sarl
aas
mov
and
lods
test
sbb
xchg
insl
or
sub
adc
cli
dec
lods
das
loopne
lds
mov
call
aam
int3
fnstenv
jne
xchg
pop
test
adc
aad
mov
loop
add
cmp
adc
int
push
adc
cmp
aad
ret
xchg
fisttpl
cld
lcall
mov
push
jne
imul
cmp
mov
jmp
aad
sbb
cli
pop
jl
fmuls
inc
cltd
pop
add
call
jl
cmp
or
ret
pusha
dec
mov
mov
push
mov
out
mov
adc
inc
pop
mov
aaa
dec
loopne
or
cmp
movq
push
rolb
daa
sbb
jge
pop
call
in
cli
push
sub
repnz
jne
inc
inc
nop
das
mov
mov
pusha
add
enter
in
orb
cld
sbb
inc
push
in
ret
xchg
js
data16
sub
dec
xor
sbbb
pop
push
incb
and
push
xlat
xchg
dec
adc
cmp
js
jg
ja,pt
mov
push
mov
je
sbb
push
pop
xor
dec
test
push
mov
sub
jae
mov
out
sbb
and
stos
subl
cmpsl
and
xor
mov
lock
xchg
pop
fcmovu
push
hlt
sbb
xchg
mov
push
std
xor
ljmp
push
dec
push
mov
pop
dec
repnz
xor
cltd
aad
sub
pop
adc
xor
adc
add
or
sbbl
mov
jne
push
and
aas
sub
dec
iret
mov
pop
inc
imul
divb
xchg
bound
xor
dec
jo
mov
fimuls
pushf
xchg
xor
jg
or
dec
pushf
add
mov
mov
sub
jae
lcall
shlb
xor
pop
test
mov
orb
pop
cwtl
lret
cmp
sti
stos
dec
and
add
jmp
lods
ja
in
neg
add
ss
scas
rclb
incl
or
cmp
and
mov
xlat
xchg
jbe
jae
aaa
and
xchg
cmpsb
in
mov
dec
ljmp
mov
fadds
pop
mov
loop
stos
lcall
jne
add
ja
sahf
jle
adcl
push
insb
push
mov
xchg
xchg
aas
dec
movsb
or
pop
inc
lahf
push
jecxz
inc
cld
aad
xchg
mov
cmp
push
adc
iret
cld
push
adc
test
dec
in
sbb
arpl
std
cld
and
les
sarb
sbb
pop
xchg
xchg
leave
sbb
lea
cwtl
mov
jns
mov
dec
lea
into
lahf
hlt
aaa
push
scas
cmp
test
sbb
ss
adc
or
jmp
mov
push
sbb
mov
fcoms
pop
lret
sti
enter
and
lret
sub
fwait
das
dec
mov
sti
pop
cmpsl
stc
cmp
test
lods
in
bound
mov
xchg
mov
movsb
lods
or
into
and
leave
pop
mov
fsubr
mov
leave
sbb
lods
dec
mov
add
pop
jmp
cmp
lcall
les
int3
fs
mov
pop
or
mov
gs
leave
and
sbb
push
clc
mov
cld
xchg
aam
out
fstl
mov
sti
mov
jnp
divl
pop
out
inc
mov
loop
cmp
lock
outsl
into
arpl
sbbl
xor
aaa
cmpsb
adc
xchg
cmpsl
sbb
cmpsb
je
and
cmp
ja
xor
mov
cltd
mov
orb
lea
mov
cmp
ljmp
push
xor
xchg
or
fld1
out
pusha
call
cli
aaa
test
cld
test
xchg
sbb
sbb
repnz
add
xor
dec
pop
imul
stc
adc
iret
int
xor
push
cmp
or
xor
adc
and
cmp
sbb
test
xor
push
ret
stos
gs
xchg
jp
movsl
push
ret
out
mov
repz
jle
or
loope
mov
scas
lock
pushaw
mov
sbb
pop
and
ror
mov
mov
xchg
inc
mov
mov
fistpl
int3
mov
dec
jno
cwtl
pop
icebp
mov
in
sbb
enter
lret
fcmovnbe
call
jle,pt
ret
xchg
stos
aas
adc
fxch
dec
adcb
mov
jbe
and
push
add
or
fiaddl
mov
scas
pop
mov
inc
popf
sbb
pop
nop
jmp
mov
jge
mov
jae
pop
hlt
push
shll
arpl
or
imul
pop
push
mov
xor
inc
jg
ljmp
dec
hlt
sub
int
sbb
jae
push
loope
sbb
and
and
mov
pop
fstpl
mov
sbb
pop
lock
dec
imul
lds
or
in
daa
divb
ljmp
jb
das
inc
pop
cmp
mov
sarb
clc
jne
add
inc
test
fs
test
incw
inc
pop
aas
mov
rclb
leave
push
sub
lock
andl
cmp
dec
js
push
adc
gs
or
push
cmp
cmp
gs
pop
sub
aas
leave
sub
pop
je
and
nop
mov
aad
jno
pop
xor
dec
sbb
lret
popa
ficoms
pop
adc
sub
call
decb
repz
movsl
xchg
testl
ret
outsb
fcomps
mov
stos
stc
jb
add
out
jmp
xchg
ljmp
aam
fisttpll
push
fadds
jnp
cmp
xchg
push
pop
or
pop
fmull
and
gs
in
cmp
sub
pop
or
jo
add
xor
push
dec
stos
test
lcall
stos
out
push
dec
shll
outsb
arpl
dec
cmp
xor
jne
scas
mov
push
loop
fisubs
fadds
jbe
pop
xchg
mov
cmp
push
pop
dec
pop
pop
out
fbstp
movsb
fs
xchg
dec
jp
lods
out
xor
mov
or
fldenv
movsb
rclb
cmp
xor
pop
int3
xchg
int3
xor
xor
ret
cltd
dec
xchg
jmp
xor
mov
shld
shlb
in
xorb
sub
or
pop
stos
push
inc
sbb
leave
lahf
pop
cmpl
sbb
lahf
lea
inc
mov
adc
test
shrl
and
mov
cs
push
leave
outsl
test
inc
mov
loope
xchg
test
push
add
mov
loope
sbb
or
int
jmp
push
or
xor
adc
push
outsb
aam
repz
sbb
xchg
cmpsl
adcl
lcall
jp
js
sub
out
mov
xchg
xor
inc
xor
mov
adc
jnp
fcomp
mov
jo
hlt
pop
adc
inc
xchg
xor
cltd
out
js
and
jl
imul
push
xchg
mov
mov
push
stos
out
xchg
mov
pop
cld
jo
repnz
sub
cmp
mov
maxps
das
dec
ja
ss
aad
jecxz
dec
out
insl
add
andl
cmpsb
test
int3
popf
pusha
insb
lcall
pop
dec
js
in
ret
push
es
popa
sub
pop
and
adc
cmp
in
adc
fidivl
pop
js
ret
das
int3
pushf
mov
arpl
add
iret
sbb
jno
sti
push
pop
adcl
jl
pop
outsl
or
call
into
xchg
sbb
or
sbb
test
jmp
lea
cs
cltd
in
aam
mov
or
stos
xchg
imul
in
lret
inc
xor
xchg
repz
mov
fst
sub
pop
cmp
fdivrl
adc
pop
inc
iret
repnz
inc
lahf
cmp
lods
cmpsl
inc
imul
xchg
jnp
mov
repz
pop
add
stos
test
jge
jmp
xor
xor
hlt
out
std
sbb
mov
imul
xchg
mov
sbb
inc
mov
test
add
mov
dec
dec
loope
xchg
lret
xchg
xchg
xchg
fmuls
fadds
jge
out
mov
shlb
xchg
fisubs
hlt
xor
leave
inc
push
add
or
inc
jge
mov
cmpsb
lahf
sti
or
sbb
push
or
fidivl
imul
jbe
xor
in
dec
mov
es
shll
push
scas
mov
or
fidivs
dec
call
xor
out
in
call
iret
aam
and
adc
mov
add
lcall
out
arpl
sub
testl
in
push
and
sbb
xor
xor
inc
xor
int3
pop
loopne
cmp
push
rcrb
int
jns
mov
or
xchg
test
dec
lahf
loope
mov
out
out
mov
int
mov
pushf
adc
inc
inc
push
mov
sbb
ljmp
mov
rclb
push
sbb
cld
cmp
cli
dec
lcall
push
dec
out
insl
scas
sbb
add
nop
cmp
sub
pop
cltd
imul
push
dec
in
sbb
pop
in
pushf
out
nop
inc
int
mov
fstl
push
xchg
mov
push
mov
pusha
add
jne
dec
sub
lock
stos
out
mov
mov
jge
push
nop
xchg
mov
sub
pop
adc
push
dec
aad
imul
in
mov
ja
cmpsl
jo
sbb
xchg
pop
aas
call
mov
pop
or
shl
imul
clc
xorl
or
aad
mov
sbb
xchg
js
fisubl
test
sbb
and
sub
pusha
jne
xchg
jge
mov
iret
fs
in
xchg
sbb
js
call
andb
ret
inc
testb
hlt
add
lods
pop
pushf
cmc
or
and
xchg
pop
cmpb
pusha
cmpsl
out
sbb
cmp
popa
into
and
imul
pop
jmp
paddsb
mov
fiadds
int
push
xor
dec
iret
adc
adc
and
call
xlat
scas
and
rolb
fsubs
cwtl
popa
sbb
pop
leave
lock
mov
sbb
fsubrl
adc
stos
pop
pop
dec
xor
and
clc
leave
mov
mov
lret
add
pushf
mov
mov
decl
sbb
or
rcrl
push
xchg
inc
lock
jbe
imul
pop
mov
lahf
mov
mov
sub
mov
or
jle
cmpsb
pop
and
imul
push
cmp
and
add
push
add
leave
jg
imul
adc
sub
test
inc
jg
adc
push
jb
mov
jae
cli
sbb
mov
inc
jp
iret
loop
xlat
and
add
sahf
xor
dec
arpl
sub
mov
mov
out
or
push
push
sbb
and
or
sarl
dec
ss
xlat
lea
jge
fwait
mov
cmp
and
pop
mov
mov
cs
lahf
loop
push
adc
dec
shr
frstor
push
ja
mov
push
mov
into
mov
cwtl
xor
out
mov
push
pop
movsl
lods
xor
movsl
push
add
push
mov
fs
mov
mov
or
pop
sbb
push
mov
or
dec
or
mov
das
xchg
scas
xchg
jl
mov
add
xor
in
jns
pop
xchg
inc
les
cmpsb
cmpsl
movswl
mov
push
ret
and
and
lds
sti
mov
out
mov
pop
cld
jne
cmp
ja
push
test
dec
pop
or
adc
pusha
pop
jno
fisttpll
jbe
cmpsb
addr16
pushf
and
inc
mov
inc
xchg
inc
mov
sahf
jle
imul
test
inc
ret
fsts
sahf
mov
mov
xor
mov
mov
xchg
loop
cmp
mov
or
icebp
pushf
xor
xchg
mov
add
inc
mov
adc
push
nop
jo
call
jl
popf
icebp
mov
inc
mov
add
int3
lods
fidivrl
dec
lea
lcall
mov
fidivl
push
arpl
scas
cmc
jbe
dec
std
ficompl
lock
cmp
inc
inc
rorl
arpl
inc
xchg
rolb
inc
insb
mov
mov
rcrl
mov
ds
sub
fcompl
in
pusha
lock
lock
in
pusha
ja
xchg
inc
and
mov
sub
push
cmp
scas
mov
push
in
xor
fprem1
fucomi
test
outsb
stc
or
fnstenv
ds
fstl
mov
dec
ljmp
mov
dec
fldt
dec
or
push
fsub
add
mov
jb
ds
imul
pop
xchg
lock
fcmovne
sub
inc
mov
mov
lret
pop
in
nop
loope
sub
lods
pushl
popf
in
dec
dec
xchg
mov
jge
pushf
mov
ss
testl
nop
mov
cmp
adc
lock
mov
cs
iret
test
xor
sub
sarl
cmp
xchg
cld
jb
add
jne
add
lods
jmp
gs
or
iret
movsl
lret
insb
mov
mov
dec
out
mov
shll
add
pop
and
dec
xor
adc
push
xchg
xor
pushf
aaa
sahf
gs
mov
pop
inc
dec
or
adc
ja
fldt
sbb
aad
cmp
dec
cli
or
push
loopne
cmp
mov
push
pushf
mov
bswap
jp
pop
cmpsb
inc
sub
dec
mov
push
fnstcw
test
fcmovne
mov
mov
xchg
and
mov
mov
inc
mov
xlat
out
les
inc
mov
mov
cmpsb
int3
imul
pusha
subl
jo
es
mov
cmp
sbb
lret
inc
mov
sbb
data16
push
push
pop
xor
dec
imul
insb
or
call
mull
cwtl
mov
jp
sbb
jno
and
inc
subb
mov
sahf
inc
xchg
xchg
dec
sbb
push
shll
insb
add
lds
push
jnp
mov
addr16
movsb
mov
inc
sub
sub
rclb
enter
int3
or
ret
or
pushf
xor
outsb
push
xlat
std
pop
js
push
es
dec
xchg
sub
mov
sahf
in
and
add
xor
cmp
mov
mov
sbbl
pop
fmul
out
pop
aam
sub
mov
mov
pusha
sti
xchg
daa
mov
ficompl
iret
push
stos
sahf
cvtdq2ps
cmc
daa
imul
lahf
shlb
nopl
shrb
push
lret
in
sub
adcl
insl
aas
insl
in
mov
xchg
pop
repnz
inc
push
inc
jb
sbb
jg
jp
jno
mov
std
jns
ret
mov
data16
pop
xor
test
repz
xchg
xchg
mov
push
andl
daa
mov
popl
mov
mov
enter
xchg
rorb
lock
shlb
mov
xchg
or
ds
sub
mov
dec
xor
data16
sti
inc
push
clc
xchg
insb
aaa
addb
insb
scas
je
movsl
sahf
jo
mov
jae
jmp
push
out
and
cwtl
pop
sub
jmp
les
inc
mov
mov
inc
or
dec
push
lahf
enter
cmp
push
push
out
push
xor
lea
mov
jae
sbb
xor
xchg
and
scas
dec
int
bnd
mov
cmpsl
or
rcrl
xor
xor
popa
xor
clc
lods
mov
xchg
mov
push
sbbl
shlb
repz
cs
scas
xor
mov
adc
loopne
xchg
pop
mov
mov
subb
adc
push
push
lcall
push
inc
ficomps
xchg
hlt
pusha
push
push
lods
es
or
push
mov
inc
rcl
cmp
add
cmpsl
cmp
sarb
loope
fwait
mov
jno
dec
xchg
cmp
mov
insl
gs
divb
inc
out
xchg
fs
and
sub
cmp
push
test
je,pn
sti
push
add
cmc
sub
out
push
jo
dec
add
lods
loope
arpl
fbstp
ret
mov
mov
inc
xchg
and
dec
mov
and
inc
cmpsb
sbb
shll
lret
mov
dec
icebp
dec
xor
dec
cwtl
push
mov
push
movsb
je
sub
lea
push
jl
pop
inc
dec
inc
and
test
push
arpl
stos
fildl
mov
fs
imul
push
lcall
insb
jns
jecxz
imul
icebp
ss
adc
dec
lods
push
push
aam
das
cmp
push
es
cmpl
or
adc
into
ja
xchg
or
repz
int
mov
sbb
inc
shlb
ljmp
mov
adc
xchg
xor
shlb
test
divb
push
sub
xor
out
insl
scas
cli
sbbb
and
jle
or
in
and
hlt
jno
lret
sub
sahf
xchg
dec
or
push
pop
fisubl
push
sub
pop
xchg
xchg
stos
lods
mov
xor
stc
scas
bound
xchg
push
iret
adc
pop
test
push
add
push
inc
cmp
inc
xor
sub
jmp
sbb
negl
int3
vunpcklpd
popf
into
sti
dec
push
movsb
imul
mov
fldl
in
mov
xchg
jbe
aas
mov
inc
in
fnsave
lea
aas
rcl
int
add
and
leave
out
pushf
cmp
and
outsb
adc
lea
jno
movsb
push
xchg
jno
mov
movl
push
ja
cs
fidivl
pop
sub
insl
dec
mov
cs
mov
aam
push
fists
mov
lods
inc
leave
pop
movsb
sbb
andl
mov
xchg
cmp
ljmp
mov
imul
sub
adc
icebp
add
test
gs
movsl
push
scas
mov
es
jle
push
fs
jno
nop
mov
push
jno
sbb
mov
sbb
jns
cltd
or
xchg
mov
scas
adc
mov
push
sub
and
fstl
dec
mov
movsl
lods
xor
adc
dec
sub
mov
data16
into
xor
in
punpcklwd
mov
idivl
test
ror
mov
gs
sbb
add
jp
sub
jbe
and
mov
rdpmc
mov
imul
jl
loope
mov
sub
lcall
out
mov
lods
stos
mov
iret
or
adc
jle
xchg
cmpsl
and
pushf
xor
mov
lret
bound
in
or
lret
mov
sahf
cmpsb
mov
mov
int3
cmp
mov
pop
add
dec
mov
ljmp
add
jge
stc
xor
stc
xchg
shlb
rcl
gs
adc
jmp
stos
cmp
aam
add
arpl
clc
loope
xchg
mov
bnd
pop
bound
adc
ljmp
imul
nop
mov
vmovups
jne
sub
cmp
arpl
mov
lods
insb
xor
test
pushf
call
gs
movsb
inc
sub
push
dec
adcb
push
leave
jnp
sub
cli
sub
outsb
cmp
pop
and
push
ljmp
arpl
dec
pop
mov
push
or
or
add
bound
xchg
pop
lea
imul
cmp
shrl
push
mov
inc
or
enter
fistps
pop
icebp
imul
and
dec
mov
jns
pusha
xor
jmp
mov
sbb
rorb
clc
jecxz
xor
and
popf
mov
mov
mov
and
pop
sbb
fidivrl
xlat
fsubrl
sub
les
shr
shl
push
push
je
or
insb
mov
cmp
jp
jecxz
cmp
pushf
cwtl
xchg
sub
outsl
outsb
lret
int
xor
imul
subl
pop
sahf
pop
insl
dec
mov
cmc
pop
pop
lret
jle
ja
in
add
xlat
vmread
mov
sbb
scas
in
movsb
adc
jbe
shlb
loopne
icebp
test
ds
js
lahf
xchg
aas
ds
dec
xlat
cmp
mov
mov
push
sub
or
arpl
cld
lret
mull
mov
xor
or
imul
xor
fsubl
lea
int3
xchg
inc
and
std
sarl
push
sbb
adc
ret
stc
in
mov
out
test
jmp
test
mov
mov
mov
xchg
sarb
es
imul
lret
insl
fisttpll
mov
cmp
outsl
dec
sbb
int
lcall
ja
jl
shlb
lock
and
push
dec
xchg
and
xchg
ds
and
mov
out
fsubl
inc
insl
jg
pop
popa
stos
popa
int
push
inc
or
sbb
pusha
add
jle
test
dec
lcall
mov
mov
mov
push
adc
orl
mov
adc
mov
xor
addb
mov
out
notb
stos
les
adc
and
xor
dec
mov
mov
mov
inc
xor
gs
ret
mov
xchg
add
pop
insb
push
mov
addb
dec
xchg
sub
mov
xchg
ja
pop
frndint
add
leave
mov
dec
fistpll
xor
xchg
push
inc
je
push
scas
push
and
jg
data16
add
xor
sub
sub
lds
mov
cmp
loop
test
pop
loope
jae
xchg
cs
sti
sub
cmpb
mov
mov
loopne
rcll
iret
add
inc
fmull
xchg
fldenv
sub
das
shll
mov
pop
inc
mov
inc
dec
icebp
cld
lcall
mov
dec
test
jp
cmpsb
mov
rcrb
jge
pop
imull
fsubs
adc
fnstsw
jge
inc
addb
jbe
fiadds
in
call
cmp
rolb
das
pushf
addb
mov
pop
jns
xlat
xlat
cmc
mov
jg
cmp
ret
dec
jo
aaa
add
mov
adc
or
cmp
dec
mov
bound
mov
dec
mov
scas
js
inc
cld
daa
fwait
dec
stos
mov
movhlps
lret
mov
xchg
cltd
notl
lret
test
cmpsl
inc
test
pop
insb
cli
test
pop
push
mov
cmc
lcall
daa
adc
test
sbb
out
add
fsubs
lret
cltd
popa
cmp
mov
movnti
inc
xchg
addr16
lahf
dec
push
jnp,pt
mov
dec
jecxz
mov
xchg
ret
ds
sbb
movsl
jns
fiadds
inc
imul
adc
mov
adc
loopne
loope
or
dec
mov
jns
adc
rclb
push
push
mov
popf
jg
mov
cwtl
scas
test
clc
jl
cmp
cmp
ss
mov
in
std
aas
lods
cmp
xor
pop
xchg
mov
push
cmp
das
sti
xchg
add
cmpsb
cmp
push
xor
cli
fldenv
aam
jge
imul
xchg
mov
or
ror
imul
cltd
in
gs
int3
pop
sbb
rcl
and
inc
das
mov
ljmp
outsl
add
or
sar
jp
sahf
int
jb
repz
ja
out
popa
mov
insb
pusha
add
push
push
lods
mov
and
or
push
jbe
or
iret
stos
mov
jmp
call
pop
and
adcl
in
insl
repnz
jle
pop
mulb
pop
lret
mov
call
hlt
mov
into
imul
xlat
sub
idivb
cmpsb
fwait
and
mov
pop
popa
xchg
mov
jle
mov
cmp
test
cltd
out
dec
data16
loopne
decl
aas
into
lock
flds
repnz
dec
enter
xor
mov
movsb
movsb
adc
cld
mov
stos
and
push
inc
aaa
popf
jl
cmp
int3
jnp
das
inc
scas
inc
dec
sbb
push
ffree
ja
cmc
lahf
bound
mov
cmp
sbbb
push
xchg
fwait
pop
clc
inc
ljmp
push
ret
sub
and
cmp
stc
jno
cmp
inc
and
mov
mov
add
test
dec
lret
sahf
loop
adc
jnp
bound
in
out
aaa
adc
cltd
addr16
pushf
cmp
pop
jnp
and
mov
and
push
xchg
sbb
lret
popf
bound
repnz
shrb
js
lock
jo
ret
outsb
repnz
cltd
cld
add
nop
negb
into
jnp
inc
in
ja
aam
test
jnp
mov
adc
sbb
push
testb
out
lods
pushf
inc
cmp
test
inc
jp
add
cmp
enter
imull
out
pop
aas
xchg
pop
pop
inc
mov
mov
adc
aam
jns
sahf
cld
icebp
pop
shrl
dec
aaa
iret
ret
into
arpl
jnp
xor
dec
rorb
mov
sub
sub
jae
add
cli
mov
add
push
ja
mov
loop
loopne
lock
and
add
push
mov
not
sbb
dec
outsl
ret
add
xor
ss
sub
test
in
dec
mulb
loopne
and
iret
stc
lcall
cld
stos
xor
shl
pop
inc
ljmp
dec
inc
add
mov
jne
dec
mov
jg
cmp
adc
mov
mov
inc
mov
lret
dec
push
imul
stc
cmp
jmp
lahf
adc
loope
add
xchg
loope
movsl
mov
add
xor
jne
add
cmp
imul
hlt
outsl
pop
in
sub
xor
ljmp
sarb
enter
call
popf
sbb
inc
dec
int
cli
dec
cmp
fdivrl
sti
mov
ja
cs
adc
int
add
iret
sbb
push
adc
jno
jo
outsb
sarb
loopne
mov
push
fstp
hlt
ja
or
mov
mov
outsb
ret
jo
jmp
fldenv
fdivr
and
out
das
sti
mov
stc
or
mov
push
jbe
jne,pn
imul
jecxz
inc
inc
pusha
into
jecxz
testl
pop
jmp
and
xchg
xor
std
dec
jns
add
jbe
cmp
ljmp
mov
mov
xlat
imul
xchg
test
mov
je
mov
adc
sub
sub
sahf
jns
ret
clc
adc
outsb
fsubr
push
mov
jp
push
lret
add
out
add
and
jne
inc
adc
in
push
lods
divb
insb
loopne
push
loopne
xorb
insl
roll
pop
xchg
jmp
lcall
xchg
sti
sarl
ljmp
int
cmpsb
fs
dec
insl
push
jno
jmp
pop
sar
fbstp
jl
ret
les
faddl
mov
xor
das
cmp
nop
cltd
testb
aaa
dec
jnp
sbb
mov
aaa
lret
ror
in
xor
js
fistpl
lcall
fildl
cmp
pop
aaa
insb
aam
repnz
jge
xchg
push
scas
lea
clc
int
jp
jae
loope
outsl
mov
jl
lock
adc
inc
out
xor
cmp
sbb
dec
test
add
cmp
je
pusha
inc
popa
mov
sbb
sub
arpl
push
jg
cltd
enter
jns
or
xchg
mov
or
sbb
icebp
jle
pusha
bound
mov
in
sub
aaa
push
aas
es
popa
gs
das
cmp
movsl
fdivr
stos
rcll
test
es
sub
adc
popf
aaa
xor
cwtl
outsl
popa
mov
jnp
mov
mov
std
ret
loopne
mov
add
xchg
das
cld
jg
ds
lods
fcomps
xchg
jle
sbb
push
and
mov
and
ja
dec
add
ds
sub
insl
cmp
cmpsl
imul
sbb
adc
dec
test
repz
xlat
pop
mov
push
gs
imul
in
insb
dec
fildll
mov
add
sub
pushf
push
stc
pop
cmp
jp
loopne
dec
in
loop
lcall
enter
jge
es
mov
stc
inc
sbb
pop
imulb
fcmove
sbb
xchg
push
mov
push
cli
cmp
push
or
cmp
jmp
xor
pop
data16
mov
inc
inc
inc
pop
lods
test
in
push
rol
lahf
cmp
adc
adc
out
add
mov
negl
pop
mov
int
ljmp
out
jbe
or
push
cmp
movsl
aaa
add
ljmp
xchg
xchg
leave
push
pop
outsb
xchg
subb
pop
push
out
sbb
fsubrl
mov
pusha
leave
mov
stc
cmp
xchg
mov
cwtl
repz
jmp
add
mov
addr16
jne
sub
mov
cli
mov
push
fcomps
ss
jge
daa
popf
xor
xchg
mov
outsb
and
das
push
inc
insl
push
in
xchg
clc
inc
pop
insl
gs
and
add
test
inc
loopne
mov
loopne
dec
mov
test
push
push
aad
popa
push
gs
xchg
sbb
mov
stos
clc
and
hlt
iret
sub
adc
cmp
movb
dec
add
pop
lahf
movsb
adc
movb
mov
fdivr
push
push
jns
inc
xor
and
jle
xlat
xchg
xor
je
repnz
outsl
mov
jmp
lret
pop
andb
dec
xchg
sub
xchg
test
or
jl
outsb
lock
insl
cs
leave
jp
arpl
dec
xchg
clc
xchg
push
cmp
dec
mov
xchg
fwait
roll
aaa
cld
addr16
ficomps
mov
bound
test
or
dec
push
inc
lcall
int
xchg
or
adc
pop
mov
push
je
imul
inc
das
loopne
adc
cmp
push
enter
add
mov
jbe
ret
xchg
mov
es
mov
lret
test
and
xor
pop
lock
sub
sti
mov
lds
xchg
mov
sarb
jge
add
jecxz
fmuls
ret
das
dec
adc
pop
push
sbb
and
inc
cmp
dec
in
or
cmc
or
imul
fcom
mov
or
in
jns
ja
jb
ja
imul
inc
outsb
inc
dec
lds
push
pop
xor
mov
sahf
idiv
cmp
lods
xchg
repz
out
es
notl
add
adc
ss
out
and
jo
cmc
nop
cmp
leave
adc
xchg
test
inc
or
dec
lock
unpckhps
xchg
pop
in
adc
pop
loop
cltd
push
icebp
shr
push
loop
mov
stos
jbe
jecxz
dec
xor
clc
das
jp
sti
cltd
lods
lea
lock
jg
inc
sbb
xchg
imul
sub
xchg
int
adc
movsl
lret
mov
and
mov
and
int3
jl
xor
cmp
popf
xor
dec
jg
xchg
sub
shll
sbb
jge
lcall
fucom
mov
inc
adc
sub
inc
xor
push
movsb
cs
pop
fnstsw
and
add
xchg
repz
or
jae
xchg
lahf
es
in
sarl
adc
fcompl
movsb
fwait
popf
push
test
rol
stos
adc
in
lds
aaa
test
cmp
mov
cmp
out
jns
jae
xchg
into
xchg
in
jge
iret
mov
dec
and
bound
js
lods
adc
cmp
clc
lcall
mov
fstps
inc
add
adc
cltd
int
out
xor
mov
cld
adcb
outsl
lcall
mov
xlat
and
ret
inc
jecxz
mov
aas
lds
pop
pop
popa
adc
loope
adc
jl
imul
es
jl
jno
mov
scas
leave
cmp
dec
fidivs
loopne
fisttpll
fisttpll
popf
into
lea
mov
pop
inc
push
sbb
sub
aam
std
sbb
cmc
adc
jg
daa
dec
out
cmp
fistpll
es
inc
jge
inc
or
loopne
jle
lret
dec
aas
or
jne
iret
popf
loope
xlat
fildl
mov
scas
lahf
add
inc
iret
and
xchg
andl
fsubrs
add
push
cmp
or
inc
push
jns
inc
mov
shrb
insl
or
ret
push
push
cmp
lret
aad
xchg
fisubl
dec
xchg
or
sub
lret
pop
pusha
mov
imul
xor
mov
push
adc
aam
dec
imul
cmp
sub
cmp
gs
fadd
stos
leave
shlb
movl
insl
test
jecxz
fcomip
aas
sub
out
mov
mov
or
push
push
dec
push
cmp
bound
shlb
les
shlb
add
push
inc
add
pop
out
outsb
mulb
push
test
scas
jno
jo
lahf
shl
mov
int
push
push
outsl
sub
insb
jmp
mov
fwait
mov
dec
xchg
mov
lret
ds
rclb
rcl
pop
sbb
movsl
mov
mov
xchg
test
xchg
popf
divb
lods
mov
mov
and
cmp
loop
mov
pop
pop
je
aas
aam
sahf
rcrl
pop
out
loope
lock
mov
sti
sahf
das
push
adcb
in
push
pusha
xlat
popf
int3
lret
mov
lock
int3
xchg
iret
mov
hlt
adc
cmp
xor
sub
cmp
mov
mov
xlat
xchg
imul
push
jl
daa
jno
sbb
push
clc
lahf
cmp
mov
push
int3
filds
mov
test
push
mov
cmp
mov
pop
clc
xor
das
cmpsl
jecxz
mov
adc
aad
mov
shr
cmp
cli
mov
cmp
fistpl
mov
mov
add
ljmp
mov
sarb
notl
lcall
rclb
ret
pop
shlb
jae
cmc
push
shr
xor
std
scas
ret
add
mov
adc
pop
out
sbb
loop
test
jp
or
enter
jb
pop
jmp
cld
jmp
sub
or
lds
dec
jo
fucom
sahf
or
lock
data16
leave
loopne
xchg
mov
dec
enter
sub
mov
test
inc
pushf
xor
xchg
xor
fs
mov
cmp
pop
add
cmp
jmp
jmp
push
aas
push
inc
in
mov
dec
lcall
mov
jmp
jl
cmpsb
lds
pusha
sub
push
repz
std
js
ljmp
aam
imulb
sbb
sar
push
insb
aam
rcl
pop
pop
jb
mov
roll
or
jmp
fidivs
ja
add
dec
pop
loope
add
mov
push
cmpsb
inc
pushf
inc
lcall
jmp
loop
stos
in
fstpl
mov
cwtl
in
push
rcrl
sbbb
insl
jmp
movsb
sbb
or
push
pop
dec
and
movsb
sti
dec
inc
cmp
push
enter
and
mov
cmp
inc
std
fcmovne
nop
xchg
xlat
fs
test
push
leave
sbb
add
cmc
cmp
clc
fwait
and
push
inc
cwtl
in
mov
xchg
pushf
add
fnstsw
xchg
xchg
add
lods
jnp
inc
cmpsl
add
xchg
mov
ja
mov
mov
fiadds
xor
add
jns
dec
call
mov
pop
call
adc
pop
mov
out
shlb
push
ljmp
in
push
and
cltd
adc
sbb
inc
in
testb
xchg
mov
jns
xchg
or
xor
sbb
pop
pop
adcb
cmc
mov
jle
rorl
lahf
jbe
sbb
and
outsb
xchg
xor
and
dec
push
loop
in
mov
fildl
mov
nop
xchg
jo
fiadds
mov
adc
jne
mov
cmp
inc
popl
mov
pop
loopne
push
push
mov
mov
cwtl
mov
aas
ret
js
inc
or
imul
lret
adc
and
adc
mov
ds
adc
lret
jecxz
mov
push
pop
out
push
mov
aaa
aad
addr16
cli
cmp
and
negb
cld
jge
push
sub
ds
push
out
clc
lcall
nop
mov
push
xchg
daa
ficomps
movsb
rcl
push
nop
xlat
icebp
imul
hlt
or
push
xor
movl
sub
enter
inc
lcall
cmpsb
or
mov
or
test
icebp
out
add
mov
cmp
cmp
mov
sbb
push
sahf
sbb
adc
movsb
mov
jns
sub
jb
in
test
push
push
idivl
mov
std
mov
in
xchg
fstp
sahf
jp
loope
je
adc
adcb
pop
and
lods
mov
pop
cmp
sbbb
les
add
cmp
insb
out
pop
or
sbb
push
icebp
movsl
push
push
out
bound
dec
leave
add
daa
out
rcrl
lcall
cwtl
test
add
loopne
insb
and
bnd
and
sub
xor
sub
pop
mov
std
iret
insb
mov
sub
cltd
ficoml
shll
shlb
sbb
das
mov
in
aaa
dec
inc
cmp
movntps
cmpsl
in
or
lahf
mov
lcall
repz
dec
and
push
or
jno
mov
sub
out
js
jne
dec
fcmove
faddl
or
stos
es
pusha
mov
mov
inc
xchg
lds
mov
add
mov
push
xchg
lods
out
dec
ss
lret
cmp
or
fcomps
data16
scas
jle
mov
push
popf
push
insb
adc
in
loopne
push
jl
push
add
or
xchg
sbb
nop
pop
cltd
mov
iret
sbb
mov
inc
add
fbld
out
imul
lahf
or
inc
pop
stc
in
sbb
ret
cli
xor
jae
out
dec
push
mov
test
aaa
sbb
xor
or
adc
test
cmp
pop
scas
jae
jbe
jge
gs
mov
and
dec
add
incb
add
xor
adc
cmp
ja
lods
cmp
xchg
sbb
aaa
lcall
sbb
pop
pop
mov
dec
add
insb
mull
out
aad
mov
jp
ds
nop
xchg
inc
clc
mov
cmp
xor
iret
jl
rolb
mov
cmpsb
aam
mov
sub
cld
xor
imul
jle
pop
pop
into
mov
leave
and
sar
andb
divl
or
cmp
test
shlb
loopne
pop
daa
out
mov
popf
gs
into
lea
dec
daa
jmp
cs
in
lret
jns
sbb
jbe
jnp
pop
es
cmpsb
dec
fyl2xp1
adc
or
int3
dec
loop
mov
sub
and
das
cld
mov
fadds
xlat
jno
int
sbb
or
lret
xor
mov
jbe
sbb
pop
pop
insl
xor
mov
or
bswap
out
imul
xor
rorl
mov
ret
push
imul
pop
push
mov
adc
mov
xor
xchg
sbb
scas
jge
inc
ret
push
mov
mov
fadds
jle
mov
add
dec
mov
xorl
jno
add
jecxz
dec
sahf
cmp
push
mov
dec
and
jns
insl
push
mov
xlat
sarb
inc
jl
xor
and
mov
ret
xor
or
dec
clc
xchg
xchg
int
adc
pop
int3
addr16
lcall
jecxz
xor
imul
xchg
jecxz
outsl
push
pop
push
cli
out
cmp
sbb
in
add
or
hlt
cmpsl
scas
xchg
inc
sbb
push
jp
pop
adc
mov
cmp
sub
mov
xor
push
insb
int
movsl
mov
imul
jmp
inc
jns
xchg
mov
mov
inc
call
call
cmc
lock
out
outsl
inc
fwait
add
shll
mov
jo
imul
mov
imulb
cld
in
mov
add
mov
pop
push
push
inc
jle
pop
add
sti
push
mov
jae
mov
scas
xchg
bound
and
mov
aaa
rcrb
cmp
aas
or
xchg
and
in
dec
push
mov
lods
shrl
mov
dec
popa
inc
xchg
loop
bswap
stos
pop
ret
imul
test
mov
mov
out
jne
push
mov
pop
xor
fwait
cmp
pop
xor
add
insb
lret
or
push
in
push
inc
sub
mov
movsl
mov
sub
mov
imul
lahf
out
and
push
icebp
nop
adc
test
dec
dec
ljmp
xor
dec
sbbl
and
xor
or
mov
push
pop
std
lret
js
je
in
sarl
dec
out
sub
aaa
jno
mov
aad
add
jle
xor
stc
pop
jge
push
test
xor
and
mov
dec
xchg
inc
mov
pop
out
stc
fsubp
mov
xorb
js
cltd
sti
repz
xor
inc
or
lcall
mov
shrb
int3
outsb
sub
addb
or
rorl
aaa
mov
xchg
in
cmp
call
sub
jg
mov
fwait
and
incl
xchg
ret
mov
arpl
subl
mov
xor
cmc
aad
rcrb
or
shll
scas
mov
cmc
mov
fcom
rcrl
lret
pop
inc
data16
mov
xchg
aam
stos
pop
cmp
les
fwait
jo
lret
sub
inc
or
jl
mov
pusha
cmpsl
jg
mov
cltd
ja
stos
rcll
mov
sub
cmp
ljmp
sub
aam
sahf
dec
push
dec
popf
mov
callw
jmp
pop
mov
xchg
push
cmp
add
xchg
inc
jae
sbb
pusha
inc
add
mov
xchg
mov
jmp
adc
fxch
pushf
testb
imul
cmp
subl
into
inc
xor
repz
lods
sbb
cmp
add
jae
xorl
daa
cmp
push
iretw
pop
sbb
sbb
mov
and
pop
inc
gs
push
aaa
jb
movsb
add
and
loopne
lock
adcl
push
mov
sbbb
push
sub
push
ds
insb
mov
repnz
adc
cmp
sti
mov
or
jae
pop
inc
dec
jle
sbb
mov
ret
pop
push
jb
loop
adc
mov
sub
xor
cmc
and
cwtl
and
gs
cmp
mov
lods
sbbl
xchg
nop
sbb
xor
xchg
dec
imulb
mov
arpl
sub
mov
cmp
and
call
icebp
stos
or
test
or
and
scas
mov
popa
sub
or
out
ret
inc
sti
mov
jecxz
mov
movsb
cld
inc
insl
daa
pusha
movsl
loop
dec
stc
out
xchg
aad
test
call
mov
in
and
mov
shrl
add
jno
pop
stos
push
shrd
sbb
nop
mov
fmull
or
mov
jae
and
mov
dec
adc
lea
add
dec
and
ficoml
mov
cli
je
mov
lds
or
mov
push
add
and
or
or
mov
push
pop
test
test
test
xlat
bswap
shr
pop
imul
popf
sarb
push
xor
xor
int
cli
dec
outsl
outsl
xchg
outsl
fxch
popa
sbb
aaa
cli
leave
pop
sub
add
xchg
pop
xchg
in
push
mov
jle
ret
cld
repz
aam
ljmp
mov
out
dec
lret
push
mov
insb
jl
in
xchg
out
cmpb
aam
lods
lods
mov
dec
aaa
mov
je
jmp
inc
aaa
mov
and
scas
adc
xor
in
xchg
xchg
in
rcll
dec
imul
ret
fisubs
fldl
stos
xchg
repz
es
les
inc
inc
and
dec
test
jb
movb
push
push
fwait
das
dec
push
add
mov
call
fsubrs
movsl
test
in
popf
shll
mov
clc
xchg
mov
cmp
clc
sub
aaa
test
loope
xor
pusha
jae
repnz
push
sbb
add
add
or
dec
fwait
xchg
ror
inc
lods
aam
gs
nop
das
sbb
repnz
pop
sahf
leave
mov
das
cwtl
lcall
loop
lret
adc
mov
mov
mov
bound
psubsw
lahf
lea
jns
pop
loope
sbb
xchg
fidivrs
loop
push
sub
sub
cltd
xor
sbb
frstor
pushf
int
scas
or
jl
fsubs
mov
xor
fsubp
call
mov
test
sti
pop
jno
adc
jle
inc
cmp
sbb
inc
xor
push
lahf
lods
push
dec
or
jbe
or
lods
lds
pushf
jo
test
pushf
and
pop
mov
inc
leave
mov
dec
stos
push
xor
insb
jbe
mov
jae
or
scas
int3
and
test
add
les
aad
dec
arpl
xor
sbb
je
ds
int
and
mov
add
ja
or
insb
fldl
std
sbb
lods
sub
mov
fsts
adc
and
hlt
shrl
ret
nop
test
inc
sbb
cwtl
stos
cli
inc
outsb
xchg
pop
sub
js
mov
inc
lret
outsl
pop
inc
jne
ret
hlt
jae
add
pavgw
ljmp
subb
push
scas
push
and
and
xor
xor
or
cmpb
xchg
dec
repnz
jne
or
int3
scas
cmp
repnz
js
lahf
imul
push
xchg
mov
mov
in
fidivl
mov
into
dec
pop
aas
int
mov
add
jecxz
daa
sahf
jne
xor
mov
inc
loop
or
movsl
xchg
jge
xchg
fcomp
push
fsubrp
mov
dec
fistps
les
loopne
add
hlt
dec
jecxz
nop
ror
sbb
cmp
shr
sub
mov
push
xchg
dec
test
jg
out
inc
push
mov
or
hlt
cltd
mov
xor
jg
es
shl
aad
idivb
pop
push
testb
xor
insl
sub
push
sbb
and
scas
sbb
inc
js
fistpll
sbb
js
cmpsb
movsb
shrd
xchg
loopne
dec
out
jg,pn
mov
fwait
or
mov
sub
test
xchg
pop
icebp
sarb
sbb
aas
push
pusha
fldl
lock
rorl
incb
sbb
movsl
or
in
or
lahf
ja
jle
clc
outsl
imul
pop
stos
xchg
fcoml
xchg
mov
jnp
sub
leave
call
pusha
call
pusha
lret
dec
adc
repz
repnz
push
and
int3
sahf
stos
sub
xchg
mov
cmpl
sbb
or
cmpsb
arpl
les
push
jo
mov
andl
fdiv
jnp
je
mov
fwait
mov
inc
aas
xchg
mov
pop
jecxz
xchg
js
clc
xor
repz
dec
repnz
jp
scas
add
jne
popf
pop
into
push
fadds
mov
int
push
mov
inc
xchg
ffree
stos
subb
sti
adc
or
jnp
xchg
mov
push
push
jae
and
add
pop
nop
or
xchg
arpl
in
sub
jmp
xchg
fstl
xchg
ror
mov
lret
xchg
inc
inc
mov
add
das
sbb
pop
fs
int
outsl
xor
stos
fmull
mov
addr16
push
subb
mov
arpl
in
cmp
jle
int3
xchg
leave
cld
fldcw
cmp
cmp
sbb
push
sub
daa
sbb
sbbl
xor
jmp
mov
fcoml
sbb
movsl
ret
mov
dec
adcb
inc
mov
jecxz
addr16
jbe
inc
incb
push
lea
imul
xor
pop
sbb
clc
andb
and
inc
sub
add
ja
je
pop
adc
clc
outsb
popf
gs
lds
pop
cmp
mov
mov
jecxz
jge
stos
inc
sysret
inc
sbb
push
sarb
mov
add
imul
pop
xchg
cmp
jmp
scas
js
stos
in
fidivrl
pop
pop
repnz
addr16
cmp
xor
xchg
daa
adc
rcr
fstps
cltd
xchg
dec
pop
enter
movsw
cmp
ret
aaa
sub
dec
test
add
sub
sbb
orb
xchg
fldcw
jno
int
sarb
lahf
lds
test
add
xor
cmp
sbb
fwait
daa
aaa
jbe
fsubr
insl
jbe
imul
mov
lods
test
pop
movsb
push
and
ja
cltd
test
aam
out
pop
add
adc
dec
lret
aad
xor
stc
cmc
add
loop
das
out
lods
pop
push
or
popf
nop
push
push
loopne
andl
lret
fs
cltd
cmp
mov
xchg
sarl
pop
mov
mov
xor
cmc
push
xlat
xchg
pop
xor
push
sub
imul
inc
repz
lret
mov
cli
cmp
movsb
or
out
cs
iret
push
daa
mov
mov
aam
loop
and
pushf
loop
sub
cltd
shll
xor
jl
filds
xchg
aad
xor
jb
jae
icebp
in
jmp
jns
sahf
add
or
scas
xchg
cli
xor
jmp
ja
iret
fisttpl
andl
sete
rclb
cmpsl
movsb
ds
and
data16
clc
stos
iret
jge
imul
movsl
add
test
add
lret
sarb
adc
mov
xchg
and
xor
jge
jns
jne
testl
es
add
pop
js
xchg
dec
popf
loopne
call
sub
popf
int3
mov
imul
or
in
sub
lret
mov
in
shll
jle
shlb
xor
cmp
addr16
xor
mov
icebp
lds
jp
fisubrs
jne
push
inc
pop
filds
in
loopne
and
jl
sbb
pop
shl
outsb
sbb
pusha
neg
test
sbb
enter
hlt
lret
push
lods
in
adc
mov
arpl
cmp
js,pt
sub
cmp
es
mov
mov
cld
cmp
xchg
add
adc
sub
ss
inc
push
inc
inc
out
push
fdivl
jae
arpl
jl
sbb
sbb
enter
and
xlat
mov
jo
push
and
xor
cmc
movsb
call
adc
aaa
cwtl
or
repz
xorl
pusha
mov
je
cld
rclb
fdivs
cmp
cmpsb
jno
lods
arpl
push
orl
sbb
stc
mov
outsl
and
stos
adc
aam
pop
rorl
in
sbb
aaa
cli
pusha
lds
mov
push
and
stos
jbe
stos
mov
ficoml
inc
push
sarb
leave
loop
std
mov
test
jmp
push
std
add
fisubs
cmp
mov
pop
imul
cmpsl
inc
ror
mov
imul
lret
pop
mov
jno
cltd
iret
pop
inc
jnp
notl
sub
fbld
dec
fstps
je
mulb
and
pusha
subl
xor
sarb
mov
mov
pop
push
xor
cld
lds
sub
mov
push
jb
loop
jb
mov
push
rol
cmp
shrl
into
sub
cmc
aas
int
push
jmp
addr16
imul
add
into
push
sbb
pop
add
sub
add
mov
mov
push
ficompl
dec
mov
test
or
test
nop
fsubrs
clc
arpl
lods
adc
mov
mov
scas
movsl
jg
sbb
xchg
out
cmp
and
xchg
pop
lcall
inc
sbb
add
xchg
aaa
cmpb
add
in
lahf
push
dec
test
pop
cmp
adc
inc
jp
fdivrl
cwtl
out
loopne
test
sahf
ds
dec
data16
jb
xchg
jp
aaa
dec
jmp
xchg
mov
xchg
mov
push
xor
decb
mov
mulb
gs
xor
push
andl
leavew
dec
add
lods
xchg
push
push
pop
aam
mov
daa
sti
dec
or
jnp
rcr
ficomps
and
mov
xor
in
aad
pushf
jge
jge
dec
add
adc
sub
mov
jbe
add
cmpsl
mov
and
adc
pop
sti
and
popa
in
mov
out
gs
pop
xchg
mov
xchg
inc
or
jae
out
loope
or
ja
sub
rorl
push
imul
adc
push
mov
lret
test
movsl
pop
repnz
cmpsl
jnp
sbb
jo
bound
ret
into
out
jmp
cli
ret
scas
and
ret
xor
dec
addr16
mov
out
rdtsc
fwait
mov
and
fldenv
mov
aad
jp
jg
xor
js
push
cmpsl
mov
jns
sbb
push
jb
dec
sub
cld
subl
dec
das
jne
test
mov
jbe
push
push
push
push
adc
fnstsw
sbb
add
push
shrl
mov
fwait
cld
xor
jb
jns
xor
push
lock
lods
mov
add
inc
scas
lds
pop
sbb
cmc
es
loop
int3
dec
xchg
arpl
lahf
in
xchg
mov
dec
push
iret
sub
outsl
mov
pushf
push
and
cmp
and
jmp
dec
xchg
and
push
sbb
jo
sahf
loopne
or
inc
movsb
push
out
scas
mov
repnz
xchg
mov
insl
mov
pop
cs
js
inc
xchg
imul
mov
dec
mov
fsubl
call
popf
mov
push
adc
cltd
stc
popa
pusha
fists
leave
lea
outsl
add
stos
push
dec
leave
pop
cmpb
xor
sub
add
mov
adc
xchg
jae
and
mov
into
mov
lcall
xlat
daa
fs
mov
adc
inc
leave
xchg
cwtd
cmp
aaa
rorl
mov
inc
mul
outsb
xor
xor
and
lcall
push
mov
andb
repnz
out
stos
aas
dec
aaa
sbb
into
mov
and
adc
jmp
pop
fistl
fildl
mov
sbb
stos
mov
mov
jnp
lods
enter
inc
mov
jmp
std
xor
push
int3
rcll
push
jle
clc
outsl
sbbb
cmpsb
rorl
mov
mov
or
sbb
popf
mov
jbe
addl
clc
push
out
sbb
jbe
lret
add
jl
fistps
mov
lret
or
sbb
pusha
std
inc
xchg
sbb
jo
lock
sub
pop
sbb
adc
lret
lretw
inc
xchg
scas
pop
push
enter
data16
cmp
inc
in
repz
inc
mov
pop
in
or
lods
in
sbb
out
cmp
mov
stos
shlb
outsb
lods
cmp
mov
add
and
fsubs
addl
vfrczpd
insb
test
adcl
loopne
rclb
mov
faddp
mull
jmp
mov
das
ja
and
mov
rclb
pushl
les
jae
ja
xchg
les
aam
mov
mov
jno
cmp
ret
clc
mov
fs
xor
fimuls
stos
clc
pop
mov
adc
outsl
lods
or
aas
dec
xchg
mov
jno
cmp
and
mov
in
addr16
push
cmp
je
mov
mov
rorb
and
aas
mov
ret
lods
mov
pop
push
stos
mov
test
or
gs
inc
std
ja
jge
mov
adcl
jle
pop
sbb
and
adc
mov
mov
xchg
call
fs
cmp
ds
pusha
mov
jne
add
pop
sub
jns
fnstsw
push
lcall
xlat
dec
push
adc
icebp
and
xor
dec
cmp
push
jae
lock
lret
cwtl
mov
pop
jne
rcrb
pusha
stc
cs
mov
fidivrs
jl
in
mov
jne
lret
imul
mov
call
subb
add
inc
out
pop
push
fnstsw
lcall
sub
aam
jne
mov
mov
cltd
rcll
addr16
bound
push
lahf
test
pop
test
or
or
fs
insb
sbb
in
in
enter
ja
pop
inc
jg
pop
mov
xchg
mov
mov
lds
xor
shlb
inc
mov
or
paddsw
pop
std
pop
fistl
lods
pop
adc
mov
add
pop
inc
sbb
loop
in
out
cmpb
xchg
mov
aas
aas
movsb
adc
fmull
mov
add
jns
insl
mov
jb
stos
mov
adc
adc
mov
mov
scas
jo
fucomp
sti
je
jp
bound
mov
movsl
inc
inc
cmp
or
add
daa
inc
adc
fldcw
push
shlb
lds
dec
sahf
or
inc
sub
inc
inc
aad
fsubs
les
sbb
or
push
loop
add
jno
pop
fwait
imul
loope
fisubs
ret
mov
pop
cmc
dec
push
jno
aam
or
mov
pop
ja
aad
mov
sbb
stos
xchg
jns
xchg
int
das
pop
mov
xlat
mov
adc
cli
or
mov
ljmp
loopne
adc
sub
sub
pop
add
mov
adcb
pop
and
test
lret
aaa
mov
into
or
scas
pop
mov
jno
add
xor
jle
lds
iret
cwtl
mov
in
jle
sbb
ds
fs
out
mov
cli
jb
push
aas
cmp
push
push
inc
fnstenv
mov
dec
inc
sbb
gs
roll
cmpsl
xchg
mov
popf
mov
push
pop
add
ja
xchg
repnz
add
sti
xchg
imul
ds
add
scas
movl
xlat
movsl
repz
jo
xor
cmpsb
repz
movsl
aad
ljmp
jg
iret
dec
fildl
xchg
adc
popf
cli
ljmp
xorb
and
cmp
out
clc
shl
fs
push
int3
pop
mov
repz
rclb
push
mov
sub
pop
cmp
pop
filds
push
xor
jmp
adc
cmp
or
ljmp
es
xchg
add
fisttpll
dec
add
xor
dec
loop
lcall
inc
xchg
mov
jo
add
push
ljmp
xor
add
pop
std
out
mov
dec
adc
jmp
lahf
in
lock
xchg
gs
push
movsb
mov
sub
rol
stos
fwait
mov
mov
fdivrs
jae
jns
repz
push
jnp
mov
mov
push
sbb
sub
mov
dec
loop
icebp
into
mov
or
xchg
jne
mov
or
dec
je
mov
cmp
fisttps
push
inc
add
inc
loopne
push
push
jae
cmp
test
sbb
lret
xchg
into
xor
nop
jecxz
data16
lods
lods
fsubs
inc
pop
std
xor
into
sub
dec
mov
fisttpll
movsb
adc
leave
dec
dec
out
enter
aad
xchg
lods
pusha
push
gs
imul
ret
out
dec
fisttps
jbe
add
dec
test
xchg
adc
lock
addl
lods
jne
out
mov
add
pop
xor
and
insb
repz
imul
add
cltd
aad
xor
sub
sub
in
fucomp
mov
scas
dec
out
scas
insb
sbb
mov
mov
jecxz
push
mov
ja
sbb
xor
cmp
roll
sub
mov
adc
sub
sub
mov
cmp
int
cmp
movsl
adc
dec
test
add
or
je
or
xchg
test
add
xlat
jae
sahf
out
add
push
cltd
imul
imul
inc
or
mov
fcoms
mov
or
sbb
fldt
sti
pop
sub
inc
mov
movsl
sbb
mov
mov
outsb
dec
not
movsl
scas
xor
push
fisttps
cmc
cltd
sbbb
sub
lahf
pop
cmc
mov
cmp
andnps
add
ljmp
lods
out
scas
pop
lds
dec
add
add
or
out
mov
ljmp
add
cltd
mov
jns
aaa
insl
aaa
pop
ljmp
insl
push
imul
into
adc
mov
aaa
mov
into
test
mov
inc
test
xchg
sbb
mov
mov
mov
dec
imull
je
insl
int
or
loopne
jae
adc
lea
push
and
jle
add
adc
pop
jp
lret
out
in
xchg
xchg
push
or
mov
enter
fistpl
xor
pop
repnz
imulb
into
mov
outsl
out
out
dec
into
push
mov
cmpsb
test
insb
cmpsb
nop
push
mov
mov
sahf
jno
jo
push
push
loope
pop
ret
std
je
fcmovbe
push
enter
sti
xchg
pop
ja
icebp
add
fcmovb
cmp
incl
and
nop
inc
jecxz
jle
xor
arpl
sbb
push
jecxz
cmpsl
mov
cmp
xchg
cmp
xor
mov
and
insl
cmp
push
sbb
push
mov
inc
shll
scas
lds
stos
or
jae
fsubrs
mull
test
filds
cld
sub
push
push
lcall
aaa
or
cli
adc
adc
ds
pop
fimuls
adc
push
sub
push
and
mov
hlt
mov
push
push
ret
xor
cmp
int
cmpsb
adc
pop
push
adc
mov
jmp
and
inc
dec
xor
cmp
jne
inc
sub
addr16
mov
nop
sub
pop
cmp
repz
subl
cmp
mov
gs
psubsw
lods
into
mov
mov
dec
jp
sbbb
pop
mov
or
pop
fcompl
and
mov
dec
cmpsb
or
mov
adc
inc
add
mov
xchg
push
adc
out
sahf
enter
sub
xchg
int3
subb
dec
jmp
inc
mov
xlat
sub
mov
decl
jle
mov
dec
outsb
jecxz
shlb
xor
les
fnstsw
sti
inc
xor
leave
shlb
adc
inc
sbb
test
sarb
sub
jne
pop
inc
add
rcr
mov
scas
jl
push
adc
sbb
xchg
pop
push
push
outsl
adc
fucomp
sahf
out
xchg
daa
mov
roll
les
andl
test
mov
enter
xchg
push
xchg
mov
enter
pop
subb
adc
pop
enter
or
mov
imul
add
pop
into
push
and
dec
mov
stc
jbe
hlt
inc
mov
cld
jnp
fldl
mov
rorl
mov
inc
insl
jle
dec
mov
pop
add
push
lcall
cltd
sub
jnp
mov
into
scas
add
nop
mov
imul
aas
leave
mov
aaa
jmp
jmp
in
loop
sti
xorl
int3
xchg
mov
push
xor
lcall
inc
lret
gs
out
push
pop
mov
loope
or
jns
mov
lea
clc
fistpll
int
mov
or
notl
mov
pushf
jo
add
insb
jge
or
xchg
add
loop
fdivl
dec
xor
xchg
push
in
jb
loopne
pusha
fs
into
jae
popa
cmp
cs
push
jae
mov
test
repz
cmpsl
jno
add
dec
cld
int
jecxz
sub
mov
push
sub
sbb
sarl
dec
js
int3
push
add
adc
mov
pop
hlt
fsubl
sti
test
mov
inc
je
and
mov
je
addr16
adc
lock
mov
and
lea
aad
imul
addr16
xor
in
popa
rol
pop
sub
ljmp
inc
mov
mov
cmp
aad
mov
inc
lahf
pushf
int3
jae
pop
dec
or
pop
dec
aam
adc
pop
sbb
or
idivb
jbe
xlat
xchg
mov
in
push
test
dec
aas
and
mov
lcall
cld
cs
incb
popf
addr16
cwtl
enter
ret
pop
cltd
mov
pop
jecxz
lahf
int3
daa
adc
test
repz
std
and
lea
fsubrl
xor
das
push
faddl
out
lahf
mov
mov
or
mov
jecxz
mov
mov
sbb
inc
adc
out
add
dec
pop
das
fidivs
fisubl
or
popa
jl
xlat
stos
xchg
or
fwait
outsb
xor
fnstsw
jmp
jnp
pmaddwd
xchg
mov
jg
cmp
jne
das
loop
sbb
sbb
stos
push
popa
add
jge
xchg
mov
mov
fldenv
sti
and
je
test
xchg
xchg
pop
test
add
into
mov
xchg
xor
add
dec
sub
jne
enter
sbb
repnz
test
test
cmp
pop
out
cld
add
outsl
test
or
mov
mov
inc
and
add
jae
xchg
decb
and
and
xlat
mov
mov
sub
pop
sbb
adc
pop
adc
xchg
xlat
sub
mov
xchg
pop
xor
sbb
je
cmp
addr16
imul
shrb
lcall
jp
outsb
mov
lods
mov
lock
test
nop
in
push
ja
icebp
or
out
inc
push
add
push
jl
jg
arpl
xchg
mov
pop
fs
xor
test
or
mov
aas
pop
push
fwait
mov
xchg
dec
xchg
ss
loopne
fiadds
mov
popa
dec
cli
mov
fldz
and
cmp
mov
outsl
adc
cmp
or
icebp
sahf
hlt
loop
xchg
or
jl
aaa
and
jbe
test
cmp
or
lahf
cli
cmc
test
or
lret
pop
negb
test
pusha
push
insl
loopne
xor
fcompl
sub
bound
subl
jge
lahf
testl
or
xchg
push
mov
movsl
cmp
jecxz
xor
and
add
dec
imul
and
dec
out
popa
mov
int3
xor
test
or
mov
dec
mov
out
inc
jl
movsl
lods
ret
xor
dec
xchg
xchg
mov
movsb
jbe
jge
int3
adc
pusha
in
add
pusha
lock
add
mov
inc
fldt
je
ja
push
add
dec
enter
loopne
add
pushf
lret
xchg
enter
xchg
stc
fucomi
add
lods
and
jle
shrl
inc
data16
mov
xor
xchg
mov
inc
push
pop
inc
push
sbb
push
pusha
mov
fldcw
and
loope
insb
or
popf
jge
mov
fisubrs
sbb
sub
scas
cmpsl
out
mov
sub
pop
mov
mov
push
ficompl
jo
mov
out
and
or
lret
xchg
mov
adc
rcrw
pusha
sbb
outsb
xlat
lcall
in
out
xchg
imul
mov
mov
and
mov
movsb
pop
pop
xor
xchg
popf
push
adc
or
jb
dec
mov
call
xchg
push
pop
pop
test
dec
pop
lcall
clc
shlb
mov
popa
pusha
stc
sbb
pop
adc
loope
mov
inc
cli
outsb
xchg
dec
sub
inc
es
sti
add
jnp
sub
test
outsb
adc
outsl
pop
push
sub
cwtl
roll
inc
out
mov
popf
stos
add
sub
jne
push
daa
cltd
jo
jb
movsb
jecxz
mov
xchg
dec
xchg
jl
pushf
and
pushf
sbb
inc
outsl
cmp
decl
xchg
sti
lcall
and
repz
push
cmp
ret
jp
jmp
mov
push
adc
daa
mov
jns
out
xchg
add
stos
cmp
aas
mov
in
xchg
and
fldenv
daa
cld
stos
and
mov
inc
into
mov
fldcw
insb
addr16
cmpsb
xor
mov
loopne
fwait
ret
out
je
scas
sbb
nop
shlb
add
cld
sarb
shlb
mov
inc
cmp
andl
xlat
cli
jnp
adc
mov
or
lods
adc
lahf
js
ret
cmpsb
xchg
sbb
sti
imul
mov
stc
in
es
cmp
rcl
cmc
mov
and
xchg
sub
ljmp
mov
lds
cli
adc
xchg
jo
stc
mov
stos
imul
fimuls
mov
jecxz
cmpsb
and
cmc
jge
sbb
mov
fsubr
push
fnstsw
aas
int
insl
or
inc
sbb
insb
bound
pop
cmp
fdivrl
xlat
movsb
or
mov
test
orb
mov
push
mov
jbe
ret
test
rcll
dec
xor
push
xor
ljmp
mov
fists
inc
call
roll
iret
push
pop
sub
loope
sub
fsub
les
jmp
incb
clc
pusha
fstps
bnd
mov
clc
push
xchg
xor
in
push
sub
std
mov
push
jno
mov
jle
mov
jno
cmpsb
push
ja
dec
sti
imull
movsb
fcompl
sahf
outsl
gs
imul
pop
dec
loopne
pop
ljmp
decb
sub
repz
mov
lods
scas
lcall
cmp
push
inc
fistpl
enter
ja
pop
pop
lahf
test
and
mov
mov
xor
ret
hlt
les
push
mov
in
test
pop
mov
mov
xchg
scas
imul
divl
mov
mulb
js
pop
xorb
ret
push
pop
dec
rorl
jbe,pn
int
fs
fildl
lret
inc
leave
ret
mov
pop
shl
test
fsubl
roll
or
in
push
or
jmp
push
cli
pop
push
mov
in
rcll
push
movsl
adc
xchg
inc
or
aaa
pop
pop
add
dec
push
enter
movsl
cbtw
test
fldenv
lock
inc
xor
in
aam
push
mov
stos
call
or
mov
dec
push
cwtl
cwtl
psubb
ss
mov
cmp
mov
pop
sbb
aad
in
rolb
or
int3
hlt
pop
pushf
les
cmp
inc
cmp
dec
in
pop
xchg
in
pop
loope
adc
icebp
xor
fadd
out
imul
loope
pop
lea
loopne
push
xor
rcrb
rcll
pop
loopne
aam
iret
cmp
and
lcall
lret
lods
push
shr
xchg
xor
pop
pop
cmp
mov
pushf
cmpl
out
jp
divl
mov
or
test
out
push
std
mov
jp
cmp
add
addr16
js
ljmp
and
xchg
sbb
mov
adcl
pop
adc
sti
add
jne
std
outsb
scas
iret
aad
lahf
pop
shll
mov
jmp
pop
mov
xor
mov
psadbw
mov
test
lahf
mov
arpl
pop
pop
cmp
arpl
add
add
xorl
shlb
jp
stos
cmp
xor
add
add
dec
and
imul
mov
inc
fsubrs
das
cwtl
pop
mov
cmp
lcallw
sbb
sti
inc
movsb
imul
jne
mov
mov
call
jg
shr
lea
pop
push
rolb
adc
cld
mov
xchg
dec
roll
inc
or
lahf
mov
and
push
sub
push
arpl
cmp
fsubs
dec
adc
addr16
cltd
addr16
push
or
fucomp
mov
xlat
pop
xchg
and
add
or
mov
xchg
jge
in
daa
sub
push
xchg
add
mov
xlat
ds
ja
jmp
mov
mov
or
pop
leave
rep
ror
jno
scas
sbb
and
outsl
pop
cmp
andl
add
mov
std
outsb
ficoms
pop
ret
cli
mov
mov
dec
arpl
add
or
fisttpll
scas
mov
mov
orb
adcb
jbe
sbb
jno
pop
iret
sub
fsubr
popa
mov
pushf
aam
data16
xchg
mov
push
test
arpl
push
in
mov
cmpsl
ljmp
filds
mov
mov
pop
jae
divl
sub
pop
fcmovnbe
or
je
sub
jmp
fildll
sti
sarl
inc
in
pop
xchg
dec
xchg
lds
jp
push
in
mov
pop
jns
mov
movsl
mulb
sub
dec
fwait
xchg
idivl
sub
inc
xor
addr16
pop
loope
inc
in
push
cltd
mov
loop
jne
add
mov
sbb
mov
hlt
or
push
sarl
mov
das
js
adc
jle
mov
or
push
adc
insb
in
inc
mov
in
push
lods
pusha
gs
push
dec
xlat
faddl
lret
mov
rcrl
les
jle
or
lods
adc
mov
xor
sti
scas
call
std
imul
push
pushf
loope
sti
notl
mov
sahf
test
test
out
cmpsl
pop
xchg
adc
stos
js
stos
dec
and
iret
push
inc
stc
insl
jnp
add
xchg
mov
adc
lret
sub
ljmp
ret
addr16
inc
dec
pushf
and
paddsb
iret
lahf
loopne
xor
and
push
inc
push
push
jbe
xchg
call
out
or
and
cmp
push
nop
jecxz
mov
xchg
sbb
pop
mov
imul
pop
jl
call
push
loopne
ja
lret
imul
add
fs
mov
mov
mov
repz
add
cmc
incb
or
push
or
dec
icebp
imul
out
add
ljmp
cmp
or
push
sbb
pop
mov
cmp
sbb
pop
out
jne
or
inc
adc
ds
repnz
mov
push
lds
loop
ret
pop
rcrb
or
repnz
dec
aas
js
fadd
add
add
fmul
mov
xchg
dec
xor
aam
xor
mov
scas
mov
jg
push
ret
es
mov
xchg
sbb
lret
pusha
sub
das
int
xchg
mov
addl
fwait
dec
call
push
mov
push
leave
int
or
pop
and
outsb
out
outsl
push
xor
push
stc
mov
aas
movsb
in
add
push
and
add
mov
mov
adc
pminub
add
std
push
mov
shl
cltd
test
xor
rorb
lods
pop
subl
pop
adc
add
pop
iret
pop
xchg
and
lock
leave
aaa
mov
xchg
aam
in
xchg
push
ja
dec
int
mov
jl
es
xor
push
and
sbb
xchg
ljmp
push
sub
pop
lods
out
pop
jmp
pop
add
cmpsl
inc
mov
stc
lock
or
enter
enter
mov
lods
jo
mov
push
lds
cmp
fisubl
sbb
mov
lret
inc
mov
popf
add
fidivs
inc
icebp
jae
mov
js
ja
mov
decb
ffree
or
fldcw
fs
jno
out
pushl
sub
loope
ja
adc
dec
hlt
jg
out
or
imul
sub
or
inc
pop
xlat
jb
xor
mov
hlt
add
dec
das
lret
pushf
cld
mov
iret
mov
push
adc
aam
fstps
call
lret
xchg
mov
out
daa
sub
mov
outsb
sbb
push
ret
adc
inc
test
jo
jecxz
dec
sbb
stc
shl
das
loopne
cmp
jle
jo
repz
push
mul
shl
sub
call
xor
add
push
xor
mov
outsb
dec
sbb
xor
and
mov
sub
mov
cwtl
mov
adc
das
clc
inc
les
push
inc
inc
sbb
icebp
test
pop
mov
push
push
inc
xor
repnz
call
out
ss
mov
cmp
and
jbe
xchg
or
and
incl
xchg
xor
jno
dec
pushf
cmp
cmp
lds
mov
jle
cli
sub
test
jno
xchg
daa
xchg
ffree
add
push
push
in
ficompl
pop
aas
mov
jecxz
xchg
jb
das
jns
int
stos
cmp
add
pop
clc
fstpt
xchg
int
dec
out
push
xchg
xchg
or
jns
mov
iret
shrb
iret
push
stos
xchg
pop
dec
jo
cmp
push
xor
shlb
ret
pop
push
sbb
adc
cli
adc
cmp
dec
aaa
cmp
outsl
inc
jnp
cmp
mov
jb
jne
jnp
adc
xor
dec
inc
dec
bound
xchg
sbb
jge
les
or
sbb
scas
jmp
cli
dec
sbb
or
jp
les
pop
int3
push
idivb
cmp
or
add
push
or
mov
test
enter
cmpsl
xchg
nop
imul
loope
sarb
mov
in
adc
cmp
add
push
and
sub
int
jne
jmp
mov
rorl
push
jmp
fdiv
shl
arpl
testl
icebp
in
and
cvtps2pi
push
jae
cltd
or
mov
jmp
pushf
mov
push
insb
shll
and
push
fwait
xchg
stos
xor
sarl
lock
movzbl
imul
mov
popf
adc
push
test
adc
popf
pop
rcrl
es
xchg
jge
xchg
rcll
add
les
test
aaa
xchg
or
push
mov
dec
daa
sbb
sbb
pop
mov
xor
xor
addr16
jb
fcomps
cmpsb
push
sub
fcomps
test
xor
or
pusha
adc
dec
aaa
pusha
cwtl
shrl
push
in
cwtl
jecxz
das
imul
mov
xor
pushf
lret
mov
lea
testl
out
push
mov
shrb
cld
pop
dec
rep
repz
add
mov
test
xchg
or
lds
push
or
mov
mov
push
leave
imul
cmc
js
dec
jbe
out
mov
and
lds
mov
or
js
ror
mov
incb
add
scas
imul
outsl
mov
mov
aad
mov
aas
pop
inc
filds
add
cld
lret
in
ficoml
xor
sub
mov
mov
test
test
cmp
or
jb
xchg
mov
cli
adc
call
aam
imul
jbe
cmc
scas
rclb
lock
push
cli
cwtl
lret
mov
sbb
add
aas
push
jp
stos
aaa
add
cmp
out
and
xlat
sub
push
mov
jp
lret
std
lods
cltd
xchg
xor
pop
pop
jo
loope
dec
lahf
inc
pop
lods
fmull
dec
pop
lcall
sbb
pop
dec
or
cs
adcl
testb
push
in
dec
push
adc
movsb
cmp
xchg
and
stc
pusha
leave
ss
iret
aaa
mov
loopne
add
push
sti
sarb
mov
xchg
xchg
and
mov
mov
or
lea
sar
lods
pusha
cltd
or
in
pop
mov
jb
xchg
push
adc
and
jno
sti
je
pop
dec
push
test
lahf
negl
jb
sub
mov
jns
lds
mov
seta
iret
aad
pop
mov
rolb
and
pop
push
sbb
scas
or
lahf
jne
push
or
xchg
das
aam
cmpsl
or
dec
xchg
cmp
mov
lods
movsb
jecxz
sub
out
outsl
xor
test
and
sub
fcomp
fsubr
jae
adc
inc
sbb
lret
pop
dec
add
pusha
xor
lret
xchg
leave
daa
lods
pop
cwtl
popa
push
int
adc
shll
hlt
loop
jbe
dec
xchg
test
or
push
movsb
xchg
cmp
int
loopne
sub
icebp
lods
sub
mov
imul
xchg
repz
push
push
pop
xchg
push
mov
inc
outsl
les
in
sub
loop
popf
pushl
outsl
stos
imul
stc
shlb
lods
cmp
imul
and
insb
or
fstl
pop
in
rorb
lret
test
shrb
push
mov
sbb
mov
fidivrl
push
mov
or
mov
aaa
iret
inc
adc
or
push
cmpsb
call
inc
loope
push
or
lock
adc
mov
xlat
pushw
cmpsb
jge
test
jne
push
inc
mov
cli
adc
jmp
xchg
sbbb
sbb
push
dec
mov
cmp
add
xor
pop
fisubrs
in
pop
mov
insb
call
int3
add
lock
ja
or
leave
cmp
lret
sbb
aam
jno
lahf
mov
clc
popa
mov
mov
or
mov
inc
mov
push
mov
sbb
fs
aam
xchg
das
decl
fildll
mov
and
fcoms
dec
mov
jno
add
mov
rol
shrd
cmp
js
dec
cmp
lret
dec
out
push
xchg
pushf
sbb
aaa
xor
jnp
jle
loope
daa
xor
dec
fs
fmull
pushf
mov
jbe
push
dec
push
dec
cmp
dec
stos
out
inc
inc
jns
mov
dec
and
testb
mov
js
inc
jg
hlt
add
pop
push
in
or
stos
mov
cmc
jbe
cmp
dec
mov
out
mov
cli
or
pop
jge
inc
repnz
and
mov
and
int3
insb
out
push
jbe
jl
and
cld
dec
sub
mov
jb
or
add
push
pop
mov
mov
sbb
dec
out
xchg
fisttps
ret
ljmp
jl
sub
sub
lahf
push
iret
dec
stc
sbb
cmp
dec
scas
std
loope
mov
arpl
sub
loop
popf
mov
mov
adc
inc
js
das
cmp
in
ret
clc
add
incl
dec
imul
lahf
out
ret
lahf
fisttpll
xor
mov
sahf
call
mulb
mov
jle
xchg
ja
adc
dec
aam
sti
in
inc
jp
cmp
neg
int
xorb
jle
mov
out
out
ja
push
jmp
or
inc
ljmp
hlt
insb
leave
insl
ja
insb
popa
into
mov
ret
push
inc
in
inc
and
insl
add
call
in
cmp
movsl
adc
mov
or
adc
idivb
jo
pop
mov
xor
dec
test
mov
mov
scas
iret
lods
loop
dec
loopne
cmp
jbe
repz
mov
push
bnd
hlt
pushl
or
movlps
orl
jp
pop
imul
adcl
jle
cltd
sub
loope
cmp
hlt
xchg
push
rorl
lock
sub
push
mov
lods
cwtl
mov
call
and
in
js
sti
push
jp
nop
and
sahf
leave
push
mov
inc
pop
call
std
out
mov
fsubl
fisubs
or
cmp
gs
cmc
cli
aad
inc
outsb
pop
nop
inc
add
inc
imul
adc
inc
add
bound
in
cmp
jo
dec
xchg
dec
sub
or
aad
and
addr16
adc
imulb
or
add
imul
push
lea
or
mov
push
add
js
push
clc
inc
adc
imul
adc
les
popa
insb
push
or
loop
pop
testb
loopne
and
xchg
lods
cmp
std
ds
mov
lods
dec
fwait
pop
xlat
data16
enter
sbb
loope
cmpl
clc
adc
rorl
fisubs
ret
and
negb
in
movsb
xor
jle
xchg
add
push
fmulp
jo
and
and
mov
jle
dec
mov
mov
jo
scas
push
cltd
popa
out
jo
mov
or
cmc
inc
scas
in
cmc
in
shll
fsubs
sub
mov
aad
xor
mov
mov
outsl
mov
popa
push
ja
movsb
enter
ljmp
mov
and
loopne
cs
adc
push
xor
sbb
in
icebp
loopne
push
xchg
mov
test
and
test
pop
push
or
xor
xlat
shl
ss
push
sbb
xchg
fs
dec
cmp
andl
adc
sub
mov
xchg
loop
cltd
aaa
add
mov
outsb
jecxz
pop
sbb
imul
add
xchg
aaa
cmp
aas
xor
jmp
push
cltd
rol
add
mov
sbb
pushf
sbb
js
dec
ljmp
gs
rcrl
jmp
popf
stos
mov
mov
pop
sti
push
jecxz
repnz
fisttpl
nop
push
mov
cmpsl
adc
push
in
leave
add
neg
add
sub
mov
sbb
in
push
mov
adc
movsl
cli
and
pop
es
out
jno
cltd
xor
xor
and
cltd
pushf
xchg
clc
out
mov
lods
bnd
nop
jbe
add
fisttpl
pushf
mov
mov
push
sbb
lock
in
push
pusha
out
leave
mov
mov
sbb
pop
pop
sub
push
mov
cmc
inc
lea
dec
xchg
cwtl
jg
test
test
inc
or
imul
popa
in
push
loop
lds
mov
mov
shll
fwait
jo
scas
cmpsl
mov
ja
sub
js
add
pushw
cmpsl
repz
fnsave
pop
push
rclb
mov
add
rcrl
mov
jbe
pop
out
push
movb
pop
lods
sub
mov
pop
inc
lds
mov
dec
jnp
pop
mov
sbb
add
repz
mov
aad
inc
lret
mov
stos
hlt
sahf
sbbl
cmp
pop
pushf
inc
pop
sub
lea
subb
mov
mov
enter
pop
or
add
in
out
int
or
xchg
movsl
dec
cmp
jmp
mov
and
push
out
outsl
push
cmp
jae
in
or
call
push
cmp
push
lret
and
and
cld
icebp
push
cmp
es
mov
xchg
popf
sbb
outsl
xchg
sbb
mull
gs
aam
arpl
gs
push
or
cmp
lcall
cmp
inc
mov
dec
lcall
pusha
pushf
cmp
cmpsb
iret
dec
fidivl
lahf
push
scas
inc
inc
test
icebp
jmp
cmp
data16
shr
das
push
dec
push
mov
mov
cltd
sti
or
mov
jle
jecxz
fs
jne
push
sub
sub
sets
mov
je
dec
stc
jns
lea
mov
jbe
jne
mov
push
mov
test
cwtl
cwtl
imul
dec
add
jl
out
pop
enter
mov
push
lods
insl
pop
gs
jbe
jle
add
pop
sbb
shlb
add
test
das
out
mov
push
mov
js,pt
ja
add
popa
push
daa
dec
xorl
or
clc
ror
adc
test
sbb
ss
cmp
xchg
cwtl
pop
pop
jb
sbb
bound
push
inc
das
aaa
lods
or
inc
add
push
out
dec
ja
mov
es
shl
xchg
cmc
xchg
outsb
in
popa
xchg
js
enter
lds
push
mov
or
inc
lea
mov
psubb
jne
sub
dec
mov
imul
push
xor
mov
jo
clc
je
andb
mov
ja
xor
push
cltd
sbb
int3
rorl
or
add
mov
aaa
pop
jb
mov
iret
add
sti
xchg
push
adc
ret
pop
or
xabort
jge
mov
test
in
dec
pushf
out
icebp
jo
in
mov
pop
jmp
and
inc
jle
lock
mov
inc
in
roll
add
clc
test
mov
mov
pshufw
cs
push
pop
mov
lds
incb
mov
pop
xchg
ljmp
loop
adc
lret
jg
out
xor
inc
mov
cmp
dec
and
arpl
xor
fstps
je
cmp
mov
push
push
inc
pop
add
fs
dec
jbe
xor
mov
push
dec
sbb
jo
fprem
adc
leave
jo
and
inc
pop
inc
push
fwait
hlt
pop
nop
scas
push
iret
hlt
pushl
fnstsw
xor
das
hlt
push
insl
xchg
lds
addr16
cmp
imul
ror
mov
push
hlt
mov
push
call
aam
mov
fdiv
mov
insl
xchg
stos
sub
movsl
and
fs
mov
aad
ljmp
jb
shl
jns
into
mov
es
lret
mov
adc
iret
out
mov
sub
sub
sbb
adc
inc
xor
pop
xor
sti
ljmp
push
repz
loop
and
inc
xlat
repnz
ljmp
dec
dec
jbe
aam
fdiv
jo
sbb
and
out
inc
popf
ret
negl
or
dec
test
inc
lret
adc
scas
add
sbb
pop
adc
dec
inc
divb
push
push
aam
cmpb
test
push
sub
adc
push
test
dec
cmp
inc
sbb
cmpsb
push
or
aaa
pusha
out
rcrl
mov
loope
je
pop
jne
addr16
popf
xchg
adc
push
ljmp
in
cmp
pop
pop
mov
in
mov
mov
jns
xchg
imull
pop
xchg
xchg
add
mov
sub
jbe
or
scas
add
and
mov
out
fdivrl
mov
mov
andl
jg
mov
mov
sti
mov
cmpsl
sub
push
in
pop
xchg
paddusw
stos
sbb
xchg
scas
mov
insb
in
and
inc
out
pop
pop
jge
pcmpgtw
pop
sub
mov
sbb
mov
cmc
and
repz
mov
pushf
mov
xchg
out
movsl
test
in
cli
and
ficoml
xor
sub
and
pusha
mov
out
jmp
add
adc
jbe
ljmp
sarb
or
fisubrl
sub
mov
stc
cmp
stc
aas
int
roll
addb
les
inc
xchg
jbe
cmp
jecxz
inc
mov
dec
fldt
xor
pushf
clc
or
xchg
shr
faddp
mov
ljmp
lods
add
sarb
aaa
or
pop
les
jae
and
pop
fidivrs
in
jb
dec
jmp
aaa
xor
inc
jle
push
fwait
fs
psrlq
inc
gs
cmpsb
bnd
pop
sbb
jo
sbb
sahf
xor
sub
and
mov
sub
mov
or
ficoms
aas
outsb
outsl
inc
sub
movsb
jns
mov
dec
xchg
add
scas
push
ds
fistpll
mov
fcmovnb
adc
inc
int
pop
pop
sti
cmp
xchg
sti
push
sbb
add
imul
mov
mov
aam
mov
xchg
cltd
in
ja
mov
mov
out
dec
dec
mov
loope
mov
gs
fcmovnu
jle
add
cwtl
add
jno
sbb
cmpsb
sbb
inc
popa
les
repnz
jmp
sbb
icebp
cltd
addl
pushf
pop
fwait
xchg
mov
mov
xchg
mov
sti
add
outsb
lods
xchg
sub
dec
and
add
rcll
fcmovbe
mov
test
mov
and
jo
test
rclb
insb
pushl
mov
lcall
out
les
lock
leave
nop
adc
sub
in
pop
adc
daa
repnz
add
lret
and
insb
in
xchg
fsubs
sub
sbb
mov
shll
inc
jb
fistps
inc
daa
addr16
or
dec
out
xchg
mov
out
pop
gs
sub
push
xor
loopne
adc
jae
jne
push
mov
cmp
mov
movsl
hlt
mov
cmp
loope
std
call
xor
cmpxchg
push
jle
jmp
stos
mov
stc
inc
push
sahf
fs
push
xor
and
addb
inc
and
out
inc
ret
out
cmp
outsb
cmp
inc
xchg
dec
mov
jnp
cmc
and
cltd
jp
inc
jae
push
xor
add
dec
int3
stos
xor
jnp
sbb
push
pop
cmpsl
std
sub
rcrb
mov
adc
jmp
add
mov
mov
fwait
sbb
clc
pop
inc
popf
imul
pusha
inc
call
pop
xorl
in
movsb
cmpsb
adc
scas
bound
in
mov
addr16
ja
jmp
inc
dec
aad
pop
adc
and
call
adc
out
jae
or
shrb
sub
mov
push
add
mul
pop
iret
push
cmp
jo
sbb
or
enter
pop
inc
int
push
aam
fstpl
or
ss
sub
xchg
xor
mov
mov
cltd
test
rcrb
les
cmp
jecxz
mov
imul
xor
mov
cltd
in
bound
test
and
mov
stos
or
std
ret
pop
push
jno
int3
jns
jle
es
and
jnp
not
test
enter
jl
fidivl
push
insl
das
daa
pusha
adc
mov
movsl
call
mov
mov
popf
rolb
iret
je
shll
pop
adc
mov
sbb
aad
cmc
jb
jecxz
gs
rcrl
push
arpl
mov
dec
and
xchg
mov
mov
pop
add
test
adc
fsubrl
fistps
lret
or
adc
lret
adc
outsl
mov
mov
negb
mov
jnp
fdivrs
negb
lcall
daa
pop
fwait
sarl
test
insl
add
lret
mov
std
mov
push
aam
push
movq
sub
mov
bound
and
test
xchg
outsb
mov
out
lcall
sub
stc
and
std
xchg
scas
inc
je
and
loopne
test
xor
xchg
pop
add
lock
adc
mov
pop
inc
lret
lcall
lahf
loope
pop
mov
shrb
xchg
or
and
jecxz
push
mov
and
cltd
mov
or
loop
pop
mov
scas
dec
jne
mov
ficoml
aam
dec
add
pusha
xchg
adc
adc
jnp
fwait
jbe
repz
mov
ds
mov
pop
cmpsl
iret
xchg
ret
inc
popa
and
pop
rorb
pop
lcall
xor
lret
mov
xchg
dec
push
filds
xor
mul
mov
xchg
add
add
enter
fwait
mov
push
sub
int3
lods
fstps
jecxz
push
mov
mov
call
jecxz
sbb
sub
std
xchg
xor
lods
or
add
test
movsb
aad
push
jmp
dec
ret
mov
pop
mov
sbb
andb
sbb
fcoms
call
mov
cmp
mov
int3
inc
add
dec
mov
lret
pop
insb
push
repnz
imul
jmp
hlt
sub
inc
pop
int
adc
pop
push
add
dec
add
pop
stc
or
pushw
jnp,pn
push
mov
test
jl
stos
cmp
insl
fnsave
int
inc
xchg
mov
adcb
stos
in
insl
push
xor
adc
mov
aaa
subb
sar
and
sub
dec
nop
mov
shlb
addr16
notb
std
pop
sub
and
push
push
pop
and
aaa
xlat
add
pop
insb
push
mov
shrb
lods
sahf
mov
xchg
repnz
cmp
mov
mov
adc
stos
popa
scas
mov
shlb
mov
sti
adcb
xchg
jno
jae
and
sti
mov
inc
loope
sub
in
mov
push
pop
fxch
lcall
cmp
cmpsb
and
lcall
xor
je
jae
popa
and
jmp
xchg
imul
or
dec
mov
les
ljmp
sahf
sbb
lods
adc
inc
sub
ja
sub
in
sbb
cmp
aas
lret
xor
jb
jae
push
mov
adc
mov
xchg
xor
push
fisttps
jno
cs
sbb
jl
sub
push
call
nop
dec
pop
or
xor
repz
push
dec
adc
aam
jp
jae
roll
jmp
push
into
mov
jl
or
lods
sub
hlt
xchg
test
jns
int3
sbb
pusha
imul
push
sbb
push
pop
sbb
xchg
js
mov
pop
mov
icebp
lret
das
jl
repnz
out
push
xor
out
mov
inc
test
xchg
xchg
sub
jb
add
sbb
scas
fcmovnu
movsl
pushf
mov
mov
data16
mov
pop
mov
ret
xor
xchg
adc
push
jp
cmp
loope
shll
push
dec
jge
push
inc
sub
xor
add
cmp
js
test
xor
cwtl
jge
xor
data16
stos
sbb
push
jl,pn
inc
inc
and
inc
mov
stc
imul
roll
xchg
fsubrp
lret
add
mov
test
sti
dec
mov
ss
and
add
push
adc
aas
mov
clc
repz
and
add
push
imul
cwtl
and
mov
mov
mov
xor
xor
sub
int
mov
clc
push
int3
jnp
in
cmp
data16
adc
mov
aam
or
imul
lret
adc
std
ds
cwtl
mov
mov
sub
jl
push
and
xor
enter
push
adc
sub
stos
cmp
xor
movsl
push
mov
adc
push
xor
mov
mov
cmpsl
mov
xor
cmpb
xchg
test
decb
fiadds
mov
movsb
adc
test
in
jp
adc
dec
mov
or
pop
scas
loope,pn
dec
pusha
add
push
or
and
cld
mov
in
pushf
dec
icebp
cmp
mov
or
lea
fcomps
inc
cmp
stc
mov
xchg
test
jnp
or
lds
mov
add
popa
arpl
aam
lret
mov
mov
ljmp
push
les
xchg
in
in
insl
aad
pop
add
inc
push
cmp
cmpsb
ss
aad
mov
jmp
aad
mov
subb
ja
dec
sub
outsb
xchg
and
sub
dec
ret
mov
leave
int
mov
or
test
push
mov
adc
movsl
mull
cmp
mov
in
imulb
push
or
icebp
jl
addr16
out
jge
mov
lea
lods
sub
jbe
cmp
inc
cmp
dec
pop
fcmovnbe
push
sub
outsb
xchg
in
out
pusha
adc
dec
fisubl
adc
jae
dec
popf
inc
pop
mov
icebp
inc
ja
push
js
pop
and
loop
add
add
ror
adc
ds
cmpsl
and
inc
jne
mov
adc
faddl
add
icebp
or
cwtl
fiaddl
dec
std
test
loopne
mov
aam
in
pop
cmp
in
dec
jae
lea
push
sbb
decl
cmp
sub
xlat
mov
cmp
sarl
loope
sbbb
jnp
mov
xchg
mov
mov
mov
hlt
faddl
lea
cmp
xlat
call
rorb
push
dec
pop
lods
pop
insl
dec
pusha
push
adc
push
inc
in
adc
add
inc
mov
add
test
out
jp
jecxz
or
mul
in
out
xor
push
mov
adc
iret
inc
into
clc
jmp
inc
cli
sub
cmp
xor
or
adc
jns
cltd
xor
mov
arpl
test
enter
arpl
cmpsl
jbe
xor
fwait
and
ss
lods
lcall
into
leave
scas
outsb
inc
jae
mov
aad
push
out
je
cmp
adc
jnp
push
xor
ss
aas
push
ss
dec
xor
mov
sbb
xor
daa
sbb
insb
or
inc
cmp
xchg
xchg
imul
arpl
mov
cmp
xchg
push
adc
or
adc
xchg
and
lahf
sbb
popa
push
imulb
movl
ds
ror
testl
notb
dec
hlt
mov
cli
int3
bound
pop
lock
shll
mov
mov
dec
imul
dec
ficomps
ja
dec
data16
pusha
push
or
push
addb
or
inc
xor
rcrb
dec
sbb
mov
iret
pop
adc
loopne
mov
dec
sti
movsb
pop
cs
pop
jmp
or
add
lods
das
mov
out
in
push
test
ja
out
ja
pop
mov
pop
inc
push
pop
push
add
es
pop
mov
aam
xchg
xor
movsb
mov
or
mulb
ret
jae
pop
call
xor
mov
int
loope
inc
inc
scas
ja
pop
cwtl
outsb
jo
or
push
test
cmp
popa
nop
aad
sub
or
pop
idivl
mov
lods
nop
addr16
icebp
out
push
dec
or
mov
pop
mov
jnp
out
jge
xor
repnz
ret
imul
push
jae
xorl
mov
dec
mov
mov
push
fsubl
and
xor
sub
xor
roll
jb
cld
repnz
clc
in
cmp
dec
sbb
and
adc
and
push
jg
int3
and
shll
les
inc
mov
mov
add
das
aaa
hlt
xor
test
push
scas
clc
shll
inc
jp
popa
fisttpl
mov
jmp
cmp
lea
cmp
add
ret
sub
xor
jno
js
addr16
lcall
in
mov
mov
lret
xor
outsl
mov
into
aas
xchg
dec
lock
mov
mov
jb
xchg
xchg
int
icebp
push
inc
push
idivb
pop
sub
lahf
div
fbld
mov
adc
add
rcrl
enter
inc
loope
idiv
testb
dec
add
dec
mov
divb
mov
aad
bound
xor
jl
jae
adc
sbb
mov
sbb
add
mov
jp
inc
mov
popa
jge
shrl
sbb
mov
stos
inc
outsb
test
cmp
call
iret
xor
aaa
xchg
dec
sbb
hlt
idiv
pop
out
test
lock
fiaddl
adc
jbe
lahf
jno
in
sahf
insl
mov
jmp
loop
mov
adc
mov
xor
xchg
push
push
fidivl
je
xor
xchg
pop
fisttpl
pop
or
cmp
jge
mov
js
stc
rcl
jle
push
mov
lea
ja
add
sti
pop
xchg
fidivrl
jg
aad
push
and
mov
lret
mull
pop
cli
xchg
mov
push
movl
pop
pop
pusha
js
pop
shrl
cmp
outsb
jbe
adc
scas
or
pop
dec
push
adc
nop
jbe
in
test
sub
in
sub
mov
inc
sub
aam
incb
adc
nop
cs
ficomps
sbb
aad
cmc
and
mov
cmp
scas
push
movsb
xchg
call
adc
pop
pop
orb
xchg
cmp
insb
mov
pop
cmp
fwait
dec
push
adc
subl
sbbb
dec
pop
in
cltd
jno
je
adc
pop
lea
mov
repz
adc
sub
popf
jp
jmp
mov
mov
arpl
inc
orb
add
roll
decb
cli
push
cmp
ss
dec
shll
pushl
ljmp
jns
sub
pushf
xchg
and
ret
sub
or
mov
sub
hlt
mov
gs
add
ljmp
in
sub
or
lret
pop
xor
rcrb
or
rorb
cs
cmc
sub
es
sub
push
stos
addr16
mov
mov
sbb
push
mov
pop
stos
mov
lods
daa
pop
shll
enter
shrl
add
inc
add
cld
out
mov
cmp
lea
js
mov
lock
adc
in
mov
in
iret
out
enter
std
cmp
sbb
mov
inc
nop
cmp
mov
aaa
mov
aas
dec
js
loop
inc
inc
out
lea
sbb
adc
pop
cmp
lret
jb
pop
and
mov
pop
pusha
lods
arpl
iret
adc
les
pop
mov
stc
fsubl
xor
inc
out
lods
lds
push
fisubrl
dec
jae
dec
aaa
cmp
push
fldenv
lret
jmp
out
jno
add
fldcw
shr
xchg
call
push
jecxz
imul
daa
fs
pop
adc
pusha
insb
dec
loopne
out
xchg
sbb
and
nop/reserved
dec
std
movsl
pop
inc
inc
mov
leave
aaa
loopne
fbld
adc
xor
add
adc
iret
fadd
xor
or
xchg
lea
mov
xchg
sub
std
inc
addb
aad
push
je
mov
cmp
cwtl
cmc
xor
add
pop
loop
inc
mov
or
adc
out
mov
mov
push
mov
inc
aad
shlb
inc
pop
das
xor
lcall
int3
shlb
jae
fiaddl
mov
jle
imul
ret
hlt
fcomps
inc
mov
jns
cmp
fcompl
pop
stos
int
pop
sti
push
mov
or
orl
cmc
or
imul
mov
inc
ja
negb
dec
aad
ss
mov
dec
mov
cmpl
jmp
mov
pop
in
shrb
aad
pop
in
sar
ret
cs
mov
sbb
pop
mov
xchg
sub
push
mov
pop
and
inc
hlt
popa
mov
sbb
adc
aad
mov
addr16
mov
sbb
aad
mov
mov
push
add
lods
or
mov
and
repnz
pusha
pop
out
mov
popl
or
xor
mov
or
ljmp
add
xchg
push
clc
es
pop
push
sub
push
in
clc
ljmp
fadds
pop
scas
jns
jbe
cmp
out
mov
test
dec
xchg
cmp
cmp
mov
add
mov
sub
jmp
lahf
pusha
test
lret
ds
clc
rcr
sti
jae
hlt
fs
scas
shll
jg
xor
pop
sbb
lock
ret
addr16
fisttpll
subl
inc
or
sub
mov
xchg
pop
inc
popf
icebp
mov
sahf
mov
repz
movsl
loopnew
fidivl
outsl
aaa
loopne
lcall
lret
cmp
aas
lea
inc
out
orl
push
loop
mov
bswap
mov
push
xchg
pop
pop
add
xchg
cld
adcb
cmp
lods
aam
sbb
outsb
dec
sbb
fldt
je
test
insl
xchg
cmpsl
dec
pop
pushf
sbb
xor
cmp
pop
cmpsl
add
sahf
outsl
jae
jmp
cwtl
imul
in
pop
lret
jp
jnp
test
pop
push
movntq
out
adc
or
jb
std
pop
sbb
lods
mov
mov
sbb
lods
jmp
es
enter
int
leave
out
mov
out
mov
imul
nop
adc
fistpl
dec
or
pop
push
mov
das
mov
add
out
dec
xacquire
movsl
cmp
clc
push
cmp
or
add
xchg
xor
shrb
and
sahf
scas
daa
dec
int3
insl
loop
iret
nop
sub
out
mulb
sbb
adc
lock
inc
jp
int
in
sahf
dec
and
in
test
sbb
in
or
push
push
dec
movsl
push
dec
add
sub
insl
or
cmpsl
js
sub
enter
cmp
mov
icebp
cmpsw
ja
shr
ret
pusha
addr16
out
pushf
shrl
hlt
je
xor
xlat
sti
pop
insb
sub
cld
or
mov
sub
ljmp
and
and
push
xchg
repz
sbb
push
pusha
push
pop
cmp
push
lahf
into
shrl
sbb
add
call
fldl2t
add
sti
loop
mov
xchg
pop
xchg
sbb
pop
sub
dec
ret
loop
out
fwait
sbb
outsb
repnz
jno
dec
out
cmp
lcall
xor
and
mov
cmp
jp
inc
shrl
popa
flds
mov
jno
pop
cltd
popf
lahf
inc
inc
fimull
mov
jg
adc
xor
les
pause
xchg
jb
mov
mov
imul
and
inc
xchg
push
pop
sbb
lock
bound
xchg
test
mov
fcomps
sbb
push
lods
mov
insl
pop
pop
into
lret
jbe
stos
mov
mov
shl
sti
push
outsl
jg
xchg
sti
mov
pop
fucomi
sub
add
sahf
cmp
mov
dec
call
pop
ltr
popf
mov
gs
call
or
imul
rclb
jmp
filds
add
lret
test
mov
mov
xor
pop
outsb
mov
mov
jo
pop
push
sti
cmp
daa
push
adc
mov
insl
push
lahf
cmp
aas
das
test
pop
pop
pop
inc
outsl
aas
ds
mov
sbb
pop
aad
add
cmp
jecxz
cmp
mov
jb
out
sub
aam
cmp
enter
mov
xor
sub
mov
and
inc
pushf
xor
test
add
in
mull
sbb
loop
dec
fdivrl
test
jle
out
xlat
cmp
xchg
cmc
sub
loopne
fsubrs
and
push
out
out
cmpsb
and
add
test
sub
jnp
cmp
cmc
lea
dec
sub
test
out
int3
cld
mov
sub
xor
lods
push
stc
and
cmp
sbb
pop
cmp
inc
test
mov
in
repnz
xchg
xchg
xor
sub
inc
mov
mov
test
popl
pop
out
pop
int3
or
xchg
nop
sbb
xor
cmp
xchg
jo
mov
xor
pop
and
sub
pop
jnp
lods
rcrb
out
outsb
lret
js
fcom
test
es
sub
aam
stc
les
cmp
and
ret
insb
mov
cmp
into
inc
mov
add
or
insl
push
addr16
or
lock
inc
or
arpl
negb
or
pop
nop
cwtl
ret
sbb
int
mov
or
insl
mov
inc
adcl
adc
jo
clc
inc
xchg
clc
cmp
sub
mov
in
imull
notl
lods
sub
hlt
repnz
fsubl
iret
ljmp
or
jl
std
mov
popa
jmp
out
cmp
jns
aaa
push
pop
loop
inc
aam
cltd
jbe
std
outsl
or
movsl
incl
inc
clc
dec
lods
cmpl
sbb
data16
dec
shr
adc
push
stos
add
sub
repz
popf
xor
mov
call
push
mov
inc
and
imul
mov
movsb
fsts
fs
std
inc
mov
loop
cmp
pop
es
subb
mov
add
add
addb
or
ljmp
pop
mov
rclb
xchg
dec
inc
inc
mov
in
js
inc
dec
mov
mov
jae
insb
icebp
xchg
mov
jb
mov
or
push
dec
mov
jns
lar
addb
insb
pop
fnsave
mov
ret
xorl
sub
jmp
mov
mov
push
pop
imul
addr16
cmp
ret
fimull
jne
push
sbb
cmc
js
in
lret
mov
clc
rcrl
outsb
pop
addr16
xchg
sbb
jae
xor
adc
dec
xchg
lods
cmp
dec
xchg
out
push
mov
pusha
popa
push
outsl
push
mov
cmc
and
sub
aaa
and
sbb
out
loope
andb
cltd
xchg
lock
pop
jnp
xchg
orb
push
lret
enter
jns
outsb
add
push
and
imul
mov
xor
lds
or
sti
hlt
jecxz
inc
xor
sub
and
xchg
mov
jnp
int
lcall
mov
imull
imul
fdivrl
mov
out
dec
dec
pop
cs
mov
adc
push
sub
mov
mov
mov
gs
lods
pop
inc
scas
imul
ret
mov
daa
push
add
cmp
stos
adcl
xor
or
inc
push
dec
inc
in
and
pop
mov
inc
filds
nop
cmc
aas
jecxz
jno
inc
mov
lea
jmp
jnp
fcmovbe
negb
lods
cld
pop
push
mov
pop
cmpsb
dec
shl
les
in
jmp
nop
cmp
out
iret
mov
lret
dec
fucompp
rorl
push
pop
xor
outsl
jecxz
and
jg
lock
cmpsb
cmp
sahf
jecxz
push
xor
jl
into
dec
loope
dec
cmpsb
ret
adc
add
xchg
sahf
mov
mov
dec
leave
push
xchg
cltd
sub
xor
xchg
pop
xorl
mov
mov
in
aas
or
outsl
popa
int
in
ret
leave
sub
sub
cli
in
and
xor
pusha
cli
outsl
pop
xor
arpl
mov
and
ja
lea
fldcw
xchg
cwtl
cmp
negb
mov
jle
je
pop
push
push
dec
lret
popa
jnp
dec
pop
in
in
adc
or
fiaddl
lret
jne
mov
rolb
push
insl
movl
push
das
pop
mov
arpl
cmp
mul
jo
int
iret
jb
in
aas
cmp
popf
or
outsl
and
fwait
loop
out
jns
jb
loope
outsl
scas
je
push
and
push
scas
sbb
in
shrb
cmp
rcrl
ds
dec
jp
pusha
cmp
dec
sub
cmc
and
loopne
lds
xor
inc
jno
es
push
fimuls
push
gs
aad
push
mov
sbb
mov
int3
jmp
out
scas
sub
scas
shlb
dec
add
lock
pushf
stos
add
rcll
mov
imul
mov
xor
stos
lcall
sbb
lock
mov
cmpsb
clc
mov
dec
push
and
adc
sbb
test
push
cld
pop
fcmovb
xor
cmpsl
daa
or
je
pop
orl
push
lahf
inc
ret
movsl
mov
enter
mov
in
xor
rcrb
push
and
in
xor
lret
xchg
or
sbb
cmp
cmpsl
add
dec
mov
int3
jne
out
lcall
pop
imul
sub
sub
xor
roll
icebp
mov
dec
loopne
test
push
inc
xchg
push
in
lea
jmp
add
test
pop
shrb
push
adc
jb
inc
lahf
popf
lea
mov
jg
fs
xchg
add
enter
push
jno
ljmpw
in
in
loope
pusha
add
sub
ljmp
mov
xlat
movsl
loop
fwait
mov
idivb
dec
sbb
fldt
mov
sub
mov
fs
rcrb
cmovno
or
cwtl
dec
xchg
cmpsb
fimull
jbe
sub
cmp
push
mov
cli
aas
cmp
adc
sbb
add
sbb
mov
dec
js
ss
das
mov
pop
aaa
sbb
add
cmp
lcall
rcll
and
stos
test
and
fidivl
subl
into
dec
sub
cmp
fsubrl
xchg
out
js
dec
out
cli
xchg
xor
ret
mov
inc
mov
sti
mov
mov
push
xchg
adc
mov
aad
fsubrl
sub
push
loope
cmc
add
xchg
dec
ljmp
mov
arpl
ret
jmp
insb
cs
dec
adc
movsb
ja
roll
sbb
sub
push
lods
add
leave
push
and
outsl
push
or
mov
ficoml
and
mov
xor
lock
orb
pop
bound
jb
pop
mov
dec
inc
das
xor
bound
jnp
call
jg
xor
push
je
jne
fisttps
inc
push
adc
and
int
push
loope
or
int3
sbb
mov
scas
inc
jns
jno
mov
sahf
cltd
sbb
int
lret
cltd
pop
push
iret
jl
jns
dec
inc
out
pop
add
sti
and
fistpll
popa
sbb
mov
mov
sub
iret
mov
xchg
jae
push
sub
adc
jg
or
inc
aas
and
push
aam
push
sbb
xchg
xorl
xor
cmc
mov
adc
push
mov
sub
icebp
out
mov
mov
push
popf
sbb
ret
xchg
sti
int3
jle
popf
add
xor
out
popf
fsubl
negb
cmp
dec
or
sbb
test
test
sbb
pop
push
pop
mov
adc
sbb
sbb
adc
add
loop
inc
cmp
arpl
lahf
es
dec
inc
lahf
adc
mov
xlat
or
mov
pop
mov
or
ds
ja
xor
adc
dec
fsub
push
add
lods
incl
sti
fidivl
lea
mov
mov
iret
js
call
aam
pop
lock
xor
jbe
inc
jnp
incb
pop
in
dec
mov
push
out
dec
sbb
mov
stos
add
jne
fstpl
sbb
imul
in
mov
dec
pop
mov
pop
mov
je,pt
lahf
in
adc
sub
jmp
and
xor
jo
pop
scas
mov
sti
add
mov
pop
imul
push
mov
add
jns
icebp
repnz
adc
pop
cmpsl
sbb
mov
in
stos
mov
dec
rcr
les
sub
andb
push
jb
cmpb
sub
cmp
xor
xchg
addr16
cmc
pop
mov
adc
mov
fwait
rorb
adc
loop
subb
xor
cmpsb
into
lods
jmp
mov
shrd
pop
jl
jecxz
fldcw
shrl
jp
sbbl
dec
xorl
leave
mov
add
cmp
fs
mov
jno
ss
push
les
jle
sbb
xor
clc
jl
adc
enter
pop
aam
cld
and
mov
shlb
push
ja
dec
imul
cmp
mov
bound
js
rcrb
mov
imul
jo
movsl
mov
andb
adc
test
inc
add
adc
cmpsl
pop
shll
adc
ror
xchg
repz
imul
jns
pop
lahf
xchg
into
jl
xchg
jge
bound
pop
push
adc
inc
and
rcll
xchg
shll
pop
aam
and
dec
pop
xlat
repnz
movsb
lds
std
cltd
cld
push
jo
inc
out
or
xchg
ficompl
ret
icebp
and
xor
test
les
loopne
std
js
or
jo
fyl2xp1
orl
ja
shrb
ja
sti
ds
or
jl
aaa
gs
pop
leave
mov
cwtl
inc
in
movb
xchg
sahf
xor
dec
jg
adc
lods
loopne
outsl
out
mov
ret
xchg
shll
pop
test
jecxz
add
in
aas
dec
ret
mov
dec
sbb
mov
mov
mov
call
pcmpeqw
mov
pop
xor
mov
dec
pop
cwtl
dec
mov
out
stos
dec
jno
shlb
xor
pop
and
in
subl
mov
in
mov
je
push
dec
fsubs
notl
repnz
mov
mov
dec
rcrl
icebp
xor
cmp
mov
icebp
push
dec
dec
jmp
push
push
xchg
dec
das
adc
cltd
aam
or
add
in
std
add
dec
lret
fwait
outsl
les
js
test
mov
xor
repz
sbb
bound
mov
mov
dec
xor
xchg
jns
sub
fists
jg
mov
int3
jl
addb
adc
xchg
addr16
in
push
dec
dec
fsts
and
insb
push
jbe
or
stc
out
pop
andl
or
daa
pop
add
push
push
add
pop
mov
mov
and
xorl
rcrb
mov
jp
xchg
jle
push
sbb
mov
mov
lret
insl
stc
adc
and
dec
mov
sub
push
jbe
add
popa
sbb
mov
inc
xchg
xor
xchg
les
sub
popf
mov
mov
mov
imul
jecxz
cmp
stc
and
and
adc
outsl
imull
adc
xchg
push
push
loop
jns
int
fcompl
push
mov
insl
sub
jbe
aam
sbb
mov
dec
sbb
lds
fidivl
inc
xchg
xchg
lahf
loope
mov
jl
fsubl
mov
cld
mov
sub
je
insl
push
dec
jecxz
lds
inc
or
pop
push
iret
in
stc
jp
fmul
outsl
shll
mov
fs
aaa
sahf
call
sar
in
inc
inc
addr16
jno
push
jno
lods
inc
cmpsb
in
icebp
outsb
test
icebp
and
cwtl
pop
enter
xchg
cld
sbb
jle
test
jecxz
loop
or
or
mov
lods
daa
movsb
pop
ret
xlat
test
jg
cmpsl
pop
out
mov
fidivs
mov
jbe
lock
pop
mov
mov
lds
popf
dec
and
decb
loopne
mov
sub
pop
int
fisttpll
dec
sbb
in
jb
into
mov
out
sbb
mov
aaa
enter
bound
sbb
lret
mov
xchg
cmc
pop
fwait
or
rcr
je
sar
mov
gs
push
fsubrl
or
pop
jmp
add
xchg
cmp
int3
push
xchg
cmp
sub
mov
leave
adc
dec
pop
scas
inc
addr16
cs
mov
outsb
dec
sti
lock
enter
dec
sub
inc
outsl
jbe
and
int3
dec
sub
sub
pusha
push
out
cmc
ss
jno
out
lahf
cmp
inc
mov
adc
out
dec
push
add
lret
lds
adc
pop
sbb
inc
loopne
and
mov
xor
and
dec
dec
jle
adc
dec
cmp
xchg
cld
add
or
xchg
jle
int
fiaddl
adc
adcb
inc
mov
in
arpl
test
or
sub
nop
in
sub
aam
xchg
mov
aad
add
mov
mov
aaa
aam
icebp
out
xor
pop
push
add
or
fsts
ljmp
inc
data16
xchg
mov
repnz
or
outsl
jne
inc
and
daa
push
jecxz
inc
mov
testb
lods
arpl
orl
mov
fldl
xor
jge
sbb
xorl
out
in
cmpsb
ret
cltd
add
cmp
stos
lahf
adc
shlb
xchg
mov
sbb
add
jge
push
cltd
push
xlat
addb
push
cli
mov
sub
fdivrs
stos
lret
popf
and
scas
xchg
outsb
pop
xchg
push
or
scas
ja
hlt
pushl
mov
outsl
or
xor
cmp
pop
mov
stos
dec
fwait
push
or
xchg
test
adc
mov
loope
xor
inc
push
lock
or
imul
out
add
clc
or
jp
inc
orb
mov
lahf
dec
stos
mov
lods
mov
cs
cwtl
dec
cli
add
mov
mov
pusha
out
inc
sub
cmpsb
mov
fldenv
lods
pop
push
inc
repz
cmp
repnz
xor
push
xchg
cmp
or
aas
aad
aaa
pop
jle
loop
sub
and
rorb
mov
push
mov
addr16
scas
mov
jecxz
xor
stos
adc
xor
roll
jmp
or
aad
pop
into
and
sbb
out
jo
add
loopne
jno
js
fdivs
in
push
cmp
xor
mov
repnz
pop
addr16
loope
stc
repnz
xor
scas
sub
dec
mov
jecxz
xchg
jo
cmpsb
add
loopne,pn
lret
push
subb
xor
adc
mov
mov
sbb
cwtl
push
addr16
cli
shr
adc
inc
outsb
into
pop
cs
cmpsl
mov
xor
fsubl
aam
xor
movsl
sbb
pop
sbb
sub
push
xor
or
fbstp
cmp
mov
fidivrl
cmpsl
and
jmp
rcrl
adc
adc
xchg
fildl
mov
js
rcll
repz
lea
mov
cli
ret
cwtl
inc
in
mov
in
dec
int
popf
or
xorl
mov
out
mov
add
sub
xor
dec
push
xchg
mov
fsubs
adc
dec
jecxz
gs
ficoml
dec
xchg
pop
xchg
xchg
ja
lds
cmpb
dec
xor
into
and
xchg
lods
lcall
lahf
test
mov
inc
cmp
inc
movsl
jp
sbb
xchg
pop
std
loopne
add
jp
in
xchg
in
or
add
inc
push
lds
test
add
cwtl
in
sbb
dec
aad
loopne
mov
sbb
push
jecxz
in
ds
pop
out
pop
and
pushf
mov
jl
sti
addl
in
fiadds
shrb
aad
adc
dec
mov
mov
push
xor
mov
fimull
lods
or
lahf
jbe
cmp
dec
fdivl
xchg
addr16
clc
scas
aaa
aaa
adc
sbb
pop
dec
test
add
adc
int3
mov
insb
xchg
jne
fisttps
repz
xchg
fcompl
push
xorb
push
mov
lcall
mov
test
ret
neg
fiaddl
pop
mov
pop
pop
sahf
xchg
xchg
ret
xchg
scas
hlt
sub
sbb
das
ficomps
imul
rorl
lods
scas
jne
pop
mov
int
jnp
add
jecxz
aad
inc
lret
movsb
or
sub
add
jmp
in
insl
cmpsl
loope
inc
icebp
adc
divl
pushf
add
sbb
in
push
cmp
cwtl
outsb
add
jp
shrb
jp
nop
push
fcoms
fwait
add
mov
into
pop
jbe
stos
fs
cwtl
mov
ss
push
shrb
mov
xlat
sub
cmp
xchg
sub
adc
fwait
and
xchg
mov
dec
cs
mov
stos
push
fcmovbe
sub
leave
clc
cmp
push
xchg
rol
lock
jg
fbstp
lods
je
jnp
mov
es
rcrl
mov
clc
test
cmp
add
sub
bound
mov
js
imul
or
xchg
mov
orl
cltd
jns,pn
ret
push
fmul
and
inc
cmp
mov
mov
int3
adc
jbe
xchg
ljmp
add
mov
mov
or
or
sbb
add
adc
orb
or
in
adcb
dec
cld
adc
pop
pop
lods
and
or
inc
xor
ret
or
xor
cmp
and
push
sbb
push
mov
rclb
stc
add
mov
mov
xchg
hlt
or
and
mov
push
or
cmc
int3
pusha
sbbl
in
and
into
das
push
sbb
cmp
stc
lahf
sbbl
aaa
pushf
sahf
jae
jg
bound
stos
mov
adc
xchg
repnz
mov
push
jnp
out
mov
call
push
sbb
repz
add
xchg
dec
mov
dec
xor
sahf
ret
lcall
sub
rcll
test
in
dec
loop
xchg
aad
shl
and
pop
push
and
inc
lods
fwait
xchg
xor
mov
hlt
clc
jcxz
ret
push
xor
in
add
mov
imul
rolb
xchg
mov
inc
sub
jnp
bound
cltd
xor
testl
in
orl
std
movsb
mov
mov
test
mov
pop
lods
xor
push
xlat
jle
pop
test
jp
inc
cld
mov
dec
pop
shrl
repnz
push
xlat
push
mov
fwait
adc
int3
pop
ret
mov
ja
fs
sub
dec
dec
jne
mov
lret
in
cli
xor
rcrl
stos
out
xchg
aad
movsb
lods
aaa
outsl
popf
or
xor
pop
mov
sbb
negb
or
je
cli
fbstp
lret
inc
fidivl
mov
dec
mov
xchg
int
test
pushl
jnp
lods
fstps
pop
mov
mov
cwtl
addl
ss
stos
push
pop
icebp
loopne
out
jae
mov
cmp
pop
rolb
sub
xor
outsb
negl
jnp
mov
mov
cli
lods
jle
int3
mov
popa
mov
push
xor
es
or
aas
xchg
push
mov
outsb
outsl
clc
js
add
cmpb
inc
aam
lods
mov
dec
mov
fbld
rcl
jmp
mov
aam
or
push
js
iret
in
clc
js
lret
or
push
inc
in
popa
mov
ret
les
popf
jo
dec
fisubl
fisttps
fimuls
lcall
and
in
lret
aas
out
push
pop
mov
cmp
out
push
push
sti
jecxz
sub
in
adc
lods
not
inc
jno
dec
adc
sahf
inc
or
leave
push
jno
out
or
scas
and
jo
repz
insl
adc
lods
pop
mov
rcrl
outsb
dec
lds
and
jmp
adc
cld
ds
int
or
ljmp
insl
sub
and
insl
push
gs
in
jb
jmp
pop
pop
or
lret
rcrl
iret
sbb
lret
mov
pop
shr
in
scas
push
in
add
jbe
push
out
jmp
dec
nop
aas
imul
popf
jne
push
jle
popf
and
lsl
mov
in
stos
notl
icebp
out
movsl
sbb
inc
jns
cmpsb
and
mov
fldcw
sub
bound
xchg
bound
jbe
out
loopne
je
cltd
pop
faddl
pop
cmp
aam
add
insl
loopne
cmp
ljmp
aas
ds
xor
enter
jbe
pop
dec
addr16
rorl
mov
aam
sahf
loop
jmp
mov
add
rcrl
mov
icebp
addb
push
xor
mov
int3
fcompl
ja
push
sarl
xchg
push
inc
fucomi
sbbb
xor
leave
jae
sub
cmp
and
pop
mov
mov
xor
fdivrl
mov
outsb
sub
int3
rorb
dec
mov
sbb
mov
mov
and
lods
pop
sbb
jmp
imul
push
in
dec
mov
je
or
jns
lock
or
fwait
jle
arpl
cmpsl
xchg
pusha
jge
xchg
loope
gs
rorl
push
inc
mov
adcb
sub
jne
lock
lahf
sub
mov
punpckhwd
leave
mov
sbb
mov
sub
add
sbb
mov
jae
imul
loopne
js
lds
add
fstl
push
or
push
push
sbb
mov
sahf
xchg
ds
cmpsl
fisttps
mov
movsb
push
test
js
adc
scas
dec
cmpsl
mov
lcall
dec
xlat
xchg
addb
sub
mov
ss
push
fldl
xchg
pop
push
sub
jnp
lret
jmp
push
popf
cmp
sbb
fstpt
fwait
mov
xor
subb
loop
fnsave
dec
jge
nop
cmc
push
add
jo
xor
mov
mov
pop
pop
mov
mov
xchg
mull
stos
fdivl
in
pushf
add
data16
ja
cmpsb
ds
ret
lcall
mov
xor
in
leave
pusha
mov
nop
inc
sub
aaa
sub
stos
or
pop
jl
mov
xchg
mov
xchg
rorb
cmpb
lret
call
scas
mov
jmp
xor
pop
push
cmp
mov
adc
add
out
insb
test
insb
es
dec
and
movsb
mov
mov
aaa
shrl
hlt
sti
pop
bound
xor
dec
sar
add
jg
loopne
dec
arpl
std
insb
mov
add
or
mov
add
cs
cmp
jns
es
imul
test
scas
push
xchg
out
inc
cli
jb
cmp
mov
cli
adc
sbb
jno
imul
inc
sub
and
lods
movsl
sbb
mov
repz
je
push
cltd
popa
mov
loopne
xchg
rcrb
inc
arpl
data16
shll
mov
iret
mov
je
pop
repnz
shlb
dec
jg
iret
movsb
adcb
mov
dec
cmpsl
xor
mov
mov
mov
movsl
sti
adc
jle
push
dec
cmp
mov
dec
push
scas
inc
popa
add
fmulp
andb
mov
lods
mov
mov
mov
out
dec
jmp
push
adc
mov
ds
inc
mov
clc
adc
jbe
lds
leave
pop
xchg
nop/reserved
shll
out
lock
ret
mov
mov
cld
xorb
loopne
cwtl
xchg
lods
adc
mov
xchg
dec
mov
ss
jmp
in
rclb
jb
xor
movsb
inc
stc
mov
mov
mov
enter
mov
in
mov
arpl
mov
imul
add
daa
cmp
pop
push
mov
pcmpeqd
aam
mov
sbb
shrb
dec
push
xchg
pop
mov
mov
xchg
insb
add
call
leave
jno
cmp
enter
cmpsl
xor
push
jl
xor
mov
mov
hlt
jno
outsl
jg
addr16
inc
fdivrl
hlt
mov
jne
and
or
out
outsb
imul
lea
mov
cmpl
mov
xchg
jmp
aas
mov
cld
arpl
cld
mov
sbbl
sbb
iret
cwtl
cmp
dec
jp
pop
mov
in
ds
mov
xor
dec
cmp
lahf
jmp
iret
call
in
movsb
pop
bound
mov
jge
push
repnz
push
fwait
lahf
mov
and
and
mov
lods
push
dec
mov
out
or
adc
hlt
mov
cmp
jno
rcl
mov
cmp
bound
sti
imul
push
loope
pop
adc
movsb
xchg
inc
int3
fiaddl
pop
mov
ret
mov
test
dec
inc
sbb
cmpb
ds
scas
inc
pop
bound
push
rcrl
dec
outsb
push
dec
jno
lcall
cwtl
cmp
mov
pop
aas
in
mov
push
sbb
lods
lods
push
mov
mov
adc
in
sbb
leave
ljmp
xor
jns
mov
add
pop
jne
xor
cmc
inc
vmovdqa
jp
ss
dec
movsl
add
mov
xchg
fcompl
push
dec
push
push
xlat
xchg
mov
fnstcw
jnp
lds
loopne
push
test
aas
mov
push
mov
push
subl
and
push
dec
pop
subl
mov
or
loopne
and
lret
or
pusha
pop
sbb
je
mov
jle
movups
repz
dec
les
popl
inc
call
dec
mov
xchg
addr16
sahf
mov
xchg
pop
jg
sub
dec
jns
pop
push
ss
jno
jmp
leave
cmp
rcrl
mov
push
fisubl
inc
jg
rorb
in
add
dec
pushw
xchg
repnz
mov
imul
xor
cli
mov
or
xchg
scas
scas
inc
lahf
loope
cmpsb
fwait
movsb
pusha
inc
test
cmpsb
fsubl
pop
fimuls
adc
sub
add
pop
flds
jbe
sbb
inc
mov
pop
pop
and
or
ja
xchg
sbb
out
jnp
adc
into
xor
pop
test
lret
mov
popf
sbb
stc
xchg
lret
pop
clc
stos
push
cmc
aas
inc
mull
imul
push
pop
xor
sahf
insb
xor
imul
leave
std
dec
test
mov
pop
mov
imul
adc
popf
mov
or
negl
cmp
lret
fisubs
xchg
fdivrl
cmpsl
lcall
mov
jp
adc
fisttps
pmuludq
aad
jg
mov
push
repz
xor
clc
test
adc
sub
pop
dec
mov
fidivl
sbb
cmpsl
lret
push
insb
shlb
mov
jns
push
int
pop
add
cli
sti
icebp
andb
add
jle
movsl
arpl
cmp
cld
xchg
iret
pop
test
sub
xchg
or
or
mov
xor
xchg
lock
and
sti
call
fs
add
test
xlat
push
xchg
nop
push
out
mov
inc
jl
or
and
lods
xlat
movsl
adc
scas
sbb
xchg
add
insl
loopne
and
sahf
loopne
mov
cli
pop
mull
pop
cmpsl
pop
aaa
sti
mov
cmc
js
jb
rorb
cmp
call
shll
xor
dec
xchg
shll
ss
pusha
push
out
mov
push
add
push
cltd
fstpt
sti
in
stc
push
jns
js
insb
mov
inc
daa
sub
pop
addl
imul
mov
mov
push
es
jae
cmp
out
xchg
add
lods
aam
jbe
ss
dec
dec
lea
loopne
out
cld
and
stos
jns
dec
mov
sbb
call
pop
idivb
dec
insb
adc
or
scas
lret
inc
jl
sub
sub
loope
or
jns
and
mov
mov
mov
out
sar
aam
call
repz
mov
adc
sub
dec
push
rcll
std
sbb
outsb
dec
call
out
aam
xlat
sub
xor
ja
pop
adc
lcall
mov
mov
inc
inc
scas
lret
cmpsl
stc
stc
dec
and
aad
pop
int
movsb
es
pop
arpl
push
cmp
inc
mov
and
push
in
dec
pop
pusha
int
jb
into
add
nop
mov
fisttpl
movsl
stc
inc
jmp
dec
sub
stos
in
jae
sub
lret
insl
sti
or
mov
sub
push
jecxz
mov
jb
xchg
jg
push
pusha
loope
frstor
repnz
mov
xchg
repnz
mov
loopne
nop
cli
xchg
inc
push
testb
faddl
cmpsb
fs
xchg
mov
push
jne
add
and
push
pop
mov
pop
pop
xchg
dec
cmp
adc
adc
insb
adc
insl
sbb
sbbl
jmp
and
xor
mov
sbb
bound
or
push
push
mov
into
ss
aaa
loopne
adcb
mov
aam
repz
mov
js
mov
xor
sbb
xor
inc
call
adc
mov
mov
adc
ds
xor
xchg
xchg
stos
cld
xor
sub
cld
rclb
fcmovnb
inc
shlb
hlt
in
fnstsw
pop
push
outsb
inc
sub
test
mov
cld
xchg
popl
push
jb
pop
xchg
push
add
lahf
je
jo
xor
cld
and
dec
repz
fucomp
lret
stc
das
ret
push
and
inc
mov
cltd
inc
std
mov
fldenv
mov
in
int3
jbe
pop
ja
lret
or
ret
and
xor
pop
adc
mov
mov
out
std
and
mov
mov
sar
jmp
adc
mov
test
fidivrl
les
hlt
pushl
mov
adc
aas
sar
ljmp
sub
enter
lea
bound
mov
xchg
xor
adc
movsb
jp
cmp
pushf
pop
inc
nop
or
in
push
and
lods
movsl
sbb
stc
and
cmp
push
das
mov
filds
cmpsb
lods
cmp
inc
jne
push
cmp
jle
or
sbb
dec
orl
out
mov
dec
repnz
setl
outsb
lret
mov
xchg
movsb
ret
xor
sahf
sbb
pop
stos
in
add
jg
lahf
pop
out
pop
xor
hlt
shll
push
sti
mov
pop
sbb
and
pusha
and
out
ss
call
out
xlat
jmp
fidivl
jl
pop
sbb
pop
shll
ljmp
adc
daa
push
pop
bound
sub
push
jno
add
dec
test
push
sub
xor
add
push
out
lock
push
cs
lahf
ret
lods
imul
imul
cwtl
rorb
je
std
es
jp
push
adc
repz
push
aaa
lea
xorb
jmp
push
mov
jecxz
xor
shr
xor
mov
cmpsb
jg
lcall
je
clc
pop
out
addr16
xchg
cwtl
loope
push
dec
adc
imul
xchg
adc
adc
jno
cmpsl
imul
lods
outsb
and
sbb
cmpsl
jge
ljmp
insb
rorl
or
out
mov
test
push
and
push
mov
scas
into
enter
adc
addr16
imul
sub
aad
aad
bnd
cwtl
cmp
lods
or
push
movsb
mov
or
cmpsb
cltd
jo
hlt
mov
push
lahf
and
cmp
cli
add
fstl
lods
testb
push
lret
xchg
repnz
test
dec
rcrb
pop
mov
outsl
clc
inc
test
ljmp
mov
test
in
mov
leave
popf
pop
or
jo
or
cld
leave
xor
sub
les
rcll
adc
mov
xchg
sub
sub
or
xchg
movsb
push
or
sub
sbb
fsubl
sbb
inc
and
iret
mov
jb
xor
dec
and
cmp
mov
or
loopne
outsb
dec
sub
jge
adc
repz
addr16
xor
mov
mov
cs
sub
dec
push
fsubp
or
loope
add
add
mov
out
mov
imul
inc
inc
push
push
orl
xchg
shlb
mov
cmpsb
rcll
out
xor
test
iret
mov
jb
pop
inc
pop
orb
mov
addr16
xchg
mov
in
dec
enter
test
in
dec
pop
pop
push
cmp
jl
aad
out
jecxz
mov
adc
adc
sub
xchg
push
cmpb
jae
icebp
cmpsb
popf
or
jl
xchg
popa
nop
adc
add
hlt
xchg
dec
std
lock
xchg
add
mov
scas
hlt
cmc
mov
mov
add
loop
je
test
xor
mov
mov
xchg
outsl
daa
movsb
or
xor
mov
fwait
adc
aaa
mov
sub
pop
mov
mov
popf
pop
decb
xor
sub
mov
adc
sbb
notb
mov
and
fisttps
jae
mov
arpl
jp
mov
shrb
xchg
mov
xchg
sbb
insb
adc
xor
addl
movsl
sbb
jle
adc
sbb
and
or
cld
xchg
push
pushf
jecxz
push
lahf
mov
inc
sbb
ficoms
addr16
fnsave
mov
lods
push
add
xchg
xchg
in
dec
push
fbstp
mov
dec
adc
andl
std
fwait
sarb
jge
sti
sbb
jne
leave
xchg
imul
shrb
popa
mov
fcoms
xchg
sbb
aam
add
std
add
movsl
mov
pop
aaa
mov
sbb
adc
mov
hlt
test
mov
in
mov
icebp
sub
cwtl
mov
cmp
ljmp
cmp
subl
in
leave
test
repz
cmp
scas
bound
mov
bound
les
jge
dec
or
add
leave
lods
es
mov
out
dec
imul
push
fldl
mov
mov
in
cld
mov
stc
stos
jmp
fisttpll
fcmovne
jmp
clc
leave
xchg
sbb
adc
lds
mov
adc
dec
or
push
pop
pop
jnp
add
fimuls
popf
pushf
lds
out
test
adc
pop
outsl
jecxz
sbb
movsl
pop
sbb
int3
xchg
ds
ljmp
jae
xor
es
shll
es
in
xchg
cmp
jnp
pop
mov
or
sahf
mov
aas
or
clc
out
je
popa
push
repnz
adc
xor
add
aam
dec
mov
aad
jae
daa
loop
sahf
popf
ljmp
mov
lock
imul
xchg
out
push
lods
loope
test
jmp
rcrl
dec
lods
imul
xchg
mov
push
mov
jb
les
jno
sub
lret
lods
jle
jbe
leave
cmp
outsl
lods
xor
call
stos
mov
aam
test
aad
pop
insb
aas
and
xchg
stos
xchg
xor
arpl
add
push
repz
jp
aaa
in
rcl
aam
mov
test
mov
lods
jb
or
aad
iret
shrl
lret
dec
xchg
mov
adc
jg
pop
les
in
scas
mov
dec
mov
movsb
cmpsl
inc
shlb
inc
mov
mov
movsl
js
aam
inc
ss
lret
and
sub
lret
mov
dec
pop
pop
subb
ret
pop
mov
shrl
pop
or
adc
add
xor
insl
xchg
sarl
hlt
mov
mov
loop
fwait
lea
filds
andl
lods
push
inc
jb
lea
addr16
pop
cmc
sub
sbb
xchg
js
mov
and
or
ja
xchg
push
and
pop
mov
subb
rolb
frstor
lea
push
push
push
inc
popf
inc
push
ret
fs
mov
clc
cmp
int
xchg
push
in
mov
mov
outsb
bound
int3
hlt
shll
cmp
std
mov
dec
or
pop
mov
xor
mov
mov
cmp
mov
and
out
mov
js
and
repz
pushf
sub
xchg
mov
and
pushf
or
push
rcrl
fmulp
cmp
push
xchg
popf
flds
das
shll
adc
jns
xorb
test
inc
and
mov
dec
sub
pop
push
jnp
sbbl
aad
jo
push
ja
push
jl
sbb
add
mov
mov
mov
mov
test
popf
mov
shll
ret
mov
fldl
rorb
clc
push
enter
stos
adc
repnz
mov
ds
lret
fdivs
lock
mov
hlt
pop
popl
inc
adc
jo
dec
inc
sub
lret
ds
movsb
repnz
inc
test
int
lret
xchg
imul
mov
mov
mov
and
push
xor
pop
sbb
mov
loop
cli
hlt
aam
insl
push
push
insl
ljmp
rorl
and
ss
or
cmp
sub
jae
dec
mov
xchg
and
mov
adc
pushf
inc
mov
mov
push
enter
lods
cmp
jo
push
mov
jmp
sub
jge
and
push
xor
jg
cli
push
lods
in
dec
jne
scas
sbb
cld
push
mov
mov
roll
hlt
test
lea
dec
jmp
test
add
push
cmc
dec
mov
push
dec
in
fsubrp
ret
and
js
negb
call
cmp
iret
xchg
lret
push
mov
sub
into
jne
es
imul
test
jo
test
orb
addb
bound
mov
jle
pop
cmp
cltd
xor
inc
loope
arpl
mov
pop
fnstsw
xchg
cli
lahf
add
cltd
push
std
pop
jo
repnz
imulb
or
mov
push
aam
jle
and
iret
xor
sahf
sub
or
mov
js
jle
cwtl
inc
mov
jnp
inc
data16
inc
cmp
bound
mov
mov
xchg
pop
mov
sub
jae
push
subb
mov
outsb
mov
ss
xor
push
cmpsb
jae
lret
mov
stos
cmp
mov
mov
push
stc
sbb
js
push
push
sub
adc
sarb
fdivl
js
xchg
add
or
adc
mov
jns
fstp
popf
adc
pop
lcall
adc
mov
sub
mov
xchg
xor
cltd
nop
insl
fsubp
jp
cld
or
pushf
sbb
bound
subb
mov
sti
cmp
adc
mov
or
dec
jo
mov
and
fsubl
cmp
test
movl
xor
mov
sbb
and
cli
sbbb
int3
nop
movsl
movsb
insl
sub
jge
push
idivl
out
rcl
inc
add
rcrl
aaa
aad
jo
mov
jb,pn
adc
jmp
das
popf
rclb
mov
fidivrl
cmp
lds
pop
mov
dec
adc
sbb
push
out
inc
sbb
aad
mov
fsubs
mov
jbe
ljmp
fldl
dec
mov
pop
imul
cli
stos
cmp
inc
push
adc
pop
btrl
mov
xchg
jb
mov
shl
or
out
in
push
popf
pop
push
outsb
jmp
outsb
in
mov
rclb
cmpsb
mov
sub
cmp
outsl
add
in
imul
mov
xchg
xchg
out
je
add
std
in
mov
icebp
xor
push
push
lret
sub
mov
mov
test
jge
outsb
push
ja
push
shlb
imull
inc
inc
push
push
fdivrs
ret
jne
pop
pop
cld
iret
addr16
stc
mull
xchg
dec
xchg
lcall
cmp
negl
in
movsl
cmp
repz
or
lcall
pusha
bound
int
fiadds
dec
lock
mov
xchg
cmc
add
pop
mov
adc
xchg
lret
mov
repz
mov
daa
pop
pop
rcll
push
cli
sahf
sbb
xor
mov
jg
cld
jns
jns
xchg
xor
out
fistl
data16
es
out
or
push
xor
mov
cmp
shlb
stc
bswap
pop
xchg
push
in
mov
pop
mov
int
mov
test
add
dec
out
rol
insl
jmp
ss
mov
in
repz
fs
shlb
addr16
negb
adc
cmpsl
movsl
lahf
fiaddl
inc
in
push
add
xchg
test
mov
enter
mulb
sub
std
or
jle
roll
sahf
mov
call
sbb
int3
stos
or
mov
insl
hlt
inc
repz
dec
mov
push
insl
scas
ret
out
call
push
mov
sub
jae
out
fs
mov
or
push
bound
shr
bound
push
pop
cmp
shrb
mov
loop
shl
sarb
rorl
jg
mov
aaa
and
out
jg
sbb
aam
jbe
fwait
pop
mov
sub
movsb
test
inc
arpl
pop
xor
mov
pop
mov
cltd
push
test
jl
pop
loopne
dec
cwtl
insb
fsubrl
jp
lret
xchg
jo
or
cmp
jne
add
daa
pop
add
adc
and
jno
xorl
icebp
arpl
sub
outsl
jnp
aaa
mov
icebp
out
and
jo
scas
mov
push
and
or
fwait
mov
sbb
insl
pop
and
in
scas
add
mov
jae
mov
inc
mull
adc
xchg
out
testb
mov
mov
xlat
stc
ja
rorb
or
fimull
addr16
imul
cmp
fdivrl
jge
scas
lock
jne
cmp
es
cmpsl
mov
mov
loopne
dec
inc
fs
xchg
stos
cmove
jp
pop
jecxz
sahf
jns
inc
jne
mov
or
inc
inc
ja
mov
rcll
mov
aas
adc
test
cltd
xchg
repz
jbe
push
pop
xor
fs
dec
lret
xchg
push
xlat
push
jg
out
outsl
jmp
jge
xor
scas
das
mov
shl
sarl
aam
adc
imul
sbb
outsb
mov
lahf
push
mov
adc
das
xor
cmc
fsubrp
mov
xchg
fldt
mov
lods
shll
adc
inc
or
je
xchg
test
adc
stos
adc
inc
xor
or
lahf
lods
mov
aam
push
std
jae
sbb
and
cli
dec
stos
test
sti
and
rolb
mov
enter
cmp
call
mov
fimull
loope
inc
or
mov
ret
ret
in
mov
xlat
and
cmp
and
into
adc
mov
jle
push
jl
data16
jo
add
repz
jne
lea
push
in
mov
cmp
loop
xor
cmc
pop
addr16
mov
cmc
jge
adc
pop
jbe
out
sti
pop
xchg
mov
xchg
out
inc
xlat
push
and
dec
xchg
movsb
sub
xchg
in
insl
adc
xor
mov
xchg
mov
or
mov
and
mov
push
mov
push
sub
mov
daa
into
icebp
in
dec
ljmp
mov
xchg
mov
outsl
jo
sub
mov
mov
test
leave
adc
imul
ja
mov
test
lcall
add
xchg
nop
lea
push
gs
xchg
inc
jmp
xor
cwtl
mov
inc
pop
cmp
xor
push
js
mov
push
and
loop
stos
out
xchg
mov
movsb
insl
mov
mov
lahf
fwait
xchg
mov
or
add
aad
fimuls
mov
add
xor
or
sbb
ret
nop
clc
shlb
inc
ret
mov
loope
outsb
fucom
sbb
negb
mov
lgs
adc
cmp
enter
xchg
cltd
cmovl
adc
xor
cmpsb
xor
loop
jo
cmc
jmp
mov
push
and
xchg
pop
mov
sbb
scas
fidivrs
movups
push
xchg
xchg
jae
mov
stc
mov
mov
movsb
daa
lahf
and
ljmp
inc
mov
push
movsb
push
mov
es
xchg
les
loopne,pn
and
dec
xchg
aaa
mov
outsb
jl
bound
mov
lock
icebp
lahf
xchg
xchg
cmp
lahf
mov
dec
cmp
push
mov
inc
cmp
xchg
aad
xlat
mov
adc
sbb
pusha
mov
inc
popf
push
cwtl
jns
test
cmp
arpl
in
xchg
aam
push
pop
mov
aaa
push
ds
sub
sub
nop
notb
mov
pop
cltd
fidivrs
xor
mov
xchg
adcb
outsb
hlt
or
mov
outsl
pop
push
jge
into
pop
inc
je
pop
jmp
cwtl
push
mov
out
xor
lahf
push
or
mov
inc
inc
xchg
pop
push
push
mov
testb
fisubs
pop
pop
out
adc
adc
in
push
sub
rcl
decb
mov
lods
outsl
mov
ja
cs
cmp
jb
daa
sbb
jge
mov
add
mov
inc
setne
push
push
or
std
jge
enter
int
leave
cmp
pop
or
adc
inc
xlat
push
and
in
ljmp
mov
gs
loopne
and
mov
sbb
movsb
test
mov
das
and
cmp
jmp
jmp
or
xchg
xor
pop
sbb
fsts
or
lret
ss
mov
push
dec
mov
pop
js
xor
scas
shll
mov
fwait
pop
gs
out
cwtl
cmpsl
mov
insb
sub
je,pn
inc
mov
rcrb
inc
sbb
lret
mov
in
clc
push
cmp
xchg
dec
sub
ja
std
dec
xchg
movsb
nop
push
pop
sbb
xchg
sub
xchg
cmp
jg
xor
ja
inc
int
sub
mov
sbb
mov
xor
int
push
mov
adc
sub
xchg
fcmovb
cmpsl
jmp
rcrb
bound
xlat
test
rcrl
push
js
and
scas
cmp
mov
jne
aam
nop
dec
xchg
adc
hlt
mov
xchg
add
xor
fsubrl
clc
ret
fistps
pop
test
pusha
sti
in
outsb
popw
aam
pusha
fsts
aad
push
mov
lahf
fcoms
lahf
andl
int
cwtl
xlat
jnp
xchg
mov
mov
xchg
loopne
arpl
sbb
cmp
es
pushf
jbe
pop
out
adc
aad
inc
aam
test
ret
sub
xchg
cmp
push
movsl
jnp
sub
shll
push
mov
mov
mov
add
lahf
jl
dec
add
shll
dec
add
mov
lcall
ss
sub
sub
stos
out
out
push
shll
push
gs
movsl
pushf
adc
add
jno
pop
pop
sahf
xchg
adc
iret
orb
or
jo
clc
sbb
mov
and
cmp
ret
pavgw
fwait
and
ret
cmpsb
jno
pop
xchg
push
movsb
pushf
sbb
adc
jb
xchg
scas
pop
jae
push
sub
insb
ds
pop
sub
xchg
mov
cmp
imul
enter
add
lcall
cmp
mov
dec
inc
fucom
mov
push
popa
movd
mov
mov
das
fxch
sahf
out
dec
mov
clc
mov
mov
clc
stos
xchg
fcmove
adc
sbb
pop
mov
aas
jbe
repz
mov
pusha
inc
lcall
sbb
fwait
jp
enter
dec
add
jp
xchg
ljmp
movsl
loopne
out
aas
ret
sti
sub
filds
inc
fstp
hlt
adc
int
pop
mov
fwait
mov
aam
insb
iret
lock
or
xchg
fcoml
sahf
das
js
fcompl
dec
ret
add
or
or
adc
add
jp
xchg
in
adc
ljmp
movsl
je
imulb
inc
imul
push
outsl
cld
cmpsl
sbb
mov
dec
dec
push
jns
adc
and
aad
sti
inc
mov
or
outsb
dec
jno
mov
xlat
jl
idivl
rorb
add
cli
enter
lds
scas
sub
insb
mov
cmpsb
stos
push
sub
xor
adc
cmp
nop
popa
pusha
xchg
daa
aaa
cmc
insb
jmp
mov
xor
xchg
xlat
lahf
loopne
sub
bound
arpl
xor
sbb
and
pop
adc
mov
sbb
sbb
ss
sub
xchg
std
sbb
inc
mov
xchg
or
pop
loopne
xchg
cmp
bound
inc
lea
and
pop
mov
sbb
dec
mov
mov
lcall
pop
std
int3
xchg
hlt
aad
adc
cmp
lods
inc
push
clc
mov
in
pop
mov
gs
mov
bound
movsb
push
inc
in
lods
cmp
lods
pop
rorb
out
enter
ss
fwait
mov
data16
xchg
mov
dec
xor
or
out
testl
jg
jge
sub
and
xor
test
xlat
jbe
mov
push
imul
pop
lods
rcr
and
sub
dec
sub
mov
inc
mov
mov
mov
jns
xor
push
or
je
sub
jbe
mov
ret
xchg
lods
in
iret
lcall
ficoml
cmp
dec
aas
aaa
and
xchg
clc
loope
cwtl
sub
mov
scas
lds
scas
jmp
adc
rcrl
inc
int3
jns
cmp
pop
orl
sub
sti
into
es
cli
stos
adc
inc
sbb
mov
pushf
out
test
loope
mov
mov
inc
add
popl
scas
insl
pop
and
pop
pop
and
xchg
fisttpl
jns
push
add
jns
aaa
adcb
flds
ret
sahf
jae
adc
cld
in
lds
insl
cs
xchg
dec
out
xchg
dec
aaa
stos
out
insb
sahf
cmc
in
fldenv
adc
testb
cli
sarl
out
mov
sbb
xor
fcom
arpl
inc
ret
cmp
push
out
inc
mov
out
mov
mov
and
in
shlb
out
mov
sub
cli
sbb
mov
inc
dec
stos
and
aad
imul
fmul
sarb
dec
in
lock
repnz
test
ret
inc
adc
mov
push
into
pop
mov
in
xor
push
sub
iret
sub
std
mov
test
cmpsl
mov
xlat
mov
cmp
aad
call
mov
xchg
mov
test
pop
sub
test
cmp
adc
xchg
pop
in
adcb
dec
or
jno
iret
mov
std
cs
shll
js
and
inc
aam
insl
xchg
xchg
add
loope
mov
ds
aad
outsb
sbb
jns
cmp
mov
mov
inc
inc
pop
lcall
mov
or
jne
push
into
enter
pop
adc
xchg
jecxz
dec
pop
lret
xor
sti
inc
adc
pop
loope
or
mov
sub
cmp
xor
xchg
fwait
pop
mov
out
mov
js
insb
sbb
pop
sub
popa
mov
icebp
ss
test
xchg
adc
cmp
or
mov
fimull
cmc
cmpsl
addb
xor
rolb
rolb
movsb
loopne
mov
cmp
xchg
jge
jb
pop
push
out
cmp
dec
outsb
adc
jnp
shl
stc
push
inc
adc
mov
push
pop
sbb
add
inc
add
cmp
push
hlt
lock
inc
mov
mov
push
aaa
fiaddl
cmp
push
aam
adc
mov
orb
inc
mov
sbb
pop
mov
data16
fst
je
mov
jecxz
pop
lods
scas
sub
cli
clc
mov
scas
mov
out
ja
sbbl
jne
pop
ljmp
xor
sub
rcl
fsubrp
or
pop
loop
mov
ret
cltd
ljmp
push
sub
pop
cmp
insb
call
or
mov
mov
daa
inc
jo
and
cmp
inc
pop
lds
arpl
cmp
jle
test
jns
icebp
test
xor
mov
cmp
push
outsl
inc
mov
js
aam
mov
loope
or
xlat
loopne
push
add
inc
push
jo
or
jg
xchg
jg
jmp
and
jecxz
xchg
ret
adc
add
adc
shrb
and
in
add
popf
push
test
cmp
cmp
jo
es
xchg
insl
push
mov
imul
pop
lcall
test
jno
or
out
addr16
sti
xchg
add
sbb
pushf
sbb
jno
leave
enter
or
fcoml
jecxz
xchg
out
bound
sub
mov
fistpll
gs
or
cld
and
incl
aad
movsb
sbb
mov
mov
scas
push
dec
inc
imul
mov
pop
and
mov
mov
mov
loopne
dec
dec
loope
inc
fstps
adc
push
xchg
cmp
stos
mov
push
add
in
lods
jbe
sahf
loop
out
and
pop
xor
setge
xchg
jnp
jns
iret
out
xlat
dec
push
push
xchg
insb
fcmovnu
mov
mov
dec
fildll
movsl
adc
or
mov
jmp
int3
inc
push
xchg
push
test
adc
cmp
and
je
aam
jb
add
dec
popa
notl
mov
outsb
bnd
lcall
push
sbb
imul
pushf
mov
mov
jle
movsb
push
jbe
fisubrl
movsb
bound
ljmp
jae
adc
ret
xchg
scas
and
pop
dec
xor
mov
insl
lcall
cmp
outsb
add
jecxz
hlt
mov
dec
pop
xor
pushf
shrb
pop
push
xlat
push
jbe
popl
test
add
in
lods
mov
pop
outsl
dec
mov
mov
test
gs
popa
pop
je
sub
xor
adc
ret
pop
inc
std
dec
test
nop
fnstcw
icebp
and
sbb
mov
cmpsl
popa
adc
add
push
or
loop
in
negl
in
std
divl
adcb
mov
mov
out
fdivrs
push
sbb
lock
push
push
loop
jns
daa
call
xlat
hlt
aas
out
icebp
xor
sti
dec
xchg
push
outsl
fildll
decl
or
push
jge
cld
cmp
sbb
shlb
popa
lods
sub
sbb
mov
mov
lods
in
pop
xlat
arpl
and
lds
test
popf
ja
add
in
xchg
jo
jp
mov
mov
into
push
push
aad
pop
mov
andb
call
mov
mov
and
jg
sbb
sub
xorl
add
mov
test
xor
mov
xor
xlat
add
shr
mov
cs
pop
xorb
imul
pop
rorb
cmpb
repz
inc
dec
xchg
xor
inc
shlb
in
insb
repz
mov
inc
inc
movsb
inc
shlb
jne
aaa
in
and
loope
mov
adc
mov
test
xor
insl
push
and
or
and
lcall
insb
ds
sub
pop
mov
push
mov
cmp
xor
mov
push
xchg
bound
cltd
inc
sub
cmp
mov
push
test
lock
add
sub
xchg
mov
xor
push
sbb
fxch
setbe
aam
mov
adc
sbb
pop
add
in
test
pop
inc
or
std
sarl
fucom
pop
mov
fcomi
mov
into
dec
sub
xlat
jg
xchg
fyl2x
in
int3
dec
cmp
xchg
inc
adc
sub
jnp,pn
mov
mov
aam
fcomi
inc
fdiv
divb
push
sub
cmp
mov
push
cmpsb
les
pop
cwtl
outsl
push
sbb
imul
or
insl
adc
in
push
jnp
mov
jbe
fcmove
ret
sub
mov
dec
mov
sbb
mov
mov
xor
cs
in
loope
arpl
stc
cli
stc
inc
ss
adcl
jnp
jno
stc
jmp
sub
mov
out
rorb
add
sub
cmp
xor
scas
popa
mov
or
scas
ja
add
scas
xor
add
rol
insl
pop
or
push
jnp
inc
insb
sarl
stc
arpl
outsb
pop
mov
jno
das
and
imul
push
push
xchg
jmp
sbb
mov
inc
das
cmp
jmp
cs
mov
dec
ja
xor
mov
jne
in
repnz
fsub
add
inc
pop
push
dec
fistpll
adc
outsb
lahf
stos
push
imul
push
push
push
push
adc
pop
leave
fisubs
outsl
call
imul
pop
movsl
sub
sbb
xor
or
xchg
inc
je
fistpll
in
iret
cmp
push
push
pop
aad
sarl
icebp
xchg
outsb
leave
xor
sub
lcall
sahf
dec
mov
shll
test
andb
fldcw
out
cli
aam
xor
cmp
and
test
or
ret
jl
mov
das
and
data16
dec
pop
jns
clc
add
jbe
push
push
xor
mov
inc
mov
pop
stos
hlt
mov
pop
mov
mov
sub
push
xor
jmp
push
mov
ljmp
mov
gs
adc
addl
xchg
inc
bound
scas
aad
fcoml
and
add
stc
jno
dec
daa
fistl
int3
sbb
jle
das
and
dec
and
ljmp
inc
mov
mov
out
andb
rcrb
adc
arpl
push
sub
and
xor
dec
sub
jns
mov
shl
jo
jmp
out
insb
call
mov
stos
test
jp
outsl
or
pop
imul
dec
mov
cmpsl
pop
and
pop
call
push
clc
inc
ficompl
jnp
scas
negl
lret
cmpsb
xor
mov
xchg
xchg
lret
xchg
push
or
je
dec
adc
inc
je
je
jno
mov
pop
pusha
daa
sub
mov
iret
in
cmp
ja
jae
pop
xor
jns
xchg
jmp
aad
popf
push
dec
cmp
mov
add
sub
jmp
stc
adc
push
jo
cs
sub
dec
jg
std
add
jne
cmpsb
jbe
fwait
jnp
lahf
dec
add
jo
inc
out
sbb
lock
mov
dec
test
imull
loop
pop
dec
sub
adc
cmc
cmp
popf
outsl
shlb
cwtl
out
xor
xchg
sub
inc
pop
repnz
loopne
in
popa
mov
loop
inc
cmp
mov
data16
lret
sbb
fs
lahf
aam
sahf
or
and
movsl
shll
pop
dec
shld
out
fsubr
sarb
fmul
shlb
fwait
dec
mov
mov
pop
shlb
cld
cmp
push
xlat
repnz
xor
adc
pop
repnz
pop
or
lcall
es
gs
fs
mov
push
pusha
int3
push
pop
xchg
pushf
push
jnp
sahf
adc
pop
push
scas
mov
lds
inc
nop
cmp
push
inc
cmpsb
pop
shlb
mov
leave
sub
jae
fs
mov
jo
xchg
hlt
jp
mov
adc
jae
movsl
cmp
cmp
dec
cmpsb
rclb
fiaddl
jecxz
fistl
icebp
dec
cmpsl
push
je
cmpsb
pop
shr
shr
add
inc
fisttps
aad
test
lret
and
add
fnstcw
xchg
add
ss
mov
fildll
inc
xor
mov
inc
mov
dec
push
jo,pn
ljmp
mov
mov
shll
xor
iret
mov
daa
popf
insb
lea
mov
inc
adcb
push
mov
xlat
test
aam
aam
pop
dec
jns
rcrl
lods
sbb
xor
loope
imul
sbb
jmp
mov
shll
out
ret
adc
xor
stc
imul
rorl
jmp
call
cli
inc
xchg
jmp
cmp
shrb
xchg
push
adc
popa
sbb
dec
test
or
daa
les
aaa
cltd
ret
repz
loopne
add
outsb
push
and
lret
fbld
movl
lcall
lods
inc
cmp
xchg
cmp
cmp
sub
mov
pop
xchg
jno
xor
fimull
xor
in
pop
sbb
lahf
pop
fwait
mov
jg
in
call
pop
leave
in
xchg
mov
sbbb
sub
out
shrl
xchg
inc
cmpsl
orl
fldz
ss
mov
lock
or
loop
jge
iret
cmp
int3
push
lods
inc
scas
lret
fstps
mov
popa
popl
and
push
jnp
addb
jae
and
or
lods
mov
push
dec
cltd
sbb
in
xor
int
jae
pop
xchg
stos
mov
sahf
sbb
jnp
popa
outsl
jg
xor
jae
mov
lret
sub
scas
out
ret
xorl
push
lcall
add
inc
out
inc
notb
mov
jbe
add
loope
inc
xchg
dec
mov
and
cmp
aas
sti
jge
loop
dec
stc
sub
rcl
xchg
xchg
sbb
aas
popa
inc
lods
pusha
arpl
mov
ss
int
xor
popa
ss
orl
jno,pt
fldl
daa
movsb
or
push
adc
popf
mov
inc
xor
and
mov
jnp
push
fdivrs
inc
pop
push
push
adcb
aas
cmpsl
in
rcr
pusha
xchg
fldl
dec
mov
leave
cmp
adc
call
cmp
adc
xchg
jnp
dec
scas
push
pusha
add
dec
adc
xchg
push
nop
and
pop
pop
dec
cmp
jnp
movsl
stos
in
hlt
xlat
sbb
call
imulb
jmp
out
jo
xchg
repz
lock
int3
mov
jne
pop
scas
cmp
cmc
sti
sub
mov
ret
insb
rcl
fwait
push
pusha
jb
insb
adc
cwtl
aam
bound
or
and
fldt
cli
fs
nop
hlt
pop
sbb
lcall
adc
je
iret
push
std
notb
and
in
jmp
mov
adc
inc
adc
test
addl
es
jmp
out
mov
fisubl
popf
in
popf
add
xorb
test
push
into
push
mov
std
in
jo
orb
sbb
dec
xor
mov
mov
icebp
sbb
or
mov
dec
adc
test
mov
ficoml
addr16
js
bound
scas
inc
pshufw
je
pusha
cltd
xor
hlt
movsl
push
addl
jecxz
in
cmc
jge
mov
dec
mov
mov
icebp
inc
pop
mov
pushf
rol
mov
xor
add
add
dec
inc
rcll
jo
sbb
pop
sub
fidivl
jb
loope
jbe
add
or
sub
dec
push
cltd
idivl
subb
stos
stc
dec
loopne
sbb
fnstsw
cs
jnp
or
push
and
push
cmpsb
push
jmp
sbb
mov
fs
jbe
jecxz
push
jg
push
fs
insl
outsl
lods
rcr
fwait
addr16
pop
sub
out
add
in
enter
rorb
inc
je
jns
mov
ljmp
cmp
xchg
jle
mov
sub
jg
xchg
jb
mov
addr16
repnz
nop
dec
pop
xor
mov
mov
loopne
mov
dec
add
cltd
mov
stos
mull
pop
imul
pusha
int
lea
mov
int3
loopne
sbb
insl
ljmp
jae
jns
xchg
and
jae
xlat
popl
mov
subb
fwait
push
das
jecxz
push
popf
cmc
cmp
xlat
cs
sub
cmc
adc
jecxz
pusha
cltd
ret
xor
stc
jp
lea
adc
or
repnz
test
cmc
fidivl
js
lea
outsl
int
jns
into
and
mov
xchg
sub
aaa
sbb
rorl
mov
and
out
test
pushf
push
fstpt
lret
pusha
add
jmp
lock
dec
nop
cli
mov
test
add
cmp
pushf
aad
into
lcall
jl
int
sbb
into
pop
in
push
add
in
cwtl
fsubrs
pop
test
fsub
mov
jno
dec
lock
sub
mov
xchg
or
fsubrs
and
ret
sti
enter
xor
push
sbb
adc
push
push
adc
outsb
hlt
imul
inc
pop
test
add
shlb
ret
mov
mov
mov
nop
or
leave
test
sub
jns
xchg
ss
scas
adc
data16
adc
hlt
mov
jno
jbe
out
xchg
icebp
dec
or
lcall
mov
jl
fwait
addr16
xchg
cli
sub
incb
bnd
mov
dec
js
mov
and
and
ljmp
fistpll
daa
scas
or
jbe
frstor
jl
loopne
lea
lcall
fwait
add
xor
sub
pop
lret
fbld
xor
fstl
sbb
push
cmp
lods
fisttps
cmp
test
adc
xchg
mov
adc
and
adc
add
push
inc
xchg
inc
loop
or
popf
rorb
mov
stos
cmpsb
test
pop
das
sarb
data16
xlat
fwait
ds
cmp
aam
or
jns
lock
sti
out
push
mov
testb
xchg
std
test
mov
cmc
xlat
mov
pop
cmc
or
add
push
clc
or
or
sarb
xor
cmp
cmp
shll
cmp
into
cmpsl
sbb
adc
dec
mov
push
test
bound
ret
or
loopne
add
lods
ljmp
fnstcw
subl
mull
push
aaa
stc
push
sbb
mov
es
out
add
out
aas
cli
lds
aam
out
push
jne
ljmp
and
loop
jnp
pop
stos
ret
ret
sbb
daa
ljmp
push
push
lahf
pop
pop
sbb
add
ja
inc
xor
leave
jmp
mov
jns
mov
popa
dec
jbe
sbb
dec
gs
mov
sbb
call
aaa
cmp
jno
xor
jb
push
lret
in
popf
add
mov
lds
call
jo
mov
mov
jmp
add
mov
popa
add
or
sbb
out
out
in
mov
movsl
fdivl
mov
push
or
out
or
insb
cltd
jno
push
aaa
mov
sub
es
repnz
xchg
repz
xchg
sub
pop
mov
pop
sbb
sub
lods
cs
jp
ds
jnp
and
xchg
imul
fwait
mov
mov
test
mov
fwait
mov
fcomps
inc
jno
mov
add
xchg
push
in
inc
loope
out
mov
pop
enter
or
jg
stos
aas
repz
mov
lds
sbb
into
mov
paddsw
inc
or
mov
sub
rclb
dec
dec
fisubrl
cmpsb
movsl
lds
cmp
cmp
bound
sahf
cmp
mov
inc
mov
cmp
push
mov
cmpb
js
out
lea
sub
dec
jae
adc
cmpsb
push
imul
dec
aas
jge
sub
push
sub
xchg
push
dec
and
and
fists
adc
mov
ja
cmp
imul
xchg
xchg
add
mov
movsl
daa
aas
test
js
mov
sub
stos
jno
movsb
jge
daa
and
aaa
movsl
ds
lret
stos
or
lock
xor
lcall
or
cmp
mov
sub
cmp
in
mov
into
mov
adc
and
ljmp
xchg
mov
or
ljmp
push
adcl
stos
mov
es
mov
imul
xchg
imul
push
mov
mov
sbb
out
cwtl
shlb
lcall
jmp
cld
dec
mov
js
and
leave
push
ror
scas
mov
jnp
jb
pop
in
daa
mov
scas
cmp
enter
gs
push
ret
xor
adc
and
bound
or
flds
loopne
sub
sbb
push
jp
xchg
pop
adc
dec
pusha
movsb
dec
rcrl
mov
ljmp
je
out
fstl
xor
subb
jmp
sbb
jo
ss
ds
inc
in
jg
and
mov
lds
jne
cmp
nop
daa
and
lods
insl
lcall
hlt
and
bound
mov
and
test
push
inc
jno
sbb
popa
push
adc
mov
jne
cmpsb
or
push
stos
cld
mov
loope
mov
sti
scas
shlb
inc
loope
lret
mov
jne
xor
add
fucomp
mov
outsl
sub
adc
and
idivl
outsl
sarl
mov
mov
sbb
add
xor
fldcw
sbb
and
adc
sub
fidivrs
test
cmpsl
pop
out
lcall
test
insb
dec
sbb
pop
xor
aam
pushf
lds
xchg
sbb
mov
lods
pop
cmpsl
popa
fnstcw
mov
stos
inc
test
mov
cli
fiadds
sub
push
fabs
imul
sub
jecxz
adc
jns
mov
mov
sub
sub
leave
pop
pop
clc
dec
sub
push
xor
cmp
adc
push
jmp
mov
cmpsl
and
rcll
das
inc
dec
das
fidivrs
mov
ja
or
xchg
dec
fs
imul
mov
int
loope
xor
mov
mov
or
pushl
imul
lea
enter
dec
inc
fistps
faddp
test
mov
cltd
inc
loope
into
arpl
aas
jle
stc
cltd
cs
lea
jmp
lret
in
popa
daa
pop
fisubl
add
aad
mov
lcall
sbb
xchg
push
jp
mov
hlt
mov
roll
push
js
xchg
xor
out
cmp
adc
adc
insl
cwtl
daa
arpl
mov
popf
shr
call
faddp
mov
js
rclb
cmp
les
sub
inc
jp
sub
dec
push
jbe
loop
pop
ds
mov
add
out
std
ja
mov
ret
movsb
cld
mov
test
cli
inc
mov
aad
cmp
mov
inc
filds
aas
mov
dec
and
cmp
adc
sub
sbb
bnd
cmovle
xchg
jmp
mov
rcrb
sub
xchg
xor
call
aad
inc
outsb
dec
jno
ljmp
sbbl
sub
shlb
in
xor
call
test
orb
mov
popa
and
arpl
or
push
mov
push
lret
xchg
lcall
aaa
ss
pop
cmpsb
rcr
dec
push
pop
ss
lock
or
pop
dec
mov
repnz
cltd
xchg
adc
aam
cwtl
jns
mov
sub
add
and
add
jo
shlb
cmc
cmp
push
call
jecxz
inc
jbe
xchg
dec
or
pushf
push
add
movsb
jle
fimull
das
jno
jae
mov
lret
sbbl
sub
push
xchg
cmc
add
cmp
push
mov
scas
and
cmc
push
mov
int3
out
rorl
aad
ss
pop
inc
xor
aad
mov
and
dec
and
mov
pushf
or
fldt
aad
out
cmpl
mov
push
push
inc
push
sbb
hlt
out
popf
dec
xchg
divb
jae
xchg
fwait
daa
sbb
cmp
jp
and
push
jmp
cmp
sbb
clc
pop
cmp
xchg
push
sarb
roll
ret
push
mov
ja
lods
xor
cmp
lock
jge
xchg
jno
jg
push
lods
xchg
pop
cmp
sti
daa
in
pop
js
mov
adc
sbb
cmpl
shrl
or
xchg
aam
addb
pop
push
inc
shlb
fxch
repz
inc
pop
int3
add
sbb
mov
inc
aam
ljmp
ret
jbe
ret
jns
fistps
mov
dec
int3
or
pop
xchg
jge
das
mov
mov
sbb
mov
in
sub
and
mov
xchg
mov
push
scas
mov
push
sbb
das
and
nop
test
stc
call
sub
lds
data16
rcr
mov
fidivl
pop
add
mov
pop
pushf
icebp
mov
scas
pop
dec
push
pop
fwait
pop
js
inc
jg
or
flds
lcall
xchg
addr16
and
xchg
xor
popa
iret
repz
push
in
fildll
stc
in
xor
push
es
mov
mov
cld
or
in
dec
out
sub
shll
stos
test
jbe
sub
sarb
pop
cld
sub
jecxz
imul
lret
js
js
sbb
test
add
insl
sub
lods
aad
fdiv
dec
adc
jne
xchg
iret
in
xlat
ja
dec
fdivrs
xlat
lods
das
fcomp
stos
sbbb
dec
lds
xor
sbb
ret
mov
jo
cmp
or
ficomps
pop
imul
test
aas
dec
or
rclb
mov
sub
push
jb
in
xchg
pop
mov
xor
fcmovnbe
mov
sub
inc
pop
inc
cmp
bound
cmpsb
sub
in
sub
mov
push
or
fldl
mov
enter
adc
fs
sbb
test
mov
lods
or
notl
sub
fistpll
or
push
ja
call
fsts
dec
push
int3
arpl
cmpsl
jne
xchg
repz
call
call
push
sub
les
gs
pop
jne
test
sub
jbe
cmp
imull
mov
fimull
movl
and
out
outsl
jno
and
out
pop
add
inc
inc
sbb
into
push
mov
sub
or
and
aaa
cmp
repnz
scas
jmp
jbe
and
cmp
repz
push
and
decl
outsb
mov
in
lcall
lods
or
mov
cwtl
test
xchg
add
jle
in
daa
inc
movsb
and
add
xchg
lock
flds
aad
mov
adc
pop
jb
push
push
jo
inc
inc
push
sbb
cmp
push
es
movsb
mov
jae
sub
sub
orl
mov
rorl
bound
dec
push
add
push
mov
clc
jecxz
adc
adc
loope
icebp
push
decl
aam
inc
fcoms
sub
sahf
sbb
adc
enter
mov
test
or
xor
call
cmpsl
xchg
divb
loop
call
idivl
aad
in
sub
scas
jbe
fwait
push
dec
xor
cli
add
ret
daa
in
cmp
pop
push
sub
jo
add
enter
ret
mov
add
into
push
dec
xchg
pusha
loopne
repz
mov
in
jnp
xchg
and
rcr
or
daa
or
in
daa
aaa
cltd
cltd
jge
pop
jp
frstor
sbb
outsl
and
imul
xor
pop
pop
aad
mov
add
push
into
or
mov
loope
pop
fidivrl
inc
rcrb
ljmp
mov
mov
sbb
and
hlt
xchg
jecxz
push
dec
aad
ljmp
xor
adc
pushf
add
adc
je
adc
dec
pop
fdivrp
subb
adc
add
xchg
lods
mov
fmul
xchg
or
in
out
and
sub
cmc
pop
nop
test
pushf
cmp
addr16
xchg
js
mov
fsubrl
stc
loop
xor
push
pop
cmp
xchg
sarl
rorb
imull
or
ja
lret
aaa
rcr
and
inc
dec
stos
inc
jbe
mov
push
ja
pop
add
enter
jp
mov
aas
xchg
xchg
pushf
fsubr
inc
mov
add
sbb
or
cmp
mov
cwtl
sub
sub
loop
xchg
neg
adc
mov
in
cmp
les
cmp
push
mov
sar
jbe
lds
cmp
sbb
mov
jnp
mov
icebp
cltd
out
fstpt
daa
loop
call
mov
int
ret
lock
jnp
mov
sub
movsb
mov
loopne
in
bound
pop
out
lods
mov
cltd
dec
jmp
out
adc
ret
dec
pop
ficomps
loopne
xchg
mov
out
add
hlt
fwait
mov
mov
iret
pop
in
cmp
addr16
inc
les
int3
sub
adc
loopne
xor
jle
ja
fisubl
frstor
and
repnz
mov
xchg
loope
jl
fcomps
pop
fbld
rorl
mov
cmc
cmpl
sbb
pop
inc
push
fldenv
jg
adc
jp
xor
pop
icebp
call
xor
rcrb
mov
int
dec
stc
test
cmp
popa
stc
xor
pop
insb
dec
add
sbb
push
ds
pop
outsb
adc
mov
mov
stc
ret
and
loop
pop
mov
lahf
cmp
aad
push
cli
neg
test
add
insb
pop
mov
repnz
loope
nop
jo
push
scas
enter
dec
addr16
mov
mov
push
add
cmp
push
adcb
fstpt
mov
stc
jmp
mov
lret
out
cld
sbb
outsb
sbb
xor
rclb
hlt
das
cs
fwait
sahf
aad
push
call
rorl
add
xchg
pop
xchg
pop
mov
imul
lds
push
pop
call
push
nop
mov
cwtl
addr16
push
test
mov
data16
shl
sbb
jg
and
movsb
and
jg
jbe
clc
iret
or
fidivrs
jle
mov
loop
jp
enter
imul
pop
sbb
test
pop
fdivl
jp
mov
xchg
out
fists
mov
or
pop
and
xor
loope
andl
loopne
mov
sub
xor
mov
adc
cmp
aaa
mov
cmp
shlb
mov
cmp
mov
jp
and
gs
inc
lock
lret
je
clc
mov
call
scas
or
fcomps
and
jns
lret
xor
mov
mov
mov
push
push
bndldx
dec
mov
sub
leave
jne
inc
dec
mov
inc
mov
insl
mov
das
repnz
pop
sub
push
dec
pop
cltd
and
lds
xchg
push
sbb
test
subl
xchg
adc
ficompl
cwtl
in
jae
cmp
push
xchg
imul
inc
mov
mov
and
xlat
ds
into
cmp
int3
fcoml
and
sarl
push
daa
insl
fmuls
add
mov
mov
out
mov
jns
xor
xchg
repnz
addr16
xor
testb
out
je
xor
icebp
add
and
out
mov
sub
mov
imul
jle
leave
fsubrl
xlat
inc
mov
lcall
or
call
cmp
jns
sarb
arpl
mov
xchg
shlb
mov
mov
push
jnp
inc
stos
mov
pop
clc
sarl
dec
sbb
pop
ljmp
inc
into
mov
pop
loop
mov
mov
and
shrb
dec
movsb
push
adc
insb
or
add
sbb
in
or
xor
stc
xchg
push
test
cli
xchg
cltd
dec
fsub
and
push
pop
mov
mov
fwait
int
mov
daa
mov
mov
fistps
cmpsb
push
push
nop
ficoml
pop
call
fiaddl
lock
mov
or
sub
pop
dec
iret
xchg
jmp
sbb
dec
data16
pop
test
scas
sub
inc
in
cmp
lods
jb
mov
filds
fsubrl
add
scas
xor
or
mov
out
jmp
xor
lahf
adc
out
dec
xchg
fs
lret
insl
fs
add
aad
sub
mov
add
addr16
jnp
movsl
out
es
mov
and
das
mov
cld
mov
jnp
mov
ja
push
sub
popa
jb
adc
push
int
or
not
mov
cmpsl
aad
popl
pop
das
subl
push
push
nop
sahf
xchg
mov
dec
mov
dec
outsb
sbb
sbb
in
stc
jg
scas
clc
sbb
les
inc
inc
cmp
shl
mov
or
jge
fdivl
loope
sbb
in
incb
out
cmp
ret
addr16
mov
mov
adc
mov
mov
inc
cmp
pop
sbb
xchg
cmp
xor
stc
notl
loope
movsl
push
aad
mov
aas
or
and
mov
leave
cld
jge
add
and
cmp
mov
test
pusha
xor
outsl
movsl
push
sbb
repnz
sbb
dec
mov
adc
aam
mov
dec
gs
jns
movsl
xor
lods
js
inc
jmp
and
xor
lret
mov
sub
mov
lds
stos
sub
or
mov
sti
loope
sub
jo
push
fstps
xlat
test
adc
fsubrp
sub
mov
sti
xor
js
shrl
lods
dec
hlt
arpl
jns
dec
pop
lods
mov
outsb
mov
cmove
sub
fcoms
mov
mov
in
pop
add
cmp
add
arpl
inc
pop
cmp
test
mov
lret
adc
xlat
lds
pop
pop
loopne
or
ja
out
mov
imul
adc
sbb
pop
pop
scas
popf
mov
insl
mov
mov
push
pop
xlat
inc
inc
mov
mov
insb
fstl
pusha
sub
jne
or
iret
fstps
sub
mov
jmp
stos
les
in
add
push
ret
cli
jb
rol
and
movsb
shlb
jecxz
int
mov
mov
sahf
call
jecxz,pn
incb
daa
xorb
es
and
loopne
in
shrb
sub
sbbb
ds
shlb
sbb
dec
insb
sbb
aas
fwait
mov
mov
out
lock
xor
push
iret
std
mov
xor
dec
mov
js
push
push
cli
mov
lret
mov
insl
add
mov
add
and
incl
cmpb
sub
lcall
jl
repz
push
dec
jmp
repz
adc
xchg
inc
fnstenv
lret
xlat
cmp
enter
xchg
xor
jb
rcrb
xchg
add
orl
xor
and
mov
cmpsb
sub
jg
dec
add
mov
xchg
enter
mov
mov
inc
jo
inc
iret
mov
dec
cmc
sub
out
out
enter
push
out
mov
fsts
nop
sub
inc
movsb
inc
mov
es
jae
mov
outsl
les
inc
pop
inc
jge
xor
movsb
lds
lds
mov
sub
mov
out
stos
mov
es
mov
adc
lahf
mov
inc
inc
push
ja
jg
lds
cmpl
pop
test
add
stos
push
dec
out
pop
loopne
mov
cmpsb
mov
lods
pushl
xchg
mov
shll
roll
movb
xchg
imul
mov
ja
fldcw
movsb
loopne,pt
pop
nop
push
xor
push
push
xor
cmp
loop
cmp
sub
addr16
pop
sbb
stos
call
jbe
movsl
xorb
notb
fcoml
fistps
xchg
fildl
jp
cmpsb
add
bound
mov
cmp
push
push
mov
test
bound
sub
and
pusha
ja
push
dec
repz
fists
add
mov
mov
mov
sbb
fnstsw
pop
inc
insl
inc
mov
in
movb
adc
dec
dec
fldcw
data16
aaa
sub
jle
adc
outsb
jg
pop
mov
lret
xor
cmpb
shll
jmp
ljmp
sarl
loop
repnz
jmp
mov
jns
and
repnz
popf
iret
xor
mov
scas
push
push
incl
aas
lea
jmp
mov
adc
pusha
ret
mov
arpl
cwtl
dec
ss
std
add
or
mov
lods
sbb
pusha
test
sarl
jl
cmp
notb
pop
inc
mov
xorb
je
xor
pusha
in
fs
hlt
xlat
mov
iret
jp
test
enter
cmp
lds
cli
orl
ljmp
pop
outsb
and
dec
cld
stos
aad
popa
out
daa
pop
mov
out
into
rcr
push
lods
test
mov
sub
dec
les
movsb
lock
test
push
or
aad
push
sub
and
mov
push
mov
mov
cmp
push
pop
jl
jge
pop
xorl
pop
call
mov
cmc
xchg
lods
mov
sbb
ret
cmp
js
jl
inc
mov
dec
in
xorb
fs
cmp
fsubl
mov
or
inc
mov
subw
leave
loop
mov
lcall
dec
cmp
cmp
fwait
and
jge
or
ljmp
sub
mov
adc
push
pop
mov
and
mov
cmp
int
xchg
imul
mov
int3
inc
mov
mov
cmp
jno
mov
les
jg
mov
and
outsb
imul
int3
dec
mov
cmpsb
xor
push
div
push
test
test
and
stc
in
mov
jge
hlt
ss
cmpl
scas
sbb
fldenv
bound
sub
lods
jge
in
push
sub
sarb
mov
pop
sbb
inc
ljmp
je
shlb
adcl
pop
sbb
mov
inc
push
jp
mov
push
cmc
out
inc
push
add
ljmp
mov
xchg
aaa
push
cmp
lock
mov
notb
mov
repz
pop
mov
movsb
stos
gs
fsub
insb
cmp
xchg
fidivrl
negl
rol
dec
shrb
fidivrl
mov
fs
sqrtps
dec
and
sbb
in
mov
aaa
add
mov
mov
adc
push
dec
push
mov
stc
cltd
mov
mov
jno
sbbb
fldcw
scas
ss
and
inc
lcall
dec
mov
cmpl
fmul
add
loopne
cmp
push
xchg
out
dec
mov
jb
daa
mov
adc
mov
push
mov
inc
sbb
dec
xchg
jo
xor
pop
push
xchg
xlat
xchg
mov
in
mov
cmpsl
cmp
ret
test
test
ljmp
mull
fwait
jl
movsl
notb
dec
pop
pop
out
cmp
mov
mov
outsl
stc
lds
test
lahf
ds
shll
xchg
insl
pop
es
jmp
sub
ja
lds
orl
mov
sub
outsl
push
popf
mov
dec
jo
push
hlt
mov
cmp
pop
pop
cld
cmp
mov
dec
xor
lds
cs
fstpt
icebp
xchg
cmp
mov
int3
int3
cmpsl
inc
sbb
hlt
arpl
fmulp
xchg
scas
loope
loopne
cli
stos
lret
in
nop
add
push
cmp
cmpsl
stos
cmpsb
test
sbb
push
cmp
or
dec
pop
inc
mov
cli
arpl
sbb
adc
les
stos
cmc
pop
pop
mov
xchg
or
gs
aas
lcall
dec
sbb
mov
push
mov
jecxz,pn
imul
sub
test
jo
dec
xchg
mov
jp
fsubl
xor
pop
sahf
shrl
push
adcb
and
sub
or
jge
jne
push
xor
sti
sbb
mov
push
mov
fdivrs
dec
lock
pop
out
jno
xor
xor
xor
xor
movsb
scas
sub
mov
insb
adc
jo
xchg
test
sub
jge
jmp
jle
push
sbb
dec
aam
mov
test
jne
inc
popa
xchg
jo
mov
ret
sbb
in
cmpsl
sub
or
ret
js
xor
sub
jno
gs
sbb
nop
repz
mov
in
pusha
mov
cmc
push
add
adc
mov
add
in
add
iret
push
mov
push
out
lahf
adc
clc
jle
xchg
add
xor
mov
fldl
daa
push
js
in
add
add
popa
adc
fisttps
mov
push
push
shr
mov
add
jmp
jp
inc
movsl
jnp
xor
dec
push
and
cmp
ds
xor
shl
xor
mov
sbb
imul
xchg
frstor
cs
ret
loopne
xchg
mov
push
xor
ret
mov
dec
xchg
es
pop
popl
scas
loope
enter
jb
idivb
cmp
sarb
add
adc
divl
push
notb
subb
mov
push
nop
and
ret
sti
sbb
push
push
dec
xchg
sbb
loopne
or
hlt
push
testb
jle
adc
add
int3
inc
push
mov
sbb
js
xor
addr16
pop
jae
pop
in
inc
mov
add
push
in
scas
das
ficoms
adc
adc
xchg
xchg
das
or
lahf
pop
xchg
dec
popw
adc
mov
adc
xor
fs
and
sbb
xor
jae
cmp
rorb
fs
sbb
xchg
loope
mov
pop
iret
mov
and
cmp
add
xchg
cltd
ret
sub
inc
je
shll
lahf
jp
outsb
or
mulb
inc
cmpsl
dec
icebp
imul
lcall
jno
jmp
loopne
lahf
mov
dec
loopne
and
adc
dec
pop
or
and
xchg
add
loope
cli
subl
sub
jnp
jo
lock
nop
xor
xlat
mov
test
fcmovnb
xchg
jae
jmp
outsl
loope
jne
inc
in
fbld
out
inc
sub
xor
rolb
fcoms
jae
ficomps
dec
inc
cmp
and
mov
xchg
aad
popa
insl
std
xor
pop
mov
dec
push
fmull
or
sahf
out
rcl
dec
cltd
mov
lds
pop
outsl
mov
mov
pushf
cltd
cmp
xor
jbe
cli
je
cmc
into
popl
dec
inc
push
push
clc
adc
fstl
subl
pop
imul
shlb
fdivrl
popf
push
ss
idivl
sbb
outsb
and
je
or
push
fsubp
xor
adc
divl
pop
cmc
fbld
inc
push
lret
pusha
push
jbe
sbb
and
and
cltd
push
sahf
xchg
jb
sub
mov
inc
cmp
fisubs
cli
js
jmp
lret
jecxz
xchg
jae
add
js
dec
dec
xchg
fwait
not
mov
insl
enter
sbb
sbb
jmp
xchg
stos
gs
jnp
pop
int3
inc
mov
mov
cmp
sar
pop
and
imul
jmp
arpl
mov
into
cmc
neg
mov
sahf
call
cmpsl
loopne
mov
add
add
jno
adc
mov
jge
leave
mov
cwtl
adcb
pop
rol
mov
test
adc
outsl
add
mov
movsb
xorl
pop
xchg
push
js
jnp
xchg
pop
cmp
sti
sbb
push
jge
dec
std
jp
or
lahf
repz
add
and
fisttps
fwait
push
jecxz
push
sbb
test
or
inc
test
mov
dec
fmull
or
out
mov
jl
jge
or
pusha
shrb
jns
mov
leave
movsb
dec
fwait
out
sub
movsb
push
std
add
xchg
lds
notb
jl
jb
es
inc
xchg
scas
iret
into
popa
dec
rclb
jmp
mov
sbb
jo
fwait
daa
fwait
data16
xchg
cmpsb
mov
sbb
test
push
mov
addb
and
pop
sbb
stos
mov
pushf
test
xor
dec
adc
and
mov
rdtsc
nop
rcrb
mov
mov
adc
dec
xchg
addr16
jo
je
mov
lret
pop
imul
scas
cmpsl
fdivrl
jp
outsb
pop
push
xchg
or
cmpsl
add
xchg
testb
sub
popf
cld
sub
ficompl
and
stos
or
frstor
mov
fbstp
jg
xor
push
jmp
jnp
jnp
and
mov
rcl
jns
add
lods
sub
outsl
inc
sub
scas
mov
cmpsb
or
dec
pusha
sarl
pushl
mov
movsb
ss
mov
movsb
ret
mov
and
and
cli
jo
das
sbb
cld
test
out
cmpsb
adc
mov
data16
and
lcall
jo
fildl
and
xchg
jae
add
jg
mov
das
push
test
jae
adc
mov
sbbl
sbb
jle
adc
sub
sbb
and
jbe
mov
es
inc
jl
ds
iret
daa
mov
xchg
xor
jbe
cmp
lea
out
les
repz
and
and
cmpsb
cs
add
xlat
jnp
push
shrl
fsubrs
sbb
fiaddl
cmp
jp
and
or
fsts
mov
ja
lds
push
popa
adc
js
cmp
fistpl
mov
and
mov
orb
and
jg
sbb
iret
imul
push
fildll
xlat
mov
adc
pop
cmc
cmp
adc
outsl
inc
cmp
xor
xchg
nop
mov
pop
movsb
xor
loope
xchg
dec
sbbl
lret
mov
xor
push
dec
movsl
lock
insb
sbb
xchg
fildl
inc
adc
mov
mov
clc
mov
outsl
inc
rorl
sahf
inc
inc
push
scas
xchg
add
jge
or
rclb
pcmpgtw
frstor
and
test
mov
insb
lcall
movsl
push
xor
mov
add
mov
xor
cli
xor
mov
cld
mov
call
test
fwait
sub
dec
jae
add
outsl
outsl
movl
jmp
hlt
xor
sub
xor
adc
stos
pop
loope
jne
pop
mov
sub
lret
in
call
sub
in
dec
bound
repz
ljmp
xor
jg
dec
xchg
jne
xchg
test
push
or
pop
adc
sbb
mov
mov
clc
jns
inc
jns,pn
pop
jl
cmp
or
push
cwtl
sub
aaa
jo
jl
or
in
xchg
insb
or
xor
fs
fisubl
sub
push
pushf
pop
xchg
imul
xor
push
fcmovnu
fwait
cmp
jo
xchg
pop
das
mov
sbb
cld
into
in
loope
dec
xchg
dec
test
push
fcoml
icebp
fcomps
dec
cs
adc
jge
icebp
dec
fcmovnbe
add
mov
faddp
arpl
es
into
lret
xor
and
rorb
xchg
add
int
out
inc
aam
cli
outsl
sub
xchg
jo
repnz
and
sbb
dec
mov
pop
lahf
std
add
and
inc
outsl
push
and
int3
ja
mov
adc
aaa
pop
dec
loope
aas
addps
lret
inc
dec
enter
jns
mov
dec
or
xchg
pop
mov
and
or
pop
xor
in
andl
loope
dec
popa
fwait
jge
push
orl
sub
adcb
leave
mov
in
call
sub
shll
sub
push
mov
pop
ds
gs
ret
fsubs
jbe
pop
test
adc
movsl
jno
ret
dec
push
pusha
cld
pusha
pop
dec
fildl
insb
mov
insl
mov
jl
pop
dec
cltd
jne
jg
add
or
jp
lds
xchg
inc
dec
mov
stos
sti
int3
nop
xchg
mov
jns
faddl
xor
rorl
xor
or
push
adc
push
push
inc
dec
mov
lret
jl
pop
and
xchg
lods
sub
xchg
loope
lds
inc
dec
push
push
test
mov
insl
sahf
jl
push
in
dec
dec
push
xorl
cmpl
repnz
out
dec
orl
mov
and
push
cmpsb
push
test
sub
xlat
lret
ret
mov
sub
xor
push
xchg
icebp
ficompl
mov
icebp
xor
insl
inc
cmp
sub
fdivs
lcall
dec
leave
repnz
push
mov
cmpsl
pop
scas
and
fs
adc
push
dec
popf
aas
scas
mov
mov
in
mov
inc
sbb
outsl
xchg
xor
andl
push
mov
pusha
aad
out
fisubl
jle
stos
xchg
xchg
push
pop
mov
or
cltd
push
flds
imul
fwait
xorps
lcall
cmp
xchg
jbe
gs
jo
aaa
in
test
sub
cmpsb
mov
test
lret
or
adc
outsl
or
or
mov
jb
into
push
lock
negb
sbb
sbb
push
add
sbb
jo
push
fcomip
sub
pop
mov
and
dec
call
inc
add
in
jmp
mov
mov
sti
sbb
adcl
fistps
ficomps
lods
push
test
xchg
cwtl
or
insl
jmp
xor
fsubrl
mov
jb
shrl
js
inc
xchg
cmp
mov
mov
stos
xchg
movl
aad
inc
jne
adc
lock
and
xchg
or
and
stos
imul
dec
jl
addr16
lods
movsl
gs
pusha
fcomps
adc
stos
int3
out
lods
out
sbb
pop
jecxz
insb
bound
ljmp
iret
mov
pop
and
leave
fisttpll
inc
shlb
jp
vorpd
pop
inc
loopne
xchg
jne
lods
adcb
sbb
push
notl
mov
repnz
pop
push
shlb
or
and
xlat
mov
mov
sbb
loope
bnd
push
sub
iret
cmp
sub
mov
lock
inc
jmp
loop
adc
sahf
repnz
jle
cmp
test
sbb
mov
mov
lcall
movsl
inc
fwait
sahf
outsl
scas
fcoml
push
ficoml
xchg
pop
and
sarb
pop
cmpsb
or
and
scas
sub
aad
sub
out
mul
cmpsl
sub
jge
lods
enter
jne
push
js
xor
orl
or
and
push
and
out
jp
mov
fisubl
cmp
aad
add
ljmp
insb
xchg
inc
lock
mov
pmullw
mov
inc
mov
nop
dec
cwtl
inc
ss
pop
test
jo
push
push
inc
xor
sarb
mov
mov
adcb
je
adc
and
push
sub
sub
xchg
out
xor
loopne
jg
das
and
roll
lret
xlat
sahf
mov
jp
or
cmp
dec
jae
mov
icebp
sti
inc
mov
or
test
mov
mov
cmp
fistl
mov
bound
out
inc
in
lods
ja
cli
ret
mov
cmp
fsub
sti
mov
cmpsl
xor
lds
test
pop
or
pop
inc
and
xchg
xor
jb
ficompl
add
mov
ss
xchg
rcll
xchg
fbld
inc
cs
and
dec
mov
xchg
loop
mov
ljmp
icebp
in
jbe
jbe
push
or
push
ds
push
jno
jmp
pop
scas
movsl
ds
push
mov
aad
into
xchg
jb
popf
cmpsl
pop
push
stos
sub
jne
sahf
adc
mov
cmp
cltd
dec
cmp
je
popa
mov
dec
and
hlt
std
lods
adc
movups
das
aas
dec
xchg
enter
stos
sbb
or
daa
and
xchg
add
lahf
sub
ret
mov
xor
aad
vpsadbw
pop
popa
mov
xchg
xor
loope
mov
loop
mov
in
or
iret
xor
test
iret
test
push
push
out
xor
aam
loope
adc
mov
mov
mov
dec
mov
adc
cmc
sub
jmp
dec
push
fsts
push
inc
push
pop
push
sub
iret
inc
testb
lret
mov
iret
jne
leave
in
add
push
add
mov
hlt
movsb
out
clc
sub
pop
xchg
mov
fisttpll
enter
mov
clc
add
xor
test
pop
cmc
out
pop
adc
jns
inc
pushf
pop
stos
mov
int3
xchg
adc
xchg
cmp
and
cmpb
adc
aas
xor
sbbb
push
test
aaa
adc
ljmp
cmp
fucomp
jge
xor
lods
sti
int
scas
aad
icebp
xchg
aaa
cmp
dec
push
sbb
in
push
sbb
sbb
push
push
xchg
mov
mov
aas
fsubrs
fs
test
lods
stc
std
mov
push
sub
and
add
push
sub
leave
pop
loop
aam
repnz
cmpsb
outsb
and
daa
sub
insb
sub
out
sub
test
sub
or
push
decb
xchg
push
clc
negl
sbb
aam
ljmp
or
xchg
scas
sub
into
sub
or
aad
loopne
fimuls
scas
mov
fwait
jge
jmp
jecxz
loopne
xchg
shrb
lods
dec
in
pop
jge
inc
xchg
push
sub
xor
pop
sbbb
push
call
lock
les
andb
rcll
jno
loope
and
push
xchg
or
push
cmp
cmpsb
xor
icebp
cmp
add
push
pop
mov
mov
aas
jno
pop
pop
jmp
mov
jle
add
ja
sub
adc
adc
js
adc
cmpb
push
cwtl
daa
into
aas
cmp
pop
outsl
dec
out
add
adc
xor
test
cli
mov
lods
gs
ds
dec
je
clc
dec
mov
in
in
adc
rep
scas
ljmp
mov
js
xor
cmp
cs
and
or
aam
mov
lret
cwtl
jl
sbb
push
aas
push
mov
pop
pushf
dec
mov
out
repz
xor
mulps
lock
xor
das
cmp
loopne
pusha
xchg
and
scas
scas
sub
sbb
pop
dec
xchg
test
inc
insl
sbb
aad
mov
dec
ret
or
fcompl
insb
xchg
jnp
pop
hlt
daa
mov
cmp
pop
adc
cld
imull
or
aam
aam
lahf
adc
and
shlb
out
adc
mov
repz
jbe
jle
cs
xor
jg
adc
sbb
ljmp
jle
pop
cmp
sbb
int3
sbb
fldcw
in
pop
jae
sarl
xchg
enter
xor
xor
adc
sbb
jb
stos
push
adc
add
mov
mov
inc
adc
push
xchg
mov
mov
fstps
cmp
inc
push
ljmp
jb
sahf
mov
mov
pop
mov
subl
jge
faddl
fs
jl
fsubrs
bound
fdivl
ret
aaa
mov
adc
dec
insb
mov
adc
push
das
daa
call
cmp
jns
xchg
jl
push
lods
ficoml
mov
jns
fwait
scas
jmp
sbb
into
sbb
mov
lods
cmp
jno
cmp
sbb
lahf
mov
pop
jmp
mov
pop
pop
sub
outsl
stc
pusha
push
push
ret
orb
xor
pop
xor
mov
sbb
jns
loope
push
or
popa
pusha
test
data16
xchg
mov
inc
daa
dec
jae
sar
sbb
imul
lcall
mov
xchg
shll
ds
dec
flds
push
push
add
pushf
dec
lds
mov
rorl
addb
and
xchg
imul
xchg
cltd
inc
jg
lock
popf
jnp
sub
cmpsb
sahf
dec
aad
movsb
lret
mull
pushf
xlat
mov
sub
push
mov
sbb
jge
pushl
dec
add
loop
movsb
or
mov
push
outsl
push
cmpsl
xchg
cmpsl
xchg
fwait
adc
imul
test
addr16
sbbl
pop
inc
inc
mov
sbb
and
and
pushf
or
push
in
stc
std
pop
test
fs
loopne
outsb
cmpb
add
or
pop
nop
mov
pop
xchg
adc
stc
dec
popa
test
scas
cmc
xor
jle
repnz
add
sbb
jmp
mov
enter
cmpsl
dec
out
pop
adc
mov
add
xchg
xchg
mov
shrl
xchg
int
pusha
adc
fisttps
rolb
pop
stc
adc
cmpsb
add
pop
mov
sbb
mov
add
enter
imul
mov
popf
cli
inc
in
jno
insb
sti
sbb
jno
test
pop
mov
pop
rorb
iret
jl
popa
sahf
imull
dec
fidivrl
mov
fnstenv
rol
or
leave
adc
dec
mov
decb
cmp
aaa
aas
adc
test
out
add
sub
bound
scas
pop
xchg
dec
out
jbe
scas
int
pop
daa
outsb
mov
push
sbb
fldt
loop
std
lock
mov
addr16
push
push
iret
fcmovne
rcr
mov
scas
stos
aad
aam
xchg
inc
pop
mov
mov
lods
mov
in
dec
xor
mov
or
daa
pop
ljmp
jae
ss
pop
dec
adc
sbb
push
shll
insl
and
dec
test
lds
jle
out
mov
fisttps
mov
sbb
loope
mov
mov
mov
add
mov
test
fdivl
and
jge
xor
mov
into
push
or
loop
pusha
xor
stc
inc
jge
pop
cld
adc
nop
icebp
add
out
inc
jb
adc
add
mov
fidivrl
aam
in
xor
sub
xlat
je
mov
push
or
adc
add
loopne
mov
add
mov
mov
adc
mov
jge
xchg
inc
jns
mov
mov
cmp
push
movsl
sahf
or
lods
fs
push
add
icebp
cmp
call
cmp
mov
mov
lret
pop
inc
lret
cld
iret
les
mov
fldl
test
and
dec
xor
mov
push
xchg
sub
loop
lahf
jb
inc
dec
adc
stc
pushf
dec
clc
push
in
in
jp
cmc
mov
lock
repnz
cli
aam
inc
mov
xchg
fidivl
fildll
popf
jo
adc
fmull
push
adc
jno
add
inc
xchg
sub
sub
loope
mov
test
popf
add
shrl
pop
push
dec
inc
std
inc
dec
scas
inc
ds
add
sub
gs
pushf
cmc
jo
dec
mov
pop
push
loope
xchg
xor
dec
or
add
fwait
aad
rorl
lock
xor
pop
loope
mov
sar
mov
sub
dec
and
cld
mov
push
or
mov
ret
adc
mov
jns
adc
pushf
push
xchg
xchg
fnstcw
pusha
adcl
cmc
or
mov
repnz
nop
cld
pop
mov
aaa
sub
xchg
jb
das
cwtl
loop
mov
jl
repz
cltd
pop
and
int3
bnd
scas
jne
fidivrl
cld
imul
cmp
cli
loopne
ret
add
xchg
lret
leave
dec
test
shlb
inc
cmpsb
pop
lds
jno
movsb
scas
loop
or
movsb
mov
mov
cmp
loope
xchg
xchg
pop
sbb
mov
vphaddbq
pop
cwtl
out
movsb
lret
jns
in
sbb
inc
mov
mov
je
enter
or
add
xchg
mov
adc
into
js
inc
cmpsl
and
and
xor
push
int3
lahf
in
mov
mov
repz
dec
aas
cmp
sub
inc
xlat
shl
dec
mov
out
insb
hlt
dec
inc
lea
cmpsb
mov
fs
shll
and
out
or
adcb
inc
mov
popa
adcb
cli
pushl
testl
in
xlat
adc
mov
xor
sub
pusha
mov
test
std
sub
fcompl
and
xor
arpl
fdivrl
mov
or
add
mov
popa
sub
stos
sbb
movl
nop
and
gs
or
imul
jg
data16
idiv
xor
mov
insl
hlt
jge
inc
pop
dec
movsl
jecxz
sub
add
aad
xchg
jmp
jp
pop
jne
pop
mov
bound
fwait
js
mov
and
or
cmc
and
movsb
ret
pop
scas
lahf
xchg
cli
cmp
sti
pop
mov
ficoml
out
stos
mov
push
scas
xor
mov
hlt
xchg
mov
mov
xchg
pop
fists
divb
mov
fistl
imul
dec
jle
notb
mov
mov
dec
add
jb
inc
xor
lcall
stc
jne
stc
fdivrs
inc
add
adc
xchg
insl
push
mov
push
js
hlt
sti
xchg
sti
sahf
or
loopne
cmpsb
push
insb
sbb
inc
adc
xchg
sub
in
push
mov
lret
mov
and
icebp
loop
dec
xchg
pop
add
sub
cli
push
mov
dec
leave
pop
sbb
dec
cmpsl
mov
ficoml
cmpsl
fnsave
push
jl
stc
stos
cmp
gs
fwait
jbe
popf
inc
fdivr
jb
push
cld
out
repnz
jmp
push
sub
jne
sahf
push
push
jle
daa
mov
cmpsb
jecxz
add
mov
mov
jge
or
sti
cmp
rcrb
insl
lcall
lods
cs
lods
sub
iret
and
xchg
cmp
inc
outsb
sub
mov
xlat
jb
out
mov
sub
mov
xor
lcall
mov
mov
ljmp
sbb
sub
add
push
ja
push
outsl
push
mov
jle
jno
leave
fwait
jbe
sahf
loope
out
out
or
and
ja
and
movaps
inc
enter
jno
or
es
and
xor
xchg
rcl
push
pop
fistl
or
xor
nop
xchg
insb
pop
sbb
mov
push
mov
add
mov
xlat
ds
mov
cmp
add
inc
jmp
add
sub
adc
xor
mov
dec
repz
ljmp
test
add
out
dec
add
ret
je
or
push
push
rolb
sbb
inc
mov
call
pop
ljmp
lret
sbbl
mov
add
arpl
fimull
js
loop
mov
xor
mov
popa
cld
jae
cmpb
pop
insb
dec
stc
adc
and
cmp
mov
int3
or
popa
xchg
mov
mov
mov
xor
repz
jb
repz
jle
inc
adc
lahf
push
les
push
mov
add
mov
cmc
enter
sbb
leave
sbb
push
test
negb
pop
in
push
push
pop
sub
xor
popa
xor
lret
je
icebp
jp
mov
cli
dec
sarl
fsts
hlt
lret
int3
cs
fs
mov
jecxz
adc
jnp
or
xchg
inc
icebp
movsb
out
lds
imul
push
jmp
rorl
cmpsb
mov
cs
pop
add
inc
mov
out
jo
lods
dec
mov
xor
jbe
iret
loop
add
and
inc
or
mov
arpl
fsubs
xor
inc
add
cmc
fistpll
mov
pop
and
fbld
and
adc
scas
xor
sbb
dec
push
xchg
add
sub
mov
in
repnz
push
lcall
dec
xor
mov
or
adc
rcrl
inc
dec
pop
jno
sub
or
ljmp
pushf
mov
std
aas
loope
pop
gs
lcall
add
mov
mov
lea
push
adc
repz
jp
xchg
in
nop
jno
sub
mov
xchg
movsb
mov
out
pop
iret
std
mov
int3
loope
inc
inc
push
dec
xor
iret
imul
lahf
lcall
into
lcall
mov
mov
xchg
xor
xchg
or
mov
test
fistpl
push
lret
hlt
imul
idivl
xchg
stos
pop
or
adc
in
fisttps
in
or
lcall
mov
test
stc
nop
negb
sti
push
jnp
stos
rcll
jp
loopew
or
mov
lds
lods
test
daa
mov
scas
int3
sbb
clc
lods
cmpsl
test
push
dec
fucom
xchg
repz
adc
in
mov
xor
fildl
xchg
xchg
leave
dec
test
or
lcall
and
lea
lret
cmpsb
and
scas
mov
xchg
sbb
les
outsb
lock
xchg
aam
sub
neg
mov
mov
dec
add
adc
in
mov
mov
jle
enter
cmp
mov
fwait
add
and
les
cwtl
sub
xor
mov
fsubr
leave
lods
or
mov
inc
and
popa
and
ljmp
shrl
insb
fdivrl
jo
inc
mov
fcmove
jae
or
jp
movsl
cmpsl
aaa
pop
inc
cli
ds
xchg
scas
xchg
mov
jo
daa
inc
or
jle
adc
push
mov
test
add
mov
rorb
inc
cmc
in
push
in
xlat
adc
ds
pop
fsubs
jbe
mov
add
js
sbb
movsb
pop
into
jne
mov
sbb
push
xchg
cltd
inc
shr
fcmovb
lea
and
scas
rorl
ja
icebp
lods
rorl
stos
aas
add
push
daa
add
push
xchg
pop
push
loop
out
mov
dec
jb
jno
and
test
divl
pop
pushf
sbb
xchg
adc
add
mov
inc
push
cli
mov
inc
and
arpl
inc
jno
out
mov
shll
or
lock
sbb
mov
insb
adc
add
push
arpl
insb
lcall
cmpsl
shrb
outsl
out
jbe
adc
mov
mov
push
add
incb
inc
jg
lret
imul
popf
push
nop
enter
iret
call
shll
jl
xchg
clc
pushf
negb
outsb
pop
dec
mov
pop
fprem1
hlt
adc
cmp
pop
jecxz
mov
mov
ss
mov
dec
fildll
hlt
mov
mov
jmp
test
mov
popf
pusha
jae
sbb
inc
or
das
cmp
outsb
adc
sahf
bound
cmpsb
pop
xchg
out
jo
sbb
pusha
outsb
sbb
sbbb
fsubp
movsb
inc
jecxz
push
ftst
jo
fcompl
adc
insb
push
add
jle
js
mov
or
daa
and
mov
sbb
bound
mov
rclb
popf
out
inc
cmp
dec
les
dec
lret
fwait
mov
shl
sbb
stos
test
out
clc
jp
xchg
add
and
lcall
cmp
cltd
pop
loope
sbb
fisubs
fadds
and
jbe
lret
test
testb
inc
or
ret
clc
cmp
fs
dec
fsubrl
je
dec
cmpb
xchg
mov
sub
dec
push
xor
or
add
lds
jbe
add
or
push
lcall
clc
inc
lahf
dec
cld
mov
pop
mov
mov
sbb
movsl
rolb
popa
push
mov
sbb
not
inc
in
adc
pop
or
sarl
xor
into
loop
jl
push
push
dec
and
adc
pop
shll
dec
in
and
pop
add
out
rorb
jp
push
je
enter
call
imul
pop
cmc
pop
testb
cmp
cmp
jecxz
mov
mov
outsb
pop
push
hlt
push
call
cmp
mov
call
or
pop
das
jmp
andb
pushf
or
fdiv
outsb
jg
xchg
loopne
dec
out
push
mov
mov
adc
cmpsl
ret
popf
mov
xchg
xor
push
lods
bound
fildll
imul
jne
outsb
sbb
add
mov
sbb
inc
maskmovq
idivl
cli
hlt
pop
dec
xor
loope
out
sub
out
fwait
mov
mov
push
insl
sub
inc
jo
inc
mov
mov
mov
adc
divl
adc
aas
mov
ljmp
rorb
dec
cwtl
jmp
notl
xor
cmc
fdivs
mov
push
jno
out
push
aas
bound
outsl
fcompl
jecxz
mov
and
cltd
push
shr
push
sahf
mov
cmp
pop
jmp
lock
popf
out
adc
lds
iret
out
fcmovbe
push
jns
xlat
sub
xor
nop
jle
out
iret
mov
mov
cli
mov
hlt
jmp
rorl
add
adc
out
push
sbb
push
inc
fs
mov
jg
pop
jne
jns
scas
incl
adc
scas
and
rcrb
in
imul
inc
or
stc
lds
mov
inc
sbb
dec
and
dec
ss
cwtl
mov
sub
mov
mov
sbbl
cltd
stc
cmp
roll
ret
pop
xchg
lods
pop
neg
scas
add
mov
enter
or
add
or
pop
fcoml
pop
mov
jae
jecxz
sysenter
ret
scas
or
dec
inc
inc
push
mov
mov
sbb
ret
inc
or
jns
cmp
push
xor
fpatan
daa
imul
repnz
sub
rorb
xor
call
scas
mov
add
enter
dec
cmp
leave
mov
popa
jno
cltd
mov
and
repz
and
and
and
das
subb
clc
lods
mov
jo
xchg
in
or
and
loopne
hlt
popa
mov
sbb
call
stc
ret
add
xchg
and
je
push
cld
shrb
inc
cli
pop
add
adc
cmp
or
push
jae
jo
pop
inc
mov
mov
jl
add
arpl
and
or
mov
out
scas
add
cmp
pop
add
adc
inc
add
pop
hlt
push
mov
mov
sbb
sahf
loope
cmp
lods
sahf
sbb
pop
mov
pop
imul
into
stc
data16
sahf
sbb
push
addr16
mov
add
insl
adc
fdivs
xor
in
inc
fistl
lock
adc
dec
xchg
cmpsl
mov
rol
loope
sbb
nop
hlt
rcrb
fisubl
testb
out
cld
push
push
lahf
push
xchg
xchg
adc
xorl
je
and
fildll
xchg
inc
negl
and
shrb
inc
and
clc
cmp
int3
adc
pop
out
lock
push
fisubrl
ret
aas
int
sub
out
mov
fs
mov
mov
xor
or
lds
sub
scas
jnp
cs
dec
push
cwtl
subl
dec
je
and
sbb
loop
testl
xchg
dec
outsb
pop
xchg
cmp
call
inc
pop
in
enter
inc
outsb
test
test
cmp
mov
cmp
push
mov
lahf
jle
or
jl
push
mov
hlt
add
lcall
pandn
mov
and
cld
mov
clc
sahf
pop
out
pop
push
test
fwait
dec
mov
lret
cltd
inc
mov
dec
ljmp
xchg
add
mov
fisttpll
xchg
sti
lcall
imul
jle
inc
pop
bound
std
sbb
fsubs
rol
aad
mov
repnz
sti
imul
jae
sarl
aaa
das
jge
adc
pop
sub
ret
pop
add
jg
xchg
inc
jecxz
jae
push
jmp
push
and
cmc
jl
push
sbb
cli
jl
and
pop
and
das
in
add
xlat
aas
mov
xlat
call
add
pusha
add
movsl
add
jno
xchg
dec
pop
mov
or
lock
loopne
or
scas
sub
ljmp
out
leave
shlb
sbb
adc
and
fisttpll
dec
inc
lahf
in
out
inc
mov
dec
bound
xor
dec
dec
or
dec
adc
push
mov
in
jecxz
in
sbb
out
nop
rcrb
loopne
lcall
add
test
jno
mov
mov
inc
sub
outsb
fwait
rcrb
dec
pause
or
xor
arpl
aam
loop
scas
lds
xlat
adc
xor
cmpb
test
xor
xchg
ret
push
sbb
xchg
sub
inc
out
fmull
repz
in
lods
jno
mov
cmp
lods
fwait
out
inc
mov
mov
in
orb
inc
cmp
mov
or
lods
aaa
stc
push
mov
fwait
addb
adc
mov
fdivs
jl
test
aaa
jecxz
push
fiadds
mov
xchg
stc
xchg
xorl
jne
cmp
gs
js
pop
mov
sbb
mov
mov
ficompl
in
xchg
fisubl
mov
pop
push
xor
sbb
xchg
daa
leave
mov
jne
lahf
test
inc
pop
xchg
jnp
insl
push
pop
and
and
cli
mov
mov
pop
push
out
jo
jge
and
cmc
mov
xor
add
push
rcr
pusha
out
push
or
cmp
pop
iret
or
push
add
xchg
push
hlt
sbb
addr16
call
mov
inc
jno
popf
xchg
cmp
jns
rcrb
mov
xchg
cwtl
repnz
sbb
divb
xor
lret
push
fisubrs
inc
cmp
mov
push
outsl
xor
insl
jns
imul
or
xchg
adc
insb
jne
hlt
jle
cmc
notb
sub
sub
cli
inc
dec
pop
cmp
sub
fwait
dec
fidivs
sbb
pusha
loopne
test
push
ss
xchg
add
jmp
movsb
mov
ret
or
xchg
cmpsl
leave
xorb
jnp
cmpsb
and
pop
hlt
cmp
in
out
js
push
ds
orb
sbb
scas
pop
adc
mov
mov
and
ret
rcl
aam
test
pop
lds
inc
xchg
jnp
pushf
adc
push
test
ret
jge
std
push
ss
sub
stos
cltd
lea
les
push
xchg
adc
push
nop
jge
cs
or
sub
scas
fsubrs
xor
insl
jle
sub
adc
mov
out
jl
sub
por
jmp
es
cmpsb
imul
mov
or
iret
mov
xlat
jle
mov
mov
xchg
andb
out
iret
adc
cmc
or
sub
dec
xlat
mov
pushf
xchg
inc
inc
xchg
sarb
sahf
mov
stc
adc
sub
mov
push
xchg
mov
add
stos
sti
das
loopne
in
aam
sbb
in
les
inc
mov
sub
shrl
movl
add
aad
push
lds
pop
outsb
sub
adc
or
cwtl
sbb
movsl
clc
fmull
ret
sbbb
xor
imul
jge
lcall
mov
fcoml
mov
fs
imul
mov
xchg
sbb
or
and
aas
inc
push
insl
add
xchg
inc
lea
nop
inc
ds
push
sbb
mov
mov
lahf
lods
mov
fadds
xor
xchg
sub
inc
jl
dec
dec
hlt
mov
test
cmp
ffreep
inc
mov
xor
lds
pop
inc
adc
fstp
lcall
dec
or
push
mov
adcl
cmc
repz
mov
xor
ret
sbb
adc
or
aas
ja
xchg
inc
or
xchg
test
sti
sbbb
xor
ja
or
ja
shll
gs
push
mov
xchg
push
mov
imulb
mov
xchg
notl
sbb
mov
jge
and
std
mov
cwtl
jae
or
jmp
je
pop
fbld
sbb
pop
xchg
daa
imul
adc
cld
or
pop
fisttpll
rorl
dec
imul
sbb
inc
mov
xchg
add
gs
call
inc
imul
mov
mov
pop
movl
pop
add
arpl
sbbb
je
imul
cld
xor
push
dec
lods
pop
pop
out
jno
cmp
dec
xor
adc
xor
jge
xor
cwtl
jne
bnd
lods
dec
popl
mov
sub
incl
cs
pop
ds
push
xchg
push
aam
mov
xor
pop
xor
roll
sbb
icebp
outsl
repz
faddl
dec
lds
fisubs
test
std
push
adc
xor
in
gs
cmc
cmp
lods
pop
mov
mov
hlt
cs
test
js
xchg
scas
mov
pop
sahf
bound
jg
cmp
push
push
jl
inc
rolb
adc
add
inc
inc
or
movsb
cmp
idivb
scas
mov
loop
or
push
cld
or
xor
mov
add
popf
outsl
in
lcall
ds
or
gs
jmp
insb
and
sub
lods
das
into
xor
das
addb
shl
push
push
pusha
cmp
aaa
popa
and
int3
sbb
or
out
lods
jno
std
shll
aam
sub
xchg
sbb
lret
mov
push
inc
cmc
bound
in
std
lahf
xor
dec
in
mov
aas
mov
xchg
cmp
fnstsw
mov
sub
shl
jg
cwtl
in
fdivrs
xchg
mov
cmc
or
inc
dec
jp
xchg
pop
clc
xor
mov
xchg
jg
mov
outsb
xchg
adc
adc
faddl
mov
andb
jno
pop
sub
sbb
sbb
pop
mov
das
sbb
push
push
roll
lret
sbb
rcrl
lahf
gs
inc
jl
and
xchg
mov
aad
pop
filds
mov
xchg
adc
jnp
push
sub
rcrl
pop
jne
clc
aam
push
test
inc
dec
ds
push
clc
dec
pusha
or
or
inc
inc
jno
dec
movsb
mov
in
dec
push
cmp
fwait
stos
xor
or
inc
subb
out
lods
divb
dec
lahf
repnz
xor
inc
cmp
pop
repnz
arpl
add
pop
mov
test
pop
pop
add
movsb
mov
push
inc
rol
in
push
int3
outsl
out
sub
sub
sub
arpl
xor
push
lcall
loopne,pn
or
pop
out
and
adcl
aaa
mov
fmuls
hlt
mov
jnp
push
std
dec
rcrl
shrb
dec
ds
mov
cmp
popf
les
cmpb
xchg
jl
ss
push
test
sub
dec
iret
lret
outsl
ds
mov
push
cmp
outsb
xchg
outsl
in
mov
or
loopne
xchg
push
sub
pushf
nop
sbb
jmp
jmp
outsb
dec
mov
cmp
dec
cmp
es
or
cld
add
rcr
cmp
push
inc
mov
fs
jbe
push
or
adc
push
dec
xchg
mov
add
pop
aad
aam
mov
mov
xor
sbb
rorb
std
push
scas
mov
je
add
loope
sbb
mov
jo
sub
pop
das
lret
enter
jne
insb
mov
lea
popa
rorl
ret
mov
lock
xchg
inc
popf
mov
sub
push
xchg
popa
add
xchg
leave
jmp
sub
dec
sub
dec
xchg
or
movb
jb
mov
adc
add
and
mov
jmp
stos
jns
gs
insb
mov
not
add
pop
pop
scas
lret
ja
out
lock
out
loop
sub
sbb
sub
lock
adc
cmp
enter
in
mov
inc
data16
or
repnz
sbb
or
insb
adc
mov
fdivrl
fs
in
loopne
outsl
or
fisttpl
sbb
cmp
test
push
fcompl
faddl
pop
hlt
hlt
lods
jmp
add
inc
push
je
lret
jl
xor
mov
outsl
push
icebp
mov
mov
movsb
sti
or
inc
mov
outsb
arpl
and
sarl
dec
stos
mov
mov
push
jg
repz
lret
adc
ss
fistl
and
dec
jmp
test
or
aas
add
in
xor
mov
lret
cmp
xchg
push
outsl
insb
dec
lcall
popf
mov
mov
aas
inc
mov
sub
jns
and
lods
test
iret
pop
clc
enter
mull
movsb
and
int3
cmp
jmp
jnp
vaddps
js
mov
imul
fnstsw
insl
aaa
inc
mov
test
xchg
into
xorl
dec
pop
test
inc
cwtl
les
sub
inc
or
pop
out
mov
ss
imul
xchg
lret
int
pop
enter
stc
leave
sti
cmp
leave
mov
lock
into
add
fbstp
jns
or
scas
dec
cmpsl
scas
xchg
pop
fists
outsl
jg
rcrl
push
adc
std
dec
push
inc
ja
lods
push
and
mov
fldl
xor
dec
lahf
mov
pop
mov
mov
pop
fimuls
clc
push
sbb
cs
and
setb
cmc
lds
pop
ljmp
dec
pop
sbb
mov
cs
mov
lods
andb
icebp
pop
pop
rcl
into
popa
addl
mov
leave
pop
jmp
scas
jb
jbe
sub
jl
xchg
fcoms
mov
loop
out
sbb
lcall
lods
cmp
loopne
cltd
aam
push
popl
es
cmpsb
jno
ficoms
out
inc
insl
mov
jmp
mov
or
mov
cmp
and
in
hlt
das
jge
mov
and
inc
add
fisubs
cmp
movsl
in
sahf
xor
dec
rep
mov
adc
icebp
fwait
dec
in
sahf
jecxz
call
repnz
xchg
jns
pop
out
arpl
jp
fisubrl
adc
fwait
lea
pop
xor
xchg
sti
shrl
and
loop
xor
enter
jmp
or
pop
mov
fstpt
data16
xchg
jb
lds
pop
mull
clc
roll
mov
movsb
cld
jne
das
sub
addr16
cmp
sar
xor
sarl
dec
out
sbb
xchg
pop
popf
xchg
in
inc
mov
rcll
push
cmp
sbbl
jne
ljmp
jns
js
lret
iret
pop
dec
inc
xchg
js
jb
sarb
pop
adc
dec
pop
push
pushl
add
insl
cmpsb
mov
ljmp
scas
inc
mov
out
cmp
add
mov
sub
and
outsb
mov
pusha
iret
cmp
call
lahf
adc
push
aad
jae
add
rolb
out
jl
in
xlat
sub
andb
daa
sub
lahf
insb
lods
cmp
subl
das
xchg
jno
inc
add
push
sbbb
and
jle
int3
cmp
lea
ljmp
cwtl
aam
cmp
jne
cmp
cmpsb
repnz
xor
pop
stos
test
dec
or
mov
or
pop
mov
iret
mov
mov
mov
clc
mov
mov
cmp
cmp
sub
dec
fcmovbe
adc
pop
and
xor
pop
mov
enter
jnp
sbb
add
lods
imul
loopne,pt
cmpsb
and
shll
cwtl
aad
es
sub
ret
int3
movsb
push
je
mov
outsb
sub
push
lahf
inc
jnp
xor
sbb
test
cmpsb
rorl
cmp
adc
cltd
and
cmpb
add
popf
shlb
loopne
dec
orb
cmp
repnz
add
inc
test
add
lock
lcall
jns
mov
mov
adc
jb
cmpsb
lahf
je
notl
xchg
fadds
std
ss
or
sbbl
xor
sub
imulb
fcompl
inc
stos
into
jg
test
fmul
xlat
push
push
lods
rcll
mov
scas
test
ljmp
add
mov
es
out
xor
inc
dec
and
dec
fidivrl
lret
mov
dec
pop
aaa
pop
push
and
gs
data16
jl
mov
addr16
lret
cwtl
mov
or
test
addb
inc
daa
cmp
xchg
js
fwait
cmp
hlt
xchg
push
jge
inc
xchg
sub
rcll
add
stos
add
mov
movsb
xorb
aam
cmc
jl
jae
dec
mov
lods
call
out
or
push
scas
pushf
ljmp
mov
pop
jo
mov
arpl
fwait
adc
mov
rcll
fcmovnu
hlt
xchg
cli
cs
enter
rcl
sub
bndldx
mov
mov
fisubrs
jge
xorb
inc
fs
mov
outsl
in
mov
repnz
iret
mov
mov
lea
mov
pop
pop
xor
mov
out
enter
test
daa
fidivrs
fimull
add
adc
xchg
inc
mov
sub
adc
cwtl
mov
pop
cmc
loopne
adc
xor
add
movb
pop
adc
inc
sahf
inc
and
sub
lret
loop
insl
cmp
insl
jnp
es
ficompl
cmc
or
lret
jmp
cmp
je
mov
mov
xchg
xchg
pop
ds
and
pusha
les
pop
push
or
add
push
in
push
xchg
cmp
in
das
inc
cli
pop
push
popf
cmp
pop
out
mov
and
mov
mov
adc
int
pop
fldcw
mov
stc
mov
mov
mov
in
sbb
push
popa
orl
push
dec
aad
ds
lahf
dec
cmp
outsb
loop
fimull
xchg
adc
scas
mov
inc
inc
inc
jns
insb
mov
insb
pop
sar
adc
daa
pop
mov
mov
sbb
addl
dec
pop
mov
mov
xor
lret
in
insl
test
ret
pop
inc
in
or
push
jmp
mov
adc
inc
loopne
jecxz
les
mov
xor
cmpsl
xchg
pop
nop
cmp
pop
xchg
jb
jnp
sbb
xor
sbb
jl
push
adc
lret
adc
xchg
scas
out
inc
sbbl
test
cmp
inc
add
adc
repnz
out
fwait
test
xchg
sahf
out
adc
icebp
pop
pop
sub
xchg
and
push
jno
test
xchg
ds
pop
push
mov
sub
push
jl
sub
js
sbb
cld
arpl
push
sbb
addr16
enter
test
movb
push
out
fcoml
fchs
xchg
into
push
xchg
in
scas
pop
cwtl
add
sub
popf
mov
lea
into
dec
and
adc
cmp
sub
rorb
jecxz
dec
and
mov
adc
dec
mov
les
loop
js
repz
xor
lock
sbb
pop
sbb
mov
jo
std
subb
iretw
and
and
ss
push
repz
unpcklps
sub
arpl
enter
arpl
in
inc
cmc
iret
xchg
cltd
outsl
and
in
mov
mov
mov
lret
rcll
inc
aam
scas
std
icebp
mov
or
sbb
mov
je
out
pop
cmp
dec
jbe
push
mov
jno
and
js
out
sbb
in
mov
js
inc
daa
movsl
enter
push
pop
jmp
dec
aaa
filds
add
dec
mov
fsubl
mov
inc
dec
jge
mov
rcrb
mov
aas
mov
call
xchg
push
in
mov
mov
or
pop
cmp
xchg
lea
repnz
lahf
cmc
cmp
add
idivl
mov
andb
fcmovnb
inc
xchg
int
scas
popa
int
cwtl
add
mov
mov
aas
fsubrl
and
leave
loope
ja
jge
mov
or
test
sub
movsb
mov
adc
enter
mov
std
shr
xor
dec
sbb
testb
lret
les
call
pop
ret
aaa
stc
pop
xor
push
dec
xchg
js
push
test
cld
jmp
mov
xlat
pop
je
pop
ds
inc
rcll
lret
cli
popa
pop
imul
lahf
outsb
jecxz
insb
inc
add
loop
mov
pop
lods
ss
frstor
aam
push
in
outsb
push
push
mov
or
or
je
mov
cmpsb
lock
sbb
das
dec
push
fwait
cmp
push
dec
xchg
add
repnz
scas
mov
imul
rclb
movsb
and
mov
test
notl
fildll
mov
inc
mov
add
mov
jg
xchg
outsl
test
sarb
lfs
sub
mov
ficoms
xor
dec
xchg
outsb
aaa
sbb
sub
cld
jecxz
into
lea
std
sub
andl
imul
loop
test
ja
mov
sbb
in
outsl
sub
pop
mov
popa
js
mov
ja
xchg
sbb
sti
push
mov
xorb
hlt
mulb
xchg
inc
and
jmp
cmpsl
push
inc
mov
das
xor
inc
push
sbb
sub
mov
or
dec
xor
mov
push
mov
xchg
push
push
xor
ljmp
xchg
adc
jnp
adc
add
iret
test
xchg
mov
pop
mov
out
iret
inc
ret
add
add
sarl
xchg
mov
inc
inc
sub
aas
stos
pop
les
jbe
pop
inc
adc
dec
mov
add
loope
sbb
enter
mov
sti
inc
int3
or
or
out
nop
sahf
adc
cld
outsl
mov
arpl
bound
xchg
loopne
or
mov
je
scas
in
fs
lea
mov
jbe
jmp
shrb
cmp
in
test
lods
jb
fsts
in
xor
dec
imul
sbbb
out
inc
outsl
ret
push
sub
sub
cmp
cmc
inc
ss
popa
xchg
or
mov
mov
xchg
xchg
push
sti
das
loope
mov
push
aaa
mov
mov
adc
out
sbb
sub
das
les
mov
imul
cs
cltd
movsb
mov
xchg
push
inc
daa
mov
mov
shll
lea
rcl
into
pop
cmp
lods
xchg
or
leave
in
into
jp
gs
push
iret
cmc
sub
popa
mov
mov
jae
cmp
xor
adc
insl
pop
scas
and
repz
lods
jl
inc
je
js
imull
pop
loopne
pop
and
leave
dec
loopne
pop
gs
or
out
inc
dec
out
cs
push
fidivl
push
rcr
nop
mov
dec
push
pop
sbb
gs
pop
out
mov
add
pop
mov
repnz
push
mov
push
in
mov
jns
mov
sahf
fs
ds
xor
vpacksswb
cmp
push
int
scas
mov
enter
ret
sarb
push
iret
push
daa
stos
xor
pop
rorb
std
addr16
xchg
mov
xlat
mov
xchg
mov
pusha
sbb
or
popa
add
mov
xchg
stos
cmc
dec
lahf
stos
push
movsb
xchg
mov
cld
pop
sbb
sbb
pop
xchg
sbb
sbb
fisubrl
cs
jmp
pop
out
mov
sub
inc
sbb
xchg
pop
cld
cmp
inc
fmull
stos
jle
es
dec
test
cs
test
lret
mov
push
jmp
scas
test
adc
push
inc
insb
data16
repz
push
xchg
push
insb
xor
xor
cmp
mov
xor
push
adcb
gs
hlt
sub
lahf
lret
xchg
lahf
scas
jge
dec
cmp
outsb
mov
adc
lods
cwtl
icebp
xchg
pop
mov
dec
jae
jle
cli
in
scas
jmp
pop
mov
hlt
pop
pop
mov
jne
out
xor
xchg
mov
mov
dec
ss
aas
lea
dec
adcl
sarb
cld
push
cmp
ljmp
in
bound
imull
out
cmp
shlb
jne
in
dec
ljmp
sbb
daa
sub
ljmp
ljmp
mov
xchg
lds
ljmp
testb
ds
fs
and
mov
pop
mov
cltd
sub
and
mov
cmp
sbb
mov
mov
add
push
je
xchg
sti
ret
shlb
dec
mov
cmp
mov
mov
mov
fidivrs
jnp,pt
ficoml
and
xchg
xchg
cs
push
outsb
call
leave
pushl
adc
shll
push
mov
ljmp
pop
ss
adc
ljmp
jne
stos
xchg
out
in
jbe
les
movsl
aad
xchg
sub
sbb
or
add
stos
or
shl
xor
push
pop
test
int
aaa
lahf
inc
fcomps
mov
repz
pop
mov
and
mov
jno
pop
into
cmp
mov
push
jecxz
jge
cli
dec
outsl
lods
test
lret
jbe
mov
jle
incl
adc
xchg
push
leave
scas
stos
into
xchg
push
ds
imul
push
shll
xchg
sbb
movsl
mov
arpl
mov
mov
mov
stc
ss
popf
outsb
inc
mov
and
mov
stc
in
inc
xchg
test
arpl
roll
scas
cmpl
aaa
sub
ljmpw
and
mul
and
cmp
and
dec
js
cmp
ljmp
test
orl
lret
fmuls
or
inc
sbb
sbb
cmpsl
in
imul
lcall
pop
xor
fidivrl
fsubrl
push
mov
adc
cli
and
cmp
rorb
add
sbb
popa
pop
popa
mov
in
mov
ret
push
fs
mov
mov
cmp
xchg
jo
in
cli
pop
dec
xchg
or
inc
test
out
arpl
dec
lds
push
xchg
xchg
sub
test
push
xchg
or
repnz
jmp
or
es
ljmp
push
jno
xor
and
inc
scas
push
aad
jo
mov
lret
xchg
aam
cwtl
ljmp
mov
cmp
xchg
cmp
shll
cs
xor
mov
rorl
jne
and
subb
push
out
mov
sbb
aad
jae
sbb
sarb
std
sahf
icebp
dec
and
ja
inc
fs
jae
lahf
xor
xchg
cmpsb
cmp
lahf
and
insb
arpl
lods
push
lret
leave
mov
fimuls
sub
int
pop
pop
dec
add
adcl
mov
fdivrl
shll
outsb
jecxz
addr16
js
mov
test
mov
xor
sub
fs
pushl
push
data16
mov
jp
scas
ret
sbb
jp
cmp
out
pop
cmpsb
lcall
jne
std
fcoms
js
out
scas
lds
xor
fsubl
ja
push
xchg
add
cmpb
leave
lods
jmp
idivl
leave
std
es
mov
lcall
loope
pop
and
nop
sti
imul
loopne
gs
dec
add
cli
sbbb
mov
or
lahf
jne
je
inc
xor
mov
dec
xor
jle
xor
std
dec
outsl
jecxz,pt
lods
cli
pop
xor
das
inc
test
test
cmpsb
mov
mov
shlb
adc
out
fcmovnu
into
mov
dec
mov
xchg
lahf
arpl
adc
xchg
xchg
mov
clc
mov
mov
or
inc
mov
or
notl
jmp
ret
iret
pop
loop
jbe
je
insl
aam
push
and
cmp
sbb
dec
insl
add
adc
repz
mov
imul
cs
push
mov
jmp
shlb
xor
shrb
xchg
or
add
mov
in
pushf
aas
sbb
xor
dec
push
loop
xchg
lret
loopne
imul
mov
fldl
aad
jnp
and
out
outsb
out
push
popf
sbb
mov
add
dec
clc
cs
pop
movsl
jb
bound
push
mov
call
ljmp
cmp
sbb
scas
push
cmc
xchg
mov
insb
cmp
fwait
push
bound
clc
jb
sahf
jnp
push
push
mov
lcall
nop
ret
xor
mov
mov
cmp
dec
popf
dec
loope
push
in
imul
inc
jbe
outsl
cmp
cmpsb
adc
mov
pop
mov
xor
xabort
sub
mov
sub
out
xchg
cwtl
cmpsb
inc
sub
cltd
cwtl
mov
and
mov
lret
cld
mov
sti
jl
mov
loope
les
or
adc
inc
mov
cs
movsb
pop
insl
inc
fldl
mov
mov
cmp
mov
or
mov
xchg
jo
add
add
enter
or
sbb
data16
cs
sbb
jp
lret
dec
mov
ret
mov
mov
add
dec
repz
pop
jge
xchg
seta
iret
in
test
repnz
scas
or
sahf
int
test
cs
gs
into
push
jne
das
add
insl
mov
inc
pop
and
cmp
inc
jmp
xchg
mov
inc
push
mov
loop
sbb
push
push
scas
pop
iret
dec
sti
jae
mov
dec
sbb
es
sub
enter
das
test
mov
shr
lret
add
mov
and
mov
cmp
into
or
push
imul
aas
inc
sbb
mov
fnstsw
push
jl
pop
push
or
faddl
test
sub
fidivrs
sbb
mov
or
ja
lret
push
jnp
xchg
testl
mov
inc
ja
out
xchg
sub
xor
mov
and
shrl
jo
mov
dec
gs
and
call
es
aam
cmpb
daa
in
je
pushf
pusha
push
repz
mov
jmp
out
adc
loope
dec
or
or
push
clc
push
sub
sarl
aas
loopne
fsubl
jbe
mov
jl
sbb
adc
xchg
cmp
test
jbe
and
popf
and
push
addr16
pop
mov
fs
pop
leave
notl
loopne
mov
sbb
inc
mov
and
mov
inc
sub
xchg
fldt
push
fdivrl
mov
inc
mov
add
or
movsb
ja
in
pop
mov
gs
dec
shrl
shl
stos
jnp
pop
frstor
in
into
iret
scas
jmp
arpl
shll
inc
xchg
add
push
clc
cmc
pop
jae
aam
insb
addr16
inc
push
jb
fidivrs
imull
cmp
lahf
ja
inc
mull
dec
mov
adc
stos
ret
pop
jb
in
cmp
fisubl
test
mov
popa
mov
repnz
pushf
pop
xchg
into
and
fnstenv
lods
push
je
aaa
aam
notb
sahf
pop
jae
shlb
mov
jl
mov
fidivrl
mov
lcall
sub
or
mov
mov
cmp
cs
mul
mov
cli
sbb
ja
mov
cmp
jmp
insl
add
add
mov
and
test
movsb
add
pop
and
xchg
add
pop
xorl
and
adc
xor
mov
cld
testl
push
jo
sbb
pop
and
outsl
lret
pop
cmp
push
and
jge
out
jg
int
jle
mov
xor
dec
sahf
das
pop
mov
jns
mov
call
sarb
push
xlat
mov
xor
fisttpl
cmp
lret
mov
push
xor
mov
ljmp
rcl
mov
lods
adc
pop
repnz
mov
xchg
dec
sti
loopne
in
xchg
mov
add
movsb
mov
push
push
imul
pop
pop
cmp
inc
icebp
int
fcompl
imul
xchg
mov
cli
popa
push
mov
push
cmp
andb
call
cs
fucomi
push
sub
and
xor
mov
lret
dec
ss
mov
sbb
push
cmpsb
out
out
adc
into
arpl
dec
push
nop
xor
xor
jmp
push
stos
push
cmpsb
or
scas
int
pop
aas
outsb
sahf
inc
int
mov
pop
gs
mov
lahf
adc
iret
jbe
dec
out
lret
add
aad
xchg
mov
movsb
dec
or
jmp
ds
push
xor
mov
insb
addr16
in
jmp
hlt
arpl
cmp
jge
sub
or
push
pop
pop
imul
cltd
push
aaa
mov
cmp
insb
push
flds
inc
inc
lock
data16
lods
mov
cltd
fistps
mov
jb
adcl
outsb
adc
lret
ss
fimull
inc
xor
adc
outsb
dec
pushf
xor
pusha
dec
in
imul
mov
shrb
ljmp
das
push
jbe
or
mov
call
stos
inc
out
mov
add
loop
adc
test
push
in
fldenv
add
mov
or
or
clc
jp
fadd
cli
lcall
sbb
xorb
inc
inc
inc
in
lcall
mov
aas
into
xor
sbb
or
inc
sbb
divl
xor
inc
shlb
pop
ret
and
scas
lret
inc
xor
andb
pop
imul
adc
or
fistl
movsb
add
shr
pop
test
push
pop
xchg
pushf
xor
jecxz
fidivrl
cmpsb
cmp
sarb
bound
js
pop
inc
cmp
inc
mov
inc
xlat
lret
xchg
pop
add
or
or
push
jecxz
pop
inc
cmc
and
repnz
pop
sub
movb
insb
test
cli
mov
inc
out
add
iret
mov
fxch
cli
in
cld
arpl
loope
loope
aam
mov
push
cwtl
ret
test
xlat
sub
lods
pop
jecxz
stos
jecxz
call
mov
movsb
sub
iret
mov
stos
sbb
icebp
lds
lret
sahf
adc
dec
inc
add
out
inc
xor
push
cmc
out
push
push
into
arpl
or
mov
xor
xchg
shr
lahf
add
mov
mov
mov
int3
push
sti
dec
enter
popf
or
into
lock
jnp
jns
pop
test
and
add
addr16
das
jnp
jl
jp
push
nop
sub
shl
dec
dec
out
cltd
aam
xchg
ret
xlat
pop
xor
cmovb
movsl
and
mov
popa
rol
int
rcrl
inc
adc
mov
out
xchg
jmp
gs
pop
mov
das
das
jae
push
and
push
in
andb
sub
mov
clc
aaa
popl
dec
xor
sbb
add
xchg
jae
and
mov
xor
pusha
aas
pop
lahf
es
pop
lods
mov
rcll
dec
sub
mov
pop
mov
out
cs
insb
pusha
mov
adc
jl
addr16
lods
cmpl
out
dec
mov
push
test
dec
in
data16
insl
aas
sub
pop
ds
inc
fildl
xor
pop
sub
jp
or
je
jmp
jno
mov
adc
sub
ret
ret
jmp
das
sbb
loope
sbb
mov
jne
test
xchg
fsubs
or
les
push
and
sahf
test
push
cmpsb
ret
jnp
cmp
icebp
and
sbb
dec
mov
andb
xorl
lcall
push
fdiv
orb
xchg
scas
xor
imul
fstps
mov
xor
xor
mov
sbbb
mov
out
push
out
cs
roll
adc
adc
test
hlt
into
jle
cmp
inc
lcall
xlat
cmpsl
stc
jmp
add
or
jns
lds
mov
lock
and
inc
cmp
inc
mov
dec
je
xlat
cmp
test
lahf
mov
cmp
adc
cli
movsb
and
lea
hlt
mov
in
sbb
ret
sub
mov
and
add
in
mov
lret
movsl
sbb
loop
cwtl
and
push
ret
repnz
shl
out
or
mov
mov
mov
in
outsl
inc
loopne
pop
pop
and
or
ret
icebp
lahf
dec
loop
inc
lret
or
sbb
jge
stos
mov
adc
enter
xor
jb
nop
jmp
or
push
sub
jbe
add
enter
add
cmpsl
jo
js
mov
in
jno
mov
stos
pop
xchg
mov
fstpl
mov
sub
push
sbb
and
ss
or
mov
add
adc
aam
ljmp
popf
and
test
minps
adc
sub
shll
scas
mov
xchg
mov
sub
adc
jne
out
fiaddl
fiadds
sahf
je
sbb
je
inc
pop
adc
pop
and
sarl
loopne
mov
xchg
mov
in
push
push
sahf
test
xor
lea
ret
scas
bound
repnz
jge
into
ret
pop
js
add
mov
dec
mov
jge
push
inc
jmp
imul
push
inc
lods
mov
shll
jne
fistps
hlt
mov
push
movsl
xchg
aaa
cli
sbb
cmc
shr
lea
mov
pop
stc
adc
and
pop
out
das
cmp
repnz
imul
jl
fs
andl
jns
leave
adc
rolb
xor
sub
inc
gs
cmpsl
into
insb
call
and
sub
cmpsb
jecxz
jno
or
and
loop
out
dec
stc
cmpl
mov
jge
hlt
cltd
adc
lea
aas
jl
js
sbb
push
iret
jp
les
test
hlt
or
adc
pushf
cmpsl
jecxz
in
push
xchg
outsb
cld
cmp
adc
aas
loope
mov
push
pop
mov
sbb
lea
jno
xor
jle
std
pop
pop
fildll
insb
push
aam
jo
push
push
mov
shlb
lods
fdivr
inc
in
ret
xor
leave
int3
cld
in
out
xchg
sbb
outsl
or
sahf
inc
xchg
adc
daa
gs
ss
pop
cmp
int3
inc
jbe
fiaddl
mov
outsl
ss
stc
mov
mov
and
mov
inc
mov
cli
sarl
jo
dec
sti
sub
out
test
mov
call
jge
fbld
and
push
ds
aam
fiaddl
and
arpl
cmp
in
mov
xorl
and
outsb
popa
sarb
jg
fucomi
jecxz
and
in
fcoms
jg
jno
xchg
nop
in
xor
hlt
mov
aaa
pop
xchg
push
or
call
dec
xchg
pushw
pop
imul
push
and
dec
mov
out
push
and
xchg
pop
sub
pop
outsl
jae
cld
adc
adc
cmp
aaa
dec
fs
and
in
adc
mov
rclb
pop
jecxz
arpl
mov
pushf
mov
es
shll
shrb
inc
jmp
push
jae
and
dec
out
out
addr16
loop
push
jns
lds
cmc
loop
dec
cmc
scas
movb
push
xchg
into
shl
std
and
outsl
cs
ja
jnp
sub
and
rcrl
mov
lahf
fistl
das
test
out
mov
sbb
sub
pop
fildl
popw
out
in
mov
xchg
stc
insb
dec
mov
loopne
cmpsl
outsb
xchg
jns
jno
cmp
neg
jne
push
xchg
jo
xor
pop
ja
xchg
fdivrs
xchg
inc
mov
or
loopne
fsubl
jno
lods
stos
push
sbb
and
add
repz
xor
lahf
enter
cmpsb
sub
shrl
xor
inc
stc
sbb
ds
aam
enter
jg
adcb
add
fdivrs
xor
roll
add
mov
xchg
lock
and
scas
jb
into
loope
push
int3
and
xchg
sahf
dec
scas
pusha
and
shll
mov
mov
dec
arpl
and
into
mov
movsb
lcall
rcrb
shll
mov
fiaddl
jo
push
repz
gs
addr16
push
hlt
adc
loop
pop
lods
lods
sbb
movsl
dec
mov
std
cmp
test
pop
clc
xor
xlat
clc
dec
fwait
and
sbb
cmpl
test
loopne
adc
scas
imulb
aaa
sbb
push
insb
push
stc
mov
aas
dec
divb
push
dec
mov
lcall
mov
loopne
arpl
mov
adc
push
in
cmp
or
cs
pop
and
mov
pop
sub
in
adc
lret
xchg
pop
cmp
sub
jno
xor
sub
or
xchg
scas
and
jne
sbb
inc
pop
jl
inc
mov
ret
pop
add
cmp
xchg
scas
cmc
xchg
push
loopne
das
xchg
push
and
imul
adcl
stc
dec
add
push
insb
pusha
mov
hlt
nop
rclb
enter
xor
ret
aas
and
stos
jns
das
adc
addr16
arpl
jae
lea
cmp
and
inc
int
sti
jl
incb
xor
int
sbb
push
pop
in
jbe
mov
mov
movsb
jl
xchg
sub
cwtl
lcall
pop
dec
ljmp
cmp
xchg
je
add
mov
add
pop
movsb
sbb
mov
or
jp
iret
xchg
cmp
pop
push
pop
mov
mov
mov
fistps
push
mov
inc
push
fldt
push
and
add
out
jge
imulb
dec
cmpb
mov
push
mov
cmp
lahf
icebp
outsl
xchg
pop
lods
loop
mov
sub
mov
imulb
mov
and
rorb
jno
pop
imul
mov
in
test
pop
xchg
cmp
pop
test
push
scas
roll
inc
fisttpll
and
fcmovu
cltd
sub
inc
mov
and
in
mov
sbb
nop
mov
xor
in
xor
push
or
cmc
roll
xorb
repnz
xchg
push
lea
and
into
stos
xchg
cmp
sub
rorb
xchg
lret
pcmpgtb
fxch
loop
rolb
js
mov
mov
ret
repnz
dec
pop
mov
movsb
dec
xchg
push
jle
cmpsl
xor
or
xor
xchg
push
data16
mov
sbb
push
cmp
and
and
icebp
movsb
sub
mov
push
jae
xor
adc
xchg
sbb
xor
push
jle
push
jb
mov
fisubrs
sahf
mov
jns
xchg
subl
fwait
push
fldt
bound
push
flds
shlb
ret
sub
repz
out
dec
or
adc
pop
mov
outsl
mov
xor
sub
xchg
push
xchg
nop
cltd
and
shrb
sbb
lods
fucom
popf
mov
or
push
sbb
dec
mov
push
idivl
jno
out
in
adc
xor
incb
mov
into
cmp
loope
mov
cmpsl
out
cmp
sbb
and
push
cmp
ja
les
es
icebp
inc
adc
cmpb
mov
mov
xchg
insl
js
ss
inc
sbb
or
push
icebp
mov
and
xchg
or
and
adc
sti
shl
sti
movsl
dec
mov
lock
mov
dec
mov
scas
pop
sub
mov
adc
push
test
cmp
insb
mov
pop
mov
xor
push
mov
mov
dec
sbb
jb
clc
lret
jecxz
ja
iret
js
push
xor
mov
test
je
icebp
add
ljmp
cld
pop
nop
and
mul
leave
das
in
dec
addl
adc
xor
sbb
pop
and
mov
daa
inc
jle
mov
jmp
pop
or
clc
test
and
ljmp
pop
push
leave
mov
mov
pop
mov
adc
jmp
pop
xor
pop
jbe
cmp
add
sbb
jecxz
in
fdivs
push
fstl
lock
test
mov
inc
mov
mov
add
mov
jmp
xlat
int
adc
add
add
jle
or
clc
fwait
in
cmp
insb
loopne
dec
inc
negb
cmp
lods
mov
insl
xor
pop
jmp
fiaddl
sub
sub
dec
dec
push
jecxz
lds
cmp
lods
rcrl
and
iret
mov
stos
ljmp
dec
pop
cmp
pop
leave
xchg
or
xchg
push
pop
lret
pop
data16
sub
sub
mov
cmp
xor
or
mov
push
xchg
gs
loopne
bound
jo
xor
cmp
loop
sahf
cli
movsl
test
popf
jg
xchg
dec
fisubrl
xor
hlt
mov
push
enter
sub
bound
mov
ljmp
outsb
jp
ja
jo
or
push
std
mov
dec
js
xchg
mov
or
mov
or
das
add
mov
sbb
mov
mov
leave
cmp
out
imul
out
imul
divl
add
lea
pop
pop
xor
fisubrs
lds
add
idiv
shll
nop
mov
bound
int
testl
push
pop
dec
inc
stc
sub
jle
aad
mov
xor
int3
push
add
dec
cmp
mov
stos
or
sub
loope
scas
adc
or
and
test
loop
sbb
pusha
jmp
outsl
in
and
je
mov
xchg
jl
lcall
xchg
jnp
dec
push
fwait
pop
cmpsb
cwtl
pop
fldt
lahf
jmp
into
xchg
in
outsb
push
or
lea
sbb
or
gs
out
mov
arpl
shlb
mov
inc
dec
cmc
std
out
xor
cmpsl
insl
addl
ja
push
mov
out
and
jns
sbb
daa
aas
fs
pop
mov
jp
xor
sti
cltd
out
jae
jb
cmpsb
or
inc
xor
je
mov
je
mov
jge,pt
aaa
shll
insl
mov
inc
out
xchg
arpl
repnz
call
icebp
pop
cmp
adc
push
sahf
adc
xchg
inc
iret
mov
movsl
out
stc
mov
mov
and
lret
clc
mov
add
loopne
sub
fisubs
add
xlat
cmpsb
sub
xchg
in
adc
mov
add
insl
movsl
fmuls
cmp
daa
sbb
pop
add
clc
mov
pop
popa
mov
ds
jle
das
movsb
mov
imul
jmp
in
mov
add
fsubs
jp
call
push
dec
aam
cmp
xor
mov
cltd
mov
lea
xchg
mov
cltd
or
int
adc
xor
sub
iret
insb
pop
loop
mov
push
jne
pusha
cmp
mov
lods
sahf
or
dec
mov
jmp
imul
cwtl
jge
mov
std
ds
dec
les
dec
mov
add
inc
hlt
aad
pop
mov
int3
outsl
xchg
mov
mov
inc
dec
stos
mov
mov
pop
dec
mov
loope
rcrl
in
sti
mov
mov
call
in
popa
arpl
scas
xorl
out
fidivs
das
dec
loopne
jecxz
stos
xchg
movsb
mov
inc
jbe
push
mov
dec
fisttpll
arpl
jno
inc
pop
pop
jmp
cmpsb
movsb
add
add
sbbb
sbb
sahf
mov
hlt
mov
sbb
xchg
push
cmc
and
push
or
gs
add
sarb
in
sub
stos
jle
clc
sbb
in
push
pusha
movsb
push
repz
popa
xor
clc
add
add
push
pop
pop
mov
dec
mov
idiv
inc
and
into
xchg
mov
icebp
cmp
and
fmuls
fucomi
jl
test
jp
xor
pop
mov
arpl
push
jecxz
les
mov
jae
sbb
push
ja
sub
and
in
daa
mov
mov
fnsave
subl
imul
sbb
rolb
call
mov
dec
rcrl
or
dec
cmp
jns
inc
bound
adcl
add
nop
lcall
roll
fs
je
jns
xchg
aam
inc
push
lea
je
pop
test
sub
inc
add
jp
cmovns
repnz
lret
lea
scas
inc
scas
push
push
sti
cwtl
lds
push
repnz
jecxz
jge
sub
int3
dec
aaa
fcmovnb
dec
fbstp
pusha
pop
xor
inc
inc
test
popa
inc
cli
push
cmp
add
sbb
out
cmp
mov
mov
sub
lcall
jne
push
and
pop
out
inc
lock
lock
aad
roll
mov
test
mov
daa
fwait
clc
aaa
bound
mov
test
pop
xlat
xchg
pop
pop
inc
cmp
movsl
push
ja
pushf
imul
mov
addb
scas
push
popf
xor
fnsave
cltd
mov
mov
jnp
insb
push
xchg
test
inc
outsb
push
jns
incl
stc
push
pop
cmp
scas
or
loope
mov
add
in
aam
scas
mov
pop
mov
daa
inc
pop
push
xchg
popf
and
test
dec
xor
pop
movsb
iret
cmp
and
dec
aad
dec
stos
sbb
insb
daa
addr16
adc
pop
mov
sub
fdivrs
mov
xor
dec
mov
xchg
add
mov
inc
or
shrb
int
leave
movaps
out
loopne
xchg
cmpsb
add
in
sbb
imul
outsb
stos
push
dec
jle
mov
sub
ret
jg
or
js
inc
mov
pop
ss
out
add
leave
rorl
xor
lock
jl
fldz
sbb
adcl
xor
jecxz
or
and
push
add
stc
test
fsubr
cmpl
cmp
outsl
out
sar
jl
push
jge
inc
push
jecxz
add
pop
cmp
mov
cmc
mov
mov
push
jbe
push
mov
fnstenv
or
mov
sbb
arpl
leave
push
cmpl
mov
test
lret
std
sub
cmc
pushf
push
cmpsb
stc
push
mov
push
jle
xchg
mov
out
push
sbb
lahf
pop
cmp
cmp
cld
adc
test
cwtl
cmc
popa
and
sbb
add
xchg
loope
mov
mov
cmp
ds
push
fst
cmp
adc
pop
dec
mov
popf
jecxz
jns
orb
inc
mov
pop
xlat
popf
scas
out
lods
mov
mov
and
outsb
dec
std
mov
pop
sarb
js
fwait
subb
outsl
jmp
mov
jns
xlat
out
stos
sub
and
outsl
outsb
add
pop
pop
push
shrb
gs
jnp
pop
mov
jnp
les
and
or
call
add
les
aad
mov
enter
fbstp
cmpl
fildl
loop
adc
cmp
out
bound
cvtps2pd
mov
push
dec
ret
sub
loope
movsl
pop
test
scas
jbe
and
andl
inc
rclb
sbb
add
xor
jbe
xor
rolb
cld
clc
sub
cmp
xor
enter
push
jb
jbe
sar
inc
movsb
inc
sub
data16
xor
cmc
fwait
mov
sti
cmpsb
jge
cmp
mov
into
lcall
pop
imul
xchg
lock
dec
clc
call
cltd
inc
inc
or
jns
js
std
fdivr
jns
mov
sub
cmp
mov
addr16
xorb
ficompl
mov
sbb
xor
push
sti
jno
rcrb
insl
push
jg
xlat
push
mov
push
stos
mov
lods
imul
push
daa
pop
sahf
xor
adc
stc
imul
aam
cmc
scas
xor
aas
xchg
add
into
pop
stos
push
leave
scas
mov
add
sarb
mov
push
and
pop
out
push
sub
xchg
mov
push
in
in
pop
or
add
pop
jne
fdivs
lcall
sub
push
mov
out
lock
or
lcall
push
xchg
js
fwait
add
dec
outsb
sbb
roll
adc
dec
or
rolb
jl
loope
mov
adc
pop
xlat
xor
add
mov
insl
inc
movsl
xor
sub
jmp
xchg
cmp
mov
add
insl
jo
dec
sub
shl
pop
pop
enter
sbb
into
or
icebp
mov
test
lcall
mov
dec
mov
jne
mov
sbb
pop
dec
mov
loopne
mov
sbb
and
je
jno
adc
ja
sarb
lret
cltd
or
jb
jnp
jns
pop
mov
push
and
hlt
cmpb
xchg
mov
imul
int
xchg
jecxz
insl
jmp
cmp
pop
mov
pop
xchg
inc
loope
cmpsl
test
push
jno
cmp
push
mov
xchg
inc
add
out
inc
xchg
push
fcom
ret
rcrl
xchg
fidivs
in
outsl
test
cmpsl
stc
ja
inc
push
sbb
mov
pop
jo
aad
jp
loope
pop
xlat
xchg
push
insl
cs
xchg
sub
ljmp
lock
imul
mov
pop
inc
outsb
cltd
add
mov
jp
and
add
repz
stos
mov
dec
add
jle,pt
pop
sbb
mov
sub
xchg
sar
lret
inc
sub
pop
ja
push
jl
stos
xchg
xor
testb
push
lods
inc
mov
mov
fsub
in
xchg
or
std
loop
lret
push
loop
xlat
xchg
push
xchg
dec
fdivrp
mov
cmpsl
je
fidivl
es
into
cmp
and
outsl
mov
push
adc
lock
clc
popf
imul
xchg
add
mov
xchg
loope
ret
mov
das
popf
mov
add
jae
jp
jp
push
dec
enter
pushf
push
repnz
xchg
stos
sub
iret
hlt
mov
clc
and
mov
bound
shl
shrl
fcoml
add
mov
jge
lahf
loop
jmp
dec
cld
push
call
push
xchg
data16
dec
stc
mov
scas
add
xchg
sub
sti
xchg
stos
push
pop
cld
rcrb
mov
icebp
scas
fwait
push
and
mov
test
push
mov
mov
ret
movsb
sub
push
cmpsb
add
xor
adc
fisubl
repnz
jnp
or
mov
dec
mov
xor
aam
daa
aaa
xchg
repz
dec
enter
pop
mov
or
push
aam
fidivrl
in
mov
mov
add
jno
into
add
lock
xchg
xchg
mov
cmc
push
adc
daa
rcll
nop
out
ljmp
xor
fists
mov
sbb
push
jae
pop
inc
mov
cmp
add
iret
cs
insl
fadd
bswap
push
cmp
sbb
or
xchg
out
je
or
les
cli
test
cltd
cmp
and
xor
or
mov
sub
mov
mov
fisubs
outsl
mov
xor
mov
inc
cmp
cltd
or
mov
sahf
cmp
or
out
jp
andb
add
sbb
mov
dec
fsub
or
mov
sub
mov
fildl
test
out
cvtdq2ps
sbb
lds
fsub
scas
push
pcmpgtw
push
bound
mov
mov
jecxz
xor
scas
std
test
or
lcall
jmp
std
mov
xor
xor
test
xor
lods
out
fists
jo
mov
xchg
roll
lret
test
pusha
xor
ret
xchg
rolb
and
cmovno
in
cmpsb
popf
push
mov
sar
push
inc
mov
outsl
or
dec
sbb
add
sbb
and
xchg
lds
dec
fcoml
xchg
sub
popa
call
jg
lahf
bound
xor
fwait
neg
loopne
aaa
mov
xchg
mov
xor
add
sbb
adc
mov
sti
sbb
jg
decb
xchg
pop
inc
xchg
loope
mov
xchg
jge
xor
jmp
jge
lahf
or
dec
in
ret
lret
adc
rcrl
testb
xchg
and
xchg
jmp
movb
dec
pop
pop
xchg
adc
cmpsb
stc
jmp
mov
xchg
push
mov
or
mov
lahf
jp
cs
addr16
dec
xchg
fcompl
sub
out
mov
lcall
mov
add
sti
insl
inc
aam
enter
imul
push
cmp
sub
xor
xchg
add
xchg
push
sbb
outsb
aas
pop
mov
push
test
pop
mov
pop
push
nop
push
movsl
jp
iret
es
mov
js
adc
jo
push
mov
das
pop
fstpt
idivb
sub
ret
cmp
mov
push
or
push
notl
fsubrs
hlt
inc
aas
sbb
lock
lret
dec
les
pop
mov
inc
and
ljmp
pop
cmp
fisubrl
push
and
pop
data16
jge
shll
stc
fnstsw
clc
test
push
cld
int3
ror
cs
dec
sbb
sbb
shlb
sub
jno
std
dec
addr16
jg
clc
lock
adc
loopne
mov
rcll
jns
test
test
cmpsl
pop
sub
les
in
jle
daa
push
iret
xor
inc
shrl
cmp
test
pop
sbbl
sbb
dec
inc
dec
test
mov
add
cltd
cltd
pop
sbb
rorb
rcrb
xor
and
stos
add
jbe
notb
mov
sub
stc
xlat
imul
xchg
jb
test
or
adc
cmp
adc
jns
add
xor
sub
mov
cwtl
cmpsl
dec
mov
pop
lret
imul
inc
filds
repz
packuswb
test
push
pop
add
popf
dec
es
mov
iretw
sarb
int3
xor
dec
push
sub
pop
int
and
xchg
bound
pusha
arpl
add
jb
mov
sbb
daa
out
sub
jo
call
mov
movsl
fidivrl
pop
adc
inc
pushf
xchg
shl
add
push
xchg
inc
inc
ljmp
test
std
sahf
push
movsb
popa
xchg
js
cmp
jl
sbb
mov
pop
xlat
adc
adc
dec
sbb
outsl
push
cwtl
test
std
inc
sarb
fdivl
push
shl
aad
adc
in
out
adc
in
aas
nop
and
sbbb
sub
adc
ss
mov
mov
mov
xchg
jle
and
fsubs
mov
je
fisttps
aam
sbb
push
mov
loopne
cli
sbb
pop
jbe
or
bound
xchg
cld
mov
or
fildll
inc
ret
int3
xor
pop
mov
mov
dec
or
push
outsl
sbb
in
xor
or
popa
pop
loopne
and
jecxz
push
mov
mov
lret
lret
inc
cli
cld
cwtl
and
inc
dec
inc
idivl
or
dec
xchg
nop
mov
and
inc
mov
inc
and
test
loop
pop
sbb
sbbb
mov
outsb
jo
mov
pop
pop
sub
mov
adc
push
add
xchg
in
out
dec
cld
adc
mov
adc
add
dec
mov
sub
xchg
shlb
push
cmp
rcrl
jb
mulw
inc
aad
inc
hlt
test
push
or
jbe
int3
cli
test
testl
xor
push
hlt
dec
into
cmp
fnsetpm(287
jp
iret
sbb
lods
mov
hlt
icebp
lahf
pop
mov
lret
jne
jo
mov
movsb
fimuls
xor
inc
sbb
jne
push
dec
or
or
cmp
xchg
out
data16
jae
add
cmpsb
mov
inc
enter
roll
mov
in
xchg
inc
enter
shrb
sahf
js
jne
and
dec
ljmp
mov
mov
push
fcoml
int3
movsl
out
sbb
fcmovnb
fsubrs
mov
das
or
nop
arpl
jo
orl
dec
mov
cmc
sahf
mov
jne
mov
nop
jo
push
sbb
mov
jo
outsl
mov
fisubrs
loop
fs
cwtl
sbb
or
cs
and
popf
cmp
jge
enter
adc
lcall
gs
xor
xchg
and
sub
xor
xchg
inc
jne
fsubl
add
and
aaa
es
adc
incb
fsubrl
pop
enter
jge
inc
enter
pop
shl
lds
aam
jae
push
mov
movsl
lret
lret
cld
adc
inc
inc
add
in
std
xchg
mov
stos
fistpl
jne
add
in
mov
fs
ficoml
inc
xchg
test
mov
into
adc
mov
dec
jp
fstpt
or
loopne
push
sub
rorl
jne
push
sarl
or
jnp
dec
mov
pop
xchg
das
das
cmp
mov
aam
rcrl
in
or
xlat
xchg
fisttpll
adc
push
mov
cltd
pop
mov
popf
xchg
in
aaa
inc
scas
dec
mov
loopne
cltd
push
int
std
int
lahf
gs
add
adc
dec
mov
jmp
jno
xchg
xor
add
push
in
cltd
loopne
in
test
sbb
popf
sbb
loop
std
ljmp
mov
jmp
mov
pop
pop
jnp
mov
mov
cmp
xor
leave
mov
lock
xchg
push
fnstcw
sbb
sbb
in
aaa
into
sub
data16
test
cltd
jae
imul
xor
mov
clc
push
jb
imul
aaa
pushf
lcall
repnz
mov
jnp
jae
and
push
jae
dec
jmp
dec
dec
xchg
imul
jo
adcb
inc
and
sbb
pop
call
or
inc
icebp
xchg
icebp
inc
jg
push
dec
inc
cmp
jle
aam
pop
sub
xchg
jo
sbb
dec
mov
inc
sub
in
fsubl
divl
loope
jge
jno
lret
rorl
xlat
xchg
mov
mov
adc
ret
lods
mov
in
test
inc
out
inc
sbb
pop
mov
scas
lea
push
pop
ds
je
lcall
push
dec
cmp
push
mov
ret
arpl
push
dec
addr16
or
les
int
cli
adc
add
or
repz
jl
pop
sahf
inc
ss
cli
xlat
icebp
orl
mov
mov
push
or
cmp
out
shll
cmovb
mov
xchg
xlat
das
pop
sbb
and
cmp
xchg
and
test
aam
sub
lods
popa
test
es
dec
or
aad
sub
xor
icebp
mov
mov
faddp
mov
jg
pushf
les
int3
rolb
fmul
int3
xchg
popa
outsl
and
aad
dec
sbb
adc
loopne
push
jb
sub
xchg
punpckldq
inc
push
cmpsl
mov
mov
out
inc
outsl
jne
mov
xchg
aas
cmp
loopne
js
push
repnz
lret
data16
cmp
adc
mov
ja
jae
dec
pop
cmp
popf
addr16
inc
push
out
in
arpl
inc
mov
jbe
pop
dec
lea
and
pop
or
loop
xchg
and
xchg
shrb
pop
jl
mov
jo
sub
cmpsl
mov
mov
jge
ret
daa
jecxz
cld
shlb
xor
push
inc
cmpsl
cmp
scas
sub
xlat
bound
aad
push
test
mov
sbb
cltd
fldt
aaa
mov
scas
mov
dec
mov
es
sti
cs
test
inc
xor
cmp
cmp
mov
mov
jns
sub
mov
sahf
sub
sbbl
idiv
insb
out
xor
lods
pop
lea
add
wrmsr
pop
adc
jg
andb
fsubr
mov
add
orl
fistpl
push
add
inc
mov
pop
aam
addb
mov
sub
scas
mov
aam
int3
push
and
lods
ret
fwait
or
mov
aaa
out
fcomps
jg
push
pop
int
and
movsl
fidivrs
iret
jge
in
push
daa
hlt
andl
jnp
pop
lea
mov
mov
scas
das
out
xchg
sbb
fisttps
and
cmp
and
add
rcll
mov
ret
jne
jo
adc
mov
cmp
sub
shlb
fsubl
mov
test
mov
fnstenv
cli
adc
mov
push
jne
loopne
push
lods
ret
push
and
mov
mov
inc
jmp
movsb
push
jno
mov
inc
iret
mov
mov
out
aad
push
push
out
orb
mov
jb
rcrl
cmpb
or
rolb
sub
dec
adc
dec
imul
add
lods
or
and
repz
inc
movb
push
jo
div
call
jp
enter
inc
push
xchg
xor
andl
xor
sbb
sub
mov
shrb
cmp
pop
xor
xchg
and
mov
fidivl
sarb
mov
lahf
mov
idivb
adc
and
push
out
push
mov
imul
enter
or
pop
adcb
das
xchg
pop
lds
sub
fsubs
jns
sub
xor
sar
fwait
mov
and
das
dec
mov
jb
jmp
cmp
sub
push
inc
sub
pop
jle
addl
shl
outsl
popa
xor
rorb
ret
sbb
mov
xor
rcl
adc
sahf
mov
mov
fistpl
pop
mov
inc
lds
bnd
mov
or
mov
idivb
popa
mov
in
sbb
mov
cwtl
pusha
fdiv
fidivs
shlb
icebp
addw
leave
iret
rorb
into
mov
incl
adc
je
lahf
xor
add
stos
cmp
dec
sahf
and
dec
jge
cwtl
jae
js
lret
in
mov
iret
fimull
sub
lods
push
clc
push
fcoml
dec
inc
xor
or
sbb
ljmp
gs
enter
fwait
add
insl
loopne
mov
aaa
xchg
mov
shll
and
or
push
push
daa
mov
or
pushf
inc
adcl
mov
in
or
mov
shr
ficompl
inc
sahf
xor
fucomp
push
xchg
add
sbb
lds
dec
cmpsb
adc
sbbb
ds
cs
scas
arpl
or
js
ficomps
sbb
inc
or
iret
mov
insl
fwait
cmpsl
lds
repz
push
mov
subl
add
sti
in
mov
push
scas
inc
lea
movsl
fdivl
mov
out
popf
in
lret
dec
in
ds
mov
xchg
mov
pop
in
je
dec
adcb
lea
xchg
sub
dec
mov
xor
mov
loopne
mov
jne
jg
push
test
shl
cmc
push
pop
cld
add
mov
xchg
arpl
out
sub
cmp
push
imul
pop
push
push
mov
mov
jae
andb
popf
mov
imul
sub
scas
out
mov
mov
dec
pop
lods
fisubrs
pop
xlat
cmpsb
cmp
das
leave
xchg
adc
jno
inc
scas
aad
out
ja
fisubl
xchg
leave
fimuls
jg
int3
ficoms
sub
int3
dec
icebp
inc
test
mov
mov
je
fcomi
xor
test
jp
xchg
test
aaa
xchg
std
sub
pop
mov
addr16
or
ja
cld
cmc
lahf
shrl
push
cltd
jne
push
mov
inc
mov
fs
and
outsl
ja
push
mov
sbb
mov
js
push
mov
mov
das
inc
cmpsb
mov
sub
fdivs
adc
xlat
jnp
pop
sti
enter
sbb
jb
push
jp
inc
xchg
inc
jl
fdivrl
inc
push
movsb
insb
lahf
pop
enter
test
shlb
shl
pop
js
mov
mov
and
sarb
stos
icebp
cltd
mov
and
lods
xchg
insb
icebp
pop
popf
jl
xlat
enter
sbb
xchg
pop
arpl
arpl
xchg
pop
mov
or
in
and
shl
nop
lds
jle
data16
scas
mov
pop
scas
mov
dec
cmp
dec
sbb
mov
shlb
mov
scas
push
loop
test
sbb
cmp
jbe
in
inc
fdivrs
mov
xor
nop
mov
mov
mov
repnz
lahf
or
fmull
jbe
mov
xchg
hlt
imul
iret
push
jecxz
mov
mov
mov
test
mulb
out
and
pop
jns
sub
es
test
push
jbe
mov
dec
aam
cmc
stos
pusha
jno
mov
fistl
lock
mov
sbb
and
cmp
and
popa
mov
mov
sbb
and
xor
adc
scas
fwait
xchg
cmc
ret
mov
inc
ljmp
clc
cltd
add
jne
call
xchg
sub
das
fwait
push
and
xor
and
mov
rcl
out
sarl
or
push
les
mov
and
push
add
mov
mov
fnstcw
bound
pop
outsb
out
push
jo
fwait
clc
es
aad
add
jno
lret
sbb
inc
or
rcrb
mov
cmpsl
popa
mov
aas
sub
pop
imul
fmull
xchg
sti
insl
inc
in
adc
mov
pop
mov
adc
cmp
adc
mov
movsb
inc
sti
fidivl
fnsave
dec
xchg
insl
cmp
mov
or
ss
mov
pop
mov
test
jge
push
je
xor
mov
aaa
cli
mov
loope
insl
lret
lds
fdivrs
into
sub
inc
call
lea
in
xchg
sti
or
stos
xlat
icebp
inc
mov
sahf
ds
cmp
repz
iret
cmc
sub
int3
imul
cli
cltd
ja
mov
mov
inc
cmp
push
inc
fsubp
pop
stos
push
dec
and
pop
pop
push
leave
stc
out
fisubrl
xchg
sahf
mov
mov
dec
pop
je
div
cli
or
jecxz
int3
bound
dec
mov
mov
test
pusha
mov
xchg
je
aam
lds
xchg
add
sbb
std
mov
stos
mov
js
cmp
xor
pushf
xchg
ljmp
fcmovne
push
jne
pop
cltd
cmc
or
data16
out
xchg
scas
dec
cmp
ss
test
jl
rcr
popa
sbb
pop
mov
cli
test
adc
mov
xchg
ficoms
mov
pop
mov
mov
push
cltd
cld
les
pop
imul
scas
sar
test
add
frstor
mov
xchg
mov
fs
das
xor
dec
push
xor
outsl
xchg
push
insb
jmp
shll
in
out
mov
push
mov
inc
je
pop
inc
pop
mov
aaa
movsb
cmp
dec
cmp
xchg
std
jg
dec
xchg
sbb
xor
nop
cltd
push
loopne
aaa
jmp
aaa
sub
aam
ret
xchg
sti
cmp
in
or
xchg
pushf
dec
test
push
mov
mov
add
and
rcr
pop
sub
repz
outsl
cmc
mov
or
xchg
roll
outsb
into
inc
jnp
mov
mov
or
loopne
rolb
cmp
mov
push
dec
xchg
fildl
cmp
mov
movsl
push
push
inc
xchg
sub
loop
cmp
ficomps
into
jo
jae
pusha
mov
ret
dec
jge
jb,pn
leave
inc
sbb
cmp
add
ds
and
push
in
jo
jp
mov
popf
sbb
orb
xchg
rcl
movl
insb
ret
or
mov
pop
test
xchg
or
cmc
dec
das
insl
inc
fadds
mov
pop
sahf
xorl
inc
cs
sbb
rcr
inc
jne
int
mov
inc
or
cmp
repz
or
test
push
cmp
sbb
xor
lea
decb
data16
push
pop
aad
and
adc
cmp
insl
inc
or
push
loope
jl
or
jns
jle
cli
push
inc
mov
dec
test
inc
pushf
test
dec
mov
pusha
adc
lods
mov
xor
cmp
push
loop
fs
cli
das
fs
mov
imul
ljmp
stos
pop
adc
xchg
cmp
iret
push
addb
outsl
push
shl
cltd
xchg
cmp
imul
mov
push
adc
cmp
je
pop
cmc
pop
sub
pop
lret
call
jo
dec
mov
xchg
push
out
mov
ret
xchg
sbb
add
sub
test
stos
inc
adc
rclb
stos
scas
sbb
jb
dec
sbb
fstps
adc
mov
jo
in
inc
pop
inc
sbb
jle
pusha
mov
cmp
mov
xor
add
shlb
cmp
adc
aad
std
add
aam
sub
pop
xor
jle
push
mov
or
cmp
sub
and
imul
sub
pop
shll
cmp
xchg
jl
add
xchg
cmp
xorl
xor
in
cmpb
js
imul
cmpl
sbb
adc
mov
xor
cmpsl
sbb
in
adc
dec
clc
shll
inc
pusha
sbb
popf
cmp
lcall
jge
insb
jno
dec
repz
out
repz
std
ds
popf
int
pusha
movsb
push
push
and
xchg
sub
pop
lcall
jl
push
jge
lods
xlat
fldlg2
mov
pop
add
stc
scas
fistl
pop
push
mov
lahf
mov
jne
push
add
xchg
cmp
ss
decb
out
sbb
add
sbb
pop
jmp
cmp
popf
xor
in
shlb
inc
inc
hlt
push
lahf
mov
push
adc
and
test
loopne
add
or
scas
sbb
cmp
pop
test
jle
and
adc
negl
or
mov
push
mov
icebp
test
and
jmp
jns
dec
push
popa
push
lock
jno
les
sub
rorb
pop
cwtl
in
lea
in
lcall
mov
popf
xchg
jbe
cmpsl
jecxz
out
imul
loop
add
fwait
mov
cmpsb
inc
nop
mov
and
outsb
test
sbb
ja
jne
out
push
fstpl
dec
xor
das
jmp
icebp
push
push
loop
stc
das
popf
rorb
mov
std
stos
add
cmpsb
outsl
jle
cmp
push
rorl
mov
inc
stos
push
jns
jmp
cmp
rorl
stc
add
cmp
cmp
dec
inc
sbb
je
jo
adc
sbb
xor
popf
cmp
lods
push
xchg
push
imul
push
xchg
pop
dec
mov
aaa
push
pop
aas
or
insb
xchg
testb
nop
sub
leave
sub
mov
or
lods
and
imul
not
aaa
sbb
jns
adc
hlt
dec
mov
inc
pop
dec
ret
cld
enter
lret
int
cli
ss
inc
in
and
sbb
std
dec
inc
pop
movsl
push
xchg
mov
sbb
pop
mov
xor
sub
jae
inc
cmc
cwtl
xor
ss
and
jg
push
and
insb
mov
mov
xor
loop,pt
aam
imul
std
subl
add
outsl
push
mov
xlat
cmpsl
insl
sub
and
dec
call
or
push
aam
xor
in
mov
in
jbe
inc
sub
jle
push
out
sbb
and
jl
jecxz
aaa
push
adc
repnz
mov
imul
sub
cmp
and
shr
xchg
mov
inc
cmp
iret
sbb
adc
das
adc
adc
int
xchg
sbb
rcl
scas
add
mov
cmp
das
out
repnz
in
ja
mov
pop
xchg
jnp
jle
cwtl
in
out
jne
push
adc
pusha
shrl
out
or
rclb
in
int
enter
stc
inc
xchg
mov
push
in
out
mov
cld
adc
rorb
out
mov
push
cmp
add
jp
test
mov
push
lret
aaa
popf
shrl
mov
mov
sbb
movsb
lret
xchg
xor
fmul
dec
insl
insb
pop
jecxz
xorb
xchg
lds
mov
add
jmp
mov
int
adc
mov
cwtl
ljmp
and
jg
repz
lret
add
popa
lret
rclb
addr16
push
jmp
pop
es
insb
xchg
jno
xchg
xchg
and
fdivs
adc
cld
mov
ss
shlb
add
outsl
pop
stos
inc
jnp
cmc
fs
sbb
pop
sbb
mov
int3
or
lea
aad
mov
inc
lds
jle
or
outsl
inc
mov
je
movsl
bswap
pop
cld
fstpl
jg
ud1
xlat
aam
jg
fdivp
stc
icebp
mov
je
and
test
add
mov
push
jmp
jae
jne
adc
cmp
mov
mov
je
lret
jbe
enter
mov
out
imul
cltd
jmp
rorb
xchg
inc
mov
sub
mov
adc
ret
iret
cmp
sbb
enter
lods
pop
pop
std
movups
mov
jl
rcrl
daa
int3
and
jle
cli
cltd
pop
fstp
repz
mov
push
int
mov
sbb
insb
mov
jmp
pop
repnz
lcall
loopne
sub
addr16
hlt
pop
leave
or
cmpsb
adc
dec
mov
adc
add
add
fnstsw
lds
fistpl
gs
xchg
dec
mov
pop
or
ss
mov
in
mov
pop
mov
mov
mov
dec
jp
shrb
push
arpl
loopne
rclb
popa
sbb
lea
test
out
mov
push
sub
mov
mov
push
ljmp
mov
or
loopne
sbb
outsb
lcall
addr16
movsl
dec
push
sbb
xor
mov
pop
cmp
xchg
push
pushf
sbb
repz
in
sub
sbb
in
in
jb
cmp
push
das
jmp
dec
add
cld
cmp
ficompl
sub
pop
jl
js
outsl
sahf
ja
push
xlat
imul
call
loope
fwait
out
negl
sbb
pop
rcr
sub
dec
sub
lret
xchg
and
jmp
arpl
dec
out
pop
frstor
shrl
mov
xor
mov
pushl
sbb
call
pusha
cmc
mov
and
and
lods
jne
in
sarl
jbe
push
jbe
xchg
jnp
negb
pop
addr16
popf
push
mov
pop
lds
mov
jmp
fldenv
cmc
jns
js
fildll
es
outsb
das
xchg
xchg
out
cmc
filds
popa
outsb
lcall
inc
adc
inc
xchg
lahf
out
movsb
test
lods
hlt
aaa
xlat
adc
repnz
fsubs
lods
dec
push
sahf
es
jae
or
loop
sub
lret
scas
orl
int
mov
pop
imul
jbe
mov
adcl
push
sub
pop
lret
inc
test
incb
stc
jecxz
mov
mov
cwtl
push
out
std
nop
ljmp
sbb
push
sub
push
inc
pop
push
adc
push
mov
mov
mov
inc
jbe
or
repz
mov
ret
shrl
adc
and
xchg
jg,pt
std
mov
add
fs
decb
sub
lea
inc
fwait
xchg
shrb
int3
rcrb
pop
push
add
mov
and
add
fldt
push
push
mov
push
push
or
ds
jno
pop
inc
lcall
shl
push
dec
outsl
lods
xchg
sbb
lret
nop
xor
pushf
xorb
sub
movsb
xchg
int3
xor
lcall
test
xor
fldcw
mov
bswap
push
pop
mov
xchg
pop
mov
jb
shl
lahf
cltd
inc
add
pop
imul
mov
imul
or
pusha
push
idivl
enter
dec
mov
pop
or
adc
xchg
ret
roll
lahf
push
idiv
pop
cmpsb
daa
mov
mov
inc
sbb
nop
inc
push
jbe
add
mov
mov
jg
push
fiadds
imul
jbe
add
push
push
push
cmp
adc
xchg
xchg
sub
movsb
popa
jmp
out
jae
mov
sbb
mov
scas
jg
push
dec
pushf
dec
push
sbbl
pop
sub
stos
test
jbe
mov
inc
inc
imul
mov
and
mov
jae
loop
movl
fwait
sub
std
iret
or
ljmp
inc
sub
sbb
cmp
xchg
mov
outsl
mov
js
mov
fistps
ss
das
gs
repnz
rol
repnz
mov
cmp
mov
daa
push
pop
jno
mov
mov
push
pop
mov
rolb
sbb
push
test
iret
xchg
mov
or
sbb
mov
outsb
sub
xor
or
jo
cwtl
and
lods
add
aas
xor
out
push
popa
push
insb
and
push
insl
mov
decl
movl
rcl
mov
pop
rorl
mov
mov
stos
and
and
test
cmp
sub
dec
idivl
push
mov
pusha
pop
sbb
jge
stos
mov
pop
adc
out
ret
and
add
cli
mov
iret
pop
mov
in
fcompl
movsl
inc
sub
dec
jmp
and
xchg
sbb
mov
jge
jb
adc
dec
shll
into
daa
push
subb
mov
adc
iret
mov
push
addr16
jg
sbb
push
in
push
shll
daa
lcall
mov
jno
cld
xchg
hlt
nop
sub
and
mov
jge
inc
and
xor
push
mov
std
hlt
stos
test
out
sub
push
ljmp
inc
dec
lods
jne
inc
cmc
cld
push
sahf
or
sub
imul
sub
push
xor
shrl
lret
cmc
or
adc
sti
jmp
push
jnp
mov
int3
push
cmp
and
clc
xchg
xlat
pusha
pusha
iret
idiv
fisubl
daa
cmp
mov
addb
out
mov
out
fildll
call
scas
lcall
inc
pop
jae
adc
ja
call
icebp
inc
mov
add
sahf
jp
repz
mov
das
and
mov
shrl
adc
imul
aad
dec
add
push
in
sub
loop
sub
outsl
cs
cmp
test
fnstenv
sarl
mov
sahf
add
jbe
aam
jno
dec
pop
jmp
lock
pop
aas
movsl
sahf
out
dec
add
cmpsb
inc
in
scas
pop
mov
sbb
imulb
sub
pop
adc
lea
jp
push
cmp
popa
mov
cmp
dec
pop
xor
mov
xchg
mov
adc
mov
dec
test
icebp
mov
xor
cli
popa
cmpb
inc
test
adcb
dec
arpl
out
xchg
fwait
push
clc
lods
inc
cmp
jb
cmp
adc
push
pop
sbb
es
stos
pop
jmp
fcoml
inc
cmpb
and
xor
mov
out
bound
push
sbb
sbb
out
mov
mov
les
and
and
inc
push
call
in
xchg
xchg
imul
add
push
xchg
aam
fsubl
sub
aam
cwtl
add
jno
adc
popa
mov
hlt
push
out
loopne
add
aaa
les
js
push
push
xor
imul
add
push
pop
mov
aaa
repnz
lods
add
lock
mov
pop
lea
outsl
push
fisubrl
and
and
out
and
shll
adc
rclb
or
sub
xor
incb
mov
mov
fwait
bound
push
subb
fcompl
stos
xchg
pop
mov
jle
test
out
mov
add
ret
insl
pop
xor
cltd
jno
or
icebp
stos
pop
mov
mov
dec
pop
pushl
cmp
in
ja
icebp
aas
adc
in
cmp
jbe
mov
arpl
add
test
mov
xchg
mov
mov
or
insl
push
cmpsb
andl
sbb
mov
lret
stc
dec
xchg
fsts
jge
mov
mov
imul
rcll
jnp,pn
add
push
addb
adc
inc
xchg
dec
cwtl
jo
cs
dec
mov
xor
rol
push
mov
mov
jl
jl
inc
pop
push
fbstp
aas
inc
sub
jno
in
mov
test
xchg
mov
outsb
outsb
cmc
push
sarl
push
popa
cmp
dec
jbe
dec
lods
data16
mov
jmp
int
in
sub
xchg
and
stos
lahf
idiv
xchg
mov
jno
scas
icebp
popf
mov
cwtl
js
repz
or
shll
sbb
imul
pop
pop
mov
sub
sub
test
adc
and
or
int
sub
pop
in
and
push
cltd
xchg
ret
pop
xorl
mov
xchg
aad
sbb
roll
stos
cs
xor
pop
adc
popf
push
in
fld1
sbb
les
orl
lahf
mov
fs
rorb
fldl
and
mov
xor
cmpsb
inc
insl
and
xchg
pop
mov
and
test
pcmpeqw
outsl
jmp
mov
out
xorl
frstor
dec
push
fmul
mov
jmp
mov
push
cmpsb
fsubs
sub
cmpsb
mov
out
mov
cmp
push
adc
xchg
sub
jge
push
into
or
mov
filds
ret
arpl
jnp
push
ret
push
jmp
xor
mov
je
aaa
add
std
xchg
fdivrl
mov
dec
xchg
sub
popf
or
incb
push
add
pusha
js
pop
or
icebp
insl
lds
xor
dec
leave
push
pushf
cmpsl
addr16
test
test
xchg
or
jecxz
sbb
fldl
sbb
fucomp
adc
aam
adc
xchg
sahf
mov
fldt
inc
fs
loop
sbb
lds
xchg
push
push
pop
jmp
ffreep
inc
sbb
and
mov
push
in
xchg
or
fwait
std
sbb
sarl
dec
aam
and
test
adc
ljmp
sub
mov
pop
or
jl
jns
push
loopne
repz
test
or
jmp
xor
ljmp
xchg
sub
leave
movsb
cmpb
xchg
fcomps
shrl
mov
mov
aam
cld
sbb
mov
cmp
aam
sbb
popa
sbb
or
mov
je
jmp
out
ret
jge
mov
lea
push
cwtl
lods
aad
pushf
xorl
into
add
mov
stos
les
add
imul
icebp
jl
sbb
or
int3
sbb
hlt
cmp
xor
nop
pop
push
mov
cmp
xchg
dec
mov
sub
sub
mov
test
out
pop
arpl
imul
loope
adc
cmpsl
or
xchg
adc
test
in
dec
sbb
adc
mov
cs
nop
in
pop
call
roll
test
xor
das
cmc
lea
stos
jge
or
out
and
push
jl
sub
ficoml
fiadds
xlat
push
push
pop
or
das
dec
push
lea
add
scas
icebp
popf
dec
and
lea
aad
mov
jne
sbb
pop
lret
adc
add
shl
fidivs
lret
mov
sub
mov
cld
and
add
push
jno
sub
mov
stos
jae
xor
imul
add
fisttps
cli
ljmp
dec
adc
jmp
xor
inc
movsb
sbb
ljmp
mov
popa
jecxz
jmp
and
and
movsl
mov
repnz
inc
add
and
mov
or
les
adc
pushf
or
out
cli
mov
in
testb
stos
xchg
and
scas
mov
add
cmpsb
xchg
aad
jbe
arpl
fisttpl
movsl
rcl
stc
mov
fsubr
sarb
test
mov
lahf
std
mov
clc
cli
push
insl
bound
xor
cmpsl
lods
push
ljmp
mov
add
shrb
les
pop
cmp
cmp
aaa
inc
inc
lret
je
cld
push
loop
inc
fsubrl
or
jmp
mov
xchg
pushf
inc
inc
jle
dec
mov
cmp
pushf
mov
cmpsl
fadd
add
add
sti
imul
je
mov
call
ss
js
fdivr
je
stc
stc
std
mov
dec
dec
je
mov
popa
in
push
pop
pushf
xor
movb
fstps
xor
or
sub
dec
ret
cli
outsl
cltd
repnz
xchg
rorl
push
lret
dec
daa
lea
sti
mov
add
jno
pushf
pop
std
fs
int
mov
scas
in
jmp
out
in
xchg
add
and
push
ja
test
lret
xorb
cmp
cld
adc
mov
in
loopne
mov
cmpsl
adc
jecxz
ds
add
das
enter
adcb
dec
jle
adc
out
ror
out
xor
ljmp
nop
add
jmp
inc
jo
push
loop
mov
sub
aad
mov
mov
dec
xor
jno
fucomip
push
jle
mov
xor
mov
pop
mov
pop
lods
sbbb
repz
xor
pop
jns
or
sbb
xchg
cs
in
inc
mov
cmp
xchg
push
cmp
scas
xlat
pop
sbb
lock
push
pop
pop
push
cmp
adc
fs
fcom
mov
lret
xor
es
ret
inc
lock
pop
nop
lods
cmp
xlat
pushf
ja
add
jnp
int3
clc
mov
xor
inc
cwtl
popf
imul
or
or
mov
pop
ret
in
sub
and
lods
xchg
sbb
jnp
mov
inc
jo
stos
and
cs
jg
push
cmp
scas
adc
adc
pop
adc
fdivrs
or
and
mov
or
cwtl
xchg
call
mov
fadd
cmp
loopne
jmp
sub
mov
leave
lret
cmpb
cli
aam
mov
mov
cs
mov
xchg
int
cmp
mov
pusha
sub
lds
icebp
jns
cmp
in
xor
push
dec
push
or
out
push
dec
pushf
push
push
ds
jae
movsl
push
push
mov
js
outsb
out
or
inc
sub
dec
fwait
jno
jb
adc
add
dec
or
push
sub
jae
fistl
push
jge
sbb
cmpb
dec
std
mov
sbb
std
test
pop
pushf
lock
sub
ja
pop
pop
adc
sbb
push
mov
and
nop
mov
shlb
arpl
pop
clc
mov
sub
jns
mov
testb
dec
pop
push
fxch
popf
sbb
test
fnsave
push
aaa
inc
sub
push
push
add
mov
mov
mov
adc
imul
std
adc
in
std
loope
sbb
xchg
mov
fisubl
stc
fistpl
rcrl
or
dec
cmp
jb
sbb
xchg
and
into
popf
jns
rorb
imul
or
dec
and
sub
cmp
push
and
rcrb
iret
daa
jnp
out
cmp
mov
or
jno
adc
mov
or
in
jnp
mov
mov
daa
and
mov
add
sarb
sti
movsl
pop
jne
jge
push
stos
xchg
enter
push
imul
iret
addb
aaa
push
les
cmpsb
cltd
pop
sahf
in
rcll
addr16
adc
aaa
jge
sub
or
sbb
xchg
push
jb
movsb
fiaddl
testb
enter
aam
sub
xchg
mulb
add
dec
or
jg
mov
test
mov
ds
jne
adc
xchg
aad
adc
fnstsw
pop
cwtl
repz
sub
test
pusha
push
idiv
or
out
adc
stc
sbb
popf
rcll
ss
outsl
cmp
daa
lock
mov
popa
nop
push
lods
mov
pop
lock
cmp
mov
popa
sub
push
xchg
insl
lahf
jmp
mov
dec
dec
sbb
sub
xchg
mov
and
push
mov
mov
jle
js
jbe
arpl
or
push
sub
mov
dec
adc
jle
mov
pusha
add
adc
xchg
pusha
orl
push
fidivrs
stc
push
dec
cli
mov
out
sbb
into
sub
dec
imul
and
mov
dec
add
fwait
fwait
push
xchg
cld
jmp
gs
pop
js
xor
pop
movl
push
xor
adc
testb
mov
test
ljmp
sbb
fiadds
dec
jb
aam
xchg
pop
lods
mov
jl
push
push
pop
dec
lret
ficomps
faddl
jbe
pop
push
outsb
fisubs
inc
je
mov
mov
or
and
int3
cltd
add
cmp
movsb
fwait
pop
popa
or
jmp
xchg
rcrb
les
fs
les
test
into
adc
and
inc
out
cmp
sub
jbe
inc
movsb
sahf
cs
mov
and
and
push
mov
push
repnz
mov
imul
xlat
adc
inc
insb
sti
ret
push
test
std
scas
mov
lds
pop
outsl
lods
and
xor
bound
inc
jb
mov
mov
cmp
mov
sbb
les
mov
stos
push
cmp
pop
sbb
movsl
ds
xchg
sbb
movsb
movsb
aas
int3
cmp
pop
lret
imul
cmpsb
test
ficompl
les
sbb
xchg
hlt
push
or
xchg
or
add
add
popl
aas
push
insb
push
lods
dec
cli
inc
jge
int3
jg
or
mov
push
ss
sbb
icebp
xchg
sahf
jns
mov
pop
mov
scas
inc
sbb
jae
mov
les
into
mov
lcall
adc
xchg
ja
jp
scas
jne
aas
sti
jne
mov
addb
mov
sbb
cmp
and
cld
mov
roll
push
sbbb
ret
dec
roll
cmp
jne
or
jns
sbb
pusha
dec
push
aaa
loop
xor
daa
mov
arpl
out
scas
xor
mov
push
mov
cmp
dec
mov
stos
out
add
jno
mov
sub
das
popl
adc
push
jl
pop
push
cmp
adc
divl
jo
testb
popa
movsl
shlb
sbb
rcl
mov
add
jl
mov
mov
es
testb
inc
mov
popa
push
jle
test
or
cmp
aam
shll
test
outsl
dec
sbb
xchg
ret
adc
data16
jp
call
nop
mov
lret
idivl
cltd
mov
mov
sbb
fcmovnbe
dec
stc
xchg
fwait
or
pushf
scas
jge
mov
and
jbe
pop
std
push
aas
pop
cmp
negb
sbb
mov
inc
fidivl
sub
aad
push
insl
add
divl
pop
in
mov
je
mov
sub
decb
inc
insl
fsubp
pop
mov
xor
xchg
ret
mull
aad
xchg
inc
push
cmpsb
sar
dec
xor
mov
fyl2xp1
sub
and
cmp
dec
out
and
push
fstpt
fidivs
and
testl
hlt
pop
and
push
jmp
xor
out
push
adc
xor
mov
lahf
add
jne
stos
mov
stos
push
adcb
add
cmc
lahf
or
stos
lcall
or
lods
insb
movsl
dec
push
into
movsl
xor
in
out
dec
mov
mov
out
and
loopne
fldl
jae
xor
cwtl
pop
shlb
dec
inc
mov
inc
push
fistps
xchg
xor
insl
adc
pusha
stc
pop
sub
pushf
lds
cmp
adc
xlat
jge
add
cmpsb
dec
shlb
int
mov
aaa
add
adc
int3
call
add
push
push
rolb
mov
lcall
mov
xlat
or
push
cmp
loop
cwtl
sbb
fisubl
pop
test
cmc
sbb
cmp
cmp
or
cltd
sbb
push
mov
mov
dec
imul
in
cmpsl
daa
adc
inc
ret
xchg
push
fdivrl
sbb
aam
or
stc
or
inc
aam
jae
out
fsubrl
xor
ficoms
jmp
mov
cwtl
mov
jp
inc
scas
xor
jge
insl
loop
fdivrl
lret
sub
pop
fwait
scas
push
negb
hlt
adc
mov
std
dec
gs
adc
roll
movsb
add
adc
dec
jne
lds
or
push
iret
syscall
xchg
int3
loop
mov
int
ret
mov
call
sub
add
movsl
add
jne
push
mov
mov
cmp
ret
push
xchg
dec
clc
pop
cli
sbb
rcl
outsb
lods
adcb
jo
nop
lea
mov
jbe
and
mull
pop
in
push
push
pop
fld
push
cmpsb
mov
sub
lods
sbb
fstpt
clc
int3
lret
xor
sti
push
test
jge
adc
mov
inc
scas
sbb
sub
aam
loop
jns
addr16
xchg
nop
pop
push
mov
and
lret
add
nop
pop
mov
jle
popa
out
gs
pop
push
mov
or
push
mov
adc
jmp
mov
mov
xchg
or
mov
rcrl
push
xor
sbb
push
mov
xchg
sbb
je
sbb
cmc
xchg
int3
pusha
lea
sbb
push
jecxz
aad
xor
mov
jns
push
loopne
loope
icebp
adc
dec
sub
inc
mov
xchg
fstpt
jmp
add
loope
int
sbb
out
adc
gs
jno
mov
xchg
and
cmp
fwait
push
imul
jns
cmp
fdivrs
scas
mov
mov
and
adc
aam
data16
movsb
mov
adc
popf
inc
rcll
cmpb
jbe
dec
cld
jns
rcrb
sub
outsb
and
fsubl
out
cmp
mov
shl
xor
inc
push
movsl
xorb
lock
sbb
xchg
out
lock
leave
xchg
xchg
adc
aad
push
xor
xchg
xlat
div
push
cmp
cmp
mov
sub
inc
jae
loope
adc
dec
nop
dec
xchg
rcll
jae
into
sbb
shl
nop
lock
sub
sbb
ljmp
mov
mov
pop
xor
mov
js
xchg
mov
lcall
mov
movsb
inc
dec
add
and
cld
pop
and
pushaw
push
mov
jns
aam
fdivs
sbb
push
cmp
call
ret
mov
add
outsb
mov
bound
sub
sbb
inc
fs
pop
es
hlt
inc
push
cmp
jnp
sub
insl
addr16
lcall
dec
add
adc
fs
or
cwtl
mov
mov
lock
sub
popf
je
scas
dec
jecxz
pop
mov
out
push
jge
push
aam
cltd
mov
mov
dec
sbb
fimull
fisubs
xchg
add
cwtl
push
sbb
jp
shll
sbb
repnz
out
cmp
mov
mov
push
mov
and
lods
js
fcomi
fcmovne
shrb
in
pushf
mov
mov
mov
outsl
mov
dec
sbb
stos
movsl
mov
push
aad
test
aam
repnz
les
cmp
dec
adc
inc
mov
xchg
in
jge
hlt
ret
or
push
mov
mov
in
inc
and
dec
nop
sbb
cmpsl
rorb
roll
dec
xchg
xor
cmpsl
js
add
mov
repnz
shlb
mov
xchg
and
lock
xor
fcomi
fcompl
test
or
jge
bound
pushf
pop
and
add
loope
dec
adc
mov
icebp
lahf
pop
push
push
cs
in
repz
shr
hlt
pop
mov
nop
lods
xchg
hlt
jb
je
adc
push
pop
cmpsb
mov
lret
jae
mov
cmpsl
fsubrs
inc
push
into
mov
cmp
lret
lret
inc
paddb
add
scas
lds
add
testl
out
mov
inc
adc
inc
or
add
mov
adc
sub
mov
enter
je
adc
fs
sti
pop
xchg
sub
js
push
mov
ret
int3
add
push
mov
dec
push
shrl
and
stc
sub
adc
pop
pop
sub
ret
test
insl
mov
inc
divl
ljmp
lds
ficomps
mov
fs
jmp
lcall
push
push
jo
ljmp
push
clc
loopne
adc
std
cmp
cmp
into
in
jg
faddp
rolb
mov
imul
mov
rorl
test
mov
stos
je
cs
or
adc
pop
lahf
shl
ficompl
dec
cmp
and
shrb
pop
rol
mov
cmp
fistpll
pmuludq
add
adc
scas
mov
sti
jmp
iret
cli
adc
add
es
movsb
xor
push
addr16
push
stc
mov
fadds
mov
sbb
es
daa
in
negl
out
lds
xor
sbb
jne
push
rcll
and
lret
andb
inc
jbe
or
jmp
sbb
xchg
cli
mov
fwait
insb
ja
sub
cmpsl
push
imul
add
sub
bndstx
cltd
jp
ja
or
adc
je
ret
enter
std
fs
pushf
in
popl
add
or
pusha
arpl
aad
xor
lods
ljmp
stc
jb
sub
out
mov
sbb
daa
jle
mov
daa
xchg
mov
add
mov
xchg
xor
stos
mov
add
and
imul
into
stc
mov
mov
pop
hlt
bound
daa
cmp
xor
outsl
sbb
push
jle
jg
pushf
imul
mov
aas
pusha
out
add
xlat
add
stc
out
leave
mov
loopne
sub
jb
mov
adc
ss
push
push
stos
mov
xor
pop
adc
sbbl
xchg
fmulp
shl
push
adc
adc
dec
ds
jl
loop
inc
jecxz
push
mov
adc
fucom
ret
int
jg
int
loope
pop
aas
shlb
jnp
or
repz
xchg
mov
jmp
cmp
xlat
icebp
lcall
faddp
cltd
cmp
lock
and
xchg
in
xchg
popf
sbbb
mov
scas
and
cmp
and
mov
or
jmp
lea
cmp
ja
jnp
insb
xchg
adc
fmuls
jae
xchg
hlt
push
or
nop
icebp
inc
xchg
push
xchg
inc
inc
pop
pop
adc
adc
sti
lods
add
ret
add
push
push
cmp
mov
or
fstl
xchg
sub
lods
fwait
xor
mov
sahf
sbb
inc
lahf
and
sbb
push
dec
or
int3
nop
in
bound
jmp
ror
adc
mov
fs
mov
mov
jo
js
test
insb
mov
out
sub
hlt
lret
pop
js
dec
and
xor
pop
fdiv
or
sub
stc
adc
inc
inc
mov
mov
add
xchg
xor
mov
movsl
dec
add
in
jae
outsl
push
aad
in
add
adc
pusha
mov
cmp
pusha
cmc
outsl
ds
cmp
rcrl
xor
push
cmp
sub
in
sbb
inc
mov
lods
leave
movq
inc
xor
xchg
mov
xor
fnstsw
pusha
popa
push
shlb
jle
ljmp
mov
and
stos
pop
ret
sub
dec
dec
sbb
cmp
daa
or
mov
cwtl
fwait
iret
or
stos
rcrb
push
in
adc
mov
dec
sub
jne
movsb
shlb
mov
mov
adc
loopne
adc
or
push
xchg
mov
movsb
mov
jg
cmc
in
fiadds
iret
rcr
adc
jb
movsl
xlat
sbb
adc
mov
jbe
add
or
scas
or
ljmp
mov
nop
sbbl
sub
imul
mul
stos
int3
in
sbb
nop
es
or
out
sbb
outsl
fcoms
in
xor
or
ljmp
xchg
sub
jge
inc
test
std
pusha
inc
or
mov
dec
adcb
imul
xor
adc
cmp
mov
xor
xchg
lods
mov
cmpsl
mov
out
mov
adc
sub
cmp
xchg
insl
jb
jl
jns
xor
test
jbe
clc
sub
sarb
and
movb
adc
outsl
rolb
sbb
xor
jmp
dec
add
movsl
sbb
pop
fld
mov
data16
cmp
xor
pop
pop
xor
testl
out
into
xchg
sahf
add
fsub
andb
out
xor
pushf
test
movsb
pop
std
leave
enter
mov
push
lcall
sbb
gs
pop
in
xor
stos
add
enter
dec
or
fildl
sub
imul
dec
stos
dec
adc
cli
adc
mov
cmp
mov
mov
ret
or
clc
int3
push
scas
jmp
ds
and
fs
sbb
jae
jno
out
xchg
frstor
notl
add
sbb
stc
movsb
sbb
cmpsb
jo
les
jb
fidivs
aam
loopne
out
shl
dec
enter
mov
loopne
imul
daa
mov
sarl
mov
push
sbb
dec
sub
or
insl
int
push
das
mov
or
mov
and
movsl
test
and
push
add
lods
adc
lahf
pop
add
popf
inc
test
sub
sbb
jmp
shll
sarl
int
lahf
idivl
xchg
mov
lea
cltd
lds
or
imul
dec
add
cmp
movsb
xor
in
cmpb
cmp
mov
sti
hlt
test
or
or
xor
jp
jp
mov
iret
jp
and
fnstenv
inc
shll
rolb
push
sbb
or
pop
stc
jbe
xor
cmp
daa
pusha
mov
shll
in
inc
jecxz
mov
mov
mov
adc
push
push
mov
inc
mov
adc
testl
dec
aas
insl
mov
push
out
xchg
add
call
addr16
mov
dec
push
loope
cwtl
pop
testb
sbb
addr16
adc
mov
cmp
inc
push
cmp
loopne
daa
mov
adc
popf
sub
ljmp
ss
mov
cmp
sbb
repz
hlt
jns
inc
fsubs
fdivrs
loopne
dec
rorb
jmp
call
scas
sbb
push
mov
lcall
or
add
nop
cmp
and
dec
mov
pushf
mov
icebp
dec
call
loope
mov
push
push
adc
mov
push
jp
jge
filds
out
es
or
loope
jl
inc
dec
mov
add
hlt
fbld
mov
sub
lock
aam
sub
aas
dec
sub
xlat
pop
sub
imul
jno
mov
mov
xchg
call
ljmp
adc
and
fisttpl
xlat
sbb
mov
stc
test
xchg
mov
jb
stc
lock
out
push
js
in
lcall
cmp
outsb
push
lds
insb
mov
fdivs
mov
inc
ds
sbb
pop
adc
js
jns
or
xchg
pop
xchg
mov
sub
data16
jp
push
xchg
ss
shl
inc
inc
flds
fmul
cmc
cwtl
xchg
ret
xchg
mov
sbb
shll
fwait
add
lock
xchg
push
sar
inc
ret
test
lea
pop
and
adc
test
stc
adc
cmp
pop
cmp
mov
mov
jno
mov
rol
mov
aas
jo
pop
das
mov
mov
pop
clc
push
test
sbb
jle
push
pusha
mov
cli
cmpl
aaa
or
pop
xchg
mov
mov
or
inc
add
and
out
movsb
mov
rclb
lock
mov
enter
jns
cmpsl
int3
ss
xchg
inc
call
dec
mov
dec
pop
lret
mov
sti
dec
mov
pop
cmp
inc
mov
mov
mov
push
mov
loope
in
insb
imulb
sbb
out
inc
mov
cmpsl
or
fisubrs
mov
inc
test
and
js
mov
subl
and
pop
fwait
mov
and
dec
enter
cs
pop
loope
pop
in
int3
clc
ror
rorl
scas
imul
and
fldenv
test
test
jle
mov
or
je
adcb
cmp
sbb
and
pop
movsb
mov
or
xchg
in
push
push
lret
push
mov
jecxz
in
inc
pop
push
sub
push
adc
xchg
aas
jmp
pop
stos
or
jmp
dec
cmpsl
mov
int3
add
dec
incb
neg
sbb
imul
inc
lea
xor
divl
mov
and
push
pusha
push
add
mov
int3
mov
dec
cwtl
cmp
mov
stos
jl
jecxz
mov
popf
iret
pmaddwd
in
popf
or
xchg
xchg
add
int
clc
aaa
rcl
mov
mov
and
out
push
insl
sar
dec
mov
cmc
or
int3
sub
pop
lds
outsl
shll
jbe
pop
or
jnp
lock
loop
mov
scas
sar
push
add
popf
sbb
xor
stc
pop
in
push
test
fwait
xchg
aam
adc
adc
movb
fimull
xor
test
push
fwait
inc
dec
jns
aaa
out
push
fimull
rolb
jne
mov
sahf
sbb
mov
nop
subl
cmp
lods
call
ret
dec
inc
lcall
xrelease
mov
lcall
in
test
adc
out
negl
xchg
adc
test
add
xor
fildl
nop
cld
sub
mov
sar
jg
in
repnz
lret
and
imul
adc
dec
cmp
test
sti
sbb
push
jne
adc
out
loop
adc
or
lock
aas
cmpsl
icebp
lods
rolb
mov
js
mov
in
lea
sbb
stc
in
aaa
cmp
lret
aad
push
fs
add
stos
push
bound
jb
adc
repz
jnp
mov
je
into
adc
je
lods
xor
cs
cwtl
pusha
xorb
mov
inc
pop
iret
xchg
test
and
cmp
out
cmp
and
pop
lock
je
xchg
ljmp
inc
adc
xchg
ss
ljmp
dec
mov
dec
aas
mov
in
cmpb
iret
ss
lock
inc
xchg
sbb
and
dec
mov
daa
jb
and
push
push
and
push
repz
sti
mov
dec
push
jmp
jle
cmp
inc
jmp
movsb
pop
add
jne
inc
ss
pop
inc
inc
add
cli
lret
or
imul
sub
cld
push
addb
xchg
or
mov
mov
dec
sahf
mov
stos
in
ror
xchg
orb
push
add
idivl
hlt
xlat
lock
push
mov
jno
jbe
addl
mov
xchg
push
lea
sar
daa
nop
add
jo
inc
lret
incb
in
adc
mov
enter
jge
adc
add
dec
insl
pop
imul
xor
ljmp
cltd
mov
and
icebp
xor
aaa
dec
xlat
in
in
ror
sub
cmc
mov
push
xor
mov
imulb
cvtpi2ps
jecxz
pusha
orl
in
sbb
xchg
add
dec
mov
push
popf
dec
popf
repz
enter
xor
adc
neg
pop
mov
imul
and
je
sub
jle
xchg
icebp
pop
das
daa
out
subl
push
push
pop
fwait
insb
xor
jge
inc
idivb
hlt
add
and
sbb
mov
mov
loope
mov
mov
pop
sub
sbb
inc
int
jge
lock
sahf
cmpsb
lahf
fdivl
jns
je
xor
scas
cmp
mov
inc
insl
add
in
dec
mov
cmpb
jnp
cmp
mov
and
aaa
xchg
pusha
mov
imul
and
lret
sbb
loop
push
xchg
ja
xor
scas
lahf
stc
roll
pop
mov
nop
mov
dec
nop
mov
shlb
lea
push
xchg
jmp
jmp
and
into
or
mov
cltd
decl
into
shll
jmp
shrl
loope
lods
ja
aad
jl
in
mov
mov
std
or
push
add
or
iret
push
xor
inc
jge,pt
stos
lods
test
cwtl
mull
mov
inc
popf
outsl
out
mov
cmpsb
ja
movsl
ret
xchg
push
fwait
mov
out
fldt
cmpb
outsb
lods
jnp
inc
xlat
jp
fdivl
sarl
sub
jo
xor
push
sbb
xor
aaa
cmpsl
nop
dec
fs
or
movl
cmp
fidivrs
lret
in
or
shll
mov
int3
mov
add
sbb
in
push
fdivl
mov
ds
fiaddl
xchg
adc
pop
popl
hlt
aas
fstl
js
xchg
push
mov
pop
jbe
adc
sbb
sbb
add
inc
nop
cmpsb
and
mov
in
loopne
push
xchg
mov
rorb
shl
out
sbb
adc
out
jns
stos
fs
mov
sub
subb
cmp
cmp
aad
push
jp
dec
loopne
jg
add
inc
mov
cmp
pop
push
jno
mov
es
adc
aam
mov
inc
or
add
mov
ret
subb
dec
add
icebp
fwait
jl
xor
mov
cmp
inc
int
mov
push
jl
sub
and
mov
cmc
fisubrl
xorb
mov
add
pushf
push
lock
inc
sbb
xor
lret
cs
push
iret
push
cmp
jns
fisttpll
dec
mov
nop
xor
in
or
scas
into
nop
sub
cmp
int
lock
pop
shr
xlat
pop
add
hlt
adc
dec
mov
xchg
cli
fstps
xchg
and
andl
and
out
pop
or
imul
imulb
jbe
jecxz
loopne
mov
outsb
es
int
leave
negb
fadd
mov
push
bound
popf
lods
dec
xchg
jno
test
push
dec
lods
or
mov
icebp
or
addb
add
push
fptan
sahf
popf
inc
and
decb
jp
aaa
call
ja
mov
les
add
pop
dec
dec
mov
adc
mov
popa
std
test
pop
int
lods
mov
imul
ss
je
sbb
mov
push
mov
movb
push
bound
inc
push
int
out
in
or
lds
lods
in
stos
or
cmp
fmul
sub
push
out
jmp
dec
test
xchg
hlt
dec
jl
sbb
sbb
or
adc
ret
aaa
lahf
dec
ljmp
leave
inc
mov
mov
popa
aaa
sub
adc
adc
popf
cmp
int
bound
lods
mov
mov
push
or
inc
push
or
dec
aas
mov
or
icebp
adc
inc
out
stc
cltd
gs
dec
push
push
jb
cmc
jmp
sti
cld
xor
sbb
or
xor
dec
jne
push
test
mov
xchg
jmp
data16
dec
scas
xchg
je
mov
mov
pop
jae
jg
push
shlb
leave
cmc
adc
xchg
sbb
aad
mov
fstl
std
jge
lret
dec
sub
mov
loopne
filds
inc
pop
xchg
xor
les
fldenv
pop
jecxz
jae
jp
popf
mov
xor
dec
lret
insb
je
cmp
and
jbe
in
adc
mov
push
scas
repz
and
data16
xchg
sub
lock
pusha
fldcw
cmpsl
shll
lahf
arpl
dec
xchg
movsl
into
fdiv
popf
xchg
shrl
jo
push
mov
sbb
xor
lock
imul
cmpsb
add
inc
mov
push
mov
and
arpl
fadds
pusha
loopne
sahf
cmp
cmpsl
clc
pop
adc
jne
dec
hlt
cs
push
pusha
add
or
mov
imul
mov
jp
mov
fcomps
stc
add
mov
pop
adc
xchg
scas
cltd
pop
cwtl
push
mov
adc
scas
call
pop
push
movsb
in
dec
push
jg
adc
das
test
popa
add
xor
dec
shll
dec
rorl
enter
cmc
frstor
fwait
aas
sub
cmp
mov
pop
mov
xchg
dec
adc
punpcklwd
sahf
inc
and
data16
popf
sti
sahf
lock
jp
addr16
push
sbb
testl
divb
popf
or
dec
lods
pop
sbb
xchg
mov
loop
mov
int3
and
loope
pop
rol
xchg
ljmp
pop
mov
and
mov
dec
stc
inc
push
push
cmp
nop
repz
jb
mov
outsb
mov
out
jmp
ss
rcll
cwtl
movsb
sbb
xor
jl,pt
ret
in
dec
sub
pop
jle
xchg
std
daa
cmp
stc
xor
outsb
repnz
inc
pop
stos
aam
dec
jnp
sahf
mov
jge
pop
push
call
sbb
inc
ffreep
pop
dec
call
popw
les
jge
mov
mov
or
sbb
add
and
mov
sbbb
fidivs
or
push
cmovno
leave
negl
and
stc
test
ja
sbb
adc
inc
notl
iret
bound
call
shll
xor
sub
xor
ss
xchg
jmp
cwtl
and
lea
cs
and
xor
ret
inc
insb
je
outsl
pop
and
mov
jle
adc
jb
jecxz
ret
adc
fimuls
mov
jle
pop
xchg
movd
fmull
mov
scas
movsb
imul
je
dec
fdivr
mov
dec
sbb
cli
sbb
add
js
data16
lahf
mov
call
scas
scas
idivb
xor
stc
xchg
out
in
jle
repz
jno
push
ja
stc
add
mov
and
jecxz
sub
jp
daa
ret
dec
jmp
ja
mov
dec
in
mov
sub
fdivl
push
imul
inc
mov
mov
sbb
push
sub
dec
lds
jns
sub
in
mov
push
pop
lret
add
pop
xchg
xchg
leave
xor
ss
adc
jno
fucomip
sbb
repz
pop
jmp
scas
dec
out
fstps
loope
je
int
mov
loop
test
es
pop
mov
call
add
imul
cmp
push
adc
loopne
mov
push
mov
push
add
lcall
scas
iret
scas
add
mov
aam
in
arpl
int3
sti
dec
or
ret
dec
mov
xchg
outsb
cmp
loop
dec
xor
je
push
jns
test
add
negb
cmp
xor
cmpsl
jp
loopne
cmp
pop
sub
and
adc
push
pop
loop
pop
jge
inc
test
int3
push
out
jo
jne
jne
in
mov
arpl
test
aad
and
lea
mov
dec
movsl
xor
inc
dec
mov
lcall
outsb
xchg
pusha
dec
subb
nop
inc
xchg
or
out
arpl
icebp
and
push
pusha
cmp
icebp
jb
ljmp
dec
xor
add
dec
hlt
repz
and
adc
lods
pop
and
in
lea
adc
inc
add
inc
ljmp
add
mov
sahf
hlt
pop
fisttpl
or
enter
sti
jmp
sub
or
inc
inc
jmp
lret
movsb
daa
push
push
lods
xchg
ljmp
push
fimull
jae
sbb
filds
mov
adc
lds
dec
jb
xchg
add
inc
push
shlb
in
movsl
sbb
mov
push
adc
mov
inc
lret
xor
and
mov
jno
repnz
mov
and
xchg
dec
pop
mov
mov
pushf
or
push
jbe
bound
and
jmp
test
cli
jp
inc
lea
cmp
insb
inc
shrb
and
mov
mov
jns
add
repz
lock
or
sti
mov
xor
xor
mov
cld
xchg
sbb
fsts
xchg
or
cwtl
incl
pusha
insl
xor
mov
aas
mov
out
in
loopne
rorl
cld
or
pusha
cmp
add
adc
shlb
cs
cmc
stos
pop
aaa
lods
dec
leave
int
push
xor
sbb
and
and
adc
sbb
mov
out
xor
add
es
imul
hlt
xchg
dec
rcrl
pop
or
mov
sbb
aaa
mov
dec
cltd
pop
cmc
and
jg
out
les
les
mov
xchg
dec
xchg
test
pop
fisubl
repz
lcall
push
mov
adc
lea
jbe
mov
push
lds
mov
stc
cmpsl
and
mov
lret
xchg
aaa
in
daa
aad
lahf
in
pop
aaa
adc
inc
insb
fstpl
jg
icebp
fiadds
in
test
xchg
or
add
fistpl
cmpsb
mov
and
sbb
lds
jne
fcomp
pop
add
in
jp
mov
ds
inc
daa
insb
inc
dec
test
adc
not
loop
std
adc
cmp
icebp
fmul
outsb
or
loopne
loop
jno
xchg
shrb
xchg
int
mul
enter
sub
jno
or
je
fcmove
outsl
aad
out
mov
add
pop
loop
xor
or
js
adc
xchg
scas
push
xchg
xchg
pop
lods
pop
push
imul
stos
mov
xlat
inc
leave
cwtl
int3
mov
dec
pop
mov
rorb
push
fstl
enter
rcrb
pop
test
mov
pop
jns
stos
popa
test
xchg
cmp
mov
sarl
inc
xchg
bound
subl
movl
push
push
out
sbb
add
mov
repnz
mov
pop
test
dec
sub
cmp
push
push
xor
stos
add
popa
shrl
bound
mov
dec
cmc
lcall
gs
xchg
inc
ja
mov
sub
push
cmpsl
ficoml
sub
aad
xlat
cmpsl
and
xchg
dec
and
push
out
es
adc
xor
hlt
cmpsb
adc
je
lahf
add
out
jo
cmp
lldt
stc
cli
lock
pop
leave
scas
cmp
mov
aam
sbb
push
std
push
xchg
xchg
and
call
inc
sub
dec
ret
or
sbb
orl
into
mov
pushf
into
push
xor
nop
adc
add
js
fadds
clc
mov
push
into
lock
idivl
les
jl
dec
fists
sti
daa
movd
cmp
cmpl
and
sbb
loopne
sub
jns
mov
stc
cmpl
data16
sti
cmpsb
out
stos
movsl
js
dec
sahf
or
or
enter
lcall
xchg
lret
fildll
adcb
xchg
ds
adc
mov
stos
pop
nop
push
loope
mov
ret
xchg
adc
jmp
push
scas
test
dec
dec
jnp
ljmp
pop
jae
lods
in
xchg
xchg
cmpsb
movsb
test
xor
and
jns
repnz
stos
stos
jmp
dec
or
stos
jl
leave
fistl
aad
mov
cmp
mov
jmp
add
lds
push
cmp
jp
mov
movsl
pop
push
mov
out
mov
sub
lds
stos
xchg
sbb
inc
xor
out
mov
and
cmpsl
into
cmp
dec
shlb
mov
cmp
in
push
sub
add
sbb
sub
jg
add
dec
xor
cli
gs
xor
jle
dec
mov
nop
pop
push
lret
in
mov
div
sub
in
lea
lret
cmp
dec
loop
cmp
fmul
and
lahf
lcall
push
lret
cmp
repnz
callw
shl
cmpsl
scas
dec
and
push
xor
sbb
ja
mov
push
rclb
scas
cs
xor
or
push
jle
into
jle
scas
pop
fsts
out
jns
bnd
sahf
popa
test
sbb
insb
or
lds
xchg
jo
jbe
xchg
push
repz
test
out
les
cmc
xor
and
movsb
daa
aad
xchg
dec
js
popa
dec
call
mov
scas
into
sub
scas
jge
push
pop
dec
les
outsb
adc
adc
ret
mov
push
incl
cmp
shlb
add
inc
and
mov
inc
push
inc
scas
pop
sbb
fwait
je
xchg
add
pop
jg
push
dec
mov
pop
xchg
out
xchg
adc
or
pop
cmp
jp
add
daa
add
clc
pop
scas
cmp
mov
sbb
mov
fildl
xchg
pop
mov
jbe
iret
xor
lds
pop
jae
jl
les
push
repnz
or
jae
add
ds
aas
pushf
sub
mov
mov
dec
fisttpll
pop
addr16
int
loopne
add
sub
scas
enter
sub
out
aaa
and
ss
inc
loope
adc
outsb
cmp
push
subl
shrl
js
enter
int
ret
movsb
xor
nop
xchg
add
dec
shrl
or
mov
jp
jle
je
imul
lods
jmp
sbb
fs
out
cld
push
mov
jbe
xchg
mov
xlat
or
in
mov
lds
les
xchg
test
cmp
cmp
fldenv
lret
mov
fisttps
ss
sbb
mov
sahf
js
mov
adc
test
adcl
add
push
fcmovu
inc
xor
mov
iret
mov
int3
int3
xchg
dec
popf
pop
push
jmp
push
fnstenv
sbb
cmp
pushf
test
add
test
imull
sti
xchg
mov
clc
or
shll
add
push
xchg
pop
dec
dec
ret
pop
mov
add
push
into
fcoms
adc
push
add
cmp
in
pop
inc
xchg
xchg
ret
mov
int3
mov
movsl
frstor
imul
push
and
fsub
bound
jb
into
stos
loope
jl
mov
xchg
leave
fisubs
sbb
xchg
and
fimuls
repz
jle
xchg
enter
jnp
cmc
push
mov
ljmp
xchg
stos
mov
pushf
push
adc
daa
add
shrl
fdivrs
or
cmpsl
jmp
scas
repnz
fidivrs
push
jp
xchg
jge
movsb
dec
gs
test
pop
add
cld
ror
lods
mov
in
nop
pushl
repnz
add
popf
jnp
sbb
fwait
xlat
roll
loop
repz
mov
aas
and
scas
cmp
add
clc
mov
mov
bound
cmpsb
stos
cmp
mov
daa
inc
arpl
mov
push
std
cmp
sub
push
andb
pop
shl
test
sbb
test
out
sarl
addr16
test
pushf
mov
inc
pushf
out
and
or
pusha
and
xor
jge
adc
stos
scas
mov
lahf
and
stos
and
adc
or
adc
dec
and
and
dec
inc
cmp
add
cmc
lock
imull
add
sahf
and
loope
cs
mov
mov
dec
test
inc
jbe
dec
adc
jle
or
idivb
dec
xchg
fwait
das
mov
jae,pt
pushl
jbe
shll
jbe
mov
stos
pop
cwtl
repz
cli
imul
sbb
xchg
cmpsl
aad
outsb
push
cli
test
lret
add
arpl
xor
jmp
out
cmpl
outsb
clc
push
lret
les
addr16
outsb
lods
cmp
mov
push
icebp
cmp
inc
add
and
scas
mov
adcl
xchg
shrl
pop
imul
mov
inc
add
pushf
jb
iret
shrb
mov
xchg
or
es
jnp
out
ror
lock
mov
shll
and
outsl
decb
cmp
test
cmpsl
arpl
nop
jl
sete
ds
jg
push
int
fnstsw
sub
push
jne
fcomps
pop
xchg
lods
xchg
add
pinsrw
popa
fsubs
into
ja
sub
gs
or
aad
xchg
stos
xor
cmp
mov
sbb
int
xchg
adc
cli
xorb
rorb
pop
fiadds
movsb
jge
mov
movsl
sahf
in
jl
inc
pop
nop
cwtl
iret
xor
push
pop
inc
push
xchg
and
imul
in
sub
ss
scas
push
popf
scas
fdivl
aaa
test
adc
mov
push
pop
leave
adc
clc
dec
mov
fisubrl
inc
pop
sbb
js
sbb
xchg
xor
cmp
or
sbb
testb
pop
push
mov
mov
enter
shl
fwait
dec
lds
sub
fidivrl
imull
outsl
fldl
xor
add
loopne
lahf
jo
mov
in
dec
repnz
fwait
dec
mov
xor
mov
mov
push
ljmp
adc
xor
cmp
idivl
out
push
and
pusha
inc
pop
adc
in
jp
dec
shrl
es
cmp
inc
out
and
inc
cmpsb
orl
daa
mov
inc
fwait
and
in
and
stos
jecxz
mov
add
dec
gs
mov
mov
ret
movsl
or
fisubs
add
push
shlb
sbb
sbb
inc
fistpl
and
sbb
push
adc
sbb
ret
mov
jp
jmp
outsb
stc
das
sub
enter
mov
mov
sub
pop
jnp
xor
sbbl
hlt
cs
fwait
xchg
jle
stos
pxor
daa
scas
enter
clc
int3
lret
ficomps
in
fidivrl
mov
test
dec
popl
data16
sub
js
lret
cld
dec
in
mov
lret
cmpsb
mov
std
mov
pop
cltd
minps
test
shll
aaa
cwtl
and
cmpsl
xor
testl
cwtl
xor
lock
sahf
mov
mov
aad
sbb
imulb
cld
cmp
cwtl
pop
push
cmp
movsl
sbbb
and
das
movsb
cltd
sahf
jp
js
inc
mov
daa
inc
pop
mov
xor
add
mov
mov
xor
push
arpl
xchg
and
pop
and
jns
into
out
mov
inc
xchg
xlat
popa
lods
mov
sbb
sub
lods
sub
mov
sbb
mov
scas
pop
xor
xchg
xor
push
jg
xchg
cmc
push
mov
jmp
imul
aaa
cli
iret
ret
addb
and
jg
daa
loop
jno
dec
pop
scas
sti
push
push
and
lea
fs
and
xor
int
stos
sbb
sub
mov
insb
and
and
out
cs
aam
mov
addr16
inc
lea
dec
jb
bound
xchg
adc
fwait
in
dec
test
rcrb
sbb
jnp
mov
mov
pop
push
add
push
or
daa
push
add
lea
mov
sbb
push
inc
pusha
mov
mov
mov
mov
mov
dec
xchg
daa
test
sbbl
cmpsl
test
es
or
xchg
ds
loopne
mov
aas
fisttps
adc
dec
cmp
mov
mov
add
and
adc
xor
push
cmovno
inc
mov
pop
xchg
mov
loope
insl
insl
cmpsl
and
test
lods
shl
lds
mov
push
rol
add
xor
leave
and
mov
loopne
fwait
iret
pop
or
fildll
enter
xchg
not
pusha
sahf
ja
lcall
leave
push
in
jae
mov
gs
cmpsl
sub
cmp
lret
sbb
pop
faddl
scas
enter
dec
jmp
mov
outsb
dec
hlt
in
subl
mov
loop
pop
and
sub
sbb
fists
cmp
or
popf
sub
add
faddl
or
xchg
dec
sti
jno
xchg
xor
push
sub
mov
stc
dec
sbb
sub
cmp
nop
add
insb
sub
jns
push
sahf
stos
cwtl
scas
dec
mov
in
or
mov
jecxz
movsb
sub
or
dec
cmp
inc
pop
adc
cwtl
aas
mov
stos
sub
int
loopne
mov
jle
cmp
in
mov
je
rcl
xor
pop
jmp
cmp
repnz
scas
sub
adc
jmp
xor
push
and
xor
sarb
cmc
mov
pop
in
cltd
inc
xchg
mov
mov
ja
jno
jl
sarl
xorb
imul
divb
adc
fsubrl
cld
adc
mov
rcll
es
mov
sbb
sbb
aaa
mov
fwait
jo
pop
lods
push
jne
movsb
add
mov
or
sub
cmc
test
xchg
addb
jle
jo
idivl
dec
or
xchg
mov
adc
movsb
cmp
adc
adc
pop
mov
sbb
sub
js
clc
std
cmpb
sarl
ficompl
jmp
inc
cmc
ss
mov
imul
loop
insl
test
jp
out
xchg
mov
cwtl
es
xchg
subb
or
inc
int3
aaa
cmp
adc
ret
fs
add
xorl
push
and
clc
xchg
addr16
cmc
btr
adc
push
cmp
lds
dec
test
sahf
xchg
mov
out
sbb
sbb
mov
inc
sub
xchg
and
out
shl
movsbl
xchg
rcll
les
lods
stos
ret
insb
std
jmp
jb
sub
add
or
mov
inc
lock
call
mov
mov
lret
add
mov
push
jb
cltd
fimuls
scas
cmp
test
jb
jg
mov
pop
or
stc
insb
sbb
mov
mov
sarl
popf
outsb
pop
enter
cmp
roll
dec
outsb
jmp
mov
shl
pop
out
adc
pop
test
aad
mov
or
inc
xchg
jmp
ss
dec
inc
mov
mov
push
testl
sbb
jne
add
inc
rorl
test
jb
aas
inc
jecxz
xchg
sbb
mov
cmp
jge
inc
mov
pop
pop
inc
fstpt
jae
push
sbb
jne
and
je
sti
mov
adcl
xchg
test
mov
jl
jnp
ret
mov
sbb
sbb
ret
push
rcll
stos
fsubrs
test
cld
xlat
ds
faddp
int3
adc
popa
xchg
sbbb
sbbb
scas
popa
dec
aas
shlw
add
out
mov
and
adc
jb
fstpl
or
push
scas
and
das
mov
lret
push
xchg
and
jae
push
mov
pop
xchg
mov
cmp
lret
dec
inc
cmp
xlat
xchg
cs
adc
fcmovnbe
mov
fdivp
mov
fdivs
dec
stos
push
imulb
push
cs
cld
xor
out
cli
mov
cmpsl
adc
mov
and
clc
pop
das
sub
or
fs
mov
inc
test
jle
and
sub
pop
scas
or
and
inc
xchg
cmpsb
mov
dec
sbb
mov
ficomps
push
sub
jns
lcall
arpl
test
add
add
inc
ret
out
inc
js
pop
test
test
xchg
dec
aad
push
cmp
rcll
sub
push
fsts
or
mov
cltd
mov
xchg
sub
jecxz
je
xlat
sub
pop
mov
in
ret
dec
imul
mov
fmull
je
iret
inc
js
push
fs
lret
jl
cmp
sbb
adc
mov
into
inc
mov
push
xor
out
fdivrl
out
cld
jecxz
mov
sub
mov
or
jne
jg
push
aad
and
push
mov
and
rcll
loopne
loope
mov
mov
mov
push
cwtl
sbb
or
adcb
push
adc
aaa
ja
mov
dec
mov
ja
ljmp
sub
rorl
pop
scas
jae
xchg
adc
mov
inc
movsb
out
mov
inc
and
int3
inc
stc
gs
enter
iret
repz
fnstsw
inc
lods
xchg
cmp
dec
stos
ret
jo
push
sub
lret
fcomps
cmp
imul
aam
icebp
sbb
aad
popa
pop
movsl
shr
imul
movsb
fs
stos
ret
pop
mov
xlat
fsqrt
ss
loopne
sahf
insl
sbb
je
sbb
cld
xorl
inc
movsb
in
mov
cmpb
fdivp
or
dec
ss
push
add
pop
fcompl
in
add
stc
test
inc
xchg
insl
pop
add
rcrl
outsb
js
sbbb
sbb
mov
sbb
into
jmp
sti
jmp
lcall
push
push
hlt
ja
add
push
inc
mov
enter
shrb
rolb
movsl
jne
xchg
xchg
mov
cltd
jmp
out
xchg
mov
jo
xorb
and
adcl
xor
add
mov
add
scas
divl
cmp
fidivl
inc
and
or
inc
das
adc
mov
pop
ret
adc
bound
lahf
pop
andl
xor
cmp
mov
out
push
mov
out
insl
xor
push
add
or
inc
adc
dec
mov
mull
inc
xor
loop
push
adc
xor
test
push
mov
lahf
ret
mov
stos
adc
push
push
arpl
inc
jae
xor
bound
xor
pop
push
daa
pop
mov
or
and
or
pushf
jle
add
ljmp
icebp
dec
push
mov
inc
xor
movsl
sarb
in
or
adc
jle
cmp
dec
adc
cli
sub
adc
je
lcall
in
xchg
add
xor
mov
mov
add
push
add
ret
push
xchg
mov
xor
imul
sub
adc
xchg
mov
lods
repz
jb
fisttpll
out
rolb
mov
sbb
fistpll
pop
mov
pushf
pusha
dec
jg
push
add
in
mov
pop
cmp
in
loop
fistps
in
sar
pop
shll
lods
dec
dec
out
frstor
push
add
fwait
and
mov
and
icebp
gs
ljmp
notb
ret
out
jne
inc
pop
xchg
jo
inc
jp
stos
rclb
adc
mov
data16
mov
fbstp
iret
xor
inc
or
sub
mov
hlt
and
insl
ljmp
in
lods
cmp
mov
out
inc
inc
mov
fsubp
orl
cmp
xchg
pop
cmp
lahf
add
inc
inc
lcall
mov
xor
scas
mov
inc
cmp
out
popa
sarb
add
inc
fcmove
or
cmp
mov
add
aas
pop
fwait
and
xchg
loop
pusha
adc
insl
mov
in
mov
dec
jmp
pop
xchg
mov
sbb
frstor
jg
cmp
lahf
mov
or
push
xchg
fdivl
fucomi
fsts
dec
mov
iret
inc
xor
aam
popa
stos
jo
sbb
lods
adc
sti
subl
repz
test
lret
dec
xlat
mov
aad
ficomps
lahf
inc
inc
inc
dec
pop
insl
dec
outsb
jmp
cltd
mov
and
push
push
outsb
sub
cld
and
xchg
loopne
xchg
ficomps
gs
lds
xchg
xor
or
stos
pop
insb
cli
jnp
je
push
icebp
loope
int3
pop
add
sub
jecxz
xor
idivb
jg
and
insl
cmp
and
xor
out
fbld
jge
mov
test
insl
jb
dec
fsincos
mov
pop
int3
clc
lea
leave
add
call
adc
mov
int3
int3
jo
addb
ss
or
add
ja
sarb
std
inc
sbb
push
ret
stos
push
jno
mov
add
cmp
adc
add
dec
repnz
cmp
push
leave
mov
mov
outsb
xor
in
arpl
in
fsubrl
int
arpl
jge
pop
mov
mov
mov
inc
filds
xor
cwtl
or
ss
fs
gs
aas
unpcklps
sarb
js
jo
cli
push
xchg
gs
add
pop
push
cmp
movsb
cmp
and
adc
ret
ret
push
je
out
sarb
xchg
mov
lret
mov
mov
and
cld
cmpsb
loop
mov
mov
ficomps
js
loopne
pop
pop
push
popf
repnz
dec
mov
fidivs
aas
aad
sahf
shrb
test
xor
outsl
out
andb
jbe
scas
xor
jle
and
inc
jle
enter
xchg
fistps
mov
imul
sahf
inc
ret
movsl
pop
daa
stc
adc
dec
repz
pop
test
xor
bnd
out
notl
loope
sbb
cmc
gs
cli
or
cs
sti
pop
test
stc
push
aas
adc
add
mov
mov
xor
mov
jne
jmp
xchg
jmp
dec
cmp
jecxz
jl
imul
sahf
cmp
sub
mov
lea
js
inc
adc
sub
lods
sub
popa
pop
sbb
dec
jp
and
cs
lods
sub
and
xor
mov
mov
test
imul
add
sti
int3
push
gs
out
call
lret
je
jecxz
mov
sub
push
mov
into
mov
clc
mov
xchg
fsubr
mov
loopne
lret
pop
dec
push
cmpsb
div
mov
or
jns
mov
ret
fcoml
xlat
pop
push
mov
loopne
fsubrl
xchg
mov
xor
out
sub
not
fisubrl
inc
std
add
pop
xor
in
sahf
pop
decb
xchg
int3
add
mov
pop
xchg
push
cmpsl
add
mov
ret
dec
pop
pop
mov
aam
nop
movsb
jp
negb
dec
into
ljmp
and
insl
jne
call
aam
sbb
mov
dec
adc
in
xlat
jg
and
iret
lea
aam
and
adc
mov
xor
sub
mov
pusha
pop
in
imul
inc
loop
cmp
std
xchg
aam
mov
adc
push
in
add
or
mov
stos
pop
xor
mov
jp
cmp
ja
test
loop
sub
sub
mov
sub
pop
icebp
jae
rcl
add
inc
sbb
sbb
mov
xor
adc
mov
jne
stos
or
xchg
jb
push
xlat
fdivrs
mov
repz
in
cwtl
stc
cmp
rorb
loope
push
fbld
mov
mov
cmp
repz
inc
xchg
ret
xchg
xor
pop
mov
inc
gs
jl
jne
mov
add
push
daa
xchg
popf
ret
dec
pop
loope
jbe
mov
inc
jns
loope
mov
in
outsl
sbb
or
or
mov
dec
sub
orl
xchg
lds
adc
int
cmpsl
shrd
sub
xor
fsubr
in
cs
loopne
push
je
push
es
xchg
out
xchg
arpl
imul
mov
jge
je
data16
and
inc
sahf
outsb
push
cmp
jge
fwait
mov
loope
jnp
lods
jg
out
fwait
addb
mov
movsb
ljmp
xchg
mov
pop
scas
cmc
rcr
nop
scas
int3
xor
inc
jl
lods
and
addb
push
inc
pop
cmp
push
arpl
aaa
jle
xor
shr
pushf
fcoml
mov
pop
outsb
adc
or
dec
mov
pop
pop
xchg
lods
pop
fadds
push
arpl
xorb
in
sbb
adc
xchg
test
inc
sbb
jbe
xlat
ficoms
inc
repz
filds
movsb
ljmp
ds
roll
sbb
pop
das
dec
dec
pop
addr16
mov
cmp
push
xchg
jne
mov
daa
jg
and
fs
repz
adc
stc
fs
dec
dec
negb
es
loope
test
les
jne
xchg
ret
sbb
fwait
ja
lcall
ja
outsb
ljmpw
popf
xchg
iret
dec
mov
mov
outsl
xor
pusha
popa
mov
dec
inc
ret
sbb
sub
test
scas
in
loopne
shll
iret
repz
add
mov
aas
int3
clc
sahf
lea
and
dec
rclb
imul
inc
adcb
out
add
arpl
popl
ss
adc
mov
imul
mov
imul
or
aad
in
outsl
out
or
jb,pn
inc
arpl
mov
mov
lea
inc
xor
push
mov
fmuls
and
cmpsb
adc
sub
repnz
shll
adc
mov
in
mov
mov
mov
out
cmp
addl
cmc
int3
or
mov
fnstenv
push
adc
and
mov
test
out
pusha
lods
cs
mov
adc
cltd
sub
push
mov
dec
cltd
gs
pusha
fdivrl
in
out
and
xor
shrb
popa
mov
leave
pop
aam
xor
sub
icebp
inc
lds
pop
cmpsb
icebp
aaa
inc
repnz
push
in
inc
mov
adc
adc
outsl
mov
mov
sahf
rcll
push
sti
xor
aad
lret
test
cmpsl
add
and
cmpsl
pop
push
jbe
insl
cmp
pop
sub
push
leave
icebp
int
les
fisttpl
loop
and
dec
jne
dec
sbb
jmp
ret
inc
adc
cmp
mov
fwait
movsl
dec
push
arpl
dec
push
leave
sbb
in
shll
popf
add
mov
outsb
dec
mov
push
out
adc
cmp
dec
mov
mov
leave
test
sub
sahf
xchg
aam
inc
pop
dec
aas
loop
pop
bound
add
mov
and
scas
mov
in
push
add
cmpsb
movsl
or
adcb
je
lahf
mov
push
push
cltd
push
mov
pushf
movb
xor
xlat
inc
cmp
incw
cmp
mov
aaa
jbe
pop
cmp
iret
mov
jno
pop
std
adc
lea
mov
mov
xor
or
out
sbb
adc
dec
mov
push
aaa
cs
xor
jne
sub
cmp
lds
pop
cwtl
xor
cmp
jnp
lret
lea
data16
gs
cmp
sbb
pusha
dec
mov
jae
inc
mov
sbb
repnz
aam
xlat
test
xor
mov
sbb
lahf
test
out
add
icebp
or
cmp
loop
pusha
sub
es
xor
shl
ss
jae
add
cwtl
inc
popf
in
faddl
negb
add
mov
std
out
ret
in
stos
stc
fs
mov
mov
sbb
lds
fwait
out
repnz
scas
add
add
in
out
pop
cwtl
out
sub
mov
mov
outsl
in
clc
sar
call
fs
dec
jl
cmp
fdivrs
ds
mov
scas
push
cmp
xchg
and
lret
mov
push
test
les
test
xor
outsl
pop
and
cwtl
filds
cmp
jo
shl
out
testl
jb
adc
rolb
popa
mov
cmp
stos
shrl
mov
stos
cmp
inc
sahf
scas
mov
adc
mov
lods
call
pop
fdivr
jae
fimuls
call
subl
dec
xchg
sub
mov
and
sub
jl
cmc
lods
mov
sub
and
or
sub
mov
jbe
fwait
nop
lock
xchg
xchg
aaa
sbb
cmp
jmp
out
mov
shrl
mov
jo
jg
add
jmp
pop
adc
adc
dec
push
addl
and
fcmove
xchg
std
paddw
pop
jnp
inc
cld
or
stos
ret
dec
insl
jb
icebp
xchg
stos
icebp
in
lods
add
ja
mov
in
lods
shll
loopne
mov
sbb
scas
divps
mov
push
rcrl
out
outsb
add
mov
and
icebp
loop
cmp
aam
inc
repz
or
mov
dec
lods
sub
shrl
pusha
add
push
testl
dec
mov
rol
cs
sub
dec
in
int3
add
push
xchg
nop
imulb
mov
mul
movsb
push
mov
adc
cmp
xor
sub
rcrb
or
mov
sbb
inc
xchg
cmc
sub
inc
sbb
sub
fsubrs
sbb
pop
jg
jmp
insl
outsl
icebp
add
or
sahf
pop
aaa
xchg
or
cmp
in
sub
mov
add
orl
sub
ljmp
mov
dec
das
js
or
sub
sub
or
xchg
jno
jbe
push
lahf
ja
loop
adc
xchg
push
or
or
dec
xorb
cld
stos
adc
jae
cld
cmp
jp
shrl
xchg
mov
mov
cmp
inc
test
inc
aam
iret
mov
xor
lods
lods
mov
push
ja
fwait
adc
rorb
in
in
add
clc
add
xchg
sbb
inc
mov
jns
push
add
test
ss
add
jl
mov
xor
add
scas
mov
fidivl
lods
inc
jns
hlt
jecxz
fs
aas
les
js,pt
ficompl
fst
hlt
jecxz
fwait
cmc
je
and
dec
mov
push
xor
mov
rolb
dec
insl
xor
or
mov
dec
xchg
std
or
push
inc
icebp
mov
push
mov
inc
xorb
adc
push
jae
xor
jmp
mov
jae
shl
lret
cltd
mov
sub
cmp
xchg
sbb
cmp
bound
sub
pop
dec
lea
insl
or
or
xchg
into
lds
into
jle
pop
xchg
jb
sbb
jle
test
movsl
lret
xor
loope
xchg
sbb
pop
nop
and
cmp
addr16
or
out
fwait
and
cmc
in
inc
mov
fldenv
sbb
imul
mov
cltd
mov
push
call
out
outsl
stos
andb
cltd
scas
dec
test
dec
divb
popf
jo
js
xorl
scas
movsb
push
popf
loopne
xchg
pop
adc
jl
lea
jno
mov
imul
testb
ds
jl
push
inc
push
cmp
shlb
dec
inc
xchg
mov
or
or
pop
adc
inc
dec
aas
push
test
in
in
sbbb
jge
in
sbb
jmp
sub
ja
cmpsb
inc
xorb
xchg
popf
sub
xchg
xchg
mov
fcomps
or
dec
and
std
je
cmpsb
xor
outsl
push
movsb
fwait
imul
imul
out
xchg
pop
movaps
pop
sbb
out
jle
pop
fcomip
lcall
imul
mov
popa
pop
mov
mov
cmp
insb
lret
jae
in
cmp
into
push
jno
sub
push
call
in
mov
inc
lcall
cmp
jecxz
push
pusha
xchg
ds
loopne
shlb
pop
jo
sbb
sbb
xor
sbb
std
xor
lock
jne
mov
pushf
xchg
sbb
ret
test
xchg
jp
test
and
nop
mov
fsubp
pushf
std
xchg
jnp
mov
fcoml
mov
repz
je
mov
xchg
xchg
push
inc
aaa
bound
lret
in
sbb
push
push
popa
in
push
lods
mov
dec
mov
xchg
je
jle
icebp
add
adc
dec
xorl
xchg
ret
test
adc
dec
sbb
cmp
adc
sbb
xchg
es
add
out
push
pop
add
jae
pop
cmc
push
pop
push
xchg
add
lock
jecxz
xchg
testl
push
ret
test
gs
and
cli
xchg
clc
jl
bound
xchg
sbbl
cli
loope
dec
or
icebp
sub
lahf
cmp
out
dec
push
addb
cmpsl
xor
sti
adc
mov
adc
xchg
mov
cmp
sub
inc
lea
out
fbld
arpl
rcrb
out
add
ss
mulb
dec
cmpsb
inc
pusha
jmp
inc
mov
sbb
movsb
pushf
lea
rcll
xchg
pcmpeqw
mov
mov
movsl
test
jbe
inc
or
stc
dec
jb
mov
sbb
add
mov
icebp
inc
pusha
or
add
ret
push
xchg
lock
pop
imul
mov
mov
mov
xchg
pop
xor
into
sub
sub
pop
test
or
pop
mov
mov
ja
add
andb
rorb
adc
mov
mov
lret
mov
scas
in
jbe
and
test
sbb
xlat
mov
into
loopne
lahf
das
mov
negl
adc
cmpsb
sub
mov
and
cmp
jle
out
sub
les
push
jo
and
inc
nop
idiv
mov
lret
out
xchg
cld
xchg
add
mov
bound
pop
xchg
fidivrl
push
jno
imul
jle
add
insl
aas
test
inc
testl
mov
xor
jae
adc
test
pop
out
mov
fwait
pushf
or
lahf
xchg
sahf
mov
xchg
ljmp
call
xor
mov
xchg
xor
imul
sub
adc
sbb
mov
mov
test
cmc
movsb
add
movl
pop
cmpl
or
in
loop
xchg
in
sub
popa
jmp
bound
mov
mulps
fisttpll
adc
movsb
and
dec
inc
dec
fadd
sub
jmp
fadds
ret
xchg
mov
scas
adc
data16
imul
roll
fiaddl
test
adc
ja
sub
sarb
or
std
outsb
ror
iret
adc
in
inc
in
in
repnz
push
mul
add
push
mov
aas
pop
in
mov
dec
loop
push
xorl
jmp
xor
cs
pop
add
das
sbb
es
ljmp
xor
sub
jne
pop
mov
test
stos
adc
sub
roll
mov
and
jns
or
out
push
stc
ja
movsl
stos
test
icebp
daa
aam
scas
sbb
call
loop
mov
jae
xchg
mov
fwait
lret
out
iret
add
dec
sbb
and
leave
lock
cmp
dec
adc
xchg
lret
sbb
dec
stc
cmp
sti
dec
push
in
rcll
call
dec
mov
subl
sarb
sub
cltd
in
mov
dec
pop
pop
xchg
popa
arpl
je
sbb
in
and
fs
std
repnz
ds
add
idivb
out
push
sub
mov
pop
sbb
jp
sub
cmpsl
js
enter
sbb
dec
add
pushf
mov
dec
mov
mov
or
push
mov
fwait
arpl
push
shll
inc
stc
int
jle
dec
adc
lret
hlt
pop
push
mov
jp
mov
cmp
push
jnp
subb
inc
cmp
inc
and
pop
ret
enter
cmp
pop
jp
movsl
push
into
outsl
dec
sub
jle
and
fmull
inc
adc
into
aam
in
repz
jno
insb
dec
fildl
xchg
push
pop
aas
out
mov
mov
cmp
lea
xor
pop
jl
sbb
inc
je
pop
adc
fdivrl
pop
cld
or
cmp
xchg
pop
or
jg
out
sub
dec
in
cli
rcll
xchg
jge
addr16
test
insb
xchg
mov
lods
inc
sub
shl
jnp
push
add
dec
xor
outsl
inc
pop
dec
mov
js
jo
sbb
cmp
std
xlat
mov
filds
out
mov
div
leave
stos
or
mov
mov
dec
pop
xchg
fs
adc
das
mov
push
jmp
fdiv
add
pusha
arpl
inc
es
cmp
ds
es
rolb
xchg
pop
cmp
mov
test
xor
popf
js
movsb
jne
fucom
fcomp
add
fidivrs
xchg
or
addr16
aad
xchg
jb
pop
adc
fs
mov
adc
aas
dec
mov
push
pop
pop
sub
xlat
pmaddwd
shr
lcall
xchg
mov
in
mov
loop
push
adc
scas
movsb
sbb
cltd
lea
jb
pusha
push
lea
std
push
testl
push
add
jmp
icebp
stc
filds
lock
and
in
push
gs
fisubrl
or
jae
dec
jnp
fcmove
adc
xorb
mov
pusha
mov
addl
add
imulb
das
inc
lret
mov
cld
push
mov
inc
pop
rol
scas
lsl
iret
pop
out
shld
inc
rolb
push
stos
xlat
shll
dec
in
inc
mov
sarb
aam
adc
daa
lar
repz
dec
sub
in
outsb
dec
sbb
imul
hlt
cli
cli
je
movsl
push
in
sbb
loopne
push
push
loop
sahf
outsl
sbb
mov
xor
push
sbb
push
mov
jae
dec
std
into
jmp
shrb
jmp
in
xchg
je
movsl
push
lods
jbe
imull
xlat
cmp
arpl
cmp
jg
call
jg
push
mov
sbb
inc
xlat
jnp
xlat
dec
xor
dec
or
inc
cmp
into
rcl
mov
jo
call
inc
cmp
jns
push
mov
jb
lods
out
pop
loope
pop
add
imul
loop
das
shrl
xor
stos
push
pop
lock
sti
hlt
aas
outsl
inc
adc
cld
push
or
or
mov
in
out
sub
push
mov
adc
mov
cmpb
pop
mov
mov
dec
and
scas
adc
int3
adcl
push
dec
adc
ret
push
mov
fsubl
or
fs
sub
jmp
jle
mull
dec
enter
in
pop
lods
sub
and
pop
xchg
pop
push
fdivrs
pop
mov
pop
pop
mov
test
sub
mov
cmp
pop
sub
jno
aas
mov
shl
lret
mov
jns
lahf
out
mov
bound
sbbl
scas
pop
and
arpl
add
iret
outsb
cmp
lahf
push
test
aam
push
fiadds
arpl
orb
pop
in
js
sbb
cmp
dec
or
out
push
mov
in
cmp
aaa
les
xchg
insl
dec
mov
push
scas
push
pop
andnps
je
lcall
addl
sbb
mov
push
add
stos
out
scas
leave
insl
cmp
cli
fsubrs
std
cmpl
push
mov
mov
call
aas
dec
ficompl
sub
ficoms
sbbb
push
pop
cmp
inc
out
pop
cwtl
inc
mov
sub
adc
sbb
stos
sbb
decb
in
and
addr16
fsubrl
push
inc
adcl
xchg
inc
mov
jg
aas
loop
in
jb
scas
mov
out
mov
xor
push
in
sub
mov
ljmp
push
inc
mov
xchg
mov
nop
movsl
add
int3
adc
xchg
scas
fisttps
sbb
js
dec
aam
pop
scas
mov
jo
int
pop
xchg
loope
pop
movsl
loop
scas
fsubs
mov
into
cmp
ljmp
jl
adc
sbb
mov
jg
pop
insb
loopne
dec
and
lock
lods
repnz
push
and
mov
jbe
pop
mov
lods
pop
mov
sbb
bnd
push
arpl
sahf
mov
fimuls
fisubrl
ja
xchg
sub
pop
shrl
dec
cmp
shl
add
push
lds
mov
fs
je
pop
push
mov
in
testb
push
cmp
sub
dec
push
iret
or
push
out
push
ret
fsubr
sub
dec
stc
out
hlt
arpl
xchg
ss
test
pop
cmp
mov
push
fsubs
sbb
push
mov
movsl
repnz
cs
jae
mov
push
loopne
inc
mov
pop
jg
aad
mov
jo
inc
mov
push
mov
add
ret
inc
adc
xchg
adc
clc
adc
adc
stos
adc
into
test
sbb
fs
imul
dec
cmc
bound
jns
in
xchg
cmp
and
and
rorl
incb
ret
sub
nop
ljmp
lock
jmp
inc
adcb
lcall
or
xor
in
popa
dec
sub
xchg
rcl
xor
into
or
ljmp
mov
pop
dec
push
mov
cmp
mov
daa
lcall
mov
adc
xchg
faddp
mov
test
pop
test
arpl
mov
xchg
pop
jmp
push
sub
mov
fnstcw
call
push
jne
decb
jl
movsb
dec
ret
jecxz
jne
mov
push
add
int
ss
xchg
into
ror
pop
lret
into
inc
push
xor
lahf
push
mov
sbb
aad
and
flds
mov
and
rolb
addr16
sbb
in
mov
mov
mov
xor
stos
sub
cmp
adcl
decl
inc
aad
pop
lods
es
xor
popf
and
xor
scas
dec
fisubrs
ss
lahf
mov
addr16
push
push
sub
repnz
push
jb
repz
pop
mov
es
mov
pop
sub
push
out
in
daa
pop
movsl
inc
xchg
jl
sahf
lcall
into
pushf
push
mov
lcall
and
roll
push
jb,pt
inc
cmpsl
mov
dec
stos
insb
cmp
sbb
leave
cmp
dec
cld
daa
bound
dec
dec
xchg
and
movsl
inc
je
leave
mov
subl
shll
sahf
fidivrs
stos
loopne
shr
xchg
inc
shrl
dec
mov
out
pop
aaa
popf
insl
iret
inc
shlb
sub
outsb
ficompl
stos
mov
rcrb
xchg
push
pop
cmp
lcall
xor
je
mov
add
add
xchg
jge
test
lret
xor
or
jbe
les
in
jl
jl
ret
mov
dec
add
push
or
lds
aaa
cli
mov
sub
loop
mov
movsl
pop
leave
fidivrl
inc
mov
ss
aaa
popf
jb
in
ss
adc
mov
mov
out
adc
xchg
xor
out
mov
dec
fstpt
stos
rcll
or
dec
std
cltd
and
xchg
pop
stos
sub
mov
movsl
cltd
movsl
sbb
cmpl
sbb
cmp
mov
mov
jo
mov
setp
push
pusha
pushf
push
xchg
lahf
sahf
or
aas
add
push
jnp
xchg
cmp
xor
cmp
dec
jp
sbb
adc
push
or
icebp
repz
stc
popa
pop
xor
pop
mov
iret
dec
sbb
dec
push
das
fnstcw
cmpsb
sbb
mov
push
push
jg
shl
jns
negl
lock
repnz
and
icebp
sub
jo
xchg
cli
cli
js
enter
aam
cmp
mov
mov
ja
jp
push
sbb
pop
insl
shll
and
mov
xchg
or
sub
or
loopne
lds
divb
and
call
jne
add
push
mov
dec
ret
xchg
lock
mov
jmp
xchg
fsubrl
enter
and
mov
not
inc
data16
stos
push
das
outsb
mov
sbb
pushf
or
imul
add
mov
xlat
lods
push
ds
stos
xor
xchg
sbb
mov
or
outsl
and
lret
sahf
jg
sti
repz
xchg
cmp
nop
add
and
mov
sbb
ret
loop
mov
jo
dec
or
js
sub
jno
and
mov
js
pusha
shl
lahf
add
and
jns
xor
xchg
insl
jle
ficoms
mov
inc
sub
sub
fcoms
cmpsb
cmpsl
das
mov
out
pusha
fadd
aaa
adc
imul
cwtl
out
add
int
into
or
sub
movsb
mov
push
fst
std
mov
jg
push
cmp
cmp
call
push
xor
mov
mov
cmp
add
sbb
sub
jno
inc
imul
mov
add
or
cmp
dec
add
push
xchg
bound
adc
fldt
inc
push
adc
loopne
insb
shlb
push
sub
add
cmpsb
lock
push
sbb
push
insl
jne
jmp
aas
scas
jb
pop
xchg
adc
cmpsb
xor
cltd
leave
inc
add
pop
push
mov
aaa
push
jge
clc
add
test
cwtl
mov
or
addl
test
test
es
sub
push
lret
enter
inc
adc
test
shr
jns
test
loop
les
dec
add
sbb
cmp
xor
cmpsl
push
test
xchg
in
testb
jne
mov
ds
ljmp
mov
movsb
push
or
out
or
enter
adc
jmp
popa
subb
adc
daa
jg
mov
fdivrl
xor
data16
and
sub
test
ja
push
mov
rorl
es
sub
icebp
adc
adc
jnp
lods
cmp
repz
add
push
mov
les
xor
movsl
shlb
push
flds
loopne
test
lret
loope
in
sbb
pop
jno
mov
mov
dec
das
bound
jg
dec
push
test
lcall
popf
sub
pop
jle
mov
lcall
lods
pop
pushf
mov
inc
jae
call
ss
xchg
xchg
jle
or
dec
orb
adc
mov
shr
push
sub
flds
inc
inc
jo
jae
xchg
cli
scas
xor
push
pop
in
sub
inc
ja
out
jb
jno
sub
adcl
adc
jne
inc
rcrb
jno
mov
and
outsb
jae
jbe
sbb
and
mov
inc
shr
push
inc
sub
cmpsl
inc
test
xlat
push
bound
div
daa
dec
pop
cvtdq2ps
xchg
test
dec
sbb
mov
mov
js
sahf
or
adc
dec
push
and
pop
push
push
adc
pop
andl
add
lret
inc
push
data16
mov
cwtl
test
mov
jg
push
inc
push
jno
dec
and
enter
sub
lea
pop
incl
xor
pop
jns
rorl
out
fnstenv
test
push
out
mov
add
sbb
sbb
mov
insl
ja
sub
dec
stos
xor
adc
aam
outsb
mov
add
ds
cs
cld
and
pop
andb
js
pop
cli
cmc
jl
jmp
call
fistps
mov
add
cli
in
lock
xor
lock
bound
mov
jbe
inc
jns
aam
jno
jo
cmc
jae
lock
xchg
xor
loop
mov
lahf
in
jns
mov
and
lahf
out
dec
push
mov
in
ds
test
jmp
invlpg
inc
mov
in
push
lret
xor
jb
sbb
jne
inc
cmp
sbb
and
dec
sbb
in
mov
pushf
jae
dec
shlb
jne
mov
lods
std
pop
sahf
mov
ror
mov
mov
adc
jae
sbb
xlat
mov
aam
sbb
test
jle
test
roll
cmp
daa
aam
rclb
lods
adc
int3
inc
and
push
pop
jg
fnsave
xor
in
or
ja
or
fisttps
mov
arpl
pusha
popa
outsl
mov
test
cld
xchg
inc
cld
loop
sbb
sub
int3
pop
clc
aad
iret
adc
push
push
loopne
lock
jge
or
sbb
testl
js
push
repz
pop
add
push
lea
ja
lcall
adc
sub
xor
aas
mov
in
xchg
ja
scas
mov
cld
mov
mov
insl
jne
fbld
test
rorb
dec
outsb
jl
pop
shlb
imul
mov
mov
cld
cltd
jae
dec
leave
fbld
rorb
adc
sbb
movsl
cwtl
insl
mov
loope
adc
xchg
and
scas
adc
mov
rcrl
call
dec
into
mov
adc
inc
xor
clc
mov
or
sti
lret
inc
loope
jns
fwait
xor
mov
add
dec
xlat
jl
cmp
xor
insl
and
push
sub
jno
push
inc
in
pop
lock
mov
fldcw
inc
fwait
jno,pt
pop
ds
push
out
or
inc
test
gs
xchg
pop
stc
ja
lds
jle
and
xchg
in
xchg
jns
add
mov
loope
stos
jp
sbb
sbb
inc
pop
mov
fistps
jns
jecxz
in
jg
dec
repnz
lock
lea
add
arpl
mov
aad
sbb
xchg
mov
fdivp
push
sbb
jne
leave
js
jo
iret
xchg
jno
call
add
jae
jb
or
add
test
cmp
xor
pop
jnp
xor
dec
scas
fidivs
or
out
or
or
js
dec
xchg
nop
mov
mov
sub
pop
lods
repnz
repnz
ret
mov
adc
in
add
and
and
in
fisttpl
bsf
sbb
inc
ret
scas
test
ficoml
stc
aad
hlt
pop
push
arpl
ljmp
repnz
in
popf
sbb
pop
loop
mov
testl
je
sub
mov
pop
inc
gs
addr16
lods
xor
adc
mov
enter
call
mov
adc
scas
pop
std
call
xchg
jge
mov
popa
idivb
sbb
aaa
and
mov
rcll
mov
fistps
dec
jge
mov
fildl
mov
mov
js
mov
fs
nop
lea
addr16
addr16
fiadds
or
inc
lcall
dec
add
daa
or
lret
in
xchg
jno
leave
or
mov
icebp
push
mov
fldenv
aas
sub
mov
fwait
jae
rorl
inc
or
mov
inc
cmpsl
fwait
int3
mov
pop
fstl
cli
xchg
aas
scas
popl
hlt
movsb
lock
cmp
fs
pop
imul
sub
mov
jge
inc
jmp
mov
pop
cmp
mov
imul
push
popa
cmpsl
lret
lods
out
or
dec
jge
pop
jne
outsb
into
jmp
lods
orb
jl
mov
sbb
mov
push
mov
fisubrl
adc
and
insb
fisttps
fisubrl
xchg
jb
pusha
and
shlb
push
dec
mov
arpl
mov
test
dec
mov
pop
ror
hlt
or
cmp
cmp
stos
mov
mov
pop
cli
xchg
fwait
int3
movsb
dec
daa
lods
les
filds
std
push
sub
js
lock
mov
test
xor
push
mov
test
mov
add
mov
cmpsl
aad
gs
cwtl
dec
push
pop
aam
sbb
jne
mov
out
mulb
rorb
fistpll
in
enter
adc
xchg
shll
lahf
sarb
jae
dec
sbbb
cltd
xchg
rclb
popa
in
push
cmpsl
or
je
push
enter
ljmp
xlat
and
lret
xor
test
lods
jmp
inc
pop
fldenv
imul
stos
cmc
xchg
mov
test
jb
mov
mov
adc
inc
pop
ja
jno
fidivrs
dec
pop
push
jns
jne
inc
pop
xlat
adc
cmpsb
jns
push
popw
push
rcl
mov
bound
inc
inc
inc
inc
test
ret
mov
shr
lods
mov
movups
popa
adc
push
or
lock
sbb
adc
int
push
sbb
mov
rclb
push
cmp
sti
aaa
or
ja
add
stc
leave
imul
mov
movsl
addb
jbe
out
std
jecxz
add
fsubl
inc
jbe
jae
mov
sub
sahf
mov
cmpsl
cmp
sarb
not
mov
dec
push
add
cs
push
xchg
dec
push
sub
movsl
or
imul
mov
in
out
rcll
sub
adc
sub
jge
push
mov
sbb
or
fisttpll
xchg
int
insl
pop
aad
mov
or
cld
fcoms
inc
out
mov
mov
mov
rorl
mov
jmp
mov
sub
or
outsl
fisubrl
mov
movsb
mov
pushf
pop
out
iret
insb
nop
mov
cmpsb
mov
mov
repz
mov
and
cmp
xchg
aaa
fidivrl
mov
adc
mov
in
cmc
call
inc
roll
dec
jge
iret
jmp
jl
dec
ret
pop
nop
test
lret
pop
pushf
xchg
cmp
cmp
dec
repnz
fdivs
add
mov
xor
cltd
lcall
jle
fmulp
das
icebp
mov
sbb
or
pop
sbb
inc
popa
mov
sub
xchg
sahf
lret
dec
dec
lcall
pop
insl
out
mov
cwtl
pushw
fstpt
sub
jns
or
adc
push
out
dec
ja
sub
mov
mov
rcll
mov
mov
jle
ss
bound
add
les
in
or
in
pop
jmp
and
mov
mov
xchg
adc
frstor
pushf
ret
sahf
mov
repnz
fisubs
inc
fisubrs
cli
jnp
fidivrl
gs
and
das
sti
aad
xchg
add
ficompl
fs
loope
add
dec
insb
mov
insb
fs
mov
rcrb
inc
hlt
push
mov
jmp
lret
test
xchg
sti
xlat
xchg
jno
imulb
inc
andl
jge
imul
sti
scas
xchg
pop
mov
sub
sahf
mov
add
test
sahf
and
push
cwtl
inc
pop
add
outsb
dec
jl
cmp
arpl
cltd
jecxz
jns
scas
xchg
fnstenv
leave
aas
fs
mov
test
hlt
mov
jb
cmp
xor
mov
sarb
popa
loop
loopne
shlb
xchg
inc
notl
stos
in
mov
mov
sbb
fsubs
in
fbstp
imul
rorl
mov
and
mov
adc
cmc
sbb
int3
in
movsb
dec
lods
jnp
call
cmc
scas
xor
jl
mov
mov
or
dec
outsb
mov
rolb
out
jb
mov
dec
cwtl
mov
loopne
loope
mov
je
fstps
inc
mov
cs
imul
mov
lret
data16
sbb
dec
or
fisubs
add
rol
testl
adc
cmc
xorb
enter
sub
sbb
add
out
sti
and
sahf
shll
xchg
xor
popf
push
dec
jbe
lock
pushf
sbb
jecxz
mov
movsb
ss
jp
and
cmpsb
sub
push
or
push
lcall
arpl
fcomps
cmpsb
mov
push
cltd
pop
inc
xchg
jne
stc
mov
mov
dec
jle
add
xor
mov
loop
sbb
imul
rcrb
cli
fiadds
add
or
push
movsb
int3
aas
mov
push
outsb
adc
pop
ds
mov
adc
pusha
jae
and
push
sub
mov
mov
adcl
mov
or
jno
add
sbb
fwait
clts
xor
jnp
insb
out
dec
in
xor
loope
sbb
outsb
das
test
inc
adc
push
or
rorb
aas
push
mov
or
xor
rorb
sysenter
test
negl
mov
jge
mov
adc
cwtl
adc
ja
mov
addr16
or
repz
sbb
mov
mov
pop
inc
add
xchg
pushf
mov
lock
push
mov
xchg
sti
jbe
test
cmp
ds
cmp
mov
mov
xchg
lds
outsl
ja
xchg
adc
xchg
lods
push
push
sub
pop
repz
out
mov
dec
push
aas
pusha
dec
pop
push
xchg
test
into
aaa
dec
out
xchg
xchg
cld
mov
cmp
mov
in
mov
testl
cmpsb
cmp
movsb
out
dec
add
dec
xor
add
mov
in
jl
xchg
cs
in
insl
cmpsb
sti
mov
jg
les
cltd
dec
cmpl
imul
cmp
lret
inc
sub
sbb
pushf
sub
push
cwtl
jmp
data16
xchg
insb
stos
repz
adc
push
cmp
mov
fnstcw
aad
loope
jne
or
mov
mov
push
in
or
mov
inc
sub
dec
or
dec
or
fimuls
jmp
xor
mov
xorl
dec
out
call
inc
into
arpl
mov
cwtl
and
outsb
enter
je
inc
mov
nop
pop
mov
push
test
inc
ficomps
cmp
lock
aam
cmpsb
sbb
sub
inc
gs
test
jnp
push
inc
scas
xchg
aas
dec
stos
push
orb
mov
into
sbb
push
aad
stos
mov
pextrw
mov
outsb
pushf
cmp
pop
jmp
pop
ret
les
stc
mov
out
jb
ret
insb
cmpsb
mov
fwait
adc
scas
hlt
outsl
inc
mov
mov
pop
std
out
iret
sahf
cmp
insl
pop
sbb
faddl
mov
pop
aad
lods
sbb
xchg
fildll
lods
push
push
mov
and
or
and
jb
adc
sbbb
rcll
mov
mov
andb
push
pop
xchg
aas
pop
out
dec
aam
mov
rorb
movsl
fisubs
and
in
mov
mov
out
loope
rcrb
sub
mov
out
imul
jbe
jb
push
loop
dec
push
xor
mov
leave
mov
cmpsb
pop
inc
das
adc
test
in
mov
movsb
insl
dec
jb
aaa
mov
icebp
push
ret
cmpsl
sarl
cmpsl
popa
inc
loop
mov
sub
push
cmp
pop
pop
adc
inc
test
lahf
test
push
jge
pop
fs
mov
and
jne
xchg
jbe
adc
xor
pop
and
popa
in
mul
push
ret
push
aaa
arpl
push
dec
scas
cmpsl
movsl
inc
inc
lret
sarl
pushf
inc
xchg
add
or
mov
popf
jge
mov
mov
enter
mov
sub
jle,pt
repnz
enter
cld
sbb
add
inc
adc
xchg
pop
cmpsl
pop
adc
orb
popa
xchg
es
adc
lock
out
movsb
xor
xor
dec
clc
loopne
mov
and
ds
arpl
ljmp
cld
popf
sbb
sbb
push
mov
dec
adc
sbb
loop
lods
out
sbb
rcr
adc
enter
or
test
cmp
movsb
in
scas
mov
xor
and
sarl
aaa
fiadds
adc
divb
lods
shl
cmp
inc
push
cld
shll
pop
lds
xor
jge
mov
push
jb
xor
and
test
pop
xchg
ja
jge
cmpsl
jne
mov
jo
cmc
div
adc
xchg
mov
jg
int
ljmp
dec
dec
adc
lret
fsts
sub
shrl
sbb
insl
and
mov
add
fdivrs
adc
jl,pt
into
ds
iret
jg
push
push
mov
popa
lahf
sub
js
idivl
cs
xchg
xor
pop
pop
into
es
in
es
and
jne
scas
lret
jg
xlat
or
sub
cli
stc
das
sbb
mov
fnsave
inc
sbb
in
mov
jecxz
test
dec
rolb
sub
jg
fiaddl
mov
inc
dec
loopne
dec
out
aas
ret
xchg
jne
mov
mov
aas
cli
jnp
mov
rol
mov
xor
mov
add
and
inc
mov
and
lea
dec
in
sub
inc
push
aad
mov
lods
jno
push
ss
mov
push
test
shr
and
fsub
mov
out
loopne
in
cmp
sub
mov
and
adcb
insb
add
adc
scas
push
push
or
testb
int
or
inc
xchg
fdivl
imul
arpl
add
stos
aad
pusha
cmpsl
and
fidivrl
loope
shll
inc
or
mov
adc
lret
or
mov
aam
jge
pop
cli
mov
mov
xchg
jecxz
dec
scas
push
ss
cmp
mov
loop
ret
jo
mov
xor
in
dec
stc
fidivrs
cmp
stos
test
push
xor
fldl
push
jl
dec
es
rol
daa
adc
bsr
incl
jge
push
ljmp
fstl
aam
lods
dec
and
adc
orl
inc
jbe
lock
adc
jl
xchg
jge
out
loopne
cmp
insb
jnp
cwtl
ret
iret
pop
ds
jg
xchg
aas
fdivp
xor
or
ds
clc
or
inc
push
mov
mov
in
mov
lea
add
int
dec
cmpsb
movsb
and
pop
xor
cmp
xlat
inc
push
leave
mov
es
loope
out
push
pop
pop
cld
out
sbb
push
test
cmp
mov
sbb
enter
cmp
jge
and
dec
sbb
ds
in
aad
jg
push
mov
and
push
iret
fsub
fmuls
leave
test
lds
sbb
sbb
cmp
dec
imulb
pop
pop
popf
in
sub
sti
cltd
enter
jmp
clc
sbb
insb
movsl
mov
mov
or
sbb
loopne
outsl
dec
test
popa
std
sub
int
aam
loope
and
shl
push
xchg
andl
mov
mov
mov
mov
test
imul
dec
mov
cld
testl
jne
je
inc
ss
leave
jle
jmp
add
mov
sub
stos
adc
lock
cmp
nop
nop
sbb
xor
insl
dec
sub
aas
lahf
and
pop
div
add
jno
mov
fwait
data16
out
es
imul
inc
cmp
rcrl
leave
loopne
sbb
mov
es
adc
mov
and
mov
xchg
das
cltd
orl
xchg
and
pop
cmpsb
repz
lcall
ss
and
jle
xchg
dec
ds
punpcklbw
lret
push
subb
imul
jp
adc
xor
jg
clc
push
ret
cmp
lahf
jle
mov
cmp
stos
add
scas
xchg
dec
aaa
add
in
imul
cli
repz
add
iret
jne
pop
cmp
add
cli
jae
mov
jecxz
call
cmpsl
cs
aam
sbb
testb
shrb
in
fcmovne
daa
out
push
jne
in
mov
jae
mov
pop
call
xchg
hlt
pop
fstps
ja
and
fists
loop
mov
add
inc
pusha
pushf
mov
xchg
cmp
jbe
jmp
gs
push
cmpl
adc
test
out
and
test
sub
pop
decb
repnz
int3
pop
inc
pop
or
in
push
addb
pop
jp
mov
pusha
jb
jnp
dec
faddl
mov
jecxz
nop
add
movsl
ljmp
aaa
xor
push
shlb
mov
xor
icebp
call
ficompl
enter
outsl
pushf
pop
inc
mov
cmp
add
imul
das
iret
in
lods
int3
mov
test
popa
push
dec
fildll
pop
jl
jl
icebp
push
and
mov
add
lret
int
inc
or
inc
insb
aam
in
cmc
adc
pop
push
cmc
mov
pop
xor
xor
rorb
popl
jmp
subl
pop
das
xchg
jle
mov
clc
inc
jg
in
jle
stc
lods
pop
pop
mov
pop
in
mov
jle
mov
jne
enter
scas
sti
sub
jecxz
xor
pop
and
sbb
ljmp
imul
je
dec
scas
xchg
and
mov
lock
rclb
inc
or
jno
jle
add
mov
movsb
imul
dec
pop
ds
mov
jo
mov
xchg
lods
cmp
addr16
jbe
inc
gs
xbegin
jae
insb
add
mov
ret
push
fists
cmp
xchg
pop
sarl
mov
pop
cmp
mov
cmpsb
pop
push
push
jge
dec
cwtl
shlb
sti
dec
pop
ror
out
mov
or
pop
mov
pusha
jbe
add
mov
inc
xchg
out
fisttps
movsl
out
cmpsb
xchg
cmpsb
jo
lock
jecxz
or
pop
sbbl
add
mov
and
xor
sub
fisttpl
xchg
pop
jmp
outsl
push
imulb
jbe
pop
sub
xchg
push
in
pop
rdtsc
test
and
inc
jl
repnz
xchg
in
or
insb
lods
jae
xor
je
pop
ret
scas
imul
lahf
rcll
and
cmp
ret
mov
out
shr
dec
or
sbb
or
stos
mov
ljmp
jge
sub
lcall
sahf
lock
xlat
pop
cmp
push
cmp
rcrb
mov
js
sub
iret
decb
cmp
shlb
test
pushf
dec
cmp
inc
es
jmp
dec
adc
mov
jo
into
sub
jg
sub
je
push
jnp
arpl
mov
push
sbb
arpl
loopne
fwait
push
inc
xchg
mov
and
cld
ss
lock
jg
imul
cwtl
sbb
jo
subb
pop
rcl
cmp
jp
test
pusha
dec
cmp
test
xchg
int3
dec
sub
repnz
sub
ljmp
into
or
jmp
lods
je
cmpsl
outsb
es
and
inc
inc
in
lret
sub
lret
inc
xor
int
es
or
jnp
pusha
notb
xchg
inc
jne
std
pop
push
xor
loopne
in
in
lcall
stos
push
fwait
cmc
mov
xlat
cltd
sbb
inc
add
xchg
xor
xor
add
add
adcb
enter
adc
inc
out
sarb
jge
sbb
stos
pop
sub
inc
cmp
add
cmp
fisttpl
gs
sub
nop
xor
ljmp
mov
inc
jns
fstpl
ss
repnz
dec
push
fstps
adc
or
rolb
push
inc
pop
jo
mov
cmpsl
cmp
jno
in
dec
jns
or
test
lret
jbe
cltd
cld
push
cmp
cmpsl
sti
xor
enter
push
xor
test
dec
lea
ds
and
lret
fildl
pop
sti
dec
lea
and
notl
lret
cwtl
inc
cmp
mov
mov
sbbl
dec
pop
mov
das
outsb
inc
sub
call
in
mov
leave
scas
cmpl
mov
cli
test
int3
nop
add
mov
cmc
push
ljmp
rolb
jle
inc
das
mov
mov
jb
lret
push
inc
int3
push
mov
or
rcrl
push
test
sbb
dec
jne
lret
inc
dec
fdivrp
and
lret
mov
lods
xchg
rcr
mov
mov
push
dec
pop
fs
call
cs
in
popf
js
pop
ss
fimuls
jb
jno
shl
sub
sub
xchg
shlb
cmp
cmp
push
ret
inc
lea
fs
push
insb
xchg
adcb
or
cld
cli
out
dec
imul
loope
cli
jbe
leave
sbb
int3
clc
and
pop
mov
stos
xor
mov
jns,pt
cmpsl
test
mov
loop
mov
dec
imul
mov
clc
xchg
gs
pop
and
bswap
bound
push
mov
mov
popa
shlb
pusha
in
aad
sbb
sub
sahf
sub
xchg
dec
sub
or
cmp
xor
cmp
js
mov
xchg
and
and
sbb
lret
jge
les
into
cmpsl
daa
cld
and
mov
insl
leave
sbb
std
or
daa
popa
xchg
test
jp
out
loop
fstpt
xchg
repz
negb
aas
aam
inc
mov
inc
lods
pop
scas
ljmp
xchg
loopne
mov
xor
jmp
sub
xchg
inc
dec
js
pop
cmp
or
xor
movsb
mov
aaa
sub
repz
xchg
int3
clc
outsb
orb
in
add
jg
mov
in
ja
mov
out
xor
lds
jecxz
pushf
bound
nop
mov
cmc
icebp
negl
adc
cmpsb
and
push
cmp
ljmp
int
or
sub
jecxz
test
push
push
jl
xor
jle
loope
das
mov
pop
outsb
and
shr
dec
aad
mov
or
loope
xchg
fs
pushl
xchg
mov
fs
sbb
or
test
hlt
mov
mov
ja
jle
stos
inc
jb
icebp
rorl
arpl
push
mov
and
mov
lods
lock
jmp
lcall
mov
fistps
push
add
adc
mov
or
hlt
sbb
dec
scas
aad
ss
or
pop
lret
jbe
int3
dec
or
outsl
in
push
cmp
jecxz
sub
arpl
jecxz
or
xorb
sbb
fdivs
pop
nop
or
and
add
pop
push
fisubrs
lock
int3
xor
and
jnp
xor
mov
push
sbb
add
sub
call
pop
loope
mov
push
mov
mov
dec
outsl
sbb
sti
mov
int3
lds
jns
sub
inc
push
sub
bound
and
cmp
inc
mov
movsb
rcrb
ljmp
out
ret
inc
out
out
rorb
mov
fs
cld
push
leave
xchg
dec
and
inc
in
les
dec
xchg
jge
pop
jns
stc
fldcw
sar
dec
add
aad
fstpt
push
ss
xchg
pop
xchg
bound
pop
jp
cmc
jg
mov
add
movsl
test
dec
fmul
push
sub
cmpsb
mov
fiadds
stc
fldenv
inc
inc
into
mov
or
test
fcompl
out
mov
incb
in
sahf
pop
lock
mov
movsb
cwtl
testl
mov
pop
jae
add
dec
test
push
mov
push
mov
push
xor
enter
adc
or
out
aas
shll
fisttps
lds
ror
out
enter
mov
cmp
mov
cmp
std
dec
push
insl
cli
adc
cmp
dec
or
les
outsb
movsl
std
ficomps
mov
repz
and
pop
and
adc
mov
push
stos
fnstenv
mov
stos
rcl
pushl
dec
jnp
pop
sub
or
adc
xchg
mov
fmull
pop
movsl
push
mov
inc
dec
outsl
inc
sub
filds
shrb
fs
sub
in
neg
jns
call
pop
cli
in
bound
repz
push
imul
jmp
add
sub
xchg
cmp
mov
jne
popa
sbb
or
adc
mov
es
cli
jecxz
aaa
movsl
stos
inc
sbb
lods
jecxz
popf
inc
jmp
jno
rolb
test
lcall
roll
ljmp
sub
insb
push
xchg
in
mov
leave
insb
fs
test
inc
pop
and
mov
adc
imul
lods
jg
mov
pop
loope
in
xor
jns
insb
jecxz
arpl
pop
pop
xchg
inc
and
xchg
or
xor
cmp
and
mov
cs
jb
jg
lret
dec
js
jecxz
mov
shrb
inc
roll
cmp
leave
jmp
sub
es
jb
sub
jl
imul
pop
fildll
sbbb
shl
sarl
in
mov
jb
loop
dec
push
mov
push
in
aaa
lock
adc
jecxz
fdivrs
jnp
pop
mov
add
mov
repz
insl
fstpt
in
shrb
dec
pop
inc
pop
adc
mov
cmpsl
ljmp
mov
push
pop
aas
push
xchg
testl
ret
mov
arpl
mov
sbb
scas
inc
fcoms
fwait
imul
fnsave
jg
stos
sub
sub
xchg
ret
push
int
jns
popa
sarl
sbb
jmp
mov
mov
loope
xor
lcall
jge
add
pop
clc
popa
push
mov
push
pop
xchg
push
mov
out
mov
push
outsl
cmc
mov
out
dec
pop
inc
sti
fisubl
push
or
loope
add
pop
ret
data16
push
cmp
and
pop
push
push
push
adc
iret
push
mov
add
add
scas
xor
jge
lods
sub
pop
or
ss
pop
js
js
mov
and
daa
stos
adc
inc
adc
mov
adc
call
ljmp
mov
insb
push
shl
sub
add
sub
mov
mov
adc
js
xorl
sub
shll
adc
lret
mov
push
pusha
stc
and
jne
dec
sub
adc
pop
popa
cmp
pusha
jp
jl
push
movsb
lods
xchg
repnz
or
jp
idivb
push
std
push
fcomi
stos
push
jmp
stos
cmp
dec
movsb
xchg
jg
jne
sub
out
cli
pop
fisubs
xor
into
data16
xor
aam
in
mov
dec
dec
xchg
sub
push
daa
sub
jp
push
xor
mov
fidivrl
je
addb
scas
pop
or
aaa
es
in
lcall
iret
cmp
cmp
mov
add
cld
cld
xor
ja
out
test
push
pop
lcall
mov
mov
mov
ret
cwtl
dec
jnp
inc
mulb
mov
mov
mov
cmp
outsl
and
idivl
mov
sbb
je
dec
shlb
adc
jbe
or
lret
and
pop
xchg
inc
bound
sbb
sub
popa
inc
dec
push
or
adc
fdivr
adc
dec
imul
push
add
or
scas
fs
mov
inc
mov
pop
xchg
movb
jo
mov
mov
xlat
lret
sub
cmpsl
int3
std
lcall
lret
arpl
or
sbb
aam
in
jmp
dec
cwtl
mov
into
mov
jecxz
xchg
repz
ret
test
jmp
mov
inc
inc
divl
mov
ret
mov
mov
in
mov
lods
add
loopne
xorb
adc
dec
adc
push
insb
outsl
xchg
dec
div
enter
insb
stos
rcrl
dec
jnp
cmp
xchg
pop
fwait
mov
insb
mov
xor
or
xchg
jg
mov
cmp
int3
sub
sbbl
shrl
arpl
adc
scas
out
ficomps
int3
add
cmp
adc
or
aam
js
push
inc
mov
fwait
ror
mov
xchg
xor
xchg
dec
inc
out
fldt
loope
mov
mov
xchg
xchg
adc
mov
adc
addr16
insb
imul
sub
push
dec
mov
test
jl
mov
cmpsl
loop
cmp
addr16
sub
xor
je
cltd
mov
popf
and
sar
nop
xchg
shll
mov
adc
outsb
or
outsb
add
fisubrl
cwtl
jle
leave
aad
ret
int3
aaa
xchg
outsb
inc
test
sub
sbb
sub
into
sbb
scas
lock
jnp
sbb
push
lds
nop
mov
or
mov
outsb
mov
xchg
icebp
pop
mov
xchg
mov
repz
or
mov
sub
xor
inc
and
fisubl
cmpsl
push
sub
pop
pushf
cmp
daa
idivl
flds
outsl
dec
push
jae
sti
xchg
negb
jle
sub
add
push
stc
aaa
jecxz
scas
cmpsb
inc
and
outsl
stos
xchg
dec
das
cmc
shrb
out
inc
fnstenv
adc
into
jl
ljmp
cmp
cld
and
inc
ja
loope
inc
mov
lods
mov
rcll
mov
pop
js
roll
cmp
cmp
mov
mov
xchg
ds
mov
hlt
pop
negb
mov
lds
push
push
daa
mov
push
adcb
imul
and
or
xor
sub
xchg
or
xor
fcoms
xor
popf
ss
stos
mov
dec
je
adc
faddp
xchg
sub
or
insb
hlt
mov
les
js
add
inc
cmp
mov
shrb
hlt
out
iret
push
call
sbb
enter
sbb
lds
pop
and
lods
add
enter
and
xor
mov
das
push
dec
gs
pop
sti
push
mov
xchg
and
cmp
mov
data16
icebp
mov
addl
mov
adc
in
and
xlat
jle
aas
xor
loope
xchg
xchg
or
mov
stos
aad
xor
dec
push
sub
adc
rclb
imul
mov
cld
popf
jae
and
xor
sbb
jg
cli
sbb
push
ds
add
jl
std
and
ret
cmp
jbe
in
dec
add
adc
cli
fstl
orl
js
lret
pop
add
arpl
pop
push
pop
add
push
cli
push
bound
xchg
add
inc
pop
aad
xchg
movsl
pusha
mov
cli
mov
ret
mov
loopne
in
loop
inc
add
divb
jmp
popa
loopne
push
sbb
and
sti
int
mov
out
inc
mov
mov
inc
or
les
push
inc
xor
movsb
addr16
out
and
es
popa
je
test
xor
push
scas
in
or
xchg
xchg
sub
jl
std
mov
adc
cmp
xor
pop
lock
push
mov
rol
pusha
pop
test
adc
sub
cmpsl
in
jne
push
and
insb
mov
and
push
pop
sbbb
ja
sahf
inc
cmp
popf
jecxz
clc
out
dec
or
dec
into
clc
jno
adc
cld
push
lret
hlt
jo
or
jo
cmova
into
loope
les
dec
sbb
stos
psubusw
cmp
cmp
add
popa
int
imul
loop
sbb
les
or
scas
std
or
add
std
add
push
adc
pop
hlt
add
loopne
sti
xor
sub
cwtl
inc
in
cltd
mov
mov
js
or
addr16
mov
xor
mov
test
cmc
and
sub
adc
xor
dec
sbb
mov
adc
test
sub
imul
movb
pop
mov
fcom
insb
and
cli
sbb
in
out
mov
cmp
xlat
out
bound
mov
cmp
jecxz
rcr
sub
in
mov
movsl
das
jnp
shlb
cwtl
fs
shll
jo
jge
call
je
xchg
jbe
or
cmpsl
push
inc
push
clc
and
ds
sub
dec
dec
stc
out
mov
xchg
lock
xchg
cmp
jns
sti
add
push
and
cmp
cmp
cld
sub
inc
add
adc
mov
jno
iret
in
call
pusha
aam
jo
test
js
fs
test
and
push
dec
gs
inc
loop
popa
lock
push
adc
sub
adc
stos
lock
and
mov
mov
in
and
xor
test
lea
popf
adc
mov
dec
in
dec
add
cltd
sbb
jae
fldcw
test
jnp
lret
cli
sub
rcl
mov
adc
in
mov
sub
ret
push
mov
orl
rcl
les
addr16
dec
hlt
add
shlb
unpcklps
loope
mov
cmp
push
lods
sub
mov
cltd
jno
fstpl
bound
or
aaa
cmp
sbb
jo
sbb
insb
xchg
push
hlt
shll
test
popa
jecxz
ljmp
clc
xor
inc
xor
adcb
cwtl
cs
inc
push
cmpsb
int3
xchg
jno
stos
mov
repnz
jbe
cld
jle
adc
pushf
inc
jp
mov
xlat
jmp
add
mov
stos
subl
add
pop
push
out
in
outsb
loopne
ds
xor
mov
sbb
mov
push
inc
mov
mov
cmpsb
mov
mov
cmp
mov
aas
and
arpl
xchg
pushf
outsl
movsb
lcall
outsb
bound
mov
punpcklbw
scas
mov
loopne
in
push
and
js
adc
cli
jg
xchg
int
pop
mov
inc
push
imul
lods
push
push
ret
mov
pop
in
add
jbe
add
sub
mov
out
fs
push
add
lods
cmpsl
xor
js
sbb
in
addb
shrb
decb
cmp
sbb
leave
imul
scas
int
pop
cmpsl
mov
fstpt
jge
int
sbb
stc
jbe
inc
xchg
sbb
or
cltd
loopne
or
xor
and
sti
das
dec
cwtl
jge
hlt
je
and
movsl
ljmp
push
int
mov
mov
jge
push
dec
imul
in
pop
mov
mov
decl
mov
scas
add
inc
xchg
insb
pop
out
push
insb
cmp
mov
bound
add
das
add
inc
mov
mov
out
es
sub
lods
daa
mov
cs
fwait
or
sbb
sahf
mov
pop
dec
pop
dec
push
inc
outsb
clc
push
sub
clc
imul
shlb
xchg
hlt
and
addr16
xchg
lods
sbb
mov
mov
mov
in
test
psubw
shl
dec
jle
mov
or
mull
test
xor
cld
adc
or
add
pop
mov
push
jl
push
cmpb
ret
cmp
scas
cmp
xchg
notl
fisubrs
mov
movsb
incb
mov
or
ljmp
pop
imul
dec
sbb
ficomps
sbb
pusha
test
and
fldenv
testl
mov
mov
cwtl
mov
inc
pushf
fists
scas
xor
rol
iret
mov
mov
xchg
mov
and
pop
loopne
leave
shll
lods
icebp
inc
hlt
idivl
fisubrl
and
or
jno
in
test
pusha
stc
cmp
or
sub
mov
int3
inc
mov
jae
push
nop
les
xor
or
cmpsb
lcall
lock
lods
insl
dec
push
cltd
out
sbb
out
mov
insb
in
mov
dec
sahf
stos
pop
getsec
jmp
fld
enter
pop
adc
add
inc
pushf
inc
pop
rcl
testl
andl
xchg
js
or
or
mov
fiadds
outsl
push
xchg
inc
xchg
jnp
adc
add
and
jmp
mov
stc
cmp
jmp
jns
leave
pusha
adc
cwtl
mov
jg
movsl
dec
pop
cmp
pop
xchg
shl
lock
movsl
inc
pop
sbb
or
and
js
in
and
popf
shlb
movsb
inc
mov
cs
test
stos
ljmp
xchg
and
enter
sbb
mov
xchg
adc
out
mov
out
mov
das
xor
pop
not
mov
rorb
mov
je
add
scas
sub
and
call
out
pop
lcall
push
cmp
sti
xchg
div
fisubl
cmp
sbb
pusha
insb
leave
push
popa
adcb
and
jmp
shlb
jg
sub
sbbl
leave
xchg
mov
add
in
les
int3
inc
add
movsb
jle
xchg
jne
js
cmp
ror
xchg
push
out
jae
pusha
adc
dec
xchg
pop
jecxz
cmp
ret
jmp
pusha
scas
xchg
imul
cmp
imull
dec
inc
and
sbb
pusha
jp
push
outsl
out
sub
loope
dec
pop
and
es
fimuls
ljmp
xchg
loope
gs
in
mov
pop
sti
out
movsl
push
push
sub
xchg
pop
dec
xchg
mov
mov
je
pop
dec
fdivr
jb
fcompl
xchg
push
repz
mov
repnz
pop
sub
pop
pop
xchg
push
adc
outsl
pop
jg
pushf
arpl
repz
jne
mov
and
pop
aam
jb
mov
dec
pop
xor
orb
inc
dec
pop
fldenv
call
clc
cli
imulb
decl
incb
and
jecxz
scas
mov
and
mov
inc
pop
adc
outsb
sub
cmc
lods
push
jb
mov
mov
outsb
adc
add
mov
jecxz
cmp
mov
daa
cli
dec
adc
mov
je
jo
add
arpl
leave
pop
dec
push
sbb
lret
popa
test
divb
or
hlt
add
fwait
in
push
es
addr16
lock
lret
lds
les
icebp
xchg
jle
xchg
sti
pop
mov
pop
mov
and
add
jle
movsl
iret
and
xchg
aaa
sti
das
jl
dec
jmp
dec
shl
ret
out
push
lahf
rorl
jae
mov
data16
or
mov
cmc
jb
sub
add
and
out
aam
push
inc
addr16
dec
mov
cs
in
jb
clc
dec
scas
fildll
mov
lock
or
in
rol
mov
sbb
push
xlat
sqrtps
inc
jno
loope
xchg
das
pop
jbe
stos
pop
dec
gs
jnp
xlat
push
sbb
das
shr
stc
sbb
shlb
jl
inc
ljmp
mov
add
push
xor
xor
roll
aad
pop
jbe
push
in
fimull
cmp
popa
jns
mov
mov
or
adc
pop
cmpsb
or
lcall
sti
mulb
jb
push
insl
xchg
mov
je
xlat
inc
mov
lcall
je
adc
adc
sti
stc
lds
mov
xchg
sub
inc
sbb
fs
fwait
jmp
pop
sub
mov
in
inc
cmp
lahf
sahf
lret
sub
mov
dec
sbb
iret
jne
clc
enter
xor
bound
clc
sarb
addb
xchg
cmp
shll
in
jp
or
push
mov
sub
addr16
lcall
in
xchg
mov
sbb
pop
xor
adc
imul
clc
in
add
push
fiaddl
mov
jp
xor
mov
popa
pop
call
push
stc
and
leave
scas
sarb
mov
sbb
mov
dec
xchg
inc
and
adc
jl
pop
xchg
ds
and
xor
mov
jmp
add
adc
jnp
cmc
cmpsb
xor
int
ret
or
inc
es
and
jmp
repz
shlb
mov
divb
jbe
mov
push
sbb
bnd
ficoms
xchg
push
sub
lods
insb
decb
cmpsl
push
ficompl
sub
pop
scas
adc
xchg
stc
push
vorps
ss
push
adc
xlat
int3
ja
xchg
xchg
jmp
push
cmc
movsb
pop
stos
jb
lds
add
lret
mov
jae
jp
inc
pop
push
dec
mov
mov
imul
mov
add
mov
mov
push
add
sbb
jno
or
lock
jp
ret
jno
roll
adc
mov
mov
inc
fmul
ret
push
sbbb
adc
andl
xchg
out
push
push
sti
xor
sub
in
inc
xchg
lods
sub
dec
or
push
leave
imull
mov
leave
xchg
mov
cli
inc
inc
mov
pop
dec
adc
pop
xor
nop
and
jp
aaa
xchg
mov
pop
std
cli
lds
add
xor
adc
xor
movsl
mov
push
bound
jle
xorl
pushf
fwait
dec
mov
lds
adc
xchg
and
call
cltd
stos
xchg
mov
vpsraw
jns
dec
loop
inc
push
mov
lret
in
cmp
imul
imul
mov
mov
jns
jecxz
lcall
lds
jbe
inc
dec
ret
repz
out
or
pop
test
cmp
into
pop
stos
daa
fxch
insb
jle
insl
mov
test
cmp
jbe
inc
pop
xchg
xchg
adc
popf
into
mov
outsb
sub
sbb
jge
jns
icebp
dec
es
cmp
popf
or
xlat
adc
mov
push
mov
sub
push
mov
cmp
repz
cltd
enter
pop
adc
dec
inc
jo
jnp
push
cmpsb
mov
leave
push
lret
imul
add
ret
and
cmp
lret
mov
mov
adc
lcall
cltd
cmp
rorb
divb
loopne
int
jbe
in
xchg
jmp
push
dec
inc
add
cld
sub
add
cmp
adc
mov
out
das
xchg
mov
xchg
xchg
lcall
cmpsl
pop
loopne
push
sub
loope
lock
lea
shrl
fsubp
sbb
xor
pop
xor
popf
rolb
pop
lea
idivb
or
addl
pop
push
popf
xchg
cmp
movl
nop
and
mull
or
push
xchg
shll
mov
icebp
dec
ret
push
rcrb
pusha
sub
pop
dec
xor
fimull
imulb
add
dec
rolb
icebp
or
fisubrl
xchg
nop
lcall
adc
add
fcmovnu
fs
out
aaa
mov
or
pop
pop
fcmovnb
leave
rcrl
sbb
and
add
add
add
pop
jo
jns
lds
jae
enter
or
iret
dec
xchg
or
je
mov
or
add
sbb
fisubs
lods
pop
mov
int
out
inc
mov
cltd
adc
fistpl
mov
cmp
cli
inc
dec
out
movsl
jecxz
fucomip
stc
daa
xchg
fwait
out
cmp
sbb
push
bound
shrb
sarl
negb
bound
scas
orl
add
add
ljmp
pop
or
lret
cmp
inc
out
or
mov
inc
jl
mov
sbb
clc
aam
aaa
out
pop
cli
shl
sahf
lcall
movsl
dec
push
mov
push
fistl
jae
bound
pop
pop
aas
gs
mov
loopne
mov
push
jae
out
inc
adc
cmp
gs
js
mov
fcoml
ret
sarb
sub
cmp
add
repz
mov
dec
bound
inc
ja
and
mov
addr16
sbb
add
ds
outsb
shrl
adc
call
push
push
in
dec
in
cmp
sub
enter
xor
inc
out
popf
sahf
into
jo
mov
xchg
dec
xchg
test
push
loop
xor
repnz
out
jae
mov
xor
test
test
mov
xor
cwtl
mov
pop
xor
maxps
inc
dec
rcll
fs
shlb
mov
mov
sub
in
imul
and
sub
push
shll
rcr
int
mov
xchg
or
imul
sub
pop
jbe
inc
aad
fistpll
add
xor
imul
sub
push
mov
dec
push
xor
das
stos
aas
sbbb
pop
xor
in
mov
jo
xchg
sahf
cmp
js
movsl
hlt
sbb
es
and
xchg
ja
add
sub
jg
sbb
test
xchg
sbb
push
mov
jne
mov
std
mov
mov
pop
cmp
insb
test
add
mov
or
ljmp
push
lahf
test
pop
pop
les
stc
out
ljmp
inc
push
mul
xlat
sbb
stos
jecxz
jns
leave
pop
mov
shlb
lret
imul
cmpsb
xor
jmp
mov
sbb
out
filds
pushf
stos
adc
sub
imul
ret
sbb
mov
int3
mov
dec
popa
lcall
out
xchg
and
out
pop
cmp
push
cs
pop
mov
test
jecxz
xchg
xchg
incb
inc
xor
push
push
xchg
in
xorl
push
sti
inc
pop
out
xor
pop
sbbl
int
arpl
cmp
das
jp
cmpsb
sbb
incl
pop
inc
pop
xchg
pop
xchg
lret
test
shl
xor
jg
xchg
jo
mov
push
fsubs
add
jne
xchg
adc
and
loope
mov
jno
push
test
inc
ljmp
pop
sbb
mov
push
fcomps
cli
sub
imul
mov
mov
inc
add
inc
sbb
pusha
scas
mov
inc
jge
sbb
and
inc
mov
add
insl
sub
arpl
xor
into
xor
pop
gs
lret
out
dec
dec
pop
stos
fnsave
cmc
mov
stc
xchg
xchg
movsb
repnz
mov
rcrl
inc
pop
dec
fildll
xor
mov
lds
clc
inc
mov
jns
sub
xor
rol
inc
mov
inc
cli
sbb
jnp
ror
pop
popf
in
ja
xchg
ss
in
repz
pop
sbb
adc
jo
repnz
dec
sahf
addb
inc
pop
decb
add
xor
aad
movsl
imul
push
push
repz
repnz
and
mov
in
pop
fldcw
xchg
orl
sub
sbb
xchg
push
xor
in
lret
cmp
aad
jmp
fwait
xor
pop
or
sbb
clc
xor
inc
pushf
pushf
jno
add
lret
or
in
mov
in
es
int
out
mov
push
sbb
rcll
repz
mov
mov
cmc
sub
sbb
jo
mov
mov
arpl
lret
rolb
push
out
sbb
dec
movb
mov
gs
mov
aaa
inc
lahf
pop
mov
sbb
and
insb
cmp
imul
jb
inc
add
add
adc
mov
aaa
lret
mov
xchg
test
inc
lahf
arpl
ds
push
imul
add
int
pushf
movb
jne
shrl
jecxz
adc
sti
push
adc
pop
mov
push
rcrb
lods
inc
push
cltd
pusha
mov
jns
jbe
and
test
mov
idiv
push
cmp
and
push
dec
jge
add
dec
sub
push
test
or
adc
cmc
out
lfs
loop
mov
adc
or
test
mov
or
xchg
sub
jnp
lahf
and
fsts
je
jp
cmp
in
daa
push
rolb
out
es
test
add
cmp
push
fdivrl
dec
pop
sbb
sub
hlt
push
push
and
jecxz
sbb
xchg
imul
in
in
add
pop
in
mov
repz
fdiv
sub
cld
sbb
sti
inc
insl
rclb
sub
shlw
mov
fisttpl
sbb
inc
lret
sbb
add
xor
andb
mov
enter
mov
xor
mov
iret
adc
loope
insb
pop
jp
aas
push
insb
fcmovnu
pop
add
andb
test
inc
aad
into
cmp
push
inc
jp
dec
or
outsl
jo
insb
scas
or
leave
into
pop
add
mov
andl
fists
rclb
ret
mov
imul
stos
pop
clc
ljmp
jno
aad
xchg
xlat
push
stos
xchg
arpl
xor
jge
int
mov
push
pop
mov
outsb
dec
loop
jns
lret
js
outsl
out
inc
out
bound
add
sub
test
and
out
lret
in
mov
xor
mov
nop
fmull
sti
addb
lods
test
add
jno
cmpsl
mov
push
xor
adcl
xor
sti
bound
js
inc
mov
push
rorb
scas
ja
xor
sbb
ret
cmp
mov
je
shl
lahf
sti
mov
movb
loop,pn
pop
cmpsb
mov
mov
loopne
cmp
push
or
ljmp
int
mov
pop
mov
movsl
popa
cltd
insb
sub
loopne
add
imul
mov
ds
inc
dec
ret
cs
inc
jge
aaa
jecxz
inc
stc
loop
push
mov
add
adc
int3
lock
mov
mov
mov
pop
dec
iret
enter
lds
mov
dec
lret
inc
lods
sub
inc
pop
lock
or
xor
ret
mov
xchg
pushf
inc
cld
fidivrs
fadds
roll
cmp
leave
push
stos
rorl
faddl
out
lods
stos
pop
pop
adc
mov
iret
inc
pop
add
mov
pop
cmp
das
lahf
dec
jg
jg
stc
repnz
ss
pop
nop
sbb
das
shlb
jp
sahf
add
sbb
lcall
int
sarb
inc
and
imul
pusha
jmp
mov
mov
ret
fsts
hlt
das
xchg
out
std
and
xor
push
sub
pop
xchg
jnp
fnstsw
mov
sbb
test
divl
pushf
push
mov
sbb
mov
shrl
lret
jne
ja
aas
js
enter
jmp
push
xchg
orl
and
push
bound
cmp
inc
popa
or
jbe
addr16
jle
scas
mov
and
cmpsl
or
leave
jne
inc
sub
jp
push
sarl
xchg
repnz
int3
movsb
lahf
in
mov
movsb
stos
popf
daa
jnp
arpl
scas
fisubl
arpl
lock
mov
imul
lock
sbb
mov
in
ret
arpl
enter
cmp
mov
jno
mov
mov
arpl
iret
mov
scas
pop
hlt
popa
dec
rcrb
andb
dec
dec
pop
cmp
orb
out
cmp
insb
je
mov
push
lahf
adc
mov
pop
stos
push
daa
jb
shlb
pop
pop
lahf
aad
test
mov
ret
lock
pop
loope
cld
mov
push
xor
xor
cmc
sbb
jae
cltd
ljmp
and
mov
dec
stos
stos
jge
sti
sbb
mov
adc
push
out
pop
push
gs
mov
sarl
cmp
or
fiadds
and
jno
or
aaa
call
arpl
pop
or
pop
sti
xchg
out
out
mov
sub
sub
and
adc
cmp
push
cwtl
cmpb
je
xor
bound
popa
xor
or
je
mov
pop
sbb
mov
lock
cmp
add
or
cmp
je
jp
popa
in
lods
test
adc
xlat
inc
add
pop
das
cmpb
imul
add
mov
dec
clc
aam
cli
shll
pop
sbb
imul
sti
fidivl
pop
in
rcl
xor
adc
arpl
cli
in
ret
push
sbbl
xchg
pop
sub
sbbb
adc
das
mov
in
inc
repnz
lret
cmpsb
mov
nop
movsl
inc
insl
cmp
push
mov
lods
imul
movsb
and
or
cmp
in
movsb
dec
sub
mov
movsl
or
push
and
in
mov
jns
dec
loope
inc
arpl
or
lods
jmp
xor
mov
ja
insb
dec
lods
fwait
iret
push
xchg
xchg
div
stc
mov
out
jns
test
sar
pop
in
or
cmp
in
test
aam
je
xchg
aas
add
cmp
adc
push
lods
lea
shl
inc
inc
xlat
idivb
pop
jno
add
sbb
cmp
or
je
enter
test
fisubs
inc
popf
mov
inc
sti
or
cltd
fs
cmp
or
sub
jecxz
or
dec
gs
and
cmp
dec
jns
add
pop
pop
add
adc
imulb
jge
addb
pop
cs
xchg
sub
xchg
mov
sbb
and
mov
mov
test
adc
mov
out
outsl
push
shld
push
popf
clc
mov
jecxz
mov
mov
adc
pop
stos
jae
aas
mov
outsl
pop
push
insb
int
and
jne
lcall
test
xchg
fiaddl
mov
fdivs
loopne
sbb
xchg
jl
lahf
mov
mov
aaa
test
inc
and
xchg
dec
mov
andb
fwait
sub
and
xchg
gs
adc
insl
mov
xor
mov
out
nop
loope
fidivrs
push
cmp
and
daa
sub
adc
insb
sti
fists
bnd
inc
jl
cli
lcall
push
cld
jp
dec
pop
or
es
mov
ss
adc
das
negl
xchg
pop
and
pop
jnp
and
rcrb
dec
mov
addb
repz
mov
sbbl
sub
fidivl
in
fcmovnu
mov
imul
lods
daa
fucom
ret
test
in
push
xchg
out
push
shrb
mov
loope
clc
jns
in
inc
mov
jo
jno
jae
icebp
jne
pop
sarl
popa
or
mov
jne
jmp
mov
lcall
outsl
rcrl
pop
test
call
xlat
loope
inc
add
mov
enter
imul
inc
jge
and
fiadds
and
cmp
sbb
arpl
aaa
in
test
inc
es
mov
sbb
cld
test
ljmp
jne
xlat
pushf
out
repz
cmp
xor
stos
pop
mov
mov
fadd
lcall
xor
xchg
stos
pop
cmp
jg
imul
shrb
sub
or
mov
loop
push
dec
jle
dec
mov
push
out
mov
adc
mov
inc
add
lahf
jecxz
pop
mov
cld
addr16
inc
inc
or
xor
cld
pushf
cli
scas
add
imul
dec
xor
mov
and
adc
jmp
push
push
pop
loopne
push
aad
loopne
sub
int
aad
pop
bound
mov
inc
pusha
dec
sub
mov
stos
dec
popa
test
mov
lcall
stc
add
mov
mov
inc
pop
mov
cs
pop
out
sbb
push
adc
mov
add
jmp
test
aad
pop
cli
clc
lea
popf
je
lods
pop
leave
stos
sti
rolb
pop
lods
xlat
aad
cmp
outsb
iret
pop
les
sbb
leave
add
gs
in
or
xchg
dec
cmpsb
adc
in
cwtl
lret
mov
cwtl
xor
push
cli
addr16
imul
rcll
data16
js
mov
dec
push
lods
sti
sbb
jmp
pop
and
nop
inc
je
in
push
test
xchg
and
es
sahf
cmc
stos
jb
sbb
lret
fistpll
sub
jge
jns
out
icebp
loop
aam
jmp
inc
stos
ja
bound
sbb
dec
jmp
mov
or
mov
xor
test
mov
in
js
sub
hlt
mov
ljmp
mov
shll
push
fiaddl
jo
mov
adc
call
jo
mov
imull
or
ja
pushf
mov
push
add
mov
or
pop
in
or
xchg
xchg
sub
push
mov
or
dec
and
lock
mov
lods
mov
add
loop
cs
or
xor
cmpsl
lret
ret
icebp
xor
test
sbb
inc
in
nop
jecxz
jno
xor
cmp
sub
inc
ret
adc
and
add
dec
mov
bound
mov
or
sbb
fildl
pushf
jecxz
sbb
in
je
pop
ds
sub
and
jle
inc
lods
xor
sbb
iret
cwtl
mov
hlt
fldt
adc
hlt
push
dec
pop
jbe
lods
aam
jg
scas
mov
cmp
sti
popa
xor
adc
adc
pop
sbb
cltd
push
cmp
jb
mov
aad
jnp
mov
aad
inc
daa
imul
incl
and
pop
jb
jecxz
dec
push
pop
stc
das
xchg
inc
rcr
jne
or
cmpl
mov
ljmp
push
xor
sahf
data16
pop
dec
or
in
xor
cwtl
fcmovnb
aam
gs
and
inc
add
inc
les
test
cmpsb
xchg
mov
cwtl
andb
insb
adc
push
pop
idivl
dec
cmp
xchg
fiadds
xor
adc
push
and
xchg
ja
gs
mov
aam
jl
cmp
dec
aad
mov
mov
dec
push
iret
cmp
into
pop
rorb
ficoml
dec
fcmovbe
ja
inc
scas
jno
pusha
mov
stos
fwait
cmp
cmpsb
test
and
fisttpll
push
dec
sahf
push
push
enter
lock
sbb
cmp
out
inc
fnsave
xchg
insl
cmc
mov
xorl
loopne
xchg
pushf
enter
sbb
pop
dec
shlb
pop
jmp
sbb
xor
pop
aas
in
lret
les
and
sti
mov
sub
xor
xor
fwait
sub
bound
push
add
cmp
pop
xchg
hlt
loopne
inc
enter
mov
out
dec
mov
inc
xchg
sbb
mov
inc
out
sar
pop
int3
clc
cmpsb
mov
shlb
push
rcll
outsb
or
incb
mov
loopne
push
xor
jp
or
jmp
int
xor
loop
sbb
fcmovnu
adc
jl
in
out
cltd
pop
enter
pop
sub
inc
cmp
xor
cmpsl
mov
lahf
xchg
mov
jl
and
add
cltd
or
loope
fstp
mov
jns
fistpll
rorl
rcrl
push
pop
imul
push
inc
cmp
push
adc
and
push
into
popa
lods
nop
sub
xchg
jno
adc
add
ljmp
jne
xchg
pushw
wrmsr
push
xchg
out
jmp
es
xchg
outsl
scas
or
popf
jne
fisubrs
enter
dec
das
sub
mov
shlb
fsubs
mov
ret
sub
test
ss
es
ss
lcall
sti
xor
shrb
loope
mov
push
fisubrl
out
xorb
add
sub
mov
and
enter
add
cmp
sbb
ret
push
jb
adc
add
mov
sbb
in
stos
in
mov
pop
clc
xor
out
incl
sub
mov
mov
sub
and
arpl
jle
pushf
inc
int
xor
addl
cwtl
or
ss
int
jbe
cld
add
mov
add
jae
jecxz
sub
ss
sub
mov
ljmp
inc
mov
gs
cmp
mov
js
sbb
fld
sbb
out
mov
iret
gs
and
lcall
int3
or
or
fdivr
fadds
in
add
adc
dec
dec
and
cld
mov
into
pop
shl
inc
adc
int
xchg
scas
int
sarl
xchg
dec
adc
jmp
shlb
xor
imul
sub
mov
ljmp
or
dec
xor
insb
sub
jecxz
popf
test
cmp
fildl
adc
nop
push
sbb
push
rclb
pop
jg
add
xlat
or
sub
inc
jo
in
push
adc
and
cmp
push
fwait
adc
rol
inc
lahf
xchg
pop
mov
pop
jecxz
lcall
dec
popf
in
aad
fldlg2
push
inc
and
fsubrl
adc
subb
mov
dec
pushf
push
cwtl
js
test
dec
in
das
cwtl
xor
adc
divb
mov
lahf
cli
out
adc
fdivrs
sbb
in
test
fwait
mov
stos
push
jmp
lahf
mov
mov
arpl
mov
jno
mov
cmc
cmp
jl
lock
sub
popf
adcl
mov
in
xchg
jl
sub
pushf
sub
dec
and
lock
push
lcall
pop
jmp
xor
stc
ds
lds
into
mov
sbb
cmp
sub
push
pusha
out
stos
push
call
cld
dec
and
std
cwtl
push
cmp
sarl
adc
fnstsw
jne
inc
sahf
lret
stos
push
scas
cs
add
lods
loopne
inc
shr
xor
mov
ljmp
popf
xchg
mov
aam
shlb
fs
jbe
push
cmp
imul
cli
das
loop
jmp
adc
pop
negl
enter
and
sub
divl
inc
mov
loopne
push
dec
jg
orb
lock
adc
dec
cmpsl
arpl
into
gs
or
sub
mov
jae
movsb
dec
cmp
stc
in
xor
push
xlat
call
dec
cmp
in
push
sbbb
jns
mov
pop
push
add
cmp
adc
out
hlt
xor
in
and
stos
inc
inc
jno
repz
je
mov
incb
adc
jmp
inc
xlat
mov
push
or
mov
les
adc
jae
xor
inc
fisttpll
push
and
in
fstpt
aas
stc
dec
cld
movsl
rorl
push
in
mov
lret
push
test
popa
pop
je
movsl
add
inc
cli
fistpll
out
shl
std
negb
push
leave
adc
test
and
jp
sbb
sub
sbb
push
push
mov
cwtl
gs
dec
int3
loop
shlb
mov
adc
mulb
mov
mov
jecxz
dec
andb
pushf
sbb
push
out
scas
ss
sub
sti
pop
pushf
or
add
xchg
ljmp
cmpb
fdivr
aad
ja
sub
sub
pushf
lods
sahf
ljmp
sbb
inc
xor
xchg
aas
iret
imul
xchg
call
dec
pusha
pop
mov
daa
jecxz
sbb
in
mov
and
sbb
xor
bound
ficoms
call
arpl
mov
pop
icebp
cmp
push
loop
test
adc
lret
loopne
pop
and
test
rcl
pop
popa
mov
mov
lahf
cmp
pop
leave
mov
das
iret
sub
mov
mov
xor
pop
dec
fistpl
push
imul
sbb
cwtl
inc
and
sub
add
cmp
scas
hlt
int3
mov
int3
leave
xor
or
fs
incl
inc
jnp
sub
push
dec
ror
pop
jle
cli
idivb
xchg
rcl
pop
outsl
mov
mov
add
dec
lea
inc
mov
mov
xchg
xor
mov
fbld
popf
mov
pop
ljmp
js
popa
lock
rclb
push
ret
mov
dec
adc
xchg
push
dec
imul
mov
test
hlt
lret
dec
les
xor
xchg
mov
cwtl
mov
and
js
inc
xchg
scas
fidivrl
pusha
and
ret
push
fwait
jecxz
adc
imul
imul
jo
sub
test
cmp
stos
pop
enter
mov
sbb
lret
mov
jb
mov
mov
cli
cmp
jle
imul
push
mov
stc
je
push
push
push
mov
ret
cmp
lea
jmp
jne
sub
adc
in
es
mov
mov
inc
cmp
pop
cmc
bound
gs
inc
mov
lock
mov
fistps
pop
int
xchg
iret
inc
mov
movsb
lret
xchg
outsl
pop
jmp
jno
pop
jo
pop
hlt
fadd
pop
popa
xchg
xchg
sub
not
mov
add
xor
jg
mov
pop
cmpsl
jne
cmp
movb
sbb
push
xchg
loop
adc
lock
movsb
and
ret
out
mull
enter
jg
cmp
andl
or
std
popf
or
push
sbb
shl
xchg
xor
dec
aam
addb
aaa
cltd
test
xchg
inc
pop
mov
mov
add
jb
aad
push
repz
dec
jcxz
fwait
insb
imul
cwtl
dec
xor
pushf
sbb
repnz
bound
movsb
enter
daa
pop
pushl
cmp
scas
lds
lcall
pop
pop
pusha
push
shrb
pop
inc
sub
sub
push
sub
sbb
and
sahf
and
and
mov
mov
jge
jns
mov
jbe
fdivs
popf
es
clc
into
dec
sar
iret
mov
cmp
mov
jb
and
lods
jl
lock
sbb
loopne
dec
mov
sub
sub
bnd
int3
testl
pop
outsb
and
lods
stos
adc
pusha
int3
ljmp
lds
jbe
xor
inc
es
call
sarl
mov
daa
adc
es
scas
popa
scas
xor
jne
inc
ret
fimuls
scas
jb
insb
ljmp
jno
stos
movsl
repnz
inc
inc
push
lods
and
aad
stc
in
repz
aas
outsb
xchg
lret
pop
pop
mov
xchg
in
cli
loope
mov
cmp
cwtl
xchg
fstps
mov
jg
pavgb
push
mov
sub
mov
les
adc
shlb
decl
jne
push
movsb
mov
out
cs
or
xchg
xchg
mov
jle
lods
popf
ret
mov
ds
imul
faddp
dec
push
jle
mov
lea
clc
and
pop
pop
sbb
jl
lock
cmpsl
loopne
jle
scas
cmp
push
sub
outsb
lock
sbb
push
mov
pop
lahf
push
std
sbb
ficompl
int
mov
adc
mov
push
das
out
push
mov
movl
mov
call
jle
xchg
mov
sub
mov
sbb
dec
lret
sahf
lahf
sarl
out
out
mov
push
mov
das
loopne
je
imul
fildll
sub
hlt
lret
mov
imul
sbb
sub
loope
flds
repz
and
fwait
loop
or
push
into
mov
push
jb
or
lahf
cmpsb
cmpsl
les
jmp
sub
test
sarb
aad
sub
jo
adc
push
out
inc
add
test
imul
insb
push
cmp
lods
xor
sbb
cld
inc
adc
mov
pop
outsl
mov
push
cmp
cmp
and
push
sub
js
sub
sub
lret
mov
cmp
add
mov
lock
xchg
ret
inc
push
in
adc
sbb
data16
mov
or
pop
xchg
test
dec
testl
push
in
xchg
int3
imul
je
jno
mov
sbb
sub
rorb
inc
pop
adc
add
iret
ds
jmp
imul
and
fsubr
push
mov
ret
loope
ret
scas
inc
adc
inc
std
ret
ret
in
cld
mov
shl
and
sbb
adc
cmpsb
or
mov
popf
dec
loopne
call
mov
inc
fnstsw
imull
ljmp
stos
dec
jae
pushaw
dec
data16
adc
faddl
dec
add
push
xor
add
xchg
addr16
mov
cmp
std
dec
and
outsl
dec
sbb
leave
cmc
mov
outsb
fidivrs
repnz
les
loope
jbe
out
xlat
js
add
outsl
jnp
push
xor
fcos
jl
mov
and
jg
jne
leave
cli
das
les
or
mov
jg
in
adc
pop
stc
in
mov
xchg
clc
pop
dec
xor
xchg
clc
out
insb
scas
xchg
mov
rcrl
mov
std
adc
fwait
sub
dec
xchg
data16
sub
adc
repz
enter
sub
aad
lods
push
outsb
cs
mov
lds
flds
mov
popf
enter
lcall
lods
xchg
pop
pop
mov
mov
mov
lahf
jne
test
push
shrl
cmpsb
jle
dec
sub
test
or
jo
ret
int3
jecxz
mov
mov
push
mov
arpl
stos
push
fs
fs
pop
addr16
mov
pop
pop
out
aas
ljmp
sub
cmp
sub
cld
cmp
fimuls
out
xor
arpl
ljmp
push
fwait
cwtl
inc
and
adc
xor
sub
ret
mov
movsl
cs
xchg
imull
mov
push
out
outsb
mov
jle
adc
or
pop
xchg
aas
jge
out
xchg
cmp
xchg
jmp
outsl
loop
jb
mov
jno
decl
xchg
pop
pop
shlb
packssdw
test
xchg
mov
pop
or
mov
xlat
jb
sbb
cmp
cli
fldt
push
adc
dec
push
adc
cmp
into
cld
clc
jno
pop
pop
ficoms
mov
out
jne
daa
cmp
into
je
mov
cmc
jne
push
sbb
mov
push
enter
pushf
inc
lcall
lahf
adc
mov
hlt
and
sbb
xchg
jne
jbe
sub
mov
mov
orb
rcr
dec
lret
fidivl
mov
mov
hlt
sahf
cld
lret
adc
repz
mov
mov
adc
push
hlt
adc
pop
int
push
test
or
imul
adc
jg
inc
in
test
pushf
lea
jl
sbb
es
cltd
xchg
std
int
andb
aad
xor
push
cmp
mov
push
sbb
cmp
ss
mov
sbb
loopne
push
rcll
popa
jp
add
pop
repz
xor
or
push
in
cmp
dec
movsb
push
jecxz
lahf
cmc
in
cmp
jecxz
popf
push
pop
jno
jge
mov
adcl
out
sti
stos
adc
pop
int3
shlb
mov
mov
cld
xchg
mov
int3
fwait
pop
loop
mov
and
fistpll
mov
jmp
shl
movsb
push
test
xchg
outsl
add
es
andb
fistpl
mov
xor
int
test
mulb
push
mov
xchg
pop
leave
xchg
push
mov
out
fldcw
cmp
and
cmp
inc
clc
scas
out
mov
stos
fisttps
or
aaa
adc
push
repnz
rcr
cmp
or
xor
hlt
cmpsl
loope
es
cmp
mov
inc
sub
and
std
repnz
stc
mov
lock
and
sbb
not
orb
xor
out
popf
das
adc
je
rcl
xor
fwait
adc
push
xchg
ret
nop
movsb
fs
movsb
scas
popf
mov
mov
xchg
test
lret
add
sbb
jle
mov
dec
or
dec
push
sti
push
jmp
lea
push
std
sti
notl
andps
adc
shll
push
jmp
mov
sbb
out
dec
adc
outsl
pop
clc
xchg
imulb
mov
lret
orl
adc
cs
mov
scas
mov
xor
imul
fadds
mov
mov
aas
mov
mov
xchg
sub
push
lea
jae
xchg
jle
notl
insb
dec
inc
xor
inc
add
fcmovbe
inc
les
mov
sbb
pop
fmull
mov
ja
test
jle
fdivrp
mov
pusha
les
popa
dec
jae
inc
ss
add
adc
cmc
xorb
orb
push
data16
dec
loopne
sti
cmc
test
pop
clc
lahf
sti
adc
sbb
int
push
sarl
outsl
shll
roll
outsb
cmp
jle
or
int
pop
hlt
lock
push
repz
mov
cmpsl
mov
fwait
pusha
xchg
sub
lahf
sub
push
in
pop
inc
push
sbb
inc
fmuls
sbb
pop
test
stos
jo,pn
and
js
cmp
xlat
jne
and
sbb
mov
cmpsl
mov
push
repnz
sub
subl
jno
or
es
sub
jbe
jecxz
mov
bound
add
nop
push
rcrb
das
loopne
mov
jmp
iret
mov
loop
jns
popf
aad
out
pop
out
pop
hlt
pop
shl
mov
add
pop
sti
rcrb
mov
imul
xchg
mov
xchg
es
jns
inc
xchg
add
jnp
fwait
push
clc
aas
push
loope
push
daa
jmp
int3
ret
add
addr16
xor
sub
xlat
inc
into
pop
mov
mov
sbb
xchg
sbb
jne
call
shrb
push
mov
xor
adc
lret
jb
mov
outsl
mov
fmull
movsl
int3
cmp
push
lahf
in
mov
mov
cs
push
gs
mov
rorx
arpl
pusha
in
lgs
inc
lahf
leave
andl
sbb
test
dec
push
int3
sub
mov
shl
push
mov
mov
sti
mov
lret
rorl
je
mov
stc
sub
je
lods
fsubl
xchg
sbb
sbb
fsubl
dec
aam
popa
or
dec
aam
aam
test
lret
pushf
fnstenv
out
pop
pop
out
ss
testb
pop
push
xor
fadd
es
push
push
pushf
xlat
dec
sub
pop
cmpsl
cmc
fwait
pop
jmp
cmpsb
inc
js
insb
push
mov
inc
loop
jl
in
xchg
adc
mov
or
aas
out
and
jne
xor
stc
sub
mov
imul
pop
sbb
inc
or
lcall
repz
pop
lods
pusha
jns
jg
jno
fs
xchg
push
push
loope
jl
push
cwtl
or
loope
xchg
inc
push
out
adc
push
xor
jmp
xor
dec
adc
in
iret
fnsave
sub
add
or
mov
or
stos
shrl
sub
rcll
or
sbb
pop
in
pop
push
jae
ja
movsb
or
push
jecxz
pusha
xchg
jbe
aam
ljmp
xor
dec
lahf
and
data16
cmc
xor
or
repnz
xlat
and
int3
clc
fnstenv
icebp
push
stos
or
push
xchg
int3
lahf
rcr
push
push
pop
and
into
xor
xor
jg
jecxz
xchg
in
cmp
incb
in
clc
cmp
adc
push
mov
adc
adc
mov
cmp
xchg
add
mov
shll
enter
cmp
and
adc
cli
cmp
inc
jmp
jnp
jl
xchg
sahf
push
mov
ret
xchg
lods
jo
aaa
cltd
mov
fstps
sbb
loop
loopne
add
les
cmp
xchg
aas
pop
mov
sbb
lods
xor
cmp
or
cmp
add
mov
and
movsl
in
enter
pop
or
out
mov
enter
sub
rcl
scas
outsl
push
inc
mov
jmp
insl
pop
fadds
dec
cltd
mov
mov
lock
push
xchg
loope
pop
pop
lea
hlt
or
loopne
cmpsl
int
mov
adc
mov
xchg
sub
or
dec
arpl
lods
pusha
cmp
jl
andl
fimull
mov
xor
or
out
lods
xor
das
jl
scas
and
adc
and
sub
sti
mov
sbb
jge
add
pop
pop
dec
push
push
push
pusha
int
and
es
add
mov
lods
jl
add
mov
mov
data16
loopne
popf
daa
mov
inc
incb
in
ficomps
lea
jae
popa
aaa
mov
out
shlb
shlb
add
lock
outsb
rclb
xchg
mov
xorb
sub
or
sub
stc
clc
xchg
mov
cwtl
sbb
pop
cmpsl
push
jb
xor
or
xor
sbb
pop
lods
daa
ret
inc
aas
sti
imul
push
jmp
clc
sbb
dec
cmpsl
arpl
or
and
rorb
int
popf
or
loopne
jbe,pn
add
sub
fmuls
mov
repz
add
out
push
xchg
cmc
aad
leave
mov
imul
pushf
or
xlat
imul
pop
pop
lret
sbb
add
imul
or
fistl
cwtl
xor
sub
sub
jo
xchg
jo
xor
push
mov
scas
lds
mov
jns
fnsave
push
pop
sbb
inc
in
ljmp
popl
mov
out
push
addr16
movsl
pop
mov
icebp
fwait
inc
flds
mov
fildll
xor
jg
jecxz
lcall
mov
jae
fimuls
mov
lret
mov
add
lea
scas
sahf
push
jecxz
cmpsl
mov
ret
jmp
inc
mov
imul
pop
idiv
inc
sbbb
jne
mov
out
notl
mov
xchg
fstpt
daa
dec
adc
pop
or
mov
packsswb
adc
push
xor
mov
add
xor
xlat
pop
pop
and
xor
test
push
mov
icebp
cli
sub
nop
cmp
mov
mov
mov
xchg
jg
adc
jb
shrb
in
outsl
test
or
scas
inc
dec
lock
inc
pop
cwtl
pushf
aaa
das
xor
dec
or
aaa
push
scas
add
mov
add
xor
push
imul
and
imul
push
movsl
fisubl
out
push
jecxz
lcall
sbb
out
lea
push
pop
rolb
mov
lock
sbbl
xchg
and
push
dec
jge
pop
jmp
dec
dec
cmp
sub
jmp
in
out
sbb
in
xchg
hlt
cltd
mov
pop
mov
aas
push
fdivrl
xlat
jno
lock
sub
or
push
inc
imul
out
arpl
bnd
mov
lret
mov
cmpsl
dec
outsl
inc
xlat
xor
mov
mov
cmc
jg
add
sub
xlat
push
jg
xchg
pop
cli
outsl
testl
push
push
push
inc
lahf
push
and
test
cmc
test
lds
iret
mov
stc
xchg
xor
lret
shll
out
push
popf
cmp
ljmp
ja
push
hlt
rcl
push
scas
call
mov
fistpl
dec
mov
jae
fstpl
pop
jmp
sub
or
or
enter
xchg
and
rol
xchg
jbe
cmpb
lock
ret
inc
jne
sub
dec
in
adc
jg
or
rcrl
lret
fs
les
sub
xor
dec
cmp
lods
mov
stos
push
pop
sbb
jecxz
inc
scas
clc
mov
test
jb
and
test
ljmp
jns
cmpl
push
jle
insb
in
cli
ss
sbb
or
jne
dec
adc
popa
inc
cmovno
shl
ficomps
sti
mov
inc
jmp
mov
loope
enter
sbb
insl
lods
cmp
shrl
mov
and
and
push
push
popa
es
in
test
ret
pop
sbb
mov
mov
cmp
pop
out
adc
outsl
dec
dec
xor
mov
push
stc
cmc
mov
ja
pxor
or
xchg
sub
inc
ret
and
push
xor
daa
adc
xor
adcb
cli
dec
cli
inc
in
or
cld
mov
call
arpl
dec
scas
roll
pop
rolb
mov
in
mov
jb
mov
mov
xchg
int3
icebp
pusha
inc
bound
ja
jle
jge
mov
lods
outsl
xlat
or
stos
pushf
sub
sbb
in
mov
lea
ret
pushf
mov
jne
imul
loope
xchg
and
test
and
hlt
xchg
leave
out
cmc
xor
dec
pushf
adc
jl
aaa
pop
xor
sub
pusha
fst
fstpl
push
ficoms
mov
mov
xchg
lods
inc
enter
sbb
aaa
in
outsb
cld
dec
xor
insb
nop
sub
in
mov
inc
xchg
loopne
insb
and
jae
push
push
mov
loopne
rcrl
andb
inc
inc
mov
out
adc
imul
pop
xchg
jle
imul
inc
std
sahf
ja
dec
nop
fisubrl
xchg
jne
pusha
push
jbe
mov
and
pop
outsl
pop
or
imul
push
loopne
mov
cmpsb
ljmp
sub
mov
pusha
sbb
xchg
mov
lret
adc
pop
cltd
mov
cmp
mov
add
mov
xchg
inc
push
mov
pop
push
fwait
pop
popf
mov
sub
je
mov
dec
cli
inc
fstpt
add
ret
out
add
rorl
dec
jb
dec
repz
inc
test
jge
imul
xor
ss
outsb
pop
and
outsb
ljmp
imul
enter
lret
imul
out
sub
jge
mulb
mov
rep
es
dec
test
popf
les
inc
sbb
push
movsb
icebp
jae
fucomi
jge
loop
mov
and
int3
adc
jo
lods
cmp
mov
pop
xchg
lock
insl
mov
or
dec
in
js
into
stos
mov
imul
fwait
cmp
fsubrs
or
scas
mov
clc
jecxz
pop
movsl
arpl
std
std
inc
dec
sub
pop
cs
sti
shlb
pop
dec
xor
inc
adc
stos
sub
adc
loopne
sub
nop
sahf
pop
mov
mov
mov
jno
jno
sub
xorb
fwait
push
mov
loope
lcall
or
dec
shl
mov
dec
jp
addr16
int3
test
fsubl
dec
cwtl
or
adc
out
das
adc
dec
mov
repnz
or
ret
xchg
and
js
push
fwait
mov
stc
std
jae
in
mov
inc
adc
sub
xor
lods
pop
nop
cmc
hlt
mov
xorl
mov
stc
sbb
outsl
pop
adc
mov
inc
inc
pop
scas
lods
jle
or
mull
inc
outsb
adc
mov
clc
mov
lock
fidivrl
dec
pop
xchg
into
ds
adcb
pop
pop
sar
sub
mov
mov
js
xor
mov
movsb
jno
add
cmpsl
jns
gs
nop
mov
ja
fsubl
movsl
pop
call
xchg
pusha
xchg
aam
cmp
pop
stc
icebp
cmp
sbb
das
mov
cwtl
pop
mov
mov
in
in
jne
cmp
hlt
xchg
pop
xchg
jno
mov
adc
cmpsl
and
mov
das
mov
xchg
xchg
sbb
xchg
inc
add
mov
push
push
mov
dec
aaa
imul
mov
and
xchg
popa
xchg
in
fisttpl
dec
pop
xor
sbb
inc
pop
inc
pop
repz
in
or
mov
xor
pop
dec
pop
leave
clc
xchg
xor
subb
dec
xchg
inc
inc
cltd
jp
dec
sub
xchg
cmpsb
scas
inc
clc
push
data16
sbb
scas
add
es
mov
dec
imul
enter
cli
int
mov
mov
lcall
ret
repnz
mov
add
lcall
mov
adc
or
sti
mov
mov
jge
sub
sti
sbb
imul
mov
jg
adc
xor
adc
cmp
inc
jge
test
repnz
icebp
adc
adc
pop
lahf
pushf
lret
inc
es
cs
ss
mov
mov
sti
cmpsb
xchg
inc
jns
sti
into
insb
lea
and
mov
sbb
movhps
adc
sub
fs
into
add
divl
adc
arpl
xchg
jns
add
imul
cld
ljmp
and
sbb
mov
addr16
lret
jle
es
leave
cmp
fldenv
jecxz
mov
inc
xor
sbb
sahf
aaa
push
in
aas
adc
or
test
jae
daa
sbb
xlat
fcmovu
fucomi
inc
push
out
push
push
lock
pop
fwait
jg
xor
dec
sbb
aam
sbb
pop
aas
push
fmul
scas
in
addb
pop
out
aad
sbb
cld
call
xor
cmp
insb
outsb
leave
es
mov
rolb
sbb
sti
cmp
ss
fldcw
daa
shrl
and
jp
das
iret
pop
vmovsldup
push
mov
dec
js
clc
mov
mov
mov
pusha
xchg
ja
not
mov
add
sub
dec
mov
mov
cmpsl
negb
mov
adc
and
insb
jnp
add
roll
iret
inc
ss
lret
mov
inc
mov
rol
ret
xor
dec
xor
dec
and
bound
or
cmp
lcall
test
push
lds
mov
add
lock
and
push
mov
jge
in
daa
cli
xchg
andl
test
pushl
pop
mov
enter
adc
sub
adc
adc
in
push
mov
sti
fisttpl
outsl
and
js
pop
jmp
loope
pop
in
inc
sub
out
push
mov
aam
xchg
scas
adc
ficoms
popf
jmp
xlat
add
jmp
jmp
adc
pop
mov
mov
das
test
call
subb
or
fs
jmp
lods
leave
adc
jp
push
mov
jne
daa
push
jae
lds
xor
sub
ret
daa
lahf
pop
imul
ss
jmp
cmpb
xchg
rolb
lods
and
dec
sub
lods
fnsave
and
into
jb
addl
shll
jecxz
stc
out
out
jle
pop
mov
pop
xor
mov
mov
sbb
rcrl
mov
or
add
and
jecxz
cmpsl
mov
stos
dec
pushf
jbe
xchg
int
aas
push
mov
mov
dec
lea
cs
lock
mov
ja
xchg
fnstenv
xchg
addr16
icebp
xchg
cld
add
aas
mov
and
lahf
cs
out
out
rorl
shr
mov
jle
enter
or
push
fwait
mov
xor
sbb
mov
in
sti
inc
xchg
push
sbb
inc
jo
push
add
fimuls
lret
cwtl
inc
push
bnd
push
dec
xchg
sub
sahf
test
adc
pop
cld
popf
loope
shrb
ljmp
pop
pop
fs
cmp
jmp
div
pop
push
mov
jae
testb
dec
sbb
out
data16
adc
push
sub
add
adc
lds
adc
cmp
call
mov
les
push
adc
mov
mov
scas
adc
lret
cld
jmp
xor
dec
mov
popl
pushf
pop
pusha
push
std
add
sahf
mov
clc
jg
sub
cli
daa
dec
clc
jmp
mov
fildll
pop
inc
mov
cs
icebp
rolb
fildl
pop
add
lret
xchg
cmp
inc
loop
orb
xor
icebp
jmp
push
lods
inc
in
lahf
leave
das
sbb
loopne
jae
pusha
cli
loope
pop
sub
jp
cltd
in
cld
jp
int
pop
cmovno
loop
inc
cmp
mov
adc
scas
pop
cmpsl
ud0
mov
ret
iret
xorl
pop
sbb
pushf
pop
enter
dec
jnp
or
jmp
les
lods
nop
fdiv
adcl
jae
mov
push
out
xchg
and
pop
add
das
mov
adc
inc
insb
and
cwtl
cmpsl
ror
adcb
stos
inc
test
mov
imul
pop
lahf
and
adc
mov
push
popa
sbbb
jne
aam
insl
les
stos
in
adc
sbb
in
mov
and
mov
mov
repz
insb
int3
jae
insl
pushf
pop
lods
xchg
inc
xchg
lret
jae
xor
cwtl
or
xchg
aas
dec
ret
aaa
stc
cmc
push
or
xchg
adc
movsl
pop
mov
hlt
pop
add
movsb
inc
movb
xchg
mov
fwait
lea
in
in
pop
and
mov
and
rorl
lahf
call
jge
shl
aaa
arpl
xor
dec
mov
mov
icebp
repnz
lcall
xchg
jo,pn
fucomi
cwtl
cmpsb
or
lahf
rdmsr
adc
or
xchg
mov
pop
mov
fidivs
xor
lret
es
mov
pop
pop
pop
sub
push
movsb
mov
inc
out
inc
push
adc
jae
lret
dec
dec
and
and
inc
mov
and
std
xchg
pop
xchg
push
lret
xchg
push
sahf
clc
test
fmul
push
pusha
jnp
insl
jp
loopne
out
ss
sbb
out
clc
sub
loopne
std
and
xchg
inc
or
out
sahf
jle
xchg
out
cld
rcrl
vphaddwq
popf
jnp
das
das
fidivrs
fnsetpm(287
xor
ret
and
or
cmp
hlt
clc
popa
xchg
mul
lret
pop
aaa
mov
sbb
xchg
gs
push
fistpll
stos
dec
out
iret
jge
sub
repz
lcall
jne
cmp
cmp
aas
adc
popa
sbb
cmp
sahf
xor
cmpsb
rolb
xor
fidivs
sti
aad
sti
xor
pop
push
imul
mov
mov
mov
lret
scas
xchg
and
xor
xor
jle
push
outsl
mov
mov
int
js
pop
sti
xchg
shl
jns
sbb
jecxz
sbb
add
fst
aam
es
les
xchg
lret
lea
fs
jl
fxch
add
dec
test
nop
xchg
aas
out
cmp
mov
out
out
jb
arpl
cwtl
mov
xchg
ret
dec
cltd
mov
fld
pop
in
pop
xchg
cwtl
mov
add
mov
add
jo
gs
inc
ret
add
dec
adc
fstps
cmovle
cmp
pop
arpl
and
aad
sub
xchg
cmp
push
stos
outsl
dec
adc
cmpsl
nop
ret
leave
lret
sbb
sahf
ds
mov
loope
aas
jne
push
or
sbb
lea
xchg
jae
pop
cltd
mov
dec
addl
or
in
cmp
cltd
adc
adcb
xchg
and
pop
pushf
dec
cltd
and
mov
cmp
inc
rcl
sub
test
push
or
mov
lods
adc
inc
fsubl
ja
mov
mov
cmc
mov
adc
and
stos
sbb
cmp
popa
hlt
or
xchg
sbb
je
xchg
pop
xor
sbb
push
adc
mov
cs
pop
out
sbb
xchg
sbb
data16
xor
cmp
xor
outsl
push
mov
mov
mov
int3
mov
xchg
push
add
daa
jp
lahf
shl
xchg
test
negl
lahf
ds
pop
xchg
out
mov
push
xchg
xchg
xor
popa
and
pop
pop
mov
sahf
push
pop
cld
leave
in
ja
push
fcompl
sub
mul
jmp
xor
outsb
jecxz
mov
in
xchg
add
cwtl
dec
push
push
ret
push
fidivs
xchg
in
mov
lcall
push
popl
dec
xchg
leave
loop
in
popl
icebp
and
and
mov
push
or
cmp
pop
or
cmp
in
or
push
sbb
lahf
testb
fildl
adc
mov
add
mov
test
loop
xchg
in
aas
sub
lods
dec
dec
mov
rcl
inc
scas
mov
fwait
ss
loopne
imul
ss
in
and
movsl
xor
push
push
and
sub
inc
pop
mov
rorb
divl
xor
pop
loop
pop
faddp
outsb
dec
mov
xchg
sbb
pop
add
aas
xor
mov
daa
fstpl
cwtl
and
fistpl
sbb
cmc
into
fstl
fdivs
movsl
jp
adc
out
adc
xor
dec
bound
lcall
pop
insb
aam
pop
jge
xlat
enter
lds
into
stc
sbb
stos
gs
cwtl
push
repnz
xor
inc
mov
dec
and
push
push
adc
popa
arpl
insl
data16
or
pop
aaa
jne
ja
das
cmpsb
push
rolb
or
push
push
pop
or
mov
add
cmp
es
aaa
push
aad
sub
dec
and
hlt
cmp
loopne
test
lret
xor
fists
add
jne
dec
mov
mov
sub
or
rcr
test
lds
inc
or
leave
or
cmp
fsub
inc
inc
loopne
inc
pop
out
mov
dec
clc
cmp
clc
frstor
xor
stc
adc
push
out
arpl
or
sbb
pop
out
adc
stos
push
lock
fisubs
mov
jae
sub
push
je
sub
inc
lcall
mov
pop
dec
xor
xlat
test
sbb
test
xchg
sbb
push
ficoms
and
insb
sahf
adc
cmp
pop
dec
jg
push
pop
inc
cmpsl
xchg
ret
mov
mov
test
push
jns
dec
add
mov
imul
adc
pop
pop
rolb
cltd
jmp
cmp
lcall
push
ret
xchg
or
cwtl
movsb
bound
lods
xchg
lcall
add
addr16
daa
pop
add
je
dec
dec
xor
push
jg
jl
sub
mov
hlt
cs
cld
jmp
fwait
test
int
push
jmp
jne
ja
notl
ret
inc
and
fmuls
or
jb
out
adc
pop
loopne
cmpsb
jae
stc
stos
adc
imul
scas
out
add
out
mov
xchg
pop
pop
fldenv
ficoms
scas
mov
setp
cmpsl
push
adc
sbb
out
and
cmp
and
int3
inc
pop
sbb
mov
push
fcmovnu
aas
inc
out
xchg
loop
loop
mov
aas
sbb
fsubrs
scas
push
or
xchg
enter
xchg
popf
outsl
gs
arpl
fdivrs
xchg
jne
mov
shrl
test
call
orb
push
outsl
rorl
lods
sbb
dec
ret
scas
cld
xor
cmp
adc
xchg
popf
mov
push
mov
test
dec
loop
dec
mov
jno
or
xor
movsb
push
cmp
je
je
and
and
jnp
es
dec
neg
cwtl
adc
addr16
jb
or
stos
jg
test
loopne
add
push
and
repz
mov
dec
out
mov
and
icebp
dec
out
scas
sahf
int
inc
xor
cs
das
add
push
lods
push
add
lret
ret
cmpsb
sub
scas
dec
push
jbe
test
lahf
xor
addr16
lock
xchg
sbb
xor
inc
inc
push
in
xor
xlat
sbb
sub
out
outsl
push
cmp
sbb
les
into
cmp
fdivs
mov
push
jle
jle
ficoml
mov
or
dec
pop
add
insl
and
lahf
repnz
mov
jne
enter
nop
rclb
mov
hlt
daa
push
sti
fbstp
xchg
gs
jne
mov
sub
insb
in
jle
jle
pop
mov
fidivrs
mov
das
mov
lahf
roll
lcall
out
in
dec
les
pop
cltd
adc
test
sti
sbb
mov
sub
popf
test
daa
cmpsl
div
aaa
fsubrs
dec
je
addl
pop
lea
dec
mov
lret
std
cmp
les
pop
cwtl
lods
dec
mov
pop
fdivrl
pusha
add
mov
pop
pavgw
mov
hlt
imul
lret
add
jnp
shll
fisttps
add
push
repnz
jae
loope
sarb
dec
flds
jno
sti
pop
or
pop
adc
sbb
stos
jge
inc
lods
shrl
inc
lahf
cmp
mov
mov
repz
into
cld
mov
in
push
inc
mov
mov
sbb
cmc
sub
cmp
xor
and
mov
mov
imul
mov
jns
adc
lds
mov
inc
lahf
lahf
popf
enter
adc
bound
mov
mov
mov
aam
loope
dec
je
test
xor
mov
shr
inc
inc
adc
add
adc
out
cltd
mov
cmp
xchg
push
lock
jge
je
fstpl
add
jp
pop
pop
push
mov
out
mov
popf
inc
outsl
out
scas
in
in
push
xchg
sub
sub
cmpl
push
sbb
or
pop
mov
jp
pusha
jbe
sti
loopne
mov
sub
pop
push
iret
outsb
lea
xchg
pop
xor
mov
mov
es
enter
movsl
mov
xchg
add
ret
orl
mov
ret
lock
xor
gs
and
cmp
int3
sarl
les
jae
inc
clc
add
sbb
adc
test
push
std
insb
sbb
or
and
or
sbb
scas
adc
dec
mov
mov
mov
stos
and
lret
hlt
insb
sahf
cmc
sti
inc
roll
and
enter
mov
mov
pop
stos
into
shr
jns
test
jl
push
mov
cmp
pop
cmp
out
stc
out
into
fwait
mov
bound
jmp
push
aas
shrl
stos
push
xor
shr
jne
xor
into
xchg
aam
cmp
dec
and
pop
fildl
inc
es
stos
mov
cltd
lods
nop
and
mov
sbb
inc
inc
mov
lods
xchg
mov
mov
add
insb
or
jno
aad
jle
add
mov
decl
mov
or
repz
jl
js
call
mov
pushf
push
fstpt
jmp
adc
sbb
repnz
fimuls
test
lret
aam
mov
enter
add
or
pop
sbb
pusha
fldenv
push
sbb
scas
push
sbb
mov
cmp
push
pop
cbtw
imul
mov
adc
cld
mov
and
stos
ja
addr16
repz
mov
faddl
cmp
sub
mov
scas
push
insl
pop
sti
test
jle
jns
ss
dec
das
inc
jbe
mov
lds
in
xor
je
cmp
mov
mov
xor
stc
jecxz
xor
pop
enter
cmp
cli
pop
ljmp
lret
pop
loopne
cltd
in
leave
add
mov
inc
repz
add
ret
adc
rcll
jmp
sbb
packsswb
sahf
fiaddl
stos
out
test
mov
adc
mov
notb
fwait
and
cmp
pop
scas
ljmp
cltd
dec
xorb
dec
push
push
imul
sbb
fisttpll
test
xchg
dec
or
stos
pop
jbe
lcall
pop
dec
sub
decb
jmp
ja
or
and
sti
cld
mov
add
out
dec
mov
loope
inc
or
dec
sub
inc
inc
pop
lcall
pop
xchg
sbb
imul
icebp
sub
mov
outsl
gs
hlt
lods
mov
aas
adc
lahf
idivl
jl
shll
xchg
jo
outsl
rorb
xchg
icebp
inc
aas
dec
fwait
push
repnz
xchg
fdivl
xchg
movsl
dec
and
push
mov
push
push
mov
shll
push
rorl
les
and
int3
xor
in
andb
mov
push
stos
int3
xchg
fisttpl
lds
mov
push
fidivs
in
lods
shrl
les
add
push
in
in
out
pop
scas
cmpsl
adcl
sub
repz
dec
sbb
add
xchg
loope
jae
pop
mov
out
dec
or
cmp
rcrb
bound
and
dec
push
mov
popf
pop
inc
cmp
sub
adc
sbbb
add
cmp
test
daa
push
add
push
sbb
iret
lock
sahf
cli
cmp
test
loope
sti
or
push
jl
pop
imul
inc
jae
mov
and
out
and
push
xor
mov
inc
std
mov
mov
mov
cmovae
xlat
or
dec
leave
test
mov
roll
incl
arpl
or
push
mov
int3
leave
scas
ja
sub
loope
push
lahf
sti
fisttpl
jno
mov
adc
sbb
xchg
add
sti
insl
out
ja
test
cltd
sbb
mov
add
rcll
aam
les
cli
std
in
imul
xchg
jl
rclb
vmovntps
fstl
ds
jg
inc
cmp
fstl
stc
mov
leave
lret
xchg
ja
cwtl
mov
bound
leave
fstpt
sub
stc
cld
les
je
cmp
jp
add
aam
add
lea
les
loope
sbb
stos
gs
testb
push
add
dec
adcl
dec
js
gs
lods
adc
mov
jb
mov
push
cltd
orl
mov
fsubs
xor
jge
popa
cli
loopne
nop
and
add
push
jo
mov
push
mov
rcrb
add
and
xchg
add
and
mov
gs
mov
cmpsb
mov
cmc
pop
mov
clc
inc
addr16
or
addl
mov
fs
data16
mov
mov
jns
cmp
fcom
pop
addl
iret
xor
jge
cmpsl
mov
int3
popa
xor
mov
inc
in
push
jno,pt
repnz
inc
lret
adc
pop
mov
scas
push
jmp
inc
push
pop
js
jecxz
mov
xchg
in
test
cmp
xorl
fwait
shll
dec
rcrb
push
mov
pop
jne
push
int3
enter
ret
mov
test
movsb
testl
fwait
push
mov
mov
mov
clc
cmp
aad
fcompl
aaa
sbb
mov
add
or
xchg
pop
enter
jecxz
and
fildll
enter
xchg
add
movsl
cwtl
bound
mov
lds
movl
jmp
imul
fmull
sub
jge
sub
xchg
insl
inc
xchg
xor
xchg
adc
iret
sar
mov
jne
pop
dec
push
push
mov
add
inc
push
xchg
mov
stc
lds
insl
push
dec
loop
loope
aas
int
sbb
fmull
repnz
xchg
enter
xchg
push
add
in
mov
pop
pop
mov
call
mov
out
fadd
lock
ljmp
adcl
push
aad
cld
sub
push
fldenv
sub
je
fs
not
mov
or
jl
or
outsl
in
out
repnz
lods
dec
daa
inc
push
mov
out
frstor
repnz
jb
ja
clc
pop
in
pop
scas
insb
adcb
push
in
inc
dec
inc
leave
pushl
jno
sbb
shlb
pop
ss
cmp
scas
das
les
push
mov
sub
movsl
pop
sub
lahf
pop
mov
mov
repnz
cmp
lea
ret
jge
mov
pop
cmpsb
test
movsb
repz
xchg
adc
push
xchg
mov
cmc
inc
imul
and
sbb
iret
xor
jg
jns
mov
push
mov
push
daa
push
lock
test
add
and
dec
scas
sbb
inc
mov
scas
push
dec
cltd
fsubrl
sarb
xchg
sbb
mov
and
xchg
xor
mov
push
sbb
or
sbb
enter
arpl
fwait
xchg
popf
ljmp
mov
cs
mov
xchg
xor
fldenv
inc
stos
jno
push
adc
xor
cld
cmp
push
or
outsl
mov
sbb
fdivrs
test
cmpsb
aas
cmpsl
xchg
sub
pop
popa
fwait
jecxz
xor
pop
fdivl
lahf
bts
dec
mov
xor
xlat
pop
jecxz
shrl
cmp
sub
sub
pop
orl
xor
imul
and
cmp
adc
loope
inc
pop
ret
stos
adc
pushf
cltd
and
cli
das
data16
icebp
pop
pop
push
cli
and
shr
ja
icebp
add
and
pop
sahf
leave
xor
xor
push
push
dec
sbbb
dec
dec
pusha
outsb
sub
test
fisubrs
decb
pusha
inc
sub
pop
mov
pop
mov
xchg
decl
and
xlat
adc
stc
fisttpl
cmpsl
les
or
leave
insb
sub
pop
mov
insb
mov
push
popf
in
lods
and
leave
in
mov
jns
daa
cmp
stos
popa
mov
jg
xor
xchg
cmc
fs
mov
ret
shlb
test
inc
fcomi
adc
movsb
dec
jnp
add
nop
aam
lcall
push
pop
out
jmp
mov
vshufpd
sbb
cwtl
lahf
jbe
out
xor
inc
mov
lret
push
shll
fdiv
inc
inc
jg
loopne
nop
jae
lea
popa
popa
fstl
cld
fbstp
addb
cmp
mov
jle
stos
xlat
insb
pop
xchg
mov
adc
shl
add
aad
sbb
adcb
popa
xchg
xor
in
sub
xor
js
add
hlt
ds
cmc
jne
add
loopne
jns
add
imul
xchg
xor
addl
fcoms
push
iret
in
lods
mov
test
adc
test
dec
insl
jl
leave
sub
pop
mov
orl
mov
pop
or
js
rorl
xor
cmp
sahf
mov
and
test
lret
cltd
fidivrs
dec
jp
popf
jo
shrl
inc
out
mov
push
dec
rol
or
xchg
sahf
mov
jno
push
mov
dec
jmp
daa
outsb
mov
add
sub
adc
mov
andb
pop
push
mov
roll
jmp
sub
sub
sbb
cmpsb
jae
fisttpll
fcom
xor
outsb
xor
xor
jecxz
adcl
andb
gs
and
movsb
sub
xchg
daa
jge
leave
mov
loop
in
jne
dec
pop
dec
in
push
shll
imul
add
adc
pop
mov
jle
push
sbb
outsb
push
test
bound
and
fsubrl
enter
xchg
jo
dec
arpl
adc
sbb
fwait
mov
cmpsl
xor
jb
mov
sub
out
rcll
mov
stos
push
sbb
jne
cmpsb
pop
sbb
mov
jmp
aaa
lds
and
fisttps
movsb
jns
lahf
add
scas
pop
inc
xchg
jmp
loopne
push
int
js
sbb
ss
inc
add
fcomip
shl
xchg
pop
cmp
aam
test
repz
jge
sub
stos
sar
cmp
mov
adc
les
or
ss
jmp
out
or
fsubr
jno
pop
cmp
js
pusha
push
dec
fcomp
jmp
test
lahf
mov
xchg
call
xchg
stos
outsl
cmpsl
daa
arpl
ds
ds
dec
sub
daa
xchg
addl
mov
movsl
in
addr16
push
xchg
mov
aas
sbb
cmovno
mov
jae
stc
and
dec
push
xchg
pop
in
push
lock
sbb
and
jbe
and
lret
sahf
loop
out
sti
push
fiaddl
mov
in
arpl
out
mov
xor
dec
dec
sbb
cmp
inc
daa
test
xor
ja
into
lds
jns
jle
mov
arpl
xchg
or
pop
mov
lret
add
je
pop
mov
inc
les
icebp
filds
jns
lret
faddl
hlt
icebp
mov
add
mov
mov
push
iret
cli
jl
out
popf
xor
test
scas
mov
dec
push
and
icebp
sub
mov
and
add
or
enter
pop
in
cmp
pushf
and
add
pop
cmpsb
fisubrs
xchg
iret
in
xor
ja
inc
fwait
jo
es
jns
adc
jae
push
mov
cmp
push
mov
int3
mov
rorl
mov
dec
dec
and
test
out
out
or
push
jne
inc
sbb
int
push
shl
and
mov
shr
jl
jb
sbb
xor
fsubl
push
es
mov
push
jb
repz
enter
jne
inc
jmp
xchg
xchg
jl
negl
mov
adc
push
lods
inc
divb
mov
fstpl
movsb
lret
push
cmp
jecxz
jge
sub
mov
jnp
test
cltd
scas
pusha
cld
test
jne
aam
adc
pop
jmp
outsl
mov
lds
clc
add
dec
mov
xchg
std
adc
std
add
pop
pop
enter
movsl
cltd
mov
push
xchg
inc
icebp
andb
push
pop
and
or
int
or
xor
push
sbb
sbb
sbb
dec
adc
pop
cli
lock
mov
adc
cmpl
cmp
pop
cwtl
lea
pop
adc
arpl
aaa
ljmp
js
les
pop
and
shll
xor
or
push
adc
jge
scas
jle
adc
push
jns
inc
les
imul
mov
add
sbb
and
gs
loopne
dec
mov
jp
outsl
cmp
aad
pop
push
cmp
into
out
loopne
push
inc
sub
mov
inc
testl
shl
push
std
cmp
add
pop
fisttpl
enter
dec
divl
pop
cmpsl
add
andb
nop
push
ds
in
push
and
les
out
daa
mov
lahf
adc
jle
sbb
mov
les
lock
test
push
les
fsubs
sar
dec
movsb
pop
in
fadd
adc
stos
mull
xchg
and
push
shlb
lret
es
psubsb
les
mov
movsb
mov
arpl
mov
cld
add
js
sbb
out
xchg
pop
enter
mov
jae
mov
jg
insl
jp
test
sar
adc
jne
sub
adc
addr16
dec
das
sbb
add
fstpl
aas
inc
mov
stos
cmpsl
inc
mov
sub
icebp
ljmp
jg
mov
enter
es
lock
out
dec
in
es
or
lea
sti
out
lcall
clc
cmp
lea
mov
mov
jp
or
ret
je
cs
pushf
mov
test
or
inc
loopne
aas
outsb
jl
out
movsb
cltd
aam
scas
lahf
xlat
test
sub
and
mov
add
xor
lea
sub
mov
jmp
imul
shl
dec
sub
mov
xor
add
sub
pop
mov
je
inc
pop
fs
xchg
xor
outsl
stc
push
xchg
and
jbe
fisttps
push
pop
and
mov
rclb
lahf
call
popf
test
lahf
adc
jae
jnp
loope
and
stc
insl
stos
and
cld
jp
js
mov
out
sub
clc
cmp
push
cmp
cwtl
push
xor
xchg
setl
das
or
lods
push
outsl
jmp
aam
and
mov
jnp
into
mov
xchg
dec
dec
and
jne
mov
sub
xchg
sub
iret
inc
dec
adc
dec
push
cmp
fstp
cmp
jge
push
mov
add
int3
add
fisubrl
pop
push
sub
add
das
sub
adc
mov
or
and
orl
push
insl
mov
xchg
cmp
add
sti
push
mov
push
and
rorb
sub
mov
jmp
sbb
aaa
mov
ja
mov
mov
pop
push
mov
pop
pop
mov
xchg
jmp
and
mov
testl
adc
nop
insb
or
mov
loopne
mulb
mov
dec
in
adc
jp
pop
jle,pt
hlt
arpl
insl
les
sbb
rcll
insl
stos
lods
xlat
push
push
mov
mov
insl
out
jmp
push
push
or
push
insl
and
aad
stos
lret
stc
push
andb
cs
sbb
jb
jns
or
mov
insl
jecxz
out
adc
lret
out
int3
jecxz
in
into
bound
cmp
push
scas
scas
mov
or
or
stos
mov
lods
nop
pop
loop
xor
insb
lcall
jns
pop
dec
into
mov
into
pop
push
jo
or
add
add
lcall
jge
out
pop
xor
sarl
jg
pop
fdivr
test
cmpsl
sub
mov
mov
xor
fnsave
popa
es
lods
jnp
sub
jnp
int
jmp
mov
nop
test
les
idivb
pop
ror
orb
ljmp
mov
loop
dec
mov
iret
shlb
insb
dec
or
xor
or
sub
rol
pop
scas
xor
and
mov
pop
xor
lahf
adc
negb
adc
loop
clc
fistps
addl
stos
jmp
cmpsl
lcall
cmpsl
sbb
add
in
xor
pop
gs
mov
push
pusha
in
addl
and
add
dec
xlat
cmc
shrl
add
dec
xchg
or
sub
xchg
mov
push
sub
lock
roll
adc
inc
sbb
adc
jecxz
sub
push
mov
adc
pop
aaa
sub
adc
mov
mov
pop
loop
mov
insb
dec
out
sub
mov
stc
adc
sbb
notl
js
loopne
test
adc
ret
imul
es
mov
aas
pop
sbb
ficomps
adc
addb
push
cld
cmp
mov
js
arpl
insl
mov
faddp
rorl
push
out
push
imull
mov
fisubrs
or
xchg
pop
cmp
xor
add
dec
xor
sbb
jge
fwait
clc
sub
sbbb
insb
pop
dec
stos
jle
insl
dec
cmp
lea
sbb
sbb
dec
pusha
stc
xchg
push
insl
mov
lock
jmp
loopne
jecxz
push
push
sbb
loope
cmp
xchg
sbb
sbb
mov
xor
inc
addr16
and
sbb
mov
push
pop
mov
jge
fmul
inc
lret
rclb
jl
insb
push
jecxz
sbb
sbb
int
dec
add
popf
cmpsb
xlat
xor
out
xchg
pop
pusha
cmp
add
nop
mov
rclb
inc
jge
shll
test
xor
jb
aad
lods
adc
lods
mov
mov
sbb
mov
lahf
push
notl
push
in
cmp
rcrb
ljmp
out
mov
outsl
sti
pop
jp
xchg
push
sub
and
shrb
ja
std
sub
aam
add
dec
ret
inc
daa
and
inc
push
pop
test
fld
and
inc
pop
out
out
mov
sbb
inc
pop
pop
mov
fldcw
test
or
cld
mov
mov
or
adc
push
ret
mov
cmp
pop
nop
dec
sbb
push
in
mov
mov
mov
fldl
loop
and
push
out
fs
pop
mov
rcrb
push
push
lcall
into
int3
or
stc
sbb
inc
lea
lss
sbb
lahf
je
mov
stos
push
push
ret
daa
fisttps
jle
shll
mov
divb
je
fiaddl
aas
push
add
enter
stc
inc
stos
sub
aas
test
rcl
pop
lcall
outsl
sbb
cld
cmp
sbb
adc
inc
and
push
push
rcll
clc
popf
cs
jb
push
sarl
sarb
das
sbb
cmp
fdivrp
push
data16
push
pop
inc
inc
pop
dec
mov
jmp
or
lea
daa
sub
shll
mov
pop
in
iret
or
jecxz
inc
inc
jge
and
stos
inc
and
xor
jge
sbb
or
sub
push
jo
push
xor
add
aam
push
push
mov
mov
out
jle
ja
and
or
push
jmp
mov
call
je
xor
xchg
shr
pop
pop
jle
shlb
in
call
sub
or
shll
sub
and
stc
ret
in
es
clc
ss
lret
inc
inc
sub
xor
xor
mov
insl
mov
test
sub
sub
and
pop
jb
int
subl
xor
xlat
adc
aam
xor
scas
add
add
jb
mov
sbb
cmp
add
in
mov
push
test
fldenv
movl
jmp
xchg
les
sub
loopne
push
ljmp
test
push
stos
popa
out
inc
out
add
adc
rorl
jbe
cld
mov
lcall
cs
incb
lcall
or
testl
pop
mov
cmp
add
dec
dec
jae
nop
cmc
xchg
ja
xor
sbb
mov
es
inc
in
test
and
mov
std
or
mov
jno
or
and
fildl
scas
xor
leave
sub
loopne
xor
push
into
mov
insl
lret
dec
fs
jb
imul
rolb
inc
dec
add
into
movsl
add
cmpl
shll
ljmp
sub
icebp
mulb
xor
out
rol
dec
stos
inc
xchg
cmp
jp
faddp
fidivl
add
jl
loop
mov
cld
push
mov
or
xchg
neg
lret
test
call
push
orl
add
outsb
aam
or
enter
into
xor
push
jge
loop
inc
int3
push
or
push
cmpsl
cmp
mov
inc
int
pop
cmpsb
cli
xchg
sbb
cmpsl
je
sub
aad
test
out
ljmp
repz
fs
xchg
ds
test
iret
dec
sbb
sarb
add
shll
les
cmp
movsb
mov
fdivs
sbb
and
lods
xchg
loop
cmpsl
xchg
ret
mov
in
xor
or
dec
insl
push
inc
pop
jne
inc
sub
jmp
push
addr16
out
test
lahf
inc
dec
push
lods
das
pusha
aad
mov
pushf
push
notb
scas
mov
daa
jno
stos
fstpt
push
stos
arpl
daa
mov
dec
xor
pop
mov
inc
pop
outsl
arpl
mulb
adc
outsl
int3
xor
incl
fsubrl
mov
loope
jae
dec
cmp
mov
push
movsb
out
es
mov
popa
adc
test
xchg
repnz
inc
cmp
or
jp
xchg
mov
xchg
push
fimull
cmp
outsl
or
sub
push
xlat
jnp
adc
test
test
sub
loop
cmc
cmp
and
push
lock
in
rcl
xchg
mov
clc
int
mov
pop
pop
cld
mov
jb
mov
or
loop
insb
xor
test
jae
mov
and
jbe,pn
stc
out
mov
enter
nop
dec
sub
int
and
lahf
jge
jle
cmp
shll
ljmp
jge
loopne
jnp
and
sbb
push
gs
sub
xor
into
sbb
jge
loopne
jo
pop
rcr
pop
sahf
mov
push
ss
insb
jge
daa
imul
dec
mov
xor
dec
cs
das
mov
xor
mov
inc
testb
push
bound
push
arpl
dec
rcr
jge
loope
jp
enter
xlat
dec
mov
popfw
pop
lods
addr16
pop
mov
lahf
icebp
popf
aaa
push
cmp
andb
fldenv
push
bound
incl
cmp
outsb
fwait
aad
lret
mov
or
inc
pop
in
jecxz
mov
sbb
pop
test
lods
adc
popl
mov
mov
sbb
lock
leave
int
dec
xchg
out
mov
cmp
out
inc
adcb
jno
cmp
mov
jg
pop
add
sbb
and
mov
andl
or
cmp
rolb
icebp
icebp
or
iret
sbb
daa
mov
sbb
in
shl
rcrb
rorb
lea
jg
cmp
jp
add
dec
imul
push
inc
xor
push
cmp
jp
mov
jne
shrb
loop
imulb
and
sub
sub
jecxz
out
ficoml
lahf
xchg
and
sahf
add
cmc
sbb
add
rorl
icebp
ljmp
jb
daa
movsb
jmp
gs
daa
push
int3
aam
or
sbb
pop
mov
cs
daa
inc
mov
cltd
add
mov
push
and
sub
or
mov
pop
in
cltd
jne
lsl
lret
cmp
or
loopne
stos
or
lock
bound
lret
lods
sub
shl
jmp
enter
sahf
addb
sub
jge
sti
adc
mov
int
xor
dec
inc
pop
leave
xor
add
sbb
pop
das
iret
push
shll
fistl
outsb
add
mov
nop
jne
mov
stos
push
les
out
push
pop
cmp
test
scas
mov
inc
sub
sub
pop
dec
add
pop
pop
or
aaa
dec
sub
fstl
imul
rcr
jmp
add
push
in
ds
lcall
cmp
shrl
insl
pop
stos
mov
mov
pushf
mov
adc
das
xchg
fcmovb
aad
in
xchg
fnstsw
out
call
inc
pop
xor
fdivs
push
xchg
shl
pop
xor
arpl
aad
mov
and
in
pushf
popf
and
in
jecxz
pop
inc
notl
sbb
insl
lea
mov
jecxz
repnz
adc
ss
mov
mov
fldt
repnz
mov
cmp
imul
dec
sub
sarb
out
stc
loope
inc
pop
push
mov
sbb
add
push
pop
lods
fs
add
jo
cltd
or
std
in
cmp
test
inc
scas
inc
pop
pop
popa
pusha
push
pop
push
inc
repnz
mov
outsl
icebp
and
fimull
ja
mov
jnp
lret
loopne
shlb
repz
xor
lods
and
mov
aaa
push
or
mov
ljmp
add
repnz
add
shll
jmp
lods
xchg
out
mov
inc
push
rorl
jge
ljmp
mov
sub
jmp
mov
gs
hlt
add
xor
movsb
xchg
mov
cmp
pop
sbb
push
pushf
rcll
push
icebp
out
fisttpl
xchg
mov
or
cwtl
aas
rclb
adc
shlb
dec
movsb
jo
push
imul
jmp
push
cmpsb
xchg
push
cmp
scas
call
adc
lods
fdivl
and
adc
xchg
or
pop
pop
test
pop
out
es
cmp
cli
add
push
add
mov
loop
pop
pop
mov
dec
data16
push
cmpsl
pushf
pop
je
cs
pop
mov
andl
icebp
outsl
mov
aam
mov
inc
into
cs
push
data16
push
push
push
mov
push
adc
rcr
sub
push
push
es
cmp
loope
or
test
sub
or
mov
aad
rcll
aaa
enter
adcl
mov
cmp
mov
adc
or
fs
sub
cmp
sub
xchg
stc
and
shll
sbb
jne
push
dec
call
xchg
adc
mov
out
mov
cmpsb
repz
aam
xchg
pop
mov
mov
adcb
xlat
test
insb
push
js
ljmp
dec
pop
scas
dec
cmpsb
gs
jbe
inc
dec
mov
aas
jnp
mov
sbb
sar
dec
int
mov
scas
fcmovu
xor
mov
pop
jo
movsb
fwait
testl
adc
rcrb
fcomp
mov
cmp
cld
mov
mov
pop
push
dec
aas
les
and
fisttps
or
leave
jo
bound
adc
mov
cmp
mov
jne
popa
pop
ret
mov
mov
dec
movsl
jge
mov
lcall
sub
hlt
fwait
scas
imul
mov
dec
mov
sahf
pop
xchg
iret
xor
daa
mov
sub
push
sbb
push
xor
mov
push
inc
rorb
and
pushf
scas
and
xchg
mov
dec
aam
sub
dec
inc
mov
pop
mov
stos
and
ret
add
fwait
inc
add
cmp
mov
in
xchg
or
mov
push
rclb
je
adc
jecxz
push
cmp
jnp
fwait
xchg
adcl
and
sub
dec
enter
lods
mov
mov
pop
dec
sub
enter
mov
es
pop
mov
pop
shlb
jge
or
adc
push
cmp
dec
mov
push
int3
push
addr16
stos
jns
xor
pushf
jns
ds
out
push
inc
cltd
shrl
pop
jl
pop
decb
adc
sbb
mov
into
dec
xchg
jne
mov
sub
push
pushf
into
push
bnd
xor
push
jne
dec
cmp
xor
mov
dec
jle
sarl
fstps
je
dec
add
jb
or
sub
lret
mov
or
xchg
sbb
lock
or
jmp
nop
int3
testl
icebp
push
adc
xor
jb
xchg
push
mov
ret
pusha
xor
out
clc
mov
js
aad
leave
lret
inc
and
adc
in
dec
or
stc
shrl
fsubl
shrl
fistpl
pop
jno
inc
sub
insl
or
inc
xor
test
hlt
movl
and
mov
ss
xchg
lock
scas
and
pop
mov
jne
dec
mov
xor
repnz
cld
dec
sub
xchg
and
enter
loop
adc
push
pop
rcr
and
push
lods
mov
push
and
add
cmp
lods
xor
and
shl
loope
add
and
lock
imul
rcrl
popa
jp
cli
icebp
adc
hlt
xchg
iret
jecxz
popa
faddl
sub
lods
cmp
inc
fiadds
loope
insb
pop
mov
mov
and
push
hlt
lods
mov
insb
mov
adc
and
in
inc
push
push
std
mov
jecxz
xchg
push
cli
cmp
stos
cltd
lods
in
mov
xchg
test
add
lahf
and
sub
shlb
sub
mov
and
lods
push
iret
and
push
cmp
push
pop
sub
cmc
loopne
ds
sub
xor
lds
ljmp
add
pop
or
and
push
mov
enter
in
push
popw
jo
lret
sbb
push
cmp
jmp
sub
sub
mov
dec
outsb
mov
cmpb
jbe
add
fidivs
xor
xor
or
aam
shlb
ret
test
out
mov
es
fdiv
adc
jecxz
xchg
jne
push
out
dec
jb
inc
out
mov
adc
push
sub
iret
or
add
jae
scas
xchg
pop
mov
int
cmpsl
mov
insb
jae
scas
xchg
mov
mov
dec
stos
or
in
lret
inc
pusha
mov
cld
and
sbb
into
adc
fwait
dec
push
addb
jg
jg
outsl
pop
movsl
push
mov
dec
xchg
inc
cmp
push
sbb
mov
idiv
and
sub
jp
lahf
fadds
push
mov
pop
or
xchg
dec
cltd
jns
and
xchg
mov
pop
xor
nop
and
lods
push
outsb
mov
orb
adc
pop
lds
add
push
in
subl
cwtl
roll
mov
int3
xor
cs
fstps
pop
sub
sub
ret
fwait
xchg
ret
es
mov
inc
mov
rcr
imul
dec
lret
outsb
cs
xchg
adc
movsl
and
cmpsl
push
lea
pop
jecxz
pop
movsl
mov
rorb
and
iret
ret
das
adc
in
ficomps
clc
xchg
test
popa
push
or
cli
and
mov
pop
mov
rcl
cmp
nop
insl
into
clc
inc
sahf
out
or
enter
lods
mov
ja
xchg
push
push
rcrb
sbb
mov
bound
je
insl
push
aad
pop
pop
pop
or
push
inc
adc
cltd
scas
cwtl
mov
jnp
and
cld
insl
dec
or
lahf
in
insb
push
mov
orb
dec
sti
test
hlt
sbb
mov
cmp
out
in
jne
ss
jns
rcrl
jl
pop
punpckhdq
hlt
data16
pushf
dec
es
adc
mov
pop
popf
cmp
sti
lahf
xchg
imul
hlt
push
daa
xchg
nop
or
jno
push
push
lret
out
xor
scas
stos
lret
inc
sbb
mov
aam
add
push
dec
cmpsl
fiadds
stos
stos
push
cld
xchg
addr16
leave
fistpll
das
cmovbe
xor
ljmp
outsl
sub
push
push
lods
mov
sbb
into
mov
sbbl
push
mov
lods
lcall
push
inc
test
ret
dec
out
mov
cld
cmpsb
sarl
ss
xchg
cmpl
dec
fldcw
fimuls
and
xor
inc
or
push
pop
jge
aam
outsb
xchg
mov
lods
adc
mov
mov
mov
lods
jae,pn
inc
inc
inc
inc
push
jecxz
inc
push
jp
sbb
mov
inc
shll
mov
xchg
mov
add
mov
inc
xchg
mov
adc
test
rclb
mov
mov
push
leave
subb
rcrl
incb
in
pop
movsb
mov
sbb
pop
xor
imul
call
aas
ljmp
sarb
mov
jae
icebp
mov
xor
push
and
inc
lods
jl
mov
in
sahf
dec
out
fisubl
test
xchg
fmul
jno
ljmp
push
addb
mov
pop
jmp
movsl
mov
xorb
ds
inc
add
xlat
mov
xchg
sub
gs
mov
repz
loopne
push
enter
pushf
mov
into
or
jg
cmp
dec
stos
or
test
inc
je
outsb
sbbl
mov
sarb
js
push
lds
ds
and
ljmp
inc
idiv
ljmp
das
add
cld
mov
out
dec
rcr
ret
mov
push
sub
push
jne
ja
adc
push
inc
adc
push
push
bound
adc
lahf
incl
push
xor
dec
xchg
sbb
mov
or
insb
les
cmp
and
fbstp
xor
jecxz
mov
ret
out
fisttps
mov
mov
adc
jb
shll
xchg
js
lds
int
add
cmpsb
push
and
pop
mov
pop
xchg
pop
int
jmp
and
push
inc
push
xor
and
lds
iret
jg
or
test
xor
into
pop
push
andb
mov
sub
fiadds
bound
clc
jp
jl
xor
jl
xchg
inc
push
jg
outsb
adc
adc
cmp
xchg
and
or
insl
lods
mov
pop
fmuls
inc
outsb
fcomi
or
sarl
mov
pop
pushf
fcomip
xchg
imul
stos
sbb
lea
orb
cmc
add
inc
adc
mov
cmp
mov
cmpsb
mov
sahf
pop
mov
mov
jbe
imul
xchg
ret
nop
repnz
mov
pop
and
adc
mov
adc
cmp
sbb
sahf
shrb
imull
add
xchg
dec
add
sbb
iret
adc
lds
jo
pop
ds
push
stc
mov
int
sub
loope
push
mov
sbb
repz
mov
push
sbb
mov
call
ret
shrl
stos
scas
shrl
loope
xorl
sbb
or
dec
mov
lahf
addr16
mov
gs
rcrb
dec
arpl
sub
rcrb
test
sub
push
test
push
jno
inc
inc
xor
test
test
mov
xor
pusha
xor
and
gs
sbb
xor
arpl
aad
scas
jecxz
bound
dec
lods
mov
xchg
jle
or
inc
test
call
mov
xor
xchg
dec
sub
outsb
adc
push
jnp
sub
mov
and
sub
pop
bound
lock
mov
jl
imul
cwtl
push
inc
add
dec
mov
popf
mov
lret
mov
push
cmp
pop
mov
outsb
jno
les
ljmp
gs
iret
dec
sub
mov
clc
jecxz
pushf
aas
push
jecxz
lods
mov
ret
mov
bound
into
repz
scas
mov
jge
stos
loopne
mov
stos
sub
jb
in
js
loop
mov
pop
pop
mov
cmc
leave
inc
aam
sbb
movsl
out
popf
jo
cmp
mov
adc
js
jo
xchg
xor
stc
xorl
cwtl
das
insb
xchg
xchg
sub
xor
dec
push
pushf
pop
fisttpl
or
stos
mov
das
testb
dec
cmpsb
mov
jmp
sti
sub
jae
test
loopne
aam
loope
xor
pop
xlat
mov
cmp
lret
aam
repz
out
std
sub
adc
arpl
pushl
and
ds
sahf
fs
sbb
xor
cwtl
pop
ficoml
clc
xchg
or
pushf
cmp
in
mov
fdiv
aas
int3
fstl
mov
ss
mov
iret
and
cwtl
in
outsb
cs
aad
push
cmpb
mov
jno
xchg
pop
aam
or
pop
dec
inc
dec
sub
mov
ret
sti
jmp
out
sub
inc
cmp
push
cltd
inc
out
imul
adc
add
mov
outsb
call
out
and
push
notl
out
les
cld
and
sti
ss
in
movl
stos
stc
in
and
mov
lret
outsb
sbb
and
sahf
push
adc
sbb
mov
mov
imul
adc
in
test
jge
xchg
add
jnp
jecxz
aaa
jecxz
sbb
jg
xlat
stc
lcall
pop
ds
push
inc
stos
scas
lods
sbb
lock
adc
add
jle
and
sub
jmp
push
dec
in
ficoml
add
mov
pop
jae
push
xor
mov
adc
lds
dec
fdivl
jno
lock
stc
push
lods
mov
xchg
dec
es
aas
test
mov
pushf
mov
jnp
cwtl
inc
int
outsl
push
int3
jecxz
and
push
daa
jmp
inc
pusha
sub
add
push
sbb
cmp
pop
movsb
jbe
es
repz
negl
out
or
imul
outsl
je
jmp
ret
fcomps
add
test
iret
shl
inc
aam
adc
lea
mov
push
fcmovb
inc
dec
mov
mov
adc
pop
jecxz
jo
push
js
gs
push
js
mov
lea
pop
push
pop
js
mov
ds
jecxz
or
ret
mov
cmc
cli
jge
cmp
mov
loop
mov
in
xor
je
xchg
push
mov
in
rcl
mov
insb
cld
push
lcall
subl
xchg
cmc
shrb
mov
sarb
mov
inc
and
xorl
mov
sub
aam
cmp
imul
iret
mov
iret
and
cmp
mov
adc
out
inc
xchg
or
fnstenv
jmp
add
push
out
mov
int
jnp
cmp
test
arpl
xor
or
test
mov
sbb
div
roll
cmp
or
dec
dec
nop
and
fistps
mov
out
insl
and
filds
xchg
mov
mov
lret
addr16
scas
dec
scas
lahf
inc
rorl
int3
cmp
pop
jg
xchg
cmp
inc
cltd
test
mov
jno
pushl
aad
jb
cmp
inc
mov
hlt
push
lods
sbb
mov
or
in
or
xchg
push
cmpsl
mov
push
paddq
lock
sub
inc
in
cli
stc
mov
call
add
pop
push
push
enter
dec
xchg
call
xchg
pop
xchg
pop
daa
movsb
dec
or
pop
mov
divps
shll
push
loop
jecxz
add
in
xor
mov
jo
and
lahf
icebp
inc
pop
lock
mov
mov
xor
add
daa
jmp
dec
mov
pop
adc
es
mov
add
fsubrl
jnp
jb
aaa
lods
jne
sub
mov
xor
out
stos
mov
js
xchg
ret
inc
dec
mov
test
push
stos
cmpsb
les
mov
fdivl
xlat
mov
scas
mov
xchg
lret
inc
inc
add
cmpl
iret
xor
push
pop
mov
sub
mov
jno
outsl
and
sbb
daa
cmp
cmp
adc
jge
lods
pop
jmp
jg
mov
arpl
aad
xchg
sti
bound
mov
pop
inc
ret
dec
leave
xor
jns
sbb
scas
sbb
cmp
inc
pop
mov
cmpsb
popf
sbbl
lds
inc
aaa
cs
jns
incl
mov
pop
cmc
inc
out
clc
insb
test
test
fsubl
jae
je
enter
push
je
adc
andl
inc
out
popf
adc
repnz
fs
xlat
sbb
loop
inc
shr
les
pop
es
push
fmuls
inc
int
lea
flds
lock
dec
push
mov
pop
xor
or
daa
jnp
iret
mov
dec
enter
sub
ret
inc
cli
xlat
jo
add
or
bound
lds
jae
add
push
pop
fcoml
xorb
fwait
rcrl
pop
mov
xchg
test
pop
lds
stos
jmp
inc
ljmp
pop
int
fsubl
mov
xchg
xchg
jo
mov
lret
jbe
sub
jg
jmp
or
imul
int3
or
sbb
pop
jmp
testl
scas
lods
das
mov
roll
xor
push
sarb
add
movsl
dec
test
push
pushf
pop
pop
push
call
movsl
mov
cs
xchg
fidivl
jg
sub
pop
movsl
or
push
and
in
xor
nop
xchg
dec
insb
adc
out
ret
sbbb
pop
push
loop
aaa
mov
inc
ljmp
idivl
stos
xchg
and
or
cmp
data16
push
rclb
push
xchg
addr16
pop
push
xor
repnz
cmc
into
add
sarl
stos
or
push
adc
add
jmp
sbb
pop
test
push
cmp
xchg
jno
pop
pop
and
push
cmp
push
mov
sbb
std
movsb
xor
xlat
dec
fidivrs
lods
popf
and
flds
inc
lods
add
sub
hlt
mov
lahf
jnp
imul
loopne
xor
xchg
cs
lahf
xor
aam
xchg
icebp
mov
mov
and
jno
cmp
mov
mov
lcall
xchg
unpckhps
push
test
fcompl
cltd
sub
mov
xchg
addr16
decl
push
push
inc
xchg
movsb
out
cli
std
mov
pop
jne
jg
jns
mov
dec
out
pop
fcoml
stos
ret
lods
xor
ret
scas
jmp
ds
add
jp
mov
mov
dec
sub
xor
mov
inc
xor
shrd
sbbb
sub
sbb
movsl
cmp
jmp
jle
pop
addr16
hlt
shl
fs
push
rol
xor
es
inc
mov
push
and
mov
test
xchg
mov
adc
xchg
cmp
and
ret
pusha
xor
inc
fldt
xor
daa
push
mov
adc
xor
stc
mov
insb
daa
mov
push
loope
stos
mov
insl
xchg
lea
xorb
mov
lods
and
cmp
lds
mov
out
scas
pop
int
push
ret
shrb
push
xchg
push
mov
xor
xorb
cmp
mov
jbe
cmp
sub
cmp
xor
lods
cmp
negb
call
add
scas
fadds
dec
jb
insl
or
xchg
mov
fmull
imul
add
lahf
addb
sub
cmc
je
push
jns
push
adc
dec
test
jecxz
cld
daa
sbb
jne
or
lods
xor
jecxz
xlat
movsl
jns
mov
cld
mov
xchg
or
dec
ss
cli
cs
iret
fcomip
cli
sub
inc
outsb
dec
cwtl
test
adc
push
and
mov
lock
and
xlat
sbb
xor
shlb
aam
mov
in
jnp
push
repnz
arpl
cmpxchg
push
fcoms
aam
xchg
call
dec
or
fistps
imul
xor
add
adc
insw
sub
jle
je
cmpsl
lods
lcall
in
stos
xchg
mov
scas
jno
xor
and
outsb
sbb
clc
fs
imulb
scas
mov
xchg
ror
cmp
xchg
loop
jmp
mov
nop
and
bound
xchg
push
in
shll
das
add
jo
push
aam
je
jp
push
pop
xchg
mov
inc
test
sbbl
pushf
sub
jl
mov
std
sub
rolb
ret
dec
es
sbb
mov
shlb
add
xchg
xchg
xchg
in
mov
cmp
and
push
push
or
add
test
and
add
popa
mov
or
repnz
inc
stos
dec
sbb
imull
in
add
int
ret
fisttps
lret
mov
jge
push
inc
in
das
cmp
cmc
repnz
jae
cmp
cmc
sbb
mov
lods
mov
mov
ret
out
jnp
js
movl
sub
mov
testl
dec
or
hlt
xchg
mov
ss
iret
mov
addr16
push
push
mov
push
add
cmp
lcall
jae
cmp
inc
push
shr
cmpsb
mov
xchg
xchg
mov
sbb
fistps
iret
pusha
std
ljmp
cmp
jmp
mov
in
int3
adc
mov
xchg
loope
cmp
loopne
icebp
cmp
push
loope
lods
xor
pop
cmpsb
sbb
push
pushf
mov
cmpsl
bound
lcall
stos
lret
mov
push
mov
test
out
int
les
ss
add
pop
jle
or
js
jne
jb
add
dec
lret
mov
xchg
inc
jg
xchg
dec
loop
fadds
push
out
test
ja
aas
cmp
dec
imul
outsb
jae
mov
xchg
add
xchg
scas
test
sub
sti
cmp
mov
mov
adc
push
xorb
in
jecxz
lret
enter
das
pop
lahf
lock
inc
popa
loop
ret
jmp
lahf
ja
out
cmpsl
scas
lahf
mov
fiaddl
xchg
jns
push
dec
lahf
xor
daa
lock
adc
aad
and
icebp
ret
cwtl
jl
stos
js
jo
mov
pushl
cli
inc
pop
pop
push
cmc
into
ljmp
mov
or
enter
adc
lret
movsb
loopne
inc
push
cmp
mov
xchg
call
inc
lods
js
imul
outsb
cltd
add
fstpt
dec
rorl
sub
sub
les
jge
popf
xlat
ret
mov
sub
mov
push
mov
and
push
sbb
mov
add
cmpsb
mov
add
cltd
inc
pop
sbb
or
push
mov
lahf
cmp
cmc
inc
pop
ffreep
push
xlat
out
subb
hlt
or
imul
in
pop
push
nop
or
stc
pop
xchg
aam
add
andb
fs
mov
push
mov
push
mov
rorl
test
mov
mov
lea
imull
dec
sbb
jns
mov
aam
mov
mov
enter
jmp
cmp
sbb
out
data16
adc
shlb
and
jmp
dec
lea
lods
sub
xchg
mov
dec
ja
pop
call
cmp
sub
jbe
outsb
mov
and
push
test
daa
mov
push
cmp
sbb
out
mov
sub
sbb
out
stc
add
cmpsl
xchg
sub
rcrb
daa
add
test
sub
pop
loopne
or
fisubrs
lahf
ja
imul
adc
sbb
out
xchg
mov
outsl
mov
mov
bound
mov
sbb
sbb
mov
outsb
addr16
jmp
mov
sbb
nop
roll
inc
call
xor
mov
psrlw
inc
call
lods
subl
loop
repnz
adc
sahf
mov
clc
push
mov
mov
add
or
sub
mov
lret
mov
xchg
stos
lea
jb
mov
mov
jne
mov
push
push
fadds
out
inc
jbe
fs
add
mov
out
sub
push
in
inc
jnp
xchg
jmp
ret
xchg
mov
ja
out
cmp
mov
lret
outsl
pop
lods
push
andl
pushf
fistpl
dec
sbb
inc
cmp
inc
pushf
popf
pop
adc
push
add
stc
fistps
lahf
mov
push
lds
pop
addb
incl
hlt
rcrb
jae
or
pusha
sbb
xchg
nop
shrl
xchg
mov
pop
jno
cmp
fidivrl
dec
hlt
or
in
fidivrl
adc
loop
push
imul
mov
sub
lock
loope
jbe
rolb
imul
gs
xor
lahf
hlt
push
repnz
popa
xor
shrb
imul
xchg
leave
popa
push
maxps
out
pop
pushf
sahf
movsb
or
cmc
cmc
jp
outsb
pop
dec
sub
adc
dec
addr16
pop
and
mov
mov
adc
cmpl
in
int3
inc
imul
xor
inc
lret
lock
or
movl
dec
ficoms
ret
jnp
insb
mov
mov
fistpl
bound
loopne
inc
aas
jb
pop
ljmp
jle
ret
xchg
pop
mov
sbbl
adc
movsb
mov
inc
shll
and
jg
mov
stc
jbe
fistps
rorl
inc
dec
push
ret
pop
push
mov
out
mov
inc
repz
lahf
pop
inc
mov
leave
ds
push
jne
xchg
popa
nop
mov
cmp
loop
cmc
and
mov
adc
dec
rorb
movsl
mov
push
imul
sub
or
sbb
ss
mov
stos
out
les
push
mov
pop
push
movsb
push
sarw
jecxz
scas
lds
mov
lret
jnp
push
in
push
cld
icebp
mov
icebp
cmp
jbe
mov
arpl
add
xchg
inc
or
xchg
jg
das
shlb
ret
xlat
popf
dec
xchg
in
xchg
and
cmp
xor
mov
lea
mov
or
pop
clc
test
fcomps
std
je
and
in
mov
in
cld
addl
jecxz
loop
jmp
test
cmp
shr
mov
mov
pop
shrl
pop
imul
cmpsl
inc
outsl
fisttpll
loope
lock
jo
pcmpeqw
imull
inc
adc
popf
mov
or
in
rorb
or
cwtl
push
cmp
imul
jae
daa
mov
filds
pop
mov
jl
mov
ss
mov
out
mov
ss
push
pop
push
rclb
in
fmuls
push
stos
lock
orb
mov
mov
mov
lds
fistps
push
lods
nop
std
sub
dec
pop
dec
ja
lods
dec
mov
cmp
std
push
mov
repnz
out
push
imul
push
pop
pop
jp
pop
sahf
and
add
stc
mov
add
cmpsb
add
or
sbb
xchg
dec
sti
cli
iret
or
inc
daa
jecxz
push
mov
and
imul
adc
arpl
pop
adc
cmp
mov
imul
shll
mov
xchg
shlb
lock
jecxz
mov
push
jne
jp
adc
mov
idivl
pop
push
in
packuswb
pop
jmp
popf
imul
cltd
out
cmp
out
add
and
outsl
insl
push
jae
jle
or
shll
mov
xchg
pop
in
mov
push
inc
pop
cmpsl
jmp
ja
loop
pop
mov
mov
mov
stc
mov
sti
adc
je
jno
clc
int3
dec
pop
es
cmp
lret
jl
adc
xchg
mov
xchg
xchg
ret
jle
inc
jl
icebp
es
inc
mov
mov
rclb
push
clc
and
loop
cmp
in
sub
or
and
pop
inc
mov
and
arpl
aad
scas
dec
and
cmp
adc
push
pop
jge
and
push
out
mov
push
std
fwait
dec
push
std
and
addl
jo
sub
jp
rcrb
sub
cli
mov
and
mov
je
push
dec
les
cmpsl
cmp
push
shlb
adc
pop
cmp
add
out
xchg
pop
push
and
dec
sbb
push
sub
xlat
loop
lds
fdivrs
mov
clc
dec
loop
adc
imul
xor
mov
repnz
test
push
and
inc
xchg
xor
mov
test
loop
and
rorl
inc
icebp
insb
xchg
xorl
jne
cli
mov
dec
mul
cmp
fidivrs
movsl
inc
push
mov
dec
or
leave
dec
cmpb
or
div
and
inc
cs
outsl
sbb
xor
jno
ja
faddl
inc
arpl
fldl2t
jae
and
mov
addr16
push
and
xorl
sbb
movsl
movsl
cmp
lret
loop
sbb
push
call
cmp
cmp
cmp
int3
sbb
or
mov
mov
fimull
out
es
int3
mov
lret
cwtl
fisttpll
arpl
xor
jae
add
pop
fistps
mov
sarl
cmp
sub
and
sub
xchg
das
or
das
nop
sub
fucom
add
push
mov
xor
out
ds
cmp
adc
cmpsb
cmp
dec
mov
aaa
jbe
adc
imul
add
and
sarb
les
pop
xor
int
or
pop
in
insb
shlb
test
in
pop
adc
sbb
adc
push
scas
xchg
repnz
pop
leave
sbbb
jmp
popa
fs
andb
push
aaa
stos
push
cmpsl
in
outsb
or
add
inc
sbbl
in
popf
stc
fnstsw
cmp
xchg
cmp
mov
fsts
ret
cltd
lea
pop
daa
out
pop
xchg
ljmp
rorb
push
push
enter
aaa
mov
mov
mov
daa
mov
shl
test
pop
mov
out
dec
cmp
lea
mov
addr16
fldl
arpl
je
stos
jb
mov
xchg
xchg
mov
add
imul
jo
mov
movsb
call
adc
out
dec
sahf
add
in
es
imul
mov
xor
xchg
rolb
adc
push
fwait
mov
fsubr
fwait
lds
cmpsb
xchg
jno
and
dec
inc
push
aam
xchg
adcb
mov
jle
cmc
repz
test
or
jb
xchg
aas
jge
push
push
mov
cmp
sub
call
sbb
or
cmp
int3
or
test
adc
aad
inc
into
insb
mov
jle
clc
cmc
in
loop
or
lea
add
xchg
fsubrl
or
js
decb
lds
lcall
and
cmpsb
out
sbb
loopne
testb
scas
xor
mov
xchg
rorb
fisubrl
stc
xor
jmp
mov
inc
xor
fimull
push
jno
and
push
jmp
ljmp
xchg
addb
test
and
and
iret
lea
mov
push
xor
xor
sbb
push
into
lcall
push
dec
cmp
jne
std
jbe
ja
xchg
and
es
push
in
sbb
jae
rclb
or
push
addr16
mov
and
pop
test
pop
push
negb
cmp
lea
testb
mov
inc
loop
fs
mov
mov
mov
adc
sarb
jecxz
movsb
clc
pop
mov
stos
ljmp
inc
jae
std
sub
dec
pop
mov
cltd
or
push
imul
mov
out
push
and
xor
out
pusha
jp
or
sub
push
data16
xor
cmp
test
cs
adc
stos
and
push
mov
xor
out
pop
pop
in
loopne
jo
sub
push
clc
int3
adc
jge
outsl
sub
iret
inc
push
sbb
jl
xchg
sar
stos
adc
push
adc
push
stos
dec
jmp
frstor
sub
pop
arpl
shlb
pop
push
inc
sbb
dec
aam
mov
jecxz
inc
std
in
jb
fimuls
xor
loope
sub
jae
popa
arpl
mov
ficompl
bound
pop
pop
and
adc
cli
xor
add
outsl
cmp
insb
adc
mov
addr16
xchg
sbb
insb
cmpsb
dec
and
xchg
mov
outsl
outsl
or
repnz
inc
je
xor
fwait
fs
add
adc
ficoml
xor
rcr
test
jecxz
ljmp
mov
xchg
or
call
push
mov
and
clc
and
lock
icebp
std
repnz
ds
sub
cmp
mov
incl
cwtl
sbb
cmpsl
inc
pop
lret
sub
jmp
shl
cli
jle
sbb
push
cmp
pop
dec
out
xlat
xor
mov
xor
andb
adc
in
push
cmp
lret
add
mov
jl
jns
aas
lds
rorl
call
ficompl
ljmp
shl
or
popf
mov
imul
jno
push
or
das
pop
loop
push
out
mov
or
andb
mov
jns
sub
sub
das
aaa
pop
jnp
scas
jbe
out
shll
ljmp
rolb
clc
mov
push
xor
mov
xchg
insb
insb
push
scas
out
pushf
lahf
repnz
push
add
shlb
pop
push
in
dec
adc
subb
ss
sbb
dec
or
mov
std
data16
mov
das
inc
pop
and
xchg
movl
into
lret
popf
sub
adc
push
fcomp
stos
mov
xor
adc
xor
sbb
bound
dec
sbb
mov
or
fmull
fcmove
sub
movsb
inc
xchg
pop
mov
jp
stos
test
in
xchg
ja
imul
fldcw
imul
cltd
xchg
lds
out
cmpl
fldcw
repz
jge
cs
repz
mov
stc
aad
mov
mov
cmc
adc
cmp
cmc
fidivrl
ret
out
jne
push
test
jo
gs
add
sbb
shlb
jns
cmc
dec
push
scas
sbb
and
loope
ljmp
push
insl
dec
mov
ljmp
imul
cmp
jo
pop
and
sbb
ds
mov
cmc
scas
in
sbb
jg
dec
cmpsl
jecxz
lods
jns
mov
inc
mov
jle
push
sub
pop
lds
outsb
cwtl
and
fucom
jnp
jp
push
sbb
cmc
stc
filds
xlat
les
ret
jl
inc
sarl
mov
out
push
fs
addr16
or
jo
mov
aam
push
loop
dec
inc
imul
mov
pop
mov
jle
ret
pop
fcmovnu
mov
iret
dec
jl
mov
ljmp
jge
mov
jb
push
jecxz
inc
lods
push
fidivs
lods
into
push
ret
jge
js
pop
xor
lcall
fldenv
mov
xchg
dec
mov
and
es
adc
ficompl
sub
or
aam
loopne
pop
mov
lods
cli
loop
cmp
mov
jnp
rolb
orb
jne
dec
dec
out
push
pushf
xorl
jo
cmc
add
sbb
cmc
bound
mull
mov
movsl
adc
sub
sbb
or
and
and
sbb
ficoms
out
in
inc
mov
cmp
sub
int
aaa
push
addr16
out
pop
xor
imul
nop
testl
push
lock
adc
jae
fcoml
dec
add
imul
sub
test
ficoml
jns
or
jmp
into
cmp
push
adc
add
lret
xor
or
push
sahf
imul
xlat
push
push
push
dec
daa
or
sbb
xor
mov
mov
pop
js
je
in
push
and
push
dec
jns
xchg
mov
push
popf
sbb
data16
imul
icebp
inc
or
int
sub
int3
dec
push
sbb
adc
xchg
pop
in
inc
loopne
xchg
sub
adc
mov
push
jle
mov
sbb
pop
insl
arpl
inc
xor
sahf
jns
sub
int3
lds
sahf
push
nop
sub
pop
ja
or
xor
test
sbb
mov
ss
repnz
xchg
mov
push
dec
xchg
jmp
jmp
jl
decl
shrl
mov
mov
je
insb
sbb
clc
andb
in
in
pop
pop
push
mov
scas
jbe
sti
movsl
fiaddl
daa
sahf
lock
mov
mov
adc
mov
bnd
bound
xchg
into
mov
mov
dec
or
mov
sbb
sub
dec
xor
ret
pusha
inc
lea
loopne
or
fwait
mov
xlat
insb
cmp
ret
xchg
mov
mov
adc
sbb
push
jne
jecxz
inc
loop
adc
std
add
or
inc
bnd
sub
pushl
rcl
inc
repz
push
mov
into
cmp
out
aas
and
push
roll
mov
cmc
clc
in
dec
and
jle
mov
cmc
lds
call
jecxz
xor
int
xchg
mov
push
mov
test
ret
or
imul
loopne
mov
stos
cmc
pop
test
jmp
in
inc
stos
fisubs
mov
mov
cmpsb
xchg
lods
js
call
imul
pop
es
dec
imulb
mov
adc
inc
mov
adc
repz
and
sbb
xchg
popa
cmc
mulb
repz
push
popa
out
push
test
test
push
addr16
lods
das
xor
xor
jecxz
std
lds
inc
mov
cmp
in
adc
mov
mov
pop
cmpsl
daa
jmp
sbb
fimull
or
into
aaa
pop
sahf
jmp
loop
in
aam
lods
cmpsb
xchg
or
pop
or
pop
sbb
push
scas
test
xchg
es
mov
js
cltd
popf
mov
inc
ds
sbb
jmp
addl
ja
and
sub
sbb
adcb
sbb
test
jmp
or
pusha
negb
or
shll
imul
je
andl
or
add
call
loop
xchg
mov
je
test
test
movsb
or
ret
mov
icebp
insb
or
ss
add
or
insl
insl
out
call
push
ret
jae
test
test
push
dec
push
rcrb
fdivrl
out
or
in
xchg
sub
mov
inc
ret
cmpsb
add
in
add
dec
lahf
push
dec
add
mov
add
mov
mov
adc
sbb
stc
call
pop
outsl
das
sub
aaa
out
pop
negb
push
cmc
mov
and
jge
sub
mov
rorl
imul
sbb
inc
cwtl
push
ja
dec
inc
mov
sub
out
or
negb
adc
fwait
add
leave
cld
sbb
inc
mov
sub
iret
shlb
test
mov
push
icebp
rcl
aaa
lret
sbb
inc
test
fwait
int3
out
sub
inc
cmpb
sbb
fdivl
jne
pop
cmc
push
in
mull
mov
out
lods
cltd
in
dec
sti
std
and
mov
adc
fsub
fs
xchg
jg
movsb
sbb
aad
in
mov
xor
push
mov
mov
enter
xchg
push
xor
mov
sub
outsl
hlt
insb
and
sbb
add
test
sahf
pop
aas
ss
test
add
cwtl
dec
hlt
jp
test
les
mov
in
pushl
stc
ss
push
adc
jae
dec
fstps
sbb
mov
decl
mov
int3
push
cmp
stos
inc
cmp
pusha
je
xlat
in
push
push
fwait
inc
xor
push
into
iret
movsl
push
ret
gs
adc
or
dec
inc
fildll
lcall
cmpsb
idivl
repnz
cmp
out
ss
inc
xchg
mov
cli
adc
pop
loope
cs
aaa
sbbb
jbe
jo
cmpsl
mov
jge
xor
xchg
dec
inc
hlt
cmp
nop
idivb
xchg
pop
inc
jno
pop
add
mov
arpl
add
pop
leave
popf
mov
push
sbb
mov
pop
and
push
push
sbb
mov
movsb
sbb
jnp
jae
sub
sarb
test
pop
clc
inc
jmp
repnz
ret
dec
xchg
sub
out
xor
idivb
push
mov
inc
push
pop
addr16
lea
scas
add
or
cmp
icebp
jecxz
jmp
add
add
pop
mov
mov
in
gs
mov
sbb
push
test
test
inc
push
test
sbb
loope
into
lret
ss
jecxz
xor
dec
sti
and
cli
stc
mov
mov
or
nop
inc
cmp
mov
and
push
sub
gs
in
icebp
add
jge
push
ficoml
dec
cmp
xchg
lds
jbe
cmp
test
je
mov
pushf
sahf
mov
fnstcw
sarl
out
popa
movsb
sar
jmp
push
inc
aad
sub
cmp
add
jno
xchg
jno
incl
subl
mov
cmc
fidivrl
jmp
jp
rcr
mov
sub
pop
enter
int3
shlb
pop
mov
inc
mov
test
pop
in
dec
ret
sti
fwait
push
repz
mov
insb
in
scas
mov
bound
dec
mov
push
fisttps
inc
xchg
xchg
and
mov
mov
outsl
ljmp
adc
and
pop
enter
lock
xchg
sbb
iret
pop
dec
xchg
inc
fwait
xchg
push
loope
jb
aam
inc
or
cmp
push
les
xor
lcall
cltd
negb
jb
xor
fwait
add
out
arpl
mov
and
push
xor
pop
mov
daa
push
stc
mov
test
sbb
jg
mov
sub
push
mov
lods
sbb
ljmp
mov
fstpt
or
push
push
mov
adcl
out
scas
xor
out
cs
lods
add
insb
adc
xchg
test
jge
mov
push
test
or
inc
cmpsl
mov
fcomps
sub
xchg
js
jns
sahf
or
call
dec
adc
xor
mov
push
aaa
test
push
insb
cwtl
xchg
adc
and
repz
cld
add
imul
jge
test
mov
aaa
mov
and
cmp
mov
das
mov
arpl
test
lcall
xor
jg
mov
xchg
cwtl
mov
rorl
cmpsb
cs
add
cld
push
dec
repnz
sub
repz
nop
cli
mov
in
cmpl
ja
and
data16
jge
add
das
les
cmp
leave
stos
jb
insl
jne
adc
test
repnz
sbb
pop
in
or
fstpl
fldenv
pushl
cs
pop
imul
adc
sbb
mov
mov
shrl
add
call
pusha
mov
inc
mov
lcall
xor
dec
mov
xor
shlb
pop
dec
sarl
pop
jecxz
mov
ret
roll
push
gs
dec
pop
and
and
inc
cmp
scas
pop
mov
insl
loop
and
cmp
nop
pop
xchg
leave
loop,pn
mov
fsubrl
sub
add
out
jle
inc
sbb
leave
mov
lea
jns
xchg
pop
outsb
out
test
fmul
mov
adc
cmpsb
and
jmp
mov
add
mov
fists
cltd
cltd
fs
cmp
jbe
xlat
mov
sbb
orl
inc
push
cld
adc
addr16
push
lahf
enter
shll
or
or
pushw
push
fildl
insl
xchg
ljmp
inc
inc
xchg
inc
sub
lret
aam
mov
jae
int
stc
lret
subl
and
dec
sub
insb
or
lds
mov
hlt
ljmp
pushf
movsl
add
in
es
jo
jp
mov
cmp
aam
in
lods
xchg
movsl
aaa
sbb
stos
ss
aaa
dec
out
out
dec
mov
pusha
test
cs
cmp
lods
cmp
pop
xchg
fsubp
enter
mov
std
cmpb
adc
xor
sbb
nop
clc
dec
dec
leave
or
add
sub
xchg
test
into
pop
xchg
pop
sub
cmp
push
insl
stos
fmuls
aad
push
lock
fdivs
loop
mov
or
ret
push
and
mov
push
insl
xor
mov
sbb
gs
aas
jle
jnp
mov
xchg
jbe
in
jbe
dec
mov
ss
pop
inc
movsl
ret
mov
or
xchg
lods
mov
in
adc
pop
sub
mov
jnp
insl
xlat
inc
dec
mov
das
push
mov
in
shl
je
mov
lods
adc
sbb
addr16
dec
in
jecxz
ljmp
sub
aad
or
aaa
mov
pop
outsb
adc
sub
jmp
fs
push
push
adc
out
push
lods
or
lcallw
ret
sub
jmp
mov
mov
push
cwtl
les
cmp
jnp
aaa
dec
adc
xchg
mov
push
sbb
inc
jne
call
fmull
jle
lods
pop
outsl
mov
int
mov
shl
push
jle
mov
inc
enter
out
or
fiaddl
jp
in
jbe
mov
adc
sub
sbb
cmpxchg
add
aad
sub
pushf
mov
mov
aaa
fcmovb
push
pop
xchg
mov
jnp
sub
pop
idivl
pop
fwait
or
push
jb
mov
stos
cltd
incb
xchg
cmp
jmp
in
cwtl
lret
cmp
push
xchg
push
jne
xchg
lret
pushf
pop
pop
sub
push
fbld
pop
into
out
sub
and
jp
dec
push
lea
das
icebp
add
test
mov
lds
mov
aad
cmp
cmp
or
sub
pop
adc
fsubr
jl
shll
enter
mov
inc
lea
addr16
lock
mov
lcall
mov
xchg
idivb
cmp
dec
out
fistpll
cmp
dec
pop
lods
push
jns
xchg
rorl
mov
adcl
mov
fs
scas
ret
adc
cmc
sbb
dec
or
pop
stos
outsl
test
cltd
lock
xor
fdivrs
sbb
fiaddl
sub
idivb
dec
ficoms
pop
push
or
mov
inc
sub
pop
mov
int
ja
jmp
insb
mov
sub
jmp
ljmp
cltd
mov
cmpsb
sub
sahf
inc
mov
and
add
pop
mov
jmp
pop
gs
adc
stos
cmc
insl
repz
push
popf
icebp
add
xor
push
mov
and
jle
aam
int3
adc
mov
gs
sub
negl
push
ss
mov
mov
and
sbb
adc
push
xor
outsl
adc
lret
jo
jae
mov
mov
cs
cld
add
mov
or
bnd
xor
push
orb
into
outsl
test
jl
xchg
ret
inc
xorl
push
dec
push
pusha
mov
sahf
jmp
lods
fisubrs
push
cli
pop
fimull
xchg
mov
ss
push
cmp
cmp
mov
lods
pop
test
test
std
add
ret
or
repnz
movsl
adc
or
pop
lea
leave
aas
les
jno
hlt
popf
iret
int
mov
pop
inc
ss
xchg
pop
es
xor
fildll
inc
negb
inc
or
cld
mov
nop
imul
inc
mov
nop
movl
fsts
sub
mov
cwtl
jp
scas
movsb
pushl
adc
loopne
ljmp
mov
flds
pop
mov
push
jno
dec
adc
push
jb
lock
orl
inc
inc
dec
dec
insl
testb
cmp
push
cltd
xor
add
or
out
pop
icebp
mov
clc
fs
dec
popa
js
lock
jae
sbb
sub
push
ja
mov
sub
aam
rcll
jae
add
sahf
not
outsl
and
adc
fwait
sti
ret
sub
movsl
sbb
pop
sarl
out
cmpsl
or
mov
cmc
xchg
ljmp
std
fucomi
ficomps
jg
adc
insl
ret
mov
adc
cmc
cmc
loopne
mov
mov
jmp
test
sub
sarb
ret
jns
adc
sub
shlb
adc
mov
and
xor
repz
aad
sub
xchg
mov
imul
xchg
cli
adc
rcl
test
rorl
push
in
aad
mov
lock
jb
mov
dec
dec
cmc
sarl
push
rcrb
jnp
jbe
mov
mov
sbb
jne
pop
lods
data16
iret
insb
sbb
sti
fneni(8087
sub
outsb
dec
cmpsb
fmuls
xor
icebp
mov
lds
pop
test
mov
ffreep
cmpsw
sbb
bound
in
fstl
cmp
cmpsb
cld
test
ret
movsb
mov
cmc
sahf
dec
std
push
ljmp
cmp
outsb
pop
sbbb
nop
mov
ljmp
push
and
sub
jo
mov
dec
jb
sbb
cmp
adc
popf
jo
lret
inc
jl
aas
insb
xchg
add
insb
dec
in
call
xchg
dec
sbb
test
inc
xor
or
daa
add
cmp
out
or
mov
je
dec
jecxz
cld
mov
jl
insb
pop
in
outsb
stos
jp
in
cmp
bnd
sbb
pop
jb
call
mov
out
frstor
cmc
loope
shrl
jecxz
fs
in
cmp
fsub
ja
lods
mov
stos
lret
push
fsubrl
and
jmp
orl
xor
jmp
pop
ja
fisubl
lods
std
lock
cmp
movaps
or
popf
mov
cmp
sbb
movsb
adc
das
jp
outsl
jmp
test
outsb
or
lea
andl
repz
jo
push
mov
rcll
xchg
mov
ret
push
xor
nop
int3
sbb
sbb
data16
cmp
xor
adc
mov
lret
adc
xchg
sahf
lods
xor
icebp
push
nop
inc
das
dec
lret
jge
xchg
test
dec
hlt
subps
rcr
inc
xchg
mov
roll
imul
icebp
adc
xor
push
sbb
lods
push
dec
adc
in
ret
fwait
push
mov
cli
fmull
daa
call
xchg
cmp
fistpll
jg
hlt
orl
fucomp
pop
in
and
cmpsl
into
jne
lds
js
test
jno
stos
mov
mov
bnd
or
mov
pop
ss
flds
inc
loope
out
subl
mov
inc
xchg
push
pop
outsb
push
push
lock
add
loope
aad
xor
mov
out
nop
xchg
jns
xchg
xchg
das
xor
sbb
das
test
mov
pop
in
and
cmp
push
rcll
int
data16
xchg
sub
cmc
xchg
scas
inc
push
xor
jp
push
inc
lret
aad
loopne
out
leave
sbb
fistpl
mov
ljmp
aam
push
sbb
std
push
pop
xlat
mulb
ds
or
add
ds
or
inc
leave
pop
imul
iret
push
and
aas
adc
lea
int3
inc
mov
jmp
addb
scas
or
mov
sahf
sti
pop
repnz
xor
insl
gs
je
call
aam
push
clc
mov
imull
inc
inc
es
xchg
pop
and
mov
fstps
jno
fwait
pop
lahf
lret
adcb
fnstsw
enter
xchg
or
lock
cmpsl
bound
adc
and
dec
bound
cmpsb
mov
mov
push
xchg
push
dec
ret
mov
xor
movsb
lods
xor
xor
movsl
shrb
addl
jbe
jne
out
stc
mov
std
test
ret
subl
cld
xlat
xor
sub
fimull
xor
shll
inc
sbb
adc
and
cmp
jb
xchg
scas
into
sahf
icebp
xor
enter
inc
pop
push
inc
add
sub
inc
lret
jl
cmc
scas
mov
ret
lret
sbb
lret
dec
push
pop
ret
cmp
lods
pop
pop
fstl
pop
pop
xlat
pop
pop
dec
sbb
out
sub
add
push
fsubr
fwait
inc
outsl
mov
ss
push
repz
out
inc
push
adc
add
cld
outsl
in
adc
bound
mov
dec
aad
es
or
push
es
out
jae
cmp
lahf
out
fstpl
mov
test
xor
sub
mov
ret
mov
mov
dec
scas
mov
mov
adc
lods
xchg
xor
or
insl
mulb
and
dec
aam
leave
push
add
mov
adc
lret
mov
movsb
mov
pop
in
rep
pop
cmpl
frstor
push
inc
into
cli
and
add
xchg
dec
in
push
sub
seto
cmp
sub
cmp
out
sbb
test
ja
fisubs
leave
out
push
fldl
cmpl
or
jnp
shl
mov
jne
or
mov
add
or
stos
xchg
in
ficompl
stos
sbb
xchg
dec
cmp
jge
data16
adc
mov
pop
sbb
mov
jg
mov
test
dec
out
push
dec
add
aad
or
xor
push
push
lret
pop
test
xchg
add
xor
jo
and
fcoml
push
jae
push
xor
jge
les
aad
adc
mov
lds
cmp
call
mov
mov
sub
and
or
test
or
imul
cmp
dec
or
mov
scas
xor
fstpl
enter
arpl
outsb
cmp
sub
xchg
push
jnp
sahf
jno
push
dec
or
stos
negl
mov
bound
mov
xor
mov
cmp
xchg
data16
jmp
xor
inc
push
fdivs
xchg
sbb
mov
inc
add
sbb
jbe
inc
adc
cmpsb
cmpsl
div
lcall
xor
inc
pop
xor
sub
insb
sahf
jnp
les
lods
and
lret
mov
jb
jle
in
aas
mov
iret
sbb
je
es
sbb
dec
imulb
les
push
push
mov
fiaddl
lret
push
call
mov
dec
jmp
inc
dec
dec
adc
and
add
repnz
pop
in
ror
and
cmc
scas
jecxz
and
ss
fnsave
nop
mov
ret
daa
mov
xor
rolb
xchg
lea
and
stos
inc
cmp
pop
fisubl
cmc
mov
add
es
out
inc
pop
iret
fsts
in
jmp
mov
push
cmp
aad
in
push
pop
and
mov
adc
lock
xchg
add
enter
cmp
xchg
inc
push
mov
push
testb
push
loop
adc
test
insb
ror
and
push
orl
loop
sub
xlat
cmp
into
imul
add
into
leave
xchg
mov
stc
je
push
cmp
cmp
xor
adc
int3
adc
push
sub
pop
cld
js
lret
adc
clc
push
mov
push
rclb
pop
sub
in
hlt
pop
or
xchg
adc
jne
rcr
mov
cld
jo
loope
xor
push
xor
sbbb
addb
mov
and
adc
pop
fists
daa
pop
sbb
and
mov
jbe
ss
xchg
xlat
pop
test
clc
movb
fidivrl
push
xchg
iret
addr16
lock
lods
mov
and
inc
xor
or
or
bound
mov
sub
mov
popf
mov
addr16
outsl
inc
je
movsl
mov
shlb
subb
imul
xchg
cmp
pushf
jp
pop
push
or
cmp
inc
insb
out
les
hlt
or
xor
sbb
add
or
cmp
pushw
aam
js
dec
dec
mov
ljmp
lds
mov
outsl
jge
gs
mov
cmp
push
sti
mov
es
cmc
stos
pushf
mov
and
es
push
loopne
sahf
mov
sbb
lret
adc
push
enter
ret
std
test
cld
int
bsf
outsb
test
fs
mov
cwtl
mov
idivb
nop
and
add
pop
sub
loope
loop
arpl
fsubrs
test
ucomiss
and
adcl
push
ret
test
insl
orb
jmp
into
ret
lret
mov
mov
sahf
jno
test
ja
jb
xchg
or
jns
leave
enter
cwtl
outsb
bound
lea
mov
out
add
jl
int3
adc
mov
loop
adc
xchg
pushw
add
sub
push
das
mov
cwtl
in
cmp
ret
ror
inc
popf
push
mov
orl
add
fsubr
in
imul
dec
nop
mov
enter
and
and
test
out
xchg
pop
and
dec
pop
rorb
fistpll
pop
cmp
xchg
repz
cltd
lods
testb
pusha
xchg
cmp
or
subl
dec
push
and
daa
inc
inc
jb
inc
push
xor
lods
leave
aaa
aas
jl
xchg
into
add
or
mov
adc
mov
lods
jg
xor
ljmp
imul
cld
sbb
mov
into
cli
sub
cmp
pushf
pop
loope
cmc
lods
repz
cmp
mov
inc
pop
fwait
push
and
jge
push
inc
pop
push
adc
dec
addr16
adc
les
push
nop
inc
push
push
or
test
jmp
setbe
mov
outsl
ret
ja
inc
fistpll
mov
jle
decb
xchg
cltd
xor
mov
jns
xor
stc
out
sbb
xor
xchg
insb
pop
pop
rcr
testb
das
jmp
push
imul
push
insb
push
push
jp
xor
iret
pop
cwtl
cli
movsl
pop
pusha
mov
mov
outsl
or
es
jbe
imul
add
xor
hlt
mov
xchg
or
and
sub
dec
push
aam
lahf
sbb
or
sbb
xor
mov
loopne
cmp
test
jnp
and
jnp
in
sbb
cs
addl
xlat
nop
jns
cltd
in
push
jle
lods
scas
scas
xchg
imul
test
pop
xor
fdivl
jne
cmpl
inc
lock
out
pop
ret
ss
mov
std
mov
clc
lock
fdivrs
pop
insl
stos
jg
sbb
inc
sub
push
push
pop
mov
sbb
or
and
divb
fisubl
fdivl
pop
cld
mov
loopne
fisttps
jne
test
mov
shll
xchg
push
adc
in
push
aaa
sar
out
add
sti
arpl
pop
repz
int3
ficomps
or
lret
xchg
xchg
in
jbe
mov
mov
mov
aaa
leave
add
cmpsb
jecxz
xorl
out
adc
hlt
adc
mov
or
mov
jnp
mov
pop
int
clc
lods
push
mov
test
jecxz
jp
mov
cmpsl
or
xor
lcall
add
mov
inc
push
pusha
ja
xor
add
out
dec
mov
or
and
je
mov
fdivrl
fsin
pop
jae
fisubrs
sti
inc
jno
or
xor
sub
mov
mov
jb
xchg
pop
data16
bound
sahf
jge
push
movsb
pop
sbb
dec
clc
pop
mov
and
and
push
or
add
cmc
rcr
pop
dec
xchg
and
icebp
je
sub
mov
scas
daa
inc
outsb
mov
xor
push
jp
push
xor
mov
int
aas
testl
shrl
fbstp
push
pop
mov
shlb
mov
or
std
jb
jo
mov
xchg
je
aam
pop
jb
inc
lret
js
jmp
push
xchg
add
stc
push
mov
fwait
insl
aas
insb
xchg
std
das
pop
mov
shrb
pop
in
inc
xor
enter
sub
fiadds
push
xchg
and
fwait
sbb
push
pop
outsl
mov
push
scas
lds
fdivl
aas
jns
mov
add
mov
sbb
jb
push
or
or
outsb
loope
sarl
popf
jnp
and
pop
xorb
dec
jo
cld
pop
std
mov
iret
andl
and
das
cmpsb
sub
jns
enter
cmpsl
outsb
leave
or
leave
mov
fwait
cltd
or
mov
stos
ja
mov
push
adc
ljmp
bound
imul
push
iret
mov
pop
push
jb
jno
mov
cld
inc
dec
call
jo
mov
push
sbb
loopne
dec
cmpsl
testb
ljmp
push
sub
inc
mov
cmp
sub
das
adc
rol
fwait
rcrl
dec
jg
jl
or
jp
mov
setno
dec
push
popf
int
ficoms
in
addl
mov
enter
push
add
push
add
push
test
jns
mov
add
xor
lock
dec
int
sahf
scas
pop
lds
test
push
sbb
dec
jb
jb
push
push
icebp
xchg
jmp
cmpsl
jg
mov
js
lcall
or
jns
insl
cmc
insl
out
mulb
mov
test
sahf
in
ja
push
push
sub
call
add
loope
jb
and
clc
das
scas
jno
data16
cld
dec
and
pop
inc
not
sub
cmp
cmpsl
inc
and
dec
imul
adc
ret
out
pop
fldt
xor
imul
loop
adc
jmp
aad
xchg
test
push
iret
add
mov
into
adcl
or
orl
fsubs
or
aas
sbb
into
leave
jb
dec
sbb
add
dec
fwait
adc
ret
push
xchg
push
jne
dec
out
mov
inc
add
sub
jmp
test
inc
mov
popf
outsl
insb
lret
push
sub
inc
daa
or
xchg
mov
mov
xor
rol
push
mov
mov
in
loopne
arpl
cmp
push
cmpl
xor
jb
cli
std
sub
push
push
sub
cmc
int
notl
pop
lret
inc
gs
out
ret
lret
lock
aad
dec
fstl
mov
mov
jnp
js
mov
pmuludq
out
leave
daa
ret
mov
repz
in
lock
loope
loopne
sti
sub
icebp
outsb
outsl
mov
mov
jmp
stos
rclb
cmpsb
ja
popa
fcomps
mov
rcrb
push
lret
lods
cmp
dec
mov
and
js
pop
jae
push
add
lcall
fimull
popf
cmp
pop
add
pop
adc
aad
cmpsb
lods
int3
cmp
sub
inc
push
enter
mov
pop
mov
sbb
imul
mov
xor
add
push
cmp
fwait
cmp
push
in
out
pop
jl
xchg
lods
or
xor
or
dec
sarb
loopne
pop
sbb
mov
mov
mov
or
sub
pusha
movsb
je
addr16
fbld
jg
mov
sub
test
ret
or
out
cmpsl
lahf
stc
add
jb
jns
fs
mov
cmp
mov
test
icebp
dec
cmp
fists
jmp
cwtl
les
and
aaa
or
dec
mov
push
xor
repnz
dec
ljmp
push
insb
stc
mov
mov
pop
fisubrs
sub
out
lea
lock
pop
jmp
jmp
xor
out
jp
sub
xchg
sahf
mov
and
mov
add
sbb
shrl
xchg
or
inc
xchg
loopne
mov
cld
and
mov
push
out
ljmp
imul
call
adc
mov
idivb
cmp
pop
add
mov
pop
data16
outsl
fdivs
mov
sarl
xor
pop
out
fldcw
test
inc
insb
stc
iret
xchg
movsb
pop
and
xor
mov
divb
subl
aam
cli
mov
inc
pushf
dec
lods
mov
ret
dec
push
std
inc
popf
shlb
aaa
data16
push
pop
dec
aad
gs
in
iret
lds
fdivrs
repnz
inc
insb
adc
push
lea
pop
jmp
sbb
push
mov
int
xchg
inc
pop
mov
lock
stc
lret
fidivrs
mov
mov
jno
lds
arpl
push
or
sub
mov
cwtl
pop
mov
mov
mov
xchg
loopne
xchg
or
mov
ja
xor
push
jns
lcall
xchg
dec
xchg
lods
inc
fstl
idivb
cmp
sbb
rcrb
mov
bound
xor
sub
mov
popa
mov
push
sar
xor
and
jg
push
sti
mov
adc
pop
scas
jns
js
jne,pn
dec
ss
scas
mov
xchg
adc
push
jle
sbb
push
insl
xchg
div
les
les
daa
mov
push
sub
out
xor
cli
jae
jmp
xor
stos
inc
jle
jne
pop
aam
jae
jb
xchg
scas
cltd
xchg
loope
dec
mov
mov
lods
xchg
lret
fbstp
xchg
sbb
stc
dec
push
pop
sbb
and
orb
fs
xor
addr16
dec
dec
xor
fidivs
jl
mov
add
adc
es
push
repnz
jl
xchg
insb
addr16
scas
loop
push
in
add
in
push
cmpsb
push
xor
out
mov
xchg
pop
stc
cmp
pop
je
push
movsb
repnz
xor
clc
jg
jo
lret
lods
pop
js
pop
fs
add
cmp
scas
push
inc
out
cmp
sahf
add
cltd
jbe
pop
cmp
adc
sbb
int3
inc
call
outsb
sub
add
mov
arpl
shll
pop
dec
xchg
test
sbb
nop
mov
scas
mov
cmp
adcb
mov
in
addb
jmp
mov
loop
push
xchg
in
mov
dec
push
bound
jmp
push
cld
add
adcb
aam
sahf
stc
or
add
fistl
shlb
or
inc
pop
add
xchg
mov
arpl
dec
or
cmp
or
test
je
adc
mov
push
imul
inc
dec
out
hlt
divl
aam
loope
lds
or
cwtl
or
sbb
jbe
mov
inc
xchg
lahf
mov
xor
shlb
add
xchg
int3
sbb
je
sub
aad
lods
push
mov
ds
addb
mov
dec
iret
in
lret
fld1
push
dec
jb
popa
xlat
hlt
sti
jbe
add
and
jne
mov
cld
into
mov
add
jns
cwtl
sbb
repnz
ret
add
fs
jp
outsl
pop
les
inc
scas
sbb
loope
stos
pushf
jbe
cmp
jae
test
pop
mov
cs
nop
dec
imul
and
mov
cltd
mov
arpl
das
out
arpl
dec
push
cmp
psadbw
rcrb
xor
cmp
dec
or
bound
cmp
out
lods
dec
lea
xchg
sbb
mov
aad
add
cmp
mov
aad
mov
inc
leave
clc
adc
shlb
ror
insb
inc
into
repnz
push
cmp
das
shll
cli
add
rol
inc
xchg
cmp
sahf
sbb
cmp
adc
push
fisubl
aad
push
push
add
pop
insb
popa
in
insl
lds
inc
sarl
push
fildl
mov
arpl
icebp
out
loop
iret
in
stos
nop
mov
sub
es
adc
loopne
loop
cwtl
mov
sub
scas
xchg
fs
xchg
lea
inc
mov
add
aas
aas
push
ja
push
and
clc
mov
add
into
jl
shl
cmp
xor
pop
ret
aaa
add
in
mov
jb
loop
outsb
leave
andl
sub
push
push
or
jo
arpl
mov
movb
push
ja
out
pop
push
je
fxtract
fsts
pop
hlt
inc
push
and
inc
sbb
out
lea
or
xchg
mov
cmp
xchg
insl
lods
test
dec
jmp
mov
and
ja
scas
mov
or
fidivrs
adc
sub
jecxz
js
cmc
sub
cmp
shrb
jp
test
test
xchg
mov
fsubrs
or
xchg
lret
xor
cmp
xchg
negl
test
push
stos
repz
xor
jae
mov
jg
push
movsl
bound
mov
mov
inc
pop
test
cmpsl
push
shl
icebp
fwait
out
cmp
popf
xchg
jnp
mov
adc
ja
sbb
fwait
call
and
fistpll
jae
stos
dec
in
sahf
repnz
and
push
mov
out
lret
push
cmc
or
xor
pusha
mov
ss
mov
push
push
mov
pusha
shrb
out
or
lret
sahf
rcrl
mov
xor
xor
clc
add
sub
pushf
push
jns
pop
ss
int3
jecxz
arpl
add
dec
loopne
repnz
jl
pop
ljmp
inc
xchg
pop
sub
hlt
add
push
xor
sub
mov
and
fs
mov
xchg
dec
mov
sbb
fiadds
mov
fs
inc
xor
xor
xor
jle
or
push
and
mov
repnz
jno
xchg
mov
adc
xchg
adc
fcmovnu
js
fs
add
scas
fnstsw
dec
mov
leave
xchg
fneni(8087
ds
test
dec
rclb
xchg
adc
xor
xor
push
cmc
call
dec
inc
dec
xchg
lea
mov
movsl
jle
pushl
or
sub
rorl
jb
xchg
push
push
pop
xabort
leavew
scas
cmpsb
lret
ds
xchg
inc
lock
outsl
add
test
add
mov
and
jg
pusha
or
in
faddl
ffreep
jno
stc
shl
xchg
insb
pop
jecxz
mov
cmp
pop
ss
xchg
cmp
push
ret
mov
ss
aam
fwait
mov
adc
fimuls
sbb
std
add
repz
flds
cs
lret
sbb
dec
push
inc
cmp
icebp
pop
mov
dec
xor
pop
dec
mov
push
mov
xor
dec
shrb
pop
fwait
inc
enter
mov
cld
lret
mov
decl
call
xchg
dec
push
mov
inc
xchg
lcall
push
outsl
add
mov
cmpsb
push
test
sbb
repz
mov
mov
lea
jo
mov
jns
test
leave
popa
movsb
decb
xor
sbb
sbb
pusha
add
xlat
or
lret
sbb
jno
out
mov
dec
mov
sub
out
or
les
mov
push
out
push
out
cmc
jo
add
aas
bound
push
mov
inc
jae
sub
xchg
push
scas
inc
movsb
mov
test
addb
sub
out
sub
mov
add
xchg
dec
pop
cmpsb
mov
jl
or
lods
cltd
shrl
adc
and
push
int
clc
and
lock
adc
cmp
xchg
insl
mov
int3
pop
nop
cmp
push
mov
int3
mov
fsubs
mov
lahf
push
das
mov
inc
scas
mov
or
add
adc
cs
mov
dec
movsl
inc
mov
jp
push
pop
andl
addb
andb
inc
test
mov
stos
xor
lods
ljmp
xchg
mov
stc
mov
adc
fisttpl
bound
icebp
dec
add
mov
and
aaa
sbb
daa
outsb
push
adc
ljmp
stc
or
or
sub
dec
cmp
rcrb
mov
add
lret
mov
nop
pop
pusha
fcoms
sub
lods
std
clc
push
repz
js
sbb
add
je
and
setno
xor
int3
mov
in
and
and
xor
cwtl
lds
lods
addb
scas
insb
loope
jl
push
loopne
and
push
mov
push
iret
out
fdivl
pop
adc
and
and
xchg
in
call
fwait
and
insb
in
and
stos
in
daa
add
inc
repnz
out
dec
push
adc
lret
repnz
inc
cli
stos
fdivrs
xchg
pop
lret
or
fcomi
sbb
pop
aaa
push
mov
sti
test
rcl
popa
push
test
mov
push
add
mov
cld
inc
mov
out
sahf
into
sar
shrb
je
mov
or
inc
imul
mov
and
hlt
push
add
ds
xchg
or
and
cs
push
fwait
mov
push
dec
pop
push
aad
into
ret
mov
lea
pop
lret
mov
cmp
mov
clc
mov
xor
mov
and
jecxz
cs
iret
sbb
fyl2xp1
adc
adc
repz
push
jno
inc
jle
sarb
pop
outsb
iret
addr16
mov
mov
js
fcmovne
aaa
mov
in
lcall
aam
add
mov
in
adc
or
or
pop
jmp
and
xor
test
inc
add
hlt
dec
inc
add
jne
cmp
adc
mov
xchg
aam
lahf
imul
add
jnp
pushf
mov
cmp
test
rorl
jb
push
nop
sbb
aam
jle
shrb
in
mov
repz
cmp
adc
add
and
insl
cmpsl
add
mov
loopne
lcall
jmp
sbb
adcl
mov
jle
je
cmp
pop
imul
fadd
hlt
std
lds
jae
sahf
sbb
mov
dec
cmp
loopne
inc
cmp
shr
pop
add
sti
insl
push
das
mov
icebp
cmp
test
push
pusha
inc
xor
jge
popf
sti
vpsrad
xchg
xor
adc
xor
enter
aam
out
movsl
inc
sar
int
sarl
fnstcw
scas
divl
jne
add
push
inc
sub
aad
sbbb
ret
add
push
movsl
fwait
jecxz
mov
jb
push
push
insb
ror
mov
into
and
xchg
add
mov
sub
loopne
adc
call
std
sti
mov
loopne
sbb
ljmp
ret
daa
cmpb
int
sub
mov
adc
test
fwait
cs
movsl
insl
cmp
xor
add
adc
cld
mov
les
pushf
cmp
xor
stos
and
cltd
fmull
lock
cmp
icebp
sub
lock
jecxz
ret
test
push
sbb
fistpl
aad
outsb
fistl
adc
xchg
dec
xor
inc
insb
pushw
push
repnz
push
lret
add
or
popf
ljmp
scas
pop
cld
ret
xor
pushf
lock
call
mov
mov
iret
jns
cli
stos
xchg
into
test
test
cmp
xchg
insl
out
sti
xor
rolb
add
leave
push
dec
push
xchg
movsl
xchg
bound
dec
out
mov
jmp
adc
in
mov
lods
in
not
pop
sub
divl
ljmp
pop
out
je
and
or
jb
shlb
repnz
insb
jmp
xor
jnp
xchg
and
jg
stc
es
insl
mov
subl
addr16
in
gs
test
mov
loopne
lods
int3
addr16
sbb
or
loopne
out
cli
cltd
push
je
into
push
pushf
cmp
lods
adc
arpl
aad
fninit
loopne
rorl
xchg
add
cmp
push
neg
psubusb
mov
push
gs
sahf
mov
into
pop
cmpsl
cmpsb
mov
loopne
dec
pop
xchg
jecxz
and
sti
int
pusha
pop
xor
xor
mov
dec
pusha
insl
pop
ret
aam
push
jno
sub
fdivs
mov
lock
add
push
fidivrs
pushf
aas
dec
je
jl
xchg
nop
cmp
jg,pt
pop
outsb
lods
xchg
jl
lds
or
shl
jb
ret
sbb
sub
pop
out
subb
and
gs
es
push
pop
leave
pop
int3
out
push
pop
mov
icebp
inc
adc
cmp
sarl
mov
sahf
mull
pop
sub
fidivrs
repz
cmp
rcll
mov
cmpxchg
movsb
dec
xchg
mov
and
data16
jle
mov
in
jnp
adc
cwtl
ret
or
pop
repz
xchg
pop
lock
dec
mov
test
jb
pop
push
mov
data16
jge
aaa
das
jge
aam
or
inc
inc
call
push
rolb
push
sbb
mov
int
int
xchg
aaa
fldt
add
pop
push
sub
fistpl
jb
sbb
sub
mov
in
out
jg
mul
jl
jns
int
jb
mov
push
add
pop
pushf
cmp
cmp
cmp
dec
adc
loop
mov
jmp
push
pop
hlt
fdivs
pop
push
inc
xchg
inc
adc
push
jmp
into
fstpl
mov
pop
nop
push
xchg
arpl
call
mov
cmpsb
aaa
in
jbe
cwtl
cmp
cltd
adc
mov
mov
iret
inc
jns
das
cld
cltd
xor
es
cmp
or
xor
mov
pusha
rcrb
sub
lods
and
and
xlat
xor
push
loopne
push
addr16
mull
movsl
push
jbe
ja
adc
push
cs
pushf
aas
into
dec
mov
sbb
and
cs
adc
test
stc
mov
insl
inc
mov
cmp
rolb
fidivrs
cmp
or
xor
rcrl
inc
mov
loop
sbb
arpl
rcrb
pop
inc
xlat
sbb
and
and
or
lds
daa
or
inc
ljmp
pusha
outsb
mov
dec
mov
es
imul
inc
xor
push
loop
cmp
test
loope
jae
ss
into
mov
sub
test
push
daa
aaa
adc
in
adc
fs
jnp
test
jne
cmpsl
out
jge
cwtl
push
lret
and
adc
sbb
xchg
scas
dec
inc
dec
xchg
or
mov
sbb
pop
dec
adc
xchg
sbb
fisubrs
jno
xchg
add
add
pop
or
pop
mov
ljmp
insl
lods
iret
sub
das
lcall
rcr
lods
sti
add
fmull
hlt
aaa
enter
pop
xor
or
and
fistps
mov
cmp
or
pop
pop
inc
pop
pop
fcomp
shrl
loopne
test
xor
pop
mov
hlt
cmp
jge
loope
jnp
xchg
mov
and
and
cmp
fwait
decl
add
mov
cmp
pop
ds
inc
mov
jns
popf
mov
call
adc
sti
inc
popf
push
cmpsl
lods
sub
stos
dec
arpl
rcrl
dec
add
jae
or
loope
das
lock
adc
xchg
stos
popf
dec
add
adc
push
outsl
sbb
insl
daa
push
shll
or
add
mov
test
lods
fisttps
sarl
clc
scas
data16
dec
cltd
pushf
dec
jle
jo
sub
dec
jecxz
in
cld
fistpll
mov
loopne
lret
cmp
cltd
imul
fnstsw
cmp
mov
jno
mov
ror
scas
cs
lods
jecxz
fisubrl
rorb
add
dec
xlat
push
cltd
push
test
pushf
insl
cmpsl
jmp
inc
repz
inc
mov
cmp
or
push
mov
pop
hlt
push
xchg
in
jne
mov
mov
sarl
lcall
aaa
or
jbe
scas
out
and
aas
lock
cmp
mov
mulb
bound
lds
dec
and
outsb
add
lret
add
sbb
or
xchg
cmp
lret
lds
lods
xchg
sub
add
xorb
cmp
hlt
push
loop
leave
dec
jg
loope
jno
mov
out
or
shll
push
sub
ret
cmp
add
mov
mov
popa
aam
push
push
data16
dec
pop
push
mov
sti
cmp
out
loope
xor
call
mov
in
inc
xor
pushf
shrb
dec
clc
inc
and
scas
icebp
sub
cmpsl
nop
xor
xchg
punpckhbw
and
sbb
dec
sub
sti
cwtl
or
je
movsb
sbb
jecxz
mov
lds
mov
mov
and
xchg
mov
insb
mov
je
sarl
xchg
mov
call
aad
jb
or
inc
pop
xchg
pop
xchg
test
mov
testl
mov
shlb
push
xor
xor
cmpsl
mov
push
mov
xor
add
scas
xchg
adc
xchg
inc
lret
outsl
cltd
mov
xchg
cld
test
xchg
pop
stos
sub
xchg
lret
aaa
add
mov
mov
adc
imull
mov
pop
inc
xor
stos
mov
xchg
hlt
or
mov
mov
push
nop
lret
aam
outsb
in
sbb
or
dec
out
mov
fstpt
mov
icebp
nop
adc
aam
int
mov
mov
cmp
loop
inc
inc
inc
xor
popa
cltd
xor
add
mov
jge
call
xor
in
enter
push
mov
push
clc
jno
imul
rorb
and
adc
out
adc
scas
in
or
or
xchg
adc
xor
stc
pop
sub
cmp
jne
or
lods
shrb
mov
shlb
nop
pop
pop
call
out
mov
imul
sbb
jnp
pushf
jp
loope
je
or
rclb
repz
adc
mov
mov
inc
ror
shlb
sub
jne,pn
std
xor
sub
movsl
mov
test
popf
cmpsl
pop
lret
fists
xor
mov
gs
bound
ja
subl
pop
sbb
sbb
enter
adcb
push
bound
cmpsb
into
mov
movsl
pop
cmp
xchg
fstpt
sbb
push
rorl
xor
push
lahf
xor
pop
lcall
into
clc
cld
pusha
out
fs
jo
cld
arpl
fisubs
jl
add
out
popa
jns
lock
adc
test
jns
fiaddl
test
mov
cmp
cmp
cmc
in
lods
inc
mov
sarb
into
aad
in
mov
mov
mov
out
out
scas
add
nop
out
jo
nop
into
shlb
dec
sbb
ss
jbe
mov
sarl
or
aad
and
xchg
inc
dec
adcl
mov
popf
sub
into
lret
sbb
inc
dec
out
dec
data16
pop
mov
inc
icebp
cld
andl
push
jl
into
data16
insb
mov
and
leave
jbe
lock
dec
or
loop
dec
adc
imul
cmpsl
orb
int3
mov
mov
xorl
mov
mov
add
in
and
push
push
sahf
jb
fimuls
in
cmpsb
xor
mov
pop
mov
xor
sbb
add
jmp
dec
lea
mov
lock
cmp
repz
and
adcb
dec
js
add
lds
mov
push
push
test
cmp
inc
fwait
inc
fsubrs
pop
js
and
add
xorl
dec
out
sti
repnz
inc
stos
in
push
xor
cmc
or
inc
and
pushf
das
repz
pop
xchg
pusha
imul
fisubl
cmp
movsl
fbld
dec
movsl
add
cmp
stc
stc
push
push
inc
popf
mov
mov
std
sahf
test
out
push
test
push
mov
daa
xchg
repnz
mov
jae
jge
cmp
movsl
dec
shrl
jb
std
or
push
and
fadd
ret
das
inc
mov
pop
out
fwait
jp
mov
sub
push
mov
or
and
sub
negl
push
test
pushf
mov
dec
pop
in
call
pop
or
cmpsb
and
mov
push
lods
jg,pt
movsb
or
stc
mov
pop
int
push
adc
rclb
movsl
xchg
sub
fimuls
sub
loopne
push
pop
fisubl
push
and
mov
ret
call
and
imul
mov
ljmp
gs
ret
rolb
inc
gs
stos
scas
stos
pop
xor
sub
mov
adc
or
outsl
cmp
sub
cld
jne
lods
push
mov
stos
cmpb
fsubs
push
ret
arpl
sahf
mov
adc
pop
in
aad
ja
ficoml
arpl
cld
cmp
aam
addr16
dec
pop
pop
insl
in
stc
cmp
sub
out
cmc
or
add
inc
cmp
cs
pop
push
jbe
mov
out
cmp
mov
sarb
pop
sti
into
mov
jb
stos
mov
bound
test
add
outsb
fucomp
mov
in
mov
scas
cmpsb
push
scas
and
insb
and
sarb
enter
and
push
push
or
das
arpl
mov
aaa
call
xor
and
out
shlb
jg
movsb
call
dec
xchg
cmp
mov
clc
pusha
adc
xor
cmp
icebp
cmp
and
inc
mov
sub
jb
fucomip
out
xor
mov
and
push
dec
pop
das
jo
and
pop
cmpsb
adc
pop
jno
pop
push
repnz
shrl
addr16
or
and
xchg
popf
mov
mov
fcmovnu
cmc
mov
and
or
dec
or
cmp
cmp
sahf
rcll
ret
adc
pushf
stos
stos
out
pusha
shr
jb
jecxz
cmpl
enter
add
mov
xor
loope
bound
xor
in
mov
cmp
push
in
iret
inc
xor
imul
clc
fs
push
push
in
fists
cld
mov
push
sti
rcl
mov
cs
sub
mov
sbb
and
push
inc
push
jle
jge
int
subb
aad
cmp
mov
jecxz
sub
lret
mov
test
imul
pop
nop
jne
dec
xorb
fndisi(8087
and
xchg
xorb
int3
pusha
arpl
pusha
mov
test
push
loopne
add
loop
orb
ljmp
push
imul
adc
mov
in
movsl
sub
in
lcall
xchg
shld
sbb
out
mov
lock
sbb
cld
sub
out
jnp
iret
or
aas
dec
xchg
pop
xchg
sub
stos
arpl
inc
enter
leave
sub
cld
das
add
mov
inc
ret
push
jae
scas
scas
xchg
sbb
and
or
cltd
add
loope
aaa
sub
add
mov
in
dec
inc
push
jbe
stc
xor
xor
mov
cmp
inc
dec
cmp
pop
or
pop
pop
and
out
mov
ficompl
inc
test
frstor
cmp
in
mov
xor
jge
push
dec
jbe
sbb
inc
fwait
or
or
das
xor
xorb
sub
pop
xor
test
cmc
sub
pop
in
xchg
fdivs
gs
dec
and
jecxz
mov
jecxz
out
inc
pop
sbb
mov
call
xchg
mov
xchg
add
sahf
mov
shlb
popa
push
xor
and
mov
xchg
mov
or
push
add
popf
and
lods
adc
adc
jmp
lods
sub
jae
fsubs
loope
inc
adc
pop
dec
out
dec
iret
or
lea
std
jns
mov
pop
filds
in
jmp
xchg
pop
ret
loope
imul
mov
add
dec
fists
sub
inc
pop
fsubr
arpl
push
push
xor
ljmp
mov
loope
icebp
add
sbb
dec
outsl
test
add
mov
or
nop
out
and
icebp
push
and
das
mov
sbb
jnp
arpl
pop
sbb
ds
inc
movsl
repz
xchg
pusha
add
and
imul
roll
dec
inc
adc
fs
push
testl
test
ret
push
shl
jle
mov
aas
push
stos
or
or
xlat
sarl
push
pop
push
femms
aas
ret
xor
jmp
xchg
or
sub
or
and
inc
pop
xor
jmp
jne
rclb
push
cmp
pushf
pop
xchg
inc
stos
inc
jmp
outsl
mov
dec
jbe
sbb
xchg
pop
xor
push
sbb
dec
in
outsl
xor
aaa
pop
repz
and
cmp
dec
adc
xchg
sub
ficoms
out
jo
div
loope
dec
ucomiss
ret
push
and
pop
sbb
xchg
cmp
cmp
pop
mov
or
dec
xchg
scas
add
repnz
imulb
mov
dec
fidivs
sbb
test
jl
push
push
mov
inc
cmpsl
and
xor
add
lods
inc
mov
jo
scas
lret
push
adc
mov
dec
call
inc
out
dec
sbb
icebp
pop
fisttps
int
cld
ret
lods
repz
pop
dec
push
cld
imul
mov
xor
add
dec
pop
out
out
adc
mov
jnp
sbb
mov
and
xchg
andb
and
jb
imul
or
jns
arpl
add
mov
inc
adc
mov
nop
pop
xor
adcb
in
mov
push
jge
jl
add
jecxz
fs
fldt
add
in
ret
in
rolb
adc
jg
xor
sub
aad
int3
lods
iret
sahf
push
insl
insb
push
imul
dec
mov
pop
fmulp
lret
push
xchg
repz
mov
out
ret
iret
rorb
mov
movsb
outsb
loop
fdivrl
loopne
mov
cs
mov
outsl
aad
inc
repnz
xchg
lret
addl
adc
aam
movsb
out
dec
shlb
xlat
daa
lret
in
insb
push
cmpsl
sbb
add
push
mov
fldcw
jno
fcmovb
jmp
jle
test
xchg
icebp
mov
scas
mov
mull
iret
cmp
leave
addr16
insl
push
xchg
and
fs
insl
inc
jg
cltd
adc
mov
lea
pop
jae
and
push
sbb
push
or
mov
fucomi
mov
ja
out
inc
mov
aam
or
dec
lea
push
arpl
maxps
clc
fsubr
inc
icebp
into
je
and
mov
test
and
cwtl
leave
mov
xor
in
movsl
ds
dec
xchg
das
sbb
pop
mov
dec
lods
cmpb
in
mov
pop
xchg
or
xor
sbb
push
pop
sub
movsb
push
ds
lret
ss
mov
and
shlb
inc
insl
mov
jecxz
mov
xchg
or
or
js
push
imul
bnd
dec
sub
sub
mov
adc
test
arpl
imul
fbld
test
mov
insb
div
lock
xor
push
bound
mov
into
repnz
mov
or
scas
adc
adc
scas
fistl
std
jns
cmp
gs
and
add
pushf
mov
push
push
movsb
movsb
test
mov
cmpsb
and
rcrl
inc
pandn
sahf
mov
xchg
sbb
clc
orb
sub
sub
mov
lcall
jo
add
jno
ret
int
js
imull
jl
je
scas
cmp
mov
and
and
enter
popa
pop
std
in
cltd
in
jp
std
je
sbbb
std
mov
pop
mov
mov
out
add
xchg
push
adc
scas
stos
in
lods
in
xchg
and
sbb
scas
dec
faddl
clc
xor
or
inc
xchg
and
mov
add
dec
xor
jle
mov
xlat
movsl
pop
dec
or
mov
clc
cmp
out
inc
jmp
dec
pop
mov
sbb
mov
cmp
push
pop
bnd
cmpb
mov
repnz
sbb
test
lock
mov
cwtl
insl
xor
loop
xchg
or
adc
push
push
xchg
out
cmpsb
mov
jo
add
inc
out
lcall
sbb
sub
imul
xchg
or
or
iret
cld
ret
jl
jmp
repnz
hlt
out
sub
adc
loope
mov
cmp
pop
mul
xor
xchg
or
pop
jmp
fsin
sub
cli
xor
sbb
mov
shll
inc
xor
pop
mov
leave
xchg
imul
test
into
fldt
or
and
inc
jo
inc
insb
jns
jb
lds
sub
xchg
sbb
sbb
psrad
iret
lods
nop
out
dec
outsb
cltd
stos
and
push
test
jb
sub
push
shl
cmp
movsl
movsb
push
loope
jbe
lret
pop
imul
lret
adc
add
nop
and
sbb
xchg
divb
jne
outsb
orl
jmp
jle
addr16
add
xor
out
mov
push
bound
dec
orb
negb
jns
stos
or
les
inc
int3
mov
test
pop
loop
ljmp
xchg
mov
insb
jecxz
int
out
cmp
pushf
loop
xlat
inc
push
cltd
mov
mov
jp
xchg
in
mov
push
bound
je
subl
nop
ret
xlat
lds
dec
xor
jecxz
mov
xchg
hlt
xor
xor
sub
mov
andb
std
or
sti
outsb
je
adc
iret
sbb
lock
dec
sub
std
test
aad
in
repz
jp
adc
sarl
and
and
fistpll
and
xchg
sub
xchg
test
ret
cmp
nop
movsb
shlb
jmp
push
movsl
hlt
xchg
daa
ds
pushf
push
inc
stos
mov
cmpsl
in
movsb
and
dec
test
sbb
and
or
inc
pusha
enter
cmp
ds
or
push
pop
mov
adc
fs
cmpsl
lds
data16
subb
mov
faddp
outsb
jle
mov
outsb
adc
stos
popl
adc
into
clc
dec
add
stc
mov
mov
pop
les
dec
adc
andb
divl
mov
addr16
dec
aad
dec
push
hlt
add
add
push
and
push
jp
jne
push
sub
cld
fcomip
push
aad
xchg
sub
jg
pop
orb
add
push
cvtps2pd
mov
hlt
nop
decb
xchg
pop
enter
test
push
jle
cmp
cmp
shr
and
ja
imul
addr16
mov
rclb
sub
or
push
xor
in
dec
popf
xor
repz
push
mov
fldt
gs
xor
sub
push
jbe
push
lret
hlt
fmuls
cld
pushf
xchg
mov
xchg
cmp
lret
xchg
popf
pushf
jle
sbb
xchg
fidivrs
scas
ja
jo
cmp
adc
scas
dec
cmp
and
cs
xchg
xchg
fs
push
cmp
test
jl
imul
cwtl
jo
stos
mov
xor
test
cld
sbb
ret
mov
test
sbb
sbb
cmp
std
xor
sahf
into
hlt
pop
testl
mov
mov
jne
push
fistpll
jl
sbb
pop
push
dec
jecxz
and
in
jmp
or
mov
mov
mov
mov
push
lea
imul
xor
sahf
cmpsb
nop
and
cmp
shl
dec
shll
mov
fcmove
pop
mov
sbb
lds
or
mov
in
inc
iret
push
movsb
inc
jge
divb
in
mov
ljmp
int3
xor
lahf
adc
lret
das
sub
fistl
out
mov
mov
outsl
jb
mov
pusha
jns
sbb
inc
cltd
mov
xorl
pusha
test
sbb
push
pushf
std
cwtl
mov
imul
inc
mov
add
je
mov
mov
push
mov
mov
fcompl
adc
mov
dec
outsb
pop
xchg
adc
jno
pop
sarb
or
fsubrs
xchg
push
xchg
sbb
fstps
addr16
xchg
adc
or
mov
lcall
sbb
clc
mov
adc
mov
mov
in
push
lret
sub
xchg
dec
loop
ja
lret
fs
sbb
xor
test
jno
cmpsb
push
ficoms
push
iret
daa
sbb
inc
aas
pop
sub
push
dec
loopne
clc
sbb
dec
movsb
out
lods
cmp
sbb
jg
es
insb
jbe
ret
pop
add
lock
shl
notl
cmp
mov
and
mov
cld
iret
in
jo
cltd
cltd
addr16
lret
in
mov
inc
or
cmp
jne
sbb
inc
lock
cmc
inc
mov
inc
repz
int3
aaa
sbb
mov
outsb
adc
fisubrl
adc
daa
daa
int
loop
mov
out
repz
dec
mov
mov
cmp
fistpll
jns
adc
xchg
sbb
test
push
lds
pop
pop
mov
sub
mov
orl
insb
in
inc
daa
xchg
dec
cld
pusha
mov
lods
adc
dec
icebp
push
jb
jae
lret
lcall
push
cmp
fistl
shll
dec
movhps
push
add
cmpsl
dec
sub
in
mov
push
dec
xchg
call
and
popa
aad
cltd
mov
add
push
ret
cmc
mov
cwtl
repnz
cwtl
push
push
push
inc
movsl
fnsave
or
stos
jb
scas
push
aaa
push
dec
push
lds
verr
and
mov
fisubs
and
mov
jbe
jno
dec
outsb
cli
flds
xor
icebp
xchg
mov
popf
cwtl
inc
and
sti
and
cmp
leave
test
jae
jmp
call
or
fadds
mov
push
sub
xchg
push
inc
pushf
xchg
test
mov
add
fsubrs
sbb
pop
adc
xchg
out
cmp
rolb
jbe
das
sahf
push
adc
mov
xor
lret
inc
xchg
cmp
inc
test
pop
sub
lcall
adc
push
mov
cld
ficoml
jae
cmpsb
loopne
addl
mov
arpl
jge
cmp
push
jnp
jnp
nop
loope
sub
je
mov
mov
push
pop
in
ret
int3
push
outsl
je
out
adcb
or
mov
mov
sub
pop
fwait
mov
cmp
test
and
push
jae
xor
aam
sbbb
out
lds
mov
fnstsw
mov
mov
cmc
inc
loope
sahf
scas
mov
pop
sbb
sbb
shlb
pusha
aas
cmp
ficompl
and
sbb
mov
inc
lahf
insb
andl
xor
imul
cmpsl
jno
fldt
push
sbb
cmp
dec
inc
mov
or
mov
sub
lock
ds
inc
push
cmp
shrl
cvtpi2ps
imul
lds
aaa
mov
subb
sbb
sbb
inc
ret
dec
mov
fadd
sub
lock
push
icebp
repnz
fcoms
gs
shl
orb
adc
into
out
pop
movsl
hlt
sbb
dec
movsl
mov
sti
mov
sarl
push
adc
fldt
sbb
enter
sbb
jp
sahf
sub
jno
xchg
imul
ret
mov
mov
xchg
mov
add
push
cmp
int
sbb
add
xchg
xor
and
sub
dec
mov
jae
xor
lods
mov
repnz
jge
cmp
add
lret
pop
push
andl
fimull
xor
xor
lcall
push
aad
sbbl
push
shll
enter
add
dec
cmpsl
jae
lds
shl
jns
int3
cld
fdivr
jnp
sub
imul
fstpl
pushf
popf
adc
nop
aad
lcall
repnz
sbb
xchg
or
cmpsl
xchg
mov
les
xor
insl
inc
sub
and
sbb
mov
xor
test
sub
mov
and
mov
rcr
mov
jnp
ret
or
jmp
mov
sbb
and
js
in
inc
imulb
ficoms
and
adc
adc
or
push
xchg
fsubrp
jge
jnp
cmp
add
jmp
xor
in
or
push
and
stos
ror
ficoml
stc
lea
es
mov
mov
repnz
add
lods
repz
sub
push
or
jg
out
in
inc
int3
jno
test
jmp
sahf
inc
add
mov
adc
mov
xor
mov
aas
scas
jns
pop
push
xchg
sub
mov
mov
sbb
in
and
ret
xchg
pop
out
out
or
pushf
sub
repz
sbb
repnz
daa
data16
dec
add
inc
sub
fcomp
add
test
gs
jle
ret
adc
mov
cmp
add
movsl
push
lds
jbe
push
pushf
lret
test
lock
movsb
ret
cltd
bnd
ret
and
and
ret
cwtl
sub
dec
rolb
jmp
push
xor
lea
mov
outsb
mov
jbe
pop
cmp
sbb
and
dec
add
repz
jge
mov
addr16
and
test
out
push
movb
rcll
or
jae
repz
mov
pop
and
pop
inc
mov
xlat
gs
repnz
out
loopne
adc
pop
adc
mov
cmp
pop
cs
insl
xor
sbb
ljmp
popa
int3
jle
or
aad
xchg
or
rcll
lret
push
inc
fisubrl
cmp
out
les
xchg
xchg
inc
cld
jb
cmpsb
stos
mov
push
sbb
jg
pop
pop
cmp
insb
xchg
lahf
add
jno
sbb
lock
mov
aas
dec
stos
or
ja
dec
out
and
inc
mov
cld
xorl
es
pop
dec
cld
scas
and
mov
daa
adc
stos
sbb
mov
orl
mov
jae
sbb
js
or
enter
sahf
cmp
in
stos
sti
adc
stos
mov
pusha
xor
push
add
sbb
pop
cmp
test
xor
adc
add
shlb
sbb
xor
mov
pushf
cmp
loop
inc
dec
lret
mov
faddl
push
das
in
mov
int3
lods
inc
mov
pop
cmp
pop
outsb
in
mov
mov
sbb
scas
sti
das
sbb
xchg
fbld
repz
fs
inc
mov
pushf
inc
push
push
xorl
fwait
sbb
mov
clc
les
ljmp
or
mov
or
cmpsl
mov
xor
pusha
mulb
scas
in
and
test
pop
movsl
cmp
les
mov
pop
dec
fsubrs
mov
in
mov
sar
pop
pop
push
das
dec
popa
jbe
push
adc
lods
lods
and
fld
leave
inc
scas
out
cli
gs
fwait
inc
push
mov
sub
lds
push
ret
lahf
aas
cwtl
ljmp
outsl
outsl
sub
mov
out
mov
repnz
mov
cmc
push
test
lods
out
or
jb
mov
mov
or
fldt
sub
idivl
mov
mov
stc
mov
mov
sbb
aaa
cmc
int
xchg
and
and
mov
aaa
test
pop
shlb
xchg
xchg
push
or
movsb
mov
insl
notl
jp
mov
fstpt
test
jbe
enter
or
fadds
js
fcmovb
jge
scas
aas
sub
cld
iret
test
outsb
xor
repnz
outsb
dec
push
cmp
sbb
push
mov
je
imul
add
icebp
gs
cli
push
xor
aam
mov
dec
jbe
sbb
out
icebp
pop
add
jbe
addr16
sub
or
insl
dec
adc
jno
fs
xchg
jno
cmp
fdivrs
imul
xlat
or
mov
enter
mov
mov
ror
xorl
cmp
dec
fdivrl
cli
jge
sbb
and
adc
jg
popf
pushl
jbe
fcoms
fucom
sub
enter
cmp
and
dec
or
aas
cmp
imul
mov
mov
sub
in
cld
xor
shlb
xchg
loopne
push
stc
loope
les
aas
rcr
sub
sbb
popa
out
hlt
mov
and
shl
push
jne
stc
or
stc
cmc
pusha
pop
ficompl
cltd
aas
inc
cmp
or
nop
ja
cmpw
mov
cmp
cwtl
outsb
jb
shrl
clc
and
mov
add
cs
mov
inc
push
loope
scas
adc
mov
cltd
nop
cmp
fstpt
rol
jae
and
mov
mov
scas
aas
pop
mov
jb
or
inc
cltd
outsl
rorl
mov
inc
shll
in
mov
int
ljmp
in
jl
jle
sbb
aas
xchg
cmpl
sub
inc
adc
add
icebp
hlt
adc
and
xchg
stos
imulb
outsb
inc
push
outsl
in
inc
sub
pushf
pop
lods
push
lahf
mov
sbb
mov
les
mov
js
adc
xchg
adc
pop
js
inc
sti
nop
push
sbb
cli
mov
addr16
test
aaa
mov
fmull
push
xor
icebp
xchg
push
add
xor
imul
pop
add
mov
xchg
ja
mov
shrl
mov
push
scas
mov
mov
jp
xor
adc
out
cmp
mov
popf
mov
pop
insl
adc
sbb
push
jg
dec
inc
stc
jl
sbb
mov
cmp
mov
in
push
xor
xor
mov
sbb
mov
sub
pop
test
dec
add
cltd
nop
mov
pop
xor
inc
or
inc
mov
push
push
jp
out
movsb
xor
mov
adc
push
pop
mov
xchg
push
lcall
in
into
pop
shrl
add
lea
ds
adc
mov
pop
inc
shll
adcl
sbb
cs
jmp
movsb
ss
pop
mov
mov
mov
in
shrb
or
inc
pushf
imul
or
js
adc
and
dec
ss
call
xor
jl
cwtl
das
inc
push
movsl
fsubl
cwtl
es
pop
xor
add
in
push
fdivs
cli
xchg
pop
ret
std
pop
loopne
les
dec
pop
mov
in
mov
mov
sub
pop
dec
add
push
adc
jo
pop
push
mov
and
mull
pop
adc
aam
push
in
jle
leave
test
sub
xchg
out
shrl
add
xor
jne
clc
mov
lds
mov
dec
andb
lods
add
std
movsl
adc
mov
or
mov
dec
ret
aaa
cltd
in
xor
fwait
in
in
jno
leave
aam
lret
idivb
sub
inc
and
add
test
jae
cli
jge
sub
lock
imul
cld
push
lcall
test
out
push
out
fwait
xchg
jmp
add
jge
cmp
jp
jmp
iret
mov
or
popa
lcall
jo
cmp
xchg
adc
mov
data16
ret
stc
jp
mov
sbb
fwait
mov
sti
adc
jl
mov
push
mov
push
xor
pop
je
fstp
dec
mov
sbb
mov
stc
inc
xor
cmp
xor
sbb
mov
xchg
aam
jmp
stos
dec
movsl
mov
inc
arpl
adc
adc
fildll
div
out
jns
cmc
shl
movsb
xor
cltd
decl
call
dec
fidivl
sub
and
mov
cmp
inc
lret
test
daa
sub
sub
or
inc
popf
insb
or
mov
cmp
pop
je
scas
mov
push
lret
pop
rcrl
js
or
xor
dec
add
cmp
add
shll
adc
ret
jns
sub
and
adc
mov
pushf
add
mov
cmp
add
add
cmp
enter
xchg
mov
xlat
jb
mov
lea
cwtl
cmpsb
adc
ret
stc
inc
push
movsb
push
lret
psrad
xor
mov
inc
xor
mov
je
add
outsb
inc
xor
push
fimull
push
out
mov
xchg
nop
data16
loope
loope
scas
jecxz
jno
xchg
push
movsb
addr16
and
popf
sbbb
xlat
fsubs
out
pop
inc
push
mulb
mov
cmc
push
out
in
or
cld
mov
xor
mov
mov
loope
sub
stos
xchg
bound
les
inc
jnp
push
pop
ljmp
fs
lock
das
arpl
clc
idivl
jns
push
fistps
push
inc
into
test
add
xchg
jl
imul
mov
add
xor
pop
jmp
jg
push
int3
lods
jecxz
stos
inc
fnstcw
push
add
int3
adc
fildll
push
cmp
dec
inc
rcr
and
lock
or
add
inc
dec
sbbb
insb
das
inc
scas
stos
repz
dec
add
negb
orl
icebp
cmpsb
push
xor
pop
xchg
imul
loope
insb
pop
repz
fildl
push
cmp
mov
sub
outsl
ficompl
aad
inc
cmpsb
inc
sub
mov
mov
push
jo
hlt
sub
adc
lods
mov
loope
popf
pop
fsubs
xchg
rcrb
mov
icebp
cmovle
inc
loop
stc
jecxz
inc
add
cmp
add
mov
rcrb
mov
pop
push
jo
lcall
mov
jne
pop
movsl
and
ja
ja
or
popa
jno
and
cli
lea
fwait
xlat
lods
jmp
repz
in
dec
sahf
mov
dec
push
jg
insl
xchg
or
jecxz
insb
mov
ret
scas
push
lds
pop
enter
rcr
pop
xor
lcall
out
ja
push
mov
out
lret
cmp
das
lret
sub
fisubl
lret
push
cld
push
test
in
adcb
stc
push
sbb
sbbb
addr16
movb
lods
dec
add
and
mov
ret
imul
movsl
sub
push
das
jg
into
mov
sub
hlt
ret
jno
and
fwait
dec
cli
stos
cmpsb
dec
add
xor
or
sbb
or
pop
test
sbb
mov
aaa
repnz
fisubrl
in
ss
in
mov
movsb
and
jo
les
sbb
cmp
push
mov
int3
lea
pop
mov
test
lods
imul
jnp
in
pop
popa
and
push
mov
xor
fs
lea
pop
sarb
movsl
cmp
sti
loop
cmp
sub
mov
cmc
mov
cltd
rorl
bound
test
shl
scas
das
fcoml
idivl
xchg
fiadds
outsb
repz
add
stos
fwait
xor
dec
popl
arpl
add
mov
out
push
dec
adc
push
and
fwait
mov
sub
inc
mov
sub
in
add
add
sbb
in
pop
shrl
lods
xor
inc
je
cmp
jg
lahf
fsubrp
cwtl
xlat
sub
add
pushf
push
shlb
ror
xchg
or
fcmovbe
cmpsl
cmp
mov
clc
dec
xchg
and
stc
int3
push
xor
repnz
imul
stos
cld
xchg
ret
ljmp
pop
out
lods
in
mov
jge
push
lods
outsb
add
dec
popf
gs
mov
sarb
rcl
in
jno
xor
jno
icebp
fsubs
lods
iret
push
mull
or
shll
rcr
or
mov
cmpsb
cmp
bnd
in
xchg
ret
pop
mov
js
ss
xchg
mov
xchg
imul
pusha
push
adc
cmp
mov
cmp
into
lods
out
mov
divb
push
fsubrl
nop
jge
add
aas
gs
pop
es
ret
pushf
jb
xchg
cmpsb
cmp
pop
ret
mov
addb
dec
imul
xchg
mov
push
lock
or
jne
lods
push
lret
jl
dec
push
popf
cwtl
add
cli
sbb
sbb
rcrl
mov
push
insb
scas
mov
fsubr
arpl
or
movsb
aad
xor
icebp
jbe
lods
jl
mov
jns
dec
ljmp
loop
cmp
ss
xchg
jmp
sbb
inc
cmc
jecxz
mov
imul
lds
hlt
das
pop
cmpsl
xor
std
mov
mov
pop
stos
cld
cwtl
rorb
xchg
nop
stos
add
je
xor
sbb
mov
stc
xchg
mov
and
pop
and
inc
pop
jo
das
xchg
or
repz
add
jle
scas
mov
sub
jmp
jp
popf
cmp
shlb
xchg
enter
pop
fxch
xchg
dec
xchg
and
xchg
ficoml
sub
dec
test
clc
sub
dec
cmp
cmp
das
jl
mov
scas
ljmpw
xchg
and
and
stc
pop
lds
ljmp
push
mov
aas
xchg
jae
cmpsl
fistps
mov
out
xchg
inc
repz
xor
and
das
adc
jle
pop
movsb
adc
sub
push
mov
insb
out
repz
mov
repz
scas
pop
mov
adc
mov
clc
and
outsl
mov
mov
icebp
addr16
push
cmp
jp
fincstp
pop
push
clc
imul
adc
bound
test
jae
jno
je
pop
push
cwtl
inc
in
cmp
aas
fistps
xchg
lcall
push
or
xchg
sti
mov
mov
push
pop
fadd
and
push
sub
add
repz
in
xchg
inc
push
test
or
and
lods
movsl
add
out
mov
or
retw
repz
icebp
add
or
fstp
gs
push
inc
arpl
and
mov
mov
xor
loop
push
js
adc
lods
pop
pushf
xchg
mov
subb
rcrl
xor
mov
pushf
and
loop
and
sbb
fwait
rcr
adc
mov
jnp
inc
mov
mov
xor
fldt
dec
push
outsl
xchg
in
ss
lock
hlt
mov
in
fneni(8087
jnp
and
adc
add
lods
stos
cld
dec
xchg
repz
mov
in
popf
outsb
mov
dec
sar
jge
shr
lahf
push
or
std
mov
push
inc
jae
in
xchg
pop
movsl
popf
das
dec
sti
arpl
push
push
out
push
pop
mulb
or
add
pop
sti
les
test
lret
or
cwtl
negl
orb
cmp
adc
cmp
dec
sub
push
mov
lcall
repnz
inc
into
stc
je
mov
jne
or
or
lret
push
sbb
jg
push
add
ffreep
or
mov
repz
sbb
push
rcrl
ds
push
xchg
test
sub
or
pop
xor
stc
rclb
xchg
rclb
pop
dec
pushf
scas
enter
pop
xchg
out
dec
mov
mov
jb
int3
movb
mov
pop
add
xor
fdivs
rolb
dec
adcb
jp
adc
push
fdivs
test
lcall
jp
jbe
pop
ljmp
sti
ja
xchg
ret
lcall
mov
out
xchg
jne
cs
sub
shrb
test
sub
pop
mov
adc
mov
sub
mov
movsb
dec
mov
sub
mov
popf
fldz
js
or
xchg
adc
mov
into
push
mov
xor
cmp
in
fcoml
cmc
sub
shrb
nop
mulb
fidivrs
ret
out
cli
out
and
jmp
mov
mov
outsl
out
push
ficompl
lock
icebp
sbb
mov
sbb
jns
idivb
mov
xor
sub
push
inc
out
hlt
add
xchg
xor
sbb
lods
fstps
and
iret
cltd
or
mov
cmpsl
adc
inc
push
aaa
adc
imul
dec
xchg
fldenv
pop
aas
or
xchg
je
and
jb
mov
mov
leave
in
or
push
pushf
mov
inc
inc
or
imul
xor
lcall
inc
sub
xor
sbbb
dec
inc
out
int3
in
sub
das
test
pop
sahf
dec
and
roll
test
cmpsl
jo
xchg
movsb
popf
repz
xor
daa
sbb
call
test
sub
xchg
ret
cmpsb
mov
xlat
push
mov
lcall
in
xor
jo
inc
or
dec
lods
inc
jbe
jns
adc
or
loopne
dec
pop
cld
mov
stos
les
push
cltd
xor
sub
gs
addr16
lods
daa
or
adc
enter
sbb
adc
xchg
je
je
repnz
es
rorl
das
mov
inc
or
shl
addr16
inc
xchg
mov
mov
lods
xchg
outsl
outsb
push
dec
lods
mov
mov
iret
mov
lods
push
loop
inc
lcall
push
cmp
lds
test
leave
imull
insl
nop
sub
push
mov
sbb
push
pop
das
in
cmp
movsb
or
sub
inc
aad
gs
in
push
shll
push
dec
hlt
push
bound
cli
std
popf
call
test
les
dec
push
loopne
sub
cmp
push
cli
fcmovnb
jb
std
fdivl
jb
icebp
aam
in
jbe
mov
imul
inc
mov
sub
fsubrl
mov
lods
mov
std
mov
inc
icebp
lret
in
loop,pn
test
call
insl
loope
std
mov
jo
scas
dec
dec
ret
test
add
lret
clc
jns
es
mov
sub
in
ja
jno
mov
xchg
xorb
adc
es
mov
lcall
cmp
lods
mov
xchg
imul
mov
insl
jge
int3
adc
or
jge
rolb
clc
adc
in
ljmp
test
mov
bnd
das
sbb
loope
int
cmpsb
cld
enter
cli
pop
mov
shrb
and
aad
and
mov
fdivp
test
testl
ret
cwtl
or
xchg
mov
xchg
add
mov
push
adc
aaa
push
mov
push
cmp
into
imul
xor
out
sbb
stos
inc
dec
mov
sbb
push
fiaddl
mov
and
fucomi
and
xchg
and
shll
mov
sbb
mov
add
inc
push
xchg
divps
cmp
jmp
int3
insb
xor
cmc
push
icebp
leave
in
push
pop
inc
mov
cmp
inc
cwtl
in
push
add
les
imul
out
pmullw
sbb
stos
int3
sar
ds
push
or
push
cmp
push
or
add
sti
inc
add
pusha
in
sahf
inc
jle
pop
outsl
xor
jecxz
or
xchg
jle
xlat
push
fcom
hlt
add
cmp
xor
jg
in
or
or
call
push
int3
lret
andl
xor
and
jne
imul
inc
rcrl
repz
aas
lea
fwait
nop
loop
xor
push
xchg
lahf
adc
leave
jnp
fsubs
outsb
mov
cmp
enter
lods
jbe
cwtl
sub
add
or
fisubl
je
or
ss
loope
cs
dec
outsb
stos
or
pop
mov
dec
inc
push
push
das
bound
and
test
sub
aad
out
test
jb
adc
mov
sub
rclb
aam
jl
pop
stc
pop
loope
push
cmpb
inc
insb
sub
aad
insl
adc
or
xchg
std
jmp
and
mov
xchg
or
int3
sbb
in
mov
ret
mul
ret
loope
imul
adc
loope
loop
dec
out
and
leave
jmp
loope
cmpsl
sub
cmp
xchg
stos
arpl
add
enter
inc
lahf
sub
jp
xor
pusha
mov
cmpsl
ds
xchg
scas
mov
adc
out
jns
aaa
mov
mov
dec
aas
lcall
aaa
test
pop
ss
dec
je
ret
and
mov
repz
and
push
insb
push
cld
jno
aaa
xchg
sbb
outsl
in
sahf
int3
mov
push
shrb
cs
mov
sbb
mov
subl
jnp
jecxz
jns
pop
iret
inc
sti
xchg
cmp
cmp
dec
ret
push
fmulp
mov
insb
pusha
mov
jae
xchg
negl
fcoms
push
push
dec
push
pusha
xchg
adc
sahf
mov
mov
mov
pop
mov
and
adc
fiaddl
cmp
cmpsl
int3
xchg
lods
push
bound
jge
jle
mov
and
dec
loop
xchg
mov
cmp
lret
pop
pop
mov
push
sbb
push
fwait
rorb
mov
ficoml
mov
ror
inc
test
mov
sub
mov
test
and
outsb
insb
mulb
and
inc
insb
sub
inc
pop
dec
loope
loopne
ret
jp
movsb
and
xor
sub
xchg
jae
inc
add
lea
mov
scas
cmp
xchg
ja
pop
or
and
jnp
mov
fimuls
xchg
dec
xchg
hlt
mov
xor
push
add
push
jb
movsb
call
mov
mov
lcall
lcall
push
aas
jno
popa
push
cwtl
rcl
sub
mov
jns
pop
int
cmpsl
aaa
or
push
adc
pop
sahf
aam
fwait
loope
fstpt
xchg
ret
push
sbb
mov
jecxz
mov
inc
mov
add
mov
cli
mov
cmp
lods
mov
mov
pop
mov
fimull
mov
scas
jae
inc
in
add
inc
sub
les
movsb
pop
enter
adc
lock
aad
loop
loopne
clc
fdivrs
and
adc
mov
push
push
stos
lods
lret
sbb
mov
push
cmp
inc
cmpsl
xchg
adc
fucom
xchg
pop
aad
pushf
sarb
jge
movsb
fldenv
rcl
fcomp
fadds
xchg
fstps
sti
cmp
and
add
jne
mov
mov
pop
xchg
cld
xchg
push
cmc
pop
jle
dec
stos
mov
mov
jns
inc
ret
jmp
pop
pop
jb
into
pop
shl
js
adc
pop
dec
pop
in
sub
test
mov
mov
xchg
into
push
lahf
jnp
adc
jb
push
lcall
test
repnz
add
xchg
push
push
mov
and
adc
iret
call
aas
and
nop
icebp
xchg
or
in
in
pusha
test
int
adc
xlat
mov
inc
push
jg
neg
cmc
ss
enter
nop
imulb
cmp
je
in
cld
ljmp
adc
je
loop
out
jb
pop
pop
inc
and
dec
rolb
call
out
faddl
fists
subl
xchg
cmp
sbb
ja
xchg
lds
andl
pushf
in
call
into
in
jecxz
call
test
push
andl
sub
mov
cli
dec
sub
jmp
rolb
ja
aad
adc
repz
cld
loope
mov
xor
mov
ss
lods
ja
mov
dec
cld
aam
mov
repz
icebp
mov
pop
fisttpll
add
xchg
mov
lret
outsl
mov
xchg
in
pusha
mov
jae
in
mov
pop
repnz
adc
mov
xor
sub
mov
ja
jae
fimuls
sbbb
int
inc
scas
cltd
push
test
int3
rcl
shl
cmp
jl
sbb
adc
int3
inc
arpl
dec
lahf
cmpsb
inc
leave
arpl
xor
dec
pop
lret
ret
cmp
jmp
insb
in
lods
mov
mov
lods
pop
cli
shll
pop
push
pop
add
popa
xchg
or
dec
add
lcall
sbb
jno
mov
sarl
adc
sub
jge
push
aas
mov
cmp
dec
gs
lret
lret
int
fmul
int3
inc
push
mov
shrb
xor
loop
lret
popf
add
lret
xchg
shll
and
push
imul
fiadds
pop
adc
or
adc
pop
scas
or
mov
sub
xlat
sbb
rorb
xor
stc
fcmovbe
jmp
mov
je
inc
mov
cmc
mov
fstps
pushf
sub
lret
outsl
cld
xor
shll
and
stos
negb
hlt
loopne
mov
xor
jl
jns
xchg
sbb
repz
push
mov
leave
xchg
insb
and
jmp
stos
jb
cmpsl
lods
dec
mov
pop
notl
jne
lock
adc
call
daa
xor
add
popf
sbb
shrb
scas
sti
rcl
movsb
xlat
rol
sbb
mov
iret
fs
lcall
xchg
pop
and
mov
pop
mov
jle
popf
inc
sub
repnz
dec
jnp
lcall
popa
loop
xlat
push
sarl
dec
and
mov
stc
mulb
cli
dec
in
pop
push
movsb
xor
sbb
lds
test
or
js
or
ss
push
lret
aam
cmc
lds
pop
or
add
xlat
out
in
inc
repnz
fldt
aaa
je
into
pop
addr16
dec
int
xchg
inc
xor
add
mov
jb
popf
enter
lock
pop
push
cltd
cltd
int
insb
fdivl
loop
xorl
insl
mov
push
cltd
add
aam
shrl
mov
and
cmpsb
xor
jecxz
aad
jb
ss
adc
out
cmp
xchg
inc
jle
mov
roll
pop
inc
push
iret
jl
dec
cs
push
stc
adc
pusha
stc
cmpsl
neg
pop
and
sti
lret
mov
xchg
jmp
hlt
mov
push
bound
and
add
int3
iret
lock
xchg
test
push
es
jl
push
push
mov
sbb
rcll
loope
mov
pop
out
jecxz
dec
dec
pop
lock
pop
jmp
rclb
dec
aaa
sti
and
nop
loope
xor
movsl
push
lcall
mov
sarb
iret
mov
or
sub
inc
imul
jmp
cwtl
addr16
mov
fidivrl
add
pop
test
push
popa
repz
shlb
push
adc
and
and
fnstsw
cwtl
sub
inc
lcall
loope
sahf
mov
xchg
mov
in
fstps
mov
cli
jmp
add
dec
cmp
jg
stos
call
sub
and
in
mov
daa
dec
stos
sbb
test
into
dec
or
movsl
fs
xchg
push
push
cmp
add
pop
push
sbb
sbb
push
add
mov
es
pusha
sub
std
xchg
lea
or
enter
loope
push
sbbl
mov
in
add
add
and
je
inc
adc
push
cmc
adc
cmpsl
in
fwait
cs
push
dec
test
popf
cli
inc
lods
leave
lret
mov
push
pop
add
cltd
leave
pop
sub
cmp
xchg
xchg
rcrb
xor
pop
loop
sub
into
arpl
out
fnstsw
or
repz
push
push
stos
mov
js
lea
outsb
imul
nop
mov
inc
xor
sarl
jae
rolb
cmp
add
repnz
sbb
inc
push
shll
inc
mov
outsb
inc
into
enter
push
adc
mov
sub
jg
les
hlt
lret
add
or
jg
pop
ret
mov
jmp
xchg
pop
lock
mov
push
or
xor
xchg
pop
outsb
ret
out
out
mov
push
add
mov
mov
rclb
sub
sbb
pop
pop
xor
es
add
adc
cmp
pop
das
ss
adc
aam
loopne
pop
arpl
sahf
jbe
mov
jmp
and
aas
insl
inc
xor
ret
and
pop
gs
rdpmc
inc
sub
pop
mov
or
mov
dec
lea
shr
cmp
out
mov
ss
js
cs
popf
test
push
jge
addr16
pusha
sub
rolb
add
mov
mov
mov
call
ljmp
je
nop
pop
pop
aaa
loope
jl
pop
rorb
jl
jge,pt
pop
sub
scas
pop
testl
and
inc
inc
ljmp
jmp
and
sub
xchg
outsb
loop
sbb
cwtl
roll
inc
and
test
mov
xor
adc
push
sub
inc
shll
call
cs
pop
mov
cmovae
stc
pop
enter
adc
test
add
or
xrelease
mov
jbe
mov
mov
adc
push
scas
sarb
mov
push
add
push
std
pop
nop
ret
movsb
rorb
gs
loope
and
lea
stos
aas
insl
push
fldt
jp
js
lcall
or
mov
test
add
scas
add
xchg
mov
cmp
or
jmp
dec
mov
pop
inc
mov
mov
rol
out
sbb
pop
sbbb
push
negl
cmpsl
push
hlt
or
addr16
cltd
xchg
jg
cmp
pop
loop
push
push
clc
mov
clc
jp
adc
imul
inc
jb
and
std
movsl
negl
pop
test
clc
cltd
lahf
sub
outsb
daa
jl
xchg
adc
insl
bound
adc
pop
ja
jne
xchg
lahf
xchg
shrl
daa
adc
mov
add
jnp
jp
xchg
ljmp
jbe
enter
xchg
pop
push
aas
dec
dec
outsl
cmp
ss
mov
out
mov
inc
mov
jae
jae
dec
mov
and
xor
loope
lret
adc
xor
shll
std
push
leave
bound
cmp
dec
out
test
or
adc
add
mov
inc
mov
lret
jle
push
jle
adc
js
cmp
out
ja
std
cmpsl
mov
les
fcomps
test
gs
fldenv
std
hlt
clc
and
xor
cld
subb
cli
loopne
popa
add
inc
movsl
das
insl
inc
pop
inc
ljmp
fcompp
daa
jge
jbe
shlb
or
cmp
cmp
pop
shlb
push
inc
cmp
cld
pop
and
shll
pop
push
fwait
jne
cld
arpl
gs
fstps
fstps
lret
jne
repnz
lock
adc
mov
dec
cmp
and
mov
jne
pop
sti
add
icebp
cmpsb
nop
cmp
xchg
fnstsw
je
xlat
cld
lcall
push
nop
push
push
cmp
das
scas
fcompl
push
cmp
xor
or
inc
jns
jp
or
adc
mov
jp
xor
pop
outsl
dec
fstl
popa
lea
adc
or
lret
mov
fldcw
stos
loop
cmp
push
cwtl
inc
inc
leave
loope
fidivrl
mov
inc
jne
xchg
push
jns
arpl
cmp
cwtl
add
and
cmp
js
idiv
jns
dec
cmp
add
insb
ficomps
adc
std
aas
pop
and
inc
pushf
cmp
jae
rcr
dec
pop
xor
cs
das
call
cmpsb
test
cmpsb
scas
cmpb
enter
fsubrs
cld
insb
lcall
add
mov
xchg
and
mov
mov
mov
push
scas
pop
dec
jmp
and
pop
add
jno
xchg
daa
fs
cmp
leave
xchg
lahf
into
or
mov
mov
push
cmp
pop
inc
mov
pop
jecxz
adc
sbb
das
mov
mov
negb
out
xchg
bound
sub
pop
outsl
pop
add
sub
or
xlat
out
fwait
lret
fidivl
mov
lock
xchg
or
sbb
imul
lock
fisubrl
mov
out
filds
imul
movsl
iret
leave
sub
imul
adc
mov
inc
add
jmp
stos
gs
dec
sbb
popw
inc
fwait
mov
add
inc
inc
inc
inc
jns
test
xor
jo
lock
arpl
dec
push
or
jl
xor
scas
mov
dec
icebp
jbe
pop
push
or
jae
pop
inc
in
xor
dec
test
cld
inc
xor
insl
cli
mov
test
fldl
jnp
push
repz
iret
fadds
outsb
lahf
or
pop
push
adc
lods
lods
sub
push
ja
jb
aam
aaa
inc
cmp
hlt
push
es
and
out
loopne
sub
clc
lahf
and
lods
in
xchg
fsts
leave
xor
and
xorl
pop
aas
cltd
or
xchg
and
mov
push
lahf
les
sub
in
and
lea
inc
sbb
aas
jae
sbb
lahf
stos
cwtl
out
bound
psrad
lret
cwtl
xchg
fisubs
cmpsb
stos
das
fcmovb
sbb
mov
sbb
add
xor
fsub
jge
in
out
lods
cmp
lret
scas
bound
jecxz
sti
stos
lds
in
mov
jmp
mov
jmp
das
std
out
inc
add
lock
mov
sub
adc
pop
mov
lods
jmp
cs
xchg
mov
inc
mov
add
mov
jbe
or
nop
cld
roll
into
js
mov
mov
scas
mov
stc
mov
test
int3
push
cs
inc
xchg
js
movsb
cmp
sbb
in
cli
xchg
in
rclb
andb
lcall
sub
es
and
mov
jnp
push
sbb
cli
lods
loop
stos
fmull
jbe
das
mov
sbb
test
loope
in
xchg
xchg
rcrl
sub
ljmp
cmpsl
jmp
aad
je
mov
cld
pop
push
mov
sahf
das
push
mov
inc
addl
fsubrs
hlt
sbb
xchg
lcall
stc
mov
adcb
ss
std
xchg
iret
pop
dec
add
mov
data16
hlt
mov
mov
out
aas
and
or
adc
lcall
mov
mov
mov
pushf
and
movsb
add
loope
xchg
jge
xchg
push
iret
adc
imul
int
sub
ret
inc
or
in
jae
call
jne
cmp
pop
aas
scas
add
sbb
jmp
testb
xchg
sti
jmp
mov
push
fldcw
add
push
sbb
add
dec
push
cmpsl
iret
cmp
dec
sti
fstp
test
and
sbb
xchg
pop
out
xor
dec
rcr
or
sarl
sbb
lds
jl
pop
sub
xor
xor
loopne
fidivs
fnstenv
out
lret
shrl
mov
adc
sub
fwait
outsb
pop
sbb
out
or
push
pop
bound
int
ror
mov
pop
jge
mov
push
mov
mov
sbb
js
js
test
jnp
push
cmpsl
jbe
adc
mov
mov
ss
fsubl
dec
cmpl
and
mov
stc
fdivp
in
xchg
scas
mov
mov
jae
dec
mov
mov
aaa
add
jmp
in
call
cmp
mov
ljmp
orl
jecxz
shrl
dec
jmp
lock
stos
xchg
dec
es
dec
pop
aas
adc
lods
testb
lcall
popf
sub
test
dec
inc
pop
mov
ljmp
push
sub
xchg
dec
pop
push
dec
aam
popf
shll
stos
pop
insb
hlt
fsubl
pusha
loope
lock
mov
dec
idivl
xchg
or
out
adc
daa
and
lds
mov
icebp
gs
sub
or
push
mov
mov
ret
adc
in
movsl
and
mov
ss
in
shrl
inc
push
mov
mov
mov
lods
shl
sahf
aam
inc
pop
lahf
add
xchg
xchg
ret
xlat
cs
inc
mov
or
sbb
sbb
jns
aas
jg
lcall
cmc
push
jno
scas
ja
cmp
fs
cs
push
and
std
filds
and
jns
mov
jmp
dec
sti
mov
nop
xor
mov
pop
and
jle
loop
xorb
sub
inc
lods
and
xor
jns
cmp
or
sahf
pop
add
bound
mov
push
sbb
cmp
xchg
inc
es
mov
xor
mov
mov
inc
or
mov
mov
jg
leave
sbb
cli
inc
sbb
lcall
and
fucom
pop
hlt
jg
mov
mov
push
inc
mov
loopne
and
call
push
psubq
or
cmpsl
sarb
dec
xchg
cmpxchg
imul
mov
ret
jns
xor
jge
push
inc
jmp
adc
gs
mov
adc
sub
lods
lcall
dec
adc
jbe
je
sub
ret
push
std
sbbl
xchg
dec
dec
sbb
xor
jp
or
xor
int3
mov
sbb
insl
jle
popa
mov
ljmp
stos
scas
mov
into
fisttpl
or
push
popf
shrl
or
fmull
popa
mov
fwait
jecxz
repnz
and
pop
mov
int3
adc
push
call
xchg
xchg
inc
adc
cmp
lods
lock
or
ss
ss
sbb
scas
pop
xor
in
pusha
ficomps
scas
xorl
or
mov
sub
dec
push
mov
dec
movsb
rol
bound
movsb
mov
cmp
test
ja
and
or
push
inc
pop
pop
leave
push
arpl
lea
sbb
iret
pop
sub
pop
xchg
jb
add
jno
inc
imul
sbb
xor
into
mov
mov
call
lds
add
std
mov
mov
mov
cld
pop
adc
adc
push
jp
xor
jnp
scas
sub
fistl
and
stos
mov
push
xor
adc
sbb
repnz
sbb
stos
jo
mov
xor
jae
arpl
lea
mov
repz
cmpsb
fdivl
jnp
dec
jle
in
push
or
dec
mov
ret
fcmovu
mov
lds
sahf
xchg
popf
cmp
mov
mov
jno
shl
jbe
sbb
mov
pop
xchg
sub
fdiv
dec
lcall
push
push
popa
mov
mov
fidivrs
sub
sub
dec
mov
sub
mov
lds
pop
cmp
addl
ds
xchg
inc
xchg
int3
dec
pop
fsubrl
xchg
mov
orb
mov
and
rorb
enter
inc
dec
mov
jbe
mov
js
cmp
frstor
stos
pop
pop
rcrb
test
stos
shrl
aad
xchg
popa
pop
xchg
out
xorl
dec
jae
insl
mov
rcrl
mov
and
stos
push
fsubrl
aam
inc
js
les
dec
add
lea
dec
out
aad
scas
add
sub
insl
mov
push
es
jnp
leave
cld
hlt
lret
mov
pushf
pop
push
sahf
sub
sbb
inc
xchg
xchg
cmp
out
stos
pusha
and
movsl
sbb
in
cmpsl
jnp
xorb
out
loope
inc
cs
sbb
pop
cwtl
push
decl
fwait
fwait
adc
xchg
in
push
adc
cmp
bound
jne
pop
stos
insl
hlt
xchg
inc
xor
adc
outsl
sti
out
test
mov
adc
mov
sbb
mov
inc
mov
push
jmp
push
and
push
test
cmp
scas
dec
pop
push
xchg
in
cld
mov
push
test
mov
repz
int3
fnsave
leave
lds
pop
cmp
and
inc
sub
sbb
out
or
rcrl
mov
xor
jle
jo
pop
adcb
and
movl
enter
and
pop
mov
pop
jge
enter
lret
jno
outsl
lods
xor
movsl
lret
mov
loopne
call
push
mov
ss
xchg
mov
xchg
mov
xchg
sub
sub
lods
scas
sbb
push
dec
leave
cmp
add
and
mov
daa
inc
sahf
addr16
neg
pop
mov
cltd
push
fimuls
and
pmullw
ret
jp
shlb
sub
icebp
in
dec
imul
insb
xor
and
int
lret
inc
inc
jne
pop
outsb
jl
scas
and
mov
and
and
fcomps
js
or
jmp
dec
sbb
pusha
xchg
cmpl
xchg
push
push
fdivp
iret
push
shrb
mov
fstpl
mov
xlat
sub
out
jmp
fmul
jle
inc
pop
xchg
into
dec
es
adc
loop
pop
push
test
mov
push
jb
fwait
sbb
xor
daa
shlb
add
and
inc
rolb
xchg
je
rolb
rcr
mov
ss
adc
push
sub
xchg
out
lahf
mov
mov
xchg
fmuls
lret
je
inc
mov
sahf
sahf
iret
fs
fld
fs
ret
idivl
mov
jp
inc
xor
out
cwtl
inc
subb
and
ret
xor
push
inc
nop
mov
dec
adc
cmp
dec
test
mov
push
fld
sub
popf
sarb
cmp
addr16
push
aaa
or
pop
fisubs
aas
pop
jge
pop
mov
mov
loopne
fistpll
iret
jg
or
push
xor
inc
inc
dec
inc
push
xchg
filds
clc
movsb
xchg
fnsave
sbb
pop
inc
movsl
cltd
jne
cltd
or
sbb
push
in
outsb
pop
test
push
xorl
jl
and
inc
add
aad
sti
adc
xor
pop
into
add
mov
stos
std
in
mov
pop
lcall
xor
jne
fdiv
outsl
jo
insl
sbb
shlb
cwtl
fimull
inc
and
aad
jnp
mov
adc
xor
dec
mov
xchg
push
mov
mov
mov
pop
outsl
sbb
cmp
pop
je
fdivrs
out
pop
popa
insb
sub
jbe
lock
jecxz
mov
lods
ja
sub
daa
fdivs
mov
int
loope
in
stos
mov
xchg
jl
jne
or
pop
out
or
pop
mov
outsl
fwait
mov
cmp
mov
jnp
xchg
add
pop
jns
sub
lock
lods
dec
ret
sub
lret
stc
sarb
add
sbb
stos
xchg
jp
movsb
mov
jb
jle
fnstenv
shlb
fnsave
fnstcw
jno
aad
cmp
and
cmp
jb
cli
aad
pushf
pusha
cmp
popa
mov
in
mov
jecxz
ret
bound
popl
mov
imul
aad
test
in
pop
push
rol
enter
fcompl
push
dec
or
mov
rorb
popa
pop
mov
jno
enter
or
mov
and
sbb
in
mov
mov
lock
lahf
repz
push
jge
lods
jb
out
and
mov
sub
jno
mov
cmpl
cltd
jnp
arpl
jo
sub
cmc
dec
data16
movsl
pop
push
sub
add
mov
mov
insb
popa
mov
add
mov
push
imul
push
jl
fwait
or
mov
outsb
pop
xchg
adc
xchg
test
imul
hlt
loope
jns
in
les
pushl
mov
jne
out
pop
mov
idiv
aaa
add
xchg
pop
or
les
out
jecxz
jb
in
adc
pop
jns
adc
aas
xor
sub
test
testl
sbbb
push
aas
or
inc
push
ffreep
adc
jns
xchg
out
xor
cmp
push
repz
add
add
dec
jg
push
add
xchg
lods
mov
mov
roll
repnz
loope
enter
andb
das
mov
mov
push
imul
fwait
mov
shl
pop
in
xlat
leave
pop
data16
mov
aad
cmp
add
movsb
int3
mov
push
sub
dec
cmc
jne
add
add
pop
jnp
testl
mov
sbb
adc
and
push
and
in
adc
xlat
mov
or
cmp
lods
mov
sti
jbe
xchg
pandn
mov
jl
cmp
out
clc
repz
mov
arpl
subb
ja
mov
ret
fmuls
outsb
outsl
outsb
arpl
xor
jbe
pop
fs
inc
push
push
mov
and
mov
negb
fs
ds
xor
aaa
inc
pushf
xchg
imul
stos
stc
jmp
ss
call
aaa
aam
mov
pop
std
jl
xor
push
pop
mov
jmp
add
mov
cmp
subb
push
xchg
adc
mov
cs
in
add
dec
cmp
mov
out
bound
pop
jg
ja
int
ja
cli
test
sbb
mov
xchg
aas
sbb
or
sti
xlat
in
xchg
test
mov
xchg
sub
sarb
mov
je
jb
add
pop
fisttpl
jo
and
mul
addr16
mov
aas
int
es
les
out
pop
pop
jp
cwtl
dec
mov
repz
repnz
inc
lods
jo
xor
lret
cmpsl
rclb
jne
xchg
xchg
add
mov
out
push
xor
sahf
mov
inc
scas
inc
sub
inc
mov
jne
pop
cmc
daa
movsb
inc
outsb
cmpb
fiadds
xchg
add
hlt
pushf
adc
aad
fnstsw
sub
dec
xor
dec
imul
mov
cld
scas
gs
xor
xchg
xchg
orl
pop
out
lds
jmp
repz
call
aas
mov
out
cmp
dec
outsl
inc
xchg
pop
inc
adc
lret
dec
test
jae
mul
out
pop
and
ljmp
pop
push
icebp
cli
int3
add
loop
ret
pop
or
xorb
stc
stc
mov
subb
xor
pushf
loopne
loop
dec
inc
dec
shlb
in
xchg
scas
lds
xorl
mov
sti
nop
xchg
aaa
or
cmp
add
add
fmull
push
or
aam
push
xchg
pop
divb
test
in
sub
adc
fnstsw
pop
or
adc
jo
dec
jo
xor
jp
jle
mov
jp
adc
mov
lahf
jae
daa
arpl
call
inc
loopne
pop
pop
test
ret
imul
lods
lds
ljmp
lcall
push
out
mov
loopne
dec
xchg
loope
pusha
int
push
mov
mov
lds
mov
mov
movsl
inc
mov
and
fmuls
movsb
lock
and
stos
push
in
addr16
enter
adc
loopne
mov
inc
lcall
imul
adc
int
insb
rcrl
cmpsb
pop
loop
jge
loopne
add
mov
inc
and
xchg
push
mov
stos
rclb
and
push
lret
or
rolb
adc
lret
ljmp
in
adc
fstpt
cwtl
in
push
lcall
adc
jns
and
in
bound
dec
adc
mov
and
sarl
push
cmp
or
test
insb
pusha
jno
roll
jno
xor
sub
dec
pop
cmp
sbb
imul
push
call
inc
fiaddl
pop
ja,pt
pop
ret
mov
fcompl
rclb
adc
push
lret
mov
in
int3
popa
out
pushf
xchg
pusha
mov
test
insb
pop
movsb
jns
jae
test
subb
aaa
push
push
push
sbb
stos
imul
mov
mov
cwtl
pop
sbb
leave
ljmp
xchg
push
je
or
leave
nop
sti
adc
sahf
sub
or
mov
int3
fwait
xchg
xchg
and
mov
or
negl
mov
pop
mov
shl
jge
ret
lret
nop
das
scas
aad
xchg
cld
lret
js
inc
sub
shrb
sahf
mov
loopne
inc
fdivs
sub
into
insb
adc
mov
xchg
clc
jno
push
rclb
adcb
dec
popf
pop
add
std
mov
leave
pop
inc
ds
mov
mov
lret
sbb
loop
in
push
insb
out
cmp
xor
imul
out
addr16
push
pop
rcrl
int
mov
add
or
mov
mov
or
mov
in
loopne
adc
inc
mov
pushf
pop
or
mov
mov
sbb
xchg
loopne
pop
push
cwtl
sub
dec
dec
sub
mov
dec
outsl
add
xlat
mov
fidivl
pop
or
dec
push
nop
out
xor
into
fs
mov
mov
xchg
pop
aas
xor
push
loop
mov
in
addr16
lcall
push
inc
stc
ds
es
and
enter
or
dec
mov
jl
cs
rclb
sub
lret
xchg
and
pop
mov
inc
in
mov
mov
xor
orl
or
movsb
inc
in
out
in
ljmp
jne
je,pt
fistps
daa
repnz
nop
mov
lods
lock
jle
jge
pusha
in
movl
sub
add
pop
and
push
add
fimuls
out
xor
mov
lahf
inc
dec
xchg
cld
mov
xchg
daa
mov
inc
jo
or
or
ja
jns
int
push
iret
dec
daa
sbb
mov
sbb
enter
add
mov
int3
flds
cmp
mov
sti
mov
mov
xor
imul
shl
arpl
xchg
jb
push
push
rolb
sub
fucom
ja
sbb
mov
or
xor
sub
arpl
mov
stos
xor
xchg
rcpps
jmp
mov
and
or
scas
out
dec
bnd
pushf
and
out
addr16
mov
jb
mov
xchg
arpl
out
iret
dec
pusha
int
mov
insl
lcall
mov
addr16
outsb
aas
or
fndisi(8087
jg
mov
aam
fs
imull
aas
push
scas
add
adc
leave
xchg
addr16
push
jne
enter
test
mov
cltd
nop
jnp
or
ds
int
mov
jmp
jmp
push
dec
or
clc
add
inc
fnsave
mov
mov
jbe
fbstp
popa
xorl
inc
sub
push
or
leave
mov
xchg
or
jg
cmp
mov
push
dec
xor
sbb
lret
mov
pop
clc
dec
iret
and
xlat
inc
sbb
daa
mov
pop
xor
cmc
pop
scas
fstpt
xchg
sbbb
push
add
and
cmp
mov
pop
mov
sub
cmp
push
stos
fcmovb
dec
test
mov
cmpsb
push
roll
imul
insb
xchg
fisttpll
sbb
dec
jp
jne
push
sbb
sbb
mov
add
in
jns
inc
lcall
dec
sbb
mov
adc
jbe
cmp
jae
in
mov
enter
mov
adc
mov
pop
inc
push
or
out
dec
stos
mov
popa
sbb
dec
push
mov
jnp
jp
mov
push
movsl
ja
jb
loop
xor
in
mov
mov
add
cmpsl
scas
jo
out
aam
sub
add
gs
jmp
sbb
ds
push
xor
xor
cmp
xor
and
mov
das
in
adc
push
adc
test
fwait
icebp
jmp
cmpsb
into
ret
negl
inc
bnd
and
jns
mov
stos
jne
adc
je
mov
inc
inc
adc
jae
repz
xor
sbb
jge
dec
outsl
loop
call
ds
ret
cs
push
jns
mov
daa
and
inc
cmpsl
loope
jge
sbb
xor
ss
push
in
mov
and
pop
mov
aam
push
clc
fisttps
test
test
mov
ss
pop
xor
int
adc
addr16
mov
xor
cmpsl
testl
sahf
adc
sti
inc
jnp
push
lahf
fs
mov
int
xor
loopne
jmp
sbb
mov
inc
lcall
add
mov
rcrb
aaa
inc
add
xchg
sbb
or
sbb
notb
and
dec
adc
jecxz
xchg
mov
adc
stos
push
jno
add
mov
pinsrw
xchg
lret
lahf
cmp
fwait
pop
lock
jp
mov
inc
jmp
push
mov
jp
insl
xor
mov
leave
xor
jns
popf
add
cmp
and
dec
test
xor
xor
add
xchg
addb
jg
stos
fidivl
fnstsw
hlt
inc
test
mov
mov
lret
sar
dec
add
popa
add
pusha
icebp
xrelease
cmp
out
jns
jbe
out
mov
mov
mov
loopne
lock
loop
inc
fsubl
testl
xor
or
popa
rorb
leave
mov
fcomp
mov
adc
in
xor
fimull
ss
outsb
mov
jb
out
jno
je
rclb
mov
mov
jnp
lret
push
repz
mov
and
in
cmc
jae
leave
mov
lcall
sbb
push
xor
cmpsb
outsb
gs
push
popa
dec
jbe
popf
add
rclb
xlat
sbb
ret
adc
cmp
sub
jmp
fadds
add
mov
jns
dec
push
or
inc
xchg
inc
push
or
std
repz
sbb
scas
xlat
mov
xchg
loop
jne
sahf
aaa
push
rcll
movsb
adc
les
cs
mov
mov
cmp
adc
call
jo
jae
aaa
jmp
or
lods
lods
lahf
ja
jae
mov
cmp
ss
mov
xor
lods
sbb
stc
pop
nop
rsm
ds
sbb
jge
sbb
or
loope
cmpsb
sahf
mov
jno
call
es
cld
or
mov
push
and
rcr
repnz
cmp
andb
lock
loopne
sub
or
mov
fsubrs
jne
cs
pushf
les
adc
cld
sbb
shrb
mov
mov
pop
test
lret
das
aas
shlb
mov
cmpsl
stos
sbb
and
insl
subb
sub
adc
call
mov
mov
mov
lea
and
cli
cmp
rcll
or
ds
insb
xchg
addb
or
push
xchg
mov
push
mov
leave
clc
pusha
or
rcrb
call
mov
ljmp
sub
notl
lods
loopne
scas
jne
jmp
inc
arpl
lea
jmp
jns
mov
imul
cmp
or
push
jg
sbb
test
mov
mov
cld
jne
cmpsb
mov
xor
fsubrs
xchg
adc
lret
cmp
arpl
aam
stos
push
fidivl
xchg
div
cmpsb
divb
stc
aam
lods
pop
outsl
pop
lea
outsb
sti
lret
jp
test
xchg
clc
xor
loop
pop
fimull
cli
data16
sub
sbb
test
fidivs
mov
cmpsb
adc
loopne
sbb
mov
loope
arpl
jp
mov
stos
icebp
scas
push
or
lahf
dec
xchg
mov
mov
fldt
cmpsl
fdiv
jge
xchg
add
out
bound
rcll
add
mov
mov
inc
insl
jge
dec
mov
pop
clc
test
gs
imul
leave
ds
cmpsl
sbb
jecxz
mov
push
mov
xchg
pop
adc
push
jge
mov
ja
cmc
sbb
adc
and
icebp
test
pop
dec
shlb
xchg
pop
or
and
repnz
xchg
ja
ds
hlt
into
fistpll
in
lahf
push
add
jno
repz
jae
shr
or
add
xchg
pusha
dec
ss
fimuls
mov
ret
aam
adc
je
fidivs
lcall
cmpsl
mov
cli
scas
in
dec
cwtl
xlat
repz
aam
pop
test
mov
xchg
es
mov
dec
shlb
orb
int3
or
jg
fistl
mov
pop
sub
jmp
xchg
outsl
and
fisubrl
fldcw
mov
or
repz
shlb
stos
jecxz
push
lock
mov
clc
pop
push
add
dec
lds
clc
jb
test
popl
and
cmp
int3
cmp
std
jae
adc
rcrb
ret
dec
cltd
ret
jmp
jno
xorb
icebp
and
pushf
jl
or
push
jmp
rclb
or
xor
jle
fdivl
out
fld
js
aam
mov
in
xchg
dec
notb
and
sarl
sbb
scas
nop
jmp
inc
sub
mov
loopne
inc
in
fistl
push
xlat
clc
jp
sbb
dec
ret
aad
pop
mov
mov
xchg
mov
add
inc
mov
cmp
scas
fsubrp
add
and
pop
sub
or
adc
stos
fwait
xchg
mov
or
out
ret
and
clc
shrl
bound
inc
xchg
stos
in
outsl
jae
xor
mov
mov
ja
sahf
popf
pushf
mov
dec
jns
pop
cmpsl
mov
pusha
repz
dec
scas
aad
push
fsubl
fildl
push
push
mov
gs
mov
mov
xchg
in
xorb
rcrl
mov
pop
push
hlt
pusha
lcall
fistl
jae
pop
pop
adc
repnz
adc
mov
jmp
shl
or
lods
push
xchg
or
pop
sahf
mov
inc
xor
mov
rolb
jge
adcl
aaa
jno
outsb
out
adc
sbb
cmp
jae
pop
xchg
pop
push
outsb
rcl
add
andl
and
sbb
mov
scas
jge
sub
fwait
xor
insb
inc
loop
pusha
and
repnz
insb
mov
cmc
ret
dec
xchg
out
dec
shlb
rclb
nop
pop
into
aas
jbe
mov
mov
adc
pusha
jmp
lock
gs
das
daa
jae
dec
lcall
adc
inc
mov
aad
rorb
fwait
rcr
cmpsl
push
adc
push
std
mov
push
inc
incl
mov
cmp
pop
cli
idivb
int
lock
pop
push
int3
in
adc
aaa
cld
stos
out
jmp
fisubl
shrb
and
rol
movsl
in
andb
xchg
popf
dec
fbld
mov
sbb
fidivrs
aam
jae
pmaxub
mov
jbe
fstps
sub
mov
dec
mov
mov
stc
jae
ret
jle
pop
xchg
and
mov
out
inc
sub
inc
jae
xor
icebp
sbb
aam
mov
adc
and
in
xor
pop
adc
add
mov
std
push
shl
mov
jae
int
adc
inc
add
push
jns
push
add
mov
adc
dec
ss
xor
add
inc
jns
aam
push
jne
cmc
mov
jmp
scas
and
mov
and
mov
cmp
sub
jg
and
jg
arpl
je
addl
sub
mov
pop
dec
stos
jg
iret
jl
jge
bswap
stos
stc
push
pop
push
inc
repz
scas
push
in
add
es
ljmp
or
mov
daa
stc
xor
add
mov
cmp
dec
adc
pushw
in
out
test
les
imul
lret
inc
push
jl
or
clc
cmp
mov
xchg
ret
out
in
push
add
cmpb
sbb
add
mov
and
js
xchg
xor
push
cld
arpl
jnp,pt
out
ljmp
clc
test
sbbb
mov
jg
loopne
out
sub
enter
sub
idivl
xchg
or
cmp
mov
mov
push
test
insb
or
pop
dec
shl
jb
movsl
push
sbb
lods
lods
out
int3
fidivl
xor
kxorb
mov
fucompp
andl
xchg
mov
inc
push
xchg
cs
dec
imul
pushf
js
fmul
dec
inc
xchg
daa
fisubrs
iretw
int3
adc
inc
push
cmp
inc
pop
pop
add
popf
ret
gs
movsb
test
jmp
sub
and
hlt
imul
stc
xor
xchg
lea
or
sub
ljmpw
cmp
mov
outsl
nop
orl
or
and
mov
dec
mov
fucomip
cli
pop
aad
dec
sbb
mov
les
cmpsb
sbb
jge
in
pushf
dec
adc
push
add
flds
in
out
cs
sub
daa
mull
int
cmp
xchg
or
and
nop
ds
mov
mov
das
pop
nop
jg
lcall
jg
ret
mov
add
mov
mov
mov
dec
mov
pop
idivb
sbb
mov
jns
sbb
xchg
push
inc
ljmp
je
inc
cwtl
inc
inc
pop
ret
adc
clc
aaa
fcomi
push
jl
push
iret
and
rolb
mov
or
inc
mov
test
aad
call
push
loopne
data16
mov
nop
mov
mov
pop
mov
sbb
icebp
cmc
mov
jne
cmp
scas
inc
aaa
push
pushf
stos
cld
jnp
xchg
pop
icebp
inc
imulb
sub
jae
dec
pop
inc
das
fsubl
sbb
xchg
or
repz
and
and
loope
in
mov
cmpsl
xorl
mov
sbb
repnz
mov
mov
out
bound
dec
xchg
aaa
dec
fcoms
stos
sti
jge
insl
out
add
mov
sub
ret
dec
test
sbb
in
add
lcall
iret
jle
loopne
and
mov
inc
and
bound
cmc
loopne
and
or
cwtl
sub
xchg
rorl
push
push
inc
test
cmp
xchg
xchg
mov
movsb
xchg
dec
cltd
lcall
and
addr16
jp
cmp
sub
test
iret
sbb
out
repnz
bnd
push
push
mov
out
loop
outsb
inc
aas
movsb
adc
jle
daa
stos
mov
adc
test
in
stos
lcall
jb
inc
jl
xchg
adc
jle
mov
mov
loope
addr16
fadd
mov
mov
cmp
sub
pop
pop
movsb
scas
jbe
sub
mov
scas
xor
roll
pop
push
xor
fidivrs
bound
sarb
insl
mov
cs
jnp
arpl
jp
andl
sbb
mov
add
insl
imul
fmuls
push
mov
mov
icebp
popa
pop
mov
pop
ss
xlat
es
adc
jnp
repz
push
add
aam
push
adc
add
int3
call
sbb
push
aad
inc
lock
nop
out
in
adc
xchg
fsubr
inc
nop
fwait
inc
insl
lret
movsb
in
push
cmp
fdivrl
xlat
sbb
and
out
leave
mul
sbb
dec
add
and
testl
pop
stos
call
mov
add
sub
dec
fdivs
mov
add
shl
gs
pop
xlat
clc
push
mov
in
jg
stos
and
into
cs
push
push
stos
sbb
add
fcmovu
out
fidivrl
inc
fcom
std
jl
push
push
or
cli
mov
popa
inc
push
sahf
lcall
int
sbb
and
cltd
xor
movsl
dec
jno
ja
mov
sti
decb
scas
in
std
arpl
dec
aaa
xor
pop
xor
add
pop
pop
repz
pop
sahf
clc
or
outsw
insb
aad
mov
lcall
in
xor
hlt
clc
push
adc
add
sub
shlb
dec
pushf
hlt
fdivp
jecxz
pop
push
aam
and
dec
and
add
inc
rorb
out
inc
mov
adc
popa
aad
loope
push
xchg
push
mov
sbb
and
imul
cmp
call
repz
dec
push
dec
push
rolb
xchg
iret
sub
cmp
out
inc
lret
xor
test
movsb
adc
xchg
fdivrl
and
and
jmp
mov
repz
aam
jl
and
mov
movsb
mov
pushf
or
push
fiaddl
sub
std
jnp
xchg
pushf
ja
sbb
xchg
ficoms
adcl
push
mov
popl
jb
negl
xchg
jecxz
jb
or
adc
or
out
fstpt
fdivrl
rcrl
inc
stos
jnp
sbb
test
jle
loopne
mov
jg
sub
arpl
mov
lea
addb
aas
dec
cmp
divb
sar
cmp
fdivr
jbe
pop
mov
xchg
xchg
jno
push
xchg
push
and
leave
std
dec
xchg
mov
inc
test
negb
add
push
mov
mov
lret
sub
test
movb
andb
inc
push
and
pop
scas
cmp
loopne
xor
push
push
cmc
mov
lret
push
mov
jo
popa
cmp
pop
dec
orl
mov
pavgb
cmp
xor
push
in
cmc
out
out
sbb
xor
cmp
inc
pop
loopne
jmp
pop
sbb
popl
cmp
bound
mov
in
fwait
rcrl
ret
cld
ret
xor
jmp
shll
test
and
or
stc
push
mov
je
outsb
or
rorl
cmp
and
sbb
stc
xchg
push
sub
xor
fs
movsb
cmp
push
pcmpeqb
inc
jnp
jl
les
in
in
mov
mov
fdivs
popf
jl
ds
roll
pop
cmpsl
test
inc
loopne
scas
cmp
ret
push
sub
or
stc
cltd
cwtl
mov
cld
push
jmp
xor
push
push
or
jp
cmp
push
mov
sbb
jmp
rep
outsb
mov
outsl
out
fsubp
mov
push
and
mov
int3
stos
xchg
push
ret
mov
jns
jae
xchg
and
xchg
xchg
xor
dec
or
jne
in
jbe
dec
dec
and
pop
add
mov
roll
sbb
scas
or
sti
inc
loopne
repz
je
bound
lahf
mov
mov
enter
mov
push
stos
jle
jp
cmc
fistps
cltd
iret
rcrb
mov
push
sbb
bound
mov
adc
mov
jns
mov
pop
leave
das
mov
xchg
pop
imul
fcoml
push
xor
jo
dec
xchg
xchg
dec
outsb
sub
xor
ds
ret
in
mov
js
xor
push
jge
dec
xchg
das
fisttpll
mov
or
dec
enter
pop
sbb
in
ss
rorl
xchg
mov
in
jne
rorl
mov
out
pop
gs
mov
xorb
sbb
outsb
lods
mov
add
mov
mov
sbb
mov
cmp
fcmove
xchg
test
xor
cmp
xor
out
inc
cltd
jns
lea
lock
outsl
xlat
dec
iret
jmp
pop
mov
test
mov
pop
insl
push
push
pop
dec
add
arpl
push
out
leave
push
fidivs
push
mov
xor
sbb
stc
push
mov
rolb
cmc
cmp
sbb
rorb
sahf
fwait
jp
or
jno
fcmove
call
outsl
sbb
fnstenv
fistps
jecxz
movsb
loop
and
sti
insb
inc
int
lock
jnp
stos
pop
push
nop
inc
repz
in
mov
and
call
jbe
inc
adc
lock
rcll
pushf
shl
fstps
into
xchg
mov
xlat
and
fimuls
push
push
jae
mov
pop
pop
push
mov
repnz
call
add
shll
inc
sahf
push
inc
xor
lret
stos
out
jb
out
mov
inc
or
mov
cltd
adc
push
gs
push
xor
adc
adcl
mov
push
out
dec
push
in
adc
repz
bound
sub
es
inc
jns
inc
and
push
xor
lock
scas
hlt
add
or
fucom
cmp
stos
ljmp
xchg
scas
cli
popf
xchg
lcall
cmp
mov
subl
scas
je
es
mov
xchg
xlat
mov
pusha
inc
cmpl
xor
sub
jp
lock
xor
nop
cwtl
dec
call
adc
cmpsl
add
adc
sbbb
cld
lods
mov
ret
dec
mov
shl
fldenv
and
lcall
push
push
lret
adcl
push
rorb
ret
cmp
fistpll
sub
adc
sti
les
out
sarb
adc
mov
add
cltd
jns
mov
push
xchg
hlt
fcomps
lret
mov
movsb
cmpsl
jmp
dec
dec
inc
hlt
inc
pop
sbb
push
rcr
jb
xchg
adc
fidivs
shrb
fs
push
or
fwait
addb
insl
jbe
aaa
dec
scas
jnp
xchg
ret
fwait
shll
mov
mov
and
adc
inc
scas
jae
rcll
andb
repz
inc
nop
popf
jle
sti
sub
cmp
sbb
cmp
fsubs
ljmp
das
or
rorb
movsb
outsl
mov
dec
xchg
cwtl
sti
mov
dec
loope
mov
cltd
mov
test
push
xor
xchg
mov
xlat
test
push
enter
lock
dec
fcoms
mov
sbb
scas
inc
out
sahf
inc
adc
js
xlat
outsl
sbb
adc
xor
mov
mov
mov
mov
mov
movsl
inc
cmc
mov
xchg
xchg
inc
xor
aas
and
sbb
mov
adc
sub
mov
xor
andb
hlt
test
popa
cmp
add
pop
or
cmp
sub
push
fidivl
sub
imul
mov
or
stc
pop
jbe
add
lahf
shr
cmc
jbe
pop
pop
pop
xchg
mov
subb
stos
ja
jae
xchg
loopne
clc
mov
mov
aam
pop
mov
int3
cmp
movsl
nop
and
jnp
cmp
lock
fwait
xchg
mov
sbb
adc
pop
enter
movsl
jne
sub
js
pop
bound
sarb
dec
imul
insb
mov
cld
push
stc
cwtl
sbb
sar
mov
rorl
inc
push
icebp
in
pop
pop
rcll
shl
push
cmpsb
lock
pop
sbb
jns
and
mov
test
lods
fisttps
pop
inc
fdivrs
repnz
xor
loope
scas
add
ret
icebp
or
mov
jns
xchg
test
mov
sti
jmp
push
jg
pop
sahf
push
stos
andl
imul
rolb
jecxz
inc
jbe
and
gs
pop
outsb
movsl
in
lods
pop
ja
inc
rcrb
fildll
fnstsw
das
scas
cmp
das
mov
and
es
fsubs
daa
inc
rolb
add
or
mov
push
sbbl
adc
stc
mov
outsb
lock
sub
xchg
adc
adc
enter
lock
cmp
sub
repz
nop
adc
xor
xlat
ss
push
mov
dec
xorl
push
scas
cmc
inc
aaa
lods
xchg
ret
loope
aaa
scas
add
mov
es
or
and
and
gs
inc
dec
push
pop
das
shrl
push
lcall
sbb
inc
pop
sbb
insl
mov
mov
push
jmp
sub
loop
out
sbb
clc
outsl
push
lret
inc
add
ds
sti
or
fsubrs
or
xor
xchg
aaa
cli
jg
and
adc
rcrb
dec
movsb
pop
mov
xlat
cli
shll
lcall
aas
jmp
out
ficoml
hlt
push
cs
jae
js
imul
insb
je
popa
inc
in
pusha
fcomps
ret
cli
scas
jp
lea
jle
pusha
leave
push
xchg
adcb
arpl
dec
cmp
arpl
and
adc
out
xchg
push
aaa
sub
and
rcrl
rcrb
imul
call
mov
pusha
mov
sub
aas
outsl
stos
or
fldl
lods
imul
sub
adc
outsl
mov
jge
out
push
out
sub
cmpsl
or
pop
cli
les
in
fildll
mov
scas
mov
adc
loope
sbb
cmpsb
mov
pop
jo
loope
in
push
mov
fld
xchg
fcmovnb
jge
mov
sub
inc
push
adc
cmp
movsl
add
dec
fists
mov
pop
cmp
movsl
bound
paddq
test
adc
xchg
jns
sub
stc
and
popa
push
pop
pop
cs
loop
adc
arpl
cld
mov
testl
mov
dec
sahf
cmpb
pushf
mov
ret
aas
jmp
inc
std
subb
rclb
sub
loope
mov
les
decl
sub
mov
scas
out
cmp
lret
push
lock
cmp
aam
fsubrp
inc
dec
pop
jge
push
adc
mov
cmp
sbb
ss
rolb
add
sbb
ja
push
mov
lock
hlt
outsl
pop
or
pop
rcl
cmc
fidivrl
popa
pop
mov
shll
addr16
sarl
jne
outsl
and
mov
scas
mov
dec
pusha
inc
scas
stos
fs
push
inc
rcll
int
aaa
inc
rclw
mov
shlb
int
inc
jge
mov
sub
subl
mov
xor
loopne
jne
out
ja
adc
or
sbb
sbb
jne
sbb
sub
mov
fldl
cmp
in
mov
inc
jns
sbb
rdmsr
lds
and
cmpsl
jne
push
and
sub
pop
jge
bound
mov
aad
xchg
lods
cmc
aaa
cli
fwait
arpl
js
xchg
mov
adc
fs
sub
arpl
lds
ljmp
sbb
dec
int
aaa
pop
mov
and
clc
cmpsl
bnd
and
out
ja
mov
sub
lods
js
lcall
ss
pop
dec
mov
add
loopne
out
es
arpl
outsl
lock
inc
repnz
aaa
sahf
in
add
call
cwtl
popf
inc
fisubrs
and
inc
cmpsb
xor
adc
fnstsw
clc
pop
cmpsb
out
jbe
push
out
lods
fimull
arpl
gs
add
cmp
push
xchg
ret
movsl
pop
shll
sub
inc
jnp
stc
xor
mov
mov
addb
lods
mov
mov
mov
cmp
pop
jno
xor
add
xor
push
mov
sub
dec
rdpmc
cmp
clc
test
dec
icebp
add
rolb
pop
hlt
rorb
fxch
inc
fcmovne
or
mov
pop
mov
jge
xlat
sub
notb
mov
sbb
sub
push
addl
adc
daa
jmp
mov
xchg
out
rclb
or
notb
mov
stos
push
mov
loop
adc
movsb
das
test
mov
loope
movsl
cli
ds
in
pop
jg
or
mov
mov
adc
cld
inc
jle
pop
push
inc
jbe
push
push
das
neg
push
cmp
adc
and
adc
or
sbb
into
cmp
ficompl
out
jbe
cmp
insl
inc
inc
lods
inc
mov
sub
or
imul
pop
stc
lods
lret
stos
and
push
testl
fwait
das
xor
loopne
mov
push
inc
je
or
push
cmpsl
cmc
jb
idivl
gs
pop
je
push
int3
cltd
inc
mov
cmpsb
test
leave
jae
movsl
shll
loopne
sahf
mov
or
aad
adc
jno
mov
jge
lods
sbb
mov
loopne
jmp
jg
lods
xor
lea
mov
and
mov
lret
inc
je
imul
push
dec
roll
nop
insb
mov
mov
add
insb
rclb
repz
xlat
inc
in
adc
lahf
jnp
pop
mov
subl
or
push
fisttpll
jb
jge
jb
popa
stc
push
gs
outsl
push
rcl
lds
pop
stos
mov
mov
mov
jo
movsb
jp
inc
out
sbb
and
and
cmc
pushf
xchg
ss
adc
cli
mov
pop
push
mov
adc
fisubl
aam
subb
mov
aaa
dec
jo
or
pushf
add
arpl
or
mov
jl
or
out
push
cmp
out
or
jns
mov
pminsw
subl
pop
subl
xchg
shll
push
xchg
adc
aam
scas
dec
scas
cmpsb
and
push
dec
jb
int3
cmc
lea
lret
movsb
jnp
sbb
sub
loope
pop
dec
outsl
in
jnp
push
pop
adcb
pop
insl
mov
jl
mov
jns
pop
bound
dec
aam
mov
lds
lret
aaa
je
push
mov
sahf
iret
mov
dec
mov
addr16
mov
push
pop
inc
push
sahf
lahf
cmpsb
loopne
jge
push
je
imulb
test
shlb
pop
sbb
sbb
mov
andb
ret
stc
mov
jo
or
jp
enter
dec
pusha
inc
push
sub
mov
hlt
add
xor
mov
pop
mov
rorl
repz
push
shll
mov
push
mov
test
ffree
add
shll
xchg
repz
sahf
out
jmp
stos
fsubrs
roll
stc
sbb
sbb
pop
mov
adc
adc
pop
dec
fldl
movsb
jns
cs
xchg
sub
sbb
and
cmp
fidivs
xor
pop
dec
inc
jle
push
out
sbb
popa
fcmove
mov
mov
popf
jecxz
dec
mov
lcall
adc
inc
pop
iret
inc
stos
sub
cs
push
or
sahf
enter
mov
cmpsl
push
lea
stos
xor
inc
jp
mov
mov
sti
je
inc
push
dec
mov
dec
mov
rorl
js
mov
in
pop
repnz
cmpsl
fbstp
push
addb
inc
nop
push
jmp
sub
js
push
cmc
test
mov
leave
scas
in
pushl
jle
inc
or
insl
mov
cmpb
and
mov
mov
mov
pop
insb
sahf
sbb
mull
repnz
loopne
addr16
insb
stc
lods
push
inc
push
inc
or
inc
das
pop
inc
mov
sub
xchg
mov
mov
adc
fildll
adc
jb
mov
mov
str
mov
imul
dec
mov
shl
jl
imul
fnstsw
enter
dec
clc
rcrl
inc
rep
add
inc
hlt
mov
int3
jecxz
dec
add
or
es
add
pop
dec
and
jnp
lcall
and
and
xchg
ja
enter
cmp
imul
dec
jmp
add
xor
dec
addr16
mov
ds
mov
jl
frstor
insb
mov
out
cwtl
repnz
xor
rcrb
mov
jecxz
nop
add
dec
mov
mov
xchg
movsb
and
addl
mov
sbb
shr
out
divl
push
sbb
push
dec
xor
pop
test
dec
jb
sarb
push
mov
sbb
jo
gs
fwait
jmp
xor
out
xchg
mov
jmp
push
pusha
pop
dec
mov
scas
je
nop
mov
mov
ret
mov
test
das
cmpsl
mov
mov
out
xchg
out
jnp
in
arpl
mov
fcompl
cmp
jg
add
xchg
stc
add
mov
sub
mov
es
push
ret
insl
es
adcl
dec
cmp
adc
xchg
adc
jle
shrb
bound
xchg
gs
sbbb
or
pusha
leave
ret
divb
outsb
lret
shll
dec
in
test
xlat
sub
sbb
mov
loope
dec
inc
les
popf
mov
dec
xor
xorl
ljmp
je
xchg
or
add
fldz
insl
cld
jb
iret
mov
out
dec
icebp
or
jl
mov
adc
mov
cli
dec
sbb
enter
icebp
ficoml
mov
sub
aas
into
test
fsubr
ret
sarl
rcl
push
jle
or
xchg
aam
cli
jge
out
and
fisubs
mov
fwait
dec
xchg
in
movl
imul
adc
cli
xchg
jl
scas
insb
push
loope
sbb
lret
repz
ljmp
cmp
dec
sub
dec
adc
icebp
lcall
add
add
or
fdivrl
jp
pop
mov
mov
mov
mov
add
jns
jmp
cwtl
dec
and
movsb
cmp
mov
mov
jmp
into
pop
cs
addb
cmp
sub
vmwrite
out
pop
scas
pushf
cltd
mov
in
xor
add
jle
adc
hlt
fidivl
push
jp
icebp
iret
or
sbb
iret
lcall
dec
jno
xlat
xchg
push
iret
jecxz
scas
fldl
dec
das
and
out
ret
push
xor
mov
xchg
dec
jo
aas
out
jnp
jbe
jns
clc
in
test
jns,pn
mov
stos
dec
lret
mov
sbbl
pop
xchg
mov
xchg
notl
lock
sub
ja
or
cmpsl
pushf
adc
inc
aaa
lret
sbb
je
push
ret
mov
call
mov
mov
mov
scas
repnz
jnp
xor
mov
repnz
pop
cs
rcl
mov
cli
mov
xchg
cmpsl
lret
addr16
sbb
push
sbb
js
xor
lds
add
xlat
fstl
mov
test
dec
sub
leave
addr16
loope
xor
fists
clc
or
adc
shrl
stc
jge
jbe
add
sbb
dec
popa
nop
stos
mov
sub
inc
and
mov
in
sub
xor
mov
pop
sti
xor
pop
xor
sub
sbb
das
xchg
push
adc
ret
pop
out
mov
cmp
scas
sub
popf
push
jnp
outsb
insl
mov
data16
shlb
cmp
ficompl
dec
lods
test
leave
add
and
adc
je
or
and
loop
sbb
nop
popf
cmp
xor
pop
shlb
ret
rclb
sbb
arpl
jbe
xor
cmp
mov
or
stos
mov
inc
lahf
mov
pop
add
push
push
adc
dec
sahf
outsb
cmp
push
mov
jb
xor
dec
mov
addl
int3
and
inc
pop
jne
sbbb
flds
pop
inc
add
pop
jp
push
cmp
stos
stos
jp
cwtl
cld
addr16
out
add
dec
ds
hlt
cli
les
mov
test
movsb
insb
jg
leave
lds
int3
push
xchg
js
and
push
mov
fs
test
push
pushf
out
pop
bound
xor
sbb
jne
mov
cmp
push
pop
sbb
arpl
push
and
popa
xlat
cs
lds
daa
or
in
or
pop
cmp
or
jae
cmp
js
cmp
mov
cmp
out
in
in
mov
xchg
inc
lret
adc
dec
add
cmpsl
jno
xchg
cmpsb
test
mov
add
mov
mov
cmp
js
mov
mov
pop
sub
test
cmpl
nop
out
and
aam
cmp
lcall
pop
or
push
out
mov
dec
je
jmp
mov
stos
pop
dec
sbb
jle
adc
mov
push
les
out
inc
xchg
scas
dec
cmc
lds
test
sbb
imul
cli
mov
das
push
sbbl
jo
ret
jo
mov
xor
bnd
cmc
xchg
data16
ret
cmc
stc
fisttps
loopne
movsl
mov
call
sti
or
lods
cmp
out
imul
sbb
lahf
cmc
inc
loopne,pt
cs
xchg
dec
or
cltd
lcall
movsb
cwtl
or
inc
ss
cmc
dec
rep
mov
hlt
cli
mov
call
nop
mov
adc
add
push
and
cmp
xchg
xor
rolb
out
test
fdivrs
pop
shlb
jmp
cmp
push
cltd
and
out
push
leave
and
je
fcoms
adc
shlb
sahf
or
imul
inc
std
flds
push
sbb
test
sub
push
pop
test
dec
mov
xchg
repz
out
decb
mov
push
leave
icebp
add
mov
and
daa
jnp
mov
adc
data16
lret
out
je
mov
cmp
push
xor
clc
jg
lods
sbbb
cmp
loopne
ljmp
lcall
add
je
and
repz
int3
xchg
dec
sub
sbb
push
hlt
jno
hlt
movsb
sarl
das
sub
fs
push
mov
shrb
or
cvttps2pi
mov
xchg
xchg
or
les
jns
nop
in
xchg
ret
inc
lret
and
xchg
sbb
cld
mov
rcl
mov
std
jne
xchg
push
mov
ja
lods
mov
mov
test
or
add
cltd
xor
cmpsl
cmc
cmp
scas
and
roll
ljmp
scas
adc
or
dec
push
fldenv
fdivrs
pop
and
adc
ret
sbb
or
fldenv
loope
test
mov
push
push
movl
lret
jbe
lahf
outsl
mov
jb
and
pop
cmp
push
adc
data16
je
cmpsl
iret
lods
xor
out
pop
ret
lods
out
leave
push
push
mov
nop
xor
dec
movsb
in
mov
das
push
iret
loopne
std
mov
lods
adcb
rcrl
adc
lea
outsb
mov
inc
xchg
cmp
xchg
sbb
dec
sub
push
xor
sub
lea
enter
xor
popf
or
sbb
xchg
jecxz
dec
push
nop
dec
mov
outsb
aam
adc
pop
push
cli
inc
and
popl
pop
pusha
jg
fwait
jg
adc
cmp
mov
or
or
adc
mov
xor
mov
arpl
arpl
lds
es
fadds
xchg
imul
add
lock
das
add
mov
nop
jns
aas
loop
adc
int
popf
cmc
sahf
stc
xchg
fistpll
xchg
sub
jb
popa
gs
mov
cs
sti
hlt
or
andl
int
sub
xor
jb
jge
dec
xchg
dec
push
movsl
cs
rorb
cld
into
xor
sbb
nop
mov
bound
mov
add
or
mov
push
imulb
stos
ret
arpl
ljmp
push
xor
push
pop
mov
lcall
xor
popf
fwait
dec
popf
call
imull
jmp
sbb
xchg
stos
xchg
mov
mov
dec
in
push
lahf
lea
rcrl
xchg
mov
xor
or
add
subl
addb
data16
clc
xchg
jns
rcl
popf
lcall
mov
int
mov
cmp
jns
jns
dec
mov
mov
stc
fidivrs
imul
pop
stos
insl
xchg
stos
mov
leave
jbe
inc
std
and
sahf
cwtl
or
std
xor
adc
aad
inc
inc
outsl
lods
push
lret
mov
lds
pusha
gs
push
adc
push
pop
mov
xor
into
mov
push
addr16
fmuls
arpl
aaa
hlt
mov
lds
pop
hlt
push
ljmp
lcall
ret
les
jge
jno
mov
pop
ror
add
pop
iret
mov
adc
sub
in
jns
es
mov
mov
adc
pop
pop
and
inc
xchg
iret
or
addr16
stos
xchg
fucomp
cmp
call
in
sbb
lods
in
xor
sbb
fists
dec
adc
idivb
inc
jecxz
mov
insl
xchg
mov
addr16
push
mov
cli
mov
push
lds
outsl
imul
adc
push
mov
adc
cmc
mov
mov
pop
add
xor
push
lock
rclb
pop
sbb
sarl
jb
pop
xor
inc
mov
cmp
and
rolb
daa
sub
stc
mov
in
enter
jbe
ficompl
lcall
into
push
sti
stos
aam
mov
add
sbb
or
das
jmp
call
popa
insl
movsb
xchg
cmpsl
mov
mulb
add
hlt
sub
incb
sub
jb
iret
shl
mov
sbb
bound
xor
jge
mov
xchg
inc
movsb
push
xor
cmpsl
scas
and
mov
xor
cmpsl
frndint
ret
out
cmc
addr16
lds
xchg
sub
popf
ss
lock
shlb
inc
adc
xchg
aad
inc
push
sbb
dec
mov
and
xchg
lcall
adc
popa
imul
mov
pop
sbb
dec
and
and
test
adc
xlat
lret
enter
add
popa
mov
mov
dec
mulb
sti
or
adc
push
loopne
hlt
mov
shrb
push
jnp
cmpsb
xor
xchg
push
inc
cmc
out
mov
inc
popf
sbb
test
push
lds
or
inc
int
shll
push
mov
cmc
shrl
sub
imul
call
fwait
xor
out
loop
adc
inc
push
xor
in
sbb
lods
push
dec
mov
ret
and
mov
pop
add
sub
icebp
out
xlat
imul
add
push
shrl
cmp
mov
inc
xchg
push
sbb
daa
push
int
ds
in
mov
xor
push
jmp
aad
xchg
mulb
xchg
leave
add
mov
fs
xchg
sub
ljmp
or
fcmovb
cs
inc
lcall
inc
xstore-rng
cmpsl
inc
stos
adc
test
fidivrl
xchg
fldcw
dec
xchg
mov
add
frstor
daa
insb
shl
test
sub
stos
and
roll
xor
jg
orb
cld
out
jl
xchg
mov
lea
sub
jns
aaa
xchg
adc
mov
insl
dec
and
bound
xor
cmpsl
jmp
cmpsb
es
cmovle
lock
enter
jae
fdivr
add
mov
jle
inc
inc
ds
mov
xchg
or
div
fwait
popf
shlb
stc
pop
sbbb
push
int3
and
xchg
js
xchg
aam
fldt
mov
inc
mov
and
push
jge
add
jl
ret
add
or
xor
stos
gs
dec
pusha
lahf
mov
pop
lock
inc
xor
lcall
add
dec
fs
cmp
scas
inc
lahf
jns
cltd
pop
mov
push
inc
xor
lods
movzbl
sbb
test
ffreep
loop
mov
mov
out
and
js
jo
push
push
xchg
and
adc
imull
inc
xchg
aam
sahf
cltd
jne
mov
mov
cmp
rcrb
loope
mov
popa
iret
sub
cs
dec
jo
addr16
pop
cmpsl
dec
testb
xor
pop
lock
pusha
sub
sub
shr
adc
fnsave
dec
leave
inc
pop
insb
lahf
mov
bswap
jns
jg
add
adc
lahf
adc
fcmovnb
jns
aas
cmp
aas
add
ret
pop
add
test
add
xor
fwait
mov
mov
cld
mov
push
jg
ret
into
in
subl
test
aad
and
lods
push
dec
sub
sub
call
loopne
ficompl
dec
and
pusha
add
xchg
cmp
sbb
je
rcl
les
sub
adc
lret
shll
mov
rorl
lods
test
fprem1
jecxz
fists
shr
jo
jbe
stos
pop
mov
xchg
xchg
arpl
push
addb
jnp
maskmovq
into
push
ficoml
adc
xchg
ja
dec
push
mov
repnz
pop
lea
xor
mov
cmp
jae
pop
icebp
imul
adc
andb
imul
push
adc
mov
dec
test
jmp
aad
push
xor
mov
test
mov
and
sub
insl
adc
add
gs
xor
xchg
jnp
ret
insb
cmp
xchg
fcompl
mov
pop
dec
mov
loopne
xchg
ljmp
insl
out
pop
or
lahf
sbb
mov
add
std
addr16
mov
ret
and
push
dec
push
mov
cs
dec
mov
repz
jmp
xor
dec
dec
dec
cld
fistl
adc
jo
add
push
inc
scas
loop
or
mov
leave
mov
scas
jns
or
cs
jo
mov
ss
pop
mov
push
out
adc
dec
sbb
hlt
sarb
arpl
fsubrs
out
mov
pop
cmp
mov
negl
sub
ret
into
mov
mov
in
ret
and
dec
sahf
mov
push
sub
lea
out
fsubs
lea
mov
sub
or
xchg
ljmp
mov
jle
leave
jg
and
inc
icebp
mov
push
stos
aas
xor
xor
mov
repnz
pusha
and
dec
mul
adc
insl
sub
and
out
jnp
xchg
cmp
dec
lahf
pushaw
jge
int
xchg
jnp
sub
push
push
dec
loop
lock
adc
jb
gs
or
push
imul
movsb
loope
in
push
inc
xchg
int
xchg
lea
outsl
js
mov
jns
in
scas
pop
jno
xor
shl
cmp
ja
test
jb
testl
ret
mov
lret
cmc
jno
mov
bnd
out
iret
lods
scas
fwait
and
iret
mov
mov
jb
decb
ret
xchg
adc
mov
adc
and
lret
sub
inc
dec
popf
adc
iret
dec
test
cmp
xchg
dec
inc
sbb
shrb
xor
popa
int3
aas
or
push
inc
jg
insb
or
mov
sbb
add
or
out
xor
lds
add
jp
mov
shrb
rorl
pop
repnz
and
mov
xchg
and
daa
or
aas
aas
jl
rcl
push
jge
adc
inc
adc
mov
cmp
sbb
sbb
test
pop
sbb
cs
aas
mov
fistl
popa
icebp
cmpsb
mov
jae
cmc
cli
inc
add
out
pop
push
aam
cltd
mov
push
lock
jle
sbb
push
or
stc
gs
lahf
push
scas
ds
jnp
and
xor
fs
jo
ret
inc
outsb
sub
addb
ficomps
mov
xchg
in
dec
add
pop
movsl
pop
xchg
hlt
xor
fimuls
jg
loope
in
subl
cmp
push
jns
add
scas
mov
popa
cmp
fldenv
xchg
loope
es
call
stc
inc
xor
mov
xchg
cmpsb
mov
int3
cmp
sbb
data16
outsb
add
ljmp
cmpsl
cltd
and
push
into
pop
pushf
outsb
lret
add
arpl
pop
push
mov
cmc
xchg
dec
cmpsb
cmpsl
pop
mov
cmp
xchg
aam
movsl
lret
out
pop
cmpsl
in
cmpsb
xchg
retw
mov
sahf
gs
xchg
xchg
push
cmc
in
jmp
adc
sub
push
cmp
push
mov
cmpb
or
rclb
mov
mov
cs
push
loope
in
addr16
sub
dec
sbb
mov
inc
les
mov
ret
dec
add
loop
sbb
ret
lret
xor
iret
xor
mov
sahf
inc
fsub
mov
inc
insl
and
jmp
pop
jo
cltd
sbb
push
out
inc
hlt
or
mov
popa
ljmp
sub
out
xchg
fwait
dec
in
out
jl
lret
xchg
testb
mov
xor
mov
fstps
repnz
es
jle
jne
jno
lcall
pop
adc
sbb
repnz
cmp
test
imul
idiv
in
fcoml
scas
jno
and
das
pop
ja
scas
sbb
mov
insb
jbe
dec
jmp
mov
and
jns
imul
dec
push
xor
push
mov
stos
add
jb
sub
inc
loope
movsb
fwait
and
repnz
pop
jle
movsl
jl
inc
enter
repnz
jne
jl
xchg
imul
aaa
mov
dec
mov
adc
out
xor
movsb
sbb
push
mov
insb
aas
enter
cmp
lods
enter
push
inc
and
cmp
pop
add
insb
lret
or
cmp
popa
add
mov
xchg
insl
rol
pop
pop
mov
lahf
movsl
cmc
ret
mov
fcmove
jle
leave
cwtl
or
pop
sbb
in
mov
inc
adc
imul
or
ret
or
xchg
in
jb
cmp
lods
imul
sbb
in
idivb
pop
mov
push
adc
imul
movsb
inc
cld
imul
sub
mov
enter
movsb
inc
or
push
addb
mov
or
inc
fstpt
and
inc
fsub
adc
fistps
xor
ds
rol
cli
sub
push
dec
pop
test
out
repz
xchg
mov
fs
les
inc
ficompl
xor
sbb
pop
in
fstps
js
or
divl
push
pop
xchg
cltd
lds
out
xor
pop
mov
insl
jmp
ljmp
lods
ja
cs
out
repz
push
sub
mov
push
sti
enter
mov
mov
mov
into
and
lds
jae
aam
adc
mov
pop
cmc
test
mov
mov
pop
jbe
test
push
mov
cmp
std
aad
aad
sbb
inc
jle
sub
leave
xorb
xlat
mov
sub
test
or
jb
rclb
push
test
adc
rolb
mov
jg
jl
mov
jo
mov
scas
lock
jae
adc
jl
cltd
jns
popw
adc
test
mov
inc
mov
cwtl
jl
sub
lahf
scas
ljmp
or
imul
idivl
ret
mov
call
adc
push
fdivs
pop
ss
or
fs
dec
mov
jmp
or
aad
inc
icebp
xor
xchg
sub
jbe
gs
xchg
and
fsub
gs
lock
cmpsb
lock
ficoms
push
test
in
outsl
cmp
cmc
xor
adc
stc
mov
pop
rcr
cmp
mov
mov
in
fucomi
add
stos
out
ss
lock
jbe
es
lahf
or
mov
mov
out
ud1
jle
rcr
ficompl
add
data16
fmul
lcall
jmp
mov
lret
xchg
scas
jle
add
test
pushf
test
insl
jp
out
lods
stc
sarb
jns
cmp
enter
sbb
mov
push
jae
mov
xchg
test
xor
sub
pop
sub
cmp
fld
in
jb
and
inc
sti
inc
cwtl
mov
and
pop
lods
jmp
dec
fbld
in
movsl
pop
into
xchg
repnz
popa
mov
mov
stos
push
pop
jne
adc
iret
xchg
les
push
xor
inc
loope
fistpl
mov
testl
jno
jne
jmp
out
mov
out
add
fcmovnbe
jae
mov
stos
fldcw
inc
mov
je
subb
sbb
movsb
and
xchg
lods
sub
jge
outsl
je
cs
andb
dec
movsl
lret
in
jbe
jmp
push
xor
sarl
push
addr16
xchg
call
int3
push
movsl
pop
xchg
sub
lock
popf
negl
enter
mov
push
adc
xlat
in
cmpl
outsb
mov
push
sbb
ja
sbb
rcrl
xchg
test
shlb
pop
mov
into
enter
cmp
aaa
mov
pop
daa
ljmp
mov
orb
popf
push
in
sarl
stos
jle
test
cs
sub
sub
into
push
sub
sbb
fcmovb
sti
movsl
outsl
push
xor
inc
sbb
fnstsw
aaa
in
shlb
xchg
mov
sub
lahf
xchg
sbb
out
push
popf
pop
sbb
mov
iret
inc
fcmovnbe
dec
push
dec
inc
and
mov
cmp
adc
out
mov
cmp
dec
cltd
inc
scas
xorl
scas
test
and
aad
lret
aas
xlat
arpl
into
sub
dec
cltd
dec
mov
sbb
dec
daa
xlat
sbb
jg
push
push
adc
xor
inc
inc
es
lea
add
xchg
jb
dec
add
movsb
lret
ja
or
mov
push
xor
sti
inc
jp
xchg
add
xchg
mov
cli
ss
movsl
cmp
xchg
out
movsb
or
mov
push
push
xor
leave
psrad
sarb
or
or
sbb
and
dec
pop
aaa
mov
pushf
pop
or
scas
andl
jp
ret
push
call
mov
mov
in
lahf
xchg
sub
mov
stos
test
pop
das
mov
je
xchg
leave
repz
sbb
fisubrs
pop
inc
pop
ror
and
shlb
fwait
push
aaa
ficomps
rorl
sub
mov
in
jno
cmp
push
adc
ret
lfs
loope
negl
xlat
mov
shld
xchg
out
es
stc
pop
pop
in
fmuls
mov
mov
xchg
sbb
or
fxch
rclb
xchg
scas
lods
loop
ss
mov
mov
and
ja
jb
lock
cld
stos
mov
push
jge
mov
gs
subb
or
lea
adc
cwtl
rcr
sub
or
pop
outsl
cmp
loope
sarb
or
jmp
mov
cmp
add
inc
out
std
xchg
into
lcall
add
int3
pop
dec
jg
mov
dec
js
arpl
pop
xor
add
and
shlb
stos
hlt
xor
cmp
rolb
stos
inc
mov
push
pop
mov
mov
ss
enter
pop
out
es
sub
inc
jne
jns
lret
xchg
aad
sub
inc
sbb
dec
or
mov
xchg
mov
pop
push
jl
add
mov
jb
push
inc
mov
push
aad
cmp
cmc
pusha
dec
out
sbb
mov
xchg
imul
xlat
ret
add
push
in
inc
rcr
add
ret
or
negb
and
sbb
cmp
lahf
sbb
and
hlt
lock
ret
loope
sarb
and
cmc
notb
mov
xor
lahf
leave
sti
jmp
insl
or
popa
add
mov
test
jmp
or
subb
dec
pop
xchg
cmp
pop
jae
sti
rcl
call
add
aam
sti
subps
in
gs
mov
mov
addr16
jbe
js
popa
dec
cltd
and
out
add
mov
cmp
fisubrl
sbb
pop
xchg
sub
sub
subb
mov
movsb
test
or
mov
sbb
ljmp
lcall
flds
loop
xlat
out
clc
adc
add
push
subb
xchg
scas
insl
mov
mov
iret
repz
loopne
push
negl
clc
xchg
gs
inc
cmp
jmp
loop
sbb
fs
lret
sahf
push
and
adc
and
sub
xor
jmp
fwait
xor
sbb
jnp
inc
or
sub
lds
rolb
xchg
and
xchg
das
dec
xacquire
xchg
xlat
jp
js
dec
pop
push
mov
mov
mov
sub
push
pushf
iret
fcoml
jle
xor
inc
scas
pop
pop
xor
in
jns
lds
repnz
jl
movsb
hlt
aad
dec
pop
dec
lods
cli
mov
cmpsb
inc
bound
bound
repnz
lcall
dec
les
into
out
adc
test
jb
aas
add
cmp
mov
std
hlt
movsb
jbe
pop
mov
mov
sti
xor
into
xchg
fwait
mov
jno
andl
xor
jno
cmpb
shr
jmp
adc
push
int
idiv
pushf
jg
mov
lods
cltd
ss
sbb
mov
out
movsl
aam
aam
xor
insl
cmp
into
sub
pop
clc
ret
or
xor
aad
aam
adc
enter
leave
or
mov
arpl
icebp
test
push
pop
cli
out
hlt
push
in
pop
push
lcall
jo
fists
arpl
stc
or
inc
roll
mov
movsl
mov
xchg
shr
mull
xor
and
enter
mov
jno
xchg
movsl
lds
dec
mov
lret
pusha
lock
or
sub
mov
jmp
pop
pop
sahf
or
negb
pop
mov
inc
lcall
or
aam
sti
out
inc
popa
cmp
in
lret
cli
jmp
clc
mov
ficoms
pusha
insb
push
test
das
in
leave
stos
xor
cs
js
adc
sbb
and
sub
jmp
mov
out
cmpsl
mov
mov
add
xor
movsb
dec
push
xor
rcrl
mov
push
mov
scas
ss
popf
mov
jb
mov
jb
clc
xchg
lcall
push
out
pop
movsl
pop
jae
movsb
ret
sbb
mov
shlb
pop
stc
xor
ret
stos
rcll
lock
shr
mov
icebp
ret
aad
data16
dec
sub
nop
je
ret
sti
cltd
mov
insl
loope
lcall
jge
clc
lds
mov
int
cmpsl
sahf
stos
daa
stc
fsubs
or
inc
cmpsb
xor
dec
leave
mov
repz
nop
fisttpll
mov
xor
cmp
push
pop
stc
mov
cli
mov
test
cmp
movsl
aam
jecxz
pop
lahf
mov
in
inc
push
xchg
inc
dec
clc
ljmp
xchg
lahf
imul
cmp
fisubrs
cmp
sti
xor
sub
mov
cwtl
pop
fimull
adc
in
enter
jmp
mov
data16
adc
pop
xchg
xor
xor
adc
insb
mov
cmpsb
xor
into
out
stc
mov
loop
out
int3
iret
cli
test
mov
loope
imul
daa
push
data16
sub
pop
and
inc
test
xor
bound
test
andb
lret
sti
lods
mov
sbb
cmp
or
inc
cld
add
jno
cmp
ficomps
aaa
enter
add
fbstp
enter
sbb
cmp
mov
xchg
jb
push
xor
mov
rolb
sar
jg
jg
loopne
dec
arpl
push
test
out
shll
push
out
dec
test
sub
jno
lock
jbe
sbb
pop
stos
imul
divl
arpl
dec
imul
mov
ss
outsl
loopw
adcl
test
push
lds
jb
mov
adc
pop
ljmp
xor
sti
adcb
pop
fs
and
std
push
daa
and
push
ja
icebp
lds
sub
sub
add
cmpsb
aaa
xor
scas
sub
insb
call
adc
es
and
sub
pop
inc
push
pop
fists
sub
mov
and
jb
imul
outsb
and
dec
mov
jbe
pop
pop
scas
sarl
and
dec
jns
xchg
push
mov
or
ljmp
je
jno
aaa
jecxz
lret
cld
shlb
int
shlb
pop
pushf
lcall
or
xor
mov
push
add
or
fimull
aaa
xchg
or
inc
icebp
and
insb
rclb
xchg
int3
sahf
mov
and
repz
dec
std
xor
mov
mov
pushf
cmp
dec
xlat
sub
sbbb
push
jae
pop
test
mov
cwtl
sub
inc
pop
out
mov
enter
test
pusha
and
mov
mov
add
ret
push
fbstp
nop
dec
xchg
das
cmc
fsubs
inc
leave
add
sbb
out
jmp
lcall
adcb
dec
arpl
sarb
cwtl
data16
int
aam
jne
pop
add
mov
mov
xchg
xchg
push
out
push
dec
xchg
adc
in
jecxz
and
fimuls
jne
sbb
das
sbb
ljmp
push
fidivrl
push
xor
loopne
pop
mov
inc
and
lret
pop
fsubrl
sub
pushl
sub
jne
fnsave
lcall
or
insl
lods
jle
bound
repz
xchg
cmp
in
lret
lds
mov
mov
data16
leave
push
push
ret
inc
cld
push
xchg
and
mov
ss
in
add
mov
push
incl
sbb
sbb
inc
adc
and
inc
mov
pop
scas
outsb
pop
jne
mov
mov
lcall
repnz
jnp
out
sbb
outsl
jge
aaa
inc
popa
lret
addb
out
sbb
ret
outsl
sub
stc
mov
daa
movb
jle
test
movb
mov
aaa
loop
pop
cs
lock
mov
test
out
xor
test
ficoml
into
pop
ljmp
ss
pop
dec
mov
in
pop
test
add
lcall
inc
in
sbb
out
jo
mov
fldl
andb
decb
decb
xor
fists
push
aad
repnz
adc
aam
clc
inc
cmp
icebp
stos
inc
leave
pop
cmp
movsb
out
les
adc
daa
testl
cmc
pop
xor
ds
outsb
pop
jp
dec
mulb
xchg
mov
test
in
xchg
pop
sahf
cmp
sub
icebp
les
jge
sbb
adc
imull
pop
cmc
push
cmp
mov
mov
daa
in
cmp
dec
push
add
popf
sub
jge
jnp
andb
jmp
dec
jmp
jae
mov
subl
sub
scas
dec
inc
add
les
sub
test
xchg
stos
int
gs
jp
movsb
inc
repz
lods
push
cs
sub
gs
into
pusha
mov
jle
mov
jge
pop
mov
lds
repz
call
leave
cmpsl
sti
jg
mov
sbb
les
sbb
pop
pop
movsl
fs
xorb
imul
enter
mov
adc
popf
movsl
popa
enter
adc
outsb
stc
add
mov
daa
mov
repz
inc
and
fnstenv
cmp
jge
je
pop
cmp
push
testl
cmp
mov
out
sbb
inc
sub
push
shlb
mov
insb
lret
or
inc
cld
xchg
jno
add
cli
ja
lcall
and
dec
xchg
lahf
daa
or
cmp
fiadds
mov
insb
enter
das
pop
inc
xor
js
jns
jns
inc
pop
and
sub
xorb
sub
jo
rorb
jle
xchg
sbb
loopne
out
sub
scas
testl
arpl
xchg
test
mov
iret
or
xchg
mov
adc
push
jle
pop
rol
sbb
cmpsb
adc
decl
dec
std
gs
xchg
fwait
jmp
mov
cltd
inc
push
lods
jp
int3
enter
pop
negb
xorl
inc
cmpsl
cmp
xchg
cs
movsb
es
movsl
cmpsb
lcall
xchg
sub
je
loopne,pt
jg
or
jp
pop
mov
lcall
sbb
lcall
mov
pop
ss
dec
mov
cmpsb
cmp
dec
outsb
fidivrs
dec
mov
fistpll
pop
jmp
sbb
adc
addr16
or
xchg
or
scas
std
test
test
pop
inc
dec
add
in
sahf
inc
adc
mov
jp
mov
or
xchg
pusha
and
cmp
pop
sbb
mov
jbe
dec
shl
ja
dec
xchg
fadd
stc
mov
mov
hlt
repz
add
sub
jo
ljmp
jmp
adc
adc
mov
movsl
adc
loope
jle
jbe
inc
in
mov
pop
decb
movsl
xchg
out
mov
cld
push
add
jp
jns
dec
dec
jbe
xor
sbb
jmp
test
xlat
jne
jo
in
iret
mov
cwtl
jle
push
jge
xchg
dec
loopne
mov
fcoml
and
mov
mov
pop
push
mov
int
sarb
inc
adc
pop
add
pop
cld
insl
jge
jne
cwtl
pop
std
jg
push
mov
or
adc
dec
dec
jne
icebp
xchg
sbb
popf
adc
pop
cmp
leave
xor
xor
and
xor
cmpsb
cmp
and
std
outsl
cmp
xor
and
stos
pop
or
jmp
ficoml
outsl
les
push
xchg
testb
mov
sub
cld
add
repnz
loop
mov
pushf
pop
stc
inc
cmp
cmpsb
inc
test
stos
lret
xorb
xchg
xchg
fcompl
dec
and
add
lcall
pop
pushf
adc
mov
mov
mov
inc
pusha
sub
xor
inc
xor
mov
fadds
pop
and
jle
shrl
insl
ss
xchg
mov
sub
dec
add
dec
add
lret
jl
popa
sahf
test
or
leave
lcall
fldcw
jp
jnp
sub
or
cmp
mov
cmpsb
dec
mov
mov
sbb
mov
int3
pop
mov
mov
sub
cmp
add
dec
sarb
movsb
mov
sub
pop
je
out
in
push
ja
dec
xor
andb
gs
iret
adc
loope
loope
ljmp
cmpsl
and
loop
lgdtl
or
mov
fists
cmpsl
imul
pop
mov
stc
loopne
cwtl
xchg
lcall
mov
xor
idiv
in
inc
fidivs
sub
mov
out
push
mov
lcall
xchg
popa
bound
jp
test
das
leave
mov
or
pop
test
shrl
jne
cmpsl
xchg
push
in
insl
insb
fnsaves
sahf
imul
fistl
jae
sbb
pop
out
jl
pop
sub
sahf
rcr
shll
mov
out
call
inc
nop
sub
mov
jno
dec
out
sub
cmp
enter
out
jecxz
push
in
adc
mov
es
sub
push
mov
mov
xchg
push
adc
mov
insb
cltd
clc
ret
notl
xchg
movaps
inc
and
in
mov
push
add
cmp
lret
inc
outsb
xchg
dec
adc
stos
push
cmpsb
hlt
jb
pop
mov
xchg
out
addr16
mov
sub
sbb
bnd
mov
out
or
and
push
sbb
cli
and
iret
mov
push
add
push
movsl
cltd
adc
ljmp
popf
cmp
cmp
mov
and
mov
xor
fnsave
repz
and
movsb
add
xchg
pop
xor
inc
mov
xor
xchg
cli
xchg
pop
push
xor
mov
sub
push
inc
punpckhdq
mov
stos
test
jb
loopne
lahf
jle
aaa
lret
lea
push
pop
pop
push
cmc
pop
add
je
inc
aas
adcb
push
ljmp
in
outsb
and
sahf
jns
jns
and
sub
sbb
shlb
loopne
sub
xor
or
mov
fwait
push
inc
negb
arpl
mov
ret
or
add
mov
leave
xor
fisubrl
and
sahf
loope
je
repnz
mov
and
sbb
lock
icebp
pusha
int
out
sahf
shll
movsb
jg
rcr
inc
addl
adc
add
ljmp
cld
sti
icebp
pop
loopne
jnp
addb
or
jmp
push
lret
push
enter
mov
cmc
sbb
aaa
mov
or
aaa
jg
jne
ss
mov
mov
pusha
add
into
cmp
push
rcrl
add
dec
dec
fwait
into
mov
sbb
movsl
xchg
pop
push
add
rolb
pushf
cmp
ds
xor
fst
jnp
xchg
pop
dec
xchg
testl
and
jp
and
sbb
push
and
pop
jecxz
jo
in
clc
xor
adc
dec
in
dec
mov
std
inc
test
push
mov
jne
add
dec
inc
sub
cli
ds
cwtl
shrl
pop
mov
mov
sbb
push
ja
out
std
mov
fisttps
sub
xor
xlat
js
push
lcall
sti
cmp
pop
fsubrl
sbb
cmp
jnp
push
add
and
add
inc
shlb
popa
cmpsb
fnstenv
mov
fstpl
inc
push
jl
or
mov
mov
lahf
jle
in
mov
shll
out
test
pop
adc
or
adc
push
bnd
jbe
sarl
test
aam
dec
mov
lods
sti
sub
add
dec
or
fcom
pop
pushf
xchg
inc
and
add
movl
lret
add
incb
mov
fildl
insb
add
sub
repz
mov
xchg
bound
popa
sbb
xchg
pop
cli
mov
xchg
pop
jae
movsb
push
punpckhbw
ss
divb
jo
enter
cld
push
mov
mov
lret
insb
mov
push
daa
lea
test
mov
push
pop
mov
cmp
sub
popa
loope
sti
je
push
xchg
jg
das
aam
movsl
repnz
mov
pop
xchg
ffree
mov
and
add
hlt
fwait
sub
scas
pop
lds
nop
jae
dec
fnop
cmp
movsl
adc
xor
mov
mov
inc
adc
in
push
mov
adc
cmc
sbb
pop
adc
sub
pusha
cmp
lret
xchg
rcrl
jne
cmp
imul
add
stos
hlt
mov
rclb
mov
imul
cmp
jb
mov
call
mov
lods
sbb
stos
jmp
call
and
pusha
dec
imul
dec
sti
movsl
jns
fstl
push
xchg
push
mov
ja
dec
push
lret
sub
lcall
inc
jp
adc
or
and
fstps
das
dec
push
cmpsl
pusha
xchg
mov
clc
enter
add
sub
loope
pusha
push
scas
daa
mov
adc
cwtl
cmpl
add
mov
mov
cmpsl
adc
test
add
and
dec
mov
out
dec
jb
mov
dec
call
pop
mov
not
mov
inc
daa
lahf
adc
mov
into
push
mov
insl
sub
push
mov
hlt
aas
pop
sbb
jmp
push
std
cli
adc
orb
jbe
mov
pop
push
xor
scas
push
inc
mov
cltd
push
filds
pop
mov
and
xlat
jmp
push
sub
loop
clc
loope,pt
ret
or
pop
xchg
outsb
xorb
fdivl
cmp
insl
pusha
mov
lahf
mov
ret
xchg
rcll
loopne
pop
les
mov
xor
dec
add
mov
pop
and
inc
adc
or
mov
mov
jge
es
enter
adc
pop
lods
mov
pop
push
dec
sbb
push
or
addr16
add
imul
mov
xchg
fmuls
shll
mov
sub
cmp
mov
pusha
nop
mov
popf
or
mov
jno
nop
das
es
out
push
loope
jecxz
jne
iret
dec
mov
loopne
pop
outsb
icebp
fcoml
jb
andl
sub
push
fwait
gs
out
add
jmp
cmp
and
cmp
lret
cmp
pop
dec
jae
pop
jo
out
imul
pushl
inc
stos
and
pop
push
mov
xchg
adc
lea
lret
addb
loopne
pop
jne
pop
out
xchg
orb
int
outsl
adc
dec
lahf
ret
mov
inc
jne
inc
cmp
rcrb
jb
pop
sbb
les
ret
or
incb
pop
test
mov
jp
and
mov
mov
popa
cmc
fbld
mov
sub
push
mov
mov
int3
arpl
mov
sbb
mov
sbb
lds
repz
mov
xor
lds
popa
insl
adc
inc
movsb
dec
daa
rcll
xchg
lret
dec
test
sub
push
mov
call
in
fs
mov
sub
testl
adc
or
cs
mov
lcall
xor
lret
mov
in
mov
push
sub
mov
inc
dec
push
je
dec
cmp
push
rclb
mov
push
jge
mov
aaa
mov
jns
dec
sbb
mov
dec
ljmp
jecxz
fistps
and
dec
negl
and
popf
cmp
xlat
inc
push
arpl
iret
cmpsl
iret
sub
cmp
inc
mov
sti
iret
outsl
inc
xlat
and
pop
imul
and
imul
pop
rorb
mov
scas
sbb
cmp
rorb
pop
sub
std
pop
cmpl
leave
enter
inc
xchg
fadds
pop
inc
loop
dec
data16
clc
pop
mov
fs
lret
jnp
adc
mov
addl
and
int3
psubsb
fdivrs
push
sbb
popf
push
xor
js
insb
jg
pusha
aaa
cltd
push
ficompl
adc
fs
call
pop
popf
mov
pushf
ja
add
pop
add
mov
es
in
xor
cs
jp
adc
mov
inc
xor
and
pop
mov
cmp
sbb
js
iret
or
movsb
cs
aas
out
dec
sub
or
pushf
sbb
jp
mov
mov
nop
lret
add
andl
push
add
repnz
or
lret
repnz
mov
dec
movb
std
push
push
inc
xchg
in
jp
std
fmuls
inc
test
sbb
inc
push
or
mov
ret
adc
pop
pop
imul
repnz
insb
in
aas
lock
pop
imul
jb
pop
call
arpl
add
sub
hlt
and
incl
enter
dec
mov
adc
pop
sbb
testb
xor
sbb
or
xor
push
lcall
std
sbb
or
ja
jl
pop
fsubr
loop
bnd
cli
daa
cmp
mov
orl
ret
push
mov
dec
push
pop
sbb
pop
jbe
imul
inc
aaa
loope
cmpsb
pop
adc
daa
sub
addr16
dec
loopne
or
cli
xchg
adc
jnp
out
adc
repnz
imul
lcall
sbb
dec
and
xchg
xor
mov
push
pushf
in
js
push
pop
stos
cmpb
jo
cmp
xor
jb
mov
push
mov
adc
cmp
lods
xchg
sbbb
std
mov
mov
jmp
movsb
sbb
mov
mov
int3
loopne
sub
cltd
outsl
push
rclb
daa
aad
std
pop
mov
xchg
jecxz
outsb
adc
inc
push
sbb
push
xchg
or
daa
insl
and
jbe
jb
jae
sahf
outsl
pop
push
lret
mov
add
jns
xchg
inc
jmp
loopne
mov
les
popl
rcrb
mov
push
scas
out
xor
dec
dec
sbb
inc
mov
inc
js
sti
and
push
sub
jg
in
dec
dec
inc
stc
test
xchg
psubb
cmc
or
js
mov
rolb
xor
push
mov
pusha
rcll
add
sbb
xor
or
sbb
sub
int3
int3
xor
jo
sbb
xorl
sbb
push
and
sub
xchg
rcll
fldcw
add
or
es
mov
sbb
xchg
xorb
mov
test
mov
es
fwait
test
loopne
nop
stos
sti
inc
cmp
mov
sub
pop
nop
sub
in
sbb
insl
jmp
repnz
inc
iret
loopne
sub
jno
mov
dec
dec
cmp
mov
pop
ljmp
daa
cmpsb
popa
je
push
mov
idivl
std
js
sub
das
adcl
lock
aad
stos
dec
aas
dec
in
insl
xchg
pop
sbb
sub
push
xchg
mov
push
mov
add
test
mov
add
imul
inc
xor
add
in
adc
push
pop
mov
lahf
jns
lret
enter
lods
push
pop
mov
cmp
js
push
ljmp
pop
jmp
push
mov
and
gs
add
dec
mov
sbbb
add
cli
inc
movsb
pop
pusha
xlat
mov
fldl
mov
push
mov
mov
scas
sti
adc
mov
sub
icebp
or
icebp
stc
jns
call
pop
cmp
mov
xor
and
addr16
ja
xor
stos
dec
sahf
in
orb
test
btr
dec
pusha
test
int
outsl
or
das
rcl
cli
mov
outsb
int
sbb
jg
and
ret
iret
cmp
jns
cmp
sti
fisttps
xor
dec
mov
stc
and
test
pop
or
mov
data16
mov
pop
dec
movsb
or
inc
loop
push
pop
insb
cmpsb
repnz
test
cmp
adc
jg
sbb
push
mov
pop
rclb
call
daa
insb
add
adc
ds
jmp
xchg
mov
scas
call
jbe
fucomp
imul
out
adc
pop
mov
or
sub
sti
cmp
insb
dec
shrl
movsb
adc
rcrb
xor
jbe
roll
pop
push
xchg
mov
bound
fisubrl
pop
cmp
jecxz
imul
out
mov
aam
cmp
inc
cmpsb
push
loope
sub
cmp
das
and
cmp
push
mov
pop
push
mov
push
add
ljmp
movsl
add
icebp
sbb
popa
lret
dec
sarb
sbb
les
cmpsb
mov
push
mov
fsubrl
popf
mov
addr16
cmpps
and
cmc
inc
and
in
aad
repz
xor
push
and
adc
push
enter
add
js
dec
fs
mov
outsl
repnz
ljmp
mov
subb
popf
ret
mov
inc
fisubrs
clc
mov
inc
cli
mov
cmp
loopne
call
rcl
pop
pop
pop
arpl
loopne
dec
insl
mov
rcrb
icebp
push
mov
maxps
cmpsb
fnsave
nop
add
pop
dec
dec
jl
add
cltd
outsb
jge
in
sbb
mov
or
xor
int3
and
aad
lock
in
aaa
jle
cmpsl
fst
jno
mov
hlt
cli
jns
fidivrs
sbb
cmc
daa
pop
add
mov
int3
call
cwtl
jg
sub
jnp
rolb
add
add
xor
into
popf
ficoms
test
dec
xlat
rclb
xor
mov
xor
xor
inc
daa
inc
ss
dec
jno
sub
out
mov
mov
push
xchg
mov
pop
out
loop
out
in
lock
sub
mov
sub
xchg
and
xchg
sub
fmuls
dec
jns
inc
sub
roll
push
rcrb
or
push
jb
gs
icebp
pusha
sbb
xchg
mov
les
mov
leave
jmp
xchg
jmp
cli
test
xchg
sub
sbb
ret
jle
and
pop
cmp
gs
repz
ljmp
insl
out
adc
jnp
mov
pop
lock
insb
inc
or
nop
jge
sbb
xchg
mov
cs
xor
out
in
xchg
cmp
push
push
movsl
aam
mov
sbb
je
in
rcr
xor
jmp
rol
inc
dec
xor
or
jecxz
jns
jecxz
and
out
fisubrl
out
movsb
je
push
xchg
test
mov
fwait
xchg
jge
mov
addr16
fisttps
shrb
lea
scas
mov
mov
scas
sahf
lods
mov
ficoml
nop
insl
popf
xor
jnp
mov
jle
cltd
out
xacquire
enter
xchg
imul
pop
fcmovnu
out
ret
adc
nop
in
out
cmp
daa
inc
scas
mov
push
loope
cwtl
jns
dec
push
pop
mov
or
mov
mov
mov
jno
push
stos
ja
xchg
xchg
popf
add
aas
popa
clc
cmp
ret
stc
movsl
cmp
mov
push
rorb
pop
mov
in
mov
insl
or
ret
scas
and
and
sub
push
pop
or
aam
pop
loop
adc
popa
xchg
pop
es
and
sbb
mov
paddb
fiaddl
into
inc
loopne
fs
je
pop
movsl
stc
arpl
inc
push
adc
pop
cmpsl
jns
inc
dec
out
push
mov
xchg
jae
cs
int3
mov
cmp
dec
scas
sti
jb
dec
xchg
clc
addr16
jmp
dec
and
sub
enter
or
jns
cmp
fcompl
call
mov
add
xor
xchg
sti
lret
mov
testb
repnz
inc
mov
adc
fstpl
inc
leave
cmp
xchg
ljmp
xchg
dec
add
js
fstps
scas
scas
jnp
push
bound
inc
addr16
loopne
xor
jnp
loopne
mov
ret
ja
adc
xor
fcmovnu
cld
into
out
pusha
ljmp
sbb
mov
adc
insb
adc
out
adc
ds
xchg
sub
sbb
xor
jg
push
fstps
pop
jg
or
adc
lret
xchg
xchg
pop
test
outsb
and
addl
notl
ja
fcompl
fmul
xlat
lock
in
arpl
mov
mov
clc
rcrb
fwait
mov
xor
lods
cmpsb
scas
ret
jp
mov
dec
jbe
sub
mov
adcl
sbb
cld
into
lods
cmp
sub
out
dec
fadds
push
dec
xchg
int
xor
cmp
jb
and
jb
popa
sbb
fsubrs
mov
lahf
mov
xchg
icebp
adc
inc
shll
insl
stos
je
xchg
movsl
adcb
jnp
pop
hlt
rorl
call
push
fwait
xlat
push
xor
fsubrl
dec
xchg
inc
cli
adc
add
je
faddp
jo
sub
sahf
or
cmp
cwtl
push
and
lea
xor
stc
xor
dec
jae
ljmp
scas
or
je
or
pop
test
inc
xchg
into
lods
aas
add
mov
test
frstor
lret
adc
cli
fsubl
inc
cld
js
data16
rep
pusha
adc
lock
push
mov
rorb
ja
test
sub
mov
daa
jge
scas
negl
stc
js
dec
imul
mov
mov
xchg
aam
cmc
add
insb
ljmp
ret
xlat
jl
mov
divl
stos
lock
push
mov
ljmp
push
mov
add
jge
sbb
xor
xchg
xchg
imul
inc
add
fwait
das
loopne
mov
aaa
mov
sub
xchg
aaa
xlat
push
pop
cmp
dec
fisubrl
add
mov
lock
out
mov
xchg
mov
outsb
ret
sahf
mov
push
pop
test
lods
add
cwtl
push
inc
ljmp
add
jle
gs
cmp
adc
dec
cmp
inc
stos
or
dec
pusha
cmp
rorb
cmc
cs
push
pop
mov
insl
stos
pop
sub
xchg
jmp
repnz
ljmp
mov
mov
and
xchg
push
int3
mov
inc
call
add
cwtl
or
lea
adc
insl
inc
jmp
pushf
pushl
popw
sub
fdivl
mov
push
push
sbb
leave
bound
sahf
fst
es
sbb
xchg
test
aad
push
out
push
in
sub
stos
xchg
push
add
stos
lock
or
daa
fidivrs
jnp
jmp
pusha
cwtl
jg
mov
data16
mov
sbb
sub
mov
pop
loop
mov
dec
jmp
fisubs
or
or
xor
dec
icebp
ret
dec
call
ret
testb
inc
jl
data16
or
and
sti
stos
or
push
ss
pop
call
xlat
ja
pop
sub
imul
clc
fiaddl
das
inc
xor
inc
xchg
dec
cltd
mov
js
lret
into
stos
aas
rorb
mov
mov
ds
cmpsl
lret
movsb
out
and
push
inc
adc
adc
sub
inc
loop
test
fsub
dec
popa
icebp
sbb
gs
cmpb
pop
cmp
nop
clc
mov
dec
adc
xor
adc
out
push
lock
mov
mov
dec
daa
aaa
push
lds
xor
fmull
cmpl
add
push
add
push
xor
addr16
mov
insl
fs
ja
pop
jge
xchg
push
dec
scas
enter
clc
adc
cwtl
adc
xorl
test
jle
ss
aaa
jbe
inc
xor
mov
cmp
mov
popf
cmp
leave
jns
aaa
inc
inc
adc
ljmp
les
push
xor
aad
out
adc
xor
lret
xchg
push
out
pop
scas
rcll
in
inc
data16
sub
adc
lcall
dec
int3
es
in
insb
ja
out
jg
xor
inc
xchg
hlt
mov
cwtl
shl
mov
sbb
jl
add
mov
pop
sub
mov
sub
mov
sahf
cmp
arpl
enter
pop
jne
cmpsb
sub
mov
sub
leave
aad
test
int
push
rcl
mov
fisttpl
push
ret
xchg
and
cmp
dec
jp
inc
xor
imul
mov
ret
fsubrs
movsb
mov
sub
orl
push
outsb
push
dec
incl
shll
jmp
mov
sbb
lods
lret
lods
or
jns
insb
xchg
out
mov
mov
sbb
adc
and
push
sbb
lods
mov
out
mov
and
adc
push
push
loope
dec
loopne
in
mov
test
rcrb
ret
loopne
jbe
out
es
xor
and
out
stos
inc
jle
sbb
push
xchg
mov
mov
mov
das
sbb
das
mov
insb
lret
sbbb
loop
stc
outsl
sbb
rcrb
popf
jp
adc
hlt
sub
pop
inc
jnp
xchg
lea
push
lret
or
xchg
mov
xor
jecxz
insl
sahf
mov
shll
jae
inc
pop
fbstp
mov
jge
sarb
mov
xorl
adc
mov
or
xor
int3
ss
jno
xor
push
push
repz
jne
pop
fnstenv
pop
adc
mov
jmp
add
dec
clc
das
inc
xchg
xchg
scas
mov
jns
xchg
jb
insb
mov
xchg
inc
les
jle
movsb
mov
dec
adc
and
fiadds
bound
and
inc
outsl
mov
xor
push
cmp
mov
testb
rcrl
sti
dec
dec
mov
mov
movsl
fcmovbe
ds
sub
jb
jp
out
test
icebp
jbe
aad
xchg
pop
addb
cmp
fmull
xchg
cld
std
push
dec
mov
mov
xor
icebp
sarl
inc
sahf
jno
sub
movsb
add
repz
sti
fstpl
testb
ljmp
mov
iret
jb
stc
mov
xchg
or
out
push
dec
scas
inc
mov
enter
cmp
iret
arpl
shrl
std
lahf
test
xor
mov
mov
fs
inc
inc
out
cwtl
enter
mov
outsl
test
inc
or
aas
adc
insb
je
add
fmuls
jnp
lret
xor
xchg
leave
test
dec
mov
push
ret
in
and
pop
mov
js
and
cltd
mov
ret
imul
xor
dec
push
add
sbb
insl
int
sub
push
fsubrs
add
aam
test
jno
sbb
pop
mov
jg
repnz
push
mov
push
fdivrl
mov
and
pop
test
adc
mov
pop
jbe
ja
shrl
jb
cmp
dec
cwtl
and
enter
mov
mov
fcomps
lock
xor
pop
leave
xor
subl
cmp
orb
in
lds
outsb
hlt
inc
popf
repz
ds
sub
scas
ljmp
vpaddw
push
lock
mov
and
and
sahf
push
pushf
mov
cli
leave
fisttpll
ja
mov
mov
fst
lcall
call
add
and
cmp
adc
test
push
sbb
notb
out
or
repz
imul
push
fcomps
lods
push
xchg
enter
cwtl
and
mov
jne
out
enter
mov
imul
adc
lret
and
cs
dec
test
add
popa
in
sbb
jecxz
dec
mov
mov
aam
cld
dec
mov
dec
cmpsl
loop
test
js
daa
mov
or
loopne
lds
pop
mov
sbb
sbb
cli
sbb
add
outsb
mov
js
cmpsl
mov
mov
fld
dec
popa
xchg
push
ds
or
mov
xor
or
push
add
lret
imul
or
push
xchg
push
jmp
dec
lods
out
sbb
jb
mov
pop
test
dec
jnp
mov
mov
imul
xor
adc
mov
sbb
pushf
xor
cld
enter
jle
pop
popa
mov
or
les
xchg
int
push
pop
jae
insl
inc
jl
mov
lahf
sar
lahf
or
insl
div
mov
jbe
clc
mov
ret
push
ss
xor
jae
mov
pop
das
xchg
sahf
mov
out
repnz
es
sbb
and
push
mov
jge
dec
rolb
cwtl
mov
sti
aam
test
leave
mov
and
addr16
arpl
das
loop
jmp
mov
push
mov
stos
pop
mov
rorl
jle
push
mov
ret
xlat
popl
imul
or
dec
adc
aaa
mov
pop
arpl
push
andb
inc
xor
call
jmp
pop
stos
xor
inc
inc
lods
jo
nop
leave
mov
cmp
lea
ja
lahf
add
stos
jl
mov
jnp
sar
pop
movl
and
addr16
scas
scas
xchg
daa
adc
pop
or
and
icebp
divl
adc
call
lods
sbb
push
xlat
into
and
shl
adc
add
ds
arpl
test
jne
mov
cmp
lea
jmp
cmp
and
popf
xchg
mov
lahf
das
aad
mov
mov
xor
ljmp
les
push
mov
insl
cli
jg
rclb
fistpll
adc
and
movsb
pop
rcll
xchg
testl
je
stc
nop
repnz
and
push
mov
test
push
mov
pop
xchg
inc
mov
inc
loopne
push
adc
xchg
sbb
lcall
xchg
pop
ret
cmpsb
int3
xchg
push
test
push
adc
mov
xchg
out
clc
jae
lods
fidivrs
dec
push
cs
aad
mov
cmc
aaa
cmp
or
adc
les
popa
andb
xor
and
rorb
sbb
lock
lock
xor
pushf
lret
or
popf
aas
inc
addl
dec
dec
repnz
das
pop
lds
jae
lods
inc
pop
es
adc
or
xchg
fs
cltd
xor
or
xor
dec
and
sbb
push
test
int
inc
push
rcl
dec
cmc
repz
dec
stos
lods
xchg
cmp
in
lcall
xchg
fwait
out
aad
xchg
jl
addb
sar
test
test
out
xorl
cld
aam
lods
push
pop
mov
add
push
arpl
ret
mov
mov
mov
and
iret
out
icebp
mov
outsb
mov
cltd
cmpsl
dec
notb
adc
loope
ljmp
iret
repz
aad
loope
mov
xchg
lock
push
mov
arpl
lea
icebp
push
popf
add
cmc
pushf
mov
test
aam
cmp
jge
cmp
shr
push
push
popf
dec
pop
jo
es
pusha
mov
jae
pushf
ficoms
jle
cmpsb
arpl
and
cmp
ret
add
cmc
add
scas
push
and
arpl
push
lock
pop
bnd
adc
shrb
out
pop
das
popf
or
cmpb
scas
mov
cs
rcl
ljmp
mov
sbb
insl
lods
lcall
mov
adc
repnz
cld
push
outsl
int
jnp
aam
push
jnp
stc
and
lahf
push
inc
cmpb
ffree
lahf
jne
or
xchg
dec
in
add
jo
aad
shlb
mov
sbb
mov
jbe
sbb
flds
out
sub
push
ret
out
lods
pop
inc
or
rorb
aad
adc
mov
sbb
ljmp
cmp
js
call
cmp
pop
xor
mov
push
cmpsb
mov
xchg
lahf
inc
ret
test
aaa
mov
add
mov
mov
sbb
insb
dec
pop
sub
movsb
fiadds
jne
xor
je
pusha
inc
fsubrs
arpl
jbe
push
inc
push
ficoml
mov
mov
sti
push
stc
mov
mov
in
sbb
xchg
push
testb
movsb
push
and
adc
jae
aaa
mov
repnz
cltd
inc
jne
lahf
fmull
inc
hlt
push
call
mov
jns
iret
ja
mov
xchg
lahf
ret
std
jae
or
imul
push
and
hlt
mov
leave
arpl
ret
outsl
mov
pop
mov
data16
cmp
push
test
and
and
fstpl
int
xchg
jo
add
filds
xchg
or
js
out
inc
loopne
loope
ror
adc
xor
outsl
add
loope
jb
jl
pop
mov
add
sub
pop
daa
push
add
in
scas
cltd
xchg
xchg
jno
inc
push
popa
loope
sbb
pop
imul
scas
icebp
sarl
mov
mov
or
pushf
mov
sti
push
hlt
das
test
mov
jle
out
test
ds
xchg
mov
sub
gs
arpl
sub
sub
inc
sub
cs
mov
dec
insb
test
mov
pushf
les
jne
mov
dec
pushl
out
pop
subl
and
test
mov
out
pop
addr16
sub
cld
mov
popf
cmp
loope
pop
xchg
test
ficoml
pop
sbb
aas
insl
pop
push
fcompl
xchg
mov
and
jno
and
cmp
and
inc
lea
mov
jbe
push
cmpsb
adc
xor
aad
pop
cmp
cmc
stos
les
fistpl
test
pop
test
adc
xchg
clc
mov
add
ljmp
and
push
jns
test
lea
stos
iret
aas
mov
mov
gs
je
repz
das
divb
lods
lcall
jns
inc
inc
xor
ficoms
push
ja
push
cmpsl
and
xchg
or
xor
and
imul
pop
cltd
or
loope
movsb
sti
and
mov
mov
dec
lods
cmp
mov
push
and
adc
and
les
dec
inc
fldcw
jns
addb
or
sub
movsl
mov
and
fcmovne
pop
xchg
insl
fstpt
sbb
sub
pop
repz
mov
pop
or
out
mov
xchg
pop
ja
jle
jns
xor
out
mov
sub
addr16
mov
dec
mov
sahf
mov
xchg
dec
inc
pop
ljmp
mov
xor
cmp
pop
scas
mov
add
hlt
jg
pop
xchg
test
lock
xchg
cwtl
add
xor
aas
push
add
rcl
jmp
and
jno
pop
cmp
mov
fdivl
jnp
jb
inc
xchg
enter
pop
xchg
call
inc
xor
pop
push
shll
pop
scas
dec
inc
cmp
sbb
lcall
das
cltd
mov
shll
popa
aas
pop
dec
cs
aad
xchg
xchg
call
xor
xchg
inc
hlt
outsb
lret
pushf
mov
sub
scas
mov
mov
arpl
ljmp
fiadds
mov
and
sbb
add
jp
outsb
ja
test
in
jo
fwait
adc
jl
mov
and
data16
arpl
movsb
mov
cld
jnp
mov
rclb
stos
mov
push
outsb
rorl
pop
rcrb
fistpll
sub
mov
push
mov
cmp
loope
push
inc
sub
loopne
int3
xor
lea
aas
cmp
outsb
jp
fwait
fs
lock
push
sub
je
je
test
in
dec
pop
mov
loope
xor
mov
dec
int
hlt
rcl
inc
and
arpl
pop
enter
imul
cmc
sti
pushf
addr16
lods
mov
iret
adcb
dec
push
fs
jbe
xchg
les
pop
psllq
dec
outsb
lock
es
in
test
add
xor
jo
shl
jp
lea
push
stos
jnp
and
or
mov
aaa
xchg
jnp
mov
aaa
sub
push
xchg
dec
ret
push
push
mov
mov
mov
cmc
jmp
rclb
xchg
add
loop
enter
sbb
idiv
sbb
imul
in
xor
cmp
cmpsl
call
adc
ds
push
jp
jnp
pop
mov
subl
push
scas
mov
inc
mov
adc
mov
add
jns
aas
add
mov
das
imul
fnstsw
inc
dec
fistpll
mov
pop
iret
out
or
js
adc
aas
jbe
outsb
xor
decl
cmpsb
adc
mov
testb
incb
push
std
cltd
cmp
outsb
push
xchg
dec
lcall
out
pop
orl
pushf
clc
ja
inc
sar
or
insb
lods
dec
push
scas
xchg
fistpl
inc
in
outsb
sbb
or
loopne
cltd
xchg
xchg
dec
sarb
jno
mov
pop
pop
jno
pop
lahf
add
dec
js
pop
adc
inc
cwtl
or
mov
ja
push
mov
xor
pop
push
pop
dec
test
lcall
fbld
lret
xchg
pushw
dec
cmp
jmp
xor
cli
shlb
xchg
jo
test
test
clc
xor
movsl
sbb
inc
pop
xchg
xlat
pop
ret
xor
jns
les
xor
shrl
call
jo
jge
mov
add
in
pusha
inc
in
fcompl
pop
es
mov
push
stc
xchg
movsb
nop
mov
push
insl
jmp
popa
js
lea
and
insl
xchg
lea
pushf
lret
cli
add
pop
stc
push
scas
test
fs
cmp
rol
stc
mov
jns
pop
sahf
popa
stos
and
or
decb
xchg
test
pop
pusha
hlt
mov
pop
adc
mov
lcall
enter
push
data16
imul
mov
cmc
ja
aam
es
je,pn
data16
push
paddsb
xor
push
sub
add
pop
scas
fmulp
inc
in
adc
xlat
cmc
sbb
test
je
out
jle
les
mov
enter
sub
cld
pop
ret
jbe
cmp
jae
add
rorl
jecxz
sub
fistps
mov
mov
jnp
rorb
outsb
pushf
or
insb
xor
pushf
iret
cmp
mov
cmp
imulb
hlt
or
test
xchg
daa
cmpsl
xor
inc
jecxz
push
sti
mov
sbb
jl
mov
mov
call
out
pop
jecxz
push
addr16
and
mov
xchg
movsb
jae
sbb
add
imul
mov
mov
xor
dec
cmp
loopne
outsl
leave
in
xor
adcl
xchg
mov
fs
mov
mov
dec
call
std
cmc
aam
mov
adc
sbbb
in
es
aaa
pop
and
jmp
pop
shl
mov
xchg
cmc
leave
in
hlt
fwait
sub
xor
push
add
out
mov
jbe
sbb
fdivrl
sbb
adc
mov
mov
push
mov
inc
inc
xlat
mov
scas
xchg
loopne
add
nop
jg
inc
fidivs
enter
sub
adc
and
cli
xchg
pop
push
pop
push
in
movsl
mov
andl
sbb
fs
fwait
mov
cmp
mov
cld
xchg
sub
arpl
and
dec
push
xchg
dec
pop
push
lahf
rcll
pop
xchg
or
mov
adc
shll
pushf
aas
repz
rclb
mov
int3
or
cmp
ret
inc
jg
dec
sub
pop
add
mov
jbe
sub
insb
or
stos
int
cmp
sti
jae
out
rcr
cmp
pop
out
std
popa
imul
stc
mov
subb
leave
imul
int
xlat
lea
in
xlat
dec
mov
sbb
sub
pop
mov
fadds
xorl
jge
mov
dec
lods
cmp
mov
ss
push
adc
and
fnsave
jecxz
or
cmp
popa
pop
test
sti
add
cs
iret
mov
cmpsb
mov
dec
jge
pop
mov
ret
mov
int3
pusha
out
xorl
iret
pop
out
aas
int3
test
ja
jne
add
imul
sti
jecxz
inc
mov
xchg
jl
insb
and
daa
sarl
jo
repnz
decb
mov
mov
cmp
and
sbbb
push
and
mov
pop
bound
loopne
fildl
dec
fisubl
rcrl
jns
fiaddl
add
loop
push
popa
push
daa
mov
pop
sete
or
into
mov
ret
decb
and
or
pop
xlat
pop
icebp
xchg
mov
mov
and
sbb
sbb
mov
or
mov
outsb
shrl
lods
lock
mov
imul
or
jb
push
jae
fwait
sarl
lods
ljmp
cmpsl
stos
sub
mulb
test
cmp
jae
stos
mov
fmulp
push
jg
pop
lock
push
xlat
pop
cmp
inc
lds
push
adc
and
int
or
rorl
test
mov
lods
mov
icebp
js
jae
pop
jmp
cmp
stos
sbb
mov
jg
push
sbb
adc
mov
and
cld
inc
sub
sbb
adc
push
popa
movsl
out
jno
out
andl
jl
loope
hlt
fstpt
lret
xor
leave
mov
and
jnp
cmp
xor
mov
es
leave
cmp
mov
sub
push
cmp
jne
hlt
add
adc
cltd
xchg
dec
jns
dec
pop
mov
cmc
sbb
mov
ds
decl
push
mov
in
mov
mov
mov
jns
xchg
or
jg
mov
ret
adc
movsl
add
or
scas
adc
jns
sub
and
jae
mov
hlt
sub
fcmovnbe
or
jg
and
xlat
in
lods
clc
add
call
fists
cmp
inc
outsl
cmp
dec
push
into
or
push
testb
mov
dec
mov
or
mov
out
push
jl
mov
outsb
test
sub
mov
lret
nop
push
push
xchg
test
and
inc
sbb
pop
call
push
mov
jg
jmp
adc
in
push
xor
les
sahf
cmp
int
mov
and
repnz
jl
fmull
cmpsl
data16
inc
sub
mov
orl
mov
mov
adc
lods
insb
mov
push
dec
or
movsl
push
daa
push
addr16
mov
xor
stos
movsb
pop
arpl
cmp
pop
and
xchg
jge
mov
jae
pop
jecxz
lods
and
incl
iret
xlat
mov
xchg
adc
lds
out
insb
mov
pop
pop
clc
scas
mov
and
pushf
insb
lcall
and
mov
outsb
into
cli
pop
es
and
mov
or
in
mov
jb
and
cmp
xor
nop
ss
addr16
or
mov
sub
loope
jmp
and
das
enter
rcll
in
xchg
add
inc
push
sub
jmp
test
mov
enter
repnz
fisubrs
iret
dec
add
mov
enter
jns
cmpsl
push
out
and
cmpsl
paddd
cmp
xchg
fildll
fdivs
mov
nop
adc
into
std
jnp
test
leave
movsl
mov
aaa
jb
fwait
aaa
xabort
cmp
mov
mov
lret
iret
xor
lahf
or
test
jno
mov
jl
push
and
sbb
ljmp
inc
sub
ficoml
shrb
jl
insl
stos
or
mov
push
mov
fwait
lret
or
pop
dec
pop
nop
addr16
inc
negb
dec
aas
or
out
test
add
pop
iret
inc
or
pusha
push
push
into
fnstenv
cmovo
aad
in
inc
imul
or
or
pushf
adc
out
or
adc
inc
xor
xor
fldl
loop
cmp
jnp
dec
pop
cmp
inc
fsub
pop
stos
pop
stos
inc
out
out
jge
cli
fs
inc
sub
xor
dec
dec
dec
push
fwait
hlt
dec
ljmp
mov
xor
mov
shl
daa
cmp
std
push
and
and
pushf
inc
jl
shlb
mov
sub
push
loopne
stos
loopne
hlt
lret
sarb
add
pop
dec
int
fnstenv
nop
jae
push
dec
call
fcmovb
repnz
cli
sub
call
scas
jmp
pusha
addr16
fucomi
mov
imul
dec
stc
and
add
stos
xchg
hlt
xchg
repz
shll
pop
cld
inc
jae
pop
push
pop
call
pop
out
dec
sbb
ret
fistpll
in
int
cmp
or
das
push
sbb
mov
lret
push
jo
mov
xchg
xor
fsubrl
scas
gs
cmp
inc
fadds
add
mov
push
ja
mov
jb
insl
sahf
xchg
or
pop
dec
adc
sbb
xchg
rsm
test
push
xchg
push
mov
jb
pop
stc
sbb
dec
jo
cld
stos
ljmp
xchg
shrl
hlt
stos
xor
cmp
test
pop
aas
adc
into
out
inc
push
loop
leave
dec
push
test
xchg
xchg
push
das
iret
mov
add
popl
xchg
pop
or
loopne
xor
and
push
xchg
outsb
mov
js
cmp
and
movsb
push
cmpsb
xor
mov
sarl
dec
int
lahf
push
icebp
jmp
inc
adc
cmp
imul
add
fwait
mov
stc
xor
popf
add
xchg
roll
add
jecxz
loopne
fisubrl
mov
fdivrl
lahf
imul
loope
xor
bound
mov
fisttpll
cmp
scas
pop
test
je
test
mov
jge
cld
and
lret
inc
xor
lods
repz
cmp
int3
out
inc
sub
lahf
jge
push
movb
mov
jnp
push
gs
mov
push
inc
pop
lcall
or
sti
xchg
or
loope
mov
mov
imul
lcall
sub
and
sbb
xor
jl
push
mov
and
or
out
test
dec
inc
aaa
jmp
adc
cmp
push
fildl
out
pushf
es
or
jns
mov
popa
jno
or
int3
arpl
roll
gs
push
mov
dec
shlb
mov
out
ss
and
mov
mov
jbe
movsl
and
mov
in
dec
mov
jbe
adcl
sbb
mov
sbb
data16
add
xor
mov
inc
stos
fisubrs
push
je
dec
pop
adc
scas
lahf
fst
out
fdivr
mov
mov
jp
sbb
pusha
adc
and
mov
daa
adc
loopne
mov
out
ljmp
sbb
xorl
aas
loope
out
stos
xor
inc
cmpsl
lcall
arpl
ljmp
movsl
adc
mov
cs
pushf
lods
call
push
idivl
leave
inc
repz
fs
and
cmp
inc
insb
mov
shlb
dec
mov
or
pop
mov
gs
mov
subl
bound
inc
out
dec
rorb
fs
mov
xchg
sar
jmp
xchg
test
rorl
loope
jmp
sub
movsb
mov
cmp
popa
mov
shrl
pop
ja
cmp
xchg
dec
out
mov
pop
fs
xchg
je
call
loope
mov
in
outsl
adc
add
scas
in
inc
incl
pop
das
cwtl
push
outsb
or
aaa
loop
nop
sub
test
pusha
roll
leave
fidivrl
push
dec
pop
xchg
mov
aas
bound
dec
cmp
inc
jmp
leave
fists
incl
lods
aas
out
adcb
iret
sahf
fwait
out
daa
sbb
out
adc
jns
stc
xor
push
push
mov
cmp
lahf
fstpl
xor
cmp
test
mov
cmp
push
push
xor
mov
mov
mov
add
inc
sti
and
jno
fcmovb
movsb
shll
mov
mov
or
sbb
jmp
lds
test
adc
mov
imul
popa
push
dec
hlt
je
popa
cmp
mov
lahf
test
sub
daa
sub
les
inc
mov
call
mov
pusha
dec
mov
jbe
clc
sarb
bound
cmp
lods
mov
outsl
gs
cli
mov
aam
shll
xchg
out
dec
ss
loop
mov
cs
loop
dec
lods
adc
push
pop
pop
js
mov
test
shrb
cmp
xchg
cmpsb
adc
jns
push
push
je
xor
push
out
jo
push
jl
sbb
mov
and
mov
xchg
mov
lcall
lods
ficomps
aas
lret
fimull
das
imul
cmp
cmp
imulb
mov
mov
leave
pushf
sub
lea
mov
fs
leave
push
ret
fxam
or
dec
leave
jo
jns,pn
fnsave
lret
pop
or
cmpsb
pop
push
xor
data16
adc
cs
mov
loope
jae
sub
lds
call
push
test
push
mov
sbb
inc
push
lcall
into
push
mov
test
fisttpl
fchs
xchg
daa
pusha
adc
mov
fidivs
or
aam
popa
inc
jae
cs
xchg
push
push
jns
loopne
mov
push
pop
fs
mov
add
pop
dec
lock
lods
dec
mov
int3
mov
push
jmp
aad
sbb
jo
dec
jmp
add
push
outsl
lods
jbe
insl
inc
and
data16
lret
pop
out
inc
outsl
push
xorb
ss
mov
lea
cmp
gs
dec
ret
outsl
jns
xor
add
jg
fdivs
js
pop
mov
dec
pusha
cmp
mov
into
ss
lods
sub
faddp
jbe
mov
cmp
and
outsl
es
jmp
sbb
xchg
aad
out
int
fucomi
adc
dec
inc
pop
push
inc
dec
and
aas
test
cld
mov
repnz
cltd
jmp
test
jno
add
cmp
pusha
or
push
fnstcw
mov
dec
fsubr
jle
lods
hlt
xor
in
dec
mov
insb
popa
sbb
or
xchg
mov
xchg
sub
xor
inc
mov
xor
dec
inc
xor
mov
dec
mov
mov
push
pop
movsl
mov
pop
add
ficompl
cmc
adc
sti
fistpll
popa
scas
inc
sbb
test
jp
repz
aam
jecxz
pushf
xchg
mov
or
mov
xchg
popa
jge
inc
push
jg
mov
pop
mov
adcb
mov
out
mov
xor
dec
enter
mov
unpcklps
out
mov
mov
or
pop
aas
lahf
jne
xor
adc
pop
enter
push
mov
aad
scas
scas
push
lods
push
call
nop
and
mov
inc
dec
xchg
aaa
xorl
es
ds
inc
call
mov
pop
loop
aas
stos
cmpsb
cmp
mov
fbld
jecxz
out
sbb
sbb
shl
iret
dec
js
xchg
jo
and
mov
xor
xchg
sti
cs
les
jnp
out
cltd
jp
sahf
rclb
or
dec
xor
cmp
or
add
sahf
push
mov
push
je
jb
or
pop
stos
dec
lods
ja
jge
cld
loope
xor
insb
sbb
daa
out
stos
and
flds
jle
xchg
xchg
mov
clc
and
xlat
mov
xchg
vsqrtsd
hlt
add
fistpll
cmp
ffree
orb
jge
pop
in
repz
cli
ljmp
fdivrl
mov
adc
out
cmp
pop
rorl
aas
inc
sub
std
out
out
sbb
ret
xor
jge
and
pop
inc
cmpsl
fiadds
mov
sub
or
out
pop
xor
inc
inc
jg
stc
rcll
repz
xor
sub
popf
mov
push
mov
push
imul
dec
mov
lods
add
test
lock
mov
rolb
cmp
sbb
int3
add
push
pop
je
mov
xchg
cs
outsb
sub
adc
and
stos
sbb
cltd
mov
in
out
mov
lret
cmp
inc
imul
pop
imul
nop
ficoml
jbe
xchg
iret
in
xor
out
xchg
inc
sub
inc
testb
shll
insl
sub
add
test
outsl
dec
cmp
ja
out
inc
or
movsl
ffree
out
mov
das
xchg
and
pop
add
add
push
adc
cmp
mov
negb
mov
sbb
adc
dec
ljmp
inc
dec
pushf
jno
movsb
sbbb
aaa
mov
adc
imul
inc
divb
int3
pop
inc
lods
adc
clc
sahf
jns
decb
mov
and
in
leave
sbb
in
xor
sti
xor
movsl
xor
push
xor
cltd
push
xchg
repnz
lret
fdivl
fstpl
add
add
int
stos
or
popa
imul
or
xor
cmpsb
dec
sbb
jo
mov
adc
lahf
push
xchg
aaa
jns
in
push
or
rclb
in
mov
pop
add
mov
cld
sbb
cmp
xor
shrl
test
outsl
mov
repz
cmp
pop
sti
sub
repz
push
adc
loope
inc
pop
push
dec
jl
mov
outsl
mov
loop
and
sbb
mov
ficompl
or
enter
cmpl
aam
fmull
in
jbe
xor
mov
mov
mov
sbb
xchg
add
mov
arpl
fcmovb
clc
push
and
insl
pop
inc
mov
lret
adc
pushf
cli
sti
mov
pop
pop
aam
adc
cwtl
xchg
cmp
aam
sub
dec
cld
xchg
and
enter
add
fisubrl
push
dec
sbb
sub
es
lods
mov
jne
stc
in
xlat
repnz
insl
dec
scas
insb
push
inc
lcall
cmp
insb
test
jnp
jbe
popf
cvtps2pd
outsb
loop
jp
fdivs
fildl
push
jne
mov
jecxz
sti
sbb
and
adc
int3
add
lahf
add
add
inc
jo
leave
setae
inc
lahf
add
dec
mov
faddl
mov
inc
fildl
or
addr16
jae
repz
adc
jg
jecxz
jo
pop
push
adc
outsb
pop
je
inc
out
cmp
or
out
es
notb
pop
pop
test
lods
lahf
mov
fwait
push
push
icebp
cwtl
sbb
mov
aam
fucom
ja
dec
in
inc
call
pop
aam
inc
push
movsl
and
sti
mov
test
aas
cmpb
xchg
repnz
inc
inc
rcrb
fcomip
inc
mov
dec
mov
das
mov
lret
ljmp
mov
addb
pop
repnz
fs
sub
add
cltd
inc
mov
pop
imul
lds
push
pop
xchg
lea
mov
in
test
mov
int
lods
outsb
aam
adc
leave
jmp
ds
mov
jg
push
jns
sarl
mov
daa
aaa
stos
rorb
aad
or
add
andl
test
add
scas
push
mov
out
lods
sbb
outsb
mov
xchg
mov
ret
pop
sbb
outsb
adc
je
push
pusha
or
lcall
sub
lahf
sub
mov
aaa
std
add
inc
mov
push
addr16
push
mov
mov
fldl2t
mov
mov
ljmp
mov
lods
aad
subb
call
test
sahf
mov
jno
ds
sahf
inc
jb
iret
add
notb
lods
jno
loope
push
sbb
mov
mov
pop
and
mov
jns
xor
mov
jnp
cli
gs
movsl
push
loopne
add
sub
sbb
push
dec
pop
stc
movsb
jge
and
adc
int
addb
push
stos
mov
hlt
pop
ret
cmova
mov
cmp
mov
aaa
jmp
or
aaa
push
shll
out
sahf
cli
sbb
push
loopne
fcoms
xor
push
stc
pop
inc
pop
gs
and
cmp
adc
in
adc
outsb
popa
xchg
add
xchg
sbb
sbb
mov
xchg
inc
push
xchg
dec
mov
fcoml
lds
adc
jp
int
ja
lret
sbb
inc
mov
or
mov
push
jl
mov
fisttps
enter
jg
outsl
dec
rol
movsb
je
jmp
dec
icebp
push
sub
iret
mov
inc
jge
rcll
mul
stos
jle
cmp
pop
and
loop
dec
insl
pusha
cs
push
es
out
push
out
mov
cmp
sbb
out
mov
sbb
cltd
rcll
cld
popa
subb
or
and
ret
mov
dec
in
scas
mov
cs
test
or
adc
xor
cli
mov
lahf
sahf
xlat
out
pushf
sbb
push
mov
jnp
inc
mov
push
or
cmpsl
out
sbb
data16
xchg
xchg
jno
call
sbb
jne
jp
fldt
daa
cmpsb
test
or
nopl
adc
mov
add
je
jno
push
lods
js
push
arpl
pop
les
imulb
or
das
lea
call
sbb
repz
fidivrs
dec
inc
jno
inc
jae
scas
pop
and
popf
scas
mov
bswap
mov
jmp
fisttpl
jbe
push
or
adc
mov
adc
in
xor
popa
mov
jne
mov
icebp
sahf
data16
cmp
shl
shll
push
dec
scas
jne
sbb
in
mov
lahf
add
cmp
ja
adc
faddl
mov
pop
mov
push
int3
add
loop
add
mov
adc
pop
pop
xor
jecxz
mov
iret
je
or
jnp
fdivp
adc
pop
jbe
imul
fmul
pop
sub
xchg
stc
loop
imul
pop
out
mov
stos
adc
dec
and
xor
dec
sub
into
cwtl
inc
insl
dec
fwait
xchg
dec
cmpsl
scas
xor
sbb
dec
into
cmp
pop
cmpsl
push
push
mov
clc
mov
imul
add
insb
je
in
push
cld
stos
lods
dec
add
lret
and
inc
scas
ret
dec
add
pushf
xor
inc
sub
enter
ret
fidivs
push
or
or
lahf
pop
insl
and
fdivr
arpl
inc
xorb
lds
in
cmp
push
pop
cltd
add
aas
dec
sahf
ds
movsb
out
or
sbb
pop
addr16
out
mov
cmp
idivl
imul
imul
popa
in
mov
jno
jmp
or
or
popa
push
push
daa
lcall
mov
loopne
add
vcomiss
pusha
cmp
movsb
mov
lahf
out
xlat
sub
cld
stos
std
imul
xlat
xchg
mov
ja
jne
and
cmp
push
cmp
dec
leave
scas
inc
aad
js
lods
pusha
js
sbb
adc
mov
nop
push
jbe
cmp
mov
fisttpl
inc
mov
adc
in
dec
mov
addr16
movsb
pop
push
sub
rcll
mov
loopne
sbb
rorl
and
ret
and
lds
sub
mov
sarb
out
inc
push
test
jbe
pop
xchg
sbb
in
adc
jno
xchg
push
mov
ror
js
int
add
push
jno
in
test
sarl
shrb
scas
fs
mov
pusha
jge
jl
add
loope
out
ljmp
ja
cmp
js
out
xlat
movsb
clc
int3
mov
aam
mov
mov
outsb
lea
das
cmp
cmp
jbe
ss
stos
outsb
jge
adc
mov
ss
popf
xchg
into
fistpl
add
inc
push
xlat
and
std
cmc
testl
incl
daa
push
dec
pushf
imul
das
add
std
pop
adc
pusha
add
push
add
adc
xchg
mov
push
loopne
or
cld
dec
jbe
push
mov
mov
stos
jne
daa
jns
out
leave
insb
shlb
cmp
jecxz
push
fidivs
test
in
dec
sub
mov
push
push
test
mov
test
jmp
adcl
int
xor
jle
stos
pop
stos
lret
add
pop
push
fs
push
pop
dec
inc
ss
sbb
aas
mov
repz
jns
cltd
enter
xlat
jnp
dec
jge
pop
sub
rorb
mov
mov
fwait
push
xor
push
mov
lods
loop
imul
sbb
inc
dec
mov
pop
je
xchg
or
aam
xchg
pop
dec
inc
add
jecxz
int3
leave
cmpsl
rclb
nop
push
call
xor
sub
fcomps
mov
jecxz
arpl
and
int3
cmpb
outsl
es
dec
aaa
data16
mov
pop
mov
aad
mov
out
push
xor
mov
xchg
add
inc
wrmsr
mov
pop
jno
mov
icebp
or
loop
stos
scas
loopne
repz
ss
cmc
inc
lods
jmp
add
cmp
loopne
mov
fistl
and
inc
out
data16
xchg
loope
fsub
dec
jmp
cmp
sbb
in
jmp
repnz
gs
imul
mov
out
xor
popa
stos
popa
inc
mov
cli
stc
push
lods
shrl
xchg
mov
aas
in
cmp
lods
pushf
pop
xchg
mov
sbb
ret
or
add
jmp
dec
loop
gs
shlb
les
jl
xor
scas
push
inc
push
jg
pop
sub
insb
fdivrs
mov
and
sbb
cmp
cmpsl
xlat
pop
jo
cmp
or
arpl
outsb
jb
dec
insb
sbb
push
outsb
xchg
mov
dec
push
jle
test
es
xchg
push
outsb
jge
xchg
lret
les
inc
jbe
jecxz
mov
frstor
and
pop
cld
outsl
lock
dec
ljmp
cmp
inc
push
sbb
jae
jb
mov
fimuls
daa
mov
pop
scas
out
adc
ja
movsl
mov
cmp
xchg
arpl
sub
daa
inc
mov
mov
xor
or
popf
jp
jmp
pop
outsl
outsl
mov
lahf
movsl
xor
rorl
jo
mov
out
data16
mov
sub
xor
xchg
in
jb
and
pop
lds
int
mov
adc
dec
xchg
push
ljmp
xchg
into
sbb
jecxz
mov
testl
inc
adc
cmp
in
push
test
lods
jle
push
aam
xchg
jns
cld
add
fsubs
adc
mov
inc
addl
loope
mov
fildl
dec
add
cmp
imul
std
cmpl
add
mov
mov
jae
and
mov
xor
inc
fimuls
loop
and
shll
out
popa
lods
or
inc
mov
aam
xchg
stos
pop
mov
push
js
jle
inc
sub
jae
dec
add
in
imul
pop
nop
sub
fisttps
push
test
cmp
stos
inc
dec
lcall
lds
notl
mov
sbb
adcb
je
adc
ds
and
aad
nop
mov
cmc
fdivs
pop
out
sahf
in
mov
gs
js
ror
pop
outsl
movsb
and
std
xchg
ret
xchg
inc
rorb
mov
gs
sub
sar
fdivl
insb
and
sbb
or
mov
subb
pop
lret
jmp
jo
jo
test
jp
sbb
dec
insl
cltd
jno
xlat
mov
hlt
es
sub
movsl
xchg
xor
push
pusha
sub
jb
xchg
arpl
mov
mov
dec
aas
addb
fstpt
push
icebp
dec
mov
int
lea
push
or
pop
sbb
icebp
pop
stos
jge
push
mov
add
stos
mov
cmp
scas
shlb
mov
add
adc
or
in
das
push
cmp
in
inc
mov
jle
pop
xchg
mov
mov
dec
pusha
xchg
lods
jne
adc
dec
sub
push
jns
inc
mov
addb
push
imul
jecxz
xor
loope
icebp
aad
adcb
xchg
icebp
loopne
movsl
xchg
mov
leave
shll
icebp
or
adc
insl
lret
stc
mov
rcll
scas
jb
or
xor
out
add
jp
xor
cmc
or
das
arpl
adc
cs
mov
mov
jl
pop
lods
xor
sub
xchg
jl
cwtl
jmp
push
jl
ja
in
push
scas
mov
add
lock
sbb
lods
lock
jnp
out
sub
stos
mov
add
fsubr
push
mov
subl
push
or
add
addl
leave
mov
aam
dec
fwait
mov
dec
outsb
cs
sbb
push
enter
clc
jno
scas
in
stos
into
out
push
or
fs
leave
mov
dec
cmp
lret
imul
lcall
inc
jnp
ja
xor
cmp
mov
add
daa
mov
out
rcrb
pop
jb
imul
push
inc
or
jmp
addl
bndstx
push
scas
inc
xchg
push
adc
push
bound
pop
insl
jmp
xlat
loopne
adc
lcall
ljmp
cmp
or
add
push
or
in
xor
push
add
mov
adc
ret
mov
jb
movsb
sti
and
inc
fwait
xchg
pop
pushf
and
ja
lret
pop
icebp
adc
adc
push
imul
mov
jmp
shrb
mov
mov
pop
movsb
and
shrb
repnz
loopne
lcall
pop
lret
daa
pop
xchg
mov
cmp
dec
repnz
cmp
adc
dec
cs
mov
adc
sbb
pop
mov
mov
cmp
fsubs
adc
ja
nop
js
pop
ret
ja
mov
lret
andb
test
mov
mov
mov
mov
jne
lcall
lods
xchg
insl
imull
and
mov
sbb
add
lock
sub
sbb
les
push
out
xorl
out
mov
or
lret
adc
push
mov
xchg
xorb
cld
sbb
add
jecxz
popf
push
icebp
lods
pop
or
mov
mov
mov
sbb
ret
push
inc
push
test
nop
fadd
push
ljmp
out
repz
aaa
rorl
pushf
mov
mov
lods
push
loop
pop
hlt
add
push
mov
ret
outsb
leave
ficoml
out
add
out
xchg
cld
jne
push
mov
push
push
dec
pop
imul
jnp
fdivs
mov
js
xchg
dec
mov
hlt
sbb
lods
and
push
cmpsb
imul
cmp
add
pop
xchg
loope
jecxz
cmp
mov
jbe
pop
inc
xchg
pushl
adc
in
pusha
xchg
lret
in
cmp
xchg
jmp
pop
insb
dec
xor
out
xlat
aad
add
xchg
sbb
jae
imul
jge
repnz
sbbb
and
mov
dec
jmp
dec
cli
sub
xchg
lds
ss
mov
rolb
cmp
in
mov
leave
jecxz
push
popf
insl
mov
mov
and
mov
insl
pushf
inc
mov
push
fdivrs
std
push
xchg
mov
xchg
std
mov
sub
loop
addr16
bound
or
icebp
insl
rolb
inc
sbb
out
stc
mov
inc
fidivl
loopne
cmp
stos
pusha
add
and
adc
aad
imul
popf
pop
nop
loopne
std
jecxz
ljmp
mov
paddusw
inc
or
leave
push
dec
das
roll
jns
jmp
lcall
shll
adc
pop
and
push
cmp
adc
lods
test
imul
imull
mov
mov
fimuls
and
iret
cmc
iret
dec
imul
ja
es
cltd
push
mov
enter
jns
cli
add
je
aaa
push
inc
ss
cld
aad
insl
leave
xchg
cld
aam
bound
adc
and
xchg
call
mov
sbb
neg
scas
xor
adc
dec
sti
sbb
mov
mov
insl
sahf
or
xchg
ljmp
sbb
sbb
lahf
sub
idivl
in
inc
and
mov
mov
iret
xor
dec
push
pop
loop
xchg
or
mov
push
add
add
mov
jmp
orb
pop
or
aam
mov
cwtl
push
scas
pop
jl
lcall
shlb
cld
mov
dec
stos
enter
sub
mov
mov
scas
cmp
gs
push
add
and
repnz
add
sbb
fnsave
mov
sar
mov
add
lea
push
mov
cmp
dec
mov
mov
xor
pop
insb
cmp
xchg
lods
sbb
dec
nop
stc
push
repnz
push
rcll
popf
enter
repz
pushf
xchg
imul
inc
or
mov
or
sub
cmp
cli
and
jno
popf
push
imul
je
sbb
mov
adc
mov
jmp
ja
jecxz
outsb
inc
inc
push
xor
dec
out
or
pop
outsl
mov
adc
push
popf
or
cli
lock
scas
movsb
and
and
hlt
push
add
or
xor
push
jmp
aam
into
xchg
cmpsb
cmp
mov
popl
or
ret
lret
and
mov
fcomi
stc
in
mov
pusha
adc
adc
cmc
pop
push
or
xchg
xchg
sub
int3
xor
insl
das
and
in
dec
sub
and
lret
inc
popf
adc
mov
mov
xlat
xor
jns
add
cs
mov
xchg
sbb
cld
out
and
repnz
je
dec
in
push
fwait
lret
inc
jnp
push
in
push
addr16
mov
mov
cmpsb
inc
into
jnp
inc
icebp
shll
call
pop
push
push
inc
sbb
dec
hlt
adc
fwait
sbb
jb
mov
inc
cmp
out
in
jmp
es
mov
push
lds
add
sub
push
or
fildll
adc
xchg
out
cmp
lods
pusha
adc
cltd
fisttpll
push
push
mov
loop
xor
push
and
dec
sub
cmpb
and
fmull
xor
add
aaa
mov
icebp
inc
scas
bound
in
fwait
push
movsb
push
push
addr16
in
rolb
adc
or
dec
mov
mov
inc
jg
nop
fmuls
sub
sub
aad
adc
pop
xor
icebp
jmp
xor
mov
add
dec
mov
pop
pop
daa
cmp
test
je
data16
adc
aas
sub
sub
cmp
fdivl
bound
push
jo
cmp
aas
into
cmp
gs
or
dec
push
aas
inc
jnp
in
cltd
adc
fsubrs
idivl
jecxz
or
jae
jl
and
ds
mov
cmpsl
jmp
stos
lret
cmp
push
shl
xor
das
jb
push
repnz
cmc
call
sar
mov
pop
inc
repnz
adc
add
lret
gs
adc
adc
rorb
je
addr16
je
fsubrl
cmc
iret
scas
scas
adc
push
mov
xlat
fadd
mov
mov
movsl
xchg
mov
int
xor
pop
gs
xchg
pop
test
mov
inc
les
xor
xor
xchg
pushf
or
or
popa
jge
push
pop
es
cmp
pop
fisubl
add
sub
ljmp
dec
lcall
xchg
stc
ffree
cmp
push
pop
popf
addr16
mov
mov
sub
sbb
jg
andl
push
adc
call
insb
lods
pushf
sbb
lahf
stos
xor
in
into
imul
and
mov
test
cmp
xchg
dec
add
xor
mov
rclb
rclb
imulb
lcall
mov
mov
mov
subb
jae
ds
addr16
sub
push
push
sbb
daa
bound
icebp
mov
or
out
cmpsl
jecxz
in
jnp
cmpsb
inc
push
xchg
cmp
xchg
and
and
sub
int3
xchg
lods
add
or
add
shll
cmc
push
fistps
mov
xchg
pusha
mov
loopne
add
and
arpl
rclb
push
sub
iret
sbb
xlat
repz
cmpsl
fnstsw
xchg
xor
fbld
push
mov
popf
mov
gs
pop
cltd
cs
sub
push
scas
jmp
aas
sbb
mov
add
cld
push
stos
xor
sub
inc
xor
pop
and
push
push
insb
pop
out
mov
ret
inc
out
cmp
js
and
add
dec
add
cltd
push
cwtl
push
cmp
cmp
xchg
or
iret
jo
in
adc
cmp
xor
jp
fnstsw
aas
popf
inc
sbb
and
int3
jno
icebp
xchg
outsl
imul
dec
mov
leave
dec
fucomp
push
adc
movl
and
out
call
lahf
pop
out
mov
test
iret
cmpl
mov
dec
cmp
insb
ss
addr16
scas
rcll
in
pop
mov
add
dec
jne
rcrl
mov
jmp
test
adc
pop
jl
pop
sti
pop
add
das
jmp
inc
outsl
iret
bound
lret
xlat
mov
mov
fistpll
jnp
mov
mov
mov
adc
mov
lahf
jg
sbb
dec
jbe
add
in
lahf
testb
ljmp
loope
popa
stos
mov
out
nop
dec
mov
fstl
cmp
into
ja
call
and
cli
aaa
lock
xchg
iret
ss
pop
clc
pushf
cmp
outsl
push
bound
mov
test
ljmp
in
divb
and
std
loope
fxtract
shr
sahf
lret
adc
daa
adcl
add
jg
jnp
insl
push
adcl
sbb
add
rcrb
add
pop
daa
int3
push
scas
je
cmp
in
mov
std
xorl
add
mov
mov
xchg
pop
stc
xor
adc
pop
xchg
inc
lret
xor
orb
xchg
xor
cwtl
mov
insb
sbb
ret
mov
jnp
rolb
xchg
popf
push
inc
pop
mov
dec
lds
es
cltd
cmc
out
mov
jno
mov
mov
jb
jmp
xchg
mov
outsl
add
psubusw
pop
sub
jnp
std
cltd
stc
mov
pop
xchg
jae
jb
jmp
leave
push
adc
fistl
push
xor
or
pop
sbb
jmp
ss
or
xlat
fcoms
inc
out
aad
out
mov
insb
inc
jg
mov
pushf
subl
in
out
add
dec
movsl
xlat
outsb
test
cmpl
mov
mov
decl
pop
xor
inc
stos
dec
push
mov
pop
loopne
mov
xchg
int
pop
cmp
pop
aad
inc
fs
imul
dec
test
les
jl
push
add
sbb
test
cli
inc
inc
push
lock
inc
sub
push
mov
pop
and
jns
xchg
int
dec
clc
add
inc
das
add
jno
dec
pop
mov
xchg
push
sbb
inc
or
mov
out
push
push
out
out
insl
pop
lahf
daa
pop
mov
mov
cmpsb
dec
xchg
insl
fimuls
and
pop
test
flds
loope
cwtl
sbb
popl
js
fs
inc
leave
nop
rolb
fwait
outsb
mov
fstps
xlat
test
and
jmp
jle
icebp
inc
sbb
stos
mov
cmpl
outsb
mov
pop
jnp
inc
pop
xor
ljmp
add
mov
and
sti
cmp
insb
xor
add
pop
sub
je
mov
sub
push
inc
push
lret
and
das
cmp
jg
out
popf
or
mov
push
push
sbb
aam
push
mov
xchg
ja
push
mov
lret
xchg
rorl
inc
out
mov
lret
out
fs
fucomi
and
pop
scas
mov
cmp
hlt
insb
mov
mov
xchg
sub
test
lea
mov
dec
jbe
pop
aas
pop
out
xor
cmpsb
jb
addr16
add
pop
mov
out
add
imul
cli
and
outsl
iret
pop
inc
sub
je
mov
add
and
jns
int
je
adc
pushf
fmuls
mov
lea
and
fidivs
fdivl
into
cmp
call
lret
lahf
inc
fisubs
inc
inc
adcl
sbb
jo
sbb
je
inc
jae
jno
push
pop
mov
adc
fistps
sbb
jne
in
lock
inc
and
jecxz
insb
cwtl
testb
ficoms
orl
cmp
jge
pop
sti
add
lock
lcall
adc
sbb
lods
sub
fbstp
xor
and
sub
dec
lock
cwtl
rcll
push
aam
enter
or
jne
ficompl
rclb
loop
out
sub
pop
xchg
enter
add
popf
xor
jle
adc
icebp
xchg
mov
iret
push
faddp
mov
je
cmc
scas
ds
sub
popa
push
dec
mov
ret
mov
cmp
inc
lock
inc
rcll
and
jmp
pop
psllq
xchg
mov
inc
sub
dec
sar
insb
push
cmp
les
mov
mov
std
nop
insb
iret
xor
mov
sub
cwtl
sub
popf
mov
mov
sbb
js
hlt
out
inc
cwtl
stos
sub
lret
hlt
fcoms
dec
push
push
enter
fidivrs
sub
mov
lock
inc
sub
dec
lds
and
int
cld
fwait
mov
xchg
mov
or
fldl
jae
xor
add
cltd
xchg
cmp
sub
mov
jle
mov
sbb
add
into
xchg
or
pushf
and
insb
add
clc
dec
lods
inc
fcmovbe
xor
xchg
pop
pop
nop
or
stos
jp
insb
inc
out
xchg
xlat
sbb
ret
cltd
lods
lahf
push
cwtl
jg
pop
sbb
sbb
js
dec
mov
mov
inc
out
jmp
and
sti
aaa
mov
jp
pop
pop
das
inc
adc
mov
pop
ror
xchg
push
clc
gs
hlt
mov
mov
hlt
mov
add
inc
mov
fildll
aas
inc
dec
cld
pop
daa
sahf
test
pop
cmpsb
rcr
dec
jae
xor
push
adc
mov
pop
fidivs
stos
aas
ss
mov
pop
popa
jg
and
jno
js
cmp
pushf
inc
pop
mov
push
pusha
push
ja
cmpsl
add
cmp
mov
dec
push
inc
inc
ljmp
ds
mov
shl
addr16
jecxz
sbbl
inc
idivb
orb
mov
int
stos
shrb
pop
pop
bound
xchg
inc
xchg
lds
mov
out
and
int
scas
dec
mov
faddp
push
push
hlt
sbb
or
sbb
jp
xchg
mov
fists
sbb
jb
cmpsb
add
xchg
mov
mov
fldenv
cmp
xor
dec
sbb
filds
jl
xchg
jmp
js
mov
in
lret
sub
xor
popf
nop
or
fisttpll
mov
inc
pop
or
faddl
dec
cmp
cmp
adc
fcoms
movl
call
inc
shlb
pop
dec
sub
gs
xor
lds
sarl
loop
mov
loopne
repz
dec
les
mov
je
repnz
xcrypt-ofb
cmpsl
imul
roll
insl
xor
inc
mov
pop
push
cwtl
mov
movsl
jo
imul
cwtl
movsb
mov
sub
sub
shlb
jb
jbe
push
xor
jo
jnp
repnz
fidivrl
adc
and
mov
fmuls
xchg
xchg
mov
dec
out
and
hlt
push
xchg
xor
xor
push
mov
and
cmp
jmp
mov
mov
mov
ds
add
adc
push
pop
in
jecxz
jbe
addl
xor
inc
jne
test
repnz
int3
js
aam
imul
rcr
add
add
or
xor
sbb
cmp
push
mov
xor
pop
mov
pop
sahf
into
pop
xchg
sub
mov
test
mov
out
arpl
and
loop
ds
jae
out
aas
xchg
inc
jns
adc
xor
imul
scas
pushf
sahf
je
or
and
popf
xlat
aaa
xor
out
aam
or
xchg
cmc
loopne
inc
js
rol
jns
lock
fstl
xlat
in
test
dec
scas
and
jae
and
sub
cmp
mov
jg
cmp
call
daa
cmp
stos
xchg
lret
add
inc
js
cli
js
addb
divb
sbb
sbb
loop
and
out
dec
in
shrd
cs
cmpsl
jne
int3
psllw
das
rcll
movsb
cwtl
inc
and
shl
inc
dec
movsb
stos
push
sbb
push
pop
dec
bound
fxch
hlt
test
test
lods
mov
inc
pop
leave
mov
pop
into
test
dec
push
jo
stc
and
lods
mov
scas
push
mov
in
jg
sbb
adc
nop
mov
fwait
inc
pop
pop
cmpsb
cmp
mov
xor
push
pop
jg
mull
into
push
pop
push
imull
scas
fs
imul
call
fistpl
lods
jmp
into
adc
mov
jae
sbb
mov
or
adc
mov
incl
xchg
aad
lods
out
ss
daa
js
test
icebp
das
les
jg
sbb
cmc
cld
adc
out
jmp
int
cmp
fneni(8087
xor
aad
addr16
in
adc
lcall
insb
jnp
loope
out
xchg
out
rol
sub
xchg
cmp
les
inc
pusha
std
loopne
fidivs
lock
daa
jge
js
mov
add
lods
and
pop
mov
or
mov
aaa
repz
pop
jmp
dec
xor
sbb
jne
out
xchg
dec
cmp
dec
lods
and
dec
cmpsb
sbb
xor
add
push
cmpsb
mov
jbe
int3
xor
push
jnp
cmp
mov
xor
pop
jl
pop
cmp
lret
outsl
cmp
aas
xor
out
mov
inc
shr
cmp
in
push
popf
fmuls
push
mov
dec
fldcw
ret
push
and
push
jbe
pop
addl
add
inc
movsb
pop
lea
lds
lea
xchg
inc
sbb
lock
lds
dec
fmuls
or
inc
xchg
scas
sbb
ret
mov
stc
push
sub
adc
mov
mov
xchg
psubsw
cmpsl
jb
push
xor
inc
add
ret
ljmp
clc
pushf
jge
pop
cmpb
xor
xchg
popa
sbb
push
lahf
xchg
fmull
jno
push
adc
jle
mov
imul
stos
scas
xor
mov
cli
and
or
stos
rorl
ja
add
and
int
add
test
sbb
inc
icebp
pop
nop
inc
arpl
fsubrs
cmc
or
loop
cmp
xor
inc
sarb
sbb
pop
aam
popf
dec
out
dec
jge
lret
les
filds
incl
mov
rorl
ss
daa
pushf
ror
mov
aaa
jge
dec
pop
cmp
mov
mov
mov
mov
sbb
jp
cmpsl
inc
test
mov
sbb
sbb
in
ss
mov
sbb
out
addr16
and
inc
xchg
je
inc
mov
nop
jne
pop
hlt
int
cmp
movsb
pushf
outsb
xor
idivb
out
in
add
jl
add
pop
scas
leave
inc
mov
ss
inc
js
mov
cmpsl
das
mov
je
adc
mov
inc
int3
lahf
inc
out
dec
in
int
mov
jmp
mov
mov
push
and
jbe
push
fwait
push
adc
jno
adc
insb
dec
sbb
jno
mov
in
mov
lahf
int
pop
mov
jg
cmp
test
or
jne
or
sti
mov
pop
int
call
and
stos
pop
jne
push
push
cld
add
popf
jns
fistps
cmpsb
jmp
in
fcompl
insb
pop
je
adc
mov
and
sar
push
pushf
push
hlt
out
dec
sarb
xchg
pushf
sarb
sbb
adc
aam
lds
inc
and
jne
inc
push
out
adc
fdivs
jnp
and
mov
jg
sbb
js
pusha
repnz
and
cmp
adc
adc
sbb
ret
dec
jne
lret
inc
push
pushf
xchg
or
ret
mov
popf
push
mov
arpl
mov
movl
clc
add
vucomisd
shll
movsl
fcmovb
fwait
sti
adc
pop
mov
cltd
lea
adc
or
jns
lcall
mov
adcb
rorb
mov
xor
xlat
aam
test
mov
sbb
add
shlb
out
inc
jo,pt
in
and
dec
push
arpl
mov
jne
mull
mov
jnp
ret
xor
fnstsw
fisubl
jg
fdiv
icebp
inc
es
pop
insb
inc
sub
lods
mov
pop
out
test
fwait
stc
in
cwtl
jg
push
fstpl
jge
testb
push
test
and
popl
xchg
lea
dec
popf
std
stc
hlt
cwtl
adc
mov
daa
sub
xchg
push
inc
in
mov
mov
cmp
xor
sbb
dec
js
cld
sbb
inc
xor
mov
pop
rol
cmp
hlt
into
push
pop
pushf
enter
sbb
push
pop
int3
adc
push
mov
jnp
jp
mov
test
cmc
pop
divl
xchg
stos
in
xchg
sbb
fs
adc
test
testb
adc
xor
aam
mov
or
dec
cmpsl
dec
pusha
dec
jg
bound
jnp
or
ja
lcall
add
pop
out
mov
rorl
jne
adc
mov
frstor
xor
mov
je
stos
fsubr
inc
dec
out
sbb
repz
pushf
mov
xor
in
sarl
xchg
xor
scas
cmp
add
adcl
pop
pop
addl
mov
hlt
push
dec
pushf
dec
or
fidivs
pop
je
mov
sbb
jmp
or
xchg
shl
or
pop
test
jmp
push
mov
leave
or
outsl
rolb
cld
lea
inc
cmp
jae
stos
mov
test
aam
mov
arpl
sarb
add
popf
icebp
cmp
mov
faddl
test
ret
and
mov
mov
mov
loop
rcrl
mov
stos
mov
daa
notb
pop
fsubp
subb
xor
and
loope
xchg
xchg
add
or
xchg
imul
lea
jae
cmpsb
add
dec
mov
and
xchg
cmp
into
insb
movsb
nop
adc
loopne
ret
aam
outsl
lret
adc
sbb
aad
ret
andb
pop
sti
xchg
jg
iret
xchg
arpl
add
std
sub
and
out
les
or
out
mov
inc
test
adc
in
jae
shll
cltd
and
cld
push
and
rcll
push
add
int
push
dec
pusha
in
inc
out
mov
sahf
mov
sahf
cmp
sbb
scas
lcall
cmpb
je
inc
cmp
out
mov
xchg
inc
std
dec
pop
pop
or
int
subl
and
subb
into
mov
mov
xchg
ficomps
pop
ja
lea
pusha
push
push
sbb
push
xchg
popf
int
ljmp
popa
aam
add
push
inc
jb
adc
fwait
arpl
frstor
pop
mov
pop
mov
sbb
sub
imul
int
xor
push
xchg
cmpsl
xchg
in
jge
pushf
cmp
adc
pop
in
insb
test
sbb
scas
insb
imulb
lds
or
and
sarb
aad
cmp
sub
lcall
dec
test
call
inc
xlat
ljmp
pusha
aam
cmp
iret
orl
mov
ja
cmp
dec
call
inc
outsb
mov
sub
bound
push
jnp
std
dec
push
test
xchg
or
out
scas
cmc
lods
push
call
or
xchg
je
inc
call
sbb
push
xor
xor
shr
xchg
and
loope
arpl
pop
pop
add
popa
popf
out
nop
das
xor
dec
add
and
cmp
dec
cltd
pop
in
leave
iret
iret
push
stos
std
fcomip
mov
pusha
call
insb
shrl
push
mov
mov
rcll
xchg
push
xchg
test
loopne
aaa
jns
pop
mov
lea
cmp
sbb
sub
rdtsc
mov
popf
lods
loop
cmc
sub
idivl
sub
repnz
movsb
popa
sub
adc
test
iret
mov
jmp
jge
fnstenv
bound
jl
jmp
fcoms
hlt
lds
inc
jmp
add
mov
fadds
pop
pusha
mov
cmp
pop
ret
adc
dec
aam
test
addr16
xor
or
add
gs
test
mov
dec
pushf
std
sub
mov
nop
sub
xchg
iret
sbb
or
lcall
jae
sub
adc
mov
mov
lret
mov
test
movsl
sub
xchg
rolb
addr16
xchg
jae
test
add
scas
fiadds
mov
xchg
adcl
sub
sahf
aad
cmp
and
pop
test
pushf
sub
adc
pop
loop
fsts
cmpsb
ljmp
inc
call
jae
orb
sbb
xlat
inc
jp
js
movsb
push
xchg
add
enter
pop
mov
out
sbb
push
mov
call
out
add
std
lcall
pop
fwait
shl
adc
movsb
pop
popf
std
push
lahf
bound
jne
jmp
xor
add
cmp
mov
clc
jb
jl
add
mov
mov
popf
js
les
call
movsl
pop
push
cli
out
pusha
add
mov
rcll
pop
mov
fisubrs
js
jg
insb
xchg
and
xchg
rolb
cmp
cmp
push
cli
sub
rol
or
cwtl
add
mov
mov
sub
add
jg
and
paddsb
insl
sub
add
ja
or
idivl
jb
outsl
push
mov
or
add
and
cmpsl
lahf
data16
ret
lea
push
addr16
movsl
xchg
jmp
mull
jmp
sti
jne
pop
jmp
or
fistpl
data16
xor
loope
addr16
lret
in
inc
rcr
icebp
cld
aaa
insl
sub
sbb
ret
push
repnz
xor
and
test
imul
jo
fsubrs
aas
jne
aas
sahf
loope
push
rcrb
push
lds
sbb
mulb
xlat
nop
lock
xor
cmp
mov
pop
mov
inc
fwait
sbb
jmp
enter
pop
pop
adc
mov
sbb
and
push
jmp
mov
sub
stc
jmp
enter
push
scas
xor
ds
xchg
pop
popf
sbb
stos
mov
sub
sbb
pop
fisttpll
and
lret
and
das
push
dec
or
es
ljmp
pop
jle
imul
or
pop
aam
out
dec
jle
repz
add
mov
xchg
lret
adc
das
xor
push
orb
mov
fisttpl
sbb
jbe
loope
xor
add
push
cmp
data16
fdivr
bound
pop
mov
fldenv
pop
enter
in
loop
dec
insb
push
push
sar
leave
mov
sub
imul
das
mulb
subl
negb
rcl
pop
cmp
scas
leave
sbb
test
bound
adc
scas
stc
outsb
sub
xor
js
xchg
loop
mov
fsubrl
lret
sub
adc
xchg
and
xchg
and
mov
pushl
pop
je
incb
dec
or
and
in
add
sub
test
das
test
rclb
arpl
fsts
leave
lret
jnp
fsubp
imul
out
in
cld
test
test
stos
scas
loop
lods
or
rolb
sub
roll
mov
int
gs
das
dec
or
push
mov
or
ss
cltd
jns
addr16
pusha
sarl
jae
add
and
xchg
out
or
push
les
fsubrl
mov
push
call
insb
add
add
add
or
in
xchg
nop
pop
pop
scas
les
xchg
arpl
int3
inc
lcall
mov
inc
outsl
adc
cmc
nop
aam
cmp
sub
or
cmp
xchg
sbb
or
pop
xchg
ret
out
jne
or
shrl
add
ss
mov
sbb
nop
lret
mov
je
addr16
xchg
icebp
pop
push
mov
push
test
pop
insl
jno
jmp
mov
aad
shrl
lret
dec
hlt
les
cltd
sub
je
sti
inc
mov
add
pushf
push
ret
inc
ja
pushw
out
into
addr16
stos
mov
jl
adc
mov
outsl
xchg
js
clc
scas
out
icebp
xchg
adc
lea
pop
mov
jl
out
jmp
jns
insl
sbb
dec
stos
push
pop
cmpsl
lcall
push
inc
dec
sbb
rcll
sbb
out
xor
inc
sub
into
fwait
inc
ficoml
shrb
mov
aad
data16
ja
inc
inc
cmp
or
fwait
dec
add
addr16
scas
dec
call
add
sub
adc
jp
mov
mov
jb
mov
enter
push
enter
cmp
outsb
aaa
test
jno
xlat
cld
or
ret
or
lock
mov
mov
sti
stos
mov
adc
mov
push
fbld
dec
cmp
mov
push
pop
lcall
std
pop
fwait
popa
lds
or
inc
mov
addb
das
call
addr16
pop
cmp
dec
adc
sbb
popf
mov
popf
push
jge
sahf
cs
mov
xchg
pop
xchg
or
ljmp
lcall
repz
hlt
xor
push
pop
out
xchg
popf
aas
xor
cmp
inc
add
in
stos
cmc
xor
aam
popf
lahf
aad
pop
mov
xor
cmp
fadds
jmp
pop
dec
shl
xchg
cmp
repnz
nop
pushf
mov
pop
sub
or
sub
loopne
enter
mov
out
xchg
loope
or
movb
mov
ret
pop
rclb
mov
in
xchg
push
movsb
mov
push
add
in
js
push
and
adc
loope
scas
data16
testl
and
xor
cltd
popf
daa
dec
jb
shll
lds
pop
pushf
lods
dec
hlt
xor
pop
popa
or
xchg
or
adcb
or
pop
mov
mov
imulb
nop
mov
repz
test
mov
mov
or
sbb
mov
stos
call
aaa
mov
subl
mov
dec
cmpsl
stos
es
cwtl
jge
cs
mov
dec
adc
xchg
jl
cmp
inc
or
push
cmp
arpl
stos
push
sub
ret
ljmp
xor
add
dec
cmp
add
icebp
call
ljmp
je
les
adc
sbb
sub
pop
sbb
push
pop
aad
hlt
fldenv
dec
adc
push
push
scas
pop
inc
lock
push
jp
and
mov
xchg
jg
jmp
scas
cmpsb
adc
lds
fisttpll
rclb
popf
jmp
push
or
add
xchg
pusha
lock
fisubrl
ja
cld
cmp
sbb
rclb
aad
push
ja
push
outsb
mov
jp
push
lods
loopne
cmpsb
jns
xorl
xchg
and
sti
sub
sbb
popa
cmp
push
mov
aam
arpl
pop
lcall
mov
xchg
mov
loope
fnstcw
lahf
sti
mov
shl
pop
insb
iret
jg
adc
xor
mov
mov
and
push
xchg
fisubrl
fcomps
push
add
push
pop
mov
verr
in
xchg
nop
cwtl
sub
and
ficomps
cmp
jae
push
in
mov
loope
adc
mov
mov
jge
daa
shrb
mov
push
mov
hlt
lret
sub
inc
push
imul
lret
add
or
shr
fidivrl
xchg
bound
out
mov
mov
add
mov
jmp
jno
shll
inc
cmpsl
mov
jmp
sbb
xlat
int3
test
push
sbb
sahf
mov
cmp
push
sub
mov
notl
int3
xchg
scas
fldcw
pop
dec
xchg
sbb
xor
and
add
lock
mov
setg
mov
add
jnp
loope
xor
mov
mov
push
icebp
mov
mov
in
shll
sub
aad
mov
inc
repnz
xchg
stos
lret
shl
out
popf
je
scas
jg
cmc
inc
fimuls
out
stos
imul
lock
test
into
aad
scas
sub
sub
and
or
mov
popa
jl
scas
pop
mov
and
lcall
gs
mov
je
out
mov
lea
outsl
dec
inc
sbb
jo
dec
dec
scas
mov
jno
hlt
insb
sbb
popf
and
daa
lahf
cmp
push
addl
xor
fsubp
xchg
repz
fsubrs
out
jmp
dec
dec
stc
jmp
rcrb
dec
mov
mov
xchg
xor
adc
loopne
stc
push
test
push
pop
repnz
movsl
jp
fistps
fcoml
psubsb
inc
scas
add
jl
nop
ljmp
scas
popa
push
ja
aas
fimull
sahf
and
sub
push
cmp
stos
xor
lret
jb
push
xchg
mov
ja
in
lahf
sub
stos
hlt
mov
in
ret
pop
insb
divb
adc
roll
jecxz
jg
dec
adc
pop
andb
test
sub
stos
pop
sub
mov
push
incl
push
enter
mov
lahf
jge
mov
int3
jae
push
inc
jg
in
pop
sbb
cli
adc
xchg
xchg
push
outsl
pop
mov
out
or
shrl
shr
fsubr
cmp
push
xchg
and
sbb
sub
sbb
mov
mov
and
pop
ja
sub
dec
outsb
mov
lret
repnz
add
cmc
inc
inc
dec
inc
movl
sar
je
xchg
dec
mov
push
flds
shl
jle
dec
mov
and
jle
in
push
sub
jle
out
js
into
pushf
clc
mov
xchg
mov
pop
outsb
lret
into
mov
jg
mov
das
add
or
test
add
subl
fwait
push
fsubrs
mov
push
gs
mov
movsb
dec
out
movsl
cmp
push
mov
fsubs
cwtl
jae
test
push
push
mov
pop
int
sub
dec
cmc
test
pop
jo
lcall
xor
sub
mov
pop
pop
ret
dec
sbb
jp
inc
push
or
rorb
cwtl
leave
je
mov
lahf
sub
fs
adcl
mov
notb
jae
in
jp
fsubrs
lock
or
ljmp
and
aas
mov
dec
das
xchg
in
das
repnz
jp
add
jne
int3
mul
test
inc
adc
test
cmp
das
cwtl
push
ret
or
pop
fnstcw
call
pop
add
cmp
ret
sbb
arpl
inc
mov
pop
movsb
cwtl
xchg
dec
pusha
pop
jne
xchg
js
add
pop
cmc
in
stc
loopne
sub
ja
push
sti
adc
in
adc
xchg
std
push
dec
dec
jl
cmp
pop
gs
insl
rcrl
add
decb
push
cmp
insl
insb
fadds
enter
sbb
xor
into
hlt
outsl
and
or
mov
fidivs
cmp
push
xor
fs
sbbl
aam
into
shlb
shlb
dec
in
and
sbb
mov
scas
movsb
dec
clc
test
out
lcall
pushf
ds
jo
hlt
dec
pop
in
data16
and
ret
pop
das
je
scas
test
popa
push
mov
mov
test
out
adc
mov
mov
stos
inc
push
inc
xor
xor
sub
fmull
int3
ret
fsubrl
cmp
out
inc
aas
stos
jns
loopne
aam
jge
mov
scas
mov
arpl
ffree
mov
push
xchg
inc
xchg
dec
adcb
ja
cmp
insl
test
mov
loop
push
dec
xchg
test
bound
jne
jb
cmp
imul
into
test
sahf
add
pop
ror
sar
mov
push
add
inc
stos
scas
cltd
adc
xchg
in
fildll
push
push
in
mov
fists
adc
mov
scas
aad
push
test
xchg
cmp
arpl
jecxz
into
xor
shlb
in
mov
push
les
imul
fcmovbe
stos
ret
add
aas
pop
subl
daa
adc
mov
ds
cmpb
dec
xchg
add
add
sbb
mov
pop
iret
push
rcr
ret
sub
inc
aas
outsl
mov
mov
cmp
testl
fwait
mov
lret
pop
ret
je
cmp
repz
lds
and
jg
es
aam
dec
notl
xor
mov
or
scas
xorb
imul
es
clc
hlt
push
pop
ud2
repz
jbe
jp
std
lods
xor
fdivs
jecxz
mov
fsubs
jmp
dec
inc
xchg
pusha
stos
jne
outsl
mov
jmp
insb
ficomps
sub
data16
loop
add
push
test
inc
in
mov
mov
mov
cltd
jg
jmp
sahf
jge
push
inc
push
or
jbe
fucomi
pushf
jne
mov
cmp
mov
lock
aam
or
movsl
rcll
push
cmc
mov
mov
lret
pop
sti
add
gs
nop
cli
mov
outsl
mov
loop
sbb
inc
ds
and
jnp
mov
xchg
xorl
popf
pop
fcoml
pop
fbld
push
sbb
mov
sub
jb
movsb
lods
inc
lods
mov
repnz
outsb
lods
jp
fstpl
mov
repz
and
ds
sbb
in
jge
lock
out
stos
mov
ret
xchg
clc
loop
sbb
push
mov
pop
ds
in
aad
fistps
fcomps
mov
cwtl
push
cmp
push
and
in
icebp
cwtl
dec
icebp
pushf
adc
in
xchg
mov
sub
mov
or
push
xchg
dec
aaa
paddsw
jp
or
test
fldenv
adc
mov
lret
adc
sbb
jae
push
hlt
in
mov
dec
pop
pusha
mov
lahf
aas
std
mulb
dec
popa
sbb
or
bound
insb
xchg
mov
gs
out
lahf
dec
xorb
push
mov
cli
mov
dec
add
and
sbb
cld
addr16
push
mov
jle
and
or
push
loop
add
ret
notl
imul
xor
push
fwait
out
push
inc
dec
ret
ret
lods
push
andb
sub
ja
push
rcl
aad
jecxz
icebp
mov
je
mov
add
lcall
dec
outsl
adc
jge
add
fdivp
popl
imul
mov
cs
fmull
fsubs
mov
mov
imul
je
mov
mov
test
arpl
iret
mov
sbb
fistpl
in
cld
lcall
xor
scas
sahf
pop
out
pop
mov
pop
out
loop
lea
aas
into
aam
lods
addl
push
cs
addl
insb
mov
ss
pop
mov
lcall
ret
arpl
sbb
xchg
insb
dec
fdiv
movsb
loop
shl
mov
dec
xchg
mov
addr16
mov
mov
jno
das
pop
fiaddl
push
xor
je
sub
and
pop
js
pop
xchg
jns
add
push
mov
mov
pop
mov
mov
mov
mov
jnp
push
popa
daa
outsl
cli
adc
fs
lcall
mov
out
pop
stc
add
jg
notl
push
push
out
scas
repz
das
dec
cmpl
int3
xor
pop
sti
cmp
lret
fwait
cli
sub
ss
cmp
loop
icebp
int3
fistpll
orl
lcall
dec
fcoml
inc
xlat
adcl
mov
dec
xchg
xorb
jnp
icebp
xchg
mov
in
jle
pop
iret
cltd
scas
mov
jg
clts
xchg
lret
je
fisubrl
lods
add
mov
dec
dec
lods
push
test
xchg
daa
cld
test
das
in
mov
sbb
mov
xchg
add
arpl
adcl
xor
movb
sub
push
inc
and
cwtl
inc
jmp
cltd
das
stos
mov
sbb
sahf
cmpsl
inc
mov
add
subl
jae
jg
mov
pop
ss
movsb
mov
mov
mov
stos
jge
sbb
addb
xchg
inc
das
push
sub
outsb
dec
push
ret
repnz
sub
lods
fucomp
repnz
or
dec
cmc
and
xchg
dec
add
jns
stc
cmp
filds
addb
sbb
mov
cli
or
sub
scas
stos
jg
mov
das
shll
and
xor
mov
pop
push
pop
mov
loopne
iret
push
and
inc
or
mov
cld
cmc
sbb
mov
mov
mov
icebp
push
dec
sub
fwait
sahf
ss
inc
push
push
lods
sbb
fsubl
fld1
cmpb
dec
xchg
pop
rolb
das
fisubrs
jp
sub
into
jge
test
loopne
fdivrl
rolb
mov
cmp
xchg
adc
iret
andb
xchg
push
pop
xor
pop
jecxz
cmc
sub
fiadds
pop
andb
cmp
aas
push
das
ds
cwtl
push
pop
aas
sbb
pop
aad
jge
inc
xchg
icebp
dec
xchg
adcb
xor
mov
jl
sbb
push
pop
jge
mov
rolb
cmp
mov
pop
outsb
stos
sti
jmp
pop
push
push
sbb
and
lds
xlat
sbb
outsb
push
enter
leave
rolb
sub
je
scas
scas
adc
lds
mov
or
jmp
xchg
mov
arpl
and
xchg
jbe
xor
jle
dec
xchg
xor
jmp
jbe
mov
popa
out
lcall
xchg
pop
ds
popf
inc
sbb
test
sbb
sbb
xchg
jg
inc
jnp
dec
push
and
cmpsl
sub
int
jno
jl
mov
jle
xor
sub
and
pop
xor
pop
dec
cmpsb
ljmp
test
jo
test
sub
jae
loope
arpl
inc
rcll
mov
and
mov
xor
adc
test
lret
push
aaa
mov
ljmp
outsl
dec
pop
mov
std
cmp
xchg
in
fidivrl
adc
add
into
push
mov
aad
repz
aam
pop
and
cld
fwait
movsb
or
lcall
aad
pushf
fsub
lret
es
xor
scas
xor
xchg
xor
rcrb
maskmovq
pop
cmp
push
fwait
cmp
xor
test
popa
dec
push
jmp
gs
mov
xlat
inc
in
push
xlat
stos
xchg
cmp
cmp
or
mov
lahf
fcoml
jae
out
xchg
cmpsl
add
in
fisubs
into
xlat
arpl
mov
or
pop
adc
pop
mov
fisubrs
pusha
test
mov
lret
cltd
inc
sub
adc
xchg
mov
xchg
cmp
loop
out
pop
dec
test
fwait
pop
lods
fs
cwtl
gs
push
dec
hlt
mov
xor
add
loop
aam
and
repz
xchg
push
je
mov
fidivrl
enter
push
sarl
ljmp
dec
jecxz
div
cmp
or
scas
sahf
jo
imul
movsb
push
and
dec
fildl
sbb
push
ret
sahf
cmc
and
jl
push
mov
cmpsl
mov
mov
sahf
dec
jecxz
rcll
pusha
mov
cli
inc
ret
fistl
lods
pop
xor
outsl
cmp
pop
cwtl
mov
scas
mov
jae
es
mov
loop
in
mov
es
ds
adc
inc
ds
cltd
sbb
pop
in
shrl
xchg
or
dec
daa
pop
lret
rorl
loope
in
mov
sbb
add
aas
sub
out
jmp
pop
fistpl
xchg
out
mov
adc
movsb
or
add
push
jmp
outsb
mov
dec
in
or
mov
push
lods
adc
pop
push
ret
jnp
inc
loop
out
ret
cmp
or
leave
inc
sbb
pop
stc
ds
popa
je
ja
jg
push
push
sub
lret
arpl
sbb
shrl
mov
aaa
mov
fsts
dec
pop
test
mov
mov
adc
mov
ds
pop
and
xlat
sbb
pushf
push
or
das
aam
sub
pop
aas
stos
outsb
mov
enter
add
dec
daa
fcmovbe
dec
jecxz
sub
dec
xor
shlb
sub
xchg
mov
add
push
jne
add
ret
jns
pop
clc
push
addr16
imul
icebp
aad
push
inc
js
mov
cs
frstor
fstps
or
test
leave
mov
icebp
cli
sub
aam
movsb
aas
fdivrs
xchg
in
in
enter
or
dec
iret
xlat
push
test
jmp
pop
sbb
fsubrl
sub
fwait
call
out
mov
jmp
inc
and
cmpsl
ljmp
cmp
fwait
jb
je
test
pushf
sub
jne
inc
stos
xchg
in
jo
inc
dec
push
fstps
xchg
mov
mov
or
cmp
std
call
call
inc
push
stos
push
mov
adc
xchg
js
pop
mov
ret
fiadds
aas
movsl
inc
xchg
mov
scas
mov
pop
dec
inc
mov
test
popf
jo
popa
jl
dec
cmp
dec
sub
out
imul
mov
push
sub
cmp
clc
xchg
enter
rorb
add
ret
pop
hlt
jae
scas
adc
sti
test
mov
and
imul
cmp
adc
sbb
fwait
cmp
lds
mov
mov
leave
sub
sub
cmp
repnz
mov
mov
jo
movsl
sub
sti
aad
or
xlat
jae
addr16
mov
mov
js
mov
mov
clc
pusha
jge
imul
inc
fisubl
adc
cmc
and
mov
je
push
repnz
outsb
loopne
fsubl
test
xor
push
push
clc
push
inc
imul
lock
mov
adc
fmul
jp
shlb
dec
and
xchg
add
pusha
push
addl
sub
push
daa
mov
rcrl
mov
test
inc
xchg
mov
hlt
and
cmpsb
push
inc
gs
pop
roll
pop
pop
je
sbb
sbbl
inc
repnz
cmp
or
sbb
push
push
sbb
sbb
scas
cmp
dec
add
lock
fucomip
mov
dec
push
cltd
test
xchg
inc
push
and
pop
std
mov
jmp
hlt
mov
jnp
mov
mov
add
fcompl
iret
pop
jp
cmpsb
fsts
push
js
jge
lret
mov
stc
in
icebp
mov
push
inc
mov
adcb
jg
ret
arpl
fsubrs
test
sti
mov
cmpl
fxch
fldl
xchg
pop
test
lahf
in
pop
jl
pop
pop
dec
call
loope
std
in
jg
push
stos
repz
sbb
test
insl
rcrb
nop
push
mov
mov
aaa
pushf
enter
xor
scas
add
sbb
fwait
add
push
mov
je
test
sub
leave
pop
in
jecxz
movsl
or
xor
and
mov
pop
cmpsl
mov
negb
jle
cmp
xlat
fldt
sbb
clc
adcl
ror
sub
lcall
jle
inc
mov
mov
mov
pop
ljmp
xor
and
lock
mov
mov
ljmp
inc
mov
sbb
or
pop
xor
jno
sbb
js
movsl
mov
sub
mov
jnp
call
mov
push
push
ds
ror
into
sbb
in
jmp
and
sub
js
and
in
mov
dec
fidivrl
leave
inc
das
push
or
and
mov
rcrb
scas
daa
xchg
inc
jl
imulb
punpcklqdq
add
sbb
mov
push
push
in
cld
sbb
cltd
enter
jp
je
stos
pop
jae
and
sub
push
xor
outsl
or
outsb
imul
lods
out
xor
mov
mov
mov
push
je
js
xor
pop
pop
xor
lret
mov
mov
and
int3
cmc
push
mov
cmp
and
sti
sub
popf
cmpsl
pop
xchg
daa
repnz
mov
hlt
jo
dec
push
fidivs
pop
pop
ds
pop
lret
ss
mov
sahf
and
push
dec
xchg
jae
out
insl
loopne
jge
cmpsb
inc
lahf
cmp
cmc
daa
dec
stos
xchg
mov
sbb
hlt
mov
mov
jecxz
in
int3
xchg
ficoml
jg
jb
lea
pop
pushf
lods
jmp
ljmp
push
and
popf
les
xchg
inc
mov
mov
cld
fdivs
iret
fadds
pop
sti
mov
test
jnp
cmpsb
add
outsl
loope
push
inc
outsl
xchg
jl
popf
addr16
cmp
jmp
bound
lret
xor
leave
xchg
jae
addr16
les
fists
inc
inc
imul
std
ljmp
jbe
lods
xor
addr16
arpl
mov
mov
sub
xorb
dec
ret
adc
pop
xor
ljmp
mov
push
xor
fidivs
jb
lds
in
or
cld
dec
sahf
xchg
inc
movsl
mov
pop
std
or
in
in
or
inc
push
push
pop
mov
addr16
jmp
adc
aad
or
xor
adc
push
mov
hlt
jmp
xor
mov
sub
jb
sub
scas
sub
cmp
mov
cli
mov
pop
out
in
sbb
bound
sub
stos
clc
imul
mov
sub
fimuls
adc
sarb
dec
dec
pusha
mov
xor
int3
in
loop
xor
cmc
fldt
inc
jmp
sub
dec
stos
mov
cmp
and
and
repz
cmp
or
mov
pop
cmpsb
ret
xchg
sbb
or
lret
mov
cmpsl
lcall
jnp
shrb
sti
cmpsb
pop
inc
subb
and
dec
and
call
or
clc
in
cwtl
cmc
sub
dec
fidivs
or
data16
dec
mov
mov
pop
loop
cmp
icebp
fsubrs
movsl
stos
call
mov
sahf
adc
xlat
arpl
mov
loope
data16
dec
adc
push
jp
imulb
mov
dec
std
dec
pop
into
arpl
loopne
xchg
lea
lahf
and
cmc
mov
pop
xor
push
jo
jnp
pop
mov
dec
jp
push
xchg
hlt
jle
push
or
mov
test
call
jae
mov
add
outsb
xchg
data16
or
dec
js
and
les
inc
pop
sahf
sbb
xchg
xor
mov
mov
addl
dec
mov
mov
jge
dec
or
daa
xor
cmpsb
movsl
inc
mov
jmp
push
fs
dec
mov
neg
pop
pop
dec
xchg
subps
jbe
pop
stc
sbb
je
pop
inc
movsl
xorl
int
imul
fdivrs
fildll
mov
sbb
cmp
sub
iret
xchg
mov
mov
push
or
repz
mov
test
push
imul
add
test
pop
les
mov
in
inc
inc
pop
insb
cwtl
mov
mov
ret
fidivl
push
mov
notl
push
push
cwtl
jle
add
or
call
pop
dec
or
mov
test
mov
dec
les
push
mov
pop
push
and
lret
je
mov
mov
lock
icebp
aad
jmp
cmpsl
popa
insb
stos
cld
xchg
cmp
loop
adc
xor
xchg
push
lods
ret
aaa
dec
rolb
fadds
inc
jmp
cmp
mov
inc
push
pop
add
mov
in
sub
mov
xlat
outsl
outsb
jmp
and
mov
ja
jae
mov
push
std
mov
jmp
dec
jmp
je
xchg
dec
mov
movb
cmpb
cmpsl
push
adc
mov
or
push
stc
cli
cld
leave
or
negl
mov
ret
push
sbb
xchg
and
jnp
fldcw
fwait
in
loope
cmp
addr16
push
stos
outsl
and
sub
dec
dec
lret
rorb
enter
test
pop
jb
mov
xchg
lcall
nop
xchg
inc
out
into
lods
sarb
xor
and
pusha
xchg
enter
inc
xchg
les
iret
mov
push
mov
scas
ficompl
xchg
pop
loope
repz
daa
cmpsl
or
mov
dec
icebp
adc
out
xor
incb
fsts
jb
push
ficoml
mov
mov
test
popf
push
bound
lods
enter
aam
pop
bound
das
jno
inc
jno
push
mov
mov
shll
les
aas
jb
cmp
adc
inc
push
mov
arpl
nop
sbb
pop
pop
mov
stos
insb
mul
scas
imul
out
je
dec
sarb
pop
outsl
inc
sti
aam
incb
mov
mov
outsl
leave
repnz
ljmp
pop
call
push
sbb
xchg
les
das
add
and
fldl
adc
pop
jno,pt
push
test
mov
pop
mov
in
pop
lret
cmc
and
faddl
and
movsb
push
or
adcl
inc
xchg
adc
fisttps
mov
xchg
mov
adc
jmp
out
int
inc
pop
mov
xor
sub
and
dec
out
pop
dec
pop
mov
fwait
daa
adc
cmpsl
push
jecxz
lahf
call
sub
inc
cmp
mov
mov
lret
inc
repnz
pop
repnz
fs
insl
inc
in
push
and
aaa
jbe
test
imul
mov
push
jp
scas
mov
in
test
jb
mov
dec
push
call
ja
adc
in
and
mov
xchg
cs
jg
test
jns
test
lods
lret
adc
mov
lret
nop
inc
pusha
push
cmpsl
lcall
add
xor
jecxz
negb
out
jno
call
push
adc
push
inc
aad
outsl
cwtl
imul
dec
pop
lds
xchg
inc
in
push
loopne
in
dec
xchg
cmc
cmp
call
adc
es
fmul
inc
lcall
pop
mov
mov
mov
mov
cld
mov
sub
xor
ds
mov
pop
mov
xchg
adc
inc
in
xor
add
mov
adc
cmpsl
push
js
aas
mov
scas
xchg
pop
lcall
pushl
mov
test
arpl
pop
das
xchg
into
bound
dec
rolb
push
mov
sbb
jbe
add
testb
pop
or
jge
mov
push
icebp
scas
aam
xchg
or
xor
rclb
push
dec
sbbb
shrl
xchg
jg
jecxz
cld
bound
push
repz
xor
adc
jne
test
xchg
mov
roll
ror
push
dec
add
aas
push
cltd
gs
shlb
sbb
test
or
fsubs
push
leave
cli
or
or
sub
out
xor
mov
and
lock
xor
mov
aaa
cmp
jne
mov
pushf
push
jmp
test
test
pop
xor
adc
mov
fisttpll
pop
bound
dec
adcb
jle
int3
inc
pop
repnz
hlt
add
mov
adc
jecxz
xlat
dec
cmp
add
or
fdivr
insl
push
mov
pop
aam
std
cs
pop
mov
frstor
xchg
push
ss
and
int
inc
andb
jge
jle
mov
add
js
stos
adc
jmp
not
xchg
ja
pop
pop
sbb
add
nop
cmp
stc
xor
cli
xchg
xor
adc
hlt
mov
nop
dec
ret
dec
push
je
adc
loope
fbld
adc
xor
xchg
sahf
dec
mov
sbb
mov
imul
xor
mov
sbb
sub
push
push
jae
xor
add
adc
out
xchg
fwait
jmp
orl
mov
lahf
mov
mov
ror
ds
sub
imul
or
scas
jge
and
inc
les
xlat
scas
sub
push
cwtl
in
out
cmpsb
push
cmp
popa
lret
cwtl
cltd
jle
not
aam
dec
aad
add
pop
sub
in
stos
cmpb
cltd
push
pop
inc
xor
cmpsl
pop
lcall
jmp
cmp
pop
xorl
or
mov
dec
lods
inc
fistpll
sbb
arpl
mov
outsb
xchg
cld
dec
fsubs
loop
push
sbb
ss
into
loop
inc
mov
ja
jae
mov
jp
mov
push
jge
mov
cmp
in
dec
scas
mov
push
pop
shl
or
mov
inc
mov
cmpl
xchg
arpl
cmp
leave
mov
pop
cmp
repz
loope
or
data16
push
jge
mov
cmp
sub
cmp
xchg
jmp
inc
fcomps
mov
fiadds
das
inc
shl
ror
or
pop
jp
push
pop
cmp
inc
jle
mov
insb
xor
xor
fstl
sub
push
cmc
lcall
testl
arpl
jl
rcrb
out
push
pop
fucomi
pushf
mov
xchg
fisttpll
dec
inc
sub
sbb
jbe
dec
adc
insl
push
mov
add
mov
jg
dec
jbe
sub
stc
les
pop
addb
lret
popa
dec
cmp
cmp
xchg
mov
das
sbb
lock
xlat
int
insl
mov
inc
sub
xor
movsb
dec
mov
cmc
cmpsb
mov
into
call
enter
inc
jbe
push
xchg
dec
jb
loope
xchg
pop
push
popl
cmp
loopne
gs
mov
call
daa
in
sub
fists
adc
hlt
mov
pushf
cmpsl
jne
push
inc
jae
jo
pop
arpl
lahf
add
xchg
imul
xchg
sub
xlat
rcrb
xor
dec
bt
xchg
je
daa
imul
aas
sbb
addb
sahf
or
sub
inc
xor
cmp
sub
nop
pop
orl
xchg
xchg
rcrb
enter
sub
sti
test
lea
jnp
jle
pop
xor
cmp
cmpsb
shl
push
mov
rcr
movl
fldt
lock
jno
cmp
push
stos
jae
jno
fiadds
xchg
pop
mov
inc
push
or
into
add
jp
ljmp
sbb
repnz
lahf
sub
sarl
outsl
xor
lahf
lods
js
jno
xor
lahf
cmp
mov
arpl
sbb
mov
pop
sub
stos
or
push
out
jne
rcll
fisubl
jnp
aas
icebp
mov
mov
fdivrs
gs
cwtl
inc
cmp
test
addl
invd
sub
mov
int3
negl
faddp
or
call
adc
push
scas
jl
stc
sub
daa
loop
cld
xor
jno
ret
ret
inc
pop
into
pop
loop
push
mov
and
enter
jmp
mov
or
clc
aam
gs
xor
arpl
xor
mov
jp
and
mulb
and
push
cli
insl
mov
stos
int
mov
addl
std
fildll
hlt
mov
mov
xlat
mov
mov
sahf
jg
fwait
cs
lock
outsb
test
mov
mov
xor
cmc
add
dec
cmp
fldcw
insl
lods
test
in
xlat
lret
xor
push
xor
push
popa
push
iret
jp
mov
sub
negb
push
dec
push
rorb
ja
inc
arpl
lahf
fwait
adc
subb
cmp
or
mov
xor
scas
fisttpll
popf
fcoms
mov
pusha
push
fsub
mov
cmc
sarl
pop
mov
in
jle
push
push
jb
and
icebp
scas
pop
and
and
popl
ss
rol
xor
xchg
cmp
and
xor
stos
mov
pop
dec
cmp
stos
add
cmp
bound
mov
bound
lods
pop
sub
dec
mov
jmp
pop
mov
outsl
in
adc
jne
or
movsl
and
mov
imul
out
fs
in
imul
ret
pop
push
out
lcall
xchg
out
psubsb
xchg
add
std
sbb
cltd
inc
jecxz
imul
repz
pop
pop
sahf
pusha
jmp
jecxz
cmp
xchg
mov
sub
and
mov
ret
daa
mov
mov
jbe
jmp
fcmovu
adc
mov
stos
dec
push
mov
out
push
dec
pop
es
les
push
sbb
mov
loope
clc
mov
lea
pusha
inc
arpl
xchg
pop
add
jns
sbb
push
xor
mov
jmp
jmp
pop
or
imul
mov
cmp
outsl
jb
mov
dec
xorl
dec
sahf
std
mov
aaa
fdivs
inc
fdivs
negl
loop
push
sub
pop
adc
enter
mov
push
jge
pop
pop
incl
add
insl
jle
xchg
sbb
int3
or
pop
jno
sub
call
xor
mov
xchg
mov
cmp
test
xchg
hlt
pop
adc
test
ret
movsb
jg
jnp
inc
adc
push
out
pop
xchg
sbb
aaa
addr16
sub
adc
shrb
jbe
xchg
icebp
loop
movsb
mov
lods
adc
inc
test
ds
add
or
test
mov
sbb
mov
in
jo
jmp
xchg
mov
pop
adc
fs
mov
lods
jnp
xor
cmp
push
lods
mov
ja
addr16
ja
decb
mov
outsb
daa
clc
pop
cmpsb
ss
adc
cs
xor
jecxz
in
or
inc
mov
jbe
lods
lods
shll
loope
insb
outsb
ficoml
xchg
fdivr
mov
fs
arpl
je
inc
jbe
out
scas
sub
leave
dec
sbb
adc
ja
fs
out
lods
fcoml
jnp
jmp
imul
inc
adc
inc
dec
add
jb
sbb
pop
mov
push
cwtl
sub
ret
push
sbb
xor
inc
cmp
out
push
out
repz
je
add
sub
xor
pusha
mov
out
cwtl
sbb
mov
xchg
mov
jg
mov
mov
fists
jb
xor
adc
jle
jo
pop
aam
add
fldenv
jecxz
mov
sbb
fstpt
cmp
movsl
data16
sbb
daa
adc
sub
cmp
lock
jmp
and
and
cmc
aaa
xor
mov
loop
mov
mov
sahf
xlat
mov
inc
push
lcall
push
orl
cmpsl
fstpl
aaa
and
push
ds
push
das
mov
xchg
gs
ljmp
ljmp
hlt
idivl
or
ds
outsl
adcb
pop
dec
sbb
push
gs
mov
and
pop
pop
sbb
or
dec
fbld
loop
aam
hlt
stos
mov
es
jecxz
lahf
fidivrs
jl
das
mov
pop
adc
sub
in
cmp
xchg
mov
movsl
sub
xchg
dec
sub
cld
cmpsb
mov
add
loopne
and
and
adc
ja
jbe
ror
mov
in
dec
lea
xlat
je
repnz
inc
aaa
dec
jnp
add
adc
addr16
icebp
inc
xchg
out
bound
sbb
into
arpl
sbb
inc
jae
repnz
lods
mov
push
xchg
clc
sub
imul
xor
aaa
loope
mov
test
push
fwait
daa
insb
jno
imul
xlat
ja
int
cs
add
into
and
add
in
push
rcrb
mov
add
xor
sbb
mov
cmp
dec
cmp
incb
mulb
fistpl
ret
into
ret
cwtl
jae
xchg
scas
mov
sub
or
pop
cmp
fisubs
mov
aam
or
cmpsl
pmulhw
lea
shll
lret
ja
test
arpl
xchg
int
enter
mov
and
dec
imul
clc
pop
adc
sub
test
lds
adc
cltd
aaa
mov
data16
shll
aas
sbb
mov
jge
loop
lds
and
mov
sub
jl
cmc
rcl
cmp
push
mov
sarb
clc
cwtl
sub
call
mov
into
cs
int3
insb
movsb
ljmp
pop
push
sub
jl
jmp
gs
test
xchg
pop
shll
pop
ret
pop
mov
ds
sub
sbb
idivl
push
mov
pop
pop
xchg
sbb
xor
jne
jo
iret
xchg
loopne
add
cmp
xchg
jne
xchg
mov
out
test
dec
fdivr
adc
jb
and
inc
adc
add
fdivrl
imul
push
aam
and
test
pushf
mov
fldt
lods
lahf
sub
mov
mov
loop
notl
mov
sbb
xor
repz
js
jae
jmp
lea
jge
dec
cli
mov
or
pop
lret
dec
loop
jmp
mov
fisttpll
inc
sarl
loope
jg
mov
adc
lret
push
dec
aas
fmull
jl
jne
jmp
bswap
nop
lret
dec
out
or
add
pusha
pop
adcb
shll
cmp
int3
les
push
jns
or
mov
push
stos
jae
xorl
fdivl
iret
dec
dec
xchg
jns
add
je
mov
sbb
push
dec
lahf
popa
push
mov
movsb
push
mov
cld
sub
cmp
mov
bound
jecxz
mov
mov
in
xorl
ljmp
pop
je
sbb
jmp
aam
sahf
xchg
in
mov
dec
sti
jno
mov
jle
ja
mov
push
add
call
adc
xchg
cmpb
sahf
mov
in
leave
bnd
pushf
sarb
inc
mov
lods
push
addr16
sub
lret
cmp
jge
xor
inc
push
dec
js
rcl
xchg
dec
bnd
dec
sbb
pop
xor
xchg
or
cwtl
jmp
fiaddl
in
lock
stc
adc
rclb
dec
adc
dec
imul
loope
adc
and
inc
pusha
aad
xchg
mov
xchg
dec
std
aam
bound
inc
lahf
js
mov
and
out
inc
pop
jl
dec
add
dec
sbb
dec
pop
loope
jge
pop
test
adc
inc
js
push
mov
cmp
sbb
mov
insb
pop
jge
xchg
xchg
pushf
cmp
add
jnp
pop
xchg
push
mov
movsb
xor
pop
fidivrl
push
stos
fsubrp
shrb
hlt
inc
dec
pop
into
adc
inc
mov
xor
addr16
xor
add
cld
mov
mov
cli
subb
divb
adc
in
push
inc
add
push
clc
cs
ss
dec
inc
sub
cmpsl
jp
cli
cld
inc
in
sbbl
pusha
imul
mov
cmovg
push
jg
addr16
cmp
dec
fimuls
inc
movsb
stos
inc
adc
sbb
jle
gs
test
outsb
dec
loop
xadd
rorb
andl
cld
scas
loopne
stos
fimuls
push
dec
mov
lahf
in
adc
fnstcw
popa
roll
fcomi
cmp
shlb
xor
pop
in
cli
movsl
lds
or
sbb
push
xchg
sub
dec
jmp
clc
cs
cmp
enter
push
pushf
aaa
and
sub
lods
dec
add
mov
xchg
fwait
jns
bound
aam
mov
or
in
daa
xor
fistl
lock
andb
sub
pop
mov
pop
mov
iret
fs
aaa
pop
inc
sahf
sub
mov
lret
add
int3
add
lods
jp
add
inc
fsubrp
cmp
and
cmpsl
arpl
xchg
test
inc
addb
cmp
xchg
out
aam
in
inc
loopne
movsl
push
push
push
mov
xchg
pop
pop
push
sbb
dec
add
outsl
testb
shrb
out
mov
pop
push
dec
jge
push
repz
push
das
stos
popf
out
pop
xchg
hlt
xchg
lods
jae
pop
sub
repnz
loope
and
or
jmp
sub
sbb
sbb
insl
dec
stos
xchg
mov
dec
stos
dec
enter
pushf
ror
push
iret
xor
fcomps
push
sub
pop
aas
dec
sub
fs
data16
xchg
shl
sbb
cmc
cwtl
inc
shrb
mov
cld
inc
jb
dec
repz
mov
xor
imul
mov
mov
jnp
add
or
loopne
repnz
xchg
scas
sub
fwait
stos
repnz
adc
sub
xor
jo
out
jo
dec
jne
xchg
or
lock
xchg
inc
mov
fidivs
scas
mov
pop
loopne
sub
mov
sbb
aaa
lods
and
mov
in
mov
add
fdivrl
jge
and
loopne
scas
cli
inc
inc
pop
fnstsw
xchg
cmp
out
jge
sub
sbb
je
roll
fmuls
sub
jo
cld
cltd
xchg
cs
shrb
adc
xorb
aam
adcl
popa
mov
cltd
fildll
or
add
scas
mov
rorb
sbb
movsl
mov
or
inc
add
and
mov
adc
add
push
xor
in
repz
adc
repnz
jge
fldl
fnstcw
xchg
into
bndstx
leave
cmp
pop
jb
mov
xlat
test
cmpb
fimull
loope
mov
xchg
cmp
fwait
jae
jne
xbegin
pop
sbb
test
hlt
subl
xchg
lcall
cs
sub
loop
pop
ja
inc
outsb
lock
scas
add
pop
fnsave
rorl
push
add
jg
ret
push
jecxz
jno
sti
ja
pop
lret
jle
mov
sbb
xor
push
sbb
mov
fcompl
add
mov
cmp
mov
leave
add
arpl
sub
aaa
and
jge
sahf
repnz
mov
adc
cmp
jmp
and
xchg
les
xor
jle
inc
cmp
fwait
aas
mov
ds
idivb
cmpsb
mov
sbb
inc
pop
sbb
hlt
sbb
fwait
ret
jno
ret
push
pop
dec
cmc
data16
xchg
test
ror
dec
jmp
and
adc
ret
sbb
mov
pop
add
call
sub
cwtl
sahf
mov
jmp
mov
adc
imul
xor
call
outsl
out
mov
orb
mov
fucom
mov
mov
mov
mov
int
cld
lods
stos
or
sti
std
ljmp
push
adc
ja
ret
push
add
in
jl
lret
push
pop
lret
loopne
jbe,pt
add
sbb
js
popa
xor
fbstp
jb
aaa
push
ja
scas
ds
pop
pushf
pop
push
push
mov
outsl
into
outsb
xchg
mov
outsb
adc
std
aas
iret
sub
gs
adc
mov
push
loop
inc
sub
ljmp
popf
icebp
inc
dec
jno
pop
test
sti
pop
jns
cli
fsub
inc
aaa
cmp
xchg
cmp
dec
and
mov
add
sub
sbb
push
mov
mov
push
mov
mov
repnz
gs
xchg
cwtl
pop
imul
mov
jp
jmp
popa
cwtl
stc
sbb
jmp
aas
inc
lock
and
pop
data16
jno
push
in
stos
ds
rorb
mov
sarb
jecxz
pop
mov
aad
ret
out
xchg
adc
cmpsb
pop
dec
push
mov
add
or
jmp
test
xor
jmp
jp
mov
mov
jb
mov
adcb
or
push
ror
mov
dec
out
sbb
push
incb
dec
push
aas
lret
sbb
daa
in
mov
stos
std
enter
mov
idiv
xor
pop
jg
pop
hlt
int3
fidivrl
test
jno
stos
push
sbb
in
out
cmp
adc
js
pop
test
movsl
jp
cmpsl
arpl
mov
mov
adc
cmc
mov
sbb
mov
std
jmp
xlat
inc
rorb
mov
fimuls
adcb
subb
push
push
test
xlat
scas
fnsave
out
push
jb
js
test
xor
inc
aaa
shrl
xchg
xchg
ret
xor
pop
lcall
in
scas
cmpsl
out
in
out
pushf
pop
fldenv
ret
cld
cmpsl
mov
mov
mov
inc
jne
out
lods
fs
mov
push
sbb
test
out
adc
stc
jge
test
scas
rcrb
or
push
jmp
mov
xor
cmpsb
inc
test
add
cld
insb
das
cmp
dec
push
cltd
adc
in
lret
sbbb
movb
gs
pop
xor
std
test
ds
jg
cmp
inc
mov
stc
ret
mov
pop
arpl
cmc
xor
adc
inc
sub
scas
jo
daa
or
test
mov
mov
es
jbe
ret
loope
dec
push
lahf
adc
jp
jns
dec
cli
ds
jns
cltd
add
dec
iret
sbb
int
cld
push
mov
mov
gs
fcmovnb
dec
into
out
js
sbb
shll
test
pop
jp
imul
push
and
and
mov
movsl
pop
cmp
test
dec
cld
lret
inc
inc
inc
add
outsl
outsl
xchg
fwait
cs
mov
in
sahf
loopne
ljmp
adc
daa
out
cli
test
pop
jae
les
mov
insb
dec
lea
push
hlt
fimull
dec
lods
dec
pushf
push
mov
scas
mov
sub
aaa
lock
inc
jg
fmul
adc
stc
pop
dec
jo
mov
pop
frstor
cmpsb
mov
xchg
or
lods
mov
in
jae
sub
ret
mov
xchg
je
sbb
mov
pop
out
mov
popf
cmp
mov
mov
jp
dec
into
or
sub
jp
mov
stos
mov
dec
jmp
push
and
jecxz
cmp
addr16
mov
in
pop
and
inc
push
dec
ja
loop
mov
aaa
aaa
mov
lds
xor
inc
repz
xchg
adc
jl
daa
pop
xchg
dec
mov
ljmp
cmp
inc
loope
mov
frstor
call
loop
movsb
aas
fcomps
cmp
sub
mov
repnz
mov
push
or
ja
sub
sahf
icebp
filds
aad
xchg
xchg
mov
stos
and
icebp
cltd
ds
test
cmc
les
pop
mov
mov
iret
ja
lahf
mov
fsubl
rcrb
dec
outsl
mov
mov
xchg
stos
jns
das
jno
sub
cs
or
stc
les
push
pop
movsl
lds
loope
dec
push
sbb
push
push
add
pop
out
mov
cld
cmpsl
cs
pop
and
push
mov
cmp
ljmp
push
sbb
iret
enter
jp
rclb
push
loop
cmp
cmc
lods
fdecstp
cmpb
repnz
and
out
cld
cld
inc
jmp
lods
sub
imul
clc
sub
mulb
sub
xchg
out
loopne
inc
addb
loop,pn
dec
mov
bound
incb
xor
push
lock
nop
movsl
mov
sub
scas
add
dec
jl
sahf
sub
add
and
add
outsl
test
cmp
cmpb
sub
mov
dec
cmpsb
sub
cltd
adc
or
pusha
or
insb
ljmp
jl
shrl
daa
lret
dec
in
mov
xchg
and
jne
pop
pop
mov
out
stc
icebp
mov
scas
cmc
das
jne
fcomps
push
inc
mov
inc
cld
int3
push
scas
adc
enter
push
pop
lcall
and
mov
xchg
xchg
mov
mov
sbb
dec
andl
gs
push
mov
cwtl
adc
rcl
dec
fs
mov
xchg
mov
rorl
lds
xchg
ljmp
repz
fldcw
data16
ret
cmp
jbe
sbb
es
clc
fsubp
xor
sub
fistpll
jg
dec
ficompl
mov
cltd
imul
mov
std
adc
ficompl
loope
test
cld
outsb
mov
lods
adc
outsb
pop
jo
lret
nop
cmp
or
sti
xchg
mov
pop
push
adc
mov
sub
xchg
inc
pop
and
pop
add
pusha
mov
dec
gs
jb
adc
leave
cmp
and
mov
jge
das
movsl
add
insb
inc
ja
cmp
dec
inc
in
hlt
push
mov
xchg
push
rcrb
popf
xor
iret
pop
lock
or
pop
sub
mov
insb
jne
bound
mov
stos
mov
in
mov
enter
sbb
and
lds
or
insb
mov
cmp
stos
cmp
mov
stc
dec
xchg
mov
cmp
jge
in
mov
lods
pop
test
std
dec
mov
sub
cmp
mov
mov
sbb
outsb
movsb
ja
adc
push
xlat
and
push
cmp
cs
dec
push
or
loop
les
dec
jne
xchg
cmp
rcll
test
popa
mov
out
lock
jl
dec
leave
rsqrtps
rcrb
pop
jl
scas
shl
ljmp
es
push
jmp
fs
ja
gs
ret
jp
cmpsl
fisttpll
pop
xchg
mov
mov
cltd
clc
sbb
xchg
bound
adc
add
lods
cltd
lea
push
mov
xor
movsb
push
dec
mov
jge
loop
cltd
xor
jo
scas
imul
cmp
push
lds
pushf
jne
sbb
test
dec
mull
int3
hlt
jp
ss
pop
xchg
xchg
ret
in
sub
lret
pop
xchg
fbstp
addr16
xchg
cs
cmpsb
inc
mov
cmpsl
mov
lret
fisubl
movsb
in
xchg
ret
mov
jle
cmp
xchg
outsb
repz
fiaddl
inc
xchg
cld
popa
dec
scas
gs
push
mov
repnz
mov
add
mov
aad
into
int
cltd
add
repz
and
pop
xchg
inc
mov
rorl
xchg
mov
dec
sub
movl
dec
aaa
sub
in
mov
or
fwait
dec
or
lock
push
mov
les
push
or
rol
xchg
push
lods
push
mov
adc
fs
and
lahf
out
cmp
dec
mov
mov
mov
sbb
adcb
lods
ljmp
jl
sub
scas
arpl
fwait
xor
cltd
push
in
mov
mov
push
add
push
ja
pop
gs
cmp
das
push
xor
mov
ja
insl
and
sub
or
push
lds
jle
push
add
imul
fs
pop
lahf
jno
mov
lea
dec
cmp
adc
lds
or
lods
arpl
in
lds
std
pop
pop
add
mov
push
xchg
es
les
lea
sbb
repnz
sub
mov
daa
xchg
into
mov
dec
or
fcomps
clc
jle
into
push
std
enter
push
sub
roll
mov
rcrl
dec
mov
lret
sub
mov
xlat
pop
nop
insb
movsl
outsl
mov
repnz
sbb
jecxz
sub
mov
and
dec
into
fildl
mov
movsl
push
inc
jl
jge
test
add
push
sub
push
loope
movb
and
cmp
fdivs
loop
mov
mov
mov
push
pop
inc
lea
inc
stos
xchg
xor
cmpsl
lea
jb
aad
cwtl
insb
add
xchg
js
repz
or
adc
pop
jns
cmpb
loope
dec
xchg
dec
cmpsb
mov
mov
aad
pop
ret
add
mov
rcr
and
cltd
adc
ror
js
addr16
in
mov
cmp
pop
pop
aam
jle
sbb
das
pop
push
mov
imul
shrl
negb
outsb
adc
xchg
repnz
ror
cmp
jnp
imull
stos
les
in
cmpsb
je
add
xor
bound
mov
xchg
ret
stos
leave
pop
movsl
pop
or
mov
mov
or
xchg
lahf
sub
je
mov
jp
cmp
pop
in
enter
mov
ds
add
mov
inc
lahf
filds
cmpb
push
stos
sub
outsb
add
and
xor
push
push
mov
xchg
push
in
jae
dec
jae
dec
mov
add
fisubl
jg
cmp
les
insl
test
jmp
cmp
dec
inc
cld
mov
cmpsl
mov
fiadds
sub
shll
out
jno
insb
xchg
daa
xor
dec
xor
jo
jmp
pop
stc
lret
repz
inc
inc
test
xchg
cs
fcoml
aad
push
inc
test
push
jl,pn
xlat
ret
int3
bound
jb
cmp
in
fs
pop
or
add
mov
xchg
sub
out
mov
pop
inc
lods
sbb
adc
fiaddl
sub
adc
shlb
adc
inc
dec
stos
cmpsb
mov
cmpsl
xchg
das
enter
sub
sarl
aaa
in
and
in
push
inc
ds
lods
out
pusha
enter
mov
movsl
int
inc
lret
lods
mov
subb
xchg
jg
xchg
jmp
cmp
vcvtsi2ssl
pop
lds
mov
sub
pusha
sti
or
ficoml
pop
vmwrite
in
call
pop
xor
int3
push
dec
adcl
mov
out
mov
jmp
sub
sarb
repnz
cld
icebp
out
addr16
int
test
add
fcoms
cmp
pop
mov
int
mov
adc
scas
mov
aaa
out
ljmp
cmp
movsl
lock
sub
push
cmp
test
jnp
loope
outsl
lret
ds
cmc
and
jae,pn
mov
cmc
scas
push
movsl
in
push
mov
inc
sub
mov
xchg
mov
pop
aad
fsubl
push
pop
lea
or
dec
btc
mov
pop
inc
adc
jne
dec
ret
xchg
jb
mov
insl
lods
mov
loop,pt
adc
out
jle
mov
lret
cwtl
mov
lods
sub
sub
jle
add
pop
push
mov
lret
jmp
gs
dec
dec
mov
jne
push
lcall
sar
xchg
icebp
dec
jge
lock
test
cwtl
and
loop
sub
popl
insb
mov
push
push
pop
cmp
and
bnd
out
imul
or
in
sub
mov
hlt
mov
jne
sub
gs
cmp
dec
icebp
cs
fdivrl
div
jmp
lret
ljmp
jle
cwtl
mov
scas
ds
pop
xor
mov
and
mov
xchg
sbb
push
push
lds
aad
int3
jb
mov
cmp
insl
inc
shlb
add
pop
aas
movsl
mov
pop
and
mov
lret
pop
xchg
das
push
fbstp
icebp
add
push
in
arpl
jns
pop
mov
or
adc
das
fsts
push
stc
add
insl
dec
fcom
dec
lret
call
je
or
adc
ds
mul
dec
outsl
cld
movsb
cltd
xor
mov
cmp
mov
cmp
call
ret
loop
mov
je
push
ret
jae
leave
aas
lea
and
mov
push
mov
sbb
pushf
mov
pop
jae
lods
add
sub
xchg
iret
out
dec
ljmp
popf
popa
cmpl
mov
stc
xchg
or
mov
push
jp
jge
cmpsl
xchg
dec
int3
add
js
pop
insl
push
xor
pop
bound
add
mov
out
inc
or
data16
sbb
xchg
icebp
add
mov
push
dec
shrl
ja
and
mov
dec
and
stc
cmp
push
adc
popf
inc
fwait
decl
stos
nop
mov
xor
jl
or
cmpsl
push
pop
test
jbe
push
fists
jp
push
cwtl
rolb
lret
adc
mov
jbe
int3
xor
clc
js
push
jl
mov
scas
imul
fisttpl
push
inc
lret
es
repz
test
stos
in
dec
pop
shl
cmp
xchg
mov
cltd
cmp
gs
sbb
inc
iret
jg
dec
mov
rcll
pop
fs
pop
and
bound
clc
scas
sbb
rorb
dec
aas
shll
shl
repnz
pop
aas
mov
jo
cmp
pop
and
sbb
test
loope
mov
out
dec
and
aam
cmp
lods
icebp
push
pop
or
sahf
pop
scas
xlat
aad
shlb
cmpsb
lcall
es
ss
mov
sub
lods
adc
pop
xchg
push
leave
mov
or
jecxz
out
inc
xchg
adc
xor
int3
aas
movsl
push
mov
jb
in
push
out
ljmp
in
daa
lret
xor
popf
paddsb
jle
ja
ljmp
pushf
mov
enter
jno
lahf
sbb
sbb
bound
mov
es
jp
repz
push
js
jnp
pop
sub
xor
sbb
scas
in
dec
cmp
mov
pop
pop
jg
jb
mov
es
pop
inc
adc
or
mov
cmovle
sub
nop
fldt
jbe
mov
icebp
sbb
sbb
push
inc
inc
jge
enter
inc
cs
push
dec
mov
leave
mov
stos
inc
aad
inc
add
jae
ljmp
add
sub
decl
adcl
add
sti
push
jl
xchg
xchg
pop
inc
xchg
fisubrs
dec
aad
addb
dec
sti
call
add
push
insl
sbbl
fsubrl
fldl2e
sbb
pop
adc
xchg
jmpw
lret
pop
fbstp
push
mov
sub
mov
or
mov
push
xor
or
fadd
bound
mov
inc
movsb
mov
andl
mov
or
sub
sti
sbb
inc
aad
fnstsw
adc
in
fimuls
dec
in
and
outsb
and
fptan
cwtl
aas
cld
out
pop
subb
cli
jo
jne
jp
xorb
hlt
and
mov
hlt
add
fs
aad
inc
mov
jge
test
adc
pusha
int
inc
or
xchg
cmp
repnz
and
mov
test
jne
rcrl
mov
inc
popa
sbb
xorl
mov
negl
mov
xchg
popf
orl
or
jge
adc
into
and
mov
std
jno
divb
pop
stos
mov
jo
filds
fucomp
shll
insl
mov
ljmp
stos
inc
out
pushf
xchg
flds
add
fmul
dec
mov
lcall
loope
or
stc
incl
bound
jbe
xor
test
dec
shll
push
push
pop
push
mov
shld
hlt
int
lahf
pop
xchg
into
pop
fistpll
jnp
loope
push
lret
add
cs
add
popf
mov
mov
sub
sbb
jmp
add
xchg
jg
or
popf
mov
pop
nop
pop
fxch
cmpsl
outsl
xlat
mov
xor
cmpb
ds
jmp
inc
call
cmp
jne
adc
addr16
in
daa
cmp
dec
int
cs
push
call
lahf
push
fs
cmp
shrb
insb
out
inc
rorl
mov
out
push
sti
sbb
ja
sub
les
sbb
ljmp
inc
xchg
mov
movsb
dec
aad
leave
inc
scas
int3
jae
leave
outsl
lock
dec
sti
cmp
pop
popa
or
imul
clc
in
xchg
dec
push
xor
jb
push
push
mov
sbbl
xchg
loop
rorl
push
testl
push
lret
lret
out
out
sub
clc
sbb
lret
rolb
lcall
sub
into
in
fstp
mov
pop
sbb
test
pop
in
xchg
test
rcl
cmp
adc
test
insb
or
insb
clc
jp
loop
xchg
sbb
repz
and
dec
adc
adc
mov
test
call
dec
add
imul
imul
xor
pop
cld
popa
fstpt
lods
xchg
lret
sbb
xor
lods
sub
dec
ja
mov
out
out
mov
fwait
arpl
in
xchg
loopne
loopne
lret
push
or
and
mov
sbbb
and
lods
pop
add
inc
push
pop
lahf
test
out
out
push
xchg
insb
std
and
aad
lock
cmp
push
cli
xor
cmp
or
in
pop
jg
out
dec
adc
dec
popf
push
xor
fs
mov
out
ret
call
jnp
sarb
out
fsubl
in
cmp
outsl
pop
push
adc
mov
fs
cmc
stc
xchg
outsl
jb
jmp
popf
leave
mov
aas
mov
cmpsl
ss
mov
daa
sub
cmp
sbb
lret
nop
testl
sbb
subb
mov
fsubr
pop
int3
cmp
xor
clc
lret
jg
nop
fidivrs
adc
fs
pop
jmp
mov
adc
dec
outsl
sarl
imul
push
imul
sbb
xor
out
mov
loope
xchg
hlt
inc
jnp
pop
pop
and
jbe
lcall
iret
shlb
dec
dec
pop
adc
pop
sub
roll
and
push
jae
leave
push
in
jecxz
and
add
sub
lods
dec
shl
mov
xchg
xchg
sub
or
shr
adcb
rolb
sbb
fadds
ret
mov
cmp
aad
aad
and
mulb
int
test
ret
pop
out
add
mov
adc
arpl
je
in
fbstp
jge
jnp
xchg
ficompl
mov
popf
movsb
pop
sub
pop
into
jns
jbe
scas
mov
shll
mov
cmpsb
pop
xlat
int
ds
scas
adc
scas
sbb
fwait
sbb
scas
xor
add
mov
imul
cmp
in
lret
pusha
mov
inc
push
sbb
sub
in
xor
push
or
aaa
mov
inc
push
mov
fmull
fs
or
sbb
adc
inc
insb
push
mov
lock
pop
pop
hlt
push
xchg
xchg
sub
hlt
lock
mov
cmpsb
sbb
lret
cli
push
xchg
jae
jp
pop
int3
jmp
push
inc
mov
sbb
and
cmpl
mov
lea
ret
popa
shl
nop
dec
xor
mov
dec
cmp
lods
iret
push
inc
fcomps
dec
movsb
push
or
movsb
les
sbb
sbb
lahf
jnp
fsubp
xor
loop
popf
push
jbe
lcall
sbb
iret
xor
xor
cmp
bound
cmp
stos
xchg
call
loope
cmp
push
xor
adc
jl
xor
mov
or
and
cmp
sbb
pop
popf
ret
int
add
daa
dec
mov
dec
dec
sub
sbb
mov
inc
adc
outsb
les
dec
icebp
push
dec
ret
repnz
xchg
hlt
loopne
push
push
lock
push
dec
out
and
std
dec
mov
sbb
out
fnsave
xchg
sarl
and
mov
testb
lds
shrb
push
push
push
pop
xchg
xchg
ss
icebp
insl
mov
adc
mov
or
sbb
rclb
inc
xor
sub
cmp
rorb
out
xor
out
loope
xor
idiv
lods
pop
pop
jnp
xchg
xchg
lcall
mov
leave
popa
into
aaa
dec
jle
roll
es
popa
adc
test
adc
es
xor
mov
xchg
out
lahf
call
lds
pop
data16
adc
push
leave
and
lods
sarb
mov
inc
cmp
cmp
insb
jo
push
cmpsl
or
inc
push
es
adc
fwait
mov
in
mul
jbe
popa
enter
inc
icebp
inc
inc
ss
mov
test
push
jmp
or
cmp
mov
push
lock
loopne
mov
pop
ss
sbb
in
jmp
mov
mov
inc
outsl
outsl
mov
flds
push
pop
jns
pop
sbb
dec
mov
dec
xor
push
sarb
les
sub
enter
inc
mov
push
arpl
push
jns
stos
mov
or
mov
add
xor
mov
mov
das
and
jo
dec
cmc
arpl
sbb
xchg
push
aaa
dec
pop
jne
xlat
adc
xchg
hlt
mov
cmp
pop
shlb
lret
sub
mov
shrb
or
aas
stos
dec
adc
pop
mov
insl
pushf
popa
adcb
or
and
addb
xor
inc
fiaddl
std
add
push
mov
mov
pop
xchg
iret
jae
push
xor
and
fstpl
nop
sti
xchg
stos
cmp
es
adcb
jmp
dec
cmp
subb
xor
aas
cltd
cltd
lock
xchg
mov
mov
xchg
and
xor
dec
inc
mov
mov
addr16
and
je
aam
jo
loopne
xorb
ret
xor
and
repz
push
clc
inc
fs
jp
roll
mov
push
jle
mov
xchg
cmp
xchg
movb
adc
jns
mov
sti
mov
adc
test
cmp
sbb
add
insl
and
data16
insb
push
repnz
xor
sti
cli
jae
cmp
add
dec
je
adcb
fsts
mov
fmulp
jge
outsl
cmp
lods
cmp
cmp
lock
adc
repnz
imulb
ljmp
mov
lahf
xor
stc
lahf
aam
cmpsb
in
mov
pop
cmp
dec
xchg
lds
pop
stc
test
int
out
cmc
iret
adc
inc
xor
out
and
imul
gs
sahf
scas
adc
fstl
pop
add
xchg
mov
je
inc
shl
jl
sbb
js
xor
fistps
scas
std
cli
mov
loopne
ds
inc
sbb
mull
jne
push
cmp
es
mov
std
sub
incl
test
cmp
cmpsb
lock
push
sti
pop
stos
lret
cmc
sarb
adc
add
xchg
jb
dec
inc
enter
add
pushf
pop
hlt
mov
dec
xor
clc
sub
xor
ja
sbb
lret
jmp
test
dec
shr
scas
sub
add
fcomi
jmp
test
and
cwtl
movsb
xchg
xchg
mov
in
cs
fs
inc
jae
mov
cmp
push
mov
stos
xchg
mov
sahf
mov
popl
xchg
push
jno
pop
clc
mov
dec
dec
aaa
cmc
enter
jns
add
pop
jne
cmp
loope
notb
test
sub
push
testb
pop
push
ficompl
inc
cmp
ss
jns
rcll
cs
and
pop
jmp
loopne
pop
outsl
add
sub
sub
outsb
das
or
dec
mov
inc
js
andl
mov
mov
fisubrs
leave
pop
dec
insb
dec
fisubrl
xchg
subb
arpl
dec
andnps
inc
adc
sbb
cmp
mov
jns
fs
notb
inc
push
decl
leave
lea
aaa
iret
adc
mov
jb
rcr
add
fisttps
push
mov
imul
jns
fmuls
inc
add
icebp
pop
insl
jo
in
aaa
test
idivb
popf
mov
jp
sbb
fisubrl
hlt
inc
leave
incb
sbb
call
scas
aaa
into
push
adc
jl
fmul
or
rcrb
es
shl
mov
icebp
inc
pushf
adc
mov
mov
arpl
push
mov
test
fcmove
repnz
lea
std
or
inc
dec
push
aad
cs
push
js
cld
or
xor
mov
xchg
stc
adc
dec
jo
sub
pop
rolb
dec
mov
pop
adc
jae
pop
pop
daa
and
fcompp
ja
mov
sbb
es
pop
or
daa
scas
popl
xor
call
push
hlt
repnz
push
shll
or
arpl
jno
test
iret
shlb
sar
push
fidivrl
div
insb
mov
test
sti
dec
mov
or
adc
mov
adc
dec
sbb
push
sub
js
mov
mov
push
and
push
sub
pop
sbb
and
leave
inc
and
inc
jns
aad
pop
arpl
stos
xor
ja
repnz
mov
pop
addr16
cld
jns
sbb
mov
mov
aam
mov
cltd
lods
push
inc
call
add
cmovbe
mov
cmpsb
shl
mov
push
cld
mov
push
xchg
bound
into
sbb
insb
pop
daa
add
les
sti
pop
fwait
jge
lcall
dec
push
nop
xchg
push
or
les
iret
orl
pop
roll
out
mov
in
outsl
xchg
and
cmp
je
lds
adc
ljmp
push
ss
push
adc
xlat
and
std
jecxz
inc
add
stos
jne
std
dec
mov
or
push
ret
lahf
and
cmp
pop
or
cmp
add
and
enter
js
inc
cs
push
cmp
pusha
hlt
jg
aad
out
popf
lds
mov
stos
sub
cmp
dec
cwtl
subl
arpl
adc
mov
and
nop
jl
adc
dec
or
mov
mov
xchg
xor
jns
inc
sub
jb
call
stc
and
xor
cmp
lahf
fdivl
pusha
sub
outsb
mov
push
fprem1
fwait
inc
stos
movsl
xor
xor
add
out
or
push
dec
mov
sar
jg
mov
repnz
jmp
sbb
push
push
in
in
leave
push
scas
int
int3
sahf
pusha
cmp
add
xchg
lcall
jp
mov
xchg
cld
bound
xor
sbb
aas
mov
repnz
enter
inc
mov
js
xchg
cltd
and
push
lret
leave
push
fcompl
inc
cmpsb
fstp
or
mov
xor
xchg
outsl
xchg
inc
les
mov
cmp
mov
fimuls
xchg
mov
rol
xor
cld
sub
mov
adc
xor
push
nop
es
adc
ror
or
sbb
push
sub
iret
xor
jno
fcomps
dec
dec
or
out
clc
fsubl
icebp
aas
aaa
fs
fnstenv
out
push
push
or
push
btcl
pop
xlat
push
mov
movnti
xor
sbb
rcll
lods
inc
xor
je
ljmp
loopne
ss
dec
push
cli
fsubs
dec
xor
shll
lods
push
xor
sti
test
lods
icebp
mov
xchg
fsubp
ret
out
push
or
cmp
push
push
popa
leave
sbb
xor
pop
or
lea
pop
jg
dec
movb
push
in
xor
sub
xchg
outsl
or
push
mov
xchg
jne
popa
jae
jo
xchg
push
push
push
adc
inc
or
lret
xor
jmp
push
mov
outsl
adc
out
sahf
sub
je
data16
adc
cmp
fcmovb
cmp
xor
sub
mov
mov
cld
adc
outsl
leave
pop
mov
ss
push
push
loop
jmp
imul
icebp
js
test
jae
inc
call
fildll
jge
add
out
sub
int
mov
jo
fists
int3
daa
dec
pop
xchg
xchg
outsl
adcl
das
push
mov
jp
push
repz
jns
jb
lock
test
cmp
sbb
push
shrb
int3
jge
movsl
divb
push
adc
ljmp
addr16
push
mov
add
nop
sub
mov
mov
xlat
and
xchg
dec
mov
and
sub
cmpsb
stos
inc
xchg
aam
and
jecxz
push
mov
cwtl
push
sbb
push
push
jne
mov
hlt
xor
cmp
lock
cmp
pop
jl
jne
std
imul
shrl
mov
mov
dec
mov
mov
test
out
pop
mov
lea
repnz
aad
arpl
aad
push
push
cmpsb
mov
push
jbe
das
add
fwait
dec
pop
out
adc
cwtl
cmp
mov
adc
mov
inc
push
push
pop
push
xor
js
xor
leave
push
imul
bound
mov
jecxz
imul
pop
jge
pop
pop
outsl
cmp
pop
mov
push
jb
scas
iret
iret
incl
cld
push
fidivs
jno
jb
lcall
aam
jge
or
xor
inc
loop
jp
xchg
pop
lock
je
add
adc
cmp
aad
loopne
add
mov
sbb
lock
mov
cli
jle
push
call
fsub
pop
pop
sti
cwtl
scas
dec
in
jbe
subw
mov
mov
out
enter
jno
mov
mov
pop
xor
sub
and
lods
jae
dec
sbb
insl
dec
mov
stos
sarl
xor
daa
sub
ja
daa
jne
add
pop
sarl
mov
scas
mov
push
pushf
add
rep
sub
es
pop
loop
scas
js
insb
xor
rol
sahf
sub
out
mov
ja
jmp
mov
rcll
loopne
adc
and
cmpsb
popf
add
cld
xchg
clc
idivb
adc
ret
mov
mov
mov
jne
xor
cwtl
ds
or
push
lret
push
aaa
pop
popf
call
xor
add
imul
inc
pop
cmpsl
mov
and
in
dec
ds
jns
out
xor
insl
mov
lods
adc
or
out
sbb
lock
sbb
rcrb
outsb
add
fimull
fdivl
xor
push
test
stos
repnz
jnp
es
inc
enter
fistps
insb
cli
xchg
cvtps2pi
adc
xor
jno
testb
cmp
pop
xchg
cmp
add
ficoms
sbb
rorb
ret
aam
shll
cmpsl
pop
je
sti
inc
movsb
xor
dec
das
icebp
sub
inc
push
adc
jbe
and
add
cmpsl
cmpsb
add
and
pop
and
jo
les
mov
daa
cmpsb
cmp
mov
pusha
xchg
inc
jmp
mov
xor
sahf
cmpb
jecxz
dec
or
in
jecxz
push
jne
loopne
andps
inc
test
test
inc
test
adc
mov
inc
scas
mov
mov
or
sbb
jg
movlps
ja
pop
dec
push
mov
daa
stc
arpl
aad
sarl
cld
call
leave
push
push
std
sbb
cwtl
or
fs
jecxz
and
insl
movsb
xlat
mov
sbb
rcr
imul
mov
pop
add
ja
cmp
dec
cmp
xlat
icebp
mov
sbb
mov
jnp
lock
mov
fwait
ja
mov
js
lret
xor
xchg
mov
mov
jo
insb
into
loope
or
sbb
sbb
inc
or
mov
push
xchg
and
mov
push
mov
gs
lea
cmpb
mov
dec
les
gs
lock
sub
sar
cmovg
jp
divl
pop
jl
xor
and
fs
cwtl
sbbl
stc
test
jp
pop
fwait
or
push
push
jbe
sahf
in
add
iret
cmp
outsl
sbb
push
adc
ljmp
sub
and
and
cmp
push
hlt
and
push
jmp
mov
cli
pop
pusha
jno
insb
xor
jp
rorl
movsb
loope
lahf
push
lret
jmp
insb
and
fs
sub
and
or
mov
xor
std
loop
subb
push
arpl
test
add
out
nop
ret
inc
jnp
fsubrl
and
fs
popw
push
xchg
jo
adc
inc
cld
jno
scas
jb
cmp
and
mov
fsubrl
inc
jno
cmp
push
sub
push
or
pop
jecxz
add
lret
stc
adc
mov
lea
xor
mov
xchg
and
jp
cmpsb
add
leave
std
insb
add
sub
pop
mov
add
loopne
fstp
sbb
cmpsl
insl
jge
inc
popa
mov
xchg
imul
incb
pop
lcall
ds
push
insb
jb
lret
stos
mov
popf
cmp
add
mov
rcrl
mov
xor
pop
or
popa
xor
pop
inc
add
mov
sub
add
sahf
mov
push
lahf
jno
into
les
pushf
sbb
bound
sti
dec
or
sti
inc
movl
orl
aam
inc
out
lock
dec
shl
cli
mov
insb
in
sub
shrb
rcll
xor
fildll
out
inc
jg
mov
inc
lock
push
or
fimuls
jb
mov
pop
bnd
push
and
movsb
sub
sub
loope
ljmp
loop
pushw
pop
je
mov
mov
data16
pop
mov
inc
dec
xchg
mov
jns
pop
pop
cli
idivb
dec
repnz
xor
arpl
add
push
cmp
cmp
cmp
cmp
push
xor
jl
mov
adc
popf
mov
lods
je
mov
xchg
and
push
movsb
rol
push
pop
push
jnp
jmp
cmp
cli
test
shrb
lods
xor
out
inc
lret
sbb
mov
sub
into
mov
and
mov
leave
scas
push
test
imul
mov
fmuls
lcall
imul
xor
xchg
adc
and
or
nop
sbb
push
cmc
pop
nop
cmpsb
or
je
push
jbe
xchg
push
in
ret
int
jns
xlat
in
dec
mov
mov
pop
iret
pop
pop
loope
mov
pop
clc
mov
xor
pop
mov
mov
out
sbb
pop
adc
dec
int3
sbb
xlat
pop
inc
test
sti
cmp
xchg
pop
icebp
es
ret
ss
mulb
inc
cmp
popa
sarb
mov
cmp
xor
popf
pop
lods
stos
cli
movsb
int3
add
add
sub
out
loope
ficompl
call
dec
ss
or
jp
leave
ja
pusha
imul
js
lock
adc
mov
and
call
shrl
pop
push
fdivrl
pop
cld
sbb
xchg
dec
test
subl
sti
sub
sub
sub
sub
xchg
jae
arpl
xchg
sbb
adc
filds
ljmp
mov
push
cmp
mov
arpl
and
add
repnz
push
fs
popa
and
aaa
sub
or
xchg
xchg
jecxz
mov
add
mulps
aas
cltd
int3
lock
jbe
jl
pop
out
je
xor
leave
imul
xor
punpcklbw
sbb
les
fnstenv
cmp
dec
mov
out
fistl
insb
outsl
sti
xchg
pop
pop
incl
xchg
and
addb
pop
xlat
push
out
popf
push
xchg
xchg
rep
pop
pop
jbe
jp
jmp
jmp
ljmp
inc
mov
pop
in
push
push
adc
lea
sub
iret
mov
shrb
push
popf
fmuls
push
and
and
xchg
test
icebp
fcoml
jmp
xchg
jge
add
test
idiv
xor
xlat
push
cmp
imul
popf
pop
or
aas
loope
xchg
push
xchg
add
adc
mov
in
jb
or
cs
push
ja
jne
loopne
outsb
pop
push
push
jne
popa
push
mov
sbb
mov
inc
xchg
dec
pop
mov
mov
addr16
push
sbb
or
std
out
out
cmp
lock
xor
add
test
loope
std
inc
std
add
mov
orl
outsb
addl
test
filds
add
rcrl
sub
jmp
push
cli
in
add
cmp
add
pop
mov
sbb
aam
in
mov
add
mov
lret
pop
movsl
iret
sbb
aam
adc
negl
mov
leave
xchg
mov
out
pushf
mov
pop
dec
ss
lret
and
orb
int
test
fiadds
pop
sbb
pop
pop
out
pop
pop
int3
addb
mov
mov
sbb
pop
jae
sub
fistpll
loopne
push
xorl
add
dec
add
xchg
lds
inc
addl
test
push
push
mov
mov
out
in
cwtl
sbb
scas
in
insl
push
cmc
xor
bswap
push
cmp
andl
inc
push
pop
aas
outsb
and
pop
xchg
cmc
mov
mov
xchg
lret
and
xchg
lock
out
push
pop
mov
loope
into
push
stos
or
push
hlt
and
pop
jo
in
outsl
imul
push
dec
mov
mov
cmp
outsl
sbb
aam
out
ljmp
test
push
pop
test
movsb
pop
add
mov
and
testb
insb
mov
cmpsb
test
fldt
pop
cltd
adc
jle
xchg
and
jb
rcl
test
and
push
bound
jo
xchg
jl
push
dec
sub
loope
pop
sbb
or
loope
xor
jge
std
ljmp
add
inc
hlt
cmp
pop
movlps
push
ficompl
and
adc
dec
xchg
scas
repz
call
fucomp
stc
out
cmp
push
or
pop
xor
dec
cmpl
stc
rcll
or
out
mov
pop
push
hlt
fsubrs
adc
adc
adc
mov
add
xchg
bound
ret
sbb
imul
aaa
out
push
adc
aam
aas
xchg
rclb
mov
xor
fistpl
cltd
mov
xchg
cmp
mov
push
inc
jo
mov
cmpsl
add
xchg
loopne
xor
aaa
dec
mov
xor
imul
loop
sbb
movsb
cmpsb
push
fcompl
cwtl
xor
jbe
or
dec
cmp
outsb
dec
jns
jo
hlt
sti
faddl
test
movsb
adc
inc
cmp
cli
adc
push
cs
jno
lret
out
aad
sarl
mov
mov
push
scas
mov
ljmp
jmp
cs
divb
xor
inc
mov
ljmp
xor
sub
fwait
or
jne
xchg
lea
xchg
jmp
inc
scas
mov
cmpsb
das
addr16
or
es
jecxz
sbb
sub
cmp
mov
mul
stos
jbe
jmp
add
jg
aaa
adc
sbb
lcall
imul
or
xchg
movb
sub
pop
pop
movsb
mov
das
xor
dec
add
lahf
inc
mov
outsb
daa
adc
pop
push
dec
mov
int
ss
inc
adcl
popf
data16
fdivrl
cmp
out
adc
ds
insb
jmp
pop
mov
adc
mov
ror
je
addl
scas
mov
iret
cmp
stc
pop
mov
lret
and
stc
or
jbe
inc
in
and
and
mov
mov
xlat
sbb
out
lahf
pop
mov
lret
mov
lds
and
aas
jo
xchg
adc
bound
mov
xchg
dec
push
mov
ds
jge
cmp
daa
in
and
xor
or
fistpl
push
inc
loop
cmp
push
mov
lods
movsb
jns
test
jb
and
dec
jl
aam
and
jp
les
inc
push
mov
mov
push
mov
mov
std
gs
negl
call
call
repz
mov
dec
lcall
xor
sar
divb
sbb
outsb
xor
jo
add
repz
outsb
je
out
mov
rorl
popf
aam
insb
in
xchg
sub
xchg
cmp
iret
iret
je
ds
dec
mov
nop
push
fcoms
push
lods
ss
scas
sub
aam
mov
push
clc
insl
inc
loop
lds
xor
dec
loop
pushf
jns
push
pop
iret
mulb
push
xchg
mov
test
dec
cmpsb
aam
leave
rclb
cld
add
in
lcall
xlat
mov
jge
in
mov
stc
mov
and
enter
jmp
insb
push
dec
mov
pop
dec
into
cli
std
sbb
xlat
les
xlat
rcr
cs
mov
cmp
stos
scas
xor
mov
cmpsl
push
jl
xor
jne
jecxz
clc
mov
fldt
dec
pop
cmc
and
or
pop
xchg
push
pop
sbb
rolb
in
subl
pop
push
and
sub
adc
test
sbb
xor
pop
dec
adc
xchg
je
sub
inc
xor
addr16
sbb
jl
jp
xchg
test
in
inc
cmp
cmp
pushl
fwait
dec
mov
cmpsl
xlat
dec
jbe
jne
ss
and
nop
mov
daa
jno
stos
mov
insl
out
push
fimuls
aas
or
inc
insb
ja
mov
sbb
pop
jae
aam
mov
cmp
xchg
pop
das
inc
xchg
and
add
push
pop
and
xchg
fsub
addb
xchg
nop
nop
cmp
xchg
jge
jmp
mov
out
pushf
arpl
mov
js
or
hlt
stos
cld
pop
jae
mov
push
das
xchg
hlt
leave
roll
in
out
cli
jne
pop
sub
fs
loopne
dec
nopl
inc
mov
mov
add
cmp
je
into
and
shll
sbb
movsl
or
jnp
fs
mov
lret
jo
xorb
shlb
aaa
add
adcl
movsb
ficomps
fldcw
mov
mov
mov
scas
gs
pop
imul
outsb
mov
mov
out
aam
aas
notl
insb
out
jo
cld
push
mov
ds
cli
push
and
mov
add
and
mov
popf
xchg
jno
sub
loopne
not
enter
mov
ret
notl
shrb
mov
sub
or
shrb
cs
xlat
pop
fs
jge
sub
pop
or
mov
lcall
sub
jne
out
xor
out
push
in
dec
loop
adc
dec
and
sahf
subl
jmp
jnp
mov
iret
xor
popf
push
sbb
jl
scas
mov
movsl
das
inc
lock
insl
iret
fisubrs
filds
sub
mov
cli
fidivl
push
dec
leave
stc
push
lret
adc
faddp
mov
xchg
and
jo
insl
popa
into
mov
fldz
js
xor
add
hlt
movd
mov
sub
into
sbb
or
fs
into
mov
cwtl
mov
pop
ja
stc
mov
incb
push
xor
pop
dec
mov
cmovs
out
repz
xchg
hlt
sub
push
xchg
sahf
adc
mov
inc
push
jle
sbbb
and
imul
sub
sbb
jl
jb
push
fmull
popa
outsb
in
mov
cmp
or
xchg
test
cmpsl
jle
add
jmp
repnz
out
or
xor
popa
add
test
int
negb
xchg
cmp
fdivrs
dec
dec
into
jns
in
rorb
insl
les
xchg
leave
sbb
jmp
daa
push
xchg
push
ret
icebp
ljmp
clc
push
sbb
jae
pop
loopne
call
lea
pop
dec
movsl
jne
pop
push
out
imul
orb
dec
ret
fwait
xchg
jle
mov
hlt
aas
out
fdiv
cmpsb
mov
xor
lcall
mov
adc
ss
nop
adc
mov
dec
ljmp
pop
nop
push
xor
or
decl
adc
int
jge
jge
popa
mov
pop
lret
or
dec
arpl
stc
fnsave
cmp
das
jl
xorb
pop
xor
aas
lcall
rcrb
out
dec
pusha
mov
pop
xor
or
or
cld
rcl
sub
aaa
in
fdivrs
or
clc
mov
stc
out
test
leave
out
mov
cmp
mov
imulb
lds
and
fnstcw
int
or
test
cmpl
mov
xchg
sti
ret
or
push
mov
dec
cmc
filds
cmp
repz
popa
aam
fsubrp
pop
mov
fwait
jbe
rcl
xchg
sbb
add
and
frstor
jmp
test
jl
icebp
popa
push
push
loope
jne
popa
daa
jne
add
in
data16
jg
sub
pop
cmp
dec
push
dec
cmp
or
stc
fcoms
pushf
stos
fcompl
scas
cld
and
aaa
mov
add
xchg
repz
cpuid
mov
or
into
nop
cmpb
in
jne
ljmp
std
arpl
in
xchg
pop
dec
inc
imul
les
call
mov
lret
fstp
into
test
jb
mov
rcll
insl
loope
mov
imul
cli
mov
xchg
jmp
add
loopne
fwait
mov
mov
lods
fcmovnb
push
pop
jo
fwait
or
pop
in
cmpsb
sbb
aas
rclb
andl
cmp
inc
cmpsl
mov
and
ret
mov
nop
stc
fmuls
xor
test
movsb
inc
or
cmpsl
insl
gs
jae
and
mov
xchg
push
sub
pop
std
mov
ja
lods
movsl
dec
popf
lea
hlt
cmpsb
or
xor
mov
adc
dec
push
jbe
jl
pusha
rcll
pop
pop
xor
inc
int3
and
sub
mov
xorb
push
push
sbb
cmp
popa
in
les
imul
js
sub
xor
mov
push
push
mov
pop
hlt
cli
lock
and
sbb
dec
sub
push
dec
and
pop
nop
cmp
or
sti
addr16
pusha
mov
xchg
mov
dec
pop
hlt
mov
leave
aaa
pop
dec
pop
aas
mov
cmp
pop
ljmp
hlt
roll
aaa
test
fildll
lods
push
loop
mov
out
push
push
pusha
fidivrs
jb
mov
mov
repz
sbb
pop
sub
mov
dec
inc
es
xor
in
shlb
mov
shll
adc
pop
sub
imul
inc
mov
xchg
mov
insb
jl
mov
dec
sti
jo
leave
add
adc
int
insl
add
mov
xchg
mov
std
jns
inc
dec
outsb
imulb
mov
fsts
aam
pop
mov
xor
pop
dec
dec
fadds
xchg
mov
sar
enter
sub
or
pop
sub
jb
push
shlb
int
xchg
xor
mov
rorb
daa
or
xor
mov
or
testb
xchg
pushf
outsb
or
mov
sub
cwtl
in
imul
in
xchg
shrb
fldl
inc
add
mov
stos
outsl
jno
and
loop
mov
inc
inc
aam
xchg
clc
loope
inc
jb
lea
int3
push
imul
cmp
add
rorb
arpl
add
and
fnstcw
fiadds
ja
cmp
test
cs
or
repnz
ret
addr16
mov
add
adc
inc
and
or
mov
cmp
ss
ss
sahf
mov
std
adc
adc
jmp
adc
dec
mov
arpl
push
dec
stos
test
push
adcl
fidivl
xchg
add
lods
test
pop
xchg
inc
std
loope
fsub
jge
lahf
pop
stc
dec
xchg
call
add
xchg
jmp
gs
stos
lods
imul
js
mov
lds
inc
push
inc
icebp
mov
sbb
or
aaa
mov
xorl
pop
push
lock
in
shrl
popa
xchg
loopne
jp
das
xor
or
das
jns
xlat
fldt
push
jmp
inc
dec
adc
or
dec
pop
push
cmp
sub
pop
mov
in
pop
mov
repz
push
ret
or
inc
cltd
jns
mov
out
loope
pop
rorl
sbb
push
jge
jns
dec
test
std
jns
xchg
idivb
mov
clc
or
xchg
sbb
mov
lahf
sub
mov
mov
push
ret
fadd
adc
in
insb
clc
pop
ja
jle
or
adc
mov
nop
xchg
and
sbb
orl
cld
xlat
push
pusha
insb
cwtl
xchg
mov
sbb
fmuls
xchg
jo
clc
inc
iret
push
iret
rorb
addr16
out
mov
pop
bound
pop
into
mov
xchg
leave
lods
lds
stos
xchg
pop
jb
pop
mov
dec
hlt
mov
fbstp
call
divl
fnsave
xor
and
xor
inc
cltd
call
push
pusha
out
mov
mov
in
cmp
sub
ret
shlb
test
jb
cwtl
dec
push
in
add
popl
and
xchg
out
pop
ljmp
lods
in
push
popf
cmp
mov
daa
mov
mov
pop
sub
jg
mov
xlat
pop
outsb
cwtl
push
or
or
lret
ljmp
vmovmskpd
lods
scas
mov
adc
lods
fmull
lcall
insl
decb
nop
xchg
mov
fisttpl
cmpl
enter
scas
add
xorl
jp
cmovp
sbb
push
pop
pop
dec
fldt
adc
mov
adc
push
pop
cwtl
mov
inc
inc
xchg
fucomp
add
into
dec
popa
cld
testl
mov
cs
ljmp
jecxz
jp
mov
dec
int3
aad
loop
test
inc
and
divps
xchg
xchg
je
ljmp
bound
adc
leave
loop
sbb
mov
and
aaa
jp
ret
jecxz
loopne
sub
sahf
lahf
lock
jne
mov
sbb
xchg
xchg
sub
jnp
in
mov
jl
jnp
pop
sub
hlt
sbb
xchg
dec
call
mov
outsb
mov
cmpsl
adc
sub
dec
fs
pop
jo
fdivrp
dec
ja
xchg
arpl
ss
sub
mov
add
sti
lret
fisttps
mov
loop
inc
ja
add
je
in
mov
pop
inc
jo
aad
xor
in
ss
sar
sub
sub
pop
mov
cmpsb
add
add
xchg
mov
int3
aaa
mov
jmp
call
jno
cmpsl
out
sbb
or
mov
lcallw
out
mov
ds
mov
iret
popa
out
sti
idivl
pop
dec
enter
xchg
or
aam
loop
ss
int
out
mov
lcall
leave
mov
lods
cmp
nop
xchg
cmc
dec
into
test
cmp
in
aad
dec
push
cmp
mov
add
mov
repnz
mov
pop
jne
and
mov
subb
dec
push
add
mov
cmp
jno
into
cmpsl
stos
or
mov
fisttps
inc
dec
adc
fdivr
mov
mov
aas
sbb
sub
aaa
outsl
inc
call
inc
in
cmp
adc
shll
fwait
inc
aaa
and
testb
mov
or
popf
loope
or
rcrl
pop
push
leave
sub
pop
inc
test
xchg
mov
test
push
adc
and
pop
mov
pusha
mov
cmp
cmp
add
or
inc
adc
daa
lods
xor
cld
pop
push
mov
push
fadd
andb
lsl
adc
and
sbb
or
nop
adc
loope
pop
sbb
add
and
adc
push
cltd
cs
enter
rorl
dec
insb
stc
sahf
dec
pop
std
pusha
xor
mov
movsl
cmp
stos
add
sbb
pop
cmpsl
cltd
xor
dec
cmp
ret
in
nop
test
test
lods
push
lea
addr16
lahf
mov
mov
mov
les
data16
cmpsb
inc
dec
dec
in
sub
cli
xchg
and
int
add
movsl
jo
sbbb
out
scas
das
loop
mov
shrl
std
jecxz
adc
out
dec
or
dec
xbegin
mov
push
push
or
mov
mov
inc
call
ss
pusha
push
sub
inc
dec
das
leave
mov
push
data16
xchg
dec
sbb
mov
mov
cmp
outsb
repz
ljmp
lods
aam
push
lods
mov
fs
popf
ds
popa
mov
cmpsl
aas
popa
or
mov
cmp
sub
mov
cmp
mov
outsb
inc
dec
and
aas
sub
add
jnp
push
imul
push
push
inc
pop
outsl
xchg
fstpl
pop
in
into
adc
push
mov
pop
sbb
imul
loop
cmpsl
mov
push
mov
xchg
cmp
ja
cmpsl
stos
push
xchg
int3
pushf
xchg
lahf
lods
adc
scas
sti
sarl
mov
je
and
jmp
repz
xorb
fsubs
ficoms
mov
loopne
xchg
mov
cmp
loop
cltd
xchg
hlt
sbb
push
mov
and
dec
mov
bound
dec
cli
pop
out
mov
and
mov
stc
fucomp
mov
in
sbb
jle
scas
shlb
mov
int3
mov
movsb
add
xchg
les
das
mov
mov
inc
sub
shlb
jp
mov
pusha
jecxz
xor
push
jne
fcmovu
cmp
lret
mull
jmp
cld
outsb
xor
fistl
push
test
mov
adc
sub
lds
sub
std
mov
pushf
cmp
insb
in
cmp
imul
inc
pusha
xchg
loope
andl
imul
cld
push
dec
neg
push
jnp
fdivrl
mov
push
lret
add
or
inc
mov
and
cs
js
and
xchg
mov
inc
add
sbb
mov
mov
mov
add
arpl
daa
cmp
lods
sub
add
in
hlt
loopne
rorb
dec
es
pop
faddp
lcall
ljmp
cmc
imul
cmpsl
xchg
xchg
and
jae
loope
movsb
call
inc
clc
or
jns
jg
inc
add
adc
dec
imulb
lock
pop
lds
push
push
fwait
push
sub
iret
sar
add
xor
dec
js
mov
fistpll
mov
lret
cmp
xchg
push
cmp
pusha
cld
jo
add
jmp
icebp
and
inc
cwtl
dec
jmp
mov
adc
lods
enter
adc
popl
jo
movsb
push
cmpb
insl
mulb
ds
mov
gs
imul
clc
push
jp
xor
push
lea
cmc
lock
fists
mov
dec
inc
cmp
insl
repnz
push
or
cmp
or
outsb
sub
mov
push
push
push
and
dec
repnz
xor
mov
ss
adc
or
enter
jae
cmp
push
xor
push
inc
les
jl
test
xorl
cmp
dec
inc
inc
pop
and
pop
mov
or
negl
xchg
xchg
jo
or
or
pop
inc
inc
repnz
nop
loop
aam
sahf
test
std
lahf
scas
adc
jne
fisttpl
dec
stos
sub
movl
clc
aaa
ficompl
sub
push
int
popf
cmp
in
sub
lods
add
aas
hlt
in
cli
les
jle
test
adc
loopne
decl
sbb
mov
es
mov
cmpsb
pop
cmp
pop
test
xlat
sbb
loop
mov
ret
and
sub
dec
dec
xchg
xor
mov
push
out
lea
push
inc
cld
js
addr16
test
rol
push
fnsave
insb
pusha
mov
imul
lock
adc
bound
push
dec
iret
in
or
mov
lcall
inc
cmp
jl
pushf
mov
cli
ljmp
jb
mov
inc
mov
lds
mov
or
orl
out
fs
pop
loopne
mov
repnz
and
das
xchg
lock
push
addr16
mov
out
ljmp
inc
hlt
out
jl
mov
pop
sub
jb
and
sub
addl
push
push
pop
add
inc
or
in
adc
cmp
rcrb
xor
xchg
mov
nop
frstor
jo
adc
ss
repnz
add
repz
stos
out
and
ds
sbb
push
add
xor
adc
lea
inc
out
push
int3
cmp
sbb
stc
adc
cltd
adcb
xchg
outsl
cmp
lret
int3
pop
insl
xor
fucomi
xor
push
sbb
xchg
cmp
sub
xchg
pop
pop
cmp
dec
jg
in
or
rcll
pop
sbb
jne
sbb
adc
mov
notl
cmpsl
test
arpl
xchg
fisttpll
sbb
push
pop
rolb
iret
pop
adc
mov
push
test
test
cltd
jno
fs
sbb
sub
cwtl
push
aaa
ss
mov
cwtl
adc
jbe
pop
test
jge
pushf
aad
or
dec
cmpsl
inc
xchg
or
dec
hlt
cmp
imul
dec
add
push
jns
jns
fcompl
mov
cmp
xorl
sbb
jmp
in
rcll
xchg
and
mov
push
lea
jg
fisubs
popf
xchg
jnp
dec
testb
movsb
sbb
les
lret
pop
sahf
nop
cli
aas
jo
xor
pop
loop
sbb
jmp
rcr
mov
pop
ret
mov
cmp
push
mov
sahf
sub
sub
test
push
cwtl
or
push
mov
ror
test
hlt
or
call
fwait
movsl
lea
mov
jecxz
push
inc
and
leave
adcl
add
or
fmuls
repz
jecxz
and
lret
adc
xor
cmp
stos
test
dec
xor
push
mov
or
jl
loop
mov
mov
push
mov
push
adc
ds
cmc
fs
repnz
or
jecxz
stc
mov
push
jo
dec
lods
notl
mov
cmc
or
pop
push
mov
test
fimull
cs
fcoms
fsubl
shll
daa
add
jnp
push
sub
lods
push
das
out
loope
and
cmp
icebp
jne
add
inc
mov
not
loopne
add
movsb
add
and
fimuls
call
pop
xor
adc
cmp
mov
mov
std
cmp
bound
jne
and
jbe
loop
scas
stos
mov
jl
cwtl
fisttpll
adc
inc
pop
test
insb
stos
arpl
and
aam
imul
cmpsb
add
iret
aaa
frndint
jb
and
leave
pushf
sbb
out
mov
adc
jno
mov
adc
ret
inc
lret
pop
mov
fistpl
rep
xchg
pop
cmp
fiaddl
mov
xor
int
cmp
jns
add
lret
lods
xorl
sbb
jmp
add
jns
mov
cmpsl
mov
jecxz
repnz
inc
ret
dec
lods
nop
sub
lcall
into
push
xchg
pusha
xlat
xor
cwtl
pop
into
movsb
fistl
insl
in
bound
dec
and
xchg
pop
loopne
push
repnz
xchg
sbb
jae
dec
nop
jge
xchg
clc
mov
pop
leave
pop
icebp
mov
pop
out
repz
lret
mov
sbb
pop
test
or
shl
jbe
xchg
dec
xchg
adc
pushl
js
sbb
std
mov
or
push
cmpsb
xor
fld
mov
jnp
mov
fs
lret
pop
fwait
jl
mov
lds
xchg
mov
jmp
jmp
and
jbe
cltd
jno
push
rcrb
rcr
data16
mov
jp
test
addr16
ss
sarl
dec
fnsave
subl
outsl
dec
std
inc
sub
lods
shl
mov
jae
xor
jno
jge
jp
dec
pop
jmp
sbb
fiadds
sbb
cmc
frstor
insb
es
daa
jae
push
mulb
iret
scas
or
in
inc
inc
adc
das
and
and
xor
inc
test
sub
inc
test
jg
mov
add
fisubl
xor
sub
insb
repz
lock
ret
jns
inc
add
push
fadd
in
or
dec
popa
ret
out
insb
pop
inc
repnz
jno
mov
pushf
gs
ljmp
xlat
push
and
addr16
lods
cmp
and
inc
clc
insl
push
leave
pop
fldenv
shr
add
lret
dec
repz
pop
ret
repnz
cli
addr16
je
xor
cwtl
cwtl
in
fnstsw
outsl
xchg
sbb
mov
out
and
outsl
push
xchg
sahf
dec
iret
decb
mov
cmp
test
int
ret
add
aam
pusha
dec
sbb
and
adc
add
ss
mov
push
push
mov
ret
test
mov
in
clc
ja
push
int
and
rcrl
xchg
mov
dec
cli
push
cmpsb
xchg
push
aam
mov
cmc
push
lret
jmp
mov
daa
push
cwtl
fwait
xor
das
sbbb
mov
ret
outsb
into
ja
xor
dec
push
mov
xchg
push
lods
push
int
push
xchg
divl
loope
enter
lea
push
sub
cltd
ljmp
testl
mov
shl
xor
jnp
fwait
std
ss
sub
stc
insb
mov
sti
sub
mov
push
cmpsb
pop
or
jne
and
nop
xor
in
jo
mov
adc
test
movsl
adc
cld
loope
jo
bound
imul
xchg
dec
jnp
and
int
mov
inc
push
push
jno
fstl
test
movsb
fcomps
pusha
or
sbb
or
das
inc
in
shlb
and
cmp
mov
ljmp
jae
xlat
push
dec
int
subb
jbe
int3
jo
or
setle
stc
mov
daa
pop
fmuls
in
scas
mov
cwtl
or
orl
loope
jmp
adc
push
mov
pop
cli
push
and
repz
out
movsl
fistpl
loope
clc
fisubrl
push
jns
das
clc
xor
xor
jne
shll
xchg
call
mov
jmp
lock
jb
dec
nop
cmp
adc
and
pop
add
aam
pop
mov
jge
mov
lret
sahf
mov
xchg
dec
sub
cli
nop
adc
and
cs
xchg
imul
mov
jge
pop
and
cmp
cmc
xchg
jl
adc
mov
arpl
in
xor
sub
imul
sub
lock
fcomps
std
and
adc
ljmp
scas
imul
or
js
std
daa
xor
add
mov
shll
nop
sbb
cmp
test
std
imul
out
repz
or
xchg
lock
out
sub
jbe
aas
mov
xor
sahf
cmp
cmp
test
xchg
and
adc
jo
mov
stc
jmp
std
hlt
ret
sub
lcall
adc
scas
xlat
lahf
lea
jns
cmpsl
fisttps
icebp
or
and
test
test
shrb
cmp
cmovno
nop
adc
in
hlt
push
push
shlb
dec
xlat
cltd
mov
out
push
adc
jns
shrb
or
js
jbe
icebp
in
pop
stos
push
sub
xchg
insb
xor
xor
or
sarl
aad
mov
add
inc
jmp
rep
push
sub
cmp
or
enter
fidivl
cli
movsl
push
mov
jns
add
push
xchg
or
jae
ret
xchg
pop
rorl
mov
sbbl
addr16
jmp
pusha
insb
sarb
jbe
sub
xchg
mov
aas
lret
jmp
icebp
frstor
js
pop
and
mov
inc
cmp
pop
scas
fcomip
mov
and
jmp
and
in
pop
pop
lods
jo
push
das
repnz
es
das
fnstenv
data16
cli
jl
jnp
sub
push
sbb
sub
pop
in
idivb
sbb
stos
xor
outsb
test
cmp
bound
push
lock
shlb
jb
add
and
or
push
jo
mov
xchg
xchg
adc
inc
stos
and
dec
mov
aas
jl
scas
jns
sbb
cwtl
mov
cmc
fistpl
cmp
adc
or
sub
cmp
popf
test
nop
or
cmp
adc
imul
shrl
lret
scas
and
and
lea
sbb
int
test
mov
out
jne
jae
repz
out
sahf
movsl
ja
pop
cld
loop
in
sbb
dec
fidivl
filds
jmp
ss
xchg
cmc
pop
lret
jae
pop
mov
sub
sub
pop
mov
pop
lret
cmp
jne
add
or
mov
xchg
ficoml
cmp
xchg
dec
mov
jecxz
push
fsubs
in
xorb
pop
mov
jmp
sub
sub
lea
mov
sbb
xchg
mov
adc
pop
pusha
jns
mov
sbb
jbe
iret
inc
cmpsl
les
jo
mov
fldcw
enter
outsl
sbb
adc
ja
jle
sbb
dec
add
jle
clc
dec
ret
div
jmp
inc
punpckhdq
pop
lcall
movsb
jbe
into
addl
das
ds
add
scas
xchg
in
pop
xor
mov
adc
mov
cmp
sub
mov
push
pushf
sbb
daa
adc
xchg
imul
aam
ds
inc
jmp
sarl
jnp
adc
pop
dec
pop
out
int
and
jns
pushf
and
mov
loopne
pop
icebp
out
inc
push
mov
popa
lods
jl
inc
xchg
stc
mov
dec
pop
loopne
cmp
inc
or
sarl
lahf
gs
mov
inc
sub
fsubrp
jp
add
idiv
pop
aas
mov
pop
xchg
fstpt
incl
push
shlb
aam
ret
xor
adc
jle
incl
cmp
mov
or
lcall
loope
pop
push
andl
insb
sbb
andl
xchg
dec
fld
hlt
push
mov
insl
xorl
mov
fidivs
push
sub
jmp
push
push
mov
das
testl
leave
sahf
loopne
imul
cmpsl
jg
iret
cwtl
flds
aam
sub
gs
or
sti
push
loope
loope
jmp
shlb
fsubrl
ficomps
cli
or
mov
cmp
mov
sbb
aam
sbb
jmp
das
push
shrl
insl
sbb
add
scas
xor
sti
push
int
sbb
cmp
shl
gs
and
xchg
int
fildll
cmp
and
push
or
jmp
repz
fisubrl
push
sub
cld
pusha
imul
arpl
pop
inc
sarb
dec
cmp
or
dec
cs
call
mov
rcrb
stc
or
jns
ret
push
in
test
fwait
aaa
leave
je
scas
dec
pop
mov
fs
leave
sbb
cmp
mov
mov
jg
pop
loope
ja
mov
cmp
shr
rclb
and
mov
shrb
ja
inc
xor
pop
dec
sbb
jg
aaa
mov
mov
cmp
dec
push
mov
cmpsb
jne
shll
andb
cmp
test
shl
jb
jmp
imul
xchg
dec
stos
out
inc
es
pop
lahf
cmpsl
or
outsl
adc
repnz
jnp
add
sahf
jmp
in
adc
aas
pop
movaps
dec
mov
jno
fisubl
xchg
push
pop
lea
cmp
xchg
dec
jmp
mov
xor
xor
xchg
cmp
cmp
loopne
shr
ljmp
pusha
sbb
jns
imul
mov
mov
leave
mov
enter
and
es
mov
push
stc
add
cmp
pop
push
test
sti
repnz
push
sub
mov
cwtl
out
or
pop
inc
std
fwait
add
xchg
push
jno
rol
insb
xchg
jl
sahf
cwtl
or
and
test
cmp
mov
stc
or
and
xor
xchg
mov
imul
adc
mov
imul
in
leave
pusha
xor
adc
popf
leave
arpl
jbe
rcrl
pusha
stos
enter
fdivs
clc
stos
pop
pop
aad
xchg
jo
xchg
imul
mov
jge
iret
notl
mov
fwait
in
cmpsl
jo
jne
lock
es
inc
in
shr
ljmp
leave
inc
icebp
aas
adc
xor
hlt
mov
xchg
mov
jg
iret
test
loope
stc
mov
inc
mov
jb
test
push
fmuls
xchg
push
pop
jle
dec
sub
cmp
int
test
xor
mov
hlt
std
movsl
jae
mov
adc
adc
aad
jecxz
in
nop
and
and
pop
icebp
xchg
adc
adc
mov
sbb
push
xchg
cmp
mov
xlat
ljmp
cmp
fnstenv
test
and
and
sbb
mov
fists
xchg
sub
mov
xchg
movsb
mov
aaa
lea
adc
repnz
xor
movsl
mov
jns
icebp
rol
or
add
idiv
sbb
xor
cli
into
andb
pop
push
dec
mov
mov
inc
insl
lahf
aas
aad
out
fsubs
mov
in
jno
insl
lea
xchg
inc
and
shr
inc
lods
movsb
cmp
cs
sub
rclb
shlb
lods
test
repz
pop
lods
mov
mov
lahf
mov
and
pusha
dec
pushw
push
mov
push
out
ja
xchg
sbb
repnz
aam
or
pushf
dec
sbb
add
push
and
mov
lock
ret
jl
add
mov
and
push
pop
ss
mov
int3
inc
sbb
mov
lock
into
pusha
repnz
ret
in
dec
sub
mov
pusha
insl
ja
push
mov
mov
mov
cld
add
repnz
stos
xchg
push
jb
pop
push
push
inc
daa
sahf
popf
inc
adc
test
jmp
xorl
stc
sarb
fcmovu
lds
mov
lret
out
sbb
mov
sub
stos
sqrtps
xchg
xchg
xchg
inc
and
sub
push
shll
jne
mov
stos
mov
dec
adc
lea
out
rclb
aas
loop
rclb
out
sbb
dec
mov
jne
mov
stc
mov
xchg
in
mov
jo
inc
mov
push
push
ret
push
push
in
xor
in
pop
pusha
dec
hlt
int
lods
aas
mov
jb
jo
inc
notb
or
sub
mul
inc
les
xor
add
out
loopne
push
int3
push
aad
mov
or
push
stos
cmp
pop
lds
adc
mov
add
adc
loope
std
jp
sbb
aam
movsl
cmpl
paddusw
inc
or
cmc
int3
test
cltd
push
mov
mov
lods
jnp
push
hlt
cmp
jmp
pop
insb
mov
dec
test
dec
or
stc
add
mov
in
sub
lea
daa
pop
pop
mov
lcall
addr16
xchg
call
mov
and
cwtl
cli
lds
dec
mov
movsl
inc
cli
and
stos
sbb
and
add
dec
dec
or
stc
jnp
mov
inc
lods
inc
jle
mov
mov
xor
pop
add
xchg
insl
xchg
stos
mov
push
and
push
enter
mov
mov
imul
negb
pop
inc
sbbb
jecxz
data16
xor
stc
ret
fwait
push
xor
popf
adc
lds
jp
mov
aam
mov
or
lock
leave
jbe
cmp
mov
movsb
pop
fidivl
rorb
lahf
and
dec
xchg
sti
adcb
call
enter
add
insl
mov
inc
test
jmp
and
loopne
or
lods
mov
sti
mov
das
rclb
loopne
inc
in
and
jbe
sbb
in
sti
xor
lahf
inc
pop
sub
cld
cli
test
or
andl
mov
sub
cmp
in
and
jbe
stc
add
xlat
arpl
mov
mov
fldt
sbb
shrb
nop
xchg
lea
out
ljmp
push
add
fcomp
lea
or
rol
in
gs
fidivrl
and
xor
andl
outsl
jo
push
mov
ljmp
jne
pop
sbb
ljmp
out
test
mov
xchg
pop
xchg
inc
xchg
push
stc
push
xchg
inc
push
or
in
push
inc
pushf
rolb
cwtl
mov
jnp
das
dec
cmpsl
jmp
jmp
rcll
xor
outsb
inc
in
sub
pop
mov
call
xchg
cwtl
cmp
lcall
lds
jg
dec
rcr
outsb
pop
push
jle
mov
cli
lock
mov
sub
das
jno
outsl
stc
sarb
inc
cmp
or
add
mov
in
inc
jno
addb
addr16
lret
fdiv
add
and
fdivrp
pushf
sbb
and
pop
cmp
jp
in
or
or
mov
imul
in
or
jne
fimuls
out
inc
inc
mov
and
lahf
xchg
fwait
dec
in
add
clc
pop
mov
test
mov
or
add
inc
stc
push
das
sub
cmp
inc
cld
pop
inc
sub
add
mov
and
arpl
test
mov
mov
push
movsl
iret
loope
jb
xchg
push
jnp
cltd
add
push
das
call
lcall
pop
ja
sub
in
mov
jae
decb
mov
cmpsb
and
mov
dec
inc
lds
jns
push
jmp
mov
mov
out
xchg
dec
out
jmp
test
mov
push
loop
jle
scas
fcomp
fstp
pop
mov
clc
sbb
aam
add
add
sbb
add
test
in
fistl
cmp
or
push
pextrw
cltd
lret
xchg
iret
ret
mov
fadd
loopne,pt
sbb
or
sub
and
pop
stc
or
jno
flds
movsb
sub
jle
andb
dec
lods
and
cmp
xor
cld
iret
dec
push
mov
sarl
and
pop
stos
xchg
fstpt
push
jp
inc
ds
dec
jns
xchg
in
pop
stos
jge
jg
push
and
sti
cmp
or
iret
mov
dec
push
mov
rclb
icebp
repz
and
inc
sahf
cmp
stc
std
dec
mov
testl
push
cld
push
xchg
jle
add
add
mov
stos
jo
js
cmp
lret
cmp
hlt
aaa
fldt
cmc
aad
mov
inc
enter
xlat
dec
bswap
sbb
frstor
or
pop
les
loopne
xlat
adc
imul
scas
mov
sub
inc
cmp
jge
mov
cli
jbe
loope
sti
and
ljmp
mov
adc
or
dec
test
mov
jb
xor
lods
sbb
jg,pt
inc
cld
or
outsl
test
mov
sbb
and
out
dec
or
sahf
rcrb
mov
shll
loope
jg
jmp
pop
sub
mov
sbb
in
outsb
push
and
fcmovne
cmc
divl
push
jne
jbe
pop
fcmovne
cld
push
clc
mov
das
mov
xchg
jb
in
sahf
mov
mov
jg
cwtl
out
out
push
je
cmp
dec
fimull
loope
jl
test
mov
push
and
sbb
sbb
adc
lods
movsb
pop
sbbl
andb
push
pusha
sub
lods
insb
in
mov
push
push
xorb
inc
fistpll
lret
sbb
mov
cmp
xor
scas
stos
xchg
out
fldl
fadd
shll
adc
jg
in
push
mov
jle
loop
and
lcall
das
or
push
inc
adc
lea
xor
js
mov
aas
int3
jp
pop
shlb
pushf
test
jno
int3
inc
mov
jmp
sbb
cwtl
xlat
movsb
imul
gs
ja
sahf
rclb
and
popa
and
and
adc
jmp
icebp
push
cmpsb
fists
inc
cmp
stos
cmp
idivl
arpl
icebp
movsl
cmp
pop
xchg
cmp
mov
mov
std
add
in
add
pop
xlat
push
sbb
jl
loop
in
repz
out
cltd
imul
jmp
test
lret
cmpsb
int
push
stc
insb
ljmp
or
cmpsb
push
sub
imul
xlat
inc
mov
cmp
cwtl
inc
insl
stos
cmp
mov
loopne
ficoms
lods
cltd
shll
xchg
rclb
push
ret
pop
dec
sti
loop
cmp
enter
out
push
dec
shlb
adc
cmpsb
movsl
cmp
add
or
insl
test
mov
cli
pop
insb
cmpsb
in
xlat
mov
inc
nop
out
lret
push
imul
jecxz
sarl
call
or
pop
mov
rcr
orb
ret
mov
mov
jg
inc
push
cwtl
mov
dec
xchg
repnz
pushf
or
pop
adc
inc
gs
iret
ret
sub
xor
cmpsb
fwait
mov
imul
aaa
xchg
add
rcl
add
shll
daa
leave
adc
cmp
popa
addb
out
jns
movsl
lds
ds
sub
lahf
out
push
jo
arpl
shl
sub
jg
cmp
mov
ror
jnp
mov
scas
nop
jmp
adc
in
mov
mov
or
or
or
sbb
mov
mov
repnz
adc
js
jg
jnp
push
popa
pop
pop
dec
and
ljmp
sti
xchg
pop
mov
scas
and
cs
sub
cmp
cli
iret
push
jg
cltd
pcmpgtb
cmp
loopne
int
mull
imul
call
wbinvd
pop
in
sub
xor
sbb
xorb
push
shr
mov
ljmp
xor
push
leave
mov
xchg
mov
mov
or
jl
cwtl
mov
cltd
mov
mov
pop
out
jb
mov
pop
push
loopne
insb
push
mov
xchg
adc
jbe
ljmp
sub
nop
jmp
cmp
lods
add
fs
dec
fildll
adc
movsb
and
imul
stos
mov
push
pop
sbb
mov
push
add
icebp
dec
jle
xchg
ja
lret
adc
push
addr16
cmp
insl
pop
std
shlb
dec
or
fsubs
mov
jbe
inc
aaa
inc
lods
inc
out
jno
xor
inc
sbb
fisttpl
mov
dec
jp
xchg
loopne
inc
jo
push
push
testl
mov
dec
ljmp
jo
add
jno
sub
les
mov
and
inc
pop
test
lods
jmp
xor
inc
push
adc
pusha
mov
pop
ss
fcomip
test
xor
cwtl
repz
into
lahf
xor
add
sbb
push
jg
daa
pop
fisttps
and
inc
sub
mov
xchg
jnp
jecxz
xchg
jb
jae
ret
sub
adc
ficoml
loope
or
arpl
mov
jle
ss
aam
mov
sub
sub
xchg
jae
push
imul
and
cwtl
mov
pusha
add
ss
imul
in
fiaddl
incl
enter
adc
in
lret
cmpsl
cmp
popa
inc
dec
or
call
sbb
fisttpll
ret
int3
aam
lahf
test
xor
nop
stos
sbb
push
nop
xor
cld
enter
pop
test
loopne
push
ljmp
mov
out
xor
xor
ret
dec
mov
mov
popa
adc
sahf
pop
cmpsl
pop
out
pop
popf
cltd
mov
sub
push
mov
jb
incl
shlb
les
sub
mov
dec
pushf
mov
pushf
out
xor
sub
adc
adc
xchg
orl
and
aad
mov
shlb
and
and
scas
mov
xor
ljmp
jp
mov
jo
shll
mov
ljmp
push
das
clc
ret
cli
das
mov
stos
addr16
pop
mov
pop
rcll
xorb
xor
lods
bound
roll
icebp
out
shrb
mov
push
sub
pushf
in
scas
fxch
outsl
shl
loop
mov
dec
pop
push
and
int
xor
scas
and
or
sti
xchg
div
mov
dec
cmp
repz
fwait
mov
mov
shlb
jecxz
push
sbb
mov
fbld
ficomps
lock
push
cmp
movsb
dec
pop
push
cmp
scas
jl
iret
ds
in
cwtl
xchg
dec
shll
sbb
stos
jl
in
ror
xchg
mov
add
movsb
sub
test
sahf
jb
sub
adcb
xor
push
and
repnz
dec
mov
pusha
hlt
adc
enter
mov
cmp
stos
mov
cmpsl
cli
mov
dec
push
test
push
into
jo
sbb
mov
mov
adc
jae
outsl
movsb
stc
test
ljmp
dec
fbld
mov
xchg
mov
aad
test
mov
and
hlt
push
cmp
jb
iret
dec
cmp
stos
lcall
test
jno
imulb
mov
inc
push
fwait
jmp
xor
scas
xchg
pusha
jo
bound
sahf
jns
mov
xchg
ss
mov
pop
dec
mov
mov
inc
pusha
cs
inc
loopne
dec
scas
das
repz
aad
xchg
fcoms
push
push
xchg
xchg
mov
pop
push
push
push
pop
xor
test
sub
inc
cmp
subl
inc
xchg
fisttpl
outsb
std
xchg
dec
push
test
adc
loop
cmp
mov
adc
adc
mov
ss
add
jecxz
pop
fdivp
js
lea
cmp
or
and
iret
ljmp
adc
leave
or
outsl
mov
jp
ss
jmp
rcll
scas
aaa
jnp
bound
dec
lock
movsb
adc
or
mov
das
shlb
cwtl
pop
and
pop
or
call
cli
scas
or
inc
insl
adc
dec
negb
rorl
sub
dec
cwtl
orb
popf
pop
push
outsb
popa
imul
lret
mov
or
stc
adc
cmpsl
stc
pop
push
cmp
movsl
mov
xor
popf
inc
lock
sahf
cmc
adc
sbb
shrb
inc
sub
filds
ja
cmp
xchg
dec
andl
add
mov
mov
fmuls
sbb
popf
mov
inc
inc
aad
cwtl
ret
push
sub
dec
jmp
lret
mov
test
dec
sti
je
xor
jbe
ficompl
jae
mov
aam
aaa
mov
or
mov
in
jno
ret
mov
dec
sub
pop
sub
gs
inc
and
or
pop
and
stc
dec
loope
decl
es
push
lea
pop
push
loop
in
pop
sbb
adc
jb
cld
mov
fwait
lods
adc
sbb
xchg
pop
jae
dec
lcall
and
int
lahf
xor
mov
clc
ret
xor
shl
int3
je
xchg
pop
or
fldcw
popf
pop
dec
lahf
aad
cmc
xor
mov
imul
repnz
or
shl
jo
jp
movsb
inc
lock
cmp
dec
inc
pop
std
inc
aaa
and
ds
cmp
int
mov
pop
sbb
lcall
pcmpeqb
or
inc
mov
dec
xor
inc
xchg
int
bnd
cmp
jecxz
gs
push
xlat
aad
adc
pop
pusha
add
adc
or
push
pop
sarl
dec
jmp
pop
andl
addr16
mov
mov
xchg
push
and
in
std
mov
lahf
movsb
pop
sbb
mov
mov
xchg
fwait
mov
cmp
add
ljmp
push
adc
xchg
xor
aam
dec
lahf
xchg
mov
sub
inc
js
dec
fiaddl
add
mov
jg
pop
and
xlat
jnp
and
mov
test
xchg
push
into
insb
pushf
int
xor
test
mov
and
sbb
sti
insb
push
fidivrl
aad
jg
vunpcklps
or
popa
scas
in
mov
or
adc
sbb
aaa
xchg
jg
push
imul
cmp
ret
popa
out
inc
scas
dec
cmp
pusha
popf
dec
mov
fs
push
daa
xor
scas
enter
pop
mov
push
cmp
or
push
sbb
aaa
jmp
xor
mov
iret
cmp
test
hlt
lret
arpl
mov
pop
outsb
ret
lcall
imul
jo
sti
inc
push
jnp
or
aaa
mov
jns
cmp
lahf
add
int
adc
jae
adc
mov
test
inc
rorb
push
mov
scas
mov
jmp
adc
iret
or
je
inc
mov
ds
push
or
call
adc
call
push
pop
outsb
mov
and
in
or
dec
les
loop
push
adc
xor
mov
xorl
repz
loope
pop
pusha
mov
add
pop
in
push
cmpsl
push
xchg
cmp
xor
das
orl
pop
dec
cli
or
lret
cli
mov
cmp
pop
inc
jns
adc
jbe
mov
loopne
in
dec
test
out
aaa
fyl2xp1
cmc
dec
cs
test
xor
mov
inc
mov
adc
lea
loopne
and
mov
jns
sub
test
clc
je
fdivr
cmp
xchg
imul
push
orb
lock
cmp
int3
mov
outsb
pop
fisubrl
sub
or
fxch
pop
jns
cmpsb
cmp
arpl
lods
test
pop
jl
jne
ficompl
mov
mov
outsl
adc
dec
dec
xchg
repnz
dec
sub
jo
in
out
dec
push
mov
lcall
mov
loop
in
hlt
jl
push
out
xchg
in
shl
xlat
gs
mov
jne
and
aad
lcall
js
mov
jmp
dec
hlt
or
inc
shll
in
dec
xor
es
enter
push
push
cmp
cmp
mov
lods
or
xchg
imul
jmp
stos
dec
push
inc
sahf
add
sub
les
jno
jb
js
push
push
push
insl
neg
push
push
add
mov
xor
xchg
enter
cmp
test
inc
dec
mov
dec
hlt
les
fwait
xor
xchg
xchg
push
add
es
fisubrl
pop
out
daa
loop
push
sub
lret
popf
cltd
mov
adc
fcoms
or
mov
sub
bound
xor
xchg
mov
aam
jmp
fs
or
nop
or
cmp
ffree
not
subb
lahf
pop
aad
pop
loopne
sub
fbstp
push
xchg
and
jl
iret
jne
inc
push
cli
push
ljmp
push
sbb
mov
sbb
dec
aaa
scas
mov
jl
aaa
add
and
and
imul
push
pop
and
nop
add
das
movsb
mov
sub
movsb
or
push
mov
filds
std
inc
fisubl
insb
fcoml
aas
cli
fs
dec
outsl
inc
add
andb
mov
push
xchg
stos
fnsave
insb
fsubl
enter
lods
push
push
mov
das
shll
pop
xor
push
shlb
push
inc
pop
sub
inc
xchg
push
sbb
shll
mov
inc
jb
sub
xlat
repz
adc
pop
push
sub
addr16
push
fucomi
dec
int
push
mov
bound
repz
clc
popl
in
pop
push
ljmp
xor
inc
je
xor
das
ficomps
repnz
sbb
sbb
movsb
out
and
std
xchg
insl
push
add
test
cmp
push
xchg
daa
and
sbb
pushf
inc
jecxz
dec
push
mov
ret
mov
push
popa
jl
push
lods
mov
pop
dec
lret
jl
pop
ds
fildl
pop
jge
je
mov
data16
or
mov
cmc
jno
scas
in
call
subb
outsb
or
jae
jmp
pop
push
mov
cmpsl
push
fstps
mov
pop
mov
popa
andl
btc
jb
test
lods
gs
push
dec
mov
xor
inc
jmp
stos
mov
dec
shrl
int
lds
into
and
or
std
in
add
add
fldt
fnclex
repnz
mov
lret
nop
ret
aad
aam
clc
movl
mov
imul
aas
jl
pop
aaa
or
mov
xor
cli
jl
addb
das
lret
mov
out
ret
push
jge
les
sbb
add
sub
je
fistps
or
jmp
inc
movsl
jecxz
imul
xchg
sub
dec
cmp
lahf
jp
popf
xor
inc
dec
in
push
insb
test
popa
add
lods
or
add
pusha
ja
xchg
nop
or
or
pop
jle
sahf
add
add
sbb
lods
pop
test
dec
sub
cmpsl
repz
push
loope
das
pop
cmpsb
xchg
mov
in
data16
jnp
fwait
or
pusha
push
fldt
and
imul
test
popl
out
scas
outsl
mov
xlat
or
or
loopne
int
pop
xchg
jne
insb
jge
pop
dec
push
das
popf
sbb
cltd
outsb
pop
popf
add
xor
ret
xor
cli
aas
jo
lret
lea
sbb
inc
push
mov
fbstp
out
mov
ds
popa
cmp
fistpl
les
sub
andnps
out
push
call
and
test
and
sub
test
nop
aam
pop
dec
and
pop
fdivrs
xor
fwait
xor
mov
les
inc
int3
outsb
pusha
and
movsl
mov
cmp
insl
in
std
mov
das
pop
jnp
cmc
ja
mov
adc
jae
enter
xchg
xchg
and
aad
insl
mov
or
adc
pop
adc
add
stc
inc
fisubs
push
sub
lcall
cld
pushf
imul
hlt
clc
pop
adc
jnp
outsl
jl
int
aam
sarb
xor
pop
jbe
scas
inc
lret
push
repz
pop
sub
jne
push
test
in
mov
addb
cli
jbe
pop
jl
in
cli
out
hlt
sbbb
sar
mov
loopne
dec
mov
mov
pushf
dec
insb
cmp
out
sub
je
loop
lret
andb
lahf
sub
cli
iret
xchg
cld
mov
inc
pop
adc
fwait
dec
add
or
aaa
adc
push
mov
xor
dec
or
aam
or
pop
mov
mov
out
das
out
jnp
pop
sbb
and
adc
lea
pop
xchg
mov
add
fstpl
adc
cld
lret
inc
ds
icebp
adc
mov
insb
cmc
enter
jae
nop
xchg
sahf
dec
int
dec
mov
dec
jnp
sbb
push
test
bound
or
adcl
mov
movsl
insl
jne
out
fisttps
xor
ror
mov
jl
stos
orl
sub
cltd
rorl
mov
aas
gs
test
ds
push
inc
pop
mov
pop
ljmp
cmpsb
mov
mov
sbb
call
shll
addr16
scas
in
dec
les
pop
jae
sub
stos
pop
test
fdivr
push
bound
xchg
push
jne
aaa
pop
sub
adcl
jmp
idivb
loope
adc
mov
xchg
stos
pusha
or
repnz
jb
xor
xor
loopne
lock
data16
fiadds
out
into
out
jae
out
xchg
push
push
je
call
mov
push
in
pop
rcrb
dec
xor
xor
jl
mov
ret
lret
sqrtps
and
mov
data16
inc
mov
mov
push
std
cmp
sahf
inc
scas
fstpl
popf
xor
or
jae
cmc
dec
aam
popl
fcompl
jl
jle
loope
fwait
popf
loop
test
inc
call
pop
or
and
xor
insl
mov
pop
jo
push
into
mov
jae
insl
out
mov
or
sbb
pusha
mov
lods
mov
mov
push
cmp
lret
das
sub
push
into
dec
repz
mov
sbb
ret
addl
mov
mov
das
or
xchg
sbb
lret
push
out
add
test
out
imul
jne
mov
sbb
stos
mov
or
outsl
inc
pop
es
leave
sbb
cli
xchg
push
das
aam
rcrb
push
dec
std
ss
push
pop
je
dec
sub
scas
or
test
push
sub
jmp
fsub
sbb
arpl
lods
cmc
add
shrb
rcll
fcos
test
sub
pop
jno
push
lea
xor
int
cwtl
lea
push
jmp
inc
xchg
xchg
pop
mov
push
dec
fmuls
mov
and
mov
out
sub
int
cmp
cs
push
fistpll
js
mov
fprem
aas
out
mov
adc
jmp
jmp
jns
adc
mov
lock
mov
inc
add
cmp
mov
inc
mov
testl
mov
stc
shrl
lret
cwtl
dec
jp
cmc
jne
mov
int
call
cli
xor
loope
rorl
pop
add
and
fstl
pop
mov
lcall
imul
fildl
sub
sahf
and
out
fldenv
inc
call
cli
mov
stos
enter
repnz
cmpsb
xchg
bound
les
das
lock
sub
int3
rcll
cli
mov
fdivrl
pop
and
inc
fs
add
daa
adc
fidivl
mov
inc
push
lock
sbb
push
aas
nop
xlat
mov
inc
popa
mov
jne
push
imul
push
in
pop
xchg
test
mov
jl
inc
pop
and
dec
jle
data16
inc
ja
xchg
or
jbe
orb
test
cmpsl
adc
ja
lcall
mov
xchg
cmpsb
cltd
jnp
dec
call
pop
mov
inc
and
mov
push
imul
sbb
pop
dec
adc
iret
in
test
in
ret
add
push
imul
or
shrb
out
mov
mov
sub
cli
mov
jo
cs
jne
cmp
mov
stos
ss
xchg
nop
arpl
ds
loope
xchg
push
out
xchg
pop
mov
jecxz
ret
outsb
add
repz
loopne
je
lods
scas
addb
negb
inc
cmp
inc
mov
xchg
out
lret
xchg
cmc
pop
add
aaa
mov
cld
movb
ror
repz
outsb
movsl
push
mov
jbe
ja
pop
sub
pop
fcoml
test
add
cmp
sti
cltd
or
lea
inc
shlb
fsubrs
xor
test
cmp
in
mov
testb
fnstcw
pushf
iret
movsb
mov
test
mulb
sbbl
add
or
je
and
pop
jmp
cmc
cli
imul
push
push
shrb
repnz
enter
inc
jne
dec
mov
ja
xor
nop
gs
rcr
adc
lahf
std
cmp
pop
or
push
addr16
mov
insl
test
and
jg
cmp
sbb
add
push
stos
movsl
sbb
or
xchg
lahf
repz
mov
pop
adc
iret
inc
push
out
rolb
pusha
jge
lret
lods
loope
mov
adc
iret
adc
add
es
in
mov
into
cli
sti
mov
dec
mov
scas
sub
pop
sub
mov
xchg
mov
addr16
mov
std
es
cli
fisubl
pop
pop
leave
fcoms
or
cmp
popf
dec
lcall
insl
insb
inc
jmp
mov
repnz
mov
push
jecxz
pop
xor
sub
xchg
add
rcll
lea
ret
popf
cmp
sarb
adc
fisubl
jns
mov
insb
mov
mov
push
jmp
push
fistpll
jno
cmp
sub
sbb
cmp
sbb
jbe
mov
lcall
les
call
clc
xor
lock
adc
dec
rorb
aaa
cmp
push
aad
pop
or
pop
mov
jl
sub
xchg
xor
bound
push
iret
cld
sub
pop
shr
movq
in
clc
bound
push
out
and
in
loop
mov
inc
pop
inc
xlat
fwait
cmp
jecxz
rcrb
sbb
mov
fadd
insl
into
int
jmp
mov
repz
xchg
mov
jae
sub
adc
pop
lahf
sub
mov
scas
add
xor
inc
int
fistl
in
cld
mov
mov
mov
js
jne
sub
xchg
and
je
sub
jo
xchg
das
pop
std
or
mov
andl
mov
nop
xchg
xor
cmp
cli
jnp
or
nop
cmp
push
cmp
in
addl
jl
test
and
push
out
sub
incb
cwtl
in
mov
imul
ljmp
jl
aas
pop
shl
add
and
jb
rorb
cltd
fsubrl
xor
aam
insb
ja
add
cmp
jmp
dec
fucomi
call
in
out
inc
ret
icebp
lcall
mov
mov
mov
lcall
jge
sub
jnp
cli
outsl
mov
cmp
hlt
int3
push
fimull
sahf
fdivrl
and
shrb
inc
pop
sbb
arpl
dec
shrd
adc
dec
jns
orl
cmpb
mov
addr16
es
leave
pop
xor
popf
jecxz
ret
or
lcall
into
pushf
out
sub
cmp
push
dec
fistpl
fstps
int
sbb
jne
fdivp
or
bound
and
mov
popf
and
into
pop
push
rorb
ja
add
push
test
pop
scas
enter
adc
jl
mov
adc
push
mov
cmp
addr16
xor
dec
inc
push
aam
push
ja
ffree
pop
sbb
mov
scas
leave
xor
and
add
add
lret
xchg
sub
cltd
sbb
and
adc
scas
ss
mov
cli
bnd
xor
jnp
fdivrp
sbb
cmp
cmp
and
mov
jle
cmp
adc
mov
in
lret
stc
iret
dec
inc
rol
ljmp
hlt
fsubrl
jno
daa
nop
pushf
repnz
mov
or
dec
pop
mov
push
test
adc
mov
das
hlt
xlat
fnstenv
enter
cmp
test
jns
mov
insb
scas
shlb
popa
leave
out
xchg
insb
fistl
lods
out
xor
cmpsl
jecxz
rorl
xchg
js
dec
inc
inc
test
mov
in
aad
inc
in
push
mov
stos
add
data16
andb
lds
pop
xchg
inc
lods
xchg
cmpsl
divl
jle
dec
dec
das
orb
sbb
enter
sub
insb
test
les
mov
shll
inc
mov
jnp
jnp
mov
vpmacssww
inc
loop
push
cmpsl
fbld
cs
aas
fldlg2
lret
stc
int3
aas
sti
int3
mov
sub
cmp
xorb
pop
and
cmp
subl
push
pop
jae
mov
mov
incl
jmp
and
inc
sti
add
mov
ret
das
push
lea
jbe
rorb
pop
mov
ljmp
pop
jo
jno
cld
mov
je
push
aaa
incl
xorl
je
dec
imulb
push
inc
outsb
sti
or
orb
repnz
cld
cmpsb
aaa
xor
sbb
push
fdivrs
adc
icebp
subb
addl
sbb
jno
lea
push
lock
sbb
sbb
aaa
lock
or
pop
mov
or
lret
cmp
cmp
mov
push
pusha
pushf
inc
xchg
xor
sbb
nop
pop
cmp
pop
popa
or
das
test
mov
nop
test
inc
dec
inc
mov
popf
enter
adc
mov
add
pop
xlat
notl
js
cmc
push
fisubl
xor
test
mov
adc
lds
push
mov
lea
mov
shlb
mull
mov
fdivrl
mov
adc
int
or
sbb
mov
ror
cli
mov
neg
js
xlat
repz
and
cmc
add
mov
add
mov
sbb
lds
mov
leave
out
adc
jb
push
pop
pusha
mov
repnz
addr16
xchg
in
xchg
lds
jbe
jmp
xorb
and
int3
cmp
cmp
rcll
fsubs
aad
imul
inc
sbb
add
enter
notb
mov
test
push
inc
adc
popf
iret
int
jp
xchg
in
xor
ss
das
sti
cmp
jno
push
aas
test
sbb
sbb
in
popf
dec
jle
insb
mov
push
pop
pop
leave
arpl
jmp
fimuls
xor
rcrl
jne
jecxz
push
inc
mov
cmp
aas
pushf
adc
dec
mov
cld
mov
push
and
nop
iret
push
lods
sti
jns
cmp
jp
cwtl
push
mov
leave
push
mov
cmp
shl
test
mov
lcall
pop
pop
aam
dec
loope
jl
aad
call
pop
dec
decb
mov
fwait
stc
ja
jle
inc
pop
jge
rclb
xlat
jae
or
movsb
xor
idiv
sub
nop
adc
bnd
mov
mov
mov
pop
addr16
mov
adc
push
or
xchg
sbb
jp
jmp
xchg
sub
dec
and
dec
push
jl
mov
stos
nop
cld
sbb
xor
or
mov
enter
jge
repnz
movsb
cmp
xchg
in
dec
and
mov
int
mov
stos
dec
les
nop
loope
xor
pop
pop
test
mov
dec
pop
clc
jae
jne
or
sti
je
call
sbb
jbe
xor
mov
pop
pop
cmp
xchg
xlat
or
arpl
mov
repnz
jmp
push
fldt
out
or
jnp
and
popa
mov
seta
psadbw
sbb
jbe
and
fadds
out
cmp
dec
mov
cmp
ljmp
inc
sbb
cwtl
shl
jbe
test
scas
mov
xchg
cltd
mov
jbe
jl
aas
ss
pop
call
add
lret
pop
push
bound
inc
aas
push
xchg
iret
xchg
pushl
jge
mov
aam
repnz
loopne
in
ss
loopne
pushf
fsubp
or
movsb
icebp
mov
movsb
ds
repz
scas
xchg
xchg
dec
push
dec
add
ret
lds
mov
inc
ret
scas
in
push
es
fs
push
add
and
loop
adc
call
push
xchg
mov
inc
adc
leave
lea
dec
mov
sahf
mov
data16
int
test
mov
sub
jbe
adc
out
jns
cwtl
cmp
mov
insb
dec
nop
xchg
fs
jmp
and
mov
in
into
mov
stc
mov
and
mov
sub
mov
clc
insb
int
jno
test
xchg
rorl
std
or
shrb
xor
mov
js
xor
mov
sub
rclb
clc
mov
add
lahf
dec
les
mov
inc
or
addr16
insl
add
xchg
push
mov
ja
mov
scas
das
lret
jae
pop
ret
cmp
fcmovne
loope
enter
add
not
inc
sub
mov
les
add
repnz
sbb
mov
cld
sub
jns
cs
push
cwtl
adc
data16
mov
cs
xchg
cmp
inc
shl
in
pop
xor
mov
das
in
lahf
mov
mov
pusha
pop
mov
add
insl
movsl
cmp
fs
cmc
and
hlt
int3
hlt
sti
daa
imul
dec
push
bound
mov
int
jbe
mov
cmc
pop
pushf
mov
dec
int3
add
mov
decb
push
inc
add
cld
inc
ljmp
pusha
aam
jle
dec
jne
xor
test
cmp
mov
cmc
jmp
or
dec
out
es
jle
fwait
xchg
push
xchg
testl
or
jno
pop
push
in
mov
outsb
push
hlt
fiadds
mov
adc
add
rolb
push
ds
push
popa
jle
mov
pushf
push
jmp
test
cmp
daa
adc
jbe
arpl
ljmp
adc
jbe
fsubrp
and
mov
addl
and
mov
sbb
fwait
lret
adc
xor
push
ret
test
fcomps
mov
leave
das
xchg
ret
sbbl
adc
call
out
push
in
fcomps
mov
out
shrb
jne
or
push
jle
repz
cwtl
ja
xor
iret
outsb
mov
mov
fadd
sahf
push
out
sub
imul
jns
jle
inc
add
ljmp
cmp
es
jge
sbb
loope
imul
pop
stos
push
shl
mov
inc
mov
scas
pop
xorb
mov
sarb
inc
xchg
out
mov
dec
pop
dec
jl
cs
cwtl
pusha
shll
lods
and
popf
cmp
hlt
mov
mov
mov
ja
and
add
lahf
in
sub
sbb
dec
hlt
idivl
outsl
mov
mov
mov
xchg
out
mov
sub
xchg
push
cmpsb
scas
aas
movsl
push
and
ror
daa
insl
int
fildll
cmp
cmpsb
xor
fnop
mov
or
fabs
cltd
cmp
test
clc
push
out
mov
cmp
ret
add
xor
lcall
jnp
mov
insb
jp
mov
sub
and
sbb
mov
popf
mov
in
or
pop
leave
jb
sbb
add
out
shlb
or
and
test
and
pop
sti
roll
sti
inc
xchg
inc
test
push
adc
fwait
shl
in
mov
add
pop
mov
loope
pop
and
cmc
int
push
or
inc
repz
icebp
faddl
cwtl
mov
push
mov
jg
adc
xchg
push
cmc
push
push
jmp
add
insb
std
push
mov
or
pop
adc
push
ret
outsl
xchg
outsb
cmp
cwtl
stos
sbb
jne
xor
jmp
mov
out
outsl
fisttpl
adc
call
fnop
mov
jecxz
aad
les
popf
enter
mov
push
daa
cmp
or
sahf
mov
lret
mov
lret
addl
sub
mov
push
pop
fs
movsb
dec
jo
lea
lahf
push
pop
shlb
pcmpgtw
jle
addr16
insb
jne
mov
inc
push
lods
pop
push
jns
push
subb
rcrb
mov
fsubr
les
jno
sub
mov
pop
cmp
dec
enter
inc
lahf
aas
inc
sub
bound
mov
xor
lcall
cmp
in
xchg
addl
adc
mov
push
mov
loop
and
imul
sub
test
pushf
jne
dec
and
cmc
stos
clc
jo
add
aas
jo
pusha
fistpll
loope
cwtl
lds
test
shrb
mov
push
ss
repz
or
or
lods
cmp
rorl
hlt
movsb
insl
arpl
lea
popf
test
int3
adc
aaa
pop
mov
cmp
in
repz
push
insl
sub
pop
and
ret
jl
mov
sbb
call
pushf
dec
inc
pusha
sbb
jns
pop
rorl
arpl
iret
adcb
push
mov
aam
scas
add
inc
lods
lcall
sti
fxch
mov
sub
into
addr16
leave
inc
inc
add
movsl
push
mov
adc
scas
daa
ljmp
out
cmc
adc
lret
inc
cmp
sub
js
jo
sbb
jmp
ss
fistps
outsl
mov
fcmovbe
ja
ret
cmp
scas
dec
mov
mov
inc
pop
fstpl
jb
jl
repz
push
jl
adc
daa
inc
jno
dec
pop
jbe
mov
out
pop
fistpl
mov
out
dec
mov
adc
mov
popa
pushf
inc
add
adc
outsl
cmp
xor
pop
xor
push
jb
adc
cld
lods
cwtl
sbb
mov
cmp
pop
sbb
aas
push
clc
outsb
sarl
mov
xchg
pop
xor
out
jge
fwait
jge
xor
fst
adc
sub
test
movsl
jge
cli
outsl
lcall
lret
sahf
nop
jo
out
pop
rcl
push
xlat
xchg
cmc
gs
stos
jb
mov
inc
aam
mov
pop
shll
insl
mov
adc
push
fwait
xor
jb
mov
rolb
add
repnz
add
jo
stos
cwtl
and
cli
int3
ss
lret
test
and
jl
push
cmpsl
test
in
xchg
and
push
push
sub
pop
sbbb
mov
ret
add
pop
imul
push
jbe
xor
in
jmp
jae
imul
push
stc
leave
in
jno
aam
mov
mov
xchg
loope
mov
out
mov
jmp
lods
jne
lods
lods
xor
cs
int3
cmp
or
jl
adc
jle
sbb
sbb
sbb
push
lea
outsb
cmp
sub
or
enter
das
add
scas
adc
add
pop
pop
cmp
xchg
std
cmpsl
pop
sub
xor
loope
fnstsw
int3
lret
xchg
ss
lds
mov
add
sbb
addr16
xor
decl
lods
rcrl
xchg
or
jle
mov
xor
jl
mov
cld
mov
cmp
clc
push
pop
lods
in
add
dec
mov
inc
xchg
out
xor
sbb
push
es
push
loop
and
mov
out
pop
fisttpl
add
inc
mov
mov
cmp
cwtl
orl
dec
jne
mov
ret
stos
cmc
ds
roll
pop
cs
lret
mov
jns
mov
mov
imul
jae
mov
add
lods
pop
roll
fistps
cmp
ret
je
iret
pop
adc
int
ret
cmpb
fsubrl
dec
mov
cmpb
scas
lds
dec
loopne
cmp
adc
sub
lock
fistl
lds
cli
scas
icebp
cmp
mov
sub
stc
xchg
jnp
repnz
dec
xchg
mov
mov
pop
sub
outsl
mov
fwait
pop
adc
popf
xor
mov
loope
cmp
in
mov
sub
loop
aaa
sub
xor
mov
iret
lods
loop
cmp
sbb
mov
jbe
div
or
ljmp
es
dec
call
leave
mov
push
inc
ljmp
xorb
test
fstpt
or
aad
ret
aam
popa
fstpt
push
outsl
sub
out
in
roll
push
cmpb
jmp
jmp
mov
cli
xchg
dec
stc
and
jecxz
jmp
xchg
ss
nop
dec
std
mov
pop
pop
mov
pop
ret
inc
push
ljmp
pop
push
scas
icebp
cs
movsl
shlb
xor
and
xchg
test
sarb
mov
shrb
icebp
sbb
adc
ret
filds
repnz
ljmp
es
jg
xchg
notl
lret
sub
sub
nop
mov
out
mov
loop
adc
out
dec
pop
mov
or
loopne
aaa
sarl
adc
sbb
rolb
xchg
in
mov
add
or
in
jnp
mov
popa
lret
xor
pop
pushf
test
add
mov
jmp
pop
xor
mull
aas
rol
js
inc
cmpl
out
dec
movb
jb
subl
xor
jo
cwtl
pop
push
rcrb
lods
lods
push
loope
cmp
dec
in
mov
cmp
mov
mov
cld
xchg
adc
cs
mov
cld
xor
addr16
xor
and
mov
ja
cmp
mov
adc
xchg
in
pop
and
negl
xchg
sti
jecxz
aas
repnz
or
mov
pusha
les
sbb
mov
fwait
adc
push
mov
sub
mov
push
stos
cmp
pushf
orb
jae
jmp
das
mov
mov
lods
fwait
gs
jnp
outsl
sbb
jno
pop
lock
sahf
mov
xchg
push
dec
pop
push
fldl2t
mov
les
push
mov
pop
scas
mov
rorl
mov
pop
mov
cmpsl
sbb
xchg
mov
lea
in
addr16
or
adc
popa
loop
mov
sbb
lahf
subb
jb
pusha
mov
cmp
hlt
std
stos
jo
insl
xorl
cmp
xchg
adc
mov
repnz
xor
cld
sbb
mov
rorl
mov
rcrl
or
std
or
rol
push
mov
add
sbbl
rorb
jp
sub
shll
dec
cmp
xchg
hlt
pop
fsubrs
jg
mov
lcall
shlb
push
mov
sbb
dec
out
or
pop
dec
inc
int3
xorl
mov
outsb
dec
jnp
cmp
cmp
push
js
lret
xor
push
mov
cld
jo
pop
mov
ret
bound
push
sbb
adc
dec
out
jg
das
mov
scas
inc
sbb
icebp
inc
in
mov
stos
adc
jb
mov
fdivl
test
mov
ljmp
pop
xor
insl
es
dec
ficoms
fists
xchg
adc
loop
dec
and
jb
cs
dec
dec
leave
outsb
push
popf
inc
subb
outsb
push
xchg
test
leave
sub
cmp
xor
stc
mov
fsubrs
imul
pop
fldl
pop
insl
add
imul
cmp
je
lods
out
cmc
call
sub
das
xchg
pop
enter
pop
jb
cmp
cmpsb
cli
idiv
push
push
data16
pop
mov
pop
outsl
fnsave
out
clc
adc
cmp
mov
lods
lds
mov
add
push
sti
push
cwtl
clc
lds
pusha
scas
shl
xchg
push
mov
sub
insl
outsl
loop
mov
sbb
shrb
or
nop
fcomip
daa
std
push
leave
js
xor
jne
sbb
xchg
stc
je
ss
push
insb
cwtl
loopne
lds
das
mov
sub
fisubrs
cmp
inc
cmpsl
out
sbb
inc
dec
leave
jne
movsb
bound
ficomps
fdiv
imul
inc
ljmp
xor
testb
ljmp
test
ret
push
cmc
aam
outsb
testl
sub
imul
in
xchg
outsl
push
aas
sbb
lods
mov
sbb
sti
cmp
xor
lods
sub
loop
aam
sti
inc
adc
flds
iret
mov
jmp
test
xchg
ret
jno
cld
or
mov
dec
or
mov
jnp
sub
js
push
or
adc
popa
jecxz
out
in
lock
xchg
xor
lahf
xor
adc
jge
pop
gs
or
push
adc
push
clc
test
fidivrl
ret
sbb
dec
lods
enter
sub
fldcw
sub
sar
cmpsb
xor
pop
movb
in
jp
test
mov
fimull
xchg
pop
push
push
sbb
jg
addb
sbb
xor
cmp
jecxz
into
ja
int3
dec
fistpll
add
and
je
pop
xchg
cwtl
sub
pop
ret
pop
add
lcall
leave
int
fs
ja
std
and
sahf
out
movsl
test
popa
add
lret
mov
dec
mov
jo
or
movsl
daa
test
pop
adc
sub
and
pop
mov
xor
faddl
test
and
mov
faddl
stc
xchg
mov
iret
fsubl
pusha
sti
sbb
fs
lahf
sub
scas
dec
mov
je
mov
jno
sbb
sbb
sbb
lea
sub
push
lds
xor
lods
ficoms
popf
add
movsb
arpl
repz
push
inc
mov
jnp
xor
and
dec
and
lods
lea
shll
pushl
shll
jp
clc
sub
mov
in
pop
pop
dec
inc
sbb
and
xchg
ljmp
ss
sub
jns
jg
sti
shrl
mov
mov
jecxz
insb
hlt
scas
add
popf
movsb
xchg
mov
int
stos
not
enter
jecxz
jle
stc
jbe
mov
sbb
lahf
rcrb
std
ror
xor
insl
mov
imul
fstp
mov
cmp
xchg
loop
push
mov
jg
sub
lods
data16
fidivrl
push
jbe
lret
jp
rol
jb
fnstsw
sbb
cmp
call
or
xchg
dec
adc
inc
jl
sub
aaa
std
adc
inc
mov
cmp
outsb
or
js
sub
xlat
icebp
mov
jbe
enter
imul
into
lods
xchg
mov
add
jp
sti
pop
mov
repz
sbb
xor
jecxz
and
ret
or
xchg
add
ljmp
push
mov
or
shrl
adc
push
stos
in
jle
jo
xor
add
xchg
out
xor
add
cmp
adc
cmp
imul
mov
arpl
sub
jmp
ret
jmp
fs
mov
das
sub
lea
pop
mov
adc
pop
stos
push
mov
and
xor
ret
push
mov
mov
mov
movsb
popf
cmp
sub
sahf
push
pop
loop
push
or
dec
daa
or
lock
pushf
cmpsb
fisubrs
xor
aad
sahf
or
out
or
sub
sysenter
out
jae
mov
movsl
xchg
sahf
push
mov
testl
stos
push
aam
adc
or
sub
push
enter
andb
sbb
shlb
inc
dec
adc
cmpsb
push
mov
cmpsl
sbb
pushf
test
push
aam
icebp
xorb
repnz
mov
xchg
dec
xchg
mov
mov
xchg
push
xor
mov
incb
mov
xchg
pop
jp
or
mov
xchg
add
sbb
in
cltd
jp
pop
add
aad
xchg
xchg
aaa
aaa
data16
add
lret
jge
pop
unpckhps
inc
jbe
jg
pop
addr16
xor
mov
cld
lds
cmp
dec
mov
out
mov
iret
jno
fwait
jns
les
lods
cmp
add
fists
out
in
xor
push
sar
jmp
mov
mov
cltd
fstpl
insb
scas
sahf
xchg
sub
stos
pop
int
fwait
mov
in
movsl
xchg
icebp
pop
addr16
jl
push
jmp
pop
sti
dec
adc
test
test
insl
mov
pop
add
cmpsb
xchg
add
mov
push
jg
leave
sub
push
std
shll
mov
mov
sbb
test
rcl
mov
dec
and
call
sbb
pop
lods
fidivl
std
sbb
dec
sbb
pop
inc
dec
cmp
cmpsl
xchg
ss
pop
sbb
in
aaa
movsl
popf
jmp
dec
xchg
dec
sub
pop
bound
jp
jo
jmp
inc
sbb
xchg
mov
sbb
loop
scas
adcb
je
lret
in
lock
adc
fs
dec
jne
pop
pop
sub
dec
push
test
push
invd
add
push
push
in
out
or
push
jg
mov
dec
and
popa
lahf
push
lods
andl
cli
int3
pop
xchg
mov
insl
jb
leave
aaa
outsb
ds
adc
jne
add
xchg
inc
cli
movsb
mov
mov
popf
xchg
push
adc
in
pop
sbb
mov
mov
les
fimuls
mov
ljmp
pop
pusha
fildl
mov
int
shrl
push
shlb
inc
xor
mov
dec
lock
iret
cwtl
xor
shl
cmp
cmc
mov
scas
outsl
and
stc
push
mov
iret
outsl
cmp
add
lea
cld
shrd
mov
jge
stos
pop
adc
dec
loop
jo
addr16
xor
dec
fcoms
mov
sub
out
lahf
lds
lcall
xor
mulb
xorl
jecxz
inc
add
std
cwtl
imul
aas
fistps
je
stos
insb
cmc
inc
data16
pop
push
jg
push
outsb
movsl
mov
pushf
ja
jg
push
pusha
xor
sub
mov
jg
fists
or
stc
ja
jb
and
push
jnp
xchg
nop
push
mov
xchg
insb
pop
jno,pt
add
inc
fs
dec
dec
xor
lcall
nop
notb
jg
inc
sahf
push
fldenv
jg
or
xchg
cwtl
and
sbb
jo
jle
into
repz
inc
sbb
adcl
repnz
or
lock
mov
andb
js
mov
jns
lods
out
pushf
xchg
inc
lahf
mov
aaa
outsb
dec
fstpl
sbb
sti
cs
mov
dec
sahf
mov
jbe
xor
movsb
fiadds
xchg
jge
lahf
and
jl
lods
addl
cmpsb
out
or
jg
push
lea
jecxz
ss
and
dec
insb
je
dec
dec
lods
out
xchg
filds
outsl
out
lcall
push
mov
inc
pop
das
mov
xchg
mov
sub
bound
lds
inc
xor
mov
pushf
push
in
cmp
nop
scas
bound
bnd
sub
punpckhwd
fdivrp
enter
add
xor
and
in
jb
dec
push
ret
repnz
insb
xor
in
ud2
fwait
or
add
xchg
lcall
inc
ror
or
push
les
test
inc
rclb
mov
addl
xchg
add
jbe
xchg
in
or
dec
adc
mov
xchg
aaa
sub
data16
cmpsl
aaa
cs
jl
bound
xchg
push
mov
sbb
jecxz
jb
ret
out
ja
in
mov
je
rcr
in
int
jg
icebp
pavgw
das
mov
add
movsl
lods
lcall
mov
in
pop
hlt
xchg
ja
scas
jns
add
dec
cmp
dec
mov
mov
or
cmp
pop
pop
sbb
mov
inc
jo
je
stos
movsl
scas
pop
xor
fimuls
xchg
fldl
push
adc
outsl
mov
dec
out
push
xchg
add
in
sub
loope
fsubrs
sbb
push
mov
xor
lcall
xchg
pop
and
add
in
jmp
cwtl
inc
or
add
lods
pop
orl
push
in
adc
push
fs
jns
aad
imul
stos
xor
jbe
dec
sbb
js
in
out
call
clc
lcall
mov
lods
js
mov
adcb
cli
call
sbb
add
iret
xchg
imul
xchg
jae
adc
inc
ja
movsl
add
jae
call
roll
pusha
jno
push
shlb
lcall
daa
xor
mov
pop
mov
js,pn
stc
sti
int
add
xchg
inc
jo
mov
pop
int
mov
mov
ljmp
shrb
dec
mov
push
xchg
xor
pusha
xchg
test
inc
sbb
mov
cld
dec
pop
jl
enter
addr16
inc
add
inc
ja
notb
pop
inc
adc
fistpll
dec
or
push
arpl
cmpsb
icebp
into
test
push
fs
inc
lock
cmc
dec
aam
ret
scas
test
mov
mov
and
sbb
sub
mov
adc
std
loope
inc
sbb
stc
leave
arpl
sahf
out
scas
test
xchg
test
xchg
jnp
clc
aad
cli
jno
ss
mov
push
push
aam
inc
sti
pop
cmp
xlat
leave
test
mov
inc
add
sub
imul
fdivr
testb
sbb
loop
divb
repnz
jo
iret
test
or
sti
dec
push
cmp
insl
incb
lret
pop
repnz
test
sbb
cmp
sbb
call
rclb
aam
inc
pushl
xor
icebp
outsb
mov
test
aaa
or
insb
mov
cmp
roll
movsl
jno
pusha
or
xor
xchg
sti
sub
cmp
mov
pop
cmp
stc
mov
in
mov
jns
inc
pop
xchg
mov
pusha
repnz
fists
shll
mov
add
xor
scas
add
xchg
xchg
aas
jp
cltd
ljmp
cld
mov
adc
pop
pop
loopne
push
inc
fwait
stc
mov
xchg
int3
push
dec
xlat
shrb
xchg
ljmp
test
xor
mov
adc
mov
ret
cmp
fistps
inc
push
inc
jmp
mov
gs
pop
and
xor
loop
push
mov
lock
out
repnz
jns
push
mov
fimull
out
add
shll
in
outsl
addb
inc
mov
in
fiaddl
in
cmpsl
fmull
sti
mov
xchg
adcl
cmc
lods
fsubp
pop
das
rorb
mov
pop
fadds
icebp
adc
dec
inc
test
iret
je
xchg
ja
fwait
scas
and
jl
lock
shrl
sti
scas
mov
fistl
lcall
xor
mov
fdivrl
pop
repnz
mov
mov
ja
xlat
pop
pop
mov
jge
call
and
popa
adc
stc
and
pop
xlat
jo
pop
adc
cmp
movsb
xchg
xchg
lods
xchg
and
popf
push
sub
nop
pop
inc
int3
adc
test
aad
clc
mov
jmp
cmp
push
jle
inc
xor
add
sbb
repnz
mov
mov
mov
test
push
or
and
or
cwtl
inc
push
sub
es
xlat
popl
fdivrs
cltd
push
stc
lea
dec
xchg
cmpsl
xor
xchg
test
mov
pop
mov
xchg
dec
mov
xor
adc
sbb
mov
mov
fisubrs
outsb
add
into
dec
rclb
dec
outsl
inc
dec
mov
mov
ja
sub
cwtl
jg
xchg
aaa
dec
jecxz
inc
xor
fbld
cmp
adc
or
js
mov
fisubrs
mov
jb
imull
mov
xor
rorb
add
arpl
pop
mov
push
sahf
xor
cltd
sub
dec
xchg
pop
enter
fbstp
repz
lcall
jae
jp
call
xor
mov
sbb
pcmpeqb
pop
popa
mov
pop
es
mov
cmpsb
mov
movsl
jl
cmpsb
pop
lods
cmp
ljmp
xor
cmpl
iret
inc
adc
js
shl
push
jb
shlb
dec
mov
hlt
mov
das
inc
push
je
mov
pop
xchg
mov
orb
fwait
mov
mov
outsb
sar
leave
aam
lock
cwtl
jecxz
ja
and
lods
jp
lock
mov
xor
xor
fidivl
aam
insb
and
add
aad
fcomip
push
loop
jl
std
pop
pusha
into
push
push
dec
addl
pusha
mov
jl
or
inc
imul
stc
jge
stos
movl
dec
and
adc
out
int3
inc
bound
es
sbb
idivl
mov
leave
js
cli
aas
aas
roll
or
xchg
dec
popl
xor
rcl
lock
test
outsl
or
sub
sub
or
push
mov
mov
push
mov
popa
ret
lret
data16
stos
jp
mov
or
cmp
adc
push
out
mov
ljmp
and
xchg
sti
adc
dec
icebp
ret
cmp
pop
sbb
ja
sub
jae
lods
dec
cmp
jo
mulb
adc
pop
sub
repnz
mov
popa
xor
pop
fiadds
in
dec
and
fisttps
test
pop
add
call
xchg
in
call
shll
jle
shl
mov
pusha
mov
add
fstpl
inc
mov
aaa
cmpsl
ret
out
ljmp
jmp
cmpsl
popf
pop
push
jo
adc
xlat
push
int3
rcrl
add
out
aaa
jge
fwait
push
insl
sub
insb
mov
lods
mov
ja
mov
mov
inc
arpl
xor
test
push
inc
xchg
cld
in
mov
jmp
add
sbb
inc
int3
in
sti
rolb
orl
push
jecxz
inc
movsl
lcall
stos
stos
jns
pop
enter
dec
lret
pop
or
fbstp
push
mov
lea
pop
daa
test
mov
in
leave
add
negb
sub
mov
call
stos
pop
fs
push
jg
xor
jae
jg
inc
mov
sbb
adc
lret
pop
pop
mov
pop
das
inc
ret
add
adc
ds
or
nop
push
imul
orl
cld
adc
jns
mov
popl
mov
jb
scas
aad
dec
pop
ja
or
mov
sub
xchg
lret
icebp
hlt
sbb
mov
inc
xchg
fs
and
add
jae
rorb
xor
mov
mov
xchg
xchg
lea
test
push
push
xchg
popf
shl
mov
lea
rcl
xchg
sub
mov
shrb
xor
sub
xchg
jle
lcall
lock
orb
add
lds
or
popa
jg
scas
add
sbb
add
cltd
in
dec
adc
les
popa
mov
or
insl
pushf
sarl
inc
mov
stc
lea
scas
test
push
jne
jmp
and
fwait
insb
shrl
cs
fldt
pop
ret
inc
cmc
jb
outsb
cli
shll
mov
scas
ret
fsubl
stos
cmp
mov
js
lret
rdtsc
pop
ljmp
cmp
scas
mov
mov
inc
lret
pop
inc
push
adcb
in
aas
inc
push
cmp
mov
loopne
out
sarl
jae
in
mov
pop
lcall
pop
mov
sub
shl
xchg
out
adc
pop
shrb
imull
mov
imul
jp
xor
inc
fstpl
and
out
outsb
ret
sti
cld
popf
push
ret
xor
movsl
pop
imul
in
sbb
or
mov
pop
push
inc
mov
mov
nop
xor
xchg
mov
jecxz
sbb
or
lock
nop
lret
xchg
pop
and
jnp
add
mov
cmpsl
pop
call
mov
pop
mov
sub
dec
dec
mov
repz
adc
and
pushf
iret
adc
add
sbb
dec
mov
scas
aam
push
cltd
cmpsb
cmpb
mov
push
lea
mov
sahf
or
xchg
fsubrp
push
jnp
mov
xchg
scas
mov
adc
repz
sbb
scas
in
adc
repnz
inc
js
xchg
repz
clc
sbb
pop
xchg
incl
and
sbb
insl
sahf
add
movsl
icebp
pop
aas
jl
mov
ljmp
decb
mov
ljmp
mov
cltd
fs
call
dec
pusha
cld
inc
inc
sbb
sahf
jnp
cmpsb
je
inc
sub
testl
pop
subl
lods
pop
mov
and
movsl
gs
push
xor
mov
sbb
js
cmp
mov
adc
xchg
xor
ret
pop
pusha
dec
dec
std
mov
jle
les
and
popf
out
mov
xor
fcompl
push
hlt
inc
dec
jnp
mov
ljmp
pop
jns
add
ret
sbb
jmp
mov
push
sub
int3
mov
cwtl
jnp
push
in
jae
xchg
out
xchg
adc
mov
imul
push
push
xor
jge
in
mov
lea
add
or
inc
jne
mov
add
pop
out
mov
int
push
inc
push
mov
jae
imul
pop
repz
inc
cli
sub
fmulp
test
flds
imul
inc
cmpsl
and
add
or
adc
scas
xchg
dec
loope
pop
xor
out
je
push
mov
in
sub
mov
xchg
addr16
out
dec
cmpsl
in
nop
or
xlat
push
jnp
test
mov
add
jecxz
xor
hlt
cmpsl
push
shlb
xlat
sbb
mov
sub
fnsave
leave
sti
sbb
stos
pop
js
decb
dec
cmp
push
fdivs
jg
mov
ret
sahf
aas
adc
iret
sub
pop
cmp
xor
cld
shrl
dec
into
jge
jmp
mov
je
xchg
jge
push
jge
xor
pop
mov
mov
mov
jo
dec
mov
outsl
ret
cli
repz
int3
clc
inc
push
sbb
sbb
push
insb
fsubl
sbb
into
mov
dec
cwtl
test
mov
xchg
aad
jbe
and
loop
mov
insb
mov
cs
and
or
jl
push
fldl
fstl
sti
loop
iret
loope
adc
mov
movsb
in
inc
aaa
js
fildl
fiadds
add
sbb
or
ljmp
lahf
dec
scas
test
xlat
repz
lret
jmp
adc
push
mov
jmp
push
jp
inc
xchg
fimuls
les
mov
fwait
je
repnz
test
std
flds
adc
sbb
mov
or
lret
lahf
adc
sbb
jg
add
das
push
xchg
lea
and
push
sahf
pushf
mov
jnp
and
sub
pop
xchg
dec
frstor
dec
cmpsb
pop
mov
xor
cltd
mov
xor
mulb
pop
gs
ret
pop
cmpsl
dec
sbb
fisttps
insb
ja
das
enter
loopne
add
add
push
sub
insb
cld
xchg
mov
pop
add
push
jb
ss
scas
mov
cmp
out
out
pop
mov
pop
leave
in
scas
mov
lock
push
cmp
pusha
fistpll
mov
inc
scas
fwait
jb
push
pop
push
xchg
decl
das
insl
fdivrs
jmp
mov
inc
lret
and
repnz
fsts
pop
or
sbb
je
insl
add
lods
out
add
adc
lret
jbe
daa
out
pop
lret
jo
fisttpl
stos
mov
mov
and
sbb
mov
sub
add
xor
call
popf
test
sbb
dec
xchg
imul
sub
push
or
cmp
xchg
push
sub
xor
das
pushf
fcoms
popf
xchg
mov
mov
cmpsb
cmpsb
mov
inc
das
xor
cli
pop
mov
and
shld
pop
data16
outsl
test
dec
mov
jo
push
cmp
jle
js
dec
adc
or
cmpsb
mov
hlt
xor
push
insb
mov
rcrb
add
test
jno
push
movsl
imul
jl
pop
add
push
lcall
dec
xor
hlt
xchg
mov
repz
ljmp
jae
outsl
daa
push
sbb
dec
lret
inc
rorl
adc
push
or
repnz
daa
iret
cmp
dec
push
xor
incl
shlb
sub
push
xchg
out
push
xchg
and
imul
or
je
mov
clc
lret
test
rcrb
push
test
daa
xchg
sbb
and
pushf
nop
mov
imul
dec
adc
jmp
aaa
je
lock
addr16
push
popl
movsl
pop
lret
adc
scas
enter
mov
scas
cltd
push
mov
cwtl
lcall
test
test
xor
lgs
and
cmp
xchg
je
push
enter
cli
inc
mov
sbb
and
pop
cmpsb
shll
out
shr
cmpb
sar
imul
dec
imul
add
out
loop
sti
mov
lds
cli
add
xlat
js
arpl
xor
pop
mov
xchg
mov
enter
jmp
jns
jp
fcmovbe
sti
jb
test
ss
sub
enter
adc
loope
inc
xchg
sarl
popa
rcrb
cs
enter
stos
icebp
and
push
push
popa
call
sbbb
push
sti
jle
mov
mov
push
sub
rorl
dec
push
int
js
jp
fisttps
mov
test
mov
mov
jnp
cli
push
imul
into
insb
push
shll
xor
push
pop
adc
gs
ja
clc
push
stos
pop
push
or
ss
dec
sbb
adc
mov
pusha
aas
out
fwait
xor
xor
ljmp
pop
pop
mov
insl
mov
xchg
pop
and
repz
scas
push
inc
mov
dec
mov
dec
fdivl
or
shrb
and
mov
and
sub
cld
xor
mov
pop
sbb
pcmpgtw
jne
cmpsb
lret
add
ja
push
sahf
jnp
shlb
xchg
pop
mov
jae
in
xchg
fs
rolb
sbb
shlb
fs
addl
cmp
xchg
scas
pop
lcall
aas
pushf
scas
out
cs
js
aad
je
or
sbb
mov
cmp
test
mov
movsb
hlt
adc
repz
jb
sbb
and
push
adc
incb
in
sub
inc
lods
sub
push
sti
out
movsb
shlb
pop
test
adc
dec
mov
xchg
rorl
fcmovbe
pusha
repnz
pop
outsl
ds
mov
loop
sbb
and
flds
push
mul
sar
push
and
cmp
pop
mov
and
cwtl
push
sub
ret
dec
mov
jle
call
jns
mov
cld
rcl
dec
and
sbb
test
in
sbb
fdivrs
push
and
popf
call
jb
mov
fistpll
mov
aam
sbb
je
loopne
jno
lret
test
push
sub
jb
xor
cmp
and
jp
je
inc
mov
jle
sti
stos
ljmp
mov
xchg
in
mov
adc
pop
imulb
cmpsl
bound
jo
leave
xorl
stos
jae
dec
scas
shrl
mov
fpatan
jo
das
inc
add
mov
std
or
shrl
lea
int
add
jb
incb
lock
shlb
repz
ret
sub
pop
jecxz
test
and
and
cmp
mov
mov
test
mov
xchg
lods
mov
push
add
pop
pop
dec
ds
test
enter
mov
js
jns
push
push
lret
inc
mov
test
loope
data16
test
shll
push
popa
lock
mov
dec
loope
aam
push
in
cld
loop
cmp
aad
and
in
cmp
rcrl
jge
dec
push
arpl
mov
mov
cmp
xchg
sub
xchg
pop
pop
lods
cmp
and
pop
call
scas
inc
nop
dec
inc
repz
out
xchg
inc
or
imull
jp
pushl
xorb
or
cmp
push
dec
adc
sbb
fcmovnb
imul
jle
lahf
cltd
cmp
stos
xlat
mov
push
adc
popa
xchg
shl
push
xchg
daa
arpl
and
push
mov
pop
inc
std
sub
lods
jbe
lods
jnp
pop
cmc
and
jge
leave
movsl
xorb
shl
fwait
scas
or
jg
mov
xor
mov
add
and
fisttpl
jp
jno
mov
and
push
mov
push
js
loopne
inc
arpl
xchg
lcall
push
pop
and
or
pop
push
int
xor
fnsave
cmp
and
cli
cmpsl
mov
addr16
es
in
in
inc
jae
mov
dec
in
imul
xor
sti
stos
xor
idiv
and
pop
es
sub
xchg
fisubl
jmp
sub
dec
or
in
int
xchg
sub
push
sub
dec
or
or
dec
into
lock
push
push
out
and
mov
scas
mov
das
or
fcmovu
bound
or
shrl
sbbb
cmp
sub
insl
pop
xor
ficoml
jb
pop
cltd
mov
subb
int3
cmp
mov
xor
push
push
mov
mov
mov
ja
xor
cwtl
adc
stc
mov
mov
push
fists
popa
mov
ljmp
bound
mov
dec
in
sub
lcall
cmp
push
mov
and
cld
jo
adc
iret
enter
or
data16
ja
aad
dec
inc
lds
pop
shll
cmp
push
out
push
into
out
popf
outsb
pop
mov
add
dec
push
pop
jecxz
icebp
adc
psrlq
add
sub
jmp
sbb
iret
lahf
lock
inc
lret
mov
add
jb
stc
loop
lret
pop
xchg
sbb
push
jmp
jne
adc
fdivrs
jnp
and
and
jp
inc
dec
sbb
or
in
mov
data16
loop
cwtl
xlat
in
jp
cwtl
jge,pn
or
out
nop
add
into
mov
fdivl
popa
pop
mul
lahf
mov
data16
into
xor
outsb
cmp
push
aam
into
mov
dec
add
cmp
dec
outsb
lods
add
xchg
test
outsl
add
mov
cmp
imul
dec
rcrb
push
add
out
divl
push
mov
jb
adc
lea
inc
push
out
and
and
dec
jl
mov
push
mov
dec
sub
sub
mov
imul
bound
pcmpeqd
iret
and
xchg
and
in
js
lret
adc
pusha
sbb
pop
lcall
push
scas
fstps
adc
or
out
ss
test
in
add
dec
imul
sti
orb
sbb
call
adc
movsb
aas
jmp
fsubl
fldenv
dec
and
jge
mov
xchg
cmpsl
cmp
insl
dec
lahf
xor
or
lds
mov
lods
xchg
mov
jge
or
aaa
mov
sbb
dec
xlat
in
push
repnz
into
lahf
shl
add
rol
inc
leave
cltd
in
sahf
or
mov
add
or
shll
push
inc
sub
and
sbb
and
xchg
aad
mov
jecxz
adc
loop
mov
push
dec
dec
push
mov
push
jg
dec
std
cltd
pop
inc
hlt
xchg
sbb
and
mov
cmpsl
inc
inc
fstl
addr16
data16
xchg
sahf
pusha
dec
gs
or
je
adc
xor
std
push
rcll
nop
out
stos
jo
xchg
cltd
insb
dec
adc
insb
jne
test
es
and
loope
adc
mov
subl
std
mov
push
js
pop
xchg
push
cmp
pop
jecxz
subb
sub
or
push
cmp
push
pop
icebp
test
dec
fidivrl
push
std
or
mov
pop
xor
dec
pop
xlat
add
jb
jae
fstl
add
das
repz
mov
pop
in
enter
cwtl
in
pop
jmp
adc
out
push
lret
xor
aad
or
xor
mov
imul
add
sbb
scas
mov
or
loope
and
jmp
test
push
dec
lods
rorb
sub
in
sti
rcll
repz
pop
enter
sub
testb
mov
outsl
arpl
push
pop
fcoml
lret
mov
into
cmpsb
push
push
and
outsl
iret
repnz
dec
xchg
rcr
xchg
lods
mov
push
sbb
rol
mov
cmp
xor
bound
out
add
push
adc
adc
pop
rolb
xor
mov
push
sbb
mov
xchg
push
pop
clc
leave
lahf
inc
mov
orl
xor
loopne
dec
arpl
sub
ret
das
or
sbbb
jb
fidivrl
fisubs
int3
in
sbb
adc
gs
mov
das
push
ficompl
fnstenv
decb
xor
les
sub
sub
cmp
or
rcrb
insl
aad
or
or
pop
data16
shl
in
add
fimuls
sahf
fistps
sub
cs
mov
lahf
push
loop
push
mov
pop
sub
sbb
aam
xor
and
mov
mov
scas
ret
mov
mov
cmpsl
in
or
sub
movntq
out
gs
jmp
mov
xor
cmpsb
bound
mov
jne
mov
fidivrs
notl
pop
sbb
xor
in
fldenv
jno
int3
icebp
mov
push
pop
inc
push
sahf
inc
aaa
insb
shr
popa
lds
dec
push
push
add
xor
imul
stc
mov
cmpsb
mov
dec
push
add
lods
out
mov
xchg
scas
push
and
out
movsb
sub
ret
cld
pop
addr16
popf
lds
dec
es
pop
cmp
mov
pop
lahf
adc
mov
add
cs
jbe,pn
push
arpl
xor
pop
int
jle
sbb
rol
cmp
lods
mov
dec
jl
nop
shll
sub
sti
loop
mov
xor
sub
xchg
xor
xlat
arpl
cs
or
loope
and
cmp
jns
sub
mov
sub
push
dec
test
jg
mov
shrd
xchg
arpl
jl
je
adc
mov
xor
adc
scas
jle
adc
sahf
pop
pop
lret
mov
stos
sub
jae
int
xor
dec
mov
lcall
xor
xchg
lds
out
push
push
std
cmpsl
lods
adc
pop
loope
push
add
fmul
mov
pop
or
jmp
xor
jmp
pop
push
pop
fadd
or
and
jg
dec
in
sbbb
cltd
mov
inc
adc
test
mov
pusha
or
dec
and
sbb
adc
mulb
or
jnp
subw
pop
mov
leave
aam
push
or
mulb
jl
insl
stc
dec
out
rcrl
push
fwait
xor
std
fdivrl
xlat
jo
data16
into
inc
push
pop
jl
dec
add
ljmp
loopne
push
push
inc
cmp
je
jo
jae
leave
xchg
inc
lret
subl
push
xor
ljmp
push
out
aaa
cmp
xor
pop
jae
fcomps
push
push
inc
ffree
fildll
or
stc
shll
sbb
icebp
adc
std
arpl
jge
mov
adc
mov
movsb
add
jae,pn
xor
cmp
test
push
sbb
adc
cmp
sahf
icebp
mov
nop
push
fisubrl
add
push
fwait
inc
jmp
inc
and
lods
ss
push
sub
xchg
outsl
xchg
sahf
out
sbb
and
xchg
into
cli
loopne
ljmp
cltd
mov
mov
dec
xchg
addr16
cmp
xor
leave
lods
dec
xchg
xchg
in
rol
or
les
ret
mov
xchg
xchg
imul
mov
mov
scas
mov
xchg
aaa
test
push
cmp
aaa
inc
push
inc
push
push
test
add
adc
xor
sub
rcll
add
xchg
inc
out
push
sbb
sub
push
jbe
xchg
shlb
cmc
stos
adc
sub
popa
mov
popa
or
pop
ds
push
sub
lret
arpl
decw
rorb
test
push
mov
mov
xchg
sub
bound
mov
lods
mov
or
pop
jne
mov
pusha
push
cmp
fs
ret
divl
iret
fnstenv
addl
cmp
lock
fmulp
mov
clc
xchg
jecxz
xor
gs
jmp
cmpsb
cmpsb
jns
lock
push
and
lds
dec
shrl
fstpl
and
dec
mov
adc
cltd
push
sarb
lock
cwtl
test
push
cltd
enter
dec
sbb
xor
cmpsb
frstor
aaa
cmp
mov
cli
sbb
cmp
popa
test
dec
outsb
pop
insl
insb
mov
aas
lahf
ss
jg
sbb
push
mov
sysexit
adc
add
lea
xor
mov
and
mov
cltd
lret
in
lcall
xor
aaa
sbb
adc
in
jecxz
lret
stc
xchg
inc
stos
fisubrl
into
adc
push
lods
mov
mov
rclb
mov
xchg
movsb
sub
jge
in
lret
lods
sub
fst
in
xchg
sub
cmp
add
push
cmp
sub
pop
out
stos
clc
nop
pushf
pusha
stos
imul
add
leave
or
sbb
xor
add
sbb
sub
outsl
sbb
sbb
sbb
jle
fucom
push
mov
cmpsb
daa
imul
stos
or
xor
cmp
hlt
in
pushf
sarl
xor
sbb
lods
sbb
enter
in
stos
push
inc
fdivrs
push
jp
pop
jb
test
and
jecxz
mov
mov
mov
pop
cmc
push
pop
repnz
das
outsl
mov
or
repnz
fcmove
xchg
sub
aam
sub
mov
pop
jae
roll
add
add
mov
test
outsl
or
loop
stos
dec
cmp
jp
loope
jecxz
inc
sub
and
lea
and
std
call
pop
cmc
add
xchg
or
xor
fsubr
lret
or
fs
outsl
cld
mov
cs
dec
mov
inc
ss
inc
negb
hlt
or
lahf
sub
and
push
idivl
popf
andl
lret
fwait
movups
inc
test
sbb
fwait
mov
addr16
add
jne
pop
add
es
out
xor
mov
cmp
nop
xchg
dec
jns
sub
mov
pusha
dec
or
add
xor
jp
arpl
jne
imul
xchg
stc
mov
popf
or
fwait
in
mov
adc
lcall
adc
jle
pop
inc
je
out
movb
push
fldenv
ret
sbb
scas
mov
sahf
jp
setp
xchg
test
jne
mov
gs
std
push
xor
push
out
in
decl
cmpsl
sbb
mov
xchg
cmp
addb
sub
mov
and
int
push
dec
inc
iret
adc
nop
imul
cltd
nop
stos
dec
jns
cmp
movsb
decl
lds
lcall
pop
adc
jp
sbb
loop
or
xchg
rorb
adc
cmpsb
pop
daa
add
icebp
xchg
shl
fldenv
movsb
aam
jp
ret
lcall
mov
jns
jge
and
xor
jecxz
xor
or
mov
int3
leave
xchg
push
testl
xor
xchg
sbb
mov
adc
mov
dec
dec
mov
add
pop
test
pushf
mov
sub
in
movsb
dec
push
pcmpgtd
cmp
adcb
or
jb
lahf
cmpsl
sbb
in
rorb
mov
into
aad
adc
test
in
mov
nop
jmp
sub
loopne
paddusb
pop
and
js
sti
push
adc
mov
xchg
sub
adc
dec
cmp
and
mov
nop
xor
fsubs
mov
out
int
mov
cmc
or
xor
data16
int
jns
fimull
in
ret
dec
push
es
stos
jg
sub
push
and
or
leave
mov
mov
ret
sub
mov
and
in
clc
mov
mov
xchg
or
mov
fcomps
and
pop
mov
cli
cmpsl
push
out
aas
mov
inc
cs
lret
fmuls
outsl
fwait
lret
mov
adc
mov
or
sti
add
and
xor
sar
cmp
sar
push
sub
add
call
and
out
mov
insb
sub
mov
xorl
add
add
lds
push
lret
jle
push
mov
jns
nop
push
cmp
into
stos
sub
aas
pop
jle
imul
sub
outsl
dec
dec
xor
popf
jae
pop
adcl
mull
xor
pop
cmp
cmc
xor
dec
in
xor
mov
imull
mov
lock
dec
sti
jnp
push
out
imulb
leave
push
inc
ss
in
iret
jno
sub
pop
sub
in
bound
mov
and
je
or
sbb
sub
scas
outsl
sbb
xchg
fdivrs
push
orl
mov
sub
mov
sbb
jae
rcll
mov
andb
leave
dec
jo
mov
mov
iret
xor
mov
pop
mov
xor
mov
mov
test
pusha
push
mov
fs
test
std
or
push
push
cmp
cmp
insl
inc
shrb
mov
loope
jno
imul
cmpsl
lret
jl
in
adc
into
sub
mov
shlb
cmpsl
gs
insl
jle
jae
and
sbb
in
setp
bound
mov
adcb
inc
mov
test
pusha
in
and
lret
mov
push
daa
ror
add
aad
push
add
mov
push
sub
out
push
in
mov
popf
das
adc
inc
sbbl
inc
in
dec
cmp
push
into
push
cli
lret
add
cmpsb
std
call
xor
in
js
push
jo
dec
int3
or
sub
jo
pop
xchg
hlt
add
jle
mov
stc
pop
test
ret
jge
rorb
mov
adc
inc
mov
scas
cmpsl
movsl
out
js
dec
insb
outsl
inc
es
or
sbb
enter
call
pop
jnp
push
lret
sbb
movsl
mov
xor
outsb
int3
mov
mov
jns
jmp
test
lea
xchg
xor
aaa
lods
repz
cmp
inc
in
testl
jne
mov
repnz
idivb
mov
xor
fst
cmpsl
fistps
mov
aam
inc
dec
mov
mov
inc
ljmp
mov
fbstp
lret
or
add
jo
pop
inc
ja
sahf
push
dec
mov
sub
add
imul
mov
add
jmp
push
adcl
sbb
mov
mov
sbb
hlt
jno
stos
data16
and
subb
push
cmpsb
insl
pusha
fdiv
sahf
xchg
dec
mov
sbb
add
cmc
stc
adc
inc
aam
jns
mov
xchg
sbb
pop
fcomip
push
mov
xchg
outsb
sub
xor
les
mov
out
xchg
fistpll
imul
cmp
sbb
je
stos
push
movsl
in
leave
jns
pop
sub
rcrl
push
test
icebp
shll
sub
outsb
xor
movsb
and
dec
inc
xchg
push
lods
mov
out
jmp
cltd
dec
and
mov
mov
mov
xor
mov
lods
cmc
xchg
lret
sub
push
push
add
lock
arpl
mov
iret
sbbb
push
or
xchg
jmp
sub
dec
call
cmpl
adc
jns
dec
dec
jb
int3
insl
pop
push
mov
jne
in
jns
mov
cmc
push
fwait
sbb
jne
addr16
fcmove
icebp
inc
shlb
jns
outsl
imul
sahf
xor
pop
add
sub
into
push
mov
test
xor
add
add
loop
scas
leave
cld
xchg
pop
xor
pop
fsubl
cli
push
rcrb
stos
push
insl
ss
mov
and
xchg
roll
sbb
sub
xchg
int3
jmp
jb
mov
pop
mov
movsb
icebp
ret
and
cs
mov
das
pushf
mov
fiaddl
sti
cmp
push
push
cmpb
and
ja
hlt
xchg
stc
hlt
mov
jo
and
and
push
pop
sub
mov
jl
outsl
lods
adc
mov
int
je
xlat
stos
adc
dec
xchg
jge
or
inc
into
jno
clc
dec
mov
cmp
aaa
cmpsb
imul
dec
daa
out
cmp
sub
dec
ret
sub
xchg
mov
inc
call
jne
jo
sarb
mov
or
mov
push
movsb
popa
jnp
mov
xchg
jp
xor
ss
aam
ret
scas
push
or
fadd
movaps
sbbb
sbb
dec
and
iret
jge
sub
jg
adc
mov
mov
pop
cli
gs
mov
and
mulb
adc
jo
nop
das
adc
inc
mov
inc
adc
sbb
cmpsb
out
mov
dec
add
es
popf
iret
push
push
in
cwtl
mov
jecxz
jnp
in
cmp
cmp
call
xchg
xlat
jmp
ret
ret
sub
movsl
mov
mov
dec
or
repnz
xor
inc
and
dec
pop
bound
push
cmp
aas
data16
inc
ja
fistps
or
popa
repz
icebp
cli
adc
inc
mov
jp
in
mov
add
aas
imul
sbb
jp
jns
or
mov
inc
ljmp
inc
sarb
sbb
daa
mov
ja
pushl
rorl
jp
pushf
aaa
sti
ds
xlat
mov
pop
scas
popf
in
and
repz
push
in
push
dec
int
sbb
sbb
mov
in
jmp
pop
sbb
xlat
lock
mov
dec
cs
sbb
push
mov
jae
sbb
xchg
mov
adc
push
sbb
xor
dec
pusha
out
outsb
sub
scas
mov
cmpsb
jge
cld
xor
cltd
xchg
xor
gs
inc
lahf
dec
xchg
adc
repnz
mov
out
xor
mov
out
cltd
cs
movsb
xor
bound
or
and
xor
lahf
lcall
and
rcl
pushl
jg
inc
push
inc
fdivrs
pop
nop
inc
mov
lret
dec
dec
pop
sub
lods
mov
insl
mov
bnd
sbb
mov
cmp
jecxz
addr16
mov
push
lods
adc
dec
dec
das
mov
enter
push
movlhps
ss
stc
stc
lods
pop
in
fwait
arpl
adc
lds
mov
xchg
pop
aad
adcl
flds
out
cmp
mov
mov
adc
fidivrl
xchg
pop
xchg
add
pushl
and
fcoms
dec
movsl
aad
imul
xor
imul
fwait
adc
fistpll
mov
adc
xor
cmp
jno
push
in
arpl
push
mov
pop
mov
mov
jmp
sub
inc
jl
aam
addb
and
lret
xchg
ds
and
test
cltd
adc
insl
mov
notl
iret
pop
dec
inc
scas
pop
in
into
jno
cmp
into
fcmovnb
inc
cmp
adc
add
sub
arpl
loop
fidivrl
fdivrl
es
ja
sub
sbb
cmp
add
scas
cwtl
inc
subl
shr
arpl
push
cmc
out
inc
pop
pop
pop
inc
jp
addb
divl
or
inc
nop
and
push
dec
je
shl
ds
xchg
in
xchg
clc
aaa
mov
add
std
push
mov
inc
jnp
outsw
roll
mov
leave
jge
mov
push
or
sbb
adc
xor
fmull
daa
repz
jo
pop
mov
popa
cmc
das
sbb
inc
mov
mov
or
leave
das
xchg
xor
mov
pop
in
scas
icebp
lret
add
leave
inc
jne
outsb
inc
xchg
or
mov
in
adc
lahf
cmpsl
in
cmp
out
lahf
or
cmp
test
dec
mov
mov
pop
cmp
or
inc
test
aaa
sub
fs
and
test
inc
dec
outsl
fwait
jnp
push
jne
aaa
ds
jg
sahf
mov
aaa
fwait
cld
call
add
notb
push
push
pop
fidivrs
mov
in
int
enter
movsl
xchg
jae
cmp
cmp
jg
push
mov
jae
mov
hlt
cmpsb
popf
iret
insb
inc
push
pop
jmp
clc
lret
cli
sub
test
int3
loope
fcoml
sbb
inc
push
mov
fidivl
je
lahf
outsl
aaa
push
outsb
add
or
jne
xor
sub
inc
xor
sub
add
adcl
lods
cwtl
pop
adc
inc
and
pop
inc
cmpb
int
push
inc
sub
scas
clc
mov
clc
push
push
and
imul
lret
iret
pusha
fadd
push
and
repz
mov
loop
fs
lock
xor
rorb
and
js
add
into
pop
lcall
xchg
rcll
mov
gs
pusha
sub
pop
sar
jecxz
push
lds
xlat
fildll
jmp
xchg
insl
mov
xor
cli
push
outsb
xor
mov
push
mov
sub
addr16
bnd
fildll
jl
aaa
push
stos
cld
aas
mov
adc
cmpsb
cmpsb
xchg
pusha
add
mov
sahf
mov
cli
shlb
sbb
test
jecxz
scas
repz
lock
movsl
or
pop
mov
xchg
outsl
sbb
adc
les
push
rolb
scas
out
mov
mov
lods
dec
aas
dec
leave
cmp
xchg
mov
jno
mov
sahf
inc
fidivrs
cmovne
push
pop
mov
mov
jb
inc
mov
and
lea
push
sbbl
rorb
dec
dec
mov
pop
sbb
jnp
insb
mov
aad
dec
and
push
dec
sub
pusha
cmpsl
and
clc
pop
ss
inc
inc
cmp
movsl
scas
sub
jne
pop
xor
sub
ss
dec
ret
bound
insb
ret
aad
push
jne
imul
or
aam
insl
inc
rorb
ljmp
pusha
movsb
mov
add
outsb
call
push
mov
xor
mov
aad
adc
add
push
test
sub
add
cmpsl
sbb
sbb
cli
int
adc
mov
iret
push
outsb
or
inc
pop
repnz
mov
bound
inc
add
das
cmpsl
je
sarb
movsb
jb
icebp
xchg
sub
loope
push
sub
mov
add
push
mov
cmp
or
adc
repnz
and
pushf
mov
aad
fs
xchg
push
data16
mov
iret
ret
jp
in
and
mov
daa
xor
dec
inc
ret
out
sub
jge
scas
fldl
mov
enter
cmpsb
loopne
push
xchg
ret
cmpsl
scas
sbb
adc
inc
or
mov
lock
sub
xor
insb
mov
jecxz
sbb
cltd
sub
movsb
stc
or
mov
push
mov
fistpl
imul
lret
bswap
pop
jb
loop
push
arpl
pop
cmp
adc
pop
popf
xor
scas
test
jge
push
mov
nop
and
fnstenv
sbb
xor
lods
push
jp
mov
mov
pop
dec
xlat
scas
inc
jae
jmp
js
inc
jmp
mov
shlb
pushf
sti
mov
mov
push
addr16
pushf
loop
mov
std
into
adc
pusha
orl
fisubs
lock
scas
fadds
scas
mov
sbb
ss
test
mov
or
jle
push
or
push
and
ljmp
sbb
addb
es
lea
mov
jbe
mov
cmp
rcll
cmpsl
sbb
pop
add
jae
fwait
mov
push
sbb
insb
push
sub
xchg
out
cmpsb
es
pushl
mov
mov
loopne
imul
inc
sti
mov
add
mov
dec
out
mov
out
orb
push
sbb
clc
add
nop
cs
xor
das
inc
adc
pop
insb
mov
enter
or
xor
out
aad
lret
inc
mov
je
in
add
repnz
fisubrs
test
adc
movsl
addr16
xlat
sub
mov
out
sbb
mov
movsl
jmp
das
and
shlb
xchg
cli
ja
jl
dec
test
jp
sbb
pop
in
jecxz
addr16
xor
and
mov
xchg
mov
imul
mov
inc
jnp
fs
adc
fildl
imul
jb
adc
lea
dec
push
or
outsb
scas
outsl
cs
inc
pop
call
xchg
sub
mov
insb
push
rol
sbb
adc
cmp
push
and
rcl
sub
arpl
mov
insl
fwait
push
xor
das
pop
sbb
nop
add
pusha
ss
pop
mov
call
ljmp
fdivrl
aaa
in
notb
es
nop
xchg
sub
jne
lret
mov
cltd
shl
pop
mov
and
dec
outsl
sub
in
inc
xchg
loope
ret
sbb
dec
int3
cld
cmp
xor
jmp
pop
je
inc
pop
mov
mov
inc
outsb
bound
dec
stc
mov
jae
les
sbb
mov
sbb
into
mov
hlt
add
sub
add
pop
mov
leave
cld
loope
and
dec
mov
mov
shll
mov
repnz
jmp
pop
sbb
loope
push
repz
xorl
insl
mov
adc
dec
dec
mov
subl
dec
mov
pop
dec
add
mov
ss
jecxz
xchg
sub
sub
inc
dec
aas
inc
xchg
jle
mov
bound
fdivs
bndldx
sarb
insb
mov
aad
sub
fldcw
pop
or
hlt
movsl
mov
cmpsb
scas
loopne
push
or
adc
jle
ds
fwait
lock
mov
jle
xchg
cmp
xchg
jp
jmp
rclb
sbb
outsb
sub
call
sub
and
fidivrl
rorb
xchg
and
dec
lock
aas
out
inc
mov
in
xorb
pop
daa
or
jecxz
pop
loop
pop
push
xchg
or
push
cwtl
scas
int3
jg
mov
fbstp
push
push
mov
sub
mov
jo
ss
pushw
xor
stc
jle
jnp
in
in
fs
pop
insl
mull
bound
sarb
xchg
sbb
imul
and
or
lret
hlt
aas
push
dec
xor
int
insb
nop
fyl2x
fmul
call
fidivs
scas
fcmovnbe
or
test
mov
pushf
jae
mov
sti
push
test
inc
push
dec
xor
jno
out
inc
cmc
lods
test
lds
divb
call
loopne
mov
sub
push
pop
sbb
faddl
mov
scas
in
push
and
idivl
mov
cmp
mov
pop
ret
mov
repz
sbb
shlb
or
cmp
mov
dec
cmp
xchg
cmc
add
shrb
divb
imul
fs
mov
mov
mov
inc
cltd
fbld
loop
and
cmp
cmp
adc
mov
adc
cmpsb
inc
pushl
dec
sbb
or
and
cmpsb
push
loope
cwtl
dec
stos
fists
mov
enter
push
cs
movsb
ljmp
cli
and
test
cli
sub
xlat
loopne
insb
sti
imul
out
int3
les
pop
les
and
scas
inc
arpl
loop
cmc
dec
inc
and
xchg
mov
jae
les
aaa
cmp
fistps
out
pusha
ror
js
push
pop
sbb
cmpsl
aaa
mov
dec
cmp
ss
int3
stos
ret
mov
adc
arpl
sbb
mov
mov
mov
dec
jge
aas
shlb
and
pslld
push
sbb
push
mov
lret
mov
sbb
aam
cmovo
sar
sub
sub
out
jmp
adc
fstps
rorl
cmp
add
cs
push
mov
push
cmpb
xor
cmpsb
and
clc
jbe
rcl
push
jmp
imull
imul
in
test
imul
fstps
mov
mov
and
xlat
mov
fs
in
sub
arpl
mov
pop
push
lahf
push
sbb
roll
mov
arpl
sarl
push
jp
cmp
in
out
rorb
push
mov
sbb
push
dec
xchg
out
cld
sbb
xchg
push
mov
pop
addl
test
int
lods
andb
sahf
add
lods
mov
sbb
jle
mov
cmp
mov
cs
mov
mov
sub
dec
lock
lret
aas
stos
xor
xchg
pushf
or
movsb
fs
dec
sbb
loop
adc
or
cmp
xor
test
dec
or
xchg
arpl
jp
sub
sbb
es
sub
sub
sub
nop
icebp
or
pop
imul
sbb
in
pop
mov
test
xor
xor
pop
xchg
mov
gs
fldt
scas
jl
adc
pop
mov
mov
les
mov
and
repz
fscale
popa
cld
aas
inc
dec
sarb
hlt
push
xor
int3
mov
xchg
adc
mov
shlb
cld
mov
fimull
out
or
or
sub
imul
fistpl
xchg
lret
jb,pt
popa
mov
mov
bound
cs
addb
aad
loopne
dec
jmp
loop
lock
test
stc
shlb
popa
adc
sahf
movsb
mov
and
push
repz
sub
movsb
jne
shll
pop
and
pop
cld
xor
pop
fs
scas
lds
movsl
sbb
jl
jl
pop
ror
icebp
sbb
movsb
push
decl
das
xor
bound
cmc
sub
xchg
loop
sbb
pop
scas
jo
cmp
arpl
idiv
test
stc
push
fwait
out
out
dec
mov
call
push
cmp
std
sub
mov
sarl
hlt
push
pmaxub
or
mov
test
adc
clc
lret
sub
lock
ret
push
push
pusha
dec
les
mov
repz
adc
fpatan
push
imul
push
inc
pusha
aas
and
cmp
cwtl
fnstenv
loop
cwtl
adc
dec
loop
test
outsl
movsl
inc
mov
pop
lahf
mov
popa
subb
cs
loop
loopne
insb
and
pushl
and
push
adc
cmp
mov
pop
or
jae
cmp
outsb
mov
fnstenv
sarl
les
mov
cmp
lea
push
loope
mov
ds
xchg
push
push
notrack
fnstcw
nopl
out
mov
push
xchg
cmp
mov
iret
lcall
mov
cmpsb
sbb
mov
inc
jl
xor
xor
cmp
xchg
push
repz
ja
inc
push
adc
mov
movsl
sub
dec
push
into
fs
xorb
fnstsw
mov
inc
dec
cmc
push
inc
and
cli
das
subb
and
daa
lret
sub
pop
jno
xchg
popa
push
and
xchg
adc
lds
jb
mov
and
lods
mov
cli
add
fmuls
xchg
aas
jbe
mov
and
movsl
xor
test
in
xchg
push
dec
sbb
cmp
cmp
inc
mov
push
cmp
repnz
jge
xor
or
ret
out
sub
push
in
movsl
hlt
pop
scas
push
inc
daa
inc
mov
leave
xchg
xchg
ljmp
aaa
outsb
xor
mov
pop
out
shlb
sbb
sub
xor
fmul
xchg
iret
test
cmc
sub
inc
mov
or
sbbb
push
jecxz
mov
shll
sbb
fisubl
aam
push
sub
gs
jle,pt
js
in
loopne
inc
rorl
dec
mov
test
outsl
jp
adc
jge
scas
aam
adc
cli
sbb
xrelease
je
mov
add
popa
dec
fnsave
inc
mov
jb
les
add
jno
dec
jle
or
adc
jmp
add
add
leave
les
inc
les
jns
push
test
and
pop
fstpl
insb
out
jecxz
dec
lret
push
sub
loop
xchg
pop
adc
outsl
mov
sub
je
add
mov
shl
out
ja
cmp
mov
call
addr16
cs
add
lds
sub
push
int
adc
cltd
jns
repnz
jg
mov
mov
and
fs
enter
jp
aaa
pop
out
inc
sub
sbb
add
enter
sbb
xor
call
lods
inc
or
push
pop
pop
dec
lea
adc
mov
jnp
cmp
add
push
js
faddl
mov
push
loop
scas
pop
gs
jae
cli
inc
xor
xchg
inc
bound
mov
pop
fstps
xchg
es
mov
sub
jp
or
lods
pop
dec
aas
call
sbb
mov
mov
cmp
scas
adc
xor
push
push
test
shll
popa
sub
in
rolb
sarl
lahf
dec
ds
add
je
ret
nop
lock
insb
pop
sbb
xlat
xchg
sub
bound
pop
mov
inc
fwait
push
jg
push
xor
push
mov
rorb
inc
xchg
mov
jmp
outsl
fmull
das
shl
or
push
cmpsb
sti
add
ficoms
jecxz
sarl
cmpsl
pop
loopne
jo
adc
pop
push
das
cwtl
pop
cwtl
jno
xchg
sub
sahf
shr
imul
mov
dec
ret
ja
jmp
pop
cli
lahf
pop
divb
ja
dec
pop
addr16
xor
cmp
aas
inc
ret
xchg
scas
mov
orb
adc
es
gs
shlb
es
mov
out
adc
popa
icebp
add
adc
push
push
sbb
les
push
iret
xchg
xor
dec
out
roll
sti
mov
jp
aam
add
mov
in
push
mov
xchg
enter
push
pop
jmp
in
mov
push
mov
stos
out
xor
cmpsb
sbb
cli
jecxz
mov
clc
sub
stos
sbb
mov
pop
rolb
pop
test
jno
mov
fnstcw
inc
xchg
inc
lcall
dec
mov
jnp
cwtl
inc
xorb
add
inc
jmp
stos
mov
push
frstor
cli
jmp
jb,pn
lods
nop
fstpl
and
sub
mov
xor
scas
cmp
cltd
mov
jge
mov
ljmp
mov
and
out
push
in
xor
adc
or
pop
mov
dec
mov
push
dec
js
mov
mov
ret
fsubs
fistl
popa
aas
jg
xor
xor
xlat
mov
cs
pusha
lods
test
push
jb
mov
sub
out
and
adc
mov
sbb
aaa
sbb
aad
xor
imulb
out
jle
jecxz
mov
xchg
stos
outsb
in
xor
int3
jl
pop
cmpsb
inc
push
jno
jae
adc
fiadds
mov
rcrl
adc
jbe
mov
jnp
daa
sarb
pusha
lock
aas
mov
jno
add
pop
leave
ret
aam
sbb
mull
xchg
loop
imul
rolb
pop
fidivrs
pop
mov
nop
cmp
and
mov
adc
inc
adc
clc
aam
xchg
insl
jmp
sbb
rolb
mov
rcrl
mov
andl
divl
xchg
leave
pop
fidivs
mov
cmpsl
xlat
pop
cli
insb
pusha
mov
jge
mov
js
test
adc
xchg
dec
scas
mov
and
lds
cmc
in
enter
push
sub
leavew
aas
fimuls
jbe
fsubl
mov
inc
dec
jae
and
fistpll
mov
push
xor
xor
jg
lcall
xabort
and
add
stc
enter
mov
jno
inc
lods
pop
lds
jmp
prefetch
or
dec
nop
add
shrb
pop
dec
adc
daa
gs
mov
xchg
lcall
pop
mov
pushf
icebp
jg
adc
dec
sbb
jne
push
or
push
int3
gs
aas
xchg
xor
mov
adc
inc
shlb
sub
mov
push
push
xor
add
sbb
icebp
aas
rclb
std
push
stos
mov
repnz
ja
push
dec
mov
mov
lea
iret
lcall
pop
xor
add
nop
mov
test
and
das
mov
subl
jno
mov
mov
loopne
sub
cmpb
mov
sbb
xor
and
pop
cmp
scas
das
push
in
sbb
xor
jl
mulb
sar
mov
popa
inc
sbbb
sti
pop
push
sti
imul
lock
repnz
or
jmp
adc
sub
iret
add
inc
inc
sbb
cli
lock
cmp
mov
xor
pop
mov
xor
and
adc
push
fbld
cltd
cmpsb
mov
ficoms
mov
test
jb
jnp
test
push
rorl
lcall
roll
pop
stc
pushf
fs
repz
je
popa
jns
lahf
adc
fldcw
xchg
xor
jle
sub
leave
int
mov
ja
and
adc
cmp
ds
in
push
and
pop
sahf
mov
or
bswap
dec
and
add
fwait
push
pop
mov
lahf
nop
add
aam
mov
sub
sar
sub
mov
cmp
mov
inc
mov
sbb
mov
fistpll
in
aaa
add
loopne
fisubrs
or
pop
int3
sub
xor
sbb
loopne
call
int3
dec
pop
cmpsb
int
adc
fnsave
test
push
add
inc
cmp
mov
push
jge
cmp
ret
jle
in
dec
mov
xlat
data16
jp
nop
inc
jb
jge
push
xchg
and
movsl
jb
jl
test
repnz
or
xchg
xor
mov
xchg
fsub
dec
jmp
xor
out
jne
or
test
pop
out
insb
and
push
jbe
mov
rcrl
cmp
sbb
setnp
popf
scas
push
or
xchg
cmpsl
xchg
xor
sub
cmpsl
dec
pop
sahf
daa
or
sbb
add
mov
push
addb
cmp
mov
sbb
mov
sti
stos
fidivs
incb
lcall
dec
out
pusha
rol
mov
pop
and
dec
adc
shlb
daa
push
xchg
dec
ja
popa
leave
dec
or
mov
sub
sub
sbb
cli
push
ja
fsubrl
lods
inc
lret
leave
cmp
outsl
sbb
idivl
lret
sbb
add
faddl
int
pop
jo
loopne
jo
add
js
pusha
mov
push
daa
or
push
into
outsl
scas
mov
aaa
pop
divb
sbb
adc
ss
mov
lods
adc
sbb
push
sahf
dec
add
adc
fstpl
bound
cld
sub
in
cmpsb
mov
or
sbb
cmpsb
pop
aam
jge
fists
scas
and
out
xor
xchg
js
aad
inc
je
pop
in
pop
dec
loopne
dec
shll
ret
push
sbb
sub
or
cmp
es
aad
repz
addl
jb
xchg
fst
mov
out
dec
iret
sti
and
adc
ljmp
sub
adc
scas
es
mov
sbb
les
xchg
xor
lret
imul
arpl
inc
addr16
push
into
test
shrd
lahf
mov
dec
imul
ja
xchg
testb
mov
sub
jmp
icebp
pop
test
sbb
and
dec
pop
sub
add
addl
jl
add
push
shr
test
push
mov
push
scas
ds
shrb
adc
mov
imul
ljmp
or
ja
sbb
ljmp
xchg
aaa
push
dec
lcall
sub
and
xchg
add
test
mov
adc
ljmp
lahf
mov
aaa
adc
ret
aas
pop
lds
clc
in
test
or
jo
lea
mov
push
add
std
popf
jp
cmpsb
sub
stos
insl
repz
popa
loopne
ficompl
jb
sbb
sub
test
inc
sti
jp
sbb
add
loop
sbb
out
test
inc
hlt
outsb
stos
fisubrs
in
push
push
movsl
filds
adc
jae
xchg
out
inc
pop
xchg
test
xchg
imull
pop
data16
adc
mov
fwait
jno
adc
jo,pt
or
test
jg
js
rcrl
or
movaps
jg
mov
sbb
xchg
or
pop
xor
add
cmp
dec
push
fstpt
ret
lods
add
xchg
in
sahf
xchg
icebp
sbb
loop
dec
adc
pop
int
adc
jb
stos
in
push
push
stos
inc
out
xor
stos
cld
mov
enter
pop
arpl
xchg
cmpsb
xchg
adc
mov
in
adc
inc
jno
xchg
mov
push
mov
pop
fcmovb
dec
je
fidivl
mov
push
xchg
int
mov
enter
jae
or
and
lds
adc
repz
pop
repnz
dec
in
add
push
je
movsb
test
mov
pushf
and
imul
mov
arpl
mov
decb
ss
xor
addr16
mov
cmpsb
insb
loop
aas
in
fstpt
pop
and
inc
jae
daa
and
test
push
mov
xchg
fidivrl
dec
lock
jle
cmp
or
sbb
popa
cs
sbb
stc
inc
adc
fistl
add
sub
and
dec
jmp
cmpsb
push
pop
jbe
pop
cmpsb
push
cld
jns
ss
sbb
dec
aaa
jecxz
leave
das
hlt
pop
pushf
mov
loopne
xor
test
lret
mov
fsubrl
sub
loopne
dec
cltd
jnp
add
cs
mov
ret
rolb
stc
notl
aas
pop
mov
rcr
xor
cmpsl
lds
jb
in
dec
fsubrl
dec
cmp
jl
push
dec
adc
lds
or
pop
jge
cld
jne
popa
sub
sub
mov
ss
sbb
xor
xchg
jg
jno
and
xor
xchg
addr16
fnstcw
imul
mov
inc
lahf
or
jnp
or
xor
jle
adc
mov
out
xor
in
pop
mov
es
int3
stos
xchg
ja
jl
into
sub
adc
push
mov
lcall
aas
je
test
fprem1
jl
inc
mov
sub
sub
and
stc
rcrl
add
xchg
ja
push
mov
jmp
mov
xor
fwait
imul
test
mov
xchg
fcmovnbe
add
pop
sbb
jo
mov
sub
incb
dec
lahf
cmp
add
leave
ljmp
fldenv
pop
rcl
push
xchg
js
or
cs
test
int3
call
xchg
xchg
lahf
sti
mov
adc
movsb
sbb
mov
pop
leave
mov
test
movsl
jbe
imul
cli
lods
cmp
ja
inc
icebp
adc
stos
xchg
adcl
addr16
xchg
add
shl
inc
inc
mov
stos
stos
mov
or
fisttpll
stos
pop
jo
icebp
mov
es
jne
or
adcb
or
cld
adc
jb
int
cld
push
mov
sub
dec
lahf
out
xchg
clc
pop
and
test
add
add
out
xor
mov
cmp
into
mov
js
cmp
xor
mov
pop
je
and
loopne
sub
jge
das
add
fmull
add
fisubs
xorl
ljmp
push
dec
call
bound
pusha
jnp
xor
mov
mov
nop
dec
inc
mov
mov
xchg
xchg
enter
cs
ds
test
test
sub
cmp
aam
sub
sub
cmc
scas
jl
out
out
fs
mov
std
ror
cltd
add
dec
adc
shl
arpl
into
inc
jbe
or
mov
mov
nop
cmc
and
enter
not
adc
sbb
rcrb
and
inc
test
jle
vmread
aaa
push
inc
iret
lock
mov
sub
pop
lcall
cmpsl
data16
lds
daa
mov
jge
ja
aam
mov
inc
xchg
in
add
arpl
or
dec
push
jmp
mov
aam
je
and
js
out
pop
and
push
pop
adc
xor
push
gs
mov
dec
xor
sub
scas
xor
outsb
xchg
in
push
push
lods
mov
mov
push
scas
xchg
insl
loope
mov
testl
es
js
mov
or
pop
nopl
and
call
sub
mov
js
lods
or
repnz
and
test
repz
testb
inc
cmp
push
inc
imul
jp
inc
int
add
sti
nop
inc
mov
push
pop
sbb
loopne
pushf
jno
jb
insl
out
jbe
pushf
jl
mov
push
xor
cmp
jnp
scas
stos
dec
jno
gs
outsl
imul
sbb
mov
push
rcrl
and
jecxz
mov
cli
pop
cmp
stc
mov
insb
movsl
dec
ds
cmp
fisttpll
dec
xor
int
stos
sahf
sub
rolb
mov
andl
pop
rolb
fs
dec
lcall
ret
dec
sub
or
aad
mov
lock
sbb
xor
push
mov
mov
decl
xchg
adc
push
jl
subb
jo
test
or
jnp
ss
addr16
jb
scas
xchg
repz
jl
and
xchg
sbb
cmc
mov
out
ret
daa
mulb
idivl
jo
mov
xor
stos
ret
and
lcall
in
mov
or
stos
in
push
inc
push
jb
clc
push
xchg
ljmp
rcll
xchg
int
test
enter
xlat
xor
fs
ficoml
pop
sub
add
fistl
les
sub
adc
or
sub
dec
cmp
mov
and
xchg
ja
fistl
and
jb
test
pop
jb
mov
daa
in
adc
bound
mov
cwtl
jo
mov
scas
fprem
cmp
int
testb
jno
push
mov
mov
cmpsb
out
cli
pop
sub
adc
xor
test
nop
xor
data16
mov
daa
adc
mov
aas
dec
lock
mov
mov
fldcw
jge
ficoms
icebp
mov
mov
adc
xchg
pop
fcom
or
sub
mov
inc
adc
imul
idiv
or
pop
arpl
mov
lds
jns
icebp
ds
dec
and
popf
sub
sub
mov
sbbb
xor
and
lods
dec
pavgb
xor
mov
inc
inc
xchg
pushf
lods
mov
xchg
adc
sbb
sub
pop
leave
mov
imul
xor
test
add
push
bound
mov
cmp
xchg
lods
loopne
mov
gs
dec
lods
ja
imul
inc
inc
push
jmp
adc
sbb
sbb
xorl
xor
push
fstl
xchg
inc
and
or
jp
add
inc
test
push
cmp
lcall
sub
js
adc
aas
xchg
daa
add
mov
sub
mov
mov
pop
add
int
jne
cltd
inc
cld
mov
sbb
repz
xor
je
fiadds
jge
daa
les
push
dec
imul
inc
pusha
sbb
dec
ds
sbb
mov
addl
inc
pop
fbld
cld
pop
mov
pop
lods
das
dec
subl
sti
cmc
cmp
dec
lcall
cmp
test
mov
ret
jg
inc
and
movsb
xor
and
mov
addr16
testl
out
xchg
test
cld
xchg
dec
mov
add
and
dec
lahf
scas
jmp
fistps
push
decl
fsubrl
inc
out
cli
enter
lea
xor
lea
in
mov
push
lods
movsb
adc
jle
or
flds
mov
cmpsb
cmp
inc
cmp
push
add
lods
pop
push
rorb
arpl
testl
lock
fstp
or
leave
push
cmpsl
sbb
dec
xlat
dec
jae
push
std
cmp
lea
xor
xor
lahf
cltd
ret
imul
stos
cmp
mov
or
jg
xchg
pop
sarb
pop
sets
sub
outsl
das
fcomps
cmp
lods
out
data16
lods
hlt
push
mov
scas
inc
test
nop
lock
out
jle
mov
xchg
mov
es
popf
lea
out
cmpsl
sub
mov
test
das
vpshlq
divb
leave
in
jl
daa
adc
dec
loopne
pop
add
in
add
pop
sar
jg
leave
push
inc
test
es
mov
mov
in
loop
mov
push
mov
xchg
xchg
sbb
arpl
fcmovnbe
stc
fcmovnb
outsb
pop
mov
inc
push
xchg
mov
cmc
and
mov
subb
out
mov
out
out
rcrl
lds
adc
sub
in
popa
lret
pop
mov
pushf
dec
add
call
adc
lods
pop
aam
mov
fcomip
mov
mov
ja
arpl
mov
mov
and
stos
sti
push
data16
cli
pop
and
mov
mov
das
shrb
xchg
out
call
idivl
or
cmpsb
or
pop
mov
add
jo
mov
dec
ja
sub
adc
js
jns
mov
out
or
adc
shrb
scas
nop
roll
movsl
outsb
xchg
scas
sub
das
imull
sbb
adc
sbb
push
xor
or
jnp
pop
std
and
stos
into
cmp
push
mov
adc
jbe
inc
mov
lock
or
and
inc
inc
es
pop
popa
push
andb
ret
jmp
dec
loop
push
or
inc
push
ret
inc
mov
jmp
loopne
leave
mov
xor
jae
fs
cwtl
and
test
dec
movsb
bound
fdivs
jmp
clc
and
or
ror
jl
push
sub
or
xchg
rcrl
movsb
jge
dec
rcrl
lcall
cmp
test
stc
push
pop
pop
push
in
negl
out
add
push
xor
test
adc
dec
scas
loopne
cli
je
fwait
loopne
mov
sbb
cwtl
or
pop
fcoml
sbb
repz
ss
fst
inc
dec
lret
jmp
jl
hlt
push
jmp
mov
imul
pop
inc
sti
jnp
or
push
daa
pop
pop
out
cmp
dec
and
mov
in
pop
adc
shl
mov
xor
dec
pop
xor
mov
cli
scas
lahf
int
sub
and
sub
mov
stos
jge
cmp
ja
aad
fwait
in
pop
xorb
and
mov
jl
dec
xchg
cltd
jbe
fcmove
push
test
std
push
mov
es
pop
pop
outsb
shll
mov
cwtl
inc
mov
jp
jne
ja
js
insl
dec
mov
sbb
inc
inc
movsl
ja
jmp
lods
cmp
incb
clc
add
jo
into
xchg
mov
outsb
mov
addr16
jecxz
lret
stos
mov
loopne
fucom
adc
xor
push
xchg
outsb
fs
pop
jmp
test
push
addr16
sub
fcompl
jp
pop
fdivl
out
in
stos
sbb
mov
sub
sub
aaa
dec
dec
scas
jecxz
add
jge
or
xchg
pushf
enter
data16
xor
or
pushf
adcl
or
or
movl
pop
inc
cs
cwtl
hlt
jle
add
mov
cmpl
adc
add
sub
rcrb
xor
jp
ret
dec
and
mov
imul
mov
push
mov
out
inc
cmc
dec
jnp
cmpsb
hlt
inc
ret
push
std
cltd
test
enter
ljmp
jecxz
jmp
add
insb
sbb
cmp
push
scas
sub
xor
ret
dec
cli
imul
jns
lock
gs
inc
popa
and
nop
shlb
frstor
cli
fldl
xor
out
les
push
push
mov
movsb
inc
or
mov
dec
inc
testb
cmp
pop
lret
mov
xchg
cld
lcall
pop
sub
and
mov
jecxz
test
aas
rorl
ret
sub
jns
mov
mov
jg
fsubrl
push
adcl
add
mov
push
dec
sbb
adc
pushf
in
xor
cltd
lods
leave
mov
or
push
mov
outsl
and
jns
in
neg
pop
xchg
push
stos
pop
and
ret
jno
mov
fmuls
lcall
fistpl
notb
adc
mov
imul
call
rcll
cmp
jl
jno
jp
das
leave
rolb
mov
sub
enter
icebp
iret
insb
and
pop
fwait
lods
adc
clc
xchg
pop
cmp
ljmp
cld
mov
insl
cmp
int3
mov
xchg
adc
jp
lods
dec
jp
and
push
imul
out
les
pop
adc
dec
push
add
arpl
pop
pop
mov
orl
or
push
out
xor
test
mov
jmp
call
adc
sub
mov
add
aad
lods
cld
sahf
out
pop
stc
dec
cmp
xchg
pop
mov
mov
mov
push
fsubp
subb
aas
out
push
jno
movsb
xchg
jmp
cmpsb
test
in
push
xchg
mov
cmp
pop
aaa
dec
cwtl
add
lods
aas
icebp
inc
mov
int3
xor
inc
push
and
jg
in
xchg
sub
mov
mov
jmp
mov
scas
cmp
sti
xor
es
xchg
pop
cli
add
mov
pop
nop
jp
xor
cmp
loop
adc
sbb
pop
lock
inc
dec
and
xchg
pop
test
lret
mov
mov
popf
outsb
inc
adc
inc
call
adcl
int
mov
fwait
pop
daa
out
ret
jne
imul
insl
xchg
xchg
dec
adc
adc
or
aaa
insl
lods
subb
xchg
in
and
xchg
enter
inc
cli
popa
sarb
cli
imulb
pop
adc
aas
mov
adc
dec
pop
mov
cwtl
jb
sbb
pop
mov
lea
andl
out
or
pop
roll
mov
sub
pop
jns
iret
push
inc
and
xchg
mov
into
das
adcb
mov
sarb
and
ret
lock
push
sahf
pop
movsb
sub
mov
or
stos
xchg
and
jae
test
pop
stos
xchg
xchg
mov
addr16
ds
pop
sbb
mov
sub
cli
aaa
out
jno
cmp
lret
mul
mov
loop
inc
int
sahf
jmp
push
cmpsb
pop
adc
stc
cmp
inc
pop
cmpsl
in
cmpsl
out
mov
ss
adc
jle
push
ret
mov
das
jo
in
jge
ja
xor
loopne
sbb
popf
dec
xchg
scas
les
mov
lahf
or
push
dec
popf
mov
jbe
shll
mov
mov
push
push
aas
rclb
sti
aam
ftst
add
gs
pushf
or
shll
out
test
mov
movsbl
and
xlat
dec
add
jp
shrb
xchg
jb
cwtl
sbbl
js
lods
cmp
dec
iret
mov
daa
xorl
mov
into
lock
cmpsl
adc
add
dec
fs
stc
aas
and
pop
mov
xlat
add
xchg
bound
or
dec
loopne
mov
push
jb
fisttpll
data16
pushl
xchg
movsb
xorl
mov
pop
cmp
clc
ret
xor
cmp
pop
daa
jno
ds
sbb
fistps
ljmp
insb
sbb
cmp
lods
sbb
mov
mov
inc
cmp
jbe,pt
adc
mov
add
mov
mov
xchg
out
adc
ja
clc
jp
sbb
add
out
xchg
jp
pop
sub
mov
clc
mov
mov
adc
mov
stos
xchg
dec
cmp
lods
inc
lods
cmp
iret
shr
aas
sbbl
jmp
sub
into
pop
movsl
dec
fdivrp
mov
jns
push
ret
sahf
imul
mov
sti
jl
or
jmp
inc
test
dec
xor
or
adc
jns
shll
pop
stos
cwtl
mov
orb
mov
lods
scas
push
mov
imull
daa
mov
gs
xor
rol
sub
and
ja
fdivl
sarb
out
sbb
sbb
pop
addr16
mov
je
xchg
popa
in
addr16
dec
mov
rol
xchg
cmpb
and
inc
ffree
jle
push
sbb
sbb
add
and
jnp
fbld
aaa
sub
lods
cmp
mov
xorb
adc
insl
ret
pop
and
repz
jb
push
or
clc
sarl
mov
outsl
daa
xchg
ja
mov
scas
mov
outsb
xor
xor
and
setl
jge
ja
xor
xor
jne
xor
sahf
mov
fwait
xor
cmp
imulb
jmp
sti
cmpsb
scas
cs
les
push
sbb
js
es
icebp
pusha
jb
xchg
add
cmc
adc
or
test
std
dec
into
jo
or
inc
mov
rorb
cmp
ljmp
loopne
addr16
aaa
jae
xor
scas
fwait
mov
das
loop
sub
pop
repz
addr16
jae
jge
cld
ss
fiaddl
sbb
daa
ret
test
jne
mov
adc
loopne
sarb
js
mov
aam
inc
push
mov
jecxz
xor
push
inc
lea
mov
mov
pop
iret
into
sbb
cwtl
idivb
cli
repnz
dec
xchg
in
add
jae
jl
test
repz
jae
scas
mov
and
dec
fidivl
xor
add
lds
incb
imul
nop
jge
fistpl
sub
inc
mov
inc
jl
std
mov
sub
push
cmp
ficoms
in
lods
sbb
loope
stos
js
dec
xor
xor
int
ret
rcrb
jb
xchg
sub
jb
enter
int3
test
das
cmp
imul
ret
arpl
sbb
pusha
testl
aaa
jecxz
shrb
dec
mov
or
push
mov
sub
movsb
push
out
push
and
dec
pop
aaa
push
mov
outsb
imul
sub
js
pop
xor
mov
cmp
cwtl
popf
mov
je
dec
push
cltd
xchg
xchg
adc
idiv
ficoms
cmp
jp
xchg
aam
insb
and
sahf
popf
in
ljmp
test
mov
lret
cld
out
aas
xlat
test
scas
mov
dec
or
pop
sbb
out
mov
sub
push
popa
mov
fwait
xchg
mov
mov
movsl
addr16
push
and
push
jae
andl
xchg
dec
ljmp
insb
or
push
sub
mov
pushf
or
sbb
push
outsb
push
adc
jge
mov
es
push
cmc
jl
seto
pop
sbb
es
roll
push
jae
xor
adc
mov
ficoms
js
adc
jp
xor
pmulhw
gs
inc
insl
sbb
aam
mov
mov
shlb
xor
int
ljmp
inc
or
and
inc
and
test
xchg
adc
movsb
mov
mov
pushf
and
push
incl
push
sub
inc
push
popa
fisttpl
mov
data16
xchg
mov
divb
jecxz
bound
mov
shlb
push
or
push
push
pop
imul
push
popf
pop
pop
inc
xor
xor
xchg
rcl
or
add
push
push
pop
push
cmp
icebp
dec
stos
ja
cwtl
scas
lret
aad
call
negl
movsl
movsb
inc
or
sarl
pop
loop
inc
mov
inc
sub
cltd
clc
cmp
jae
mov
sbb
mov
dec
xchg
mov
inc
pushl
pop
loope
sbb
lret
inc
xlat
add
adc
xchg
push
sbb
lret
fwait
fwait
jnp
and
int3
add
cmp
inc
adc
aaa
jne
rol
push
lods
aas
push
je
jbe
adc
adc
or
push
cli
movups
dec
clc
into
push
push
les
stos
cmp
adc
sbb
cld
leave
aam
in
pop
push
icebp
fstpl
mov
mov
mov
add
add
sbb
bound
stos
arpl
fwait
jmp
pushl
iret
je
add
outsl
mov
and
inc
in
lahf
shlb
push
mov
loop
fstpt
clc
push
mov
xor
and
mov
gs
jge
dec
clc
pop
pop
clc
out
and
sahf
stc
mov
pop
add
mov
loop
ds
or
rcll
cmp
mov
push
mov
push
jno
fisttps
jge
call
adc
repnz
lds
pop
xchg
punpcklbw
pop
cmp
push
or
pusha
mov
cmc
or
cld
pop
in
xchg
call
mov
dec
data16
xor
lcall
inc
sbb
sar
cmp
mov
pop
inc
xor
sbb
aas
lret
scas
xchg
shl
pop
cmpb
and
pop
dec
outsl
add
movsb
cmp
scas
pop
push
test
in
xor
fsubrp
popa
add
fsubrs
fcoms
mov
or
movsb
cli
sub
hlt
inc
fisubrs
fiadds
pop
roll
int3
stc
outsb
mov
aam
jecxz
lea
add
mov
sub
insl
imul
xlat
adc
add
push
imul
dec
fwait
mov
dec
pop
pop
mov
lret
push
jnp
or
fsubrp
notl
jmp
push
ljmp
or
pop
fstps
lcall
popa
out
mov
cmpsb
pop
and
sub
mov
push
bnd
mov
inc
pusha
jmp
orb
or
dec
adc
jmp
cmpl
iret
mov
dec
sub
movsl
sarb
xchg
sbb
cmpsl
adc
sarl
repnz
sti
subb
fsubrl
addl
inc
jb
mov
pop
xchg
aad
adc
out
lea
jns
pop
fstpl
in
mov
lods
imul
or
call
mov
push
inc
loop
sub
pop
push
sbb
es
jnp
cmove
rorb
inc
sbb
iret
pop
dec
aad
jle
lods
sbb
xor
imul
stos
cs
xchg
es
mov
add
fwait
dec
int3
jbe
or
rolb
lods
xchg
les
cmp
inc
mov
mov
inc
sub
jbe
addl
jnp
sbb
loope
data16
and
add
cs
jp
adc
adc
jno
shrb
xchg
mov
push
push
jecxz
pop
pop
pushf
dec
jns
adc
fcoml
pop
mov
sub
xor
enter
sarb
daa
call
cli
lds
xor
daa
mov
sbb
loopne
int
testl
cmp
mov
shrb
les
inc
sub
dec
andl
daa
outsb
xchg
push
adc
ja
inc
stos
inc
repz
das
pushf
and
cs
sub
rcll
into
popa
and
movsl
scas
adc
and
xchg
ljmp
ds
mov
out
sbb
call
xchg
pop
cmp
test
push
jnp
lods
cwtl
ret
out
repz
int3
testb
mov
scas
jg
jo
test
sbb
shrl
fisubs
push
cmp
or
loop
xchg
add
push
icebp
dec
sbb
sbb
mov
mov
mov
mov
xchg
push
insl
dec
fcomps
dec
inc
enter
inc
jno
negl
imul
stc
pop
dec
daa
cmp
ret
lock
or
jmp
cld
push
sbb
jae
jnp
int3
paddusb
pop
lock
sbb
inc
cmp
sahf
shrb
and
out
or
repnz
bound
pop
popa
dec
ficomps
mov
jl
jmp
mov
cmpsb
dec
clc
sub
cld
stc
sub
sbb
mov
xchg
push
mov
rcl
popa
in
mov
stos
movsl
and
and
mov
and
xchg
mov
das
mov
mov
xchg
out
cmp
into
or
cmp
mov
xor
call
icebp
aaa
pop
xchg
test
push
mov
bound
and
scas
mov
mov
ret
mov
stos
and
jbe
or
or
int
es
jb
mov
ret
arpl
jb
aam
add
loop
mov
xchg
arpl
ret
shl
xchg
push
xor
mov
cmp
push
ficomps
sub
and
test
hlt
jg
jecxz
lret
gs
adc
sbb
ret
adc
outsl
pusha
sbb
dec
cmp
jle
stos
jge
mov
fistl
xchg
sub
and
lcall
jb
cmpsb
sub
out
repnz
or
mov
iret
fildl
in
lcall
fistpll
sbb
ljmp
scas
jle
rcrl
sbb
push
sbb
pop
scas
pop
mov
adc
into
push
ret
js
sub
or
in
push
mov
xchg
mov
mov
sub
sbb
mov
ficomps
xor
aas
enter
jae
movsb
das
insl
xchg
ret
test
and
jno
call
and
adc
push
shlb
jg
or
inc
aam
xlat
stc
jle
repz
aaa
andb
mov
loop
outsb
fucompp
mov
inc
xor
add
xchg
sbb
fcom
gs
xor
js
lret
movsl
stos
icebp
pushf
insl
nop
xor
stos
dec
cmp
dec
add
jmp
inc
pop
aaa
jge
cvtps2pd
jge
fld
mov
push
mov
inc
xor
sub
pop
jnp
int3
push
mov
jbe
outsl
mov
jmp
in
shlb
out
and
dec
xor
mov
sbb
jle
scas
jmp
cmp
out
aam
lret
rcr
imul
std
stos
mov
jb
pop
lahf
cli
add
xor
mov
cld
nop
xor
cmp
and
mov
mov
cmp
push
mov
adc
mov
fstsw
mul
stc
pop
les
in
out
jb
dec
sbb
popa
push
mov
pop
aad
add
and
mov
movsb
mov
pop
ljmp
push
ret
mov
loope
dec
in
mov
sub
icebp
stos
cltd
ficomps
mov
push
mov
push
fdivrs
and
mov
dec
lods
sub
in
cli
or
popa
daa
push
xchg
in
jae
lods
pusha
insb
mov
stc
aam
leave
jmp
sub
out
mov
push
loope
add
inc
aas
insl
cmp
dec
es
mov
push
mov
mov
test
out
stc
leave
clc
mov
call
and
or
pushf
jle
cmp
data16
jb
dec
cmp
movl
pop
movl
mov
test
mov
rcrb
and
jl
cmp
mov
movsl
xor
leave
sbb
mov
mov
mov
push
adc
push
ljmp
cltd
cmp
push
jl
mov
lret
xor
out
push
shr
in
add
out
or
repnz
jo
mov
cmp
or
lret
inc
gs
in
ss
in
mov
dec
push
out
and
sti
mov
mov
int
adc
ja
inc
sbb
in
xchg
test
aad
xor
stos
cmpsl
jmp
pop
cmpsb
adcb
lock
stc
push
and
in
xchg
test
add
sahf
shlb
push
cmp
fcoms
pop
or
mov
or
add
ja
mov
pop
push
xlat
popa
push
add
adc
add
sub
rorb
xchg
xlat
lret
jb
or
jnp
mov
insl
jecxz
jb
xchg
jno
xchg
stos
frstor
xor
adc
sub
dec
and
sahf
je
inc
out
aaa
sub
insb
adc
nop
dec
lret
sub
pusha
xor
pop
ja
xor
dec
inc
pushf
cltd
push
push
clc
jns
shrb
cmpsl
add
popa
dec
mov
popl
push
js
cmpsb
por
fsts
xchg
roll
mov
xchg
in
pop
bound
mov
js
pop
mov
insb
pop
pop
sbb
je
pop
jl
lret
ror
ret
call
push
jb
bnd
xor
dec
fstl
sub
repnz
ret
jne
scas
fwait
out
and
mov
cs
lret
push
rorl
testb
lahf
clc
aas
inc
inc
stos
mov
push
test
push
sarb
js
dec
inc
mov
in
data16
rorl
mov
and
mov
adc
and
call
push
inc
pop
dec
fs
jbe
jmp
cli
out
pop
dec
sahf
mov
adc
out
ss
and
insl
fnstsw
rol
shlb
adc
les
jp
jns
inc
lahf
and
inc
push
test
pop
leave
jnp
mov
sahf
popf
jle
movsb
mov
xor
pushf
stos
pop
sub
dec
jg
js
inc
cmp
mov
clc
out
movsb
cmp
push
stos
mov
and
push
sbbb
dec
mov
loope
jno
jg
ffree
mov
test
fnstenv
std
outsb
push
jnp
sbb
or
dec
jae
cmp
add
dec
lret
pop
xor
mov
pop
in
sbb
sbbb
hlt
repnz
dec
mov
cs
loope
mulb
pop
sub
test
mov
pop
xor
std
outsl
es
cmc
lahf
jp
das
jo
xor
shlb
nop
or
or
ret
or
flds
mov
cmp
stc
push
mov
rcll
lock
rcll
mov
mov
out
sar
movsl
cli
loop
or
aaa
add
sub
pop
mov
and
adc
outsl
push
test
add
movsl
and
push
inc
push
pusha
fstps
push
jns
push
pop
jge
mov
add
jbe
into
jns
pop
ljmp
movsl
push
mov
jne
rclb
sub
sub
ja
call
or
mov
icebp
cmpsl
xchg
mov
mov
aaa
shl
imul
fnstcw
xor
xor
jbe
pushf
inc
cmp
in
lret
mov
pop
mov
jb
pop
and
int3
hlt
fs
inc
push
stc
dec
in
and
sub
xchg
dec
cli
flds
sbb
rcll
pop
xor
dec
arpl
cltd
sbb
sbb
mov
pop
imul
cmp
outsl
negb
inc
jno
scas
mov
add
mov
leave
stos
mov
mov
cltd
pop
popf
inc
dec
je
filds
xor
test
xor
cmpsb
adc
fcompl
adc
fidivl
mov
inc
imul
adc
cmpb
xchg
inc
gs
pop
mov
lahf
inc
fnstenv
jecxz
dec
mov
lret
ljmp
sbb
xor
xlat
ja
test
sbb
inc
loop
or
fldl
fsubrl
out
shlb
cmpl
test
sbb
sbb
mov
jb
cmc
xor
aad
pop
pop
cmc
in
sbb
lret
or
movsl
loopne
pop
sbb
in
push
jno
inc
pop
mov
fdivl
adc
mov
xchg
sti
test
add
stos
iret
add
adc
dec
es
or
inc
xchg
xchg
fisttpll
pop
lret
cmpsl
and
cmp
xchg
lret
or
dec
jp
jne
pushf
xlat
push
rorb
ror
or
je
and
sbb
mov
mov
mov
les
push
dec
cmp
cmp
imul
icebp
int3
inc
call
cmp
jge
gs
int3
inc
sbb
test
push
jo
inc
hlt
or
jmp
lret
in
xlat
add
adc
dec
jnp
sbbb
push
scas
mov
dec
out
mov
xchg
fimuls
add
out
jb
push
loopne,pt
mov
adc
sbb
push
push
push
cmp
ffree
adc
aam
cmp
scas
inc
inc
mov
jno
iretw
push
int
popa
cmpsb
pop
push
pop
imul
mov
imul
jp
and
int3
popf
scas
push
jns
nop
es
roll
ja
mov
jl
cmc
repnz
ljmp
sub
andl
push
mov
addb
int3
sti
add
add
decl
and
xchg
xchg
dec
dec
sbb
and
fidivrl
std
dec
ds
call
jle
pop
outsb
out
push
pop
push
xlat
pop
aaa
bound
push
cmp
repnz
sub
faddl
daa
insl
pop
mov
xchg
and
mov
aas
push
xlat
mov
fsubrp
sub
xor
outsb
les
mov
mov
cmpsb
adc
fnstsw
inc
mov
imul
push
inc
adc
push
adc
add
cmc
js
sub
mov
shl
pop
mov
repz
pop
pop
popf
scas
push
lods
sbb
mull
adc
cltd
xchg
repz
outsl
xlat
jge
dec
jge
jl
cmpl
adc
cmpsl
test
dec
js
adc
mov
xchg
xchg
and
mov
jge
pop
or
rcl
sbb
fldln2
or
call
repz
cmpsb
jp
imul
push
lds
mov
test
stc
or
xor
scas
pusha
inc
mov
test
push
xchg
or
xchg
je
inc
jge
add
adc
movd
cmp
cld
lods
test
or
aaa
inc
aam
adc
ret
fxam
ret
sub
sarb
mov
sbb
ret
adc
jnp
nop
xor
mov
rol
insb
cmpsb
out
imul
dec
mov
aas
jg
adc
and
or
aas
out
mov
loope
sbb
or
mov
ds
rcrl
fsubs
movsb
test
mov
inc
arpl
rorb
mov
nop
lret
mov
pop
mov
mov
mov
jae
in
mov
inc
jne
rcll
fstps
mov
mov
sti
nop
adc
adc
adc
and
mov
cmp
add
sub
pusha
je
mov
pop
xchg
es
mov
adc
xchg
mov
push
loope
jp
mov
stc
cmp
pop
gs
mov
push
sbb
and
addb
pop
ret
test
cltd
cld
push
push
aas
push
notb
or
push
mov
cmc
pop
adcl
jmp
jbe
out
es
adc
fidivl
sub
push
inc
popw
push
or
xor
popa
xlat
adc
inc
movsb
popf
fidivs
xlat
cmp
insl
in
adc
stos
cmp
dec
jbe
adc
test
clc
adc
mov
addl
fdivr
mov
aaa
add
jb
inc
call
test
lods
sahf
sub
pop
adc
jl
pop
jl
sbb
xor
lock
mov
aam
out
adc
shlb
or
sub
sub
sarl
outsb
xlat
leave
pop
stos
xchg
mov
test
mov
movsl
mov
push
fcmovne
out
adc
shrl
scas
in
subl
push
out
inc
dec
lcall
xor
push
sub
cwtl
ret
sub
add
ljmp
data16
jg
sbb
mov
imul
add
cmp
push
mov
inc
and
pop
xchg
add
lret
pop
sbb
mov
leave
stos
das
mov
adc
add
je
jecxz
push
notl
test
clc
imul
sub
das
repnz
aas
add
repnz
push
sub
fwait
push
or
jno
test
dec
xor
inc
bsf
cmc
les
imul
pop
cmp
daa
les
inc
std
js
sti
pop
inc
jnp
cli
notb
out
imul
push
fldenv
dec
imull
arpl
xchg
cld
mov
lret
jb
imul
cltd
dec
sbb
pop
or
jne
jbe
ljmp
hlt
jno
shlb
faddl
dec
jae
mull
push
sbb
pop
mov
daa
je
cwtl
xor
mov
and
scas
jns
fiaddl
addr16
push
push
xchg
push
cmc
insl
pop
sbbb
mov
and
sbb
in
xchg
pop
and
sub
and
aas
push
cmpsl
cltd
xchg
adc
leave
das
clc
into
enter
and
sub
inc
mov
test
push
cwtl
cwtl
aas
dec
xchg
sub
adc
push
inc
loope
shl
xchg
jne
addr16
inc
ljmp
dec
ljmp
ds
sbb
fdivp
mov
add
push
xchg
aam
ljmp
je
ja
push
jno
add
stos
jo
jns
mov
movsb
sub
bound
xor
fistpl
jge
movsl
or
and
mov
jge
jmp
inc
call
cld
lds
sti
repnz
andl
pop
repnz
gs
mov
mov
mov
daa
mov
movsb
cmpsb
shrb
jb
test
pushf
xchg
sarb
subl
fmul
push
in
xchg
xlat
mov
mov
sbb
dec
insb
adc
stc
push
nop
cmp
sbb
mov
pop
mov
loope
or
lds
ss
xchg
imul
jl
loope
rcl
inc
add
adc
clc
push
orl
push
inc
xchg
das
and
sbb
jg
adc
cltd
and
cli
arpl
and
out
mov
mov
or
enter
mov
sub
push
test
mov
pop
or
push
add
cmp
popa
jnp
lock
push
push
aam
pop
or
lret
inc
test
mov
mov
pop
adc
push
inc
push
mov
mov
cmp
mov
push
xchg
inc
mov
pop
sbb
xlat
cmpsb
xchg
cmp
dec
outsl
cs
or
push
fidivrl
add
mov
dec
aaa
dec
mulb
loopne
jl
inc
enter
pusha
cmp
cli
and
xor
pop
and
rolb
sarl
jl
sub
sbb
inc
xchg
repz
add
movl
xorl
mov
enter
push
cmpl
outsl
popa
in
jo
arpl
inc
mov
dec
fldcw
psubusb
mov
dec
ret
rclb
pop
lret
outsb
cmc
sbb
fists
shll
lods
fldenv
pop
and
inc
dec
push
jmp
lds
xor
arpl
and
fildl
jp
push
js
sbb
sub
xor
data16
pop
in
xchg
push
cmc
out
push
xchg
xor
dec
add
pop
daa
add
cs
jno
lods
xor
stos
add
mov
das
jg
loop
pop
out
jo
jge
mov
loopne
xchg
lock
lods
xchg
loope
pop
mov
xchg
jg
jle
jno
daa
sub
les
test
sarb
adc
pop
adc
cli
mov
sub
shl
filds
ret
xlat
ja
inc
xor
int
fisttpll
jae
mov
push
out
jmp
xchg
outsb
xchg
push
inc
push
mov
adc
mov
inc
cmp
jnp
int
add
xchg
add
mov
fldln2
push
lret
popa
inc
push
sti
fidivrl
fidivrl
jno
sub
or
je
inc
clc
lock
imul
mov
mov
dec
in
mov
dec
mov
and
mov
sub
out
cmp
jge
sub
hlt
cwtl
fs
dec
negb
xor
dec
sub
fildl
inc
mov
in
xchg
ds
ret
add
nop
sarb
repnz
mov
bound
hlt
inc
out
inc
jmp
jecxz
inc
xlat
jnp
lret
pushf
or
bound
cs
dec
les
jno
adc
dec
mov
stos
jle,pt
leave
pop
jp
aas
jle
add
stos
sbb
mov
clc
add
popw
cmp
adc
rclb
inc
sub
aaa
push
sub
bound
pop
jne
xchg
xchg
fidivrs
inc
or
cli
pop
hlt
xor
push
call
xchg
movsl
or
sbb
add
cmc
fists
sarb
les
ds
sub
mov
mov
add
sti
mov
xor
xor
cmpsl
mov
sarb
and
daa
les
adc
inc
insl
stos
faddl
cld
mov
or
ffree
ljmp
lret
lock
test
psubq
sub
aas
inc
inc
mov
push
enter
jmp
lods
xor
mov
imul
jb
adc
pop
inc
xchg
shr
or
xchg
lret
sbb
add
test
jbe
ret
cwtl
cmp
rcll
pop
jo
fs
adc
sahf
push
and
in
mov
adc
xchg
pop
pop
adc
aas
in
iret
lret
cmp
jbe
cltd
adc
daa
std
push
cmp
jbe
xor
cmpsl
cld
add
push
inc
adc
js
call
stos
add
js
cs
inc
jae
sub
jmp
inc
mov
repz
sub
lret
in
sahf
ss
mov
add
fsub
sub
arpl
jl
mov
mov
xchg
shrl
or
xchg
pop
and
imul
sbb
aam
adc
adc
push
ljmp
insl
inc
filds
sbb
repnz
arpl
pushaw
and
mov
lods
not
int
decb
aaa
lea
je
subb
adc
or
sbb
fidivrs
adc
test
divps
push
data16
jo
inc
movsb
lods
sbb
or
addr16
pushf
test
ljmp
test
xchg
gs
ds
jecxz
push
out
fisubrs
adc
lds
cmp
enter
mov
and
out
mov
add
adc
pop
jecxz
arpl
adc
sub
dec
imull
std
sbb
int3
or
add
hlt
leave
xchg
mov
fmuls
push
xchg
ja
or
shrb
orl
or
pop
cli
jl
pusha
imull
repz
out
gs
fs
sar
stos
adc
js
inc
jmp
adc
and
sub
xor
and
cmpl
adc
pop
call
inc
ror
stc
cmp
lock
jb
cmp
sbb
sub
fwait
loopne
pop
or
sbb
test
xchg
sub
dec
push
fsubrs
mov
add
sti
pop
rorb
and
mov
ret
mov
add
cmpsb
cmp
cmpsl
sbb
adcl
int3
dec
xchg
add
pop
add
sbb
jae
fidivrs
xchg
and
aaa
repz
xor
or
xor
rcrl
ss
sti
push
imul
dec
mov
call
cwtl
ret
mov
sbb
int
lret
imul
sub
jg
jl
adc
stc
adc
jns
outsb
mov
jae
jo
int3
mov
dec
orl
cmp
jle
ret
jmp
test
sahf
scas
or
or
lock
xor
mov
mov
add
nop
dec
mov
dec
das
inc
dec
adc
sub
lcall
or
into
mov
notb
add
out
call
sbb
cld
mov
fstl
mov
jo
out
icebp
and
push
mov
dec
inc
mov
adc
fsubrp
push
xor
inc
xor
cmc
or
dec
pop
bound
bound
mov
pop
in
aaa
sbb
cltd
mov
and
jmp
call
adc
lret
xor
and
push
movsl
sbb
int
xor
aas
cs
and
movsb
pop
outsl
cltd
mov
dec
jge
mov
dec
add
rcr
fsubs
jae
lret
sub
pop
cmp
mov
test
xchg
inc
push
add
mov
mov
push
test
sti
stos
add
cmc
vpshad
push
iret
divl
xor
shrb
add
subb
fwait
push
cltd
cwtl
mov
mov
addb
cmp
adc
int
ds
dec
mov
fstl
pop
inc
push
cmp
aam
in
repz
cltd
xchg
jb
pushf
sbb
add
enter
push
mov
in
insb
test
decb
add
xlat
and
ret
inc
inc
out
mov
mov
jmp
mov
or
adc
cmp
jo,pn
push
pop
xchg
fisubrl
mov
mov
imulb
jecxz
stos
sti
cmp
cmp
lea
jg
push
repnz
scas
dec
sub
icebp
inc
jmp
scas
iret
jns
movsb
ljmp
xchg
cld
xchg
sbb
gs
dec
jns
pop
sbb
into
stos
cmpl
adc
cs
jecxz
xchg
adc
mov
scas
das
push
into
and
movsl
shll
mov
inc
shll
lods
scas
pop
mov
movl
pop
aam
mov
mov
inc
lcall
loop
lods
cmpsb
in
test
adc
outsb
jbe
lods
mov
clc
mov
outsl
push
roll
adc
lods
imul
in
inc
ficomps
pop
test
notb
bound
je
fisubrl
outsl
push
jnp
pusha
adcb
ds
outsb
imull
fsubs
mov
or
xchg
dec
leave
jne
fisubrs
clc
ja
sbb
movsl
and
inc
jo
mov
out
ret
clc
into
mov
dec
rorb
lds
inc
xchg
mov
inc
push
js
stc
outsb
adc
cmc
mov
jl
cld
jg
sbb
jae
iret
cmpsl
jg
mov
sub
sub
and
aam
nop
adc
xchg
push
enter
jae
pop
in
push
or
fimuls
xchg
mov
clc
sub
inc
pusha
mov
jnp
adc
and
and
cmpsl
movsw
fisubs
jge
pop
fnstcw
dec
movsb
cmpsl
test
cmp
xchg
mov
shl
lcall
mov
idivb
push
sbbb
pushf
bnd
sbb
leave
mov
jmp
or
fabs
test
cmp
or
sub
push
push
test
repnz
add
push
xor
daa
lret
daa
sub
pop
lods
decb
xchg
adc
ret
cmp
sti
addl
push
test
and
push
push
aaa
or
repnz
xchg
xchg
dec
xchg
int
fmull
sti
inc
dec
into
jecxz
xor
in
push
pusha
and
cli
mov
in
add
ss
push
js
push
or
push
push
mov
xorb
lahf
das
lcall
add
das
push
int3
xchg
scas
lods
jge
sbb
scas
insb
popa
imul
das
pop
dec
rcrb
mov
lock
lcall
loopne
mov
insb
sbb
jmp
arpl
fstpl
fwait
push
bound
subb
call
int3
mov
lods
arpl
mov
jae
mov
outsl
dec
mov
mov
aad
out
cmp
inc
jg
or
movsl
push
and
test
add
scas
in
iret
adc
in
test
sbb
add
push
cmp
mov
dec
imul
pop
imulb
cmc
cwtl
mov
movsl
add
jle
pop
sarl
out
insb
add
xor
outsl
sti
xor
xor
lret
fnsave
out
sbb
mov
in
xor
xchg
sti
jno
lods
addr16
cs
jno
xor
loop
add
or
lock
pop
mulb
mov
pushf
sub
bnd
mov
add
jg
push
xchg
push
mov
inc
stos
popf
and
add
sub
mov
pop
mov
rol
ret
std
lds
jb
cmpsl
sbb
adc
dec
xorb
cld
jb
mov
loope
rclb
cld
mov
mov
mov
mov
push
pop
outsb
mov
loopne
pop
jmp
cmp
mov
jbe
int3
mov
mov
outsb
lahf
subl
pushf
fildll
enter
xchg
jbe
xor
xlat
scas
cld
xchg
mov
jno
ljmp
nop
push
cmc
sub
pop
lock
icebp
adcl
mov
data16
push
aas
mov
cmp
inc
imul
dec
xchg
das
jmp
xor
add
push
mov
sbb
mov
sbb
push
dec
sbb
stc
fstl
shlb
mov
mov
pop
testl
mov
call
loop
sub
lret
sub
xchg
int3
leave
add
jbe
and
rorb
andl
mov
pop
xchg
movsb
mov
pop
insl
clc
pop
and
cmp
sbb
scas
adc
lock
cmp
jmp
sbb
push
out
shll
ret
adc
mov
subl
gs
test
lock
sti
cwtl
aaa
mov
cmp
fadd
fcompl
xchg
mov
mov
jbe
imul
les
test
or
imul
fwait
push
shrb
xor
xchg
loopne
jo
jp
xorl
pop
mov
sub
or
hlt
sahf
and
mov
std
adc
xlat
adc
dec
inc
mov
roll
popa
int
and
enter
je
test
inc
loopne
mov
or
add
popa
ret
ret
stos
adc
stos
arpl
mov
scas
xchg
fdivrs
mov
fwait
int
pusha
mov
pop
adc
and
mov
cmp
mov
test
xchg
cmp
xor
stos
cmp
ljmp
xchg
gs
scas
pop
push
fidivl
jmp
fbstp
cmp
jecxz
stos
sub
daa
jle
push
adc
mov
jge
repz
mov
mov
mov
mov
aam
out
jo
push
lcall
mov
jo
fidivs
pop
mov
shl
repz
in
mov
mov
xchg
add
leave
scas
fs
add
jl
les
push
xchg
fimull
int
sub
inc
xchg
and
xor
js
out
dec
push
ficoms
mov
xor
ja
cltd
arpl
repnz
test
in
dec
inc
pusha
pop
pop
cmp
pushf
aam
push
stos
popa
je
cmp
ret
repz
cmp
mov
pop
imul
push
addr16
xchg
push
add
lock
frstor
sub
lock
in
ret
xor
push
xchg
fldenv
mov
movsl
jmp
sbb
push
and
imul
mov
ds
in
and
mov
popf
xchg
push
leave
adc
testl
dec
out
mov
nop
mov
add
repnz
add
lret
cmpsl
std
mov
xor
addr16
add
fdivrs
stos
mov
mov
sbb
pop
pop
jns
or
cmp
sbb
mov
add
mov
cld
and
inc
pop
lret
flds
test
dec
jmp
pop
or
dec
xchg
pop
pop
ret
xchg
cmp
repz
jecxz
scas
push
cmp
int
mov
jp
push
push
lods
adc
int
dec
enter
jg
pop
fmuls
jp
mov
inc
and
stc
fnstsw
pop
sahf
movsb
xor
sbb
ret
cmp
call
sub
cwtl
jbe
pop
pop
add
adc
jbe
lods
sahf
enter
movl
popf
xchg
jb
push
pushl
inc
test
mov
leave
movsb
sti
ss
inc
inc
imul
mov
dec
popa
daa
pop
movsb
lock
lods
sub
ffreep
inc
cwtl
jno
lock
mov
andb
sub
mov
in
xorb
mov
xlat
or
andps
push
pop
jmp
dec
shlb
sbb
stc
pop
addr16
xor
push
add
push
movsl
jge
fstpt
and
out
push
rolb
mov
add
repnz
sahf
test
cmp
icebp
push
iret
mov
test
test
imul
push
in
popf
xor
dec
push
insl
push
lds
jg
mov
sub
fwait
mov
rorb
push
stos
mov
movsb
push
stos
mov
jge,pt
pop
fwait
adc
popf
push
mov
jg
pop
xchg
scas
dec
mov
cmpsb
lea
iret
push
or
fs
xlat
adc
xchg
push
call
arpl
sub
test
movsb
sbb
nop
lods
in
jbe
adc
clc
in
negl
stos
dec
mov
add
sar
pop
pop
xchg
arpl
pushf
adc
outsb
iret
push
aad
push
push
imul
mov
inc
pop
icebp
insl
pop
into
sbb
nop
mov
pop
cmp
cmp
stc
cmp
cmp
jle
fnstsw
jns
stos
mov
sub
fidivrl
adc
aam
pop
xchg
mov
lods
jbe
andl
cli
inc
pop
aam
rcrl
dec
bnd
stc
lods
cmp
adc
xor
mov
adc
imul
xchg
jno
push
pop
mulb
out
gs
xchg
mov
jo
xor
mov
pop
jbe
ja
in
lret
dec
ss
test
push
lods
mov
shll
stc
push
ret
dec
call
ds
push
jne
out
mov
jmp
dec
call
mov
adc
inc
pop
xchg
push
jecxz
out
leave
test
nop
jne
js
pop
adc
les
push
sbb
push
mov
les
mov
pop
in
push
dec
push
fldl
daa
mov
cmp
ret
inc
lret
mov
mov
in
push
imul
xchg
movsl
mov
jl
sahf
jg
or
cmp
repnz
mov
lcall
clc
jecxz
inc
push
push
movsb
xor
push
aaa
cmp
mov
test
in
daa
addl
dec
xlat
aaa
xor
or
push
push
adc
mov
jb
cmp
mov
add
adc
iret
imul
ds
push
data16
idivb
stc
cli
mov
setns
mov
andb
sub
ja
or
inc
or
jnp
mov
sub
cmp
int3
cmc
test
push
mov
push
jne
movsl
jl
daa
aas
mov
or
dec
pop
jb
in
mov
add
bnd
and
in
std
or
pop
shr
daa
sub
aad
adc
loope
pop
push
mov
out
imul
aam
gs
cmpsb
inc
test
frstor
xchg
or
mov
xor
add
dec
nop
mov
std
jp
mov
dec
dec
mov
repz
and
inc
dec
outsl
inc
aaa
and
cmp
notb
lea
mov
out
scas
orl
and
dec
repnz
sahf
cld
fincstp
fisttpll
das
loope
cltd
add
jns
push
iret
or
clc
xchg
stc
jl
add
jmp
push
ret
repnz
push
xor
pop
add
in
shld
mov
hlt
cmpsb
mov
lret
in
mov
cmp
push
sbb
dec
loop
fcomp
test
cmp
sub
mov
cmp
popa
inc
cli
xchg
sbb
add
xchg
cmpsl
ljmp
dec
imul
adc
pop
jo
loopne
data16
gs
mov
xchg
call
sbb
xchg
xchg
test
jbe
mov
mov
movsl
aam
push
push
mov
aam
pop
clc
jecxz
outsb
push
xchg
cmp
jp
mov
mov
std
add
sbb
daa
pop
cs
enter
inc
add
jp
add
inc
dec
mov
js
mov
jge
imul
rol
xlat
lods
and
sub
popa
les
jbe
sub
mov
sbb
inc
cli
jns
xor
cs
mov
and
pop
jle
xor
not
or
lcall
negb
inc
cmp
push
dec
pop
inc
data16
dec
cmc
add
jl
mov
sahf
add
ja
inc
add
inc
mov
jg
or
pop
jnp
mov
add
or
pop
loopne
in
mov
enter
test
or
xorl
xor
stos
mov
test
cwtl
inc
dec
jno
mov
adc
aas
or
mov
xor
das
mov
fcmovnu
pop
lods
pop
lcall
xchg
insl
loope
sti
icebp
fisubrs
pop
mov
ljmp
gs
cmp
jae
bnd
fdivp
xor
cmp
push
mov
push
aaa
fsubrs
dec
sbb
ss
cwtl
jp
stos
sub
mov
inc
aad
jle
enter
ret
cli
xchg
jnp
or
add
ljmp
aas
fisttpll
mov
lcall
sub
rolb
es
push
lds
pop
test
mov
imul
in
popa
leave
mov
imul
pop
pop
fldl
cvtpi2ps
sbb
adc
push
movsb
adc
push
xor
or
add
cmp
add
sbbl
mov
add
lods
cltd
mov
decb
mov
dec
jmp
inc
inc
sbb
sar
nop
shlb
xor
sub
mov
sub
outsl
js
icebp
or
jg
scas
or
jecxz
imul
jo
mov
and
std
jae
scas
je
fidivl
inc
out
adc
shrl
push
int3
push
pop
xor
push
scas
cwtl
sub
mov
xchg
adc
sub
mov
movb
nop
ret
inc
cmp
or
rorb
lret
cltd
into
hlt
movsb
cmp
lock
out
aaa
sahf
push
sub
push
subb
repz
stos
adc
fcomip
cmp
insb
syscall
ret
subb
rcr
jle
stos
pop
in
fstpl
mov
push
jecxz
xchg
movsb
pop
lcall
movsb
cmp
mov
jb
add
arpl
test
scas
sbb
outsb
je
sub
xchg
and
out
inc
js
cmp
add
movsb
insl
jle
data16
mov
icebp
cmp
mov
gs
dec
hlt
test
mov
es
pop
pop
cmpsl
xchg
mov
mov
dec
out
imul
ja
lds
outsl
test
add
jge
inc
jne
pop
jno
outsb
lcall
jecxz
loop
scas
dec
data16
sti
fdivrp
adc
stos
dec
push
sti
std
aad
xlat
and
aam
pop
push
xchg
enter
and
mov
push
andl
adc
mov
mov
shrb
dec
or
or
in
dec
push
xor
push
or
inc
pop
into
or
sub
jo
sbb
lods
les
jb
mov
mov
arpl
xchg
inc
lcall
mov
filds
cmp
cmp
xchg
lret
clc
fldenv
xchg
ss
in
or
aaa
addr16
cmpsb
push
imul
ja
jmp
and
mov
int3
enter
cmp
imul
les
jae
iret
inc
sar
mov
push
out
add
arpl
outsl
fdivl
outsl
dec
sub
pop
xchg
mov
imulb
mov
mov
dec
shll
aas
out
loop
push
and
ljmp
loop
fildll
mov
sub
adc
mov
popa
stos
lret
dec
or
mov
xor
mov
cmpsb
or
mov
fisttpll
pop
or
lods
adc
add
dec
iret
aaa
mov
pop
push
lret
sbb
jns
cmp
xor
mov
xlat
or
ficomps
inc
sar
mov
xchg
xchg
cmp
sbbl
clc
sahf
push
enter
aad
lock
and
add
xchg
sbb
outsl
movsb
and
insb
ja
nop
jnp
pop
lcall
mov
push
jns
sahf
sbb
pop
push
or
out
push
mov
popf
pop
or
mov
jo
jb
xchg
add
scas
inc
sbb
test
std
dec
jg
cmpb
push
jnp
in
sahf
push
fildll
push
cltd
ret
fs
mov
addr16
add
fisubrs
sbb
filds
stos
dec
ficoml
mov
add
jecxz
test
jle
mov
xor
mov
push
xchg
add
addl
and
push
loopne
lock
leave
and
push
lock
sbb
pop
hlt
addr16
lahf
xchg
clc
sbb
dec
jle
in
mov
push
cmp
repz
sbb
cmp
popf
or
cmpsl
push
fdivrl
adc
daa
and
sub
dec
fsts
mov
pop
or
jno
pop
lds
push
enter
stos
push
sahf
sbb
mov
movsb
out
cli
jge
jns
mov
mov
jle
test
outsl
clc
icebp
lahf
add
inc
sbb
mov
mov
lret
add
push
ret
sbb
jbe
jns
fdivl
push
mov
addr16
lahf
loop
mov
push
dec
pop
fs
lds
dec
dec
dec
dec
xor
fs
jo
sbbl
sbb
dec
xchg
sub
lods
pushf
adc
lock
testb
fstps
enter
xchg
dec
insl
dec
loope
dec
and
lret
dec
mov
scas
data16
dec
inc
inc
movsl
and
lret
cmpsl
mov
mov
adc
cmpsb
ljmp
sbb
jb
jg
cltd
jmp
ret
cli
or
std
pop
push
scas
je
jge
dec
xchg
loop
stc
pop
stc
gs
or
cmp
or
add
imul
pop
jp
pop
icebp
adcl
inc
fnstsw
mov
leave
sub
add
sub
subl
icebp
add
fistpl
push
jbe
stc
push
and
and
pop
and
pushl
imul
lret
dec
rclb
call
ret
lock
gs
pop
or
fnstsw
push
lahf
or
xchg
scas
push
arpl
or
sub
and
push
pop
fistl
iret
add
addr16
in
lock
sub
lock
scas
xchg
xchg
dec
mov
call
je
xchg
jle
xchg
pop
repnz
cmp
dec
or
aaa
dec
fmuls
in
xchg
scas
cltd
fdivrp
mov
mov
out
das
shrl
rorb
xor
dec
cli
movsl
xchg
test
xor
pop
lds
test
dec
mov
dec
inc
jnp
sub
sub
test
test
jle
int
insb
insl
aas
testl
stc
test
bound
int3
xchg
rclb
mov
inc
sub
mov
push
push
lock
aam
aad
mov
adc
xor
mov
movsb
xor
pop
out
rcl
mov
xor
ss
push
mov
dec
das
sub
add
xchg
mov
push
std
jae
cmc
xor
jns
fwait
and
dec
mov
lret
mov
mov
and
repnz
je
dec
pop
mov
cltd
xor
mov
imul
je
inc
mov
leave
xchg
cmpsl
test
aad
push
push
dec
in
mov
sti
push
push
test
adcl
xor
test
cmp
inc
rcll
sbbb
pop
xchg
fstpl
fisubl
pop
jge
jae
push
pusha
jno
lcall
xchg
cmc
shll
jg
adc
sub
xor
scas
or
cld
add
sbb
iret
xor
sbb
jge
imul
xor
fsubrl
sub
iret
add
fcoml
or
into
pop
hlt
das
insb
jl
mov
dec
mov
fistpl
lds
insb
mov
pop
mov
cli
xchg
push
xlat
xor
xlat
xor
inc
test
out
testl
test
push
aad
mov
push
scas
cli
add
add
leave
pop
lahf
test
cmpsb
loopne
cmpsl
into
xchg
dec
and
xchg
dec
lock
mov
je
in
ret
shll
mov
jb
addr16
test
cltd
fs
ja
out
cli
or
add
rorb
dec
inc
mov
in
loope
movsb
mov
xchg
push
xor
lret
mov
or
aad
add
xchg
shlb
cmpsb
push
sbb
hlt
jns
in
cld
jge,pt
lret
jl
loop
mov
jno
cmp
jle
pop
xchg
loopne
icebp
adc
lahf
jb
xor
or
repnz
aaa
push
int3
enter
mov
mov
fnstenv
cmp
adc
and
cmp
jb
jp
enter
sub
jns
arpl
push
inc
jle
jle
mov
dec
bound
jns
push
sti
inc
loope
imulb
inc
inc
idiv
sub
repnz
pusha
arpl
loope
jns
adc
pop
xor
mov
xor
pushf
pop
jmp
loopne
test
sub
inc
aad
stc
inc
lcall
xchg
movb
int
jb
jno
in
cmpsb
xor
out
orb
add
dec
add
push
add
mov
xor
jecxz
test
push
outsb
scas
mov
cli
xor
sbb
cmp
mov
shll
mov
clc
scas
xchg
repz
out
cmc
inc
fnstcw
jge
mov
imul
xor
push
insl
push
push
xor
aam
and
sub
js
mov
pop
cmp
jle
sbb
movsl
add
lret
inc
flds
adcl
test
adc
sub
popa
pop
sub
xlat
call
mov
aas
sbb
push
aas
ret
fmul
mov
repnz
sub
testl
xor
mov
mov
push
dec
fistpll
cltd
or
ss
push
pop
dec
lds
ror
ret
notl
in
mov
pop
dec
mov
xor
jnp
cmp
test
push
clc
add
inc
dec
pop
cs
jne
xchg
insl
test
gs
je
jns
aad
subl
imul
cmc
or
loopne
push
mov
xlat
fadds
sub
push
je
adc
or
in
lds
in
idivl
and
js
pop
mov
loope
xor
into
and
inc
and
xlat
js
popf
adc
aad
popf
jnp
mov
push
ljmp
xchg
mov
pop
cmp
call
jb
int
sarb
scas
or
inc
sbb
or
rcrl
ljmp
xchg
adc
std
test
mov
insl
or
mov
aam
movsb
cli
jle
xor
inc
lods
int3
jmp
lds
outsl
ja
or
mov
cltd
mov
adc
mov
cmp
fs
lods
push
out
cli
xchg
outsl
addl
inc
xchg
pusha
mov
insl
loopne
mov
jb
sub
adc
cmp
sub
imul
aad
push
inc
or
cmpsl
movb
inc
lret
sub
rcll
mov
shlb
imul
push
loopne
mov
cmp
hlt
ret
push
inc
xor
aam
testl
insl
mov
pop
add
pusha
xor
mov
aaa
nop
dec
sbb
faddl
notb
in
sub
xchg
cmpl
test
ret
jbe
imul
ret
add
push
mov
add
inc
cmp
sbb
inc
movsl
sbb
adc
in
mov
lahf
adc
shlb
into
push
sub
cmp
ja
out
add
leave
notl
jmp
jecxz
loopne
and
repz
insl
lock
push
push
xor
adc
cmc
loopne
fisubs
scas
stos
sbb
neg
std
sub
push
and
insl
sarl
add
pop
jno
mulb
add
pop
test
mov
cs
incl
xor
mov
fimuls
cmp
pop
outsl
in
sub
sbb
xchg
js
stos
ret
inc
test
mov
pop
loopne
inc
mov
arpl
cmp
sub
sarb
cltd
inc
cmc
gs
push
lods
mov
push
push
adc
fstp
rol
jl
std
xchg
out
aaa
int3
rorb
dec
arpl
imul
out
or
fdivrs
lods
scas
mov
mov
cmp
inc
inc
jp
adc
jecxz
adcb
push
xchg
cld
jl
sub
mov
push
mov
jno
cmp
jns
stos
in
lods
lahf
outsl
pop
sarl
cli
pop
stos
jb
mov
fsubl
rorl
lcall
addl
fldt
mov
movsb
scas
out
push
das
aaa
mov
and
or
lret
xor
stos
mov
xorb
adc
push
lds
sbb
lods
repnz
mov
cmpsl
ljmp
push
rorl
inc
enter
sarl
cmp
movsl
inc
xchg
pop
rcrl
mov
jnp
insb
mov
dec
and
add
sbb
aam
and
mov
or
jge
hlt
insb
mov
sbb
xchg
jnp
sbb
sub
ljmp
or
adc
mov
pusha
sahf
mov
push
add
jno
inc
frndint
aaa
xor
jns
test
call
or
and
sbbl
in
add
popf
test
and
mov
push
xor
ds
lea
mov
das
jbe
out
push
inc
xchg
popa
mov
dec
iret
and
loop
sub
lahf
pusha
add
rcrl
mov
loopne
fsubrp
mov
dec
adc
pusha
push
outsl
orb
fisttps
loope
lds
jl
shl
pop
shlb
dec
inc
adc
outsl
out
lret
pop
cs
icebp
add
hlt
pop
ffreep
fs
fdivrl
or
aad
push
js
out
aad
cmpsb
out
mov
jno
jecxz
push
xor
mov
scas
loopne
pop
lahf
aas
xor
lea
inc
insb
jl
or
cli
xchg
inc
repz
push
push
add
push
movl
dec
sub
inc
leave
pop
or
pusha
cmp
aam
scas
mov
jbe
jecxz
adc
xor
jae
fsubl
xor
push
push
adc
push
aad
loope
inc
sbb
dec
sahf
loopne
es
shlb
cltd
mov
cmp
cmpsb
loopne
aam
mov
repz
and
je
inc
fistpl
dec
push
je
addl
rcrb
ds
loopne
sbb
pop
stos
imulb
pop
cmp
or
xchg
add
jne
cmp
std
imul
jl
fwait
das
aaa
inc
mov
cmpsl
orb
push
ja
and
add
daa
jbe
mov
xor
push
dec
sub
in
sarl
fidivl
add
push
xor
stos
inc
or
jg
out
jno
or
pop
scas
in
das
push
outsb
fs
out
ficomps
fnstenv
jne
xor
lods
mov
push
js
shlb
or
out
lcall
xchg
cltd
fisubs
jmp
mov
int3
push
and
ss
pop
test
cmpsl
leave
in
xchg
push
lods
ret
pop
int
push
inc
dec
call
insl
cmpsl
push
int3
aad
xchg
repnz
cmpsb
out
shlb
aas
scas
movsl
je
scas
out
xchg
adc
xchg
cmp
lret
or
mov
sbb
push
sbb
mov
push
rcrb
mov
imul
inc
js
decb
addb
sub
push
test
cltd
cmp
ret
data16
js
jl
sub
xchg
decl
out
mov
pop
jae
mov
mov
gs
popa
js
gs
loope
bnd
xchg
push
std
les
and
sar
pop
js
jbe
dec
inc
adc
insl
packsswb
in
mov
sub
fimuls
push
loope
cmp
or
or
fwait
pop
rcll
pop
insb
cmp
outsb
mov
fldcw
xor
orb
mov
ljmp
orb
fstpt
cmpsl
sbb
fldenv
lods
cs
push
scas
int3
stos
das
repnz
dec
icebp
dec
push
stos
mov
loopne
aad
insb
rclb
mov
cmp
mov
push
dec
test
ficomps
ret
sbb
or
mov
das
add
cmp
jns
scas
icebp
int3
inc
mov
push
mov
daa
or
sbb
cmp
mov
int3
mov
aaa
mov
out
push
add
xorl
and
jns
test
cmpsb
push
adc
pop
ds
cld
daa
push
shlb
mov
sbb
jmp
out
outsl
ljmp
xor
imul
or
adc
mov
pop
and
dec
dec
cmpsl
sbb
std
pop
addr16
mov
pop
and
xchg
int
adc
cmp
xchg
dec
and
adc
pop
sub
frstor
mov
aad
scas
sbb
sbb
xor
fistpll
dec
dec
cmpps
sbb
pop
jae
rclb
pushl
mov
aaa
xchg
pop
loope
cmp
fs
jecxz
scas
cli
cmp
mov
out
aam
popf
xorl
sub
mov
inc
lods
fildll
cmp
mov
sarb
or
mov
int3
mov
sub
dec
scas
out
jns
adc
mov
or
bound
es
lea
popf
icebp
cmp
cs
or
movsb
sbb
pop
adc
push
ljmp
fcom
sbb
cld
mov
and
mov
pop
adc
arpl
es
sbb
and
insb
mov
fdivr
add
sbb
out
adc
dec
push
fisttpll
mov
mov
dec
cltd
jne
lods
cmp
jle
jns
add
pop
push
mov
repz
push
or
out
push
mov
xor
rclb
out
jge
ja
cmp
mov
jg
adc
mov
mov
cs
adc
push
pop
pop
mov
movhps
cwtl
mov
ffree
xchg
test
mov
int
and
fwait
adc
xchg
mov
xor
xchg
and
aam
shlb
shll
jl
pop
add
data16
pop
xchg
sbb
push
movsl
ss
add
rcrl
popf
inc
jbe
into
inc
jns
add
test
les
jmp
popf
loop
inc
rclb
ss
xor
pop
adc
xor
pop
popf
mov
js
jnp
not
data16
into
test
sbb
add
push
adc
push
jmp
call
movsl
dec
jl
push
fs
inc
or
sub
dec
sub
mov
mov
fistpl
roll
jecxz
lods
pop
sbb
pop
cmp
mov
xchg
mov
adc
dec
and
test
push
push
jo
adc
repz
out
les
fwait
std
jmp
jmp
mov
mov
cmp
xlat
jle
jb
ja
pop
cmc
add
add
gs
dec
xor
call
sahf
pop
mov
sbb
out
xchg
out
addb
lret
int3
iret
cmp
mov
push
xchg
mov
loop
and
out
in
movsb
rolb
testb
pop
aaa
cmp
jno
mov
xchg
imull
insl
mov
jno
pop
add
ljmp
dec
xor
adc
jne
or
imul
jmp
pop
pop
fnsave
call
mov
in
pop
mov
daa
cmp
mov
enter
mov
sbb
adc
inc
sub
int
pushf
mov
cli
inc
stc
aam
mov
cmpsb
jl
mov
mov
scas
iret
mov
push
enter
loop
cmp
lea
andb
pop
sti
js
adc
enter
mov
pop
mov
negl
dec
loope
out
mov
rcrb
sti
loop
testl
pop
push
frstor
pop
lods
mov
or
cmp
xor
push
pushf
xlat
popa
in
mov
sub
das
inc
loope
adc
iret
mov
imul
jmp
lahf
andb
mov
pop
fwait
dec
clc
ja
das
pop
jmp
je
add
test
sub
inc
dec
les
imul
mov
bound
int3
cld
inc
leave
xlat
dec
mov
jo
push
call
xchg
inc
adc
aaa
pop
push
cmp
into
add
in
xchg
addr16
popa
push
adcl
mov
pop
pop
or
aaa
sbb
pop
push
sahf
inc
push
scas
push
xchg
push
push
lahf
adc
ja
nop
sahf
mov
cli
push
int3
mov
js
dec
daa
adc
rcll
jbe
or
mov
aam
pop
pop
xchg
jp
bound
jecxz
ret
cmc
sub
or
xchg
fdivr
xchg
lea
jmp
pop
sbb
movsl
sub
in
loope
clc
mov
in
adc
shrb
dec
lock
sbb
jb
icebp
mov
mov
ja
xchg
xchg
cld
loopne
jo
rorb
popa
sbb
into
inc
mov
inc
cmc
js
popa
je
inc
ja
pop
lret
pop
push
js
mov
dec
mov
sbb
pop
loopne
cmc
sar
mov
dec
out
out
scas
int3
mov
mov
leave
cli
and
mov
lods
dec
mov
test
push
leave
mov
sub
pop
outsb
out
das
outsl
stc
xorb
mov
adc
push
mov
test
xchg
es
popa
enter
and
lods
jo
sub
fsubr
jl
cmp
and
decl
xlat
inc
dec
add
add
es
adc
insl
xchg
jbe
jbe
sbbb
cmp
int
jmp
int3
pop
rcrl
pusha
out
repz
mov
outsb
mov
xchg
or
addr16
and
leave
or
pusha
sbb
jo
add
out
pop
repz
or
adc
lea
mov
adc
sahf
repz
xor
mov
leave
and
inc
or
aaa
in
or
inc
xlat
dec
inc
fcoms
and
jle
out
dec
or
jmp
add
or
sub
stc
sbb
jbe
push
shl
cmpsb
out
loop
repz
into
es
pop
sbbl
lret
stos
cli
das
ss
lahf
push
jo
or
pop
lods
fcomi
dec
test
adc
xchg
xor
sbb
lret
add
insl
xor
sbb
xor
mov
clc
mov
jge
jge
test
repz
pop
inc
push
mov
adc
add
push
iret
mov
cld
stc
sarb
leave
test
sub
lcall
xchg
imul
sbb
xor
inc
sub
shll
mov
adc
inc
jl
jo
jecxz
cmp
stc
cli
sub
lds
lcallw
call
mov
add
push
lea
lret
daa
sub
pop
add
ljmp
mov
imul
push
push
jno
lea
inc
and
testl
les
inc
sub
mov
cli
nop
dec
add
shlb
push
pop
add
sub
mov
sbb
xor
adcl
fsubs
out
fistpll
fiadds
mov
stos
mov
daa
aaa
in
push
pop
xorb
cld
lret
cld
mov
push
sbb
mov
cmpsl
and
out
imul
or
mov
movsb
and
pop
mov
in
jb
aad
xchg
lea
data16
inc
add
mov
dec
xchg
int
push
pop
xchg
inc
dec
push
jne
inc
int
adc
add
dec
gs
loopne
addl
lea
rcrb
cs
les
and
sarb
test
jnp
xchg
mov
mov
sub
mov
pop
inc
mov
sarb
stos
push
jno
sub
repz
mov
jns
jl
ret
cmp
call
fdivl
cwtl
pop
cmpsb
mov
test
icebp
daa
into
test
push
jnp
and
popf
cmp
push
pop
xor
jecxz
push
mov
stos
ljmp
aas
and
mov
xchg
push
dec
fwait
pop
popf
or
sub
daa
popf
mov
xor
repnz
jns
add
loope
outsl
mov
jle
sti
inc
adc
or
sahf
sar
in
push
mov
addl
dec
mov
push
sub
sub
mov
jns
xor
subl
xor
std
mov
push
lret
jne
mov
adc
push
xchg
cmp
test
xor
fistps
inc
leave
jno
mov
fistps
ja
lahf
arpl
movsb
or
pop
adc
sub
fwait
cwtl
lods
pop
sub
push
outsl
mov
dec
sbb
out
in
xchg
stc
shlb
popa
cmpsl
ljmp
aaa
push
fisubrl
mov
push
ja
add
cmp
xchg
stc
or
lret
repz
ja
xchg
pop
sbb
xchg
subl
sbb
push
mov
and
dec
repz
and
cld
out
mov
mov
rorb
sub
add
sbb
scas
xor
test
movsl
loopne
push
pop
dec
push
iret
lcall
adc
pop
cmp
in
in
pop
mov
rcrl
mov
pop
lahf
scas
mov
clc
and
xchg
ds
roll
bound
mov
add
mov
pop
movsw
xor
pop
or
stos
inc
mov
sub
push
scas
aam
in
mov
sub
roll
push
inc
call
test
arpl
sbb
roll
aam
or
fisubl
mov
sub
sbb
shrl
xchg
repz
scas
rcl
and
push
mov
and
in
mov
fldt
movsb
js
or
jle
orb
stos
mov
jb
jne
jns
outsb
sub
push
stos
mov
stos
pop
decb
clc
stc
subb
je
addr16
enter
mov
pop
pop
jmp
mov
and
xchg
pop
nop
leave
iret
in
inc
xlat
cmp
lods
ds
cs
mov
jle
mov
out
mov
out
out
mov
cmc
imul
push
pop
in
xchg
xlat
sahf
jo
pop
frstor
sub
adc
sbbb
add
lds
sti
push
ja
stos
or
hlt
xor
sbb
add
in
jmp
cmp
cltd
inc
stos
or
push
stc
dec
icebp
outsl
mov
mov
xor
orl
add
nop
jp
sbb
in
xor
int3
pop
aaa
pop
and
or
jg
add
lock
sub
xor
pop
imul
mov
mov
sbb
fisubl
jecxz
pushf
into
mov
or
es
fidivl
roll
and
mov
dec
lcall
cmp
into
fnstcw
xchg
cmp
mov
in
in
cmp
pcmpgtw
xor
jne
or
add
scas
or
out
fsubl
push
xchg
sub
sbb
sbb
icebp
sbb
clc
cmp
gs
incl
lods
cmp
dec
xor
pop
jno
inc
mov
mov
add
jmp
mov
add
inc
loop
xchg
xchg
repz
or
jns
les
out
mov
pop
sub
cmp
rcrb
stos
add
std
aam
fiadds
test
mov
pushl
test
push
sub
jne
add
mov
sar
imul
decb
mov
lods
push
add
dec
xchg
cs
pushf
xor
inc
in
pop
cmc
addl
js
jnp
mov
jne,pn
loope
sub
pop
push
scas
test
lods
arpl
out
push
mov
add
xor
subl
xor
lret
addb
mull
add
jns
jle
adc
test
mov
ret
sbb
or
xchg
cs
fwait
ja
stos
jecxz
shl
xlat
lret
xor
into
out
cmpsb
adc
out
sub
lods
popa
and
in
jo
mov
fstl
fsubrs
rcr
xchg
fmul
push
roll
mov
mov
subl
into
enter
fwait
lods
jae
cmpsb
cld
push
jns
icebp
lret
int3
sub
push
stos
dec
xchg
lock
btc
cmp
add
dec
loop
clc
sub
in
inc
sub
jb
mov
test
cmp
inc
addb
jne
push
iret
xor
addw
adc
imul
adc
push
add
jle
xor
inc
sarl
sbb
test
push
jo
mov
stc
lock
test
movsl
nop
sbb
and
mov
xchg
cmpsb
push
cmp
leave
les
cmp
pop
stos
cmc
iret
stc
in
jns
testl
mov
mov
push
xor
mull
mov
inc
arpl
or
lahf
ficoml
sbb
out
mov
inc
lret
stos
jb
orb
mov
pop
in
push
andl
push
movsb
dec
test
lahf
add
addr16
loopne
movsb
fs
cld
cmc
fs
push
popw
and
jo
hlt
lret
jl
and
add
mov
push
sbb
xchg
test
js
mov
test
mov
or
test
call
mov
imul
mov
and
stc
jnp
inc
push
inc
lods
pushf
out
jno
sbb
loope
cmp
js
lret
add
ret
adc
fs
add
or
pop
xchg
clc
movsb
aaa
test
loopne
fwait
push
mov
and
pop
es
imul
fwait
cmp
jp
aas
push
fwait
mov
dec
icebp
cs
xor
cmp
and
ficoms
or
iret
xchg
orb
sbb
adc
pop
sahf
jle
add
lods
popa
pop
faddl
popa
cmp
stos
movl
jecxz
cmovno
rcl
dec
inc
inc
and
add
cmp
pop
jecxz
jo
inc
xor
addr16
mov
cld
inc
test
xlat
dec
ss
out
cli
cmc
pop
adc
mov
pop
mov
sahf
aas
xchg
pusha
mov
inc
roll
es
xchg
dec
xchg
aas
sbbb
outsb
pop
mov
outsb
pop
aad
and
xor
lods
mov
clc
jnp,pt
mov
xchg
xchg
adc
and
xor
ss
int3
inc
jae
rcl
insb
out
adc
sti
dec
cli
idivb
call
adc
pop
test
mov
pop
mov
adc
ret
pop
je
mov
xchg
push
addr16
and
jmp
testl
ficomps
push
lods
in
inc
mov
sbb
jmp
rclb
icebp
dec
sub
rorl
in
js
fistpl
push
rcll
rep
inc
bound
pop
pop
int
adc
popf
testl
add
cmp
and
push
imul
xchg
xchg
sub
fs
xchg
pop
push
movsl
dec
pop
fwait
out
fidivs
cmpsb
inc
repz
xor
ret
mov
pop
add
int
sbb
test
mov
adc
fs
int
jg
adc
arpl
push
hlt
sbb
sbbb
inc
lret
test
xchg
jno
xchg
flds
repz
cmc
popf
insb
mov
and
data16
ds
leave
fldl
movsl
jnp
dec
or
imul
sub
inc
sbb
outsb
fldl
hlt
add
dec
and
adc
lds
in
mov
rcl
inc
pop
clc
inc
mov
cmp
push
call
and
or
sub
jg
dec
data16
mov
lcall
sahf
xchg
aad
shl
lds
leave
fcomip
sti
xchg
sbb
lods
sbb
inc
mov
sti
jl
inc
cltd
mov
lods
fs
xor
pop
mov
incl
test
insb
adc
leave
or
loope
imul
sbb
dec
loop
mov
mov
sbb
or
jge
push
inc
cmp
pop
nop
jno
xchg
in
gs
test
push
aaa
negb
cli
jge
xor
push
ret
rcll
adc
mov
jne
jns
lahf
mov
inc
ret
mov
je
fcoms
or
cli
fstp
fimull
pop
test
inc
std
sbb
out
lea
dec
jmp
pusha
stos
outsl
xor
pop
subl
add
leave
sahf
add
in
inc
test
or
mov
sub
cmpsl
es
push
xor
mov
stc
test
gs
inc
dec
lret
adc
es
mov
test
lret
cltd
pusha
or
lods
aad
or
je
jno
ud2
std
in
or
push
not
add
cli
orl
arpl
testl
dec
sub
cmc
mov
in
imul
and
out
mov
fadds
xchg
push
cs
mov
lods
testb
jle
jb
mov
ret
clc
aad
mov
mov
arpl
out
es
adc
lds
xor
andb
xchg
sbb
das
inc
pop
mov
jae
lods
pop
fisttpll
or
jne
lea
cwtl
dec
enter
cmp
sub
pop
scas
dec
fdivs
test
xor
jo
sub
mov
std
mov
push
dec
clc
mov
xchg
fdivl
mov
or
imul
imull
fnstsw
mov
xchg
repnz
pusha
xor
movsb
mov
js
push
les
and
rorb
xchg
dec
sub
add
decb
leave
mov
andb
push
mov
jb
adc
jo
call
popa
daa
rclb
adc
ret
xor
adc
and
inc
out
fbld
and
or
hlt
xchg
adc
push
sub
js
cmp
dec
pop
je
popf
pop
imul
testl
jae
rolb
adc
dec
fidivl
add
pop
xor
and
inc
sbb
and
movsl
mov
lea
scas
pop
pusha
into
sbb
inc
pxor
pop
mov
inc
and
lret
xor
mov
mov
xlat
pop
aad
xchg
pop
adc
inc
ds
add
in
dec
fisttps
xchg
xor
xchg
sti
mov
jge
mov
adc
jns
lods
push
push
inc
rolb
mov
insb
mov
mov
movsb
add
mov
ja
sub
std
add
std
insb
sub
std
je
test
dec
add
xor
daa
jns
or
insl
inc
mov
xchg
inc
cmpsb
fprem
dec
scas
sbb
aaa
nop
push
inc
movsl
or
ss
add
fbld
iret
testl
js
push
push
mov
add
and
inc
push
lods
ret
idiv
or
mov
jl
push
jecxz
push
adc
gs
loope
mov
cmp
sbb
mov
mov
mov
add
xchg
daa
mov
push
sub
sub
mov
shll
xlat
mov
aad
xor
cmpsl
cwtl
mulb
je
subb
or
push
fwait
or
sbb
lcall
daa
je
pop
inc
cmp
push
aam
lea
fwait
jo
in
jnp
and
jno
insl
dec
pusha
add
cwtl
jae
repnz
jno
push
fs
mov
sbb
fs
repnz
test
add
into
adc
mov
cmp
es
rol
jg
pushw
iret
mov
gs
clc
orl
stos
hlt
push
mov
incb
scas
es
arpl
pop
mov
fwait
mov
sbb
xor
das
jle
in
mov
mov
sub
cmp
rolb
mov
push
loopne
aaa
loope
lea
test
mov
addl
cmc
mov
mov
xchg
sahf
push
hlt
test
roll
and
xchg
and
pop
shr
xchg
ficompl
shll
insl
xor
mov
xchg
imul
mov
mov
jae
sub
cltd
out
rorl
mov
std
scas
lahf
shr
adc
cmp
cltd
clc
lock
mov
movsb
imul
iret
lret
gs
lcall
andl
cwtl
pop
test
cld
adc
mov
push
stos
mov
jne
aam
pop
push
lea
push
ss
jae
pop
aaa
cmp
les
js
sub
pop
mov
inc
hlt
inc
loop
outsl
adc
addl
pop
shr
push
push
add
outsb
dec
movsb
fildl
push
movsb
imul
adc
int3
and
and
pop
jb,pn
jmp
enter
out
gs
in
inc
fisubs
or
jbe
cmpsb
sub
pop
and
cli
lds
mov
jbe
jae,pt
fwait
dec
and
in
sbb
js
sqrtps
jp
pop
dec
shll
mov
push
cmc
push
or
std
mov
jb
sbb
mov
jb
aaa
pop
mov
pop
ljmp
das
add
xchg
sbb
push
es
aam
mov
cmpsb
lret
or
lea
clc
sbb
adc
cli
int3
out
fadd
test
push
testb
sti
sbbl
push
dec
cwtl
std
loopne
sub
test
popa
mov
adc
xchg
cltd
fbstp
add
arpl
mov
pop
fildll
aaa
adc
iret
leave
hlt
cmpsl
lret
std
jl
add
add
inc
lock
int
add
jno
xchg
pop
or
add
bts
push
out
cmpsl
dec
in
in
icebp
test
pop
iret
xor
jmp
movsb
pop
fnstsw
jp
pop
pop
arpl
fnstenv
int3
mov
jmp
mov
cmpsb
bound
cs
or
es
stos
inc
addb
mov
dec
rcrb
inc
mov
push
dec
cmp
enter
or
push
add
adc
pop
cmp
stos
xchg
xlat
ljmp
cmpsl
lcall
and
mov
adc
pop
jno
notb
test
pop
mov
xchg
push
outsl
shl
jbe
test
enter
movsb
xor
decl
pushl
mov
add
push
dec
xchg
inc
adc
int
es
cmp
ret
mov
outsb
ret
aas
lahf
movsb
push
mov
push
add
and
adc
cmp
cmp
stos
sbb
lods
xchg
xor
xor
jbe
mov
aaa
les
inc
mov
popa
jns
xchg
jns
cmp
mov
stos
hlt
jge
dec
mov
popf
push
or
sub
idivb
sub
xlat
pushf
ret
xchg
add
outsb
xchg
jo
stos
and
and
fbstp
mov
sub
jl
mov
inc
mov
sti
cwtl
hlt
pop
xchg
or
scas
test
pop
inc
in
mov
sbb
out
enter
mov
stos
popa
adc
dec
ja
add
inc
cmpsl
pop
sub
hlt
clc
and
jae
outsb
or
add
imulb
in
lods
aad
fstl
test
movsl
mov
out
sbb
cmp
push
cs
cld
repnz
sub
inc
push
in
dec
fldl
push
xchg
mov
xor
sub
mov
sub
add
xchg
mov
test
xor
and
jbe
xor
xchg
lock
test
nop
cs
arpl
stos
cld
dec
rcrb
sbb
inc
orl
jo
mov
js
out
test
add
icebp
jmp
sbb
sbb
adc
loopne
rclb
aaa
sbb
inc
jno
insl
sub
pusha
xor
cmpsl
fisttps
cmpsb
push
jns
inc
lds
in
sbb
sbb
rclb
fstpl
xchg
adc
jae
arpl
xor
test
dec
cs
mov
fdivs
mov
pop
mov
dec
stos
push
fwait
iret
stc
sub
loope
jecxz
sbb
fs
pusha
mov
repnz
loop
aaa
test
cld
fwait
decb
ja
dec
sub
hlt
repnz
cmpsl
addr16
mov
jg
outsl
sbb
pop
mov
cmp
or
xchg
jmp
add
push
sti
mov
mov
mov
push
in
mov
stos
jbe
and
xor
lret
lcall
lret
jmp
mov
andl
aaa
nop
push
push
gs
cld
ret
sub
popf
sub
fisubrs
mov
inc
nop
adc
cmpsb
pusha
add
fldcw
lods
dec
dec
jg
cli
sbb
gs
mov
push
pop
push
add
gs
dec
jl
repnz
int3
inc
addr16
adc
outsl
clc
mov
sbb
push
sbb
xlat
mov
add
rorl
scas
incl
sub
cmc
popf
nop
into
hlt
cmpsb
cpuid
dec
sub
push
jne
dec
fistpll
je
pop
push
xor
nop
dec
xor
test
cld
pop
push
mov
call
jecxz
test
test
fsubrs
push
int3
in
cmp
jo
mov
out
subl
cmp
inc
xorl
sti
mov
mov
rcrb
jmp
mov
insl
insl
int3
repz
fildl
pop
adc
in
adc
leave
test
fwait
and
addr16
sub
adc
or
movl
cmp
mov
insb
push
sbb
test
daa
sub
push
and
cmpsl
dec
pushf
mov
rcl
adcb
out
push
cwtl
pop
fmuls
adc
sbb
or
add
mov
sub
push
push
lods
stos
adc
push
loope
je
push
popa
pop
and
jecxz
ret
xchg
mov
mov
mov
mov
xor
lds
fcomps
daa
movsl
jge
mov
mov
cltd
xchg
sbb
dec
cwtl
lcall
mov
xchg
xchg
push
repnz
arpl
in
int3
jl
cmpsl
loope
push
fbstp
jge
inc
cmpsl
cmp
mov
popa
jecxz,pt
outsb
clc
ja
xor
lea
std
pop
out
push
fstps
out
add
adc
cmp
fwait
loopne
or
jl
cmp
jnp
movlps
dec
loopne
fcmovnu
cmpsb
and
les
dec
ja
pushf
insb
lcall
push
roll
rcrl
aas
inc
cmp
sbb
dec
fidivrs
adc
jnp
push
int
inc
gs
inc
dec
rclb
lcall
pop
out
adc
cli
stc
sub
pop
mov
cmp
mov
mov
xchg
xchg
js
add
pop
mov
sti
dec
jl
adcb
xor
negl
jmp
add
scas
test
jae
add
sbb
pop
xor
cli
pop
pop
fstpl
mov
insl
push
leave
movsb
imull
mov
add
xchg
ss
cmc
mov
aad
aaa
mov
call
and
cmpb
iret
xchg
imul
pop
das
jo
fisubrl
lret
mov
adc
imul
fimull
leave
loopne
pop
int3
aas
fstpl
jae
add
sarl
dec
movsl
sbb
jnp
mov
cld
cs
clc
test
mov
adc
add
dec
push
and
cmpsl
jnp
loopne
pop
lods
dec
mov
neg
int3
mov
jbe,pt
lahf
orl
orb
xlat
into
ficompl
pmulhuw
xchg
inc
or
gs
add
mov
cmp
popf
rcrl
push
lahf
add
aas
loope
or
fsubrp
mov
pop
sbb
fisttpll
ret
test
xchg
mov
out
repz
out
jmp
mov
clc
orb
mov
mov
sub
mov
jmp
jl,pn
jmp
sub
rcr
ret
cmp
mov
or
inc
add
or
fisttpl
lahf
arpl
inc
xor
mov
cmpsl
fisubrs
and
and
sbb
sbb
mov
sbb
iret
mov
rorb
test
lret
xchg
cmp
shrl
mov
jne
sub
dec
clc
push
out
xor
addb
aam
inc
adc
sub
jg
pushf
lock
adc
dec
push
xor
fimuls
das
cmpsl
ret
and
xchg
je
dec
cmp
mov
xchg
aas
add
pusha
pop
cmp
daa
mov
aam
mov
lret
ds
pop
xchg
lret
sbb
push
sarl
jg
ljmp
xor
pop
fwait
push
sub
cwtl
cmpsb
push
mov
addl
dec
sub
adc
adc
push
cmp
fistpll
les
or
sbb
sbb
stc
mov
stc
mov
stos
scas
xchg
xchg
adc
sbb
in
rcrl
movl
jnp
add
jne
xchg
in
and
xchg
adc
sti
test
fsubr
out
test
adc
xchg
xchg
imul
loope
clc
adc
push
sbb
sbb
enter
pop
xchg
out
xor
jge
test
add
rcr
jo
mov
xchg
adc
repz
fistpll
jp
inc
ljmp
dec
ljmp
adc
shl
jnp
push
test
daa
dec
jmp
fstl
icebp
mov
fisttps
push
lds
xor
bnd
mov
xlat
pop
loopne
pop
stc
mov
inc
xor
dec
xor
cltd
sbb
cmp
fadds
fs
adc
cmp
add
stos
and
mov
mov
mov
cmp
push
lahf
es
call
je
sbb
mov
xor
dec
scas
aaa
mov
fcmove
xchg
adc
cmp
sbb
mov
xor
or
add
rcll
mov
inc
dec
sub
xor
push
test
imul
cmp
xchg
in
fnsave
mov
jge
pop
scas
mov
inc
jmp
push
sahf
mov
flds
mov
test
sbb
pusha
test
or
push
dec
mov
fwait
pop
sbb
jecxz
in
dec
int
mov
arpl
call
jmp
adc
fildll
add
pop
dec
adc
add
mov
lahf
jne
jns
jmp
and
push
lea
imul
xchg
xor
pusha
into
stos
test
mov
jle
inc
jns
inc
out
and
xor
sub
dec
inc
jmp
cmp
stos
movsb
sub
pop
cmp
outsl
mov
jo
shll
xchg
mov
or
xchg
mov
fwait
push
or
pop
push
push
loopne
or
jge
xchg
inc
push
add
mov
lret
lea
cmp
mov
adc
mov
jnp
inc
in
pop
jnp
les
mov
fstl
out
insb
mov
cli
frstor
xchg
fwait
inc
mov
stos
jo
push
movsb
inc
cltd
add
inc
xchg
punpckhbw
in
pop
imul
out
jno
xchg
inc
js
mov
popa
jo
push
insl
ljmp
outsb
outsb
outsl
movsb
in
push
lahf
js
push
xchg
imul
push
nop
rolb
sbb
std
adc
test
out
repnz
inc
dec
insl
push
xchg
xorb
xor
push
adc
and
and
add
and
sahf
xlat
imul
jl
ficoml
in
movsl
fsubrp
mov
cmp
cli
push
mov
cmp
cmp
jae
push
mov
xchg
lea
int
jg
aaa
jbe,pt
test
adc
or
mov
adc
data16
js
cmp
into
push
add
push
push
inc
pop
daa
cltd
jbe
lds
addl
xchg
insl
or
jecxz
or
pop
dec
pop
leave
xor
jmp
addr16
mov
jo
iret
jo
loopne
cltd
subl
cltd
jecxz
jge
xchg
mov
mov
orl
nop
or
cmp
jecxz
sbb
mov
orb
inc
out
jns
sbb
or
aaa
xchg
add
aam
push
mov
mov
mov
jns
repz
xor
arpl
ljmp
cmp
rclb
lods
or
test
fwait
aad
movsl
mov
fwait
stc
xchg
hlt
scas
sub
lcall
adc
pop
jmp
cmpsb
scas
lret
jl
mov
mul
add
dec
jl
enter
lds
push
sbb
popf
aas
push
jb
andb
lock
imul
repnz
or
sahf
dec
repnz
dec
xchg
imul
xchg
push
push
sub
add
pop
divl
mov
inc
adc
mov
cmp
mov
mov
lcall
xorb
jmp
aaa
jge
jno
push
pavgb
addr16
dec
jl
lods
jmp
or
jl
call
dec
shrl
nop
mov
rcll
xor
push
into
jno
std
stos
mov
test
sahf
mov
or
inc
pop
fsubrl
out
and
xchg
mov
and
mov
add
ds
loope
negl
and
dec
ljmp
sldt
push
insb
sub
stc
or
rorb
adc
cmp
adc
inc
scas
and
mov
cmpsl
stc
push
test
push
out
xor
pop
outsl
cmp
dec
test
out
xchg
fisubrs
pop
push
fdiv
jecxz
xor
pop
out
addl
mov
movsl
out
dec
lcall
lahf
pop
jp
adc
mov
sbb
rclb
popf
arpl
or
sub
cld
mov
test
sbb
push
push
adc
push
pop
inc
or
xchg
jnp
pop
lds
xlat
inc
push
mov
mov
mov
push
jl
fldz
cmc
jl
imul
or
stc
in
xchg
cmpsl
jp
jnp,pn
inc
pop
add
scas
xor
pop
jecxz
or
push
loop
addl
int3
adc
xlat
fiadds
sub
jmp
push
mov
adc
pop
jnp
mov
mov
sti
dec
in
mov
or
inc
or
mov
shrb
pusha
jo
mov
xor
adc
imul
out
push
inc
lea
mov
dec
setbe
adcl
cli
in
imul
or
stos
xor
imul
sbb
xchg
cmpsb
and
sarb
loope
lods
adc
inc
lret
xchg
icebp
xchg
mov
lcall
inc
orl
jle
outsb
mov
rol
xor
pop
dec
add
mov
outsb
cwtl
inc
xor
lods
pop
xchg
jl
cs
jo
sahf
mov
mov
nop
mov
int
aad
pop
cli
adc
or
pop
data16
cmp
rolb
sbb
test
std
mov
stos
ds
inc
or
lods
adc
pop
adc
pcmpgtd
push
addb
push
inc
inc
test
pop
mov
xor
dec
loop
testb
cmp
and
lret
andb
mov
std
jne
sarl
lods
and
jne
inc
popa
fbld
rcll
js
data16
lret
mov
cwtl
pop
mov
mov
cwtl
cli
icebp
dec
ret
int3
add
out
push
cmc
ret
ja
pushf
xchg
aaa
push
sub
adc
imulb
inc
jmp
xchg
inc
mov
es
inc
test
lea
cld
addr16
xchg
and
mov
adc
sahf
fnsave
sub
fs
inc
mov
mov
mov
out
data16
mov
cmc
out
js
and
pop
sub
repnz
imul
dec
adc
mov
repnz
fiaddl
mov
into
inc
pop
enter
insb
or
pop
sahf
test
xchg
clc
testl
add
add
lods
adc
fs
aas
movsb
scas
xchg
or
incb
inc
pop
sbb
jne
stos
sti
pop
jmp
test
push
sbbl
or
jg
ror
jne
cmpsl
jp
inc
jne
mov
cli
and
hlt
mov
notb
mov
les
imul
call
mov
out
xchg
dec
jecxz
jae
inc
ret
xor
cmc
pop
ret
gs
xorb
mov
loope
dec
out
sbb
xor
in
pop
jmp
or
mov
js
sub
or
into
sti
repz
sub
xchg
adc
insb
and
and
xor
into
rclb
ss
mov
adc
sbb
mov
adc
ja
gs
in
stc
in
xchg
cmc
mov
mov
dec
dec
xor
xchg
xchg
int
fiadds
cmp
adc
sub
iret
cltd
add
out
or
divl
fsubp
je
mov
daa
scas
xchg
in
mov
dec
imul
int3
dec
rcl
fwait
push
mov
mov
dec
or
and
sti
int3
mov
mov
movsb
in
and
arpl
out
cmc
lock
mov
daa
fbld
pop
scas
addw
lea
mov
test
adcb
loopne
lock
and
jp
pop
sarb
icebp
adc
test
jbe
xor
pop
subl
sbb
inc
and
push
dec
sub
test
xchg
aad
test
pop
sbb
ss
mov
sub
pop
std
xchg
aad
and
mov
and
insb
sti
data16
sbb
out
sub
loopne
xchg
negl
push
mov
mov
rcl
out
nop
sbb
rorl
xor
jae
jbe
xchg
sahf
imul
inc
dec
movsb
pop
fstl
and
orb
mov
lock
ret
jle
or
adc
inc
mov
repz
cmp
adc
fnstcw
xor
rclb
scas
flds
mov
lret
icebp
inc
mov
leave
outsb
sbb
mov
or
ja
mov
lds
rorl
xlat
or
xchg
dec
xchg
cli
mov
sub
cmp
out
jne
js
pop
repnz
arpl
dec
mov
pusha
dec
outsb
stc
fs
ja
adc
flds
pop
cmp
popa
pop
movsl
mov
xor
mov
in
fwait
or
inc
xchg
gs
xor
adc
loope
jg
leave
or
cmc
mov
sbb
push
jmp
arpl
pop
jb
in
pop
jmp
addr16
fistps
pop
negb
or
add
mov
popa
and
std
call
mov
pop
add
repnz
pop
xor
mov
call
or
mov
aam
daa
sub
outsl
ljmp
ficompl
loop
popa
xor
dec
mov
imul
insb
arpl
add
daa
repz
xlat
inc
lret
f2xm1
inc
mov
idivl
jg
mov
adc
aam
outsb
sbb
xchg
test
pop
cld
fdivrl
push
fimull
fstl
mov
lcall
dec
jge
bound
fimuls
cmp
and
inc
lods
aaa
popa
xor
clc
cltd
cmc
or
push
ja
repnz
jecxz
test
push
jl
sbb
mov
push
mov
mov
xor
xor
es
rcrl
xchg
imul
popf
fadds
pop
inc
inc
cltd
mov
inc
jg
jle
scas
test
sub
std
in
mov
jae
push
pop
xchg
mov
rolb
xor
fistl
dec
or
inc
push
rolb
scas
dec
gs
stos
pop
cld
mov
jmp
pop
loop
or
ljmp
aaa
push
jae
call
cmp
sbb
mov
aas
inc
movsb
jbe
movsl
icebp
dec
adc
adc
es
movsl
test
pop
cwtl
add
loopne
add
mov
aaa
cs
stos
inc
mov
lds
pop
lock
and
sub
mov
jg
jl
xor
sbb
adcb
je
icebp
xor
repz
into
pushf
or
mov
push
inc
sahf
sub
aas
push
jmp
fidivrl
and
jmp
xchg
loopne
cmpsb
sub
imul
sbb
jmp
jae
jbe
roll
rcll
sub
popa
mov
arpl
inc
cmp
ja
xchg
ret
lcall
bound
das
jmp
addr16
sbb
pop
out
cli
lcall
stos
subb
sub
jg
cmp
jl
push
mov
cs
mov
push
out
and
add
adc
aad
adc
cli
lcall
scas
mov
int3
mov
je
xor
loopne
mov
jb
dec
inc
call
fst
xchg
cmp
lretw
rcr
push
sub
mov
xor
into
lods
fbstp
mov
inc
mov
int3
sub
or
mov
adc
sahf
call
test
loop
jbe
ret
pop
sahf
add
call
ret
and
or
scas
ror
mov
cmp
push
pop
int
mov
arpl
addr16
loopne
rcrl
pop
gs
push
lcall
pop
adcb
cmpsl
cwtl
pop
icebp
mov
inc
inc
out
stos
es
iret
push
and
ret
xchg
ljmp
inc
mov
dec
and
sti
insl
insl
pushf
push
mov
imul
popa
dec
outsb
mov
jp
jle
gs
mov
out
ficompl
xchg
test
lret
ret
out
daa
loope
add
mov
cmp
xchg
add
mov
jns
jle
cmp
pop
jb,pt
aad
scas
movsb
mov
mov
icebp
addl
movsb
test
xlat
cs
mov
lcall
shll
pushf
or
les
xor
fsubrs
dec
sbb
mov
push
pop
pop
aam
cmp
inc
xor
sub
hlt
cmp
icebp
mov
daa
add
iret
xor
cld
repnz
push
data16
out
adc
or
inc
add
jnp
ret
add
aad
inc
gs
and
outsl
and
psllw
mov
enter
aad
imul
repz
xor
int3
mov
pop
loop
jae
inc
mov
sbb
add
into
push
addr16
in
cli
and
stc
xor
sbb
mov
pop
repnz
push
mov
fsubl
cmpsl
lahf
bound
divb
or
in
cli
idiv
inc
cmpsl
add
aaa
dec
repz
in
insb
loop
cmpsb
push
hlt
inc
adc
xchg
movsb
push
insl
and
add
test
je
mov
cmc
xchg
idiv
adc
mov
mov
fs
es
pop
sti
iret
enter
xor
and
daa
ds
mov
lahf
dec
pop
xor
mov
ja
cli
nop
pop
ret
repz
mov
arpl
mov
xchg
in
stc
jp
out
jne
sub
in
pop
xchg
add
lahf
aam
ret
or
dec
push
fs
add
mov
test
bound
mov
jns
stos
scas
lahf
push
xor
movsb
cmp
data16
xchg
jl
adc
mov
pop
and
lods
loop
cs
inc
mov
mov
adc
cs
not
jle
out
jnp
shll
xchg
ja
push
scas
adc
mov
cltd
subb
mov
or
push
mov
mov
movl
outsl
jmp
mov
xor
lods
ss
sub
test
inc
sub
mov
push
push
pop
cmp
cmp
out
divb
push
sub
loope
inc
lahf
popf
mov
pop
inc
or
pop
fnsave
push
js
sub
das
lahf
xlat
test
mov
test
pop
mov
loop
rolb
mov
push
jno
mov
mov
lahf
out
push
stc
dec
les
clc
mov
movsb
jno
pop
sub
sti
roll
mov
push
add
cmpsb
mov
xor
adc
mov
dec
push
mov
enter
mov
mov
mov
xchg
push
cltd
mov
shlb
xchg
cmp
adc
in
ret
loop
popa
testl
pop
xchg
push
pushf
mov
sbb
push
push
mov
cmpsl
sahf
add
aam
or
loopne
mov
push
sub
xchg
daa
lods
push
pop
jmp
iret
mov
popf
and
aaa
inc
pop
xchg
pop
push
ja
mov
test
out
inc
dec
add
jl
adc
sbb
push
loopne
push
mov
cltd
jnp
mov
push
repnz
movsb
xor
adc
orb
out
cmc
out
sbb
stos
sub
dec
push
ficoms
aaa
ret
push
sub
lahf
dec
out
into
loop
pop
mov
and
scas
mov
in
incb
enter
inc
std
mov
cmp
jmp
push
adc
aad
adc
rclb
sbb
push
pop
cs
mov
xchg
cmp
cmp
cld
jecxz
push
add
jnp
pop
or
mov
inc
cmp
and
jge
cli
pop
bound
cmp
mov
add
jnp
data16
adc
std
jns
out
sti
filds
pop
outsb
ficomps
pop
adc
jg
cmp
jecxz
sbb
int
pop
in
adc
push
sahf
jnp
inc
cmpsb
out
je
sbb
icebp
stos
and
jge
cld
or
loope
inc
add
mov
dec
mov
inc
cmp
dec
adc
jbe
xor
push
sbb
loope
mov
fadds
xchg
ss
cmp
test
xor
cmp
outsb
jg
sbb
mov
hlt
icebp
ret
cld
enter
sub
lret
dec
mov
decb
mov
push
jge
pop
stos
xchg
dec
bound
push
cltd
outsb
mov
jo
sbb
rolb
sub
push
xor
dec
xor
or
ret
popa
jecxz
movsb
pop
pop
or
mov
enter
push
pusha
outsl
loopne
int
movsl
mov
jle
pop
dec
jmp
lods
and
cmc
or
cmc
push
wrmsr
pop
push
mov
adc
pop
sbb
fisubl
shll
fs
call
fwait
pop
mov
sahf
or
iret
xor
adc
cli
rcrb
in
imul
push
xor
add
adc
imul
or
push
sbb
scas
in
in
xchg
xor
cmp
mov
enter
inc
sub
inc
incl
jp
xchg
cs
cmp
and
mov
dec
push
sub
adc
fcoml
mov
and
jl
shlb
imul
mov
jge
aas
push
pop
rcll
pop
add
pop
shlb
or
xchg
dec
xchg
push
rcll
sub
dec
and
inc
mov
test
shll
mov
mov
sub
add
lret
in
addr16
cmp
sub
rcll
loopne
mov
mov
out
mov
adc
adc
mov
dec
rol
rorl
jb
dec
sbb
int3
sub
xor
cmp
sar
xor
and
shr
cmp
inc
mov
outsl
loop
mov
loop
mov
ljmp
loope
cmc
mov
mov
arpl
push
pop
out
push
pop
xchg
stos
cs
push
mov
lock
mov
dec
push
ret
daa
mov
movl
and
ss
xorl
sbb
pop
mov
mov
jbe
sbb
add
cmp
xchg
xchg
ret
push
les
adc
fisttps
jne
std
setne
add
add
xor
push
push
in
sahf
pop
or
mov
jno
stos
sbb
and
jno
aad
mov
shr
and
or
stos
insb
sub
mov
imul
and
xor
insb
fnstcw
or
mov
and
ret
lret
clc
adc
jmp
bound
divb
cmp
mov
outsl
iret
out
pop
adc
push
int
int
arpl
aad
pop
jb
sbb
cwtl
pop
and
maxps
fs
cmc
xchg
inc
jno
xor
sbb
mov
les
sub
popf
add
lea
setle
insl
movsl
icebp
fists
aam
mov
xchg
mov
dec
mov
lds
cmpsb
test
call
push
lea
fcompl
loop
mov
pop
xchg
push
pusha
sub
xor
xchg
add
insl
out
stc
loope
arpl
dec
push
int
out
sti
jg
push
push
mov
and
pop
andb
loop
inc
add
rcrb
je
lea
insl
inc
outsl
jmp
lods
enter
xor
push
mov
jae
pop
dec
imul
jmp
jae
fbstp
stos
lahf
and
gs
cmp
xchg
jl
or
repz
scas
lods
cmp
popf
movsl
cli
std
ljmp
inc
cmc
and
fs
mov
lock
adc
add
add
subb
cltd
into
adc
pop
or
dec
lret
mov
lcall
fwait
sti
jle
pop
inc
mov
lcall
insb
and
repz
mov
sbb
push
mov
test
lahf
mov
push
fcmovnu
xor
xor
ja
pop
inc
incl
cld
cli
cmp
inc
andw
xchg
orb
mov
add
xor
loop
and
xchg
mov
aam
into
sbb
xor
in
out
jbe
inc
mov
mov
lcall
mov
lahf
push
popa
in
ret
fadd
pop
lods
mov
jno
arpl
aam
test
pop
mov
xchg
cld
clc
mov
in
cmp
data16
xor
xlat
int3
enter
mov
xor
loop
popl
cmp
fs
repnz
jmp
mov
iret
fucomp
mov
mov
mov
mov
cmp
xchg
sbb
lea
cmp
mov
cmc
xchg
inc
mov
xor
imul
es
or
push
lcall
and
push
cltd
out
popf
xchg
mov
mov
fmul
in
lret
cmp
and
sbb
jo
aad
xchg
adc
pop
pushf
cmp
sahf
cltd
lret
mov
jmp
mov
xor
or
fistpll
jmp
sahf
fs
outsb
cwtl
mov
cmp
pop
rorb
lahf
out
cld
or
sbb
add
inc
jecxz
push
sub
mov
mov
hlt
xor
jmp
aaa
adc
ljmp
xchg
pop
push
add
inc
adc
sbb
jno
sbbb
sbb
xor
jle
push
xor
js
xlat
nop
lret
ljmp
fwait
mov
adc
popf
cmp
mov
int3
jbe
test
push
stc
mov
add
xor
jnp
dec
xor
jae
icebp
cmpsl
and
or
dec
push
rolb
cmp
insl
scas
xchg
out
ds
lcall
cmp
out
ljmp
imul
loope
push
mov
decb
lods
cmp
fidivl
push
sbb
add
add
mov
jp
xor
lods
adc
out
scas
mov
mov
cmc
jg
and
xor
mov
mov
dec
mov
sarb
push
loop
sahf
test
jp
push
adc
shrl
sbb
rorb
pop
or
dec
pop
fwait
mov
scas
shlb
mov
jl
sbb
sbb
cld
in
lret
lar
scas
pop
shl
jecxz
xor
or
sbb
sarl
scas
push
mov
xlat
out
adc
icebp
test
cmp
push
dec
js
pop
movsb
pop
xchg
adc
divb
mov
jbe
es
lret
out
fs
xchg
sub
out
sub
jns
sahf
mov
mov
mov
mov
dec
out
add
mov
adc
and
jb
stc
jecxz
cmp
jb
lcall
movsb
ret
xor
or
lahf
fadds
dec
data16
mov
into
cmp
dec
mov
xor
test
mov
addl
cmp
jo
mov
cmpsb
in
daa
sbb
cltd
out
pop
dec
adcl
addr16
sub
jnp
mov
or
add
repnz
sbb
sub
mov
hlt
push
dec
cmp
das
jne
add
pop
sub
mov
lahf
pop
aam
add
sub
into
stc
pusha
dec
fldl
int3
jo
inc
outsl
mov
push
mov
movsb
in
dec
cmpsb
orl
sub
aam
pop
ja
mov
add
fnsave
xchg
adc
std
mov
fstpt
pushf
lahf
loopne
push
insl
cwtl
xor
cmp
add
and
lahf
push
shl
inc
mov
xchg
sbb
filds
clc
cmp
xor
mov
inc
fidivl
inc
loop
xchg
cmc
xor
les
pushf
adc
push
leave
sbb
pmaddwd
inc
popf
cmp
xorb
jl
pop
inc
jge
mov
push
in
mov
fwait
push
mov
add
or
adc
loopne
gs
pop
push
int
push
leave
filds
lods
loopne
inc
or
pop
mov
sub
fcompl
test
mov
pop
mov
add
cwtl
js
insb
or
sbb
sbb
iret
das
imul
mov
jb
mov
cmp
cli
cmp
movsb
ja
in
cmpsl
xor
addl
je
hlt
fisttpl
rolb
es
inc
fidivs
es
xchg
cmp
inc
js
cmp
mov
shlb
aaa
sub
xchg
mov
xchg
gs
loope
sub
sbb
mov
movsb
cld
jnp
dec
cmp
loope
lcall
jae
sbb
mov
test
sbb
out
movsl
push
dec
jmp
cld
cmc
add
bound
xor
mov
or
xchg
jp
addl
ljmp
xlat
jae
loop
aas
ret
dec
xchg
les
or
insb
xor
xchg
mov
cmp
addr16
jae
push
lea
add
in
and
sub
dec
jne
jge
test
sbb
pop
add
lds
or
mov
movsb
jecxz
mov
sub
repz
mov
lea
aam
enter
mov
scas
lea
lcall
xchg
mov
dec
nop
mov
or
jp
outsb
add
and
sub
jle
jle
jl
inc
cmp
adc
dec
cld
daa
js
and
ret
jge
dec
mov
sbb
jb
nop
sarl
add
test
mov
adc
ror
mov
mov
test
mov
sbb
mov
stos
push
push
push
push
ret
jge
mov
push
call
aam
sti
into
pop
inc
dec
movsb
dec
iret
mov
mov
mov
aas
mov
mov
mov
ret
push
mov
mov
jns
testb
pop
mov
xor
xchg
mov
sbb
mov
cs
mov
dec
rolb
ret
or
xor
jmp
and
and
inc
das
and
pop
data16
lcall
mov
adc
dec
sti
jle
jp
pop
nop
jbe
in
fnstsw
fmuls
mov
and
mov
ret
cltd
push
mov
call
jno
aam
ret
pop
mov
shrl
push
clc
aas
clc
pusha
sti
es
inc
ss
or
mov
ficoml
dec
and
pop
sub
out
sahf
fst
scas
mov
ljmp
inc
cld
addr16
ret
sub
push
cmp
jbe
pop
sub
mov
dec
fsts
jno
push
stos
jbe
out
int
out
stos
xor
aaa
push
or
daa
or
fcoml
or
inc
xchg
push
jmp
pop
lret
inc
aad
sub
roll
pop
ret
lods
mov
sub
pop
ljmp
ds
push
jno
push
loope
jg
js
or
inc
pop
jo
fnstsw
iret
popf
scas
and
push
pop
rcll
mov
dec
das
mov
pop
out
ret
stc
dec
adc
dec
inc
insb
arpl
xchg
popa
outsl
cmc
rcrb
mull
lds
dec
stos
sbb
push
in
imul
or
xchg
and
fldcw
sbb
repz
jle
xor
inc
int3
adc
mov
add
enter
sbb
sbb
inc
sub
mov
push
testl
scas
insl
sarl
pop
lahf
jo
hlt
pop
dec
jns
mov
inc
lods
addr16
or
and
adc
stos
push
xor
lock
push
hlt
scas
xchg
iret
movsb
cmp
loopew
cmp
mov
jae
or
outsb
mov
mov
pushf
mov
shl
icebp
mov
cli
add
jns
xchg
sub
mov
xlat
cmc
ds
jns
jle
arpl
psllw
test
or
jmp
mov
inc
lock
pusha
mov
jno
add
pop
mov
xchg
and
mov
cmpl
pushf
and
gs
mov
or
and
movb
mov
in
jl
je
fstl
xor
or
or
pop
int
cmp
fnsave
aam
mov
adc
sub
roll
or
dec
xchg
adc
dec
sub
sti
jge
jno
and
and
xchg
cmp
fmull
sub
xchg
mov
jmp
shll
loope
mov
push
inc
ss
int3
std
adc
jo
das
imul
xchg
sbb
aad
iret
jb
test
pop
cltd
test
cs
cltd
mov
in
push
movsl
dec
repz
mov
jno
or
sub
iret
cmp
std
mov
or
andl
lahf
ds
mov
push
inc
leave
rorb
mov
popf
insl
test
jl
mov
xorb
sbb
adc
mov
scas
mov
push
mov
pop
dec
mov
mov
push
jbe
inc
pop
pop
fsts
push
dec
fisubs
divb
inc
adc
aaa
test
stos
mov
and
and
mov
or
pop
push
mov
inc
outsl
std
adc
adc
in
test
mov
popa
ret
mov
imul
cmp
movsl
in
sub
ja
or
fs
lcall
repz
mov
repz
xchg
adc
pop
adc
test
xor
sub
daa
scas
addr16
je
int3
pop
je
mov
mov
push
cmpsb
mov
fnstsw
mov
add
inc
ja
pop
adcb
inc
sub
mov
cmp
out
dec
inc
and
sbb
dec
push
pop
sbb
push
sub
or
jl
mov
mov
mov
mov
dec
inc
xchg
inc
aas
or
xchg
decl
inc
iret
movsb
ds
ss
xchg
pushf
clc
xchg
inc
mov
int
jle
int3
stos
push
push
das
push
sub
jo
mov
loope
xchg
and
lods
dec
pushf
and
push
push
orb
xchg
lock
test
stc
or
sub
in
mov
rcrb
fs
push
test
icebp
mov
adc
mov
xor
push
jl
cmp
and
add
add
xchg
scas
insb
lods
pop
mov
test
adc
mov
addr16
push
ja
add
cmp
mov
cmp
mov
mov
mov
insb
popf
mov
icebp
mov
fs
mov
std
adc
icebp
push
jno
test
and
loope
jbe
sub
cmp
and
imul
push
icebp
mov
iret
lock
test
adc
sub
mov
hlt
adc
repnz
inc
and
and
sarb
stos
arpl
xchg
sbb
mov
out
pop
xchg
loope
xor
push
push
ljmp
sub
cwtl
pop
ljmp
jmp
inc
inc
mov
and
add
xor
mov
push
leave
mov
add
test
mov
insl
insb
push
xchg
jne,pt
xor
sahf
ret
fiaddl
gs
mov
jg
outsb
and
push
movsl
nop
adc
mov
push
pop
mov
int
xchg
pop
sub
inc
out
mov
sbb
mov
jle
add
orl
mov
nop
jle
das
nop
pop
mov
mov
jbe
mov
loopne
inc
insl
adc
mov
repnz
fldenv
sbb
aam
nop
cmpsb
das
pop
les
and
fsubs
repnz
std
jmp
sbb
aaa
pop
testb
jmp
push
push
aad
jae
adc
mov
add
mov
outsl
jmp
jns
or
fxch
and
mov
pop
xchg
inc
repnz
popf
movsl
orb
and
xchg
fwait
push
gs
rcrb
mov
sbb
inc
lods
inc
ds
pop
out
xlat
in
xchg
push
divb
int3
sub
stos
aaa
jle
scas
and
adc
pop
cltd
imul
test
shrl
add
stos
fcomps
adc
pop
es
leave
ret
sbb
push
aaa
shl
xlat
xchg
popf
xor
mov
sbb
mov
add
push
stc
sub
dec
mov
cmp
jo
cltd
add
mov
push
sub
mov
out
xlat
cmp
jnp
shll
jmp
fdivrl
stos
lret
shll
push
mov
dec
loop
ret
iret
adc
dec
mov
mov
xor
add
pop
ds
adc
popa
pop
test
cmp
dec
js
das
es
pop
pop
lock
jmp
pop
leave
lods
mov
leave
pop
mov
xor
outsb
add
mov
test
push
and
out
in
test
xlat
dec
rsqrtps
mov
push
pop
push
cmpsb
test
lret
push
xchg
aas
addr16
imul
pop
sub
inc
mov
xchg
scas
xchg
sub
loope
lock
push
fcoml
nop
jecxz
std
mov
enter
ja
sbb
sub
cmp
fistps
fwait
jle
mov
punpckhbw
sbb
mov
jno
sub
sbb
xor
test
pop
mov
xchg
pop
jmp
add
repz
pop
push
out
jo
ja
popa
mov
lcall
sbb
popf
mov
pop
jl
fwait
dec
orl
push
lods
movsb
sbb
push
dec
push
sbb
js
push
out
mov
cmp
adc
cmovl
inc
sbb
push
jg
addr16
jbe
lea
or
inc
mov
out
sub
cwtl
mov
xchg
pop
stc
pop
xchg
stc
adc
adcl
cmp
mov
scas
rolb
push
rorl
push
sti
xchg
push
mov
sbb
outsl
or
mov
jae
int
or
js
push
fsubrl
xchg
sub
fnstcw
push
inc
add
xor
cmp
and
jmp
fucomip
ja
out
sbb
mov
mov
stos
jle
mov
pop
daa
in
enter
dec
int
jne
mov
jp
mov
mov
and
push
sub
mov
icebp
aaa
je
in
lar
scas
movd
leave
lcall
movaps
push
jno
adc
cmpsl
push
xchg
push
xor
sti
pop
inc
adc
aad
cld
sbb
adc
call
push
dec
cwtl
notb
sub
cmp
cld
lahf
cmpl
pusha
push
xchg
lods
cmc
insl
pop
test
xchg
cmpsb
mov
adc
stos
mov
divb
dec
rclb
ds
cmp
arpl
mov
ret
lcall
lret
fwait
and
shll
call
loope
add
mov
cli
outsb
mov
add
out
popf
fsub
mov
add
push
and
adc
test
sub
arpl
scas
sbb
jmp
mov
test
jle
out
orl
lahf
mov
adc
movhps
mov
cli
outsb
mov
mov
jg
lret
stos
repz
je,pn
adc
jle
mov
jb
push
aad
pop
stos
push
sub
push
xor
xchg
inc
data16
xchg
jg
or
and
and
je
sarl
cltd
ljmp
sbb
adc
outsb
jo
adc
dec
fistpll
jae
imul
mov
in
dec
stos
aas
sub
in
xchg
jg
std
repz
mov
xlat
insb
push
pushf
jge
push
push
scas
push
mov
xchg
sti
addl
ret
jmp
nop
in
pop
jo
jne
xchg
inc
mov
jl
movb
arpl
cs
fnstsw
mov
outsb
jno
xor
inc
popf
xor
mov
fcoml
adc
movl
bound
mov
mov
sti
cltd
inc
xchg
push
sahf
out
addr16
negb
or
jbe
adc
xchg
or
daa
cmc
xlat
jg
xor
lds
pop
gs
xchg
mov
mov
jmp
arpl
daa
inc
lcall
adc
adc
das
pop
fwait
add
cs
rdmsr
in
sbb
jo
cltd
aam
iret
icebp
roll
jp
out
lret
insb
enter
sbb
inc
cs
js
or
leave
push
out
mov
mov
mov
mov
xchg
push
add
xchg
out
dec
stos
or
lahf
mov
bound
ret
mov
xorl
push
mov
movsb
lret
pop
std
pop
outsb
mov
ret
sbb
jbe
bound
mov
and
ret
pop
rorb
cmp
in
pop
cs
pop
add
ljmp
shll
jl
nop
std
daa
or
xor
or
push
rcll
push
mov
xchg
imul
mov
and
scas
sbb
lcall
mov
adc
js
js
sahf
movsb
imul
push
ja
push
inc
and
dec
pushf
jg
movsb
sbb
outsw
cmpsb
inc
pop
or
jmp
fsubrl
subb
jge
xchg
gs
push
push
jo
xchg
xor
test
stos
pusha
iret
mov
hlt
imul
and
repz
imul
in
scas
mov
xor
and
scas
cmpsb
lahf
push
sub
adc
xor
adc
xchg
pop
sbb
xchg
aas
mov
gs
and
pop
sahf
sbb
stc
push
adc
imul
jmp
adc
jecxz
stos
or
dec
mov
aad
mov
sbb
jl
cli
xchg
nop
icebp
jmp
jns
jg
sbb
dec
xchg
inc
lock
mov
sub
adc
addr16
inc
shlb
scas
pop
mov
sub
mov
sbb
ljmp
clc
and
mov
shld
insl
test
popa
push
or
andl
push
cwtl
inc
mov
pop
mov
and
add
rcll
stos
sub
sbb
fwait
xchg
cmp
popa
and
and
mov
sub
insl
sub
in
cltd
push
adc
je
sub
inc
sub
jg
sbb
fcomi
mov
fistps
xor
cmpsl
jmp
lods
in
sub
aad
insl
xor
outsb
nop
daa
int3
lds
fwait
addb
lds
push
sbb
mov
adc
lods
jl
push
or
out
and
cmpsl
stc
addr16
sarl
cmp
ja
loop
stos
lods
cmpb
bswap
xor
sub
cld
mov
aaa
pushf
cmc
lahf
lret
xchg
data16
rcrb
mov
ret
cmp
jecxz
sub
pop
fbstp
push
add
sbb
fisubs
lods
xchg
hlt
sahf
shll
daa
loope
inc
decl
lds
in
loop
add
and
icebp
ljmp
ret
pop
inc
mov
jo
inc
dec
xchg
mov
addr16
je
xor
and
neg
movsl
adc
xor
push
arpl
dec
sbb
rcll
jne
lea
xchg
arpl
sbb
dec
mov
inc
mov
popf
orb
push
xchg
and
cmp
js
fdivrs
sarl
fs
or
es
add
ljmp
pop
dec
js
push
and
jo
add
inc
rclb
jnp
jae
and
lods
ljmp
pop
ficoms
test
cmpsb
xchg
lahf
lahf
clc
aad
fmuls
repz
out
ljmp
mov
mov
push
and
scas
jns
sti
xlat
sbb
adc
sbb
push
pop
mov
mov
pusha
in
sbb
bound
push
jbe
loope
ds
lret
xchg
leave
insb
rcl
mov
inc
or
je
stos
je
dec
and
sbb
int
jb
imul
xchg
outsb
lret
negb
cmp
ss
orb
mov
mov
shrb
lcall
je
es
push
push
popa
or
xor
add
sub
stos
in
jbe
js
std
xor
pop
pop
popa
cmp
mov
pop
int3
adc
lret
push
outsl
adc
outsl
push
ret
and
and
dec
pop
std
jl
or
call
sbb
enter
mov
mov
mov
insb
shlb
in
outsl
nop
xchg
fsubs
mov
movsb
sub
jp
jo
fistps
loope
call
cmp
jno
sarb
test
mov
jmp
dec
sub
lcall
roll
push
ja
mov
adc
lods
cs
push
mov
inc
and
js
aad
rorl
ret
pop
inc
in
sbb
popa
lods
push
or
push
mov
jge
jbe
mov
scas
test
adc
push
cmp
lcall
mov
popa
repnz
or
inc
out
mov
pop
subb
insb
aam
add
sti
lcall
adc
fimuls
data16
or
stos
in
sub
ret
in
sbb
add
mov
push
xor
mov
gs
fstps
shl
mov
mov
mov
adc
out
testl
fcoms
fldt
mov
cwtl
jecxz
test
test
cli
lcall
ja
sub
jmp
push
mov
mov
push
ljmp
xorl
dec
sbb
lea
pusha
pushf
arpl
push
dec
dec
xor
add
stos
cwtl
repz
popa
pop
sbb
cmpsb
or
adc
sar
sti
loope
mov
sbb
cmp
inc
pop
sub
and
aad
adc
push
andb
xor
es
mov
into
out
js
cwtl
rcll
pushf
or
ljmp
ficoms
dec
imul
fcoml
xchg
pop
xor
orl
insb
sbb
pop
and
sub
icebp
cmp
and
pop
and
jb
jne
jg
mov
inc
inc
scas
int3
jbe
mov
inc
shll
jmp
test
jle
pop
loopne
pop
jae
jo,pt
inc
mov
add
dec
push
fnstsw
cltd
loopne
mov
lock
jnp
insl
adc
mov
stos
fwait
repnz
sub
insl
loopne
or
push
roll
addr16
jle
cmp
xchg
push
cld
loopne
xor
pop
pop
out
xor
cmpb
ljmp
popf
pop
push
inc
adcl
nop
dec
mov
jg
or
mov
das
shlb
icebp
bound
add
xor
mov
repz
add
loope
add
scas
push
out
mov
or
mov
cmp
xchg
mov
mov
push
lds
or
mov
iret
jns
adc
add
jnp
mov
leave
stos
mov
push
or
sti
adc
fiaddl
ja
out
push
fs
js
adc
jns
test
cli
jl
and
jl
dec
ud0
pop
add
sub
cmp
push
mov
sbb
pop
xchg
daa
add
or
call
fwait
cmp
pop
push
js
out
icebp
push
cli
add
ret
lods
sbb
out
xlat
loope
pop
push
push
sub
lret
mov
stos
fmuls
outsl
imull
aad
or
push
imul
test
fistl
ret
push
sbbb
dec
jnp
into
mov
jbe
shlb
ret
fs
sbb
fbld
dec
push
aad
inc
jns
pop
rcll
xorb
jge
adc
adc
inc
bound
imul
fdiv
lahf
das
xor
nop
mov
and
or
in
adc
sahf
dec
arpl
inc
shr
test
xor
mov
out
leave
sbb
push
mov
push
xor
loopne
clc
sub
push
push
jg
fnstsw
pusha
add
and
clc
jecxz
push
lods
scas
imul
mov
adc
ljmp
mov
cmp
nop
loopne
xchg
ja
pop
ja
cmpsl
jae
jp
inc
inc
jae
add
es
inc
out
loop
clc
insl
mov
dec
jmp
stc
xchg
or
cli
cmp
or
pop
jle
or
in
aam
jge
sbb
arpl
fsub
add
mov
incl
sbb
adc
xchg
pop
mov
je
movsl
inc
bound
xor
xor
lea
fisttpll
out
push
push
stos
jge
shrb
shrl
pop
dec
mov
test
pop
sbb
sahf
rorl
int
mov
repnz
jp
pop
xor
and
mov
jbe
mov
xchg
xlat
repz
mov
jae
movsb
jge
and
int
rol
in
in
sti
test
jb
cmp
lret
jae
xor
rcl
outsl
pop
mov
pushf
sbb
fwait
adc
popa
and
push
int
jl
inc
imul
dec
rclb
leave
xor
roll
jecxz
popf
inc
or
jb
stos
dec
pop
lds
repz
xor
cmpsb
gs
mov
lock
cmp
mov
mov
cltd
mov
cmp
xor
cmpsb
pop
iret
clc
mov
clc
lcall
xchg
push
xor
cmp
sbb
sahf
xchg
lods
sub
sbb
pop
add
int
sbb
aas
pop
mov
jns
sub
xchg
push
mov
fldt
and
add
cmpsl
sub
cwtl
dec
pop
les
orl
popf
dec
stc
add
mov
fwait
js
cmp
cmc
icebp
lea
insb
cmc
cltd
movsl
or
leave
inc
xor
push
scas
ret
and
shlb
fcoml
jne
or
fidivrl
jns
xor
shl
inc
push
flds
mov
rolb
push
cld
cld
je
lods
icebp
sti
push
dec
fcomi
lods
es
add
mov
mov
daa
jg
inc
dec
add
test
mov
aam
movl
aam
add
xchg
stos
sub
mov
cli
dec
add
jp
ret
ret
in
dec
jp
sub
out
scas
in
rcl
addr16
repz
enter
das
jb
pop
sub
ljmp
data16
repnz
sub
xchg
and
cmpsl
push
in
popa
mov
divl
inc
dec
inc
fwait
mov
pop
push
fcoms
push
jbe
leave
pop
cmc
fidivrs
xchg
pop
pop
xor
mov
pop
mov
into
pop
outsb
repnz
test
fsubs
out
mov
pushf
inc
dec
cmpsb
gs
iret
mov
dec
mov
cwtl
scas
mov
and
add
inc
loopne
cmpl
or
xlat
shlb
mov
stc
sti
sub
xchg
mov
dec
and
xchg
and
pushf
sbb
add
add
or
mov
fildl
fiaddl
int
in
jmp
fcoms
in
adc
ja
aas
xchg
ret
out
mov
in
insl
xor
xchg
mov
sub
or
cmp
fmuls
arpl
fsub
jmp
adc
stos
sbb
lret
push
xor
nop
jp
loopne
jle
or
xor
out
mov
fs
add
sti
and
push
cld
dec
fsubrs
adc
movsb
dec
inc
inc
pop
sub
ljmp
xchg
mov
mov
add
mov
xchg
test
xor
movl
test
dec
xchg
mov
sub
lods
cmp
lcall
cmp
xlat
sbb
xchg
or
jge
fmull
xor
sub
jne
jg
jae
inc
out
negl
dec
aaa
pop
pop
mov
dec
cwtl
mulb
ljmp
push
mov
dec
lods
push
inc
cmc
inc
push
push
popa
or
mov
dec
jmp
out
dec
jnp
imul
rcl
pop
jg
jae
adc
test
mov
sbb
or
negb
pop
cmpsb
push
loopne
les
mov
push
xor
sub
jl
fldt
mov
cmpsl
jmp
and
shrb
xor
ds
sbb
mov
xchg
stc
sbb
ljmp
jge
adc
or
dec
cmc
jle
adc
cmpsb
rcrl
js
test
roll
pop
sti
add
and
popl
xchg
mov
cmp
inc
arpl
xchg
idivl
xchg
nop
mov
cmp
add
pop
das
or
pushw
mov
enter
cld
imul
rcl
in
adc
dec
dec
mov
cmp
or
inc
cmp
mov
insb
insl
jge
push
cwtl
jne
pop
or
aaa
mov
jecxz
addr16
pop
cs
out
popa
xchg
mov
popa
je
sbb
cmpsl
outsl
fidivrl
movsl
cmp
mov
aam
xor
aaa
std
push
ret
xchg
mov
daa
xchg
inc
inc
sub
adc
pop
and
push
clc
js
xchg
syscall
mov
cmpsl
push
and
loop
mov
imul
repz
dec
dec
and
shll
push
sbb
or
or
imul
enter
test
fs
divb
push
fisubl
jge
rolb
jns
rcl
mov
adc
loop
jmp
lcall
mov
ljmp
psrld
and
dec
call
fiadds
sub
fsubrs
imul
out
cltd
xchg
pop
popa
int3
push
scas
adc
rcrl
lods
jp
push
in
js
ret
pop
jne
inc
popf
mov
and
arpl
ret
push
shr
fisubl
pop
xlat
shlb
mov
in
sbbl
loop
add
adc
add
jle
mov
cli
mov
mov
ljmp
aas
test
sbb
inc
clc
aaa
mov
pop
cltd
out
xlat
mov
ds
adc
fucomp
mov
repnz
stos
or
pop
call
popa
pop
pop
push
in
std
jge
pop
add
add
inc
adc
mov
or
pop
daa
fisttpll
jb
xor
pop
jnp
cmp
or
clc
pop
jo
loop
dec
mov
jmp
sub
lods
dec
aad
dec
mov
aas
add
sti
pop
sub
or
mov
in
inc
jne
lods
mov
ret
xor
adc
in
insl
stc
shr
int3
mov
rcr
cli
scas
loopne
pop
loopne
mov
xchg
int3
fs
nop
fsubrs
push
jmp
test
lea
add
sbb
daa
outsl
jge
xorb
aaa
xor
sbb
xchg
mov
out
repnz
mov
or
push
mov
iret
pusha
fsubrl
sub
les
fisttps
lcall
add
jle
rcrb
pop
fpatan
aad
int3
mov
inc
repz
jnp
push
ret
in
pop
sub
sub
add
aad
btc
dec
mov
push
mov
popf
mov
ror
and
popl
pop
movsl
ficomps
xchg
repnz
ja
sub
jmp
pop
scas
push
push
mov
loope
sub
jle
sbb
ljmp
sar
int
jmp
testl
je
insb
push
sbb
roll
pop
cmp
shrl
rcll
mov
sub
cmp
shlb
xlat
in
mov
inc
pop
dec
mov
jg
pop
mov
jmp
mov
mov
cmp
cmp
div
mov
adc
mov
cmp
mov
outsl
push
rorb
iret
dec
ficompl
divl
or
in
ret
stc
mov
mov
add
inc
xor
movl
stos
lret
int
lea
lcall
jl
or
and
hlt
int
jbe
aad
out
or
push
xor
std
sbb
jecxz
das
adc
cli
push
jno
mov
mov
jne
or
sub
lods
push
es
fyl2x
popf
or
jb
sbb
into
into
mov
jge
xor
and
mov
xchg
mov
sahf
arpl
popa
lods
xchg
jmp
scas
inc
or
xchg
xchg
repnz
test
aas
inc
dec
jmp
rcrb
add
aad
in
mov
and
inc
inc
in
jb
pop
lods
fidivl
int3
and
or
sbb
push
addr16
test
or
xchg
lods
insb
outsb
insl
stos
call
call
lds
rcrl
test
stos
inc
test
enter
or
ficomps
pop
xor
inc
inc
sub
frstor
lock
or
pusha
cltd
pop
enter
push
int3
adc
rcrl
shrb
movsb
xlat
add
mov
call
push
pop
mov
pushf
lret
dec
imul
jne
adc
mov
mov
jb
mov
test
jmp
insb
push
dec
iret
cmp
ja
push
xlat
movsb
jg
mov
in
add
xor
lcall
xor
dec
sbb
adc
mov
mov
add
adc
sbb
cs
add
stos
mov
mov
pop
or
inc
pop
into
cmp
fxch
xor
sbb
pop
mov
dec
pop
test
iret
dec
gs
divl
pop
cmpsb
and
mov
es
sub
out
cli
in
xchg
inc
jg
testb
jge
mov
mov
inc
jge
pop
xchg
and
mov
inc
ss
sbb
icebp
sbb
or
push
and
shll
cld
adc
js
ficompl
and
rcl
and
lock
jle
lds
in
lods
jecxz
lret
dec
mov
mov
jg
dec
es
imul
xor
popa
jns
cmp
cmp
adc
es
pop
fcoml
pop
pop
adc
mov
cmpsb
repnz
fildll
rolb
sub
inc
daa
push
test
cmp
sub
negl
sar
sub
mov
out
xchg
icebp
outsl
repz
xchg
fs
sbb
popf
mov
push
enter
jo
pop
mov
cmp
lea
sbb
inc
mov
fbstp
mov
mov
dec
mov
push
adc
inc
jg
add
fucomi
stc
pop
iret
sub
inc
test
mov
sub
test
dec
out
lcall
outsb
xchg
xchg
pushf
or
ror
jne
hlt
sub
and
sbb
lret
inc
ret
loop
in
imul
mov
cs
mov
mov
popf
xor
in
cld
dec
xor
adc
shll
shlb
out
mov
push
js
andl
and
adc
mov
je
mov
out
lahf
dec
add
xchg
push
dec
inc
mov
in
xchg
loope
xchg
scas
mov
data16
jg
pop
xor
sbb
cmc
mov
cmp
lds
shr
lods
int3
jg
jno
iret
repz
pop
insl
sbb
pop
cmpsb
mov
loop
out
subl
lock
lods
add
orl
jmp
cmp
popa
cwtl
xchg
cmp
test
inc
inc
fs
add
push
sbb
aam
mov
mov
sub
out
pop
int3
popa
dec
push
push
xchg
inc
or
and
mov
aad
pop
enter
jb
pop
int3
mov
icebp
pop
or
xorb
dec
lahf
in
out
fistpl
xor
lods
xchg
repz
pop
pop
jnp
lea
jmp
jne
divl
sub
mov
push
push
jge
lret
pop
imul
lods
jl
out
xchg
jp
pop
jp
add
out
data16
enter
jp
sti
pop
cmpsl
mov
mov
in
mov
dec
add
sub
push
sti
or
mov
lcall
in
xor
xor
push
arpl
cmp
je
stos
loop
cs
ja
lock
gs
pop
xchg
cmp
add
xchg
add
fwait
les
iret
mov
leavew
and
pop
xor
or
cmp
xlat
push
pop
in
inc
add
dec
push
cmpsb
mov
xor
je
push
push
test
out
mov
pop
push
xor
enter
pusha
jp
mov
outsl
push
outsl
sub
clc
aam
mov
fcompl
xor
lcall
addl
pop
dec
pop
popf
sbb
scas
clc
lret
xlat
std
test
enter
hlt
sbbl
outsb
xchg
add
nop
movsb
push
ret
data16
lods
lcall
clc
add
ja
and
setnp
jle
mov
sti
dec
lret
mov
mov
xchg
test
jno
cmp
cld
rcrb
dec
test
fsub
lret
dec
mov
mov
inc
mov
out
scas
cmp
push
sbb
test
dec
gs
inc
arpl
add
adc
js
je
add
lret
imul
mov
fsubl
arpl
nop
fwait
push
or
icebp
sub
push
push
dec
imul
enter
out
mov
push
pop
mov
xor
ss
xor
data16
mov
out
cwtl
jmp
lods
popa
xchg
pop
cmpsb
jb
cmp
or
stos
or
aaa
lahf
push
xchg
cmp
stos
push
xchg
outsb
jp
das
sahf
ds
pop
fcmovu
lcall
loope
pop
fildl
pop
push
sbb
lods
xchg
xchg
sub
xor
mov
push
add
sub
adc
push
mov
subl
gs
pop
scas
push
and
jp
dec
pop
ror
ja
mov
xchg
mov
inc
sbb
popa
mov
cld
jnp
repz
ds
pop
adc
sbb
dec
shrb
pop
push
aaa
stos
out
pop
inc
repnz
push
outsl
fwait
mov
jg
ret
movsl
mov
cmpsb
mov
push
std
pop
jne
fildl
mov
inc
mov
test
ja
inc
mov
in
mov
mov
mov
dec
and
mov
call
mov
shlb
movl
in
pop
jmp
fimuls
jae
popa
push
das
js
in
lock
ss
lret
pop
cmp
jb
aaa
sti
sub
push
imul
dec
mov
int3
stos
out
orb
ja
sbb
add
cmc
xor
xor
jl
icebp
sub
mov
mov
mov
mov
or
sub
sbb
adc
notb
jbe
jge
cmp
loopne
ficoms
push
pop
popf
push
pop
push
mov
mov
pop
jne
jae
adc
cmp
aaa
sahf
mov
icebp
jns
push
shlb
rorl
adc
cs
cmp
stos
lahf
push
inc
adc
jnp
or
jmp
insb
inc
imul
push
jle
fnsave
jbe
push
xor
hlt
jnp
mov
fs
cmc
sbb
cmp
mov
add
call
sub
lods
scas
repnz
cwtl
data16
test
adc
jge
repnz
aad
sub
dec
mov
movsl
leave
push
into
test
jge
cltd
mov
xor
and
sbb
in
sub
gs
push
xlat
bound
push
insl
fcmovbe
jecxz
test
sbb
mov
pushf
cmpsl
shlb
and
xor
ljmp
loope
gs
xchg
add
daa
sub
jp
subl
push
push
cltd
push
cld
mulb
loope
cmpb
icebp
cmpsl
xchg
lea
push
ljmp
dec
in
enter
inc
aam
jg
in
stos
mov
dec
dec
cmp
cmp
mov
addr16
or
dec
pusha
ret
test
cmpsl
jg
negb
sub
imul
mov
dec
adc
iret
insl
jg
arpl
push
iret
sbb
or
dec
pop
pop
adc
mov
scas
cmp
fsubr
mov
xor
sub
sbb
call
lret
mov
mov
aas
adc
jle
pop
rorb
testl
pop
push
bound
lcall
andb
mov
or
pop
test
cmovns
inc
aad
lcall
mov
popf
xchg
fwait
jne
rep
adc
out
mov
mov
rcrl
andl
jbe
jmp
lcall
sahf
jbe
jge
int3
aam
cmp
fists
repnz
or
jl
and
sarl
lods
fisubl
push
imul
mov
in
fadd
mov
mov
into
pop
scas
adc
idivl
movsb
add
das
test
sub
jns
das
dec
xor
ds
sbb
jl
and
pop
js
adc
hlt
cmp
cmc
stos
dec
out
mov
pushf
cld
fcomps
pop
movsl
in
sar
xor
mov
into
mov
xchg
enter
sub
rorl
pop
in
mov
mov
ljmp
inc
testl
inc
inc
pop
jmp
pop
sbb
or
rcrb
sarl
mov
mov
push
xor
test
sub
fs
mov
xchg
inc
pusha
iret
mov
inc
and
and
xchg
jno
jl
scas
outsl
and
sub
clc
insl
into
mov
pusha
aad
test
inc
mov
xchg
rolb
jecxz
test
movb
es
mov
dec
outsb
push
mov
pop
popa
dec
fsubs
jl
fwait
test
add
jnp
sbb
jnp
and
dec
push
inc
bnd
pop
sub
mov
mov
cmp
inc
mull
inc
jbe
cltd
add
aaa
mov
out
or
push
jns
jp
in
gs
test
or
out
jns
adc
repnz
and
shrb
xchg
ds
push
cwtl
push
sarl
adc
aad
mov
sti
fbld
sbb
pop
insl
cmpb
xchg
push
adc
ret
mov
js
and
mov
gs
push
imul
ss
lahf
pop
jge
clc
popa
mov
jle
test
dec
lods
ret
in
test
dec
pop
mov
stos
movsl
pop
pop
push
mov
cmp
dec
scas
inc
gs
mov
call
lods
mov
daa
int
test
dec
faddp
enter
push
mov
inc
mov
nop
imul
or
dec
movsl
xorl
xor
cmp
push
cmp
inc
cli
jns
mov
ret
push
int
adc
sti
mov
xchg
xor
xchg
ja
popf
cltd
xchg
in
movsl
add
in
imul
insb
mov
gs
insl
pop
in
call
pop
das
push
insb
push
or
mov
xor
dec
pop
fdivrs
scas
xchg
ds
inc
popa
dec
mov
roll
imul
or
mov
and
inc
sbb
mov
add
mov
push
out
sbb
jae
push
push
and
pop
push
pop
out
dec
push
mov
adc
ret
xchg
xor
repnz
xchg
orb
clc
and
shll
pop
mov
lcall
xchg
lahf
inc
jp
or
jb
dec
lock
cmp
push
jle
or
cmp
cmp
ljmp
test
inc
sub
pop
out
mov
adcb
mov
repnz
push
pop
sbb
mov
pop
int3
insl
stos
push
in
jmp
nop
xor
dec
call
lods
jle
dec
incb
inc
sbb
jno
mov
fsts
mov
xchg
xlat
sbb
enter
ret
mov
xor
jbe
out
cmp
jns
dec
xchg
push
inc
icebp
pop
scas
mov
test
popa
mov
xchg
test
neg
loop
jae
push
fildl
cmp
js
xchg
movsl
shll
fcmove
jle
ds
or
das
jb
pop
adc
xchg
fdivr
jecxz
aam
dec
pusha
out
ret
testb
cmp
xchg
jmp
popa
inc
pop
repnz
pop
dec
push
lock
xchg
mov
jle
xlat
testl
mov
mov
cwtl
rcrb
cltd
add
lahf
imul
jns
sahf
sub
shrb
aaa
aam
pop
ja
lods
pop
pop
test
xchg
mov
dec
pop
or
das
dec
out
in
push
ds
into
cmp
pop
test
mov
nop
repnz
push
loopne
clc
cli
bound
mov
mov
inc
or
adc
mov
jmp
adc
push
mov
hlt
insb
fldl
lods
cmpsl
mov
mov
inc
mov
clc
push
cmpsl
push
jo
test
lock
bound
and
mov
jno
adc
xor
cmp
sti
call
dec
mov
xor
inc
clc
insl
inc
das
and
dec
sub
jp
test
mov
fisttpll
cs
insl
outsb
mov
sbb
mov
mov
xor
lock
xchg
popf
pop
insl
lods
push
test
fwait
es
push
loope
xchg
inc
fsub
jge
aam
mov
push
addb
xor
jbe
shrl
aad
inc
mov
popa
in
and
outsb
bound
mov
mov
jns
lds
mov
in
push
mov
and
sarb
das
dec
ljmp
cmpb
mov
lret
mov
pop
inc
and
adc
and
repz
shl
and
scas
dec
mov
in
push
xorl
mov
push
subl
sti
mov
mov
lock
ds
mov
mov
adc
and
inc
lcall
dec
mov
testb
dec
mov
cld
sub
sbb
sti
mov
jmp
cmp
addr16
mov
test
inc
in
add
insl
loopne
shlb
aad
dec
mov
xor
sub
mov
dec
sub
stos
xchg
mov
into
mov
lret
cmpl
sbb
or
in
xchg
jbe
dec
daa
pop
imul
mov
ja
xchg
lret
adc
cmp
arpl
sub
sbbb
lcall
xchg
mov
sti
pop
popf
push
cmpsl
sub
jle,pt
clc
and
xor
fmul
dec
sub
push
jbe,pn
dec
clc
sahf
sbb
xlat
sbb
stos
cli
push
inc
insl
cli
pushf
ss
cmpsl
sub
ljmp
mov
or
insb
stos
mov
xchg
aas
dec
add
leave
ror
cwtl
imul
mov
fidivs
movsb
pushf
or
out
push
repz
ljmp
or
cmp
or
cwtl
scas
daa
mov
cmpsb
sbb
dec
shll
jbe
in
mov
mov
sub
cmp
pop
mov
out
push
ret
push
lods
fidivrl
mov
js
imull
stos
rcll
test
pop
jo
nop
into
adc
insl
jmp
out
cltd
or
lock
outsl
pop
jg
shrb
mov
or
into
mov
ds
daa
jge
mov
sar
dec
adc
icebp
js
fildll
movsb
mov
push
mov
jecxz
sbb
test
mov
add
adc
jle
lahf
inc
and
movsb
div
push
cmc
inc
daa
cli
jecxz
inc
and
cmpsl
adc
mov
or
jl
arpl
orl
mov
shr
xchg
sarl
mov
popf
jnp
push
or
sbb
mov
xor
push
fstps
pop
lret
iret
sahf
ljmp
ljmp
and
scas
int
push
xlat
lods
std
popf
mov
sub
fldlg2
fstpt
fdivl
out
cmpsl
add
mov
popf
dec
push
adc
pop
pusha
cmp
or
push
movsl
mov
xchg
pop
loop
push
lahf
inc
ljmp
mov
xor
xor
lea
add
inc
lahf
sar
or
dec
add
and
sub
je
mov
mov
icebp
hlt
addb
xor
mov
in
or
lea
loopne
ja
jl
jae
inc
in
aad
outsb
cs
mov
out
mov
stos
jg
out
mov
pop
or
fs
sbb
call
jmp
popa
sarl
xlat
sbb
popl
jno
mov
daa
mov
dec
mov
lods
out
hlt
jg
sbb
call
xor
je
fsubrs
push
mov
xorb
std
xchg
lret
fs
jb
push
mov
sub
xrelease
xchg
adc
dec
cli
fwait
mov
fbstp
loopne
push
fidivs
into
and
mov
aaa
sub
lods
push
subb
pop
jb
push
shl
stc
leave
sub
cli
stos
xlat
jbe
loopne
popf
outsb
lret
les
push
addb
dec
sub
cltd
jecxz
sub
aam
cmc
adc
mov
test
sub
dec
enter
dec
mov
mov
pop
call
stc
mov
iret
push
shlb
mov
mov
ret
rcll
in
xor
lock
mov
sbb
stc
fildl
pop
push
inc
outsl
jg
xchg
lret
mov
xchg
sub
adc
pop
push
mov
mov
popf
outsb
add
mov
bound
xchg
inc
outsl
sti
ret
mov
and
and
mov
into
and
cmp
dec
mov
iret
clc
jae
test
psrad
insb
mov
btc
inc
sbbl
divl
adc
inc
jecxz
outsb
adc
iret
sbb
xchg
mov
xchg
popf
kmovb
pushf
dec
test
gs
cmp
ljmp
cs
test
xchg
jl
cmp
cmp
insb
sub
cmc
inc
loop
xor
dec
xor
mov
jns
dec
outsb
mov
std
jae
inc
mov
inc
js
jo
jmp
and
cwtl
daa
mov
movb
sarb
push
retw
iret
mov
sub
data16
out
fdivs
int3
xchg
xchg
xchg
xor
adc
sub
fwait
push
sbb
mov
fcomip
adc
aad
or
sub
and
ret
out
rorb
call
mov
iret
lods
xlat
mov
loop
pop
cmp
fisubs
cmc
jg
xor
sub
fwait
or
sbb
add
lea
add
push
loopne
ficomps
testb
loopne
leave
cmpsl
fdivs
outsl
subb
push
jns
mov
fisttpl
sbbb
xor
pusha
pop
andb
mov
and
adc
stos
sub
xlat
lret
leave
clc
jo
shll
mov
hlt
adc
cwtl
add
enter
mov
cmp
js
sub
xchg
gs
rcll
aaa
or
cmc
mov
and
pushf
xor
add
jno
mov
test
xor
mov
mov
call
outsl
mov
scas
sub
add
cmp
stc
jo
and
pop
lds
pushf
or
cwtl
cmp
and
cmp
ljmp
xchg
popa
popa
adc
out
xchg
hlt
int3
movsl
fldenv
mov
sti
nop
push
int3
pop
sbb
test
adc
mov
pop
int
daa
sbb
aas
cld
popf
adc
lret
cmp
mov
pop
cmc
xor
shll
or
push
fnstenv
sbb
jl
inc
call
insl
fwait
cmp
lret
fsubrs
xor
lret
outsb
repnz
lds
sbb
sub
xchg
cmp
hlt
imul
popa
push
orb
add
cmp
aad
adc
push
inc
mov
call
dec
pop
dec
push
dec
pop
mov
and
pop
inc
je
jbe
pop
aam
les
push
hlt
xchg
xchg
or
lcall
repz
dec
icebp
cmc
pop
cwtl
jo
mov
fildll
aaa
inc
int
inc
lret
and
inc
pop
inc
push
insb
xchg
cmp
rolb
xor
jo
or
aad
std
scas
add
pop
inc
int
cmp
add
or
pushf
mov
xor
and
jns
xchg
add
mov
adc
lock
mov
mov
inc
daa
jne
incb
jns
or
repnz
imul
lret
rolb
push
mov
loop
cmc
ss
push
pusha
ret
mov
hlt
daa
and
popa
xor
mov
cli
mov
and
scas
and
pop
lods
jnp
ljmp
rorl
sbbl
mov
pop
dec
mov
push
fldenv
lret
add
jno
sub
jle
jns
push
adc
mov
mov
int
inc
fs
in
xchg
jle
cmp
dec
not
js
pop
adc
dec
movl
or
lock
outsb
insl
cmpsl
mov
ret
orb
stos
lods
inc
scas
mov
out
scas
bound
add
pop
pop
xchg
aaa
mull
sbb
loopne
jns
test
mov
cwtl
xchg
or
into
jp
or
das
aad
inc
adc
mov
in
add
enter
scas
hlt
jge
mov
popa
lock
and
or
sbb
shlb
loopne
out
xchg
fstpl
popa
sbb
repz
sbb
mov
xor
addb
loopne
dec
loopne
and
popf
into
jmp
popf
mov
aas
mov
mov
mov
repz
idiv
pop
cmp
test
popa
jl
testb
jge
mov
sbb
pop
aam
jmp
and
cmp
es
mov
and
mov
cmpsb
aaa
sbb
push
lods
std
xchg
inc
test
jg
add
cli
adc
das
mov
movsl
push
sub
push
bound
push
iret
sub
inc
mov
add
cmp
movsl
xor
jp
mov
inc
or
fcmovb
cmp
sub
sub
mov
push
lods
lds
inc
aad
fisubrl
gs
push
xchg
out
adc
xor
outsl
mov
dec
lret
push
xor
jne
xchg
and
movsl
cmp
cmpsl
cltd
pop
mov
add
push
dec
cmpl
hlt
pushf
lcall
pop
mov
or
mov
dec
cmpsl
cmp
inc
mov
jmp
inc
jle
cmp
push
lahf
lahf
or
test
sub
jecxz
cmp
dec
dec
sub
mov
or
pop
ds
icebp
pop
pop
jae,pn
inc
xchg
mov
xchg
jbe
sub
pop
ja
push
jmp
rcll
shlb
sub
mov
or
mov
lock
scas
inc
lret
mov
xchg
xor
ja
mov
sbb
cmp
imul
mov
add
sub
mov
jmp
xor
leave
scas
or
xlat
aaa
notb
pop
iret
mov
sarb
sti
stos
ja
xor
es
mov
push
xchg
adc
xor
js
imul
inc
scas
outsl
shrb
mov
push
push
aas
cmp
mov
cld
nop
movsb
mov
jge
lds
mov
add
jne
cmp
mov
pop
inc
fwait
cs
mov
in
adc
pop
sbb
fistl
out
imul
aad
push
aaa
pop
outsb
dec
pop
lret
pop
lret
or
lds
testl
shlb
mov
push
in
push
xor
sub
mov
jbe
js
gs
cmp
adc
push
sub
ret
mov
pshufw
adc
inc
iret
mov
stos
adc
jge
xchg
lcall
fdivs
fistps
cmp
add
outsb
sbb
in
repz
das
xor
aaa
into
imul
mov
mov
cmp
pop
jne
loop
cli
add
aas
out
out
jge
xchg
inc
loopne
dec
or
aas
add
mov
dec
jl
add
inc
pop
xor
inc
lahf
mov
shll
out
enter
inc
call
fwait
adc
bound
dec
andl
or
cmp
push
adc
pushf
cmp
dec
stos
imul
adc
push
pop
add
cld
out
aaa
sub
jae
out
out
mov
adc
addr16
out
lret
add
xchg
inc
jno
fsubrl
mov
retw
mov
daa
scas
xchg
nop
inc
push
ljmp
sahf
mov
gs
fbstp
jne
shrb
enter
mov
movsb
pop
sahf
mov
test
cmp
mov
iret
ret
nop
jae
jo
scas
pop
jnp
sub
mov
or
jb
push
mov
pop
cmpsb
leave
subl
sbb
lahf
and
sub
daa
push
jns
fisttpl
mov
lods
insb
push
test
inc
fsubs
jne
dec
faddp
je
out
sbb
gs
icebp
mov
mov
test
mov
push
xor
or
cmp
ss
push
andl
and
and
mov
iret
mov
cmc
or
inc
loop
and
sbb
mov
pop
aam
mov
sbb
fucomp
sbb
mov
movsb
pop
and
dec
imul
fdivrs
xchg
mov
negl
lahf
xlat
scas
cltd
outsb
sub
orb
dec
xchg
repz
mov
push
jp
mov
xchg
clc
mov
xor
ret
cs
insl
pop
xlat
sahf
imul
adc
inc
cmpsl
js
jl
xchg
sbb
fwait
and
xchg
dec
adc
loopne
lahf
dec
mov
in
sbb
mov
mov
mov
xchg
adc
ret
lcall
xor
push
movsl
push
mov
cwtd
rcrb
rorl
and
lret
es
scas
test
and
or
data16
ss
ret
xchg
mov
fisubrl
mov
inc
push
aam
lahf
push
das
xor
sahf
xor
mov
mov
pop
ret
sahf
int3
in
xchg
out
iret
stc
je
or
insb
ss
or
shlb
cmp
sarb
and
enter
shrb
or
daa
and
notl
hlt
lcall
int
arpl
iret
test
mov
mov
enter
xchg
inc
mov
nop
orl
call
call
sub
pop
mov
adc
inc
cli
out
cs
mov
and
add
sub
add
xchg
cli
or
mov
nop
and
xor
and
mov
mov
dec
popa
pushf
adc
loop
into
sbb
outsl
mov
and
mov
addr16
aam
movb
cmp
movsl
std
negb
jmp
insl
mov
in
cmpsb
and
lock
fnstcw
pop
cmpsl
jnp
jnp
mov
rol
iret
je
or
fldcw
nop
xchg
dec
test
or
push
add
shll
cmp
and
test
aas
negl
and
bound
dec
mov
loop
in
out
pop
dec
pop
push
test
cld
call
data16
cmp
test
in
push
lods
fnstcw
fdivr
inc
jb
arpl
mov
fwait
lods
enter
cmp
lock
loopne
jl
stc
xchg
dec
mov
adc
mov
je
mov
pop
inc
repnz
ljmp
testb
dec
rep
lods
sub
hlt
movsl
les
pop
mov
pop
cmp
inc
call
xor
enter
mov
cmp
push
loope
mov
add
shlb
and
clc
add
inc
push
sub
xorl
iret
inc
sbb
jb
test
dec
or
sub
cmpsl
and
aad
rclb
std
les
xchg
and
inc
ss
inc
adc
or
jb
es
dec
or
dec
and
daa
int
rorl
bound
pop
in
ret
cli
mov
scas
into
rcll
stos
push
jne
push
cmpsb
lds
mov
xchg
in
cmc
fsubrl
xchg
jle
stos
jecxz
mov
push
push
ljmp
stc
movsl
es
inc
xlat
faddl
cmp
lock
and
imul
lcall
daa
mov
sub
jns
fcomip
enter
inc
pop
mov
lret
sub
shlb
xchg
mov
movsb
nop
mov
mov
ret
mov
cmpb
divl
cld
dec
ja
sub
aam
cmc
inc
cmp
shll
add
nop
call
dec
call
jo
adc
cmp
fadds
cld
mov
and
or
sti
xchg
sarl
out
pushaw
jmp
mov
xchg
adc
jno
cmpsb
add
mov
inc
lock
scas
sti
push
xor
fcoml
cs
mov
cmp
sbb
cmc
repnz
pop
jmp
ja
and
adc
pop
imull
mov
or
test
fwait
into
xorl
add
outsl
arpl
dec
pop
sbb
sub
iret
dec
or
sbb
push
mov
xchg
xor
dec
jl
pop
in
ret
mov
sub
add
or
sbb
hlt
clc
fldenv
pop
lods
int3
popf
and
xchg
imul
jge
jmp
mov
movsl
js
push
push
stc
pop
pop
jne
test
aas
lds
jl
add
pusha
fistl
in
iret
dec
sub
mov
sarb
pop
ret
mov
mov
xchg
out
mov
ss
lcall
jae
stos
xchg
mov
and
out
repz
daa
push
push
adc
pop
xchg
sbb
mov
int
sub
mov
clc
lods
jl
mov
jne
mov
lock
inc
loopne
imul
mov
dec
lods
mov
dec
mov
pop
shr
mov
adc
xchg
add
movsl
in
loopne
das
mov
js
push
out
sarl
lods
shl
shrl
into
and
lret
lods
jbe
mov
loope
and
push
or
cs
jecxz
push
je
push
cmpsl
dec
ss
cmp
cmp
dec
xchg
sbb
xor
test
imul
pop
ret
or
pop
xor
dec
mov
sbb
push
fs
jge
aad
xor
sbb
popa
les
popa
mov
push
insl
out
aaa
movsl
jmp
out
mov
mov
enter
mull
mov
in
cmp
adc
fwait
sbb
mov
pop
add
pop
push
inc
fmuls
mov
cmp
shll
shl
pop
cmc
hlt
sbb
jns
jo
and
cmp
sub
dec
adc
or
cwtl
cmp
inc
add
rcl
dec
mov
and
mov
mov
adc
sbb
push
jb
xchg
subb
arpl
cmp
es
jmp
or
mov
or
cmp
dec
sub
push
ljmp
cmp
bnd
cwtl
std
jb
or
inc
scas
jl
loopne
xchg
arpl
sub
enter
loopne
in
dec
lret
or
sub
mov
addr16
add
xor
int3
es
push
cmp
and
in
fsubrs
or
mov
xor
adc
lds
sbb
test
dec
vmwrite
add
pushf
pushf
xchg
sbb
and
sub
mov
ja
pslld
rorb
pop
out
sbb
adc
test
or
xor
xorl
cli
or
xchg
rclb
pop
cli
mov
cmp
testl
jo
mov
mov
jns
and
clc
xchg
out
outsl
push
mov
adc
xchg
xor
ds
push
mov
inc
out
mov
loop
sub
cli
adc
pop
fnstenv
xor
adc
xor
call
pop
pop
insb
sub
shrb
test
xchg
fsts
mov
and
cmp
mov
in
mov
push
pushf
add
aaa
pop
dec
es
jb
push
ds
mov
xchg
test
and
shrb
adc
lds
cwtl
es
xchg
pop
aas
xchg
xor
and
inc
jno
or
rdmsr
sti
loope
push
mov
lret
and
dec
mov
imul
dec
sbb
out
push
lret
test
lods
jmp
outsl
adc
jmp
push
add
fsubs
inc
fwait
loop
adc
mov
iret
cmp
pop
aas
fs
cmp
xchg
adc
lea
mov
pusha
lret
cmp
xchg
loop
pop
push
daa
iret
cmp
pop
fs
and
rol
add
fisttpll
dec
orl
popf
js
das
call
sub
xor
mov
or
push
addl
cmp
lahf
adc
iret
insl
sbb
fmuls
sbb
adc
loope
iret
in
dec
mov
jnp
imul
lods
sub
mov
cld
pop
sbb
arpl
test
pusha
hlt
pushf
test
pop
cmp
jl
cmc
enter
in
push
dec
inc
inc
adc
sub
adc
les
push
cmp
mov
outsb
push
inc
pop
mov
xchg
xchg
aaa
enter
inc
push
push
fucom
or
inc
pop
push
sub
lods
jmp
leave
and
test
pop
or
or
pop
into
in
fsubrs
into
mov
jo
inc
loope
pusha
xor
fwait
mov
and
xchg
stc
inc
test
xchg
cmp
push
xchg
mov
fs
insl
dec
sbb
mov
test
ja
jns
xor
repnz
add
xchg
shlb
mov
vcvtps2pd
or
xlat
into
mov
adc
jns
fisttpl
arpl
push
xor
push
sub
add
ret
cld
sub
mov
pusha
subl
push
push
shlb
rcrb
popa
das
aas
add
mov
js
nop
jno
jmp
mov
mov
inc
movsl
xchg
in
xchg
xchg
movsb
mov
adc
out
push
jmp
mov
insl
pop
shll
xchg
jmp
sub
hlt
lods
hlt
push
add
fimull
jp
cli
mov
aaa
mov
mov
fsts
mov
std
pop
mov
fstl
pusha
cwtl
mov
mov
xchg
mov
inc
and
pop
mov
dec
xor
dec
adc
mov
adc
xor
push
jbe
cmp
enter
shl
push
iret
out
adc
fsubs
xchg
js
inc
cltd
mov
mov
jg
pop
mov
lds
and
xchg
pushf
lods
mov
add
leave
xor
mov
fidivs
cmp
addb
das
jne
mov
int
xor
or
adc
ds
iret
enter
xchg
ret
dec
jle
outsb
xor
inc
adc
nop
ds
cmp
loopne
fcmove
jmp
in
sub
outsl
shll
stos
lock
xchg
mov
bound
cmpsl
xor
mov
lret
xchg
scas
mov
xlat
fistps
adc
iret
jno
nop
jmp
sub
push
pop
inc
inc
lahf
push
cwtl
repz
jo
insl
sub
and
jp
xchg
ret
xor
adc
xor
fstps
rcr
sub
and
jbe
sbb
in
mov
push
push
jb
jbe
cld
fimull
cwtl
dec
adc
xor
and
aad
and
icebp
cmovo
ret
insl
mov
fnstsw
dec
dec
lret
and
lods
aam
sbb
adc
add
int3
push
push
xor
adc
and
test
xchg
jbe
mov
jg
or
or
icebp
in
mov
jl
mov
pop
lahf
cmpsb
mov
mov
jmp
imul
mov
xchg
pusha
sbb
fxch
fldenv
xchg
mov
push
jmp
and
cs
xlat
stc
xor
or
xor
movsb
push
popf
lret
loope
xchg
inc
rolb
js
xchg
fiaddl
dec
pusha
push
sti
xchg
dec
and
ret
pop
mov
sbb
cmpsb
andl
lds
mov
into
outsb
mov
sub
hlt
out
fisubrs
push
pushf
inc
lcall
aad
and
lods
into
adc
fwait
pop
icebp
cmp
xchg
loop
mov
stos
push
cld
or
in
movsb
mov
repnz
and
cltd
in
js
imulb
pusha
je
xor
pop
shlb
sti
push
cwtl
xor
cmp
out
cmp
xchg
mov
pop
int3
push
xchg
cmp
leavew
or
dec
jmp
frstor
shl
adc
cli
shll
push
jmp
or
std
scas
mov
sbb
pop
or
jns
loopne
in
inc
nop
enter
push
mov
ds
mov
xor
xchg
sbb
nop
inc
mov
mov
xor
push
std
dec
jge
cmp
add
pushf
in
push
xchg
das
lcall
mov
pop
mull
fcomps
pop
xchg
cmp
cltd
aas
data16
lahf
or
pop
lcall
sub
add
lock
popf
xor
mov
jg
stc
or
js
jns
jecxz
in
sbb
loope
fldz
bsr
std
stos
stc
push
cmp
int
pushf
loop
mov
mov
add
pop
movsb
lds
pop
xor
mov
clc
inc
dec
fnstcw
aad
lcall
std
pop
clc
pusha
and
mov
int
mov
add
mov
fdivrs
push
les
or
push
inc
dec
sbb
cmp
movl
pop
xchg
or
movd
jo
nop
leave
pop
repnz
imul
icebp
cmp
pop
adc
outsl
imull
clc
sbb
imul
mov
add
pop
arpl
fidivrs
out
jne
lock
sub
fsubp
sbb
pusha
jo
pushf
lcall
pop
xchg
or
stc
mov
push
filds
pop
cld
mov
dec
notl
jge
mov
iret
jns
and
dec
test
inc
xchg
pop
call
adc
or
sti
jne
adc
cli
add
ficompl
push
mov
fistpl
push
daa
mov
jle
pop
add
nop
mov
mov
sub
sbb
jmp
rol
das
mov
and
push
divl
dec
xor
mov
dec
mov
adc
daa
lret
push
jp
imul
pusha
lock
push
mov
fisubs
insl
cmp
inc
lret
jp
arpl
cwtl
iret
pop
cmp
lods
xchg
fwait
loopne
mov
xlat
rcrb
push
and
sub
jb
mov
cmc
pop
cmp
and
xchg
xchg
xchg
bound
push
fldcw
push
adc
and
std
add
popa
pop
mov
imul
int3
push
data16
cs
insb
xchg
jbe
inc
dec
les
dec
push
xor
cmpsb
sub
jnp
int
js
push
fmull
lock
mov
and
inc
es
loop
cmp
pop
notl
leave
jne
add
std
and
subb
add
dec
or
jge
inc
test
decb
jae
mov
dec
lahf
cmp
fsubp
push
clc
test
stos
bound
pop
xor
fisttps
dec
xor
fwait
xor
inc
jnp
add
loop
leave
repnz
int
push
cmp
sbb
aaa
mov
jmp
scas
out
mov
mov
xor
jb
enter
and
xor
push
adc
shlb
ret
mov
adc
mov
lods
imul
in
cmp
arpl
push
jge
adc
dec
cmc
enter
adc
inc
out
add
in
mov
push
bound
pop
jge
pop
rorb
cmp
lods
mov
popf
hlt
dec
stos
data16
pop
mov
cwtl
mov
jg
fs
sti
mov
jnp
bound
add
int3
jae
xor
pop
push
mov
insb
test
sub
pop
pop
rcll
sbb
outsb
xchg
pop
or
idivl
mov
sub
pop
bound
cmpsl
inc
push
mov
jno
jae
xor
xchg
mov
push
fcomi
mov
xchg
shrb
sbb
mov
mov
stc
xchg
rclb
mov
or
mov
arpl
les
and
mov
cmp
mov
xchg
pop
push
sarb
ret
add
mov
andl
js
scas
or
pop
xor
into
cld
jp
lea
dec
sbb
or
lret
mov
stos
icebp
jl
adc
cmp
pop
push
jns
dec
cmpsb
iret
lahf
pop
ret
sahf
leave
mov
jns
into
mov
inc
mov
or
fdivp
notb
int3
ja
jmp
push
mov
ret
pop
andl
mov
xchg
shlb
ret
jg
outsb
mov
pop
push
movsl
mov
sbb
mov
xchg
adc
jmp
lock
leave
mov
cmpl
stos
mov
in
arpl
cmp
in
sub
mov
sub
adc
adc
orl
cmpsl
or
out
pop
test
xchg
cli
out
movsb
scas
inc
mov
das
or
jecxz
daa
jb
mov
divb
jmp
xor
mov
or
adc
fists
cltd
imul
aaa
iret
jl
cmp
cli
push
inc
movsb
jg
dec
xchg
in
int3
in
mov
cmp
xor
push
sub
dec
imul
xor
daa
xchg
xchg
out
or
sbb
mov
mulb
movsl
jmp
mov
jmp
add
add
test
je
pop
sbb
jbe
jl
outsb
hlt
fimuls
or
aas
leave
insb
jno
pop
iret
cli
and
cmc
push
mov
pop
pop
jl
pop
or
mov
movsl
imul
pushf
xchg
push
or
loope
dec
dec
push
insl
push
sbb
sub
pop
call
pop
add
ss
loopne
test
xchg
sub
negb
fldenv
xchg
bound
push
cmp
cmp
cmp
cmp
cli
add
jb
mov
das
mov
inc
jo
pop
mov
insb
mov
js
sbb
fidivrl
jns
xor
cld
mov
cmpsl
xchg
jmp
shrb
repz
pop
xor
mov
cmc
pop
dec
lods
les
repnz
rcrb
xor
adc
xchg
adcb
inc
and
sbb
jl
push
fwait
cld
cltd
test
push
cs
js
xor
xchg
mov
ret
mov
ret
inc
hlt
push
pop
adc
dec
push
xchg
adc
adc
les
adc
jge
inc
shlb
push
and
loope
adc
clc
shl
mov
pusha
pop
loopne
fnsave
divl
inc
das
xchg
push
mov
imul
les
mov
mov
lret
cmpsb
icebp
sub
lcall
cmp
jg
pop
mov
into
fucomi
dec
sbb
aas
cmpl
jne
cmp
lret
cli
test
xchg
rep
in
or
cltd
arpl
adc
push
mov
jne
nop
aam
fisubs
xor
mov
add
arpl
cwtl
pop
and
dec
fists
pop
mov
out
push
jae
outsl
or
pop
imul
fimull
push
cwtl
or
xchg
push
ffreep
fst
ficomps
fistl
daa
test
push
std
pop
sub
sbb
lcall
pop
shl
or
out
xor
outsl
xchg
shll
mov
test
ret
xchg
jecxz
pop
fldlg2
push
pop
test
adc
loopne
testb
add
xchg
ljmp
scas
cmp
cmp
inc
mov
call
ljmp
push
jg
pop
out
cwtl
pop
xchg
cmp
arpl
repz
add
inc
imul
push
movsb
and
cltd
cmp
sahf
nop
clc
mov
jbe
subb
aam
std
test
mov
lahf
fucomp
add
repnz
js
xchg
ds
arpl
pop
pop
xor
sbb
lahf
stc
push
cmp
mov
movsb
outsb
sub
sti
inc
dec
stos
lahf
lock
xor
nop
jge
dec
xor
pop
addr16
jle
pop
mov
stc
sbb
test
notl
out
ja
xchg
pop
loop
stc
mov
aas
adcb
jae
rorl
mov
push
pop
leave
xchg
jp
and
or
bound
inc
adc
jl
test
or
aas
lret
flds
dec
stc
mov
dec
repnz
xor
push
lcall
pop
xor
sbb
mov
mov
jae
inc
test
jnp
pop
xor
int3
cmp
pop
ja
mov
pop
lea
fldenv
lret
dec
sbb
mov
pop
adc
mov
push
fmull
les
xor
scas
sti
sub
das
stos
cmpsb
sbb
hlt
jnp
mov
xor
push
pop
dec
cmp
mov
subb
popf
jecxz
in
in
adc
cmp
lret
jle
inc
xor
mov
mov
inc
imul
add
in
push
cs
mov
xchg
icebp
dec
pop
push
adcl
xchg
sub
in
add
dec
mov
ss
scas
push
jb
imul
mov
lock
cld
shlb
or
sbb
fsubrs
add
ja
sahf
outsb
imul
mov
adc
sbbb
mulb
pop
outsl
insb
cltd
inc
mov
sar
or
push
inc
test
cmp
loop
mov
and
fdivrs
addb
in
ss
cmp
nop
push
sub
mov
sub
sbb
push
inc
sbb
aam
push
dec
shrb
sub
gs
add
lahf
gs
sub
and
inc
xchg
pop
inc
xor
mov
jae
outsb
adc
scas
inc
xor
lret
mov
sahf
andb
add
pop
lock
jp
gs
mov
mov
pop
xchg
or
shrd
shll
mov
add
sbb
movsb
inc
jg
hlt
add
or
js
sbbb
adc
imul
cmpsb
das
pop
pop
insw
test
fists
push
out
out
xor
mov
or
xchg
lods
pop
sbbl
jecxz
xchg
jb
xor
pushw
popa
sbb
sub
pop
popa
pop
mov
mov
push
sbb
dec
cwtl
push
in
lods
jle
xchg
pop
xchg
pop
jns
cmp
ficoml
test
fwait
push
push
ret
cmovb
into
stos
sbb
push
out
sub
loop
ss
fisubl
nop
jo,pn
inc
cwtl
lea
js
push
vphaddbq
int3
lret
add
jp
sub
iret
or
dec
aam
in
cwtl
sub
mov
popa
jo
mov
fcmovb
dec
adc
add
and
or
lds
lods
and
out
cmp
imul
dec
add
pushf
pop
sub
movsl
lock
enter
inc
sbb
push
and
mov
dec
inc
mov
xchg
rclb
push
cmp
lods
mov
sub
inc
paddsb
cmp
mov
aad
or
adc
movb
mov
mov
xchg
push
insb
or
imul
mov
dec
mov
jns
fidivl
clc
sti
js
cmpxchg
ljmp
mov
pop
jg
mov
fmul
sub
shll
repz
xchg
mov
je
mulb
rorb
out
call
test
gs
stos
dec
arpl
cmp
das
scas
lcall
insl
rcr
fisttpll
lds
test
pop
in
lret
ja
cld
lahf
xchg
inc
cs
test
cmp
das
pop
out
or
jl
fistpll
mov
inc
xchg
xor
dec
pop
cltd
lods
jp
adc
push
je
inc
lahf
mov
sahf
in
or
pop
cmp
mov
insb
popa
add
aaa
sub
pop
bound
jb
pop
mov
cmp
test
ficomps
in
jl
xchg
lea
ds
jg
jns
and
add
xchg
popf
mov
xchg
sarb
enter
test
jnp
jne
sar
fwait
xchg
cltd
inc
jno
movsb
add
lods
cmp
loope
in
adc
mov
xchg
sub
xor
push
pop
lock
push
insb
stos
das
aam
dec
enter
fdivl
out
add
inc
loope
push
and
push
cmp
sbb
mov
cld
adc
mov
add
orl
movsl
imul
mov
xchg
xchg
subb
es
std
shr
pop
mov
fbstp
sbb
mov
sbb
ljmp
dec
gs
fstl
push
jb
je
and
or
xlat
jb
ret
test
cmpl
inc
sarb
pop
mov
adcb
cmpsb
mov
mov
xlat
jp
mov
into
pop
dec
out
inc
scas
or
sbb
enter
pop
shlb
imul
stos
jb
andl
pusha
mov
add
xor
test
fsubl
test
rorb
fwait
mov
lods
adc
xchg
mov
sbb
inc
call
popf
lahf
jae
push
ss
xchg
mov
and
xchg
pop
inc
jp
cmp
data16
jmp
push
cmp
es
sbbl
xchg
cmp
dec
push
filds
movsl
add
cmp
pop
jmp
jo
std
inc
jmp
iret
pop
pop
sarb
out
cmp
dec
fisttpll
hlt
out
shl
hlt
cmp
jmp
fisubrl
xchg
jmp
pop
stc
adc
lods
mov
movq
movsl
jno
movsb
mov
lods
or
js
xor
mov
xor
push
aad
shl
loope
jecxz
xor
adc
cmpsb
jle
scas
jbe
std
bound
pop
jno
rcll
add
pop
or
push
push
or
ret
xchg
mov
sub
and
sarb
and
loope
popf
insb
or
mov
jle
inc
mov
int
fs
xchg
mov
xor
aam
mov
in
mov
test
push
frstor
inc
mov
jno
xor
or
xorb
xchg
repnz
mov
cmp
test
dec
loop
cmp
mov
mov
cld
sbb
mov
cltd
cmpsl
pop
jnp
lock
sub
push
lcall
dec
pop
xchg
xor
pop
movsb
rorl
les
jne
push
outsl
adc
arpl
into
sub
clc
test
int3
outsb
cmc
add
sbb
cmp
push
mov
in
mulb
fcompl
insl
inc
sbb
in
xorl
ret
stos
or
repnz
sbb
jg
fisttpll
sbb
inc
xchg
test
inc
xchg
jp
lcall
xchg
int3
cmp
xchg
movsl
fsubl
fs
lret
hlt
xor
hlt
mov
outsb
insl
add
pushf
shlb
pop
sbb
outsl
dec
cli
mov
sahf
test
sbb
out
mov
dec
add
je
test
int
or
sub
out
loop
jnp
pop
pop
lret
xchg
jbe
inc
sub
addl
icebp
add
dec
pop
dec
nop
fs
rclb
dec
push
pop
add
fldenv
push
fisttpll
pop
lret
outsl
hlt
fsubp
loopne
xor
fiaddl
fistl
loope
enter
test
push
dec
dec
sub
xor
cmp
lcall
popa
mov
mov
pop
out
cs
icebp
loopne
push
mov
or
or
pop
das
cmp
lret
jnp,pn
repz
loopne
scas
pop
inc
mov
movsl
add
dec
adc
push
or
decb
dec
daa
mov
cld
pusha
mov
mov
cwtl
cli
and
imul
dec
mov
ja
inc
outsl
mov
je
repz
xchg
push
addr16
push
mov
mov
xlat
neg
cltd
cwtl
std
cmc
repnz
lds
xchg
sbb
call
or
or
adc
les
arpl
push
xor
aas
fiadds
or
nop
jmp
lret
mov
xchg
sbb
cmp
stc
mov
mov
popf
jg
or
lock
cmp
dec
xchg
push
or
rorl
mov
mov
mov
xchg
mov
mov
in
cwtl
mov
stos
add
scas
rcrl
mov
jb
pop
inc
fimull
jl
sti
cmpsl
cmp
adc
sub
add
jo
jp
imul
outsb
fisubl
add
stos
outsl
fldcw
ljmp
mov
mov
test
imul
mov
sbb
mov
fisubs
mov
cli
lcall
rclb
imul
popa
scas
sahf
adc
adc
out
cltd
push
xchg
aad
gs
dec
inc
add
out
and
xchg
std
dec
xchg
ljmp
pop
pop
sbb
ljmp
inc
sbb
fnsave
mov
inc
iret
scas
inc
jb
lods
sti
xchg
imul
das
ret
push
xor
scas
cld
or
xor
or
aad
pop
in
fisubrs
sub
ljmp
aas
je
ljmp
shll
loope
fdivs
and
addb
ja
lock
cmpb
mov
addr16
or
xchg
cld
pop
jo
and
sbb
dec
mov
pop
mov
ror
movsl
mov
aas
xor
repz
testb
lods
or
or
sub
ffreep
rcrb
aaa
mov
fidivrs
lret
cmp
inc
adc
and
sbbb
mov
out
and
adc
mov
mov
nop
hlt
test
pop
pop
sbb
xchg
inc
ret
jle
fwait
andb
leave
sbb
cli
pop
js
test
jmp
js
cs
pop
shll
sub
int
lret
mov
into
push
add
add
call
cmp
jno
outsl
pop
aas
add
in
mov
andb
orb
shl
dec
push
jne
fistl
mov
sub
test
pop
dec
jg
enter
hlt
add
mov
test
mov
scas
scas
hlt
iret
push
sbb
push
ret
and
mov
rcrl
sbb
fcmovb
push
sub
gs
in
mov
push
movsl
hlt
pop
push
fcmovnb
push
lock
les
jle
ja
enter
insl
out
pop
mov
lock
mov
in
adcb
mov
add
int
repz
mov
pop
je
fisubrs
test
add
out
insl
insb
adc
mov
sub
ret
ljmp
cmpsb
out
inc
xchg
outsb
push
out
mov
fsubrl
lret
xor
xchg
mov
pop
inc
push
and
je
inc
outsb
mov
das
mov
cmp
xor
insb
inc
pop
rdtsc
sub
popa
int
sub
jle
daa
pusha
popf
jns
outsb
adc
xor
xor
jno
int
sbb
fistl
and
shrb
sub
scas
bound
or
xchg
pushf
andl
jge
sub
xor
dec
loopne
int3
push
jle
aas
jo
in
xchg
test
fldcw
rorb
jle
rclb
loop
adc
stc
push
sbb
and
sbb
cwtl
adc
sbbb
in
jl
inc
dec
aas
sbb
mov
es
rclb
js
mov
addl
negb
ja
push
inc
jb
in
fistl
lcall
iret
std
jo
xor
call
mov
adc
mov
mov
insb
imull
xorb
in
outsl
cmpsl
andb
clc
dec
iret
xchg
lcall
add
lods
inc
addr16
scas
es
dec
mov
jnp
imul
idiv
add
inc
mov
add
lods
add
mov
orb
fnstcw
insl
push
mov
dec
jb
sti
das
aam
movl
sti
dec
adc
xchg
add
mov
pop
icebp
dec
add
add
adcl
pop
pusha
imul
jnp
xchg
add
xchg
sub
arpl
sbb
in
mov
sub
rorb
rcr
xchg
orl
jmp
lret
ret
push
xchg
and
xchg
inc
fcomps
xchg
mov
js
xor
mov
shll
sub
dec
ret
mov
lret
inc
idivl
cwtl
jl
mov
sub
pop
xor
insb
ret
pusha
and
sub
ror
add
sub
aas
cmp
xchg
jb
pop
rorl
aam
outsb
pusha
pop
lods
ss
cli
xor
push
mov
stc
imul
or
push
orl
jmp
repnz
nop
and
cmp
sub
daa
clc
bound
push
sub
jge
mov
pushf
daa
jge
fcoml
and
cli
push
into
inc
arpl
and
push
add
in
dec
and
or
fistps
or
jle
and
mov
push
cmp
sbb
mov
xchg
push
insl
pop
adc
aas
fisubs
push
and
cs
pop
cmp
adc
sbb
mov
mov
dec
jmp
jno
mov
xor
lods
sahf
in
mov
leave
out
mov
scas
cmc
imul
xchg
mov
push
rcr
mov
push
mov
xchg
mov
and
mov
mov
dec
pop
out
jle
aam
add
sbb
hlt
jmp
pop
fdivp
arpl
cmp
or
bound
jle
sbb
push
push
inc
mov
xchg
int
jo
call
jmp
lods
pushl
sbb
cmp
cmp
mov
push
mov
sbb
mov
repnz
sub
or
dec
xchg
call
inc
outsb
mov
imull
fwait
orb
pop
xchg
or
pop
movsl
loope
shll
cltd
xchg
jne
dec
adc
mov
sbbb
sarl
out
mov
push
arpl
cld
in
inc
jecxz
mov
cs
mov
int3
dec
and
cmp
sub
jbe
pop
cmc
insl
ret
pop
xchg
scas
pop
sub
adc
pop
dec
ret
cwtl
push
out
sub
mov
cmp
repz
add
mov
adcb
push
pop
cmp
jo
test
mov
insl
xor
into
mov
cld
and
aas
xor
fsubrs
adc
inc
fwait
dec
jbe
test
dec
test
out
repnz
inc
mov
xchg
sbb
xor
inc
add
subb
std
test
cmp
or
pusha
cld
mov
xlat
mov
push
pop
ret
dec
push
sbb
sbb
adc
and
and
or
adc
out
xchg
mov
xor
stc
jmp
std
int3
mov
sbb
std
mov
sbb
push
sbb
aas
cmp
cmp
movsl
insb
or
lret
dec
mov
adc
std
in
mov
jl
fwait
jg
and
notl
les
scas
out
stos
push
sbb
shrb
and
sbb
loop
jg
xlat
adc
mov
cmp
mov
cmpsl
jbe
push
mov
or
xchg
and
rclb
gs
cmc
cwtl
mov
jg
std
fidivrl
sub
ficomps
loop
jl
fdiv
mov
mov
push
xor
xor
outsb
nop
ret
jo
xor
or
jae
repz
mov
jecxz
xchg
stos
out
test
or
mov
insl
hlt
pusha
jp
aas
dec
sub
push
inc
xor
sahf
pop
mov
lea
sub
add
inc
push
leave
pop
mov
dec
insl
std
jno
bound
mov
push
and
nop
dec
mov
js
lods
pop
add
rorl
cmp
cltd
mov
adc
cltd
ss
lods
xor
adc
les
push
add
dec
push
aas
jb
pop
aad
cmpsl
lock
xor
aam
ss
inc
ljmp
cmp
push
dec
xchg
xlat
pop
xorl
and
ljmp
mov
jecxz
popl
xchg
mov
jns
pop
xlat
movsl
orb
jmp
cmp
push
adc
adc
cli
outsb
sbb
scas
sbb
or
in
dec
mov
xor
mov
or
cmp
add
lods
fsts
sbbb
dec
inc
jne
push
addr16
dec
bound
pop
testl
outsb
rcr
mov
cmp
shl
jp
push
sub
cmp
mov
idivl
insb
mov
nop
push
jbe
fnstsw
mov
mov
mov
out
shl
aam
push
add
daa
or
jnp
cmp
inc
mov
aas
adc
xchg
cltd
fisubrl
push
or
sbb
ret
mov
out
je
fbld
ret
cmp
cmp
arpl
add
sub
fimuls
cmc
xor
loopne
enter
in
inc
inc
sub
pop
pop
fsubrl
fbstp
and
int
inc
scas
push
cmp
insb
and
jp
sti
cmp
mov
out
int3
cltd
pop
push
jb
mov
mov
test
mov
or
sub
movsb
vmread
in
or
mov
jecxz
xchg
mulb
adc
bound
into
push
dec
inc
fldcw
push
cmp
mov
iret
push
sub
and
pop
jp
push
cmpsl
add
xor
jl
inc
test
mov
repnz
mov
icebp
mov
sbb
dec
fists
pop
aaa
pop
pusha
cwtl
sub
mov
inc
aad
es
int3
add
dec
cmp
or
sub
in
pusha
cli
inc
in
and
jo
lahf
into
sbb
cld
mov
imul
test
lahf
push
mov
rcll
pop
mov
scas
cld
push
data16
mov
adc
sub
lods
xchg
mov
orl
imul
jne
jbe
xorl
or
rcr
xor
rcll
gs
mov
mov
mov
iret
lret
aam
adc
xlat
xor
icebp
fisubl
xchg
pop
sbbl
push
sub
jo
incl
add
lret
imul
dec
leave
es
inc
fxch
lret
nop
mov
xor
fwait
pop
dec
cmpl
out
inc
inc
sbb
movsb
push
lret
aad
imul
add
gs
push
adc
xor
mov
pop
arpl
and
xchg
mov
in
lret
jbe
fs
push
out
arpl
nop
adc
out
mov
rcll
inc
fstl
daa
das
stos
lret
cmpsl
sbb
xchg
ds
push
shll
stc
add
mov
shll
mov
in
mov
or
and
daa
arpl
mov
es
decb
ret
das
aas
jmp
jp
push
test
rcrb
push
mov
mov
cmp
mov
adc
shrl
xor
gs
jns
das
in
pop
fwait
call
add
in
fadd
out
fisttpl
stc
mov
xchg
stos
xchg
add
ret
aaa
scas
out
loope
and
mov
rcrl
jae
sarl
mov
pop
mov
sbb
and
sbb
loop
cmpsb
mov
lds
sbb
rcrb
stos
inc
movsb
stc
add
rclb
adc
clc
xchg
inc
lods
pop
leavew
pop
jle
dec
jo
mov
loopne
repz
mov
mov
movsl
mov
adc
push
xchg
cmpsl
adc
jl
imull
pop
shll
push
mov
pop
test
mov
and
sub
call
push
ja
and
xchg
sbb
xchg
js
outsl
ja
test
or
or
mov
cld
cwtl
jnp
jmp
jns
sub
outsb
cmc
stc
fisubrl
mov
jmp
rorb
jecxz
or
inc
insl
add
add
aam
faddl
jo
in
or
jns
and
fmull
dec
jmp
mov
lret
add
inc
xchg
mov
addr16
ss
add
iret
setno
movsb
jge
shlb
stos
adc
lock
jb
cmp
lds
adc
mov
dec
xorb
pop
pop
pop
fimull
jae
inc
cwtl
mov
cmp
jle
push
insl
out
mov
test
addr16
push
les
sbb
xor
cltd
les
sbb
pop
xor
push
and
cltd
scas
lret
mov
mov
testb
lcall
mov
cmp
dec
inc
cmpsb
adc
mov
push
jle
ss
fisubl
pop
repnz
cld
leave
xor
push
shrb
imul
adc
scas
loopne
xchg
lret
popf
or
xchg
jecxz
shll
cltd
mov
das
jg
adc
imul
imull
es
call
mov
jle
in
inc
lods
jo
cmp
scas
data16
mov
lret
dec
cmp
mov
decl
adc
ljmp
dec
ret
sub
hlt
add
sarb
iret
dec
rol
mov
pop
and
shl
jecxz
std
jg
dec
fwait
inc
lds
mov
xor
repnz
lret
add
lods
mov
cmpsb
aam
push
imul
gs
lahf
mull
out
or
lods
or
imul
adc
sub
loope
jnp
sbb
sbb
xor
pop
rep
les
sbb
dec
fistpl
adc
nop
stc
inc
js
outsl
fucomp
sub
inc
sub
jecxz
jo
mov
add
icebp
push
sbb
orb
and
fildl
minps
ss
push
add
std
scas
and
adc
leave
imul
push
rorb
stos
out
lret
push
ja
lods
jle
pop
iret
in
ja
ret
or
test
nop
out
out
es
out
inc
lret
lret
orb
cmc
push
imull
jo
mov
cld
or
and
outsb
ljmp
lahf
imul
aad
xor
push
rcll
dec
mov
std
mov
sbb
pop
add
pusha
sub
cltd
pop
bound
push
repz
jae
add
cli
jg
in
int
nop
cmpsb
test
inc
mov
jae
rcll
addr16
jmp
jo
int3
mov
mov
shll
sub
jbe
jle
mov
out
outsb
lahf
fidivs
push
push
into
je
test
addr16
lods
xor
imul
push
ficoms
sbb
or
lods
pop
sub
sub
sbb
or
jl
xor
movsb
lcall
sub
dec
sub
jno
sub
aaa
popa
test
rsm
rcl
lcall
popa
nop
shrl
pop
dec
mov
pop
xor
cmp
add
cmp
int3
xchg
push
movsb
sbb
xchg
add
lret
jbe
imul
decb
inc
popf
cs
pop
aas
mov
jmp
mov
adc
call
add
ror
out
std
fs
sti
cli
fdivl
std
cmp
popa
push
lods
jle
jmp
push
lds
adc
xor
dec
icebp
fcmovbe
cmpsl
mov
int
adc
leave
pop
jo
mov
push
into
inc
std
test
add
mov
mov
cmp
push
outsl
and
leave
mov
sbb
addl
insl
push
cltd
ja
std
xlat
pop
out
movsl
fiadds
push
imull
dec
aas
out
xlat
dec
cmp
bound
movsb
addl
xchg
jg
nop/reserved
adc
jge
xor
addr16
icebp
shll
aas
iret
mov
roll
jno
add
mov
fnsave
inc
adc
mov
pop
pop
dec
inc
das
jp
mov
jg
mov
jnp
mov
loopne
xchg
mov
dec
add
pop
cmpsb
and
aaa
jae
shl
xchg
cmpsb
pusha
lcall
mov
fucomip
sub
je
mov
mov
loope
cmp
fisttps
cmpsb
push
cli
push
or
xchg
pop
adc
fdivrs
fsincos
cli
pushf
jae
lcall
mov
add
cmc
adc
sahf
xchg
inc
add
jb
gs
aaa
stc
stos
test
jmp
cmc
push
std
or
xchg
push
mov
inc
call
shrb
mov
cmpb
ljmp
fdecstp
mov
sbb
push
lods
jno
test
cmp
in
push
lods
pop
or
xchg
inc
adc
pushf
cwtl
sbb
dec
xor
inc
mov
mov
pop
adc
sbb
cmpsb
mov
sub
stc
push
xor
xchg
push
mov
cmp
xchg
ret
push
sbb
stc
in
fwait
push
sub
ret
test
xlat
pop
mov
dec
insb
imul
jns
je
pop
pop
mov
adc
fs
sub
inc
sbb
or
stos
in
sbb
mov
sbb
ljmp
jmp
mov
imul
adc
repz
add
sub
inc
lds
dec
loope
repnz
call
addr16
ret
notb
shrb
std
xchg
push
sahf
insl
sbb
jp
scas
fidivrs
and
add
mov
into
mov
cwtl
lret
mov
into
stos
ficoms
dec
pop
mov
sti
sarb
das
int
adc
xchg
pop
lods
bound
popa
inc
cmp
jo
sub
test
loop
sbb
popf
xor
insl
leave
jp
xchg
dec
hlt
jns
sbb
adcb
mov
mov
je
test
cmpsl
jmp
jbe
les
pop
icebp
inc
insl
pop
sub
mov
jecxz
cmp
dec
out
fs
cmpsb
icebp
inc
sub
lds
inc
add
xchg
mov
ret
xor
jo
js
dec
sbb
push
pusha
fcomip
lods
lret
or
mov
leave
leave
jecxz
cmc
cmpsb
mov
out
out
cmp
sub
repnz
add
pop
loope
pop
lods
push
ret
ja
cmp
cli
out
inc
cmp
sub
in
lock
ja
sbb
clc
inc
adc
int3
dec
ret
in
inc
inc
jp
xor
test
cwtl
aaa
gs
negb
add
subb
pop
add
insb
mov
dec
sar
into
icebp
dec
lods
jmp
mov
xor
mov
out
in
dec
xor
rcrb
sbb
mov
test
std
and
jge
rcr
sbb
adc
mov
ret
xor
outsl
dec
imul
scas
pop
xchg
outsb
repz
subl
cmp
pop
pop
lods
out
adc
mov
cmp
clc
xor
iret
addr16
ret
adc
inc
pushf
push
mov
bound
test
add
xor
cmp
stos
xchg
inc
add
arpl
in
clc
es
mov
pop
push
dec
sbbb
lret
test
cmpsl
pop
loope
test
or
out
shlb
pop
sti
mov
movsl
sub
push
push
inc
xchg
nop
mov
lea
mov
adc
jl
mov
popf
cmpsb
ja
adc
faddp
test
jmp
daa
xor
loopne
fmuls
loopne
xchg
jnp
lock
out
adc
lcall
xor
sahf
lret
adc
mov
mov
inc
and
test
loope
cld
lahf
xchg
imul
stc
testl
dec
pop
push
fsubrp
pop
mov
push
out
movsb
mov
popf
mov
push
add
push
outsl
adc
xlat
data16
jne
cmp
arpl
sbb
cs
sub
pop
pop
cli
fsub
arpl
mov
jae
cmp
adc
push
nop
or
cmc
mov
xor
sarl
movsl
mov
test
dec
cld
mov
shrb
gs
stc
mov
int
lahf
dec
insl
cld
mov
dec
cmpsl
dec
and
arpl
pop
adc
outsb
data16
dec
xor
cmp
lods
adc
lret
lahf
add
pop
mov
rclb
mov
pop
mov
sub
roll
out
jle
movb
sahf
dec
popa
insb
inc
rclb
mov
adcb
dec
push
shr
dec
ret
mov
test
insl
mov
or
fidivs
pop
cmc
cmpsl
inc
sbb
inc
mov
cmp
jmp
popa
xor
dec
sbb
xchg
scas
dec
push
pop
rcrl
int
pusha
ret
in
outsb
jae
ficoml
mov
into
aad
pop
pop
sbb
xor
pop
lret
xchg
sbb
in
or
jno
lret
pop
adc
mov
inc
mov
push
xchg
stos
mov
xchg
and
ret
xor
stos
lahf
sub
scas
sbb
je
sbb
imul
iret
and
xlat
add
adc
lods
sbb
push
mov
scas
stc
xchg
or
punpckhdq
mov
dec
daa
cmp
mov
pop
pop
xchg
xlat
iret
pop
lods
fmuls
pop
xor
sbb
cli
cmp
jle
mov
mov
popa
mov
jno
arpl
pushf
push
push
lds
mov
pop
sti
int3
adc
inc
cmp
mov
cld
pusha
hlt
xor
mov
mov
test
sbb
mov
mov
lds
jecxz
pop
cmp
xchg
inc
mov
cld
xchg
leave
sahf
push
out
mov
stc
outsb
testb
mov
outsb
les
push
pop
mov
int
push
aaa
adc
fcomps
add
nop
test
test
popa
jae
stos
test
push
aad
push
fst
inc
repz
dec
xchg
clc
sbb
int
loop
mov
cs
mov
sbb
outsl
std
cmp
hlt
jge
xor
in
dec
rorb
das
pop
xor
jl
and
mov
push
sbb
mov
sbb
mov
cld
push
or
mov
jmp
imul
sbb
shrb
setne
repz
in
cmp
cmpsb
or
sbb
mov
xor
push
jo
jmp
and
leave
xor
jbe
insl
pop
dec
xchg
in
adc
fldenv
fisubrs
ret
andl
fdivp
rcl
lea
push
push
aas
or
jge
push
xor
sub
pop
xchg
stc
xor
push
cmovs
inc
jg
xor
jp
xchg
mov
push
movsb
xor
mov
sbb
into
pop
mov
fists
adc
lcall
leave
fcomp
mov
sbb
mov
pushw
sub
js
mov
lret
push
fs
xor
sub
incl
ja,pn
push
imul
jl
mov
add
mov
les
idivl
insb
mov
movsl
pusha
sbb
dec
sarb
dec
sub
jp
outsl
inc
popa
cli
clc
in
aas
enter
inc
jae
push
outsb
pop
pop
jo
mov
ss
push
sbb
pusha
xor
pop
inc
lahf
aas
or
aad
fcoms
fcmovbe
shl
je
movsb
ja
sbb
imul
xor
cli
mov
mov
ljmp
xchg
add
test
sti
push
ret
mov
ljmp
bound
adc
cmpsl
repnz
xchg
jl
into
adc
nop
fwait
js
or
data16
not
xchg
pop
pop
pop
adc
push
pop
outsl
mull
and
fldcw
mov
jg
stos
jmp
in
dec
and
cmpsb
sbb
popf
cwtl
cmpsl
clc
mov
sub
repnz
jb
mov
mov
mov
sub
mov
jmp
cmp
sbb
gs
mov
pop
add
cmc
bound
push
pop
int
in
loopne
mov
xor
out
mov
add
stos
and
faddp
fcom
aad
jb
shrb
out
cmc
mov
ret
xor
and
in
adc
sbb
sbb
test
in
adc
out
and
stos
mov
cli
dec
arpl
xchg
out
lock
test
push
jmp
lock
test
push
xchg
rcl
adc
xchg
adc
pop
jl
jnp
cmp
fisubrl
sub
cs
and
test
leave
add
dec
stc
mov
pop
add
adc
lock
mov
addl
mov
sbb
scas
mov
jnp
stos
jge
enter
outsl
mov
loopne
lahf
es
loop
shlb
pop
ja
jne
pop
mov
lahf
jmp
in
mov
das
psrlw
popl
repnz
inc
xor
pop
das
cmpsb
rcrb
daa
ljmp
and
int3
push
push
pop
add
fwait
sbb
sub
pop
and
sub
sbb
mov
jne
cmp
in
cli
popf
das
lret
cmp
pop
test
in
push
push
cmp
in
mov
icebp
xchg
std
hlt
and
repz
jg
sbb
in
sub
sbb
pushf
push
andl
cmp
mov
enter
dec
add
pop
dec
andb
rcrb
mov
dec
add
inc
xlat
std
shlb
mov
mov
or
xor
add
push
xchg
addl
lock
mov
lret
add
aam
jl
pop
and
jl
cmpsb
cmc
gs
sub
loop
xchg
nop
sbb
mov
movsl
icebp
xchg
push
mov
and
test
clc
cmpsb
xchg
loopne
sbb
fsubrs
push
rorb
jge
fdivr
inc
sub
addr16
push
push
xor
scas
mov
sub
pop
daa
out
mov
mov
jns
cli
or
fisubl
sbb
xlat
or
arpl
lods
push
lods
dec
inc
imul
in
jno
sarb
outsb
test
mov
cs
cmpsl
mov
mov
push
lds
lock
cs
lret
stos
mov
in
sub
mov
sub
pop
mov
hlt
outsb
fs
ret
movsl
in
lcall
lds
bound
adc
dec
arpl
inc
pop
bound
fidivl
lret
jge
out
add
loop
cwtl
mov
shll
imulb
adc
ljmp
out
aas
jnp
add
dec
mov
ljmp
addr16
sti
inc
add
jnp
xorb
push
inc
test
xchg
lock
cmp
jo
lret
xor
aam
aas
lds
push
mov
sbb
mov
push
xchg
cmp
cli
xchg
inc
pop
jle
sti
movsb
xchg
sub
push
test
xchg
inc
test
repnz
loopne
int3
mov
cmp
sub
divl
shlb
ja
ret
fstps
cwtl
and
jg
xchg
xor
daa
outsb
add
movsb
push
addr16
pop
testl
sbb
xor
push
scas
cwtl
sysret
cmp
cmp
mov
int
in
shl
adc
scas
mov
sub
inc
xor
sbb
add
cmpsb
shrb
rcrl
xor
arpl
fstpt
fimuls
pushf
sahf
inc
inc
dec
add
pop
das
in
sub
jns
xchg
loop
std
rcl
cmpsb
int
dec
cmpsb
sub
mov
movsl
fwait
and
sub
jmp
ja
fwait
adc
jae
xor
sub
mov
push
outsb
jmp
push
push
inc
iret
xchg
fimuls
ret
ret
cld
mov
stc
lds
ret
mov
sub
int3
xchg
sub
ja
scas
sbb
sub
test
out
xor
dec
mov
dec
gs
mov
sahf
pop
cmp
mov
jno
sbb
cmp
mov
stos
dec
test
lret
or
dec
jl
clc
jg
add
mov
push
add
pop
xchg
out
add
xor
test
lds
sub
adc
insb
cmc
mov
sti
inc
xchg
mov
inc
negb
and
and
xchg
test
xchg
add
add
in
es
sbb
push
aad
enter
lock
jo
sub
inc
jo
cmpl
bound
push
sbb
movsl
xlat
dec
mov
pop
jb
stos
xchg
adc
inc
test
xchg
jo
lcall
jbe
daa
fmuls
imul
icebp
daa
cmp
jns
int
mov
mov
dec
gs
je
call
push
lahf
pop
fldpi
cmpsb
loope
add
jle
movsb
add
dec
pusha
xchg
mov
aam
xchg
loop
add
lcall
stc
inc
icebp
adc
cwtl
mov
push
jno
sbb
iret
adc
fwait
fs
dec
xor
mov
ljmp
or
sbb
cs
clc
inc
aad
xor
sahf
sub
cld
notl
mov
sbb
xchg
add
jg
aas
fmull
mov
pop
mov
aas
rcll
in
aad
cmp
push
cmc
mov
pop
jecxz
hlt
adc
insb
mov
pop
or
mov
fwait
popf
fst
mov
or
and
push
stc
sbb
xor
lea
aas
pextrw
push
push
hlt
jno
daa
fnstenv
jbe
mov
mov
loop
cmp
cmp
adc
out
outsl
or
and
scas
aad
dec
and
or
add
stos
stos
ljmp
jnp
sbb
into
xchg
popf
mov
out
jb
insb
mov
shll
wrmsr
and
sbb
jp
jae
test
mov
mov
mov
gs
jmp
sahf
xlat
ljmp
mov
and
iret
shrl
dec
in
test
fwait
scas
push
xor
and
mov
popa
insb
jecxz
jnp
pushl
ds
in
dec
adc
icebp
cmc
psubusw
sbb
cmp
pop
push
arpl
adcb
lods
stos
push
and
push
pop
ljmp
es
jge
int3
push
dec
enter
aaa
rolb
jecxz
inc
iret
jno
sti
mov
leave
xchg
popl
jmp
int
pop
iret
sarb
add
push
cmp
ret
dec
and
mov
dec
sub
mov
std
aas
dec
inc
mov
push
ffree
xor
add
ret
popf
xor
cmp
jg
jno
sbbb
pop
sbb
mov
or
addr16
adc
enter
push
cmp
loope
js
mov
out
adc
or
jns
xor
jp
fs
fidivrs
data16
in
pop
fisubrs
andb
or
mov
imul
out
rolb
mov
les
adc
or
fdivl
push
or
mov
out
xchg
dec
test
jl
xor
cmp
sub
mov
mov
add
or
cld
push
adcb
sbb
rcrb
pushl
dec
aaa
ud1
mov
jb
lods
xor
ljmp
mov
ds
inc
push
pop
and
sbb
and
fadds
jnp
dec
push
idiv
fs
adc
inc
xchg
rolb
cmp
bound
push
mov
dec
stos
insb
or
aad
xchg
addr16
icebp
xchg
ds
stos
jl
sbb
out
adc
sbb
ds
fcomps
and
into
popa
inc
sub
repz
mov
xor
sbb
cwtl
je
dec
xor
mov
pop
arpl
adc
mov
fisttps
imul
popf
call
pushf
in
cmp
out
hlt
cmp
add
ret
sub
cmp
sub
clc
out
mov
xchg
fiadds
daa
adc
rclb
daa
push
mov
into
aad
lret
mov
hlt
push
mov
sub
fscale
adc
mov
sub
shlb
test
xchg
iret
jnp
pop
stos
jnp
cmpl
popa
repnz
loopne
pushf
outsb
sub
rcll
push
pop
inc
lds
js
jp
and
jns
in
ja
inc
adc
jae
add
push
xchg
jle
jle
push
sub
pusha
aas
subl
add
je
fs
stc
cmc
jae
ss
aas
xor
movsl
mov
jno
lods
push
xchg
lcall
jmp
pop
pop
jl
out
lods
stc
mov
popf
push
rcrl
pushf
cli
mov
cli
fs
in
andb
repz
xor
cmp
dec
and
mov
mov
jle
jg
aad
out
push
subl
pop
or
notb
mov
movsl
add
push
mov
addr16
mov
lahf
sti
jge
xor
jno
xchg
les
mov
hlt
outsb
call
jg
test
pop
pop
cmpl
aaa
xor
stos
gs
loop
popl
setbe
jnp
test
add
add
push
jo
aaa
push
iret
cli
add
mov
leave
hlt
lock
inc
xchg
cmp
loopne
dec
lret
sub
lret
mov
mov
add
push
lds
mov
testl
and
jns
clc
outsl
cmp
push
cmp
jb
stc
cmpsl
test
test
bound
mov
and
rorl
xor
loop
jge
xor
loop
rcll
sbb
dec
lret
daa
movsb
pop
push
dec
sub
repnz
jle
sub
push
dec
lea
shrb
test
cmp
sbbl
xchg
mov
or
xorb
sbb
push
stos
loop,pt
mov
ja
push
movsw
jg
fistpl
faddl
inc
add
insl
pop
and
hlt
xchg
xor
and
push
sbb
in
popa
mov
mov
popa
push
and
int3
bt
cmpl
outsb
xchg
ljmp
dec
add
mov
and
fisubrs
out
ficoms
xchg
or
adc
pop
pop
mov
or
mov
aaa
js
cmpsl
movsb
stos
pop
pop
sbb
sbb
cmp
mov
pop
dec
xlat
fsubr
adc
adc
insb
fdivrs
cmp
add
cmp
scas
or
xchg
repnz
push
jecxz
sbb
push
bswap
pop
inc
stc
mov
mov
mov
xor
add
dec
add
mov
mov
pop
dec
inc
popa
add
insb
xor
mov
push
clc
pop
push
or
push
fdivrs
ret
pop
push
mov
inc
sbb
pop
aaa
bound
dec
cmp
mov
ljmp
scas
fistpl
lods
mov
cwtl
pop
xor
lock
ds
leave
bound
test
jmp
and
inc
pop
imul
loop
mov
aas
pop
in
jns
sbb
jmp
pushf
stos
aas
fwait
jae
ret
cmp
ret
xchg
lahf
add
cld
xchg
inc
outsb
clc
adc
out
inc
fsubrs
xor
imul
dec
mov
stos
mov
inc
cmp
outsl
lcall
popa
cmp
je
cmp
loopne
insb
pusha
sarb
mov
jmp
inc
sub
fstpl
lret
inc
xor
jae
or
pop
cltd
jg
dec
cli
iret
adc
cmpl
inc
out
stc
lock
lods
ljmp
ljmp
jnp
sub
loopne
pop
pop
mov
leave
inc
std
scas
mov
cli
add
pusha
je
mov
xor
xchg
add
push
addr16
inc
popf
pop
fiaddl
add
and
gs
dec
int
xlat
ss
sbb
sti
mov
inc
sub
mov
jmp
iret
pop
xchg
lahf
or
loopne
mov
mov
loopne
test
pop
imul
bound
lcall
jno
cmp
jle
mov
sahf
cwtl
movsb
mov
push
add
pop
cmc
das
int3
dec
xchg
cmpsb
sbbb
inc
rclb
out
push
pop
popaw
es
scas
cmp
adc
stc
cld
sti
bsr
sbb
fistpl
aas
aas
inc
or
lcall
cltd
jl
pop
mov
pop
lds
dec
imul
cmpsl
lea
dec
xchg
xchg
adc
jne
adc
scas
or
faddl
mov
aas
inc
cmpsb
ljmp
mov
inc
repnz
pushf
jecxz
out
pop
pop
loop
loop
xchg
push
mov
jg
popa
nop
dec
mov
fcmovne
xor
jle
jbe
jmp
lods
movsb
mov
cmpl
outsl
in
imul
call
adc
mov
test
inc
lods
mov
mov
aam
repz
lret
out
xlat
sbb
ja
jno
inc
cmpsl
xchg
mov
jge
xor
and
ret
jle
mov
push
mov
push
std
ljmp
aad
jmp
pop
repz
mov
dec
push
push
bound
mov
out
pop
jb
mov
test
push
jp
scas
dec
mov
mov
lods
mov
dec
test
add
pop
rorb
push
mov
sarb
shrl
imul
and
push
add
pop
mov
in
shll
xchg
adc
pushf
jge
imulb
inc
mov
dec
mov
icebp
ret
sahf
bound
repz
ja
ljmp
jb
scas
mov
popf
mov
nop
dec
add
icebp
push
shr
mov
int
emms
xchg
cmp
dec
imul
dec
push
test
fs
stos
aad
outsl
cmp
sbb
xor
cmpsl
cli
imul
ljmp
iret
mov
hlt
adc
jb
cs
dec
sbb
aas
daa
mov
sub
push
jmp
arpl
addr16
mov
mov
or
lcall
lods
divl
inc
inc
jmp
ja
push
dec
stos
mov
add
cmp
nop
mov
push
xchg
cmp
xchg
das
dec
mov
xchg
bound
outsb
idivl
std
sbbb
dec
std
cld
sbb
dec
nop
aad
pop
mov
cmp
adc
push
out
mov
and
clc
xor
mov
insb
adc
inc
pushf
out
movsl
push
ds
outsl
enter
add
pop
mov
nop
leave
jbe
sbb
loope
inc
cmpsb
jae
mov
dec
lret
and
sbb
and
mov
xchg
jge
xchg
xchg
and
push
and
jns
xor
adc
pop
insb
and
pop
sahf
insb
jle
stos
xchg
xchg
pop
in
mov
ret
aas
sub
xor
aam
or
jno
sub
loopne
mov
repz
push
ret
popw
sub
insb
or
test
mov
sbb
in
mov
cmpsb
cmp
or
mov
cld
mov
das
sbb
lcall
mov
inc
fstpt
aam
pop
adc
mov
imul
dec
adc
cld
sbb
jmp
cmp
pop
stc
sbb
andl
dec
dec
xor
incl
jnp
bound
out
loope
inc
jg
push
jbe
cltd
imul
dec
ljmp
lahf
cmp
jns
jle
xchg
insb
pop
ret
ret
pop
shl
and
sbbl
mov
inc
mov
ljmp
loop
lods
mov
xorl
nop
mov
cltd
fwait
cmp
mov
outsl
fadds
jbe
mov
pop
scas
xchg
lret
and
loopne
mov
push
xor
movntps
pop
mov
pop
stc
jae
xchg
jo
sbb
fs
pop
cmpsl
mov
pop
add
jmp
leave
xchg
jb
add
adc
fnstcw
es
pop
sub
movsl
and
or
roll
sbb
dec
insb
dec
cwtl
pop
testl
nop
and
fldt
xchg
shl
stc
icebp
jmp
sbb
cld
fidivrs
movsb
or
fcmovne
in
aam
adc
or
aad
mov
cmp
mov
call
pop
pop
jl
ljmp
andl
std
cmp
pop
mov
and
sub
adc
dec
pop
push
jnp
leave
mov
aaa
into
fadds
out
pop
push
push
data16
inc
dec
rclb
fnstcw
mov
push
cmp
jne
lcall
ret
xor
int
mov
andl
push
adc
fsubl
cmpsb
nop
sub
cmpsb
adc
jmp
in
mov
fwait
sub
mov
rorl
and
xchg
push
sub
xor
sbb
xchg
scas
add
and
or
and
pop
dec
xor
jmp
and
int
popa
adc
ja
repz
xor
cmp
mov
add
mov
divb
sbb
mov
push
sbb
cmp
xchg
dec
inc
test
test
adc
iret
shl
sbb
push
aam
in
mull
dec
adc
mov
push
sbb
rclb
iret
and
mov
add
repnz
nop
jmp
daa
xchg
les
xor
inc
jle
stos
xor
jmp
movsb
sub
push
sbb
jnp
push
aaa
fistps
je
sub
jp
mov
cltd
pushf
xchg
add
lret
inc
push
mov
notl
data16
fsubs
jno
mov
cli
xchg
xor
adc
or
jecxz
je
sahf
test
pushf
ss
add
xchg
lret
adc
xchg
jp
hlt
in
add
int
cli
mov
stos
cli
fmull
jp
mov
jno
push
std
ja
int3
lods
ss
clc
andb
outsb
and
mov
nop
add
daa
sbb
xor
stc
or
das
or
stos
out
or
xlat
jno
cli
fsubr
cmc
mov
xchg
shrl
stos
ss
cltd
jecxz
fwait
pop
lea
icebp
add
leave
stos
cmpsb
in
mov
loope
mov
ja
dec
clc
mov
or
insb
std
push
sub
xchg
mov
push
dec
sbb
test
shrd
subl
pop
pop
test
js
enter
sub
pop
fiadds
dec
jo
je
adc
fcoms
mov
xchg
pop
mov
pop
push
mov
pop
fidivrs
pop
lcall
test
sbb
lea
push
loopne
sti
andb
sbb
xchg
mov
imul
xchg
dec
adc
int
pop
dec
lret
xlat
pop
addr16
lods
mov
sbb
adc
idivl
ffreep
movsb
mov
jp
add
ds
and
std
and
jl
push
pop
cmpsb
dec
inc
stc
ret
jecxz
xor
and
mov
pop
pop
in
setnp
mov
mov
stos
mov
pop
mov
fadds
mov
cmp
inc
sub
lods
ljmp
dec
inc
push
repnz
aad
xor
cmpsb
inc
shlb
daa
in
les
cmp
rcll
cmp
sub
pop
flds
subl
push
mov
add
jecxz
pop
fs
addl
int
mov
adc
sahf
and
shld
lea
outsb
bound
rorb
xor
idivl
scas
adc
xchg
push
test
in
ret
lcall
clc
jp
mov
push
or
adc
or
mov
jne
sahf
sub
jmp
xchg
jns
fsubrs
jle
dec
mov
frstor
add
testb
test
xor
rclb
or
xor
push
or
sub
pop
pop
cltd
lret
lcall
fdivs
and
add
mov
mov
jle
lret
add
push
dec
shrl
std
xor
imul
and
outsl
in
sub
inc
test
cmpsl
pop
sbb
and
loope
mov
pop
xchg
outsl
xchg
in
bound
mov
ds
rcll
or
pusha
mov
out
adc
pusha
insb
push
inc
jecxz
xchg
mov
dec
xchg
int3
cwtl
outsl
sub
push
fnstcw
shlb
clc
pop
jns
sub
popf
loope
mov
xchg
mov
test
mov
jg
insl
mov
outsb
dec
cmp
lahf
xor
mov
imul
push
aaa
mov
push
pop
lods
xor
pop
adc
test
xor
stos
adc
jle
dec
fs
stos
and
insl
push
mov
fwait
aam
in
jns
cmp
fs
jbe
ds
stc
mov
jg
in
mov
or
pop
mov
cmp
mov
sbb
push
xor
adc
rcrl
mov
mov
xor
mov
dec
cmp
mov
notb
pop
inc
add
std
sbb
enter
jbe
sti
xchg
pop
push
sahf
add
sub
call
mov
aam
sbb
mov
xor
insl
outsl
fsubl
sbb
jge
xchg
jp
hlt
scas
nop
xchg
mov
sub
xor
testb
repnz
push
cmc
or
loop
push
add
dec
or
dec
lock
sbb
rcr
xchg
neg
push
repnz
jl
dec
push
pushf
pop
cwtl
xchg
sbbb
mov
subb
sub
cs
rcrl
xchg
adc
jo
popa
pop
lahf
pop
pop
scas
inc
mov
incb
dec
sub
stos
incl
sbb
xchg
inc
enter
lods
push
arpl
in
clc
fildl
add
lea
outsb
aam
mov
xor
fsubrs
add
ret
mov
lds
fs
mov
test
cmp
push
jo
add
ja
and
test
notb
jb
pop
iret
pop
add
fldz
gs
mov
pop
sbb
dec
cmpl
insb
icebp
fsub
xor
enter
ds
pop
pop
mov
xchg
idivl
lds
or
shrl
mov
jnp
ret
push
sub
and
add
test
sbb
mov
jo
mov
aam
es
daa
test
sub
mov
xorb
sbb
adc
mov
and
adc
sub
rcrl
idivl
sbb
es
push
popf
jns
stc
dec
in
xlat
pushf
adc
dec
icebp
mov
mov
or
dec
mov
out
fwait
jne
ljmp
movb
ss
je
mov
sarb
pop
add
and
dec
aad
and
mov
adc
fcmove
int3
or
mov
idivb
pop
mov
mov
scas
test
and
or
out
mov
mov
mov
out
mov
and
xchg
inc
dec
iret
xchg
lods
in
push
xor
sarl
mov
lahf
mov
mov
mov
pop
ds
pop
int3
nop
call
cmp
lock
mov
insb
cld
insl
mov
jmp
jns
orl
scas
out
push
dec
pop
mov
sahf
sti
cmp
iret
ja
into
cwtl
xlat
pop
push
insb
sub
sub
mov
inc
cmc
dec
cmp
push
cltd
sub
push
fwait
push
push
pop
xchg
sbb
negl
xor
cmp
pusha
xchg
mov
jp
mov
cmp
cmp
cmp
test
pop
xor
or
cmpb
push
cmpsb
nop
add
movb
pop
repz
pop
or
adc
mov
daa
cmpsb
stc
nop
sbb
out
pop
mov
jl
pop
jmp
and
lahf
sbb
fdivs
jle
enter
int
ljmp
jb
sarb
xchg
push
inc
test
mov
inc
pop
sbb
lock
pop
push
mov
or
lret
adc
inc
push
mov
jnp
ja
sub
pop
or
lods
sub
cs
adc
push
cltd
fstl
js
sahf
std
ds
add
idivb
push
pushf
aad
shl
xor
sbb
inc
dec
out
push
rorb
rol
mov
mov
mov
xchg
inc
or
out
mov
push
lret
dec
sub
shrl
sti
mov
dec
mov
jne
push
out
push
into
std
lahf
arpl
jns
add
imull
dec
sbb
push
xchg
out
idiv
pop
push
jne
scas
ja
aas
mov
into
mov
cs
repnz
neg
les
pop
test
repz
fldt
jl
es
inc
and
dec
sbb
add
mov
sub
inc
dec
mov
add
xchg
sub
fisubl
les
int3
push
xorl
jo
mov
xchg
mov
push
xchg
xchg
cmp
inc
dec
fmull
iret
cmc
aam
cmp
fsubrl
outsl
lods
push
enter
push
or
aam
jmp
cmpl
push
sbb
neg
add
cld
and
iret
shrl
out
test
roll
std
xor
dec
sub
fdivr
dec
cmpsl
push
inc
push
add
xchg
sti
lea
xchg
movsl
dec
cmc
mov
jb
jecxz
xor
jmp
add
pop
out
cmc
fimuls
mov
sub
cmpsb
ljmp
or
aam
xchg
adc
jge
call
and
out
push
out
mov
sbb
mov
mov
subb
cmp
sub
mov
addr16
push
lret
adc
add
fdivr
fidivl
mov
addr16
sbb
sbb
into
pushf
jg
xlat
and
cli
iret
mov
push
ret
inc
mov
and
pop
jo
pop
mov
add
jo
sbb
pop
adc
ljmp
jl
aas
fcomps
fnstsw
loopne
insb
loope
pop
dec
hlt
pusha
data16
bnd
mov
sub
imul
lahf
lcall
sbb
sub
sbb
jp
mov
mov
ss
scas
scas
push
mov
into
popf
fisubs
shl
or
inc
mov
or
lock
das
movsl
cmp
jno
inc
neg
insl
mov
loopne
sub
xor
lods
fcomi
rolb
lahf
orl
loope
out
adc
ss
pushl
fidivl
mov
sbb
test
dec
flds
test
inc
xchg
adc
jmp
sarl
pushf
cs
xchg
ja
xchg
cmpsb
jne
and
vpsubusb
mov
lods
fldl
fsub
bound
or
add
mov
jbe
adc
inc
fcomp
sub
inc
sahf
jge
mov
cmp
jns
jg
push
ret
mov
ret
inc
add
and
stc
jp
add
aam
std
cmp
sub
data16
jge
xor
push
xchg
sahf
adc
hlt
mov
pop
adc
inc
sub
pusha
cmp
pop
aaa
xchg
mov
aas
loop
pop
in
xor
sahf
leave
icebp
cmp
sbb
xchg
out
fcmove
sbb
xchg
push
popf
js
and
sbb
test
jp
inc
ret
push
hlt
dec
in
aad
cmp
fsubrs
xor
imul
cmc
int
rclb
inc
inc
repz
or
mov
dec
addl
into
or
scas
or
xor
insb
or
sub
movsb
popf
popf
negl
inc
xor
lret
cmc
andl
fcoms
dec
ret
aaa
int
jne
jl
pop
cmp
fsubrs
push
pop
test
leave
jg
push
mov
imul
fildll
xor
das
scas
mov
in
fwait
push
adc
mov
ds
lcall
xor
xchg
xchg
in
sub
test
xchg
pop
bswap
js
xor
ret
or
aaa
inc
mov
or
mov
push
daa
int3
push
push
xchg
xlat
jge
push
or
cmp
jo
adc
push
pop
lds
repnz
rorl
pop
mov
xlat
mov
xchg
cli
imul
cmp
in
outsb
cmpsb
sub
js
sub
daa
ss
lret
pop
je
in
sub
sub
aad
fstl
sub
movsb
mov
decl
sbbb
jne
bound
ljmp
mov
mov
dec
out
xor
popa
and
cltd
add
shll
dec
sub
dec
shrl
aaa
aas
cmp
aaa
or
inc
sub
pop
fcmovnbe
jo
mov
or
aad
cmp
rolb
out
push
leave
jo
cwtl
out
aas
jge
jno
xor
daa
push
jg
les
clc
xor
rorl
mov
stc
add
xchg
inc
push
mov
mov
mov
or
rcr
inc
mov
push
cmpsb
into
xchg
sub
test
inc
cmp
fcompl
ss
in
sbbl
jecxz
add
xchg
test
lcall
loop
xchg
movsb
mov
jno
mov
pop
jns
inc
sub
push
jns
and
jbe
xor
sbb
fcmovnbe
dec
sub
cmp
scas
movsl
nop
sarb
pop
mov
fimuls
jno
scas
adc
and
and
shrl
repz
pop
leave
inc
stos
fnstenv
mov
mov
inc
or
in
mov
adc
imulb
dec
sbb
add
or
ja
mov
fcomps
cmp
mov
add
aaa
adc
adc
ss
xlat
lahf
daa
stos
adc
or
fstps
adc
dec
outsl
lret
cltd
sub
add
and
scas
out
push
daa
and
out
scas
mov
lret
rclb
mov
lcall
cmpsb
xchg
je
cmp
int
push
adc
push
aaa
jmp
lea
call
fnstenv
js
mov
aaa
and
sbbl
cmp
pop
loop
arpl
popa
sbb
push
xchg
mov
dec
repnz
nop
xchg
or
xchg
cli
mov
loopne
mov
adc
xchg
jge
lds
das
xor
or
dec
out
lds
dec
mov
xchg
aaa
cmpb
xchg
mov
cmpsb
cwtl
lahf
dec
xor
out
jl
jo
mov
vpmulhw
cld
cmpl
push
imul
cwtl
cmp
sub
sarb
inc
out
shrb
outsl
or
push
add
adc
popf
adc
and
mov
mulb
lock
sti
mov
gs
mov
stos
pusha
fs
xchg
cltd
shll
cwtl
xchg
mov
add
push
stos
add
cmpsb
mov
push
dec
pop
mov
ret
mov
jb
add
push
movsb
jb
mov
adc
mov
adc
mov
mov
push
out
out
xor
push
adc
ss
mov
or
js
std
mov
sub
imul
or
les
sbb
das
mov
xchg
xchg
shld
fucom
rcll
and
cld
inc
stos
xchg
or
scas
push
fstpt
imul
push
scas
ja
cmp
xor
add
mov
mov
nop
or
rclb
scas
sub
sahf
adc
jae
push
aaa
lea
vpmacsswd
push
inc
xor
push
jae
xchg
or
sbb
data16
fs
push
test
mov
sub
jg
aas
jne
mov
xor
rcrl
pop
scas
loopne
push
pop
mov
mov
int3
xchg
or
jno
rorb
inc
mov
test
pushf
lock
hlt
adc
push
clc
and
push
mov
adc
scas
cmp
pop
shl
dec
fldenv
cli
rcl
xchg
jae
dec
cs
push
mov
push
pop
adcb
int3
xchg
adc
push
pop
daa
int3
pop
jmp
xor
out
vxorps
jno
mov
and
cld
mov
jmp
mov
in
insb
repnz
clc
icebp
loopne
lea
in
lcall
data16
xchg
lods
enterw
ss
mov
xor
dec
imull
dec
stos
stc
mov
ret
lret
lods
jmp
lods
cmp
push
cmc
cmp
add
add
rorb
clc
jae
sahf
add
in
mov
jae
sar
lods
mov
out
imul
mov
lret
sbb
jl
sarl
in
jbe
inc
adc
mov
jecxz
cmpsl
jecxz
mov
outsb
sub
mov
mov
pusha
xor
inc
outsl
cmpsl
push
jmp
test
mov
jo
sbb
scas
mov
gs
lea
out
dec
mov
clc
add
mov
sbb
push
xlat
lock
fs
add
push
pushf
lock
lods
add
imul
add
pop
adc
imul
out
out
xchg
xchg
rolb
add
cmpl
jb
cld
sub
sbb
xchg
dec
je
cld
dec
or
sbb
mov
pop
mov
jge
adcb
mov
lcall
sub
pushw
pop
sub
mov
ret
fisubrs
lahf
stc
adc
into
cs
xchg
push
pop
arpl
pop
es
inc
pop
mov
mov
adc
popa
pop
dec
and
jo
outsb
addb
sarl
fdivrl
dec
sub
mov
cli
enter
xchg
out
jl
mov
jnp
in
pop
inc
push
xchg
sub
pop
les
mov
and
mov
rorb
inc
xor
ja
hlt
call
adc
push
pop
jb
test
jecxz
ss
pop
rorl
jbe
stos
notl
int3
repz
push
ja
fs
jp
fidivl
xchg
inc
jmp
clc
xor
mov
xor
leave
loope
xchg
dec
jae
repz
and
mov
push
dec
jge
add
rclb
adc
pop
scas
mov
xchg
push
push
sbb
push
add
scas
sahf
push
cld
sub
mov
call
push
in
dec
mov
sub
dec
ret
inc
push
xor
daa
fdivrl
pop
scas
sbb
lds
push
and
mov
add
cs
xchg
dec
sub
pop
mov
mov
add
mov
dec
lahf
jmp
sbb
xor
fbld
mov
inc
rcrl
jae
rol
jecxz
jo
fnsave
ds
mov
sub
fsubr
lods
lret
mov
lods
xchg
jne
or
in
xor
push
xor
xor
cld
cmc
inc
xchg
incb
loope
adcl
xor
or
cmp
gs
fmull
push
and
int3
loope
gs
push
lods
sbb
xchg
into
xlat
out
xor
out
adc
adc
pop
lahf
ljmp
sub
data16
mov
pop
xchg
and
sub
lock
repz
ret
pop
mov
stos
inc
mov
daa
imul
adc
sub
inc
jl
add
pop
mov
lcall
test
rorb
in
pop
cmpsl
lret
pop
test
shlb
xor
jb
stos
adc
shll
jg
sub
push
test
dec
add
lret
pop
sub
sbb
adc
push
stc
lcall
out
andl
data16
clc
lods
inc
lock
jne
cmp
out
inc
dec
add
mov
inc
insl
movsl
nop
xchg
cmpsb
and
shll
inc
mov
mov
and
out
and
jo
imul
fisttpll
dec
xor
dec
and
jae
pop
cmp
adc
out
inc
jo
movsl
mov
cld
dec
pop
nop
jbe
cmp
push
outsb
and
mov
xlat
lods
push
push
push
inc
cmp
push
movsl
hlt
mov
popf
push
lcall
adc
mov
pop
mov
mov
je
scas
inc
and
rclb
dec
sub
adc
or
aas
inc
cmpb
push
xchg
or
xor
aaa
inc
dec
adc
repnz
test
loope
loope
mov
aam
nop
pop
xor
inc
fldcw
popa
sbb
cmpl
or
aaa
xchg
pop
pop
in
jge
loopne
rorb
mov
nop
dec
push
sbbl
xchg
clc
jnp
mov
xchg
jle
mov
dec
inc
mov
or
add
sbb
ss
cmp
cli
repz
cmp
inc
jns
xchg
in
scas
adc
test
mov
mov
and
pop
shll
jo
mov
inc
jmp
cmp
popa
or
mov
andl
jbe
ret
rclb
dec
ret
test
push
out
ja
pop
loop
loopne
fdivrl
push
loope
xor
fisubrl
mov
inc
xor
and
and
mov
and
loopne
sbb
lcall
jmp
imul
push
push
xchg
push
mov
xorb
adc
or
fimuls
jg
int3
idiv
pop
dec
cmp
inc
cmp
call
lahf
cltd
mov
hlt
enter
test
xchg
add
rcrl
cs
mov
jne
add
mov
shl
in
mov
mov
addr16
push
in
or
xor
pop
outsl
cmc
push
aad
mov
fnstsw
fwait
mov
sbb
mov
jnp
orb
orb
or
push
xor
sub
mov
add
popa
mov
inc
ja
xchg
add
inc
and
xor
hlt
sbb
cmpsl
dec
inc
add
rcll
pop
dec
or
dec
lock
loopne
pop
fisttpll
inc
sbb
leave
jnp
xor
outsb
push
insb
pop
or
sbb
mov
loopne
js
cmp
push
rcr
lret
sbb
aad
jb
mov
push
or
jns
mov
pusha
cmp
icebp
subb
imul
in
popa
aaa
orl
push
adc
out
mov
or
and
addr16
mov
pop
mov
mov
dec
aam
pop
cltd
sti
xchg
sti
loopne
push
push
jns
gs
jno
fstps
sub
inc
cltd
xor
pop
imull
sbb
cmp
cs
mov
sub
jmp
mov
and
mov
fisubl
ficompl
mov
stc
fs
and
mov
mov
shlb
hlt
mov
mov
imul
or
mov
cmp
fistps
adc
dec
cltd
push
nop
fisttpl
add
clc
add
sti
insb
sbb
adc
addr16
mov
adc
mov
jecxz
cmpb
dec
aaa
push
inc
fsubl
stos
cli
or
into
inc
mov
pop
xchg
in
cmp
lret
bnd
fstps
idivl
sti
shll
dec
lret
mov
push
adc
lcall
aas
sub
mov
pop
mov
cmc
pusha
insl
stos
push
lret
in
push
lods
push
mov
cmpsb
arpl
cli
or
mov
jo
shlb
mov
dec
add
leave
mov
pop
movb
sbb
pop
inc
loop
lret
cmpsb
inc
xor
enter
fs
rcr
ret
fisubrs
enter
cmp
xchg
dec
lea
lahf
and
out
das
repz
push
or
cmpsb
adc
mov
fstps
notl
mov
or
inc
pop
fcompl
sti
xorb
sti
rcll
push
inc
or
jecxz
sub
xor
or
push
jne
push
dec
xchg
pop
adc
mov
repnz
push
lods
jae
nop
push
xor
and
lods
xchg
mov
cmp
pop
ljmp
lcall
xchg
mov
mov
cmpsl
test
xchg
in
ret
aaa
stos
es
dec
outsl
int
scas
pop
movsl
je
ficomps
mov
inc
push
xor
inc
fimull
mov
dec
or
mov
sti
lods
movsl
xchg
dec
daa
aaa
test
clc
mov
or
pop
sub
dec
mov
test
cmp
sbb
leave
mov
icebp
ljmp
mov
push
mov
dec
js
insb
mov
cmc
test
ret
inc
push
mov
addr16
mov
and
cmp
xor
adc
mov
push
sbb
mov
sbb
and
xchg
popf
mov
cmpsl
push
xor
pop
lret
pop
push
pop
cmp
cli
mov
mov
loopne
bound
xor
mov
adc
or
pop
je
or
sarb
pop
and
jae
push
outsl
dec
popa
rolb
jecxz
loop
or
push
int3
mov
xchg
sarb
inc
sub
adc
sbb
scas
cmp
sbb
inc
cmp
rcl
mov
and
repz
fadd
stos
pushf
mov
xchg
cli
mov
sbb
mov
mov
sarl
xchg
fstpl
adc
jmp
sarl
stos
inc
in
sbb
ret
inc
cmp
xchg
mov
add
idiv
or
fadds
cmp
push
xchg
repnz
jnp
loope
cmp
dec
or
pop
jne
daa
mov
mov
fsubl
fsincos
adc
xor
push
dec
adc
fsubs
out
ljmp
xor
fs
pop
mov
sub
cmp
iret
lcall
push
jg
xor
add
imul
push
push
cwtl
jecxz
jecxz
pop
add
and
lods
or
fmuls
inc
fdivrs
nop
mov
arpl
push
clc
out
dec
mov
dec
jne
push
enter
lret
mov
lock
xchg
int3
cwtl
mov
imul
mov
inc
fbstp
mov
mov
loope
cmp
loop
dec
movsl
bound
jae
mov
mov
sbb
pop
test
mov
push
dec
cmp
cmpsb
adc
and
xchg
mov
fdivl
cld
cmp
mov
mov
hlt
cmp
hlt
test
cmpsl
mov
fnstsw
nop
sbb
add
in
push
lea
into
int3
outsb
push
push
inc
inc
pop
mov
popa
sbb
cltd
pusha
imul
rclb
xor
xor
dec
xchg
icebp
loope
cmpsl
cmp
mov
mov
mov
adc
lods
mov
ja
mov
xchg
jge
repz
push
mov
aad
xchg
in
testl
adc
lcall
arpl
cmpsl
das
jmp
adc
fadds
jb
outsl
add
js
push
outsb
add
aaa
pop
cmp
shll
iret
lea
mov
test
or
mov
mov
rcrl
stos
arpl
aam
push
rclb
fildl
iret
es
or
jb
adc
out
std
cld
inc
int
cmp
test
xor
out
out
in
pop
daa
js
push
push
push
dec
cmp
adc
sahf
push
ficoms
inc
shll
orl
repnz
sub
je
cmpl
jne
and
sbb
cmpsl
sub
xchg
jnp
lods
fucom
jmp
jno
jo
mov
daa
and
movsb
jge
and
jns
xor
int
js
filds
sub
fwait
call
xor
jb
arpl
dec
test
xor
mov
jge
cmp
dec
xchg
push
cmp
pop
cmc
scas
xchg
mov
cmpsl
pop
jb
sub
out
xlat
jne
pop
inc
cmp
test
stc
mov
call
jns
aas
jnp
shlb
into
or
adc
addr16
lret
sub
ljmp
jmp
fldl
lods
pop
mov
ljmp
dec
enter
jb
and
pop
stc
dec
sub
bound
mov
mov
cmpsl
adc
hlt
add
xchg
cmp
jbe
xor
cmpsb
inc
sarb
xchg
test
adc
pop
push
push
fimull
cmp
idivb
mov
sbb
mov
test
adc
stos
inc
mov
fsts
mov
movsb
push
sahf
xchg
fmuls
test
pusha
cltd
ss
pop
out
mov
xchg
sub
jb
in
lcall
pop
dec
pop
mulb
cmpsl
and
sbb
ja
push
leave
push
ret
or
or
mov
and
and
mov
dec
inc
lds
or
shll
adc
xor
lods
push
sbb
cs
mov
and
mov
fldcw
inc
out
in
mov
aad
out
sbb
ja
push
add
cs
pop
lods
mov
jp
testl
out
aad
jecxz
cmc
mov
add
jno
rolb
add
push
mov
incb
cmp
mov
insl
adcb
and
cmp
sbb
addl
insl
cli
add
inc
xlat
xchg
bound
jl
shr
xor
fstl
sub
cmc
lahf
push
fsubrl
icebp
movsb
shrl
dec
cmp
inc
push
xchg
cmp
stos
xor
inc
push
std
push
add
and
pop
dec
mov
aaa
fistpll
or
xorl
mov
add
xor
daa
pop
aad
inc
push
mov
mov
jnp
mov
sarl
dec
jge
mov
pop
ljmp
mov
lods
mov
sbb
push
mov
lods
push
dec
pop
push
mov
xchg
movsl
add
push
mov
movsb
or
cli
daa
or
lods
xchg
ret
insb
popf
xchg
aas
aam
stos
scas
subl
xorb
cltd
or
or
or
cmp
lret
sarb
inc
inc
mov
xchg
and
jnp
mov
sbb
test
and
fbstp
pop
das
or
sbb
cmpsl
lds
mov
int
fcoml
enter
pop
mov
jle
shll
icebp
out
movsl
adc
int3
clc
cmpsl
cmp
inc
and
bound
sub
mov
loopne
pop
and
jge
cmp
ljmp
jnp
stos
in
sti
dec
fs
pop
and
call
sub
or
andl
inc
mov
jns
push
xor
adc
xor
push
outsb
call
dec
inc
cld
adcb
es
pop
out
out
in
sbb
cmp
sub
jle
sub
push
and
sub
imul
movsb
xor
pop
adc
mov
pop
dec
lods
lds
jb
push
add
into
push
or
push
pop
push
ss
cmp
adcl
cmp
push
mov
cmp
ret
subb
in
fs
xor
shlb
es
ljmp
adcb
sbb
popa
sbb
or
lret
inc
cld
xor
sbb
je
ljmp
jecxz
sarl
js
sbb
cmp
pop
dec
xor
loopne
xor
jno
sub
or
jmp
sub
cmp
clc
ljmp
jg
mov
mov
cmp
add
jmp
jg
ljmp
dec
and
pop
rcrl
jl
movsb
xor
xchg
int3
stos
add
mov
or
push
test
mov
mov
push
inc
adc
test
pop
and
das
jmp
lret
dec
outsl
add
shll
es
lds
sbb
mov
mov
adc
jecxz
add
jnp
dec
push
ds
in
dec
mov
jns
leave
sti
aad
lock
rorl
pop
iret
adc
and
jb
jne
imul
jno
jmp
sub
movsl
mov
inc
or
out
jb
imul
fistl
repz
inc
xchg
jp
test
xchg
add
cmc
cltd
xor
sub
test
mov
js
cmp
xchg
sub
addb
insl
insl
pop
jns
mov
outsb
gs
mov
pusha
xchg
sub
das
aas
adc
push
xchg
ljmp
mov
xchg
cmpsb
cli
pop
mov
scas
cmp
aas
inc
enter
mov
shll
icebp
add
ds
lret
sbb
in
movsb
inc
sub
ljmp
fwait
jnp
or
fcmovnbe
test
das
repnz
sub
repnz
mov
bound
popa
jecxz
cmp
cmp
sbb
add
outsl
add
and
cmp
out
xchg
out
pop
dec
cli
xchg
notb
in
xchg
mov
and
dec
orb
lcall
adc
inc
inc
push
rcll
push
int
mov
mov
dec
fidivrl
lea
inc
or
mov
xchg
jb
sub
pop
stos
ja
jge
jg
repnz
andl
inc
ja
or
test
jmp
sbb
push
dec
dec
pop
cli
testl
lea
mov
dec
dec
push
fadd
int3
jbe
mov
loopne
xlat
lcall
fcmovnu
pop
jl
sub
or
cs
sahf
aad
into
sbb
mov
out
inc
daa
push
call
sbb
fldenv
lock
dec
mov
add
sahf
xchg
sbb
xor
int3
lcall
mov
lret
cld
loopne
push
mov
push
scas
repnz
mov
shrl
push
pop
mov
push
rol
inc
test
xor
rolb
xchg
pusha
jne
mov
test
mov
call
push
aaa
mov
call
scas
cmp
xor
cmp
out
rcll
mov
xchg
xchg
xchg
add
bound
daa
push
inc
int
mov
pop
flds
stc
mov
sbb
jo
push
mov
gs
lcall
adc
jns
dec
cld
dec
fiaddl
mov
cld
pop
dec
pop
out
and
ret
dec
cmp
shrl
and
ret
enter
test
lock
int3
add
ja
pop
mov
aam
fdivrp
mov
loop
and
fsubrp
movsl
call
jno
dec
mov
out
ds
insl
jmp
or
and
jns
sbb
cltd
jmp
jae
ret
mov
fstp
int3
mov
or
jo
shrl
sub
rol
and
jg
dec
mov
cli
fdivs
adc
mov
lcall
aam
dec
icebp
sub
jae
cmpsb
lods
pop
fildl
push
ljmp
shl
pop
pop
push
into
mov
inc
adc
aam
cltd
inc
mov
jns
das
dec
mov
push
movsl
add
test
sar
jmp
sub
jg
or
or
push
outsb
into
add
add
cmpsl
subb
sahf
fnstenv
sub
mov
adc
mov
pop
sarb
das
lea
in
mov
or
cmp
lea
jge
lahf
mov
adc
mov
sti
and
or
add
les
jge
or
mov
mov
sub
pop
cmpsb
test
mov
mov
xor
ret
cmp
cmpsl
sahf
mov
fiaddl
push
mov
mov
adc
xchg
mov
add
push
and
pusha
sbb
pushf
add
pop
cli
push
mov
sti
jo
mov
je
adc
add
mov
mov
pop
in
inc
pop
ja
test
pop
test
loopne
dec
push
sub
push
fidivrl
mov
cmp
out
jns
mulb
mov
add
rorl
push
dec
scas
jl
mov
adc
aad
clc
bswap
dec
clc
cli
push
pop
ja
inc
push
loopne
sub
lock
jp
fbld
adc
lods
data16
insl
nop
xor
push
xchg
sbb
lcall
mov
or
jo
mov
pop
stos
insb
jp
push
ds
popa
dec
ljmp
dec
test
sahf
push
add
lods
pushf
leave
lret
inc
add
mov
cld
sbb
adc
nop
imul
fwait
xchg
frstor
adc
xor
xchg
in
dec
xor
in
lods
lods
fld
jle
push
push
mov
aaa
out
push
pop
jcxz
xorb
andb
cwtl
pop
mov
fldt
jp
insl
dec
sbb
test
iret
movsl
rcl
mov
lds
jmp
ficoms
shll
stos
movsl
jne
cli
xor
mov
xchg
push
subb
mov
iret
xchg
or
or
sbbl
cld
jle
ss
pop
dec
cmc
pop
ja
xchg
xor
and
fcmovnbe
mov
scas
jecxz
jns
jb
mov
mov
scas
leave
es
xchg
jbe
fwait
xor
cmp
movsl
int3
and
lods
dec
mov
pop
cmp
sub
lret
push
aaa
mov
mov
clc
mov
loopne
jp
mov
lods
inc
cs
data16
insl
out
addb
inc
xor
lret
xor
int3
out
repz
mov
pusha
je
movsb
fisubl
ret
adc
xlat
ret
sti
imul
push
mov
mov
add
dec
pop
in
sbb
ljmp
jns
jmp
push
adc
xchg
jo
clc
mov
stos
sbb
dec
lds
clc
xchg
ljmp
xor
imul
adc
movsl
js
jecxz
sahf
fiaddl
loopne
scas
shrb
nop
push
push
and
mov
cmp
cmp
fnstsw
cmp
lret
into
mov
imul
and
push
xchg
sbb
shlb
or
mov
aam
roll
add
fwait
or
lods
fsubl
cmp
inc
mov
mov
test
sub
stos
cmp
je
pop
enter
mov
cmp
out
aas
pop
movsb
and
sub
push
sub
mov
jmp
mov
in
dec
inc
or
xchg
pop
xchg
inc
lret
insb
mov
xchg
jnp
cmc
cmp
jg
push
jl
leave
dec
adc
sub
push
ror
andl
mov
lahf
add
sub
or
sub
xchg
cli
ret
inc
ja
enter
test
rorb
enter
int3
pop
jnp
insb
jns
cmpsl
in
movsl
lahf
add
lods
aas
jmp
push
xlat
sbbl
cmc
mov
pop
add
xchg
test
leave
pusha
cmp
dec
and
outsb
mov
test
sbb
dec
incb
loop
mov
cmpsl
xor
iret
push
clc
fmuls
sbb
cmp
orl
jae
xor
fnstcw
xor
sbb
fnstsw
ja
mov
enter
push
push
inc
pushf
dec
pop
cmp
or
push
sbb
jp
imul
fisttpll
sub
bound
and
faddl
sub
or
mov
sub
push
mov
stc
movsl
push
jne
lcall
sarb
cli
push
pushf
ret
adc
rclb
in
or
push
xchg
rcrl
mov
inc
xor
cmpb
pop
mov
sbb
sti
mov
sbb
les
mov
push
addr16
icebp
pop
lret
xchg
pop
mov
jo
nop
adc
mov
or
xchg
adc
push
jecxz
test
or
push
xor
test
push
das
push
fwait
in
xor
jp
or
inc
pop
inc
dec
jmp
adcl
lahf
insl
outsb
add
sti
jecxz
sbb
loope
jmp
insl
js
movsb
dec
mov
mull
or
shrl
pop
xor
mov
jb
xor
sub
loope
cmpsl
fnsave
jnp
jl
aas
adc
xchg
lret
dec
push
and
int3
mov
sbbb
xchg
xchg
lods
adc
ss
sbb
fs
test
bound
rcrb
cmp
imul
in
cs
fsts
das
int3
pop
addl
or
pop
xchg
movsb
mov
inc
push
adcl
mov
sbb
and
lea
jl
or
iret
dec
imul
popf
adc
inc
sub
test
stc
enter
add
scas
inc
dec
inc
dec
mov
sahf
jg
hlt
jmp
push
insb
je
and
mov
std
aad
mov
xchg
cmp
fimuls
mov
ret
lods
hlt
or
add
repz
in
sbb
mov
sti
push
jno
or
and
shrb
xor
jge
and
dec
data16
or
push
rorb
and
push
lahf
sbb
cmc
mov
out
mov
add
push
popf
fdivl
xchg
add
in
loopne
mov
xor
lods
cmp
int3
inc
into
add
pop
adc
movsb
add
int3
dec
gs
cmc
rorb
aam
fistpl
fs
int
fldt
or
pop
mov
subl
insb
in
cmp
mov
les
push
adc
xchg
push
mov
test
dec
sub
pop
or
sbb
jbe
popf
mov
divb
adc
outsb
jmp
cli
popl
leave
cmp
fistps
xchg
jns
or
push
mov
out
mov
int3
add
outsb
or
inc
lods
sub
push
adc
mov
mov
test
out
popf
jg
sbb
mov
out
ret
sub
push
jmp
pop
pusha
sub
sub
cs
jmp
das
shlb
add
xchg
je
jno
mov
push
cltd
aad
clc
movsl
or
xchg
std
sbb
stos
es
lcall
ds
mov
lea
pop
sub
out
out
mov
xchg
xchg
movsl
inc
add
jmp
sub
pusha
fwait
out
divl
cmp
fcmovne
addl
add
and
lcall
rcll
jl
push
adc
icebp
lcall
push
in
js
and
ss
jae
pop
imul
stc
repz
and
cld
arpl
xor
loop
cmp
xchg
xchg
jg
mov
xor
fwait
jo
test
inc
scas
xor
mov
lea
and
cli
enter
popa
pop
hlt
add
jo
pop
in
out
mov
and
jb
outsb
in
andb
sbb
jmp
jl
xlat
test
and
jmp
jg
ret
and
rorb
cmp
sti
je
fcoml
cld
jmp
daa
push
adc
xor
outsl
jb
xchg
fmuls
mov
push
push
jnp
fmuls
jns
lahf
xor
xchg
jl
xchg
dec
movsl
sbb
movsb
mov
dec
pop
pushf
inc
dec
sarl
jmp
cmp
jge
add
int3
mov
insb
inc
and
jns
inc
testb
imul
mov
mov
adcb
pop
out
sbbl
xchg
mov
fdivrl
jno
popa
xchg
xor
mov
scas
enter
fprem1
add
insl
aad
pop
xlat
inc
cli
xchg
dec
mov
andl
sbb
add
sbb
mov
sub
adc
cmpsl
mov
dec
inc
fs
sbb
adc
cmp
imul
sub
mov
lcall
pop
and
sub
xor
in
pop
int3
cmp
ret
add
sar
adc
push
dec
stos
inc
filds
xor
mov
data16
dec
out
pop
pop
cmc
sbb
pushf
leave
cwtl
xchg
and
adc
pop
or
gs
pop
mov
ds
and
cld
jnp
dec
xor
and
lcall
lock
jnp
aam
xor
cmpsl
add
sub
pop
into
cmpsl
or
xchg
andl
xor
xor
andl
jns
xor
fadd
add
mov
jbe
jge
dec
xchg
sub
xchg
insb
add
andb
add
mov
leave
dec
xchg
xchg
adc
push
pop
mov
mov
push
xor
sub
dec
jo
sbb
aas
adc
movsb
xchg
mov
or
push
cmp
imul
xor
sarb
or
add
call
mov
pop
jg
int
iret
addr16
data16
mov
push
pop
and
popf
insb
movsl
or
jp
testb
scas
into
arpl
pop
lods
sub
cwtl
inc
inc
orl
sub
mov
in
xchg
xor
mov
sub
sub
and
cmp
jne
sub
dec
jg
cmp
pushf
repz
outsb
and
fcmovnu
jnp
lea
mov
mov
les
and
aam
std
fcomps
mov
mov
shlb
xor
dec
cmp
xor
int
dec
jmp
ss
fstpl
mov
xor
bound
jp
bound
jl
cmp
jge
gs
fiadds
and
xor
call
fisttps
cmpsl
inc
xor
dec
movsl
push
test
xchg
pusha
dec
jg
ss
int3
imul
test
nop
xchg
and
aad
repz
push
xchg
jl
mov
pushf
lods
test
imul
ljmp
pop
fimull
and
or
cwtl
das
cmp
out
pop
xor
xchg
jge
out
pop
jge
or
sbb
pop
inc
in
jns
movsb
call
jo
sti
loope
leave
inc
xchg
jecxz
adc
push
leave
in
push
movsl
out
mov
jle
jb
std
mov
jg
pop
or
jbe
mov
dec
adc
and
push
push
jnp
loopne
adc
push
and
arpl
mov
pop
test
stc
and
pop
mov
pop
jne
sbb
aad
adc
ljmp
sbb
add
dec
cmp
cmp
stos
mov
lds
lods
sub
out
add
and
mov
jno
shlb
adc
test
leave
dec
sahf
mov
xor
adcl
inc
xor
andb
in
and
ret
cs
jnp
es
insl
and
mov
jmp
pop
fs
pop
les
ss
mov
mov
xchg
mov
shl
mov
mov
push
testl
cmpxchg
xchg
ret
mov
lahf
and
cld
xlat
and
inc
cmc
out
sub
add
xchg
movsb
in
inc
sub
mov
jg
dec
cmp
dec
gs
sbb
cli
inc
sbbl
incl
imul
aas
sub
fisttpll
xlat
cmp
dec
popf
es
mov
test
pop
add
inc
lods
stos
lds
sub
push
add
mov
mov
popf
repz
jns
jmp
adc
cmpl
adc
and
jno
mov
fsubr
and
sub
inc
loop
cltd
stc
sti
lahf
mov
mov
inc
inc
shl
shld
ret
xchg
daa
outsl
adc
imul
add
add
stos
or
and
adc
out
pop
loopne
mov
lea
aad
ficoms
repz
pop
jns
push
scas
sar
ret
mov
add
push
sub
xor
dec
and
and
xchg
inc
dec
iret
mov
ret
cld
fstps
daa
pushw
inc
pop
enter
arpl
decb
jle
test
xlat
jp
sbb
jecxz
push
bound
xchg
repnz
add
mov
sbb
cltd
jle
lret
cmp
mov
mov
outsl
mov
mov
fwait
rclb
sbb
popf
cld
cmp
in
jns
mov
add
sub
push
cmp
stos
add
mov
gs
fidivrs
fidivrs
add
pop
loope
sbb
gs
shr
xchg
sbb
fisubrl
pop
bound
sub
or
xchg
in
jge
cmp
fists
sub
dec
pop
movl
stos
out
pop
jmp
sbb
out
bound
lret
fdivr
addr16
mov
mov
cltd
addr16
ror
pop
mov
adc
xor
push
fsubrl
pop
test
scas
cwtl
fcmovbe
imul
cld
shrl
cmpsl
sub
cmc
fsubl
fimull
lahf
xor
xchg
je
jmp
cwtl
insl
sbb
sub
push
cmpsb
jns
pop
jnp
xchg
inc
lea
cmpsl
and
or
repz
orb
jle
push
add
mov
das
add
or
divl
lret
int
and
cmp
arpl
xchg
inc
pop
adc
inc
mov
jle
insb
leave
sub
mov
hlt
dec
add
mov
lods
mov
jbe,pn
pop
xor
lea
mov
vmwrite
mov
sbb
scas
gs
stos
scas
js
loopne
fmuls
jb
jecxz
hlt
lds
andb
jmp
or
add
cwtl
sub
jmp
leave
movsb
fwait
movsl
fnstsw
push
daa
and
cmpsl
adcb
or
aas
shlb
pop
dec
scas
aam
xchg
push
dec
fiaddl
inc
sub
lods
gs
adc
mov
xchg
nop
xor
sbb
jb
inc
add
pop
sub
or
movsl
mov
xchg
cmp
les
loop
lcall
leave
xor
iret
lods
out
pop
inc
jo,pt
push
mov
out
adc
lahf
pop
mov
add
test
addr16
and
xchg
push
inc
lods
jno
mov
movsb
adc
mov
nop
aaa
shl
dec
add
pop
xor
in
ljmp
fistps
cmpsb
fbstp
imul
ret
mov
jns
jnp
and
imul
jmp
xchg
adc
mov
and
cwtl
pushl
and
mov
jno
add
cli
sti
mov
push
mov
pushf
stc
shll
xor
in
pop
push
xchg
popf
mov
pop
push
data16
sub
inc
xchg
jl
out
insb
cmp
sbb
and
cmp
cmpsb
pop
inc
jmp
pop
xor
mov
dec
es
ja
xchg
cmp
clc
or
mov
cmp
es
jg
imul
add
mov
imul
imul
inc
or
mov
inc
in
ret
push
xchg
insb
lods
int3
aas
add
adc
cmpsl
out
int3
clc
adc
addl
loope
test
mov
jb
sub
fldt
jge
mov
enter
imul
push
dec
xlat
xlat
fiaddl
into
xlat
popl
add
xor
ss
and
data16
sub
dec
mov
mov
int3
hlt
movsl
jae
jne
scas
imul
lret
clc
sbb
hlt
xchg
xlat
test
pop
cmp
fcomps
or
dec
jmp
movsb
shll
sub
mov
idivl
fiaddl
inc
pop
divl
cltd
fistps
mov
cmp
pop
int
jb
jle
sbb
sbb
add
rcrb
and
push
in
lea
adc
pop
mov
mov
enter
sbb
mov
cmp
scas
sti
pmulhuw
mov
and
sarl
push
add
mov
enter
fs
push
test
adc
xor
call
popf
outsl
mov
inc
pop
popa
pop
jge
jb
stos
xor
repnz
test
sbb
xor
insl
popf
dec
pop
cltd
test
gs
xchg
mov
dec
push
cld
rol
leave
xor
call
cmp
xlat
xchg
push
push
cltd
push
push
sub
ret
test
xor
insb
cld
jb
mov
xor
cmp
sub
fucomp
stos
mov
jl
jge
subb
mov
xchg
int3
adc
fistl
test
aas
or
notl
sbb
dec
and
jns
sbb
jo
popa
push
or
push
bswap
cli
arpl
add
cmpsb
dec
into
rolb
sub
add
movsl
sbb
jb
and
jmp
mov
mov
stos
sbb
mov
and
out
shr
pop
adc
in
shl
cmp
xor
test
cmpb
aaa
mov
movsb
imul
jbe
mov
cmp
mov
mov
inc
jmp
cmc
xor
stos
xchg
out
jbe
rorb
jbe
cli
test
xor
jae
lock
popa
out
dec
addb
jmp
cli
iret
cmpsl
les
cmpb
fstpt
ret
lret
ja
clc
lods
and
add
sbb
dec
mov
popa
add
scas
int3
jnp
hlt
insb
sbb
popa
xlat
pop
pop
aaa
push
push
pop
dec
stos
ret
mov
mov
sub
stos
mov
adc
lds
pop
lods
pop
cmp
cmovge
lahf
mov
popa
pop
jmp
jo
out
sti
sti
mov
push
pop
mov
mov
ficompl
into
std
clc
aas
jle
and
out
mov
addr16
or
insb
pop
icebp
push
push
mov
lahf
decb
pop
arpl
pop
fwait
dec
jmp
jo
mov
xchg
adc
sbb
inc
xchg
fldcw
or
pop
loopne
adc
or
mov
jb
add
push
js
outsb
dec
pushf
cmp
lock
adc
and
imul
outsb
loop
scas
les
insl
add
dec
ss
lret
iret
dec
dec
pop
insb
push
cltd
push
dec
add
xlat
mov
fdiv
loop
and
lods
fdivl
push
rcrb
int3
push
imul
hlt
pusha
xchg
push
testl
adc
mov
testb
xor
sarl
cmp
pop
jecxz
dec
push
movl
lds
xchg
adc
in
adc
pop
mov
inc
sub
push
clc
pop
outsb
add
sbb
addr16
inc
stc
jmp
loope
lret
pop
jp
or
mov
pop
push
dec
jmp
out
fistl
lcall
test
pushf
or
pop
test
insl
jmp
loop
sub
stos
pop
jo
mov
inc
sub
cwtl
mov
inc
jle
scas
add
jbe
sub
fnstsw
test
mov
movsb
mov
fmuls
addr16
and
jns
xchg
cmp
and
adc
cmp
and
add
pop
out
ds
add
sbb
int3
inc
xchg
cltd
decb
adc
sarb
mov
add
pop
shll
fcmovb
push
lahf
push
hlt
push
je
xlat
add
aas
fstp
shlb
nop
mov
mov
jns
les
mov
pop
cmpsb
negl
sub
mov
int3
out
mov
adc
jge
scas
or
ret
daa
push
pop
std
ja
fisttps
pop
shll
rcr
bound
repnz
inc
nop
dec
mov
push
ret
lods
stos
xchg
nop
adc
jo
cmp
dec
mov
lods
aas
sahf
cmpsb
outsb
mov
push
mov
lds
aas
pop
nop
or
xor
cmpl
stc
inc
jmp
lcall
loop
cmc
mov
gs
sbb
das
adc
mov
pop
push
icebp
leave
xor
dec
jo
jo
or
xor
cmp
lret
test
movsl
movsb
sbb
inc
pop
sub
andps
jg
jg
jge
pop
push
push
pusha
cmp
push
add
pop
loopne
adc
shlb
ja
clc
movsl
leave
popl
push
jae
pop
enter
in
outsb
add
adc
inc
pop
and
inc
std
test
cmp
push
mov
aas
js
jmp
sbb
in
xchg
and
xor
push
addr16
jb
cmc
mov
cld
sub
mov
or
dec
clc
xlat
mov
inc
or
push
test
and
sub
inc
fdivs
lock
or
gs
das
frstor
hlt
xor
dec
push
movsb
jl
sub
inc
mov
push
sti
pop
movsl
sub
ret
mov
jle
fdivs
inc
pop
arpl
mov
adc
xchg
sarb
dec
inc
shrb
stos
or
lahf
fisubl
sarl
fadds
sahf
pop
mov
mov
in
push
add
out
mov
push
adc
pusha
hlt
or
in
push
or
xchg
jns
mov
sub
sub
push
icebp
movsb
adc
jns
cmp
mov
mov
xchg
push
mov
pushf
mov
sbbl
jmp
rorb
inc
loopne
aas
lcall
addr16
loope
daa
mov
xor
xchg
cmpsl
push
pop
pushf
in
xchg
hlt
repz
adc
lea
adc
xchg
mov
fistpll
test
hlt
and
push
sbb
and
adcl
mov
xor
mov
cltd
pop
xchg
jle
mov
ds
inc
shr
mov
mov
mov
cmpsl
xlat
movsb
int
aad
xchg
hlt
mov
jno
cmp
cmp
mov
iret
ret
in
xor
int3
cmp
pop
aam
fs
out
push
xor
mov
mov
iret
mov
movsb
mov
jnp
popf
mov
dec
fidivrl
pop
adc
dec
addb
cs
jns
push
ret
js
rcrb
or
rcll
jp
jnp
xor
cs
or
and
push
or
lods
subl
ds
fnsave
outsl
dec
scas
xchg
xchg
and
roll
mov
call
fs
adc
push
in
and
pop
stos
push
xor
xor
shlb
mov
je
fcompl
lds
and
es
test
pop
mov
add
sub
push
je
repz
xchg
cmpsl
in
mov
dec
test
fcomi
ss
cmp
lret
or
mov
and
lret
xor
sub
imul
mov
sarb
daa
sbb
cwtl
add
cmp
mov
subb
adc
fisubrs
imul
or
std
mov
sbb
push
bound
inc
xor
loope
adc
aaa
jno
xor
lret
loope
mov
dec
sub
dec
cmpb
in
push
aaa
sbb
cli
mull
mov
aad
dec
or
cmp
ret
cli
testl
add
push
mov
cwtl
xchg
mov
pop
imul
add
lods
sti
lods
mov
xor
inc
flds
or
aam
dec
pushf
cli
test
and
loop
test
stc
sub
fistps
mov
aaa
out
or
cmpb
pushf
out
aad
push
int
ja
es
loope
and
push
ret
std
fsubrs
sbb
leave
pop
ljmp
adc
mov
outsb
test
aam
pop
loopne
insb
loop
sub
xor
into
imul
pop
inc
cmp
test
mov
mov
fwait
pusha
jns
aam
and
push
adcl
pop
lods
shlb
arpl
jae
rorb
mov
inc
pop
clc
int
sti
sbb
fwait
sbb
popf
les
test
jecxz
shlb
mov
jo
xchg
fisubs
inc
aaa
mov
jp
inc
fwait
leave
test
push
inc
repnz
or
mov
pop
fsubl
and
out
ror
mov
jp
sub
mov
mov
daa
and
xchg
ret
fiadds
push
cmp
insb
insl
popf
jle
mov
dec
mov
and
and
movlps
sub
lcall
dec
ss
xor
xor
jne
sub
push
outsl
sbb
icebp
testl
xorl
push
int3
xchg
js
mov
jo
nop
jmp
frstor
sub
jnp
xchg
sub
xor
adc
adc
lea
mov
test
inc
mov
inc
ja
imul
or
add
jp
lahf
dec
in
and
xchg
xchg
or
xorb
ficoms
test
out
stos
ret
mov
push
fstpt
mov
mov
movsl
push
fs
std
inc
je
mov
sbb
mov
lret
sbb
adc
xor
cmp
xchg
pop
push
jmp
in
pop
mov
mov
in
aas
push
mov
mov
adc
mov
neg
dec
mov
and
and
mov
nop
scas
jae
xchg
mov
xchg
xchg
or
push
insb
imul
popf
pusha
xor
push
add
cmp
jno
movzbl
push
jge
mov
push
cmp
fsubl
ljmp
xor
fistps
in
inc
dec
jb
movsl
dec
fwait
and
adc
cmp
jle
fs
stos
jl
clc
sarl
push
cmp
loop
adc
dec
or
pop
shl
mov
es
mov
ja
inc
jl
es
add
dec
add
xchg
data16
outsl
repnz
mov
mov
mov
push
jmp
std
adc
and
push
add
int3
repnz
mov
mov
dec
addb
stos
or
push
or
mov
cmpxchg
inc
lods
cmp
loop
mov
cld
cmp
in
mov
je
outsl
fdivs
les
into
std
jle
je
push
aas
ljmp
add
lds
and
dec
ret
lods
xor
pop
pop
imul
xor
outsb
aad
sub
imul
les
push
bound
ds
xor
xchg
mov
cmp
and
push
outsl
loop
cmp
ja
jb
mov
repz
ja
mov
push
xchg
into
adc
mov
andb
and
cmp
xchg
pop
mov
lret
push
je
sti
sub
and
push
jg
mov
ja
mov
jno
inc
ss
cmpsl
enter
stos
dec
dec
mov
cmp
jb
imulb
push
fiaddl
call
lds
mov
pop
dec
mov
add
iret
test
test
and
in
cmp
test
jae
scas
adc
loop
mov
rclb
cmp
push
pop
push
in
pop
aad
ss
jo
xchg
and
in
inc
mov
mov
add
cmp
mov
call
push
or
arpl
in
jle
iret
add
xchg
mov
xor
ror
or
sub
push
or
rcrl
sti
xor
dec
dec
pop
aaa
loope
cltd
or
in
xor
adc
insb
int
out
xor
das
mov
jb
in
add
ds
sbb
add
shlb
pop
std
js
or
add
sbb
sub
dec
inc
in
test
xor
das
mov
fsub
dec
repnz
pushf
test
mov
push
enter
cmc
push
push
add
push
cmp
invd
xchg
pushw
cld
pop
test
add
dec
or
hlt
sbb
xor
sbb
pop
mov
adc
hlt
mov
shlb
int3
mov
and
dec
fsubl
andb
int3
lret
iret
outsl
insb
add
out
mov
call
push
iret
sbb
fs
int3
or
add
xchg
adc
adc
in
cltd
sti
sub
lds
imul
pop
lcall
push
mov
lret
mov
or
mov
and
pop
dec
imull
dec
pop
outsb
fimull
push
xor
pop
pop
fsubl
call
and
movsb
in
push
ret
adc
pop
addr16
mov
add
dec
ja
push
aas
jg
pop
rcr
and
insb
xor
sahf
movsb
jmp
add
out
mov
out
adc
add
pop
adc
jae
push
and
pop
shl
mov
dec
adc
adc
lock
push
cld
into
add
jmp
jg
or
cltd
not
jnp
rclb
iret
sub
and
iret
jno
das
je
addl
leave
bound
rcll
call
add
jecxz
arpl
mov
pop
shll
inc
mov
sub
es
clc
xor
cmp
push
sub
sbb
pop
sub
ret
mov
jo
je
xchg
lahf
mov
icebp
push
sbb
mov
pop
cmp
sub
jg
lods
sahf
cltd
mov
mov
mov
rorl
sbb
mov
pop
imul
and
popl
pop
sbb
nop
pop
push
sub
xorl
rclb
into
jo
test
or
jg
in
dec
fisttpll
jnp
rclb
mov
loop
xor
insl
xchg
jo
xorb
cmp
outsb
adc
dec
in
inc
mov
lods
fildl
sub
and
ficompl
mov
mov
roll
in
dec
xchg
fistpl
push
sub
test
adc
and
pop
xchg
jmp
jmp
shl
xchg
jb
stc
mov
fnstenv
test
insb
fmulp
dec
sbb
scas
rclb
mov
xor
int3
add
lds
adc
out
jl
cmpsl
push
pushf
adc
inc
iret
rolb
in
jb
pop
inc
xchg
rcrb
dec
cli
fistps
mov
outsb
mov
fildll
sbb
dec
cmpsb
dec
mov
jl
nop
mov
pop
pop
movsb
push
pop
lods
fdivrs
aad
imul
lret
inc
movsb
call
pushf
xor
jb,pt
cwtl
push
sahf
repnz
mov
sub
push
lahf
or
jp
add
sti
mov
jno
xchg
cmp
sub
outsl
lahf
push
aad
sub
jmp
das
test
leave
lcall
sbb
or
jg
insb
add
paddd
mov
pop
int
adc
mov
mov
fadd
pop
or
fwait
mov
es
mov
sbb
and
mov
xchg
mov
jecxz
arpl
jmp
inc
es
jne
pop
jo
mov
push
xchg
sub
or
xchg
pop
adc
fwait
sbb
and
fs
repz
ljmp
shrl
push
lret
in
int
mov
pop
xchg
int
test
pop
add
out
cwtl
rolb
int
sbb
ja
or
add
lods
pop
data16
sub
sub
je
sbb
xchg
mov
out
daa
cmp
mov
mov
mov
in
inc
pslld
jl
jle
addr16
pop
pop
loope
push
lds
pop
outsb
jge
cmpsl
sahf
mov
out
lock
mov
push
sbb
sbb
sub
nop
or
loopne
mov
mov
fdivrl
mov
outsl
leave
test
fdiv
jge
and
sub
shll
inc
idivl
jl
lret
adc
xchg
xor
sub
and
rcll
ljmp
mov
lret
arpl
xchg
mov
xchg
shll
ds
test
push
test
lock
sbb
mov
adc
dec
dec
xchg
push
jmp
addb
adc
or
pop
jp
dec
inc
xor
neg
sti
es
addr16
movl
mov
mov
lret
add
adc
lcall
lock
das
flds
mov
ret
xchg
mov
push
cmpl
lods
cltd
orl
xor
xchg
in
sub
cmpsl
xor
xor
mov
cmp
call
or
xlat
scas
fidivl
int
pop
xchg
push
adc
adc
push
loopne
sbb
dec
movsl
out
dec
das
hlt
sarb
data16
sahf
out
daa
leave
xlat
or
loope
lods
dec
push
jl
mov
cmpsb
call
fcoml
xor
bound
inc
fs
dec
scas
stos
mov
sub
mov
cmp
out
insb
test
sub
mov
fcompl
insl
stc
rorb
and
iret
clc
lcall
and
fisttps
imul
sti
loopne
mov
inc
lret
mov
xchg
mov
mov
adc
cltd
inc
inc
dec
sbb
rcr
shll
cli
mov
insb
fnsave
ret
test
lds
cmp
xchg
mov
xchg
mov
jge
jo
out
out
cmpsb
add
pop
cmp
jl
mov
push
pop
cmp
mov
adc
mov
data16
aam
notl
test
or
mov
popf
and
jns
xor
mov
xor
sub
and
filds
jbe
js
adc
shlb
leave
push
subl
insl
inc
push
push
pushf
mov
mov
sbb
cmpsl
dec
jb
adc
add
cld
mov
push
jnp
pop
push
cmp
sub
jl
mov
inc
data16
push
jno
sbb
jmp
inc
cmp
lcall
and
cmp
xorb
fdivs
cltd
adc
popf
arpl
xor
cmpb
pop
xchg
cmp
fsubr
fcmovnu
js
hlt
mov
push
and
dec
cmpsb
sahf
dec
cli
insl
aam
fcomps
icebp
fidivs
das
incl
fdivs
xchg
rorl
ficomps
cmpsb
mov
insb
fldcw
out
in
les
jg
cs
xchg
mov
inc
mov
imulb
dec
jae
sub
push
stos
in
repnz
stos
imul
cs
push
stos
test
loope
aad
ret
shlb
sub
mov
dec
push
mov
or
insb
test
xchg
test
loop
mov
push
and
ds
mov
mov
xchg
jne
lahf
xor
incl
and
sahf
mov
clc
enter
mov
orl
imul
and
sti
movsb
jnp
mov
cmpsb
into
pop
fldcw
mov
mov
inc
and
add
pop
mov
sbb
jg
mov
xor
scas
dec
movsl
negb
pop
in
xor
fs
inc
mov
testl
pop
mov
pop
or
lea
xchg
pop
dec
int3
out
clc
movsb
out
mov
jae
pusha
mov
push
mov
clc
bound
jb
xlat
xchg
jne
cmp
and
xor
in
jo
push
repz
jnp
out
gs
inc
les
pop
fs
cwtl
push
jge
push
cs
stos
lods
in
je
insl
pop
mov
sub
mov
or
inc
nop
xor
dec
xor
mov
adc
test
mov
mov
dec
popf
in
iret
inc
data16
push
dec
nop
push
push
popa
fcom
cmp
mov
inc
repnz
int3
dec
sbb
ljmp
inc
push
mov
add
and
jecxz
scas
and
lcall
push
xchg
xchg
inc
add
in
jge
mov
push
mov
pop
in
orl
dec
lcall
xchg
dec
imul
fcmovu
or
sbb
xchg
xchg
mov
mov
div
mov
lea
push
xor
out
in
pusha
jecxz
ret
or
sub
sahf
fists
add
mov
stos
pop
rcrb
fs
lret
js
fs
sbb
xchg
or
sti
mov
leave
into
push
lds
lret
jbe
ret
shlb
stos
cmp
pop
jg
mov
jp
testl
xor
roll
mov
int3
mov
test
ss
mov
or
pop
xor
imul
out
repnz
lock
cs
cmp
pushf
push
test
fisttpll
scas
lahf
xchg
cmp
sub
adc
adc
jge
add
jmp
into
pushf
pop
or
and
sub
and
cmp
dec
and
mov
and
jne
xchg
sbb
aas
ljmp
jo
mov
cmpsb
xor
imul
mov
not
cmp
mov
push
pop
insb
sub
outsb
mov
xor
fisttps
outsb
pusha
pop
dec
iret
std
shrb
mov
mov
mov
sbb
loope
aas
sahf
xchg
xchg
fwait
push
lahf
sahf
fcmovbe
cmp
in
xor
lcall
inc
xor
mov
out
aad
ljmp
das
sub
sub
in
test
iret
jae
push
push
mov
cltd
adc
lret
adc
push
repz
scas
push
or
scas
xlat
mov
stos
mov
ja
clc
loope
mov
jg
int
imull
fcompl
bound
inc
pop
push
jl
maxps
pop
jl
mov
dec
sbb
fs
xor
out
loope
imul
push
adc
push
mov
sti
das
divl
mov
mov
push
add
int3
mov
jp
repz
add
test
bound
push
cmp
xchg
jmp
cmp
ss
movntps
aaa
and
sbbl
lahf
bound
aad
inc
adc
and
add
xor
jmp
out
std
stc
xor
ljmp
mov
icebp
and
iret
jo
jbe
sbb
cltd
mov
inc
test
mov
jg
jns
jle
push
and
xlat
enter
ss
loope
loope
call
loop
loopne
gs
psubq
xchg
es
dec
fwait
ljmp
push
je
dec
std
cmp
ret
lcall
lcall
adc
rorb
or
mov
gs
push
neg
js
addr16
out
lea
push
cld
and
or
push
and
xchg
or
mov
inc
outsl
adc
mov
add
icebp
mov
adc
cltd
adcb
inc
mov
lods
add
cltd
mov
or
add
sub
sub
insl
test
in
xchg
mov
insl
imul
and
fucomp
scas
out
xor
sub
dec
lcall
cmp
in
adc
gs
idivb
or
shll
or
insb
add
popf
test
cmp
sbb
dec
add
xchg
notb
fidivs
pop
and
dec
imull
push
cmpsl
sbb
daa
xor
xor
mov
mov
cmpsb
ss
aad
roll
pop
sub
je
scas
and
cmpsl
mov
cmp
mov
jp
mov
dec
imul
push
test
iret
into
in
js
xchg
in
add
shlb
ljmp
jae
push
and
and
cmp
xchg
fsubrl
mov
out
xchg
stc
cmp
and
in
push
dec
test
pop
iret
imul
mov
add
xchg
pop
add
cmc
push
jecxz
pop
mov
int3
int3
mov
addb
cmc
inc
jbe
and
mov
and
fsts
lods
fsubl
das
mov
out
jmp
inc
mov
xchg
pop
xchg
ss
mov
pushf
int
lcall
mov
push
inc
pop
test
test
int
ret
jae
daa
stos
sbb
or
lods
pop
sbb
jle
ret
jle
jge
adc
ja
int3
push
xor
out
pop
push
nop
lret
je
decb
pop
iret
xchg
xor
daa
mov
dec
fcmovu
fdivrs
insb
jge
mov
out
xchg
mov
loop
rclb
adc
shl
jle
pop
pop
jae
fnstenv
xchg
mov
push
in
lret
popa
mov
pop
mov
and
test
stos
cs
call
inc
mov
xchg
movsb
adc
dec
dec
outsl
and
pushf
add
loop
pop
leave
or
inc
push
mov
repnz
mov
lock
imul
jbe
xchg
sbb
pop
inc
inc
push
hlt
iret
inc
jnp,pt
cwtl
in
stos
and
cmp
add
jle
xorl
pop
push
insl
inc
lock
lret
sub
mov
lret
ret
out
add
cmp
mov
ret
repz
fsubrl
pop
scas
gs
jmp
xchg
call
add
jno
mov
fidivrs
das
mov
adc
das
and
popf
mov
cmp
rorb
rcrb
dec
push
cwtl
sbb
add
dec
nop
mov
adc
jnp
xor
push
adc
push
lcall
ret
repnz
adc
pop
in
fcomi
int3
adc
test
out
push
cmp
fwait
iret
pop
or
xchg
imul
ret
xor
and
pop
push
enter
cwtl
int
cmp
pop
mov
lret
xchg
ss
xlat
dec
icebp
cmc
and
js
and
lcall
fsubs
push
mov
sub
nop
pushf
mov
mov
mov
enter
icebp
pop
and
sbb
jge
pusha
lds
inc
and
in
mov
push
nop
call
or
add
add
add
sub
pop
js
or
mov
and
adc
mov
call
inc
hlt
add
and
cmp
and
mov
rol
enter
push
sarb
in
xor
jno
movsb
mov
add
pop
sbb
xchg
aas
sub
inc
xor
dec
fwait
int
ret
push
outsb
pop
out
clc
filds
pop
mov
adc
out
ret
stos
ja
or
lods
and
rcrb
pusha
and
add
sbb
push
rclb
mov
add
les
out
mov
rcll
adc
jge
dec
rorl
pop
xchg
sbbl
out
out
mov
rolb
or
adc
aad
adc
jmp
bound
imul
fbstp
xchg
jnp
notb
cmpsl
inc
jb
les
rcll
add
jp
stos
mov
xor
inc
sbb
cltd
loope
aaa
mov
lret
sarl
jnp
xchg
mov
std
add
rcrb
mov
inc
mov
and
out
cs
jne
arpl
adc
jno
jl
jg
popa
lods
cmp
sbb
es
mov
pop
addb
fdivr
inc
add
mov
lret
jnp
std
int3
sahf
pop
xor
pop
in
or
fs
cmpxchg
outsb
pushf
dec
adc
mov
in
sub
in
pop
xchg
ds
jno
sbb
push
in
sub
inc
gs
inc
lcall
cli
pop
repz
jnp
push
fucom
call
ret
aas
pop
and
rclb
aaa
cmpsb
cwtl
aad
mov
sub
inc
mov
and
leave
dec
out
loopne
ljmp
jg
mov
lret
mov
push
adc
push
jb
xor
push
push
jns
cltd
ret
adc
scas
sbb
fidivrs
sub
sbbb
mov
sub
outsb
jmp
clc
push
sbb
movsl
sti
mov
popf
inc
sub
outsl
and
sti
and
push
enter
dec
insb
sti
xor
ja
sbb
mov
insl
ja
xchg
xor
mov
dec
pop
inc
test
mov
xor
popa
dec
adc
fs
and
ljmp
pop
cmpsb
cmp
dec
mov
dec
scas
jp
add
loope
imul
mov
jne
insl
add
jp
sbb
xchg
mov
nop
mov
imul
int3
dec
xor
lods
sub
push
xchg
cmpsl
mov
push
das
insb
mov
adc
mov
cmp
mov
imul
loopne
icebp
push
fisubrs
outsl
xchg
xor
adc
decb
dec
xor
push
pop
jp
jns
repnz
fnsave
orl
popa
loope
mov
pop
sbb
jo
ret
push
cmpsb
mov
ja
xchg
adc
dec
dec
mov
cmp
scas
jae
pop
lret
sub
push
cmp
popf
mov
shlb
icebp
jne
das
fwait
imul
dec
das
out
stos
mov
xchg
out
mov
ja
rcrb
jo
aam
sbb
or
lock
cmc
sbb
mov
out
jg
mov
pop
cli
jle
mov
push
sti
stos
popa
aas
daa
movl
scas
test
lahf
mov
cld
mov
push
loope
mov
inc
jecxz
pusha
gs
ret
lods
data16
fwait
xchg
in
fidivs
xchg
sub
sbb
ss
dec
insl
mov
pop
lcall
xlat
add
shrb
sub
adc
mov
sub
cmc
notb
dec
daa
and
or
push
xchg
imull
mov
xchg
sbb
push
pushf
lds
sbb
cld
xchg
adc
sarb
je
sbb
mov
xchg
mov
dec
mov
stc
movsl
pop
shll
lds
sub
xor
lds
fiadds
int
or
mov
test
mov
and
in
nop
sub
andl
cmp
xor
lock
mov
sarb
outsb
pop
sub
lea
cltd
pop
subb
scas
inc
mov
mov
push
fistps
sbb
pop
adc
mov
pop
fmull
cltd
es
mov
xchg
mov
lret
imul
sbb
pop
shll
and
push
add
mov
or
addr16
cs
pop
adc
sub
mov
out
add
mov
and
out
jns
in
mov
cwtl
jae
inc
pop
imul
iret
sub
add
xor
gs
adc
data16
cmp
mov
fimuls
enter
mov
mov
hlt
push
xlat
mov
in
mov
mov
mov
sub
mov
jg
jnp
or
cmp
test
out
push
sbb
insl
stos
adc
imul
ljmp
in
push
je
push
test
stos
mov
fs
and
mov
movsb
test
js
push
pop
push
add
mov
adc
or
aas
mov
push
cmp
pop
lahf
ficoms
pop
pop
lret
mov
push
sti
in
imull
add
sub
or
mov
icebp
in
inc
repnz
sbb
fcoml
adc
cmc
xor
in
mov
or
insb
add
inc
loop
adc
cmpsb
fldln2
jns
push
ja
fistl
fisubrs
push
ljmp
push
pminsw
sbb
mov
push
inc
jle
xchg
xchg
test
sarb
jno
imul
push
cmpsl
mov
xchg
mov
push
xor
movsl
push
sbb
mov
push
sub
fwait
cmp
fcoml
and
test
xorl
push
xchg
cmp
dec
sahf
cmp
jno
lds
shr
iret
outsb
sbb
mov
std
pop
xor
adc
stc
ljmp
arpl
xchg
xor
push
inc
or
xchg
dec
xchg
adc
cmp
ss
cmp
and
mov
pushf
xor
cmp
lret
std
dec
push
rcrl
iret
jg
rcrl
or
sbb
out
xor
pop
in
subb
or
out
fldl
fisttpll
orl
push
mov
cmp
fnstsw
test
mov
popa
repnz
popl
mov
push
test
mov
shlb
cmp
pop
aas
inc
lret
push
aaa
out
xchg
sahf
pop
mov
cmp
in
mov
adc
test
jno
bound
ret
andl
inc
cmp
xlat
cmc
inc
inc
xor
adc
ficoms
mov
or
das
addr16
xor
inc
dec
lock
mov
xchg
ret
sti
popf
das
movsl
add
sub
and
dec
pop
adc
adc
adc
lcall
xor
cwtl
mov
sbb
sbb
adc
repz
pop
or
jo
ret
jmp
adc
cmp
dec
mov
movb
add
je
rorl
push
add
push
push
addr16
inc
xor
aas
int
outsb
cmp
test
jns
js
cmp
mov
mov
mov
fnsave
aad
popf
xor
lock
in
repnz
push
pop
xor
popa
mov
popa
mov
mov
pop
fsubl
mov
mov
mov
lods
popa
lcall
stos
xchg
popf
cmp
lret
mov
jmp
jns
popf
mov
mov
inc
xor
lcall
dec
sbb
xchg
aas
mov
xlat
dec
inc
adc
movsl
cmpl
sub
xchg
les
leave
loop
lret
jl
out
test
mov
in
mov
les
pop
push
lods
and
sbb
sub
lcall
test
inc
sbb
loopne
fcomip
or
and
and
lock
lcall
pop
mov
mov
inc
fnstsw
add
push
pushf
add
or
insb
fidivrs
adc
shlb
ud1
data16
dec
out
dec
xor
sub
imul
popf
inc
xor
or
ret
hlt
push
nop
xchg
sub
das
mov
jp
popa
jg
xchg
push
popf
mov
adc
loop
fsts
cmp
icebp
jp
mov
mov
lods
xchg
fiaddl
aas
sub
pop
adc
and
sub
xor
xchg
cltd
mov
cmp
ret
scas
idivl
enter
mov
add
mov
jbe
adc
jmp
movsb
or
in
xor
pop
pusha
stos
xchg
ljmp
test
xor
lock
add
jbe
jno
xor
fwait
repz
inc
insb
xchg
js
jge
push
imul
mov
dec
cli
xor
add
pop
mov
pop
ljmp
std
sbbl
sbb
stos
ficompl
push
sbb
dec
seto
scas
mov
cmp
push
jl
js
adc
mov
cmp
faddl
in
push
jg
adc
cmp
clc
int3
xchg
pop
add
repnz
inc
je
popa
mov
cmpsl
ror
icebp
cmpsl
xchg
push
je
mov
pop
lcall
sub
jae
imul
lods
or
aam
aam
das
ret
and
dec
push
dec
jecxz
test
cmp
jg
loopne
xchg
in
push
push
adc
dec
lret
mov
lods
push
ja
cltd
mov
bnd
fisttpll
movsb
in
jle
enter
stos
push
inc
push
pop
lret
lahf
mov
sbb
sub
sub
je
icebp
hlt
aaa
stos
das
fistpll
jne
pop
xlat
pop
outsl
pop
fs
daa
and
mov
icebp
mov
cmp
push
jnp
jnp
inc
and
out
int3
inc
sub
xor
out
sbb
push
lret
sbb
sub
and
subl
sbb
ret
shlb
std
mov
add
or
push
sbb
jp
xchg
nop
pusha
mov
xor
and
test
inc
sbb
std
mov
gs
call
cmp
test
push
dec
xor
movsb
sbb
fisttpl
scas
fdivr
xor
sbb
dec
xchg
sti
pop
inc
aam
loope
stos
jbe
pop
adc
mov
clc
adc
jns
fmuls
push
fcompl
dec
pop
int3
adc
lcall
add
xchg
pop
and
inc
xor
xchg
testb
adc
push
xor
test
or
fidivl
ljmp
sub
test
cmp
and
les
push
popa
cmp
cli
inc
aas
mov
pop
leave
pop
imul
addl
dec
and
or
push
xor
xorl
enter
push
fnstsw
loop
out
in
or
pop
incl
cwtl
mov
sub
pop
xor
les
shrb
loop
lods
inc
lahf
sti
cld
inc
movb
dec
cld
lds
notb
lods
inc
push
enter
jne
pop
addl
andb
mov
dec
jae
push
sarb
out
bound
enter
pop
jg
mov
sbb
loop
out
xor
es
aam
cmp
rcrb
sbb
jo
sub
dec
mov
adc
and
dec
jle
lods
sbbb
cmp
sub
mov
js
decl
jle
dec
mov
inc
mov
fbld
movzwl
add
cmp
out
and
sub
push
aaa
mov
std
stos
insl
lret
sub
cltd
inc
inc
and
pushf
call
imul
sbb
fnsave
push
mov
cmp
sbb
shrb
repnz
xchg
addr16
idiv
push
shlb
and
adc
jle
imul
jl
out
aam
push
addl
cmp
fldcw
movsl
xchg
js
bound
fsubrl
push
and
jle
push
xchg
popf
and
xor
push
lret
fcomps
sahf
scas
fldenv
pop
lods
sub
cltd
stc
aas
fstl
xor
mov
loopne
mov
fldt
aas
stos
gs
push
je
lock
jnp
jno
arpl
pushf
xchg
dec
lcall
lods
jo
or
and
xchg
jb
jmp
cmpsb
mov
loop
sbb
cli
cmp
and
jmp
sbb
mov
xchg
pusha
iret
sbb
cwtl
mov
push
jo
fcoml
push
jo
jle
adcw
clc
aaa
dec
dec
push
push
sbb
inc
cmp
aas
lock
lret
js
sbb
xchg
fadds
cwtl
bound
or
loope
inc
and
data16
fnstsw
mov
je
mull
dec
insb
subl
call
popa
sub
push
enter
in
in
or
cld
jl
test
in
test
adc
mov
pop
ss
ljmp
xchg
jb
pushf
or
aam
lods
sub
insl
out
gs
mov
cmpsl
xor
in
imull
or
push
mov
mov
mov
lods
fnsave
sub
pop
dec
aaa
and
stos
mov
shlb
mov
push
jb
roll
push
and
jb
mov
mov
adc
push
icebp
fbld
imul
push
imul
pop
inc
xchg
xor
loope
fmuls
xor
pop
and
sub
xchg
movsl
pop
stos
or
push
mov
xor
out
jmp
in
out
sar
xor
cs
fisubs
push
daa
push
inc
cs
sub
inc
sbb
xchg
mov
xor
push
xor
ja
dec
test
daa
mov
bound
ficomps
sbb
popf
lds
mov
rcrb
or
sahf
jmp
jecxz
leave
cltd
cs
popf
arpl
andl
loopne
push
and
movsl
rorl
add
and
sub
xchg
loopne
lcall
push
push
in
mov
movsl
push
in
mov
pop
push
cs
mov
pop
dec
in
xchg
mov
mov
adc
adc
in
imul
pop
repz
popa
push
jle
pushf
fs
and
idivl
dec
cmp
imul
cmp
mov
ret
mov
mov
in
xlat
aad
mov
cltd
in
sub
adc
rorl
and
mov
dec
fcoms
test
or
jp
mov
add
aad
mov
das
icebp
in
test
movsb
loope
bound
sahf
sbb
cmp
out
movsl
std
or
jmp
mov
out
sbb
loop
adc
roll
dec
in
push
mov
out
jecxz
mov
std
xchg
movsb
pop
mov
push
mov
not
imulb
outsl
push
push
xchg
mov
jb
jno
std
adc
dec
idivb
push
in
ljmp
cmp
dec
xor
daa
lret
sbbb
movsb
test
xor
lods
adc
jl
imulb
into
gs
pop
sbb
sbb
ljmp
rcrb
push
outsb
fmull
mov
fldt
notb
inc
cmpsb
mov
cmpsl
mov
sub
cmp
sub
dec
xchg
fsubrs
faddl
inc
shlb
pop
andl
jl
ja
cmp
loop
orl
mov
scas
test
popf
mov
jns
test
add
ret
ficoms
inc
adc
sbb
push
fistl
cmpsl
and
mov
sahf
push
cltd
adc
xlat
in
adc
pop
adc
scas
adc
jecxz
std
sub
cmpsl
roll
add
mov
mov
aad
clc
xor
out
imul
mov
jbe
and
pop
nop
loope
je
ss
pop
pop
std
mov
lcall
insb
cmp
repz
sub
sarb
xlat
out
ror
mov
dec
xchg
aaa
push
xchg
xlat
cld
jno
xchg
les
inc
cmp
mov
fs
push
aad
mov
jo
fmull
int
in
xlat
sub
unpckhpd
push
adc
push
cmp
sub
sub
mov
add
xchg
movsb
inc
ja
cld
inc
cmpsb
in
out
in
test
xchg
push
push
xor
adc
fs
cmp
mov
hlt
fs
fidivl
mov
pop
inc
mov
adc
into
lret
loopne
jb
lods
pop
adc
repnz
rcll
cmp
jne
push
cmp
jo
scas
inc
dec
inc
sbb
andb
mov
sbb
jns
or
or
xorb
lahf
sbb
mov
push
pop
jp
jo
lahf
or
cmp
xor
es
mov
out
int
imul
pop
imul
sub
adc
mov
in
leave
jle
dec
push
adc
sub
jle
mov
decb
push
bound
sbb
in
xor
or
leave
test
pop
rcl
inc
in
sti
testl
out
push
mov
in
pop
mov
add
insb
aad
pop
orb
imul
sub
adc
push
pushf
push
mov
cmc
fiaddl
stos
fidivl
cli
mov
inc
pop
sbb
int
fldl
sarb
inc
pop
cmc
xor
mov
testb
test
je
enter
xor
add
ja
mov
jecxz
sub
nop
in
fidivrl
or
les
xchg
imul
mov
xchg
loopne
push
mov
sbb
dec
mov
add
sbb
lret
jl
stos
inc
adc
ficoms
sub
outsb
test
and
iret
or
xor
mov
stos
das
shlb
or
out
cmp
dec
cmpsb
xor
mov
test
xor
je
xor
jae
je
lfs
push
jo
or
in
mov
ljmp
xchg
mov
aas
jns
aam
mov
fisttpl
icebp
jnp
andl
dec
mov
fsubrp
pop
imulb
mov
and
daa
je
sub
push
jne
popf
push
bound
xor
dec
iret
and
mov
es
pop
call
loop
ss
stos
int3
cmp
adc
jnp
int
xchg
nop
popa
test
in
cmp
shll
push
rcl
sub
push
xchg
out
subb
cmp
out
xchg
inc
out
or
bnd
push
jb
daa
jne
dec
sbb
add
sbb
dec
popf
js
and
mov
cmp
mov
lret
dec
aad
cmp
inc
test
jmp
je
sbb
xchg
fisubrl
pop
push
mov
in
mov
push
test
cs
inc
pop
fsubrs
jge
cmp
notb
sbb
call
loopne
mov
lods
stos
ret
jecxz
push
adc
mov
insb
jbe
nop
sti
call
adc
in
cli
stos
mov
pop
insb
das
addr16
push
push
ljmp
cmpsb
sub
cmp
jbe
fdivs
call
pop
cmc
dec
stos
hlt
xorb
mov
fistps
call
lea
insl
lcall
mov
das
xchg
mov
jne
leave
xchg
gs
pop
sbb
pusha
insb
es
loopne
aaa
mov
gs
mov
ja
std
addr16
pop
cmpsl
enter
addr16
cmp
addr16
sub
dec
sbb
jne
dec
popf
add
sahf
into
insl
jns
lods
pusha
lea
cmp
sahf
lods
jle
int
jp
pop
loop
cmp
sbb
jp
mov
jmp
dec
aam
mov
add
sbb
xor
jl,pn
xchg
xchg
test
cmp
mov
or
mov
or
rorb
jp
push
mull
or
mov
cltd
out
mov
lret
nop
push
repnz
movsl
sahf
ljmp
push
cmp
dec
out
jns
push
mov
sbb
and
dec
and
cwtl
pop
ret
jg
sub
mov
pop
fldenv
jmp
gs
les
push
out
xchg
test
je
or
xor
mov
and
das
frstor
jns
dec
fistps
push
lahf
movl
pop
push
push
mov
adc
int
xorb
push
adc
add
call
sub
and
add
loope
loopne
mov
jbe
and
jl
xchg
lods
mov
lods
ljmp
into
pop
xchg
mov
pop
arpl
mov
out
test
push
xchg
jne
sub
mov
cld
and
inc
shrl
dec
pop
je
and
stos
lahf
ds
call
mov
icebp
push
out
mov
push
ja
inc
sub
sbb
lods
jl
mov
xor
sbb
rcrb
pop
les
sub
pop
mov
test
pop
test
movsl
sahf
mov
mov
pop
imul
orl
xchg
or
fdivr
push
mov
insb
pusha
adc
sbb
loopne
stos
stos
sbb
out
out
xor
inc
pop
push
iret
call
sbb
push
mov
dec
pop
add
mov
out
rorb
mov
lods
js
rcl
rolb
and
lahf
ret
mov
pop
stc
outsb
cltd
mov
xor
push
gs
fs
or
insl
jge
adc
cmpsl
xchg
enter
fwait
or
test
pop
insl
andl
leave
xor
mov
mov
mov
das
test
xchg
lods
pop
cmpsb
jo
mov
or
mov
xchg
test
test
in
leave
scas
inc
bound
jmp
aas
jo
std
out
loope
and
dec
cltd
arpl
js
pop
es
and
xlat
add
mov
cmp
roll
sbb
add
add
test
xor
test
sub
pushf
fisubrs
mov
bnd
int
jnp
add
lret
inc
loope
mov
out
mov
adc
pop
mov
je
call
mov
ds
in
xor
jnp
fnsave
cmp
es
dec
jo
inc
lods
ret
shll
mov
cmp
or
stos
rcrl
xlat
mov
sub
jne
popa
push
sahf
pop
mov
push
or
inc
mov
test
mov
adc
aam
xchg
hlt
shrl
cmp
sti
cmp
push
mov
jmp
inc
push
clc
xor
pop
fcmovnbe
into
adc
pop
js
inc
bound
pop
add
inc
inc
cli
mov
outsb
in
jmp
cwtl
je
arpl
sub
pop
bound
stos
popf
xor
lods
jmp
fldenv
cwtl
wbinvd
lock
stc
cmp
dec
push
inc
mov
sahf
stos
push
adc
int3
outsb
xchg
jne
ds
push
jp
scas
lcall
inc
or
jmp
repz
mov
das
aaa
int3
insb
sbb
pop
pop
rclb
rorl
int3
mov
dec
adc
test
fwait
cltd
mov
mov
adc
mov
lds
sub
mov
mov
pop
in
xor
sub
adc
jbe
jnp
enter
and
and
dec
xchg
in
mov
sub
stos
test
je
cli
cmp
cmpsb
or
rcr
xchg
cltd
lods
pop
popa
out
jle
hlt
stos
jb
mov
movsb
rorb
fwait
packuswb
sub
inc
loop
sahf
arpl
push
or
cld
or
outsl
addr16
sub
xor
mov
pop
test
iret
add
lcall
dec
jnp
sbb
jecxz
jl
push
dec
sbb
push
cmp
scas
jp
jecxz
lret
outsl
sbb
sti
sub
adc
dec
add
and
xor
insl
mov
pop
push
mov
dec
push
movsb
cmpsl
xchg
xchg
mov
lock
rcr
push
dec
inc
stos
dec
aas
push
insl
out
std
push
test
xchg
push
int
sub
imul
or
adc
xchg
out
fs
mov
mov
sbb
xchg
mov
inc
pusha
bound
scas
add
mov
lret
stc
mov
pop
mov
sub
stos
mov
mov
leave
fninit
insb
test
jno
insb
sub
mov
cmc
lret
add
repz
lcall
sub
adc
push
testl
pop
add
outsl
leave
mov
and
iret
jp
sti
inc
dec
inc
in
outsb
inc
in
cltd
cmp
lods
imul
jae
clc
sub
sbb
test
xchg
inc
jecxz
cmp
push
imul
mov
out
mov
pop
movsl
mov
lea
cs
xchg
xor
lock
scas
adc
sub
repz
or
mov
call
fwait
pushf
bound
sub
sahf
sahf
sar
fcoml
add
mov
mov
ret
cmp
jo
ljmp
xchg
fidivrs
jecxz
push
mov
sbbb
rcrl
loopne
jne
in
imul
cmc
mov
fsubs
lahf
mov
push
fists
out
xor
pop
aaa
push
add
lcall
xor
lcall
push
ds
adc
dec
popf
stos
test
scas
xorb
pop
pop
mov
aad
sub
cmpb
out
mov
stos
mov
push
insb
push
aam
insl
imul
outsl
xchg
js
cmp
pop
fwait
dec
jbe
inc
std
push
ret
addr16
mov
mov
push
dec
leave
xchg
jb
loope
out
stos
mov
pop
mov
fwait
testl
xchg
jl
sub
mov
push
xlat
mov
hlt
pop
pop
or
mov
mov
scas
je
lcall
inc
xchg
jecxz
aam
fdivl
xor
bnd
inc
cld
dec
addr16
fdiv
ljmp
or
arpl
jne
bound
test
test
iret
sub
repz
iret
adc
pushf
mov
mov
out
lods
ficoml
mov
inc
inc
cmp
sti
cmpsl
xchg
cltd
sub
sub
mov
or
icebp
mov
scas
cmp
add
out
push
sbb
iret
imul
int3
lcall
dec
or
nop
daa
std
adc
sarl
jnp
test
push
xor
subb
fsubs
ret
jae
test
push
xchg
mov
in
sbb
sbb
nop
andb
test
ds
add
andl
mov
jb
test
test
ret
xchg
lea
stc
shll
pop
rorb
jp
jg
xchg
jmp
jns
cmc
movsb
movsb
insl
pop
xchg
jmp
vpmacsdql
jnp
mov
scas
and
and
shll
int
dec
push
scas
hlt
xlat
pop
fdivs
aaa
jae
or
hlt
aad
es
out
adc
aas
xchg
movsb
lods
mov
xchg
or
popf
lds
sbb
adc
out
bound
xchg
pushf
out
add
and
jo
add
push
push
sbb
lds
inc
inc
sub
inc
mov
adc
mov
pushf
lock
out
movups
je
inc
sub
lods
icebp
cmove
push
movsl
mov
lahf
sbb
lahf
enter
out
cmp
jno
mov
movsb
mov
enter
add
cwtl
mov
bndstx
mov
jg
cld
mov
pop
iret
push
jp
lods
mov
movsb
dec
fsts
data16
cmp
mov
fbstp
push
roll
outsb
jl
test
xchg
jne
lods
rcr
out
push
inc
insl
dec
pop
fimull
aas
and
cmp
lret
decl
frstor
xor
cmp
lahf
mov
daa
sub
inc
xchg
mov
xor
sub
mov
and
mov
int3
fdivrs
mov
pop
xor
mov
test
rcrb
lahf
addb
mov
je
bound
sub
cmpsl
or
sub
xor
push
sbb
mov
xchg
cmpsb
in
aas
push
jg
inc
enter
add
test
fimull
inc
aad
faddl
or
jp
sbb
inc
inc
mov
inc
adc
push
inc
pop
inc
fs
pop
pop
add
xchg
mov
jl
ret
add
pop
dec
sub
dec
jns
xchg
mov
test
repnz
insb
cs
popa
push
rcl
push
mov
es
stos
or
mov
mov
and
cli
adc
insl
aas
into
rolb
addr16
inc
jge
add
fsub
cmp
xchg
out
cli
add
movsbl
mov
jns
sbb
mov
gs
ds
dec
cs
ret
push
pop
int3
add
xchg
leave
ret
sub
mov
mov
sar
gs
mov
les
add
test
insl
or
mov
pop
scas
neg
ss
xchg
adc
cmc
popf
xlat
or
sbbb
xchg
mov
jnp
out
dec
pop
stos
cmpsl
stos
insb
fistl
mov
sub
out
inc
cmp
or
movb
imul
pop
aaa
push
push
popw
sbb
mov
ret
stos
cmpsb
cmp
jno
xor
or
sub
repz
pop
fistl
add
xor
mov
sub
je
scas
xor
jns
insb
aas
lret
sub
clc
adc
mov
in
cli
ljmp
push
add
pop
inc
dec
jbe
mov
sbb
xor
add
mov
jecxz
mov
adc
cmp
fwait
outsl
loop
subl
call
cmp
popa
sub
addr16
scas
pop
mov
xchg
aad
inc
inc
ret
loopne
pop
mov
mov
out
inc
inc
ret
or
pop
mov
fisttps
xchg
fsub
add
adc
lret
shlb
cmpsb
ja
add
jo
add
cs
cmp
jo
sti
jb
jp
add
sub
mov
push
ss
and
call
sub
enter
test
xor
leave
adc
in
fnstenv
or
and
pop
scas
sub
cmp
mov
call
mov
pop
mov
fsubr
inc
push
clc
pop
cld
inc
rol
and
adc
or
stos
fsubrl
rol
sbbb
jmp
cmpsb
in
lahf
cmp
cmova
adc
add
cmp
sti
pusha
enter
nop
push
adc
fisubrl
jle
and
orb
add
xchg
push
shlb
sbb
pop
push
inc
jecxz
int
dec
jg
push
jp
sbb
je
xchg
outsl
in
mov
lds
daa
lea
incl
or
cld
add
add
pop
shll
cmpsl
test
loop
sbb
sbb
push
sbb
cmp
sbb
imul
add
mov
sbb
mov
in
lds
lahf
mov
rcrb
mov
scas
add
xor
repz
cmpsl
mov
pop
outsl
aaa
sahf
dec
scas
lret
mov
fiadds
push
cs
es
pop
pop
adc
imul
and
fiadds
and
mov
pop
push
xor
iretw
fcomps
add
sbb
or
ja
fdiv
loope
scas
dec
dec
jno
lods
repz
pop
push
xor
stos
test
dec
idivb
xor
inc
pushf
sbb
sbb
or
cmp
lahf
sbb
mov
test
ds
add
sbb
mov
fisubs
dec
es
ret
je
or
rcr
mov
std
sbb
repz
inc
mov
xor
inc
jge
xorb
or
cmpsl
in
aas
or
aaa
sbb
dec
mov
out
out
pop
add
dec
je,pt
rcl
pop
jecxz
mov
outsb
cmpsl
std
sbb
stos
lret
cmovs
mov
inc
and
jge
testb
cmp
adc
cwtl
mov
xor
mov
mov
cmp
shlb
pop
lcall
imul
adc
bound
jns
loopne
loop
adc
shlb
daa
fwait
insl
xchg
dec
aad
xlat
sub
mov
xor
pop
insb
rclb
divb
cmpsl
cmp
push
cmp
cmp
lret
cld
xor
jmp
fstl
mov
xchg
pop
mov
jno
into
push
push
push
pop
jne
dec
mov
repz
pop
cmpsb
add
or
arpl
push
xor
cltd
fcomps
push
fistps
out
leave
jbe
dec
lods
aas
mov
mov
cmpsb
sub
or
popf
xchg
xchg
add
push
xor
outsl
sbb
popf
imul
mov
into
mov
bnd
sbb
fwait
sub
rcll
aad
fldt
jne
fisubrs
sete
mov
pushf
test
jns
int
and
fsub
or
cmpsb
lods
lret
inc
cmpsb
sbb
int3
xor
push
lds
loope
dec
iret
daa
mov
lcall
pushf
test
add
mov
clc
cld
sub
cmp
sub
sub
mov
stos
aas
fadds
hlt
mov
inc
mov
roll
sbb
test
dec
pop
outsl
xchg
sbb
or
mov
popa
fiaddl
lods
cwtl
lods
orb
cmp
ficompl
add
xor
jae
xor
jns
pop
mov
movsl
mov
sbb
jg
fidivrl
and
hlt
out
push
lea
jmp
sti
pop
mov
mov
leave
fcmovnu
xor
sub
std
dec
mov
in
mov
rcrl
in
lcall
jno
out
fmuls
push
bnd
lods
adc
xchg
push
lds
mov
and
cmp
push
or
jl
test
jbe
adc
lcall
icebp
outsl
jecxz
xor
add
es
inc
test
dec
mov
or
loop
lret
fs
jnp
lock
loopne
sti
and
xchg
loop
lea
inc
pop
or
stos
fstl
int
lods
jbe
mov
ret
sbb
lret
xor
xor
mov
push
dec
add
iret
cld
jmp
sbb
inc
lret
mov
push
stos
outsb
cmpsl
cmpsl
and
mov
cld
repnz
lcall
int
subl
push
insb
mov
popf
dec
in
pusha
lods
mov
mov
repnz
mov
test
xchg
popf
inc
sub
pop
lock
dec
orl
jae
filds
jo
dec
inc
pop
cmp
outsb
add
repnz
add
out
jle
sub
and
fidivs
aaa
out
leave
xchg
mov
mov
mov
cmpsl
jg
jmp
dec
pop
es
fistpl
inc
out
outsb
stos
movsl
insb
xchg
sar
js
lods
and
stos
imul
sub
mov
and
fildll
mov
fildll
ljmp
jge
push
aas
jmp
insl
out
lcall
imul
sbb
fdivs
lret
imul
push
insb
add
or
adc
mov
xchg
test
les
popa
xchg
aas
dec
pop
inc
pusha
mov
or
push
xchg
imul
mov
bound
fst
push
cmp
jl
lds
insb
sub
sub
jp
dec
neg
pop
jl
jnp
movd
clc
into
cmp
push
out
scas
or
leave
test
inc
in
add
xor
pop
mov
enter
jp
adc
xlat
sbb
test
popf
inc
imul
xchg
fs
shlb
das
cmc
in
sahf
push
jecxz
inc
mov
push
xor
outsl
jp
adc
lcall
out
jecxz
mov
pop
divl
in
adc
push
mov
jecxz
fnstcw
jno
outsl
push
and
add
dec
inc
mov
pop
push
out
imul
mov
inc
lds
adc
mov
sbb
pop
add
xchg
cmp
push
xchg
pop
xor
lods
sub
rorl
jnp
jnp
jno
push
lahf
rorl
mov
dec
test
jnp
cltd
sarl
jb
jl
repz
fmull
subps
fidivs
jge
push
ljmp
push
icebp
mov
inc
cli
mov
cmp
shlb
test
fwait
notl
je
in
xor
xchg
lfs
je
or
adc
adc
xchg
xchg
aaa
dec
xchg
inc
imul
push
pop
aam
or
adc
push
dec
lea
int3
adc
push
jb
test
fsubrs
jb
push
popf
xor
stos
rcr
and
mov
icebp
add
fs
std
or
scas
imul
ja
sar
test
idivl
repnz
push
sub
xorl
or
jo
rcr
sub
test
loopne
cmc
dec
adc
mov
add
sub
rclb
pop
sbb
sub
out
arpl
xchg
inc
mov
cmp
in
imul
movsb
push
xchg
mov
cmp
mov
loopne
mov
std
jne
jp
sbbb
les
inc
push
orb
fistpl
jg
jle
push
add
rorl
jnp
mov
pop
stos
into
ret
adc
cmp
mov
stos
inc
hlt
insb
mov
jmp
mov
mov
leave
dec
js
rclb
orb
dec
push
jns
inc
or
bound
jb
push
pop
repz
or
rcll
cli
xchg
in
jb
cmp
shll
aaa
ja
add
or
mov
imul
sub
push
in
les
adc
ja
inc
mov
test
mov
mov
pushf
adc
xor
mov
fwait
adc
setne
push
inc
rcrl
les
push
call
push
std
and
leave
es
xchg
int
popa
pushf
push
imul
mov
mov
pushf
sub
loope
pusha
or
mov
jnp
dec
pop
push
mov
jg
mov
jmp
jmp
jb
fadd
push
fcmovu
sbb
dec
lret
pop
xchg
rclb
jp
sub
fildll
dec
push
aaa
jns
xchg
inc
inc
mov
pop
jbe
jo
mov
inc
cmpsl
cmp
push
les
outsb
cs
mov
das
add
mov
push
lret
es
sbb
clc
push
cld
addr16
dec
pop
je
pop
hlt
lods
mov
pop
mov
call
inc
fldenv
xbegin
bound
repz
ret
jle
sub
push
and
arpl
push
push
rcll
push
aam
stos
sti
adc
test
xor
mov
loope
add
lret
sub
or
mov
inc
cli
in
sarl
in
shr
cld
mov
jmp
icebp
add
loope
add
test
inc
jae
add
adc
sub
int3
mulb
fildll
pop
push
imul
jne
dec
mov
xor
inc
rdmsr
inc
mov
cmp
sbb
and
repz
dec
scas
hlt
jns
dec
arpl
or
sub
jmp
inc
divl
sub
ljmp
mov
push
xchg
xor
jbe
push
push
xchg
negb
sub
cmp
aad
push
pop
jmp
jg
cwtl
loop
and
jns
movsl
dec
lret
add
jmp
jnp
mov
mov
jae
shlb
push
xor
js
lret
push
ds
imul
imul
pusha
pop
pop
or
std
jnp
sarb
cwtl
sbb
xchg
aam
xchg
mov
out
mov
pop
xor
lret
lret
lods
sarb
xchg
andb
idivb
adc
mov
add
ret
iret
mov
mov
sub
orb
push
add
inc
add
andl
addr16
cs
mov
inc
aas
adc
mov
test
pusha
aad
bound
xchg
repnz
mov
mov
push
sahf
scas
rorl
fcomps
push
push
jmp
pop
xchg
push
insl
addps
or
pop
lock
xor
shlb
add
sbb
scas
mov
mov
jmp
out
mov
fs
mov
daa
pop
push
pushf
xor
push
push
rcl
sub
gs
pushf
push
sbb
sbb
clc
xlat
outsb
xor
xor
push
fildl
testb
and
ds
cmp
adc
in
mov
fistpl
in
mov
sbb
push
in
mov
jno
test
repz
pop
addr16
or
clc
push
div
jb
jmp
sbbl
je
add
rcr
sbb
pop
xor
psubsw
jg
sbb
dec
lcall
test
mov
sarl
xchg
jg
pop
pmulhuw
imul
xor
sbb
out
ss
mov
gs
sbb
dec
int
jno
add
xor
dec
sub
dec
fs
xchg
push
lret
sub
cmpb
es
push
push
xor
dec
add
popa
cld
push
push
sub
xchg
xchg
push
fimull
stos
lds
gs
stos
adc
aad
push
and
mov
stos
stos
and
mov
and
xor
lcall
rcr
pop
jbe,pt
xchg
fstp
enter
outsb
xchg
inc
mov
fidivl
imul
jb
sbb
pop
cld
pop
xchg
mov
mov
sbb
pop
ret
into
jo
push
xchg
dec
stc
xchg
stos
mov
inc
hlt
mov
sub
push
clc
push
add
out
outsb
orl
daa
in
cwtl
mov
ret
cmp
mov
nop
pop
and
sbb
jmp
ljmp
and
scas
lds
push
lods
dec
and
pop
xchg
jmp
pop
cmp
cmp
les
rol
rcrl
push
push
inc
mov
mov
mov
pushf
cmpsb
push
xchg
adc
fdivrs
repz
dec
ss
xlat
or
test
adc
in
in
pop
lahf
popf
cmp
lock
inc
dec
js
cltd
xchg
fnstsw
dec
repnz
or
jae
jg
sub
mull
imul
icebp
shl
xor
imul
xchg
cmp
cwtl
xor
hlt
lret
cwtl
stos
sub
mov
mov
add
and
test
or
das
test
fisubs
or
dec
pop
sbb
xor
out
in
fadd
jo
xor
aam
fs
add
shlb
cmp
or
cld
fiadds
and
sbb
mov
cmp
loopne
data16
dec
jae
pop
fadd
in
pop
add
jae
mov
in
jecxz
leave
jp
sbb
adc
sub
ret
cs
ficoml
sbb
stos
mov
cs
adc
mov
sub
loope
adc
add
pop
std
jbe
sbb
movsl
lahf
out
push
sub
ljmp
mov
dec
sub
loop
aaa
stc
and
xchg
call
mov
test
aaa
loopne
fiadds
and
adc
in
dec
push
xchg
mov
stos
push
mov
test
lods
mov
or
movsl
lahf
data16
leave
or
sub
fnstcw
push
add
inc
pop
rol
or
pop
loope
sahf
jge,pn
or
xor
inc
test
cltd
dec
jae
jg
pop
dec
cli
jns
lods
ds
pop
pushf
mov
fcmovbe
cmp
jecxz
inc
pop
fs
push
call
cmp
or
mov
jecxz
sub
pop
sbb
pop
into
je
popa
sti
add
pop
ret
add
add
cs
in
dec
and
push
xchg
movsl
lods
jl
insb
adc
stos
jns
mov
add
xor
mov
pop
mov
xlat
inc
sbb
cmpsb
stos
lret
rcl
jae
sub
je
loope
sub
shr
das
cmp
test
les
push
mov
jne
sub
add
mov
in
sub
or
pop
or
sub
ja
adc
cltd
adc
es
push
dec
lea
jne
jns
fisttps
in
jb
sub
pop
push
xchg
notl
out
cmp
add
and
ss
orl
dec
adc
mov
sub
add
lcall
adc
ljmp
add
aas
xchg
js
adc
outsl
filds
sbb
push
mov
sub
in
pop
fistpll
mov
cmpsb
ja
jbe
scas
mov
cmp
sbb
inc
dec
rorl
push
movsb
loope
xlat
xor
xor
sub
lock
or
scas
and
outsb
add
les
xchg
xchg
mov
in
jl
loope
test
rolb
mov
addr16
dec
loope
pop
sbb
adc
and
out
push
adc
gs
dec
jecxz
xchg
imul
push
rol
popf
nop
xchg
fadd
enter
xchg
sbb
int3
and
pushf
rcrl
cmc
sub
adc
mov
gs
push
out
stos
lods
adc
mov
cli
inc
mov
inc
push
enter
cmp
jo
inc
aad
mov
cmc
pop
jae
divb
subl
aaa
leave
pop
ret
adc
test
xchg
push
push
lds
pop
mov
sub
int
push
and
push
test
jp
addr16
loope
insl
sbb
inc
pop
out
pop
mov
inc
imul
lahf
imul
push
cs
lret
lock
fcoms
inc
xor
mov
cmp
sbb
imul
dec
mulb
push
mov
push
out
fisubrl
idiv
orl
mov
aam
int
or
popa
and
fistpl
sub
xchg
dec
sar
cmp
lods
add
cmc
lret
push
adc
movsl
fnsave
jecxz
loope
stos
inc
in
dec
sbb
xor
cwtl
aaa
push
std
cmpsl
dec
mov
jecxz
ss
inc
mov
push
ret
lret
lods
cs
and
imul
mov
lock
cli
adcb
lahf
fistl
lods
outsl
mov
sub
mov
cmp
mov
mov
mov
lcall
xor
pushf
mov
sbb
inc
push
roll
and
fldcw
lods
orl
sub
xchg
shlb
sub
movsl
xor
and
je
into
pushf
mov
ficoml
lods
adc
test
mov
xor
ja
sub
sti
popa
add
sbb
daa
sbb
mov
dec
sbb
lret
repz
mov
pop
shl
push
sbb
inc
sbb
les
xor
inc
sbb
inc
loopne
push
mov
mov
add
jo
fisttps
test
push
ja
out
cli
inc
lds
test
mov
in
ja
ret
xchg
sub
pusha
sub
mov
aad
shll
xor
xor
sti
sahf
mov
pop
xchg
push
push
loopne
cli
adc
cmovb
mov
dec
mov
sahf
sti
jmp
inc
xchg
loop
int3
cwtl
fs
dec
mov
mov
mov
lahf
mov
pop
movsb
cli
push
mov
pop
jne
inc
fs
push
popf
cmp
sbb
lods
repnz
push
jb
jmp
scas
sub
xchg
push
mov
pop
in
clc
imul
aaa
dec
or
mov
cmovs
inc
or
fxch
mov
cwtl
insb
cmp
jnp
push
push
pop
mov
fistpl
cmp
daa
cwtl
mov
mov
cmpsb
shr
adc
enter
lock
sarl
call
jmp
xlat
mov
stos
jnp
aaa
scas
outsb
movsb
inc
outsb
repz
push
or
mov
mov
and
mov
adc
cmpps
push
jo
mov
test
cmp
lods
dec
jnp
mov
sbb
xchg
add
jp
mov
fdivr
lea
lahf
cs
push
push
xchg
in
xchg
shrb
insb
jp
nop
mov
mov
repnz
dec
fldcw
pcmpeqb
jno
notl
push
xchg
mov
xchg
and
and
cmp
loop
shlb
inc
fs
fwait
inc
push
ss
in
cld
inc
int3
sbbb
pop
sbb
and
aam
sub
mov
mov
cmovp
xchg
ds
pop
mov
movsl
les
mov
pop
jnp
cli
out
lds
sub
add
sbb
iret
pop
leave
xchg
dec
dec
lock
cmp
icebp
stos
test
gs
adc
jmp
add
sub
xor
test
testl
xor
fimull
dec
pop
mov
mov
mov
xor
dec
popa
jmp
adc
push
shlb
dec
dec
scas
and
jp
and
mov
pop
call
pusha
push
sbb
push
imul
sub
fcoms
lret
imul
cmpsl
cld
pop
mov
pop
sub
aas
test
daa
jno
cmp
fs
add
xchg
xor
shrb
push
xor
pop
jnp
sub
fs
pushl
loop
pushf
or
and
xor
lods
sbb
xchg
and
icebp
xor
arpl
add
xchg
push
dec
sbb
mov
aad
scas
jmp
xchg
out
outsb
jge
shlb
jae
sahf
or
add
out
aas
sub
addb
mov
sub
inc
shlb
std
dec
dec
add
pop
push
jmp
pusha
popa
call
imul
push
adc
or
aam
sti
lods
dec
push
push
mov
add
or
inc
cmp
sbb
jnp
out
mov
stc
dec
cmc
shll
ds
js
jns
leave
xorb
push
mov
cltd
jl
and
cmp
pop
add
mov
mov
inc
mov
insb
jg
add
fxtract
rclb
arpl
jb
and
int3
sub
addr16
mov
je
push
outsb
or
lret
cmpsb
shr
lea
les
dec
mov
pop
idiv
repnz
pop
mull
mov
mov
xchg
stc
mov
in
push
jae
loopne
add
push
sub
mov
push
rorl
in
out
mov
jns
rcll
lcall
out
and
out
into
test
xchg
cmp
inc
mov
shl
fsubs
shlb
ja
test
or
test
enter
cmpsb
imul
test
fs
sub
shlb
cmc
scas
pusha
and
in
loopne
adc
adc
subb
xor
and
push
movsl
or
je
nop
popl
mov
push
push
mov
cmp
cmp
cmp
xor
mov
out
or
mov
sar
test
lds
jae
dec
aam
push
lods
jl
or
mov
mov
pop
xchg
xlat
lahf
add
dec
sub
push
movsl
cmp
inc
shll
lods
cmp
mov
loop
inc
xchg
fcmovnu
iret
dec
aaa
inc
or
popa
cmpsl
or
decb
sub
jecxz
jns
push
aam
das
xor
scas
mov
pop
dec
popf
add
lds
jp
outsl
cmc
loop
and
push
icebp
add
setg
adc
xchg
out
icebp
ja
lock
xchg
scas
mov
add
mov
daa
inc
cmp
add
outsb
outsb
enter
mov
inc
mov
xchg
je
imulb
jo
sub
xlat
in
lret
add
ds
and
in
and
inc
jp
sbb
test
inc
int
lods
fwait
loop
mov
adc
js
and
rcl
test
and
mov
jae
push
and
or
inc
mov
and
mov
pop
sbb
mov
mov
jbe
adc
sbb
pushf
dec
jo
les
mov
repnz
add
scas
jbe
mov
fistpl
or
sub
dec
jo
jecxz
push
and
sbb
inc
xchg
or
push
pop
push
jecxz
mov
push
adc
xchg
push
lahf
push
arpl
pop
in
test
xchg
iret
xor
iret
push
xorl
pop
ljmp
and
sbb
sbb
lods
in
ss
in
das
fwait
sbb
fwait
mov
lock
loopne
push
and
jno
test
mov
gs
mov
insl
mov
fnstenv
popa
out
test
or
cmpsb
cmpsl
dec
xlat
jns
dec
fisubl
outsb
out
push
mov
inc
ljmp
fbld
flds
pop
lahf
xchg
pusha
inc
dec
sarb
and
xor
mov
push
push
jp
pop
cmp
add
push
cmp
pop
sbb
pop
add
insb
ljmp
dec
push
bound
out
xor
fnstcw
mov
in
mov
rcll
dec
inc
xor
push
idiv
inc
enter
scas
loope
jnp
dec
sub
and
cli
scas
mov
mov
data16
sbb
roll
pop
scas
cltd
mov
out
pop
jecxz
mov
sbb
es
xchg
hlt
aam
cmpsb
pop
sub
cmc
mov
xchg
dec
rcrb
mov
xor
cmpsb
xor
clc
gs
out
xchg
add
jae
jle
xchg
pop
push
testb
insb
bound
rolb
add
or
and
pop
lret
xor
jl
xor
jecxz
push
inc
aam
rclb
pusha
sti
das
xchg
mov
test
jno
jecxz
test
dec
mov
mov
inc
sub
xchg
insb
mov
and
cmp
js
shlb
cmp
sub
adc
mov
inc
xchg
cmp
shrl
out
push
in
les
dec
in
stos
es
out
pusha
into
sahf
pop
je
stos
inc
add
push
inc
cld
in
xchg
jle
cld
jne
dec
cmp
xor
out
int
imull
cmp
aam
mov
fidivrl
xchg
fisttps
add
divl
ret
cmpl
loopne
cmp
and
jo
xor
jae
stos
push
mov
dec
jl
adc
dec
push
jns
cmp
inc
out
js
pop
pushf
dec
push
lret
sbb
or
into
xchg
sbb
rcll
mov
push
out
mov
jge
pop
insl
cli
jecxz
sbb
dec
mov
jne
ror
cmpsb
test
and
and
sbb
pushf
mov
pop
movsb
cmpsl
scas
cli
xchg
repz
push
in
hlt
icebp
push
popa
shrb
xor
es
sub
fstps
inc
xor
cwtl
xchg
add
xor
jl
cld
inc
or
jnp
in
push
inc
jo
repz
sbb
jne
scas
xchg
and
pop
xor
pop
int3
cwtl
test
mov
test
push
mov
dec
add
inc
repnz
fists
adc
xchg
notb
xor
data16
sub
sub
add
cmp
loopne
xchg
dec
les
xchg
pop
pop
leave
mov
jmp
sub
imul
dec
adc
iret
in
inc
aam
inc
data16
xor
xchg
mov
in
inc
cmc
push
push
sbb
cmp
xor
enter
fnstenv
test
call
mov
nop
shrb
and
dec
pop
mov
loopne
fcoml
jnp
xchg
bound
dec
fsubrl
test
setbe
clc
iret
rcrl
je
aad
mov
adc
adc
aas
insl
adc
out
adc
int3
cmp
dec
sbb
sub
adc
cmp
int3
dec
fwait
rcl
or
xchg
loopne
repz
add
mul
insb
jo
fistl
pop
roll
mov
adc
xchg
aad
aad
movsl
loopne
lods
push
adc
adc
add
pop
xor
fisttps
adc
cs
push
loop
cli
jmp
mov
pop
dec
scas
or
fldl
aaa
and
adc
loope
pop
jne
xchg
sbb
cmpsl
movsb
shlb
loop
pop
cmpsl
das
repz
stos
loop
outsl
inc
fcompl
cmc
shll
cmp
aaa
adc
push
cli
les
xor
rol
push
bswap
pusha
mov
lret
adc
pusha
lret
mov
xchg
mov
mov
in
inc
imul
in
jg
ficoms
movsb
call
ret
pop
testl
in
xor
test
adc
cmp
mov
in
and
dec
dec
sub
aad
nop
test
push
add
lea
lds
xor
int3
mov
push
lods
pop
out
dec
pop
sahf
lahf
jl
lods
ret
mov
xchg
rcl
in
push
ret
pop
adc
and
jb
enter
xchg
mov
dec
push
bound
rcrl
sbb
insl
scas
mov
ficompl
push
lds
scas
inc
pop
and
lea
jge
sub
outsb
repz
fs
push
scas
les
scas
in
out
push
clc
or
pop
out
icebp
jbe
fldl
rolb
les
rcrl
sbb
fbld
add
or
push
dec
stos
pop
push
jmp
pop
jb
pop
je
mov
arpl
adc
inc
pop
adcb
inc
sbb
daa
fxtract
cmpb
mov
mov
cmp
mov
out
into
sbb
dec
jbe
in
mov
loop
dec
push
sbbb
ds
out
mov
ds
xor
out
inc
or
inc
push
mov
jmp
and
push
pop
sub
cwtl
mov
cs
dec
mov
xor
push
cwtl
xor
out
fdivl
pop
mov
cltd
js
or
addr16
cli
gs
and
mov
in
xor
ljmp
movsl
frndint
sarb
fiaddl
leave
mov
adc
notb
stos
push
xlat
scas
add
cmc
cmpsl
add
mull
jecxz
sbb
pop
and
lea
repnz
sahf
repz
cli
es
sti
and
cmp
lret
dec
mov
mov
or
cmp
adcl
imul
or
xor
sub
sub
dec
xchg
enter
mov
mov
pushf
xchg
rorb
mov
xchg
jnp
shlb
cmp
mov
pop
insl
cmp
enter
mov
inc
mov
inc
lods
xor
jp
mov
push
dec
movsl
aam
or
and
mov
nop
loopne
jp
mov
sbb
clc
cmp
lds
sbb
cmpsb
out
repz
xor
addb
sbb
mov
xchg
les
idivb
pop
xchg
push
adc
testb
cmp
push
das
cs
cld
inc
addr16
jg
add
popf
arpl
test
popa
icebp
lret
inc
jnp
in
pusha
jecxz
inc
insl
cmp
bound
scas
mov
dec
inc
lahf
dec
push
mov
stc
dec
neg
mov
lret
arpl
cmpsb
test
push
cmp
mov
cmpsb
das
hlt
sbb
adc
loop
pop
rcll
addr16
subl
sub
sbb
pop
cmpsl
mov
in
push
mov
mov
jl,pt
inc
and
enter
fcomip
mov
fcoms
adc
ret
in
pop
and
pop
mov
mov
mov
fs
and
int3
and
jb
fbstp
js
sbb
jl,pn
lods
insb
ret
dec
jbe
loop
pop
scas
mov
shll
jmp
lea
push
jne
pop
stc
push
fistl
fistpl
pop
cmc
loop
mov
scas
sbb
stc
pop
xchg
dec
hlt
jle
pop
lods
push
or
insl
dec
insb
mov
mov
inc
adc
mov
mov
lock
shr
or
call
or
scas
cmp
mov
sti
aaa
sub
cmpb
jle
push
cmpsb
test
sarl
jo
sub
xchg
add
scas
jl
movsl
inc
movsl
xchg
dec
popa
and
pop
cltd
and
push
push
sbb
cmpsl
adc
rorl
lods
jne
cwtl
fcoml
cmp
inc
and
aas
push
adc
and
aam
mov
mov
fldl
inc
getsec
repnz
cmp
ret
xor
push
cmp
sbb
sbb
and
add
mov
and
mov
stos
shll
lahf
xchg
adc
mov
push
fs
movsb
cmp
sarl
dec
mov
sub
mov
sbb
mov
xchg
xor
add
and
jbe
cwtl
dec
into
out
mov
push
add
cmp
push
aaa
xor
or
cmpsl
mov
movsb
xchg
and
and
in
ret
pop
inc
test
fldl
std
adc
popf
call
adc
xor
pop
out
mov
push
mov
int3
pop
ret
loop
add
js
xchg
mov
mov
and
mov
scas
imul
xchg
jecxz
cli
test
pusha
andb
shll
enter
sub
mov
pop
into
push
dec
jne
ficoml
or
dec
pop
mov
or
mov
loope
jmp
mov
cld
mov
in
lods
ret
lcall
push
fcoml
test
iret
shl
push
xorb
fnstenv
out
out
add
aam
les
into
lcall
scas
leave
add
pop
jno
popa
mov
ja
repnz
add
or
jge
mov
cltd
push
in
pop
int3
repnz
xchg
stos
lock
mov
icebp
mov
mov
and
jae
mov
push
subb
inc
fnstsw
ljmp
ljmp
xchg
mov
or
icebp
popa
pusha
pop
mov
loop
push
insb
or
bound
jnp
mov
jno
je
das
cmpb
lods
xor
aad
shl
std
push
add
pushf
lock
lea
dec
jecxz
out
enter
repz
adcl
add
add
gs
jp
xor
or
jecxz
xor
jl
movsb
cmp
mov
rorl
inc
xchg
notb
and
stos
jne
pop
cmp
mov
int3
adc
or
cmp
movsb
adc
xlat
cmp
or
aad
push
fisubs
sarb
push
mov
not
pop
mov
mov
adc
nop
sub
insl
sub
rcrb
jecxz
mov
push
pop
movsl
inc
jnp
hlt
mov
cmpsb
rorb
cs
mov
pop
test
inc
rcrl
sbb
mov
xchg
cmp
push
xor
jmp
stos
subb
mov
mov
and
flds
mov
and
pop
loop
jbe
cwtl
mov
pop
jbe
pop
loopne
hlt
push
pop
int
cmp
popf
jns
test
ja
add
add
cmpsb
xchg
pop
push
inc
push
out
scas
adc
jb,pn
jno
push
pop
xchg
pusha
lcall
xor
push
das
loop
lods
pusha
test
or
in
repnz
ja
rcll
adc
and
lret
repnz
mov
nop
bound
or
inc
adc
jb
mov
xchg
jg
and
mov
pslld
jo
push
xor
jo
sbb
je
mov
dec
movsl
pop
jge
pop
test
popf
mov
inc
pop
aad
stos
and
lahf
cli
std
shlb
push
push
mov
sub
lret
mov
push
pushf
in
cmp
jns
addr16
daa
gs
lds
push
in
outsb
leave
js
push
adc
arpl
jnp
lahf
inc
mov
and
int3
jg
sbb
fisttpl
outsl
shl
lods
xchg
push
pop
or
punpcklbw
sub
aaa
insl
sbb
add
hlt
loopne
mov
pop
mov
xchg
inc
aam
cmpsb
testl
dec
icebp
mov
push
call
mov
pop
cli
js
sbb
inc
push
xchg
cltd
mov
gs
pop
mov
or
adc
or
or
repz
jmp
stos
sub
in
jns
das
and
sbb
push
leave
push
sbb
cmp
imull
lds
xchg
in
push
sbb
or
jge
xchg
scas
dec
sub
testb
inc
mov
dec
sub
fidivrs
rolb
loopne
jbe
jbe
dec
xor
int
mov
shl
mov
pushf
pop
mov
push
enter
lods
mov
ret
ds
pop
popl
and
jns
aaa
lea
sbb
jmp
test
jns
les
aam
pop
pop
sbb
adc
sub
int3
repnz
mov
mov
icebp
gs
or
xor
inc
les
cmp
je
jno
test
nop
stos
adc
dec
lea
cmp
push
dec
fldenv
pop
out
loope
adc
lds
mov
or
ljmp
gs
mov
xchg
or
and
sub
push
stos
xchg
lcall
sbb
push
dec
xchg
cmp
cli
cmpsb
jne
lret
pop
test
sbb
mov
mov
scas
in
pop
in
mov
popa
inc
jns
notl
les
lds
rorl
sahf
rorb
dec
inc
imul
or
int
pushf
adc
sti
jno
push
dec
or
rcll
cmp
pop
popa
outsb
push
adc
and
out
cmp
sub
mov
mov
mov
pop
dec
push
call
mov
or
fsts
and
lods
pushl
inc
sub
leave
popa
push
add
lds
lret
jb
push
mov
push
cli
les
and
xor
stos
sbb
and
into
aas
fistl
push
inc
adc
mov
and
xchg
enter
vcvtpd2ps
sub
subl
ror
nop
fisubrs
cmp
clc
mov
jnp
dec
adcl
mov
jne
out
loope
in
ss
stos
addl
out
dec
mov
les
repz
add
or
sbb
xor
std
jns
aad
fmull
jb
mov
sbb
in
xchg
dec
icebp
sbb
insb
sbb
pop
push
jb
rcrb
into
jmp
mov
add
sub
int3
sub
inc
add
inc
popa
add
mov
repz
mov
pop
and
xchg
sub
adc
inc
mul
mov
hlt
popf
les
out
lret
sub
sbb
sub
js
sbb
out
std
cld
mov
mul
repnz
mov
in
sti
adcb
pop
push
push
pop
cmpsb
and
pop
nop
mov
lcall
enter
jle
and
fidivl
dec
ficoml
xor
jo
repnz
add
nop
movsl
or
sti
and
mov
ret
cmp
pop
push
dec
xchg
sbb
testb
ret
scas
cwtl
or
jmp
nop
mov
test
pop
pop
lahf
loopne
cbtw
mov
xor
aaa
std
xchg
pop
sub
jle
out
push
testl
insl
push
les
push
addr16
or
lret
adc
xlat
jns
cmp
ljmp
inc
test
testl
add
mov
mov
ret
test
mov
push
test
mov
xor
push
daa
push
xor
and
adc
das
mov
cmc
frstor
loope
push
jge
mov
lcall
out
dec
gs
outsb
lods
daa
es
jae
sarb
gs
imul
das
jg
aas
xor
pop
jmp
stos
insb
sbb
fisttpl
cs
and
xor
loop
and
loopne
mov
adc
insl
adc
outsl
loope
testl
fldenv
pop
scas
sti
subl
sub
pop
rcr
or
orb
inc
sbb
aad
cmpsl
ds
cmp
or
in
fsubl
jns
jae
aaa
dec
xchg
cmpsb
jg
or
xor
or
test
cld
int
lahf
or
ficomps
mov
push
pop
inc
pop
gs
js
rorl
sti
mov
mov
mov
dec
pop
sub
cmpsl
push
push
sahf
in
inc
pop
jne
outsb
jne
aad
mov
pop
stos
loop
jge
das
dec
movsb
jg
add
shlb
push
mov
and
jnp
lcall
or
jo
mov
pop
mov
int3
cmp
daa
pop
jne
and
xchg
jbe
out
xor
inc
or
adc
sbb
pop
inc
xchg
loop
lods
dec
sub
xchg
or
vunpckhps
stos
clc
add
sub
shrb
mov
sub
mov
iret
cs
stos
xchg
fdivs
push
sbb
lods
jno
leave
in
add
pop
and
and
sbb
imul
pop
dec
mov
repnz
or
adc
xlat
test
mov
sbbb
aad
bswap
mov
cmpsb
imul
movsb
jnp
insl
push
popa
and
jg
scas
addr16
pop
fucomp
fcoml
int
fiaddl
call
popl
inc
mov
andl
push
leave
popl
pop
fisubrl
xor
xchg
fucom
bound
push
je
mov
cmc
and
pop
sub
xor
cwtl
dec
shll
test
cld
hlt
xlat
dec
jl
jg
or
in
xor
adc
xor
and
insl
sub
lds
fcmovu
mov
orb
push
jns
jns
or
mov
lea
and
ljmp
jb
ss
xchg
push
sarl
jmp
popa
shlb
jne
outsb
jge
push
sub
push
nop
ds
adc
mov
push
mov
jecxz
scas
mov
lds
pop
sbb
popf
dec
mov
mov
stc
lea
xor
xor
jbe
dec
cmpb
cld
adc
in
fnstcw
push
scas
jnp
xchg
loop
mov
mov
cltd
popf
or
sarb
xor
push
push
cld
adc
punpckldq
lea
dec
fsubrl
or
and
push
dec
jnp
jo
push
sub
fnsave
aam
dec
ret
xchg
lock
int
mull
movsb
dec
jae
jb
jae
fcomp
mov
and
mov
ljmp
call
sti
es
pop
jns
sbb
insb
test
jmp
sti
jmp
or
in
imul
xchg
in
and
jb
sub
das
data16
test
xchg
dec
and
sti
repz
push
setns
add
mov
insl
jle
xor
mov
sbb
dec
mov
adc
pop
xlat
jle
adc
and
popf
es
push
xor
in
fisttpl
xor
jnp
sub
inc
popa
clc
mov
out
dec
ss
sbb
test
or
mov
popf
xchg
cmc
sbbb
jmp
int3
and
lods
insl
and
sbb
pushf
mov
leave
inc
in
mov
cmp
orl
pop
push
xchg
aaa
and
test
inc
cmp
jmp
add
xor
jcxz
add
jne
daa
xchg
sbb
pop
adc
and
movsb
aad
adc
fnstsw
dec
push
out
lcall
test
jo
mov
jno
out
sarb
sub
jns
mulb
sbb
sti
pop
add
icebp
fiadds
dec
adc
insl
jnp
nop
pop
sbb
sbb
out
cwtl
idivb
bound
adc
inc
out
jmp
or
js
in
imul
ret
pusha
pop
movsl
cmpl
jle
add
into
aam
xor
repz
add
mov
jno
jae
inc
pop
mov
shlb
int
xchg
gs
fldt
and
clc
mov
pusha
xlat
adc
enter
into
mov
inc
push
test
lock
jb
lock
dec
clc
xchg
enter
iret
xor
jnp
jmp
push
pop
ret
jg
int3
pop
cmp
ljmp
add
lds
xchg
add
dec
fisubrs
mov
andb
adc
test
inc
push
cmp
inc
sub
mov
dec
jb
sub
aaa
mov
lock
and
sti
aad
pop
cmpl
mov
xor
pop
aam
xchg
fistpl
movsl
int
dec
xchg
loop
clc
mov
pop
shrl
out
lret
test
cs
jl
mov
push
sub
rclb
rcrl
pop
stos
movsb
int3
sbb
ljmp
mov
inc
das
push
or
ljmp
xor
jno
std
push
rcr
cmp
xor
dec
leave
mov
pop
pop
push
pop
ret
fiadds
orb
jbe
shll
xor
call
mov
dec
into
sarb
push
orb
out
shl
dec
push
popf
sub
adc
movsb
or
js
mov
inc
mov
clc
pop
push
push
inc
jns
popa
sbb
out
clc
clc
cvtdq2ps
inc
iret
or
pusha
and
pop
in
add
fnstenv
cmpsb
cmp
xchg
or
sub
pop
push
imul
pop
push
bound
ret
mov
and
aaa
ja
pop
ror
jb
cmp
imul
push
push
ljmp
mov
out
lock
pop
push
wrmsr
lods
scas
out
rorl
xor
pop
in
scas
dec
movsl
in
xchg
fwait
sub
sbb
adc
mov
hlt
test
mov
adcb
mov
mov
push
jp
or
cmpl
movsl
xchg
les
jecxz
adc
sti
fsubs
mov
lret
mov
push
push
mov
stos
sub
aaa
ret
add
push
mov
sbbl
mov
inc
lret
lock
jp
imul
mov
cli
popa
cltd
aad
cmp
adc
cmp
scas
orb
mov
ds
jnp
cmp
fistps
test
outsl
cmpsl
mov
xor
aas
or
inc
add
rclb
push
sub
movsl
push
jp,pt
cmp
ficompl
mov
jns
jge
dec
aad
movl
xlat
std
mov
inc
lods
sbb
dec
and
pop
pop
sub
xchg
push
mov
push
jl
xlat
out
add
leave
dec
fwait
xchg
out
test
xchg
mov
cmovno
pop
ljmp
or
iret
ss
jns
popl
and
jge
fcoml
mov
je
or
adc
lea
xor
loopne
pop
pop
cmpsb
lahf
mov
and
mov
aad
inc
or
pop
dec
mov
xlat
ficompl
insl
add
bound
dec
lret
adc
frstor
pop
cmp
jno
aam
inc
cwtl
jns
xor
lret
test
sbb
ss
stos
fdivr
xor
aad
movsb
cmp
mov
add
mov
mov
push
inc
mov
repz
negw
mov
xor
jb
ret
lods
add
enter
or
loope
fcomip
in
pop
xlat
js
mov
rcrl
mov
arpl
int3
mov
adc
mov
xor
hlt
fdivrl
jno
int
jle
ret
mov
fs
pop
loope
xchg
mov
mov
aam
mov
popf
stc
mov
setb
xlat
jg
cli
cmp
ja
xchg
out
subb
xor
clc
xchg
or
and
sbb
push
aaa
scas
adc
loope
sub
mov
sarb
mov
ret
dec
mov
dec
mov
sub
loop
inc
jg
mov
mov
inc
fildll
mov
fidivrs
mov
cs
test
mov
rorb
mov
insl
cmp
xchg
dec
loopne
pop
pop
dec
pop
mov
mov
insb
enter
jmp
xor
popa
jg
testl
ljmp
shr
shll
jl
mov
dec
ja
or
sbb
or
jge
les
lods
mov
xchg
les
cmp
cmpb
notl
sbb
pop
pop
jne
dec
and
and
lods
das
js
cmc
inc
or
dec
pushf
sahf
pop
pop
sbb
mov
jbe
cs
inc
sbb
xor
icebp
popf
loope
insb
xor
sbb
or
xor
adc
push
mov
call
cmp
fdivrl
pushf
sub
clc
sti
mov
pop
xchg
cmp
inc
jbe
sahf
sub
xchg
lods
xor
mov
jp
fdivs
shll
adc
pop
push
or
sub
xchg
dec
sub
test
sbb
int
movsl
mov
scas
push
subb
repz
sub
or
pop
adc
cmpl
out
add
push
dec
in
jbe
and
inc
mov
call
lods
xchg
iret
mov
xchg
fimuls
lods
dec
xchg
popa
jnp
std
shrl
repnz
jno
imulb
test
dec
out
mov
outsl
jo
lahf
idivl
add
out
and
cli
mov
add
cs
and
cltd
or
or
jae
cs
rcrb
loope
or
cmpb
inc
int3
sub
je
repz
pop
shlb
push
fcomps
lods
fsts
sti
testb
jnp
add
xor
iret
cmpsl
movsl
inc
movsl
mov
mov
cmp
sbb
cmp
and
ja
es
or
xor
sbb
push
fwait
out
add
push
sub
sub
imul
out
popf
cmpsl
jnp
mov
adc
es
les
dec
stc
sub
stc
cmp
insl
leave
rorb
pop
mov
xchg
xchg
jmp
fwait
mov
cmp
loop
std
into
nop
lahf
cld
mov
jl
outsl
inc
popf
adc
mov
dec
aam
lods
jne
lods
scas
sub
cltd
jmp
rcl
insb
xchg
mov
scas
aad
push
cwtl
add
and
push
into
xor
cmp
adc
icebp
push
sub
xchg
arpl
mov
ss
dec
leavew
jecxz
xorl
or
mov
std
test
clc
mov
pusha
xor
div
stos
xchg
inc
fs
push
gs
int
out
es
cmc
and
pop
ss
or
mov
es
cmpsl
aam
in
insl
xchg
xchg
popf
cmp
popf
lock
add
iret
sub
inc
test
mov
cmpsb
dec
imul
cltd
jl
and
fstpt
mov
jb
std
mov
aas
dec
inc
jge
push
notl
push
push
jae
in
fidivrs
out
or
std
jb
data16
jnp
call
sbb
or
adcb
xchg
add
movsl
ret
mov
and
mov
adc
adc
shrb
dec
outsb
cmp
or
push
lds
cmp
cmp
movsl
sbb
dec
push
lahf
and
or
xor
xchg
iret
and
adc
loop
rol
push
loop
mov
xchg
fcmovnu
addr16
cltd
or
dec
cmp
pop
das
cmp
dec
imul
pop
cmp
imul
repz
adc
jne
push
dec
xchg
sub
aaa
movb
sub
mov
jge
push
xor
insb
mov
pop
push
cltd
pop
repz
push
cmpb
adc
rorl
jns
mov
mov
fnstsw
dec
jno
sub
or
jbe
int
add
out
mov
xchg
pushf
insb
sbb
sub
inc
and
addr16
bnd
lods
jne
aas
xchg
jbe
neg
lods
and
inc
jge
mov
lcall
ljmp
fdivr
or
out
mov
xor
popf
addb
sbb
sbb
pop
add
fadds
adc
les
xchg
sbb
insb
test
in
push
cltd
repz
jecxz
mov
f2xm1
sti
fstps
inc
mov
jg
les
push
push
jnp
jl
cmp
dec
adc
cmpsb
inc
mov
jns
push
pop
sub
cmpsl
push
push
xchg
inc
enter
inc
jno
out
sub
data16
and
aad
addb
cwtl
jecxz
cmp
sub
adc
aaa
mov
rcrb
aas
xor
adc
daa
jmp
jne
lock
sub
mov
or
inc
inc
arpl
cmp
or
sbb
jns
add
rclb
pop
lods
cli
mov
pop
lock
push
test
or
cmpsb
adc
ret
das
cmp
gs
stos
mov
and
scas
insb
adc
cmp
scas
xor
add
inc
push
aas
pop
testl
sub
inc
pusha
jmp
sarb
arpl
cld
adc
cli
pushf
inc
ja
pop
dec
jbe
into
pop
xor
mov
jmp
cld
add
mov
pop
es
std
pop
scas
pushf
ror
cmpsl
and
leave
add
mov
iret
sbb
or
push
cmpsb
idivb
into
and
mov
add
fucom
cwtl
mov
les
outsb
call
cmpsb
xchg
or
scas
pop
xor
lods
xlat
das
ret
dec
jo
cltd
jmp
mov
or
jmp
enter
lods
and
xlat
inc
pop
xor
lret
and
pop
sbb
out
gs
clc
and
push
into
iret
dec
jno
ds
scas
pusha
cld
clc
in
cmpsb
movsl
mov
stos
loop
mov
jmp
inc
in
into
data16
data16
push
sbb
nop
sbbb
jns
pop
or
sub
repnz
xor
push
and
jo
or
cmc
lret
cmc
scas
jbe
mov
arpl
sahf
mov
cltd
mov
xchg
les
loopne
lcall
inc
and
das
mov
add
stos
dec
sahf
movsb
leave
in
insb
jl
in
lcall
and
xor
hlt
scas
mov
fnsave
jbe
scas
lret
lods
xlat
xchg
pop
sbbb
loop
jns
jge
and
pop
dec
pop
inc
mov
data16
mov
ss
mov
fwait
add
mov
jb
jb
imul
loopne
es
imul
mov
jl
test
loop
inc
add
inc
pop
sub
adc
pop
inc
and
cmpsl
mov
loope
sub
inc
pushf
cmp
lcall
imul
ret
xchg
jl
je
sub
hlt
test
mov
and
push
rcll
push
adcl
add
das
pop
shll
in
loope
aad
les
dec
cli
hlt
divb
mov
iret
pop
imul
roll
insb
pushf
sub
jmp
cmc
lret
or
test
cmp
mov
stos
hlt
movsl
or
add
fs
pusha
pop
adc
in
jbe
inc
sub
mov
js
ss
in
inc
pop
mov
aas
mov
out
shlb
or
fdivr
ds
pop
cltd
lret
mov
pop
int3
inc
mov
adc
dec
pop
mov
xor
pop
sub
std
andb
ss
xchg
mov
std
aas
xchg
cmp
jg
push
adc
cmp
cmpsl
push
in
push
inc
clc
pop
or
ljmp
pop
inc
dec
test
fcompl
insl
mov
popf
data16
xor
inc
call
sti
sarb
cli
push
dec
push
dec
out
add
lock
and
fistps
lods
cmc
jnp
addb
sbb
aad
xor
mov
sbb
imul
sbb
adc
dec
jg
dec
push
pop
cmc
rcrl
stc
add
stc
cmp
mov
add
dec
pop
sbb
test
paddd
push
dec
aam
xchg
cwtl
xchg
cmp
js
ret
xor
inc
imulb
pop
scas
mov
dec
sbb
enter
dec
cwtl
lock
jae
cld
pop
fiaddl
popa
push
lret
aaa
out
outsl
add
mov
inc
dec
and
and
sti
rcrb
inc
inc
std
test
add
cld
dec
xor
fwait
test
mov
or
xchg
mov
and
and
arpl
dec
and
lods
pusha
test
aas
add
mov
jle
push
pop
sub
call
shrl
push
mov
bound
add
cmp
push
push
das
mov
sbb
adc
push
jae
out
add
dec
mov
push
xchg
pop
mov
and
les
mov
clc
push
mov
test
ja
outsl
dec
out
add
popf
jno
out
pusha
cmc
xchg
lret
mov
rcll
add
add
pop
add
ret
xacquire
mov
mul
add
mov
or
or
add
xchg
adc
loope
jb
mov
popf
inc
xchg
pop
shrl
fisttps
or
insb
in
dec
aad
push
rorl
nop
push
pop
out
jb
lds
xor
push
scas
ret
xor
test
sub
mov
push
xchg
std
sub
pop
ja
cmp
adcl
sub
mov
lret
popf
inc
in
add
xchg
xor
shr
or
icebp
mov
add
cmpb
adc
inc
mov
xchg
pop
mov
inc
inc
lret
stos
std
mov
mov
lods
mov
pop
xchg
sbb
sbb
cmp
ficomps
and
mov
sbb
and
push
sbb
xchg
jne
icebp
add
xchg
pop
out
mov
push
addr16
gs
or
ss
push
pusha
mov
and
xor
xchg
in
mov
sbb
inc
mov
cld
cmp
imull
xlat
imul
iret
leave
jle
xor
mov
sub
mov
ficoml
xchg
or
jns
push
test
cmc
pushf
xor
xchg
mov
stos
lcall
inc
xchg
pop
push
lds
pop
jae
shll
cld
lret
xchg
popf
xlat
sahf
inc
or
inc
scas
push
ret
mov
pop
mov
jmp
cmp
je
dec
jp
loope
xorl
pop
in
call
dec
test
xchg
int3
and
mov
lods
inc
cmp
sub
mov
and
mov
and
adc
cmp
inc
fdivrl
sbb
in
cli
sahf
xor
ficoml
and
push
and
in
movsb
sub
roll
cli
mov
cmpb
addb
test
sbbb
mov
stos
cli
add
int
adc
add
jmp
xchg
lods
mov
inc
add
dec
stos
adc
out
and
inc
sub
mov
sbb
xor
out
jmp
in
mov
ja
arpl
out
dec
mov
aam
jo
jb
xchg
xor
fnstenv
fwait
xchg
stos
xor
pop
pusha
repz
cmp
add
dec
xchg
sub
xchg
and
dec
sbb
mov
in
sbb
test
ret
mov
or
pop
jmp
popf
xor
cltd
out
test
subl
xor
rorl
add
xor
imul
test
dec
sub
fmull
hlt
mov
mov
jns
xchg
ljmp
push
data16
inc
jl
cmp
sbb
loopne
inc
pop
rcrb
mov
dec
dec
fisubl
xchg
test
cmp
into
lods
xor
pop
fs
cmp
jle
jb
cmp
inc
adc
xchg
xor
sarl
pusha
dec
out
mov
xchg
jbe
and
movsl
sbb
mov
test
rcrb
mov
xchg
or
fiaddl
mov
cmc
dec
mov
sahf
cmc
jmp
ret
pop
sbb
sub
cli
outsl
cs
in
cmc
repz
and
std
dec
pop
xor
jl
fs
adc
orl
push
pop
out
shl
xchg
cmp
lods
adc
mov
add
mov
ss
sarl
hlt
cmp
call
dec
push
add
push
jge
and
ret
cli
sub
testb
fcomps
or
pop
test
nop
or
pop
add
dec
test
repnz
mov
pop
shl
movsl
pop
ret
cmp
lods
test
xchg
ds
mov
dec
push
pushf
pop
cmp
jle
popa
into
mov
int3
movsl
sub
std
aad
lock
cmpsb
mov
out
dec
xor
mov
ret
push
push
pop
xor
andb
mov
pushf
mov
and
pop
inc
cli
rcrl
sub
roll
and
les
xor
jb
mov
inc
mov
std
bnd
loop
sti
fs
pop
ljmp
lcall
xchg
fld1
dec
cwtl
cs
bound
mov
push
aaa
dec
sti
scas
negl
loopne
insb
data16
jecxz
xor
inc
orl
in
nop
nop
push
mov
pop
hlt
jnp
jno
push
dec
shlb
pop
dec
adc
insb
mov
xchg
scas
xor
sub
clc
jns
out
rcrb
enter
mov
gs
push
subl
add
pop
icebp
mov
movsl
fwait
add
mov
mov
sub
xor
lock
xchg
xchg
pop
test
cmp
fwait
mov
push
xor
jl
pop
insb
xlat
push
push
cmp
jg
push
push
in
cmovae
dec
lods
pop
xchg
leave
test
lcall
sar
popf
jmp
mov
insl
cltd
mov
hlt
lds
add
push
sub
xor
and
aas
mov
lahf
fadds
arpl
dec
imul
pop
add
add
addl
aaa
mov
addb
mov
stos
dec
jecxz
sbb
movsl
hlt
xor
js
fisubrs
jo
pop
sub
pushf
push
test
ret
int
std
ja
sbbl
clc
mov
enter
pop
psubb
push
leave
addr16
fsub
dec
test
pop
mov
jb
mov
mov
dec
sbb
or
mov
pop
xor
mov
dec
stos
repz
inc
fwait
leave
ret
or
mov
jnp
add
testl
push
xor
jg
cmp
js
insb
iret
or
dec
mov
cmp
mov
sub
std
push
arpl
imul
xor
pop
adc
adc
pop
stos
loop
shlb
mov
dec
je
fbld
mov
stc
xchg
sbb
add
cld
jbe
ljmp
jo
cmp
sahf
inc
and
mov
mov
dec
cltd
out
out
mov
cltd
adc
andl
pushf
inc
xchg
and
push
mov
das
and
scas
aam
negb
jb
ret
and
std
or
or
pop
add
push
subl
int3
mov
pushf
ficomps
pop
ljmp
mov
jp
insl
inc
mov
int3
sahf
push
add
adc
pop
sub
nop
cmp
push
repnz
cmp
pop
in
mov
xor
in
or
aam
sti
sub
stos
dec
repnz
push
cli
cmp
dec
std
lods
dec
bound
into
int3
mov
lock
sbb
jecxz
das
pusha
imul
lret
in
jb
les
mov
sbbb
mov
adc
mov
dec
lds
loopne
daa
fs
xchg
push
in
push
mov
and
cmp
adcl
shlb
popf
push
push
pop
or
jae
data16
adc
adc
ja
iret
mov
sub
inc
lea
xor
insl
fldenv
push
rclb
mov
std
neg
dec
lds
pop
mov
popf
mov
mov
push
bound
in
push
xchg
dec
adc
icebp
loope
fldl
mov
pushl
xor
mov
decb
out
shll
popa
mov
mov
jne
mov
pop
cwtl
sti
and
sub
or
js
out
mov
or
xorl
test
mov
addr16
pop
out
in
cmp
inc
mov
mov
lock
add
mov
mov
stc
repz
pop
mov
cmp
add
pop
ss
pop
int
xchg
lds
dec
and
fiaddl
push
sub
in
ss
cmpsb
scas
cmc
leave
lahf
ds
jno
gs
pusha
in
dec
cmp
enter
dec
outsb
rorl
mov
sbb
sahf
fsubrl
mov
jns
jnp
xchg
andb
dec
subl
push
xor
repz
pop
test
jns
dec
mov
iret
pop
ret
add
sbb
push
das
and
mov
xchg
rclb
lock
int3
bound
ret
or
xor
pop
arpl
xlat
inc
dec
sub
arpl
or
test
pushf
call
fcom
xchg
inc
std
mov
or
jmp
and
mov
xor
fs
jecxz
xchg
adc
pop
popa
dec
loopne
inc
pop
shlb
sbb
adc
lcall
inc
andl
popa
ret
pushf
lods
les
testl
adc
inc
inc
fists
or
pushf
jmp
insl
and
popa
sbb
add
icebp
or
mov
mov
and
out
sbb
mov
and
or
jbe
pop
xlat
decl
fisttpll
orb
cmp
push
push
in
fistps
jl
mov
lret
rcr
lret
and
cmp
push
jo
xchg
push
iret
das
xchg
xlat
xor
idivb
cmpsb
pop
js
jp
mov
sbb
sbb
js
fsubrl
pop
fdivs
jp
jno
jl
repnz
daa
pushf
pop
mov
fs
out
in
data16
icebp
repz
push
jb
or
popf
mov
mov
inc
jg
mov
sti
or
push
xchg
xor
sbb
inc
xchg
mov
pop
push
jno
fcompl
roll
fistps
push
inc
fsubrp
sbb
jns
xor
pop
icebp
and
jmp
frstor
imul
push
fldl
hlt
movsl
mov
clc
xor
cmp
lods
or
lahf
mov
outsb
sbb
aam
stos
mov
lret
lahf
fistpll
gs
lods
scas
divl
enter
cwtl
jl
xchg
mov
mov
adc
sub
jp
test
hlt
iret
mov
dec
push
dec
cmpsl
push
or
ret
pop
mov
gs
mov
mov
enter
pop
in
lds
in
aaa
dec
or
push
xor
pop
cmp
or
testb
inc
cwtl
cli
pop
mov
adcl
repnz
lods
cmp
adc
or
xor
call
xchg
std
push
arpl
cmpsl
fdivr
push
mov
out
add
mov
pop
je
xchg
lock
stos
mov
lahf
mov
jmp
cmp
rcll
sbb
stc
aaa
or
test
jbe
fs
adc
lock
dec
add
ja
in
lcall
lahf
or
fcmovb
test
cltd
fs
popf
cwtl
push
je
mov
pop
lret
out
push
out
mov
push
lods
or
cmp
mov
xchg
scas
cmpsb
shrb
pop
mov
pop
ret
jb
movsb
pop
imul
push
rcrl
fnstenv
push
add
into
sbb
mov
arpl
incb
pop
int3
push
out
scas
jecxz
mov
popa
test
addr16
aaa
cs
mov
sub
mov
lock
sbb
das
mov
loop
shlb
add
sbb
and
mov
nop
icebp
rcr
push
jecxz
es
adc
rcll
add
test
fisttpl
mov
fwait
xchg
scas
out
lods
push
or
inc
fadd
lcall
inc
movaps
divl
cmp
pop
adc
test
pop
push
add
lcall
mov
rorb
ret
sbb
insb
repnz
cmp
mov
loopne
sbb
inc
xor
pusha
sti
cld
or
icebp
les
add
nop
loopne
mov
pop
jge
gs
decl
cld
je
xchg
sub
pop
mov
mov
inc
mov
xchg
pop
shrb
and
int
icebp
into
jns
stc
xchg
cs
push
aas
xchg
xchg
pop
cmpb
inc
fwait
pushf
movsb
popa
dec
and
cmp
mov
roll
mul
shr
addr16
in
cmp
ljmp
add
xchg
xlat
outsl
ss
ret
adc
cwtl
add
pop
push
fimuls
subl
int
mov
lret
cmp
sub
jne
lds
xor
jecxz
rcrl
cli
inc
jecxz
or
mov
jl
rcrb
and
adc
mov
je
or
push
mov
das
das
cltd
lods
dec
jge
adc
mov
pop
xchg
add
leave
cld
into
lea
cmp
pop
inc
dec
push
and
cld
scas
dec
pop
dec
jbe
mov
out
sahf
fwait
jnp
xor
addr16
jne
inc
cmpsb
std
jno
push
add
jge
pop
ret
jl
cmpsl
cwtl
mov
pusha
dec
xchg
fdivrl
stc
jno
mov
pop
test
add
fwait
dec
sbb
cmp
inc
cld
enter
clc
pop
lret
lock
xor
loopne
push
mov
pop
mov
addr16
mov
inc
movsb
adc
fsubs
sub
js
dec
sbb
mov
repz
fsubrs
and
fiadds
mov
sbb
mov
ds
int3
push
mov
jnp
add
out
stos
jmp
sbb
andl
jmp
bound
mov
ss
xor
cmp
mov
pusha
push
add
add
xor
inc
push
jo
ss
mov
adc
mov
lds
add
jbe
testb
xlat
adc
rcrb
mov
add
adc
cmp
pushf
mov
add
mov
push
dec
adc
mov
loop
in
or
push
jp
fwait
and
lea
sub
cs
stos
jne
pop
adc
fcoml
fcoms
je
sub
inc
pop
lds
js
xchg
scas
aam
sarb
scas
mov
xchg
imul
rcrb
jbe
lcall
pop
sahf
inc
fwait
mov
hlt
adc
mov
das
mov
das
sti
mov
sub
pop
jne
scas
sbb
ljmp
cli
sarb
ds
aad
or
and
add
aaa
xchg
or
lods
dec
cmp
push
sahf
sub
loopne
lea
push
xor
lods
addl
dec
movsb
arpl
loope
jae
int3
push
cmp
or
mov
mov
adc
xor
es
in
inc
mov
and
pushf
push
mov
push
and
je
mov
jge
int
dec
inc
mov
outsb
lret
sub
jp
or
sti
insb
imul
enter
sub
sbb
xor
outsl
cmp
rcrl
lock
inc
pop
mov
xor
fucom
cli
shlb
aaa
and
addr16
jns
popa
adc
adc
pop
or
push
shlb
push
insl
test
call
cmpsb
ja
out
orl
sub
je
xchg
mov
mov
jg
sbb
mov
pop
sub
adc
ret
jbe
pop
test
iret
movsl
add
jb
inc
jge
in
mov
jmp
push
dec
aaa
dec
xchg
pop
dec
jne
mov
add
mov
test
mov
or
adc
mov
pop
cs
fistpll
jg
adc
adc
jmp
dec
mov
into
bound
adcb
enter
inc
mov
fwait
pop
xchg
push
mov
das
sbb
test
dec
push
sbb
pop
add
mov
fs
mov
mov
push
nop
mov
push
add
imul
xor
test
shl
pop
in
aam
push
pop
and
stos
iret
jo
incl
cmp
lock
cmp
sti
std
push
and
cld
subb
push
dec
jnp
in
push
and
cmp
jb
call
lcall
cli
mov
cmpsb
ds
fmulp
test
xor
and
iret
ja
stos
andb
aaa
shrl
mov
pop
lea
inc
sub
lcall
je
dec
dec
mov
mov
dec
cs
push
push
je
or
jo
iret
testb
dec
mov
stos
out
sbb
jo
cwtl
pop
and
fwait
cmpsl
mov
pop
mov
mov
outsb
xlat
jno
xor
enter
cwtl
pop
mov
push
icebp
fwait
mov
mov
aaa
push
subb
test
and
mov
or
push
sub
xorb
aad
jge
pop
dec
jle
cld
lret
or
ss
lods
je
notb
lcall
mov
sub
data16
push
movsb
dec
lahf
lock
shl
pop
xor
jmp
cld
ret
mov
xchg
sub
in
xchg
pop
xor
xor
pop
mov
xorl
les
cmp
sbb
movsb
adc
insl
mov
fs
popa
and
xor
push
sbb
sbb
xor
dec
dec
or
out
and
lea
lea
push
mov
lcall
pop
or
pop
out
jo
jle
in
sarb
and
cmp
test
sub
add
mov
mov
fdivrl
jge
repz
bound
xrelease
push
ds
adc
lock
push
aad
lret
push
push
pop
cltd
xor
clc
adc
addr16
cld
in
mov
loopne
sti
js
aad
push
gs
imul
pop
jmp
mov
xchg
repnz
sub
xchg
mov
mov
jmp
sub
xor
add
push
adc
or
in
mov
and
jmp
sub
push
scas
cmp
fiadds
lods
loope
scas
mov
sbb
out
cwtl
mov
sbb
aas
add
data16
shlb
or
mov
dec
mov
sahf
inc
and
sbb
push
push
inc
test
bound
dec
dec
jecxz
or
xchg
mov
scas
inc
in
adc
fists
push
iret
xchg
jnp
and
dec
lret
stos
lds
fcomps
adc
imul
imul
mov
xor
adc
aaa
push
cltd
mov
stos
icebp
add
fs
fs
dec
inc
dec
cmp
mov
push
bnd
and
aaa
add
daa
fwait
jno
pop
stc
fisttps
repz
sub
pop
pusha
out
mov
xlat
out
cmp
push
push
sbb
pop
mov
aaa
xor
and
ds
push
scas
cmp
push
test
js
imul
testb
pop
fidivl
out
in
push
repnz
dec
cld
cwtl
sbb
es
fs
sbb
adc
rdpmc
inc
push
sub
into
inc
fbstp
lea
push
cmp
or
cmp
repnz
pop
mov
add
adc
lret
sti
stos
loopne
dec
ret
insb
pop
das
adc
mov
pop
mov
insl
mov
je
jb
js
jbe
cli
or
or
jae
sub
mov
mov
mov
scas
outsl
ja
iret
lret
sbb
sbb
sub
loope
sbb
leave
mov
jnp
scas
icebp
or
fdivrl
arpl
xchg
mov
xchg
lods
mov
xchg
cs
jnp
fwait
jp
in
mov
mov
gs
push
aad
popf
loop
outsl
pop
scas
push
pushf
pop
ret
insb
leave
xchg
jno
lcall
lea
dec
sbb
iret
xor
je
stc
divb
pop
daa
mov
pop
pop
push
imul
iret
jbe
adc
lea
xchg
xchg
fisubrs
in
cld
jge
insb
movsb
ss
mov
or
xor
ljmp
cmp
insl
pop
jl
xlat
xchg
sub
push
icebp
fsubl
dec
dec
insl
frstor
aaa
jl
adc
aad
out
nop
push
jecxz
or
leave
jns
mov
sub
inc
ret
test
vpcomuw
inc
mov
icebp
push
push
clc
mov
adc
scas
and
std
jge
push
sbb
cmp
pop
dec
mov
mov
pop
jp
mov
out
out
fwait
mov
inc
dec
jge
outsl
or
jle
mov
push
ja
xor
fcmove
in
mov
sbb
mov
add
sbbl
add
dec
fbstp
adc
stc
jle
stc
bound
mov
daa
js
in
scas
rcl
jp
in
cmp
adc
pushf
add
sbb
addr16
mov
mov
stos
add
add
sti
mov
xchg
inc
sub
call
jg
stc
cmp
imul
int
mov
bound
sarb
cmpb
sbb
inc
lret
jo
push
add
test
mov
bound
js
adc
aas
repnz
sub
nop
ds
adc
shr
mov
push
incb
xchg
out
jg
movsb
and
mov
push
cld
adc
sub
sti
loope
insl
cmp
aam
cmp
lret
xor
cltd
and
cmc
lea
fstps
fwait
cmpsb
stos
idivl
dec
inc
jae
mov
test
ret
lea
sbb
cs
xor
pop
stos
mov
and
dec
fucomp
clc
js
cmp
fld
cwtl
adc
pop
int
cmc
mov
pop
mov
out
mov
sub
mov
lahf
xchg
insb
adc
inc
out
lods
std
dec
jo
sarb
aas
pop
ja
andb
imul
add
pop
mov
out
insl
adc
mov
jge
sbb
lock
arpl
sub
and
lock
popf
xlat
lods
ja
leave
inc
icebp
outsl
cli
mov
xlat
mov
cmc
ljmp
hlt
clc
hlt
test
jno
stos
sbb
in
pop
outsl
xor
je
lret
sti
jmp
mov
mov
mov
xchg
pop
ja
xor
and
popf
add
jge
lods
jo
sahf
xchg
inc
jl
xor
push
fsubrl
sbb
in
cmp
inc
out
lods
test
ret
jmp
ret
adc
add
in
addr16
xchg
popa
xchg
jl
xchg
xor
xchg
cmpsl
fldenv
xor
adc
rcrl
xchg
sbb
mov
in
adc
xor
cmpsb
imul
pmulhw
push
and
arpl
js
bound
repz
jae
fmuls
jmp
mov
aas
inc
xchg
rolb
fcmovne
add
repnz
and
fbstp
jns
addb
je
adc
pop
and
sbb
or
adc
xchg
fdivs
sbb
mov
lcall
arpl
lods
inc
in
jo
jl
xchg
pop
inc
int
pop
lahf
xchg
imul
inc
adc
test
jl
xchg
sub
ret
jne
ret
xor
test
fxch
fbstp
cmp
push
sub
jbe
mov
adc
decb
clc
xchg
mov
int
or
pop
sub
bound
out
repnz
data16
and
adc
in
dec
inc
andl
fnstenv
push
inc
fwait
xchg
jle
and
mov
dec
or
rcr
cmp
and
sub
in
dec
sbb
nop
and
mov
or
js
xchg
dec
jnp
cmp
fldt
or
jnp
into
jo
pop
lret
outsb
insb
push
lahf
jae
fisttps
sbb
ljmp
js
mov
scas
add
jae
add
and
mov
sbb
pop
nop
add
cmp
arpl
jnp
aas
in
xchg
lock
xor
js
lods
loopne
fisttpll
cmp
jb
jno
mov
popf
aam
sbb
xor
nop
pop
cmpsb
cmp
nop
mov
push
outsb
ffreep
test
nop
movd
pop
mov
xchg
push
push
xlat
int
mov
or
cmp
mov
mov
mov
insb
inc
gs
jg
add
outsl
fstpt
add
mov
gs
int
stos
xchg
jmp
sbb
cld
push
test
jl
sub
fdivl
add
nop
je
popf
jcxz
sub
mov
test
sub
push
mov
out
add
cmp
xor
clc
add
cmpsb
cmpsb
pushf
pop
mov
xor
decb
ret
test
pop
and
or
sbb
clc
xchg
push
shl
rcll
ret
sub
arpl
stc
and
sub
add
dec
xor
insb
loopne
mov
dec
and
xor
imul
add
popf
pop
pop
andb
adc
repz
in
xchg
je
sbb
or
xor
mov
fldenv
dec
inc
jge
jle
mov
adc
mov
cmc
dec
push
inc
mov
int
or
sbb
jg
adc
cmpsb
or
out
push
scas
insb
xor
fstpl
mov
icebp
dec
ds
arpl
adcl
xchg
cmp
setnp
das
cmpsb
cmpsl
sbb
dec
mov
push
dec
xor
push
fiaddl
or
cmp
add
sbb
mov
jbe
inc
lock
js
popf
jmp
out
pop
test
sub
fildl
popf
stc
imul
lods
faddl
cld
push
mov
mov
xlat
adc
dec
push
in
inc
mov
jge
dec
frstor
mov
push
leave
or
sbb
xchg
or
pop
loopne
mov
bound
cltd
adc
sub
add
xor
inc
cwtl
or
xchg
mov
mov
mov
pusha
cmp
cmc
rolb
cmp
xor
call
dec
cmc
in
add
lret
es
cmpsb
dec
imul
mov
inc
sub
mov
into
adc
loope
push
ret
testl
jg
in
out
mov
push
mov
sbb
add
int3
ss
pop
xlat
lds
pop
cmp
jo
fwait
sahf
bts
hlt
inc
push
ror
popf
sbb
cmp
mov
ljmp
pop
mov
xchg
mov
inc
pop
pop
cwtl
dec
dec
js
lods
sbb
xchg
outsl
inc
test
add
lret
jp
not
pushl
sub
mov
std
mov
lcall
push
xor
mov
and
lods
cltd
inc
cmp
loope
pop
add
hlt
imul
idivb
push
mov
ja
xchg
pop
add
jbe
pop
push
add
add
and
and
movsb
xchg
int
aas
push
stos
jmp
fisubrs
dec
pop
js
test
lods
fidivl
out
xchg
lahf
jnp
mov
addl
jae
or
cld
fcmovbe
pusha
and
in
sub
xor
scas
adc
pop
clc
mov
aas
das
inc
lea
xchg
xor
jle
cmc
xor
cmp
popa
push
scas
mov
adc
push
leave
mov
cmp
xchg
mov
mov
icebp
push
xor
push
fadds
jb
rol
fisttpll
xchg
movsl
in
sbb
or
mov
js
mov
sub
scas
int
stos
sbb
inc
mov
mov
sarb
adc
sbb
mov
lds
dec
xor
scas
push
scas
mov
jns
push
test
cmp
movsl
hlt
or
inc
inc
xchg
lds
into
outsb
fsts
xor
dec
xor
cmp
loope
push
or
aad
sub
divb
cs
inc
aam
jb
and
clc
outsl
lcall
xor
mov
and
insl
and
lahf
xor
mov
sbb
jns
aas
push
jge
enter
and
jns
push
mov
and
pop
xor
cmc
ret
cmp
dec
sbb
adc
lods
push
fisubs
lcall
mov
popf
or
xor
test
test
cmovge
push
les
cmp
sti
out
pop
sub
roll
cltd
inc
dec
or
out
mov
orl
mov
xchg
fsubrs
fistl
or
dec
int3
and
pop
imul
push
adc
pop
in
les
rorl
imul
sub
and
in
cld
adc
jb
pop
mov
sub
xchg
ja
sub
shlb
and
pop
lods
int3
push
or
push
cmpsl
and
sbb
int3
cmp
jnp
insb
mov
sub
or
jg
cmp
mov
lea
sub
mov
jne
and
movsl
jge
inc
popf
jb
mov
mov
aaa
sbb
jge
daa
sub
in
loop
lock
and
fmuls
pop
add
std
cmpsb
lcall
lret
lret
sub
or
ljmp
jmp
and
lods
std
or
or
dec
ljmp
jg
iret
xchg
sar
jle
out
xor
pop
xor
imul
pop
les
ret
mov
add
ret
aas
inc
jmp
cmp
cmp
push
addr16
out
clc
gs
mov
adcl
fldl
mov
decl
in
call
icebp
es
sub
cwtl
pop
shll
xor
inc
pop
test
pop
sub
sbb
sub
jecxz
test
dec
xor
sub
push
test
mov
scas
repnz
mov
adc
mov
pusha
and
leave
and
dec
add
push
popf
cwtl
int3
mov
jbe
movsb
aad
sbbl
lahf
leave
xor
add
stos
insl
inc
aam
fnsave
ss
data16
hlt
subb
out
push
arpl
and
in
clc
mov
pop
cwtl
mov
mov
leave
dec
in
sbb
std
imulb
inc
daa
rcll
insb
jbe
xchg
sti
xchg
sbb
jg
xorb
imul
aad
mov
mov
ficomps
dec
ljmp
sub
gs
cmc
dec
xchg
and
icebp
jp
inc
rcrb
loopne
mov
sarb
push
and
fwait
dec
add
jge
jecxz
dec
icebp
sub
xlat
je
xchg
adc
hlt
std
xor
ret
movsl
vcmppd
push
mov
ret
mov
push
movsl
dec
mov
adc
test
push
inc
mov
std
mov
jno
xchg
outsb
test
xchg
mov
and
push
aaa
popa
stos
scas
gs
divl
jae
and
in
and
xchg
decl
jne
das
out
lret
push
xchg
cmp
movsb
dec
sbb
imul
dec
lcall
cltd
mov
jb
fsub
stos
pop
orb
inc
movsl
dec
pop
das
mov
push
pushf
enter
jmp
dec
jae
out
enter
cmovs
jnp
mov
push
mov
test
popf
sub
test
in
push
iret
jne
cmp
popa
loop
jmp
negb
cli
shrl
movb
or
pusha
xor
sub
jns
cmpsb
adc
push
xor
ss
xlat
xchg
xchg
pop
jp
aas
orl
mov
push
mov
mov
fcmove
or
sbb
test
and
lret
sbb
dec
loop
ret
jg
jbe
inc
mov
mov
add
xchg
sub
enter
testl
js
add
ds
js
popf
sahf
ds
fnstcw
jmp
and
fmuls
ret
inc
sub
cmp
es
adc
leave
movsl
jnp
aas
in
pop
stc
sbb
xor
mov
xchg
cmpsb
mov
lods
xchg
sbb
push
inc
cmpsb
outsl
cmpsb
aas
sahf
in
in
stos
sbb
mov
out
pop
dec
outsb
leave
and
mov
hlt
lcall
test
cmc
inc
inc
outsl
jne
in
ret
push
jbe
shl
lods
mov
repnz
shl
mov
sbb
lcall
insb
stos
mov
fcoml
out
mov
jge
lret
pop
inc
sbb
scas
dec
and
out
rcrl
inc
inc
cmc
sub
mov
stos
pop
daa
push
push
daa
push
fcmovb
rcrb
fmuls
scas
adc
jno
adc
data16
pop
xchg
loop
and
loop
xchg
add
out
pop
pop
dec
dec
push
lret
in
insb
dec
adc
lds
orl
fbstp
adc
sbb
xchg
bound
jno
push
jecxz
imul
lret
pop
in
popa
stc
cmc
out
jns
pop
sbb
clc
fimuls
enter
and
pop
aas
out
jnp
push
lods
xor
in
xlat
mov
sub
mov
dec
dec
loopne
repz
ljmp
xlat
mov
neg
push
sub
rclb
push
fisubrl
test
mov
in
inc
dec
push
fsubrs
mov
xchg
loopne
push
jge
pop
sti
test
lock
shrl
pop
xchg
jne
in
icebp
arpl
shr
pusha
mov
push
incb
leave
scas
fiaddl
shll
mov
fldt
inc
and
icebp
gs
lock
insb
jne
aas
repnz
pop
les
scas
fmull
inc
pop
in
fucom
dec
mov
push
sahf
repnz
fwait
lock
lods
aam
les
lds
idivl
jmp
push
stos
lods
out
xor
adc
xchg
sub
inc
cwtl
pop
pop
cmpsb
comiss
clc
and
call
enter
dec
xchg
jnp
jecxz
jno
jae
pop
xchg
shrb
repnz
ret
sbb
jnp
fistpl
fxch
int
xchg
lcall
mov
out
lds
shlb
mov
cmp
push
sub
int
in
aam
xor
addr16
cmpsb
push
sub
mov
mov
sahf
or
daa
push
fildll
shll
lret
sbb
cmpsb
add
loope
test
cmc
and
pop
pop
rcrb
jne
shl
sbb
sahf
call
in
mov
pop
js
adc
stc
imulb
pop
add
and
or
jecxz
pop
lcall
dec
and
mov
loope
push
into
mov
sub
sti
incl
cmp
sbb
in
or
or
lock
lods
les
jnp
xor
cli
movsl
cli
or
dec
call
xchg
fcoml
or
ss
sub
sbb
sub
sub
pusha
push
into
mov
scas
test
xor
aad
add
mov
jo
inc
int
dec
lcall
fcmovnbe
hlt
jo
xchg
mov
mov
cmp
sbb
and
fnsave
pop
mov
and
jge
subb
enter
xorb
sbb
mov
cmp
dec
pusha
xor
jb
pop
aam
mov
sbb
cltd
shrl
add
hlt
outsl
pop
jno
outsl
add
dec
or
jmp
es
cltd
cmpsb
inc
add
dec
and
push
adc
push
sbb
outsb
mov
ret
repz
cmc
aaa
pop
inc
test
mov
push
ja
int
mov
adc
add
lret
addr16
xacquire
ror
mov
xor
fucomi
jo
mov
mov
push
outsl
inc
mov
or
push
push
cli
icebp
xchg
push
cmp
out
xlat
or
mov
adc
repz
idivl
dec
or
add
cmp
leave
pop
pop
xchg
rcrb
cltd
in
xor
lods
scas
lret
orb
sbb
js
aas
mov
std
cltd
push
repz
xor
adc
pop
fld
clc
mov
aad
jae
mov
cmpsb
or
cli
cmp
lock
ljmp
mov
sbb
jb
fildll
aam
pusha
test
sar
mov
out
add
fbld
mov
out
add
stos
bts
insb
push
sbb
popf
adc
clc
push
inc
stos
pop
gs
mov
popa
enter
inc
mov
int3
popf
adc
adc
pop
and
movsb
icebp
mov
and
shrb
or
rol
sbb
in
test
adc
pop
sub
stos
inc
add
mov
jo
out
sahf
dec
movsl
mov
in
mov
sub
fldenv
test
inc
push
das
pop
mov
xor
xchg
shr
inc
adc
xor
imul
movsb
push
mov
inc
cmp
loopne
lret
sbb
sbb
mov
push
stos
jo
stos
popf
xchg
adc
push
or
negl
out
adc
pop
jmp
lods
movsb
mov
and
cmpsb
jne
sbb
lods
jp
std
lret
mov
adc
in
cmp
sub
test
pop
lods
xorb
ret
cli
sbb
mov
cmp
mov
in
xchg
pop
stc
pop
cmp
popf
cmpsl
mov
push
inc
mov
test
mov
xchg
leave
and
cmpl
repnz
je
fdivs
fwait
test
scas
pop
jne
fldt
sbb
cli
xchg
sub
popf
pop
ljmp
add
pop
inc
fsubrl
inc
mov
int3
test
jg
popa
dec
inc
ret
subb
int3
mov
lcall
cmp
icebp
leave
jnp
sbb
imul
cmp
rol
lea
in
sub
pusha
lahf
lret
sbb
mov
bound
cmc
jns
pop
stos
insb
jle
cwtd
mov
and
xor
sbb
mov
adc
mov
lahf
mov
mov
rorb
fstp
bswap
ficoms
jo
fstpt
cmp
adcb
mov
and
xor
out
xchg
in
gs
pop
and
cld
loope
shr
mov
sahf
cmpsb
lock
sub
xchg
sbb
pop
out
lods
mov
gs
in
cmpsb
scas
jb
and
cs
pop
lcall
dec
pop
adc
adc
arpl
xor
and
mov
xchg
loope
push
add
push
push
arpl
mov
xor
sub
push
mov
mov
in
mov
loop
cmp
mov
jo
in
cli
imul
insb
pop
cwtl
andb
fiaddl
sbb
cmp
je
iret
push
ret
xchg
and
xor
mov
in
scas
mov
inc
inc
sbb
adc
loop
dec
in
mov
ret
stc
aaa
cwtl
push
popa
jecxz
fisubrl
push
xchg
push
inc
and
cwtl
orl
loopne
cld
fldenv
cmp
inc
and
xlat
mov
pop
xor
repz
int
or
cmp
addr16
and
or
dec
shll
enter
aaa
push
pop
push
jge
nop
clc
lcall
adc
loope
or
sub
adc
jb
das
fdivl
pop
cld
stc
push
xor
nop
jl
sbb
aad
cmpsl
shll
pop
add
xor
hlt
or
aas
add
je
inc
in
daa
sub
stc
insb
shrb
in
int3
xchg
test
mov
cmp
inc
or
das
pop
mov
mov
orl
pop
jne
xchg
or
adc
mov
cmp
je
sbb
inc
test
scas
sub
loopne
rcrb
and
xor
and
lock
or
mov
mov
idivl
add
adc
inc
cmp
pop
mov
inc
lea
sbb
mov
dec
adc
push
pop
aas
fildll
sub
cmp
xchg
outsl
mov
sub
je
adc
test
push
rcll
dec
xchg
cmpsb
adc
pop
push
pop
pop
dec
mov
or
cmpsl
adc
lea
shll
mov
and
cmp
std
jns
loopne
pop
fs
cmpsl
xor
or
mov
idivb
mov
nop
repnz
jp
andb
outsl
pop
jae
cmpb
pushf
test
or
loopne
dec
incb
cmpsl
cmpsb
hlt
dec
loopne
lcall
push
push
ret
mov
pop
pushf
test
or
inc
cmp
push
movsb
jbe
xchg
shr
adc
rcl
mov
es
cmp
push
cmc
cmp
push
in
je
xor
sub
insl
inc
loop
insl
insb
push
push
rcr
mov
cmpsb
out
or
xchg
push
mov
adcl
fsubrl
mov
push
daa
xlat
inc
adc
lods
cmp
sbb
out
push
inc
xchg
push
push
hlt
gs
jbe
adc
or
insl
xor
add
inc
out
lods
mov
lret
out
imul
int3
fimuls
jmp
sarb
cmc
mov
jp
or
mov
mull
sub
mov
inc
sahf
lret
shll
jae
int
add
jne
std
roll
sub
xor
add
daa
insl
inc
pop
mov
pop
inc
int
sarl
mov
pushf
fistl
cmp
and
nop
mov
sbb
push
ret
add
dec
nopl
dec
and
jnp
inc
add
mov
jl
insb
mov
cmp
insl
test
push
aad
push
fidivl
shl
in
lds
repz
xchg
push
jae
loope
test
adc
fsubs
pop
and
jne
cmp
dec
mov
add
cwtl
aaa
aas
out
xor
or
cmp
cli
sub
or
adc
divb
js
inc
das
psubw
outsb
and
jne
mov
inc
cmp
xor
adc
ss
movsl
fstps
sbb
call
or
leave
adc
cli
ja
cmp
rcr
mov
pop
pop
xchg
mov
rolb
aas
sub
rolb
push
pop
pusha
cmp
incb
aad
decl
sbb
out
xor
mov
lock
and
pop
daa
lods
adc
xchg
sbb
shrb
icebp
outsl
ret
jnp
jge
dec
push
dec
xor
mov
pop
aaa
out
jle
xor
lock
aam
dec
and
test
cli
push
fidivrs
arpl
jl
mov
aas
mov
push
adc
mov
pop
outsb
repnz
push
imul
pushf
dec
loopne
add
jmp
mov
in
fs
xchg
pop
and
sbb
xchg
pop
lret
lods
xchg
rcrb
push
sub
adc
rolb
gs
into
fcoml
sub
ucomiss
pop
push
mov
repz
cmp
or
adc
arpl
xor
ljmp
inc
cmp
pop
popf
mov
test
loope
lahf
xor
xor
scas
pop
cmp
fs
push
movsb
fstps
push
cmp
lds
lcall
sub
lods
aaa
push
pop
es
inc
and
and
int3
ss
adc
mov
xchg
sbb
cmpsl
xchg
int
xlat
jnp,pn
push
and
xor
insl
testb
sub
cmc
mov
mov
jmp
adc
xchg
jae
add
mov
push
loope
ljmp
adc
dec
movl
pop
adc
aaa
push
pop
enter
mov
ficoms
cmp
push
add
aas
jmp
jne
inc
sbbb
cltd
lahf
or
int3
mov
push
gs
sarl
je
xchg
leave
jl
outsl
push
jnp
mov
dec
aaa
add
xor
dec
scas
xor
lods
cs
mov
subl
jecxz
lea
lahf
daa
pop
out
sub
lret
jb
divb
adc
and
fcoms
enter
scas
push
nop
or
push
sar
subl
negb
div
popf
xor
pop
cld
in
dec
and
cwtl
je
jns
add
popa
pop
pop
or
push
sahf
or
stos
jge
imul
repnz
int3
mov
cwtl
jecxz
inc
jmp
pop
call
jns
ja
sub
fs
pop
jl
popf
loope
ds
push
mull
stos
sub
int
pop
aad
aas
stc
or
xchg
jne
lea
sahf
xchg
gs
sarb
rorb
xchg
adc
add
iret
pushf
xchg
shlb
jae
imul
mov
imulb
popa
out
enter
icebp
test
negb
das
fsubl
mov
dec
pop
cmc
inc
jae
daa
aam
xor
mov
ret
sub
and
fs
dec
aad
jb
xor
movsl
ret
cld
mov
mov
xchg
popf
xchg
push
aaa
inc
or
xchg
nop
push
cmpb
push
push
adc
mov
stos
inc
lcall
pop
xchg
xchg
cmp
pop
cld
iret
lds
and
repz
and
roll
mov
loope
push
mov
lods
lahf
cmpsl
pop
push
outsb
incl
leave
sbb
jle
and
cltd
test
aam
mov
xchg
xchg
dec
sbb
scas
add
pusha
jp
aas
and
mov
cltd
dec
daa
mov
cli
mov
ja
test
aaa
repz
subl
jnp
test
pop
jns
and
stos
les
sub
add
or
mov
je
scas
mov
sbb
add
data16
sti
xchg
or
in
cmp
loopne
test
xchg
xorb
mov
add
sub
les
xchg
test
jl
mov
ret
loop
hlt
test
rorl
and
sub
push
dec
pop
in
fstpl
pop
inc
jmp
scas
jbe
pop
movsb
lcall
fimull
lods
out
aad
pop
xchg
ret
daa
repnz
push
imul
sti
xchg
mov
cmp
jmp
push
sahf
xchg
insb
inc
cmpsl
fcmovnb
sub
cmc
rorb
push
inc
imul
jge
push
sub
sub
int3
xlat
and
mov
cmp
add
mov
adc
sbb
stc
call
sbb
ds
clc
jmp
arpl
push
shrb
aaa
in
fldl
push
adc
xchg
mov
lods
in
sub
jno
xor
das
add
mov
arpl
jecxz
adc
outsl
jp
push
pop
addr16
mov
pop
add
xor
xchg
adc
cmp
mov
sub
popf
aas
out
xor
into
push
popa
fs
push
push
imul
jge
xchg
xchg
push
pop
xor
data16
ds
js
xor
jae
xor
sub
push
imulb
push
mov
jbe
xchg
push
mov
or
xor
or
lock
es
jmp
and
loope
movsl
int
inc
sarb
into
sbb
ja
out
scas
fs
push
add
push
ds
lcall
dec
or
or
mov
repz
pushf
jge
push
mov
aaa
cmp
sub
out
jae
push
sbb
jae
ret
cli
push
and
xchg
sub
cmp
daa
cwtl
dec
aad
jg
xorb
test
test
movsl
and
leave
pop
add
fwait
or
jne
cmpsl
lds
ret
push
ja
dec
sub
int3
lcall
xchg
lcall
repnz
fucom
shll
push
ficoml
xlat
icebp
leave
cmpsl
mov
call
dec
jbe
adc
mov
jb
jae
inc
lret
sbb
sub
dec
push
rcr
aas
sub
iret
sub
test
mov
addb
stc
pop
xchg
add
mov
lret
inc
push
mov
popa
adc
pop
aad
cmp
add
cmp
fimuls
cmp
inc
jp
mov
and
fcmovnu
adc
inc
fnstsw
sub
gs
arpl
movntq
jle
or
add
jle
jne
xchg
orb
test
cmpsb
mov
jbe
incb
idivl
jl
mov
add
mov
fs
mulb
out
lods
mov
xlat
cmp
les
into
or
outsb
cmp
dec
adc
mov
lahf
mov
xor
repz
aas
pop
lods
cwtl
mov
cmp
jge
fdivl
js
dec
insb
xchg
mov
je
lahf
xor
subl
jl
cmpsb
and
bound
and
mov
lret
sbb
push
rol
xchg
stc
pop
js
sub
ss
mov
jns
xchg
sub
sbb
data16
mov
adc
iret
imul
int
fcoml
inc
lods
mov
decb
pop
adc
jae
xchg
pop
test
fwait
add
xchg
push
or
imul
shll
lahf
pop
mov
lret
jne
cmp
repz
ja
mov
pusha
movsl
sti
sbb
sbb
es
mov
cld
push
mov
aad
aam
lahf
in
ljmp
jo
shlb
dec
xor
ficomps
xor
cmpsl
cmpsb
jmp
sub
pop
daa
sub
push
cmpsl
add
cmpsl
jnp
pop
add
lahf
push
jl
movsl
test
push
test
mov
mov
sbb
fwait
cmp
getsec
aam
push
cmp
lahf
das
jo
cmpsb
outsl
xor
sti
fists
pop
mov
jg
lret
xor
scas
ja
and
sbb
gs
addr16
pop
xor
ss
cld
cmp
adc
idivl
pop
dec
sti
jmp
pop
lods
pusha
mov
pop
ja
xor
arpl
sub
mov
aad
cmpb
cltd
sbbb
adc
sub
leave
ret
adc
inc
cmp
sar
pop
pop
push
add
lret
shl
sub
test
adc
imul
test
popa
jbe
aam
subb
pusha
movsl
loop
and
dec
scas
loopne
inc
push
pop
and
mov
jmp
ljmp
pop
test
or
pop
sahf
xchg
sbb
inc
aas
aam
lret
aad
push
pop
xor
push
js
or
stc
sti
xchg
xchg
pop
mov
std
outsl
or
dec
loope
xor
pop
cwtl
std
adc
aam
jg
jb
cmp
push
ret
mov
push
dec
stos
jnp
ja
cmp
cmp
insl
loopne
cmpsl
xor
pop
fstpt
cwtl
cld
aaa
cmpsl
cmp
fiadds
mov
pop
inc
mov
imul
insl
inc
mov
dec
jp
movsl
inc
repz
fdivr
cmp
movzwl
rcrl
test
cmpsl
lds
cmp
outsb
adc
sbbl
or
mov
xchg
rolb
and
mov
mov
ret
aas
popa
ret
jb
jbe
xchg
cltd
bound
dec
scas
rdmsr
cwtl
mov
mov
add
adc
xor
iret
dec
loop
lock
mov
rcrl
xor
imul
pusha
les
lods
js
mov
push
scas
pop
sbb
mov
test
mov
aaa
enter
std
fistps
xchg
inc
cmpsb
sub
cmp
add
ljmp
jnp
dec
sub
aas
lret
xchg
into
xchg
lcall
bound
arpl
sub
das
push
mov
mov
pop
and
xchg
mov
or
pop
xor
adc
sbb
xchg
out
dec
cmp
sub
enter
scas
cmove
jmp
orb
dec
cmp
cmp
push
popa
push
mov
fists
lahf
sbbl
scas
sbb
mov
dec
sbb
push
xchg
sub
xor
ret
mov
mov
dec
cmp
dec
cli
jno
faddl
scas
sub
js
mov
or
test
imul
xchg
mov
orb
test
inc
push
adc
cltd
mov
loopne
into
ljmp
mov
mov
inc
mov
cmp
jb
adc
mov
cmp
cmc
stos
mov
sub
or
out
jge
push
call
lret
repnz
imul
add
ja
dec
and
shr
out
in
pop
popa
ja
add
xor
cmp
mov
push
push
xchg
push
pop
outsl
mov
cmpl
push
fwait
mov
jmp
push
add
push
leave
arpl
sbb
push
sarb
stc
inc
sbbl
dec
shll
int
mov
xor
stos
push
stos
push
push
add
adc
imul
out
jg
sahf
leave
fistpl
pop
jg
cmp
ja
pop
xchg
test
sbbb
popf
and
xor
and
ret
movb
lret
mov
sbb
rclb
sub
inc
js
and
adc
mov
mov
jge
lcall
push
pop
dec
jl
insl
leave
xchg
and
sbb
in
out
outsl
push
push
mov
jne
mov
jno
sti
scas
sti
cmp
cli
orl
ja
in
loopne
mov
test
sbb
sti
jo
test
jnp
jo
xor
flds
and
fnsave
dec
clc
mov
hlt
push
scas
ret
mov
test
sub
inc
mov
add
push
sbb
loopne
xor
fildl
xor
or
push
insb
test
dec
imul
push
loopne
ror
add
xchg
out
sub
into
cmp
cmp
inc
out
cmp
movsl
push
and
stos
and
jecxz
rol
jns
addr16
insl
outsl
outsb
adc
xor
mov
cltd
or
pop
subl
inc
mov
inc
fcomps
add
mov
imul
in
aam
cmc
dec
outsl
loop
inc
test
leave
hlt
sbb
test
push
and
in
popf
xchg
movsb
sbb
ja
pop
cli
sbb
pop
sar
cmp
and
cmp
sub
and
sbb
and
jg
mov
imul
and
mov
mov
and
sbb
aad
shlb
inc
or
imul
push
xor
mov
xor
push
mov
into
and
mov
mov
jae
dec
fs
repz
pop
mov
js
mov
xchg
push
das
mov
jb
add
nop
jnp
pop
rclb
aam
jle
xchg
fidivrl
jl
or
adc
stos
push
loop
push
mov
xchg
int3
into
cli
out
repnz
mov
mov
lret
inc
cmp
inc
js
aad
sti
cmp
fwait
leave
aas
and
loopne
daa
xor
push
push
mov
cmp
data16
mov
ja
out
mov
xchg
push
shl
xlat
std
int
das
jbe
jecxz
add
cld
movsb
xor
inc
inc
sbb
mov
lods
xor
push
pop
popa
and
cmp
inc
cmp
adc
jns
xor
and
push
pop
jo
mov
mov
cmp
fsubr
mov
cltd
loope
es
cmp
push
cmpsl
mov
aaa
push
xchg
sub
mov
adc
jbe
adc
bnd
mov
insb
aas
aam
enter
bound
xor
mov
jg
xor
jbe
in
cld
popf
jnp
cmp
jmp
lds
fidivrl
aam
cli
repz
and
in
movsb
xchg
pop
test
jle
inc
sbb
sub
addl
and
les
loopne
cli
mov
cltd
fwait
and
mov
sub
fsubrl
loop
jge
or
mov
add
sbb
ss
xchg
lret
daa
push
es
xor
outsb
sbb
inc
setb
xchg
stos
aas
jns
lret
mulb
or
and
repz
or
scas
mov
bnd
dec
cmp
outsl
dec
or
shrb
push
repz
mov
xchg
xor
mov
aam
call
test
jae
mov
or
scas
gs
xchg
inc
aad
mov
jae
sub
mov
cmp
or
leave
popa
add
add
cmp
mov
add
mov
push
adc
jmp
enter
shll
es
movsl
cmp
inc
sti
xor
daa
lahf
sbb
imul
adc
into
mov
cmp
mov
fwait
xor
aam
dec
mov
int
lds
pusha
jg
xor
frstor
out
sbb
push
dec
xchg
stos
jecxz
hlt
aaa
xchg
mov
sub
or
int
xchg
ficomps
aad
rorl
mov
dec
andb
xor
jle
loope
lret
cli
mov
js
loope
jbe
xchg
sub
and
stc
stos
test
aaa
sub
bound
cmp
lods
out
mov
movsl
jns
dec
mov
dec
mov
lea
mov
insb
mov
mov
mov
push
adcl
repnz
dec
push
pop
out
and
std
dec
mov
mov
scas
and
mov
sub
adc
xchg
std
mov
mov
sbb
and
sub
cltd
into
out
mov
mov
mov
mov
pop
loopne
inc
mov
ja
cmp
out
jl
and
push
clc
pop
nop
bound
notl
mov
andb
sbb
fists
push
jecxz,pt
xor
ja
or
and
popf
mov
or
shlb
aaa
adcb
xchg
jg
mov
imul
pmaxsw
push
int3
je
and
adc
pop
insl
addr16
jne
cmp
cmp
mov
sub
ds
pop
int3
mov
daa
xchg
lea
inc
movsb
hlt
cltd
mov
in
push
ret
cwtl
pusha
sub
faddp
enter
std
movsb
sbb
xor
int
jne
xorps
lret
int3
adc
das
rcr
sub
or
push
iret
leave
das
test
add
leave
xchg
out
xchg
mov
movl
xor
imul
dec
sbb
arpl
insl
jmp
ret
pusha
test
add
cmp
xor
sti
push
sub
sahf
ja
rolb
pop
mov
out
roll
dec
pop
and
pop
shrb
push
int3
out
adc
dec
repnz
mov
dec
or
in
or
call
int
mov
lds
data16
mov
xacquire
bound
xor
mov
lahf
sbb
cltd
mov
je
sahf
imul
jae
icebp
mov
test
xchg
or
ljmp
xor
fs
repz
test
or
out
cmpsl
movsl
cmp
mov
cli
cmp
fs
ljmp
scas
cs
testb
push
mov
fbstp
xorb
fisubl
mov
mov
jl
test
mov
movsb
call
xor
outsl
outsl
int3
jle
jbe
jnp
sub
push
pop
add
cmpsl
pop
call
aas
dec
jo
mov
out
xchg
shlb
hlt
jo
in
insl
xchg
jb
imul
inc
jne
cmp
xor
dec
ret
or
inc
ja
xchg
xchg
mov
mov
add
fs
or
loop
or
mov
mov
mov
cmp
js
inc
push
dec
test
lds
data16
inc
push
and
test
ret
mov
inc
pop
enter
push
jl
cwtl
lods
out
push
in
repnz
dec
mov
mov
xor
pop
sub
repz
pop
jbe
sbb
xlat
lret
add
sti
out
xchg
jns
fidivl
out
mov
inc
int3
hlt
or
in
pop
mov
hlt
fisttpll
loope
fisubrs
sar
fstpl
imul
cltd
movsb
xor
fsubl
inc
lods
sub
mov
cmp
sbb
flds
je
fisttps
adc
test
xchg
sarb
xchg
mov
stos
mov
mov
aas
insl
adc
fsts
xchg
or
jno
or
cmp
ret
es
adc
outsl
ds
leave
add
out
mov
xchg
mov
cli
xor
xor
inc
iret
ja
cmc
ljmp
mov
mov
ss
inc
cmpsl
xor
jb
out
dec
xorl
xor
in
mov
mov
sbb
fiaddl
inc
scas
push
cmp
adc
fsts
test
or
jecxz
shll
xchg
call
dec
dec
in
mov
sub
xchg
shlb
mov
dec
pop
rcrl
pop
push
lock
and
jb
xor
not
dec
sub
lcall
and
lcall
inc
js
sub
adcl
jns
ret
inc
inc
mov
and
test
xchg
jp
jg
rorl
dec
icebp
mov
push
lods
popa
pop
inc
sbb
or
pop
movsb
pop
loope
pushf
dec
mov
pop
and
xchg
push
xchg
fmull
mov
out
jecxz
cmp
add
inc
scas
push
inc
add
sbb
sbb
clc
stos
fwait
xor
cld
cmp
sbb
mov
and
inc
scas
in
push
or
cltd
sbb
inc
or
enter
scas
push
mov
push
fisttpll
and
dec
mov
adc
sub
sub
repz
and
push
pop
adc
cmp
push
je
ret
js
js
mov
mov
xchg
in
push
cmp
int3
pop
dec
pop
add
mov
rorl
or
andl
loop
enter
sbb
xchg
inc
fwait
cmpsl
jg
sub
test
ss
rorl
or
leave
sbb
xchg
adc
and
pop
mov
aaa
mov
fmul
js
and
mov
jge
out
push
out
ss
imul
jge
mov
daa
push
out
stos
mov
add
jne
fsubl
lret
or
lods
mov
add
mov
fwait
or
ret
fiaddl
leave
inc
pop
adc
mov
rolb
jae
out
xor
xchg
jl
jb
orb
sub
mov
push
ja
mov
sub
das
in
push
xchg
subps
sbb
jp
cwtl
mov
or
mov
popa
cltd
sahf
cld
rorb
mov
add
mov
stos
shr
in
pop
sbb
inc
call
add
out
inc
inc
les
stos
lds
push
fstps
or
mov
scas
inc
mov
fisubl
inc
sarl
lcall
bound
pop
push
pushf
sbb
cmp
xchg
jg
push
jge
adc
insb
ljmp
in
mov
pop
loop
pop
push
jo
inc
mov
int
jmp
sub
movups
sbb
pushf
pop
xchg
jmp
adc
ror
mov
dec
rolb
vmwrite
cmpsb
sub
push
je
imul
mov
in
imul
rolb
addr16
sub
int3
mov
lret
lahf
icebp
repnz
pop
lods
fwait
mov
and
push
dec
stos
mov
fisubrs
pop
js
lret
pop
xchg
rorb
sahf
sub
repnz
push
test
pop
cmp
jb
icebp
iret
pusha
adc
ffree
jno
push
or
and
jmp
ret
and
mov
or
add
xor
ret
add
outsb
jnp
daa
pushl
xchg
call
sahf
push
pop
cli
insb
or
mov
inc
out
xchg
xor
sbb
movsl
jmp
inc
inc
aaa
andb
fnstsw
push
mov
pushl
sbb
repnz
ret
pop
inc
xchg
xchg
js
add
std
jno
adc
mov
xor
mov
xor
sub
xchg
addl
dec
jb
and
jp
mov
addr16
sub
sbb
stos
jle
cmpsb
int
push
fs
jle
xchg
xor
mov
dec
out
int3
movsb
inc
sarb
xor
icebp
int3
push
popa
adc
and
ror
sti
cwtl
iret
mov
push
push
mov
pop
mov
mov
popa
clc
arpl
mov
mov
sbb
insb
mov
sub
add
loop
sub
mov
dec
data16
xchg
dec
adc
inc
xchg
pop
inc
sub
or
aas
in
pop
push
cmpsb
jl
xorl
cmp
stc
iret
jne
add
mov
xchg
das
clc
stos
int
pop
leave
mov
adc
ja
dec
inc
dec
aaa
lcall
lock
xchg
cs
xchg
lea
xchg
lret
movsb
mov
cld
fiaddl
push
pushf
sub
icebp
jb
pop
dec
cmpsl
inc
aas
xor
push
push
ficomps
xchg
scas
mov
insb
outsb
hlt
xchg
fisttpl
dec
leave
scas
jo
xchg
mov
adc
mov
fwait
and
stc
decb
popa
jge
stos
or
xor
push
adc
inc
cld
incb
popf
dec
decl
mov
and
iret
pop
lock
lds
inc
ret
popf
and
int3
sub
push
adc
mov
lea
mov
pop
lea
inc
repnz
adc
rorl
sbb
fadd
inc
or
cwtl
push
cmp
fsubr
ret
inc
fmuls
xchg
dec
xchg
aam
fisubrs
xchg
jp
xchg
movsl
fiadds
sub
imul
jnp
out
comiss
lods
pop
dec
stos
lods
push
mov
cli
scas
cli
fxch
lcall
jg
div
jge
daa
push
mov
and
inc
stos
subb
cltd
mov
sub
repz
das
nop
fptan
jb
cmp
sti
cmp
xchg
sbb
stos
or
aam
dec
xchg
xchg
cmp
popf
push
lret
movsb
push
inc
out
xchg
iret
mov
lods
pop
inc
xchg
sub
lds
rcr
ret
or
test
sahf
in
push
dec
test
movsl
call
out
push
push
pop
bound
fists
pushf
cmc
in
and
arpl
in
inc
xlat
cld
pushf
out
inc
xor
xchg
mov
insb
adc
rcrl
add
popa
inc
add
std
sub
in
pop
cmpsl
in
fsts
mov
jmp
fistl
jle
test
xchg
mov
or
clc
stc
xlat
loop
mov
in
pop
lock
sub
mov
mov
jae
lock
mov
in
pop
xchg
push
sbb
jnp
loopne
andb
jnp
mov
dec
outsb
jo
lret
out
pop
push
or
jmp
jnp
insl
xchg
mov
pop
sbb
lcall
pusha
rcrl
pop
sbb
test
adc
or
data16
pushf
push
popa
cli
and
dec
jne
daa
mov
push
xor
dec
cltd
testl
cmpsb
push
xlat
push
xor
push
and
movsl
test
jge
hlt
dec
imul
and
in
lcall
push
xchg
lret
push
repnz
arpl
jno
shrl
out
cmp
fimull
xchg
mov
in
fistl
mov
into
pop
and
int3
push
adc
loopne
sbb
add
jns
jne
cmp
sti
mov
mov
ds
icebp
pop
inc
lahf
cmp
xchg
jne
xlat
jecxz
inc
movsl
sbb
mov
testl
push
sti
or
or
push
in
mov
ret
sahf
adc
dec
lret
cmp
mov
cli
das
lret
ss
push
test
daa
sub
daa
das
cmp
dec
out
mov
ja
push
ljmp
clc
pop
iret
out
push
popf
movsl
loopne
sbb
and
and
mov
xchg
insl
ja
cmp
push
loope
out
inc
lret
sbb
add
cmp
out
roll
iret
out
jecxz
xlat
mov
test
push
fildll
dec
ja
add
mov
mov
loope
pop
pop
shr
cmpxchg
mov
lret
ret
loop
mov
cmpsb
vpaddd
inc
adc
idivb
mov
es
jne
pop
mov
repnz
jmp
data16
jl
out
out
dec
dec
xchg
lret
mov
ja
shll
jbe
jmp
iret
adc
mov
fcmovb
inc
in
in
mov
out
push
bound
int3
dec
testb
adc
popl
sub
cltd
nop
jmp
jmp
adc
push
imul
xchg
lret
lea
repnz
popf
scas
cwtl
push
insb
sarb
out
sub
outsb
mov
sbb
jg
sub
mov
xchg
popl
cmp
repz
xchg
inc
mov
idivb
aaa
mov
xchg
pop
jae,pn
xlat
fdivr
fs
inc
insb
xor
push
lods
in
push
sti
cmc
xchg
sbb
rcrb
and
adc
push
adc
jp
xchg
shll
fs
repz
or
lock
lahf
sbb
jp
push
out
xor
repz
push
fcmovbe
inc
fldt
xor
in
cmp
adc
scas
jns
out
push
and
push
xchg
je
sub
xchg
mov
mov
mov
xchg
xchg
daa
adc
ja
mov
cmp
jg
pavgb
xchg
cwtd
mov
inc
into
xchg
sub
push
inc
jno
cmpsb
jb
sbb
dec
iret
es
loop
ja
mov
lods
inc
and
inc
insb
sbb
push
push
adc
mov
jns
nop
mov
pushf
cmp
mov
das
adc
adc
nop
lahf
push
xchg
call
daa
jbe
cmp
jg
mov
xchg
lea
add
scas
shll
pop
mov
pop
jmp
popf
add
out
stos
sti
add
stc
xchg
rorb
subb
shll
ret
loop
sahf
fsubp
mov
or
xor
push
or
into
lods
jmp
fisttpll
lret
pop
cmp
xor
cmp
fsubs
int
xchg
out
jns,pn
mov
movsb
inc
jl
mov
cmpl
pop
push
into
ret
push
adc
out
fadds
in
cmp
sahf
adc
fchs
sti
mov
mov
in
sbb
aaa
cmp
clc
adc
push
stos
lahf
inc
and
push
sub
test
cmp
addl
stos
mov
inc
or
imul
mov
sbb
into
add
fidivrs
sbb
scas
roll
jns
or
das
jmp
call
push
xor
mov
dec
dec
dec
loope
bound
pop
and
les
dec
jecxz
jge
or
or
xor
pop
dec
cmp
push
inc
cmpsl
dec
or
sti
test
lea
rolb
fisubl
aad
push
scas
inc
pusha
addb
ret
dec
mov
addr16
popa
inc
xchg
mov
loope
xor
sbb
outsl
arpl
sub
loop
orb
notb
stos
stc
gs
adc
test
cmpsl
add
pop
jns
nop
inc
clc
xchg
icebp
es
stos
ja
adc
cmp
pop
inc
mov
mulb
mov
pusha
aas
push
cmpl
lret
jb
popf
imul
inc
jp
mov
mov
pop
jno
jmp
addb
mov
dec
movsl
mov
leave
fsubs
push
xchg
mov
or
shlb
dec
dec
negl
sub
outsb
mov
imul
adc
js
cmp
sub
int3
nop
jge
loopne
or
jno
cmc
pop
shlb
jl
cmc
popl
jle
lret
in
mov
arpl
add
inc
push
insb
lods
dec
add
rorl
jno
dec
mov
outsl
adc
mov
mov
dec
or
cmpsb
push
pop
stos
xor
inc
test
xchg
cmc
adc
ds
xor
scas
pusha
jg
push
adc
and
sbb
pushf
jns
cmp
push
mov
aas
jns
cli
xadd
xor
ret
aas
std
ljmp
adc
dec
pop
mov
dec
xchg
das
rcrb
and
and
mov
adc
mov
stc
pop
xor
push
mov
or
mov
cli
outsb
addr16
stc
test
insb
nop
add
jbe
insb
pushf
call
push
bound
adc
dec
divl
ja
jb
dec
sub
sub
cmc
xor
das
pusha
mov
mov
les
adc
adc
dec
sbb
jbe
xor
adc
inc
xchg
cmp
stos
gs
jge
push
ret
inc
sub
popf
pop
pop
xor
loope
lds
inc
xchg
sub
sahf
movsb
pop
mov
cmp
sbb
pop
fsubrs
lcall
adc
or
mov
sti
pop
push
push
inc
mov
addl
call
push
or
js
loope
adc
mov
icebp
inc
les
fadds
bound
mov
and
loopne
mov
mov
mov
cmp
jae,pt
xchg
test
pop
fwait
subl
mov
mov
inc
pop
out
and
cmp
dec
outsl
stc
shll
mov
loop
pop
or
outsl
jne
mov
test
jp
sub
mov
inc
in
pop
xchg
cltd
and
f2xm1
cmp
pop
std
mov
xchg
fstpt
push
aam
invd
jns
mov
sbb
push
mov
mov
call
icebp
xchg
inc
xchg
imul
or
cmc
jnp
pop
cmpb
sub
pop
xchg
jns
outsl
mov
lods
mov
jmp
fstpt
cmp
push
enter
repz
stc
mov
xchg
call
cmpsl
popa
jbe
push
insb
rcl
and
and
xor
pop
adc
jnp
in
dec
pop
sbb
sti
data16
mov
jbe
fiadds
or
add
sbb
ficomps
ds
cltd
jp
jb
out
lds
das
iret
add
out
cmp
test
mov
sbb
shl
out
mov
enter
cld
mov
sbb
addl
xor
outsb
stc
pusha
xchg
sbb
pushf
arpl
mov
and
pop
fs
or
or
pop
ret
dec
mov
xchg
mov
jbe
cmpsl
cmp
jg
jmp
shr
mov
mov
xchg
and
xchg
jl
dec
xchg
dec
out
mov
out
sbbb
in
dec
xchg
jbe
lock
fadds
push
add
sar
rorb
imulb
ficoml
ljmp
inc
xchg
sub
sbb
inc
aad
ja
mulb
test
mov
sarl
xchg
sbb
repz
inc
pop
sub
bound
push
mov
mov
nop
push
push
pop
data16
dec
adc
rorl
or
scas
push
jae
int
jo
into
loopne
jo
call
lahf
fidivs
or
jmp
jmp
sub
out
stc
nop
push
xchg
les
mov
pop
loope
pop
out
cmc
add
cmp
inc
jns
repnz
xchg
add
gs
icebp
jle
cmpsb
fisttpl
jp
xor
test
inc
loop
repz
lds
sbb
cmp
daa
dec
xchg
or
outsl
jmp
mov
inc
jae
pop
push
lret
sbb
out
mov
fidivrs
xchg
mov
les
imul
in
sbb
cwtl
pop
jno
push
sub
and
mov
or
push
clc
cmp
add
addb
mov
dec
es
or
dec
sahf
mov
push
sbb
push
loop
ret
fidivrl
mov
adc
sbb
dec
mov
in
scas
adc
fs
sbb
sbb
jge
repnz
xchg
cmpsl
mov
inc
cmp
popa
mov
mov
gs
adc
xor
dec
mov
pop
in
out
mov
or
scas
mull
xor
les
shl
adc
scas
test
push
ffree
xor
adc
out
push
inc
sub
push
lods
sbb
shr
flds
out
test
sub
loopne
mov
loopne
int
push
mov
mov
push
cmp
jne
repz
add
insb
mov
xor
jecxz
cmp
stos
jle
fwait
loop
cwtl
xchg
inc
push
hlt
push
je
mov
and
daa
add
je
movsl
popl
shll
nop
and
je
add
fldcw
jp
rolb
or
push
pop
test
or
out
jbe
orl
sbb
pop
loopne
push
sahf
enter
pop
nop
mov
out
push
push
push
in
sahf
aam
pop
mov
pop
jp
sub
mov
ficoms
icebp
jb
add
hlt
jb
pop
cmp
pop
and
and
add
fs
xchg
xor
push
pop
xchg
pop
icebp
cmp
mov
dec
xor
adc
and
out
inc
cmp
dec
mov
icebp
stos
in
enter
arpl
mov
jnp
and
out
outsl
stc
insb
insb
out
mov
fwait
mov
into
insl
push
xchg
out
clc
or
push
push
or
jg
lret
and
cmp
xor
cmp
sub
and
mov
push
sub
mov
xchg
pop
xchg
xchg
jmp
xor
addl
inc
hlt
popf
adc
sbb
sbb
scas
pop
cs
loope
cwtl
xor
pop
mov
movsl
ljmp
xor
ret
sub
sbb
or
sub
inc
cmpsb
jmp
lahf
repz
jmp
stc
mov
pop
ret
mov
pop
xchg
sub
cmp
in
or
or
pop
xor
pop
fwait
in
lds
sbbl
sub
mov
shlb
movsl
wbinvd
mov
test
daa
fs
loope
and
outsl
rcrb
inc
adc
cmpsl
inc
ret
sub
xor
mov
sbb
pop
daa
mov
push
jle
xchg
and
dec
pushf
jnp
cmpsb
cmp
aam
inc
imul
dec
testb
mov
movsl
jecxz
rcrl
filds
cmp
rclb
mov
xchg
shlb
std
mov
cld
rcll
and
jge
stos
mov
pop
or
mov
inc
in
xchg
loope
pop
pop
mov
dec
mov
rorl
jbe
xlat
jle
xchg
cmpsl
outsb
lds
fiadds
xorb
rorb
shrb
xlat
add
sub
sbb
adc
mov
push
push
and
and
push
sub
in
mov
inc
add
adc
std
or
dec
mov
int3
mov
xchg
jne
lods
pop
dec
push
or
add
adc
jl
lods
xchg
not
cs
push
adc
or
hlt
mov
adc
inc
inc
fsubrl
scas
into
pop
inc
sbb
sub
push
xchg
outsl
rorl
xor
jmp
lcall
push
jae
dec
mov
les
sbb
in
xor
in
sahf
jno
add
xor
mov
dec
mov
imul
aas
aaa
jnp
and
xchg
popa
push
sbb
bound
popa
clc
inc
and
sbb
das
mov
ss
mov
leave
sti
xchg
sub
xor
xchg
imul
mov
push
pusha
push
lods
insl
repz
adc
mov
mov
scas
inc
xor
or
xor
xor
adcb
out
fidivs
mov
pop
jmp
cmp
stos
sarl
jno
lock
mov
sub
clc
int
fadd
inc
cmpsl
pop
mov
js
xor
clc
mov
ficoml
ret
sub
aam
push
mov
adc
popa
testl
andb
pop
mov
mov
mov
sub
jmp
pusha
sbb
mov
inc
jmp
jae
call
mov
test
fisubrs
mov
mov
mov
mov
div
int
mov
xor
cmp
and
push
and
jno
mov
mov
jge
mov
pop
add
lahf
movsl
xor
ss
cmp
push
repz
into
test
aas
mov
call
je
pop
mov
js
out
in
push
or
cmpsl
inc
adc
sbb
xor
cmpsl
push
push
xchg
dec
or
inc
push
fs
shll
aaa
mov
les
cld
push
ret
int
loope
or
pop
xor
jg
scas
sub
sbb
jge
jae
sarl
cmp
jns
mov
arpl
inc
and
or
cmp
aas
loop
arpl
cltd
nop
and
jge
je
scas
jl
lds
cld
imul
pop
sbb
mov
or
in
cld
ret
in
hlt
mov
push
add
cmpl
push
or
sub
mov
stos
sub
mov
mov
stos
movsl
mov
fs
sub
jae
inc
mov
xlat
shrb
popf
lods
sbb
xchg
mov
stos
cmp
pop
push
add
aas
lods
ljmp
in
inc
sahf
arpl
cmpsl
sub
out
aas
or
sbb
sub
mov
and
or
jl
pop
loop
fsts
ja
lret
data16
imul
lods
jns
and
inc
imulb
fists
mov
aaa
shll
cld
dec
push
mov
and
popf
aam
shll
mull
fcmovb
and
pop
gs
lock
sbb
test
pop
sbb
mov
adc
jne
mov
mov
outsb
jo
das
je
fistps
gs
gs
add
sarl
fstpl
xorb
mov
popa
mov
test
jae
xor
mov
add
cld
enter
pop
inc
xchg
leave
sti
ret
push
sub
mov
or
and
xor
imul
xor
nop
fnstenv
out
stos
push
aaa
xchg
adc
test
push
push
cmp
popa
movsl
js
cmpsl
fdiv
mov
pop
ret
or
dec
fisttpll
inc
cmpsl
add
js
bound
push
test
cltd
frstor
pop
mov
push
sti
stc
add
into
mov
or
adc
lea
mov
mov
out
fsubrs
mov
add
inc
add
xchg
or
adc
mov
cli
cmp
lods
xchg
and
clc
test
loope
lods
daa
cltd
push
dec
push
dec
add
xchg
mov
add
movsl
fs
cmp
out
in
out
daa
ficomps
xlat
test
pop
and
xchg
jo
out
andl
or
sbb
test
inc
fldenv
pop
sub
push
and
and
xor
cwtl
jle
inc
lea
xor
xchg
insb
test
rcl
mov
add
pop
mov
sarb
push
inc
outsl
ret
cmp
push
nop
cmp
sbb
fbld
xorb
scas
cmp
mov
stc
out
push
inc
mov
ss
loopne
pushw
xchg
jge
leave
outsl
and
xchg
daa
cltd
add
sub
push
icebp
sbb
arpl
std
loop
out
sub
shrl
or
sbb
out
inc
inc
add
pop
ss
pop
repz
lret
mov
add
ret
mov
ret
pusha
iret
jne,pt
xlat
inc
les
adc
adc
pop
jle
cmp
rcl
sarl
dec
repnz
loopne
fxch
xchg
jmp
jl
bound
lods
call
imul
test
icebp
adc
into
pop
mov
push
lea
jne
add
std
popa
roll
cmp
nop
mov
lret
cli
test
inc
fwait
jecxz
dec
add
and
push
mov
jns
lahf
or
and
sub
jae
mov
pusha
lods
es
pop
xor
movsb
je
leave
fistl
cmp
in
fdiv
or
into
pop
aam
jp
xor
xorb
orl
jmp
inc
subl
push
cmp
in
add
mov
mov
inc
sub
cmpsb
mov
jmp
pop
and
cmp
pop
test
jno
movsb
or
mov
xchg
jp
cmp
sub
jmp
lds
insl
leave
pop
cmp
fst
out
pop
das
inc
mov
add
pop
fs
nopl
push
jne
push
inc
mov
cmpsl
daa
add
cmp
cwtl
jmp
lds
fimuls
xchg
lea
mov
jnp
test
out
fwait
clc
mov
mov
add
or
xchg
mov
jmp
mov
pop
xlat
shll
or
add
push
or
cld
push
pop
ja
or
aad
add
sub
and
cmp
add
jmp
jo
addr16
pop
cmp
insl
xchg
ret
enter
dec
popa
fcmovne
push
es
push
scas
sahf
mov
xchg
nop
js
sbb
imul
lock
mov
fnstenv
xor
jle
cmc
ret
mov
cmp
shlb
aaa
adc
out
imul
add
std
or
mov
test
dec
inc
mov
jge
cmp
cltd
outsb
cmp
test
int3
jo
sahf
repnz
push
pusha
aam
pop
push
inc
dec
mov
cmp
or
call
data16
dec
jbe
outsb
pop
stos
movsl
cmp
int3
rclb
jle
xor
sub
lds
pop
cmpsl
xchg
lock
fwait
xchg
popa
out
in
inc
ss
mov
in
push
iret
loopne
inc
rolb
inc
jle
pop
shld
loop
insl
out
clc
lock
das
mov
orb
push
mov
stos
jp
testl
or
fadd
repz
push
sub
call
jns
mov
cmp
pop
lret
and
xor
lret
je
jae
cmp
lods
out
je
inc
mov
pop
push
setl
push
in
lods
movlps
out
cmpsl
jmp
cmp
mov
mov
sub
bound
sbb
divl
sub
pop
outsl
decb
in
sbbl
lods
pop
jbe
add
mov
mov
movsb
addr16
and
adcl
sub
sbb
jno
adc
flds
cmpsl
gs
mov
pop
cmp
and
je
xor
ret
movsl
sbb
push
push
jno
rolb
add
pop
into
sbbl
dec
orl
jmp
mov
jb
sub
xchg
pop
mov
leave
nop
cs
fisubrs
add
idiv
pop
push
push
push
push
pop
push
cltd
mov
imul
or
xor
ret
movsb
call
orl
ret
movsl
jle
jecxz
int
jbe
cli
mov
vpunpckhbw
loop
jbe
mov
pop
xor
pop
mov
jno
sub
xor
xchg
xchg
xorb
mov
fildll
rolb
out
xchg
jmp
mov
mov
scas
in
lock
sub
pop
mov
repnz
mov
adcb
repz
jp
loopne
ds
movsb
sub
faddl
roll
pop
inc
sub
mov
sub
stos
push
iret
sbbl
push
int
xchg
pop
scas
and
js
mov
pop
inc
inc
or
push
add
in
imul
and
lret
in
add
js
out
imul
aam
mov
push
jns
xor
cwtl
sub
sub
adc
inc
push
mov
and
mov
inc
loop
jle
sub
outsb
loop
int
pop
in
dec
xchg
push
xor
jmp
cltd
dec
xchg
jp
movsl
insb
fdivrl
stos
bound
test
scas
test
pop
adc
jp
lods
fisttpll
scas
sti
idivl
lret
and
lcall
fistpll
add
push
movsb
test
inc
inc
mov
jae
dec
push
aam
negl
xchg
mov
and
mov
xchg
bound
xorb
pushf
xchg
paddsw
insl
loope
cmp
mov
or
push
ljmp
jmp
arpl
pop
aad
mov
push
fisttpl
pop
push
push
push
dec
cmp
repz
add
mov
dec
cmp
mov
sbb
mov
aas
fcomip
mov
or
insb
gs
lcall
dec
adc
mov
popf
push
dec
xchg
ljmp
jnp
loope
std
adc
enter
test
pop
xchg
add
imul
das
jmp
call
fsubr
std
cld
push
ret
shlb
lret
in
outsl
outsl
xor
call
add
sub
dec
inc
add
in
sbb
enter
decl
mov
int
sahf
outsb
jmp
xchg
jecxz
xchg
aaa
js
mov
or
adc
pop
push
jae
dec
ret
or
mov
lret
pop
xchg
testb
pop
jbe
mov
jle
pop
and
in
fwait
sbb
sub
xor
dec
mov
lcall
stos
es
lods
stos
sub
dec
push
jecxz
leave
jae
xchg
mov
adc
cld
enter
mov
ficomps
fst
arpl
loop
test
loop
xor
sub
mov
cmp
es
xlat
dec
cli
and
jne
xor
enter
lds
xchg
stc
xor
repnz
pop
sahf
insl
sbb
add
rorb
repnz
dec
popf
fmull
popa
int
dec
jo
xlat
lods
lock
and
mov
scas
bound
pop
push
xlat
mov
hlt
cld
sahf
mov
gs
pop
aam
in
pop
in
sub
mov
add
test
mov
mov
cld
mov
lahf
aaa
add
cltd
leave
jns
or
pop
adc
lahf
test
or
les
push
xor
sbb
int
and
fldl
and
imul
ja
sbb
stos
notb
mov
div
movsb
or
and
aad
lods
stc
out
stos
or
cwtl
cmp
in
call
jg
mov
fcmovnbe
push
out
xor
add
or
shlb
aam
cmp
sbbb
ss
fcmovu
outsl
lds
pusha
xchg
int
and
pop
xchg
pop
test
jecxz
mov
cmp
loopne
dec
xor
dec
lock
lods
mov
push
xorl
xlat
inc
push
ja
scas
mov
jmp
iret
call
cmpsb
and
int3
mov
leave
scas
push
xor
daa
jo
mov
mov
cmc
test
repz
mov
sub
lds
inc
movlps
mov
add
outsl
pushf
les
dec
ss
popa
nop
cmp
add
xor
clc
push
test
add
sbb
sbb
divb
in
out
pushf
xchg
cmp
sar
dec
call
lock
lcall
pop
out
add
or
sbb
xor
cmpsl
mov
dec
xchg
mov
sub
jmp
scas
int3
pop
mov
jecxz
or
xchg
xlat
jo
daa
notl
push
lods
addb
and
shl
cmp
sub
fdiv
xor
fmuls
idivb
arpl
ds
cmp
idivl
shrb
divb
mov
add
adc
xchg
mov
stos
jbe
adc
aaa
or
ljmp
mov
aaa
loopne
cmp
arpl
sbb
push
xchg
lods
push
mov
pop
aam
mov
ficomps
adc
arpl
add
scas
fnstsw
pushf
hlt
aaa
cli
sti
lods
popf
xchg
int3
insl
test
std
xor
xchg
dec
push
lea
fwait
sbb
pop
mov
xor
jle
jno
and
mov
negl
push
pop
jecxz
jb
cmp
mov
lahf
test
insl
mov
push
xchg
inc
repz
xlat
in
rcrl
mov
dec
imul
mov
nop
iret
push
push
jge
mov
movsb
cli
push
dec
ret
sub
sub
sub
xadd
adc
mov
add
data16
mov
ret
decl
pusha
lret
int3
jmp
insb
xor
xchg
xchg
adc
sub
jp
pop
movlps
add
inc
xchg
fwait
retw
xor
jg
mov
pop
xchg
jp
popf
ret
and
ret
into
stos
push
dec
xchg
dec
push
call
jbe
push
sub
xchg
das
xchg
stos
push
xchg
inc
jp
cmpsb
ljmp
mov
or
jmp
stos
adc
pop
test
cmp
sub
xorl
cmp
test
cmpsb
std
scas
adc
arpl
jns
cs
out
cmp
or
xor
add
mulb
jmp
xor
out
ljmp
rclb
jns
in
ss
push
adc
add
iret
movb
ja
fucomi
mov
fcmovb
in
push
pop
or
jg
push
insl
enter
scas
int3
pusha
jle
jge
loop
int3
cmp
gs
aad
mov
fcoms
jge
mov
aas
mov
mov
adc
and
dec
iret
or
cmc
ret
add
rcr
mov
xchg
out
lods
push
jo
or
inc
outsb
mov
sbb
iret
loopne
hlt
mov
mov
or
imul
lret
nop
and
test
dec
push
popa
out
es
pop
mov
mov
push
cmc
lcall
push
pusha
jnp
in
sbb
or
jle
sub
sub
push
sub
xor
repz
mov
iret
xor
mov
fwait
dec
xlat
inc
push
add
insb
rorb
jl
mov
jb
push
rcr
mov
xchg
mov
add
mov
xchg
das
lods
dec
adc
sbb
cli
xchg
cmpsb
inc
cs
mov
shr
out
xor
outsb
test
xchg
gs
mov
or
arpl
adc
in
dec
cmp
pop
daa
stc
dec
cli
rolb
fnstcw
daa
or
arpl
adc
sub
dec
in
jnp
movsl
xor
or
iret
pop
sahf
sbb
cmp
push
nop
cmp
push
xor
and
out
or
orl
mov
fs
loop
es
dec
test
sbb
jbe
mov
xchg
rol
pop
sub
cwtl
adc
jmp
in
aad
mov
push
aam
cltd
cmp
cmpl
xchg
mov
stos
mov
jbe
test
scas
inc
push
imul
sbb
pop
push
add
lds
mov
cmp
add
sti
aad
sub
icebp
xor
test
xlat
adc
pop
add
sub
and
xor
insb
neg
sub
cmp
loopne
and
jbe
outsb
add
outsb
xchg
je
xchg
lea
mov
pop
jnp
cmpsl
add
sbb
andb
popf
ljmp
loope
cs
mov
add
push
int3
jne
bnd
adc
push
sbb
std
test
dec
repnz
js
sub
pop
xchg
filds
mov
xor
idiv
daa
in
int
mov
add
or
or
dec
mov
sub
popa
out
inc
mov
repz
sub
cmp
jns
adc
pop
cmp
scas
inc
addr16
in
movsb
push
loope
xor
mov
popa
and
repz
inc
pop
call
add
movsl
push
fmul
outsb
shrb
xor
mov
aam
inc
cli
push
dec
mov
out
in
jle
pop
jae
dec
cmpsl
popf
movsl
mov
cwtl
mov
xlat
loop
leave
xchg
dec
flds
cs
int
repz
dec
cmp
or
lea
cmpl
gs
in
std
jge
dec
push
sub
push
sbb
sbb
ss
add
fimull
or
aas
ja
push
mov
lahf
jl
cmc
jle
cmp
je
negl
push
inc
inc
adc
mov
sbb
cmp
mov
fwait
sbb
sbb
sahf
test
cmp
mov
xchg
dec
dec
ljmp
push
jle
xchg
iret
xor
imul
addb
push
mov
cmpsl
sbb
xchg
push
mov
insb
push
je
fnstcw
pop
adc
aam
mov
movaps
mov
inc
lock
cmp
or
mov
inc
sbb
sbb
mov
mov
or
icebp
lret
mov
dec
add
adc
into
and
movsb
mov
xchg
ret
pushf
mov
dec
in
pop
jne
lock
imul
les
mov
ret
mov
push
pop
xchg
addr16
fisubrs
mov
sar
or
adc
pop
sbb
sub
pop
movsl
cmpsl
orl
test
outsl
sub
jb
jno
adcl
jnp
shrl
mov
ss
push
mov
add
std
inc
and
testl
popa
cmp
das
shlb
xlat
imul
mov
lods
aaa
insb
jno
xchg
dec
add
push
or
xchg
sarb
fs
imul
xor
shll
mov
pop
mov
ljmp
push
push
mov
jno
adc
fs
movsb
fwait
xchg
xchg
sbb
sub
mov
mov
out
xor
test
jne
insb
shll
mov
push
add
adc
ds
sub
arpl
xchg
out
fnstenv
cmp
and
cmp
daa
inc
pop
cli
xchg
add
add
push
cmpsl
add
and
adc
add
add
in
lahf
mov
js
iret
out
sub
mov
idivl
inc
aas
mov
xchg
push
jnp
add
jb
push
test
mov
cs
cmp
xor
mov
mov
imul
mov
mov
fmull
std
xchg
jbe
pop
xchg
mov
pop
pop
cmpsb
ljmp
inc
inc
es
sub
and
dec
test
xchg
pop
mov
sbb
dec
and
call
mov
adc
xor
and
lds
cli
pop
fdivrl
dec
dec
jnp
daa
cwtl
mov
sti
jnp
or
pop
jmp
push
or
xchg
pop
adc
and
mov
scas
test
and
mov
fiadds
inc
mov
pop
loope
fistpl
add
mov
adc
xor
mov
lcall
xchg
call
cmp
push
lret
inc
sub
jb
ja
xor
frstor
imul
or
scas
add
es
dec
fs
ja
dec
mov
cwtl
leave
das
in
outsb
jle
and
fisubrs
divl
pusha
aas
lret
cmp
sahf
subps
add
repz
ret
mov
arpl
negb
andl
cmp
jecxz
push
loopne
jmp
xchg
gs
stos
sbb
int3
aas
fstps
cmp
lret
sbb
xor
push
pop
lods
shrl
sbb
cld
xchg
loopne
fstps
fidivl
insl
pusha
mov
jnp
inc
adc
dec
mov
ret
fdivrs
lahf
idivl
xchg
sahf
sbb
ret
mov
inc
mov
dec
sbb
jp
xchg
call
adc
mov
sahf
jle
ljmp
gs
mov
push
pusha
out
mov
xchg
sti
test
pop
movl
xlat
sti
shrl
repnz
push
adc
mov
sbb
and
imul
xor
lahf
dec
fs
jb
pop
lock
cmp
lods
mov
jmp
in
test
mov
out
sub
in
sub
int
lea
push
dec
push
cmpsb
jbe
dec
add
pushw
movsb
cwtl
add
outsl
mov
mov
sub
dec
stc
inc
push
sbb
aad
mov
cmp
xchg
xchg
or
sub
adc
mov
pop
xchg
and
push
mov
rorb
outsb
mov
pushf
bound
sbb
mov
adc
jb
cli
jb
fimuls
addl
or
dec
xorb
mov
cmp
lret
lock
mov
aaa
fidivl
sbb
outsl
sti
mov
mov
mov
add
cld
call
imul
mov
or
pop
jg
shll
and
xor
ret
js
imul
mov
out
stos
out
pop
pop
test
sbb
lods
into
sbb
inc
sub
gs
push
stos
aam
shlb
cmp
and
pop
aad
push
hlt
repnz
into
pandn
adc
sbb
jecxz
and
cli
and
lahf
dec
dec
fisubrs
jmp
mov
int3
sub
jno
pop
mov
xor
aam
ret
sub
loopne
mov
dec
mov
sbb
pop
fwait
in
ds
cltd
and
cwtl
iret
dec
xchg
fsub
and
adc
clc
jbe
cld
dec
int3
cmp
pop
test
mov
sbb
xchg
xor
stos
in
dec
sub
add
mov
inc
mov
lcall
orb
and
mov
xor
sbb
sub
mov
fs
add
xorl
popa
in
push
xchg
jo
gs
xchg
cmp
movsb
mov
es
mov
or
fisubrs
push
sbb
add
pushf
lret
enter
imul
xor
das
push
fcompl
mov
movsl
add
mov
and
sbbl
cs
xor
je
mov
jno
and
add
jecxz
jo
ret
adc
in
xor
rorb
testl
shrl
jbe
lret
push
movsl
loopne
and
or
cwtl
test
inc
mov
mov
sub
aas
clc
dec
xor
sub
nop
pop
cmpb
test
dec
adc
or
out
mov
jle
loope
jno
mov
lret
sub
fsubl
push
add
mov
test
mov
sbb
mov
gs
rcrl
std
test
mov
adc
pop
add
mov
jmp
xor
repz
mov
pop
daa
dec
divb
sbb
imul
dec
or
jl
adc
dec
jmp
ficompl
or
or
mov
scas
mov
int3
insb
icebp
mov
mov
imul
mov
sbbl
xchg
jnp
iret
mov
push
stc
sbb
fadds
cmp
and
push
add
test
pop
punpckhbw
pop
idivb
xchg
ds
enter
xor
cltd
test
xlat
les
inc
xor
xchg
jo
mov
rcll
stos
addr16
mov
mov
lea
push
push
push
push
mov
lret
adc
jp
fcoms
or
fildll
or
insl
out
sub
in
repz
test
sti
pop
and
mov
cmp
fs
imul
dec
adc
mov
jmp
xor
pop
sub
cmp
xor
push
lret
mov
jnp
push
repz
int
ror
popa
pop
std
adc
push
mov
push
mov
imul
or
xor
sbb
jp
sub
int3
daa
push
lahf
dec
sub
mov
call
insl
leave
jle
out
stos
ja
jo
pop
out
inc
gs
or
ret
addb
daa
push
js
insl
jg
adc
outsb
jb
mov
test
xlat
push
add
add
lock
pop
fildll
xor
cmp
jmp
lea
sub
mov
scas
or
mov
cmp
daa
les
test
and
je
mov
mov
les
adc
sub
mov
or
imul
xor
stc
popa
and
xlat
xor
xchg
mov
int
sbb
enter
mov
add
mov
or
xchg
iret
xchg
dec
xchg
mov
rcrb
test
out
je
mov
cmp
mov
or
ret
negb
fwait
aas
sub
mov
adc
aaa
or
fwait
xor
pop
mov
pop
aas
mov
fwait
add
in
fwait
inc
popa
cltd
aaa
adc
push
ret
sbb
inc
push
lcall
imul
pop
js
xor
aad
add
loope
push
pop
cmp
fwait
pop
aas
scas
sbb
push
iret
aad
daa
lods
xchg
stc
lcall
fldcw
incl
sbb
ret
xchg
arpl
add
or
mov
std
nop
inc
mov
jmp
xor
rolb
add
push
or
aad
and
nop
pop
xor
cmp
xor
imul
pop
push
push
or
or
jnp
jb
enter
push
xchg
sub
adcl
insl
pop
xchg
shlb
pop
xorl
and
push
mov
mov
mov
sub
repnz
sub
push
dec
cmp
sbb
repz
push
inc
cmpl
imul
or
inc
mov
mov
xor
sbb
mov
adc
sahf
pop
pop
shl
lods
sbb
fadds
mov
into
inc
mov
shr
xchg
cmp
scas
mov
out
inc
mov
inc
mov
arpl
jl
and
daa
xchg
movsb
subb
inc
fisubrs
dec
cmpb
dec
dec
int3
pop
cmpsl
icebp
mov
rcrb
inc
adc
lret
or
cli
mov
aam
enter
cmpsb
adc
cwtl
test
rclb
call
jb
and
leave
fisubs
xorl
inc
test
dec
movsl
insl
mov
daa
or
xchg
sarl
das
pop
jo
jb
and
icebp
es
mov
pop
jns
push
call
cmc
pop
test
push
push
iret
inc
jae
jge
and
sbb
sbb
add
push
into
movsb
mov
fisubrl
insl
mov
pop
and
fucomp
push
and
outsb
adc
mov
insb
lods
idiv
mov
inc
mov
stos
push
or
jne
cld
push
fisttpll
push
cmp
outsb
shl
sbb
or
cwtl
add
push
js
int
repz
subb
cmc
loope
jbe
mov
fdivrl
push
stos
dec
add
mov
sbb
pushf
push
cmp
xchg
xorl
out
shll
or
dec
fcoml
das
mov
add
pop
jnp
sub
or
sub
cmp
push
aaa
mov
and
ja
inc
ljmp
jbe
imul
adcb
mov
add
pop
mov
push
bound
push
and
dec
mov
mov
loope
and
pushf
imul
test
dec
dec
outsb
mov
xlat
mov
xor
clc
adc
or
out
jne
rol
sbb
scas
mov
push
add
jmp
mov
xchg
ds
mov
dec
xchg
lods
aad
jb
das
sbb
js
jae
neg
jnp
sub
mov
icebp
outsl
pop
and
jp
mov
test
popf
js
scas
mov
jno
loop
push
mov
mov
mov
jb
mov
cld
divb
movsl
lret
jbe
mov
or
decl
lahf
dec
ds
lret
movb
ret
data16
scas
addr16
xor
cmp
in
mov
lcall
loopne
add
sbb
cmp
mov
xor
or
mov
xorb
lods
push
ljmp
cmpsl
xchg
sbb
mov
insl
mov
jg
lahf
pop
or
mov
scas
lcall
xchg
mov
sahf
sbb
mov
iret
push
call
cmc
shr
jl
push
xchg
mov
loop
in
push
jne
aas
dec
lahf
lods
jbe
pop
ja
jnp
fistpl
jae
fsts
push
cmc
or
jge
addb
test
xchg
out
xor
nop
leave
jl
dec
leave
mov
push
orl
arpl
and
xor
repnz
or
xchg
jl
push
aad
inc
inc
pop
push
and
test
cmp
mov
inc
clc
xchg
sub
outsl
mov
mov
jmp
test
adcl
imul
jbe
xor
push
out
data16
xchg
mov
stc
jecxz
lcall
xchg
jnp
mov
inc
xor
dec
shr
xor
xor
addr16
out
es
or
lea
psubusw
std
dec
mov
fs
jg
loope
cltd
mov
push
sti
test
loopne
mov
inc
xchg
or
fwait
mov
pop
dec
loopne
mov
hlt
xchg
adc
scas
das
fwait
jo
mul
push
push
out
jmp
fidivs
or
not
xorl
xchg
aaa
lahf
and
sub
and
lret
ja
mov
xchg
jns
xchg
xor
mov
test
or
dec
sbb
and
stc
xchg
push
cmp
clc
push
pop
js
pop
or
cmp
or
xchg
pop
inc
leave
int
push
mov
inc
mov
pop
dec
lock
iret
in
jno
pop
dec
jl
int3
leave
jl
sub
mov
dec
pop
outsl
pop
mov
in
out
mov
mov
js
sbb
pop
xchg
sub
aas
sahf
pop
push
and
mul
push
in
dec
fwait
pop
ss
std
cltd
popa
ficoml
es
das
mov
inc
push
add
mov
xchg
inc
jl
adc
or
cld
adc
call
dec
stc
jecxz
icebp
inc
dec
jmp
cwtl
lahf
ret
shrl
dec
mov
cmp
andl
sub
mov
repnz
call
xchg
xlat
mov
and
mov
loopne
enter
shrb
fcoml
fs
ja
out
rcl
pop
gs
dec
push
inc
subl
fdivr
mov
push
les
xchg
mov
xchg
rorb
xor
aam
int3
icebp
and
jg
andb
rcll
out
cwtl
xor
mov
and
stc
mov
les
adc
stos
xor
lret
insb
sbb
nop
dec
add
push
out
movsb
or
data16
aam
lcall
mov
mov
nop
push
add
repz
lret
jmp
adc
push
js
push
jp
adc
push
idivb
push
cmp
mov
lds
and
cmp
push
test
and
xchg
sbb
test
shl
fbstp
movsl
in
pop
ret
jo
in
or
mull
jmp
sub
fstl
mov
ds
xchg
movsl
mov
int
jmp
push
scas
cld
repnz
daa
or
aad
aaa
sbb
sti
mov
add
inc
and
xchg
cmp
add
jge
sarl
add
add
add
in
mov
jns
jg
or
lret
sub
pop
mov
out
scas
lahf
adc
push
les
fsubrs
gs
jg
sarb
adc
xchg
mov
insb
mov
cld
jle
sbb
addr16
mov
pop
sarb
jb
ds
ljmp
jbe
inc
xor
jle
jecxz
pop
mov
inc
or
mov
out
mov
loopne
jno
push
pop
or
inc
std
adc
fld
mov
jae
or
outsl
testb
xorl
jae
fildl
jg
sub
jl
ret
aas
insl
dec
push
xor
add
nop
std
cmpsb
out
pusha
or
sbb
cltd
fidivrs
mov
xchg
jns
add
inc
pop
aam
cmpsb
sbb
xlat
ret
cltd
outsl
push
out
daa
lret
rcpps
ret
test
sub
popl
aaa
negb
jl
push
ds
in
sbb
insb
mov
and
enter
jno
mov
pop
adc
cmpsl
ja
inc
and
inc
mov
hlt
push
fldl
cmpb
inc
lods
sahf
sub
or
jl
lea
xor
mov
arpl
inc
mov
test
lds
mov
enter
cmp
add
xchg
dec
je
pop
bound
jbe
fdivr
add
mov
xor
fimull
xchg
pop
sbb
jb
movsb
fisttps
movsl
inc
movsb
sub
lcall
mov
jg
test
fwait
cmp
aam
push
mov
movd
add
outsl
inc
add
stos
push
xchg
jno
push
mov
es
dec
ljmp
jbe
lds
dec
clc
cltd
dec
pop
push
cmp
mov
pop
mov
imul
cmp
out
fsubrp
test
ljmp
and
insb
mov
mov
push
bound
hlt
dec
rclb
lahf
mov
fnstsw
inc
loope
jl
ljmp
and
cmp
repnz
sbbb
push
in
pop
int
fidivs
rclb
add
call
inc
xchg
cs
mov
movsb
inc
and
aam
repnz
xor
mov
daa
lods
popa
sarb
inc
jg
movsl
mov
sub
dec
scas
sbb
jnp
push
sahf
mov
xchg
sbb
mov
or
adc
shr
je
and
push
ljmp
loop
std
mov
test
dec
out
and
push
jmp
pop
jmp
bound
js
sbb
push
aam
inc
cmp
rclb
scas
cmpsl
test
pop
out
aad
imul
and
idivb
in
div
rcrl
jg
into
ss
popa
out
and
push
xor
mov
stos
out
pusha
movsb
les
cmp
add
pop
sbb
sbb
fsubrl
inc
jmp
add
cwtl
repnz
inc
xchg
lea
fldt
push
inc
mov
inc
gs
lret
push
pop
sbb
in
pop
fidivs
xchg
mov
or
ljmp
xchg
fadds
movsl
inc
xor
lret
inc
pop
fidivrs
xor
jo
dec
cltd
cmp
fildl
fcmovnb
sarb
ja
cmpsl
popf
xchg
and
scas
test
xchg
sahf
int3
mov
mov
xchg
or
cld
cltd
andl
mov
add
xchg
icebp
out
ret
add
daa
hlt
push
sbb
jno
imul
hlt
cs
dec
and
mov
int
and
inc
xor
lods
in
mov
sub
movsl
jnp
push
xchg
push
jbe
mov
into
in
sti
fcmovne
dec
cmp
pushf
jl
pusha
mov
or
loope
xchg
mov
out
nop
push
mov
test
sub
lds
fwait
stos
dec
addr16
mov
leave
mov
std
test
stos
sub
mov
out
clc
addr16
xlat
shll
dec
mov
popa
mov
ds
jmp
mov
cmp
push
inc
jmp
std
dec
mov
dec
push
dec
and
jae
add
cmpsl
shlb
jnp
mov
loopne
testl
adc
push
and
jne
adc
push
notb
negb
sahf
xlat
pop
aaa
adc
mov
jns
inc
lods
pushf
xchg
into
outsb
fcmovnbe
mov
cwtl
movsb
jae
adc
mov
mov
out
cmp
sbb
aam
xor
inc
lcall
sahf
mov
xchg
mov
stc
push
xchg
aam
stc
in
pushf
sub
daa
inc
and
mov
cmp
lcall
aaa
xchg
test
mov
xchg
xchg
xor
mov
insb
cmp
mov
sbb
js
adc
orl
imul
dec
xchg
arpl
stc
mov
stc
mov
jne
inc
lds
ljmp
xor
inc
cli
cli
push
inc
cmp
mov
jle
or
out
push
adc
je
lods
mov
dec
xor
rcl
in
leave
lods
out
es
outsb
push
jmp
rcll
sbb
adc
movl
out
loop
out
stos
jnp
cmp
orb
fwait
add
jae
push
push
addr16
stos
pop
lcall
mov
cmp
stc
jno
lds
in
fcomip
es
fcmovnu
pop
lea
xchg
es
push
fcomps
dec
inc
sbb
shr
mov
test
mov
pop
aas
std
push
jle
sub
mov
arpl
call
mov
inc
cmpb
aam
mov
cmp
push
mov
out
inc
mov
jl
adc
mov
cmc
pop
fdiv
inc
sbb
cmc
mov
imul
int3
insl
sahf
scas
sbb
sub
aaa
or
xor
dec
lahf
mov
inc
cmpsb
push
mov
mov
push
lahf
dec
faddp
push
push
aaa
cmp
adc
cld
push
add
test
mov
sbb
loope
jg
shll
sub
cltd
xchg
loop
loopne
lods
sub
pushf
xchg
jns
mov
mov
shlb
push
ret
pop
aas
scas
in
mov
sub
inc
cmp
adc
jno
sbb
fdivrl
shlb
frstor
pop
lcall
xchg
jo
icebp
icebp
jmp
mov
das
rorl
rorl
mov
les
jno
mov
push
cmp
pop
js
ja
negl
pop
pop
push
out
ds
inc
inc
in
mov
push
add
data16
and
jns
add
mov
rclb
sti
fsubl
and
out
loope
nop
push
cld
aam
movsb
xchg
pop
fwait
adc
push
sub
jb
das
cmc
daa
out
rol
ret
pop
fildl
test
xor
aad
rorb
adc
cltd
push
and
int
mov
pushf
outsl
lock
xchg
or
cmp
mov
dec
xor
mov
pop
xorb
std
xchg
xchg
or
mov
nop
inc
stos
popa
scas
addb
lahf
sbb
sti
rcll
add
or
jge
pop
or
out
hlt
lds
imul
jno
jmp
popf
push
out
cmp
aaa
sahf
rolb
jl
pop
lret
bnd
imul
cmpb
cmp
mov
cmp
rorb
rolb
mov
repz
jmp
arpl
roll
mov
cld
dec
jno
je
jbe
stos
xchg
int3
sbb
xchg
loop
in
leave
sub
es
push
lods
xchg
push
test
repnz
sahf
ss
enter
push
cli
ljmp
loop
push
sbb
inc
lods
shll
push
xchg
mov
mov
insl
inc
addr16
xlat
inc
lods
mov
add
shrb
xor
test
jae
pop
cld
push
or
add
out
sub
fldcw
lahf
dec
mov
cmpl
jge
outsb
mov
push
mov
stos
mov
xor
in
enter
imul
xor
xchg
pop
fimuls
mov
es
imul
loope
add
jl
inc
daa
fdivrs
ret
mov
push
sbb
int3
daa
loope
mov
into
sbb
push
sbb
dec
xor
sbb
jecxz
and
push
rcrb
bound
or
dec
pop
mov
nop
and
pop
cmpsl
in
nop
mov
sub
dec
push
push
add
sahf
mov
cmp
sbb
nop
popf
xor
mov
outsl
popa
aam
adc
cs
push
faddl
cmpb
test
mov
js
fs
test
das
movsl
fsubs
cmp
incb
jecxz
pop
data16
sbbl
jne
enter
cmp
mov
mov
xchg
rolb
stos
aaa
fwait
jle
scas
jb
sbb
aas
lcall
inc
mov
popa
mov
jmp
in
dec
inc
xor
out
in
test
cmp
xchg
sub
das
cltd
sub
jmp
xor
imul
adc
mov
repz
mov
pop
out
jnp
adc
mov
adc
sub
xlat
inc
inc
test
add
or
push
adc
mov
cwtl
addr16
push
icebp
in
xor
and
fbstp
scas
and
adc
xlat
mov
sub
call
aaa
mov
jmp
adc
repnz
pop
push
loope
jne
out
rol
push
jo
sub
pop
adc
popf
lock
xchg
movsl
imul
pop
cmp
adc
shll
cltd
pop
jo
adc
pop
popf
lahf
out
test
aas
push
imul
add
in
mov
sysret
imulb
dec
dec
test
int3
out
push
ss
xor
and
fldcw
dec
repz
rorb
add
loopne
and
into
jg
in
imul
xchg
jmp
dec
fisttpll
mov
xor
ja
adc
xlat
ja
movsl
cmpsb
and
and
loope
cld
and
sub
adc
outsb
fwait
or
xchg
mov
add
pop
dec
add
mov
xor
leave
out
test
popf
dec
sti
cmp
fcompl
sbb
mov
les
nop
pushf
mov
bound
daa
repnz
cmpsl
data16
inc
test
repnz
imul
pop
xchg
jp
mov
pop
mov
test
popf
mov
pop
ficoml
xchg
or
mov
and
jbe
xlat
imul
push
shlb
ljmp
push
and
xchg
loope
fadds
ret
xchg
sbb
pop
push
xchg
add
or
lret
mov
sub
push
xchg
xchg
add
aad
mov
cs
ret
insl
in
dec
stos
hlt
nop
mov
and
shll
pop
adc
jg
jmp
outsb
push
mov
sbb
mov
lods
out
inc
neg
add
aaa
xchg
arpl
pop
int3
fmul
scas
mov
outsl
jmp
int3
pop
stos
sub
mov
fildll
mov
pushf
fcmovne
sub
lret
mov
test
mov
pop
fadds
mov
xor
jb
or
ja
xor
les
stos
in
sbb
decb
mov
inc
pop
roll
imul
xchg
cmpsl
lcall
mov
sbb
or
cmp
or
xchg
adc
imul
xor
rcrb
ds
ja
and
ljmp
lods
sbb
xchg
gs
and
inc
xor
lock
iret
xorl
filds
stc
repnz
xchg
cltd
shlb
out
insl
jl
push
add
dec
xchg
cwtl
das
scas
mov
xchg
rcrb
adc
ljmp
in
daa
pop
mov
or
mov
lahf
js
pop
aad
movsl
in
push
loop
mov
adc
add
popf
mov
sbb
ficompl
xor
insl
jae
adc
jp
les
shld
testl
sub
mov
enter
push
inc
mov
mov
lods
inc
mov
dec
aam
aaa
rorb
inc
cs
dec
push
cs
jne
xchg
push
mov
or
in
dec
imul
fmull
mov
adc
dec
xchg
data16
rclb
std
ret
or
rcl
fidivrl
sbbl
cmpsl
clc
adc
inc
and
jo
pop
xchg
popa
add
xchg
jns
or
adc
xor
push
leave
pop
pushf
and
icebp
bound
cmp
mov
dec
mov
dec
add
in
movsl
add
add
int3
ljmp
adc
lea
sbb
xor
imul
xor
stc
xor
xchg
int3
or
leave
in
push
mov
mov
shll
jp
xlat
mov
sbbb
adc
lret
testb
and
mov
aam
dec
je
das
leave
fcomps
or
test
in
or
mov
sbb
in
or
dec
into
inc
inc
popa
lret
cmp
mov
xchg
xchg
xlat
xor
lea
xchg
out
popf
and
sbb
je
fs
mov
icebp
jne
in
daa
push
xchg
mov
jbe
and
jne
mov
sub
inc
xchg
imulb
rcrb
add
fdivrs
mov
repnz
sbb
scas
push
xor
mov
cmp
arpl
push
sub
std
ljmpw
jl
js
ja
dec
pop
into
jmp
mov
lcall
outsl
jmp
sbb
inc
cmpsl
pop
test
imul
and
incb
adc
adc
adc
rep
push
dec
mov
lret
adc
mov
jmp
adc
push
mov
mov
aam
fxch
fstl
fcmovu
adc
insl
mov
mov
adc
xor
adcl
mov
cld
adc
dec
or
xchg
orb
and
arpl
outsb
ljmp
popf
jl
xlat
scas
jno
fwait
roll
push
nop
sbb
mov
cmpl
movsl
cmp
bound
test
mov
dec
push
mov
xchg
outsb
data16
imul
in
test
ret
outsb
cmp
pop
loope
jae
fldpi
aaa
cmp
pop
in
push
out
das
or
cmc
jmp
jge
ljmp
push
imul
jae
and
mov
stos
call
insl
loop
pop
inc
or
int3
or
inc
or
neg
xor
add
test
in
push
daa
push
in
add
ret
lods
jecxz
dec
pop
cmc
lods
in
push
clc
andb
pusha
mov
pop
sbb
cltd
add
push
fidivs
movsb
stos
and
sub
icebp
ret
pop
out
lods
sub
leave
jl
mov
mov
icebp
sahf
inc
inc
mov
bound
dec
mov
mov
fsubr
imul
stos
out
rolb
lds
add
pusha
fldt
mov
push
inc
jb
scas
popa
or
sti
idivl
test
mov
insb
dec
sbb
test
mov
stos
sti
push
fcomps
pusha
jl
sti
push
fs
adc
jb
data16
adc
mov
das
mov
shlb
sub
int3
inc
push
pop
jns
jbe
jg
dec
imul
xchg
sbb
outsl
fiaddl
sbb
jl
test
jl
mov
cmp
in
int3
adc
mov
loop
mov
addl
insl
movl
or
cwtl
je
sbb
pop
mov
mov
pop
xchg
cmc
inc
outsl
mov
fs
stos
xor
mov
adc
out
inc
xchg
xor
cmc
sbb
mov
ja
movsl
or
imul
leave
inc
ficompl
xor
mov
aaa
push
push
and
das
shll
mov
cmc
xchg
jge
or
je
xchg
les
adc
mov
adc
cmpsb
mov
jae
cltd
scas
mov
movsl
xor
repnz
mov
sarl
cmp
mov
pusha
decl
or
add
stos
lds
mov
insb
lods
push
or
enter
xor
adcl
rolb
test
mov
lock
icebp
jae
loope
repnz
outsb
adc
je
cmc
mov
orl
loop
loop
sbb
mov
adc
rorl
push
lea
mov
jno
add
push
push
shl
ds
or
xor
inc
cmp
adc
test
mov
xchg
and
sub
mov
inc
mov
mov
inc
stos
call
xchg
cwtl
jbe
adc
push
popa
fildl
pop
into
push
stos
js
cld
add
and
add
ss
fnstsw
in
ljmp
daa
or
movsb
scas
xor
outsl
mov
xchg
out
mov
test
pop
and
adc
test
int
dec
inc
push
popa
mov
add
mov
bound
shll
cmpsl
test
negb
cld
shrl
filds
sub
push
rolb
and
mov
sub
mov
xor
clc
loop
in
sub
push
add
add
and
subl
adc
popfw
dec
inc
push
cwtl
xchg
add
test
sbb
js
out
nop
jmp
inc
outsb
shrl
jb
jmp
sub
in
adc
hlt
jbe
lods
mov
rclb
lcall
pop
xchg
adc
jb
popa
int
call
mov
arpl
xchg
mov
pop
std
dec
arpl
sub
lea
jl
push
in
sub
xchg
dec
mov
mov
enter
pop
xchg
mov
xor
mulb
xor
pop
add
lds
notb
neg
ret
aaa
mov
pop
xor
test
cwtl
test
popf
sub
imul
pop
inc
shl
and
push
fisttpl
cli
enter
dec
jo,pn
je
movsl
cltd
out
pusha
push
mov
outsb
js
sbb
into
or
jg
inc
stc
sub
into
pop
pop
test
cld
test
pushf
movsl
out
xchg
pop
jg
pop
mov
mov
lahf
pop
lds
les
pop
or
frstor
iret
repz
inc
shlb
mov
fldcw
sbb
sbb
cmp
fdivrs
dec
repnz
in
popf
mov
pusha
rorl
rcrb
push
in
lods
xor
push
cmp
sub
sbb
pop
sarl
pop
out
xchg
add
test
cld
pushf
dec
bound
jl
bound
cmp
sub
movsl
in
push
sub
add
and
ret
push
jae
pop
inc
dec
pop
fsubs
into
push
bnd
sbb
fadds
sbb
push
push
fstl
aaa
mov
call
rclb
push
jmp
pop
sub
test
clc
loope,pt
ss
aaa
xor
das
add
lcall
push
jl
cltd
mov
mov
xlat
iret
mov
jnp
clc
dec
lret
call
push
icebp
mov
mov
mov
cmp
or
push
push
mov
mov
xchg
sbb
xchg
roll
dec
jmp
push
add
xchg
int
pop
call
lret
lcall
pop
mov
mov
movsb
push
fwait
dec
pop
and
shrb
xchg
lret
xor
mov
mov
or
mov
ds
xor
fs
add
into
jle
adc
mov
pop
lods
sbb
xorl
sub
jge
pop
or
push
popa
rcrl
imull
or
inc
pop
adc
or
or
push
fisttps
add
push
nop
mov
lret
scas
cmpsl
addl
jp
iret
sbb
or
pop
lds
mov
inc
cmp
and
imull
sbb
out
fldt
das
fdivr
lods
lret
mov
inc
pop
imul
jo
bound
xorb
dec
inc
cltd
and
fwait
mov
inc
mov
ffreep
sub
jl
lcall
push
idiv
adc
adc
adc
in
cmpb
lods
aam
shlb
jmp
and
add
jecxz
mov
push
test
xor
add
mov
loopne
nop
icebp
bound
stos
and
aas
cmp
shl
xor
inc
cmp
adc
sub
pop
cmp
movsb
repz
sbb
clc
jne
fucom
fistpl
mov
adc
lods
int
push
cli
jno
outsl
jo
loop
mov
shlb
iret
clc
stos
push
jle
imul
iret
push
das
sbb
lret
adc
inc
pop
xor
sub
bnd
popf
push
sbb
out
cld
mov
js
or
enter
mov
lret
movsl
xchg
mov
cmp
mov
or
orl
jnp
mov
push
fcmovnb
lea
mov
test
mov
mov
inc
test
inc
sub
pop
jno
mov
enter
dec
mov
add
les
cmpsb
sbb
rcll
loop
add
mov
cwtl
mov
ss
icebp
sbb
nop
jmp
outsb
fdivl
cmpxchg
mov
popf
jecxz
adc
sti
js
mov
pop
movsb
lock
lods
ror
lcall
sub
outsl
test
icebp
xor
jo
popf
sbb
int3
int
add
outsb
sub
subl
outsb
xor
out
mov
adc
xor
adc
fwait
lret
rcr
sub
mov
stos
movsb
js
jns
outsl
repnz
push
cwtl
and
cmpsb
lahf
stos
cmp
rorb
shl
in
fistpl
jp
jns
fwait
movsl
xchg
jns
das
mov
push
nop
shrb
out
cld
jnp
pop
pop
dec
adc
pop
xor
and
and
xchg
jnp
pop
adc
push
pop
dec
lods
jge
xor
movsl
add
loop
gs
xor
ss
mov
sarl
and
and
sbb
jne
hlt
dec
stc
aad
xchg
mov
test
das
imul
pusha
xchg
test
lret
ret
push
add
test
push
xchg
mov
pushf
lea
xchg
sbbb
out
mov
add
rcrb
jbe
or
iret
imul
ja
repz
andl
mov
add
adcb
dec
fwait
mov
dec
mov
mov
mov
add
lods
fwait
arpl
dec
jae
xchg
xchg
push
pop
lock
movsb
pop
jns
mov
shll
sbb
jae
cli
pushf
mov
and
xchg
inc
xor
jge
xchg
cli
into
dec
fstpt
lods
add
out
es
xchg
inc
push
jb
ja
push
pop
jbe
fstp
stc
rclb
mov
data16
xchg
adc
aas
jno
fsubs
hlt
cmpl
lahf
and
pop
sub
pop
push
mov
imul
mov
or
xor
mov
fs
scas
mov
mov
sbb
or
and
jns
aaa
test
icebp
pop
xchg
shlb
das
sbb
pop
movsb
test
outsb
push
cmp
mov
pop
mov
inc
adc
add
xor
mov
xlat
je
push
sar
ljmp
lret
das
add
push
and
outsb
stc
lock
xchg
jne
ret
or
fxtract
push
aaa
pop
mov
aam
jmp
pop
sub
dec
enter
cltd
ss
push
test
xor
arpl
dec
mov
outsl
ret
mov
shr
dec
outsb
mov
js
scas
test
xchg
ds
ds
pusha
test
and
adc
and
mov
stc
sub
repnz
xor
sub
xchg
fistpll
and
jo
xchg
inc
enter
das
in
xchg
out
push
or
adc
jmp
and
out
outsl
das
mov
das
xchg
js
pop
mov
lahf
sbb
cmp
push
out
add
aam
add
iret
loop
mov
lds
sub
test
lea
pop
fcoml
mov
sub
les
cmp
insl
pop
pushf
in
and
sub
or
ss
sbb
mov
inc
imul
add
jmp
pop
cmpl
mov
xor
clc
aaa
push
mov
sbb
xchg
or
pushf
jno
repz
fwait
lods
lods
add
leave
add
xchg
xorl
mov
and
ret
push
movsl
dec
sbbl
push
lahf
fs
or
sbb
popf
rolb
outsb
adc
cmpsb
mov
jl
mov
push
and
adc
icebp
js
in
xchg
ss
dec
data16
adc
cmpsl
mov
or
xor
fcoms
jecxz
sti
add
inc
cmc
mov
inc
ss
cmp
lahf
sbb
mov
mov
loopne
popa
ret
sbb
xchg
out
xchg
out
js
insb
call
inc
mov
cmp
ds
jl
int3
sbb
add
popa
fstpt
push
add
mov
or
adc
mov
pop
sbb
pop
call
adc
fisttpl
jmp
push
jnp
pusha
lods
mov
call
pop
adc
mov
fwait
mov
gs
aad
setnp
or
mov
rcl
sub
dec
mov
jl
movl
sarb
xchg
push
scas
or
sbb
cmp
or
mov
add
push
testl
movsb
or
cmp
lds
testb
aam
out
imul
xor
mov
jecxz
sbb
and
adc
dec
mov
sahf
icebp
pop
sub
stos
cmp
sbb
xor
in
jo
jne
mov
rcl
mov
jae
repnz
push
and
fsub
xchg
push
les
cmp
int
inc
cmp
into
mov
shlb
int3
and
and
nop
xchg
repnz
inc
inc
dec
mov
imul
clc
stos
cwtl
jbe
xchg
clc
push
dec
pop
and
ret
adc
into
add
cmp
repz
fidivl
push
add
fdivr
and
fs
and
jl
out
push
fisubrl
cmp
add
repz
push
jnp
sarb
push
inc
sbb
hlt
data16
add
fsubs
rcr
insb
repz
leave
cmc
mov
inc
cmc
mov
xchg
cmp
push
jne
xchg
ds
cs
shrl
sub
add
xor
cmc
mov
pop
aam
sbb
nop
push
mov
or
pop
iret
nop
cltd
ds
out
add
arpl
test
jp
fldcw
mov
int
xor
dec
jo
loopne
hlt
je
mov
or
std
sub
das
int
or
imul
dec
jl
and
jmp
clc
pop
ficoms
fs
sbb
adc
mov
icebp
add
xchg
cs
adc
jb,pn
xchg
loop
lds
or
sbb
inc
dec
mov
or
out
push
inc
aam
push
cmc
jbe
add
sbb
loope
cld
cld
dec
pop
repnz
test
out
pusha
mov
enter
lock
or
mov
repz
xchg
adc
aam
xor
add
test
inc
or
int
inc
mov
jl
jle
cmp
mov
adc
ljmp
lds
ss
and
sbb
mov
scas
push
insb
bnd
cmp
loop
push
add
addb
push
inc
mov
mov
fsubr
inc
mov
iret
sub
sub
xor
xchg
test
data16
xchg
mov
test
add
fisubl
sbb
xlat
sub
push
movsb
pop
sub
test
aaa
lret
inc
push
into
scas
xor
cmp
icebp
sarb
scas
movsl
jmp
pop
pop
jl
es
cmpsl
mov
or
js
outsb
insl
mov
mov
mov
nop
pop
push
cmpsb
insb
sub
outsb
xchg
loop
in
add
out
mov
cmp
push
dec
rcr
pop
insl
pop
jecxz
lds
into
out
add
push
enter
pushf
xor
shl
mov
ja
fbld
adc
xchg
pop
cmpsb
xlat
lods
fsubr
ja
jo
add
jl
inc
pop
push
push
mov
idiv
pop
and
in
popa
adc
sbb
or
adc
dec
xchg
pop
pushl
add
rol
insb
jne
sub
sar
cmp
outsb
push
mov
in
js
js
jb
push
enter
clc
jno
mov
mov
lea
stos
mov
and
dec
rcll
fsubrl
push
xor
in
mov
add
xorl
out
dec
data16
andb
mov
int
cmc
mov
adc
xor
sti
ljmp
leave
adc
addr16
fxch
loope
daa
std
iret
sub
pop
insl
fidivs
xor
inc
mov
dec
mov
lock
xor
mov
fildl
adc
cmp
push
push
out
push
dec
jle
cmpsb
pop
or
sub
jae
mov
sarb
popa
lock
loope
or
dec
mov
loope
mov
das
js
mov
xchg
addr16
mov
or
in
cmp
push
xchg
adc
mov
adc
aas
adc
aaa
xchg
mov
loope
dec
icebp
inc
jbe
dec
lahf
mov
flds
js
aaa
mov
test
jb
inc
jne
sub
repz
ja
std
dec
ljmp
sub
and
scas
gs
and
andb
aad
add
test
cld
pop
insb
dec
jno
dec
scas
lds
test
dec
jl
mov
je
xchg
fistpl
cwtl
cwtl
mov
je
das
or
out
mov
mov
rorl
js
mov
fdivr
ljmp
inc
cmp
lret
cld
adc
xor
movsl
jle
dec
repz
adc
js
bound
add
popa
leave
pop
jno
inc
loop
loopne
add
adc
scas
dec
sbb
cld
sti
fisubs
in
div
cwtl
sub
pop
xor
mov
and
roll
inc
cltd
and
cmpsl
jmp
jle
xchg
push
inc
repnz
les
fnsave
xchg
jo
negl
rcrl
outsb
in
xchg
outsl
lea
dec
sbb
jmp
cmpsl
push
insb
neg
push
les
push
adc
sbb
nop
js
bsf
daa
cmp
inc
imul
or
out
out
stos
aas
fsts
scas
cmp
xchg
gs
dec
jmp
and
or
lea
mov
jmp
jle
or
cmpsl
mov
and
pop
daa
dec
inc
xchg
test
sub
je
jl
xchg
insb
xchg
mov
inc
sub
add
mov
out
pushf
jae
xchg
jb
dec
movsb
cmp
inc
jae
mov
mov
inc
xor
jnp
pusha
sbb
mov
sarb
inc
fdivrl
fcmovbe
and
jp
ds
ret
test
in
cmp
jnp
inc
movsb
sbb
test
insl
and
flds
xchg
or
gs
lock
test
dec
and
sahf
cmc
pop
call
dec
mov
mov
and
mov
dec
insb
lds
cmp
pop
sbb
mov
movsb
sub
rorl
mov
js
mov
scas
or
pop
or
mov
out
cmpsb
lahf
xchg
stos
daa
xchg
sub
jb
test
xor
repnz
jne
mov
dec
push
and
add
inc
data16
mov
cld
sub
out
mov
or
out
inc
push
xor
mull
in
cmp
lods
rcrl
sub
rcrb
pusha
adc
mov
cli
leave
dec
pop
xorb
jne
and
adc
adc
mov
sbb
inc
outsb
jp
aad
and
mov
rcl
xor
mov
push
jecxz
mov
pushf
inc
cmpsl
test
test
test
adc
cld
andl
jmp
cld
and
add
lret
jnp
test
dec
hlt
xor
out
push
xchg
pop
test
push
std
jb
cmp
lea
fs
clc
stos
inc
push
stos
mov
dec
push
jle
js
out
sub
loope
outsb
jge
add
leave
or
jae
adc
add
push
fnstcw
mov
push
adc
xlat
jae
iret
sar
pop
mov
adc
out
enter
or
pop
jae
cmp
cltd
xchg
imul
push
pop
jb
xor
mov
sbb
pop
aaa
pop
adc
mov
fdivp
sub
cltd
iret
idivl
out
inc
sbb
or
loop
insl
sbb
pop
inc
addr16
repz
das
cli
sub
xchg
or
xchg
sbbl
roll
fwait
popf
lods
push
mov
pop
xor
mov
jbe
xor
int
or
xor
adc
jmp
inc
popf
mov
pushf
sub
pop
leave
test
mov
inc
sbb
mov
or
mov
scas
adc
sbb
addl
mov
fists
mov
sub
push
add
jmp
mov
adc
xchg
lret
cmp
or
cmp
mov
xor
test
xchg
cmp
lock
test
push
gs
fdivs
call
mov
sub
mov
xor
orl
cmc
mov
sbb
xchg
std
mov
push
dec
cltd
pop
sbb
std
loopne
ret
xchg
insw
inc
pop
xchg
xor
mov
icebp
insb
add
lods
lahf
inc
out
mov
inc
xchg
cmc
shr
xchg
loopne
or
aam
ss
xchg
push
mov
pop
rcll
dec
xor
test
in
mov
and
dec
in
fdivrp
mov
xchg
aaa
xchg
add
sbb
ficomps
fsubrl
int
nop
jg
pusha
mov
adc
in
jb
cld
out
sub
loop
shlb
fistpll
repz
mov
add
mov
mov
jne
call
mov
ljmp
xchg
push
xor
addb
pushf
mov
outsl
out
pop
and
movsl
inc
loop
inc
loop
push
rcll
sbbl
xor
fwait
test
jbe
mov
sub
xor
out
xor
inc
dec
jne
insl
repnz
sub
je
int
insb
jo
mov
jle
mov
sbb
mov
mov
add
xchg
aam
daa
push
adc
int
mov
addb
imul
and
shrl
push
shrl
mov
sbb
jnp
sbb
lds
imul
repnz
adc
adc
dec
sbbl
and
in
push
lcall
jp
movsl
out
out
xor
mov
dec
push
sbb
es
jnp
jno
sbb
nop
test
nop
mov
jns
imul
xor
aam
lahf
pop
xchg
add
ss
xchg
mov
clc
pusha
mov
sub
mov
cmpl
enter
adc
out
push
push
in
icebp
out
addr16
in
les
add
xor
mov
movsl
ret
subl
fisubrs
out
inc
xchg
out
or
je
cmc
in
cwtl
mov
mov
xor
dec
pop
jo
push
out
pop
mov
mov
dec
pusha
pop
and
enter
cmpsb
push
ret
cmpsl
xor
mov
adc
mov
pusha
rcrl
std
inc
divl
xor
jae
mov
stc
adc
mov
scas
inc
adc
cmc
frstor
or
xchg
jmp
cwtl
je
insb
stos
cmpsb
jle
in
out
repnz
xchg
fs
and
pop
fisubs
push
aaa
push
stos
pop
jle
nop
jbe
push
sub
aas
dec
sub
pusha
repnz
call
fs
pop
push
xchg
std
push
push
roll
xorb
hlt
xor
dec
scas
aaa
out
jae
push
add
mov
clc
push
lods
mov
sub
adc
xchg
je
and
into
mov
hlt
or
gs
mov
test
sti
and
mov
or
scas
pop
dec
test
add
loopne
ds
sub
imul
mov
xchg
or
jnp
insb
jmp
insl
inc
data16
pop
pop
jmp
test
mov
shl
inc
add
into
loop,pt
mov
cmpsl
clc
mov
jge
mov
push
stos
and
insl
xchg
lods
jmp
xchg
fnsave
inc
ret
jno
pop
popf
pop
shlb
movsl
incl
xor
add
xorb
ljmp
and
scas
addr16
xlat
and
jge
jmp
pop
stc
paddsw
movl
test
xchg
hlt
xor
gs
cmp
icebp
jecxz
out
and
fninit
leave
out
xor
fistpll
dec
pop
mov
jnp
or
aam
jne
xchg
fisubl
repz
add
ja
hlt
jmp
push
enter
pop
jg
cs
clc
sbb
xorl
jmp
add
roll
adc
lds
lock
adc
jnp
bound
push
mov
mov
fbstp
xor
cmp
out
cmpsl
scas
mov
adc
sub
mov
mov
push
add
sbb
fidivrl
pushf
mov
pop
mov
xchg
call
ror
mov
out
or
fisubs
nop
mov
inc
dec
dec
mov
and
and
or
and
cmp
mov
jae,pn
mov
jecxz
add
pop
mov
xchg
sbbb
jns
push
jl
and
dec
dec
cmc
aad
arpl
cld
loope
jle
jg
scas
les
mov
push
jmp
enter
pop
mov
movsl
dec
or
and
leave
clc
inc
sbb
sbb
push
int
xchg
inc
push
shl
fwait
push
cmpsl
outsl
jne
fs
shl
nop
dec
add
push
push
dec
insb
stc
leave
sbb
push
inc
cmc
xchg
or
pop
jbe
and
add
test
aam
mov
adc
inc
xchg
mov
or
xchg
pop
out
lds
ss
in
dec
sbb
lret
movsl
push
sub
icebp
and
jns
addr16
ret
imul
adc
outsb
push
push
imul
inc
lock
fwait
test
xchg
fildl
sti
mov
xchg
pop
leave
lea
iret
jecxz
mov
cmp
cltd
bound
and
lret
cwtl
xchg
cltd
addb
jge
cmc
fisttpll
fcmovnb
in
ja
jmp
and
cmpsl
clc
jbe
shlb
xchg
dec
sub
repnz
inc
cvtdq2ps
xchg
hlt
xchg
adc
mov
push
mov
rolb
pop
xchg
dec
adc
fdivr
sahf
pop
lahf
mov
sbb
mov
ja
int
adc
xchg
dec
outsl
leave
xchg
jl
out
inc
mov
jl
dec
loope
xchg
xor
cli
cmp
je
pop
inc
pusha
insl
ljmp
push
bound
mov
push
data16
cmpsb
xchg
dec
sbb
xchg
mov
bound
adc
add
test
push
data16
movsb
movsb
jp,pn
arpl
mov
sub
jle
jnp
push
or
dec
mov
jbe
outsb
pop
inc
out
push
push
popf
repnz
leave
loop
out
mov
sub
out
dec
jne,pn
cmp
into
in
mov
cmpsb
pop
nop
xchg
stos
push
mov
adc
or
inc
icebp
mov
mov
mov
jns
xchg
mov
mov
mov
adc
or
int
cli
push
insl
scas
mov
rcrl
sbb
xchg
movsb
cltd
jae
test
scas
mov
push
pop
cmp
rcrl
mov
xlat
rorb
xchg
mull
inc
into
test
add
mov
enter
js
jns
into
out
add
push
push
sbb
xchg
icebp
sbb
mov
mov
add
dec
and
inc
je
lret
and
push
hlt
mov
ficomps
shrb
inc
pusha
test
lret
nop
and
testl
imul
insb
pop
dec
xchg
adc
das
and
leave
shlb
sahf
xchg
cwtl
fcmovu
test
or
push
jb
test
scas
std
adc
jb
and
push
or
outsl
mov
test
insb
cmp
xchg
pusha
iret
dec
and
pop
push
jns
jb
sbb
jb
pop
out
fdivrs
dec
nop
popa
push
jecxz
xor
ret
inc
add
cmp
jbe
pop
adc
mov
mov
xorl
aaa
or
jbe
hlt
xchg
roll
sbb
daa
inc
adc
jle
or
imul
ss
jb
sub
jb
cmp
cmp
ss
mov
jecxz
or
cmp
add
xor
lret
and
jno
mov
cmp
push
out
adc
jp
and
cmovae
jne
insb
loop
fs
xor
xchg
dec
xchg
dec
js
sbb
arpl
jnp
sub
xchg
inc
add
es
lret
sarl
les
sbb
xchg
add
lahf
jmp
bnd
mov
mov
call
push
sub
dec
subl
out
dec
add
and
push
js
sub
mov
ds
loopne
and
lret
loopne
lds
mov
mov
lods
rcr
cwtl
or
push
and
sbb
inc
dec
xor
xor
and
fisubrl
push
enter
sub
les
or
jnp
mov
in
sbb
std
xchg
lcall
and
add
les
sbb
jbe
in
imul
leave
xor
das
fwait
sub
mov
in
test
shll
out
dec
shll
das
dec
xchg
push
xchg
cs
adc
pop
loop
movsl
push
fisubrs
cs
cli
pop
xorb
repnz
jmp
out
mov
das
test
xchg
jb
push
sub
mov
xor
xor
sbb
sub
mov
xchg
gs
nop
lock
cmpsl
and
xor
fxch
adc
or
outsl
sub
popf
xorb
movsl
lahf
push
sub
sub
sub
dec
inc
mov
popf
xor
loopne
fnsave
cmp
out
xchg
enter
shl
mov
out
aaa
dec
ja
adcl
ficoms
je
jl
and
cmp
adc
mov
jo
jmp
mov
or
test
lcall
mov
ja
or
test
call
fwait
push
sub
mov
push
cmpsl
scas
scas
ss
xor
inc
sub
sub
add
dec
jecxz
dec
sbb
stc
or
shl
stc
pop
movsb
aas
arpl
mov
pop
les
lcall
rcl
inc
and
sub
lcall
int
in
nop
jg
sub
stc
or
cmp
inc
push
xchg
xchg
outsb
cmpsl
lods
aam
jmp
clc
push
push
pusha
dec
scas
push
add
add
add
aad
sub
sub
stos
es
xchg
pop
push
in
cmp
sub
insb
or
ljmp
adcl
nop
call
jae
bound
std
jno
enter
insb
mov
stc
out
pop
jo
adc
push
ds
push
les
sbb
xlat
imul
fucomip
push
stc
test
stos
or
icebp
add
cmp
push
or
movsb
cld
fs
lea
ja
aaa
cmc
pop
or
dec
dec
cmp
mov
mov
jno
xor
jno
pop
stos
inc
inc
dec
fcomps
dec
pop
add
sbb
xor
add
jb
xlat
lcall
pop
int
inc
pop
dec
jno
cld
xor
cmpb
mov
outsb
mov
mov
dec
dec
jmp
pop
sub
loop
mov
fsubl
mov
xor
scas
pop
imul
imul
rol
push
pop
add
inc
arpl
and
sub
sti
push
push
sub
mov
out
jo
mov
movsl
add
inc
mov
pop
jl
pop
leave
out
jne
cmp
push
sarb
lods
fidivs
bnd
pop
pop
imul
aaa
mov
add
pop
add
sub
leave
loop
xor
shll
xor
loopne
in
mov
repnz
sahf
loope
jo
ja
mov
push
dec
inc
push
inc
int
sti
aad
xchg
shll
fmull
pop
out
lds
cwtl
mov
es
inc
mov
mov
jge
inc
jae
xor
punpckhwd
in
divl
xchg
mov
stos
or
cmp
fcmovnb
mov
push
push
arpl
cld
and
xchg
stos
and
loope
bound
out
jl
es
add
and
imul
xor
mov
jmp
dec
pop
adc
jb
and
fcoml
mov
jno
fisttpll
test
rcrb
ret
lods
mov
inc
inc
std
lods
shrb
bound
jb
cld
sbb
push
das
xlat
jb
cmp
sbb
leave
jle
cmp
inc
rcrb
loopne
push
test
mov
stc
push
int3
xchg
adc
pop
and
mov
daa
push
bound
mov
xchg
dec
sbbb
sbb
dec
push
outsb
pop
add
popa
xor
mov
sbb
repnz
push
inc
xchg
mov
cmp
add
push
test
std
add
mov
fsubl
adc
ds
pop
pop
arpl
out
lret
das
mov
mov
out
loop
xchg
in
or
stos
ret
roll
aam
loop
mov
fsts
jecxz
dec
and
xchg
sbbb
mov
sbb
js
stos
fstpl
repz
scas
aas
mov
dec
rcl
test
dec
popa
add
cmp
pop
xor
pop
lods
cmp
push
sbb
das
call
mov
add
push
xor
gs
inc
pop
test
xor
pop
scas
in
xchg
push
dec
shll
sub
fcoms
jae
iret
xchg
loope
sbb
neg
xchg
xchg
hlt
into
dec
je
imul
sbb
stc
dec
cltd
sbb
mov
shlb
jo
je,pt
mov
sub
insb
mov
xchg
push
push
or
insl
push
in
test
dec
popa
stos
jecxz
pop
in
push
xorb
push
cli
rorl
xchg
xchg
in
test
cmc
fwait
mov
je
movsb
cltd
dec
out
or
cmp
mov
ljmp
push
das
loopne
fwait
ss
jle
xchg
and
inc
int3
rcl
push
xor
and
lods
lret
lea
pop
push
nop
mov
inc
hlt
push
push
aaa
in
adc
sub
stos
xchg
dec
push
push
loopne
mov
push
dec
loopne
push
jbe
fsubp
sbb
in
pop
data16
push
xchg
cmpsb
ds
fnstenv
shll
cli
adc
int
test
cmp
ljmp
jno
mov
bound
movsb
mov
loopne
pop
aaa
das
inc
fcmovnb
and
cs
popa
cmp
imul
sahf
movlps
out
jmp
dec
imul
and
xlat
es
xchg
or
repnz
dec
push
mov
mov
out
jmp
push
ja
push
mov
bnd
scas
cltd
into
ja
jns
jp
add
leave
mov
cmp
into
movsl
adc
mov
xchg
je
fldt
in
add
or
ret
mov
outsl
bswap
xchg
icebp
cli
add
mov
insl
jno
dec
arpl
les
addr16
sbb
out
fadds
lret
sahf
cli
mov
or
mov
outsl
sub
push
test
push
mov
push
je
mov
das
xchg
dec
pop
popf
xor
lcall
mov
jbe
jmp
inc
neg
int
mov
pop
adc
cmp
adc
cmpsl
dec
mov
xor
cmp
push
and
push
mov
shlb
cmp
stos
push
and
iret
out
scas
xor
mov
lds
jmp
or
cmp
iret
shlb
adc
push
jmp
adc
imul
es
les
lret
pop
mov
cmp
and
je
jnp
xchg
push
in
test
pop
outsl
insl
lcall
pushf
sbb
stos
and
push
aas
test
jns
jecxz
outsb
xor
out
mov
pop
jo
insl
mov
mov
in
dec
adc
pop
int
or
xchg
xor
clc
scas
cld
mov
loopne
scas
test
fst
repnz
xor
add
and
je
loop
dec
or
test
push
repnz
lods
movsl
testb
jg
mov
mov
and
sbb
nop
jg
hlt
fldcw
pop
and
aaa
adc
aam
xor
jno
pop
dec
movsl
out
add
push
xchg
push
scas
rcrb
xchg
js
cltd
and
fucom
push
or
xchg
fwait
das
sub
cli
dec
mov
ret
dec
push
or
sti
dec
pop
mov
bound
push
cs
mov
lea
push
shl
mov
loop
daa
adc
ja
dec
jp
inc
ds
ret
jns
out
fs
or
vpminsw
jae
mov
roll
sbb
outsb
add
mov
xchg
out
and
mov
shrb
daa
cltd
rcrl
idivl
lahf
aam
jl
or
cmp
leave
pop
mov
sbb
xor
mov
aaa
jno
movl
push
mov
jb
sbb
dec
xchg
mov
call
push
inc
mov
into
pop
rcll
push
sub
aas
lock
dec
dec
aaa
test
sar
inc
rol
jmp
cmpsb
or
or
rcll
hlt
dec
mov
inc
dec
cli
cli
mov
mov
gs
add
in
or
adc
aam
lods
addr16
sarl
imul
out
push
shll
lods
lods
pop
out
push
aaa
and
sub
xchg
add
jge
cs
xor
add
lcall
xlat
fiadds
or
std
test
outsl
push
and
mov
jmp
mov
mov
addr16
inc
stos
lock
leave
jmp
dec
je
cmp
stos
std
ret
idivb
cmpl
mov
mov
xchg
je
sbb
mov
cmp
pop
adc
sub
pop
gs
test
mov
test
dec
mov
cmpsl
mov
xor
repz
ret
adc
das
aaa
jnp
xorb
aam
bound
jo
push
in
pop
fimuls
jecxz
leave
cltd
pop
add
fldl
aaa
scas
add
lcall
imul
push
adc
xor
lock
pop
fs
jo
or
mov
add
arpl
inc
test
jno
jne
std
mov
insl
pop
call
loope
dec
xor
jecxz
dec
outsl
ljmp
clc
in
pop
int
stos
lods
xor
out
daa
or
orb
mov
push
out
ret
inc
enter
xor
ret
add
movsb
jnp
jmp
mov
insb
push
pop
cmpsl
ss
jle
inc
ficoml
insl
pop
into
incb
dec
pop
outsl
je
add
jns
daa
mov
dec
ss
jbe
lret
jmp
mov
mul
das
or
sar
jle,pn
pop
stos
or
mov
out
jno
int3
sahf
out
outsl
xchg
dec
lret
aaa
dec
loop
xchg
ret
mov
movb
enter
xchg
jb
adc
xor
sbb
loopne
stos
mov
and
mov
inc
sbbl
or
mov
jl
pop
sbb
mov
into
addr16
pushf
gs
push
push
cmp
notl
mov
mov
push
decb
fwait
lea
dec
and
movsl
data16
rorb
add
in
adc
push
les
rcll
movsl
mov
out
shll
xor
shll
pop
cmp
dec
stos
data16
inc
mov
and
sbb
and
bound
sbb
roll
add
jp
cwtl
add
xchg
nop
mov
xlat
rcr
rcll
fwait
pop
pushfw
in
dec
inc
jns
or
adc
jno
inc
ret
dec
and
add
shr
jb,pn
test
mov
daa
cwtl
push
inc
pop
or
ljmp
popf
add
xchg
mov
in
and
mov
shl
icebp
test
xor
push
jbe
mov
cmp
xlat
enter
daa
aam
dec
int
hlt
stos
je
xchg
or
das
lods
xchg
mov
mov
add
inc
push
xor
and
jecxz
mov
jbe
test
xchg
adc
fwait
push
xor
ss
add
mov
and
aaa
mov
call
mov
mov
aas
dec
shlb
imul
scas
repnz
pop
shrb
push
adc
fisubl
add
and
add
mov
or
je
shll
mov
xor
jno
shlb
push
outsl
sub
je
add
xchg
stos
js
out
incb
or
fwait
adc
and
mov
adc
subb
adc
cmp
and
mov
jne
iret
push
aam
or
mov
xor
or
fadd
icebp
mov
loopne
fcmovb
jp
or
imul
mov
outsl
cmpsb
jnp
add
mov
cmpsb
sbb
cmp
push
lret
mov
adc
add
fisttps
or
jno
pop
xor
xchg
jmp
mov
pop
dec
addl
mov
out
sub
aaa
add
mov
mov
cltd
lods
mov
repnz
lret
xchg
stc
call
mov
nop
fxch
icebp
push
sbb
push
fisubrl
setle
lock
in
clc
add
in
add
jae
subl
lcall
jne
jmp
sbb
inc
dec
aas
inc
ds
xchg
daa
mov
std
or
or
push
and
pop
sub
mov
xchg
and
nop
rorb
push
inc
push
jle
xchg
decb
xchg
mov
out
pop
xor
jbe
jae
dec
fidivs
je
test
stos
pop
lcall
mov
cmpb
xchg
mov
loop
push
cwtl
lea
mov
insb
insl
js
lock
sub
mov
mov
out
imul
mulb
jnp
lea
mov
mov
ja
or
xchg
scas
xor
outsl
mov
mov
mov
dec
mov
lock
lret
in
xchg
mov
sbb
cmpsb
or
scas
push
mov
dec
jb
fsubrp
adc
out
add
sub
fs
les
push
xor
adc
or
pop
and
dec
xor
stos
lock
add
adc
data16
std
adc
lock
mov
shll
or
jae
sbb
das
and
loope
xchg
add
pop
sahf
fldt
mov
fcmove
sub
pop
mov
mov
jnp
dec
cmp
inc
mov
fs
push
xlat
pop
add
testb
stc
and
pusha
sti
push
mov
cmp
mov
iret
pop
pop
aad
mov
ret
sub
out
mov
sub
int3
pop
add
xchg
idivl
cmp
lret
sub
push
mov
mov
sbb
inc
or
iret
push
mov
stos
and
fwait
icebp
cmovb
aaa
mov
popa
inc
pop
outsb
mov
movsb
adcb
iret
add
xchg
mov
jecxz
or
sbb
mov
jmp
pop
push
lea
mov
filds
and
cmpsl
shll
cltd
icebp
xchg
mov
int3
mov
cmp
data16
je
and
int3
lods
mov
insl
push
mov
in
sahf
mov
fidivrs
outsb
mov
sbb
mov
lds
aas
mov
pop
adc
pusha
cmp
fnstsw
xchg
cmp
sti
push
stos
lahf
dec
sti
push
jecxz
clc
xor
mov
or
insb
les
cld
mov
testb
stc
dec
adc
mov
mov
mov
arpl
sub
stos
inc
jg
js
stc
in
jo
lcall
adc
stc
sbb
insb
cmp
xlat
cwtl
int
stos
imul
les
jnp
pop
mov
push
clc
dec
xor
pop
pop
outsl
test
push
mov
cs
iret
movsb
ss
push
jge
loope
addr16
sub
rcl
test
pop
pop
sub
out
adc
insb
pop
js
jp
xchg
mov
xchg
rol
cmp
sbb
insl
rcrl
jae
lods
hlt
mov
jl
out
dec
jns
push
lods
enter
movsb
outsl
rcrl
loop
push
mov
bound
fidivrl
fbld
pop
lea
xchg
jns
dec
js
xchg
enter
enter
fwait
and
lock
fidivrl
outsl
lahf
cmp
sbb
fstpl
aad
sub
cmp
mov
and
fistpl
pushf
cwtl
push
jnp
cmp
stc
push
std
ret
jg
sub
rcr
pop
outsb
push
rorb
out
sbb
call
test
je
mov
pop
icebp
or
dec
fucomp
inc
sub
test
mov
mov
fiaddl
add
ljmp
sbb
push
roll
cmp
js
shl
movsl
aaa
push
adcb
pop
mov
push
es
add
rorb
dec
lock
xor
xlat
mov
imul
and
sub
ds
fwait
push
jle
mov
and
cwtl
cmp
mov
or
push
popa
add
mov
orb
add
pop
dec
jo
movsb
inc
cmpl
inc
cli
frstor
mov
es
push
dec
jne
cmpsb
dec
lds
xorb
sbb
mov
push
xor
les
faddl
rclb
ja
aad
aaa
lret
or
cmp
xor
mov
sti
lcall
xchg
mov
movsl
xorl
mov
ret
sub
bound
ret
jmp
fistpl
xchg
sbb
add
scas
push
push
push
sbb
adc
pop
shll
push
lcall
notl
pop
adc
test
and
mov
loope
fmuls
mov
cmpsb
shr
add
xchg
lcall
inc
add
cltd
fidivrl
das
enter
xor
dec
divb
jp
add
adc
adc
pushf
repnz
test
adc
not
loop
jno
mov
pusha
sti
scas
sahf
adc
mov
jmp
mov
hlt
sahf
fmul
or
addr16
cmc
popf
cmp
jns
push
push
jnp
sarl
cmp
movsl
out
repz
adc
movsb
clc
aad
xchg
mov
add
mov
mov
sbb
mov
jbe
sbb
insl
jbe
jecxz
mov
sbb
cmpl
cmp
mov
cwtl
mov
mov
add
mov
test
xchg
cwtl
aam
lock
xor
fsubrl
push
jae
add
pop
fldt
mov
mov
inc
dec
in
aam
test
filds
fcmovu
push
add
std
xchg
push
jg,pn
inc
fildll
sub
inc
test
leave
movsb
movsb
scas
daa
pushf
adc
jo
out
jl
mov
rcrl
gs
dec
addr16
xchg
xchg
mov
outsb
aaa
test
sub
push
test
int3
leave
mov
jbe
je
out
ret
and
sbb
xlat
cli
and
inc
scas
sbb
inc
adc
pop
fwait
cmpb
xor
lods
sub
leave
inc
jg
aaa
xor
push
mov
mov
fisubrl
daa
push
xor
xor
fsts
mov
mov
dec
push
imul
fwait
push
sub
mov
jno
insb
outsl
mov
outsb
imul
movsl
mov
inc
in
mov
dec
cmp
pop
test
mov
hlt
push
sub
mov
push
shrb
fsubs
add
mov
and
add
dec
xor
adc
or
cmp
or
lds
sub
iret
xor
pop
enter
popa
clc
pop
mov
xchg
sub
ffree
out
jle
adc
call
xchg
mov
mov
imul
js
mov
or
ret
inc
ss
in
add
or
and
mov
push
mov
xchg
jg
inc
js
xchg
inc
mov
mov
les
add
getsec
adc
push
push
add
jl
insb
imul
addl
mov
pusha
outsb
pop
add
push
xor
cmp
push
call
btc
dec
dec
cmp
mov
repz
sbb
fnsave
popf
je
push
xlat
inc
pop
inc
inc
push
testb
ss
xor
fistps
stos
xchg
inc
mov
ljmp
and
ja
inc
xchg
pop
fildll
and
dec
sbb
sub
dec
push
iret
jbe
std
push
xchg
in
adc
sub
xchg
xchg
inc
pop
rcrl
mov
pop
imul
mov
hlt
cmpsl
push
or
es
xchg
push
mov
mov
in
or
adc
out
sub
xchg
jae
dec
add
test
mov
enter
nop
daa
mov
xor
cmp
sbbb
cmp
shll
imul
enter
clc
loopne
inc
mov
jecxz
or
out
inc
cmpb
js
mov
dec
pop
test
test
mov
mov
adc
insb
lret
push
in
inc
dec
mov
inc
test
pop
vzeroall
leave
or
and
test
lcall
andl
xchg
pop
sahf
shrb
repz
call
pop
sub
incl
lods
add
and
cmp
ficoms
xor
cmpsl
mov
mov
cld
sub
js
lock
dec
dec
inc
ja
pop
add
pop
cmpsl
cmp
rcrb
mov
ret
addb
stos
sub
mov
sbbb
gs
push
sar
out
test
pop
cltd
or
sbb
mov
dec
mov
shr
xchg
stos
sub
xor
pop
add
pop
mov
xchg
mov
cs
xchg
sub
pop
cmp
adc
cs
in
addr16
das
je
imul
cld
test
xor
dec
cmp
cmp
insb
jnp
fistpl
sub
jns
cltd
ja
mov
jl
outsb
lret
or
or
imul
stos
mov
mov
fildll
mov
cmp
loope
add
xchg
and
jne
xor
std
cmc
into
jp
or
popf
sqrtps
adc
test
pop
fucomip
jb
jge
gs
xchg
mov
add
pop
jle
pop
scas
adc
lods
sbb
shll
push
push
push
mov
xor
push
bound
adc
mov
out
cli
pop
cmpsb
cmp
push
xchg
mulb
xor
add
push
mov
arpl
aas
and
sbb
sbb
shlb
xor
or
scas
mov
pop
sub
jle
outsl
jne
aaa
imul
pop
out
imul
test
mov
outsl
mov
in
shll
xchg
cli
mov
fidivs
imul
mov
jecxz
mov
xchg
insl
mov
imul
cmpb
xor
dec
idivb
mov
pop
mov
and
and
pop
cmp
push
xchg
inc
pop
cmp
jge
loope
cmp
outsl
out
pusha
outsl
dec
pop
insb
shlb
adc
mov
mov
mov
enter
into
xchg
in
andl
cmp
rolb
stos
rorl
jg
sbbb
sbb
les
fs
test
push
push
js
and
mov
fadds
mov
lock
lahf
cmp
jp
imulb
or
xor
dec
mov
pop
add
xor
aam
adc
imul
imul
movsl
fstps
out
mov
mov
cmpsb
dec
adc
push
push
loopne
rcll
hlt
lret
std
xchg
sbb
push
adc
jo
adcl
leave
das
ja
lcall
add
push
ss
jge
sub
nop
and
int3
mov
addl
dec
icebp
mov
jae
push
inc
sbbl
lods
sbb
in
bound
sub
mov
movsl
imul
push
pop
mov
pop
dec
inc
pusha
cld
inc
sub
mov
leave
sub
and
cmp
clc
pop
jle
cmp
mov
jle
mov
dec
test
cld
ja
outsl
sub
fs
movsl
addl
inc
shr
repnz
data16
stc
pop
loop
dec
jae
xchg
ror
je
lret
das
std
push
inc
sbb
scas
push
dec
add
fwait
seto
aaa
xchg
movsb
shrb
mov
aaa
fimuls
inc
sbb
int3
push
ja
dec
je
mov
xor
leave
mov
jb
mov
pop
scas
inc
notb
ja
cld
fists
jp
mov
enter
push
push
imul
and
lods
xchg
xor
mov
add
cmpb
xor
mov
aad
ss
jecxz
xchg
in
lret
test
lods
sbb
sbb
add
shrb
jo
adcb
sbb
testb
dec
adc
jmp
pop
sub
fadds
inc
imul
cmp
jg
call
adc
out
ffree
push
mov
scas
fs
mov
jns
xor
mov
leave
add
movsl
fimuls
testb
cltd
sbb
and
xchg
jecxz
sub
jecxz
xor
xchg
sbb
mov
xchg
bound
ja
mov
inc
pushf
idiv
lds
loop
shll
inc
pop
out
call
pop
cltd
jns
add
js
push
jnp
iret
jbe
cmp
pop
int
push
inc
inc
cmp
imul
and
test
jl
adc
add
gs
push
mov
jne
sub
gs
ja
xchg
mov
aas
mov
push
pop
jnp
add
pushf
mov
cmpsl
testl
xchg
rcrb
loopne
inc
sub
mov
or
fbstp
hlt
imul
out
jg
cwtl
lods
pop
xlat
add
lahf
jecxz
sahf
or
roll
pop
pop
sbb
cwtl
mov
bound
add
adc
ljmp
add
add
mov
pop
cwtl
mov
mov
jmp
clc
movsl
adc
xor
test
xchg
mov
fucomp
pop
ret
hlt
call
pop
add
adc
mov
in
fwait
mov
aad
cltd
push
out
in
call
pusha
fisttpll
icebp
mov
inc
sub
sub
push
ret
lods
dec
fwait
and
inc
movsb
lahf
sbb
sub
push
jno
adc
nop
neg
mov
pop
sti
in
in
dec
test
pushf
in
notl
je
mov
inc
push
cmp
dec
xchg
lods
pop
shll
mov
ret
nop
dec
out
loop
add
jg
mov
cmp
or
pop
es
sbb
ss
sbb
xchg
aas
mov
adc
dec
push
inc
pop
pop
add
bound
adc
sub
shll
push
int
lret
cmc
add
data16
call
nop
aad
jno
arpl
cltd
dec
jge
push
push
push
and
jbe
adc
mov
add
repnz
gs
push
sbbb
inc
fucomi
ss
mov
or
jg
cmp
aam
xchg
dec
call
dec
cld
stos
add
xor
xchg
pop
scas
pop
das
mov
in
add
addr16
dec
int3
sbb
orl
cmc
adc
cmp
pop
xchg
pop
jb
xor
add
add
xor
aad
inc
test
and
pop
aad
idivl
xchg
sti
sub
cld
xor
adc
jno,pn
les
test
cmp
fwait
lahf
jl
rol
and
xor
add
xchg
iret
jge
mov
les
mov
hlt
les
je
and
in
add
bound
iret
adc
sub
js
loop
cmpsl
pop
push
mov
sub
xor
xchg
inc
push
sub
out
jg
mov
or
scas
in
mov
adc
ss
aaa
mov
lret
lcall
push
rclb
fisttpl
push
fwait
jne
nop
sub
cmc
mov
stc
pop
inc
xor
jns
inc
jnp
and
stos
push
imulb
push
in
push
push
xlat
cmp
inc
dec
add
popf
std
mov
icebp
xchg
loope
pop
sbb
adc
push
rorb
lcall
sbb
shll
std
jp
dec
gs
sbb
or
in
adc
data16
and
mov
mov
sub
loopne
stos
cmp
mov
pushf
xchg
dec
jb
mov
std
mov
int3
rolb
sarl
push
xchg
insl
add
aam
sbb
mov
xor
push
ret
jno
pop
cmpsl
rcr
subb
pop
add
int
xchg
stos
movsl
call
mov
add
xchg
and
jbe
popa
sub
movsb
subl
or
mov
inc
aaa
rcrl
xchg
dec
pop
fcomps
imul
stc
imul
repz
push
pusha
sar
push
mov
sbb
insb
scas
mov
adc
jbe
sub
cmpb
icebp
mov
jae
dec
int3
popf
sbb
mov
mov
outsb
cmp
mov
mov
sub
sar
cmpsb
in
mov
and
dec
mov
dec
lea
ja
imul
mov
jp
push
dec
mov
xor
loop
shl
mov
rcrb
sbb
jbe
xchg
mov
test
scas
fadd
sar
push
push
add
xchg
repnz
push
push
aad
pop
xor
addr16
stos
adc
andb
jmp
pop
mov
xor
bound
outsl
adc
cmpsl
xor
sub
je
jecxz
mov
jmp
repz
mov
and
mov
stc
pop
xchg
rolb
push
in
movsb
dec
xchg
mov
mov
out
push
ficoml
lds
jae
sub
lret
dec
sbb
dec
fdivp
lret
xbegin
mulb
loopne
cmp
mov
stc
js
fimull
mov
in
jno
cmc
pop
dec
inc
sub
adcl
push
fwait
ret
fsubs
jle
dec
in
outsl
inc
sbb
js
fldt
mov
lock
loope
cmpsb
xchg
cmpsb
fistl
push
aas
and
nop
mov
xchg
pop
outsl
and
xchg
adc
shr
push
outsb
mov
cmc
loope
ja
es
or
mov
out
int3
in
pop
int
nop
ds
sub
xchg
lahf
addr16
pusha
pop
mov
subb
lret
inc
stos
push
sub
sbb
pop
pop
sbb
or
imul
mov
xlat
xchg
pop
cltd
xchg
pop
sbb
mov
orl
bound
pop
arpl
decl
mov
cli
pusha
jnp
shlb
jp
aas
sar
cmp
lea
sub
mov
xor
jo
push
pop
aas
push
insb
sti
jb
dec
test
xor
pusha
push
sub
fdivs
inc
call
cmp
repz
shlb
lock
addr16
repnz
xchg
arpl
frstor
xchg
mov
add
pop
fmuls
push
es
push
arpl
mov
movl
mov
push
call
mov
adc
jb
jne
ja
fcom
inc
add
fidivs
mov
push
mov
fcoms
fwait
push
mov
pop
div
sub
jmp
jb
push
repnz
adc
xchg
inc
xchg
ret
dec
adc
js
sahf
sub
std
cmpsb
or
mov
mov
mov
cmp
pop
daa
stc
movsl
inc
lea
cmp
adc
mov
inc
cli
jnp
push
sahf
lret
xchg
sbb
mov
add
cmp
and
dec
aam
sbb
sbb
adc
es
lds
es
jae
xchg
push
pushf
les
inc
mov
fs
fdivrl
pop
sub
mov
shlb
mov
lret
and
jno
mov
dec
jb
pusha
es
pop
addb
cmp
aaa
pop
or
out
dec
icebp
aam
xor
sbb
fldl2t
dec
fdivr
xchg
das
and
js
xor
jecxz
xlat
test
add
fimuls
xor
jns
sbbl
mov
mov
or
aaa
mov
fiadds
sbb
and
sub
push
dec
pusha
out
gs
cltd
push
push
imul
dec
push
addr16
or
repnz
mov
imul
push
inc
cmp
mov
push
stc
jns
loop
mov
roll
mov
mov
xorb
ret
repz
jno
push
lds
ljmp
mov
or
push
xor
xchg
icebp
adc
sub
xchg
mov
or
xchg
call
xchg
sarl
filds
mov
add
mov
mov
adc
sub
jb
stos
mov
or
xchg
sbb
in
cmp
test
jmp
push
std
xorl
int
mov
scas
xchg
movsb
not
repnz
popf
or
xchg
adc
lahf
incb
cmp
lds
shll
adc
popa
or
mov
inc
stos
dec
mov
mov
mov
arpl
jae
sub
into
stc
rclb
mov
mov
adc
jbe
icebp
jmp
mov
cmp
or
movsb
mov
sbb
test
dec
lods
and
push
cmp
inc
or
inc
cmp
inc
dec
lret
dec
add
cmovo
add
xor
roll
aad
loop
outsl
mov
cmp
fadds
cwtl
nop
stos
xchg
aad
mov
jae
in
and
out
sbb
sbb
inc
xchg
ljmp
enter
cmp
xor
pop
outsl
jo
xchg
fs
sar
add
in
daa
or
fwait
jbe
add
in
mov
xor
dec
out
pop
sarb
das
hlt
cltd
sbb
cmp
enter
push
pop
loope
lea
icebp
jae
xchg
popa
xor
ds
pop
fwait
mov
lcall
jge
outsl
fdivs
or
cmp
pop
adc
push
mov
xor
repz
leave
xor
cltd
stos
test
out
mov
push
stos
cmp
pop
jb
xchg
popf
push
pop
xor
loope
insb
xor
subb
pop
cld
dec
stos
mov
dec
and
adc
cltd
jl
shlb
incl
pop
mov
notl
mov
add
jle
das
add
mov
lods
jae
xor
data16
xor
xor
je
leave
lock
xlat
jbe
pop
pop
movl
fdivp
adc
dec
in
xor
push
inc
cmp
orb
das
jae
adc
pusha
jmp
mov
lock
jae
cmp
dec
mov
call
rorb
push
mov
enter
mov
adc
les
adc
mov
sub
sub
or
xor
and
pop
and
stos
sbb
or
sti
add
xchg
or
ss
outsl
imul
outsb
in
mov
mov
xor
cmpsb
sub
cld
jnp
hlt
xchg
pop
sti
aad
cmp
push
in
lock
pop
pop
outsb
sahf
popf
cmp
in
test
mov
repnz
stos
negl
push
add
loopne
inc
mov
add
repz
mov
decl
mov
outsb
adc
popl
popf
rclb
add
lock
xchg
loope
loopne
cmp
mov
subl
fcmovbe
ret
jge
mov
jp
addr16
out
loopne
lahf
fwait
mov
out
imul
add
xor
das
adc
ds
xor
cld
mov
inc
push
rorb
mov
imul
test
lret
out
popf
mov
pop
push
adc
xchg
pop
popf
enter
les
push
in
mov
xchg
pop
sti
and
or
fcmovbe
dec
insb
test
inc
insl
jbe
sbb
into
and
fwait
mov
jno
ss
and
cs
mov
imul
push
gs
sub
rcll
add
sub
add
xlat
xor
cltd
adc
mov
jne
push
add
pop
add
sbb
pop
xchg
xlat
sub
and
enter
sbb
inc
pop
stos
addr16
pop
pop
jmp
dec
js
cmc
mov
and
daa
popa
add
xor
jl
jne
icebp
call
out
mov
stc
pop
or
or
sub
add
dec
and
test
fisubrs
push
sbb
sub
jecxz
cmp
dec
movsb
sub
lahf
sbb
orb
arpl
mov
sbb
ds
imul
cs
icebp
lds
inc
push
dec
repz
push
cmp
call
ja
and
mov
aam
imul
and
scas
push
pop
es
jae
jmp
adc
pop
xchg
mov
push
cmp
push
repnz
movsl
inc
mov
loope
stos
enter
adc
dec
out
lds
jp
pop
push
cmp
xchg
or
out
jg
add
mov
sbb
pop
sub
dec
mov
xlat
insb
dec
add
xor
into
scas
stos
mov
adc
pop
mull
negl
jp
mov
xchg
dec
aaa
pop
int3
cwtl
sub
das
icebp
push
iret
cmpsb
ret
mov
lcall
aas
jle
and
inc
mov
xchg
mov
imul
push
fs
hlt
repz
je
jnp
lods
adc
sub
scas
xchg
jl
daa
imul
or
push
jg
loope
cmp
sub
mov
push
shll
das
ss
dec
push
shlb
inc
xor
adc
mov
jne
cmc
popa
clc
shll
jmp
mov
push
fsubrs
xchg
fsubl
dec
sbbl
data16
cmp
in
lret
add
scas
dec
and
xor
jns
adc
fistl
jo
std
pop
sar
xchg
stos
popl
sahf
scas
sbb
inc
pop
addr16
sbb
out
pusha
mov
jmp
addr16
test
mov
jl
cmp
pop
repz
xorl
loope
xchg
lods
repnz
mov
adcb
clc
jb
xor
mov
out
sub
imul
daa
cmp
loopne
inc
jae
xchg
mov
das
fsubs
or
sub
adc
cmp
mov
lahf
ret
int3
cmp
clc
pop
pop
lcall
es
dec
jnp
rclb
jg
cmc
and
lock
pop
push
out
loopne
sub
jbe
mov
idiv
lea
fs
in
or
mov
lods
das
clc
movsb
js
mov
sub
cmp
bound
cmpsb
dec
sbb
dec
rcrb
mov
popf
in
jnp
fucomp
iret
inc
fs
ret
cld
xchg
iret
gs
decb
add
mov
cmpsb
out
pop
xorl
jb
push
mov
inc
fisubs
into
jmp
fisttps
into
push
insl
pushf
ja
jmp
xchg
push
mov
xchg
popa
sbb
jle
push
fsts
call
ret
inc
adc
cmc
adc
fucompp
push
test
out
xchg
jo
enter
cmp
jl
or
adc
movsb
inc
es
add
loopne
or
or
in
mov
sub
cmp
cmpsb
movl
or
jne
loopne
adc
mov
out
ja
scas
out
outsb
fmuls
clc
bound
fists
aaa
call
scas
adc
imul
adc
fimull
es
lcall
inc
and
xchg
mov
and
inc
xor
ja
cmp
cmp
rol
or
inc
scas
push
bound
adc
stos
arpl
popf
mov
into
push
xor
mov
loop
cmpsb
sbb
add
ret
fdivr
cmpb
movsl
sub
adc
or
jnp
aas
push
lods
jne
int
scas
mov
jl
icebp
lret
sub
fstpt
xchg
add
stc
push
dec
push
or
das
lods
pushf
into
mov
test
cvtpi2ps
push
pop
into
test
and
jp
frstor
lods
sbb
aad
outsl
sub
shlb
adcl
lods
lds
push
jge
push
or
mov
std
notb
ja
loope
push
xlat
push
sbb
xchg
stc
outsb
lret
jmp
mov
outsb
orb
fcmovnu
insl
test
adc
stos
pop
lahf
cli
fists
out
fsts
cmp
out
xchg
xor
mov
jne
xchg
pop
es
clc
dec
push
aam
sub
push
imul
in
dec
ret
jne
add
add
sbb
dec
dec
xor
sub
das
rcl
cs
addr16
cltd
into
push
cmpsl
shlb
xchg
jp
dec
loopne
stos
repz
testb
sbb
xchg
mov
lahf
loope
out
sbb
adc
loopne
ret
in
jbe
adc
mov
addr16
in
enter
add
dec
movsb
dec
dec
scas
into
lea
mov
fistpll
xchg
and
icebp
push
cmpsl
xchg
repnz
fs
fwait
cmc
cmpb
push
xchg
outsl
mov
mov
mull
clc
xor
bound
out
lcall
xor
shrl
lcall
ja
repnz
and
mov
mov
inc
cmp
test
push
fmuls
and
xchg
in
lods
and
and
lock
push
push
int3
rorb
inc
fmull
ret
jecxz
xor
mov
loopne
adc
inc
mov
cmc
icebp
or
nop
mov
adc
popf
out
mov
sahf
aam
rorb
lret
and
fimull
adc
sbb
xlat
sahf
es
cmp
mov
lmsw
dec
jmp
sbb
mov
scas
xchg
daa
and
roll
mov
sub
mov
inc
fcompl
push
fstpt
sbb
test
repz
lcall
lock
ret
or
mov
dec
loope
push
imul
lods
xor
or
iret
and
or
mov
add
and
sub
insb
mov
sbb
jb
push
insb
leave
cmpsl
fdivp
cmpsb
cmp
mov
stos
in
pop
sbbl
ljmp
out
out
add
jbe
aaa
or
gs
test
rol
cmp
popl
adcl
mov
push
mov
testl
inc
xchg
cltd
xor
mov
jle
rolb
out
adc
adcb
es
jnp
mov
fsubl
es
sub
out
outsb
insb
sbb
andl
mov
mov
jp
lret
ja
decb
aaa
xor
adc
mov
jns
and
filds
pop
mov
out
xchg
xor
shl
imul
jg
mov
add
test
ret
jae
pop
stc
and
mov
push
addr16
pop
push
movsb
daa
arpl
imul
fs
movsb
dec
out
out
jno
ljmp
jbe
mov
adc
icebp
mov
shlb
mov
nop
test
mov
push
xrelease
mov
scas
addl
sbb
add
dec
sub
push
xchg
pop
cmpsl
push
mov
sub
popa
add
push
shl
and
or
call
movsb
dec
aam
loopne
and
aam
clc
arpl
pop
adc
loope
outsb
dec
gs
mov
or
js
jmp
ja
dec
mov
rcll
ror
add
inc
push
push
fwait
push
insb
xor
cmp
idivl
lret
add
xchg
cwtl
fadds
std
aas
mov
in
jnp
xor
xor
leave
stos
or
clc
sub
sub
mov
out
inc
lea
cmpsb
inc
sbbb
lds
push
aam
cmpsb
mov
gs
iret
and
sbb
jg
ljmp
dec
lods
xchg
dec
push
jp
mov
mov
loop
xchg
lods
or
mov
mov
add
jno
inc
mov
fisttpll
mov
sub
cmpsl
sbb
outsb
scas
xchg
jmp
cwtl
sbb
jno
add
adc
adc
cmp
jmp
int3
cltd
fstpt
inc
adc
pop
int3
mov
loop
xchg
or
iret
xchg
push
mov
inc
adc
out
repnz
lods
add
repz
fldenv
pop
sar
sub
or
js
mov
push
addr16
imul
pop
pop
mov
xor
stos
ja
add
test
mov
out
fwait
imul
loope
jnp
dec
or
insl
sbb
inc
pop
das
lret
es
popw
popf
and
shrl
and
mov
jno
mov
mov
xchg
hlt
inc
jl
mov
shll
loopne
enter
ja
outsb
cli
ljmp
dec
jmp
imul
int
outsb
enter
dec
and
call
aas
lods
mov
inc
dec
fcmovnu
data16
gs
dec
popf
imul
add
mov
data16
add
cmpsb
mov
or
out
or
sbb
imull
xchg
lret
outsb
shlb
outsl
jp
rol
mov
inc
adc
jae
lds
outsl
call
ja
in
pop
rolb
push
test
add
cmp
fiaddl
xchg
and
xor
sub
cmp
xchg
pop
dec
push
mov
out
popa
add
add
xchg
shrb
fstpt
les
cmp
mov
mov
mov
popa
dec
push
sub
xor
dec
out
pop
stos
jae
dec
rclb
cmpsl
outsb
xchg
orl
cmp
arpl
adc
gs
dec
sub
outsb
sub
icebp
jle
and
sub
jmp
sti
test
out
sub
test
stc
push
clc
std
jg
sbb
repnz
std
xlat
popa
cli
and
mov
pop
and
inc
cltd
push
mov
push
cld
dec
ss
popa
cltd
and
and
movsl
ja
movsb
in
jg
rcrl
xchg
test
popa
orl
lock
sarl
or
mov
in
mov
leave
loope
popf
in
icebp
push
and
hlt
daa
ljmp
and
dec
sar
mov
sub
das
or
and
mov
ja
fwait
mov
xor
es
dec
or
fs
mov
mov
iret
out
cs
enter
mov
sbb
pusha
arpl
push
add
cmpsl
or
stc
sub
addr16
repnz
test
sbb
or
cmovno
int
loopne
xor
add
jnp
sub
repz
dec
xchg
pop
cmp
dec
inc
divl
js
imul
fcmovnu
mov
repz
mov
jle
loop
xchg
push
dec
xchg
out
jl
sub
jmp
je
clc
jmp
nop
cmp
outsl
sahf
and
pop
mov
push
int
aad
push
testb
mov
push
push
lods
mov
into
lret
xchg
loop
sub
dec
in
jae
sub
roll
in
push
nop
pop
mov
lea
in
cmpsb
aad
leave
mov
in
dec
add
xchg
xchg
inc
lcall
js
insb
loop
stc
fcomps
push
mov
push
push
jp
loopne
sub
int
ret
pusha
popa
pop
xchg
shlb
jbe
sbb
inc
xor
or
lret
sbb
outsl
fs
mov
dec
sti
inc
lret
cmp
cmp
mov
ret
mov
and
cwtl
push
lds
push
sub
imul
lret
gs
sbb
decb
pusha
cmpsl
inc
in
mov
jo
ljmp
enter
test
pop
jnp
sub
jle
xchg
add
out
jge
sbb
push
sub
jnp
daa
push
ds
mov
lret
test
jge
call
fldt
inc
sub
stc
mov
and
sub
pop
fs
inc
dec
sahf
pop
mov
lret
dec
jnp
mov
jno
xchg
fcmovne
mov
mov
add
inc
adc
mov
mov
arpl
mov
pusha
test
int
push
dec
dec
enter
dec
cltd
jecxz
fcomps
inc
test
add
hlt
lock
ss
sbb
and
adc
fdiv
movsl
imul
push
jg
push
and
mov
mov
jo
iret
movsl
insl
fs
pop
pop
inc
nop
push
into
outsb
test
dec
push
cmpsl
mov
pop
or
outsl
andb
adc
jle
mov
test
in
out
imul
lahf
testb
enter
cwtl
mov
xlat
shlb
daa
push
out
out
cmp
and
adc
push
pop
mov
pusha
mov
sbb
xchg
mov
sbb
mov
cmp
incl
stc
nop
das
dec
outsb
xor
fwait
loop
aam
mov
inc
add
pop
imul
ret
and
xor
lods
cmp
inc
dec
cmp
mov
scas
jp
mov
mov
iret
mov
mov
scas
xor
aas
shrb
mov
mov
cmp
int3
jge
dec
int3
cli
pop
add
clc
push
in
sbb
scas
add
js
adc
jge
aam
les
pop
rolb
call
xchg
lods
lds
cmpl
sbb
leave
push
push
xchg
in
dec
add
clc
fstl
cs
xchg
ret
mull
pop
std
in
je
testl
jo
mov
popf
addr16
cmpsb
add
clc
add
mov
dec
push
jmp
test
das
push
mov
repnz
mov
stos
xchg
scas
adc
jle
and
pop
push
leave
xorl
out
push
mulb
aad
fwait
sbb
mov
mov
pop
mov
ret
scas
adc
in
xor
mov
fidivrs
gs
lds
popa
and
push
mull
xchg
push
and
inc
movaps
jns
idivb
cmpsb
pop
sub
add
xchg
ret
push
sub
and
jbe
pand
jno
inc
pop
or
inc
xor
and
push
scas
mov
cmp
sbbb
test
lods
mov
in
sbb
xchg
cld
xchg
sbb
jle
cmpl
movsb
and
jecxz
or
nop
or
dec
mov
push
pop
in
popa
out
mov
jne
pusha
mov
les
mov
dec
dec
adc
subl
pop
adc
jae
ret
jns
movb
mov
frstor
mov
jo
in
fnsave
jnp
subl
inc
or
or
mov
nop
scas
or
jb
mov
sbbb
pop
lea
ret
xlat
loopne
aaa
pop
xchg
or
push
mov
push
in
xor
push
ret
aas
cmp
scas
xchg
cld
imul
cwtl
cltd
push
js
std
and
cwtl
add
mov
and
aas
movsb
addl
mov
adc
push
xchg
inc
pop
cltd
fcmovbe
lods
pop
imul
jg
cmp
pop
and
jl
sub
add
or
cmp
sub
lods
test
stos
loope
ds
dec
cmp
mov
mov
scas
outsl
in
lods
mov
int3
mov
adc
sti
mov
sti
arpl
repz
push
sub
ret
scas
rcrl
mov
adc
mov
xor
and
std
and
cld
cmp
cld
and
xchg
xchg
mov
ficompl
stos
loope
xlat
xchg
dec
and
jmp
add
repnz
test
fcmovnb
sahf
push
cs
pop
xor
bound
pop
adc
ja
repnz
outsl
lea
add
xchg
pop
ja
inc
push
xor
popa
add
dec
or
or
and
pusha
or
jecxz
ja
pusha
sbb
iret
push
push
int3
mul
cmp
ss
loope,pt
loopne
jl
cmc
lret
xchg
gs
addr16
std
cmp
or
sub
filds
aaa
jns
stos
or
cltd
push
pop
or
daa
aas
stos
inc
in
sub
sbb
insl
jp
jbe
lcall
movsl
shll
dec
adc
dec
pop
mov
loop
push
inc
cmp
ss
push
pusha
adc
adc
pop
mov
mov
xchg
mov
fptan
stos
mov
jno
stos
mov
cmp
push
imul
lahf
xorl
repnz
outsl
sahf
cmp
sbb
xlat
sub
clc
shld
hlt
and
sbb
jg
mov
xchg
pop
hlt
sub
sti
inc
ja
jae
push
push
pop
imul
mulb
lods
sbb
jg
inc
icebp
mov
cs
push
inc
dec
lahf
lcall
mov
insl
xchg
in
add
bnd
add
cmp
popa
rorl
jbe
or
inc
xor
cld
fdiv
jb
adc
pop
fcmovb
adc
sbb
pop
adc
xchg
call
cmpsb
jns
jge
or
int
les
sbb
or
stos
popf
cmp
arpl
into
test
popa
lahf
dec
stc
jo
add
mov
xor
mov
add
cmp
aaa
xlat
fildll
sub
sbb
jne
inc
adc
imul
pop
scas
jp
or
dec
ljmp
sub
mov
or
pop
dec
pop
in
shlb
call
sbb
sub
sub
xor
arpl
and
add
cmp
mov
mov
cmp
sbb
les
nop
lea
and
fldcw
pop
jge
nop
lods
scas
fsubrp
addr16
loopne
jmp
in
call
adc
jne
adc
aaa
pop
loop
out
jns
or
sub
push
sub
sub
imul
mov
mov
enter
sbb
out
cld
jmp
mov
cmp
dec
test
jmp
pop
out
fstpl
insl
lcall
je
fsubs
xchg
repz
xchg
iret
rcrb
adc
gs
jg
dec
jne
or
pop
insb
ss
shrl
jl
xchg
jo
xor
movsl
repz
push
scas
push
pop
dec
pop
cmp
inc
push
xlat
lock
fimuls
cwtl
rorb
push
mov
pop
cld
pop
test
test
inc
pop
imull
push
xchg
pop
movsb
js
pop
add
mov
bound
pop
dec
mov
nop
insl
mov
pop
cli
inc
mov
mov
and
adc
scas
xor
pop
lock
shlb
lahf
cmc
cmp
pop
test
adc
pop
mov
andl
cltd
mov
test
push
repz
cld
out
jbe
fdivs
cmp
lahf
xor
mov
jp
xchg
mov
inc
pop
int
xchg
cmp
pop
xchg
stos
scas
nop
insl
ljmp
inc
nop
call
aad
fiadds
push
dec
lret
or
xor
cmp
mov
int
repnz
and
or
nop
cs
push
movsb
mov
dec
lret
mov
push
pusha
notl
pop
sub
dec
mov
add
int
pop
scas
ljmp
mov
jnp
and
xchg
mov
sbb
inc
aas
jb
xlat
mov
and
push
int
lods
and
lods
je
cwtl
and
jmp
push
cltd
xchg
movsb
popa
and
and
pop
outsl
add
xor
in
leave
sub
cs
mov
cmpsb
insl
adc
shll
jno
adc
pop
stos
insb
stc
mov
sti
pop
pop
sti
jno
ret
xchg
popl
in
push
add
lret
rorb
add
fsubr
pop
inc
pop
cmc
in
jo
test
xor
xchg
sub
jo
cmp
rcrl
mov
xchg
xchg
push
int3
daa
hlt
insb
sarb
push
lea
loop
xchg
push
dec
xor
ja
push
jbe
xchg
jno
sub
xchg
fsubp
pop
mov
lret
repz
pop
mov
fidivs
push
enter
in
clc
lods
cmpsl
mov
xchg
dec
fimuls
add
sbb
jg
sub
lret
ss
cmp
fwait
std
les
xchg
push
xlat
sub
cmp
sbb
push
ret
mov
ja
fsubr
jmp
sub
pop
adc
cmp
ror
cwtl
ss
jne
jo
cs
fdiv
scas
pop
or
push
jmp
imulb
dec
sbb
jle
cmp
in
sbb
xlat
cmc
mov
lar
test
lea
xchg
mov
out
mov
mov
jle
stc
inc
mov
and
jo
in
in
daa
add
outsl
fs
inc
hlt
es
shll
sub
rcrb
clc
jbe
aad
js
aad
sbb
xorl
mov
mov
xchg
lahf
icebp
dec
in
xchg
xchg
pop
incb
inc
pop
adc
filds
and
std
pop
aad
sahf
das
test
lock
pop
or
xor
es
inc
fdivrl
cltd
jp
aas
xor
daa
jo
dec
pop
jle
les
repz
out
mov
mov
in
outsl
ds
lods
xor
push
push
or
mov
mov
addr16
cmp
dec
dec
adc
mov
pusha
andl
dec
addr16
popf
stc
jbe
pop
cmc
push
mov
addl
inc
cmp
push
out
sub
mov
mov
pop
sbb
ds
lret
dec
jg
lds
orb
loope
jbe
and
rcrb
dec
shrl
jp
add
push
inc
and
inc
cmp
jbe
xchg
jl
mov
cmp
jp
rorl
mov
cmp
fstpt
adc
data16
loopne
mov
sub
mov
inc
es
and
out
stos
sub
cmp
adc
test
lahf
sub
aas
inc
rorb
xor
push
sti
sbb
inc
pushf
lahf
pop
ja
fwait
push
aaa
shl
mov
xor
xor
pop
int3
das
xchg
mov
sti
inc
lcall
es
pop
inc
out
les
test
stos
push
xor
or
pop
aad
lock
incl
sahf
out
and
ds
iret
aam
push
xor
inc
js
popf
pop
lcall
sbb
test
lock
or
icebp
mov
fcomps
cmp
daa
sti
cmc
lret
push
inc
inc
xor
dec
aas
bound
insl
pop
cmp
mov
lea
loopne
jae
je
mov
sub
mov
frstor
jns
shrb
loopne
in
jge
daa
or
jbe
add
pop
das
xchg
adc
push
test
push
sbb
scas
fld
dec
mov
mov
mov
sub
rorl
mov
push
cmc
cmp
fistpll
sub
jne
jnp
and
call
sub
lods
pop
mov
in
nop
icebp
outsl
xchg
icebp
clc
add
movups
shl
jns
and
fisubl
push
mov
jge
sahf
addl
jne
cli
enter
jg
and
cwtl
out
jno
jle
sbb
pop
sti
xchg
ja
pop
jne
cmp
pop
and
add
sub
xchg
adc
cmpsb
jo
pop
mov
repnz
fnstsw
xchg
imul
test
push
push
int3
pop
stc
inc
mov
or
push
add
cld
inc
xor
js
ljmp
xor
pop
out
mov
xor
mov
xor
xor
push
imul
and
xlat
sahf
pop
in
cmp
sbbb
or
out
test
inc
pop
inc
mov
pop
mov
sti
xor
lret
mov
mov
sbb
dec
dec
xchg
loop
or
mov
lock
push
inc
and
mov
movsl
dec
out
scas
cmp
mov
jnp
cmpb
dec
cwtl
pop
push
je
cmpl
data16
pop
gs
test
mov
jo
mov
bound
enter
mov
stos
insl
int
jns
pushf
daa
ljmp
popa
ss
loopne
or
and
lock
fsubrs
stos
xchg
lcall
adc
lret
mov
loop
xor
xor
fimuls
je
cmp
jb
xor
jg
sub
lret
mov
mov
movsl
inc
test
inc
sbb
mov
push
ds
push
inc
or
gs
jle
jecxz
hlt
mov
loopne
std
xor
shll
mov
rcll
dec
insb
lock
pop
sbb
mov
add
pop
cld
push
sbb
rcrl
clc
xchg
jp
sub
pop
add
add
aad
and
mov
arpl
push
es
repnz
or
adc
das
lsl
sub
xchg
insb
cmp
fistps
lods
fnstenv
js
je
and
fidivrl
aam
xchg
mov
mov
int
push
inc
and
jb
scas
cmp
mov
sub
pcmpgtd
enter
ror
mov
mov
mov
bound
push
cmp
scas
out
mov
icebp
inc
in
cmpsl
popf
sbb
xchg
xchg
jb
cli
push
out
xor
xchg
sub
push
test
sbb
mov
enter
adc
and
jb
xchg
fs
pop
lret
mov
inc
adc
cmpsl
in
stos
cmp
mov
lcall
test
cmp
sarb
or
jo
pop
lahf
add
mov
cmp
jnp
std
pop
movsb
lcall
sbb
or
push
pop
jbe
aad
std
xor
fldt
shl
stc
lock
fcmove
xchg
adc
hlt
pop
push
in
xchg
cld
mov
rclb
inc
sbb
mov
ljmp
je
xchg
mov
fstpt
jl
mov
mov
fwait
rclb
cmp
mov
mov
pop
mov
icebp
das
cld
test
xchg
push
je
push
jo
rolb
inc
in
repnz
es
int
sub
xchg
jo
xchg
scas
add
ret
pusha
pop
leave
fstp
dec
sti
stos
cmp
push
dec
add
lcall
jge
fistpll
and
loope
cld
mov
mov
cmpsb
loop
add
cmp
iret
xor
ja
push
rcll
mov
sahf
xorb
mov
sub
xor
sub
lcall
fidivl
into
inc
jbe
add
cmc
fs
cmpl
xchg
orb
test
movsb
sbb
push
inc
idivl
push
lds
cmp
sahf
sub
mov
jnp
dec
pop
hlt
dec
dec
jbe
shlb
mov
xor
cld
outsl
xor
movsb
pop
imul
es
add
in
sahf
loope
out
push
ljmp
stos
ds
xor
test
or
dec
xor
or
cmp
mov
bound
pop
xor
push
popf
nop
sbb
test
push
int3
pop
outsb
dec
inc
fstp
mov
mov
cld
xchg
pop
cmc
dec
inc
pop
outsb
rorl
std
mov
xchg
sbb
adcl
add
cmp
add
mov
jb
repz
stos
inc
push
icebp
dec
inc
jl
out
cmc
xchg
jp
addb
in
jge
out
mov
loop
insb
push
and
pop
jg
xchg
and
jmp
imul
and
add
repnz
lahf
sub
jg
pop
ds
les
or
loopne
ja
test
mov
ja
xchg
data16
cmpsl
pop
jo
aaa
mov
out
js
jecxz
js
push
rol
push
iret
sub
pop
jne
pop
and
xor
dec
test
cmp
arpl
xchg
outsb
in
mov
mov
jno
and
and
shrl
mov
mov
aad
push
mov
or
lods
jb
xchg
xchg
pusha
addr16
adc
mov
int
pop
mov
pop
fidivl
jge
sti
clc
add
inc
hlt
mov
gs
cmp
add
jnp
xchg
cld
js
pop
jbe
pop
dec
dec
jge
xchg
enter
dec
cmp
repz
rcr
ret
or
pop
call
sub
test
pop
out
inc
test
mov
std
jmp
or
pop
mov
cmpsb
xlat
mov
mov
scas
repnz
xor
adc
rolb
call
dec
test
jb
lock
adc
jno
repnz
xlat
sbb
cmpb
push
sbb
mov
push
add
sbb
sbb
cmc
scas
lcall
enter
jbe
pop
push
stos
sbb
bound
adc
xor
inc
pop
popa
lret
push
adc
lea
stos
popf
push
out
jmp
sbb
jle
sti
mov
push
sarl
xchg
mov
sti
pop
mov
fmuls
scas
cmp
in
dec
stos
test
sbb
data16
movsl
or
mov
or
sub
jecxz
lret
fistpll
mov
and
iret
mov
inc
mov
inc
test
pop
adc
pop
in
jg
or
or
pop
lahf
push
in
jp
dec
sbb
mov
aad
jecxz
sub
enter
shlb
add
mov
shrl
int3
inc
test
int
dec
in
or
mov
xchg
ds
outsl
mov
mov
sub
or
push
lret
cld
push
aaa
xchg
mov
xchg
insl
jne
gs
or
aaa
ret
das
pop
mov
lods
out
cmpsb
fwait
sbb
mov
insb
inc
push
ret
es
jge
cmp
mov
xor
mov
hlt
pop
mov
xchg
mov
sbb
xchg
xchg
dec
xchg
mov
or
push
cmp
and
scas
rolb
ret
and
hlt
sbb
test
or
cs
sbb
or
fcmovnbe
push
in
pushf
dec
adc
cld
call
mov
repnz
pop
fsub
sub
xchg
fiadds
repz
lret
and
lret
jae
jno
mov
loopne
fwait
add
pop
call
push
jne
shl
stos
mov
fisubl
aaa
clc
jg
je
adc
sbb
lret
pop
mov
pop
sbb
in
rclb
or
inc
cmp
fnstcw
fdivr
sbb
jae
bound
mov
pop
cmp
mov
outsb
loop
das
xor
jle
dec
and
cs
adc
add
xchg
scas
inc
push
fwait
dec
cmp
outsl
arpl
inc
shlb
cmpsl
jl
dec
push
leave
push
inc
dec
inc
movl
mov
add
push
mov
cmp
mov
sbb
mov
pop
and
xchg
sbb
push
lcall
sbb
test
bound
mov
movsb
add
mov
lret
lods
mov
add
and
xchg
xchg
mov
xor
and
dec
lock
movsl
and
jl
xor
test
pop
inc
inc
and
in
mov
cmp
xchg
es
outsl
idiv
addl
adc
sbb
sahf
mov
or
push
push
pop
sub
icebp
pop
imul
test
lret
inc
mov
jae
loop
ss
dec
adc
sub
jnp
sub
inc
hlt
adc
push
mov
iret
xlat
xor
push
jg
add
push
lods
inc
mov
in
ss
repnz
push
std
lds
mov
and
mov
rcrb
inc
mov
and
lret
lahf
je
inc
mov
loopne
adcb
in
xlat
adc
and
inc
fstps
xchg
mov
push
cmp
pushf
bound
iret
mov
add
test
int3
mov
in
in
jmp
mov
push
sbb
jbe
loopne
inc
icebp
rolb
add
negb
lds
clc
out
adc
and
mov
push
sbb
sti
inc
add
sub
sbb
js
cmp
pop
aaa
js
jle
shlb
jo
xor
add
das
out
xchg
es
das
mov
ds
cmc
mov
in
mov
fcoms
xchg
fwait
test
scas
sahf
mov
dec
sub
push
xchg
cltd
aam
mov
xchg
add
pusha
push
xor
pushf
push
cli
call
push
cmp
cmc
pop
sbb
movsb
repnz
int
mov
adc
sbb
pop
pushf
shrb
js
jne
ss
mov
outsb
jno
cmp
sub
cmp
or
jp
mov
imul
arpl
les
or
xor
sbb
addr16
aam
adc
jecxz
sar
and
test
dec
or
sahf
outsb
or
rolb
sbb
aam
or
adc
leave
sti
jle
mov
and
adc
loopne
out
prefetch
push
in
stos
notb
mov
push
std
mov
aas
xor
loop
push
sbb
push
fsubl
sub
loop
scas
scas
add
in
stos
push
cmp
stc
sti
test
fs
inc
test
push
inc
dec
pop
adc
scas
cwtl
push
repnz
stos
mov
mov
dec
cmp
movsb
popf
cmp
cmpl
cli
ret
std
lods
fistl
jb
jns
xchg
push
stos
adc
xorl
scas
mov
insb
hlt
popf
outsl
lret
sub
neg
enter
mov
xchg
test
cmpsl
xchg
popf
adc
out
or
stos
fimull
dec
jae
stos
xchg
fcomip
jl
div
dec
mov
cmp
pop
mov
fisubrl
jnp
push
adc
test
jae
mov
pop
movsl
loope
in
int
ds
mov
ss
dec
xor
ljmp
lea
add
icebp
jne
xor
xchg
addb
aaa
dec
inc
imul
decb
fdivrl
xor
fstps
xchg
ret
xchg
popa
inc
outsl
sub
ljmp
mov
inc
jnp
fisubl
jb
dec
push
inc
pop
ficompl
inc
rcl
inc
xchg
lods
or
lcall
add
jle
icebp
push
imul
xchg
sar
jg
xchg
mov
mov
int
stos
add
cltd
fidivl
inc
icebp
adc
jmp
add
dec
push
outsl
lret
std
shl
sbb
enter
inc
outsb
lret
stos
jns
mov
adc
icebp
push
adc
ljmp
xor
repnz
divb
ret
pop
add
adc
int
pop
add
rclb
stos
sub
cmp
inc
idivl
sbbl
dec
push
repz
iret
adcb
xor
bound
jp
jno
push
dec
inc
cli
stos
inc
pushf
dec
andb
test
mov
pusha
mov
mov
shrb
std
or
insl
push
jle
arpl
dec
pop
lahf
cmp
xor
je
jg
pop
test
ja
adc
pop
pop
imul
push
scas
add
insl
rcrb
not
mov
neg
push
daa
xchg
xor
push
aad
and
inc
fistpl
lods
cwtd
loope
mov
inc
lahf
repnz
push
ds
repnz
iret
jne
adc
pop
addr16
pop
cmpsb
push
jge
addr16
and
insb
fs
inc
inc
dec
jno
test
cmp
dec
mov
cmpsl
nop
sub
pop
and
adc
outsb
mov
test
cwtl
pusha
mov
lds
fadd
rcrl
inc
test
pop
hlt
mov
and
xchg
insb
dec
clc
es
cmp
adc
test
daa
loope
test
jbe
fprem
sarb
aam
pmaxsw
rclb
or
das
cld
fistps
loopne
fstl
mov
fxtract
pop
or
enter
imul
sub
sbb
mov
add
ret
cmp
cmp
cmp
por
lods
addr16
cmp
clc
into
add
filds
lods
leave
movsl
pop
pop
mulb
push
mov
xchg
aam
insb
xchg
and
into
inc
mov
shlb
add
andl
pop
dec
call
aam
scas
push
fwait
mov
xchg
inc
lea
inc
pop
iret
xor
scas
loope,pt
aaa
js
movsl
dec
mov
test
push
dec
jmp
hlt
test
and
imul
and
pop
enter
sarl
lds
aam
xchg
or
int
imul
lods
xor
ret
xor
cwtl
pop
cmp
xchg
cmp
iret
mov
inc
jns
sbb
push
push
pushf
dec
ror
xor
dec
mov
jne
aas
jns
int3
insb
adc
rcl
mov
xchg
jp
js
sub
and
in
pop
test
mov
loope
inc
push
lods
add
and
dec
mov
fcoms
decb
sub
or
aas
andl
xchg
cmpsb
lret
fwait
push
jae
dec
scas
dec
mov
test
mov
pop
dec
xchg
xchg
fnstcw
sub
sbb
sbb
sub
fs
sub
cld
rcrb
jns
ljmp
adc
lds
lcall
sub
aaa
test
jae
sti
int3
pop
xchg
xchg
jge
push
lret
arpl
pop
test
push
cmp
pop
xor
out
cltd
mov
ds
xacquire
cs
adc
jmp
dec
aas
cmpsl
adc
pushf
pusha
out
dec
movsl
lret
ror
arpl
or
mov
popf
aad
pop
iret
mov
js
mov
mov
in
pop
movsl
movsl
mov
out
xchg
fstp
cmp
sub
mov
ret
mov
rcll
mov
mov
andl
out
movsl
dec
jmp
cmpsl
outsb
into
fcom
jmp
push
cltd
adc
popa
mov
mov
pop
cmc
cmp
pusha
fiaddl
xor
mov
out
xor
inc
pop
sbb
cmp
imul
push
dec
in
pop
imul
xor
push
flds
dec
pop
dec
sbb
pop
mov
out
in
int
in
fcmovne
xchg
mov
adcb
mov
push
movsb
add
xchg
jmp
mov
mov
sbb
and
lahf
xor
jnp
jo
divl
fimuls
cwtl
adc
gs
call
cltd
sbb
xor
dec
lea
addr16
mov
jns
subl
mov
fmull
and
icebp
fiadds
mov
jns
inc
rolb
into
fs
xor
push
lcall
cmp
sbb
pop
add
neg
push
mov
dec
imul
loop
shrl
add
xor
push
hlt
pop
fwait
or
jo
addr16
test
push
mov
and
adc
inc
test
test
push
jg
fadd
mov
xchg
pop
dec
imul
adc
mov
fsub
add
pop
fstl
idivl
daa
push
in
stos
push
push
repnz
mov
mov
mov
jns
mov
fs
pop
cmp
mov
aam
or
mov
sub
mov
push
or
outsl
dec
mov
loope
sarb
or
cmpsl
in
jae
xchg
lods
stos
or
testb
xor
into
dec
and
mov
inc
xchg
sahf
rorb
test
xchg
addb
out
mov
push
sbb
fwait
xor
sarl
xchg
jmp
in
mov
test
cmp
cltd
mov
test
test
jle
cmpsl
add
jno
jo
je
xor
nop
aas
imulb
mov
jge
scas
sbb
jg
mov
mov
jl
inc
scas
ret
pop
out
push
loope
xchg
pop
push
imul
adc
inc
xor
xchg
addl
pop
ja
ret
jg
adc
mov
or
in
les
jbe
lea
cmp
divb
call
mov
sbb
jecxz
xor
or
in
stos
push
sbb
cwtl
pushf
lds
sarb
aaa
push
jl
lea
insb
gs
jns
sbb
or
add
xchg
ret
inc
cmp
insl
add
or
pop
inc
pop
sub
xor
pop
xor
addr16
push
popf
out
pop
push
orb
loop
xor
in
test
push
mov
push
xor
sbb
shlb
pop
insb
cmp
loop
jae
nop
adc
mov
outsl
pop
ss
pop
mov
adc
sbb
pop
cmp
and
adc
repnz
sub
sbb
lret
out
xor
mov
xor
pop
or
jge
mov
pushf
in
jns
xor
rcrb
dec
sbb
push
or
dec
iret
js
dec
push
cltd
fs
call
cmpsb
and
aas
jg
rorb
fsubp
sbb
xor
and
jl
outsl
inc
sti
pop
cmp
lods
fnsave
sti
or
rcr
mov
inc
xor
push
fnsave
loop
mov
shlb
in
fldcw
and
rcrb
into
cmp
push
cltd
cmp
mov
or
sti
inc
fwait
imull
cli
dec
pop
jle
aas
mov
fcoms
in
pusha
cmp
jecxz
dec
lods
mov
mov
data16
stos
sub
lods
push
xor
mov
cmp
jge
and
push
idiv
lods
testb
gs
sub
int
cwtl
ja
insl
int3
scas
dec
enter
or
mov
lods
test
add
fwait
rol
sbb
xchg
out
outsl
fwait
adc
insl
aad
repnz
cmovl
xorb
iret
or
jbe
sbb
or
movsl
xchg
xchg
jbe
orl
sbb
jp
lods
div
jb
fs
fwait
mov
cmpsl
and
sbbl
mov
dec
xchg
push
lcall
repnz
adc
dec
and
jo
inc
mov
mov
or
jae
in
fidivs
mov
lock
adc
out
and
and
divl
call
xor
xchg
jbe
sub
aas
testb
mov
sbb
sub
gs
or
dec
mov
jg
cmp
xchg
mov
jb
dec
adc
adc
repz
stc
jl
jns
movsb
repz
inc
std
js
repz
lahf
mov
inc
in
bound
mov
je
inc
movsl
mov
cwtl
fs
add
pop
fidivs
cmp
sbb
lcall
orl
gs
in
lds
out
lods
jecxz
and
insb
mov
jo
hlt
dec
fildl
mov
mov
repnz
adc
leave
inc
push
fstpl
sbb
push
jno
add
fs
fcmovnu
leave
addr16
in
jb
xchg
lods
mov
mov
jb
inc
jl
leave
or
pop
dec
rcrb
mov
dec
jl
jno
aas
aad
jge
xchg
sbb
into
cmp
testb
jae
mov
insb
test
xchg
cmc
pop
ja
mov
sbb
fsubr
arpl
es
jl
adc
pop
pop
jecxz
enter
aam
aas
sub
push
in
pop
mov
xchg
jmp
push
mov
xchg
add
and
shlb
mov
sub
shl
push
jae
mov
scas
add
xchg
inc
xor
sti
push
maxps
ret
mov
outsb
cmp
dec
daa
arpl
xchg
stos
lods
or
rcll
mull
ja
int
jecxz,pt
test
push
and
sbb
fiaddl
mov
gs
pop
push
dec
mulb
push
js
out
cmp
mov
push
outsl
pop
int
in
mov
mov
inc
xchg
daa
repz
pushf
addr16
adc
leave
xchg
or
les
imul
shrl
repz
cmpsl
lods
daa
mov
sub
push
dec
mov
xor
cmp
out
jl
fsubs
jmp
lea
adc
add
or
jmp
aad
pop
xchg
stos
xchg
xchg
mov
pop
inc
pop
roll
adc
fcomip
xchg
jno
rorb
shlb
test
inc
ret
inc
mov
push
in
mov
dec
ret
fisubrl
push
mov
dec
xor
mov
or
inc
mov
inc
xchg
adc
add
mov
outsb
test
fimuls
in
fwait
ret
aam
pushf
outsb
scas
inc
xchg
out
jge
push
cmp
cmp
ja
popa
aad
loop
inc
negb
bound
push
shlb
cli
daa
ja
outsb
clc
movsb
in
sbbb
dec
fsubp
ss
dec
arpl
jae
sbb
dec
jnp
subl
repnz
xor
sarb
mov
in
xchg
imul
mov
aad
loope
pop
insl
sbb
inc
add
aaa
je
mov
adc
push
stos
mov
stos
mov
lods
jg
mov
jmp
sub
xchg
int
xor
xor
cmpsl
icebp
into
les
fs
lock
ret
jge
inc
test
jp
sbb
in
cmp
negl
movsb
xchg
das
sahf
fcoms
sub
lods
cmp
arpl
insl
loop
hlt
arpl
shl
mov
cmpl
xlat
add
arpl
int3
in
mov
push
sub
pop
mov
pop
and
enter
inc
pop
dec
add
dec
outsl
inc
pushf
fs
push
pop
cmpl
mov
es
lcall
xor
pop
jle
dec
rcll
lea
cmp
jbe
xchg
xchg
inc
pop
mov
outsl
pusha
push
daa
ret
sar
leave
dec
jg
mov
pop
or
shrb
push
mov
cmp
xor
sub
bsf
mov
adc
sbb
or
nop
mov
addr16
push
fildl
push
imul
pushf
sbb
and
jecxz
add
in
scas
fidivl
lock
add
pop
jp
xor
mov
fcmovnb
xchg
popa
mov
jg
stos
pop
arpl
test
shll
jb
ret
inc
call
repz
ljmp
push
stos
loope
repz
mov
dec
mov
push
mov
jo
mov
and
sub
push
xor
inc
mov
mov
cmp
or
push
mov
adc
jge
fiaddl
dec
sbb
xchg
xor
sub
inc
shll
movl
movsb
mov
pop
xchg
movsl
adc
filds
movsb
ss
mov
pop
scas
sub
mov
mov
mov
push
mov
mov
movsl
fwait
cld
test
test
sti
cmp
imul
or
in
sub
movsb
jp
inc
sub
or
sub
sub
enter
lods
mov
xor
repnz
fadds
fistpll
sar
jns
addl
sub
push
ret
push
sub
nop
sub
repz
xchg
and
insb
mov
in
aad
xor
movl
mov
into
ficomps
push
popf
push
push
aad
and
shlb
sti
in
mov
push
std
pop
out
inc
scas
cld
sti
iret
mov
or
scas
sti
call
mov
dec
and
dec
sub
les
cmp
jno
push
rcr
lock
lcall
push
es
push
pusha
pop
lock
inc
nop
dec
mov
pop
nop
aad
dec
sub
sbb
in
or
jmp
loopne
xor
movsl
inc
inc
add
mov
imul
scas
negb
std
out
xchg
orl
rcrb
fisubl
sub
ret
lea
lods
rolb
shl
movsb
inc
mov
xchg
int
jg
mov
aaa
mov
js
xor
outsl
mov
inc
das
fs
pusha
repz
fwait
mov
or
cmp
je
dec
test
push
jb
cmp
lds
pop
imul
mov
mov
xor
iret
push
lahf
xlat
je
lahf
cld
push
push
cltd
sbb
or
adc
dec
int3
lahf
mov
cmp
lret
out
fstl
movsl
ja
push
cwtl
lea
push
int3
loopne
ljmp
cwtl
jmp
sbb
or
xchg
push
and
xor
mov
fcoms
adc
nop
scas
cmp
outsb
sub
or
je
push
daa
loope
mov
jle
inc
ja
arpl
mov
ds
adc
mov
arpl
aas
dec
cwtl
insl
xchg
loopne
aaa
fcmovu
xchg
xor
mov
push
or
push
mul
into
ds
popa
add
es
xchg
jp
mov
ds
rcrl
imul
mov
jne
mov
push
mov
sbb
das
popa
mov
push
sub
inc
jle
jno
sub
fwait
xor
push
test
out
jnp
cmp
popa
std
mov
push
pushf
icebp
add
cmp
lret
pop
adc
adc
ja
pop
test
and
test
movsl
mov
int3
xor
aas
lret
inc
cmp
lds
jne
sub
popf
insb
je
adc
test
jp
test
lods
pop
push
jne
push
rcr
adc
or
xorl
repnz
pop
pop
pop
xchg
xor
int3
add
stos
mov
stos
dec
aas
insl
mov
cmpsl
jo
lahf
push
or
dec
dec
push
adcb
mov
in
pop
dec
dec
divb
test
pop
xchg
pushf
cmpsb
sbb
mov
cmpb
jnp
xchg
popa
cwtl
dec
push
ds
adc
push
add
jmp
xchg
push
adc
popf
add
inc
xchg
or
mov
pop
mov
xchg
lods
dec
sub
pop
in
push
adc
adc
inc
ret
sbb
dec
inc
sbb
cmp
jae
or
iret
subl
sub
add
mov
leave
dec
insl
push
push
mov
adc
aam
mov
xor
pop
or
call
mov
test
mov
cmpsb
and
lods
or
into
and
js
in
dec
or
mov
dec
dec
adc
rorl
dec
scas
decl
jl
xor
in
mov
pop
popa
jnp
sbb
sbb
data16
rcll
or
inc
inc
lods
cwtl
lcall
dec
xchg
test
imul
mov
fs
add
adc
xchg
repnz
loopne
jbe
mov
xor
sti
push
mov
in
xchg
inc
mov
cli
shll
mov
mov
xor
andl
mov
pop
scas
pop
or
shll
xor
hlt
adc
push
inc
or
hlt
dec
xor
scas
fcoms
jns
ds
ds
shl
inc
xchg
xchg
jae
or
jb
cs
shl
push
and
mov
jle
fadd
jg
aad
movsl
in
push
mov
leave
or
and
sbb
jnp
int3
xlat
cmp
mov
xchg
jp
add
daa
sbb
mov
xchg
out
dec
pop
dec
ss
addb
push
cmp
dec
cmpl
int
popa
rolb
imul
dec
push
pop
and
add
pop
and
shll
fisttps
mov
stc
mov
xchg
mov
sub
arpl
sbb
xor
test
hlt
lds
test
sbb
pushf
repnz
test
dec
pop
test
stos
lods
jnp
sbb
gs
jl
push
fwait
push
jecxz
sbb
sub
inc
in
mov
lods
jge
pop
inc
inc
sub
push
lods
inc
and
push
dec
mov
loop
outsb
xchg
cmp
decl
push
xor
adc
and
aas
repz
mov
shl
fdivrs
fbld
xor
stos
mov
or
icebp
sub
pusha
mov
sub
push
mov
mov
cli
push
cmpsb
loop
adc
jns
sbb
imul
popf
lret
inc
pop
cs
push
fisubrl
movsl
ds
push
popa
jne
jno
sub
enter
subl
sub
or
push
sub
cltd
rcr
pop
inc
fmul
inc
pushl
stos
mov
push
popf
sub
dec
xor
add
sbb
sbb
cmp
icebp
cli
cmp
push
cmc
mov
sbb
scas
mov
fdivrp
jle
sarb
pop
push
inc
xor
pushf
ss
mov
jmp
jg
out
and
int
pop
mov
mov
lret
in
mov
cmp
inc
push
out
aaa
add
leave
mov
fidivrs
insb
jns
addr16
lret
xchg
sbb
scas
addr16
adc
lock
cmp
jl
cmp
loope
mov
sbb
xchg
or
jbe
add
stos
xchg
fsts
sbb
insb
jnp
es
mov
insl
adc
arpl
pop
mov
out
add
int3
inc
inc
mov
lds
inc
mov
outsb
mov
push
inc
adc
sub
and
cmpsb
mov
xor
lret
xor
pop
ds
mov
lahf
mov
aad
cmc
lahf
sbb
mov
into
flds
jl
sub
rcr
aad
int
scas
lcall
and
dec
notb
popf
xor
out
jle
add
pop
das
push
pop
jbe
sub
movsl
shlb
mov
push
insb
notb
hlt
lock
push
lea
inc
jp
xor
hlt
inc
lret
ficompl
cltd
sti
dec
lret
lock
and
bound
mov
icebp
pop
mov
rclb
aad
mov
dec
xorl
dec
cmp
nop
mov
repz
adc
in
jne
dec
ss
cltd
sbb
xchg
pop
arpl
test
shlb
adc
sub
adc
scas
jo
iret
mov
mov
test
add
insl
lock
mov
add
adc
and
adc
fbstp
scas
push
es
inc
pusha
mov
xchg
mov
ljmp
lock
repz
movsl
sbb
mov
jnp
pop
int3
sarl
repz
mov
ret
dec
clc
js
mov
scas
loopne
sub
lea
inc
stc
sti
cmp
xor
loope
cltd
and
xor
cmc
and
push
pop
shlb
cltd
or
idivl
pusha
rorb
or
xor
insb
pop
add
or
sub
xor
xchg
sbb
popa
call
dec
aas
xlat
xor
adc
push
ret
les
ret
insl
in
push
jp
push
adcl
pushf
sbb
arpl
mov
add
add
dec
dec
scas
and
int
xchg
mov
inc
and
test
int3
and
ss
repz
and
mov
aam
lds
and
js
pop
testb
cmp
aaa
in
jb
adc
leave
in
pop
repnz
lds
leave
xchg
or
cmp
lds
mov
notb
je
std
mov
or
out
cmpsl
icebp
jbe
mov
xor
rclb
pop
cmp
mov
jmp
into
mov
addr16
dec
push
sbbl
inc
add
add
out
into
loop
adc
jge
mov
minps
lea
fwait
jb
lods
jle
add
fists
cltd
fisubl
adc
adc
or
jns
add
in
cmpsl
cmpb
push
sbbl
or
ja
ja
lea
out
mov
jmp
scas
in
mov
mov
in
cmp
mov
xor
mov
mov
mov
test
sub
cwtl
push
push
ja
cmpsb
movsl
bound
cmp
inc
pop
int3
popf
popl
rclb
jecxz
push
jg
nop
xchg
cmp
lods
gs
aad
js
jb
leave
add
or
js
jns
sbb
out
ds
ljmp
push
push
dec
and
mov
push
xor
jo
loopne
fcompl
push
xor
add
jb
hlt
jns
aaa
lock
negb
push
es
test
xor
push
cmp
aas
aas
or
popa
cmpsl
lods
mov
test
sbb
push
push
jg
sub
ja
adc
js
xchg
push
aam
pushf
push
out
add
scas
bound
sub
add
outsb
push
aaa
jecxz
bound
cmp
push
sbb
lahf
jnp
pop
cmp
jp
lds
or
dec
mov
leave
ucomiss
cmpsl
sub
add
mov
int
push
mov
test
fiadds
mov
or
jb
dec
inc
and
gs
gs
sbb
jmp
xchg
mov
in
lock
fbstp
popf
mov
pop
jle
aas
mov
lcall
sti
push
gs
into
or
mov
mov
xorl
mov
aaa
add
sub
outsl
lock
adc
pushf
out
push
cltd
mov
decl
adc
sub
lret
rep
sub
loopne
or
mov
lret
pop
adc
push
dec
aas
cmpsb
adc
dec
loopne
push
mov
sbb
sbb
push
ljmp
sub
jns
mov
lret
inc
pop
jle
dec
scas
jns
add
shl
mov
xchg
adc
and
mov
pop
test
cmp
mov
mov
cs
lods
lcall
jmp
sbb
jp
daa
cs
rcrl
mov
pushl
or
popf
xor
in
xchg
mov
or
jae
les
out
je
repnz
mov
xchg
sbb
dec
cmp
add
cs
add
ds
and
adc
pop
insb
lods
lock
xor
mov
into
xbegin
adc
cmp
loope
and
pop
pop
ja
jbe,pt
sub
mov
testb
inc
jecxz
pushw
xor
mov
hlt
stc
sarl
mov
int3
imul
fsub
jns
add
mov
movsl
mov
jo
test
imul
push
mov
push
insb
orb
sarl
inc
push
jbe
cld
adc
ret
lcall
out
xchg
push
cltd
adc
iret
cmp
daa
jg
or
ljmp
rorl
inc
inc
hlt
stc
loope
insb
xlat
loop
in
xor
adc
cmpsl
aam
gs
lock
sti
mov
push
xchg
sbb
outsl
dec
push
cmpsl
call
test
out
fidivs
pop
mov
test
adc
data16
xchg
insb
pop
inc
cmc
cltd
lods
and
fsubrs
fucomi
arpl
idivb
mov
xchg
notl
movsb
dec
xor
mov
mov
sub
add
mov
jns
or
repnz
adc
jmp
out
inc
mov
nop
sub
ret
ud2
or
mov
cmp
dec
adc
add
in
adc
and
ljmp
cs
int
and
mov
sub
rcrl
xor
adc
add
aad
xor
stos
sub
mov
pushf
mov
mov
ror
jne
mov
and
sub
mov
filds
sub
inc
xor
ds
cwtl
and
aas
repnz
iret
and
icebp
lods
subb
mov
call
insb
loopne
fidivrs
in
pop
rorl
cmp
pop
lock
dec
mov
push
outsl
adc
pop
pop
int3
fnsave
into
mov
xor
jge
pop
cmc
adc
jns
in
jmp
adc
and
cs
dec
fldt
xchg
fisubrl
xor
idivb
jae
iret
ds
jns
add
lods
or
add
stos
dec
adc
push
movl
bound
ret
cltd
dec
movsl
into
repnz
lahf
push
js
les
xor
jp
ret
sbb
xlat
xchg
mov
jle
imul
subb
pop
push
js
in
ret
push
addl
fdivl
mov
in
adc
addr16
dec
cmpl
mov
mov
addr16
decl
and
pop
adc
gs
add
mov
andb
aad
push
aas
subb
movsb
and
mov
sbb
sbb
xchg
inc
les
jb
mov
fisttpl
test
rclb
rorl
rorb
jmp
add
and
lock
mov
daa
and
in
int
adc
push
xor
and
or
xchg
das
mov
lret
mov
mov
aad
mov
ja
mov
hlt
js
inc
dec
lock
cltd
mov
push
xchg
pushf
icebp
bound
in
jle,pn
mov
cs
clc
insb
xlat
out
pop
adc
mov
jae
insl
or
cli
xor
inc
sbb
int3
into
xor
shlb
jae
sbb
test
jle
dec
mov
jb
jmp
sub
in
mov
or
xchg
jmp
pslld
xlat
cmc
push
imulb
jg
daa
je
ss
push
daa
ljmp
xor
mov
jmp
loop
cld
lahf
ret
xor
lret
arpl
test
dec
movsb
sbb
push
push
aas
cwtl
or
xchg
xor
mov
leave
inc
push
mov
add
lods
mov
jb
jae
mov
int
add
shrb
jecxz
or
les
adc
int3
lds
inc
fisubrs
xor
data16
jbe
adc
and
add
push
rcl
or
xchg
out
insb
cld
pop
imul
leave
sbbw
lea
mov
jb
or
arpl
fwait
sub
in
lods
and
sbb
inc
stos
test
pop
lods
lods
adc
jb
mov
fldt
es
dec
cli
push
or
cmpb
popf
jb
pop
sub
push
adc
xchg
shrl
notl
add
fistpl
cwtl
inc
sub
dec
inc
or
jno
ret
jge
xor
loope
insb
pushf
test
lret
pop
adc
jo
pop
mov
xchg
rorb
aaa
dec
andb
xchg
cltd
lret
outsl
das
inc
loop
ljmp
ja
and
outsl
je
dec
stos
fsub
std
jg
xchg
ret
mov
adc
into
cld
stos
sarb
dec
jmp
fchs
fldt
mov
nop
xor
sub
pop
movntq
push
std
push
outsl
lds
cmpsb
stos
push
push
mov
sbbb
ret
jo
cmp
pop
cmp
cli
push
fwait
sbb
lea
jp
out
sub
mov
push
lret
mov
mov
jno
imul
xchg
pop
xor
sbb
jp
test
mov
adc
mov
clc
in
and
enter
pop
lahf
stc
cmc
or
fdivrl
lock
sub
pop
xlat
sub
inc
daa
out
test
and
inc
lea
and
xchg
frstor
xchg
mov
adc
pop
add
cmpsb
xchg
gs
adc
sbb
sbb
pop
idivl
shl
adcb
jge
into
cld
fcmovbe
or
decl
lock
data16
pop
aaa
add
icebp
js
pop
or
add
xchg
xchg
or
mov
js
test
push
ret
aam
dec
and
adc
iret
lret
in
or
ds
inc
stos
ds
ret
mov
adc
lret
push
dec
cmp
mov
loop
fidivrs
adc
les
rol
xchg
add
cmp
fwait
out
sub
mov
cld
add
cmp
cmp
mov
mov
out
outsl
mov
into
adc
daa
push
popa
jp
jno
jecxz
and
pop
and
in
xchg
in
cmpl
test
xchg
insb
mov
xchg
orl
pop
and
mov
int3
mov
or
sbb
jno
ret
cmpsb
push
and
mov
imul
push
pusha
scas
xchg
leave
dec
cmp
int
cmp
adc
aad
imul
scas
and
clc
push
push
pop
lcall
out
sbb
or
lods
mov
mov
add
sbb
pop
push
popf
push
notb
sub
push
jg
pop
xchg
sar
rcr
xor
push
pop
in
xchg
jmp
or
mov
xchg
rcl
repnz
dec
pop
lods
lret
sbb
in
jb
lods
cli
mov
int3
loop
sub
and
cmpsl
push
sbb
ret
fistl
mov
sub
mov
jle
pop
xchg
push
cmc
sarl
mov
in
push
dec
cmpsl
pushf
pusha
out
mov
fmul
dec
mov
repz
xchg
mov
or
push
adc
out
loopne
aaa
mov
pop
ficomps
push
jmp
jmp
dec
cmp
arpl
or
mov
pusha
lds
xor
popf
sub
aaa
push
int3
cs
cmp
jbe
into
cli
xchg
xchg
fidivrl
out
fimull
jmp
adc
imul
dec
leave
in
jne
je
ficoms
sub
out
jp
and
sub
les
clc
jl
sub
aaa
sti
and
inc
gs
dec
pop
pop
jmp
addr16
push
insb
shr
sbb
andb
rorb
pusha
aaa
scas
shlb
pop
or
mov
lahf
jnp
xor
xor
out
push
das
sub
lods
sti
sub
hlt
enter
stos
daa
push
jecxz
or
in
fstpt
adc
sbb
mov
xor
in
sbb
inc
inc
pop
popf
fisttpl
mov
fnstenv
push
xchg
pop
pop
imul
das
or
sbb
jge
dec
aad
cmp
scas
dec
sti
movsb
incb
sub
daa
je
inc
popf
std
xchg
mov
loopne
stos
lret
adc
out
scas
lds
inc
mov
aad
and
ret
pop
add
sub
daa
mov
sbb
cli
mov
into
xor
or
popa
pop
mov
hlt
jb
push
scas
test
inc
popf
or
loop
lods
jp
out
test
fimull
cmp
pop
cmp
jne
xor
mov
push
xchg
arpl
cmp
or
jb
jne
test
jnp
lahf
xlat
aam
bound
xchg
jmp
dec
sbb
or
movsl
movsb
movsb
mov
add
repz
dec
xor
and
jae
sarl
dec
cmpb
arpl
imul
shll
mov
ss
sbb
inc
addr16
push
ja
arpl
test
cwtl
push
mov
dec
or
lods
or
out
jno
ds
loope
add
in
add
add
xor
inc
enter
dec
jno
lcall
jge
inc
mov
sub
xchg
movsb
ror
jge
stos
sti
bnd
add
iret
cld
daa
pop
pop
mov
or
fabs
sbb
int3
les
ficompl
jg
xchg
cmp
movq
das
lds
mov
call
loope
wbinvd
aad
and
sbb
and
jge
xchg
arpl
lret
mov
cwtl
pop
loope
xchg
pop
xlat
cs
and
fidivrl
cmpsl
sbb
dec
out
mov
jns
dec
mov
rcrb
jb
loopne
adc
sub
xor
daa
out
insl
mov
add
jae
add
es
int3
dec
es
xchg
mov
scas
pop
lea
hlt
mov
inc
push
jl
mov
inc
lock
fyl2x
out
imul
ss
pop
xchg
xchg
loop
pop
mov
sub
jns
mov
xchg
stc
jno
cmp
and
jle
mov
in
jecxz
inc
cmp
dec
hlt
xor
dec
and
jecxz
sbb
inc
rcr
out
dec
adc
push
popa
in
stos
loop
jmp
sbb
sub
call
out
xchg
push
mov
push
jg
fnstcw
inc
lahf
dec
stos
inc
lea
mov
shrb
inc
shrl
shll
jmp
cmp
push
sbb
ljmp
jg
repnz
push
scas
jge
pop
lods
inc
inc
xor
push
test
mov
xor
mov
mov
pop
cmp
cmp
fildl
jg
movb
mov
or
pop
test
subb
mov
sti
lods
adc
mov
popf
and
push
sarl
cmc
fxch
sbb
lods
std
cmp
out
fisubl
pop
movsl
stc
cmp
scas
xor
push
add
sub
fs
mov
xor
repnz
int3
pop
inc
pop
push
stos
test
repz
cmpsb
dec
cwtl
shrl
mov
mov
iret
ficoml
inc
pusha
xor
mov
divb
xchg
push
insb
sbb
andb
jbe
das
nop
ret
cwtl
mov
mov
pop
daa
sbb
and
mov
fisttpll
aaa
xchg
repnz
cmpsb
lds
pop
scas
movsl
out
mov
out
insb
jbe
lods
lds
push
aaa
sbb
jnp
mov
imul
leave
iret
cwtl
pop
sub
cs
loop
xor
outsb
jmp
xchg
xor
or
mov
push
imul
mov
push
sub
sub
dec
ss
dec
mov
mov
push
mov
fbld
push
xchg
fld
ret
jmp
dec
or
aad
outsb
mov
mov
cld
push
ret
mov
dec
push
bound
int3
insl
push
xchg
sub
cld
out
sub
xchg
mov
pusha
call
mov
mov
push
and
insb
sub
dec
lcall
sub
add
cmpsl
mov
xchg
test
pop
inc
popa
jns
sbb
sub
cmp
das
cmp
stos
dec
inc
and
jns
andl
imul
push
leave
mov
movsb
nop
inc
or
mov
mov
orl
clc
rorb
test
push
mov
std
les
loop
xor
ds
xor
mov
adcb
loopne
mov
ss
mov
imul
mov
jecxz
pop
push
xor
test
fwait
shr
sub
stos
dec
add
adc
unpcklps
xchg
mov
sahf
fsubp
imul
cld
ficompl
xchg
iret
xchg
pop
insl
dec
cmp
scas
lds
cltd
ljmp
in
inc
leave
mov
sub
incb
mov
xchg
addl
jne
insl
fcmovbe
addr16
mov
jg
test
cmp
sbb
out
cmp
push
mov
jo
leave
jo
xchg
add
in
inc
jge
push
xchg
in
push
xor
scas
push
loop
call
in
out
push
pop
or
scas
testb
adc
or
sub
jae
es
fsub
icebp
in
andl
movsl
ds
mov
lahf
sub
xor
imul
rclb
fidivrl
dec
inc
mov
dec
mov
ror
cmp
jmp
aaa
rolb
dec
mov
lcall
mov
push
cmp
mov
sar
mov
jns
lods
fildll
leave
in
cs
mov
mov
adc
jnp
mov
notb
in
es
out
xor
or
in
push
cmp
test
sbb
cmpsl
jmp
pop
inc
or
cld
pop
or
and
or
out
push
inc
push
push
shrl
xchg
sbb
sub
xor
adc
fsts
pop
lea
call
mov
cli
fists
or
cmp
or
movsl
pushf
dec
add
push
inc
aas
mov
mov
jb
lods
notb
cmpsl
movsl
data16
push
jmp
jl
fldcw
je
sub
xchg
test
fldl
lret
jo
movsl
in
in
inc
push
xchg
stos
cmp
push
and
and
mov
sub
sbbb
and
std
lret
sub
out
inc
mov
mov
mov
jge
imul
and
mov
hlt
mov
and
mov
test
outsb
ret
cmp
dec
and
shrl
data16
mov
lds
jnp
cli
cmpsl
setnp
xor
xchg
adc
clc
lock
and
mov
cmp
clc
ja
cmp
jne
int
dec
adc
push
cld
jo
sbb
inc
lret
lock
mov
cs
out
cmp
outsb
pushf
and
or
fdivs
mov
and
fs
xchg
fcmovnbe
inc
es
rolb
sub
pop
xchg
mov
movsl
xchg
sti
push
sub
fidivl
clc
dec
xchg
push
js
mov
add
iret
lock
icebp
and
std
or
push
aam
or
push
cltd
xchg
lods
in
test
sarl
add
sub
ret
mov
cmp
das
wrmsr
popf
test
cmp
or
stc
clc
xchg
adc
loopne
cmp
ror
into
cmp
xchg
outsl
out
mov
insb
push
mov
fldl
pop
ret
push
fs
pop
divl
or
push
sarl
aam
mov
rcrb
pusha
fs
outsb
shl
call
jmp
ror
xor
nop
mov
lcall
fcoms
loop
dec
cli
and
sub
sub
lcall
cltd
xor
jns
inc
dec
mov
lret
repnz
outsl
or
lock
repz
and
sbb
adc
and
mov
leave
fdivrs
or
dec
push
cmpsb
dec
push
xchg
sbb
pop
mov
pop
std
outsb
jecxz
das
push
xchg
imul
out
adc
adc
out
and
fistl
jle
sarb
sbb
add
dec
in
jae
or
rcl
test
cmp
mov
or
out
lock
inc
sub
fcoml
cltd
dec
call
xchg
loopne
xlat
mov
push
inc
loope
sarb
lds
jns
pusha
jmp
ret
mov
dec
enter
mov
lea
push
cmp
pop
out
aaa
xor
movsl
cmovns
xor
dec
push
or
inc
dec
cld
push
push
lds
adc
xchg
scas
xorl
addr16
pop
test
cmp
ja
daa
push
leave
in
xorb
rcrb
fwait
mov
mov
push
test
xchg
mov
sbb
out
insb
popa
xchg
test
and
sub
adc
mov
mov
dec
iret
jmp
jns
loopne
int3
popf
dec
mov
dec
out
cmp
ds
pop
push
mov
iret
push
sub
mov
inc
pop
dec
fisubl
out
lock
adc
sub
pop
inc
dec
icebp
push
imul
jp
inc
mov
mov
out
mov
jbe
cmp
mov
stos
lea
pop
cltd
mov
cmp
out
pop
mov
push
imul
mov
ret
push
xorl
xlat
fsub
pop
sbb
and
jmp
sub
push
shlb
jl
xor
shrl
cltd
pop
xchg
add
lods
pop
inc
dec
push
push
sbb
and
fmull
aad
fadds
int
cs
cmp
outsl
test
adc
je
inc
popf
aad
and
sub
pop
xchg
adc
or
or
xlat
pop
sbb
sub
push
shrl
aad
lahf
nop
mov
lahf
sbb
xlat
repnz
push
inc
pop
ljmp
push
lock
push
mov
data16
in
std
lahf
test
lock
mov
aam
push
dec
hlt
in
pusha
pop
push
test
or
sbb
xor
adc
push
push
imul
repnz
and
popa
dec
ja
in
and
iret
jle
sbb
stos
inc
jns
test
out
hlt
test
jne
scas
mov
daa
push
das
mov
in
enter
test
pop
inc
mov
jno
xchg
out
cmp
push
mov
or
push
xchg
out
fcmove
dec
lahf
and
testl
outsl
xor
lcall
call
pop
lahf
insb
leave
or
movsb
and
loope
mov
ret
pusha
jmp
int
adc
pop
stc
jbe
fsub
in
fstl
out
lret
leave
aas
mov
dec
jb
repz
mov
es
adc
adc
popa
out
test
lods
or
fsts
jecxz
and
and
lret
outsb
scas
mov
sub
jl
sbb
scas
pop
dec
xchg
cmpsb
hlt
and
fwait
xchg
jg
mov
push
subb
mov
sar
add
cmp
push
test
pop
call
test
xor
xlat
lret
xchg
fwait
aad
mov
push
jns
cs
push
xchg
jb
pop
push
aad
movb
add
xchg
dec
cld
loope
mov
data16
cs
xor
dec
fsubp
mov
xchg
push
jg
les
rcl
or
fidivl
lea
in
pop
rclb
mov
in
xorl
jmp
push
mov
ss
inc
pusha
sbb
mov
repz
outsl
mov
xor
sbb
insl
push
mov
mov
fimuls
adcl
das
js
lock
xchg
push
or
inc
sub
lea
sti
pop
add
pop
fimuls
mov
out
es
add
mov
cmpsl
daa
js
mov
bound
test
mov
leave
dec
pusha
adc
adc
int3
sbb
or
xor
js
sbb
daa
and
mov
sub
sahf
lock
and
sahf
xchg
dec
adc
push
pusha
ret
pop
loopne
mov
mov
mov
lcall
dec
adc
and
divb
sbbl
test
cmp
and
mov
movsl
pop
mov
cld
cli
cmc
out
adc
mov
sub
add
pop
iret
cli
iret
popf
lret
fstpl
stc
cwtl
outsb
push
ja
iret
std
jg
sbb
popf
cmp
mov
sahf
movsl
xchg
pop
cltd
and
cmc
mull
pop
mov
sarb
xchg
rcr
repz
pop
xchg
pop
mov
inc
dec
movsb
sub
shll
das
mov
sbb
stos
mov
inc
jnp
pop
cmpsl
push
scas
pop
inc
js
inc
das
jmp
imul
xor
mov
incb
cltd
test
or
hlt
sbb
pop
dec
add
je
movsl
cs
mov
std
out
xchg
sbb
lds
inc
std
rclb
ljmp
jg
jmp
mov
mov
and
sbb
cmp
insl
push
lds
xchg
push
inc
hlt
or
aas
push
aas
mov
mov
mov
daa
mov
movsl
fimull
arpl
stc
mov
inc
test
cli
stos
test
pop
das
aaa
fwait
js
fiadds
jnp
outsl
pop
incb
lods
sahf
ret
dec
aam
mov
push
xorb
xchg
add
cmpl
xlat
int
and
data16
xor
out
movsb
call
into
outsb
scas
mov
mov
jle
cmc
push
es
gs
jmp
or
je
iret
or
mov
jo
lock
ja
push
dec
xchg
negl
pop
fstpt
out
rcll
insb
in
cltd
gs
sbb
adc
or
add
dec
pop
sbb
sbb
pop
rolb
lods
add
xlat
mov
shll
and
into
sbb
pushf
jae
and
mov
fwait
push
or
mov
fld
xchg
adc
mull
rolb
mov
test
xor
mov
mov
test
out
add
in
jnp
mov
popa
lds
pusha
jo
sbbl
jle
mov
std
and
inc
fcmovu
cmp
or
and
lods
push
cmp
in
std
jl
jae
push
jae
cmp
cmpsl
lods
lds
adcb
call
inc
jne
ds
and
inc
mov
test
cs
mov
push
movsl
cmp
sub
clc
ljmp
sub
xchg
dec
imul
jg
sarb
jb
rorl
inc
lret
test
sbb
inc
sub
sbbl
iret
std
movsb
cmpsb
mov
enter
xor
xchg
je
xor
and
adc
aad
lock
icebp
and
nop
inc
jmp
jbe
pop
or
fisubl
xor
pop
adc
or
sub
xor
rcr
test
pop
cmp
pop
dec
imul
shr
jmp
inc
and
adc
sub
fadds
add
in
push
lret
iret
mov
push
dec
inc
or
mov
xlat
mov
pop
fsts
or
or
rclb
cmp
mov
jg
xlat
movb
subb
int
aad
or
cmp
xorl
pop
and
mov
push
dec
mov
mov
adc
out
xchg
dec
xchg
cmpsb
icebp
popa
stos
mov
enter
mov
pushf
and
jmp
neg
dec
jb
add
frstor
repz
mov
stc
out
fcomps
push
imul
fldcw
int
adc
adc
test
pop
jp
or
jecxz
mov
lret
jl
das
mov
push
and
iret
imul
mov
push
xor
or
mov
lds
jp
and
mov
push
shl
inc
rolb
aaa
sbb
fdivs
popa
cmp
mov
out
xchg
imul
push
das
push
lods
mov
pop
les
out
adc
jmp
ljmp
push
jb
mov
enter
test
ss
dec
xchg
sbb
rcrb
sub
add
mov
cld
mov
lahf
inc
enter
pop
enter
cmc
icebp
aam
mov
xor
xor
sti
pop
aas
xchg
insb
or
xor
outsb
sahf
inc
test
sbb
sbb
lret
sbb
adc
pushf
and
mov
insb
out
arpl
daa
and
pushf
inc
rcrb
dec
loope
cli
xor
lcall
jmp
sub
pop
pop
or
mov
out
test
hlt
lods
scas
mov
sub
jo
inc
push
mov
lods
fnstcw
popf
mov
pop
in
sbb
shr
sub
fists
add
in
mov
jge
mov
mov
shrb
cwtl
xchg
jmp
addr16
movsl
hlt
push
dec
in
cmp
xchg
cld
inc
ret
out
push
out
push
out
or
stos
mov
stc
in
and
xor
pop
or
or
cmp
dec
into
stc
or
sub
mov
xchg
add
adc
imul
jg
jo
mov
ret
inc
loope
mov
dec
jae
pushf
rolb
mov
mov
inc
adc
and
xor
sbb
das
aas
jge
mov
or
jg
xchg
cmp
adc
or
arpl
arpl
imul
pop
and
imul
pop
sub
mov
sti
fldt
mov
sbb
jno
cmpsb
xlat
in
push
loop
pop
not
scas
and
pusha
pop
mov
push
inc
push
mov
adc
outsb
sub
push
and
sti
or
loope
push
cmp
pop
icebp
jns
lahf
not
and
sahf
add
fistps
shrb
ljmp
adc
jle
outsl
subl
cmp
cmpsl
mov
sbb
jb
aas
and
pop
punpcklwd
push
clc
fdivr
sub
dec
in
sbb
lcall
stc
lea
xor
dec
aad
jg
cmc
cltd
mov
add
frstor
xchg
mov
pop
pop
ror
fisubs
out
sub
fwait
enter
fnsave
cli
add
mov
adc
fcmovnb
mov
gs
ret
jae
mov
pop
sbbl
lcall
jnp
jae
add
mov
jbe
test
scas
cltd
in
mov
push
sbb
mov
pop
sub
push
jle
enter
or
fwait
push
lds
bound
scas
mov
xor
inc
mov
adc
dec
mov
add
push
data16
xor
clc
pop
mov
jmp
loop
and
mov
pop
push
mov
icebp
mov
sub
jmp
repnz
add
pop
pop
sbb
mov
inc
icebp
shr
push
add
adc
mov
sbb
sbb
cmp
xlat
mov
sub
gs
inc
icebp
inc
xchg
mov
or
leave
fs
pop
fwait
imul
add
pop
rcll
adc
mov
push
in
and
inc
inc
sub
fwait
shr
ja
push
sub
fwait
push
lds
jl
test
adc
or
pushf
movsl
add
andl
cmpsb
nop
pop
shrb
xchg
xchg
xchg
es
sar
test
and
arpl
lahf
cmp
scas
call
rorb
sbb
or
test
popf
sub
jp
pushl
add
mov
ret
sbb
je
pop
cmpl
cmp
lods
pop
push
int3
incb
sbb
push
dec
cld
jne
jp
mov
dec
insb
xchg
ret
jl
aaa
scas
mov
cmpsb
icebp
mov
adc
lods
add
test
dec
test
or
das
jo
mov
cmp
outsl
push
sub
sub
popf
das
pop
jmp
dec
mov
cmp
sub
jp
mov
mov
push
inc
nop
lret
jle
in
int3
notl
imul
mov
pop
and
int
int
adc
sbb
cwtl
and
or
sub
cmp
mov
negb
pushf
decl
jmp
rcrb
lret
fs
mov
push
pop
shl
and
dec
mov
mov
hlt
jmp
push
pop
lea
inc
xor
cwtl
fwait
mov
sub
sub
addr16
lret
stc
ds
jle
shrl
mov
lock
add
das
lret
imul
test
sbb
stos
mov
rcll
clc
inc
ret
mov
xchg
fisubs
andl
ja
cmp
in
stos
cmp
int
and
jno
push
imul
mov
fisubl
add
xchg
js
icebp
xchg
or
jne
pop
pushf
sbb
outsb
mov
aas
adc
into
xchg
push
cmpsl
lcall
and
sbb
adc
ret
pushf
fimull
rcrb
es
out
cmpb
fnstcw
jl
jbe
stos
mov
and
fs
out
xor
xor
dec
pop
jae
or
xor
imul
dec
add
mov
pop
popf
xor
xchg
sub
call
push
pop
mov
int
pop
data16
stos
mov
ljmp
std
fists
xchg
mov
mov
add
cwtl
movsb
dec
jmp
pop
es
mov
daa
fimull
sub
xchg
ds
mov
mov
rcr
xlat
adc
enter
dec
shll
push
pusha
fs
pushf
fdivrp
mov
popl
xor
add
sbb
adc
inc
lret
test
pop
xor
popa
testb
out
sbb
gs
mov
gs
pop
cmovl
jg
cmpl
xchg
push
jno
xor
scas
pop
mov
add
stos
add
pop
push
ja
ds
inc
out
jecxz
xor
and
add
hlt
adc
jge
lret
add
or
push
fisubs
jge
xchg
dec
fdivrl
cmpsb
xor
xchg
push
stos
and
jg
mov
lock
fbld
push
xor
popa
scas
cs
lret
ror
imul
ljmp
hlt
mov
cld
lahf
cmp
mov
inc
xor
push
aaa
cmp
insl
jb
inc
xchg
cmpsb
lock
int
sub
jae
icebp
mov
mov
into
xor
mov
int
mov
add
or
sbbl
test
lret
out
mov
push
cmp
or
xlat
mov
aaa
leave
mov
shl
out
jns
add
mov
call
or
fucompp
scas
add
ret
jae,pn
cltd
or
mov
and
pop
push
add
mov
into
in
mov
or
and
fldenv
ljmp
xor
sub
call
cmp
jmp
movsl
out
inc
xchg
xchg
or
xchg
add
mov
mov
outsb
imul
sbb
js
insl
stos
es
jno
inc
pushf
pop
lods
dec
dec
jnp
cmp
je
aad
push
mov
cmc
cmp
je
mov
dec
cmpsb
in
inc
ja
xor
pusha
pop
sub
xor
xchg
xchg
stc
loope
icebp
lea
and
mov
sub
aad
mov
push
out
jmp
jae
std
jae
out
and
and
fistl
pop
pusha
lcall
cmpsb
hlt
rorb
decb
clc
imul
arpl
pushf
inc
aad
mov
out
mov
sub
lret
sarl
dec
sti
push
in
out
pusha
push
outsl
jne
cmp
addr16
pop
push
or
dec
pushf
das
subl
push
and
arpl
lock
and
fsubrl
inc
cld
mov
loop
push
jle
sub
lcall
cmp
adc
dec
or
in
test
fmuls
and
xor
ret
mov
or
aaa
ljmp
and
mov
mov
pop
add
dec
lods
dec
jmp
sti
or
xor
push
cmp
cs
jecxz
stc
iret
cmpl
sub
test
mov
sahf
dec
xor
sbb
mov
xor
loopne
jge
xchg
loop
sarl
mov
fadd
add
mov
out
call
push
and
inc
sahf
push
out
mov
movsl
push
movsl
nop
addr16
or
int3
sub
inc
inc
push
xor
out
pop
and
aaa
or
pop
subl
dec
scas
mov
mov
bound
mov
rclb
add
push
sub
gs
insb
fldl2t
mov
iret
lods
icebp
adc
lods
cltd
jl
xor
xor
fwait
jle
mov
stc
rcrl
es
leave
pop
push
jmp
jo
adc
loopne
ret
pop
cwtl
mov
sti
pop
mov
testl
adcl
lahf
out
pop
mov
xchg
gs
xchg
aad
imul
mov
nop
cmpsb
dec
xchg
fldl
or
jmp
mov
cltd
jns
or
pop
pop
out
xchg
or
jns
mov
int3
push
push
stc
adc
mov
adc
push
scas
jg,pt
dec
std
mov
movsl
imul
add
in
inc
repz
dec
int
xchg
popf
scas
lret
sbb
in
mov
lods
bound
xor
push
fadd
repnz
add
cmp
cmp
pop
cmp
pop
iret
daa
out
aas
inc
adc
std
inc
test
mov
mov
xor
lcall
jne
sub
cltd
fwait
pop
or
repnz
pushf
mov
sub
pushf
cmp
mov
test
jmp
xchg
pushf
in
sbb
push
xchg
jge
xlat
js
mov
cmp
cmp
fs
ja
lret
xchg
dec
popa
mov
jne
mov
jl
xchg
movsb
das
outsl
dec
std
push
adc
dec
xor
xchg
dec
add
mov
stos
cmc
jp
and
sahf
jmp
outsb
adc
outsl
adc
lods
dec
jmp
push
pop
add
es
icebp
mov
loopne
addl
adc
fistpll
cmp
pop
pop
mov
dec
into
scas
call
mov
mov
mov
cmp
mov
adc
das
xor
out
jnp
mov
andl
nop
mov
pop
repz
cwtl
and
jnp
xor
dec
xchg
out
popa
sub
sub
adc
mov
jnp
xchg
test
in
add
push
cmp
inc
sbb
dec
jno
mov
mul
movsb
and
ficomps
jnp
aad
andb
cmp
loope
lret
and
sti
cli
fstps
hlt
xchg
stc
in
dec
stos
lahf
fcmove
jae
gs
into
cld
inc
aaa
enter
dec
cmp
scas
lea
mov
testb
ljmp
fadds
fs
and
fildll
jne
loope
inc
cmp
add
mov
dec
cmp
stos
or
cmpl
pop
jmp
lock
adcb
inc
cmp
cmpsl
sub
popf
sub
mov
in
in
aam
jmp
wrmsr
sbb
lea
das
fistpll
pusha
add
dec
inc
mov
movsl
aas
je
and
orl
mov
test
out
in
aad
push
mov
sub
sahf
fdivl
add
lds
pop
adc
mov
out
sub
sti
pusha
in
loopne
and
shrb
mov
int3
dec
das
fsubrp
or
push
jb
push
lock
cmpsb
scas
inc
jmp
mov
xlat
mov
insb
jge
push
adc
cmp
aas
jbe
adc
data16
cmpsb
sub
sbb
add
aaa
jne
xor
out
mov
jle
dec
fwait
sub
push
push
mov
xchg
cmp
cmp
into
mov
lret
sti
cmpsb
mov
mov
stc
mov
mov
lea
pop
iret
nop
jmp
add
rcll
mov
outsb
outsb
cmc
and
loope
leave
mov
mov
je
inc
xchg
movsl
cld
popf
roll
movsl
cmp
jb
mov
outsb
pop
rcll
adc
inc
fisubrs
inc
xchg
aaa
fldl
movsl
cli
mov
cli
fwait
rorb
or
fisttpll
ficomps
add
cltd
sub
mov
mov
clc
adc
movb
adc
in
push
sbb
icebp
sub
pop
xchg
sbb
add
inc
mov
cmpsl
test
js
mov
lods
mov
enter
es
popa
mov
js
push
loop
sbb
push
sub
in
jl
movsl
sbb
or
sti
dec
mov
mov
push
and
inc
pop
mov
sahf
outsl
adc
pop
clc
mov
lods
push
outsl
mov
cmp
mov
push
ficomps
add
ret
test
and
scas
daa
pop
mov
push
dec
add
sub
sarb
cmp
xchg
inc
test
adc
mov
fcomps
mov
jge
test
adc
pop
fwait
das
sti
lea
cmp
jne
mov
mov
mov
cmpsl
sbbl
fsubrp
stos
cmc
lods
and
scas
jnp
stos
fsubr
dec
aam
jbe
unpcklps
mov
jno
gs
insb
cmpsl
cmp
cmp
idiv
jg
outsb
mov
cmp
and
aaa
jae
sub
mov
push
sub
dec
pop
test
mov
pop
jl
jo
mov
jo
mov
hlt
adc
rcrb
int
inc
sbb
dec
cmpsb
inc
push
jmp
jb
xor
add
cmc
jne
push
scas
cli
sub
mov
into
xchg
fldcw
xor
lret
or
push
out
xor
sub
stos
mov
add
mov
cmp
cs
stc
lret
mov
aam
pop
xchg
sub
scas
test
in
repz
jge
daa
push
cmpsl
pop
jne
leave
adc
in
sub
ljmp
lock
xor
testl
repz
push
sahf
pop
adc
lods
daa
inc
sbb
pushf
aad
out
unpckhps
sbb
cmc
dec
xor
incl
mov
aam
add
xchg
push
adc
inc
or
xor
loope
add
lds
jecxz
adc
xchg
cmc
cli
sub
fisubl
cwtl
es
add
std
ja
xchg
xchg
adc
loope
adcl
call
sbb
pop
leave
xchg
lahf
and
int
push
nop
push
ss
jge
or
jg
test
imul
xchg
dec
mov
popf
push
cmpsl
pop
cmpsb
or
js
mov
xchg
inc
clc
aam
adc
xchg
and
fucomip
test
cmp
adc
sub
sub
into
push
inc
les
insb
shlb
std
pop
xchg
imul
mov
das
daa
jle
out
push
adc
cmp
dec
lods
pop
shll
dec
jae
out
or
xchg
out
mov
pop
decl
push
sub
gs
add
scas
or
jecxz
inc
loop
stos
test
mov
jmp
or
inc
out
out
lret
inc
stc
mov
jnp
fwait
inc
dec
jne
dec
pop
aas
mov
adc
ss
mov
nop
int
cmp
clc
stos
es
mov
mov
or
nop
push
hlt
add
pop
inc
shlb
mov
int3
out
add
pop
dec
lret
mov
xchg
jno
test
jo
sbb
sbb
mov
es
or
imul
mov
sub
pushf
loopne
pop
mov
stc
popa
lahf
sbb
xchg
inc
push
mov
stos
ja
xor
add
xchg
jmp
stc
add
fnstcw
stos
frstor
xchg
decl
rol
mov
fldl
push
ds
in
push
ljmp
jns
int
insb
adc
int
stc
mov
cmc
jne
inc
fcmovnb
sub
fcmovnbe
jg
cmpsl
pop
mov
sub
leave
lods
xlat
andb
imul
adcl
jno
sbb
mov
mov
sbb
push
aaa
jle
push
mov
inc
sub
cmpsl
sti
inc
js
movswl
add
push
push
lds
push
cmp
mov
popf
fbld
inc
in
push
xor
std
divl
jge
icebp
icebp
jns
pop
mov
fwait
mov
sub
lret
loopne
les
inc
jbe
cltd
jb
cltd
rorl
cld
stc
in
sarb
mov
and
dec
mov
aaa
cmp
lods
je
rcll
out
lods
inc
stc
sarl
loope
out
repnz
mov
pop
pop
rorl
pop
ret
out
pop
dec
pop
mov
jnp
adc
out
in
jne
pusha
fs
xchg
pusha
shl
jnp
fmul
aaa
sbb
ficomps
inc
ror
push
sti
int
int
lods
loopne
sbb
or
rol
sbb
sub
lret
test
je
or
inc
xor
cmp
xchg
mov
stos
xor
push
gs
cmc
outsb
push
hlt
adc
inc
and
shll
xor
add
push
mov
mov
jmp
dec
mov
out
adc
pop
adc
lcall
das
jo
push
xchg
pop
lcall
aas
xchg
pop
mov
add
dec
repnz
sbb
jno
nop
inc
rorl
mov
jno
or
outsl
xor
mov
loopne
and
mov
xchg
jnp
pop
stos
jnp
sbb
pop
sbb
sbb
mov
push
xchg
mov
cmp
cmpsb
xor
mov
push
jno
fsubrl
mov
xlat
in
and
and
push
cld
xor
jl
hlt
pop
nop
mov
cs
outsb
mov
mov
mov
cmp
daa
mov
cwtl
pop
int3
mov
push
jge
cmp
adc
inc
std
push
inc
lds
inc
cs
aas
movsb
mov
push
pop
mov
cmp
int
shl
jmp
inc
add
pusha
inc
or
xor
mov
and
in
shlb
ja
lock
mov
mov
cmp
and
xchg
call
push
xchg
jecxz
xchg
popa
cmp
test
sub
das
pop
and
leave
hlt
and
loope
mov
repz
mov
je
xchg
cmpsb
inc
jmp
and
clc
mov
cli
cmp
dec
pop
pop
sub
imul
sbb
leave
xor
cmp
inc
in
das
dec
ds
cmp
fs
ljmp
outsl
push
add
mov
clc
xor
aas
sub
popa
push
ficoml
sbb
call
jbe
ss
mov
pop
xlat
or
xlat
inc
push
stc
loope
xchg
cli
aam
push
xor
jne
mov
test
xor
cs
in
aam
sbb
fnsetpm(287
fwait
sti
pop
popf
or
inc
mov
outsl
cmp
aaa
in
insl
jecxz
lret
scas
in
loop
fists
push
out
push
gs
push
repz
inc
and
cmpsb
insl
lea
loop
mov
or
test
insl
arpl
mov
mov
mov
mov
imul
pop
xchg
xchg
fs
movsl
cmp
pop
in
or
mov
add
outsl
sub
fists
shrl
dec
jge
jb
movsl
mov
add
jmp
sti
test
mov
scas
sbb
inc
dec
xor
sbb
incl
sub
cld
jmp
in
sbb
hlt
repz
sbb
repnz
pop
in
out
iret
cmp
push
xchg
shll
ja
aad
mov
leave
and
ret
jg
nop
ror
mov
add
adc
adc
mov
pop
mov
out
xor
imul
xor
ret
shrl
inc
dec
jmp
pushf
mov
shl
mov
repnz
sub
xchg
jecxz
movsb
lret
test
jbe
dec
push
jp
jg
fwait
mov
arpl
mov
test
std
rorl
bound
jle
xchg
sbb
hlt
fsubl
outsl
push
cmp
in
popa
mov
loopne
cld
push
mov
in
adc
cmp
clc
inc
imul
jae
xchg
rol
dec
js
test
pop
push
mov
fildll
cmpsb
aaa
sbb
fmulp
ret
stc
pop
pop
cmp
jnp
jne
sbb
xchg
pop
lods
lea
cli
adc
movsb
sbb
sub
xchg
xchg
xchg
xchg
stos
repnz
push
das
sbb
sahf
pop
pop
jecxz
mov
mov
inc
push
pop
mov
sbb
inc
out
shrb
adc
sahf
mov
repz
adc
pcmpeqd
add
clc
test
imul
cmpsb
jge
jecxz
mov
sbb
shlb
and
or
mov
mov
inc
xchg
repz
mov
in
sarb
inc
add
mov
repnz
hlt
cmp
xchg
and
cltd
je
ds
ss
mov
fidivl
fadds
add
movsb
sbb
mov
out
push
sub
push
push
sub
jmp
cmp
outsl
dec
xchg
outsl
or
or
push
cmpsl
mov
mov
pop
and
fdivrl
push
into
popf
sub
mov
aad
xchg
leave
mov
xchg
push
pop
jae
test
sub
ljmp
pop
fisttps
movsl
sbb
push
fstl
inc
in
mov
sbb
mov
rcll
jle
inc
jg
and
add
xchg
push
and
mov
lock
bound
fistpll
sub
push
ss
ds
and
fcoms
xor
and
xchg
mov
xchg
ret
in
push
inc
in
movsb
je
das
lds
cmp
out
jge
push
shlb
mov
inc
xor
sahf
gs
aam
mov
pop
cltd
btc
jns
ficoml
insb
arpl
roll
dec
fdivs
lret
std
ss
dec
and
call
fsubs
lcall
and
icebp
out
xor
sub
sti
rolb
mov
push
jmp
add
es
scas
dec
test
into
hlt
xchg
pop
js
cmc
cmp
shr
rcrb
cmp
jns
repz
jmp
rcl
shrl
mov
add
loop
insl
sbb
xor
mov
lahf
jae
xor
mov
mov
add
dec
jle
lods
es
lcall
pop
ds
add
dec
lock
cwtl
xchg
js
clc
stos
inc
mov
aad
jmp
xorb
pop
out
sbb
cs
xchg
adc
jno
push
jmp
mov
adc
out
rcll
push
jne
int3
insl
stos
mov
repnz
sti
shrb
ja
push
lods
mov
jnp
testl
mov
inc
fistpll
add
js
cwtl
shll
shl
movsl
fistpll
cmp
jge
aas
sbb
push
repz
hlt
sub
and
les
mov
push
test
cmp
orb
xlat
sub
pop
aas
xorb
add
test
outsl
fs
push
pop
loop
or
lahf
mov
out
jg
hlt
sbb
std
int3
data16
jb
out
xchg
jo
sbbb
aas
cmp
mov
insb
movsb
sbb
test
pushfw
ja
mov
push
mov
adc
shll
xchg
divb
sahf
cmp
or
mov
jnp
xchg
into
scas
std
fsubrs
push
icebp
sbb
add
lret
or
mov
dec
addr16
ret
and
jb
pop
push
sahf
jnp
inc
xchg
mov
xchg
add
dec
cmp
mov
nop
xlat
xchg
dec
sub
xor
cli
arpl
sbb
sub
pusha
sub
jp
lahf
jmp
jno
scas
xor
inc
lret
int
dec
ljmp
xchg
push
cmpsb
mov
pop
gs
cwtl
dec
movsl
jae
out
imul
jmp
add
scas
sbbw
lcall
push
test
shll
and
xchg
cmpsl
in
ret
test
mov
lods
jmp
cld
mov
mov
in
in
insl
inc
or
mov
inc
inc
cmpsl
pop
jg
inc
out
aaa
xor
subb
rcll
fcomp
cmp
pop
ret
add
xchg
in
push
push
mov
es
sbb
mov
aas
add
xbegin
pop
mov
shrl
or
ja
movsl
jbe
cld
inc
xor
dec
or
sub
arpl
xchg
rcr
pop
xor
xchg
push
mov
mov
or
push
xchg
pop
repnz
dec
push
and
cmp
cwtl
mov
ss
jmp
out
jns
mov
lea
dec
mov
shlb
test
mov
sbb
jge
lods
add
scas
adc
lea
xchg
sub
xor
jae
sub
lret
mov
sub
cmpsl
pop
fs
cmp
push
cmp
sbb
push
jle
enter
adc
aad
pop
popa
sub
icebp
lds
mov
inc
rcl
lods
inc
in
xor
mov
cmp
mov
push
inc
mov
insl
jne
inc
or
or
mov
sub
inc
gs
out
sub
jl
push
fstps
pushf
int
push
insl
mov
mov
push
ss
cli
test
out
and
jno
xor
adc
lods
dec
mov
out
mov
xchg
in
add
cwtl
jecxz
add
aad
sbb
aaa
mov
cmpsb
cmp
ljmp
mov
mov
rcll
hlt
mov
repz
pop
ret
lods
cli
mov
scas
insb
dec
ret
push
push
inc
insb
inc
mov
add
movsl
dec
push
lods
adc
sbb
adc
and
inc
sarl
add
mov
dec
xchg
jae
call
cmp
xchg
jne
lock
cwtl
enterw
loopne
or
push
stos
inc
push
jae
jmp
cmp
outsb
push
push
lea
mov
dec
or
sub
cmpl
mov
ds
inc
dec
add
mov
inc
cld
loop
outsl
mov
push
fs
pop
mov
add
push
rorb
fistpl
dec
lock
outsb
jecxz
sub
fsts
sub
out
outsb
lahf
into
jg
stos
daa
addb
push
push
jo
mov
dec
inc
mov
cmp
jle
push
cmp
sbb
in
mov
and
hlt
add
ds
orl
add
ret
xchg
in
inc
lds
test
movsl
stos
fwait
sub
setp
jno
pusha
out
mov
outsb
notl
pop
cltd
sub
sahf
cwtl
test
mov
jle
roll
pusha
mov
jp
xor
dec
popa
repnz
test
xor
out
inc
push
repnz
add
push
xlat
scas
mov
stos
jg
sbb
insb
dec
mov
call
mov
test
mov
xchg
mov
xor
bound
pop
sub
cmp
and
ror
repz
movsl
in
or
sbb
shll
test
push
out
and
adc
daa
and
adc
add
mov
push
sbb
jne
sbb
outsb
mov
mov
jmp
xor
out
aam
adc
jg
or
sbb
sahf
ds
stos
cwtl
in
mov
cs
pop
xor
insl
xlat
insb
sub
repz
lods
insb
pushf
jmp
cltd
or
add
push
and
cltd
push
mov
jp
jl
out
mov
xor
stos
lods
mov
push
dec
rolb
pop
mov
inc
loopne
sbb
les
xchg
loopne
lock
stos
out
outsl
sahf
lods
mov
aas
jbe
push
adc
imul
jne
mov
lret
mov
and
fnstcw
pop
sub
xchg
out
or
ret
xchg
lcall
cmp
cmpb
imul
je
pop
push
les
push
add
ret
data16
jp
popf
jge
adc
jp
cwtl
lret
lds
pop
adc
stos
lods
add
jl
testl
cwtl
ret
nop
adc
push
add
sub
pop
xor
pusha
enter
add
outsb
push
loopne
xchg
nop
sbb
mov
mov
outsb
enter
add
loope
jnp
sub
inc
xchg
mov
test
lret
call
je
push
sub
pop
loop
dec
adc
jg
adcb
es
fadd
xor
push
ret
push
cltd
cmpsl
jp
fwait
push
clc
dec
inc
push
imul
xchg
ret
data16
popf
movntps
jns
mov
jne
mov
imul
mov
xchg
enter
add
xchg
jno
inc
xchg
inc
sbb
jle
sti
orl
test
cwtl
pop
xor
rclb
mov
ss
jbe
loop
pop
and
fs
adc
adc
dec
popf
sbb
push
mov
mov
adc
mov
mov
xchg
sub
rcr
mov
in
jo
fsubrs
roll
sbb
lcall
sbbb
mov
push
inc
add
fldt
insb
adc
dec
les
shl
mov
dec
or
popf
insb
push
adc
fs
daa
popa
jmp
inc
into
cmpsb
jo
add
test
insb
cltd
jge
dec
push
iret
push
sub
mov
fnstcw
rcll
xor
push
mov
sahf
push
dec
rorb
xor
push
push
add
cld
cs
cmc
arpl
xchg
and
dec
dec
shll
sbb
cmp
rol
adc
sbb
sbb
jne
cmp
aas
cmpsb
out
clc
add
jnp
test
and
in
divb
test
inc
xchg
pop
xchg
aad
inc
out
add
xchg
sub
mov
in
out
sub
mov
mov
jge
mov
push
xchg
jo
inc
adc
fistpl
mov
daa
xchg
cltd
insl
ljmp
adc
scas
or
hlt
mov
sub
sub
mov
jns
ljmp
incl
mov
popa
flds
mov
sbb
inc
cmp
lret
push
fcomip
fmul
test
lret
or
cmpsb
jns
jmp
test
mov
push
xchg
inc
mov
ret
inc
aaa
fdivrp
adc
dec
fcomip
push
pop
outsl
add
loope
adc
loope
cmp
subl
add
adc
xchg
call
in
icebp
sub
and
dec
mov
ss
pusha
push
mov
jg
mov
icebp
insl
fwait
or
and
lret
push
sub
push
mov
jnp
mov
dec
dec
mov
inc
arpl
movsl
scas
jg
xchg
lock
in
jp
lock
push
mov
jecxz
lret
jnp
cmp
ljmp
mov
shrb
sar
leave
stc
notb
push
or
jmp
jo
inc
push
scas
int3
hlt
sub
fwait
out
jo
pop
inc
dec
xor
iret
mov
ror
scas
cmp
filds
mov
repz
and
sub
mov
mov
mov
pop
les
pop
test
enter
out
aad
lret
loopne
shrl
les
ss
pop
push
sub
das
xchg
jno
mov
jle
mov
ljmp
adcl
cltd
cwtl
fildll
pop
stc
lds
loope
shlb
fnstcw
or
push
or
sub
cmp
cmp
imul
sbb
mov
push
xor
xor
dec
ja
loope
jmp
sbb
in
jp
pop
push
inc
dec
das
and
dec
aaa
movsl
fisubrl
mov
das
pop
lods
mov
lods
sub
or
or
adc
test
xchg
mov
push
shrl
aas
mov
mov
pop
in
in
movsl
or
decb
xor
or
rcll
adc
inc
jns
push
jb
out
adc
adc
insl
xor
rcrl
cli
mov
jno
or
roll
rol
repnz
or
ret
jns
aaa
mov
imulb
push
loop
fstpt
inc
sub
sbbl
adc
mov
movsl
push
sub
outsl
pop
lods
idivl
cmp
insb
push
push
pop
sbb
iret
mov
out
ss
in
dec
xchg
icebp
xor
std
fxam
pop
fmull
xlat
add
adc
in
cltd
xchg
adcl
add
lahf
addr16
nop
gs
addr16
xlat
cld
xchg
or
fisubrl
cmpl
cld
clc
mov
test
inc
push
push
xor
cmp
ret
ret
cmp
jge
lea
push
out
inc
pop
div
pop
mov
es
adc
mov
sbb
mov
xor
in
daa
je
test
lcall
jl
gs
arpl
or
enter
scas
dec
pop
in
cmp
loope
roll
xor
mov
pop
jp
mov
pop
imul
mov
lea
scas
and
popw
mov
cmpsb
mov
adc
push
xchg
jae
sub
clc
out
push
fcomps
jno
scas
push
jne
int
mov
iret
inc
cmp
push
popa
cld
addr16
pop
out
and
pop
fdiv
rorb
push
xor
test
es
aaa
in
cltd
insb
dec
sti
mov
pop
push
adc
push
rclb
mov
cmc
adc
hlt
push
ljmp
add
add
inc
scas
in
movsb
mov
sbb
mov
mov
stc
out
and
or
mov
cmp
mov
pop
add
cs
push
xchg
js
push
and
and
cwtl
mov
scas
repz
and
data16
xlat
mov
pop
test
cli
cmp
lods
sub
push
int
jl
aas
into
xor
repnz
sub
xlat
ss
xor
add
aad
push
cmp
testl
lods
aam
dec
icebp
and
cmp
jns
sub
cmp
push
sub
cmpsl
xor
ret
pop
mov
dec
rclb
and
cmp
xchg
cmc
jnp
stos
or
jg
imul
outsl
leave
xchg
pushf
out
enter
sub
inc
pop
je
mov
les
push
and
ds
sub
cmp
mov
jle
ja
cltd
jmp
scas
mov
cmp
and
inc
xor
jmp
mov
arpl
rcrl
add
jne
adc
cmp
iret
daa
ret
in
out
test
roll
loop
mov
repnz
pusha
lret
lock
pop
fistpll
mov
or
xchg
xchg
mov
add
pop
cmpsl
xchg
in
out
mov
mov
jns
add
fsub
test
call
subl
insl
cli
stc
gs
cli
push
in
dec
dec
push
jno
mov
aaa
jecxz
fildl
insb
mov
add
sbb
btr
pop
popf
int3
stos
in
out
xchg
sub
adc
fwait
push
mov
mov
jne
cmp
dec
sub
push
mov
inc
sub
push
in
pop
xchg
push
or
lods
pop
push
ss
ds
lcall
in
adc
lret
push
cmp
jnp
mov
mov
dec
fidivl
hlt
ljmp
push
cwtl
lahf
scas
lds
jg
ret
dec
ja
mov
xor
test
adc
cmp
push
loopne
cmpsb
adc
xchg
lahf
push
dec
lods
and
pop
mov
push
mov
loopne
out
jae
inc
lret
lahf
inc
sbb
orl
loope
aad
nop
dec
stos
out
and
mov
xchg
adcb
and
insl
roll
std
mov
mov
clc
jo
inc
xchg
sbb
pop
adc
andb
jo
daa
rorl
sub
bound
and
pusha
xchg
push
pop
mov
pop
sub
movsl
lahf
jl
mov
cmpl
pop
movsl
mov
cs
xor
jge
jecxz
jmp
inc
pop
mov
push
lock
push
jg
sahf
adc
scas
sti
pop
stos
mov
cli
pop
insl
loopne
sbb
test
cmp
outsb
xor
mov
cmp
lcall
loope
push
sub
test
mov
add
push
leave
push
pop
int3
pop
daa
lret
xor
add
cwtl
fnstenv
cld
inc
rcrl
xchg
dec
repnz
pushf
sbb
aad
pusha
loopne
fstpl
imul
in
hlt
adc
pop
mov
dec
stos
adc
pop
sbb
sti
adc
fmul
dec
ret
das
mov
mov
aam
push
insb
repnz
xchg
es
nop
mov
and
shlb
popf
insl
cwtl
dec
or
outsb
and
mov
popf
jo
cmpb
or
pusha
ljmp
and
xchg
repz
neg
mov
and
andb
cltd
pop
int3
mov
add
xchg
xchg
das
in
popa
ror
stos
neg
cmp
pop
stos
jae
inc
jo
fwait
mov
jg
add
mov
add
sbb
sbb
clc
jge
cwtl
or
or
mov
or
imul
or
aad
pop
inc
outsl
cmp
ljmp
pop
aas
ja
in
cmpsl
sbb
negb
popa
sub
xor
in
jbe
cli
in
sbb
push
jnp
pop
push
inc
dec
ret
popf
xor
lcall
xchg
std
xchg
out
cmp
mov
mov
adc
or
cmpsb
mov
addr16
nop
sbb
or
mov
mov
pop
pop
pop
fs
add
lods
loopne
xor
fldcw
jne
jnp
int
or
in
and
scas
andb
in
push
mov
inc
test
lea
fdivl
and
fidivrl
fwait
es
inc
fistpl
and
xor
push
sub
mov
loop
pop
mov
and
xchg
mov
push
outsl
fisttpl
dec
pop
inc
jmp
fdivrp
push
aaa
cld
fistpl
push
inc
stc
inc
pop
xor
inc
scas
cmp
bound
outsl
aas
hlt
xor
imul
cmp
imul
pop
cmp
ret
mov
test
pop
xchg
jg
test
fidivrl
shll
push
mov
mov
adc
ja
rcrl
dec
xchg
mov
decl
loopne
mov
out
xchg
fiaddl
add
jle
or
cmpsb
enter
jo
int
test
add
sbb
ficoms
mov
fisttpl
pop
jmp
sbb
xchg
sub
scas
cmp
lds
mov
push
jg
movsb
xor
jae
xlat
xchg
and
aam
inc
push
mov
mov
sbb
sbb
mov
xor
jae
cmpsb
cmp
subb
or
out
shlb
pop
add
dec
add
roll
leave
cmpl
ret
imul
sub
mov
mov
fs
insb
cmp
ja
fsubl
mov
mov
adc
jbe
cmp
mov
cmp
or
jl
mov
add
xchg
sbbl
fcmovb
push
mov
mov
adc
es
jl
scas
jbe
sbb
xchg
pop
les
std
or
lods
and
int3
leave
rcrl
mov
fiaddl
sbb
out
push
popf
dec
fdivrl
in
loop
stc
arpl
push
out
mov
lahf
imul
dec
cli
sarb
and
insl
insb
mov
ret
adc
push
push
lret
in
fistps
cmpsb
repnz
clc
adc
lock
xor
hlt
mov
push
dec
ret
jp
adc
mov
jle
into
fstps
mov
out
out
int3
clc
inc
push
int3
aad
aaa
cltd
lods
or
mov
mov
mov
shlb
mov
mov
lods
repz
jecxz
stos
out
sbb
mov
fneni(8087
into
fstps
jne
mov
mov
test
repz
stos
cli
jp
icebp
nop
imul
mov
stc
nop
aas
test
sbb
sysexit
adc
or
and
in
ljmp
pop
ds
out
ret
outsb
xchg
inc
jo
xor
notl
out
sahf
cltd
sbb
jno
push
push
call
push
in
sbb
jnp
mov
push
loop
adc
sbb
adc
mov
out
rcl
xor
cs
movsb
into
scas
loopne
jecxz
fwait
push
jp
dec
es
inc
stos
test
ja
jbe
mov
inc
out
movsl
xchg
gs
inc
dec
xchg
gs
pop
inc
lret
dec
add
add
sub
lahf
add
lds
jae
and
imul
add
sahf
sar
gs
lods
sahf
mov
ja
std
adc
test
stos
jg
xchg
mov
cmc
push
test
orb
adc
aas
fidivl
mov
in
psllw
cld
cmpxchg
pop
pop
jmp
xor
cmpsb
mov
add
and
xchg
mov
add
mov
jb
mov
aaa
aas
inc
push
popf
push
lea
insb
inc
sbb
sbb
out
sbb
aas
jo
fbld
jo
ret
gs
cmp
jl
repz
shlb
dec
fnsave
aad
loopne
sar
in
fimuls
add
inc
push
andb
pop
sub
cmp
adc
push
icebp
cmp
xor
add
dec
pop
or
or
inc
inc
idivl
jecxz
lahf
dec
std
bound
ljmp
int
negl
adc
jo
sbb
fs
notl
mov
insb
into
jle
mov
sti
loop
rolb
dec
insl
add
add
gs
cmc
pop
xor
push
add
testl
das
dec
std
dec
push
out
sbb
test
rcrl
cmp
cmp
mov
scas
xchg
cmp
es
fcompl
xchg
shl
rcrl
mov
sbb
in
fwait
push
mov
int
sub
sarl
fdivr
push
movsl
lahf
inc
popf
dec
in
fildl
cmp
pop
outsb
sbb
scas
adc
push
outsb
sbb
mov
xor
adc
clc
in
fldcw
pop
push
fsubrl
mov
mov
jno
pop
xchg
or
gs
xchg
mov
sub
stos
popf
fmull
add
jp
push
std
adc
or
movb
mov
push
fildl
pop
add
lret
lock
mov
cmp
xchg
out
mov
xor
xchg
xchg
addr16
repz
pushf
int3
push
add
inc
dec
fnstenv
repnz
adc
xor
mov
pop
jle
ret
into
xchg
adc
fwait
clc
shrl
dec
in
pusha
pusha
scas
dec
mov
fists
call
lahf
cmp
xchg
sub
ljmp
mov
stos
push
cmpb
push
adc
mov
call
imulb
and
ljmp
jnp
mov
inc
add
inc
mov
clc
test
sbb
movsb
xchg
pop
xorb
ffreep
loop
cmp
ss
mov
add
pusha
les
pop
jns
movsb
sarl
jno
and
stc
std
sub
imul
dec
test
dec
lret
adc
mov
add
pop
test
inc
add
in
repnz
movl
jle
mov
gs
pop
pop
or
fnsave
jmp
dec
aam
xchg
and
pop
jb
in
popf
sarb
roll
pop
mov
pop
insb
cmpsl
sbb
mov
out
lods
out
ljmp
subb
jnp
lea
cmc
in
push
jnp
pop
testl
and
mov
shrb
pusha
cwtl
pop
sub
sub
int3
mov
das
rorb
inc
out
fnsave
sahf
mov
cmp
test
hlt
call
dec
cmp
arpl
stos
cld
mov
jne
arpl
sbb
push
jbe
decb
rcll
sub
pop
bound
jo
insb
jg
mov
add
jmp
and
pop
xor
into
push
jae
mov
cwtl
lods
adc
lcall
out
icebp
push
xchg
dec
xor
and
dec
int3
mov
lahf
int
xchg
xchg
sub
mov
push
repnz
dec
dec
mov
pop
lods
out
imul
cltd
in
push
mov
push
adc
mov
adcb
xchg
jne
test
mov
dec
into
fs
xor
int
mov
jp
pop
mov
notl
sbb
cmp
xor
in
sbb
push
bound
enter
movsb
aaa
add
dec
pop
imull
shrb
push
push
dec
cmp
out
pop
mov
cmp
mov
sub
mov
cmpb
arpl
xchg
leave
jg
push
ljmp
dec
ljmp
xor
pop
push
push
ret
add
imul
repnz
lea
sbb
mov
popf
cwtl
mov
pop
sbb
add
jb
rcrb
jecxz
popf
cltd
roll
push
enter
rcr
fs
clc
aam
jg
ret
jns
mov
mov
mov
add
ffreep
fnstenv
mov
negl
xor
push
das
testl
or
test
ds
and
xchg
fcmovb
jns
dec
mov
adc
push
shlb
mov
push
lock
dec
popf
push
adc
dec
fs
fnstsw
push
sub
sub
mov
jb
rorb
stos
pop
decl
or
cli
xor
add
xor
pavgb
iret
fdivs
cld
jnp
adc
cmp
fwait
sub
pop
iret
imul
cvtps2pi
pop
mov
pop
jmp
or
xchg
andl
test
sbb
adc
push
ljmp
clc
pop
outsl
jecxz
out
mov
lock
orl
rolb
sub
pop
leave
xchg
push
adc
scas
pop
stc
or
sub
xchg
sub
les
aaa
adc
jno
mov
stos
test
mov
jle
js
imul
in
push
cmp
cli
mov
fmull
aad
repz
fwait
stos
push
push
data16
idivl
je
push
or
jae
dec
dec
gs
sub
arpl
movsl
fimuls
or
outsl
xchg
data16
jmp
xchg
sarl
rcrl
sarl
fwait
je
out
inc
and
ss
fs
loope
imulb
movb
hlt
sahf
shl
xor
jle
ret
pop
dec
insl
jo
das
inc
xchg
inc
aam
pop
push
xchg
repz
pop
mov
push
popf
insl
push
lret
fmulp
cmp
sahf
adc
stos
mov
xchg
add
leave
cwtl
pop
sbb
stos
je
shrb
xor
sub
sub
cs
jmp
or
xchg
mov
mov
and
push
sbb
popa
pusha
lock
adc
hlt
in
clc
xchg
movsb
outsl
dec
pop
inc
leave
jmp
fists
sahf
or
inc
jno
xor
jns
js
loop
mov
xchg
test
or
shrb
push
mov
in
cmp
into
jne
mov
cli
push
mov
xor
pop
push
outsl
cmp
inc
xor
sub
mov
fcoml
mov
inc
pop
out
sub
add
adc
and
ret
popf
jle
aam
outsb
jns
sbb
and
xor
push
and
mov
nop
scas
mov
adc
pop
mov
xchg
xor
xor
into
je
insb
test
mov
pop
mov
icebp
pop
push
adc
pop
add
sbbb
lahf
adcl
lock
popa
divl
mov
xchg
loopne
jo
add
mov
adc
js
xor
test
jo
data16
aaa
in
out
lock
xchg
mul
jmp
test
outsl
or
mov
outsb
and
jp
pop
xchg
and
xchg
test
loopne
mov
cs
push
fs
in
and
cmp
test
test
or
sub
pop
and
andl
loopne
mov
incb
xchg
mov
cwtl
inc
into
or
push
std
shrl
inc
cld
or
adc
icebp
xchg
movsb
push
lahf
adc
xchg
pop
mov
adc
imul
mov
fwait
xlat
das
xchg
jae
aaa
add
imulb
add
cmp
push
dec
jno
inc
sub
jo
xchg
pop
add
xchg
and
cmp
cmp
dec
sub
xchg
and
data16
cmp
loopne
mov
push
gs
xchg
mov
dec
cmp
add
dec
movsb
inc
mov
sbb
jp
xchg
xor
loop
je
jnp
push
jecxz
ljmp
imulb
jns
or
dec
out
add
pop
or
xor
icebp
xor
mov
adc
stc
icebp
xor
jg
and
dec
leave
pmuludq
aas
cmp
xchg
sbb
dec
mov
cmpsb
call
gs
and
xlat
or
popf
aas
push
ss
jne
inc
rorb
adc
insb
mov
sbb
test
aad
dec
jb
jbe
xchg
movsb
in
lods
add
arpl
pushf
lds
fwait
or
push
loopne
sub
in
pop
xor
adc
xchg
jae
push
leave
nop
sbb
dec
and
test
sub
sub
xor
inc
scas
mov
mov
test
pop
int3
jmp
or
cmp
xor
sub
mov
add
lret
lahf
mov
shlb
ficompl
sub
imul
cmc
push
fcoml
popa
sbb
orb
cmp
or
push
fwait
rcrl
ret
jne
or
jns
mov
sbb
fstl
adc
inc
dec
ret
lds
js
aad
dec
add
xchg
lret
out
mov
lahf
sbb
add
addb
in
in
cs
jmp
andb
cmp
in
aas
jo
adc
cmpsl
leave
cwtl
inc
in
mov
jge
push
xchg
cmc
xchg
xor
hlt
sarb
sbb
mov
dec
stc
ss
fiaddl
jmp
mov
aaa
sbb
rol
je
and
dec
test
jnp
pushf
mov
and
sbb
loope
in
in
add
mov
outsl
sbb
mov
jmp
adc
in
popf
push
setl
jmp
inc
out
push
xor
xchg
mov
ss
or
cli
int3
and
ja
and
int
xchg
sub
into
mov
ret
inc
inc
daa
pop
loop
inc
fnstsw
icebp
push
lcall
into
sti
inc
fs
mov
push
leave
and
andb
cmp
and
mov
inc
rorl
and
add
sub
cs
push
dec
pop
and
cmc
push
sbb
cs
adcb
xlat
sahf
jmp
mov
add
lret
cmp
jo
jno
dec
test
push
cmp
sub
or
push
and
add
out
xchg
cmp
or
mov
lods
xor
xor
fwait
push
leave
jns
or
dec
jmp
inc
inc
ds
loop
fdivp
test
fwait
adc
xor
hlt
je
sbb
push
jp
pop
test
xor
cmp
setp
cmpsl
lahf
xor
dec
mov
dec
mov
aaa
cltd
push
out
add
push
lea
cltd
dec
jg
stos
add
add
hlt
daa
jne
xlat
or
call
mov
lcall
xor
addr16
jecxz
sahf
test
cmc
mov
sub
bound
or
and
test
popf
js
test
mov
mov
or
test
imul
push
mov
jle
mov
or
stc
sub
sub
lcall
xor
jb
fdivrl
pop
cmp
bound
ss
xchg
or
sub
inc
sti
push
sub
or
stos
dec
xchg
pop
lea
lret
inc
xor
lea
add
rorl
pop
lcall
add
dec
outsl
js
inc
cmp
stos
js
xchg
sbb
mov
faddl
adc
mov
push
in
scas
cltd
mov
lock
mov
fcmove
or
pop
mov
cld
mov
sub
incl
outsb
mov
fisubrs
sbb
lcall
inc
mov
fsubr
mov
test
mov
mov
adc
popf
fnstsw
sub
mov
mov
adc
jge
pop
sbb
xchg
addr16
stos
push
or
dec
pop
pushf
add
mov
xlat
scas
mov
mov
and
adc
adc
mov
push
mov
out
add
mov
orb
es
mov
mov
int3
dec
inc
shll
int3
das
fcmovne
sub
xor
and
dec
out
int
sub
xor
in
stos
icebp
in
pop
pop
into
jg
lock
mov
out
xor
add
les
popa
pop
mov
shlb
jp
stos
add
dec
adcl
ret
xchg
dec
or
xchg
jo
mov
out
cmp
inc
std
stos
sti
loopne
imul
inc
scas
das
iret
jp
pop
xor
adc
push
fwait
xlat
icebp
mov
sub
jmp
cld
push
cmpsl
sbb
jbe
cmpsl
lds
stos
jecxz
cmc
cltd
add
addr16
cli
or
mov
jmp
mov
test
out
xchg
cmpsl
ds
lret
popa
xor
push
movsb
lret
das
and
push
movsb
inc
or
sub
test
cmp
mov
add
loop
or
dec
in
xchg
loopne
shl
js
or
out
fs
fstpl
pushf
aam
pop
cld
xor
ret
sahf
loop
push
adc
xchg
filds
jecxz
cli
cmpl
mov
test
sahf
sbb
scas
dec
dec
push
jne
pop
xchg
sub
mov
or
cld
sub
mov
mov
out
mov
test
test
inc
cmc
xor
xor
pop
cmpsb
into
push
lret
mov
jne
pop
data16
push
mov
sahf
lahf
jno
mov
ret
test
mov
cmpl
into
mov
add
xchg
out
inc
in
ja
fnstsw
jp
sahf
mov
cltd
pusha
xchg
jge
dec
adc
aaa
jmp
push
push
hlt
icebp
inc
in
in
fdivrs
push
mov
fldl
lcall
dec
pop
pop
repnz
mov
rorl
add
clc
push
movq
sti
and
stc
jge
push
sbb
push
cmp
dec
xchg
mov
jnp
imul
add
xchg
notl
push
stos
jle
addr16
loopne
add
pop
lds
mov
or
mov
and
inc
ret
add
mov
jecxz
xchg
add
je
pop
cmp
cmpl
loop
dec
sbb
je
pop
dec
jno
jecxz
int
dec
shrb
int3
adc
enter
push
fistpll
scas
inc
jbe
das
or
or
pop
jle
call
in
loopne
sub
adc
mov
out
cmp
mov
fdivrs
or
pop
pop
mov
imull
xor
addb
jno
sbb
xor
outsl
int
pop
in
or
mov
pop
push
leave
dec
shll
inc
pop
mov
daa
je
mov
pop
jb
jecxz
mov
aad
sub
fstpl
cmc
mov
sarb
mov
sub
ljmp
out
aam
fs
cwtl
dec
jae
xchg
popf
adc
sbb
ljmp
sbb
pop
gs
jbe
sub
ss
jmp
repz
les
xchg
jg
or
stc
inc
aam
push
enter
fsts
fdivr
sub
das
icebp
das
mov
shrb
cwtl
xor
movsl
mov
mov
xchg
and
les
mov
mov
pop
ljmp
xor
ja
push
fsubs
or
ret
mov
push
push
je
inc
jge
cmpl
call
pop
lock
ret
push
js
enter
pushf
aad
push
mov
cld
xor
mov
loop
inc
stc
sbbb
lret
in
iret
mov
xor
daa
sbb
in
cmp
pop
stos
cmpsb
aam
cmpsb
dec
and
aad
sbb
and
xchg
push
mov
lods
jle
xchg
lds
rorb
in
mov
loope
xchg
test
lea
push
mov
mov
mov
mov
jmp
jns
es
rcrb
dec
inc
mov
pushf
or
lret
mov
lcall
mov
les
inc
int3
push
xchg
pop
jns
lcall
icebp
das
fidivrs
xchg
out
pusha
jbe
mov
in
xchg
xor
fs
lock
xchg
or
xor
ja
lcall
pop
inc
xor
into
rorl
lea
and
ret
in
jne
iret
sub
push
enter
inc
mov
icebp
push
movsl
iret
push
mov
fsubs
and
dec
scas
sbb
sbb
mov
cli
pop
mov
mov
les
lods
sbb
dec
mov
xchg
jae
daa
sbb
imul
push
data16
aad
mov
and
xchg
jnp
inc
loope
insb
mov
xor
in
lds
in
loope
ds
out
cmp
imul
int3
cmp
out
insb
xchg
cmp
ret
hlt
sbb
cltd
sub
and
adc
inc
cs
js
and
std
call
cwtl
mov
xlat
popf
shlb
sub
les
jnp
jp
scas
mov
dec
test
mov
enter
fisttps
cmp
enter
rorb
dec
movsb
mov
or
dec
repz
and
sbb
and
xchg
sbb
sbb
mov
sub
sub
push
addr16
mul
dec
fsts
pop
xor
int
add
sub
pushf
mov
adc
cmp
push
stc
adc
jns
cmp
inc
movsl
push
cmp
xchg
dec
cmp
pop
sbb
cmp
push
neg
push
call
cmp
mov
xchg
mov
sbb
add
xor
mov
addr16
sahf
sbb
push
jne
push
bound
xchg
movsb
ret
lret
les
xchg
mov
sub
data16
cmp
sub
outsb
test
add
push
test
insl
mov
fbstp
lahf
xor
lds
movntq
mov
jecxz
and
fcomps
cmp
adc
mov
or
fbstp
dec
fcomps
dec
xor
rorb
jae
dec
or
repnz
das
out
or
adc
adc
stos
xchg
mov
push
mov
cmc
xchg
mov
adc
push
fidivl
cmp
jge
xor
cmp
lret
bound
test
out
pushf
xchg
lret
test
dec
lock
push
push
jo
fnstenv
pop
cli
inc
mov
insl
cmp
int
insl
aad
xorb
out
cmpsb
sub
loope
jb
lea
aaa
out
arpl
orb
cmp
cwtl
cmp
rol
pop
mov
push
stos
sbb
pusha
cs
fbstp
lods
inc
lods
test
mov
jg
cs
mov
mov
jns
and
xor
cltd
mov
lock
scas
sbb
movsl
cmp
out
movsb
mov
ljmp
push
cltd
xor
and
aas
pop
xlat
std
rcrl
adc
movsl
xchg
mov
int3
sub
and
out
mov
pushw
cmc
jmp
pop
xchg
mov
push
cmp
int3
jg
and
cmpsl
call
scas
cmp
sub
dec
fistl
and
aam
js
push
jl
mov
inc
sbbl
sbb
fdivrs
adc
pop
scas
sbb
inc
fdivl
and
mov
js
out
xchg
cmpsb
mov
call
ret
out
fwait
sbb
and
mov
nop
mov
pop
mov
shr
adcb
and
into
mov
jmp
and
xor
cmp
add
outsb
jge
sub
out
das
adc
nop
mov
inc
pop
sbb
jl
inc
or
or
test
ficomps
and
cmp
std
adc
jnp
mov
out
xchg
mov
ret
fmuls
xchg
ret
leave
cmpxchg
bound
mov
arpl
gs
cmp
cli
andb
push
adc
cmp
xor
cmpsb
pop
shll
and
mov
mov
jg
cld
mov
jae
int3
and
push
mov
mov
scas
xor
repz
pop
ja
inc
xchg
cli
sub
inc
pop
adc
dec
xchg
cli
push
and
inc
pop
shlb
cmpsl
push
pushf
sbb
sub
pop
inc
push
mov
iret
cmpsl
mov
mov
gs
jb
ds
daa
std
xor
jg
or
or
add
jecxz
xchg
jge
xchg
jmp
sbb
push
mov
push
insb
ss
in
dec
arpl
xor
aam
adc
mov
lods
add
adc
subb
inc
fcompl
stos
cmpsb
add
adc
push
outsl
mov
inc
sub
fcmovu
xchg
mov
add
lds
sbb
insl
adc
adcl
scas
out
ss
pop
push
and
jnp
mov
lcall
in
adc
inc
mov
mov
clc
xor
xor
xor
aaa
and
push
test
add
sub
push
inc
sub
or
insb
fcmovb
dec
pop
outsb
test
inc
sub
lock
or
lret
sbb
and
aas
in
mov
xchg
dec
loop
xchg
stc
xor
pop
xchg
cwtl
jg
dec
pop
adc
dec
js
inc
scas
or
jp
inc
into
dec
sbb
jb
lahf
adc
cmpsb
dec
into
mov
xlat
shll
lret
mov
into
inc
sbb
mov
or
aas
xor
loop
xchg
cwtl
ja
roll
aad
iret
popf
cmpsl
jno
test
or
sbb
outsb
cmp
rorl
pop
cmp
jne
adc
les
lahf
lret
cltd
push
mov
decl
scas
cmp
mov
out
iret
and
mov
je
lret
mov
sbb
inc
std
orl
ds
fstps
mov
mov
xchg
dec
movsl
jns
push
jecxz
dec
dec
shr
es
repz
push
leave
fxch
xor
jo
or
inc
jge
clc
repz
mov
pusha
test
es
test
fildl
sarb
pop
lods
pop
int3
out
aam
mov
ret
mov
nop
jecxz
loopne
cmp
xor
pop
adc
test
add
mov
lock
sbbl
stos
rolb
repz
stc
mov
xor
add
hlt
jo
pop
adc
lcall
in
shrb
jmp
popf
adc
jecxz
xchg
ljmp
ljmp
sbb
out
in
ficoms
dec
enter
cmpsl
push
les
adc
lods
inc
in
and
xchg
lret
jns
push
shll
jns
adc
movl
adc
sbb
mov
mov
sbb
jae
pop
popf
ljmp
mov
xor
ds
cld
aad
xor
loopne
mov
inc
adc
cli
lods
push
jns
cmp
mov
inc
mov
in
int
pop
mov
into
xchg
jae
cwtl
imul
sub
add
outsl
pop
addl
cld
sub
test
sbb
push
imul
xlat
inc
adc
xor
push
cs
jge
xor
cmc
pop
test
lods
cli
sub
lret
lods
push
and
sti
jns
mov
cltd
popa
mov
mov
in
cmp
cld
loop
scas
xchg
jne
test
pop
cmp
xor
mov
gs
mulb
imul
mov
data16
or
ret
xchg
jb
lods
mov
fisubs
pop
repz
jno
out
adc
mov
out
bound
xlat
or
inc
push
out
loope
fsub
lods
das
pop
push
and
inc
pop
daa
mov
add
mov
pop
jnp
mov
sub
jns
arpl
fisttpl
out
or
pop
hlt
adc
repz
pop
sub
mov
in
cmpsb
rolb
xorl
faddl
mov
fwait
sbb
je
ljmp
daa
or
dec
adcl
adc
outsb
cwtl
mov
xchg
xchg
dec
aam
out
or
int3
fisubrs
lea
mov
xor
mov
scas
sbb
or
cmp
adc
cltd
lea
sub
inc
sub
adc
xchg
sbb
bound
and
push
dec
adc
shrb
xchg
out
jl
or
sbb
cltd
pop
das
imul
cmp
mov
xor
mov
lds
push
lods
pop
and
jg
test
adc
imul
outsl
movsl
xchg
lods
cmc
test
test
scas
ret
rclb
pop
mov
lcall
roll
push
pushf
pop
aaa
fwait
insl
aaa
stos
decb
push
pop
xlat
add
add
pop
ss
ds
fstpt
cmc
push
cwtl
and
inc
lcall
in
loop
pop
fdivrl
arpl
nop
lahf
sbb
xor
sbb
dec
mov
mov
clc
subl
xlat
add
and
cmp
shr
xor
mov
sbb
add
aad
mov
or
shr
adcb
scas
mov
mov
xchg
mov
popf
loopne
push
push
call
mov
push
jmp
js
pop
and
push
out
cmp
mov
gs
sub
mov
mov
xchg
adcb
sub
mov
stos
xor
or
push
adc
sub
add
cmp
insb
sbb
fcomps
fidivs
lahf
xor
loop
jmp
or
test
jmp
adc
sub
imul
fcomps
cld
rorl
rorl
and
sub
mov
jg
or
push
enter
dec
cmp
int
mov
pop
sub
jnp
outsl
scas
fiaddl
ljmp
loopne
xchg
in
sti
mov
pop
inc
mov
push
xchg
cmp
mov
push
push
test
lcall
enter
iret
mov
mov
in
jb
xchg
leave
jbe
mov
sarl
push
xchg
es
and
stc
lret
cmpb
adc
xchg
enter
mov
in
push
inc
sbb
mov
fiaddl
add
add
icebp
push
sub
js
dec
enter
xor
nop
mov
test
mov
test
fcomps
sbb
arpl
xchg
in
aad
shrb
rclb
xor
pushl
jecxz
dec
out
mov
repnz
jno
addr16
int
push
pusha
insb
xor
and
out
adc
cltd
daa
inc
and
pushf
pop
sbb
enter
sub
loop
push
push
insl
xchg
mov
sahf
dec
out
aaa
dec
cld
push
dec
mov
xchg
pop
jmp
ja
iret
lea
scas
push
sbb
inc
or
ljmp
mov
ret
pop
mov
sbb
into
aam
mov
fwait
xor
pop
or
xchg
movsl
lock
and
adc
push
or
dec
lea
ja
outsb
inc
lods
xchg
xchg
xor
ficoml
rcrb
scas
ror
call
pop
push
dec
mov
dec
gs
cli
pop
rcrl
jno
or
jg
mov
mov
loop
subb
push
add
movsb
iret
mov
in
jb
and
pop
lods
pop
jp
sub
mov
cwtl
add
addr16
cli
lret
inc
rol
cmp
cmp
mov
fisttpl
repnz
decl
clc
dec
cmc
pop
mov
ret
or
inc
mov
ret
adc
cmp
sbb
xchg
fdivl
cmc
adc
pop
jbe
push
ljmp
cmpsl
sub
orb
divb
cmp
bound
clc
out
lret
dec
das
ds
clc
cmp
xchg
or
pop
cmpsl
lret
sub
fs
fmuls
mov
repnz
pop
call
xor
fmulp
push
mov
cltd
sub
dec
das
jp
mov
xchg
ljmp
pop
out
ss
push
mov
mov
jno
scas
fsubrs
mov
sub
nop
dec
cmp
ret
addr16
xor
push
mov
dec
mov
insl
cwtl
mov
xchg
pushl
cli
faddp
je
outsl
add
mov
jp
addl
not
sub
test
fldcw
popf
cmp
or
xchg
pop
rcl
stc
out
and
mov
fldcw
push
xchg
vpsllw
add
cli
cmp
dec
lahf
je
in
adc
jb
stc
adc
push
das
jle
rol
pop
jmp
mov
mov
lret
xor
movsl
jae
pop
jle
mov
out
xchg
test
jbe
call
xchg
je
xchg
mov
adcb
pop
jecxz
aas
enter
ja
pop
fimuls
pop
lea
mov
loopne
xchg
imul
adc
push
xchg
hlt
and
mov
jg
lcall
pushf
or
inc
fucomip
or
or
sti
mov
sti
sbb
ds
pop
insl
jg
or
or
pop
push
pop
push
xor
sbbb
push
es
pop
mov
add
in
add
mov
sbb
dec
jne
out
popa
mov
in
add
xchg
push
mov
mov
call
ja
add
mov
sahf
cld
mov
jae
xor
dec
dec
int3
or
xchg
daa
jg
testb
das
ret
xor
fnsave
push
sub
mov
inc
sbb
cmp
cmp
movsl
inc
xchg
mov
lds
mov
cmp
xchg
xlat
mov
mov
out
testb
shlb
fistps
int3
cs
int
and
cmp
fistpl
and
or
jg
stc
popa
sbb
push
xchg
mov
xchg
aam
xchg
pop
nop
pop
stos
cmp
sbb
scas
jmp
inc
dec
lock
add
push
hlt
lock
jae
lock
sarb
add
outsb
fcomps
aaa
adc
jnp
push
pop
pop
je
mov
ret
add
popf
nop
pop
adc
cmp
cmp
lcall
jo
ja
dec
and
jnp
mov
xor
xor
loope
sbb
mov
mov
sahf
popa
loop
lret
push
imul
sbb
add
inc
jmp
fiadds
mov
pop
xor
lret
icebp
je
add
in
cmp
outsb
and
mov
inc
loopne
sbb
cmpsb
ja
icebp
cmp
adc
inc
int
out
dec
pop
jecxz
and
xor
repz
mov
sbb
dec
sti
pop
inc
mov
cmp
adc
orb
test
mov
iret
test
xor
repz
test
jmp
fmuls
adc
outsb
mov
adc
jp
int3
sbb
repnz
les
dec
fists
cmp
pop
lods
sub
lea
adc
mov
loopne
ds
iret
mov
mov
sbb
inc
push
sbb
mov
mov
push
xor
mov
inc
jbe
add
sbb
pop
mov
jmp
movsl
inc
repz
sarl
push
xor
jae
mov
pop
imul
or
data16
out
repz
out
xchg
movsb
in
sbb
popa
mov
fstps
mov
std
mov
jne
clc
cmp
repz
or
fwait
ret
sbb
inc
xchg
push
shl
addr16
cld
push
xchg
enter
mov
popa
adc
les
mov
cli
into
xor
dec
lea
negb
xlat
push
push
orl
dec
imul
jp
inc
pop
movsb
repnz
dec
ret
testb
pop
xor
and
insb
pop
jnp
dec
pop
lods
mov
jnp
xacquire
sbb
cmp
pop
out
push
push
adc
cmp
push
in
jecxz
test
push
in
cmc
xorl
and
and
mov
cltd
or
enter
dec
jbe
mov
fnstcw
je
mov
push
scas
xchg
sub
orb
jo
mov
or
add
jmp
call
push
mov
and
jne
into
jnp
mov
fwait
lcall
popa
test
cltd
xor
pop
js
movsl
fs
and
data16
xchg
xchg
mov
cmpsb
mov
test
movsb
cs
loope
por
mov
lret
mov
mov
out
xorl
xor
xchg
fdivp
jl
push
rorb
fildl
out
es
shlb
adc
aad
xchg
ja
push
in
or
outsb
les
mov
pop
cli
push
ret
sbb
int
xlat
xchg
pop
pusha
loop
xor
lahf
cmp
mov
jp
push
je
xchg
loop
pushl
jb
cld
rol
sbb
fucomip
xchg
repz
popa
aad
test
add
sbb
stos
add
pop
mov
enter
jb
aad
popa
xchg
or
push
jnp
mov
insb
mov
incl
mov
dec
push
out
ret
push
cmp
dec
push
fdivs
scas
sub
or
sbb
pop
inc
ret
test
cwtl
js
in
int
stos
shll
or
xor
iret
addr16
cltd
xchg
inc
fs
mov
fildl
aam
add
lds
xchg
dec
scas
lahf
inc
ror
popl
mov
test
mov
xor
adc
repnz
jb
iret
xchg
data16
sub
inc
repnz
cmpl
mov
dec
bound
jl
enter
adc
jbe
mov
dec
test
lock
movsl
sub
mov
pop
lea
sarb
mov
leave
mov
sbb
sbb
repnz
jmp
xchg
movsl
shll
imul
jmp
adc
sbb
loopne
mov
rcrb
imul
adc
mov
push
jns
jge
and
imul
fsts
and
xor
jo
out
aam
loop
fwait
notb
jmp
dec
cmc
jge
cmp
sbb
lea
adc
lret
pop
add
out
clc
divb
sbb
int3
lods
sub
cmp
mov
mov
sti
add
mov
mov
sbb
cmp
cmpsb
cld
rcll
sub
push
jnp
call
xchg
dec
andb
dec
cmp
insl
das
push
stos
add
jae
insl
xchg
aad
sbb
adc
fsub
adc
std
and
pop
repnz
ljmp
in
int
sub
sbb
sar
cltd
xchg
mov
xchg
dec
pop
mov
mov
dec
sti
pop
push
push
fcomi
loop
lret
mov
push
lock
pop
mov
or
sub
nop
aam
jmp
addr16
ja
movsb
insl
fwait
xor
into
iret
dec
call
cmp
xchg
lret
aam
sbb
out
cmp
addb
inc
rcrl
pop
lahf
movsb
and
leave
out
inc
xchg
adc
test
jecxz
ret
mov
loopne
mov
je
cmp
mov
dec
ret
adc
outsb
sbb
test
mov
stos
push
subl
add
sub
cmc
inc
test
cmp
xlat
inc
insl
popf
dec
inc
pop
mov
mov
push
mov
or
sti
cmc
cmpsb
stos
jl
mov
mov
inc
mov
dec
das
lret
mov
dec
call
xchg
jb
mov
loop
fdivl
mov
subl
pop
outsb
nopl
jae
xchg
dec
jno
bnd
push
shll
fnstcw
sbb
imulb
mov
push
cs
call
je
cmp
cmp
movsb
lea
outsl
inc
jle
in
xchg
lcall
stos
sub
out
cmpsl
sbb
sti
imul
sub
mov
jo
mov
adc
mov
dec
xchg
ds
imulb
or
or
push
add
aas
push
cmp
xchg
cltd
in
sub
inc
add
jl
add
inc
loop
and
push
jo
mov
cs
dec
inc
jbe
fidivs
mov
icebp
shl
xchg
les
mov
js
cmc
fcompl
mov
sarl
jb
sub
loope
fwait
addb
cmp
push
mov
cli
xchg
fsubr
push
or
xchg
push
mov
or
add
test
ja
fmul
inc
xchg
lods
inc
into
xchg
popa
adc
jp
stos
stos
cmp
pop
shl
mov
sub
movl
int
sahf
mov
imull
aam
fs
cmp
mov
push
test
mov
arpl
and
stos
and
stos
push
popf
pop
fcomps
xchg
test
imul
cmc
outsb
nop
and
add
test
or
cmpsl
enter
dec
dec
out
je
mov
pop
or
imul
fxch
sti
in
push
xchg
push
stos
cli
jecxz
enter
or
in
imul
jle
mov
cmp
jmp
inc
pop
jb
xchg
jmp
jmp
and
jp
sbb
leave
dec
repz
mov
out
lods
sub
jo
or
pop
ret
outsl
aam
pop
push
and
inc
popf
xchg
imul
daa
dec
lods
add
imul
es
loope,pt
fsts
lea
jbe
jns
cmp
mov
sub
pop
push
inc
cmpsl
fwait
adc
sar
jmp
arpl
xchg
dec
cmp
xor
xchg
xchg
mov
sbb
movsb
lods
pop
mov
subb
inc
mov
dec
fstps
int3
sbb
shll
adc
adc
loope
outsb
sub
fneni(8087
mov
sub
lods
lods
out
insb
rorb
add
xor
inc
adc
scas
add
push
out
xchg
out
mov
loop
sbb
jne
and
add
or
std
jbe
sbb
imul
fldl
adc
or
push
add
imul
sarb
xchg
push
cmc
jb
repnz
loopne
imul
push
ret
push
hlt
push
lcall
mov
xor
xor
mov
punpckhdq
outsl
dec
xor
mov
and
mov
push
call
xor
xor
sahf
fiaddl
inc
in
inc
lcall
adcl
jp
dec
lods
dec
ret
xor
hlt
inc
mov
mov
add
ret
xor
push
notb
test
cmpsb
fwait
arpl
jne
xchg
imul
sub
das
loope
lock
push
or
repnz
xchg
xor
movsl
mov
int3
pop
test
push
mov
sub
mov
fcomp
mov
clc
shr
mov
xlat
push
xor
shrb
add
adc
sub
cmp
xchg
mov
adc
mov
adc
adc
movsl
int3
lods
mov
sar
les
into
cld
nop
decb
jge
add
adc
cmp
sbb
mov
and
ret
mov
pop
out
inc
jo
das
adc
push
es
mov
mov
inc
fcoms
mov
ljmp
out
add
sti
inc
fsts
push
les
jecxz
push
inc
pop
pop
push
xchg
es
sub
pop
test
rcrl
add
jnp
dec
pop
cmp
lds
in
xchg
scas
push
hlt
sub
sub
into
aaa
and
mov
adcb
pop
dec
int3
movsb
movsb
adcb
inc
loop
push
es
inc
or
out
ret
movsb
clc
aas
xchg
mov
cmpsb
push
mov
out
sbb
mov
adc
repz
mov
sub
out
inc
hlt
sbb
insl
lock
notb
and
cltd
xor
fwait
jcxz
jp
sub
mov
loope
test
sbb
cmpsl
leave
sub
dec
lock
xchg
pusha
gs
pop
into
jg
jb
sub
and
push
scas
mov
outsb
sub
cmpsl
add
into
cwtl
or
adc
enter
jns
leave
mov
mov
push
xchg
push
jle
pushaw
rcr
repz
dec
jmp
cmp
sbb
int3
adc
aas
mov
cltd
arpl
aad
out
mov
dec
test
mov
dec
in
and
test
mov
arpl
cmp
inc
mov
test
xor
sub
push
jno
adc
ja
mov
inc
out
mov
mov
xchg
xor
fiadds
das
mov
lock
pop
pop
sub
push
leave
add
loop
push
mov
sub
and
stos
or
xchg
jno
enter
loop
mov
fs
xor
cltd
int
inc
add
jmp
loopne
aad
mov
adc
enter
jns
cmpsb
int3
dec
leave
cmpsb
xchg
and
pop
sbb
les
jecxz
lock
or
shl
jg
fwait
cwtl
in
push
lods
stos
test
pusha
mov
push
aad
pop
inc
push
adc
adc
int3
push
jmp
rcl
sbb
pop
movsb
outsl
or
jne
and
push
push
aaa
or
inc
das
mov
cmp
mov
jae
pushf
inc
cmp
imul
add
xchg
push
data16
lcall
in
or
push
xchg
aad
sbbl
subl
insl
fs
mov
ljmp
leave
xchg
pop
stc
aaa
push
test
pop
or
ret
push
push
xor
jle
xor
adc
ljmp
inc
gs
inc
mov
call
jb
push
sti
xor
movsb
mov
scas
dec
js
xor
popf
aas
cli
cmp
mov
jno
popf
sub
push
jmp
cli
sub
mov
cmp
sub
jbe
adc
das
mov
sub
aaa
das
add
and
pop
mov
roll
ror
and
lahf
std
xchg
mov
cmc
sbb
xchg
jae
adc
andl
xchg
lret
leave
mov
fists
sbb
movsb
lcall
xlat
out
pop
jo
mov
inc
aas
mov
xor
or
ja
fstp
enter
push
xchg
push
jecxz,pn
nop
mov
gs
faddl
xorb
xor
ds
cmp
jmp
sahf
shll
loope
addr16
fstp
mov
push
shrl
sbb
push
es
sarl
aad
cmp
jns
jecxz
imul
icebp
call
mov
jp
sbb
pop
mov
jg
lcall
add
sub
or
xor
imul
leave
mov
or
mov
or
mov
pop
setg
mov
cmpsb
ja
icebp
push
das
pop
jmp
push
out
mov
rcll
in
mov
lock
mov
mov
mov
test
xor
sbb
pop
outsl
sub
pop
ficomps
cmp
arpl
cli
mov
sub
xchg
in
adc
and
add
aad
hlt
ret
xchg
push
mull
xchg
sarl
pop
lahf
clc
sbb
xchg
lret
mov
mov
mov
inc
rol
adc
loope
cmp
push
pop
and
ss
sub
dec
popa
sub
cmp
aas
paddusw
test
jns
mov
xchg
inc
lcall
gs
push
pop
jmp
jb
test
rcrl
sbb
xor
jbe
lret
cli
push
enter
add
repnz
xchg
add
xchg
dec
popf
out
xlat
ljmp
repnz
sub
repnz
push
scas
pop
cwtl
sarb
push
lods
je
in
repnz
xor
call
fwait
pop
sub
test
ja
cmpsb
inc
push
add
pushf
fdivrl
loopne
mov
sub
or
jle
or
cmp
insl
push
sbb
repz
sub
lahf
ret
adc
cmp
shl
add
lret
sti
or
dec
imulb
pop
pop
insl
sbb
pusha
std
mov
xchg
mov
shll
jae
inc
stc
mov
nop
jno
movsb
testb
xchg
and
loope
adc
jle
cmp
lock
popaw
cli
cmp
mov
mov
mov
lods
cmp
mov
push
push
adcb
add
fisttpll
xor
adc
pop
lret
sahf
arpl
out
aas
mov
ret
adc
push
test
sbb
pop
rclb
aad
mov
jl
int3
pop
and
xchg
push
jnp
jmp
movsl
movsl
mov
push
push
push
or
aaa
push
push
dec
jmp
lcall
mov
nop
jmp
jg
lods
mov
inc
cmc
jnp
add
push
insb
add
movsl
cwtl
dec
mov
push
fsubs
insb
inc
dec
nop
jae
loopne
adc
iret
xor
ret
cmpsl
xchg
pop
stc
mov
cmp
and
jmp
in
mov
push
outsl
adc
test
les
loop
adc
mov
shlb
xor
dec
sub
rcrl
jle
and
sarb
mov
xchg
test
add
mov
insb
movsb
adc
pop
pop
inc
hlt
sbb
add
and
xchg
mov
mov
fmull
out
mov
lea
pop
pop
mov
sbb
push
negl
lahf
jg
dec
xlat
addr16
mov
xchg
les
sbb
xchg
cwtl
lahf
scas
rol
inc
pop
scas
mov
sub
cli
sub
je
pop
outsb
fimull
fildll
lret
rcrl
or
pop
fists
jbe
jnp
lods
repz
cmp
leave
mov
andb
pop
inc
jo
mov
lods
add
cltd
dec
adc
repz
jbe
adc
sub
inc
xchg
orl
imul
lods
imul
fistl
test
pop
je
add
and
sub
call
nop
adc
insl
pusha
lock
push
das
push
outsl
incl
sbb
sub
xchg
xchg
pop
pop
pop
sbb
enter
dec
aas
mov
adc
mov
daa
dec
movsb
push
shrl
and
pop
shll
iret
or
and
mov
pop
push
push
inc
mov
adcb
out
mov
or
scas
mov
xchg
pop
inc
mov
loope
sub
sbb
inc
mov
cmp
jnp
imull
jno
cs
lcall
fmull
push
inc
aam
les
jne
sbb
aam
inc
rcl
inc
jb
mov
jb
pop
pop
into
sub
popf
adc
push
fisubrs
push
xchg
xchg
dec
or
cmp
and
jne
sahf
rorl
sbb
dec
flds
xchg
fdivr
xchg
xor
add
shll
outsb
cmp
push
mov
cmp
inc
cmp
mov
imul
push
xchg
sub
hlt
fwait
or
shrb
scas
mov
lret
mov
in
xchg
adc
outsb
adc
xchg
mov
jle
pop
xlat
mov
xchg
addr16
sarb
into
repnz
outsl
loopne
movsl
test
sbb
movsl
mov
in
stc
pop
adc
rolb
iret
or
jbe
cltd
bound
leave
mov
data16
ret
and
pushf
test
faddp
jg
add
into
push
mov
shll
add
xchg
mov
stc
inc
sub
test
xor
inc
inc
pop
or
int3
nop
sub
dec
fnstsw
cmp
lds
out
out
xchg
xchg
xchg
push
pop
in
sbb
adc
sub
jo
dec
pop
pop
jae
cmp
xchg
aam
mov
call
ret
arpl
into
fcomip
and
xchg
sti
out
sbb
in
loope
dec
push
cs
or
add
daa
xchg
and
fnsave
scas
and
hlt
add
jns
in
inc
mov
add
cld
sub
pop
mov
dec
or
jnp
adc
mov
mov
mov
mov
pusha
je
data16
pop
jno
dec
std
sub
and
std
cmp
jl
cld
in
or
mov
out
push
cmp
push
cs
pop
sub
adc
fcmovbe
ret
cmp
and
push
mov
ds
cmc
data16
dec
sub
mov
mov
pop
mov
lock
fdivs
sahf
out
int
sbb
jl
stos
sbb
repnz
and
scas
clc
xchg
pop
pop
ret
pop
sbb
jg
xchg
and
scas
test
mov
dec
leave
mov
xor
call
stos
push
or
ret
sub
in
lcall
mov
add
jp
add
fwait
gs
daa
adc
stos
sbb
in
mov
es
dec
ljmp
rolb
xchg
into
pop
push
outsl
or
mov
xchg
int
int3
mov
in
jecxz
popf
mov
cmc
adc
inc
fstl
inc
xor
ss
fnstenv
and
ficoml
dec
cld
lds
jecxz
repz
add
sbb
scas
inc
pop
jo
pusha
nop
cmpl
mov
mov
mov
and
mov
add
std
fcomps
lret
sbb
iret
pop
movsb
push
ret
pop
or
test
lahf
xchg
dec
mov
push
jmp
lods
aaa
push
xor
jbe
sahf
cli
and
push
mov
neg
js
fdivl
xchg
mov
jle
adc
jns
sahf
lret
pop
es
movsl
pop
jmp
sub
xchg
mov
outsb
pop
inc
sub
ret
leave
push
loopne
xchg
inc
jno
mov
insb
and
jl
cmp
repnz
push
push
sub
jmp
inc
call
imul
xchg
dec
subb
mov
push
jmp
ss
shr
push
sub
cmc
jae
push
mov
xor
mov
stc
idivb
sbb
mov
mov
xchg
jae
push
sbb
jae
push
mov
mov
mov
fstps
fildl
loopne
xor
or
into
shlb
test
and
push
inc
shll
int
push
push
pop
jae
push
cs
cmpsb
jo
push
dec
les
inc
stos
mov
ljmp
frstor
gs
insl
out
gs
xchg
adcl
jmp
in
cmc
shrb
push
jae
ds
pop
add
push
xchg
jno
clc
mov
add
pop
sarb
int3
pop
pusha
lods
cmp
dec
jne
xor
fwait
cwtl
cmp
add
pusha
pop
xchg
xlat
lret
adc
fsubs
or
imul
int3
rorl
ret
ja
daa
lods
adcb
jmp
dec
mov
adc
inc
jmp
push
mov
sub
fiadds
test
out
je
test
imul
enter
gs
cmpsl
jl
inc
stos
out
outsb
cmp
mov
imul
daa
xor
jbe
and
dec
lods
orb
das
dec
mov
rclb
in
xchg
out
ss
adc
repnz
test
pop
cmpsl
pop
mov
inc
ret
in
addr16
lock
in
mov
xorl
lock
out
push
add
fcmovne
push
dec
add
add
ljmp
pop
push
rcrb
sub
or
aaa
adc
inc
fwait
push
es
and
daa
fisttpl
cld
add
inc
cmpsb
xorl
int3
push
mov
xchg
mov
andb
jp
je
mov
mov
add
sbb
jge
mov
int3
dec
enter
jp
xchg
sbb
xchg
mov
sub
jnp
xchg
push
test
add
sub
xor
add
adc
jo
divb
dec
jl
fcmovnbe
int
jne
push
cmp
movl
test
mov
mov
mov
iret
in
iret
and
out
lods
out
inc
pop
enter
or
pop
mov
dec
scas
clc
mov
jle
cld
mov
sbb
push
inc
stc
ja
dec
mov
lret
pop
stc
xchg
adcl
and
int
mov
stos
fldt
pop
mov
into
lods
xor
sub
iret
jnp
push
fld
mov
mov
fidivrs
xchg
shll
adc
jae
mov
push
ljmp
xchg
mov
pop
mov
xor
inc
mov
ja
in
inc
test
mov
xor
or
cmpsl
jge
xchg
cmpsb
stc
xchg
adc
push
out
pop
sbb
sti
inc
call
rol
xchg
cld
sub
mov
sbbl
jl
nop
je
cmp
jbe
push
mov
sbb
inc
addl
imul
cmp
xor
andl
outsb
ljmp
fstl
mov
fs
insb
movsl
scas
imul
xchg
and
sub
push
popf
mov
test
es
dec
aam
leave
mov
out
out
arpl
sarl
daa
mov
add
pop
xchg
pop
sub
mov
ret
movsl
push
aaa
sub
mov
sti
cs
mov
lret
pop
dec
fwait
cs
insl
mov
mov
out
cmp
ljmp
dec
push
mov
insb
jae
push
cmp
popf
mov
mov
movsb
push
sub
xchg
cmp
dec
and
fadds
gs
sub
call
xor
xchg
aad
pop
mov
insb
mov
xor
test
mov
mov
push
mov
rclb
add
cltd
xchg
sahf
mov
mov
in
xorb
daa
push
sub
mov
ds
rcrl
xor
sbb
adc
add
out
xchg
xchg
arpl
push
cmp
jg
rcrl
inc
jno
pop
das
scas
rclb
xorl
xor
push
lret
inc
and
adc
xlat
pop
adc
adc
push
inc
sub
jle
insb
mov
mov
push
movsl
std
addr16
stc
outsl
leave
orb
shll
mov
aas
pushf
push
out
nop
xor
or
jo
cli
repz
popf
xchg
cmp
sub
adc
pop
sahf
movsl
xchg
adc
popf
jp
push
push
dec
lcall
test
imul
fstp
pop
das
jp
orb
scas
sti
cmpps
in
or
lods
cmp
js
loopne
stos
sti
add
add
in
dec
stos
cmovbe
ss
cmp
cmp
and
xchg
jbe
mov
xchg
or
loop
inc
cmpl
fildll
or
cmpsb
jnp
xorl
addr16
adc
cwtl
push
lods
fcoms
sbb
mov
mov
xchg
shl
je
pop
lret
mov
lret
mov
sbb
bound
addl
dec
add
jle
stc
sbb
cmp
xor
dec
add
adc
iret
sub
clc
cmpsb
push
aaa
adc
xchg
stos
test
out
fstpt
cli
ret
push
lea
cli
inc
dec
sbb
mov
inc
add
mov
stc
fsubr
sbb
mov
nop
pushf
xchg
daa
pop
mov
cmp
stos
dec
or
ljmp
mov
mov
dec
pop
in
inc
jl
xor
mov
out
out
leave
insl
jle
out
int3
scas
pop
in
test
dec
int
dec
push
insl
push
movsb
cmpsl
sbbl
push
decb
sbb
push
int
pop
or
push
mov
movsl
pop
rcrb
rcrl
xor
and
nop
daa
lahf
pop
imul
adc
push
push
cwtl
mov
ffreep
fmuls
mov
sbb
fbld
push
imul
jmp
jle
push
pop
sub
push
dec
dec
mov
add
xchg
pushl
ficoml
pop
in
push
in
jg
dec
stos
insb
imull
pop
adc
jmp
xchg
xchg
hlt
or
push
dec
jg
pop
out
sbb
sbb
and
mov
mov
pop
notl
movsl
or
inc
pop
clc
dec
sub
mov
push
cmpsb
outsl
xchg
loope
inc
call
pop
pop
or
adc
or
aas
jnp,pt
push
in
arpl
stos
sbb
rcll
ficomps
lods
test
dec
mov
or
addl
mov
cld
movsb
rol
clc
jecxz
in
test
out
mov
test
inc
xor
addb
mov
mov
mov
addr16
fiaddl
inc
jnp
mov
sbb
lock
in
jl
sub
pop
pop
jge
cltd
icebp
pop
sysexit
add
jne
sarb
in
mov
sbbl
jg
bound
sti
loop
pop
add
adc
dec
or
xchg
push
jb
jle
test
je
pop
in
icebp
in
and
test
dec
dec
push
jmp
adc
xor
mov
mov
sub
data16
sbb
xlat
movsl
ja
adc
mov
mov
jmp
cmpsl
loope
imul
mov
out
sbb
movsb
ss
in
jecxz
jp
cmp
sub
hlt
insb
seto
mov
adc
repnz
lahf
mov
fiaddl
lret
aaa
dec
add
dec
fmull
les
mov
dec
sbb
sbb
hlt
ja
xor
push
faddl
push
mov
stos
mov
xor
jne
xchg
jge
lds
push
cmpsb
stc
dec
mov
adc
add
jmp
rolb
inc
mov
dec
add
sbb
jo
scas
out
dec
and
cmc
leave
icebp
subl
iret
jle
lret
cmp
cmpl
ljmp
movsl
adc
popf
push
enter
daa
ret
lea
ss
insb
and
imul
loope
sbbb
cmc
add
ja
scas
lret
fcompl
or
popa
push
jae
xor
decl
mov
push
adc
and
fwait
dec
mov
fisubs
or
jno
adc
rorb
push
loopne
push
div
jge
push
jo
out
push
icebp
pop
shrb
gs
shll
xor
inc
cmc
mov
inc
outsb
mov
mov
cwtl
dec
inc
inc
sbb
test
das
and
fs
in
push
cmp
and
add
dec
dec
xor
es
push
pop
in
mov
cmp
jno
sbbl
ljmp
mov
sbb
repz
rorb
iret
mov
std
loopne
xchg
lock
jmp
mov
clc
aad
xor
in
mov
fists
pop
xchg
incb
pop
or
insb
jl
cmpsl
ret
andb
data16
and
sti
jge
lods
mov
daa
push
mov
sbb
adc
mov
aad
adc
mov
mov
vunpcklps
jo
mov
hlt
xor
sub
sub
iret
pop
xchg
jp
pop
pop
cmp
cmp
cwtl
sbb
fmull
sub
pop
cmpsb
or
dec
movsl
rcll
or
gs
xchg
sub
push
outsl
inc
leave
shr
dec
mov
pop
fstl
daa
mov
cmp
jae
jl
xchg
mov
lcall
stos
push
arpl
jae
negl
push
push
popa
test
aaa
fistl
out
fwait
mov
xchg
push
idivl
pop
adc
cmp
imul
mov
xchg
jb
mov
mov
sub
pop
outsb
add
add
push
mov
adc
pop
sbb
pusha
mov
loope
repnz
pop
push
jbe
nop
std
cwtl
ret
mov
nop
fdivl
das
or
add
xorb
sub
sub
mov
icebp
pop
dec
xchg
pop
mov
cmpb
test
lret
push
add
cmp
jmp
sub
sub
enter
mov
jbe
loopne
inc
dec
loop
adc
xchg
xchg
rorl
or
push
icebp
repnz
lcall
inc
xchg
xlat
ficompl
inc
push
gs
movsl
fisttpl
int
jg
sub
inc
dec
mov
or
push
out
cmp
stos
popa
rcl
mov
mov
push
xchg
sbb
adc
inc
push
mov
scas
lahf
and
ror
sahf
ret
ror
repnz
pop
fistpll
jg
xchg
dec
ficomps
sub
mov
fisubrs
dec
dec
out
mov
pop
cmpsl
mov
mov
pop
cmp
imul
in
xor
fsubs
sbb
mov
stc
push
cmc
jecxz
enter
les
cmp
push
jns
loop
sub
lret
xor
push
mov
and
push
xchg
fisttps
push
in
mov
or
in
xchg
out
out
jp,pt
pushf
cmp
int3
shl
sbbl
sbb
mov
sub
xchg
scas
mov
mov
jns
stos
aam
or
je
stos
push
cmp
and
inc
add
mov
adc
aas
test
cltd
fwait
or
into
mov
dec
push
ja
mov
and
nop
mov
rorb
jmp
cmpsb
fdivs
imull
jmp
enter
insb
shll
push
lret
sbb
mov
jg,pn
outsl
fisubrl
cmp
idiv
xchg
inc
adc
insl
test
push
cmp
pop
xchg
and
mov
adc
mov
cli
mov
fstpl
sub
outsl
cmp
stos
fistps
pop
cmp
xchg
in
xor
cltd
pop
sub
mov
test
push
jne
imul
outsl
cmp
loope
nop
dec
fiaddl
mov
in
sub
movsl
mov
cwtl
inc
pop
xchg
scas
push
sbb
lock
sar
rorl
cld
push
enter
loop
mov
dec
iret
dec
sbb
icebp
xchg
pushf
jnp
mov
mov
mov
push
daa
imul
pop
das
mov
aas
sub
xor
mov
in
jle
mov
xor
aas
les
and
sti
adc
orb
rcll
cld
inc
rcrb
fnstsw
inc
fldl
into
add
loop
int
lds
repz
stc
add
xchg
test
and
xchg
rorl
pop
incl
or
jbe
je
dec
sbb
add
dec
repz
add
loop
push
mov
ja
rolb
pop
rcl
cltd
popa
adc
xchg
jl
push
cwtl
daa
jne
mov
data16
mov
pop
movsl
insb
mov
insl
int
sub
sbb
stos
mov
cli
xor
out
mov
push
popa
xor
lcall
push
xor
cmp
es
out
leave
push
mov
mov
sbb
mov
cmp
daa
sbb
jl
fiadds
into
or
mov
add
cmp
data16
pop
pop
in
aam
aam
or
std
inc
mov
cmc
dec
int3
int
in
and
aad
inc
je
mov
loop
xor
xor
rorb
pop
inc
stc
test
outsl
mov
sbb
mov
sub
add
jle
sbb
lahf
or
sbb
lods
call
adc
cmp
pop
lods
inc
roll
ror
mov
icebp
andb
mov
mov
repnz
xlat
lods
push
mov
lret
aam
sbbl
fisubl
pop
lods
jo
xchg
lods
xchg
push
add
repz
mov
mov
scas
push
fwait
jno
loop
push
mov
adc
fnstsw
mov
stos
enter
aad
cmpsl
ret
ds
jecxz
pushf
dec
popf
xchg
cwtl
mov
mov
aaa
adc
lds
pop
add
dec
mov
pushf
es
pop
fidivs
lret
repz
inc
aam
adcl
aad
xchg
jg
push
jmp
ss
adc
sbb
ret
rcrb
xlat
clc
iret
xor
jbe
and
adc
adc
cmpsb
add
and
mov
ret
mov
sti
aas
mov
out
int
push
fwait
sbb
fs
repnz
cs
jg
push
push
adc
aad
xchg
jo
add
sahf
mov
add
push
leave
test
clc
stos
adc
pushf
leave
in
push
lods
adc
mov
rcrl
cwtl
xor
scas
ret
xchg
js
inc
sub
icebp
push
orb
addr16
sahf
clc
fcomp
in
and
js
jo
icebp
lea
add
cmpsl
sub
ret
out
lret
ds
jmp
dec
mov
pop
inc
stc
mov
cmp
lcall
or
sub
ja
hlt
enter
test
xchg
xchg
scas
sbb
mov
cmp
mov
jmp
out
jmp
fmulp
xchg
movsb
loope
cmp
or
sbb
in
or
sahf
add
js
shll
push
ret
dec
xchg
out
sub
push
loopne
fcoml
pop
loopne
or
xor
fsub
mov
fdivl
stos
bound
ss
inc
xchg
test
xchg
outsb
push
cmc
jbe
popf
mov
ret
pop
mov
stc
push
xchg
aaa
sub
jmp
adc
mov
filds
or
mov
lea
mov
inc
rcll
or
jb
rorl
xlat
jns
mov
cmpsl
jge
push
mov
mov
sub
inc
mov
ljmp
or
ret
inc
ret
jne
or
les
xchg
or
inc
jae
fs
in
sbb
pop
popf
mov
or
andb
ret
nop
push
cmp
or
mov
pop
dec
mov
dec
sbb
popa
jmp
cmp
icebp
xor
xorb
orb
fs
cli
mov
fnstcw
pop
andb
lahf
inc
mov
scas
movsl
call
push
adc
clc
insl
and
inc
xor
dec
push
jbe
cmpsb
and
add
xorb
jnp
lret
cs
cmp
pop
lods
pop
inc
sbb
sub
inc
je
imul
int3
out
jbe
add
pop
loopne
clc
mov
xchg
fcmovu
lods
mov
mov
das
sub
mov
add
and
scas
fdivrl
out
inc
fidivs
push
or
popa
lret
fsts
mov
fstps
out
lret
dec
aad
test
shlb
in
iret
jns
lret
repz
mov
test
cmp
push
mov
testl
cli
stos
cmp
repnz
pop
sbb
add
test
jnp
rcll
jno
inc
mov
add
cmp
test
push
pop
and
push
xchg
mov
mov
cwtl
mov
and
xlat
adc
jmp
push
xor
jo
jb
lea
push
push
mov
test
inc
je
sti
cmp
repnz
stos
aad
insb
ficoms
mov
sbb
mov
out
imul
lahf
pop
scas
js
xor
sub
or
repnz
xlat
mov
sub
lock
into
out
or
xchg
into
xchg
movsl
mov
cli
loope
das
xlat
outsl
icebp
shrl
jmp
cld
lods
cmc
icebp
cs
inc
mov
daa
mov
addr16
mov
push
js
dec
leave
pop
divb
xor
mov
movsl
inc
adc
xchg
sbb
add
mov
leave
and
push
adc
sub
jmp
dec
sub
fisttps
daa
xchg
mov
and
mov
outsl
sub
add
stc
or
insb
lds
lret
leave
inc
adc
pop
jp
sbb
jmp
rcl
in
sarb
or
lret
pop
cmp
mov
jne
dec
xor
sbb
sahf
xchg
rolb
xor
mov
dec
xchg
pusha
xor
xchg
xchg
cmp
or
outsl
pop
outsb
leave
pop
jbe
mov
jo
pop
mov
mov
jecxz
roll
and
sub
cmp
dec
mov
scas
mov
arpl
and
inc
xchg
push
inc
cmp
in
jnp
sub
movb
pop
stos
aam
in
loopne
mov
fnstcw
fistpll
fidivl
daa
cmp
sbb
adc
in
mov
sbb
xor
pop
cmp
dec
stc
aas
pop
sub
pop
inc
xchg
mov
mov
shl
inc
sub
in
mov
add
or
lret
pop
in
dec
add
ss
divl
aaa
push
sbb
xchg
jmp
popl
sbb
lods
adc
jno
adc
jbe
jne
imul
test
pandn
sbb
repz
rcrb
fs
sti
loop
add
fldl
jp
pop
and
out
pop
mov
cmp
adc
push
mov
repz
push
mov
lahf
mov
movsl
stos
add
add
nop
lahf
pushl
pop
insl
call
add
and
xchg
fnstsw
aad
inc
test
push
push
fsubrl
or
cmp
in
das
sbb
std
mov
push
lea
les
out
sub
push
pop
mov
jbe
mov
or
stos
mov
jmp
nop
jae
std
das
arpl
xchg
jg
dec
jmp
xchg
sbb
sub
mov
adc
and
movsb
subb
or
mov
pop
jae
adc
insb
test
push
push
idivl
dec
cld
pop
adc
test
in
and
jl
dec
and
fisttpll
or
mov
xchg
pop
dec
sarl
mov
gs
scas
in
ror
jns
imul
outsl
cmp
int
out
mov
mov
clc
lret
sbb
cwtl
xchg
call
outsl
xor
enter
in
dec
mov
dec
xlat
lds
push
leave
loop
ds
rcrl
xchg
mov
mov
pop
push
inc
icebp
add
inc
shll
dec
push
mov
rolb
icebp
sarl
adc
jnp
jge
jb
push
mov
in
addr16
push
sub
iret
mov
mov
lret
in
adc
inc
cmc
adc
inc
sub
push
mov
int3
pop
mov
int
test
testb
gs
sahf
mov
imul
mov
fisttpl
rclb
adc
dec
mov
mov
xchg
pop
push
mov
ss
std
xchg
pushf
xor
int
sbb
push
jo
popa
pop
repnz
cmpsb
mov
push
and
pop
scas
cmp
cmp
jnp
out
dec
aam
loop
les
and
int3
mov
xor
fcomp
push
push
adcl
xchg
sar
out
adc
cmpsl
sbb
and
sbb
icebp
lret
cli
push
loop
or
cmp
je
mov
jge
dec
or
jns
pop
mov
icebp
add
aad
lahf
pop
sbb
adc
dec
inc
cmp
orl
adc
push
popa
jmp
loopne
pusha
sbb
jbe
enter
shrl
in
pusha
push
pop
rcll
call
idivb
pusha
lret
or
adc
xchg
inc
cli
mov
add
push
xor
inc
and
push
shr
xchg
push
das
out
cs
mov
subl
nop
cmp
dec
pop
mov
iret
sub
or
repnz
push
clc
in
or
push
pusha
scas
jns
idivb
rcr
jnp
jle
loopne
mov
add
mov
into
pop
and
cmp
mov
popa
sbb
negb
xor
mov
and
and
aaa
lds
adc
popf
mov
test
pop
jle
nop
mov
test
in
outsb
add
xchg
nop
jns
hlt
cmp
adc
fs
lea
js
std
sub
pop
jbe
jne
lods
and
push
shll
xor
push
gs
insl
inc
push
jecxz
insl
and
mov
jb
in
jecxz
lret
mov
out
and
cmp
into
push
shr
push
inc
dec
mov
lcall
and
push
mov
xchg
mov
mov
imul
sbb
push
xchg
or
mov
adc
fldenv
inc
rcr
addl
decb
push
mov
jo
mov
fsubrp
divb
int3
adc
faddl
or
mov
test
mov
mov
clc
inc
push
dec
mov
movsb
clc
and
inc
pop
xchg
jp
xchg
push
or
test
pushl
push
xor
push
pop
add
or
and
imul
add
pop
ljmp
aad
mov
inc
jno
jl
xchg
xor
inc
pop
pushf
mov
cmp
scas
pop
jmp
sbb
or
pop
sbb
mov
in
xlat
aaa
xor
dec
sub
jmp
xchg
cmpsl
int3
adc
rclb
shlb
pop
dec
int3
push
cmpl
jp
out
dec
and
mov
sbb
adc
outsl
icebp
jbe
xor
js
dec
mov
jbe
jp
aaa
jg
jp
xor
pop
aaa
arpl
inc
shll
mov
pop
in
ja
scas
arpl
ficomps
bound
aas
into
fistps
out
xchg
outsl
repnz
movsl
iret
sbbb
insb
fidivs
push
xchg
fnstcw
nop
jae
adc
bound
xlat
movsb
xor
ret
shl
in
xor
pop
pop
pop
adc
jl
leave
in
adc
cmc
rorl
jb
add
mov
mov
sbb
jmp
sub
xchg
xor
dec
nop
xor
popa
vsubps
sti
stc
bound
push
adc
insb
inc
xchg
pop
test
insb
hlt
fs
add
pop
out
inc
xor
mov
jl
inc
jl
leave
call
test
sub
sbb
negb
iret
mov
adc
ja
decb
cmpxchg
mov
insl
movsb
sub
cmp
xchg
lods
dec
xchg
iret
loope
inc
and
mov
shll
mov
lret
inc
lret
negb
pop
jnp
pop
mov
test
pusha
js
inc
pushf
out
cmp
dec
ficoml
insb
insl
xor
add
push
xchg
adc
gs
mov
jp
mov
aaa
add
add
lret
lcall
clc
pop
stc
pop
push
rolb
jbe
pop
out
sub
in
rorl
movsb
pop
test
mov
xor
push
sahf
mov
dec
and
xchg
icebp
ror
jns
pop
or
dec
jnp
ds
jp
push
sbb
sbb
inc
nop
mov
push
and
cltd
aaa
movsb
jle
outsb
jle
sahf
lea
mov
mov
and
out
xchg
mov
pop
xchg
shrl
lahf
inc
push
out
mov
clc
sbb
ja
pop
shl
xchg
push
lret
sbb
pop
mov
je
push
shr
sbb
mov
push
pusha
push
mov
insb
scas
sti
aas
lock
mov
xchg
push
mov
imul
xor
fcomip
mov
xchg
aas
enter
aad
in
in
jb
ret
jmp
push
fwait
push
push
add
or
fcoms
enter
pop
dec
gs
shl
dec
fildll
lods
ss
outsl
dec
cmp
mov
dec
lret
dec
xor
aad
pusha
mov
xor
sub
jns
xchg
inc
repnz
iret
add
mov
shl
shl
push
add
adc
cmc
movsb
and
adc
ss
sub
mov
adc
pop
add
pushf
mov
push
repnz
lahf
into
and
mov
mov
add
icebp
pushf
clc
xchg
int3
push
or
xchg
and
es
js
sub
outsl
mov
ds
pop
add
into
out
cld
scas
js
mov
xchg
stos
pop
dec
scas
mov
add
test
filds
enter
add
inc
inc
xchg
cmc
or
int3
ret
mov
adc
xchg
xlat
inc
cmp
cmp
xchg
gs
imul
das
int3
insb
or
loopne
cwtl
sbb
mov
hlt
cmpsb
lock
ja
addr16
leave
inc
push
ret
repz
arpl
mulb
stos
inc
ret
lock
xor
pop
arpl
xchg
mov
sub
lcall
or
mov
adc
and
mov
sbb
xchg
mov
scas
repz
scas
add
inc
xchg
test
lock
cmp
sbb
xchg
daa
lret
dec
jns
jge
dec
jbe
daa
inc
daa
imul
lcall
popf
and
sahf
adc
dec
xor
push
xor
ja
mov
addl
cmpsb
lods
inc
mov
popa
loope
adcl
cwtl
jns
xchg
mov
cmp
inc
not
or
add
in
inc
dec
aas
daa
xor
push
jmp
test
and
jne
push
push
mov
adc
push
push
popa
fisttps
js
adc
mov
lcall
into
mov
cmc
xor
sti
vphadduwq
es
push
loop
inc
mov
inc
shrb
adc
test
mov
mov
jl
scas
lds
mov
rolb
lcall
xchg
push
dec
sub
fxch
mov
adc
push
das
aad
insl
jmp
push
rolb
daa
sub
sub
and
lds
out
popa
cmpsb
in
sahf
mov
idivl
cs
xlat
stos
shrb
jp
sub
addr16
sahf
xchg
lock
adc
cli
ret
xor
rclb
sub
or
ljmp
inc
imul
mov
jg
rcrb
push
ljmp
and
dec
push
adcl
fsubrl
int3
fisubs
cli
pop
cmpsl
adc
pop
push
cltd
lret
fstps
and
rolw
pop
xchg
mov
fs
jg
in
pop
pop
pop
mov
inc
loope
cld
push
mov
fidivs
shl
dec
es
cmp
adc
jno
and
int
mov
icebp
inc
jl
cmp
fmull
fistl
cmp
xchg
pop
lock
es
xchg
pop
cmpsb
pop
or
mov
lret
adc
sub
push
stos
xchg
jp
jae
repz
jno
pop
insl
leave
xchg
test
js
adc
jg
mov
jg
fildl
aad
sbb
inc
jmp
stos
mov
adc
insl
push
scas
cld
rolb
scas
shrl
idivl
adc
mov
in
punpckhdq
inc
ja
das
hlt
js
movl
lock
cmpsb
adc
repnz
xchg
hlt
adc
xor
adc
inc
popa
mov
push
pop
popf
icebp
dec
dec
scas
loop
or
or
xchg
pusha
push
in
dec
neg
pushf
mulb
sbb
js
shrb
or
push
mov
mov
sbb
test
xor
nop
std
movsb
cwtl
ret
xor
adc
push
in
je
ds
inc
ret
sbb
movsl
clc
aam
std
xchg
adc
imull
pop
mov
leave
push
shll
jo
and
or
mov
xchg
xchg
xchg
lea
data16
pop
shl
mov
xchg
pop
xor
fdivr
aas
sbbl
mov
faddp
iret
xchg
cltd
push
xor
aaa
push
fidivrl
inc
pop
into
cltd
popa
cmpl
cltd
std
pop
jnp
movsl
mov
into
divl
sub
dec
scas
mov
imul
imull
outsl
cmp
arpl
sti
les
xchg
pop
pop
mov
lcall
mov
popf
fs
sbb
cmp
into
push
or
mov
sbb
adc
mov
fs
cmp
sbb
inc
imull
jp
sbb
pop
mov
add
popf
lock
add
stos
fcoms
std
xchg
scas
or
test
add
rorl
mov
mov
mov
mov
into
fdivs
or
test
ret
sub
cwtl
in
sub
pop
mov
cmp
dec
pop
xor
bound
in
xchg
ret
fs
shrl
or
or
mov
push
inc
sahf
nop
shl
add
jecxz
mov
repz
outsb
jl
and
jne
iret
mov
outsl
mov
mov
dec
pop
out
jp
mov
sbb
loope
int3
test
xor
mov
and
add
push
sub
push
ja
fstpl
outsl
mov
cmp
frstor
push
mov
sahf
int3
add
frstpm(287
dec
daa
loop
mov
loopne
sub
push
add
enter
repnz
sub
fcoml
add
mov
mov
sarl
mov
stos
imul
sub
cmp
ljmp
lcall
xchg
pop
pop
cwtl
es
popf
fisttpl
sbb
push
jb
xchg
lea
int3
add
inc
test
movsb
out
or
aaa
fmull
int3
jl
out
add
test
xor
push
mov
outsl
adc
add
fistpl
icebp
or
mov
sarb
lods
ret
mov
and
cmpsl
jle
in
mov
jns
nop
jle
ss
add
adc
mov
insb
mov
inc
adc
mov
and
push
test
sub
dec
into
jg
mov
sarl
insl
mov
sub
gs
test
ljmp
mov
mov
sbb
cmp
xchg
inc
out
push
mov
mov
movsb
jmp
inc
mov
adc
fidivrl
add
lret
xorb
push
mov
adc
dec
les
sub
pushl
fistpll
imul
fdivrl
cmpsl
inc
jb
sub
jnp
fcmovnu
lahf
lret
dec
jne
mov
lret
xchg
xor
push
fistpll
jbe
sbb
inc
repnz
subl
add
push
dec
add
lock
int3
inc
jmp
or
push
push
jecxz
adc
negb
jnp
test
fstps
sahf
mov
and
or
mov
inc
adc
push
jmp
scas
push
sub
cld
adcb
lods
clc
dec
ss
leave
hlt
ret
subl
xchg
lcall
sbb
push
cmp
inc
cwtl
push
cmp
test
pop
pop
in
mov
dec
imul
jp
test
enter
mov
repnz
mov
mov
pop
mov
les
std
loope
bnd
inc
lock
shrb
cs
dec
std
call
imulb
test
andb
int
lods
les
out
push
aad
add
cmp
je
pop
icebp
dec
rclb
mov
sarb
xor
sub
leave
fs
in
jmp
leave
pop
daa
shrb
xchg
push
shl
notb
stc
jg
in
jb
notl
out
jl
popa
enter
mov
or
pop
test
push
loop
cli
mov
movsl
push
cli
shrb
sbb
push
hlt
push
xchg
cmp
outsb
mov
adc
nop
shl
in
ds
or
xchg
sub
bound
sbb
ds
pop
ss
popf
std
fcoml
and
and
inc
lods
into
icebp
test
arpl
mov
and
orl
sub
cmp
push
mov
das
push
mov
das
dec
std
adcb
sbb
inc
push
repz
jb
and
push
adc
mov
mov
call
rorb
xor
xor
lock
push
movsb
cmp
pop
or
cmp
mov
jae
pop
rolb
les
outsl
push
xchg
test
mov
gs
pop
pop
push
cmp
ret
push
daa
dec
mov
imul
ret
and
pop
outsb
pop
cltd
jp
sar
pop
arpl
xchg
inc
cwtl
mov
inc
cmpl
or
leave
pop
mov
pop
in
and
jge
nop
push
lods
inc
mov
mov
or
cmp
cwtl
mov
cmpsb
mov
xchg
dec
cmp
sarb
mov
adc
mov
pushf
addb
mov
mov
xchg
movsb
pop
mov
movsb
addr16
xchg
repz
push
and
push
out
fsubrp
push
aas
jle
and
pusha
test
fdivs
arpl
fs
mov
inc
mov
push
jno
les
je
jnp
mov
push
or
insl
pop
lods
test
push
in
push
jnp
jo
in
dec
addr16
jle
and
mov
and
push
fisubl
push
sbb
sahf
inc
fs
or
jbe
ret
sbb
jae
ljmp
and
scas
loop
push
jne
adc
ret
das
xor
pop
sbb
lret
leave
xchg
dec
mov
mov
and
loope
pusha
outsb
mov
dec
push
xor
lods
jecxz
or
pop
sbb
loopne
pop
xchg
sub
test
adc
lret
aas
cmp
bound
xchg
sub
test
mov
ljmp
dec
mov
outsb
or
lea
mov
push
jne
sbb
in
xor
or
sub
jnp
stos
lret
out
pop
jp
test
mov
lea
icebp
inc
gs
cmp
call
jmp
dec
mov
xchg
shlb
scas
in
push
pop
mov
das
push
into
cwtl
popf
cld
jge
leave
xor
jns
sar
mov
leave
lods
mov
dec
lock
out
mov
xor
movsl
inc
xor
in
mov
jecxz
test
jb
out
jo
lods
pop
data16
jb
jns
fnstcw
mov
sub
mov
fnstenv
loope
addb
out
pop
dec
test
test
push
ljmp
dec
sub
mov
pop
adc
cmp
push
cmp
or
stos
and
and
cmpsb
sub
cmc
xor
push
fimull
in
adc
xchg
in
mov
sar
add
xor
xlat
jnp
subl
clc
ds
orl
movsl
jmp
rolb
mov
cwtl
rcll
or
arpl
shl
mov
fisttps
dec
out
repz
cltd
xchg
adc
push
jnp
inc
or
leave
xor
mov
mov
scas
pop
repz
jecxz
mov
pop
or
mov
ret
push
pop
sbbl
mov
inc
lahf
icebp
dec
aaa
cltd
xor
mov
call
fsubrs
fsubrl
xor
sbb
xor
aad
movsl
xorb
int3
add
rclb
addr16
cltd
mov
jl
jae
iret
lret
xchg
lods
sub
xchg
out
push
das
addb
ds
mov
out
xor
push
dec
xor
add
mov
push
pop
fwait
das
mov
stc
addr16
repz
xchg
popa
call
fnstenv
push
lcall
and
mov
and
mov
mov
mov
push
aad
and
xchg
shlb
xchg
or
mov
push
adc
repz
imul
xor
test
mov
or
xchg
mov
adc
jp
jmp
mov
push
pop
xor
jae
stos
sahf
idiv
xor
adc
ds
inc
mov
jl
mov
jl
repnz
in
xchg
mov
dec
repz
lock
adc
repz
add
adcl
jmp
orl
addr16
xor
and
lret
and
inc
or
dec
pop
adc
idivb
stos
cltd
mov
adc
hlt
enter
scas
push
inc
push
xor
ljmp
out
mov
idivl
mov
dec
in
sbb
sahf
ljmp
dec
inc
mov
mov
mov
xchg
pop
push
leave
dec
xor
mov
imul
lea
push
push
cmp
les
rcll
aam
loope
out
cmc
pop
leave
adc
aaa
push
repz
pop
clc
fiaddl
popf
cmp
out
sbb
dec
pushl
pop
shlb
mov
and
sahf
add
mov
sbbb
lods
call
cmc
stos
lcall
in
icebp
jg
xor
mov
push
test
into
and
gs
daa
incb
aas
sub
jnp
dec
aam
popf
push
mov
sbbl
sbb
in
cli
mov
dec
pop
push
sub
push
mov
push
in
lock
out
jno
mov
das
sbb
jne
xor
pop
negb
pop
int3
xchg
mov
loope
lock
mov
cmp
and
mov
pop
add
movsl
out
add
sbb
adc
in
je
je
lret
dec
xchg
cmp
fcmove
xor
mov
push
pop
stos
shl
sbb
lock
ljmp
ljmp
jnp
push
aam
gs
jnp
dec
pop
jne
insb
mov
dec
icebp
adc
pop
lock
es
mov
jg
mov
outsb
outsl
sub
mov
add
jbe
mov
or
pop
cltd
das
lret
fwait
cmp
test
inc
mov
aas
push
pextrw
popa
lock
push
jmp
ret
in
push
test
cmc
mov
or
push
mov
xchg
adc
sub
sub
sub
jbe
pop
sbb
jb
stos
pop
ret
cmp
cli
jecxz
mov
or
xchg
test
cs
stc
scas
pop
daa
or
in
jg
iret
ss
gs
or
dec
and
repnz
xchg
stos
ret
lahf
lahf
dec
push
dec
mov
push
stos
js
es
notb
xlat
les
call
aas
adc
rorb
int
push
mov
cmp
sbb
bnd
inc
outsl
jno
shll
fisttps
sub
lods
data16
fimull
push
mov
popa
and
inc
imul
push
mov
jecxz
out
adc
lds
or
call
ds
dec
mov
push
jg
dec
ljmp
ss
adcl
push
dec
mov
in
push
mov
xchg
clc
dec
inc
inc
das
mov
push
mov
fldenv
stos
mov
xor
leave
adc
jecxz
jbe
imull
lret
inc
testb
pop
xchg
in
sub
jge
outsl
pushf
jbe
lods
jle
jecxz
ret
cmpsb
push
sub
mov
add
and
aaa
and
jl
int3
xor
sbb
outsb
xor
lret
mov
push
and
xchg
jo
mov
pop
jns
pop
scas
add
sbb
pop
jo
mov
loope
add
mov
clc
or
js
xchg
fsubp
les
adc
jecxz
imul
dec
in
hlt
mov
adc
clc
add
bound
out
sub
rcrl
mov
add
xchg
data16
das
sub
push
out
loope
les
dec
js
sub
push
out
clc
repz
push
dec
lea
popa
orb
sarb
into
push
out
aam
sahf
fs
xchg
lahf
ds
push
aas
xor
pop
lock
and
push
gs
sub
xor
stos
mov
push
push
push
arpl
aad
lret
rolb
rcl
sub
add
dec
sbb
out
xor
add
dec
adc
js
or
pop
shl
insl
test
out
das
pop
js
es
cs
and
cmpsl
dec
fsubr
add
push
mov
sti
cmpsl
mov
jns
test
test
push
mov
pop
add
push
or
pushaw
inc
mov
rcrl
inc
cmp
or
es
enter
push
cmpb
stos
mov
xor
xchg
fs
adc
bnd
or
cmp
push
inc
or
test
jle
and
loope
cltd
xor
mov
lock
test
add
out
popf
scas
adc
cmc
test
dec
xchg
dec
push
cmpsl
xor
inc
hlt
mov
adc
insb
xchg
popf
inc
add
mov
fwait
or
aas
je,pt
pusha
cmp
mov
in
add
sub
pop
frstor
lods
ss
dec
or
rcr
lea
stos
sub
adc
popf
in
jb
and
sbb
out
cmp
xchg
outsb
out
pop
jb
shrl
insl
jecxz
xchg
cmpsb
xchg
test
shlb
and
stos
cmp
or
sub
mov
insb
movsb
xorb
pop
leave
das
iret
test
jecxz
in
adc
mov
and
daa
mov
xchg
push
out
shll
cmp
stos
in
cmp
test
xchg
or
xor
clc
adc
daa
divb
sbb
fs
lahf
in
loop
pushf
pop
ret
push
stos
pop
pop
icebp
imul
ret
testl
cltd
pop
out
int3
cmp
xchg
stos
dec
hlt
fstpl
adc
cmp
and
outsl
sbb
adc
mov
sbb
xchg
fsubs
mov
sub
fsubrs
rclb
inc
popf
xchg
icebp
in
ljmp
push
inc
pop
mov
lock
xchg
pop
into
xor
iret
inc
push
adc
rcl
cs
repz
imul
inc
scas
nop
ror
cltd
inc
push
das
lods
sbb
mov
ja
das
inc
xor
out
add
mov
in
add
sti
rorl
mov
inc
xor
xchg
inc
pop
sub
xor
pop
cmc
jmp
aad
imul
jnp
cmpb
jp
out
mov
jp
call
imul
lds
dec
mov
pop
orb
fistl
mov
dec
sbb
out
cs
add
jge
in
rcrl
xor
movsl
sub
pop
aas
call
insb
or
xchg
sbb
inc
pop
icebp
mov
call
jbe
cwtl
mov
adc
add
xchg
in
movsb
cld
insl
out
pop
repnz
pop
add
repz
addb
xor
dec
cmp
xor
xchg
insb
fwait
push
js
mov
dec
dec
mov
add
jmp
mov
xlat
or
and
iret
mov
sub
or
mov
push
and
test
into
xchg
test
cmc
and
stos
hlt
pop
insl
mov
push
mov
sbb
mov
cmp
test
mov
jbe
les
xchg
fsubrs
inc
xchg
mov
rcll
jns
stos
cmpsl
jo
enter
sub
xorb
sbb
push
fsubs
inc
add
jmp
std
jns
enter
mov
or
inc
lret
sub
push
mov
mov
mov
mov
adc
xchg
imul
lods
pop
aam
fcomp
xor
dec
aaa
jge
push
pop
rcl
ljmp
fldenv
xorb
jno
add
lds
inc
rorb
push
inc
insb
roll
fwait
gs
dec
mov
mov
icebp
je
pop
mov
sar
into
std
imul
jg
jno
adc
xor
sub
ljmp
inc
adc
xor
hlt
shll
xchg
add
mov
mov
push
mov
dec
inc
xor
mov
add
sub
sbbb
xchg
push
push
jne
sbb
int
mov
cs
ss
jge
mov
jp
test
mov
cmp
pop
out
sahf
call
lahf
popa
or
xchg
push
mov
pop
push
dec
cs
cmp
test
jae
cmpb
popf
sub
int3
jo
idiv
add
jns
addl
cwtl
arpl
sti
dec
call
bound
frstor
xchg
iret
cmpsb
sbb
out
sub
pop
outsl
add
jne
or
sub
rcrb
dec
invd
aam
divl
dec
mov
cmc
test
or
add
pop
jae
push
into
insb
popf
sub
lret
mov
scas
push
lods
int
inc
movb
js
dec
testl
push
jle
das
out
cmc
mov
arpl
sbb
xor
dec
lahf
or
and
add
or
mov
and
loop
sbb
add
scas
cmpsl
dec
int
stos
pop
pushf
lcall
gs
ret
lea
sub
sar
mov
iret
or
push
leave
inc
sbb
dec
out
loope
lcall
sub
in
mov
sbb
add
lret
dec
xchg
cmp
imull
int
test
dec
mov
ret
cmp
fwait
movb
fsubrl
fs
inc
sbb
sub
xlat
out
pop
push
pop
jg
int3
and
iret
pop
sub
jge
imul
mov
lahf
sahf
clc
fisttps
fildl
mov
push
outsb
mov
cmp
ja
scas
mov
adc
lret
data16
mov
xchg
jg
mov
cmpsl
or
mov
add
cmc
mov
cmp
mov
daa
mov
sahf
call
mov
xchg
push
mov
scas
push
bound
or
mov
int
lds
push
add
jne
pop
mov
xchg
iret
xchg
test
lock
mov
outsb
test
enterw
add
adc
mov
jl
pop
xchg
xor
scas
inc
in
cmpsb
mov
loope
lods
das
or
rcll
ljmp
dec
fdiv
outsb
dec
fsts
add
arpl
adc
enter
adc
ja
lret
clc
pop
rol
xlat
jmp
mov
mov
mov
sub
dec
push
fs
push
or
js,pn
hlt
outsb
push
inc
xchg
add
cmp
cmp
les
push
lea
call
add
mov
adc
sbb
imul
cli
adc
pop
jecxz
call
push
ljmp
movsl
test
xchg
fdivr
sbb
push
push
adc
fistl
mov
div
mov
add
stc
fwait
mov
push
fisubl
inc
mul
add
scas
es
adc
icebp
cmp
inc
push
sbb
cmpsl
mov
int
xchg
fidivs
mov
xchg
es
negb
jg
clc
jnp
movsb
jmp
xchg
jbe
cwtl
sub
push
mov
pop
incl
xor
ja
or
fcmovnbe
mov
mov
rolb
xorl
dec
test
add
or
dec
sub
pop
mov
add
pop
ss
push
sarb
insb
inc
ret
jle
jmp
xor
cmp
aad
pop
xor
adc
mov
pushf
push
xor
ja
jmp
ss
or
cwtl
mov
and
jp
mov
adc
pop
stos
into
xchg
xchg
mov
or
adc
hlt
jbe
and
lret
inc
push
mov
inc
xlat
inc
and
scas
jl
popa
divb
lds
aaa
pop
bound
jg
push
mov
push
fsubl
xchg
pop
sub
cmp
popa
push
scas
test
pop
rcrl
ficoml
imul
cmpsl
adcl
dec
mov
icebp
aam
std
mulb
sbb
push
jbe
jl
pop
sti
add
jl
mov
stos
push
int3
dec
push
and
loope
ja
push
cs
cmp
scas
test
imul
sti
and
dec
add
mov
lcall
cmp
pop
inc
loopne
loopne
inc
js
mov
int3
pushf
jnp
add
call
data16
aas
xor
nop
add
movsl
icebp
inc
adc
jg
push
add
push
in
mov
xchg
mov
insb
jl
adc
dec
mov
adc
mov
cmpsl
xor
shll
xlat
sbb
adc
cmp
loop
xchg
ljmp
lds
mov
fs
pusha
gs
add
xor
mov
mov
stos
mov
push
sarl
gs
dec
ret
fs
jp
xchg
popf
mov
jo
xchg
stc
pusha
lret
mov
lret
sbb
xchg
adc
test
jne
aaa
xchg
ss
mov
pop
adc
push
or
cltd
stos
xor
cmp
loopne
ret
jecxz
subb
jp
mov
add
inc
dec
les
imul
pop
pop
popf
mov
cld
loope
push
ret
vcvtpd2ps
inc
cltd
jmp
inc
jb
out
mov
mov
in
xchg
push
insl
and
add
std
dec
jae
sbb
inc
arpl
dec
cmp
inc
aam
fisubrl
cld
mov
jle
mov
fdivrs
xor
popf
in
adc
jg
ja
fcompl
mov
xor
push
or
xchg
hlt
push
nop
dec
stc
mov
inc
insb
ljmp
jecxz
adc
sub
adc
aas
test
popa
xchg
sti
out
sbb
ja
ja
sbb
adc
adc
mov
test
fs
mov
test
and
repz
cmp
testb
in
lahf
xchg
movb
lods
push
jmp
cmp
cltd
adc
or
push
pusha
inc
inc
or
add
xor
in
roll
sti
test
jb
push
lcall
or
mov
cmp
mov
dec
mov
push
adc
or
pop
xchg
fs
xchg
aam
or
adc
xor
jb
xor
or
adc
dec
cli
sbb
xor
jb
imul
xor
movsl
adc
cmpsb
lods
jno
adc
imul
stc
jbe
xchg
lcall
lret
mov
shrb
iret
fldcw
push
add
jmp
push
jmp
or
fsubrp
push
or
mov
icebp
jno
adc
inc
mov
sub
push
mov
sub
ds
jp
mov
mov
fldcw
xor
and
das
pop
shl
inc
push
pop
inc
adc
mov
insb
rcl
push
add
pop
mov
popf
sbb
add
mov
add
or
notl
lahf
lods
mov
bound
adc
mov
mov
xor
cmp
add
js
outsb
mov
mov
in
aam
cwtl
mov
xor
clc
cmc
adc
clc
xchg
xor
loope
test
jnp
push
ss
xchg
add
mov
rclb
mov
out
and
or
insb
into
dec
and
cld
pushf
sbb
dec
sub
mov
inc
inc
pop
and
mov
fsubr
sahf
and
xchg
adc
loope
sub
das
jge
nop
les
cmp
xchg
mov
dec
les
pop
cli
mov
sub
subb
push
cmp
and
or
mov
and
jb
addl
loop
movsl
dec
leave
or
mov
push
pop
decb
clc
mov
stos
jecxz
ds
lea
std
arpl
push
add
loop
cmp
pop
push
inc
pushw
adc
lea
push
addr16
cmpsb
ficoms
gs
fmuls
clc
dec
pop
scas
aaa
pushf
les
les
lcall
inc
add
mov
lret
and
imul
sub
outsl
test
mov
fstps
fwait
aaa
cmp
outsb
jo
jg
fstpt
test
in
imul
xchg
mov
loop
icebp
int3
xchg
adc
cmp
cs
fmuls
int3
xchg
push
inc
test
hlt
mov
lods
nop
or
xor
enter
fdivr
inc
hlt
stc
dec
daa
shld
mov
add
fwait
in
movb
das
rorl
pop
jl
pushf
adc
clc
sarb
fldenv
bound
cli
pop
jnp
sbb
inc
hlt
leave
mov
xor
outsb
and
mov
fisttps
push
sub
aad
test
imul
pop
lods
sbb
mov
jge
out
andl
fwait
pop
jp
or
pop
adc
and
cmp
and
sub
push
jp
out
push
enter
push
insl
jecxz
fsts
fdivrp
popf
in
pop
and
pop
push
loopne
cmp
and
stc
rcll
sub
lret
sar
addb
pop
xchg
lock
sub
scas
pop
mov
rcrb
lods
inc
stos
scas
clc
push
aaa
bound
neg
mov
mov
mul
loop
clc
dec
adc
sbb
into
push
xor
mov
push
fsts
out
adc
sub
xor
add
imul
jp
in
jp
mov
mov
in
imul
cmp
aad
inc
pcmpeqb
cli
cmp
mov
mov
sub
jmp
lock
mov
sahf
jle
mov
push
sub
sub
sbb
ja
icebp
lds
dec
mov
xorb
sbb
aam
push
cld
pop
rorb
scas
dec
mov
mov
outsb
insl
js
inc
fimull
clc
xor
nop
das
test
or
lds
aaa
or
jecxz
test
adc
hlt
sbb
stc
mov
cmp
jp
fs
int3
ds
jecxz
in
ss
pop
sub
mov
clc
sbb
ficomps
inc
push
and
adc
mov
adc
stos
nop
stc
pop
nop
xor
cmc
pop
xor
decl
lods
pop
mov
mov
fs
pop
aaa
sti
dec
outsb
mov
scas
negb
or
or
pop
sahf
lock
mov
jg
cmp
ret
popa
xchg
jg
push
sub
mov
sub
out
jmp
jle
pop
push
stc
nop
je
push
insl
les
add
adc
data16
and
dec
fdivr
push
aas
fcmove
loope
out
adc
test
rclb
fs
inc
ficoms
jae
test
mov
neg
xchg
push
fsubrs
fdiv
jae
fbstp
jecxz
inc
ficompl
enter
popf
mov
ficoml
push
int3
loopne
cltd
xor
dec
jns
push
mov
add
jo
addr16
mov
insl
dec
adc
sahf
test
xor
fsubrl
sub
enter
or
jb
xchg
in
arpl
popa
dec
xchg
jns
movsl
push
xchg
xor
add
out
xchg
subl
sbb
sbb
in
xor
stos
dec
sbb
jnp
dec
call
filds
cmp
fucomi
sbb
sub
sub
addr16
cmpsb
adc
jmp
pop
imulb
cmp
pop
dec
outsb
inc
and
or
sub
roll
movsb
stos
jg
sbb
loopne
adc
jno
mov
outsl
int3
dec
push
ja
js
push
es
adc
xchg
loopne
inc
dec
adc
repz
ds
lahf
jl
flds
push
out
ljmp
into
pushf
xor
inc
xchg
fstl
cmp
out
push
adc
addl
add
xlat
xlat
btl
mov
adc
mov
xor
jmp
inc
and
sbb
sbb
lods
call
push
pop
test
xor
push
adc
push
sub
add
lret
mov
sbbl
add
ret
mov
in
lds
arpl
xor
mov
mov
enter
xor
inc
inc
ljmp
mov
sub
daa
sbbl
rcrl
inc
sub
dec
loop
ror
pop
sbb
xor
xor
insl
xchg
cmp
jae
shll
xchg
push
out
scas
adc
mov
andl
daa
ss
adc
sub
mov
cmc
into
jmp
call
push
test
and
add
jle
enter
mov
mov
xchg
outsl
shrl
mov
sahf
or
and
adc
clc
leave
cld
ja
add
sub
fisubrs
push
add
ret
cmp
dec
stos
rcrl
cld
adc
add
icebp
jge
push
fninit
or
cmp
scas
dec
arpl
sti
inc
aas
leave
pop
jl
push
imul
dec
lret
push
sti
push
mov
jae
inc
mov
in
das
mov
aad
into
aad
ds
jecxz
adc
cmpsl
ror
aam
cmpsb
adc
push
mov
cld
pop
movsb
sar
mov
adc
or
imul
mov
sub
lock
pop
pop
mov
rcrb
sub
sub
shrl
cmp
loop
xchg
in
out
fidivs
jbe,pn
adc
fisubrs
imul
jge
or
fidivrl
cmp
cmpsl
test
sti
in
add
xchg
lret
cmp
xor
iret
test
ljmp
mov
cmp
mov
mov
mov
cmc
inc
shl
shrb
fdivs
push
clc
ljmp
ss
sub
in
sarb
cld
cwtl
mov
repnz
inc
pop
sbb
test
pop
xor
insl
push
pop
ss
cwtl
push
push
xchg
out
ret
push
cmp
or
add
push
and
cmpsl
xchg
mov
lods
xchg
push
adc
push
mov
xchg
cltd
scas
addr16
mov
sbb
mov
lds
pusha
pusha
ljmp
cwtl
ja
mov
jb
aam
repz
loope
enter
and
lret
mov
lock
popa
pop
or
xor
addr16
sbb
inc
dec
xchg
pop
dec
mov
xchg
add
out
fwait
pop
jb
incb
test
fistpl
cmp
push
dec
loopne
mov
push
aam
add
lcall
jmp
jge
and
push
les
out
sub
call
xchg
jbe
rcrl
notl
fisttpl
mov
push
fwait
inc
test
or
mov
insb
mov
adc
xor
imul
fisttps
mov
popf
lea
sbb
cs
popa
xor
pushf
mov
mov
je
inc
inc
dec
xor
jae
pop
push
je
sbb
in
push
sbb
rorb
notb
mov
xchg
push
sti
mov
mov
and
add
fldcw
fcmovbe
lret
or
leave
enter
jp
aaa
mov
pop
push
xor
mov
mov
mov
mov
daa
aad
lret
clc
adc
insl
mov
repnz
fstp
cmp
jp
jp
pop
mov
icebp
icebp
clc
daa
imul
insb
cltd
aaa
add
push
movsl
mov
xchg
push
jae
in
popa
dec
jmp
call
jmp
fsubrl
cmp
mov
data16
cmp
dec
icebp
sbb
mov
mov
aaa
mov
fs
or
pop
adc
cmp
push
leave
fwait
nop
stc
mov
fmulp
mov
mov
mov
xchg
lret
mov
insb
mov
jle
dec
mov
pop
jnp
cmp
mov
adc
push
add
push
add
mov
test
sbbl
mov
aaa
lock
test
push
sbb
cmpsl
or
xor
ret
xchg
xchg
and
inc
jmp
in
inc
loope
cmp
sub
cmp
jae
out
out
cld
sub
jp
dec
xchg
xor
adc
imul
mov
lock
jae
sbb
pop
fisttps
jnp
sub
sbb
lea
push
fnsave
shlb
bound
aam
xchg
pop
aas
loope
mov
pop
push
jp
lret
or
out
mov
push
inc
inc
daa
pop
orb
inc
flds
pop
lds
std
mov
fnsave
ds
and
std
and
push
add
test
ret
cmp
xchg
xor
lret
jle
xchg
dec
inc
mov
sbb
pop
adc
pop
loope
frstor
fdivrs
push
inc
lea
test
cmp
ror
add
and
push
lock
dec
dec
out
push
mov
aad
dec
dec
repnz
inc
lods
incl
jge
scas
rcrl
int3
push
xlat
xlat
cmp
pop
daa
into
mov
mov
jg
mov
xor
or
in
mov
add
mov
xor
test
fucomip
in
xor
add
push
adc
pop
call
mulb
mov
add
lea
push
test
inc
test
lret
jle
imul
xchg
or
fsts
xchg
mov
pop
mov
subb
pop
jbe
fsts
popl
ja
xor
lret
es
fidivrs
jno
xor
test
jle
cmp
or
add
or
addb
mov
dec
pop
jae
jne
dec
repz
mov
test
iret
ret
push
enter
je
sub
xor
sub
aaa
sbb
fbld
arpl
inc
push
mov
popf
outsl
adc
dec
push
or
std
jbe
pop
loopne
jge
push
movsb
clc
xchg
jns
xor
clc
push
jge
fidivl
ljmp
push
fnstcw
cltd
lret
in
pop
jmp
push
adc
jg
fistpl
in
lret
lods
pushl
inc
sub
xchg
cwtl
mov
clc
sbb
add
cli
adc
xchg
push
sub
sahf
push
lea
fisttpl
cs
push
orl
cmpl
lret
cmpsl
adc
movsl
aad
add
mov
dec
das
stos
int3
lret
cmp
push
aas
insl
iret
into
das
mov
or
outsl
or
adcl
cld
adc
orl
sbb
xchg
jge
enter
shll
rcll
mov
ret
pop
or
out
adcl
rcrb
lods
divb
pop
adc
icebp
xchg
cwtl
lock
cmp
or
loope
out
sbb
and
enter
pusha
inc
lods
cwtl
pop
jl
jp
and
inc
and
mov
pop
inc
jmp
loop
mov
push
xor
push
and
inc
xchg
roll
mov
xchg
sbb
adcl
outsl
sub
jnp
pcmpgtw
xor
dec
mov
enter
mov
inc
dec
push
ror
and
ret
js
sahf
aaa
adc
pop
nop
mov
jecxz
int
xor
das
jnp
ret
push
test
dec
out
fisttps
nop
add
shl
mov
sahf
out
pop
cmp
adc
dec
cwtl
out
cld
stos
lahf
arpl
dec
stc
push
mov
or
or
stc
inc
xchg
lcall
push
sbb
int
fs
jmp
sbb
loopne
sbb
mov
pop
push
sti
ret
test
inc
inc
shl
xorb
jae
notl
lds
test
sbb
pop
and
push
je
lahf
mov
jae
lret
dec
cmpsb
inc
fldcw
jbe
pop
mov
cmp
popa
or
rclb
popa
popa
jae
push
aas
stc
xor
pop
pop
leave
push
mov
add
adc
inc
dec
sub
add
push
jns
xchg
in
loop
stos
inc
scas
movsb
mov
movsl
mov
add
cs
cmp
sub
iret
mov
jle
pop
aad
mov
sbb
push
fimull
mov
inc
mov
mov
lahf
xor
lea
xor
std
mov
hlt
xrstor
repnz
jno
mov
sar
sbb
fldln2
mov
out
mov
test
mov
push
test
out
js
sbb
mov
loopne
stos
leave
in
push
sarl
sar
fcomps
fisubs
mov
mov
gs
and
and
loope
repz
jl
xor
test
bound
adc
lea
pop
aad
push
mov
call
divb
mov
jmp
es
mov
lods
dec
fstps
dec
pop
sbb
repz
das
add
mov
inc
pop
fimull
jbe
push
cmpl
fildll
stos
fs
les
mov
in
mov
repnz
cmpsb
repz
xor
and
jb
mov
xor
out
sub
xor
sbb
push
dec
les
sub
mov
movb
mov
xor
outsb
std
sub
cmp
push
inc
mov
pop
pop
pop
fistps
add
loop
sub
pop
jmp
pop
push
mov
repnz
push
xchg
inc
lcall
inc
pop
ret
mov
arpl
out
xchg
cmpsl
rcrb
loope
arpl
lods
inc
jne
mov
jns
rcrb
aad
popf
nop
push
sbb
scas
xor
cmp
lcall
enter
pusha
rolb
pushf
mov
movsb
mov
xchg
cmc
int
fdivl
negl
popf
inc
adc
and
lcall
loopne
lea
movsb
dec
sub
and
push
divb
enter
or
xchg
mov
out
ss
jge
ja
mov
sub
js
or
mov
jl
daa
xor
imul
pop
insb
jecxz
rclb
test
insb
int3
stos
push
and
inc
pop
push
test
movsb
mov
scas
testl
push
mov
mov
pop
negb
into
and
in
cmp
call
xchg
loopne
pop
inc
add
or
dec
cmp
and
cmp
sub
inc
repz
icebp
push
jae
scas
xchg
xlat
jl
test
mov
nop
lods
dec
dec
out
push
mov
or
mov
mov
cmp
imul
cld
mov
sub
push
fistpl
add
sbb
adc
out
ss
xor
mov
add
inc
fidivrs
and
nop
jl
ret
push
adc
in
scas
xlat
pop
push
mov
jo
and
lret
test
lock
mov
into
dec
mov
mov
sbb
in
xor
hlt
leave
out
or
fiadds
xor
mov
insl
test
stos
insb
push
push
xchg
outsl
outsb
xchg
jne
pusha
out
jae
int3
pop
ffreep
popf
in
inc
adc
ljmp
aad
fdivl
test
loop
sar
mov
push
cmc
dec
inc
or
movsb
or
into
pop
mov
mov
out
jmp
mov
shrl
lret
mov
add
mov
inc
sub
in
jo
push
fmull
and
jbe
lods
xchg
lcall
sti
mov
jmp
pop
lea
mov
hlt
pusha
lcall
popf
rorl
rcrb
dec
gs
not
shll
cmpsb
outsb
lcall
mov
and
xchg
lret
mov
xor
rol
and
fisubrl
daa
xor
sub
dec
mov
dec
sbb
stc
shrl
sbb
jbe
inc
ret
ret
stos
jp
adc
push
push
jb
jns
and
inc
je
pop
mov
ret
lds
int3
sub
xor
addr16
lock
movsl
jno
arpl
aas
or
adc
pop
lea
mov
cmp
cmpsb
inc
and
push
rcll
in
push
mov
in
mov
xchg
pop
or
sbb
insl
jno
daa
mov
cs
dec
ja
mov
add
add
ret
movsl
cwtl
cltd
lods
data16
cmpl
cmp
icebp
sub
ljmp
push
xchg
adc
les
daa
adc
ficoms
repnz
or
inc
add
xor
ret
adc
div
in
mov
jmp
aad
setg
mov
cmp
inc
or
push
sbb
repnz
mov
cltd
daa
jl
cmp
test
xchg
nop
mov
dec
sub
xchg
xchg
loope
jp
test
xor
shrb
das
and
cltd
fs
lds
mov
inc
or
inc
cmp
cmc
mov
or
repz
jo
testl
data16
pop
and
xchg
sub
push
jno
ret
faddl
lret
dec
add
jmp
mov
push
out
xchg
or
dec
mov
or
jno
bound
jl
dec
xchg
rcrl
xchg
cmc
xor
sub
mov
fs
mov
or
sbb
xchg
mov
lret
and
xor
loopne
adc
mov
adcl
out
pop
fdivrl
rcrb
sbb
mov
adc
mov
mull
aaa
test
sar
mov
xchg
aam
jmp
outsl
dec
fsts
lea
in
push
ss
icebp
cmc
loopne
popa
aaa
dec
mov
in
stc
arpl
data16
jnp
push
fnsave
lods
pop
test
push
loope
mov
cmc
repnz
mov
adc
pop
sub
aam
mov
jo
sub
pop
jmp
or
mov
fildl
mov
inc
xlat
repnz
es
out
ret
mov
sbb
jl
push
lcall
xor
cmp
cld
mov
daa
mov
push
stos
dec
repnz
movsl
hlt
loopne
lods
pop
cltd
jns
sbb
inc
push
sub
inc
adc
fsin
inc
and
mov
loopne
inc
outsb
mov
jl
mov
and
mov
pop
push
add
adc
mov
popa
inc
push
xlat
xlat
pmullw
dec
insl
adcl
or
std
jp
aas
in
cmp
nop
out
test
inc
xchg
call
mov
jbe
pop
cmpl
pop
icebp
push
ret
and
add
or
out
popf
fcomp
sub
and
and
jecxz
stos
scas
sub
subl
dec
adc
cld
or
pop
fadds
repnz
clc
leave
push
pop
xchg
mov
add
inc
test
test
add
mov
roll
shl
jle
jno
aad
sti
movsl
mov
shlb
adc
scas
mov
leave
mov
cld
push
fiadds
or
int
aam
push
and
mov
add
inc
inc
or
dec
mov
dec
andb
ja
pop
jne
jo
adc
dec
sub
stc
xor
lret
outsl
jo
lcall
sub
pop
icebp
lds
in
lods
repnz
push
xor
jg
hlt
stos
dec
pop
fs
jecxz
loope
or
xor
and
movsb
clc
popf
lea
and
ret
loopne
subl
test
pop
movsb
sub
stos
out
mov
xchg
es
cmc
jecxz
outsl
aaa
xor
cmp
dec
fildl
repz
sbb
cmpl
push
movsl
and
ss
in
inc
dec
or
mov
mov
jp
repz
enter
xor
xor
xor
rorb
or
xchg
or
ss
loope
nop
and
mov
dec
dec
insb
sbbl
adc
xor
add
loopne
jg
mov
mov
insb
mov
mov
fmulp
ljmp
pop
ja
push
inc
mov
jecxz
jo
push
mov
ljmp
test
and
push
pop
lret
fisubl
mov
test
cli
jo
loope
jle
push
pop
xchg
movl
jl
mov
dec
mov
cltd
out
stc
mov
out
lcall
ret
insb
mov
dec
rolb
shrl
pop
out
aad
fnsave
sub
aas
imul
push
inc
xor
mov
lret
jge
lcall
inc
or
xchg
adc
stos
popf
pop
xchg
cmp
gs
bound
xchg
icebp
cmpsl
shlb
mov
arpl
mov
mov
popf
rclb
mov
or
jg
into
ds
dec
xchg
push
pop
add
mov
xchg
cli
int
in
pop
mov
mov
sbb
cmp
cmc
mov
pop
cmc
pop
sarb
in
ja
fimull
sub
orl
or
xchg
aad
xlat
add
arpl
push
data16
rcrb
pop
mov
inc
lret
dec
lock
add
push
sub
lcall
ss
aaa
sbb
mov
and
xorl
repz
aad
jnp
lock
add
ret
js
pop
xchg
lcall
add
xor
mov
cltd
imul
data16
test
ljmp
movsl
add
or
test
movsl
loopne
sbbb
pop
lahf
jl
mov
jne
sub
cmc
ljmp
add
mov
dec
sub
mov
dec
or
loopne
lcall
pop
pop
and
pushl
divl
xchg
sbbl
add
push
clc
mov
daa
popf
data16
shrb
xor
mov
out
idivb
mov
pop
iret
lahf
add
sbb
mov
sbb
cmp
lahf
nop
popf
fwait
arpl
out
and
sbb
ret
dec
xchg
jne
jmp
pcmpgtd
inc
jnp
scas
test
inc
pop
aaa
repz
jmp
jmp
jle
aam
gs
les
dec
cmc
bound
mov
mov
scas
testb
add
jbe
xchg
push
mov
mov
pop
lret
pop
adcl
arpl
lea
add
xlat
pop
mov
or
mov
add
ljmp
jns
pusha
shll
movsl
jmp
pop
in
push
divb
inc
mov
add
mov
mov
insl
movb
jmp
loop
subl
jg
sbb
ljmp
jp
and
or
and
jmp
mov
push
sbb
pop
xchg
scas
rcrb
inc
jb
int3
inc
and
xor
pusha
paddb
out
ret
std
mov
jg
imul
mov
fldenv
js
pop
or
xor
xchg
cmpsb
push
cmp
out
rcl
sbb
jbe
cmpsl
insl
inc
sti
sti
or
inc
add
or
outsl
xor
mov
in
mov
clc
pop
mov
push
inc
out
leave
lock
inc
cmp
pusha
imul
xor
or
adc
mov
rorl
arpl
sbb
ret
pop
es
fstpl
rol
shr
and
imull
lods
xchg
jo
lea
roll
loopne
mov
lcall
scas
xchg
ljmp
mov
popf
sbb
das
mov
inc
ficompl
pop
nop
lret
sar
and
adc
xchg
in
bound
out
jnp
nop
out
aas
iret
sbb
ficoms
std
adc
in
inc
xor
sub
pop
lcall
push
mov
xor
sar
pop
aad
mov
cmc
stc
and
mov
xor
fnstcw
cld
xchg
scas
inc
xchg
mov
dec
ss
inc
iret
push
cmp
into
fsubrl
lods
pushf
ljmp
cmpsl
mov
add
pop
xor
in
roll
stc
push
fnstenv
add
daa
mov
mov
pop
cwtl
or
lret
cmpsb
pushf
mov
mov
mov
cmp
das
push
and
push
push
out
popa
repnz
addr16
dec
mov
lahf
mov
out
inc
loope
stos
cmc
adc
mov
mov
es
inc
mov
push
push
xchg
cmp
lods
push
mov
mov
push
dec
add
mov
repnz
mov
in
out
imul
and
push
dec
lret
in
dec
cli
cltd
or
jl
bound
xor
push
iret
cmpsl
test
or
mov
push
sarb
inc
fimuls
rcl
mov
lret
ds
je
ljmp
jb
add
sbbl
out
jb
out
out
imul
xchg
les
enter
cs
rcll
push
fnstsw
adc
mov
repz
cmp
je
sub
adc
adc
xchg
jge
in
xor
arpl
loop
xchg
mov
pop
and
push
inc
sbb
mov
lcall
dec
cmpsl
es
pop
into
call
or
push
ljmp
scas
rclb
in
or
scas
arpl
cmp
pop
test
push
xchg
mov
lea
in
mov
shll
mov
shl
out
fisttpll
pop
sub
out
mov
iret
rcll
aad
popf
jns
add
or
mov
jns
jo
les
js
stos
cwtl
icebp
mov
adc
divb
xlat
add
pop
inc
push
pushf
mov
sti
stos
lock
out
mov
lds
cli
jmp
add
std
dec
xchg
cmpsb
sti
lods
sub
movsb
cmp
jb
inc
sub
push
pop
imul
pextrw
mov
mov
test
mov
xchg
cmp
sbb
cmp
cmp
stos
mov
sbb
dec
xchg
cmp
and
sub
aam
push
push
or
xchg
dec
imul
xchg
bound
jge
enter
out
mov
pop
std
lock
std
push
shll
xchg
cmp
push
mov
cmp
orl
jbe
jge
dec
ljmp
and
out
inc
cld
mov
add
xchg
lds
sub
sbb
std
push
and
pop
lds
outsl
mov
sub
ja
aaa
push
adc
add
enter
enter
std
sub
js
sbb
jb
adcl
enter
push
add
test
in
adc
iret
dec
loop
dec
pusha
in
ret
pop
pop
sbb
or
pusha
sti
push
inc
xchg
xchg
sub
test
call
out
stos
cmp
aad
aam
lret
mov
mov
cs
loope
aaa
mov
pop
add
xor
and
sbb
mov
sbb
sbbl
ja
subb
fmull
jge
push
fcmovnb
sub
mov
es
das
push
outsl
ret
and
or
dec
jmp
aas
pop
adc
adc
jecxz
jle
sub
push
pop
jmp
xor
mov
imul
xchg
out
push
in
out
or
or
cmpsl
xor
jecxz
sarl
jnp
mov
scas
or
jns
ret
sbb
push
js
aas
adc
cmp
and
lea
pop
jne
nop
aaa
adc
push
movsl
xchg
pop
stos
mov
outsl
mov
mov
fnstcw
push
mov
cs
inc
or
repnz
in
das
adc
pop
lret
jge
or
rcrb
dec
clc
lods
iret
enter
mov
nop
cmp
fs
xchg
cwtl
cmp
inc
lods
int
or
pop
xor
mov
jae
pop
pop
popa
mov
dec
and
and
adc
fidivrl
mov
shlb
insl
test
hlt
mov
insb
and
xor
inc
xor
lea
add
mov
lcall
inc
inc
call
sub
xor
sahf
jno
lds
xor
or
rorl
test
mov
sbb
aad
imul
lea
stc
lret
std
pop
sar
lret
mov
push
lods
imul
outsl
sarb
in
mov
mov
xchg
icebp
imul
push
mov
sbb
test
sub
sarl
pop
cmpsb
inc
lock
popf
mov
cmp
inc
outsb
enter
mov
negb
fs
aas
aam
dec
enter
jb
mov
jp
cmp
aas
inc
pop
sub
fimull
scas
outsb
imul
and
stos
add
xor
mov
cltd
jo
dec
movb
pop
bound
mov
xor
leave
sub
adcl
mov
in
imul
push
fcoml
scas
and
pop
push
add
mov
push
push
lahf
inc
popf
fisttpl
adc
in
movsb
pop
addr16
ret
mov
inc
aaa
out
sbb
or
aam
add
scas
cmpsl
rolb
cld
sbb
imul
nop
shlb
mov
push
cli
enter
cmp
jo
movsl
repz
subl
jmp
jl
cmc
pop
and
daa
push
xchg
mov
push
addr16
test
es
jl
out
mov
add
jecxz
adc
push
movsb
pop
sub
sub
jno
pop
push
xor
aaa
sub
lds
scas
shll
add
mov
aaa
insl
push
adc
xchg
cld
arpl
lods
aas
ret
mov
kmovw
add
mov
jl
push
sub
inc
fwait
adc
aaa
outsl
aas
ss
xlat
push
dec
loope
mov
inc
lds
jg
ds
xchg
pop
ret
stos
pop
push
sbb
fcoml
cmp
sbb
movd
and
ret
push
xor
push
stc
and
rorl
out
imul
cltd
pushf
or
sarl
mov
xor
mov
in
test
sub
je
dec
arpl
mov
xchg
cmp
data16
hlt
aas
dec
daa
dec
icebp
sahf
dec
aam
cmc
addl
int3
and
adc
jge
jecxz
or
in
mov
test
adc
ficomps
cli
dec
cmc
dec
addr16
in
lods
int3
or
xchg
call
add
sbb
or
push
inc
mov
mov
mov
fistl
xor
pop
or
sbb
adc
mov
in
aam
rcrl
in
and
jle
xchg
imul
into
or
sbb
mov
lods
adc
loop
mov
pop
insb
add
loope
push
add
enter
loopne
sbb
pop
les
pop
push
push
lahf
inc
mov
sbb
stos
mov
pop
daa
popa
inc
aam
or
xchg
adcl
dec
push
movsb
test
and
daa
jmp
enter
cmp
or
inc
adc
outsl
push
shlb
fnstenv
xchg
ret
movsl
pop
aas
repnz
and
jecxz
xor
loopne
push
lcall
or
dec
sub
movsl
jnp
call
pop
rcll
repnz
in
iret
sbb
push
sbb
push
pop
xor
rorl
gs
lods
mov
stc
mov
mov
ljmp
lret
pop
push
xchg
cltd
xor
sbb
hlt
daa
mov
repnz
pop
hlt
insl
insl
sahf
mov
stc
loopne
ret
push
daa
aas
or
jne
inc
dec
out
cmpsl
dec
int3
or
cmp
xchg
ljmp
and
push
inc
stc
mov
push
hlt
sbb
add
ret
loop
fdivl
sub
js
cs
fistps
cmp
fs
cmpsl
loopne
xor
sub
cltd
jge
push
add
jo
push
hlt
mov
cmp
jno
jle
push
mov
xchg
gs
mov
mov
icebp
pop
adc
push
nop
add
mov
test
jl
fsubrs
xlat
mov
lock
or
mov
loope
pop
cmpsb
sahf
jo
mov
mov
lods
pusha
and
call
jnp
iret
push
jge
cmp
pusha
jp
push
mov
pop
ror
subl
add
scas
mov
xchg
jno
hlt
sbb
fcom
mov
ret
mov
jmp
imul
sbb
jo
dec
mov
lret
jmp
xor
push
divl
or
dec
cmpsb
ficoms
mov
imul
clc
rcr
and
push
rclb
jg
das
pushf
hlt
sbb
jg
mov
or
adc
xchg
hlt
push
sub
mov
daa
add
mov
sub
rcl
push
dec
sbb
pusha
insb
scas
aaa
cmpsl
lea
paddq
mov
insl
iret
pop
out
lcall
mov
test
jns
mov
jmp
testb
repz
xor
fdivl
arpl
test
movupd
scas
pminub
mov
adc
xchg
xor
lock
jb
mov
pop
cmp
or
aaa
push
test
lret
jg
es
lods
push
jp
xchg
mov
mov
add
mov
add
and
or
push
xor
add
xor
dec
nopl
xchg
pop
addr16
jo
inc
mov
jle
mov
cmp
mov
push
xor
sub
es
aas
mov
xor
sub
pusha
lock
xchg
xchg
loope
sub
mov
cmpb
mov
fucom
add
mov
repnz
cmpsl
fsts
daa
sub
and
cmc
or
push
imul
cmp
and
or
int
ja
push
loopne
push
push
pop
mov
ficompl
mov
dec
or
sub
mov
mov
cmp
dec
sub
sbb
outsl
rclb
das
pop
mov
into
sub
jae
mov
cmpsl
sbb
or
fiaddl
mov
bound
test
jle
and
inc
stc
lahf
add
mov
aaa
call
stos
or
aaa
stc
or
dec
push
inc
fxch
sahf
and
push
sbb
push
mov
dec
ret
adcl
dec
out
lret
stc
cld
inc
fstp
jno
fsubrl
scas
xor
aam
es
popf
mov
push
mov
out
or
push
xor
pop
jno
push
xor
cltd
pop
and
in
pop
addr16
scas
mov
cmp
xor
in
jl
push
jb
or
inc
adc
repz
sub
jl
and
push
xor
lret
mov
in
cli
sbbb
je
ja
pop
mov
hlt
gs
in
dec
pop
callw
push
std
lahf
pop
loope
loopne
and
out
cltd
sti
cmovp
enter
popa
sahf
sbb
dec
addb
pushw
rol
mov
jne
xor
in
imul
dec
push
pusha
sub
ja
cld
ja
add
mov
mov
mov
mov
repz
dec
mov
dec
inc
std
and
push
pop
push
ja
or
jge
fcmovu
sbb
frstor
cmp
ret
outsb
adc
pop
lret
push
jle
inc
lods
jge
addr16
lret
shl
out
mov
xor
mov
sub
test
jo
dec
lods
repnz
mov
mov
jb
popa
pop
pop
mov
aas
js
jp
add
pop
je
add
jnp
mov
jbe
mov
add
pop
dec
icebp
sbb
add
inc
mov
dec
jae
mov
jg
xchg
xor
roll
jp
push
xor
sarb
pop
pusha
movsb
icebp
inc
jg
jg
dec
and
sub
pop
push
push
mov
pop
ficompl
shll
inc
aad
sub
addl
mov
and
ret
fbld
mov
mov
jg
mov
and
xor
and
enter
sub
add
pop
dec
pop
xchg
outsl
rol
gs
pop
aas
sub
cli
repnz
cmp
outsb
scas
add
aam
ficompl
xchg
adc
dec
mov
adc
pop
dec
xchg
lcall
ret
xchg
mov
iret
mov
mov
jb
push
cmpsb
xlat
pop
cs
int3
nop
sub
add
or
shlb
mov
or
pop
cmpl
je
sbb
or
cmp
icebp
or
aam
movsl
stos
and
inc
xor
cmp
push
loopne
ljmp
lods
xor
insl
xchg
ret
rcrl
sbb
pushf
mov
xchg
test
push
cli
movsb
mov
movsb
and
imul
jmp
xchg
mov
sti
mov
aaa
mov
std
add
cli
loop
lods
sub
adc
shlb
mov
dec
mov
xor
pcmpeqb
out
mov
push
lret
mov
pop
repnz
mov
adc
aaa
outsl
lahf
scas
xlat
das
xor
push
cmc
mov
fstpl
fsubrp
popf
ficoms
movl
xchg
repnz
adc
fsts
jg
adc
daa
adc
push
sub
xchg
hlt
scas
add
idivl
sbb
mov
inc
xchg
add
mov
sbb
mov
std
ds
or
adc
fiadds
fwait
mov
jnp
inc
or
mov
fs
pop
jno
mov
and
mov
cmpsl
xchg
repz
xlat
arpl
iret
daa
pushf
ljmp
mov
data16
push
inc
sbb
push
fsubr
jle
out
mov
xchg
test
sbb
movsl
sub
jmp
push
and
out
es
sarb
sub
mov
adc
xor
repnz
pop
sti
fwait
cld
in
jne
stos
in
loopne
pop
or
sub
dec
jns
fptan
sahf
out
or
cmp
xor
xor
mov
and
imul
add
dec
push
xchg
xor
push
call
rorl
packsswb
out
aas
ss
cmc
adc
adc
cmp
push
into
adc
inc
mov
ret
in
jb
ljmp
ret
pop
out
fwait
movsb
dec
push
sarb
dec
pop
cmp
mov
add
dec
push
cmp
jno
mov
cli
stos
mov
cltd
cmp
ds
adc
pusha
push
jp
sbb
or
wbinvd
scas
xchg
cmc
fwait
lods
jno
xchg
cltd
push
insb
jp
pop
pop
xchg
mov
mov
cmp
sub
pop
mov
mov
loop
jbe
imul
xor
lret
fisttpll
xchg
mov
pop
arpl
popa
in
mov
mov
pop
push
and
push
test
stos
add
sub
lret
lods
mov
inc
dec
lods
sub
movsb
lds
icebp
xchg
jmp
mov
push
ret
xor
bound
jle
mov
push
mov
sbb
bound
dec
loop
pop
insb
xchg
iret
inc
in
mov
or
xor
mov
mov
mov
jle
jns
mov
sbb
stc
pop
movl
pop
and
ljmp
or
movsb
ljmp
dec
cmp
jnp
mov
jle
xlat
outsb
adc
xlat
jl
push
std
cmp
pop
dec
mov
xchg
or
nop
xchg
cmpsb
sbb
test
xor
decb
push
mov
sbb
xor
lods
fnsave
push
outsb
adc
jmp
sub
into
std
sbb
mov
cmpsb
cli
cmc
repnz
push
sbb
sbb
or
push
jbe
pop
out
jae
imulb
popa
neg
and
daa
rorb
mov
rcrl
pop
mov
cltd
mov
stos
push
addr16
pop
push
rcll
pop
dec
xor
mov
nop
sub
fiadds
scas
mov
movsb
mov
xchg
mov
ret
push
mov
xchg
shlb
addr16
loope
pop
aaa
jb
or
pusha
jbe
outsb
cmpsb
out
lcall
insb
cmpl
push
cli
mov
adc
push
inc
cmp
stc
sbb
fdivrp
jg
push
fnstcw
xchg
jno
sbb
test
mov
les
lahf
ds
dec
outsl
mov
jg
mov
dec
shll
cmp
je
push
inc
in
data16
cmp
cmp
mov
fsubrl
or
or
into
pop
xor
dec
pop
adc
push
cwtl
in
mov
add
stos
add
adc
adc
fldt
aad
fbld
cmp
repnz
std
cmpsl
xlat
and
insl
enter
adc
fiadds
aam
stos
xor
pop
stos
cwtl
mov
and
je
test
xchg
add
bound
ja
mov
and
xchg
mov
cltd
mov
mov
scas
push
test
sbb
leave
push
arpl
into
adc
sub
int
cmpsb
les
inc
cltd
test
or
cmp
mov
loop
in
cmp
out
xor
lods
and
pop
pop
sahf
lret
add
testb
mov
cmpsl
clc
or
adcl
lock
push
mov
xchg
dec
add
aas
insb
mov
imul
adc
pop
cmp
cld
shlb
adc
in
orb
ja
test
xor
or
push
and
push
testb
inc
mov
pop
shlb
daa
adc
call
xor
adc
adc
dec
mov
in
bound
call
xor
arpl
sub
clc
sub
jecxz
and
jns
add
sbb
mov
in
mov
fs
or
sbb
push
aas
enter
mov
loop
mov
push
pusha
or
xchg
mov
mov
inc
and
and
fimuls
lods
xor
mov
ljmp
popf
int3
pop
stos
stos
or
jbe
in
pop
pop
repz
rorl
cltd
or
dec
inc
adc
mov
lahf
aas
fdivrl
ret
lahf
dec
xor
popl
inc
bound
or
leave
cmpb
insl
enter
or
pop
xchg
pop
push
jl
leave
dec
jnp
lcall
shlb
mov
stos
sti
cmp
inc
sbb
sbbb
insb
xor
das
push
call
lret
rol
rcr
cmp
iret
dec
aam
lods
int3
pop
cli
cmp
mov
mov
lea
jp
movsl
sub
and
and
fcmovne
xchg
xchg
movsl
jl
fld1
jecxz
cld
in
xchg
cltd
inc
inc
frstor
xlat
popf
push
jae
mov
mov
sbb
jns
xchg
dec
js
mov
xchg
repnz
fisttps
sub
testb
aaa
add
pop
or
pop
lods
les
push
jl
stos
cmp
sahf
lret
mov
lods
loope
pop
leave
aas
xor
jnp
sub
or
test
lret
push
lret
popa
mov
notl
or
sbb
mov
ja
ret
inc
cmp
sub
dec
test
cld
int3
data16
xor
ss
pop
jecxz
lcall
mov
or
lea
jmp
rolb
popa
into
les
add
xor
sbbl
push
loop
out
vmwrite
push
mov
aas
outsb
lods
dec
mov
cmp
mov
lods
pop
cmc
lock
cmpsb
repnz
push
sub
and
data16
cmp
push
sarb
or
inc
xor
mov
pop
mov
ja
or
inc
adc
mov
mov
xchg
imulb
incb
mov
iret
jg
enter
mov
stc
pop
and
and
iret
adcl
sbb
fdivrs
and
test
inc
push
hlt
adc
cs
jae
stos
and
mov
in
ja
dec
leave
and
cmp
inc
in
xchg
repnz
fildll
adc
jns
mov
loopne
dec
aad
je
ja
test
push
mov
sub
pop
lods
pusha
mov
push
call
leave
test
sbb
sub
loopnew
jmp
in
out
test
icebp
dec
adc
mov
mov
int
or
test
loope
add
and
shlb
pop
push
inc
cs
adc
add
jnp
ret
inc
inc
inc
inc
pop
lret
xor
clc
js
xorb
mov
sbb
pop
xchg
inc
lret
and
das
shlb
push
sub
repnz
aas
push
imul
fistpll
dec
sar
popf
pop
ljmp
ljmp
imul
mov
jmp
cld
pushf
pop
mov
cmp
pop
jb
or
inc
es
and
or
rorb
es
pop
cmpsl
addl
mov
fstps
push
in
adc
arpl
ljmp
in
dec
inc
and
mov
icebp
dec
jge
sub
adc
jecxz
in
ret
mov
adc
cld
ficoml
inc
cld
add
push
cmp
mov
aad
or
sub
jns
cs
mov
adc
insb
sub
rcrb
inc
out
xor
add
int
or
mov
pusha
mov
sbb
lahf
dec
xchg
mov
movsl
fistps
cmc
xchg
in
adc
daa
dec
pop
nop
jl
aaa
inc
and
ret
hlt
clc
sub
repnz
test
xchg
mov
xor
push
pop
pop
das
mov
jbe
push
lret
fdiv
push
lods
movsb
and
ja
sbb
mov
test
pop
shl
or
jb
add
sub
stos
leave
jle
mov
shrl
dec
add
push
in
dec
mov
dec
adc
or
sbb
cld
mov
xor
ret
push
out
jge
into
dec
mov
add
scas
jmp
movsb
pusha
imul
negl
repz
cmp
mov
inc
mov
negb
fsubrl
outsl
es
in
adc
mov
out
jo
jo
or
cld
imul
or
test
je
into
je
mov
and
insb
subb
dec
inc
adc
push
push
cmc
test
call
cmp
push
sahf
loopne
mov
xchg
push
mov
icebp
jno
sti
nop
lods
fisubrl
mov
add
inc
int
popf
clc
inc
insb
mov
or
push
dec
push
ja
cmp
sub
stc
mov
test
add
dec
pop
pop
xor
scas
push
psllq
fwait
push
push
ljmp
adc
push
jle
js
fstps
scas
into
sbb
enter
arpl
jae
xchg
insl
scas
insb
loope
cmp
lret
lock
push
inc
jle
cmp
sub
cmpsl
xor
outsl
xor
in
lcall
jo
jmp
cmp
ret
cmp
scas
xor
dec
aas
pop
mov
test
not
mov
cli
jb
outsb
or
and
pusha
out
cmpsl
loopne
iret
ja
mov
filds
mov
fidivl
test
mov
repnz
jg
cs
dec
mov
push
fcoml
adc
mov
mov
es
add
xlat
dec
sbb
or
in
fwait
mov
out
pop
shlb
jl
xchg
sbb
mov
mov
jnp
cltd
popf
mov
add
js
pop
xlat
pop
push
faddp
mov
xchg
add
sbb
rcrl
jae
std
daa
das
imull
std
jae
dec
inc
and
test
pop
pop
adc
daa
hlt
int3
scas
je
add
bound
scas
shll
js
in
and
lahf
pop
push
or
fcmovb
xlat
adc
cltd
push
cmp
pop
das
xchg
mov
shrb
shrb
es
push
xor
and
sbb
xor
sbb
mov
pusha
adc
out
movsl
pop
or
mov
pushf
xor
mov
sub
fsubrs
adc
and
lret
and
scas
cmc
cmp
sbb
mov
lods
pushf
imul
aaa
xchg
jl
stos
xor
stc
popa
sti
scas
push
addr16
lods
out
mov
jb
out
pushf
xor
cmpsl
shrl
cmp
and
jl
cmp
cmc
mov
adcl
mov
adc
sbb
mov
mov
pop
pusha
cmp
inc
fs
shlb
jo
sub
stc
es
inc
jns
cs
lcall
data16
cmp
xchg
in
cltd
jle
or
add
push
xor
mov
stc
cmc
cwtl
or
mov
les
insb
dec
mov
scas
inc
xor
xor
data16
xchg
adc
ljmp
push
lods
addb
inc
ljmp
scas
or
adc
mov
mov
lock
cmp
mov
lea
stc
in
mov
mov
cwtl
sbb
insb
ss
cld
sbb
push
sbb
xchg
push
mov
clc
push
in
sbb
aad
stos
cmp
stos
dec
fcmovu
fstps
jnp
mov
inc
sbb
arpl
mov
ss
or
dec
in
daa
pusha
push
add
nop
enter
cmpsb
mov
in
inc
shl
push
mov
lock
inc
lcall
dec
cs
enter
enter
aad
popf
xor
ljmp
test
add
bound
jbe
enter
sbb
ficompl
dec
adcb
jg
xlat
push
pop
adc
adc
push
adcl
dec
inc
mov
inc
fwait
mov
cmp
rcrb
mov
inc
inc
stc
test
xchg
mov
inc
and
cmpsl
cmc
iret
jge
jmp
iret
jb
and
push
and
add
movq
stos
mov
jg
dec
sub
lea
mov
scas
lea
outsb
out
cwtl
ret
mov
mov
adc
push
mov
mov
sti
dec
mov
cmp
push
and
adc
repz
lds
addl
ficompl
mov
dec
mov
cld
xor
jecxz
xchg
int3
sahf
fiadds
leave
xor
test
mov
outsb
fdivr
add
cli
sub
dec
imulb
jg
mov
dec
test
iret
xchg
mov
loope
cwtl
out
dec
xchg
repnz
aaa
les
mov
cmp
nop
jne
int3
fcoml
cmp
lahf
mov
xchg
sbb
movsb
pop
sbb
xchg
popa
fnstcw
jle
xchg
push
add
and
dec
loop
mov
adc
mov
mov
adc
fmuls
in
mov
dec
js
dec
aam
aaa
pop
inc
ret
js
out
inc
rorl
enter
cs
lock
negb
test
mov
or
mov
pop
xor
ja
ja
mov
and
sbb
mov
mov
std
pop
or
jecxz
xchg
xor
aam
push
in
adc
out
es
cmc
xchg
or
aaa
cmpl
les
cmp
shlb
rclb
sub
fdivrl
mov
xlat
adc
adc
xchg
fsubrl
dec
dec
inc
movsl
iret
sub
sub
pop
pop
or
imul
decl
push
xor
scas
and
mov
or
and
adc
je
fcmovne
nop
call
jecxz
jns
inc
sub
and
ficomps
or
movsl
iret
andl
mov
sbb
pop
in
xchg
scas
push
inc
orb
mov
jns
xlat
xlat
sub
xchg
scas
outsb
sbb
aam
xchg
fdivp
nop
fists
push
dec
popf
sub
jmp
cltd
clc
push
jle
arpl
xchg
sbb
mov
xor
pushf
movsb
in
sbb
shr
movsl
xchg
mov
pop
lret
lods
repnz
jns
cmp
sbb
inc
or
nop
into
ret
push
inc
outsb
dec
mov
push
jno
add
jmp
dec
inc
push
enter
mov
and
aaa
mov
cmp
stos
stos
sub
mov
mov
in
mov
repnz
xchg
inc
or
data16
outsl
rorl
sbbb
dec
in
mov
mov
cwtl
sbb
sub
les
push
sbb
iret
xchg
fdiv
xchg
iret
in
adc
jae
jae
sarb
and
cmpl
mov
shll
mov
xchg
jge
stos
inc
lods
or
push
imul
mov
stc
out
mov
rcl
cld
pop
ljmp
leave
dec
mov
out
pusha
ds
lahf
int3
jg
nop
push
add
inc
xchg
pop
mov
out
fdecstp
subl
sub
mov
lods
sbb
aas
dec
loopne
inc
inc
out
fimull
mov
ljmp
cmp
adc
enterw
movsb
mov
je
cmc
ss
jl
push
jo
mov
in
cmp
pop
and
stos
mov
mov
mov
andb
popa
enter
xchg
inc
sub
or
int3
les
inc
not
stc
cmp
xchg
in
sub
jo
inc
jbe
call
clc
aad
in
mov
pop
fwait
sbb
xchg
cmp
int3
adc
adc
ret
mov
fwait
lea
int3
cwtl
mov
add
sbb
sub
xlat
jbe
fcmovne
stos
mov
or
test
lahf
jl
mov
imul
dec
negb
sub
roll
cmp
je
mov
mulb
mov
mov
mov
mov
jns
xchg
xor
int
lods
mov
or
pop
xchg
bsr
int3
sbb
int
cld
lret
xor
xchg
cmp
in
mov
in
clc
lcall
inc
mov
stos
sub
jle
fwait
leave
xchg
push
test
pop
dec
push
test
adc
xlat
cmp
in
mov
or
xor
jmp
shll
mov
dec
fadd
mov
xchg
scas
adc
shrb
xchg
call
lds
adc
lds
mov
mov
inc
pop
add
inc
inc
orb
pusha
ljmp
insl
pop
inc
jbe
jp
arpl
pop
mov
loope
mov
idivb
in
xor
lret
inc
sub
inc
ret
or
movsb
repnz
adc
lds
xchg
in
shll
imull
xlat
shl
mov
mov
je
pop
inc
js
pop
push
pusha
or
mul
nop
dec
cmp
ret
in
mov
sub
mov
and
mov
adc
imul
nop
xor
outsb
sub
lods
adc
stos
jne
fiadds
lcall
lock
bound
inc
sub
mov
call
sbb
imul
push
pop
sub
inc
or
mov
dec
add
or
insb
add
hlt
in
repz
pop
iret
das
cmp
xor
push
jbe
push
std
dec
adc
aas
cmpsb
sbb
outsl
pusha
ja
addl
loope
inc
lods
cs
or
lds
push
inc
into
repz
mov
pop
jbe
sbb
adc
enter
cli
lods
or
fsubr
int
dec
mov
xor
xor
mov
or
mov
pop
cli
dec
popf
xor
mov
mov
fwait
lds
jmp
and
mov
push
sub
insb
mov
lds
sti
add
outsb
sub
pop
loopne
test
ds
popl
adc
pusha
adc
mov
loope
sbb
ja
xor
orb
jne
sub
xor
sbb
xchg
call
cmpsb
aam
rcrl
xor
out
add
dec
push
icebp
dec
mov
add
cltd
test
sti
das
decl
push
lcall
mov
test
scas
popa
add
lods
repnz
or
imul
sahf
popa
mov
mov
pop
cmpsb
cmp
pop
add
dec
xchg
fistpl
xor
arpl
cmpsl
pop
pushf
aam
mov
mov
outsl
or
cmpsl
adc
pusha
jb
dec
subl
fdivr
enter
add
fimull
and
ljmp
lock
mov
adc
cld
push
sub
pop
sub
adc
mov
jl
mov
mulb
jecxz
push
mov
or
sbb
lods
flds
jg
sub
cmpsl
icebp
lahf
mov
movsb
mov
fucom
mov
test
mov
mov
ds
iret
test
cmp
aaa
popf
cmp
mov
test
adcl
and
test
mov
xchg
stos
or
ret
pop
scas
push
mov
in
out
add
mov
add
xor
dec
icebp
into
jne
push
mov
pushf
inc
sahf
das
cmp
out
adcb
add
pop
push
cld
push
repnz
rorl
into
loop
sahf
sub
or
in
sub
popa
repnz
xchg
adc
in
add
in
jb
push
imul
pop
adc
or
lret
xor
dec
cli
ds
dec
sbb
xor
lret
aad
xchg
jne
lods
mov
std
xchg
mov
aas
aas
aad
nop
jno
sahf
pop
stc
cmp
sbb
dec
sub
outsb
mov
and
sarl
loope
das
add
data16
xor
or
arpl
mov
scas
and
loope
dec
xchg
xcrypt-ofb
cmpsl
out
pop
jle
push
sbb
loope
je
mov
cmp
sbb
int
shlb
ljmp
outsb
movsb
lahf
les
mov
out
mov
pop
sub
and
lcall
imul
xor
mov
mulb
xchg
out
arpl
out
cmp
adc
mov
pop
pushf
shll
pop
dec
ret
pushf
setle
jecxz
pop
cmpsb
js
scas
stc
insb
mov
fists
test
lods
fwait
cmpsl
faddl
jle
stc
xchg
cmp
jae
add
mov
mov
repnz
shlb
jecxz
jmp
xchg
cld
loopne
pop
dec
into
icebp
mov
idivb
aaa
lcall
movsb
jmp
jo
out
fwait
shrl
rep
mov
mov
fsubl
jl
xchg
push
loop
daa
insb
shlb
js
ror
add
in
adc
loop
lret
pop
sti
test
gs
sub
xchg
enter
loopne
jl
fsts
mov
cli
adc
scas
fisttps
lcall
aaa
xor
inc
test
jnp
mov
cmp
fcmovnbe
mov
hlt
andb
in
sbbb
xchg
jl
cwtl
sbb
and
into
pop
add
mov
jl
inc
and
out
pop
push
lock
adc
ret
pushl
incb
imul
add
dec
push
lahf
push
rorl
jae
lock
xor
lds
cmpsl
sub
xchg
stos
in
out
lds
mov
or
add
out
out
test
test
jo
push
cmpsb
xor
cmp
sbb
mov
js
test
popa
xchg
in
lret
push
pop
std
aaa
lcall
push
popa
xlat
jle
cmp
cmp
mov
arpl
rcrl
int
add
or
mov
movsl
push
sub
xor
ss
movb
sbb
sbb
add
jg
leave
jle
sbb
movsb
jb
loope
ds
mov
inc
xor
lahf
jl
jmp
pop
push
and
lea
stos
test
or
xor
mov
into
pop
push
pop
in
mov
fimull
sub
or
mov
push
bound
mov
icebp
inc
push
cmp
adc
lods
lret
mov
lods
addr16
stos
xchg
loope
fcoml
loope
mov
push
int
jle
xchg
cmp
and
or
pop
jl
aad
movsb
jg
adc
ljmp
test
call
push
daa
lea
loope
mov
lods
mov
es
push
lods
push
aaa
movsl
xlat
stos
mov
xchg
add
mulb
dec
pop
je
mov
cmp
lea
pop
xchg
jnp
loop
xlat
xchg
mov
out
outsb
cs
mov
pushf
repz
xor
gs
push
inc
inc
xchg
and
push
mov
or
outsb
shrl
and
cmp
inc
xchg
out
insb
adc
loop
push
xchg
ss
inc
mov
add
jb
rcrl
mov
lock
sahf
sub
call
sarl
ds
push
scas
push
pop
sahf
shrl
mov
aas
pop
mov
jo
sbb
mov
lods
in
idivb
std
mov
outsb
sti
xchg
mov
sahf
jbe
pushf
and
test
ljmp
insl
std
push
xchg
mov
sbb
inc
lock
int3
mov
mov
push
out
in
mov
mov
push
ret
popa
aaa
sub
fldt
jge
pop
outsl
gs
pop
sti
pop
add
aad
out
adc
repz
sbb
ljmp
push
mov
mov
inc
push
push
cmp
mov
sub
xchg
sbb
push
add
xor
add
arpl
or
cmpb
cmp
xor
arpl
stos
nop
and
aas
mov
add
dec
stos
dec
addr16
sbb
push
mov
jmp
push
insl
rclb
sbb
pop
lret
mov
jnp
inc
pop
subl
inc
mov
pop
mov
ja
jo
repz
rcll
sub
popa
adc
mov
les
fstpt
jbe
add
fnsave
cwtl
xchg
push
cmp
sahf
or
pop
and
ja
adc
shrl
mov
mov
rorb
mov
mov
mov
insb
add
xlat
fsubrp
or
jno
shlb
mov
sub
int3
lahf
inc
nop
aad
push
xchg
arpl
xchg
push
in
repz
add
pop
daa
sarb
mov
cmc
xchg
adcb
or
fs
or
popf
in
xchg
lds
xchg
cs
das
sbb
sbbb
addr16
pop
aas
lods
and
xchg
lea
jns
notb
xchg
xor
dec
aas
aaa
push
aaa
setb
jle
mov
and
lret
mov
dec
movsl
mov
dec
mov
in
mov
movzwl
andb
or
cmp
cltd
and
sahf
dec
and
ret
mov
shll
jg
lods
dec
or
sub
int3
cmp
sbb
dec
push
jg
jl
mov
add
add
cmp
popa
lods
add
gs
push
jb
sarb
sub
dec
enter
push
xor
aam
pop
ret
push
adc
shr
loope
dec
js
pop
loopne
aas
int3
push
cld
inc
mov
inc
outsb
lcall
xor
jns
cmp
cmp
popf
movsb
jg
xchg
aad
nop
inc
fwait
mov
xor
sub
pusha
int
push
jae
add
movsl
sbb
jae
inc
mov
adc
mov
nop
xchg
xor
imul
and
xor
push
sahf
xchg
lret
jno
in
push
pop
pop
inc
pop
jle
or
fnstenv
jnp
xchg
loop
pop
sub
sahf
xchg
scas
push
jle
sub
cmp
call
mov
into
stc
je
add
sub
jl
mov
mov
scas
xchg
stos
fldl
pop
movsb
inc
mov
cli
pop
int3
or
or
jb
xchg
dec
aad
cmp
inc
inc
fcomps
sub
test
push
mov
fdivrl
aad
out
mov
cli
push
es
push
aaa
cs
push
mov
cmc
cmp
mov
mov
mov
test
xchg
mov
xor
xor
cmc
mov
cld
das
xchg
out
stc
popa
leave
pushf
or
arpl
jle
sub
sub
fstpl
inc
test
sub
ja,pt
popa
push
sti
movsl
pop
pop
sub
cs
out
add
andl
imul
das
pop
push
test
subl
inc
cmp
ret
sbb
lods
std
inc
rep
cld
dec
mov
xchg
mov
xor
dec
xchg
xlat
or
push
pop
mov
push
fisttpl
ds
cmp
xchg
push
sub
dec
dec
sub
stos
inc
push
push
jle
mov
insb
popf
sub
mov
fidivs
add
scas
divb
fwait
and
dec
popa
mov
or
add
mov
cld
xchg
icebp
pop
mov
addr16
add
xor
aam
jnp
dec
jbe
fisubrl
loop
push
inc
dec
push
in
sbb
jg
into
fcomi
inc
mov
lcall
movsl
sub
dec
jge
faddl
popa
jo
mov
cmpsb
scas
pop
out
or
add
fidivrs
jne
push
jl
ficompl
sahf
sbb
ret
sbb
adc
pop
cmp
popa
jle
inc
iret
aaa
divb
ret
ds
add
inc
xchg
rorb
mov
js
adc
sahf
xor
imul
push
fs
rolb
in
gs
xchg
push
out
aaa
ret
cmp
dec
xchg
mov
lret
test
mov
xor
loope
mov
std
cmpsl
arpl
cmp
jnp
jg
adc
fsubrs
ficoms
jno
mov
mov
cli
fldl
inc
mov
push
cli
jo
repz
xchg
insb
or
and
out
test
stc
add
mov
enter
sub
add
ret
dec
dec
bnd
mov
or
shrl
cld
xchg
sti
xchg
outsw
xor
inc
jae
push
jl
cmp
movsl
mov
add
or
xchg
xchg
xor
aam
insl
push
adc
pop
mov
in
cmp
sbb
sub
xlat
cmp
or
das
loopne
pop
ss
jae
mov
pop
jb
lret
and
cmp
add
mov
push
int
xor
push
cli
inc
jmp
ret
loope
push
mov
and
cmp
pop
mov
das
rclb
cmp
mov
loop
bound
cmp
xchg
in
and
aaa
lret
or
aad
dec
xor
fmuls
in
push
mov
sub
aas
xor
addr16
ljmp
dec
push
sub
inc
clc
xor
sbb
mov
enter
jl
mov
aam
mov
jg
insb
jns
xchg
mov
lcall
dec
adcl
push
pop
add
test
jle
or
add
sub
rol
mov
repz
popa
ja
stos
call
adc
lods
push
xor
xchg
roll
repz
push
sbb
loop
lret
rcl
insb
dec
push
sbb
xchg
xor
sub
hlt
jle
adc
add
sub
or
test
jl
sub
aaa
push
mov
xchg
inc
into
push
lret
rorb
jb
dec
fimull
bound
shrl
cmp
mov
lcall
mov
hlt
lods
das
push
and
ds
scas
and
mov
les
xor
inc
push
or
add
mov
dec
jle
mov
insb
xchg
rcrl
into
xlat
or
mov
clc
loope
mov
outsl
inc
lods
xor
push
push
ret
push
inc
arpl
test
push
mov
cli
jl
mov
dec
les
pop
jmp
mull
adc
das
jne
lcall
push
or
cmp
jnp
mov
xor
fsubl
and
fnstenv
xchg
push
gs
inc
sbb
movsl
or
negb
add
punpckhbw
push
mov
push
cld
push
das
movswl
decb
js
std
inc
addb
lds
lret
stc
push
out
hlt
and
mov
or
push
test
incb
ror
popf
mov
pusha
push
andl
scas
inc
aad
pop
movsb
pop
aam
not
xchg
clc
outsl
fidivs
popa
xchg
fcomps
dec
in
sub
clc
int
test
pop
xchg
pop
jmp
mov
and
mov
fisubl
adc
cmpsb
cld
hlt
add
repnz
dec
add
pop
adc
ljmp
ss
jmp
out
movsb
cli
nop
icebp
jg
cmpsb
and
and
out
hlt
mov
das
cmp
enter
cmp
or
jge
cltd
bound
ljmp
sbb
xor
mov
inc
jmp
adc
repz
stos
dec
dec
xor
rcr
pop
pushf
js
cmpsb
mov
out
fdivl
push
lods
imulb
push
xchg
sub
xchg
ljmp
pop
jge
cli
adcb
cwtl
outsb
out
aam
dec
je
push
pop
daa
inc
fucomp
adc
mov
xor
jg
mov
shrl
ss
push
insl
pop
in
mov
jle
inc
in
and
xchg
outsl
pop
adcb
in
and
cmpsl
enter
nop
out
jno
and
mov
push
or
ret
fidivrl
enter
stc
adc
mov
and
dec
ja
dec
in
mov
mov
cmp
dec
cmp
add
pop
cmp
xchg
jno
test
loop
add
fs
imul
dec
add
into
adc
int3
and
nop
imul
stc
mov
fcmovbe
lret
daa
aam
icebp
iret
test
adc
and
pop
push
adc
xor
pop
xor
xchg
pusha
stos
sbb
subl
repnz
aad
cmp
fcoml
inc
jle
ljmp
push
fdivs
idiv
lock
adc
aas
popa
sbb
dec
insl
xchg
into
jns
dec
and
sub
sub
imul
cmp
xchg
mov
or
add
rcrl
lcall
repz
or
mov
inc
mov
test
stos
insb
mov
inc
sarl
mov
call
aad
ss
test
adc
adc
sub
inc
scas
in
pushf
push
loope
in
cmp
call
mov
ja
fcmovne
xchg
push
cmp
xchg
flds
out
lds
bound
or
ds
cs
xchg
lds
mov
pusha
ljmp
inc
mov
dec
ds
push
out
xchg
mov
std
cmc
int3
test
or
pop
andl
stos
push
sub
in
add
mov
dec
stos
jns
pushf
arpl
xorl
nop
das
aas
fsubrs
mov
inc
or
lods
sub
mov
in
cmc
sti
fsubr
loopne
ss
pop
lods
pop
mov
mov
xlat
adc
pop
addb
jmp
std
lcall
decb
addl
in
jecxz
adc
popf
sbb
stc
adc
outsl
xchg
inc
mov
pop
mov
cmc
pop
hlt
popf
push
add
adc
fwait
jno
sbb
cld
cs
xchg
sbb
ret
outsb
aas
bound
loope
into
inc
sub
fs
scas
jmp
lcall
jae
pop
ja
inc
and
pusha
sub
sbb
out
push
jecxz
cs
lret
addr16
insb
lods
imul
aas
and
cmp
je
arpl
enter
in
and
scas
sub
in
pop
insb
popf
ja
jl
and
movsb
mov
outsl
les
test
mov
ret
dec
xor
test
jecxz
cwtl
xor
data16
push
mov
add
xchg
in
pop
movsb
scas
loope
fbstp
push
and
sub
pushf
lods
loopne
and
adc
test
mov
in
lea
loopne
jge
push
je
out
mov
inc
gs
sbb
cmpsb
test
in
rcrl
adc
jnp
imul
cmc
jns
addl
or
call
loopne
flds
subb
sbb
push
mov
pop
sub
cmp
call
push
popa
aam
outsb
outsb
xchg
xchg
rorl
jnp
negl
mov
mov
out
inc
sbb
test
fimull
jle
into
insl
mov
and
push
out
enter
xchg
test
add
adc
cmp
psubb
test
popf
adc
or
and
data16
cmp
dec
adc
arpl
or
cli
ljmp
adc
xor
lds
xchg
aam
mov
jbe
rol
int3
mov
dec
repz
jle
scas
push
insb
lods
mov
or
pop
mov
mov
add
mov
push
jmp
xor
jno
inc
adc
insb
mov
pop
in
lahf
xchg
cmp
mov
aaa
xchg
outsb
push
mov
ds
stos
pusha
cs
mov
das
jns
insl
sub
mov
inc
dec
xchg
lret
mov
lods
add
int3
mov
pop
add
inc
adc
ret
outsb
iret
stos
aad
cld
dec
jmp
mov
push
mov
outsb
pusha
add
std
mov
out
inc
pop
daa
jb
xlat
das
mov
sbb
mov
cmp
std
bound
jle
pop
mov
adc
xor
clc
mov
mov
cmp
arpl
insl
imul
insb
cmp
inc
rorb
dec
lcall
sbb
push
inc
outsb
sbb
push
loop
shlb
and
mov
add
cwtl
sbb
push
sbb
adc
and
out
or
call
movsb
add
stos
nop
and
mov
sub
push
mov
in
cmpsl
fdivrp
orb
pop
rcrb
aas
mov
inc
enter
stos
pop
mov
push
jmp
jae
push
cmp
or
ret
lret
adc
jns
dec
add
pop
mov
push
rolb
xor
and
fs
data16
mov
mov
xor
add
pushf
repnz
jns
sahf
sub
cmp
hlt
imul
sub
mov
pusha
rcrl
dec
sbb
lods
push
loop
mov
mov
push
cmp
add
jmp
mov
ja
mov
or
divb
push
xor
mov
aam
xor
cmp
das
cmp
jo
mov
cmp
jle
pop
daa
movsb
cmc
push
push
sub
mov
xchg
xor
arpl
movsl
xchg
stos
shrb
rcll
dec
dec
aam
inc
dec
push
cltd
jno
outsb
shl
shll
jo
test
and
fldt
aas
stos
addr16
sahf
mov
xchg
pop
lea
int3
jo
push
push
icebp
cmp
mov
test
xchg
push
jl
sub
jl
out
insb
mov
cmc
lret
dec
sti
and
rorb
and
ja
sub
push
fiadds
xor
add
bound
cmc
js
call
test
adcl
inc
je
lds
sub
mov
cwtl
repnz
jnp
ljmp
and
sub
sub
sbb
movsl
cmpsb
popf
xchg
jecxz
and
xor
xor
insl
push
pusha
shr
movsl
fildl
sbbl
cmp
add
inc
ja
aas
lcall
outsb
push
test
jge
dec
jo
cli
mov
xchg
adc
sub
sub
xor
dec
addb
xchg
negb
cmp
aas
adc
popf
push
pop
cmp
mov
cmpsb
rcrl
popf
shrl
add
cmp
xor
aas
sub
ret
or
std
je
movb
int
pop
nop
sbb
aaa
mov
mov
sub
inc
pop
cmpsl
pop
mov
roll
testl
adc
sbb
push
rcrb
inc
and
inc
shll
fimull
mov
pop
cmp
fs
xchg
test
arpl
cld
hlt
mov
loop
sub
add
mov
cs
jecxz
imull
mov
insl
xchg
dec
in
and
into
mov
mov
xor
sbb
jae
lret
jo
int3
out
in
pop
mov
sbb
mov
push
cld
mov
pop
xchg
inc
shlb
pop
add
mov
dec
shl
or
xchg
jecxz
adc
fs
push
jb
idivb
rcrb
hlt
ds
outsb
pop
push
mov
gs
xchg
ljmp
shlb
mov
pop
mov
sub
lods
sarl
popa
in
jle
hlt
les
or
mov
scas
pop
xor
push
cs
adc
sub
cld
xchg
je
push
or
cli
push
mov
pop
xor
or
and
xchg
insl
pop
ljmp
jno
push
lods
mov
jae
mov
xchg
ficoml
mov
pop
lock
cltd
push
fcmove
daa
push
repnz
jb
sbb
mov
add
cmp
orl
test
mov
push
mov
mov
adcl
xchg
xor
clc
movl
outsl
xor
test
sbb
out
add
in
sbb
xorb
scas
scas
imul
mov
insb
mov
sub
ja
adc
push
push
outsl
push
sub
es
mov
xchg
xor
hlt
xor
jl
push
mov
mov
or
xor
add
lret
mov
addr16
idiv
hlt
into
xor
ss
cld
imul
scas
inc
push
pop
sbb
mov
xor
jg
dec
and
outsl
add
sub
rcrl
lds
aaa
jmp
or
add
add
test
out
lods
sahf
jbe
jmp
in
popa
mov
aam
inc
imul
ficoml
inc
sbb
jg
scas
mov
mov
and
mov
sbb
fs
repz
xorl
shlb
sbb
out
jmp
jmp
push
xchg
cltd
stos
or
movsl
imul
jnp
inc
sub
js
inc
push
xchg
cmp
sbb
movsl
push
lahf
ljmp
imul
rcrl
addr16
out
mov
ret
pop
cmpsb
loope
jle
mov
adc
cmp
pop
pop
cmp
pop
test
in
ja
jl
inc
out
push
mov
inc
je
sub
aad
out
daa
or
add
imul
xchg
inc
aaa
cmp
fbld
mov
mov
or
or
cmp
outsl
or
loop
xor
repz
jmp
xlat
and
dec
int
cmc
ss
cmp
fisubrs
gs
cmp
and
xor
fisubl
adc
sahf
stc
xchg
popf
and
xor
lea
and
push
add
and
push
add
lock
cmc
inc
scas
data16
cmpsl
fiadds
aas
jb
lcall
push
fstpt
loopne
in
jmp
in
lret
ds
jge
rorl
outsl
aaa
cmp
cmc
mov
js
out
fidivrl
fdiv
cmpsb
pushf
cmp
sub
es
jae
adc
push
call
push
inc
popf
dec
cmp
xchg
dec
ds
sarl
nopl
mov
mov
xor
lds
push
dec
hlt
and
xor
mov
inc
and
cmp
icebp
pop
sub
stos
lret
notl
stos
xchg
lds
psllq
add
sarb
xor
fisttpll
xchg
jnp
shll
mov
add
cmp
sub
cmpsb
push
sub
mov
pop
test
xor
lahf
xchg
sbb
aam
or
into
sbb
or
decl
dec
and
aam
or
lods
loopne
outsb
fildll
mov
mov
mov
or
mov
mov
inc
lds
enter
sub
pop
mov
xor
in
cmpsb
xchg
xchg
inc
mov
mov
addr16
push
inc
dec
sub
adc
psrad
lods
fwait
cmp
xchg
cmp
out
sbb
repnz
cmp
ljmp
mov
xor
adc
cmp
inc
insb
adc
pop
mov
in
mov
or
xor
orl
add
ret
mov
mov
dec
adcb
hlt
dec
lret
outsl
outsl
dec
or
push
or
mov
sub
mov
cmp
jmp
add
hlt
dec
xchg
push
lods
test
es
addb
imul
inc
bnd
xor
in
xor
leave
push
fmuls
xor
dec
cmp
pop
repnz
aam
push
mov
icebp
dec
int3
adc
jg
xor
repnz
fdivl
std
fnstsw
inc
inc
and
add
sub
push
fisttps
imul
enter
dec
rol
andb
jne
rcrb
decb
std
scas
adc
jmp
jno
adc
pop
inc
ja
inc
cmp
addr16
dec
or
rolb
lock
fldt
and
nop
dec
insb
push
jne
shll
pop
xor
hlt
dec
pop
mov
aam
add
pop
pop
data16
push
lods
mov
stos
jne
cmp
test
and
scas
ljmp
xchg
sbb
call
pop
loop
dec
fldcw
movsb
mov
stos
je
jle
fstpt
jno
lods
push
subb
std
out
imul
pop
rol
mov
clc
mov
xchg
inc
js
pop
in
mov
addr16
add
aam
mov
mov
mov
xchg
or
xchg
mov
idivb
sub
lds
gs
mov
jne
cmp
xchg
xchg
pop
out
or
or
jbe
mov
stc
dec
inc
lcall
imul
test
push
scas
or
xchg
ret
cmp
pop
scas
and
lahf
lds
ret
out
mov
adc
pop
loope
and
xchg
sbb
adc
loopne
movsb
cmpb
add
fisttpll
lcall
mov
enter
jb
mov
orb
sbb
cmp
jg
out
xor
jg
pusha
pusha
sbb
push
fistps
sub
bnd
std
nop
test
jno
scas
dec
and
enter
imul
dec
sbb
in
dec
fstpt
out
xchg
ja
add
sti
pop
test
je
adc
xor
push
dec
mov
xor
dec
mov
test
jge
ljmp
aaa
xor
xchg
pop
bswap
adc
fbstp
jns
fwait
mov
add
icebp
xchg
pop
arpl
sub
or
jnp
inc
mov
jne
icebp
test
clc
xor
fsub
pop
jb
je
adc
dec
lret
sub
aaa
pop
jae
insb
fimull
ds
mov
leave
cld
arpl
aas
sbb
sub
push
push
test
sub
outsb
xor
and
jge
lea
push
push
ds
out
imul
stos
cmp
inc
addr16
mov
jae
mov
enter
negb
ret
in
sub
jp
jno
or
sbb
in
repz
testl
xor
mov
nop
and
orl
vandps
xor
sub
sub
xchg
fisttps
pop
iret
ret
add
jbe
and
idivl
out
cmp
ds
int3
jge
sti
in
adc
fwait
js
mov
cld
inc
mov
adc
cmp
push
clc
sub
xchg
cmp
ja
push
mov
pop
sar
fidivrl
fiaddl
push
js
cmpsl
lret
aad
dec
jg
pop
inc
push
push
test
inc
jle
sub
cmc
shrb
cmp
sub
mov
loope
cmpsl
movl
imul
cmpb
cmpsb
mov
lods
inc
repnz
sbb
adc
and
inc
xor
jmp
xor
pop
lahf
mov
xchg
dec
dec
je
lds
fwait
push
xchg
mov
mov
mov
outsb
mov
lcall
pop
das
mov
jne
xchg
mov
aaa
lret
inc
mov
in
and
xor
ret
cmpsb
pushl
out
or
sub
mov
push
sub
insb
push
mov
cmpb
jns
insb
dec
pop
pusha
sbbl
adc
es
mov
filds
add
pop
xchg
jg
add
fcmovnu
push
xchg
arpl
das
das
sub
sbb
cli
xor
dec
fstpt
mov
nop
pop
mov
add
sbb
int
cld
loopne
cmpsl
inc
enter
dec
ds
fcoml
push
xchg
cmpsb
flds
lds
inc
inc
lahf
sbb
aas
addl
xlat
outsb
adcb
sub
in
daa
pop
mov
in
or
sub
mov
add
mov
int3
gs
shlb
or
mov
xchg
sbb
scas
cmp
xor
sub
movsb
pop
cmpsl
ljmp
push
xor
sbb
push
das
jne
push
sub
xchg
jns
fsubr
push
xchg
mov
mov
aad
mov
push
fdivrs
outsl
nop
mov
add
or
adc
add
or
pop
or
cmp
call
repnz
jl
cmp
test
xlat
inc
adc
adc
add
lahf
cmp
ret
orl
push
sub
adc
mov
inc
jecxz
sti
lds
and
sub
push
push
call
icebp
mov
bound
es
call
shlb
cmp
xchg
mov
or
loopne
je
je
jo
sub
data16
test
dec
jmp
sbb
adc
mov
addr16
rorb
push
lret
jecxz
cmp
dec
push
dec
dec
adc
shlb
pop
imul
cmpsb
orb
push
mov
test
std
lods
jb
sahf
pop
or
jbe
adc
pop
or
pop
xchg
int3
pop
or
mov
adc
int3
mov
dec
fldcw
movsl
dec
inc
imul
shl
pusha
mov
cwtl
sub
fidivl
outsl
loopne
in
inc
out
sbb
repnz
adc
imul
sub
imul
push
and
push
sbb
in
adc
rcl
stos
inc
mov
or
pushf
mov
push
add
xor
addr16
lods
or
out
pop
aam
inc
and
pop
xor
and
xchg
adc
inc
idiv
rcrl
mov
push
vprotw
or
sbb
inc
inc
imul
in
xchg
clc
mov
jo
cmp
cmp
outsl
mov
icebp
mov
pushf
add
ret
test
push
add
popf
insl
fldcw
xchg
stc
jno
in
lods
xor
mov
push
addr16
hlt
jmp
lea
sti
add
pop
inc
divb
or
dec
cmp
ds
stos
in
xchg
test
xor
lock
andb
clc
adc
inc
mulb
rclb
sub
fadd
pusha
fistl
xchg
stos
lock
jle
add
xchg
xorl
mov
fcoml
mov
popa
call
push
jp
out
out
xchg
rcr
int3
enter
outsl
fsubrs
shll
fwait
push
push
ds
jnp
sub
ja
loope
arpl
divb
pop
mov
mov
aam
inc
and
loopne
xchg
aaa
xor
aam
pop
in
bound
and
int3
outsb
push
fnstcw
sub
mov
mov
iret
popf
inc
dec
xchg
mov
dec
push
jne
pop
insb
add
bound
inc
imul
mov
in
repz
hlt
in
sub
das
in
push
mov
loop
fildll
xor
imul
test
push
sbb
ss
push
insb
outsl
xor
add
es
push
cltd
leave
sbb
mov
fbstp
add
fsts
scas
push
test
push
mov
sbb
ss
pop
es
cmc
gs
lahf
jb
out
test
in
sub
mov
gs
gs
xchg
jl
scas
rcr
das
and
stos
pop
pop
es
ds
jae
mov
jns
js
or
jae
data16
cmp
ret
andb
xor
inc
shl
shll
repnz
cmp
nop
in
je
aaa
inc
and
and
mov
jns
inc
cmp
fwait
jns
iret
enter
mov
je
addr16
mov
sub
mov
sbb
jp
mov
js
aas
mov
cmp
clc
adc
les
cmp
bound
icebp
mov
rolb
icebp
enter
movsl
mov
in
add
dec
rcrl
pop
clc
repz
mov
pop
popa
fisttpll
xor
mov
dec
sub
and
cmp
mov
test
mov
lock
fcoms
mov
or
sti
cmp
sbb
rcrb
inc
stos
add
aad
sub
xchg
jbe
add
mov
scas
pop
adc
lret
add
outsl
movsb
in
cmovae
push
mov
jp
jp
imull
mov
loopne
int3
je
sub
inc
negb
dec
cltd
mov
and
dec
inc
and
sbb
sbb
addr16
stos
sub
or
mov
mov
cmp
or
cmc
into
xor
xchg
aam
adc
cld
int
mov
enter
mov
cmp
xchg
jmp
ret
lods
pushf
mov
cs
cmp
mov
aas
mov
mov
sbb
and
adc
daa
fsubr
push
pop
or
std
addr16
add
sub
pop
sbb
adc
jl
rcrl
into
aas
jmp
adc
inc
xchg
pop
clc
fdivrs
addr16
xchg
xor
js
pop
aas
adc
jne
repnz
popf
inc
shr
mov
movsl
aas
sub
pop
sub
cmpsb
mov
in
xor
mov
jecxz
movsb
gs
enter
mov
repnz
lds
jbe
cmp
push
push
decl
cmp
mov
aaa
lret
les
lock
jmp
mov
mov
xchg
enter
or
ljmp
xor
test
lock
fmul
fisubrl
pop
and
arpl
test
xor
pop
push
pushf
or
outsl
xchg
xchg
sbb
lods
mov
cmp
sbb
in
imul
jp
jg
movsb
mull
int
shrb
xor
cmpsl
jmp
ret
mov
inc
sarl
iret
cmp
mov
jle
lcall
lods
fistpll
outsl
cmp
std
push
mov
mov
mov
xor
mov
cmp
dec
mov
xchg
jo
int
xlat
mov
and
inc
jbe
push
loop
mov
add
insb
leave
pop
lret
into
sub
xchg
lcall
sub
sti
movsb
xor
inc
sbb
mov
rcrl
inc
loop
mov
stos
ret
dec
int3
movsl
mov
push
movsl
xlat
pop
in
mov
in
daa
jb
sub
jl
add
mov
pop
sbb
hlt
fcompl
out
sub
cmp
in
sbb
add
jne
and
cmp
insl
iret
daa
jp
fsubs
jl
xor
and
sbb
or
scas
pop
insl
lds
push
cmp
in
cltd
out
in
mov
int
push
inc
imulb
enter
push
sub
aaa
jl
dec
aas
cmp
mov
cmc
jnp
mov
dec
cmp
lods
push
mov
sub
stos
xchg
sti
fisubrl
adc
lret
lahf
pop
mov
ss
outsb
fucomp
cmp
jo
xor
add
cmpsl
inc
fidivrs
push
xor
sbb
xchg
jmp
pop
cmp
out
cmp
jb
dec
add
mov
adc
push
dec
or
or
xchg
fidivs
in
je
mov
stos
imul
ss
push
out
out
add
and
leave
pop
lods
xor
xchg
cli
sub
or
cmpsb
mov
cltd
dec
faddl
xor
jnp
popf
test
clc
stos
imul
sub
fistpl
mov
sbb
pusha
loopne
pop
adc
sub
bound
mov
int
inc
out
aam
lods
sub
daa
sub
sub
cwtl
int
add
cmp
iret
push
fdivrs
int
enter
addl
sub
dec
sub
sti
push
or
mov
pop
iret
test
int3
dec
cmpsl
movsl
xor
push
stos
and
arpl
inc
dec
pop
scas
push
jnp
inc
cmc
pop
jp
test
imul
pop
mov
push
mov
xchg
mov
lock
sub
test
fbstp
cs
arpl
cmp
adc
pop
loope
aaa
jecxz
push
cmp
in
sub
lods
jae
push
lods
lret
xor
mov
xchg
and
call
push
push
imul
jmp
mov
sahf
mov
jo
pop
push
dec
push
and
sub
adc
ret
mov
sub
cmpsl
loop
add
int
aas
xor
stos
or
dec
mov
je
inc
pusha
and
sti
pop
lods
xchg
add
bound
mov
cmp
sub
stos
out
xorl
in
cmpsl
push
loop
mov
ja
dec
imul
les
shrl
jge
and
arpl
lcall
cli
xchg
mov
mov
int
push
xchg
xchg
push
mov
aad
mov
add
push
push
push
inc
dec
mov
push
sti
inc
cmp
mov
popf
les
dec
stos
push
pop
test
cli
inc
iret
mov
cmpsl
mov
test
mov
push
sbb
adc
notb
ficoml
push
add
pop
sbb
xor
xchg
addr16
test
mov
data16
sbb
addl
mov
fmul
sbb
jp
test
pop
aaa
mov
mov
fnstenv
sbb
inc
cmp
sar
inc
out
adc
or
icebp
push
sbb
movsl
pop
jge
xor
pop
push
fwait
ret
and
out
push
or
addl
add
iret
loopne
adc
clc
inc
jp
xchg
mov
outsl
inc
mov
dec
mov
lods
leave
arpl
shll
cmpsl
jmp
xchg
data16
je
in
aaa
js
mov
in
mov
dec
je
adc
daa
repnz
push
bound
lahf
xchg
push
adc
icebp
cwtl
xchg
inc
and
sti
repnz
dec
pushl
xchg
fiaddl
jg
and
jbe
rolw
push
xor
insl
xor
daa
orl
xchg
rorb
fisttpl
outsl
inc
outsl
pop
out
sub
push
loop
push
sbb
inc
push
lods
push
bound
sbb
xor
ja
in
cs
icebp
lea
push
cltd
mov
push
roll
fisttpl
adc
jns
icebp
push
mov
aad
and
and
sti
sub
xor
cmc
pop
xchg
sub
push
leave
outsl
jns
hlt
int
pop
stc
ss
and
mov
ficompl
fwait
adc
out
xor
xor
jl
cmp
repz
aam
outsb
mov
scas
cli
adc
and
cmp
nop
int3
add
push
mov
push
mov
push
cltd
add
test
cmp
dec
subb
out
sbb
imull
jo
les
aaa
dec
in
pop
cmp
ds
push
enter
jbe
inc
movsl
out
cs
fdivs
stos
pop
fwait
sti
sbb
jae
dec
pushf
mov
addr16
push
mov
imul
mov
cmp
ficoms
cmp
mov
outsb
js
inc
sub
clc
je
inc
jmp
ficompl
mov
cmp
movsl
cmp
nop
ja
es
lods
mov
xchg
xchg
xor
lret
add
jnp
xchg
mov
cltd
cwtl
push
ret
or
cmc
aas
ss
push
and
or
inc
dec
sub
cmpsb
mov
mov
ljmp
sbbb
mov
mov
and
sub
enter
and
jo
jb
leave
pushf
call
xchg
jmp
ret
loopne
mov
pusha
xchg
int
in
dec
cld
add
pop
nop
fnsave
cwtl
jne
mov
cs
adc
cmp
pop
cltd
add
push
outsb
adc
imull
pop
ret
std
jns
mov
movsl
and
bound
repz
ds
pop
sbb
cmp
test
loop
xchg
fsubs
fsubl
push
out
push
cwtl
xchg
sub
je
or
sbb
and
outsb
pop
jecxz
clc
xor
push
lock
and
jl
mov
pop
jno
fcmovnb
iret
fistl
imul
jo
aas
lret
gs
fwait
repz
push
push
jnp
adc
and
xchg
es
hlt
pop
cltd
insb
cmp
scas
daa
iret
xor
fucomp
mov
or
insl
nop
test
in
pop
add
push
mov
gs
cmp
outsl
data16
popf
mov
lods
push
push
pop
rolb
pop
into
pop
sub
adc
popa
push
in
push
cmp
pusha
add
js
sarl
push
test
imul
mov
pusha
ja
aad
mov
sbb
mov
test
adc
int3
xor
aad
in
movsl
xlat
enter
repz
fwait
push
fbstp
clc
jne
jo
stc
outsl
xor
jns
jae
cmp
fdivr
sahf
mov
movsb
pushf
incb
imull
in
cmp
int
mov
movsb
xor
inc
fnstcw
inc
arpl
loopne
roll
jae
repz
dec
pop
sbb
sub
mov
rcll
sbb
add
hlt
mov
pushf
mov
lret
fwait
push
int
dec
sub
mov
call
outsl
and
lret
ss
xor
cs
shlb
frstor
xor
out
insb
pop
xchg
jnp
jae
cmpsb
jae
cs
pusha
repz
out
mov
divl
imull
xchg
xchg
jne
rolb
mov
aas
addr16
scas
mov
aam
adc
mov
fs
mov
rcr
lock
inc
adc
sub
aas
mov
out
jle
das
mov
xor
sbb
and
lahf
fsts
clc
mov
loope
sub
ss
lods
in
push
popa
or
push
outsb
mov
shl
cltd
shrb
sub
stos
ret
mov
jmp
jnp
cmc
add
insl
adc
add
in
das
aam
ret
and
in
mov
stos
int
add
orb
std
data16
mov
lock
adc
shr
mov
mov
lds
pop
insl
cmp
cmp
bound
jae
fldt
aam
and
xchg
les
jo
dec
sbb
shrl
popa
leave
add
push
pusha
lret
mov
test
ret
push
stos
pop
movsl
iret
sbb
rolb
out
outsl
cmp
icebp
setge
add
dec
out
shl
inc
jo
icebp
into
adc
mov
pushf
fs
xor
sub
lods
lret
inc
adc
jb
into
nop
jmp
cmp
push
cmp
les
jmp
mov
sahf
mov
mov
test
lods
adc
sbb
adc
mov
jle
inc
push
inc
std
cmp
inc
rcrl
imul
jp
cmp
call
stos
inc
push
jae
inc
push
xchg
mov
cwtl
push
mov
jnp
mov
popa
mov
test
fwait
add
repz
movsl
mov
ja
pop
inc
mov
push
dec
scas
mov
out
cmp
or
sub
bound
push
shrl
sub
ljmp
out
jle
aam
das
pop
ds
aam
in
in
mov
nop
xor
ret
out
faddp
fidivrl
pop
mov
outsl
cwtl
sahf
inc
inc
repz
or
addb
add
xor
push
daa
xor
mov
cwtl
and
cmovs
inc
dec
mov
or
das
ja
jge
gs
xor
loopne,pt
loope
test
sbb
cmp
idivl
imul
cmc
adc
cmp
sub
mov
stos
dec
mov
test
dec
mov
inc
je
das
mov
sub
inc
mov
cmpsb
push
call
cmpsl
or
add
adc
loopne
pop
scas
cmp
clc
shll
stos
adc
xchg
push
aaa
or
inc
stos
cld
cmpsl
pop
push
std
test
mov
xor
lret
cmp
scas
pop
shl
out
sbb
push
sub
and
call
inc
imul
test
loope
int3
lahf
aaa
xchg
mov
cmp
mov
adc
les
sub
mov
mov
gs
inc
in
lcall
out
add
enter
sbbl
stc
adc
sbb
mov
andb
mov
inc
call
iret
divl
cmp
sahf
js
daa
lret
imul
stos
sbb
loop
repnz
mov
adc
lock
jecxz
cli
lods
adc
cmp
aas
mov
push
outsl
jnp
add
cmp
icebp
jo
popl
dec
lods
loopne
adc
jb
out
cmc
push
outsb
cltd
xor
and
mov
test
jecxz
push
mov
jl
movsl
pop
sarb
sbbb
mov
scas
sbb
pop
aaa
bound
sub
and
cltd
or
and
mov
js
pusha
jns
inc
sbb
and
ljmp
or
and
shl
push
adc
dec
test
jmp
fbld
cmp
cmp
or
pop
adc
sub
stc
jae
jne
subb
xor
jle
adc
mov
add
test
or
xlat
adc
ret
pop
repnz
push
add
xchg
mov
stc
mov
lahf
pop
pop
in
rcrl
loope
dec
mov
or
and
dec
cmpsb
jp
or
sbb
and
mov
inc
xor
lret
fsub
fdivrs
lds
sti
mov
xchg
int
inc
jnp
mov
add
push
or
push
fdivl
push
std
insb
fldenv
jl
push
fnsave
lea
lds
push
adc
mov
addr16
dec
scas
sbb
cmpsb
outsl
int3
sub
xchg
add
sbb
std
call
loop
pop
push
adc
cmp
cltd
inc
lock
imull
sub
and
mov
jo
fwait
sbb
lret
or
dec
outsl
inc
loop
mov
cltd
pop
adc
cmp
mov
imull
inc
cmc
mov
fwait
in
xor
xorl
push
ljmp
mov
mov
mov
mov
lods
inc
jo
out
fiadds
stos
xor
popa
mov
pop
outsb
ljmp
dec
popa
mov
sahf
inc
mov
xchg
mov
pop
aam
xlat
cli
stos
mov
jp
lcall
xor
mov
jle
push
repnz
or
loope
cmp
inc
out
push
test
mov
mov
and
mov
dec
mov
push
js
enter
addb
inc
mov
std
sub
adc
int3
mov
repnz
push
iret
movsl
ss
fisttps
mov
sbb
insb
adc
aas
into
inc
je
pop
cmp
sub
xor
jae
arpl
mov
mov
andb
pop
mov
pusha
scas
pop
adc
mov
xchg
test
or
popa
xchg
and
jo
inc
cld
in
adc
and
mov
xchg
inc
cmp
movl
daa
mov
bound
inc
inc
add
in
xchg
xchg
and
cs
std
arpl
mov
mov
lds
jle
sbb
dec
push
cs
xchg
mov
dec
mov
call
xchg
rcll
pop
fdivl
sub
sbb
in
cmp
fcmovnbe
lods
mov
jae
sbb
movsb
dec
jmp
ret
frstor
adc
mov
test
imul
aam
out
xor
mov
mov
inc
xor
dec
cmc
dec
lret
add
xor
int
addr16
subl
mov
sbb
inc
movsb
sbb
gs
mov
adc
jp
data16
test
jo
lret
pop
mov
pusha
add
sub
xor
ja
gs
and
mov
mov
rcl
mov
or
jb
xor
or
mov
divl
pusha
mov
mov
mov
sarl
cmp
mov
jl
sub
ret
addr16
int
or
stos
pop
sub
sub
jo
sbb
mov
mov
clc
stos
popa
lods
hlt
iret
cwtl
test
add
repz
lahf
cwtl
jno
sbb
pop
adc
jecxz
xor
dec
xchg
jg
outsb
icebp
outsb
ds
enter
push
nop
sub
sub
ds
andps
call
out
mov
add
jg
inc
hlt
mov
dec
pop
jecxz
das
or
out
push
cmp
push
in
dec
scas
ss
lea
pmaxsw
jmp
cmpsl
cltd
outsl
pop
mov
leave
rcrb
jp
add
mov
les
or
mov
push
xchg
cwtl
aad
lock
adc
lcall
sub
cltd
xor
sbb
push
faddl
push
adc
sub
rol
add
rolb
xchg
outsl
daa
pusha
stos
pop
es
lods
mov
sbb
pop
xchg
jns
clc
in
xor
outsb
push
xor
stc
in
or
push
xchg
fldt
mov
mov
aaa
dec
loope
insb
mov
pop
mov
out
sti
lods
adc
enter
jmp
cld
inc
or
cmpsb
or
scas
lods
jb
call
push
mov
ljmp
jbe
lods
loopne
and
add
pop
fwait
cwtl
xchg
push
fwait
sub
std
xlat
pop
push
fsubl
das
adc
adc
pop
pop
pop
sub
and
cmp
insb
push
fidivl
add
or
lods
in
nop
ja
xor
int3
mov
xor
pop
test
pusha
insb
push
mov
xchg
adc
stos
or
mov
fsubrl
and
adc
sub
xor
in
lcall
std
scas
inc
add
mov
mull
xchg
popf
adc
mov
cmpsl
mov
shll
call
ficoml
and
bound
fwait
sbb
loopne
lret
popf
int
mov
push
push
sbb
push
mov
cmc
push
add
mov
scas
jns
cmp
xor
push
imul
push
push
loope
mov
loope
ljmp
insb
out
ss
ret
in
repnz
jns
mov
in
out
cmp
push
add
subl
rcl
or
movntq
cmp
iret
shlb
in
push
rcrl
jg
mov
inc
pop
cmp
add
cli
add
mov
push
xchg
mov
add
loope
mov
dec
icebp
imul
enter
mov
jmp
inc
xchg
test
shll
test
push
hlt
movsb
cmpsl
test
adc
lahf
sbb
pop
sbbb
loop
daa
push
jne
rcrb
dec
pusha
out
adc
scas
bswap
inc
sub
mov
pop
pop
xor
mov
xlat
lret
jecxz
mov
or
mov
imul
cmp
pop
ljmp
add
mov
test
and
xlat
push
push
xchg
and
scas
jae
mov
mov
fbstp
into
int3
push
xchg
xchg
stos
sbb
push
cmpsb
inc
dec
mov
or
dec
mov
movsl
mov
inc
stc
lods
inc
mov
dec
jmp
fsub
xchg
fisttpl
loope
xor
jnp
jo
pop
clc
pop
mov
daa
cs
dec
lods
cltd
ret
cmp
nop
int3
shr
std
sahf
stos
add
repz
or
cltd
mov
add
mov
fimuls
mov
jno
sbb
add
decl
jno
clc
cmp
pop
inc
cltd
xchg
push
outsb
cmpsl
fldl2t
xor
mov
int
cmpb
fistpll
or
push
rcll
or
inc
mov
jbe
xor
shrl
inc
scas
pop
lds
or
outsl
cwtl
int3
sbb
out
cwtl
aaa
adc
push
adc
mov
and
lahf
push
das
xor
inc
lds
ljmp
lret
adc
jmp
fsubs
mov
nop
cmp
adc
popa
mov
xchg
push
fst
test
mov
cld
pop
mov
fwait
mov
xadd
inc
sbb
add
outsb
mov
or
out
js
stc
aad
data16
out
jnp
inc
insl
push
pop
sub
push
mov
jmp
mov
dec
fld
sbb
scas
ljmp
mov
repz
adc
xchg
jb
xor
inc
sbb
mov
jmp
dec
adc
sti
cltd
stc
mov
push
cmp
xchg
add
push
xchg
adc
jns
inc
lds
cld
stos
sbb
xchg
imul
jae
mov
xorl
cmpsb
subb
dec
jmp
ret
rcrl
mov
jge
cltd
out
jmp
dec
and
inc
mov
out
dec
xor
ja
mov
insb
push
fsubr
loopne
or
imul
xchg
fildl
cwtl
pop
mov
dec
cmp
ja
ljmp
xor
xor
pop
pop
rolb
out
andl
sbb
lea
mov
cmp
movsl
or
pop
std
and
out
fs
outsl
add
push
mov
scas
dec
popf
adc
xchg
in
or
in
sbb
xlat
lret
xlat
sub
pop
ret
movlps
xchg
mov
push
push
xor
daa
outsl
arpl
or
mov
shll
pop
cmp
test
pop
or
cmp
dec
jns
mov
int
mov
push
dec
xor
setne
inc
or
push
and
xor
pop
fnstcw
dec
lea
loop
loopne
icebp
lahf
hlt
pop
pop
or
xchg
cmp
aaa
mov
sub
test
rcr
adc
xchg
bound
subl
insb
push
pop
rorb
mov
roll
push
jns
lods
jecxz
or
dec
lds
xchg
dec
inc
push
loop
std
xchg
in
sbb
arpl
sbb
pop
dec
stos
insb
and
fldenv
cltd
or
inc
or
sarb
movsl
mov
je
jbe
and
icebp
sbb
push
push
imul
pop
cmpsb
adc
ret
xchg
sub
dec
insl
call
dec
push
pop
hlt
dec
cs
movsl
outsb
scas
mov
dec
loopne
dec
add
xchg
ljmp
and
loopne
mov
test
pusha
dec
and
xlat
jmp
xlat
pushf
loopne
nop
popf
orl
pushf
lret
pop
shll
xchg
inc
stos
dec
sub
inc
sub
mov
pop
jmp
daa
scas
popa
mull
mov
in
lcall
lods
stos
or
ja
scas
mov
pusha
in
jo
shrb
add
add
and
or
in
fildl
xor
outsl
aas
fs
mov
pop
loope
adc
out
sbb
mov
sbb
push
mov
dec
into
sub
jbe
scas
cmp
fsubs
dec
or
mov
adc
out
mov
stc
mov
pop
mov
xchg
inc
mov
enter
push
pusha
lods
pusha
jno
andb
out
in
xor
or
cmpsl
jmp
or
jle
mov
mov
dec
faddp
inc
jae
in
test
pusha
xor
mov
ficoml
lea
mov
in
stos
outsb
add
enter
jns
jl
in
sub
cmp
sarl
cltd
and
loopne
clc
stos
and
subl
push
in
shlb
or
jmp
repz
rorl
cmp
sbb
dec
fnsave
jle
xchg
outsl
out
xor
dec
xorb
lahf
fildll
hlt
fisubrl
inc
and
jnp
or
test
jbe
jbe
call
pop
cli
pop
push
push
jno
ret
repz
enter
lcall
mov
rol
pop
sbb
add
test
es
insl
cmp
push
adc
inc
popf
fistl
and
pop
pop
cmp
xchg
inc
inc
adc
pop
cmp
cmp
sbb
arpl
inc
jg
decb
repz
inc
mov
sub
shl
aas
fiaddl
mov
lds
pusha
aad
gs
adc
jno
mov
jbe,pn
shlb
dec
jnp
lods
jne
dec
inc
mov
xchg
aas
notb
je
pop
dec
adc
sub
pop
shll
cmp
lahf
push
add
inc
cmp
pop
and
mov
push
dec
jnp
mov
adc
adc
out
aas
in
sub
frndint
lods
push
pop
pop
imul
shr
test
mov
push
fcomps
fmull
xchg
jb
rcrb
test
mov
jb
pop
test
pusha
sbb
outsb
pop
jge
lds
adc
lods
test
shl
jge
cmpsl
inc
outsl
add
add
add
fwait
movsl
lret
inc
sub
dec
sbb
xchg
adc
bound
subb
mov
mov
mov
xchg
and
sbb
mov
mov
sbb
fwait
xchg
mov
dec
scas
sbb
sbb
inc
mov
pop
or
or
js
add
cmc
jbe
icebp
ret
cmp
xor
aam
daa
test
loope
xchg
cmp
shrb
jae
fcoml
out
and
inc
adc
aaa
filds
inc
mov
mov
xchg
cwtl
mov
pop
rcrl
js
dec
dec
inc
and
fldt
insl
adc
fucom
sbb
pushf
and
stc
mov
popa
sub
adc
jp
les
jp
mov
pop
sub
pop
aas
incb
imul
jae
aas
mov
pushw
push
push
enter
notl
push
push
cmp
dec
adc
mov
xchg
out
test
pop
movsb
lock
sub
movsl
pop
stos
cli
stos
hlt
mov
call
mov
jg
cmpsb
or
inc
pop
mov
idivb
sub
out
cli
leave
int3
and
or
popf
movb
rcl
xor
iret
xchg
iret
js
imul
xor
fistpl
sbb
mov
jecxz
jo
js
sti
inc
dec
sbb
scas
int
dec
dec
mov
pop
cmpsl
adc
dec
imul
mov
mov
cmp
movsl
add
add
cmp
sbb
mov
dec
out
pop
and
pop
ljmp
xchg
mov
mov
mov
mov
jg
out
popw
mov
dec
movsb
sub
imul
jl
adcb
push
pop
sti
lods
mov
cmpsb
push
adc
and
inc
repnz
jo
mov
movsb
call
sbb
inc
add
inc
addr16
mov
jae
outsl
and
das
dec
cmp
popa
mov
addr16
jae
imul
mov
int3
add
daa
cwtl
cmp
xchg
lahf
gs
pop
mov
add
pop
and
or
imulb
jg
dec
dec
ficompl
faddl
and
lret
popa
arpl
xlat
imul
xor
add
jnp
pop
jae
push
rcll
and
in
in
std
xchg
stos
dec
jecxz
fistl
jb
inc
testb
push
loopne
popa
aas
jp
repnz
loope
add
arpl
jb
jo,pt
push
cmp
enter
loope
iret
jbe
lds
cmpsb
stc
mov
imul
rolb
bound
imul
lcall
xor
sbb
sbb
lcall
jae
inc
test
iret
and
adcl
je
xor
jle
loopne
push
dec
ret
enter
mov
leave
xchg
lret
pop
pusha
jecxz
sub
or
call
or
outsl
aad
faddl
mov
add
pop
ret
fcoml
pop
xor
cmpsb
inc
ret
aad
inc
mov
push
push
xchg
dec
jbe
cmp
mov
mov
add
test
out
add
or
mov
push
fcmovnbe
loop
je
jb
mov
push
sbb
in
repnz
mov
outsb
pop
mov
xchg
jmp
fs
aaa
or
jbe
shrl
sub
in
loop
hlt
fs
sti
xchg
xchg
sub
js
push
mov
add
sbbl
movsl
dec
call
incl
pushf
sub
mov
test
and
lahf
orb
jp
jnp
jl
outsl
clc
nop
adc
sahf
xchg
out
dec
sbb
mov
push
out
push
push
adc
dec
inc
dec
outsl
xchg
sahf
fistl
xor
push
sub
xlat
aad
out
cmp
xlat
xchg
jge
out
adc
xchg
xchg
inc
xor
jge
cli
les
and
or
out
addr16
fisubs
lods
xchg
ss
xlat
push
leave
popa
std
ljmp
je
cmp
std
xchg
cwtl
push
jg
in
mov
inc
and
repnz
inc
push
pop
add
add
jae
fbld
and
xchg
subl
sti
ss
jg
mov
pop
jmp
shll
clc
cmp
and
or
dec
lock
std
out
cmpb
hlt
xchg
call
and
adc
outsl
pop
xor
adc
xor
popf
iret
sbb
pop
movsb
mov
je,pn
mov
xor
mov
or
xchg
pop
mov
mov
mov
repz
xchg
inc
in
inc
dec
mov
stc
and
mov
imulb
xor
clc
shl
jo
mov
mov
clc
fldt
adc
out
fadd
push
repnz
aaa
cmp
adc
dec
das
add
jge
and
mov
sbb
dec
adc
add
add
dec
add
lds
xchg
sub
ss
xlat
push
jge
hlt
scas
ss
sbb
notb
inc
leave
ss
iret
add
mov
inc
add
pop
jge
addb
mov
push
ss
pop
push
mov
xchg
xchg
pop
pop
das
nop
roll
inc
lahf
inc
xor
inc
sbb
push
mulb
clts
mov
andb
pop
xor
sbb
pushf
fnstenv
cmp
cs
cmc
pop
arpl
fwait
into
adc
loop
enter
sti
mov
dec
imul
push
repz
xchg
pop
je
mov
push
cmp
or
pop
or
mov
xchg
push
addr16
jmp
mov
insb
mov
jnp
lods
mov
mov
in
leave
dec
mov
push
rcl
and
xchg
movsl
cltd
adc
mov
dec
inc
lea
push
mov
or
das
test
inc
jb
out
mov
insb
stos
sti
mov
scas
shr
data16
icebp
add
ljmp
jmp
inc
fists
call
or
sub
push
repnz
enter
pop
dec
cmp
fdivl
add
sbb
es
or
push
imul
popa
arpl
aam
movsl
gs
xchg
test
andl
iret
int
loop
dec
cmc
pushf
xorb
fsts
or
mov
icebp
jb
mov
push
icebp
adc
push
ja
sub
add
or
jl
xchg
xlat
outsb
push
sbb
fucompp
sbbb
push
sti
add
ds
popa
imul
adc
mov
xor
mov
mov
cmp
mov
incb
in
lahf
imul
fwait
pop
push
lcall
nop
dec
adc
mov
pop
test
sub
xor
rorl
xchg
hlt
ljmp
mov
pop
mov
rorl
arpl
pop
aam
int
mov
add
mov
mov
mov
mov
fldt
mov
mov
mov
ror
rep
sti
nop
rcll
clc
outsl
add
imul
and
jmp
adc
aad
or
into
add
subb
mov
pushf
push
jg
cmp
es
fadds
or
mov
lret
or
repnz
dec
pop
pop
imul
pusha
cmpsb
xor
shl
mov
divl
lret
mov
adc
cmp
sahf
ret
xorl
out
fdivrp
ret
icebp
adcb
mov
movsb
aad
sahf
jo
or
jo
into
adc
inc
ror
pop
sub
popf
pusha
mov
ds
sub
push
push
outsb
mov
out
mov
push
ss
sbb
std
mov
shl
jge
push
icebp
pop
int3
and
push
mov
notl
popf
mov
cltd
pop
repz
push
push
pop
jbe
in
insl
das
sahf
lcall
inc
lcall
xor
sbb
orl
test
inc
mov
add
xlat
int3
popa
das
lds
adc
mov
xchg
pop
dec
vpackssdw
dec
mov
jbe
enter
mov
gs
in
rcll
mov
cmpsl
cmp
js
lret
pop
mov
iret
mov
xchg
adc
in
cmp
sbb
imul
repz
cmp
in
mov
ret
dec
loope
mov
adc
jp,pt
imul
ret
rol
jnp
cmp
lods
iret
adc
int
popa
pushf
xor
push
lret
dec
scas
sub
nop
push
push
rcrb
adc
sbb
pop
and
mov
jle
loope
xor
cltd
ljmp
xchg
mov
add
arpl
cmp
and
arpl
cld
mov
fnsave
std
and
xor
lcall
jp
or
fisubrl
sub
jmp
imul
mov
add
cmp
out
popf
push
sub
cld
push
add
xor
flds
mov
adc
sbb
test
hlt
in
push
das
or
push
push
scas
int
mov
out
andb
testb
push
push
push
lea
repnz
sbb
mov
sahf
loop
clc
sbb
xlat
int
lods
and
hlt
xchg
ds
mov
pop
xor
popa
jmp
cmp
push
add
mov
shll
daa
std
and
mov
sub
add
fimuls
cmc
jecxz
jns
cmp
test
mov
cmp
sbb
cmp
xor
jle
sub
pop
pusha
fsts
inc
jp
sub
xchg
jp
loopne
jae
iret
push
sti
jae
inc
dec
loop
icebp
mov
repz
xor
pushf
fsubrp
mov
addr16
sbb
adc
push
insl
add
add
outsb
ljmp
shrl
xor
mov
jb
test
jmp
xor
cmp
xor
gs
inc
mov
push
pop
mov
imul
sub
jbe
push
xor
fmuls
imul
mov
sbb
fistpll
lret
push
mov
int
jae
xor
xchg
sahf
adc
lcall
add
sbb
add
dec
sbb
jmp
sahf
es
cmp
adc
add
insl
jb
cmp
dec
xchg
popf
add
bound
or
jnp
cltd
sar
das
jg
adc
loope
mov
pop
rcr
roll
or
hlt
xor
rcr
add
cmc
testl
pop
ret
sub
mov
and
push
js
push
pop
push
aam
test
arpl
test
fs
mov
fists
mov
mov
cmpsb
mov
lret
jo
ja
dec
inc
clc
test
adc
repz
out
fsubr
loope
sbb
mov
pushf
adc
subb
add
xchg
imul
cs
sbb
cmp
pop
mov
add
mov
sbb
sbb
aas
ret
clc
arpl
fwait
dec
addr16
pusha
adc
xor
jp
std
out
into
push
inc
ret
lret
les
cld
ss
aaa
insb
outsb
fs
pop
sbb
mov
aad
repz
jge
insb
gs
test
loopne
xor
adc
shll
popf
std
cmc
sbb
shlb
adc
in
ret
test
scas
cltd
or
ljmp
or
sbb
mov
mov
cmpsl
pop
test
xchg
insl
js
sub
mov
lods
andb
shl
and
pop
movsb
test
scas
imul
jmp
or
pop
dec
stc
xchg
add
pop
jb
ja
cld
dec
nop
mov
cmp
scas
mov
mov
add
add
inc
call
inc
jp
xor
xchg
clc
add
push
mov
push
push
notl
add
mov
and
inc
sub
out
sub
xchg
outsl
dec
sahf
or
bnd
or
ss
stc
or
add
cmp
test
repz
mov
inc
xchg
fmulp
iret
xchg
cmpsb
andb
pushf
fdivs
shrl
test
int
push
enter
outsl
inc
push
fmuls
daa
mov
pop
push
jle
mov
dec
xorl
aam
insb
mov
data16
clc
out
dec
cmp
rcll
les
ds
xchg
pop
dec
test
sbb
pop
aad
loop
or
pop
aas
fdivrs
loope
jg
test
and
mov
test
call
out
sbb
xchg
mov
out
add
mov
cmc
mov
mov
dec
fcomps
push
push
lret
stos
ds
les
cmp
mov
or
inc
or
in
orl
dec
pop
xchg
icebp
add
mov
jnp
jbe
sub
dec
out
push
in
test
and
mov
dec
or
jbe
out
into
xor
and
push
cmc
xchg
jo
enter
bound
outsl
loopne
push
jno
jae
dec
jb
inc
pop
out
lret
xchg
sarb
mov
fidivrs
sub
adc
pop
add
mov
lret
pop
fisubs
test
adc
in
in
sub
imul
addr16
js
inc
jg
dec
ljmp
add
ljmp
addl
in
cmc
push
adc
xor
dec
xor
loope
pop
lret
mov
adc
cmp
adc
mov
dec
loopne
cmp
push
xchg
dec
jb
pop
enter
mov
in
fs
ret
loopne
mov
fnsave
ss
test
pop
cmp
cmp
jge
add
cwtl
shlb
loopne
inc
mov
rcrl
lret
lea
mov
fmull
rcrb
pop
stos
push
ja
push
adc
shl
inc
xor
mov
mov
insb
out
cmpsb
std
into
xor
xchg
scas
push
cmc
add
sbb
adc
push
jno
fs
test
add
lods
mov
mov
fcomip
pushf
xchg
lods
push
fidivl
sahf
jne
into
outsb
fstl
push
jge
jb
testb
mull
add
call
out
xchg
jp
cltd
mov
popf
cmp
movsl
inc
or
mov
jae
in
sti
xchg
jmp
testb
mov
mov
fldt
mov
lods
push
jle
add
mov
pop
sub
pop
lahf
xchg
outsb
ret
pop
pop
mov
jno
mov
sbb
mov
enter
mov
cmp
add
jmp
dec
insb
in
mov
test
int3
mov
mov
sti
adc
inc
fisubrs
mov
pusha
addr16
es
sbb
scas
xchg
or
mov
mov
sub
nop
incl
fmull
aaa
cwtl
popa
fistpl
mov
roll
bound
std
jp
sub
mov
add
jno
dec
aam
or
imul
scas
sub
jl
inc
cmc
jmp
inc
inc
pop
out
lahf
dec
in
sub
cmp
push
rcrb
xchg
xlat
jg
aad
cltd
fs
push
outsb
mov
dec
scas
sub
add
jbe
sub
cwtl
xchg
jl
into
movsl
inc
adc
xchg
lcall
rorl
lret
jns
leave
sbb
xor
rcrl
and
les
jb
jne
sub
dec
aaa
jnp
lcall
cmpsb
xchg
pop
push
into
sub
jbe
nop
test
pop
xlat
jno
shlb
lahf
dec
add
sub
and
les
xchg
pop
repz
mov
xchg
cltd
cli
sub
push
scas
dec
cmpsb
loope
xor
lock
scas
in
iret
test
int3
add
or
ss
xor
push
cmpsb
shl
xor
popf
pop
lcall
call
sbb
movd
stos
add
mov
mov
dec
adc
movsb
and
lea
fstl
or
pop
jnp
pop
mov
xlat
lds
cli
loop
cld
xor
mull
push
xor
nop
mov
and
add
call
xor
and
sbb
dec
or
or
ret
fdivrp
loop
cli
sub
jle
push
ret
out
sbb
lahf
pushf
testb
xor
sbb
das
sub
dec
xor
jnp
or
shlb
cmp
icebp
les
leave
add
imul
add
mov
push
push
es
pop
popa
popa
int3
add
xchg
pop
mov
adc
mov
lret
and
sub
add
loope
push
adc
enter
out
xchg
ja
push
sarb
sub
adc
sub
sbb
dec
ljmp
testl
pop
xor
sbb
push
jo
adc
inc
mov
sub
mov
mov
rcrb
ss
outsb
jae
pop
xchg
sbb
test
push
or
xor
pop
jmp
and
jp
rclb
push
popf
movsl
leave
sub
xor
enter
iret
cld
arpl
sbb
jg
push
sbb
les
cmpsl
cmpl
and
mov
xchg
push
jns
push
scas
pop
leave
mov
xor
pop
xchg
sub
jp
cld
push
cld
dec
in
xchg
and
mov
ss
pop
lea
push
ds
fidivrs
lret
push
repnz
jg
mov
inc
out
pop
adc
data16
sbb
cmpsb
sbb
lds
jne
fwait
inc
mov
cld
xchg
xchg
imull
test
mov
ljmp
xchg
jge
icebp
xchg
pusha
test
xor
fldcw
lock
dec
adc
out
dec
push
lock
stc
mov
stos
mov
jle
xor
pop
stc
mov
je
push
and
jp
and
nop
jb
mov
lea
push
sbb
dec
mov
scas
hlt
repz
icebp
inc
addr16
stc
loope
xorb
fnstcw
and
xor
scas
mov
cld
sbb
fdivs
popa
xchg
clc
pusha
stc
xchg
out
mov
pusha
es
push
xor
bound
dec
lods
mov
pop
lods
sbb
dec
arpl
mov
xor
or
pushf
int
mov
xor
mov
aad
jge
cwtl
aam
push
pop
push
adc
cs
and
pop
cmp
rcll
mov
out
add
inc
sub
xchg
int3
imul
xchg
cwtl
cmp
or
cs
sub
pop
popa
mov
imul
repz
pop
pop
or
fadd
xchg
inc
lcall
lret
std
cmpsl
mov
mov
mov
ret
ja
lret
data16
dec
sbb
pop
notb
fucom
pop
fcmove
cmovae
push
popa
xorl
insb
cltd
or
test
push
or
sbbl
mov
and
out
xlat
mov
add
mov
lret
dec
das
hlt
mov
pop
xbegin
and
dec
xchg
testb
loopne
movsb
push
xchg
mov
pop
cltd
adc
pop
xor
arpl
in
pop
cld
int3
bound
icebp
cmc
test
push
imul
add
cli
adc
shr
jp
enter
pop
gs
inc
push
lcall
mov
data16
xchg
dec
sbb
sub
push
dec
push
jnp
addr16
es
sbb
push
cmp
scas
mov
lock
xor
notb
cmpsl
mov
xor
and
and
cmc
xor
in
and
jmp
mov
popa
mov
loopne
mov
xchg
fldt
imul
inc
out
sub
inc
adc
and
cmp
adc
jbe
stos
push
test
mov
cmpsl
arpl
pop
pop
in
cmp
popf
add
jg
lret
in
inc
mov
mov
into
dec
std
dec
cmc
nop
dec
fwait
mov
add
xlat
arpl
fs
jne
pop
pop
dec
ljmp
loopne
push
jbe
mov
sub
negb
jge
push
nop
stc
cmp
repz
daa
xchg
pop
inc
pop
xchg
sub
ljmp
gs
sbb
std
inc
cmpsl
add
outsl
sbbl
fwait
adc
mov
sti
inc
pop
adc
in
loopne
cmpsb
in
add
add
pop
mov
sarb
les
fadd
add
mov
push
cmpsb
data16
ss
and
xor
dec
lods
adc
rcrl
mov
test
xor
cmp
jno
mov
lock
jne
mov
lods
shr
insb
or
sub
mov
inc
cli
add
xchg
rclb
scas
xor
dec
add
out
push
inc
fdivr
cmp
stos
xchg
pop
mov
test
ss
add
shl
stos
inc
fsub
or
out
pop
jbe
out
hlt
push
cltd
sbb
sub
into
mov
mov
or
dec
pop
leave
push
mov
jmp
and
gs
xor
mov
push
test
into
es
loopne
push
push
es
mov
shlb
stc
xor
xchg
pop
lods
add
ret
imul
jo
fstpt
movsb
frndint
hlt
or
rolb
iret
and
movsb
and
and
and
sub
pop
mov
lods
shlb
imul
into
das
ret
dec
sub
xchg
cmc
pop
inc
stc
jns
xchg
cmc
sub
xor
dec
mov
popf
iret
xor
and
mov
sub
mov
mov
mov
pop
mov
mov
fwait
mov
pop
mov
push
mov
mov
inc
sti
xor
lods
les
popa
movsl
in
jg
add
adc
jle
mov
pop
add
sbb
outsl
cmp
cmp
and
mov
out
movsl
mov
call
xor
mov
mov
test
and
or
jp
jmp
or
ds
jb
cmc
mov
nop
cmpsb
imul
xor
jo
add
or
addr16
sub
pop
xchg
hlt
push
mov
lcall
cmp
jg
pop
stos
dec
inc
push
scas
push
cmp
mov
mov
icebp
stc
push
test
mov
repnz
das
test
pop
cli
adc
xchg
cwtl
or
sysenter
lret
jecxz
xor
push
adc
outsb
push
mov
cmp
fisttpll
mov
jmp
rcrb
or
adc
jnp
sbb
ret
mov
mov
in
out
repnz
cltd
adc
cmp
push
icebp
cs
push
sub
adc
fxch
mov
aas
jbe
fimuls
mov
cs
add
pop
xchg
dec
cmp
outsb
ret
mulb
adc
xor
push
addr16
jnp
mov
dec
inc
cld
cmp
pop
xor
cmp
jnp
sar
lds
jb
xor
ret
fisubs
mov
xor
pop
call
fdiv
out
add
dec
push
sub
and
mov
fisttps
ss
dec
jnp
gs
mov
addr16
outsb
mov
sub
mov
fdivrl
xchg
outsb
jmp
shlb
add
xor
fwait
and
sbb
xor
push
inc
test
mov
fldpi
gs
push
mov
mov
test
jmp
inc
lret
cli
jno
sub
mov
dec
mov
xor
pop
inc
mov
pop
add
mov
loop
add
movsl
mov
out
add
mov
cmp
xchg
std
pusha
or
mov
jle
add
js
lcall
aas
dec
pop
xchg
pop
shrb
mov
inc
sbb
add
je
dec
mov
rcll
ja
adc
or
in
icebp
leave
and
push
loopne
cmc
cmc
out
push
insl
fcos
mov
fmuls
cmp
cwtl
pop
aam
pop
mov
mov
adc
nop
cld
jge
mov
cli
daa
fstpt
repz
mov
into
xchg
testl
repz
cmp
lock
and
dec
icebp
outsl
cli
lods
dec
sbb
push
cmp
mov
sub
ljmp
mov
pop
aad
mov
ret
shrl
xor
xchg
rcl
cwtl
inc
push
sub
xchg
cmp
cmp
sahf
adc
rolb
dec
xor
mov
repnz
fisttpl
mov
out
hlt
jo
xchg
movsl
icebp
aad
lcall
out
sub
nop
movsl
aam
jne
out
out
xchg
and
in
int3
xchg
mov
sbb
push
jmp
fidivs
or
test
push
sbb
dec
cmp
jne
push
cmc
xchg
lock
mov
shrb
out
inc
mov
iret
leave
mov
cmp
push
dec
mov
andb
loopne
shll
aaa
add
sub
xchg
mov
mov
sbb
mov
adc
rol
in
int
push
xchg
and
mov
outsl
sub
lret
lock
stos
xchg
jb
or
fsubs
xchg
jmp
enter
subl
mov
lds
add
icebp
jg
shll
ss
push
adc
jns
int3
decw
mov
mov
cmp
inc
mov
rorb
out
fisubs
gs
adc
rorb
xor
daa
int
pusha
call
add
mov
sbb
xchg
fisubs
shlb
mov
fsubl
pusha
es
xchg
dec
push
mov
sbb
cmc
mov
rcl
in
push
and
out
add
sub
jmp
push
cli
stos
or
xchg
dec
jns
push
movsb
mov
addl
push
pop
or
popf
hlt
adc
cltd
subb
hlt
in
pop
divb
sbb
push
add
cwtl
sarb
mov
mov
data16
pop
out
mov
mov
fdivl
cltd
jmp
insb
pop
xlat
in
clc
xor
sub
sub
and
jge
jno
lahf
push
popa
mov
push
xchg
andl
inc
in
sahf
loop
jae
sbb
xor
test
fstpl
adcl
xlat
mov
stc
mov
inc
std
into
shrl
sub
fidivs
jns
inc
ret
sbb
mov
ret
hlt
push
sbb
push
mov
xor
mov
aaa
or
xor
lret
xchg
popa
movsl
push
push
cmp
sbb
cwtl
mov
cmp
inc
aad
sub
adc
cmp
jbe
xor
js
aam
mov
push
add
loope
push
jg
sub
loop
stc
fsubrl
pop
sub
icebp
jnp
add
mov
inc
stc
add
ja
je
jae
push
mov
fiaddl
dec
inc
repz
or
and
add
mov
or
inc
mov
mov
mov
idiv
jb
inc
xor
jp
js
int3
popa
xlat
push
mov
xchg
out
testl
push
loop
test
add
lahf
daa
stc
or
pop
sub
stos
nop
xchg
into
jl
push
xor
jl
popf
bound
or
mov
movsl
dec
and
in
sbb
outsb
or
shrl
push
ret
pop
sarb
test
loopne
jnp
add
push
loope
jnp
pusha
add
incb
pop
add
mov
sbb
pop
cmp
pop
sub
sbb
push
push
cli
pop
xor
xor
test
orl
call
in
sub
clc
dec
xor
xchg
enter
stos
xchg
in
lret
nop
add
pop
nop
mov
ds
push
push
sub
andb
test
cli
or
mov
mov
aaa
fsubl
or
cmpsb
clc
mov
xchg
jne
adc
add
xor
lret
out
jg
dec
mov
pusha
jbe
mov
mov
lahf
and
cli
adc
jl
push
cli
clc
and
and
mov
push
xchg
push
cmp
movsl
inc
icebp
sysret
ret
mov
mov
push
pop
cmc
shl
jo
bound
lcall
in
jb
icebp
rolb
sub
les
xor
sub
fadd
cmp
test
out
sbb
jnp
rcrb
movsl
sti
inc
sbb
push
loope
push
pop
fucomip
cmpsl
dec
pop
rcrl
jecxz
into
pop
mov
stos
int3
jecxz
push
mov
pop
ret
dec
push
enter
jno
jg
iret
fucomip
sub
cltd
pushf
movsl
and
mov
xor
out
adc
in
xchg
cld
xlat
dec
jnp
in
loopne
mov
push
adc
mov
xor
cs
daa
aas
push
dec
pop
aad
cmp
push
out
fiadds
push
mov
loope
vcvtusi2ss
rcll
shr
cmpsl
loope
cs
push
jns
jecxz
mov
stc
inc
pushf
in
jnp
insl
mov
pop
sahf
cmpsb
sub
add
mov
or
lret
pop
int
rcll
in
and
jae
mov
lahf
aaa
sub
mov
fnsave
out
dec
mov
cmpsb
mov
jle
cld
push
adc
xchg
pop
das
mov
xchg
lea
adc
ret
lret
in
push
add
incl
mov
pop
mov
cmc
lahf
psllq
dec
subb
lods
mov
ljmp
ret
rcrl
mov
cmp
insb
test
lret
ret
sahf
shlb
xor
push
sub
dec
cltd
inc
test
push
fwait
adcl
jge
push
jl
mov
lret
andl
push
sbb
shr
dec
push
dec
adcl
and
ds
adc
loop,pt
adc
in
jno
mov
push
shr
jmp
lds
cmp
cs
push
int
pop
icebp
insb
mov
dec
pop
add
lret
roll
sub
daa
insb
shl
mov
rclb
pop
and
ret
xchg
cltd
sarl
fisubs
int
out
int
or
adc
add
inc
aad
jmp
adc
mov
int
leave
push
stos
jmp
in
leave
jns
jge
push
mov
shrb
jne
stc
push
incl
sbb
popf
out
fists
push
or
push
pop
negl
cmp
outsl
adc
jns
std
inc
icebp
popf
push
pusha
enter
jns
add
das
jge
push
pop
dec
jns
sub
push
ffree
int3
or
mov
scas
jmp
aaa
inc
nop
lock
shlb
cltd
jecxz
sti
pop
xchg
push
int3
jmp
push
fwait
daa
lret
mov
or
das
jo
push
sti
jmp
leave
push
ds
mov
pop
es
mov
xor
cmp
fcmovnbe
pop
dec
stos
iret
adc
mov
xlat
dec
test
cmp
inc
push
mov
add
lret
or
div
test
pop
stc
pop
and
shl
test
repnz
and
test
mov
lods
jle
cs
jge
test
xor
pop
aad
jno
repnz
adc
mov
mov
adc
dec
adc
dec
mov
jge
lret
or
js
mov
ljmp
out
jns
mov
les
pop
loopne
xchg
inc
sub
xchg
test
add
fdiv
push
push
out
and
mov
out
out
or
add
jb
sbb
out
sub
add
dec
push
repnz
mov
inc
out
xor
insl
inc
int3
fsubrs
sub
cmp
bound
and
fs
pop
js
push
cmp
testb
into
movb
jg
clc
sbb
iret
loop
or
mov
xchg
andl
mov
aad
pusha
jl
or
jbe
cmc
inc
dec
inc
push
mov
test
xlat
lret
inc
movsl
pusha
sarl
sub
loopne
inc
mov
add
adc
push
dec
mov
imul
sbb
push
loop
lcall
fistps
xchg
mov
mov
movl
jbe
mov
adc
movsb
loope
or
dec
xchg
orl
dec
jg
sti
jo
test
test
mov
jo
mov
and
xchg
adc
popf
enter
andl
ss
arpl
mov
fcmovbe
jns
out
scas
jae
jmp
mov
aad
out
jno
test
sahf
ficomps
push
leave
addr16
outsl
inc
mov
mov
or
popa
cmp
pop
clc
adc
push
repz
popa
pop
adc
jo
cltd
dec
sbb
mov
fs
fimull
popa
int3
flds
movsb
inc
add
cld
icebp
rcl
popf
ss
iret
adc
or
sbb
jp
and
out
and
xor
inc
outsb
idivl
sbb
in
test
mov
clc
outsb
pushf
loopne
mov
pusha
int
loopne
xor
inc
mov
cmp
clc
out
test
mov
cmp
mov
sahf
and
jmp
cld
inc
iret
push
cmp
fwait
xor
cmp
sti
incl
movsl
dec
cmp
out
lods
adc
inc
push
lret
lret
jo
out
add
neg
je
clc
push
push
loope
adc
out
sysret
movsb
push
inc
cmc
xchg
bound
dec
sbb
pop
fisubrl
stc
ljmp
adc
mov
mov
and
test
jo
dec
sbb
cld
adc
pop
pop
xor
fisubs
xchg
push
push
jmp
xor
leave
mov
fmuls
loop
je
pop
in
mov
les
cmp
jns
popf
add
cli
inc
sbb
mov
xor
jo
insl
fadds
mov
mov
test
out
add
fdivr
ljmp
movsl
pop
cltd
pop
or
jno
adc
cli
mov
cltd
jecxz
loop
cmc
comiss
les
lea
gs
mov
cmp
inc
cmp
sub
clc
insb
adc
repnz
ficoml
add
pop
lahf
movsb
push
aaa
je
gs
jl
rcrl
inc
dec
int
mov
push
out
xor
in
test
inc
lret
cld
xor
ret
mov
leave
or
xor
movb
mov
jb
in
fildll
push
push
fcompl
fs
sub
jne
lea
sub
fiadds
lods
mov
inc
nop
or
loopne
or
cmp
push
pop
or
and
mov
adc
dec
and
cmpsb
pop
xchg
jae
arpl
dec
lock
sub
fadds
addr16
adc
fmuls
push
lods
sarb
scas
rclb
in
ret
cs
jbe
cmp
and
xchg
dec
xchg
jecxz
sbb
es
negb
xchg
lret
push
sub
test
mov
lods
xchg
cmp
adc
pop
or
adc
sbb
test
into
jbe
andb
sub
sar
int
or
adc
subb
stos
shl
fisubs
jo
mov
or
sbb
cmp
fdivr
in
mov
fcomps
pop
movsb
jnp
push
mov
stos
ret
pop
push
mov
xor
xchg
mov
lods
loopne
add
lods
push
push
xchg
cltd
imul
shrl
xchg
jo
orb
mov
and
sbb
inc
les
and
xor
movsl
inc
xchg
fwait
mov
jnp
xchg
cld
cld
or
or
outsl
sbb
lahf
dec
or
jmp
std
aad
dec
xor
sbb
jle
icebp
sub
mov
dec
cld
adc
aad
inc
pop
and
jp
enter
out
fidivrl
cmpl
rorb
aad
test
cmpb
imul
sub
mov
dec
xor
sub
negl
mov
pop
mov
pop
scas
outsl
xchg
sub
scas
addr16
add
xchg
and
push
pushf
pushf
stos
or
popf
inc
pushf
mov
push
aad
xchg
or
sbb
fwait
push
adc
loop
ret
inc
cld
jb
push
in
mov
push
cmp
or
xchg
out
lods
test
inc
xor
fwait
cmp
and
mov
rolb
pop
mov
add
xchg
popf
add
js
mov
or
cmovs
int3
sar
inc
push
or
jmp
push
iret
xlat
pop
jne
gs
jge
cmc
mov
clc
mov
loopne
jns
hlt
in
xorb
add
add
cs
ret
push
test
ja
xlat
mov
cmp
mov
sahf
cmc
lods
mov
test
in
sub
outsb
jb
in
adc
repz
lea
mov
xchg
lds
stos
sub
sarl
mov
jnp
ja
jo
fstpt
inc
test
mov
add
lret
jnp
cmp
sub
aas
int3
fimuls
or
dec
mov
or
cs
iret
in
xchg
pop
out
and
mov
cs
nop
mov
and
mov
outsl
pop
push
repz
mov
push
aaa
bound
je
jb
or
idivb
and
push
mov
pop
fidivrl
push
ret
and
and
stos
ds
cmp
lcall
add
cmp
inc
dec
idiv
or
cmp
test
pop
sarb
xor
sbb
sahf
iret
dec
loope
jp
inc
data16
out
out
xchg
cmpsb
xor
cmpsl
xchg
mov
push
fsubrs
pop
mov
shll
ss
je
ljmp
paddusw
adc
inc
clc
adc
jno,pt
cs
in
movsb
jge
cs
push
int3
stc
and
mov
aad
sub
adc
mov
es
in
pop
mov
push
out
inc
arpl
sbb
outsb
sbb
lock
inc
inc
dec
fadds
mov
cmp
adcl
xchg
push
push
jg
or
mov
push
cs
cwtl
xor
fsubs
mov
and
xor
mov
mov
mov
inc
ljmp
add
push
leave
inc
out
push
inc
insb
cmpsl
xchg
into
mov
xor
xor
push
and
cmpsl
pop
jne
test
push
fcomip
mov
xchg
lds
mov
sub
pop
inc
sbb
push
or
inc
or
jg
leave
mov
mov
push
subb
inc
add
in
popa
hlt
call
insb
and
jb
mov
push
mov
mov
stos
loopne
repnz
xchg
jl
jp
out
lock
xor
imul
mov
fstpl
push
dec
aaa
and
mov
je
and
add
test
test
cwtl
rcr
out
jne
int3
dec
or
cli
ret
icebp
insl
shll
ret
add
sub
icebp
out
mov
xor
or
push
jmp
inc
shld
das
sbb
push
lods
mov
outsl
inc
icebp
mov
popf
imul
push
jmp
test
pop
xchg
clc
add
divb
jno
or
fmuls
add
test
mov
sub
fmuls
gs
dec
fidivs
mov
test
pop
dec
pop
test
lock
sbb
bound
dec
jne
cmp
push
rolb
mov
pop
adc
mov
popa
dec
inc
mov
xor
xchg
xor
cmp
mov
mov
nop
stos
in
cmpsb
mov
sar
dec
std
imul
dec
movsb
lret
cld
sti
dec
xor
xchg
mov
sub
lret
arpl
lds
stc
out
mov
loope
adc
jne
and
and
movl
xchg
movsl
ds
xchg
mov
ss
pop
or
adc
pusha
pop
and
sub
adc
cmpl
dec
sub
fldl
pop
pop
rcl
sbb
pop
orl
and
xchg
fbstp
jae
mov
inc
aad
mov
xchg
xor
dec
and
pop
jl
push
imul
lock
shrb
repz
popa
es
ds
push
jb
mov
xchg
pop
add
mov
sbb
jle
scas
add
insl
or
lds
cmpsl
imul
je
mov
test
jmp
aam
pop
bswap
xor
adc
inc
bound
pusha
in
call
and
femms
cmpsb
push
fldl2t
push
lahf
clc
aam
cmpsb
dec
and
ret
stc
and
test
dec
pop
jge
adc
adc
cltd
fs
ss
ret
push
fisttpll
xor
mov
movb
jl
sub
push
jno
repnz
clc
pop
fistl
pop
push
inc
add
and
loopne
std
pop
cmp
push
insb
shll
or
test
push
jp
or
push
jnp
cltd
jge
mov
lea
cmp
dec
fs
sahf
inc
mov
xorb
add
cmp
push
aas
cmp
das
mov
add
sti
mov
mov
jp
sahf
leave
fdivrl
lea
leave
add
outsl
jb
mov
mov
aad
out
scas
daa
adc
test
lock
orb
lods
adc
add
mov
fs
add
loop
sbb
imul
jmp
and
mov
test
pop
mov
stc
add
test
cs
clc
test
hlt
stos
push
xchg
ja
push
jne
in
add
xchg
xor
hlt
push
out
pop
inc
pop
cmp
sub
inc
stos
mov
ja
fcmovu
sub
or
jnp
and
mov
xchg
or
cmc
cltd
sbbb
xchg
pop
shlb
pop
sub
add
rol
dec
dec
jle
ja
jmp
mov
or
popa
cmpsb
mov
xlat
ret
mov
int
and
lods
mov
leave
add
fildl
call
jecxz
jge
dec
mov
ljmp
fcmovb
and
pop
in
cmc
scas
fistl
push
xchg
rcrb
mov
testl
jecxz
sbb
cltd
mov
shr
jb
jp
loopne
adc
hlt
scas
inc
cwtl
dec
adc
mov
dec
xchg
mov
mov
aas
sbb
scas
stos
repz
xchg
shl
jge
mov
cmp
pop
mov
insl
test
mov
mov
pusha
lret
aas
insl
sbb
addr16
cmpsb
imul
cmp
out
sbb
mov
push
jl
lret
xor
add
pop
xor
bound
loopne
out
ljmp
pop
aam
adc
ret
repnz
test
sbb
nop
or
sub
mov
clc
scas
into
push
daa
mov
jae
xchg
inc
imul
rolb
or
fs
cmc
sahf
nop
cltd
pop
test
pop
xchg
outsb
andl
pop
ror
rcll
aad
imul
or
leave
hlt
jge
sahf
xor
rorl
call
stc
add
in
xorl
inc
pop
repz
fstpt
dec
add
gs
ljmp
fwait
dec
mov
lret
rolb
imul
add
ljmp
and
and
call
ja
add
mov
scas
xor
lods
pushf
pop
or
and
jp
je
adc
fisubrl
hlt
clc
and
ror
insb
pop
mov
nop
jl
sub
mov
mov
jmp
mov
sbb
sub
xor
or
dec
out
mov
in
jmp
pop
jns
dec
mov
sub
nop
jmp
mov
xchg
add
jno
decb
adc
xchg
mov
cmpsb
sbb
gs
ret
movsb
push
ss
dec
and
mov
mov
cmp
inc
dec
test
call
test
aad
call
cli
mov
xor
out
lahf
xchg
pop
cwtl
in
iret
jl
movsb
mov
test
repnz
pop
jecxz
sub
repnz
xchg
add
xchg
aam
in
mov
call
mov
push
sub
xor
push
sbb
mov
inc
je
sbb
pusha
push
call
jns
add
pop
cmp
inc
shrl
in
repnz
in
inc
push
out
loope
clc
inc
rclb
push
inc
gs
jmp
lock
in
shr
fstpl
xchg
dec
add
jae
push
divb
xchg
imul
or
jmp
and
fistpl
lret
mov
lret
in
push
mov
adc
jp
sbb
pop
jb
rep
inc
fcomp
add
xor
insb
mov
fsubr
jle
xchg
addb
out
cmp
pop
rcrb
sbb
inc
mov
and
jecxz
mov
xchg
push
lea
lods
push
push
stos
dec
fsubrp
outsl
dec
jno
jno
xor
clc
jb
out
and
out
jae
icebp
nop
clc
stos
jnp
pop
add
nop
js
cmp
out
adc
aam
sub
jecxz
add
xorl
sahf
jle
sbb
jno
negl
adc
mov
addr16
xchg
ja
pop
repnz
into
repnz
lea
pop
cmp
xchg
sub
repnz
and
and
dec
push
mov
loop
ret
scas
xchg
int3
and
mov
and
int
jo
movsb
xchg
cmpsl
enter
dec
shlb
mov
and
lods
lods
mov
jge
and
scas
jb
cmp
adc
setg
lret
sub
rcrl
dec
sbb
pop
cmc
aad
inc
jo
pushf
pusha
pop
out
cmc
lahf
insb
jnp
mov
scas
push
jge
xchg
xor
or
fwait
sti
mov
add
not
jp
mov
rolb
jp
fdivr
cmp
cli
iret
adc
fadd
negl
clc
push
fwait
push
inc
out
rcll
lods
sub
push
test
imul
cmc
mov
xchg
xchg
mov
xor
dec
fldt
pop
mov
stos
mov
bswap
shrb
or
mov
aad
lcall
jbe
add
cmp
or
push
cmp
fldcw
movsb
cmc
arpl
movsl
stc
mov
into
inc
mov
test
inc
mov
mov
dec
xlat
lcall
adc
mov
les
cmpsb
arpl
incb
add
mov
jge
movsb
cltd
sub
cmp
jge
jb
les
inc
adc
pop
fadd
adc
and
add
mov
sahf
xor
xchg
dec
cltd
dec
mov
fwait
xchg
xorl
push
fwait
push
mov
ss
jle
mov
pop
sub
lcall
leave
int3
dec
sbbl
adc
loopne
mov
lret
adc
jmp
outsl
les
dec
mov
dec
cld
testl
mov
inc
int3
adc
lock
pusha
sahf
test
out
sbb
cmpsl
mov
mov
mov
dec
stc
fstpt
mov
mov
lret
inc
mov
pop
sub
hlt
repz
push
xor
mov
pop
inc
sub
and
loopne
mov
cmp
fwait
sbb
mov
mov
cmp
shll
in
jns
mov
xor
mov
js
lock
adc
xor
dec
push
out
repnz
xlat
pop
movsl
outsb
adc
dec
and
xor
in
test
inc
jo
jl
call
sbb
adc
fldcw
add
int
cmc
xchg
mov
push
adc
xorl
sub
stc
sbb
ja
mull
in
adc
jmp
add
dec
adc
cltd
mov
inc
pop
pop
sahf
mov
sub
jl
push
test
add
mov
push
ds
dec
xlat
ljmp
xor
scas
test
loope
and
jp
cld
rcll
sbb
inc
mov
sbb
jnp
stc
push
xchg
ds
jg
and
and
and
cmp
sub
sbb
in
mov
push
pop
repnz
ljmp
pop
cs
ret
jg
sbb
sti
cltd
mov
jp,pn
xchg
out
jnp
jge
std
jge
shr
push
fimuls
push
stos
dec
mull
aad
mov
sub
bound
popa
mov
or
movsl
mov
push
loope
lods
cwtl
xor
cmp
outsb
mov
cmp
stos
int3
loope
sbb
rorb
and
sub
sahf
or
divb
test
cli
mov
adc
out
testl
movsl
inc
fs
jno
leave
inc
jle
mov
nop
stos
cli
dec
sub
cmp
in
mov
shlb
frstor
push
pop
cwtl
sbb
cmc
adc
or
push
sti
rcl
sbb
scas
movsl
outsb
mov
adc
movsb
pop
sbb
bound
ret
mov
inc
mov
dec
push
scas
out
push
fidivl
jge
and
bound
adc
adc
sub
icebp
mulb
popa
pop
out
mov
mov
mov
pop
dec
xor
fimuls
int3
sti
or
iret
pop
adc
lret
jecxz
inc
mov
jnp
lret
jle
in
xchg
mov
jmp
int3
es
xchg
push
scas
add
fwait
lret
nop
cwtl
xor
jecxz
call
or
lods
fcmovu
inc
adc
push
mov
sbb
pushf
gs
in
mov
mov
cmp
mov
mov
cld
fbld
lods
scas
sbb
aaa
inc
clc
mov
push
jae
enter
ret
mov
out
dec
imul
cmp
add
stos
lahf
pop
dec
xor
fldcw
ficoms
xchg
mov
mov
jb
adc
loop
loopne
stc
xor
inc
push
setns
push
inc
cmpsb
popf
mov
sbb
pop
cmp
and
xchg
jmp
out
push
or
pushl
pop
loop
xchg
push
xor
xacquire
inc
fsubrs
rorb
inc
adc
cmp
sahf
popf
xorb
sbb
add
xor
ljmp
ret
shrb
sbb
int3
push
into
mov
jl
stos
sbb
xor
in
pop
in
pushf
jbe
mov
cmpsl
push
add
jl
fistl
scas
mov
and
arpl
xor
out
stc
test
insl
inc
jecxz
aad
addb
mov
lods
mov
xchg
cld
inc
sub
loop
adc
daa
js
dec
pop
jb
in
ret
aas
shl
pop
movsb
out
or
dec
jbe
or
cltd
adc
int3
adc
mov
mov
and
or
cmp
nop
data16
pop
out
mov
call
cmpsl
push
les
daa
mov
call
cmp
imul
movsl
push
inc
int
mov
adcl
cmc
test
push
dec
lea
or
imul
sbb
and
subb
adc
fmuls
iret
lods
daa
xor
dec
jp
inc
lcall
loopne
jmp
cltd
push
jbe
pop
mov
out
addr16
push
loopne
xor
xlat
ja
sub
add
lock
xchg
repnz
sbb
xchg
mov
mov
sbb
jae
repz
imul
in
jecxz
or
dec
in
or
or
push
scas
adc
and
loope
xchg
xchg
scas
in
cmp
or
stc
xchg
add
and
xchg
test
call
push
test
and
xor
jns
sub
and
sbb
cmp
cmpsl
jge
xchg
stc
dec
rcl
movsl
fidivl
xchg
push
insl
fwait
and
inc
ret
or
int3
mov
mov
push
fldt
sbb
and
lock
test
lret
lds
xor
add
push
xchg
out
add
jge
xchg
adc
leave
das
cld
pop
jl
ficoms
and
outsl
push
loope
or
mov
lret
and
iret
adc
pushl
inc
mov
nop
inc
es
loop
mov
pop
or
push
aas
sarb
out
jbe
cmp
or
inc
andl
jg
lods
pop
or
movsl
mov
sbb
cltd
lock
scas
push
test
mov
jns
movsb
popa
mov
xor
in
lahf
imul
inc
rol
sahf
xor
ror
push
inc
mov
fidivl
or
pop
insl
in
jg
out
cmc
mov
push
push
pop
xor
inc
je
adcb
mov
cwtl
add
ja
and
cmp
push
call
mov
lock
mov
stos
push
outsl
push
mov
popa
iret
movsl
pop
andb
xor
xor
fimull
mov
test
xchg
cli
pop
mov
pop
out
mov
ljmp
mov
subl
jns
insb
loopne
outsl
add
aas
ds
mov
xor
ljmp
scas
push
mov
add
add
lret
arpl
clc
fistps
and
xor
cmp
add
add
jl
fimuls
movsl
xor
xchg
mov
in
jns
or
mov
xor
call
ljmp
loop
or
dec
mov
mov
adc
inc
dec
mov
nop
jg
imul
or
sbb
arpl
and
out
popa
add
sbb
push
mov
rorb
out
pop
pop
push
xor
lods
ljmp
mov
push
fs
sub
stc
sbb
sub
mov
test
ja
pop
jg
jl
push
sti
push
xor
aas
pusha
nop
sub
mov
mov
and
into
adc
popf
push
mov
lret
imul
lahf
mov
faddl
rep
jae
cmp
int3
xchg
fwait
rclb
mov
popf
pusha
mov
rcrl
sbb
xchg
cmp
dec
and
pop
popa
out
cmp
jmp
push
jg
xlat
jecxz
daa
push
aam
inc
jnp
pop
pop
out
push
adc
js
push
fwait
test
cmp
ds
mov
sahf
inc
mulb
daa
fstps
mov
cmpsb
lds
mov
xchg
in
cmp
sbb
test
xor
iret
mov
test
pop
das
xor
dec
scas
aam
pop
int3
pop
je
xor
imul
iret
out
and
xchg
sub
hlt
subl
inc
add
dec
bound
mov
iret
mov
fsubrp
aam
ljmp
mov
mov
pusha
jo
mov
inc
cmpsl
in
stc
test
movsl
loopne
outsb
stc
cmp
add
xchg
fnstenv
push
aam
inc
or
cli
mov
or
xchg
jg
insb
iret
pop
inc
orl
js
mov
je
mov
je
sti
addr16
int
stos
jmp
movsb
add
push
lods
sbb
sbb
lea
loopne
insb
xor
lahf
xor
cmp
and
lcall
and
inc
mov
mov
negb
pop
in
xor
fidivl
out
in
lcall
inc
cli
fisttps
mov
fcmovu
iret
jb
int
mov
call
imul
inc
pop
mov
dec
cmp
mov
mov
add
push
ss
xchg
mov
out
into
enter
into
or
sti
cltd
push
roll
negl
or
xor
ja
jle
push
mov
xlat
pushf
aaa
lds
dec
fildll
stos
cmp
adc
push
mov
pop
push
or
adc
inc
fdivrs
jae
sbb
fdivl
fwait
mov
aam
sub
sub
jge
mov
shl
mov
ljmp
out
jmp
popf
mov
jmp
pusha
cwtl
cmp
ljmp
ret
call
addl
inc
dec
push
shlb
cmp
ds
sub
lret
cmpsb
orl
sbb
add
or
js
js
jge
push
filds
jo
sti
xor
xor
out
lds
jae
sub
out
pop
adc
sbb
js
cmp
jnp
or
xor
cmp
fisubrl
push
jo
insl
test
aad
in
sbb
xor
out
xchg
js
sbbl
or
loope
aad
dec
push
mov
and
movsb
cli
jne
mov
mov
mov
jmp
pop
mov
out
insb
imul
mov
nop
sub
cmc
sbbl
aaa
pop
das
xchg
and
xor
cltd
bound
or
cmpsb
jne
xchg
mov
fisubrs
js
jg
lock
jno
fyl2xp1
out
inc
outsl
and
xor
repnz
pop
lods
outsb
or
lret
dec
push
mov
lret
out
mov
or
push
pusha
push
jp
or
add
popf
mov
fwait
push
int3
bsf
sarb
iret
cwtl
out
dec
lods
daa
and
jnp
cmp
lds
cmc
xchg
out
adc
cmp
sbb
cmpsb
sub
jmp
pop
inc
xchg
jb
pop
outsb
loope
movsb
out
xor
dec
or
jg
cmp
mov
pop
push
inc
cmp
fisttpl
sub
mov
inc
and
dec
sbb
mov
mov
and
push
movsl
sti
imul
cmp
out
jae
mov
mov
jo
in
into
dec
sub
sbb
fistl
and
aam
push
aaa
sbb
cmp
out
aad
dec
sub
mov
rcrl
insl
fwait
inc
pop
cmc
jne
mov
sbbb
out
sti
lock
xlat
add
js
movl
sub
jbe
ja
rcrb
call
cmpsb
std
mov
or
mov
in
add
jl
sbb
or
leave
imul
mov
shll
enter
xchg
sub
ret
xchg
scas
inc
and
jnp
jle
sub
out
sub
movsl
cmpsb
cmp
cmp
jo
adcl
sbb
je
inc
mov
sub
adc
lds
mov
mov
into
arpl
adc
sbb
pushf
iret
test
and
sbb
adc
mov
out
jns
jl
or
aad
int3
aam
repnz
or
dec
jbe
cmp
mov
popa
jle
xor
adc
ds
pop
in
pop
or
jnp
in
and
std
xor
push
sub
into
inc
or
idivl
inc
lahf
dec
loop
jnp
fwait
aaa
or
insb
aas
xlat
mov
popf
or
cs
jo
add
push
es
mov
out
inc
sub
adcl
and
fadds
pusha
ret
repz
out
jo
cmpsb
mov
pop
push
mov
xor
pop
mov
sub
test
push
push
adc
xor
mov
dec
pop
push
dec
mov
arpl
mov
mov
pop
adc
sub
xchg
pop
mov
or
test
pushf
outsb
mov
xchg
in
cwtl
mov
or
aad
ljmp
sub
leave
aaa
add
imul
fcoml
in
jge
jp
icebp
mov
inc
cmp
xchg
cmpsb
sub
aam
xor
push
add
xor
or
mov
test
dec
lock
ds
xor
or
cld
push
std
leave
out
pop
and
push
sbb
hlt
int
scas
ret
add
xlat
xchg
daa
hlt
xchg
movsl
fbstp
push
adcb
add
aad
leave
out
sbb
or
and
mov
stos
mov
into
imul
mov
pushf
mov
jmp
outsb
aas
and
inc
arpl
mov
xchg
test
jne
mov
mov
fcmovnbe
sbb
pusha
ret
or
mov
fucomip
dec
inc
pop
shlb
jle
aam
inc
xchg
sbb
xor
repz
and
test
push
sbb
addr16
fs
push
cmc
or
pop
xor
mov
push
mov
or
leave
adc
cmp
movsb
enter
push
scas
out
adc
ret
jno
push
add
mov
popf
scas
stos
xchg
push
fldenv
mov
sbb
xor
jg
insb
pop
pop
sti
lods
xchg
sub
mov
and
fdivr
xchg
bound
sarl
xor
sub
lret
push
gs
mov
or
out
imul
test
mov
xchg
mov
out
enter
push
inc
adc
vpcomub
pop
arpl
loope
test
repnz
inc
dec
dec
and
js
add
imul
lcall
shlb
sub
push
mov
mov
gs
cld
lret
movb
adc
in
pop
std
and
and
les
sti
mov
pop
sub
enter
pop
sbb
push
fwait
jb
stos
mull
mov
fdivrs
movsb
into
jns
ds
call
jb
aam
pop
ret
or
sar
in
mov
into
dec
push
pop
jae
call
mov
daa
dec
in
cmpsb
aad
call
cmp
es
mov
mov
das
lock
std
jo
jo
out
fisttpl
fidivs
adc
mov
in
sarl
imul
mov
cmp
js
pop
ret
aaa
das
inc
out
cld
mov
loopne
jo
and
inc
mov
in
adc
xor
aaa
mov
mov
pop
sub
and
std
adc
push
mov
dec
xor
scas
jp
mov
sub
add
push
int3
jns
loope
popa
jle
nop
dec
test
jns
sub
test
adc
sbb
hlt
xchg
dec
xor
xchg
sub
in
mov
aaa
fistl
je
and
aam
std
add
js
cmp
push
dec
stos
push
nop
into
xchg
aad
in
sbb
movsl
mov
cli
adc
loope
sbb
lods
lret
or
mov
push
adc
cwtl
mov
call
scas
inc
and
inc
mov
lock
cmpsl
push
dec
mov
shlb
gs
xchg
mov
mov
test
sti
lahf
xchg
jns
sbb
cmp
add
lea
jle
xchg
sbb
dec
lret
mov
cmp
xor
sbb
sub
push
mov
or
push
sub
jbe
xchg
out
or
std
pop
push
adc
aad
aam
addl
std
test
imul
xchg
lret
mov
push
repz
xchg
mov
out
or
sub
dec
adc
aam
popf
stos
dec
xchg
mov
testb
clc
dec
bound
cmp
push
clc
test
fwait
mov
int3
push
xor
popa
call
cld
inc
jecxz
mov
adc
pushf
jge
subl
in
add
ds
jne
or
outsb
jge
cmp
mov
test
shrb
or
fwait
incl
pop
int
movsb
and
dec
enter
sti
rcrl
cmpsl
adc
in
sbb
ret
roll
cli
cmp
sbb
jns
lods
movsl
mov
pop
stos
test
xchg
push
xchg
orb
push
or
xchg
sub
lret
xchg
xor
jbe
loope
fldl
add
push
roll
push
out
and
sub
xchg
mov
jecxz
mov
push
fs
scas
jle
mov
or
addr16
aas
pop
iret
fmuls
add
and
stc
xor
in
and
dec
mov
xchg
js
or
push
repnz
dec
push
xchg
inc
push
lcall
lods
xor
sbb
bound
cmpsl
scas
jno
inc
mov
add
xchg
scas
fcmovbe
xor
cli
stos
adc
mov
jns
insb
test
mov
sub
and
sarb
shrd
xor
dec
push
cli
mov
lods
or
lahf
xchg
fimuls
jb
call
mov
inc
dec
cld
add
lahf
repnz
xchg
inc
dec
push
rcl
xchg
sbb
das
stos
imul
add
cmp
mov
pop
sbb
adc
data16
xchg
es
stos
into
sbb
adc
fldcw
jb
jmp
addr16
mov
scas
repz
mov
test
inc
mov
sbb
insl
addr16
popa
in
in
aaa
into
stc
mov
cmp
cld
fmul
add
mov
xor
inc
adc
imul
inc
sbb
inc
xchg
imul
push
dec
xchg
inc
aas
inc
out
push
fadds
orb
mov
test
ret
push
xor
xchg
aas
push
dec
stos
int
xlat
loop
scas
xchg
lea
or
fdivr
bound
testb
lds
fcoms
ror
jnp
lds
mov
xchg
mul
mov
fs
push
xchg
jo
mov
xor
sub
push
movsl
xchg
test
loopne
fwait
aam
xchg
push
or
je
outsl
popf
cmp
dec
mov
inc
add
fnstsw
fwait
push
sub
ret
fildl
fs
cmpsl
dec
cli
scas
iret
sub
push
jb
or
aaa
adc
dec
push
mov
dec
inc
out
adc
adc
aas
hlt
sbb
data16
pop
nop
fs
xorl
mov
jecxz
mov
cwtl
sbb
or
add
stc
stos
pop
int3
iret
sbb
pusha
dec
lods
jl
and
adc
inc
mov
gs
mov
push
adc
xor
pushf
hlt
cmp
jmp
inc
dec
xor
insb
in
cs
rclb
inc
mov
jo
mov
cmp
das
and
and
stos
stc
popf
sbb
mov
mov
mov
arpl
mov
movsb
xchg
cmpsb
push
orb
jmp
or
into
pop
push
bound
mov
push
dec
das
std
add
adc
sbb
loope
and
pop
lcall
les
mulb
call
cmp
jmp
jle
xchg
icebp
push
xor
je
xor
fisubrl
les
clc
inc
clc
divl
iret
pop
push
xor
pop
pop
pop
jmp
lock
jno
jbe
je
push
adc
push
sbb
xchg
push
test
xlat
stos
sbb
daa
vshufpd
sub
loopne
push
or
clc
shr
loop
outsb
int
or
mov
dec
daa
lret
ljmp
out
aad
jecxz
not
mov
mov
imul
mov
movsl
sbb
sarl
aam
jg
push
sub
fs
mov
cmp
out
and
sbb
mov
fwait
jae
lock
int3
push
push
pushf
mov
sub
xor
and
jb
pop
adc
push
outsl
adc
inc
and
push
xor
cli
push
out
jnp
push
gs
add
lret
add
sbb
clc
jnp
roll
mov
subb
in
cld
iret
leave
pushf
cmc
sub
xor
jg
mov
cmp
pop
ljmp
xchg
arpl
lcall
xor
mov
mov
push
jae
or
and
xchg
insl
call
add
adc
test
ret
imul
jo
pop
xchg
das
rcl
mov
or
push
cwtl
and
in
adc
cmp
mov
sbb
data16
ret
mov
in
ret
push
add
sub
xchg
popf
mov
mov
lret
ret
lock
test
xchg
sarl
mov
cmp
push
mov
ljmp
pushf
inc
rolb
ret
xor
das
mov
jl
jmp
js
lcall
jb
dec
push
cmp
xchg
xor
sub
dec
insl
dec
dec
and
or
stc
fidivrs
inc
icebp
jle
cmp
fstpl
mov
mov
test
mov
aaa
fsqrt
shlw
and
mov
jp
push
arpl
lds
stos
pop
ret
sbbb
sub
adc
fldl
je
sub
imul
int3
aas
es
xchg
mov
arpl
xchg
ret
add
loopne
add
jbe
enter
mov
es
andb
dec
mov
ja
paddq
adc
jo
outsl
in
sti
mov
shrb
rcr
xor
sub
jl
dec
test
mov
jno
popa
mov
sub
cltd
call
dec
adc
out
mov
shlb
popf
add
add
in
jno
adc
frstor
pop
push
pop
jge
push
pop
sub
sbb
pop
in
movsl
sbb
lods
push
pop
mov
imul
iret
inc
mov
in
ret
pushf
mov
push
and
in
or
hlt
xchg
add
popf
push
pop
fnsave
std
mov
add
aas
roll
cld
aaa
aas
sbb
cmpsl
mov
push
rcrl
popa
pusha
add
lahf
and
incb
js
rclb
push
loopne
fdivrs
jp
or
scas
sbb
fwait
sahf
fsubs
rorb
xchg
dec
push
imul
dec
divb
sub
push
jbe
dec
cltd
nop
mov
mov
imul
mov
shrl
iret
or
fwait
insb
mov
sub
mov
je
push
mov
add
push
je
mov
pop
or
jno
xor
pop
sub
inc
pop
testl
cmp
inc
imul
shrl
scas
lcall
enter
jne
adc
lds
daa
pusha
bound
pushf
pop
pop
mov
inc
jge
cli
int
fwait
mov
insl
aam
inc
mul
push
pop
andl
imul
sarb
xor
sub
out
mov
ljmp
dec
iret
sbb
lret
mov
inc
jo
cmp
push
and
sbb
and
adc
into
push
pop
or
rol
push
in
cmp
int3
mov
inc
xchg
cltd
test
lahf
out
sub
loop
push
jp
int3
xor
scas
xchg
sarl
addl
not
push
sarl
pushf
xchg
outsb
loopne
mov
mov
addl
mov
or
mov
pop
xor
mov
scas
cli
cmpb
data16
adc
add
pushf
or
leave
aad
in
hlt
test
mov
pop
sahf
xchg
xor
mov
mov
aad
jb
jecxz
pushf
adc
lods
xor
jge
in
cltd
mov
add
mov
pop
jle
lahf
inc
lods
lea
jae
and
loope
push
movsl
roll
in
in
test
jae
xchg
call
xor
sbb
jns
add
fld
inc
sti
das
jp
pop
repnz
xor
push
mov
pusha
fs
xlat
inc
ss
dec
inc
pushf
jl
pop
shrb
inc
inc
push
jecxz
stc
jno
mov
pop
bound
sbb
mov
iret
sub
adc
sub
in
add
aaa
pusha
xor
fadd
cmp
mov
idivb
jmp
pop
mov
dec
dec
inc
add
xchg
int3
movsl
iret
loope
imul
stos
jmp
add
fdivl
push
lea
mov
xchg
pop
ret
xchg
incb
xor
or
jle
adcb
insb
shll
dec
push
lret
in
arpl
inc
into
dec
cmpsl
outsb
shlb
in
popa
cmp
fwait
test
xchg
loope
mov
sbb
fwait
bound
and
shlb
jecxz
insl
lea
mov
xchg
pop
clc
rclb
sbb
leave
pop
loop
subb
ret
mov
cmp
xchg
and
adc
push
shrl
mov
cld
inc
loopw
insb
add
lret
hlt
fst
test
jo
ret
test
mov
sbb
sbb
cwtl
mov
add
xor
ja
iret
mov
mov
call
mov
xor
imul
into
or
push
xchg
pop
idivb
cmc
or
sub
xchg
push
xchg
mov
inc
pop
push
fwait
out
mov
and
cli
call
mov
imul
xchg
adc
gs
sub
cmp
popa
adc
mov
aad
mov
cmpsb
push
out
or
xchg
jl
icebp
jnp
cmc
fldenv
addl
xchg
scas
movsl
and
loop
aam
into
dec
mov
sarb
test
arpl
repnz
dec
pop
cli
addr16
or
lahf
pop
push
lcall
iret
scas
dec
lret
cmp
xor
dec
jae
pusha
xchg
push
test
inc
into
lods
dec
and
inc
jb
into
sahf
cmp
or
mov
mov
jae
sbb
xchg
test
mov
int
lret
or
inc
shlb
jno
mov
call
mov
jl
dec
sub
je
mov
out
shl
test
dec
inc
popf
adc
in
loopne
and
mov
jp
je
ds
push
movsb
fisubs
fimull
mov
mov
pop
cmp
rolb
mov
andl
inc
hlt
insb
mov
jle
cmp
imul
inc
lahf
lock
and
stc
mov
push
lret
ficoml
in
push
xchg
sbb
add
mov
mov
push
adc
add
sarl
popf
out
sbb
or
imul
jo
mov
cmpsb
jo
lock
out
mov
imul
jmp
cli
push
and
loope
popf
adc
sarb
lret
imul
pop
and
sbb
xlat
xadd
pushf
scas
mov
sub
dec
dec
dec
out
loop,pt
pop
push
sub
pusha
push
mov
lea
sub
cmpsb
add
mov
js
fmuls
jmp
sti
or
int
mov
filds
pop
sub
in
push
xchg
mov
mov
outsl
mov
sti
enter
in
dec
pop
ret
push
push
adc
jo
in
or
mov
mov
inc
sbb
mov
shll
scas
mov
loopne
fmuls
xor
sti
mov
test
in
pop
xor
xchg
pop
daa
push
lea
in
mov
jp
enter
mov
ja
icebp
xchg
mov
mov
inc
hlt
es
arpl
pusha
sub
pop
mov
rorb
jo
and
incb
and
xor
pop
mov
inc
out
int3
stc
push
repz
ret
mov
adc
cmp
and
add
lds
out
push
jno
clc
add
xor
add
xchg
imul
sub
lret
mov
cltd
jecxz
in
cmpsl
pop
pop
and
inc
loopne
repz
cltd
popf
loope
xor
nop
in
xchg
adc
imul
imul
shlb
repnz
cld
sti
adc
adc
rorl
jns
lahf
out
cmpsl
push
clc
outsb
addl
pusha
sbb
es
mov
sub
inc
stos
push
pusha
movsb
fbstp
lret
dec
cld
and
cld
pop
stos
aas
stc
dec
and
cld
jg
aam
push
jns
inc
jecxz
in
jns
inc
or
sub
daa
call
movsb
xchg
ljmp
mov
jno
mov
adc
addl
mov
nop
orl
mov
aam
push
dec
repz
addr16
and
inc
pushf
jns
ret
mov
inc
inc
cli
movsb
ja
mov
sbb
inc
jmp
roll
fldenv
sbb
lret
lods
cmp
sbb
mov
mov
clc
out
xchg
mov
or
int3
jb
insl
daa
rcrl
cmp
add
sub
add
mov
add
fildl
cwtl
inc
cld
sbb
adc
cltd
out
mov
cmp
ds
into
je
aam
ret
fwait
dec
insb
jle
sub
jg
mov
mov
mov
add
jo
mov
add
roll
sbb
xchg
mov
mov
mov
out
push
popf
stos
fcomps
arpl
xor
mov
outsb
push
mov
std
ljmp
shrl
mov
jnp
loope
int3
push
mov
sbb
psubb
push
sbb
jns
arpl
lods
les
and
aas
mov
pushf
les
push
idivl
mov
jns
sub
sbb
adc
add
or
pop
negb
pop
xor
mov
xchg
incb
pop
inc
mov
xchg
orl
pop
dec
dec
fcoms
mov
add
les
out
inc
mov
stc
lret
fdivl
ficomps
je
ret
fwait
jno
test
xchg
push
mov
adc
rclb
stos
mov
pusha
aas
adc
push
pop
or
cmp
push
dec
shlb
mov
inc
das
and
aam
mov
das
jmp
loope
mov
mov
push
inc
dec
into
shll
push
in
lods
jmp
sub
pop
sub
jl
jbe
mov
mov
sahf
into
cld
xchg
lock
dec
jns
inc
lcall
aad
mov
and
sub
aas
movl
pop
insl
cltd
sbb
or
int
or
scas
subb
inc
or
lock
stos
inc
jge
inc
out
jg
sbb
push
sti
ja
inc
adc
out
xor
out
inc
test
insl
sub
mov
mov
cmp
imul
mov
jmp
loope
xchg
or
xchg
inc
ljmp
ss
aad
cmc
mov
xor
int
or
mov
scas
xchg
stos
add
scas
dec
sbb
push
sbb
dec
fstenv
dec
pop
add
imul
pop
gs
add
data16
or
add
jp,pn
xorl
jmp
pop
loop
mov
popa
scas
jmp
inc
imul
mov
dec
dec
cmp
movsl
or
push
cmc
scas
jl
fistl
enter
jecxz
iret
mov
push
subb
jnp
push
jp
lods
pusha
sti
repz
fs
lock
andb
lds
mov
in
adc
ret
out
and
pop
xchg
sbb
hlt
push
fiaddl
mov
data16
inc
mov
xor
pop
adc
sub
mov
cmp
call
int
mov
je
cmp
sbb
in
jbe
jne
shrl
push
outsl
dec
fcom
mov
pushf
icebp
mov
jp
jp
bound
repz
dec
incl
push
sahf
out
dec
adc
cmp
xchg
sub
jb
jno
gs
mov
mov
xchg
sbb
das
push
ret
xor
mov
lock
popf
lahf
inc
xorl
dec
fnstenv
xor
imul
or
adc
test
push
ret
inc
sub
xlat
outsb
sub
movsb
adc
or
lods
add
incl
pop
sbb
and
insb
lock
cmp
lods
cld
inc
mov
sti
pop
and
repnz
lahf
xchg
fildl
rorb
cmp
and
push
shll
dec
out
enter
push
dec
shrl
or
mov
ret
cmpsl
inc
rol
push
push
cs
fimuls
push
lret
push
jp
push
add
sar
sar
jmp
cld
out
inc
stos
xor
test
dec
daa
or
popf
out
add
fcoml
dec
mov
add
sbb
sbbl
xor
jno
mov
lock
jge
mov
or
sub
imul
scas
mov
mov
out
mov
shl
repz
pop
flds
sbb
mov
pop
arpl
cli
xor
fs
sbb
scas
push
xchg
ret
pop
and
or
push
add
jne
gs
daa
xchg
pop
clc
xchg
ds
enter
call
mov
inc
push
test
lds
pop
fwait
or
and
adc
mulb
pushf
test
sbb
jl
xlat
mov
ret
pop
in
in
inc
pop
sti
mov
push
sarl
pop
xchg
sub
jmp
cmpl
and
xchg
clc
nop
pop
icebp
enter
in
fildl
mov
jg
and
jnp
sbbb
xchg
pop
les
mov
addr16
xchg
xchg
push
jmp
sub
fstp
fwait
xchg
in
inc
pop
xor
xchg
das
popa
andb
paddsw
bnd
mull
push
bound
aas
ljmp
repnz
movsb
mov
lods
popa
ret
push
dec
mov
adc
adc
dec
or
adc
sub
add
popf
aam
sbb
xchg
sti
pop
in
push
loope
pop
movsl
mov
pop
cld
call
mov
cwtl
xchg
add
lea
mov
add
lds
inc
in
push
adc
stos
adc
sub
adc
jle
adc
orb
push
in
dec
in
jecxz
inc
loop
or
pop
xor
lcall
jg
hlt
cwtl
cmp
cmp
sbb
pop
je
mov
add
inc
adc
popa
nop
fs
xor
mov
icebp
bound
addr16
stc
gs
mov
or
mov
push
push
xor
dec
and
jne
int3
mov
jg
movsl
cld
fmuls
cmpsl
cli
mov
imul
ficompl
add
mov
inc
dec
or
and
pop
fs
inc
adc
jge
lods
in
shl
insl
sbb
add
mov
insl
push
adc
jmp
aad
cmp
or
aam
mov
repnz
inc
dec
enter
iret
lock
int
icebp
shll
and
shrl
xchg
iret
xchg
scas
sbb
int
xchg
cmpsl
pop
mov
jecxz
sti
add
xchg
notl
in
out
loop
xchg
mov
mov
mov
test
lds
cmp
mov
mov
pop
or
bnd
inc
push
pop
test
nop
fcoml
popa
mov
inc
sti
xor
outsl
cmpsl
cltd
scas
push
xchg
sub
cmp
xor
push
hlt
pushf
enter
enter
lods
push
mov
pop
repnz
insb
aad
push
lret
jo
aaa
into
sbbl
jo
movsl
or
leave
lahf
inc
jo
push
and
roll
sub
jb
lock
sahf
nop
and
push
pop
stc
push
in
xor
sub
lods
imul
lds
mov
pop
loop
inc
cmp
sbb
and
mov
imul
mov
xchg
stos
insb
test
inc
pop
iret
add
sbbb
das
sahf
xchg
hlt
sub
aad
xchg
loop
dec
fisttpl
push
xor
and
leave
lock
loopne
repz
adc
cmp
sar
orb
lret
mov
outsl
cli
shl
cmpsb
mov
pop
loopne
add
mov
call
je
sub
bound
loop
pop
shl
sub
lret
add
push
cltd
jnp
mov
call
sbb
add
lods
ja
in
in
inc
outsl
jge
cli
adc
loop
inc
inc
mov
lods
pop
push
jno,pt
sbb
fisubs
jbe
lcall
icebp
or
int3
push
rcll
popa
jo
es
sarl
push
or
leave
push
int3
shrb
lcall
call
in
jae
test
into
mov
push
fimuls
fnstenv
ret
jns
inc
xor
mov
arpl
inc
icebp
clc
mov
push
and
jo
hlt
out
lea
nop
xor
xchg
push
pop
fwait
push
lock
adc
negb
popa
jl
movsb
lock
pop
mov
cmpb
pop
mov
adc
repz
aaa
mov
gs
mov
and
out
je
push
out
xchg
xchg
in
mov
adcb
dec
aas
icebp
cmpsl
bound
push
xor
mov
test
es
stos
jecxz
loop
inc
pop
lahf
stc
repz
xor
mov
insl
mov
enter
aaa
into
insl
and
ficoms
lcall
adc
jb
gs
pop
push
sbb
pop
jecxz
mov
sbb
jp
xor
mov
into
mov
or
pop
mov
sahf
fidivl
mov
push
cmp
addr16
lcall
test
lahf
or
inc
ret
decb
stc
pop
sarb
or
xchg
repnz
mov
aam
ret
popf
jge
cmp
or
imul
cltd
lret
jecxz
rcrl
subl
repz
mov
add
cmp
mov
mov
rclb
lods
adc
or
lcall
or
lods
loopne
add
mov
inc
jo
jb
jg
dec
jo
lods
add
cli
lret
inc
jo
mov
test
nop
lahf
sahf
mov
out
ljmp
adc
pop
add
jmp
addl
mov
adc
scas
mov
pushl
pop
jl
sub
mov
aas
mov
pop
add
xor
adc
divb
cs
fsubrs
loope
decb
jle
adc
andb
cmp
mov
xor
cmc
mov
fstpt
ljmp
mov
pop
sbb
inc
mov
popa
pop
int3
test
ds
and
push
clc
mov
cltd
xor
mov
pop
daa
xor
pop
push
mov
pushf
hlt
test
dec
ds
int
lods
pop
leave
loopne
mov
and
push
test
mov
sbb
inc
shll
repz
jo
stos
or
pop
push
xchg
dec
enter
test
movsb
xchg
xchg
jg
inc
add
loope
inc
loope
cli
push
jo
and
imul
jg
push
pop
and
js
xor
xor
pop
aas
popa
or
dec
pop
mov
cmc
ror
fsub
jge
cmp
sub
xorb
shrl
ret
xor
ljmp
sub
inc
dec
jp
in
mov
jns
cmp
xor
shlb
cli
orb
sahf
pop
mov
xchg
jg
sbb
sbb
in
inc
jge
push
addr16
enter
xchg
lock
xor
xchg
sbb
and
push
dec
js
std
jb
sbb
push
test
adc
push
enter
mov
push
in
outsb
mov
out
loope
ret
pop
sbb
push
mov
bound
aaa
rcrl
mov
loop
inc
test
adc
fsubs
cmpsb
je
das
out
stos
jnp
pushf
xchg
xlat
icebp
jb
sub
repnz
sub
dec
xchg
pop
popl
fisubrl
and
stc
icebp
cmc
das
mov
popa
pop
adc
outsl
adc
jmp
xchg
arpl
push
jne
icebp
xchg
jl
mov
jl
int
movsl
sub
je
pop
popl
and
sbb
test
lds
pop
clc
hlt
sahf
sub
fsts
repnz
fimuls
push
sub
and
jge
mov
movsb
loop
rep
dec
adc
jae
jle
cltd
lods
popf
addr16
mov
enter
loop
test
push
mov
into
out
and
lret
das
sbb
sub
or
fwait
shll
into
dec
ficoml
test
clc
lods
adc
aam
jg
sbb
mov
push
mov
loope
lcall
push
pop
fwait
les
nop
push
add
cmc
rorl
xor
xchg
cmp
lods
dec
ljmp
pop
cmp
add
xor
jno
pop
sub
dec
pop
movsl
rclb
stos
and
rolb
push
cmp
sahf
jmp
xchg
adc
and
cmp
daa
mov
in
xchg
nop
cmpsb
add
call
dec
lods
test
inc
not
sbb
inc
or
mov
lods
mov
imul
inc
and
cli
adc
dec
xchg
mov
int
pop
pop
push
lods
es
jecxz
lret
mov
lock
pop
out
and
sub
fstpl
jmp
jo
jns
nop
movsl
inc
scas
pushf
mov
in
cmp
lcall
out
out
push
filds
push
cmpsb
xor
dec
mov
fidivl
in
or
cmp
inc
jge
push
jno
aas
clc
scas
stos
movsb
and
jg
mov
push
jecxz
jns
movsb
mov
lret
stc
popf
loop
pusha
popf
xorl
jle
aad
adc
xor
inc
pop
roll
in
push
lcall
sbb
daa
pop
jecxz
dec
mov
and
inc
xchg
cs
xchg
sbb
into
pop
jae
outsb
sbb
push
xor
loope
sub
lods
push
xor
jne
mov
push
mov
js
cmp
leave
xor
repnz
enter
lahf
test
inc
sahf
pop
repnz
mov
push
outsb
pop
call
mov
inc
cs
ret
sbb
or
jecxz
cmp
in
xchg
sbb
and
pop
bound
push
inc
lock
cmpb
shlb
ljmp
mov
pusha
push
push
clc
push
daa
xor
scas
ds
rcl
jbe
jno
jge
and
shlb
rcrb
xor
push
lahf
jnp
rorb
outsl
lcall
mov
mov
test
mov
fcomps
iret
or
dec
fisttps
sar
push
pop
dec
sbbb
xchg
adc
mulb
jmp
fisttpll
sti
mov
mov
mov
int
jge
mov
mov
mov
xor
insl
roll
add
aaa
std
mov
cmpsl
dec
inc
repz
jp
aaa
pop
push
notb
ds
fs
and
lret
scas
imul
add
dec
sbb
jmp
push
cld
adc
aam
inc
fsts
fs
xchg
mov
fmull
push
or
xor
pushf
xchg
out
adc
leave
loopne
mov
dec
fisubs
fs
out
adc
addr16
mov
adc
mov
adc
in
cmpsl
jmp
popf
cmpb
sub
lock
mov
sbbl
adc
adc
dec
mov
add
push
lds
mov
lds
imul
jmpw
xchg
andl
push
insl
or
insb
je
lahf
jno
pop
cltd
cmp
sahf
pop
inc
stos
jmp
push
in
cwtl
inc
insl
ja
insl
push
mov
xor
out
in
rorl
rolb
cltd
xchg
lea
mov
jl
lods
sub
sub
and
mov
lds
cmp
mov
rcll
jge
sub
out
jno
out
xchg
cmc
int
mov
test
call
sub
or
xor
lret
scas
out
sbb
mov
push
and
scas
cmp
mov
test
loope
repz
xchg
outsl
negb
and
dec
pop
xlat
xor
in
addl
stc
dec
and
mov
jns
xchg
pusha
sbb
xor
dec
rcll
in
pop
lcall
dec
or
xchg
daa
jmp
pop
in
int
or
sbb
mov
int3
inc
cmp
pop
inc
adc
orb
cmp
xchg
out
sub
add
cmc
xor
lahf
dec
into
imul
mov
cmp
repnz
mov
inc
sub
movsb
push
dec
adc
dec
sbb
adc
cwtl
pop
aam
icebp
ss
in
pop
pop
or
fs
push
adc
lock
xchg
xorl
push
sub
insl
mov
adc
cmp
adc
scas
mov
jo
xorl
add
xchg
adc
iret
dec
das
jp
pop
js
movsl
lcall
lock
mov
cmpsb
je
outsl
mul
mov
xchg
mov
pop
negb
shr
push
jecxz
fcomps
pushf
jbe
fucomp
jo
lea
sahf
cmp
xchg
lock
inc
scas
and
adc
mov
push
test
adc
stc
repnz
test
sbb
mov
push
les
and
jg
dec
enter
mov
dec
arpl
addr16
das
jg
xchg
and
or
ljmp
xlat
dec
rcrb
je
dec
push
xor
xchg
movsl
mov
push
inc
xor
push
insl
int
fisubs
in
jp
adc
stos
xor
push
mov
jnp
jb
cmp
xor
pop
mov
imul
mov
inc
je
insl
jnp
cmp
hlt
popf
out
mov
test
push
shrl
lods
call
shll
mov
mov
movsl
jge
sti
jns
test
jge
lea
in
push
addr16
mov
xchg
xchg
mov
sti
outsl
pusha
movsl
add
adc
push
gs
loopne
out
cmpsb
push
sub
mov
aaa
rorl
gs
mov
mov
xchg
stc
cmp
outsb
adc
ljmp
fs
insl
fcom
mov
jmp
push
sub
sub
lods
lds
mov
xlat
push
add
mov
pop
mov
jg
lret
arpl
and
pop
add
ja
push
das
push
insl
adc
stos
cmp
je
sub
test
push
pop
leave
add
jl
arpl
xchg
mov
cmp
or
inc
dec
or
mov
ja
jmp
mov
or
push
cwtl
add
jnp
out
fistpll
clc
js
dec
cmp
mov
dec
fsub
or
mov
mov
sub
sti
sarb
test
fs
pop
insl
repz
ja
mov
daa
xor
push
lahf
jno
lret
fimull
pop
and
enter
pop
push
frstor
pop
xor
subb
push
in
das
stos
push
inc
add
dec
iret
dec
orl
popw
fincstp
idivl
sahf
xchg
jge
out
hlt
scas
clc
out
cmpsl
sub
out
iret
jmp
jo
mov
aad
aad
mov
in
jns
in
outsl
int3
and
subl
jno
mov
xlat
mov
mov
push
addr16
push
add
mov
sbb
testb
lahf
adc
fidivs
pop
ret
idivb
jmp
int
dec
arpl
cmpl
outsb
sub
out
mov
push
push
cmp
int3
jno
xchg
les
and
and
cmp
int
mov
movsb
ret
test
sub
mov
aam
dec
fwait
ret
xor
and
aaa
jecxz
stc
add
jns
mov
aad
enter
push
xor
mov
in
aam
fwait
movsl
cld
xor
inc
lds
aaa
jmp
in
loop
mov
sub
outsb
mov
repnz
mov
fmul
xchg
roll
or
fdivrs
imul
inc
cmp
push
or
shr
lahf
and
mov
add
fsubs
dec
xchg
popa
dec
and
mov
push
push
fcmove
push
or
mov
imul
jmp
pusha
in
and
add
outsb
pop
pushf
cmp
shlb
xchg
or
push
lods
jp
and
and
mov
pushf
cmp
pop
rcrl
fisttpl
gs
and
in
and
mov
imul
jns
jo
mov
scas
ret
dec
sbb
pop
xchg
shrl
add
jge
cmp
jl
dec
mov
movsl
shl
mov
sub
add
jg
or
jmp
cwtl
push
mov
mov
stos
jns
rclb
mov
inc
es
inc
add
test
sbb
xchg
jae
scas
faddp
xorl
es
cld
into
xchg
repz
out
xchg
cli
int
pop
test
or
cld
imul
pusha
dec
dec
inc
movsb
popa
cmp
dec
sub
xchg
or
notb
fstl
es
lret
mov
in
lea
in
fdivrl
lret
xchg
mov
adc
adc
dec
jnp
mov
push
adc
aaa
mov
shlb
movsb
rcl
jno
test
mov
jnp
push
daa
in
fstpl
adc
or
xchg
jo
call
or
insl
orl
jne
loop
mov
fcmovne
mov
sbb
jo
mov
add
xchg
cltd
addl
into
mov
ss
fwait
xor
subb
lret
faddl
inc
pop
in
mov
shrb
es
mov
push
jle
mov
push
ja
fs
cmpsb
mov
cmpsb
scas
aas
adc
and
inc
lea
sub
sub
push
into
dec
mov
pop
adc
ret
and
addr16
xchg
mov
push
xor
dec
adc
pop
test
loopne
movsb
loop,pt
movsbl
mov
add
or
inc
movsb
out
cli
xchg
lret
push
and
push
outsl
xchg
pop
jmp
adc
clc
push
movsb
push
lret
dec
add
pop
das
dec
addr16
mov
das
add
push
xchg
xchg
daa
push
sbb
add
xlat
ret
std
cmpsl
xchg
sub
and
mov
out
jo
out
lods
insl
andl
rcl
hlt
or
sbbl
dec
mov
nop
jl
lcall
jp
adc
out
mov
cmc
dec
cs
push
and
lret
fldt
adc
jecxz
gs
jle
or
int3
ret
sti
les
push
jae
jb
cs
scas
sbb
std
ds
fisubrl
sbb
repnz
xchg
imul
xor
mov
out
dec
cwtl
stos
sub
addr16
js
mov
test
iret
pop
sbb
loope
aas
test
push
out
xchg
lods
loope
mov
pop
inc
dec
mov
fisubrl
sbb
jns
fs
mov
jnp
fs
dec
mov
jmp
lahf
nop
gs
add
mov
pop
pop
cmc
cmpsb
enter
jo
test
je
cmpsb
repz
push
mov
mov
mov
sti
mov
ret
dec
push
and
cwtl
push
cmpsb
jns
sub
pop
pop
lock
or
in
mov
dec
lods
sbb
dec
inc
xor
dec
rorl
push
aas
ja
das
fwait
pop
mov
stos
sub
das
out
xlat
test
stos
aam
add
rcrb
pop
repz
sti
or
stos
sub
add
mov
shll
aaa
mov
inc
ja
out
adc
lods
aad
addr16
pop
cltd
test
gs
xchg
pop
mov
pop
sub
jge
or
js
dec
inc
stc
sub
in
and
jge
push
or
sahf
into
mov
jne
mov
lock
leave
pusha
loop
xlat
aam
cmp
mov
xchg
push
int3
cmp
jns
clc
imul
and
fcomp
loopne
pop
push
fdivp
inc
add
cmpl
cmp
cmp
mov
cld
lea
fs
leave
inc
loopne
pop
repz
sbb
sbb
test
add
cwtl
xchg
test
cmc
fcmovb
inc
inc
inc
out
ret
das
xchg
ret
aaa
cmpsl
fiaddl
ljmp
ja
push
popf
hlt
aas
jmp
push
xchg
cltd
loopne
in
adc
mov
xor
rorl
mov
clc
sbb
jno
lahf
std
sub
fs
scas
fs
icebp
imul
mov
adcl
push
jne
cli
nop
int3
cmpsl
ja
subl
mov
jg
mov
fldl
out
mov
jg
icebp
js
mov
xor
xor
lahf
ror
popl
xor
movsl
xor
dec
sbbb
sbb
imulb
jae
testl
push
dec
in
in
and
inc
add
xchg
sbb
jo
popa
jo
repz
inc
stos
cmp
ficoml
lock
rorl
cltd
icebp
or
add
test
pop
pop
pop
xchg
xchg
xchg
adc
nop
push
jge,pn
sub
fmuls
hlt
and
lret
gs
aam
iret
test
or
ret
mov
inc
mov
aad
mov
xchg
pop
lods
popa
pushf
insb
xor
inc
nop
mov
jmp
or
pusha
xchg
dec
fcoml
and
add
out
mov
and
mov
xor
gs
loopne
subb
or
jnp
inc
sub
mov
dec
pop
in
xor
test
out
and
cmp
out
movsb
inc
add
inc
sub
ror
addr16
jl
sbb
dec
rol
sub
mov
push
mov
push
mov
mov
xlat
fs
pop
shlb
ret
push
sub
jne
jl
repz
pop
mov
popf
dec
add
jns
jecxz
mov
cld
add
repnz
jg
inc
jb
sub
fstpt
jae
ljmp
out
xlat
pop
nop
lcall
mov
adc
aam
fmull
aaa
fs
repnz
les
ljmp
jecxz
dec
iret
loop
aam
fcmovu
in
out
and
jns
icebp
mov
push
push
clc
adc
jns
sbb
mov
xorb
subb
cmp
daa
push
cmpsb
push
inc
mov
sbb
test
les
adc
pop
pop
hlt
and
lret
add
mov
xchg
js
xchg
ficoml
adc
stos
stos
movsb
push
shrl
mov
xchg
dec
sub
imul
dec
mov
pop
xor
cmpb
and
xchg
sub
mov
jb
imul
adc
push
cmpsb
jns
sbb
test
xchg
mov
imul
aam
pop
jb
sbb
sub
loop
push
mov
push
mov
out
hlt
lock
jne
stos
mov
cli
and
sub
pop
fisttps
out
loop
aam
in
mov
push
popa
jnp
ljmp
ja
cmpsb
pop
mov
dec
push
mov
movaps
jecxz
pop
cli
jae
adc
popf
sahf
push
ret
cmp
sbb
jp
adc
jns
fwait
rcrl
fiaddl
jns
leave
repnz
loopne
and
pop
sarl
and
jns
pop
jb
cs
scas
packssdw
mov
fistpl
rcr
and
jecxz
pushf
rcrl
aam
ffree
out
ja
jbe
adc
cltd
and
push
push
setbe
mov
or
in
or
fmuls
out
test
es
cmp
push
xor
push
xchg
or
call
insb
sbb
outsb
mov
dec
dec
insb
sarb
sub
inc
fldcw
push
jb
add
lds
arpl
insl
xchg
mov
sub
fmul
outsl
lret
cmpsb
mov
stos
repz
movsb
ja
fldt
popf
repnz
pop
pop
and
and
inc
push
xor
sub
lock
clc
cli
mov
stc
cmp
mov
and
imul
jo
shrl
fisubl
sub
cmpsl
dec
out
jae
arpl
lds
cmpsb
addb
jp
push
mov
std
cmp
fcompl
mov
fistpll
test
ficoml
mov
pusha
mov
inc
stc
sbb
inc
fnsave
pop
out
pop
lods
movsl
pusha
jp
mov
add
fcomp
ds
cmp
icebp
in
mov
fsubs
jno
inc
cmp
cmc
aas
lods
pushf
adc
mov
xor
add
std
and
or
jnp
outsb
push
repz
sub
testb
inc
lret
into
add
push
sbb
jnp
cmp
std
lea
rolb
cwtl
add
xchg
mov
sbb
push
push
and
or
or
ss
sarb
test
cmp
ret
adc
iret
fisttpll
stos
mov
fcomps
repz
out
add
jbe
nop
mov
sbb
incb
cmp
inc
and
rcll
test
rcl
pop
rorb
orb
jns
imul
dec
mov
mov
fcomip
cmp
orl
popa
lret
fsubs
fimuls
cmpsl
lods
push
xchg
mov
adc
push
inc
mov
shr
push
aad
inc
add
jle
mov
scas
out
fidivrl
pop
mov
daa
dec
inc
jo
cmp
lds
inc
push
pusha
pop
sbb
out
and
jnp
fadds
cmp
ud2
aaa
lea
loop
xchg
pusha
int
insl
adc
cli
pop
add
sbb
fcoml
dec
sbb
push
addb
pop
or
in
stos
and
ljmp
jmp
fsubl
mov
cmp
js
add
outsl
repnz
mov
jno
fcomps
popf
cmp
jmp
inc
dec
lret
aaa
xchg
jns
addr16
sti
and
in
or
mov
add
out
add
mov
mov
xchg
ljmp
lods
xchg
jl
ja
mov
pop
xor
ja
stos
dec
xchg
and
lret
push
lahf
xor
jno
cmp
add
ficoms
sbb
pop
cmp
lods
jno
bound
push
dec
in
out
bound
testb
jno
jle
cmp
repz
cmc
mov
and
movsb
jecxz
cmp
cmpsl
xor
out
lcall
es
cmp
mov
inc
xor
or
and
pop
pop
pop
test
fstpl
xor
mov
xor
aam
lods
pop
mov
push
cmp
mov
aam
fdivrl
mov
pop
mov
aas
aas
mov
js
mov
fstpt
inc
xor
icebp
jmp
divb
inc
stos
stos
stc
push
out
adc
mov
rclb
lret
cmpsl
fcomps
add
out
cld
push
push
in
pop
jno
inc
lock
repnz
or
inc
adc
dec
adc
ret
push
cli
xor
je
pop
mov
leave
int
bound
xchg
stos
mov
mov
add
int
jp
test
clc
inc
fsubr
nop
add
or
decb
add
push
loopne
adc
hlt
int3
addr16
or
jne
xor
lret
in
imul
sbb
push
pop
xchg
cmp
aas
test
dec
xor
shll
lret
dec
pop
mov
stos
out
or
fldl
mov
mov
movsl
pop
jle
cli
and
dec
stos
and
testb
adc
jp
loop
jecxz
int
movsb
xor
push
push
xchg
and
roll
andl
xchg
in
inc
aas
dec
mov
testb
mov
adc
cmp
adc
sahf
xor
inc
hlt
or
pop
gs
or
pop
pop
test
mov
cmpsb
insb
jb
fnstenv
push
std
data16
repnz
icebp
mov
adc
scas
push
add
jl
push
popa
mov
in
add
mov
mov
dec
test
pusha
and
repz
mov
push
cli
leave
jle
push
sbb
lock
or
fadds
xor
enter
mov
push
add
aad
leave
out
push
pop
adc
test
fdivl
lahf
dec
mov
rsm
iret
cmp
ret
rcrl
push
mov
pop
add
push
sbb
xchg
xchg
inc
je
jp
pop
cmp
out
ljmp
jo
dec
xchg
or
inc
clc
mov
insb
ja
out
stos
roll
mov
shl
mov
and
dec
push
and
xchg
inc
dec
jp
out
lret
sbb
push
push
pop
cs
cmp
aam
aas
sub
pop
add
mov
jp
xchg
adcl
pop
out
js
out
scas
inc
lods
mov
movsl
mov
mov
mov
jle
adc
stc
test
lret
fildll
rclb
out
scas
pop
sub
cmp
push
call
cmc
mov
and
ficompl
push
das
fcomip
insb
mov
inc
push
dec
hlt
lret
clc
pop
sub
xchg
ret
xchg
int
aaa
xor
ret
mov
fsts
rorb
xchg
sbb
repnz
jle
pop
int3
inc
mov
iret
inc
stos
xor
sbb
xor
push
inc
inc
cmc
jg
pop
movsb
inc
jmp
xchg
add
test
pop
roll
sub
sbb
jne
mov
xchg
imul
sbb
mov
in
stos
lret
cmp
ret
push
sbb
loopne
cmpsl
je
ljmp
mov
xchg
jp
cmp
outsl
add
cmp
ret
mov
adc
jae
mov
imul
push
ret
into
popf
cli
mov
imul
pop
dec
ss
sub
adc
fidivl
pusha
popa
sub
mov
mov
mov
fisubrl
data16
shr
adc
inc
ss
iret
xor
enter
jno
insl
sub
xchg
push
cmc
out
sbb
or
xchg
push
repnz
fsqrt
ficomps
push
dec
in
and
dec
jns
mov
dec
jp
lcall
dec
mov
inc
mov
cmc
data16
xchg
imul
ficompl
insb
or
inc
mov
lods
xlat
inc
in
leave
and
hlt
sbb
iret
push
rolb
aam
cmp
outsb
cmpsb
jae
dec
jmp
sub
add
cmpl
pusha
mov
stos
loopne
popf
sbb
sarl
push
mov
ljmp
fwait
add
cmp
cli
popa
repz
leave
movb
jns
mov
mov
fwait
inc
push
addr16
adc
mov
sbb
bound
xchg
rcrb
int
jne
inc
adc
test
xchg
rcl
insb
jns
test
and
roll
mov
mov
or
cmc
bound
sub
dec
rcl
mov
dec
in
shlb
or
sbb
adc
xorl
mov
adc
stos
pushf
stos
lahf
repz
or
shrb
xor
rcrl
mov
subb
bound
jecxz
test
push
movsl
dec
shlb
inc
sti
add
xor
lret
mov
push
mov
jmp
mov
jmp
enter
mov
std
mov
mov
imul
repnz
fstpl
sub
push
out
aaa
pop
lahf
lods
aam
fucomip
or
inc
cmp
test
xchg
jmp
push
mov
repz
stos
xor
loop
xor
mov
lret
mov
shll
ljmp
bound
cmpsb
cmc
mov
stos
pop
push
lock
mov
mov
nop
adc
mov
xchg
pop
dec
sub
xchg
pop
sub
inc
jbe
aam
jle
lret
xor
insl
int3
ret
in
popa
add
fnstenv
iret
add
mov
xchg
ret
popa
adc
mov
or
leave
stos
sbb
cmp
pop
mov
lret
xchg
out
mov
aas
push
out
sbb
loop
jp
pop
add
rcrb
mov
mov
jmp
jb
mov
je
sbb
insb
cmpsb
mov
cs
push
xchg
mov
sub
enter
xchg
jo
imul
sbb
out
dec
int3
je
test
arpl
cmc
subb
std
push
cmpsl
sbb
lds
cmp
cltd
insl
mov
ds
das
popa
push
fdivl
xchg
push
cmc
in
sbb
adc
es
sahf
inc
andl
jmp
leave
push
out
push
gs
mov
xor
int3
pop
cmp
jb
cmpsb
pop
das
mov
icebp
scas
push
mov
pop
add
shrl
cmp
sub
or
mov
inc
call
ljmp
xchg
dec
aaa
call
push
mov
xchg
test
inc
and
xchg
add
das
sbb
cmp
es
mov
shl
outsl
xchg
sbb
sar
add
insl
cld
xlat
dec
cmp
dec
mov
add
stc
shll
stos
loopne
test
adc
stos
sahf
cmp
jge
sahf
rol
and
stc
push
clc
ret
jno
cli
mov
rep
push
pop
shrb
dec
popf
add
mov
push
or
test
es
adc
inc
jnp
std
mov
test
adc
ficoms
test
add
pop
pop
cvttps2pi
fs
mov
inc
out
pop
adcb
add
adc
cmpsb
ljmp
fisubrs
decl
and
push
in
test
fistps
lahf
adc
out
mov
mov
stos
dec
fists
mov
pusha
push
lods
add
pop
push
and
mov
jbe
dec
or
imul
in
sbb
leave
jae
mov
add
js
push
mov
mov
pop
outsb
inc
ds
xchg
pop
movsl
imul
or
lods
or
cmpsl
mov
sbb
mov
sbb
mov
xchg
jg
lock
js
ljmp
imul
jae
sbb
dec
in
mov
jecxz
idivb
rep
pop
notl
cmp
out
dec
js
push
sahf
loope
inc
dec
mov
adc
cmpl
bound
push
sbb
mov
cmp
test
in
xchg
dec
inc
dec
in
or
pop
inc
stos
imul
add
mov
adc
and
shl
mov
mov
jge
pop
pop
sbb
dec
hlt
inc
cld
fs
mov
xor
lods
sbb
nop
xor
or
jbe
call
cmpsl
jns
mov
push
pop
in
pushf
jae
aad
add
mov
int
cmp
sub
js
pop
ss
data16
adcl
adc
xor
or
jmp
ss
mov
or
sbb
dec
enter
or
xchg
jns
sub
in
cmp
pop
out
les
cld
push
push
xor
xlat
jecxz
rorb
repz
les
clc
cmp
xchg
icebp
fldt
aaa
mov
aaa
inc
fxch
xchg
dec
jnp
push
push
pushl
dec
test
je
ss
xor
nopl
dec
push
or
mov
cmp
xor
pop
lods
je
repz
mov
loopne
cmp
ss
adc
pop
fwait
and
ss
imul
xor
cmp
idiv
or
in
adc
cmp
jecxz
in
pop
and
mov
clc
mov
cli
stc
adc
in
lock
test
push
addl
add
or
test
dec
scas
rclb
dec
mov
popa
pop
jg
loope
int
add
dec
cli
inc
fdivs
lods
insl
out
imul
in
xchg
mov
ret
or
jge
cmpsl
sbb
add
das
sbb
mov
lea
rolb
mov
pusha
add
es
jbe
nop
pop
ss
mov
pinsrw
jg,pn
add
mov
or
mov
inc
or
xlat
xchg
xor
les
fmull
add
push
mov
sub
es
xor
sub
push
push
cmp
sub
and
cmp
inc
and
hlt
push
cmc
inc
dec
adc
mov
pop
cmp
cwtl
mov
movsb
add
add
push
aam
xor
hlt
push
mov
aas
dec
sbb
sub
xor
lret
fistl
sbb
pop
ja
jns
repnz
add
shlb
jb
out
mov
lds
popf
loope
data16
xchg
xor
stos
icebp
dec
call
mov
je
fistpll
bound
cmpsb
sub
add
cwtl
fisubrl
adc
inc
adcl
and
ds
xorb
or
cmpsl
dec
push
sub
das
fwait
jecxz
mov
and
pop
jl
loop
pop
dec
mull
pop
or
mov
sbb
aaa
loop
push
xor
add
mov
popf
lret
je
fsts
push
mov
pop
sub
sub
ror
mov
std
push
sbb
nop
or
fisttpll
inc
mov
adc
or
sbb
lret
stos
scas
jo
xlat
push
push
xor
push
pusha
sbb
aad
out
frstor
push
roll
movb
enter
lock
pop
int
mov
push
arpl
sbb
icebp
mov
jecxz
push
xchg
lret
sbb
mov
inc
cld
or
dec
fisttpll
jle
and
jp
mov
and
ja
fidivs
add
daa
and
jle
mov
mov
pop
mov
das
fwait
pop
push
nop
incl
or
pop
mov
repnz
push
fidivs
cltd
mov
aas
mov
test
xchg
jg
add
loope
movsl
or
dec
and
mov
enter
insb
fldt
loope
dec
pop
js
xchg
loopne
test
xor
lcall
bound
pop
xor
pop
add
hlt
fneni(8087
cmp
push
lea
dec
movsb
jmp
in
push
dec
jbe
aam
mov
pop
outsb
jno
in
and
mov
push
sahf
xchg
mov
xlat
shlb
test
setl
mov
popa
xor
mov
das
lret
mov
fsubp
adc
add
ficompl
aaa
add
xchg
add
jp
out
mov
std
or
jmp
mov
sbb
add
mov
pusha
xor
scas
test
dec
pushf
xchg
cs
ffree
push
test
cmp
fisttps
adc
cmpsw
mov
adc
pop
jl
lea
and
dec
fwait
lods
mov
adc
mov
mov
cltd
stos
push
lds
adc
daa
add
stc
lret
jnp
cmpsb
cmc
aaa
or
pop
stos
fs
push
sbb
leave
jmp
les
cltd
shrb
xchg
inc
lahf
leave
and
mov
mov
pop
int3
out
scas
lcall
sub
xor
adcb
into
dec
aaa
jo
insb
mov
jae
add
jge
jo
lret
xor
and
and
pusha
jnp
pop
mov
and
xchg
shlb
or
jmp
stos
ss
cltd
sbb
jb
jo
pop
cmp
cmp
addr16
insl
or
nop
push
xor
les
cmp
aad
jne
aad
aad
jecxz
outsl
in
fs
add
aam
mov
fstl
push
xchg
inc
dec
cltd
aaa
inc
cmpsl
stc
jle
pop
inc
cltd
fsubrs
jbe
xchg
enter
lock
loop
mov
aaa
jmp
shll
stos
pop
push
arpl
pop
jmp
popa
xlat
popf
out
mov
xor
nop
sbb
jbe
dec
dec
jnp
adc
mov
orl
pop
pop
fld
int
jmp
xor
push
mov
mov
add
insb
popf
adc
mov
mov
push
mov
mov
dec
dec
inc
inc
mov
jnp
adc
sub
iret
imul
testb
jbe
pushf
xchg
testl
push
sbb
mov
inc
or
je
fmul
sub
cli
or
mov
or
mov
shll
ds
ss
dec
sahf
mov
out
pop
fbld
mov
cwtl
inc
mov
xchg
dec
sbb
mov
rcll
xlat
aam
push
imul
addr16
bound
mov
and
stos
out
repz
arpl
test
sub
cmp
iret
cld
jg
outsb
repz
mov
xlat
incl
icebp
outsb
leave
push
ja
popf
jecxz
faddp
cmp
sbb
push
xlat
inc
call
jmp
insb
and
cwtl
shrb
arpl
pop
dec
sub
sub
loop
movsl
leave
cwtl
in
bound
or
push
add
inc
dec
or
call
movnti
es
mov
dec
jbe
imul
cmp
push
js
roll
mov
fwait
mov
push
push
maxps
or
xor
mov
cwtl
dec
imul
loopne
pusha
fisubs
inc
push
pop
xor
filds
mov
cmp
fldcw
push
inc
imul
shrl
ffreep
int
jmp
test
xchg
sbb
adc
push
push
data16
out
or
add
jae
and
gs
mov
pop
jp
cli
push
shll
fadds
sub
xor
jmp
mov
xchg
loope
pusha
roll
cmc
sub
repz
or
iret
dec
push
xchg
rcrb
sub
sub
cmp
sbb
icebp
outsl
jle
std
arpl
mov
jb
mov
in
lods
lcall
adc
and
jmp
cmp
jmp
fnstsw
xchg
jle
mov
loop
or
es
fcomps
jbe
pop
mov
loope
mov
inc
jle
pop
and
cmp
adc
les
pop
pop
cmp
sbb
cmp
mov
push
mov
push
adc
sti
adc
or
shlb
iret
shr
mov
les
xor
mov
xor
in
xchg
xor
fs
sub
mov
jge
mov
lock
push
fwait
stc
pop
rorl
mov
jg
imul
add
addr16
test
fsubrs
arpl
mov
pop
push
mov
mov
push
cmp
xor
dec
mov
addr16
cmp
cmp
leave
out
jnp
pop
int
pop
xor
test
call
push
faddl
push
mov
mov
xlat
movsl
mov
mov
scas
pop
hlt
inc
xor
xor
jecxz
repnz
sub
xlat
xor
lret
rol
and
in
add
cmpsb
sahf
dec
jp
adc
data16
mov
hlt
mov
cwtl
pushf
xchg
jmp
lods
xchg
mov
ficoms
js
adc
aaa
lcall
popf
data16
push
test
test
fdivrs
icebp
aas
xor
cwtl
jno
cltd
out
mov
pop
test
sbb
int3
mov
add
push
fs
mov
pop
jnp
cmp
sub
jg
fs
xchg
fs
lcall
je
mov
mov
sub
sub
add
push
push
std
imul
cmp
pop
dec
dec
fs
stc
loopne
dec
jno
adc
jg
inc
imul
cmp
adc
jae
hlt
or
add
mov
adc
imul
test
mov
dec
adc
sub
cli
cmp
lods
out
xchg
lods
sbb
gs
test
lock
mov
fwait
adc
daa
idivb
test
dec
jecxz
lcall
insb
les
into
int
scas
adc
test
pop
and
and
repz
lock
cmp
inc
push
dec
add
les
cs
xor
test
jl
in
push
lea
int3
clc
frstor
adc
aad
dec
cmp
int3
or
inc
or
lods
cltd
lock
pusha
xor
sti
pop
mov
xlat
sbbb
int
mov
jb
outsl
decl
push
mov
movsl
insb
jp
imul
ja
fcom
dec
ds
daa
hlt
or
lahf
dec
outsb
mov
lods
insl
sbb
call
push
jae
daa
fbstp
shrl
fcoms
sub
cmp
adc
cmp
int3
jecxz
jg
pop
cld
inc
adc
and
add
add
sbb
js
adc
jmp
xchg
test
or
cs
mov
pop
mov
cltd
dec
mov
loopne
mov
sub
or
fdiv
inc
iret
jmp
add
outsl
push
mov
xor
jne
mov
xor
clc
jle
pusha
adc
pushf
dec
loope
subl
cmpsl
test
bound
add
push
or
arpl
cwtl
call
sub
pop
ret
fcomps
add
pop
jo
outsb
inc
mov
pop
sub
fsubrs
pop
divb
push
lahf
out
sbb
scas
sub
pop
arpl
mov
das
lcall
int
xlat
loope
bound
xchg
je
arpl
xchg
pusha
lock
lcall
mov
fdivrs
out
movsl
inc
std
xchg
mov
pusha
push
aam
in
dec
add
out
icebp
xchg
subb
jnp
mov
loope
jo
lds
jg
in
xor
sub
lcall
xchg
sbb
add
repz
ret
mov
inc
shlb
sub
fildll
movsl
daa
xchg
faddl
cmp
int3
sbb
pand
leave
adc
ret
xchg
and
enter
xchg
push
jecxz
sub
insl
jl
inc
lock
dec
push
hlt
mov
out
insl
push
fistpl
frstor
cmpsl
mov
movsb
mov
mov
lret
push
cld
ret
inc
mov
sbb
push
ss
push
jb
lods
or
inc
mov
pop
icebp
jne
add
jae
adc
rcl
repz
pop
xchg
dec
into
loop
sub
or
mov
xchg
sti
jns
roll
adcb
dec
xor
jmp
into
ss
fstl
movsl
frstor
inc
jo
mov
nop
pop
in
mov
decb
jp
fildll
rcl
mov
jg
xchg
xor
in
jle
mov
stc
inc
cmp
addr16
dec
ljmp
and
push
cmpb
ljmp
sti
cmp
in
xchg
and
inc
imul
into
stos
fcom
mov
movsl
addr16
daa
pop
in
loopne
xor
pop
pusha
push
les
test
in
out
hlt
mov
mov
mov
jne
es
fldcw
and
sbb
xor
jo
test
shrl
sbb
and
ss
leave
pushf
movsb
rclb
pop
mov
test
outsb
je
mov
inc
mov
and
mov
jl
jne
jl
cmp
pop
aas
dec
push
lods
ja
inc
lcall
lock
jle
shll
in
sub
lcall
pop
dec
mov
mov
sub
inc
dec
sbb
sbb
dec
negb
push
aaa
add
cmp
stc
movsb
ss
and
popa
push
dec
stos
cltd
pop
test
mov
icebp
push
rcrl
ss
push
inc
pop
push
mov
mov
in
cmp
test
loop
xchg
inc
leave
sub
fsubs
cwtl
xchg
push
pop
je
scas
push
and
pop
int
sub
cltd
fs
das
push
push
test
inc
cmc
leave
mov
or
aaa
fadd
out
cmc
mov
cmp
xlat
les
mov
out
fsubs
or
aam
jge
lahf
mov
cli
and
jecxz
stos
pop
mov
xor
add
adc
lcall
cwtl
mov
cmp
rcl
lock
fldl
bound
lds
inc
xlat
jo
and
add
sub
mov
sbb
cmpsb
out
test
push
push
jl
xchg
leave
mov
sub
jl
push
lret
inc
pop
push
mov
sar
and
movsl
ja
xchg
fstpt
inc
movsb
cmp
repz
mov
sub
ds
and
or
es
lret
imul
lock
fisubrs
pusha
pop
mov
int
pop
xchg
gs
xor
mov
push
negl
pop
pop
dec
jmp
les
add
jmp
mov
icebp
js
nop
jp
jmp
push
movsb
dec
scas
pop
jo
mov
pop
insl
cmp
push
test
adc
ja
mov
jno
inc
ljmp
cmp
jo
lcall
adc
mov
ret
insb
int3
lea
inc
in
dec
std
mov
cmp
cmpsl
dec
fwait
icebp
call
inc
dec
push
insb
jo
inc
arpl
xor
jl
addr16
push
push
pop
push
inc
cmp
cmp
test
and
xchg
xchg
adc
xor
add
push
inc
push
call
loop
lcall
push
mov
pop
jne
xchg
mov
stc
lds
cltd
adc
sbb
mov
out
xchg
xchg
and
or
sub
cld
in
enter
shld
rcrb
repnz
sub
inc
shrb
xchg
mov
cmpsl
enter
das
sahf
inc
cwtl
imul
jns
mov
stos
es
ss
shlb
in
adc
or
sbb
pop
int3
pusha
xchg
test
icebp
rol
nop
rcll
outsb
and
data16
loopne
data16
mov
or
mov
rcrl
jecxz
xor
lods
push
and
mov
sti
shr
mov
adc
stos
xor
lea
jecxz
mov
cwtl
subl
and
jnp
or
inc
mov
sub
cltd
dec
jmp
stos
arpl
pop
aad
or
hlt
push
push
push
mov
inc
cmp
and
push
jl
in
ret
js
lret
pop
mov
mov
arpl
inc
mov
mov
repz
mov
and
aas
jo
inc
call
push
dec
idiv
cld
subl
mov
hlt
push
and
jnp
mov
jl
sti
repnz
pop
push
in
movsbl
faddl
cmp
or
xor
mov
lock
pushf
push
popf
sbbb
xchg
sarb
jmp
les
loopne
popf
ret
pop
popa
mov
hlt
xor
xor
jle
stc
sub
sub
fldenv
loop
cli
mov
jae
push
nop
arpl
adc
dec
loopne
loopne
ds
or
sarl
and
mov
dec
lret
popf
xor
movsb
test
jg
aam
shlb
icebp
popf
jo
add
mov
or
inc
dec
orb
outsl
das
jmp
test
mov
adc
jp
mov
ss
xor
cmp
xor
mov
aam
fldl
dec
mov
sti
and
outsb
sbb
pop
shll
testl
add
gs
xor
lahf
jne
inc
into
fldt
jmp
stos
xor
fsubr
out
test
ds
mov
imul
leave
jnp
adc
mov
stos
fs
inc
pop
pop
mov
inc
dec
loope
xchg
or
nop
xchg
mov
lods
cmp
mov
cld
adc
je
gs
dec
mov
lock
mov
cmc
mov
inc
fidivs
data16
lds
icebp
stos
in
adc
int
xchg
sub
push
adcl
add
mov
aaa
mov
xchg
xchg
push
xor
into
mov
inc
rcrb
push
dec
inc
jae
mov
push
sub
inc
mov
in
or
pop
pop
xchg
jp
dec
sbb
insb
xchg
rcll
setb
pop
and
fdivrs
mov
and
lcall
lret
mov
or
dec
pop
xchg
xchg
xor
mov
mov
sbb
in
fabs
mov
fs
lahf
add
lahf
gs
pop
or
aaa
stos
cmpsl
stos
xchg
jmp
mov
and
xorb
and
loopne
mov
xchg
sahf
jb
push
mov
adc
mull
mov
mov
outsl
mov
ror
push
test
and
xor
out
mov
and
lock
test
mov
idivb
arpl
xchg
mov
cli
enter
sbb
nop
mov
mov
ja
out
imul
add
mov
push
sbb
jmp
lret
fcomp
aad
negb
pusha
fstp
push
shll
cli
xor
jmp
int
push
mov
push
stos
std
lods
popa
jne
push
push
jg
pop
xchg
dec
pop
xorb
push
loope
ljmp
mov
and
int3
xchg
or
into
lret
mov
fsubrl
or
out
jg
das
jo
cmpsb
push
daa
push
fists
lea
dec
pop
xor
push
ror
lahf
popa
imul
negl
jle
xlat
mov
mov
rol
daa
ret
hlt
imul
in
outsb
mov
dec
insb
push
and
das
sub
mov
sub
movsl
inc
aam
ret
je
or
adcl
insb
and
xor
rorl
mov
add
and
pop
mov
xchg
adc
aaa
das
aam
ret
out
aaa
stc
outsb
popf
shll
xor
mov
pop
out
adc
fstpl
fs
sub
push
mov
lret
dec
daa
and
push
lret
and
jle
int3
sbb
iret
cmp
add
mov
addr16
jl
outsl
mov
push
mov
cmpb
pop
aad
gs
aam
loop
xchg
pop
and
jno
xchg
mov
jg
popf
mov
arpl
les
mov
cs
divb
pop
xchg
cwtl
notb
lods
and
pop
rcrb
mov
mov
adc
andl
xchg
inc
mov
pop
mov
lret
mov
pop
lods
data16
xor
test
or
inc
jb
lock
sbb
push
and
and
pop
and
arpl
inc
xchg
shlb
in
lea
lds
fs
xchg
jnp
add
repz
out
lret
xlat
xchg
lds
cld
adc
mov
push
jmp
pop
and
test
loope
pushf
adc
bnd
add
jle
popa
jo
jmp
popa
fwait
lret
xchg
jmp
repnz
aad
shrl
mov
sbb
mov
ror
and
sarb
fstps
pop
mov
mov
movsb
and
test
fsubrs
push
or
outsb
lret
push
and
push
jne
bound
or
mov
cmp
mov
mov
xor
sub
loope,pn
adc
test
xchg
mov
call
jg
aaa
cmp
or
add
into
cmpsb
add
add
ja
push
sbb
shl
ds
or
dec
pop
sub
gs
in
fsubrl
movsb
adc
sbb
cmp
push
sub
adc
out
loop
or
inc
je
or
pop
mov
or
rol
xor
and
mov
std
aaa
mov
dec
dec
pop
jo
addr16
mov
incl
mov
fildl
mov
popf
inc
fwait
adc
sub
mov
pminsw
push
call
hlt
or
push
jle
dec
int
jno
enter
push
add
ljmp
inc
cmp
pusha
dec
out
mov
mov
sti
divb
imul
add
lea
into
sahf
es
ret
xchg
ret
sbb
xchg
test
ret
pop
lods
decl
xchg
sbb
adc
mov
je
pushf
rorb
cltd
loop
stc
sbb
dec
rcl
pop
add
push
xor
adc
hlt
cmp
and
dec
adc
arpl
ja
adc
nop
push
loopne
cmp
outsb
xor
clc
inc
cmp
mov
mov
xlat
ja
or
ds
cmp
imul
cmp
pop
push
and
aam
or
cmpsb
sub
mov
pop
imul
insb
inc
notl
dec
jmp
and
psubd
pop
inc
call
andl
add
lea
insb
leave
into
inc
xor
fcoms
inc
adc
xchg
xor
lds
and
push
bound
sub
popf
cmp
lds
cmp
mov
aas
adc
push
pop
fs
fbstp
sub
push
pusha
es
in
inc
mov
mov
arpl
sti
test
inc
xlat
jns
push
jo
add
jae
mov
nop
and
ja
mov
mov
inc
pop
test
pop
jge
fimull
cmp
cmp
inc
adc
inc
cmp
pop
jp
push
in
xorb
leave
test
jl
fistpl
out
mov
aad
out
rcrb
popf
push
lea
xchg
xor
rorb
testb
jge
aad
pop
dec
adc
test
pop
lock
ss
sarb
mov
pop
jmp
xor
test
mov
sub
push
out
cmp
pusha
daa
lcall
into
xor
cmp
and
in
and
sub
jne
cmova
dec
mov
adc
cltd
mov
int3
and
out
sbb
mov
xor
pushf
mov
das
mov
sub
divl
adc
mov
sar
or
popa
mov
int3
bound
fcoms
jp
and
inc
fdivrl
addb
fisubs
sbbl
test
int
test
out
push
loope
test
ds
adc
adcb
aam
xchg
sbb
sbbl
lret
insb
mov
cmpsl
adc
and
mov
or
add
adc
and
out
pop
push
add
dec
movsb
add
out
mov
subb
cmp
aam
aaa
cli
xchg
std
push
fbstp
dec
out
cmc
addb
fwait
sbb
out
cld
cltd
xor
and
jecxz
cli
insb
add
add
mov
iret
ss
int3
xchg
push
xchg
adc
lcall
mov
pop
add
ret
mov
out
test
cld
dec
das
mov
lret
repnz
cmpsb
sbb
dec
and
mov
and
out
mov
mov
jmp
rorl
xchg
push
lcall
mov
sbb
mov
dec
xor
dec
and
xor
adc
fdivs
xor
idivl
or
push
sbb
sub
jle
xchg
or
or
lahf
lret
jo
sbb
cmpsb
fstpl
rcrl
or
stos
mov
pop
outsb
jle
push
cmp
js
inc
clc
aaa
sub
mov
movsl
and
int3
xor
iret
mov
mov
outsw
push
rclb
fiadds
push
mov
lcall
adc
popf
cmpl
fldl
call
cmp
lock
cwtl
mull
cmp
sub
sbbb
xchg
jne
push
mov
push
test
and
shrl
popa
xchg
ja
lods
rcll
idivl
jl
addr16
xor
adc
lahf
cli
mov
pop
or
jae
adc
hlt
ja
pushf
outsb
inc
out
or
mov
jne
lods
mov
cmpl
scas
add
or
mov
loop
into
cmp
cmpsb
cmp
das
jo
fucomp
lret
inc
dec
test
icebp
hlt
pusha
cmc
cmp
jmp
imul
push
cmpsl
insl
and
repz
repz
lea
and
mov
mov
sahf
mov
push
cwtl
imul
clc
xchg
cs
cmp
cmc
cmp
icebp
ljmp
jecxz
call
push
xchg
pop
add
mov
sbb
shlb
or
dec
or
mov
jmp
or
cmp
lcall
stos
ret
xchg
mov
mov
aas
cmc
insb
and
test
cmp
andl
ds
jle
cmc
icebp
mov
bound
rolb
sbb
gs
cmp
cmp
dec
mov
xchg
inc
sbb
mov
add
movsl
clc
and
sub
or
xchg
fdiv
nop
inc
push
push
orl
mov
lahf
bound
and
lahf
jecxz
mov
fisttpll
push
int3
aad
pusha
dec
xor
addl
lock
dec
add
shlb
cmp
pop
stos
ficoml
addr16
mov
cld
gs
dec
test
loopne
shl
xor
adc
call
push
mov
addr16
adc
in
mov
xor
or
and
int
hlt
punpckhbw
cli
sbb
sub
test
add
scas
sbb
outsl
lret
dec
mov
lods
repz
push
repz
fprem1
clc
les
mov
jl
push
or
mov
sub
out
outsl
jg
push
pop
push
inc
or
xchg
out
pop
lret
ss
cwtl
adc
arpl
not
push
adc
out
pop
and
cltd
xlat
jb
xchg
arpl
pop
fiaddl
push
mov
mov
icebp
inc
or
cld
mov
adcl
int
testl
leave
mov
jmp
faddp
dec
sbb
adc
popf
mov
pop
pop
fwait
mull
mov
add
call
sarb
mov
mov
and
cli
and
jp
adc
out
mov
mov
xchg
pop
movsl
pop
js
aad
ret
popa
cltd
pop
int3
cli
dec
cwtl
jb
call
movb
sub
dec
movsl
jns
xchg
pop
lds
loopne,pt
mov
inc
mov
mov
fiadds
ja
xchg
div
push
xchg
mov
loopne
sbb
mov
push
push
push
jg
cmpsl
xor
mov
test
adcb
dec
push
cmc
xchg
mov
push
sti
sahf
cmp
push
fchs
xchg
or
ds
jno
call
imull
add
push
pop
ret
jmp
lahf
add
adc
cmp
sub
daa
jp
add
mov
daa
pop
test
ficoms
mov
xor
ljmp
dec
aam
dec
xor
mov
mov
xor
movsb
dec
xlat
cmp
clc
sub
stos
xchg
aad
enter
test
stos
cmpl
xor
addb
and
arpl
xchg
bts
or
int
add
mov
insb
int3
decl
stos
dec
adc
das
push
aad
sub
lcall
notb
stos
push
jo
xchg
outsb
push
test
jno
cmp
lods
loop
ja
xor
mov
subb
cmp
faddl
and
or
aam
stos
jbe
mov
and
sub
rolb
call
jns
ficoms
hlt
and
loope
jl
pop
add
stos
adc
cltd
outsl
cmp
or
adc
inc
int3
xor
fcompl
leave
push
mov
inc
adc
and
jae
cmp
mov
insl
mov
pop
and
inc
xchg
xchg
mov
mov
dec
mov
daa
insl
pop
das
jnp
ds
loopne
add
or
aaa
cmp
xor
xchg
or
or
repnz
ret
jp
dec
scas
or
pop
mov
lods
test
xchg
divl
xchg
imul
push
mov
dec
sub
rcrl
add
cwtl
fcmove
mov
cmpsb
testl
push
in
mov
push
js
das
adc
pop
xor
stc
push
and
mov
adc
pop
pop
xchg
xor
je
jns
jecxz
cli
jno
adc
lods
mov
inc
cmp
mov
das
sbb
xlat
or
mov
xchg
xchg
jne
fcmovbe
inc
xor
jno
cmp
jo
fistpl
jmp
lea
lahf
push
mov
shll
icebp
mov
test
pop
xor
add
xorb
cmp
add
push
ret
mov
insb
das
jl
sub
sub
ret
mov
sub
mov
mov
dec
cmp
out
clc
jne
mov
and
adc
test
outsl
sub
push
lods
ret
pop
xchg
bnd
inc
adc
jge
jecxz
sub
xchg
fistpll
iret
clc
shl
mov
cmpb
call
lcall
sub
repz
jmp
or
cmc
movsb
mov
sub
jbe
fldl
cmp
pusha
sub
repnz
cli
ds
into
fisttpl
sub
xchg
stos
xor
push
insl
fwait
xchg
mov
and
enter
and
movsb
rorb
cmp
adc
adc
das
jnp
pop
pop
sub
iret
jb
clc
iret
push
cmc
add
repnz
shrl
adc
xchg
addr16
roll
pop
cmc
clc
loope
les
test
outsb
cmp
shll
leave
jne
lods
cmpsl
or
push
jns,pn
push
or
repnz
outsb
aaa
xor
daa
add
int
mov
cld
cmp
insl
out
cmpsb
and
xchg
cmpsb
notb
out
enter
cmc
loop
outsb
fstpl
push
subb
stc
xchg
mov
cwtl
cli
xchg
sub
sti
mov
push
pop
aam
loopne
push
adc
pop
adc
add
dec
sbb
and
xchg
repnz
scas
xchg
jg
dec
sub
sbb
mov
mov
mov
loope
fwait
sbb
mov
dec
cs
push
mov
lret
xor
jle
sub
pshufw
lds
pop
jno
cltd
xchg
and
bnd
aad
jle
mov
outsb
and
cmpsl
sub
or
xchg
inc
sbb
mov
sub
add
loope
mov
fwait
sbb
pop
cmp
cmpsl
or
cmp
dec
sbb
fldt
decb
les
std
ja
push
dec
sub
subb
inc
adc
in
add
push
out
or
sub
sbb
mov
enter
mov
aad
dec
repnz
ja
add
xchg
and
lcall
bound
sub
scas
add
iret
ficompl
fisttps
sbb
mov
fcmove
in
stos
aad
je
jne
push
mov
jbe
push
pop
mov
pushf
pop
or
js
mov
repnz
mov
push
adc
mov
push
inc
mov
xlat
lea
jmp
in
not
or
mov
in
rcrl
imul
adc
dec
push
xor
sub
jno
jne
std
test
jb
sub
push
imull
pop
imulb
jg
pop
addb
or
cwtl
mov
jno
sbb
push
mov
mov
das
lret
add
das
jne
addb
movhps
pop
mov
push
pop
sub
insb
mov
adc
pop
icebp
scas
jge
inc
mov
and
sbb
arpl
adc
lods
and
js
fcmovb
ljmp
insb
lock
dec
jecxz
testb
pop
pop
mov
rolb
mov
pop
shrl
into
arpl
cmp
cmpsb
cmp
or
add
sbb
sbb
lods
rorl
daa
cld
rorb
test
and
mov
mov
imul
stos
inc
inc
pop
jp
push
je
cli
stc
test
cmpb
das
lods
or
pushf
cmp
movsb
test
imul
jne
jmp
incb
das
cs
imul
add
jg
push
sbbl
jae
loope
ja
or
aaa
sub
jae
push
fimull
add
jo
sbb
lods
arpl
sbb
push
mov
les
andb
loope,pn
jle
jnp
in
push
imul
adc
ja
nop
ret
pusha
pop
sub
aas
mov
sub
and
jmp
ja
cmp
in
sbb
lods
ret
aas
aad
shll
adc
dec
jmp
or
jge
loope
inc
jbe
aaa
test
popf
jne
sbb
add
sub
jle
scas
mov
inc
in
inc
inc
mov
xor
sbb
or
add
xchg
fs
add
roll
dec
adc
stc
sarl
aas
in
add
dec
sub
loope
pop
inc
fld
mov
xor
cwtl
fsts
or
add
jne
sub
ret
sbb
jl
xchg
cmp
jo
fcoms
outsl
add
cmp
mov
jle
lock
or
pop
insb
inc
call
and
xlat
mov
push
fsubr
andl
xchg
movsl
mov
lds
lds
iret
push
jle
push
pop
fnclex
loop
scas
xchg
bnd
nop
pop
or
fstp
sub
fildl
test
movsb
lds
popa
or
mov
loope
js
push
sub
lods
dec
add
and
jge
fdivs
popa
jl
outsb
shl
imul
xchg
test
cwtl
xlat
out
pop
inc
jecxz
ja
adc
int3
lret
inc
push
testl
and
cmp
xor
xchg
xchg
adc
mov
imul
mov
sti
rcll
out
add
mov
je
add
jns
mov
leave
xor
sbb
or
enter
test
cli
cmpsl
xchg
xor
icebp
push
mov
lock
pop
pushf
fsts
imul
loope
xchg
outsl
jecxz
nop
mov
out
loop
ret
loopne,pt
sti
shlb
sbb
add
out
iret
call
mov
pop
insb
into
adc
xchg
adc
inc
loope
sbb
dec
out
mov
neg
pop
imul
xorl
add
test
xor
push
sbb
ljmp
jnp
push
pop
int
push
and
pop
jge
mov
sbb
or
sahf
sbb
movsb
insl
jg
lret
jg
in
add
mov
cmp
mov
lods
pop
mov
pop
mov
insb
rcrb
jg
test
mov
inc
scas
paddsb
leave
xlat
adc
je
dec
jne
or
pop
cpuid
cmpsb
and
add
subb
push
mov
or
sub
arpl
sar
push
mov
cld
repz
mov
cmp
or
pop
dec
add
cmp
aaa
mov
mov
lock
fimull
mov
jmp
ljmp
aas
sub
call
pop
pop
clc
or
call
ss
mov
jo
xor
jno
xlat
into
mov
in
dec
out
lret
fstps
adc
dec
int
jb
mov
inc
xor
out
repz
aas
push
push
pop
ja
jg
xlat
iret
mov
popa
in
bound
push
arpl
or
into
cmp
in
clc
or
inc
ljmp
lock
ret
andb
ja
mov
loopne
jnp
sub
aaa
lods
cmpsl
aad
lret
dec
imul
aam
hlt
add
rcll
repz
mov
push
nop
lret
push
stos
inc
repz
cmpsb
mov
adc
imul
sahf
push
mov
iret
mov
movsl
sub
mov
nop
push
lock
aad
imul
xchg
xchg
adc
into
mov
add
and
push
incb
aas
mov
out
push
pop
idiv
push
mov
mov
adc
jb
test
pusha
and
cmpb
std
clc
xchg
jmp
sub
xor
insb
pop
pop
fmulp
cmpl
jp
add
mov
popa
leave
pop
lret
xchg
shr
roll
rclb
aas
enter
ds
mov
aam
push
test
xchg
xchg
negl
pushf
mov
mov
in
adc
test
jno
pop
test
lahf
mov
jno
enter
fdivrs
mov
ret
lds
mov
stc
mov
jg
dec
mov
push
ss
les
or
mov
shrl
sub
push
orb
xchg
scas
inc
xchg
sarb
mov
rcrb
push
movsb
dec
arpl
aaa
inc
push
fdivrs
aad
fcomi
or
inc
inc
mov
fs
js
add
aaa
test
sbb
mov
xadd
stos
rcr
popf
inc
pop
jmp
fldl
rcrb
leave
cmp
lock
sbb
pop
aaa
and
dec
mov
lahf
mov
adc
xchg
and
cmp
pop
or
data16
adc
cwtl
mov
mov
dec
ret
leave
in
pop
mov
mov
xchg
int
cli
insb
mov
jnp
cltd
imul
cltd
mov
cmp
and
icebp
xorb
mov
testl
fwait
add
in
dec
test
cwtl
leave
popa
cmp
lods
imul
fsub
testl
sti
cwtl
fnstenv
loopne
gs
std
mov
hlt
cmpl
in
pop
mov
xorl
add
or
jg
inc
insl
lahf
int
mov
sbb
xchg
push
mov
scas
ja
in
or
fidivrs
jno
mov
mov
cmp
or
loopne
mov
sub
push
add
mov
and
outsl
jo
and
ds
ss
inc
enter
cs
in
in
test
icebp
lahf
jmp
xor
pop
jno
je
add
das
dec
mov
stc
or
aam
mov
ja
mov
incb
adc
add
pushl
pop
notl
or
scas
mov
sub
fdivrs
xchg
and
cmp
cmp
out
jp
or
mov
je
mov
in
cmp
jg
adc
mov
aam
or
push
fidivl
lahf
mov
lea
dec
mov
jns
or
jg
out
ret
in
mov
sbb
sbb
imulb
sub
xchg
sub
add
daa
fdiv
cmp
data16
cmp
jg
cmp
mov
cli
pop
mov
xor
out
dec
xor
jne
jge
mov
loopne
sub
lea
sbb
subb
jo
push
pop
loop
mov
push
push
adc
clc
into
test
push
xchg
lret
cmc
insl
jnp
repnz
mov
mov
repz
stc
jg
out
addr16
add
scas
mov
mov
dec
mov
sbb
outsb
mov
add
clc
shlb
fdivr
icebp
dec
fimull
mov
ret
xor
mov
mov
stc
mov
jge
pop
and
xor
sbb
insl
test
sub
inc
sbb
stc
push
into
loopne
pop
enter
mov
mov
int
sbbl
adc
daa
dec
imul
jnp
add
fcmovb
sbb
out
cmpsl
xchg
mov
inc
rcll
sti
jle
call
addr16
pop
fiaddl
pop
cmpsb
std
stc
push
pusha
xorb
xchg
js
pop
rorl
idivl
sub
pop
xor
inc
xor
cli
daa
mov
push
outsl
xchg
in
dec
sbb
and
and
in
adc
mov
jo
pop
aaa
out
or
push
js
push
lds
fwait
jp
test
scas
mov
fmul
nop
and
xchg
movsb
jns
push
aam
sbb
je
adc
lret
push
stos
add
xchg
rcl
test
mov
jne
jne
dec
inc
pop
leave
aas
jb
jl
push
lahf
jmp
mov
scas
fcoml
pop
and
popa
push
push
cwtl
fistl
les
div
fistps
xorb
dec
pop
aad
popf
dec
adc
idivl
xchg
xchg
push
sarb
cmc
push
jecxz
mov
jae
xchg
popa
pop
aas
mov
push
stc
ja
cmpb
jne
sub
lret
sub
iret
mov
outsl
cmp
jae
push
mov
xor
push
fbld
insl
pop
xchg
in
sbb
push
popf
movsl
sbb
insl
push
pop
xor
xchg
xor
sub
adc
imul
cs
inc
shlb
and
xor
sub
dec
orl
push
nop
inc
xlat
lds
mov
jbe
cli
mov
push
sub
dec
imul
inc
sbb
sahf
clc
jbe
sbb
mov
add
lahf
add
shrb
add
mov
aam
mov
lret
loope
leave
out
repnz
mov
mov
push
sub
cmp
xchg
pop
test
xchg
mov
jl
imul
mov
das
or
stc
sbb
xor
xor
icebp
arpl
inc
inc
loope
inc
xchg
mov
leave
and
fsubr
cwtl
out
adc
pop
adc
adc
mov
jnp
test
out
stos
pop
pop
or
add
xchg
xchg
and
inc
push
or
pop
inc
gs
arpl
push
bound
movsl
mov
stc
mov
dec
dec
dec
sub
cld
cmp
mov
sahf
fbstp
imul
js
jmp
sbb
lcall
push
add
in
mov
or
pop
push
and
jno
sub
jbe,pn
test
inc
shll
xchg
pop
insl
scas
out
xchg
jnp
cmpsl
push
xlat
es
fdivs
mov
xor
xor
and
subb
inc
mov
addr16
fiaddl
push
leave
loope
add
cli
xchg
fstl
mov
cmc
rcll
jae
sbb
shlb
lret
lret
cmp
dec
mov
xchg
loop
stos
or
out
mov
pop
lcall
jns
mov
into
and
xor
pop
xor
adc
icebp
pop
mov
add
scas
mov
mov
nop
in
cmpsb
jmp
mov
mov
push
lcall
pop
push
mov
call
imul
push
and
mov
jg
pop
mov
xor
jg
aaa
iret
inc
mov
adc
adc
aam
dec
mov
and
int3
rorb
mov
xor
push
test
imul
test
pop
pop
sub
aam
mov
lods
test
fbld
ja
xchg
cmpsl
jns
dec
aam
imul
enter
lcall
shlb
pop
pushf
add
dec
jbe
sbb
bound
push
outsl
dec
shll
loop
jns
and
int
sbb
fdivrs
push
push
dec
xchg
test
aam
mov
dec
jp
jl
ja
fcmovu
push
mov
xor
ret
aaa
mov
test
mov
jo
es
adc
pop
dec
push
arpl
sti
xchg
js
stos
fwait
mov
fsubl
idivb
mov
out
jns
mov
pop
lods
fmuls
lret
pop
int
inc
xchg
mov
test
iret
pop
adc
push
lret
mov
pop
add
imul
mov
shlb
and
jmp
fidivl
out
sub
es
jb
adc
gs
in
fwait
mov
jb
test
jle
pop
pushf
fmull
lods
mov
cmc
mov
lea
fildl
in
and
mov
xor
es
mov
mov
repz
loop
add
shrb
cmp
fstpt
jo
inc
push
ss
push
popa
mov
jbe
mov
enter
ret
repz
jae
adc
xchg
rolb
push
lret
jne
int
clc
or
filds
clc
loop
aad
xchg
mov
in
push
push
jecxz
ret
fildll
adc
test
mov
dec
mov
mov
adc
into
subb
and
add
rcrb
mov
negb
mov
cltd
pop
jmp
lds
das
lret
push
pop
push
notb
sub
outsb
mov
adc
fdivr
into
incb
out
ds
dec
fcmove
adc
data16
in
mov
pop
xchg
mov
xchg
mov
pop
dec
mov
lods
stos
jb
stos
sub
mov
inc
dec
arpl
mov
jb
fidivl
mov
out
inc
mov
fldenv
imul
clc
repnz
xor
dec
xor
mov
jmp
sbb
mov
xor
fpatan
fsubl
mov
sbb
das
mov
int3
pop
jbe
inc
ret
xchg
repz
les
loop
es
test
xchg
lds
sarb
cwtl
andb
fsts
cli
sahf
mov
cs
dec
sahf
push
fs
sub
lock
or
ret
xchg
adc
stos
mov
or
test
cmp
pop
dec
adc
mov
add
imul
pop
jno
adc
test
inc
loope
pop
cmp
fistl
or
mov
dec
and
pop
lret
inc
sub
push
xchg
movaps
xchg
or
push
lcall
cmpb
popf
movsb
cmp
test
test
sub
sbb
mov
inc
mov
loop
mov
jl
into
jne
or
cmp
sbb
movl
sub
lds
filds
sub
xlat
arpl
push
bound
adc
fisttpll
xor
mov
jnp
mov
xor
or
imul
or
mov
es
cli
mov
mov
pop
sbb
and
inc
shll
push
sub
aas
std
cmp
repz
xor
xor
lods
cmp
mov
mov
mov
add
cmpsb
sub
addr16
mov
mov
mov
or
mov
pop
adc
sahf
aad
xor
add
aam
aad
leave
and
sub
mov
push
dec
xchg
bound
pop
dec
cmp
sbb
negb
decb
or
and
je
mov
movl
xchg
or
or
scas
add
ds
mov
andl
cld
stos
mov
mov
lods
push
or
fnstenv
pop
aaa
xchg
shll
inc
lahf
mul
gs
test
aaa
mov
jmp
adc
adc
pop
daa
fsubrs
push
test
mov
cld
add
and
dec
jo
adc
and
in
and
add
addr16
adc
add
jns
jne
push
cltd
cmpsl
ds
lcall
jae
sbb
sbb
jb
cmp
jp
inc
push
movsb
ja
ret
push
aad
xchg
out
or
and
cmp
cmp
jne
push
cmp
cmp
js
mov
mov
dec
mov
cli
push
cmc
pop
scas
aad
call
and
in
add
mov
rcl
loopne
movsl
icebp
xor
aas
cmpb
or
and
jge
sbb
adc
mov
xlat
aad
imul
sarb
and
jbe
lods
mov
push
jmp
je
fbstp
or
insb
jle
addr16
push
in
inc
pop
adc
mov
cmpsb
mov
and
mov
ja
or
xchg
mov
frstor
xchg
fs
aad
xchg
xor
cmp
dec
and
or
int3
in
popf
cmc
pop
push
ss
aad
mov
adc
adc
loopne
or
outsl
std
mov
sbb
sbb
xchg
jbe
push
xchg
jp
jge
sbb
sbb
or
pusha
shlb
mov
repz
dec
add
sbb
dec
inc
gs
sbb
or
hlt
imul
arpl
dec
loop
sar
loopne
repnz
outsb
fisubs
clc
stc
aad
push
cmp
cmpsb
mov
shll
fsts
imul
cmc
cltd
fs
lods
xchg
dec
adc
fimull
xchg
mov
push
adc
cmp
jecxz
xor
in
ja
cmp
push
pop
adc
xchg
sbbb
les
or
mov
negl
or
dec
xchg
or
pusha
push
xor
xor
add
adcl
mov
push
faddl
nop
scas
cs
arpl
mov
cmc
jb
std
cmc
push
out
mov
sbb
ljmp
push
sbb
imul
xchg
repnz
stc
dec
cmp
ror
mov
or
mul
rol
sbb
shlb
incl
sub
subl
das
jns
faddl
mov
or
insl
or
cmpsl
ss
sub
pop
fistpl
cmp
ljmp
rorl
xchg
lret
xor
pminsw
or
pop
or
fnstenv
and
dec
out
jg
cmp
jle
fmul
loopne
leave
sub
cmp
mov
fnstenv
inc
cmp
shrl
loopne
arpl
push
xchg
sarb
aad
sbb
mov
mov
jae
mull
aas
jmp
lcall
rcll
mov
lock
cld
xchg
rolb
loopne
mov
mov
inc
or
gs
jmp
mov
sub
inc
pop
cmp
push
xchg
xor
test
fxch
pop
mov
cmpl
rcr
push
or
rolb
mov
dec
sub
lret
data16
lods
test
lods
lods
pop
stos
xchg
xchg
sbb
fiadds
sub
dec
lds
cmpsb
mov
or
mov
mov
ficomps
push
cmp
add
sbb
cmp
xchg
dec
and
add
sarl
xor
das
mov
dec
shlb
mov
push
mov
ret
pop
mov
jmp
cld
enter
cmpl
cmp
cmc
mov
dec
xor
inc
fxch
clc
mov
fs
sub
fwait
aas
int
sub
jge
pop
cmp
cs
ret
fisubrs
popa
mov
sbb
mov
or
mov
mov
jo
cmc
cmp
push
int
outsl
aad
jns
popf
pop
push
inc
xchg
out
pop
fisubl
clc
or
std
xor
scas
push
inc
dec
out
bound
out
inc
or
inc
mov
xor
clc
test
mov
pop
xlat
leave
xchg
test
adc
je
push
int3
add
hlt
fisttpll
mov
jg
int
ret
pop
outsb
mov
xchg
mov
inc
inc
popf
push
decb
in
lea
inc
sbb
sbb
sub
jge
or
pop
or
andl
outsb
pop
pop
sub
enter
addr16
adc
aad
cld
mov
mov
xor
call
cmp
and
cmp
fimull
sbb
mov
out
rorl
sti
adc
and
or
sarb
dec
shl
fst
repz
fdivrl
enter
sbb
push
iret
cmp
sub
pop
mov
xchg
es
inc
in
jmp
mov
ret
out
bound
mov
push
add
xchg
inc
pop
shrb
add
sbb
sarl
dec
fldenv
add
idivb
dec
adc
cmpsb
movsl
mov
les
imul
mov
or
mov
sub
cmp
fwait
push
fcomi
mov
bound
xchg
mov
jp
cltd
fildll
outsl
adc
test
fadd
inc
or
pop
hlt
cmpsb
sbb
add
shlb
push
mov
daa
xchg
jp
xchg
push
cmp
and
loop
fxch
mov
lds
sbbb
jg
sbb
int
int3
sti
outsb
stos
mov
mov
in
xor
roll
repnz
add
lea
adc
push
ret
cmpsl
jg
int
adc
es
xor
scas
pop
add
in
or
fists
sar
push
sahf
stc
out
cmp
out
sub
cmp
mov
jns
and
lret
xchg
jmp
or
in
shll
cltd
pop
test
mov
jg
aad
imul
mov
and
test
out
movsb
cmc
pop
inc
outsb
pop
push
sbb
sub
inc
dec
in
cld
or
xor
add
mov
lds
lahf
sbb
jns
jg
xlat
lahf
dec
into
xchg
mov
bound
xchg
inc
dec
push
inc
push
and
jmp
scas
pop
cmpsb
cmp
int3
cs
hlt
rolb
push
outsl
mov
fdivr
jb
adc
sub
pop
push
clc
add
aad
scas
add
add
popf
lret
sub
xchg
shrl
cs
repnz
fnstcw
inc
mov
popf
in
clc
and
aaa
jo
stos
push
mov
jno
pop
scas
outsl
mov
push
mov
xor
inc
mov
add
fldenv
clc
and
jecxz
xchg
push
lret
mov
and
xchg
ret
aam
push
incb
rolb
or
push
mov
dec
sub
stos
mov
jae
dec
mov
sahf
cmpsl
fists
rolb
enter
dec
cmp
nop
aaa
jle
ret
cmp
nop
jb
mov
mov
cmpsb
shlb
jmp
xor
inc
jmp
cmp
cmp
xchg
ret
js
and
out
call
cmp
faddl
fildll
out
aad
sti
dec
fisubl
and
lods
fdivs
adc
jns
lods
mov
lods
push
lret
aad
ss
jno
ja
jne
jo
faddl
fcmovnbe
fbstp
xchg
or
aad
mov
lea
or
loopne
jmp
insl
cld
lods
jl
mov
sbb
push
sub
pop
iret
lret
mov
mov
rcrl
or
cmpsb
test
stos
xchg
fwait
jns
hlt
leave
mov
pop
pop
loop
fistl
pop
clc
push
popa
ja
pop
jecxz
sbb
rcl
stos
outsb
adc
cmpsl
mov
or
xchg
xor
dec
ja
push
xor
sub
xchg
push
xchg
pop
xchg
lods
movsb
cli
nop
dec
inc
dec
inc
xchg
fwait
pop
sub
jp
cli
fimuls
call
sbbl
jmp
and
cmp
cli
test
sbb
push
sub
aad
pop
adc
add
mov
imul
and
jb
and
pop
pop
outsb
in
adc
cmp
mov
sub
lret
or
xchg
loop
xchg
cmp
testb
mov
add
test
mov
mov
jmp
mov
insb
mov
aaa
pop
lcall
std
mov
sarb
cmpsl
adc
sub
adc
and
adc
inc
jp
je
fmull
test
shll
push
fsubp
jnp
out
loopne
cmp
jo
ficoml
loop
sahf
push
das
and
adc
fiadds
cld
lods
cli
test
stos
mov
call
pop
mov
test
js
movsb
stc
nop
jge
fisubl
cli
pushf
into
js
outsl
scas
and
addr16
mov
cmp
jge
sarl
orl
sbb
mov
mov
lods
adc
lods
mov
lock
xchg
movsl
mov
jge
mov
jp
mov
jecxz
sub
jbe
dec
xorl
lds
stc
sbb
push
clc
or
xor
and
test
pusha
mov
fs
cld
push
sti
loopne
clc
out
push
outsb
mov
add
sub
arpl
cmc
cmc
fists
cmpsb
xchg
and
lahf
mov
inc
or
je
inc
push
mov
ja
dec
xor
mov
imul
mov
mov
adc
inc
push
icebp
pop
add
push
jae
out
arpl
sbb
insl
stc
jp
fs
jns
xor
push
arpl
fidivrs
push
push
dec
push
mov
scas
push
mov
pop
repz
dec
incl
xchg
and
cld
jbe
mov
sbb
push
cwtl
es
mov
ret
shr
lods
loope
insb
sub
sahf
inc
iret
pop
add
jns
ljmp
rolb
push
inc
test
jb
mov
fnsave
pop
sub
sahf
push
test
xlat
repz
movsb
mov
faddl
mov
pop
dec
adc
aad
xchg
inc
add
mov
sbb
pop
in
sbb
dec
adc
or
inc
cmp
fistpl
ficoms
ljmp
leave
fwait
sbb
call
jg
xlat
lret
lods
jns
mov
cmp
xor
scas
adc
or
fwait
mov
outsl
sbbl
xor
xlat
mov
xchg
adc
call
push
xadd
jge
mov
or
pop
jns
sub
aad
fcomp
fisubl
add
fisubrs
push
cmp
sbb
in
aas
xchg
rcrb
in
pushf
xor
cmp
mov
fldenv
push
xchg
push
push
mov
ja
pop
mov
mov
imul
push
push
mov
gs
pop
and
sti
stos
ja
in
sti
aad
xchg
push
add
hlt
imul
imul
push
das
mov
xchg
lods
sbb
movsb
js
sbb
push
dec
jg
int
xor
mov
inc
cmp
push
sbb
jae
inc
jecxz
xor
andl
mov
pop
jg
jo
nop
out
xchg
jp
jne
js
fwait
pop
pop
sbb
scas
hlt
cltd
push
inc
xor
push
ja
or
inc
mov
ss
adc
dec
dec
pop
cmpsb
push
sahf
arpl
aas
out
cwtl
icebp
aas
jmp
rclb
cmp
sbb
xor
rol
xor
lret
xor
xlat
dec
or
sahf
fs
mov
sbb
mov
and
mov
and
clc
sub
mov
jnp
pop
or
in
inc
cmp
pop
ret
in
mov
jp
adc
xchg
jo
cmpl
shlb
adc
repz
loop
jae
or
adc
add
mov
push
test
outsb
cli
lods
sub
pop
add
mov
cmp
pop
leave
sbb
imul
in
and
jg
lahf
jb
lea
and
fisttpll
imulb
xor
mov
lock
fdivp
cs
xchg
mov
ret
mov
adcb
adc
mov
inc
ss
into
icebp
stc
out
jle
dec
out
aad
sub
addr16
cwtl
cmp
sub
sti
mov
xchg
dec
ret
pop
pop
and
xchg
pop
push
inc
rclb
scas
mov
rorl
outsl
sti
outsb
rcr
data16
cltd
rolb
adcl
mov
cmpsl
stos
mov
jle
in
mov
dec
adc
sbb
xor
popa
imull
sbb
push
inc
mov
cld
jnp
shrb
push
outsl
stos
mov
dec
lods
xchg
or
cmp
lar
loop
cmc
push
mov
mov
fimull
sub
ljmp
push
push
push
dec
jnp
and
idivl
cltd
or
icebp
adc
xchg
stos
cmp
xrelease
mov
and
pop
xor
bound
xlat
cmpsl
jne
out
lret
dec
pushf
or
das
mov
xchg
repnz
inc
fstl
ficompl
mov
jb
outsl
fidivrs
ds
lods
negl
pop
lahf
in
aaa
clc
insb
dec
xchg
shll
cmp
cmp
fstpl
pop
inc
xor
ja
arpl
test
es
or
jo
aad
mov
fdivp
jg
cmp
xchg
mov
push
pop
es
lods
aam
dec
sub
mov
sbb
push
pushf
sub
dec
test
jns
inc
mov
icebp
add
mov
test
lds
inc
scas
push
jbe
jle
ljmp
push
xchg
jmp
in
cmpsl
inc
jne
lea
sub
cmpl
cmp
insl
xorb
push
mov
test
out
data16
cwtl
dec
mov
insb
mov
sub
notb
pop
cmovl
add
mov
shlb
in
add
and
out
push
gs
mov
or
xor
jl
inc
sbb
and
enter
out
das
xchg
int
pop
adc
leave
inc
shl
int
shlb
sub
ja
dec
stos
sarb
add
movsl
add
add
xor
ja
cmp
jns
push
inc
nop
sub
xchg
and
pop
mov
cmp
jbe
adc
sbb
add
adc
pushf
inc
pusha
decb
mov
jge
insl
pop
daa
jo
scas
cmpsl
xor
jo
mov
mov
mov
hlt
lahf
pop
fwait
rcll
xlat
adcl
sahf
xor
inc
fimuls
pop
hlt
movsb
sub
xchg
mov
stc
dec
popf
and
add
jb
popf
insb
leave
scas
push
mov
sub
out
xchg
push
and
inc
push
pop
testb
clc
mov
push
movsb
in
enter
gs
int
lcall
es
testl
loopne
mov
sbb
xor
movsb
fdivrl
stc
mov
jp
mov
cmc
jp
jl
xlat
push
js
loop
push
ret
aam
rcrb
jl
test
ss
push
inc
adc
sub
fsubrs
jl
pop
cwtl
xchg
movsl
test
imul
adc
dec
mov
sbb
mov
leave
je
call
xchg
push
cmpl
jle
add
in
rorb
xor
jge
fmull
or
jnp
xchg
pop
mov
or
dec
fmull
cld
inc
cs
les
out
pop
mov
cmpxchg
ret
sti
inc
pop
shlb
cmc
rol
out
mov
aaa
push
dec
cmp
loop
or
or
ja
sub
add
inc
ss
adc
out
fisubrl
outsb
out
sub
xor
xor
ja
sub
repz
push
and
push
fbstp
movl
mov
fbstp
mov
xor
mov
std
scas
roll
rcll
js
push
sbb
imul
or
adc
sti
sbb
gs
mov
push
jp
inc
lods
xor
xchg
push
push
fbstp
test
pop
aam
xlat
mulb
xor
fisubs
push
and
sub
clc
ficomps
sbb
and
movsb
xchg
fidivrl
sbb
or
mov
mov
jmp
arpl
aas
pusha
int3
and
jg
loopne
push
inc
sbb
xor
shrl
test
insl
ljmp
mov
bound
std
pop
inc
repz
jmp
fdivrs
leave
enter
jnp
daa
push
xor
in
dec
call
loop
cld
ja
sbb
push
scas
cmp
pop
cmc
decb
test
mov
mov
and
push
xchg
jnp
push
hlt
outsl
psrlw
cwtl
jle
push
push
dec
add
cltd
scas
les
push
or
add
pop
push
sbb
jb
dec
lds
jns
gs
jo
shlb
arpl
movsl
jg
xor
xor
xor
and
dec
xchg
rcl
cmp
lcall
mov
pop
test
jge
push
lret
pop
popa
adc
loop
push
push
outsl
insb
push
jb
cmc
mov
dec
xchg
add
and
jbe
mov
into
shl
pop
repnz
sub
cltd
dec
ret
cmpsb
sbb
mov
cmp
sbb
dec
mov
xor
lret
and
xchg
and
sub
jne
dec
or
dec
jg
push
xor
cmp
adc
mov
fwait
sbb
mov
jle
test
pop
es
mov
arpl
pop
das
jp
xchg
pop
loope
xchg
pop
les
orb
ds
lock
add
lock
inc
adc
or
xor
ds
xor
lahf
adc
push
fpatan
inc
inc
lahf
or
cmpsb
xor
sbb
nop
dec
cmp
pop
xchg
inc
pop
scas
mov
mov
mov
cli
movsl
and
imul
sub
pop
jnp
cmpsb
xchg
push
pushf
sub
outsb
sub
or
mov
cmp
add
andb
pop
mov
fidivrl
loope
mov
jmp
aas
scas
mov
add
int
push
into
test
xor
pop
test
dec
mov
repnz
cmpsl
call
cmpsb
incb
fdivrp
stc
lcall
into
nop
out
dec
sbbb
aas
je
xchg
jl
ja
je
push
fidivs
insl
stos
sti
mov
sbbb
jnp
popa
mov
cmp
incl
in
cmp
clc
test
ror
aam
jnp
cmp
mov
js
scas
das
or
out
orb
test
mov
mov
and
jae
imul
aad
lods
lods
inc
leave
adc
test
sub
scas
or
je
jbe
and
jb
cmpsl
push
or
jo
xor
and
sub
insb
pop
adc
sbb
mov
mov
mov
mov
cli
out
cli
mov
xor
imul
pop
xchg
jge
push
shrb
insl
sub
lods
push
fists
inc
push
in
orb
nop
xor
iret
lret
cmp
sub
cmpsl
xor
dec
or
jb
ss
adc
add
rolb
push
push
xchg
aaa
xchg
jo
xor
cmp
push
sbb
insb
mov
mov
cmp
repz
xor
jmp
sub
pop
add
cmp
xchg
and
movsb
pop
mov
jbe
ret
lods
stos
cmp
in
sbb
jl
orb
sbb
lret
mov
shrl
shrl
sar
fdivs
inc
pop
pop
mov
inc
add
xor
cli
clc
and
in
push
jg
xor
mov
sbb
jl
stc
mov
pop
inc
cwtl
test
mov
sub
aas
push
cmp
inc
pop
addr16
jecxz
add
mov
scas
push
pop
mov
nop
xchg
sbb
jb
mov
mov
and
mov
fdivs
sub
mov
mov
pushf
aad
sbb
int3
dec
sarl
sub
push
sub
mov
out
test
pop
pop
xor
scas
xchg
jg
add
fucompp
jb
mov
push
xchg
lahf
lahf
in
neg
mov
je
inc
add
insb
cmp
icebp
insb
cmp
pop
cmp
mov
std
pop
add
push
pop
outsl
arpl
pop
jbe
pop
int3
stc
push
lcall
mov
dec
sub
jnp
lahf
mov
pop
sub
mov
in
jns
adc
aaa
jb
adc
cmp
ss
jl
test
push
sub
sbbl
xchg
push
clc
push
scas
sbb
push
sbb
ret
call
cwtl
arpl
cmp
sub
add
sub
outsb
addr16
icebp
mov
ffreep
dec
ljmp
fisubl
mov
mov
lret
lahf
daa
sbb
shlb
adc
aaa
repnz
subps
xor
aad
ss
lock
cs
sub
xor
cwtl
js
add
and
adc
aad
mov
loopne
xlat
loope
sub
shrl
add
lock
add
push
mov
test
jae
jecxz
aad
repz
mov
mov
push
insb
sbb
mov
sub
cli
push
inc
and
pushf
idivl
iret
iret
push
push
les
sub
leave
mov
and
inc
les
ret
fstpt
addb
mov
push
stos
adc
mov
lret
rolb
push
fistpll
vmovntdq
dec
je
or
call
fwait
ret
sbb
add
jne
mov
cmp
les
jae
mov
jp
lret
int3
addr16
inc
arpl
lea
xlat
sbb
inc
push
mov
sub
in
lahf
pop
or
cmp
fwait
dec
aaa
pusha
mov
mov
loopne
mov
mov
rorb
sub
sbb
gs
adc
pop
loop
xchg
int3
stos
dec
ss
adc
mov
mov
fbld
dec
arpl
xchg
adc
bswap
pop
sbb
push
dec
scas
inc
mov
sub
andl
aam
cli
pop
mov
inc
sbb
xchg
fstps
inc
jne
xchg
lret
rclb
les
lods
adc
mov
fdiv
mov
sub
push
test
bound
lods
xlat
jmp
cmp
inc
pushf
popa
je
fstpl
lods
ja
cs
mov
xor
shr
in
or
jge
movsb
mov
sbb
xor
and
adc
jnp
pusha
mov
gs
pop
je
push
ds
dec
inc
xor
and
cmp
jg
mov
gs
xchg
dec
pop
in
xchg
por
xchg
sub
dec
mov
xor
call
push
xchg
mov
test
aaa
jns
mov
inc
push
rcll
add
dec
xor
and
lret
mov
and
jmp
into
stos
in
pop
shlb
mov
lret
mov
outsb
sub
add
dec
or
icebp
in
push
sbb
subl
into
lret
sub
mov
or
scas
jo
push
popf
cmp
orb
sub
mov
aaa
push
daa
cmpsl
rcll
cmp
xchg
push
sub
mov
xchg
sbb
sub
adc
xchg
leave
pop
fwait
cld
pop
add
outsl
jge
xchg
push
mov
and
inc
pop
in
rcll
movsb
ret
ds
negb
cwtl
push
jno
jns
mov
lcall
inc
mov
dec
pop
nop
dec
jae
cmp
inc
mov
cli
pop
xchg
leave
lods
jnp
xchg
push
cmp
dec
inc
sbb
movsl
add
mov
mov
mov
rcll
xor
setl
cld
jg
cmp
fisubs
lahf
jp
lods
inc
push
stos
test
out
sub
add
push
mov
stc
out
lock
movsl
loope
jb
out
mov
aaa
pop
jmp
pop
and
xchg
push
sbb
mov
negl
mov
jae
sbb
in
js
sub
cmp
xchg
xchg
mov
lock
repnz
xor
or
out
cmp
xor
addr16
adc
sbb
pop
les
icebp
lret
jmp
xchg
out
add
mov
and
aad
jb
mov
mov
adc
cmp
jnp
int3
mov
jne
pop
mov
rcll
stos
daa
mov
sub
in
addr16
repz
xchg
mov
jns
ss
stc
mov
mov
les
or
arpl
sub
lret
push
aad
cmc
add
ljmp
rcr
roll
inc
cmp
push
push
mov
testl
mov
pop
pop
push
dec
and
lret
pop
cmp
aas
cli
pop
sti
sar
scas
or
test
adc
pop
dec
dec
push
dec
add
add
push
jbe
and
pop
add
jp
mov
cmc
push
cld
xor
jecxz
shlb
and
divl
and
fsubs
ret
and
dec
lea
out
aas
sub
ja
pushl
jne
or
mov
push
lahf
imul
adc
das
xor
jbe
fistpll
mov
add
xor
int
movsb
or
loopne
and
cmc
sbbb
js
ja
or
mov
push
xlat
nop
push
mov
push
cmpsb
add
stos
add
out
stc
push
sub
inc
or
dec
push
idivb
push
pop
xchg
push
sbb
scas
lock
dec
in
or
xchg
xor
push
lea
mov
xchg
rorb
xor
inc
dec
push
inc
and
mov
mov
and
pop
mov
cli
fwait
xor
data16
sub
fldenv
dec
jns
adc
and
test
mov
push
pushf
pop
adc
nop
xor
pop
mov
ror
ret
in
sbb
cwtl
es
jmp
pop
xchg
sub
jbe
xchg
sti
xchg
test
dec
hlt
arpl
pmaxsw
subl
movsb
pop
inc
fidivs
mov
scas
and
stos
testl
xorb
std
ds
mov
out
fiadds
mov
cmpsb
xor
mov
lods
out
stos
add
mov
subb
movsb
pop
movsb
xchg
mov
lret
nop
mov
mov
adc
test
movsb
popf
inc
add
jge
sbb
les
movsl
filds
int
add
rolb
mov
adc
jmp
dec
test
rclb
outsl
pop
dec
shrl
adc
sbb
adc
test
add
xchg
ja
inc
inc
mov
lods
pop
push
pop
xor
fcoml
jle
in
mov
shlb
mov
das
mov
arpl
xor
xchg
out
test
fidivl
lds
leave
and
or
jns
insl
sbb
mov
ds
xchg
js
push
in
fst
cmp
mov
sub
cmp
divb
inc
xor
cld
enter
daa
or
in
pop
or
adc
mov
sbb
jne
cld
fs
sbb
or
sti
popa
inc
mov
pushf
cwtl
por
pop
popf
and
pop
loope
mov
mov
test
popf
test
xor
push
stos
jp
cmp
cmp
js
add
xor
add
sbb
push
fcmovbe
mov
in
loope
jo
push
inc
or
jp
ds
push
jmp
popf
test
inc
in
lahf
iret
sti
aad
addr16
scas
and
cmp
cli
sar
stos
sub
pop
popf
mov
mov
shll
addl
lret
stos
add
push
add
imul
sbb
lods
add
clc
roll
enter
popf
fs
sbb
push
sbb
and
xor
mov
cmp
adc
scas
jno
addr16
jb
aam
popa
js
jne
jecxz
int3
pushf
nop
das
add
jo
data16
repnz
push
add
idivb
ja
cwtl
orb
cmpsb
mov
pop
and
or
push
cmpsl
xchg
cmc
frstor
rorl
and
sub
test
sbb
cmp
imul
test
inc
fs
sub
adc
roll
cmpsl
repz
mov
sub
mov
das
into
ret
mov
jl
mov
dec
add
jle
xchg
mov
imul
aad
int
lret
into
sbb
jns
push
lahf
push
pop
ss
inc
sbb
add
in
jnp
ret
pop
inc
lods
push
push
es
lods
mov
pop
out
pop
sbbl
adc
cmpsl
andl
aaa
rcrb
movsl
xor
cli
add
imul
sti
out
dec
test
mov
sbb
movb
mov
fwait
movsl
cld
jmp
int3
and
cmp
cwtl
xchg
leave
jl
jae
xchg
adc
pop
mov
sbb
leave
test
fs
pusha
mov
jnp
je
fcmovnu
lods
xor
and
insb
aaa
pop
push
loopne
push
test
iret
cmpsl
mov
add
movsl
gs
sub
inc
inc
xchg
sbb
mov
jno
cmp
cmc
mov
dec
push
xor
leave
mov
sbb
push
pop
pop
orl
xor
pop
sub
mov
fmuls
roll
pushf
cltd
inc
ret
push
loop
sbb
dec
push
mov
or
adc
cmc
fidivs
mov
jbe
mov
cmp
push
jecxz
aaa
sub
das
stos
push
xor
xor
sub
loop
jge
inc
roll
inc
lds
mov
test
xor
pop
and
movaps
scas
fists
sbb
scas
cwtl
shll
lods
lds
ja
mov
sarl
in
icebp
ret
mov
xor
ds
out
and
xchg
adc
movsl
push
push
xor
inc
sub
xchg
imul
jle
shll
cmp
es
and
cld
push
mov
push
fsubrl
cs
fildl
push
gs
xor
sub
dec
stos
or
in
fisubl
test
add
adc
ja
sahf
sbb
xchg
testl
mov
daa
add
adc
into
push
adc
mov
lcall
sub
std
mov
pop
push
push
dec
mov
add
jo
pop
jge
stos
loop
movsb
aaa
faddl
mov
xor
push
mov
jbe
rorl
and
cmpsb
mov
xorb
insb
test
jp
push
pop
mov
clc
add
ret
outsb
outsb
pusha
fld
or
jle
mov
dec
sbb
shlb
xchg
add
push
fsubrl
sub
ret
shlb
clc
add
stos
outsl
mov
testl
xchg
adc
mov
dec
cmp
cmp
pushf
xor
dec
xchg
mov
ja
jae
lret
dec
dec
or
test
shlb
fs
or
lods
mov
dec
lods
jae
jle
jp
adcb
pushf
xor
jnp
and
flds
cmp
in
call
mov
inc
fsubl
dec
cltd
cmp
in
movsl
ds
push
shll
sbb
test
mov
jg
lahf
rcrl
fs
jo
push
inc
push
fisubrl
or
sbb
cmpb
mov
mov
push
jecxz
test
mov
lret
adc
shl
lock
jae
test
sub
sahf
or
scas
lods
sbb
dec
adc
pop
pop
sbb
mov
cmc
pop
daa
lret
dec
imul
inc
mov
push
js
and
aas
cwtl
fsubs
xchg
aas
cmp
add
jnp
stos
push
out
pop
sbb
dec
cmc
test
jns
dec
dec
push
pop
mov
mov
clc
jno
fisubrl
icebp
insb
out
add
cmpsl
shll
inc
add
dec
imul
aad
jnp
mov
jb
mov
mov
pop
inc
or
decl
aaa
ds
xchg
rcrl
stc
test
pop
inc
or
scas
rolb
ja
jmp
add
xchg
vpsubusb
push
inc
push
ret
je
mov
lock
stos
add
adc
fidivrl
outsl
and
jp
and
inc
pop
insl
daa
sti
xchg
sahf
movsl
pop
adc
xchg
in
or
or
aam
adc
and
cmpsb
sbb
push
mov
inc
cmp
cltd
sub
and
or
mov
sarl
mov
aas
gs
or
jp
out
jae
inc
dec
or
jg
add
outsl
dec
rcrb
xor
call
mov
or
mov
call
xchg
add
cli
nop
sub
fistpll
cmp
mov
xchg
repnz
mov
ljmp
jae
arpl
nop
cltd
inc
ror
insl
adc
lods
lahf
push
xchg
lret
cmp
xchg
in
mov
inc
pop
fldenv
fisttps
push
xor
xor
sub
lcall
gs
push
and
outsb
xor
fstps
lret
add
negb
add
cmp
jne
pop
loope
in
cli
rorl
pop
loopne
xchg
jns
xor
jl
jmp
pushf
dec
jne
jl
inc
sti
cmp
xor
sbb
stos
arpl
in
icebp
dec
xchg
out
imul
test
negb
movsl
data16
loopne
sub
mov
int3
lods
int
xchg
dec
loope
ds
insl
mov
rorl
add
add
mov
stos
push
movl
sbb
sub
cmpsb
fcoms
outsl
mov
jb
mov
popl
add
sub
hlt
stos
or
adc
lret
mov
mov
inc
sub
mov
movsb
jns
js
orb
cwtl
mov
xor
cs
addb
in
sarl
aas
sbb
bound
popl
daa
pop
jecxz
shlb
fdivl
or
pop
dec
xor
lods
inc
lds
mov
insl
push
adc
cmp
ja
mov
das
cmp
arpl
fisubrl
dec
leave
das
mov
stos
ret
fisubl
into
mull
fisttps
xor
cmpsl
fstpt
std
cmc
loope
xor
xchg
jb
xor
loop
out
add
push
cmp
pop
out
int3
sarb
pop
lahf
xchg
lods
sub
push
movsl
enter
add
push
or
mov
hlt
mov
shrb
xor
arpl
push
mov
and
sbb
pusha
lret
push
pushf
loopne
adc
out
shrb
inc
sahf
cli
mov
inc
inc
std
cwtl
sbb
icebp
cmp
push
inc
push
push
test
aam
sbb
hlt
jo
jge
ret
test
data16
imul
shll
sbb
jb
ljmp
push
push
mov
scas
sti
leave
mov
jmp
fisubs
aaa
xchg
das
imul
inc
lret
sbb
sarl
xor
stos
test
imul
arpl
jnp
mov
and
in
xlat
addb
and
jnp
ljmp
daa
fistps
in
add
dec
outsl
pushf
js
lods
cmp
cmc
addb
out
scas
cmc
dec
cmp
cmp
int3
or
sbb
hlt
jge
aam
pop
jge
cmp
adc
shll
dec
ret
mov
xchg
cmpsl
xchg
fwait
pop
mov
jno
push
inc
clc
std
orb
lods
out
inc
adc
inc
cvtps2pi
inc
lods
mov
in
popa
mov
jo
clc
mov
stc
fwait
or
push
inc
inc
cmp
xor
mov
jbe
mov
mov
jmp
cmp
adc
hlt
add
out
inc
lret
adc
ror
xchg
push
call
pop
sbb
inc
inc
push
adc
stos
adcb
xchg
adc
cmp
int3
lods
clc
loope
cmpsb
push
jnp
aad
or
sub
pop
dec
inc
into
cmp
call
std
push
outsl
jo
icebp
stc
jmp
inc
repnz
pop
mov
int3
lea
jmp
repz
pop
lods
leave
pusha
sub
idiv
leave
dec
into
out
shlb
jne
sub
outsb
sbb
mov
or
mov
xor
xchg
fimull
xchg
stos
push
pop
jae
or
aas
fcoml
xor
push
fbld
inc
cmpsb
outsl
outsl
or
adc
sahf
jae
mov
test
rcll
jo
mov
aaa
mov
movsl
cltd
fidivrs
mov
iret
mov
dec
iret
mov
sbb
rcl
jp
cld
flds
call
es
repnz
out
xor
ret
jle
dec
sbb
or
mov
lods
aaa
sub
xor
out
negb
sub
jae
bound
int
jnp
mov
out
xchg
adc
xchg
shlb
dec
in
dec
sti
mov
aam
ds
sarl
cmc
pop
stc
sbb
adc
mov
mov
xchg
mov
mov
inc
cvtpi2ps
sbb
sbb
push
or
ss
inc
inc
lret
lods
xchg
les
ficomps
pop
dec
mov
out
out
shrb
push
out
in
inc
xor
in
aam
scas
sbb
ret
neg
cli
cmp
pop
int3
pop
push
fists
movsl
out
mov
rcrl
adc
adc
repz
xor
pop
into
xchg
pop
aas
sub
mov
xor
scas
js
sub
movaps
sbb
imul
sub
jne
dec
jle
mov
stc
repz
push
cmp
mov
pop
daa
call
shll
and
fwait
mov
jo,pn
jp
stos
cmp
xchg
mov
lret
into
adc
pop
loopne
mov
les
lock
imul
jmp
imul
ja
xor
mov
mov
ja
jne
mov
mov
je
stos
lret
out
imul
jl
lret
outsl
insb
and
mov
cmp
out
dec
int
adc
aaa
sti
shl
pop
adc
lcall
pushf
nop
cld
scas
iret
mov
mov
data16
and
stos
xchg
repnz
imul
dec
jmp
outsb
cmp
lock
cmc
sub
bound
out
roll
xor
out
push
xchg
cmp
movsb
push
inc
xchg
mov
or
mov
mov
dec
cmp
adc
in
cmp
sti
pushf
in
pop
push
pop
lret
jp
test
int
fstpl
rorb
mov
jmp
aam
cmpsl
jmp
mov
adc
out
inc
call
sbb
int3
mov
test
lahf
mov
movq
outsl
scas
lahf
je
xchg
lea
decl
push
jo
movb
and
mov
mov
mov
lret
fcoms
repnz
jne
push
xor
pop
adc
jo
cwtl
and
xchg
push
xor
rcr
pop
notb
xchg
insl
or
cmpsl
add
or
aas
outsb
mov
xchg
cs
lods
andl
xor
jb
jae
loop
add
ja
push
jns
adc
mov
shll
push
enter
hlt
pop
mov
jl
fiaddl
jbe
pop
int
test
mov
jns
or
les
cmp
leave
jns
mov
xor
into
ds
sarl
jmp
xor
dec
inc
ss
nop
movsl
rcrb
mov
push
movsl
int
pop
cwtl
int3
cmpsl
sbb
ret
pop
and
sbb
cmpsl
movsl
sub
out
and
and
lds
sahf
stc
xchg
mov
ljmp
mov
repnz
aad
xchg
inc
xchg
jp
fidivrs
lcall
pop
push
mov
or
in
mov
push
jl
test
mov
add
jbe
mov
pop
addb
add
sub
inc
mov
int
insb
push
nop
xchg
mov
nop
mov
adc
xchg
icebp
and
and
out
lret
sbb
movsl
push
dec
shrl
das
divl
jo
popf
inc
dec
clc
sbb
xchg
mov
pop
std
mov
fists
cwtl
idivl
and
fists
repnz
out
cmp
pop
sbbb
add
add
imul
jmp
dec
lcall
out
lock
adc
pop
sub
fsts
mov
adc
int3
push
xor
and
dec
push
pop
jmp
jo
push
outsl
and
int3
jle
mov
pop
sub
jnp
lahf
push
out
arpl
mov
lcall
sarb
or
jo
dec
jmp
inc
fsubr
fwait
sub
cwtl
shlb
push
mov
xchg
call
out
rcrl
gs
iret
jp
xchg
popa
and
adc
mov
add
fs
test
or
cmc
mov
aad
jae
out
mov
adc
shlb
dec
cmp
sti
iret
mov
or
shll
test
and
and
and
and
jmp
or
xchg
scas
inc
xchg
mov
mov
jno
xchg
mov
jp
dec
lea
mov
scas
jmp
subl
jno
rcll
stos
loopne
fldenv
and
push
cld
out
jmp
pop
mov
iret
mov
subl
jnp
fmul
lahf
xchg
push
mov
lods
push
test
push
cltd
xchg
and
mov
push
cltd
jg
mov
adc
mov
fidivs
test
push
cli
push
repnz
jl
xor
mov
fldt
dec
xor
add
jae
inc
and
fstps
jmp
mov
aaa
icebp
push
in
popf
sbb
xchg
cmpsb
xchg
jp
ljmp
jg
push
scas
mov
jecxz
in
jmp
pop
mov
mov
mov
push
shr
mov
add
cmp
popa
lods
repz
js
sbb
adc
and
xor
movsl
push
or
mov
mov
lahf
pop
cmpsl
sti
and
sbb
loop
cwtl
aas
dec
xor
hlt
xchg
cmpsl
scas
mov
jb
inc
sbb
lret
jne
cmp
cmp
mov
insl
cmpsb
push
sbb
pop
shr
mov
femms
inc
nop
and
loope
push
ret
icebp
xchg
enter
add
sub
sbb
repnz
ret
and
mov
inc
sbbb
pop
and
xor
sub
in
xorb
dec
push
sahf
fldenv
xchg
cwtl
mov
jmp
std
scas
sbb
out
push
repnz
dec
pusha
push
dec
in
push
xlat
pop
mov
sub
sbb
mov
sbb
jmp
movsb
mov
lret
lcall
pop
push
push
nop
adc
jge
fstl
aaa
stos
jl
xor
cmpsb
inc
add
xor
int
pop
aaa
loopne
jg
xchg
adc
pop
mov
cltd
push
jmp
fwait
mov
push
loope
out
arpl
notb
jno
nop
sti
gs
mov
or
ret
sub
scas
mov
ss
bound
lds
inc
jae
loopne
cs
mov
cmpsb
bnd
push
cmc
push
cmp
push
jl
mov
ja
pop
int
inc
lcall
ljmp
mov
mov
xchg
insb
sub
or
roll
loopne
loopne
icebp
nop
pop
enter
clc
andl
ds
outsl
div
stc
mov
clc
and
mov
rorb
rol
pop
sbb
xor
and
inc
out
stc
push
xor
popf
mov
les
fnstcw
sub
sub
jbe
and
mov
imul
sbb
jmp
hlt
in
add
mov
jae
lret
jmp
sub
push
mov
cld
dec
jmp
add
call
sbb
icebp
adc
push
sbb
cmpsb
mov
inc
xlat
outsl
push
arpl
push
push
icebp
test
jmp
lods
shlb
andl
inc
mov
inc
add
adc
mov
lods
xchg
mov
add
arpl
in
pop
pop
sahf
and
mov
pop
ret
inc
or
sub
sbb
aas
mov
sti
aam
aam
xchg
lret
jl
pusha
int
xchg
or
inc
ljmp
mov
out
dec
sbb
lahf
cmp
dec
mov
lods
push
bswap
leave
lock
iret
popf
mov
out
push
adc
fwait
mov
push
ret
arpl
iret
imul
int3
sbb
dec
pop
scas
cmpb
pop
gs
lcall
aad
inc
pop
adc
adc
mov
adc
addl
inc
test
push
dec
dec
sub
mov
sub
mov
push
insl
clc
enter
rclb
insb
outsb
and
inc
gs
inc
xchg
loop
cmc
shrl
fistl
ja
jbe
hlt
mov
and
inc
push
adc
outsb
add
subb
mov
punpcklwd
sbb
or
gs
xlat
and
jno
imul
lods
adc
jg
add
adc
mov
hlt
pop
bound
mov
shll
push
dec
pop
cmp
mov
dec
xchg
cmp
ret
add
stc
mov
ss
in
mul
cmp
mov
popf
pop
inc
mov
dec
negb
aas
or
lock
jmp
sbb
dec
cmp
iret
and
mov
std
inc
sbbl
push
push
jns
mov
lods
dec
or
and
aas
das
into
push
test
push
or
ret
enter
xor
fbld
jg
jns
nop
xchg
pop
inc
push
shll
iret
or
sbb
sub
cmp
test
stc
bound
stos
lcall
push
shll
sbb
mov
mov
sbbl
clc
es
cmc
cld
mov
add
cmp
jmp
es
sbb
out
test
sti
iret
out
xor
xor
jmp
mov
adc
pop
jg
das
rol
and
or
add
cmpsb
int3
js
jbe
xor
mov
fidivrl
push
xchg
and
sub
aaa
lods
je
mov
jb
sbb
and
xor
mov
jns
arpl
cwtl
add
jo
xor
cmpl
xor
cmp
xor
cli
inc
push
filds
loope
add
cmp
addr16
sub
add
outsb
sti
das
in
lahf
lret
jno
pop
cmp
jp
lods
test
pop
mov
pop
inc
cmp
icebp
sbb
or
orl
and
mulb
jnp
loopne
stos
in
cmp
ja
mov
loope
imul
ret
inc
or
arpl
nop
adc
aam
push
dec
aaa
cmc
push
outsb
xchg
sbb
dec
pop
std
jne
scas
cmp
sbb
mov
adc
jb
jecxz
cmp
mov
mov
mov
jo
out
bound
icebp
scas
xor
xchg
mov
push
mov
xchg
stos
jle
pop
ret
subl
sbb
test
jmp
loop
dec
xchg
lock
mov
mov
shll
push
lds
jg
repz
xor
rcr
rclb
dec
jmp
call
sahf
adc
clc
inc
cmp
fs
scas
add
testl
push
mov
mov
adc
sbb
mov
xor
mov
cmp
mov
repz
mov
xchg
mull
imulb
mov
push
pop
movsl
dec
fnstenv
arpl
daa
xlat
out
dec
inc
cmp
adc
clc
pop
add
imul
and
cld
inc
mov
jmp
andl
cmp
xor
xchg
loope
xor
ret
std
test
iret
mov
mov
loope
cmp
cwtl
pushf
std
test
inc
add
jne
repnz
or
or
fiaddl
repnz
adc
scas
xor
mov
jl
jne
inc
mov
insl
leave
xor
insl
mov
pushf
xor
stc
push
jae
fidivrl
push
outsl
sub
xchg
jmp
or
sbb
ss
sub
xchg
lds
adc
call
aad
sbb
clc
add
shll
pop
pusha
aam
sub
or
inc
subb
clc
inc
jno
cmp
pop
push
xor
jmp
lcall
and
inc
push
in
or
scas
inc
push
enter
sbb
and
fldln2
push
xchg
and
pushf
pop
insb
sbb
mov
ret
out
aaa
loop
inc
sub
clc
testb
mov
shll
cld
lods
mov
xchg
clc
mov
sub
adc
adc
shrl
pop
mov
push
repnz
nop
bound
insl
lods
add
repz
fnsave
pusha
mov
adc
add
jno
jmp
pop
lret
ret
jmp
mov
cmp
or
frstor
test
mov
mov
test
cli
fcoms
mov
fstl
ret
xor
lret
mov
add
adc
push
bound
sbbl
mov
push
imul
out
xchg
push
cmp
fwait
cmpb
xor
mov
adc
mov
lcall
inc
cld
nop
lock
or
es
adcb
jp
mov
push
jmp
out
cmp
adc
outsl
or
loopne
cmp
sbb
repz
pop
jmp
add
mov
movsb
xchg
sub
mov
movb
in
add
lock
imul
xchg
cmp
xchg
ret
cs
inc
out
das
in
cli
or
in
insl
cmp
jns
or
in
xchg
sub
sbb
out
call
es
ja
les
ret
cmpsl
pop
cmp
loop
cmp
repnz
xor
jecxz
enter
test
stos
in
xchg
or
scas
mov
mov
pop
dec
pop
js
dec
mov
jecxz
dec
xor
outsb
popa
push
pop
push
repnz
mov
sub
shlb
scas
jbe
dec
mov
std
out
cmp
adc
mov
popf
pop
xchg
cltd
add
addr16
cltd
sub
popa
pminub
inc
imul
sahf
dec
mov
js
inc
mov
aad
adc
jmp
push
stos
fdivl
adc
lds
xor
sub
xchg
je
rcrl
push
pop
xorb
mov
scas
addr16
lods
mov
xchg
les
test
je
mov
and
ds
xor
mov
insb
xor
and
and
aad
enter
adc
sbb
mov
sub
mov
bound
loop
push
inc
jmp
push
xchg
out
sbb
lods
sbb
out
insl
xor
pop
cmpsb
rorl
mov
outsl
push
aam
daa
jne
or
ficompl
pop
push
mov
inc
inc
leave
idivb
push
lock
xchg
inc
sbb
pushf
and
movsb
jge
xchg
push
mov
in
xchg
adc
lcall
xor
and
xchg
repz
jge
push
es
push
pusha
cmp
pop
cmp
out
mul
int3
cmpb
mov
icebp
stos
or
inc
in
test
cmpsb
mov
push
mov
fisttps
imul
push
mov
out
and
imul
repz
adc
cmpsl
push
inc
aaa
push
aas
inc
mov
in
mov
xor
or
and
jle
sbb
dec
clc
jecxz
sbb
push
pushf
pop
aam
imul
xor
into
int3
cmp
test
pop
lcall
mov
xor
mov
push
pop
jb
hlt
rorl
xchg
ljmp
loopne
out
stc
divb
pop
mov
pop
inc
dec
mov
cmp
push
xor
adc
pop
int3
in
push
mov
subb
rorl
pushf
lret
insl
dec
cmp
outsl
subl
inc
cwtl
mov
mov
sbb
bound
mov
xchg
adc
jp
aas
pop
outsl
push
jae
stos
scas
fsubrl
adc
les
add
loopne
sub
fidivl
in
lods
minps
lea
imul
test
jne
jb
cli
pop
pop
and
arpl
out
xchg
and
lret
adc
cmp
dec
sbbl
pusha
inc
es
daa
sets
inc
push
cli
and
pop
rcr
aam
popf
xchg
cs
lods
in
ret
or
push
jg
shrb
and
cmp
xor
fldt
cltd
add
jnp
stos
cmp
push
ljmp
je
jecxz
mov
dec
push
stos
pusha
lods
pop
pop
hlt
inc
out
mov
out
imul
push
test
cs
icebp
jmp
and
popf
xchg
negl
ljmp
push
push
ljmp
sbb
fdiv
shll
jnp
or
mov
cltd
adc
or
inc
lock
jmp
ljmp
and
adc
and
sub
push
push
push
icebp
jmp
in
out
push
nop
hlt
cmp
mov
fsin
mov
popf
xchg
push
icebp
xor
shrl
mov
aam
in
jl
xchg
and
inc
cmc
lret
insl
lea
inc
dec
xchg
mov
dec
xchg
popf
and
mov
mov
aam
data16
jmp
cmp
incl
incb
mov
mov
ljmp
add
xchg
push
xor
dec
les
jae
dec
push
mov
sub
adc
imul
jmp
xor
xchg
mov
add
mov
ss
addr16
shl
jne
sbb
lret
mov
jle
hlt
xchg
daa
pop
cltd
and
arpl
fidivrl
fs
lock
inc
push
idivb
cmp
rorb
add
loope
cmp
shlb
popa
lahf
out
pop
leave
sbb
xchg
pop
or
cmp
lret
xchg
cmp
aaa
adc
mov
adc
mul
sub
cmp
aad
jg
xlat
sarl
mov
jp
les
cltd
cmp
out
push
stos
pop
sbb
hlt
clc
xor
dec
cmpb
jno
mov
or
call
loop
int3
pusha
jl
mov
mov
clc
jge
icebp
cmpsb
sub
xor
jae
adc
mov
inc
ror
scas
xor
fidivl
dec
repnz
or
loope
enter
js
stc
cli
icebp
mov
mov
inc
das
sbb
inc
in
sar
add
jecxz
sub
jb
jns
fmull
fwait
sub
loop
std
cltd
push
ret
add
cmp
cwtl
pop
mov
lcall
mov
xorl
cmp
in
jl
test
ret
imul
pop
xor
enter
jge
jbe
call
in
adc
lcall
jle
call
dec
push
sbb
mov
fidivrs
fsqrt
xchg
test
lahf
pop
push
mov
popf
xchg
xchg
add
cmp
mov
jno
scas
pop
fucom
add
flds
pop
gs
testl
enter
mov
lea
das
bound
cmp
inc
mov
dec
mov
add
ljmp
cmpsl
sbb
inc
es
fs
xchg
insb
push
fwait
pop
dec
jp
push
add
out
add
mov
add
fcoms
cs
cli
fs
pop
xchg
lds
ss
fldl
xor
mov
lods
stos
out
fbstp
xchg
insb
cmp
cmp
add
repnz
adc
ret
cld
adc
les
mov
mov
addb
xor
xchg
dec
stos
js
orb
lods
addr16
aaa
or
aaa
repz
xlat
inc
mov
mov
sub
sub
lods
adc
stos
push
insl
sbb
and
pop
call
lea
adc
xchg
insb
scas
int3
add
mov
fistl
cs
cmc
fwait
test
or
lcall
cmpsb
jecxz
mov
gs
arpl
push
push
out
or
dec
int3
or
rcll
subb
loope
aas
inc
addl
loop
add
dec
scas
sbb
dec
scas
pop
std
rol
cltd
push
daa
jecxz
fisubrs
lock
js
cmp
pop
inc
cwtl
xor
loop
dec
dec
pop
ficomps
xor
dec
sbb
xchg
aad
adc
dec
es
and
gs
and
push
inc
jg
jl
fld
dec
ja
out
movsl
and
icebp
adc
xor
jle
rcrb
test
push
mov
lds
test
xor
jmp
sub
push
adc
test
test
mov
dec
loop
or
notb
mov
pop
xchg
mov
add
aam
mov
xchg
mov
and
in
addr16
aad
iret
dec
dec
jmp
cs
addr16
mov
mov
mov
mov
sub
push
mov
cmpsb
jge
in
xlat
jl
ljmp
sbb
and
or
mov
inc
lea
sbb
add
test
push
rcrl
es
xchg
adc
push
imulb
xor
movaps
cmp
stos
pop
pop
lods
adc
in
iret
sbbb
pop
adc
pop
movl
dec
daa
mov
mov
lea
cmpsb
xor
lds
mov
shl
divb
add
xchg
mov
mov
mov
daa
mov
cmpsb
pop
add
arpl
pop
push
packsswb
loopne
mov
add
xchg
mov
outsl
xorb
into
in
mov
outsb
outsb
xor
test
push
test
pusha
cmp
in
mov
mov
xchg
lret
xchg
jge
aaa
mov
shr
xchg
insb
es
inc
fistps
mov
jb
gs
aas
lcall
mov
jl
pop
xor
loop
imul
cmpsl
pop
and
stos
sbb
cld
fs
adc
ficomps
inc
sbb
and
daa
cmp
aam
xchg
pop
sbb
les
rolb
ja
sahf
jns
push
shlb
mov
jnp
subb
rol
lcall
xor
xor
or
cli
adc
xchg
jo
fistpl
cmp
mov
sti
mov
mov
sub
rolb
mov
stos
in
fnstenv
andl
test
cmpsb
in
std
in
filds
insl
ljmp
fld
rorb
divb
leave
rcrb
push
and
jle
gs
ret
divl
les
movsb
insb
dec
loopne
in
pop
imul
cmp
pop
rol
cmp
inc
out
inc
stos
sub
call
das
jmp
lds
inc
cwtl
mov
aas
filds
jae
lahf
cmp
repz
test
fxtract
popf
fmul
repz
mov
jle
test
jbe
repz
add
sbb
outsb
jecxz
imul
jle
imul
and
mov
lds
sbb
mov
xor
jbe
push
hlt
push
adc
fwait
pop
jg
add
xchg
imul
mov
call
pop
pop
imul
data16
loopne
adc
shlb
cwtl
lods
inc
je
nop
mov
dec
les
sbb
lds
clc
vmovaps
cmp
sub
je
pop
out
xchg
adc
cltd
mov
inc
xchg
cmp
adc
stos
sahf
insb
inc
test
call
cld
pop
in
push
js
push
ja
lret
dec
stos
push
push
push
mov
cmp
jmp
outsb
xchg
xor
jl
jecxz
adc
and
cmp
xlat
ret
push
ja
call
pop
jo
cmpsl
mov
add
jae
mov
mov
out
into
sub
std
jb
divl
aaa
and
std
pop
inc
jl
movb
mov
push
sub
lcall
out
push
pop
aas
mov
inc
lock
daa
sbb
sbb
rorl
sbb
xchg
sub
pop
fsubr
or
jns
and
cwtl
mov
sbb
bound
sbb
mov
addr16
mov
cmpsl
lods
call
mov
inc
sub
fwait
dec
add
test
lds
decl
or
les
and
jge
sub
insl
sub
movsb
jp
pop
in
cli
xchg
mov
enter
push
mov
fisubrs
inc
fsub
cmp
in
pop
dec
scas
je
cli
enter
lods
jg
popa
inc
in
arpl
push
nop
dec
adc
add
mov
inc
mov
int3
stos
cmp
outsl
sub
stos
and
mov
stos
xor
dec
insb
dec
sbb
test
fdivr
aam
adc
xor
shll
leave
xchg
mov
test
ljmp
sbb
lahf
sti
outsl
testb
cmpsl
jmp
or
pop
cli
imul
push
adc
in
lods
pop
sbb
lret
mov
dec
add
jmp
jo
inc
mov
add
ds
add
or
fcoms
mov
pop
dec
shr
insl
push
inc
lret
pusha
push
stos
int
adc
fbld
add
aas
in
cmpb
rcll
repnz
inc
roll
mov
or
in
cmp
or
xor
push
xchg
lcall
xor
jne
sub
jne
and
aas
push
aas
pop
shl
or
adc
xchg
mov
add
bound
cmp
jbe
mov
inc
in
jecxz
jne
stos
in
mov
jno
out
rcrb
ds
addr16
xor
cmp
orb
jmp
push
lock
rol
mov
jmp
or
and
sbbl
testl
dec
scas
mov
cltd
sub
cltd
push
or
lea
or
stos
mov
sub
pushf
cmp
and
push
jg
sbb
cltd
enter
orb
mov
dec
sbb
int3
mov
data16
mov
ja
js
imul
sub
add
es
mov
pop
mov
ret
mov
mov
add
mov
dec
out
xchg
and
jae
or
lock
adc
mov
mov
lret
pop
ja
jmp
xchg
data16
or
cmpsb
mov
mov
mov
rorb
sub
aas
pop
sub
dec
mov
rclb
mov
pop
jge
or
mov
call
ljmp
push
adc
aaa
cs
or
js
mov
adc
std
or
outsb
repz
lret
shlb
mov
pop
lock
je
push
mov
cmp
ret
ja
int
xchg
outsl
push
mov
sbb
sahf
sub
adc
daa
mov
pusha
data16
xor
or
jae
lret
xor
adc
test
test
enter
lock
rorb
mov
pop
jge
or
addr16
xor
cmp
divb
dec
push
mov
stos
lea
mov
negb
cmp
cmp
sti
aaa
out
xchg
push
xchg
enter
lods
cmp
lcall
stos
int3
mov
xchg
mov
xor
test
nop
orl
jns
mov
scas
xlat
and
cli
mov
sbb
fdivl
push
outsb
repz
stc
cs
div
popa
arpl
mov
and
sub
dec
or
push
push
jg
jmp
and
dec
pop
fs
outsb
cmpsb
nop
subl
add
mov
aam
mov
test
adc
pop
lea
jle
movsl
dec
fs
jl
sub
movl
iret
sbb
leave
call
dec
sub
xor
fadds
mov
jmp
dec
or
fcomps
in
lret
jmp
mov
push
pop
mov
dec
pusha
lds
add
jno
inc
stos
pusha
lret
scas
mul
leave
push
jne
test
adc
loopne
js
popf
lret
cli
es
lods
push
mov
outsb
mov
sbb
js
xchg
lret
ret
addr16
add
pop
cmp
icebp
in
push
jnp
in
pop
lea
adc
cmp
movsl
push
int
dec
insl
mov
fs
jo
cmp
xchg
lods
push
or
inc
inc
clc
mov
inc
std
lock
jns
fdivs
inc
lahf
dec
rorl
addr16
mov
push
ret
or
dec
sbb
mov
xor
sub
ljmp
cmp
fisttpll
or
outsl
bound
fiadds
ficomps
ficoml
icebp
fs
fstpt
data16
dec
dec
push
jle
sti
ljmp
dec
mov
xchg
and
jp
loopne
xchg
into
sbb
ljmp
popa
jb
inc
mov
mov
int
lcall
mov
cmpsl
repz
sbb
sbb
jb
hlt
loope
pop
out
inc
mov
mov
mov
mov
les
add
test
pop
mov
push
xchg
test
pop
and
add
mov
stos
mov
fs
outsl
andb
cs
jnp
cltd
or
cmpsl
mov
jb
subb
add
pusha
subb
test
mov
xor
jbe
cmpsl
or
imul
lds
pop
popa
enter
sub
insb
mov
pop
or
xor
jp
popf
and
addr16
jmp
cmp
xchg
cmpsb
mov
aas
movsb
cmp
pop
mov
aas
push
sbb
jle
xlat
and
insb
xchg
inc
dec
adc
cs
cmpsb
inc
mov
gs
in
insl
adc
lsl
gs
inc
mov
popf
sbb
pop
xor
xchg
add
adc
roll
push
mov
popf
cli
shrb
dec
jns,pn
aaa
aam
jecxz
push
mov
idivl
push
roll
fs
lods
sti
add
push
outsl
mov
outsb
cmp
lahf
jge
inc
aas
sahf
xchg
leave
lcall
and
mov
xchg
and
push
out
inc
pop
mov
mov
jo
movsb
jmp
xor
xchg
and
leave
sbb
lock
or
lea
subb
hlt
das
sbb
nop
mov
jo
cmp
mov
shlb
mov
es
mov
dec
cmp
push
push
int3
inc
mov
call
iret
push
into
pushf
push
lret
add
and
mov
adc
fwait
sub
cmp
mov
sub
mov
sbb
stos
out
sub
movb
jmp
push
dec
icebp
out
pop
mov
cmpl
inc
or
lods
sar
sub
cs
lahf
inc
cmp
lahf
cwtl
in
repz
lods
dec
push
jecxz
and
sub
insb
inc
hlt
push
gs
dec
lock
jle
pop
and
out
cmp
xchg
xchg
shr
add
mov
roll
jb
dec
push
cs
out
pop
xchg
and
std
das
je
test
insl
push
pop
and
js
loopne
adc
test
and
adc
dec
dec
jae
mov
jnp
les
jecxz
nop
in
push
insb
test
nop
imulb
pushf
jle
add
cs
adc
jle
cmpsl
pop
iret
jmp
inc
xchg
dec
jecxz
xchg
fstps
les
insb
push
adc
fcomps
mov
mov
ret
jecxz
mov
and
cmc
out
adc
xchg
rcl
push
stc
pop
dec
and
loope
xor
pushf
cmpsl
dec
sahf
in
stos
inc
pop
xchg
loope
dec
push
adc
adc
cmpsl
stc
xor
fwait
push
mov
fcoml
mov
sti
add
mov
push
dec
sti
dec
sbb
fidivl
dec
inc
mov
cmp
jae
addb
movl
stc
div
vpmadcswd
ret
outsl
and
sub
inc
dec
pusha
jmp
push
cmpsb
mov
mov
inc
push
mov
arpl
cmpsl
push
stos
sbb
fistpll
mov
or
mov
jge
lods
cmp
pop
jp
fisubrl
mov
push
adc
stos
mov
mov
xorl
sarl
push
xor
mov
rcll
jmp
dec
xlat
sbb
das
mov
xchg
push
sahf
ja
daa
jne
inc
xchg
mov
scas
out
add
pusha
pop
jb
inc
hlt
lcall
rcll
cld
testl
jbe
cltd
jle
fdivl
xor
shlb
mov
hlt
jle
push
jp
mov
and
or
js
arpl
pop
lahf
adc
scas
or
repz
test
push
rol
into
popa
push
cmp
sbb
xor
subl
sub
mov
jge
arpl
mov
ss
add
and
or
xor
jp
pop
dec
sub
insl
xchg
jle
xchg
aas
popf
clc
dec
pop
js
xor
std
and
lahf
enter
fs
fisttps
xlat
or
fwait
aaa
mov
push
divl
int
icebp
xchg
clc
or
lret
andl
dec
inc
xor
cs
in
mov
pop
sub
pushf
sbb
pop
imul
mov
fisubl
xchg
imul
or
sarb
hlt
cmp
arpl
pop
adc
aam
orl
xchg
andl
jbe
push
inc
loopne
dec
mov
and
gs
fistps
or
push
or
push
jmp
inc
ja
icebp
mov
fnstcw
add
pop
aas
pusha
mov
inc
pop
fidivl
xchg
inc
aas
mov
push
mov
xchg
int3
mov
aad
insb
cld
cmpsl
outsb
cmp
lods
sarb
addr16
pop
adcl
or
inc
hlt
pop
loop
or
xor
push
jno
ret
mov
ljmp
mov
nop
pop
fisubrl
repnz
pop
jg
ret
push
pushf
inc
jne
arpl
lea
dec
push
pop
sbb
or
lods
mov
addr16
inc
mov
rcll
inc
sbb
aaa
aam
push
mov
adc
xchg
frstor
sbb
data16
push
ljmp
jecxz
or
data16
fnsave
jmp
insb
lahf
push
push
xor
mov
jo
sub
in
sub
xchg
or
testl
das
adc
cmc
dec
into
nop
ljmp
adc
fistpll
jno
jo
xor
mov
cmp
repz
fldl
out
mov
js
sbb
filds
and
adc
inc
fldenv
test
fsubrl
xor
icebp
mov
dec
xor
je
push
addb
push
adc
imul
js
xchg
jge
add
xlat
xchg
dec
subl
pop
cmc
das
xor
test
inc
adc
dec
sbb
cmpsl
inc
outsl
mov
pop
mov
or
xor
xor
push
pop
adc
cmp
sbb
pop
test
mov
xchg
push
and
ret
mov
inc
or
xchg
jo
mov
dec
fst
mov
mov
clc
std
out
sub
scas
pop
aaa
test
mov
in
cmp
add
ljmp
adc
cmpsl
in
lock
add
loop
clc
iret
mov
jp
adc
adc
xor
clc
sub
fisubs
in
push
roll
fldenv
hlt
mov
out
jnp
sbb
popf
dec
fisubrs
xor
cmp
adc
and
out
dec
inc
nop
sbb
stos
popf
andb
lcall
mov
loopne
addr16
mov
pop
insb
stos
mov
nop
and
rorl
xchg
cmp
jb
sar
add
cmp
and
push
cmp
ret
cli
sub
cwtl
lock
inc
daa
push
gs
cs
sub
and
xchg
fiadds
push
xor
dec
clc
and
in
jecxz
mov
popa
shrl
push
xchg
push
in
inc
in
adc
and
mov
fdivrl
faddl
arpl
cltd
or
xchg
xchg
imul
mov
pop
push
sahf
stos
add
cld
xchg
push
leave
mov
sub
cld
aad
and
les
add
rcrb
push
mov
fucomip
mov
rcrl
fdiv
call
inc
icebp
xchg
out
sbb
stc
inc
pop
dec
push
imul
fisubrl
push
lret
jo
lret
jo
jno
pop
test
and
adc
loop
cmpsb
xor
cmp
mov
mov
movsb
rep
sub
push
xchg
push
and
sub
loopne
cmp
jl
mov
pop
das
in
inc
testb
imul
mov
jle
mov
adc
call
sbbl
push
fnsave
or
mull
enter
mov
cltd
jecxz
dec
push
dec
xor
pusha
insl
dec
inc
mov
sub
mov
and
jno
cmp
leave
add
push
dec
jno
cmp
xor
xor
mov
out
mov
orl
xchg
sti
push
add
and
push
daa
push
push
push
ds
pop
cmp
mov
addr16
hlt
mov
mov
xlat
sub
fstps
pusha
jmp
cmc
and
jecxz
hlt
pop
jno
out
int3
subb
lcall
pop
rcr
out
stos
lahf
add
aad
ja
and
xchg
inc
jb
imul
test
or
inc
xchg
lock
pop
mov
out
inc
fdivrl
std
mov
scas
jmp
pop
mov
and
mov
inc
sbb
and
xchg
xchg
and
jb
xor
aaa
enter
sbb
push
push
data16
cmpsb
push
mov
cmp
adc
sub
sbb
mov
cmc
mov
addb
call
aas
push
or
test
in
daa
insb
cmp
inc
mov
sub
xchg
lcall
out
xor
cltd
loope
mov
test
inc
sahf
jp
out
jae
xchg
dec
or
mov
subb
adc
cmc
stos
enter
nop
pop
movsb
clc
pop
push
scas
ret
negb
xchg
push
mov
ss
call
cltd
clc
icebp
iret
mov
stos
jb
pusha
cmpsl
in
ret
pop
adcl
lods
xchg
in
popa
arpl
adc
into
push
idivl
orl
rolb
fs
inc
fs
and
push
lds
out
stos
insl
in
outsb
jmp
icebp
out
mov
mov
xchg
adc
mov
cmp
loopne
rclb
repnz
sbb
lock
jmp
cmp
sbb
adc
add
fsubrs
mov
mov
inc
ds
fwait
imul
scas
cmpsb
out
cli
push
cmc
pop
aad
test
sub
lret
lds
cmp
xor
bound
inc
jmp
add
add
sarb
or
lret
adc
test
shrl
lods
loopne
fcoml
mov
adcl
stos
mov
mov
andb
push
add
jne
sti
rolb
adc
add
movsl
sbbb
and
add
inc
mov
mov
scas
and
xor
push
jo
dec
and
push
iret
add
lock
or
push
sarl
scas
sub
jp
inc
insb
iret
aas
lret
cld
cmpsb
mov
or
mov
pushf
sbb
pop
push
sbbl
in
daa
icebp
add
jae
xchg
pop
mov
setne
pop
add
mov
push
hlt
push
ja
test
xchg
imul
inc
or
inc
adc
xor
test
pop
add
jmp
adc
and
cmp
adc
stc
adc
in
mov
inc
stos
dec
jp
popf
sub
cwtl
dec
mulb
mov
mov
cmpb
mov
fsts
xor
jecxz
xchg
dec
negb
jnp
fsubrs
pop
xchg
mov
mov
mov
lret
xchg
jmp
push
and
xchg
das
fadds
adcl
sbb
fsubrl
std
daa
push
and
ret
in
xchg
shll
sub
test
insb
stc
pop
mov
push
lods
int3
insl
push
loop
ja
je
loope
jnp
out
ss
test
or
hlt
and
inc
out
jae
ret
arpl
sub
mov
dec
cmp
test
adc
jl
and
jge
xor
jae
and
out
mov
sub
imul
cmc
repnz
scas
aad
lock
mov
data16
push
rcrb
sbb
lcall
sbb
or
fs
mov
mov
pop
test
sti
lock
jne
jle
stos
frstor
ret
pop
adc
add
mov
mov
xchg
adc
push
push
test
inc
push
aad
inc
adc
mov
sub
jmp
or
cmp
push
inc
add
sar
in
fstpt
pop
das
xchg
xchg
es
mov
sub
push
notl
mov
cmp
or
sbb
in
and
pop
jne
adc
push
push
and
andb
jnp
xchg
shl
imul
jne
mov
int3
call
out
cwtl
jo
das
or
add
sbb
je
mov
mov
mov
mov
cmpsl
fwait
scas
es
das
adc
pop
into
mov
jecxz
ret
pusha
lcall
push
mov
mov
dec
pop
mov
jmp
pop
loopne
push
popl
xchg
fldl
push
jmp
mov
adc
mov
cmpsl
push
ss
push
jnp
std
in
inc
dec
sbb
xchg
mov
es
in
insl
scas
lods
out
test
cmpb
subl
mov
sbb
cmc
int3
ret
stos
add
jp
das
mov
sub
or
xchg
lahf
fcomip
cmp
sbb
pop
iret
add
xchg
mov
push
popf
and
cmp
add
xor
add
lahf
push
popf
insl
stos
or
out
push
cs
hlt
pop
jecxz
stos
test
frstor
lods
aaa
shl
into
push
cld
shll
lcall
or
or
add
aad
push
push
ljmp
mov
out
push
rorl
test
mov
ror
sti
pop
xor
inc
nop
xor
jl
out
jcxz
js
lcall
sub
imul
mov
inc
js
pop
fidivl
push
popa
mov
jg
aas
insl
inc
pop
in
inc
mov
arpl
adc
xchg
mov
add
dec
push
push
mov
add
out
inc
cmp
mov
sub
cwtl
fdivrs
lcall
or
lea
les
mov
pop
pop
lret
mov
push
sbb
leave
dec
cltd
iret
ss
ljmp
sub
outsb
mov
pop
fistpll
sti
dec
pop
mov
mov
or
pop
xor
sub
fidivrl
cwtl
cli
jle
push
into
jp
dec
dec
loope
gs
popl
sarl
dec
inc
gs
mov
sbb
leave
xchg
lahf
sahf
je
push
test
nop
cmp
lret
jg
fmulp
insl
imul
xor
xchg
sub
add
fistl
out
jmp
ret
pop
out
cmpsb
or
sbb
imul
lods
push
add
adc
inc
stc
lahf
xlat
sub
pushf
inc
lds
pop
adc
pop
add
cmp
push
ds
and
mov
sbb
popa
sahf
jge
and
mov
bound
mov
fistpl
imulb
rorb
mov
mov
das
xor
sbb
vmovshdup
mov
insb
xchg
mov
jmp
cltd
xchg
insl
dec
imul
outsl
inc
pop
out
sbb
sbb
inc
inc
cmpsb
pop
add
sub
xchg
imul
pop
out
pop
pop
push
push
cli
mov
mov
dec
pand
mov
popf
sub
addl
loope
sti
inc
adc
xchg
lock
lds
or
repz
push
xchg
int
ret
andb
cmp
cs
inc
inc
xchg
mov
lods
dec
and
std
mov
repz
es
daa
xor
leave
sbb
pushf
mov
inc
push
clc
rorb
push
push
mov
test
pushl
push
ds
pop
in
insb
jno
xchg
repz
mov
cld
aas
and
dec
outsb
cmc
outsl
out
inc
push
inc
push
sub
das
sbb
sbb
aas
ret
mov
mov
pop
insl
mov
daa
xor
sbb
cmpb
std
addr16
and
mov
push
mov
inc
jle
popa
mov
pop
mov
imul
pop
mov
std
jbe
out
mov
insl
xor
and
xor
push
sbb
mov
in
mov
stos
sbb
push
or
or
js
repz
and
or
lods
pop
mov
mov
das
lcall
ret
cmp
push
mov
xor
outsl
adc
imul
push
loope
lea
jle
shlb
lods
test
mov
mov
insb
dec
mov
ljmp
add
xchg
scas
lds
icebp
jnp
fwait
dec
inc
out
in
je
xchg
hlt
ret
pop
clc
pop
lock
test
test
outsl
insl
mov
mov
movsb
daa
dec
int3
rcll
iret
push
fistl
push
add
mov
mov
cli
and
adc
fdiv
dec
lret
pop
inc
cltd
addr16
cmp
mov
pop
inc
lock
inc
mov
mov
test
push
movsl
negl
dec
int3
pushf
sub
loopne
sbb
cltd
addr16
or
xchg
and
mov
xchg
cmp
xor
pop
and
cmp
test
mov
jmp
movsb
jne
or
scas
mov
test
sbb
mov
repnz
adc
js
push
lea
enter
push
xchg
fsts
shll
and
inc
aam
jns
sbb
dec
aam
or
pop
inc
sbb
inc
mov
inc
in
fwait
adc
fisubrs
xor
mov
and
sub
mov
xlat
or
rolb
or
loopne
and
sub
cli
faddl
movsl
sbb
inc
xlat
cmp
jbe
xor
or
or
dec
enter
icebp
xor
cmp
and
mull
movsl
dec
push
test
xchg
popa
test
fnstcw
push
negb
stc
pusha
loope
adc
je
dec
push
or
int
mov
jne
orl
lea
andl
push
rcl
stos
iret
imul
or
stos
rep
fisubrs
hlt
rolb
xchg
pop
aaa
sub
cmpsb
mov
dec
lods
xchg
stos
out
mov
into
sahf
xchg
pushf
mov
jo
stos
fnstenv
mov
dec
shll
stos
test
cs
lods
filds
hlt
and
fidivs
jns
xor
mov
sahf
cmp
xor
pop
mov
xlat
xchg
aam
jle
sbb
imul
fistpll
sub
mov
je
out
xchg
sahf
inc
sub
adc
jo
xor
fcompl
sub
cmp
jmp
jns
scas
test
inc
shl
xchg
push
rolb
ret
jmp
mov
jle
std
sub
sub
jecxz
lods
jp
int
xlat
inc
popa
jno
cmp
stc
int
mov
or
sub
popa
es
inc
jle
add
lods
ja
adc
cmp
xchg
adc
sahf
xor
inc
dec
xchg
inc
push
ss
mov
pop
dec
mov
loopne
movsb
push
fldcw
addr16
inc
icebp
inc
dec
lret
cmp
stc
sti
pop
xchg
mov
pop
fsubrs
aas
dec
pushf
and
lret
aaa
aad
xor
xor
leave
inc
fisttpll
icebp
push
shrl
mov
loopne
addb
loopne
pushf
loopne
mov
pop
inc
int
insb
xchg
in
mov
jl
imul
movsb
fbld
testb
sbb
cld
jb
xor
push
xor
mov
and
push
mov
test
inc
in
inc
push
sbb
inc
lock
cmp
mov
adc
xchg
or
sub
adc
xor
add
inc
xchg
sub
je
push
adc
mov
adc
cmpsb
fdivrl
out
sub
push
in
mov
xchg
ficoms
push
pop
lea
pop
stos
rcrl
in
das
test
outsl
jne
mov
push
mov
cwtl
test
das
cmp
lret
push
das
shrb
xor
mov
adc
jl
add
push
les
mov
mov
aaa
mov
outsl
dec
pop
shr
fs
add
cwtl
and
fwait
jae
fbld
pop
jo
dec
test
aad
loopne
xor
int3
into
xor
subb
repnz
inc
adc
out
imulb
mov
sbb
mov
mov
call
push
pop
xlat
fstl
xor
inc
mov
pop
repz
jecxz
iret
push
lahf
xchg
sbbb
loope
jmp
into
jp
fnstenv
sub
sub
pop
jo
repnz
dec
fdivrp
sbb
jne
js
ficoml
lret
inc
adc
cli
xor
mov
push
mov
mov
orb
xorl
jnp
mov
loopne
xchg
fmuls
shll
mov
addr16
inc
cmp
popf
inc
adc
xchg
std
xchg
pop
mov
ja
xor
inc
mov
push
dec
xor
mov
jl
fidivrl
xchg
push
dec
mov
leave
jp
mov
scas
nop
ret
xchg
jo
and
lcall
jge
cli
pushf
sub
push
sbb
xlat
sbb
mov
xchg
rolb
mov
fisubrs
push
aad
imul
inc
setae
pushf
inc
add
out
in
push
xchg
or
add
clc
push
or
xchg
cs
cli
out
mov
jno
out
out
xchg
sub
repz
xlat
ret
jecxz
jae
xchg
leave
and
stc
cmpsb
sbb
jecxz
lcall
jg
xorl
cwtl
xchg
adc
jl
jl
adc
mov
sbb
lret
pop
sarl
data16
bound
inc
int
test
xlat
and
jge
loop
ja
cmpsl
scas
mov
dec
pop
mov
adc
xchg
hlt
xor
out
pop
lods
push
push
mov
fsub
xor
rcrb
adc
cmc
jecxz
addr16
and
xor
inc
test
adc
mov
adc
std
xchg
sub
add
xchg
imul
call
addr16
adc
mov
dec
es
and
shll
inc
cmp
mov
or
jle
stos
je
pop
and
mov
push
sub
out
or
cmpl
xchg
mov
scas
insl
ss
push
les
lret
pop
fcomp
fcomp
jp
loopne
or
mov
add
clc
and
inc
into
out
std
stos
call
insl
lret
ljmp
pushl
and
adc
xchg
dec
imul
fisttps
rorl
xchg
push
js
cmp
sbb
or
shll
cmp
adc
push
jl,pt
pop
and
xor
outsb
cli
push
push
or
mov
or
push
in
adc
shrl
push
iret
dec
movsl
call
jmp
jp
sti
adc
cmp
fidivs
mov
in
arpl
xrelease
ret
pop
ljmp
and
push
sbb
pop
sub
andl
das
sub
jmp
aas
push
inc
adc
andl
sbb
push
mov
xlat
int3
xor
les
push
mov
mov
or
mov
cmp
enter
pushf
stos
adc
ds
and
bound
pop
pusha
and
cwtl
dec
bound
inc
dec
bound
lahf
out
fwait
cs
add
aam
ja
push
jmp
clc
push
mov
mov
sbb
xor
sbb
mov
push
mov
cwtl
in
sbb
add
or
mov
mov
add
sahf
imul
adc
addps
popf
or
cmp
rclb
sub
scas
or
fucomp
int3
cmpsb
shlb
sti
inc
inc
mov
test
add
into
enter
lcall
jbe
dec
sbbl
dec
mov
xchg
clc
fisubs
push
divl
jae
lret
int3
cli
dec
cmc
ss
push
add
inc
adc
pop
sbb
or
fidivs
inc
fldt
push
inc
addr16
addr16
dec
mov
push
sarl
loop
push
push
rorb
mov
and
outsb
jae
fdivl
add
xor
aad
sub
mov
adc
sub
gs
xchg
sub
ret
mov
gs
and
mov
jg
test
loopne
inc
jl
rcrb
adc
lcall
mov
fistpl
push
iret
mov
pop
mov
and
adc
aaa
cmp
pop
inc
jmp
add
repz
push
mov
jne
xor
dec
push
mov
mov
outsb
aad
pop
add
mov
fidivrl
push
pop
rorb
and
imul
mov
ret
push
test
divl
cmp
in
push
sahf
push
hlt
jbe
les
dec
add
cmp
push
dec
xor
xlat
fsubs
popa
aad
imul
loope
mov
jmp
int3
lret
xchg
sub
or
mov
and
push
in
and
movntq
xorl
pop
notb
aam
ja
mov
and
outsb
or
or
sbb
out
jmp
mov
mov
je
push
orb
mov
mov
fsubs
xchg
movsl
testl
cwtl
xchg
pop
sbb
into
and
pusha
jnp
test
js
inc
loope
mov
cmp
mov
imul
jbe
xchg
hlt
fisttpll
movsb
pop
insl
stos
aaa
lcall
ret
xchg
dec
push
pop
jno
dec
jnp
sub
lds
lahf
mov
pop
test
mov
les
xor
lret
xor
cwtl
cld
cmp
lods
xor
sbb
gs
inc
add
jge
adcb
fmuls
movsl
jnp
xchg
or
sbb
mov
rcrb
push
fdivr
stc
cs
mov
pop
push
jp
xor
in
jle
aaa
add
ret
rcl
popf
jns
mov
mov
fsubrs
adc
lret
outsb
jb
xchg
cmp
sub
push
xlat
int
mov
jo
unpcklps
fdivrs
pop
jns
in
shrb
pop
pop
jmp
mov
jo
mov
jecxz
mov
lds
outsl
mov
mov
adc
imul
in
sti
lret
loop
cmpsl
cmp
adc
lds
out
nop
pop
jl
cwtl
pusha
out
xor
hlt
inc
pop
std
daa
cltd
fstp
inc
outsb
dec
and
inc
nop
outsb
int
jae
int3
xchg
cltd
xchg
scas
push
push
add
or
sti
int3
unpcklps
push
push
mov
int
sarb
es
mov
mov
mov
xchg
dec
fistpl
mov
mov
lods
push
sub
adc
and
inc
mov
leave
xchg
mov
fwait
pop
pop
jnp
push
insl
and
pop
add
push
or
push
sbb
addr16
sub
aam
in
test
lret
jecxz
clc
addr16
ret
loope
lahf
xor
clc
cmp
push
int3
cs
mov
addr16
xchg
fwait
xchg
mov
xchg
adc
mov
jp
scas
fcompl
jmp
sub
loop
rolb
mov
int
dec
sbb
mov
shll
bswap
loope
xchg
fwait
lea
lea
add
mov
ret
pop
gs
sub
lea
jl
pusha
mov
sti
cmc
mov
mov
sbb
shll
mov
mov
shl
or
mov
push
ret
rorb
mov
fucomp
jbe
ficomps
sub
dec
push
and
or
lea
decl
push
ret
addl
jb
cmp
push
xor
jbe
ss
cmp
mov
xchg
pop
cwtl
stc
test
inc
jg
add
lea
push
jo
inc
sahf
and
mov
out
shlb
fcompl
out
lahf
cmp
fsubl
loopne
mov
xchg
or
adc
cmp
push
cmpsl
jo
lods
adc
inc
mov
mov
incl
into
sbb
adc
mov
inc
fcompl
adc
inc
orb
idivl
fidivrl
mov
push
stos
fimuls
and
mov
pop
nop
add
fld
pop
loope
mov
stos
insb
in
fs
in
mov
clc
repz
sub
push
in
xor
into
dec
pop
lds
mov
scas
into
adc
mov
sub
sbb
cmp
clc
cmp
lret
push
ss
add
jnp
inc
fadd
popf
incl
insb
pop
xor
pop
or
shlb
adc
aaa
xor
arpl
nop
mov
cmpsl
dec
stos
lds
data16
lock
ss
xor
dec
ja
mov
cmp
dec
ds
mov
dec
pop
jmp
andb
jp
add
cli
es
inc
negl
imul
je
cmp
cmp
out
fdiv
lret
add
pushf
out
sbb
test
fmul
cmpsl
jne
mov
movsb
xor
cmp
idivb
int
leave
mov
fs
mov
rcl
ret
test
pop
clc
sahf
and
insl
lods
clc
mov
test
and
jmp
and
pop
outsl
pop
or
lcall
mov
js
xor
cwtl
rclb
add
mov
jmp
inc
push
xchg
or
xorb
popa
xlat
cwtl
clc
incb
mov
ss
arpl
pop
aad
cmp
mov
push
imul
jmp
adc
cmp
scas
cmpsb
push
sbb
in
pushf
cmpsl
in
adc
stos
mov
mov
cmp
loop
push
pop
mov
int3
cltd
xchg
out
sbb
sbbl
mov
scas
pop
pop
jge
or
lds
aam
mov
arpl
shrl
shrl
lods
adc
jae
je
outsb
and
inc
popa
in
mov
sarl
mov
aaa
fmuls
sbb
sbb
inc
orb
mov
loop
aaa
mov
and
in
or
push
mov
ds
rcrl
mov
push
push
push
lods
push
fsubl
ret
xchg
adc
inc
inc
and
and
mov
int
dec
in
mov
or
dec
or
cmp
lods
inc
jo
out
jno
leave
dec
fwait
xlat
aas
in
pop
or
sub
js
repz
addr16
mov
lods
lock
sub
inc
imul
sbb
jns
scas
lock
es
xchg
insl
adc
xor
inc
cwtl
sbb
push
or
xchg
orl
push
push
add
xor
cwtl
mov
jbe
mov
cmp
xor
clc
push
inc
es
sub
jae
stos
cmp
int
push
fisubrs
add
lcall
cmp
sbb
aam
insb
outsb
cwtl
cmpsb
dec
mov
inc
cwtl
xchg
mov
mov
xchg
or
mov
mov
and
xor
test
adc
mov
cmp
or
pop
xlat
call
aad
gs
mov
adc
jg
pushf
or
rorb
test
mov
add
pop
mov
pop
sub
mov
mov
jl
test
movsb
out
loop
shlb
arpl
into
in
xchg
jle
ss
push
pop
mov
mov
mov
or
faddl
push
mov
fbstp
out
sbb
mov
imulb
add
sbb
out
sbb
cmp
sub
pop
and
stc
data16
inc
int
bound
push
enter
icebp
or
or
stos
adc
sub
dec
ja
dec
das
insb
dec
cmp
fists
sub
mov
adc
jae
ficoms
cs
fcomps
xor
inc
xor
jmp
xchg
inc
cs
sbb
mov
mov
mov
push
lods
addr16
ret
push
stos
add
dec
mov
iret
or
sub
pop
in
aas
push
lret
je
ljmp
ja
jae
les
mov
cmp
pop
mov
outsl
adc
sti
shr
pop
jl
arpl
fsubr
mov
shlb
mov
arpl
pop
push
ljmp
mov
popa
mov
push
add
popa
add
mov
and
rcr
pop
movsl
add
mov
out
pop
in
jno
mov
inc
add
pop
mov
add
xor
arpl
in
add
xchg
sub
push
pusha
in
test
jb
mov
inc
cmpsl
and
inc
xchg
inc
dec
inc
fsubp
push
dec
dec
xor
push
mov
jno
adc
test
int3
and
icebp
inc
ljmp
cmp
cmp
roll
push
adc
out
stos
and
pop
cld
inc
cmp
jle,pt
push
add
xor
movsl
or
cwtl
fimull
add
fidivrl
fs
addr16
nop
hlt
das
scas
in
adc
dec
mov
push
popf
cld
add
add
dec
jge
mov
xchg
mov
stos
and
fisubrs
jecxz
dec
pop
push
dec
icebp
adc
je
jae
hlt
jp
fwait
outsl
inc
adc
cmp
test
addr16
and
loopne
mov
sbb
scas
mov
xchg
stos
leave
inc
fisttpll
dec
sub
xchg
inc
adc
pop
and
sbb
jge
inc
add
fnsave
mov
xchg
shlb
jo
je
out
test
inc
in
out
adc
add
in
push
dec
add
dec
push
push
movsl
repz
or
shrb
lock
movsl
cld
mov
imul
dec
cmp
int3
scas
popa
add
iret
sbb
test
jmp
add
and
es
negl
clc
lods
cmp
fnstsw
stc
push
in
xorl
cs
push
lods
cmp
push
jl
lds
insb
sbb
or
sbb
mov
test
pushf
cmpsb
cmp
dec
jae
jg
cs
and
xlat
cwtl
jo
xchg
scas
popa
push
xchg
jns
adc
push
or
sbb
push
mov
ficoml
and
pop
mov
jo
inc
jnp
outsl
lock
sbb
test
loopne
sub
lods
inc
shlb
mov
pushf
popf
adc
andb
lea
clc
mov
cltd
mov
mov
inc
in
xor
mov
pop
add
xor
lock
push
xchg
mov
test
les
dec
push
mov
sti
jnp
pop
fstps
dec
push
les
ret
leave
repz
cmp
out
mov
and
arpl
adc
es
xor
adc
mov
dec
or
push
repnz
scas
pop
xor
jl
inc
push
push
lock
sbb
popa
xor
xchg
cmp
cmp
out
cmp
sub
jns
lods
neg
std
push
cmp
add
mov
pop
subl
inc
pop
sub
cmpsl
test
push
pop
pusha
sub
in
jg
std
imul
sbb
scas
or
dec
fdivl
jmp
or
pop
aaa
fstpt
dec
push
sti
outsl
loope
xchg
xlat
sbbl
loop
mov
je
shr
pop
and
hlt
popa
aaa
add
push
sbb
popf
add
scas
push
push
insb
out
addr16
add
inc
in
nop
add
xchg
adc
xchg
mov
out
mov
or
filds
insb
pusha
maxps
sub
push
in
pop
jns
test
pop
out
fnstsw
push
gs
clc
cmpsb
dec
lret
adc
pop
sub
insb
and
std
bnd
add
sbb
sub
mov
jecxz
fistps
mov
jge
mov
sbb
pop
inc
nop
loope
mov
mov
add
push
repz
imul
push
lcall
shlb
int3
mov
out
xchg
and
cmp
outsb
aam
cmp
xor
lods
or
jge
test
jge
mov
jp
dec
xor
pop
and
pusha
popa
mov
scas
pop
cld
fdivl
and
cmp
aam
push
das
mov
push
xlat
nop
aad
rolb
fistl
mov
and
daa
ds
xchg
dec
xchg
mov
dec
xor
loopne
ljmp
push
fst
fstpt
and
in
enter
aam
popf
add
icebp
cmp
nop
fldcw
mov
or
lods
leave
and
ret
fnstsw
iret
cli
jae
clc
push
je
mov
pop
aaa
data16
push
mov
imul
jno
jno
push
mov
mov
test
pop
imul
and
mov
jne
jecxz
out
push
aas
je
cmpl
xor
ret
push
xchg
es
popl
mov
jns
dec
iret
outsb
jns
mov
adc
test
ret
shll
xchg
push
push
mov
lcall
jmp
das
das
adc
jle
xlat
adc
cmp
insl
outsb
adc
mov
lods
sub
mov
mov
sbb
inc
lcall
mov
rcr
jbe
in
in
inc
push
mov
pop
inc
mov
push
jg
sbb
mov
dec
mov
aaa
scas
out
push
sbb
hlt
leave
mov
push
or
jns
lods
aad
mov
lods
add
or
pop
dec
out
cmp
decl
idiv
arpl
fisubs
sbbl
in
out
jp
and
es
jge
or
roll
imul
cmpsb
aam
mov
aaa
shll
sahf
inc
sbb
push
push
and
call
and
cmp
lcall
or
test
out
jmp
dec
dec
out
push
push
roll
cmp
push
mov
or
in
fs
stos
fcmovnu
mov
mov
scas
mov
mov
xchg
sub
aas
sbb
lret
cld
negl
and
enter
jae
dec
mov
add
icebp
sub
lret
inc
xchg
xor
rcrb
push
cmpsl
xor
adc
mov
push
pop
jle
callw
cmpsb
push
das
sub
and
mov
mov
xchg
jb
insb
sbb
mov
push
cmpsl
test
mov
and
sbb
daa
dec
and
pop
lds
cmpsb
push
dec
jae
test
mov
xchg
jb
lds
inc
ficompl
cltd
cs
jl
jmp
sbb
outsb
jmp
xchg
movsl
xchg
push
lret
pop
pop
movsl
mov
jecxz
repnz
sub
sbb
rcrb
mov
jmp
cltd
ljmp
xor
pop
xchg
or
ljmp
xchg
shll
dec
xor
pop
mov
lods
ret
lret
xchg
sbb
into
arpl
pusha
fwait
mov
adc
dec
pop
iret
sub
scas
clc
xchg
out
pop
dec
out
in
add
lods
fs
enter
push
les
dec
out
or
movsl
movsb
bound
mov
jl
jge
cmp
int
mov
xor
jo
mov
mov
jmp
scas
stos
cmp
fdivrl
adc
rcl
out
cmp
push
push
cmpsb
jnp
insl
mov
rolb
jecxz
cmp
cmpsl
mov
std
gs
push
cmp
insl
lahf
cld
and
mov
xor
scas
push
pop
lret
or
in
fcoml
js
lcall
mov
inc
popf
push
jle
jge
rolb
mov
repz
sbb
push
push
dec
fisttpll
jb
mov
xchg
pop
or
sti
les
sbb
xor
in
sbb
inc
sbb
shll
das
sarl
and
pop
or
idiv
mov
test
jo
mov
das
jo
xchg
sbb
mov
inc
or
pop
cmp
push
sub
aad
xor
std
cmpsb
ret
push
adc
clc
dec
lods
mov
mov
dec
inc
mov
mov
dec
push
push
scas
mov
imul
mov
dec
push
mov
and
out
rol
mov
xchg
sub
mov
inc
mov
rcrl
and
nop
sub
fwait
jno
out
or
xor
inc
ds
outsl
shrb
or
sub
push
movsb
xor
fwait
js
rol
inc
mov
gs
jae
nop
aas
ds
mov
inc
aam
iret
in
cs
sub
ret
fistl
xor
lods
push
inc
scas
movsb
pmullw
hlt
cmp
xchg
pop
lcall
test
insl
repnz
test
fwait
jl
sub
dec
mov
jl
mov
or
adc
lret
in
sbb
arpl
push
jp
and
std
lea
push
fdivrl
jno
xor
pushf
sub
mov
into
add
fucom
test
cwtl
insl
test
testl
sub
iret
jns
shll
or
addl
dec
jmp
or
incl
adc
popa
xchg
add
mov
ja
mov
out
stos
and
mov
jmp
out
inc
jmp
sub
cmp
fbld
dec
inc
add
cmp
sub
shl
rcll
xlat
pop
xchg
out
mov
in
ret
jno
sub
das
scas
sub
pop
decb
xchg
push
imul
or
push
fs
or
enter
fistps
rorl
or
jmp
xor
and
call
sub
pop
xchg
mov
cli
stos
pop
in
outsl
pop
in
cmp
movsl
lret
stos
out
pop
push
xchg
cs
adc
inc
mov
mov
adc
scas
adc
sub
mov
xorl
dec
mov
imul
das
xchg
repz
in
sbb
inc
inc
lcall
add
adc
js
dec
mov
pop
and
in
or
sub
or
aam
mov
or
pop
push
xor
mov
rcrb
sbb
mov
sti
loop
or
add
jmp
lret
push
clc
mov
pop
in
lret
mov
mov
jecxz
stc
and
imul
sub
mov
dec
mov
ss
mov
xlat
dec
sub
xor
and
mov
cmpsl
gs
jae
scas
int3
pop
hlt
inc
cmc
shrl
test
pop
sbb
in
or
mov
mov
test
mov
sub
or
lds
push
pop
dec
loope
stos
inc
lcall
lret
fwait
outsb
ret
jo
add
pop
pop
ds
sarb
and
movsl
sub
mov
or
mov
mov
xor
loopne
jge
sbb
mov
sub
jb
mov
and
push
push
jae
mov
outsb
ljmp
jmp
icebp
sbb
fldcw
lret
sub
mov
stos
add
lea
adc
mov
ljmp
sub
rcll
mov
adcb
mov
loope
std
adc
call
mov
outsb
pop
fcmovbe
mov
repz
pop
xor
mov
ljmp
in
push
push
inc
push
clc
xchg
or
xchg
jg
shrb
dec
push
rcrl
sub
jb
adc
jl
inc
insb
mov
rorb
inc
test
imul
mov
dec
daa
adc
push
pop
not
test
cmp
ficoms
test
orl
iret
jge
cmp
or
test
in
mov
and
ds
icebp
bound
lods
fwait
and
cmp
and
jb
cltd
std
jne
mov
fsubp
stc
jbe
push
sub
sbb
pop
jg
xchg
iret
stos
add
xchg
addb
cmp
nop
int3
test
jmp
jno
hlt
and
popa
cmp
outsb
call
dec
push
repnz
push
xchg
faddl
movsl
xlat
cmpsb
mov
mov
mov
xchg
es
jecxz
in
stos
mov
inc
adc
sbb
pop
push
xchg
into
jne
repnz
pop
test
xchg
cmp
fsubrl
inc
mov
push
or
pusha
inc
daa
dec
or
js
movsl
xorl
xchg
stos
mov
mov
sarl
dec
inc
mov
jecxz
ret
sbb
jmp
shr
loope
pusha
scas
ds
test
xchg
cmpl
xchg
sbb
jle
xchg
pusha
mov
push
lods
stc
push
dec
xor
add
int3
imul
add
call
pop
adc
pop
popf
mov
xchg
sub
or
lahf
enter
dec
in
jecxz
ds
sub
push
mov
je
je
sbb
inc
cmc
push
pop
aaa
iret
out
jnp
push
jo
xchg
ficompl
repz
pop
dec
cmp
mov
push
adc
or
out
push
outsl
loop
lods
xchg
je
jno
imul
push
mov
pop
xor
and
filds
fistpll
scas
test
mov
xchg
mov
int3
or
cmp
mov
push
cltd
adc
adc
jg
in
call
push
inc
mov
mov
ja
mov
jo
cmp
adc
ds
cmp
and
popa
dec
das
cmp
pop
testl
pop
enter
jbe
mov
pop
loopne
sbb
add
mov
pop
inc
mov
add
sub
enter
test
mov
fcmovne
ficoml
dec
and
xchg
or
mov
test
sbb
shl
inc
pop
jnp
cli
ds
sub
cli
sbb
sbb
idiv
fists
cmpsb
lea
test
mov
adc
inc
in
push
fwait
push
pop
insb
aas
loop
and
pusha
xchg
mov
sbbb
in
aam
mov
ret
sub
pushf
jg
mov
movb
fcmovnbe
cmpsb
test
push
daa
pop
aam
sbb
sub
adc
sti
xchg
shll
call
push
loop
mov
int3
mov
orb
lret
inc
in
lea
stos
mov
aas
mov
ljmp
scas
arpl
jae
sbb
mov
std
push
int3
mov
xchg
jl
add
stc
mov
andl
clc
inc
outsb
xor
cmp
adc
adc
frstor
pop
adc
push
jmp
int3
aas
mov
push
fwait
popa
mov
cmc
fidivrs
mov
ss
cmpsb
out
add
add
push
jle
push
sub
out
nop
cmp
sub
pop
mov
out
cmpsb
mov
nop
sti
hlt
mov
add
push
push
lretw
roll
push
std
mov
inc
fidivrl
lahf
fsubr
push
stc
sub
lcall
jge
test
mov
lret
mov
movsb
pushf
sbbl
and
cld
dec
mov
and
negb
push
mov
dec
push
or
push
sub
and
ss
scas
fadd
les
adc
mov
cmp
xchg
mov
test
test
sub
pop
popa
adc
or
xchg
sub
pop
jb
push
imul
or
mov
sbb
mov
add
ljmp
pop
sti
xchg
lea
sbb
mov
jb
push
xor
adc
orb
push
sub
or
push
popa
andb
xlat
addr16
adc
out
pop
sub
mov
and
jge
je
incl
adc
sub
in
fsts
fwait
sbbl
out
pop
push
test
mov
mov
lret
out
mov
outsb
cmpsl
enter
push
outsb
lret
push
jbe
call
lock
pop
inc
pop
jno
xchg
inc
bound
fadd
mov
adc
out
jge
loopne
xor
loop
dec
js
xchg
insl
enter
scas
push
jmp
lret
ret
rorl
jl
inc
in
test
add
mov
cmp
xor
xor
aas
fcoml
add
out
out
add
dec
cmc
aam
jnp
repnz
icebp
cmpsl
fdivrl
dec
loop
lahf
sub
ds
jbe
adc
enter
inc
mov
in
aam
addr16
out
lods
shrb
outsl
or
add
adc
sub
popa
push
or
arpl
imul
mov
ds
pop
lock
xchg
out
cmp
cmp
mov
enter
shll
in
sub
ficompl
outsw
lea
push
hlt
jmp
cltd
push
je
imul
xor
stos
push
xchg
dec
divps
in
data16
xchg
lret
test
les
dec
fistl
push
out
fcompl
jl
lahf
add
mov
iret
pop
mov
fwait
addr16
ficoms
das
sub
inc
mov
adc
addr16
xchg
and
nop
xchg
std
push
push
dec
arpl
mov
mov
adc
loope
push
mov
shlb
int3
fdivr
xchg
into
addr16
cmpsl
mov
push
push
sub
loopne
scas
mov
cmp
push
outsb
mov
pop
jle
push
mov
xchg
mov
lds
fscale
push
jne
adc
or
lds
mov
mov
out
shrl
xchg
add
scas
fcomi
ss
adc
inc
insl
outsl
inc
push
mov
mov
push
and
mov
lea
or
sbb
push
and
sbb
repz
add
mov
push
test
or
fbld
lret
jnp
fwait
add
lcall
loopne
jno
mov
push
sarl
pop
pushf
data16
orl
shlb
scas
bound
lock
jl
sarl
out
and
adc
jo
pop
sbb
lahf
movsl
jp
add
and
mov
in
pop
jno
sbbl
ret
out
insl
xchg
jge
add
or
cmp
iret
push
mov
push
add
adcl
cmp
mov
sbbl
test
dec
mov
pop
pop
imul
push
inc
mov
push
ficomps
jno
cld
xor
mov
mov
or
cmpsb
out
adc
and
or
xchg
pop
adc
xchg
xchg
sbb
bound
sbb
add
ret
stos
cli
pop
aaa
xchg
or
pushf
dec
addr16
inc
mov
jb
stos
mov
cmp
lock
sub
jle,pn
ljmp
jnp
aad
pop
ja
xor
sub
roll
mov
ret
aad
in
imul
inc
pop
sbb
jmp
cwtl
push
ljmp
push
ret
in
xor
std
jae
pop
out
aam
mov
mov
lahf
sbb
or
xor
cltd
push
dec
pop
mov
inc
gs
les
mov
jp
es
lock
sti
pop
mov
cmp
pop
aaa
cmp
add
addr16
push
sub
and
push
imul
push
xchg
mov
xchg
fisubs
loope
push
and
add
out
push
js
jl
jno
into
sub
push
aad
fsqrt
lret
push
mov
mov
outsl
stos
loop
jns
push
repz
addl
jecxz
pop
cmpsb
mov
mov
inc
repnz
int
call
scas
loope
pop
movsl
ja
lahf
in
ficoml
xchg
dec
add
push
add
cli
mulb
sub
test
or
cmp
push
xchg
int3
stos
nop
scas
jne
jmp
pop
inc
test
movsb
mov
ret
repnz
xor
push
fcmovnb
add
xor
fnstenv
push
clc
sub
push
repz
je
ja
or
sbb
sahf
push
pop
mov
jl
outsb
mov
in
or
xor
sbb
mov
rol
xorl
inc
roll
pop
enter
scas
cwtl
inc
jnp
loopne
dec
insl
push
sbb
mov
cmpsb
xchg
xor
divb
xchg
sti
ret
jbe
mov
and
xchg
sub
pop
cmc
lea
outsb
push
jb
fstpl
arpl
insb
mov
sti
mov
push
lret
sbb
notb
sahf
jge
and
out
xchg
mov
fadd
xor
and
sbb
sahf
cmpsb
cmp
scas
and
ja
push
dec
in
pusha
jne
inc
mov
cmp
mov
sub
push
xor
mov
maskmovq
mull
adc
push
ret
std
rcr
push
xor
shlb
insl
cmp
scas
loop
xchg
sti
imul
cmpl
xor
mov
mov
out
adc
popf
sahf
sbb
cwtl
xchg
ja
call
sbb
ja
cmp
jns
pop
cli
or
push
inc
push
test
pop
adc
into
in
ret
jns
pushf
jge
push
xchg
cli
pop
cmp
xor
fstl
not
lock
negl
ret
dec
xor
ret
shll
outsb
mov
push
xor
aaa
popf
pop
or
sub
cmp
jnp
cmp
push
out
xor
mov
or
sahf
das
and
into
jmp
or
push
dec
mov
xlat
mov
movsb
sbb
xchg
into
xchg
mov
adc
push
iret
divb
repz
das
fidivrs
shll
lods
sub
hlt
insl
jge
adc
sub
sub
jns
popa
mov
dec
and
jae
ds
clc
ss
xchg
or
xchg
push
loopne
mov
sahf
cmpsb
add
fsubrs
shl
add
sahf
mov
sbb
sub
or
jnp
lods
mov
xchg
outsb
inc
jecxz
or
cmpsl
sbb
push
outsl
push
popf
sub
push
mov
inc
sbb
mov
ljmp
push
dec
mov
push
cs
xor
sub
or
fisubl
loop
xor
fs
inc
idivl
movsb
xor
movsb
std
sbb
sbb
andl
ret
rol
pop
out
das
jmp
idivl
iret
dec
jbe
sbbl
ljmp
mov
out
add
orl
push
xchg
jns
mov
mov
fnsave
int
pop
pop
push
mov
mov
mov
fidivl
adc
sti
lret
shl
adc
mov
cltd
mov
cmp
mov
xchg
jp
call
sbb
lcall
jns
mov
mov
xor
dec
sbb
in
pop
ja
test
add
out
jmp
test
shrb
or
jb
shll
dec
repnz
mov
mov
cmpb
imul
insl
leave
mov
adc
cmp
imul
subl
push
jb
jns
xchg
out
aad
jnp
sub
int
xchg
mov
jge
mov
popf
sub
pop
dec
pop
andl
movsl
or
mov
ja
push
mov
mov
inc
dec
adc
lret
push
clc
in
ffreep
pushf
xor
sub
push
test
xor
shlb
ljmp
sub
int3
mov
sub
or
ror
mov
ds
and
push
into
cmc
std
sub
xor
mov
outsb
cmpsl
insl
gs
cwtl
or
ds
into
call
xchg
add
negl
ljmp
add
dec
lds
mov
in
subl
shl
pop
lahf
int3
lods
mov
jnp
shrl
mov
sete
mov
adc
sub
push
lahf
mov
fstpl
inc
jle
addl
data16
call
pop
xor
scas
mov
lret
std
mov
push
mov
push
aam
rcrl
xchg
sbb
lahf
xchg
rcll
sbb
sti
jge
int
outsl
jns
push
mov
jbe
scas
adc
sub
scas
and
push
fs
push
jmp
xchg
lods
cld
rol
movsb
pop
dec
or
rorl
fcomps
pop
push
mov
adc
mov
add
loope
jge
icebp
mov
cmp
aad
movsl
push
jmp
sub
pop
adc
and
add
fidivl
mov
and
add
cld
inc
cmp
dec
dec
idivb
cld
sbb
lahf
icebp
lods
enter
add
inc
adc
in
cltd
addl
cmc
in
cmp
je,pt
mov
ds
jb
leave
cmp
jno
or
or
or
xor
xchg
iret
sub
or
jmp
bnd
movsl
out
push
js
cmc
adc
inc
sbb
out
sti
dec
scas
imull
xchg
and
imul
shll
mov
into
adc
stc
movsb
xlat
pop
jecxz
jbe
rcrb
push
cmc
imul
jg
mov
push
aam
dec
mov
imul
inc
xor
mov
cmc
test
jo
or
jle
ja
inc
or
mov
inc
pop
jns
enter
les
in
cmp
xchg
lret
cli
pop
testl
dec
lds
sub
dec
pop
add
mov
int
stos
cmp
and
sub
jle
pop
pop
lods
fs
idivl
adc
jo
inc
inc
je
pushf
and
insb
mov
std
sar
mov
sbb
mov
mov
jle
cld
jno
xor
call
lcall
iret
leave
jae
mov
sub
fcmove
jmp
inc
mov
in
jo
jecxz
daa
cmp
out
movsl
fdivs
lock
adc
addl
pop
xor
leave
mov
lods
int
mov
push
adc
lods
sbb
dec
xchg
mov
js
sub
mov
fstps
jg
daa
cmp
push
mov
adc
rclb
out
mov
xor
xchg
sub
std
mov
mov
xchg
clc
andl
push
fldl
jg
push
push
jmp
je
cltd
xor
push
lock
pop
or
jge
jns
adc
ss
xchg
lret
imul
mov
lcall
xchg
sbb
add
into
mov
push
xor
rcr
insb
add
sub
int3
pop
sbbb
insb
decb
andl
mov
mov
mov
mov
pop
dec
imul
sbb
push
xchg
inc
hlt
sub
jp
dec
ja
cmp
mov
pop
or
cltd
lock
xchg
jle
loopne
push
and
pop
jns
addr16
mov
aaa
pop
cmp
insb
cld
inc
push
cld
xchg
add
scas
dec
dec
pop
pushf
inc
sbbb
push
shlb
cwtl
lahf
mov
push
pop
pusha
pusha
in
mov
sbb
inc
inc
pop
mov
add
xchg
mov
push
or
cmp
scas
lahf
fdivl
mov
lahf
or
jno
lret
dec
pusha
xchg
pop
test
mov
mov
inc
test
mov
mov
and
push
push
je
push
mov
in
sub
add
loopne
pop
or
dec
jo
jbe
cli
inc
fsubrs
out
xchg
cmp
or
lods
sub
jne
mov
and
fxch
cmp
push
xchg
movsl
filds
mov
cmp
push
or
scas
rorb
mov
roll
test
mov
cmpsl
xchg
imul
sub
dec
js
aad
mov
push
push
and
aam
pop
cmp
in
dec
in
lea
inc
fwait
add
fwait
sarb
lea
mov
ret
mov
andb
popf
test
in
outsb
xor
mov
les
les
les
cltd
inc
cwtl
dec
divb
lock
xchg
test
and
inc
mov
jmp
out
in
or
aad
aaa
add
test
in
or
push
out
in
bound
add
and
stos
push
lock
imull
sub
cld
cmp
fsts
nop
mov
in
icebp
cmpsb
jg
in
shll
daa
or
cmp
dec
xchg
sbb
inc
jecxz
mov
stos
jbe
mov
cli
cmp
lret
test
add
add
and
repnz
xchg
int
ss
jbe
fdivrs
jg
faddl
pop
dec
pushf
sarl
sbb
mov
clc
movsl
cmp
jmp
pop
lds
das
ljmp
push
in
sbb
in
mov
imul
adc
mov
and
xchg
pushf
out
movsb
xchg
int
mov
and
jl
in
jns
out
and
test
and
pusha
cli
movsl
adc
es
popa
adc
pop
push
add
pop
jl
xor
arpl
pop
aam
mov
mov
call
lock
in
repnz
shrl
push
jno
or
push
push
cmc
out
xchg
push
test
adc
mov
sbb
fdivs
cmp
jbe
lea
arpl
cltd
pop
pop
sub
mov
push
jbe
dec
daa
mov
pop
outsb
inc
push
orl
and
shr
int3
xorl
mov
pop
sub
leave
sahf
jge
push
cmp
cmp
or
outsb
jne
xor
lret
inc
pop
xchg
mov
ljmp
pusha
std
scas
cmpb
xor
lahf
out
mov
das
sub
push
ret
pop
fiadds
lds
ret
sarb
xor
dec
shr
pushf
inc
ret
dec
xchg
enter
xor
pushf
add
xchg
lods
push
in
mov
mov
dec
sbbb
jnp
fcomps
inc
or
adc
pop
xor
popa
or
jnp
das
pop
push
mov
and
adc
mov
int
add
jne
hlt
shl
and
sti
lret
in
int
cmp
mov
jb
lock
stos
orb
jbe
ds
ret
js
shlb
xchg
or
imul
testl
lahf
sub
loope
and
hlt
jbe
push
mov
inc
cs
jge
data16
pop
daa
and
push
sbb
xchg
mov
rorl
hlt
dec
enter
pop
or
xchg
jg
pop
dec
mov
pop
jg
pushf
mov
xchg
jmp
sbb
xor
sbb
in
ret
pop
cmpsb
lods
sub
hlt
mov
int3
cmpsl
imul
and
test
jnp
mov
mov
sti
into
xor
jl
mov
mov
outsl
aas
fdivrl
dec
cmc
loope
pop
sub
mov
xchg
adc
fstpt
inc
add
rcll
sub
lds
in
scas
xor
adc
jnp
sub
push
add
or
cld
adc
mov
adc
stos
jnp
lahf
inc
es
jecxz
mov
sbb
arpl
push
cmp
cmc
lret
mov
sarl
xchg
mov
cwtl
outsb
in
das
add
int
push
leave
adc
testl
pushf
loop
lock
xor
lahf
dec
out
push
dec
inc
lock
sub
inc
mov
test
xchg
loop
loope
push
xchg
xchg
sbb
mov
nop
mov
adc
pop
jp
push
or
into
mov
cmp
leave
in
xchg
mov
xchg
sub
mov
out
dec
outsb
insl
inc
mov
jmp
sbb
sub
jle
nop
adc
loope
fisttpl
lea
imul
dec
sti
fstl
fdiv
into
and
in
sbb
sbb
inc
cmpsl
or
jge
xchg
loop
test
jmp
cmp
xchg
mov
in
pop
add
out
adc
leave
fucomp
adc
mov
outsb
fadds
mov
mov
dec
pop
adc
test
lcall
hlt
outsl
outsb
mov
movups
mov
cli
dec
jb
or
rcrl
es
push
jo
out
inc
bound
dec
pop
sbb
ds
stos
jl
mov
in
pop
dec
mov
rcrl
and
push
bound
xor
and
addr16
fimuls
add
sub
iret
xchg
stc
jns
jg
mov
scas
mov
shlb
mov
inc
imulb
jns
imulb
rcr
inc
jecxz
rcrl
insl
dec
jo
stos
outsl
fiaddl
leave
and
cmpsl
adc
push
sub
jnp
cmp
jmp
sub
pop
popf
push
mov
push
enter
int3
xor
mov
lods
sub
sub
into
repnz
sub
test
out
lret
ja
je
or
inc
inc
fisttpll
out
mov
pop
and
hlt
xor
dec
incb
out
lea
pushl
xor
mov
adc
jmp
call
mov
push
pop
gs
mov
pusha
leave
and
xor
data16
cmpsl
insl
fwait
jne
add
push
lcall
movsb
data16
stos
jbe
insb
adc
jb
shr
dec
sbb
xchg
stc
cmp
ret
cmp
ss
add
stos
cmp
in
rclb
imul
jl
mov
loopne
push
mov
lret
add
inc
mov
cwtl
sub
inc
xchg
daa
lahf
mov
jns
insl
fidivs
fs
pushf
xchg
sub
in
leave
and
lods
push
aam
stos
jbe
sub
popa
test
push
in
mov
or
mov
ret
push
or
je
mov
fadd
jne
xchg
and
lods
sbbb
rcrb
into
xor
sbb
mov
mov
jg
sub
fbld
push
mov
out
sub
cli
lea
lock
sub
cmovge
cli
cwtl
pop
aam
jg
es
mov
lods
xchg
imulb
mov
adc
mov
mov
xchg
out
sbb
mov
je
jmp
fdivrl
or
andl
cwtl
dec
sahf
in
iret
xchg
test
pop
fwait
subb
iret
movsb
stos
dec
add
ds
dec
pop
mov
xor
leave
lahf
shrb
cmc
sahf
and
insl
and
aas
add
repz
lret
out
pop
xor
mov
cmp
push
fdivrl
inc
jo
xchg
or
popl
outsb
and
mov
sbb
int
inc
dec
repz
jecxz
daa
add
enter
aam
js
jns,pn
sar
sub
dec
enter
lds
aam
cmpsb
hlt
push
dec
mov
stos
out
push
fisubrl
mov
pop
pop
sub
xchg
cmp
push
lds
xor
cli
iret
inc
roll
ficoml
xchg
mov
or
loope
mov
mov
mov
push
popa
inc
cmp
add
popf
cmpsb
add
dec
fdivrs
cmc
cmp
test
cmp
aad
outsl
daa
or
rcrb
pusha
gs
sub
lret
ss
xchg
fstl
fmuls
sarb
mov
aam
in
or
push
adc
push
std
call
ds
js
fnsave
test
push
inc
sub
and
push
in
cmp
pop
test
mov
jmp
sbb
adc
push
inc
cmp
fsubs
popa
sub
inc
stos
mov
push
lcall
ja
sub
out
xchg
adc
ret
jl
aaa
mov
hlt
jo
sbb
mov
test
arpl
jae
aam
movsl
fildll
cmp
inc
bound
addr16
jo
test
fwait
movsl
jae
pop
pushf
jns
push
test
es
mov
inc
data16
mov
dec
pop
stc
mov
outsl
pop
mov
mov
cmpsl
je
xor
mov
mov
dec
jae
mov
inc
stos
mov
mov
lret
mov
repnz
sub
sahf
lea
pop
jae
mov
negl
cltd
xlat
mov
shlb
add
mov
sbb
sbb
xchg
jae
into
xchg
orb
fstpt
in
push
push
add
sbb
cwtl
lods
cmp
mov
ss
fstps
rcl
nop
out
out
loope
ret
xchg
pop
out
inc
pop
ds
icebp
dec
sahf
sbb
dec
or
or
mov
iret
jnp
leave
pop
inc
and
jb
mov
lret
xor
icebp
js
add
leave
adc
loopne
lcall
test
adc
fnstsw
jno
out
jno
fs
in
jo
or
stc
rorl
pop
dec
nop
sub
mov
jno
bound
xor
cltd
ss
xor
mov
shrl
jle
sbb
test
stos
imul
xor
or
sbb
dec
out
jbe
outsb
sub
xchg
hlt
ret
aas
push
jecxz
or
jns
sub
sbb
mov
fsts
dec
les
mov
xor
imul
xchg
and
cmp
mov
sbb
insl
dec
dec
fstps
mov
aam
mov
filds
int
std
insl
xor
xchg
aam
mov
out
jg
fisubs
mov
cmp
dec
int
or
add
aad
jp
and
xchg
das
xor
or
out
insb
dec
pop
mov
leave
adc
insl
push
addr16
inc
sub
adc
imul
xor
and
sbb
es
or
orl
xor
imul
mov
push
mov
and
xchg
aas
fbstp
cmp
pop
xorb
mov
sbb
in
xor
push
xor
imul
cmp
cmpsb
cmc
ss
xor
popf
stos
add
andl
pop
sbb
cmpsl
js
jns
clc
cmpl
pop
fstps
scas
scas
pop
sbb
stc
add
mov
add
mov
rclb
cmp
or
sbb
mov
mov
movsl
sbb
mov
mov
loope
push
inc
pop
mov
jmp
repnz
mov
fdivr
and
fsts
repz
cmp
ret
sub
sub
xorb
insl
add
ljmp
add
ret
lods
xchg
scas
dec
into
sbb
outsb
cmp
jmp
std
loopne
aas
mov
lods
push
jno
test
cmp
mov
cmc
loopne
insl
cli
outsb
jnp
push
icebp
mov
dec
jns
mov
in
repz
jb
cltd
loopne
pop
std
and
xor
data16
add
test
adc
loope
xchg
jmp
ljmp
ret
dec
push
mov
sub
or
test
scas
nop
fdivr
repnz
cmpsb
pop
lcall
lea
ret
pop
rol
arpl
jle
ret
jo
fdivs
mov
iret
mov
in
cltd
ja
sahf
jmp
adc
repz
jns
pop
cmp
mov
lods
rcl
fucomip
jb
and
add
xchg
movsb
repnz
int
in
imul
in
fistpll
aad
outsb
sbb
movsb
xchg
gs
mov
sbb
jb
lods
mov
lods
call
ret
pop
jno
dec
jnp
popa
jo
push
mov
lret
insl
xchg
and
dec
pop
adc
in
push
inc
scas
lds
mov
aas
pop
cmp
lock
push
mov
sbb
dec
enter
inc
scas
dec
pop
test
inc
push
in
xor
sbb
mov
xor
insl
and
mov
or
loope
mov
inc
inc
sub
fisttpll
add
add
and
imul
xor
int3
push
sti
rorl
test
int3
les
inc
scas
mov
or
addr16
xor
mov
pusha
cmp
mov
in
dec
aad
mov
shlb
dec
movsb
cs
xlat
pop
int3
xchg
push
push
aaa
lds
in
inc
pop
ret
or
push
lcall
mov
xchg
aas
xchg
xor
cs
or
decl
arpl
fcmove
mov
aaa
jnp
or
paddusw
cmpb
mov
mov
jl
dec
out
xchg
ret
dec
ror
xchg
cmp
cmp
cmp
inc
inc
adcl
mov
xchg
gs
mov
push
mov
ret
inc
cmp
sub
pushf
xor
lock
mov
sub
mov
dec
test
out
daa
scas
dec
addr16
or
outsl
lret
mov
scas
jmp
out
xor
cltd
mov
mov
jno
or
imul
mov
lret
or
add
dec
aad
pop
cmp
test
pusha
pop
aas
daa
data16
jnp
add
mov
insl
lods
mov
jle
in
add
pop
mov
iret
sti
out
out
stos
inc
in
orl
and
dec
jmp
jp
pop
mov
js
push
int
sbb
test
push
xor
or
push
jge
lcall
je
lock
loop
in
xchg
add
mov
ret
addl
jno
jbe
mov
psrld
fwait
clts
jne
xor
out
imulb
andb
and
inc
sub
and
shl
push
int3
xchg
sub
in
enter
push
js
xor
cmp
aaa
push
imul
sbbb
cwtl
ret
add
dec
insb
ret
push
mov
mov
negl
jmp
mov
xchg
push
stos
fcompl
repnz
addr16
lock
and
jge
enter
mov
add
test
dec
out
mov
and
mov
pop
cmp
or
push
popa
js
rcrl
test
jae
push
or
es
lret
jno
and
sub
sub
pop
fstl
mov
out
cli
jl
dec
sarl
adc
xorb
pop
fisubl
les
cmp
stc
fs
dec
xor
mov
sub
sbb
fiaddl
decl
cmp
xchg
mov
cmp
dec
inc
mov
ljmp
icebp
add
push
jge
subl
movsl
add
ds
adc
inc
into
jns
test
add
lret
shrl
outsb
pop
gs
mov
mov
sub
sbb
xor
or
imul
cld
jo
stos
adc
outsb
sti
xchg
mov
or
mov
fcmovu
inc
sub
lods
cmp
aaa
les
sbb
push
mov
and
push
aad
lret
imull
jns
dec
xchg
cmpsb
fdivp
mov
pop
cltd
fs
push
dec
jecxz
gs
idivl
mov
xchg
sbb
out
xor
or
nop
sub
cmc
iret
jecxz
pop
leave
or
sub
mov
pushf
fcom
mov
sub
stos
jb
cmpsb
xchg
aaa
ljmp
out
dec
popa
movsb
movl
mov
cmp
mov
dec
jg
jmp
mov
sub
cmp
push
call
fimull
pop
rcll
mov
cltd
mov
stc
in
xchg
push
pop
pop
xlat
test
and
xor
push
sti
clc
sub
jp
mov
pop
sarl
mov
and
sbb
cs
inc
dec
mov
mov
mov
push
jge
jge
ss
mov
out
rolb
sti
pop
shll
minps
sub
sbb
jle
xchg
out
xor
inc
xorb
mov
fsub
lcall
insb
xchg
aam
into
jl
lea
dec
ja
cmp
xchg
inc
cmp
push
xchg
cmp
movsl
pop
pop
add
sbb
cs
lds
stos
sbb
mov
ret
adc
decl
neg
mov
lcall
mov
push
loop
addr16
adc
jge
insb
pushf
mov
in
cmovb
inc
gs
popf
mov
jmp
testb
add
mov
fsubr
repz
cli
push
jnp
dec
call
subl
cmpb
jae
das
dec
jnp
or
sti
mov
test
xor
mov
cmp
out
sahf
fistpll
mov
xchg
mov
xor
popf
push
xchg
adc
adc
mov
fdivl
cs
and
pop
subl
loop
push
negb
mov
lahf
mov
gs
pop
push
xor
inc
dec
out
subb
mov
mov
mov
test
sbb
or
add
cmc
insb
jp
dec
and
scas
cltd
sub
ret
pop
cmp
rol
inc
mov
adc
adc
pop
cmp
cli
add
inc
cli
pop
sub
mov
rcr
mov
nop
push
enter
sub
gs
mov
sti
getsec
lahf
pop
sti
cmp
cld
xorb
pop
bound
jg
push
das
push
cmp
dec
cmp
shll
cmp
ljmp
in
outsl
inc
std
aam
lea
cltd
aas
xlat
xor
dec
lret
lods
ds
dec
xor
es
xor
rcl
pop
jmp
imull
cld
sub
push
outsl
fbstp
xacquire
hlt
sbb
inc
stos
movsb
and
sub
ror
xor
les
jns
mov
and
push
dec
aaa
push
iret
sbb
imul
test
add
xchg
pop
sub
lahf
sbb
inc
cmp
mov
push
aas
push
push
test
mov
xchg
test
or
jl
repnz
stc
xchg
sbb
pop
aam
es
sub
sub
out
pop
mov
cmc
and
lcall
mov
push
mov
pop
dec
dec
mov
sub
icebp
inc
or
es
mov
std
daa
jecxz
data16
pop
jb
int3
icebp
jle
jp
negb
rorl
aad
aam
lcall
jl
in
pop
scas
xchg
roll
sar
in
pop
orl
js
mov
fsts
in
jno
pop
test
mov
sub
adc
adc
pop
adc
in
fsubrl
xor
out
dec
jb
dec
sti
fstpl
lcall
outsb
mov
add
js
pop
loope
insb
data16
mov
or
call
lret
push
scas
outsb
mov
sbb
pop
sbb
xchg
xor
cmp
jno
pop
dec
dec
push
loopne
add
xor
add
movsl
mov
mov
push
imul
dec
sbb
push
sti
add
jo
addr16
jl
repnz
sbb
mov
pop
adc
cmc
pop
test
xchg
iret
xor
enter
lahf
adcl
and
dec
out
shll
cmp
or
int3
gs
xchg
dec
loopne
ljmp
movsl
repz
daa
dec
sbb
cmp
and
out
scas
sarl
mov
pusha
pop
iret
sahf
divb
adc
and
inc
sub
xchg
ja
sub
push
push
mov
or
jns
xor
inc
mov
rcrb
int3
xchg
and
aad
in
push
stc
dec
push
mov
sbb
xchg
fnstenv
ret
movsl
cmp
fs
push
lret
push
mov
hlt
and
push
aam
hlt
test
lock
pop
cmc
push
inc
push
push
dec
xchg
movsl
mov
mov
ret
and
out
clc
stc
pop
outsl
cmp
repz
insb
xchg
cmp
jnp
fstpl
push
inc
xchg
out
mov
sbb
outsb
fsubrl
mov
mov
aaa
gs
aad
andb
jg
mov
popa
sbb
adc
adc
and
stc
cmp
jge
and
xor
inc
inc
mov
pop
mov
loop
inc
nop
jg
sub
lods
in
out
repz
fstpl
mov
jg
daa
mov
aad
ds
shll
andb
adc
or
repnz
mov
push
cmp
lods
jbe
repnz
dec
or
movsl
push
add
test
xchg
jo
mov
sarl
lods
dec
sub
scas
in
sub
test
mov
add
insl
jg
out
add
xchg
stos
sub
sahf
fwait
outsb
arpl
imul
jmp
pusha
jge
inc
aad
xlat
push
outsl
add
stos
hlt
jmp
iret
in
rclb
sub
pop
mov
jge
gs
ljmp
and
ljmp
jnp
fsts
lret
mov
fdivrs
and
dec
lods
insb
subl
loopne
cmpsl
and
dec
mov
sbb
in
xor
fdivrl
insl
inc
push
sub
nop
inc
sarb
mov
xchg
mov
push
mov
adc
cli
mov
mov
movsl
or
mov
ss
xlat
sbb
push
or
mov
daa
in
cs
or
mov
lret
lods
std
aad
je
jl
xor
outsb
push
or
imul
inc
inc
aaa
jae
xchg
xchg
lahf
xchg
fsubs
je
xor
sbb
add
jmp
shr
out
sub
out
dec
pop
inc
dec
sbb
fs
testl
xchg
xor
jb
pop
dec
sahf
scas
mov
mov
cli
fdivs
insl
inc
mov
add
lods
jae
xchg
ret
fcmove
cmp
or
pop
and
add
test
lods
jnp
cmp
mov
mov
pop
mov
mov
or
test
xor
int3
pop
pushf
dec
fxch
sub
xchg
rorb
lahf
pop
leave
push
cld
cli
mov
pop
adc
ret
stos
fmulp
bound
pop
dec
sar
cmp
lods
stos
in
cld
jns
notl
cmpsl
mov
lock
jge
cltd
roll
pop
sub
cmp
pop
dec
mov
or
mov
pop
push
das
push
and
iret
sub
je
push
in
fcmovu
cld
adc
adc
mov
mov
add
push
jle
lret
xchg
idivl
mov
inc
mov
cmp
jle
scas
pop
mov
movsb
pop
fldenv
jne
jecxz
dec
rcr
out
xchg
xor
cltd
xchg
jmp
cmp
add
rdtsc
cmp
mov
cmp
mov
fsubrp
fiaddl
adc
movsl
lahf
aaa
enter
jg
in
sbb
add
sub
mov
push
and
testl
dec
sub
inc
jmp
sarb
in
push
jp
cmp
xchg
jo
iret
daa
lret
or
mov
dec
mov
adc
iret
dec
outsb
xor
mov
fcomps
mov
inc
sub
aam
nop
mov
pop
and
push
scas
pushf
daa
or
hlt
mov
ds
cmp
mov
pop
sub
scas
inc
adc
pop
js
imul
add
in
lods
or
shrb
pop
push
push
popa
or
test
lret
in
sbb
cmpsb
dec
and
pop
and
sub
mov
loopne
xchg
stc
adc
fwait
push
mov
xor
clc
or
popf
popf
adc
popa
nop
sub
test
pop
jo
movsl
stos
shl
adc
pop
loope
pop
mov
lods
stc
jmp
bound
ss
mov
push
add
fwait
dec
les
mov
mov
mov
ret
push
sub
cmp
rol
into
gs
cmc
push
mov
dec
arpl
push
jo
pop
pop
mov
cmp
sahf
in
inc
sub
mov
out
mov
mov
cltd
and
mov
dec
fldenv
jl
jb
rclb
dec
cmp
jb
or
sbb
mov
cwtl
ljmp
lock
es
pop
subb
push
sub
adc
pop
push
dec
inc
mov
addl
insl
jmp
shll
das
xor
pop
sbb
repz
outsb
sbb
sbb
and
clc
cmp
push
push
popa
mov
sub
movsl
jae
loope
in
mov
ds
js
jecxz
sbb
cld
sub
stc
outsb
cmp
lock
push
aad
stos
ss
movsb
arpl
movsl
or
dec
mov
sub
mov
sbb
pop
cmp
stc
mov
adc
push
add
push
dec
jg
inc
jg
imul
lret
cmp
lock
ret
lds
cmp
adc
ds
repnz
lea
mov
aaa
add
cwtl
cmp
scas
mov
inc
jmp
jecxz
sahf
push
xchg
jae
lods
fidivl
imul
int
and
fwait
inc
js
inc
call
mov
into
std
es
or
xchg
shll
outsb
lds
push
jg
xchg
mov
ret
fimuls
mov
bound
sbb
dec
mov
mov
xorl
divb
lcall
sub
push
mov
sub
mov
pop
repz
jno
aam
push
sbb
jns
cmp
aam
or
sbb
push
cmp
xchg
repnz
cmpsl
nop
pop
cmp
cmp
mov
mov
popl
sti
es
or
push
dec
mov
outsl
jbe
xor
add
and
push
loope
pop
mov
test
insb
mov
sbb
aas
jb
cmp
cltd
out
or
and
inc
aam
clc
mov
sub
or
hlt
or
mov
jecxz
and
daa
iret
lods
cld
pop
sub
jae
push
or
push
or
push
push
dec
dec
imul
clc
jb
jae
dec
lods
sub
dec
sub
lods
add
cld
inc
mov
insb
rcrb
cmp
aad
xchg
popf
sub
jbe
add
mov
push
cmp
inc
push
mov
mov
and
clc
cmp
subl
mov
pop
insb
movsl
mov
enter
cmc
and
out
sub
xor
push
mov
cmp
xor
lods
adc
push
jl
mov
push
sub
pusha
movsb
btr
sub
push
stos
inc
cmp
mov
mov
daa
mov
fidivrs
testb
cmp
add
jecxz
mov
cmpb
xchg
xchg
bound
ret
inc
pop
mov
jo
jno
ds
ljmp
sub
sbb
ret
out
insl
push
inc
adc
in
cld
jno
outsl
orl
jo
pop
cmp
jmp
shr
decb
xchg
pushf
add
jmp
adc
jl
xchg
pushf
shlb
shrb
shll
ss
mov
push
sbbb
jge
clc
lahf
je
daa
cwtl
add
lds
in
loop
daa
inc
sbb
dec
push
dec
mov
movsl
sub
mov
jnp
insb
shlb
lret
lahf
fisttpll
mov
lahf
pop
mov
pushf
popw
jecxz
sbb
mov
inc
mov
ret
and
fstl
mov
nop
push
pop
orl
es
clc
repnz
cld
sarl
sbb
jle
repnz
call
push
fdivrs
mov
in
lcall
rcl
hlt
adc
ds
mov
mov
test
std
xor
in
inc
sbb
movsb
pop
xor
pop
scas
loopne
in
scas
js
or
pop
pop
add
outsl
loope
pop
jbe
jns
aad
aam
push
enter
fadds
int3
out
jge
popf
add
xchg
scas
sub
cmp
push
jge
adc
xchg
mov
cmovnp
mov
sbb
in
dec
lcall
fwait
pushf
jnp
call
xlat
cmp
or
mov
mov
shll
push
sbb
xchg
scas
mov
pop
std
leave
mov
dec
loope
int3
pop
call
add
mov
add
mov
push
inc
add
and
loope
sbb
add
stos
ds
into
scas
sub
hlt
xchg
and
mov
pop
or
add
insl
push
bound
fidivrs
enter
inc
pop
pop
mov
fs
andl
js
cs
loopne
stos
xor
test
lret
rcll
lock
jle
lahf
jb
dec
jl
mov
mov
mov
push
int
inc
out
shr
pop
into
test
or
push
lret
adc
fisubs
mov
dec
push
enter
ret
ficompl
movsb
divb
dec
mov
fnstenv
ret
call
ljmp
push
ja
sahf
adc
fwait
or
sub
ljmp
loope
cltd
jmp
jne
jecxz
xor
jl
jle
push
rcr
dec
or
lahf
popf
mov
faddl
lods
push
les
push
and
sbbl
mov
push
les
mov
push
jmp
jae
mov
in
out
mov
rcrl
mov
imul
pop
fwait
and
mov
aad
es
sub
xchg
scas
ret
js
xchg
repz
inc
xchg
mov
pop
out
pop
add
scas
cmp
xchg
les
add
xchg
pusha
cmpsb
sub
mov
cmpl
push
stos
push
or
mov
xor
stc
adc
les
sub
stc
and
jg
jbe
ds
popf
scas
test
fsubrl
mov
inc
cmp
jb
repnz
ds
bound
movsl
aaa
adc
fists
adc
xchg
or
dec
out
call
add
sbb
pop
lods
aam
jcxz
dec
or
sub
mov
stos
push
cmovo
cs
dec
loope
leave
loope
adc
lcall
jg
icebp
imul
rol
ret
scas
in
or
jl
dec
mov
pop
gs
ljmp
pushf
sbb
cwtl
jle
lds
push
xor
subb
ret
jo
and
or
mov
mov
outsl
cmp
lods
jnp
jge
es
cmp
ja
cld
add
lret
in
sti
push
inc
cmp
jmp
int3
cltd
pop
daa
aaa
in
add
icebp
data16
inc
in
dec
pusha
mov
dec
xor
push
mov
push
cli
fldenv
mov
xchg
mov
stc
mov
mov
inc
push
neg
xchg
cmp
mov
push
mov
jle
sbb
jnp
xchg
push
sar
sbb
int3
inc
pop
pop
insb
jmp
mov
cld
jbe
std
add
sbb
lods
push
scas
das
gs
lock
sbb
sub
adc
pmulhuw
dec
sub
test
rclb
test
jp
mov
loop
cmc
add
ljmp
xchg
cmp
push
popa
dec
int
or
in
and
adc
inc
lahf
in
inc
mov
inc
outsl
lahf
in
fmuls
or
lods
and
push
jns
mov
or
leave
inc
pop
sbb
cs
mov
dec
push
xor
pop
into
xchg
pop
es
scas
jo
aas
sbb
imul
jae
xor
pop
es
push
repz
icebp
rcrb
call
flds
enter
sarl
icebp
cmpl
adc
sub
pop
lods
cmpsl
and
out
fbld
femms
mov
pop
adc
adc
inc
mov
and
pushf
push
fwait
ret
or
leave
dec
or
mov
mov
daa
in
xor
mov
mov
sti
pop
push
add
jecxz
idiv
cmp
inc
xchg
rcr
popf
inc
mov
push
adc
push
jno
fsts
xchg
ja
lods
out
and
xchg
ds
jns
xor
pop
jo
add
lret
fucomip
and
out
mov
pop
sahf
stos
call
mov
xor
fdivr
inc
adc
call
ror
shlb
mov
mov
mov
test
hlt
outsb
mov
push
cmp
dec
sub
lock
loope
daa
mov
ret
inc
into
pop
mov
daa
adc
shlb
xchg
aas
rol
jns
rorl
push
and
and
and
rcrl
rol
xchg
sub
add
push
adc
xor
add
addr16
and
mov
data16
scas
mov
mov
pop
inc
loope
mov
clc
pop
or
loope
pop
push
or
cmc
shll
inc
lock
pop
mov
loopne
outsl
add
dec
add
test
clc
scas
sbb
out
mov
cmp
pop
addr16
sbb
mov
stc
push
rolb
push
pop
jge
shrl
es
test
int3
mov
xor
add
push
fsubrl
add
es
sbb
xor
add
mov
sti
pop
loop
mov
std
mov
cmp
cmp
das
sub
loopne
aam
push
xchg
dec
addr16
add
ja
adc
nop
es
mov
jbe
sub
mov
jmp
sub
lds
mov
cmpb
movsb
pop
movl
pop
clc
sbb
sbb
push
fiadds
insl
or
das
dec
movl
pop
mov
add
jmp
sub
jbe
fisubrs
inc
xchg
cmpsb
jno
jle
cmp
es
cmp
ss
cmp
sbb
cmp
cmp
filds
add
sahf
inc
sbb
lods
repz
pop
jg
xchg
es
sub
xchg
daa
dec
xor
call
mov
inc
lods
adc
pop
cmp
fs
cmp
in
lahf
mov
movsl
adc
cwtl
mov
and
mov
mov
jno
sti
mov
ljmp
dec
and
orl
xchg
push
icebp
rcll
shrl
mov
mov
lock
fsts
push
mov
scas
enter
repz
lods
and
into
sti
std
sbb
bound
cmp
xchg
mov
sbb
fldt
and
dec
push
lods
cs
add
sbb
jge
lock
enter
xchg
movsb
outsb
arpl
jns
inc
and
cmc
adc
inc
cli
vpcmpeqd
aad
lds
pop
mov
or
lretw
imul
dec
mov
insb
cmp
fcompl
xor
pop
cmp
clc
sbb
dec
dec
ret
and
add
mov
aas
dec
inc
rcrb
mov
js
jmp
clc
insl
test
xchg
and
sub
push
dec
fdivp
adcb
jns
rorl
testl
shrb
jle
cld
mov
cmp
xor
outsl
mov
fadds
dec
inc
mov
mov
jbe
mov
mov
xchg
icebp
jge
in
mov
out
mov
movsl
jp
mov
outsb
int3
out
fwait
sbb
xchg
idivl
test
adc
mov
add
pop
cs
popf
pop
cmp
sub
dec
push
inc
inc
int
xor
xchg
aad
scas
insl
popa
es
mov
cwtl
pop
add
shll
or
xlat
and
int
loop
mov
aam
popf
sbb
and
iret
int3
lods
jl
pop
call
enter
pop
sbb
jnp
adc
bnd
je
cs
int3
mov
nop
dec
adc
in
lea
int
pop
adc
jge
cmpsb
sbb
and
lock
sbb
mov
dec
cld
icebp
xor
push
mov
stc
sbb
inc
mov
mov
add
push
negb
int3
sti
pop
inc
popa
mov
xor
fisubl
mov
cmpsb
pop
or
push
pop
movsl
cs
sbb
adc
adc
mov
jno
cli
out
add
clc
cmp
mov
mov
aas
add
daa
cwtl
ret
push
xchg
xchg
or
jge
or
bound
jmp
call
sbb
jne
out
daa
and
call
cmovl
aam
out
jbe
in
loop
iret
lock
pop
dec
out
push
pop
push
gs
and
adc
mov
iret
sbb
out
test
pushl
mov
jbe
pop
push
push
mov
pushf
inc
jl
lahf
icebp
sti
mov
mov
pop
mov
addr16
adc
add
push
ret
adc
ljmp
mov
cmp
inc
jmp
ds
mov
mov
xchg
push
or
cmp
ljmp
push
lahf
push
std
jge
fisubrl
push
aaa
js
les
ss
incl
pop
mov
cmp
in
cmp
ss
outsb
ret
mov
pop
aad
push
and
cmc
popa
add
fwait
dec
inc
lret
push
movsl
out
dec
icebp
cmp
rorb
pop
mov
dec
mov
pop
sbb
pop
push
push
test
pop
hlt
in
aad
into
pusha
aam
pop
jge
icebp
mov
push
xchg
loopne
mov
inc
mov
sub
std
sahf
dec
adc
jbe
jg
add
sbb
adc
sbb
ja
lods
push
xchg
cmp
addr16
sub
arpl
mov
out
frstor
push
mov
sub
pop
mov
rcrl
mov
fldt
dec
popa
pop
mov
xchg
addr16
dec
lahf
push
int
popa
movsb
dec
cmc
fwait
lret
pop
mov
addr16
cmp
mov
sub
xchg
addr16
jae
xor
fcoms
mov
pop
jmp
shrb
adc
mov
inc
cmp
loop
pop
sbb
jae
push
xchg
dec
into
jmp
add
es
mov
xor
sub
lret
jne
adc
jo
inc
arpl
or
popa
cmp
jg
xchg
and
xchg
cmpsl
jb
call
mov
xor
loopne
fistps
mov
and
add
add
dec
inc
lock
aad
or
ljmp
push
jmp
gs
nop
and
jge
ljmp
aas
rcl
xchg
pop
js
aam
inc
ret
sti
mov
cmp
mov
in
arpl
add
andb
cwtl
mov
popf
sub
mov
add
movsb
or
add
mov
shrl
dec
subl
jecxz
xorb
leave
cltd
mov
mov
xchg
sti
shl
cltd
xchg
adc
sub
in
inc
jecxz
mov
pop
scas
lret
inc
push
fdivrs
or
sub
stos
add
insb
pushf
into
push
jb
in
das
sub
fisubl
std
xor
adc
cltd
cmp
popa
scas
push
aaa
cmp
inc
lods
rclb
jle
jo
out
sbb
sub
jo
pop
fadds
jmp
in
sbb
xchg
mov
pop
in
jmp
mov
lret
adc
mov
inc
mov
or
mov
subl
mov
mov
mov
push
push
sub
mov
dec
xchg
push
and
out
aas
adcl
pop
jno
mov
push
mov
pusha
fsts
xorb
shll
adc
sub
out
push
sbb
or
cmpsl
pop
stc
out
out
lcall
sub
mov
test
jmp
sbb
jmp
fidivs
jg
jl
test
or
ja
faddp
and
lret
mov
and
push
test
test
cmp
xor
jns
imul
and
fsubs
sbb
xchg
xlat
popf
xor
and
mov
pop
mov
fcoms
cli
test
lods
sbb
inc
inc
mov
xchg
faddl
adc
jge
ljmp
scas
dec
das
cmpsl
repnz
in
lret
dec
mov
rolb
out
jbe
lcall
out
shl
mov
mov
mov
jb
hlt
mov
or
mov
imulb
xchg
cs
dec
xor
es
pop
inc
push
pop
dec
lods
cld
jb
inc
xchg
pusha
xor
pop
mov
fmull
adc
imul
orl
sbb
rcrb
push
mov
or
test
loop
adc
adc
mov
jg
popf
or
mov
sub
iret
sub
push
and
out
es
sbb
xor
rolb
mov
sbb
and
sub
or
and
cmpsl
or
les
or
mov
jne
out
cmp
mov
inc
arpl
jnp
xor
not
and
insl
insl
adc
stc
icebp
dec
adc
test
arpl
push
sbb
mov
pop
lock
mov
push
jne
mov
lret
adc
popf
movsl
push
shll
nop
lret
sti
jae
push
ds
mov
nop
loopne
test
int3
js
lods
mov
xor
pop
jle
mov
cmp
mov
pop
mov
xor
enter
popa
pop
pop
pop
jns
or
clc
into
nop
call
xchg
movsl
xor
add
xchg
cmp
ret
fdivs
pop
notb
fwait
or
inc
cli
push
test
clc
xchg
ds
add
mov
mov
push
repz
mov
pop
insb
push
add
adc
scas
cmp
jmp
adc
inc
in
push
adc
ja
add
cmp
adc
repz
out
lea
iret
sar
test
mov
sub
xchg
and
push
pushf
inc
rcrl
cmp
mov
sarl
xor
pop
jne
adcb
cmpb
mov
inc
mov
addr16
jns
sbb
adc
sbb
sti
inc
push
leave
clc
mov
mov
jp
jns
push
jbe
pop
out
pop
and
sub
pop
mov
or
in
out
mov
sbb
stos
in
lds
inc
jns
add
int3
add
sub
popf
enter
out
cmp
cmp
jnp
aaa
adc
out
data16
mov
dec
lahf
cmpsl
mov
ljmp
cmpsl
cltd
mov
cmpsl
dec
pop
jb
inc
fcoml
in
add
jns
pop
inc
adc
lcall
or
xchg
cmpsl
out
push
or
mov
je
sub
add
jne
jnp
sti
or
push
repnz
jno
fcoms
jo
notb
mov
and
ss
xchg
gs
shrb
add
mov
dec
pop
jne
adc
xchg
mov
call
idivb
pusha
shl
cmp
or
cli
ja
hlt
push
imul
cs
cld
push
ss
fsubrs
cmp
jae
sahf
xor
and
pop
xor
jo
mov
pop
jmp
std
push
pop
std
dec
or
jno
ds
xorl
lds
into
adc
mov
sub
clc
aas
mov
mov
inc
shrl
sbb
sbb
iret
inc
cmpb
bound
stc
loope
std
xchg
scas
in
xlat
or
sbb
addl
pop
cwtl
mov
or
dec
jb
mov
cmp
aas
mov
aad
jns
data16
ja
bound
inc
cmpsb
mov
inc
scas
jecxz
scas
nop
adc
data16
mov
sahf
jecxz
jb
xchg
insl
jg
mov
cmp
pushf
xchg
pop
es
mov
inc
nop
daa
xchg
cmp
ljmp
in
arpl
lods
jae
xchg
pusha
pop
mov
scas
sbb
ret
fmul
push
jmp
xor
mov
push
sbb
in
scas
aam
inc
xor
jno
pop
and
icebp
xchg
fsubrs
bound
divb
cmp
imul
hlt
nop
popf
jl
stos
ficompl
mov
push
inc
out
pop
mov
mov
mov
push
mov
mov
repz
call
xchg
dec
cmc
push
out
aam
loopne
loope
pop
iret
mov
popa
std
call
push
xchg
pop
mov
insl
repnz
pop
jae
iret
fadds
mov
stc
fistpll
cmc
sbb
stc
cmp
arpl
add
lock
pop
inc
gs
orl
pop
xchg
xchg
testb
aas
fdivr
jo
cmp
ljmp
push
dec
pop
jne
imul
add
pop
add
std
out
fcomip
inc
jg
mov
into
stos
and
jnp
dec
subl
or
fsubrs
mov
addb
jecxz
js
inc
mov
adc
inc
pusha
pop
fwait
pop
cmp
sbb
mov
or
fiadds
repz
jg
xor
inc
xchg
stc
mov
add
sbb
inc
int3
and
pop
mov
adc
popf
mov
xor
add
mov
jp
jb
dec
push
jnp
cmp
xor
mov
dec
pop
or
fstps
cmpsb
xor
push
outsl
pusha
xchg
mov
sbb
mov
jbe
xchg
popa
cmp
push
mov
mov
push
pop
push
movsl
ss
test
mov
enter
jg
roll
fidivs
dec
mov
sbb
mov
es
push
inc
inc
andl
lahf
fwait
pop
ljmp
and
mov
or
dec
jne
and
push
int3
clc
push
jo
popaw
insb
addr16
adc
pop
fs
cmp
push
sbb
and
ret
lret
loope
mov
and
inc
push
outsb
fcompl
xchg
jl
pushf
or
adc
push
sbb
scas
in
mov
jnp
je
mov
add
xor
mov
push
and
jne
outsl
pop
rclb
sar
dec
sub
addr16
mov
icebp
cli
aam
data16
and
iret
fst
lcall
sub
and
and
roll
gs
jns
shlb
shl
jmp
dec
mov
and
xor
roll
mov
inc
jp
aas
sti
sub
sub
jl
out
add
jb
push
push
jns
adcl
or
pop
sbb
adc
sti
cmc
push
mov
push
test
jle
pop
sahf
lods
popa
inc
cli
aam
leave
sti
xchg
cmp
add
aaa
outsl
add
xchg
sub
and
inc
dec
or
mov
outsb
movsb
subl
mov
push
sti
fistps
repnz
cmc
sbb
add
cltd
mov
dec
ljmp
out
mov
rol
dec
outsl
inc
mov
lods
cmpsb
and
cmp
mov
pusha
adc
mov
les
mov
xchg
sub
lock
cwtl
ret
mov
mov
xchg
mov
fimuls
movsl
mull
cmc
insb
push
cwtl
add
pop
push
cwtl
mov
fadd
adc
sbb
push
int3
lods
out
adc
add
jnp
ss
stos
or
adc
mov
push
inc
and
jp
add
roll
adc
or
js
rorl
fnsave
jno
push
mov
mov
mov
int3
cmp
push
xchg
cwtl
mov
inc
push
sub
dec
add
stos
fsts
fcmove
xchg
jbe
or
rclb
jo
ret
lcall
outsl
out
add
imul
out
fxtract
and
pop
shlb
or
imull
mov
add
push
sub
inc
mov
mov
out
push
sub
aad
sbb
add
xchg
pushf
adc
jne
je
test
push
lods
hlt
fists
movsl
mov
pop
cs
cmp
sbb
or
or
pop
sbb
pop
push
cmp
mov
dec
mov
sub
ficomps
movsl
movsb
xchg
sahf
mov
and
push
mov
fsubr
cmp
cs
fwait
add
dec
stc
and
movb
mov
imul
out
dec
imul
xchg
push
scas
mov
cmp
sbb
das
sub
test
push
jno
cmp
in
pushf
aaa
sub
mov
fstp
jg
sarb
mov
or
insb
jecxz
out
dec
dec
mov
inc
add
lods
insb
in
jnp
mov
jo
add
add
aas
leave
fldenv
xchg
mov
jle
cmc
out
fs
jecxz
pop
jne
add
ds
or
xchg
stos
je
and
movsb
inc
mov
iret
cld
xchg
pusha
lods
scas
sub
fidivrs
out
pop
daa
mov
cmp
mov
mov
mov
imul
cmp
popf
fmuls
nop
insl
leave
jp
je
test
add
out
test
pop
insb
popf
add
and
and
dec
loop
or
xchg
les
imulb
inc
mov
sbb
lcall
dec
imul
or
lcall
add
mov
pusha
pop
cs
mov
gs
add
or
cmp
ds
jne
in
mov
adc
dec
mov
or
xchg
xchg
pop
add
in
cmp
cmp
stos
fcmovu
push
jbe
sti
loope
push
divb
add
fdivp
jnp
inc
fstl
sub
push
sub
push
push
lahf
sub
jg
adc
imul
pop
sbb
xchg
repz
stos
nop
repnz
jnp
daa
jns
lock
dec
inc
loop
jb
pushw
xchg
inc
xor
daa
imul
push
aad
out
aas
inc
mov
cmp
cmp
out
and
adc
push
subb
lahf
ds
push
andl
push
mov
or
fbstp
push
pop
daa
add
cmpsl
arpl
jmp
mov
dec
pop
ret
cmp
cwtl
aam
mov
cmp
lock
xchg
js
addr16
test
xchg
mov
push
and
xor
or
xchg
mov
sti
int
roll
dec
add
iret
iret
in
movsb
or
rcll
jp
aad
sub
inc
mov
mov
pop
insb
jg
repnz
outsb
sub
xlat
pop
cld
aas
sti
int
pop
sbb
lcall
jne
push
enter
in
aam
data16
shlb
aas
inc
mov
test
mov
repz
lea
dec
lods
call
js
loopne
mov
cli
cmpsl
lret
adc
sub
in
in
sub
aam
xchg
jb
pop
sub
ret
dec
inc
movsl
mov
dec
xchg
or
jle
push
in
aad
jb
add
jecxz
scas
mov
inc
xchg
xchg
push
inc
or
add
mov
sub
pop
sub
aad
sbb
das
movsl
sarl
repz
pop
cli
xchg
or
mull
mov
mov
jp
mov
sub
out
jb
cmp
mov
fisttps
pushf
pop
xor
outsl
jns
cli
adc
nop
ljmp
cmp
outsl
mov
jbe
xchg
out
lods
enter
sbb
test
dec
and
cmc
xor
inc
mov
xchg
sub
xchg
push
xchg
shrb
sbb
or
pop
andl
cmp
and
inc
scas
ffreep
fsubl
insb
les
aaa
jns
arpl
xchg
xlat
in
mov
or
testb
lods
dec
xor
and
pop
sbb
jp
and
push
pop
nop
jp
repnz
push
rclb
out
leave
sbb
mov
test
jle
xchg
fcmovbe
mov
xchg
and
insb
int3
push
imul
push
daa
dec
scas
sbb
mov
stos
subl
or
mov
out
mov
fldcw
movsl
repz
lds
pop
mov
jb
cld
shlb
out
jb
in
popf
jge
jmp
pusha
mov
sbb
dec
cmpsl
sub
adc
add
js
scas
lock
jge
xor
mov
roll
mov
mov
xchg
dec
adc
mov
ja
lcall
mov
aas
ret
xchg
jbe
pop
testb
add
mov
and
push
mov
xchg
inc
jnp
aad
mov
jge
insb
stc
inc
addb
ss
jle
test
jbe
stos
pop
test
out
jmp
push
pop
pop
jp
sbb
jmp
xchg
and
movb
push
and
je
adc
movsl
or
mov
jae
jmp
cwtl
adc
cmp
lds
int3
fisubs
out
mov
pop
leave
inc
pop
loopne
divl
pop
mov
jb
cmp
pushf
imul
and
mov
mov
cmpl
in
push
add
sbb
cmp
popa
add
in
push
jns
or
mov
stos
cmp
das
mov
cmpl
or
fdivr
adc
jne
insl
mov
sub
test
adc
push
push
or
inc
push
push
hlt
mov
lret
std
insl
pop
pop
xlat
push
jecxz
js
ss
lock
sti
ljmp
out
scas
cwtl
lods
mov
sbb
call
popf
or
mov
pop
mov
sub
stos
lock
and
jmp
and
xchg
add
loopne
adc
push
stc
pusha
jg
std
repz
outsb
in
add
dec
outsl
push
sub
pop
inc
pop
pop
jp
mov
adc
sub
or
pop
ror
push
xor
jge
fwait
add
in
into
fstl
xchg
push
mov
push
xor
or
movsl
int3
pop
lcall
push
pushf
ret
mov
mov
dec
movsl
mov
cli
sub
xchg
sbb
jno
inc
jae
mov
clc
xchg
fcmovbe
sti
or
pop
adc
xchg
xor
rcll
loope
mov
adc
inc
dec
adc
dec
push
popf
pop
filds
mov
xor
test
sub
stos
push
sbbb
test
mov
mov
inc
pop
ja
mov
mov
xchg
bnd
or
jno
dec
mov
mov
jmp
mov
jle
pop
aaa
test
sti
out
int
fildl
and
xchg
fcmove
inc
cmp
cmc
daa
lds
sbb
inc
ss
int3
and
fsub
in
popf
cmp
or
outsb
sub
adcl
sbb
loop
inc
test
hlt
xlat
dec
scas
xchg
outsl
pop
xchg
or
ja
mov
dec
sti
out
mov
stos
int3
test
ficoms
sub
into
sbb
jg
mov
xchg
cmp
jmp
fcoms
in
popa
or
sbb
inc
push
test
sub
lock
mov
out
pop
jb
add
or
sub
dec
pop
lahf
and
dec
and
mov
out
push
int
or
xchg
pop
fmul
ljmp
sub
jmp
nop
xchg
add
inc
jg
rcrl
pusha
pop
mov
lods
mov
aad
jbe
cmpsb
fimuls
lods
cmp
test
pop
pop
pushf
cltd
int3
fs
sti
cmp
xchg
ss
pop
icebp
lds
movsb
leave
aam
mov
mov
fsubrs
insl
inc
add
ret
dec
pop
jg
xchg
xor
orl
stos
test
xor
dec
mov
dec
sbb
jp
push
and
jae
inc
xchg
xor
adc
add
add
push
shl
xchg
outsl
jnp
imull
js
adc
data16
add
xor
jno
in
adc
stos
mov
jl
loope
std
lahf
and
in
cli
adc
fbstp
cld
rolb
insl
jae
sbb
push
addr16
xor
addr16
sarb
mov
imul
fistpll
sbb
icebp
sti
sub
in
sub
xchg
or
imul
shrl
pop
dec
push
dec
dec
incl
arpl
stos
add
subb
mov
mov
xchg
push
mov
xchg
stos
loopne
scas
stos
je
push
cmp
mov
out
dec
jae
fbstp
mov
movsb
or
and
xchg
or
mov
fists
fwait
xlat
mov
stos
repz
vfrczss
fstpt
aam
psubd
pop
mov
cltd
daa
or
sub
cld
jbe
stos
dec
imul
xchg
lcall
shrl
not
icebp
sub
mov
aas
mov
cmpsb
out
aam
jl
mov
xchg
mov
insb
lock
outsl
iret
adc
pop
testl
mov
push
mov
fs
sub
loope
pop
dec
subb
xor
imul
add
popa
add
pop
sub
imul
and
stc
xchg
cmpsb
in
mov
movsl
or
xchg
adc
adc
mov
data16
in
rclb
insl
rol
add
cltd
xlat
xlat
popf
hlt
mov
dec
insb
popa
sub
xchg
inc
fadds
push
cmc
mov
or
sub
pushl
icebp
lock
out
fstps
inc
lock
dec
scas
mov
data16
xor
jl
dec
out
cs
arpl
dec
cmpsl
fwait
lret
push
or
mov
mov
fwait
inc
xor
dec
push
dec
aas
push
ljmp
jno
imul
and
xchg
mov
out
mov
fisubrs
mov
jae
lret
jmp
ret
mov
fmull
jg
data16
mov
out
in
sub
mov
push
divl
sbb
push
add
cmp
in
test
dec
mov
ret
xlat
scas
insb
sarl
push
push
addr16
push
out
add
xor
xchg
mov
push
pop
lock
add
popa
jge
xchg
jbe
pop
fcmovbe
adc
add
jmp
cmp
les
mov
das
inc
fidivl
repz
xchg
stos
stos
fadds
adc
jp
movsl
dec
iret
sbb
inc
icebp
sbb
stc
xchg
out
clc
js
rorb
loop
ret
add
cmp
adcl
int3
mulb
cltd
flds
push
xor
inc
add
push
out
add
or
mov
dec
lock
rorl
cmpsl
inc
mov
and
sub
inc
outsb
push
sub
dec
aas
ret
or
imul
add
cmc
cmpsl
scas
scas
test
adc
repnz
mull
pop
dec
repz
rorl
sub
fmulp
sbb
dec
mov
imul
jnp
test
push
sti
mov
call
out
adc
xorb
add
sbb
jg
insl
das
inc
cwtl
mov
addb
cmpsb
jb
int3
es
mov
ret
out
aad
repz
xor
pop
push
xchg
and
inc
sti
cmp
jbe,pn
adc
nop
int
jo
loopne
fldenv
lds
pop
in
jp
add
sub
fidivl
mov
fstpl
lcall
movsb
push
xchg
lods
jnp
dec
popa
out
xchg
daa
mov
push
aam
sarl
pop
shl
adcl
hlt
gs
or
mov
dec
xchg
out
mov
jo
icebp
sbb
rcrb
dec
pop
test
mov
cmp
inc
jb
mov
dec
scas
shll
push
dec
inc
ficompl
ret
fs
xchg
add
xlat
loope
mov
adc
mov
push
lea
mov
insl
out
sbb
popa
lods
pushf
jae
and
stos
dec
popf
push
cmpsl
inc
jmp
jne
ljmp
out
push
push
dec
inc
flds
test
add
stc
push
jecxz
mov
inc
test
call
xchg
mov
mov
insl
push
call
cmpsl
mov
xlat
in
stos
ret
popf
scas
out
inc
push
sbb
and
push
jb
ljmp
jge
scas
cmp
mov
jne
test
dec
and
rolb
gs
mov
xchg
out
or
sbb
push
sbb
xlat
dec
push
adc
push
lods
clc
iret
ljmp
xor
subb
sub
loopne
add
mov
testl
sub
pop
xor
mov
ss
test
add
and
pop
in
push
dec
sub
lods
and
sbb
lret
pop
adc
nop
in
mov
xlat
std
push
adc
xor
sahf
in
add
push
ds
pop
mov
sar
mov
addb
cmp
and
scas
pop
mov
mov
ljmp
lds
js
pushf
pop
push
pop
int3
pop
push
sti
mov
sbb
sahf
or
push
jl
out
stc
adc
pop
cmp
inc
pop
xor
xchg
popl
out
inc
mov
mov
sub
aaa
add
sub
fisubrl
pop
jg
sbb
jl
pop
inc
push
aad
cmp
xchg
cmp
in
push
sbb
sub
fcomps
pop
sbb
fwait
cmp
mov
cltd
pushf
mov
mov
or
mov
jno
clc
mov
push
or
push
dec
dec
push
jle
mulb
enter
imull
mov
or
arpl
in
int
addr16
mov
sbb
aam
push
in
or
add
test
or
ret
lods
xor
test
js
repz
dec
stos
daa
add
mov
push
movsb
leave
arpl
xor
lock
push
out
pushf
inc
adc
dec
push
movsb
sub
gs
ja
fldl
or
lret
xchg
call
adc
or
xchg
cmc
pop
jb
or
fbstp
movsb
stos
pop
pop
test
mov
sub
push
leave
xor
mov
or
mov
sti
loop
jns
insl
and
mov
jne
outsb
xor
scas
movsb
adc
fucomi
test
stos
lock
jp
scas
faddl
add
mov
shlb
push
xchg
add
push
test
std
cmpsl
fmull
shll
adc
loope
mov
push
dec
into
jns
dec
mov
call
mov
mov
es
add
cmp
test
aaa
les
cmp
pop
clc
pop
repnz
sbb
inc
and
int3
sti
pop
or
andb
mov
scas
push
cmp
mov
adc
imul
or
int
push
out
imul
cs
xchg
jp
ss
and
mov
jge
cli
xor
cmp
pop
out
cmp
jae
jmp
sbb
xchg
sub
bound
psrld
adc
mov
nop
enter
scas
xor
mov
call
xchg
int3
in
ret
movsb
push
out
cltd
ljmp
cld
aad
cld
inc
cmp
cli
fistpl
das
ja
add
subb
cmp
push
insl
in
mov
xchg
jge
std
adc
pop
xchg
popa
xchg
sub
repz
dec
nop
movsl
mov
mov
sahf
mov
out
dec
mov
mov
sahf
add
ljmp
rorb
adc
dec
jns
fs
scas
ja
imul
push
movsl
bound
movsb
jae
inc
int
int3
flds
test
jnp
mov
outsl
mov
out
xchg
arpl
popf
dec
inc
or
in
cmc
push
xchg
repz
push
fwait
inc
nop
or
shrb
pop
add
ljmp
mov
fldt
jae
xor
fsts
jb
sbb
xor
xchg
push
add
and
mov
push
lea
jl
imul
inc
mov
aaa
nop
push
cwtl
stos
out
xor
push
cltd
cmp
jae
and
push
sub
addb
lret
push
cld
int
mov
out
ja
and
cmp
ror
inc
lods
rol
or
mov
sarl
dec
xchg
add
jne
cmc
repnz
insl
pushf
fwait
and
xor
or
and
push
movsl
imul
loop
jb
pop
or
cmp
loope
or
add
mov
dec
lds
lret
push
mov
jb
push
and
inc
lock
dec
dec
repnz
mov
loopne
cmp
xor
loopne
xor
cwtl
push
sub
push
sub
dec
out
xor
jle
mov
inc
xor
xchg
jnp
shll
mov
add
cld
repz
nop
lds
stos
addr16
popa
mov
dec
cwtl
and
andl
fwait
sti
xor
stos
cmp
or
push
add
adc
daa
xchg
push
inc
push
dec
mov
push
sarl
or
push
fwait
jnp
sub
add
test
inc
insb
and
sub
mov
imulb
dec
mov
or
ret
jmp
jle
jle
jnp
int
imul
xchg
je
aaa
aas
lcall
std
sub
stc
out
jmp
imul
sarl
mov
xor
popa
into
test
aas
and
mov
inc
push
cwtl
fnstcw
insl
sub
fs
pusha
test
mov
ds
leave
out
movsb
andb
out
ss
fsubs
jns
arpl
dec
movsl
mov
or
mov
ljmp
inc
push
push
inc
sub
imul
clc
hlt
xor
loope
or
jns
mov
and
push
sub
jo
sbb
ret
stos
sbb
movzbl
clc
add
outsl
into
xchg
xchg
shrb
out
push
insb
or
sbbb
and
cmpsl
jecxz
adc
xor
fisubrl
test
and
cld
push
mov
push
xor
sbb
add
push
push
mov
enter
cmpsb
call
decl
fcoml
push
imul
sub
lds
mov
dec
imul
jo
sbb
jae
dec
sub
mov
inc
mov
jp
repz
mov
repnz
fs
xchg
movsb
or
arpl
push
sahf
mov
mov
ret
mov
clc
out
into
jg
sub
test
cmp
xchg
xchg
add
mov
stos
arpl
aas
add
dec
dec
loop
icebp
xor
sbb
mov
jle
les
ja
lret
test
jle
adc
les
jae
aas
movsl
fsubl
orb
cmpsl
mov
jae
xchg
popa
pop
xchg
iret
fwait
and
out
pushf
popf
dec
and
pusha
sub
inc
repnz
lcall
pop
iret
inc
in
leave
sub
jmp
jne
ja
inc
push
rcrl
xchg
add
add
dec
xor
push
andl
outsb
fistpll
arpl
jl
cmp
daa
cmp
adc
lods
push
inc
add
cli
mov
sbb
int
adc
in
fdiv
mov
imul
mov
into
popa
push
mov
xchg
call
and
mov
cmp
dec
sarl
push
insl
xor
popa
nop
cmp
mov
insb
cmp
inc
or
xchg
sub
jecxz
imul
jo
mov
push
repz
sbb
jne
add
dec
pusha
roll
outsl
and
add
push
xor
fldcw
pop
lods
push
xor
inc
scas
cmc
imul
mov
test
loop
inc
jno
xchg
cmc
mov
adc
cli
rcrl
cli
jmp
aaa
in
nop
fcomps
ret
sub
cwtl
popa
mov
jno
pusha
sbb
push
push
fsubrp
pop
out
inc
cld
cmovs
fwait
rorl
jmp
mov
lret
jno
sbb
into
mov
or
jg
decb
xchg
and
enter
outsb
adc
dec
test
aam
mov
mov
fs
xor
movsb
shrb
enter
mov
and
std
cs
or
inc
ja
ret
pop
and
es
fistl
aad
pop
bound
mov
sbb
cmp
push
mov
mov
repnz
sbb
mov
int3
stos
lea
daa
in
push
xor
mov
shr
xchg
mov
js
add
jmp
sub
sbb
jp
ss
incb
and
scas
into
lahf
cld
xor
shrl
into
inc
lret
lcall
hlt
inc
das
andb
pop
xor
iret
pop
jns
mov
std
or
pop
xchg
or
pushf
outsl
or
enter
lods
dec
and
jl
push
jge
shlb
or
dec
es
mov
icebp
push
in
mov
insb
dec
repz
repz
dec
gs
roll
lahf
sub
test
dec
cwtl
jmp
jo
sbb
mov
add
xchg
mov
mov
in
mov
jae
gs
adc
jmp
jmp
sub
popa
daa
sub
inc
sub
cmp
loopne
jmp
cld
or
or
leave
add
adc
incl
pop
mov
ds
mov
sbbl
stos
xchg
add
js
into
icebp
pop
pop
std
hlt
push
inc
cld
xchg
rorl
in
and
sarb
pop
jae
mov
xor
addr16
mov
movsb
adc
in
jb
push
push
sahf
mov
pop
aad
loopne
dec
adc
pop
inc
cmc
fs
sbb
mov
jns
mov
imul
ficomps
xchg
daa
orb
popa
pusha
sub
pusha
lock
inc
adc
mov
cmp
adc
cltd
pop
rcrl
stc
adc
sbb
sarb
sub
les
pop
xor
outsl
shll
cmpsb
dec
mov
outsb
test
inc
nop
sub
mov
adc
repz
xchg
out
push
imul
xchg
mov
call
lods
fisttps
enter
test
sub
shlb
sbb
pop
es
adcb
leave
mov
push
or
cmp
lret
jne
daa
cwtl
repz
stc
scas
pop
mov
mov
stos
or
aaa
nop
hlt
mov
push
push
mov
sbb
adc
push
cmp
cwtl
pop
imul
dec
inc
and
push
jl
out
sbb
je
xchg
outsl
aaa
sub
jns
arpl
daa
clc
adc
enter
mov
ficomps
mov
dec
scas
or
or
add
jb
xchg
aas
jmp
sbb
adc
fstps
pop
jno
add
add
aas
shrl
fmull
dec
fldenv
jp
sar
xchg
fdivrs
cmpsb
pop
jg
das
test
inc
rclb
or
push
or
pop
push
adcb
mov
mov
xor
and
out
jnp
stos
xchg
pop
xchg
dec
add
pop
sbb
jnp
int
leave
hlt
icebp
sub
icebp
push
loope
cmp
in
scas
mov
mov
mov
jbe
jle
sbb
inc
cwtl
adcb
lea
fcomip
gs
mov
pop
ret
xor
jle
or
and
std
out
pop
ret
push
jbe
test
int
mov
xchg
rorl
jb
dec
mov
int3
lahf
pop
adc
in
nop
popf
and
call
out
addr16
mov
mov
aas
scas
pop
hlt
rorl
sbb
cmp
sub
sbb
xchg
mov
jbe
mov
lds
es
in
inc
jbe
int
add
sbb
xor
cmp
pop
in
xlat
lock
imul
jo
push
clc
push
addr16
mov
rcl
push
out
mov
lcall
cmp
insb
add
adc
sbb
mov
inc
mov
mov
lcall
lock
cwtl
ss
lahf
insb
jbe
xchg
frstor
lods
jl
cmp
cmp
inc
popf
movsl
in
jg
fsubp
mov
push
xor
int
fs
and
iret
push
lahf
loope
jl
gs
pop
movsb
sahf
out
rol
inc
push
inc
push
cmpsl
push
fdivs
xchg
std
or
leave
rcll
lahf
fisubl
dec
aaa
mov
lcall
aam
fbld
push
and
push
imul
lea
ljmp
das
adc
and
outsb
pop
das
lahf
dec
cs
stos
push
cmpsb
ds
and
jb
testb
scas
pop
out
xor
lea
shrl
dec
xchg
les
cmp
loop
mov
ds
cs
sub
push
iret
std
mov
roll
fcomip
aas
iret
es
adc
vpunpcklqdq
cmp
fidivl
mov
pop
push
stos
jne
jmp
cli
into
rcl
aad
and
jnp
icebp
xor
or
andl
fisttpll
or
insb
subl
or
ret
xchg
das
sti
inc
push
pop
imul
aaa
push
jnp
add
js
mov
push
jno
and
jl
xchg
push
inc
push
clc
and
adc
xlat
icebp
insb
bound
pop
cwtl
dec
daa
fstpl
inc
mov
mov
movl
pop
hlt
pushf
xchg
stc
das
sti
gs
icebp
sarl
out
dec
and
call
push
jle
xchg
mov
jmp
mov
aam
cmpsl
cmp
shll
sub
sub
sub
fisttpll
stos
loopne
add
cli
outsb
add
inc
fdivl
lods
add
jecxz
ret
push
pop
es
scas
aam
fisubrs
mov
mov
out
jb
jnp
mov
shrb
xchg
bound
or
add
and
lods
adc
push
add
mov
dec
subb
adc
mov
in
fs
pop
xchg
aad
ds
jno
pop
push
sti
sub
dec
cli
testb
push
mov
sar
push
incb
popa
dec
scas
mov
sbb
je
push
or
das
popf
xchg
ret
lea
and
or
and
stc
mov
xchg
mov
lret
sti
cltd
out
push
mov
mov
pop
dec
fnsave
pop
cmpsl
jno
mov
std
xor
aam
cmp
xor
stc
shr
pop
xchg
xchg
in
cmpsb
in
dec
xchg
shll
lods
hlt
popa
xlat
add
push
std
insb
inc
jle
rol
pop
jg
xchg
rcr
aas
inc
lret
subl
jp
popf
mov
lahf
arpl
gs
add
leave
sarb
das
in
or
into
pop
popf
sbb
sbb
std
sti
xlat
mov
lcall
mov
push
add
or
movsb
lea
push
test
lahf
lods
aad
daa
jmp
push
dec
fsub
pushf
rcll
xor
dec
insl
jg
aam
sub
rcll
dec
and
cmp
pop
lock
fiaddl
inc
dec
das
pop
jl
add
mov
xchg
cld
cmpsb
mov
stc
pop
sarl
addr16
and
nop
nop
aad
addr16
xor
int
clc
fbstp
adc
aam
mov
sbb
notl
inc
mov
mov
call
or
int3
cmp
add
inc
xor
cmc
das
cltd
pusha
sub
jns
sub
mov
setl
mov
outsb
mov
sub
test
outsb
mov
xchg
mov
xlat
mov
rorb
int3
add
lahf
lods
es
cmp
mov
add
cmp
jecxz
pop
pop
ljmp
out
lock
mov
jg
gs
push
mov
in
xor
or
push
dec
ja
and
clc
in
xor
int3
in
add
imul
pop
daa
les
addr16
repnz
std
mov
sub
jecxz
jnp
pop
imul
sahf
lahf
xor
jge
iret
xchg
cmp
add
cmc
lods
fdivrs
sub
inc
inc
and
and
add
mov
xchg
sub
daa
mov
rcrl
mov
adc
push
sub
cltd
xor
lods
sbb
jb
cwtl
hlt
or
and
sbb
xor
or
shlb
mov
pop
adc
sub
pop
es
inc
les
jle
mov
sub
push
out
sub
gs
les
xor
shrb
mov
pop
js
out
repz
inc
mov
rcll
ss
cmp
mov
rcrb
repz
pop
jmp
notl
std
push
cmp
jb
sbb
pop
push
and
push
test
mov
mov
cmp
icebp
sub
test
aaa
mov
or
imul
jecxz
repz
aas
push
movsb
pop
js
jle
or
push
jb
adc
clc
xor
in
imul
jecxz
int3
or
mov
xchg
pop
popa
cmc
outsb
lea
inc
pusha
inc
cmp
mov
adc
in
xchg
ret
addl
rolb
clc
mov
inc
fstp
pop
popa
testl
mov
js
xor
popf
sarb
out
stc
cltd
testl
stos
jecxz
ljmp
jecxz
or
sbbl
jns
sub
jb
in
xor
fistl
jae
pop
jge
orl
xchg
cli
pop
mov
pop
lea
notl
out
push
out
cmp
ret
sub
shlb
mov
pop
jmp
pop
in
mov
adc
push
out
sahf
or
mov
xchg
cwtl
gs
xchg
xchg
mov
sahf
icebp
ret
push
dec
movl
pushf
cmp
xor
add
mov
dec
xor
and
ja
outsb
push
mov
shrb
mov
out
icebp
inc
xchg
int3
pop
add
xchg
fs
pop
fsubrl
adc
or
ds
add
outsb
mov
iret
testl
xorb
cmp
lcall
jg
frstor
fwait
call
aas
and
das
adc
or
repz
repz
sbbl
inc
fs
sbb
dec
add
data16
jge
shll
gs
repnz
test
pusha
inc
and
cmp
mov
aam
gs
push
jmp
out
test
insb
and
dec
or
stos
mov
xchg
and
sarl
sbb
lret
cmp
inc
test
xchg
imul
mov
jmp
xchg
idivb
xchg
add
cs
xor
mov
sbb
dec
or
pop
xor
mov
js
lds
xchg
lahf
pop
dec
adc
dec
push
out
inc
dec
cmp
jo
lods
or
jo
xchg
push
aas
fstl
stos
push
leave
das
sub
sbb
mov
aas
cwtl
hlt
sub
je
sti
imul
mov
mov
jno
pop
movsb
dec
xchg
aaa
inc
ds
dec
sub
mov
xchg
cmp
scas
and
mov
add
mov
cld
xor
pop
movsb
enter
call
jmp
adc
inc
pop
fcomp
adc
xor
and
xor
sbb
jno
dec
and
add
mov
popa
scas
sbb
sub
dec
call
adcb
test
sub
inc
aas
js
jns
das
push
into
or
or
mov
cld
divb
mov
in
mov
dec
in
cld
and
dec
xchg
and
sbb
lds
cs
pop
call
dec
bnd
ljmp
jmp
pop
js
sub
add
xchg
es
cwtl
cmp
cmp
push
dec
jecxz
xor
push
rcl
in
mov
xor
dec
aam
shlb
pop
ret
push
lds
jb
dec
out
incl
fcomi
imul
sbb
dec
out
fcmovnbe
push
xlat
int
pop
or
imul
pusha
sbb
pop
out
lods
or
popf
filds
inc
lock
push
movq
out
sahf
xchg
lds
xchg
test
dec
nop
lods
adc
push
fildll
jecxz
xor
outsl
adc
xchg
jl
je
in
shrb
push
push
test
orl
insl
leave
pop
cwtl
push
cwtl
mov
xorl
mov
pop
mov
ret
mov
loope
into
sub
rcl
shlb
pop
add
mov
inc
cwtl
pop
sbb
or
fldt
fstpt
mov
inc
aaa
mov
sub
testb
stos
pop
imul
or
lcall
or
outsl
in
push
lret
pop
lcall
ss
or
sbb
lret
into
xchg
sti
testl
mov
shrb
pop
jns
xor
out
adc
sub
shll
mov
in
scas
in
jns
mov
ficompl
adc
inc
pop
cmp
add
or
xchg
xor
pop
call
in
inc
mov
add
lret
aad
outsb
inc
loop
pop
arpl
pop
icebp
lods
mov
pop
and
sub
movl
inc
xlat
mov
pop
add
popa
stos
pop
or
sahf
mov
arpl
dec
or
sub
addr16
fscale
test
add
sti
lock
pop
mov
push
jno
pop
pop
mov
fsubr
out
sbb
mov
hlt
repnz
jae
leave
mov
fcmovbe
js
dec
bound
xchg
sub
lahf
jmp
out
aaa
insl
testl
pusha
iret
shrl
inc
pushf
sub
inc
leave
or
arpl
mov
stos
cs
mov
mov
push
loope
stos
outsl
mov
test
sar
aad
cmpsl
jecxz
push
and
fstl
push
mov
test
bound
bnd
mov
push
lds
outsl
lods
lods
mov
nop
iret
adc
push
inc
iret
cmp
int3
test
movsl
fldl
sbb
aaa
inc
jb
adc
scas
repz
sbb
testb
push
dec
push
dec
cli
mov
lods
xchg
popa
lock
push
repnz
sbb
imul
xchg
mov
sbb
fildll
push
jmp
pop
mov
adc
int3
and
add
sbb
dec
and
orb
daa
js
xchg
mov
cmp
movsb
cmp
cwtl
into
dec
jecxz
pusha
loope
xchg
cmp
jg
mov
fstl
pop
cmpsl
cmp
jecxz
jae
leave
xchg
adc
inc
leave
inc
daa
loop
pop
scas
push
pushf
lods
fsubl
rolb
xor
cmp
sub
pop
push
or
fsubl
mov
les
test
arpl
iret
jecxz
js
call
lds
shrl
pop
js
cmp
repnz
fldenv
insb
scas
jns
mov
dec
sti
nopl
andb
movsb
cmpsl
jne
push
xor
push
call
test
lods
xchg
fs
shl
mov
fimuls
fwait
sbbb
mov
in
cmp
loope
test
idivl
shlb
xchg
push
mov
fidivl
ljmp
mov
xlat
push
into
adc
fists
xor
fsub
cmpb
pop
jnp
jp
fldenv
nop
jne
out
cmp
lods
mov
dec
sbb
mov
sbb
incb
aas
push
cmp
fnsave
dec
sub
sub
fidivl
mov
jbe
or
aam
popf
fldcw
popa
push
stc
shlb
inc
cmp
loopne
jg
shl
ds
flds
mov
call
lods
sbb
mov
insb
aas
xor
outsl
or
andb
stos
xchg
jmp
xchg
inc
cmc
in
lea
aas
lods
jg
jl
adc
dec
pop
fdivs
jno
mov
dec
pushf
mov
addr16
pop
inc
add
xchg
pop
ret
dec
mov
dec
cmpl
jl
aad
sbb
jno
adc
mov
jmp
cmp
cmc
loop
mov
shll
imul
pop
scas
push
and
xchg
pushf
adc
push
fldt
sub
xor
sub
leave
lods
sbb
loope
and
pop
jno
cmpsl
sbb
or
stos
fcmovne
cmpsl
into
push
xor
fisttpll
mov
xlat
cwtl
stc
mov
rcll
data16
mov
fdiv
jge
add
and
xor
or
jge
mov
jb
xor
inc
sub
push
sub
lret
lret
adc
mov
mov
lods
loopne
jp
and
repz
in
mov
and
cltd
cwtl
loopne
dec
dec
mov
lahf
data16
mov
repnz
jnp
fwait
push
pusha
in
lods
sub
or
mov
or
dec
mov
lods
or
dec
leave
inc
mov
xchg
xor
inc
jne
mov
mov
loopne
insl
inc
jmp
ljmp
subb
push
loope
inc
adc
inc
cltd
mov
push
sbb
dec
andb
sbb
icebp
and
test
xor
xlat
fadd
jo
jo
or
push
xlat
pop
call
movsl
mov
push
dec
cmp
mov
pop
xlat
shrb
push
add
imul
jnp
rorb
cltd
adc
xchg
or
rolb
xor
and
xchg
call
pop
sarl
bound
xor
fiadds
dec
add
add
enter
mov
xorl
mov
sbbb
xchg
mov
loope
push
inc
push
shlb
or
mov
push
push
cmp
adc
imul
test
xchg
fwait
mov
add
repnz
adc
mov
or
ficompl
insb
add
in
sub
mov
add
fmulp
adc
or
outsb
cltd
fwait
jp
lock
xor
pop
jnp
or
xchg
shll
call
mov
add
or
sub
push
pop
mov
or
jbe
mov
shll
cwtl
inc
mov
lock
outsl
shrb
jae
mov
dec
fmull
adc
push
mov
insl
sub
lds
push
push
ljmp
loope
pushf
push
das
into
jae
inc
inc
and
iret
fisubs
pop
daa
out
cld
xor
inc
xchg
popf
ss
ja
fcmove
dec
inc
dec
mov
adc
mov
daa
xchg
push
aam
or
push
lret
sbb
pop
dec
mov
xor
ret
mov
and
xabort
lock
loope
loopne
push
fldenv
xchg
les
aas
sub
dec
add
clc
mov
push
xor
jl
movsb
mov
cld
loop
sub
rcl
add
cmp
insl
sarb
push
push
test
adc
stos
les
inc
push
cmp
push
push
adc
test
das
das
inc
cs
test
arpl
data16
loopne
fidivrs
dec
push
cwtl
xor
mov
mov
enter
jne
ret
lahf
add
push
fstps
jns
or
mov
sub
pop
jg
mov
pop
push
inc
xchg
or
and
inc
shrl
shll
ret
push
push
or
stc
stc
inc
add
popa
cmp
lcall
inc
in
mov
xor
mov
mov
iret
ret
or
cmp
fistpl
ljmp
les
ret
repnz
xchg
cld
arpl
dec
mov
pop
sub
dec
mov
lret
fs
hlt
hlt
fsubrl
mov
cltd
jmp
cmp
pop
inc
stc
sub
push
push
xchg
stos
jb
mov
xor
jne
add
popa
mov
jae
sarb
aam
rcll
mov
mov
cmpsb
mov
push
jg
xor
sub
jo
xor
fs
sti
mov
xor
pop
dec
jb
adc
mov
mov
dec
mov
ja
andl
jmp
stos
pop
jg
push
sbb
aad
sarb
out
and
ret
sbb
arpl
lods
adc
fidivl
and
scas
movsb
pop
orb
xchg
inc
mov
mov
test
add
inc
pushf
inc
pop
dec
popa
fnstenv
inc
push
push
add
das
or
add
aam
push
and
pop
test
xor
ret
call
sbb
lret
loope
cmpsl
lods
mov
lods
jbe
and
jo
xlat
cmp
sbb
inc
push
mov
and
jo
mov
std
movsl
xchg
jmp
adc
in
in
fwait
push
and
or
mov
aaa
adc
jp
xor
filds
cmpsl
sbb
push
enter
jne
mov
dec
fpatan
outsl
loopne
in
pop
lods
mov
repnz
push
sbb
and
push
test
push
inc
sbbb
jle
adc
xor
jo
cs
mov
fisubrs
cmpsb
cmpsb
mov
cmp
inc
sbb
mov
dec
inc
je
mov
cwtl
mov
mov
xor
cmc
xor
xchg
icebp
jl
cld
mov
mov
out
add
enter
jbe
cs
pop
data16
shll
loopne
mov
pusha
add
sbb
push
lret
aaa
cld
fdivrs
inc
aad
cmp
jmp
out
inc
into
into
fs
lret
jmp
sbb
fdivs
cmovnp
adc
in
dec
jecxz
jg
pop
push
mov
pushf
or
push
pop
loop
clc
and
inc
mov
or
jle
mov
sbb
mov
mov
sbb
nop
out
inc
lock
in
je
cmc
out
mov
cmpsl
bound
arpl
adc
add
stos
adcl
sbb
pop
jae
fld
stos
sbb
jmp
adc
out
int
aad
mov
mov
cld
mov
mov
or
mov
aam
xor
mov
fsts
add
jns
dec
ljmp
pusha
jg
jle
lret
mov
add
mov
mov
mov
dec
mov
cwtl
mov
jp
scas
mov
xchg
cmc
and
enter
push
add
loop
out
aas
add
insb
sub
xchg
dec
cmp
mov
inc
xchg
sub
clc
callw
fiadds
out
rcr
adc
jp
call
out
dec
inc
test
movsb
lock
jg
faddp
sbb
xchg
fs
push
and
shll
fistl
stos
mov
sub
dec
xchg
and
inc
mov
ret
xchg
dec
lret
mov
xor
shll
xchg
aam
nop
sarl
mov
dec
cmp
pop
into
cwtl
mov
mov
xchg
enter
in
mov
adc
shll
dec
adc
or
aad
mov
inc
decb
and
dec
out
xchg
mov
push
inc
insb
outsl
cld
mov
les
stos
push
lahf
repz
sarb
out
cwtl
pop
sub
cmp
dec
pop
lcall
and
sub
orb
xchg
add
repz
push
jle
movsl
je
lods
int
subl
sub
jno
es
popf
add
ret
shrb
fneni(8087
and
pop
in
push
mov
sub
mov
mov
and
lods
lds
jnp
stos
add
sbbb
sub
mov
jnp
pop
lods
sbbb
pushf
jno
movsl
push
lods
xor
scas
sarl
inc
pop
push
aas
rorb
out
xchg
or
cli
sub
sti
push
inc
sub
push
sub
es
jp
sbb
js
fadd
inc
pushf
stc
out
addl
push
bound
add
push
ljmp
mov
xor
and
outsl
or
rcll
fwait
fwait
mov
add
jb
xchg
out
out
icebp
inc
and
js
mov
inc
sub
es
xchg
push
adc
insb
dec
adc
lds
stos
xchg
js
mov
pop
push
adc
xchg
cltd
push
jge
int
push
inc
call
add
pop
xchg
mov
lahf
dec
nop
sub
std
and
arpl
mov
jns
shlb
cld
in
push
in
dec
lock
sbb
pop
into
add
outsl
repz
jb
inc
jae
repnz
adc
and
and
push
test
ret
push
or
aaa
in
add
std
inc
cmp
mov
pop
jb
xor
verr
int3
aaa
lds
sub
iret
cli
nop
ss
insl
mov
mov
ficoms
scas
mov
mov
dec
lret
arpl
mov
stos
xor
and
outsb
ja
mov
jmp
fndisi(8087
movsl
adc
fdecstp
cmp
scas
sti
sarl
mov
jmp
cli
into
cmp
or
mov
dec
inc
sbb
iret
mov
push
pop
mov
verw
aaa
ret
gs
pop
and
loope
push
sbb
sti
fcmovu
rorb
into
das
je
jno
jge
jb
jl
pop
push
inc
mov
adc
or
dec
ret
loopne
xor
mov
dec
pop
nop
test
imul
rcrb
jb
test
or
imul
jbe
and
adc
inc
add
rcrb
daa
lret
ret
cmp
out
sub
gs
sbb
cwtl
fcmovnb
aam
cmp
gs
rclb
dec
scas
sbb
leave
push
cmp
fcoml
jmp
pop
and
in
loopne
shrb
jle
cmp
mov
cmpsb
and
adcb
aaa
fidivrl
nop
divb
dec
sbb
int
shrb
ja
xchg
inc
scas
arpl
push
in
popf
addr16
mov
fnsave
add
fld
lds
pop
hlt
lret
sub
adc
xchg
movsl
adc
jle
mov
fmuls
scas
call
pop
jg
rclb
js,pt
xor
std
dec
fnsave
xchg
or
mov
sbb
mov
in
xor
and
rcl
and
outsb
sub
popa
clc
dec
pop
pop
mov
and
popa
jnp
xor
iret
and
in
jo
inc
inc
fcmovnb
mov
pop
pop
inc
fisttpll
aam
sbb
les
leave
cmc
add
mov
negb
subl
ficoms
xchg
shrl
data16
adcb
cwtl
clc
mov
gs
std
jbe
xor
and
mov
movsl
mov
dec
outsl
mov
sub
imul
mov
xchg
xchg
aas
mov
xchg
push
and
xor
cli
stc
mov
cmp
adc
jg
or
lods
push
mov
jno
fistps
or
pop
push
pop
xor
in
outsb
and
xchg
stos
sbb
xchg
sbb
adc
sbb
push
std
jbe
js
pop
xchg
dec
xor
sbb
dec
cmpsl
jno
jmp
loopne
fmull
dec
and
mov
adc
mov
repnz
adc
bound
stos
jo
test
xorl
dec
or
mov
popl
out
or
dec
pop
dec
aas
shr
ret
and
imul
xchg
sbb
rol
xorb
xchg
and
sti
scas
pop
xlat
int3
xchg
jl
sbb
pusha
ss
pop
fbstp
lock
push
out
xchg
imul
int
mov
fdivrs
jb
mov
jae
mov
xor
inc
mov
mov
inc
int
mov
push
nop
jge
daa
movsl
jns
jnp
int
push
pop
sub
arpl
mov
aas
shll
sbb
pop
mov
inc
mov
adc
and
ret
and
dec
pusha
dec
icebp
add
sub
call
aad
loopne
je
adc
js
xor
nop
imul
adc
testl
xor
aad
cmpsb
insb
imul
insb
jecxz
faddl
mov
movsb
jb
mul
mov
xchg
or
ret
sti
cmp
fmulp
mov
sub
daa
cld
sub
push
fnstcw
push
mov
les
lahf
roll
fwait
pop
test
pusha
cmp
sub
int3
divl
hlt
jecxz
test
scas
int
mov
and
movl
mov
push
jecxz
lret
daa
inc
jg
lock
push
test
xchg
inc
int
pop
pop
push
add
les
and
cmpsl
pushf
cmpsb
push
mov
fidivs
mov
or
jno,pn
push
dec
or
es
add
loop
leave
test
inc
and
xlat
call
cmp
dec
into
icebp
jne
mov
ds
push
dec
nop
pop
jp
cltd
out
jnp
sub
test
lock
mov
sbb
xor
push
jnp
mov
fldcw
in
cmp
add
jge
lcall
jb
and
and
stos
xor
das
popf
xchg
push
cmpsb
xor
cmp
loope
add
hlt
call
pop
test
mov
jbe
add
adc
dec
lret
xchg
fstp
std
push
aaa
xchg
mov
dec
lods
mov
popf
idivb
cwtl
mov
iret
jle
mov
sbb
push
insb
push
js
rolb
jo
out
inc
std
inc
mov
pop
std
aas
jg
lahf
mov
pop
into
lods
inc
mov
aas
out
mov
mov
cld
mov
sub
arpl
cmp
mov
push
pop
mov
sub
cmp
not
outsb
repz
jbe
inc
imul
addr16
sahf
mov
mov
imul
inc
mov
pusha
mov
sahf
ret
icebp
or
pushf
xchg
xor
popa
cltd
mov
nop
pop
stos
adc
cmp
stc
mov
int3
lret
stc
ret
xchg
mov
call
pop
sbb
les
out
sub
out
fbld
push
call
push
scas
aad
mov
cmpsb
ret
inc
popa
dec
add
push
int3
popa
ja
jne
cltd
and
xchg
cwtl
jno
add
jl
adc
push
xor
idiv
ret
push
push
ret
mov
push
pushf
push
inc
lret
scas
negl
in
jnp
dec
xchg
jae
fcompl
fidivs
sub
dec
pop
inc
sub
push
xchg
test
mov
mov
lods
inc
pop
shll
and
jmp
jae
adc
repz
xchg
add
cmc
in
loop
add
ja
mov
dec
sub
sbb
push
lock
xchg
adc
sbb
stc
sti
cmp
ss
mov
sub
and
incb
dec
insb
or
arpl
dec
gs
pop
outsl
push
mov
mov
sbb
adc
cli
ret
push
mov
xchg
sub
pusha
in
les
gs
mov
mov
pop
loop
imul
shll
dec
push
mov
inc
xchg
pop
inc
mov
mov
popf
aad
inc
ljmp
mov
subb
inc
sub
pop
inc
adc
push
insb
add
lret
adcb
dec
mov
xchg
jmp
pop
je
pop
xchg
and
test
pop
aam
cmp
mov
mov
sub
sub
je
push
repz
pop
push
jne
dec
xchg
mov
jp
rcr
fst
dec
xor
xchg
or
add
xor
lret
cld
add
mov
add
xchg
inc
jns
cli
inc
aad
cwtl
sarb
movl
add
pushl
aaa
cmc
stos
arpl
jne
or
hlt
cmp
sbb
xchg
sbb
mov
jns
leave
cmpsl
dec
push
adc
clc
push
insb
nop
inc
leave
repz
cmpsl
popf
in
adc
stos
leave
jle
and
mov
mov
jbe
jg
mov
popa
int3
repnz
cmpsl
or
cmpsl
mov
jecxz
push
or
mov
or
aad
addr16
mov
movsl
push
fs
jo
dec
xchg
pop
pop
shr
in
inc
inc
jl
add
js
gs
test
adc
push
test
add
inc
jle
rolb
or
mov
lods
repz
pusha
inc
jbe
mov
and
adc
lcall
pop
jmp
jmp
cli
dec
push
inc
js
mov
imul
cwtl
pusha
out
mov
cmp
jno
push
jo
out
mov
fucom
mov
jecxz
bound
jp
jl
repnz
xchg
fnstcw
sub
lahf
stc
rcrb
test
out
mov
movsb
and
jmp
mov
jmp
xor
pop
xor
stc
mov
sti
cmp
fsubl
andl
addl
lret
mov
mov
dec
pop
dec
and
hlt
cmpsl
mov
dec
xor
fs
cmp
ret
stos
inc
and
adc
iret
js
fstpl
cmpsl
dec
mov
jmp
outsl
mov
push
pop
jnp
movsl
adc
sbbl
ret
nop
ss
sub
repnz
adc
inc
inc
xchg
sub
cmp
push
jnp
pop
jg
inc
add
sub
mov
add
aas
movsl
shlb
movb
jnp
cmp
ja
dec
add
jns
fcompl
cmpsl
add
sbb
testl
lcall
testb
cltd
inc
stos
or
push
jae
sbb
sub
adc
cmc
pop
mov
rcll
das
or
cmpsl
icebp
lds
mov
mov
fbld
dec
shlb
loop
insl
push
sahf
adc
push
fbld
jp
jb
mov
cmpsb
shll
in
fwait
push
test
cmp
cmp
cmc
shll
test
aaa
jg
insb
xor
push
push
mov
lds
icebp
mov
cmp
repnz
scas
or
int
rcll
pop
rcll
shrl
push
stos
jno
inc
sbb
fimuls
xchg
lds
pop
cmp
test
mov
inc
aad
xchg
pushf
gs
sbb
add
jp
rcrl
dec
outsl
mov
or
frstor
mov
mov
aas
push
loope
fsts
mov
out
push
mov
std
jle
mov
xchg
xchg
push
insl
sti
pop
outsl
dec
sarl
inc
int3
pop
lods
push
pop
test
or
jg
add
fldcw
pop
repz
shrl
add
sub
cmpsl
xchg
inc
fs
mov
outsb
fiadds
mov
test
repnz
mov
and
xchg
or
out
sub
jg
or
and
dec
jle
inc
insl
movsb
loopne
cltd
jle
pushf
cmp
fwait
test
sub
outsl
adc
jb
adc
dec
inc
popf
mov
aas
and
and
lcall
inc
cmp
mov
jne
push
inc
outsl
mov
hlt
cli
test
pop
add
cmc
lods
push
cmp
xor
movswl
rcrl
cmp
push
add
loope
shl
push
mov
dec
mov
jp
out
mov
sbb
jnp
jg
lret
flds
add
lret
outsl
push
fsubl
fildl
or
ljmp
mov
jle
movsl
fs
imul
mov
test
jg
jns
pop
xchg
and
call
mov
out
lds
stos
sbb
icebp
push
test
aas
cmp
rcrb
cmp
lds
mov
pusha
xor
inc
scas
xor
fidivs
add
or
push
xchg
stos
jne
pop
aaa
xor
cmp
pusha
dec
sub
cmp
xchg
mov
cmp
out
push
hlt
push
clc
fldl
pop
data16
mov
roll
push
lea
int
roll
lea
rorl
adc
cmp
popf
and
add
push
or
adc
in
sbb
inc
push
adc
cmpsl
aam
sub
ret
xchg
xchg
dec
inc
aam
jg
fnstenv
xchg
std
lock
cmc
push
mov
rorl
mov
rcl
mov
std
pop
ss
jae
xor
sub
outsl
mov
rcll
xor
outsb
mov
scas
push
fnstenv
sub
fistpll
mov
or
pop
fcmovne
cs
fwait
mov
gs
sbb
pop
ds
mov
inc
test
shlb
jne
lahf
inc
xchg
scas
pushl
xchg
dec
mov
dec
nop
xchg
rcr
mov
xchg
les
push
add
fs
inc
mov
and
stos
pop
fmull
pop
sub
push
inc
repnz
add
sub
mov
inc
call
pop
mov
mov
sbb
adc
mov
xchg
mov
mov
or
push
inc
int
in
push
xlat
push
ret
popf
fdivl
in
adc
xor
sbb
stos
inc
cmp
or
scas
xor
daa
mov
jns
insl
xchg
push
mov
ret
cmp
add
mov
je
aas
out
notl
movsb
xor
sub
insb
inc
pusha
jno
jecxz
mov
test
adcl
testl
sub
out
in
dec
fpatan
lret
xchg
push
sub
mov
pop
lahf
jecxz
sbb
jmp
push
xchg
push
cmc
mov
and
outsb
out
xchg
movl
lock
sbb
out
and
xchg
fmuls
int
enter
in
lea
imul
pushf
outsb
sbb
cmp
dec
ja
in
add
jle
fmul
stos
addr16
lcall
out
pop
push
rolb
lods
dec
dec
popf
es
mov
add
lcall
scas
mov
inc
mull
xchg
add
icebp
cmc
dec
xor
mov
in
outsb
dec
and
test
out
mov
sahf
jl
xchg
outsl
push
leave
push
or
test
ja
dec
xor
out
ret
js
xchg
xchg
bound
pop
inc
adc
pop
pop
push
jb
add
jecxz
fcomps
in
dec
cltd
push
sub
bound
es
mov
mov
xor
aaa
sub
push
in
and
pop
jne
sbb
fcomps
push
faddl
mov
repnz
imul
insb
aad
mov
inc
mov
test
mov
je
and
sti
sbb
adc
cmpsl
aas
dec
leave
and
outsb
insl
push
enter
cmpsl
mov
sub
testb
stc
xor
jg
movsl
imul
bnd
iret
out
test
mov
push
lock
jbe
and
setno
fimuls
push
pusha
popf
shlb
dec
mov
sbb
mov
fwait
xchg
lea
aas
cmp
sub
lret
cmp
sahf
push
adc
pusha
ljmp
adc
mov
mov
mov
or
stos
mov
and
pop
addl
lea
movsl
orb
es
int
push
lock
scas
test
mov
pop
xchg
aaa
sub
fs
int3
mov
or
jns
pop
insb
fwait
mov
ljmp
sbb
idiv
xor
test
dec
leave
lahf
outsl
pop
jnp
icebp
cmp
sbb
pand
int
jne
fdivl
hlt
add
int3
inc
or
push
ret
rcll
sbbb
mov
cmpsl
mov
push
and
cmpsl
xchg
xchg
test
shrb
cwtl
fcmove
mov
pop
xor
mov
orb
inc
gs
int3
mov
pop
jp
adc
lds
das
movsb
fs
sahf
push
jle
out
repnz
out
jmp
cli
xchg
jnp
jbe
cmc
cmp
popa
xor
int
add
fnstsw
xor
pop
ljmp
test
fstl
hlt
pop
std
jp
hlt
pop
cld
jg
dec
jmp
mov
push
lahf
sbb
mov
out
test
add
cmpsb
and
or
adc
daa
xchg
outsb
icebp
xchg
add
or
mov
dec
mov
shrl
dec
mov
dec
mov
hlt
jp
repnz
ljmp
ss
dec
addr16
lahf
call
loope
ljmp
aam
push
lods
repnz
jl
pushf
in
int
and
pop
xchg
or
cmc
xor
mov
mov
andb
and
in
cmpsb
inc
sbb
sbb
dec
xlat
sub
add
adc
sub
mov
mov
sbb
lea
cmp
add
outsl
out
jns
out
xlat
outsl
add
stc
sar
inc
es
jne
dec
sbb
jg
les
lea
test
add
ret
jno
stos
mov
mov
jo
aad
cwtl
call
and
sbb
in
sbb
jbe
ljmp
bnd
imul
lret
add
leave
push
xchg
and
mov
mov
pop
in
or
xchg
cmp
dec
popa
ds
inc
add
sbbl
jae
lcall
dec
subl
mov
je
add
push
insl
pop
ss
cmpsl
scas
xor
les
push
out
mov
and
lods
je
movl
int
mov
das
nop
jge
pushf
iret
lea
dec
fbld
iret
ror
dec
dec
jae
cmp
jp
int
cmp
lcall
xchg
mov
bound
ljmp
add
sbb
pop
cltd
pop
dec
stos
daa
push
sbb
test
sub
out
bound
fstpt
pusha
arpl
mov
mov
faddl
sti
mov
sbb
and
mov
enter
int
nop
sub
and
sbb
pusha
mov
add
or
in
leave
daa
cwtl
xchg
out
ret
daa
insb
inc
mov
incl
cmp
std
pop
repnz
push
xchg
scas
mov
lds
sub
bound
adc
xchg
lcall
pop
mov
xor
pop
sarl
cmp
xchg
ficoms
sub
decl
add
add
stc
out
push
mov
mov
shlb
sahf
pusha
imull
jg
xor
pushf
mov
movsb
bound
data16
xor
enter
xor
lahf
add
push
popf
movsl
rcll
add
dec
fadd
sbb
mov
jb
imul
cmp
add
sbb
movsb
jecxz
ret
in
je
fcompl
outsl
andl
aam
hlt
insb
adc
out
or
cmp
imul
push
sarl
sbb
mov
inc
dec
out
cmp
push
in
aaa
pop
lods
scas
sbb
out
test
sbb
dec
mov
out
gs
mov
mov
pop
daa
mov
call
mov
pop
test
popa
inc
inc
add
mov
or
push
cmpsb
xorl
jae
jge
xchg
mov
mov
sub
xor
loopne
cmc
call
mov
inc
aas
xor
dec
ja
ds
aas
test
pop
ret
mov
push
popa
out
jne
iret
sub
mov
repz
stos
js
test
fwait
push
jecxz
stos
inc
imul
push
dec
sub
lret
inc
mov
dec
jb
jae
add
inc
lea
xchg
loop
or
lret
in
das
mov
mov
xchg
add
ljmp
pop
insb
dec
sub
inc
loopne
aas
mov
push
adcl
mov
je
cltd
mov
aam
sub
cmp
mov
inc
ret
jge
in
push
xor
popf
sub
arpl
fiadds
int3
dec
xlat
adc
xchg
lds
add
push
xchg
dec
push
in
pushf
cmp
int
push
mov
ffreep
cs
dec
ficoms
fldt
sub
shrl
mov
lods
adc
inc
stos
mov
fbld
push
add
testl
or
xchg
in
cwtl
or
inc
ficompl
out
pop
fnstcw
out
hlt
fidivl
xchg
xor
mov
std
push
ljmp
jb
xchg
int3
jbe
and
cmp
fiadds
dec
mov
ljmp
lea
cmp
cmp
sub
pop
push
or
jnp
add
cmpsl
out
pop
ret
test
mov
jle
add
testl
mov
icebp
mov
push
neg
adc
push
push
sub
xor
fwait
add
test
or
fists
xor
sub
jecxz
ror
mov
or
popa
pop
lods
jle
pop
cmpl
daa
jbe
add
mov
pop
xchg
cs
sub
js
and
sub
push
insb
or
shll
pop
add
dec
xchg
imul
fnsave
jb
pop
xchg
push
test
sahf
xor
push
loopne
pause
xchg
scas
mov
jno
pop
push
inc
adc
inc
aad
dec
and
jno
push
push
clc
adc
bound
outsl
pop
adc
mov
sub
xor
jns
push
scas
sub
nop
jb
dec
adc
mov
sbb
das
push
pop
xchg
int
cwtl
xchg
sbb
sbb
adc
sbb
pop
ret
cmpsb
outsb
dec
iret
repnz
repnz
movsb
test
push
fidivl
and
fstl
lods
test
shl
imul
lcall
xchg
test
pop
or
pushw
scas
xchg
mov
push
xor
mov
in
ds
cmp
push
dec
leave
mov
jecxz
push
ljmp
lret
out
xchg
testl
stos
sti
clc
aad
imul
pop
mov
stc
ret
leave
enter
mov
add
pop
mov
sub
mov
push
adc
ljmp
inc
sbb
movsl
sahf
aaa
loopne
scas
xchg
cmp
fbstp
mov
adc
cltd
out
lcall
js
adc
popf
insl
popa
sbb
rcr
xchg
pop
gs
les
out
lahf
mov
mov
loop
lret
adc
aad
push
jl
and
mov
sbb
sub
dec
in
inc
cmp
call
inc
cs
dec
jmp
push
inc
iret
shll
adc
mov
scas
int
xor
sarl
cmpsl
jns
ret
cmpsb
pop
mov
dec
push
mov
jge
es
fdiv
sub
jmp
pusha
dec
lcall
rclb
adc
dec
jb
int
pop
and
cmpsl
insl
lds
setp
in
divb
mov
shrb
mov
sub
push
mov
inc
icebp
addl
std
popf
bound
pop
adc
mov
jo
outsl
lds
imul
sbb
sub
out
arpl
adc
pop
mov
mov
sti
push
push
lods
push
push
or
sub
or
or
jp
sbb
mov
sub
into
sbb
cmp
mov
fidivs
dec
orl
mov
pop
jbe
add
pop
fs
into
imulb
adc
sub
inc
add
mov
call
scas
xor
lret
pop
fistps
aas
xor
xchg
xchg
cmp
idivl
jo
adc
add
icebp
jge
lret
dec
mov
arpl
leave
mov
popf
push
mov
cwtl
mov
mov
movsb
dec
out
nop
and
sbb
add
jb
nop
pushf
jle
fldl
mov
imul
mov
push
dec
jbe
jbe
mov
and
imul
mov
int
jb
mov
cltd
scas
repnz
sbb
or
pop
ret
and
push
test
push
xor
enter
scas
fdivs
in
ficompl
mov
sbb
jl
push
mov
arpl
outsb
fcoms
push
push
push
xchg
push
ret
xlat
jno
xchg
inc
mov
or
add
mov
adc
adc
mov
in
cmp
cmp
xor
cmp
mov
call
xor
test
push
aad
add
loopne
cmpsl
nop
xchg
adc
incl
mov
inc
push
mov
and
pusha
mov
jae
imul
test
jbe
clc
shll
stos
loope
sub
or
int
mov
mov
jnp
stos
sbb
cltd
pop
scas
lret
in
movsl
in
cmc
push
sub
rorb
out
orl
mov
inc
adc
dec
adc
iret
add
pop
push
lret
ds
push
dec
and
sub
push
sti
push
or
aaa
add
xchg
jge
rorb
neg
jbe
pushl
inc
lods
xor
push
insl
or
or
imul
mov
aam
lock
and
outsl
cmp
or
cwtl
cmp
test
movsl
cwtl
nop
sub
cmp
pop
dec
pop
mov
ds
and
sbb
mov
or
pop
dec
orl
jbe
pusha
mov
jmp
fcomi
fldcw
sbb
hlt
enter
imul
clc
enter
insb
sahf
push
sub
cmc
xorb
jb
jns
outsl
sbb
jae
test
repz
aam
pop
setl
lahf
cmp
enter
mov
fsubs
scas
xchg
xchg
shrl
dec
push
shll
cwtl
jmp
pop
icebp
mov
loope
jne
jno
sbb
sub
mov
sbb
rorl
sbb
jnp
pop
jmp
dec
cmc
sbb
cmpsb
loop
push
sahf
push
hlt
push
out
cli
or
xchg
aam
mov
mov
cld
sub
imul
std
xchg
xchg
cmp
test
and
push
inc
sbb
stos
inc
xor
cmp
mov
cmc
sahf
imul
mov
or
xor
cmp
sbb
sub
pushf
mov
push
das
cltd
cmc
loope
jp
test
mov
int3
push
popa
mov
adc
inc
icebp
sub
lret
xchg
lds
sarb
sub
mov
int3
dec
daa
jne
xor
jl
out
stos
mov
or
add
and
jecxz
sbb
into
loopne
faddl
fcomp
aas
push
adc
shll
pop
enter
pop
mov
fs
add
loope
xor
or
sub
call
movsb
out
xor
addr16
or
push
and
sub
adc
xor
mov
shlb
cmpsl
in
inc
xor
adc
stos
jecxz
push
lods
loop
sub
xchg
jecxz
scas
repz
adc
jecxz
fwait
lods
jbe
fcoml
fwait
enter
sahf
and
sti
roll
movsl
mov
xor
push
pop
jp
adc
pop
pusha
push
lods
push
and
loopne
popa
push
xchg
fisubrl
xor
push
je
mov
push
mov
mov
bound
mov
lret
sub
jecxz
jecxz
jo
loopne
push
je
pop
scas
es
push
cmp
out
inc
mov
or
loope
inc
sub
mov
loop
dec
imul
repnz
ss
loopne
es
aas
and
adc
or
adc
test
cmc
mov
loop
xchg
xchg
push
movsb
pop
cld
imul
pop
and
push
push
insl
push
xchg
dec
cli
jo
gs
pop
lcall
mov
gs
xchg
stos
rorl
push
fmull
cmc
jo
test
pop
movsb
fisttps
xorb
test
out
xchg
inc
push
dec
and
mov
adc
add
cld
daa
mov
dec
xor
scas
and
test
mov
outsb
mov
push
sub
pop
and
lcall
pop
add
push
rorb
int
xor
repnz
mov
divb
or
jno
inc
scas
les
xchg
fnsave
clc
mov
inc
dec
jp
dec
cld
mov
sub
lea
fidivl
scas
sbb
fs
mov
inc
mov
add
xchg
xor
add
lret
adc
divb
in
or
js
int
or
cmpl
bound
stc
pusha
cmp
out
test
pop
ret
test
dec
cmpsl
sti
fdivs
mov
lea
mov
xchg
pop
pop
sbb
ret
rclb
pop
aam
adc
out
mov
sahf
or
shll
popa
test
lret
or
and
dec
pop
std
leave
dec
sahf
mov
lods
mov
pop
popa
or
mov
incb
mov
or
sbb
lahf
sahf
movb
sub
mov
pop
jl
pop
and
popf
out
imul
mov
ljmp
stos
mov
fcmovu
sbb
in
adc
sarb
xor
dec
xchg
xchg
popf
add
int3
cmp
mov
bound
mov
aad
xchg
mov
lock
mov
fdivl
scas
mov
push
sahf
jp
sub
stc
cs
jle
inc
jg
mov
sub
out
inc
and
add
ret
sub
xchg
mov
xchg
out
clc
pusha
gs
mov
adc
out
jle
aaa
lods
jge
aam
movsb
mov
xchg
mov
jne
jl
test
add
lret
rorl
iret
addr16
gs
mov
jno
stc
cli
mov
rep
in
xchg
scas
add
mov
aas
lret
fists
fcoml
adc
neg
add
sub
adc
ficoms
shll
xchg
nop
inc
fwait
cltd
and
pop
hlt
xchg
ret
mov
xchg
decb
leave
cmpsl
icebp
addb
inc
xchg
ljmp
xchg
lea
ret
or
ret
sbb
adc
js
cmp
bound
mov
outsb
or
mov
mov
sbb
arpl
mov
rcl
pop
aaa
jmp
stos
sbb
mov
int
lds
or
sub
add
mov
sub
in
xchg
mov
sbb
inc
ficoml
popa
inc
addr16
imul
scas
push
adc
and
xor
outsl
sub
sub
jmp
int
stos
cmp
cmc
jg
mov
clc
clc
fisubs
cmp
jbe
sahf
nop
mov
dec
inc
push
cmp
push
pop
or
test
mov
mov
mov
pop
pop
das
and
out
jb
adc
jne
jnp
test
and
jb
icebp
loop
insl
dec
negb
lods
test
cmp
call
fs
lods
xlat
fsincos
inc
scas
shrl
hlt
cwtl
fbld
dec
loope
xchg
sub
push
add
push
and
xor
cmp
and
pop
mov
shlb
scas
adc
mov
loope
out
adc
lock
mov
out
rdpmc
es
adc
mov
stos
hlt
mov
and
outsb
repz
jbe
push
sub
enter
jne
adc
pop
js
fisubs
dec
sbb
lds
dec
out
pop
das
cmpl
pop
jns
xchg
je
enter
jns
inc
xor
negb
mov
in
aas
sub
ret
adc
loop
mov
or
adc
mov
adc
jmp
scas
sub
push
mov
adc
mov
jmp
pop
inc
mov
inc
inc
insb
push
shl
mov
xchg
stos
pusha
jecxz
je
insl
mov
lea
push
sbb
pop
repz
inc
mov
sub
in
push
call
fists
jbe
notb
cltd
mov
add
adc
jno
jo
adc
jnp
loope
aas
hlt
test
mov
sub
adc
popa
sbb
movsb
in
xchg
pop
add
xchg
mov
pop
cmp
test
sbb
sub
mov
xchg
scas
inc
mov
outsl
sahf
aam
arpl
mov
pop
adc
mov
mov
imulb
mov
lds
mov
xchg
inc
lock
xor
mov
pop
dec
imul
adc
std
clc
push
imulb
xor
mov
ds
ffree
cmpsl
add
mov
std
in
fldcw
neg
cmp
mov
jo
mov
xchg
subl
adc
cmp
dec
mov
cmp
pop
or
dec
jae
pop
stc
pop
cmp
nop
mov
push
mov
bound
rol
or
sbb
stos
mov
cs
bound
data16
mull
inc
inc
out
pop
xor
cmc
and
inc
jo
int
addr16
ret
mov
sbb
cmp
and
xor
ljmp
rcl
jns
fcomip
sbb
sbb
outsb
sahf
jmp
push
movsl
mov
call
mov
je
and
mov
mov
push
push
and
sub
xchg
or
ret
xchg
xlat
jp
xchg
xchg
out
push
and
jo
xchg
xor
or
outsb
sub
mov
cmp
loopne
shr
insl
nop
jl
lock
push
leave
pop
andps
lds
cld
sub
sbb
aas
movsl
hlt
lret
outsb
fisubrs
subl
in
jnp
int
faddp
iret
xchg
addr16
cmp
test
clc
lea
sbb
rolb
add
pop
ds
mov
cmpsb
test
adc
jl
add
jmp
jnp
jge
movsb
cmp
loope
push
das
pop
inc
and
mov
push
stc
and
or
int3
add
test
cld
mov
mov
inc
cli
stc
xchg
xchg
lods
repnz
inc
lock
mov
push
jg
fldt
cltd
adc
loop
jecxz
stc
dec
mov
adc
mov
std
lret
stos
mov
jg
mov
xchg
and
adc
int3
pop
mov
cmp
ljmp
xor
sbb
sbb
fbld
adc
or
pusha
inc
in
add
cs
cmp
iret
lock
and
sbb
add
popa
push
mov
pop
mov
insl
movl
arpl
dec
clc
and
push
mov
sahf
cmp
jo
adc
dec
sbb
mov
arpl
scas
add
daa
cmp
ficomps
sbb
or
test
cltd
int
stc
jp
pop
xchg
push
jno
insb
mov
aad
jmp
mov
mov
aad
xchg
pushf
mov
mov
in
dec
mov
jecxz
mov
nop
jns
jb
mov
cmp
mov
lret
ret
ljmp
xor
mov
int3
cwtl
and
jo
mov
xchg
pop
cs
cmpb
push
inc
inc
jnp
xchg
shlb
ffreep
cmp
rcll
adc
mov
jl
int3
cmpsl
mov
inc
and
and
xchg
adc
mov
add
mov
sbb
fistpll
xchg
xchg
or
ja
jl
lods
pop
inc
xlat
lods
pop
lock
sub
outsl
mov
fsubl
icebp
ds
xchg
xchg
imul
test
cmp
mov
es
cmc
add
jnp
sub
repz
in
sbb
or
cmp
enter
rcll
jne
cwtl
mov
mov
enter
lods
jp
int
mov
mov
lea
or
mov
popa
sub
addl
insl
jne
or
les
ss
inc
adc
inc
outsb
shr
pop
stos
mov
jg
jne
hlt
sbb
mov
xor
pusha
imul
xor
popa
mov
mov
fildll
sbb
or
jbe
adc
add
pusha
fst
inc
movsb
sub
scas
inc
aas
or
sbb
pop
adc
and
xchg
inc
popa
xchg
mov
mov
push
xchg
sbb
inc
jne
mov
inc
add
imul
testl
fwait
mov
mov
orb
leave
frstor
pop
inc
xchg
test
push
jne
ret
xchg
and
stos
ret
jno
rcrl
mov
xor
call
jge
sarb
rorl
jnp
addr16
insb
push
popf
repnz
or
dec
pop
rolb
popf
lds
fs
cli
jle
rclb
ret
mov
bound
daa
decb
imull
add
cmc
mov
pop
xchg
in
sub
cmp
add
icebp
fcmovb
xorb
sahf
add
inc
and
cld
icebp
in
repnz
sbb
icebp
lods
std
cmp
dec
mov
lea
push
push
enter
ljmp
push
rol
jle
xor
lret
pushf
movsl
insl
shr
sub
push
imul
pop
cmp
xchg
adc
mov
inc
scas
cmp
xor
push
adc
push
cwtl
gs
dec
cmp
pop
adc
push
scas
jae
outsb
dec
inc
mov
lea
sub
cmp
fs
cmpsl
rcrl
xchg
adc
test
mov
xor
rclb
mov
pop
pop
mov
rol
pop
lock
out
inc
rcrb
pminsw
inc
lahf
push
mov
imul
push
push
inc
leave
insb
sbb
data16
pop
or
inc
test
cmp
sub
mov
repnz
cmpsl
aad
or
dec
int3
mov
lret
mov
or
jnp
mov
cmp
cltd
mov
nop
cmpsb
out
mov
xchg
mov
aam
iret
repz
adc
pusha
inc
sti
lods
pop
mov
jnp
jmp
sub
cmp
sub
cltd
lods
aas
orl
xchg
sbb
aam
pop
jg
leave
push
mov
jns
push
fs
bound
ljmp
xchg
test
icebp
dec
jno
or
fldenv
repz
addr16
mov
pop
inc
jmp
mov
sub
in
cmp
sub
out
sub
and
push
stos
mov
inc
lret
loopne
ficoms
adc
out
ficoms
xor
lret
inc
push
clc
pop
insl
add
cwtl
mov
addr16
std
popa
adc
mov
mov
les
into
inc
les
rol
lock
push
clc
cmp
push
cld
lods
daa
xor
jae
pop
dec
lods
or
dec
adc
push
pop
fcoms
cmp
jne
xor
dec
xchg
fstpl
add
cmpl
xor
mov
shll
ret
loope
dec
lock
jae
scas
lret
dec
mov
push
or
imul
pop
pop
pop
add
pop
js
das
or
xchg
inc
push
ficoml
mov
sbb
mov
out
ret
sub
mov
imul
pusha
daa
pop
lahf
push
add
jae
sub
xchg
dec
stc
lods
jnp
mov
lcall
test
les
dec
sahf
stos
in
xor
and
xchg
add
mov
data16
repz
dec
and
movsl
xchg
clc
push
in
pop
fdivrs
popf
or
out
mov
cmp
and
xchg
movsb
orb
dec
add
mov
push
inc
mov
divl
pop
pop
xchg
push
cmp
cmp
mov
adc
inc
ret
inc
pop
pop
insl
cmp
aaa
mov
cwtl
xchg
mov
xchg
xor
dec
pop
rcrb
addr16
cmpsb
lods
sti
out
jge
addl
cmp
inc
sbb
jge
addr16
bound
add
lret
je
scas
inc
cli
aam
rclb
outsb
cld
testb
push
dec
fbstp
add
add
icebp
jmp
mov
mov
gs
test
outsb
adc
and
mov
mov
neg
mov
jbe
jl
lock
dec
mov
push
jl
lret
lods
lods
fildl
pop
hlt
push
sub
js
push
fldt
sarb
mov
arpl
leave
xchg
ljmp
push
sbb
jne
inc
adc
push
cwtl
sub
cmp
or
movsl
xorl
add
sub
testb
pusha
bound
nop
xlat
add
insb
mov
add
sbb
pop
shrb
and
imul
and
adc
sub
jge
out
jne
adc
enter
divb
leave
mov
mov
dec
mov
shrl
int3
or
xor
in
xorl
stc
mov
outsl
mov
mov
loopne
cmp
adc
shrl
loop
mov
decb
jns
push
xor
mov
jns
fmuls
mov
in
aam
jb
mov
in
insl
daa
es
fimuls
and
cmp
dec
movb
call
or
xchg
xchg
movsl
push
pop
fdivrl
add
int3
cmp
push
sub
cmc
stos
cli
mov
and
push
sahf
or
cltd
pop
loop
add
orb
jae
cmp
enter
jbe
mov
sub
loop
xor
movsl
push
fldl
push
std
dec
andl
add
push
fldenv
inc
ds
xchg
jbe
test
inc
leave
xchg
and
insb
sub
fs
call
jae
repz
push
or
adc
fsubs
cmpl
out
adc
dec
dec
stc
add
or
pop
setge
in
idivb
add
add
cltd
ret
jo
push
jne
movsl
cmp
inc
pop
or
xor
hlt
push
leave
push
mov
push
xor
test
fiadds
lea
out
fisubrl
xchg
je
xchg
push
arpl
loope
cmp
loopne
fwait
dec
js
or
dec
repz
push
and
jmp
shll
pop
push
cwtl
pushl
push
pop
addr16
cmpsl
pop
inc
xchg
lea
out
inc
fimuls
jp
cmp
in
les
jp
and
outsl
stos
xor
push
mov
ja
cmp
sub
icebp
jl
inc
push
jp
jp
or
cmp
pop
or
sahf
aaa
sub
mov
mov
mov
and
bound
inc
adc
xchg
lret
xchg
jl
mov
push
dec
xor
mov
and
mov
subl
cmpsb
filds
or
divb
insb
mov
inc
test
das
dec
add
popa
int
dec
sub
notb
enter
inc
mulb
xor
lcall
ds
cmp
jns
pop
cmp
aas
loop
int
sbb
enter
insb
mov
hlt
out
dec
iret
or
mov
dec
shl
xchg
cltd
pusha
bound
inc
cmp
orl
cmp
sarb
cmp
xlat
lcallw
dec
jp
inc
in
ljmp
jl
orb
lahf
inc
sub
xchg
add
jl
scas
xchg
in
pushf
sahf
cli
arpl
cmp
push
push
mov
push
hlt
popf
or
fnstenv
out
cmc
add
aam
lods
scas
stc
inc
subl
fsubrl
adc
sub
jl
lds
insl
inc
xor
lret
inc
repnz
imul
jmp
lahf
repnz
add
mov
xor
xchg
cmp
cmpxchg
movsl
in
lds
shrl
sub
lods
push
mov
ret
pop
and
mov
les
mull
push
lret
mov
add
sub
addr16
add
mov
ret
xor
jae
popa
add
jno
inc
daa
or
and
jnp
push
sub
loop
out
xchg
outsl
xchg
cltd
fistl
adc
ss
sbb
add
push
nop
out
jo
insl
cmp
andl
iret
sub
and
stc
push
inc
mov
mov
mov
repz
ljmp
dec
outsl
sbb
cmp
mov
jbe
imul
scas
sbb
int
add
mov
ss
or
sub
orl
aaa
cmpsb
jno
mov
leave
test
mov
sub
cltd
mov
push
scas
aad
test
cwtl
lret
leave
popf
movsl
movsb
pop
adc
stc
jne
xchg
movsb
lds
push
sub
fldcw
lret
push
lds
push
stos
pop
les
in
mov
mov
cmpsl
mov
test
test
push
push
push
jmp
push
jle
pop
out
in
mov
in
aaa
xor
mov
or
lret
shrl
pop
and
in
outsb
jl
loopne
adc
out
mov
das
popf
jge
rclb
sbb
xchg
rcrl
push
imul
pushf
or
inc
pop
cmpsb
inc
leave
and
add
mov
dec
cmpsl
cmc
adc
xor
mov
cmpsl
jg
fnstcw
mov
das
add
sahf
lods
lahf
dec
mov
sbb
mov
insl
scas
cmpsb
and
data16
sbb
ja
pop
xchg
daa
adc
cmpsb
jle
bound
mov
mov
xlat
add
cmp
lock
fs
jl
pop
cld
xchg
es
nop
cmp
decb
fcmovu
and
jecxz
scas
push
jno
dec
arpl
int3
xchg
data16
or
or
sub
arpl
insb
sbbl
dec
pop
lods
jecxz
adc
es
mov
cmp
mov
xlat
sbbb
xchg
std
imulb
es
mov
in
jne
xor
push
or
lods
jl
jns
and
mov
xchg
jnp
mov
add
ret
push
adc
nop
aad
sti
int
push
dec
mov
pop
stos
vcvtpd2dqx
xchg
xor
lock
movb
adc
scas
test
cs
push
das
test
les
movups
stos
loopne
sbb
xchg
pusha
gs
push
out
out
orl
not
insb
xor
lods
add
mov
imul
mov
sbb
lds
mov
lods
scas
imul
or
out
xchg
loopne
sbb
xor
clc
sub
daa
inc
out
test
pusha
into
in
or
cmp
lret
dec
inc
push
inc
xor
xchg
mov
nop
stos
repnz
mov
xor
push
int
rorl
xchg
in
std
cmpsl
xchg
push
push
xchg
xchg
inc
cwtl
fucomi
test
mov
and
jmp
xchg
push
fcoms
es
inc
push
pop
lret
sahf
cs
mov
bnd
xchg
fcmovnbe
loope
cmp
adc
and
push
jb
or
arpl
and
mov
into
inc
inc
shl
pop
pop
sarb
sti
dec
fldl2e
push
xor
dec
stos
jle
pop
jb
add
ret
sub
inc
push
mov
fdivrs
sbb
mov
fiadds
fsubrl
jge
fsubrl
push
mov
pop
or
div
fwait
lret
jbe
push
or
push
push
pushf
inc
inc
mov
xchg
repz
fnstsw
pop
push
test
idivl
sbb
sbbb
inc
adcl
outsb
sbb
mov
cmc
and
inc
cmp
pop
fstl
cmp
aam
fcoml
adc
dec
out
sarb
sbb
mov
loop
int
jmp
addl
hlt
or
dec
icebp
pushl
mov
pop
arpl
dec
fcomi
xor
jbe
pop
and
test
leavew
push
ret
mov
mov
xchg
mov
sahf
inc
xor
ljmp
pop
outsl
bnd
pop
in
fsubrs
mov
pop
faddl
lretw
fstps
cmp
mov
push
push
push
mov
sub
movsb
add
mov
xchg
mov
jae
lahf
jecxz
lods
loopne
mov
pop
sub
popa
out
test
cld
dec
mov
int
out
incb
lds
xchg
xchg
call
lock
or
pop
cld
push
addr16
pop
xchg
add
adc
inc
out
shlb
pop
or
pop
cld
stos
xchg
pop
jae
std
pushf
push
les
cwtl
mov
in
aad
stos
pusha
add
mov
insb
call
sarb
cmp
insl
into
cmpsb
pop
adc
sti
mov
fs
mov
fwait
outsb
je
push
stc
jp
adc
dec
sub
or
xchg
jg
movsl
loope
adc
out
shr
cmp
addr16
cwtl
add
and
fisttpl
dec
mov
or
rorl
pusha
jno
push
cmp
or
mov
rcll
rorl
jl
call
pushf
add
int
aam
push
movsl
jge
dec
int
rclb
les
xchg
cwtl
fs
push
flds
cmpsb
cmpsl
xchg
or
mov
popf
sbb
xchg
cmp
out
mov
dec
jno
out
ds
xor
pop
sti
sub
dec
ds
out
sbb
cmp
xchg
jne
mov
aaa
and
pop
sbb
call
xor
add
insl
into
add
std
loop
cmpb
mov
or
sbb
fildl
pop
fsts
inc
push
or
bound
add
xor
test
out
mov
sbb
in
or
aam
cmpsb
cmp
fidivl
mov
rcr
mov
mov
shl
xor
xor
push
in
sub
or
jns
gs
adc
aas
int
or
or
inc
cld
pop
ja
int
in
les
outsb
cmpsl
jno
out
lret
xlat
push
call
mov
jnp
add
mov
push
dec
insb
roll
push
fldt
das
xchg
mov
push
in
sarl
xor
iret
lds
mov
adc
js
int
adc
movsl
cmp
shl
iret
inc
mov
repnz
jle
test
mov
in
xlat
or
pop
sub
cmp
jle
xchg
and
daa
ja
movlps
or
pop
push
cltd
jne
lea
xchg
pop
xchg
int
daa
loope
mov
add
call
fsubrs
daa
movsl
ret
leave
and
test
ljmp
cmp
cmp
out
mov
dec
or
rol
sbb
cmp
dec
jno
rcll
mov
fisubs
fmul
sbb
stos
push
stc
xchg
add
sbb
cmp
adc
push
test
push
push
jmp
aas
mov
xorl
leave
dec
insl
mov
movsb
mov
push
dec
enter
mov
lret
adc
mov
dec
xchg
incb
add
movsb
adc
jge
mov
push
into
dec
jns
pop
ret
int
addr16
fisubl
sbb
mov
sahf
addl
arpl
mov
ret
dec
pop
xor
in
jno
lahf
call
loop
xchg
pop
xchg
push
int3
adc
mov
fdiv
adc
mov
mov
cmpsb
dec
mov
sub
hlt
cmpsl
insb
mulb
lret
ja
cmp
pop
into
jl
fs
fisttpl
jmp
gs
in
add
int3
inc
loop
in
in
add
call
adcb
sbb
mov
lahf
fsubl
pop
dec
sti
mov
dec
push
shrb
dec
test
lea
push
in
add
or
jle
sbb
jg
fwait
test
xchg
enter
insb
mov
cmp
out
cli
push
dec
stc
imul
mov
xchg
shrb
push
shlb
pop
out
push
pop
or
jno
outsb
cli
push
mov
push
out
push
cltd
lock
mov
fnstsw
in
cmpsb
mov
stos
mov
mov
pop
imul
mov
sbb
loope
add
in
dec
mov
mov
sbb
sbb
das
aam
out
and
xlat
mov
in
leave
adc
cwtl
std
lcall
inc
adc
out
adc
xchg
push
lcall
test
rcl
rcrb
std
cmpsb
adc
out
dec
es
adc
mov
rclb
pop
inc
and
imul
cmp
xor
xchg
shrl
mov
pop
jl
xchg
and
ljmp
push
andl
vmwrite
mov
xor
and
sub
loop
push
cmc
pop
ljmp
mov
arpl
ja
sbb
mov
stos
je
aaa
cld
dec
lds
popf
outsb
mov
insb
inc
inc
out
mov
test
dec
pusha
cmpsl
mov
fisttps
mov
push
mov
push
jmp
popf
xchg
loop
push
pushf
out
insl
out
aam
dec
mov
dec
loopne
and
jecxz
jl
pop
and
imul
repz
loopne
add
or
mov
or
popa
sbb
movsb
or
into
dec
int
idivb
or
jne
jb
insb
icebp
mov
loopne
add
loopne
xchg
in
lret
dec
jo
push
ja
cmp
adc
xchg
add
pop
int3
mov
dec
pop
lods
jns
or
sbb
xchg
mov
jmp
out
push
mov
jmp
iret
rep
jno
std
pop
sahf
xchg
sbb
mov
and
cltd
jo
cmpsl
pop
jecxz
lret
aas
call
push
xor
loope
out
fsubr
xchg
outsb
and
mov
jnp
mov
shlb
leave
pop
sbb
jns
mulb
mov
shl
ret
nop
or
fisubs
in
iret
mov
add
pop
leave
enter
jnp
outsl
jnp
jbe
and
xchg
sub
mov
mov
xchg
sahf
cli
sbb
out
out
and
mov
xchg
jl
push
jb
inc
pop
jl
daa
adc
inc
es
mov
in
scas
stc
jp
leave
or
xchg
int
test
inc
mov
cmp
rol
fists
scas
stc
fistl
dec
jecxz
js
sbb
in
lock
adc
in
mov
movsl
orb
jns
ja
push
in
dec
mov
xchg
lock
push
mov
popa
fwait
sbb
roll
test
ljmp
jae
dec
ret
arpl
sti
cmc
mull
rcrl
insb
test
push
xor
xchg
shlb
or
ret
xor
pop
gs
pop
sbb
imul
test
das
leave
push
cmc
loopne
pop
xor
stc
fucomip
rorb
fld
sbb
mov
dec
mov
push
push
xor
rcrb
and
nop
lret
push
popf
cmpsl
lods
std
outsb
pusha
jl
cmpsl
push
xchg
xchg
ds
jns
and
mov
leave
xor
jnp
js
cwtl
xor
mov
je
adc
mov
hlt
add
jno
sbb
jecxz
pop
or
dec
cmpsl
lock
sub
mov
push
fpatan
jne
cmp
pop
inc
fmuls
jbe
cwtl
orl
dec
mov
push
and
adc
outsl
jle
rolb
pop
pop
daa
push
mov
cmp
in
xchg
add
lea
cmc
stos
or
imul
inc
push
push
adc
sub
jae
sub
stos
cmc
mov
xchg
push
ret
or
stos
ljmp
dec
jbe
jb
xchg
or
int3
add
jge
cmp
cmp
push
hlt
test
inc
fcomip
scas
insl
xor
xor
insl
or
and
mov
imul
lds
xchg
cs
bound
push
inc
sbbl
or
mov
icebp
fdivrl
inc
dec
fcom
mov
in
aam
test
mov
lret
cmpsl
scas
inc
imul
fimuls
push
test
mov
stc
jnp
pop
mov
add
pushf
movsl
inc
in
cmp
mov
dec
sbb
jecxz
fwait
adc
push
out
aad
cwtl
dec
stos
cmp
inc
in
hlt
daa
add
mov
xchg
js
in
outsb
pop
mov
mov
and
dec
ret
ljmp
xor
xorl
gs
gs
pop
fisubrl
aaa
xchg
mov
js
adc
popf
jnp
loope
and
inc
pop
lods
or
dec
insb
enter
insl
cmp
add
je
clc
and
adc
icebp
push
popa
jae
cmp
mov
jmp
sahf
push
sbb
dec
push
mov
mov
dec
in
xor
jle
or
in
push
repnz
sub
pop
mov
sbb
in
lret
lock
call
push
xchg
testb
iret
clc
sbbb
and
sbb
fdivr
push
add
push
sbb
outsl
repz
lock
insl
xchg
rcr
xchg
lds
push
mov
mov
pop
push
pushf
test
mov
pop
rcl
test
test
out
cwtl
loop
dec
cltd
fsubrp
fs
int3
popf
out
push
add
mov
loop
movsl
outsb
fs
mov
add
push
sbb
arpl
fsubrs
jecxz
lea
pop
rolb
xchg
xlat
xlat
popa
mov
faddl
gs
orb
push
inc
cmp
mov
pop
inc
sarl
das
out
add
jnp
and
ds
xor
cltd
jno
fadd
dec
or
mov
mov
add
insb
movsl
cmp
lds
push
sbb
dec
lahf
jne
aas
arpl
sbb
mov
faddl
fmul
lcall
stc
sbb
ja
sub
loop
mov
mov
pop
xchg
push
pop
mov
stc
xor
lds
sub
sub
xor
test
aas
insb
and
sbb
dec
jmp
dec
jae
sub
dec
scas
mov
ds
dec
pop
cmp
and
insb
dec
sub
xor
mov
jecxz
cwtl
ljmp
push
or
data16
dec
sub
or
sub
or
pop
ja
test
addr16
out
mov
imul
push
jo
loopne
and
mov
int
push
fwait
aad
mov
xchg
fcmovu
jle
adc
xor
jnp
add
and
lock
push
inc
out
jae
mov
std
jg
or
js
pop
sarb
repnz
jecxz
dec
xor
imul
push
xchg
in
mov
insb
mov
push
adc
dec
xchg
push
mov
xor
or
inc
push
imul
push
cvtps2pd
ficoms
ficomps
mov
mov
sahf
sbb
adc
cmp
repz
mov
dec
test
and
dec
push
idivl
stc
push
inc
outsl
mov
sub
pop
int
ss
adc
pop
jp
inc
aas
lret
xchg
cmp
stc
lods
mov
jb
loop
inc
jo
pop
ror
pslld
add
and
xor
popa
dec
imul
test
mov
dec
sbb
jae
sub
and
je
inc
adc
loope
xlat
xchg
xchg
jns
imul
inc
loope
adc
stos
and
std
or
add
jbe
nop
lahf
das
rorb
shr
repnz
mov
mov
adc
in
xor
mov
mov
mov
mov
push
ffree
cld
repz
push
out
xlat
inc
inc
push
test
jge
lods
cmc
adc
xchg
xor
or
jae
incb
dec
jp
sub
js
mov
cmp
mov
or
cmp
lods
mov
lret
xor
stos
movb
loop
pusha
mov
fucomip
push
xchg
push
mov
xor
ljmp
dec
syscall
jl
hlt
jmp
icebp
rcrl
aaa
sub
mov
cmpb
mov
aam
ss
mov
push
movsb
dec
push
cmp
pop
lahf
adc
xor
push
mov
lods
icebp
mov
fdivs
ficoml
pop
fwait
mov
mov
mov
sub
cmp
jle
mov
ds
xor
cmp
sub
movsl
shll
jns
jl
enter
rorl
xchg
sbb
incl
jns
mov
hlt
mov
loop
int
shll
mov
pop
jae
arpl
cli
mov
adc
xchg
int3
mov
adc
jl
mov
add
mov
int
mov
js
mov
xor
push
cmp
cwtl
xor
xchg
ficoms
testl
jne
mov
das
lods
xchg
lret
mov
mov
sub
and
mov
rorl
shl
xor
lahf
ret
mov
mov
lds
mov
pop
rorb
fstps
push
mov
aas
cmc
inc
test
adc
and
stc
repnz
sarb
rcl
iret
push
mov
lret
cmp
cmp
pop
popf
dec
mov
sbb
lahf
cmpsb
fnstsw
adc
or
cmpl
aam
pop
loope
cmpsl
inc
clc
jne
repz
sub
int3
movsb
scas
scas
scas
aam
out
cmp
ret
xor
lret
or
mov
outsl
jmp
dec
popf
fwait
mov
push
push
add
adc
testl
js
pop
in
lods
ja
icebp
and
jl
adc
mov
dec
dec
cmp
fs
pop
sbb
jnp
mov
pop
xor
lods
inc
cli
cmp
je
xchg
mov
mov
lcall
dec
arpl
xor
insl
cmp
rclb
push
mov
push
cmpsl
sub
adc
mov
pusha
xor
leave
push
test
cmp
dec
fisttpl
test
push
mov
xlat
mov
fstps
out
mov
dec
xchg
jae
fs
repz
rorl
test
pop
fldt
mov
inc
stos
xor
xchg
xlat
inc
lea
repz
push
sub
push
popf
data16
aam
scas
fildl
inc
out
lea
mov
adc
pop
or
sub
mov
xlat
test
ror
jl
test
cmp
stc
ja
or
pop
das
test
add
stc
or
pop
or
inc
sahf
sarb
mov
fistps
cmp
pop
push
pusha
xchg
push
imul
dec
jo
addr16
subl
fdivr
jne
cmc
xsave
je
out
mov
cli
mov
mov
mov
jge
mov
xchg
movsb
sbb
ljmp
mov
inc
jb
add
outsb
dec
stc
pop
clc
sahf
scas
or
and
das
dec
jo
int3
jo
pop
jmp
cmp
mov
sti
push
mov
aas
push
inc
mov
xlat
aaa
or
add
adc
ret
mov
std
cmp
pop
jg
mov
lock
call
mov
push
push
push
push
or
dec
pop
add
ljmp
jle
insl
sarl
adc
inc
sub
and
insb
in
aad
jg
xlat
stc
lcall
call
xchg
xchg
jo
inc
mov
mov
stos
fildll
sbb
jmp
pop
jb
cltd
inc
pop
adc
fucomp
push
test
popa
dec
pop
les
push
jecxz
push
cmp
imul
xchg
adc
xchg
testb
imul
les
add
sub
mov
jno
mov
fs
stos
mov
mov
mov
cld
adc
hlt
stos
aaa
lods
inc
fildll
ss
push
insl
call
mov
xchg
dec
aam
push
insb
sarl
mov
imull
sub
dec
lahf
mov
pop
sub
mov
dec
push
out
pop
adc
xchg
xchg
xorl
or
mov
ret
mov
ror
add
je
gs
push
mov
and
nop
popf
sbb
in
mov
into
into
mov
call
imul
xchg
je
jb
xchg
mov
daa
xorb
scas
jecxz
xor
mov
icebp
out
mov
push
add
xlat
gs
xchg
sub
sub
or
cs
inc
push
push
popw
sbb
in
mov
loope
pop
and
cmc
and
mov
lahf
stos
cmpsb
pop
outsb
clc
add
addl
or
add
out
adc
adc
or
lods
imul
rolb
pop
out
adc
pushf
pop
mov
cmp
hlt
push
dec
jge
add
pop
mov
pop
mov
mov
lcall
jl
shl
cwtl
xor
or
iret
dec
std
xchg
sub
testl
xor
out
dec
ret
aam
push
scas
dec
sub
ret
fists
test
ret
inc
xor
adc
cld
mov
or
push
pop
mov
cltd
dec
xchg
les
adc
stos
fs
inc
push
xchg
sbbl
xchg
push
add
les
and
out
insb
in
sub
sbb
js
lds
lods
jo
int3
jae
in
or
cwtl
add
pop
mov
xchg
clc
js
movsl
adc
inc
adc
in
jmp
add
jnp
mov
sub
lret
mov
sahf
movsb
jle
jmp
mov
shrb
pushf
adc
cmp
ret
mov
movb
sahf
push
int3
jbe
mov
sahf
pop
test
add
sbbl
loopne
lahf
adc
push
icebp
mov
adc
addb
mov
xchg
cmp
dec
xchg
mov
ds
or
sti
inc
xchg
pushl
jmp
inc
pop
movsb
insb
jno
in
cmpsb
mov
out
xchg
dec
add
fwait
xlat
scas
dec
add
adc
sti
jno
cld
sbb
xor
daa
mov
stc
aas
sub
fldcw
scas
negb
inc
mov
call
notl
rcrb
jp
test
xor
mov
sub
imul
mov
xchg
ror
mov
orl
fmull
int
mov
cmp
xor
mov
ret
jb
mov
xor
repnz
ss
cmpsl
movsl
bound
stos
cld
inc
test
test
push
mov
cmpsl
and
jge
pop
aam
or
loopne
mov
std
adc
cmp
sti
out
xor
in
sub
inc
jp
ret
imul
jbe
shl
or
push
fidivrs
inc
rcll
push
pop
xchg
mov
push
nop
scas
and
or
and
jns
xchg
sti
sbb
sarl
ret
mov
push
outsl
in
cmp
pop
pop
lahf
bound
fildll
push
mov
hlt
mov
jg
scas
daa
out
xchg
stos
cmpsl
test
rcll
xchg
repz
or
mov
push
bound
xlat
add
push
pop
xor
mov
test
fcoms
push
push
in
add
xchg
pushf
sbb
xlat
sbb
pop
xchg
outsb
push
xor
mov
add
cmp
cltd
pusha
and
push
leave
rorb
xor
xchg
sub
std
lcall
jl
lahf
cmp
stos
mov
xor
sub
scas
dec
aam
jp
fdivrs
mov
push
decl
cmc
jl
scas
cmpsl
push
push
mov
jbe
movsl
inc
rorb
jl
lods
jno
pop
pop
lock
roll
adc
push
mov
hlt
mov
insl
sbb
add
push
jmp
in
and
mov
inc
mov
cmp
fisttpl
or
jae
mov
js
xor
mov
jle
dec
cltd
scas
pop
jnp
push
mov
pop
add
adc
mov
test
ljmp
sub
inc
scas
push
push
aaa
inc
movsl
cmp
popf
idivb
movsb
push
lret
pushf
jecxz
out
mov
lcall
or
dec
or
mov
fnstenv
outsl
inc
cmp
fsubs
cmp
sbb
and
loope
pop
xor
push
push
fiaddl
sbb
xchg
mov
sbb
pop
imul
pop
negb
pop
xchg
lea
cmpsb
mov
mov
pushf
mov
in
xor
outsb
cmc
sbb
push
xor
adc
inc
es
stc
jno
cmpsb
and
sub
nop
or
and
and
in
or
push
gs
inc
xchg
jecxz
aas
enter
mov
pop
fdiv
les
jge
mov
xor
rcll
les
xchg
icebp
hlt
cld
jo
jnp
xchg
inc
cmp
mov
dec
pop
pop
movsl
fstl
sbb
into
jmp
sub
cmp
sub
dec
lret
inc
out
and
push
fldenv
out
jae
nop
call
hlt
xor
jge
test
dec
or
out
add
jecxz
xlat
lret
in
push
and
sbb
and
jbe
xor
fiaddl
mov
adc
sub
sbb
mov
repnz
scas
call
mov
sbb
or
mov
flds
aaa
push
in
fildll
ror
cmc
sahf
pop
repz
loop
fdiv
fistps
negb
and
bound
mov
pop
add
sbb
push
xchg
mov
dec
iret
in
xchg
jl
andl
sar
movsl
inc
pusha
loopne
pop
lret
ficoml
jnp
push
test
les
cmp
cltd
sbb
scas
fcompl
mov
subl
mov
outsl
jecxz
jnp
pop
sub
xchg
mov
push
std
xlat
xchg
clc
pop
cltd
arpl
loopne
lods
popf
shll
ret
mov
add
or
stc
xor
or
jno
xor
mov
adc
adc
popf
or
add
movsb
out
out
shl
popf
cmpsb
mov
jge
add
xor
ret
in
sbb
and
add
in
data16
out
sub
sbb
dec
adc
scas
jmp
pop
dec
out
outsb
inc
pop
push
aad
lret
popa
sub
mov
add
repnz
and
int3
jecxz
shrl
js
leave
es
push
lret
test
subb
pop
add
cmp
popa
dec
mov
xchg
pop
jle
or
sub
or
test
mov
xor
mov
iret
lock
ss
xchg
sahf
loopne
imul
xchg
jo
dec
add
in
js
cmp
aaa
jp
insl
lcall
filds
add
push
pop
je
lds
jae
rolb
fldl
xchg
jnp
inc
mov
lcall
shr
gs
dec
pop
iret
jmp
sbb
js
gs
inc
movsl
insb
std
pop
xchg
or
cmp
inc
pusha
sbbb
adc
push
push
mov
imul
aam
push
gs
into
inc
pusha
mov
lcall
or
pusha
jle
test
pop
cmpsb
movsl
mov
mov
pop
xchg
test
dec
add
repnz
scas
in
lea
xchg
lret
shrl
jle
push
in
imul
or
scas
or
dec
inc
ss
int
lcall
sbb
add
mov
test
xchg
inc
fstps
movsl
dec
shl
mov
jmp
sbb
into
ret
sub
dec
mov
mov
or
iret
shrl
in
push
fadds
xchg
cli
gs
adc
sub
aaa
mov
mov
jle
sbb
jge
fistl
shrb
pop
sti
mov
push
inc
popa
add
cltd
xor
dec
lds
test
lock
incl
add
out
mov
jno
shl
or
xchg
sub
mov
sub
lods
mov
rolb
push
inc
xchg
dec
ret
out
xor
pop
pop
std
test
cmp
jnp
push
fmull
clc
cltd
outsl
sbb
enter
mov
lcall
out
lods
std
cmp
inc
mov
xchg
dec
aam
loope
add
call
lock
repz
sbb
pop
xor
stos
loopne
icebp
gs
es
jb
std
push
jnp
out
pop
xcrypt-ecb
cmpsl
lret
xor
sbb
loopne
lret
mov
std
es
lods
scas
int3
jle
stos
out
in
fldcw
and
les
adc
int3
test
pop
mov
sub
sub
push
gs
cmp
lods
sahf
mov
pop
dec
push
mov
enter
push
fmull
xchg
mov
rcll
adc
leave
insb
gs
cmp
pushf
mov
inc
adc
jo
clc
insl
xchg
ljmp
ret
jg
or
push
inc
lahf
fcoms
cltd
test
jle
in
sbb
inc
scas
inc
pushf
sub
jbe
jnp
xchg
push
push
sbbb
inc
popf
adc
adc
and
mov
mov
ljmp
xor
out
mov
sub
sti
pop
out
repz
jb
divb
aad
push
addr16
push
cmc
cli
mov
mov
scas
out
mov
jl
or
imul
cltd
scas
scas
pop
out
loop
pop
xor
adc
xchg
push
cltd
push
inc
cmc
xor
shll
loop
and
sbbb
sti
xchg
cmpsl
popf
mov
pop
pop
fbld
lods
cli
push
sub
mov
imul
dec
mov
imulb
scas
lret
xchg
sub
cwtl
stc
xchg
jecxz
int3
mov
cltd
movsb
pushf
jb
icebp
or
push
dec
and
ficomps
or
pop
enter
ja
jp
mov
iret
scas
cmp
les
lods
jae
ds
dec
lods
push
lods
cmp
xor
dec
call
mov
lock
jae
bound
adc
add
jo
getsec
in
push
push
mov
cmpsl
pop
loopne
pop
ds
fstps
jecxz
decl
bound
loope
xchg
pop
out
test
ljmp
jle
jl
cmp
iret
add
cmp
pop
aam
icebp
inc
movsb
xchg
sbb
xorl
push
mov
and
roll
xchg
gs
test
in
xchg
sub
clc
aad
test
lods
inc
sub
push
aad
ljmp
inc
leave
push
repz
pop
add
cmp
iret
dec
jbe
out
stos
std
inc
pop
loop
sbb
jno
shl
mov
hlt
in
out
mov
std
ja
test
out
dec
push
jl
pop
dec
jne
cmpsl
jnp
pop
sar
out
xchg
repnz
call
mov
rolb
sti
daa
inc
scas
xor
lods
repz
sbb
push
stos
stos
sbb
mov
sub
mov
mov
xchg
pop
lock
jo
adc
add
outsb
out
stos
xor
imul
or
icebp
xchg
push
xor
cmc
jno
pop
or
nop
ljmp
sbb
mov
stos
mov
mov
lret
movsb
lock
inc
std
sub
dec
add
popf
mov
sbb
sub
icebp
or
scas
ret
inc
push
gs
xchg
aas
jp
mov
push
bound
xor
mov
call
sbb
mov
jns
push
rcll
mov
inc
or
xchg
call
in
mov
or
and
cmp
xchg
daa
inc
mov
xchg
xchg
jne
mul
jmp
fists
xchg
jnp
test
scas
sbb
mov
mov
jne
das
xchg
testb
adc
das
clc
push
cmpsl
mov
lret
shlb
jnp
mov
push
pop
mov
inc
push
xor
cs
inc
icebp
dec
mov
ja
daa
jle
cs
jne
add
push
push
clc
jecxz
mov
fidivl
leave
pop
sbb
fiaddl
dec
fwait
arpl
stos
xchg
push
movsb
fmull
ja
mov
movl
mov
popa
scas
addb
pop
fcoml
mov
xchg
mov
xlat
xchg
jne
shll
scas
pop
xchg
fnstsw
mov
ljmp
andl
pop
enter
adc
jnp
and
jb
test
inc
popa
fwait
movsb
inc
push
jmp
adc
lock
movsl
sbb
sbb
inc
clc
sarb
bound
repz
add
shll
les
ret
pop
sbb
loop
pop
movsb
and
or
pop
aam
nop
bt
adc
jno
mov
inc
popf
jb
lea
ficoms
cmp
bound
push
sub
adc
cli
xchg
pop
fsubl
dec
mov
sub
add
popa
add
pushf
inc
cmp
xor
rclb
push
pop
dec
repnz
lock
inc
emms
js
data16
daa
pusha
push
nop
push
cmpsl
push
xchg
ret
xchg
sbb
pop
fimull
mov
adc
rcrl
jnp
subb
and
push
sub
cmpsb
or
jecxz
int3
push
sub
push
xlat
stos
cmp
cmp
sti
add
and
sahf
iret
mov
pop
mov
inc
jmp
pop
ss
add
das
lret
cltd
xchg
sub
sub
stc
dec
inc
add
addr16
cmp
sub
cs
dec
cwtl
pop
dec
add
jge
jg
and
popa
rcr
icebp
pop
fdivr
mov
dec
pop
fsub
clc
push
jl
call
mov
das
nop
pop
or
and
push
ss
jl
rol
jge
stc
out
into
enter
and
je
imul
mov
xor
pop
mov
fldcw
mov
mov
popf
adc
pusha
mull
xchg
dec
add
push
inc
fistl
xchg
or
push
nop
push
inc
dec
fldl
xchg
add
aas
xor
push
into
and
js
outsb
push
mov
xor
adc
loopne
xchg
xchg
cmpsb
dec
fwait
cs
inc
inc
cmp
out
loop
aad
push
or
push
ljmp
jge
fisubs
or
jb
dec
mov
into
pop
cmc
jo
addr16
int
movsb
sahf
sbb
mov
mov
jo
mov
add
pop
or
add
imul
test
mov
leave
into
jno
js
inc
outsl
sbb
or
cwtl
mov
gs
xor
adc
lods
and
sbb
push
fnstcw
orb
cmpsb
pop
das
mov
ljmp
push
sahf
sub
aam
test
mov
mov
jnp
loopne
fsts
call
cmp
outsb
es
loopne
repz
sti
das
mov
loope
mov
pop
mov
mov
and
sbb
scas
jle
enter
cmpsl
mov
test
xchg
add
ja
dec
sbb
xorb
scas
es
mov
int
push
pop
into
jmp
int3
sub
and
ljmp
loope
ret
and
pop
or
sbb
dec
dec
out
scas
hlt
and
ret
inc
add
xor
repz
test
and
cmc
daa
xchg
jle
jmp
aam
out
pop
sahf
inc
mov
mov
test
jmp
lock
imul
xor
fwait
dec
inc
or
lcall
mov
scas
inc
and
repz
out
adc
mov
inc
jnp
pop
shrb
icebp
push
sub
lds
dec
pop
sbb
leave
sub
data16
je
js
pushf
xchg
pop
mov
lahf
xor
shlb
and
jns
inc
loop
pushf
cmp
call
xchg
bound
xchg
test
pop
dec
sbb
sahf
cwtl
out
pushf
cmpb
inc
dec
mov
ja
movsl
push
cltd
or
or
ja
xor
fnstenv
inc
xor
cwtl
add
pop
cmpsb
and
fdivr
lods
inc
mov
inc
mov
adc
rcrl
cmc
test
stos
xchg
jne
xor
sbb
test
int
addr16
xor
or
stc
pop
rcrb
push
test
frstor
pop
mov
sbb
ret
ficomps
mov
mov
std
fsubr
rcrb
fisubrl
das
xchg
addr16
xchg
negb
or
ds
pushf
sbb
cs
dec
lahf
incl
fmull
push
sbb
push
or
ror
insb
cwtl
and
mov
xchg
aad
inc
jmp
cmc
ss
mov
lret
xchg
pop
lds
jno
xchg
sub
adc
xor
addl
stos
fcomp
mov
jl
cwtl
inc
inc
pop
inc
repz
xor
je
xlat
das
fisubrl
pop
inc
das
push
jo
scas
sarb
inc
sarl
negb
jno
xchg
mov
mov
mov
enter
clc
mov
movsb
rolb
mov
mov
fidivl
ret
push
and
nop
into
stc
push
and
out
add
movsb
stos
xchg
xchg
jae
daa
jo
cmpsl
rclb
xchg
xchg
std
inc
shrb
push
push
xor
leave
mov
mov
and
inc
mov
scas
jmp
mov
adc
xchg
out
lea
pop
xor
out
jle
out
fidivrs
jg
jnp
mov
leave
inc
bound
rorb
cmp
cmp
xor
loopne
jno
popa
notl
dec
aas
lods
in
shl
fstps
repz
in
enter
das
mov
pop
fxch
out
cmp
inc
fisttpll
loope
mov
mull
clc
push
inc
sub
cmpsb
lahf
add
fisttpl
xor
jo
push
inc
inc
fidivrl
mov
or
pusha
lahf
and
cmp
fadd
inc
ret
jne
stos
hlt
cmp
leave
pop
jno
add
daa
sbb
icebp
mov
movsl
dec
sbb
add
xchg
sub
and
movsb
enter
rcll
pushf
fwait
das
sbb
aad
decl
in
xor
inc
int
or
dec
in
shl
push
xor
outsl
arpl
mov
mov
dec
jbe
inc
push
insl
dec
adc
mov
ret
sub
jbe
rcrb
adc
and
mov
out
xchg
popa
push
mov
pop
jno
andb
mov
popa
adc
addl
sub
hlt
dec
mov
dec
cs
jge
in
repz
iret
ja
sti
xor
push
mov
sbb
fdivrs
jmp
sub
pop
lret
adc
inc
int3
mov
mov
sub
xchg
mov
inc
js
or
jmp
and
mov
sbb
pop
mov
adc
push
sub
std
mov
or
xchg
mov
and
js
mov
movsl
pop
dec
iret
dec
push
testb
pop
jb
lea
push
popf
rep
mov
mov
adc
add
int3
int3
mov
dec
jo
push
jo
mov
xchg
imul
mov
sbb
sahf
xchg
out
dec
outsl
imul
mul
adc
jge
cmp
div
fistpll
lea
bound
stc
ds
inc
cmp
and
je
stos
fs
xchg
mov
fidivs
into
push
mov
cmp
jne
and
pushf
loope
sbb
das
shlb
mov
in
push
jno
mov
sub
mov
je,pt
add
in
ja
sub
ficompl
aad
stos
imul
cmp
adc
xchg
mov
jle
test
cmc
call
jno
std
push
mov
test
xchg
mov
enter
mov
mov
pusha
push
push
loopne
in
xchg
out
or
clc
fmul
jecxz
test
ss
mov
aas
mov
dec
sbb
jge
cs
out
push
addr16
jnp
stc
adc
sub
adcl
sub
add
pop
add
loopne
pop
pop
adc
in
movsb
pop
mov
push
or
add
inc
lahf
xor
xchg
xchg
xchg
insl
mov
pushf
stc
jg
cmp
sub
adc
xor
movsb
out
sahf
pop
jae
inc
repz
movsl
lock
fwait
sbb
add
cmpsb
cmc
inc
xchg
scas
adc
jne
cmp
xchg
dec
inc
addr16
in
test
out
or
cmp
jnp
test
inc
dec
pop
lods
decb
mov
ja
clc
sub
or
xor
add
in
pop
mov
flds
cmc
lds
cmp
test
imul
push
mov
xor
add
jno
cli
sbb
shll
pop
movsl
fadd
push
lret
push
add
mov
pop
fsubrs
je
out
inc
fdiv
push
xor
sub
push
das
mov
mov
les
adc
inc
ss
cmpsb
scas
aas
mov
push
sub
pop
xchg
jmp
out
scas
add
sbb
call
out
sbb
mov
mov
ret
fisttps
jmp
or
lds
sbb
in
adc
ficomps
jne
dec
andl
shll
sbb
dec
mov
andb
pop
xlat
aad
fdivrp
adc
mov
mov
lods
fidivs
jbe
or
into
adc
hlt
les
push
les
sbb
xor
pop
adc
add
xor
inc
cmp
leave
push
fisttpl
cltd
and
loopne
pop
xchg
loope
push
lock
in
out
pop
jne
adc
mov
sbb
xchg
aad
xchg
aam
rol
pop
leave
sbb
jne
pop
and
dec
addr16
and
and
out
jns
aam
fs
cmp
test
pop
mov
fcomps
jge
cmp
movsb
pop
pop
mov
jge
aad
jno
subl
and
mov
and
mov
and
mov
jp
addr16
add
pop
aad
or
dec
jmp
cli
gs
mov
out
pop
fiadds
cmpsl
mov
dec
loope
jle
sbb
gs
xchg
cmp
movsb
jmp
lock
pop
bound
jne
inc
je
sbb
dec
fcompl
and
lods
push
mov
pushf
push
loopne
ficomps
mov
bound
dec
xchg
into
enter
out
mov
insb
fdiv
mov
dec
xor
pop
jo
cmp
cmp
call
sbb
popf
int3
or
fwait
icebp
inc
ljmp
stos
inc
mov
bnd
dec
movsb
lock
nop
fmul
lock
jnp
mov
xor
adc
pusha
sub
ds
push
fbld
int3
xchg
or
rcrb
dec
fdiv
sub
leave
lea
cmp
push
cmp
mov
pop
outsb
subl
cmc
inc
xorl
dec
cmp
fwait
push
int3
iret
dec
mov
mov
mov
and
insl
in
ret
mov
and
pop
mov
scas
xchg
push
jbe
push
mov
push
inc
loopne
out
push
inc
loope
cmp
ljmp
sti
pop
shl
pop
cltd
or
push
lods
and
mov
sarb
xchg
in
lcall
stos
cmc
jae
fsubp
xor
sbb
xchg
in
repnz
repz
ret
sub
lea
push
icebp
mov
mov
dec
xchg
call
jnp
iret
xor
lret
sbb
add
xchg
adcb
pushf
gs
lock
in
dec
push
xor
loop
outsl
mov
jb
insl
arpl
stos
pop
fbld
sar
rcrl
push
push
fisubrs
cmp
lods
daa
divb
mov
jno
push
xchg
dec
sub
dec
push
pop
shl
push
lods
stos
popf
cmc
dec
addl
mov
cmp
int3
or
lds
pop
sub
cmp
xorl
insb
frstor
cltd
loopne
js
cmp
je
xor
push
mov
out
lahf
or
out
mov
mov
iret
mov
xchg
insb
mov
mov
insb
fcmovnbe
fisttpll
inc
dec
sbb
and
pop
or
or
aaa
cmp
ljmp
cmc
or
cmp
adc
lcall
inc
sub
sti
xchg
mov
out
insb
xchg
jl
mov
inc
int
mov
cld
mov
leave
xor
push
imul
loop
jg
data16
lock
push
loopne
sub
divb
inc
out
sub
lods
pusha
pop
or
hlt
stc
cmp
cmpsl
push
icebp
ret
mov
lods
aam
or
inc
test
mov
aam
jae
imul
pop
insl
jp
xchg
adc
ror
in
mov
cltd
das
pushf
into
pop
inc
push
or
pop
into
sbb
dec
inc
fstpl
negl
xor
gs
inc
jmp
ljmp
shll
cmp
cmp
sahf
lret
in
inc
sbb
repnz
mov
push
aas
push
xor
inc
mov
pop
cmp
lret
xor
cmp
sar
push
push
out
lcall
xchg
jb
pop
or
cld
outsb
movsl
or
in
aaa
popf
inc
pop
push
vunpckhps
pop
js
cwtl
xchg
shrd
xchg
push
mov
ret
dec
adc
mov
mov
xchg
popa
dec
sbb
jmp
or
xchg
pop
sbb
loope
cmpsb
add
ret
cmpsb
sub
pop
jnp
mov
int
movsb
pop
xor
adc
push
lock
jge
lcall
popf
lea
mov
sbb
ljmp
push
lret
pop
ret
dec
pusha
inc
jbe
std
push
xchg
mov
sbb
test
cmpsl
push
cltd
adc
xchg
adc
fs
stos
loopne
and
cmp
subb
negl
pushf
jbe
sahf
fidivrl
cli
cmpsb
mov
pushl
xchg
adc
add
mov
mov
fcoml
jb
jmp
out
outsl
lds
mov
or
sbb
cmc
jae
add
cmpsb
xor
movsl
add
and
aas
push
mov
fnstsw
loopne
fldl
and
or
adc
mov
mov
fs
and
fdivrp
push
mov
movlps
mov
jecxz
fwait
inc
cmp
lret
mov
sbb
pop
mov
inc
cli
out
sbb
je
pop
sahf
je
pop
inc
mov
jae
js
ficompl
mov
lahf
sbb
or
and
in
or
aas
aad
jb
pop
cmp
xchg
mov
jne
icebp
daa
inc
xlat
dec
addb
popf
push
cwtl
fs
mov
fcoml
lcall
popa
inc
pop
push
jns
xor
shrl
imul
rcl
ffreep
mov
push
pop
mov
pop
inc
fimull
push
dec
ror
mov
rorl
jp
xor
or
sub
push
mov
adc
xchg
int3
adc
out
and
sbb
nop
add
mov
popl
outsl
iret
xchg
or
xchg
mov
push
push
enter
lods
cmpl
and
mov
jp
mov
in
mov
gs
das
in
aad
cld
pushf
pop
push
mov
push
mov
adc
push
shrl
subb
inc
xchg
mov
ss
ret
in
arpl
pop
rorl
xchg
sub
add
pop
lods
push
movsb
and
rcr
mov
sti
lahf
cmp
jecxz
or
cmc
lock
cmp
mov
testb
dec
ss
pop
add
lods
mov
sub
popf
es
cmp
ja
or
dec
sub
pop
mov
test
cmpsl
pop
add
cmc
push
add
dec
sbb
and
aaa
or
sub
lods
outsl
enter
sbb
inc
xchg
bound
gs
lock
adc
rol
lea
leave
xchg
push
xchg
mov
cs
cmp
push
push
inc
mov
andb
add
xchg
add
aad
rcrb
xchg
inc
pop
cltd
mov
repnz
outsb
mov
jns
faddl
in
mov
ja
aas
mov
xor
push
es
mov
leave
jb
xor
xor
mov
inc
jmp
hlt
adc
test
insl
mov
xor
dec
out
out
nop
mov
imul
jg
aam
ja
mov
aam
jl
test
xchg
or
test
test
mov
jp
ret
dec
sbb
inc
ljmp
and
mov
loope
sub
in
out
out
test
push
or
sub
hlt
mov
sbb
push
push
lahf
pop
dec
testb
ficoml
or
inc
lds
dec
and
sbb
mov
sub
cmpsl
mov
mov
jp
mov
ffreep
nop
xor
fnstcw
aas
inc
arpl
sub
inc
adc
ret
inc
repnz
sub
adc
jns
movsl
push
loopne
sub
inc
pusha
mov
adc
loopne
je
push
xsha256
cmpsb
push
cwtl
dec
mov
sbbb
neg
lods
out
jp
sub
hlt
or
jbe
std
jae
fmuls
sahf
xor
xchg
inc
sbb
btc
xchg
fildll
or
cmc
ret
adc
scas
inc
aam
orb
clc
xchg
sub
xchg
scas
and
add
adc
xchg
add
clc
jb
adc
cmpxchg
mov
sub
adc
iret
test
in
int
stos
dec
clc
pop
shrl
and
or
scas
ret
movsl
ljmp
into
aam
mov
push
lcall
mov
nop
es
popf
pop
mov
inc
push
or
in
inc
lret
mov
nop
dec
out
cmp
in
enter
lods
in
jl
gs
sub
rcrl
inc
negl
push
arpl
add
inc
push
mov
imul
push
mov
orb
or
inc
movsl
mov
push
stc
or
in
ljmp
adc
cmp
arpl
mov
xchg
xchg
pop
dec
or
movsl
inc
mov
outsl
lds
mov
hlt
pop
movsb
dec
push
negb
sbb
xor
and
fnstsw
clc
int
insl
outsl
or
ss
xlat
mov
jne
ss
out
addr16
cs
nop
push
pop
inc
int3
addb
in
dec
int
push
lods
test
or
pop
in
pop
lret
sbb
insb
cmp
lods
xor
in
dec
or
lods
fs
shll
in
sti
push
xchg
sub
cmp
dec
mov
cmc
add
push
dec
or
cmpsl
sbb
mov
fs
xchg
out
add
fldenv
mov
adc
lcall
cmp
cltd
xor
rolb
bound
sahf
iret
flds
ds
xchg
or
pop
shr
movsb
cmp
jo
sahf
inc
sub
cli
push
mov
xor
push
pop
pop
push
pop
jge
or
movsb
sub
lods
adc
jle
mov
fxch
lds
lock
cmp
insl
mov
and
les
outsl
je
sahf
jnp
cs
das
dec
add
dec
rclb
xchg
mov
outsb
mov
mov
jmp
mov
repz
test
rorb
push
lea
xor
bound
icebp
dec
or
adc
cmpb
test
hlt
scas
cmp
push
mov
mov
fmull
mov
movzwl
adc
mov
cld
add
mov
pop
sub
xchg
push
mov
adc
bnd
ss
inc
xchg
sahf
mov
cmpsb
cmp
fisubrl
stos
aad
xor
and
push
stos
adc
mov
xor
daa
inc
xor
inc
pminub
cmpl
imul
sub
jmp
jo
jnp
or
jg
and
mov
add
inc
mov
mov
std
iret
loopne
rorb
cwtl
outsl
jno
mov
in
in
cmp
shll
sub
sarb
outsl
pop
stc
sbb
int3
and
in
sbb
inc
mov
loope
jne
aad
lods
mov
mov
push
jno
xchg
add
aaa
push
mov
jbe
lret
aad
loope
adc
xchg
cwtl
cmpsb
jno
add
pop
mov
outsb
mov
daa
imul
xor
jb
js
pop
int
xchg
fbstp
popf
call
cmp
repz
addb
sbb
stos
out
jge
mov
lcall
pop
mov
mov
sbb
adc
mov
xor
or
dec
sub
js
xchg
loopne
ss
and
nop
leave
aas
loopne
or
scas
jle
jl
in
nop
scas
imul
jae
xchg
enter
or
mov
pop
cmc
xchg
int3
inc
mov
lods
int3
sub
adc
loope
adc
sbb
ds
arpl
sbb
lea
pop
mov
ljmp
sub
adc
mov
and
xor
push
dec
test
xchg
jmp
fs
cmp
push
sbb
cli
mov
push
jg
pop
std
dec
jp
dec
xchg
in
mov
jmp
jmp
repnz
int
pushf
scas
ss
pushf
pop
xor
aam
pop
cmp
cwtl
inc
jno
xor
mov
mov
sti
mov
shrb
and
stc
scas
inc
or
fmulp
cmp
adc
cmp
cmp
sbb
out
jno
dec
movsb
ficomps
adc
or
clc
or
inc
lods
sahf
lret
fstpt
mov
push
icebp
jns
loop
fdivl
xlat
add
fs
mov
push
cmpsb
xor
into
adc
pushf
add
fistpll
cltd
pusha
mov
outsb
cs
mov
dec
mov
shrb
mov
jecxz
clc
xchg
insb
add
inc
lock
push
adc
js
add
mov
pop
mov
ss
jmp
adc
shrb
fdivrs
jle
pop
xor
orl
pop
mov
ja
scas
mov
xchg
push
mov
jbe
hlt
jle
sbb
stos
cmpsl
jnp
jne
daa
sbb
cltd
mov
cltd
and
pusha
push
sub
xlat
xchg
cmpsl
dec
loope
push
xorb
sbb
aam
or
sub
test
stc
repnz
data16
call
mov
je
or
xor
jg
fmull
and
lods
sub
mov
test
aad
bswap
dec
cmc
mov
push
scas
mov
fyl2xp1
iret
push
fldt
push
dec
sti
and
inc
outsb
scas
sub
dec
fxch
jl
in
or
stos
pop
mov
push
iret
and
sahf
push
mov
or
and
cmp
xchg
mov
jnp
aaa
das
jae
adc
aad
push
mov
js
xchg
jecxz
adc
xor
test
call
cmp
xor
xchg
adc
jo
lods
ja
cmp
mov
adc
into
loopne
test
mov
and
jne
push
cmpsl
xchg
out
mov
addb
cmp
popf
stos
je
cmp
cmp
scas
xor
adc
adc
push
mov
xor
mov
xchg
shll
mov
arpl
mov
movsw
or
push
sbb
jecxz
lods
ds
inc
sysenter
loop
push
and
xor
push
mov
fbstp
in
cli
gs
sub
enter
test
out
in
dec
or
decb
dec
pop
xchg
sub
sub
mov
cwtl
je
push
fcmovne
test
mov
rolb
xchg
lods
mov
xchg
xor
std
dec
in
sub
jl
fbstp
and
cmp
mov
pop
xor
mov
mov
mov
sbbb
inc
lea
rsm
and
xchg
pop
subb
outsb
das
dec
loope
lods
push
mov
pop
mov
inc
mov
push
and
iret
mov
mov
dec
mov
sti
xchg
push
push
adc
pop
xor
mov
mov
js
lret
adc
loopne
mov
and
addl
mov
cmpb
ficoml
sbb
mov
fbld
rdpmc
mov
xchg
lds
add
stos
jge
enter
mov
dec
hlt
imul
outsl
outsl
mul
std
pop
mov
sub
jns
xlat
lods
rclb
mov
stos
jne
sbb
mov
pop
adc
pop
fbstp
jle
pcmpeqw
cld
xorl
test
sbb
mov
mov
and
jg
negl
test
les
in
jae
xchg
mov
and
xlat
mov
insb
or
fst
repz
lods
xor
sbb
in
es
mov
mov
jecxz
lock
or
add
ret
cwtl
cmpsb
inc
jb
fisttpll
sub
outsl
loopne
xchg
aaa
ret
cld
roll
ret
sbb
xchg
cli
adc
rolb
ret
test
lock
or
pop
xchg
dec
pop
dec
mov
out
popa
dec
xor
or
popf
ds
nop
xchg
sub
and
xchg
lcall
iret
aam
xchg
lods
movsb
xor
jmp
aaa
inc
sub
and
repz
mov
adc
push
push
mov
sbbb
ret
rcr
sub
outsl
arpl
int3
in
rolb
push
or
std
lcall
push
inc
test
push
insb
jle
inc
enter
stos
add
or
sti
and
std
push
pop
sub
dec
inc
inc
popf
pop
stc
movsl
bound
xor
or
out
icebp
mov
mov
insb
adc
stos
fcompl
pop
mov
stc
mov
jbe
scas
lods
out
and
push
adc
movsl
aad
das
into
nop
pusha
sahf
xchg
jg
jge
cld
movsb
cwtl
lahf
pop
lea
popa
sbb
leave
dec
sbb
lahf
arpl
rcll
lea
cmpl
mov
repnz
aaa
popf
mov
or
rorb
sbb
sub
and
cmc
jl
pop
movsl
mov
gs
lahf
sbb
sbb
loope
xchg
inc
sarl
adcb
int3
pushf
mov
cmp
into
inc
pushf
and
jp
mov
jb
and
aad
xlat
push
fcomps
imul
cmp
aam
fcompl
xchg
mov
mov
xor
jae
movsl
in
jne
std
loope
jns
mov
pop
mov
cltd
iret
mov
jp
jnp
mov
andl
push
cmpsb
inc
out
lret
lcall
cmp
enter
mov
push
and
sbbb
lds
mov
jl
ljmp
call
lret
xor
xchg
dec
dec
and
pop
int
fisttpll
negl
mov
stos
out
outsl
add
inc
mov
or
pop
xchg
cli
mov
int3
cmc
andb
and
jo
dec
arpl
jmp
mov
scas
xor
insl
mov
cli
cmpl
or
jo
cmc
adcb
push
in
into
es
dec
fiaddl
mov
push
mov
sub
adc
xor
xor
lcall
sub
cmc
push
push
clc
mov
mov
pop
js
cwtl
negb
add
cmc
popf
test
loop
pusha
mov
mov
jl
adc
insb
enter
fsubrl
mov
sbb
ja
ss
xor
sub
daa
daa
movsl
jb
or
lock
in
jge
mov
loopne
ret
jmp
mov
imul
push
dec
inc
les
sub
xchg
hlt
pop
mov
cltd
cmp
mov
xchg
movsl
jmp
pop
daa
xor
aam
sbb
dec
fcompl
sbb
ljmp
shrb
ds
adc
and
jg
in
sub
fst
stos
add
js
sti
lods
push
xor
dec
fists
adc
mov
and
xor
es
rcl
dec
cwtl
movsb
pushf
pop
jecxz
xchg
cmp
rclb
arpl
mov
sbb
add
cmp
inc
xchg
mov
rorl
mov
cld
jg
or
andl
and
mov
fxch
push
les
sub
fcoms
xchg
shll
jmp
jp
std
xor
stc
iret
pop
dec
adc
mov
cld
addr16
in
sahf
mov
lahf
cld
inc
push
and
pop
aad
lcall
inc
jp
sbb
sub
sub
mov
xor
push
and
jbe
arpl
lods
mov
mov
call
dec
pop
xchg
jns
ds
roll
dec
sub
cs
sbbl
xor
mov
jo
xchg
xorl
cmp
xchg
test
int3
inc
jb
fwait
xor
cmp
xchg
mov
pop
and
add
imul
lods
lahf
inc
divb
fsubr
ss
test
fucomp
iret
std
lahf
cli
cmp
jle
add
sbb
cltd
or
inc
nop
out
mulb
mov
push
int3
loop
inc
cld
rcrl
sbb
cltd
scas
mov
push
mov
jl
or
xor
lahf
ds
pop
sbb
hlt
sub
into
cmpsb
jno
pop
sbb
shrl
pop
mov
and
sub
cmc
loope
pop
scas
dec
sahf
in
andl
repz
cltd
xor
call
cwtl
jge
xchg
cmp
xchg
sbb
push
sahf
loope
in
mov
ds
mov
fsubrp
dec
clc
negl
xchg
sbb
scas
in
std
jmp
mov
lcall
lea
ljmp
stos
out
mov
and
or
sub
std
pop
sbb
mov
daa
lcall
sbb
fimull
mov
movsb
adc
test
adc
xor
pop
fsts
sbb
sub
push
xorb
inc
icebp
sub
or
inc
add
test
or
cs
and
jecxz
sti
pop
or
mov
and
push
xlat
jl
outsb
xchg
pop
push
mov
mov
daa
pop
or
lods
adc
push
xlat
loop
mov
cmp
aad
pop
cs
mov
lods
aam
sub
ret
sub
adc
xchg
je
sub
and
lds
imul
sub
pop
les
movsl
rcll
mov
mov
pushf
mov
sub
cmp
xchg
cmp
mov
jo
shl
mov
in
call
andb
cld
jo
insl
in
repz
jecxz
mov
ja
fdivrs
xor
pushf
sub
mov
push
cmp
repnz
jo
rol
out
mov
sub
cmp
sub
jb,pt
sahf
stos
xchg
sbb
add
int
movswl
xchg
and
dec
int
lret
call
repnz
dec
pop
or
out
lods
xor
mov
movsb
inc
shll
xchg
out
ret
pop
in
icebp
aaa
xor
aad
pop
out
mov
sub
loope
xor
push
fnstenv
aaa
out
ret
adc
jbe
daa
movsb
and
nop
ss
cmpsl
mov
mov
inc
lods
enter
or
mov
jae
mov
inc
mov
scas
mov
insb
push
jmp
sub
sti
int3
insb
xchg
add
loop
je
lods
cmp
out
pop
dec
mov
jmp
push
jo
lcall
sbb
pop
or
fstl
adc
dec
mov
sub
stos
mov
and
add
call
or
xchg
addr16
mov
mov
add
jbe
outsb
loop
sbb
push
cltd
les
imul
hlt
lea
jge
daa
out
or
lcall
outsb
dec
or
jae
xchg
aam
cmp
fidivl
outsl
mov
xor
hlt
mov
adc
stos
or
bound
cmp
sahf
dec
or
mov
cli
into
lret
fs
xchg
cmc
aaa
test
loope
outsl
cmp
lret
push
hlt
call
add
into
lods
or
lods
mov
gs
gs
and
add
imul
xchg
cmp
fwait
inc
lret
jl
pusha
mov
mov
ss
mov
sbb
or
subb
insb
iret
filds
adc
loop
roll
xorl
es
insb
cld
push
cmp
daa
aad
outsb
sbb
aaa
jle
ds
jbe
insl
or
out
dec
xor
in
shlb
fs
xchg
xor
xor
or
xchg
mov
out
jg
pop
and
add
rcl
dec
sbb
out
inc
iret
or
test
aaa
adc
lahf
jnp
rolb
inc
shll
pop
mov
lea
fsubl
push
out
call
sub
fcmovnb
pop
decl
pusha
stc
out
daa
jmp
xorl
test
inc
aas
divb
notl
insb
push
mov
aad
ret
movsl
pusha
jae
inc
jno
inc
faddp
mov
mov
mov
movsl
stc
cmp
mov
jns
jne
cmp
rcrl
loope
mov
sub
mov
cmovo
xchg
dec
inc
and
mov
push
pop
push
inc
jne
dec
push
mov
xchg
sbb
popa
mov
call
xlat
jae
xor
fwait
stos
adc
and
xchg
xchg
fmull
cltd
popa
mov
test
es
loope
test
adc
adc
jb
adc
mov
fists
cltd
mov
ficoms
add
pop
rcrb
adc
cmp
cmpsl
jmp
int
outsl
fdivp
dec
push
int3
jp
mov
in
push
and
push
stos
lahf
push
push
outsb
pop
pushf
dec
dec
notl
add
fistpl
push
and
bound
fnstsw
jg
gs
out
jmp
sahf
mov
mov
xor
scas
push
pop
iret
fdivs
sub
mov
xchg
jg
or
adc
jmp
jecxz
clc
loop
lcall
jo
iret
imulb
aad
push
add
or
out
sbb
add
lahf
dec
mov
cmp
or
jg
mov
ret
or
mov
in
adc
xchg
jle
lods
jbe
lcall
outsl
fs
jmp
jno
and
mov
mov
rcrb
pop
fiadds
ja
xor
dec
push
pop
mov
and
xor
push
lcall
test
pop
jecxz
ja
sub
aas
sbb
pop
mov
icebp
dec
push
inc
dec
mov
subl
ficoms
sub
jmp
xor
hlt
popf
push
adc
xor
push
lcall
sahf
sub
mov
int
jg
aas
pop
stc
rcrl
lods
push
and
mov
or
add
jp
mov
ret
movsb
out
and
shrb
or
pop
pop
or
sub
jecxz
ds
std
jmp
sbb
lods
insl
shr
stc
and
jae
mov
inc
repz
jbe
test
and
mov
xlat
cli
iret
je
popa
mov
mov
push
xchg
and
push
cwtl
cmc
sar
jle
fnstcw
aaa
aaa
test
outsl
xchg
pusha
in
sub
sub
jecxz
fstpt
mov
xor
pop
xchg
mov
xor
inc
xchg
pop
sbb
or
testb
shr
xchg
add
xchg
out
scas
xchg
roll
inc
cli
cmp
jne
jne
movsl
push
data16
mov
mov
divb
addl
ss
in
je
lahf
mov
push
push
cmpsl
jecxz
xchg
fistl
call
lret
into
and
stos
push
dec
sub
ret
mov
mov
adc
in
fistpl
jp
pop
and
adc
dec
and
adc
jle
rcrl
mov
lret
and
pop
movsl
ret
mov
rcr
push
adc
movsl
push
jmp
addb
fistpl
jne
jb
fmull
in
adc
adc
or
adc
xlat
mov
xchg
je
or
xchg
mov
imul
sub
clc
xlat
nop
das
idiv
jne
out
sub
loop
add
incl
mov
and
lds
inc
scas
jb
adc
in
js
dec
jge
cmp
push
mov
adc
incl
daa
lods
jno
mov
jae
jns
test
cmpsb
pop
stos
add
in
and
add
add
mov
jge
notb
stos
cmpsb
lcall
cli
outsl
lods
js
xor
mov
and
xchg
xchg
sbb
movsb
std
daa
xchg
dec
mull
mov
cltd
mov
lods
ljmp
addr16
fldt
push
ja
dec
int
push
sub
jo
jecxz
dec
xchg
dec
clc
inc
cli
xchg
orb
add
mov
xor
mov
add
imul
lds
jo
int
mov
pop
lahf
push
pop
rcrb
sub
xchg
imul
testb
cmp
xor
xor
mov
lret
cld
sub
in
cli
mov
or
fsubs
lret
adc
lods
sub
sbb
int3
ret
inc
jo
fdivs
sub
dec
push
clc
ret
imul
xchg
or
jnp
xchg
pop
mov
pop
or
shrl
arpl
out
jmp
xchg
jle
ljmp
notl
mov
movsb
xor
stc
sub
outsl
jecxz
add
mov
add
pop
adc
mov
xchg
add
sbb
mov
imul
and
pop
pop
sub
xchg
or
imul
addr16
enter
test
jne
cmp
arpl
arpl
lods
cs
pop
enter
sub
cmpsl
fstps
shlb
ljmp
push
pop
jmp
fsubrs
hlt
inc
cmpsl
lock
out
shll
inc
lea
push
dec
or
mov
arpl
fists
loope
jmp
pop
add
repz
rcrb
shl
sbb
sbb
in
icebp
xor
mov
lret
mov
test
mov
gs
or
in
and
xchg
cmp
mov
sahf
lret
dec
fidivrl
cltd
mov
popf
popf
dec
hlt
test
push
es
outsb
ret
test
inc
in
jle
jg
fisttpll
lds
sub
or
inc
aaa
xchg
ljmp
xchg
inc
movsb
cmp
jae
shlb
je
adc
leave
lods
fdivl
pushl
push
xor
lea
push
addr16
cwtl
int3
jb
lahf
and
mov
sbb
add
jo
iret
ljmp
and
cmpsl
jecxz
cwtl
push
sub
mov
adc
push
loop
arpl
mov
scas
and
test
ds
sub
mov
nop
mov
push
sbb
inc
mov
dec
stos
jnp
jne
mov
and
and
pusha
jns
mov
icebp
jl
xor
add
add
adcl
lahf
inc
roll
push
jb
je
in
mov
xchg
scas
or
push
adc
push
jle
inc
test
xchg
shl
clc
and
mov
xchg
mov
sub
push
jbe
sub
jl
lea
jne
ljmp
sbb
add
add
fs
stos
add
loop
fwait
pop
out
das
nop
loop
inc
rcll
andl
cmp
out
daa
pop
outsb
inc
fldenv
xchg
inc
repz
add
lock
cli
cs
fstps
mov
repnz
adc
fwait
stos
mov
xor
pop
in
std
sbb
ds
pusha
jno
mov
sub
sbb
dec
fistl
daa
mov
adc
adc
dec
cld
or
xor
jecxz
or
and
aas
popa
xor
sbb
test
sahf
outsb
pop
int
sbb
mov
mov
push
and
push
and
aas
push
jmp
and
ljmp
cmp
and
rcrl
cwtl
xchg
into
pop
xchg
sti
jle
dec
add
dec
ja
arpl
mov
sbb
rcrb
adc
arpl
lret
lret
out
xor
subb
cmp
cmp
push
sahf
fsub
push
lea
inc
adc
loopne
cwtl
lods
push
sbb
nop
or
or
nop
outsl
ds
cmp
push
mov
scas
stc
jl
cwtl
fdivl
jp
test
sub
je
lock
mov
dec
jmp
inc
jl
sti
cmp
mov
push
inc
andb
mov
rorl
fisubrl
orb
clc
addb
push
cmp
incl
jmp
sti
and
jne
pusha
rolb
xor
xor
test
mov
insl
arpl
fistps
jmp
xor
sub
into
xchg
pop
insl
and
bound
movsb
repz
rcrb
lahf
iret
fbstp
test
outsb
aad
aam
jno
and
scas
pop
dec
jb
inc
es
lret
sahf
dec
mov
testl
or
add
jge
inc
sub
shrl
inc
jae
sub
adc
xchg
fildl
ret
pop
add
fmuls
sub
add
fcmovnu
mov
mov
mov
push
mov
mov
orb
rcl
jmp
dec
adc
pop
mov
in
mov
adc
out
imul
out
testl
and
cmp
xchg
fs
pop
mov
inc
jle
add
push
aaa
xchg
or
daa
lcall
mov
mov
fmuls
pop
clc
xor
jmp
enterw
es
pop
fadd
push
std
inc
cltd
lods
sahf
sub
in
push
dec
lret
xchg
jp
mov
xchg
andb
mov
enter
dec
loopne
pop
xor
rcll
repz
dec
fmuls
add
pusha
xchg
jge
fisttps
ret
jg
in
pushf
out
mov
nop
jne
rep
xorl
inc
scas
aad
mov
mov
or
shrl
jne
negb
shr
xchg
and
dec
nop
adc
arpl
jmp
ftst
sub
cmp
sbb
icebp
pop
xchg
shrb
stos
mov
scas
or
fwait
lret
inc
sub
mov
sub
aad
or
test
and
push
loopne
lea
mov
jl
add
or
push
lods
ss
xchg
jg
sets
cmp
sbb
fstl
gs
insb
into
mov
ss
adc
pop
push
ja
dec
fnstenv
mov
adc
lcall
or
or
stos
insb
xchg
pop
cmpsb
cs
xchg
mov
mov
cld
push
ds
sub
inc
movsb
rcll
adc
dec
dec
scas
adc
adc
xchg
adc
out
adc
and
fsubrs
ret
addb
pushl
push
xlat
pop
push
rorb
push
xchg
adc
cmp
xchg
mov
jae
jle
js
hlt
jl
push
imul
cmp
mov
jae
das
mov
call
scas
jecxz
pop
scas
cld
push
mov
sub
mov
add
loope
movsb
inc
push
shrl
pusha
ss
rcrb
xchg
scas
aaa
movsb
inc
push
movsl
pop
dec
sub
xchg
push
ss
iret
rcll
xorl
stc
movsb
jns
or
inc
lea
jmp
ret
loope
enter
dec
mulb
jae
xor
shll
cmp
adc
fs
in
fcomps
fstpl
into
jnp
pushf
scas
mov
or
testl
fimuls
or
push
aad
dec
mov
in
outsb
sbb
adc
out
lret
rorl
fdivr
ret
cld
addr16
clc
mov
jns
xchg
icebp
mov
aad
or
xchg
fdivs
pop
jl
fs
mov
movsb
xchg
dec
add
call
jecxz
mov
mov
inc
addr16
lret
inc
ret
std
sub
test
fisubl
in
pop
mov
mov
inc
loope
mov
push
sahf
in
lock
sbb
nop
pop
jbe
push
xor
jge
mov
sbb
pop
jg
xor
mov
and
dec
sbb
insb
jmp
push
loop
cmp
bound
mov
movb
mov
inc
fdivl
in
xchg
sub
arpl
or
test
cltd
pop
mov
or
out
jne
not
rcrb
cmp
inc
jecxz
mov
pop
xor
pushf
fdiv
in
ret
add
arpl
xchg
cmpsl
or
cmp
imul
jmp
inc
in
mov
fdivs
jecxz
and
scas
sub
pop
xchg
inc
mov
adc
add
and
jno
adc
test
cmp
inc
leave
mov
mov
xchg
pop
orb
outsb
insb
adc
adc
add
jnp
stos
jns
lcall
jbe
loope
scas
or
fsubr
in
test
inc
jae
xchg
sub
out
hlt
les
aad
jno
jo
shl
iret
add
data16
mov
pop
pop
mov
inc
out
jb
les
mov
push
xchg
jge
mov
inc
jmp
xchg
icebp
nop
test
andb
pop
adc
int3
cli
sbbl
cwtl
ljmp
jb
mov
jo
adc
aad
scas
out
es
out
inc
mov
jo
cmpsb
sbb
cltd
imul
inc
in
test
jmp
popa
pop
or
adc
scas
in
lods
rdmsr
cmpsb
push
jge
push
lods
sbb
ror
out
cmp
push
in
lret
jb
hlt
xchg
push
sbb
movb
insl
cwtl
mov
pop
rcrl
or
cmp
mov
cmp
addr16
sbb
push
pop
jecxz
enter
sub
or
pop
jbe
out
ljmp
idivb
and
and
in
jmp
dec
mov
in
unpcklps
and
in
push
scas
test
inc
ret
dec
negb
fwait
push
mov
cmp
aam
and
imul
inc
mov
lds
gs
adc
in
cli
repnz
clc
push
mov
in
enter
push
or
cs
cld
adc
push
dec
cmpsl
addb
and
insb
mov
jmp
sahf
lods
push
mov
imul
in
insl
pop
aas
add
push
sbb
xchg
fstps
subl
xchg
add
mov
mov
in
push
dec
jbe
out
jnp
ljmp
jp
shrb
pop
fistpll
ret
out
fstl
mov
add
sub
or
cmpsb
push
cmpsb
dec
sti
xorps
outsb
scas
dec
sub
or
fisubs
mov
ret
dec
imul
xchg
imul
ret
and
hlt
jg
jg
lret
scas
sub
push
shlb
fwait
mov
mov
outsl
xor
xchg
cmpsb
leave
mov
inc
dec
sub
adc
cltd
scas
data16
popa
gs
ret
int3
xchg
cmp
push
push
sbb
cli
aaa
push
xor
test
loop
fcomps
fldcw
mov
imul
pop
mov
jge
mov
std
jbe
cwtl
adc
shlb
movsl
jl
jg
test
jo
aaa
cwtl
adc
popf
and
jns
stos
call
xor
push
adc
xchg
inc
cmp
sbb
mov
xor
pusha
shl
mov
rolb
adc
cld
fsubl
imull
xchg
jg
jbe
xor
loop
bound
mov
mov
jg
into
pop
inc
inc
pop
sbb
hlt
test
inc
leave
push
in
cmp
xlat
inc
xchg
aas
sbb
push
sub
dec
jbe
dec
xor
mov
mov
or
push
xchg
clc
ficoms
add
mov
inc
arpl
arpl
daa
repz
add
call
and
xchg
aad
mov
out
add
jle
sarb
cs
sahf
xchg
shrl
mov
ret
js
fxam
mov
dec
fwait
insl
jb
push
std
adc
push
add
sub
inc
xchg
mov
shl
lcall
adc
mov
xor
mov
pop
data16
xor
adc
stc
and
xor
and
lcall
adc
repz
add
sub
jge
push
mov
fcmovnbe
jae
sub
out
sub
pushf
lods
jno
dec
cs
cmp
shrl
mov
rol
stc
mov
pusha
cli
data16
icebp
jp
pop
mov
sbb
jns
popf
js
stc
add
push
mov
jl
add
cwtl
scas
xor
sbb
imul
rorb
test
sti
lock
or
jmp
bound
cmp
pop
fadds
mov
sub
push
scas
jb
adc
fisubs
js
dec
jae
cltd
mov
pop
jge
inc
sbb
je
cmp
sbb
add
dec
sbb
inc
lcall
mov
cwtl
pushf
inc
cmp
fwait
scas
pop
call
dec
lock
adc
insl
movsl
fistpl
sbb
cmp
xchg
xchg
cmpsb
or
or
inc
mov
sbb
out
xor
xchg
jnp
hlt
pop
dec
shlb
add
pop
cli
push
stos
dec
inc
ret
dec
xchg
imul
jle
mov
xorl
pop
test
mov
mov
jecxz
repz
stos
xchg
jl
xorb
sub
stc
lds
inc
add
fcmovb
cmp
adcb
ret
adc
js
adc
in
xchg
stos
inc
sub
pop
sti
inc
mov
pop
test
inc
xchg
sub
and
cmpsb
jmp
and
daa
mov
mov
mov
hlt
ret
mov
dec
mov
pop
divl
outsl
aad
dec
int3
scas
je
adc
mov
popa
lds
jb
mov
lods
push
adc
nop
loopne
sbb
loop
cwtl
lret
pop
pop
imul
or
or
sub
pop
dec
stos
mov
push
lea
push
sbb
sub
and
in
mov
outsl
pop
int
icebp
sub
out
or
loope
in
aas
test
xor
sub
outsl
and
out
xchg
pushf
insl
xchg
sahf
lds
jg
push
test
sub
xor
sbb
cmp
push
lahf
jbe
mov
in
or
sarb
adc
jl
jns
rcl
push
insb
sbbb
inc
mov
push
sbb
xor
fcmovb
insl
sub
ljmp
fldcw
push
mov
jl
mov
rolb
js
mov
loopne
push
cmp
pusha
imulb
imul
je
pop
mov
pop
ret
es
aam
cltd
hlt
sub
cmp
fs
mov
and
fsubl
sar
cvtpi2ps
mov
rcr
sub
sub
lods
xor
or
ss
sub
add
outsb
mov
leave
mov
xor
xor
xchg
cmp
cmp
stos
push
inc
push
mov
push
testl
test
dec
and
mov
adc
sub
adc
mov
xchg
jo
xchg
sub
pop
pop
xchg
mov
out
push
inc
jns
scas
shlb
aad
bound
pop
push
push
into
enter
lock
inc
sahf
insb
sub
dec
loop
enter
push
lea
add
push
sbb
xchg
scas
lahf
inc
xchg
xchg
sbb
adc
addr16
inc
iret
sub
leave
mov
and
or
cs
js
bound
pop
ret
loopne
add
mov
jne
mov
jecxz
jbe
pop
sarl
xchg
lock
divb
lea
push
xor
add
inc
and
add
mov
mov
fmuls
mov
inc
xor
lods
mov
pop
loopw
inc
mov
sbb
pop
data16
mov
or
jno
xchg
sbb
xchg
pop
daa
inc
cmp
push
jle
pop
pop
scas
mov
sahf
not
icebp
aaa
dec
add
fadd
in
mov
pop
orl
jns
dec
dec
js
sub
movsl
pop
icebp
xchg
dec
xchg
jo
js
andb
xchg
into
mov
fwait
cmpsl
mov
adc
jns
das
mov
lods
sar
cli
mov
sbb
popa
repz
jbe
sub
adc
adc
mov
pop
shll
decl
mov
loope
jmp
jmp
mov
sahf
arpl
xchg
jg
add
or
push
daa
out
dec
dec
lret
cmp
fnstcw
xchg
xor
rcll
add
ljmp
aam
loope
imul
mov
clc
pop
inc
test
out
jno
mov
xor
das
dec
mov
jo
iret
outsl
xchg
or
scas
pop
mov
push
scas
movsb
repnz
xchg
dec
lods
pop
adc
std
scas
and
fs
stos
mov
fidivl
rorb
insl
enter
imul
les
fstl
push
xor
adc
and
mov
ja
mov
xchg
lahf
pop
xor
jae
adc
or
es
sub
jns
adc
fnsave
push
movsl
popf
loop
in
leave
push
cmp
aaa
sbb
push
cmp
das
fwait
into
push
mov
jmp
xor
pop
popa
je
shr
das
testb
fsubrp
sub
xchg
mov
test
js
xor
dec
sub
dec
pop
dec
lcall
pushf
dec
imul
out
jle
rorb
inc
andl
in
inc
aad
ja
inc
ss
mov
jl
enter
inc
sub
cmpsb
add
add
xchg
sub
dec
mov
cmp
outsb
mov
mov
pop
and
adc
sub
jae
ds
bound
in
adcb
leave
mov
jne
adc
je
inc
xchg
stos
bnd
jo
xchg
pop
les
adc
ret
iret
hlt
mov
pop
inc
in
dec
insb
imul
jle
and
mov
mov
mov
vpcmpeqw
mov
mov
cwtl
mov
sub
cmp
pop
cmpb
mov
jae
jmp
adc
inc
or
pop
push
mov
rcrb
add
bswap
mov
jg
cmp
or
fsubrs
xchg
sub
test
sbb
fimull
adc
pop
mov
inc
sub
mulb
leave
ljmp
cli
add
xor
lret
sahf
adcb
lock
and
lret
jno
mov
push
sub
sub
jns
imul
int
push
add
cmp
cmp
pop
cmp
xchg
ljmp
and
dec
popf
sub
add
hlt
call
xor
insl
test
push
test
lcall
push
adc
xchg
scas
jmp
sbb
push
ja
aad
fsubl
test
in
mov
movsb
cld
mov
add
aad
pop
push
sub
push
sbb
lahf
je
lea
push
arpl
xor
or
ss
ds
mov
add
push
sahf
cmp
mov
adc
inc
popf
je
inc
test
ret
ds
and
mov
adc
push
ret
fs
push
cld
pop
cs
jae
orl
push
clc
scas
loop
sub
pop
push
scas
add
rolb
sub
in
lds
jno
neg
mov
lcall
frstor
scas
call
mov
les
xor
mov
jl
and
jle
sbb
fmuls
fidivrs
mov
jns
pop
aad
dec
aaa
pushf
in
or
or
adc
lea
outsl
cmc
inc
mov
enter
fs
scas
inc
cwtl
stos
mov
sub
imul
mov
xchg
sub
inc
xchg
sub
cmpl
mov
loop
cmp
cwtl
xor
xchg
stos
fs
ja
shl
inc
gs
int3
mov
mov
mov
int
mov
adc
icebp
scas
inc
ss
sbb
stc
ret
pop
mov
testb
or
nop
shl
test
adc
das
push
jnp
push
les
aaa
pushf
repz
pushf
int3
mov
scas
loop
dec
icebp
xor
jg
mov
sbb
lahf
out
sub
in
mov
mov
daa
mov
or
push
stc
pop
test
fcoms
mov
ljmp
divl
mov
lea
pop
int3
pop
jb
ret
mov
mov
cmp
adc
in
add
and
xor
cmp
add
xor
test
test
cmp
mov
shll
sbb
xchg
push
sbb
pop
icebp
add
pop
sbb
lds
or
int3
btr
inc
fwait
subl
pop
sbb
lret
mov
mov
es
out
cmpb
pop
je
lock
sub
in
mov
sbb
mov
movsl
sbb
lds
test
sti
lods
mov
mov
jno
leave
loope
mov
icebp
sti
fcoml
movb
repnz
add
mov
pushf
fwait
cld
mov
xor
in
mov
in
sub
outsb
scas
cwtl
cld
into
daa
mov
inc
lahf
push
mov
fcmovbe
sub
pop
mov
pop
in
dec
cwtl
incb
add
mov
xchg
jge
xor
xchg
enter
mov
jle
rolb
jp
gs
orb
into
cmp
mov
in
ja
and
popf
mov
push
aaa
in
out
test
pushl
or
ficoml
push
pop
xchg
xor
lret
lock
decb
sub
leave
push
push
sub
pop
adc
pop
inc
sbb
push
push
mov
data16
out
push
pushf
mov
outsb
loope
pop
loop
loop
dec
push
sbb
in
push
dec
dec
mov
enter
daa
ret
fildll
push
ret
outsl
fiaddl
pop
pop
cmp
cld
imul
int
push
sub
pop
dec
lret
xor
leave
lock
and
or
inc
xorb
cli
add
scas
dec
mov
movb
fstps
jmp
ja
mov
nop
arpl
jge
ret
xchg
jo
mov
sbb
pop
shll
sub
fsubrl
inc
aas
jns
push
aad
aaa
insl
std
sbb
out
fsqrt
ss
adc
int
scas
call
xlat
arpl
push
cmp
fisubrs
mov
sbb
fsubrs
cs
out
cmpsb
cmp
out
mov
pop
je
addr16
dec
adcl
aas
push
fstpt
xchg
stos
mov
int3
push
cli
xchg
xor
xchg
pop
outsl
cwtl
push
cmpsl
popf
lock
and
movsb
inc
leave
pop
adc
mov
sbb
adc
xchg
add
lock
add
sbb
xor
ds
add
stos
les
lods
fstpl
cmp
cmp
ja
in
out
mov
jno
xchg
jne
jge
imul
loopne
add
xlat
out
jp
adc
scas
dec
ss
imul
push
lds
add
dec
xchg
push
jmp
sbb
testl
push
push
dec
int
pop
loopne
inc
jae
dec
ss
mov
stos
jecxz
push
jg
sub
enter
and
inc
orb
sub
mov
sub
ret
sarb
add
les
pushf
and
test
sub
dec
test
inc
call
fwait
push
mov
cmc
iret
int
push
mov
sbb
dec
xor
hlt
jns
dec
adc
inc
xchg
subl
daa
mov
outsb
push
sbb
lock
cmp
testb
fmuls
cmc
jp
mov
mov
movsl
mov
arpl
jbe
flds
lods
add
incl
mov
andl
fldt
clc
cs
and
fsubs
popf
faddl
ds
adc
push
test
add
call
hlt
ljmp
adc
mov
add
inc
idivl
sbb
push
pop
and
adc
loop
adc
sbb
pop
fiadds
inc
mov
orb
cmp
shl
fsts
sub
mov
test
adc
inc
push
lret
incl
mov
in
lahf
add
repnz
loope
arpl
dec
js
call
pop
out
xlat
inc
movsl
repz
sbb
or
cmp
dec
mov
lahf
xchg
sub
push
je
adc
lahf
jl
jne
adc
adcb
sbb
cmpsl
jmp
lods
lcall
and
or
repnz
inc
pusha
or
mov
mov
sub
and
pop
dec
int
mov
sub
adc
mov
mov
inc
or
in
push
aad
mov
cmp
xchg
icebp
or
lret
cmp
in
jnp
mov
lret
lcall
push
lods
inc
cmp
insb
insl
call
sub
mov
xor
scas
fmuls
ret
mov
add
test
icebp
repnz
shlb
pop
and
cld
xlat
and
jle
leave
je
push
jno
mov
mov
push
xchg
outsb
mov
ss
out
xchg
es
mov
bound
imul
gs
and
inc
repz
in
jl
sahf
mov
loope
cwtl
shrb
mov
jb
lods
andb
jge
loop
addl
int
gs
repnz
in
daa
push
push
fisubl
loope
cmp
in
add
mov
adc
mov
lock
lcall
icebp
rcrl
fstpt
xchg
aad
adc
rclb
and
insb
add
fdivrs
dec
aas
lods
inc
popa
pop
and
mov
mul
and
not
data16
mov
and
lock
call
lock
mov
into
mov
mov
push
inc
sarb
popf
imul
mov
stos
call
fmull
add
mov
sub
sub
add
int3
pop
ror
aam
loope
adcl
movsl
cmpb
xor
cmp
sbb
cli
fdivrl
imul
mov
jae
inc
push
les
fsub
shlb
sarb
jge
sbbb
scas
or
push
neg
jmp
ja
shll
xchg
mov
jp
sub
jae
andl
mov
into
pop
mov
jmp
push
sbbl
xchg
mov
jb
roll
adc
push
in
push
insl
ljmp
mov
cmc
sub
and
mov
adc
or
sahf
popa
in
nop
pop
idivl
xchg
mov
into
int
mov
jecxz
into
adc
stos
cltd
loop
cmp
sbb
xchg
jge
jecxz
ss
sbb
test
jns
cs
mov
dec
jb
imul
repnz
mov
test
cmp
pop
mov
xchg
lret
faddl
cmp
pop
jbe
in
push
xchg
mov
push
into
jbe
stos
aas
xchg
pop
sbb
xor
and
inc
aad
dec
push
pop
insl
stos
adc
enter
fsub
dec
iret
mov
mov
enter
sub
int
pop
xchg
arpl
in
jp
xor
dec
xchg
cmp
lods
cmp
test
and
adc
sub
icebp
push
addr16
adc
int3
sub
iret
clc
leave
out
or
stc
rorb
jg
mov
nop
aad
cmpsl
dec
pop
shld
mov
sub
and
popf
dec
inc
rorl
jp
mov
sub
cmovns
stos
xor
sub
out
sbb
rorl
psllw
popf
fistps
out
cmp
jle
mov
dec
out
jne
pop
outsb
in
sahf
imul
push
dec
scas
xor
repnz
sub
push
bnd
imull
jp
lea
enter
sub
das
aas
mov
push
push
lods
int3
push
jo
sub
outsb
push
icebp
js
les
cmc
adc
ja
adc
mov
add
int
jae
mov
imul
dec
sub
fwait
jg
fists
mov
test
addb
xchg
mov
loop
movsb
aam
dec
neg
ret
lods
mov
jo
mov
sub
add
adc
push
cmp
int3
sbb
aaa
mov
outsl
adc
jle
sub
add
rcr
inc
rcr
sarb
shlb
xlat
int
mov
clc
jbe
addr16
xor
sbb
xchg
pop
clc
jmp
iret
adc
icebp
aad
mov
shrb
sarl
sbb
adc
cs
dec
pop
jecxz
jle
cli
lret
cmp
push
sub
imul
pop
aad
scas
leave
inc
icebp
movsb
mov
cli
push
divl
outsl
mov
mov
ret
or
out
xchg
jle
es
jle
mov
mov
push
inc
insl
dec
in
scas
cmp
insl
pop
cmp
and
mov
xchg
bound
enter
in
and
in
add
subl
pop
fldt
mov
and
dec
inc
adc
push
into
loopne
xchg
cmp
dec
pop
xchg
ror
xchg
in
scas
mov
cmc
push
scas
sub
pushf
rcl
pop
fwait
mov
les
cmp
imul
dec
and
cmp
dec
push
pop
xor
sti
jnp
mov
ds
insb
ror
outsb
add
aad
ja
imul
out
in
and
xchg
inc
test
mov
adc
mov
dec
movsb
dec
adc
aas
jne
push
push
jo
mov
cmp
or
fwait
sti
sub
push
inc
mov
daa
fsubrs
cmp
fcompl
jl
in
cmp
cmp
dec
loope
adc
aas
int3
sbbb
mov
int3
leave
xor
sbb
jnp
fisttps
in
lea
xor
out
lods
and
add
and
xchg
je
cmp
xor
cmp
xchg
add
pop
and
dec
fdivrp
sarl
adc
imul
out
adc
cld
aas
inc
gs
sub
mov
xor
cmpsb
andnps
inc
test
outsl
and
pop
lock
sbb
xor
dec
push
add
or
popa
js
sbb
xchg
sbb
hlt
sub
enter
scas
test
push
sub
push
faddl
mov
jb
pusha
push
cltd
inc
negb
inc
push
ljmp
mov
push
and
notb
out
call
adc
xchg
sbb
lea
mov
pop
mov
adc
push
push
lcall
pop
sub
and
cmp
nop
decl
xor
aam
sbb
lcall
das
inc
pop
mov
lods
sbb
inc
xchg
das
out
les
or
push
jnp
pop
adc
jecxz
jecxz
inc
negl
lret
pop
jbe
sub
rolb
dec
or
orb
mov
ja
enter
jb
jmp
xorb
mov
std
xchg
test
iret
scas
pusha
std
out
lahf
into
and
push
xchg
daa
push
mov
adc
pushf
or
cmpsb
pop
xor
jb
inc
jne
testl
addb
cmp
leave
inc
addr16
adc
imul
add
sbb
cmp
mov
mov
je
cmp
mov
push
std
jae
stos
sub
fst
mov
lds
enter
fcoml
lods
jb
dec
sub
in
and
mov
sahf
imul
mov
movsl
pop
adc
sti
pop
sbb
aad
int
xchg
mov
push
jge
mov
pushl
clc
stos
or
pcmpgtd
mov
lds
xor
fs
sbb
push
inc
not
int
loopne
shl
sahf
dec
mov
fisubrs
popf
fistl
sahf
jb
mov
pop
mov
xchg
pop
fnstsw
mov
adc
data16
dec
pusha
or
push
fidivl
xchg
xor
adc
es
inc
xchg
lods
clc
and
in
ja
fs
jecxz
adc
cmp
std
jg
scas
add
dec
xchg
xlat
mov
fsubl
aas
icebp
flds
pop
lret
stos
pop
aaa
pop
movsb
jg
xchg
inc
int3
int
imul
xchg
movl
push
push
lcall
ret
in
jno
mov
subb
mov
mov
mov
rorl
in
in
ret
lods
jae
or
leave
pop
mov
jl
sahf
adc
mov
and
sbb
sbb
dec
mov
cli
sbb
mov
xchg
aad
xchg
outsb
roll
add
mov
push
adc
clc
add
insl
aam
mov
dec
push
mov
push
js
mov
jae
lcall
das
call
mov
fdivl
sbbb
add
rcl
in
dec
das
mov
xor
test
cltd
subb
fdivrs
push
inc
mov
cmp
cmpsl
jp
mov
aam
pop
lods
add
adc
adc
popf
dec
mov
testb
xlat
hlt
or
fbstp
inc
pop
pop
lea
fwait
lock
stos
add
jp
lock
mov
pop
adc
loope
call
pop
popa
fdivrs
add
push
xor
lock
data16
cmp
xor
inc
inc
shlb
outsl
mov
mov
sbb
insl
daa
fdivrl
popf
lock
add
rcrl
data16
cmpsl
lahf
outsl
fs
ljmp
adc
cmp
stos
inc
inc
movsb
xor
xlat
rorl
jne
shrb
add
iret
loopne
enter
xor
into
and
fdivrl
je
or
int3
pop
and
call
push
cmp
fimuls
jae
lods
pop
xchg
xchg
ja
dec
jo
mulb
mov
mov
inc
sub
divl
dec
lret
cmc
cmp
add
fstpl
lcall
inc
push
xor
xchg
dec
or
or
sbb
sub
push
sahf
popf
aam
inc
clc
mov
push
lock
dec
aas
aad
clc
sub
cmp
cwtl
xor
aad
or
mov
rcrb
fs
repnz
nop
aaa
mov
lock
fisttpl
call
jnp
loop
cmp
notb
sbb
mov
aad
pop
pop
or
push
ret
jne
sbb
cmp
jge
cmc
and
or
add
dec
push
mov
ljmp
int
fcmovnbe
adc
lods
int
imul
pop
and
dec
je
lret
sub
cmp
sub
aad
aam
jmp
pushf
pop
push
sbb
sub
pop
push
cwtl
iret
les
pop
push
fdivrl
mov
inc
cmc
mov
cs
sbb
mov
jae
data16
dec
lea
adc
repnz
mov
shr
fstp
fdecstp
cmpb
or
sbb
push
popa
sub
xchg
inc
int
test
fdivrl
xor
popf
push
loopne
and
repnz
test
adc
data16
xor
adc
sbb
in
cmp
daa
aaa
jge
div
add
clc
push
leave
int
mov
push
aaa
hlt
in
mov
inc
cmp
dec
or
jb
xchg
pop
sbb
xchg
dec
mov
fdiv
jae
stos
xor
xchg
sbb
ljmp
sahf
mov
push
and
add
push
jne
dec
int
int3
loop
lods
adc
into
out
in
xchg
call
adc
jecxz
clc
ss
jo
mov
loopne
cltd
jge
push
fisubrs
shlb
in
test
ret
pop
daa
dec
push
pushf
movsb
test
fistl
jae
outsb
push
mov
scas
jns
in
or
add
cmp
clc
or
lret
notl
arpl
mov
out
and
and
jl
shrl
jns
mov
pop
add
jge
xlat
xchg
sub
mov
ja
add
lret
lods
jle
push
or
pop
ja
add
imulb
loop
push
outsl
mov
push
jo
xlat
mov
push
fmul
pop
dec
dec
pushl
pop
sub
inc
iret
mov
lds
mov
inc
cli
mov
pushf
std
mov
hlt
sub
pop
out
xchg
popa
out
xchg
dec
fs
mov
aad
pop
fcoml
xchg
xor
jp
daa
test
lea
sbb
aam
movsb
mov
sti
adc
daa
stos
dec
addb
gs
push
shrb
sar
scas
jae
mov
leave
out
lret
mov
cli
int3
iret
fwait
fs
jnp
out
sub
fs
and
out
jno
pop
mov
push
ret
xchg
mov
sbb
outsb
jne
fwait
rcll
in
adc
mov
aaa
icebp
stos
shll
insb
jp
xlat
push
outsl
pop
push
mov
lret
movsb
mov
addl
mov
cld
or
call
lcall
or
fdivrl
inc
loop
mov
cmp
jo
ret
sub
pop
mov
stos
or
decl
pop
mov
cmp
ss
push
push
mov
mov
ret
out
adc
xlat
aas
mov
enter
dec
daa
lret
aam
cld
pop
stos
call
lds
xadd
data16
hlt
rcrl
pushf
xchg
repz
subb
push
jl
sbbb
mov
inc
or
dec
rclb
outsb
adc
repz
push
jmp
sbb
add
mov
pop
dec
mov
push
adc
push
or
lret
pop
mov
adc
and
inc
cld
mov
add
jl
mov
repnz
les
nop
fdivrl
dec
out
inc
add
and
and
shrl
dec
out
loop
cmp
sbb
testl
mov
ja
iret
xchg
ljmp
imul
repnz
xor
divl
in
aad
add
cmp
adc
mov
lcall
ret
xchg
int3
addb
sub
ljmp
dec
cld
push
sub
adc
jl
dec
inc
enter
mov
and
pop
mov
loopne
into
lret
loop
insl
cwtl
cmp
and
mov
in
mov
loop
daa
out
cmpsb
incb
ss
pop
push
call
stos
jae
nop
loope
xchg
push
xor
int
push
add
bound
outsl
mov
jno
push
or
out
pop
fiadds
mov
jb
ficoml
mov
pop
hlt
scas
lret
mov
loop
xor
sub
imul
jns
cld
loope
sbb
jmp
test
and
pusha
sub
movsl
lock
fldcw
pop
pop
gs
mov
loope
stc
add
push
aam
mulb
sub
gs
test
inc
push
xchg
push
dec
adc
ja
cmc
xor
mov
push
and
aaa
sbb
das
push
add
outsl
es
xorb
inc
jae
jmp
outsl
and
mov
testb
jne
push
sub
inc
icebp
jg
jno
and
or
cmp
push
sub
dec
mov
mov
jno
imul
lret
jb
filds
pop
test
xchg
mov
inc
cmp
sub
mov
sbb
test
push
call
out
cmp
lods
push
pop
pop
add
shlb
lods
arpl
jl
in
pop
add
cmp
xor
push
outsb
mov
push
jnp
arpl
popf
test
xchg
fdivs
push
es
mov
jo
daa
adc
cmp
nop
aad
sarl
clc
dec
push
jg
or
mov
sub
fwait
shl
fldl
jb
mov
nop
cli
std
and
les
fistpl
mov
mov
cmc
mov
mov
xchg
lret
adc
mov
rcll
mov
stc
ret
flds
pop
inc
ljmp
mov
push
sti
stc
stos
roll
or
adc
mov
aaa
xchg
aam
mov
loop
out
insb
xor
push
icebp
mov
and
and
mov
or
jl
jae
mov
cwtl
aaa
jmp
lds
gs
rolb
loope
cmpsb
push
mov
dec
push
add
imul
lds
cmp
mov
jp
popa
imull
andl
push
cmp
push
sub
xchg
push
in
aas
stos
std
sbb
enter
repnz
outsl
or
pushf
js
cld
add
sahf
or
push
jp
push
pop
add
push
pop
cmp
sub
dec
inc
sub
mov
xchg
lcall
add
fcomp
into
jo
adc
pop
aas
lods
mov
jecxz
inc
cmp
fwait
mov
outsl
out
pop
pushf
pop
in
push
out
ret
push
add
loope
inc
mov
test
shll
movsb
das
neg
inc
sbb
jl
cmp
fldl
mov
push
cmp
clc
and
aaa
or
sub
popf
into
xlat
sub
ret
es
sbb
add
test
cli
iret
sbb
aam
push
cmp
sarl
push
leave
leave
jp
test
jo
mov
jge
dec
or
push
orb
divb
lcall
or
dec
mov
jl
imul
xor
out
fildll
mov
lahf
adc
pop
pop
ljmp
fwait
and
shrb
repz
iret
xchg
fisubl
fstps
repnz
mov
std
mov
fldl
sub
or
mov
leave
in
jp
shr
add
test
dec
and
and
sub
add
sahf
enter
ljmp
cli
mov
xchg
sbb
sub
cmc
jae
sbb
dec
push
sbb
jne
pop
xor
cltd
rol
loope
or
mov
dec
mov
js
lcall
insl
mov
dec
pushf
bound
shrb
xchg
lret
pop
mov
lock
xor
or
stos
loop
pop
sbb
cld
mov
es
adc
adc
sub
fwait
bswap
xor
fdivl
and
pushf
mov
pop
cwtl
xor
lahf
mov
mov
jp
ljmp
lahf
jg
xchg
xor
iret
lds
rcll
push
movsb
sbb
jle
mov
cmp
arpl
cmc
lock
jnp
pop
inc
pop
add
in
stc
ljmp
sbb
push
lea
scas
mov
cmp
mov
fs
sbbb
lcall
shll
xor
in
je
pop
test
and
pusha
fnstenv
icebp
mov
cmpsl
jo
xlat
adc
xchg
loopne
cmp
lds
inc
ja
add
xlat
leave
lahf
pop
test
je
fwait
and
mov
dec
fadds
sub
icebp
pusha
push
daa
ret
sahf
mov
sub
sarb
test
mov
lcall
pop
dec
push
or
lret
mov
inc
insb
icebp
je
repnz
cmp
and
sbb
pushf
sub
dec
jg
xchg
push
addr16
jp
push
push
test
popf
stos
xlat
dec
inc
inc
xor
hlt
mov
test
lods
leave
mov
mov
inc
loop
inc
gs
lret
mov
ds
sub
ss
inc
leave
push
xor
dec
decl
les
stc
lds
in
cli
sbb
and
mov
xchg
mov
fcomp
push
add
sbb
dec
mov
xchg
mov
mov
sub
push
daa
gs
cmp
mov
outsl
pop
and
in
mov
xchg
cmpb
add
shr
sub
mov
xorb
in
mov
cwtl
mov
test
cmpsl
or
sbb
inc
and
jmp
or
mov
xor
loope
xor
fcoms
sti
push
leave
fimuls
mov
inc
imul
aam
inc
ljmp
xchg
dec
mov
loope
clc
push
mov
cmpsl
push
adc
jns
mov
sub
xchg
dec
lcall
xchg
hlt
mov
push
cmp
mov
in
cs
dec
adc
add
fildl
test
ss
mov
push
sub
push
xchg
and
stos
sub
movsb
movsl
and
and
test
andb
fdivrs
cmp
sub
in
in
mov
adc
mov
mov
fs
scas
jle
mov
daa
push
cwtl
sti
scas
insl
bswap
sbb
mov
sahf
pushw
das
mov
xor
pop
jecxz
push
inc
push
mov
mov
movsl
mov
mov
adc
xchg
in
in
dec
arpl
push
jns
mov
pushf
test
pop
cmc
cmp
inc
out
sbb
leave
sbbl
in
pop
stc
daa
test
lcall
jae
adc
sbb
sub
cmp
and
in
sbb
lret
or
sub
scas
jmp
adc
xchg
sbb
mov
and
mov
sbb
ficomps
mov
cmp
mov
icebp
or
push
test
outsb
hlt
mov
adc
sbb
je
repz
cmp
test
jmp
xorl
mov
and
loopne
es
test
mov
jbe
pop
rorl
push
stc
test
xchg
inc
or
push
les
mov
and
fmull
cmp
jmp
addr16
add
add
mov
push
push
mov
mov
or
sbb
xor
add
dec
inc
lock
ficoms
xchg
stos
addr16
std
jmp
or
imul
aas
mov
mov
ret
dec
sar
xchg
sbb
arpl
lret
lods
xchg
ljmp
push
andl
mov
imul
movl
xchg
adc
popa
or
inc
xor
and
cltd
xorb
jg
jbe
test
mov
adcb
cmp
insb
test
aad
leave
clc
cld
stos
sbb
addr16
xchg
mov
push
pop
movb
cmp
inc
mov
leave
jp
sbb
cmp
repz
out
add
adc
in
or
cmp
adc
out
sub
outsl
xchg
outsb
pop
popf
cmp
incl
loope
das
cs
outsl
int
xchg
sub
iret
sbb
push
cltd
sbb
pop
sbb
inc
lods
xchg
loope
mov
das
fbstp
mov
or
jo
mov
xchg
loopne
jge
call
lock
mov
aaa
arpl
fadds
jns
jne
cltd
mov
sbb
test
mov
add
xchg
sub
jo
test
ret
mov
xchg
insb
movsb
mov
lea
add
push
mov
push
lds
add
sub
xlat
or
inc
xchg
jmp
mov
sub
andl
and
adc
lods
jg
sbb
lea
push
push
pop
repz
cmp
pushf
inc
int
sbb
ljmp
add
adc
jecxz
shlb
add
xchg
call
sub
ja
jge
adc
cli
pop
arpl
push
mov
stos
movsl
cmp
jmp
outsl
jp
fs
add
imull
pushf
loop
cmpl
pop
mov
nop
lahf
es
pop
add
add
xor
pop
sbb
test
ret
and
cmp
mov
xchg
dec
sub
ljmp
jno
loope
pop
outsl
icebp
mov
inc
lds
push
test
pusha
fistps
cmpsl
adc
pop
fdivrl
xor
dec
inc
mov
xor
inc
or
jbe
pusha
xchg
jg
in
fadds
loope
das
push
and
pop
dec
decb
je
sahf
ss
mov
icebp
or
push
jno
cltd
mov
divl
mov
mov
sahf
add
xlat
and
dec
jg
mov
mov
incb
inc
jne
outsb
ljmp
insl
xor
push
sbbl
lret
or
adc
inc
ret
fisttpll
cwtl
push
movsl
xchg
lds
and
mov
jnp
lock
inc
repnz
push
shrb
inc
jmp
lods
mov
dec
jbe
or
push
decb
xchg
insl
or
and
and
fwait
jecxz
jg
into
sbb
fmulp
cmp
xor
subb
out
inc
dec
cwtl
jne
cmp
notb
pop
dec
jle
xor
frstor
mov
es
mov
loop
cmp
dec
cmpsl
in
lahf
arpl
mov
imul
mov
test
sub
cwtl
inc
xor
je
sbb
mov
push
mov
ret
cli
dec
ljmp
mov
adc
mov
jno
cmp
mov
sbb
fists
mov
repz
mov
lret
fisubrs
jnp
push
addr16
or
movb
add
lods
jne
cwtl
popa
jns
mov
imul
mov
jae
popa
cmp
ljmp
jne
jb
cmc
jmp
popa
or
iret
fsubrs
pop
inc
mov
pushf
push
iret
jp
imul
cwtl
fisubs
insb
sub
in
or
sub
push
jle
and
push
cli
add
sub
and
enter
stos
js
mov
shrl
and
orb
mov
call
std
insb
xchg
imull
iret
inc
or
and
fistpl
sub
adc
ljmp
test
xchg
xor
enter
mov
das
shlb
pusha
sbb
xchg
pop
xlat
jne
dec
mov
sbb
pop
iret
cmpsl
test
mov
pop
lods
hlt
ret
sbb
test
into
mov
sub
and
icebp
cwtl
jp
adc
jno
pop
jno
add
mov
pop
dec
xor
hlt
push
and
imul
rcl
out
out
jmp
pop
rcrb
xchg
aam
push
cli
aaa
frstor
rol
push
mov
popa
and
in
and
add
fcmovb
gs
clc
movsl
push
adc
shrb
inc
insb
jb
imul
daa
cld
in
hlt
and
xor
daa
add
sahf
out
ret
in
xchg
outsl
test
sbb
adc
xor
mov
dec
leave
sub
dec
adc
test
cld
inc
fninit
push
popa
movsb
in
roll
fdivr
cmpsb
dec
and
testb
sub
pusha
pop
and
cmp
mov
mov
pop
dec
pop
lahf
or
push
mov
mov
xor
insl
ds
xor
addr16
push
sub
sub
pop
sub
flds
push
pop
leave
sub
mov
jl
lods
enter
int3
lods
iret
cld
int
or
fwait
outsl
dec
call
sub
out
movsb
pop
push
jmp
and
les
mov
leave
jg
mov
sarl
xchg
lret
test
and
mov
das
imul
enter
or
andb
mov
add
xor
adc
sbb
mov
add
int
fwait
and
push
push
mov
aas
pop
in
sbb
div
jl
in
cmp
les
es
lret
out
or
push
sbb
mov
stos
nop
stos
xchg
shll
mov
lcall
ret
mov
adcb
ljmp
inc
mov
mov
jmpw
pop
int3
xchg
dec
pusha
and
mov
das
inc
imul
fmull
inc
mov
dec
rcr
in
ljmp
jbe
test
and
push
add
sub
add
cmp
xor
loop
les
cmp
cmpsb
repnz
fsubl
into
jb
aaa
stos
xchg
iret
js
aaa
xchg
push
pop
and
jle
lods
inc
mov
pop
mov
movsb
dec
in
ret
sub
push
add
test
leave
fs
xor
aad
into
dec
std
xor
sbb
movq
or
sub
mov
pop
add
cltd
arpl
icebp
pop
sti
mov
lret
dec
cmp
sbb
jno
imul
push
or
push
lret
sbb
loop
sub
outsb
setge
ja
adc
adcb
mov
pusha
in
adc
lock
faddl
or
or
jle
loope
cmp
dec
pop
out
fisubrs
mov
mov
jl
lods
or
or
ss
cmp
cmp
inc
sub
push
inc
push
repnz
dec
aas
je
dec
inc
dec
jmp
test
sti
adc
aad
lret
inc
popf
xor
sub
mov
sub
mov
xchg
or
scas
jmp
cmpsl
jmp
loope
in
pop
fcmovb
adc
lcall
push
nop
dec
xor
mov
out
jno
jmp
mov
push
sub
xchg
dec
and
outsl
aam
inc
sbb
cmpsl
dec
mov
xor
mov
mov
adc
std
jbe
in
push
mov
and
xor
int
je
fnstenv
sbb
sub
das
jo
fdiv
xchg
add
pop
sbb
fs
xor
adc
js
roll
stc
push
jb
inc
push
sbb
pusha
divl
das
push
in
cmpsl
call
test
mov
cmpb
shl
test
mov
jg
cs
add
rol
cltd
pop
mov
jge
xchg
mov
cmp
mov
cmp
adc
into
loopne
cmpsb
popf
test
adc
xor
inc
xor
jnp
int3
mov
xor
dec
call
sub
pop
lds
ss
or
cmp
lea
add
sahf
jnp
sub
jle,pt
mov
sti
mov
movsb
aam
fdivrp
sub
aaa
out
enter
push
dec
loopne
dec
shll
sbb
fiadds
outsb
lahf
mov
jmp
mov
jae
push
lea
sub
shr
xor
sub
mov
mov
fcomp
movaps
sbb
push
pop
ljmp
adc
mov
mov
jb
dec
lret
jmp
jmp
pop
sbb
addb
nop
das
jne
xchg
into
int3
aad
enter
out
and
mov
lods
dec
and
mov
pop
jo
sbbb
addb
xlat
jnp
cmovs
and
pop
or
push
cmp
xor
dec
popa
cmp
push
push
dec
jg
add
mov
test
aad
subb
fdivrs
inc
inc
push
clc
and
and
jmp
xchg
mov
loop
in
xor
mov
pop
in
in
out
test
xchg
sub
rorb
sub
and
or
lcall
leave
bound
insl
adc
js
jmp
movsb
enter
mov
addb
shl
cmpsl
aas
add
test
data16
clc
dec
cmpsl
sub
ja
lcall
add
mov
mov
aaa
cmp
js
outsl
mov
pop
pop
scas
in
fidivl
aam
movsb
cmp
mov
xchg
and
in
push
rclb
movb
dec
subl
ficompl
add
xor
fists
or
and
pop
pop
add
mov
jg,pt
v4fmaddps
loop
dec
lcall
mov
movsl
sti
mov
sub
push
mov
adc
fsts
mov
ret
cmp
mov
jl
test
inc
mov
mov
jo
fisttpll
adc
mov
pop
sub
data16
cwtl
repz
sbb
mov
cld
mov
xor
aam
leave
repnz
pop
outsl
cmp
and
xchg
mov
loopne
les
out
aas
repz
jle
subl
fldenv
sub
movsb
negl
and
testl
cmp
mov
ret
xor
in
mov
adc
sbb
push
cmp
inc
enter
mov
jno
cmp
imul
pop
dec
std
stos
test
inc
mov
or
outsb
mov
dec
test
mov
sti
mov
idivl
iret
aas
cld
dec
test
das
jb
insb
fldl2t
cmp
xor
inc
out
popf
push
dec
cs
divb
fxam
mov
push
scas
or
sub
xor
cld
inc
in
cs
test
movsl
add
je
or
xlat
and
xchg
sbb
and
sbb
adc
and
mov
push
test
sarl
ljmp
or
mov
push
fdivr
jg
stos
mov
imul
inc
fwait
sub
add
imul
lods
mov
mov
call
xchg
adc
stc
lahf
fnstenv
mov
add
lock
pop
fdivs
dec
imul
jmp
outsb
jmp
cltd
in
ret
das
shrl
adc
and
jb
frstor
xchg
mov
test
lea
push
les
jmp
bound
inc
pop
je
in
dec
inc
push
test
pop
fistps
lds
arpl
ss
adc
in
sub
testb
out
in
sbb
add
xor
mov
xor
int3
aam
or
sti
cli
rcrb
jno
pop
mov
mov
enter
outsb
lahf
mov
dec
cmp
lahf
xor
roll
je
dec
fcomp
ljmp
mov
cmp
pushf
jne
and
cmpsb
add
stc
leave
addr16
out
sbb
movsl
inc
repnz
stc
loop
dec
and
push
insl
sub
in
dec
lods
sub
jne
insb
and
and
and
and
shlb
into
cli
fnstcw
push
push
push
xchg
leave
cmp
loopne
mov
add
dec
lock
loope
rcll
out
cmp
or
sub
jmp
mov
fbld
inc
popa
aas
test
add
cmp
sahf
ss
mov
sbb
push
pop
mov
pop
pop
shrl
pusha
adc
xlat
adc
insb
cli
outsl
jb
mov
outsb
mov
push
dec
or
loopne
jae
imul
pop
aad
outsb
cld
fiaddl
aad
inc
xchg
pop
arpl
pop
xor
sbb
adc
fsubp
scas
adc
push
xchg
mov
cmp
lcall
movsl
mov
jmp
add
test
or
sub
inc
dec
imul
inc
mov
int3
mov
sub
dec
push
insb
push
add
sub
mov
jmp
pusha
mov
push
and
xor
shll
sbb
subb
and
loopne
jp
jmp
popa
mov
sub
ljmp
push
push
adc
lods
out
add
pushf
loope
pushf
cmp
gs
mov
sahf
xor
int3
orb
jg
lahf
popf
shll
adc
ljmp
frstor
nop
je
jecxz
jl
cmp
mov
cltd
test
adc
stos
fsubrl
fbld
fadd
sbb
jl
sbb
mov
fwait
std
gs
gs
mov
stos
pop
cmp
xchg
jno
mov
dec
mov
lret
cmpsb
push
popf
or
add
mov
aam
pop
xchg
lods
push
lods
add
push
cwtl
push
andb
push
push
pop
xor
data16
jmp
fnstenv
rolb
jl
adc
mov
lcall
and
mov
add
cs
scas
mov
imul
mov
in
arpl
dec
fs
nop
sbb
or
sub
lcall
xchg
addr16
aaa
fdivrl
cmp
lahf
adc
fs
jge
mov
test
dec
outsl
xchg
je
pop
scas
in
pop
pop
sbb
sbb
inc
stos
insl
and
sahf
bound
push
mov
das
mov
add
daa
out
lock
fistl
inc
add
jg
dec
stos
adc
xor
sub
outsw
out
adc
hlt
mov
test
sub
jecxz
mov
pop
xchg
aaa
jb
adc
and
jo
pop
sub
jecxz
lret
xlat
xchg
mov
jle
jbe
sub
bnd
pop
lret
dec
mov
mov
stc
cmc
fsubrl
or
and
push
fnstcw
jne
jbe
push
sbbb
mov
inc
cmp
aam
mov
cli
icebp
mov
cmpsl
nop
loope,pn
rclb
sbb
or
out
sub
push
movsl
mov
sbb
push
pusha
cld
dec
or
xor
ja
addr16
pop
jmp
mov
adc
xchg
push
dec
out
ds
insl
mov
sbb
leave
xchg
aad
pop
imul
scas
xchg
das
lods
lcall
arpl
jp
mov
fcompl
hlt
sub
fbstp
andb
orb
es
push
repz
mov
or
rcrl
pop
mov
test
push
push
mov
rclb
mov
cmp
lods
jle
lods
call
mov
std
adc
dec
xchg
fidivrs
adc
xor
fs
repnz
cmp
mov
fdivrp
or
mov
testb
push
cmp
xchg
les
in
scas
idiv
aam
push
aam
and
inc
xchg
adc
and
orb
xor
scas
push
loope
inc
leave
pop
hlt
add
aad
sbb
pop
es
sti
ds
loopne
xor
push
ret
xchg
sub
int
shlb
add
pop
adc
shrl
xchg
les
lcall
in
dec
cmp
pshufw
xorb
fstpl
jo
pop
xchg
dec
idiv
push
mov
pusha
fistl
pop
adc
add
pop
add
mov
lcall
jbe
xchg
stos
jp
push
xor
and
dec
lcall
mov
frstor
dec
lock
in
int3
lock
inc
xlat
into
scas
inc
dec
mov
sarl
clc
dec
mov
int3
rorb
pop
ret
scas
or
imul
push
out
in
dec
sti
xor
movsl
xchg
dec
fnstcw
rcll
lret
mov
mov
leave
stos
aas
ret
jge
sub
ret
test
cmp
mov
xchg
xor
stos
cmp
popf
and
ljmp
mov
das
jo
jp
adc
outsb
mov
stos
cmp
mov
sub
mov
psubusw
jnp
fbld
arpl
lods
mov
clc
sahf
sbb
pop
push
mov
lcall
lahf
aam
dec
arpl
mov
test
jns
enter
mov
and
lock
stos
mov
outsl
xchg
mov
mov
aaa
ljmp
cmp
mov
pop
out
mov
outsl
or
sub
jb
inc
dec
jmp
mov
mov
lods
or
add
pop
popf
bound
addl
orb
pop
movsb
sbb
pop
sbb
ret
jl
jmp
jle
clc
lret
imul
xchg
loop
add
push
movsl
push
and
je
xlat
sti
lret
ds
pop
icebp
xchg
int3
xchg
sub
push
xor
mov
jne
nop
add
xor
jns
lea
mov
sbb
push
xchg
jnp
in
add
mov
lret
xor
xchg
cltd
sub
xchg
pop
mov
sbb
add
gs
cmp
pusha
out
push
lcall
das
stc
and
aam
pop
adc
push
sub
stos
adc
mov
aad
inc
rcr
adc
push
shr
mov
jae
xchg
out
aas
cmp
roll
fdivl
in
sti
cmpsb
push
sub
fisubs
push
insb
xchg
cli
or
sub
in
rorl
mov
shlb
lds
out
mov
mov
add
mov
pop
shll
cmp
pop
mov
sarb
sti
jno
lock
loopne
xchg
lahf
xor
sbb
mov
imul
jg
pop
xor
fstpl
push
cltd
cmp
daa
xor
xor
movsl
jnp
test
mov
xchg
pushf
mov
int3
outsb
mov
mov
pusha
je
leave
ljmp
sbb
or
jno
xor
out
adc
lods
jl
pop
js
push
push
mov
popa
data16
lea
mov
nop
loop
pop
cmpsl
xchg
xor
adc
mov
add
flds
cs
in
subb
inc
lcall
movsl
xchg
clc
dec
mov
or
sub
sbb
pop
sub
cmp
roll
or
sub
fs
xchg
dec
or
sbb
mov
pop
mov
inc
cmp
sub
fisubrl
int3
icebp
pop
aam
lahf
icebp
fistps
mov
stos
push
push
push
mov
mov
and
jecxz
xchg
xor
mov
and
cmp
inc
xlat
push
ror
push
push
pop
sbb
filds
cs
jno
gs
xchg
das
mull
push
push
fdivrs
or
mov
mov
inc
xor
pop
gs
pushf
jl
push
or
xchg
stos
test
repz
outsb
sub
test
mov
cmpsb
cmp
sub
mov
ds
dec
aas
pop
cmp
adc
mov
repz
rcrb
cmp
and
mov
negb
daa
sbb
ljmp
dec
mov
add
sub
insb
mov
jbe
mov
incb
cmpl
xchg
xor
imul
out
jl
inc
roll
test
cmp
mov
or
cmp
xor
in
inc
roll
sbbl
movsb
cmp
sbbl
or
stos
sbb
mov
test
pop
jbe
mov
aad
xor
cmp
and
dec
xor
mov
mov
mov
mov
ljmp
push
push
cmp
pop
xchg
sbb
pop
ljmp
ret
mov
adc
mov
dec
std
xor
fstpt
xchg
dec
jle
push
and
and
xlat
fisubs
dec
popf
push
sub
iret
mov
xchg
cltd
sub
xchg
cmp
rclb
push
pop
inc
testl
dec
out
lcall
pop
dec
pop
pop
stc
ficomps
aaa
pop
sub
lds
aas
loope
fimuls
or
decl
sbb
out
cmp
addr16
leave
outsb
sub
sub
sub
mov
xchg
hlt
and
test
xor
fstps
out
nop
mov
push
stc
xchg
xchg
jo
outsl
mov
repz
pusha
cs
loop
and
das
jge
sbb
outsb
mov
loope
addr16
jl
sbb
jnp
sbb
popf
lret
dec
adc
cltd
cltd
add
in
lods
add
mov
xor
loopne
testl
mov
xor
xor
mov
pushf
jo
and
movsb
out
xchg
pusha
repnz
xor
pop
and
lahf
rorb
dec
pushf
mov
mov
push
roll
out
push
fdiv
daa
test
lock
pop
xorb
cltd
adc
pop
xchg
pop
movb
mov
push
jbe
push
dec
mov
jmp
inc
sub
or
or
sahf
aad
test
and
mov
daa
add
inc
push
in
shlb
cmp
daa
add
jmp
pop
mov
insl
mov
adc
std
adc
loope
dec
rorb
test
sbb
mov
leave
ljmp
stos
pop
xchg
sbb
mov
mov
rorb
bound
sbb
lret
and
adc
cmc
ret
js
insl
adc
cld
xor
fisubs
mov
popa
sti
int3
push
fmull
jo
ljmp
outsb
adc
and
in
mov
sbb
or
xor
ret
push
jae
xchg
add
outsb
mov
xor
jl
sbb
and
into
jge
mov
mov
imul
add
ret
adc
push
lret
sbb
push
daa
adc
push
out
mov
movsl
imul
cmpsb
cmpsl
cmc
ljmp
je
mov
mov
mov
jbe
es
jns
mov
jae
xchg
fwait
dec
or
mov
push
mov
ss
mov
sbb
aas
popa
and
or
or
es
lock
jmp
dec
test
pop
dec
lcall
and
test
stos
ljmp
rolb
xchg
lret
cmp
fbld
and
add
ret
jl
cmc
xorl
sarl
mov
jmp
repnz
popf
mov
sti
dec
das
pop
lock
xor
and
mov
fs
mov
mov
shll
scas
jnp
or
ds
enter
push
lcall
hlt
mov
jno
enter
push
ljmp
mov
movsb
push
mov
push
sbb
in
hlt
inc
inc
push
jg
sahf
pushf
repnz
gs
inc
jl
push
test
ljmp
cmp
movsb
sub
xor
and
rcll
mov
fsubrl
or
or
xor
loope
sbb
xor
sbb
mul
add
jae
mov
xor
icebp
les
icebp
add
repz
cld
xor
loopne
cmp
push
sbb
add
cli
push
xor
leave
add
sbb
xchg
cmp
cmp
loop
mov
mov
ds
outsb
xor
dec
aaa
lds
jg
push
loop
dec
mov
or
ja
lods
into
xchg
push
popa
dec
mov
cmp
inc
cmp
push
mov
dec
sbb
xor
push
xor
jmp
subb
out
mov
mov
and
jl
mov
mov
sbb
add
cmp
std
cmp
hlt
push
xchg
lods
shlb
xchg
lds
push
fs
in
movsl
inc
dec
cmp
data16
dec
inc
movsb
addb
jb
loop
cli
jecxz
out
outsl
pop
fucomip
addl
push
lret
sarl
and
jne
or
es
cli
insl
andb
push
jg
shll
aad
loopne
dec
es
sub
pop
adc
insl
inc
test
dec
out
adc
cmpsl
mov
filds
outsb
cmc
leave
mov
ret
lahf
shlb
test
iret
inc
loopne
cmp
mov
bound
pop
jo
cmpsl
add
cltd
add
lock
xor
pusha
and
mov
push
xchg
mov
cs
shrl
testl
sbb
add
dec
loope
cmp
xchg
mov
mov
jle
pop
das
mov
popa
les
dec
push
std
or
pop
push
jo
test
cmpsl
insb
sub
js
out
ljmp
and
mov
xor
stc
cmp
test
sbb
mov
call
test
and
subl
pop
enter
xchg
ds
xchg
ret
sbb
mov
xlat
cmc
ja
adc
stc
pop
int
sbb
divl
xchg
sbb
insl
inc
mov
ja
in
jp
sbbb
test
xor
pusha
std
movsb
fs
leave
movsl
sub
mov
clc
xchg
iret
and
out
and
mov
cmpb
add
or
add
jb
cwtl
add
fisubrl
fwait
pusha
icebp
push
jne
cs
mov
and
imul
incl
enter
jne
das
fcmovnb
or
shll
push
fmulp
shll
mov
int3
dec
lahf
mov
mov
out
scas
cs
sahf
movsb
and
subb
out
dec
aas
mov
data16
push
adc
jmp
push
xchg
dec
mov
nop
test
cmp
fsubs
mov
push
jge
sbbb
imul
jmp
or
push
xor
xchg
daa
sahf
dec
mov
movsl
jnp
icebp
js
sbb
sub
xchg
mov
rcr
dec
jge
xor
lds
jae
jb
lds
add
jbe
adc
pop
sti
xchg
inc
pop
dec
xchg
lahf
mov
mov
out
xchg
int
inc
cmpb
enter
adc
jecxz
push
icebp
ss
and
sbb
aaa
repnz
data16
pop
push
out
add
int
ds
rcrb
sub
and
inc
fsubr
adc
cmpsb
add
fildll
lahf
test
fdivs
adc
scas
mov
ja
sub
jb
pop
mov
repnz
icebp
inc
push
mov
cmpsb
out
mov
mov
sub
fsubrp
es
out
lods
jnp
ret
xlat
outsl
mov
sbb
lods
or
cmpsb
jl
dec
xor
xchg
sbb
add
xor
lock
test
add
rcl
je
popa
jnp
stos
pop
inc
lea
movsl
pop
repz
xchg
jbe
fiadds
sub
mov
push
or
add
decb
arpl
inc
jle
push
sarl
mov
sub
rorb
inc
sub
jl
pop
jns
ds
sub
pushf
sub
jmp
test
xchg
xchg
and
sub
cwtl
jbe
test
aam
subb
or
inc
fmul
push
test
jmp
out
int3
mov
push
xchg
pmulhw
jns
sub
adc
xor
insb
aam
loopne
mov
jle
aad
jl
mov
icebp
jge
imul
cmpsl
in
test
and
test
sbb
sub
push
fimull
call
xor
xchg
das
data16
push
sbb
roll
or
sar
fs
lds
in
or
xchg
xor
or
sbb
fsts
dec
jecxz
shrb
arpl
jecxz
test
and
ja
iret
scas
inc
out
dec
dec
stc
dec
mov
push
jl
cmc
ror
mov
jo
mov
push
cld
fisubs
add
cmpps
jb
xchg
xor
inc
sbb
xor
push
mov
jge
cmp
mov
jns
xchg
test
lods
adc
orb
mov
xor
inc
loope
aaa
idivl
mov
cmp
out
push
and
hlt
xor
dec
inc
mov
mov
mov
jl
shrl
xchg
push
jb
scas
roll
gs
andl
sub
cmp
pop
and
mov
sbb
mov
xor
and
std
movsl
cmp
iret
inc
fisttps
lea
adc
dec
sub
jno
mov
fistpll
push
adc
out
jmp
lret
arpl
mov
adc
xchg
sub
add
shll
pop
fidivrl
shll
cmpsb
popf
icebp
scas
or
rorb
mov
cmp
xor
enter
jl
fisttpl
in
test
fld
mov
cmp
imul
stos
dec
mov
out
add
pop
cmp
xchg
or
in
mov
add
fcoml
dec
jno
aas
aas
loopne
jp
mov
aaa
out
arpl
subb
jp
and
daa
repnz
into
xchg
fs
je
daa
imul
xchg
cmp
mov
fadd
pop
in
adc
ja
push
lea
push
and
out
test
mov
out
cmp
fcompl
les
mov
sbb
sbb
test
or
fs
xchg
iret
adc
imul
aas
fs
xor
test
inc
xor
or
jl
xchg
xchg
and
andb
movsl
fistps
xchg
dec
add
add
je
iret
dec
and
ficoms
rcrb
fucomip
cltd
and
pushf
push
movsb
or
es
dec
out
jmp
mov
push
mov
in
sub
hlt
nop
fldenv
xchg
in
dec
and
pop
xor
lods
cmc
stc
adc
dec
push
xchg
jae
clc
pop
jb
lea
in
and
mov
xor
imul
mov
loopne
xor
push
add
pop
jne
into
in
push
lea
inc
int
pop
jl
and
push
cmpsb
dec
mov
shrl
mov
pop
push
mov
mov
xchg
jbe,pt
xchg
movzbl
jnp
out
sub
push
clc
mov
inc
push
and
test
cli
sarl
mov
dec
inc
cld
push
imul
inc
dec
int
xor
jo
lea
push
nop
xchg
fucompp
mov
test
jns
cltd
inc
pusha
dec
cs
pop
mov
aaa
and
icebp
jge
sbb
lcall
or
dec
shld
dec
movsb
sbb
clc
stos
push
out
stos
or
push
test
fsubrl
movsl
mov
pop
adc
mov
push
or
mov
adc
mov
lret
cli
loop
mov
imul
add
push
scas
xchg
jnp
adc
cmc
popf
mov
or
fidivrs
test
sub
or
pop
pop
push
xor
dec
rcrb
scas
xlat
fdivs
xchg
outsb
mov
aad
aaa
idivl
subl
push
ror
jnp
sti
aaa
sbb
xor
gs
rcrl
aad
and
lds
mov
mov
repnz
add
mov
aaa
idiv
lods
test
jecxz
mov
sub
jecxz
push
push
cmp
adc
fwait
nop
aaa
push
imul
jl
sub
sub
pusha
out
jne
cmpsl
adc
cmp
xchg
data16
clc
fxch
xor
sub
bound
fsub
in
int3
adc
pop
mov
mov
in
mov
repnz
movsb
xchg
mov
or
ss
cmpsb
push
mov
negl
enter
mov
aas
ret
repnz
sti
mov
es
xlat
sub
cmp
mov
cltd
shlb
mov
xchg
lea
mov
mov
aaa
mov
jno
pop
adc
lcall
outsl
stos
sbb
cmp
xchg
ror
rorl
push
iret
in
pushf
fldl
inc
imul
mov
pop
aaa
add
cltd
inc
bound
pushf
hlt
sbb
loop
mov
stc
cs
and
adc
je
call
in
mov
std
dec
mov
mov
popa
and
sub
movsl
es
sub
out
cmp
loope
dec
dec
dec
shrl
adc
inc
and
xchg
sbb
pop
sub
or
jge
and
repz
cli
xor
pop
or
fidivrs
jp
nop
test
dec
punpcklbw
jnp
mov
lods
stos
pushf
fs
aaa
sbb
out
pop
inc
int
pop
cmp
push
ljmp
shl
les
test
xor
aam
xlat
lea
dec
loope
stc
sbb
push
stos
enter
loopne
mov
jo
jmp
clc
pop
dec
adc
rclb
xor
mov
jo
or
out
xchg
arpl
xchg
mov
or
cli
mov
push
jno
or
xor
nop
or
mov
pop
mov
cltd
movsb
stc
fstps
add
fiaddl
fwait
sarb
das
lods
out
xor
mov
int
aad
repz
lret
lds
imul
xchg
out
addr16
cmc
xchg
leave
cmp
lret
es
add
mov
in
jo
pop
mov
sbb
test
push
bound
dec
clc
in
sbb
sti
iret
fists
dec
push
movsl
bnd
test
mov
int
je
pushl
xor
cmpsl
cmp
push
out
pop
ja
xchg
decb
mov
xchg
mov
jns
mov
jbe
out
lock
cmp
jp
in
mov
std
dec
lret
xchg
fdivs
out
mov
dec
xor
cmpsb
stc
loopne
push
mov
mov
inc
mov
test
fsub
add
push
insl
jnp
rcrl
push
jge
inc
sahf
in
rclb
fcomp
stos
sarl
or
mov
xchg
aaa
repnz
mov
daa
pop
dec
pop
xor
push
arpl
cli
mov
mov
stos
mov
push
bound
mov
mov
in
push
mov
adc
or
sbb
push
add
clc
cmp
lea
xor
mov
mov
pop
cmp
sbb
adc
fwait
xchg
xchg
aad
mov
push
stos
test
fidivl
notl
push
xorl
stos
dec
adc
inc
push
repnz
and
cmp
jp
mov
movsb
jbe
xchg
jnp
cmp
sub
setl
fdivrp
mov
sbb
jp
movsl
mov
pop
movsl
inc
faddl
xorb
lahf
inc
cmc
xchg
fsubs
pop
jle
pop
mov
lret
push
lar
imul
mov
ficoml
push
adc
xchg
pusha
int
mov
arpl
out
iret
mov
lahf
js
aad
dec
pushl
jo
int3
dec
mov
push
adc
aas
hlt
test
jne
test
jb
inc
les
jb
fnstenv
pop
push
push
int
or
ljmp
clc
data16
aas
sarb
and
jbe
or
sbb
dec
test
mov
outsb
inc
push
xlat
dec
adc
xor
xchg
loopne
mov
xchg
imul
dec
push
pop
mov
sub
je
imul
in
mov
loopne
sub
cs
es
mov
fdivr
jmp
ja
sbb
rclb
jle
imul
es
pop
add
ss
adc
popf
cmp
test
imul
loope
stos
and
pushf
push
lods
jbe
cmp
insl
add
dec
jbe
dec
fdivrs
test
and
jle
es
and
or
mov
dec
and
cwtl
mov
aam
or
dec
add
addr16
mov
dec
inc
pop
mov
scas
popf
cld
mov
sub
push
cmp
inc
dec
jo
leave
pop
subb
testb
das
std
dec
leave
dec
xor
inc
pop
mov
mov
arpl
das
imul
aad
js
fadd
push
out
mov
repnz
lret
fnstsw
push
cmpsl
cwtl
pop
rolb
mov
sbb
sarl
addr16
adc
rorl
mov
jo
and
je
fs
imulb
pop
xor
cmp
sub
ljmp
cmp
lods
ret
lea
push
cmc
pusha
or
xchg
into
ret
mov
adc
lret
jnp
and
in
or
std
cmpsb
and
lret
mov
movsb
shll
and
xchg
lods
inc
mov
dec
lfs
or
xor
dec
jmp
insl
mov
push
daa
xchg
and
std
mov
sub
ljmp
sbb
loope
xor
cmpsl
mov
pop
fiaddl
mov
pop
imul
xchg
push
pop
lret
sub
rcrb
mov
cmp
lret
leave
jnp
push
push
sbbl
jae
mov
mov
mov
adc
or
lock
push
add
lods
push
push
ret
js
fsubl
es
mov
in
popf
mov
pop
xchg
jg
aad
call
paddd
push
sbbb
sub
nop
icebp
subl
out
loopne
cli
lret
sub
dec
pop
stos
nop
mov
movsb
mov
sbbl
sub
pop
sub
push
cmp
push
roll
xor
pop
ret
into
cmp
pop
shll
sub
test
push
sub
cld
shrl
inc
lahf
pop
js
fsubrs
sbb
and
inc
jno
and
or
adc
dec
pop
mov
push
mov
xor
lods
mov
mov
sbb
in
push
mov
and
mov
sti
fiadds
mov
cwtl
push
adc
adc
out
in
les
stos
sbb
dec
pop
aad
mov
ljmp
pop
sbb
adcb
pop
push
ror
stc
leave
test
pop
icebp
sbb
cmp
sbb
stc
inc
mov
into
cmp
mov
movsl
sti
mov
arpl
sub
ds
into
divl
xchg
mov
cmpsb
out
repnz
pop
stos
and
mov
pop
inc
test
xor
dec
sub
pushf
xchg
add
aas
cltd
lahf
stos
xor
mov
push
mov
outsl
push
and
mov
cmp
pop
popa
mov
jge
mov
pop
lock
int
jg
dec
pop
pop
aaa
ret
mov
shrb
xchg
mov
mov
push
movsl
mov
clc
push
push
or
rorl
das
test
adc
pop
fbld
popf
test
cmpsl
aas
fidivl
lods
adc
dec
lcall
jbe
xchg
dec
push
out
cmp
sti
jne
loope
shlb
sbb
outsb
jnp
imul
push
cmp
inc
xor
loopne
or
mov
les
ja
or
or
mov
push
pop
js
sbb
popa
out
cmp
cmp
in
and
dec
sub
mov
data16
jne
fstl
jbe
sbb
xchg
sub
aas
lret
cmpsl
cmp
cmovle
mov
int
xchg
test
add
cltd
xlat
sub
cmp
int
ret
xchg
mov
fimuls
dec
in
pop
ds
xchg
lahf
add
xchg
push
movsb
mov
adc
out
sbb
lar
mov
mov
mov
cmpsb
sub
fisttps
pop
mov
loop
xor
push
mov
aas
push
scas
pop
push
int3
pushf
xlat
arpl
mov
or
jecxz
test
fwait
pop
daa
jmp
roll
mov
pop
push
lock
hlt
adc
je
dec
mov
push
cld
jecxz
mov
rorb
xchg
call
loop
outsl
sbb
out
fsubrp
mov
ret
xchg
jge
mov
aam
sbb
xor
and
adcl
ds
into
fildl
ja
mov
xchg
xor
or
or
ret
mov
les
lods
or
mov
adc
inc
icebp
leave
cmpsl
xchg
rolb
out
xchg
xchg
das
rcl
push
xorb
xchg
pop
movsl
cmp
cmc
and
mov
lods
insb
dec
sub
xchg
mov
add
push
and
loopne
sub
divl
mov
xor
test
inc
les
insb
and
insb
hlt
repz
lcall
es
xor
or
and
pop
add
mov
adc
and
test
inc
sti
mov
sub
cmp
push
xor
jns
movsb
adc
pop
outsl
pop
add
cmp
mov
sbb
mov
rolb
mov
lods
add
dec
jne
stos
sub
rcrb
adc
ljmp
xchg
sub
cmc
add
out
pop
jl
dec
add
lret
scas
xlat
jg
sub
lods
cld
pop
push
sbb
jnp
stc
fistps
mov
adc
push
shll
cmp
push
xchg
jmp
out
xchg
inc
mov
hlt
push
int
daa
adc
ss
lods
sbb
scas
adc
cld
pop
daa
iret
pushf
mov
test
lcall
xlat
cmp
cmp
push
es
out
cmp
xchg
andl
xor
ja
clc
xor
jnp
pop
je
jmp
fldenv
inc
mov
popl
push
jo
push
push
pop
push
insl
dec
imul
test
or
xor
test
je
das
xchg
mov
test
scas
pushf
or
xchg
mov
lds
jns
fdivrs
pop
inc
cmp
cmp
aad
lcall
jne
sbb
mov
xchg
iret
dec
movsl
pushf
inc
stos
and
inc
mov
outsb
lret
sahf
cmpsb
subl
lds
or
in
std
dec
and
pop
add
dec
in
scas
sbbl
fld
sub
adcl
leave
push
call
jl
sbb
jmp
test
fcmovne
das
in
insl
sahf
js
ret
cmc
jp
insb
call
jl
dec
in
jns
in
ficoms
aaa
std
jp
sbb
pushf
mov
stos
cld
push
lret
mov
xchg
pushf
test
push
jmp
pop
mov
push
xchg
push
iret
aad
das
mov
cld
push
ds
sbb
push
aaa
sti
ljmp
rcll
imul
fwait
mov
push
gs
movsb
loopne
xchg
lods
sub
daa
jp
cmc
jne
jae
mov
int
mov
dec
aam
pop
inc
loopne
int
mov
in
mov
adc
jmp
adc
mov
dec
pop
stos
out
aaa
mov
sbb
jl
jge
add
push
push
add
faddl
push
add
rcll
sbb
ss
push
or
daa
or
andb
aaa
add
and
call
mov
mov
enter
cmp
or
dec
mov
mov
mov
mov
fnstenv
leave
inc
mov
das
pop
xor
scas
or
rorl
and
aas
sbb
icebp
mov
addl
xchg
jle
pop
enter
aam
push
mov
dec
cs
dec
outsb
lock
fsubl
or
mov
and
aam
pushf
cwtl
xchg
dec
cmp
mov
roll
mov
loopne
bound
mov
push
in
mov
jo
or
mov
in
mov
rclb
jno
dec
mov
iret
stos
mov
jns
inc
in
sahf
shrb
jmp
ret
pop
repz
xchg
int3
or
cmpsb
add
test
mov
push
popf
inc
ss
dec
inc
xor
pusha
xor
adc
inc
mov
loope
popf
cmp
iret
mov
sub
scas
rorl
dec
clc
xor
je
lahf
inc
aad
cld
addl
lods
cmp
add
rcrb
dec
mov
mov
xchg
jge
stos
sbb
outsl
movd
out
sbb
cmpsl
jnp
imul
add
add
aaa
scas
add
cmc
inc
push
or
aad
loopne
arpl
jno
jl
shll
xlat
imulb
xlat
adc
sti
enter
daa
sub
push
insl
rcrb
mov
in
loop
xchg
aaa
xchg
sbb
add
mov
cltd
xor
sbb
test
push
inc
dec
push
sub
lock
scas
test
mov
xchg
leave
inc
sub
mov
cli
shll
or
arpl
and
inc
sbb
xchg
xor
jb
stos
or
in
xchg
das
add
jne
xor
pushf
popa
frstor
pusha
sbb
mov
adc
popa
mov
sbb
mov
std
out
mov
loopne
xchg
ss
lahf
dec
cmp
mov
add
adc
lds
jae
ret
bnd
add
dec
int
cmp
cmp
pop
fcomip
ja
mov
stc
lock
and
or
mov
jo
sbb
outsl
jmp
sub
outsl
or
inc
ret
inc
vpshlq
jno
dec
cvtpi2ps
jno
mov
mov
jl
in
sub
xchg
fwait
mov
pshufw
aam
fwait
ja
mov
pop
add
adc
push
out
lret
arpl
xor
mov
or
push
scas
mov
pusha
jne
xchg
imul
out
dec
arpl
mov
and
jl
icebp
or
ffree
jmp
call
fwait
mov
ret
mov
push
movsl
add
mov
mov
push
mov
inc
fdivl
sbb
or
scas
mov
cmp
and
push
movsl
jl
les
fcom
cmp
aas
sbb
loopne
lods
push
nop
rclb
xchg
mov
dec
push
inc
imul
mov
ret
mov
sub
popf
jbe
and
shrb
stos
or
push
outsl
or
and
in
adc
jl
into
mov
lock
call
cmp
lods
mov
jmp
lea
push
arpl
mov
push
or
lret
jns
vlddqu
dec
outsl
loope
pop
push
stos
inc
sub
mov
or
lea
lods
cld
xchg
ret
and
xor
outsb
in
mov
xchg
xchg
call
in
insb
cmp
mov
pop
repz
enter
pop
push
lea
scas
sahf
jnp
dec
mov
add
mov
inc
loope
and
lret
mov
ss
stos
mulb
lods
test
aaa
jb
xor
and
loope
ljmp
lcall
xchg
notb
div
test
add
cmp
leave
and
loopne
sbb
pop
push
cmp
int
lea
stc
popa
dec
lock
adc
loop
mov
daa
mov
das
add
jle
mov
pop
sti
lahf
mov
xchg
rolb
and
mov
ficomps
outsl
and
mov
outsb
pop
lods
sub
rcr
add
add
out
xor
sbb
sbb
jnp
jo
into
mov
push
outsl
jmp
inc
pop
xchg
mov
mov
pop
out
mov
rcrb
dec
in
hlt
dec
ficoml
jle
gs
cmpb
je
mov
push
fsub
and
dec
adc
mov
jge
rol
cmc
sbb
fucom
adc
push
insb
rcrb
sub
inc
jae
fiadds
stc
test
mov
test
sti
cmc
cmpsl
repnz
xor
mov
jp
nop
cltd
cli
pusha
test
ljmpw
js
inc
add
xchg
cmp
adc
sub
xorb
jl
out
xor
in
stos
sti
cmp
xlat
mov
mov
jo
fistpll
mov
lods
mov
xor
sbb
pop
xor
movsl
pop
mov
sarl
ret
add
out
sbb
push
push
icebp
dec
dec
jl
sbbl
pop
imul
icebp
inc
jmp
and
out
and
xor
pop
xchg
mov
or
shrl
mov
mov
mov
cs
mov
jp
in
push
xchg
sbb
testb
int3
in
push
insb
lret
lahf
frstor
jg
pop
int3
xchg
mov
push
test
pop
shll
gs
sbb
sub
shr
lret
jae
adc
jo
sub
xor
mov
cmpsb
pop
dec
inc
mov
push
xor
mov
and
sub
push
rclb
push
mov
jle
fstps
push
push
pcmpeqd
dec
sub
mov
jg
push
imul
mov
daa
int3
mov
stc
cmp
lock
int
popa
add
or
into
push
dec
ret
rorl
int3
cltd
int3
imul
inc
fisubs
repz
sarl
dec
jp
xchg
xchg
aaa
dec
adc
and
mov
mov
adc
cmp
scas
xchg
repnz
scas
fistpll
movzbl
push
pop
das
test
in
jnp
mov
cltd
or
loopne
into
adc
fwait
je
leave
fcompl
stc
mov
mov
xchg
movsl
jo
out
add
pop
jge
mov
pop
xchg
sbb
imul
insb
jo
and
mov
xchg
fcomps
imul
push
jae
and
iret
call
inc
out
sbb
jnp
mov
arpl
int
lret
test
pop
cmp
in
test
sbb
cmp
in
xor
pop
icebp
in
test
and
mov
cwtl
out
mov
pop
orl
insl
sub
arpl
scas
int3
jecxz
push
xor
mov
rcll
sbb
nop
or
and
add
in
popa
out
sbb
les
out
lahf
les
sahf
cmp
jns
lods
or
cmp
stos
xor
jp
cmp
lret
cmp
xchg
lods
xor
push
mov
add
lret
inc
call
inc
cmp
shrb
add
push
test
jecxz
add
or
dec
nop
ret
mov
jle
cld
shll
clc
ss
pop
inc
push
call
add
jge
fiaddl
cmpb
or
or
cmp
call
adc
into
and
mov
andl
inc
repz
insb
mov
ret
shl
cmp
jle
push
cltd
in
inc
mov
jo
js
jbe
outsl
dec
mov
jge
and
sbb
mov
ror
data16
les
popa
lret
pop
cmp
insl
out
popl
fldl
ffreep
bound
cld
pop
sub
pusha
shlb
or
and
sub
bound
arpl
add
pop
cmp
jg
arpl
sbb
or
sbb
insl
loopne,pt
adc
ret
bound
insl
jg
cwtl
mov
xchg
adc
push
aad
sbb
movsb
cmp
sarb
xchg
lods
push
and
mov
mov
mov
dec
fs
push
xor
pop
adc
add
sub
jmp
sahf
call
mov
movsl
leave
aaa
jne
imul
aad
adc
in
sub
xchg
cmc
xor
outsl
inc
jg
xchg
adc
lods
or
xlat
lahf
insl
inc
sub
add
mov
std
mov
adc
jle
std
pop
fildl
bound
jp
cmc
test
cmp
addr16
lret
ret
push
push
fsubrl
xor
outsl
arpl
lret
in
and
mov
xchg
mov
pop
pop
fsubrp
mov
out
std
or
push
sti
xchg
xchg
movsb
out
xor
lods
daa
jnp
aam
adc
jl
sti
sbb
sub
loopne
leave
pop
mov
fs
cmp
cmpsl
mov
cltd
or
jge
cli
adc
push
loopne
sub
xchg
xor
or
sub
out
outsl
inc
cmp
ret
sub
push
addl
std
xchg
xchg
xchg
pop
fistl
xlat
mov
push
inc
and
mov
xchg
pushf
ljmp
fidivs
imul
add
scas
cwtl
jle
or
push
dec
sbb
push
mov
repnz
movsl
inc
dec
out
es
mov
addr16
sub
jle
and
scas
xor
mov
sbb
jnp
lahf
int
dec
jo
push
pmuludq
push
sahf
or
aam
cli
dec
orl
xchg
iret
pop
pusha
fwait
out
adc
mov
push
sbb
mov
shl
xor
in
sub
fdivs
cwtl
not
sahf
imul
inc
dec
subb
add
in
mov
sub
xor
xchg
jbe
imul
fs
ret
popa
shll
ljmp
cmpl
dec
test
sbb
cmp
daa
sbb
call
jg
sub
and
insl
sti
sbb
mov
imul
repz
inc
add
insb
cmp
push
lds
or
or
clc
mov
sar
hlt
sbb
adc
xchg
das
push
sbb
xchg
lods
jle
lds
iret
mov
adc
in
rolb
enter
int3
add
div
adc
pop
add
mov
popa
adc
adc
pusha
and
loopne
das
cmp
nop
test
cltd
repz
mov
jbe
xor
mov
les
ljmp
or
fcmovb
mov
and
flds
adc
sbb
lcall
mov
lock
fidivl
jl
ja
fistpll
dec
dec
and
push
jecxz
pusha
or
xchg
popa
jle
push
fidivl
fiadds
add
push
fcmovnbe
sti
xchg
imul
xchg
cmp
mov
sub
out
or
cmp
or
fldenv
sbb
fsubrl
inc
repz
push
lcall
clc
out
push
and
or
xor
adc
inc
nop
cld
cmpsl
in
nop
jbe
clc
insb
cs
sbb
lcall
adc
jns
adc
out
mov
mov
sbb
rcl
and
jl
inc
push
dec
jae
subl
inc
js
addl
jae
iret
fdivl
sahf
inc
pop
repz
cwtl
and
je
pop
fistl
dec
int
int
push
outsl
pop
stc
int
sbb
repz
inc
in
push
adc
inc
inc
jp
fwait
sti
jne
xlat
fwait
cmpsl
negl
scas
fs
loop
cld
lahf
or
arpl
mov
test
shll
jb
xor
icebp
rclb
ret
push
adc
lret
dec
push
pop
data16
std
sbb
push
xor
lret
adc
call
push
flds
mov
sahf
lock
out
cmp
pop
pushf
mov
outsl
sbb
pushf
push
cmpsb
cwtl
jo
dec
stos
pop
loope
cmpsb
jmp
shll
and
inc
lcall
push
lods
mov
in
test
and
xor
xchg
test
jmp
sbb
insb
jo
out
scas
mov
and
repz
js
loop
fcomip
jl
mov
ljmp
cmp
test
imul
lea
mov
dec
mov
daa
inc
imul
daa
insb
and
mov
test
loope
mov
aad
jb
testl
js
popa
and
xlat
sub
mov
inc
or
sub
std
loopne
push
bound
cmp
xchg
add
push
ja
fisttpll
and
xchg
into
cmpl
wbinvd
dec
sar
stc
rclb
cli
loopne
rcrb
fldt
fwait
xchg
fcomps
lahf
sbb
cmp
popf
lret
pop
cmc
mov
aad
mov
and
fistpll
js
xchg
inc
pop
inc
cmpsb
lcall
lcall
test
sbb
cmp
loopne
pop
mov
and
stos
fdivp
jle
frstpm(287
lods
loope
nop
mov
sbb
fstl
mov
loopne
lock
pushf
push
xchg
stos
mov
jnp
mov
adc
cmpsl
stc
sbb
pop
mov
xchg
and
xchg
jl
movsb
xor
push
xor
xor
xchg
or
dec
mov
pushf
fcmovne
mov
jl
std
lret
aam
outsl
cwtl
iret
adc
adc
add
xor
adc
divb
add
jecxz
mov
mov
ret
out
xchg
lods
not
xchg
loopne
movsl
int
add
mov
sbb
in
sub
mov
adc
add
sbb
push
cmp
jge,pt
push
jae
push
in
andl
mov
mov
push
dec
push
je
jmp
ret
or
arpl
andb
div
xchg
push
jmp
je
or
call
cmpsb
lret
leave
dec
jnp
sub
jp
jle
fxtract
push
adc
mov
insl
test
mov
test
jb
xchg
sub
mov
inc
popa
push
sbbb
mov
xchg
in
add
cwtl
add
dec
icebp
imull
mov
push
push
dec
xchg
mov
int
in
out
arpl
dec
jmp
xor
sub
xchg
test
loopne
pusha
mov
imul
loop
cmp
adc
imulb
adc
jns
xor
inc
add
fcompl
xchg
fchs
in
or
test
testb
int
and
popf
mov
in
sub
pop
mov
adc
cltd
test
movsb
bound
in
jbe
cmp
sbb
or
flds
popa
pop
jne
mov
jo
inc
xchg
xor
mov
aaa
out
mov
push
das
push
xor
push
popf
daa
add
das
sbb
sbbl
mov
sbb
pop
inc
xchg
pushf
stos
icebp
or
inc
and
mov
dec
in
xchg
push
inc
lods
push
push
fldt
mov
das
pop
and
cmp
sbb
adc
ret
xlat
dec
out
stc
ffree
movsb
dec
push
ja
lret
bound
popf
jge
mov
mov
push
add
into
out
out
test
outsl
add
rolb
mov
mov
push
jp
mov
or
fimuls
lret
add
ljmp
mov
dec
popa
fistpll
mov
pop
push
daa
jns
js
into
dec
aas
push
mov
es
xchg
or
xchg
imul
movsb
jg
mov
mov
cmc
adc
sub
mov
mov
push
ret
pop
mov
sbb
sub
popa
dec
mov
fsubl
mov
add
cmpsl
push
cmp
add
xchg
sbb
js
xor
add
cvtps2pi
add
cmc
xchg
jbe
jle
nop
adc
sti
insb
repnz
decb
roll
popa
rclb
pop
mov
mov
mov
xor
mov
fsubs
add
aam
idivb
dec
mov
shll
sub
movb
pop
jmp
cmp
sbb
jo
into
imul
aad
mov
ret
leave
jle
outsb
roll
cwtl
adc
mov
ja
or
mov
scas
pop
out
fidivl
push
add
aad
pop
and
loope
lea
and
cmc
sbb
and
jno
cmpsb
xchg
xchg
fldl
add
pop
dec
test
in
sub
mov
and
dec
inc
or
dec
mov
sub
int
jecxz
xor
push
repnz
cli
jo
pop
stos
inc
mulb
add
xchg
mov
lds
adc
mov
inc
sbb
push
js
push
lahf
and
inc
ljmp
ljmp
dec
loopnew
js
icebp
in
dec
test
or
icebp
xchg
ljmp
mov
movsl
lock
fdiv
push
mov
jp
jecxz
mov
jbe
addb
push
mov
adc
jb
add
xchg
and
push
push
std
sbb
cmp
es
pusha
cmpb
mov
push
xchg
in
loopne
lock
stos
xor
addr16
inc
lods
hlt
xchg
xor
movsb
ret
mov
sub
sbb
adc
or
js
mov
enter
mov
cwtl
push
jne
mov
enter
mov
pop
mov
and
xchg
sub
pop
mov
outsb
dec
call
inc
cmp
sbb
mov
lret
and
mov
push
addb
mov
dec
and
inc
lcall
lock
jl
add
add
gs
sub
dec
and
sub
push
clc
mov
pop
sub
and
pop
lret
xlat
or
add
call
insb
sub
mov
mov
mov
aad
xchg
or
scas
and
push
xchg
pop
xchg
inc
and
inc
nop
sti
iret
fisubl
pop
movsb
stos
fisttpll
push
into
es
sub
popa
lea
mov
mov
repnz
ljmp
stos
vmread
data16
fsubl
in
mov
call
inc
xor
aaa
xor
mov
subl
jmp
js
adc
sub
mov
out
and
test
pop
push
mov
cmp
mov
std
iret
outsl
pop
xchg
inc
xor
stos
adcb
hlt
in
repnz
jecxz
ret
mov
data16
cltd
push
lock
fcoml
jle
dec
in
sub
movsb
pop
ljmp
pop
into
jg
sbb
mov
xchg
xchg
mov
in
nop
shrb
xor
stos
jp
or
imul
xor
rcrl
cmp
shl
dec
mov
fldenv
jno
fsubr
dec
mov
test
notl
cmp
repz
enter
adc
jle
pop
adc
movsl
and
pop
fs
clc
fldl
jg
mov
mov
cmc
pop
dec
add
movsl
inc
sbb
aas
cltd
pop
push
ret
and
test
shlb
push
clc
sbb
inc
mov
cmp
lea
fcmovu
cmc
stc
xchg
xlat
xor
sub
add
aad
dec
mov
sub
outsl
cmpl
pop
ret
rol
bnd
repnz
cmp
hlt
lahf
push
imul
outsl
xorb
xchg
cs
mov
xchg
pop
push
jecxz
mull
ss
aaa
xchg
mov
orb
movsb
data16
xor
pop
xchg
jg
inc
pop
mov
sahf
pop
or
and
push
imul
jp
adc
xor
lahf
mov
loope
xor
mov
out
outsl
adc
mov
jl
cmc
stos
into
je
lret
dec
addl
sbb
mov
orb
sbb
out
jne
jle
jle
fdivrl
test
fimull
mov
fiadds
sarb
xchg
gs
inc
movsl
mov
mov
inc
imul
sub
cs
mov
mov
sub
mov
push
fisubs
adc
adc
inc
push
sub
dec
loop
push
sub
je
imul
cli
gs
out
ret
mov
and
mov
jl
adc
pop
es
bound
outsb
cwtl
frstor
mov
sub
pop
outsb
push
movsl
push
mov
mov
aaa
jnp
int3
dec
lds
sbb
int
xor
pop
std
iret
adc
adc
mov
cs
movsl
cmp
or
lea
xor
and
or
jl
sub
adc
hlt
sbb
movsb
ja
xor
dec
pushf
out
cmp
popf
or
adc
xor
pmullw
imul
inc
ret
dec
das
jb
cmp
bnd
popf
addr16
and
shl
cmp
ret
sub
xchg
cmp
call
adc
push
sti
sarl
push
popl
mov
test
into
cmpsl
cmp
adc
cmpsb
iret
popa
and
js
enter
mov
pusha
sub
outsb
ljmp
stos
cmp
int3
in
cmpsl
idivl
push
xlat
andb
jle
push
loopne,pn
pop
fwait
mov
stos
rorb
jmp
cs
adc
lcall
or
mov
fidivs
jno
loopne
dec
lcall
xor
cmp
data16
stos
movsl
test
pop
enter
lods
adc
mov
lods
xlat
out
dec
pop
and
in
int3
imul
addr16
out
add
jb
xor
sarb
sbb
xor
fisttpl
or
imul
test
cmp
adc
pop
lods
and
or
mov
adc
jecxz
pop
lcall
sbb
popf
fmul
adc
dec
stc
xchg
pop
jp
add
and
push
or
popa
jle
in
je
pop
push
mov
cltd
push
adc
iret
or
fists
add
mov
and
push
mov
mov
popf
repnz
xchg
je
push
or
pop
or
mov
adc
xchg
scas
pop
xchg
or
outsl
insb
pop
mov
shrl
xchg
jg
cs
pop
insb
mov
mov
loopne
mov
std
cmp
jbe
push
cld
daa
mov
pop
addr16
sbb
pushf
arpl
cmp
popf
frstor
imul
jecxz
div
stc
lea
inc
arpl
inc
and
mov
sbb
pushf
stos
lock
fists
jecxz
jge
arpl
sub
xor
jo
mov
sbb
push
lods
sub
add
push
jo
mov
stos
cli
pop
incl
jge
mov
inc
xchg
pop
dec
xchg
inc
iret
roll
inc
pop
les
mov
sub
jno
adc
inc
inc
clc
sbb
cmpb
int3
dec
cmp
jmp
xchg
daa
push
push
ss
sub
mov
inc
negb
dec
fidivrl
and
push
stc
cld
push
addr16
push
push
in
inc
sbb
sbb
sub
push
arpl
mov
and
xchg
push
aad
lods
clc
add
popa
and
xchg
dec
push
pop
mov
mov
pop
sahf
shlb
sbb
xlat
xchg
test
test
xor
mov
mov
jb
mov
ja
das
lock
outsb
mov
sub
loopne
inc
mov
std
push
lret
sti
xchg
sbb
lcall
movsb
mov
rcr
add
out
scas
mov
jl
sbb
mov
sbb
jbe
mov
fucomi
mov
addb
negb
inc
xchg
cmp
in
mov
insb
stos
icebp
push
push
mov
lds
and
enter
pop
lods
sarb
adc
inc
lods
stos
imul
mov
mov
sti
pusha
cs
scas
out
mov
psubw
std
mov
out
add
rcr
cli
fistps
inc
movsl
xor
mov
sub
cwtl
mov
xor
xor
imul
ljmp
out
inc
xchg
cmp
push
into
xor
mov
lret
imul
daa
xor
ss
push
idivb
and
sbb
dec
fisubs
icebp
jno
fisubs
aam
push
jp
iret
insb
xchg
cmc
mov
add
xchg
lods
mov
or
and
call
xchg
push
xor
shlb
mov
pop
mov
xchg
out
mov
or
sti
mov
int3
sub
cmc
mov
mov
lcall
shll
lock
sbb
ficoms
mov
pop
iret
in
aam
adc
lds
out
stos
orb
popf
in
test
mov
mov
mov
push
ja
mov
xor
push
out
loopne
in
lock
pop
sub
push
pop
mov
fnstcw
aad
in
adc
mov
test
push
mov
mov
xor
cli
dec
cld
xor
sahf
popa
fisttpl
adc
push
cmp
push
inc
mov
cmp
pop
sahf
and
popa
in
xchg
sahf
or
push
addr16
xor
je
in
decb
imul
cli
push
or
int3
daa
cmp
mov
pop
or
adc
fyl2x
in
push
push
cld
into
pop
xchg
xor
add
push
lret
pushf
xor
fcom
xchg
pop
dec
repz
xchg
dec
and
decb
mov
add
or
out
sub
pop
add
mov
loopne
int
ljmp
stos
add
ss
jne
ljmp
movsb
and
mov
pop
int
jne
test
les
push
pop
hlt
jno
jnp
jl
xor
mov
xlat
dec
pushf
jnp
sbb
js
leave
dec
adc
ss
clc
outsl
das
ficoml
inc
mov
mov
es
mov
addb
aas
xor
push
cmp
outsl
addl
xchg
and
adc
mov
adc
inc
xchg
mov
inc
adc
dec
pop
xchg
dec
pushf
pop
xchg
pop
ret
arpl
stos
daa
lahf
cmp
push
dec
sbb
add
pop
fmul
mov
lret
pusha
or
fdivrs
xchg
or
hlt
rcl
fwait
cwtl
scas
enter
or
cmp
std
shrl
xor
jae
lea
add
add
daa
add
cmpsb
jp
ret
mov
fcompl
out
in
dec
mov
insb
jl
jno
mov
add
cmc
push
nop
xchg
push
test
daa
push
jg
insb
scas
add
sub
pop
push
jae
js
add
cmpsl
jns
mov
xor
les
dec
mov
pushf
jle
push
call
inc
add
fabs
icebp
adc
pop
cmp
dec
jp
clc
dec
lods
shrl
test
orb
mov
jbe
xchg
shll
adc
cmpsb
mov
repnz
loop
add
bt
jmp
add
int3
in
popf
push
enter
lods
push
dec
cmp
mov
mov
pop
nop
dec
inc
addl
lahf
in
mov
jmp
inc
push
aam
jno
cli
icebp
dec
cs
or
jge
adcb
cwtl
push
lret
insl
or
shl
dec
jmp
mov
adc
addr16
push
loopne
mov
int3
ja
sub
pop
pop
int
sub
movsl
sbb
lret
and
mul
pop
jnp
cmpsb
call
sub
push
dec
inc
push
das
rorl
loop
daa
ret
inc
cld
pop
push
jl
fnstcw
dec
incl
mov
cs
mov
movl
clc
mov
fsub
insb
xlat
xchg
push
lret
negb
movsb
mov
shll
out
ja
cmpsb
aad
inc
jl
mov
sbb
ds
dec
mov
or
xchg
mov
mov
test
jecxz
mov
imul
xor
lret
in
nop
mov
pop
jmp
pop
ja
ja
cli
sbb
push
fisubrl
mov
xchg
jnp
add
faddp
sarl
gs
ljmp
push
sbb
pxor
mov
mov
cli
insb
cld
mov
fsubrs
push
cmp
jo
cli
mov
and
adc
mov
xchg
mov
or
lock
fwait
pop
sub
faddl
or
cmpsb
push
insb
add
lds
sbb
loopne
ja
xor
fdivs
dec
pop
or
mov
fdiv
xlat
les
subb
or
dec
add
insb
push
push
scas
in
fisubrl
jae
fsub
xor
andb
mov
mov
and
aad
mov
xchg
sbbl
aad
loope
fdivs
inc
mov
dec
cld
xchg
push
cli
testb
sahf
cltd
gs
shlb
frstor
inc
jae
addl
mov
jl
std
sbb
mov
in
jo
add
and
add
pop
dec
sahf
ja
arpl
mov
jp
xchg
mov
cs
dec
jle
or
and
pop
cmc
mov
xchg
test
sub
xchg
xor
fiadds
loope
enter
jae
lcall
jecxz
fcompl
sbb
mov
mov
and
pop
adcl
in
add
lret
rcll
mov
push
pop
pop
add
mov
sub
pop
or
in
aaa
pop
adc
movsb
in
xchg
outsb
add
lea
xchg
popf
jbe
mov
sbb
imul
xor
mov
push
sti
mov
push
jns
lods
lret
popf
mov
fcomi
bound
je
sub
pop
icebp
aad
testb
adc
lahf
es
cmp
out
loope
mov
or
mov
or
dec
adc
pop
push
lods
int
pop
pop
mov
xlat
in
repnz
mov
fldenv
push
or
in
xor
inc
xor
dec
je
jg
push
jae
jl
push
cmp
inc
aas
fisttps
mov
jns
jmp
lods
sbb
mov
cmp
addr16
inc
test
sub
jbe
add
push
and
nop
and
add
xor
js
notb
xor
inc
lods
test
adc
pop
loope
test
lods
cmp
cmp
adc
or
pop
push
aam
stc
jl
add
xor
sub
adc
stos
mov
popa
ljmp
or
or
adc
out
adc
xchg
stc
fisttps
cmp
fidivrl
and
cmpsb
pop
cli
push
fcmove
jno
js
icebp
bound
movsl
mov
nop
jp
enter
sbb
jge
data16
xor
jp
or
inc
test
mov
mov
popa
mov
pop
jle
jae
lret
and
stc
mov
push
dec
out
sahf
daa
clc
xchg
leave
cmpsb
imul
mov
and
and
sbb
stos
cmc
aam
repz
pop
xchg
std
xor
mov
mov
sub
jl
test
mov
mov
into
pop
push
add
mov
subl
and
inc
lret
orb
xor
jp
pop
and
test
xchg
mov
dec
xchg
jbe
cmp
ret
dec
xchg
or
mov
sbb
or
rclb
dec
fmull
and
in
sbb
dec
cmp
cmpsl
inc
push
pop
push
xor
dec
jno
xchg
adc
loopne
push
sub
test
push
cli
gs
lret
mov
push
mov
dec
lret
rcl
lds
lret
jo
jge
scas
out
push
xchg
movsb
clc
dec
cmp
gs
hlt
mov
dec
bound
lds
shlb
push
insb
mov
or
xchg
pop
dec
sahf
sahf
xchg
push
dec
sub
or
popf
icebp
std
jecxz
xor
jb
int
jmp
aam
mov
or
xor
movsl
fisubs
dec
jnp
jmp
pop
adc
lahf
push
cs
cmp
dec
mov
pop
idivb
bound
imul
lahf
jns
stos
xlat
or
lods
adc
repz
insb
xchg
jae
cmpb
xlat
pop
into
lds
mov
sub
aas
cmp
scas
jmp
cmp
push
xchg
pop
shlb
push
hlt
aaa
cmp
stos
cltd
mov
ljmp
sbb
cmp
leave
es
std
rcrl
pop
cwtl
mov
mov
push
cmpsl
cmp
lcall
or
push
jge
add
push
icebp
jns
les
leave
mov
dec
dec
pop
icebp
ffree
xorb
ficompl
xchg
jnp
or
lock
int3
mov
and
das
inc
in
mov
adc
xchg
cwtl
pop
push
push
sarb
jne
mov
cmp
push
lock
add
shrl
gs
cmp
sub
xor
enter
push
fs
xor
pop
pop
push
mov
sahf
jle
adc
mov
cld
movsl
sahf
js
mov
xor
mov
fwait
cmp
hlt
add
pop
mov
ljmp
mov
inc
stc
lea
pop
pop
out
inc
aam
scas
sub
dec
imul
jl
sbb
ret
sub
xchg
cmp
adc
jno
shrb
mov
adc
xchg
loop
cmp
jmp
push
fidivrs
testl
test
loopne
dec
mov
and
xlat
lods
popf
mov
sbb
push
iret
or
cmpsb
sbb
push
jl
incl
and
bound
mov
cltd
xor
pop
inc
push
ret
fnstenv
popf
in
jae
pop
sub
in
mov
or
out
jp
or
push
xchg
inc
loop
fnstenv
xchg
cli
ljmp
add
pop
addr16
sub
and
loope
pop
sub
rorb
ds
lcall
sahf
lret
push
mov
mov
lds
es
jl
add
push
sti
xchg
sbb
insl
lret
ljmp
push
outsl
xchg
fidivs
cltd
call
daa
dec
popf
dec
dec
lods
lcall
subl
jmp
and
xchg
adc
movsb
ljmp
pop
lret
aaa
sbb
in
lcall
pop
stos
jns
fwait
xchg
sbb
cmpsb
cwtl
popa
sub
cmpl
insl
out
test
js
mov
rorl
push
mov
mov
dec
andb
cmp
aam
ud1
mov
inc
cmp
fstl
clc
or
jo
pop
clc
pop
ja
push
ja
popa
cli
sar
icebp
rolb
jae
cli
insb
dec
mov
or
cmpsb
jbe
lods
dec
dec
xor
loop
add
xor
xchg
inc
aaa
mov
pop
cmc
dec
inc
test
inc
les
mov
xchg
insl
enter
push
dec
inc
dec
dec
push
lret
and
les
cmp
sub
jge
dec
cltd
fcompl
push
sbb
mov
ja
sbb
call
pop
divl
test
xchg
test
fdivrs
das
iret
test
push
inc
movsb
sub
cmpsl
jne
and
sub
mov
add
lcall
movd
push
xor
arpl
add
jmp
adc
xor
jno
or
nop
stos
dec
lock
frstor
jo
dec
scas
sub
xchg
repnz
leave
cmc
and
out
rcrl
or
mov
out
test
repz
rcll
in
mov
vpmullw
adc
adc
insl
call
sub
add
dec
mov
adc
scas
into
or
pop
pop
dec
jg
inc
mov
fs
jb
sub
pop
and
mov
or
jbe
cmp
or
sti
imull
dec
cmpsb
in
sub
inc
mov
mov
hlt
xchg
shlb
mov
pusha
dec
cmpsl
or
add
mov
hlt
mov
enter
xor
ret
outsb
in
xor
pop
cmpl
dec
cwtl
in
repz
in
inc
leave
call
in
jle
scas
fcom
add
ficomps
xor
sbb
mov
push
in
and
pop
push
hlt
test
xorb
adc
aam
rorb
xchg
movsl
sbb
and
pop
andl
insb
mov
imul
pop
imul
fistps
xor
push
icebp
inc
out
mov
sbb
shl
adc
sub
fmuls
leave
jnp
xor
pop
dec
cmp
subb
xchg
in
add
inc
mov
cmpsb
pop
pop
and
fisttps
cmc
sub
test
test
loopne
mov
push
and
inc
js
scas
addr16
aad
xchg
dec
movsl
xor
lds
or
xchg
testl
sti
clc
and
inc
sbb
mov
fcmovu
and
scas
rclb
mov
in
icebp
sbbl
loope
mov
xchg
jmp
inc
add
dec
into
jb
shl
sub
add
lret
ret
sub
dec
fisubl
mov
mov
xlat
std
mov
pusha
das
stos
xchg
int
jb
das
clc
aad
les
push
mov
jmp
or
fnstcw
loop,pn
popa
test
inc
fmulp
and
fwait
int3
aas
cmp
pop
inc
mov
test
hlt
xchg
mov
pop
test
pushf
dec
mov
xchg
or
insl
pop
aaa
push
aas
repz
call
pop
insl
ljmp
inc
mov
jg
dec
jo
xlat
xchg
xor
jae
ljmp
xchg
mov
imul
in
jmp
jns
add
enter
jp
or
stos
std
ficoml
std
jmp
scas
pop
xor
cmp
mov
shrb
cmc
fwait
xor
push
ret
push
mov
out
cwtl
arpl
sub
ja
push
pushf
ss
add
or
xlat
fmulp
push
add
sbb
cld
push
jmp
sub
pop
pop
stc
sbbl
add
sub
sub
leave
adc
push
fdivr
mov
pushl
cmp
in
jae
xchg
dec
pop
xchg
inc
outsl
dec
pushf
push
cmpsb
testb
xchg
inc
aas
sbb
mov
or
ficomps
rep
sbb
shl
jmp
xor
jb
in
add
imul
cmpsl
mov
rdtsc
insl
or
popf
add
dec
mov
jg
push
and
push
mov
out
lock
imul
or
push
inc
hlt
mov
aas
pop
stc
ds
cmp
outsb
pop
scas
sub
xor
sbb
stos
and
lahf
push
xor
adc
sbb
sbb
jne
and
in
sbb
and
or
add
pop
cmp
int
pop
cwtl
outsl
pop
in
cltd
xor
loop
ja
sbb
or
ret
cmpsl
push
inc
jecxz
js
mov
mov
inc
mov
fstpt
mov
cli
dec
clc
jmp
in
stos
adc
push
xchg
mov
sbb
cltd
xchg
lea
mov
out
imul
xchg
pop
lret
ja
add
lods
sahf
in
mov
push
add
mov
adc
test
sbb
sub
sub
sub
ficomps
gs
pop
add
cwtl
mov
cmp
popa
lret
sbb
clc
xchg
popa
dec
fdivl
nop
adc
leave
aas
jecxz
add
dec
and
add
add
or
out
jne
push
es
push
mov
inc
icebp
jmp
scas
dec
ja
ds
inc
sbb
lcall
cmp
subl
mov
add
jmp
in
pop
aaa
sub
and
rcll
fldlg2
cmp
ficoms
jns
adc
inc
xchg
out
mov
sahf
scas
dec
add
loopne
xchg
mov
jmp
pop
xchg
inc
dec
mov
push
fidivs
fidivl
mov
std
xchg
pop
cltd
je
cmp
inc
mov
mov
mov
mov
mov
mov
or
jae
sbb
pop
jne
inc
xor
into
pop
push
scas
loop
stc
pop
inc
das
or
pushl
lock
lcall
imul
mov
sbb
jns
es
in
mov
pop
imul
out
push
mov
sub
es
movsl
inc
aaa
push
inc
sbb
push
xchg
arpl
sahf
std
mov
push
aas
push
les
or
mov
push
sub
pop
xchg
jg
jecxz
insl
mov
aaa
inc
aam
notl
fdivl
adc
fists
xor
dec
arpl
inc
lock
rorb
imull
jmp
scas
popa
dec
jmp
mov
jns
push
ja
sbb
test
cmpsl
cmpsl
sarb
mov
jae
push
mov
pop
orl
mov
rcll
imul
sbb
adc
jbe
mov
mov
and
jmp
pushw
mov
sbbl
aad
loopne
add
push
fldt
add
popa
les
call
push
push
sti
push
repz
lret
sub
inc
cmpb
xor
cwtl
add
pop
mov
mov
stc
sbb
pop
in
rorl
adc
inc
add
sbb
imul
mov
mov
push
out
icebp
leave
mov
jo
and
cmpl
cs
push
push
cmp
xor
sbb
lea
cs
mov
idivl
push
iret
arpl
aam
xchg
add
xchg
in
sti
inc
cld
jns
pop
inc
inc
sbb
scas
adc
loope
lcall
mov
cltd
movsb
scas
xchg
add
pop
mov
jne
dec
push
push
bound
add
lcall
in
pop
xchg
je
pop
pop
mov
adc
lds
mov
push
mov
mov
or
cmp
push
data16
jge
je
imul
test
inc
sbb
sub
or
lods
mov
and
push
push
cmp
mov
add
pushf
or
pop
xor
dec
sti
mov
int3
sbb
jp
popf
fs
dec
pusha
das
mov
inc
loope
mov
adc
mov
inc
daa
and
lods
mov
cmp
ret
idivb
cmp
push
push
push
test
mov
lock
shll
adc
cmc
xchg
popf
rorb
mov
jae
xor
sbb
mov
sub
fwait
mov
sbb
cltd
mov
and
push
out
mov
gs
in
add
cmp
out
or
insl
gs
inc
out
shll
sbb
lret
xor
ret
and
pop
pop
sahf
and
repnz
mov
bound
iret
xchg
push
out
movsb
jns
insb
mov
or
fldl
jnp
push
sbb
pop
aas
inc
jp
adc
sbb
inc
arpl
mov
arpl
inc
and
xchg
pushf
iret
scas
sub
xor
or
mov
test
or
and
pop
xor
das
test
cltd
mov
and
mov
xor
add
sub
add
jp
push
addb
test
push
js
sbb
repnz
xchg
arpl
xor
sbbb
inc
cmp
insl
mov
int3
push
out
rolb
sub
imul
mov
xchg
rolb
pop
mov
aas
xor
fcmovnbe
icebp
insb
clc
les
stos
ret
mov
add
mov
fdivrl
lods
cltd
mov
ss
repnz
int
cmp
mov
lea
test
rcr
cmp
or
sub
sub
cmpsb
pop
fsubrp
push
in
sbb
pop
mov
xchg
jne
pop
push
add
stc
and
xor
clc
fwait
mov
or
pop
jle
enter
jg
sarb
dec
mov
outsl
xlat
xchg
adc
mov
pop
popf
push
or
mov
outsl
mov
mov
jp
mov
pop
or
cs
xchg
mov
push
jbe
inc
out
movsb
mov
loope
inc
inc
push
pop
leave
loope
cmp
inc
rcrb
pop
xor
sbb
jne
lret
pushf
push
jae
sub
ds
dec
add
sahf
out
mov
in
add
loope
push
mov
dec
sbb
mov
pop
ret
enter
and
sub
push
push
stc
ret
jb
pop
sub
cmp
pop
and
lret
insl
or
aad
stos
iret
lock
in
sbb
mov
pop
cmp
xor
mov
pop
push
roll
xchg
push
cmpsl
ret
rorl
push
clc
test
pop
sub
ret
mov
gs
jp
add
std
inc
cmp
cwtl
xchg
faddl
mov
mov
sbb
test
mov
push
in
loop
cmpsb
in
arpl
movb
jp
adc
sbb
mov
add
cld
sub
icebp
lods
gs
icebp
xor
cmpl
scas
pop
bound
jno
stos
mov
push
mov
cld
pop
leave
push
lahf
sbb
push
cli
scas
int3
add
rcrb
xor
adc
inc
repz
mov
adc
pop
fists
cld
mov
push
js
ljmp
mov
xchg
cltd
mov
cmc
loopne
lock
inc
ljmp
idivl
scas
fmul
or
pop
in
pop
mov
jns
jl
enter
xor
mov
cmp
jae
shl
movsl
fsubrs
sub
sahf
std
and
les
loope
mov
cli
ficoms
or
jb
cli
ss
cmpsb
pop
hlt
movhps
pop
push
pop
sub
hlt
dec
iret
jl
fcomps
xchg
sbb
jnp
dec
scas
inc
cmc
popa
xlat
xchg
xchg
sbb
xchg
add
imul
ret
jno
pop
mov
inc
dec
cmp
mov
sbb
cltd
or
push
mov
jl
push
sub
pushf
dec
daa
imul
nop
xor
data16
jb
mov
mov
hlt
jecxz
adc
rorl
mov
push
scas
xor
add
loopne
xchg
cmpsl
inc
mov
xchg
lret
mov
jnp
mov
paddw
imul
add
sub
pop
test
pushf
sbb
retw
loop
jmp
add
es
mov
addr16
sbb
add
pop
dec
sbbl
sbb
mov
movsb
aad
xchg
je
cmc
inc
pop
xor
adc
pop
and
cwtl
pop
cli
xlat
push
and
bound
ja
push
imull
iret
mov
dec
out
mov
mov
jnp
xor
cmp
popf
jne
ret
rol
xchg
outsb
movsb
inc
inc
jb
sarl
sub
std
cmp
lds
popf
popa
test
cmp
std
sub
inc
push
jge
and
add
push
in
mov
pusha
xchg
stc
cmp
and
jbe
aas
out
scas
icebp
mov
outsb
sti
pop
xorb
push
gs
lds
cld
jecxz
sub
sbb
add
xor
leave
mov
iret
idivl
or
bound
fwait
pushf
subl
mov
adc
cwtl
out
xlat
jle
jl
sbb
leave
push
inc
add
cmp
and
out
int
in
mov
push
sbb
inc
push
mov
push
xchg
fs
ret
xchg
aad
roll
sub
jae
cmpsb
push
sub
loopne
les
add
lret
or
inc
jbe
jo
sahf
cmpsl
pop
repz
idiv
test
xor
jmp
dec
pop
aas
mov
cmc
mov
xor
lret
loope
or
insl
adc
fildll
inc
and
jbe
cmp
dec
mov
repz
mov
push
add
fwait
or
fcos
mov
cmp
in
lret
repnz
push
push
xlat
mov
pop
and
sbb
dec
lods
xchg
add
pop
xchg
jae
pop
aad
sub
outsb
popa
out
pop
push
popa
cmpsl
push
xchg
cmp
mov
outsb
insl
inc
fistps
mov
arpl
stc
push
xchg
cmc
jg
dec
cmc
addb
pushf
je
jg
and
add
jmp
in
pop
sub
inc
inc
inc
push
scas
js
hlt
inc
repz
jbe
fs
rcrl
mov
xorb
jns
imul
cmc
inc
stc
int
push
mov
adc
shlb
rcr
xchg
fldt
das
sahf
aas
cmp
inc
out
or
pop
mov
scas
mov
mov
lret
adc
add
xorb
push
outsb
adc
jge
lds
imul
sbb
push
and
mov
xchg
cmp
mov
mov
mov
add
add
adc
and
into
das
xor
cmp
in
push
into
and
inc
icebp
push
xchg
ret
imul
add
and
stc
dec
xor
dec
cmp
mov
fbld
jecxz
and
sti
jns
mov
fidivs
bound
aad
and
mov
adc
pop
lock
or
push
in
loope
lahf
out
adc
xchg
jge
xor
inc
push
jmp
stos
xchg
shlb
shrb
in
aaa
mov
cli
pop
sarb
push
insl
aaa
aad
clc
or
imul
mov
jecxz
or
lods
mov
inc
or
cmpsl
popa
sub
mov
jmp
cmpsb
js
pop
adc
inc
dec
mov
jmp
rcrb
mov
je
or
out
nop
mov
xchg
aas
jl
nop
jb
xor
push
mov
sub
rolb
cmp
arpl
xchg
movsb
scas
aad
fwait
jmp
shl
jge
xchg
aaa
pusha
imul
sub
inc
repnz
imul
pop
cmp
xchg
push
xor
into
push
sub
mov
push
inc
or
sbb
push
mov
ja
sub
and
mov
call
pusha
mov
cmp
fnsave
xor
pop
sarb
nop
ljmp
jecxz
jne
mov
and
std
int3
add
cltd
loopne
mov
sub
pop
enter
jmp
push
call
leave
mov
fstl
out
jmp
movsb
xor
lods
sbbb
ljmp
adc
jb
jnp
sub
jnp
outsl
dec
dec
mov
icebp
jmp
or
push
stos
mov
xchg
stc
hlt
inc
mov
adc
pop
jo
cmp
xchg
mov
xchg
aad
cld
pop
and
pop
inc
add
cltd
jp
xlat
push
cwtl
push
outsl
inc
sbb
movsb
dec
rcrl
jmp
lahf
shll
pushf
movsl
aaa
mov
out
mov
xchg
jl
jmp
clc
adc
dec
cmp
xchg
fs
std
arpl
lods
jmp
mov
cmp
cltd
add
shlb
stos
pushf
stc
stos
rcrl
imul
cs
xor
clc
repnz
incb
call
add
loop
cmp
inc
aam
push
jg
imul
aaa
lock
or
in
adc
jle
cli
test
xor
adcb
popf
jecxz
pop
stos
outsb
jg
xchg
rorl
out
mov
pushf
inc
test
aas
inc
les
fidivs
xorl
xrelease
jge
packsswb
int3
and
clc
or
shr
xorl
stos
push
inc
nop
pop
outsl
ret
ja
in
clc
xchg
into
or
adc
mov
clc
xchg
push
jle
push
std
ret
ret
adc
popf
mov
add
cmpsl
dec
mov
shlb
cmpsl
add
inc
mov
mov
mov
and
out
das
pop
ret
aas
in
pop
mov
nop
aaa
test
xor
sti
aam
lret
and
in
inc
ja
popa
jg
sub
out
mov
jmp
and
inc
lods
lret
adc
push
icebp
lret
popa
cmovle
test
sahf
cmp
enter
aad
in
sub
cmp
shrl
and
inc
sub
std
popa
int
sahf
repz
and
add
mov
jecxz
sub
lcall
jae
call
xchg
cmpsb
sub
xchg
fs
sbb
xchg
or
or
or
imul
je
jnp
ljmp
inc
or
sbb
sbb
xchg
enter
cmc
iret
loop
mov
xlat
pusha
jge
ja
mov
into
or
mov
push
int
inc
test
push
push
movsl
inc
or
jp
lock
xor
xchg
mov
cmpsb
jne
cltd
xor
mov
ja
add
int3
aas
fs
ret
sti
or
sahf
adc
lea
mov
lock
popa
add
jb
jecxz
lock
int
fcmovu
sbb
sbb
int3
jbe
int3
test
pop
mov
xchg
push
push
mov
dec
push
cmp
or
xchg
or
inc
mov
cwtl
pop
mov
ret
rol
lea
push
imul
pop
jnp
punpcklwd
add
sbb
popf
bound
lahf
inc
je
hlt
test
std
jg
arpl
popf
pop
jmp
fwait
outsl
sbb
enter
mov
ret
repnz
mov
push
loope
push
and
outsb
mov
jno
or
shl
push
adc
cmc
xchg
test
in
icebp
push
xchg
mov
lock
xor
jmp
mov
int
gs
inc
sub
pop
decb
bound
stos
pop
mov
xlat
dec
rclb
sub
cwtl
lods
xchg
jnp
rcrl
cld
jo
leave
pop
mov
fs
popa
xor
jb
cs
inc
jmp
push
sti
adc
xor
sbb
scas
insb
add
sbb
jge
jnp
pop
cltd
cltd
mov
outsb
ret
xor
sbb
push
lret
push
dec
loope
adcl
dec
mov
and
test
jge
sub
not
dec
inc
or
push
adc
iret
lret
dec
xchg
add
add
and
test
imul
dec
xchg
gs
pop
cmp
pop
jnp,pn
mov
push
ret
or
inc
popa
jge
lret
pop
sub
outsl
popw
adc
mov
xor
fst
pushf
add
imul
add
inc
cld
push
out
popf
ja
insb
push
pop
xor
jle
aas
cmp
pop
fists
sub
xor
jbe
loop
xlat
push
cwtl
cmp
mov
insb
dec
bound
ss
mov
or
and
stos
ret
outsb
mov
add
adc
pop
push
pop
scas
mov
mov
sub
push
idivb
mov
pop
mov
in
into
sub
rcrb
sti
jns
leave
fwait
ds
sub
jo
mov
movsb
sti
pusha
sub
daa
outsl
cmp
movsb
xchg
enter
mov
mov
scas
jp
pop
into
popa
call
fists
pop
or
ljmp
mov
lahf
adc
adc
es
test
aad
add
xchg
adc
jne
sbb
ret
ret
fmull
xlat
push
dec
push
sbb
pop
rcll
ds
stos
loop
into
int
mov
shlb
adc
pop
ret
jg
into
pop
sub
ja
jge
mov
subl
mov
popa
xor
sub
mov
fwait
inc
or
cltd
ret
xor
mov
sub
pop
sahf
ss
cwtl
loope
add
sub
xchg
fcomip
nop
xchg
ret
mov
sub
mov
mov
loopne
into
fisttps
sbb
outsb
pop
mov
ja
cmp
out
mov
add
hlt
insb
dec
mov
xchg
lret
out
int
enter
ret
cmpsl
sub
and
sti
sbb
repnz
inc
loopne
sub
cltd
push
pop
adc
adc
flds
push
sbb
xchg
sub
xchg
xchg
cmp
xchg
in
and
cmpsl
lahf
ret
enter
inc
push
push
repz
clc
call
ss
insl
and
xor
pop
outsl
enter
fsub
mov
push
pusha
xor
jns
xchg
jmp
data16
imul
ljmp
cmp
ds
fldcw
sbb
or
push
lds
mov
adc
push
xor
cld
out
jo
jne
out
pop
hlt
mov
sub
test
sbb
cld
push
testb
jecxz
jb
xor
fwait
sub
pop
data16
imulb
pusha
jae
ds
cmp
das
int
jno
fistl
std
inc
insb
jecxz
shr
gs
gs
cmpsb
fdiv
push
pop
push
fs
clc
ret
mov
xchg
xor
mov
pop
mov
cmp
data16
jbe
repz
loopne
cmc
xor
ficoms
out
jb
cmp
jne
test
or
xchg
dec
stos
in
or
lea
cmpsl
and
add
or
pop
arpl
cmp
inc
je
dec
dec
mov
add
inc
sub
dec
jae
mov
dec
push
inc
inc
leave
add
push
jge
push
lcall
insb
shr
mov
clc
pop
add
pop
mov
push
dec
and
mov
out
xchg
and
inc
cmp
lret
sbb
js
in
mov
cmp
pushf
xor
pusha
scas
sbb
inc
aam
jge
pop
xchg
ja
call
loopne
ret
fsts
xchg
and
jge
xchg
daa
and
add
mov
ret
jns
pop
aaa
in
xchg
cmp
int
aaa
cmp
xchg
sub
inc
cmpsl
mov
mov
jb
insl
push
inc
out
push
sub
hlt
mov
mov
bound
pusha
mov
add
outsl
push
jg
sbbl
pop
pop
or
mov
jmp
ret
push
cwtl
rorl
sub
adc
jl
inc
cmp
popf
xchg
pusha
xchg
pop
test
fsubrs
out
sub
add
loop
pop
fbstp
pop
cltd
jb
jle
adc
stos
adc
xchg
xchg
lcall
jp
loope
scas
inc
jns
sub
mov
lret
enter
repnz
mov
out
cmpsl
adc
inc
push
add
pop
mov
mov
push
popf
enter
imul
int
hlt
or
test
out
ss
sub
out
pusha
loopne
cmpsb
or
sub
dec
push
repnz
shlb
or
lock
fsubrs
cltd
mov
js
push
addb
or
cmc
cwtl
xchg
sbb
icebp
jmp
pop
imul
sub
inc
iret
ss
cmc
and
add
lods
adc
xor
cmp
out
out
push
movsb
add
pop
jb
dec
inc
jecxz
jne
xchg
cmp
repnz
cmp
and
gs
xlat
xchg
mov
and
or
xchg
dec
mov
shufps
xor
dec
int
xchg
and
stos
mov
movsb
aam
shr
sti
sbb
push
push
das
mov
fcomps
xor
out
stc
add
mov
xchg
roll
inc
fsubrl
lret
int3
cmp
andl
inc
mov
xchg
outsl
push
into
or
push
pop
add
sub
or
sti
mov
rorl
aam
add
lret
addr16
inc
cmp
push
jbe
out
lods
mov
fldl
pop
bound
adc
jne
mov
inc
and
inc
sti
sub
mov
cmpsl
repz
mov
xchg
jge
mov
cmpsb
gs
dec
fdivrl
or
inc
xor
rol
out
scas
dec
push
cmpsb
rcrl
add
mov
jmp
les
inc
push
pushf
sbb
jle
sbb
out
movsb
inc
mov
sahf
xchg
xchg
sub
aaa
ficoml
idiv
aad
mov
xor
adc
adc
popl
lret
fnstenv
sbb
mov
dec
jns
mov
dec
loopne
arpl
clc
ss
test
add
push
icebp
and
add
enter
out
frstor
ja
push
mov
mov
add
enter
jno
xchg
sahf
cmp
jno
or
push
les
add
pushf
je
xor
fdivs
adc
popf
inc
mov
mov
movsb
out
cld
adc
in
iret
mov
dec
sub
leave
mov
pop
daa
inc
inc
data16
or
fimuls
fs
addr16
or
sbb
dec
xor
jmp
mov
pop
cmp
notb
aam
jne
pusha
divb
subb
icebp
mov
mov
fs
jae
lret
xchg
fidivrs
mov
js
in
sbb
jmp
lds
ja
popa
dec
jnp
xlat
pushf
xchg
and
cmp
add
lret
imul
aad
lret
push
movsl
sbb
int
cwtl
roll
mov
es
xchg
and
fisubl
xchg
lahf
jl
out
jp
ficompl
subl
pusha
add
xchg
lods
scas
or
iret
mov
push
xchg
xchg
cwtl
mov
or
add
daa
pop
and
les
inc
inc
xor
cli
lock
insl
ret
lcall
pop
sbb
inc
ret
xor
jmp
fsts
hlt
outsb
xor
push
jo
movsl
xchg
push
sub
jmp
xchg
jl
pop
sub
adc
scas
jnp
popa
repnz
test
roll
pusha
cld
inc
js
shrl
pop
sti
mov
mov
sbb
cmp
jb
xor
jp
dec
push
jle
pop
add
outsb
or
jge
aaa
cmp
and
loope
jno
and
lret
jge
sarb
outsb
dec
xor
insl
xor
cmp
jmp
and
lcall
loop
add
testl
orl
lcall
xchg
rorb
int3
sub
sbb
mov
and
xchg
lock
and
push
jle
and
enter
test
inc
pusha
push
lcall
jno
ss
pop
inc
insl
push
mov
subb
out
pop
loopne
pop
lret
mov
repnz
mov
nop
add
mov
push
jo
mov
repnz
fiaddl
cmp
pop
push
out
or
sbb
push
mov
mov
rcrl
push
dec
dec
imul
cmp
lods
lret
shrb
pop
ds
rolb
mov
mov
loopne
int
mov
es
add
sbb
dec
cmp
push
lods
sub
mov
iret
xlat
aas
push
ljmp
test
gs
ret
mov
ret
loope
inc
lret
dec
add
mov
pop
aas
into
mov
and
stc
xchg
movsl
push
lods
xor
lea
sub
std
jno,pn
cmp
imul
cmc
sbbl
mov
cs
fwait
xlat
mov
xchg
shrl
and
cld
into
daa
stos
adc
int
pop
jno
outsl
xchg
jge
push
test
fimuls
pop
xchg
jge
arpl
adc
scas
daa
call
aam
aad
imul
xor
jns
xor
jge
icebp
sub
ja
repz
or
adcl
nop
jecxz
out
aaa
and
shrb
inc
cmp
idivb
fidivs
cli
sub
js
outsb
es
xor
push
fdivp
leave
pop
push
sub
xchg
push
addr16
cmp
jb
imul
add
xchg
fistl
ss
adc
cs
daa
loopne
xor
sbb
divl
lahf
cmpsb
cli
imul
mov
inc
decl
pusha
push
int3
mov
rcrl
push
jb
adcl
dec
xchg
or
imulb
aad
repnz
push
lea
dec
lcall
movsl
cmpsl
mov
repnz
cmp
aad
adc
subl
mov
lock
icebp
fsubrl
push
mov
xor
mov
cmpsb
mov
les
insl
in
cltd
ss
mov
ret
jae
les
jo
xchg
cmp
test
nop
push
loopne
lods
push
gs
push
cmp
jl
or
hlt
repz
test
pop
subl
mov
arpl
mov
cs
adc
push
jl
js
inc
insl
xchg
push
adc
pop
xchg
mov
cmpsl
imul
push
cli
popf
fst
and
shlb
dec
lret
push
mov
and
mov
fildl
stc
xor
ds
cmpsb
lods
xchg
add
xchg
mov
pop
mov
int
pop
loop
jne
icebp
negl
xor
or
scas
or
dec
mov
adcl
push
dec
mov
insb
pusha
loopne,pn
sarl
cwtl
hlt
cmp
adc
lret
lret
pop
fisttps
jl
pushf
lahf
test
xor
addr16
push
test
addr16
cmpsb
mov
pop
mov
mov
adc
mov
push
adc
pop
ja
inc
and
xchg
das
jnp
pop
sar
inc
call
adc
das
or
sti
jp
mov
mov
fdivrs
xor
daa
cmp
lea
fwait
and
xor
faddp
ss
inc
sub
arpl
fnsave
out
mov
or
xchg
mov
sbb
cmp
out
sbb
in
mov
pushf
jecxz
or
outsb
inc
mov
cli
inc
sti
push
mov
stos
arpl
push
nop
xchg
and
dec
out
dec
inc
inc
lds
pop
stos
stc
cmc
in
hlt
jo
and
sbb
mov
xchg
cwtl
testb
scas
addl
xor
ficompl
das
push
jle
lcall
int3
aam
loope
pop
xor
mov
jns
jbe
push
mov
mov
das
lods
or
leave
bsf
subb
pop
or
popl
sub
in
jns
push
or
cs
lea
cld
and
xchg
test
inc
pop
aad
out
movsb
adcl
or
cmp
or
aam
jnp
movsb
mov
roll
sbb
lea
into
pop
xor
cltd
ja
jns
dec
and
dec
scas
inc
movsb
cmp
fldl
adc
gs
xchg
xor
sbb
les
pop
jbe
scas
xchg
cmpsl
or
jbe
cmpsb
cmc
scas
add
lret
push
arpl
lret
xchg
jnp
add
cld
sarl
push
push
push
cli
lds
sub
adc
sub
movsb
cs
fnstsw
adc
xorb
imul
das
inc
insl
mov
xor
lods
xor
jae
cli
cmp
scas
mov
inc
stos
mov
jno
dec
sbb
pxor
jo
popa
inc
jb
add
cmpsl
notl
sub
into
in
cltd
dec
cmpsb
imul
cmp
inc
icebp
add
in
mov
or
lcall
mov
js
adc
daa
rol
jle
dec
loopne
sbb
xacquire
inc
cmp
xchg
sbb
int
adc
icebp
mov
inc
lea
inc
rcrb
fsubrl
cmpl
xor
sbb
outsl
jb
ret
stos
shl
cmp
and
je
stos
jge
or
cmpsl
mov
xchg
shrl
vcvtss2si
addr16
cltd
xor
xlat
mov
adc
and
adc
insb
or
aas
cmp
push
push
fildl
mov
xor
xor
in
or
push
pop
jecxz
add
imul
pop
push
test
repz
inc
cmp
icebp
aas
pop
daa
or
xchg
shll
push
sub
xchg
and
jge
mov
or
add
and
dec
aam
cmp
or
lds
lock
xor
jg
xor
mov
sub
or
xor
jmp
mov
cltd
fldcw
sbbb
mov
sub
and
arpl
loope
lahf
stos
mov
daa
dec
dec
xor
or
mov
xchg
cmp
cmp
aaa
cmpsl
stc
jo
xchg
jbe,pn
mov
test
lods
mov
sub
iret
outsl
pop
add
hlt
mov
sub
sti
pop
subb
inc
sqrtps
stos
jne
fistl
out
jb
das
pop
push
push
inc
cmp
stos
fadd
lahf
and
or
dec
sub
ja
push
aas
stos
les
lods
out
jnp
shll
fisubs
jno
xchg
fisttpl
rcl
sub
repz
mov
jle
inc
loop
sbb
ljmp
dec
mov
movsb
dec
mov
pop
sub
hlt
cmp
or
bound
push
sbbl
push
pop
xchg
mov
mov
adc
fstl
dec
mov
aam
inc
je
arpl
add
cmpsb
fs
scas
in
xor
and
add
enter
push
das
in
adc
pop
imul
jmp
mov
sub
sti
push
dec
jb
jp
ret
pop
out
stos
mov
xchg
iret
aad
loopne
add
stos
fdivrp
sbb
sbb
shl
adc
mov
pop
sub
pop
fld
cmpsb
inc
loopne
push
popa
jge
mov
xor
mov
cmp
faddl
cmc
sub
shll
add
cmp
mov
sub
pop
pop
das
mov
xchg
jno
shrl
push
loope
popa
fstpt
xchg
data16
into
jnp
pop
fstps
mov
fdivp
movl
pop
jge
jmp
mov
aaa
cmp
sbb
lds
addr16
dec
mov
mov
dec
lods
pop
sub
enter
sub
pop
jbe
xor
jns
pop
cld
sbb
xor
loopne
cld
pop
jns
fld
cmp
inc
push
sti
mov
addr16
cmp
pop
in
not
mov
mov
push
mov
clc
mov
mov
cmpb
ja
lods
sti
fbstp
fidivl
stc
in
bound
pusha
jp
push
fcmove
in
movsb
jmp
sbb
push
out
sbb
sti
movsl
or
xchg
lea
pop
pop
mov
lods
out
je
ret
dec
push
inc
sbb
test
adc
pop
lea
cmp
test
test
mov
dec
dec
scas
adc
sub
cld
pusha
cmc
stos
adc
adc
xchg
test
push
repnz
insb
std
in
iret
addl
sbb
jae
fidivs
mov
adc
int
xor
jle
mov
imul
mov
sahf
enter
add
nopl
mov
or
dec
pop
jle
mov
aas
sti
in
dec
cmc
inc
ljmp
ss
es
inc
testb
in
lock
push
inc
int
daa
adc
lcall
dec
xchg
pop
mov
shrb
lahf
push
lock
daa
push
xor
jnp
jns
mov
mov
inc
xchg
cli
xor
roll
add
js
inc
mov
ret
jnp
adc
adc
movsl
andl
mov
mov
sub
lahf
mov
jecxz
mov
cmp
xchg
jecxz
sub
ret
and
rolb
in
dec
mov
and
inc
lret
insl
push
sub
push
decb
js
popa
sahf
shrl
push
popa
pushf
orb
lret
and
shll
sub
popf
call
and
movsl
hlt
pop
cld
or
sbb
dec
shl
cmpsl
mov
int
inc
scas
sub
sbb
sbb
inc
lods
mov
lahf
mov
inc
jmp
mov
lea
scas
repz
mov
fwait
ret
add
shll
jl
sub
mov
add
cmp
aaa
in
test
int
jbe
lock
popa
lahf
negl
or
popf
iret
pop
or
mov
fwait
aas
sub
aad
and
pushf
cmpsb
cld
ja
std
clc
cld
add
inc
dec
js
test
xor
mov
xchg
sbb
arpl
loop
and
lock
ror
adc
or
cmp
mov
xchg
or
ret
xchg
xor
adc
push
jno
cwtl
push
sbb
movzwl
push
jecxz
add
fidivrl
ficoml
movl
push
dec
cli
push
sub
ret
mov
cld
push
mov
repnz
popf
xchg
cmpsb
in
pop
int
mov
ja
test
mov
daa
fisttpl
adc
push
dec
lret
daa
adc
inc
loope
into
mov
xchg
cmpsl
add
lcall
sbb
and
loopne
cwtl
dec
rcr
inc
mov
xchg
push
sti
pushf
scas
mov
push
adc
int
into
fdivr
add
or
push
pusha
jne
stos
addl
popf
ror
iret
in
out
fmull
repz
xchg
outsb
dec
sbb
mov
add
stc
lcall
in
sub
dec
dec
stos
mov
hlt
fiadds
inc
clc
xor
and
pop
push
subl
sti
aad
pop
pop
in
xchg
mov
cmp
adcl
push
push
mov
iret
add
push
out
mov
stos
and
cmp
cs
cmp
data16
inc
sub
pop
jge
jne
jb
sbb
dec
add
mov
pushf
mov
neg
das
aas
mov
repz
inc
lcall
dec
jnp
call
push
mov
inc
mov
mov
mov
je
pop
pusha
jns
mov
sbb
and
xchg
mov
loopne
jge
and
sahf
imul
xor
push
inc
xor
xchg
leave
jecxz
outsl
bound
mov
xor
cmpsb
in
fcomps
cld
dec
sbb
sub
adc
mov
cld
pusha
pop
adc
test
add
push
jae
imul
cmp
int3
movsl
ret
xor
cmp
cmpsl
loope
cmp
in
push
xchg
mov
xchg
push
pusha
cld
dec
xchg
js
xchg
pop
js
fxch
jne
jne
nop
loop
pop
loope
sbb
xchg
mov
add
add
std
les
ficomps
lea
xor
test
stos
cmp
adc
sub
js
xor
lea
pop
test
mov
rcll
add
or
mov
push
iret
lea
xor
xchg
popf
jge
push
pop
sbb
push
je
cmp
mov
in
cmpsl
push
mov
jo
pop
mov
ss
imulb
jb
sub
repz
add
enter
push
add
xor
mov
bound
inc
int
sbb
cmp
or
rol
jg
idivb
in
push
scas
push
lods
mov
inc
mov
and
clc
shlb
xchg
add
xchg
sub
addb
test
dec
ffreep
pop
cwtl
adc
js
movsl
jecxz
and
mov
ret
leave
jne
imul
push
cmp
mov
inc
pop
mov
insl
mov
int3
pop
lds
out
ljmp
lods
adc
push
dec
das
repz
loop
sub
aad
arpl
jecxz
mov
pusha
or
js
add
pop
xchg
mov
or
les
call
es
lret
sbb
lock
arpl
sbb
lret
adc
jecxz
add
dec
faddl
lock
mov
and
push
leave
push
outsl
or
add
pop
pusha
jae
stos
repnz
scas
and
pop
adcb
add
fs
xor
cs
pop
adc
inc
rcll
xchg
or
stos
mov
add
cs
jmp
je
cmpsb
les
fadds
inc
mov
mov
and
fisubrl
inc
lea
xchg
lds
mov
nopl
mov
mov
push
icebp
mov
jae
fcom
push
fcmovnbe
ds
int
or
ror
pop
sub
mov
adc
pushf
xchg
push
push
xor
sub
out
xor
sub
cmc
fwait
fs
jne
inc
lret
push
sub
mov
xchg
jge
ror
loop
jbe
adc
sbb
dec
xor
mov
fildll
add
mov
lret
ljmp
rcr
loopne
xchg
inc
push
adc
lock
xor
push
mov
xlat
hlt
cs
cwtl
in
arpl
or
into
push
jecxz
addr16
sub
sub
cwtl
lods
mov
dec
fisttps
int3
loope
mov
pop
jmp
jns
jo
or
imull
xor
pop
pushf
mov
lret
xchg
mov
sub
jno
dec
sbb
fsubs
xor
stos
push
lock
add
iret
cmc
in
jnp
iret
inc
inc
filds
nop
mov
ja
jl
fwait
cwtl
std
push
idivl
and
icebp
lods
mov
dec
sub
mov
mov
int
fldenv
roll
cmp
shl
js
or
dec
inc
push
pushf
and
mov
mov
jecxz
and
mov
stos
push
test
insl
dec
add
xor
inc
icebp
adc
scas
stc
sbb
dec
mov
cli
jp
lahf
push
es
fildll
or
jnp
jg
daa
mov
in
or
add
nop
mov
fistl
stc
mov
je
adc
pop
push
xor
adc
jns
xchg
shlb
jno
popf
movsb
cmp
push
xor
pushf
rcrb
jne
aad
std
sbbl
and
xor
mov
testb
dec
adcl
pop
mov
sbb
es
enter
and
fsubs
sbb
jecxz
and
std
and
cli
dec
sbb
jae
cmc
mov
out
mov
jle
pop
jg
xor
push
fxam
jge
push
dec
add
sbb
inc
call
sub
sbb
stos
add
andb
pop
xchg
adc
push
and
lret
sub
xchg
cmpsl
jecxz
repz
dec
mov
or
bound
into
lock
ss
in
jmp
cltd
jb
xor
decb
shlb
imul
inc
test
mov
or
jecxz
cmp
stc
or
jnp
sub
loopne
test
lods
or
mov
or
adc
pop
pop
pop
and
call
enter
shll
jno
incb
mov
pushl
push
outsl
idivl
cli
or
sbb
inc
jno
mov
xchg
imul
xor
nop
cld
adc
add
repz
lock
inc
push
dec
daa
shll
rcll
ss
imul
js
std
iret
jae
adc
xor
hlt
jo
insb
push
decl
testl
or
jl
loopne
cwtl
ret
ljmp
sbb
dec
or
push
std
jg
and
fnstcw
repnz
je
inc
jp
addr16
aas
ja
orb
cmp
daa
dec
cwtl
scas
xor
jg
iret
or
ret
dec
adc
stc
or
add
call
mov
movsl
mov
dec
cs
insb
push
push
ret
jo
mov
cmc
and
sbb
js
cmpsb
or
mulb
pop
sbb
fisubrs
add
outsb
jl
loope
stc
push
push
push
out
out
cmp
cmp
dec
mov
mov
mov
adc
mov
rcrl
inc
dec
out
push
sub
mov
data16
pop
jle
adc
xchg
and
push
stos
out
xchg
pop
movsl
inc
mov
or
cltd
jb
sub
enter
sbb
loop
ret
push
scas
out
imul
out
pop
or
push
mov
call
xchg
sbb
rorb
loope
cmp
lret
fiaddl
outsl
push
std
int3
dec
pop
fistl
fdivrl
test
xchg
xchg
mov
repz
adc
jno
notl
mov
dec
psrad
or
outsb
cld
mov
inc
clc
adc
test
iret
mov
shll
fwait
repz
dec
jge
mov
ds
xlat
imul
imul
mov
scas
mov
jne
jmp
jo
cltd
fisubrs
push
dec
fidivrl
pop
or
pop
xor
add
pop
xchg
rorb
xchg
mov
cmpsb
out
dec
jno
sarb
neg
or
fdivs
push
cld
xor
pusha
mov
push
cli
mov
scas
push
fsubr
adcb
je
xor
push
shll
lahf
jb
out
push
jnp
movsb
aad
rcrl
push
or
rclb
movsl
cli
movsb
sti
jecxz
adc
vmaxps
and
mov
inc
jo
mov
add
addr16
fwait
pushf
xchg
jecxz
sbb
pop
repnz
orb
js
pop
sub
pop
jmp
inc
xor
push
sub
pop
inc
xchg
dec
inc
sub
subl
pop
clc
and
in
adc
add
sbb
mov
pop
mov
or
mov
inc
stos
adc
in
mov
cmp
xorb
mov
inc
fcoml
pop
or
sbb
mov
push
adc
cmp
scas
dec
push
xchg
add
jmp
das
imul
or
or
pushf
add
rcl
mov
xor
aad
test
dec
adc
es
shll
pop
mov
mov
ret
xchg
push
test
fistpl
scas
daa
movb
test
insb
das
aaa
inc
pop
sbb
mov
sbb
cli
jg
fiadds
test
sbb
adc
je
or
inc
mov
push
stos
das
cld
loop
jns
mov
add
xchg
sti
int3
adc
sahf
dec
stc
outsb
jecxz
xchg
or
mov
push
shll
inc
inc
sbb
shr
int
lcall
lea
push
pop
jbe
add
xchg
pop
je
mov
mov
test
pop
imul
or
inc
fisttpl
push
cmc
add
fsubrs
mov
xor
cmpb
push
cmp
sub
and
fucomi
cmp
dec
cmp
ret
iret
loop
js
xor
add
pop
in
fwait
aas
mov
lret
push
pushf
cmp
dec
mov
mov
adc
mov
push
test
popa
mov
mov
sbb
inc
ret
push
stc
pop
add
pop
ss
lods
and
dec
addr16
test
jbe
shlb
shrb
jecxz
jmp
gs
lods
jae
or
fcomps
mov
push
mov
sbb
or
and
jge
adc
or
shlb
mov
and
and
xchg
add
dec
jae
iret
pop
call
mov
mov
pop
dec
pop
push
or
mov
push
inc
add
cwtl
pop
xlat
mov
es
std
pusha
jns
lds
clc
les
push
mull
mov
sbb
add
xchg
scas
sbb
js
jmp
and
push
test
mov
jbe
and
shlb
cmpsb
movsl
shll
pop
cmp
ja
sub
pop
adc
cmc
lods
adcl
mov
mov
repz
and
lcall
je
and
and
jmp
mov
enter
xor
sbb
call
jb
pop
arpl
or
sti
leave
jp
ret
fstpt
popa
into
and
imul
lds
xor
les
fcoml
or
cs
insb
jmp
das
rcl
mov
fdiv
push
sahf
imul
mov
test
scas
popl
out
dec
addr16
jle
cmpl
pop
push
popa
sbb
idivl
cmp
mov
push
in
rclb
cmpsb
mov
sbb
popa
inc
inc
adc
cmp
adc
jmp
popa
sbb
sub
dec
jge
add
and
mov
sbb
push
sar
inc
xchg
insb
add
fs
stos
pop
test
enter
shlb
push
aaa
jne
int
fwait
add
daa
addb
mov
inc
insb
inc
xor
mov
and
rcr
mov
ret
xor
and
repz
cmpsl
push
fstps
sbb
mov
cwtl
fimull
xchg
push
fs
repz
adc
cmpsl
aas
scas
push
das
loop
cmp
stos
shll
lahf
push
cmpsb
pop
out
or
mov
movsb
or
idiv
and
xor
rolb
ret
adc
push
out
lret
mov
orb
int3
sbb
jo
data16
cmpsl
in
sub
mov
ret
sbb
repz
daa
and
pop
mov
add
xchg
cmp
bound
std
pop
in
or
mov
bound
gs
je
out
dec
push
cmpsl
sub
cmpsb
insb
decl
cmp
dec
mov
xorb
or
jge
les
pop
push
mov
fiaddl
out
mov
xor
pop
popf
mov
mov
leave
lcall
push
push
push
nop
rcrl
cmpsl
shll
pop
push
clc
mov
cmp
adc
xor
repnz
jge
js
cwtl
mov
sbb
cmp
push
xlat
sbb
aas
daa
movsb
pop
int
or
mov
xchg
and
inc
dec
loop
and
or
cmp
sbb
int3
arpl
cmp
fldenv
ds
jge
cltd
cmp
bound
mov
arpl
xor
fdivr
dec
aaa
adc
and
add
stc
add
push
sbb
repz
out
mov
mov
iret
mov
sub
mov
mov
xchg
xchg
jmp
lock
pop
mov
dec
push
scas
sbb
data16
mov
pop
aad
imul
jge
jl
lods
in
jg
cmp
mov
jg
int
mov
xor
or
cmp
cld
sub
mov
jecxz
test
pxor
mov
jno
ret
int
jne
mov
sub
cltd
push
or
cmp
cmp
mov
mov
sahf
hlt
mov
xor
inc
mov
sbb
sbb
cmp
leave
push
cltd
sub
cltd
mov
and
into
mov
push
imul
mov
cmp
sub
or
jl
mov
test
or
xchg
mov
pop
inc
jl
inc
movsb
popa
jo
mov
ret
lods
add
out
lock
xor
je
mov
rclb
push
xlat
sbb
mov
inc
inc
cvtps2pi
call
push
pop
mov
push
jg
pop
cli
mov
jmp
sbb
adc
jmp
loope
out
jmp
fidivl
lcall
test
add
lahf
leave
arpl
les
and
xor
and
gs
paddusw
xor
cmp
inc
shlb
push
loope
pop
dec
inc
test
xchg
std
in
leave
jae
mov
add
divps
shrb
in
inc
repnz
inc
sbb
sti
pop
inc
mov
repnz
cmc
and
mov
shr
cmpsl
jl
movsl
out
mov
add
daa
ret
je
or
in
xor
xchg
sbb
push
jns
je
xchg
cmp
cli
pop
out
adc
or
mov
lock
mov
aaa
pusha
and
mov
jmp
pop
mov
sbb
jbe
in
dec
and
fmull
mov
lock
icebp
testl
pop
pusha
mov
mov
dec
dec
push
fsubp
cwtl
cmp
push
sarb
pop
cmp
sub
cmp
pop
es
call
inc
push
push
ret
sub
jo
mov
inc
add
int3
xlat
add
add
inc
insb
inc
sarb
ficompl
shlb
dec
push
dec
cmc
xchg
xor
pop
into
and
rcrl
inc
sti
std
sub
std
inc
pop
dec
lds
out
add
in
fcoml
mov
cmc
push
pop
pop
or
pop
sub
sbbl
lret
loope
inc
sbb
push
daa
ja
dec
add
mov
int3
sbb
cmp
jb
push
and
ja
pop
stos
inc
daa
xchg
mov
mov
arpl
lret
shlb
fs
arpl
popf
ss
adc
sti
es
mov
push
jbe
inc
sbb
xor
icebp
imul
imul
mov
xor
push
adc
adc
popa
xlat
and
mov
pop
outsb
push
hlt
dec
xlat
and
dec
jle
imul
pop
mov
xor
popf
adc
nop
xor
xor
pop
xchg
into
pop
fwait
xchg
and
sbbb
cld
push
mov
hlt
xchg
movsl
jle
add
faddp
lock
jae
sub
dec
mov
cli
fcomi
xor
mov
icebp
xchg
aad
gs
outsb
lds
dec
xor
rcll
js
clc
dec
cld
mov
mov
mov
ret
dec
push
shrl
sbb
adc
clc
dec
cmp
rcrl
push
sbb
filds
pop
sbb
jae
cmp
inc
out
in
dec
mov
dec
add
lock
cltd
pop
hlt
test
lret
cmpsb
stc
adc
mov
add
movsb
and
das
sbb
or
repz
bnd
shl
daa
repz
cmp
jne
testl
nop
rcrl
fmul
out
movsb
adc
and
cld
outsb
pop
outsl
scas
dec
dec
dec
es
or
jp
inc
popf
dec
sbb
std
cmp
pop
outsl
lret
jnp
cmc
fwait
andl
std
popf
sbb
loop,pt
xchg
ret
notl
daa
sbb
je
mov
mov
inc
and
pop
jbe
stc
jae
std
pop
insb
mov
jns
pop
jmp
fdivrs
mov
add
xor
jle
jge
jge
sub
mov
jp
popf
dec
push
pusha
and
fwait
sub
fstl
inc
test
jle
jmp
lea
in
sub
subb
aaa
cltd
loopne
jb
lret
into
pop
jge
scas
stos
mov
mov
out
loopne
ja
mov
bound
push
hlt
outsb
ja
ds
scas
in
lock
aas
test
jle
dec
sahf
leave
mov
sub
adc
or
insl
cmpl
fst
lret
insl
arpl
dec
fwait
aam
pop
ljmp
lea
or
bound
sub
mov
ljmp
fwait
sub
test
in
push
mov
mov
jne
ret
outsl
sbb
pop
js
add
cwtl
add
push
into
sbb
pop
jge
dec
or
test
je
cmp
in
lret
mov
js
hlt
cmpsl
jmp
cmp
xor
mov
push
or
lods
dec
aaa
clc
or
imul
push
or
push
out
out
sub
push
xor
cmc
fdivs
jne
or
ljmp
lods
cmpsb
xchg
nop
xor
scas
fnsave
out
imul
xchg
incl
les
pushl
ret
or
xlat
inc
cmpsb
lcall
push
mov
sbb
mov
dec
dec
mov
fcomi
frstor
adc
lea
in
push
cmp
mov
push
xor
shlb
push
orl
stos
add
xchg
xor
idivl
jnp
xor
fdivl
add
jns
outsl
mov
pop
xchg
push
and
add
add
add
push
shlb
push
adc
inc
and
mov
add
xchg
mov
mov
jge
ds
lock
xchg
mov
enter
xchg
or
fisubrs
pop
mov
push
out
or
fsubrs
fdivs
inc
fmull
dec
cmp
adc
mov
jle
rorl
in
shll
add
sub
xor
inc
sub
add
subb
test
pop
mov
push
inc
mov
jmp
cltd
xor
lret
dec
ret
lods
rorl
mov
movsl
dec
xlat
inc
dec
xchg
mov
fcmovnbe
enter
cs
fldt
cmp
sahf
mov
or
testb
out
adcl
mov
dec
fnsave
loopne
aaa
movl
sbb
sahf
and
add
imul
lcall
dec
scas
inc
sub
in
fs
rol
or
test
adc
test
out
fldenv
xchg
or
sarb
repz
xor
mov
mov
nop
lods
call
js
jmp
cmp
iret
mov
push
cmp
xchg
andl
imul
sbb
xor
and
inc
jnp
stos
imul
pop
and
mov
jno
push
mov
repz
push
add
pop
test
or
fimull
fistpll
lods
out
pop
lahf
arpl
sub
add
fcmovnb
movsl
sbb
pop
je
cld
or
mov
push
fs
xchg
out
adc
mov
xchg
loop
and
inc
inc
out
icebp
or
mov
inc
inc
into
and
sbb
pop
cli
stc
scas
push
sub
xor
cmp
cmc
inc
lahf
cmpsl
aad
out
sahf
adc
scas
add
or
push
mov
push
inc
cmp
stos
out
push
xor
lahf
fbld
js
loope
or
sub
inc
adc
sti
sbb
je
fisttpll
sbb
xor
enter
cli
sub
push
push
dec
mov
scas
fwait
mov
outsb
jg
push
mov
cld
dec
add
xor
imul
andl
mov
pop
out
mov
fsubrs
jge
inc
sub
sbb
add
or
push
sub
push
cmc
xor
pop
stos
pop
pusha
decb
lret
fsubr
jg
xchg
and
pop
sub
scas
test
adcb
adc
je
aas
sar
push
test
test
sub
xchg
mov
movsl
call
or
pop
aaa
push
aad
mov
jge
mov
xor
mov
dec
in
js
pusha
out
scas
add
mov
aas
in
daa
pop
dec
das
lahf
je
adc
movsl
lret
aas
xor
inc
and
pop
fcompl
mov
stc
dec
movsl
jb
push
or
cmp
lahf
push
out
sbb
shlb
nop
mov
lcall
pop
jno
and
shld
xor
pop
imul
dec
dec
inc
xor
imul
fsubl
mov
out
stos
jmp
push
cmp
fisttpll
xchg
sbb
inc
ret
inc
shlb
adc
idivl
jle
rolb
sub
test
mov
mov
and
cmp
test
ljmp
je
mov
and
pop
loopne
js
bound
inc
lcall
mov
les
xor
and
mov
dec
scas
xchg
lods
push
aam
stos
jne
sub
mov
push
mov
repz
daa
and
jno
fadd
imul
xlat
lret
xchg
faddl
inc
ljmp
adc
mov
push
xor
out
out
or
sarb
int
dec
test
lods
push
push
xchg
mov
sbb
std
into
outsl
repz
push
cmpsl
cmpsl
fildll
call
add
xchg
out
push
xor
xchg
pop
pop
sbb
push
je
in
cltd
imul
sub
cld
je
xor
leave
xor
arpl
cmpsl
sahf
insb
daa
sbb
jo
test
pushf
mov
fld
mov
mov
rcll
fwait
adc
inc
mov
adc
inc
push
xor
mov
lds
int
cmpsb
mov
fstpt
call
shlb
aad
pop
adc
jl
sub
in
lahf
mov
in
out
push
pop
popf
fidivs
xor
push
adc
cmp
sub
or
js
or
ja
cmpsl
inc
imul
loopne
and
xchg
shlb
inc
leave
int
or
iret
nop
outsb
fsubrs
jp
cltd
les
cbtw
or
sub
loope
jg
cmp
dec
xchg
jno
xchg
or
jecxz
inc
mov
push
mov
out
mov
addb
lahf
mov
sbb
cmp
pop
mov
mov
lcall
out
xchg
mov
jl
lock
inc
repnz
pop
aad
sbb
adc
lea
es
mov
add
xchg
nop
push
xor
mov
into
pop
push
and
adc
mov
dec
pcmpgtd
scas
sbb
xchg
cmp
pop
in
inc
dec
cwtl
mov
sbb
insl
aaa
clc
xor
gs
int3
adc
std
ljmp
xchg
sub
cmp
lock
mov
cmp
mov
adcb
cmp
xchg
adc
push
cwtl
mov
jnp
dec
outsb
jne
cld
or
fiaddl
sbb
std
push
loopne
hlt
add
or
arpl
add
dec
outsb
repz
pop
ljmp
xor
sbb
jp
out
movsl
inc
adc
add
fimull
call
daa
test
test
aam
fisubrl
xchg
cmp
dec
pop
gs
xchg
or
sahf
rorl
adc
cmc
push
cli
mov
loopne
push
sbb
popa
add
push
divl
lds
imul
push
jns
aad
mov
sub
jecxz
pop
xchg
ja
mov
lcall
xchg
mov
push
cmc
test
mov
lcall
lret
pop
sub
xlat
mov
loop
daa
fisttps
and
xor
and
mov
add
rol
mov
jns
hlt
or
pushl
sub
cmpsb
ds
insb
arpl
loop
lds
mov
mov
fildl
mov
in
push
fwait
shrl
adc
mov
jle
popf
or
sub
pop
fsubs
nop
mov
cli
daa
cmp
mov
lahf
out
in
dec
xor
loopne
jp
jnp
cmc
add
mov
pop
sub
sub
add
mov
mov
mov
cmc
in
addl
sub
popa
push
add
adc
andl
popf
push
pop
movsl
adc
fcoms
repnz
push
xorl
cmp
dec
aad
adc
jo
jmp
jp
mov
dec
shl
gs
std
je
cmp
sbb
ljmp
mov
add
push
sub
out
dec
shl
int3
loopw
ffree
paddb
lahf
cwtl
fadds
pusha
out
mov
pop
push
inc
ljmp
lods
sub
and
mov
add
aad
dec
add
mov
jno
mov
inc
lds
sub
jmp
lcall
xor
add
outsl
and
add
cmp
and
hlt
bound
in
data16
jnp
and
push
mov
enter
mov
mov
xchg
add
sbb
mov
out
xchg
dec
fldcw
das
jbe
les
pop
ret
outsl
push
test
pop
bound
add
sub
mov
fwait
cs
inc
insl
ret
ficomps
sbb
dec
xchg
jge
or
cmp
and
stc
aam
jecxz
push
and
cmp
xchg
dec
ds
lock
xor
or
out
dec
mov
test
jge
cmc
add
repz
xlat
adc
nop
xchg
sbb
test
addr16
xchg
jle
dec
iret
inc
xchg
mov
cwtl
pop
inc
fistpl
cs
xchg
in
ja
les
scas
adc
adc
push
sub
cmp
inc
xchg
xorl
or
and
pop
jbe
sbb
pop
jmp
jmp
mov
cld
mov
mov
and
leave
daa
nop
call
dec
fmull
fs
mov
mov
nop
neg
pusha
movsl
std
ret
push
jmp
aas
lea
sbb
inc
jmp
imul
leave
jmp
adc
ja
add
mov
and
lods
pop
push
inc
rcl
add
cmpsb
daa
push
sub
and
inc
int
add
stos
mov
pop
and
and
scas
push
scas
pop
cltd
inc
scas
pop
leave
pop
pop
in
leave
sahf
insb
mov
dec
lea
adc
cmp
dec
das
push
shlb
fwait
mov
mov
jne
xchg
push
loop
or
sub
adc
sahf
aad
pop
bnd
leave
popa
int3
outsb
in
movsl
mov
xor
mulb
test
adc
add
sub
out
xchg
inc
vunpcklps
shll
xchg
jbe
inc
pop
and
xor
test
cmc
jl
lds
inc
sbb
outsb
mov
inc
pop
cltd
sbb
push
push
jp
mov
and
jmp
sbb
xchg
mov
mov
mov
shl
cmpb
gs
lock
xor
in
into
cmp
scas
stos
jb
aas
cmp
xchg
popw
scas
rcl
mov
subl
ja
mov
sub
sar
imul
pop
sub
inc
xor
arpl
fs
push
cmp
ljmp
push
pop
outsb
loopne
push
mov
mov
shr
dec
gs
popa
scas
pop
je
jne
cmpsb
lock
add
mov
das
sarl
or
arpl
inc
je
es
cmp
fcoml
jns
mov
stos
cmp
pop
xchg
pop
xor
mov
movsl
mov
xchg
ljmp
xchg
sub
and
cmp
dec
xchg
cld
mov
std
in
leave
mov
xor
pusha
sbb
sbb
bound
stc
add
mov
jae
xchg
pop
jge
arpl
fsts
sarl
pushf
push
or
pop
cmc
andb
jnp
and
jne
pop
dec
xchg
ret
test
push
sub
sbb
outsl
fstp
jne
rcrl
push
fnstenv
popa
pop
stos
inc
add
xchg
div
stos
repnz
mov
and
mulb
dec
inc
dec
adc
mov
xchg
add
lods
mov
or
cmp
sub
fs
aas
jle
cli
push
sub
lcall
js
dec
cmp
lret
pop
xor
xor
pusha
cmp
int3
das
inc
jp
icebp
jae
int
outsb
int3
aam
call
stos
add
mov
in
packsswb
and
hlt
mov
lret
cmp
inc
les
call
movsl
test
and
mov
pop
arpl
cmpsb
push
test
out
in
mov
cmp
fildl
int
idivb
xor
pop
and
or
roll
mov
mov
repz
jns
mov
in
sub
add
add
mov
lock
xchg
jbe
call
pusha
mov
out
les
mov
cmp
mov
push
xor
hlt
sti
xor
and
clc
sahf
in
jae
mov
xor
aaa
gs
sub
stos
pop
mov
insl
and
addb
mov
push
push
dec
fidivl
pop
xor
inc
mov
push
add
lahf
xor
jmp
sbb
sub
lea
xchg
and
jg
sub
ds
les
cmp
pop
insb
mov
iret
pop
gs
stos
incl
pop
mov
cli
in
sahf
filds
jo
xor
pop
pop
xchg
pop
jbe
xor
pop
test
cmc
jo
push
call
and
and
xchg
dec
ret
jp
dec
stos
mov
add
or
mov
stc
adc
loopne
in
add
pushf
xchg
dec
das
and
sub
hlt
mov
sbb
xchg
sbb
inc
and
or
lods
mov
adc
pop
or
jp
inc
adc
icebp
xor
sbb
cmp
adc
mov
push
push
outsl
int
sbb
push
addl
gs
shll
pop
mov
sbb
cmpsb
add
test
cmp
sub
pop
and
pusha
clc
push
fs
loop
fnstcw
push
int
imul
xor
adc
lret
inc
jecxz
bound
ds
mov
jo
mov
cmp
xlat
adc
push
popf
popa
loope
jp
adc
in
dec
nop
xor
fmuls
jmp
sbb
sub
icebp
or
int3
lods
sbb
sbb
jl
rcll
xor
sbb
add
sub
cltd
rclb
or
icebp
push
movsl
cmpsl
add
rcll
cmp
sbb
mov
insb
xchg
pop
es
mov
cmpsl
shlb
into
mov
pop
mov
in
xchg
add
push
xlat
xor
push
push
jl
imul
addr16
push
ret
ret
daa
adc
inc
mov
and
cmp
in
sahf
jae
int
out
pop
imull
cmpl
adc
ret
sub
and
jo
adcb
pop
aaa
cwtl
push
out
pop
subb
sbb
sub
das
int3
and
inc
push
xor
test
mov
je
xor
mov
cli
xor
push
push
push
mov
mov
sbb
jecxz
cmp
loopne
and
push
icebp
push
xor
daa
dec
cmpsl
lcall
jae
inc
inc
test
xchg
das
mov
mov
or
mov
imul
pop
inc
pop
rcll
push
ret
sub
push
add
sbb
mov
testb
popa
sub
repz
jne
call
dec
jb
push
xchg
add
aas
hlt
in
or
push
popa
jnp
repz
cmpsb
add
sahf
pop
sub
dec
leave
add
xchg
inc
inc
cmp
lcall
jb
adc
add
rcrb
add
insl
adc
push
dec
lock
lods
icebp
sub
dec
and
stos
mov
scas
jb
mov
xor
cld
mov
ds
sar
int3
arpl
push
icebp
or
xor
lret
enter
in
mov
dec
inc
int3
ret
pushf
roll
inc
data16
push
sarb
add
mov
and
repz
inc
inc
dec
stos
test
lret
bound
cmpsb
dec
add
xacquire
sti
fldenv
and
push
in
lds
inc
std
icebp
out
push
mov
repnz
dec
cmp
sub
cli
cmpsb
push
dec
or
iret
xor
mov
sbb
dec
xor
xchg
in
sub
or
sub
mov
add
push
into
sarb
popf
xor
jge
fwait
stos
mov
out
xchg
loop
icebp
jns
add
sub
add
roll
or
push
jle
out
shr
cmp
fisttpl
and
lods
mov
sbb
sub
movsb
clc
stos
iret
fstpt
sub
shlb
js
push
adc
xlat
gs
and
or
sahf
inc
iret
lock
mov
icebp
inc
fisubl
pop
roll
cld
loop
and
add
push
or
iret
xor
mov
push
pop
mov
jae
dec
cmp
cmpsb
lahf
pop
test
add
rcrl
shrb
ljmp
mov
cmpsb
mov
xchg
in
cmp
inc
lret
push
out
fbstp
mov
ljmp
xor
test
push
stos
mov
neg
fwait
test
in
xor
call
enter
movsl
int3
sti
mov
mov
lret
xchg
jecxz
mov
mov
std
loopne
jne
sbb
dec
jnp
test
int
inc
aaa
cli
data16
lcall
aad
lret
push
jg
les
fstps
or
rorb
push
xchg
ss
leave
jg
adc
bound
popa
sbb
xchg
and
mov
cwtl
push
push
mov
js
xor
xor
loope
popa
sti
in
cmpsl
sub
or
scas
clc
mov
movsb
xlat
mov
pop
xchg
inc
les
popf
dec
pcmpeqw
cmp
adc
jno
cmpsb
das
out
cmp
xor
sahf
mov
cld
push
in
popf
std
or
dec
mov
xchg
je
jp
inc
dec
sbb
rcr
pop
jl
jb
incl
cmovb
push
cltd
fdivr
pop
push
int
ret
popa
mov
scas
repz
or
mov
shlb
sti
rorb
cld
mov
cli
mov
pop
jecxz
rclb
ss
xor
int3
pop
sub
popf
mov
adc
ds
loopne
fdivl
hlt
out
add
pop
sbb
sub
pop
pop
repnz
cld
fnsave
mov
add
cmp
xor
pop
je
mov
jns
pop
scas
or
jmp
push
or
mov
lods
push
xor
and
cmp
adcl
sub
cmp
cs
iret
scas
cmp
out
adc
mov
jo,pn
test
ficoml
xchg
and
iret
cmpsb
cmp
nop
push
inc
faddl
mov
and
push
xchg
push
lods
jb
jge
jg
and
mov
lods
es
xlat
sti
fs
dec
call
cmp
repz
push
xor
or
jae
mov
or
faddl
pushf
stc
or
stos
mov
mov
push
xor
mov
xor
cwtl
sbb
jno
lret
orl
mov
xor
ja
inc
hlt
mov
out
out
mov
sbbb
adc
sub
aam
popa
push
sub
jmpw
imul
jl
or
mov
sub
push
subl
xor
call
test
mov
mov
lahf
sti
inc
push
dec
mov
loope
cmp
push
js
jg
or
mov
icebp
push
mov
lods
addr16
mov
inc
adcl
into
pop
pop
enter
xor
movb
in
xchg
push
insb
add
or
aam
or
fcom
xor
in
out
mov
enter
cmp
xor
jecxz
mov
xchg
adc
lcall
aas
and
pop
repz
testl
and
lock
dec
xchg
sbb
sbb
fcmovnu
lret
mov
imul
mov
flds
scas
subb
push
cwtl
fcomps
stos
dec
mov
sbb
fistpll
jns
pop
xor
pop
or
popf
orb
loopne
push
cmp
lret
sarb
xchg
push
movsb
or
icebp
push
test
or
mov
push
or
dec
shll
mov
aam
cmp
movsb
cmp
aas
add
cld
sbb
pop
mov
aad
mov
xlat
or
sbb
mov
mov
int3
inc
jle
adc
subl
mov
dec
cmc
pushl
mov
insl
dec
jnp
repnz
stos
cmp
adc
outsl
mov
outsl
xchg
xlat
mov
mov
mov
and
mov
push
xchg
jne
add
cltd
dec
into
ret
fwait
xchg
mov
dec
into
daa
inc
inc
pusha
jno
push
dec
jge
in
sbb
shll
xchg
push
addr16
or
mulb
mov
dec
lret
xchg
mov
mov
cmp
cmp
fnstcw
inc
mov
jae
lahf
jecxz
movsb
pop
lock
mov
outsl
data16
enter
jp
testl
sbb
push
push
mov
sbb
or
jne
adc
aam
push
jl
pushf
fs
mov
adc
cvtpi2ps
test
nop
push
mov
fistl
insb
inc
loope
sub
outsl
ffreep
xor
xchg
insl
or
and
xchg
mov
mov
mov
jo
lret
jecxz
push
push
daa
push
jae
scas
inc
faddl
add
push
out
test
dec
sbb
or
xor
jl
xlat
jle
psllq
inc
es
dec
jmp
inc
shrb
imul
cltd
lea
and
mov
lods
mov
add
addr16
fcomps
jle
lods
pushl
xchg
sbb
mov
mov
test
push
mov
insb
ret
mov
ljmp
notb
cs
jg
push
js
insl
jnp
push
push
mov
mov
insl
lret
add
inc
mull
insb
loop
mov
cld
add
pop
sbb
sub
in
dec
and
mov
adc
scas
mov
imul
int3
dec
pop
fs
or
xchg
mov
and
dec
push
les
xor
in
add
lds
push
dec
push
sub
mov
push
xchg
jp
dec
xchg
push
fdivr
aad
into
rcl
mov
pop
ja
push
out
cmp
xor
shll
jl
add
ror
inc
fnstcw
fstpt
push
push
xchg
mov
cmpsb
sub
out
mov
mov
call
ret
shrb
into
orb
inc
decl
mov
cmp
icebp
pop
jge
mov
mov
stc
pop
icebp
out
sbb
aaa
test
rclb
outsl
mov
adc
int
mov
mov
sub
inc
xor
dec
imul
dec
call
and
xchg
jecxz
inc
into
dec
repnz
repz
fwait
mov
adcl
sysenter
push
mull
mov
aaa
lods
xchg
dec
jne
leave
or
int3
and
and
xchg
popaw
cmp
xchg
push
andl
xor
jecxz
dec
iret
inc
lods
inc
fisttpll
mov
push
xchg
cld
and
dec
mov
jmp
adc
xchg
insl
mov
loope
jae
je
sbb
add
adc
xchg
rorb
pop
mov
in
push
pop
iret
stos
ss
add
call
cmp
cmc
mov
sub
ret
jl
js
mov
fdivrl
jno
dec
mov
ret
rorl
push
imul
sbbb
mov
dec
mov
adc
into
xor
movsl
imul
push
daa
mov
dec
repnz
jno
dec
xchg
or
bound
push
cmp
aas
enter
lret
lcall
dec
xchg
jg
sbb
into
std
mov
sub
lcall
push
int3
jl
lea
lret
je
push
xlat
pop
xchg
and
in
sub
loopne
sarb
sbb
cli
cwtl
icebp
rcrb
loopne
adc
dec
jg
movsl
insl
stos
xchg
mov
jae
and
and
les
bound
daa
sub
call
push
xor
sub
push
mov
cmp
shll
xchg
add
inc
int3
dec
pushf
mov
dec
fdivr
xor
mov
insl
leave
popa
cmp
or
jbe
mov
ficoms
enter
push
dec
loope
aam
mov
das
adc
lret
push
inc
sub
stos
scas
xor
mov
dec
pop
mov
push
cs
cmpb
xchg
push
mov
sub
add
dec
aad
clc
ud1
ljmp
push
adc
push
pop
push
imulb
stos
sub
push
xor
sub
dec
sarl
jmp
pop
pop
dec
sbb
pop
bound
push
xchg
xor
push
out
int3
bound
mov
test
test
jl
push
jecxz
xchg
pop
cmp
xchg
xchg
sbb
sub
das
test
xchg
sbb
inc
je
push
cli
pop
in
mov
test
insl
pop
sbb
test
dec
dec
pop
rcl
pop
mov
mov
inc
mov
mov
push
int
xor
out
push
rclb
pop
or
xchg
decb
repnz
lds
fs
mov
int
xchg
push
pop
jg
inc
fisttpll
mov
mov
std
jae
test
mov
and
dec
jge
inc
adc
fists
hlt
pop
mov
bound
xchg
pop
jle
mov
pop
dec
add
leave
fcoml
add
add
dec
sub
cld
push
cli
xchg
mov
pusha
jmp
cmp
pop
loope
and
fs
dec
popf
pop
pop
or
js
or
mov
nop
push
xchg
shll
aam
pop
pop
imul
push
rorl
sub
nop
xor
xchg
adc
andb
jecxz
xorl
aaa
mov
popa
std
mov
lea
test
scas
out
js
dec
mov
jle
dec
adc
fucomp
xchg
xor
xlat
mov
mov
mov
sub
rcrl
mov
sbb
fwait
cmp
adc
cmp
fs
xchg
ss
pop
pop
insl
in
cmp
daa
cmp
jg
sbb
or
xchg
aam
sub
add
loop
js
add
mov
inc
inc
hlt
sbb
xchg
popa
repz
lahf
push
bound
repz
mov
icebp
jge
mov
push
jmp
dec
sub
out
jbe
lods
push
cmpsb
jge
xor
push
daa
lds
xchg
test
adc
mov
jnp
inc
inc
xorb
movsb
jmp
dec
ds
addr16
cli
les
pusha
mov
ret
or
scas
xchg
or
leave
mov
nop
mov
mov
insb
out
pop
xor
loope
data16
inc
cmc
repz
fsubl
mov
aam
loope
cmpsl
test
rcll
pop
lahf
ret
lea
lods
add
rcll
in
aam
sub
inc
push
fildll
pop
js
jl
xor
xchg
push
and
mov
mov
sbb
bound
aam
shrb
xorb
mov
pop
xchg
inc
rcrl
mov
in
cmp
xor
mov
mov
xchg
xchg
lahf
ja
lahf
inc
outsl
jb
xor
mov
xor
push
pop
mov
imul
mov
cmp
inc
push
add
xchg
mov
stc
das
jp
fisttpl
movsl
aas
or
push
imul
add
jl
test
mov
mov
add
fs
popa
jl
iret
mov
push
sbb
jno
stc
xchg
je
push
fs
fidivrs
or
xor
imul
push
aaa
mov
mov
popa
or
pop
cmp
and
mov
push
jmp
imul
xchg
adc
mov
jecxz
inc
fdivl
repnz
push
pop
xor
push
movsb
jp
dec
mov
push
mov
ret
pop
lock
and
jne
inc
popa
adc
xor
mov
out
lds
dec
push
fucom
js
stc
jle
cli
out
jecxz
es
aaa
clc
and
xor
inc
test
stos
jp
leave
test
leave
in
add
out
stos
aas
or
cs
in
xor
ljmp
out
ret
mov
push
pusha
es
push
cmpsb
mov
sbb
dec
hlt
repz
cmp
out
test
or
mov
lock
jge
xchg
pushf
sbb
insb
lahf
adc
and
lea
mov
cmp
or
dec
sub
xchg
pop
pop
add
jmp
lea
aad
rcl
dec
jnp
inc
fucomp
cmp
push
inc
push
xchg
loop
mov
lock
dec
sub
int3
cli
xchg
adc
or
dec
fcompl
outsl
pop
jp
and
addr16
lods
loopne
test
mov
xor
loop
cwtl
addr16
sub
repz
insl
arpl
std
lcall
xchg
test
sti
daa
rorb
jmp
cmp
pop
lret
sub
inc
sbb
jecxz
call
adc
sbb
ss
arpl
stos
and
xchg
pop
mov
mov
scas
dec
or
rcrb
add
sahf
add
sub
push
mov
inc
pop
add
in
cli
loop
mov
data16
testl
ficoms
hlt
sbb
mov
jg
loope
rcrl
xor
sub
fcmovnb
add
add
rclb
cmp
inc
push
jae
push
jecxz
fnstcw
pop
push
mov
jp
mov
mov
and
popf
repz
insb
cmp
dec
xorl
cwtl
jecxz
lea
jbe
inc
ret
mov
or
inc
mov
aam
mov
clc
push
stos
rcr
xor
in
mov
add
sub
sahf
mov
imul
cmpsl
test
aam
push
pusha
mov
ret
das
aad
fsts
mov
cmp
xor
lcall
gs
pusha
jae
cltd
xchg
cld
shlb
dec
ror
and
pop
inc
jmp
nop
dec
out
fisttpll
dec
loop
shl
and
xchg
mov
mov
outsl
mov
lods
xchg
xor
mov
dec
and
dec
lcall
inc
jecxz
shrb
dec
shl
cmp
lods
fstps
mov
arpl
out
rcrl
jnp
xor
insb
adc
mov
pop
lds
sbb
ret
dec
mov
lea
and
cs
cmp
jnp
loope
and
mov
fcomps
stos
ror
jl
dec
jnp
lods
push
pop
cmp
jb
loope
movsb
xchg
stos
js
test
jge
imul
pop
in
int
cltd
jae
sub
int3
cli
sub
mov
xchg
xlat
fstps
gs
lahf
test
hlt
rcll
jbe
mov
sub
les
ficompl
insb
adc
repnz
jnp
inc
outsl
adc
xchg
insb
popf
adc
push
lea
rolb
sbb
test
sahf
int3
lods
xor
stos
sbb
xchg
fistps
sub
or
fbld
mov
test
push
sbb
xchg
pop
int3
ds
dec
mov
sbb
xchg
and
jae
and
cld
push
sub
dec
scas
in
outsl
push
adc
xchg
adc
aad
rcl
pushf
sub
stos
addr16
jl
push
in
mov
mov
sahf
pop
add
pop
daa
jb
adc
mov
adc
enter
pusha
jge
daa
mov
aam
out
push
fsubrl
shlb
sub
xchg
fs
push
sub
rcll
mov
mov
or
lcall
aam
xchg
and
fcmovb
test
jge
xchg
mov
sub
or
jb
addl
ret
andb
add
aas
cmp
jae,pn
mov
jmp
push
in
mov
ljmp
in
push
sbb
jo
and
cmp
ss
xor
data16
sub
frstor
mov
jge
cltd
or
jecxz
int3
jne
sub
xchg
filds
les
mov
mov
daa
jmp
xor
loopne
cmpsb
loopne
lods
fstl
or
mov
push
repnz
lds
adc
jbe
push
mov
push
sti
fld
int
aam
mov
popa
adc
sub
mov
aad
out
jb
push
jb
adc
subb
ljmp
lret
lahf
mov
pop
or
add
xchg
lahf
jg
or
dec
sbb
xchg
sbb
jns
sbb
les
sbb
call
mov
jbe
mov
sbb
xchg
pop
cltd
sbb
dec
inc
std
call
add
mov
sbb
es
imul
repz
lcall
cltd
sub
xor
xchg
mov
mov
jne
into
adc
push
outsl
xchg
cltd
fstps
mov
clc
in
lret
jg
mov
mov
xchg
into
aaa
dec
xor
pop
jecxz
dec
jg
jge
aam
jmp
fcomip
fldenv
mov
inc
or
dec
jno
jno
stos
dec
pop
mov
mov
test
pushf
scas
loope
dec
test
xchg
and
xor
lock
inc
push
xchg
cmp
lods
arpl
jl
mov
fwait
mov
movsb
adc
fistps
sbb
mul
cmpsb
push
cld
xchg
fwait
rcll
mov
sbb
adc
test
mov
or
out
sbb
gs
loope
mov
rcrb
testb
fstpt
xor
jnp
xchg
inc
sbb
cmpsb
ret
adc
xor
xor
add
xchg
movsb
movsb
arpl
stc
push
pop
mov
pop
lret
pop
nop
and
inc
movsb
xlat
xor
insb
repz
mov
and
loope
inc
dec
mov
cmp
fwait
xor
mov
loop
jo
loop
arpl
xlat
pop
pop
inc
push
jno
inc
repz
mov
cwtl
xchg
adc
push
push
stos
xorl
pop
aas
xlat
jns
pop
out
xor
jg
pop
add
popf
test
popa
xor
mov
cld
insb
in
lock
mov
mov
jecxz
aas
ljmp
fistps
xchg
dec
inc
sbb
sbb
jo
sahf
adc
jp
rcl
mov
jg
mov
repz
mov
fsubs
and
ret
repz
jmp
mov
xor
and
xor
rcrl
stos
and
xor
xor
test
mov
gs
dec
xchg
std
mov
xchg
jle
int3
enter
shlb
adc
in
mov
add
popf
fisubl
mov
xchg
jl
loopne
popa
sub
ss
inc
fidivs
stos
add
shl
mov
sub
inc
pop
in
mov
sbb
sbb
rcl
cmpb
add
pop
mov
inc
sub
aad
or
and
aas
ljmp
out
mov
notl
and
pop
sub
xchg
xlat
dec
push
adc
lahf
jl
repnz
frstor
xchg
or
and
xlat
add
or
das
xchg
jb
pop
popf
xor
sub
stos
cmp
test
insb
jecxz
or
idivl
cmp
cmp
fiadds
daa
scas
stos
aad
cmp
shr
and
shll
cwtl
xor
popa
inc
mov
enter
pop
mov
inc
cld
pusha
adc
mov
adc
sbb
js
fmull
dec
jnp
add
dec
mov
add
pop
or
stc
std
push
ds
daa
fldenv
xor
hlt
add
push
jmp
push
pop
inc
xor
js
ja
jle
repnz
jb
sub
jno
mov
mov
lock
push
mov
jne
mov
push
gs
xchg
adc
mov
test
mov
sub
arpl
nop
mov
or
movb
xor
pop
and
xchg
fisubl
fstpt
stc
push
xlat
sbb
dec
fdivr
xchg
cli
push
leave
cwtl
push
rcrb
dec
cwtl
ljmp
sub
gs
jecxz
int3
sahf
je
add
lods
std
mov
xorl
sub
int
aaa
cwtl
cmp
pop
mov
push
push
dec
lahf
shll
rcrl
pop
sbb
xchg
cmpsl
xchg
stos
into
lahf
jle
mov
xchg
fwait
dec
lret
xor
repnz
mov
ss
fs
addl
iret
fwait
stos
iret
sbb
mov
lds
sahf
sahf
mov
cltd
add
lcall
aaa
hlt
test
test
mov
push
push
sbb
xor
imul
jbe
pop
xlat
scas
dec
mov
out
mov
lods
xchg
notb
mov
ljmp
lret
movsl
sub
add
shll
mov
cmpsb
jg
fsubl
outsb
or
xchg
mov
popf
xchg
gs
stc
sub
pop
dec
es
pop
mov
ret
add
sbb
mov
outsl
aad
in
pop
cmp
sub
enter
sub
das
hlt
lret
fnstsw
jns
imul
mov
xchg
dec
mov
icebp
sbb
sbb
xlat
or
lret
shll
bswap
xchg
xorb
or
or
lods
stc
test
xchg
into
jle
es
stos
lock
ss
fsubs
sbb
ret
mov
gs
dec
fisttpl
ljmp
xchg
fisubl
ret
jmp
add
mov
enter
pop
jno
enter
loop
ret
lods
xor
push
cli
push
stos
aad
mov
cmpsl
pop
out
sub
icebp
push
cmp
add
cmp
data16
cmp
fcoml
cli
das
inc
mov
jns
and
cmp
out
add
or
mov
xor
dec
lcall
movsb
pushf
call
xchg
ja
and
fisttps
pop
pop
notl
out
leave
out
mov
repz
sub
cmp
lahf
in
loopne
inc
xchg
adc
bound
push
pop
ds
jg
mov
cmpsb
pop
dec
or
pop
movsl
mov
sarl
pop
push
mov
adc
jns
lds
push
arpl
add
fs
sub
pop
or
xor
jne
and
pop
lret
xchg
inc
cmp
rcrb
adc
in
orb
and
clc
cmc
push
add
and
dec
cmp
pop
lock
pop
adc
xchg
xor
dec
loop
sub
mov
dec
xchg
and
cmp
cmp
out
into
push
sub
jno
dec
pushf
push
jp
and
xchg
mov
xor
xchg
fidivrl
dec
or
adc
fsts
cmp
fs
dec
fistl
mov
sub
push
jle
mov
pop
shrl
dec
and
pop
sub
xlat
mov
js
push
jle
shrb
mov
sti
rcrl
repnz
adc
test
mov
jo
popa
stos
ljmp
lock
inc
mov
xchg
lds
mov
pop
popfw
enter
cmc
fcoml
push
test
xlat
add
adc
jb
cmp
push
pop
mov
push
sbb
out
xor
mov
es
xchg
push
pop
pushf
pop
adc
andl
jo
stc
lret
shrb
insl
cli
loopne
mov
mov
repnz
lock
sbb
inc
data16
andl
sub
xor
mov
insb
xor
fidivrl
pop
adcb
fsubrs
dec
aaa
mov
in
lret
push
sahf
jge
and
lcall
inc
sub
add
mov
sahf
rolb
dec
rcll
adc
mov
push
jns
jp
dec
mov
das
hlt
subb
sbb
aaa
int3
lret
loope
xlat
pop
in
inc
mull
push
dec
jecxz
mov
cmp
or
xchg
and
decb
pmulhw
aaa
or
lea
push
adcl
cmp
loope
leave
out
xchg
adc
mov
addr16
aaa
push
or
and
xchg
outsb
cmpsl
cmp
fdivrl
mov
cmpb
or
mov
xchg
js
or
sbb
scas
nop
popa
sub
push
inc
adc
enter
lds
cmp
xchg
add
pop
inc
fbstp
xchg
jge
cmpsl
sub
sti
xor
mov
push
test
lock
js
jb
xchg
push
daa
pusha
push
rcrl
pop
clc
test
subl
mov
outsl
cwtl
jp
cld
movups
sub
stos
mov
jg
ret
out
push
xchg
push
sarb
mov
aas
ficoms
jecxz
inc
lcall
mov
icebp
push
add
loopne
shll
and
mov
lret
sbbl
inc
sahf
add
outsb
mov
push
sub
out
and
jbe
in
into
fadd
repz
or
inc
lods
cmp
mov
mov
out
lahf
aas
dec
les
xchg
pop
loop
dec
sbb
pop
push
inc
pop
iret
mov
stos
mov
ja
cmp
popl
out
flds
clc
sub
mov
imul
pop
data16
push
mov
jl
xor
fldz
and
outsl
cs
leave
mov
sbb
push
sbb
nop
or
mov
sbb
push
repz
dec
adc
mov
out
add
mov
ret
popf
sbb
mov
movsl
dec
sar
icebp
jne
lcall
aam
xchg
xchg
mov
insb
lahf
cld
lods
add
popa
xchg
enter
xor
repnz
mov
jmp
add
popa
jb
lahf
cmp
imull
repz
outsl
repz
flds
imul
jmp
mov
daa
xchg
xlat
adc
xchg
mov
cwtl
mov
ret
jmp
imul
pop
ss
adc
call
es
cmp
aam
pop
insb
pop
das
cmp
add
hlt
cld
mov
pop
push
imulb
dec
sub
lcall
cmp
into
mov
mov
xchg
mov
mov
cmp
pop
adc
scas
stos
and
dec
pand
dec
mov
mov
mov
int3
pop
daa
mov
jge
inc
inc
mov
fcomp
pop
add
test
pusha
push
push
mov
xlat
leave
dec
jnp
daa
movsb
test
rclb
jb
fbld
test
insl
dec
int
fadds
mov
movsl
mov
xchg
lret
test
ficoms
in
fmul
jmp
and
fcompl
jns
sbb
ret
sti
cwtl
xchg
mov
pop
lret
sub
inc
add
mov
or
xchg
jnp
mov
xchg
cmpsl
rolb
push
sbb
or
mov
inc
bound
push
cs
xor
std
les
sbb
inc
xchg
adc
jge
sub
int3
movsl
dec
push
sbb
test
mov
pop
adc
pop
popa
sbb
repz
or
scas
and
movsl
mov
xor
mov
mov
pop
outsw
pop
xchg
jb
dec
pop
sub
adc
jb
xor
adc
sti
xchg
mov
push
out
pop
xorl
insl
lcall
mov
fisttpl
inc
mov
dec
fists
loop
dec
subb
or
ficompl
hlt
xlat
or
pop
inc
inc
in
sbb
fimuls
arpl
and
cmp
xchg
cmp
arpl
push
mov
loopne
mov
and
out
adc
lcall
pop
xor
ljmp
pop
cmpsl
imul
add
xor
sub
mov
sti
add
cmpsl
faddp
jne
dec
loopne
mov
pushf
mov
testl
fsubrl
repz
mov
inc
inc
in
mov
fcmovnbe
imul
push
xchg
sbb
daa
aaa
add
jg
jg
ret
stos
jg
or
cwtl
outsl
jecxz
leave
mov
test
nop
push
sbb
adc
mov
xor
int3
sub
popa
mov
insl
test
iret
dec
xor
and
xchg
sub
sbb
out
out
jae
loopne
fildl
in
cmc
insl
adc
mulb
or
ja
out
sub
inc
repnz
adc
stos
sub
jmp
dec
fcomip
icebp
sub
mov
sbb
out
cs
scas
subl
lods
cmpw
sub
jl
sbbb
sarl
ror
xchg
mov
sub
pop
push
loopne
rcrb
inc
jl
in
pop
pop
xor
addl
mov
push
inc
out
imul
outsb
arpl
or
mov
arpl
sub
or
jge
sbb
inc
push
rolb
fnsave
int3
dec
mov
daa
test
jle
or
hlt
daa
add
sti
jge
adc
sub
mov
sbb
mov
mov
js
inc
mov
shl
xchg
stos
inc
cmpb
sub
pop
cld
sub
xchg
xchg
sub
stos
testb
adc
adc
rcll
call
xchg
xchg
or
lods
sbb
mov
inc
xchg
mov
fstpt
stos
push
push
mov
adc
aaa
mov
daa
cmp
js
push
repnz
fsts
mov
mov
jp
clc
and
adc
add
cmp
jnp
fs
add
orl
sub
add
mov
pop
out
dec
inc
jo
jmp
daa
mov
lahf
aaa
stos
pop
ret
mov
mov
stos
lcall
xor
jecxz
aam
pushf
loop
jmp
test
sbb
jns
aaa
sbb
push
push
fwait
nop
inc
int3
mov
int3
das
adc
aas
outsb
mov
fdivrs
mov
xlat
into
push
push
leave
stos
pop
ss
arpl
jecxz
repnz
mov
push
mov
push
fwait
xor
cmpb
mov
mov
sub
ret
push
and
test
cmp
pop
jnp
mov
insb
imul
push
dec
cmp
popf
adc
bound
jo
shlb
aam
push
sbb
jp
popa
inc
mov
cmp
adc
and
inc
add
adc
rcrl
jecxz
mov
mov
push
mov
loopne
sub
sbb
cmp
add
ljmp
cmp
xor
push
lea
dec
push
imul
push
movsb
roll
aad
inc
fldpi
jp
mov
fiadds
lret
sbb
in
jne
jge
mov
std
dec
aam
popf
push
hlt
jg
lods
in
ss
adc
popf
js
shlb
lock
inc
mov
outsl
pop
mov
sahf
mov
scas
sti
faddl
popf
jns
push
mov
dec
frstor
leave
aas
and
subb
fs
loop
inc
push
inc
inc
call
bound
dec
clc
dec
ret
and
pop
hlt
fwait
jp
test
shll
lret
xor
int3
inc
mov
add
lods
ljmp
je
icebp
in
xchg
push
aaa
dec
popa
scas
orl
push
jno
std
mov
into
cmp
mov
lds
ja
dec
stos
loopne
or
data16
test
in
out
inc
sub
lcall
enter
adc
xchg
inc
mov
xchg
test
aaa
addr16
sti
fldcw
or
sahf
mov
out
rorl
fildl
mov
adc
jmp
mov
or
push
in
xor
insl
inc
imul
cltd
xchg
jg
pop
and
repz
lods
mov
or
push
ja
mov
fistl
fcmovnb
fs
test
jle
sbb
lea
or
push
adc
aas
xor
and
adc
adc
insl
int
cmpsl
dec
cld
lds
jmp
arpl
stos
popa
adc
adc
sti
push
gs
call
xchg
and
mov
and
andl
jge
push
push
mov
ds
mov
jmp
xlat
je
je
cmp
add
sbb
and
pop
pusha
push
fimull
pop
dec
cltd
mov
mov
outsl
enter
out
out
fistpll
pop
popa
inc
cmc
cltd
add
arpl
mov
hlt
fisttps
and
rcl
push
in
movsl
push
mov
jecxz
pop
and
mov
mov
iret
or
out
lea
pop
jae
stos
mov
insl
lcall
pop
inc
pop
fimuls
aam
jecxz
mov
adc
fs
daa
imul
pop
jnp
fcmovu
adc
add
xchg
or
daa
or
lock
int
adc
xor
xor
cwtl
std
dec
fs
jmp
sub
neg
xor
pop
and
mov
adc
dec
es
dec
cmpb
test
in
scas
jnp
push
shll
daa
stos
rorl
push
push
cmp
or
gs
iret
cwtl
dec
stos
stc
icebp
mov
shrb
cmp
cli
jge
mov
test
mov
adc
mov
pop
cmp
push
rcll
test
sti
push
fisubs
push
lods
push
rcrl
push
bound
nop
push
repnz
cmpsb
dec
in
cwtl
test
push
cltd
mov
cs
adc
sahf
les
shll
lcall
add
pop
notb
and
push
push
xchg
fisubl
rorb
daa
in
pop
mov
add
out
pop
push
mov
ret
cmpsl
addr16
out
iret
mov
inc
dec
shlb
pop
js
add
rcl
mov
test
cs
andb
mov
or
addr16
cmpsb
in
sub
pop
je
mov
jbe
movsl
in
or
sbb
test
int3
cmp
xor
xadd
iret
xor
loopne
in
dec
pop
sub
mov
add
leave
xchg
scas
fs
jmp
out
sub
mov
fildl
cmp
fcmovu
dec
dec
mov
jmp
and
push
xchg
mov
mov
inc
loop
mov
out
and
insb
sar
fs
or
jns
sbb
imul
jns
mov
out
xchg
lods
insl
iret
jmp
test
call
cld
jns
lds
mov
push
xlat
or
loop
xchg
in
mov
sbb
lock
cld
add
mov
cmp
enter
fidivs
push
inc
mov
jo
lahf
arpl
popf
in
pop
loop
mov
daa
cmp
sbb
test
mov
jns
das
pop
pop
push
call
sub
es
or
or
push
mov
test
mov
xchg
cmp
add
inc
scas
adc
test
push
aad
in
xchg
ret
adc
push
addr16
js
xchg
xchg
mov
or
notl
clc
jnp
mov
inc
mov
gs
idivb
push
inc
xlat
adc
dec
and
mov
push
xchg
dec
movsb
push
mov
out
ds
adc
dec
out
pop
cmpsb
pop
or
xor
mov
mov
ret
or
xchg
stos
lcall
or
adc
jb
jo
jp
fists
rcll
jo
rcrb
rcrl
mov
pop
adc
xchg
lock
dec
fisubrl
movsb
clc
stos
pop
dec
mov
test
mov
jo
jg
xchg
and
addr16
aaa
xor
mov
divb
xor
out
call
lods
movups
sbbl
icebp
ljmp
mov
test
pop
fdivs
movsb
std
mov
add
pop
push
lahf
test
xchg
fmuls
je
pop
adc
xor
cltd
cld
adc
jecxz
js
mov
ret
ljmp
sub
sbbb
mov
idivb
sub
movsl
mov
in
loopne
xchg
sbb
mov
sub
icebp
lret
ss
push
or
adc
xchg
dec
mov
dec
hlt
and
addr16
ljmp
es
mov
lcall
mov
inc
arpl
jmp
fdivs
lret
xchg
pushf
fldl2e
mov
xor
jns
mov
dec
test
in
add
dec
xchg
mov
iret
sahf
inc
or
jnp
jae
lret
insw
lcall
and
dec
aam
add
or
ljmp
out
js
inc
xorb
push
push
test
sbb
jge
inc
out
movsl
pop
pop
pop
scas
mov
mul
insl
cli
aaa
push
pusha
push
mov
mov
andl
ret
insl
lds
addl
lcall
mov
xchg
dec
jne
mov
push
out
dec
data16
xor
inc
fstl
cld
out
jge
mov
jno
sbb
movsl
dec
nop
pop
movsb
sub
push
or
popf
inc
popa
cli
inc
cmpsb
and
xor
xchg
fbld
lods
clc
popa
jno
stc
insl
inc
lods
mov
rcll
xchg
dec
pop
and
stc
out
xor
inc
sub
sub
adc
push
sub
jo
rcrl
sarb
lahf
pop
imul
mov
mov
loopne
stos
in
adc
leave
jnp
orl
imul
out
or
stos
scas
jecxz
xor
jbe
sub
push
xor
lds
sub
and
pushf
jl
xor
dec
aaa
pop
mov
mov
sti
xor
icebp
cmp
in
mov
adc
mov
aam
xor
or
and
push
scas
lock
decb
push
loope
out
pushf
pop
lods
inc
push
xchg
fstpt
cmp
js
ja
push
xchg
cmp
add
push
or
movsb
arpl
push
pop
movsl
imul
mov
dec
faddl
lret
pop
in
jg
subb
jb
sub
add
dec
cmpsb
inc
push
mov
cmp
sbb
mov
pop
roll
dec
popa
lods
mov
xlat
and
and
stos
mov
jo
or
lret
in
pusha
mov
or
loopne
mov
adc
mov
sbb
mov
rcr
and
push
or
inc
icebp
jae
aaa
cmc
std
out
add
pop
xchg
mov
jge
fsubrs
push
xor
xor
push
pop
outsl
cmp
xchg
js
push
mov
dec
sarl
jno
mov
sub
adc
dec
shll
cld
andl
cli
mov
stc
imul
jecxz
push
adcb
sub
cmp
aam
mov
leave
stc
mov
data16
ljmp
xor
sbb
into
lods
add
outsb
jp
lahf
cmc
cmpsl
daa
xor
mov
push
mov
mov
pop
xor
xchg
lret
push
sahf
xlat
xchg
push
lock
shlb
jae
ljmp
push
mov
inc
cmp
fmull
fisubrl
mov
push
push
out
in
clc
shl
lcall
ljmp
sub
dec
movsb
test
add
jno
sbb
jg
push
call
mov
sbb
xlat
sbb
cmp
addb
push
pop
outsl
mov
lret
imul
pop
andb
mov
mov
dec
movsl
mov
mov
pop
cwtl
mov
push
mov
inc
mov
pop
pop
int3
fstps
push
push
sbb
push
dec
outsl
jmp
or
inc
cmp
fidivrs
sub
adc
or
test
ja
cmpsb
loope
scas
repz
ret
jne
das
movsl
test
pop
fwait
es
in
jecxz
and
pop
jbe
jo
out
cmpsl
pushf
jae
out
dec
xor
xor
pushf
cmp
in
push
in
dec
pushf
ss
lods
sub
ret
mov
not
sub
or
bound
add
addr16
movsl
es
shrb
cmp
add
dec
jge
dec
dec
sub
mov
mov
dec
sbb
mov
data16
aas
cmc
dec
int
bnd
mov
aam
es
xchg
ss
xchg
movsl
ficoml
rcrb
fs
mov
mov
push
mov
lcall
cmp
out
popa
pop
ja
sbbb
insl
arpl
rclb
xor
mov
xchg
push
jbe
mov
dec
test
jb
scas
pop
test
ret
pusha
outsl
mov
leave
mov
mov
cmp
and
jmp
shlb
jecxz
xchg
xor
test
sub
and
sub
in
sub
inc
mov
jne
push
popa
sarb
mov
jg
mov
xor
pop
adc
hlt
enter
xchg
test
inc
jl
push
cmp
out
pusha
outsb
ds
jge
fcoms
xchg
loop
lods
inc
adc
loope
ret
or
mov
jmp
push
scas
dec
movsb
in
cs
adc
mov
sbb
mov
adc
scas
sbb
cmp
xchg
test
xchg
dec
inc
cmp
xchg
and
insb
fisubrl
insl
pushf
sub
mov
mov
jns
in
pop
pop
cwtl
mov
inc
cmpsb
dec
stos
push
mov
push
sahf
xchg
push
pop
cs
pop
jp
add
adc
and
loopne
loope
xchg
lock
dec
sub
dec
pop
ret
fisubs
jo
xor
mov
dec
or
mov
jle
enter
das
arpl
push
sar
cli
es
jge
or
and
sub
push
pop
lahf
scas
pusha
cwtl
out
adc
or
pop
in
aam
outsl
ror
or
loopne
stc
and
pop
mov
push
ljmp
mov
nop
cmp
lock
movlps
xor
test
adc
out
arpl
dec
enter
sbb
fmulp
xlat
pusha
outsb
cmpsl
testl
in
push
mov
pop
cli
jg
cmpsl
cwtl
push
imulw
dec
pop
jg
lods
sbbb
shl
cmp
xchg
add
mov
popa
out
pop
jne
sub
jmp
pusha
gs
repnz
pop
repnz
fdivrs
jne
push
mov
add
jnp
jns
add
jmp
arpl
mov
dec
sbb
shlb
bound
enter
mov
lds
mov
jge
rcll
in
shrl
sub
mov
xchg
pop
pop
jo
pop
sbb
ljmp
dec
lods
je
mov
sbb
cld
push
inc
mov
cmpsl
std
push
jo
push
int3
aaa
sahf
inc
xchg
aad
mov
insb
repz
pop
xor
dec
push
mov
ret
jge
mov
roll
out
popf
repnz
mov
xor
imul
shl
push
fptan
std
sub
divl
add
gs
fwait
test
push
rcrl
jbe
jb
dec
add
xlat
or
lret
dec
cmc
pop
cmp
dec
mov
scas
fdivrs
mov
in
push
add
fisubrl
mov
insl
jb
ljmp
pop
cmp
mov
pop
push
cmp
loop
and
in
hlt
and
aaa
popf
xchg
push
rorl
mov
add
push
ds
jno
pushf
jecxz
ret
ds
dec
imul
add
mov
inc
jae
sub
jb
cmpl
jne
jns
push
inc
mov
outsb
sub
push
cli
jnp
idivl
xor
rcrl
nop
xchg
sbb
dec
xchg
adcb
incb
inc
shll
insb
lds
xor
jl
pop
aam
jb,pn
add
mov
and
lock
out
out
adc
adc
jle
ret
mov
push
inc
scas
cmp
xor
sbb
hlt
push
and
popa
sbb
mov
arpl
test
dec
pause
cmp
lret
mov
xor
dec
or
pop
and
scas
js
sbb
jp
cld
ja
or
adc
dec
cmpsl
sub
xor
jbe
jb
ret
ljmp
pusha
or
in
mov
sahf
stc
push
lods
or
adc
jb
pop
cmpsb
fisubrs
mov
xchg
push
pop
rcll
cli
cmp
add
ret
int3
gs
jle
jo
testb
inc
test
mov
fs
sbb
jp
mov
movsb
nop
ss
cltd
lcall
hlt
aad
into
lods
sub
std
xchg
jle
mov
jb
pop
jp
mov
jg
mov
or
arpl
jns
pop
mov
cwtl
mov
and
fwait
jae
rol
fadds
dec
movsl
fisttpll
sti
jg
push
mov
js
sub
in
das
mov
mov
insl
xchg
jno
repnz
xchg
lods
push
ss
enter
popf
addb
sub
in
jge
mov
imul
or
jg
outsl
fs
xor
dec
xor
push
scas
or
or
insl
mov
dec
mov
sti
mov
xor
lds
push
cwtl
int
ss
movsl
test
arpl
clc
jle
lret
imul
out
sahf
enter
or
leave
mov
mov
xor
cmp
pop
lds
test
pop
sbb
adc
push
es
cmp
dec
sub
and
scas
sub
loopne
movsl
xor
pop
pop
and
ljmp
sbb
cmp
and
jge
addr16
push
in
int
out
mov
jecxz
lds
testb
mov
dec
inc
int3
jl
ret
xchg
hlt
dec
mov
sbb
jne
daa
fimuls
and
stos
push
jo
stc
inc
ret
nop
jb
pop
loope
dec
test
mov
or
cmp
fidivrl
push
and
mov
shl
mov
add
shll
rorb
pop
rclb
arpl
iret
dec
xchg
jbe
jbe
xchg
pop
jmp
jo
popf
adc
movl
jge
add
jge
xor
and
add
notb
pop
xchg
cmpsl
pushf
push
xchg
add
inc
cmp
stos
test
adc
dec
in
sub
cmp
add
aad
dec
dec
sub
mov
pop
test
push
push
call
subl
xor
sbb
adc
cmp
data16
add
ret
aas
add
andl
sarl
in
or
mov
push
push
mov
test
incl
mov
negb
test
scas
xlat
insl
push
jmp
outsb
test
stos
lods
mulb
loope
das
pop
scas
cmpsb
pop
shr
decl
pop
lods
xor
xor
push
inc
push
dec
inc
out
ret
enter
fmull
leave
pop
dec
lds
into
roll
outsl
ret
xor
pop
testl
outsl
push
jecxz
cltd
xchg
cmpsb
nop
mov
and
je
lcall
into
cli
rcr
pop
dec
mov
shl
aad
push
adc
push
mov
xlat
es
sbb
fdivl
push
pop
sub
xlat
and
mov
shlb
dec
adcl
jg
scas
cli
mov
jecxz
test
adc
dec
loopne
ss
lret
mov
arpl
fst
cmpsb
lahf
mov
jl
sti
ret
popa
in
je
jns
push
sbb
ja
mov
sbb
popf
lahf
ss
aam
ds
inc
icebp
adc
ds
jnp,pt
xchg
je
iret
push
imul
out
cld
push
sbbl
mov
js
movsl
sahf
mov
gs
repz
add
rclb
lods
inc
sahf
ljmp
int3
js
adc
adc
mov
rcrb
rolb
xchg
fisttps
nop
dec
pop
jo
decl
int3
hlt
inc
roll
and
out
scas
in
dec
jno
jae
push
xor
fidivrs
int3
or
cmp
dec
in
rol
ja
lds
xchg
popf
mov
shlb
cmp
test
fdivr
mov
xor
in
add
mov
in
push
jnp
aam
in
xor
jb
pop
pop
std
mov
jecxz
enter
lahf
inc
push
pop
and
lret
mov
int
stos
enter
sbb
or
push
popf
leave
push
mov
aad
nop
inc
or
push
mov
pop
jmp
outsl
out
out
in
pop
add
stc
dec
push
cli
jbe
les
jmp
adc
pop
and
xchg
xor
lock
imul
outsl
popf
or
push
in
fdivr
shrl
push
arpl
cmp
sbb
lods
mov
fnsave
aas
and
loope
inc
dec
pop
jge
adcl
mov
xchg
cli
xchg
push
pop
rorb
outsb
adc
push
adc
outsb
mov
sub
rcrl
xor
jp
sub
sub
fs
cmpsb
adc
jb
jno
icebp
lods
push
ds
in
dec
or
pop
push
sahf
inc
mov
sbb
xor
push
stos
fidivs
xor
outsl
popf
stos
push
xor
jmp
xor
insl
adc
mov
enter
push
xchg
jne
xchg
xor
out
mov
dec
cmp
cmc
in
repz
fdivs
mov
popa
inc
test
pop
pop
add
mov
in
loope
aas
ljmp
addb
mov
push
mov
mov
mov
ret
lahf
sub
aas
iret
dec
pop
pushf
mov
jbe
outsl
ljmp
and
jnp
dec
mov
adc
xor
jo
sbb
xor
out
fildll
movsb
call
inc
push
imul
cld
subb
pop
sbb
or
xor
pop
xchg
xchg
xchg
jmp
inc
pop
repnz
xor
sbb
sub
lods
lods
mov
sub
or
cmpsl
ds
data16
cwtl
enter
stos
scas
cmp
sti
mov
test
nop
rcll
lods
mov
mov
dec
jae
pop
cmpsl
cmc
push
notb
push
imul
xor
iret
roll
scas
testb
lea
mov
js
inc
repz
adc
ss
sub
dec
in
sti
sbb
ljmp
cmpsb
add
inc
mov
inc
mov
lock
mov
sahf
push
mov
test
jmp
fcmovu
ficompl
mov
movsb
stos
shrl
imul
pop
in
test
xchg
dec
fwait
inc
cmpb
mov
xchg
out
repnz
lcall
addb
jbe
jne
ja
nop
xchg
scas
hlt
xor
mov
scas
ficomps
adc
sarl
and
outsl
push
fidivl
pop
adc
pusha
inc
movsb
xor
ljmp
mull
divl
mov
scas
mov
or
xor
cld
in
cli
inc
push
push
xor
push
nop
aam
cmpsb
push
dec
repz
jb
icebp
inc
ror
and
pop
push
adc
sbb
loopne
movsb
std
dec
mov
aam
cmp
mov
mov
scas
test
push
fcmovnu
mov
add
dec
mov
xor
inc
loop
mov
js
das
mov
nop
fwait
mov
xlat
mov
fstpt
adc
fcmove
loopne
cmpsl
mov
mov
mov
push
push
arpl
popf
adc
test
jae
jbe
testl
rcll
xchg
sti
lahf
inc
outsb
imul
lea
in
sbb
lahf
sub
fs
call
mov
mov
inc
jp
repnz
adcl
pop
or
imull
call
cld
or
fnstsw
cld
cltd
mov
mov
add
ret
bound
sahf
mov
mov
inc
or
mov
imul
dec
aas
std
mov
mov
call
sbb
cmp
mov
and
xchg
cmp
shll
cmp
repz
mov
addl
push
fimuls
lea
adc
pushf
add
bound
cmp
xchg
cmc
sbb
cmpb
cwtl
inc
jg
dec
pop
fwait
mov
jg
movl
xor
out
test
je
arpl
loop
add
shll
push
pop
mov
mov
sub
and
icebp
mov
xchg
jmp
jne
push
push
pusha
mov
xor
das
movsl
and
or
pop
ljmp
mov
xchg
repnz
fstpt
lds
loopne
adc
scas
lods
out
js
adc
push
fldcw
push
dec
jb
rcrl
icebp
mov
mov
xchg
pop
popa
cwtl
push
imul
lea
xorl
fincstp
cmp
into
or
or
daa
out
incb
icebp
in
push
insb
ss
mov
ficoms
scas
push
dec
mov
daa
mov
xchg
addl
in
fmul
xor
pop
push
push
or
pushf
xor
xchg
loope
mov
ja
cwtl
jno
pop
cmp
andb
lods
addr16
negl
sahf
xchg
out
pop
mov
adcl
imul
adc
pop
and
test
imul
inc
inc
jns
fildll
sahf
call
jne
add
iret
pop
cmp
jb
jb
loopne
imulb
lea
sbb
pop
das
int
push
xchg
push
and
push
push
adc
mov
aaa
sbb
push
popa
pop
or
ret
shll
je,pt
cmp
pop
add
cmpsb
mov
push
adc
test
pop
adc
dec
loopne
jbe
xor
in
ror
jl
and
data16
and
pusha
mov
pop
outsl
dec
mov
ja
mov
imul
div
outsb
lahf
pop
pop
cmpsb
fcoml
push
inc
mov
or
loop
jnp
mov
mov
clc
test
mov
xchg
jl
inc
lods
pusha
pop
adc
aam
fisubrs
sub
cmp
cs
pop
lcall
dec
mov
and
imull
imul
add
xor
xor
and
mov
sub
inc
sbb
loop
adc
jge
notl
cltd
pushf
inc
inc
sub
sarb
cld
pushf
mov
aaa
adc
xlat
stos
mov
sbb
sahf
dec
pop
fsubs
inc
das
push
into
or
dec
jle
jbe
xor
stc
leave
inc
inc
enter
bound
aas
jo
test
add
adc
cmp
mov
movsl
jl
adc
inc
out
cmp
lods
aad
dec
mov
jae
jle
xor
mov
jge
pop
sub
pop
int3
inc
in
pusha
fs
ret
jg
xchg
dec
dec
ror
int3
xor
adc
and
cmpsl
dec
outsl
cmpsl
jne
lcall
jmp
aaa
add
xor
jmp
inc
xchg
pusha
lcall
mov
clc
jo
pop
addr16
add
out
xor
loopne
xor
ret
push
push
mov
jnp
push
in
imul
xchg
mov
pop
psubb
cmpsb
pusha
sub
dec
mov
vucomisd
adc
xor
andb
jle
mov
scas
movsl
mov
dec
inc
cmp
fxam
shll
jns
cltd
in
sub
andl
mov
push
cmp
dec
adc
sub
into
inc
imul
ss
sub
dec
das
mov
mov
insb
lcall
and
lock
in
push
and
dec
sbb
or
imul
sub
xchg
movsb
ret
inc
pop
jo
rcl
out
js
je
pop
sub
and
xor
jbe
sbb
mov
lcall
xchg
in
cltd
and
and
fcoms
dec
push
jle
pushl
or
outsl
aas
mov
fiadds
mov
xlat
fistl
cld
or
sbbl
aam
push
and
in
adc
inc
cli
dec
jb
xchg
inc
xchg
jp
push
out
sub
sbb
pop
push
xchg
js
sbb
adc
sbb
lcall
in
pop
int
insl
nop
mov
adc
inc
stos
push
xor
mov
nop
inc
mov
shll
out
cmp
pop
test
mov
pop
pop
jne
les
push
punpcklbw
mov
lret
xchg
push
bound
inc
push
jo
clc
es
push
lret
or
add
pop
add
out
out
sbb
jecxz
loope
sub
xor
lcall
fcmovnb
cmp
dec
scas
cmc
jg
sbb
loope
sbb
mov
enter
iret
pop
sbb
pop
xor
pop
sbb
sbb
bound
int
shr
jecxz
pop
sbb
push
loope
jmp
loopne
push
mov
xchg
vphaddwd
es
push
mov
and
addr16
sbb
pop
adc
addr16
jns
inc
and
incl
cs
scas
cltd
imul
push
dec
cli
xchg
mov
test
enter
sbb
dec
repnz
dec
sub
mov
jno
shrl
or
mov
inc
es
neg
mov
sbb
add
cmc
fs
ret
add
gs
cs
mov
pop
test
sbb
movsb
mov
add
loop
bound
pop
dec
das
mov
push
test
notb
mov
cmp
aad
pop
push
stos
rorb
sahf
hlt
push
inc
adc
and
push
mov
sbb
jns
test
xor
and
lret
fstp
add
fs
sbb
jmp
mov
mov
outsl
mov
cmp
cwtl
xor
pushf
jge
lods
mov
subb
pop
out
xor
test
inc
jbe
push
cwtl
dec
inc
loope
addb
mov
jge
jmp
aad
bound
and
pushf
mov
adc
mov
xchg
xor
sbb
mov
cmp
loope
sub
xchg
and
xor
lock
std
xchg
and
cmpsb
jbe
and
and
cmc
push
adc
es
adc
mov
jecxz
stos
cmp
inc
mov
cmp
clc
mov
lret
ror
and
mov
push
add
pop
icebp
andb
push
sub
mov
fdivrs
je
mov
cmp
pop
sbb
aad
negl
aas
les
and
cmp
test
dec
xchg
mov
cltd
pop
bound
jo
in
imul
adc
in
fadds
sub
add
cmpsb
sbb
or
das
add
shl
flds
push
mov
push
xchg
inc
or
and
mov
mull
lds
jmp
stc
les
or
jmp
mov
rep
push
mov
stos
mov
nop
cmp
subb
cs
fistpl
or
add
cmpl
add
addr16
cli
lahf
push
push
fistps
or
cli
fcoms
bound
pop
mov
cs
xchg
bound
jae
add
push
fidivl
clc
or
lods
arpl
mov
sub
adc
or
pop
or
pop
mov
inc
adc
bnd
dec
int
jle
loopne
mov
xor
ret
pop
fbld
sbb
mov
lock
out
and
jo
gs
jl
sbb
cmpsl
in
lcall
cmpsl
jp
js
xchg
mov
aaa
pop
pop
lds
or
sbb
mov
or
mov
clc
adc
call
and
xor
aam
pop
push
out
or
clc
leave
jbe
arpl
out
adc
in
jbe
pop
pop
xor
push
test
sbb
sar
clc
imul
loopne
xlat
cli
mov
jmp
mov
and
dec
lret
insb
xchg
jp
jp
or
mov
mov
jns
repnz
dec
bnd
pop
jae
pop
sbb
hlt
add
xchg
mov
out
lods
push
and
mov
inc
mov
aaa
adc
sbb
pop
mov
mov
scas
filds
sti
ja
mov
inc
lock
mov
push
mov
orb
loop
xor
sub
test
and
imul
xchg
dec
or
icebp
loop
cs
lcall
repnz
add
mov
dec
mov
out
lods
sub
inc
xchg
or
add
inc
shr
dec
mov
add
sbb
mov
sbb
pop
mov
repz
mov
bound
lret
xlat
fidivrs
mov
dec
sub
lret
xlat
pop
adc
adc
sbb
arpl
fcomps
imul
outsb
fstpl
push
shrb
add
bound
xchg
arpl
xchg
cwtl
movzbl
pop
test
dec
jp
rcll
jae
xchg
xchg
je
jbe
test
push
rorl
ret
popf
aad
cmp
xchg
test
in
lods
in
cmc
aas
sbb
mov
pop
push
aaa
inc
add
mov
jl
test
pop
xor
push
xchg
hlt
xor
incb
js
icebp
and
xor
xor
pop
push
push
addr16
shr
adc
mov
pop
rclb
iret
push
xchg
int
lret
jmp
mov
mov
aad
push
mov
cwtl
pop
int
cmc
in
sub
out
rcrl
push
adc
jb
fs
push
mov
jecxz
xchg
xor
inc
push
pushf
and
xchg
testb
cmp
lret
jge
fiadds
fimull
and
xchg
movsb
fadd
pop
and
in
aam
adc
pop
daa
mov
pop
sub
dec
test
cmp
sub
add
xor
adc
dec
ja
pop
add
cmp
jecxz
les
jnp
mov
daa
jl
ret
xchg
sub
jb
jo
or
daa
pop
or
mov
mov
in
push
lea
sbb
fistps
lods
mov
imul
pop
jo
cmp
lret
cmp
push
sub
popa
cltd
xlat
mov
flds
push
daa
fcmove
inc
repz
sbb
sbb
cmp
pop
jne
jbe
sbbb
mov
jb
cmpsl
mov
sti
jbe
add
push
cmp
mov
dec
sbb
inc
sbb
xchg
loop
add
int3
and
mov
sti
and
shll
pop
les
outsb
lods
add
cld
int
jl
data16
cwtl
add
mull
int3
cld
test
mov
push
dec
call
test
cld
jae
and
inc
adc
push
xor
and
xchg
add
dec
inc
mov
and
add
arpl
stos
inc
xchg
aad
clc
movsl
out
mov
sahf
jle
cmp
shr
mov
clc
dec
repz
out
jp
outsl
andl
lods
pushf
cmp
imul
jmp
jno
pop
mov
cmpl
testl
sub
inc
ret
dec
or
pop
dec
roll
hlt
popa
addr16
cmp
and
push
dec
sub
sbb
sar
in
sub
lods
sahf
xchg
jecxz
push
icebp
push
jns
es
push
jo
ljmp
xor
pusha
and
lds
mov
jg
cmp
adc
and
lcall
lea
pcmpeqw
jno
xor
ljmp
shl
add
add
push
ss
loope
inc
mov
push
add
mov
pop
xchg
xor
je
xlat
dec
std
fcoms
shr
fidivrl
inc
mov
cmp
jecxz
or
mov
roll
outsl
sbbl
lret
mov
arpl
xor
pop
adc
cld
daa
pop
bound
xchg
inc
ficomps
divl
or
xorl
jno
or
adc
sbb
or
sarb
decl
push
jb
mov
mov
out
insl
pop
xchg
xchg
jb
push
xchg
fs
mov
cld
outsb
xchg
sub
pop
pop
xchg
notl
sbb
mov
ficomps
lret
xchg
jecxz
xchg
pop
outsb
mov
dec
out
out
in
cs
adc
ror
pusha
mov
mov
pop
xchg
sbb
ja
lods
and
mov
out
out
std
xor
sbbb
mov
test
dec
out
and
cs
xor
jnp
stos
ja
jge,pn
push
movsl
ja
add
dec
jne
inc
loop
dec
push
and
stos
jecxz
jne
mov
jo
not
push
loope
mov
pop
aam
lret
aam
mov
dec
dec
pop
and
scas
jle
sbb
xchg
pop
sbb
aam
dec
fisubrl
ds
xchg
sahf
out
mov
and
push
or
shll
or
add
jmp
test
cmp
sbb
call
repnz
jns
xchg
loope
cmp
lods
mov
call
sbb
fbld
inc
stos
in
mov
push
icebp
sbb
rolb
aas
nop
jbe
adc
mov
add
push
push
out
call
xchg
ficoml
or
push
pusha
sti
adc
pusha
inc
cmp
scas
sub
sbb
imul
pop
jnp
lods
inc
sarl
cli
shll
lods
cmp
jl
push
pusha
ret
enter
test
inc
mov
movsl
ret
bound
or
add
cmp
and
jge
inc
aad
adc
xchg
xlat
mov
out
ret
push
mov
dec
mov
adc
fistl
pop
enter
pop
pushf
lods
add
mov
mov
adc
data16
mov
dec
cmp
ds
outsl
add
popa
jl
lods
sub
out
lds
fldpi
add
jecxz
jo
in
pop
and
push
loope
outsb
sarl
hlt
aaa
ds
xchg
inc
mov
jne
cmpsl
xchg
mov
addr16
scas
cmpl
jp
stc
imul
fs
fst
mov
add
pop
xchg
or
or
aas
mov
jp
push
xor
adc
mov
fildll
negl
dec
jne
xorl
testl
xchg
sbb
push
xchg
test
cld
inc
negl
pop
cli
cmp
push
jge
rcrl
mov
mov
enter
jno
push
lea
aad
in
jg
adc
lahf
inc
adc
ret
data16
fwait
cld
jae
jmp
and
cmc
or
dec
clc
loope
cmp
push
shll
test
cmp
jp
bound
in
out
sub
pop
xor
adc
sbb
loopne
push
lds
sbb
cmp
sub
xchg
xchg
testb
mov
roll
inc
decl
xor
mov
inc
fstl
push
pusha
shlb
jp
in
push
enter
sbb
xchg
add
sbb
testl
aas
mov
or
lcall
fnstsw
xor
mov
sbb
scas
jp
ss
ja
lea
sahf
jno
lahf
pop
movsl
push
out
daa
push
mov
add
jns
add
jns,pt
rclb
mov
das
jecxz
sahf
inc
popa
test
xor
pop
out
push
push
pop
subl
mov
sub
ret
sub
rcrl
cmpsl
push
lds
fistl
or
cmp
popa
daa
push
cmp
popa
inc
leave
dec
pop
cld
repnz
pusha
jl
sub
or
gs
push
insl
cmpl
daa
and
xchg
orl
clc
sbb
jp
dec
sub
push
pop
push
xchg
jecxz
lock
rorl
ljmp
in
push
loope
cmp
xchg
mov
mov
in
cmpsb
mov
pop
or
xchg
mov
inc
ret
fcoml
inc
jmp
out
dec
cmp
adc
ljmp
cmpsb
xor
enter
cmp
out
arpl
in
cmp
pusha
sarb
mov
aaa
sti
push
nop
loope
mov
int
push
mov
pushf
cmp
add
inc
and
adc
push
sub
int3
xor
fidivl
test
aad
outsb
fildl
in
push
fmul
jg
cld
mov
cmp
out
testl
daa
pop
mov
nop
sbb
xlat
mov
cmp
aad
iret
scas
test
cli
pop
pop
pushf
push
testl
not
lock
jo
sbb
repnz
pop
popa
adc
pushf
cmp
jne
xchg
push
jb
lods
imul
jo
add
mov
out
addr16
cmpsl
repz
inc
repz
lds
push
stos
aad
inc
sub
out
xor
cmp
lcall
cmp
mov
fsubl
pop
sub
lods
movsl
ja
aad
ret
pop
jne
loope
mul
stos
or
pop
and
inc
mov
xor
push
sbb
sub
mov
ret
gs
je
or
push
repz
test
xchg
mov
push
ss
mov
push
into
iret
cmpsb
and
push
pop
lods
dec
xlat
jmp
fldlg2
pop
jns
subb
iret
mov
in
stos
dec
test
dec
push
cmpsb
pop
stc
xor
clc
lock
mov
jge
sbb
scas
adc
pop
cwtl
mov
jecxz
scas
nop
fwait
movsb
push
in
dec
std
dec
imul
rcl
inc
stos
scas
mov
push
std
push
dec
dec
lahf
or
shr
jl
mov
cld
shrl
pop
jno
outsl
cmc
jmp
dec
mov
sbb
adc
cs
dec
mov
stos
loope
sbb
loopne
pop
mov
rcr
pop
sahf
inc
sti
sbb
je
fst
xor
bound
popa
pop
xor
or
in
inc
test
mov
push
fs
add
test
mov
mov
std
cld
jg
pop
cmc
lods
pushf
ficoms
pop
dec
stos
inc
hlt
nop
push
add
cld
insl
or
ficompl
dec
or
fbld
push
icebp
stc
mov
jge
ret
jg
dec
shrl
xchg
cmp
in
or
lea
repz
mov
ret
push
test
cwtl
or
pop
lahf
push
jge
pop
fmulp
mov
sti
ss
or
popf
jle
mov
inc
inc
push
mov
xchg
cmp
insb
push
mov
std
test
sbb
insb
dec
adcl
fnclex
xchg
and
lret
push
popa
sbb
mov
repnz
lods
pop
das
ficoml
in
add
mov
inc
ja
mov
lret
push
or
inc
lcall
dec
mov
sbb
in
xlat
loopne
xchg
mov
push
outsb
scas
movsb
cld
mov
push
cmp
pop
aaa
pop
fucom
orb
call
xor
push
sub
mov
add
sti
test
push
popf
pusha
call
or
sbb
pop
bound
leave
out
in
mov
mov
mov
sbb
dec
call
mov
push
push
sbbl
xor
out
mov
dec
jl
mov
mov
lcall
push
inc
lods
fs
cmp
add
cmp
int
les
dec
xor
pop
aas
xlat
jnp
push
in
pusha
sub
cmp
jno
sbb
adc
stos
mov
push
out
ljmp
fimuls
push
sub
dec
cli
xchg
jle
sbb
and
jecxz
mov
rcr
mov
imul
std
rcrb
cltd
dec
inc
cs
mov
add
andl
jmp
cmc
mov
or
aad
mov
push
adc
mov
ja
lods
and
sbb
dec
mov
xor
dec
fldl
movb
cmpsb
ja
fmull
mov
jge
jo
inc
mov
shrb
fwait
mov
punpckldq
leave
mov
scas
jle
and
add
popa
les
lcall
jbe
lods
xchg
mov
mov
shlb
push
fcomp
lret
and
mov
cwtl
lret
sarb
pop
jne,pn
xchg
or
loope
jmp
cmpsl
ja
shll
push
dec
add
out
sbb
push
push
ss
lahf
jns
xlat
aas
inc
cmp
mov
out
scas
cmpsb
in
xor
push
cmp
pop
insl
int3
addps
test
stos
adc
xchg
xor
push
dec
adc
dec
inc
inc
xchg
mov
push
push
xchg
loope
flds
rcrl
hlt
cmc
adcl
dec
iret
xchg
in
pop
mov
mul
push
aaa
or
mul
popf
out
mov
clc
mov
gs
push
loope
imul
pop
insb
add
aad
mov
loop
ja
sbb
les
push
insl
fcom
adc
iret
shlb
pop
and
rcrl
daa
hlt
dec
push
sbb
xchg
sub
lods
imul
jp
jb
lahf
jbe
out
mov
sahf
popf
sub
xchg
inc
mov
cltd
add
in
pop
pop
adc
call
insl
xchg
cltd
int3
push
lret
mov
rorb
sub
fwait
push
cmp
cmpb
sub
sbb
xor
int3
aam
inc
push
stc
lea
jle
adc
repnz
bound
sbb
cltd
out
xchg
inc
aas
shll
fisubs
sbb
cmp
sbbb
mov
jecxz
push
xchg
pop
pop
dec
imul
loope
dec
aad
push
fisubrl
sti
fistpll
lea
jg
nop
dec
daa
stos
shl
aam
fmulp
lods
out
sbb
mov
dec
shrb
andb
lods
gs
or
push
and
cmpsb
js
sub
mov
jne
mov
in
cli
aas
fwait
loop
jno
jl
or
cwtl
testl
loop
mov
fstps
repz
push
add
inc
loope
outsb
mov
cmp
pushf
clc
sub
cli
push
addr16
mov
pop
dec
jge
mov
mov
out
in
out
add
xchg
mov
jl
adc
or
test
loopnew
sbb
push
cmp
cli
adc
sarb
pop
insb
in
les
jbe
xor
inc
aad
repz
mov
inc
or
mov
repz
xchg
repnz
push
lahf
pusha
test
repnz
movsl
jle
push
test
dec
dec
jbe
mov
ret
hlt
xchg
push
xor
cli
mov
lahf
cmpsl
pop
pushf
mov
fwait
or
testl
mov
enter
lods
add
daa
sub
sub
adc
aam
nop
popl
mov
jge
mov
inc
lcall
mov
cwtl
movsb
enter
adcb
ss
lods
jmp
sub
es
mov
mov
cltd
or
inc
movsb
in
jo
sahf
push
inc
insl
jl
jl
mov
cltd
sbb
add
lock
xor
jne
and
pop
nop
ds
orl
and
jle
int
cmp
fcompl
pop
addb
mov
scas
xchg
cmp
popf
or
xchg
stos
or
out
pop
fbld
sub
inc
pop
pop
insl
loope
mov
xchg
inc
loopne
sub
jbe
imul
fstpl
sbb
pusha
xor
xchg
jecxz
in
in
push
mov
ds
repnz
rcll
fisubl
mov
add
mov
jae
mov
test
dec
mov
popa
mov
shll
adc
lock
les
adc
push
popf
push
lods
imul
dec
cmp
aad
fwait
push
fisubrs
cmp
jns
cs
gs
nop
andl
shl
iret
push
out
icebp
mov
ret
mov
fwait
or
fadds
sub
subl
cld
xchg
imul
in
in
inc
adc
or
mov
mov
stos
inc
jns
mov
sbb
push
enter
pop
or
bound
sahf
mov
or
pushf
fnstenv
dec
adcb
scas
mov
add
out
rcll
jmp
bound
push
ja
mov
int
sub
sbb
aam
mov
lods
xor
in
mov
add
mov
adc
insl
insl
mov
mov
rorl
xlat
mov
scas
cmp
push
std
sub
xchg
add
das
aad
sbb
and
push
pop
inc
sub
sarl
sub
push
mov
rolb
fmull
lock
fwait
mov
fildl
test
gs
pop
leave
repnz
in
push
mov
ret
pusha
mov
jno
and
and
or
fidivl
and
ljmp
cmp
xchg
int3
mov
mov
jb
or
xchg
addr16
xchg
xchg
fs
stc
push
add
cmp
fs
sbb
mov
xchg
aaa
out
inc
push
adc
insl
pop
mov
mov
jae
and
ljmp
fidivrl
dec
push
popf
icebp
inc
mov
call
das
ljmp
lds
jle
icebp
or
pop
cli
pop
pusha
testb
stos
nop
call
push
nop
add
jns
xchg
xchg
inc
fidivs
ficoms
pop
iret
test
inc
or
test
pop
scas
and
imul
mov
and
insl
lock
add
xor
fs
ljmp
movsb
pop
mov
mov
roll
push
ficoms
cmp
adc
mov
xor
cmpsl
jmp
jle
or
iret
pushf
sbb
xor
imul
enter
mov
mov
shl
cmp
pop
push
jp
cli
dec
int3
xchg
sub
xlat
test
ja
jl
in
mov
and
out
mov
cmp
and
inc
outsb
test
imulb
ret
or
cmp
gs
fidivl
es
push
or
ja
adc
fsubrs
in
outsl
incl
sbb
mov
dec
adc
jmp
std
inc
mov
mov
sarl
adcb
pop
loopne
sti
jnp
jbe
xchg
fcmovu
push
nop
jo
or
cmc
ss
pop
in
dec
pop
mov
pop
push
jl
push
mov
inc
mov
jl
push
sarb
pop
inc
lret
std
testl
fnstenv
sbb
jo
xor
sbb
inc
cli
mov
inc
lea
test
push
push
xlat
mov
xchg
jo
fimull
leave
popf
out
pusha
sbb
out
testl
mov
mov
andb
xchg
rcrl
test
add
mov
loopne
call
fildl
jae
nop
pop
fst
sbb
dec
mov
shrb
jb
pop
bound
adc
sub
add
sub
aad
and
jno
stos
das
stos
ds
shl
ret
push
adc
clc
or
pop
arpl
adc
movb
cs
loopne
add
push
mov
push
mov
mov
mov
loop
push
dec
cmp
in
scas
push
loope
sbb
into
in
stos
mov
cwtl
inc
pop
fisubs
push
sarl
and
das
push
mov
cmp
cld
xor
test
outsb
pop
jge
push
cld
dec
aaa
test
jns
mov
pop
lret
cmp
sbb
lock
fimuls
outsl
cmovo
cmp
out
leave
cmc
push
or
rorl
inc
mov
popf
jb
cmpsb
add
fisttpl
push
push
stos
cmpsl
mov
dec
loope
faddp
jg
adc
dec
add
sbb
pop
mov
call
pop
cmp
pop
pushf
sbb
nop
push
pop
mov
inc
and
sbb
sbb
rol
enter
mov
in
clc
cmpsl
jb
das
es
cli
sbb
or
insb
clc
mov
mov
xchg
adc
aad
or
ret
inc
imulb
dec
ret
push
fldcw
cli
add
xor
push
test
mov
fs
jne
call
lods
mov
insl
xchg
inc
arpl
popf
xor
addr16
push
je
rcrb
push
cmpsl
into
and
xlat
sbb
loopne
js
daa
xor
aad
xchg
aas
es
inc
inc
scas
es
pop
mov
js
test
jae
push
rcl
popa
jl
gs
enter
stos
outsb
jnp
out
xor
xchg
inc
push
adc
push
out
ljmp
aaa
lret
xchg
scas
repz
xlat
push
filds
sahf
shrb
mov
inc
lods
test
cmpl
mov
out
xor
popa
xchg
jge
int
adc
jne
pop
or
shrl
pop
inc
cmp
arpl
adc
cmp
clc
sbb
cwtl
jl
xor
push
scas
mov
xchg
mov
push
les
mov
insb
pop
ljmp
and
add
add
loope
xlat
sbb
movsb
nop
movl
stos
jle
mov
jo
pop
mov
xor
insl
adc
int3
cwtl
test
mov
inc
jl
es
sub
nop
push
and
or
jne
cltd
jmp
or
in
cmc
les
push
xor
leave
dec
xor
dec
and
dec
xchg
addr16
xchg
mov
or
pushf
inc
mov
mov
test
iret
jns
inc
or
xchg
adc
lret
test
rorb
lods
mov
iret
ret
sub
dec
add
mov
inc
inc
fstps
arpl
mov
and
dec
in
xchg
xor
inc
stos
rorl
cwtl
xor
xchg
add
pushf
in
pop
or
idivb
inc
dec
es
out
dec
adc
rolb
popa
cld
dec
jnp
mov
fnstcw
mov
test
add
int
stos
adc
rol
dec
outsl
mov
insl
in
jne
mov
into
fwait
loop
jns
jbe
pop
sbb
testl
mov
and
sub
or
lcall
xchg
cli
lahf
inc
mov
or
push
in
imul
cmc
sbb
xor
mov
in
jg,pt
and
hlt
jne
and
pop
scas
jge
pop
add
mov
sub
pop
push
cmp
faddl
and
std
orl
jle
jns
cmp
lahf
pop
cmc
imul
roll
and
dec
ds
xor
clc
adc
addr16
cmp
sbb
push
xor
mov
imul
mov
daa
add
adc
dec
icebp
das
xchg
scas
xchg
jecxz
sbb
or
push
cwtl
loope
pop
push
push
fdivrs
jne
mov
jne
inc
xchg
fs
inc
out
pop
dec
or
ret
adc
mov
push
cwtl
add
dec
movsb
cld
sbb
cwtl
push
push
andb
daa
test
fiaddl
and
stc
mov
je
xor
jl
inc
fdivl
and
add
xlat
mov
mov
add
sbb
aas
jl
cmp
outsl
fistps
out
lea
into
mov
das
fwait
push
sub
adc
pop
cmp
dec
push
enter
movsb
or
pxor
outsl
rclb
lea
aad
loope
and
push
popf
or
jg
mov
stc
xlat
lea
test
int
nop
clc
xor
ror
adcb
sbb
pop
daa
popa
in
ret
inc
ljmp
jbe
jbe
loopne
mov
fisttpl
shlb
enter
daa
jmp
mov
lret
fwait
xchg
int
sub
mov
jns
dec
mov
sbb
add
loop
lret
add
push
and
or
jns
jns
jp
cmpsl
fwait
jmp
jg
mov
rcrb
stc
or
lcall
mov
ja
xchg
dec
or
orl
popa
push
jp
push
repnz
mov
fistl
andl
pop
repnz
xchg
pop
out
stc
xchg
lret
inc
sbbl
pop
les
mov
xchg
xchg
sub
repnz
dec
fxch
cmpsl
fwait
icebp
fwait
mov
outsb
popf
sti
sub
enter
aas
xchg
stc
lcall
mov
add
incl
fstps
push
adc
cmp
out
xchg
pop
dec
popa
jo
out
lahf
sbb
insl
test
jne
dec
clc
add
mov
testb
fbstp
ljmp
call
test
jecxz
lahf
cmc
pop
jmp
popf
cmp
test
lods
scas
jle
mov
lret
xor
adc
nop
or
cltd
mov
mov
jb
cld
insl
or
pmulhuw
xchg
cmc
sbb
dec
mov
cs
inc
nop
sub
leave
mov
cld
xor
aas
movsb
inc
xchg
testl
push
mov
xchg
xchg
call
inc
dec
cli
or
fmuls
sbb
xor
inc
jecxz
mov
or
ds
addr16
decl
iret
sarl
pop
jmp
add
mov
sarb
sbb
mov
adc
xchg
mov
jmp
push
xchg
and
or
bound
cmpsl
lret
js
jnp
pop
sub
test
mov
je
push
clc
push
mov
int
pop
imul
arpl
push
inc
test
xchg
stos
or
in
mov
push
mull
outsl
outsb
daa
repz
lcall
fidivrl
out
mov
stc
clc
cli
mov
outsb
aaa
stos
lcall
vshufps
and
idiv
add
xor
adc
adc
ret
enter
test
cwtl
and
cwtl
add
les
dec
xchg
push
test
jmp
sub
fnsave
push
subl
sub
xchg
rclb
leave
push
push
cmp
aaa
bound
jne
dec
lods
sbb
imul
jb
inc
and
fiaddl
sbb
inc
sahf
pop
in
jne
inc
fiadds
insl
mov
popa
dec
xchg
pushf
pop
mov
sbb
xchg
jmp
jecxz
cmp
bound
mov
xchg
add
lea
cmpsb
dec
rsqrtps
test
mov
xchg
jmp
xchg
jmp
test
inc
jl
js
jle
mov
inc
pop
cmp
push
addr16
mov
popa
loop
and
mov
xor
jmp
aad
addr16
xchg
or
cmp
dec
jns
inc
clc
dec
lods
or
mov
aaa
aaa
lcall
js
add
pop
clc
sbb
int
sti
pop
data16
jl
loopne
and
mov
jbe
sub
les
cmpl
mov
sbb
sub
loop
je
rcrl
lock
jno
jp
sub
in
jl
fildl
lcall
icebp
das
fs
lock
jl
ja
decb
sub
and
faddl
adc
and
pop
fwait
aaa
mov
jno
loop
add
push
pop
lock
lock
mov
sbb
and
arpl
fbstp
push
pop
pop
add
jnp
mov
or
jmp
in
sahf
dec
dec
js
aam
nop
or
in
mov
add
jmp
cld
mov
push
mov
mov
xchg
pusha
jns
mov
xor
cmpsl
xchg
mov
insb
cmp
les
mov
cmp
ljmp
int
js
jne
fcoms
pushf
mov
push
mov
jb
dec
xor
pop
cmp
add
leave
out
inc
xlat
lret
pushf
push
or
jg
pop
push
pop
push
sbb
jbe
in
mov
sbb
inc
in
add
out
int
add
push
mov
nop
das
bswap
cmp
cld
es
fsubl
mov
push
xor
and
ss
mov
mov
in
pusha
push
sti
push
dec
popf
or
jae
jo
jmp
shrl
fmul
xor
dec
ja
gs
int3
push
je
inc
mov
pop
out
lcall
ja
push
add
flds
jno
add
repnz
pop
mov
loopne
mov
push
repnz
push
cmc
rcrb
push
push
jns
mov
repz
test
mov
fmull
stos
shll
xor
out
leave
cmpl
mov
add
xlat
add
in
or
inc
push
jp
cmp
insb
mov
addr16
cmp
out
adc
cmp
xor
orl
stos
sbb
push
dec
add
mov
pop
dec
push
sub
mov
mull
int
popa
shll
push
and
pop
and
psllq
jb
cld
outsb
jno
adc
out
add
sti
pop
push
xchg
mov
daa
sub
jno
adc
sub
jne
movsl
mov
out
or
insl
mov
sahf
adc
mov
icebp
repz
inc
das
ds
mov
into
rorb
jae
repnz
pop
lcall
pop
mov
aaa
out
into
insb
dec
jb
pushl
push
repz
ret
mov
dec
mov
adc
xchg
push
mov
sub
iret
outsl
dec
clc
pop
xor
js
inc
xchg
jecxz
push
sti
cli
xchg
in
cltd
inc
xlat
ja
dec
lahf
or
mov
in
or
pushf
cmpsb
dec
rorl
jmp
movsb
jo
mov
mov
loope
test
fidivrs
jecxz
adc
nop
data16
out
stos
sub
dec
pushf
xor
jl
imulb
aaa
or
and
cmpsl
xor
mov
pop
movsl
fnstenv
je
or
cmp
fs
test
imul
dec
pop
orl
lcall
rcrb
pop
xadd
push
sbb
rcrl
int
cmp
scas
xor
std
fimuls
jae
mov
and
std
aam
movsl
out
jne
pushf
repz
add
lock
dec
or
adc
cmp
jno
pop
ds
cli
adc
nop
jmp
push
and
leave
arpl
fbstp
mov
subl
xor
xorl
ja
rcll
testb
fiadds
orps
loope
pop
fwait
xchg
push
fidivrs
and
lods
push
add
jmp
push
inc
lods
cs
jns
outsb
cmp
add
js
sub
push
test
std
inc
stc
ljmp
pop
xchg
repnz
loope
mov
decb
lret
pop
lea
dec
call
lds
xchg
jl
adc
imul
dec
jo
mov
aaa
clc
imul
cmp
mov
mov
dec
scas
cmp
sbbl
sub
je
fidivs
adc
mov
pop
jae
stc
ljmp
es
nop
shll
or
mov
xchg
add
xchg
adc
inc
xchg
sbb
mov
cmp
out
jno
pop
cmp
cmp
std
mov
add
mov
cmpsb
push
lcall
mov
add
mov
das
mov
pop
pop
push
mov
sub
idivl
nop
popf
xchg
test
xchg
jb
jl
das
imul
movsb
loope
testb
xlat
aaa
out
inc
jl
loope
inc
or
clc
clc
mov
mov
jg
gs
jb
popa
adc
sub
sub
mov
loop
or
sbb
mov
mov
in
jg
sbb
std
xor
lahf
orb
mov
icebp
fisubl
inc
out
subb
add
sub
lret
andl
pop
adc
loope
dec
pop
hlt
cmpsl
rep
test
cmp
adc
mov
stos
push
push
mov
and
in
mov
test
push
pop
push
fdivs
sbb
adc
in
dec
jecxz
jge
cld
daa
sbb
adc
inc
lds
shll
popf
daa
mov
or
xchg
mov
jle
cwtl
sbb
add
xor
sti
or
subb
and
fs
fdivl
xor
jl
aaa
scas
inc
dec
les
pop
iret
dec
xlat
xor
inc
inc
and
mov
sbb
call
sub
jmp
sbb
xchg
lods
jp
or
pop
ss
push
out
sbb
lret
rorl
idiv
lock
jg
outsb
notb
aam
movsb
or
mov
jge
ret
and
out
out
xchg
enter
std
and
jb
lea
sub
or
sbb
ljmp
jecxz
hlt
push
in
cmp
xchg
sbb
inc
mov
sbb
mov
xchg
cmpsl
lds
inc
xchg
insl
test
mov
pop
inc
xor
lods
leave
xor
adc
fmul
inc
or
xchg
xor
test
popa
test
add
bound
data16
cld
shl
aas
push
movsb
cmpsb
xlat
aad
mov
jmp
or
aaa
push
aas
or
mov
pop
add
mov
movsb
clc
add
shll
jg
xor
lods
add
pop
mov
lahf
xchg
sub
cmp
cs
pop
cltd
mov
call
fwait
cmpb
push
push
mov
rclb
loopne
or
mov
sbb
mov
fs
mov
sub
fnstsw
ror
inc
and
jp
fcmove
adc
int3
orb
iret
fbstp
jnp
es
mov
sub
mov
push
shrb
leave
push
sbb
sub
cmp
ss
rcrl
pop
mov
inc
mov
jg
cmpsb
lret
iret
lret
push
or
mov
mov
fists
sbb
mov
push
das
push
and
popa
push
xchg
in
xor
push
mov
pop
out
nop
enter
push
xor
and
aad
into
jb
jmp
test
inc
fnstenv
and
push
pmulhw
aas
mov
mov
es
jo
mov
jo
sub
shlb
fcmovnbe
stc
mov
imul
push
sbb
jge
adc
push
sub
mov
jnp
mov
mov
dec
insb
jle
inc
clc
sub
pop
lock
sub
nop
arpl
cs
and
jae
add
ss
shl
pop
addr16
inc
imulb
test
jb
js
lahf
mov
popf
shlb
dec
in
inc
and
jno
push
lock
in
push
jge
sbb
rcrb
push
cli
or
sbb
cmp
inc
pop
mov
mov
mov
mov
insl
div
adcl
inc
adc
mov
pop
icebp
loop
or
add
or
push
mov
test
mov
movsb
xor
push
popa
stc
pop
cmp
out
fldcw
mov
or
push
sar
push
ret
and
sahf
xchg
cmpsb
pop
lds
mov
adc
dec
push
xor
mov
dec
sahf
inc
out
lods
lret
sub
push
or
pushf
stc
and
mov
add
adc
mov
int
les
sbb
pop
notb
adc
sti
xchg
dec
push
jg
pop
in
aad
jecxz
rol
cmpl
push
sub
inc
xor
pop
sbb
jnp
xchg
daa
dec
andl
inc
sub
lret
fwait
loope
and
fcom
mov
mov
push
popf
aaa
stc
pusha
bnd
mov
hlt
jge
in
xchg
addr16
int
fdivrl
test
jecxz
decl
mov
jne
jle
bound
sahf
cmpsb
inc
pop
test
jno
inc
inc
push
daa
inc
lahf
je
mov
sbb
test
ss
clc
aaa
xor
xor
filds
data16
mov
insl
sub
add
lret
in
test
fstpl
pop
sub
mov
dec
and
rclb
xlat
movsb
cwtl
adc
out
call
cmp
push
dec
je
lcall
imul
out
push
push
push
repz
cmp
sbb
fistl
pop
mov
inc
jo
dec
cmpsl
cmc
js
adc
xor
pop
or
into
dec
pop
je
add
fisubrl
repz
xchg
out
and
xor
pop
adc
cltd
inc
adc
mov
jmp
mov
addl
cmp
jp
push
iret
push
pop
addb
in
in
xchg
and
mov
push
and
stos
or
addr16
sar
pop
xchg
sbb
sahf
repnz
jns
pop
and
ss
lcall
mov
mov
div
int
jmp
sub
insl
cwtl
inc
push
lahf
mov
inc
imul
inc
sub
ficoml
das
push
mov
xchg
leave
mov
fisubrs
mov
add
nop
inc
orb
out
jge
je
das
add
cld
adc
sbb
jecxz
hlt
pop
in
add
lcall
dec
inc
mov
cmc
push
sbb
xchg
addr16
xor
and
sub
call
adc
loopne
bound
xchg
xchg
in
adc
xor
xchg
sbbb
scas
data16
cmp
or
stos
push
pop
lods
inc
sub
mov
push
shrl
or
push
add
push
std
test
or
test
out
push
xchg
aaa
lea
jp
xor
inc
cwtl
data16
dec
mov
pop
jle
push
insb
scas
repnz
ret
jmp
fisubs
cmp
xlat
decl
inc
in
loopne
loope
rclb
push
int
xlat
inc
data16
movsb
adc
dec
fdivl
mov
std
int3
push
pop
out
xchg
shlb
pop
test
xchg
ljmp
pop
movsl
ja
lods
clc
xor
das
push
lret
mov
xor
mov
cmp
xlat
mov
sbb
mov
out
mov
push
push
test
leave
mov
cltd
add
adc
mov
dec
push
pop
xor
pusha
pop
cmp
nop
aad
leave
cmc
aad
add
subl
lods
lahf
mov
xor
pop
cmp
xchg
jg
xchg
leave
ss
test
jmp
xorb
sbb
sbb
lds
pop
or
cmp
inc
ds
repz
inc
inc
data16
gs
js
testl
clc
mov
lret
jmp
add
rorl
and
movsl
out
bound
scas
mov
mov
mov
jo
cmp
jno
fcmovnu
iret
xor
incb
into
xchg
adc
cld
xor
fwait
mov
jne
xlat
jg
in
movd
cmpsl
dec
test
rolb
cmpsl
sti
xchg
mov
enter
xor
fadd
xor
addb
adc
or
in
pop
addb
and
clc
push
push
inc
repz
mov
ja
mov
hlt
jne
in
adc
dec
leave
test
fwait
aas
ds
sbb
sub
sarl
aaa
stos
movsl
inc
mov
sub
xlat
out
outsb
xchg
fadd
push
push
paddsw
shl
outsl
ror
nop
rolb
imul
sbb
je
xchg
sub
daa
cli
ds
mov
aad
loop
mov
jbe
ret
out
fstl
mov
stos
mov
add
insl
push
lds
sbbb
cli
ljmp
jae
cltd
pushf
jnp
mov
decl
mov
jns
and
fldcw
rcrb
lock
ja
movl
mov
movsl
adc
xchg
lahf
adc
jmp
inc
xchg
sbb
cmp
pop
cld
test
fs
aas
pop
les
or
mov
mov
std
int
andl
dec
aam
xor
sbb
test
push
or
sub
mov
addr16
xor
iret
xchg
xchg
mov
ret
mov
push
popa
xchg
fdivs
sti
ljmp
cmpsl
arpl
xchg
jmp
repz
pop
insl
in
fcmove
add
dec
dec
cltd
sbb
and
popa
pusha
incb
and
mov
inc
lods
or
jne
pop
dec
enter
mov
push
sbb
and
pushf
mov
rorl
dec
aad
mov
pop
stos
inc
sbb
test
adc
xchg
std
sbb
loop
cmp
inc
mov
dec
test
cmp
es
add
mov
call
push
leave
mov
mov
push
dec
movsb
cmp
hlt
pop
call
dec
sbb
fnsave
push
stos
repnz
push
insl
adc
inc
insl
jl
movsb
add
lods
jbe
lahf
les
fsub
out
cltd
js
pop
fimull
push
jl
stos
push
mov
inc
imul
pop
mov
sahf
lods
add
mov
repz
sub
ret
pop
hlt
popa
add
pop
dec
or
gs
mov
jbe
mov
test
dec
push
push
push
js
jle
movsb
addr16
cs
iret
and
mov
fisubrl
test
aas
loopne
test
iret
lods
sub
mov
les
mov
mov
add
xor
mov
movswl
mov
gs
fstpl
mov
popf
and
xchg
lods
jno
outsl
mov
addr16
push
and
or
mov
pusha
mov
fprem
sbb
jbe
incl
mov
pop
sbb
imul
jnp
ret
nop
xor
inc
push
cs
sub
ds
xchg
mov
std
pop
cwtl
idiv
rolb
arpl
mov
jno
inc
pop
movsb
or
adc
outsb
mov
add
cmp
jmp
push
or
sbb
lods
jmp
outsl
daa
idivl
mov
das
jnp
mov
out
pop
ljmp
test
xchg
das
rorb
das
js
jmp
into
das
add
ss
and
fcoml
mov
push
cs
lock
sub
mov
sub
mov
dec
mov
mov
dec
lcall
aaa
loope
cmp
inc
or
rdmsr
pop
pop
out
out
movsb
fstps
nop
mov
popa
mov
setg
sub
icebp
jns
das
pop
loop
push
mov
and
cmpsl
js
xor
and
bound
idivb
loope
jo
and
or
push
fldcw
sbb
ret
mov
repnz
and
lock
jl
testb
fdivrp
out
mov
rcrb
push
std
xchg
in
sub
add
cmp
mov
into
push
test
xchg
sub
lea
cmp
and
fs
int3
sbb
jb
pop
pop
cmc
xor
adc
sbb
ficompl
push
sahf
sbb
lods
and
outsl
dec
lcall
mov
sbb
lods
loopne
push
test
inc
mov
pop
cmp
shll
aam
shll
int
enter
jp
icebp
loopne
scas
clc
div
inc
sbb
mov
and
push
xchg
lock
jecxz
cmpl
pop
cld
fsubs
ror
push
das
or
xchg
push
push
dec
in
lods
sbb
fcom
push
ret
jns
pop
adc
push
add
pop
aad
sahf
idiv
add
jl
inc
xchg
cld
das
aad
scas
popa
loop
imul
sbb
xor
js
dec
imul
loop
and
mov
pop
push
jge
mov
lcall
insb
scas
xor
scas
loop
subb
vcvtsd2si
add
jbe
cwtl
jae
fwait
lahf
dec
cli
xor
movsl
outsb
jecxz
dec
ja
fxam
scas
mov
ss
sub
jae
jle
sahf
inc
sub
mov
cmp
and
aam
add
xchg
mov
iret
push
mov
ljmp
insl
adc
mov
icebp
cltd
idiv
sbb
xchg
mov
and
add
out
xor
iret
push
add
or
aas
cmp
out
jle
or
test
fiadds
sbb
pop
lock
fs
mov
incl
subb
push
out
xchg
dec
cmp
into
pop
mov
mov
lock
das
jle
or
jnp
jbe
jo
icebp
jmp
lea
stos
fs
add
pop
cmpl
sbb
mov
es
into
xor
sbb
mov
and
fidivs
jg
xlat
jl
shlb
mov
mov
fcomps
mov
mov
ja
out
cmp
mov
aas
or
int
pop
ljmp
sbb
cmp
hlt
cmp
fsubl
or
or
mov
ret
mov
inc
movsl
mov
push
inc
imul
dec
dec
jp
jae
sbb
js
clc
int3
add
jp
icebp
test
aaa
or
jbe
les
cmp
icebp
mulb
mov
outsb
push
xchg
sub
and
lods
clc
mov
out
imul
fistpll
movzbl
shl
adc
leave
sub
rcr
mov
cmp
pop
cmc
gs
je
sbb
mov
mov
cmp
dec
std
ja
cli
xchg
shll
push
jp
loopne
mov
push
daa
pop
imul
ljmp
in
fiadds
mov
lcall
in
mov
xchg
mov
test
int3
in
fsubrl
or
mov
ds
repnz
lahf
xlat
jecxz
jge
push
pop
jmp
jg
test
mov
adc
int
insl
adc
jl
ret
dec
or
insb
popa
lods
aam
test
jl
cmc
push
int
cmp
enter
jns
and
dec
or
pushf
adc
stc
mov
lahf
adc
test
daa
and
test
and
addr16
and
cmp
insl
jae
push
fwait
int3
jne
xchg
mov
es
lds
rcll
pop
dec
scas
xchg
xor
scas
bound
fstp
aas
mov
fs
xchg
jbe
sub
out
push
outsb
cmpsl
lods
pop
dec
sbb
fcoml
aam
push
stos
mov
scas
loopne
popf
mov
jg
cmpsl
push
scas
pop
jmp
cmpb
inc
nop
lcall
xchg
dec
test
mov
fs
aad
add
mov
call
pop
loop
mov
jne
mov
cwtl
mov
cmc
shr
push
and
jle
pusha
iret
iret
in
add
xor
pop
and
adc
inc
pop
adc
out
jbe
or
shl
fistpll
mov
and
mov
mov
adc
sub
mov
lahf
out
mov
icebp
inc
jne
fsubr
fimuls
loopne
enter
imul
mov
out
mov
and
dec
icebp
lods
shll
dec
mov
fisubs
jp
sarb
mov
cmp
loopne
mov
addl
push
mov
mov
push
dec
in
mov
std
pop
popf
aaa
clc
adc
sbb
loop
pushf
push
lock
sahf
lret
aad
movsl
fistpl
add
aaa
sub
repnz
repz
mov
adc
popf
rcr
sbb
mov
sahf
hlt
icebp
lcall
lret
pop
dec
inc
jo
jnp
push
sub
sete
jmp
jb
aam
mov
mov
mov
notb
push
pop
mov
xchg
push
cmp
test
jp
xor
inc
and
inc
cmc
addr16
icebp
xchg
sti
out
inc
fadd
mov
xchg
in
dec
cwtl
jb
loopne
pop
cmp
and
dec
mov
clc
mov
sub
or
movsl
or
jnp
aad
mov
ret
push
cmp
adc
jecxz
push
mov
rclb
movsl
push
stc
aaa
fcoml
ss
cmc
cmp
cmp
xor
pop
sahf
pusha
lods
cmc
or
cmp
pop
icebp
cmc
fwait
mov
pop
sarl
imul
sahf
jb
or
pop
je
loopne
pop
call
dec
xor
mov
adc
dec
cmp
shr
cmp
shl
mov
sbbl
jg
cli
cmp
rol
enter
fisttps
xor
add
push
mov
and
sub
loopne
movsb
push
cwtl
mov
mov
mov
rorb
fisttpl
pop
movsl
les
push
test
cmp
sbb
or
jecxz
push
std
jg
rcrb
xlat
jno
inc
sbb
movb
lret
and
pop
lcall
sbb
push
or
insb
push
gs
jle
adc
fwait
push
fcompl
mov
icebp
push
push
push
push
leave
jne
xchg
add
and
fimuls
add
mov
mov
add
sahf
sbb
insb
movsb
push
call
and
das
dec
ljmp
cmp
xchg
lea
gs
fsubl
mov
mov
add
divl
js
jns
into
nop
scas
loop
pop
leave
mov
stos
mov
jno
lds
sbb
jmp
call
adc
movsl
sbb
std
stos
inc
pop
ret
aaa
xchg
cs
call
add
mov
mov
mov
push
push
mov
inc
outsl
int
sub
stos
inc
xchg
andl
and
xchg
mov
dec
jo
fisubrs
xchg
insl
lret
les
in
shll
xchg
dec
mov
and
add
mov
sbb
sbb
cmpsl
mov
cmp
adc
xor
outsb
fidivs
hlt
jl
lret
repz
mov
hlt
add
push
cltd
lret
icebp
mov
or
adc
test
shlb
icebp
gs
aaa
loop
pop
jp
xor
push
ljmp
sub
and
rcr
push
add
lret
adc
rcr
dec
adc
or
in
cmp
mov
test
add
leave
and
sbb
mov
lea
loope
in
jno
xchg
clc
adc
in
fidivl
mov
ret
or
or
jo
add
mov
cmc
pop
push
adc
dec
or
in
push
sub
scas
rorb
jne
jne
jne
xchg
cmp
pop
cltd
fadds
repz
jne
lods
mov
jb
xchg
movb
leave
push
gs
xor
dec
js
mov
lods
enter
mov
mov
add
out
das
xor
and
fs
mov
ret
mov
adc
lds
inc
fs
mov
ror
movsl
xchg
mov
outsb
adc
rcll
ret
rcll
mov
cmovl
fwait
jmp
jb
jne
test
sbb
ret
lods
sbb
push
push
clc
xor
insl
cmp
add
rorb
test
fdivl
or
xor
fwait
mov
mov
cmp
bnd
ret
mov
mov
mov
cmpsl
add
jae
or
loope
mov
cmp
xorb
xchg
inc
lahf
nop
cwtl
lret
xor
add
sarb
jno
mulb
xor
lds
jp
scas
into
and
mov
add
sbb
dec
mov
add
mov
and
mov
sarl
andl
mov
jo
adc
dec
fldt
mov
rclb
es
push
push
decb
and
sub
mov
inc
adc
jl
cmp
lret
pusha
aad
lahf
cmc
cmp
lods
icebp
hlt
xlat
mov
push
shll
int
or
dec
or
adc
lods
orb
scas
ss
mov
jecxz
jne
push
mov
dec
aad
lcall
loopne
rcrl
jae
sub
push
xor
int
dec
rcrb
jmp
xchg
or
scas
dec
jp
es
xor
and
xchg
mov
cltd
movsl
fs
inc
lea
sub
cmp
roll
xor
rcrb
icebp
shl
int
ret
mov
jl
push
in
push
mov
cmpsb
mov
adc
je
or
mov
out
and
mov
test
mov
loope
jb
cli
pop
fucomi
pushf
mov
push
out
pop
pop
xchg
inc
movsl
xlat
push
adc
cmp
mov
push
outsl
sub
mov
outsl
dec
ficoml
cmc
js
into
in
scas
pop
sbb
aad
pop
shll
sbb
sbb
insl
aas
mov
push
xchg
scas
and
xor
adc
or
jns
mov
popa
adc
mov
cwtl
pop
add
mov
jmp
jae
push
ds
sbb
arpl
mov
mov
test
adc
lods
loopne
jnp
sub
xchg
xchg
ss
sbbl
mov
outsb
inc
ljmp
mov
push
cs
fsubrp
push
and
cmpb
add
and
ds
cmp
pop
xchg
roll
pop
cwtl
stos
add
ficomps
arpl
push
cmp
push
fwait
xchg
shll
mov
seto
pop
push
add
and
dec
fsubl
or
fcoms
das
mov
scas
mov
jae
stos
mov
sub
xor
mov
outsl
push
pop
lahf
adc
lret
hlt
sbb
push
mov
andl
sarl
add
push
pop
je
movb
daa
sub
cli
fisubrl
lods
leave
inc
sbb
mov
outsl
jmp
mov
jnp
dec
jl
inc
cmpsl
xchg
inc
scas
xchg
lret
jns
inc
add
adc
pushf
imul
shlb
fdivrl
pop
jb
mov
adcl
int3
test
aam
andb
inc
lcall
sub
xor
pop
imul
std
pop
test
mov
cmp
scas
aas
push
pusha
adc
ffreep
xor
and
or
sbb
pop
loopne
push
inc
sub
dec
test
lods
xlat
fs
pop
mov
cmpsl
fsincos
inc
mov
sti
ja
push
aaa
bound
sbb
int3
outsb
cmc
outsl
ss
jmp
jns
in
fdivl
adc
lahf
idivl
xchg
jg
arpl
rcl
imul
xchg
cmp
adc
sub
addl
cld
cltd
xchg
add
lret
in
and
fsubs
add
pusha
sbb
stos
or
inc
cmc
and
stos
jg
movd
imul
addb
push
push
add
sbb
daa
in
sbb
jp
mov
test
sub
push
repnz
sbb
out
xchg
dec
fcomp
jo
data16
cmp
sub
jne
adc
in
shl
int
mov
mov
in
es
adc
push
fbld
inc
xlat
lds
aam
leave
movsl
mov
adc
jg
mov
fdivr
ljmp
sbbb
jo
arpl
sbb
dec
push
adc
sbbl
insl
push
fmul
cmp
inc
cld
inc
push
mov
or
xchg
sub
cld
roll
jnp
push
fstpt
addl
pop
dec
sub
mov
sub
push
jne
in
aad
outsb
pop
pop
sub
mov
fisubs
std
xchg
les
add
sbb
and
cltd
dec
fcomps
test
dec
shlb
sub
loopne
pushf
pop
cmp
clc
shlb
cwtl
pop
gs
mov
dec
xor
int
sbbl
cmc
aad
int
sahf
lcall
in
fs
pop
mov
inc
push
lea
push
mov
dec
and
fidivrs
jne
mov
sbb
cmp
jl
adc
cwtl
cwtl
sub
mov
add
pop
adc
xchg
frstor
and
and
int3
cwtl
xchg
fs
std
mov
push
mov
jns
ror
mov
mov
lahf
stos
adc
jge
push
dec
or
hlt
mov
dec
adc
loope
es
inc
mov
stos
push
pop
test
push
pop
or
popa
fwait
outsb
outsb
mov
les
cmp
pop
push
push
or
mov
out
ss
jae
push
sahf
adc
mov
cmp
sub
jge
shll
js
push
jae
fsubrl
movsl
cld
sbb
stc
fcoml
iret
pop
mov
mov
inc
test
xor
mov
dec
and
daa
xchg
jne
lret
lea
jns
jmp
fnstsw
xchg
addr16
dec
lds
outsb
mov
in
bound
popa
mov
stos
aam
dec
rorl
aam
in
scas
cwtl
jl
es
jmp
sub
dec
ljmp
xchg
fbld
scas
notl
mov
mov
jno
cmpsl
lds
loopne
repnz
es
and
mov
inc
scas
out
push
inc
and
cmpsb
fnsave
cmp
push
loop
ror
test
stos
lahf
xchg
inc
cmpsb
xlat
out
dec
hlt
mov
sbb
add
jne
mov
call
pop
inc
and
cli
pop
lret
loope
data16
fs
adc
push
mov
sbb
hlt
push
mov
push
fsubrl
mov
and
in
cmpsb
adc
lods
jp
jle
test
pop
out
scas
mov
aaa
aas
enter
fidivl
sbb
push
int
xchg
inc
arpl
cmp
push
stos
adc
dec
push
mov
lods
or
mov
into
xchg
popf
lcall
xor
pop
and
cmp
imul
xchg
scas
out
ret
sti
sbb
mov
nop
movsl
sbb
push
lock
xchg
pop
gs
test
rorb
test
mov
or
aam
in
lahf
mov
bound
sbb
jns
jl
pop
mov
adc
push
in
jp
mov
lea
call
pusha
xor
arpl
test
mov
shll
push
mov
fldt
mov
stc
add
scas
mov
lahf
cmpb
wrmsr
cltd
pusha
loop
sarw
mov
inc
mov
fwait
dec
cwtl
into
push
pop
je
cmp
jbe
pop
lods
mov
sub
xor
mov
cld
loop
pusha
mov
or
jmp
push
lret
jno
sti
cwtl
mov
xchg
inc
lret
sub
lock
push
mov
jle
aas
add
cmp
pop
inc
imull
jp
rorb
shrb
adc
jge
mov
cmpsl
divl
dec
mov
es
and
loopne
jge
jl
jl
inc
pop
add
mov
pop
jecxz
rcrb
mov
repnz
loop
lret
shl
jmp
sarb
sub
into
sub
clc
leave
jg
mov
cmp
mov
lahf
add
jne
outsb
mov
popf
out
xchg
popa
in
mov
stos
cmp
and
pop
pop
lahf
out
adc
inc
dec
insl
mov
aaa
or
aaa
mov
adc
loop
mov
test
cmpsb
push
iret
inc
or
daa
aas
dec
xchg
xor
outsl
xor
gs
fiaddl
push
test
popa
cmp
cmp
pop
xor
repnz
mov
rclb
xadd
cmp
cmc
xchg
pop
mov
rcrb
shlb
sbb
mov
rclb
pushf
sbb
stos
mov
adc
in
xchg
lods
pop
fwait
out
sti
mov
shl
addr16
pop
icebp
lods
aam
mov
lods
subl
jg
mov
jb
push
cwtl
inc
lods
pop
mov
mov
in
inc
ljmp
fbld
sbb
lea
and
jle
imul
jnp
sub
fs
push
hlt
jnp
aam
in
or
or
and
bound
push
mov
and
adc
imul
push
inc
inc
dec
push
pop
xlat
mov
push
lds
in
sub
aas
stos
push
push
push
xor
add
movsb
fisttps
rcl
mov
in
xchg
cmp
popf
inc
mov
bndstx
cmpsb
xor
mov
inc
mov
cmpl
lret
sbb
adc
movsb
push
or
mov
push
mov
mov
call
add
xchg
enter
adcb
in
xchg
xor
ss
fs
dec
jnp
pusha
test
xlat
xor
mov
cmpsl
cmp
and
push
jl
stos
add
fstpl
adc
push
fs
and
sub
mov
movsb
data16
mov
idivb
add
lods
out
adc
jp
sub
mov
sbb
icebp
xor
cli
int
stc
out
ds
aas
ds
add
cmp
mov
pop
iret
mov
dec
ja,pt
push
test
fld
add
add
mov
test
push
cmp
mov
insl
fs
mov
xchg
lds
xchg
or
scas
enter
cmp
lcall
mov
ret
lcall
xchg
push
das
pop
aam
xor
mov
jno
jge
xchg
gs
idivb
std
repz
jnp
in
addr16
push
bound
add
mov
fistps
bound
or
insl
stos
faddp
push
pop
mov
mov
out
add
call
ja
dec
sub
or
stc
pop
cwtl
stos
sub
sub
adc
in
outsb
mov
movsl
jg
dec
sbb
adcb
xchg
pop
rolb
shrl
xlat
call
lahf
subb
clc
jo
xchg
fildl
std
adc
push
cld
or
dec
and
add
loop
mov
jle
cwtl
mov
mov
adc
test
mov
jo
dec
adc
pop
movsl
cmc
daa
les
movsb
ret
mov
adc
fsts
mov
adc
jnp
cltd
movsb
fcmovnu
rcll
shlb
fdivr
or
imull
mov
adc
in
mov
mov
daa
cltd
sti
call
movsb
pop
aas
nop
xchg
jbe,pn
arpl
sbb
lods
lods
arpl
enter
pop
enter
push
or
in
dec
fidivrl
pushf
dec
lahf
icebp
icebp
xchg
mov
movsb
mov
ficoml
mov
jb
jne
sbb
pushf
mov
mov
xchg
jno
jnp
rclb
adc
push
xor
mov
ficoms
push
cmp
and
mov
test
js
xchg
inc
xchg
add
mov
jge
xor
jno
mov
arpl
xor
subb
jno
fistps
and
adc
clc
and
lret
imul
or
in
or
aam
adc
jp
sbb
ja
dec
pop
inc
adc
subl
dec
or
push
pop
mov
xchg
jb
xchg
aam
or
nop
mov
mov
dec
dec
nop
scas
jns
jb
fldcw
mov
outsb
divb
inc
xor
scas
scas
pusha
les
or
sbb
test
fcoms
or
pop
sub
adc
jns
shlb
cmpsl
xchg
push
or
fisubrs
imul
movsl
sub
pop
fcompl
mov
cmc
push
inc
cmp
loopne
dec
mov
xchg
test
aam
gs
mov
pop
mov
sbb
sbb
mov
in
sbb
jbe
jne
bound
jl
sub
mov
cmpsl
hlt
or
lods
loopne
and
xchg
dec
pop
mov
movsb
inc
adc
dec
cmpsl
add
xor
xchg
inc
insl
repnz
aad
rclb
test
jnp
dec
addr16
sub
outsb
icebp
lcall
mov
or
xorb
sbb
fstps
adc
mov
pop
jns
jge
lret
sbb
inc
adc
xchg
inc
out
xor
shr
jecxz
mov
cmpsb
lea
pop
jbe
mov
jns
and
and
adc
xchg
dec
cwtl
dec
sub
outsb
adc
out
xchg
leave
and
loopne
cs
cmp
lret
cwtl
inc
cmp
xlat
je
arpl
ret
mov
push
fildll
push
dec
xchg
in
in
mov
mov
in
xlat
aad
subl
movsb
mov
mov
inc
sbb
pop
jmp
lcall
dec
sbb
sub
popfw
lret
imul
int
xor
jbe
pop
cmp
les
or
jecxz
data16
mov
stos
andb
int
nop
rcll
jnp
ficoms
and
lahf
mov
jbe
cmp
movsl
mov
je
sub
xchg
dec
stos
adc
int3
arpl
in
clc
leave
add
mov
fstpt
push
repz
dec
fwait
mov
or
mov
push
inc
arpl
pop
jae
and
cmp
inc
adc
out
cld
add
mov
rcrb
fst
pushf
dec
adc
int3
outsl
adc
sbb
pushf
je
xor
and
iret
xchg
xor
xor
bound
addr16
int3
rol
push
in
gs
and
fwait
roll
jne
jp
and
xchg
mov
stc
mov
and
or
xor
popf
idivb
add
stos
push
jg
lea
out
stc
and
iret
cmp
pslld
out
add
xchg
jl
mov
jmp
sbb
gs
ljmp
lock
mov
daa
dec
movsl
imul
mov
or
decl
cmpsl
dec
stos
sub
in
jo
ja
fistl
xor
jno
pop
xchg
jnp
hlt
or
insl
pop
xor
mov
dec
inc
and
inc
scas
sub
inc
in
mov
mov
or
in
out
je,pn
loope
mov
inc
setle
test
jg
cltd
lods
loope
testb
nop
fldl2e
mov
jmp
adc
push
insl
xor
in
push
pop
xor
iret
popa
dec
das
push
jne
fstpl
mov
js
mov
ja
xchg
les
mov
hlt
mov
push
or
jle
pop
sub
push
mov
imul
xchg
sbbl
test
sub
push
push
mov
push
adc
mov
insb
xchg
test
data16
das
dec
push
ds
js
shrb
fwait
aam
cmp
movb
add
adc
mov
test
mov
cmp
shrl
jbe
je
and
pop
scas
xchg
sbb
scas
xor
inc
das
jecxz
jo
loop
pop
sbbb
jmp
and
adc
pop
lods
les
shrl
jno
pop
fiaddl
aaa
sbb
pop
adc
outsl
dec
jnp
push
sub
mov
cmc
xchg
nop
ss
push
dec
jmp
inc
push
pushf
jo
sub
mov
inc
pop
stos
icebp
inc
mov
stos
inc
mov
jb
or
rorb
xor
in
xchg
and
mov
in
in
mov
ds
dec
push
fisubs
call
xor
fistps
adc
rcll
dec
gs
jae
and
inc
scas
or
xor
out
enter
ds
inc
push
outsl
xchg
jl
add
mov
mov
aam
outsb
rolb
in
add
roll
sub
lock
iret
pushf
insl
lea
sub
dec
push
cs
outsb
push
enter
pop
iret
fwait
cs
cli
pop
imul
rcl
cmp
mov
movzbl
pop
not
leave
adc
insb
add
and
jo
dec
add
mov
xchg
push
inc
mov
stc
pop
lret
lods
pop
inc
std
mov
nop
repnz
out
jns
pop
mov
pop
sbb
xchg
int
fistpll
and
in
lea
push
andb
xor
jl
sbb
sbb
push
jnp
popa
in
arpl
imul
mov
jmp
outsb
mov
enter
leave
jg
stos
dec
jae
or
daa
and
fisttpll
or
repnz
out
or
mov
xor
xchg
sbb
mov
cmp
mov
add
test
xchg
mov
cwtl
aad
hlt
stc
dec
cmp
cmp
jnp
nop
stc
daa
mov
push
test
inc
jne
rcrl
jecxz
adc
mov
jno
push
jmp
cmpsb
inc
popa
xor
out
repnz
add
push
lds
xor
lock
iret
rcll
push
popa
xor
out
roll
push
jne
pop
sub
dec
loopne
loopne
dec
mov
ror
xor
jecxz
push
jg
xchg
dec
xor
jbe
push
mov
cbtw
cmp
dec
sbb
or
cmp
ret
loop
mov
sub
push
repnz
mov
subl
lds
sbb
or
adc
adc
ss
sbb
leave
add
fisubrl
rcll
cmovo
mov
imul
stos
cld
push
mov
lock
and
shll
dec
inc
pop
sbb
inc
pushf
popa
imul
sub
dec
ljmp
push
lret
ds
cmp
pop
fwait
push
mov
rcrl
div
lret
pop
xchg
insl
jnp
push
fcomi
or
in
cmpsl
jns
fiaddl
cmp
ret
shlb
movl
aaa
lock
dec
iret
cmp
cmp
cmp
jne
mov
xor
dec
pop
in
mov
jl
std
adc
pop
sbb
outsl
add
sbb
fdiv
inc
ret
inc
shl
mov
rcr
or
cwtl
jecxz
decb
stos
out
sarb
push
insb
sub
and
hlt
into
inc
repnz
mov
and
movsl
mov
pop
mov
sub
mov
lea
push
xor
add
pop
mov
sub
lods
push
pop
jecxz
outsl
dec
nop
shrb
dec
or
aam
lods
mov
mov
nop
mov
dec
fstpt
jg
xchg
pop
jno
jge
ds
imull
lods
daa
subb
movsb
data16
fcmovnb
lret
fisubs
in
or
js
lcall
jne
mov
push
aad
aaa
or
lock
jle
in
ds
pop
mov
rcr
adc
outsb
mov
cli
sub
pop
or
sub
outsl
jle
cmpb
lret
jle
scas
sbb
cmp
lcall
pop
jge
push
in
pop
fistps
aad
ss
dec
loopne
stc
cmp
popa
scas
xor
cmp
shll
insl
fisttps
test
ret
dec
pop
mov
ss
sbbb
xchg
aam
jmp
push
sbb
das
inc
sub
imul
cmpsb
ja
or
lods
rclb
pop
xor
psubusb
or
and
mov
cmpsb
dec
mov
loop
cmp
cmp
fnsave
data16
add
mov
js
frstor
cmp
aas
test
popa
ljmp
mov
sbb
dec
idiv
sbb
jle
sbb
popf
rorl
mov
mov
sub
das
stos
pop
push
in
out
int3
out
jge
sub
lret
das
add
adc
pop
iret
js
jg
roll
daa
pop
xor
ficompl
fwait
jge
rcrb
cmpb
lret
das
adc
xor
rcrb
pushf
inc
daa
je
scas
fdivl
mov
rorb
out
mov
je
jmp
mov
subl
adc
shll
xor
mov
imul
jns
pusha
and
int3
fimull
sbb
mov
push
add
pop
nop
loop
inc
in
pop
xchg
mov
sbb
ficompl
in
sbb
xchg
pop
mov
clc
rorl
or
sahf
mov
push
xchg
push
dec
sti
cmc
out
sub
das
lods
and
or
les
mov
scas
lahf
pop
out
push
dec
xchg
mov
sbb
mov
inc
mov
iret
aad
pop
mov
sbb
push
add
lods
push
mov
cmc
jbe
fs
mov
sub
mov
xchg
sbb
mov
sbb
loope
mov
cmp
xor
cli
inc
cmp
test
xlat
cmp
or
push
pop
in
push
lods
xor
scas
in
push
test
dec
movsb
jmp
mov
inc
je
mov
or
out
xor
push
sbb
push
loopne
stc
aaa
cmc
push
mov
mov
cmovne
dec
pop
dec
call
scas
sbb
mov
mov
mov
push
xchg
lret
mov
dec
aad
sbb
mov
dec
pop
xlat
mov
lods
imul
pop
xchg
mov
xlat
cmpb
std
mov
fadd
popf
mov
sub
jge
loopne
dec
xchg
push
mov
xor
xor
sbb
cmc
in
out
std
popa
sub
or
cmpsb
popa
iret
out
nop
and
lcall
jae
pusha
xchg
incl
mov
dec
in
or
pop
mov
je
xchg
dec
mov
lret
test
xchg
push
jl
aas
inc
or
sub
xchg
rorl
in
test
jnp
pop
xlat
mov
xor
cmp
jecxz
jmp
push
adc
sub
push
adc
cwtl
push
lret
or
loop
mov
mov
lret
pop
fidivrs
mov
repz
mov
xor
jb
mov
mov
notb
adc
xor
addr16
sbb
or
pop
repz
pushf
js
add
jecxz
sbb
rol
pop
mov
loopne
push
xchg
add
add
mov
push
xchg
test
pusha
adcl
shll
mov
aas
repz
aam
fbld
mov
scas
std
stos
mov
imul
sub
add
lret
aad
adc
loope
mov
cmp
xor
dec
test
outsl
xchg
mov
pop
mov
outsl
mov
repnz
ja
stos
cmp
lret
insb
imul
sti
pop
jp
cs
andl
out
bound
xchg
sbb
xor
push
insl
pusha
jl
jle
jns
ret
xor
push
mov
pop
dec
jbe
mov
sub
lea
mov
movsl
idivb
aam
mov
icebp
xchg
mov
es
imul
lret
addb
cmpsb
xor
jnp
js
jmp
add
insb
adc
xor
cmp
mov
shr
addr16
mov
dec
mov
mov
arpl
cwtl
aam
cmc
insl
mov
xchg
fisttpl
inc
or
pop
adc
je
data16
inc
cmp
mov
rcll
lds
push
dec
add
mov
mov
mov
mov
add
out
clc
add
push
and
xchg
jns
jns
adc
jno
xchg
lret
in
fcmovb
sbb
fldenv
in
stos
movsb
xchg
scas
ds
mov
aaa
repnz
shrb
xchg
gs
mov
mov
cltd
pop
jecxz
pop
addr16
xchg
out
adc
or
push
mulb
es
pop
xchg
cmp
or
pop
mov
lcall
imul
adc
les
inc
rorb
cli
lret
ja
xchg
jne
mov
enter
pop
push
inc
data16
pop
push
or
or
mov
lahf
mov
mov
in
inc
cmp
xorb
out
mov
ds
xchg
cmp
in
jmp
sbb
insl
scas
out
test
pop
mov
dec
dec
outsl
adc
mov
gs
lret
sbb
shll
pop
add
insb
in
lret
incl
jno
cmpsl
out
inc
pop
in
scas
inc
das
in
test
mov
insl
sub
stos
dec
ds
cmpsl
out
mov
jns
jmp
or
cmp
add
xchg
xor
mov
cmpsl
xlat
mov
scas
pop
push
rcrl
hlt
lret
repz
xchg
or
sbb
or
stc
in
iret
fs
loope
ja
cmp
addr16
movsl
rolb
mov
and
xchg
ds
rorb
xchg
cmp
sub
in
mov
outsb
out
pusha
lcall
pop
cmpsb
sbb
mov
or
mov
cmc
test
popa
outsl
sbb
ret
cmp
mov
cmp
add
cmp
mov
jmp
push
inc
lahf
sub
fimuls
add
cmp
pop
test
push
and
xchg
push
push
lret
stos
adc
pop
js
push
sub
je
testl
add
jp
lods
adc
dec
dec
es
data16
iret
sbb
mov
xor
or
sbb
pushf
testb
jg
testb
xchg
sub
sbb
test
push
push
rorb
lcall
std
fbstp
xchg
lcall
add
xchg
bound
fs
ffree
shrb
lock
adc
rep
shl
gs
jno
movsl
scas
repz
dec
pusha
jl
test
clc
sarb
cmpsl
addr16
and
lea
scas
stos
xchg
loopne
dec
aam
cld
das
pop
lret
mov
sarb
push
jge
cmpsb
ror
jb
dec
inc
outsl
popf
add
enter
clc
sahf
out
stc
out
mov
mov
jno
test
insl
ljmp
cmp
into
cld
je
mov
lea
cmp
std
mov
rcrl
push
cmc
call
dec
arpl
loopne
out
mov
sbb
repz
ss
lret
cmpsb
cmpsl
shll
outsl
stos
dec
fistps
xor
pushl
jo
mov
jmp
mov
nop
pop
fstps
push
fwait
cmp
mov
push
mov
mov
dec
inc
mov
cmp
or
or
rorb
ror
adc
push
fprem1
add
inc
shlb
sbb
insl
push
xor
cmp
hlt
lds
das
es
xchg
repz
mov
or
fstpt
add
jg
mov
cwtl
jp
cmc
pop
test
xor
pop
mov
and
mov
hlt
mov
xchg
es
mov
push
inc
fdivr
addr16
cltd
jl
cmpsb
push
int
add
mov
loop
dec
subl
ss
sbb
stos
int3
movsb
pop
adc
cli
adc
rorb
cli
lods
dec
icebp
pop
dec
int
sub
sti
fisubrs
roll
nop
dec
lahf
push
push
jo
inc
sahf
outsb
fbstp
jg
inc
mov
push
dec
dec
inc
daa
data16
cmp
js
xor
adc
adc
mov
pop
leave
add
or
divb
xchg
add
ret
mov
inc
and
push
in
sbb
xchg
push
and
jecxz
and
pop
cmpl
pop
sar
sbb
dec
lods
jg
bound
push
jle
and
inc
cmc
cltd
es
mov
mov
jne
loop
push
xor
jne
addl
popa
add
pmulhuw
jnp
cwtl
mov
xor
test
inc
mov
call
psubsb
and
test
stc
ficompl
xlat
test
aas
or
dec
jmp
xchg
lods
les
mov
add
dec
push
jmp
push
inc
mov
xchg
push
into
cmp
cmp
int
dec
rclb
mov
add
jae,pt
mov
sub
std
imul
stos
xor
xchg
lock
call
and
jle
or
dec
ret
push
or
jo
test
out
test
jb
push
decb
push
sub
cmpsb
loope
cmp
mov
flds
mov
push
push
push
and
mov
lods
addr16
mov
dec
dec
sahf
cltd
inc
mov
in
jb
push
clc
push
pop
mov
or
dec
jne
jbe
dec
add
push
in
mov
jp
sbb
push
in
stos
test
mov
repnz
ljmp
jne
dec
mov
pop
cmpsl
xchg
fdivrp
mov
repnz
outsb
in
adc
dec
dec
fisubrs
push
sbb
ret
inc
sbb
or
fcmovu
mov
cwtl
fildll
or
lock
fdivrl
cmp
ficoms
div
enter
jg
jp
pop
insb
fwait
jp
pop
bound
dec
psubusw
or
cwtl
adc
mov
mov
xor
pop
inc
out
jp
dec
imul
push
outsb
movsb
push
push
xchg
fbstp
mov
inc
icebp
clc
lds
daa
cld
mov
mov
jl
sub
xchg
xor
add
sub
sti
in
mov
push
lret
lods
dec
adc
popa
cli
cmpsb
dec
shll
shr
cli
scas
jb
mov
sub
push
pop
xor
push
aas
push
push
lock
fwait
dec
test
aaa
or
imul
jmp
jmp
jb
jl
gs
adc
cld
gs
aad
bound
enter
mov
xchg
xor
dec
scas
arpl
mov
lods
sbb
push
addr16
fsubl
xor
outsb
incb
mov
ja
scas
in
jge
out
push
rcr
sbb
mov
das
dec
jecxz
xchg
mov
mov
leave
fists
mov
rol
decl
mov
aaa
cld
and
mov
inc
sbb
ret
xor
cmpsl
repnz
daa
cmp
inc
cmp
dec
loop
lods
lea
pop
les
loope
into
in
mov
pushf
mov
fmull
mov
shlb
scas
add
cmc
jo
or
sbb
in
imul
dec
xlat
cmpsl
hlt
push
aad
and
cmpsl
mov
popa
rorb
jecxz
cmp
push
jle
push
lea
sub
mov
lret
das
insl
push
orb
xchg
int3
pop
loopne
dec
dec
ljmp
jnp
push
pop
mov
jg
les
and
mov
or
jl,pn
enter
mov
add
cmp
in
aam
inc
push
push
test
xchg
or
inc
mov
adc
push
add
push
add
cmc
xchg
pop
out
inc
ja
lret
xor
mov
ds
mov
mov
daa
sub
fiadds
cmpsl
jne
inc
andl
mov
inc
out
mov
or
lcall
insl
push
inc
fwait
adc
adc
test
cmp
cmp
repz
xor
sub
mov
and
jo
loop
repnz
push
xor
xor
jb
fcomp
test
jle
mov
fst
movsb
cmpsb
rcrl
xchg
push
sub
cwtl
shlb
hlt
mov
loop
mov
loop
movl
and
sarl
sbb
jmp
or
add
ja
push
andl
dec
in
add
mov
mov
fimuls
movl
mov
int
cmp
mov
push
dec
jge
add
repnz
andl
jle
cmp
sub
ds
lods
jp
insb
mov
push
mov
outsb
test
cmpps
sti
inc
dec
hlt
mov
mov
je
mov
or
jo
xlat
aad
call
mov
mov
cmp
or
mov
cmp
dec
outsl
lods
xlat
mov
push
inc
mov
lret
fisttpll
inc
xchg
lret
imul
out
pop
xchg
lock
push
mov
popf
mov
call
mov
lcall
daa
fwait
aad
jne
mov
mov
shll
clc
xor
fdivrp
nop
inc
jmp
inc
xor
xchg
shll
xchg
xchg
pop
dec
lahf
mov
mov
push
and
push
xor
call
mov
inc
xor
push
fwait
mov
in
cmp
or
fdivrl
sbb
andb
jp
idivl
cmpsb
xor
xor
rclb
mov
mov
xlat
pop
mov
cs
xchg
jb
in
mov
xlat
enter
in
sbb
push
sbb
sarb
mov
xor
pop
inc
fdivr
push
xor
stos
sahf
ss
sbb
imul
clc
ds
icebp
mov
or
jg
cli
push
movsl
xor
mov
sarb
call
ror
scas
in
sti
cld
sbb
fcomps
fcoms
fmuls
and
xchg
xchg
ret
dec
in
mov
cmp
punpcklbw
mov
test
pop
jg
push
cld
clc
loope
adc
dec
pop
jns
sub
jne
sti
mov
mov
ss
inc
pop
leave
push
mov
ja
mov
jl
jg
mov
outsl
add
mov
lcall
sub
pop
fcmovne
stos
mov
mov
lret
lret
pushf
cmp
mov
lds
addr16
add
pop
xchg
or
dec
mov
add
inc
inc
add
push
xor
jmp
xchg
sub
sbb
cmc
push
imul
mov
out
xchg
and
or
jae
loope
jb
lock
add
push
adc
pop
out
mov
inc
lock
ljmp
push
into
scas
imulb
aam
xchg
jle
loopne
loopne
je
and
js
mov
ret
pop
inc
cmpsb
add
xchg
cmpsb
inc
jge
test
inc
sbb
mov
imul
mov
das
lea
jmp
scas
mov
sub
sahf
sub
jecxz
int3
in
lds
repz
xor
sbb
or
pusha
or
orl
call
lods
lods
fists
scas
stos
call
inc
inc
pop
inc
jns
aas
inc
xchg
push
jne
xor
sahf
enter
arpl
cmpb
fs
pop
sbb
out
add
mov
mov
testb
mov
stos
xor
mov
jae
add
clc
cmpsb
mov
mov
ret
lahf
aad
fucomi
sahf
mov
pop
test
stos
repnz
inc
and
ret
pop
adc
sbbb
add
imul
dec
popf
or
dec
mov
daa
or
enter
push
and
rorl
mov
fstpt
mov
pop
les
or
mov
aam
sub
out
or
sar
outsl
cmc
adc
jmp
ds
push
xor
dec
xor
in
fdivl
lock
and
fcmovnbe
xchg
sbb
push
mov
xchg
stos
int
dec
and
pop
mov
inc
inc
jl
jecxz
or
nop
push
js
jmp
mov
lods
jb
shrl
push
mov
jnp
fs
mov
in
sbb
pop
xchg
mov
mov
cmpsb
iret
pop
sub
inc
lahf
cmp
stos
scas
pop
cmp
sbb
cs
push
test
std
push
jns
mov
aas
and
pop
inc
aas
xor
cmp
inc
pop
pop
imulb
cmp
push
sub
ss
jle
add
clc
sub
dec
pop
jmp
filds
or
lret
stos
dec
fisubs
insb
idivb
int3
and
fs
mov
mov
ret
sbb
scas
das
divl
lret
jne
iret
xor
xor
lahf
mov
jmp
cli
pop
xchg
pop
pop
mov
inc
ss
pop
rcll
jg
pop
mov
pushf
arpl
add
lods
out
aaa
icebp
mov
adc
call
gs
dec
xchg
xor
inc
pop
loop
fldt
xchg
and
cmp
xor
mov
cld
adc
outsl
dec
lds
and
push
cmpsl
push
dec
jecxz
pop
imul
cmpsl
push
cmp
fsubrs
xchg
xchg
scas
and
pop
iret
cmpb
add
dec
aad
aam
fsubl
mov
dec
add
or
pop
inc
mov
inc
xchg
repz
mov
out
mov
mov
aam
out
cltd
mov
repnz
cmp
out
repz
mov
xchg
adc
or
push
loope
jg
jmp
imul
cmp
rcrb
push
es
cmp
cmpsl
bound
repz
push
push
je
andb
fistl
cmp
out
fldenv
int3
in
ret
aam
push
pop
in
stos
jns
mov
cmc
jne
jno
xor
fnstenv
pusha
scas
stc
and
xchg
movsl
dec
insb
fiaddl
fldt
xchg
in
push
push
mov
call
pop
fimull
push
mov
mov
and
push
out
mov
loope
xchg
mov
out
rcll
pop
sub
adc
jp
aam
lds
sub
xor
loop
lds
or
sub
mov
data16
jae
lcall
ret
lds
data16
push
fs
stos
mov
sbb
outsb
adc
adcb
filds
mov
hlt
push
lea
xor
leave
hlt
inc
pop
jp
cli
pop
testl
jecxz
pop
adc
in
jo
js
sahf
fdivl
pop
cmpsl
rolb
daa
lret
xor
mov
cmova
push
jb
cmp
enter
lods
hlt
daa
dec
sbb
insl
pop
in
cltd
jnp
push
cmp
cmpsb
call
int
or
stc
xchg
shlb
sbb
out
lcall
fmuls
in
xchg
cltd
cmp
cmp
mov
mov
call
in
loopne
popf
adc
pop
sub
or
mov
jne
icebp
pop
cmpb
addr16
int3
xlat
jl
cmp
pop
dec
imul
fisttpll
sti
lods
add
dec
arpl
lods
or
xchg
mov
inc
rolb
inc
or
jbe
jne
int3
xorl
cmp
outsl
je
jmp
fwait
lods
aam
mov
xlat
adc
sbb
inc
xchg
insl
pop
lods
jl
xchg
xor
jo
and
call
test
call
jecxz
stos
sbb
xor
or
mov
hlt
popf
aas
out
add
mov
push
ror
cmp
push
add
sarl
sub
cmc
repnz
or
insb
bound
and
and
insb
lcall
bound
and
nop
decl
sbb
push
push
or
std
dec
dec
ret
inc
in
stos
pop
jbe
or
aaa
mov
mov
fmulp
dec
pop
mov
sbb
push
or
in
in
jno
stos
pusha
hlt
xor
iret
add
sbb
out
xchg
imul
jecxz
pop
int3
aaa
andl
sub
lods
pop
stos
mov
pusha
rolb
dec
adc
pop
div
inc
xor
fwait
dec
jbe
nop
sub
pop
test
push
mov
xor
ds
xor
aam
cmp
mov
jo
xor
stos
push
ret
jle
inc
xchg
mov
ja
iret
sbbl
pop
mov
lods
dec
push
sbb
mov
imul
jne
in
jecxz
cmp
mov
dec
mov
mov
gs
xchg
imul
jecxz
pop
pop
loop
sub
sub
mov
or
aam
mov
mov
lock
jge
hlt
aam
sub
lock
leave
sbb
jnp
xor
add
cs
sub
push
add
or
xchg
into
jo
cmp
leave
popf
mov
outsb
jecxz
cmpsl
fldl
push
insb
jecxz
mov
test
and
dec
test
cmp
ss
pop
out
scas
mov
es
punpcklwd
push
and
lods
dec
cmp
mov
pop
into
xchg
jbe
pop
lods
ret
ret
leave
xor
or
leave
bound
dec
andl
mov
nop
push
stos
cmp
dec
push
xchg
fists
dec
add
lcall
and
pop
xor
push
aad
mov
sub
jecxz
aad
popf
cli
outsb
adc
xor
pop
xchg
push
std
in
call
into
push
lock
ss
xchg
repz
inc
xchg
inc
or
imul
mov
adcl
imul
lret
mov
dec
sub
call
jmp
lcall
jns
mov
xor
bnd
cmc
inc
mov
cs
gs
inc
ja
mov
sub
loop
outsb
jmp
adc
add
fisubs
inc
inc
lods
lcall
inc
xchg
leave
mov
ja
mov
xchg
movsl
jg
repnz
inc
int
and
push
adc
dec
mov
inc
mov
adc
cmp
decl
xchg
push
sub
lret
dec
aad
jp
es
jecxz
inc
shrl
sbb
enter
adc
addl
iret
jno
test
data16
stos
les
lret
hlt
dec
push
xlat
mov
jp
int
inc
jp
push
mov
notl
or
into
xor
ja
sub
fisubrs
dec
inc
call
xchg
insl
pusha
adc
adc
test
sbb
fimuls
inc
xor
dec
mov
fdivr
push
push
addr16
outsb
sub
cltd
add
sarl
mov
add
insb
in
mov
jnp
jb
out
into
mov
xchg
push
push
jnp
dec
mov
push
out
inc
add
jg
jo
push
lock
cmpsb
imul
mov
jmp
xor
pop
mov
mov
orb
inc
mov
scas
outsl
cmp
mov
lock
inc
push
sti
xchg
sarb
test
mov
sbb
xchg
xor
or
test
stc
xor
fildll
dec
dec
sbb
jle
xchg
or
xor
or
jg
pop
imul
addr16
lock
xchg
jno
test
movb
popf
xlat
push
fstps
mov
jle
stc
sbb
pop
push
xchg
pop
push
xchg
push
push
enter
daa
repnz
jns
ljmp
mov
jo
add
repnz
sbb
sti
loope
pop
insb
movsl
imul
pop
xchg
loop
mov
in
lea
idivb
xchg
jg
lock
sub
or
pop
jns
adc
aad
lods
cmp
xor
flds
repnz
shl
pop
jnp
xlat
jbe
sub
in
dec
adc
pusha
add
outsb
into
cmpsb
push
sbb
push
or
aaa
add
dec
mov
mov
icebp
fcomps
cmpsb
movb
sahf
hlt
lock
icebp
push
lock
mov
mov
cld
outsl
sbb
xchg
cmp
out
int
fsubrl
sub
cmp
jle
ret
fcomp
addr16
or
jae
inc
inc
pop
xor
adc
dec
ret
inc
cmp
out
dec
gs
jmp
adc
mov
mov
and
cld
andl
xor
outsb
je
negb
cmc
mov
lods
insl
std
xor
cli
fmuls
xchg
pop
enter
test
xor
test
lret
mov
xchg
cltd
lock
mov
pop
movsl
xchg
adc
in
lar
aas
mov
lret
jb
or
jns
push
arpl
dec
loop
das
xor
shll
mov
mov
xchg
fstl
pushf
les
movsl
xchg
jne
daa
jg
or
sub
dec
mov
test
inc
lds
mov
cmp
add
sbb
pop
and
sub
inc
mov
mov
subl
movb
cwtl
es
sbb
scas
ja
cmpl
add
jg
stos
addl
hlt
iret
or
push
xchg
mov
pop
mov
adc
dec
jecxz
adc
dec
dec
aas
and
xor
lods
scas
fiaddl
les
dec
imul
jno
repz
dec
rcrl
mov
ds
add
rorl
pushf
push
loop
jo
cmp
imul
inc
in
or
pop
ret
outsb
repnz
loop
mov
ret
mov
repz
pop
inc
sub
aas
cmc
jp
jmp
sub
leave
jmp
pop
inc
jno
fisttpl
cmp
cmp
add
xchg
scas
mov
mov
sub
dec
xchg
dec
mov
mov
aad
xor
jno
push
push
in
xor
pop
xchg
pop
in
lods
ret
and
sub
sbb
pop
jecxz,pn
aas
sub
adc
fmull
pop
add
rclb
fldenv
cli
pop
dec
jle
in
sarb
sbb
jae
pop
es
ja
sub
and
push
lret
xor
iret
fwait
xor
std
or
insb
std
nop
cmp
aaa
sbb
and
jae
dec
pop
lea
adc
cmpsl
push
xchg
test
rorl
dec
sub
out
xacquire
movsb
pop
add
ss
cmp
call
add
mov
outsb
sub
ja
dec
les
repz
and
mov
jae
xchg
push
mov
lret
outsb
imul
push
int
rorb
fwait
xchg
pop
dec
rorl
sbb
push
in
cli
sbb
xchg
and
sbb
hlt
jbe
sub
out
sbb
xchg
in
into
shr
addr16
test
nop
fiaddl
sub
insl
inc
xor
addr16
cltd
lahf
dec
into
xchg
int
fadd
xchg
popf
push
xchg
jecxz
inc
es
inc
movsb
loop
adc
cmpsl
pop
pop
xchg
jp
add
test
sahf
pop
inc
jge
mov
add
mov
xor
cmp
sub
xchg
jg
mov
add
jp
les
push
push
ds
xlat
fidivrs
push
xchg
mov
icebp
mov
push
out
cmpsb
cltd
xor
stos
lret
jne
mov
dec
pop
cwtl
test
adc
movsb
xor
clc
lret
jo
or
mov
out
es
mov
sbb
imul
jo
lock
jg
mov
daa
xor
jmp
rorl
jnp
xchg
mov
movsl
push
fwait
mov
fcoml
or
fistpl
js
scas
or
mov
add
xchg
lods
or
push
xchg
adc
mov
add
fs
cmp
fsubs
testl
lods
sbb
cs
inc
loop
mov
jp
mov
mov
jno
fdivs
daa
test
jo
inc
into
push
inc
add
cmp
cmp
cmc
adc
sbb
sub
out
push
dec
mov
mov
js
pop
clc
or
adcl
push
jle
and
mov
jge
cmp
sbb
push
je
dec
call
lods
sbb
jecxz
aam
scas
xchg
jmp
jg
jo
scas
popf
mov
test
out
lret
mov
inc
pop
cmp
imulb
mov
popa
sbb
data16
ljmp
stc
lcall
mov
jae
adc
jecxz
dec
repz
mov
mov
movsl
xlat
or
jns
pop
fisubl
add
adc
mov
shlb
dec
in
int3
push
pop
scas
push
call
jmp
inc
sub
clc
std
icebp
int3
rorb
scas
mov
or
mov
dec
shl
dec
inc
fsubl
out
jmp
addb
mov
call
adc
nop
dec
pushf
in
fbstp
pop
addr16
mov
cmc
je
inc
aam
rorl
add
je
repnz
ja
sbb
mov
mov
mov
cmpsb
sbb
adc
pop
popf
inc
data16
xchg
ss
jge
pusha
push
shld
cld
sbb
imul
push
or
fs
inc
insb
and
mov
pop
iret
mov
rorb
and
mov
inc
cmp
outsb
cmp
in
mov
data16
in
inc
push
rorb
dec
add
mov
out
pop
mov
cli
xchg
mov
dec
ss
lock
inc
in
mov
adc
rorl
push
decl
mov
in
inc
test
xor
pop
xchg
push
stos
xor
cmpsb
mov
or
push
cmp
clc
ss
xchg
mov
sub
mov
jb
stos
xor
pop
fsts
daa
jnp
addb
dec
mov
fs
sub
aaa
sbb
ret
or
push
pop
cmpl
inc
sub
jo
and
push
mov
test
dec
notb
jb
insb
mov
lcall
xchg
add
sahf
test
sub
lods
inc
sub
and
fildll
or
xchg
and
dec
lcall
sbb
xchg
lods
clc
mov
repnz
mov
aas
repnz
mov
mov
push
repz
or
arpl
push
jbe
fstpt
mov
and
sbb
xchg
ljmp
and
fisttps
jg
movsb
or
in
insl
leave
stos
aam
push
mov
lahf
cmp
inc
test
lret
and
outsl
push
or
ds
mov
push
es
dec
popf
mov
dec
out
mov
inc
rorb
ret
sbb
push
push
sbb
cmpsl
nop
lods
cmpsb
push
jne
xchg
enter
mul
lods
dec
pushf
cwtl
mov
adc
fnsave
adc
mov
es
lods
es
dec
fwait
jmp
orl
fdivs
call
add
or
orb
add
jle
jg
xchg
popa
xor
pop
jge
push
lahf
shrb
or
fs
sub
shll
push
dec
fcmovne
inc
or
sbb
filds
cmp
push
lods
movsl
aas
sahf
pusha
lcall
arpl
gs
xor
subl
repnz
xchg
imul
cmc
cmp
andl
xchg
mov
leave
div
shll
add
mov
xchg
cwtl
xor
jmp
cmpsb
orb
sub
sysret
arpl
in
sub
mov
cmpl
ret
mov
pop
test
scas
cld
popf
mov
jmp
adc
mov
testl
repz
loopne
xor
mov
loopne
lock
lods
xchg
add
adc
ftst
roll
movsl
lock
mov
mov
dec
mov
inc
aad
sbb
jo
adc
mov
mov
xor
cld
adc
nop
jg
inc
dec
lret
clc
sbb
int
ljmp
pop
and
or
or
jno
cmp
mov
jne
imul
fs
pop
cmp
lods
jne
mov
stc
fisttps
xchg
cli
jnp
add
repz
xlat
and
mov
call
jnp
adc
scas
fistl
ss
dec
pop
pop
mov
in
dec
icebp
lcall
push
shll
and
push
inc
rcrb
pop
mov
inc
and
jno
inc
inc
push
sub
xor
inc
lds
fwait
ljmp
xchg
sub
fildll
and
mov
mov
jo
sbb
or
and
mov
insl
ret
nop
and
jmp
rorb
mov
mov
sbb
push
pop
mov
out
loop
jns
fisttpl
fsubp
add
ja
scas
jl
adc
or
mov
cmpsl
dec
in
mov
or
and
sub
lods
mov
mov
mov
lods
pop
xorl
arpl
gs
clc
cmpl
scas
stos
cwtl
nop
sub
cltd
cmpsl
divb
movsb
mov
dec
push
push
add
xchg
xchg
push
iret
mov
and
les
dec
push
adc
fdivl
xchg
mov
sti
out
ret
fsubp
xchg
dec
adc
push
mov
mov
adc
gs
testl
push
loopne
fsubl
adc
cli
pop
sub
sub
push
mov
outsl
lods
jmp
stos
add
pop
scas
mov
out
lods
dec
aaa
or
xchg
xchg
mov
mov
dec
push
rolb
mull
inc
test
fdivs
das
mov
xchg
in
sub
fldcw
mov
fsubs
lahf
mov
fsqrt
sbb
xchg
andl
sub
jne
mov
or
mov
sahf
mov
pusha
sub
pop
fwait
out
and
xchg
ss
xor
or
xchg
into
call
fs
rclb
mov
std
jo
inc
fidivl
subb
push
xchg
inc
jb
test
add
sbb
in
sub
cmp
sbb
pushf
mov
xor
mov
xchg
imul
pop
fisttpll
out
sbb
jmp
pushf
xchg
out
out
popf
push
addl
mov
stos
push
pushf
mov
push
mov
mulb
cmpsb
lds
mov
andnps
pop
jne
test
inc
or
int3
lock
clc
lret
xor
hlt
stos
mov
sub
adc
sbb
js
ret
ss
bnd
jbe
push
pop
inc
stos
sub
add
jge
inc
push
sub
aam
sti
clc
mov
fs
adc
dec
fstp
shlb
pop
icebp
mov
pop
add
popf
fucomi
inc
in
xchg
mov
xlat
jnp
fildll
push
lret
stos
or
cmp
je
loop
int
xchg
or
or
pop
lahf
and
lahf
push
inc
sbb
and
pop
xor
test
pop
add
cmpsl
stc
xor
out
mov
cld
mov
test
xchg
ljmp
xor
sub
xchg
or
shlb
sub
jle
leave
dec
jb
addr16
aad
hlt
xor
add
push
cwtl
xor
and
repnz
push
xlat
in
mov
imul
inc
call
dec
and
jmp
jne
pop
jecxz
inc
lds
pushf
mov
das
outsl
in
ds
in
jmp
xchg
cltd
xor
call
rcrl
sbb
add
in
ds
aaa
les
push
fptan
out
addb
mov
push
into
mov
xor
pop
sbb
or
scas
ss
push
fimuls
sub
jbe
or
mov
mov
aas
mov
inc
imul
jge
cmp
roll
push
mov
push
pop
jle
enter
sbb
jmp
popa
out
shr
sub
std
xor
jle
sarl
or
test
and
aam
adc
fisubs
adc
and
sbb
push
pop
cs
add
les
pop
jge
cmp
sbb
inc
xor
addl
iret
addr16
clc
test
sti
push
fsubr
inc
xchg
xchg
push
mov
ds
mov
add
sbb
orb
add
jb
test
cltd
jnp
mov
test
dec
adc
int
hlt
inc
aas
mov
mov
pop
cmp
mov
xor
jno
js
mov
pop
jmp
ja
lds
jmp
in
pop
jbe
cmp
cli
sub
inc
repnz
xchg
mov
clc
lret
pop
jle
jns
dec
mov
jnp
rol
out
inc
push
xchg
pusha
hlt
sub
cld
aas
sbb
push
jg
popa
push
jge
roll
in
sub
adcl
sbb
or
loope
adc
inc
pop
dec
in
and
fcomps
cmp
mov
jg
fistps
lods
out
mov
dec
xchg
mov
and
adc
sbb
jo
enter
xor
jb
cwtl
dec
xor
scas
xlat
ret
mov
subb
jae
in
inc
mov
nop
pop
es
or
xor
fsubrl
inc
pop
test
pop
sub
jno
je
push
sbb
pop
call
in
adc
iret
clc
pop
push
jl
sbb
or
mov
gs
in
or
arpl
repnz
sbb
ja
sarl
mov
jns
jne
or
inc
mov
inc
xlat
adc
push
cmp
mov
pop
xlat
jae
add
dec
rcrb
int
dec
inc
or
xor
rcrl
aaa
jl
movsl
clc
pop
fucomp
jle
xor
dec
fistpll
dec
ret
mov
pop
aad
lds
icebp
adc
lock
mov
jle
jne
push
ret
aas
sbb
push
push
and
xchg
xchg
jno
mov
push
xchg
rcll
mov
or
cmc
sbb
jbe
sbb
repnz
dec
test
cmpsb
add
shl
scas
push
add
mov
dec
test
mov
push
inc
mov
call
ds
call
jp,pt
addr16
mov
insl
cld
rorb
jecxz
mov
pushf
aaa
cld
addr16
push
leave
mov
jns
idiv
sub
addr16
aas
xchg
or
add
subb
push
pop
dec
test
dec
sarb
or
clc
cwtl
test
jmp
daa
dec
pushf
mov
sub
hlt
scas
mov
les
inc
push
in
imul
push
mov
mov
aad
stos
mov
imul
mov
loope
pop
or
jno
shl
add
jmp
sbb
lock
and
mov
mov
mov
aam
out
aas
test
mov
stos
loope
xchg
inc
out
mov
dec
push
xchg
cld
xor
dec
int
and
cmp
xchg
int3
mov
inc
jbe
outsb
pushf
je
outsl
addl
fcmovbe
dec
out
fstps
mov
cmp
mov
push
adc
in
or
cwtl
cmp
pop
fstpl
call
pushf
imul
divl
cmpsl
mov
xor
mov
add
dec
dec
sbb
insb
pop
pop
adc
sub
pop
jbe
aas
xchg
aas
dec
cltd
ret
mov
loopne
fimull
cmp
sub
fildll
iret
pop
or
in
mov
push
pop
push
or
or
xchg
in
pop
or
cmp
cltd
jmp
cwtl
pop
cs
cld
imul
or
pop
mov
jne
jno
mov
es
add
fidivrl
dec
ljmp
pop
ds
enter
pop
mov
inc
inc
xchg
pop
lret
andb
mov
out
mov
ss
stos
add
push
outsl
lcall
addl
test
lcall
cmpsb
gs
pop
jae
loope
out
cs
xchg
sub
aam
cmp
out
fimull
imul
and
jecxz
in
xlat
in
add
push
loopne
push
lea
inc
adc
dec
hlt
outsb
xchg
and
mov
jmp
mov
push
mov
jp
cmp
mov
mov
xlat
push
in
repnz
stc
rcr
insb
ja
xchg
push
clc
dec
mov
push
dec
xchg
cmpsb
xor
inc
fistl
xchg
mov
mov
lcall
in
mov
scas
adc
cli
cld
add
jle
xor
and
data16
push
jbe
std
sbb
lahf
shll
sbb
jae
into
mov
fisttpll
out
notb
scas
push
mov
lock
jp
add
adc
jns
jl
mov
add
insl
jg
cmp
sub
xchg
icebp
adc
test
or
mov
sbb
lock
int
push
std
jno
jbe
fimull
or
or
or
adc
mov
popf
lods
pop
rorb
sahf
pop
mov
mov
adc
xchg
das
mov
adc
push
ja
mov
inc
in
popa
in
into
sbbl
ret
sbb
push
bound
fcoml
je
xor
dec
imul
cwtl
mov
cmp
stos
ljmp
jecxz
das
or
push
adcb
dec
mov
fldl
sbb
fstps
popf
fisttpll
push
sbb
insb
add
aaa
push
mov
inc
lret
das
sub
stos
dec
mov
pop
aad
mov
movsb
imul
or
rorl
and
hlt
add
add
rclb
xlat
push
dec
lret
push
mov
scas
fnsave
loop
add
push
mov
sti
mov
mov
jmp
bound
cltd
lods
xor
sbb
inc
adc
dec
cli
inc
pusha
mov
add
insl
push
xor
sub
push
pop
mov
ficoms
mov
sbb
cmpsb
imull
scas
ljmp
xor
cmc
repz
pop
cmpsb
aaa
loop
aam
lods
adc
cmpsb
jo
mov
sub
jg
fcompl
xchg
bswap
push
jecxz
or
jns
js
subl
mov
insb
jb
bnd
dec
inc
dec
imul
xor
push
push
movsl
sarb
xchg
and
inc
imul
shll
adcl
add
call
and
sbb
cwtl
xchg
cmpsl
inc
clc
clc
jb
enter
xchg
insb
jg
mov
les
lcall
jmp
mov
sub
scas
sahf
push
jge
sarl
pop
scas
stc
mov
movsb
pusha
hlt
pop
inc
mov
shl
repnz
scas
mov
mov
ljmp
jne
dec
ret
negb
icebp
or
sarb
add
fcomi
call
nop
jno
insl
imul
or
aam
fs
push
and
cmpsl
insl
sub
ja
cmc
cmp
test
inc
xor
cmp
add
or
fcmovnb
and
pop
cmc
push
pop
pop
adc
cmpsb
icebp
adc
hlt
inc
cmpsb
mov
aaa
fmuls
sbb
or
leave
pop
adc
in
mov
ds
mov
lock
int
xor
dec
jae
popl
fstl
push
mov
shrl
aad
ljmp
ret
xor
add
sbb
add
mov
lock
cmp
mov
movsb
mov
lcall
fildll
or
fdivs
cltd
repnz
lock
jmp
pushl
mov
fwait
push
rcll
loop
mov
mov
and
gs
cmp
pop
pusha
test
movsb
gs
push
cmpsb
pop
call
adc
cmpsl
push
test
xor
cwtl
ja
lret
sub
test
xchg
ljmp
or
xor
ficompl
pop
mov
xchg
fs
jno
mov
popa
jl
scas
scas
bound
out
enter
ret
mov
cli
jmp
mov
fadd
jo
imul
repnz
jb
sub
jl
jmp
cmp
cmp
enter
mov
cmp
mov
jg
jecxz
scas
outsb
pop
sbb
shrl
ljmp
in
xor
or
mov
push
add
or
push
inc
and
out
jle
xchg
jbe
jle
repz
add
or
dec
mov
mov
jbe
sahf
mov
in
cmpsb
mov
lahf
scas
adc
jmp
jge
imul
mov
push
out
jo
xorl
test
mov
mov
pop
jo
mov
inc
jmp
repz
sub
pop
xchg
pop
pop
fstpt
add
mov
ficompl
xor
outsb
jge
cmp
aad
loopne
insl
sti
mov
xchg
bound
add
ja
sub
and
push
fistpll
dec
add
mov
sahf
dec
lret
xor
shll
dec
pinsrw
mov
enter
repnz
ljmp
and
ud2
sahf
ja
test
mov
dec
lret
movsb
in
sub
sbb
popa
dec
inc
inc
adc
outsb
adc
in
xchg
leave
popf
rclb
movsb
inc
mov
or
mov
jo
aaa
xchg
ljmp
add
pop
hlt
mov
mov
out
ja
pop
jnp
cmc
test
mov
fisubrl
pusha
inc
fwait
mov
mov
loop
cwtl
cwtl
clc
sbb
xchg
dec
add
xchg
dec
popf
cmp
push
xchg
jbe
mov
pusha
sahf
or
jne
test
cmp
pop
and
push
imul
jg
rcrl
mov
mov
stos
xchg
xor
sub
int
hlt
cld
xlat
lret
fdivrl
sbb
out
push
dec
mov
mov
sti
stos
les
mov
pop
push
hlt
adc
cmp
cmp
inc
clc
pusha
arpl
xchg
xor
mov
cmc
mov
push
gs
out
pop
fimuls
call
push
sti
and
bound
sbb
jo
mov
mov
push
loopne
and
inc
fs
sbb
xchg
jae
xor
in
pop
enter
cld
hlt
movsl
adc
push
push
cltd
outsb
cld
aas
cmp
in
mov
xor
mov
jle
xchg
jns
xchg
jnp
cmc
xchg
or
test
sbb
movsl
lods
jecxz
mov
fs
call
lret
inc
add
mov
xorl
xorl
jae
or
jle
leave
inc
sti
mov
sbb
mov
test
mov
movsb
push
aam
mov
cltd
cmc
movsl
sbbl
dec
sbb
push
sub
shlb
int
testb
or
sahf
aam
orb
icebp
leave
xor
add
shrb
mov
jge
mov
xchg
in
repz
and
sbb
and
dec
sbb
lret
loopne
jmp
rolb
loope
jbe
push
jne
mov
mov
add
mov
adc
xchg
push
push
jno
xchg
mov
out
xchg
gs
arpl
pushf
lret
js
dec
xor
push
mov
into
mov
cmpb
adc
xor
push
inc
lcall
movsb
xor
mov
jmp
push
lret
inc
or
and
xlat
daa
fistpll
mov
movsb
mov
dec
jno
and
pop
test
cmp
out
jne
xchg
lods
inc
rorb
bound
xchg
cmp
or
repnz
lods
mov
hlt
test
cmp
ficoml
jge
dec
cmp
inc
repz
pushf
jnp
jg
ret
loopne
mov
jmp
xor
mov
addr16
jp
sub
sbb
addr16
adc
lock
fcomp
cmp
sbb
xor
jle
xchg
movsl
fs
push
je
mov
jno
add
mov
mov
pop
popf
fs
cmp
pop
sub
out
mov
ror
xorb
xor
aas
sahf
mov
cmpsl
jmp
add
data16
sar
and
and
in
push
cmp
pushf
fdivl
jae
cmc
adc
mov
mov
outsl
sahf
jae
pushf
lret
mov
in
mov
call
in
fs
xor
xlat
jnp
mov
fucom
pop
lret
pusha
mov
cli
enter
test
ror
imul
push
lods
ret
sahf
adc
ret
adc
dec
mov
xchg
jle
int
xlat
cs
sub
outsb
dec
lret
mov
xchg
push
mov
out
adc
popl
fucomp
stc
test
imul
push
in
scas
ljmp
dec
lret
hlt
mov
fidivrl
ja
mov
lcall
sti
lret
cmpsl
and
mov
pop
lock
xor
scas
mov
jp
cmp
ljmp
movsl
mov
dec
lretw
pop
pop
jle
jno
add
pop
jne
push
loop
aam
in
stc
test
fmull
mov
cmc
mov
mov
cmp
cld
fstpt
dec
mov
pop
sub
xor
out
imul
rclb
inc
popf
jg
stc
es
imulb
mov
add
sbb
cmp
mov
lahf
xlat
mov
sahf
cli
fsubp
jae
outsl
and
pop
pushf
in
adc
push
out
fldl
mov
ds
cmp
mov
mov
mov
in
xor
jne
fs
pop
loope
cmc
orb
test
push
push
xorl
testb
sbb
ss
pushf
mov
push
xor
inc
jmp
push
jns
data16
repnz
imul
gs
pop
and
inc
daa
fs
mov
and
xor
mov
jge
cli
add
leave
mov
push
sarl
fs
xor
add
lock
cld
movsb
les
push
adc
out
insb
ds
loopne
jo
fsubrl
sub
ror
and
scas
dec
mov
push
push
mov
movsl
stc
pop
call
sbb
mov
test
addl
sti
pop
dec
mov
xor
xchg
mov
pop
outsb
insb
push
rcrl
sub
out
jne
ljmp
mov
cli
pop
mov
lds
scas
ret
outsl
jg
hlt
push
stc
cmpl
jbe
jle
clc
loop
lods
andl
out
fisubl
jl
ficoms
jmp
jg
ljmp
dec
cld
lods
push
or
or
inc
out
pushf
dec
pop
sbb
cmpsl
and
or
push
rcrb
sub
out
rorl
sub
jmp
in
fwait
cmpsl
bound
addr16
loop
lret
add
inc
adc
inc
sub
aaa
imul
push
jl
dec
mov
sub
cld
arpl
int3
xchg
daa
or
lcall
adc
xlat
push
arpl
rolb
xchg
dec
mov
pop
push
ds
scas
test
imulb
jo
jae
test
pop
mov
fcoms
inc
int
push
pop
outsb
and
adc
mov
inc
aaa
add
rcrb
ret
test
ds
aam
cmp
dec
popa
stc
mov
lcall
pop
adc
outsb
mov
cmpsb
and
repnz
aam
test
dec
lcall
or
movsb
sbb
arpl
loopne
mov
jae
push
mov
outsb
sarl
inc
pop
sbb
adc
imul
or
dec
inc
xor
inc
inc
add
or
ret
adc
in
dec
and
std
inc
in
jg
xor
cld
mov
add
pop
ss
and
scas
out
imul
jecxz
inc
out
mov
xchg
dec
fsts
jle
xor
mov
mov
push
xchg
inc
dec
inc
inc
pop
lods
outsb
push
inc
stos
sub
fists
xchg
adc
xor
test
or
sub
cmp
pop
rolb
sbb
jg
lea
lods
lahf
xorl
inc
rclb
fcomp
in
adc
xor
or
mov
das
or
lcall
add
je
sahf
arpl
mov
jp
data16
sbb
sti
cmp
push
sub
adc
xor
jne
sub
push
movsb
in
or
and
insl
xor
lret
xchg
in
cmp
popf
jl
dec
pop
aam
das
cmp
lods
and
aad
pop
ss
iret
pop
test
xlat
in
or
mul
lcall
sub
std
pop
out
mov
fdivrs
cmp
pop
cmpsl
sub
and
pop
in
stc
and
js
loop
out
adc
jg
add
push
push
or
cltd
or
je
push
mov
fbld
pop
fcompl
mov
call
sti
cmp
aaa
xchg
adc
push
movsl
mov
aaa
das
xlat
jns
test
loop
in
and
jno
cmp
jl
loope
leave
sub
cwtl
call
stos
test
fsubrl
mulb
lahf
gs
push
stc
fwait
xchg
mov
inc
add
out
frstor
or
ss
loop
xchg
fstl
or
sub
push
jo
push
mov
cmpsl
pop
jl
xchg
fst
xchg
imul
push
lock
add
jmp
pushl
push
enter
pop
clc
or
or
xor
inc
dec
and
test
cs
jl
test
subb
lods
aad
pop
pop
sub
iret
dec
fsubrs
notl
test
mov
cmp
stos
add
mov
push
inc
adc
mov
fs
out
je
push
or
ret
stos
cmpl
mov
pop
add
lret
cmova
push
and
or
push
cs
lods
cmpsl
cs
mov
adc
push
push
mov
mov
in
fisttps
pushl
stos
or
inc
movsb
lret
add
repz
mov
shll
ss
mov
xor
pop
lods
xchg
adc
cmp
mov
pushf
fnsave
or
pushf
insl
dec
and
stc
push
sahf
jno
leave
cmp
sbb
push
jmp
into
movsl
xor
pop
loop
out
mov
test
pop
stc
pusha
call
xchg
rclb
ljmp
mov
subl
or
sbb
fcoms
or
push
xchg
mov
movsb
cld
ficompl
into
jns
mov
pop
mov
pop
push
hlt
stc
insb
push
push
cmp
add
inc
xor
sub
inc
negl
outsl
out
xlat
loopne
idivl
add
addr16
sub
int
dec
daa
sub
loopne
aad
int3
ds
rol
jne
jne
ja
or
or
xor
sbb
mov
sub
mov
fcoml
dec
aaa
mov
push
in
pop
or
add
aam
ss
and
ds
push
vmovdqu
lret
mov
mov
mov
jne
push
divb
aas
mov
outsl
add
test
mov
jg
lret
stos
and
fs
sbb
lahf
loope
xor
jne
popf
decl
pushf
xchg
loop
fwait
int
stos
in
popa
pop
mov
mov
pop
jo
and
jne
pop
fnstcw
mov
icebp
mov
movsb
sbb
shlb
pop
inc
mov
fwait
dec
dec
push
pop
jae
mov
hlt
mov
hlt
js
sbb
ficoml
scas
add
scas
cmp
sbb
push
arpl
imul
out
jno
sub
idivl
aaa
pop
test
and
and
mov
jle
cmpsb
fcom
popf
lret
push
xor
cmp
lock
xor
pop
push
dec
or
clc
mov
hlt
cmp
fbld
push
int
scas
and
sub
out
call
popf
push
cs
stos
cmp
mov
out
push
cmp
lods
pushf
inc
push
and
and
xorl
cmpsl
adc
push
aas
cmpsl
mov
pop
push
cmp
mov
fmulp
xchg
push
sti
ud1
and
inc
push
inc
hlt
stos
jp
jmp
sbb
mov
aad
add
or
negb
mov
dec
push
push
addr16
push
ret
push
or
push
mov
and
sbb
hlt
sahf
xor
fildll
lcall
stc
arpl
rcrb
lcall
imull
jae
and
push
and
jge
cmp
push
jno
jae
dec
xchg
aad
pop
loope
addr16
xlat
sub
faddl
pop
mov
push
mov
fcoml
inc
cld
and
xlat
incb
and
int3
or
jl
push
jno
xchg
lcall
mov
in
int3
jg
push
int3
mov
int3
inc
jno
cs
sub
insb
cmp
fwait
inc
sbb
fnstsw
xlat
outsl
xchg
cmpsb
jle
loopne
mov
sbb
imul
iret
test
pop
imul
cmp
xchg
adc
sub
and
add
das
and
mov
lahf
cmp
sub
movsl
inc
mov
inc
mov
jecxz
aad
repnz
dec
neg
fwait
pop
push
adc
andl
iret
mov
hlt
mov
addr16
sub
repnz
in
sbb
sbb
cmp
push
rorl
dec
mov
movsl
fnsave
shrl
adc
xchg
xchg
mov
je
ss
mov
xor
and
jl
imul
rcr
movsb
cmp
push
popf
les
fs
push
adc
sub
mov
jae
in
das
push
mov
push
outsl
push
cmp
cwtl
int
stos
mov
cmp
dec
sub
repz
sbb
or
stc
decl
add
outsb
cwtl
in
stc
les
lcall
dec
inc
icebp
mov
sahf
push
sbb
cmp
sub
or
xchg
outsb
or
insb
in
lea
data16
andl
push
repz
ss
imul
add
pop
bound
incl
fcompl
cld
fadds
jp
sbb
or
xchg
mov
dec
inc
or
push
or
push
xor
jl
jno
ret
fnstsw
ficoml
jns
jge
cltd
in
adc
sbbl
mov
pusha
mov
xlat
rolb
out
adc
negl
adc
rorb
fs
out
icebp
cwtl
test
je
cmpsl
dec
and
aaa
shlb
mov
fdivr
and
adc
les
add
cmp
and
xchg
mov
sbb
or
test
negl
cmpsl
push
or
frstor
das
lods
cmp
mov
sub
adc
das
inc
push
pop
rclb
in
repz
inc
das
mov
pop
sub
mov
push
lods
fdiv
push
push
scas
mov
insl
inc
sbb
xchg
jp
setne
test
jle
negb
and
jno
push
cmp
lret
push
int3
jns
and
scas
rcrb
push
pop
cmp
jle
mov
dec
les
mov
cld
lea
scas
mov
hlt
cli
loop
dec
test
ret
mov
mov
out
xchg
cs
clc
cmc
insb
je
das
out
mov
xor
sbb
loopne
mov
mov
xor
jg,pn
xchg
pop
icebp
leave
outsl
or
fmulp
cs
cmc
les
aam
fstl
in
int
imul
xchg
cmp
inc
inc
xor
mov
and
lock
inc
sbb
in
mov
aaa
imull
mov
dec
and
rcl
mov
adc
das
daa
insl
data16
jmp
cmp
pop
je
mov
shr
subl
cmpsl
or
or
es
sub
mov
popa
cwtl
and
or
loopne
adcb
daa
inc
push
movsl
unpcklps
push
sub
icebp
or
in
mov
xor
popa
push
xor
icebp
int3
iret
push
or
mov
hlt
push
fists
out
cli
or
mov
in
mov
lock
enter
lea
sbb
cmp
xchg
les
loop
test
fs
out
inc
jge
sbb
sbb
aaa
repz
repz
das
xchg
xor
pop
popa
and
dec
and
mov
nop
into
or
roll
mov
rolb
xchg
jns
dec
mov
clc
pop
jl
mov
xchg
mov
and
inc
jns
shrb
mov
call
xchg
jb
or
or
je
pushf
stos
push
push
adc
mov
mov
push
add
mov
ss
pusha
xorb
xlat
push
push
gs
shlb
outsl
dec
jae
cli
pushf
mov
imul
sub
mov
in
in
lea
pop
aam
fs
je
sbb
dec
nop
jns
xchg
nop
dec
sbb
push
jne
add
push
sub
pushf
ljmp
fstpt
es
sbb
flds
jle
daa
add
pop
jmp
loopne
cs
adcb
popf
aaa
fadds
daa
inc
dec
dec
xchg
adc
add
push
sbb
mov
rolb
sub
clc
push
sub
and
jb
sub
test
std
jae
inc
cmp
mov
mov
repnz
lret
xchg
call
mov
push
dec
inc
ljmp
shlb
xor
add
stc
dec
ljmp
cmp
pop
jle
out
cmp
daa
gs
sub
push
rorl
mov
inc
test
add
pop
fimuls
rorl
lret
lods
jle
icebp
sub
xor
jno
inc
out
clc
sahf
mov
mov
push
ret
enter
mov
mov
insl
xchg
loop
sbb
movsl
cmp
aas
cmpl
test
jle
and
rcll
lds
leave
mov
or
loopne
scas
and
jne
inc
sbb
std
adc
push
insl
or
test
push
pop
inc
mov
int3
mov
cmp
xchg
stos
jne
fcoms
or
pop
mov
bound
test
push
lahf
jmp
mov
stc
ds
repnz
push
js
lret
or
cmc
fcmovne
sbb
loop
js
push
cli
xchg
test
pop
mov
push
fs
pop
jbe
mov
sbb
pop
jl
call
insb
repnz
ficompl
adc
add
mov
pop
xor
sbb
popf
xchg
andl
pop
repnz
sub
adc
jnp
call
add
sbb
mov
sub
mov
or
shrl
jp
pop
inc
push
sub
stc
jb
clc
pop
mov
repz
push
repnz
sub
adc
and
addr16
mov
shr
pop
jno
cmpl
xchg
aas
mov
or
outsl
mov
mov
movsb
ja
sbbl
jmp
xlat
jecxz
cmp
cs
pop
testl
addr16
mov
xchg
in
add
in
fdivrp
jp
call
jo
or
pop
shlb
mov
xchg
mov
das
leave
or
and
enter
iret
adc
or
ja
mov
fcompl
cmc
push
xor
shlb
insl
pop
imul
lahf
fistpll
out
lea
and
and
and
inc
and
fmuls
pop
cmpsb
xchg
mov
push
mov
xor
pop
cmp
lcall
jno
sbb
jle
bswap
jns
cmp
in
mov
cltd
test
lods
dec
adc
sbb
mov
mov
sub
jbe
lock
loop
mov
jns
fimuls
mov
jnp
or
inc
or
push
arpl
rcrl
and
mov
lret
into
aam
push
arpl
adcl
cmpsl
xchg
mov
in
jns
xchg
test
in
xor
int3
inc
out
pop
push
insl
in
pop
sti
or
jecxz
fadd
inc
adc
mov
xor
clc
ljmp
push
cmp
dec
xchg
ja
mov
shll
imul
xchg
outsl
and
cmp
addb
out
add
or
int3
fwait
add
arpl
dec
mov
daa
mov
lods
imul
jp
cwtl
popf
xchg
adc
xchg
dec
out
addl
fsubrs
mov
std
fsubrl
jae
or
shl
or
imul
fimull
sbb
dec
add
adc
xor
cmpsb
cmp
or
jae
xchg
mov
cmp
pop
arpl
sarb
fwait
lods
shl
push
jns
mov
in
cmp
inc
push
mov
and
pop
jno
sub
jnp
mov
push
mov
ja,pn
outsl
xchg
mov
ret
inc
dec
and
shrb
sub
mov
xor
repnz
cmp
pop
stc
pop
xchg
and
pop
addr16
xor
lods
lret
test
xchg
jnp,pt
imul
pop
js
mov
jmp
cs
add
or
xor
fwait
mov
insb
dec
pusha
cmp
pop
sub
cmp
lret
sahf
cmpsl
outsl
mov
mov
jne
insl
mov
push
pop
pop
cmp
xor
repz
and
cmp
fnstsw
cmpl
js
shrl
cli
push
mov
or
push
mov
js
lods
mov
mov
xor
push
outsb
testb
jns
dec
push
rcll
push
and
into
addl
mov
sbb
fnstsw
push
add
leave
int
inc
repnz
xchg
rcl
add
repz
ret
pop
ds
js
pop
lret
pop
int3
jl
sub
jae
dec
jns
inc
and
leave
int3
punpcklbw
mov
ljmp
mov
adc
stos
xlat
dec
fs
repnz
in
push
lret
mov
int3
lock
jmp
sbb
cli
xor
mov
xchg
jbe
sub
pop
pop
jns
jl
mov
jno
mov
jo
dec
fadd
aam
mov
arpl
mov
test
nop
cmp
adc
test
loopne
cmp
mov
lcall
push
jp
cmp
mov
hlt
andps
test
xor
xor
xchg
fildl
mull
cmpsl
xor
sub
ret
pop
in
sahf
mov
popl
adc
pop
cwtl
push
mov
jns
popf
adcl
adc
dec
aad
inc
imul
scas
jge
jbe
push
fnstenv
ret
cmp
out
pop
shrl
adc
or
out
jp
sbb
pop
or
jmp
inc
mov
ja
jae,pt
pop
push
xchg
jg
aas
mov
insl
hlt
push
adc
jmp
inc
sub
mov
fs
mov
fisubrs
xchg
xor
stos
pop
out
and
xchg
and
jbe
or
lods
dec
and
data16
test
jge
dec
aam
stc
in
and
sbb
inc
sahf
jno
ja
out
jno
xlat
call
inc
jmp
je
mov
enter
push
das
pushf
gs
enter
mov
in
inc
js
jae
cmp
aas
shlb
aad
mov
cwtl
lods
inc
cmp
or
stos
mov
repnz
inc
std
imul
sbb
out
inc
test
jl
push
xchg
sbb
ret
cmp
adc
enter
and
lods
js
in
int3
jb
pop
loop
out
or
aam
push
imul
cld
out
out
add
dec
pop
fisttps
jecxz
loop
nop
mov
mov
mov
hlt
cmp
mov
data16
in
push
ret
lods
fstps
cwtl
jnp
xchg
movsl
pop
cmp
in
sub
cli
cmp
or
xchg
in
mov
xor
sub
add
and
ret
push
xor
cmp
sarb
out
add
pop
shrl
insb
mov
dec
inc
pslld
or
hlt
sub
into
cvtdq2ps
dec
sbb
push
inc
ds
jp
arpl
adc
ficomps
xchg
aas
sbb
out
push
shrb
dec
jbe
repnz
out
frstor
mov
cmp
xchg
adc
lock
popf
dec
pop
pop
test
jge
jmp
test
mov
mov
hlt
sbb
hlt
inc
add
jbe
push
or
mov
xor
mov
popf
pusha
push
movsb
mov
mov
loop
aaa
push
aaa
daa
lahf
adc
xchg
jbe
mov
cwtl
jmp
mov
and
loop
scas
xchg
inc
les
push
movsl
movsl
jne
je
aas
cmpsb
xchg
arpl
mov
sub
push
in
es
hlt
mov
pop
leave
cli
loope
mov
push
sub
sub
mov
lods
cltd
or
lcall
movsl
pop
mov
fwait
jmp
inc
sbb
sub
jb
orl
adc
xor
clc
mov
lods
push
pop
das
sub
push
aad
or
mov
aad
ja
jbe
dec
mov
xchg
pop
rorb
mov
or
lods
add
mov
jl
fdivl
or
rorb
loope
or
out
cmp
xor
mov
push
adc
push
stc
jle
test
mov
xchg
call
cld
xchg
gs
or
aas
scas
cmc
cld
mov
sbb
xchg
mov
and
stos
lods
idiv
mov
pop
movsb
pop
std
and
outsb
sbb
orb
fcompl
xlat
sarl
or
lret
in
gs
pop
cmp
js
xor
sbb
cmpsb
xchg
pop
movsl
jae
xchg
lret
subl
inc
adc
push
imul
shlb
movsl
std
mov
pop
lret
adc
sbb
dec
mov
jb
cmp
fucom
inc
mov
jo,pn
adc
out
inc
mov
pop
or
inc
or
or
rorb
or
sub
dec
mov
rcr
movsb
xchg
movsb
xchg
imul
clc
stos
adc
pop
and
mov
shll
sbbl
ss
jmp
lods
cmpsl
hlt
stos
pop
stos
popf
mov
cmp
mov
jo
pop
sub
and
lahf
addr16
xchg
ffreep
loop
and
not
sub
inc
add
fldenv
mov
mov
cmp
mov
push
rcrl
and
sbb
sub
jns
fcomps
cwtl
jecxz
imul
xor
cmc
push
push
xor
lahf
idivb
xchg
imul
stc
push
push
mov
dec
mov
cmp
sarl
mov
sub
dec
pop
movsl
mov
cli
cmpsl
arpl
roll
std
unpcklps
cmpsb
jp
and
sahf
add
mov
push
repnz
or
pop
jmp
mov
push
push
negl
fsubp
pop
in
leave
lock
pop
rol
and
xchg
pop
or
mov
stos
and
daa
addr16
movsb
dec
fnstsw
jmp
clc
mov
fnstcw
pushf
mov
or
pushl
push
inc
scas
movsb
pop
es
dec
jmp
leave
mov
mov
mov
lods
shld
daa
inc
fcompl
mov
pop
mov
nop
scas
mov
mov
pop
sbb
mov
ss
sahf
ds
ret
push
pop
insl
loop
adc
cmp
insb
lret
cwtl
and
loope
fs
jnp
sarl
mov
push
mov
jmp
outsb
sub
mov
push
dec
ds
and
adc
push
lahf
push
daa
sbb
clc
clc
push
imul
fisttps
fs
dec
pop
mov
mov
jmp
pop
mov
and
or
sbb
into
push
leave
xor
push
dec
pusha
cmc
data16
pop
sbb
cmpsl
push
pop
and
shll
test
or
fldenv
jmp
fidivrs
inc
mov
call
int3
pop
mov
mov
fcmovu
dec
push
ja
fnop
into
and
pop
out
jp
test
add
nop
or
cmp
lea
std
int3
int
inc
int3
adc
and
mov
loop
push
cwtl
movsl
ss
test
rclb
arpl
add
jbe
sub
out
adc
push
lret
gs
sbb
cmpsb
insl
cmpsl
andb
jl
scas
push
jnp
pop
aad
sub
mov
xchg
movsb
add
movsb
xlat
inc
and
mov
addr16
cld
xchg
pop
sub
sbbl
mov
mov
mov
repz
cs
ljmp
push
xchg
xchg
lahf
movsl
pop
fdivr
ret
cmp
sbb
stos
mov
in
cmp
call
popa
enter
mov
lcall
xor
insl
push
inc
push
pushf
xchg
and
inc
inc
in
sub
lahf
loopne
insl
fsubs
mov
pop
push
mov
and
inc
je
dec
inc
adc
addr16
int
movsl
push
inc
aas
xor
push
cmpsb
and
iret
out
fdivl
mov
lret
mov
xchg
sbbb
mov
push
dec
sar
inc
cmc
stc
adc
and
fs
xor
inc
dec
movsb
stos
in
xorl
adc
mov
pop
xor
montmul
cmpsb
add
push
sbb
ficoml
stos
ljmp
adcl
insb
jnp
mov
adc
ret
jnp
aas
jb
out
nop
push
lock
les
pop
sub
sbb
or
mov
push
clc
jp
push
sbb
mov
push
mov
sub
lods
les
popa
orb
mov
fstl
xchg
sahf
lock
mov
mulb
or
and
xor
cmp
lods
inc
hlt
jno
xor
pop
push
test
mov
test
pop
xor
int3
sub
mov
cmpsb
clc
fsubp
sub
sbb
cld
mov
xchg
or
adc
test
in
testl
inc
mov
lret
and
sti
jo
pop
je
xchg
insl
sub
repz
mov
xchg
cltd
iret
movb
cmp
dec
push
mov
jne
stos
dec
and
leave
imul
ret
and
or
fsubs
out
sbb
js
xor
jge
xchg
push
in
insb
das
out
out
cld
adc
add
imul
dec
jle
mov
xlat
mov
sahf
outsb
jmp
stos
rorb
mov
mov
push
mov
pushf
rorb
pop
adcb
cmp
inc
push
addr16
cmp
in
mov
cmp
fdivrp
cs
in
and
dec
daa
lahf
scas
sbb
jae
inc
push
add
cmp
dec
sbb
pop
jae
xchg
sbb
rolb
mov
cwtl
pop
pop
jo
add
or
adc
addr16
push
push
int3
dec
cmp
adc
and
pop
jl
jmp
push
fcompl
movsl
push
inc
nop
sahf
outsl
into
enter
cmpsb
movsb
pop
lahf
xchg
or
jno
or
mov
xor
test
dec
jmp
add
fsqrt
xor
pusha
xchg
push
out
pop
sbb
cmpsl
and
xchg
pop
shl
push
push
mov
stos
sbb
mov
in
xchg
xchg
push
stos
in
inc
leave
push
ss
push
lds
lcall
cltd
and
mov
leave
js
mov
xchg
clc
aas
aas
lahf
icebp
add
fwait
pop
xor
pop
pop
jg
xchg
cs
loopne
push
cmp
clc
adc
and
push
dec
mov
push
adc
mov
pushf
mov
idivb
jecxz
sub
jl,pt
in
push
adcl
add
out
ljmp
repz
jge
jnp
dec
addb
sar
sbb
stos
fldcw
mov
or
mov
sub
sbb
sbb
jns
push
sbb
dec
and
shll
mov
loopne
push
repz
adc
out
inc
maxps
jmp
jbe
lds
cltd
mov
jl
or
add
mov
mov
pop
inc
mov
inc
xor
push
negb
dec
scas
xor
pop
rorl
popa
je
outsl
sbb
cmp
stc
les
dec
xlat
in
xor
add
je
les
jnp
lods
imull
fildl
ror
daa
notb
and
xchg
sbb
mov
push
ficompl
jle
pushf
and
adc
incl
inc
cmp
sbb
jecxz
testb
cmpsl
lods
bound
lods
aas
push
loopne
shr
jecxz
xor
out
dec
mov
push
inc
mov
add
xor
stos
dec
popa
ds
mov
loopne
ja
xchg
clc
inc
inc
shrb
jno
mov
add
adc
mov
and
mov
fnstsw
adc
xchg
jmp
repnz
jecxz
xchg
lea
mov
cmp
add
push
or
ret
cld
mov
pop
mov
sahf
into
mov
pop
pop
inc
or
out
or
repnz
aad
shl
bound
ljmp
inc
jge
ds
out
int3
inc
lock
pop
push
lcall
setne
lret
into
xor
mov
daa
cmp
shll
add
movsl
negl
push
and
xlat
cmc
ljmp
mov
test
pop
jnp
xor
cmp
add
mov
in
mull
and
mov
ret
fwait
push
repz
bound
ss
ljmp
and
test
std
jl
ret
cmp
mov
mov
jne
ret
and
pop
in
or
jne
cmp
push
jb
loop
shlb
adc
jge
mov
popa
mov
add
iret
dec
mov
xchg
cli
lea
jnp
and
in
sarb
test
scas
pop
add
lret
pushf
dec
adc
push
call
adc
inc
test
mov
jle
dec
sbb
or
pop
mov
mov
sub
shl
push
nop
ret
jns
xchg
sub
fsub
neg
or
sub
inc
loopne
popa
adc
testl
cld
jbe
popa
outsl
cld
lahf
movsl
jns
adc
sub
mov
outsb
lret
js
in
dec
int3
lock
add
push
lret
stos
jmp
incl
push
pop
ljmp
daa
mov
stos
jno
cmp
cmpsl
mov
shl
les
lret
stos
lret
call
lcall
mov
jl
shrb
fdivr
mov
lret
mov
cmp
adc
jg
pop
xor
sbb
icebp
insl
sbb
in
mull
mov
adc
sub
test
mov
js
repnz
cmp
lods
mov
dec
xchg
fimuls
test
fcompl
out
xchg
pop
dec
lods
push
xor
inc
cmp
mov
popa
cmpsb
aas
out
cltd
rclb
call
inc
in
and
lock
aad
dec
pop
es
bound
dec
cmp
repnz
mov
or
sub
pop
xor
mov
push
sub
jmp
mov
test
mov
push
and
subb
push
push
mov
add
scas
rcr
adc
popa
push
stos
insl
lret
xchg
scas
mov
push
pop
mov
pop
dec
aas
aaa
test
repnz
mov
jb
dec
lock
sbb
or
sub
test
in
incb
and
pusha
pop
je
mov
cld
rorl
xor
imul
out
jno
add
jmp
sbbl
mov
lcall
cmp
int3
sbb
nop
push
inc
cld
mov
adc
aam
je
inc
out
xchg
xor
sbb
adc
icebp
pop
cld
insb
test
lock
js
movsb
adc
xor
mov
mov
inc
lahf
cmp
xchg
addr16
hlt
jecxz
rclb
lret
jno
loopne
pusha
dec
out
pop
sbb
adc
adc
pop
leave
pop
leave
cmp
inc
pop
cmp
incl
aad
cmc
xor
dec
sbb
jb
push
lods
test
pop
mov
pop
xor
lret
lcall
pop
sbb
pushf
dec
push
jg
imul
out
fs
ds
aam
fwait
xchg
adc
cwtl
push
mov
cmp
fdivrs
stos
and
cmp
loope
lock
dec
xor
sub
pop
xchg
sti
mov
jge
xchg
add
and
cmp
in
dec
add
daa
and
sahf
subl
dec
jmp
jmp
cld
xchg
mov
pop
in
jne
clc
decb
out
fidivl
mov
add
dec
xchg
adc
ret
jb
mov
mov
das
test
pop
fisubl
inc
rorb
mov
aad
xor
adc
and
test
xchg
cmp
xchg
push
or
mov
pop
push
dec
dec
sti
lods
call
ss
xor
movsl
push
push
push
mov
cmp
lahf
sbb
add
rcrl
repz
lret
lahf
cld
sbb
cmpsl
cmp
cld
fildl
adc
outsl
or
jl
int3
subl
or
lods
jbe
outsl
cmpl
push
jge
idivb
fbld
inc
or
cmc
pop
mov
push
jecxz
xchg
mov
jge
mov
mov
or
mov
fstpt
cs
mov
mov
jle
dec
push
pop
xchg
mov
jg
fsubl
gs
jp
in
cmpl
mov
xchg
jbe
dec
or
dec
stos
and
idivl
lcall
addr16
call
loopne
mov
aas
movsl
and
dec
xchg
loopne
add
inc
insb
inc
sub
xor
jl
movl
mov
sbb
aad
add
adc
fstl
es
adc
movsb
in
or
sbb
jmp
adc
and
pop
lods
sbb
mov
xchg
xor
sub
bound
adc
mov
adc
inc
adc
sub
xchg
sbb
faddp
pop
in
cs
dec
push
push
jb
sub
add
aas
xchg
and
mov
push
negl
leave
sbb
adc
inc
xor
sub
mov
testl
jns
fnsave
fcoms
sub
scas
jbe
sbb
movsb
stos
and
orl
outsb
xor
jae
enter
popf
mov
sbb
js
cmc
ja
js
sub
mov
fisttps
sbb
xor
mov
leave
and
imul
add
mov
pop
lock
xor
les
loope
aad
dec
fidivrl
std
pop
pop
mov
mov
cmp
shrl
inc
mov
mov
nop
imul
sbbl
ret
dec
adc
mov
cli
jbe
data16
repz
stos
mov
push
sbb
dec
push
lds
inc
and
mov
mov
or
inc
inc
jno
add
cmpsl
gs
shlb
jb
subb
rorl
insb
stos
jmp
push
add
fiaddl
dec
jnp
and
clc
push
cmova
cmp
mov
in
out
popf
xchg
cmp
ja
pop
add
inc
mulb
outsl
lcall
or
rcrb
mov
or
pop
cmp
mov
stc
mulb
daa
mov
rcrl
dec
arpl
or
mov
lea
push
ds
push
dec
add
pop
adc
push
jg
mov
es
lret
icebp
sbb
xor
dec
mov
stos
push
mov
call
jnp
arpl
aaa
fs
cmp
in
push
mov
push
xchg
mov
xor
mov
shrl
ja
mov
and
test
addr16
insl
push
push
dec
je
xlat
jns
adc
jbe
pop
aad
pop
sti
popa
lods
push
xchg
inc
jg
or
sbb
adc
out
outsl
clc
sub
dec
add
sub
adc
pop
or
aam
outsb
pop
daa
popa
xlat
sub
es
fsubr
and
enter
mov
jno
mov
stos
jae
push
rcrl
cmpsl
in
push
adc
fbld
test
xchg
inc
mov
andb
and
push
sub
and
nop
pop
jl
cmp
or
inc
or
pop
repz
cmp
dec
scas
or
xchg
push
cmp
mov
xchg
inc
out
lea
mov
push
stos
sub
mov
fsubs
push
ja
jae
mov
ret
test
xor
and
pop
es
xlat
sar
cmp
ss
ret
mov
dec
es
int
and
leave
jmp
cmp
jbe
aam
loopne
sarl
mov
fisubs
cwtl
mov
ror
dec
std
pushf
lret
mov
sbb
mov
fistps
adc
mov
sub
cmp
ja
mov
pop
pop
cmp
inc
ret
std
dec
jmp
pop
mov
push
insb
imul
test
jg
xchg
das
popf
mov
cmp
xor
mov
add
sbb
and
ja
sbb
lds
test
das
or
test
fidivs
ret
in
and
cmpsl
sub
aam
or
scas
in
fs
and
in
loope
xchg
adc
and
mov
jno
sahf
test
call
xor
cltd
add
ja
sbb
jb
rol
xchg
pop
mov
popf
in
and
pop
push
ret
cmp
jmp
xchg
push
cmp
cmp
adc
mov
push
cmp
push
loopne
orb
jle
inc
sub
bound
xchg
mov
inc
xor
pop
push
mov
or
and
daa
sub
fistpl
mov
outsb
mov
add
scas
xchg
or
imul
sbb
xchg
stos
call
rcr
je
pop
outsl
mov
adc
dec
push
add
sub
idivb
enter
iret
stos
lods
xchg
aad
gs
int3
sub
or
dec
ss
jmp
stos
ljmp
das
fs
pop
xchg
pop
call
fcompl
sbbb
jno
shlb
in
push
xor
jp
ds
push
or
jae
leave
and
sbb
pop
fwait
mov
pop
in
in
dec
ror
ljmp
ja
cmp
dec
es
inc
aam
jns
roll
cmp
mov
je
sarl
push
push
lods
xor
xor
xchg
adcb
push
aam
test
pushf
gs
data16
xor
mov
pop
pop
loope
inc
leave
shll
cmp
xchg
sub
dec
ds
xchg
lret
and
idivl
cli
ret
cmp
push
or
nop
mov
xor
dec
test
cs
push
jbe
aaa
mov
push
bound
fidivl
cwtl
mov
xor
in
test
mov
adc
shlb
jno
push
jae
lods
sub
fistpl
jge
mov
testl
mov
sub
jns
pop
jg
mov
xor
xchg
mov
mov
scas
add
dec
rol
cmp
sub
sub
mov
or
or
in
rcr
add
enter
jecxz
cmp
lahf
in
or
jle
adc
std
or
popl
scas
push
or
fwait
inc
xchg
addb
aaa
xchg
mov
cld
adcl
sbb
rcrb
push
ret
mull
test
leave
jp
lcall
add
shll
add
fstpl
and
dec
or
adc
jno
push
clc
jno
popf
imul
hlt
mov
sub
mov
jno
add
rcrb
inc
clc
jae
mov
cwtl
aad
mov
and
or
pop
cld
test
xor
pop
mov
lea
dec
sub
cmpsl
lock
mov
lods
or
dec
sbb
insl
fadd
loop
enter
mov
repnz
cmp
scas
add
repz
sub
test
test
fisttps
inc
fdivs
adcl
or
or
add
scas
imul
mov
insl
mov
aad
shrb
mov
movaps
push
enter
jmp
xchg
push
imul
push
mov
inc
stos
jo
push
inc
sbb
outsb
xor
push
jmp
cmp
add
sub
loopne
nop
out
push
jl
mov
mov
loopne
fstpl
sbb
adc
sub
mov
jae
mov
add
or
xchg
cmp
sub
cs
inc
and
inc
cmpsb
pop
lret
add
pop
and
sahf
fsubrl
sub
call
std
nop
xchg
inc
or
dec
dec
faddl
inc
sahf
xchg
or
push
subl
sbb
cmp
clc
dec
jns
filds
mov
adc
and
lret
ds
jne
cmp
pop
lods
dec
aam
inc
ljmp
ja
mov
cmpsl
pop
call
xor
ljmp
push
jmp
sbb
orb
out
sub
popl
xor
ljmp
outsb
outsl
xchg
adc
enter
adcl
mov
rorl
sarl
je
shll
fldenv
mov
or
pop
and
mov
xor
pop
mov
test
icebp
icebp
cwtl
and
dec
and
out
lods
jae
inc
loop
outsl
insb
add
mov
mov
push
in
dec
sbb
xchg
xor
pop
and
add
pop
popa
cmpsl
fs
outsb
dec
mov
push
sbb
addr16
clc
mov
shl
add
adc
mov
sbb
out
addr16
int
leave
jg
sub
lret
rclb
add
sar
cli
mov
sub
inc
mov
fmull
icebp
ljmp
adc
mov
mov
dec
mov
jp
loope
jnp
mov
popf
aad
repz
add
addb
add
dec
subl
xchg
inc
xor
mov
test
jbe
mov
xor
test
ret
ficomps
stc
jg
repz
jg
adc
ret
inc
bound
mov
addl
jg
xor
xor
cmpsb
aas
in
scas
jg
pushf
mov
mov
je
xchg
fsub
roll
add
xor
push
mov
les
xorb
mov
leave
lods
jg
add
mov
push
mov
popf
pop
inc
daa
and
dec
lods
stos
data16
jne
decb
adc
addr16
pop
outsb
xchg
hlt
scas
cs
jne
sub
mov
shl
dec
push
sbb
mov
mov
mov
push
or
push
inc
and
ficoms
mov
xchg
mov
add
bound
cmp
jnp
inc
shrl
call
xor
mov
xchg
xchg
push
incl
mov
mov
pop
push
mov
inc
cmc
ljmp
fdivrs
cs
dec
xchg
adc
es
pop
sbb
and
inc
rcr
lock
repz
jle
mov
enter
sub
mov
dec
fs
jo
idivb
dec
xorb
pop
rcrl
pop
sub
repnz
xchg
inc
ljmp
inc
sbb
cmc
int3
adc
dec
outsl
dec
icebp
push
xchg
push
sbb
into
mov
imul
cmp
xchg
nop
xchg
xchg
and
mov
mov
inc
xchg
int
lea
mov
mov
sbb
les
inc
lahf
dec
push
dec
cmp
mov
dec
adc
xor
dec
jle
test
orb
out
jno
lret
cmp
xor
testb
gs
or
lods
popa
push
pusha
add
sbb
cmp
cmp
daa
clc
mov
adc
out
mov
in
fwait
adc
push
or
add
sub
fwait
mov
cld
push
popf
ljmp
push
daa
push
test
xor
test
jns
push
outsb
clc
inc
adc
inc
repz
insb
addl
stos
clc
xchg
sub
shl
dec
mov
and
sbb
fimuls
cmpsb
lcall
push
sar
push
std
xchg
scas
mov
sbb
std
mov
test
adc
sub
fwait
aas
fnstsw
outsl
xchg
roll
jmp
cmp
cmp
push
notl
test
xor
int
pop
dec
xchg
mov
sub
cmp
xchg
mov
cmpsb
push
push
scas
mov
loopne
cld
in
xlat
xchg
sbb
dec
aas
xchg
hlt
jo
jp
xor
sbb
sub
aam
clc
inc
xchg
cmp
mov
fbld
mov
fwait
sub
fiaddl
push
push
shlb
add
cmp
sti
mov
jnp
cs
mov
fbstp
stc
xchg
add
movsl
mov
mov
inc
sbb
pop
mov
not
mov
lods
in
push
out
fdiv
xor
lret
scas
data16
scas
jo
ds
inc
ljmp
or
std
ret
or
lcall
push
mov
clc
mov
mov
jmp
inc
lods
stos
stc
ljmp
fnstcw
lods
aaa
lret
outsb
sti
mov
scas
mov
push
fxch
sbb
scas
inc
aam
and
add
fs
mov
rolb
hlt
xchg
jno
clc
pushf
jo
mov
repnz
mov
or
int3
mov
push
xor
cmpsb
addr16
pushf
call
je
and
adc
mov
mov
mov
push
mov
das
mov
arpl
dec
push
repnz
mov
divb
dec
or
jno
adc
arpl
lods
in
pop
dec
mov
mov
notl
cmp
adc
in
es
push
out
jno
frstpm(287
je
push
call
mov
sub
stos
xor
incl
push
jmp
or
lods
push
pop
pusha
sbb
pop
adc
push
int3
test
test
es
cwtl
cmc
pusha
rolb
stos
fstps
mulb
lds
mov
xchg
sti
push
jb
lcall
cmp
iret
inc
xchg
jp
mov
cmp
xor
pop
bound
inc
adc
inc
ficoms
shll
bts
call
sub
shrl
imul
jmp
daa
int
jne
lahf
movsb
and
pop
xchg
adc
add
sbb
movsb
and
mov
pop
jle,pn
pop
test
jge
std
add
sbb
cwtl
dec
fsts
dec
mov
testl
mov
inc
xor
inc
adc
in
pop
xchg
lods
jb
fnstsw
xor
or
out
sarl
and
dec
mov
data16
out
adc
xchg
test
ds
and
mov
jmp
push
add
mov
xchg
xchg
sbb
insb
dec
loopne
jl
fdivr
in
push
mov
adc
and
ret
out
cltd
or
fs
shl
xlat
sbb
mov
cwtl
or
addr16
cmc
pop
imul
jle
jb
inc
test
cmpsb
insl
cwtl
int
jae
mulb
outsl
push
mov
adc
dec
pop
mov
push
dec
push
inc
push
addl
cmpsb
lods
xor
sbb
fwait
cli
ljmp
mov
mov
and
cmp
daa
push
fistps
mov
ret
aam
mov
jmp
mov
xor
xor
pop
js
in
cmp
jp
or
pop
cmp
mov
inc
repz
sarl
ljmp
adc
outsl
dec
cld
or
addl
xchg
loopne
pop
mov
out
sti
pushf
popa
jmp
xlat
clc
andb
jne
cmp
sub
mov
sbb
sub
fcomps
pusha
pop
xchg
pop
in
push
stc
fists
imul
js
or
fldcw
sbb
add
cmp
sbb
sub
imul
cmc
test
stos
hlt
push
flds
mov
add
sbb
leave
cwtl
rcrl
sub
dec
dec
cmp
xor
inc
out
jo
repz
pop
add
lds
or
pop
push
loopne
roll
cmpsl
stc
into
cmp
push
mov
mov
push
sub
jnp
pop
cli
mov
lea
out
and
sti
into
push
rcr
ljmp
insb
add
xchg
cld
iret
jecxz
mov
rorl
inc
add
mov
jo
pop
dec
ljmp
ret
cmp
sbb
sub
std
or
rorb
inc
xchg
xchg
movsb
jns
orl
dec
loope
mov
sbb
subb
aad
xor
push
add
shr
sti
or
dec
mov
in
inc
sahf
xchg
addb
pop
fildl
lcall
pop
mov
cs
pop
int3
dec
and
out
cmpsb
sub
adc
pmullw
and
mov
pop
mov
shrb
pop
outsl
ds
mov
stc
dec
mov
push
in
lods
cwtl
lret
pop
mov
dec
mov
arpl
es
fwait
jne
mov
mov
lret
lea
fiadds
lret
in
xor
adc
fldt
scas
sub
sub
push
or
cltd
adc
nop
mov
or
pop
mov
cmp
dec
xchg
mov
adcl
jo
rclb
sub
lret
test
call
push
sub
mov
std
pop
imul
sbb
push
xchg
jnp
xchg
jbe
inc
mov
jbe
addr16
repnz
xchg
in
out
fisubl
das
gs
mov
jp
mov
ja
dec
dec
inc
jns
pop
and
in
sub
push
push
mul
adc
mov
ja
ficomps
add
int
sbb
dec
mov
mov
inc
mov
jnp
ja
cmp
mov
call
imul
cmp
int3
jns
mov
sub
sub
aas
lods
fdivrl
sbb
bound
dec
repz
dec
fisttps
jp
pop
sahf
inc
nop
xor
mov
mov
filds
push
adc
mov
lret
sbb
inc
stos
repz
cmpsl
movsb
test
push
enter
std
out
leave
mov
lock
outsb
sahf
push
addr16
push
in
fisubl
xchg
enter
arpl
lea
stc
lock
dec
icebp
out
cmp
sbb
xor
mov
mov
jge
lea
popf
and
adc
push
shl
cmp
jmp
jno
push
test
dec
jo
inc
inc
mov
push
jmp
out
xchg
xchg
xchg
sbb
or
data16
jg
fs
cmpb
inc
jns
and
xchg
scas
sbb
inc
mov
adc
push
add
jb
cs
loop
fldcw
sahf
jno
ljmp
and
out
sub
stc
cmpsb
add
add
loop
jb
xchg
sbb
cmp
sbb
andl
pop
in
mov
test
xchg
jmp
cmpsb
pop
jle
repnz
mov
dec
sti
inc
pop
dec
inc
in
push
mov
mov
das
les
arpl
xor
imul
or
outsl
xor
fildll
inc
in
leave
inc
push
jmp
or
movsb
push
add
mov
mov
mov
inc
xor
stos
loop
imul
push
out
lcall
sub
daa
mov
pop
jg
pop
adc
imul
sub
jge
int
jge
cmp
xchg
cld
mov
pop
mov
aaa
sbb
addb
cmp
iret
lahf
mov
inc
repnz
fcoml
ds
out
mov
in
push
add
cld
mov
mov
mov
inc
jae
push
shl
into
inc
cld
or
lahf
pop
push
sbb
nop
sub
movb
test
jp
cmpsl
jne
push
mov
add
and
dec
call
or
movsl
inc
out
xor
pop
push
xchg
dec
push
xor
aad
xor
scas
adc
sub
int
in
or
fisttpl
mov
out
mov
les
in
lock
or
xor
cs
sub
mov
mov
jbe
popa
mov
je
icebp
jecxz
xor
icebp
out
jne
cmpsb
sbb
into
imul
inc
xorb
or
mov
or
mov
imul
sub
sub
out
xchg
add
adc
cmp
or
and
xchg
hlt
sahf
sbb
pop
shrb
push
push
fsubl
jp
sbb
or
adc
aaa
in
loopne
aas
push
ja
mov
or
add
jecxz
shrb
push
mov
rolb
jo
adc
add
and
mov
imul
fnsave
lods
fwait
das
xchg
cmp
fucom
or
cmp
popa
mov
or
jno
mov
aas
mov
xchg
ret
hlt
in
jp
clc
xchg
les
stos
cmp
jo
push
dec
fpatan
jge
jmp
das
stc
jb
jecxz
outsl
les
mov
ljmp
cmp
sub
add
insl
fidivrl
sbb
push
xchg
add
push
dec
pushf
mov
pop
mov
and
sbb
add
and
aaa
xchg
xchg
fbld
mov
aad
xchg
mov
push
xor
mov
inc
pop
mul
in
cwtl
shlb
and
sbb
and
lcall
inc
jle
leave
sbbb
data16
cmp
jno
stc
push
mov
mov
test
xor
incl
fwait
mov
xor
mov
movsl
cmpsb
dec
fs
push
sbb
lcall
out
sbb
lahf
dec
inc
pushf
imulb
out
inc
mov
mov
pop
cs
cmpb
cmpsb
or
xchg
jne
lods
push
push
shl
pop
test
xor
les
pop
nop
out
ljmp
cwtl
pushf
nop
gs
inc
outsb
ret
loop
adc
mov
call
fisttps
mov
push
cmp
mov
dec
lods
dec
jae
cmp
lea
push
mov
fidivl
adc
sarb
xchg
dec
pop
cmp
dec
fdivrs
and
fbld
jle
in
xchg
pop
dec
cmp
xor
jo
loop
sub
add
in
fwait
jne
out
pop
xchg
jbe
jbe
les
sbb
inc
fsubr
xorb
negb
jbe
jge
fiaddl
inc
popa
cmpsl
jbe
add
icebp
cmpsl
add
rcll
mov
mov
add
mov
push
dec
xorl
and
lea
mov
pop
lahf
mov
out
xor
lret
jmp
stos
addr16
rclb
fs
shll
clc
cwtl
loope
fwait
add
pop
cmpl
xor
aas
mov
out
addr16
sub
cmpb
dec
subb
mov
cltd
shlb
loop
aas
out
popl
jne
sbb
leave
mov
mov
pop
mov
ja
xchg
sub
jae
fnsave
cmp
lcall
inc
lahf
mov
inc
mov
add
into
add
mov
imul
jl
add
rol
sbb
lahf
rep
pop
jg
xorl
icebp
add
loopne
jp
add
pop
adc
adc
xchg
sahf
push
test
push
pop
sbb
xor
stos
xchg
shll
jge
cs
mov
sbb
outsl
and
cwtl
das
and
mov
add
and
addb
jl
inc
or
cld
sub
xor
add
sbb
dec
mov
mov
movsb
fisttpl
pusha
daa
scas
popf
fmuls
call
xchg
mov
ss
call
call
imul
sbb
sbb
mov
mov
xor
sbbl
dec
or
out
icebp
repnz
out
lahf
xchg
std
jg
mov
call
jmp
add
cmp
jnp
jmp
aam
clc
pop
sbb
testl
pop
popf
add
aaa
pop
push
enter
lea
mov
push
daa
mov
cmp
mov
add
mov
jne
sahf
push
push
fs
fdivs
jl
add
jb
mov
repz
mov
pop
lret
inc
sbb
and
and
dec
lcall
mov
mov
add
inc
pop
jg
push
or
cs
sub
jl
shlb
jno
push
pop
je
xchg
mov
push
add
repnz
pop
inc
push
xchg
int
xchg
dec
arpl
adc
cs
call
cmp
jno
and
aam
xor
push
dec
mov
cs
dec
out
mov
clc
or
js
test
jo
cmpl
stos
int3
inc
mov
sbb
test
mov
mov
daa
xor
aam
adc
orb
and
lcall
lods
cmp
mov
push
int3
mov
jecxz
stc
fcmove
mov
jge
sub
test
or
pop
fists
add
cmp
dec
and
mov
movsl
ror
sbbb
cmpsl
xor
shlb
dec
mov
nop
ss
arpl
cmp
icebp
icebp
lods
sbb
lock
rcl
aas
mov
pusha
add
in
aad
mov
dec
xchg
cmp
pop
imul
add
ret
nop
xor
addr16
xor
pop
int
and
or
pop
in
xor
leave
cmp
das
out
lock
mov
pop
xchg
sbb
push
repz
push
inc
insb
pushf
xor
mov
pop
dec
lds
mov
les
mov
mov
push
mov
sub
dec
mov
mov
rclb
pop
mov
inc
aas
ret
push
rol
adcb
cmc
out
dec
insl
xor
popa
das
data16
lds
movsb
xchg
xor
stos
out
cmpsb
idivl
fisubrl
jns
push
jb
sarb
inc
sbb
test
inc
or
lods
ljmp
testb
push
sti
pop
xor
movsb
test
push
jmp
xchg
fistps
mov
scas
or
cmp
testb
jne
mov
xor
jge
stos
xchg
sti
shll
sbb
movb
pop
sub
dec
mov
mov
add
add
insl
sbbl
clc
into
dec
sub
mov
cld
adc
test
je
cmp
sbb
inc
cmpb
popa
jne
subb
xchg
sub
je
and
inc
add
mov
push
lea
xchg
ds
movsl
push
jnp
movsb
xchg
test
inc
fsubl
jl
mov
hlt
inc
nop
pusha
or
cmp
dec
repz
rolb
xchg
push
out
std
and
in
pop
sti
fsubrs
adc
xor
mov
mov
pushf
dec
test
bound
jno
adc
pop
jnp
xchg
shlb
inc
sub
and
jns
lahf
nop
stos
into
pop
scas
add
adc
cmp
jns
rclb
push
movsl
cs
divb
lods
rorb
out
fimuls
lcall
xchg
lret
das
inc
scas
int
inc
push
dec
test
xchg
loop
decl
ret
mov
push
lret
scas
push
in
aam
in
fcomi
xchg
xor
and
lods
push
mov
pop
xchg
pop
cli
cmp
jne
fiaddl
fsub
or
std
fisttps
xchg
inc
pop
dec
roll
std
push
imul
mov
or
cmp
xchg
inc
imul
int
arpl
adc
sbb
call
pushf
mov
or
movsb
xchg
jb,pt
mov
push
or
cmp
into
in
jns
outsl
mov
pushf
inc
adc
fdivs
mov
mov
cld
insl
inc
mov
int3
jmp
icebp
cli
loopne
out
es
and
in
loope
push
je
jmp
test
int
dec
jl
xchg
mov
cmp
shl
sbb
add
mov
lret
cmpsl
jbe
mov
sub
repnz
aad
dec
test
ret
or
aam
cld
lock
sbb
dec
inc
push
mov
dec
ljmp
ret
filds
pop
adc
inc
or
push
cmp
xor
rolb
add
insl
into
hlt
lock
jg
into
xor
gs
loop
jge
outsl
mov
inc
mov
addr16
sbb
cmpsb
test
push
divl
mov
dec
ret
sub
inc
ja
pop
test
jno
mov
xchg
repnz
pusha
sub
sbb
cs
mov
inc
mov
fwait
stos
jl,pn
pop
cmp
jmp
loope
arpl
or
ficoml
push
pop
mov
outsl
jo
ja
loopne
nop
lret
sbb
in
ljmp
mov
clc
fdivrs
mov
inc
lock
sbb
xor
movsb
nop
rolb
xor
daa
push
mov
mov
lret
sbb
adcl
mov
push
cmp
into
cltd
lods
js
loope
sub
scas
adc
and
jb
iret
and
dec
lret
adcl
fucomp
push
fcmovbe
in
inc
add
adc
sub
sub
es
or
push
push
in
je
or
call
jae,pt
ret
mov
jp
scas
pop
loope
pop
adc
cwtl
mov
repz
cmp
or
mov
pop
pop
xchg
aas
mov
sbb
cmpsl
mov
aaa
pop
cmp
xchg
pop
aaa
mov
xchg
stos
out
decb
fsubr
sub
sub
push
push
dec
icebp
sub
clc
adc
push
stos
mov
mov
dec
jecxz
inc
mov
mov
push
in
mov
mulb
loope
mov
add
mov
hlt
lods
out
jecxz
xchg
loopne
mov
loop
jl
sbb
or
sbb
cs
aad
sub
lcall
shll
dec
mov
mov
scas
stos
and
js
int3
int
leave
mov
loop
mov
dec
rcrl
jbe,pn
add
jmp
push
sti
or
shrl
nop
cld
mov
push
pop
imul
cmp
lret
dec
pop
add
adc
push
sub
fdivrl
js
and
and
js
add
scas
or
sbb
icebp
xchg
shrb
dec
push
dec
xchg
lock
insb
cli
mov
in
call
outsb
negl
xor
adc
or
and
pop
rcrl
push
imul
gs
out
pop
out
adc
test
sub
std
loope
icebp
lahf
movsl
fmull
push
mov
xchg
or
and
mov
clc
jno
and
popa
out
cmp
stos
lock
push
lea
dec
repnz
and
xchg
cmp
imul
dec
jb
lds
imul
push
sbb
and
rorl
pop
mov
pop
push
and
adc
pop
cmpsb
jle
out
mov
pop
jae
or
aad
es
jo
ret
mov
push
enter
jmp
push
stos
int
ficoms
imul
inc
push
outsb
call
add
push
sub
pop
div
inc
shrl
jle
push
mov
push
in
mov
pop
add
cmp
xlat
test
popf
leave
std
out
push
pusha
lahf
test
lcall
enter
int3
les
mov
mov
es
fwait
cld
in
inc
movsb
ret
call
inc
push
cmp
outsl
dec
sbb
repz
int
pop
sbb
cmp
or
or
xor
mov
dec
cld
sti
pop
mov
jp
cmpsl
or
aaa
lds
sub
test
sti
inc
cmp
leave
fdivrl
pop
sarb
vfrczpd
or
and
inc
jo
xchg
cmp
jp
nop
leave
incb
jnp
and
xchg
rcrl
gs
dec
sub
adc
xchg
adc
pop
insb
inc
pop
xchg
dec
push
mov
aas
loope
and
or
push
add
or
js
js
mov
call
dec
fadds
inc
pop
cwtl
push
push
popf
cmp
sub
loope
sbb
adc
xor
cld
out
pop
sbb
or
dec
adcb
cmp
cmpsb
lods
pop
push
pop
popa
dec
pop
add
adc
xchg
pop
lock
mov
hlt
neg
mov
in
ficomps
cltd
stos
enter
enter
sbb
inc
lret
mov
std
out
lods
fcomp
sbbb
xor
pop
adc
mov
icebp
mov
notl
decb
push
sbb
fdivp
xchg
sahf
outsb
rorb
ds
pushf
adc
add
aaa
fucomip
mov
ds
aad
jb
jo
adc
push
add
cltd
add
in
pop
test
lea
pop
lods
push
add
scas
pop
movsb
shrb
out
ja
and
out
pop
sub
aaa
dec
mov
or
es
jecxz
cmp
sub
out
subb
push
je
sub
int3
jnp
into
mov
or
mov
lock
adc
mov
lcall
pop
sahf
std
rclb
pusha
jo
pushf
xchg
std
lahf
hlt
sahf
mov
idiv
fidivl
fsubl
push
or
pop
inc
jnp
sbb
adc
repz
sub
mov
cwtl
jae
sbbl
xchg
bound
fstpt
bound
inc
dec
mov
jge
or
pop
dec
int3
sbb
fistpll
cmpsb
mov
in
in
mov
push
jle
stos
shlb
jle
int3
adc
push
repnz
js
popf
jl
xlat
jae
ja
cmp
ret
mov
mov
mov
test
sub
leave
mov
pop
inc
cmpsb
or
enter
adc
movsl
lcall
lcall
mov
insl
or
adc
lods
cmp
outsl
xchg
ja
testb
fwait
daa
cltd
enter
and
jl
dec
inc
add
popf
fcoml
mov
inc
js
jo
lcall
xchg
cmp
push
imul
xchg
arpl
add
insl
mov
xchg
add
lods
out
fcomps
bound
xor
jno
std
jle
repnz
fisubrl
and
push
inc
push
dec
dec
ds
lds
iret
data16
xchg
mov
pop
push
loop
xchg
in
jl
and
fimull
jle
cmp
sbb
add
dec
dec
pop
je
xchg
push
stos
hlt
push
sbb
dec
inc
jecxz
out
add
aam
lahf
in
arpl
frstor
mov
push
push
push
into
pop
add
loope
shll
fnstsw
cs
add
and
movsb
inc
pop
test
imul
xor
aas
xlat
rorb
inc
dec
mov
scas
je
stc
xor
insb
pop
std
test
adc
mov
push
xlat
add
test
mov
inc
mov
jne
cmpl
mov
jno
dec
outsb
inc
pop
popa
pop
xchg
repnz
test
mov
cmp
push
mov
pop
je
push
dec
bound
mov
pop
push
arpl
inc
xchg
test
push
jge
pushf
lods
jle
jae
dec
scas
iret
aad
mov
mov
sub
dec
hlt
mov
pusha
jb
xchg
shrb
jnp
mov
ss
adc
jae
cld
mov
mov
cmp
out
pop
ja
mov
add
add
rcl
mov
xor
fnstcw
cmp
inc
xor
into
cmp
cmp
int3
mov
sbb
inc
adc
sbb
mov
sbb
out
stos
into
jb
adcl
and
imul
mov
cmp
add
or
lret
xchg
cli
insl
insl
aaa
xchg
sarl
xor
lcall
adc
arpl
outsb
ljmp
sbb
or
xchg
dec
pop
pushf
leave
mov
or
pop
sbb
xchg
and
sahf
mov
lock
jle
push
xlat
push
mulb
je
jb
push
sub
insl
pop
shll
sub
jmp
ret
popf
movsl
ret
aam
ja
lds
jno
jmp
mov
pop
lret
lock
mov
dec
jmp
pop
lret
les
divl
pop
push
loop
icebp
notb
lret
in
in
pop
and
push
pop
int3
iret
inc
lcall
dec
jmp
mov
pmullw
fcmovbe
dec
or
mov
and
shrb
adc
mov
test
pop
loopne
pop
into
repnz
inc
jnp
test
mov
xchg
mov
adc
add
xor
pushf
mov
xchg
into
xlat
addb
pop
aam
adc
fs
sbb
xor
out
xlat
orl
mov
arpl
push
pop
pop
pop
rorl
test
inc
lahf
adc
mov
test
bound
jbe
loopne
cmpsb
pop
insb
jnp
in
sub
lods
adc
jge
imul
mov
mov
push
stos
movsl
jle
scas
and
fmuls
sbb
call
mov
jae
add
pop
loop
in
cltd
fsts
pop
aad
std
push
jbe
test
into
push
pop
addl
lods
or
adc
dec
bound
adcl
lea
pop
fwait
imul
shll
pop
cwtl
mov
mov
mov
shrb
jnp
add
inc
and
sarl
jb
jo
and
jmp
inc
mov
mov
aas
divl
xor
cli
jle
popa
cld
mov
test
stos
jmp
mov
loop
mov
lea
je
out
sub
out
lds
stos
jmp
orb
lea
inc
mov
mov
out
xchg
popf
iret
cwtl
das
dec
inc
lret
and
inc
dec
jno
jnp
sub
cmp
lock
dec
stos
push
daa
mov
in
mov
fs
xchg
jg
push
notl
repnz
pop
push
sbb
add
stos
push
shlb
daa
mov
loopne
pop
daa
mov
clc
sub
or
mov
mov
xchg
cmpsl
rolb
ja
test
inc
imul
aam
sub
sbb
jnp
xchg
mov
je
xor
fsubrs
xchg
pop
out
xchg
dec
push
dec
ljmp
cmp
roll
xor
or
push
lret
imulb
rcrb
pushf
xchg
lret
pop
test
push
lea
and
out
mov
rcr
or
sbb
xor
and
data16
addb
fwait
xor
stc
imul
jmp
addb
lret
xchg
xor
lahf
xor
addl
pusha
pushf
jbe
push
cwtl
cmp
jge
xchg
fsts
sub
mov
lock
jge
push
dec
jle
jmp
int
sub
or
dec
sbb
fs
loop
mov
fisttps
lea
dec
loopne
daa
hlt
fisubl
stos
push
hlt
sbb
data16
push
mov
dec
out
scas
cwtl
cltd
loop
mov
mov
xor
int3
pop
movsb
in
mov
fdivs
jae
mull
sahf
dec
out
imul
ljmp
sub
mov
cmpsb
pop
std
sub
rcrl
sbb
repz
jp
add
push
addr16
es
cmc
mov
ss
pop
call
icebp
idivl
cmp
push
fs
sub
imulb
jne
sarl
xchg
lret
xchg
jns
int3
in
cmp
mov
mov
adcl
int3
aaa
in
push
ret
fsubrl
and
popl
int
cmp
fadd
add
aas
cmp
sbb
fiaddl
xor
xchg
insb
sti
sbb
jp
test
jo
mov
push
cmp
stos
adc
pop
test
cmpsb
jae
addb
fidivl
outsb
mov
orb
das
scas
test
pop
inc
out
sbb
fstp
inc
adc
xor
shrl
mov
push
lds
lret
ret
push
enter
inc
mov
mov
sbb
ds
scas
scas
mov
add
adc
mov
mov
mov
testl
add
mov
jmp
push
pop
xor
xor
shl
and
push
pop
lahf
rorl
pop
jne
xchg
test
mov
and
xchg
xchg
mov
lahf
sub
fldl
bound
ret
push
loope
mov
jp
xchg
fld
dec
bound
inc
rcll
les
enter
loope
test
fisttpl
and
jnp
cmp
mov
popf
sbb
mov
stos
cs
popf
xchg
sub
stos
lods
lods
cmp
popa
xchg
mov
scas
subl
jbe
sub
pop
add
inc
or
and
sbb
push
mov
roll
dec
or
and
jp
mov
je
pop
sub
addr16
xor
rolb
out
cmp
jns
add
stos
es
imul
int
xor
dec
add
xchg
aas
xchg
sar
jb
rolb
lock
inc
sub
nop
push
dec
adc
out
in
dec
push
shl
out
dec
fcmovbe
push
sbb
lds
cmp
pop
mov
cmpb
shlb
adc
dec
out
lret
sbb
xor
or
lret
sub
scas
sbb
sarb
mov
movsb
pop
jge
pop
clc
imul
mov
loop
pusha
outsl
mov
push
push
jmp
lret
lret
inc
rorb
xchg
ja
fprem1
xor
sub
xchg
adc
neg
movsl
push
cli
ja
sbb
adc
pop
test
out
xlat
outsl
sub
gs
ds
call
dec
mov
in
push
data16
cld
adc
ljmp
sub
je
mov
movsl
mov
in
sar
dec
cltd
add
jns
xor
mov
cmp
push
test
xor
push
adcb
xchg
or
mov
xchg
xor
push
test
dec
lahf
xchg
filds
jp
and
mov
jmp
cmpsl
jge
fists
and
idivb
inc
data16
or
bnd
mov
gs
mov
and
ljmp
cmp
jnp
mov
es
push
call
ja
cs
jo
inc
dec
cld
dec
add
pop
inc
add
adc
xchg
cmp
jo
push
add
test
jno
fbstp
inc
std
orb
fdivp
or
addr16
aaa
test
aaa
mov
push
fcompl
xchg
pop
leave
inc
add
push
adc
dec
stc
lahf
out
adc
push
sbb
dec
mov
pop
shrl
dec
notl
nop
aam
jb
repnz
int3
sbb
std
test
popf
pop
push
test
sbb
mov
xchg
cmp
out
push
outsl
jnp
adc
push
adc
cmp
cmp
insb
pusha
scas
adc
test
fwait
out
outsb
sub
mov
cmpsl
pop
dec
or
jb
repz
cltd
and
aad
loop
sbb
int
add
mov
in
xor
mov
adc
and
jmp
mov
js
dec
in
push
insl
ret
dec
lods
jae
pop
in
ss
push
jecxz
jle
loope
dec
outsl
cmc
test
rolb
bound
sarl
jle
inc
call
movsl
fwait
call
lods
stc
loope
fidivrl
dec
das
and
out
ss
sbb
add
pushf
and
adc
dec
enter
loopne
sti
sub
repnz
fists
out
pop
ds
stc
daa
lods
sub
fidivs
pop
lods
int
rcr
jbe
cmc
adc
or
inc
jp
popf
sub
shl
int3
stos
or
lret
push
and
sbb
add
cli
pushf
loop
aad
adc
dec
ja
rdtsc
inc
dec
xor
jl
push
and
xchg
inc
inc
insb
push
push
mov
iret
fistpl
leave
test
addb
repz
inc
call
pusha
mov
repnz
xchg
or
jnp
imul
xchg
hlt
imul
xor
aas
and
xchg
test
lahf
int3
test
insl
sti
adc
mov
cmpsb
inc
xor
xchg
jle
jne
cwtl
out
pop
mov
cmp
sti
jnp
out
jbe
lods
mulb
rclb
outsb
mov
pop
add
aad
fcoms
jae
movsb
fiaddl
test
aas
add
js
test
lods
shl
andl
das
jl
push
cmp
insl
cltd
in
push
jg
jmp
test
inc
pop
inc
addr16
out
cmpsl
test
mov
fstpl
cmp
icebp
dec
mov
sbb
adc
sbb
mov
in
pop
cmp
clc
xchg
loop
leave
and
cmp
adc
sbb
aad
cmp
dec
int
mov
pop
lret
aas
push
push
mov
popf
xchg
and
leave
dec
cmp
les
lret
adc
pop
cli
fs
stc
xlat
stos
mov
mov
hlt
or
jge
sbb
adc
cmp
mov
jge
push
sub
test
mov
dec
dec
movsb
fldt
mov
lret
test
and
decb
scas
cmc
jp
repnz
js
loop
sub
mov
sbb
pop
mov
test
test
std
mov
adc
xor
mov
jp
inc
xchg
cltd
gs
jb
ds
dec
outsl
adc
les
push
and
jg
scas
add
scas
push
xchg
out
push
lahf
test
sub
and
adc
fldl
jmp
stos
inc
cld
sbb
sub
dec
mov
jne
js
jae
in
loopne
outsl
adc
aaa
mov
xchg
pusha
mov
aad
adc
ret
jmp
mov
iret
imul
fwait
dec
ss
jns
test
rcrb
cmc
idivb
mov
jno
sub
add
out
pop
xor
sbb
notb
inc
lds
xchg
pop
in
aaa
ja
dec
loopne
out
sbb
mov
lahf
aam
fdivrs
xchg
mov
in
mov
jg
mov
mov
fadds
decl
arpl
cmpsl
jl
test
cmp
cltd
mov
add
xor
lds
mov
out
leave
inc
ja
das
sub
lahf
lret
repz
imul
rorl
jb
pop
gs
sub
and
or
or
fnsave
jae
or
in
fdivs
std
sub
add
in
xchg
test
movsl
jns
fwait
or
xchg
outsb
shll
rcr
incb
jecxz
jge
and
cli
out
mov
mov
shl
dec
xchg
fwait
or
dec
aas
aas
xor
mov
pop
mov
dec
inc
and
lds
hlt
lret
pushf
pop
out
push
daa
pop
into
pop
adc
or
xor
adc
pushl
adc
shl
xor
fmuls
fucomp
inc
and
cmp
sbb
sahf
in
xchg
lods
js
int3
shlb
xor
cwtl
arpl
adc
andl
std
xor
cld
inc
nop
daa
and
pop
test
jecxz
dec
jl
push
movsl
test
dec
sti
dec
add
shl
cmp
pop
jns
pusha
lahf
clc
inc
dec
fcmovne
pop
sbb
dec
gs
jecxz
dec
mov
push
mov
in
movsb
and
fs
inc
les
adc
fcomps
pop
jmp
mov
xchg
dec
insb
popf
loopne
fnsave
dec
add
pop
lock
movsb
add
in
or
inc
cld
push
pop
mov
dec
pop
mov
loopne
aaa
mov
test
gs
repz
inc
aam
xchg
out
pop
sbb
mov
cltd
shll
and
icebp
je
adc
pop
or
enter
push
mov
das
outsl
dec
xchg
daa
pop
call
lea
lods
fstl
rclb
xor
or
cmp
sbb
sub
daa
out
dec
mov
jnp
push
pop
xor
dec
mov
mov
mov
pusha
adc
outsl
scas
jne
rcl
push
dec
jge
mov
scas
push
xchg
jl
imul
cmpsb
sub
adc
dec
xchg
mov
nop
adc
or
xor
iret
mov
insl
mov
sub
iret
fbstp
out
inc
mov
fs
cmp
stc
pop
sbbb
cltd
shl
jl
rcll
cmpsb
call
int3
mov
loopne
lods
add
mov
push
loope
popf
out
daa
push
adc
mov
repz
incb
mov
sub
fbld
dec
cli
popa
mov
inc
bnd
rcll
push
xchg
fistpll
mov
pop
pusha
or
push
mov
fs
test
jmp
mov
mov
in
leave
arpl
mov
inc
jle
pop
mov
call
add
addl
nop
jl
ds
call
pop
cli
xor
mov
fdivs
ficoms
mov
popa
dec
mov
pop
mov
or
aaa
lds
ljmp
rcrb
imul
sub
sub
lcall
das
mov
mov
iret
mov
es
sti
in
mov
iret
sbb
sub
push
lcall
and
mov
dec
xchg
das
mov
and
mov
mov
pushf
fnstenv
pop
cmp
inc
sarb
jo
jg
adc
mov
sub
mov
xchg
jg
imul
leave
mov
cmp
push
jle
push
dec
jl
dec
subb
mov
mull
pushf
repz
stc
add
pop
movsl
faddl
stos
insb
xorl
push
pop
repz
mov
pop
dec
cmp
mov
hlt
cmp
jp
sbb
cli
inc
sarl
aaa
das
ja
clc
inc
adc
add
xor
mov
add
and
xor
cmpsl
and
jbe
mov
das
rol
aas
mov
xor
int
jecxz
idivb
les
push
pop
lret
icebp
jne
and
inc
mov
inc
shlb
nop
adc
or
push
xlat
xor
cmp
xchg
int3
xchg
adc
dec
rol
cmp
jae
aam
fwait
insb
pop
adc
out
mov
ja
jb
sbb
mov
cmpsb
jb
shrl
bound
sarl
mov
mov
cmp
mov
das
pop
test
push
cmp
mov
and
jle
fs
lahf
movl
mov
das
rcr
inc
lahf
test
sub
addr16
ljmp
repnz
cltd
mov
pop
pusha
xor
jmp
fildll
insb
xor
mov
loopne
movaps
scas
mov
out
dec
ss
rorl
sub
sub
dec
and
ljmp
int
cwtl
xor
scas
fsubr
pop
xchg
xor
cmc
inc
pop
stos
imul
jle
inc
pop
push
ficompl
push
xor
push
push
fnstcw
gs
jae
dec
test
cmp
mov
pop
mov
stc
push
mov
push
xchg
sti
mov
cmp
and
popf
scas
addr16
mov
inc
fcoml
gs
insl
pop
gs
jmp
sbb
iret
inc
popa
push
aaa
in
jmp
xchg
mov
sub
decl
shlb
filds
dec
inc
pop
sub
add
push
jnp
je,pn
out
les
sti
pop
loope
cltd
xchg
ja
leave
inc
mov
sti
and
pushf
test
xchg
jecxz
sub
gs
cli
lods
ljmp
daa
mov
dec
mov
iret
mov
or
hlt
addr16
sahf
xor
stos
pop
stos
mov
ret
int3
pop
mov
cmp
mov
lret
push
shlb
add
popf
sub
push
test
out
fcmovnb
arpl
xor
cmpsl
xor
hlt
sbb
ror
mov
pop
add
and
jmp
adc
push
das
mov
xchg
sbb
ja
fistpll
and
mulb
fs
lcall
pop
mov
dec
es
fadds
loop
xor
cli
adcl
mov
mov
add
adc
mov
aad
in
sarl
dec
jg
mov
lret
jo
push
add
push
jae
pop
jge
jle
dec
push
fiadds
fildl
enter
mov
lods
test
cmp
dec
dec
jb
jecxz
or
ret
jne
data16
pop
push
and
mov
enter
ret
test
fsub
arpl
icebp
mov
push
pop
sbb
jnp
adc
dec
popf
or
xchg
inc
fs
pop
mov
mov
call
mov
fsubl
pop
roll
sub
lea
clc
shlb
andb
scas
lock
and
sahf
push
mov
rol
inc
pop
fnstenv
mov
ret
ret
cmp
and
add
sbb
and
adc
sub
or
in
xlat
int3
or
stos
inc
fdivrs
ret
inc
jo
inc
sub
cmpsl
repnz
cmp
rorb
js
cmc
xchg
sbb
test
aaa
push
push
xor
mov
pop
sub
add
mov
jmp
pushf
hlt
inc
mov
add
addr16
test
pop
jns
ja
test
out
int3
test
push
rorb
test
notb
int3
loop
xchg
scas
adc
test
hlt
arpl
mov
push
sub
adc
mov
hlt
push
mov
xchg
jbe
mov
test
xlat
adc
shll
and
fs
out
fisttpll
lods
cmp
fidivs
or
in
test
mov
jb
in
leave
xchg
push
fdivrl
jno
shlb
mov
pop
jbe
das
repnz
lock
rcrb
popa
cmp
sub
aas
dec
add
push
xor
mov
iret
lock
mov
in
and
inc
lahf
popa
int
repnz
push
cmpsl
xchg
dec
xchg
mov
adc
sub
rclb
add
and
add
mov
lods
push
adc
cltd
insb
lahf
lock
es
out
mov
lods
xchg
jmp
jle
adc
into
dec
cmpsb
sbb
add
cmpsb
stos
inc
mov
in
stos
xchg
jmp
push
or
cmpsb
pop
popl
cmpsl
aam
xor
in
repz
jmp
mov
push
icebp
pushf
mov
fmull
lods
cli
mov
jo
frstor
out
imul
js
lds
dec
mov
add
and
fcmove
cli
insl
popf
dec
add
or
js
add
adc
mov
lock
cmpsl
mov
rorb
dec
movsl
dec
mov
push
sub
in
addr16
xchg
stos
and
shrl
dec
stos
xor
push
jnp
in
mov
imul
je
jmp
sub
stos
lret
les
sbb
shlb
jp
adc
test
jmp
sbb
call
push
add
stos
int
nop
out
popa
sbb
lret
movb
cmp
iret
mov
pop
mov
dec
shrl
ret
inc
inc
and
dec
out
and
sbb
add
mov
repz
xlat
mov
pop
pusha
in
out
mov
add
mov
or
sub
aaa
dec
inc
cmp
cmp
sar
mov
imul
mov
fldt
mov
fsubl
xor
cmp
jge
andl
je
xor
clc
scas
mov
pusha
inc
or
test
jno
out
jbe
and
mov
pop
pop
lods
and
jg
ss
js
fidivrs
pop
add
mov
sub
ljmp
lret
pusha
cmp
adc
loope
in
adc
aas
jg
iret
add
sbbb
pop
in
movsb
test
pop
push
in
lods
lret
or
dec
or
stos
pop
ds
sbb
out
push
jge
xchg
cmpsl
mov
jecxz
mov
pop
dec
adc
cld
inc
inc
mov
pusha
sbb
popa
aam
pop
mov
mov
mov
call
push
aaa
popa
lods
push
adc
jne
testl
aad
sbb
sub
or
cmp
add
rorb
mov
xlat
fists
movl
scas
inc
int3
jecxz
xchg
add
add
sub
stos
jo
cli
mov
jl
adc
adc
jbe
clc
ret
jge
cmp
inc
xor
add
insl
in
jo
mov
cmpsl
mov
nop
sub
mov
hlt
in
ja
ja
loopne
jmp
scas
cmc
push
and
ret
inc
movsl
test
mov
or
or
pop
dec
jg
lret
aad
or
es
cmp
pop
mov
xor
js
out
inc
sub
sub
dec
cwtl
aaa
or
mov
dec
adc
fdivrs
jo
lods
mov
sub
add
sub
cmp
ret
into
mov
push
test
sub
push
fstl
pop
push
push
or
outsb
dec
out
pusha
out
decl
inc
leave
out
sbb
icebp
inc
and
clc
scas
pop
or
add
xlat
mov
test
fisttpl
mov
enter
sti
xchg
or
cmc
mov
ss
ret
and
nop
aam
mov
sub
mov
sbb
out
sbb
inc
stc
mov
adc
je
movsb
pop
std
int
xchg
push
imul
mov
and
sbb
fdiv
test
cmp
cmpsb
add
push
mov
pop
fstps
fwait
xlat
push
cltd
add
jno
dec
jne
pushf
mov
mov
pop
mov
cmpsb
inc
push
aad
fdivrl
in
fldt
pop
leavew
dec
bound
mov
push
push
jmp
xor
mov
lahf
cmp
int
fidivrl
or
jnp
in
loope
push
adc
cmpsl
enter
xor
sub
mov
cmp
mov
push
cmpsb
pop
ret
adc
pop
out
movsl
cmpsl
sub
xor
xchg
push
repz
ja
cli
xchg
xchg
sub
rol
xor
cmpsb
es
out
into
cmp
xor
pop
lea
inc
lcall
movsl
push
or
jle,pt
mov
xor
repnz
or
inc
mov
repnz
imul
lret
push
movsl
fwait
inc
mov
adc
xchg
loopne
rcll
pop
rcrl
adc
pop
mov
test
mov
cltd
cmp
ljmp
subl
push
incb
sub
mov
std
cld
add
cmpsb
mov
iret
shll
mov
into
xorl
mov
push
aad
or
jp
pop
cmovno
pusha
lret
lret
sbb
test
pop
jbe
call
adc
mov
dec
mov
arpl
pop
insl
js
push
push
popa
mov
loope
orb
jg
jmp
jmp
jl
idivb
andb
xor
inc
negl
cltd
mov
dec
xchg
idiv
push
sti
jb
xchg
xor
fcoms
ds
scas
nop
in
jb
mov
pop
push
adc
movb
inc
add
inc
jae
push
adc
cmp
test
shr
sbb
daa
out
and
cmp
mov
cmpsl
es
add
cmp
jb
xchg
notl
jae
pop
mov
dec
pop
and
inc
xor
out
fldcw
es
popf
sub
stos
mov
mov
xchg
imul
inc
imul
loop
icebp
xchg
mov
js
test
movl
push
icebp
xchg
stc
pop
inc
aad
loop
dec
jp
mov
dec
std
xlat
mov
cmp
adc
in
push
stos
xchg
pop
pusha
sarb
fstps
repnz
mov
repz
push
sbb
insb
test
sub
rorb
or
jbe
adc
mov
and
into
call
and
fdivrl
out
cmp
cwtl
aam
cwtl
clc
shll
in
mov
gs
cmp
leave
shrb
popf
test
jno
sub
inc
xor
fldenv
test
dec
ss
jb
scas
gs
and
jbe
jno
div
jno
cld
adc
mov
dec
mov
cmp
fistpll
push
repnz
mov
mov
movsl
fcomps
and
fcompl
jecxz
arpl
imul
xor
in
out
or
xchg
rcrl
jae
mov
ret
xor
pop
fsts
or
in
dec
data16
mov
outsb
sub
sbb
and
mov
mov
pop
lea
and
aas
sub
movsl
shufps
adc
and
adc
pusha
lret
push
xor
xchg
xor
popf
xor
clc
mov
jo
mov
push
add
loop
arpl
or
cs
les
lcall
into
mov
inc
mov
xlat
dec
sbb
sub
loopne
push
lret
dec
mov
lods
add
dec
mov
and
pushf
ljmp
sti
dec
cmp
pop
and
xchg
xor
outsb
xchg
fwait
sub
fldenv
mov
cmpps
cmp
sti
add
or
fdivr
push
leave
sub
xor
decb
xchg
jne
imul
imul
adc
flds
lods
out
lods
sub
daa
mov
dec
xchg
movsb
scas
mov
pop
xor
in
push
xchg
movsb
dec
mov
lods
imul
movsb
pop
dec
mov
insb
pop
ret
cmp
add
push
popf
or
jl
or
push
out
pushf
sub
movsb
xchg
sub
lahf
ljmp
rcl
xor
divl
jl
aaa
pop
int
int3
loopne
aad
std
repnz
push
and
fisubl
cs
or
push
int
pop
nop
sarb
aad
sub
les
das
inc
repnz
dec
pop
popa
nop
rcrl
js
test
in
xor
pushf
dec
popa
das
shlb
js
mov
mov
bound
pusha
insb
shrb
nop
xor
out
mov
cmp
jne
jle
es
stos
movsb
subl
mov
or
xchg
pushf
mov
push
nop
iret
xchg
in
mov
or
roll
xchg
aad
pop
nop
sub
jb
ret
stc
mov
sbb
xor
ret
subb
mov
or
push
adc
push
mov
pop
push
mov
xchg
hlt
and
fs
inc
pop
inc
fldcw
icebp
push
mov
shrb
pop
adc
scas
nop
jg
or
pushf
pusha
dec
arpl
test
out
sub
fisttpl
iret
sbbl
test
sbb
lahf
cld
addr16
sbb
inc
and
imul
ja
xlat
shl
pop
dec
sub
pop
cmc
dec
lahf
shlb
mov
outsl
call
push
jb
mov
aaa
push
ja
add
xchg
add
xorb
out
cmp
xchg
ja
loopne
rcrl
xchg
cmp
mov
pushf
popa
out
sti
jge
in
inc
in
and
fs
pop
stc
xor
mov
pop
shl
cmpsl
sub
mov
stos
lcall
mov
es
loopne
rorb
and
xor
mov
or
imul
xchg
add
inc
mov
jae
fisubs
data16
xlat
bound
xor
mov
ret
sub
sub
bound
sub
push
icebp
xchg
push
push
adc
mov
or
and
inc
lret
jns
dec
sbb
cmp
dec
fdivrs
int3
idiv
cmpsb
or
add
push
mov
add
stc
lcall
sub
inc
aas
test
daa
js
inc
mov
sbb
outsb
cmc
mov
lcall
add
jbe
fadds
xchg
das
adc
arpl
inc
dec
cbtw
jmp
add
or
hlt
sti
lret
jle
ror
and
imul
shll
loop
dec
pop
pop
mov
lods
cmp
or
sti
cwtl
nop
test
cmpsb
daa
jbe
in
lret
xchg
and
orl
dec
or
iret
aaa
sbb
and
mov
into
and
fdivrs
mov
decl
sub
subl
pop
xchg
pushf
push
push
daa
xchg
cs
int
arpl
jb
cmc
push
jge
sbb
and
mov
xor
lods
xor
inc
xchg
push
or
sub
jp
repnz
jne
cmpsb
cld
push
mov
push
cmp
iret
inc
push
dec
push
jnp
sbbb
cli
stc
and
dec
cmp
das
sbb
push
aad
xchg
addr16
and
xor
dec
popf
or
and
scas
inc
mov
cli
add
fwait
inc
stos
or
pop
push
movhps
sti
ret
fucomip
mov
mov
mul
lcall
adc
jnp
aam
push
loope
xor
mov
xchg
dec
arpl
cmp
pop
js
and
inc
mov
push
loope
cwtl
fcmovnu
popa
pop
dec
push
wrmsr
into
mov
and
ret
dec
mov
lret
rsqrtps
xchg
stos
inc
or
cli
loop
push
adc
insl
leave
fimull
push
cmc
nop
pusha
lcall
inc
cmp
into
in
push
dec
cmpsb
cmp
jg
fiadds
mov
mov
aaa
sbb
adcl
insb
lock
lods
into
stc
scas
mov
pop
bnd
push
aas
xchg
jns
test
jns
pop
cmpl
lret
dec
and
leave
pop
out
iret
sbb
add
aam
js
add
loop
mov
sbb
arpl
scas
jae
inc
pop
ja
cmc
cwtl
hlt
roll
cmp
leave
jl
mov
in
xchg
cwtl
lret
xchg
cmc
pop
mov
bound
push
mov
mov
filds
ja
int3
mov
lret
ja
frstor
call
leave
xor
arpl
push
pop
pop
adc
sahf
ficoms
in
push
cmp
aaa
sti
push
xchg
in
mov
xchg
dec
testb
adcb
pop
pop
into
dec
inc
cmp
or
stc
pusha
jae
or
xchg
mov
cmp
test
add
aad
lcall
mov
cltd
cmpsb
mov
adc
lods
jp
sub
fwait
adc
out
push
arpl
or
insl
xchg
test
push
cltd
push
mov
cmp
movsb
stos
and
insb
or
stc
mov
lahf
bound
jo
pop
xchg
sub
sti
cmp
jg
and
in
sub
int
sub
add
stos
cmp
sub
push
and
inc
jae
enter
aad
sbb
or
shlb
or
mov
ror
mov
push
incb
loope
mov
loop
insl
xchg
int3
mov
add
xchg
stos
xor
sti
push
jo
in
leave
stc
mov
inc
mov
addl
push
dec
cmc
cli
rolb
pushf
xlat
add
jg
push
repnz
pop
fs
sbb
dec
ljmp
notl
movq
das
and
mov
mov
mov
daa
push
adc
arpl
fwait
and
mov
in
cli
je
mov
repz
inc
push
js
into
scas
stos
lcall
xchg
test
aam
leave
sbb
jp
mov
xchg
mov
and
jecxz
dec
mov
aaa
fstpl
pop
rclb
dec
push
gs
push
mov
mov
imul
inc
negl
pop
aaa
inc
out
cmpsb
insb
fcmove
mov
insb
push
lods
out
mov
dec
mov
je
ja
int3
mov
fs
mov
ror
sti
pop
xchg
popa
lret
mov
jno
pop
sbb
or
aaa
or
loopne
push
sti
inc
inc
call
in
outsb
in
inc
call
dec
das
and
sub
loop
mov
ret
mov
mov
xchg
jmp
push
loopne
lea
jg
fistpll
jbe
js
out
fbstp
cmp
adc
repz
push
sub
in
push
ret
mov
dec
lea
pop
inc
add
sub
dec
test
fisubs
xchg
mov
out
add
push
stos
test
xchg
xchg
hlt
ja
and
mov
scas
jae
aam
jne
sbb
sub
pop
call
push
cmpsl
or
jbe
pop
in
mov
dec
jbe
dec
sbb
aam
ret
pop
pop
push
cld
jb,pn
nop
mov
or
and
dec
inc
gs
ret
jmp
adc
sbb
sub
xchg
adc
imul
push
ds
stc
sbb
mov
xchg
enter
call
inc
mov
push
scas
mov
dec
lahf
call
nop
push
int3
dec
mov
pop
cmp
jbe
jle
scas
xchg
mov
push
outsb
xor
mov
jne
call
adc
lret
lret
arpl
fimull
push
adc
mov
xchg
out
cld
imul
xorl
adc
in
icebp
outsb
mov
inc
lods
fidivl
add
aam
sub
mov
sub
lds
pop
sbb
cmpsb
fidivl
jge
xor
mov
mov
rol
cli
hlt
jle
movsl
or
push
add
adc
testb
sti
ficoml
pop
pop
add
and
icebp
inc
into
push
mov
out
dec
xchg
sub
jmp
scas
inc
mov
repz
ss
and
xchg
out
fisubrs
mov
mov
repnz
mulb
xchg
mov
xchg
jl
jl
out
sub
arpl
sahf
insl
push
mov
lcall
das
dec
rol
pop
out
lods
adc
sub
addr16
stos
cwtl
push
add
fcmovne
mov
lods
cmp
inc
pop
dec
lods
pop
in
sbb
fcoml
inc
fisubrs
xlat
add
xor
jb
jle
call
or
cmpl
cli
or
or
jno
sub
test
loop
les
repz
sti
test
push
push
cwtl
push
or
in
xchg
mov
mov
insl
cli
int
inc
pop
stos
jg
sub
incl
inc
test
mov
pop
inc
out
inc
pusha
call
jae
filds
lahf
pop
mov
repnz
lea
xorl
imul
aam
lret
cmp
std
les
in
pop
sub
mov
imulb
xlat
or
roll
popf
sub
dec
fpatan
pop
mov
pop
push
push
push
icebp
mov
mov
mov
or
xor
mov
inc
in
mov
xor
dec
sub
movsb
lds
mov
mov
movb
sub
inc
test
nop
or
add
sub
inc
or
lods
mov
inc
xchg
inc
in
jle
outsl
movsl
jb
push
and
test
movsl
lods
mov
mov
cwtl
adcl
pop
jle
mov
lds
lret
or
pop
jle
sbb
les
add
mov
movaps
jmp
stos
inc
ss
push
lahf
adc
arpl
add
jl
lcall
mov
jp
mov
aam
pop
mov
cmp
push
xchg
cmpsb
ficompl
and
aam
add
push
andb
std
jmp
sbb
popf
jnp
in
inc
inc
lahf
mov
fwait
push
aad
mov
cld
dec
mov
push
or
push
inc
add
aaa
fstpt
lret
addb
sbb
xchg
mov
jp
popf
test
test
sub
and
lods
mov
pop
in
mov
push
stos
jp
lret
or
cltd
inc
into
cmc
lods
or
jae
dec
icebp
sub
lret
and
mov
sarl
or
xchg
dec
call
int
adc
sbb
mov
fcoml
jle
push
pop
leave
outsl
and
ret
movsl
pop
push
inc
std
adc
add
inc
mov
sbb
cli
jo
or
sbb
lock
cwtl
in
lea
dec
jae
test
movsb
icebp
out
xor
enter
vmovups
das
fcompl
add
bound
dec
ljmp
mov
cs
lahf
leave
xchg
lds
hlt
mov
or
jnp
and
movsb
mov
jne
mov
lods
aam
call
shrl
jl
cmpsb
sbb
into
xor
mov
in
ds
cmpsl
xchg
dec
inc
cmpb
insl
pop
jecxz
push
jne
repz
lcall
lock
fcomps
aam
and
xor
inc
stc
sbb
xchg
mov
mov
mov
and
inc
sbb
rcll
push
cltd
shl
sbb
fsubr
adc
push
test
dec
ds
mov
into
and
es
clc
sahf
imul
push
int3
mov
cltd
mov
push
sarl
or
and
jp
fcmovnu
fsts
push
xor
mov
iret
or
mov
test
outsl
xor
adc
xchg
cwtl
xor
add
mov
mov
dec
mul
add
fadd
pushf
imul
cmp
jnp
pop
sub
mov
out
pop
push
das
inc
lock
pop
ja
dec
jbe
aam
shrl
das
mov
jno
cs
inc
mov
jae
sbb
test
pop
dec
cmpl
adc
sub
fstpl
dec
mov
push
punpcklwd
pop
inc
sbb
jg
es
pushf
testb
adc
ja
repnz
neg
leave
loope
iret
shrl
dec
sub
push
or
inc
loope
mov
lods
scas
mov
fsubrp
jne
inc
mov
lahf
jae
iret
mov
test
mov
into
push
mov
pop
dec
stos
and
push
jbe
subb
mov
xor
leave
js
rol
mov
or
sbbl
stos
cmp
adc
mov
inc
sub
out
mov
or
pop
xchg
xchg
adc
adc
nop
rcl
in
jle
sbb
lret
add
lret
cmp
cld
js
xchg
shlb
jle
mov
dec
gs
enter
sbb
push
mov
inc
adc
inc
loope
movsl
fidivl
cmp
mov
lret
fimuls
imul
dec
out
or
test
push
sahf
repnz
push
sbb
fwait
mov
jle
dec
lods
clc
or
setge
rorl
stc
loope
leave
enter
mov
test
loope
in
and
fcomp
ds
jnp
inc
push
mov
lods
inc
call
mov
add
lcall
push
cltd
adc
js
sub
inc
or
int3
mov
jo
xor
int3
xchg
out
shrb
and
mov
out
or
cli
add
in
and
sbbl
loop
sub
or
jae
in
in
stos
jo
scas
mov
push
cmpl
jo
adc
dec
add
pop
aam
mov
push
andb
and
out
jbe
arpl
jp
push
scas
mov
leave
push
pop
mov
mov
stc
out
lea
loop
lcall
hlt
mov
fstpt
sub
sti
push
push
pminsw
ja
cmc
dec
mov
inc
test
xor
sub
pop
or
cmp
and
adc
int3
adc
je
notb
dec
int3
dec
test
les
lods
scas
push
jl
or
ret
scas
fwait
xlat
inc
inc
je
and
add
sbb
ss
cmp
push
jno
pop
icebp
or
mov
mov
inc
addl
xchg
jo
xor
mov
fisubs
andb
sub
inc
sbbb
pop
fistpl
mov
mov
daa
imul
shll
pop
ja
in
xor
cld
jl
outsb
jle
gs
jl
js
aam
sub
jbe
fs
test
cmc
aas
nop
mov
stos
or
jg
cs
mov
lcall
sub
pop
orl
in
mov
inc
mov
aaa
xor
mov
out
pusha
sbb
cwtl
gs
cld
push
cmpsl
test
nop
scas
or
jb
pop
lods
in
xchg
jecxz
dec
jp
jne
mov
dec
mov
mov
mov
add
xor
in
dec
inc
inc
arpl
push
mov
movsl
fcoml
lods
cli
mov
mov
mov
push
sbb
mov
or
jbe,pt
andl
push
stos
rol
inc
add
ja
xlat
int
or
dec
scas
or
xor
sub
sbb
push
ds
and
cltd
rcrl
ljmp
and
xchg
int
sub
xor
sub
jbe
test
std
xchg
sbb
mov
adc
imul
adc
lds
lea
and
dec
bound
xchg
mov
mov
cmp
mov
loop
cmp
test
pop
enter
jne
test
inc
sub
cli
mov
inc
xor
pop
inc
cmp
and
out
sub
add
mov
push
inc
aaa
xor
addr16
pusha
loop
sub
sti
jl
pop
mov
xor
inc
add
mov
mov
adc
push
mov
in
pop
imul
aaa
outsb
mov
lock
mov
in
jne
mov
mov
stos
xchg
mov
stos
mov
fwait
dec
lret
xor
imul
jbe
inc
aam
scas
out
aam
sbb
add
lret
dec
daa
pop
sub
in
add
sbb
mov
adc
mov
daa
jbe
lret
push
cmc
lock
mov
fstp
movsb
dec
or
data16
mov
jno
and
mov
imul
test
arpl
cmpsl
jmp
sahf
mov
int
sub
cmp
fwait
xchg
push
jbe
mov
cmp
test
movsl
aam
jp
clc
lods
jae
cltd
dec
scas
js
popa
scas
ss
jns
addr16
outsl
les
sbb
and
lret
shlb
das
pop
inc
daa
out
xchg
xor
add
sub
or
jns
push
cmp
xchg
push
mov
and
pop
das
add
es
fisubl
push
cmp
scas
ss
loopne
imul
push
incl
pop
cmp
dec
lea
test
sbb
push
push
js
xchg
push
out
test
cs
mov
push
sub
push
add
xchg
inc
ja
das
adc
pop
add
xchg
fmull
shrb
jbe
mov
or
fst
or
outsb
fdiv
xor
call
aas
test
sub
divl
push
cmc
add
lods
es
sbb
xor
fistpll
inc
test
scas
fildll
adc
xor
ret
call
test
stos
sub
mov
cmp
pop
or
fnstcw
aaa
and
dec
cs
cmpsb
dec
repz
fisttps
popf
ds
adc
or
push
cmp
inc
and
jecxz
mov
jb
sahf
xchg
pop
call
arpl
adc
mov
pushf
andb
push
jle
out
push
lret
int3
shlb
xchg
dec
add
jne
dec
push
leave
lcall
push
ds
sub
dec
mov
add
in
call
pop
adc
jp
mov
xchg
cmc
stc
and
xorl
mov
xlat
scas
ret
cmp
stos
push
pop
xchg
push
movsb
jecxz
out
xor
or
loope
imul
add
xchg
and
sbb
in
fsubrl
ja
pop
xor
sbb
xorl
fstpl
lods
cmpsl
mov
adc
inc
pop
dec
int
add
es
lahf
enter
mov
or
xor
inc
mov
mov
cmpsb
sbb
inc
and
jge
in
clc
mov
pop
mov
pop
dec
cmpsb
mov
inc
pushf
sub
jbe
push
inc
push
lods
mov
lret
sub
rcl
outsb
xchg
or
pop
push
in
mov
jmp
mov
iret
enter
pop
gs
and
in
add
icebp
movsl
shrb
add
call
push
push
int
sub
adc
jp
push
push
dec
jbe
pandn
and
out
dec
fsubs
push
in
ljmp
xchg
cmpsl
pop
xchg
or
mov
xchg
and
push
sbb
addr16
pop
sbb
loopne
ret
sub
cmp
in
lcall
jmp
mov
cmc
gs
mov
sub
cmp
inc
cli
xchg
popa
jecxz
pop
or
dec
mov
cmpsl
mov
pop
imul
std
call
cmc
rcll
stos
jl
pop
das
hlt
js
shll
les
jle
dec
pop
loop
and
cmp
aam
mov
cmp
in
xchg
shrl
push
cmp
ds
arpl
and
fstpl
push
das
cmp
lret
adc
and
cmp
shl
mov
cltd
jecxz
int
xchg
dec
or
sbb
fsubrl
shrl
sahf
inc
loopne
test
sbb
push
xchg
rol
push
pop
or
sbb
in
inc
loopne
clc
dec
call
int3
xchg
out
sub
cwtl
mov
sub
lret
outsb
add
lods
sti
jnp
mov
insl
rorb
pop
dec
push
pop
pop
dec
in
ffreep
ret
pop
xorb
shlb
fsubl
pusha
mov
cmc
aam
loop
in
push
lret
movsb
pop
xchg
subb
and
mov
adc
stos
popf
pop
out
addr16
test
or
dec
add
mov
xchg
jl
and
imul
test
stc
xor
mov
mov
test
jb
out
sbb
addb
push
xor
incl
jg
jge
mov
inc
xor
and
push
lock
sub
imull
adc
push
sar
dec
dec
cmp
sahf
inc
and
hlt
sub
or
inc
orb
mov
daa
imulb
inc
pushf
add
aam
xchg
out
imul
lods
cmpsl
jecxz
iret
push
mov
push
ret
inc
jae
dec
movsb
int3
dec
iret
aad
sub
in
jmp
call
rep
stos
mov
shll
lock
fwait
jecxz
inc
or
pop
in
movb
addr16
jno
in
xor
xchg
or
dec
shl
aaa
xchg
or
cmp
fwait
leave
aad
push
add
add
data16
inc
push
fadds
shll
mov
imul
leave
adc
and
sub
jns
fwait
out
mov
sbb
pop
xchg
inc
jmp
ret
jae
sub
push
cmpsl
je
adc
cwtl
push
jp
adc
pop
lods
xor
push
in
dec
sub
bound
cltd
sbb
inc
sbb
cmpb
push
enter
jmp
jnp
cmpsb
shlb
push
jl
pop
leave
cld
lea
cwtl
movsl
xchg
mov
int3
mov
inc
dec
je
mov
mov
rolb
sbb
cmp
test
fldcw
mov
aas
ljmp
and
sub
push
and
and
or
push
cmpsl
fists
insb
lahf
sbb
add
fmuls
mov
push
scas
shll
les
push
push
push
cmc
push
movsb
lcall
mov
pop
cmp
in
dec
mov
inc
aas
jae
in
sub
mov
cmc
dec
push
jb
fcomps
xchg
int3
ljmp
sub
lret
pop
xor
bound
push
mov
jge
fdivs
sbb
inc
lea
mov
arpl
push
fs
jecxz
out
mull
xchg
cmp
repz
lret
and
mov
adc
xor
scas
mov
xchg
call
clc
fldenv
cmp
mov
lret
push
in
xchg
mov
sbb
stc
mov
push
into
xchg
leave
or
addr16
xchg
sbb
pop
and
js
mov
lods
cmpb
push
push
sbb
xchg
test
adc
dec
sbb
xlat
ffreep
int
cmp
clc
xrelease
test
shrb
push
and
pop
sub
sub
hlt
fsubs
das
add
adc
xchg
jae
int
dec
sbb
xchg
popf
gs
je
bound
mov
mov
pop
mov
imul
dec
or
sbb
jns
jnp
xchg
sub
or
cmp
xor
push
scas
jb
lock
scas
push
pop
pusha
imul
dec
mov
movsl
and
pop
gs
stos
adcl
es
out
dec
lods
mov
ss
mov
pop
xchg
imulb
pop
loopne
and
cmp
jle
sbb
pop
fwait
out
push
aaa
aas
push
in
inc
mov
pushf
cltd
ds
cmp
and
mov
fcmovne
int
std
xor
dec
mov
xchg
cmpsl
push
jge
adc
sbb
jb
adc
mov
hlt
lahf
jmp
lret
call
pusha
repnz
inc
aaa
jecxz
mov
xorl
divl
popa
into
mov
test
mov
verr
femms
std
fwait
icebp
mov
sti
pop
movsl
jp
ret
iret
shl
outsl
push
jo
fstl
xchg
imul
fmul
add
idiv
arpl
lea
arpl
nop
sub
jb
aas
in
sti
mov
sbbl
mov
or
cld
adc
loop
inc
movsb
dec
jecxz
outsl
outsl
push
adc
addr16
cwtl
add
fdiv
mov
jb
pop
jbe
pop
dec
jge
je
lods
pop
mov
lcall
dec
jg
inc
shll
lret
xchg
fisttps
mov
test
pop
mov
sahf
pop
test
xor
sub
mov
mov
push
push
mov
aad
and
mov
fs
mov
insb
cmp
pusha
or
ds
fxch
push
inc
push
imul
cmpsb
mov
test
cmp
mov
xor
loop
das
loope
inc
call
nop
bound
jo
das
call
addl
dec
cltd
movsl
nop
adc
inc
in
mov
jb
mov
cli
cs
push
je
pop
adc
mov
int
cs
jns
cmpsl
repnz
popf
test
cmp
mov
mov
jl
fs
cwtl
cmp
out
mov
mov
xor
mov
cmp
testl
xchg
mov
int
push
ret
adc
sub
pusha
xchg
aad
loope
pop
xchg
in
xor
mov
popf
cmpl
push
nop
mov
or
lods
push
cmp
test
stos
ficompl
cmpb
inc
cmp
sbb
jns
inc
rcrb
or
fwait
xor
inc
insl
xlat
or
nop
and
mov
jge
fiadds
pop
fwait
jae
add
mov
pop
adc
stos
jno
lret
mov
mov
mov
sub
lock
xchg
cmp
mov
jb
inc
fwait
ret
or
cmp
aad
ret
sub
mov
or
mov
jge
in
push
arpl
adc
push
mov
adc
pop
lds
outsb
pop
adc
gs
sbb
sbb
adc
pop
test
jns
and
jne
mov
ffree
mov
cwtl
or
fstl
cmpb
sub
or
cmpsb
push
inc
fisttpl
inc
daa
xor
push
jle
adc
sar
mov
cwtl
mov
inc
cli
insl
sub
push
sub
add
sub
bound
dec
inc
or
nop
test
push
mov
inc
sub
inc
push
leave
shll
or
push
mov
inc
jecxz
add
sub
call
push
push
mov
adc
mov
jns
leave
ret
fmuls
adc
and
orb
push
int
ja
sub
mov
sbb
adc
pop
mov
mov
enter
lock
xchg
pop
xchg
adc
mov
movsb
loope
lds
das
mov
sarl
mov
push
adc
stos
ret
int3
aaa
rorl
push
out
and
push
pop
test
movsl
imul
or
lahf
outsb
loop
cmp
dec
xor
lcall
jl
rol
inc
lea
cli
mov
jle
loopne
into
or
out
jne
stos
lods
stc
or
sahf
push
adc
cltd
cmpsl
xchg
pop
xchg
sub
shlb
mov
pop
adc
insb
inc
mov
outsl
outsb
or
cwtl
imul
fs
es
inc
add
cmp
jle
lret
mov
sbb
adc
roll
lahf
fldcw
push
jns,pn
cmp
push
jmp
cmp
fcoml
or
push
out
aaa
xchg
push
mov
enter
push
cmp
outsb
cltd
dec
push
nop
push
orl
fcmovnb
test
lods
push
mov
and
sbb
or
pop
dec
mov
in
fidivs
cltd
push
daa
sub
mov
aas
pop
jmp
fnsave
sti
adc
mov
rcrl
dec
rcll
ss
shll
xor
pop
xor
and
flds
filds
jecxz
mov
test
cli
or
mov
pop
out
filds
mov
out
or
cmp
icebp
mov
push
xor
inc
and
jecxz
push
sbb
inc
std
call
inc
repnz
pushf
orb
ja
adc
cmc
test
scas
out
cmp
jp
mov
sub
int
jmp
daa
popa
lret
into
mov
jae
pop
push
jmp
inc
movsl
shlb
jbe
cmp
mov
xchg
xor
dec
mov
ficoml
ret
gs
mov
stos
out
and
icebp
xchg
into
jl
jp
push
dec
lret
fstl
or
das
add
aad
imul
sbb
cmp
clc
cmpsb
testl
push
popa
push
jge
pop
std
scas
sub
shrb
push
and
xor
and
jne
shlb
mov
loop
cld
cmp
sti
or
xor
divl
mov
sbb
shll
and
aam
add
jb
das
push
insb
fistl
inc
ret
pop
pushf
or
cmp
mov
or
cltd
push
jne
sbb
push
and
xorb
mov
cmp
mov
ljmp
mov
push
cmp
cmp
mov
adc
xlat
rorl
repnz
roll
in
inc
add
pop
mov
cmp
inc
sbb
sahf
inc
adc
cltd
push
setb
test
ja
mov
push
sub
jecxz,pn
lcall
mov
inc
fdivl
ret
rorl
jl
stc
ljmp
cli
in
pusha
cmc
sbb
cmp
xor
dec
mov
pusha
stc
jb
sbb
out
enter
mov
test
out
aaa
push
pop
adc
outsl
xor
push
ret
jns
and
cltd
sbb
dec
rcr
add
popf
hlt
adc
xor
or
in
mov
sub
adc
pusha
mov
cmpb
jle
dec
insb
dec
in
xchg
add
lcall
frstor
int
sbb
jg
andl
sti
int
xor
bound
mov
cwtl
xlat
out
jbe
clc
ret
jg
and
std
sub
push
mov
cs
test
rolb
mov
lahf
adc
mov
jecxz
sti
icebp
lods
jg
outsl
call
aaa
enter
mov
adc
fnsave
aad
dec
push
inc
daa
cld
sub
enter
mov
xchg
or
pop
mov
je
add
jne
and
cmp
xor
pop
mov
insb
mov
je
xor
sub
int
call
inc
or
mov
push
out
das
and
jns
leave
cltd
mov
mov
ret
push
push
mov
xor
inc
mov
jo
lcall
push
pop
mov
sub
mov
adc
pop
nop
cmp
add
sti
stos
stos
inc
cwtl
lods
ss
mov
cmpsb
outsl
fsubl
leave
lock
jae
pop
or
stc
pmaddwd
jmp
arpl
xchg
xor
xchg
mov
icebp
add
push
mov
aad
aas
ja
push
mov
cs
mov
lods
inc
shrb
mov
out
mov
repz
sarl
lcall
cld
mov
dec
push
dec
mov
push
adc
les
dec
mov
push
mov
inc
cmp
ja
jge
rol
sahf
mov
mov
mov
push
lret
mov
or
std
adc
dec
adc
mov
xchg
mov
popa
lods
inc
stc
aas
in
mov
and
xchg
ret
mov
adc
jp
in
sti
sti
pop
imul
cmpsl
and
movsb
xchg
adc
xchg
into
pop
iret
jns
pop
cmp
cld
adc
add
push
scas
cmp
xchg
out
aad
xor
sub
aad
lret
xchg
sub
fiaddl
hlt
dec
add
rclb
in
lret
in
out
stos
jp
and
rcl
inc
and
int3
xchg
icebp
xor
popa
jle
inc
iret
out
jae
ds
dec
in
cmp
roll
decb
mov
push
filds
enter
fdivr
les
and
mov
mov
in
stc
xor
shll
mov
popf
mov
push
mov
ret
fs
mov
mul
std
loope
sahf
orl
add
mov
push
pop
xor
jle
sarb
dec
mov
scas
inc
mov
popa
aam
push
daa
std
sbb
mov
xchg
xchg
out
cmp
mov
js
mov
cmp
dec
add
adc
mov
mov
ss
movsl
xchg
adc
or
mov
sbb
test
push
test
lcall
and
test
cmp
xchg
mov
cld
adc
pop
add
or
pushf
inc
sub
jbe
outsb
in
lcall
xor
in
test
lret
mov
loopne
and
dec
repz
push
xchg
fisubrl
and
adc
mov
in
jmp
in
and
aam
enter
mov
ds
jbe
sub
in
lds
imul
out
adc
cmp
cmpsb
xchg
cmp
loope
pop
inc
mov
inc
jg
daa
lret
lret
rorl
scas
mov
jb
outsl
pushf
adc
push
sti
jno
int
xchg
sub
adc
cs
sbb
lcall
jns
leave
leave
xchg
addr16
adc
xor
lcall
jp
mov
and
adc
and
xor
adc
imul
push
xchg
int3
icebp
into
into
and
in
mov
cmp
sbb
pop
int
or
decl
out
and
jle
in
test
pop
push
mov
call
xchg
jnp
push
mov
lods
fbstp
add
rcrl
jbe
mov
loopne
jmp
xchg
cmpb
outsl
xchg
cmp
sbb
sub
xlat
rclb
fadds
add
jp
orl
pop
push
into
dec
xorl
leave
lret
dec
fstl
subl
in
pinsrw
call
xchg
adc
cli
daa
cltd
xchg
or
push
jbe
push
jge
mov
fs
and
cmp
push
fdivp
jmp
dec
add
repnz
push
pop
fisubl
sub
adc
lcall
jge
fdivs
dec
aam
inc
sarb
mov
dec
jae
mov
mov
or
fdivs
and
xlat
faddp
sahf
xor
test
lea
test
and
test
iret
mov
sbbb
aam
mov
jae
cmc
xchg
sbbl
out
aad
push
imul
xchg
xchg
cld
jmp
cltd
adc
arpl
push
test
pushf
pop
out
add
cli
jne
mov
inc
jge
icebp
jp
mov
xor
out
mov
push
mov
mov
aad
cmp
fmul
dec
dec
in
frstor
in
cmc
arpl
push
inc
push
push
add
out
and
push
aaa
inc
mov
cmp
jno
aaa
decl
mov
pop
mov
outsl
clc
add
push
shlb
dec
jecxz
pop
stos
xor
and
ret
push
mov
adc
pop
sti
inc
push
jp
mov
scas
pop
out
imull
dec
push
lods
ret
mov
imul
lcall
adc
inc
xchg
clc
and
lds
stos
fisttpll
mov
js
jl
mov
shlb
lret
adc
out
jl
sub
pushf
divl
push
clc
mov
nop
xchg
lahf
dec
popf
int3
out
icebp
enter
fcoms
out
ror
push
jmp
in
jae
cmpsb
push
fsubs
inc
lahf
adc
sbb
add
pop
lret
sub
lret
jae
and
pusha
movsl
pop
inc
stc
leave
int
sub
jno
and
adc
addb
inc
imul
test
xor
ret
popa
inc
outsl
mov
into
mov
jp
nop
pusha
aaa
repz
stos
sub
movsb
add
add
inc
lea
lcall
js
movsl
fiadds
cmp
jge
mov
cmp
lahf
mov
adc
sbb
push
or
xchg
shl
lods
leave
inc
push
push
addl
scas
in
pop
add
xchg
movsl
mov
pop
push
nop
orb
scas
and
jbe
add
mov
inc
jae
sbb
adc
outsl
sbb
int3
mov
shrl
fldenv
jle
push
inc
rclb
fldenv
stos
rclb
push
pop
push
mov
mov
mov
pop
test
add
mov
push
rcr
in
fldt
mov
pop
int
repnz
xchg
ja
jg
jl
aad
adc
pop
shll
insb
iret
into
cmc
and
xor
or
cmp
xchg
or
out
xchg
loope
repz
les
dec
inc
repz
sbb
xchg
hlt
arpl
stos
cmpsl
aad
push
shll
xor
test
sbb
ljmp
mov
mov
lea
sub
int
push
cs
mov
sbb
jns
in
and
push
aad
test
jp
adc
adc
icebp
loop
shll
clc
sub
filds
push
movsb
lds
daa
ret
adc
fdivr
pop
sbb
mov
sub
jne
jae
jno
outsl
xorb
rclb
pop
cmp
jae
lock
mov
push
xchg
sub
mov
dec
inc
sti
imul
rol
sarb
sub
push
mov
popa
cmpsl
mov
test
test
dec
fsts
jle
fldl
fcmovu
inc
jbe
jns
mov
js
adcl
push
rep
fdiv
push
push
out
inc
insb
add
pop
out
lahf
add
mov
pusha
adc
mov
mov
cmpsb
fsubs
lods
out
pop
lret
clc
in
cmp
jge
negl
aaa
fiadds
pop
cld
mov
mov
pop
mov
aas
add
fcoml
clc
lret
push
in
ficoms
jg
mov
out
cs
das
sub
sub
jp
ret
jl
clc
imulb
fwait
cmp
and
dec
or
pop
push
fisttpl
pusha
shr
int
js
add
adc
sub
mov
mull
pop
in
aam
dec
loope
jno
das
arpl
outsl
lods
pop
jmp
jae
daa
mov
inc
pusha
mov
push
add
sti
mov
lcall
fisttps
fstpl
cmp
mov
push
adc
dec
or
idivb
mov
sub
mov
rclb
std
loopne
cmp
and
out
mov
in
out
mov
sub
aaa
adc
bound
add
and
xor
pop
fisttps
in
dec
cwtl
mov
je
pop
push
lods
addr16
inc
shll
or
xlat
dec
and
adc
dec
add
mov
lcall
mov
outsb
lods
xor
outsb
sbbl
mov
cltd
pusha
leave
imul
mov
test
sub
xor
mov
mov
in
dec
mov
sub
adc
inc
out
fidivl
mov
mov
inc
jge
int3
in
daa
out
fisttpl
and
jnp
inc
push
dec
cltd
cltd
jno
ret
jl
sub
fistps
dec
xchg
lds
out
test
aam
mov
fs
add
cli
pop
pop
lcall
mov
ljmp
pop
test
arpl
push
pop
movsb
push
add
and
movsl
mov
cmpsb
mov
daa
push
mov
mov
mov
dec
lods
xor
push
into
loopne
aas
out
ja,pn
adc
add
imull
mov
ss
test
jno
xor
cld
loop
xor
pusha
sub
cmp
mov
jl
and
sbb
cmp
xor
and
cmp
sub
pop
in
adc
ret
aas
repnz
addr16
sub
rclb
data16
aas
sti
mov
cmpsl
mov
dec
mov
ljmp
dec
jnp
or
dec
xor
arpl
sub
pop
mov
push
punpckhwd
test
aam
es
cwtl
das
dec
arpl
xchg
jge
jecxz
jb
inc
jno
mov
loope
ret
rcrb
sarb
push
mov
dec
lds
cmp
roll
xor
xchg
xchg
or
push
inc
lret
ja
std
movsb
shll
jns
push
ret
shrl
fdivl
pop
cmp
adc
enter
mov
jge
out
xor
or
or
push
push
fdivr
pop
cli
fidivs
mov
scas
dec
outsb
or
push
push
icebp
mov
pusha
mov
andb
cwtl
push
jns
or
pop
mov
movsb
sbb
std
es
inc
pop
fbld
sub
std
inc
mov
movsb
aam
lock
dec
cli
xchg
popf
out
xchg
sti
push
add
xchg
in
pop
loope
loopne
jg
cmp
jmp
lret
cmc
test
movsl
cmp
idiv
adc
adc
out
sbb
cld
add
cmc
aaa
lret
cmp
jge
push
or
iret
mov
ja
pop
pushf
jno
movsl
add
mov
mov
nop
lcall
ffree
pop
pop
jno
repnz
adcl
into
dec
dec
add
sbb
lods
pop
js
pusha
add
outsb
sbbl
mov
je
shl
xor
sbb
and
jmp
test
push
sbb
push
jne
mov
lock
imul
orl
sbb
cwtl
test
xorb
pop
in
pop
outsb
ret
leave
pop
xchg
fmull
xor
out
ret
ja
fists
xchg
jmp
cli
stos
push
inc
js
lcall
mov
lods
rorb
mov
push
fmul
mov
xlat
out
data16
dec
inc
js
bswap
inc
mov
pop
mov
xor
jg
mov
fadd
fsubp
stos
pushf
jmp
xchg
ret
push
nop
fisttpl
or
dec
aaa
addr16
push
add
arpl
test
xchg
mov
and
mov
mov
jne
pop
and
js
fnsave
jbe
xor
cmc
mov
push
xor
sub
sub
push
loope
mov
gs
cli
insb
and
fmul
fucomip
mov
inc
dec
jae
dec
in
pop
sti
dec
push
lahf
loop
dec
and
mov
and
ret
gs
or
out
and
push
mov
xor
popa
sbb
pop
int
stos
xchg
cmpsl
adcb
xor
aas
sahf
cmp
lock
mov
fcmovbe
push
scas
adc
cltd
stos
fsubs
aad
xchg
mov
adc
into
testb
mov
mov
push
int
and
add
daa
and
data16
testl
ljmp
in
xchg
test
pop
and
jae
leave
loopne
adc
sti
fdecstp
cmp
shrb
imul
stos
xchg
mov
add
into
lds
inc
notl
push
xchg
push
adc
jno
xor
dec
mov
mov
sbb
repz
popf
pop
lods
stc
jo
into
insb
lds
or
fistpl
adc
shrb
xor
dec
out
popf
inc
je
push
xchg
pop
dec
rorb
in
push
inc
sbb
ja
je
mov
cltd
bound
insl
dec
and
shrb
rcrb
adc
int
inc
dec
push
ds
adc
stc
loop
in
xchg
mov
adc
mov
push
push
stos
fistl
call
inc
mov
cmp
lahf
ret
mov
mov
mov
cmp
xchg
pop
popf
mov
adc
rorl
add
jmp
outsb
fimull
push
mov
inc
lock
push
push
lods
ss
pop
mov
xchg
xlat
stc
or
nop
jnp
out
int3
aad
mov
dec
mov
pop
adc
rorl
lods
inc
mov
movsl
dec
xchg
mov
or
cmp
flds
or
sbb
in
jnp
cs
adc
je
push
cmpb
movaps
jno
add
in
in
adc
fisttpll
push
dec
adc
pop
mov
cmp
or
xchg
pop
sbb
cmp
stos
mov
cli
sbbl
shrl
testl
mov
push
lret
int3
sub
pop
dec
add
fmulp
test
popf
xchg
in
nop
push
jae
or
das
mov
xor
sbb
inc
lahf
jge
lcall
enter
mov
out
push
xor
test
popa
rorl
cmpsl
mov
sarb
jns
inc
lahf
xor
fiadds
adc
cwtl
fsub
aad
sahf
jne
pop
shll
cmpsb
xor
cli
mov
push
sbb
pop
and
mov
pop
addr16
out
dec
repz
cmpsl
inc
bound
repnz
aam
ljmp
mov
stos
pop
dec
xchg
testl
pop
les
and
cmp
ret
cmp
mov
mov
dec
adc
movsl
push
cmp
pop
xchg
sub
mov
xchg
scas
mov
and
or
das
cmp
jne
lock
sbb
dec
testb
and
aaa
cmpsl
xor
addb
pop
in
inc
pop
loopne
inc
in
cmpsl
mov
push
data16
movsl
inc
mov
out
shll
fcompl
jno
mov
mov
and
data16
sub
mov
sub
jo
dec
xchg
xchg
adc
enter
and
arpl
and
insl
xor
hlt
sbb
cli
mov
xor
jmp
daa
andl
xor
lods
xchg
mov
mov
xor
popa
xor
in
lcall
pop
and
andb
jge
adc
jns
sub
inc
pop
push
xor
push
movsl
stos
push
aad
or
sbb
std
pop
add
je
xchg
cld
or
mov
les
or
push
outsb
jnp
mov
mov
or
les
xchg
jecxz
xchg
mov
stc
dec
mov
in
lods
arpl
lahf
cmovbe
fucomp
pop
in
int3
loop
icebp
jnp
in
dec
xchg
push
xchg
mov
cltd
sbb
sbb
add
test
cmp
sarl
aam
and
mov
int
xchg
lret
jb
xchg
aad
shlb
xchg
mov
out
fistpl
jae
rcrb
pushf
pop
in
fs
roll
push
cmp
pop
leave
out
sub
out
push
mov
ss
inc
pop
adc
jmp
mov
push
jmp
stos
fstps
xchg
jb
add
xchg
repnz
adc
push
movsl
incb
jb
dec
clc
mov
imul
sub
dec
mov
ret
arpl
mov
cmpb
cs
mov
push
jl
cmp
and
rcll
mov
xchg
cmpl
sub
sub
pop
dec
lods
dec
adc
and
insl
xchg
cmp
inc
or
add
out
add
and
xor
mov
fsubs
sub
inc
xchg
cld
int
lea
lods
mov
xor
stos
cmp
call
xchg
jmp
push
out
mov
jbe
jo
lea
xchg
test
inc
cmp
jge
data16
ja
or
mov
xchg
cmp
xchg
cltd
adc
adc
imull
and
jae
addr16
popa
scas
mov
fnstcw
push
shrb
outsb
jge
add
lock
and
and
int3
icebp
xchg
mov
call
aas
sub
xchg
inc
xor
sub
pushf
stos
shr
or
das
inc
and
mov
mov
sahf
mov
jecxz
arpl
lret
test
and
mov
out
dec
lock
jl
lret
sub
ds
decb
mov
loope
xchg
or
or
pop
xchg
and
sbb
mov
mov
scas
cmp
repz
outsb
jp
out
fdivrs
lcall
into
inc
mov
xchg
mov
jno
int3
adc
gs
mov
mov
lods
adc
roll
fnstenv
lahf
push
xor
pop
fcoml
or
sub
fildl
dec
shl
push
bound
inc
cmpsl
roll
and
mov
pop
shlb
dec
xchg
push
inc
es
int3
ljmp
insl
mov
movsb
push
push
jg
inc
jbe
lret
add
stos
mov
int3
mov
lahf
push
out
jge
mov
enter
push
mov
inc
mov
aaa
inc
mov
iret
aaa
cwtl
aad
push
mov
cmp
inc
push
mov
lea
enter
inc
mov
pop
adc
mov
sbb
aam
sbb
js
rcl
aad
sarl
add
fwait
push
cwtl
inc
shll
inc
movl
sbb
mov
int
imul
pop
jne
stos
les
pop
xor
shrl
repnz
and
jo
mov
inc
and
call
xor
inc
out
out
out
and
mov
and
negb
adc
std
testb
push
out
frstor
xor
mov
aas
mov
popf
sub
lea
cmpb
sbb
inc
xor
pop
int3
push
mov
and
mov
addr16
mov
leave
cmc
mov
outsb
addr16
push
leave
ficompl
jbe
jno
mov
jns
sub
jmp
push
fwait
test
mov
lcall
cmp
jae
lahf
negb
jb
jmp
and
mov
add
add
inc
adc
sub
xchg
push
lret
rol
rcll
jb
jge
push
sbb
movsl
dec
cmc
data16
lds
dec
sbb
xlat
sbb
adc
pop
aas
std
lods
fbld
jl
mov
sbb
lock
mov
jae
cmp
clc
inc
sbb
lods
leave
rcrl
outsl
xor
jbe
add
movsb
jp
lock
sbb
nop
pop
mov
xor
jecxz
push
and
fdivp
dec
jae
dec
add
repz
mov
inc
cmp
mul
inc
inc
adc
pop
ds
sbb
push
push
sub
mov
mov
shrb
pusha
sub
and
xor
xchg
loopne
iret
dec
lret
aad
or
inc
inc
pusha
and
mov
and
icebp
das
xor
shl
add
inc
inc
inc
dec
jmp
iret
pop
jo
sub
jecxz
mov
and
lods
xor
sbb
inc
in
fnsave
fisubl
xchg
inc
inc
cmp
jno
fcmovnbe
loop
sub
inc
jle
cli
inc
sbb
mov
in
fcomp
or
shll
ret
mov
test
xor
fisubrl
jno
subb
aam
daa
addb
xchg
shll
cmp
sub
mov
sub
stos
rol
fs
xor
lea
push
dec
jg
xchg
lea
sti
scas
mov
roll
out
mov
loope
shrb
mov
push
fcompl
fucomp
xor
pop
pusha
in
scas
mov
mov
inc
lock
mov
add
mov
out
or
mov
jp
or
inc
out
outsl
mov
pop
ss
cmp
call
dec
dec
push
mov
mov
mov
mov
lods
aas
loop
push
int
inc
push
add
call
inc
aaa
cmp
roll
les
leave
pop
mov
pusha
adc
mov
insb
in
mov
scas
dec
dec
push
sbb
ss
xchg
cs
cmpsl
mov
jno
das
push
jns
mov
scas
push
or
mov
dec
jo
mov
adc
and
sar
clc
lods
pop
mov
or
mov
fistl
sbb
test
in
xchg
jb
insl
lret
js
pop
mov
mov
cmp
or
stos
lret
call
repz
shrl
std
dec
ljmp
orb
sahf
push
movl
pop
xor
lahf
lods
pop
mov
fucomp
lea
out
fstl
cli
mov
pusha
pop
int
mov
inc
lahf
xchg
stc
pop
xchg
pop
inc
dec
out
cmp
sub
ret
fwait
addl
and
sub
add
add
shrl
rolb
inc
das
sub
dec
das
ret
inc
fisubrl
ret
mov
sbb
movsb
mov
mov
test
xor
bound
lds
mov
imull
ret
xchg
and
adc
aaa
jae
sub
push
popf
adc
orl
push
cmp
push
insb
shll
push
jbe
lds
mov
or
stos
xchg
mov
add
out
je
jmp
push
add
lret
es
and
xchg
addr16
sub
pop
pop
adc
mov
sub
iret
fmuls
inc
mov
add
add
mov
sahf
lds
mov
add
and
rorb
addl
add
pop
int
fs
pusha
cmp
fiadds
mov
enter
test
xor
daa
call
cmp
or
lea
in
divl
sbb
dec
rcrb
push
ljmp
and
jo
jl
push
sbb
or
mov
jo
test
adcl
inc
mov
fwait
jge
dec
notl
jne
sub
lock
jo
or
cmpl
ds
cmp
fnstenv
pop
mov
call
cli
cmp
push
stos
cwtl
fldcw
mov
cmp
lcall
mov
iret
testb
or
pop
hlt
lock
and
je
scas
dec
mov
add
aam
mov
aam
push
xchg
lods
mov
ret
sbb
and
add
stos
sarl
pop
data16
push
jge
mov
mov
pop
mov
outsb
test
into
inc
test
jae
jl
rcrb
pop
sbbb
pop
shll
add
jbe
fwait
fwait
mov
xor
cmpsl
in
inc
gs
shlb
leave
mov
xchg
jns
jle
divl
icebp
add
lret
out
out
adc
pop
sub
setb
cmp
pop
jl
cs
mov
mov
push
sbb
popf
sub
cmp
fstpl
mov
push
popl
inc
cmpsb
mov
cmc
mov
push
add
in
adc
lret
mov
clc
mov
ds
or
xlat
inc
mov
lock
inc
jle
fsubs
cmp
pop
pop
add
cmp
je
mov
mov
pushfw
lods
xor
inc
shrl
and
int3
xor
loop
mov
mov
xchg
push
jae
adc
jle
pop
inc
push
adc
cltd
push
lea
inc
fisubs
mov
xchg
loop
push
clc
jmp
mov
cs
dec
mov
or
dec
mov
jmp
or
push
ret
daa
leave
jne
jmp
shrl
mov
lret
xchg
mov
jb
icebp
jmp
add
movsb
out
fsubrl
mov
jecxz
or
pop
cmpsb
add
push
ret
shrb
inc
pop
es
jl
sub
cmp
sbb
jecxz
dec
pop
addb
cmp
jp
lcall
xchg
cmpsl
ja
into
lds
mov
mov
xchg
push
pusha
jmp
mov
mov
push
mov
jae
and
repnz
and
into
push
ret
push
push
inc
and
jmp
bnd
pop
jle
sub
pop
addl
cwtl
mov
test
aas
scas
ss
push
push
out
mov
mov
rcrb
jae
popf
pop
test
xchg
adc
xchg
loope
repnz
scas
push
fwait
mov
ficoms
pop
push
mov
subl
adc
dec
mov
js
pusha
enterw
pop
or
fwait
rorl
xchg
cmp
cmpb
orl
jnp
lods
sub
dec
les
sub
pop
xor
lcall
mov
xor
rcrb
jl
loopne
and
or
loopne
xchg
add
lahf
or
nop
mov
shr
int3
cmp
jg
sbb
lahf
xor
test
mov
pusha
js
mov
sahf
data16
repz
mov
orl
and
add
sub
adc
sub
loop
out
mov
int3
adcl
mov
push
xchg
das
aam
scas
mov
inc
cmp
sub
cmpsb
fstpt
add
call
sbb
jge
dec
shll
inc
pop
mov
movsl
sub
lds
imulb
push
mov
mov
mov
lea
imul
inc
add
pop
adc
jecxz
xchg
nop
mov
test
xchg
lods
and
mov
sbb
cltd
sub
pop
jmp
in
adc
cmpsb
mov
adcl
fcoms
xor
mov
mov
adc
and
adc
push
sub
mov
shll
rol
xchg
imul
outsb
int3
mov
or
int3
inc
stos
adc
adc
cmp
outsb
pop
dec
sbb
aaa
mov
rcrb
jl
dec
xor
jg
hlt
in
jl
cmp
push
and
and
insl
jl
add
cmc
flds
loopne
sbb
push
bnd
jl
mov
aam
and
frstor
push
rol
cmc
xor
mov
fisubrs
imul
or
xor
jae
les
mov
push
mov
sbb
frstor
shll
adc
cmp
mov
xlat
imul
shl
adcl
sarl
push
test
xor
clc
scas
sbb
ljmp
push
xor
mov
lds
loopne
rclb
cmp
js,pn
sahf
shlb
sbb
dec
cmpl
sbb
and
adc
sbb
jle
movsl
lret
loopne
pop
sub
movsl
mov
inc
adc
loopne
hlt
and
mov
push
into
cmc
mov
mov
popa
aaa
hlt
out
out
andl
and
or
fadd
fwait
dec
in
test
xchg
add
mov
out
cld
adc
leavew
ljmp
ret
daa
imul
sub
fisubrs
pop
add
xor
adc
sbb
call
outsb
or
jle
mov
dec
addr16
push
cmpsb
sahf
dec
pop
shrb
push
lds
xchg
jg
mov
mov
leave
fcmove
push
sub
pop
jns
out
push
pop
fiaddl
sbbl
addb
push
sbb
jbe
data16
adc
daa
fidivrl
xor
jl
shrl
pop
mov
push
mov
lods
push
jae
outsb
pop
xchg
pop
push
add
ss
sbb
push
pop
pop
cmp
jnp
into
hlt
dec
testb
repz
inc
addr16
clc
mov
lret
xor
dec
aaa
leave
jb
or
iret
ret
adc
cli
or
xor
pop
pop
inc
out
sub
sbb
pop
mov
enter
ljmp
xor
test
repz
push
cli
sbb
xor
inc
sub
push
cld
fwait
rcl
ljmp
decb
add
aam
ljmp
xorb
cmp
ret
sub
les
cmp
outsb
adc
xchg
das
push
dec
sub
icebp
lea
lcall
pusha
push
les
jb
push
adcb
loope
call
test
mov
mov
ljmp
shlb
out
sub
sub
pmaxub
mov
addr16
sub
data16
inc
rolb
cmpsb
add
xchg
xchg
in
and
xchg
push
pop
adcb
or
mov
or
pop
popf
fwait
call
xchg
and
in
dec
add
xchg
imul
fchs
daa
lods
cld
es
push
mov
cmpsl
xchg
cmp
sbb
push
mov
scas
stc
das
repnz
movsl
lret
jl
cmp
lods
add
dec
rorl
xchg
nop
out
test
mov
add
call
push
lea
mov
mov
test
dec
sbb
mov
dec
xchg
pop
imul
jns
jo
loopne
mov
xor
xor
xor
pop
insl
ljmp
dec
cmp
andl
cmp
minps
mov
hlt
clc
inc
and
or
fimuls
add
cmpsb
lds
bound
cmp
dec
pop
cli
adc
icebp
mov
or
add
stos
mov
pop
dec
sbb
scas
leave
cmp
push
add
lea
ds
cmp
lret
jne
mov
hlt
inc
aas
sbb
push
xchg
jp
cmp
nop
test
stos
pop
arpl
mov
ds
dec
enter
push
dec
pop
mov
jp
ret
aam
mov
movsb
adc
or
bnd
fs
outsl
xchg
gs
jge
xchg
jl
push
cld
xchg
or
cmp
add
sarl
and
shlb
mov
cmpb
dec
inc
scas
outsb
stos
and
mov
rclb
repnz
clc
or
jmp
jne
add
aam
leave
dec
push
dec
mov
xchg
pop
inc
popf
push
adc
inc
push
icebp
cmp
ss
mov
sbb
aas
repz
out
ds
jnp
add
loopne
ror
leave
sub
shll
push
outsb
shrb
mov
cs
cmpsb
mov
test
xchg
fadd
ficoms
dec
push
fst
jne
shl
jle
jno
jmp
jle
lea
pop
andb
lret
pusha
add
xor
add
sbb
cltd
aad
pop
mov
mov
repz
jnp
aad
jbe
mov
mov
xor
ljmp
mov
xorb
adc
popl
or
int
test
adc
jne
pop
pop
out
xchg
and
idivl
mov
sbb
inc
mov
and
dec
dec
mov
ret
addr16
add
jge
xor
sbb
int3
loopne
repz
fcompl
pop
jnp
fs
add
out
fwait
out
mov
and
mov
add
cmp
and
dec
outsl
jno
cmpsb
xlat
test
fdivr
or
mov
sbb
aas
clc
cmpsb
xchg
and
mov
sbb
dec
xchg
out
popf
or
jl
mov
int3
lahf
add
and
jl
gs
mov
cmp
mul
adc
mov
mov
xchg
sub
insl
test
in
cmp
and
bound
push
jnp
lods
fs
jo
in
loope
int3
in
add
inc
xor
hlt
test
mov
jbe
mov
lahf
mov
cs
jle
dec
test
jl
mov
mov
aad
rorb
xchg
dec
js
fnstcw
sti
lock
cld
push
xchg
inc
sbb
mov
xor
jbe
rcll
cmp
stos
movsb
shll
add
jno
lock
fcoml
je
stc
adc
sti
pop
dec
neg
push
jb
frstor
lcall
push
pushf
bound
pop
pop
add
stos
pop
jp
push
pop
xor
dec
lahf
js
and
xchg
sbb
xor
mov
es
and
pop
push
fs
out
or
addb
pop
fwait
mov
mov
test
push
shl
jae
dec
addb
push
pop
iret
xchg
jno
pop
shll
sti
pop
ds
xchg
adc
mov
mov
cs
cmpsl
dec
hlt
fcompp
pop
mov
mov
mov
repnz
sar
fisubrl
jnp
mov
push
push
out
jle
xchg
dec
cmpsb
cmc
dec
icebp
dec
xor
daa
cmpsb
mov
dec
mov
jns
push
jle
mov
mov
xlat
cwtl
jmp
fucom
mov
sub
test
idivl
cwtl
fdivs
ret
push
repz
inc
ret
jno
lds
lahf
xor
insl
sbb
ret
std
sbb
mov
movsl
cs
popa
cmpsl
or
mov
cmpsb
add
hlt
push
enter
std
es
mov
xchg
and
in
xor
mov
mov
cmpsl
sbb
jnp
adc
decl
outsl
test
inc
in
fwait
push
add
je
and
sub
jmp
sbb
lcall
sub
xchg
cmp
push
jmp
xchg
cmp
jno
lds
adc
push
mov
insl
mov
fidivs
mov
pop
shrl
or
xor
sarb
push
sbbl
or
repnz
cmpsb
add
aam
fadd
movl
sub
pop
icebp
sti
pop
rclb
mov
adc
ljmp
lahf
inc
mov
push
test
jecxz
mov
in
dec
test
and
shlb
xlat
xor
fadd
add
mov
out
repnz
xchg
cmpb
add
je
mov
aam
adc
mov
cmp
add
lahf
push
mov
out
inc
inc
push
mov
pop
std
lock
aaa
adc
push
sbb
push
xchg
inc
pop
iret
cmp
subl
and
imul
fldl
add
cmpsl
or
lock
je
or
cld
popf
daa
cwtl
nop
mov
push
xchg
pop
mov
rcll
stc
add
ljmp
mov
xchg
sbb
cltd
jge
jl
jne
test
loop
xchg
es
mov
in
pop
in
mov
pop
jmp
xchg
push
insb
fbld
xchg
ret
pop
or
dec
mov
test
lock
sti
xlat
pop
in
fwait
notb
test
out
dec
out
enter
mov
dec
pop
movsl
imul
loopne
iret
push
or
pop
out
in
aam
lret
mov
cmpb
mov
movsl
dec
sub
jne
popf
mov
mov
pop
pcmpeqw
sub
and
outsl
jo
stos
adc
mov
mov
stos
mov
and
fwait
inc
inc
icebp
das
inc
sbb
imulb
paddsb
pop
mov
cmp
fnstcw
movsl
popa
mov
and
adc
sti
pop
jecxz
ret
sbb
mov
xchg
fadds
push
nop
fwait
sbb
arpl
jno
dec
jb
jbe
adc
fisubs
ljmp
mov
sub
jp
pusha
xchg
fistl
push
pop
mov
and
dec
ret
ret
orl
mov
popl
mov
cmp
sbb
jnp
jae
orb
xchg
xchg
pop
xchg
test
pop
mov
lods
jecxz
cli
in
lds
mov
orb
dec
cltd
popl
pushf
add
lods
les
mov
add
push
xchg
rcrl
inc
inc
xor
in
test
jl
int3
and
iret
sbb
xchg
out
dec
arpl
jecxz
inc
rep
add
or
mov
ja
xorl
mov
or
push
ljmp
clc
push
pop
aad
pop
popf
dec
pop
les
fstpt
jno
sub
xchg
dec
mov
push
jbe
fwait
lea
stos
addr16
dec
lahf
adc
mov
add
jo
and
adc
jl
or
jl
adc
mov
pop
or
xor
loopne
das
test
stc
jmp
inc
int
sbb
mov
jmp
sub
cmc
mov
jnp
cmc
push
test
in
xchg
inc
test
sub
hlt
nop
adc
sub
jnp
cli
mov
mov
lods
gs
ja
xchg
dec
push
les
xchg
mov
into
push
mov
adc
ret
mov
and
cli
or
xor
ja
mov
call
sarl
dec
aaa
mov
jmp
cld
cli
mov
sbb
cld
icebp
mov
cmc
jle
fiaddl
push
clc
push
cmpsl
movsb
mov
mov
jo
mov
mov
pop
cmpsl
sub
scas
in
int3
push
out
sbbl
mov
dec
popf
mov
push
push
sbb
pop
adc
mov
pop
cmpsb
ret
push
out
shlb
es
scas
dec
jns
dec
clc
lods
stos
cmp
dec
mov
loopne
jg
rclb
xor
lods
mov
daa
aaa
fcmovbe
and
test
shll
add
jl
mov
and
add
xchg
sbb
xlat
mov
xchg
xor
fadds
inc
fs
cmc
cmpsl
sar
call
pushf
stc
xor
mov
test
pop
push
fidivrl
lahf
lea
pmuludq
stc
pop
movsb
insb
cmp
pop
adc
push
add
xor
ficoms
push
sub
icebp
inc
jl
imul
pop
insb
shll
cmp
push
push
test
mov
fucomip
ja
jmp
and
jle
enter
xchg
inc
sti
addb
mov
cwtl
and
inc
xchg
popf
fsts
add
sbb
xor
rol
in
fildl
and
les
add
nop
add
cmp
or
aas
and
sti
or
out
push
fildl
lods
add
push
xchg
xchg
cmp
test
cmp
add
cltd
in
push
fidivl
daa
stos
enter
cmp
arpl
dec
xchg
inc
push
mov
pop
lock
int
inc
aad
xor
mov
sbb
jbe
out
out
inc
fwait
jb
add
cwtl
xchg
jno
mov
fmull
fcoml
shlb
das
sub
pop
mov
scas
mov
frstor
and
lcall
jbe
addr16
fsubp
fisubrl
lock
adc
push
sbb
xor
bound
add
in
xorb
popa
fcomip
pop
or
sub
mov
mov
rcrl
jp
and
je
lods
cmp
lahf
push
jno
add
dec
les
jg
or
movsb
sbb
push
inc
push
bound
xchg
dec
pop
dec
mov
mov
mov
jg
or
cwtl
stos
inc
cmc
jne
pop
push
lret
jl
push
jb
test
test
xor
mov
clc
pop
lea
int
adc
lcall
cwtl
mov
paddusb
hlt
es
xor
jno
cmpsb
adc
dec
jno
and
and
mov
popf
jno
in
jmp
ja
clc
inc
xor
aam
jmp
pop
mov
xchg
jnp
xor
sbb
scas
lret
sbb
sub
sub
jmp
lret
add
jecxz
mov
inc
or
dec
xlat
adc
inc
stc
jnp
sbb
jae
add
mov
mov
xor
in
dec
frstor
adc
mov
xchg
xlat
add
pop
inc
test
dec
adc
xlat
add
test
inc
mov
lea
sub
cmp
or
test
int3
mov
in
sbb
dec
jns
cmp
stc
fsubr
pop
cmp
jmp
scas
inc
aam
add
push
jae
das
pop
stos
dec
pusha
out
sub
inc
push
or
pop
sarl
pop
sbb
mov
or
dec
xor
repnz
aam
mov
xchg
fbld
dec
sub
xchg
jne
pusha
jmp
push
lods
ds
test
dec
loopne
mov
in
icebp
shl
xchg
push
int
pop
leave
inc
insl
mov
jecxz
xchg
fwait
jns
push
jb
pop
andb
or
test
mov
out
mov
mov
mov
cli
lock
sbb
jmp
xchg
ljmp
add
addr16
lret
popf
repnz
popf
jg
lret
and
add
push
pusha
lods
int3
ja
test
sbb
adc
jns
lcall
inc
sarb
hlt
lcall
addr16
inc
int
jg
std
push
inc
cmpsl
mov
xor
xor
inc
test
push
aaa
fucom
mov
gs
cmp
icebp
popa
xchg
inc
lods
inc
xchg
adc
mov
stos
push
test
inc
sub
ffree
insb
sbb
aaa
sbb
arpl
pop
adc
int3
negl
fs
cmp
fsubrs
mov
inc
mov
pop
loopne
out
pushf
rcrl
aaa
pop
sbb
pop
jo
mov
test
jb
das
sbb
loope
adc
icebp
dec
test
pop
mov
or
inc
fcomi
fs
push
repnz
fiaddl
and
sub
dec
cltd
xchg
pop
insl
inc
push
js
jmp
mov
cli
fs
adc
mov
out
inc
xor
inc
call
aam
or
daa
adc
sar
adcb
sbb
jne
or
adc
insb
test
mov
inc
cltd
cmp
idivl
push
hlt
sbb
movsb
ss
inc
mov
xor
icebp
sbb
jge
ror
js
jb
adc
addr16
outsl
movsb
sub
inc
ss
xorl
xchg
sub
loop
dec
sbb
jne
mov
cmp
push
cmpl
jmp
inc
push
out
sbb
aaa
addr16
stos
sbb
lods
clc
push
mov
ja
divl
push
adc
mov
or
movsl
cmp
pushl
xchg
inc
in
jb
jo
sbb
or
mov
movsl
inc
inc
loop
test
addb
pop
xchg
insl
movsb
mov
cmp
and
push
into
jge
inc
dec
mov
or
lea
push
dec
mov
cmp
subb
pusha
inc
or
inc
ljmp
sbb
les
jne
push
or
sbb
sahf
pop
out
mov
scas
jecxz
andb
js
xchg
mov
mov
mov
stos
and
sar
dec
inc
int3
mov
jecxz
lret
xchg
and
mov
movsl
push
dec
pop
fiaddl
adc
sub
mov
lret
outsl
dec
gs
inc
jnp
pop
int3
and
pop
mov
nop
push
pop
dec
pop
or
addr16
jbe
cmp
les
rcrl
pop
xchg
push
daa
mov
icebp
adcb
lahf
or
xchg
enter
aad
inc
roll
sub
xchg
sahf
pop
ljmp
mov
and
test
jmp
sub
add
push
sub
sbb
leave
sub
cmp
lret
xchg
pop
enter
fadds
sbb
sub
stos
pop
fstps
lock
jae
repnz
out
cmc
lods
jno
pop
xchg
mov
xrelease
movaps
mov
mov
add
push
sub
sbb
sahf
xchg
add
xchg
pop
ret
sahf
mov
hlt
pop
jne
mov
mov
call
push
pushf
jg
nop
mov
jno
dec
mov
lods
mov
sbb
in
cli
dec
sub
in
cs
and
outsb
imul
lods
popf
cmp
ljmp
mov
or
enter
scas
mov
dec
popa
test
cli
xchg
pop
outsb
and
daa
push
push
stc
stos
fmuls
cli
stos
ljmp
push
jns
adc
xchg
jb
loope
leave
jg
mov
jns
pop
add
int
sbb
rcl
jmp
int
cmpb
inc
cs
push
mov
xchg
mov
mov
sbb
and
pop
mov
lret
xchg
and
cmp
mov
stc
repnz
xchg
inc
inc
add
cmpsb
jns
mov
pop
xlat
fnop
fdivs
jno
call
push
add
decl
mov
sbb
mov
xchg
lea
push
call
push
sub
push
mov
loopne
or
dec
cmp
insl
inc
mov
and
cmp
insb
mov
add
mov
sbb
out
lahf
cmp
adc
jae
mov
aaa
or
clc
or
xorb
push
hlt
mov
mov
xlat
out
sub
mov
cmc
jne
mov
mov
andl
int
sub
xchg
push
inc
imul
shr
lods
xchg
subb
jb
lret
lods
imul
lret
iret
andb
add
imul
pop
xchg
sub
enter
or
fnsave
in
ja
bound
mov
or
jmp
xchg
jmp
pop
adc
cwtl
aam
roll
cmp
into
lods
xchg
rolb
cmp
cli
jno
test
jge
sub
ret
jl
and
test
jle
sahf
dec
dec
int
fstpl
call
mov
repz
inc
adc
loop
in
aad
cmpsb
pop
jp
aam
and
rclb
inc
scas
and
stos
pop
cmp
ljmp
xor
rclb
imul
push
loope
insl
lods
lea
pop
cmc
sbb
in
inc
or
cmp
adc
dec
subb
pop
cmp
call
fstl
fmull
aad
fcomi
push
mov
sub
jecxz
inc
inc
smsw
rcrb
fisubl
movsl
pop
cmc
stc
xor
dec
lret
fucomip
aaa
mov
adc
jb
popf
sub
fsubrp
adcl
testl
cli
outsl
jo
pop
sub
add
dec
sbb
dec
pop
fisubs
call
and
adc
mov
enter
xor
mov
in
xchg
jb
fcmovne
das
addb
sub
int3
lahf
subb
pop
rclb
es
cwtl
inc
es
xchg
lock
xchg
xor
arpl
inc
lret
xchg
rclb
cmpsl
jge
pop
popa
dec
mov
je
cmp
adc
lods
pop
push
mov
adc
rcr
outsb
cltd
xchg
pop
outsl
frstor
cld
jecxz
pop
gs
dec
arpl
push
stc
jmp
stc
sbb
test
jecxz
dec
aas
sbb
in
push
jae
clc
push
jle
jmp
mov
sub
lds
mov
or
stos
or
mov
jge
loop
notl
adc
or
push
add
push
inc
lret
inc
mov
and
sub
push
sar
xor
pusha
jae
cmp
push
lea
cmp
int
aas
inc
insb
insl
data16
rcll
out
inc
inc
sbb
sbb
pop
xchg
insl
idiv
fcomp
in
imul
push
mulb
arpl
push
xlat
arpl
push
pop
jg
loop
hlt
push
fcoml
jmp
bound
fwait
sub
sub
mov
popa
enter
pop
mov
cmc
sbb
mov
cmp
mov
out
mov
and
push
push
popf
gs
sbb
in
mov
cmp
add
xchg
bound
dec
jg
scas
add
ja
mov
jle
in
and
aas
inc
sbb
insl
cmp
dec
loop
divl
pop
in
add
jne
repz
adc
inc
mov
push
mov
or
hlt
cs
push
sub
loopne
dec
into
jmp
sbb
rorl
push
fsub
das
inc
cmc
adc
daa
xor
stc
push
and
mov
fcoml
in
shlb
loope
pop
dec
xchg
mov
das
stos
stc
inc
sbb
cltd
lock
pop
sbb
iret
push
icebp
ljmp
or
sarl
mov
jl
push
mov
push
xor
lods
inc
addr16
outsl
inc
dec
xchg
mov
out
xor
pop
data16
pusha
sub
or
out
mov
jne
fs
xchg
adc
push
pushf
and
lods
enter
and
mulb
jge
neg
lcall
and
xchg
inc
outsl
and
pop
shrb
adc
add
cmpb
inc
dec
aad
fidivrs
jae
shlb
pop
ret
out
xchg
insb
insl
cwtl
dec
lds
aas
pop
jl
insb
sbb
jo
lock
pop
jmp
scas
movsb
sbb
sub
out
inc
inc
out
mov
div
loop
mov
dec
mov
jb
lock
bound
je
cmp
or
ss
and
shrl
push
adc
mov
jns
pop
inc
clc
mov
dec
push
pop
int
jae
adc
ljmp
cmp
push
ds
fbstp
mov
lahf
mov
inc
lock
lahf
loop
pop
xchg
and
stos
inc
push
leave
or
sbb
out
icebp
in
jle
or
and
rorb
push
or
rdpmc
add
push
cmp
mov
xchg
aad
push
pusha
inc
pop
adc
or
clts
arpl
cmpsl
jg
pop
mov
dec
ja
xor
movsb
sub
cmpb
pop
les
push
pop
and
adc
sub
xchg
mov
adc
lds
push
inc
int3
push
es
gs
rol
cmp
cmpsl
pop
adc
dec
out
aaa
xor
scas
rcrb
movb
mov
out
ret
int
cmp
xchg
stos
push
mov
jle
cltd
cmp
lods
push
in
pop
subb
idivb
xchg
pushf
rorb
mov
pop
cld
jae
inc
inc
sub
or
sbb
mov
std
lea
test
clc
xchg
fstl
nop
lcall
mov
push
dec
test
jmp
mov
cmp
js
insb
push
test
lret
neg
xor
adc
sbb
push
fstl
mov
xchg
add
fadd
push
ret
popa
cmc
mov
mov
sub
icebp
mov
nop
xor
sbb
cmpsb
adc
pop
sar
add
or
jecxz
test
cltd
push
cmp
pop
jo
or
mov
or
rcll
fucomip
clc
cmp
mov
jo
lods
ret
addr16
stos
cmp
ja
into
xchg
ds
icebp
inc
std
jg
dec
and
cmp
in
jmp
xchg
push
push
sarl
mov
mov
push
in
push
adc
xlat
neg
popa
mov
push
jecxz
push
pop
dec
imul
mov
mov
xchg
std
xor
sbb
test
sbb
test
xchg
pop
es
and
ret
jecxz
jns
stc
scas
fistl
push
jp
jbe
xlat
mov
push
cwtl
and
mov
cmp
gs
jb
mov
enter
lret
lods
insl
lods
xchg
loopne
sub
mov
test
dec
mov
sbb
jne
addr16
ret
ljmp
movsl
push
cmp
dec
adc
or
cmp
fcmovnbe
mov
sub
xchg
pop
dec
jge
push
outsl
xlat
int
loop
mov
fldt
int
addr16
ljmp
push
push
ljmp
das
or
lret
add
mov
fnstenv
ja
cmp
mov
test
xchg
jge
mov
add
testb
in
icebp
nop
sub
cmpsb
jmp
xchg
push
jge
pop
jne
aaa
scas
aam
cmp
push
fstl
or
pop
cmc
pop
sahf
lea
outsl
jp
adc
xor
in
mov
fildl
add
insb
test
stos
cmp
sbb
out
mov
call
loop
arpl
cmp
mov
push
fs
aas
arpl
ljmp
inc
xor
inc
mov
mov
ret
jbe
popa
xlat
jno
push
xor
enterw
je
cltd
fildll
clc
jmp
int3
repnz
in
hlt
das
push
push
jg
xchg
test
clc
outsl
sbb
divl
insb
ret
adc
xchg
dec
lods
jns
pop
cmp
movsl
scas
addr16
mov
sub
add
xor
mov
cltd
scas
mov
jns
and
stos
inc
inc
hlt
xor
jge
add
sti
dec
out
sbb
repnz
mov
sub
push
test
add
arpl
out
jecxz
scas
lods
add
mov
and
mov
jbe
jae
jmp
inc
mov
add
or
mov
rclb
xchg
rolb
jmp
test
add
jle
out
mov
aam
in
js
dec
mov
int3
cmp
and
stos
std
dec
mov
xchg
cltd
add
jl
push
pop
mov
scas
jno
push
sarb
filds
bswap
shrb
pushl
mov
enter
loopne
adc
jge
add
push
inc
adc
sbb
push
and
lret
sbb
mov
push
push
movb
cwtl
ss
adc
nop
movsl
notl
test
xorl
jecxz
cmc
std
cmc
iret
sbb
aam
or
loopne
ljmp
dec
outsl
lea
mov
mov
pop
divl
aaa
add
xchg
stos
ret
inc
icebp
mov
sbb
dec
push
and
pusha
cmp
fdivrp
jg
das
fstpt
lds
test
orl
icebp
loop
mov
cmp
fnstsw
add
or
scas
add
je
jne
xor
fistl
sub
hlt
jl
xchg
sbb
lret
sub
rclb
cli
push
lcall
int3
nop
or
pushf
mov
andl
pop
mov
sbb
xor
pop
or
sub
repnz
ret
inc
pop
in
outsl
and
mov
iret
insl
repz
lcall
fnsave
and
aad
sbb
mov
or
add
lret
cltd
arpl
lock
lods
mov
lods
cmp
mov
popf
cltd
gs
xchg
pop
push
xchg
xchg
cltd
push
inc
xor
fisubl
in
daa
rclb
icebp
mov
cmp
nop
pop
rolb
fwait
or
out
insl
mov
je
cltd
xor
jae
xor
fiadds
inc
push
dec
enter
mov
mov
adc
aam
pop
stc
stos
test
faddl
aas
mov
mov
in
fwait
xchg
push
adc
test
pop
xchg
pop
mov
mov
push
js
pop
rorl
fsubp
arpl
out
dec
mov
mov
mov
sub
jge
nop
and
sub
test
jno
mov
inc
enter
push
shrb
or
jmp
pop
mov
push
or
mov
sub
cmp
xor
mov
or
push
cmp
out
inc
mov
subl
in
pop
repz
xchg
rcl
push
outsl
fs
cmpsb
cmc
sbb
imul
cmpsl
lods
jno
clc
inc
inc
cmc
inc
hlt
call
clc
rcrl
daa
and
xchg
stc
aad
ja
inc
notb
pushf
das
out
mov
outsb
cwtl
lds
lahf
out
test
inc
das
pop
cmc
sahf
xchg
jae
imul
les
out
je
xor
enter
dec
adcb
or
sub
mov
dec
popf
sbb
fistps
mov
test
dec
in
xchg
lods
clc
push
scas
pop
inc
pop
pop
loopne
addr16
loop
adc
mov
jle
jecxz
cmp
jnp
mov
dec
call
adc
jnp
push
dec
pop
mov
sbb
push
cwtl
xor
popa
jnp
and
test
mov
idivl
notl
push
push
inc
xchg
rcrl
out
ja
xchg
sub
sysenter
push
ds
or
sbb
xchg
mov
inc
mov
mov
mov
mov
rorl
ds
popf
mov
fcomps
sti
xor
push
cmpsb
sbb
adc
imul
dec
sub
lock
xor
or
data16
ljmp
pop
imul
xchg
enter
push
mov
sub
xchg
in
or
hlt
fwait
xchg
xor
push
push
add
push
push
shlb
sub
out
or
lds
push
mov
js
arpl
jg
pop
repnz
xor
inc
sub
leave
and
cmp
inc
adc
dec
imul
jbe
pop
jle
rolb
adc
and
arpl
jns
push
push
call
insb
popa
loop
loopne
insl
test
loopne
jmp
cmp
es
dec
mov
iret
rolb
movsl
mov
arpl
or
inc
mov
int
addr16
mov
mov
lcall
and
shll
cmp
popa
jo
add
xchg
jno
lods
or
aam
shll
cltd
or
push
inc
jl
mov
shll
nop
xor
push
push
mov
xchg
xor
jmp
sahf
movsl
pop
mov
rcll
out
test
jb,pt
jp
ret
add
jae
loope
das
or
sub
or
std
fildll
jne
mov
jl
xchg
loop
in
xlat
xor
mov
lret
mov
aaa
mov
adc
pop
pusha
stc
mov
in
mov
fdivr
enter
into
rclb
ror
mov
mov
cmpsl
add
lahf
shl
push
pop
ret
insl
jae
popf
xor
shrb
adc
mov
test
inc
pushf
test
bound
je
pop
or
in
or
cs
arpl
lods
cs
mov
and
inc
adc
jmp
push
cmp
popa
or
mov
sarb
cli
sub
aad
or
mov
sbb
es
pop
ret
inc
hlt
xor
hlt
cmp
std
xchg
imul
stc
ja
in
and
gs
and
lock
lea
fbstp
lods
fimull
leave
push
mov
pop
pop
fnstenv
and
jns
pusha
fcomps
popa
icebp
or
cs
mov
movsb
in
push
test
pusha
cmp
sub
dec
xor
loope
data16
and
imul
xchg
xor
mov
fiadds
or
push
lret
ret
cmp
in
ret
mov
pop
ljmp
add
mov
mov
imul
jl
mov
ljmp
cmovno
popf
fnstenv
mov
js
add
out
add
in
push
xchg
mov
push
repz
sub
add
incl
pop
xchg
mov
les
mov
push
push
xchg
push
jmp
pop
subb
or
daa
pop
ss
or
jo
scas
pop
xor
jnp
repnz
sub
dec
lahf
lods
jbe
popa
aad
inc
ds
mov
mov
lcall
cltd
lcall
fldenv
sbb
out
insl
fidivs
xchg
sbb
mov
xlat
out
lret
insb
push
mov
lea
sub
data16
lret
ja
stc
fdivl
dec
clc
hlt
scas
mov
push
stos
jecxz
mov
dec
gs
jl
bsf
sbb
sub
mov
je
fidivl
fidivl
pop
and
ja
pop
imul
jecxz
aam
mov
rorl
andb
bound
add
mov
xorl
mov
shlb
dec
ret
mov
loopne
fs
or
push
adc
inc
mov
jbe
test
cmp
mov
jecxz
xor
movzwl
stos
mov
enter
jb
push
lods
sub
cmp
andb
pop
cmpsb
dec
icebp
push
mov
jo
in
imul
jae
jo
push
xlat
cli
cmp
add
pop
push
mov
int
sarl
mov
push
imul
sbb
cmpsl
mov
loopne
pusha
test
ss
or
pop
aaa
jmp
popf
lret
rolb
daa
mov
adc
lods
sarl
popf
outsl
lahf
ljmp
lea
jge
stc
rclb
sahf
mov
add
pusha
jo
stos
fnstsw
pop
mov
das
sti
loopne
sbb
cmpsl
mov
es
fwait
call
mov
xlat
imul
cmc
scas
cmp
add
push
divl
in
stos
pop
inc
mov
sahf
sahf
ds
mov
repnz
sub
mov
inc
inc
push
jmp
das
mov
pop
cmp
aaa
daa
sub
imul
and
js
cltd
mov
pop
push
ficoml
lock
outsb
jnp
and
test
mov
mov
xor
push
gs
ja
imul
cmpsb
push
xor
in
pop
cwtl
or
fcmovnu
jne
jp
and
jno
fistpll
cld
and
jb
fisubs
fnsetpm(287
mov
fnstsw
test
xorl
lret
les
add
outsb
add
loope
mov
enter
loope
in
xorl
fidivrl
test
fs
and
sarl
or
shll
dec
push
fwait
cltd
test
sbb
and
sbb
inc
loopne
adc
std
cmp
in
push
lcall
aad
int3
daa
sub
lock
inc
enter
jnp
push
sub
bound
add
mov
mov
repz
js
jp
add
jns
mov
test
popa
push
pop
push
cmpsb
adc
xchg
fdivr
shlb
lds
pop
cmp
jp
leave
pushf
rclb
test
in
cmp
pop
push
call
add
pop
cmp
ja
loope
xor
add
xlat
xor
jl
or
enter
pop
mov
push
and
iret
jno
out
fdivl
sbb
jb
mov
dec
mov
sar
leave
sarb
popa
xchg
jl
js
inc
dec
and
pop
ljmp
adc
rol
cmp
sub
ret
xchg
push
andb
xchg
mov
mov
cmp
enter
mov
inc
pop
jle
les
orb
ror
dec
stos
pop
pop
fnstenv
mov
outsl
fisubs
sbb
add
dec
popf
cmp
push
jmp
test
sbb
loop
sbb
dec
pop
xchg
dec
add
xor
mov
lds
dec
push
hlt
lcall
dec
lods
xorl
lock
fdivp
loop
adc
cmpb
mov
pop
add
xchg
fistpl
add
cltd
repz
lret
out
push
in
or
mov
js
jmp
clc
test
lods
push
popf
in
mov
mov
push
popf
dec
iret
mov
push
pop
scas
es
jl
pop
inc
mov
out
into
addr16
jp
lret
sahf
jg
out
mov
lret
lock
dec
add
push
or
roll
fucom
jae
xchg
icebp
out
test
pop
mov
aad
ss
in
push
in
call
inc
rorl
lret
push
inc
ret
icebp
imul
mov
movsl
dec
mov
inc
push
add
mov
lcall
add
cmp
scas
push
add
sub
popa
into
push
sub
cmp
pop
push
pop
int
inc
and
pop
push
adc
scas
aad
je
mov
add
incl
sbb
inc
cld
shrb
jecxz
mov
movsl
into
shlb
jp
call
and
pop
mov
je
cmp
repz
bound
push
xchg
adc
and
sub
push
or
sub
rcl
sub
mov
into
sbb
lret
repnz
mov
shll
sbb
lods
mov
cmc
mov
iret
dec
xorb
and
jg
sbb
mov
fnstsw
arpl
fld
or
xor
mov
movsb
stos
xor
sub
sub
js
ret
test
lahf
ret
pusha
push
sub
das
push
int3
movsb
mov
jns
or
mov
push
jge
and
mov
mov
push
mov
inc
sbb
out
mov
out
subl
loopne
loopne
mov
mov
stc
add
inc
mov
ljmp
dec
int
fcomps
cmc
cltd
subl
aaa
outsl
ret
daa
rcrb
pop
jne
clc
std
leave
and
pop
andb
adc
aad
push
and
jnp
mov
test
sub
push
les
sahf
imul
pop
jbe
data16
fidivrl
pop
shr
arpl
mov
add
push
ljmp
jl
mov
lods
lcall
ljmp
sar
test
cmp
xor
es
leave
inc
rcl
in
testb
cli
add
jg
jb
sarb
xchg
stos
dec
insl
xlat
push
loop
mov
mov
mov
fwait
shlb
xchg
dec
mov
aas
mov
sbb
nop
in
and
ljmp
xor
jg
push
adc
xchg
jmp
sbb
pop
scas
sahf
ds
dec
stc
dec
rorl
xchg
shl
jne
jmp
lods
jle
fwait
push
mov
scas
popf
test
out
hlt
pushf
adc
shlb
inc
scas
adc
adc
loope
rcr
dec
xlat
xchg
imul
adc
repz
jle
repz
pop
andl
pop
inc
icebp
je
pop
mov
mov
xchg
pop
aad
or
mov
pop
sbb
xchg
andb
lods
and
int3
std
push
mov
push
lods
and
aas
jge
pushf
push
sbb
jnp
jnp
dec
ljmp
jl
adc
xchg
mov
push
imul
add
pop
xor
shl
sub
push
in
lods
push
dec
hlt
jmp
or
lds
mov
mov
loope
sbb
aad
aam
push
mov
jns
in
arpl
cmp
mov
mov
nop
fcomps
push
lcall
popf
xchg
push
add
imul
inc
das
loop
lcall
xor
cli
call
sti
add
xor
jnp
movsl
adc
leave
pop
mov
ret
mov
sub
xchg
lods
cmp
pop
loope
jg
imul
js
cltd
cwtl
pop
mov
cmc
add
xchg
push
dec
fnstenv
in
mov
or
push
rclb
add
pop
lods
addl
sarb
sub
and
lock
jmp
rorl
xchg
mov
push
imul
in
add
ficomps
ja
std
and
lret
jle
cmp
adc
jmp
icebp
aam
xchg
mov
jp
repz
leave
inc
pop
xchg
xor
rcrb
adc
xchg
inc
ret
dec
std
rcrl
jbe
cmp
jmp
jo
addr16
sub
push
int3
and
sbbl
push
add
cltd
jae
jae
aad
in
ret
xchg
mov
scas
out
mov
dec
or
inc
aad
scas
in
pushf
inc
mov
push
mov
dec
in
testl
and
inc
and
int
ds
gs
in
xchg
dec
pop
movsb
les
push
xchg
lahf
icebp
mov
sub
cwtl
rcl
scas
test
out
insb
ss
fisttps
add
sbb
push
mov
movsb
leave
cmpsb
push
pop
lret
pop
lcall
mov
dec
push
add
push
sbb
xor
add
inc
mov
inc
into
sub
fs
inc
push
sbb
or
bound
out
xchg
jne
xor
in
out
add
mov
mov
mov
js
jmp
lcall
dec
jo
mov
jnp
daa
daa
cmp
jnp
sbb
add
adc
mov
in
into
inc
jecxz
xor
rcr
push
xchg
xor
gs
push
jbe
dec
dec
fmuls
sub
sbb
adc
and
mov
xorb
sbb
cli
rorl
push
test
in
mov
dec
inc
add
xchg
mov
fisttpll
and
cltd
sbb
cli
cltd
xchg
ret
mov
push
xor
nop
aaa
lahf
mov
mov
sbb
mov
in
xchg
int3
cmp
loop
clc
adc
mov
mov
loop
test
clc
jmp
cmpsb
test
das
imul
pop
or
test
adc
xchg
jbe
jae
xchg
pop
fstpl
in
xchg
test
cmp
mov
outsl
idivl
xchg
and
mov
inc
rorl
fsubrs
xchg
pop
push
and
dec
in
mov
aad
sbb
movsb
push
subl
jae
insb
inc
xchg
inc
loop
cmp
jmp
sbb
cmc
stos
mov
mov
ja
pushl
ret
mov
ret
neg
inc
jbe
sub
inc
popa
lea
mov
js
mov
test
push
xchg
insb
mov
int
pop
hlt
ffree
adc
inc
cmpsb
ljmp
and
imul
sub
pop
jns
cli
mov
imul
int
dec
cmp
or
dec
das
inc
pop
pop
cmp
mov
adc
push
and
add
insb
sub
mov
dec
push
pop
mov
push
add
push
out
jmp
mov
lahf
dec
xor
leave
psubw
mov
lret
and
and
mov
fldenv
cmc
icebp
sub
push
loopne
jg
lret
outsb
or
jmp
in
pop
mov
jne
xor
cwtl
xchg
sub
push
adc
mov
pop
scas
push
outsl
push
mov
shrl
out
outsl
sub
data16
jb,pn
mov
in
mov
sub
pop
jb
push
aaa
push
les
push
hlt
les
pop
ret
ss
dec
mov
icebp
push
ljmp
leave
mov
bound
dec
and
fidivs
push
sarl
xor
sub
mov
loop
rolb
pop
outsl
jl,pn
push
outsl
mov
int3
stc
cs
lcall
cltd
fstl
xor
and
adc
aaa
and
adc
and
into
push
jbe
dec
jmp
mov
mov
rcrl
dec
dec
pop
sub
cmp
adc
or
mov
scas
mov
insl
mov
jnp
mov
cmp
sahf
lods
movsl
sbb
aas
insl
ret
jno
push
inc
js
inc
fwait
ret
dec
call
and
push
mov
dec
arpl
icebp
lret
aad
push
stos
mov
gs
mov
sub
ret
dec
shr
or
movsl
mov
test
sbbl
aam
sub
pop
xorl
sarb
add
roll
enter
scas
xlat
idivb
inc
cld
add
push
test
or
ret
xchg
outsb
shll
jecxz
aad
arpl
les
mov
pop
mov
inc
cmp
or
mov
adc
sbb
lds
shl
movsb
mov
insl
fisttpl
in
xor
ficomps
jp
jo
sbb
mov
aad
clc
aas
inc
stos
push
adc
movsb
add
nop
mov
iret
ds
mov
mov
push
push
inc
call
pusha
cmovns
add
adc
sub
inc
lods
mov
test
add
pop
pop
add
sub
cmpsl
scas
iret
and
dec
lret
jmp
dec
sub
mov
push
es
add
scas
push
sbb
lock
test
frstor
sbb
inc
mov
add
out
mov
mov
daa
mov
sahf
ror
rcrb
aas
or
add
xor
inc
cmpsl
sahf
loope
test
xchg
hlt
hlt
sbb
adcl
insb
call
adc
jo
pop
outsb
sbb
es
insl
jnp
xor
push
push
movsb
add
sub
rorl
fistpl
gs
pop
pop
scas
and
adc
inc
aam
es
push
data16
out
mov
add
lea
mov
add
ficompl
test
pop
ja
xchg
inc
lock
mov
pop
xchg
ret
mov
cmp
out
loope
rcrl
sub
enter
pop
xchg
in
push
xchg
lcall
cmp
xchg
sbb
mulb
out
mov
pop
pop
mov
cmp
popa
negb
pushf
mov
push
dec
pop
mov
and
stos
fnstenv
push
jae
adc
icebp
mov
out
xor
lea
sbb
aad
sbb
dec
movsl
std
inc
sbb
stos
lock
fwait
pop
int3
int3
inc
mov
push
push
inc
adc
jne
adc
jo
pop
ja
popa
in
push
mov
int3
push
jecxz
sub
js
das
adc
shlb
xor
and
notl
cs
adc
fnsave
xor
and
pop
add
out
xchg
cmp
divl
push
out
push
add
xlat
out
inc
push
lock
test
dec
inc
push
test
sbb
sti
mov
mov
fbld
mov
ret
das
push
and
xor
push
nop
jne
sub
mov
icebp
push
int
int3
jno
hlt
sub
out
sahf
xchg
cwtl
dec
dec
or
lahf
sti
or
xchg
adc
dec
pushf
js
jne
loope
mov
cli
cmp
push
popa
adc
mov
mov
jge
mov
iret
dec
js
pop
cmp
aaa
mov
arpl
xor
pop
hlt
dec
adc
jmp
fmull
pop
lret
outsb
jbe
sbbl
inc
ficompl
in
std
es
push
aas
pop
lcall
push
cltd
pop
test
fstps
xchg
mov
loop
xorl
ret
dec
dec
lret
cltd
inc
loop
and
in
aad
xor
mov
inc
adc
out
dec
stc
dec
sarb
dec
jnp
mov
out
in
add
cmc
dec
push
and
push
sbb
jo
fiaddl
repz
imul
xor
cmp
push
dec
push
rcr
hlt
into
jo
xchg
fcoml
pop
fwait
fwait
sbbl
xor
inc
pushf
pop
jmp
add
pop
ror
roll
xchg
in
shll
shl
add
mov
daa
sbb
lret
and
and
lret
imul
in
ljmp
fildl
lcall
pop
cltd
pop
mov
cmp
imul
cmpsl
inc
adc
inc
dec
adc
aaa
out
inc
stos
mov
mov
addr16
divb
push
rcrb
je
mov
pop
sub
stos
xor
mov
std
mov
jp
in
and
sbbb
push
pop
cmp
xchg
enter
and
push
jno
stos
outsb
leave
hlt
inc
mov
adcb
ds
inc
arpl
mov
mov
stc
mov
rolb
packuswb
lea
icebp
or
mov
jmp
cs
push
aam
enter
int3
and
inc
jne
pusha
jl
mov
dec
das
ja
jae
push
mov
jae
dec
ret
or
inc
jl
stos
lcall
fs
pusha
int3
je
pop
cld
cs
lods
fs
ss
dec
xchg
pop
dec
or
pop
lret
je
imul
push
les
mov
stos
mov
sbb
cmpsl
mov
adc
cmpb
popf
ucomiss
push
popf
pop
mov
lcall
inc
in
pushf
jno
jp
rcrb
int3
daa
stos
loopne
enter
scas
mov
jmp
pop
dec
pop
ljmp
mov
sbb
mov
sbb
aaa
sbb
sbb
mov
test
mov
push
sbb
arpl
fildl
pop
iret
xor
in
jae
movsb
cltd
pop
pusha
jb
hlt
lds
scas
xor
and
enter
pusha
lods
cmpsb
daa
fdivr
sub
sahf
cmp
stos
push
je
fcomps
sub
jne
mov
xchg
xchg
sub
adc
add
mov
cld
mov
sbbb
and
pop
mov
or
jle
adc
int3
lret
adc
jle
leave
pop
cmp
lods
and
or
adcl
jne
lret
xor
pop
sar
mov
data16
push
bound
inc
pop
jmp
gs
dec
sahf
xchg
sbb
jecxz,pn
repz
inc
xchg
adc
stos
xchg
push
xchg
mov
jmp
dec
loopne
push
and
fisubl
insb
addl
inc
pop
ret
leave
jecxz
inc
lods
mov
mov
stc
hlt
sub
jne
out
xor
xchg
stos
mov
shrb
xor
xchg
ss
add
jbe
int3
in
and
fs
sbb
sarb
or
lcall
cwtl
adc
sti
mov
mov
sbb
fnstsw
rcr
sbb
into
nop
out
lods
mov
icebp
inc
cld
jmp
sub
ud1
pusha
or
sub
jge
mov
push
sub
mov
lahf
xor
jnp
mov
xor
icebp
inc
loop,pt
push
xchg
js
push
xchg
push
or
xor
push
loopne
xorl
aad
loopne
dec
js
in
pop
shll
adc
push
ja
jae
in
sub
sub
mov
sub
add
jl
or
rclb
xchg
mov
lcall
or
scas
pop
jo
adc
fsub
mov
add
stc
sub
cltd
bound
and
mov
fisubl
cld
in
clc
andb
mov
push
push
mov
orl
fidivl
pop
pop
or
cli
imul
push
mov
sub
nop
adc
xchg
mov
xor
jns
ljmp
pop
rorb
leave
dec
sbb
pop
sti
mov
mov
loop
in
xlat
xchg
aam
lahf
rorb
or
xchg
sti
insb
pop
rcrl
fcoml
jp
lea
out
jecxz
jno
inc
push
icebp
daa
aam
inc
daa
in
hlt
lea
push
leave
movsl
sbb
popf
scas
dec
lret
inc
lahf
stc
xor
xchg
sbb
fs
adc
sbb
mov
sar
stos
int3
and
lds
sahf
shrb
push
cmpsb
int3
xor
loop
cmp
push
add
jecxz
imul
or
sarl
stos
mov
add
or
int
js
mov
cmpsb
sub
cmp
imulb
int3
jne
lods
adc
mov
nop
shrl
pop
push
adc
lock
inc
stos
pop
dec
adc
inc
in
sbb
pop
dec
lret
jbe
cwtl
or
push
xlat
xchg
aam
aas
sahf
adcl
rolb
dec
mov
push
das
sbb
adc
mov
cmp
mov
mov
mov
sub
leave
mov
adc
pop
cmp
dec
mov
mov
sub
and
mov
scas
adc
movsb
nop
jp
xchg
add
int
sti
enter
lea
jbe
push
jae
repnz
fadds
push
orps
or
push
mov
inc
icebp
adc
test
test
fnstenv
and
out
popa
insb
cmp
inc
dec
cwtl
ljmp
cmp
mov
outsl
sub
mov
or
fld
push
mov
mov
in
mov
pop
xchg
out
add
dec
jae
lods
pop
add
xchg
and
inc
pusha
push
lret
repz
or
mov
or
cld
pop
lods
pop
test
cmp
inc
mov
mov
mov
divb
das
adc
xchg
outsb
int3
cli
mov
out
clc
loop
gs
clc
cs
in
test
xor
imulb
stos
inc
shll
dec
subb
xor
out
movsb
in
add
mov
iret
fs
cs
sti
mov
shr
insl
outsl
mov
mov
enter
cwtl
test
mov
push
xor
mov
dec
sub
jnp
jnp
push
push
fdivp
cmpl
sub
and
stc
mov
add
repz
div
pop
add
ljmp
xor
pop
push
icebp
adc
lahf
ljmp
loopne
pop
cmp
mov
jl
cltd
out
and
mov
jo
jno
dec
xor
push
mov
out
cmp
sub
dec
daa
jge
sti
push
and
xchg
aam
repz
mov
iret
xorl
movb
xor
mov
and
shlb
clc
inc
lds
adc
jp
push
das
ljmp
ja
nop
icebp
popf
sub
push
xor
cmpsl
cmp
lret
jmp
gs
xor
xchg
repz
xchg
push
mov
pushfw
into
cmp
xor
mov
shr
sbb
dec
iret
mov
sbb
cmp
add
sbb
fists
xchg
mov
inc
mov
bound
add
jecxz
mov
in
das
inc
dec
ds
lret
hlt
push
xchg
insb
loopne
test
cs
nop
gs
rclb
xor
mov
fstp
addr16
cmp
mov
mov
movsl
stc
setb
addb
push
jae
or
lock
imul
pop
mov
sarl
mov
lods
int
lahf
paddw
mov
lret
adc
test
loop
imul
mov
mov
xchg
inc
jp
fwait
xchg
out
xor
mov
jg
lods
popa
popf
mov
mov
sahf
mov
mov
pop
push
call
lahf
enter
add
mov
xchg
jae
xchg
inc
dec
or
test
push
scas
jge
jnp
lock
stos
cs
or
push
data16
push
loop
jns
jl
xchg
mov
sbb
lods
lea
inc
push
loope
ds
sbb
or
fstpt
adc
imul
fisttpll
cmp
insb
or
scas
lcall
fidivl
jmp
daa
and
xchg
and
sbb
push
or
insl
ficompl
and
icebp
cmp
repz
icebp
mov
scas
arpl
loopne
dec
ret
imul
mov
insb
rolb
or
imul
shll
scas
aas
sbb
cmpl
mov
clc
cmp
lds
xchg
fsub
popa
repnz
push
mov
push
rorl
cmp
popa
ja
call
sub
lret
lahf
lahf
add
mov
cmpsb
adc
adc
dec
pushf
jae
and
dec
mov
out
decb
sub
dec
int
jge,pt
sbb
fdiv
out
in
or
jl
mov
mov
cmpl
xor
pop
ss
mov
test
dec
cltd
mov
xor
mov
pop
or
loope
mov
divb
xor
ret
jne
xorb
ficompl
dec
test
inc
aaa
inc
ss
xchg
jne
imul
sbb
sbb
adc
bound
mov
adc
jo
cmp
add
js
pusha
lods
cmp
push
mov
mov
imul
sar
push
jmp
and
arpl
cmp
jge
xchg
push
lret
and
nop
int
xchg
lea
add
mov
jnp
into
pop
fnsave
es
lock
jbe
les
lods
jge
outsb
push
inc
push
xchg
xchg
icebp
fwait
call
dec
andb
pop
repz
cwtl
cmpsl
mov
ds
mov
insl
sarb
push
xchg
lods
test
daa
test
sbb
push
ja
das
nopl
or
pop
movsl
ljmp
movsl
in
jge
dec
or
inc
int3
in
sub
cli
mov
push
adcl
fcmovb
inc
rcrb
fiaddl
or
fidivs
movsl
movsb
leave
ljmp
clc
pop
shl
add
mov
and
add
data16
stc
ljmp
mov
ds
push
out
cmp
pop
fisubrl
in
inc
push
lock
cmp
mov
mov
das
adc
rcrb
imul
inc
aad
je
aaa
add
movb
pop
mov
mov
lock
xor
out
sub
add
test
xor
mov
lahf
push
jno
sti
aas
lahf
mov
das
push
xchg
lcall
cmp
jne
add
popf
popf
or
or
notb
jo
mov
xchg
pop
xchg
xchg
jle
sahf
rcrl
push
test
xlat
test
shrl
mov
cmp
test
fwait
push
fnstcw
dec
idivl
mov
cwtd
add
mov
fs
movsb
loop
lret
ficoms
iret
jg
push
sub
sub
or
gs
sub
sub
sbb
jl
sbb
push
xchg
xchg
ss
xchg
cmpsb
ret
sub
popa
inc
daa
repz
jle
out
pop
arpl
pop
mov
rorl
pop
mov
insb
in
lahf
ret
test
rcrl
cmc
jb
lea
loop
jb
pushf
popf
mov
push
repz
aaa
mov
daa
cmp
hlt
sahf
iret
in
data16
sbb
pusha
cli
xchg
xlat
scas
insl
sub
inc
nop
xlat
scas
in
or
scas
add
lahf
les
mov
jecxz
call
push
test
ds
mov
or
outsl
leave
jmp
xchg
xlat
inc
out
push
cmp
call
lahf
test
mov
bound
fildll
xchg
jno
inc
mov
out
mov
cmp
pop
scas
fwait
nop
cmp
sti
inc
test
lahf
pop
mov
fisttps
add
lock
add
sbb
push
inc
lods
addr16
out
adc
fstl
fs
repnz
mov
jae
sub
or
xchg
mov
lock
mov
add
push
or
jp
sbb
mov
data16
lahf
into
popf
jecxz
in
scas
cmp
inc
mov
outsl
push
xchg
sarl
or
imul
icebp
ffree
and
fs
in
and
ja
clc
sbb
jb
add
mov
or
cltd
dec
repnz
lea
addl
jle
cmp
popa
sbb
imul
cmp
pop
sbb
and
and
fistl
xor
lods
scas
adcb
pand
pop
repz
in
orl
out
adc
in
pop
dec
sbb
insb
pop
lret
inc
add
or
dec
loopne
ret
outsl
pop
mov
and
out
pop
cld
inc
decl
jl
mov
imulb
aas
aas
xor
pop
and
nopl
inc
jp
stc
les
inc
stc
das
jmp
cs
imul
outsl
push
loop
out
maxps
testl
inc
cli
movsl
mov
mov
scas
addr16
scas
and
in
dec
push
pop
dec
dec
cmp
sahf
mov
mov
adc
pop
inc
sub
loope
shlb
fdivl
not
rcr
cmp
adc
or
insl
test
jmp
sub
hlt
jp
jnp
mov
les
lods
mov
push
sahf
outsb
mov
inc
push
sbb
outsl
sub
js
lahf
aam
pushf
std
push
cmp
mov
imul
mov
push
lcall
jb
test
andl
sub
ret
sbb
les
arpl
loop
xor
push
sbb
arpl
adc
lret
inc
xchg
jmp
stc
push
enter
out
mov
ret
xchg
stc
mov
fcoml
je
movl
xchg
mov
cmp
sbb
test
ljmp
lds
push
jge
adcb
das
add
sub
inc
out
pop
es
insl
fisttpll
mov
pop
xor
ret
dec
test
loop
xchg
cs
xor
push
mov
adc
adc
add
mov
xor
arpl
dec
or
mov
xor
mov
adc
sbb
arpl
inc
sbb
adc
pop
mov
mov
lods
int3
out
cmp
lods
jge
xlat
mov
pop
xor
sbb
fiadds
enter
mov
push
jae
das
aaa
pop
shll
pop
or
out
mov
xor
dec
ja
sbb
lock
jmp
mov
out
add
pushf
aaa
pop
cs
add
js
mov
jmp
aaa
mov
mov
pop
or
sbb
frstor
cs
cmp
xor
lret
jb
adc
int
xor
loop
hlt
rcll
mov
loope
sbb
cmp
fisubs
xchg
dec
pop
cltd
or
jecxz
push
jmp
cltd
adc
jnp
jecxz
mov
inc
sub
js
cmp
mov
iret
jno
mov
or
cwtl
xchg
cmp
xor
scas
addr16
add
out
jnp
jecxz
add
cmc
sbb
push
adcl
mov
repnz
inc
lods
inc
push
dec
fnstsw
in
ss
cwtl
xor
icebp
pop
roll
mov
xor
push
es
cmpsl
int
mov
scas
fcomi
scas
push
imulb
pop
fs
xchg
fidivs
rol
inc
xchg
icebp
iret
out
adc
xor
xchg
ror
xchg
pop
jmp
jns
xchg
add
jecxz
pxor
cmpsb
in
mov
mov
jne
fsub
adc
dec
ficomps
pop
gs
popf
xor
xchg
or
push
inc
sub
psrad
gs
push
rclb
mov
les
xchg
dec
fists
cmp
stos
cmp
rcrl
push
imul
inc
sahf
cmp
sub
push
xor
mov
lcall
hlt
lret
rorl
enter
adcb
xchg
jecxz
insb
shrl
push
jns
sbb
and
and
aad
mov
sbb
std
sahf
push
clc
jecxz
mov
lcall
adc
mov
in
jecxz
test
call
push
dec
and
xor
jl
inc
mov
sbb
mov
jg
xchg
ficomps
gs
xlat
push
rorb
fstpt
cmp
in
lcall
dec
outsl
sbb
aaa
sbb
sbb
adc
test
jo
pop
cli
data16
pop
add
stos
fidivl
cltd
iret
sub
jo
ds
sahf
movsl
sbb
push
shrl
adc
jns
mov
sub
add
int
in
imul
sbb
lahf
sbb
xor
movsb
mov
xor
pmaddwd
jb
je,pt
adc
mov
push
popf
or
pushf
mov
sahf
jg
push
in
and
jmp
push
lcall
push
mov
pop
or
icebp
mov
es
adc
or
in
xor
mov
and
mov
data16
subl
jno
xor
in
pusha
push
push
into
sub
push
stc
mov
jb
in
push
adcl
in
dec
in
mov
push
enter
fs
sbb
jg
xor
pop
iret
push
mov
cltd
cmpsl
addr16
xchg
xchg
lret
cmpsb
ss
negb
lea
adc
aaa
test
jo
jno
bound
arpl
repz
call
pop
clc
jne
imul
push
out
xor
xor
push
cmc
pushf
pop
jmp
testl
mov
fistpll
mov
daa
and
mov
sti
gs
cli
and
scas
test
and
and
mov
imul
shrl
lods
sbb
aas
pop
pop
mov
ja
push
jno
inc
icebp
adc
xor
fucomp
daa
jmp
xor
dec
add
push
inc
aaa
lret
popf
sti
pop
xchg
jne
lods
loope
sbb
dec
pop
adc
shrb
test
pop
push
dec
push
mov
adc
xor
gs
lahf
sub
lahf
pop
adc
mov
out
dec
in
out
cmp
xchg
xchg
lea
lcall
inc
in
mov
repz
int
dec
outsl
andb
and
pop
sti
xor
or
bound
popl
fcmovne
outsl
mov
in
ret
sbb
les
test
jne
ja
jno
je
mov
sub
adc
add
sub
inc
mov
pushf
xchg
je
xchg
lcall
les
mov
imul
mov
pop
or
xor
clc
sub
insb
push
sub
addl
test
scas
movsb
jmp
inc
popa
jmp
jecxz
jecxz
lds
jnp
or
push
cs
stc
addr16
sar
lret
stos
das
addr16
dec
mov
push
lods
cld
or
xor
mov
data16
arpl
mov
test
es
push
lods
adc
xor
push
mov
and
sub
mov
loopne
arpl
cmp
divl
sub
les
cwtl
sbb
xchg
inc
ret
in
cwtl
sbb
pop
dec
xchg
mov
into
jl
cli
lods
xchg
ljmp
or
shlb
cmp
movsl
sub
cmpsl
push
pop
xchg
cld
fwait
mov
and
loop
inc
sub
mov
or
outsb
push
mov
mov
fimull
shlb
lcall
cmp
push
leave
push
test
out
cli
sbb
cltd
push
pop
imul
push
pop
xlat
cli
scas
cmp
push
jne
dec
and
mov
mov
dec
out
test
lea
xorb
stc
stos
rcr
pop
test
cmp
sbb
jne
in
dec
and
dec
mov
pop
repnz
mov
sub
xor
clc
mov
popf
adc
int
mov
xchg
mov
and
xchg
dec
jge
fildll
outsb
cmpsb
sbb
mov
cltd
cld
dec
shll
insl
lods
cmp
push
mov
fcmovnbe
int3
inc
xor
stc
daa
int3
mov
jo
cmpsb
aam
mov
loopne
pop
jp
lods
sbb
mov
jo
bound
xor
pop
fwait
into
jge
insl
dec
loope
xchg
dec
push
dec
mov
test
lock
mov
add
jp
mov
jne
sub
xor
xorl
call
jns
cltd
iret
push
test
xor
leave
outsl
je
xlat
mov
jge
cwtl
ror
popa
dec
fwait
das
mov
mov
inc
sbb
out
out
jle
cmp
mov
das
xchg
fisttpll
push
cwtl
ds
mov
pop
int3
or
pop
mov
or
leave
jmp
adc
cmp
sbb
mov
xchg
sbb
inc
sub
and
dec
pop
jb
inc
xchg
scas
xchg
stos
ror
pop
xchg
or
std
out
jmp
xchg
fidivrl
pop
xor
loope
sahf
mov
sarl
rolb
fdivrs
cli
cmp
popf
test
mov
jbe,pn
dec
adc
mov
fistpl
dec
adc
xor
outsl
push
mov
jo
mov
pop
sbb
jae
mov
and
stc
call
lret
push
loope
add
movsl
sar
leave
push
rolb
popf
cmp
loope
das
xchg
dec
mov
or
je
mov
or
cmp
rcrl
push
push
mov
adc
jns,pt
mov
popf
mov
popa
outsb
hlt
ret
daa
ret
mov
lret
mov
inc
mov
inc
lds
or
iret
add
test
sbb
push
pop
mov
test
jo
push
and
stc
jg
pusha
push
popa
adcb
push
mov
je
dec
mov
inc
sbb
jecxz
adc
sub
es
pop
out
xchg
iret
jno
jno
push
enter
adc
fiadds
xchg
stos
dec
int3
fnsave
xor
notb
dec
sub
xchg
sub
and
popa
add
shlb
xchg
cs
lret
mov
rol
jecxz
fs
out
pop
sbb
outsb
push
in
and
aaa
fimull
jle
cltd
cwtl
scas
movsb
mov
fsub
inc
fdivs
pop
loope
fcomi
add
or
push
in
push
mov
inc
icebp
adc
push
sti
lret
jno
jle
pop
stos
js
popf
cli
adc
or
into
ss
inc
mov
mov
add
jg
out
sub
jnp
cwtl
sub
iret
subl
jmp
adc
insl
mov
xchg
test
les
rol
cmp
pop
mov
jns
add
cmp
dec
sub
dec
xor
cmpsl
mov
in
inc
jns
xor
xor
mov
rcrl
mov
bound
or
sub
jb
jle
inc
repz
add
add
cs
mov
mov
sub
cmp
fwait
hlt
shrl
mov
dec
add
cli
nop
test
mov
and
call
stos
cli
inc
add
or
xchg
hlt
outsb
mov
add
mov
mov
add
mov
jp
fsubr
push
add
sbb
xor
pop
aas
ficoml
test
dec
pop
xchg
shll
js
js
clc
push
fwait
pop
fcoms
lods
stos
push
pop
test
and
push
cmp
or
aas
rcrl
cmp
scas
sti
push
inc
cs
cmp
sub
pop
pop
repnz
inc
xor
pop
es
jae
aaa
and
std
xchg
inc
jmp
jns
mov
dec
dec
and
push
pushf
jl
std
sbb
lcall
pop
hlt
add
inc
mov
pop
pop
add
push
and
loope
mov
adc
fdivp
xchg
pushf
push
sbb
inc
decl
addl
adc
into
push
outsb
pushf
or
sbb
fstl
ret
in
inc
adc
cmc
mov
popf
push
hlt
outsl
pop
lcall
xlat
push
xchg
les
cmp
and
mov
mov
popf
add
jecxz
sbb
inc
push
fsubl
adc
xor
adc
es
loop
xchg
xchg
add
fistps
or
push
addr16
pop
aad
test
xor
add
ds
or
add
int
cmc
cmc
ret
xchg
lcall
ret
pop
mov
cmp
inc
sub
jb
mov
fxch
ja
dec
movsl
jnp
xor
jae
gs
and
xchg
or
arpl
inc
in
fistl
cmc
in
xchg
adc
jnp
push
sar
fcmovu
mov
jno
fcomps
inc
pop
and
sti
leave
inc
repz
adc
push
mov
insb
adc
dec
xor
mov
nop
sub
pop
pop
cmpsl
mov
test
push
sbb
aam
xchg
popa
lods
and
push
popa
jb
sarl
mov
mov
scas
fdivs
roll
out
out
push
int
mov
les
insl
mov
sbb
cmp
dec
das
push
xchg
and
dec
inc
icebp
js
pushf
test
push
or
xor
dec
mov
les
push
jb
add
pop
add
out
fstps
stos
shlb
orl
or
xchg
adc
push
dec
cmp
into
out
enter
scas
jns
adc
pop
xor
xchg
mov
inc
lods
pop
mov
test
mov
and
sti
and
pop
xchg
nop
jns
outsl
push
shlb
jbe
add
pmullw
mov
addl
sub
popf
jns
clc
pop
shl
inc
lea
xor
je
std
hlt
lcall
nop
in
iret
lcall
mov
sbb
les
push
pop
in
mulb
mov
add
lods
or
das
cli
out
scas
ficoml
mov
cmp
arpl
adc
out
les
mov
mov
cmp
adc
mov
bound
cmp
mov
mov
xchg
mov
mov
pop
xchg
push
mov
mov
jle
popf
cltd
cmp
imul
dec
das
cmp
jo
adc
lret
ret
or
mov
pop
mov
lds
push
sbb
or
xchg
and
adc
dec
jg
add
inc
mov
test
xchg
cmp
push
add
jmp
jg
mov
xchg
inc
lods
daa
in
cmp
cmpsb
lret
shll
jo
fmul
mov
xor
test
icebp
fdivs
push
xchg
mov
out
add
mov
mov
ljmp
or
fdivl
je
jb
mov
ljmp
mov
mov
adc
mov
mov
dec
pop
sahf
push
mov
push
in
lret
cmp
frstor
scas
and
cmp
cld
sbb
out
or
or
or
pop
insl
xchg
add
inc
cmc
out
testl
cmp
adc
xchg
imul
jp
icebp
mov
pop
sahf
fcmovb
jbe
outsb
ss
xchg
sub
push
mov
pushf
clc
test
popf
movsb
jb
push
push
push
or
jge
ljmp
push
mull
gs
hlt
cmp
shl
xor
mov
mov
out
inc
sbb
inc
hlt
cmpsl
mov
loope
daa
aad
ljmp
aad
mov
mov
sbb
aad
or
adc
cwtl
pop
mov
xor
push
inc
rolb
shll
pop
out
test
push
enter
loopne
add
sbb
jle
scas
pop
push
fdivp
xor
das
pusha
stos
inc
sbb
push
ret
iret
repnz
inc
ftst
xchg
and
add
pushl
add
or
add
arpl
ficomps
shlb
imul
std
xchg
sbb
jnp
enter
into
mov
mov
pop
fnsave
test
in
stos
or
int
icebp
push
sbb
push
jne
rorb
adc
push
xor
clc
add
outsb
repz
xor
dec
mov
insb
pop
push
add
fs
cs
jl
cmp
std
loop
pop
fbstp
repz
push
fsubrl
fsubr
orps
jmp
or
aad
imul
lret
cmpb
pushl
jle
in
add
cltd
icebp
jle
add
mov
jbe
ds
es
aaa
mov
pop
and
pop
dec
mov
sub
js
pop
lods
sahf
in
enter
pop
out
in
shl
insl
inc
aas
or
in
fldenv
sub
aaa
fldcw
pop
out
pop
dec
or
xchg
lret
mov
sub
push
mov
mov
jns
and
push
xchg
cmpsl
mov
mov
sub
push
pushf
mov
push
mov
fwait
adc
mov
sub
test
icebp
aas
inc
xlat
cmp
in
pop
xchg
mov
mov
es
insb
inc
inc
inc
lea
mov
jecxz
add
add
sahf
sbb
jno
cwtl
dec
lods
lret
lea
lea
push
xor
xchg
jae
xor
dec
jge
nop
adc
sti
or
ss
jo
aad
into
movsb
inc
in
fistps
lret
orl
push
mov
in
sbb
lret
loope
push
ds
mov
jmp
push
lea
mov
stc
push
jmp
add
cmpb
in
out
sub
adc
bound
mov
inc
popl
dec
xchg
ljmp
repnz
ds
adcl
decl
lret
leave
xchg
inc
pop
jnp
mov
mov
sbb
in
and
push
rcll
xchg
cld
push
sub
scas
mov
or
movsl
jns
repnz
jge
sub
adc
cmp
xor
movsb
xchg
ljmp
popw
ret
jge
mov
xchg
pop
aad
cwtl
cmp
lods
movsb
or
arpl
mov
push
push
inc
or
jo
push
arpl
pop
and
add
dec
gs
sub
out
pop
xchg
xor
imul
test
insl
push
roll
es
inc
in
shlb
adc
mov
sub
fwait
adc
andb
mov
lds
sub
mov
xor
adcb
fs
inc
rcrb
inc
mov
test
shl
lcall
jne
jp
addr16
xchg
or
mov
arpl
in
call
lds
jb
sbb
dec
iret
cmp
pop
xor
dec
mov
gs
in
pop
ds
pop
call
arpl
stos
fidivl
pop
pop
out
push
inc
push
fstps
cmp
inc
sbb
jno
pop
mov
lea
rclb
sbb
rorl
fadds
enter
jp
sub
out
nop
sub
xchg
or
adc
xor
pushf
aaa
and
adc
or
loope
paddsb
sub
inc
jge
cs
sub
jp
or
rol
sub
fstps
jecxz
adc
push
es
fiaddl
dec
dec
adc
daa
dec
ret
jecxz
jae
pop
in
mov
dec
sbb
jmp
push
test
jle
push
xchg
sub
sub
pop
xchg
fstl
lock
cmp
cs
push
push
cmp
xor
aaa
fidivl
daa
cwtl
lds
inc
movsl
mov
lahf
jle
and
jecxz
lds
pushf
shrl
data16
ret
imul
popf
add
jp
cmp
xchg
cld
std
pop
or
xor
push
test
ret
movl
pop
pushf
mov
inc
mov
pop
test
pop
inc
and
out
into
scas
repz
mov
out
xor
sub
lahf
arpl
sub
dec
inc
cmp
adc
ja
int
pushf
loopne
cli
fstps
mov
jnp
jmp
mov
icebp
pop
cltd
adcb
sbb
leave
das
push
jmp
pop
popa
xor
push
mov
cmp
fdivs
shrl
pop
sti
xchg
mov
dec
xlat
mov
push
push
lock
js
mov
sbb
add
mov
xor
fxch
dec
ja
or
mov
sub
jo
add
cwtl
pop
jp
cwtl
mov
es
push
mov
int3
and
ret
out
sbbl
and
inc
shlb
out
pop
std
add
push
pop
aaa
pop
movsb
repnz
mov
xchg
or
loop
shll
inc
xchg
mov
pop
inc
inc
in
push
sbb
pop
rcll
repnz
outsl
jbe
push
push
rcrl
outsb
mov
gs
rorl
mov
sub
mov
add
cmp
inc
pop
jae
pop
cmp
rcrb
repnz
inc
pop
mov
xchg
fwait
pop
inc
repnz
pop
and
in
add
mov
inc
and
add
scas
xor
nop
jnp
ja
popl
mov
imul
cmpsb
push
cs
mov
inc
and
mov
jg
js
mov
mov
inc
add
mov
int
mov
push
push
adc
das
pop
in
lods
inc
cmpsb
mov
lods
cmp
mov
inc
movsb
dec
or
stc
jp
daa
aas
aad
pop
ljmp
pop
xchg
sbb
push
repnz
push
dec
dec
leave
xor
xor
or
movsl
add
xlat
mov
imul
repz
cs
hlt
xlat
shlb
rclb
or
hlt
xchg
sub
sbb
dec
dec
movsb
sbb
xchg
lahf
test
and
pop
jae
sbb
lea
addr16
js
insl
jne
push
sbb
idiv
and
and
cmp
test
inc
repz
shr
fstl
aaa
push
cs
aam
cmpsb
dec
cli
subb
sub
pop
dec
xchg
mov
sbb
dec
int3
ret
push
movsb
cmp
xor
clc
es
or
push
mov
in
sbb
call
pop
rorb
xor
and
mov
js
cld
mov
xchg
int3
les
pop
and
or
test
fldl
movsl
dec
nop
mov
scas
lret
jl
shr
leave
jl
fdivp
fisubl
mov
inc
mov
in
xor
fs
ds
mov
or
ret
ljmp
fsts
xor
cmp
adc
pop
arpl
cmp
scas
or
out
aas
mov
jg
mov
sti
push
mov
sar
scas
add
sub
xorb
aam
inc
sbb
pop
scas
ret
ss
fistl
fistpll
bound
pop
jo
sahf
mov
sbb
jge
outsl
rclb
iret
sbb
pop
xor
dec
dec
repz
pushf
bound
xchg
ss
mov
or
push
fildl
sub
xor
shll
jb
negl
pop
fs
ja
pop
and
pop
push
mov
pop
jbe
xchg
push
std
fs
mov
inc
shl
jge
mov
into
cmp
and
out
sbb
loop
subb
aad
fcomi
lds
cmc
add
xchg
inc
xor
add
test
cmp
adc
mov
daa
adc
inc
divb
cmp
into
hlt
jns
pop
test
stos
mov
xor
xlat
jmp
sbb
xor
sbb
lock
test
xor
dec
or
addl
sub
test
cmpsb
sub
adc
movb
mov
push
mov
sub
inc
inc
adc
push
ds
push
scas
or
shlb
mov
sub
lds
pop
adc
fisubl
jg
sbb
enter
pop
jmp
loopne
jg
test
jnp
and
adc
int3
push
dec
dec
sub
xchg
push
out
and
or
mov
dec
pop
and
and
cmc
add
roll
mov
add
insb
clc
jns
imull
mov
xchg
pop
jb
add
sub
pop
hlt
xlat
mov
cmp
mov
scas
mov
xor
sahf
lock
cld
mov
jmp
sub
sub
pop
outsb
mov
clc
sbb
sbb
xchg
or
inc
loop
mov
dec
js
sub
pop
push
adc
arpl
movsb
push
mov
and
jns
xor
ret
js
jge
or
cmpsb
ret
add
fldcw
push
pusha
mov
xor
nop
int3
loop
mov
int3
js
jo
cmp
xor
jmp
dec
jne
lret
jb
cmp
pushf
sbb
roll
push
or
and
push
negb
dec
rcl
sub
dec
adc
subb
pop
add
loope
cmp
push
xor
out
cmp
sub
iret
pop
cmpsl
push
ret
and
push
daa
and
inc
into
leave
jae
push
int3
inc
jnp
scas
xor
pop
jg
incb
aad
loopne
aas
cli
mov
mov
sub
lock
xor
pop
test
dec
loopne
push
xchg
int3
out
testl
and
and
mov
xchg
negl
imull
cld
sbb
pop
iret
push
sub
jge
enter
xchg
movsl
lods
mov
jo
and
rcl
cld
dec
jecxz
loope
xlat
xchg
scas
push
imul
iret
jl
leave
clc
mov
mov
mov
test
pop
cmp
mov
addb
fdivrl
mov
dec
inc
push
mov
insb
scas
addl
cmp
adc
lcall
push
lret
push
inc
jecxz
pop
rcrl
dec
mov
scas
cmpsl
jl
push
idivl
or
add
lcall
pushf
cs
rcll
cwtl
add
adc
in
sbb
fucomp
inc
mov
sbb
call
xchg
pop
mov
es
cmp
dec
xchg
dec
fwait
cs
repz
shll
aas
or
insl
cmp
mov
dec
loope
xorl
inc
mov
lret
in
jno
push
xlat
subps
mov
mov
or
outsl
xchg
popf
dec
pop
lods
lods
mov
mov
sub
sub
mov
and
dec
in
subl
test
popf
mov
nop
scas
sbb
dec
out
pop
clc
add
arpl
aam
mov
jl
out
clc
xlat
dec
push
out
ljmp
mov
mov
out
push
push
push
xchg
push
nop
mov
cmp
xchg
push
jle
in
mov
pop
mov
mov
dec
test
movsl
leave
sbb
lea
jbe
test
ljmp
mov
cmpsl
or
test
or
mov
outsl
sbb
dec
jp
fisubrs
mov
arpl
repnz
outsb
mov
lods
mov
shr
cmp
outsb
xchg
and
cmp
cmp
and
inc
add
aam
arpl
fisubl
cmp
fsubl
adc
cmp
scas
cltd
cmp
xchg
mov
mov
mov
shll
imull
out
sub
sub
mov
adc
mov
xchg
xchg
shrb
and
add
lret
rcr
int
xchg
cmp
pop
mov
inc
les
sbb
add
inc
cmp
test
imul
xchg
xchg
popa
xchg
xor
inc
mov
sbb
scas
daa
cmp
insl
aas
daa
addr16
push
fwait
loopne
in
fwait
mov
mov
aas
push
stc
les
xacquire
inc
sbb
mov
fsubrp
test
xor
aad
inc
jnp
data16
or
push
ss
js
mov
push
pop
negl
xchg
mov
sub
scas
cwtl
and
pop
mov
and
mov
lds
jns
lea
leave
jle
dec
sbb
fs
ljmp
dec
mov
dec
iret
clc
fstps
emms
loop
jbe
mov
fisttpll
jle
movsb
mov
jb
iret
aad
fwait
cwtl
mov
ds
inc
popa
out
inc
jae
fldz
loope
pop
arpl
sbb
cmpl
fs
imul
mov
xor
mov
cli
pop
cltd
test
data16
add
lods
mov
loopne
add
and
outsb
es
mov
test
mov
lahf
fs
jl
call
in
fbld
popf
and
mov
add
sarb
out
lahf
aaa
or
sbbb
andl
mov
loop
bound
push
mov
sti
xor
mov
or
push
outsb
sub
mov
pop
pushf
loopne
xchg
jl
mov
sub
xor
pop
pop
mov
rep
repnz
add
and
add
dec
fsubrp
stc
lret
cmp
mov
ss
fsubl
pop
imul
inc
mov
xor
adc
test
push
push
xchg
jle
fwait
in
fsubrl
sbb
mov
mov
bound
xchg
adc
mov
xchg
stos
or
cli
xor
ja
pop
xchg
xchg
adc
in
dec
mov
fistps
lods
outsb
hlt
sarb
mov
dec
mov
or
or
jp
and
mov
fistpl
test
mov
arpl
aaa
loope
push
adc
out
call
pusha
lea
cmpsl
xchg
lret
daa
mov
arpl
dec
mov
les
lahf
cwtl
cld
adc
sbb
mov
addr16
pop
mov
mov
arpl
xor
aam
jae
stc
ret
and
fdivrl
leave
ja
cltd
fcomip
jge
icebp
jns
jmp
leave
mov
xchg
push
negb
out
imul
sbb
sbb
ss
ja
lods
jge
das
mov
sbb
repz
lea
inc
adc
cld
rcrl
sub
adc
xchg
aas
stos
jb
xor
xchg
rcll
push
cltd
mov
pusha
ss
clc
and
mov
test
add
data16
ficoml
loop
stc
repz
xlat
out
idivb
jge
inc
lea
xchg
div
call
iret
cmp
sbb
arpl
inc
pop
ljmp
filds
xor
or
call
cmpsb
xchg
mov
out
repnz
cmpsb
add
jmp
pop
xchg
nop
loope
divps
fisubrs
insb
test
sub
into
inc
incl
pop
divl
dec
jne
and
sbb
or
dec
xchg
aam
cmpsl
lods
lcall
out
mov
sbb
jne
roll
mull
pop
push
jecxz
test
xchg
jb
int
stos
imul
sub
sahf
shlb
mov
fcmovbe
sub
bound
js
lahf
test
cli
fs
push
incb
push
enter
lret
movsl
fimull
or
sbb
jecxz
mov
mov
ljmp
cmpsl
or
pop
jp
enter
jne
jecxz
push
jnp
nop
jae
fwait
movb
adc
xchg
arpl
fmulp
adc
stos
pop
xchg
jbe
jle
sarb
js
inc
xchg
xorb
enter
mov
mov
mov
adc
mov
xchg
rclb
outsl
cmp
and
clc
mov
or
rcr
jge
fwait
sbb
lock
and
mov
inc
pushf
in
lods
rclb
aas
or
sub
aas
ds
sub
cltd
ja
lock
adc
jns,pt
popa
xlat
lret
lahf
xor
call
mov
jg
inc
add
sti
cmc
lds
mov
xor
push
mov
out
mov
and
lods
mov
pop
xlat
adc
popf
std
sti
xchg
jge
sbb
insb
add
adc
mov
mov
data16
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
sbb
cmp
push
ffree
fstps
aam
fwait
jns
push
stc
or
cmpsb
cmp
pop
inc
sti
mov
insb
sbb
mov
mov
jmp
pop
xchg
mov
daa
adc
icebp
cmpsl
mov
sti
pop
clc
add
jecxz
pop
sbb
xor
mov
fxch
mov
cmp
jno
xlat
icebp
inc
mov
xor
cli
je
xorl
cltd
sub
inc
bound
xor
ret
je
jge
test
cmp
mov
dec
mov
xor
or
cmp
loopne
cmp
and
scas
and
fcmovne
add
stos
mov
jle
popf
mov
sbb
mov
adc
popf
xchg
lahf
ja
sub
add
sahf
pop
out
in
pop
dec
lret
test
leave
xchg
in
pop
int
insb
mov
xor
or
xchg
int3
repnz
cmc
jns
es
stos
mov
int3
fdivs
flds
sbb
sub
lahf
mov
clc
xor
add
in
call
jmp
icebp
aaa
fidivs
sub
xchg
mov
sbb
lahf
pop
iret
out
xchg
jb
add
lds
fildl
xchg
dec
scas
test
push
push
out
xor
clc
jae
rclw
jmp
outsl
scas
add
mov
mov
fucom
adc
nop
pop
push
loope
gs
jge
xchg
lahf
out
shlb
jge
rol
mov
les
xchg
dec
enter
minps
mov
popl
pop
pop
xchg
cmpsl
and
int3
clc
lds
push
fnstcw
repnz
iret
adc
xchg
outsb
add
mov
mov
repnz
dec
dec
cld
stos
stos
popf
and
cmpsl
cmpsl
mov
int
xchg
aam
enter
mov
cmpsb
push
jle
andb
xchg
stos
nop
jge
inc
std
mov
loope
mov
xchg
das
sub
loopne
mov
aad
xchg
sbb
fwait
cli
lods
pop
in
gs
aam
shll
icebp
xlat
and
mov
pop
mov
jecxz
das
or
push
divl
jl
stos
roll
popa
push
mov
and
inc
adc
jecxz
inc
jns
subb
inc
aad
or
xor
pushf
adc
insl
push
mov
cmp
cmp
gs
clc
xor
mov
nop
adc
mov
dec
outsl
clc
shl
rcrl
mov
adc
cmpsl
pop
mov
mov
pop
inc
pop
pop
jnp
sub
and
xchg
shrl
jmp
cmp
cmp
in
add
dec
shrb
mov
dec
sub
pushf
or
ret
sbb
sbbb
ljmp
mov
mov
into
add
dec
jl
lea
les
push
mov
enter
push
sbb
sub
pushf
jo
mov
push
shr
mov
iret
je
fisubrs
inc
int
push
push
lods
or
xor
cmp
sub
neg
addr16
insl
fisubrl
fcomi
lds
add
push
push
mov
xor
add
sbb
push
mov
lahf
aam
loopne
call
inc
cltd
inc
dec
xlat
mov
mov
in
mov
dec
xorb
lods
xor
pop
test
adc
add
arpl
add
lahf
fwait
pop
sub
mov
pop
std
push
das
xor
fcompl
and
cmp
pop
mov
ja
inc
jae
dec
repz
ja
enter
insl
xchg
clc
das
loopne
dec
cmp
mov
sub
shrb
es
adc
and
inc
jb
fwait
movb
mov
lret
in
test
imul
dec
call
ljmp
mov
add
xor
dec
mov
out
das
xlat
stc
sbb
ret
cmp
pop
xchg
pushf
mov
pop
popa
filds
mov
cli
push
xchg
sub
push
testb
test
aad
xchg
fimull
xchg
mov
dec
pop
mov
int3
bound
ss
add
sub
sbb
sbb
movsl
popa
pusha
jae
mov
push
jno
in
lret
out
call
jmp
xchg
push
popf
add
aaa
mov
xor
aad
mov
scas
sub
sub
cmpsl
ja
pushf
mov
hlt
adc
xor
mov
and
xlat
cmp
fidivl
pop
dec
aad
and
sub
and
push
in
dec
pop
out
rcl
xchg
loope
aas
outsl
inc
inc
jl
add
mov
or
xchg
pop
shll
pop
outsb
lret
out
sub
shlb
pop
lods
pop
aad
cmp
mov
cmpsl
jne
lods
into
adc
loopne
cmp
mov
arpl
add
out
inc
xchg
aad
xchg
stos
cld
mov
movl
shlb
mov
pushf
rcrb
mov
add
mov
cmp
cli
pop
mov
mov
xor
js
fisubrl
sub
test
xor
rclb
popl
ss
and
cltd
lret
int
jne
movl
popf
mov
xchg
leave
jb
add
test
mov
xchg
sub
das
fistpll
nop
fdivl
inc
mov
cmp
pop
repnz
pusha
xchg
loope
xorl
rorb
scas
ret
ja
packsswb
jp
inc
dec
inc
sbb
sahf
mov
inc
aas
dec
and
aas
or
mov
lahf
imul
popf
popa
mov
lds
dec
out
sbb
xchg
nop
cld
pusha
xor
cs
cmp
xchg
jge
pop
mov
lcall
cmp
popf
cmp
rcrl
xchg
mov
xchg
das
mov
js
popl
in
lods
cli
daa
jp
and
mov
mov
jne
sub
es
jecxz
xor
dec
fucomip
adc
call
and
sbb
cmpsb
fistpll
mov
push
push
push
push
call
dec
add
ds
jg
mov
pusha
jns
mov
pop
imulb
push
mov
fs
or
adc
pop
or
cli
cmp
rcrl
mov
je
js
sbb
pop
ret
fcomps
movsb
jbe
test
in
orl
cmpsb
les
xchg
push
into
aas
ljmp
insb
sbb
xor
mov
popa
leave
dec
pop
imul
lds
dec
insb
sub
sbb
and
cmp
mov
and
adc
out
pop
push
cmc
jmp
adc
push
pop
add
sub
jne
or
lea
or
push
xor
mov
cwtl
stos
jns
out
test
xorl
mov
int
mov
and
fcomps
lds
add
mov
fldl
sbb
push
orl
mov
aad
mov
cmpsl
insb
scas
inc
xor
cs
je
cmp
and
pop
aam
in
mov
test
dec
dec
and
lret
stos
push
fwait
xchg
lock
push
pop
hlt
mov
or
inc
push
shl
aaa
adc
add
cmovs
pop
jo
scas
ret
adc
ret
in
mulb
xchg
mov
jp
pop
xchg
aas
xor
adc
xchg
or
mov
repnz
sub
push
cmp
jp
mov
push
fadds
dec
cld
jo
test
xor
test
cmp
popa
test
jl
push
lods
mov
mov
push
std
sub
mov
pop
pushf
sbb
push
and
dec
movsl
stos
cmp
lock
cmp
xchg
popf
fisubs
lret
fcomps
and
adc
cmp
jb
adcb
shll
mov
iret
shll
std
push
mov
xchg
addr16
dec
adc
lgs
hlt
cld
sub
and
mov
push
mov
jnp
iret
inc
nop
cli
xchg
xchg
pop
lods
lret
xchg
pop
mov
rolb
push
xchg
fildll
xchg
push
sbb
mov
stos
pushf
iret
mov
inc
pop
sahf
push
hlt
mov
addb
arpl
mov
loop
adcl
es
shl
bound
movsb
out
rclb
cmp
pop
jle
addr16
push
dec
test
jg
fs
xchg
gs
je
sub
sbb
or
and
lahf
adcl
push
jb
jecxz
cmpsb
ja
mov
mov
movsl
call
sbb
ljmp
sahf
jnp
scas
xchg
or
mov
inc
push
and
dec
adc
or
movsb
sbb
int
cmc
aas
cwtl
and
sub
or
or
pop
add
pop
cmp
add
mov
push
fidivrl
push
rol
add
dec
sar
mov
sbb
xchg
icebp
xor
pop
jge
mov
in
shl
sbb
sbb
icebp
lods
test
nop
les
push
dec
arpl
xorl
adc
stc
push
add
push
cmp
jae
xor
xchg
aaa
sub
ret
sarl
sbb
cmp
mov
inc
cli
das
cwtl
and
pop
icebp
adc
faddl
nop
mov
aam
or
ret
int3
mov
pop
fmulp
and
decl
fcomi
ret
std
arpl
icebp
mov
sbb
xor
jle
hlt
sub
shll
out
out
div
cmpsb
lds
test
es
call
inc
inc
adc
jo
std
rol
sbb
mov
or
call
push
sbb
mov
in
test
dec
loope
push
pushf
sub
aad
pop
je
mov
pushf
push
pop
mov
mov
repnz
cltd
test
pop
dec
adc
sub
test
jae
loopne
ret
mov
hlt
lods
and
aaa
and
aas
pop
insl
push
inc
mov
testb
mov
cmp
push
or
imul
mov
scas
mov
in
fsubrs
icebp
lods
nop
scas
inc
inc
pushf
out
outsb
xor
push
mov
mov
sbb
push
push
push
sub
inc
mov
add
or
xlat
pop
sbb
fcom
out
pop
push
and
jo
mov
add
int
clc
adc
jae
inc
ss
sub
aad
rcll
xchg
jno
clc
jne
jbe
push
cmp
dec
and
cs
mov
cmc
and
ret
mov
add
out
pop
sti
push
icebp
mov
pusha
jb
sbb
cmp
mov
xchg
call
dec
dec
cs
scas
sbb
mov
and
ss
rol
icebp
test
fwait
stos
mov
pop
loop
divb
frstor
cmc
rcr
adc
rorb
jle
outsl
sbbb
sub
xchg
fimuls
mov
js
push
xlat
mov
or
aaa
imul
dec
fsubs
dec
nop
mov
nop
mov
cmp
in
idivl
jns
push
push
loopne
aam
dec
outsb
pop
xor
mov
test
mov
xchg
push
hlt
insl
ret
notb
jo
ss
jnp
push
out
and
pop
enter
dec
inc
mov
jb
idivb
cmp
pusha
ror
je
xor
mov
lret
or
andl
fisubl
xchg
mov
sahf
movb
xlat
lods
pop
jae
mov
aaa
pop
mov
cbtw
lcall
jl
pop
daa
dec
bound
push
dec
jnp
stos
push
lock
sub
pop
pop
subl
andl
mov
push
jbe
sub
movsb
fisubrs
sub
sbb
in
cmp
orl
mov
pop
int3
sbb
push
add
out
nop
nop
adc
or
rorl
cmpsb
xchg
sub
inc
cmpsl
xorl
pop
ret
pushl
sbb
jl
push
mov
push
lret
or
push
jae
sub
jg
pop
lret
push
dec
lahf
inc
push
xchg
mov
int3
fdivrs
pop
cmp
test
fdivrl
cmp
fcomps
mov
ret
pop
lds
ss
and
xchg
inc
push
ret
push
iret
and
mov
es
push
sbb
out
std
jmp
enter
ds
repnz
mov
mov
cmp
sbb
jg
bound
push
inc
loope
pop
jns
xor
or
inc
rorl
and
dec
fldl
dec
xor
jo
xchg
fldenv
add
adc
out
ficomps
dec
cld
xor
sub
mov
icebp
sbb
stos
mov
jl
insl
cmp
lods
aas
pop
fstpt
pushf
das
cwtl
dec
pop
push
aas
pop
ds
pop
loop
push
mov
xchg
sub
imul
push
push
cmp
jge
das
mov
mov
lcall
faddp
int
in
add
mov
enter
pushf
mov
out
js
adc
sub
cmp
cmc
jne
sahf
test
adc
xor
push
fwait
imul
pop
jbe
lea
aad
bndstx
push
mov
rcrl
lret
bound
cwtl
rcrb
mov
loop
in
pop
lret
xor
shll
inc
xor
inc
or
in
add
xor
or
push
jae
xchg
enter
mov
push
mov
int
adc
adc
fisttpll
mov
xchg
push
stc
cmp
incb
pusha
pop
out
add
dec
add
arpl
mov
add
stos
fildll
insb
adc
inc
and
jge
insl
lcall
adc
lahf
adc
fadds
lods
xor
jp
in
inc
mov
cmp
jno
dec
stos
or
pusha
adc
hlt
jae
push
ret
shlb
iret
enter
pushf
pop
pop
popf
idiv
popl
ret
fwait
jne
clc
aaa
not
nop
loopne,pt
xor
flds
push
les
inc
mov
cmp
leave
aad
loope
leave
testl
fidivrl
stos
mov
dec
xchg
or
or
data16
sub
push
call
lcall
jbe
push
inc
push
xchg
inc
mov
jg
mov
lods
xchg
cmp
dec
push
push
pop
pop
cld
fstps
jecxz
xchg
mov
dec
rclb
inc
sbb
in
out
cmp
mov
neg
push
push
sub
jns
out
in
jnp
or
xor
in
xor
jg
fucomi
fcompl
xlat
pop
mov
icebp
and
dec
jg
push
push
mov
or
test
inc
daa
xor
pusha
and
sub
test
sub
pop
insl
and
mov
push
dec
mov
out
push
push
aam
mov
push
sbb
jnp
adc
sarb
arpl
std
shlb
jp
push
cltd
and
sbb
ss
into
in
pop
decb
jge
jne
or
adcb
leave
mov
test
mov
bnd
push
lock
inc
mov
sbb
adc
pop
inc
inc
xchg
loop
pop
gs
push
push
pop
test
jp
cmp
jmp
test
das
cli
xchg
mov
or
aad
shlb
and
out
and
inc
mov
mov
lret
mov
je
movsb
pop
mov
xchg
rcll
mov
out
lret
sbb
or
jne
cltd
mov
or
inc
daa
movsl
inc
shr
test
xchg
scas
bts
dec
mov
jecxz
call
les
mov
cmpsl
push
xchg
xchg
daa
mov
jmp
sbb
aas
iret
inc
mov
insl
xchg
clc
ficomps
or
and
cmp
xchg
aaa
sub
dec
in
push
mov
lods
push
scas
jg
xchg
ss
jb
idiv
pop
sbb
iret
pop
loope
pop
xchg
icebp
stos
aaa
xchg
fs
add
pop
mov
adc
ss
test
mov
pop
lods
cmp
dec
lods
dec
fsubs
cmp
outsl
sahf
ror
leave
dec
stc
addb
into
or
add
sub
mov
leave
test
mov
xorb
cmp
push
mov
lahf
sub
stos
pop
cwtl
mov
lcall
orl
mov
dec
or
test
ds
mov
movsb
ret
mov
inc
ret
loop
push
inc
mov
gs
subb
push
jle
mov
adc
xchg
dec
mov
cmpsb
insb
jns
and
test
stos
push
push
sub
clc
sbb
leave
push
rclb
and
sti
sub
xchg
out
enter
testl
es
stc
lahf
lods
repnz
mov
xor
fcompl
or
rcll
and
cmp
inc
sarb
out
mov
add
and
loopne
data16
inc
push
adcl
movsl
and
xchg
jb
add
pop
or
cltd
cmp
testl
cltd
sbb
mov
mov
and
js
lds
sbb
push
loop
icebp
mov
bound
push
xor
inc
push
mov
pop
lea
repnz
push
push
sbb
jmp
and
leave
into
mov
mov
inc
sub
and
cmp
in
sub
add
push
gs
mov
pop
je
addr16
add
jne
in
fbld
push
movsb
nop
add
push
scas
popa
js
int
jp
leavew
popf
shll
aam
orl
xchg
or
mov
pop
mov
inc
mov
xchg
and
xor
xor
mov
insl
inc
rcrl
push
mov
pop
ficoml
ja
and
mov
iret
data16
pop
test
xchg
xchg
leave
mov
shr
int3
jne
jp
cs
or
xor
ret
and
stc
push
cs
jge
push
jo
mov
sub
or
inc
fs
adc
popa
inc
jl
mov
mov
sub
fwait
pop
pop
in
jnp
shll
enter
push
shlb
sbb
out
adc
stos
add
push
and
dec
mov
call
or
int3
out
lret
js
xchg
sub
clc
mov
mov
dec
dec
lock
mov
xchg
or
outsl
push
js
cs
adc
or
insl
or
mov
hlt
jl
aad
push
ss
adc
inc
mov
pop
cwtl
scas
mov
push
daa
fisubrs
and
rclb
adc
push
iret
pop
stos
aam
push
roll
insb
and
pusha
fildl
popf
test
pop
pop
jae
fnsetpm(287
mov
iret
and
xchg
xlat
js
adc
fs
xchg
lds
imul
test
cmp
aaa
insb
fs
in
xchg
and
xor
out
mov
jnp
aam
gs
inc
shr
rolb
cltd
push
and
inc
lahf
shlb
xchg
mov
mov
js
mov
cs
rcrl
add
dec
inc
jg
pop
xlat
fmull
xchg
idiv
jl
xor
cmpsl
dec
mov
mov
data16
cmp
jecxz
add
je
mov
int3
dec
push
outsb
or
push
inc
insl
xchg
mov
sbb
jge
mov
ja
sbb
ret
out
mov
int
add
push
push
call
ret
cmp
push
and
mov
cli
push
jae
and
shrb
gs
or
iret
les
lods
dec
dec
ret
testl
rcrb
jae
sub
cmpsb
and
adc
cwtl
jp
imul
push
int
push
lret
mov
pop
pop
push
cmp
cmp
mov
fsubs
pop
insb
sbb
sub
pop
lods
fistpl
and
rcl
push
imull
mov
xor
cmpsl
loop
mov
push
mov
inc
push
into
and
push
out
lea
xorl
xchg
xchg
or
rcll
jl
mov
mov
and
mov
rcll
mov
inc
mov
mov
fbstp
inc
mov
lcall
cmp
insb
nop
cmpsb
and
push
push
adc
jle
jnp
fnsave
das
fmuls
dec
repz
pushf
xor
jb
or
sti
jecxz
push
mov
push
in
push
out
shlb
or
lcall
mov
inc
ret
cmp
popf
push
push
xchg
pop
adc
pop
inc
adc
push
outsb
aas
shl
rorb
mov
push
lock
sub
cs
or
sbb
mov
mov
and
clc
add
inc
jne
pmuludq
jmp
loope
stos
cmpsb
and
mov
fsubl
gs
and
leave
add
nop
jnp
rcrl
mov
push
stc
pop
fsubr
xchg
gs
dec
es
sbb
imul
jno
mov
insb
and
clc
push
mov
ds
push
inc
pushf
push
and
mov
jae
into
sbb
frstor
pop
push
rorl
xchg
inc
xor
mov
cmc
mov
pop
xchg
lds
int
int3
out
dec
ret
pop
add
pusha
in
add
pop
inc
js
hlt
jmp
jmp
inc
sbb
push
bnd
inc
into
xor
and
lret
sub
mov
cmp
lods
add
inc
mov
imul
inc
stos
or
inc
mov
mov
push
invlpg
and
xchg
mov
fstpl
mov
repz
int3
mov
lret
daa
lret
repnz
outsb
out
jl
in
xor
mov
fs
aas
scas
or
xchg
shl
xor
mov
cmp
mov
pop
push
ffree
sub
das
and
xor
aaa
inc
test
pop
cmp
mov
loopne
not
repz
mov
jno
or
pop
xorl
shlb
mov
adc
sbb
xchg
mov
adc
lahf
insl
xchg
pop
loopne
shrb
out
lahf
shrl
jo
add
xor
or
add
jmp
cmpb
or
mov
xchg
popf
cs
or
sub
and
and
pop
xchg
mov
adc
mov
pop
dec
jne
jno
test
movsl
adc
push
rcrb
xor
test
push
fldt
adc
iret
and
pop
fsubl
inc
scas
xchg
xchg
sbb
xchg
imul
dec
adc
and
push
jno
mov
les
icebp
lea
gs
popa
lret
adc
jp
lods
stos
scas
mov
mov
data16
and
mov
add
cld
jle
movsl
scas
mov
or
enter
add
mov
sti
fdivl
dec
sarl
shlb
xor
adc
jmp
adc
lea
loop
pop
inc
icebp
mov
xor
cmp
mov
clc
fimull
in
fsubrl
subb
cwtl
pop
push
mov
jns
mov
jno
adc
mov
aas
dec
mov
xchg
int
jb
outsl
js
mov
dec
add
add
xchg
mov
pop
enter
inc
sub
aam
xor
push
test
mov
stos
idivb
fadd
pop
inc
pop
jo
xor
aas
daa
or
rorb
fbld
xchg
in
rolb
mov
dec
inc
test
push
daa
sbb
das
pop
adc
cmp
int3
push
cmc
mov
scas
push
rcrl
jnp
pop
sub
loop
jge
enter
pop
inc
jecxz
mov
in
loop
jae
das
je
repnz
scas
ret
mov
cs
push
pop
xor
hlt
push
mov
les
lods
aas
xchg
add
ds
sahf
scas
sub
mov
or
xchg
bsf
outsl
inc
inc
push
xor
loopne
cmp
mov
idivb
js
adc
cwtd
xlat
addr16
pop
lret
push
int3
mov
es
sti
outsb
cmpsl
push
aad
add
pop
movb
cmp
mov
andb
adc
push
mov
cmp
add
data16
mov
es
mov
pusha
push
lcall
fildll
mov
sti
pop
sub
icebp
xchg
icebp
loop
jb
push
in
cltd
mov
pop
push
adc
cmp
cmp
inc
loopne
scas
add
cmpsl
lea
jb
mov
and
pop
xchg
add
or
into
enter
nop
xchg
loop
dec
adc
jecxz
sbb
mov
mov
add
sub
mov
mov
rclb
jno
jecxz
jecxz
dec
push
xchg
inc
in
inc
adc
push
andl
sti
jmp
or
or
idiv
mov
shll
aad
movsl
in
sbb
scas
adc
fwait
je
and
xor
jecxz
mov
pop
outsb
das
bound
lods
or
xor
cmp
xor
out
lock
mov
and
dec
mov
mov
sub
adcl
les
js
mov
jnp
into
and
pusha
dec
shrb
mov
fwait
jnp
push
loope
add
mov
lea
dec
add
jge
adcb
nop
mov
xchg
mov
and
jge
fisubs
das
aam
ss
mov
mov
negb
hlt
pop
push
in
mov
and
pop
insl
adc
movsl
mov
adc
mov
jmp
popf
ja
adc
cmp
movsb
inc
push
push
jl
fldt
inc
or
adc
outsl
sub
shll
inc
cld
or
mov
aam
mov
mov
stc
fwait
or
mov
testb
adc
cwtl
and
fidivs
lock
cmpsl
flds
and
pop
jl
sbb
les
ss
push
jg
leave
pop
xor
xor
sahf
icebp
dec
jge
or
fistps
push
xorl
inc
insb
fidivrs
in
xchg
jns
adc
cmp
mov
push
sub
sub
out
mov
cmp
or
das
loop
test
and
sbb
imul
jl
pusha
lcall
inc
xor
shlb
push
mov
loop
into
imul
xchg
xor
orl
and
sahf
xchg
or
and
stos
mov
cwtl
popf
in
fmull
sbb
sbb
clc
add
clc
cmp
imul
movsl
mov
inc
jle
popa
cli
ds
lds
into
xchg
inc
push
insl
pop
xor
shl
inc
rcrl
clc
adc
mov
vmread
clc
aas
aaa
fcoml
js
jae
popa
push
cld
cld
or
fsubs
mov
xlat
xchg
add
mov
jne
jmp
out
stos
mov
mov
inc
aaa
cmpsl
movsb
add
or
das
pop
and
mov
xchg
jp
push
imul
sub
push
fs
jne
push
xor
inc
nop
insl
fistpl
adc
inc
xchg
add
mov
inc
and
add
je
pop
mov
incl
pop
lahf
mov
sbb
mov
mov
mov
or
lods
ret
aaa
xor
loopne
mov
in
cwtl
lods
int3
loope
in
adc
sbb
mull
sbb
sbb
out
shlb
setge
popa
add
cld
imul
movl
xor
inc
mov
stos
rcll
pop
fsubs
outsl
mov
xchg
jge
xchg
sub
sbb
mov
fadd
cmp
or
adc
cwtl
sbbb
dec
and
jge
or
sbb
enter
push
jbe
adc
jl
jae
enter
jnp
xchg
loopne
add
arpl
add
dec
test
dec
mov
inc
cs
mov
and
insb
fmull
cmc
out
adc
mov
jb
repz
call
cmp
mov
pop
add
add
subb
sbb
adc
daa
sub
push
push
cmp
mov
scas
xor
dec
loop
movsb
mov
or
or
xchg
cwtl
int
dec
shl
fildll
aam
decl
pop
pop
iret
cmp
loope
dec
outsl
fwait
mov
mov
fstpl
sbb
das
and
mov
jbe
stos
outsb
in
pop
adc
out
xchg
push
xor
pop
sbb
xchg
and
jmp
pop
orl
cmp
dec
add
push
addr16
pop
mov
mov
pop
xchg
mov
and
shll
or
pop
cmp
and
negl
aas
mov
test
shlb
jno
mov
mov
cmp
gs
sti
aad
cmpsl
xchg
das
jno
xlat
pushf
push
nop
sahf
mov
daa
scas
negl
adc
mov
mov
adcb
ret
jmp
sahf
cmp
aad
lea
pop
and
jb
xchg
mov
inc
nop
aam
les
cmp
test
mov
ja
sub
push
hlt
pop
xchg
pusha
gs
ljmp
outsl
cmp
inc
scas
push
mov
add
pcmpeqb
adc
in
pop
adc
lret
orl
sbb
mov
movsl
mov
cmc
pop
aas
mov
ja
adc
xorl
into
fwait
or
out
repnz
mov
inc
ror
nop
test
jnp
jbe
mov
repz
adc
sub
sti
xchg
roll
xor
pop
cmpsl
jno
insb
push
push
testl
cld
pop
mov
jae
mov
or
cmp
sbb
pushf
inc
xor
in
or
or
repnz
icebp
je
cs
ja
pop
sub
or
cmp
andl
adc
and
ljmp
sti
pop
or
aam
or
sub
pop
popa
aaa
xchg
jle
xlat
jmp
xor
arpl
mov
mov
adc
cld
inc
inc
and
int
gs
or
jmp
js
or
scas
or
xchg
pop
dec
mov
or
add
adc
and
arpl
mov
jo
ja
jmp
dec
loopne
sub
inc
inc
inc
scas
cld
mov
mov
and
sub
xchg
add
add
and
arpl
xchg
js
mov
push
push
sbbl
ljmp
adc
dec
in
xor
loop
add
daa
xor
stos
das
daa
inc
inc
repz
jno
pop
pusha
in
xchg
jg
mov
and
call
xchg
xchg
xchg
cmp
mov
ficompl
mov
sub
scas
idivl
fdivrs
add
sub
clc
repnz
jecxz
inc
mov
sub
mov
xor
shlb
test
sub
popf
mov
push
insl
mov
dec
repnz
fwait
jne
out
or
sbb
and
add
xchg
adc
mov
paddd
xchg
outsl
loop
inc
insb
adc
add
pusha
movsb
pop
outsl
mov
in
pushaw
pop
out
adc
mov
jg
cmc
add
cmpb
xchg
adc
push
push
imul
lea
cmpsb
cwtl
sub
addr16
hlt
xchg
or
bound
cwtl
mov
pop
sub
arpl
cmp
stos
inc
jnp
add
sub
push
ljmp
inc
pop
lcall
pop
imul
cmp
sahf
pop
std
stc
neg
data16
sbbl
cmpsb
pop
mov
ret
xor
fidivs
add
cmove
ss
stos
mov
dec
push
jae
pop
out
dec
into
pop
mov
fwait
hlt
inc
mov
jge
cmpsl
xchg
jb
data16
xchg
push
jg
and
jnp
mov
xlat
cmp
les
lret
push
and
ror
xchg
aas
or
sti
in
shr
popa
pop
lcall
fs
aas
xlat
or
dec
out
icebp
hlt
jb
inc
and
popf
fstl
jne
cmp
flds
mov
mov
jp
ret
stos
lret
or
std
enter
cmpsb
rorl
mov
or
popf
add
add
add
aam
sub
ja
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pushf
das
outsb
add
das
outsb
add
lcall
